divb
in
mov
mov
rorb
add
add
out
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
sub
rol
jo
mov
push
mov
xor
push
mov
call
pushl
fwait
mov
enter
push
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
xorw
push
adc
cwtl
or
lock
fcomi
sub
dec
shlb
in
or
loope
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
call
and
cmp
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
mov
xor
test
or
sbb
push
lock
or
inc
scas
stos
imul
dec
out
jge
test
mov
pop
jne
aad
imul
cmpsl
jnp
cmp
data16
mov
dec
pop
push
insl
sbb
pop
cld
add
push
push
push
iret
bound
lds
aaa
jae
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
mov
js
sti
mov
mov
xor
mov
pop
ret
arpl
ret
add
pop
roll
pop
imul
sarl
pop
pop
dec
add
clc
sub
mov
enter
push
push
ss
loopne
jmp
fs
xor
jne
pop
adc
fdivr
mov
adc
jg
mov
adc
int3
adc
adc
ret
shrl
jge
pop
add
lock
pop
outsl
jmp
in
sub
xchg
sbb
push
decl
push
mov
sar
xor
cmp
ja
adc
add
sub
add
push
movsb
inc
xor
adc
nop
xchg
push
jo
addb
add
scas
cmp
loop
lds
iret
jle
mov
cmpl
lds
jle
push
filds
ret
add
jge
std
xlat
mov
sbb
or
jmp
cltd
sub
ja
fcmovb
shr
enter
mov
mov
sub
dec
push
add
cld
sbb
cmp
jl
cmp
jne
pop
mov
inc
pop
mov
mov
mov
push
jbe
mov
hlt
out
jne
rorl
mov
mov
or
adc
push
lea
cmpl
fld
push
xor
into
mov
mov
mov
cmpsl
sub
cmp
cmp
cmpsl
mov
in
scas
xor
fsubrs
mov
jg
cmpsl
rcrl
mov
mov
xchg
or
test
jle
dec
popa
outsl
or
push
call
sahf
mov
add
or
icebp
in
pop
pop
fwait
push
pop
sub
jg
decl
ja
mov
inc
jecxz
jns
mov
loop
pop
mov
inc
addr16
aam
sbb
sub
or
ret
andl
ret
and
mov
adcb
idivb
jmp
hlt
jg
pusha
andb
cmp
sub
mov
notb
hlt
movlhps
hlt
mov
insb
idivl
jle
mov
out
clc
adc
cmpl
je
push
cmp
cmp
jae
addl
sub
mov
or
add
inc
push
sub
jb
pop
add
xchg
pop
std
notb
sub
ret
lea
ljmp
lcall
inc
push
push
push
push
rclb
rcrl
mov
jmp
xchg
jmp
inc
or
addb
mov
pop
es
and
and
inc
sub
jo
cmp
aad
aaa
stos
rcrl
add
or
pop
or
fbld
cmp
push
mov
lea
cmp
jne
push
push
mulb
clc
push
push
adcb
js
push
mov
mov
or
pusha
enter
pop
pop
rclb
iret
rcrl
push
stc
inc
fdivl
cmp
stos
xchg
out
xlat
jge
movl
mov
add
jae
iret
xchg
add
out
add
pop
fstpt
mov
add
mov
sbb
xor
mov
pop
mov
sti
push
or
cwtl
push
push
xchg
out
sti
imul
mov
loopne
in
dec
push
push
cmp
sbb
mov
std
stos
or
adc
je
push
adc
loopne
test
push
sbb
sar
inc
inc
inc
or
or
fildll
lea
dec
push
xor
sbb
pop
mov
xchg
pop
push
jmp
dec
fwait
fs
add
sbb
pop
jae
jae
push
add
les
inc
push
dec
pop
xchg
push
out
or
iret
popf
lea
push
add
push
mov
cmp
outsl
fwait
xor
pop
cmp
sub
mov
ja
sub
mov
and
push
scas
mov
aaa
cmp
push
sbb
addr16
push
cmp
push
inc
cmp
je
call
sub
outsl
sbb
cmp
in
jne
sbb
sbb
in
jp
jecxz
jo
pop
mov
add
into
xor
jb
cmp
repnz
cmc
or
sub
test
fsub
mov
aam
jp
or
mov
mov
mov
jecxz
std
jle
mov
cmp
adc
jge
xor
jno
add
or
inc
lea
or
rcr
lcall
clc
push
or
roll
or
add
adc
or
sub
pusha
mov
cmp
mov
shlb
dec
or
push
or
ds
fisubs
scas
ljmp
or
push
mov
xlat
push
xchg
sbb
fsts
jno
cltd
sbb
icebp
stc
lcall
pushl
push
mov
out
add
jp
sub
mov
sbb
mov
ret
shrl
adc
pop
inc
xlat
add
add
pop
or
or
ret
je
dec
je
ret
jns
sbb
adc
or
adc
and
shll
js
hlt
or
pop
adc
and
iret
jo
mov
rcll
inc
fmuls
ljmp
ljmp
mov
push
add
shr
mov
cli
xor
fadds
mov
xchg
jmp
adc
pusha
pushf
pop
cmc
mov
call
push
xor
cmpsl
xchg
mov
in
aaa
pushf
or
mov
jae
mov
sarb
fisttps
inc
xchg
and
aas
mov
dec
mov
cmp
js
sub
out
sbb
push
sub
or
sub
js
and
fwait
or
fcoms
cmp
popa
add
roll
in
dec
dec
lock
fldl
pushl
dec
in
loopne
out
neg
sbb
inc
inc
pop
xlat
sbbb
mov
mov
or
cmpb
fiadds
sbb
push
cltd
adc
cmpb
jbe
movsl
push
popa
negl
pop
fildll
das
pop
sahf
jmp
sbb
call
or
test
sbb
loopne
xlat
repz
lea
cmp
sbb
adc
aaa
pop
mov
push
lret
mov
push
xchg
xorl
xchg
ret
pop
adc
test
clc
mov
fstpt
aas
pop
mov
xchg
out
cld
cmp
jl
or
dec
jl
mov
push
xor
cmp
sahf
dec
inc
push
fs
or
sbbl
mov
xchg
into
scas
push
pusha
nop
mov
and
xor
sti
xor
pushf
sub
mov
xor
or
daa
inc
fs
xchg
add
jo
mov
push
in
jae
nop
out
cwtl
adc
adc
mov
scas
adc
vdivps
lahf
xlat
lea
push
push
or
mov
xor
sub
xchg
jl
push
inc
subl
or
xchg
xor
rolb
xchg
xchg
cmpsl
stc
sub
jmp
mov
js
dec
jl
dec
in
or
mov
mov
ljmp
divb
fnsave
scas
xor
mov
cmp
call
push
push
pop
inc
lods
jo
loope
add
shlb
mov
or
sbb
outsl
lea
insl
cmpsl
flds
add
in
jl
xor
in
jne
push
mov
mov
pop
repnz
je
or
push
mov
inc
and
add
sub
sbb
xor
loopne
jno
les
mov
pop
pop
add
jne
xchg
inc
jmp
fabs
ret
push
xor
mov
mul
aam
jge
decl
inc
setno
xchg
test
out
add
enter
loopne
movl
lock
mov
mov
push
aaa
cmp
inc
xlat
or
jp
dec
adc
mov
and
shlb
bound
adc
xchg
in
push
and
push
or
ljmp
frstor
add
add
add
fldt
pop
sbbb
in
testb
xchg
in
push
sarb
pop
push
movb
stos
jo
xor
mov
and
mov
adc
jmp
stc
jle
dec
test
mov
pop
push
fldcw
push
pop
jno
idivl
je
push
fimuls
ja
and
cmp
pop
inc
je
or
test
or
xchg
mov
mov
dec
cmc
jo
sbb
imul
enter
add
out
das
lock
push
enter
lods
lods
add
in
fmull
and
or
add
inc
repz
daa
outsl
mov
js
insb
das
loopne
push
mov
dec
cmp
in
cmp
adc
sub
ljmp
sbb
fdivp
cmp
add
out
data16
xchg
jge
out
sti
lock
shlb
cmp
adc
mov
sarb
pop
adc
mov
adc
arpl
movsb
xchg
and
cmp
movsb
xchg
out
mov
adc
fwait
rol
aam
push
test
dec
inc
pushf
pushf
and
ret
mov
mov
xchg
sbb
dec
inc
xchg
xchg
hlt
inc
cmpsb
in
movsb
int3
sbb
int3
in
lret
inc
enter
mov
and
rol
push
repnz
rol
in
lret
cmp
pop
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
aas
add
testl
cwtl
arpl
pop
mov
push
sub
fstp
push
loopne
iret
and
xchg
outsb
inc
sbb
aaa
xchg
add
ret
mov
test
jo
ss
je
sbb
loop
fstp
push
jmp
cs
push
xor
sbb
or
mov
and
add
adc
add
adc
or
in
loopne
add
inc
mov
ret
jle
clc
in
mov
in
andb
je
test
lods
imul
push
push
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
ds
ds
add
cmp
or
jl
or
lea
push
leave
aad
lock
jne
fildl
xchg
pop
pop
push
jmp
push
xchg
ret
leave
xor
leave
pop
jmp
adc
adc
jle
imul
test
scas
fadds
xchg
dec
mov
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
pop
jbe
and
jl
mov
sbb
or
cwtl
fs
sub
btc
lret
adcl
in
fildl
mov
inc
test
adc
inc
adc
leave
adcb
jno
shll
sbb
jne
fidivl
es
into
adc
dec
cmc
xor
inc
adc
xchg
dec
mov
push
add
add
cmc
dec
push
inc
mov
call
inc
lret
insl
xchg
pop
push
js
dec
sbb
test
mov
mov
lock
fistpl
jne
jo
or
sbbb
inc
sbb
or
jb
push
cmpsl
scas
cmp
cltd
outsb
clc
popf
jl
in
in
loopne
cmp
pop
add
push
sahf
les
xchg
fbld
add
pop
nopl
xchg
and
popa
pop
xlat
sbb
mov
maskmovq
idivl
imul
loop
clc
add
xlat
outsl
or
je
xor
push
push
or
mov
or
iret
xchg
mov
pushw
mov
nop
or
adc
pop
dec
movsl
and
jecxz
or
scas
mov
add
clc
inc
popw
add
lods
mov
hlt
int3
or
aaa
cmp
jl
xor
and
fstpt
sbb
out
test
hlt
je
pop
sahf
loopne
push
push
pop
ljmp
test
int
inc
pusha
lock
adc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
and
push
xor
sub
push
and
js
lahf
bound
adc
xlat
and
sti
add
pop
sub
cmp
popf
pop
mov
cmpsl
and
xchg
movsb
std
daa
inc
div
fdivrl
and
cwtl
and
je
aas
incb
add
push
or
jo
jmp
fsubrs
push
fdivrs
aam
stc
scas
xchg
sbb
sub
push
sbb
sub
sub
inc
imul
sub
jno
jno
or
ss
inc
stos
inc
dec
inc
lret
ret
test
lret
or
xor
mov
cmpsl
jne
mov
add
add
and
inc
pop
xor
cwtl
push
insb
stos
xor
frstor
ss
pop
insb
adc
repnz
rclb
lods
mov
jo
xchg
and
push
test
add
test
jo
mov
pop
lcall
sbb
adc
jecxz
dec
sub
adc
fcomps
lret
push
push
outsl
xchg
in
test
ficoms
or
sub
add
rclb
in
inc
jo
mov
mov
mov
push
mov
sti
sbb
sbb
mov
pop
fmull
fadds
mov
push
pop
and
or
loopne
add
add
sahf
inc
popf
cmp
or
jmp
dec
cmpsb
inc
das
sub
in
call
stos
dec
enter
mov
add
enter
popw
cs
bound
xchg
add
dec
mov
call
mov
insl
sbb
xlat
push
inc
jb
cmp
cltd
mov
std
fdivs
addl
outsl
inc
xor
pop
out
jmp
mov
in
inc
cmp
inc
mov
mulb
add
or
xchg
stc
pop
call
xor
ficoml
enter
sbb
pop
add
pop
cmp
daa
pop
cmp
cmp
jne
and
test
and
fadds
or
mov
int
or
cmp
ficomps
test
mov
jne
bound
shrb
push
bound
popf
fildl
js
mov
xorl
mov
addr16
punpcklwd
mov
ret
add
fs
jo
fwait
xchg
mov
loop
push
jo
mov
in
and
mov
adc
lods
add
push
je
nop
out
mov
jnp
adc
pop
dec
mov
jge
adc
je
cmp
jge
push
push
jp
mov
mov
add
inc
mov
mov
add
lock
sub
test
pslld
push
sub
call
sub
das
mov
shlb
xchg
adc
inc
in
mov
aas
mov
sub
jmp
cmp
or
shll
dec
enter
xor
pop
add
lock
mov
jmp
mov
stos
lock
jl
push
mov
add
xor
loopne
sub
add
es
scas
push
adc
push
mov
js
pop
lret
cmpb
push
push
movsb
adc
rolb
cmp
mov
cmp
inc
dec
jns
cld
push
or
cmp
sbb
add
mov
daa
sbb
or
movsb
loopne
mov
adc
dec
das
xchg
jbe
jle
xchg
inc
out
or
pop
or
sub
cmp
xchg
mov
add
icebp
les
cmp
pop
in
negb
jne
or
je
sub
das
add
cld
jo
in
sti
loopne
jg
popa
or
int3
cli
jo
inc
hlt
xor
and
lock
faddl
sbb
adc
pop
pop
test
mov
ret
orb
ret
rcr
out
out
jne
or
popa
cmpsl
push
out
xchg
cmp
mov
loop
test
call
call
rolb
sub
arpl
cmp
lahf
je
sub
jmp
push
sbb
rcrl
insb
inc
fsub
push
out
inc
out
test
inc
lock
push
add
xor
mov
mov
imull
cwtl
lods
loope
lds
ret
jno
inc
stos
orl
cmpsb
push
add
push
xor
push
push
or
jg
mov
cmpsb
mov
les
or
test
repnz
cmpsl
mov
rorb
rolb
sbb
fdivr
or
xor
xor
in
rorb
mov
mov
jnp
and
lock
dec
dec
je
sub
jmp
jge
cli
adc
push
inc
push
mov
jmp
lock
mov
jg
or
fwait
mov
xlat
pop
xchg
adc
push
rclb
xchg
icebp
inc
and
inc
inc
inc
insl
sbbb
mov
aad
mov
je
lock
mov
mov
xor
inc
mov
sarl
jl
lods
push
dec
cmp
adcb
push
aaa
fs
push
pavgw
jle
enter
jno
fwait
sbb
push
or
lock
jecxz
push
mov
orb
movl
cmp
loopne
fisttps
cmpsl
or
in
add
sarb
add
inc
sbb
sbb
imul
outsb
fadd
sbb
sbb
xchg
add
jle
ret
scas
pop
lea
add
psubd
in
ret
sub
shlb
out
inc
cmpl
push
push
jne
aaa
or
push
jo
jnp
into
in
inc
xchg
in
jp
lock
stos
xor
cltd
mov
rcrb
test
or
sbb
or
scas
fcmovnbe
mov
insb
mov
cmp
mov
push
fistl
sbb
dec
pushf
in
inc
out
cmp
ds
inc
cmp
cmpl
jne
add
mov
cmp
jle
cmp
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pushf
loopne
mov
mov
jmp
push
pusha
mov
dec
fcomps
shll
push
sti
cwtl
test
aam
fmuls
or
loopne
or
push
mov
inc
loop
cmp
nop
or
push
addb
pop
adc
scas
fdivr
mov
cmp
cli
in
mov
jbe
mov
rorl
or
in
pop
stc
and
scas
in
lret
mov
cmp
inc
mov
scas
sbb
jno
testl
nop
inc
xchg
and
mov
fmuls
test
test
pminub
jb
sbb
lods
ret
push
push
call
and
rorl
cmpb
mov
fs
add
inc
and
addr16
mov
rcll
clc
add
mov
cwtl
lock
jo
out
mov
enter
lds
or
push
jl
add
test
je
push
pusha
mov
pop
or
mov
dec
iret
mov
add
inc
mov
adc
add
dec
push
and
pushf
int3
push
pop
xor
mov
hlt
dec
mov
adc
mov
fcmovnu
into
lods
adc
rclb
sbb
mov
das
das
das
fcoms
fsubrl
adc
mov
mov
lcall
inc
mov
pushl
call
mov
decl
shr
movzbl
push
adc
sbb
xchg
or
ret
push
ret
dec
mov
mov
cmp
in
stos
mov
cmpsl
jmp
sbb
pop
popf
cmp
ret
push
andl
test
insb
sbb
in
xchg
adc
push
gs
pop
xor
mov
sti
push
pop
jb
xor
loopne
pop
or
add
xlat
push
mov
fwait
add
xor
jmp
imul
push
add
push
push
jl
std
daa
mov
cmp
jg
mov
mov
jmp
add
gs
cmp
aaa
lds
pop
fldl
repnz
sbb
mov
inc
pop
adc
mov
mov
aas
mov
dec
jecxz
mov
or
popa
lea
xor
inc
je
aaa
outsb
sub
in
sub
sbb
subl
sbb
push
shlb
and
pop
jg
mov
ret
push
pop
jmp
mov
push
inc
ret
fdivrl
add
ss
arpl
and
cmp
je
cmp
in
add
imul
cmp
adc
test
push
adc
lock
xor
inc
cmp
jae
add
inc
hlt
lea
ja
pop
dec
cmc
add
je
call
push
mov
fildl
js
je
add
fiaddl
insb
sub
fcomps
cmpsb
lock
fnsave
std
or
scas
pop
hlt
add
jl
in
and
lcall
push
lods
ljmp
pop
cmp
jecxz
xor
inc
adc
clc
roll
loop
popf
into
popa
nop
add
mov
rcrl
pop
xor
adc
cli
lea
ljmp
push
push
cld
or
xlat
leave
into
sub
test
xor
out
xchg
add
leave
pop
in
push
mov
mov
mov
mov
adc
mov
aad
inc
js
jb
mov
mov
xchg
cltd
mulb
leave
js
inc
dec
hlt
jg
hlt
or
clc
or
push
sub
pop
pop
push
enter
lock
filds
and
add
inc
ss
mov
cbtw
scas
fdivrs
in
out
push
push
add
fdivs
mov
cli
adc
xchg
sub
jno
fdivp
add
adc
hlt
jl
repz
push
sub
push
in
enter
and
and
xor
ret
or
bound
xchg
popa
pop
add
fwait
mov
cmp
push
xchg
in
test
bound
push
mov
popf
jge
or
sarl
mov
adc
or
stc
push
cmp
push
and
mov
ret
je
mov
fdivrs
mov
jp
mov
sbb
movsl
sbb
test
pop
movsb
push
dec
sbb
ficomps
or
cmp
mov
or
add
icebp
sbb
rolb
test
xor
adc
cmp
fiadds
test
add
mov
movsl
or
sbb
out
aam
fadd
je
push
and
xor
scas
ljmp
insl
hlt
pop
mov
jb
ficompl
and
sub
and
adc
sub
jmp
icebp
jb
clc
push
pop
sbb
fs
jne
cmp
je
add
xor
inc
cmp
jmp
push
push
push
and
and
sbb
mov
ret
shlb
dec
and
xor
imul
or
xchg
rol
ljmp
addl
test
fisubl
adc
jbe
setne
shlb
shll
test
sbb
cmpsl
ljmp
mov
js
lcall
divb
psrad
mov
jnp
stos
pop
add
pop
sub
pop
inc
mov
add
push
push
adc
mov
pushl
movsb
jp
js
push
decl
loop
cmp
or
inc
add
add
jno
or
loope
lock
lock
mov
loopne
xor
adc
jo
adc
sti
mov
lods
jo
xlat
or
xor
inc
fcmovb
dec
pusha
pop
dec
push
call
add
mov
add
adc
arpl
push
jmp
cwtl
or
adcb
push
addr16
sbb
daa
or
popl
add
add
xor
pop
inc
enter
aas
push
xchg
xchg
call
cmp
mov
sub
sar
shr
mov
mov
or
adc
jb
xchg
xchg
clc
mov
enter
jl
add
insb
cld
cmp
lea
jbe
mov
push
call
pop
push
leave
inc
adc
adc
xchg
add
add
push
js
test
movl
in
add
stos
xor
ds
add
les
xor
push
xor
inc
bound
mov
outsl
roll
pusha
or
nop
sub
xlat
jecxz
add
add
test
cmp
and
lea
sbb
adc
lock
push
aad
popf
icebp
rclb
mov
mov
sbb
sti
inc
andb
andl
or
loop
sub
dec
lret
movsl
mov
lods
pop
xor
mov
and
sub
incl
test
push
jae
sub
pushf
mov
fldt
adc
add
cwtl
add
xchg
sbb
cmp
add
xlat
push
lds
dec
mov
mov
mov
call
jbe
mov
adcl
jns
mov
adc
test
jno
dec
es
lret
cmp
cmp
pop
jb
pop
and
adc
int3
and
add
and
imul
add
mov
and
clc
mov
stos
xor
inc
mov
into
cs
xchg
cmc
add
bound
jmp
or
leave
adcl
roll
enter
sbbb
in
je
sub
dec
dec
inc
dec
popf
pushf
and
mov
cmp
lea
pop
stc
inc
mov
mov
dec
push
push
pop
cmpsb
pop
or
add
sbb
dec
jbe
nop
and
stos
pop
cli
out
mov
xchg
or
fwait
hlt
and
and
dec
mov
stos
jns
jg
cwtl
push
inc
mov
push
pop
xorl
in
and
jbe
andb
adc
lcall
das
lret
cmp
shl
pop
lods
stos
lock
mov
loopne
pusha
scas
cmp
and
leave
and
clc
cmp
and
adc
in
xchg
adc
dec
adc
outsl
pop
pushf
test
push
push
mov
lock
mov
add
or
and
mov
sub
or
sbb
jnp
std
pop
pop
ret
mov
dec
mov
xlat
sbb
add
or
sahf
shlb
pop
dec
push
mov
adc
popf
lea
or
mov
outsl
or
xchg
adc
ja
test
mov
and
and
and
fwait
xchg
sbb
sbb
sbb
sbb
aaa
sub
cmpsb
push
add
push
mov
sbb
aam
movsl
notl
and
xchg
and
rcll
xchg
jae
fdivrp
movups
std
in
dec
sbbb
imul
stc
adc
cmp
popf
xor
sar
cmpl
cmp
push
mov
in
in
shrl
pop
negl
adc
popf
cmpsb
mov
add
cmp
add
push
adcl
push
jb
inc
js
pop
mov
mov
stos
mov
inc
arpl
aam
add
jbe
mov
loopne
aam
jmp
cmp
push
out
lret
pop
movsb
cmp
in
jne
jnp
loope
sub
dec
je
into
adc
in
jge
adc
push
push
pop
dec
ss
sub
mov
xchg
mov
movsb
jmp
ror
popf
sbb
jecxz
jne
cld
mov
sbb
jmp
push
add
push
mov
jmp
xor
or
lea
inc
inc
xchg
xchg
rclb
sub
jl
jno
fmull
mov
pop
push
mov
lds
lea
or
mov
mov
or
xor
or
stc
or
push
daa
pop
jo
xchg
out
pushl
js
push
jle
mov
xchg
pop
and
std
mov
jmp
mov
rcrb
xor
cmp
je
cmp
pop
jmp
movsl
imul
sti
jbe
jg
fldz
andl
and
dec
xchg
outsb
jmp
sbb
and
arpl
sbb
je
mov
or
ret
fstl
ljmp
pop
bound
jnp
negb
pop
push
insb
push
jg
mov
loopne
adc
sbb
jo
les
iret
clc
stos
mov
iret
xlat
inc
sbb
mov
mov
add
pushw
and
lock
sub
adc
pusha
lea
imul
sub
decb
lahf
rorb
fmuls
xchg
or
inc
repnz
out
push
or
xchg
xchg
pop
loop
lret
lahf
jne
loop
dec
xchg
push
dec
push
mov
pop
push
lea
jg
pop
push
push
push
push
add
push
lea
cli
mov
dec
cmp
and
cmp
inc
stc
and
lahf
nop
aad
inc
fcompl
test
cld
lea
lea
movl
dec
aam
inc
cmp
sbb
lds
adc
jbe
xlat
nop
lds
sbb
call
js
je
lea
jbe
sbb
push
aam
imul
push
push
dec
xor
movl
dec
sub
push
xchg
push
cltd
dec
push
jl
enter
daa
mov
xor
rcrl
sbb
movl
cmp
push
ss
push
inc
and
pop
shlb
xorb
bound
pop
push
jbe
insb
in
mov
add
lods
in
adc
push
dec
repz
cltd
adc
insb
inc
mov
or
jae
adc
or
push
pause
push
and
dec
fmuls
push
call
in
push
inc
and
mov
xchg
inc
or
xor
adc
inc
push
sub
data16
je
cmp
sbb
lea
testb
sub
mov
loope
aam
cmp
push
push
cmp
icebp
scas
add
hlt
mov
pushf
jl
imul
in
pop
mov
mov
lea
push
pop
in
jl
lcall
out
push
adc
or
shll
add
rclb
pop
mov
popa
aam
push
aam
das
in
xchg
mov
popa
pop
jne
int3
push
das
dec
imul
xchg
inc
jl
mov
or
add
jle
push
outsb
pop
jo
fcomi
inc
add
push
pop
fmull
fdivr
ret
lcall
fwait
adcb
scas
xor
adc
out
aas
or
int3
cmp
jne
push
sub
xor
bswap
or
pop
clc
js
mov
xor
pop
iret
je
lea
aaa
mov
rolb
mov
jo
add
mov
sbb
cmp
cmp
pop
pushl
call
push
or
push
ja
int
sub
stos
mov
iret
pop
shll
rol
shrb
les
inc
push
mov
lock
cli
loopne
or
adc
dec
lea
dec
push
push
push
mov
ret
push
and
jge
fidivs
lods
jne
sub
sub
in
dec
jmp
cwtl
pop
pop
subb
outsl
push
sub
outsl
dec
fisubl
in
cmp
push
mov
add
mov
inc
adc
dec
cmp
mov
mov
insb
add
or
push
mov
adc
jge
sbb
xchg
cmpsb
push
or
inc
inc
fcomps
in
dec
jno
jns
fsubs
add
cmp
dec
jg
out
enter
xchg
add
leave
add
mov
into
in
and
cmpsb
imul
cmp
push
pop
imul
negb
mov
lcall
clc
in
mov
sbb
and
push
push
out
cmp
out
add
cmpsb
adc
test
aaa
enter
jnp
adc
pusha
enter
mov
scas
daa
nop
mov
mov
xor
push
xlat
push
dec
sbb
adc
punpckhdq
xchg
or
imul
or
push
xor
adc
pop
xchg
mov
fldenv
neg
or
push
pop
mov
push
inc
loope
mov
mov
cld
pop
sub
cmp
jle
cmpl
jne
pushl
cmp
lock
jnp
sbb
push
data16
mov
fadds
je
outsl
cld
adc
scas
push
aam
mov
dec
fisttpll
add
int
add
add
das
jg
push
and
je
cmp
dec
into
jbe
mov
push
sahf
cmp
repz
add
js
lock
xchg
inc
add
jecxz
xchg
loope
popa
in
xchg
pop
jno
pop
push
mov
es
xor
sbb
push
jne
movb
jmp
cmp
sub
loop
jne
popf
movsl
fldz
xor
dec
pushf
inc
cwtl
push
pushf
xchg
jo
movb
push
jle
ret
dec
aas
mov
iret
addb
mov
push
cmp
out
and
sub
jecxz
or
test
sbb
lock
mov
and
test
mov
daa
rcr
mov
mov
into
xlat
ds
push
dec
or
adcb
dec
lods
push
stos
fsubl
stos
pop
push
push
adc
mov
xchg
fcoml
push
nop
pop
cmp
iret
push
adc
enter
ret
cwtl
cltd
lcall
sub
mov
int3
std
jmp
mov
or
push
push
fmuls
adc
push
iret
xor
rolb
cmp
add
daa
sbb
push
test
or
adc
dec
and
stc
mov
pusha
adcl
inc
sbb
mov
push
push
jns
popf
xchg
lret
jl
xchg
andb
das
or
fidivs
xor
fistl
and
sub
xor
mov
test
nop
aaa
mov
je
inc
cwtl
imul
outsl
inc
fldl
fmull
mov
outsb
out
push
loopne
push
push
aaa
movsl
addb
stos
inc
rcrl
pushf
mov
and
fiadds
in
dec
out
andl
xlat
ficomps
add
insb
pop
int
out
negl
popa
in
push
cmp
cmp
push
pop
je
push
popa
sbb
out
fadd
adc
mov
adc
fmuls
add
add
repz
xor
pop
lock
sbb
test
fiaddl
clc
test
or
rol
or
push
mov
xlat
push
adc
sbb
scas
mov
add
clc
dec
loopne
cmpb
xor
je
push
pop
lods
adc
pop
push
add
mov
push
jne
sahf
std
aad
cs
sub
push
push
mov
adc
addr16
sbb
and
repz
xchg
shrl
bound
dec
stos
add
fidivrl
push
cli
mov
xor
push
popa
sub
cmp
test
xor
call
mov
xor
push
popa
push
push
sub
sub
mov
jecxz
and
in
loope
sub
sbb
daa
out
into
inc
xorb
out
rorb
xorb
xor
mov
adc
pop
xchg
and
stos
movsl
ror
push
or
dec
mov
add
adc
jl
mov
cltd
mov
lea
push
ds
mov
dec
adc
sbb
aam
inc
or
cld
negl
add
cmp
jge
mov
data16
idiv
push
mov
mov
sbb
ret
xor
idiv
jg
and
add
jg
xor
fdivrl
out
or
stos
cmpsb
pop
cmp
xor
pusha
scas
mov
test
negb
xor
cli
jge
add
jne
and
mov
in
or
out
mov
pop
insb
xor
xchg
push
xor
sti
sub
add
mov
je
pop
sbb
mov
dec
push
into
jp
xor
mov
daa
pusha
js
pop
ds
jg
fs
stc
mov
movl
adc
insl
mov
ret
mov
lahf
xor
iret
push
negl
pushf
movb
sbb
hlt
fnstcw
dec
lea
sahf
jl
out
ds
xchg
sub
cmp
or
out
jg
nop
or
out
insb
mov
outsb
fildl
mov
test
jns
faddl
std
jnp
fdivl
xor
mov
fdivrp
mov
dec
ja
dec
sub
mov
mov
mov
pop
add
pop
add
in
xchg
xchg
push
xorl
out
add
push
popf
mov
cmpb
or
clc
adc
clc
fidivl
jmp
push
xchg
cli
jmp
or
mov
lock
jne
pop
pop
movb
push
jo
cmpsl
xor
mov
sbb
leave
xchg
jp
and
add
mov
hlt
or
shlb
pop
pop
cmc
push
inc
hlt
adc
lea
fsubs
add
pop
push
jbe
pusha
push
gs
fadd
lcall
inc
pop
scas
fs
and
ljmp
xchg
push
pop
stos
dec
out
push
pop
pop
into
pop
leave
cmp
jb
push
outsl
lds
cmp
call
mov
xchg
cmp
cltd
imul
dec
ret
push
test
inc
popf
sbb
or
xor
outsb
mov
fs
loope
pop
sbb
mov
pusha
jns
and
cmp
ret
inc
jne
sti
mov
pop
rorb
jmp
push
mov
and
adc
pushf
jo
in
pop
xor
shrb
sbb
sub
or
sbb
inc
mov
arpl
xchg
pop
in
add
push
push
lods
pop
pop
mov
or
into
mov
lea
leave
xor
out
push
push
cmp
mov
imul
inc
sub
setp
xor
popa
scas
jle
and
push
and
push
mov
push
bound
add
pusha
adc
pop
mov
scas
sbb
aam
and
mov
dec
popf
or
fs
ds
int3
pop
push
pop
in
sbb
xchg
jl
pop
popf
dec
dec
rolb
movnti
jmp
dec
and
xor
sub
push
jl
jns
push
cmp
lahf
in
and
sbb
mov
pop
sbb
imul
lods
mov
and
xor
mov
aas
sbb
inc
dec
jg
sbb
push
add
push
mov
pop
sub
clc
setb
test
rcrb
rorb
xor
test
xor
sub
andl
pop
or
jecxz
push
lods
aaa
orb
jle
je
push
fstps
imul
shlb
gs
lock
es
and
je
dec
mov
push
adc
inc
push
xchg
hlt
push
int
int
sub
add
add
shrl
inc
sub
xlat
mov
das
push
cmp
jb
pop
fwait
pop
add
inc
sub
cmp
mov
sbb
fwait
add
jo
stos
ret
fwait
bound
mov
aas
sub
lods
out
imul
sub
das
mov
bound
inc
loopne
das
xor
add
inc
inc
jnp
push
jmp
test
pop
lds
jl
pop
adc
icebp
test
push
pop
push
xchg
add
pop
int3
pop
in
dec
and
add
mov
or
push
add
add
sbb
adc
das
lea
out
sbb
cmp
js
leave
push
sub
cmp
dec
aaa
inc
add
dec
std
int3
push
mov
add
enter
adc
iret
add
sbb
push
and
cld
sub
sbb
inc
pinsrw
add
dec
out
adc
dec
mov
sarb
inc
mov
clc
pop
push
push
jns,pn
in
enter
cmp
fmuls
sbb
adcb
sbb
rclb
jns
popl
mov
ss
add
fdivr
xor
int3
add
and
pop
push
cwtl
add
pop
shlb
arpl
fidivs
sbb
mov
sbb
sbb
push
test
mov
add
mov
jle
stos
orl
cs
mov
addr16
lods
adc
push
sbb
lcall
mov
int3
mov
xchg
das
incl
into
cmp
into
cmp
mov
or
push
faddl
ds
jno
cmp
in
nop
jl
mov
popa
pop
push
push
outsl
inc
cmp
jnp
adc
push
pop
inc
push
mov
mov
in
pop
push
cld
dec
cmpsl
adc
cmp
push
jbe
mov
mov
inc
push
jnp
enter
popl
dec
push
jns
cmp
enter
out
xor
jne
mov
sbb
je
pop
xchg
js
arpl
sbb
xchg
pop
pushl
push
lret
sub
scas
mov
inc
in
ja
movb
decl
xor
jecxz
cwtl
ret
je
mov
sbb
scas
cmp
push
dec
mov
jmp
dec
mov
sub
out
mulb
mov
lcall
dec
add
testb
xor
jmp
cmpsl
xchg
sub
insb
push
js
mov
sub
leave
cmp
js
cmp
jge
mov
mov
mov
cmp
sbbb
pop
add
jle
call
jmp
push
pop
xchg
out
or
fsubr
sbb
fwait
or
fsubrs
out
test
sbb
enter
sbb
test
adc
ljmp
into
jbe
mov
cmp
in
mov
add
sub
incl
inc
sete
adc
loope
loopne
lea
sbb
adcl
mov
nop
arpl
cmp
pushf
lods
repnz
mov
cwtl
insl
dec
out
mov
add
sbb
and
inc
sub
ljmp
dec
shrl
ret
sbb
or
fcompl
add
movsl
mov
int3
jnp
loopne
sub
pop
push
roll
xor
cmp
adc
ret
lret
sbb
push
dec
lock
pop
sub
jmp
andl
cs
push
pop
push
insl
pop
or
or
mov
mov
mov
gs
aaa
bound
cld
negl
fcoms
ss
adc
std
fadd
pushf
cmp
push
xchg
push
or
insb
mov
sti
add
addl
adc
mov
add
out
cmp
push
jb
fdivrs
jne
hlt
adc
or
adc
mov
clc
mov
fsubl
in
adc
mov
or
das
lock
cmp
data16
repz
in
call
ja
fdiv
in
push
mov
and
xchg
lods
adc
sti
xorl
inc
pusha
fmuls
or
sbb
and
in
add
es
lock
fstpt
enter
or
mov
jge
and
inc
or
pop
or
push
insb
cmp
xor
cltd
or
testl
mov
jb
xchg
or
dec
insb
addr16
pop
xchg
sbb
jno
enter
jne
je
add
pop
mov
in
clc
sub
mov
test
add
dec
sti
lock
push
hlt
add
or
lock
adc
lods
sbb
xor
daa
hlt
xchg
pushf
add
popl
jle
std
repnz
add
add
clc
cld
sub
adc
cmp
std
dec
call
jge
cmp
jmp
aaa
adc
scas
pop
hlt
mov
out
or
sub
add
into
push
push
add
push
outsl
or
add
dec
fnstcw
add
adc
adc
sub
loop
push
mov
fbld
insl
inc
inc
in
jb
sub
fstpt
das
sub
jg
mov
pop
dec
add
add
jae
jb
xor
addb
pop
lods
dec
sub
xor
stos
test
enter
cmp
pusha
jno
sbb
pusha
push
push
js
push
sub
shlb
pop
repz
xor
xor
xchg
jg
pop
mov
movzwl
push
pop
aaa
xor
gs
cmp
dec
lods
jg
call
push
test
jp
push
rcll
or
call
pop
push
mov
adc
into
sbb
rcrb
jae
adc
pop
mov
add
or
pop
and
mov
sbb
sbb
pop
ss
push
push
fisttps
in
nop
sbb
fs
add
inc
cmp
mov
xor
orl
jl
mov
adc
mull
test
cltd
jge
sbb
jbe
mov
push
jge
dec
add
push
testl
cld
mov
out
adcb
cld
xchg
inc
icebp
xchg
inc
fldl
sbb
in
jbe
mov
push
bound
scas
or
push
cmp
loopne
icebp
sub
add
or
lock
mov
xchg
pop
aas
orl
xchg
adcb
sub
loope
jae
addr16
movl
dec
cld
ror
out
inc
stc
xchg
dec
sub
dec
sub
incb
data16
push
mov
iret
xor
arpl
dec
xor
inc
pcmpgtw
push
cmp
cmpsb
mov
xchg
sub
push
push
inc
leave
mov
jle
mov
adc
fldln2
icebp
jns
stos
jb
sbb
sarb
mov
mov
shll
inc
jo
push
or
mov
fwait
cmp
sti
inc
add
mov
xchg
add
push
sahf
loopne
decb
int3
jmp
mov
jp
sbb
push
divl
fs
adc
add
mov
dec
or
add
mov
imul
ljmp
inc
jb
subb
aam
rcll
iret
jo
popf
xchg
adc
les
inc
pop
mov
cmp
sbb
and
popa
add
out
repz
adc
daa
inc
jns
ljmp
popa
and
or
push
call
xchg
adc
push
adc
inc
sub
loope
push
inc
lret
pop
mov
inc
mov
cmp
lret
out
sub
jl
jmp
add
sbb
and
add
je
das
cmp
add
push
xlat
add
push
roll
adc
adc
or
mov
xor
lea
ljmp
dec
call
movsl
fldenv
lock
xchg
and
jecxz
jae
cmpsl
cmp
ds
in
sbb
pop
dec
out
in
jle
sbb
loop
mov
add
das
xorl
and
push
xchg
jb
scas
xchg
add
adc
cmp
std
flds
dec
sbb
fstps
push
or
bound
push
int
sbb
mov
sbb
inc
or
lcall
add
sbb
sub
call
nop
push
loope
xor
fidivrl
popf
orb
jl
xchg
ret
test
test
mov
xchg
dec
and
mov
xor
or
mov
push
aam
bound
out
xchg
mov
lea
sbb
jmp
fwait
mov
in
addr16
mov
xchg
test
repz
int3
inc
lcall
lret
cmp
push
outsb
scas
push
mov
cmp
xchg
dec
call
add
xor
ljmp
xchg
es
or
sbbb
mov
or
rclb
pusha
and
push
inc
add
addr16
push
adc
push
push
mov
jo
xchg
je
fistps
popa
fists
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
sub
push
add
mov
push
mov
stos
or
xor
shlb
popf
push
rorb
pop
xchg
cmpl
in
shrl
cld
add
inc
push
adc
popf
lds
or
repz
sbb
fistl
or
loope
lret
mov
mov
addl
nop
dec
jge
cmp
mov
aas
pusha
cmpsb
ficoms
pusha
pop
inc
push
dec
lret
xchg
adc
dec
xchg
xor
fidivs
cs
or
sub
js
jl
or
fstpl
or
push
hlt
pop
in
lea
loope
sub
ljmp
jmp
or
movb
mov
rol
push
test
js
and
push
insb
adc
in
mov
xorb
mov
add
pop
mov
mov
sarl
sbb
dec
call
and
or
add
inc
fldl
xchg
add
adcb
imul
in
or
mov
jg
rclb
ret
lea
cmp
jbe
mov
jl
pop
es
push
mov
imul
mov
sub
dec
lret
dec
int3
mov
push
cmp
cmp
imul
mov
cmp
pop
mov
and
mov
sub
push
out
mov
ja
test
int3
lods
xor
adc
or
adc
mov
fldl
sarl
inc
orb
loopne
std
sahf
xchg
rorl
cld
sbb
fsts
mov
xor
insb
fnsave
scas
ret
xor
add
test
testl
scas
push
arpl
pop
callw
outsl
popa
xchg
fs
lock
xorl
add
addb
inc
mov
aas
movsb
fdivrs
fildll
add
sbb
and
add
inc
adc
xchg
mov
xlat
jbe
insl
movsl
jbe
and
push
in
pop
cmp
sbb
mov
or
xlat
pushfw
mov
outsl
cli
ret
add
mov
add
or
and
push
insb
in
incb
arpl
mov
pop
mov
mov
mov
xchg
xchg
cmc
mov
testl
out
loopne
sub
cli
insl
sub
bound
roll
ret
mov
adc
and
jae
xor
sbb
or
inc
pop
pop
or
jae
jnp
stc
dec
mov
push
mov
pusha
and
icebp
inc
aad
inc
inc
add
inc
out
add
mov
das
ss
sbb
pusha
xchg
rcrl
cmp
or
pop
repnz
in
inc
jno
add
push
mov
jecxz
mov
add
fisubl
popf
dec
mov
enter
fstpt
test
mov
and
or
sbb
pop
insl
aad
xchg
scas
hlt
add
cmp
dec
and
addr16
mov
pop
push
add
jns
bswap
push
bound
movsb
push
arpl
fbstp
pop
push
gs
inc
xchg
push
cmp
or
or
add
pusha
xor
inc
mov
add
xchg
pushf
lea
sub
mov
loope
ror
cmp
popf
repz
or
mov
rcll
dec
hlt
add
daa
lock
js
adc
notb
push
test
cli
push
mov
pop
push
xlat
add
daa
rclb
sub
jne
pop
push
repnz
pop
je
ja
cmp
inc
mov
movsl
lds
push
ret
sbb
jl
mov
cmp
or
aas
and
shlb
xor
insb
shll
pushf
fidivrs
add
xchg
fdivrl
loopne
mov
adc
andl
loopne
add
dec
jne
add
xchg
and
add
sub
jne
pop
loope
push
add
lds
jp
loopne
jge
orb
mov
fdivs
sub
pop
add
xchg
mov
cmp
dec
faddl
fidivl
xor
pop
pop
mov
push
or
pop
push
cltd
mov
cmp
push
sbb
hlt
sub
cld
jmp
sbbl
add
push
cmp
cld
push
xlat
sbb
pop
imul
adc
or
sbb
pop
xor
stc
jno
jmp
jno
mov
xor
rcrb
jno
call
mov
jne
push
scas
or
add
shll
mov
add
push
jle
test
imul
jno
or
scas
or
sub
dec
cwtl
xchg
dec
adc
rorb
jns
jo
idivb
push
lea
pop
mov
add
push
fs
and
adc
jge
inc
and
add
cmp
push
add
sub
mov
stos
out
dec
push
fcmovu
pop
sub
sbb
and
push
lods
in
xor
sub
fsubrl
mov
dec
int3
sub
jl
mov
xor
outsb
push
mov
jge
hlt
shlb
loopne
je
fsts
aas
aam
xchg
flds
sbb
das
enter
mov
das
pop
xor
jns,pn
icebp
mov
sub
dec
inc
cmp
xor
imul
push
rorb
xor
or
push
xchg
xor
push
pop
lret
xor
sub
adc
pop
insl
fdivr
shlb
add
loopne
negl
faddl
enter
lock
popf
call
test
push
mov
mov
aad
sahf
lods
lock
add
xor
add
cwtl
jo
or
add
mov
je
sub
lods
adc
and
xchg
add
inc
jl
clc
fstp
fwait
mov
push
sbb
insb
add
ja
mov
sbb
shrb
insl
loop
xor
pushf
inc
lea
sbb
fcompl
cmp
sbb
mov
incl
push
movsl
js
push
or
jo
sub
lds
lods
cmp
lock
xchg
into
ret
insb
rolb
pusha
sbb
or
repnz
fdivs
pusha
inc
notb
or
xchg
gs
fsubs
aam
add
je
test
cmovnp
jbe
mov
add
mov
jnp
ret
xchg
or
and
jae
fisttpl
rclb
lea
add
scas
int3
adc
sub
jg
sub
push
sub
dec
pop
das
unpcklps
xchg
int3
push
push
pop
jmp
je
xchg
jbe
and
movsb
push
es
push
pushw
sub
add
rcrb
ljmp
test
adc
add
xor
jne
xchg
clc
in
push
xlat
pusha
cmpb
pop
push
mov
mov
cmp
cmp
fsubl
cli
mov
stos
push
outsl
fstl
mov
enter
jg
rorb
mov
sub
mov
pop
gs
pop
movsb
and
or
sbb
or
sub
lret
ds
inc
cld
addb
cld
xchg
mov
fwait
xor
and
hlt
sub
push
arpl
push
loopne
es
js
mov
pop
jb
push
push
jno
dec
xchg
push
jbe
mov
add
or
pop
sub
sbb
adc
nop
pop
jb
outsb
push
mov
mov
fnstenv
add
test
add
push
inc
or
stos
rclb
or
faddp
bound
or
aas
cmp
clc
out
or
pop
dec
ror
cmp
or
dec
push
push
ret
xchg
das
outsb
or
xchg
mov
sbb
repnz
cmc
cmp
push
mov
sbbb
push
pop
add
int3
push
inc
inc
ret
xchg
mov
mov
cltd
xchg
cmp
dec
sub
push
add
push
fisttps
sbb
call
fst
mov
lcall
ret
shll
sub
faddp
inc
arpl
push
and
add
adc
mov
out
pop
lods
xchg
push
nop
pop
add
ret
dec
pop
push
and
lock
adc
add
shlb
data16
cmpsl
cmp
cmpb
addr16
jmp
jnp
sahf
dec
push
push
ja
push
arpl
pop
cmp
into
mov
dec
loope
clc
je
push
popl
ds
push
loopne
adc
decl
push
add
adc
push
inc
push
repz
out
push
cmovb
imul
xor
cwtl
lcall
fisttpl
push
dec
lret
cmp
jl
cmp
dec
hlt
int3
xor
inc
mov
hlt
icebp
sub
push
jle
cltd
push
add
jne
mov
int3
negl
push
add
shrb
add
push
arpl
out
scas
adc
dec
test
out
xor
cmp
out
lcall
pushw
push
into
jae
mov
fistpll
jo
xor
add
fstps
and
push
or
jmp
pop
push
jns
bound
in
pop
adc
xor
lahf
in
xor
arpl
fldcw
fisttps
shlb
out
push
dec
or
in
out
xor
sbb
lods
daa
xchg
or
adc
sub
or
outsb
cli
enter
xchg
inc
or
lds
loope
ret
xchg
mov
cmp
loopne
pop
cmp
ja
pop
add
push
je
loope
xchg
and
les
mov
mov
add
pop
faddl
push
add
or
out
pop
cmpb
jl
mov
rolb
jbe
cmp
fadds
cmp
aaa
or
pop
sub
mov
mov
jb
neg
cwtl
mov
jg
cmp
pop
pop
lock
test
mov
bound
sub
addl
sub
arpl
in
mov
adc
nop
filds
imul
test
xchg
lock
adc
mov
flds
andb
and
insb
jl
imul
xor
xchg
sub
sub
dec
jno
jl
jmp
pop
and
leave
add
dec
decb
data16
and
mov
fisttpll
push
stos
sub
xor
adc
push
cmpb
test
push
or
cmp
rcrl
ret
into
mov
or
mov
inc
adc
in
loop
xor
xchg
xlat
div
pushf
mov
decb
inc
fadds
jne
loop
aas
mov
cmp
jmp
std
stos
pop
jl
add
sbb
shlb
jmp
mov
ret
sbb
push
jno
cmp
push
inc
cmp
jae
pop
mov
adcl
inc
and
add
out
pop
pop
inc
xchg
ret
cmpl
cmp
mov
and
ja
js
aaa
cld
fcmovnb
cmp
mov
inc
shl
jmp
push
outsb
pop
mov
sub
ljmp
sub
add
pop
sub
fistl
lret
xor
cmovs
jle
push
jae
fstpt
add
jl
inc
adc
inc
testb
or
dec
or
test
clc
testb
inc
sbb
dec
and
aad
sbb
add
sbb
xchg
adc
adc
hlt
insl
aad
push
push
or
dec
sub
xchg
push
fimuls
addr16
test
fwait
or
cmpb
nop
lret
mov
sahf
movl
push
xchg
and
cmp
out
fiaddl
xchg
add
push
or
cmpsb
lea
push
mov
cmp
je
mov
jo
push
sub
lret
loop
mov
xor
je
sarb
add
ret
and
push
adc
pusha
push
jo
pop
lcall
push
jl
ss
xchg
xchg
xor
jnp
push
int3
sub
mov
dec
lahf
add
push
clc
movsl
jg
xor
sbb
inc
push
adcb
dec
adc
dec
imul
pop
ret
movb
incl
push
sbb
pusha
inc
jp
in
insl
popa
mov
add
jne
push
fistl
ds
mov
neg
sbbl
add
out
lock
cli
jp
or
adc
hlt
js
jne
test
and
push
aam
push
je
inc
jmp
pop
mov
or
int
in
daa
add
enter
mov
add
inc
insb
sbb
mov
add
and
loop
xchg
sbb
ret
jecxz
adcb
sbb
or
andl
nop
aad
cmpsl
movsl
xchg
iret
ret
sbb
jmp
sub
and
dec
inc
outsb
test
repz
jne
andl
jnp
mov
dec
sub
mov
jne
movsl
nop
adc
sbb
lcall
fwait
cmpsl
mov
insb
mov
rorb
lock
stc
and
add
movl
or
and
xchg
push
or
mov
add
movsb
pop
inc
adc
imulb
pop
pop
mov
popf
mov
cmp
xor
cmp
pusha
mov
dec
jmp
imul
inc
push
adc
mov
mov
or
mov
mov
inc
add
lds
inc
inc
adc
push
add
push
jnp
xchg
push
inc
pop
jg
pop
aas
adc
adc
or
adc
pop
xchg
pop
sub
cmp
push
stc
push
je
jo
dec
in
nop
inc
push
fildl
cmp
sub
pop
or
dec
and
push
push
mov
ret
cmp
jp
cld
loopne
mov
loop
insb
or
test
pop
loop
test
lea
adc
loopne
cmp
js
test
sbb
push
ljmp
std
xchg
je
orl
push
jb
test
dec
rcll
or
je
decb
lea
mov
or
xor
jo
das
jg
pop
cmpsb
add
insb
pusha
jne
test
insb
xchg
push
pushf
push
dec
jnp
js
das
repnz
pop
gs
popf
dec
jne
mov
rolb
cmp
addl
mov
andb
sub
int
outsb
nop
xor
ret
inc
mov
or
rcrl
repz
inc
sub
stos
and
cmc
adc
test
inc
cld
lea
xchg
loopne
ffree
and
push
test
shlb
inc
js
loopne
mov
xor
push
and
jo
jecxz
mov
and
subl
jns
cli
adc
mov
sbb
cmp
icebp
aam
jbe
push
pusha
jne
pop
ret
pop
repz
imul
cmovge
pop
sub
or
mov
sub
lea
xor
inc
addl
cmc
enter
xor
and
adc
ret
jb
push
push
xchg
mov
in
notb
insb
xor
jecxz
mov
sub
push
mov
shrl
adc
bswap
lea
cs
cmp
loopne
cmp
ljmp
dec
iret
in
push
fmuls
mov
mov
adc
xor
js
sbb
daa
sub
into
dec
add
cmp
add
and
sbb
pushl
sbb
adc
xor
test
frstor
je
push
mov
pop
icebp
or
aam
in
or
sbb
xor
aaa
push
sahf
js
push
inc
jo
loopne
dec
push
and
mov
cltd
popf
add
repnz
popf
add
lea
push
cs
add
cltd
adc
cmp
xchg
insl
aaa
cs
inc
xorb
mov
incb
pop
cmp
jns
jns
rolb
push
push
ret
loopne
inc
or
cltd
push
andb
sub
cmpl
and
adc
lea
sbb
pop
pusha
cmc
push
leave
xchg
ret
ret
mov
push
cmp
lock
aas
push
push
pop
lcall
sbb
in
push
push
cmp
sarl
xchg
and
daa
popf
cmp
sbb
test
addr16
shrb
dec
popf
or
ds
fdivr
faddp
xchg
xchg
aad
mov
sbb
ret
or
pop
or
push
lock
adc
sub
shlb
pop
aad
mov
pop
pop
sub
jl
push
and
add
and
std
mov
cmpsl
and
andb
xor
ret
dec
adc
xchg
inc
or
mov
jbe
mov
jmp
add
lahf
adc
pop
pavgb
call
jb
movsl
aaa
das
pushl
mov
rcrl
adc
fistl
adc
add
push
sub
sbb
loop
dec
fadds
inc
adc
sbb
or
roll
sahf
or
int
je
call
cmp
xchg
mov
fiaddl
mov
lock
int
and
addr16
xchg
xchg
fnstenv
pop
add
ficompl
push
in
call
sbbl
call
into
sarl
pop
sti
mov
dec
test
je
sub
clc
js
es
lea
loop
in
aaa
ss
enter
leave
push
mov
lea
and
cwtl
js
mov
pop
or
jne
adc
pop
push
test
mov
hlt
add
push
imul
jns
push
jo
shl
fisubrs
pushl
lret
adc
mov
or
jno
xchg
add
cli
mov
movsl
xlat
mov
fsubrl
mov
jmp
pop
jne
stos
xor
bound
sub
lea
sbb
inc
shr
cmp
das
pusha
jo
inc
insb
pop
pusha
xchg
push
pop
outsl
cmpb
or
fsubp
test
movb
mov
mov
inc
mov
inc
pop
adc
jl
shrl
test
shll
or
or
mov
std
loope
test
xchg
jecxz
push
in
movsb
sbb
or
push
cmpsb
in
xor
or
dec
adc
or
mull
mov
or
int3
push
adc
adc
jmp
mov
dec
dec
adc
jnp
jo
sub
outsl
push
outsb
xlat
ljmp
hlt
or
push
dec
shlb
add
insl
loope
stc
ficompl
push
lea
jl
jb
pop
push
stos
lea
push
cmp
movsl
sbb
aam
ljmp
and
mov
add
mov
sub
daa
test
inc
out
add
xchg
jne
jle
xchg
xchg
rcrb
and
adc
ss
add
xor
or
push
fucom
cmp
mov
inc
push
enter
fwait
pop
in
daa
test
les
jne
enter
lods
and
sbb
popf
push
xlat
lock
rcrb
mov
daa
in
add
add
xchg
push
or
adc
cmpsb
pop
neg
test
arpl
loopne
sbb
mov
xchg
in
cmp
push
or
cmp
lea
sbb
xor
stc
int3
inc
push
push
mov
clc
insb
cmpsl
fs
enter
xor
insl
and
and
fnstenv
mov
xchg
test
or
bound
xor
lods
es
iret
mov
xchg
enter
nop
mov
aam
vpcmpeqd
jno
mov
xor
push
cmp
inc
fdivs
test
xor
jmp
ror
mov
cmpb
je
je
mov
ds
sbb
or
out
jnp
orl
push
push
shlb
ljmp
sub
or
push
inc
pop
cmp
dec
push
cmp
jne
cmc
stc
xor
clc
pop
call
adc
or
dec
out
xor
add
aas
test
or
adc
push
mov
pop
or
loop
inc
add
xchg
mov
aad
icebp
add
jl
insb
mov
andl
and
inc
lds
pop
push
pop
push
or
push
jle
pop
ret
out
lods
lods
sbbl
gs
push
add
and
cld
xchg
jle
cmp
jae
sbb
mov
fsubr
aam
out
cmp
sbb
jne
push
mov
adc
pop
test
pop
ds
dec
or
out
add
dec
xchg
pop
test
ljmp
mov
daa
mov
loopne
rclb
cmpsb
push
mov
insb
push
push
push
iret
cmpsb
or
pop
cmp
insb
mov
pushf
adc
push
push
or
push
das
or
inc
dec
mov
push
sbb
xchg
adc
pop
imul
mov
sub
pop
push
into
movsl
and
inc
adc
cwtl
fnstcw
das
pop
xchg
popa
adc
and
mov
lods
stos
fs
push
mov
and
xor
mov
and
cmpsl
adc
xor
and
leave
and
and
cmpsl
and
or
and
orl
xor
scas
sub
mov
test
lods
scas
sahf
add
xorb
dec
inc
push
inc
dec
cmp
pushf
les
decl
fsubs
orb
jae
add
pop
out
les
xchg
mov
pop
inc
imul
sbb
or
cmp
popa
leave
and
mov
test
or
data16
inc
repz
repnz
sbb
jecxz
rolb
push
pop
lea
stos
out
rorb
mov
mov
mov
add
dec
add
insl
and
sub
sub
mov
jns
push
movsb
ret
mov
pop
and
push
mov
clc
scas
pop
xchg
xlat
dec
in
jno
lea
lea
mov
and
adc
mov
bound
pushf
imul
mov
push
out
or
fimuls
mov
sbb
inc
jnp
xor
pop
leave
and
rcr
mov
in
aam
dec
mov
test
lahf
and
cmp
push
andl
scas
sarb
mov
pushf
push
xchg
shl
cmp
pusha
fadd
mov
jbe
lock
stc
jo
jno
lods
xorb
dec
mov
test
std
add
pop
dec
jae
add
paddusb
mov
aaa
js
std
mov
mov
je
lods
call
pop
pop
or
adcb
or
cs
adc
loop
xor
in
mov
ret
mov
inc
pop
mov
pop
xchg
and
popa
add
sbb
test
or
jg
je
mov
nop
movsb
pusha
dec
ret
imul
test
pop
sbb
mov
rolb
rcrb
rolb
dec
xlat
loope
ja
scas
sub
popf
jb
sbb
mov
fildl
sub
mov
xchg
jp
or
add
and
inc
adc
mov
divl
fbld
push
sbb
inc
in
inc
mov
jmp
imul
jae
add
add
in
and
add
in
cmp
lea
mov
out
sbb
mov
or
ja
jmp
aad
out
pop
test
inc
rcl
aam
aad
sbb
rolb
mov
xchg
add
push
test
lcall
push
je
dec
jne
push
push
inc
cmp
inc
insb
out
mov
xchg
shr
and
cmc
or
pop
mov
pop
sbb
xchg
add
rcl
nop
lahf
test
stc
sub
int3
js
sub
je
dec
nop
lea
xchg
in
xchg
dec
cmp
mov
xchg
les
test
jge
roll
inc
loopne
cld
xor
push
pushf
pop
xchg
daa
xor
xchg
cltd
sbb
mov
mov
lea
cmp
jb
adc
or
loope
add
cmp
pusha
jge
cmp
add
ja
xchg
ss
pop
sub
je
mov
xchg
cmc
push
loopne
push
data16
mov
fmuls
cmpps
and
sbb
xchg
jge
in
sbb
sbb
ss
insb
clc
mov
aas
mov
push
inc
imul
mov
loope
push
sbb
les
ja
je
dec
test
stos
lods
pop
adc
pop
jo
frstor
cmp
testb
sbb
psubsw
cld
scas
xor
ds
je
pop
lock
add
mov
inc
in
mov
pop
pop
jg
popa
aam
and
sub
add
lock
or
xorl
cld
orl
test
push
enter
jo
popa
lea
xchg
jno
mov
push
iret
add
pop
dec
xchg
dec
mov
ss
lods
push
lods
adc
xchg
ret
xchg
aaa
push
inc
add
cld
fcmovnbe
cmpsl
lods
mov
jmp
cmp
je
aaa
js
popa
dec
add
shll
and
adc
lcall
ret
add
xchg
adc
pop
sbb
dec
xchg
jmp
add
call
jo
out
pusha
and
xor
mov
fs
popa
add
fwait
sbb
cltd
in
push
pusha
incl
inc
add
in
inc
roll
adc
mov
and
jmp
push
mov
jne
lret
cli
push
bound
push
test
sarl
fcoml
insl
psrad
pop
adc
adc
aaa
movsb
and
lret
popa
call
sbb
fldt
fistl
or
cltd
jbe
les
mov
dec
mov
arpl
jl
inc
jbe
add
movl
int
test
add
inc
adc
push
and
sub
add
popf
test
xchg
mov
dec
push
imul
imul
push
and
pop
cmpl
testb
adc
mov
test
jg
mov
mov
ja
jge
js
mov
shrb
adc
fdivrs
mov
roll
mov
sbb
dec
add
imul
inc
ret
rcll
and
mov
popf
and
loope
pop
mov
mov
push
js
jo
enter
insb
mov
scas
nop
les
mov
adc
push
and
dec
mov
shll
in
mov
add
imul
or
dec
andb
sbb
cmp
in
mov
jae
inc
ja
daa
ffreep
add
pusha
ficoms
ds
cmp
xchg
mov
sbb
push
dec
jmp
popf
inc
jg
aaa
mov
inc
cmp
cmpb
je
push
mov
mov
mov
andl
imul
sub
sub
mov
imul
adc
or
or
cmc
addl
xchg
jbe
push
push
mov
lret
inc
je
ret
sarl
clc
or
std
xchg
mulb
xor
mov
jae
lret
js
movsl
aas
adc
test
shr
push
sub
push
add
jle
push
jge
mov
addl
enter
dec
rsm
roll
mov
das
jl
push
xchg
shrb
cmp
data16
outsb
fistpl
adc
push
mov
sbb
out
test
cmpsb
mov
cmpsb
ss
outsb
inc
pop
subl
int
flds
iret
sbb
mov
insb
test
dec
je
mov
std
aaa
push
sbb
add
inc
dec
mov
jns
mov
test
cmp
add
inc
dec
xor
aam
mov
jmp
cli
dec
inc
or
mov
push
cwtl
sbb
pop
push
test
cld
inc
jbe
dec
inc
iret
lea
loopne
icebp
push
sub
jge
adc
aas
add
jle
fucomip
dec
inc
sbb
cld
pop
adc
add
jno
shlb
push
outsl
ja
add
pushf
xlat
pop
pop
mov
cmp
mov
dec
cmp
cmp
mov
pop
lds
sbb
mov
into
mov
adc
dec
daa
das
ljmp
test
push
in
push
mov
fadd
movl
hlt
and
movsl
insl
mov
lock
dec
cwtl
pop
inc
pop
subb
jnp
les
or
inc
enter
cmp
fcoms
push
pushf
push
or
fst
aas
lahf
filds
dec
es
xchg
dec
xchg
insb
cmp
pop
rcll
lods
mov
and
pop
adc
mov
xchg
push
out
aad
mov
jge
cmp
je
and
addl
mov
sbb
stc
lgdtl
pop
mov
pop
sbb
add
cmp
and
jl
in
jl
fwait
pushf
sbb
lds
leave
xchg
xor
sbb
add
mov
add
jecxz
inc
fidivrs
jb
and
imul
adc
je
or
adc
jmp
sbb
subl
addb
and
add
add
add
or
dec
mov
mov
mov
and
or
in
fstps
push
adc
in
or
dec
jb
in
pop
add
sti
inc
sub
jo
cwtl
xchg
aas
movl
xchg
mov
pop
mov
xchg
and
push
jl
push
xor
push
bound
sbb
out
adc
pop
cmpsb
subl
jo
dec
sbb
and
pop
imulb
imul
inc
cmp
and
and
aad
and
push
sub
xchg
push
push
xor
sub
mov
or
jno
push
loopne
nop
pusha
mov
dec
fcmovnbe
jo
pop
sub
xor
mov
lea
or
aaa
sub
mov
push
inc
pop
cld
jecxz
xchg
xchg
cltd
adcl
out
and
iret
inc
xchg
andl
and
or
out
leave
or
lds
imul
push
out
xor
imul
cmp
enter
xor
cmp
fmull
or
popf
pop
popf
sub
adc
sbb
push
sub
sbb
inc
aaa
ss
xor
jl
dec
cmp
je
jae
push
cmp
inc
pop
gs
int3
jno
jno
push
stos
scas
push
stos
adc
out
je
cwtl
adc
arpl
dec
xchg
enter
sub
pop
fnstsw
subl
outsl
jl
mov
jne
lea
orb
shrb
mov
nop
inc
mov
divl
or
icebp
adc
add
push
jmp
and
lods
je
pop
sub
or
rorb
cmp
faddp
scas
roll
and
std
sub
jb
and
add
or
inc
xor
aam
and
mov
sbb
sub
jae
iret
test
dec
add
popf
daa
mov
dec
jge
xlat
cli
pop
inc
push
and
outsb
push
dec
jae
adc
jmp
sbb
ret
out
inc
test
cmc
jbe
adc
ja
hlt
mov
mov
push
loopne
push
sub
lahf
adc
pop
cmovle
fldcw
adc
loope
or
add
daa
call
mov
nop
mov
test
ljmp
ret
mov
cmpl
push
fstl
mov
and
sub
hlt
xchg
shll
clc
insb
test
pop
mov
rcl
adc
xchg
xchg
xchg
cmp
or
xchg
xor
sbb
cmp
insb
sub
imulb
lcall
jmp
dec
push
es
dec
or
sub
or
cmpsb
js
jl
inc
je
ret
mov
push
mov
stc
lea
les
fdivs
add
loopne
ret
push
test
inc
les
sbb
iret
mov
dec
and
int3
shrl
mov
add
idivl
mov
mull
pop
sub
pop
cmpsb
push
and
sbb
in
fadds
pop
daa
in
cmp
sbb
xchg
cwtl
cmp
sub
xchg
in
divb
mov
pop
mov
adc
or
xchg
adc
roll
jmp
loopne
pop
push
pop
xchg
insl
fistl
jge
lea
stos
push
je
cmp
xor
pop
in
mov
xlat
push
push
cmpsb
or
cmpsl
ss
and
mov
push
shrl
jae
sub
jle
hlt
cs
mov
mov
push
and
push
xor
aam
mov
lcall
sarl
sub
push
cmp
mov
iret
imul
sbb
into
pop
push
xchg
std
das
inc
or
das
lds
sahf
push
push
sbb
inc
inc
out
ja
sbb
dec
mov
pop
fs
pop
lret
inc
pop
sbb
push
sbb
pop
dec
pop
xchg
inc
push
and
clc
push
and
jb
push
and
and
mov
xor
pusha
leave
and
leave
and
sbb
inc
push
jne
sbb
movsb
enter
and
mov
dec
lds
add
or
sub
daa
mov
sub
daa
insb
or
stos
stc
test
in
lret
xor
sub
and
nop
mov
and
cmp
pop
sub
push
push
mov
sub
scas
lods
xor
data16
adc
aaa
arpl
and
outsl
rcrl
push
ja
in
push
push
sbb
dec
adc
pop
jb
pop
enter
jae
filds
mov
inc
and
adc
orl
and
outsl
jle
dec
mov
int
mov
adc
xchg
sbb
push
push
or
mov
pop
or
loop
lcall
lcall
adc
and
dec
xor
add
add
add
loopne
adc
mov
out
nop
xchg
push
xchg
sub
add
adc
push
push
dec
in
mov
inc
mov
mov
les
push
loope
jecxz
hlt
push
out
dec
clc
js
push
in
pop
push
add
repz
pop
and
or
add
aaa
and
rcrb
sarb
push
pop
lock
fsubrs
lock
xor
adc
lock
mov
movsb
call
mov
or
sub
pop
into
loop
mov
add
inc
add
inc
sub
or
sbb
mov
inc
lcall
cmpsl
imul
outsb
xor
ret
jne
arpl
data16
sarl
mov
test
pusha
fdivs
push
hlt
sbb
sbb
add
scas
lock
cltd
push
pop
pop
push
pop
push
xor
gs
push
dec
adc
test
adc
xor
out
pop
inc
aaa
xor
aam
sub
inc
adc
les
and
push
push
push
icebp
or
and
es
loopne
ret
test
xchg
sti
jle
mov
jne,pn
orl
fisttps
je
inc
xlat
stos
mov
hlt
nop
ret
insb
xor
mov
je
mov
xor
add
mov
pop
cmp
push
dec
icebp
dec
sbb
add
xor
call
mov
xchg
inc
add
sbb
add
ja
int3
inc
cmp
jmp
xor
shld
mov
int
rol
jg
lods
lcall
jnp
cmp
cmc
adc
cmpsb
sbb
clc
push
in
movsb
jb
ss
or
inc
sub
or
xchg
pop
cmpsl
aad
shlb
enter
push
les
xlat
xchg
cmp
mov
cmp
lock
fsubr
or
xor
add
subb
and
inc
jo
push
pushl
or
lahf
icebp
and
icebp
add
fdivs
push
cmpb
in
and
ljmp
push
pop
inc
enter
push
repnz
add
xor
mov
fwait
les
outsb
add
and
lret
mov
sub
adc
sarl
and
jnp
inc
jne
push
loopne
add
mov
jge
mov
and
je
mov
imul
pop
add
add
aaa
mov
add
rorb
inc
push
push
call
andl
adc
movl
push
sbb
pop
jp
call
addr16
dec
and
imull
push
push
lea
movsb
mov
aad
adc
inc
sbb
daa
xchg
stos
mov
rolb
push
mov
scas
pusha
push
test
sbb
sub
adc
imul
lret
sbb
cltd
test
jae
jle
add
int3
sbb
jecxz
and
adc
push
cmp
daa
incb
mov
push
xor
sahf
dec
cmp
add
push
lods
dec
ds
or
and
adc
mov
cltd
cli
and
inc
jnp
dec
inc
inc
in
clc
cmpsb
imul
dec
or
cmpl
fucom
call
inc
jmp
mov
roll
sub
sub
pop
aaa
xor
adc
cmp
mov
pop
fistl
sbbl
jmp
sub
xchg
push
cmp
or
leave
push
sbb
loop
dec
sbb
or
add
xchg
nop
stos
add
dec
inc
stos
mov
pop
inc
fmul
and
mov
dec
jae
and
loop
dec
mov
sbb
sbb
insb
mov
aam
pusha
es
fs
xchg
nop
in
call
pop
out
push
insb
cmp
add
add
mov
push
test
or
mov
xorb
add
cmp
dec
jle
ss
add
mov
test
xchg
shlb
or
loope
sub
rol
cmp
in
inc
inc
or
adc
fsub
cmp
jle
cld
jae
inc
add
outsb
push
cmp
addb
call
mov
cmp
xor
jo
or
pusha
pusha
ret
jmp
inc
xor
icebp
xchg
scas
fnstcw
pop
mov
lret
sbb
cltd
add
or
add
jmp
in
pop
rclb
push
sbb
dec
jno
and
daa
stc
in
add
adc
in
shrb
dec
sbb
sub
add
mov
les
sbb
pushf
gs
and
out
push
loopne
movups
pop
push
pop
jmp
xchg
lret
stc
inc
inc
es
mov
and
dec
add
lea
mov
add
jle
call
cwtl
movl
jp
push
cmpsb
add
mov
mov
xchg
outsl
sub
outsl
dec
and
xchg
xchg
or
sbb
inc
push
pop
or
add
sbb
adc
lret
sti
test
adc
jmp
scas
ficoms
scas
lock
cltd
jo
scas
lds
movsl
add
jecxz
es
push
movl
cld
faddl
inc
push
dec
andl
dec
imul
adc
xor
rorl
push
mov
mov
js
dec
dec
out
adc
pop
adc
or
or
add
add
int
fcmovb
cld
add
dec
aaa
adc
push
jl
sbb
ret
xchg
jbe
cltd
jne
inc
push
adc
lretw
nop
cmp
sub
sarb
inc
sub
add
xchg
mov
mov
jno
fdivrs
push
sbb
in
xor
inc
test
mov
xchg
inc
inc
mov
fs
xchg
pop
and
push
add
pusha
rcll
inc
lea
mov
inc
xchg
xchg
ja
sub
call
adc
imul
mov
imul
sub
sub
adcb
dec
sbb
insl
daa
adc
pop
push
std
sbb
enter
test
push
mov
mov
stos
mov
loop
and
mov
loopne
rclb
nop
dec
xchg
cmp
out
mov
jae
pop
push
push
xor
fcmovnb
push
test
push
daa
push
stos
orl
sbb
xchg
stos
sub
call
scas
je
sahf
incl
sbb
xchg
push
sbb
lds
iret
leave
push
fsubl
sub
cmovb
rorl
dec
cmp
xor
test
xor
loope
dec
imul
nop
inc
pop
or
or
inc
movsl
adc
mov
lahf
xor
in
or
push
sub
stc
test
add
dec
dec
dec
xor
add
std
sub
dec
insb
push
icebp
pop
pop
mov
sbb
hlt
add
pop
call
xchg
mov
mov
pop
push
enter
loop
call
xor
data16
insb
jge
inc
ds
mov
xor
mov
lret
dec
subl
das
rclb
aas
fistpll
fistpll
aad
cltd
xor
sub
fadd
cmp
pop
adc
pop
adc
sub
pop
adcb
add
dec
jmp
push
lea
sbb
and
push
adc
shll
fists
mov
cmp
fidivrl
aaa
sbb
push
inc
mov
push
fldenv
or
cltd
push
adc
push
inc
xchg
mov
mov
push
push
adc
test
test
mov
mov
adc
or
xor
fiadds
cmp
jmp
enter
add
adc
loopne
ret
sub
imul
je
pop
inc
push
push
jnp
dec
inc
mov
pushf
xor
cwtl
cmpsl
dec
push
xor
jle
lret
sbbb
inc
or
mov
dec
sbb
xor
movl
outsb
mov
add
imul
xchg
in
jmp
inc
push
mov
add
push
mov
xor
or
dec
inc
lcall
dec
add
xchg
add
xchg
in
ret
push
dec
push
add
sub
pop
cmp
xor
test
xor
xor
jo
fwait
or
fnstenv
mov
and
js
insl
fidivl
je
or
xchg
outsl
movsl
cmp
or
push
movl
cwtl
or
add
or
push
out
jle
mov
adc
movsb
xor
loop
arpl
xor
stos
push
sub
movb
bound
jns
and
and
jo
jp
sbb
and
add
jmp
xchg
adc
cwtl
push
and
movl
imul
and
mov
fdivs
mov
lcall
push
sbb
mov
inc
jo
lods
repnz
push
and
and
mov
or
cmova
test
dec
dec
sub
xchg
xchg
dec
add
xchg
xchg
inc
add
push
xor
jbe
or
cmp
push
inc
and
or
mov
aam
loopne
sbb
lock
stos
inc
mov
test
sub
call
inc
insl
repz
stos
sbb
rorb
add
mov
popf
jno
inc
xchg
inc
push
sub
push
add
mov
pusha
inc
test
mov
clc
mov
scas
or
add
and
or
mov
dec
jmp
enter
xchg
bound
xchg
dec
mov
cld
or
add
xchg
and
dec
add
or
in
or
pop
mov
cmpsb
mov
movb
js
xor
mov
sbb
add
xchg
shlb
pop
testb
shrd
push
fsincos
add
out
mov
mov
jge
add
mov
pop
pop
push
mov
mov
cmp
adc
test
mov
mov
xchg
enter
pop
inc
cmp
jmp
xor
mov
into
shlb
xor
pop
cwtl
sub
add
dec
cmp
push
lret
rclb
add
cmp
xor
in
imul
shrl
push
ret
sbb
sbb
mov
out
push
push
xor
imul
and
mov
mov
sbb
sub
add
fnstcw
sub
xor
and
notb
mov
adc
push
adc
addb
movsl
add
test
fsubrp
push
js
popa
add
movsbw
or
cmp
jne
and
outsb
mov
or
je
adc
fwait
dec
testl
arpl
push
jae
adc
cs
cmp
dec
inc
fldpi
mov
hlt
push
inc
mov
sbb
mov
mov
je
push
lret
pop
in
pop
js
je
lret
stos
pop
mov
insl
mov
mov
or
loope
sub
nop
mov
xor
xor
hlt
mov
inc
stc
lock
fwait
push
pop
xchg
cmp
ss
lods
repnz
insl
ret
imul
push
adc
mov
shrb
popf
movsl
mov
or
mov
iret
gs
aaa
popa
mov
fwait
and
dec
cmpsl
mov
push
jl
dec
sbb
cwtl
and
lock
add
xchg
pop
inc
or
add
and
test
adc
and
and
dec
faddl
out
loop
mov
call
xchg
jo
cmc
add
cs
cmp
jmp
loop
adc
mov
ret
mov
pop
rorb
and
inc
loope
sbb
test
and
imul
push
push
imul
push
and
or
sbbb
sbb
test
inc
cwtl
push
in
and
test
insb
fisubrs
scas
and
cmc
pop
mov
fidivl
sbb
xchg
das
push
and
and
int
and
or
xchg
mov
into
push
icebp
cmp
aam
repz
dec
sbb
inc
ret
dec
xor
sub
inc
push
mov
mov
mov
push
mov
shrb
inc
xor
cld
leave
daa
or
test
or
lret
andb
loop
push
lea
lret
rcrb
or
leave
mov
pop
cmp
cmp
xorb
ret
mov
dec
arpl
dec
cld
andb
f2xm1
enter
jae
dec
jne
mov
shrb
mov
mov
lock
dec
cld
cmpsb
in
lret
cmp
add
mov
js
sub
mov
mov
add
movl
or
hlt
mov
or
or
leave
mov
mov
mov
pop
fidivrs
xchg
sub
and
nop
fidivl
addb
loop
and
push
push
push
mov
sub
mov
inc
cmp
adc
ja
ret
xor
and
lods
inc
or
notl
sahf
and
or
dec
decb
sbb
adc
mov
movl
loop
cmp
inc
sbb
inc
dec
inc
pop
inc
pop
add
pop
cwtl
mov
inc
outsl
les
int3
shrb
add
sub
rol
sub
shrb
movsb
push
mov
xor
popf
clc
xchg
int
inc
js
sbb
mov
and
jge
add
fstl
adc
pop
bound
movsl
xchg
xchg
outsb
test
hlt
add
rcrl
or
xchg
or
add
inc
aas
mov
adc
push
and
sbb
sub
or
sahf
sub
sub
mov
add
sub
cld
jg
js
stc
dec
clc
push
add
push
push
push
push
adc
xchg
pop
pusha
das
popa
repnz
mov
pop
inc
add
icebp
jmp
or
insb
jne
mov
push
push
popa
shlb
not
ret
push
cmp
jne
mov
movlps
movsl
les
xchg
mov
inc
cmp
mov
mov
lods
dec
pusha
and
and
ss
cmp
dec
add
dec
pushf
popf
push
push
dec
xchg
nop
mov
push
ror
adc
mov
das
mov
jmp
movsl
or
and
jb
or
cld
jmp
push
sub
jb
js
add
in
movsl
cs
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
movsl
pushf
lea
inc
sub
add
mov
cld
mov
lods
fnstsw
mov
jecxz
or
cmp
mov
mov
jle
cmp
js
add
xor
cmp
jbe
pop
adc
loopne
enter
adc
cmp
mov
dec
in
lcall
loopne
adc
mov
inc
adc
iret
rol
lods
ss
cmp
jl
xchg
popa
cmc
xor
pushl
rorl
nop
ret
rorb
or
add
lret
testb
js
pop
movsb
ret
push
nop
add
stos
mov
rcrl
nop
scas
pop
das
xor
mov
enter
test
mov
jmp
adc
sbb
or
adc
push
mov
cmp
xchg
mov
test
push
push
sbb
leave
adc
and
rorb
addr16
push
mov
in
lahf
sarb
push
shll
adc
cmp
cmp
sbbb
mov
lcall
jo
or
jnp
add
bnd
adc
loop
nop
mov
inc
cmp
popf
xorb
loopne
cmp
lea
cwtl
pop
and
adc
dec
sub
push
loopne
subl
mov
icebp
popa
adc
xchg
mov
jmp
leave
or
loop
mov
loop
pop
push
dec
xchg
lea
mov
lds
push
adc
cltd
jmp
xchg
mov
pop
adc
ret
les
lea
mov
xor
enter
sub
or
dec
xor
les
add
mov
jge
mov
int3
mov
lods
clc
pop
mov
push
inc
add
mov
ljmp
mov
xchg
lock
icebp
dec
pusha
negl
dec
pop
pop
jmp
cmp
pusha
dec
dec
shlb
jmp
sub
ljmp
add
cmp
je
testw
int3
pop
push
pop
adc
dec
cld
mov
or
jmp
sbb
loope
cltd
je
push
push
jb
nop
mov
pop
mov
push
dec
insb
pop
into
test
push
mov
inc
jbe
cmp
pop
cmp
in
inc
dec
push
sbbl
loope
or
push
cmpsl
push
xor
cwtl
mov
xchg
xchg
push
pop
add
push
icebp
adc
andl
subl
sbb
adc
lods
gs
nop
lret
mov
scas
sub
push
xor
in
sbb
xlat
lcall
ret
fst
das
sub
pop
xchg
into
cs
aas
inc
xchg
xchg
into
jno
push
ror
pop
and
and
loopne
pusha
pop
shr
test
pop
push
loopne
add
push
inc
loopne
or
repnz
mov
mov
leave
xchg
ret
mov
or
fimull
in
fs
push
nop
fs
xchg
out
add
mov
sbb
xchg
inc
imul
adc
leave
cmpw
or
sbb
cmpb
mov
sbb
push
pop
add
ss
enter
push
testb
sar
popf
test
scas
fadd
push
je
test
addb
shlb
gs
push
adc
rol
add
adc
std
loop
dec
xchg
or
xchg
push
mov
inc
pop
int
cwtl
or
lock
dec
push
dec
push
xor
daa
mov
push
jl
sub
jmp
and
jp
lcall
dec
movzwl
cmpl
push
adc
rorl
push
sbb
inc
add
add
xchg
iret
inc
xchg
pop
sbb
add
pop
fidivrl
sbb
add
or
sub
lcall
or
cmp
fistps
or
pop
push
test
jns
xchg
ret
pop
pop
cmpsb
in
push
addb
setbe
xlat
pop
add
xchg
sbbb
and
pop
and
mov
and
cmp
jne
jb
fs
inc
cmp
dec
push
push
jle
cmp
add
pop
push
pop
data16
push
push
dec
xor
or
jo
inc
shl
imul
or
or
or
push
push
insl
pop
adc
sbb
mov
add
movsb
int
imul
leave
sbbl
icebp
jae
inc
add
out
inc
add
and
shlb
mov
je
sub
rcrl
icebp
movsl
push
insb
nop
pop
add
adc
movsb
pop
or
mov
stc
sbb
adcb
rcl
insl
popa
call
test
or
lock
test
inc
xor
sub
adc
js
rorl
or
mov
mov
mov
inc
iret
cmp
jns
mov
cwtl
inc
sub
add
jl
add
mov
mov
mov
sub
push
add
mov
jb
enter
pusha
sbb
shll
sbb
and
lret
and
adc
call
xchg
enter
sub
sbb
push
and
cmp
push
sub
jb
je
fiaddl
lock
pop
inc
or
mov
daa
mov
push
cmpl
pop
je
or
adc
add
push
and
jmp
mov
adc
ror
adc
xchg
xor
fsubrl
push
cmc
movsl
cmpsl
and
inc
dec
cmp
add
mov
push
fimull
inc
hlt
or
mov
dec
call
mov
out
sub
and
jne
imul
xor
push
adc
sbb
insb
lahf
push
and
loopne
lods
scas
push
push
dec
cmp
inc
icebp
cmp
cmc
push
loope
mov
bnd
push
inc
subb
add
xor
clc
push
mov
cmpsl
push
nop
loopne
addr16
inc
pop
push
mov
sbb
hlt
adc
sbb
xchg
dec
mov
pop
rclb
add
sahf
xor
test
lea
psubw
mov
dec
cmp
and
cmp
pop
cli
dec
addr16
gs
inc
or
sbb
jmp
xor
adc
in
dec
outsb
lahf
in
xor
in
adc
mov
mov
sub
lods
push
adc
adc
dec
xchg
xor
sub
repnz
or
shlb
sub
popa
enter
xor
push
inc
test
daa
aaa
sbb
cmpsb
lret
lea
jmp
push
push
das
xorb
push
sbb
jbe
dec
jmp
adc
xor
nop
or
fildll
adc
pop
inc
inc
xchg
cmp
mov
movsl
aam
push
orps
add
adc
adc
in
sub
cmp
push
adc
xchg
icebp
mov
idivb
pop
call
add
addr16
daa
add
mov
mov
or
mov
enter
xchg
testl
mov
mov
xor
push
cmp
pop
scas
aam
add
mov
push
push
push
dec
sub
aad
xchg
push
or
push
adc
inc
sbb
iret
xor
sbb
imul
push
sub
into
aaa
push
add
mov
addr16
sahf
add
pop
mov
jne
pop
ja
and
repz
jmp
jne
push
call
sbb
enter
mov
push
xchg
test
aaa
pop
inc
sub
in
pop
adc
xchg
push
sbb
jmp
mov
sub
shlb
test
push
dec
mov
fldcw
fdivrp
pop
push
or
push
sbbb
outsl
cmp
jae
mov
nop
imulb
add
loopne,pt
or
pop
ds
push
jge
fdivl
aas
hlt
aaa
add
lea
push
in
int3
into
rol
and
add
mov
shrb
into
hlt
pop
or
mov
adc
mov
clc
add
sbb
jmp
lea
jge
add
dec
push
pop
movsl
inc
mov
hlt
dec
call
shlb
mov
call
mov
xchg
pusha
addb
or
lock
or
jmp
aam
mov
xchg
scas
mov
xchg
popf
sbb
nop
mov
rolb
sub
jnp
mov
adc
add
jae
sub
enter
push
add
sbb
pop
and
movsb
lret
arpl
rolb
inc
xor
jle
cld
addr16
jae
icebp
jmp
add
loop
and
movsl
sub
add
dec
and
pop
pop
or
fimuls
sti
lea
test
mov
sub
add
jae
push
jp
pop
fmull
ja
andl
xor
pop
dec
mov
dec
lcall
hlt
les
push
xor
add
shr
fldenv
test
rclb
mov
shlb
mov
cmp
fwait
bound
repz
add
push
inc
fwait
in
shl
popf
and
addr16
std
incl
loope
inc
adc
or
int
fistpl
jmp
push
jg
lods
clc
repz
push
jb
dec
pop
test
mov
inc
cld
mov
movsb
pop
and
dec
sub
mov
lret
and
sub
fadd
lock
gs
sub
dec
and
sub
jle,pn
idivl
call
sbb
xor
and
jmp
cmp
call
mov
pop
cmp
sbb
out
scas
jmp
ss
ret
add
nop
cmpsl
or
jg
inc
cmp
push
push
fldl
xor
jle
adc
jne
push
push
and
and
mov
cmp
js
push
xchg
mov
pop
xor
seto
neg
or
push
mov
rcrb
push
adc
adc
and
int3
cmp
pop
out
xlat
aas
jbe
adc
test
mov
cmp
enter
xchg
xchg
jbe
mov
adc
inc
clc
lret
je
mov
testl
jp
push
push
dec
mov
lret
loopne
mov
sbb
mov
mov
push
les
xorl
push
jecxz
adc
fadds
jl
fsubs
je
insb
jge
pushf
add
adc
jbe
inc
cmp
or
xor
testb
pop
or
sub
inc
cmp
adc
cmp
lcall
scas
test
out
shrb
xchg
decb
cmovae
mov
mov
shrb
in
leave
sub
inc
push
push
test
daa
fnsave
stos
test
xor
stos
test
mov
stc
aas
adc
dec
sahf
dec
xor
dec
and
js
cmp
add
and
dec
sub
fstpt
repnz
add
fs
incl
in
nop
lea
adc
adc
push
pop
adc
sbb
and
jecxz
adc
sbb
into
andl
cmp
and
sbb
mov
sub
add
movsl
or
and
add
xor
or
xchg
mov
xchg
orb
rolb
xlat
jns
icebp
adc
ss
test
adc
hlt
test
cwtl
adc
fsub
pop
rolb
shrb
xchg
das
push
dec
xor
xor
sbb
lods
dec
ja
mov
fiadds
and
and
sub
mov
add
pop
ret
add
pop
mov
je
imul
xchg
and
or
jmp
ret
and
add
scas
push
cld
lea
jae
jb
mov
xchg
or
xor
dec
ret
and
push
sub
cmpsl
lock
inc
lods
and
cmp
mov
stos
loopne
mov
push
lcall
pop
shl
and
mov
sbb
cmc
enter
push
or
mov
add
dec
daa
lea
popf
popf
add
testb
xchg
js
sbb
dec
jmp
pop
lock
xorl
ret
inc
roll
cmpl
or
mov
adc
push
add
or
or
lret
pop
mov
aaa
xor
push
popa
cmc
or
mov
loop
inc
push
push
inc
add
negb
sahf
xchg
fucomi
lcall
mov
or
xchg
xor
addr16
add
adc
add
sbb
popa
stos
dec
ja
and
mov
adc
adc
or
imul
pop
sti
or
adc
sub
repz
ds
push
sbb
adc
ljmp
add
adc
nop
pop
pop
scas
sbb
imul
divb
sbb
xchg
or
testl
pop
or
adcb
add
iret
movaps
pop
test
xor
pop
pop
cmc
push
mov
cmpsl
pop
dec
pop
aam
lea
cmp
push
ficoms
cmp
xor
inc
movsb
sbb
push
push
jg
push
lahf
adc
add
adc
push
sbb
and
dec
pusha
jecxz
movsl
sbb
sub
add
xlat
xor
xchg
push
mov
mov
sti
push
jno
add
cmp
imul
dec
in
stos
push
test
xor
repnz
in
push
jnp
jl
data16
push
push
or
scas
shll
jns
andl
mov
popf
loopne
dec
icebp
mov
dec
push
mov
push
mov
push
movsl
cmp
stos
test
fs
jle
scas
flds
add
or
fstl
sub
xor
add
cmp
or
test
or
popf
test
icebp
in
jg
jmp
dec
les
or
flds
push
cwtl
pop
mov
gs
sbbb
adc
cmc
or
sar
gs
inc
ss
roll
inc
mov
lock
dec
lcall
insl
push
xor
test
and
mov
outsl
sbb
xchg
ficoms
add
fldcw
mov
pop
sbb
or
lea
push
or
inc
dec
and
inc
int
bound
mov
imul
movsb
and
in
push
push
xlat
pop
inc
pop
or
mov
sbb
or
rol
adc
xchg
xchg
mov
adc
jo
lret
dec
xchg
or
mov
ret
sbb
cwtl
in
cmp
add
push
xor
popa
jns
aaa
shll
dec
dec
pop
push
bound
movsb
out
sbb
mov
mov
pop
arpl
and
or
or
inc
mov
adc
cmp
and
cmp
ss
push
sub
ficomps
ret
sub
lds
and
pop
jbe
sbb
jge
roll
stos
push
rclb
push
and
inc
je
or
push
lods
outsl
mov
cmp
aaa
rol
cltd
push
fs
push
faddl
inc
sbb
and
push
push
inc
add
inc
mov
sub
sbb
out
dec
adc
sbb
and
mov
xchg
es
add
fists
test
loope
add
movzwl
add
xor
push
iret
pop
pop
xor
or
mov
xchg
inc
sbb
pop
inc
sbb
jo
and
or
mov
xor
inc
xchg
push
add
mov
push
sub
daa
adc
xchg
mov
mov
jno
sbb
pop
in
jnp
or
shlb
adc
inc
cltd
push
push
cwtl
cmp
adc
into
xor
pop
sbb
add
jb
ja
out
dec
xor
mov
pop
dec
mov
insl
jg
test
js
mov
test
push
push
xor
jl
sbb
out
lret
and
xor
add
or
adc
cmp
mov
in
fisubrl
mov
scas
adc
sbb
sbb
cli
adc
roll
shl
cmpsb
mov
cltd
and
jle
xor
ja
ds
imul
clc
and
or
jl
pop
mov
adc
mov
xor
push
adc
mov
cmp
les
sbb
test
js
stos
in
jno
push
mov
mov
pop
mov
mov
scas
xor
jne
xor
mov
jno
sub
sub
sbb
test
sti
adc
ret
test
sbb
xor
adc
imul
jbe
loopne
aam
dec
mov
jae
mov
test
js
cmpb
mov
push
mov
lcall
out
orl
or
rorl
add
pusha
push
adc
adc
add
movb
ret
ret
or
pop
rcll
add
fsubs
adc
sbb
je
scas
xchg
sub
dec
cmp
sub
loop
outsb
xlat
xor
push
push
insb
xchg
xchg
sbb
xchg
and
mov
jno
push
inc
es
pavgw
sub
nop
mov
xchg
xor
jno
dec
fbld
mov
mov
imul
push
nop
sbbl
cmc
ds
inc
es
test
and
insl
and
mov
aaa
or
pushf
ficomps
xor
mov
adc
js
push
fisttps
inc
sub
add
loop
jns
imul
inc
and
add
sbb
cmp
hlt
cmp
int
cmp
mov
push
ja
das
int
inc
xadd
jmp
outsb
fwait
stos
and
sbb
xchg
push
nop
outsb
jl
ds
cwtl
imul
push
or
adcb
and
repz
mov
add
inc
ret
inc
jecxz
sbb
in
test
in
mov
test
or
nop
mov
ja
clc
push
dec
mov
lock
dec
add
and
roll
clc
push
sub
cli
add
push
push
mov
out
sub
push
add
or
mov
mov
fstp
sbb
mov
ja
lds
outsl
fwait
inc
mov
in
and
xchg
jp
sub
or
dec
or
popa
mov
dec
dec
jne
mov
imul
xchg
jl
cmc
add
adc
ss
sbb
outsb
arpl
or
loope
xchg
dec
test
mov
test
and
or
and
and
sti
add
ret
xchg
add
ret
adc
imul
sub
mov
sub
xorl
add
cmpsb
sbb
inc
rcll
lods
test
addr16
xchg
mov
pop
or
pop
fisubrl
mov
rcl
push
les
loop
or
adc
out
nop
dec
xchg
lahf
pop
sbb
data16
adc
in
adc
inc
ret
je
sbb
adc
mov
ret
mov
push
adc
aam
outsb
rorl
mov
sarb
add
add
and
inc
adc
int
xor
sub
add
adc
push
sbb
jl
jmp
adc
inc
pop
pop
adc
fldl
pop
or
mov
incl
mov
sbb
popf
fs
add
or
int
insl
mov
sbb
sub
mov
or
insb
test
movaps
dec
loope
mov
lods
or
in
push
mov
adc
mov
test
cltd
adc
fwait
push
cmpsl
cmp
sti
popa
push
mov
clc
dec
adc
add
jno
or
fldt
test
movsl
jecxz
enter
cmp
into
push
clc
es
mov
popf
std
scas
xchg
and
mov
scas
cwtl
xchg
call
adc
xchg
enter
stc
loope
sarl
inc
push
jle
xchg
das
fcomps
sbb
es
push
adc
add
push
out
or
jg
push
fdivl
pop
sub
fcomps
or
mov
jnp
jecxz
js
pop
push
adc
in
pop
pop
aaa
lcall
add
shlb
cmp
je
adc
repnz
and
test
jle
mov
bound
inc
add
iret
pop
std
mov
mov
add
mov
mov
sub
sub
or
into
ret
mov
pop
add
push
pop
push
push
lcall
pop
sbb
sub
push
push
je
pop
xchg
fnstenv
push
xchg
sahf
loope
sub
xchg
cwtl
and
push
repnz
xchg
dec
addr16
ficoms
and
jecxz
lret
mov
scas
shl
push
dec
iret
shlb
pop
sbbb
daa
push
sub
or
or
test
or
or
popf
setp
jle
adc
je
mov
cmpsl
lods
xlat
scas
call
inc
test
add
jl
cltd
mov
push
iret
mov
xchg
adc
das
push
xchg
movsl
cs
adc
mov
sbb
call
cmp
pop
sub
jo
test
pop
inc
clc
jg
sub
push
sub
lea
push
lret
sbb
push
inc
test
mov
dec
and
test
push
loopne
leave
cs
hlt
mov
mov
add
test
test
mov
fld
push
pop
jl
sub
jp
push
pop
lods
mov
dec
xchg
cmp
xchg
mov
ficoml
adc
adc
cmpsl
shrl
mov
xchg
popa
xorl
adc
mov
fwait
pop
movsl
or
fidivs
test
sub
and
fnstenv
test
mov
cmp
push
and
mov
ss
pop
adc
mov
imul
mov
mov
push
xor
xchg
mov
or
add
xchg
gs
or
mov
xor
adc
arpl
and
aad
in
add
out
or
cmp
sub
call
jnp
push
pop
adc
or
xlat
push
lret
sbb
sub
mov
dec
gs
imul
popa
pop
test
inc
nop
cmpsl
push
or
push
or
mov
xchg
jp
and
das
push
iret
mov
inc
push
pop
or
adc
inc
inc
jg
ja
inc
movl
inc
std
test
inc
adc
fldz
and
dec
imul
cmp
and
sub
adc
push
or
inc
pop
out
pop
add
jnp
push
xchg
jae
inc
jmp
sbb
xor
mov
adc
mov
push
and
adc
add
adc
sub
test
adc
mov
stos
add
rorl
or
addr16
pop
fmuls
mov
flds
push
data16
add
sub
movsl
jo
in
popf
and
dec
movsl
mov
sbb
call
adc
xor
das
inc
sbb
nop
sbb
cmpsw
mov
es
rcrl
push
je
push
push
pop
pop
popa
sbb
xchg
fldt
mov
cmp
jl
push
cmp
push
cmp
dec
cld
cld
repz
cmp
jp
push
cmp
cmp
cmp
add
sti
add
add
inc
jmp
and
data16
and
std
mov
ljmp
lahf
aas
and
or
fs
dec
pop
cmp
pop
idiv
call
cmpb
ror
aad
dec
mov
inc
movsb
cmpsb
or
mov
test
jnp
add
jns
in
pusha
push
jnp
inc
das
subb
sarb
sbbb
ret
sbb
push
hlt
iret
adc
mov
mov
dec
mov
ret
xchg
xchg
mov
dec
and
sub
inc
cmp
jnp
dec
pop
ficomps
add
sbb
pushf
push
dec
sahf
and
adc
xchg
sub
mov
mov
mov
pop
int
cmp
ficoml
mov
jo
push
push
outsl
mov
test
cmpsb
lahf
add
enter
fs
pop
leave
and
iret
mov
mov
add
shrl
dec
mov
sub
pop
pop
push
scas
popa
jns
add
dec
push
dec
mov
cltd
inc
rcl
iret
enter
aam
hlt
or
and
jo
adcl
add
mov
inc
insl
pusha
mov
rcrl
dec
test
stos
outsl
loopne
inc
jl
insl
mov
les
daa
cltd
movsl
adc
fistpl
add
push
data16
dec
pop
mov
dec
push
sub
leave
lock
inc
test
mov
xor
add
and
jb
imul
xor
es
or
dec
and
and
leave
adc
mov
popa
subb
enter
insl
lods
mov
or
fistl
add
jecxz
inc
jne
ret
addb
jo
loopne
sub
lods
sub
xor
sbb
sub
aaa
xchg
fs
sbb
and
sbb
add
pop
cmpsb
test
cmp
xor
push
sbb
fwait
xchg
mov
es
sbb
stc
add
add
movsb
adc
or
cmp
outsb
and
jnp
jno
add
mov
mov
push
lea
pop
cmp
cltd
push
or
push
notl
in
mov
lds
fsubrl
push
or
mov
jp
shrb
jae
je
xchg
lods
push
and
nop
sbb
or
add
adc
jmp
inc
adc
lret
leave
inc
add
adc
loopne
sbb
dec
and
mov
inc
add
adc
lea
sbb
ret
push
or
test
fs
rorb
sar
les
mov
lret
mov
or
adc
sub
add
pop
or
sbb
fwait
loope
push
and
or
mov
out
bound
rcrb
lds
xor
push
dec
mov
mov
pusha
mov
sbb
adc
xchg
inc
jo
jne
fcoml
enter
or
add
sub
xor
aaa
int3
add
jnp
jne
lea
mov
add
pop
xchg
mov
out
jmp
xor
test
lock
loopne
xor
fs
add
cmpsl
dec
shll
add
cmpsb
clc
cmpsb
ret
orl
test
orl
add
aaa
or
fwait
adc
fistl
dec
scas
fiadds
or
and
mov
jbe
cmp
ficompl
adc
pminsw
add
mov
out
fiaddl
ror
insl
andb
add
xor
cli
push
add
or
push
ljmp
ja
pop
loopne
sbb
jbe
and
std
nop
and
hlt
mov
and
in
fsubrs
flds
adc
out
ss
stos
push
js
lock
loop
push
add
adc
lret
les
fmuls
popa
inc
addr16
pop
push
popa
stos
cmp
mov
popa
inc
jne
stc
push
test
adc
popa
pusha
mov
addr16
mov
sbb
push
add
xlat
pop
or
into
inc
pop
fildl
fildl
mov
add
dec
shl
sbb
ror
push
pop
gs
mov
push
adc
cmp
pop
xchg
jl
add
rep
xchg
test
leave
push
pusha
jae
jnp
xor
fnstsw
jg
adc
lods
popa
xor
adc
arpl
mov
sub
pop
pop
inc
je
and
adc
subb
and
lea
mov
xor
mov
and
push
lock
cmp
je
cmp
jle
push
cmp
shl
add
roll
adc
inc
cwtl
jl
push
pop
pushl
xchg
clc
cmpsb
and
cmp
mov
jle
or
out
xchg
inc
ret
xchg
inc
inc
push
lods
add
leave
icebp
xchg
push
sahf
jbe
mov
xor
in
orb
or
out
mov
pop
push
dec
sub
in
jno
cmp
fsub
sub
or
sub
insb
movsb
or
xchg
fcom
mov
sub
add
or
fnstsw
test
je
sbb
and
pop
clc
add
xlat
ret
add
fldl
push
sbb
dec
cmp
out
mov
fstpl
and
test
into
fstpl
hlt
pushf
mov
inc
inc
xchg
mov
pop
or
fnsave
jnp
xchg
add
and
loope
fsubrp
pop
or
adc
xchg
repz
fcomps
dec
inc
repz
xchg
push
mov
mov
imul
ret
lret
pop
and
mov
or
add
andl
sbb
xor
std
push
testb
aaa
inc
mov
xor
pop
scas
sbb
enter
mov
push
stos
adc
shlb
inc
jo
sub
dec
and
mov
jge
dec
inc
inc
sbb
popf
add
cmpb
or
inc
dec
fs
adc
xor
xor
icebp
and
mov
sub
xchg
iret
pop
add
jnp
lock
mov
sbb
mov
mov
and
sbb
pop
push
add
push
jp
jae
daa
add
cmpsl
xor
jnp
es
or
mov
scas
add
cmp
push
clc
and
cltd
push
clc
loop
jmp
cmp
jb
sbb
leave
shld
add
add
add
ja
jb
ja
push
mov
push
push
inc
add
push
inc
and
push
or
lods
sarb
adc
mov
push
mov
mov
push
mov
int3
pusha
adc
or
or
pop
ja
cli
insl
push
push
mov
ret
add
pop
pop
sahf
es
xchg
add
popa
mov
inc
sbb
ret
cmp
push
mov
cwtl
leave
shlb
xorl
loop
mov
add
adc
nop
push
inc
cmpsl
insl
insb
or
push
sbb
jle
testb
cmpl
imull
jne
rclb
and
fidivl
mov
push
loope
dec
push
push
jl
outsl
mov
jns
aas
in
popl
xor
mov
sti
jg
stc
std
mov
or
sahf
mov
out
data16
rol
mov
push
push
push
outsb
mov
hlt
ret
insl
mov
sub
add
ret
mov
sub
dec
or
add
mov
mov
sub
mov
adc
les
and
in
adc
mov
add
jle
add
or
lods
out
icebp
mov
xor
insl
loope
icebp
add
or
je
xor
ss
repnz
dec
pop
push
nop
xchg
movsl
add
out
filds
jns
push
test
xchg
or
pop
movsl
sbb
das
lea
rcrb
push
insl
mov
or
dec
ljmp
inc
rclb
movsb
mov
push
test
push
imul
mov
mov
stc
inc
in
xor
push
adc
add
mov
mov
add
clc
and
fiaddl
inc
shrb
inc
test
jl
lds
ds
je
lret
mov
dec
ror
jno
pop
xlat
cmp
pop
add
lcall
mov
cwtl
push
xchg
inc
imul
outsb
mov
dec
inc
xor
stc
jo
ret
pop
add
cltd
inc
add
les
sub
ja
xchg
inc
cmp
js
xchg
xchg
xorl
popa
jno
xor
sbb
sub
sub
lret
ret
fwait
mov
jno
jp
cmp
mov
pop
lret
or
adc
fld
pop
inc
cli
push
mov
ja
ret
ljmp
dec
aam
inc
lahf
repnz
cmpsl
rcll
nop
add
sbb
clc
add
add
adc
and
in
push
flds
call
mov
sbb
pop
push
outsb
inc
push
add
jl
xor
cmpb
adc
and
jns
fists
add
adc
mov
and
push
push
jmp
mov
call
xchg
fsubrs
lret
es
adc
push
popa
out
orb
or
sbb
insb
jno
shll
xor
movsl
pop
cld
jno
mov
inc
mov
insl
jo
daa
sbb
sbb
add
mov
fs
addb
int3
add
sub
int3
and
je
add
sbb
dec
jne
movsb
pushf
mov
mov
in
push
xchg
or
into
push
cld
mov
add
cmp
push
sarl
or
jp
push
je
lret
mov
push
scas
push
stos
cmpb
lea
insb
scas
push
dec
push
test
jnp
sbb
iret
hlt
push
sub
adc
sbb
enter
in
fs
xchg
jl
pop
in
inc
push
test
cmp
jge
push
stos
mov
pop
push
pop
ret
dec
push
nop
inc
mov
and
jle
xchg
enter
mov
jb
and
call
mov
and
rolb
enter
orb
in
inc
pop
jl
jb
nop
inc
rclb
adc
scas
and
ljmp
insb
mov
ror
fisubrs
iret
repz
adc
jns
out
and
pop
bound
jbe
mov
test
mov
sahf
out
in
clc
add
cmp
or
and
xor
and
push
pop
jo
inc
adc
aaa
lret
adc
lret
push
lahf
fnsave
add
pop
js
ds
xor
jae
mov
inc
or
test
fcompl
inc
adc
test
nop
je
orl
sarl
les
jno
ja
arpl
sti
test
movsb
movsl
xchg
xchg
out
xchg
fwait
jmp
jl
mov
sub
add
mov
inc
mov
push
std
xchg
aam
pop
stc
jmp
fldz
fcompl
cmp
cmp
pop
xchg
cmp
inc
fisttpll
mov
rcrb
mov
faddl
test
sub
sbbb
sbb
loope
shlb
les
gs
xlat
out
dec
test
inc
mov
add
and
dec
lods
xchg
popa
pop
inc
cmpsl
std
int3
imul
mov
ja
rorb
arpl
xchg
ja
cwtl
mov
push
cmp
push
in
lock
dec
add
rcr
add
cmpsl
scas
sahf
push
xchg
aam
or
add
outsl
in
xchg
cmpsl
jg
inc
add
movsb
sbb
or
xorb
fisubl
xorl
push
gs
push
or
mov
add
dec
sbb
sbb
add
movsb
sub
adc
int
adc
xchg
adc
xchg
dec
and
decl
ret
mov
and
inc
and
add
rcll
add
adc
or
inc
or
movb
lea
adc
sti
mov
scas
sub
pop
shlb
fwait
inc
push
or
or
xor
pop
pusha
mov
lret
outsb
cmpsb
mov
inc
rcll
das
shr
push
or
cmpl
bound
sbb
out
rcll
dec
shlb
jle
test
ret
pop
inc
jnp
xchg
je
mov
testb
push
mov
or
xchg
leave
int3
cmc
enter
js
dec
add
jno
leave
mov
sub
and
hlt
fnstsw
push
std
popf
mov
xchg
fimuls
xor
stos
xorb
dec
push
movsl
cwtl
fwait
fwait
adc
sahf
sbb
jl
xchg
je
jnp
push
and
cmp
mov
push
pop
pushf
push
xchg
stc
adc
jp
xchg
mov
xor
lcall
pop
rorb
push
jle
icebp
xor
and
and
mov
fnsave
xor
imul
das
insb
imul
sub
cs
sub
sub
fs
int3
in
int3
xor
ss
mov
cmp
pusha
loopne
mov
pop
int3
sub
mov
test
adc
adc
pop
aaa
popf
jo
cmp
cmp
in
xlat
movsb
inc
fbld
dec
sti
subl
mov
lcall
and
inc
or
xchg
js
stos
push
loopne
orb
test
push
lahf
pop
incb
mov
imul
ja
loopne
imul
gs
scas
add
inc
add
int3
pop
sbb
sbb
sbb
nop
push
mov
mov
dec
and
movsl
xor
dec
mov
es
jae
sbb
sub
fists
pushf
test
add
ret
inc
xchg
push
or
adc
data16
lods
xor
cmp
aad
fwait
or
cmp
je
adc
push
mov
cmp
pop
loope
fmuls
pop
cmp
insb
adcb
inc
movsl
jle
sar
andl
int
add
es
pop
cld
test
cmp
dec
insl
hlt
mov
mov
dec
mov
icebp
fmul
cmpsl
movsb
loopne
add
int3
cmp
mov
rcll
sub
bnd
ds
movsb
aas
test
mov
cmpsl
inc
cmpsl
roll
aas
and
and
cmp
and
in
aaa
and
and
popa
inc
inc
push
adc
daa
cmp
pusha
cmp
inc
cmp
sbb
and
inc
push
rcrb
push
scas
dec
xorl
jo
push
cmp
subl
sub
popa
inc
jno
dec
xchg
add
xchg
or
or
sub
pop
cmp
sbb
adc
adc
outsl
or
std
jno
jmp
push
sub
pusha
mov
fnstsw
nop
movntps
and
out
xchg
out
add
rorb
xor
xor
cmp
push
and
push
cmc
in
cmp
loopne
inc
xchg
loope
or
jle
push
mov
call
xchg
imul
enter
pop
ret
test
out
pusha
jo
cvtpi2ps
out
jge
test
jne
or
hlt
push
add
xchg
rorb
rol
push
mov
push
das
or
mov
add
sub
push
gs
or
ret
pop
sbb
mov
into
push
mov
xchg
ficompl
pop
cmp
add
sub
add
sbb
loopne
inc
mov
inc
call
jno
sbb
aaa
mov
xchg
pushf
or
dec
mov
fimull
or
in
xor
adc
insb
xor
cmp
xchg
pop
cmp
push
pop
iret
mov
inc
data16
inc
jl
add
cmp
loopne
test
imul
or
nop
push
int
iret
and
xchg
setl
and
and
mov
int
adc
adc
adc
in
dec
adc
xchg
es
inc
mov
lock
adc
aaa
das
push
and
call
mov
mov
out
push
sbb
pop
fbstp
notb
negl
lods
fsubrs
sbb
xchg
lods
sbb
int
fcoml
push
orb
fcompl
push
xchg
out
mov
int
mov
jl
adc
inc
and
adc
cs
jae
and
adcl
nop
out
inc
test
sbb
jns
cmpb
js
imul
inc
xchg
mov
nop
push
or
push
pop
mov
adc
xchg
movsb
mov
cmp
sbb
test
test
sub
add
int
xor
or
dec
xor
fs
pop
dec
pop
add
fsubrl
pop
add
adc
sbb
testl
nop
cmc
adc
movb
sbb
cli
push
xor
add
lret
in
pop
sub
xor
inc
inc
sbb
xor
jns
and
push
in
cmpsl
xor
cltd
xor
xchg
dec
or
dec
xor
and
cmpsl
sbb
adc
jbe
imul
in
shll
sub
add
jne
cmp
add
mov
test
test
orl
movb
mov
and
mov
iret
test
jne
mov
push
adc
ret
cmp
aad
push
orl
adc
push
divl
lods
or
mov
cmpsl
sbb
and
rorl
pusha
or
pop
push
mov
shr
and
test
or
or
icebp
and
dec
xchg
jnp
push
mov
cmpsb
or
xchg
mov
and
push
ret
adc
xor
jo
nop
sarb
dec
punpckldq
sub
movsb
add
mov
hlt
les
js
mov
adc
xor
mov
rol
jae
movsl
push
xchg
mov
inc
inc
sbb
xchg
push
push
inc
jmp
inc
or
fnstcw
sbb
add
fmul
jbe
sub
sbb
rcr
enter
leave
pushl
clc
push
add
or
ror
sbb
mov
xchg
cmp
xor
mov
jae
test
pusha
inc
scas
loope
dec
nop
pop
sub
movsb
and
cltd
push
sbb
sbb
sub
roll
and
pop
push
imul
sbb
stos
sub
push
mov
out
imul
add
sub
pop
or
int
push
imul
sub
mov
subl
dec
enter
sub
rorb
sub
pop
push
imul
test
push
adc
loope
lea
dec
scas
xchg
orl
lods
es
movsb
imul
ret
dec
in
loope
jno
pop
pushf
mov
aad
imul
mov
mov
popa
loop
call
popf
das
not
and
mov
icebp
inc
movsb
movsb
cltd
nop
ss
lcall
lods
cltd
nop
inc
sub
imul
nop
inc
lcall
movsb
cltd
and
and
lcall
cltd
nop
test
mov
imul
sbb
subb
and
and
les
test
rcl
pop
shlb
sahf
adc
adc
fdivs
and
mov
inc
sub
push
xchg
in
jnp
xchg
jmp
lea
jno
add
adc
iret
dec
fnstsw
pop
sbb
loopne
mov
cs
gs
test
test
xor
xor
dec
icebp
fdivrs
mov
lds
adcl
mov
cmp
push
push
mov
je
repz
push
push
push
es
idivb
jecxz
repnz
pop
sub
pop
scas
aam
add
dec
jo
orl
dec
inc
lods
mov
pop
mov
pop
jg
ss
loope
adc
push
and
or
adc
mov
dec
inc
cmpsb
and
xor
push
nop
push
add
popf
fidivl
adc
fadds
ss
or
rorl
cmp
dec
cmp
or
cmp
lods
mov
loope
clc
dec
pop
push
lock
or
clc
cmp
daa
lea
inc
sub
ffreep
repnz
push
cmp
ret
mov
inc
mov
xor
add
sub
xchg
test
std
and
andb
mov
pop
adc
cmp
xchg
dec
jbe
movsl
dec
lods
imul
jp
mov
pop
dec
mov
aam
pop
and
sub
mov
pop
mov
jmp
lea
mov
jmp
lea
add
sub
pop
jecxz
jmp
adc
mov
inc
inc
xor
repnz
or
inc
adc
outsb
inc
or
jg
loop
push
push
sbb
std
mov
inc
je
push
push
clc
adc
or
mov
add
push
adc
dec
adc
nop
jb,pt
mov
imul
adc
lahf
loopne
xor
push
addl
lret
pop
push
xor
ja
cwtl
ret
aam
pop
cmp
fcomip
fbld
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
cmp
add
les
add
push
push
sti
or
hlt
subl
lock
push
or
iret
jne
mov
inc
add
repz
jae
inc
adc
cmp
push
jmp
lods
add
mov
dec
roll
mov
jmp
xlat
mov
mov
add
add
inc
sub
mov
xchg
xchg
lods
inc
clc
and
adc
pop
jl
push
sti
add
adc
mov
mov
xchg
jne
pusha
fcmovu
jne
pushf
xlat
dec
or
loope
js
or
ds
imul
mov
xchg
mov
test
sub
push
and
ljmp
sahf
cmpsl
jne
inc
sub
pusha
rcrl
ss
xchg
icebp
or
sbb
movsb
adc
inc
sbb
add
pushl
inc
je
xchg
pop
lea
ret
sbb
test
out
cmpsb
sbb
addl
cmc
cwtl
test
xor
sahf
stos
andl
sub
in
push
aam
sbb
imul
push
mov
cmp
ds
jl
or
pandn
mov
cmp
or
and
mov
add
pop
dec
cld
shr
mov
add
pop
add
xchg
dec
add
leave
jne
pop
xor
add
movsl
xchg
xchg
scas
mov
loopne
xor
pop
jno
sub
lea
mov
pop
push
add
sub
cmp
flds
pop
or
fiadds
push
sbb
push
lock
adc
test
dec
arpl
lahf
push
lock
clc
rorl
addl
add
pop
mov
sbb
cmc
imul
inc
lock
fs
mov
mov
pop
add
cmpb
je
dec
and
add
in
jge
in
push
ret
sub
jle
jo
inc
jmp
inc
insl
mov
mov
loope
popa
push
sub
icebp
jmp
js
mov
or
push
adc
push
fwait
mov
and
cmpsl
pop
icebp
dec
pushf
fisubs
ret
mov
pop
add
loope
fmuls
sub
andb
fstpl
pushl
push
data16
ljmp
sbb
inc
je
imul
cmp
inc
push
add
xor
mov
add
xchg
adc
dec
arpl
rorl
dec
adc
inc
jp
sub
dec
loopne
mov
adc
xchg
orl
jns
pop
pop
sbb
jb
in
outsb
xchg
xor
cmp
cmp
jb
enter
and
sub
into
pop
or
mov
ret
rolb
xor
and
jmp
aad
mov
ret
or
and
outsl
repnz
lock
inc
mov
shlb
add
adcl
pop
daa
subl
push
push
movsl
adc
add
sub
mov
cmp
adc
dec
mov
pop
jno
or
repz
push
repnz
in
push
sub
and
add
lock
dec
test
mov
xchg
je
nop
bound
add
cs
sbb
leave
cmp
cmp
sbb
sub
aaa
cmpsb
xor
gs
xchg
shlb
pushf
es
sub
dec
or
sbb
movl
jp
in
push
push
sbb
loope
imul
movl
repz
xorl
sbb
pop
xor
push
jg
sbb
pushf
xor
push
sbb
add
push
fisttpll
or
shrb
cmp
push
pop
stos
fisttpl
test
adc
cli
dec
mov
mov
into
push
sahf
fmuls
or
into
test
add
rcll
push
sub
sbb
inc
and
pop
flds
mov
jle
and
dec
pop
je
cmpsl
add
jmp
aas
ja
cli
out
jg
rolb
andb
mov
ror
cmpsl
lods
push
and
push
ret
xorb
mov
cmpsb
mov
push
inc
sbb
or
add
iret
push
xor
fdiv
add
popa
or
pop
sub
insb
idivb
cmp
insl
outsl
ljmp
enter
scas
and
mov
shrb
or
lea
out
movsl
inc
mov
xchg
push
add
adc
xchg
mov
xor
adc
mov
mov
and
push
mov
ret
ficomps
or
mov
cmp
jg
and
clc
or
sbb
and
jmp
andb
xor
jo
inc
test
or
ja
mov
movsb
icebp
ret
je
stos
mov
ds
imul
mov
pop
cmp
xlat
push
mov
sub
dec
fadds
and
xor
jmp
jno
mov
push
les
push
adcl
sub
call
adc
shl
shrb
in
mov
inc
add
in
cmp
add
or
xchg
scas
add
sarb
mov
jmp
mov
sbb
fldenv
and
mov
aas
add
je
in
dec
lret
insl
test
dec
adc
add
mov
mov
xor
jne
je
inc
fimuls
pop
into
cmp
jl
add
sarb
rcrb
xor
xorl
mov
or
adc
push
sub
fxch
imull
insl
xor
xor
mov
fcompl
cmp
bound
and
movntps
lret
mov
enter
cltd
or
fldt
loop
mov
imul
pop
push
lea
mov
and
mov
inc
cmpsb
mov
pop
add
mov
or
xor
add
in
mov
xor
push
or
or
dec
xchg
movsl
xor
movsb
call
rdtsc
xor
enter
lock
mov
or
mov
movsb
or
lods
jnp
or
aad
or
lret
fcomps
inc
das
je
jge
sahf
ljmp
popa
out
jae
jns
jnp
or
cltd
nop
das
mov
inc
sahf
fdivr
cmp
cs
in
cmp
test
shrl
call
fmuls
movsl
jb
xor
push
call
mov
sbb
sub
add
xchg
mov
sbb
and
dec
mov
push
sub
push
pop
cmpsl
pusha
lea
sbbb
xor
addr16
xchg
mov
xlat
es
xor
xor
out
dec
sbb
xchg
repz
mov
imul
add
mov
leave
jp
push
cmp
outsb
add
ja
mov
or
add
ds
pop
mov
rol
pop
cs
pop
adc
mov
mov
or
push
push
dec
movsb
pop
mov
jb
add
in
pop
mov
inc
sbb
les
jmp
add
mov
sbbl
dec
mov
ret
lods
cli
iret
add
mov
call
sbb
ja
nop
mov
add
leave
inc
mov
inc
cmp
inc
data16
out
cld
mov
cmp
adc
jne
daa
cld
cmp
out
bnd
adc
hlt
jne
or
jne
or
push
mov
push
pop
xor
cmp
cmp
pop
mov
mov
and
aad
sub
push
lea
jo
mov
loop
dec
int
xor
mov
push
push
cmp
jl
mov
jmp
jle
pop
hlt
lea
jge
les
push
movsl
movsb
jmp
aam
push
lcall
push
xor
mov
sbb
subl
pop
or
jle
dec
loopne
std
and
mov
or
in
popa
inc
jmp
push
add
sub
xor
cmp
fdivrs
and
in
inc
adc
adc
fcomps
mov
loopne
rorb
adc
sbb
in
adc
mov
cs
jl
lea
das
jge
cli
xchg
jmp
fs
mov
push
ss
lea
push
sbb
loopne
xorl
or
jo
add
mov
insw
mov
inc
adc
orl
incl
pusha
pusha
xchg
sub
xchg
test
cmp
pop
mov
orb
mov
sahf
movsb
into
xor
xor
arpl
dec
ficoml
mov
add
fwait
mov
mov
mov
fidivs
movsb
hlt
push
push
arpl
push
addl
adc
aad
push
jo
sbbb
or
add
mov
adc
shlb
or
fmuls
inc
movsl
cmp
rorb
int3
or
into
inc
jo
jno
subl
dec
mov
int3
xchg
gs
or
or
add
inc
pusha
enter
imul
push
and
jnp
sub
xor
inc
je
es
xlat
fs
push
or
nop
ret
sub
popa
je
mov
shlb
sub
xchg
xchg
mov
hlt
xchg
dec
imul
jge
add
sub
daa
xchg
pusha
ret
rorl
js
sbb
nop
xchg
xor
insb
loopne
mov
mov
shl
pushf
movsb
lea
imul
mov
mov
xor
sbb
xor
je
insb
setno
cmp
add
je
ret
mov
and
mul
push
xchg
pusha
sbb
ror
or
xor
xorl
inc
sub
out
add
mov
loope
mov
xchg
jo
jmp
or
xor
or
cmp
mov
sbb
cmp
push
cltd
nop
adc
adc
cltd
nop
inc
push
add
adc
dec
push
adc
mov
sub
sbb
adc
xlat
leave
mov
sub
pop
xor
push
cltd
nop
cltd
push
sbb
or
outsl
push
adc
mov
adc
mov
and
ss
test
sti
dec
ret
ja
mov
cmp
pop
inc
cmp
adc
xor
and
and
outsl
mov
daa
in
mov
shlb
and
out
xchg
cmp
adc
lea
sbb
push
and
push
and
inc
mov
cltd
mov
pusha
jno
rcl
sbb
push
je
movsb
cltd
fsubrs
push
add
sbb
xor
dec
add
out
sbb
adc
insl
rorb
aam
mov
popf
adc
or
outsb
and
sub
adc
mov
inc
cli
and
js
jg
aas
jae
je
push
xchg
mov
mov
lea
and
adc
xchg
inc
push
fdivl
loopne
sbb
hlt
fsubl
push
lcall
std
rcrb
movsb
fwait
popf
cli
xchg
leave
mov
mov
nop
dec
lods
pop
sub
push
call
inc
sbb
xchg
add
out
jbe
imulb
pop
mov
push
les
add
inc
sbb
call
xchg
mov
fldpi
lods
adc
or
in
dec
sub
xchg
call
es
or
mov
or
int
inc
stos
push
jns
and
lock
or
add
imul
add
call
mov
push
lock
in
add
fmull
mov
xor
inc
mov
fldenv
sbb
mov
inc
je
arpl
inc
loopne
jae
dec
fwait
xchg
xor
push
lcall
out
or
test
imul
emms
mov
pop
push
insl
addr16
imul
mov
sub
pusha
emms
sbb
sbb
repz
fadd
popf
movsl
cmp
aam
lret
inc
loopne
shll
push
jmp
add
add
les
loopne
dec
cmc
je
rolb
test
jne
pop
sarl
call
jmp
popf
mov
and
jne
mov
and
sar
sub
popf
outsb
addb
xchg
outsb
sub
mov
pop
sarl
push
xor
cmp
push
mov
push
adc
lret
lds
cmp
daa
fmull
jb
repz
inc
lods
dec
mov
or
and
push
test
ja
mov
dec
xchg
int3
popa
ss
pop
xor
dec
push
lcall
cld
pop
sti
push
xchg
mov
je
adc
stos
lock
int
cmp
mov
rclb
lock
adc
add
add
adc
mov
jmp
or
xor
mov
addb
xchg
cmc
scas
subl
pop
call
movsb
pop
je
jmp
out
je
mov
xchg
push
xchg
enter
lock
add
inc
adc
xor
and
and
lret
and
mov
and
add
inc
dec
add
or
fstps
add
fdivrs
mov
sbb
xor
aas
inc
xor
imul
fists
cmpsb
mov
les
xor
push
push
xchg
outsl
movsl
push
shll
rorl
sbb
xchg
addb
add
dec
mov
imul
inc
or
and
pop
rorb
and
leave
inc
nop
xchg
push
addl
inc
sub
add
add
sub
or
aad
add
mov
lret
mov
pop
adc
ds
cmp
in
add
stos
add
testl
xchg
pop
leave
adc
aam
jno
outsb
jo
and
add
dec
ret
push
je
movsl
ja
leave
pushf
dec
or
cmpsl
mov
mov
leave
cmp
je
mov
cmp
adc
rolb
sbb
xchg
lock
inc
sete
es
clc
icebp
xorl
cmpb
dec
imul
sbb
add
jne
jae
movsbl
sbb
inc
mov
mov
sbb
or
inc
inc
mov
clc
sub
or
out
push
das
add
lea
and
dec
inc
jg
add
or
jecxz
or
add
inc
cmp
jl
cmpl
sbb
cltd
and
add
sar
es
rolb
add
push
scas
push
stos
hlt
clc
xor
ss
subb
cmp
jecxz
sbb
inc
jne
push
jg
or
adc
or
dec
add
shll
adc
pop
loope
arpl
adc
xor
lea
push
adc
and
inc
inc
jp
jbe
std
xlat
dec
adc
ret
or
add
ret
add
sbbl
adcb
mov
xchg
push
cmp
mov
cmp
aas
mov
cmp
or
mov
pop
lods
fstl
cli
js
inc
mov
add
dec
jne
pop
fs
cmpl
pop
or
rolb
lcall
sbb
add
jns
push
ret
or
imul
push
adc
loopne
cs
adc
mov
or
or
sub
mov
ficompl
arpl
push
pop
or
das
addl
add
mov
push
or
push
repnz
pop
sbb
mov
jo
xor
repnz
call
jbe
outsb
dec
or
lret
hlt
add
nop
je
add
adc
push
js
mov
adc
das
test
loopne
pushf
add
aad
or
aam
xor
add
push
mov
outsb
pop
pushf
mov
pop
add
cmp
sti
test
jnp
or
add
push
and
loop
push
sbb
xor
mov
dec
add
jmp
test
xchg
inc
add
mov
jle
js
cmpl
lcall
pop
int3
pop
ss
push
dec
jns
lret
add
add
add
aaa
push
arpl
dec
sbb
jae
cwtl
push
insb
mov
push
lea
inc
das
in
popa
test
cmp
movsbl
mov
je
push
pushl
add
xor
cmp
mov
fadd
addl
fwait
mov
or
sub
jmp
pop
xor
jp
add
push
test
std
xchg
add
mov
movsb
mov
push
pop
gs
push
das
push
nop
dec
cmp
shlb
jbe
fisttps
add
pop
mov
push
cmp
mov
jecxz
test
rorb
int3
add
aam
add
xor
ja
loop
mov
cld
dec
rolb
or
fidivrl
push
shll
adc
fs
xchg
aam
imul
sbb
add
add
rclb
or
pop
aam
mov
mov
push
and
scas
movsb
push
arpl
call
push
jmp
mov
xchg
adc
lcall
sub
xchg
or
imul
pop
fwait
sbb
ret
mov
fidivl
pushf
add
add
int3
int3
mov
xor
sbb
in
add
sti
cld
jecxz
mov
cmp
loopne
sbbl
and
repz
je
cmpsl
lods
cs
fmuls
adc
cmpsl
call
out
das
in
inc
rorb
inc
xorl
jle
in
fisubl
add
push
mov
pop
mov
clc
and
popa
mov
fwait
lcall
or
pop
mov
xor
xchg
and
rclb
and
pop
adc
xchg
dec
aam
add
test
rolb
arpl
fidivs
clc
jl
cwtl
loopne
fdivrl
pop
jge
or
sbb
in
jo
push
xchg
pushw
sbb
cmp
push
movsbl
call
enter
call
adc
jmp
mov
out
test
xchg
sub
out
test
cmp
nop
lret
movb
pop
push
test
or
shlb
inc
add
addl
jmp
add
xor
cmp
mov
aaa
pop
inc
popa
xchg
out
dec
push
roll
out
mov
mov
mov
aaa
cli
jo
stc
mov
cld
jp
jmp
icebp
xchg
mov
xor
iret
popf
sub
add
fdiv
jge
movsb
lock
mov
and
dec
sbbl
call
add
iret
pusha
rcrb
mov
sub
and
inc
inc
scas
mov
or
jg
mov
pop
mov
je
adc
xor
mov
pushl
mov
outsl
mov
mov
clc
pop
mov
ja
mov
sub
adc
lea
rol
sub
inc
push
and
inc
cmp
lods
xchg
out
mov
push
mov
mov
incb
xor
outsl
decl
decl
mov
mov
inc
mov
mov
cmp
jl
fldenv
addl
mov
mov
leave
sarb
sub
push
icebp
or
orb
fdivrp
pop
mov
mov
add
add
movsb
insl
push
mov
mov
nop
and
lds
add
cld
push
leave
push
xor
mov
inc
jmp
inc
adc
jmp
mov
mov
fwait
jb
aam
add
into
in
xchg
mov
mov
inc
mov
push
cmpsl
icebp
inc
bound
xlat
push
mov
mov
nop
cmp
adc
gs
push
fs
in
adc
leave
push
sbb
and
les
ds
mov
outsb
adc
testb
loopne
pop
adc
ds
push
enter
mov
xor
jae
lahf
lret
push
scas
and
inc
xlat
pop
mov
mov
popa
push
loop
test
and
in
scas
rorb
add
adcb
xor
pop
pop
sbb
dec
mov
jae
and
adc
add
mov
sbbb
mov
mov
and
lret
insb
imul
addb
lret
push
cmp
adc
pop
je
pop
clc
jp
in
mov
push
mov
pop
mov
sub
add
or
rol
je
dec
mov
mov
lahf
shrb
sub
ss
lea
cmp
jbe
cmp
jbe
sbb
rorl
sbb
mov
lcall
call
stos
and
insl
sbb
ret
mov
push
sbb
adc
add
stos
add
or
push
push
mov
aaa
cmpb
push
pop
jne
outsl
adc
daa
push
fsubrs
dec
cmp
push
push
cmp
cmpsb
add
aas
stos
jmp
push
scas
test
fimuls
jns
mov
hlt
jmp
pop
ret
and
inc
lods
dec
push
daa
lds
and
sbb
cltd
jbe
mov
test
xchg
jne
lods
mov
das
mov
or
cltd
call
sub
movl
lea
adc
add
xchg
push
int
jecxz
push
xchg
pushf
adc
pusha
sub
mov
push
nop
mov
mov
std
cmpsb
mov
or
add
andl
in
adc
add
adc
dec
in
test
mov
stos
and
mov
sbb
mov
lock
mov
inc
popf
aas
jb
movsl
addr16
fwait
sub
imul
adc
add
scas
cs
adcl
adc
xor
pusha
adc
ljmp
and
rorb
add
push
and
and
pop
mov
dec
cmpl
xchg
cmpl
int3
cmc
sbb
pop
shrl
push
mov
jmp
push
pop
xor
inc
enter
jle
pop
add
cmp
mov
adc
pop
mov
add
ss
add
or
push
mov
push
adcl
cmp
sbb
jbe
fsubl
mov
adc
mov
xchg
mov
xchg
outsl
dec
sti
cld
andl
and
sarb
jge
push
imul
call
or
xor
scas
add
push
aam
and
push
add
cmpsl
addl
xchg
adc
and
imul
out
fdivl
ds
push
je
jg
fs
push
lret
les
sbb
jge
dec
or
mov
sets
jecxz
lret
maxps
push
mov
push
cli
jo
mov
jge
push
push
cmp
sbbl
fs
fidivrl
xchg
rolb
rcrb
jge,pn
cmp
mov
dec
cli
mov
pusha
ficompl
fdivl
stc
adc
push
rorb
inc
add
leave
push
insb
or
sub
inc
aam
add
cmpsl
int
sub
xlat
or
push
pop
sbb
outsb
je
aaa
push
inc
sarb
mov
cmp
xlat
popf
ds
cmp
movsb
push
mov
dec
mov
or
push
into
sub
add
insb
jge
addr16
daa
xchg
outsb
mov
cmp
dec
divl
out
int3
mov
or
sbb
filds
aas
gs
add
dec
adc
incl
mov
mov
cwtl
mov
js
inc
aad
push
jmp
push
pop
mov
aas
jmp
stos
int3
shl
push
adc
call
xchg
loopne
push
cli
iret
xor
pop
push
push
push
push
movsb
adc
fisttpl
push
leave
jne
and
sbb
imul
push
pushl
hlt
pop
rclb
mov
daa
inc
pushl
in
pop
cmp
jbe
inc
xchg
idivl
push
pop
push
sbb
ja
jmp
in
fldcw
add
sub
adc
lret
negl
cmpsl
or
cmp
nop
data16
cmc
out
xchg
daa
sbb
pop
clc
jne
mov
push
cmp
adc
loopne
call
inc
mulb
mov
leave
xchg
out
push
cmpsl
mov
mov
rclb
nop
or
jmp
jl
mov
cmp
sbb
popa
in
ss
adc
call
cmp
sbb
xchg
and
hlt
in
add
xor
and
call
mov
je
jno
rclb
pop
mov
fldt
inc
inc
add
jae
adc
hlt
inc
jmp
add
pop
push
icebp
inc
mov
cld
nop
sbb
pop
xchg
mov
rorl
cs
xchg
fisttpl
out
icebp
dec
shl
xor
and
push
in
jmp
dec
sbb
pop
adc
dec
mov
or
cmp
andl
add
push
xchg
std
dec
and
and
xor
mov
sbb
mov
push
jo
ds
add
into
inc
call
xor
xchg
cwtl
jl
loopne
mov
push
jae
sarb
pop
fildll
sub
cmp
cmp
pop
sti
xor
into
adc
andb
pop
sub
mov
and
or
push
mov
das
inc
xchg
gs
xor
dec
or
loopne
ret
lcall
movb
aad
dec
das
sub
xchg
pop
adc
adc
sti
sub
push
cs
or
jnp
adc
push
or
add
mov
mov
dec
subl
xor
xor
xchg
push
movsl
jmp
lds
add
repnz
in
add
and
and
mov
sbb
mov
cmpsl
sbbb
xor
cmp
fsts
ja
add
pushf
mov
xor
push
mov
dec
mov
je
and
outsb
shlb
pop
xchg
js
adc
fs
sub
or
pushf
inc
test
inc
rolb
push
arpl
jo
push
xchg
mov
iret
popa
mov
push
mov
daa
dec
mov
inc
mov
out
arpl
repnz
jnp
mov
pop
adc
xor
outsl
adc
cmp
jne
inc
jge
and
fldl
xor
mov
sbb
rorb
jp
adc
lahf
enter
popf
fidivrs
cmp
pop
jecxz
jg
jb
mov
inc
dec
mov
movsb
jge
xor
shrb
call
pop
movb
push
aam
mov
and
ds
ret
in
ret
fisubs
fadds
push
cwtl
pop
loope
mov
rclb
xlat
inc
jmp
xchg
ja
cmp
sub
fs
jge
xchg
outsb
pop
mov
add
cs
inc
adc
sub
mov
pop
or
inc
jo
sub
add
xor
pusha
inc
fdivs
int3
add
mov
ja
repnz
pushl
movsl
test
mov
add
push
push
jne
jne
dec
popa
jecxz
dec
fcoml
inc
sub
xchg
faddl
loopne
mov
jmp
jge
mov
clc
mov
jmp
add
js
std
or
insb
add
ret
mov
cwtl
sbb
scas
movsl
les
subb
lea
push
mov
ror
mov
div
sbb
xchg
push
pop
les
and
loope
push
push
stos
or
inc
add
xorl
movsl
add
push
cltd
or
cmp
push
mov
xor
cmp
adc
sbb
inc
aaa
popa
pusha
and
leave
push
ret
lods
push
push
fisubrl
push
add
push
sbb
mov
jo
enter
mov
xor
push
pop
push
inc
adc
inc
aas
stc
mov
sub
sub
adc
addl
mov
mov
mov
fistpll
cmp
je
or
mov
cmp
addr16
je
cmp
jne
mov
insb
stos
shl
or
pop
insb
push
dec
sti
dec
and
mov
pop
dec
xor
push
adc
fbld
push
jmp
testb
je
testl
jbe
sbb
cld
cmp
jbe
aas
xorl
stos
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
xor
and
sahf
cld
push
imul
mov
cmc
sub
repnz
add
mov
or
loopne
cmpsb
push
adc
into
or
or
mov
sar
sbbb
sub
les
xor
cld
inc
pop
cmp
add
sbb
push
sti
cmp
outsb
hlt
cmpb
bound
xor
mov
xchg
pop
push
xchg
cwtl
rcr
mov
cmp
xchg
lds
out
inc
inc
xchg
push
jmp
inc
cld
shrb
sub
popa
leave
pop
jnp
push
mov
arpl
pop
test
dec
mov
cli
pop
add
lds
mov
data16
push
mov
faddl
paddq
jae
movl
rcrb
jecxz
add
pushf
aas
insb
sti
and
cmpsb
and
push
xchg
mov
cmp
fwait
sub
aaa
js
fs
jne
xor
or
lock
mov
mov
inc
rorl
call
cmp
dec
jge
jno
shlb
cmpsb
sub
push
jo
add
dec
pop
das
ss
push
add
and
or
xor
cmp
sarb
jbe
add
cmp
out
and
es
sub
sub
and
pop
or
mov
jbe
jl
or
adc
bound
das
shlb
cli
jbe
aam
cmp
jbe
loopne
stos
push
hlt
pop
arpl
pop
adc
adc
je,pn
test
jne
pop
adc
cmp
std
sub
jb
lock
mov
pusha
cld
lods
mov
adc
movb
inc
xchg
fadd
or
push
sub
and
inc
xor
push
adc
and
data16
mov
inc
sub
sbb
and
push
cmp
inc
inc
mov
adc
cmp
out
jae
add
jp
sbb
sbb
dec
inc
lcall
cmp
mov
je
pop
sahf
add
or
push
mov
sbb
daa
lods
adc
jne
hlt
adc
mov
cs
pop
mov
push
mov
rorl
dec
adc
jmp
out
into
inc
inc
adc
jp
clc
ret
add
leave
cmp
mov
js
jecxz
xor
jne
addb
js
mov
sahf
mov
imul
pop
addb
cwtl
add
add
jg
pop
push
aas
mov
in
cmp
push
mov
rclb
mov
sub
loope
ss
andb
cli
jecxz
or
adc
adc
mov
mov
lea
int
push
out
push
xchg
icebp
leave
xor
cwtl
and
mov
xchg
mov
jns
pop
lea
mov
sub
inc
or
add
lret
mov
cmp
lds
lret
jecxz
push
andl
sbb
int
movsb
cmp
pop
cltd
aaa
jp
pushf
enter
cwtl
or
mov
cwtl
cmp
es
iret
ret
adc
scas
es
push
pop
push
movl
lds
pop
mov
xor
push
xchg
add
cmp
mov
mov
sub
inc
xchg
push
mov
test
shrb
add
pusha
and
add
and
xchg
ss
mov
pushf
pop
loope
popf
int
js
stos
xorb
push
add
mov
je
pushl
fcompl
cmpb
lea
jle
mov
jae
pop
push
push
das
popa
movb
imul
sbb
cli
push
dec
lea
rcrb
pop
sub
enter
bnd
push
inc
fcmovbe
pop
xor
and
mov
pusha
mov
imulb
push
gs
add
ss
out
inc
inc
fwait
cmp
movsb
inc
push
nop
pop
pop
nop
push
into
test
cmp
or
or
out
and
fcoms
movsl
rorl
adc
outsb
cltd
mov
aaa
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
call
adc
cmp
pop
or
inc
push
fdivrs
shl
and
sarb
lea
sbb
jo
sbb
sbb
inc
push
mov
lock
in
mov
xor
mov
loop
inc
and
stc
je
fdivs
aaa
les
add
mov
add
add
pop
xor
mov
mov
mov
add
or
faddp
and
pusha
loop
jp
pusha
jb
loopne
decl
in
adc
roll
push
mov
pushw
out
xchg
or
mov
mov
mov
rcl
add
push
and
add
push
mov
or
or
push
ljmp
push
clc
mov
xchg
adc
bound
and
mov
inc
push
push
popf
test
repnz
xchg
addl
dec
xchg
and
cmp
popf
movsl
jb
xchg
cltd
cmp
jg
sbb
cwtl
pop
inc
loope
fnsave
cmp
pop
frstor
ss
xchg
push
enter
xchg
fs
pusha
cmpsl
xor
push
and
lea
adc
popa
out
and
cmp
jne
insb
add
pop
cs
inc
or
int3
in
rorb
push
sbb
sub
ficomps
add
add
outsl
sub
and
mov
jne
xchg
mov
ds
pop
cwtl
cmpl
dec
push
cmp
test
ficomps
pop
mov
or
out
add
dec
aad
cli
xor
insl
ficoms
xchg
sti
lock
add
js
js
cmpl
outsb
ficompl
in
andl
int
mov
add
in
sub
pop
fcmovu
and
xchg
rolb
add
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
sbbb
mov
adc
jne
icebp
popf
jne
push
mov
jne
lock
setle
mov
adc
loope
mov
push
addl
sub
dec
ret
dec
cmp
fisubrl
ja
loope
adc
mov
ret
add
dec
loope
and
insb
ja
roll
mov
xchg
jne
mov
shll
icebp
cmpsl
lods
stc
rclb
rcrb
rorb
cmpsl
mov
lcall
push
xor
xlat
push
aas
je
cmp
subl
and
jne
push
imul
jne
stc
adc
sbb
incl
test
ficoml
jg
pop
mov
and
sub
or
mov
jo
lds
mov
lret
sub
call
cmp
int3
loope
mov
sbb
pop
ds
je
pop
in
pop
sbb
enter
add
je
mov
je
imul
sub
imul
adc
int
sub
fdivl
jg
add
ret
or
sbb
push
add
xlat
fstpt
inc
es
mov
sub
decb
pop
dec
push
mov
add
cmpl
lock
xchg
dec
bound
orl
sbb
pop
cs
lret
pop
fs
push
lods
or
inc
decb
out
cmpb
or
or
jmp
mov
push
add
push
adc
adc
or
push
cmp
std
rolb
std
push
mov
adc
mov
repz
push
popa
fildll
movsl
aas
add
inc
arpl
mov
pop
xchg
sub
mov
push
pop
push
push
lock
xchg
jb
pop
push
push
pop
pop
pop
cs
lret
pop
pop
pusha
pusha
fs
pop
or
adc
pop
sub
popl
xor
ror
push
stc
push
or
enter
mov
imul
and
push
fs
push
frstor
jmp
ja
push
dec
add
sbb
jmp
push
rcll
insb
add
add
dec
adc
push
add
popa
push
add
or
sbb
or
inc
adc
cltd
dec
sub
add
adc
sub
outsb
bound
xor
test
push
jecxz
push
adc
or
add
daa
mov
push
cmp
xor
rcrl
leave
je
and
sbb
ljmp
popf
jecxz
sbb
inc
outsb
lret
fwait
clc
pop
dec
cli
jp
push
pop
jmp
push
jecxz
test
stc
sub
enter
movsl
popa
inc
into
or
sti
and
imul
jmp
mov
and
cmp
frstor
or
push
gs
cmp
mov
push
and
inc
lods
xor
mov
lock
xor
sti
add
fs
es
sti
rcrb
mov
pop
push
mov
sub
subl
push
pop
xor
mov
mov
movsb
fcmovne
test
imul
popa
xor
lret
je
add
and
push
mov
daa
aaa
sub
dec
add
dec
add
ss
es
outsl
adc
in
in
gs
jne
pushl
or
inc
sub
je
jg
mov
roll
ret
inc
mov
nop
mov
and
sar
cmp
je
push
aas
cs
bound
adcl
pushf
add
pop
sbb
pop
add
push
sbb
ret
cmp
mov
push
gs
sbb
sub
sbb
adc
ds
andb
mov
mov
faddl
call
fdivl
mov
cmp
jne
or
jl
push
into
sbb
add
pop
jbe
jo
pop
lcall
sbb
loope
test
test
je
sub
out
or
daa
cs
jae
js
lods
fcmovb
push
sbb
and
add
and
push
push
adc
sbb
mov
ret
or
inc
stos
sub
mov
xchg
mov
xor
mov
hlt
in
subb
or
add
imul
hlt
mov
hlt
cmpsb
int
cltd
mov
jge
jge
je
divb
push
xor
jle
or
push
inc
add
or
adc
mov
push
add
push
cld
mov
xor
inc
cmp
lea
jns
adc
inc
hlt
mov
lock
add
cli
hlt
cmp
push
add
and
mov
loop
inc
inc
mov
cmp
ljmp
hlt
mov
enter
jne
je
pop
jb
daa
and
repz
outsl
adc
mov
mov
pop
call
mov
ret
and
int3
cli
add
pop
jg
loopne
pop
jmp
popa
lea
test
test
xchg
outsl
orl
sarl
and
push
pop
cs
mov
jne
shrl
mov
push
rclb
hlt
push
add
test
stc
add
inc
mov
push
or
jle
out
fisubl
loope
adc
pusha
lods
xor
jb
xchg
push
cmpb
mov
xor
adc
add
lds
push
fsubl
mov
jo
out
xchg
and
or
mov
sub
push
cld
mov
sarb
fsub
pop
cmp
push
adc
pop
sbb
push
pop
dec
mov
fisttpl
pop
rcll
pusha
es
inc
je
xchg
sbbb
and
mov
movsl
test
adc
dec
sub
mov
sub
push
push
push
out
push
popa
stos
in
add
add
dec
push
in
loopne
sbb
cmpb
xor
mov
adc
inc
loope
nop
inc
and
add
jo
sbb
andb
mov
mov
mov
mov
dec
push
add
mov
je
or
dec
jne
jns
cmp
add
jmp
xor
xor
in
sbb
jg
jbe
push
aas
in
sbb
mov
jmp
xchg
cmp
test
cmpl
jo
out
cmp
cld
xor
ficoms
int3
xor
inc
shlb
repnz
ds
sub
add
fcomps
loop
out
neg
inc
call
cltd
add
cmp
sub
lock
call
insl
popa
and
and
mov
mov
inc
sub
insb
arpl
sub
imul
in
lret
push
mov
roll
fs
push
sub
inc
mov
das
pusha
inc
cmp
jl
jmp
loope
push
pop
pop
orb
clc
sbb
add
lds
cld
movsb
mov
mov
std
or
pop
push
cmp
movl
mov
mov
ror
mov
push
xchg
sarb
insb
xor
lea
ds
push
sub
xchg
les
jge
and
insb
cmpsb
dec
add
rep
subl
and
int3
mov
mov
adc
add
cmp
or
pusha
add
dec
clc
inc
push
xor
dec
pop
out
mov
and
inc
ds
inc
call
jg
push
xor
clc
jbe
mov
jne
jmp
push
fs
cmp
add
clc
mov
add
es
dec
add
push
or
int3
or
leave
push
in
js
ret
or
iret
stc
loope
dec
je
sbb
mov
pop
xchg
sbb
or
cwtl
hlt
sub
jno
outsl
sbb
aas
in
nop
cmc
xchg
cli
push
sbb
add
pop
xor
mov
mov
inc
cld
dec
fisttpl
call
add
inc
fsubrs
mov
movsb
not
arpl
fcomps
or
jae
sbb
adc
or
popa
pop
leave
sub
jl
jmp
cmp
mov
or
shl
cs
add
ja
inc
jo
jns
insb
stos
mov
test
jo
pop
jmp
push
loopne
add
sbb
dec
cmp
repnz
add
mov
xor
inc
adc
cwtl
jle
push
add
and
mov
dec
mov
and
push
push
mov
lock
mov
loope
pop
xchg
xlat
movl
adc
iret
jno
ja
popa
or
cmpsl
jo
movb
loopne
mov
cltd
jo
push
add
sbb
or
cmp
jp
add
pop
or
daa
push
rclb
xchg
inc
or
mov
data16
adc
pop
dec
ljmp
mov
shrl
push
stos
pop
inc
out
pop
movsl
mov
inc
movl
fisubl
sahf
or
or
cmp
mov
sub
insb
popa
inc
sub
ret
pop
fisttps
sbb
call
cwtl
mov
sub
or
pop
fcmovb
enter
or
bound
sub
push
cmp
push
mov
xor
xlat
inc
cld
sbb
mov
and
stos
xlat
rcrl
add
cmpsb
or
jbe
add
mov
das
push
sub
stos
or
sub
push
lds
loopne
xchg
lock
xlat
data16
stc
loopne
add
cld
adc
mov
and
and
adcb
add
inc
scas
iret
or
adc
push
jne
cmp
nop
adc
or
mov
imul
inc
fists
aaa
jbe
fucomp
cmp
push
and
xlat
mov
push
xor
stc
fcomps
push
or
dec
subl
add
push
push
mov
push
push
pop
inc
sub
mov
movl
add
xchg
bound
lods
sbb
push
adc
enter
cmpsb
imul
cmp
push
sbb
popf
and
icebp
mov
add
aam
sbb
iret
ret
xchg
mov
xor
add
push
push
stc
pop
mov
cmp
inc
xor
add
int3
ret
jo
inc
add
sub
jnp
mov
jnp
mov
lret
xchg
jb
int
jo
fadd
fsubrl
icebp
dec
push
mov
mov
stos
loopne
pop
ret
shl
gs
or
loope
or
mov
xchg
out
aam
pop
rclb
jb
mov
outsb
and
cmp
mov
dec
jge
cmp
xor
fsubs
mov
fmul
sbb
and
inc
and
js
sbb
add
test
hlt
lret
jge
mov
or
mov
or
pop
leave
mov
clc
or
mov
cmc
clc
mov
jo
and
fstpl
inc
push
mov
addb
inc
dec
adcl
mov
mov
dec
cmp
or
adc
sbb
inc
sbb
mov
test
orb
shl
xor
pop
inc
movsl
pop
jnp
out
jmp
adc
and
imul
das
jecxz
dec
imul
mov
xchg
popa
or
adc
pop
push
dec
mov
push
and
sub
cmp
addb
dec
std
dec
add
cli
lcall
roll
cs
decl
push
xor
mov
sub
repnz
sbb
xor
ficomps
inc
and
pop
inc
inc
or
and
fimull
inc
sbb
xchg
mov
enter
jb
xchg
add
sub
dec
aam
xorl
adc
dec
or
mov
cs
jnp
rolb
jae
scas
push
push
adc
outsl
addl
adc
sbb
mov
xchg
dec
je
sbb
fmuls
pop
lret
fstl
mov
arpl
xor
mov
add
adc
push
jmp
jge
adc
enter
inc
pop
mov
roll
jae
cmp
int3
push
mov
ljmp
pop
and
sbb
sbb
loopne
mov
rcrl
hlt
lea
adc
cld
in
cmpl
ja
adc
and
and
pop
add
and
call
jnp
push
jne
push
mov
and
out
mov
lret
and
mov
and
and
pop
ss
pop
mov
mov
pushf
push
cmp
out
mov
inc
lods
add
mov
lods
or
repnz
shlb
ja
push
sti
push
adc
dec
adc
mov
push
inc
xchg
lcall
inc
add
fs
loopne
or
xor
add
mov
out
pop
xchg
andb
dec
xor
mov
or
pop
jmp
adc
lahf
shll
jne
push
push
shll
mov
mov
je
dec
adc
cmp
lcall
xchg
lcall
out
sbb
or
in
lahf
int
shr
dec
test
sbbl
pop
or
mov
cmp
push
mov
loopne
loopne
outsb
mov
les
push
fadd
xchg
enter
aam
mov
pop
jbe,pn
fdivl
ret
lea
mov
fwait
and
insb
sbb
xchg
add
push
or
cmp
jbe
shrl
adc
aam
and
pop
out
fidivl
enter
mov
jbe
mov
jne
cmp
push
faddl
push
rcrb
jb
sub
sub
movsb
push
adc
loopne
dec
movsb
aam
dec
add
bound
xchg
mov
cs
adc
ret
icebp
inc
in
rcrb
les
cli
test
pop
or
add
dec
fst
and
stos
mov
cwtl
adc
pop
incl
cmp
and
jae
mov
shrb
cmp
jmp
mov
mov
add
cwtl
pop
add
pop
inc
inc
sbbl
push
and
pop
mov
push
mov
ret
jo
xchg
dec
lds
push
loopne
push
or
push
mov
lahf
xor
jmp
cmp
jns
divb
jo
das
ljmp
mov
and
aam
pushf
fs
inc
sbb
test
sbb
adc
or
mov
test
and
jge
lods
and
adc
jmp
in
pop
mov
xchg
jne
inc
and
adc
jmp
mov
mov
push
mov
jle
jg
or
mov
xor
ret
mov
mov
inc
add
or
divb
sub
cmp
rcl
mov
mov
roll
push
mov
push
imul
add
mov
xchg
push
mov
xchg
xor
inc
push
es
inc
sarb
aaa
cmp
jb
jnp
lods
mov
ja
idivl
inc
push
xlat
dec
pop
lods
sbbb
movsl
pop
jne,pt
mov
push
es
aas
xor
or
mov
xor
cmp
dec
rclb
jmp
push
mov
ds
enter
hlt
jne
je
pop
cmpsl
sub
sub
add
out
xor
push
xchg
dec
add
push
add
pop
insb
sbb
xchg
mov
ret
enter
inc
ret
sbb
sbb
bound
in
and
sbb
je
icebp
test
sbb
jne
ret
sbb
adc
cmp
je
push
sub
sbb
adc
mov
and
loop
lock
leave
adc
push
and
ret
imul
dec
xchg
adc
xchg
lret
add
jmp
xor
cmp
fucom
add
sbbb
ja
lods
cmpsl
fstl
ss
xchg
ret
enter
cmp
out
dec
in
pop
inc
sbb
out
bsr
mov
or
gs
mov
mov
adc
sbb
and
jo
adc
add
adc
jb
and
adc
adc
mov
icebp
inc
fs
adc
int3
mov
pop
aaa
cmp
push
push
add
stos
and
mov
or
inc
clc
add
mov
xor
inc
pop
sub
adc
xor
daa
stc
rcrb
scas
jo
into
rorb
cmp
mov
lds
lods
mov
je
inc
sub
test
movsb
shlb
mov
addr16
adc
and
das
jmp
cmp
or
lods
push
jo
out
cld
cmp
bound
dec
or
mov
xchg
jbe
add
fmuls
movsb
cmpb
adc
push
in
mov
inc
xchg
movsb
stc
mov
cmp
ljmp
fists
jnp
adc
adc
sub
jo
pushf
out
or
xchg
rorb
cli
push
add
xor
add
sbb
aaa
cmpsb
pushf
imul
jne
leave
popf
dec
adc
movb
pop
mov
addl
sbb
popf
and
sbbb
add
lret
pop
inc
ss
add
lea
sti
or
xchg
repz
push
cmpsb
icebp
pop
xchg
test
jno
jne
pusha
test
dec
fdivrs
push
mov
inc
add
call
bswap
mov
addr16
test
insb
aam
jnp
mov
and
mov
inc
or
xchg
xor
push
pushf
repz
js
int3
mov
sahf
xor
dec
cmp
adc
lea
xchg
push
mov
and
cmpb
out
add
xor
mov
push
movb
xor
pop
jne
pop
into
fisubrs
sbb
mov
mov
rorl
mov
icebp
imul
mov
jge
pop
sti
push
push
cmpl
xor
jno
loope
xor
cmp
cmp
inc
jl
cmp
jg
cmc
outsl
sbb
add
test
jmp
loop
mov
xchg
add
dec
push
je
or
movsb
push
clc
sbb
cmpsl
mov
sub
mov
sbb
insl
sbb
loopne
ficompl
jge
hlt
sbb
ret
add
popa
or
jmp
add
xor
sub
sub
sbb
ret
mov
mov
mov
jb
push
add
cltd
adc
add
push
inc
scas
push
shlb
enter
push
push
add
movl
jle
or
xlat
cmp
add
mov
push
adc
pop
dec
and
popl
jl
mov
test
and
inc
push
or
mov
addl
push
movsl
lahf
insb
cmp
jge
dec
push
mov
mov
mov
push
add
jno
jl
or
int3
jno
jecxz
pop
out
fildll
es
shrb
xor
mov
lcall
mov
lea
shrb
mov
and
addr16
icebp
inc
push
or
inc
out
loope
std
call
repnz
sbbl
jae
pop
dec
jmp
add
aaa
add
mov
inc
test
rolb
push
or
into
xor
ja
push
jg
jb
add
pushf
inc
dec
adc
imul
cld
roll
push
push
mov
cmpl
push
mov
inc
mov
mov
or
sub
or
mov
or
add
dec
or
and
mov
rorl
aas
mov
push
int
inc
jmp
stos
lock
pop
std
and
mov
inc
icebp
sbb
andb
adc
inc
dec
push
pop
inc
jmp
fimuls
sbb
psubw
mov
popa
mov
sub
sub
xchg
add
jmp
mov
std
add
ret
outsb
sub
jo
mov
push
add
push
and
pop
imul
xchg
pop
push
cmpsb
pop
adc
sbb
or
mov
cli
rcl
cmpl
pop
cmp
pop
cmp
jge
inc
fs
push
pop
xor
or
fs
push
mov
sbb
dec
fisttps
js
inc
push
imul
rclb
orl
jmp
scas
hlt
mov
jns
pop
sbb
lods
mov
mov
adc
push
stos
add
push
loop
int3
andl
lea
lods
insl
dec
inc
mov
mov
cmp
pop
insb
or
and
outsb
dec
mov
cltd
pushf
mov
roll
sub
mov
test
jecxz
xor
shll
test
inc
pusha
lahf
in
mov
push
jns
sub
orb
rcrl
daa
mov
and
adc
inc
xchg
and
adc
add
mov
mov
ljmp
pop
clc
or
dec
cmp
lcall
and
push
xor
sub
cltd
repnz
filds
mov
or
nop
xor
dec
and
pop
jmp
or
outsb
dec
cmp
out
pop
rolb
pop
add
push
jecxz
or
pop
movsb
and
dec
bound
or
lahf
mov
sbb
movsl
add
xchg
movsl
jbe
inc
cmpsl
mov
enter
loope
rcrb
stos
push
push
fmuls
push
push
aad
scas
sub
cmp
inc
js
pusha
mov
add
xor
push
dec
cld
adc
push
imul
mov
jmp
or
push
aas
repz
fs
jmp
movsl
add
adc
ret
lret
or
ret
cmp
mov
or
insb
or
push
rol
sub
je
dec
inc
xchg
ja
xor
les
notb
test
mov
pop
imul
test
rcrb
push
mov
pushf
xor
idiv
jae
lea
jmp
cmpl
sub
shll
mov
push
and
push
test
push
pop
and
aam
scas
movsl
add
mov
jmp
sbb
inc
xchg
xor
in
mov
add
sbb
inc
add
xor
dec
xor
imul
lds
cmp
sub
cld
and
push
flds
aad
lcall
ljmp
add
lret
push
inc
loopne
mov
inc
xchg
ja
mov
push
arpl
xchg
mov
add
jb
cmp
add
inc
add
fwait
sbb
scas
loopne
ja
or
dec
lods
pusha
cmp
adc
inc
inc
xchg
pop
add
xchg
pop
bnd
xchg
cmp
jnp
lea
movsb
inc
stos
xchg
test
mov
scas
out
daa
adc
cmp
dec
jo
xchg
movsb
mov
cmpsl
roll
dec
idiv
loope
cmp
xchg
mov
mov
mov
je
jecxz
inc
push
sub
push
icebp
jl
and
push
jno
sti
push
je
cwtl
xchg
mov
inc
adc
sbb
test
sbb
in
iret
xchg
js
cmp
stc
xchg
and
sub
or
shrb
cmpsl
pushl
xchg
test
or
fmull
pop
mov
add
in
fs
push
popw
dec
jb
outsb
int
fimuls
jmp
xor
mov
je
cmp
stos
psadbw
pop
mov
sbb
adc
mov
push
addl
mov
sti
je
and
dec
adc
add
xchg
cmc
std
enter
cmp
pop
adc
add
nop
dec
sub
pop
add
je
jp
test
push
popl
or
inc
nop
fstps
add
xchg
inc
xchg
push
pushf
and
loop
adc
jae
push
xchg
add
xchg
loopne
js
jl
js
js
and
pop
pop
jmp
inc
shlb
cmpsl
mov
xlat
jo
xor
movsb
push
test
jb
mov
inc
adc
lahf
inc
sbb
js
fmuls
call
pop
or
jb
je
sub
cmpl
push
adc
data16
in
mov
mov
add
or
je
test
bound
push
jns
data16
jne
mov
mov
test
cmp
dec
shrl
test
add
cmp
in
stos
les
or
orb
loopne
mov
mov
imul
jb
add
mov
and
adc
xor
loopne,pn
mov
cmp
call
subl
or
push
js
cs
xor
sub
cmp
dec
shll
cld
lods
push
mov
adc
lret
or
cld
fadd
dec
inc
aaa
xor
sbb
mov
or
fstl
mov
mov
inc
in
dec
sbb
add
lahf
pop
scas
lea
fwait
adc
pop
jae
pop
cs
pusha
push
ret
sar
mov
push
hlt
neg
sbb
and
in
testl
movzwl
push
adc
insb
les
mov
mov
inc
leave
test
js
mov
adc
jmp
xor
jge
sarl
add
add
cmp
or
aas
daa
ret
push
lret
cmpsl
je
movsb
adc
mov
inc
cmpl
jne
cmp
jbe
jmp
adc
or
jne
push
ret
rclb
cmpb
hlt
shld
add
ds
data16
mov
pop
push
push
xchg
popa
mov
std
cs
cmc
jmp
pop
jl
pop
mov
addl
dec
xchg
roll
or
adc
sbb
and
xchg
cltd
push
divb
cwtl
sbb
pop
stos
mov
or
scas
xchg
loope
inc
add
and
js
adc
dec
xchg
xchg
dec
jg
xor
xor
mov
add
ja
pop
inc
xorb
imul
or
repz
add
shlb
sahf
push
pushf
or
mov
mov
jnp
inc
out
les
out
adc
enter
push
das
push
je
out
push
lret
xor
pop
inc
in
xchg
pop
nop
out
add
inc
out
std
adc
inc
or
ljmp
mov
enter
pusha
fildl
add
mov
inc
adc
cmp
adc
and
sahf
or
sbb
cli
jae
andl
leave
ret
mov
or
movsl
clc
sub
add
adc
inc
add
xchg
add
divl
pop
ffreep
and
cmp
sbbb
cmp
lods
lahf
pop
out
enter
sbb
mov
jg
xor
or
cmpl
or
stos
jmp
loop
ret
je
push
mov
loopne
pushf
out
push
sub
aas
mov
jecxz
push
loopne
lods
arpl
mov
pushf
test
xor
mov
inc
shlb
mov
mov
lock
xlat
lret
add
mov
cwtl
add
fcoms
ljmp
fstpl
cmp
jae
inc
xor
mov
cmp
pop
sbb
cld
mov
pop
xor
adc
and
cmp
mov
out
push
cmpb
mov
jae
mov
push
adc
mov
xor
pop
sbbl
addr16
mov
lcall
or
je
cmp
cmp
loope
or
js
movsb
sahf
jno
jl
push
xlat
xor
fwait
mov
add
cmpsb
push
lret
std
mov
aas
or
sbb
inc
dec
popf
add
mov
inc
lret
out
jb
out
aas
add
push
ret
mov
xlat
movl
insb
or
inc
in
mull
jmp
mov
in
dec
js
mov
jmp
push
dec
add
push
dec
mov
and
add
fstps
cld
adc
sbb
sub
inc
jle
mov
push
movsl
fsubl
pusha
or
and
dec
test
jge
cmpsl
enter
cmp
pcmpeqd
sub
arpl
test
es
sbb
or
xor
sbb
push
and
fcmovnb
add
dec
lahf
xor
pop
xlat
cmc
add
cmp
and
fisubrs
pop
cmp
mov
gs
push
sti
loop
xchg
and
mov
repnz
mov
inc
or
add
xor
shrl
inc
sub
xchg
sbb
push
scas
mov
and
rcr
mov
ret
adc
je
sarb
je
or
inc
std
clc
xorl
in
ret
sub
mov
out
push
aam
rorb
cmp
and
mov
push
xchg
dec
mov
out
es
xchg
jg
add
add
loope
imul
mov
mov
push
jge
pop
ljmp
pop
rcll
fdivrs
cmp
mov
cli
and
add
ret
jle
dec
pushl
dec
pop
pop
in
mov
arpl
mov
or
rcrl
and
mov
inc
in
fnstsw
sarb
ret
mov
cmp
or
xchg
xor
pusha
push
ja
sti
jb
mov
dec
bound
mov
sub
sbb
add
lea
rorb
insb
fistps
add
xor
add
pushf
xor
je
xor
sub
mov
cmp
addr16
das
sbb
pop
je
dec
adc
mov
jae
lea
daa
imul
ja
cmpb
jne
fidivl
add
or
jp
addr16
dec
add
decl
jb
jae
stc
sbb
daa
mov
add
dec
pop
mov
lea
out
sbb
sbb
out
out
sti
push
dec
or
dec
lock
bound
jno
cs
fs
jae
shl
xchg
xor
jae
leave
jmp
push
or
jmp
fsub
pop
rorb
rclb
jo
inc
lods
add
sbb
cmpsl
es
mov
dec
shl
sbb
add
cs
das
cltd
mov
imul
fmull
and
mov
or
clc
xor
xor
and
mov
sbb
adc
push
adc
fdivrs
jne
sub
inc
mov
test
push
lock
das
dec
and
sub
inc
push
mov
mov
fcomps
sahf
xor
or
inc
data16
add
repnz
xor
pop
movsl
sub
popf
dec
pop
fstl
dec
cmpsl
or
pop
adc
fists
mov
nop
and
addr16
clc
or
fsub
add
add
add
add
cmpsb
add
aad
fistl
ret
inc
mov
lahf
mov
popf
testb
cmp
pop
mov
icebp
jne
add
mov
push
jg
pop
je
lea
addb
shll
idiv
inc
cmpl
adc
loope
dec
ds
cmpsl
add
dec
mov
shll
and
data16
mov
lock
sbb
cmp
call
jns
adc
inc
sub
inc
sarb
push
je
dec
add
fmull
les
orl
pop
mov
jno
ds
rol
aam
outsb
sbb
jmp
or
dec
pushl
and
cmpsl
add
repnz
js
pop
rol
lock
mov
mov
les
cmp
push
cmpb
mov
jb
push
jae
lea
push
sub
mov
inc
popa
pusha
stos
lods
push
pop
stos
jnp
jg
fs
ja
repnz
adc
jo
pop
ret
mov
leave
inc
ret
sub
cmc
pop
out
and
adc
fildll
pop
cmpsl
imul
std
add
cmp
xor
fnstenv
inc
jmp
push
cmp
into
rcrb
cmp
sub
popa
mov
xor
adcb
sub
fldz
xorl
inc
cltd
mov
sub
and
push
sahf
popf
ljmp
add
mov
add
cmc
xchg
jo
out
insb
testb
imul
out
dec
movsl
add
in
mov
lea
push
mov
push
cmp
fisubrl
sub
mov
push
cmp
and
or
add
cmp
aas
push
test
test
repnz
lea
mov
mov
lret
cmp
mov
push
mov
popf
cmp
push
aad
xor
out
xchg
test
mov
adc
or
or
cltd
push
stc
push
mov
add
out
gs
cld
or
je
xor
jge
cmp
mov
cmp
in
addr16
inc
mov
jb
inc
mov
ds
mov
jo
pop
pop
popa
movsb
cmp
cmp
sub
shr
sahf
bound
inc
or
add
shll
fsubs
jbe
ret
inc
jb
aad
roll
and
sahf
cmp
push
les
clc
mov
dec
or
out
std
cmc
inc
or
mov
sub
cmp
xlat
or
insl
pop
stc
popa
imul
mov
arpl
imul
imul
xorb
fs
movsl
or
scas
xchg
pop
in
addb
loopne
test
mov
and
and
nop
push
cmp
sbb
and
shrl
fdivr
adc
ja
add
mov
inc
or
xchg
push
cmp
adc
add
xchg
jmp
xor
rorb
imull
xor
sbb
andb
lret
pop
pop
sbb
or
fidivrl
iret
add
or
or
sub
mov
es
adc
dec
lock
cmp
imul
lods
jmp
icebp
les
jbe
cmp
int3
loop
ret
lret
xor
cmpl
cld
into
jne
pushl
mov
scas
jg
cmp
add
addl
pop
xchg
jo
nop
movsb
sub
sub
fiaddl
pop
loopne
mov
orl
test
pop
subl
dec
push
sub
rorb
xor
ret
lret
lods
add
jg
rol
test
jmp
push
and
outsb
mov
inc
mov
loope
movsl
mov
dec
jmp
jge
iret
adc
dec
cmp
test
mov
pop
adc
or
mov
dec
sub
pop
decl
cmp
push
adc
adc
mov
push
add
shll
sbb
pop
shlb
lds
mov
xchg
mov
ss
out
push
push
pop
xchg
lret
notl
das
mov
int3
adc
push
push
pop
cmp
out
mov
les
ja
xchg
push
pop
test
sub
ret
inc
mov
jge
cmp
shlb
adc
test
push
inc
adc
mov
sti
add
jne
lds
jne
push
out
adc
cwtl
cwtl
pop
sbb
adc
adc
std
lock
mov
mov
inc
sbb
pusha
xor
fmuls
jns
mov
push
mov
push
repnz
shrb
sub
adc
or
mov
stos
push
shll
loope
cmp
movsb
push
out
mov
lcall
dec
or
cld
add
dec
or
push
xor
or
in
sbb
push
les
jl
inc
push
xor
cli
leave
push
scas
add
sub
arpl
pop
gs
aam
shll
or
add
das
lods
push
add
rcll
das
nop
or
addr16
push
cmp
cmp
or
adc
mov
test
push
adcl
xor
nop
int3
add
pushf
inc
adc
pop
fwait
pop
jnp
inc
ret
mov
adcb
push
push
test
dec
cmp
divb
aam
fst
sti
js
push
push
or
pop
sub
sub
into
movzwl
xchg
incb
test
je
test
xchg
or
jo
mov
pop
dec
jb
pop
push
mov
repnz
xchg
dec
daa
push
lds
jmp
js
push
or
rorl
sbb
cmp
call
popa
cmp
mov
push
clc
push
push
sbb
daa
fdivrl
sub
push
pop
fstpt
test
sub
pop
lock
adc
mov
popf
xorb
and
adc
add
pop
fbld
xchg
or
or
jecxz
push
xor
sbb
movsl
je
mov
pop
push
pop
jo
and
sbb
xorb
aam
mov
push
nop
sbbb
push
cmp
rorb
sbb
mov
sub
mov
ret
cltd
ljmp
inc
jnp
add
jle
mov
mov
pop
in
sbbl
shll
rol
shlb
sbb
xchg
movsl
adc
or
imul
aad
cmpsb
cmp
push
pop
sub
push
sub
xor
add
out
call
or
leave
inc
stos
or
xchg
ficomps
mov
ljmp
push
movsl
pop
popa
stos
movsl
daa
pop
sub
mov
ds
xchg
hlt
jp
push
xchg
scas
sub
cwtl
ret
pop
xor
sbb
repz
insb
lahf
inc
ds
push
adc
cld
push
testb
cmp
and
insb
lock
dec
clc
adc
sub
xor
and
xchg
test
int3
jne
test
jp
ret
jbe
mov
cs
fs
testb
sbb
push
push
sbb
clc
popa
std
adc
or
lret
sub
mov
test
or
mov
and
js
andb
add
mov
sbb
push
mov
sarl
cld
dec
cmp
adc
mov
das
bound
loope
jecxz
pop
jl
subl
les
into
sbb
mull
or
xchg
outsl
mov
add
xchg
mov
fsts
add
dec
and
and
js
adc
movsl
or
lea
sub
adc
mov
inc
cli
jg
sub
push
sub
push
jl
pop
cmc
das
dec
add
inc
or
mov
enter
ja
mov
daa
adc
sbbb
pshufw
loop
popf
dec
in
shrb
scas
xor
je
test
push
dec
push
in
arpl
ljmp
mov
mov
aas
int
mov
inc
dec
dec
push
pop
xchg
xchg
or
mov
mov
jmp
into
out
test
loope
sarl
or
orl
xor
into
jnp
loopne
push
cmp
xor
jecxz
dec
das
outsl
subl
jne
loop
inc
loop
daa
adc
js
dec
into
jl
mov
leave
sbbb
sahf
jno
std
shll
aas
lea
pop
ss
inc
or
cmpsb
ret
pop
out
int
inc
sub
dec
dec
jns
adc
lret
cmpl
shrb
fsubr
mov
mov
push
adc
shlb
inc
add
pop
adc
jmp
xlat
out
mov
and
sbb
rorl
push
xor
cmp
cmp
pop
test
mov
push
or
xchg
mov
ret
or
push
in
xchg
xchg
inc
push
xchg
adc
push
or
cmc
push
js
je
and
xor
outsl
subb
jmp
cmp
das
sbb
push
lods
pushf
jo
sub
dec
push
sub
adc
add
mov
dec
pop
fldl
out
push
xchg
lods
mov
insl
rolb
cmovge
dec
iret
pop
inc
push
add
xor
jo
inc
lret
mov
loop
pushl
cmp
jne
sub
push
pop
pop
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
jne
aaa
sbb
das
ret
adc
rorb
mov
aaa
rorl
add
pop
inc
adc
mov
pop
push
lds
add
je
dec
sbb
ret
lods
pop
loop
and
cmp
dec
mov
jno
or
add
pop
add
movsl
in
mov
jns
xchg
jne
xor
jp
in
data16
mov
or
fisubl
cmp
jne
xchg
popa
mov
pop
mov
jmp
jne
or
jne
adc
mov
xor
adc
cmp
jae
outsb
loop
push
pop
addr16
fists
lahf
pop
and
sbb
sarb
xorl
push
or
sub
pop
sahf
pop
sbb
fcoml
repnz
rcrl
sar
push
popa
inc
adc
jecxz
daa
dec
pop
lcall
test
sbb
push
sti
loope
movsb
inc
mov
mov
adcb
xor
sarb
sub
mov
out
mov
je
mov
mov
or
dec
or
bound
inc
lods
adc
outsl
jp
or
mov
xorl
mov
fnstcw
jo
dec
scas
lcall
inc
cmp
mov
sbb
pop
mov
daa
sub
xchg
jg
and
pop
or
xchg
sbb
pop
faddp
bound
mov
jo
movsb
sub
jmp
sarl
rolb
add
jae
cmp
push
xchg
sarl
les
sub
and
jnp
push
mov
icebp
xchg
mov
rorl
xor
rolb
dec
andb
rol
push
repnz
rolb
push
jne
dec
cli
or
pop
int
movsl
insl
sub
sbb
jne
add
pop
imul
xor
int
testb
sbb
dec
insb
jne
aaa
adc
sbb
cmp
scas
mov
and
adc
inc
mov
or
ret
scas
ficoms
and
sbbl
or
or
ds
push
or
jne
mov
adc
ret
xchg
cmpsl
leave
jo
or
xlat
fsubs
lock
adc
and
mov
imul
call
pop
push
sti
daa
jecxz
push
pop
into
fdivrl
jl
mov
rorb
sbb
cmp
test
movsb
cmpsl
fidivs
mov
push
pop
sbb
in
sbb
xor
push
pop
fdivl
and
fstl
jns
inc
dec
push
outsl
fdivl
sub
stc
ss
loop
mov
loopne
adc
jle
decb
or
or
ljmp
add
adc
adc
fldenv
sub
cmp
sbb
fs
ret
xchg
jge
dec
adc
fwait
and
xchg
sbb
clc
das
inc
js
sbb
sbb
mov
loopne
in
push
sti
loopne
stos
shlb
shrb
or
mov
mov
loope
add
and
andl
dec
and
shll
sub
cmpsb
adc
cmp
push
pusha
shll
jo
repz
mov
or
add
outsl
lods
imul
mov
enter
inc
cmp
sub
xchg
imul
xor
addr16
scas
sbb
shrb
xchg
or
repnz
divl
and
pop
movb
or
dec
or
mov
pop
xchg
push
fmul
orb
jl
js
or
orb
push
fs
adc
cmp
out
std
add
and
xchg
xor
in
push
mov
sbb
dec
out
out
addb
inc
push
pop
sbb
inc
in
clc
cs
adc
push
mov
push
jo
loop
sbb
cmp
sbb
adc
mov
add
push
adcl
and
mov
mov
add
test
dec
subb
stos
cli
sbb
rcrl
push
mov
popa
add
add
push
dec
cmp
push
pop
jo
inc
sbb
push
push
ret
pushl
daa
mov
jle
push
xlat
adc
jle
xor
sub
or
push
inc
add
in
push
lahf
ds
or
and
flds
cmp
jo
push
mov
and
test
and
xchg
add
add
pusha
and
sub
ja
adc
xor
dec
and
das
xorl
mov
mov
sub
push
jg
mull
inc
dec
adc
imul
or
test
inc
jmp
and
xchg
add
test
mov
imul
mov
push
sub
pop
sar
xchg
pushf
je
lds
add
aas
cmp
sub
sub
out
add
imul
rclb
scas
je
dec
add
xchg
stc
push
jne
mov
sub
sub
mov
pop
dec
jne
cmp
sub
data16
cmp
mov
adc
xor
dec
mov
fwait
pop
mov
jo
cld
mov
outsb
push
dec
mov
nop
ret
and
dec
jo
mov
push
xor
xor
or
hlt
adc
dec
mov
call
push
pop
dec
pop
push
push
inc
cmp
inc
shlb
popf
rorb
push
ljmp
push
fldt
pusha
cli
out
fidivrs
push
adc
andb
or
and
adc
lahf
sbb
outsb
es
jmp
call
dec
or
cmp
dec
lods
mov
arpl
es
sbb
inc
mov
xor
sub
xor
int
dec
jecxz
dec
add
mov
sahf
call
sbb
xchg
sbb
adc
push
lds
scas
pusha
insb
mov
or
sbb
lea
xchg
sbb
cmp
jo
pushl
pop
scas
neg
and
mov
adc
add
fcmove
lock
adc
add
pop
or
inc
lock
inc
js
shlb
sbb
je
pop
cmpsl
add
mov
je
cltd
test
jae
fs
nop
xchg
inc
inc
pusha
insb
insb
or
fs
jmp
xor
loop
cmp
jl
icebp
cwtl
push
xchg
or
je
popf
add
push
pop
mov
or
adc
adc
pushf
add
test
sbb
adc
call
push
hlt
sti
push
sub
jo
mov
inc
and
jo
pushf
jne
aas
dec
and
enter
cs
rclb
adc
adc
mov
push
lock
fs
cld
lock
cmp
jmp
stos
ret
sbb
cmp
adc
sbb
lea
mov
movswl
in
push
sbb
std
out
mov
lret
add
push
and
jo
fimull
shlb
lret
sub
dec
aad
sub
cmp
xor
mov
sahf
push
flds
mov
and
pop
nop
xchg
mov
test
or
movsb
je
shlb
and
aas
idivl
insb
dec
or
sbb
pop
mov
sbb
jp
test
jbe
cmp
push
adcb
out
inc
cmpsb
sbbl
mov
sub
pop
mov
sbb
popa
jge
ret
add
and
cmp
mov
and
popa
or
mov
mov
xor
push
aas
jne
fsubrs
movsb
xor
loope
pop
out
outsb
cmp
jp
push
mov
or
or
in
or
pushf
cwtl
fidivrs
inc
js
jg
sub
js
clc
mov
fwait
sbb
jle
cmp
push
into
pop
and
dec
rorb
insb
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
ss
sbb
xor
or
lock
fs
in
fcoms
lds
test
popa
add
movsb
mov
outsb
add
adc
xlat
sbb
mov
outsl
lds
pop
arpl
sbb
imul
ficoml
jb
hlt
inc
fdiv
sarl
mov
dec
or
sub
cmp
cmp
add
sbb
dec
mov
and
cmp
push
push
popa
or
aaa
jb
push
sbb
xchg
sub
add
xchg
into
in
outsl
push
ret
jge
int3
mov
dec
xchg
pop
sbb
sbb
cmp
lods
shll
mov
sbb
rolb
into
stc
xchg
adc
or
addl
mov
and
or
popa
out
pusha
xor
out
jmp
pop
in
adc
dec
push
xchg
push
cltd
push
movsb
push
push
push
stc
pushf
jo
mov
and
adc
push
out
xor
adc
xor
jo
aas
push
lea
and
inc
push
cli
sub
dec
sub
mov
jecxz
dec
inc
in
sub
js
cltd
mov
push
push
push
xchg
or
cmp
adc
fiadds
mov
js
lock
cmpl
adc
inc
out
push
jno
out
fmuls
aad
push
movsl
pushf
inc
rolb
je
push
sub
add
pop
pop
push
mov
mov
loopne
idivb
pop
jae
push
pop
call
inc
xor
mov
inc
xor
dec
pusha
sbb
pop
mov
movsl
add
or
jl
sbb
and
push
add
sbb
jmp
daa
sub
jo
popl
insl
bound
cmp
jg
lret
js
push
lods
test
out
push
lock
jmp
xor
pop
and
outsb
or
xlat
mov
cmp
and
sbb
cmp
repnz
hlt
sub
mov
ja
mov
fidivl
and
pop
lcall
ja
movsl
sbb
je
movsl
push
roll
divl
push
pop
ljmp
pop
lahf
push
cmpsl
adc
orl
add
inc
movsb
lock
outsl
test
mov
sub
outsl
xor
sub
sub
lea
pop
and
jmp
or
inc
push
or
cmp
mov
adc
fsubl
xor
and
stos
sbb
jno
push
and
inc
sbbb
pop
mov
add
inc
jg
adc
imul
gs
adc
push
lock
lret
push
or
xor
mov
mov
sbb
aad
loope
rorb
mov
roll
mov
add
jp
push
add
jp
cs
or
pop
lods
popf
fsubrl
pop
cmp
cmp
pop
adc
push
arpl
push
xchg
pop
pop
rcrb
or
xlat
mov
imul
and
sbb
jg
xor
call
or
jbe
jge
push
mov
push
jo
add
cmpsl
push
xor
sub
jne
jl
out
fstl
xchg
push
xor
push
or
mov
inc
insb
or
push
inc
mov
pop
in
xchg
cwtl
sarl
mov
xchg
adc
or
sbb
sbb
xchg
jbe
add
sbb
xchg
jb
mov
jnp
xor
fs
and
and
daa
int3
push
inc
xor
cwtl
xchg
mov
and
pop
adc
adc
xchg
add
fwait
xchg
add
xchg
cmpl
xchg
mov
dec
adc
pop
sbb
clc
js
jecxz
xchg
mov
mov
iret
adc
shll
inc
push
sbb
iret
ffree
std
push
nop
sbb
cmpb
leave
push
mov
or
or
mov
or
dec
pop
movsb
adc
jnp
lds
sbb
inc
push
inc
inc
ret
in
jmp
sbb
xchg
lods
adc
mov
lods
stc
inc
cmc
js
dec
cmp
sbb
jmp
pushl
jne
push
pop
mov
pop
add
push
sahf
ds
cmpsl
orb
jnp
idivl
mov
inc
xor
and
ret
push
std
or
add
or
mov
mov
sub
mov
in
adc
jl
andl
adc
popl
jbe
js
add
fs
pop
add
jae
in
dec
dec
pop
inc
jecxz
cmp
sahf
dec
cmp
repnz
jo
xchg
int3
ds
or
jbe
movsb
adc
scas
inc
xor
or
push
fcoml
fistpll
mov
adc
bound
or
sbb
pop
adc
dec
sbb
mulb
dec
adc
dec
adc
sbb
ret
out
lock
push
jl
and
mov
jo
mov
ret
je
push
pop
loopne
js
call
push
sbb
jo
sub
inc
ljmp
mov
push
das
pop
bound
xor
nop
pop
or
add
shlb
adc
sahf
and
movsl
add
pop
push
sub
jb
pop
in
sub
lock
ss
push
sub
loope
sbb
pop
jle
repnz
test
subb
sub
dec
ja
outsb
sarb
pop
mov
inc
sbb
mov
mov
and
dec
or
dec
sbb
add
jl
loope
xor
push
fisttpl
ret
adc
and
inc
inc
rorb
sbb
fisttps
jl
push
push
leave
in
arpl
xchg
cmc
mov
lcall
sub
in
cmp
inc
add
xor
mov
or
add
xchg
leave
inc
push
jo
out
push
pop
fisttpl
popa
popa
add
sarl
aaa
add
sbb
add
icebp
sub
push
jle
jo
ja
movsl
push
push
pop
pop
js
xor
or
inc
and
and
pop
xchg
push
xlat
mov
inc
es
push
test
mov
xchg
add
stc
or
jo
fsubrl
cmovle
mov
and
mov
repnz
out
subl
mov
dec
repz
or
mov
mov
mov
add
inc
mov
lock
call
push
ret
adc
pushf
ret
movsl
daa
cli
shrl
stos
or
mov
add
xlat
dec
fwait
mov
push
pop
push
push
push
inc
ljmp
rolb
jge
test
pop
hlt
jbe
lret
fs
add
movb
sub
mov
push
ret
push
pop
lds
or
add
pop
sub
or
and
xor
add
scas
xchg
mov
out
and
or
andb
andl
xchg
and
push
leave
aaa
shlb
push
mov
add
pusha
and
mov
add
add
xchg
xchg
fdivs
adc
or
pop
inc
or
js
aad
pop
jle
mov
add
mov
add
adc
rcll
mov
jl
cmpsb
adc
add
das
jl
push
stos
mov
xchg
mov
dec
inc
adc
mov
ss
clc
push
jns
or
cmpsl
add
adc
sbb
xchg
fsubl
test
inc
cli
xchg
push
or
test
aaa
pop
stos
loopne
push
push
push
mov
inc
hlt
hlt
jle
outsl
push
or
jae
xor
popa
leave
push
add
or
orb
repz
dec
insb
out
cwtl
jge
add
andl
popl
push
mov
icebp
push
jmp
data16
xor
add
add
rcll
cmp
sahf
and
mov
inc
adc
sbb
jb
pop
enter
push
xor
adc
sbb
xor
jne
jge
add
jle
pop
mov
xor
rorb
pop
add
push
dec
pop
sbb
push
xor
inc
mov
push
add
add
insb
cmc
add
inc
mov
add
rcll
inc
imul
imul
ficoms
push
int3
and
add
xchg
fld
push
pop
pop
out
hlt
push
mov
sbb
pop
adc
inc
insb
shr
addr16
fldl
test
push
loopne
inc
ret
adc
cmp
rcrb
add
call
mov
insb
std
test
je
pop
incb
adc
add
insb
fstpl
repz
repz
insl
out
fistl
push
in
sub
jae
movsl
mov
fs
or
hlt
sbb
jne
sbb
push
lret
cmp
jmp
push
push
pop
adc
add
icebp
or
repnz
mov
jns
add
lret
cmp
mov
testb
sbb
test
jne
js
dec
push
push
stos
lret
jns
or
or
push
int3
xchg
xorl
inc
arpl
les
shlb
inc
pop
mov
sub
das
or
imul
or
dec
adc
or
dec
pop
out
mov
inc
adc
insb
insb
lods
push
and
mov
mov
xchg
inc
test
cmpsb
aam
jg
push
add
or
out
cs
adc
movb
sbb
inc
movsl
xor
je
inc
add
dec
jne
add
call
cwtl
adc
mov
fbstp
push
push
jnp
push
inc
mov
mov
jecxz
clc
out
lds
cmp
cmp
sub
aas
or
add
inc
xor
add
packuswb
cmp
ss
jbe
es
mov
push
jne
repz
pop
inc
loopne
xor
push
lret
shll
cmp
mov
jne
adc
movsl
mov
hlt
into
sub
or
iret
shlb
dec
inc
pop
clc
rolb
push
cmp
or
mov
test
shrb
jno
or
clc
shll
mov
cmp
dec
cmp
in
cmp
sub
cmp
push
jne
adc
pop
inc
aaa
test
inc
es
ret
in
lea
and
in
dec
add
fsubl
add
and
push
and
inc
push
cwtl
ret
and
mov
pop
fs
or
scas
or
fcos
add
push
push
sub
xor
mov
cmp
test
idivl
mov
xor
fs
or
mov
pop
testl
cmp
aas
cmp
dec
es
out
call
dec
mov
adc
inc
cli
xor
ror
push
roll
xor
roll
out
mov
push
loop
js
add
and
dec
sub
adc
cmp
push
push
lret
call
sbb
out
cmp
mov
jl
cwtl
fnsave
add
ss
jnp
lock
pop
push
add
testb
pxor
jle
xor
or
mov
addr16
xchg
imul
pop
adc
mov
dec
xchg
cmpsb
add
xchg
test
or
jno
xchg
subl
adc
jae
push
push
fsubrl
imul
sbb
sbbl
cltd
in
lods
jmp
pop
pop
push
push
push
adc
push
or
dec
int
mulb
pusha
xor
jl
push
clc
test
js
push
and
dec
adc
mov
push
mov
sahf
push
cmp
aas
ljmp
rolb
loopne
mov
orb
sbb
cs
mov
sub
add
jbe
and
sub
mov
xchg
insl
adc
adc
cmp
mov
daa
add
add
add
lret
mov
sahf
imulb
rcl
cmp
rcl
adc
jnp
or
aas
mov
jno
push
push
stos
sti
push
add
jno
sbb
cmpsl
jae
pop
mov
das
in
daa
mov
or
adc
mov
sub
fsubs
decl
pop
jae
xchg
sub
xchg
xorb
push
sbb
ss
or
test
pop
rolb
mov
xchg
mov
adc
cmp
inc
test
pop
add
shl
mov
fdivrs
test
cltd
adc
fs
or
pop
cld
push
xchg
sub
nop
push
and
nop
movsl
xchg
aam
lret
cmp
out
andl
jae
std
push
jnp
sti
dec
ja
je
or
je
or
sub
sub
sti
das
mov
movsl
adc
aad
testb
dec
loopne
or
add
or
jne
xchg
fadd
sahf
popa
jnp
push
jecxz
and
push
jmp
cmp
xchg
out
push
adc
adc
movsl
test
daa
cmp
pusha
inc
mov
add
ja
and
inc
enter
in
or
pop
divb
lcall
mov
add
mov
sbb
daa
mov
sahf
pusha
push
cmpsb
or
add
inc
push
out
es
jo
mov
push
sub
mov
sti
or
adc
add
test
daa
paddw
xchg
and
lods
orl
add
lods
add
incl
ret
addb
dec
je
sub
xor
mov
loope
or
sub
add
cld
sbb
outsb
fstpt
outsl
mov
inc
jbe
cltd
shll
or
push
adc
mov
push
xchg
xchg
cmc
fs
inc
add
insb
adc
movsl
mov
dec
pusha
and
cmc
xchg
push
or
jbe
or
jmp
adc
push
inc
enter
movsb
cmp
dec
push
mov
enter
jne
push
or
push
call
or
inc
inc
mov
jmp
mov
push
cmp
mov
dec
or
ret
out
xchg
clc
repz
push
icebp
clc
inc
sbb
mov
push
sbb
pusha
pusha
or
dec
movsb
xchg
bound
out
pop
sbb
cmpsl
adc
push
bound
test
push
xor
mov
les
xor
jo
push
or
in
ret
fdivs
lcall
xchg
push
pop
inc
add
dec
mov
enter
add
xchg
add
xor
dec
mov
adc
enter
ds
push
and
repnz
push
inc
add
add
add
adc
or
add
shlb
ds
push
in
mov
add
mov
mov
mov
mov
and
jecxz
iret
sub
insl
sbb
push
js
lods
add
push
fcoml
sbb
nop
cmpsl
fsubrp
push
xor
testl
push
ret
pop
lcall
mov
dec
test
cmp
add
xchg
jbe
push
es
xor
sbb
loopew
ret
jbe
fmulp
add
out
jl
mov
pop
cmp
inc
loop
pushf
roll
aam
adc
inc
xchg
mov
xchg
pop
adc
jo
xlat
in
lret
pusha
das
xchg
push
xchg
dec
adc
pop
aaa
dec
std
inc
sbb
mov
pusha
fsubrs
fsubs
int
sar
dec
pusha
jne
arpl
stos
std
decl
mov
adc
jmp
cmp
and
roll
jge
clc
push
fidivl
push
ljmp
movsb
push
jg
sahf
and
cs
inc
pop
inc
adc
xor
sbb
clc
fidivrs
jns
cmp
mov
push
xchg
and
mov
mov
mov
sbbl
frstor
pop
xchg
jge
aaa
call
lahf
ds
idivb
push
or
jne
icebp
test
stos
inc
push
pop
or
pop
mov
mov
push
pop
jmp
sub
and
xchg
xchg
mov
cmpsl
dec
push
mov
je
daa
xor
roll
cltd
loopne
add
pop
insb
pop
jle
rolb
or
dec
mov
mov
aas
pop
js
dec
sbb
sbb
sub
dec
sub
mov
fs
xor
push
inc
xchg
test
push
or
adc
xor
inc
inc
faddl
jbe
mov
mov
daa
mov
push
mov
aaa
sub
add
add
jmp
mov
andl
dec
incl
jo
int3
cmpsl
aam
or
sti
pop
add
inc
jp
add
gs
mov
or
inc
leave
repnz
je
rcl
add
add
or
mov
subb
icebp
add
jge
push
sub
dec
sahf
imulb
pop
movsl
cltd
insl
repz
inc
xor
xor
xchg
loope
aaa
divps
in
mov
xor
dec
xchg
inc
movsb
push
sbb
xchg
add
adc
dec
mov
idivb
add
sbb
ficomps
cmp
mov
out
iret
xor
mov
mov
dec
or
out
sbb
push
mov
addl
adc
or
push
and
pusha
popa
mov
dec
dec
cmp
cmp
adc
xchg
dec
mov
push
cwtl
jae
and
or
xchg
popa
cmp
jbe
mov
adc
jne
cmpsl
jns
xchg
nop
jp
xchg
mov
add
add
and
and
sub
pop
pop
or
cmp
mov
sub
cs
sbb
pop
add
xor
testb
jnp
mov
add
and
ss
lds
or
inc
cmp
cmp
jne
xor
adc
sub
sub
fisttpl
xchg
fdivrs
lret
xchg
test
in
or
push
loope
cmp
pop
cmp
mov
ret
inc
sti
jge
sarl
fdivp
push
fmull
sti
or
jl
sbb
je
cmp
ds
push
sbb
jmp
add
cs
std
and
inc
movsl
popf
pusha
pop
iret
inc
push
outsb
sub
mov
cmpl
sub
adc
jno
je
pop
cmp
movsl
stos
imul
cmp
dec
shrl
xor
lcall
sbb
test
dec
pusha
popa
and
divb
or
pop
jno
sub
popf
and
jle
pop
add
mov
sbb
adc
scas
in
or
mov
sbb
adc
ret
mov
mov
xchg
jge
in
adc
popf
cmp
lret
and
leave
add
imul
push
das
inc
push
sbb
push
inc
popa
push
mov
pop
and
imul
ja
ret
sub
and
sub
sbb
or
prefetch
in
lods
imul
notl
cmpsl
repnz
pop
mov
pop
jmp
int
in
loope
mov
lods
dec
mov
inc
lock
dec
cltd
push
sub
test
jecxz
cmp
pop
mov
lods
and
fcomp
add
cmp
inc
popa
hlt
gs
pop
je
push
ss
add
sbb
adc
inc
cmp
jge
or
leave
nop
lock
das
inc
and
arpl
daa
subb
out
sub
outsl
adc
je
cmp
je
loopne
push
mov
sbb
jo
and
jle
dec
mov
outsb
das
dec
mov
dec
adc
push
mov
fdivrp
and
mov
xor
loop
daa
call
cmc
fisttps
repnz
pop
je
add
push
dec
mov
pop
call
ds
lahf
add
mov
sarb
sahf
ror
and
cld
jp
or
imul
andb
sbb
popa
rcll
leave
dec
rclb
add
movsl
cmp
sbb
sub
cmp
dec
movsb
push
outsb
sti
xor
je
mov
cmpb
nop
cmc
xchg
push
data16
and
push
pop
mov
incl
or
jp
cld
fld
mov
jo
mov
push
adc
push
cld
and
fdivl
popf
std
mov
inc
push
nop
jl
cmc
cs
adc
stos
cltd
push
in
orl
xchg
ret
adcl
sbb
je
and
or
pop
imul
je
adc
sti
inc
push
mov
out
lret
sbb
lahf
jne
or
cmp
sbb
fwait
int3
mov
and
and
jb
rorb
dec
xor
xlat
sub
popf
add
jb
lea
cmovnp
xchg
inc
into
jae
or
xor
js
xor
add
int3
inc
scas
loopne
adc
xor
add
dec
xor
mov
and
enter
cmp
inc
rcrb
jle
cmp
inc
xor
add
pop
jle
jne
sbb
mov
ret
add
jns
dec
dec
fs
xor
and
push
mov
orb
mov
les
enter
jg
dec
add
and
imul
mov
in
daa
repz
jb
jae
push
pushf
push
xlat
push
mov
ficoms
dec
push
sbbl
outsb
dec
clc
jg
dec
sub
jne
push
out
add
test
sahf
add
inc
push
and
std
mov
ficoml
cmpl
or
adc
and
movsl
test
adc
pop
pop
push
sub
orl
cmp
xor
lods
nop
mov
pop
sar
cltd
cmp
push
sbb
jo
sub
jb
rclb
mov
pop
arpl
lea
cmp
loope
adc
or
pop
outsb
jmp
sbb
es
lea
xchg
or
push
repnz
cmpsl
dec
fdivrl
ret
jns
pop
mov
or
addr16
dec
je
enter
cltd
fdivl
mov
loop
jle
mov
mov
dec
pop
xor
xchg
call
pop
in
stos
in
lock
dec
pop
in
push
testb
mov
mov
sbb
mov
xchg
mov
pop
mov
fimull
loopne
push
xchg
inc
pusha
add
cmpl
pop
repnz
jb
in
ret
jbe
mov
incl
jne
cmc
add
sbbl
pop
imul
pop
je
std
jle
push
inc
sahf
mov
popf
add
sub
or
mov
xchg
orl
or
add
sbb
js
int3
mov
mov
enter
outsb
add
nop
ja
pop
inc
inc
xor
push
pusha
insl
xchg
loopne
and
pop
or
int3
add
mov
cmp
subb
rorb
inc
xor
fdivrs
cld
call
xor
add
mov
mov
pop
rolb
xchg
cmp
shl
push
or
shlb
jecxz,pn
pop
stc
or
mov
add
shl
cmp
add
sahf
je
fmuls
xchg
xchg
push
ficoms
mov
add
leave
arpl
push
cmp
mov
pop
pop
jb
lods
jbe
pop
add
dec
das
xchg
out
push
jl
lcall
dec
or
das
mov
add
push
mov
add
add
inc
sbb
add
es
aaa
and
pop
call
push
scas
mov
sbb
or
jmp
push
xlat
push
sbb
inc
jmp
or
bound
fs
add
xchg
dec
mov
push
sbb
lahf
ja
mov
mov
js
dec
sub
push
and
or
das
in
jmp
std
xor
fmul
in
push
jb
int
aam
jge
jmp
inc
and
adc
enter
shr
pfmin
adc
orb
jo
sub
les
jo
mov
adc
push
mov
jo
adc
gs
loopne
cmpsl
add
sbb
in
sub
jge
adc
jo
or
push
jb
mov
jl
and
push
xchg
mov
xor
add
dec
insl
add
or
daa
dec
xor
call
and
jmp
inc
lahf
add
lods
ja
mov
mov
cs
adc
or
pop
or
cmpsb
adc
push
sub
inc
sbb
sub
xchg
add
dec
lock
xchg
jge
push
xor
pusha
sbb
aad
xchg
dec
insl
shl
mov
push
fiadds
in
mov
xchg
cmp
nop
pop
xor
jbe
shll
push
leave
push
xor
pop
or
push
pop
xchg
pop
fwait
add
cmp
fnstcw
jno
outsb
push
add
add
arpl
inc
insb
nop
mov
enter
jns
bound
sar
push
xchg
push
daa
inc
mov
sbb
xchg
ds
mov
xchg
add
in
cltd
jp
pusha
adc
stc
add
jnp
xchg
fnstenv
push
lea
cmp
adc
add
mov
cmp
push
cmp
mov
lds
adcl
mov
jno
adc
test
xchg
xchg
hlt
or
sub
out
xchg
sub
push
lea
cmpsl
sbb
nop
pusha
in
aad
adc
and
push
and
or
repnz
sub
add
mov
and
lock
push
shlb
xor
std
aaa
mov
ja
push
pop
inc
mov
mov
popw
push
pushw
xor
pop
fdivrp
and
lea
and
add
and
adcb
sbb
mov
mov
push
mov
mov
push
add
aad
aam
xchg
adc
jae
jbe
or
mov
jnp
sbb
jecxz
sbb
int
fsubrl
subl
cmp
insb
dec
mov
push
rol
outsb
or
jle
xlat
rcrb
or
sub
or
es
push
push
cmpsl
mov
iret
mov
add
add
push
lds
push
fdivs
jle
insl
int3
mov
shlb
inc
push
rclb
popf
add
sbb
aas
es
sldt
jo
je
insl
xor
leave
mov
mov
mov
sub
adc
dec
add
add
pop
or
or
push
push
cmp
jae
or
mov
bnd
adc
loopne
push
cmp
inc
mov
enter
or
rol
mov
std
aad
push
inc
dec
hlt
jecxz
arpl
or
ret
push
dec
stos
dec
dec
adc
push
push
jmp
jge
or
sub
cmp
dec
xchg
cmc
or
andl
adc
dec
gs
loopne
xchg
jge
mov
clc
push
adc
and
add
dec
sbb
push
into
icebp
jo
fmull
dec
int3
and
xchg
inc
fiadds
fcoml
lods
mov
add
arpl
fs
jne
sbbb
popf
adc
pusha
mov
xchg
push
adc
add
mov
adc
sbb
add
mov
dec
mov
push
cmp
insb
mov
pop
ret
je
aaa
mov
mov
js
sbb
in
test
or
add
jge
xchg
mov
pusha
lods
jnp
dec
test
lea
add
add
hlt
sbb
or
and
push
hlt
test
imul
adc
in
popf
mov
mov
push
jb
ss
jns
xchg
je
inc
add
xchg
mov
push
jns
pop
adc
or
adc
add
push
lods
adc
sbb
or
pusha
movsb
aam
add
adc
pop
pop
and
mov
xchg
add
sub
push
push
push
ja
test
sub
adc
and
sbb
push
mov
stos
jl
sbb
clc
shll
data16
add
cld
test
call
clc
pop
cmp
insb
mov
inc
pop
add
roll
jae
or
lea
js
push
ljmp
cmp
lods
or
ljmp
outsl
je
ret
fidivrl
dec
push
nop
imul
out
leave
nop
sbb
cmp
pop
cmpsl
sbbb
mov
pop
push
jo
test
fbstp
jo
les
cld
and
dec
popf
xchg
int
xor
add
lock
stos
inc
push
inc
cltd
lods
popa
mov
test
mov
cmp
jecxz
push
lret
sub
mov
push
xchg
mov
cltd
pop
mov
inc
movl
negl
jle
dec
add
jmp
xchg
mov
cmp
mov
out
adc
push
andl
movsl
in
xor
push
icebp
inc
shrb
cmc
fs
ja
add
inc
inc
adc
es
loop
hlt
or
in
gs
xor
xor
cmp
cmpsb
repz
sub
inc
dec
fs
mov
cmp
jo
xor
xor
push
pop
movl
jg
jno
movl
movsb
add
jae
and
imulb
add
loopne
and
decl
jno
jne
jl
xor
or
push
bound
sub
pusha
je
jb
call
xchg
mov
pushf
push
mov
repz
dec
add
shlb
cmp
mov
push
mov
mov
sub
sarl
push
pop
jns
and
inc
adc
jns
jle
push
ss
sbb
ret
mov
pop
adc
cmp
js
shrl
in
stos
test
dec
jge
and
push
sub
cmc
dec
jb
sbb
push
test
cmpsl
jo
movsb
mov
mov
dec
cmp
jb
add
pusha
jl
cmp
push
mov
push
mov
xchg
or
xchg
sbb
xor
cmc
push
idivb
dec
sub
inc
cmpb
add
xor
cmpsl
outsb
xor
jge
je
pop
cmp
push
icebp
jge
sub
fldcw
cmp
or
push
xor
sub
loop
inc
sti
rep
repnz
xor
jns
mov
sbb
jmp
sub
pop
add
pushl
and
and
adc
push
jae
sbb
andl
mov
adc
pop
push
push
ja
scas
jae
push
push
mov
cmp
into
cmpsb
xlat
push
and
push
mov
stos
pop
lods
rcrl
dec
adc
xchg
data16
dec
les
je
push
sub
add
push
or
inc
pop
pop
adc
aas
xchg
rcrl
inc
add
sbb
orb
adc
fnstenv
sti
imul
and
jno
push
mov
and
lock
lret
repnz
adc
or
mov
inc
rolb
push
iret
test
popa
test
lods
fildll
mov
das
arpl
jnp
mov
adc
push
push
jne
dec
arpl
cwtl
andb
out
lret
inc
ja
xchg
or
pop
orb
lcallw
hlt
lock
clc
add
inc
mov
push
js
cmp
dec
pop
adc
lcall
xor
jmp
dec
call
decl
imul
scas
push
push
xchg
loopne
adc
in
fcomps
dec
xor
xlat
mov
adc
bound
cmpsl
pop
arpl
mov
add
xor
sbb
add
inc
inc
cld
loopne
roll
js
shrb
and
sarb
dec
jne
push
cmpsb
in
sub
xchg
jmp
push
add
jmp
cmp
inc
sbb
xor
sbb
push
xchg
dec
add
outsb
push
add
in
and
orl
mov
stos
sub
subl
sub
xchg
inc
clc
adc
xorl
dec
add
cmp
orl
jle
add
in
xchg
xchg
testb
adc
test
adc
add
xor
or
or
xchg
xchg
push
mov
shlb
cmpsl
add
cmp
in
sahf
add
shll
inc
cmp
cmpb
sub
and
add
lea
subb
add
dec
mov
hlt
sub
sar
andb
jb
ret
cmp
mov
dec
sbb
xchg
push
inc
and
xor
ret
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
fstpt
sahf
ja
test
mov
insb
sub
or
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
and
icebp
mov
ret
and
rcrb
dec
xchg
sbb
cmp
int
bound
jl
subb
ret
notb
cltd
mov
push
cmpsl
addl
or
adc
jno
push
pop
push
push
adc
mov
add
or
or
sbb
lods
daa
lcall
or
test
sbb
mov
ret
dec
pop
addr16
add
mov
xchg
adc
pop
sbb
cmp
in
push
mov
jmp
dec
ss
mov
mov
jne
sub
outsb
sar
call
jp
cmp
rorl
mov
jb
shl
out
dec
jae
ror
push
mov
cmc
cwtl
xchg
jmp
dec
hlt
jae
inc
test
adc
xchg
add
push
ret
rcl
repz
in
mov
icebp
inc
sarb
or
push
daa
jno
push
cmp
inc
sub
icebp
pop
jl
adc
jb
adc
jne
adc
xchg
imul
pop
out
xchg
mov
sub
push
sub
pop
inc
jne
adc
cmp
xchg
jbe
pop
dec
sti
xchg
sub
cltd
mov
cltd
push
xchg
cli
lods
test
add
fs
bound
jne
cltd
xchg
add
sbb
or
pushf
xchg
sbb
push
pusha
lret
mov
insl
dec
cli
mulps
add
pop
dec
jbe
or
sub
dec
dec
mov
pusha
jmp
pop
xor
loope
pop
shr
mov
or
adc
shll
mov
fbstp
push
pusha
aaa
jbe
iret
mov
push
push
jge
pop
rcrl
mov
ds
inc
adc
add
ret
subl
dec
negl
jp
adc
daa
or
mov
sub
and
jb
ja
mov
xchg
dec
or
inc
sbbw
cmp
nop
adc
sub
ss
adc
fs
mov
xchg
jb
dec
shll
arpl
cmp
cmp
sbb
mov
jmp
cmp
test
sbb
int
faddl
adc
xchg
fsubrs
jg
xor
in
or
pop
inc
les
mov
fisubl
jne
jbe
addl
xchg
outsb
and
jne
push
add
test
test
call
push
jmp
jmp
dec
mov
adc
adc
push
push
xor
mov
dec
mov
xchg
mov
test
aas
and
and
enter
faddl
enter
clc
and
add
and
mov
in
es
pop
enter
dec
daa
and
enter
enter
movsb
sub
cltd
fsubs
cs
or
mov
cmp
inc
push
push
xor
cmp
inc
scas
pop
xor
fs
iret
xchg
pop
and
mov
xor
or
xor
adcb
cmp
xor
or
or
fdivs
mov
in
pusha
adc
pop
add
jl
cmp
add
pop
sbb
adc
or
adc
pop
cmp
mov
scas
jg
inc
js
sbb
jne
popf
in
adc
adc
orl
jne
movl
scas
movsl
fadds
mov
sbb
jge
fwait
ja
sub
push
imul
jge
sahf
inc
jae
jge
lods
mov
ss
sti
adcb
imul
mov
imul
cmpsl
cltd
movsb
lahf
enter
fdivl
inc
out
jns
loopne
in
aam
jo
sbb
test
rorl
insb
xor
pop
pop
jo
jo
pop
jmp
cltd
add
sahf
je
fcomps
mov
mov
push
enterw
push
test
sub
jo
jo
jmp
pop
xor
sub
test
aam
inc
aas
rcrb
push
mov
pop
add
add
jb
jns
xorb
and
pop
call
cli
rolb
push
das
jo
adc
inc
mov
mov
scas
or
mov
cmp
push
loopne
les
sahf
and
sbb
inc
add
mov
repz
stc
enter
lock
das
nop
jae
jl
mov
and
fwait
and
xor
jno
in
test
xchg
and
rorl
push
pop
mov
push
jle
mov
xor
gs
push
testl
push
add
adc
clc
sub
insb
addb
jbe
or
je
xchg
sbb
out
cmp
jmp
cmp
in
cmpb
mov
inc
xchg
into
je
fistps
mov
xor
je
sub
fnstenv
cmp
adc
ja
movsb
add
mov
loopne
and
test
mov
insb
test
dec
ret
mov
push
xor
pop
pop
sahf
aaa
lods
nopl
and
inc
sbb
mov
or
add
ret
inc
xchg
pop
or
jo
or
sbb
je
sbb
cli
add
adc
repnz
xchg
push
push
xchg
rcll
mov
in
syscall
pop
adcb
mov
mov
and
cs
clc
lock
xor
mov
mov
push
nop
and
fistl
or
cmp
mov
and
mov
xchg
lock
inc
lcall
mov
push
pop
mov
add
pushf
aam
test
int
cmp
test
xchg
adc
nop
loope
xchg
popf
lea
adc
pusha
xchg
les
lcall
xchg
or
push
xlat
or
or
das
loop
mov
mov
xor
mov
inc
gs
les
lret
je,pt
cwtl
add
jnp
dec
push
sbb
clc
or
test
les
cmp
in
fdivr
aam
add
fsubs
push
dec
dec
fwait
ret
adc
cli
inc
xchg
mov
sub
push
mov
jbe
repz
inc
adc
fbld
dec
add
or
or
mov
bound
or
push
inc
sbb
out
mov
mov
adc
rorl
or
scas
push
pop
cld
jbe
jmp
lahf
dec
outsl
or
adc
rclb
add
add
sbb
sub
popf
jnp
leave
cmp
adc
xor
push
xor
imul
popa
dec
ret
mov
rol
out
inc
and
sub
xor
adc
movlhps
dec
rcr
or
or
std
imul
mov
rorb
in
nop
repnz
dec
outsb
inc
or
lea
cmp
and
fdivrs
push
push
and
adc
xor
jmp
push
js
pop
iret
icebp
dec
stos
mov
add
fcomps
jecxz
or
dec
push
inc
inc
adc
inc
divl
jno
cli
das
enter
cmp
movsb
cmpb
push
stos
sub
push
es
push
mov
call
fs
pushf
fs
inc
mov
jl
int
xchg
movsb
mov
and
xchg
and
dec
mov
fwait
inc
popa
push
sbb
fimull
xchg
test
mov
ret
and
outsl
dec
cli
and
pusha
lods
or
jae
xchg
add
mov
loope
cmp
or
lock
push
push
es
call
xor
or
push
enter
add
ficompl
daa
loopne
inc
nop
jne
and
and
mov
pop
pusha
imulb
repnz
sbbl
mov
movsl
aam
dec
rcrb
xchg
add
cmpsb
cwtl
imul
scas
insl
push
push
lea
ret
test
mov
xchg
pop
mov
addl
into
push
inc
shrb
int3
adc
push
dec
push
movsl
pusha
inc
sub
rorb
insb
pusha
or
mov
test
xchg
icebp
aam
push
dec
rorb
lea
loope
inc
loope
xchg
dec
sub
jmp
jo
aam
dec
subl
cmp
outsl
pusha
push
push
push
loope
aad
push
and
xchg
sub
sbb
sub
jno
cmp
aas
sti
push
pop
mov
ja
mov
and
or
push
fdivr
cmpsl
je
loopne
cmp
jbe
nop
cmp
inc
mov
pop
push
or
mov
das
dec
jge
bound
rclb
add
add
pop
and
mov
in
imul
xor
adc
adc
pusha
ljmp
add
xlat
shll
sub
cmp
sti
pushf
loop
push
xor
push
fwait
lahf
jl
or
jne
xor
xchg
lds
adc
mov
mov
or
les
add
or
push
test
insb
movsb
gs
and
mov
push
push
sbb
leave
scas
sbb
test
shrb
cmpsb
into
inc
mov
mov
js
ret
add
push
adc
and
mov
xchg
adc
addl
cmpsl
stos
fdivl
dec
add
sbb
adc
dec
test
test
inc
rolb
fnstenv
push
shlb
jo
mov
pop
inc
and
jmp
icebp
clc
dec
sbb
mov
xchg
or
sbb
or
pushf
clc
rclb
push
push
adc
das
mov
js
and
mov
mov
je
push
psllq
sbb
xor
push
inc
clc
mov
add
pop
push
add
push
add
out
jbe
cs
sbb
xchg
and
enter
push
mov
push
mov
fcoms
and
xchg
scas
pop
orl
mov
iret
add
xlat
xchg
jo
dec
and
lret
sbb
lds
dec
or
sub
and
out
movsl
pop
fwait
adc
add
push
nop
lods
sar
add
pop
xor
shrl
mov
sub
jnp
push
sub
mov
pop
scas
addb
data16
movsb
stos
ret
sub
imul
xchg
fadds
pop
adc
scas
mov
lret
xchg
movsl
test
es
xchg
lret
or
call
dec
sbb
stos
inc
insl
les
in
xchg
xchg
inc
les
or
clc
xor
testl
enter
push
push
cwtl
aas
repnz
and
inc
jg
mov
ret
mov
inc
in
int3
hlt
rcr
test
or
sub
ds
sbb
or
fs
pop
fsubrl
enter
or
rolb
jo
pusha
test
pusha
pop
inc
lcall
or
xchg
mov
add
push
test
mov
adc
insb
aas
push
xor
sub
call
movsb
pop
sub
adc
test
movsl
test
xchg
lret
xlat
lret
mov
nop
xchg
cwtl
pushf
push
lcall
sarl
jne
pusha
cld
mov
and
push
sub
sarl
jecxz
stos
dec
mov
mov
fmul
and
popa
and
test
sub
mov
pop
test
ja
xchg
adc
sub
loopne
shlb
jmp
mov
mov
fsts
popf
and
inc
dec
dec
imul
or
cmp
enter
scas
icebp
fidivl
jae
rcrb
inc
xchg
cltd
cmp
dec
adc
in
mov
adc
jle
les
mov
push
jp
dec
test
sbb
test
push
stos
jge
mov
mov
push
movsl
jl
cmp
enter
scas
outsl
or
pop
mov
mov
mov
mov
dec
add
lods
or
cmpl
xor
insb
mov
sub
inc
push
inc
shll
pop
enter
dec
sbb
jmp
out
push
xor
hlt
lahf
ret
mov
or
test
mov
and
mov
cltd
cmp
pusha
jecxz
stc
and
dec
in
cmp
pop
or
mov
movsl
and
or
mov
add
stos
adc
xorl
pop
pop
jb
add
stos
cmp
jnp
cmp
adc
leave
adc
roll
xlat
push
push
xor
repz
mov
pop
pop
inc
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sbb
loopne
or
inc
sub
or
pop
jno
jp
lods
mov
loop
jb
andl
cld
scas
icebp
push
sbb
adc
lea
movsb
mov
or
add
sbb
ss
jbe
mov
dec
push
push
test
incb
mov
sub
push
idivl
lret
into
ret
push
add
cltd
daa
sti
inc
popf
sbb
jne
mov
mov
adc
fnsave
ja
ljmp
mov
into
jo
mov
dec
and
and
repz
lea
mov
decl
cmp
jge
push
in
movsl
xor
inc
inc
inc
inc
push
jl
js
or
cwtl
xchg
pushf
lods
cmp
stos
dec
cmp
mov
jmp
lds
enter
mov
inc
lock
and
bound
nop
jge
or
dec
loopne
in
repz
inc
repnz
xchg
push
add
int
dec
xchg
fsubr
and
push
mov
push
pushf
mov
cmp
mov
push
add
adcl
sti
sub
add
clc
outsb
into
stos
push
push
and
dec
jle
push
pop
jo
jbe
fsubl
hlt
add
mov
addr16
iret
hlt
lock
mov
and
push
ret
add
mov
cld
mov
pop
add
cmp
test
pcmpeqw
cmpl
test
movsb
jp
add
sbb
jge
dec
push
jbe
push
and
lea
sub
or
mov
sbb
push
xorl
push
nop
addr16
sbb
xor
shrb
dec
ljmp
xchg
lea
lock
and
pop
pop
sub
gs
push
mov
xchg
fs
movsl
lods
in
jae
outsl
in
inc
sbb
in
adc
sbb
xchg
mov
in
cmp
xor
xorb
push
mov
mov
xor
faddl
shl
repnz
mov
mov
popa
push
or
jge
lods
adc
pop
xchg
cmp
sahf
mov
lods
push
adc
gs
adcl
movsb
jne
fsub
fdivrl
scas
jne
push
lods
adc
out
mov
leave
loopne
jo
xchg
call
or
inc
test
cltd
pusha
add
push
rolb
push
test
and
mov
mov
adc
add
add
aam
lcall
popf
mov
pop
rclb
lret
sub
or
add
or
push
adc
out
add
sbb
incl
sbb
mov
daa
jno
jae
dec
mov
push
cmp
sarb
lods
adc
inc
cld
cmp
mov
and
inc
mov
dec
sahf
movsb
sbb
pop
and
roll
add
mov
movsb
test
decb
cmpsl
mov
dec
movsb
ss
mov
aaa
or
jge
jmp
outsb
lock
aaa
enter
loopne
inc
or
and
sbb
fiadds
lcall
or
les
sbb
rorl
lret
inc
hlt
push
jge
lock
es
mov
or
jne
insl
or
cmpb
cmp
std
mov
jp
je
sbb
lods
ret
adc
je
data16
pop
sub
add
jle
xchg
ja
stos
add
and
cmp
jg
outsb
adc
cmp
imul
outsb
add
push
jge
or
jle
xchg
clc
mov
cmp
ja
outsb
and
pop
bound
imul
sbb
lret
sbb
lock
xlat
or
xor
int3
or
out
cmp
fnstcw
cmpsb
dec
cmp
dec
sub
sbb
sbb
push
lock
xor
fs
inc
jmp
inc
repnz
bnd
add
addr16
inc
ja
dec
and
jne
cld
or
and
lock
xchg
or
movsl
push
loop
add
or
aam
pop
xor
or
iret
jne
lods
lret
jmp
pop
or
add
or
mov
int3
fistl
mov
fsubr
mov
test
push
loope
rcrl
cmp
loopne
inc
adc
scas
dec
pop
loopne
sub
xor
jo
inc
out
xchg
push
pop
mov
call
push
mov
jae
add
out
xor
sbb
push
sbb
jge
movsb
xor
lret
mov
xchg
les
or
push
sub
lods
sub
fldcw
mov
sbb
push
inc
xchg
adc
add
cmp
nop
push
xchg
jle
jmp
adc
adc
jns
lahf
roll
cwtl
add
scas
push
fcomp
lds
mov
push
and
popa
dec
dec
add
movsl
jge
rolb
fstp
adc
aam
andl
xchg
rorb
xchg
imul
inc
sahf
in
leave
push
or
inc
or
xchg
and
mov
inc
popf
push
xor
rorb
push
testl
jo
or
loope
inc
into
cmp
xchg
stc
push
jo
jb
cmp
xchg
or
add
xchg
pusha
nop
cltd
sbb
popa
xchg
arpl
cmp
or
push
test
loopne
adc
test
sti
push
jbe
sbb
xor
lcall
and
pop
or
pushf
jmp
pop
enter
test
dec
scas
xor
mov
mov
or
sub
push
inc
pop
orl
test
cwtl
add
mov
pop
cs
insb
mov
sub
and
hlt
cmp
push
xor
inc
adc
cmp
dec
orl
fwait
mov
add
dec
and
js
xorl
sbb
push
mov
fistpl
lods
xor
repz
cwtl
rorb
das
inc
dec
push
popa
mov
mov
imul
lods
add
push
into
dec
cmc
xchg
or
xlat
cwtl
push
push
mov
xchg
imul
je
add
in
jne
ss
mov
incl
adc
je
cltd
test
scas
test
gs
pop
cmp
sub
enter
sub
rorl
jae
dec
add
shr
sub
jge
stos
push
add
cmp
push
xor
mov
nop
call
dec
pop
insb
add
cmp
cmp
mov
push
xor
push
call
mov
cmp
imul
imul
in
push
xchg
xor
repnz
jle
add
adc
sbb
xor
call
cmp
cmp
inc
cmp
loopne
sub
insl
lea
adc
push
dec
fdivp
cmp
and
call
aad
or
sbb
adc
not
cmp
cmp
mov
mov
ret
shr
cmp
jbe
add
jmp
add
pop
rcr
inc
dec
gs
and
add
add
dec
inc
loopne
jg
adc
mov
mov
or
mov
call
xchg
dec
adc
test
mov
js
stos
or
and
inc
loope
punpckhbw
scas
jnp
pop
mov
jo
lods
or
mov
mov
ss
mov
mov
arpl
pusha
out
dec
mov
das
sarb
inc
adc
fnstcw
rorl
xchg
imul
jbe
mov
and
and
push
int
inc
loop
test
add
cmp
call
imul
mov
jl
pushf
ss
or
xorl
test
xchg
les
hlt
pusha
sbb
and
sub
sbb
mov
sbb
xor
out
push
or
mov
push
jb
push
xchg
out
fadd
cs
cwtl
add
xor
add
dec
sub
outsb
cmp
jg
and
stos
xchg
je
leave
shl
pop
inc
mov
cs
cmp
add
test
xchg
test
cld
scas
cmpb
sahf
addl
cmp
test
xor
cmp
adc
in
out
adc
mov
add
call
adc
orl
mov
mov
add
es
mov
les
and
bnd
mov
in
pop
inc
ret
mov
push
push
pop
push
mov
sub
dec
push
fstl
xor
push
mov
sub
pop
aam
push
dec
pop
mov
loope
pop
cli
arpl
ds
push
add
sahf
or
push
mov
pop
dec
jmp
insl
add
adc
dec
jne
push
movsb
dec
add
and
inc
mov
out
sbb
int3
std
out
dec
pop
repz
dec
insb
cs
xor
in
push
loop
push
mov
push
jo
cwtl
xorl
mov
minps
test
or
popa
jmp
popa
fdivs
mov
push
fs
adc
adc
fwait
and
mov
ljmp
mov
lods
repnz
jns
sub
adc
stos
vfmaddsub231ps
xchg
notl
jl
enter
repz
pop
les
fcoms
mov
adc
mov
pop
add
xchg
ds
inc
or
mov
inc
push
insb
pop
push
aaa
test
in
rol
sub
push
ret
xor
hlt
push
popa
pop
and
adc
shrb
jbe
inc
mov
mov
inc
fsubrs
aam
jp
and
mov
adc
pop
and
movsb
shrl
stos
jnp
adc
mov
ja
adc
pop
add
add
mov
orl
repz
and
push
xor
sub
mov
xor
push
fimull
pop
pop
popa
rep
cmpl
cltd
inc
pop
mov
es
sub
sub
push
push
sbbb
inc
push
loop
shll
push
or
sti
jb
je
push
sub
lock
xor
jmp
imul
push
jno
push
sahf
pop
ret
pop
test
mov
xor
repz
lock
cmc
repz
mov
mov
cmpl
sub
jns
fcomip
mov
push
push
into
idivb
jb
lods
push
enter
mov
nop
popa
xor
pop
lods
add
sti
push
push
add
add
sbb
xor
rcll
fisubrs
jne,pn
inc
or
xlat
or
rorb
lret
push
add
add
rcrl
inc
je
add
mov
cli
mov
mov
mov
mov
mov
dec
addr16
pop
mov
lret
jo
loope
ja
mov
test
cld
add
lahf
cmpsl
push
mov
test
add
push
mov
inc
dec
push
cmp
inc
imul
add
in
loopne
mov
cmp
insl
popf
insl
mov
add
push
adc
rorl
or
sbb
and
pop
adc
jo
pop
add
loop
sbb
fstps
or
xchg
test
pusha
fs
arpl
sbb
lock
ret
in
lea
sbb
and
mov
push
incl
sahf
or
jecxz
cmp
fwait
mov
xchg
cmp
sbb
imul
test
mov
cmp
sbb
adc
mov
es
pop
xchg
lahf
mov
push
js
mov
cmp
push
bound
push
es
mov
xchg
pop
in
test
pop
loop
pop
pop
lods
mov
lea
dec
xchg
jle
push
add
add
daa
mov
loope
pop
je
inc
pop
js
aaa
add
dec
cmp
inc
cmp
shlb
push
lahf
mov
les
mov
fistps
or
flds
jo
mov
pop
shrl
mov
mov
fs
jbe
jl
or
test
sahf
xchg
pop
push
and
dec
pop
mov
sub
scas
ds
lods
cmovae
inc
aaa
call
sbb
dec
sbbl
rolb
push
add
loop
push
mov
mov
add
bound
fmuls
push
aaa
loopne
mov
call
orl
adc
leave
mov
mov
cmpsl
push
clc
mov
ret
cmp
jbe
push
mov
push
push
mov
mov
test
imulb
sbb
jb
stos
pop
lods
ret
mov
xor
pop
pusha
leave
push
push
push
insl
lret
and
sub
xor
ss
and
bound
in
xchg
jmp
xorb
shl
push
or
mov
push
inc
test
xor
mov
popa
cmpsl
icebp
js
mov
pop
clc
push
pop
cltd
repnz
pop
aaa
leave
pop
rclb
nop
popf
jno
hlt
xor
mov
test
jo
rcrl
cwtl
sarl
bound
inc
fwait
cs
arpl
dec
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
xchg
dec
popa
or
add
repnz
adc
incl
or
mov
je
mov
or
adc
test
mov
enter
in
stc
mov
xor
jnp
push
dec
nop
nop
sub
lods
lods
les
repnz
mov
les
push
xchg
fcompl
sbbb
daa
inc
clc
mov
test
mov
mov
jl
mov
popa
stos
xchg
mov
es
sbb
sahf
bound
sbb
lcall
inc
mov
sub
add
pop
shlb
mov
add
movl
inc
sub
mov
lret
dec
mov
dec
adc
test
jl
dec
enter
pusha
sete
inc
jle
push
fs
js
adc
fs
sub
idiv
jbe
and
add
bndstx
mov
aaa
call
inc
roll
xor
fcmovnbe
leave
jo
test
mov
push
inc
dec
push
xor
fwait
mov
add
incl
jge
movsl
clc
and
iret
ds
xchg
and
push
mov
xor
orb
mov
rcll
push
xlat
arpl
jmp
xor
cmp
push
sub
and
or
inc
inc
mov
pop
mov
add
mov
shll
aaa
leave
and
movsb
adc
or
inc
popf
ret
rolb
add
loop
sbb
push
sarl
mov
pushl
cmp
movsb
sub
inc
popa
sbb
ret
or
movsb
test
lea
hlt
pop
xchg
loope
jo
leave
mov
push
pop
out
xchg
clc
rolb
les
divl
push
push
or
ret
push
das
icebp
sub
inc
shlb
inc
fldl2e
popa
and
fsubl
add
rclb
dec
jno
cmp
icebp
out
clc
shll
loopne
xchg
jge
iret
pushf
xchg
push
jbe
icebp
push
js
mov
mov
lock
xor
imul
sbb
dec
aam
aaa
push
push
aad
into
mov
jmp
xlat
arpl
inc
cmp
xchg
aaa
lods
lahf
rolb
lret
rcl
push
inc
pop
xchg
cs
icebp
mov
adc
add
cld
add
rcrb
mov
outsb
jecxz
or
pop
dec
jne
je
inc
adc
mov
mov
xchg
js
pop
inc
lahf
int
sbb
bound
inc
dec
push
push
dec
test
stos
ss
lods
js
xlat
clc
imul
sar
xchg
push
jns
daa
and
xchg
mov
test
push
outsb
adc
or
xlat
movsb
pop
in
filds
xchg
jmp
pop
sub
and
mov
jg
fiaddl
leave
rolb
or
je
cmp
stc
push
cltd
pop
lret
pusha
or
and
bound
es
sti
in
repz
sahf
stos
add
dec
add
add
pop
xchg
dec
add
mov
ss
pop
lcall
ds
cmp
int
add
push
add
cmp
lcall
jo
sbb
aam
cmc
je
fsubrp
fstpl
sbb
push
push
aam
push
andl
scas
or
fs
insb
in
rcrb
cmp
dec
mov
jmp
fstpl
or
mov
stos
aam
imul
mov
lock
dec
sbb
cmp
loop
inc
fwait
and
pop
push
movsl
push
push
movsl
mov
faddl
fstl
imul
fistpl
fldl
pop
fsubr
pop
faddp
adc
pop
fildl
icebp
cmpsb
xor
shrb
push
mov
pop
mov
add
in
add
dec
mov
imul
insl
inc
jo
data16
mov
shll
mov
mov
push
or
aam
dec
adc
fdivrs
sub
xchg
test
xor
imul
mov
ja
test
jno
xor
push
or
jmpw
sub
rolb
into
push
gs
push
sbb
and
frstor
sbb
xchg
setbe
pop
jb
cmp
cmp
cmp
mov
int3
dec
sbb
ret
aam
pop
outsb
push
xchg
jp
sub
mov
jne
pop
in
sub
jecxz
add
pop
add
mov
scas
lock
jmp
mov
cmp
jge
add
insl
sbb
pusha
adc
dec
and
sub
pop
push
rol
outsb
cmp
ud0
pop
pop
adc
mov
stos
pop
and
push
jmp
addr16
outsl
lods
push
pop
xchg
ss
js
mov
imul
aaa
push
cmp
jne
push
push
adc
or
insb
aam
jl
and
pop
mov
ljmp
ror
inc
add
xchg
pop
inc
cmpsb
sbb
xchg
or
jns
mov
push
adc
push
mov
ret
or
inc
insl
cmp
dec
bound
pop
stos
in
mov
aam
push
mov
bound
adc
and
jmp
pop
ss
imul
push
cmp
arpl
xchg
test
add
int
add
xchg
ret
dec
cwtl
ficoml
xor
pop
fsubrp
pop
jp
cli
decl
inc
adc
imul
sbb
mov
xor
arpl
jmp
bound
mov
mov
push
outsb
movsl
mov
scas
call
adc
jae
mov
or
push
add
hlt
sbb
sarb
dec
inc
and
and
in
pop
or
inc
dec
mov
adc
std
jg
aaa
lds
and
add
lock
sub
imul
stos
or
push
out
loop
or
fadds
xorl
jns
pop
adc
fcoms
push
add
pop
out
push
rcrb
loope
sub
iret
xchg
pop
and
inc
subl
pop
pop
lock
cmp
je
add
fsubl
cwtl
dec
pop
adc
ret
fwait
and
jno
fdivrl
mov
adc
leave
roll
addr16
mov
mov
enter
mov
xorl
push
inc
sbbb
xor
and
arpl
inc
sarb
fisttpll
adc
inc
add
mov
dec
adc
mov
mov
adc
lret
pop
mov
rclb
test
pusha
lea
xchg
sbb
clc
adc
cs
repz
push
lcall
mov
sar
mov
mov
jge
gs
shr
push
hlt
lahf
arpl
sbb
lock
ljmp
leave
jne
jg
stos
ret
push
cs
mov
dec
push
add
shlw
addl
cmp
scas
in
adc
imul
insl
jmp
mov
cmpsl
push
add
rclb
xchg
out
popf
js
in
mov
clc
enter
lods
pop
jecxz
mov
pushf
pop
dec
ja
mov
push
xchg
and
sub
repnz
imul
inc
sbb
enter
push
mov
jmp
popa
mov
ret
mov
lret
add
mov
aaa
dec
mov
outsl
mov
sbb
and
xor
inc
add
mov
hlt
add
xor
nop
jbe
mov
test
jbe
leave
push
outsl
test
dec
insb
pusha
stos
xchg
jbe
leave
lods
xchg
outsl
js
mov
sbb
ljmp
pop
cmp
scas
in
xor
mov
sbb
loopne
test
dec
pop
dec
push
andl
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
adc
mov
ficoml
xor
loope
stos
js
das
mov
pop
sbb
cmpsl
cli
lods
xor
loopne
sbbl
out
test
jp
ljmp
mov
popa
fdivr
cs
add
and
ficoml
fsubs
push
cmpl
mov
cmpsb
mov
inc
add
mov
xor
pop
xchg
adc
enter
pop
push
jge
mov
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
inc
inc
push
add
test
push
sub
int3
sbb
jbe
dec
test
je
loopne
mov
inc
adc
mov
sbbl
cwtl
movsl
sub
cmp
test
mov
and
aaa
call
mov
adc
cmp
sub
dec
icebp
inc
cmp
dec
or
inc
pop
cmp
inc
push
inc
xlat
pop
sub
xor
add
ljmp
pop
insb
jp
mov
xchg
sbb
jne
xor
aas
dec
mov
shlb
aaa
push
popa
pop
pop
lcall
push
cltd
push
sarl
aas
xor
pop
dec
dec
and
or
lock
test
jmp
adc
sbb
cmp
xchg
loop
or
shll
pushf
std
loope
enter
mov
sub
addb
inc
mov
lods
dec
js
or
repz
dec
dec
rclb
sub
adc
push
mov
stos
dec
loop
rcrb
jle
mov
stos
test
push
in
or
pop
fcomps
aam
mov
movsb
jae
xchg
dec
push
push
loope
add
sbb
sti
les
cwtl
dec
in
movb
in
and
push
sbb
jbe
cmp
dec
mov
xchg
add
add
arpl
inc
lcall
xorl
pusha
and
or
daa
mov
add
and
sub
rolb
add
je
add
std
faddl
or
sarl
enter
xchg
cmp
mov
outsb
xchg
rol
xchg
xorb
cmp
loopne
clc
jl
add
cmpsl
xchg
cmpsb
movsb
imul
addr16
sbb
loopne
rcrb
mov
aam
leave
in
sbbb
push
sahf
add
add
add
push
lret
xor
add
sahf
testl
sti
sbb
or
dec
repz
lcall
out
push
mov
jl
inc
xchg
push
loope
movsb
test
mov
mov
and
pop
stc
push
xchg
mov
inc
xor
data16
jmp
mov
pop
push
cmc
in
pop
push
push
sub
stos
cmc
out
sub
xchg
popf
pop
neg
push
adc
jmp
sub
pusha
mov
sbb
imul
pop
jecxz
popf
or
lahf
jp
rcrl
loope
jmp
ja
push
push
add
push
hlt
jge
inc
mov
adc
inc
sub
pop
loopne,pn
xorl
stc
pop
or
out
cli
jae
pop
inc
jle
or
or
mov
sub
outsb
inc
xchg
faddl
pushf
xor
mov
in
loopne
push
aaa
sub
inc
inc
add
addr16
or
adc
push
sarb
mov
and
sarl
inc
or
mov
rcrb
dec
and
mov
rol
pusha
or
rcr
and
sbb
int3
sub
pop
daa
inc
sbb
xchg
sbb
cmp
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
ljmp
lahf
cmp
or
ret
and
push
dec
je
sub
fadds
inc
fsubrl
jle
xorb
or
pusha
and
and
pop
add
mov
push
xor
jmp
cmp
push
mov
in
lds
lock
popf
add
jb
stos
sub
cltd
sbbl
adc
add
nop
in
imul
ss
push
pop
lods
int
or
mov
mov
and
and
mov
in
mov
or
inc
ljmp
jmp
adc
xchg
mov
inc
cmp
sbb
nopl
mov
jnp
cmc
cmpsb
les
push
dec
push
add
mov
movq
inc
add
and
xchg
in
fidivs
loope
addr16
and
jmp
push
dec
xor
push
pop
mov
push
add
test
lret
inc
pop
add
cmp
add
dec
loope
in
sub
cmp
popa
adc
iret
inc
inc
dec
push
cmp
push
and
and
ficompl
inc
xor
aas
lahf
les
cmp
xchg
xchg
mov
jl
sbb
inc
andl
dec
xchg
inc
das
dec
or
inc
and
fwait
pop
lea
or
loop
pusha
jl
xor
pop
add
sub
cltd
shlb
ret
xor
or
sbb
inc
js
add
dec
add
pop
and
add
call
addb
adc
sub
or
inc
fstpl
pop
cmp
sbbl
or
mov
icebp
push
in
call
cli
std
scas
rcrl
jge
or
daa
xchg
inc
xor
or
jl
xor
push
sbb
hlt
in
cwtl
fdivs
sahf
adc
in
jns
or
add
xchg
jp
push
or
sbb
add
addr16
imul
pop
xchg
jno
mov
fsubrl
fildll
aam
xorb
lods
or
xchg
fnsave
pop
data16
mov
mov
ret
aad
andb
inc
and
mov
aaa
add
and
jle
lock
push
and
sar
add
cmp
ja
nop
je
clc
pop
adc
or
movl
push
je
and
cmp
lea
sbb
nop
push
xchg
push
xorb
mov
or
dec
cmc
push
and
sbb
mov
cld
addl
or
jmp
adc
or
pushf
xor
aaa
xor
inc
aam
add
ds
cwtl
push
or
cltd
sbb
test
lock
xchg
aas
pusha
lea
mov
rcl
adc
jns
je
sub
lods
jl
and
jo
scas
and
cmp
jl
xor
lret
outsl
imul
jmp
or
push
cmp
cmp
sub
sbb
push
cmpb
es
dec
mov
sarl
push
pop
enterw
mov
shr
pop
cwtl
repnz
std
dec
mov
push
pop
imul
push
mov
cmp
jno
cmpsb
inc
cmp
mov
lock
jmp
or
xor
push
cltd
jo
jnp
inc
and
pop
jne
jns
pop
sti
mov
loopne
repnz
push
jmp
push
or
push
dec
sbb
loope
divb
jmp
int
stos
xor
imul
sub
push
jne
jnp
in
jl
inc
mov
dec
push
jge
lret
scas
loop
mov
inc
xor
xchg
int3
sub
mov
add
sub
inc
push
sahf
add
push
sub
pusha
sub
ljmp
inc
pop
inc
xor
cld
adc
into
sar
adc
or
fimuls
and
sbb
shlb
in
pop
imul
lods
pop
push
ss
mov
push
jno
rorb
lea
fldcw
cld
adc
je
push
lods
incb
fs
add
push
clc
mov
push
stos
fistl
mov
xchg
adc
and
js
cmp
or
pop
icebp
inc
sbb
mov
aad
nop
xchg
add
das
and
and
rcrb
jg
sbb
push
cwtl
mov
mov
mov
jle
cli
or
mov
arpl
iret
inc
add
mov
adc
adc
jl
loope
pop
stc
mov
jl
popa
nop
jb
mov
imul
enter
lret
enter
cmpl
inc
pop
movsb
cmp
mov
push
or
pop
and
pop
insl
popa
pop
mov
push
out
fcomps
cmp
lods
push
sub
cmp
inc
stos
js
pusha
add
or
pusha
testl
fmuls
cmp
xor
push
cmp
dec
pop
ret
mov
data16
test
je
aas
jne
loopne
add
mov
pusha
inc
or
out
pop
sub
movsl
imul
mov
or
jbe
aas
mov
sub
jae
sbb
adc
adc
adc
pop
cmpsl
aaa
stos
arpl
loopne
add
pop
arpl
xor
fwait
mov
inc
add
push
pop
fdiv
je
push
mov
push
cmp
in
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
je
mov
into
adc
or
test
push
pop
xchg
arpl
test
add
or
add
and
or
nop
das
divb
aam
and
sbb
push
inc
cs
add
addb
stos
mov
or
das
cmpsb
shl
fmuls
cmc
mov
cltd
and
lods
mov
mov
js
or
mov
mov
mov
adc
fisubl
aaa
or
decl
push
fsubrs
mov
sub
cmp
shlb
and
sbb
test
mov
jb
add
xchg
mov
daa
jge
iret
rcr
pop
scas
dec
add
shlb
test
jne
mov
mov
sbb
dec
jecxz
imul
push
lea
call
sbb
fisttpll
mov
adc
inc
stos
dec
loope
mov
sbb
pop
fwait
fs
jns
fdivs
stos
jmp
or
movsb
dec
mov
scas
or
inc
rolb
mov
push
fs
insl
xchg
test
mov
popf
sti
cwtl
or
mov
adc
stos
in
fisubrl
sub
loope
and
mov
ss
mov
rcrb
test
add
add
push
out
mov
push
sbb
ret
jne
aad
push
mov
loope
fistpl
inc
adc
or
lret
add
mov
or
rcr
das
icebp
add
iret
jge
popf
xor
in
push
sbb
mov
cmp
pop
mov
mov
stos
loopne
mov
inc
adc
or
imul
test
mov
jne
and
mov
xchg
jmp
push
add
icebp
xor
ja
push
mov
ret
jno
ret
mov
lahf
scas
ret
adc
mov
add
pop
aam
xor
add
sub
mov
lods
and
into
xchg
in
jmp
adc
pop
xchg
insb
add
inc
jle
incl
mov
or
clc
and
jecxz
lret
push
out
ret
fidivl
sub
or
enter
add
fwait
int
adc
mov
fmuls
dec
or
jg
cmpl
popf
rolb
adc
outsb
loope
mov
pop
xchg
mov
fcompl
je
imul
add
inc
add
cmpsb
xchg
inc
popa
ret
cmpl
lahf
rorb
sbb
mov
sub
fwait
outsb
and
inc
and
jecxz
scas
ds
and
mov
jmp
mov
ljmp
mov
decl
adc
xchg
cmp
jl
jp
or
push
push
push
filds
mov
lods
rclb
lods
push
insb
loop
and
arpl
mov
mov
sbb
cli
lea
inc
jp
sbb
movsb
and
xlat
sbb
mov
in
mov
mov
loope
or
xchg
hlt
mov
or
das
movsb
imul
push
push
in
jecxz
shrb
push
pop
movl
push
dec
pop
jb
insb
add
lock
cmp
shlb
rcl
jecxz
mov
inc
movsl
ret
inc
dec
add
loopne
mov
aaa
inc
pop
mov
cwtl
sub
ja
push
pop
orl
adc
fimull
scas
sti
jb
push
push
pop
mov
xchg
pushf
mov
and
sub
push
xor
lock
mov
add
mov
jb
and
mov
add
cld
mov
inc
or
xor
mov
sub
lods
sub
out
push
inc
orl
inc
sbb
imul
mov
lcall
xor
jbe
js
add
pop
or
and
add
mov
or
shl
sbb
push
pushf
xchg
cs
lea
jecxz
lea
jmp
test
mov
lcall
pop
leave
repz
add
jb
xchg
jo
add
in
imul
push
push
push
bound
dec
mov
out
adc
jl
cmp
and
mov
test
push
cwtl
mov
adc
rclb
push
push
lcall
push
push
push
xor
or
push
scas
push
and
jb
adc
or
test
adc
inc
scas
or
or
or
ss
cmc
bound
das
dec
les
je
xorb
xor
js
rorb
cwtl
and
push
dec
push
cli
ss
sbb
in
adc
sbb
mov
fimuls
add
in
pop
xchg
rorb
mov
pop
sbb
push
test
xchg
invd
popl
push
pop
divb
loope
fldt
add
add
stos
std
adc
fs
mov
adc
cmc
out
mov
popf
mov
or
mov
add
je
adc
rcr
ret
pop
push
mov
rcrl
inc
push
inc
push
enter
adc
add
adc
mov
push
and
add
outsl
push
or
psrld
aam
mov
inc
sbb
test
mov
adc
dec
push
pop
outsl
mov
mov
xchg
pop
or
lret
dec
inc
mov
iret
mov
das
cmpb
push
adc
popf
inc
mov
or
in
ret
mov
sbb
pop
inc
sub
adc
pop
push
lahf
call
subb
xchg
movsb
cmp
add
push
xchg
call
fisubl
sub
test
popa
sub
jmp
in
push
lea
outsb
adc
adc
add
mov
jo
mov
jmp
mov
aam
scas
movsl
and
adc
sbb
aam
dec
loopne
dec
sbb
ret
and
push
sbb
and
xor
mov
mov
jbe
mov
ja
adc
push
jo
outsb
sub
xchg
fdivrs
mov
test
lret
or
outsl
mov
imul
add
rclb
mov
ljmp
fcmovnb
pushw
out
xchg
out
mov
and
dec
pop
inc
stos
in
les
mov
add
mov
add
pushf
xchg
fsubs
and
adc
xchg
test
or
insl
faddl
or
loopne
pop
mov
jecxz
add
sbb
shll
test
fcoms
pop
insb
sub
lea
sarl
pop
shll
lods
mov
jp
push
gs
cld
ja
mov
xchg
push
das
adc
sub
push
push
xor
or
fmull
in
stos
xor
rcll
mov
mov
inc
pop
ret
fiaddl
ss
mov
pop
stos
idiv
rcl
out
push
push
test
mov
stos
in
mov
push
test
cmp
fsubs
add
xor
lods
pushl
fistpll
push
mov
push
fstpt
test
and
out
inc
enter
test
syscall
cmp
add
mov
ror
js
mov
loopne
stos
inc
ljmp
lods
cmpsb
mov
test
mov
and
and
pop
mov
cld
addr16
adc
insb
lds
lret
push
and
push
lea
push
and
sti
add
repnz
xor
outsb
add
pop
jns
lods
inc
push
lahf
pop
std
mov
push
sbb
inc
cmp
in
test
add
push
inc
mov
sbb
imul
rorl
lock
rcl
loop
loop
push
or
push
shlb
push
mov
mov
or
mov
les
stc
dec
xor
mov
adc
push
shll
add
loopne
nop
cmp
push
mov
pop
mov
mov
push
aam
sub
sbb
adc
in
xor
add
mov
subl
push
mov
adcl
nop
loopne
cmpsb
and
and
lock
cmpb
rorb
and
enter
xchg
xchg
cmp
decb
nop
pop
and
add
cmp
push
in
dec
iret
mov
fwait
add
loope
lret
xchg
clc
sbb
sbb
movsb
ja
pusha
cmp
or
mov
mov
or
mov
aam
pop
out
jle
jmp
and
xor
test
mov
push
ljmp
mov
fstps
jo
mov
mov
cmp
ret
and
pop
ret
cmp
mov
adc
and
je
ja
sarl
popa
inc
shrb
pop
and
test
adc
or
out
pop
mov
xchg
inc
push
push
lods
addb
pop
pop
les
popa
adc
inc
add
test
enter
fcom
xorl
and
dec
mov
mov
mov
fcoml
jl
cmp
mov
push
xchg
je
clc
push
and
popf
cmp
jns
xchg
sbb
pop
cmp
jmp
mov
push
add
hlt
push
xor
pusha
or
xor
push
xchg
push
shlb
hlt
dec
ja
adc
mov
xchg
add
push
popa
push
je
hlt
call
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
int
int
or
jnp
or
jbe
jmp
or
int
int
por
jmp
adc
pop
adc
int
int
push
adc
dec
adc
dec
adc
int
int
aas
pop
jmp
sbb
xor
int
int
jmp
sbb
es
and
int
int
pop
pop
jmp
and
or
add
and
test
inc
pop
dec
pop
mov
xchg
or
jno
jbe
out
mov
ret
popl
clts
jecxz
iret
repz
repz
add
or
iret
repz
adc
and
sub
cmp
cmp
inc
dec
repz
repz
push
pop
pop
fs
repz
imul
iret
repz
mov
xor
pop
enter
add
pushl
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
lgs
aas
push
shrb
enter
sub
inc
add
daa
icebp
adc
cmpb
ja
inc
sub
mov
xor
ret
adc
cmp
cs
jbe
pushf
les
push
aam
push
adcl
add
pop
add
add
cli
push
popa
les
outsb
xor
push
mov
cmp
jb
inc
and
popa
mov
test
cmp
das
std
sub
loopne
push
push
dec
mov
movsl
mov
sbb
add
aam
shrl
daa
push
add
sti
in
addl
mov
inc
js
lods
cmp
out
mov
xchg
shll
cmpl
mov
rclb
sbb
add
lea
add
sbb
jno
or
pop
loop
mov
mov
loopne
push
fcompl
cmpb
mov
mov
je
dec
rcrb
cmp
jae
mov
rcr
sbb
ljmp
and
mov
xchg
xor
aam
les
mov
je
mov
inc
sbb
rol
xor
fldl
or
pop
add
push
mov
mov
inc
mov
push
mov
ror
sti
shr
xor
pushf
shll
fld
ret
or
or
icebp
add
add
add
popa
add
or
jg
popf
ret
insl
push
or
and
xor
add
add
test
push
aam
sub
jge
fsubr
add
lcall
mov
ror
mov
fisubl
in
jge
xor
and
and
mov
push
shrb
fmuls
inc
test
xor
xor
int
gs
repnz
and
fmull
pop
push
testb
ja
and
not
and
sbb
add
add
add
cs
fsubr
rolb
call
shll
xor
push
lcall
rol
shll
xor
add
push
xor
push
cs
fcomp
loopne
imul
xchg
add
cmp
and
fwait
push
cmp
data16
add
repnz
les
pusha
push
and
mov
aaa
fadd
cmpsb
loopne
xorl
fwait
call
imul
call
rorl
cmp
pop
cmp
aam
lock
jns
pop
aaa
mov
out
mov
or
xor
and
out
lock
iret
or
sbbl
xor
add
inc
addl
aas
fdivs
ret
add
push
ret
push
jo
call
adc
or
sarb
or
push
into
aam
filds
inc
jne
and
je
mov
sbb
mov
dec
fadds
pop
fs
js
call
or
ret
lret
push
clc
jl
jno
shll
and
add
and
add
shrl
inc
fs
adc
xor
in
gs
lret
rol
inc
aam
mov
test
or
adc
mov
aam
cmp
cmpsb
imul
xchg
inc
mov
add
mov
shl
rolb
dec
cmp
or
push
lcall
rorb
lcall
adcb
and
dec
stos
imul
inc
push
and
dec
scas
dec
cs
int3
dec
push
movsb
cltd
add
xor
adc
gs
push
cwtl
addb
pop
mov
and
int
leave
push
push
pop
sbb
xor
cmp
fcoms
ret
test
push
add
cmpsl
mov
and
scas
inc
or
add
pop
fcompl
pop
test
lret
adc
inc
pusha
loopne
push
mov
push
clc
ret
or
mov
imul
jnp
xchg
or
push
adc
imul
stc
adc
and
stc
stc
mov
int3
and
ret
mov
fildl
insb
jb
cmpsb
imul
adc
push
call
and
ficomps
and
push
add
inc
rorb
dec
add
outsl
popa
xor
shrl
mov
cs
test
testb
cmp
jb
cmc
jb
aaa
sub
sbb
mov
sub
pop
xor
push
addl
push
adc
pop
mov
or
rol
and
call
jne
add
test
loop
jae
stos
or
sub
mov
sub
loopne
aas
push
je
lea
jmp
jl
sub
adc
loopne
sub
pop
mov
pop
ret
fimull
pop
jne
pop
cmp
std
stos
and
mov
push
sahf
idivb
or
enter
clc
aaa
jbe
or
push
pop
and
in
adc
cmp
inc
add
jae
sbb
pop
rolb
rep
fimuls
jbe
outsl
jbe
movsb
xchg
sbb
lret
fs
lock
ror
mov
hlt
push
shr
je
and
xchg
fistps
pop
cmp
dec
mov
lcall
outsl
sbb
movb
adc
orl
test
and
test
movl
inc
fdivrl
outsb
sub
add
les
inc
jge
pop
xchg
fwait
es
loop
outsl
sbb
pop
xor
pop
xchg
pop
mov
push
or
mull
cmp
ja
inc
stos
mov
add
cmp
sub
mov
sbb
imul
or
pop
fs
or
and
ret
sbb
add
cmp
push
xorb
jnp,pn
jle
and
mov
push
adc
ret
add
xor
or
test
mov
mov
inc
adc
push
fadds
stos
xchg
pop
arpl
outsb
cmc
out
or
mov
repz
clc
ret
pop
or
pop
in
adc
or
dec
adc
adc
mov
mov
sbb
xor
sbb
sbb
add
dec
jb
and
fldl
adc
jae
mov
jmp
mov
cmp
sbb
adc
dec
sbb
mov
cltd
nop
sbb
daa
push
add
ret
pop
and
lods
nop
lret
xchg
ja
add
mov
sbb
sub
and
and
dec
xchg
mov
add
inc
jne
rorl
cmp
adc
pop
adcl
mov
icebp
mov
loope
cmp
jl
popl
sub
pop
xor
fcom
pop
xor
std
jle
fidivrl
xor
jbe
cli
es
lea
cmp
popa
sti
inc
or
jg
and
or
js
add
sub
or
or
jne
adc
inc
push
aad
lods
das
jp
or
xor
cmpb
stos
jbe
jle
outsl
or
icebp
jl
dec
pushf
sahf
cmp
push
js
sarb
xchg
mov
mov
pusha
and
push
dec
daa
lods
test
stos
inc
ret
jae
movzbl
adc
mov
and
add
inc
js
inc
das
mov
dec
jmp
dec
adc
push
aam
fcomps
add
ss
push
mov
popl
ret
mov
les
inc
and
inc
shll
sbb
sub
xchg
jo
lods
cmp
pop
hlt
lahf
cltd
ja
mov
cmp
test
loopne
sub
mov
sub
mov
clc
push
ret
dec
and
cwtl
inc
bound
xor
xchg
mov
pop
or
add
and
add
and
add
pop
or
outsl
fs
js
jne
adc
push
fsubs
mov
cmc
mulb
psubsb
pop
push
sub
aam
mov
mov
dec
sti
bound
adc
inc
cmpsl
mov
mov
xor
push
dec
dec
sbb
pop
and
popa
xor
and
fiaddl
add
xchg
add
add
fmuls
mov
mov
roll
bound
je
outsl
out
cld
xor
add
sbb
cltd
lock
enter
mov
rolb
or
or
les
adc
mov
add
mov
incb
sbb
add
dec
sub
enter
incl
pop
popa
and
pop
fstpt
dec
and
push
lods
add
jge
push
fsubrl
pop
ja
mov
add
ljmp
push
jmp
outsl
adc
jmp
jle
push
dec
pop
jne
ret
dec
pop
pop
test
idivb
and
loopne
cmpl
daa
push
pop
stos
mov
pop
pop
testl
mov
fstpt
arpl
fnstenv
push
sbb
lret
and
ds
push
sub
sbb
xchg
fwait
push
or
imul
mov
sbb
sub
mov
or
aas
or
inc
push
push
ds
push
push
adc
push
aam
mov
test
add
cmp
outsb
push
ret
inc
rcrb
push
repz
out
mov
lock
inc
call
hlt
xchg
inc
dec
inc
mov
shlb
adc
sub
cmp
push
cmp
dec
leave
dec
add
mov
xor
xor
rorb
sub
dec
xorl
dec
inc
dec
cli
push
xchg
sub
push
jno
push
stc
ret
lea
ss
fwait
dec
adc
scas
unpckhps
call
jnp
pop
mov
push
imul
dec
or
test
jae
aad
daa
lods
mov
sbb
sub
sbb
scas
xor
dec
inc
dec
cmp
imul
dec
stos
mov
push
cmp
and
mov
test
cmp
sbb
cmp
adc
mov
sub
imul
xor
shll
cmp
inc
cwtl
je
pop
inc
pop
inc
inc
rorl
pop
or
imul
sub
stc
push
pop
mov
and
loope
jo
add
adc
test
iret
add
cmp
fnstenv
add
lret
shll
ret
sub
dec
mov
pop
fnsave
shrl
push
mov
or
or
cltd
jae
clc
jo
cld
cmpl
push
cmpsl
mov
dec
adc
inc
and
loop
cwtl
lds
xchg
movsl
sahf
les
xorl
add
push
and
jb
and
push
xchg
es
adc
sbb
sbb
mov
data16
enter
adc
shlb
mov
lock
or
fld1
sub
mov
fimull
push
hlt
ss
cmp
push
jbe
xor
xchg
dec
sub
ljmp
ret
cmp
ss
testb
mov
adc
lcall
and
cmpsb
or
push
ja
adc
sub
in
jae
or
cwtl
outsb
sbb
fwait
adc
xor
xchg
pop
jnp
sbbb
push
scas
stos
mov
adc
sub
cmp
xorl
call
addl
inc
sbb
ds
rorl
pop
and
xchg
notl
sub
or
ds
shlb
cmpsb
lds
mov
and
or
xor
mov
or
mov
pop
adc
movd
icebp
mov
push
xor
bound
dec
cmp
insb
insb
pop
mov
inc
push
in
imul
bound
push
inc
imul
and
mov
push
nop
dec
xor
dec
scas
fs
mov
inc
ss
jbe
mov
xchg
cmc
push
push
push
push
or
mov
sub
sub
and
jg
mov
inc
dec
mov
fidivs
fsubrs
xchg
pushf
sbb
cmp
push
sub
jb
test
pop
shll
pop
pop
lea
cwtl
adc
or
in
push
push
inc
cmp
loopne
and
pop
or
sbb
jmp
fisubl
lods
fcomps
cs
and
and
sbb
mov
sbb
adc
jmp
int
loope
xchg
cmp
fistpl
cmp
leave
leave
sbb
cwtl
cltd
xor
movb
dec
mov
ret
insb
aad
inc
push
cltd
or
jnp
daa
xlat
out
mov
out
adc
mov
or
jle
int
es
adc
mov
popf
insb
imul
mov
mov
rcr
pop
mov
adc
push
movsb
lock
and
push
adc
decl
sbb
jne
xchg
adc
push
fstl
sti
push
or
and
cld
mov
addr16
dec
dec
sbb
sbb
fistpl
js
mov
pop
or
jmp
pop
sar
xor
dec
pop
cmp
je
cmp
add
xchg
push
push
inc
cltd
cmpsb
lret
push
mov
fdivrl
mov
push
sub
xchg
cwtl
sbb
inc
sub
ds
xchg
inc
dec
mov
mov
scas
decb
scas
sub
add
add
mov
mov
jp
or
aam
inc
fstpl
loope
pop
shll
nop
adc
jns
and
adcl
and
fidivrs
or
or
add
lods
test
cmp
cs
arpl
mov
ret
xchg
les
pop
mov
xchg
repnz
popa
aam
sub
add
cmp
xchg
rolb
andb
push
loop
push
xchg
mov
insl
push
or
filds
or
or
hlt
adc
pop
repnz
push
inc
pusha
cmp
pop
cmp
dec
add
inc
sbb
dec
inc
push
les
cmp
sbb
sub
mov
lea
daa
mov
pop
cmp
jg
test
out
sub
push
cmp
jge
mov
inc
add
bound
ds
lock
lea
jae
sqrtps
add
inc
push
jecxz
shlb
inc
xchg
or
lock
clc
clc
cld
loope
add
mov
or
add
and
and
add
cmpsb
push
mov
push
and
sbb
xor
dec
je
add
decl
adc
cmp
dec
or
mov
shr
sbb
decl
mov
mov
or
mov
sub
mov
push
mov
lds
sahf
and
jb
mov
sub
mov
or
mov
or
je
push
add
leave
mov
out
loop
push
xor
outsl
mov
repnz
add
add
jmp
sub
in
add
push
add
add
je
cmp
jne
sbb
adc
mov
pushf
cmp
or
dec
roll
xor
add
sub
or
outsl
clc
xor
inc
adc
inc
jmp
mov
or
cltd
idiv
inc
inc
mov
or
ljmp
add
mov
mov
jp
xchg
push
jo
push
cmc
je
mov
add
or
cmp
mov
stc
push
or
lcall
and
adc
push
cmpsl
mov
cmp
cmp
je
cmpsl
xor
fnsave
inc
test
jmp
daa
pop
cli
js
xor
rolb
in
clc
jae
dec
adcl
mov
outsb
gs
jae
call
lods
jmp
mov
xor
sub
jle
in
arpl
cmp
je
cmp
push
mov
je
cmp
jne
inc
jne
and
push
mov
flds
or
push
pop
inc
mov
xlat
adcb
pusha
jb
mov
je
ret
fldenv
and
test
add
xor
cmp
loop
cmp
push
dec
stos
test
cmp
add
pop
andb
shrb
push
lods
or
adc
push
xorl
mov
jp
jl
sti
sub
push
mov
jmp
and
out
xchg
push
jmp
inc
jl
inc
jg
mov
jp
add
shl
dec
mov
sub
mov
enter
mov
mov
rol
jg
repnz
int
imul
and
and
sub
loop
push
rcrl
or
adc
add
out
mov
jle
and
dec
pop
lods
push
pushl
insl
push
mov
inc
cmp
pusha
mov
jg
fcomi
ret
push
push
fs
imul
mov
out
mov
roll
dec
jl
xor
aaa
lcall
iret
orb
cwtl
xchg
popa
adc
aaa
mov
lods
aad
daa
jge
add
das
fimuls
lods
mov
and
cmp
dec
movl
add
ja
adc
cmp
mov
inc
inc
push
out
jmp
xor
inc
adc
mov
movsl
dec
fs
sbb
push
mov
addb
pop
mov
pop
fsubr
mov
cs
push
shrb
dec
cmp
cmp
int3
or
cwtl
mov
cli
inc
lret
fwait
je
add
or
orb
and
cmpsb
pcmpeqb
adc
and
mov
mov
push
clc
out
push
je
ljmp
add
jne
pop
adc
adc
cld
imul
bound
inc
mov
iret
push
push
add
in
imul
je
xor
sub
or
shll
movsb
fsts
test
adc
adc
xchg
xlat
ret
in
push
pop
xor
subl
dec
adc
xor
mov
imul
lret
mov
aaa
mov
sahf
mov
andb
cwtl
xchg
push
dec
cmp
adc
insb
sbb
mov
push
lock
sub
jge
jne
mov
sub
sbb
test
sub
rcll
add
and
mov
movsl
push
xor
pop
es
inc
inc
add
xchg
je
loopne
mov
sub
sub
mov
add
cmp
shrb
and
mov
mov
mov
test
jp
pop
inc
imul
mov
andb
icebp
adc
out
jmp
push
rolb
mov
rorl
inc
out
sahf
sbb
dec
adc
stos
xchg
rorl
iret
dec
mov
dec
sbb
sarl
sbb
jl
ret
jb
or
xor
rorb
cmp
enter
dec
or
and
daa
pop
jne
push
movb
xor
and
hlt
mov
sarl
push
cwtl
jge
inc
incl
cmp
push
andb
pop
xor
cmp
andl
adc
rcrb
daa
push
mov
sub
ficompl
cmp
mov
pop
adc
imul
out
cmp
sahf
xchg
and
pusha
add
xor
or
insl
xor
mov
cs
je
xor
lahf
mov
popf
and
mov
jmp
movsb
sub
leave
enter
or
movb
jbe
push
fs
push
inc
cmp
jmp
mov
add
cmpb
jne
mov
fincstp
mov
pop
ret
mov
data16
push
jne
xor
leave
adc
sbb
dec
ret
sbb
mov
push
sub
lods
sub
xor
cs
rcrl
mov
dec
sub
mov
push
xchg
subl
jb
push
mov
loope
add
es
push
out
fs
adcl
inc
add
adc
inc
lock
xor
adc
ja
int3
rorb
std
pop
repnz
jp
addl
lret
pop
adc
call
shll
push
ja
les
jnp
adc
mov
mov
push
pop
fnstsw
mov
dec
dec
and
mov
or
cmp
shrb
adc
pop
push
nopl
inc
test
jb
mov
xor
rclb
pop
in
popa
ret
inc
insb
je,pt
inc
add
push
xchg
push
push
scas
shll
sbb
sarb
rcrb
lods
addl
sub
push
pop
cmp
xchg
pop
bound
fisttps
mov
imul
mov
lock
clc
push
push
jbe
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
sbb
fwait
pop
fists
das
aam
in
ror
sahf
sub
xchg
pop
mov
lock
orb
cli
xchg
sub
rolb
push
ror
shr
sbb
loop
inc
push
sub
andl
fidivrl
dec
mov
mov
sub
push
sbbb
mov
add
pop
inc
or
into
jmp
aam
rcll
push
push
test
leave
add
sahf
lret
pop
mov
lods
bound
inc
outsl
rcll
or
mov
xor
in
std
cmp
lcall
xor
shr
cmp
aas
push
dec
ljmp
imul
inc
cmp
je
ret
scas
test
push
adc
sbb
or
sbb
mov
and
add
sub
mov
xchg
and
ljmp
mov
mov
mov
dec
jne
and
nop
sbb
xor
mov
cmc
dec
adc
addr16
adc
in
push
daa
sbb
pop
or
cmp
add
sti
xor
push
scas
push
inc
pop
add
push
adcl
jg
fsubl
mov
add
add
jmp
add
inc
xchg
scas
mov
push
mov
push
outsl
push
push
jecxz
or
daa
jmp
push
fbld
or
arpl
or
xor
xchg
mov
ljmp
jne
fimuls
push
add
mull
add
or
add
adc
xor
loop
iret
test
out
add
xorl
mov
jns
add
mov
lahf
fdivl
dec
pop
xchg
fnstenv
daa
inc
or
jl
xor
or
and
dec
add
pusha
or
add
push
bound
xor
movsl
xor
enter
sbb
movb
jge
xchg
add
into
je
mov
pop
add
enter
pop
jmp
jno
jb
xor
sbb
jo
divb
sbb
pop
mov
pop
mov
add
popa
loopne
lret
push
stos
andb
lcall
sbb
insb
pop
fmull
in
movsl
imul
lock
jnp
andb
ret
addr16
ret
add
mov
ds
jle
dec
inc
ss
lcall
sbb
les
into
or
popf
fcomps
add
inc
sub
sbb
or
adc
lods
into
subl
mov
les
and
in
pop
jo
popa
dec
outsl
xor
lahf
inc
sbb
mov
inc
fs
push
rclb
sub
popa
pushf
cmp
push
push
dec
pop
inc
dec
xor
pop
pop
daa
scas
lea
rolb
jns
in
sub
into
xor
pop
test
sbb
mov
push
loop
push
cmc
hlt
test
bound
mov
sub
mov
and
shl
push
mov
mov
cmp
xchg
or
fists
pusha
or
xor
fmuls
or
pop
or
fwait
fs
je
pushf
sub
movsb
xchg
movsb
push
adc
outsb
push
out
mov
cs
call
adc
imul
cwtl
lock
dec
adc
push
mov
test
push
hlt
lea
out
sub
push
xchg
or
sub
pop
loopne
or
dec
mov
mov
ret
mov
push
or
inc
add
stos
xor
and
in
es
stc
lar
mov
sub
fwait
xchg
inc
inc
xchg
test
mov
scas
pop
add
cmp
add
mov
fiaddl
xorb
push
jo
sbbb
and
mov
stc
push
push
popa
jns
mov
repz
add
xchg
insl
rorb
xor
jbe
mov
inc
sbbb
nop
xchg
cmp
shlb
mov
rcrl
add
lods
std
out
push
jmp
sbbl
test
fbstp
sub
inc
add
mov
movb
jge
es
cwtl
cmp
stos
add
dec
xor
add
inc
push
sarl
cmp
adc
es
push
enter
sub
fists
jmp
pop
nop
mov
add
mov
mov
mov
cmp
insb
shrl
mov
jo
inc
jg
xor
cmpsb
cmp
incb
jge
das
pop
push
ret
outsl
mov
xor
or
sti
aas
jecxz
pusha
cmp
dec
les
daa
lods
and
push
jne
popa
sbbb
or
and
cmpsb
mov
dec
xor
test
fistpl
cmp
filds
das
and
ficompl
pusha
add
inc
adc
xor
push
or
fistl
sbb
scas
fs
cs
push
xor
adc
popa
je
adc
mov
decb
daa
jo
dec
insb
mov
movl
outsl
jo
dec
push
jns
add
or
mov
gs
andl
add
bound
adc
rorl
xchg
pop
test
cmp
fwait
or
adc
inc
or
sbb
sub
sub
jge
subl
dec
or
aas
dec
adc
push
mov
js
and
adc
xchg
mov
popf
adc
mov
sbb
lock
cmp
rcll
dec
aas
dec
inc
and
sbb
ja
sbb
lea
aad
inc
test
jl
sbb
mov
push
and
loopne
mov
cmp
sub
rorl
outsl
pop
push
jae
push
sahf
pop
lods
mov
mov
jne
into
sbb
mov
add
push
ret
orl
lock
ds
xlat
sbb
push
lcall
jmp
jmp
mov
push
dec
adc
sarb
dec
mov
nop
xlat
adc
ss
pusha
sbb
adc
leave
add
in
add
test
add
mov
jmp
dec
fs
loopne
out
in
add
jle
cmp
adc
rorb
add
jl
and
aaa
je
inc
sub
loopne
xlat
dec
dec
sarb
movb
mov
dec
adc
movsl
scas
shlb
sub
aas
inc
jo
das
jl
jp
pop
clc
sbb
sub
cmp
or
jbe
xor
push
repz
insl
push
push
pop
addb
sub
cmpl
mov
push
cmp
pop
mov
mov
bnd
xchg
or
iret
loopne
mov
xchg
pop
pop
push
hlt
push
push
mov
push
push
inc
into
adc
pop
add
loopne
sub
ret
lret
test
xlat
xchg
loopne
push
mov
sbb
ret
mov
je
jp
and
mov
push
sub
mov
ss
dec
dec
rolb
mov
shl
xorb
add
leave
data16
lds
fs
dec
sbb
in
out
xor
sub
add
fisttps
jmp
inc
ret
and
or
jl
mov
and
add
inc
jp
sahf
into
shr
push
sbb
mul
mov
shrb
sbb
shll
popf
cmp
ja
scas
jo
shlb
cwtl
lret
ret
fildll
or
sbb
lods
xchg
xor
fdivl
bound
outsb
sbb
shrl
mov
and
sub
divl
mov
cltd
adc
or
cli
jmp
inc
ja
mov
fwait
or
lods
lds
mov
add
lcall
add
ljmp
sahf
adc
lock
xchg
mov
push
adc
mov
jae
loopne
faddl
fadd
jg
gs
addr16
and
push
xchg
scas
sbb
xor
mov
fisttpl
sub
lock
sub
inc
dec
xchg
daa
push
call
movsb
pusha
and
loop
push
xor
cmp
lea
int3
inc
push
jbe
or
cmpsl
fs
repz
rol
and
rorl
or
je
sub
xor
lret
rclb
push
push
lea
xchg
das
sub
push
divb
subl
or
cmp
dec
or
mov
add
and
movsl
pop
cmp
add
pop
lcall
in
call
add
adc
push
inc
jmp
or
js
rcrb
les
or
pop
dec
push
and
shlb
mov
clc
imull
and
daa
adc
inc
pop
subl
adc
sar
dec
test
xor
out
or
or
imulb
cld
sbb
add
cmpb
sub
push
mov
jb
and
jno
push
or
dec
or
adc
cwtl
add
les
cmp
add
in
nop
inc
inc
adc
je,pt
push
mov
mov
jbe
mov
fisubs
out
fidivl
mov
nop
or
jle
adc
aaa
ds
jg
ljmp
ret
jb
ss
sub
lock
mov
out
dec
lret
inc
inc
ja
mov
sub
inc
loopne
imul
orl
popa
dec
fs
shlb
leave
pop
sbb
push
inc
mov
mov
or
leave
inc
int
xchg
or
and
jmp
cmpsb
add
loopne
inc
cmp
test
xchg
inc
mov
cmp
sbb
lret
push
popf
fadds
push
lods
jl
jmp
das
addl
and
push
xlat
add
adc
lcall
mov
or
xor
pop
inc
mov
lods
jbe
inc
inc
adc
cli
cs
dec
sub
in
filds
test
hlt
xor
arpl
outsb
dec
insb
xchg
or
cld
xchg
push
cmp
inc
das
lock
xor
jne
mov
sub
mov
ficompl
subb
scas
push
cld
or
inc
jo
ljmp
add
out
add
fdivrl
lea
push
and
shlb
adc
push
bound
xor
gs
aad
rcrb
sub
add
sub
xor
aad
es
call
call
and
cmp
jne
push
jle
cli
push
mov
xor
sbb
pop
jg
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
mov
inc
push
xor
pop
div
hlt
add
lea
mov
sbb
inc
mov
lock
addr16
xchg
xor
push
dec
adcb
sbb
inc
cli
push
cmp
mov
pop
add
push
arpl
adc
in
negl
and
jmp
pop
jp
adc
in
cmc
popa
jo
ja
dec
imul
rcr
andl
gs
loopne
pushf
outsl
in
fildl
lods
xor
loop
rolb
ret
or
rorb
loopne
je
pop
int
adc
lcall
inc
xchg
cmp
push
mov
je
adc
sub
sub
jne
bound
adc
out
adc
dec
add
popa
fwait
pop
cmp
jp
clc
int3
add
dec
push
push
ficomps
xchg
inc
or
pop
adc
dec
jge
push
cmpl
clc
mov
mov
pop
dec
cmp
jb
neg
xchg
rorl
fistpll
jne
mov
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
insb
loop
gs
call
push
ret
mov
dec
jl
mov
rorl
ss
or
sbb
push
out
push
jne
sub
repz
xor
lea
test
sub
rorl
and
sub
lods
or
add
jno
fmuls
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
xor
and
clc
jg
fs
int
jnp
pusha
jmp
jle
movapd
sar
push
enter
shlb
jle
adc
outsb
xor
cli
rcl
lret
sti
push
fs
je
cmp
and
lret
or
aaa
xchg
ljmp
pop
mov
cmc
and
in
add
mov
aam
call
adc
or
clc
adc
sbb
ficomps
xchg
repnz
imul
mov
mov
pop
sti
roll
shl
pop
enter
inc
push
ds
fisubl
loopne
push
dec
sbb
inc
pop
pop
pop
test
pushf
push
mov
xchg
cld
in
in
movsb
dec
and
orb
outsl
clc
add
rolb
pop
add
add
cmpsb
xor
std
xorl
test
mov
lret
or
jmp
jb
mov
rol
std
sbb
lcall
test
mov
lods
push
add
lds
sbb
push
push
inc
dec
pusha
mov
loope
stos
sahf
adc
push
popa
inc
pusha
cmpsl
lods
push
and
jmp
push
sbb
insl
or
lods
std
mov
push
sub
out
les
lock
ja
mov
jbe
sarl
sbb
adc
jne
loope
sti
pop
inc
cmpb
out
addb
stos
sub
dec
adc
add
int3
or
adc
xor
cmpb
fadd
daa
lcall
dec
push
gs
pop
scas
dec
cwtl
inc
sbb
jmp
xor
loop
mov
cwtl
loope
xor
outsb
xchg
cwtl
imul
jo
xor
js
enter
xor
push
dec
cwtl
mov
dec
ficompl
xlat
xor
nop
or
push
dec
sbb
in
add
adc
xchg
push
roll
jns,pn
or
pop
jmp
mov
cmp
jne
pop
sbb
inc
jb
cmp
mov
movb
mov
les
cli
pushf
pop
addr16
sbb
sbb
sbb
mov
or
pop
test
xor
enter
daa
cs
or
lods
mul
out
mov
xchg
dec
jmp
call
dec
flds
pop
cmp
adc
mov
pand
out
faddp
mov
add
mov
jne
orl
stc
inc
cld
add
jmp
push
and
xor
sub
out
loope
push
and
add
and
int3
testl
pop
sarl
pop
or
lcall
ss
cmp
int3
test
sbb
icebp
cmp
cmp
cli
adc
dec
adc
popf
insb
push
adc
inc
sub
fdivrl
bound
or
xchg
pushf
test
movsl
shrb
sub
in
rolb
add
aas
lretw
shlb
jl
inc
push
fs
pop
pop
adc
pop
movsl
sti
mov
insl
jle
or
enter
add
cld
add
xchg
inc
mov
push
cmp
icebp
pop
clc
jne
xchg
adc
orb
add
popa
shr
xor
loop
icebp
mov
push
rcl
add
pusha
cmp
cs
mov
das
sub
pop
mov
pop
cwtl
mov
pop
cwtl
xlat
mov
inc
sbb
mov
hlt
lahf
bound
addl
in
add
stos
jo
hlt
and
cmp
imul
pop
out
testb
je
inc
mov
cmp
mov
cld
in
leave
es
loope
or
cmp
jne
dec
jmp
outsb
test
jb
xor
xor
je
std
mov
jne
inc
aaa
push
lds
mov
call
loope
ror
sbb
push
mov
cmp
pop
rcr
roll
rorl
add
test
test
sub
or
add
sub
add
cmp
sbb
dec
inc
or
fiadds
sahf
xor
pop
and
inc
dec
add
dec
pop
pop
jne
fldenv
rorl
pop
adc
push
scas
add
incl
rep
jmp
mov
push
jb
mov
mov
test
lea
push
aam
clc
cmp
sbb
or
mov
shrl
pop
sub
lods
push
repnz
mov
xchg
stc
rclb
add
fldenv
nop
inc
xor
xchg
out
add
push
sbb
repz
adc
add
gs
mov
repz
mov
push
call
cmp
repz
hlt
clc
je
cmp
clc
cld
loopne
push
ret
lock
fs
add
sbb
jmp
pop
push
fs
mov
or
nop
inc
pop
sti
ret
pusha
sbb
and
loop
mov
lea
jl
cld
pop
and
jl
daa
or
fsubl
fsts
lea
xchg
xchg
sub
pop
nop
lock
shr
adc
fiaddl
jl
mov
mov
mov
add
aaa
adc
mov
push
nop
dec
dec
addr16
mov
or
ficoms
iret
repz
push
mov
mov
addr16
sbb
iret
repz
sbb
adc
adc
cmp
repz
or
or
inc
in
or
push
and
icebp
push
add
sbb
add
lds
add
lar
cltd
dec
jp
jmp
or
stos
jae
das
jmp
inc
imul
pushf
xor
lock
or
jno
or
mov
dec
ss
cmp
jae
sub
xorb
flds
mov
jp
adc
mov
sbb
or
sbbb
pop
push
movsl
orb
adc
xor
pop
cmp
popa
lds
lea
ret
pop
fists
js
mov
push
sbb
int
and
mov
inc
test
xor
lds
pop
movsb
inc
adc
lret
add
inc
call
dec
push
mov
movsl
pop
push
sbb
and
enter
dec
add
pop
punpckhbw
or
movsl
inc
or
test
mov
aam
cltd
pop
insl
jb
xchg
and
test
dec
test
add
jecxz
pop
lret
sbb
add
adc
pop
adc
dec
js
or
jle
mov
push
arpl
fildl
dec
push
jbe
sub
outsl
aaa
loope
inc
aaa
jle
cmp
pushf
mov
cmp
into
popa
pop
sbb
push
cmp
add
jmp
sub
jnp
cmpsb
cmp
jne
push
adc
or
and
out
ds
mov
and
test
jle
xor
pop
in
dec
cmp
sub
scas
adc
adc
sub
push
and
adc
xor
and
clc
adc
pop
pusha
inc
jp
sti
addb
mov
fstpl
pop
ljmp
pop
add
aaa
fadds
jbe
mov
enter
call
jmp
xor
xchg
in
pop
push
lret
divl
dec
pop
mov
adc
xchg
icebp
loop
lret
loopne
xor
fadd
dec
sbb
shl
out
push
ss
adc
dec
mov
or
fnsave
or
insb
and
inc
insl
pusha
xchg
xor
jbe
add
xchg
aad
mov
add
sub
push
jl
loope
cmp
jne
pop
in
inc
loop
lea
mov
or
push
push
and
out
mov
int3
pop
mov
or
shrb
cwtl
push
loop
pop
call
out
jmp
sarb
std
mov
push
or
out
int
or
jl
and
xlat
push
push
push
lock
pop
js
push
ljmp
in
mov
out
adc
adc
jmp
push
sub
aam
mov
jecxz
cmp
adc
ds
lea
lds
or
pop
aaa
sub
mov
fs
pop
xor
mov
ja
add
xchg
lret
mov
sub
in
aaa
mov
pop
jbe
lea
adc
or
xor
jl
adc
loop
push
sbb
jbe
sbb
cld
jb
cmc
fmull
clc
jbe
add
mov
and
loop
clc
es
inc
add
jo
add
jo
cli
lret
jmp
test
jne
test
pop
add
loopne
rolb
adcl
push
jnp
divb
dec
out
mov
mov
pushf
pop
jmp
add
imul
cmp
es
mov
xor
xchg
in
cmp
add
add
add
jns
jecxz
push
fisubrl
addr16
mov
lea
ret
rcrb
pusha
aam
cmp
add
cs
xor
rcrb
push
add
push
sub
adc
pusha
scas
pop
and
and
movsl
inc
jmp
ds
sbb
mov
sbb
push
addb
insl
xchg
roll
inc
sub
sbb
add
outsb
xor
lock
push
sbb
xor
inc
dec
push
rolb
repz
sbb
test
shl
orb
cwtl
rcr
or
pop
add
add
cmp
rolb
jno
out
adc
leave
pop
enter
push
sti
ret
cltd
rclb
push
test
inc
mov
in
rcl
icebp
xor
dec
sbb
mov
inc
jbe
bswap
repnz
add
das
inc
cmp
cs
dec
jne
jmp
or
ds
ja
nop
dec
adc
dec
cmpsb
dec
jne
addb
dec
cmp
mov
sahf
xchg
cmp
push
orb
mov
sti
mov
ror
es
adc
or
dec
js
insb
bound
call
lea
push
outsb
into
pusha
add
inc
pop
es
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
mov
mov
dec
mov
push
inc
incl
dec
mov
adc
jmp
std
push
int
std
mov
jmp
fldt
jmp
nop
adc
adc
inc
inc
inc
push
xor
icebp
mov
or
repnz
xchg
jle
icebp
cwtl
mov
lret
mov
aaa
rorb
xchg
aam
subb
pusha
sub
and
scas
mov
test
popa
jns
pusha
or
sub
bound
inc
cmp
movl
mov
enter
std
andl
xchg
adcl
pop
pop
jns
adc
pop
fs
add
mov
sub
shlb
pop
add
xlat
push
mov
mov
jne
sbb
add
pop
imul
jg
add
mov
popf
push
or
pushl
mov
mov
inc
in
push
incb
pop
call
push
push
dec
call
hlt
and
mov
ja
jae
out
jmp
mov
push
jle
addl
inc
add
mov
add
push
and
mov
call
pop
aaa
adc
pop
orb
add
arpl
pop
xor
push
pusha
pop
pop
add
and
jecxz
jne,pn
cmp
enter
call
scas
inc
xchg
mov
push
xchg
push
xchg
test
xor
push
lcall
push
rcrb
popa
mov
fld
push
mov
adc
add
push
and
inc
fndisi(8087
ljmp
clc
or
lea
data16
or
fdivs
fists
insb
lcall
daa
fmuls
lock
and
sub
mov
sub
pop
outsb
cmp
pop
sbb
jecxz
sbb
adcl
cmp
and
loopne,pn
lock
xchg
jl
rorb
and
cmpsb
push
int
insb
pop
mov
push
inc
lcall
lock
stc
and
mov
inc
je
mov
outsl
mov
lea
neg
mov
sbb
or
or
std
add
add
xor
pusha
repz
xchg
loope
sbb
scas
sbb
mov
mov
add
mov
inc
cmp
jb
jo
adcl
jae
shrb
mov
add
gs
andl
jo
mov
or
ret
mov
or
iret
mov
sub
or
popf
sbb
adc
mov
mov
push
divl
lret
dec
stc
addl
std
or
iret
xor
jo
and
ljmp
add
das
rcr
out
jne
xchg
inc
ret
cld
inc
cld
add
je
ss
cmp
je
out
inc
push
xor
fisubl
faddl
aam
xchg
pop
addr16
dec
sbb
aam
or
xchg
dec
or
add
pop
js
mov
div
add
in
jno
pop
sub
imul
adc
mov
jl
and
lret
ror
mov
add
pop
pop
pop
pop
pop
cwtl
or
mov
pop
cmp
xchg
xor
inc
pop
mov
inc
jmp
cmp
jecxz
outsl
fwait
sbb
jmp
adc
jne
sub
jp
cmp
xlat
hlt
mov
adc
cmp
cld
push
xor
ss
js
or
out
push
scas
and
adc
adc
pop
sbb
repz
add
push
mov
mov
cmpb
and
je
icebp
je
pop
lret
sbb
mov
aas
pusha
je
lea
sbb
adc
pop
lea
lock
test
or
sbb
sub
add
mov
cmp
nop
jo
movsb
and
movsb
mov
rclb
push
adc
shrl
test
mov
cltd
lea
sbb
inc
mov
xchg
sbb
mov
mov
pop
and
push
js
mov
cmp
orb
push
js
daa
pop
ljmp
pop
push
sub
and
bound
adc
subl
jmp
aaa
jne
mov
cmp
mov
or
adc
mov
dec
jne
fs
add
or
addb
adc
add
sub
insb
movsb
aas
orb
mov
cltd
in
pmovmskb
push
push
sub
push
xchg
popa
push
inc
adc
mov
xchg
or
cmp
adc
es
dec
or
push
popf
jns
jge
push
and
jmp
sbb
je
insb
sbb
xor
add
cmpsl
test
push
cmp
jbe
and
imul
adc
lret
jno
add
sub
add
nop
mov
adc
insb
filds
jb
lea
push
adc
or
in
dec
ss
adc
repnz
enter
push
jle
test
movsb
jnp
mov
insb
in
es
mov
cld
push
pushf
mov
les
lret
mov
inc
push
adc
jne
or
add
ss
jno
adc
adc
or
mov
jmp
dec
dec
dec
sbb
cmpb
imul
add
in
in
pop
nop
sub
xor
sub
dec
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
cli
mov
rolb
or
sub
mov
or
stos
push
sub
or
or
nop
clc
inc
hlt
add
insl
movsl
cmpsb
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
daa
fidivs
fcomps
je
adc
or
gs
jnp
dec
rcrb
cmp
adc
rcr
data16
ljmp
adc
push
jmp
xor
or
cmp
jle
mov
les
ja
paddsb
pop
or
mov
call
or
push
push
adc
rcrb
xchg
push
jge
adc
pusha
pop
dec
rolb
sub
in
inc
call
int
loopne
inc
imul
in
out
lods
adc
sbb
insb
push
data16
pop
addl
filds
xor
or
jne
pop
xlat
xor
dec
push
jo
pcmpeqd
jge,pn
out
out
cltd
pop
idiv
decl
mov
xor
mov
pop
and
movsl
ljmp
xor
inc
xorb
rol
imul
mov
shrl
inc
aad
adc
cmp
cltd
mov
add
rclb
aam
mov
push
xchg
xchg
mov
add
xchg
adc
in
nop
jp
push
add
fwait
js
cli
push
in
sbb
fdivp
or
adc
or
repnz
add
or
xlat
ficoms
test
test
xchg
loopne
mov
js
and
add
js
stos
rcl
push
cmpl
notl
in
mov
mov
ret
and
lods
jne
orl
jecxz
jno
mov
cmp
stos
inc
cmp
repnz
iret
int
add
je
sahf
mov
faddl
mul
add
outsb
clc
fs
ret
sbb
adc
jmp
popf
inc
je
adc
or
xchg
sbb
popa
ficoml
or
jbe
jle
mov
dec
je
add
or
ja
fimuls
bound
in
lods
mov
add
jmp
sub
or
push
jecxz
inc
and
out
es
add
push
pop
cld
mov
ljmp
test
jge
les
adc
arpl
push
inc
xchg
lcall
push
push
addr16
jne
mov
push
sbb
push
addr16
add
dec
mov
xchg
inc
jne
jmp
xchg
fs
loopne
mov
jbe
and
stc
mov
xchg
add
cmovp
in
jns
mov
mov
or
mov
push
or
pop
sbb
addb
push
loop
pop
aas
iret
or
js
jbe
mov
add
ja
out
pop
shl
das
cvtps2pd
add
dec
jno
jae
push
jmp
sub
push
dec
mov
mov
add
fdivl
mov
adc
fmuls
inc
push
push
add
add
cmp
mov
imul
or
orb
xorb
jo
aas
cmp
jae
aad
add
in
mov
push
mov
or
sub
xchg
imul
push
add
int3
inc
sub
mov
loop
lea
sub
pop
add
sub
adc
jo
ficompl
or
fst
xor
in
rcr
test
adc
lcall
sbb
dec
and
xor
shl
add
cmp
or
mov
pop
jle
inc
negl
pusha
ss
cli
pop
dec
leave
mov
rorb
add
push
mov
sbb
rcrb
repnz
addr16
sub
push
pop
int
add
or
cmp
das
scas
pushl
push
rolb
sub
push
pop
test
loopne
das
sbb
jbe
lcall
dec
push
pop
sub
adc
hlt
push
and
cmp
push
dec
push
pushf
mov
lret
outsl
mov
push
sbb
stos
imul
cmp
push
push
add
fidivrl
dec
sbb
push
inc
lods
movsl
cmp
sbb
mov
in
fimull
sub
cmp
sub
clc
ret
mov
and
shll
mov
pop
mov
push
inc
cmp
je
lret
fsts
stc
xchg
clc
push
mov
stc
mov
test
cs
cmc
mov
notb
imul
add
sbb
jge
insl
pop
fcmove
movsl
inc
sub
pop
adc
lds
sub
arpl
or
leave
dec
cs
add
cmp
loopne
mov
jmp
dec
or
mov
cltd
pop
inc
mov
push
xor
inc
outsl
sbb
cs
ret
shrb
mov
jnp
jp
xorb
push
fsts
add
dec
pop
sets
lods
popf
push
push
inc
jecxz
mov
int
push
mov
inc
into
icebp
in
push
add
in
add
js
imul
inc
fdivrs
mov
or
inc
dec
mov
jo
add
inc
adc
adc
cmp
pushf
out
cmc
roll
jp
mov
stos
mov
js
sbb
orb
xchg
mov
mov
test
adc
inc
xor
cwtl
loopne
sub
mov
mov
add
and
jmp
dec
and
jbe
hlt
mov
test
rcll
jl
sbb
sbb
lds
icebp
adc
cmp
popa
movsb
adc
aam
pop
lret
movsb
sbb
pop
popf
xchg
push
mov
inc
dec
push
je
xchg
test
xchg
and
add
xor
adc
and
jge
xor
in
dec
mov
dec
lock
pusha
pop
jp
xchg
inc
add
shll
adc
lahf
push
mov
xchg
notb
lcall
fmuls
jbe
stc
and
mov
in
movsl
ja
sub
dec
cld
jmp
adcb
xchg
pop
dec
rclb
push
loopne
frstor
sbb
cmpsb
add
push
mov
xchg
ja
or
xorl
ret
pop
inc
pusha
xchg
call
dec
lret
dec
add
lock
xchg
mov
sbb
adc
mov
fmuls
jmp
pop
push
lea
lea
test
or
orl
cmp
xlat
repnz
jle
or
sbb
xor
fsubrl
test
nop
dec
loope
clc
jmp
in
mov
in
push
push
xor
into
je
cmp
push
scas
pop
jne
and
insb
mov
iret
xor
bnd
popa
jp
add
jns
jl
add
sbb
data16
stc
inc
leave
and
jp
jl
add
cltd
inc
aad
les
dec
lret
mov
xchg
add
xchg
in
jge
push
aad
mov
and
add
jl
sbb
loop,pn
rorb
sarb
push
push
jo
fildll
xor
ljmp
pushl
incl
jnp
movsb
push
pushf
xchg
mov
je
lcall
jmp
mov
push
jno
lcall
cmp
pop
mov
jo
xchg
push
mov
inc
pop
pop
call
mov
out
sahf
testl
cmp
jo
lahf
inc
push
nop
out
int
dec
inc
insb
or
sub
and
cwtl
nop
jmp
in
adc
imul
mov
loopne
bound
sbb
in
out
sarb
shrl
push
or
sub
xchg
in
je
mov
icebp
sbb
shl
pop
cmp
inc
or
jne
pop
stc
pop
or
rol
cli
add
cli
pop
insb
add
xchg
mov
mov
xchg
out
push
int3
testb
jne
push
sbb
sub
xchg
stc
call
lret
enter
inc
and
cmp
xor
xchg
sarb
fsubr
outsb
jne
out
jle
adc
pop
mov
pop
mov
sbb
add
adc
mov
cltd
or
jmp
idiv
fsqrt
jbe
je
movsl
dec
test
in
cmpsb
push
fstl
std
pop
jns
lcall
sbb
or
loop
andl
test
jbe
add
out
mov
sbb
or
adc
test
inc
xor
xor
cmc
add
or
lods
push
shll
add
test
or
and
cld
add
dec
pop
add
push
sbbl
xor
mov
sbb
pop
inc
adc
xchg
cli
and
sbb
dec
mov
jmp
jnp
push
or
call
loopne
or
pop
fildl
pop
loopne
lock
jo
jb
insb
clc
lea
dec
mov
movb
jmp
fnsave
sub
std
add
add
ret
ficoml
pushf
sub
push
push
mov
sub
mov
rclb
clc
mov
mov
dec
or
or
repnz
push
loopne
or
inc
repnz
loop
leave
adc
and
and
xorb
add
mov
or
push
sbb
mov
adc
jle
or
test
pop
sub
mov
lods
movsb
in
push
jecxz
mov
pop
test
or
movl
cmp
es
push
pop
pop
test
cmp
dec
mov
add
fmull
call
int
outsb
decb
fsubrs
int3
stos
sahf
loope
adc
push
xor
lock
add
inc
push
xchg
dec
xchg
imul
movsb
mov
shll
mov
movsb
xchg
andl
cltd
add
sub
pop
push
xor
lahf
sub
or
std
fsubrl
sub
sub
sarb
cmp
clc
or
ret
jns
jns
les
cmpsl
jne
outsb
test
or
pop
add
hlt
fisubrl
mov
cld
xor
mov
adc
adc
xchg
mov
shll
in
xchg
clc
jno
insl
push
jne
jo
lods
insb
repnz
jmp
aad
iret
fsubs
adc
pop
mov
inc
inc
test
loope
shlb
pushl
mov
add
call
ja
int3
lcall
in
add
and
add
test
clc
or
add
fimuls
and
shr
pop
xchg
xchg
test
cltd
rolb
lods
jecxz
sahf
push
lea
adc
test
jge
pop
movsl
pop
mov
push
mov
push
loopne
xor
push
inc
fisubrs
aam
sub
lock
pusha
xchg
outsb
or
jp
movb
sbb
pop
mov
and
nop
ficompl
jbe
xchg
add
dec
jp
and
popa
xchg
fimuls
into
sbb
clc
dec
cwtl
fsts
lods
sbb
ret
imul
and
outsl
add
jns
push
in
shl
stc
rcrl
mov
arpl
pop
sbb
xorl
pusha
jl
push
or
push
mov
fnstsw
adc
mov
or
add
cmpl
sbb
mov
push
mov
scas
add
cmp
lds
js
push
dec
rol
xchg
cltd
test
mov
or
pop
popf
mov
jo
xchg
fdivrs
xlat
xchg
mov
popf
jne
ficoml
je
sbb
sbb
in
or
mov
rorb
call
xlat
cli
gs
pop
imul
mov
mov
cltd
lea
aam
ja
lret
or
ljmp
rorl
sbb
pop
sar
sbb
movsb
mov
loopne
fsubl
xchg
push
shlb
inc
ljmp
jb
je
mov
mov
pusha
lret
out
xor
add
mov
or
mov
push
pop
add
ret
addr16
addl
push
sbb
push
sub
adc
icebp
fdivs
inc
js
mov
shll
mov
rorb
int3
adc
ja
movsl
mov
jb
and
mov
hlt
adc
inc
mov
sbb
dec
cmp
push
xchg
or
jnp
or
dec
mov
pusha
sub
xlat
mov
sbb
pop
and
aaa
ss
js
add
dec
sbb
int
jge
inc
xor
movsb
into
enter
incl
push
sbb
sbb
imul
outsl
and
xchg
out
adc
movsl
adc
in
inc
xor
or
aad
call
fnstsw
pop
outsl
das
mov
xor
push
jae
mov
sub
adc
mov
inc
test
add
fcmovb
and
adc
mov
rorl
or
adc
sbb
fstl
and
arpl
xor
mov
imull
xor
sub
nop
jbe
xchg
mov
pop
add
loope
or
dec
and
in
xchg
addb
ficoms
jp
es
add
mov
adc
add
adc
cmp
popf
add
push
insl
cmp
jl
xor
xor
rcrb
cmc
pushf
sub
xlat
rorl
mov
sbb
push
cmp
movsb
dec
loope
jnp
inc
mov
push
sbb
or
test
nop
push
dec
les
xchg
insl
add
cmc
das
maskmovq
jg
lret
jmp
mov
inc
lods
cmpsb
sete
xlat
mov
mov
dec
imul
dec
pop
jl
jo
xor
shlb
mov
adc
cmp
ds
pop
mov
push
inc
sub
mov
rcl
sub
add
addr16
sbb
push
or
or
sub
mov
ss
ret
cmpsb
fistpll
je
xor
out
filds
sbb
xor
mov
xchg
dec
andl
jb
dec
cwtl
sub
lds
cmp
shl
cmpsl
add
sbb
idiv
push
add
mov
push
jne
add
push
addr16
xchg
hlt
jmp
cmp
jle
sbb
out
pop
imul
ret
pop
push
inc
cmpsl
repnz
and
add
mov
movsb
out
jo
lods
lock
nop
sbb
fstpt
pop
js
pop
dec
push
jb
mov
mov
lea
push
dec
mov
adc
out
cltd
sbb
add
push
push
pushf
jb
je
iret
sbb
inc
push
ljmp
jne
and
nop
jg
lea
push
lahf
mov
jae
push
cmp
imul
adc
mov
daa
add
and
fiaddl
pop
test
xchg
push
loope
popa
imul
xor
cmp
bound
jbe
shl
je
and
push
jle
test
fwait
push
or
add
pop
dec
sbb
mov
jl
jae
add
ficoml
aaa
movsl
mov
sbb
outsb
jnp
or
sbb
ret
je
adc
sbb
jno,pt
mov
or
test
shll
lea
adc
push
inc
icebp
pop
dec
inc
stc
cltd
push
push
push
mov
add
add
dec
aas
repnz
xor
stc
cmp
dec
jmp
sub
faddl
inc
cmp
inc
js
push
pop
lahf
movb
xor
and
or
in
add
push
imul
pusha
and
insb
idivb
and
mov
aas
sar
int
adc
inc
add
push
mov
adc
push
jmp
xor
sub
push
xor
add
test
int3
mov
js
shrl
mov
inc
mov
cld
test
jne
jmp
and
sarb
dec
adc
or
add
nop
mov
jg
add
mov
out
pop
gs
fwait
lret
lods
or
ds
das
adc
lret
pusha
xchg
subl
xchg
cmpsb
loop
aam
mov
or
jle
jo
adc
push
hlt
mov
movsb
mov
fwait
ret
add
rolb
inc
lret
std
xlat
add
jmp
push
pop
fisttpll
adc
fsubr
and
push
rclb
lock
mov
or
jl
mov
sub
xchg
mov
cmc
cld
dec
mov
jge
movsl
daa
pop
mov
mov
loopne
lret
sbb
into
mov
loope
addr16
mov
popf
cmp
mov
push
mov
insb
pop
jmp
lock
ret
nop
popa
fwait
ds
sub
fisubl
lcall
xorb
dec
mov
movsl
data16
imul
mov
test
gs
adc
mov
mov
arpl
cmc
add
pop
or
pop
adc
int3
push
or
pop
ret
jp
movsl
jle
or
pop
inc
mov
mov
xchg
enter
or
mov
or
cmp
nop
sub
movsb
and
jb
mov
xchg
dec
inc
mov
sbb
pop
in
add
jl
fnop
push
data16
mov
pop
jno
inc
mov
inc
xchg
or
or
mov
adc
test
sub
daa
jb
into
mov
pop
aam
mov
shrl
jae
inc
add
cwtl
fsubl
and
pop
scas
out
hlt
int3
les
mov
push
or
mov
jne
add
mov
ret
out
lret
cmp
dec
std
and
sbb
sub
fmuls
inc
add
cmp
scas
outsb
in
sbb
pushl
insl
and
lahf
xchg
fdivr
insl
fadds
cmp
je
mov
stos
mov
stos
ss
jg
fs
push
cmpl
mov
adc
jmp
inc
dec
jb
jb
or
loopne
loopne
les
test
ljmp
imul
jl
adc
add
xchg
dec
sub
jmp
push
pop
sbb
sub
mov
pop
xchg
mov
dec
add
or
clc
pop
inc
mov
les
xchg
push
jb
and
cmpsl
out
add
cld
and
cld
add
mov
cmc
jbe
add
fs
add
sub
add
subb
push
iret
add
sbb
pop
and
mov
mov
and
mov
jns
push
xor
mov
repz
xchg
sarb
xor
sub
push
sbb
mov
and
clc
mov
sti
xor
std
mov
mov
push
outsl
add
push
mov
jge
inc
flds
cmp
sub
lea
push
out
enter
sar
push
fld
xchg
sub
aaa
pop
or
mov
push
and
data16
lret
adc
ja
test
xchg
push
pusha
sub
adc
pop
push
add
cli
loopne
or
lea
bound
call
je
adc
or
mov
adc
cmp
cmp
loop
ret
mov
xor
out
and
subb
std
xor
jo
mov
sub
pop
and
aaa
sub
outsb
pop
and
subb
push
xchg
sarl
pop
add
stos
xchg
push
cmp
mov
inc
push
fwait
sahf
pop
call
ret
fstpt
xchg
lret
pop
jl
jmp
mov
lahf
mov
rcr
int3
push
jge
pop
imul
stos
pop
and
sub
sbb
push
lea
loopne
and
in
xor
movsl
lods
int
rclb
mov
xchg
jne
mov
test
lock
add
jmp
push
xchg
adc
push
xchg
dec
adc
xor
ret
out
test
pusha
nop
ss
mov
adc
iret
xor
pop
sbb
or
clc
into
pushf
push
sbb
call
cld
mov
mov
sti
sbbb
or
dec
xchg
adc
ljmp
sbb
sarb
call
add
push
pusha
jl
into
shll
pop
or
push
mov
fucomi
rorb
scas
leave
cmp
cmp
mov
js
aam
push
cli
add
add
push
cmp
sub
into
mov
sbb
rclb
dec
aaa
sbbb
mov
je
roll
add
add
mov
or
pop
pushf
shll
rorb
lret
test
cmpsb
lock
or
xor
imul
pop
out
subl
fstpt
add
sub
push
pop
adc
addb
outsb
xor
incl
aas
sub
aas
das
pop
pop
jg
sub
add
sbb
jp
sbb
dec
mov
rcrl
icebp
popf
in
xchg
dec
addr16
lods
clc
hlt
pop
dec
mov
arpl
inc
adc
test
mov
sub
cmpsl
rcr
in
push
jae
je
call
in
les
add
and
ja
mov
cmp
bound
ret
mov
mov
andl
icebp
xchg
mov
cmp
leave
fistpll
aas
je
ja
nop
dec
ds
mov
fdivr
iret
mov
rorl
test
mov
rcr
pop
popa
aaa
stos
mov
or
cltd
mov
pop
add
push
nop
mov
mov
mov
and
mov
mov
cmp
xchg
lods
mov
lret
leave
sbb
roll
hlt
icebp
xchg
pop
cmp
int3
dec
icebp
outsb
and
aas
insb
jne
jp
mov
adc
and
push
mov
insb
jg
adc
fwait
adc
mov
imul
and
leave
leave
dec
mov
inc
cmp
leave
sub
sbb
aam
xchg
pushf
xor
rcrb
cmp
mov
in
add
or
loope
ret
outsb
popf
push
pextrw
or
xor
mov
push
in
sbb
jb
in
mov
ret
cmc
mov
adc
jns
sbb
fildl
adc
pop
mov
push
push
jb
movsl
sahf
ffreep
push
repnz
sbb
rol
lret
push
mov
sub
pop
xorl
push
xchg
pop
rcl
lods
in
sbb
and
out
ret
inc
sahf
outsb
and
jno
shll
adc
jo
mov
js
push
pop
push
and
add
jecxz
cmpsl
push
loopne
aaa
mov
add
mov
mov
xchg
jmp
loop
addr16
or
sti
dec
sub
jmp
inc
mov
pop
pop
decl
sbbb
test
xor
leave
enter
mov
subl
idiv
in
xchg
mov
push
popf
jecxz
test
test
aad
sbb
inc
idivl
add
mov
mov
pop
fdivs
jnp
pushf
testl
loopne
add
pop
shrl
adc
in
push
cltd
push
mov
sbb
inc
aas
lods
test
inc
pop
aaa
mov
pop
xchg
inc
mov
faddl
lods
lds
jb
pop
push
cmp
in
aad
pop
rorb
dec
mov
ss
add
mov
and
and
mov
xor
aaa
and
nop
mov
xor
loopne
sbb
adc
lods
rclb
pop
enter
cmpsb
jmp
xchg
or
loopne
and
nop
aam
inc
test
mov
enter
mov
adc
inc
js
adc
mov
les
cmp
mov
pop
add
cmc
fnsave
sub
lods
pop
dec
insl
scas
inc
xor
cmpsl
imul
scas
push
or
repz
ss
repz
gs
adc
mov
sub
jbe
push
nop
jo
and
lahf
fs
lock
lret
xor
sub
cmc
push
xor
pop
xchg
cmp
or
or
rcll
mov
sub
and
imul
faddl
das
mov
or
inc
inc
je
cmp
rolb
mov
ljmp
adc
imul
ficoms
icebp
shr
lds
xchg
mov
jbe
dec
xchg
dec
add
add
or
out
push
cli
and
or
jne
sub
push
push
cs
or
xchg
or
push
cmpsb
xor
rclb
fisubl
sbb
nop
sbb
roll
add
xchg
mov
mov
add
push
add
fsubrl
add
pop
add
xchg
mov
jmp
sub
clc
je
dec
pop
or
xor
dec
pop
push
fisubrs
xchg
or
push
or
or
cmpsb
lock
push
shr
sub
sub
adc
inc
xlat
push
add
and
enter
add
or
or
test
add
sub
mov
jno
adc
mov
inc
add
sbb
testb
or
nop
pop
dec
sub
sbb
push
mov
fimull
enter
dec
shl
add
xchg
lahf
fdiv
mov
push
dec
cmpb
out
cli
in
add
xchg
sub
test
or
scas
ficoml
mov
sub
sub
testl
cld
ficoms
push
push
dec
jp
mov
mov
lret
jne
cmp
inc
out
add
sarb
and
int
decb
add
push
orb
mov
popf
xchg
xchg
and
and
notb
pop
mov
xlat
mov
mov
lahf
in
leave
sub
mov
data16
mov
lea
cmp
ja
mov
xor
jbe
sbb
sbb
and
bound
dec
aaa
cld
jmp
movb
cmp
das
inc
pusha
sbb
add
clc
mov
adc
insb
push
mov
xchg
sbb
dec
xchg
das
fstps
cmc
push
mov
fdivrl
xor
add
sbb
lock
loope
cmp
cmp
mov
mov
jns
cmpb
cs
jmp
cmc
xchg
aam
mov
cmp
jne
cltd
popl
shlb
imul
cmpsb
jge
in
jne
jmp
sub
jne
dec
or
and
rolb
mov
push
loopne
xchg
pop
lods
jmp
adc
push
adc
push
push
rcrl
fwait
scas
inc
mov
push
or
scas
or
xor
out
jb
or
jno
rcl
push
jmp
mov
push
dec
fwait
inc
add
push
and
dec
adc
into
aaa
inc
cmc
inc
mov
rolb
jnp
xchg
pop
cmp
or
push
call
loope
ds
nop
jne
sahf
cmp
insl
cwtl
sbb
pop
inc
push
leave
pop
aam
cmovb
fsubl
imul
orb
daa
pop
subb
enter
div
xchg
test
fs
cmpb
inc
cmp
aam
inc
adc
fsubrp
loop
ret
js
jo
inc
fisttps
add
jb
mov
jne
jno
imul
push
xlat
movsb
mov
adc
mov
push
pop
dec
and
icebp
loopne
pop
fisttpll
lods
cltd
jle
sbb
popa
mov
mov
jecxz
xor
push
mov
inc
dec
jne
sahf
rolb
scas
stos
mov
jmp
rcr
mov
mov
add
jmp
cmp
lcall
push
adc
pop
adcb
xchg
mov
mov
xor
lods
sbb
sbb
push
pop
push
and
popf
in
or
inc
cmp
mov
cmpsb
pushf
sub
fldcw
jne
or
aam
add
pop
push
push
mov
push
aam
push
pop
inc
pop
push
cmp
xlat
testb
insb
ljmp
add
cmp
faddl
or
and
dec
les
or
mov
mov
rcl
clc
add
in
fmuls
testl
jge
mov
mov
add
dec
jmp
stos
xchg
int
cmp
out
and
sbb
push
ljmp
mov
jmp
and
cmp
mov
cmp
jne
das
cmpl
xchg
bound
and
xor
mov
jg
ficoms
psubsw
add
sbb
mov
xor
rorb
cld
push
lods
cmpl
mov
cmpl
ret
ret
ret
adc
addb
mov
sub
xorl
xor
test
sub
adcb
mov
cmp
test
je
mov
mov
mov
and
imul
mov
loop
lods
pushl
pop
int3
pushf
inc
lcall
mov
adc
push
dec
jnp
sbb
sub
adc
sub
add
imul
rcrb
cwtl
shrb
cmp
cmp
cmp
movsb
pop
mov
aam
jle
popf
andl
or
adc
pop
cld
faddl
sub
add
jg
popl
push
pop
cmp
loop
stos
xor
jp
pop
add
sub
push
mov
sbb
addr16
cmp
test
out
push
mov
push
sbb
pop
lret
sbbl
inc
and
push
sbb
and
push
cmp
adc
outsl
add
insb
leave
fimuls
dec
jecxz
jle
and
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
or
sbb
pop
mov
mov
mov
mov
jno
mov
push
push
pusha
fsubr
cmp
mov
push
pop
lahf
cltd
and
outsl
push
rorb
mov
mov
xchg
sbb
jl
js
pop
data16
mov
add
inc
mov
jns
or
int3
inc
push
jg
sahf
or
mov
fwait
mov
inc
cmpsb
loope
cmpb
inc
cmp
insb
pop
arpl
or
jb
in
push
loopne
xor
clc
xor
mov
rcrb
ds
xor
test
nop
popf
sbb
and
pop
sarb
pop
push
mov
xor
or
jnp
or
xor
shl
pop
js
push
cs
aaa
jmp
call
iret
clc
add
and
and
sub
push
in
sbb
in
push
in
inc
dec
or
subps
roll
sbb
push
mov
sar
push
dec
mov
bound
xchg
sub
aas
jge
push
sbbl
lahf
lods
adc
xchg
mov
mov
nop
mov
jg
jge
adcl
jg
pop
sub
mov
sahf
inc
in
push
rorb
mov
mov
pop
mov
pop
cmpl
popf
sub
push
movsl
mov
outsb
cmpsl
iret
jmp
mov
test
les
cmp
ljmp
add
push
mov
stos
cmp
xchg
pop
sub
xor
sub
fistpl
js
push
xor
jge
inc
pop
xchg
arpl
movb
xlat
push
rcll
cmp
add
and
xchg
sbb
or
mov
xchg
and
mov
and
and
xor
fwait
add
sub
movsb
scas
add
out
or
das
pusha
cmp
js
pop
pop
out
inc
xor
mov
adc
js
adc
jbe
xchg
mov
push
hlt
or
or
mov
rcr
lsl
sbb
or
xor
sbb
dec
jecxz
enter
out
rclb
mov
jg
loop
mov
cmpsb
shl
aaa
fistpll
jg
xchg
dec
movsl
sti
push
inc
adc
and
inc
push
lock
pusha
jo
mov
dec
jne
inc
data16
jo
je
and
xor
or
adc
divb
xor
xchg
hlt
push
fs
sbb
add
jne
push
mov
sbb
cli
pop
pop
ret
ret
inc
mov
adc
rcll
fnsave
push
mov
bound
add
cli
shr
add
daa
add
dec
pop
xchg
xchg
popa
inc
cld
or
loope
jge
or
daa
in
insl
icebp
popf
lock
xchg
cmpsb
outsb
adc
pop
movsb
dec
out
adc
fwait
test
shll
push
or
shll
enter
and
or
es
and
jecxz
pushf
clc
mov
insb
xor
mov
push
add
push
js
aam
dec
push
mov
add
pop
mov
push
push
add
pop
pop
dec
sub
lds
fsubrl
pop
sbb
je
push
or
sub
push
bound
mov
adc
jbe
loopne
mov
adc
ficompl
push
fldl
or
push
add
pop
push
and
jle
xor
sub
add
insl
pop
jbe
arpl
jno
xchg
and
mov
nop
in
inc
sbb
pop
xor
into
das
and
rorl
cs
je
dec
add
mov
mov
and
sbb
adc
mov
adc
roll
lahf
sarl
pusha
pop
xor
call
subb
dec
cmp
and
nop
scas
jns
inc
stc
cmpsl
xor
and
jb
int
imul
mov
jmp
mov
mov
cmp
mov
adc
pop
js
and
fmull
fstl
mov
lock
push
adcb
push
lea
xor
xor
popf
int3
int3
push
scas
repz
repz
into
repz
xor
in
test
mov
cwtl
add
ret
push
and
int3
stos
inc
add
pushw
cmp
cltd
in
mov
jae
mov
push
inc
pop
xchg
push
mov
inc
jle
call
add
and
inc
std
or
inc
push
lea
push
push
mov
jmp
inc
faddl
mov
or
and
or
inc
nop
or
clc
sub
and
pop
fucompp
bound
xchg
iret
clc
and
ret
and
push
push
test
jmp
inc
data16
add
push
mov
adc
cld
outsl
mov
and
idiv
divl
adc
mov
xchg
decb
inc
mov
sbb
jbe
sub
mov
pop
xor
jne
lea
mov
shrb
jg
mov
jne
mov
push
mov
shll
fucomip
stos
add
insb
mov
out
xor
sbb
sub
scas
fmull
add
sbb
jne
popf
test
mov
sub
aad
or
addb
push
inc
aaa
inc
aas
movsb
repz
cs
fucom
or
mov
jb
int3
mov
das
nop
pop
xchg
std
mov
lods
call
lret
sbb
jne
dec
das
call
lods
inc
mov
imul
mov
dec
and
add
pop
and
ret
xor
mov
test
mov
adc
jecxz
pop
fimull
fdivrs
sbb
in
negl
sub
popf
mov
mov
repnz
cli
mov
inc
rcl
std
add
xor
aad
leave
mov
mov
mov
inc
test
faddp
dec
sbb
xor
dec
dec
lret
cs
mov
add
clc
xor
pop
insb
xor
sahf
dec
shl
pop
mov
pop
fdivrs
sub
sub
notl
xor
push
pop
dec
es
stos
imul
mov
rcll
mov
data16
mov
insl
push
push
sub
push
inc
rol
fisubrl
call
scas
pop
adc
and
push
cmpb
jb
add
ret
add
cmp
je
mov
fucomip
int3
ret
lds
push
ds
push
imul
mov
push
lcall
lret
pop
sahf
mov
pusha
loopne
fadds
mov
imul
test
pop
fimull
scas
fmull
pop
inc
lcall
add
pop
fdivs
push
sub
in
mov
test
js
or
stos
cmp
adcb
sub
std
adc
xchg
iret
dec
jnp
cld
mov
sbb
or
xor
xchg
cmpsb
in
mov
test
adc
std
into
incb
sub
insb
push
es
lock
jg
negb
cmpl
rcll
pop
sbb
inc
mov
stc
test
lods
lds
sbb
pop
aam
jmp
mov
fs
notb
fdivs
call
std
dec
rorb
xchg
daa
dec
cmp
push
adc
lea
add
add
xchg
div
or
push
mov
lock
and
and
cmp
aaa
mov
xor
xchg
movsl
out
adc
rcrb
xor
inc
pusha
addl
fidivrs
movsb
dec
jo
sub
bnd
mov
fisubl
inc
jns
jecxz
daa
call
jae
in
sbb
imul
push
add
pop
jmp
ret
mov
sbb
sub
adc
int3
arpl
jne
call
scas
es
mov
mov
inc
out
push
in
mov
dec
sarb
std
pop
pusha
stos
inc
test
popa
ja
out
sub
int
sub
lea
aam
outsb
xor
imul
cmpb
fildl
mov
fisttpl
mov
in
push
pop
xchg
jb
stc
sub
xlat
leave
je
outsb
dec
or
or
lcall
iret
out
popl
out
xor
inc
pop
lcall
mov
lds
shrb
inc
ret
dec
sbb
push
adc
fcoms
add
movsl
loopne
neg
ret
cmpsl
adc
mov
jecxz
jmp
das
mov
movsl
lea
rolb
sahf
sbb
mov
pusha
dec
fucomi
fcmovnu
add
pop
xor
jp
fildl
mov
test
aad
xchg
fmuls
fcomps
frstor
into
cmpb
and
push
ficoms
or
aas
dec
cs
push
pusha
xchg
cmp
ss
sti
mov
jmp
dec
rolb
push
cmc
rcr
aam
movsb
jns
add
loop
pop
jl
xor
andl
sub
or
jmp
call
testl
mov
sub
xor
scas
pop
mov
xlat
sbbl
cmpsl
rcrb
pushl
pushl
sahf
xchg
or
daa
ret
loop
fldz
int
hlt
cs
jmp
mov
dec
lods
sbb
mov
aaa
dec
mov
jno
jge
addr16
adc
adc
adc
hlt
in
sbb
sub
fidivrs
mov
push
nop
addw
ficoml
jl
cmpsb
jmp
sbbl
mov
adc
add
inc
pop
lock
add
je
popa
add
imul
mov
daa
daa
dec
pop
loope
mov
mov
jp
roll
push
cmpsb
addr16
stos
or
xor
std
mov
add
rolb
stc
push
shll
scas
hlt
and
testb
lcall
stos
pop
xor
adc
rolb
enter
xor
push
adc
xor
jne
nop
or
lods
test
daa
inc
enter
mov
and
and
adc
jne
outsb
dec
xor
mov
push
mov
mov
inc
gs
lea
pop
or
pop
out
rolb
pop
scas
mov
movsl
xchg
out
ss
pop
ret
and
lock
jno
xchg
repnz
pop
sbb
fisubrl
push
lock
movsl
pop
lea
movsl
xor
sub
or
movsl
pusha
int3
or
les
sbb
adc
mov
and
aad
cmpsl
aad
xchg
lea
sub
pop
and
inc
cmpsl
inc
sbb
sbb
cmpsb
inc
cmp
sbb
sarb
arpl
in
push
stos
mov
repnz
dec
es
rclb
in
in
shrb
cltd
movsb
jb
aad
sbb
add
nop
lret
sbbl
dec
cmc
push
rcrb
mov
lods
sub
xor
repnz
and
add
lret
sub
or
cmp
movsb
xlat
adc
inc
out
mov
mov
push
push
push
aaa
xor
mov
inc
xchg
and
mov
and
cwtl
lods
add
sbbl
enter
test
je
lret
leave
mov
daa
xchg
test
out
pop
stos
xchg
inc
test
fdivs
loop
addr16
leave
inc
test
nop
push
inc
push
in
test
sub
inc
dec
inc
and
pop
sub
leave
inc
and
pushf
cwtl
add
leave
nop
nop
mov
mov
pushf
cwtl
push
cmp
sbb
xor
dec
mov
fistpl
or
outsb
movsb
cbtw
hlt
js
lods
sbbb
jl
cmpsl
push
jl
push
dec
stos
testb
insb
inc
dec
jp
mov
mov
push
fnstsw
or
xor
inc
sub
cmp
rol
sub
inc
js
testl
xchg
mov
mov
dec
mov
test
dec
inc
or
pop
pop
mov
or
movb
pushf
inc
and
push
sbb
icebp
xor
and
xor
sti
fcomps
push
jmp
cmp
jno
fstpl
add
push
jg
mov
test
sbb
mov
and
verr
jno
pop
mov
jl
cmp
loopne
jo
or
add
rclb
cltd
jl
ret
jne
mov
es
inc
mov
inc
adc
inc
mov
and
or
cmpl
inc
or
adc
dec
sahf
fnstcw
push
push
sub
dec
adc
push
push
loope,pn
shr
je
sti
adc
mov
push
dec
adc
xor
ret
and
jle
dec
ds
repz
pop
outsl
inc
or
jbe
iret
shll
outsl
ja
and
mov
ja
jne
shrl
std
mov
int3
pop
ffreep
lea
lea
inc
out
sub
dec
inc
in
shrl
popf
insb
adc
imul
pop
fdivrs
jo
inc
inc
push
negl
and
mov
mov
lret
ret
test
fmul
mov
shr
dec
adc
jl
fnstenv
lock
pop
into
sbb
jae
lahf
add
repnz
mov
nop
aam
or
lcall
and
push
push
dec
or
shl
fadds
add
insl
add
sbb
adc
add
or
mov
stos
add
jmp
mov
mov
jl
dec
popa
sarl
mov
ffree
les
sbb
pop
jne
cmpl
jne
mov
idivl
adc
and
cmp
and
cmp
bound
or
scas
mov
popa
xor
xor
adc
push
cmp
rol
push
mov
sahf
out
add
and
icebp
jno
rol
cmc
out
shl
shlb
fsubr
cmp
jne
ss
add
add
pop
andl
pusha
sub
add
js
or
cld
jle
andl
or
stc
mov
movsl
and
sub
adc
inc
addl
nop
pop
subl
nop
sub
xchg
test
lea
ds
mov
mov
cmp
dec
xlat
mov
mov
fs
loopne
sub
test
jmp
rcll
sub
cwtl
adc
dec
in
adc
out
insl
loope
insl
and
dec
pop
cmp
push
sub
or
movsb
shrb
rcl
inc
sub
mov
inc
or
rolb
push
push
add
inc
jns
pop
cwtl
sbb
fucom
pop
cmp
push
mov
adc
and
and
xchg
out
movsb
inc
push
out
fcoms
or
push
in
fdiv
sub
sti
ficoms
jb
gs
jmp
outsl
mov
xchg
mov
push
jbe
add
xchg
js
shlb
jne
adc
fists
pop
add
incl
out
and
lods
cltd
lea
mov
pop
fs
fistpl
jmp
enter
dec
int3
stc
sbbb
inc
fwait
adc
and
subl
inc
sub
outsb
stos
add
xor
or
inc
push
push
add
pop
add
add
mov
push
inc
cwtl
xorl
cmp
std
jbe
cld
enter
or
jne
dec
cmp
add
dec
aas
rolb
frstor
dec
add
sub
popl
movsl
adc
outsl
xor
inc
cs
je
cmp
lret
cmp
add
and
or
cld
push
insb
ljmp
inc
adc
and
in
cmp
mov
push
and
cld
add
sbb
or
push
or
test
jmp
push
mov
and
es
test
and
ret
xor
ds
int3
push
pop
add
adc
xor
lcall
add
clc
sub
sbb
lea
into
adc
mov
push
adc
jae
filds
jae
lea
add
add
psrld
add
xor
cmp
lock
lea
push
xchg
and
mov
shlb
jbe
cmp
add
int3
dec
movl
jp
enter
push
je
fwait
mov
sub
mov
push
sub
lea
push
fsts
mov
fs
pop
or
mov
mov
gs
std
fists
ljmp
push
pop
push
iret
aam
sbb
fadd
mov
nop
mov
or
incl
movw
mov
adc
lcall
sbb
mov
cwtl
pop
dec
inc
jle
inc
xor
add
int
push
add
jle
pop
movsl
pop
das
cltd
call
push
add
add
loopne
ret
mov
mov
fidivrs
sbb
movsb
or
pop
sub
push
addl
sbb
js
jl
daa
and
idivb
pusha
pop
orb
add
pop
pminub
cmp
or
rorb
and
into
sub
test
adc
shll
xor
jl
in
and
sbb
adc
hlt
jb
xchg
jp
or
pop
push
or
or
dec
or
or
pop
and
fcomip
testl
push
add
adc
adc
mov
push
movsb
or
add
add
jb
sbb
inc
add
sarb
and
addl
or
orb
jmp
mov
jmp
lea
ja
cmc
push
cmp
mov
ds
aaa
xor
mov
mov
jne
jmp
or
add
or
je
push
or
movl
or
add
adc
adc
push
pop
sub
sbb
pop
idivb
mov
add
or
movsb
rorb
test
loope
mov
add
loop
fwait
inc
dec
out
mov
jle
jne
test
not
mov
push
mov
icebp
dec
mov
movl
push
push
sahf
mov
paddusb
push
shlb
dec
bound
and
notl
mov
mov
test
inc
mov
mov
inc
mov
add
push
lret
mov
ja
hlt
push
sub
stos
xor
orb
test
jae
les
clc
pop
ret
mov
mov
sti
insl
dec
pusha
push
sbb
out
leave
negb
push
sub
push
lock
jb
inc
jb
mov
int
dec
fs
dec
mov
add
and
cltd
movsl
out
add
fistl
les
popf
mov
or
xor
imul
xchg
xchg
leave
mov
xchg
das
push
push
jb
pop
sbb
aas
cmpl
push
andl
lahf
ffreep
push
jnp
incb
cmp
fldt
loopne
daa
jg
out
loope
dec
xor
xor
add
stos
test
out
add
lock
xor
mov
inc
adc
fidivrl
cmp
adc
in
cs
jl
pop
inc
dec
test
mov
cwtl
push
adc
ds
cmp
xchg
imul
inc
test
inc
mov
lods
and
inc
dec
or
dec
adc
dec
fs
dec
push
pop
test
mov
xchg
pop
pop
mov
stos
xchg
xor
pavgw
lret
dec
add
xchg
imul
leave
xchg
inc
in
pop
scas
sbb
test
pop
inc
or
movzbl
mov
push
xor
imul
movb
or
popa
push
shlb
sbb
nop
push
mov
lea
cmp
xor
mov
mov
adc
and
pop
andb
scas
cs
sbb
adc
sarl
and
cmp
sbb
inc
lea
not
and
bnd
inc
push
sbb
sbb
sub
pop
and
or
jbe
shlb
pop
add
sub
sbb
xchg
and
neg
add
pop
pop
sbb
outsl
adc
push
cli
sti
std
call
out
jge
aas
adc
hlt
jmp
and
dec
in
out
add
loopne
xor
sub
inc
push
add
or
rcrl
test
and
fimuls
inc
add
sub
sub
adc
dec
ja
test
mov
test
adc
jmp
cmp
push
aas
clc
lock
or
lret
loop
pusha
lods
and
insb
mov
insb
or
push
in
dec
loopne
adc
mov
aad
adc
adc
pop
lea
mov
adc
test
mov
lock
push
aam
out
subb
sub
pop
fdivs
xor
mov
and
jb
add
fwait
lock
pop
xchg
add
ret
sub
insl
add
jmp
add
int3
or
rol
push
or
imul
xchg
fcoms
or
lock
jnp
out
ret
mull
lsl
jmp
push
pop
push
push
mov
jg
inc
shr
rcr
shr
rcr
or
mov
repz
scas
sub
jno
ljmp
outsb
pop
jb
cmp
or
cmp
or
xor
and
cmp
add
adc
or
fiaddl
lret
cs
fxch
pop
ret
adc
sbb
scas
sub
aas
jbe
add
mull
lea
imul
xor
inc
in
sub
inc
pop
popf
sub
mov
cwtl
pavgw
xchg
daa
or
xchg
or
mov
das
inc
pop
push
mov
mov
mov
sub
aad
add
cmp
or
call
mov
test
dec
inc
mov
mov
dec
cmp
div
and
adc
inc
and
inc
and
pop
das
add
or
mov
imul
jne
repz
push
test
cmp
push
push
sbb
cmp
sbb
je
clc
loop
dec
and
jmp
dec
and
push
push
ret
mov
in
push
mov
and
add
or
in
aas
fists
rorb
lret
push
ds
sbb
add
cmp
mov
sub
inc
adc
sub
scas
fsqrt
pop
jne
test
popf
in
inc
push
outsl
xor
push
or
jnp
pop
inc
cmp
mov
rclb
rorl
and
push
push
mov
fiaddl
push
jnp
cmpl
mov
sub
jmp
and
or
enter
pop
or
mov
fldl
jb
push
push
mov
ss
icebp
add
or
mov
add
cltd
loope
sbbb
jns
popf
in
mov
and
inc
addr16
jo
icebp
xchg
cs
loopne
sahf
iret
decl
cwtl
push
divb
xchg
icebp
call
jo
xor
and
mov
daa
sub
adcb
add
xor
addr16
or
dec
mov
mov
inc
push
mov
sti
nop
fmull
xchg
aas
inc
push
add
or
or
lds
push
add
sub
add
ret
dec
cld
or
sarb
sti
inc
cmp
outsl
imulb
aam
sarb
ret
push
je
mov
rol
adc
add
push
ss
or
and
cmp
test
push
pop
adc
int3
lods
mov
push
pop
jnp
dec
jne
mov
testl
jmp
adc
outsl
mov
dec
stos
push
fdivs
test
adc
and
or
sbb
mov
mov
adc
add
fcom
and
inc
jmp
gs
aam
lcall
fidivl
push
push
mov
subl
loope
dec
enter
lods
pop
imul
mov
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
pusha
jbe
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
out
inc
lock
xor
cmpsb
cmpsl
xchg
icebp
xor
or
and
add
insb
jne
push
in
dec
adc
and
add
sbb
cmp
xchg
into
mov
pusha
cltd
jo
mov
adc
aaa
mov
push
cmp
jge
mov
add
sbb
out
testb
push
mov
cmpsb
cwtl
pop
sbb
nop
imul
mov
icebp
pop
test
pop
stc
xor
sarl
pop
inc
rclb
mov
dec
or
shl
sbb
lcall
pop
test
test
jl
js
mov
loopne
movsb
ljmp
in
xor
dec
sbb
or
mov
fsubl
add
ja
mov
sub
jo
add
rcll
orl
dec
insb
and
mov
adc
xchg
push
push
pop
int3
orl
inc
or
push
gs
pop
imul
insl
lock
clc
sbb
rcl
fs
pop
ja
push
insb
lods
sti
sub
dec
push
imul
sbb
xor
or
cmp
push
push
push
xchg
xor
xor
sbb
or
and
filds
ljmp
mov
shlb
xor
jg
and
lea
lea
ljmp
cmp
out
mov
imulb
mov
push
sbb
add
jmp
popl
outsl
adc
jecxz
add
mov
adc
jle
enter
loopne
shrb
in
push
loopne
adc
sub
loope
out
inc
mov
data16
mov
pushl
add
jno
push
jne
adc
mov
push
mov
xchg
push
push
xor
inc
dec
test
pop
movsl
ljmp
push
inc
cmp
ds
and
movsb
cmpsl
push
push
push
shlb
insb
enter
fs
lea
cmpsb
add
aaa
adc
adc
sbb
mov
fisubrl
add
mov
dec
hlt
cmp
cmp
mov
mov
jne
sub
add
pusha
cmp
sub
fiadds
pop
stos
push
cmovno
add
aas
scas
dec
call
pusha
add
popl
pop
push
dec
adc
in
daa
add
scas
call
outsl
andl
es
cmp
pop
pop
xor
pop
call
mov
test
insb
je
sub
sub
or
pusha
pusha
add
push
imul
movd
push
push
mov
adc
pop
jg
lcall
inc
inc
mov
stos
jl
cwtl
sub
xor
and
clc
das
xor
sbb
pop
gs
adc
pusha
loop
mov
mov
push
adc
lret
loope
insb
pop
dec
pop
lods
int
clc
add
lea
cmp
ret
push
add
mov
add
push
adc
mov
sub
adcb
xrelease
rolb
dec
cmp
loop
push
push
test
ss
hlt
mov
les
adc
dec
insb
fisttps
fcoml
das
mov
and
pushl
leave
lret
push
mov
cmc
iret
cmp
jo
mov
lock
add
sub
mov
test
pop
pop
insl
and
push
inc
push
push
nop
lods
loopne
inc
push
dec
mov
cwtl
or
test
mov
inc
mov
arpl
jl
cld
cvtdq2ps
and
or
or
push
mov
and
inc
push
or
xchg
scas
inc
jne
mov
or
lea
and
subb
cmp
insl
add
mov
cmp
push
push
addl
test
loop
sub
or
das
jl
incb
dec
mov
movsb
andl
xchg
adc
jb
test
stos
popf
add
or
and
mov
gs
pop
mov
adc
cwtl
cmp
jle
sub
cmp
xor
jmp
xchg
sbb
jmp
dec
push
in
jbe
cmp
push
sub
jae
test
testl
jmp
inc
sbb
ret
adc
sbb
mov
sub
mov
jmp
adc
out
cmp
add
push
movsb
fstpt
add
jne
out
dec
jae
enter
imul
sbb
jo
sub
and
fimuls
scas
xchg
rclb
bound
pop
push
sub
jmp
xchg
orl
in
pop
aaa
cld
pop
pop
push
and
shl
or
stc
sub
cmp
mov
fadd
jbe
lods
sub
mov
dec
lret
stos
loopne
je
mov
sarb
loop
mov
inc
cmpsl
mov
shr
cmp
aaa
roll
repnz
add
mov
jecxz
fldl
pop
add
dec
or
pop
or
cli
cmp
pop
es
repnz
fdiv
cwtl
pusha
stos
cli
lea
cmpl
jecxz
shll
inc
jmp
cmp
cltd
jmp
icebp
sub
and
inc
es
mov
dec
push
hlt
and
add
jne
das
push
rcrl
pushf
push
fcomps
test
cwtl
jge
add
imul
inc
sbb
ffreep
pop
int
test
cmp
stos
pusha
add
mov
pusha
jp
insl
add
adc
or
sub
xor
jne
inc
or
daa
pop
adc
pushf
fwait
sbb
add
xor
call
add
jge
xchg
push
mov
mov
sbbl
ss
lea
push
pusha
jge
movsl
and
mov
lea
enter
xchg
mov
out
add
jne
mov
lcall
shll
roll
or
mov
sbb
nop
inc
imul
sbbl
cmpsl
pop
mov
push
or
mov
mov
mov
std
and
mov
testl
out
jne
xchg
xchg
lock
dec
into
sbb
jne
inc
or
cmp
pushf
and
sahf
cltd
xor
test
mov
or
jb
cwtl
xchg
test
push
pushf
fstpt
lea
lcall
or
adc
icebp
ret
add
sub
push
jg
xor
cmp
jb
mov
dec
sub
mov
ja
js
pop
stos
incw
cmpl
insl
mov
xchg
pushf
pop
jg
out
shrl
sbb
sti
jg
add
add
rolb
fs
xchg
push
inc
incl
aam
call
fwait
cli
testb
shr
aas
or
push
jge
adcb
into
movsl
mov
sub
inc
mov
add
into
negb
lods
lods
jl
sti
fbld
shrl
shl
shr
or
mov
mov
dec
mov
jne
outsb
mov
mov
aam
mov
ja
push
cmp
test
sub
rcr
ficoml
add
fiadds
mov
dec
lock
ljmp
jmp
or
push
lods
push
jnp
mov
popa
icebp
push
cmpb
mov
aam
add
push
jl
dec
int3
int3
jmp
adc
or
daa
mov
and
jmp
lods
daa
es
rcll
dec
and
les
les
add
sbb
imul
jne
push
lret
xchg
jmp
sub
cmpl
add
adc
mov
mov
or
call
sub
mov
mov
cmp
jl
cmpsl
stc
inc
incb
adc
inc
mov
cmp
repz
sub
sarb
or
mov
pop
ret
pop
incb
jne
testb
adc
sbb
mov
cltd
fldt
push
push
jb
add
rcrb
jg
insb
sub
add
pop
cmp
add
xchg
int
test
xor
outsb
pop
or
add
push
xor
inc
das
fdivrs
in
lods
xor
push
insb
stos
mov
sub
xor
push
add
outsl
mov
cmp
or
insl
jb
dec
in
adc
shrb
repz
ret
mov
xchg
dec
push
sub
push
sub
cmp
mov
pusha
xchg
adcl
adc
xorl
popa
add
mov
cmp
add
add
arpl
int
out
mov
xchg
and
loop
call
add
cmp
outsb
test
jnp
ucomiss
lods
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
inc
iret
jmp
sbb
ds
faddl
adc
and
leave
mov
adc
pop
sbb
cs
lds
rclb
add
ror
push
lea
cmovl
loope
inc
or
sbb
std
push
loopne
push
stos
and
jmp
push
and
mov
jmp
int3
jmp
mov
lods
cmpsl
and
in
cmc
rcl
adc
cmp
adc
in
cmp
xor
lcall
pop
loope
push
std
jmp
push
dec
lahf
loope
push
lea
add
leave
sbbb
sti
sar
mov
aas
or
loopne
or
testb
dec
adc
pop
or
sub
sbb
mov
cmp
sets
addr16
sbb
imul
sbb
insb
add
adc
ljmp
inc
pushl
cmpsl
mov
sahf
pop
pusha
jbe
inc
sarl
icebp
or
xor
push
test
popf
and
int
push
sub
xchg
nop
sti
xor
push
inc
mov
or
mov
cld
jns
lock
mov
mov
add
std
mov
mov
mov
mov
andl
or
dec
and
outsl
add
add
pop
or
out
lret
add
mov
enter
inc
push
movsl
sbb
and
cmp
mov
adc
into
les
inc
outsb
sub
push
dec
hlt
movb
scas
lea
loop
fmuls
fmull
jnp
pusha
mov
adc
popf
xchg
push
inc
add
rolb
lea
je
movsl
jno
jae
or
dec
mov
adc
shll
mov
and
pop
mov
cmp
mov
add
pop
mov
push
or
shrl
add
popa
aaa
icebp
mov
add
sub
xor
pop
sub
cmpsb
sbb
fwait
imul
push
inc
push
pop
ficoms
daa
sub
inc
test
jae
cmovns
iret
test
mov
push
mov
sbb
rolb
adc
mov
fs
add
mov
mov
inc
mov
sysenter
sbb
dec
xor
sub
ss
jo
test
rcll
sbb
xchg
lret
pop
ret
xchg
jle
fs
xor
ffreep
mov
jae
mov
cmp
jne
fldt
loop
shufps
mov
push
into
adc
push
addl
xchg
lock
icebp
and
xor
ds
inc
fisttpll
jne
xlat
out
fnstenv
daa
ret
sub
or
or
insb
pushl
cwtl
nop
addb
int
sub
shl
movsl
pop
jbe
dec
sbb
fbld
jns
push
jle
clc
adc
fiadds
into
jg
sbb
mov
mov
data16
sub
mov
cmp
cmpl
add
or
popa
add
daa
push
adcl
jne
leave
adc
lods
stc
jo
or
cmp
jmp
dec
rolb
mov
test
cmp
push
sarb
push
or
or
cs
dec
enter
inc
test
js
andb
fiadds
stos
mov
mov
add
push
jo
lret
jmp
inc
mov
sbb
mov
adc
pop
mov
push
dec
jae
call
inc
lods
cmp
cmpsl
sub
cmpsb
les
insb
adc
jl
jmp
sub
jne
mov
gs
mov
fidivrs
xorb
cwtl
inc
je
xor
test
jp
cmp
lret
and
sbb
fldenv
xchg
cmpsb
or
jmp
icebp
sub
mov
add
test
inc
movsb
inc
mov
inc
push
adc
pop
test
icebp
and
adc
dec
adc
mov
xchg
push
inc
ss
fistl
sbb
int3
enter
xor
mov
cltd
cmc
or
lret
push
jb
nop
adc
cmp
and
adc
mov
insb
cmp
inc
pop
or
aam
mov
jb
cli
xchg
jp
xor
jne
xlat
mov
pop
les
fimuls
push
xchg
pop
fcompl
pop
inc
cli
mov
inc
and
jg
add
jns
add
data16
inc
sbb
mov
sbb
pop
xor
cwtl
or
scas
lock
js
fisttps
mov
cmp
push
cmp
add
add
push
jmp
test
push
sbb
sbb
cmp
rorb
fcos
aam
and
or
enter
or
insl
and
or
push
loopne
ljmp
add
mov
cmpsb
lock
dec
add
les
dec
andb
add
ds
adc
push
inc
sub
xchg
jo
dec
sbb
icebp
mov
add
enter
xorb
push
dec
lret
push
inc
jae
inc
jmp
xor
dec
loope
jge
mov
and
add
xchg
push
and
fcoms
push
test
pop
sar
out
cmpsl
les
cmp
and
pop
add
sbb
xchg
data16
adc
or
mov
sbb
sbbb
sub
add
inc
xor
mov
adc
pop
shl
mov
or
mov
adc
cmc
pop
adc
adc
or
jno
fadd
and
rcrl
push
andl
mov
add
int
adc
push
mov
enter
jle
mov
leave
xor
rcll
xchg
and
pushf
jl
add
mov
push
jne
push
mov
out
int
pop
add
pushl
push
in
push
and
test
cld
cmp
loop
add
xor
cmp
test
jbe
push
jmp
push
std
jne
cmp
fwait
rcll
or
jl
ret
jne
pop
push
addps
loopne
pop
inc
imul
or
pop
test
mov
inc
mov
lea
mov
dec
hlt
xor
push
lcall
cwtl
clc
rorl
fistpl
pushf
or
xor
or
push
inc
icebp
imul
mov
test
outsb
scas
cmpsb
jb
imul
dec
or
lahf
popa
fsubrl
and
xor
ror
clc
outsb
movsl
mov
imul
or
adc
add
and
fistpll
or
jne
jge
lock
and
push
sbb
push
sarl
inc
mov
mov
and
dec
add
nop
mov
je
inc
and
adc
popf
sti
lds
mov
jmp
mov
lret
or
add
push
push
jno
jnp
faddl
jge
add
cmp
pop
push
jne
and
jne
rclb
add
and
fs
mov
fbstp
jne,pn
sbb
inc
mov
dec
inc
ja
and
loopne
stc
sahf
cmpsb
in
adc
add
or
mov
adc
inc
or
xchg
jmp
inc
push
icebp
push
insb
call
pop
add
loopne
jmp
test
sbb
or
add
and
mov
adc
fs
and
or
jg
aaa
push
fmull
jp
inc
cmp
add
insb
loop
cmpl
loop
es
sbb
xor
mov
mov
add
ret
dec
bound
mov
or
pop
rcrb
inc
mov
mov
mov
jb
je
test
or
sub
adc
fs
add
rcrb
or
stos
dec
pop
push
jecxz
add
sbb
inc
clc
cmp
or
mov
adc
and
or
push
cs
cs
cmpb
inc
and
and
adc
popa
cmpsl
add
pop
jmp
mov
sub
movsb
add
je
inc
aam
inc
imul
in
test
mov
add
cmp
push
clc
call
or
sbb
fiadds
mov
push
inc
add
cltd
stos
cli
rclb
dec
movsb
xor
mov
pop
mov
mov
sarl
out
push
and
test
lret
sub
outsb
ja
clc
inc
cmp
rcrb
inc
sub
clc
pop
mov
repnz
adc
sbb
push
xor
popa
sbb
and
imulb
mov
mov
mov
pop
cmp
and
mov
or
jb
ja
mov
in
lea
ficoms
hlt
xchg
inc
mov
addb
jle
push
and
fisttpll
inc
mov
hlt
stos
out
roll
lret
inc
adc
cmpsb
or
inc
sti
ret
loopne
xchg
adc
jle
sahf
rcrl
xchg
ljmp
and
arpl
les
xchg
je
sbbl
inc
sub
and
sbb
aas
and
push
jg
cmp
incl
adc
jg
xor
jne
movsb
cmp
jae
or
movsb
aad
in
lock
mov
pop
sbb
or
stc
imul
cmp
lock
dec
ret
and
or
lods
popl
pop
jbe
inc
rclb
aad
movsb
xchg
in
in
or
adc
xchg
xchg
fldt
sbb
xchg
xchg
xchg
xchg
sub
xor
mov
adc
mov
inc
inc
cmovs
add
add
leave
pusha
fs
leave
jo
js
movsb
cmp
adc
xchg
dec
es
mov
xchg
cwtl
pushf
xor
test
dec
xor
mov
or
int3
shlb
dec
fwait
mov
dec
xor
loopne
call
and
lock
cmp
and
clc
cld
add
add
dec
push
add
add
xor
mov
xor
adc
xchg
dec
sbb
and
xchg
dec
xor
sub
xchg
dec
xor
xor
cmp
orl
cltd
fimull
push
pop
pushf
fs
dec
pop
pusha
sbb
jmp
sub
pop
adc
and
add
sub
add
test
mov
dec
xor
xor
mov
xor
imul
or
int
mov
adc
nop
adc
dec
dec
xor
sbb
rcrb
int
movsb
cmp
cmp
mov
xor
inc
les
xor
ror
dec
int3
add
scas
orb
inc
insb
pop
insl
inc
loopne
icebp
adc
movsb
push
insb
and
mov
push
ret
nop
or
sbb
movsb
push
or
inc
rol
and
mov
movsb
je
call
jae
pop
push
or
clc
sbb
pop
add
sbb
ret
lock
ficomps
add
test
and
fsubs
and
nop
into
and
out
orb
xchg
repnz
cld
not
xor
loope
xor
and
jb
nop
or
jmp
mov
add
add
add
test
js
adc
popa
push
in
test
adc
sbb
add
fcmovbe
aam
fildl
pop
mulb
shll
and
xor
dec
or
sub
and
call
add
outsl
sbb
std
or
jmp
inc
ja
frstor
cld
mov
and
aaa
int
out
jecxz
sbb
add
or
sbb
lea
std
shll
and
sub
sbb
sbb
es
jge
std
push
ljmp
aas
pusha
mov
pusha
loope
pop
adc
and
sub
xor
inc
jecxz
push
jns
adc
fnstsw
ljmp
pop
cmp
movsl
sub
lgs
xchg
sub
inc
testb
cmp
xlat
sub
sti
add
ja
test
pop
xor
icebp
and
sub
mov
movsb
loopne
mov
or
sub
push
and
inc
sbb
lods
ficompl
testl
add
adc
outsl
lods
imul
jmp
push
and
or
push
or
jg
adc
inc
push
fstps
jmp
fisttpll
lds
lcall
sub
test
inc
pop
sub
mov
push
push
lret
mov
add
sti
out
ficoml
sbb
and
or
out
sub
push
inc
enter
call
es
ror
sbb
out
cmp
push
std
fisttpl
mov
in
add
sub
jmp
cmp
mov
sub
push
xorb
or
psubusw
xchg
test
into
adc
adc
sub
imulb
pushf
sub
mov
daa
adc
jnp
cmp
and
mov
lea
push
mov
inc
clc
dec
add
inc
pop
mov
repz
shr
push
cmpsb
in
xor
push
repnz
mov
mov
iret
inc
cwtl
lods
xchg
or
fld
insl
in
sahf
pop
orl
sbbb
loopne
or
jle
push
pop
jmp
pop
or
cs
icebp
adc
and
pop
xor
loopne
cmpsb
mov
or
push
pop
mov
popa
cmp
jle
push
add
jns
mov
sbb
cmpsb
inc
loope
push
lret
add
xor
repnz
test
xor
push
add
mov
rolb
outsl
ret
push
inc
out
pop
cmp
je
add
lea
sbb
fidivrl
pop
add
or
push
ret
sbb
sbb
push
pop
cltd
and
dec
imul
pushf
sub
stos
and
les
loopne
out
pusha
mov
pop
fstpl
pop
negb
fwait
jno
mov
lods
leave
dec
inc
and
in
or
add
aam
xor
dec
int3
das
add
pusha
aad
inc
out
lret
jo
gs
scas
adc
sbb
pop
loope
fsubl
and
in
push
mov
imul
subps
jae
or
or
sbb
mov
jbe
push
das
ss
push
es
inc
int3
imul
xchg
into
arpl
and
mov
mov
push
jnp
dec
sbb
dec
add
andl
adc
loopne
jecxz
add
cld
mov
jnp
dec
leave
daa
push
add
add
xor
mov
or
stos
sub
lret
fld
xor
lock
or
sbb
mov
insb
add
push
mov
inc
rcr
and
pop
or
add
in
pusha
fcomps
sbb
adc
ret
dec
and
outsl
adc
enter
fld
fstp
cmpsl
subb
out
sti
xor
pop
mov
leave
test
mov
imul
mov
icebp
das
dec
test
xchg
shll
push
or
imul
push
or
add
cmpsb
lcall
and
iret
adc
or
push
in
dec
cmp
sar
sbb
mov
jbe
sub
push
push
call
push
pop
dec
ljmp
adc
fnstsw
movswl
sbb
lret
sbb
loop
pop
pop
subb
cmpsl
and
rorb
sub
rorb
data16
out
or
or
insl
or
push
mov
mov
xchg
or
sub
loopne
or
fwait
test
fsubs
insb
xchg
jbe
outsb
fwait
sbb
adc
pushf
loopne
das
repnz
sbb
movsb
fldpi
xor
mov
or
cmp
mov
pop
sbb
push
lret
dec
sbb
xorb
mov
ss
fistl
sbb
push
pop
inc
jo
xchg
jo
jae
andl
mov
dec
sub
jmp
and
insl
imul
push
int3
or
jnp
inc
push
push
test
insb
loop
jbe
pop
pop
jo
fsubrs
test
cmpsb
add
fisttpl
and
ss
sub
pop
or
mov
out
and
ja
lds
or
test
xchg
adc
and
push
pushf
add
inc
push
insb
enter
add
loope
sub
add
or
adc
add
nop
lret
je
pop
or
xor
push
add
push
sti
jbe
cmp
mov
dec
test
sub
or
enter
call
push
add
loope
push
or
add
push
inc
fstl
xor
ret
cli
sub
sub
dec
or
fldenv
imul
dec
push
or
pop
adc
outsb
add
jmp
inc
or
push
push
or
cmp
testb
inc
cld
loopne
test
jbe
push
hlt
mov
in
hlt
jbe
insb
lock
stos
jp
pop
pop
inc
push
pop
cmp
fs
nop
ds
mov
mov
and
push
add
mov
mov
rolb
sub
dec
xor
inc
sti
lret
lea
push
sarl
xorb
rolb
jg
stos
lret
loop
rolb
and
inc
push
or
adc
add
repz
inc
pop
push
out
pop
and
mov
out
mov
inc
adc
push
sub
jbe,pt
dec
mov
add
mov
mov
or
or
cmp
sbb
add
inc
add
jp
adc
out
pop
jae
xlat
mov
mov
add
rcl
enter
sarb
faddl
loope
mov
mov
mov
pop
sbbb
mov
jge
je
inc
mov
xor
leave
or
outsb
call
inc
daa
xchg
push
pop
add
inc
aam
iret
inc
mov
dec
xor
cmp
pop
addl
das
test
and
push
loopne
jae
das
mov
lret
sub
sub
add
dec
mov
lea
adc
mov
and
push
ds
loope
dec
sbb
or
out
and
add
push
popa
xchg
test
jl
mov
push
and
mov
insb
and
ficomps
mov
or
mov
xor
push
loop
test
dec
fbld
addl
out
test
pop
sub
or
and
out
or
adc
lcall
xor
push
cli
in
add
and
jmp
or
jb
test
lcall
push
enter
dec
jns
imul
cmp
and
shl
cmp
or
or
push
rorb
popa
or
frstor
clc
fs
and
ret
jno
mov
xor
xchg
loopne
push
ss
shll
stos
rolb
sbb
pop
xchg
add
je
mov
gs
into
add
imul
lea
out
and
inc
mov
jge
mov
mov
adc
xchg
shl
xor
rolb
jle
or
fiaddl
pop
lock
cwtl
cmp
mov
test
and
jne
and
adc
push
cs
dec
cs
dec
inc
and
and
inc
jb
push
push
test
adc
mov
dec
pop
dec
roll
mov
push
pop
pop
xor
jne
js
and
lret
or
or
and
sar
pop
jne
cmp
loop
bound
dec
nop
cmp
push
push
imul
push
inc
mov
mov
rorl
jmp
mov
enter
push
pusha
and
jo
pusha
das
pop
outsb
pop
xchg
mov
pop
xchg
xchg
adc
inc
cs
or
popa
in
pushl
ss
cmp
je
or
out
mov
dec
decl
movsb
add
mov
cmp
pop
jne
clc
push
aam
dec
mov
inc
inc
mov
jmp
data16
and
and
fcompl
sarb
inc
xor
jp
nop
sbb
arpl
sub
or
inc
inc
cmp
adc
jmp
xor
inc
fsts
xchg
cwtl
cmp
mov
inc
or
outsl
notl
notl
jno
cs
mov
jle
idivb
cmpsb
add
lods
inc
mov
xlat
mov
or
jbe
or
add
lea
fnsave
ffreep
push
pop
sbb
out
lret
add
rorb
xor
or
jg
clc
add
mov
popf
and
aas
sub
or
nop
xchg
push
dec
xchg
loope
cld
mov
inc
or
pop
push
cli
sbb
add
add
imul
les
pop
fbld
jmp
sub
add
popf
adc
insb
jmp
rorb
inc
add
into
cmpl
dec
jns
neg
movb
xor
loop
jl
cltd
push
enter
sarb
call
add
add
lock
pop
into
fisubrl
mov
lcall
pop
push
mov
jns
jo
test
add
xlat
or
pop
and
sbb
nop
fldenv
dec
std
dec
xchg
jmp
push
outsl
cmpb
cmpsl
or
jbe
pusha
cwtl
xchg
jge
xchg
sub
adc
fsubrl
mov
push
push
adc
shlb
sub
inc
sbb
xchg
addr16
xor
ss
push
jmp
mov
add
sub
xchg
pusha
adc
ds
push
fadd
xor
add
push
mov
cmp
jge
adc
call
mov
enter
out
mov
imul
cli
mov
enter
sub
daa
adc
and
xchg
or
jne
lret
push
imul
cmp
dec
mov
sub
fcoml
dec
cmc
jns
xor
out
mov
inc
sub
inc
xor
add
mov
andb
add
in
xlat
inc
fstl
dec
sub
leave
and
add
insb
lahf
mov
push
xchg
fbld
adc
enter
inc
inc
mov
fistpl
fstpt
ret
loopne
lock
ret
mov
or
jne
bound
xor
aam
es
icebp
sub
jp
in
call
xor
mov
mov
sbbb
aam
fisubs
or
mov
or
mov
hlt
nop
or
call
dec
inc
and
pop
xchg
and
push
xor
pushf
ret
inc
dec
inc
xor
add
dec
jge
xor
insl
cld
add
sbb
clc
hlt
shrd
sbb
xchg
jge
xchg
dec
cmp
jge
sbb
faddl
inc
clc
cwtl
xor
data16
inc
cltd
dec
jg
add
dec
jmp
and
lea
fisubrl
mov
or
rorl
pusha
cmp
sbb
add
or
sbb
cmp
sbb
pusha
xor
mul
dec
ljmp
shrl
in
sub
js
jg
jb
xor
mov
or
fbld
shl
fimull
jl
sub
push
shll
cltd
mov
insb
push
in
push
and
lock
push
mov
add
mov
dec
inc
dec
pop
or
mov
in
lods
jmp
cmp
sub
jnp
push
lods
ja
flds
sbb
mov
and
shll
icebp
rcll
push
cmp
jmp
dec
and
adc
scas
push
incl
add
movl
add
dec
cmp
jle
in
push
mov
ss
jmp
aam
mov
inc
or
push
inc
sahf
fwait
adc
and
neg
decl
mov
xchg
inc
or
or
ret
imul
aaa
push
lods
roll
push
sbb
push
insb
xchg
mov
add
das
push
repnz
js
fdivs
and
pop
sub
add
cwtl
dec
and
sub
mov
cmpsb
loopne
outsb
cmp
jmp
xchg
sbbb
es
divb
push
cmp
or
cmp
or
push
xor
outsb
rolb
enter
or
push
sub
sbb
add
or
jl
add
mov
inc
or
pop
push
stc
mov
push
add
pusha
sbbl
add
add
pop
or
fstps
or
dec
int
pop
data16
cmpsl
out
mov
inc
popa
je
pusha
mov
sbb
aaa
mov
xor
inc
sbb
aas
xor
pop
pop
dec
adc
bound
cmp
movsb
sbb
outsb
ret
je
rorb
clc
push
mull
and
push
add
pop
shll
mov
inc
mov
adc
and
arpl
imul
push
cmp
sahf
add
pop
inc
xlat
sub
test
and
out
and
push
adc
push
add
cmp
cmp
out
cmpl
jbe
push
xchg
sarl
push
insb
ss
jmp
jbe
or
sbb
loopne
push
aam
test
cli
jge
mov
adc
xchg
cmp
sbb
je
mov
mov
add
mov
sub
xlat
popa
add
outsb
mov
inc
jmp
mov
enter
xchg
add
ds
popa
or
fcoml
add
sub
cwtl
pop
pushl
mov
dec
cld
call
fldt
sub
and
inc
adc
add
aad
inc
jmp
les
adc
add
into
test
clts
add
mov
xor
fcompl
or
cmp
inc
dec
add
mov
sub
mov
pop
inc
mov
addl
mov
push
sub
sahf
fwait
xchg
sub
xor
pop
cmpl
sbb
cmp
insl
rolb
mov
push
leave
cmpb
jmp
adcb
push
mov
pop
dec
ljmp
aas
add
lods
lret
jl
cmp
enter
leave
and
test
dec
add
pop
xor
and
in
jge
dec
push
sbb
dec
je
dec
push
push
jmp
mov
cmc
jmp
add
call
orl
pop
adc
fistps
in
and
outsb
arpl
sbb
add
add
rcrl
and
sahf
andb
or
int3
or
js
or
or
mov
loopne
aaa
lea
xor
gs
sbb
jne
adc
cmpsb
fdivp
adc
cmp
sbb
in
mov
sbb
sbb
int3
or
push
sub
lahf
das
imul
sbb
jnp
movsb
dec
push
ds
adc
fiaddl
into
and
push
repz
inc
xorb
cmp
cmpb
jno
lret
cmpl
dec
xchg
ds
or
and
int3
insl
add
sub
push
adc
add
mov
std
pop
sub
mov
inc
or
or
lea
repz
jge
shr
add
or
out
jg
mov
pop
or
mov
push
push
adc
mov
dec
call
and
add
dec
inc
xchg
xor
or
add
cmp
mov
mov
jp
imul
adc
inc
shrb
outsb
jbe
add
jl
in
sbb
cmp
shlb
or
dec
pop
imul
loopne
inc
sti
and
push
add
fidivrs
adc
push
xor
bound
xor
jns
nop
cld
lret
clc
add
sbb
mov
lea
out
or
es
sub
add
fidivrl
lock
insb
sub
mov
adc
and
and
ret
push
or
add
lods
or
pushl
icebp
sbb
or
xor
push
and
pusha
loop
in
xlat
shlb
test
dec
push
cmp
pusha
roll
xchg
mov
pop
inc
mov
shll
outsb
inc
imul
sub
popf
push
jbe
notl
dec
pop
mov
and
mov
test
mov
mov
leave
jmp
test
jmp
clc
test
loope
pop
dec
cs
mov
adc
fnsave
repnz
sbb
dec
sbb
pop
or
cmp
cmc
addl
sub
sub
testb
dec
jo
mov
adc
inc
notl
adc
add
add
dec
xchg
push
popa
add
stos
or
insl
xor
xor
movb
lahf
or
orb
loope
stos
sbb
sbb
fcmovb
fildl
add
add
loope
rolb
adc
xor
xchg
rcrb
mov
aaa
mov
jno
imulb
pushf
outsl
inc
push
xchg
mov
inc
xor
xorb
lret
xor
or
lea
clc
sbb
fistpll
push
pusha
dec
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
fs
and
and
ja
je
ss
push
add
cmp
pop
inc
test
ds
out
cmpl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addl
lock
incb
xchg
push
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
mov
pop
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
enter
add
rolb
fstl
outsb
inc
popa
vmwrite
inc
pop
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
pop
and
inc
pop
push
cmp
sub
jmp
sarb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
xor
mov
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
cli
push
test
xor
je
ljmp
mov
pop
or
jne
fsubl
sti
push
pop
sub
fsub
adc
xor
xor
sub
dec
adc
loopne
adc
dec
and
xorl
add
or
lea
rclb
mov
sub
dec
dec
lock
icebp
jge
inc
inc
push
neg
neg
sbb
sub
sbb
sbb
inc
sbb
xor
js
mov
xorl
adc
fwait
imul
adc
and
fldcw
dec
pop
add
and
sbb
outsl
adc
leave
dec
jns
inc
addl
adcb
pop
pop
pop
aam
adc
jae
or
jae
lods
rcl
ljmp
dec
and
shr
sub
adc
arpl
push
push
idiv
and
and
sub
maskmovq
cld
lock
je
adcl
add
add
xchg
xor
aaa
icebp
fiadds
lret
inc
into
movsl
push
pop
pop
add
stos
shlb
lahf
push
test
dec
adc
dec
movsl
xor
xor
or
inc
incl
push
or
aad
inc
pop
inc
xor
jbe
aas
xchg
pop
cli
addb
aam
push
pop
in
or
push
sbb
push
push
or
xchg
inc
add
inc
xchg
sbb
inc
cmp
paddusb
mov
call
mov
mov
pop
ret
or
add
xchg
mull
pusha
imul
add
mov
jo
cs
ljmp
cld
inc
ss
inc
mov
sub
xorl
cmpsb
jnp
dec
loopne
aad
jns
push
out
cld
addr16
out
dec
mov
enter
loopne
jne
pop
cmp
mov
push
jmp
sub
add
add
dec
cmp
and
shrl
popa
nop
insl
cmp
and
push
or
add
mov
adc
adc
xchg
andl
mov
je
call
shll
jl
out
push
cmp
ja
add
cmp
dec
mov
cmp
jne
mov
xor
adc
mov
and
mov
pop
je
and
mov
adc
adc
iret
and
jb
dec
or
add
push
and
push
push
scas
push
shlb
test
or
fdivr
aas
cs
outsl
and
add
mov
sbb
xchg
cmpb
iret
cmp
push
jle
test
and
data16
mov
adc
push
and
movl
add
sbb
push
test
lock
enter
mov
dec
testb
sbb
mov
mov
and
test
mov
stc
inc
jb
xchg
jnp
mov
push
and
xchg
add
cmp
mov
push
add
cmp
mov
sarb
dec
fadd
call
stos
popa
int3
add
imul
lea
sar
inc
sub
lcall
movswl
xchg
fildl
mov
cmp
es
ljmp
cwtl
imull
sbb
sbb
ret
inc
add
cwtl
inc
sbbl
in
ss
fs
add
and
inc
push
xor
cwtl
mov
push
adc
mov
push
jb
jl
lcall
dec
jle
repnz
adc
mov
mov
mov
mov
and
and
lea
icebp
fidivl
inc
xor
xchg
dec
stos
jmp
mov
sbb
add
and
ja
pop
pop
pop
dec
repz
dec
and
inc
testl
lds
inc
inc
add
jo
mov
cmp
pop
in
add
and
lea
rolb
or
pushf
inc
mov
push
icebp
sub
push
lea
mov
push
int
test
dec
or
inc
nop
subl
or
ret
mov
dec
shll
xor
add
imul
fimull
push
lods
and
rorb
shll
jle
cmp
out
adc
jo
mov
shll
mov
fstps
rolb
rol
pop
or
and
ss
or
sbb
push
lret
int
sarl
inc
pop
outsl
inc
sub
or
inc
mov
lods
sti
insl
shrl
loope
shr
or
mov
imul
filds
lock
dec
and
jnp
repnz
jns
shl
testb
dec
cli
cli
inc
and
repnz
subl
pusha
inc
call
cmp
cli
adc
and
cmpsb
imul
pop
fisubrl
or
into
jb
cmp
xor
cmc
xor
and
and
or
mov
insb
lret
enter
imul
xor
jb
xor
ja
rdpmc
sbb
inc
repnz
dec
pop
fsubrl
loop
out
daa
mov
sahf
jge
out
fcoms
add
adc
lret
inc
push
jne
dec
in
aam
daa
adc
xchg
push
dec
fdivs
cli
or
outsb
das
and
inc
shlb
fdivrs
aam
add
int3
jbe
dec
xor
nop
and
jne
mov
add
lcall
sub
fmull
or
dec
add
and
rclb
cmp
mov
inc
pushf
add
mov
int3
jg
add
cmp
add
add
rolb
xchg
into
or
push
sbb
mov
mov
enter
out
or
jge
add
xorl
lock
or
cmp
jne
jne
push
movsb
repnz
add
add
pushf
pusha
mov
aad
dec
pusha
pusha
add
sbb
add
es
mov
mulb
xor
inc
add
inc
mov
dec
call
pop
outsb
call
lret
mov
inc
cltd
and
or
shl
and
gs
rcrb
xlat
leave
cli
pop
inc
rcrl
cli
fcomp
cmp
neg
and
imul
mov
imul
sarl
loopnew
fdivs
pop
add
and
mov
push
in
mov
movsl
out
fidivrl
adc
add
mov
sar
sub
fbstp
enter
into
test
xor
test
int3
ss
sub
clc
rolb
lods
add
push
mov
xor
mov
add
sub
test
jnp
or
call
add
cld
push
call
into
or
mov
inc
ljmp
or
dec
stos
aas
std
insl
inc
sub
jge
sub
cmpb
arpl
push
cld
or
add
dec
cmp
add
pop
test
dec
add
add
fadds
cmovle
pop
add
call
outsl
mov
jp
jne
dec
mov
jb
or
xchg
or
cmp
or
pop
popf
in
jbe
dec
mov
lret
or
mov
inc
mov
imul
push
add
lcall
and
ret
and
dec
popa
lcall
stc
sub
adc
and
add
push
sbb
movsb
adc
imul
xor
xchg
add
stos
add
jle
jne
or
push
pop
setp
scas
je,pt
push
ret
sbb
adc
push
xor
cld
mov
add
push
ret
or
xchg
adc
xchg
dec
add
add
mov
or
pop
mov
mov
andb
cmp
xor
into
pusha
imul
and
cli
ss
pop
sub
and
pop
pop
jbe
sub
mov
pop
cmpps
prefetch
or
mov
adc
push
loopne
shrb
push
test
inc
ficompl
test
data16
or
or
adc
and
or
push
movsl
push
or
inc
aad
mov
sbb
lret
pop
or
inc
out
lcall
insl
out
sbb
xchg
adc
jne
cltd
ret
out
and
mov
rorl
pop
dec
jge
out
dec
ljmp
or
ret
add
addl
orb
loop
clc
pusha
inc
mov
shl
cltd
jnp
or
push
scas
cmpb
orl
mov
or
and
xchg
lea
cmpsb
dec
add
xor
in
clflush
or
ss
test
cltd
into
or
add
or
add
push
into
mov
mov
out
jnp
sbb
xor
inc
jg
push
xchg
xchg
xchg
into
into
into
mov
mov
mov
sub
mov
pop
nop
pop
sahf
pop
push
mov
add
shlb
or
sbb
adc
sbb
push
adcl
push
and
mov
shll
hlt
add
leave
lahf
pop
xchg
jo
faddp
out
adc
add
sub
jno
movsb
fwait
cmp
es
stos
pop
test
mov
shll
lods
and
cltd
and
popf
ret
cwtl
sbb
xor
sub
jmp
sbbl
mov
xor
ljmp
mov
out
pop
adc
add
add
sub
mov
lahf
xchg
mov
scas
popa
sub
push
add
xchg
sbb
fsts
sub
mov
mov
push
xor
add
pop
xchg
in
hlt
ljmp
aam
jmp
lret
dec
add
jo,pn
add
or
repz
push
push
sahf
ficompl
insb
les
sbb
sbb
mov
add
adc
out
je
mov
ljmp
hlt
mov
cmp
jb
cmp
jbe
ror
adc
in
mov
fbstp
movsl
pushf
xchg
loopne
mov
or
fisubrl
cmc
lahf
dec
pusha
test
ret
mov
ret
aam
pusha
mov
sbb
jle
pop
adc
les
and
inc
or
gs
inc
or
popa
test
pop
aam
pop
xchg
scas
mov
es
shll
adc
loopne
enter
cmp
pushl
lds
addb
aaa
sbb
divb
push
push
mov
pop
and
aam
xor
xor
cltd
fsub
or
enter
or
push
pop
mov
jne
cmpsl
adcb
leave
jae
xor
jmp
xor
dec
test
adc
lods
mov
xchg
jnp
mov
push
ja
cmp
cs
lods
pop
cmpsl
aaa
sbb
add
test
xlat
or
ret
add
cmp
add
sub
dec
daa
add
imul
lock
or
ret
xor
mov
push
mov
push
add
mov
push
bound
movsl
sub
and
sub
loopne
adc
adc
mov
or
push
loope
aaa
jne
xchg
jp
lds
sbb
mov
hlt
call
ja
icebp
inc
call
mov
jo
insb
ss
push
outsl
xor
inc
mov
cmp
cwtl
inc
xor
pop
pop
dec
loope
inc
mov
mov
fidivrl
or
pusha
gs
xchg
sahf
ret
lds
dec
in
mov
ret
clc
mov
add
cli
jno
enter
test
sbb
xor
fadd
sti
push
lock
mov
adc
pop
fists
iret
pop
test
popf
out
lods
dec
lea
sub
sub
std
mov
pop
das
add
pop
pop
int3
fimull
add
pop
nop
rol
xchg
mov
jecxz
cmpsb
loopne
jmp
in
lea
loope
adc
movsb
fistps
imull
cmp
or
mov
ja
adc
aam
das
sub
adc
jne
mov
inc
insl
leave
orb
test
pushf
iret
dec
jae
mov
setp
push
mov
sub
add
sbb
shrb
mov
je
sbb
hlt
decl
xor
je
jg
orl
aam
pop
pop
scas
adc
xchg
jnp
pop
test
jecxz
cmp
jbe
test
lock
aad
push
roll
pop
pop
mov
lret
pusha
pop
rorb
xor
adc
jb
sbb
enter
in
repnz
and
inc
mov
clc
pop
jbe
int
js
xlat
add
add
push
sahf
sti
push
fcomps
sbb
and
lahf
push
and
pop
loope
mov
incb
jge
rolb
pop
inc
cmp
jmp
xor
loopew
sub
sub
or
or
dec
mov
sbb
push
mov
dec
sub
mov
jl
xor
mov
push
xor
clc
xor
outsb
adc
les
movsl
dec
in
mov
sub
mov
and
les
mov
xchg
jmp
and
aam
mov
xchg
inc
mov
lret
cld
cltd
mov
push
add
test
jns
sarb
clc
xor
sbb
dec
pop
push
and
or
cmp
fnstsw
inc
arpl
fildll
mov
mov
rclb
roll
mov
cmpsl
test
xchg
aas
mov
adc
push
pushf
sahf
xor
imul
sub
dec
clc
push
mov
shll
es
sub
sub
dec
sbb
fisubl
push
push
pushf
ret
es
movsb
jo
inc
mov
push
clc
rclb
lahf
mov
int3
jmp
subl
push
sbb
xchg
add
or
insl
cld
mov
loopne
rcrb
xchg
loopne
ss
or
ja
or
sbb
push
les
inc
pop
popa
adc
fistl
mov
rcrb
add
cmc
or
push
xor
data16
and
add
adc
orb
inc
mov
call
js
or
rcrl
rclb
dec
or
into
inc
mov
in
dec
xor
jns
adc
and
cmp
and
stos
mov
adc
jae
xor
scas
arpl
xchg
jmp
sub
jp
dec
xor
in
imul
stos
and
mov
dec
sub
outsb
insl
clc
pop
or
popf
dec
dec
inc
test
mov
addb
ret
lds
xor
or
fmulp
xor
mov
pop
sub
popa
mov
imul
test
push
xor
fcoms
dec
or
loopne
xchg
adc
movl
add
push
xor
sub
sbb
adc
push
shl
imul
rclb
mov
mov
icebp
inc
push
sahf
adcl
sub
cld
arpl
imul
rorl
fidivrl
out
rol
ja
mov
jmp
jb
daa
lock
jo
push
js
rclb
xchg
jge
cmp
outsl
mov
aas
or
movsl
jge
or
mov
adc
mov
sbb
cmp
ja
shlb
jge
mov
push
xlat
cwtl
movsb
cld
sbb
mov
aam
out
push
inc
pop
xchg
cmp
out
jp
repnz
adc
test
jg
or
lock
imul
lcall
pushf
icebp
mov
call
icebp
cmp
push
pop
shlb
push
shlb
mov
push
cs
inc
push
in
and
mov
cltd
jb
dec
mov
xor
inc
add
loope
icebp
push
push
cmp
push
sub
cmp
inc
pop
add
dec
jb
and
pusha
scas
lea
inc
lock
xchg
enter
push
arpl
pop
adc
jne
testb
testb
repnz
insl
outsb
sub
in
sub
push
inc
aaa
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
repz
stc
and
nop
xor
decl
cmpsl
aas
xchg
jg
mov
jg
jae
xor
imul
cmp
bound
mov
adc
mov
xor
push
int
sub
cmpl
mov
sti
pushl
jge
out
int
shr
sbb
xorl
test
jmp
mull
in
push
adc
in
cmpsb
jo
mov
inc
xchg
cmp
std
imul
push
and
and
inc
sbb
inc
lea
xor
xchg
adc
jo
mov
or
and
push
jbe
lds
xchg
pushf
sbb
mov
insb
sbb
push
xchg
sub
mov
add
jl
pop
sbb
mov
test
push
add
insl
jmp
push
inc
mov
inc
lock
cmp
add
or
dec
push
fstps
mov
and
push
push
push
add
or
daa
mov
jb
or
adcl
data16
int
incl
inc
adc
pop
jl
and
stos
in
mov
call
push
mov
addr16
rcll
jae
mov
call
or
xor
add
jns
push
adc
push
loope
or
and
inc
mov
pop
add
cltd
add
fs
movsl
mov
fstp
scas
lret
mov
jmp
aam
pushf
fdivs
pop
inc
jmp
jge
or
cmp
inc
lods
pop
das
jl
outsl
jbe
jo
rcrl
adc
popa
aam
cmpl
dec
pushf
pop
adc
scas
mov
or
sbb
mov
lret
cmp
mov
or
dec
mov
aam
sbb
xchg
or
inc
jge
std
adc
test
add
movsb
or
test
cmpsl
cmpsb
jmp
and
roll
pop
scas
rcrb
mov
rcl
idivb
mov
cmp
call
push
pop
cmp
fwait
and
lcall
sbb
lods
addr16
xchg
addr16
add
aaa
or
pop
dec
mov
sbb
dec
sbb
and
subl
fcmovbe
add
or
add
add
ds
and
jae
xor
repnz
or
shl
cli
mov
call
sbb
xchg
loope
fildl
dec
or
mov
cmpsb
test
je
sbb
aam
scas
or
jg
add
add
add
decb
sbb
ja
popa
xchg
in
or
je
mov
sbb
roll
sub
dec
cli
rcrl
cli
testb
push
cmpsb
mov
cmp
aad
sub
notl
xor
xor
repnz
xor
in
test
cmp
xchg
adc
xor
jg
cmp
je
dec
jne
push
xor
jno
mov
jne
push
jmp
xor
loopne
xor
pop
mov
adc
cmpsb
pushl
je
sub
jne
push
sub
test
cmp
jmp
push
icebp
rorb
cli
inc
cs
arpl
mov
push
adc
cli
push
in
mov
jl
pop
dec
pop
loope
inc
sbb
pop
xor
jecxz
jmp
xchg
push
push
stos
jmp
sbb
sbb
mov
mov
inc
ss
push
lock
jb
push
test
stos
arpl
push
je
in
xor
push
lea
rolb
inc
sarl
in
add
xor
push
cmpb
sub
add
je
shll
and
pop
out
insb
sub
clc
ja
cltd
ret
mov
les
shlb
pop
xor
fnsave
mov
pop
sbb
xor
pusha
mov
inc
inc
cwtl
or
mov
enter
pop
cmp
or
sbb
xor
mov
inc
das
dec
pop
fsts
sbb
adc
xor
leave
sahf
jecxz
mov
mov
sbb
shlb
jne
ja
loopne
adc
fisttpl
or
inc
pop
pop
ss
mov
mov
and
ret
fs
mov
jle
sti
imul
test
les
movsb
xor
inc
add
or
pop
enter
jne
sub
cmp
pop
dec
push
mov
cmp
shlb
pop
mov
jg
rclb
cmp
orl
and
adc
scas
test
into
xchg
dec
adc
add
pop
popa
mov
cmp
jg
cmp
adcl
scas
jle
out
subb
lods
loopne
pop
fiaddl
and
mov
and
inc
faddl
sbb
retw
add
dec
jg
cmp
xchg
call
mov
jmp
adc
xchg
movsb
fmul
sbb
or
and
or
jl
add
and
mov
jb
lods
jo
jb
or
cmpsl
mul
mov
inc
and
mov
pop
aaa
pop
pushf
and
test
mov
jne
jae
js
cmp
jno
sub
pop
and
jns
rcl
in
bound
mov
gs
jmp
or
shll
es
lret
inc
and
and
jo
sti
insb
insb
and
aam
push
mov
adc
mov
mov
mov
jns
cmpl
nop
inc
pop
mov
push
mov
xlat
je
cmp
jg
adc
or
inc
and
add
add
inc
jl
lock
outsb
xlat
daa
movsb
mov
push
jmp
sbb
or
cwtl
and
clc
mov
jb
je
cmp
jle
mov
cmc
pop
xor
cmp
jbe
clc
push
push
or
movsb
in
push
xor
ret
push
inc
xchg
mov
rcl
jmp
das
xor
jbe
sti
insl
mov
and
mov
addl
pop
xor
jbe
outsb
sbb
pop
mov
pop
es
inc
es
test
sub
mov
sbb
pop
pop
insb
or
cmc
pop
sti
loopne
fs
orb
in
push
push
popa
stos
dec
lods
inc
sbb
gs
in
fstl
hlt
lods
mov
arpl
aad
mov
sbb
gs
jne
stos
dec
jns
mov
dec
test
add
and
enter
jne
add
inc
and
in
add
fisubrl
jge
mov
mov
fidivrl
push
daa
fldz
mov
xor
repnz
rclb
push
pusha
xchg
test
push
add
sub
xchg
push
mov
test
xor
andb
fistps
dec
pop
je
pop
and
fld
inc
xor
mov
test
fistps
xchg
mov
ds
mov
fsubrp
xchg
fstps
adc
les
adc
arpl
add
fucomi
sub
das
fcomp
jbe
bound
lea
push
and
pop
sbb
push
dec
lods
inc
and
in
dec
xchg
sbb
pusha
adc
xchg
pop
test
or
dec
cmpsl
xchg
lea
mov
mov
in
xchg
rorb
sub
cmp
or
addb
popf
je
xchg
lret
insl
mov
adc
in
xor
and
lcall
and
test
add
in
add
xor
in
or
adc
test
or
or
popa
pop
inc
inc
in
add
add
rcr
mov
jo
call
es
lock
pop
xchg
or
push
add
push
inc
fsubs
insl
xor
int3
pop
cld
jb
and
cmp
sahf
add
mov
test
mov
addr16
inc
pop
xchg
push
inc
xchg
jl
xchg
fmull
add
push
adc
or
mov
jnp
cmp
popa
and
xchg
xchg
int3
lock
dec
xchg
mov
je
roll
test
push
repz
rcr
mov
add
popf
add
inc
sbb
and
icebp
fadds
dec
in
nop
and
jp
popa
loopne
adc
xor
cmc
dec
pusha
into
or
lock
rorl
ss
jae
stos
cmp
adcb
or
imul
and
dec
mov
jl
and
in
inc
in
lcall
cmp
pop
mov
or
movsb
and
pop
pop
insb
pusha
das
xor
popa
or
enter
inc
lods
xor
push
nop
pop
mov
pop
les
adc
fwait
sbb
pop
es
mov
sbb
in
push
xor
jb
test
dec
and
jne
jl
push
js
xor
mov
imul
add
enter
xor
inc
mov
call
rcl
dec
adc
les
test
aam
rcl
imul
lcall
push
ret
jb
adc
cmc
clc
mul
andl
mov
adc
jl
lds
std
push
jno
pusha
fs
xor
and
insb
jo
leave
and
je
jl
or
sbb
inc
xchg
call
fwait
pop
adc
test
scas
sbb
jo
add
xchg
sti
adc
adc
in
xchg
imul
mov
aaa
testl
xor
ret
mov
in
jno
aam
cmp
adc
inc
xlat
xor
add
in
sti
gs
sbb
jns
call
imul
aad
insb
pop
jnp
stos
inc
orb
lea
jne
cmp
inc
fcompl
push
into
mov
and
ret
sbb
int3
push
mov
mov
popf
inc
loop
jp
cmp
adc
and
outsb
stc
popa
js
lods
add
or
push
pushf
int3
ret
test
cmp
add
test
loope
pusha
insb
push
pop
inc
ret
outsl
jae
push
dec
insb
cltd
adc
inc
mov
nop
insl
pop
jb
in
sbbb
push
popa
push
repnz
adc
inc
dec
add
lods
lock
arpl
test
inc
push
test
pop
push
adc
adc
add
loopne
pop
mov
nop
in
sbb
jp
imul
fs
and
lock
mov
xlat
mov
jg
mov
pop
and
or
test
mov
dec
in
cmc
add
push
fsubrl
sub
jne
test
xlat
imul
cltd
imul
sbb
and
xor
push
or
and
mov
add
test
and
call
enter
push
xor
or
in
sahf
iret
push
and
mov
xlat
and
rcrb
test
dec
push
pusha
repz
push
enter
cltd
adc
dec
add
jl
jp
fistpll
pop
and
pusha
adc
dec
add
cmpsl
xor
ficoml
call
lahf
fs
and
lcall
cltd
sbb
nop
and
mov
imul
stos
adc
or
and
adc
hlt
mov
fs
or
lods
add
or
and
testl
test
or
addr16
insl
sub
or
pusha
and
test
jns
adc
cmp
pushf
jecxz
ret
fwait
sbbb
and
std
push
adc
scas
mov
xor
jp
inc
lcall
shlb
add
dec
and
adc
aaa
or
inc
adc
aam
mov
and
inc
push
sub
in
add
cmp
jno
push
adc
mov
sub
dec
push
jmp
dec
in
and
sbbl
lret
subb
lcall
and
dec
xor
fs
addr16
popf
push
inc
loopne
ret
jne
sbb
pushf
and
pusha
insl
repnz
xlat
adc
and
push
stos
enter
leave
mov
leave
and
mov
sbb
aad
xchg
nop
and
loopne
sbb
mov
enter
and
pusha
aaa
add
popa
push
mov
jo
in
or
or
test
test
loopne
jbe
dec
leave
aam
pop
mov
sbb
add
dec
movsb
sti
xor
xchg
xchg
or
aam
fsubrs
in
add
adc
js
sub
dec
jmp
es
bound
sti
hlt
xor
sub
daa
test
rsqrtps
inc
mov
push
or
or
and
sti
cmp
stc
xchg
or
aam
in
cmp
cs
or
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
add
mov
sbb
enter
fwait
sbb
inc
sub
xchg
inc
jns
add
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
loopne
insl
mov
filds
xlat
and
sbb
push
or
xchg
jbe
cmpsb
mov
xor
and
mov
cmp
adc
dec
push
and
aad
xlat
test
mov
in
sbb
in
and
ret
sbb
lds
adc
adc
adc
or
orl
push
or
fdivl
and
pop
or
pop
or
xor
fmuls
mov
or
mov
cmpsl
or
xor
hlt
pop
or
iret
pusha
sub
mov
mov
push
pusha
test
add
add
and
jl
shr
pminsw
add
cmp
cltd
dec
leave
popa
mov
add
imulb
adc
dec
enter
dec
cmpsl
ret
adc
addl
push
sub
cmpsb
das
rcrb
mov
test
cmpsb
or
psubsb
loope
in
add
add
insb
adc
sub
pop
subb
lods
lods
lds
dec
sub
adc
add
xor
mov
aas
ja
cs
or
and
sbb
daa
adc
mov
das
add
xor
loopne
lock
pavgb
lret
stos
in
mov
push
push
or
mov
lea
sbb
pop
nop
imul
je
dec
mov
xlat
shll
sub
add
jne
and
jl
push
scas
in
iret
push
sbb
dec
lods
xor
mov
js
mov
jne
jge
movsl
lods
loop
frstor
aaa
rolb
or
pop
inc
loopne
add
jns
stos
outsb
inc
push
jns
xor
dec
dec
inc
shrl
or
xchg
js
js
adc
jns
lods
xor
loopne
ret
lods
inc
or
or
test
and
inc
mov
nop
outsl
adc
sbb
mov
xor
in
cmp
dec
or
es
cmp
adc
push
inc
push
cmp
or
or
pop
push
or
jno
add
mov
mov
cmp
lods
lret
dec
xor
inc
js
lock
scas
mov
inc
push
mov
pushf
stc
jo
jb
pop
stc
cwtl
and
jmp
sbb
add
sub
and
pop
lock
jne
pop
xor
or
push
mov
lock
bswap
ss
xor
shr
mov
adcb
mov
cmp
int3
pinsrw
cmp
mov
pop
jnp
dec
pop
inc
int3
fistl
push
rorb
pop
aam
add
ret
fistpll
mov
nop
lret
orl
push
inc
ja
rclb
pop
or
jp
mov
push
xor
cmp
andl
add
push
cmpsl
insb
inc
cmp
pop
xlat
sarb
sbb
jg
fdivrl
push
test
pop
cmpsl
jmp
loopne
xlat
add
aam
cmp
seta
and
mov
push
insl
stos
lea
mov
adc
int3
jb
cmpsb
imulb
unpcklps
aam
test
cmp
cmpsl
sbb
jne
aas
mov
jo
xchg
xor
pop
cmc
fsts
ljmp
in
das
les
xor
aam
jno
jbe
lods
fwait
mov
ficompl
add
arpl
test
sub
out
mov
dec
ss
cmp
xchg
sub
sbb
jl
inc
inc
nop
lods
xor
mov
pop
inc
outsb
cmp
mov
inc
jno
mov
adc
pop
jge
pop
lods
insl
ja
sbb
push
and
movsb
fadds
enter
inc
jo
cmp
mov
jns
pop
sarb
and
in
xor
imul
jb
mov
xchg
jae
xor
int3
mull
aas
inc
movsl
push
test
push
xchg
aam
sub
inc
mov
insb
ja
aas
mov
mov
sbb
hlt
aas
inc
dec
pop
jb
and
and
push
push
mov
scas
or
sbbl
xchg
push
lea
enter
aas
and
mov
xchg
push
roll
cmp
cmpsl
in
outsl
pop
inc
stc
jo
and
inc
xchg
jge
inc
pop
mov
push
lea
push
xchg
cmpsl
fdivr
in
insb
pinsrw
cmp
add
dec
adc
mov
lock
inc
jno
xchg
mov
inc
test
test
and
gs
addr16
jns
test
dec
in
jo
xchg
and
xor
and
xor
mov
xor
arpl
xchg
gs
pop
out
jo
hlt
jne
or
adc
push
mov
xor
sbb
leave
aam
inc
rol
inc
adc
cwtl
sbb
xor
add
pusha
std
mov
jb
add
or
fdiv
aad
pop
sub
inc
sbb
mov
aad
inc
in
andl
test
push
xchg
dec
mov
xchg
popa
pop
fdivr
fcomps
inc
dec
popa
aad
outsl
push
loopne
sbb
pop
cmpsl
dec
cs
mov
addr16
stos
add
cmpsl
les
loopne
xchg
jl
call
pusha
push
test
and
mov
and
or
add
or
jne
pop
sub
jo
dec
adc
cltd
ss
mov
adc
or
pop
in
test
push
aam
dec
inc
and
dec
push
in
xchg
mov
in
mov
mov
mov
inc
movsl
aam
int
or
repz
rorb
xchg
pop
daa
cwtl
xor
test
lret
push
adc
add
movsl
sbbl
enter
jb
cmpsb
xchg
lret
pop
dec
xor
sbb
arpl
add
mov
mov
rolb
mov
gs
not
add
sub
adc
add
in
aaa
jg
push
mov
aam
test
mov
inc
mov
mov
scas
mov
jbe
aam
movsb
or
ret
int3
test
les
rcl
cmp
sbb
dec
nop
inc
lds
divl
in
push
aaa
lock
cmp
adc
mov
pop
fmull
dec
push
lock
xchg
or
sub
sub
adc
les
push
adc
inc
les
dec
push
or
or
add
mov
test
dec
leave
xchg
test
movups
xchg
movsl
push
jne
sbb
sbb
adc
aas
mov
arpl
loop
dec
inc
das
jo
push
lock
xchg
lds
inc
stos
pop
clc
jne
push
cmp
in
dec
gs
or
js
push
sub
push
xchg
lock
mov
or
jb
mov
lods
lods
mov
movsb
test
test
and
pusha
push
mov
daa
or
lahf
sbb
mov
int
pop
or
and
and
js
test
orb
enter
gs
xor
push
adc
xorl
imul
nop
push
mov
bound
inc
push
outsb
mov
aaa
dec
int3
pop
or
popa
inc
fadd
pop
add
lock
test
push
or
sbb
loop
jne
add
pusha
and
pop
push
in
movsb
lret
adc
xor
dec
xchg
inc
adc
int
mov
jbe
dec
cwtl
inc
xchg
adc
les
andl
in
sbb
test
fldt
push
mov
test
hlt
push
or
push
sub
pop
inc
mov
or
in
enter
aad
pop
mov
rcrb
test
rclb
pop
xor
pop
lret
add
sub
fmull
test
pop
push
xchg
inc
mov
nop
shr
aas
xor
loopne
int3
mull
mov
and
sarl
push
jge
lods
in
imul
mov
movsl
push
faddl
addb
loopne
push
mov
push
jns
push
adc
xor
add
inc
push
or
jo
movsb
mov
pcmpgtb
sbb
push
dec
cli
jo
adc
xchg
ret
ret
pop
insb
xchg
mov
pop
cltd
push
adc
push
sub
cli
and
pop
call
and
or
and
mov
mov
mov
inc
adc
sub
jecxz
mov
clc
xor
push
push
pop
pop
icebp
repnz
pop
enter
mov
adc
in
inc
inc
mov
jp
idivl
sbb
loop
or
mov
jnp
adc
fisubl
insl
cmpsb
sbb
push
pusha
adc
dec
push
dec
es
sbb
inc
cmp
es
fs
sub
push
test
xor
xor
add
fcoms
adc
or
add
sub
lods
or
icebp
sbb
loop
inc
enter
push
movsb
adc
cmp
pop
inc
or
and
lea
sbb
pop
mov
pop
dec
leave
mov
cmp
mov
mov
xchg
mov
addl
add
pop
jecxz
cmp
and
add
xchg
js
inc
test
cmp
notb
jne
xor
std
lcall
js
insb
out
jge
aaa
mov
xchg
cwtl
pop
int3
push
pusha
inc
fiaddl
pop
add
and
or
inc
es
jmp
movsb
fimull
aam
pop
dec
inc
mov
iret
ret
leave
insl
inc
sub
mov
cli
sbb
pop
jle
sbb
jb
push
out
mov
jne
xchg
add
sub
cs
add
mov
fcoml
inc
int3
fwait
cwtl
xor
int3
and
pop
dec
daa
pop
jb
rcl
adc
aam
addr16
xor
pop
cwtl
jo
inc
pop
cmp
popf
xchg
dec
cmp
adc
adc
fs
inc
inc
shrl
sbb
and
add
pop
or
pop
rcl
mov
dec
enter
and
imul
movsb
sub
faddl
leave
arpl
add
sbb
inc
jb
pop
je
and
rorl
adc
loopne
mov
ret
inc
nop
arpl
and
arpl
out
clc
dec
adc
test
mov
dec
inc
fs
push
adc
jo
dec
mov
dec
pusha
das
movsb
ja
sub
inc
xchg
fs
adc
loope
test
jo
test
mov
xchg
nop
mov
xor
sbb
mov
orl
mov
xchg
push
sub
insb
pop
ljmp
pop
adc
mov
inc
dec
sbb
test
xor
std
add
add
sti
pusha
stos
mov
adc
sbb
push
mov
lds
pop
and
mov
xor
test
inc
daa
insb
push
xor
inc
dec
les
mov
dec
fisubl
fcoms
dec
push
nop
imul
enter
ficoml
jae
add
test
imul
nop
fnstenv
xor
shlb
push
stos
xor
cmpl
jno
movsb
push
mov
lcall
add
loopne
add
dec
xor
add
imul
insl
lock
ret
jo
in
and
xchg
orb
adc
test
ja
test
add
adc
mov
cmpsl
cmpsb
inc
iret
addps
inc
mov
adcb
cmp
leave
xchg
imul
mov
pop
pop
ret
pop
or
sub
inc
ret
add
adc
jbe
out
cmpsb
pusha
shrl
xlat
push
adc
pop
or
stos
fldl
pop
in
in
aam
mov
push
in
sbb
out
fildll
mov
das
aam
sub
movsb
rorl
mov
jg
xchg
mov
shl
lds
outsl
int3
jns
sbb
in
jo
cwtl
push
movsb
or
fcoms
mov
fcoml
mov
dec
inc
pop
and
pusha
test
dec
mov
adc
mov
test
sbb
dec
jb
mov
dec
adc
add
je
subl
or
ret
push
dec
rorl
or
addb
lcall
inc
lds
outsl
shlb
inc
xor
scas
lahf
pop
rorb
aam
les
pop
adcb
nop
sbb
mov
nop
add
add
nop
push
test
add
mov
sbb
pusha
sbb
test
inc
inc
jecxz
xor
mov
adc
leave
and
lods
push
mov
and
dec
test
xchg
dec
xor
xchg
dec
xor
test
cwtl
nop
dec
xor
and
js
and
and
aam
xor
dec
fcmovne
outsl
pop
decb
in
insb
jmp
pusha
inc
shl
jns
cmpsb
dec
mov
fcoms
xchg
mov
mov
inc
adc
je
mov
cltd
repz
inc
sbb
rcl
test
adc
movl
insb
je
cmp
xchg
jl
test
mov
movsb
lods
in
inc
push
mov
les
aam
push
add
mov
cwtl
js
mov
adc
push
mov
mov
adc
in
sub
addb
in
es
and
cmp
int3
pushf
pushf
pushf
pushf
les
pushf
movsb
pushf
xchg
mov
xor
je
dec
es
insb
fs
push
push
adc
in
mov
xorb
movsl
sub
orb
ds
pop
pop
test
pop
enter
aad
dec
mov
lods
inc
aam
inc
test
adc
mov
pop
fisttpl
test
in
mov
dec
push
arpl
cmp
pusha
leave
mov
andb
cwtl
sbb
mov
dec
inc
movb
in
or
movsb
pushf
imul
fldl
test
pop
xor
xchg
jmp
fcoml
clc
js
mov
sub
add
dec
sub
jb
das
sarb
xchg
pop
in
jns
shlb
aad
inc
inc
testl
es
movsb
adc
sbb
pushf
fs
adc
pusha
not
xchg
imul
out
cmp
add
adc
test
cmp
mov
adc
mov
sub
mov
imul
and
lds
push
cltd
pop
scas
sub
push
sub
jbe
lods
sub
push
and
add
mov
pop
mov
push
or
lcall
lea
mov
out
fcoms
invd
sbb
xchg
dec
aas
outsl
mov
inc
inc
fadds
aam
add
pop
jno
sbb
jl
or
jmp
xor
and
popl
sbb
sar
mov
int3
or
jge
cmpsb
lea
cmp
sub
ss
sbb
daa
sbb
das
xchg
sbb
add
mov
xor
pushf
insl
xor
adc
enter
or
mov
fmul
les
xchg
fs
stc
les
arpl
imul
test
jl
push
nop
inc
jo
adc
and
pushf
xchg
mov
sbb
sbb
lock
and
cmp
in
mov
pop
ret
add
andl
sub
xchg
or
movsb
add
insb
leave
jle
dec
push
xor
movsb
sbb
movsb
adc
adc
orb
ljmp
mov
inc
jo
and
xor
lock
repz
sub
nop
imul
mov
imul
jl
add
nop
pushf
mov
pop
dec
insb
leave
movsb
mov
sbb
mov
or
and
and
nop
push
rol
mov
xchg
jno
mov
or
mov
dec
or
sbb
in
jecxz
test
xor
or
popf
xor
in
adc
mov
inc
push
and
adc
insl
hlt
cltd
inc
add
add
inc
jno
repz
insl
push
pop
sbb
xchg
add
adc
add
sub
add
les
xor
sub
clc
mov
cmp
cmp
add
icebp
sar
sbb
lds
xchg
inc
popa
mov
shlb
inc
in
int3
in
ret
in
mov
lahf
orb
xor
mov
rcr
sub
and
push
pusha
push
roll
sub
push
xor
shrb
scas
dec
shrl
adc
inc
lea
jp
pop
xor
das
cmp
mov
jg
cmp
sbb
mov
rorb
nop
mov
push
aas
out
and
pop
add
jmp
mov
loope
add
xor
fld1
mov
sbb
mov
movsl
or
jp
dec
leave
cmpsl
adc
mov
test
xchg
imul
inc
and
scas
imul
adc
dec
test
and
sbb
lods
dec
dec
jno
jne
mov
sbb
and
or
test
pop
pusha
inc
mov
adc
es
jecxz
or
sub
adc
idivl
testl
fwait
mov
gs
lcall
push
pushf
lcall
push
inc
mov
pusha
mov
rep
negl
inc
mov
mov
enter
add
popa
and
stos
or
arpl
mov
adcb
scas
xchg
push
cmp
cltd
adc
movsb
push
scas
or
pushf
aam
imul
mov
sbb
inc
mov
push
jo
xorl
sbb
movsb
pusha
insl
add
js
pushf
mov
mov
and
xor
or
mov
jge
sub
mov
mov
add
subl
fmull
xchg
arpl
or
xor
in
movsl
mov
subl
and
enter
call
lcall
lods
pop
pop
sbb
push
jns
bound
adc
jmp
test
xchg
and
dec
daa
push
jl
mov
scas
test
dec
xchg
push
leave
cwtl
fldt
test
or
pop
je
cmp
sbb
and
cmpsb
repz
inc
add
movb
sbb
lds
shrb
dec
xor
shll
pusha
cmp
dec
or
xchg
cmp
push
nop
cmp
shlb
xchg
sbb
lods
out
mov
xor
cmp
mov
shrl
lods
pop
sub
addb
or
pop
inc
movb
or
out
int
fcmovbe
inc
xchg
bound
sbb
sbb
jno
xchg
orl
mov
mov
add
in
pop
nop
test
ret
scas
jne
insl
ret
inc
add
or
xor
push
ret
dec
test
lods
pusha
and
push
and
add
or
mov
js
mov
jecxz
lds
les
adc
lods
adc
fs
mov
icebp
movsb
push
push
sbb
mov
or
pop
repnz
mov
jno
pop
test
sbb
and
cmp
mov
pxor
pop
in
add
test
nop
sub
push
int3
or
mov
movsb
pop
in
or
cwtl
cmp
mov
test
std
fdivp
push
push
inc
mov
xor
xchg
hlt
dec
xor
inc
sbb
cmp
or
xor
pop
mov
sahf
xchg
insb
push
cld
and
inc
lock
lret
xor
inc
jl
fidivs
ds
sahf
or
mov
and
xor
jge
loopne
cmpl
push
or
cltd
push
sbb
inc
jbe
jle
adcb
sbb
movb
xchg
imul
push
imul
repnz
sbb
rorb
mov
jno
and
call
ss
and
pop
add
les
sahf
add
and
dec
push
scas
push
movsb
icebp
call
add
inc
mov
loop
inc
jo
sub
cld
mov
inc
cmpsb
sbb
hlt
mov
sbb
push
sub
mov
leave
sbb
cmp
in
nop
orl
mov
les
es
or
sbb
sub
jl
jo
addl
cmp
push
out
pop
mov
and
ds
add
push
inc
dec
mov
fdivl
ds
daa
push
xor
sarl
pusha
mov
mov
idivl
adc
push
inc
pop
mov
cmp
ja
mov
add
fsin
push
inc
add
rolb
lret
dec
add
jmp
add
arpl
jl
push
jmp
xlat
lcall
cltd
cmp
inc
orb
jnp
mov
add
ljmp
adc
mov
rcll
xchg
adc
or
cmp
rclb
xor
dec
jns
mov
test
add
nop
add
into
pop
adc
test
dec
divl
push
push
fiaddl
divl
dec
dec
lret
push
cmpsl
stc
xor
lea
dec
fwait
sub
test
cwtl
add
and
add
movzbl
fsubrs
andb
mov
popa
insl
mov
bound
and
insb
outsl
arpl
imul
insl
mov
lods
jb
sub
popa
arpl
jne
jb
jbe
popa
outsb
je
add
add
push
insl
adc
mov
push
inc
outsl
jb
js
outsb
div
imul
add
or
outsl
fcomip
scas
sarl
add
add
jne
mov
je
imul
dec
push
sbbl
add
aaa
mov
cmpsb
orl
inc
xor
inc
push
cmp
jo
mov
push
and
jmp
dec
add
sub
push
insl
addl
je
and
jae
out
imul
fisttpl
fs
cmpsw
mov
push
push
or
bound
jns
push
jne
imul
or
jbe
aas
fsubrp
imul
jp
outsl
or
mov
or
gs
fstpl
addr16
and
outsl
jmp
and
add
jne
int
lret
stos
insl
sub
push
imul
and
scas
ja
cmp
pop
fdivrl
push
data16
push
mov
outsb
dec
sub
xchg
ds
jp
sub
insb
adc
repz
push
sbb
xchg
jecxz
push
inc
arpl
or
inc
daa
dec
jbe
js,pn
sbb
fbstp
outsb
bound
xchg
aaa
adc
sbb
jo
arpl
mov
jo
push
xor
scas
push
lds
sbb
fbld
mov
filds
push
das
jb
mov
xchg
popa
ret
fidivrl
cs
leave
push
xor
xor
nop
andb
xorl
fidivrl
jg
loope
mov
popa
sub
shll
lahf
je
inc
lds
jg
dec
and
sub
iret
fbstp
cs
fbstp
jne
jbe
jb
push
push
data16
pop
inc
sbbb
jg
xlat
xchg
scas
pop
stos
bnd
das
roll
jae
pop
sbb
ljmp
push
jo
lahf
outsl
aas
arpl
sbb
iret
arpl
sbb
mov
xlat
popl
pop
and
aaa
insl
lret
sbb
jecxz
stos
fs
imul
test
pop
rcll
dec
fbld
psubb
popa
leave
xor
add
xchg
push
jmp
mov
pop
add
adc
pop
cltd
idivb
je
scas
cmp
mov
lea
jae
subb
pop
pop
jecxz
push
and
rcrb
dec
andb
imul
add
into
sub
jns
sahf
sbbl
inc
mov
dec
imul
out
lcall
sbb
sarl
sbb
stos
xor
jae
push
pop
sahf
push
sbb
sbb
and
pop
js
jns
imul
push
cld
and
decl
cmpsl
out
dec
aaa
add
mov
andl
jp
les
add
push
mov
dec
jb
fcmovne
add
ret
outsb
pop
mov
xchg
gs
xchg
ja
ds
cwtl
xchg
pop
mov
shll
cmpsl
fnstsw
mov
fwait
cmp
dec
add
sbb
xor
in
fsubr
pop
add
and
add
das
lods
xchg
fsubrs
das
and
and
jbe
out
fcoms
cs
inc
and
lods
xor
jmp
push
fbld
idivl
inc
sub
mov
lods
icebp
push
push
daa
mov
scas
ret
ds
daa
outsl
dec
pusha
add
imul
inc
arpl
inc
mov
pop
pop
imull
insl
out
iret
jns
out
out
cmp
push
bound
mov
arpl
pop
lock
jnp
inc
jae
push
and
pusha
fbld
sub
pop
dec
insl
imul
fbld
ds
neg
fdivs
mov
iret
mov
mov
es
cmp
cmp
idivb
sub
dec
and
jns
add
lahf
jmp
addr16
push
inc
inc
mull
clc
arpl
bound
dec
outsl
jbe
dec
arpl
sbbl
inc
inc
jo
sub
addr16
xor
jne
xchg
outsb
xchg
inc
jo
imul
bound
inc
popa
cmp
fdivrl
scas
cmpsl
xchg
out
jnp
popl
ja
std
int3
fnsave
inc
popa
je
jb
xor
outsl
imulb
gs
sbb
dec
outsl
out
insl
mov
jbe
ror
cmp
aas
add
out
fldl
mov
mov
and
fildll
push
push
inc
push
mov
insb
jne
inc
inc
mov
test
loope
or
dec
xor
and
sub
sub
cs
pushl
xor
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
sbb
push
push
mov
pop
pop
pop
pop
pop
hlt
pusha
popa
bound
gs
addr16
insl
outsb
outsl
jo
add
jbe
js
jp
outsw
mov
jl
jle
dec
adc
lcall
loopne
inc
xchg
dec
and
add
cmp
in
jnp
rorb
ljmp
lret
jno
icebp
pusha
inc
mov
aas
lea
clc
ret
movsl
add
xorl
mov
imul
xchg
das
cmp
es
jae
add
jo
xor
out
js
addl
lods
dec
pop
jne
sbb
out
ret
sbb
adc
sub
je
sub
adc
adc
add
add
add
lds
xor
cmp
push
pop
xchg
mov
add
xor
pop
hlt
and
repz
add
pusha
push
add
mov
mov
inc
add
or
xor
sbb
sub
addb
push
xchg
test
add
and
adcb
pop
daa
push
cmpb
sahf
jge
push
push
and
sub
jb
int3
push
add
mov
cs
cmpsb
call
ja
and
mov
jo
add
pop
adc
xor
lcall
leave
rorb
add
leave
and
mov
nop
xchg
xchg
dec
es
xchg
mov
mov
push
mov
cmc
popf
dec
daa
cmpsl
inc
scas
mov
jne
out
add
push
stos
aad
lods
mov
cmc
jp
repnz
sbb
mov
pop
sbb
out
out
or
cmp
rdtsc
ss
jmp
push
dec
dec
inc
dec
inc
adc
notl
mov
xchg
je
hlt
jbe
mov
dec
bound
je
outsb
data16
fstl
insl
xor
ss
out
je
xor
fistl
rclb
jo
pop
sar
jae
lea
mov
outsl
js
push
testb
and
insl
jo
jo
mov
fldenv
int
dec
xchg
shlb
aaa
insb
in
pop
or
les
dec
imul
mov
or
inc
cmp
dec
inc
jb
imul
cmpsl
cs
stos
ss
jns
mov
mov
outsb
lock
and
arpl
je
and
push
rcrb
mov
outsb
jle
jbe
mov
push
xor
outsb
pop
jb
divl
sbb
and
xor
incb
pusha
aaa
push
jns
inc
ss
lods
jp
mov
mov
pusha
xchg
pushw
popl
cs
mov
cmp
pop
and
push
sbb
xchg
pop
daa
bound
insl
adc
dec
test
pusha
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
pop
in
cmp
cmp
sub
hlt
clc
addr16
or
mov
das
outsb
gs
mov
add
icebp
jbe
mov
in
adc
inc
push
push
push
push
dec
testl
push
jne
repnz
push
push
ret
push
lods
filds
lea
dec
dec
jge
adc
ds
jle
jb
xor
and
push
imul
mov
jg
inc
adc
adc
in
xchg
or
clc
mov
sbb
bound
push
inc
jg
loop
testb
mov
das
je
outsl
pop
loope
insb
xchg
daa
xchg
mov
ds
jnp
popw
pop
cmp
cmp
repz
fisttpl
ds
and
sub
ret
je
jl
push
addr16
jle
addr16
je
cmp
dec
add
sub
pop
adc
jnp
or
sbb
das
push
jb
call
aaa
and
push
mov
xchg
xchg
fcmovbe
mov
outsb
stos
addr16
push
fstpt
addl
adc
xor
or
pop
shll
pop
mov
int3
lock
dec
sbb
mov
xchg
inc
jo
cmp
and
push
jl
repz
sub
pop
cs
add
cmp
repz
xor
adc
cld
mov
lock
push
call
out
push
push
aam
int3
repz
cmpsl
mov
mov
lods
sahf
out
fldt
mov
cmpsl
stc
push
test
mov
push
cmpb
sahf
out
jo
push
sahf
out
pop
push
push
dec
lahf
out
sahf
inc
xor
and
cld
sub
iret
repz
enter
imul
or
sub
out
sahf
out
xorb
lahf
out
sahf
push
xor
sbb
lock
repz
test
pop
sub
repz
repz
sub
push
pushf
jo
repz
xchg
jg
push
and
adc
sub
push
dec
aam
in
push
pop
add
sub
dec
mov
push
test
add
pop
sbbb
popa
or
xchg
lods
stos
mov
add
cmp
push
mov
and
add
mov
dec
adc
add
dec
pop
add
mov
in
xchg
add
pop
fildll
xchg
sub
fdivrl
add
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
movsb
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivrp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pop
or
jmp
loope
add
test
sub
popa
stos
add
and
xchg
jo
pop
pop
outsb
gs
popa
inc
pop
out
inc
movsl
shlb
outsb
push
xor
sub
jb
jbe
mov
jns
outsl
dec
arpl
fstpt
lock
insb
fs
sbb
popf
ljmp
cmc
jp
push
setl
add
xor
push
inc
adc
fnstsw
rclb
push
xor
push
dec
inc
dec
cmovns
data16
loop
inc
das
push
adcb
adc
sub
adc
mov
popa
into
mov
mov
jg
inc
jnp
inc
loop
mov
ds
pop
adc
jmp
iret
aas
clc
lret
sbb
jb
jge
arpl
fstpt
pop
pop
dec
scas
jp
jno
in
fstl
jg
jg
mov
and
cmp
dec
imul
incl
lret
add
inc
mov
mov
sub
sarb
sahf
fwait
ss
sbb
pop
jns
ds
xor
jg
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
idivl
cld
push
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
dec
xchg
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
dec
xchg
pop
mov
out
leave
ljmp
addb
or
or
scas
int
mov
leave
hlt
sti
jg
mov
sahf
xchg
dec
add
scas
lods
dec
lock
xor
pop
daa
in
mov
icebp
pop
pop
repnz
jg
aas
and
es
sbb
sub
fadd
add
outsl
inc
ja
mov
inc
outsb
push
out
jne
dec
jo
scas
xlat
dec
out
test
inc
sub
popa
sbb
push
into
adc
push
push
insb
fdivrs
mov
das
pusha
and
fmuls
fdivrs
pop
dec
xchg
mov
and
popa
mov
mov
out
sbb
sbb
outsb
imul
and
inc
jae
xlat
scas
or
ficomps
roll
jg
pusha
dec
loopne
pop
fs
nopl
or
clc
mov
mov
and
je
pop
imul
jae
inc
xchg
loope,pn
and
aad
sti
jmp
js
out
push
xchg
lret
xchg
or
or
loop
addr16
imulb
jb
add
mull
push
or
lahf
ja
movsb
pop
jo
cmpsb
outsl
addl
xchg
repnz
insl
jle
add
push
pop
cmpsl
mov
inc
sub
clc
sub
arpl
loope
js
adc
sub
pop
out
adc
aaa
push
mov
jb
push
sbb
mov
in
dec
mov
das
cmpsl
cmp
ret
jecxz
or
jae
add
sbbl
xchg
xlat
cs
icebp
mov
mov
cmpsl
mull
loope
adc
sbb
mov
push
sub
cmpsl
dec
mov
aad
ja
inc
adc
mov
sbb
cmp
pop
pop
mov
out
jnp
jne
adc
dec
lcall
push
push
pop
mov
imul
push
es
inc
sbb
ds
cmp
mov
cmp
inc
mov
sub
add
xchg
inc
sub
cld
arpl
dec
dec
decl
lock
fstpt
xchg
gs
aaa
jbe
xchg
dec
dec
jp
add
xchg
aaa
lcall
fwait
insb
jns
pop
jge
pop
dec
mov
mov
pop
jmp
xor
out
ror
not
addr16
je
and
dec
pop
xor
aas
arpl
daa
jo
mov
arpl
add
faddl
frstor
jne
xor
and
sub
ja
arpl
push
sbb
pop
fnstsw
sbb
mov
sbb
push
xchg
inc
fldt
mov
push
pusha
mov
or
aas
arpl
bound
sub
adc
sub
inc
pop
mov
add
cmp
jo
add
jo
in
add
loop
mov
je
fwait
clc
clc
addr16
push
cli
popf
jl
lock
push
arpl
cmp
lods
pop
call
pop
or
ds
mov
jae
add
pop
or
or
js
xchg
sbb
je
jae
loope
std
and
mov
push
adc
mov
pop
enter
or
sub
pop
jnp
stos
test
pusha
das
push
and
push
mov
push
mov
ja
bound
cmp
dec
out
mov
mov
jae
pop
js
icebp
or
jne
add
jle
xor
dec
pop
outsl
dec
or
sbb
inc
xor
adc
adc
addr16
mov
sahf
push
pop
xchg
daa
cwtl
pusha
add
das
outsb
out
jb
push
push
cmp
sub
or
ds
add
out
pop
push
fiaddl
fiaddl
jp
jae
push
pop
mov
addr16
shl
push
sti
and
xor
mov
bound
testl
inc
xor
add
outsl
jmp
and
daa
lahf
add
adc
ja
addr16
outsl
jb,pn
pop
adc
add
adc
dec
rorl
out
inc
push
inc
scas
out
jnp
mov
arpl
dec
dec
in
loope
insb
xchg
inc
inc
dec
cmp
ja
sbb
jmp
in
inc
shll
ss
imul
mov
outsb
dec
pushf
mov
jge
clc
sbb
pop
je
pop
dec
pop
icebp
jmp
insb
aas
pop
sbb
pop
scas
inc
bound
call
mov
lods
pop
mov
ja
xchg
inc
arpl
pop
pop
bound
adc
push
aas
testl
jle
inc
mov
mov
mov
xchg
push
loopne
jmp
pop
jnp
jl
imul
push
mov
sbb
and
addr16
bound
das
mov
push
das
mul
jno
add
mov
cmp
jns
jo
jae
jl
push
sbb
push
scas
ficoms
pop
jnp
sbb
scas
xor
jmp
es
xlat
pop
icebp
into
ja
add
ja
jnp
cmp
outsb
mov
and
lahf
pop
arpl
jnp
push
inc
and
jno
loop
cmp
pop
fsubrl
outsl
lret
jl
mov
or
jns
inc
or
or
lock
mov
ds
addr16
or
fs
mov
imul
jno
add
push
xchg
jl
inc
or
lods
repnz
sbb
jl
arpl
mov
xor
aas
addr16
imul
adc
ljmp
outsl
roll
rol
fisttps
divl
sbb
inc
jl
xor
jae
dec
out
xchg
or
inc
jns
lcall
jae
movsb
sbb
pop
fistps
adc
ja
mov
cli
add
mov
test
aaa
pop
pop
clc
jne
imul
inc
pop
in
roll
push
ret
insb
roll
dec
in
push
popa
mov
addb
pop
push
es
dec
fcompl
jle
das
addr16
pop
mov
mov
add
xchg
test
mov
lods
jle
push
sub
push
add
xlat
jl
sub
add
out
sbb
hlt
lret
cmp
pop
test
fldcw
inc
push
push
inc
or
push
mov
mov
push
mov
pop
ds
push
jp
divl
iret
out
push
cmp
out
jne
insl
mov
pop
push
push
cmpl
fnstcw
cs
lret
pop
cvtps2pd
fst
jl
pop
out
inc
pop
mov
cs
mov
aas
pop
cmp
jl
test
pop
out
pop
push
mov
push
ficoms
sbb
mov
call
cld
sbb
push
fcoml
out
pop
cmp
cmp
sarl
or
dec
push
outsb
ja
rolb
lock
mov
inc
ja
xor
scas
mov
jae
outsl
adc
mov
jo
jns
daa
fwait
icebp
pusha
or
xchg
dec
cli
ret
cmpsb
push
push
or
arpl
pop
push
or
insb
lret
cmpl
sti
aas
pop
popa
jl
aad
push
jae
fisttps
popa
outsb
arpl
push
gs
insl
push
pop
out
pop
pusha
push
popa
jne
or
and
ss
push
dec
bound
xor
ficompl
and
jae
aaa
mov
mov
je
je
push
js
jl
ds
rep
scas
xlat
pop
jne
cmp
int
pop
jne
cmpsb
push
mov
mov
repz
jbe
cmpsl
imul
es
bound
addr16
loopne
cmpsl
into
xchg
aaa
cltd
clc
dec
xor
gs
shrl
je
cmp
ds
outsl
push
jo
jb
out
jb
in
pushf
mov
mov
and
jae
sbb
ds
incb
and
and
arpl
xor
adc
outsl
sti
cmp
fs
adc
add
adc
mov
scas
push
sbb
je
ss
cmp
adc
data16
outsl
stos
mov
fsubrs
sbb
ja
adc
aaa
or
cmp
sbb
and
add
xchg
sub
imul
cmpsl
xchg
sub
popw
push
scas
ja
fdivl
dec
push
lfs
xchg
lcall
or
inc
sarb
or
insl
pop
pop
addr16
inc
or
xlat
mov
cmc
insb
inc
dec
push
and
nop
cmp
cmp
insb
int
js
mov
sub
mov
xor
pop
push
es
fwait
outsb
push
sub
mov
sub
out
or
into
push
pop
pop
jmp
call
or
call
sub
sub
dec
xchg
shlb
sub
aas
into
pop
lret
mov
ja
add
push
and
mov
fdivl
mov
lcall
xor
and
jle
sub
adc
sub
add
push
add
dec
adc
dec
mov
inc
xadd
test
or
or
rcrb
bound
pop
pop
mov
add
addr16
daa
cmp
dec
daa
dec
fisttps
loope
mov
stos
push
inc
ja
lods
add
iret
imul
lea
pusha
stos
filds
mov
mov
movsb
xor
xor
fimuls
scas
mov
push
sub
imull
mov
data16
add
outsl
iret
imul
jecxz
dec
pop
fidivl
pop
je
add
mov
cmp
int
add
stos
xor
mov
aaa
and
maxps
cs
imul
stos
testb
outsb
jae
inc
stos
jno
push
jp
arpl
pop
xchg
divb
dec
test
sbb
les
lahf
bound
inc
arpl
addl
cli
scas
pop
jb
fs
cs
jb
add
icebp
lcall
scas
loop
inc
sub
fwait
dec
mov
fiadds
or
dec
mov
push
lret
mov
fists
stos
inc
ja
mov
pop
add
imul
inc
fwait
jmp
test
in
jae
repz
adc
adc
loopne
aas
push
sbb
dec
decb
xorl
popa
fisttpll
insl
aas
fists
imul
das
ret
add
xchg
xchg
loopne
mov
jg
push
inc
pop
lods
lea
aas
sbb
add
ljmp
pop
and
or
stos
xor
pop
js
insl
addr16
mov
cmp
int
rolb
lods
dec
dec
mov
and
jmp
dec
xchg
dec
movsb
lahf
bound
mov
pop
xchg
fimull
insl
xchg
mov
xor
js
mov
dec
push
or
test
out
or
pop
mov
dec
jne
lret
sub
test
jmp
stos
ljmp
lahf
lcall
pushf
or
jle
lods
inc
xchg
inc
cmp
sub
sbb
scas
jle
icebp
out
cmp
imul
rcll
fs
sbb
stos
pop
mov
pusha
mov
addr16
inc
mov
lret
mov
arpl
imul
sub
aas
sub
mov
roll
out
rcr
mov
aaa
lret
sti
jbe
mov
arpl
jno
push
xchg
jb
ret
outsb
pop
das
xchg
mov
arpl
xchg
pop
inc
push
dec
xchg
movsb
mov
lock
roll
ret
fisttpl
pop
or
outsl
ret
mov
dec
add
dec
ret
ret
mov
sti
fldt
arpl
mov
daa
insl
scas
lcall
xchg
xlat
dec
or
mov
stos
jne
pop
inc
outsb
cmp
sbb
fs
ficomps
adc
push
push
xchg
hlt
or
loopne
insb
mov
lods
je
stos
jbe
ret
sbb
mov
pop
cmp
inc
aam
stos
inc
push
pop
ss
adc
jb
push
outsl
push
notl
jb
xlat
pop
push
faddp
xor
push
inc
fstpt
test
mov
xor
add
add
jmp
xor
je
into
fcomps
lahf
aas
xor
fdiv
or
es
in
sbb
outsl
sub
dec
pop
imul
cmpsl
stos
test
iret
sub
or
jecxz
pop
mov
xlat
sbb
je
mov
imul
or
int3
sbb
sbb
mov
dec
dec
sub
pop
adc
inc
xchg
arpl
stos
xlat
cmp
popaw
push
xchg
addr16
shlb
fs
loopne
mov
arpl
imul
ljmp
test
add
push
cmp
test
pop
testl
xor
push
enter
add
xor
push
outsl
test
das
cs
insl
das
outsl
push
inc
dec
mov
xor
ja
xchg
popa
adc
adc
mov
ss
add
mov
push
dec
mov
out
cmp
stos
push
sbb
dec
dec
push
iret
push
adc
cmpsb
pop
outsl
stos
and
out
lods
setg
push
mov
pop
sahf
xor
add
dec
call
lret
cmp
jl
lahf
pop
pop
popa
xchg
mov
and
xchg
inc
pushf
or
test
add
mov
xrelease
or
out
mov
orl
adc
nop
add
cmp
pop
pop
cmp
cmp
inc
mov
pop
add
jae
and
or
arpl
pop
pop
pop
test
dec
add
or
sub
cmp
xchg
jnp
mov
lret
sbb
sub
loop
push
mov
cmovg
imul
nop
sub
cli
or
loop
scas
push
push
mov
xchg
minps
or
sbbl
subb
add
mov
push
pop
imul
repz
adc
mov
jbe
scas
iret
outsl
push
add
ret
fs
sub
outsl
mov
iret
jp
pop
call
dec
jmp
jae
insb
je
mov
jnp
push
mov
pop
mov
mov
xchg
aas
xchg
inc
push
mov
mov
out
inc
ja
pop
add
push
loopne
das
adc
pop
sbb
and
sbb
jns
andl
out
lcall
xor
call
xor
and
sbb
sub
add
adc
lcall
clc
pop
mov
insb
mov
inc
iret
xor
inc
mov
mov
fiadds
mov
popa
xchg
add
shrb
ret
sub
shrb
cmpsl
fldcw
pop
adc
insb
sbbl
pop
sbb
data16
dec
str
mov
fwait
add
inc
stc
das
incl
stos
lods
sbb
shrb
sti
inc
add
int
repz
insb
or
or
ss
xchg
or
adc
adc
frstor
adc
push
push
mov
sbb
hlt
pop
inc
faddl
jb
and
jl
inc
out
or
add
add
push
and
fidivrs
push
push
mov
pop
adc
sub
movl
mov
dec
inc
pop
dec
sbb
jp
xor
xchg
bound
and
das
incl
jo
mov
xchg
or
jae
sbb
sarl
lods
dec
imul
scas
sub
addb
lea
popa
pusha
pop
ret
add
das
add
es
das
aas
sub
xchg
sti
arpl
mov
arpl
cmp
shrb
sub
adc
out
mov
rol
iret
out
adc
mov
add
pop
lret
aas
sti
mov
das
sbb
cmpsl
iret
loopne
mov
add
mov
dec
jmp
or
sub
das
and
add
outsl
rcrb
push
jecxz
lret
imul
adc
pop
mov
iret
test
imul
pop
mov
aaa
jbe
fimull
andb
jg
jecxz
rcl
jecxz
shll
mov
jnp
fisubs
inc
cmp
add
clc
push
or
jnp
jge
mov
outsl
mov
sub
and
fs
fildl
loopne
inc
add
push
lcall
imul
add
es
push
insl
pop
inc
mov
and
add
faddl
jecxz
jmp
push
mov
insl
arpl
bound
mov
push
sub
mov
fisubs
push
iret
push
inc
cltd
push
mov
loope
in
fsub
inc
mov
stos
in
cmp
loop
pop
and
sub
loope
mov
add
loopne
push
xor
xchg
push
mov
sub
and
rcr
in
cltd
dec
subb
mov
jns
pop
cmp
fldt
inc
lock
dec
and
in
hlt
fldenv
cld
fcoms
push
xor
pop
and
stos
in
adc
xchg
pop
and
sub
aad
dec
and
aam
in
jb
and
rorl
xchg
test
xchg
mov
xchg
push
leave
cmp
rcrl
dec
clc
rcl
test
push
sub
stc
mov
out
add
jg
or
push
lahf
inc
bound
pop
push
das
fnsave
pop
rorl
call
inc
inc
fwait
xorb
and
xchg
mov
adcb
test
das
inc
xlat
test
pop
bound
xlat
fisubrl
addb
ffree
arpl
inc
xor
and
mov
pop
and
xchg
or
inc
dec
and
shl
fildll
sub
cmpsl
popa
aam
ss
not
adc
add
cmpsl
inc
or
pusha
shlb
mov
adc
dec
andps
pusha
push
xchg
jae
adcl
push
inc
sub
lcall
movsl
mov
dec
xor
push
das
mov
outsl
sub
add
sbb
movb
pop
push
scas
addr16
xor
adc
neg
xor
and
inc
push
mov
scas
push
inc
rcrl
lahf
adc
inc
sub
add
mov
aaa
cmp
popf
inc
mov
adc
test
loope
nop
cmp
pop
and
in
nop
pusha
das
out
aaa
or
iret
xchg
scas
pusha
add
movl
mov
aaa
outsl
sub
add
lea
mov
fisubl
pusha
scas
push
or
add
aas
pop
jmp
push
iret
pushl
push
xlat
adc
jg
xor
shll
ja
adc
les
cmp
aaa
push
dec
enter
dec
xor
pop
pusha
test
cmp
push
push
xor
jbe
aam
inc
dec
inc
xlat
push
insb
xchg
pusha
jg
subl
aas
xchg
xlat
mov
clc
sub
add
inc
shr
popa
xor
and
shlb
pop
sbb
jge
and
jae
pop
or
adcl
cmp
sub
push
push
outsl
loopne
cmp
bound
xchg
add
jo
test
cmpsb
xchg
cmp
std
es
addr16
bound
popf
fdivrs
ja
je
or
mov
sahf
aam
cmp
sub
mov
sbb
nop
push
adc
jecxz
es
jae
push
nop
sub
mov
jecxz
sbb
mov
mov
mov
rorl
nop
js
mov
push
jbe
xor
adc
sbb
daa
outsb
xor
add
mov
data16
in
ja
adc
cmp
ret
jae
imul
xchg
outsl
dec
js
fs
pop
daa
das
fs
daa
sbb
adc
xchg
fwait
adc
fisttpl
sbb
mov
and
add
iret
and
dec
mov
pop
jecxz
inc
nop
push
rorb
scas
jae
mov
aad
sbbl
in
inc
pop
inc
adc
movsl
push
cltd
push
idivl
push
push
pusha
ss
xor
add
in
loope
ds
pop
repnz
push
ds
push
jl
aas
fcoml
filds
inc
rolb
xor
jno
sub
xchg
js
or
mov
inc
lods
popa
cmp
imul
push
fwait
adc
popa
xor
and
and
pop
or
mov
mov
inc
lods
movsb
pop
fbstp
movb
sub
adc
outsl
into
cld
xorb
subb
out
roll
dec
movzbl
add
rol
es
cmp
adc
pop
and
sub
enter
add
xlat
jns
nop
mov
fiadds
push
inc
mov
imul
add
cmpsb
je
ret
adc
movsl
xchg
fisubrl
add
bound
pop
adc
loope
adcl
mov
scas
or
ret
hlt
cmpsb
aas
mov
mov
xchg
push
test
ja
dec
es
outsb
outsb
sub
out
sbb
push
cs
cmp
cs
xor
stos
negl
out
es
add
xchg
adc
mov
push
movl
out
mov
push
xor
jae
fs
fdivp
rcrb
dec
sub
into
xor
pop
mov
pop
pop
dec
shlb
lods
xchg
negl
inc
mov
scas
mov
push
xor
ja
imul
inc
scas
pop
fnstsw
jbe
dec
or
inc
push
and
out
mov
jns
dec
mov
bound
iret
cmp
adc
xor
xor
cs
lret
pop
pop
outsb
jb
loop
push
loope
sbb
xor
outsb
outsl
jne
hlt
sbbl
data16
xor
xchg
shlb
mov
cs
fs
adc
test
mov
cmp
or
daa
jbe
pop
divl
mov
pop
js
jnp
adc
pop
jb
imul
pop
fnstsw
loopne
mov
push
es
ss
outsb
ffreep
test
daa
dec
jb
das
inc
lods
loope
cvtdq2ps
dec
das
add
out
cmp
and
or
mov
iret
jns
dec
cs
sahf
push
cmp
push
push
in
jecxz
insl
sub
push
insl
imul
testl
mov
jnp
fidivrs
jp
ds
clc
fidivs
fiaddl
jg
dec
das
xor
fisttps
jp
pop
out
loopne
outsl
pop
outsl
dec
xor
or
pop
into
xor
pop
enter
imul
inc
jb
push
inc
mov
sbb
loop
addr16
pop
push
push
pop
inc
mov
pop
sub
rol
lret
pop
aam
cmp
xchg
jo
jnp
add
jbe
fidivrs
pop
das
add
fistpl
pop
add
and
jae
add
ja
andl
or
out
lods
pop
xor
adc
pop
and
mov
loop
sub
jae
in
sbb
movsb
es
sbb
adc
std
ret
inc
add
mov
arpl
lock
lea
cltd
ret
out
or
fsubrs
mov
or
and
add
pop
je
outsl
dec
daa
fisubl
jmp
imull
or
inc
mov
lret
mov
dec
dec
or
xor
scas
sbb
mov
subl
lods
mov
lods
fisttpll
addr16
addr16
ret
aaa
test
in
and
mov
jmp
push
dec
inc
push
insb
outsl
popa
fs
outsl
lods
pusha
xor
and
mov
aaa
orb
pop
pop
inc
shrb
mov
das
sub
inc
ret
mov
pop
adc
iret
pop
iret
xlat
lcall
movsl
or
add
add
push
hlt
popf
rorb
fs
addr16
out
mov
ss
mov
scas
jp
dec
xlat
push
jb
mov
jmp
faddp
xor
mov
pop
fdivl
xchg
pop
and
addl
repz
add
test
aaa
imul
add
mov
push
ja
pop
cmp
jge
jle
jne
jo
arpl
xor
test
ja
xor
xor
push
push
add
or
pop
push
and
mov
cmp
xchg
jae
outsb
mov
fimull
push
jecxz
mov
sub
mov
add
repz
or
fisttpl
add
inc
cmp
mov
sbb
pop
nop
dec
jmp
mov
lahf
pushl
jnp
push
pop
fildll
pop
les
xor
push
push
subl
fisubl
stos
and
xchg
pop
sti
and
cmp
mov
and
das
jne
stos
xor
adc
and
inc
mov
lahf
popa
fldt
or
adc
mov
repz
add
imul
cs
push
xor
jmp
jnp
cmp
dec
aas
scas
jmp
cmpsl
test
das
lcall
mov
ror
and
or
jns
outsb
dec
arpl
fsubr
jo
jae
daa
jbe
ret
mov
negb
mov
aas
lods
ljmp
xor
sub
xlat
lea
outsb
shll
ljmp
mov
adc
pop
mov
addr16
shrb
ds
or
adc
jle
or
lock
mov
in
pop
scas
dec
add
das
mov
ja
mov
inc
push
jno
movsl
aas
xchg
or
imul
sub
xchg
push
push
and
sti
add
clc
outsl
or
push
jmp
cmpsl
jge
push
and
jl
dec
movsb
push
lds
inc
pop
add
bound
xchg
inc
nop
and
mov
adc
iret
adc
and
mov
add
adc
outsl
inc
dec
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
lahf
in
pop
subb
mov
dec
fsubs
cmc
jmp
sbb
mov
pop
dec
xchg
add
mov
jecxz
dec
push
pop
adc
jb
mov
pop
push
and
outsb
xor
push
in
or
fstpl
insl
insb
sbb
xchg
imul
add
js
daa
push
fsubs
push
scas
and
xchg
inc
sbb
xchg
mov
xchg
xchg
cmpb
dec
dec
cmp
daa
iret
leave
jae
sub
or
xor
and
in
sahf
xchg
out
xor
fdivl
cmp
cmp
mov
in
in
mov
cmp
add
orb
inc
xor
stos
rcrb
lahf
push
pop
sbb
adc
inc
decl
jmp
shrb
arpl
movsl
roll
mov
test
sbb
popf
rolb
add
roll
cmp
out
mov
cmp
sub
pop
xor
inc
adc
inc
push
inc
xor
push
inc
addr16
idivl
cmpsb
jp
mov
jge
bound
push
popa
testl
pop
data16
daa
dec
mov
xchg
loopne
add
jne
cmp
popa
outsb
imul
inc
roll
xchg
xorl
sub
movl
lock
daa
stos
inc
add
aaa
push
and
jge
cmp
mov
aas
xlat
ret
inc
ret
push
adcb
xchg
xor
push
mov
mov
push
scas
scas
cmc
test
mov
test
aaa
pop
pand
sub
and
lcall
push
mov
inc
movzwl
mov
mov
jne
inc
call
add
add
sahf
push
mov
cmp
aad
inc
out
or
inc
andl
out
in
adcb
pop
jb
add
test
arpl
daa
cmpsb
cmp
mov
pop
and
mov
rorl
jne
aaa
bound
push
xor
mov
and
dec
dec
ljmp
bound
add
add
dec
inc
arpl
insb
add
add
push
insl
cs
xchg
jle
lcall
out
es
mov
js
mov
imulb
xor
sahf
cmp
rcll
loopne
add
xchg
cmp
push
std
cltd
xorb
mov
cltd
sbb
mov
add
pop
and
sub
clc
mov
push
mov
je
es
sbb
xchg
rcl
mov
test
mov
outsb
filds
inc
divps
jge
xorb
int3
ds
scas
leave
cmp
xor
cmpsl
stc
mov
push
aaa
nop
hlt
data16
mov
adc
sub
divb
sarl
fimull
cs
xchg
dec
repz
inc
inc
pop
jl
setbe
mov
inc
repz
aaa
addb
xor
inc
dec
aaa
mul
jge
icebp
addl
push
aaa
mov
push
repnz
jle
mov
fwait
jge
arpl
push
mov
push
sub
repz
push
push
push
test
fyl2x
ds
push
xor
push
pop
cld
fdivp
cmp
pop
sub
aaa
jbe
repz
sbb
fistps
lcall
cs
imul
cmp
push
and
jbe
adcl
push
xor
dec
jns
sahf
cmpsl
jge
aas
pop
es
xchg
cltd
rclb
inc
idivb
neg
fstpl
inc
sbb
leave
inc
outsl
push
push
inc
cmp
out
xchg
ficoml
dec
das
dec
sti
cmp
repz
and
in
dec
pop
mov
sahf
inc
sti
lea
jno
mov
js
jmp
dec
sub
pop
andl
pop
mov
stc
cmp
lea
fdivr
sqrtps
dec
loopne
cmp
ja
mov
jecxz
xchg
das
push
jg
dec
sbb
scas
shrb
cs
aas
push
jecxz
adc
stc
add
adc
cld
ljmp
adc
push
mov
xor
adc
mov
lds
pop
mov
jg
or
mov
dec
movsl
mov
int3
push
and
jg
jg
pop
sbb
enter
adc
fadds
adc
daa
or
mov
push
test
inc
mov
pop
orl
xchg
cmp
adcb
dec
std
adc
mov
std
xlat
popl
and
iret
adc
out
test
and
imul
and
adc
push
js
xor
push
push
lds
imul
cmp
xor
or
ja
mov
lret
dec
mov
mov
aad
lret
dec
jo
add
adc
daa
and
push
dec
clc
dec
add
push
outsl
inc
jb
popa
je
mov
or
push
pop
jl
test
pop
inc
mov
mov
movsb
sub
pop
push
ficoml
fisubl
cs
ljmp
jb
test
pop
add
or
dec
push
inc
inc
ljmp
xor
lahf
lahf
pop
sub
mov
pop
pop
addr16
dec
sub
lahf
arpl
jnp
mov
push
pop
adc
or
xor
outsl
xchg
push
or
cmpsl
jo
pop
mov
inc
lds
je
dec
dec
lahf
cmp
sub
inc
jecxz
sub
mov
xchg
push
mov
lret
in
ficoml
mov
fiaddl
dec
cmpsl
nop
ret
mov
popa
mov
xchg
mov
jb
adc
in
mov
movsb
xor
and
push
addps
aaa
data16
mov
add
xchg
test
ltr
adc
insl
inc
jo
sti
add
out
nop
or
xchg
dec
mov
sti
insb
ficomps
scas
daa
xor
cmovp
push
dec
pusha
mov
imul
and
aaa
push
bound
iret
js
daa
dec
fs
jo
xor
push
or
mov
outsl
imul
jnp
lret
mov
add
movsb
add
sub
pop
xchg
jg
lahf
inc
and
pop
push
add
test
rorb
pop
mov
adc
mov
mov
decl
adc
fiaddl
aas
sbb
bound
inc
cmp
push
cmpsl
das
pop
add
movsl
add
mov
xchg
jmp
sbb
ret
test
das
das
push
pop
sbb
subb
mull
mov
mov
xchg
rcl
addr16
arpl
mov
test
iret
xor
pushf
add
lret
insb
repz
je
adc
xchg
mov
sti
aaa
ja
lods
add
pshufw
das
mov
cmp
xchg
and
es
add
push
jge
ror
mov
add
dec
cs
push
push
sub
mov
mov
mov
mov
cs
popw
outsl
aaa
aaa
imul
mov
pop
daa
xchg
das
mov
jbe
testl
popa
mull
jb
or
das
pop
add
add
push
pop
dec
mov
mov
pop
add
push
xchg
fiadds
push
popl
loopne
inc
jle
pop
push
fmuls
and
jecxz
fidivrs
out
inc
into
inc
add
and
sub
pop
or
add
push
cmp
add
aas
rol
loopne
push
xrelease
mov
fisubrl
adc
aad
iret
add
loopne
and
xor
fcmovbe
adc
cmpl
mov
pusha
adc
outsl
xlat
pop
push
test
or
pop
pop
push
pushf
add
outsl
stos
mov
mov
xchg
mov
and
mov
mov
cmpsb
inc
inc
push
inc
daa
sbb
cs
sub
push
sbb
out
inc
cmp
mov
push
pop
pop
inc
mov
mov
dec
dec
inc
jbe
jbe
mov
bound
sub
mov
mov
pop
adc
pop
xlat
inc
mov
mov
pop
lahf
mov
xor
lock
pop
dec
add
shlb
xlat
cmp
and
testl
xor
cmp
push
adc
push
jns
je
or
pop
and
outsl
stos
mov
push
xchg
das
adc
and
dec
add
shr
jbe
es
insl
jo
je
add
addr16
aas
jo
jae
daa
pop
jno
outsl
xor
test
loope,pn
out
cmp
pop
jg
inc
dec
sub
jns
je
loope
sub
jne
or
cmp
adc
out
test
mov
mov
jae
push
mov
mov
push
cmp
add
inc
pusha
rcrl
mov
icebp
dec
dec
adc
imul
or
test
gs
dec
adc
inc
jmp
popw
fisubl
adc
push
push
pop
mov
or
pop
mov
pop
sub
ret
bound
add
sbb
jg
mov
mov
push
push
enter
adc
ret
jmp
into
dec
mov
push
mov
stos
jmp
adc
push
mov
mov
aad
daa
fwait
xchg
mov
lds
push
adc
jns
jb
clc
inc
add
iret
mov
scas
adc
push
ret
mov
andb
dec
xlat
insl
pop
rorl
call
or
ljmp
pusha
addps
loopne
pop
daa
data16
dec
int3
mov
pop
out
jb
cmp
or
aaa
adc
ds
outsl
dec
mov
push
pop
incl
call
inc
dec
push
xchg
add
add
subl
pop
das
fiadds
jg
pusha
mov
fcmovb
jbe
out
xorb
pop
add
add
push
add
jmp
add
inc
xchg
inc
pushl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
incl
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
pushl
test
daa
add
repz
movb
aad
arpl
push
sub
adc
or
lcall
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
lcall
test
mov
mov
call
cltd
test
push
push
shll
pushl
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
jmp
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
out
jmp
jb
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
mov
xchg
mov
and
clc
inc
mov
pop
mov
ret
xchg
xor
das
ds
das
sbb
add
ja
mov
and
push
out
out
fdivrp
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
insb
cwtl
shrb
push
cmpsl
sbb
adcb
push
and
push
push
rcr
or
pop
mov
and
outsl
call
adc
outsb
mov
pop
aas
ds
push
xor
push
sbb
imul
dec
aaa
push
or
or
daa
inc
mov
jg
sbb
sub
push
mov
decb
add
sbb
lahf
std
outsb
jmp
fwait
int
push
insb
mov
cli
das
aas
inc
cmp
lahf
dec
xor
cmp
push
and
and
push
call
cmp
sar
sub
push
mov
push
inc
and
mov
push
mov
movsl
and
jmp
add
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
mov
xlat
mov
mov
cmp
xor
paddusw
push
xchg
jne
mov
out
push
pusha
push
dec
jb
xor
mov
out
push
imul
add
inc
clc
out
and
bound
or
push
jnp
push
es
insb
jns
mov
je
and
mov
mov
popa
stos
and
in
xchg
loopne
cs
adc
ljmp
and
xor
and
add
int3
and
ret
dec
inc
sahf
pusha
mov
int3
and
push
push
jle
insl
adc
insl
outsl
fs
gs
jo
jns
lods
pop
in
mov
adc
dec
add
insl
jne
rorb
push
or
loop
add
or
addr16
insb
lret
xchg
cmp
and
insl
inc
xor
jae
inc
insb
mov
jbe
fdivrs
xchg
inc
popa
imul
jle
xor
outsl
jo
test
sahf
dec
sub
sbb
xor
mov
xchg
inc
or
inc
xadd
dec
and
sti
sbb
inc
cmovo
outsb
movswl
cmpb
aas
adc
in
nop
jo
maxps
loopne
ljmp
push
inc
cpuid
add
inc
pop
dec
inc
jge
mov
imul
es
mov
sbb
lock
fwait
add
iret
push
add
and
aas
add
fstpt
or
xor
jnp
adc
insb
das
mov
mov
inc
add
lods
pop
mov
out
mov
jg
daa
les
fsub
inc
fimuls
inc
xchg
mov
insb
sub
daa
xchg
imul
push
cmp
je
push
jo
mov
in
fidivrl
push
dec
fsubl
fildll
js
jecxz
lea
add
aam
in
mov
inc
pushf
leave
mov
outsl
jle
int3
loope
mov
xor
in
les
invd
lret
lret
bound
dec
adc
lds
scas
push
push
pop
add
lods
in
mov
cmp
lahf
mov
mov
cmpsb
pop
and
fdivs
call
inc
inc
lahf
or
dec
and
fidivl
and
inc
lret
xchg
dec
bnd
or
js
and
js
iret
test
mov
int3
fsubs
rorb
int3
out
pop
or
aas
out
addr16
ss
pop
daa
add
push
int3
mov
jnp
pusha
push
insb
push
mov
inc
add
push
xor
lods
ds
pushf
pop
enter
in
pop
and
pop
int
push
in
dec
lahf
mov
inc
sub
push
mov
in
lods
lods
ja
aam
roll
aas
mov
mov
int
add
inc
hlt
outsl
add
into
ja
mov
in
lock
fiaddl
daa
lock
lcall
notl
lock
das
sbb
negl
fdivrs
mov
add
test
lahf
or
iret
xor
cmp
shrl
addr16
xchg
out
sahf
mov
cmpb
sub
mov
fiadds
int3
xchg
mov
add
add
mov
aam
lcall
push
aas
jns
pop
add
cld
and
leave
jnp
mov
rclb
xchg
pusha
ss
enter
decl
scas
push
pop
in
cltd
jo
aam
jbe,pn
outsb
ds
push
jge
rcll
sbb
sub
pop
in
dec
fldt
dec
aas
cs
ja
rcrb
nop
or
rcrb
repz
add
lods
mov
int3
dec
lahf
lods
pop
enter
cld
or
pop
enter
shlb
es
and
rcrb
or
pusha
pop
enter
lahf
mov
mov
iret
test
es
sarl
or
cmp
pop
insb
dec
push
mov
out
push
stc
lods
lods
dec
fistpll
or
bnd
movsb
nop
mov
fcomps
cmpsl
nop
idivl
hlt
or
scas
nop
or
bound
repnz
push
pop
cmpsb
mov
es
fisubs
jae
iret
mov
mov
mov
mov
repnz
enter
lock
add
mov
and
loopne
xor
dec
enter
push
pop
cmpsb
inc
loopne
int
insl
cmpl
iret
jae
cwtl
lods
call
push
cmpsl
mov
test
in
pop
cmpsb
mov
and
enter
mull
in
js
inc
push
push
cmpsb
insl
orl
sahf
outsl
dec
mov
sahf
pop
in
mov
movsb
dec
add
test
aam
jb
pop
enter
outsl
inc
ds
clc
and
xor
inc
mov
xor
iret
test
lahf
and
je
xchg
jb
outsb
and
je
test
push
aam
enter
push
les
clc
pop
js
fadd
and
cmp
xorps
or
imul
push
js
fsubs
cmpsl
or
in
loopne
nop
or
int3
loopne
loopne
repz
cs
pop
push
and
xor
addr16
jns
mov
cmpsl
jg
cmpsb
fs
dec
lahf
or
addr16
jns
in
cmpsl
fs
mov
addr16
dec
jae
push
roll
mov
in
ficompl
push
sub
out
fiaddl
cmpsl
loopne
iret
test
insb
sbb
das
in
lods
cmpsl
pop
sbb
mov
test
rcl
aas
inc
push
fsubs
dec
enter
fistl
sub
lods
sub
cmpsl
jg
fstp
repz
nop
pop
daa
addr16
stos
fstl
jns
in
shrb
or
ja
or
out
clc
or
sbb
pop
data16
ja
out
xchg
pop
pop
jg
and
faddl
dec
inc
clc
dec
in
push
jbe
dec
pushf
fsubrl
and
rcr
cs
fstl
cmpsl
pushf
js
imulb
lahf
js
inc
or
mov
inc
fstl
fs
mov
outsl
insl
sbbl
sahf
int3
xchg
daa
movsb
lahf
int3
push
add
ja
lock
test
hlt
or
enter
push
lock
in
test
sarl
fimuls
subl
xchg
nop
inc
jl
sar
ficomps
adc
push
xlat
lods
fdivrp
push
jmp
pop
pop
sbb
or
inc
fmull
out
cwtl
sub
cmp
cmp
icebp
push
push
fists
mov
jg
int3
rcr
and
inc
movsb
pusha
mov
ja
rolb
lea
jl
loopne
adc
rclb
aam
movsb
stc
pushl
shl
loopne
pusha
insl
adc
jnp
repnz
inc
pusha
je
test
cwtl
push
pop
and
shr
pusha
jg
repnz
inc
nop
enter
loopne
lahf
nop
inc
enter
cs
cmp
or
inc
mov
jl
jg
in
insb
daa
addr16
mov
inc
ja
sarb
adc
mov
loopne,pt
outsl
push
ds
sbb
jmp
test
loop
dec
sahf
sub
lahf
fs
mov
andb
add
mov
inc
sahf
or
rorb
mov
jge
adc
and
lahf
mov
ja
in
and
repnz
pusha
jo
nop
out
pop
push
adc
mov
mov
dec
lahf
nop
out
push
mov
dec
mov
sahf
adc
inc
jge
in
lock
in
lds
push
push
xchg
inc
imulb
aas
mov
and
js
in
fdivs
mov
mov
rcr
adc
lock
lcall
and
push
add
movsb
das
fmuls
stc
xchg
clc
push
fs
or
in
clc
outsl
add
pop
push
lcall
aad
js
bound
mov
iret
add
iret
or
sbb
out
or
out
jmp
into
adc
daa
addr16
insb
daa
mov
add
mov
pushf
daa
lods
in
xchg
mov
xor
jmp
rcll
scas
xlat
repz
call
ljmp
push
push
daa
cwtl
nop
push
enter
xchg
rcl
dec
incl
fstp
add
outsl
repnz
mov
outsl
dec
in
and
cld
xlat
adcb
data16
out
dec
dec
call
mov
aas
addr16
xor
aas
mov
out
lahf
outsl
ja
ja
daa
sbb
xchg
jmp
dec
inc
inc
dec
scas
in
cmp
dec
scas
in
sub
scas
in
scas
and
add
dec
test
pop
enter
pop
out
ljmp
icebp
dec
repz
clc
adc
jl
iret
jnp
push
push
xor
lock
call
ror
mov
push
js
ja
ja
or
sahf
push
inc
out
ds
push
jns
jns
js
or
cmp
out
test
push
pop
loopne
jmp
fisubs
scas
ljmp
adc
xchg
pushf
in
fsub
cltd
in
inc
cld
push
ss
popa
and
inc
cmpsl
jns
int
fildl
and
nop
leave
sarl
add
sbb
pop
mov
inc
in
jge
jnp
enter
out
cld
inc
mov
add
jmp
inc
nop
pusha
jg
add
ja
pop
leave
adc
xchg
pop
cmp
outsl
movsb
add
sbb
nop
adc
inc
inc
shr
loopne
ret
xchg
cmp
in
in
outsl
add
push
xor
pushf
inc
inc
mov
sub
sarl
pushf
outsl
leave
xchg
or
fistpll
mov
cmp
inc
test
cmp
mov
cmp
xchg
pop
scas
or
add
outsl
leave
push
lock
out
int3
xchg
xor
fstp
xor
and
add
call
push
mov
bound
fsubs
ljmp
add
lods
xor
xor
out
out
and
outsl
add
sub
loop
sub
sub
sbb
js
dec
sahf
out
aaa
mov
cwtl
add
dec
sahf
out
mov
repz
adc
test
sub
aaa
notl
sub
lahf
mov
mov
or
out
push
xor
ja
add
sub
loopne
mov
repnz
cld
lock
ficomps
icebp
and
add
pop
leave
and
fisubs
add
xlat
mov
fdivrp
and
test
sbb
add
or
out
xor
sbb
roll
xlat
scas
sbb
and
scas
in
xchg
push
add
outsl
xchg
idiv
xchg
or
fisubs
addb
mov
aaa
jmp
call
loopne
pop
jne
out
push
or
imulb
mov
test
in
jg
push
jo
js
dec
dec
pop
loopne
inc
repz
adcl
pop
leave
xor
loopne
add
js
xchg
push
es
cmp
filds
hlt
jbe
fimull
adc
outsl
push
push
outsl
mov
cmp
jg
test
push
pop
pusha
xchg
daa
xchg
mov
push
inc
cmc
scas
ljmp
cwtl
cmc
scas
data16
jbe
testb
xor
push
movsb
or
jmp
cwtl
loope
or
sub
push
sbb
ss
or
xor
scas
add
sbb
stos
outsb
xlat
or
dec
shl
or
testl
in
cmc
pop
add
rorb
cmc
mov
add
and
pop
leave
fwait
push
mov
mov
lock
divb
mov
dec
sub
add
lock
adc
addr16
add
dec
aaa
sub
outsl
addr16
sub
add
cmpsl
adc
in
testl
jecxz
xchg
sbb
pop
les
daa
hlt
shrb
clc
ja
loop
insb
cmp
xor
jg
addr16
or
mov
cs
je
add
sub
mov
clc
push
in
pop
leave
mov
push
mov
das
outsl
add
aaa
pop
in
mov
clc
cmp
pop
dec
pop
cli
aaa
enter
js
pop
stc
aaa
add
and
cs
movsb
push
in
mov
popa
imul
iret
fsubl
andb
add
rol
loopne
insb
cli
scas
in
data16
or
popa
inc
call
int
mov
push
movsb
adc
clc
sti
fsubrl
repz
insb
sbb
outsl
mov
mov
lock
aas
add
decb
cli
cmpsl
bound
aaa
or
or
ss
inc
xchg
sti
push
sti
outsl
add
aaa
imul
movsb
mov
fwait
mov
rolb
add
add
scas
in
js
add
cld
shll
cld
pop
and
mov
add
jl
out
add
sbb
sub
add
adc
inc
or
out
pop
sar
out
les
or
add
ss
cli
std
addr16
push
mov
aas
addr16
daa
mov
mov
movsb
hlt
fs
in
clc
es
addr16
push
add
mov
dec
divl
or
xor
test
incb
push
incb
imul
movsb
out
pop
add
or
aaa
dec
mov
nop
out
sahf
rcl
lock
mov
filds
inc
lcall
fdivl
test
clc
out
push
mov
das
clc
ja
push
call
inc
decl
shrl
stos
xchg
rolb
push
dec
and
shrl
jae
xchg
jns
xchg
cmp
sarl
dec
outsb
xchg
mov
loope
mov
pop
je
xor
out
out
mov
iret
je
mulb
mov
out
sahf
jnp
shl
pop
mov
out
cmp
rcrl
xor
ja
push
fmuls
xor
imul
nop
insb
iret
repz
or
stos
ficompl
sbb
popf
out
jns
cli
es
xchg
push
jg
repz
mov
repz
xchg
sub
iret
repz
ret
repnz
inc
cmp
out
lea
xchg
pop
xchg
jns
iret
repz
push
xchg
mov
repz
out
push
cwtl
inc
xchg
cmp
ds
mov
add
xchg
push
andb
es
repz
inc
pushf
push
sahf
out
mov
popf
dec
ljmp
pop
mov
pusha
lahf
cmp
out
sahf
roll
mov
iret
repz
in
mov
out
jmp
mov
lahf
out
mov
movsb
out
sahf
out
movsl
push
test
int
cmpsb
inc
imul
data16
test
repz
out
call
out
lcall
aam
repz
or
jns
out
xor
in
pop
lods
nop
fcomps
scas
dec
repz
push
fdiv
xor
xchg
repnz
insb
lds
mov
repz
popa
lods
call
sahf
out
cmp
sti
outsl
mov
mov
dec
repz
sbb
sahf
cmpsl
stc
inc
mov
mov
sub
dec
in
mov
int
imul
push
mov
ds
mov
mov
cmpsl
stc
cmp
mov
sahf
out
cmp
fstpl
mov
repz
or
inc
mov
jns
cmpsl
stc
sub
push
mov
cld
out
ds
repz
ret
or
pop
push
xchg
int
stc
cmp
mov
lock
popf
imul
push
mov
repz
addr16
cmp
je
frstor
lret
lret
inc
imul
loop
int3
jle
repz
repz
popa
xchg
shr
jl
out
iret
xchg
mov
stc
cmp
pop
mov
repz
iret
vpshrdvw
mov
out
push
lock
jl
hlt
int
jns
inc
aad
push
mov
lahf
out
ds
dec
js
or
sahf
out
xor
loope
fnstenv
jl
fisubl
fisubrl
out
jae
jmp
fsubrl
fcompl
rcr
imulb
fistps
mov
mov
cmp
inc
jmp
in
in
ds
mov
or
xor
rep
movsl
cmc
data16
insb
inc
testb
pop
sti
lds
int
cld
or
xchg
xchg
mov
push
dec
add
xchg
add
adc
lahf
int3
nop
push
inc
xchg
or
or
push
aas
aam
jb
in
sqrtps
sub
sarb
scas
sub
inc
push
jns
adcl
cmp
call
and
insl
shrb
xchg
pop
sarl
xchg
aas
pop
enter
xchg
sarb
fs
fcomps
push
test
jmp
jbe
popf
mov
int3
loopne
repnz
mov
fcomps
aas
packuswb
inc
pop
jbe
xchg
sbb
dec
sub
xor
mov
fbld
mov
lahf
roll
cmp
push
push
je
shl
mov
pop
inc
das
and
and
lcall
adc
push
or
ss
and
jmp
mov
inc
roll
aas
xchg
dec
dec
data16
ficoml
jg
dec
aas
in
xlat
cmc
fimull
outsb
ss
push
inc
pop
pop
jne
sbb
jo
daa
movq
push
pop
mov
ja
nop
pop
add
adc
rclb
jne
inc
pop
or
cmp
pop
push
nop
pop
ret
ffreep
adc
and
jnp
cmpsl
loopne
mov
daa
roll
ja
xchg
ja
js
dec
dec
and
inc
inc
or
les
fbld
jns
adc
sbb
pop
cmp
push
lea
jl
pop
jo
fs
jne
je
scas
xorb
les
sbbl
aaa
add
xchg
sub
inc
leave
cmp
or
pop
inc
shlb
lods
lahf
push
aas
cmp
mov
adc
rorb
xchg
add
daa
and
add
lahf
icebp
xchg
xchg
xchg
mov
addr16
jmp
xchg
fbstp
xchg
fistps
in
leave
inc
pop
pusha
xchg
imul
inc
jb
xchg
cltd
mov
or
xchg
pop
jb
push
loop
dec
loopne
js
mov
adc
daa
repnz
cmp
pop
and
fwait
in
inc
mov
push
and
data16
mov
mov
rcrb
sub
divb
push
xchg
mov
outsb
sbbl
dec
cs
aam
adc
dec
and
or
addr16
mov
stc
xchg
xorl
out
or
jo
scas
pusha
daa
cmpb
xchg
daa
mov
push
outsl
lods
aaa
add
add
push
sub
fadds
rorl
inc
imull
cmp
in
add
sbb
inc
iret
cld
push
sub
add
jg
pop
jl
add
push
leave
enter
scas
jns
cmpsb
in
add
add
mov
add
repnz
sub
sbb
daa
cmp
sbb
cmp
pop
mov
fsubrs
push
mov
mov
mov
jns
enter
daa
push
dec
sahf
pop
mov
cmpsl
push
int3
jbe
adc
mov
adc
cmp
mov
add
in
push
jb
leave
leave
add
roll
call
daa
movsb
aas
data16
cmp
sub
pop
pop
or
adc
decl
out
mov
mov
pop
mov
add
add
insl
adc
fcoml
lahf
mov
lods
mov
xchg
sahf
pushf
pushf
pop
mov
pushf
in
cmp
sbb
in
xchg
in
cmpsl
hlt
cld
xchg
sbb
repnz
or
adc
insb
mov
pop
and
push
lea
outsb
pop
dec
xorps
xlat
cs
out
rolb
mov
xchg
mov
cmp
cmp
mov
push
add
mov
push
or
or
cmp
cmp
or
or
or
sbb
dec
and
push
daa
mov
ja
daa
push
pop
pusha
punpckhbw
pop
outsb
daa
jnp
pop
sahf
mov
out
mov
mov
cmp
jns
ret
add
daa
cmp
loopne
cmp
dec
sub
cwtl
push
xchg
mov
mov
test
fs
push
insb
scas
andb
inc
dec
xor
in
cmpsl
in
adc
cmp
cmp
or
fisttps
sbb
cmpsl
mov
mov
loop
sub
testl
enter
nop
push
nop
sub
test
cmp
dec
nop
out
sbb
popa
aam
test
adc
and
push
push
leave
push
pop
int
mov
xor
sbb
cmpsl
mov
out
pushf
ret
add
add
insb
jns
fistl
notl
jnp
pusha
aas
mov
inc
filds
pop
jns
mov
cmp
stos
dec
jb
sub
addr16
push
dec
addr16
add
leave
inc
repnz
ja
pop
roll
mov
jb
sarl
add
adc
push
repnz
fdivr
sbb
jmp
cltd
xchg
push
add
cmp
inc
sbb
xchg
das
jb
mov
pop
push
dec
and
loope
jg
incl
sbb
xchg
xchg
xchg
sbb
push
pop
iret
daa
mov
fisubl
loop
xlat
out
push
jg
xchg
pop
or
mov
xchg
das
xchg
aaa
xchg
sub
push
sbb
and
add
pop
test
pop
and
sets
sbb
dec
cmp
lock
and
lcall
rclb
push
into
je
xor
out
scas
daa
jns
jge
mov
mov
movsb
xchg
and
sbb
mov
pushf
or
repz
scas
and
mov
xchg
push
testl
sbb
push
addr16
jle
xchg
pop
ja
mov
xchg
mov
sub
xchg
fsubl
sub
addr16
dec
jo
stos
pop
iret
or
dec
push
mov
cmp
mov
test
pop
cmp
and
je
pop
xchg
pop
inc
dec
cs
push
addb
scas
mov
pop
in
rcll
hlt
cmp
jns
push
ja
pop
or
sbb
xor
mov
xchg
pushf
dec
dec
lds
xchg
and
jp
mov
push
scas
mov
fstpl
ja
iret
in
xchg
or
in
ror
enter
sbb
pop
movsbl
mov
pop
push
cmpsl
push
pushf
mulb
jns
jb
incl
out
xor
push
loop
mov
mov
pop
and
pushf
cmp
pop
ja
xchg
xchg
and
andl
mov
ja
fidivl
iret
add
mov
pop
in
in
pop
cltd
adc
cmp
jb
leave
add
leave
rclb
into
mov
cltd
pmaxsw
inc
rep
push
fisttps
mov
and
fidivrs
fbstp
mov
es
and
xchg
dec
pop
sbb
mov
push
add
push
jb
inc
jmp
adc
clc
mov
push
fdivrs
xchg
adc
inc
es
lcall
pushf
add
jno
aas
pushf
es
lret
inc
push
leave
xchg
shlb
shlb
movb
es
cmpsl
cmp
sbb
push
daa
cmp
cmp
and
cwtl
mov
je
daa
lahf
ret
inc
sahf
xlat
popf
xchg
lret
shll
push
add
mov
add
int3
icebp
xchg
into
setge
imul
popf
enter
aaa
inc
xchg
inc
xchg
push
scas
adc
sub
ja
sub
pop
push
sub
sbb
dec
ja
jg
jmp
mov
daa
mov
pop
xchg
push
inc
outsl
ljmp
setae
sbb
mov
les
shl
inc
repnz
fdivl
pop
leave
push
ljmp
cmp
sub
push
popl
push
dec
adc
cmp
inc
ds
js
jmp
push
out
mov
sahf
pushf
je
orl
sahf
ja
pop
fucomi
fs
pslld
testb
mov
ja
lahf
pop
push
lahf
fsubrp
ss
lahf
xor
cmp
inc
push
add
dec
push
lahf
or
add
mov
add
add
leave
leave
mov
sbb
out
push
imull
daa
test
mov
cvtpi2ps
addr16
mov
and
pop
jo
xchg
ljmp
insl
aaa
outsl
or
xchg
mov
inc
iret
ljmp
ss
mov
mov
pushl
jge
cmp
mov
mov
cmp
leave
mov
incl
mov
sub
cs
out
aas
ja
cmp
mov
ja
push
add
pop
stos
jae
outsl
cmpsl
push
je
cmp
in
outsb
fstpl
in
in
push
pushf
cmp
cmc
mov
std
pop
ja
inc
leave
enter
sub
pop
repz
cmp
add
add
cmp
leave
push
bound
insl
js
pushf
out
das
orl
mul
in
mov
das
movsb
push
or
mov
push
vmovups
iret
enter
adc
mov
daa
xchg
cs
inc
fwait
in
addr16
movsb
fbld
in
ss
icebp
and
mov
leave
adc
leave
xchg
pushf
movsb
ljmp
or
outsb
pop
mov
xorb
lock
jg
insb
jno
xchg
movsb
movsl
das
or
cmpsl
adc
pop
or
mov
mov
xor
push
and
movsl
addr16
xor
push
insb
ret
mov
xchg
ret
movsl
push
mov
sbb
in
movsl
cmc
movsl
std
xchg
xor
and
loopne
mov
cmpsb
fistpll
xor
add
xor
pop
add
or
addr16
xor
shrl
mov
add
xor
sub
add
add
lahf
leave
xchg
xor
cmpsb
mov
popa
pop
or
sub
ficompl
loop
ljmp
dec
add
fisttps
push
cmpsl
repnz
mov
cmp
push
pop
add
or
fwait
sub
pop
aaa
int
mov
push
lcall
leave
repz
mov
into
jae
ljmp
xor
js
rcl
incl
test
repnz
test
or
pop
sar
outsb
mov
xor
xchg
addr16
pop
ja
mov
mov
mov
push
add
movl
mov
test
test
sbb
js
ds
test
cmp
popa
push
add
movb
push
xchg
or
imul
xlat
stos
adcl
test
pop
push
add
adc
pop
leave
pushf
aaa
jb
jmp
aaa
push
daa
dec
ja
es
inc
or
ss
fmull
into
mov
iret
les
pop
leave
and
dec
stos
ss
fwait
in
add
je
fs
inc
sub
jne
inc
mov
outsl
in
mov
jle
xchg
mov
push
bnd
xchg
xchg
sbb
out
jbe
sarl
push
add
mov
loope
add
iret
push
icebp
stc
or
lods
jns
ficomps
or
or
adc
or
jns
out
or
dec
sahf
out
adc
adc
dec
sahf
out
adc
adc
sahf
popa
push
imul
dec
ds
aaa
xchg
push
insl
in
sub
lods
loop
repnz
mov
add
push
dec
cmp
jb
inc
adc
ud1
icebp
dec
lods
push
xchg
mov
test
mov
sbb
hlt
in
roll
adc
aaa
dec
ja
cmp
inc
scas
mov
dec
ja
aas
jo
xchg
mov
xorb
imul
fstpl
seto
xchg
mov
pop
out
popf
out
mov
push
rcpps
add
xor
jns
aas
pop
adc
sbb
lahf
jp
ljmp
pop
or
pop
or
push
jo
daa
iret
jmp
adc
ja
enter
xchg
cpuid
and
cmp
and
daa
jo
pop
pop
push
scas
sbb
outsl
pop
fdivrs
push
add
out
or
pushf
pushf
cmp
add
mov
and
jb
pop
cwtl
add
jbe
jb
addr16
jge
imulb
push
or
push
jmp
leave
xor
or
rcrb
cmp
gs
mov
pop
pusha
fs
mov
or
add
add
jns
mov
cwtl
jnp
aas
lock
add
out
cmp
in
mov
push
add
iret
jmp
mov
push
mov
in
repz
scas
or
mov
push
idivl
in
mov
sti
or
cmp
repz
add
add
iret
push
push
pop
arpl
jno
iret
repz
orb
or
fwait
lret
add
cmp
int
ja
daa
repnz
mov
mov
ja
pushf
movsb
add
in
daa
sbb
rorb
filds
mov
mov
daa
in
adc
fidivl
jl
mov
fnstsw
xchg
dec
jmp
fstl
adc
fsubrl
incl
fldt
jns
aas
movsb
mov
xchg
xchg
xchg
mov
and
inc
aas
iret
mov
pop
xchg
inc
mov
dec
outsb
xchg
data16
mov
adc
cmp
jns
and
mov
sbb
in
xchg
dec
iret
jno
jae
sarl
addr16
lahf
jns
out
mov
mov
mov
out
ret
in
cmp
int3
inc
repnz
mov
sub
sub
add
repz
popf
push
dec
dec
push
or
popa
mov
jl
fs
adc
in
add
mov
mov
enter
sahf
test
int
xor
add
rolb
inc
fisubs
mov
cwtl
inc
fisubrs
aad
and
or
fwait
add
jo
daa
fstpl
dec
push
cmp
lods
cmp
pop
pop
arpl
jns
mov
iret
or
mov
lea
filds
adcl
das
leave
outsb
xchg
xchg
xchg
mov
mov
out
loope
repnz
mov
mov
xchg
ja
pushf
pushf
pop
pop
fs
rcrb
xchg
lahf
mov
into
xor
scas
mov
outsb
adc
or
rclb
rolb
mov
xchg
cmp
std
pop
mov
ja
outsl
popa
mov
enter
push
mov
repz
push
add
add
leave
lret
pop
hlt
decl
mov
push
inc
push
and
jl
add
cmp
jns
dec
add
jle
daa
pop
leave
jae
test
mov
test
mov
xchg
mov
mov
ficoml
inc
cmpsl
inc
shrl
dec
pop
mov
mov
fcmove
push
cmpsl
xchg
jbe
rcrb
mov
or
xchg
out
call
xchg
pop
incb
pushf
push
sysenter
popf
out
aas
add
push
pop
out
daa
fisttpll
add
cs
or
cmp
imul
orl
insl
daa
xchg
das
femms
mov
cmp
mov
add
xchg
inc
xor
in
jns
repz
add
loop
enter
adc
pop
mov
movntps
scas
sub
pop
jg
repnz
movq
ja
xchg
fsubrl
xchg
out
lods
mov
leave
repz
call
jae
aas
cli
lahf
add
jnp
push
adc
push
setno
or
mov
js
mov
daa
adc
mov
fistps
mov
push
xchg
push
fists
inc
das
lcall
int
mov
fildll
jo
cmovae
divb
mov
jae
jle
imull
or
dec
mov
out
pop
xor
fists
mov
paddb
add
xadd
xor
cs
negb
mov
pushf
mov
dec
push
jb
jne
sub
push
pop
sbbb
sahf
fisttpl
mov
mov
mov
sahf
add
int
aad
sahf
pushf
pop
and
clc
add
or
dec
mov
push
pop
dec
jne
jbe
push
push
iret
pop
daa
data16
xchg
out
pop
outsb
add
add
xchg
or
in
jns
mov
loopne
mov
pop
fsts
mov
cld
add
in
fwait
decl
daa
rcrb
fbstp
xchg
jb
mov
jb
dec
sahf
ja
xchg
add
in
movsl
lods
lgs
lds
xchg
call
pop
loope
mov
push
mov
and
dec
xchg
stos
test
fmull
pop
outsb
jbe
jle
cmp
out
outsl
xchg
jbe
test
xchg
insl
and
dec
in
in
pop
and
leave
hlt
add
ret
out
inc
pop
push
daa
daa
ret
in
popf
mov
push
ja
mov
sub
test
popf
xlat
insl
lar
lea
dec
sahf
add
push
scas
movsl
fiadds
pushf
cmp
or
sbb
mov
and
fisttpll
out
xchg
out
mov
ja
ret
inc
cvtps2pi
aas
ret
incl
mov
jae
cmp
jl
mov
in
push
mov
mov
jb
jb
shr
fisubrl
jns
jb
pop
ds
push
push
aaa
jb
les
iret
repz
out
push
add
pop
add
ds
jge
jb
sub
rcr
in
jbe
xlat
fsub
mov
iret
and
mov
lds
stc
adc
adc
adcb
sbb
push
iret
jae
popa
imul
cmp
insl
xchg
jne
pushf
dec
ds
or
rclb
in
outsb
jae
ret
out
into
add
in
in
in
in
cli
pmovmskb
in
in
add
aas
sbb
mull
sarl
sahf
or
cmp
adc
out
testb
cmp
push
jae
or
push
pop
jp
xchg
call
mov
push
fisubs
call
es
fdiv
loopne
add
push
scas
mov
clc
pop
push
das
add
or
in
divb
das
push
ja
and
loop
jl
sub
inc
pop
push
push
test
adc
sbb
dec
cmpsl
mov
daa
daa
out
push
add
mov
xchg
push
jg
adc
into
repz
pop
cmp
pop
or
in
shr
dec
cmovle
push
data16
push
femms
enter
repnz
negl
add
push
add
repz
iret
ss
xchg
int
call
adcb
mov
push
xlat
push
mov
dec
lods
daa
mov
repnz
add
int
mov
mov
xor
cmp
ss
mov
adc
test
lea
pop
lgdtl
movaps
leave
incl
mov
out
out
leave
insb
fwait
dec
cmp
add
push
addr16
pop
jo
setg
cmpsl
imul
pop
jo
mov
pop
pop
cmp
icebp
fs
ljmp
xchg
push
or
jne
daa
cmp
outsl
inc
pop
jns
addr16
push
popw
out
sahf
out
or
and
sahf
or
pop
and
enter
enter
jae
out
por
jmp
add
jno
stc
pop
pop
push
lret
dec
sub
cmpsl
outsb
jmp
cs
ss
clts
setnp
xchg
or
and
imul
push
add
adc
xor
cmpsl
xor
repnz
inc
pop
mov
mov
sbb
mov
mov
in
movsb
xlat
lret
scas
pop
daa
or
pop
testl
pop
call
and
push
inc
psllq
in
imul
add
add
mov
xchg
mov
inc
pushf
lods
pop
push
or
repz
iret
or
iret
push
out
psubd
add
int
adc
push
sbb
repz
repz
adc
iret
push
inc
pop
push
sbb
iret
repz
push
cmp
prefetcht1
push
adc
adc
adc
cmp
cmp
adc
push
or
mov
inc
pop
dec
jle
add
int
inc
push
push
push
mov
push
inc
adc
nop
rcr
and
cmpsl
fcompl
push
daa
in
out
pushf
sbb
mul
jmp
mov
dec
into
lock
inc
into
cmpsl
adc
imul
daa
hlt
mov
in
shll
mov
sub
in
jmp
xor
incl
rcrb
into
pop
int
pop
mov
push
dec
outsl
pop
mov
mov
pop
leave
pop
cltd
inc
das
xchg
pop
push
iret
out
sahf
out
pop
push
outsl
das
push
add
add
sahf
out
aas
add
iret
xchg
mov
sbb
nop
jb
inc
jmp
mov
hlt
scas
and
mov
pop
repnz
push
mov
daa
rolb
mov
nop
mov
dec
fisubl
addr16
sbb
cmp
pop
int
ja
scas
and
adc
ja
pop
and
add
shl
mov
xchg
add
mov
pop
jb
cmpsb
call
xchg
sahf
ja
popa
insb
push
add
xlat
popf
pop
pop
push
xchg
add
jns
mov
rorl
mov
pop
ljmp
cli
add
or
adc
mov
mov
fistps
shlb
pop
push
pop
dec
sahf
xlat
popf
sub
xor
or
inc
repz
repz
or
or
mov
iret
adc
inc
pop
sarb
sbb
push
add
xor
pop
daa
mov
xchg
into
fistps
movsb
dec
ror
out
rclb
jb
rolb
add
mov
out
pusha
popa
mov
and
or
shrl
push
add
ror
cmp
push
add
push
add
es
fistps
bound
sub
ds
push
or
push
testl
rcrl
bound
daa
mov
mov
mov
cmp
fdivrs
mov
push
bound
and
aam
push
aam
aam
leave
leave
inc
mov
push
pushf
out
aam
mov
lahf
xchg
aam
xchg
cmp
pop
mov
addr16
shr
iret
pop
aad
data16
fmull
push
mov
cltd
push
arpl
jb
shll
mov
jb
pop
xchg
shr
ja
mov
in
xchg
shll
pop
pop
push
and
xchg
add
or
loopne
das
pop
das
sbb
mov
daa
push
or
hlt
xchg
push
gs
cmpsl
out
loop
cmp
pop
pusha
or
roll
inc
icebp
in
jbe
jnp
sbb
push
cmpsl
mov
gs
out
pop
pop
ja
ja
push
add
lahf
ficompl
push
xchg
pop
aaa
jns
pop
add
jns
sahf
or
repnz
add
jecxz
lar
das
or
push
data16
xchg
iret
adc
sub
xor
pop
push
push
cmp
pop
leave
jae
mov
jo
pop
inc
insl
mull
xchg
cs
dec
dec
fwait
xor
inc
push
inc
dec
xlat
xlat
jg
aas
outsb
jbe
cmp
fdivrs
push
mov
pxor
push
xchg
add
sahf
outsb
repnz
clts
push
pop
dec
dec
dec
dec
push
in
jns
mov
cmpsb
fdivrs
test
leave
mov
pop
push
mov
addr16
ljmp
add
adc
push
ret
jmp
nop
push
fstpt
outsl
inc
scas
push
pop
dec
daa
loopne
xchg
fstps
push
aas
in
mov
fstps
invd
jnp
fwait
cmp
xchg
or
fisttpl
cmpsl
fld
psubusb
push
repnz
fnstenv
and
cmp
popl
add
adc
stos
inc
add
add
cmp
add
cs
push
push
dec
pop
jmp
psadbw
cmp
shll
cmp
sbb
jae
daa
dec
outsl
pop
lods
jae
or
call
push
ja
jnp
das
pop
sbb
lahf
nop
fisubrl
cmpsb
ljmp
xchg
cmp
fnsave
mov
rcr
sbb
push
or
imul
jo
pop
pop
push
fldt
fistpl
pop
pop
or
movd
leave
mov
ja
xchg
mov
inc
dec
mull
daa
xchg
xchg
pushf
lret
push
fmull
in
fisttps
fcoml
fsubrl
push
faddl
rorb
pop
inc
popf
fsubrl
pop
xchg
push
pop
sahf
xlat
popf
out
add
imul
in
push
jns
add
add
dec
dec
add
or
aaa
jns
out
mov
xchg
cmp
dec
or
cltd
adc
mov
inc
adc
in
in
in
aam
add
mov
divl
fstpl
push
add
push
jbe
fsub
mov
push
mov
out
xchg
dec
xor
push
dec
aaa
aad
jae
paddusw
fildl
pop
fisttpl
jecxz
fldt
jmp
das
repz
sti
pop
or
cmp
stc
add
fwait
mov
in
lds
push
btr
mov
out
ret
adc
adc
jns
dec
aaa
movups
or
jae
cmp
adc
pop
and
leave
jmp
iret
sbb
nopl
cmp
pop
dec
mov
repnz
and
dec
scas
fwait
cmp
jae
es
sub
cmp
repz
mov
xchg
sub
cmp
repz
sub
sub
iret
cs
mov
adc
lret
fisubrs
or
sub
adc
ss
xchg
cmpl
inc
pop
shl
in
dec
in
outsl
cld
sbb
scas
les
push
or
inc
push
add
das
pop
adc
sbb
fbld
lods
jmp
pop
repnz
push
leave
inc
dec
xchg
xchg
xchg
mov
ds
add
xchg
jo
loopne
xlat
cltd
jo
leave
in
pop
movups
jmp
pop
push
cmpsl
pop
pop
add
mov
out
pop
push
or
cs
cmp
repz
inc
cmovg
popf
cmp
ja
adc
scas
adc
iret
repz
rclb
fstl
stc
cmp
repz
loope
jns
cmpsl
sbb
sbb
sahf
out
sahf
sub
jns
out
dec
and
push
and
andb
jns
and
enter
ds
ret
loope
loope
cmp
fucom
ljmp
sahf
out
adc
das
push
xor
cmp
jnp
ss
inc
loop
dec
loop
push
loop
lods
cmp
cmp
mov
loop
out
sahf
out
daa
mov
cltd
and
movsb
and
and
jns
and
and
out
sahf
out
out
icebp
sbb
cld
sbb
sbb
iret
repz
sbb
adc
iret
repz
dec
dec
dec
push
repz
repz
pop
dec
push
scas
fwait
cmp
ja
test
push
dec
xchg
mov
push
jle
pop
dec
repz
pushf
fmull
dec
adc
cmpsl
iret
pop
mov
das
int3
dec
xlat
jns
out
push
loop
in
mov
jecxz
in
push
mov
outsl
bound
jno
in
sahf
xchg
pop
cmove
insl
mov
jne
ds
jns
pop
push
pop
lea
lcall
or
jns
into
or
iret
repz
notb
out
in
and
push
adc
adc
adc
out
xor
cmp
dec
out
sahf
out
push
sbb
sahf
out
sahf
push
ja
sbbl
mov
xchg
and
and
in
jbe
fldcw
or
shl
cld
das
pop
out
cmp
repz
adc
iret
repz
xor
cmp
repz
adc
dec
bswap
repz
pop
out
or
repz
or
jge
cmp
repz
pop
fs
xchg
outsl
daa
dec
aaa
cmovo
push
sbb
pusha
je
repz
sti
out
add
pmaxub
out
push
add
adc
out
sahf
xlat
insl
pop
wbinvd
push
sub
xor
cmp
aaa
cmp
enter
rcpps
pop
out
repnz
arpl
jae
fmull
adc
test
lea
lahf
sbb
jns
scas
sbb
aad
push
adc
mov
sub
call
mov
rdtsc
push
add
dec
inc
cmovns
pop
cmp
cmp
popa
imul
orl
daa
iret
cmp
xadd
dec
dec
enter
dec
dec
dec
dec
call
xor
xor
or
pop
sbb
xor
iret
push
inc
aaa
inc
jmp
out
repnz
fstpl
and
out
jbe
pop
jg
add
dec
xchg
pop
mov
jns
mov
or
in
daa
leave
push
push
rcr
dec
jb
jns
loope
adc
icebp
psubw
ljmp
inc
aaa
and
data16
ljmp
push
dec
push
add
cmp
repz
push
jne
cmp
jae
orb
ja
mov
scas
jns
out
push
mov
dec
sahf
out
adc
sti
clts
jmp
mov
cltd
aas
adc
pop
sbb
daa
pop
xor
out
sbb
out
jns
pop
imul
xchg
in
dec
sahf
and
dec
sahf
out
and
leave
in
in
in
psubb
in
sahf
out
fs
sbb
das
dec
icebp
in
das
cmp
outsl
xor
out
stos
ret
js
add
iret
add
repz
push
add
add
scas
push
mov
sahf
rorl
mov
aam
jb
mov
or
clc
xchg
xchg
cltd
pusha
rorb
or
cmp
xchg
sbb
adc
xor
cmp
iret
jae
push
inc
dec
sbb
mov
sbb
pop
sbb
jns
leave
pusha
nopl
test
jo
and
mov
mov
lock
in
iret
xlat
fucomip
outsl
and
dec
out
out
in
cli
das
add
sbb
fdivrs
andl
pop
rdpmc
ds
sahf
pushf
pushf
mov
outsl
out
aaa
stc
hlt
int3
fistpll
mov
push
fucom
jns
or
in
jbe
jns
mov
ficomps
jmp
adc
in
in
lret
or
pop
push
push
push
and
leave
cmp
lock
sbb
sbb
sub
out
sbb
sbb
fucom
push
mov
pop
push
jbe
jg
lahf
mov
mov
outsb
mov
fists
pop
sub
sub
mov
jg
sub
push
sub
sahf
push
cs
das
stos
xor
out
mov
shlb
ja
cmp
xor
xor
in
sahf
dec
repz
ss
aaa
add
cmp
jmp
jnp
cmp
aas
rcrb
int
fdivrs
jecxz
loopne
jns
out
stc
scas
add
jns
out
cmovae
inc
and
inc
xor
dec
das
jmp
out
jbe
dec
bound
adc
pop
push
cmp
pop
push
call
add
dec
decb
stc
pop
dec
jg
es
jge
loopne
dec
and
rep
mov
mov
rorl
int3
add
jcxz
xlat
outsl
push
push
mov
pop
cli
add
cmp
adc
or
jns
out
inc
push
dec
setle
jns
pop
adc
je
cmp
cmp
mov
adc
adc
movsb
scas
mov
pushf
fmull
pand
repz
adc
or
in
jbe
and
inc
adc
repz
xorb
enter
add
pop
cmpl
jns
outsb
repnz
add
add
testb
or
push
pop
out
in
dec
and
sub
iret
repz
or
fcmovne
repz
jno
jl
adc
es
xrelease
xchg
unpckhps
iret
repz
popf
push
test
mov
sahf
out
cmp
leave
cs
sbb
iret
cmp
ljmp
int3
adc
jns
push
and
insl
jns
out
and
sub
repz
ss
pop
inc
cs
dec
sub
sub
je
iret
sub
setp
shlb
adc
xlat
iret
int
cmc
outsl
cli
cmc
and
testb
btr
sbb
aas
sub
jg
leave
xorb
testb
push
orl
pop
vprotq
outsb
mov
jns
xchg
xchg
xchg
mov
or
jns
out
or
or
leave
repz
prefetch
or
in
loop
imulb
add
push
testl
negl
xor
pop
repz
mov
inc
sbb
enter
sbb
or
pop
cs
cmp
repz
push
ja
xorb
iret
pop
lea
lcall
and
cmp
and
out
xchg
in
test
out
pop
scas
inc
cmovo
imul
lock
inc
sbb
pop
addr16
js
loopne
je
jg
xchg
lcall
dec
push
jns
dec
sahf
add
mov
pop
out
sahf
out
or
or
stos
add
or
pop
stc
repz
ficomps
push
push
and
movq
add
sub
mov
fmulp
repz
adc
push
adc
jb
outsl
mov
xchg
cs
leave
repz
sbb
aaa
rol
stc
push
test
xlat
pop
add
push
aas
cli
add
bndldx
daa
push
cli
sub
popf
cmp
in
wbinvd
inc
dec
repz
push
pop
push
or
iret
push
insl
js
orl
repz
xchg
fwait
push
adc
jns
daa
iret
adc
sbb
jns
out
sbb
sbb
out
in
sahf
sbb
sbb
hlt
push
push
sbb
cmp
pop
outsb
add
or
leave
addr16
and
sti
and
push
cmp
pop
iret
repz
pop
packssdw
add
cmp
dec
leave
repz
mov
mov
ret
sti
lcall
femms
sahf
out
sahf
in
out
adc
cmp
cli
add
sbb
jb
repnz
es
adc
push
out
sahf
ja
xor
cmp
xchg
out
sahf
dec
sbb
sbb
mov
orb
mov
jns
ja
xchg
dec
and
sahf
lods
and
mov
fdivr
pop
sub
ljmp
frstor
mov
je
mov
std
cs
enter
std
inc
ds
push
std
jbe
mov
out
cmpsl
xchg
xchg
subl
ret
mov
and
jecxz
out
or
xchg
iret
repz
or
syscall
dec
sahf
out
or
or
mov
push
pop
outsb
cltd
mov
jle
sahf
out
adc
adc
sahf
out
sbb
add
out
out
iret
in
or
and
cmp
pop
and
mov
and
iret
and
lret
es
outsb
repnz
daa
loope
in
nopl
xchg
xchg
es
mov
push
sub
push
das
push
sbb
fucom
jns
and
pop
xor
xor
inc
push
ss
jbe
dec
pop
push
sahf
ja
jns
xchg
cmp
cld
jp
sahf
cmp
outsb
sub
mov
mov
jmp
add
mov
das
repz
push
jns
mov
or
das
push
mov
dec
sahf
out
sub
or
dec
cmp
mov
gs
adc
dec
sahf
ja
jnp
push
adc
test
mov
repnz
loop
in
and
add
adc
sbb
and
and
mov
cmp
pop
out
sahf
fistl
sub
jns
mov
ret
sub
fidivs
stos
add
cmp
cs
das
pushf
cmp
in
pop
push
xor
repnz
repz
sahf
xor
in
jbe
mov
pop
ret
mov
bndstx
pop
pop
dec
inc
cmp
pop
add
jnp
sbb
or
push
add
add
pushf
pushf
mov
push
icebp
cmp
enter
stc
test
smsw
ds
das
jmp
cmpsl
xor
push
xor
dec
in
shll
sbb
into
test
push
xchg
and
cmpsl
das
ret
mov
pushf
pop
aaa
mov
mov
add
dec
call
add
add
pop
xor
inc
push
mov
add
pop
in
adc
nop
stos
add
adc
shlb
ss
add
add
aas
inc
push
or
les
pop
fidivrl
inc
pusha
mov
outsb
pop
cmp
dec
aaa
test
add
mov
mov
mov
xlat
add
push
jbe
fldt
addr16
test
and
leave
leave
mov
lahf
push
or
outsb
fstl
scas
or
mov
scas
adc
ja
cmp
xor
in
jbe
push
addr16
das
push
xorps
pop
imull
push
and
mov
out
jb
pop
andb
mov
orl
pop
popf
pushf
cmp
xchg
sub
cmp
into
aas
xlat
adc
sahf
sbb
data16
or
mov
mov
add
adc
adc
adc
test
jno
and
or
xor
xchg
sub
pop
test
push
adc
xor
or
sahf
jl
movsb
add
cmpsb
fisttps
mov
inc
sbbl
mov
fisubl
inc
lahf
xchg
or
mov
inc
mov
mov
in
sbb
call
shr
jle
adc
push
ficompl
push
pop
fisubrl
xor
mov
xchg
rcr
fsubp
stc
jb
jle
xor
inc
out
pushf
jns
out
and
xchg
nop
mov
test
pusha
sahf
out
sahf
push
dec
inc
cmp
xor
sahf
out
xor
and
out
sahf
out
sbb
or
int
int
and
in
and
push
faddl
aam
iret
repz
shlb
mov
popa
or
sahf
idivl
push
fs
pop
push
dec
mov
cmp
ds
push
into
sbb
clc
and
sahf
out
sahf
aam
mov
sahf
out
cwtl
nop
mov
cmp
jo
pusha
push
cmp
int
popf
cmp
sbb
or
and
cmp
repz
les
loopne
repz
inc
movb
pop
outsb
pop
add
cmpb
cmpsl
in
cmp
mov
es
incl
dec
hlt
xor
aas
sbb
cmp
push
push
add
or
mov
mov
jae
xorb
icebp
incl
in
push
push
push
mov
into
add
adc
imul
pop
dec
inc
sets
push
adc
adc
call
or
xchg
rorl
add
push
dec
jbe,pn
add
pop
es
subb
pop
push
testl
das
outsl
test
pusha
data16
iret
push
pop
jge
jb
js,pn
stc
fildll
pop
jg
jl
add
pop
orl
repnz
add
mov
out
xchg
es
sbb
xchg
cmp
repz
and
and
sahf
out
pop
push
sahf
idivl
or
sahf
cmpsl
stc
ds
and
dec
cmp
jnp
push
fcoms
push
aam
shl
cmp
repz
or
adc
sahf
inc
sbb
fcompl
cmp
aam
pop
out
xor
sahf
add
push
and
out
adc
adc
sbbl
int
aaa
inc
es
fs
out
clc
shll
subl
and
outsb
ret
adc
xor
xchg
cmp
cs
outsl
in
xchg
incl
xorl
fistl
sahf
out
pop
cmp
pop
js
mov
idivb
jns
adc
xor
dec
insl
add
cmp
fwait
cmp
pop
ja
mov
jnp
iret
shl
jae
das
push
dec
insb
mov
add
ds
mov
stc
nop
cli
or
or
ret
addps
mov
adc
enter
push
pop
and
sbb
push
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
pushl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
decl
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
cli
decl
pop
cmpsb
lock
mov
popa
sar
mov
sbbb
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
lcall
int
add
aas
jno
or
mov
ja
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
sar
decl
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
incl
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
mov
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
lcall
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
mov
inc
inc
pop
mov
jne
fldt
cmp
jno
call
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
ljmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
mov
dec
dec
gs
std
orl
pop
ficomps
frstor
mov
scas
or
or
addb
jo
fldl
orb
adcl
je
inc
inc
push
dec
in
cmp
and
dec
dec
inc
push
dec
inc
aaa
xor
fldt
jmp
jg
jp
cmp
call
mov
lcall
dec
inc
jo
inc
popa
push
outsb
jbe
imul
sub
gs
outsl
daa
pop
sbb
aas
dec
insb
adc
xor
jns
rclb
mov
xor
xchg
jbe
add
push
dec
jae
rorb
inc
dec
push
and
cwtl
cmp
pushf
push
sub
mov
inc
inc
inc
test
fidivl
dec
inc
gs
gs
mov
add
xchg
inc
ds
arpl
inc
push
arpl
mov
pusha
imul
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
adc
xchg
out
xorb
sbb
pop
push
adc
in
aam
cmpsb
das
push
adc
push
das
push
fs
shll
xchg
aas
dec
add
inc
dec
push
dec
push
dec
daa
inc
mov
imul
xor
inc
jg
cmp
jns
dec
lahf
mov
xchg
push
les
push
cmp
mov
data16
jns
pusha
mov
push
mov
and
dec
in
inc
and
jb
in
pop
and
dec
push
dec
dec
lds
jae
jbe
lds
push
dec
test
push
mov
or
dec
xchg
int
cmpsb
or
sub
dec
iret
pop
rcrb
jne
arpl
ret
add
outsl
dec
dec
pop
xchg
add
mov
push
leave
and
mov
addb
inc
push
adc
xchg
push
dec
push
jl
fidivrl
sub
sub
push
push
or
add
add
stos
idivl
testl
imul
mov
push
int3
jo
jb
lds
inc
push
insb
mov
add
fisubrl
jp
lock
push
or
jg
push
test
repnz
ret
add
stos
mov
inc
arpl
push
loop
push
dec
push
cmpsl
pusha
push
cwtl
aaa
and
jg
mov
inc
outsl
xchg
inc
push
insb
pop
pop
sahf
sub
add
push
add
sub
flds
lods
outsl
ja
add
xor
ja
xor
das
add
xor
ja
ljmp
mov
pop
and
loopne
push
stc
lahf
sbb
scas
aad
lcall
mov
dec
scas
xchg
pop
mov
or
inc
adc
adc
dec
addl
pusha
aam
jg
push
test
pop
sbbl
test
adc
inc
subb
push
mov
cmpsl
stos
sbb
test
inc
xchg
dec
shlb
dec
dec
mov
js
adc
cmpsl
sbb
push
xchg
arpl
dec
outsl
add
sub
insl
imul
dec
push
pop
push
jne
les
outsl
push
or
pop
loopne
push
fadds
ds
dec
outsl
xor
andl
iret
push
aam
pop
inc
iret
pop
adc
insl
pop
inc
loopw
xor
xlat
aad
mov
dec
jg
jns
loope
push
push
mov
jns
pop
cmp
lock
iret
repz
movsb
mov
dec
call
mov
daa
jl
xchg
out
push
add
mov
mov
push
and
lahf
incl
inc
mov
xchg
xor
ja
popa
push
out
mov
les
hlt
ljmp
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
pushl
out
sbb
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
incl
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
incl
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
pop
clc
pushl
iret
shld
sub
mov
ljmp
or
adc
stos
sbb
data16
inc
fdivl
jno
fildl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
lcall
pop
or
or
mov
cmp
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
incl
sbb
hlt
or
fnstenv
adc
mov
testb
bound
ficoml
gs
aam
pop
popa
mov
into
mov
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
std
call
push
imul
mov
shlb
jae
add
in
add
pop
dec
or
cmp
add
daa
adc
or
dec
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
inc
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
jp
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
decl
ljmp
push
test
ss
sbb
push
imul
aam
loopne
rorl
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
incl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
sar
ljmp
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
pushl
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
push
or
or
addr16
jb
push
hlt
orb
adc
jp
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
jmp
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
hlt
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
lcall
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
incl
pushl
mov
xor
mov
add
push
xlat
int
push
fdivrp
call
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
sbb
add
iret
push
add
test
xor
cmc
mov
xchg
ds
inc
cmp
push
dec
je
push
insb
mov
in
test
call
add
fistps
jbe
push
jns
lods
sbb
sti
arpl
arpl
mov
ss
cmpsl
in
push
inc
insl
jns
movsl
or
outsl
insl
imul
xchg
fildl
imul
push
xlat
fbld
fs
add
cmp
mov
mov
js
inc
insl
bound
inc
out
sub
aad
mov
inc
inc
js
in
bound
push
dec
orl
jno
fistl
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
imul
pop
popa
arpl
cmp
arpl
or
xor
dec
popa
add
bound
popa
add
jbe
pop
sbb
jnp
icebp
xor
inc
xchg
testb
or
insb
add
lock
mov
push
pop
rcr
hlt
inc
rorl
ss
jbe
jnp
push
arpl
popl
add
sbb
ret
jp
mov
fadds
sub
sub
xchg
inc
sbb
inc
and
xor
inc
fstl
push
rcrb
dec
insb
adc
adc
aaa
je
aaa
push
inc
push
mov
add
ljmp
pop
cltd
and
jae
mov
adc
push
dec
push
mov
nop
lods
stos
aaa
inc
or
fisubrs
xor
ficomps
add
jo
inc
inc
add
ds
jnp
add
mov
iret
int
push
dec
dec
sub
xchg
pop
fistpll
xchg
ja
outsb
jne
lods
mov
and
mov
lret
pop
xor
jne
xor
or
add
ss
push
mov
or
mov
aas
jle
stos
pusha
aaa
cltd
dec
jo
add
mov
dec
or
inc
mov
inc
outsl
pop
mov
add
lahf
mov
fwait
incl
or
xchg
imul
adc
rorb
lds
dec
sbb
adc
push
push
js
popa
jo
lahf
or
add
push
outsl
outsl
test
mov
cmp
jno
lds
and
sub
sub
in
nop
test
pop
cmp
aam
pop
ljmp
xor
sarl
jo
test
xchg
pop
adc
insb
jns
das
mov
xor
popa
jb
test
addr16
adc
push
nop
adc
insb
or
cs
test
clc
inc
push
bound
adc
xor
ret
test
ja
pop
adc
xor
xor
add
add
sub
adc
mov
aaa
pop
pusha
jl
adc
loopne
push
pop
pop
orb
scas
addr16
sub
and
mov
scas
xchg
fisubl
xchg
test
adc
jg
push
outsl
rcll
add
aaa
aam
pop
insb
mov
push
loop
aaa
pushf
and
cwtl
mov
adc
dec
lds
daa
push
inc
lds
aas
pop
inc
and
and
and
add
push
out
push
cmp
add
dec
push
pop
jecxz
add
mov
repnz
std
clc
or
pop
add
int
mov
int
mov
jle
fcomps
jo
popa
insl
das
add
dec
cwtl
outsb
outsl
je
jmp
jne
and
and
jg
inc
push
cs
cmpsb
dec
shrd
popa
incl
stc
adc
cmp
mov
into
jmp
jmp
jmp
repnz
in
push
pusha
imul
aas
lret
cli
push
cld
add
imul
in
push
inc
es
add
dec
loopne
add
or
or
sbb
insb
daa
aam
cmp
add
xchg
lcall
out
nopl
mov
add
sbb
add
prefetch
pop
xor
push
test
mov
mov
fistl
pop
subb
or
loop
and
add
pop
add
cs
lock
and
and
or
es
add
jb,pn
leave
xorb
filds
fs
cs
leave
jbe
sub
fs
dec
or
addb
jb
push
xlat
out
push
repnz
adc
sbb
and
loopne
inc
xlat
mov
jecxz
cmp
xchg
imul
cmpsb
jmp
leave
cmp
add
dec
sub
lea
loopne
leave
or
inc
test
ret
mov
cld
or
pop
sub
js
adc
xchg
ret
inc
push
xchg
fucom
push
movsb
pop
push
jbe
xor
push
sti
or
clc
psubsb
int3
cmp
xchg
fucomi
gs
lret
dec
lret
ds
ja
jne
jmp
mov
pop
clc
ja
xchg
cmpsb
jne
fisttps
xchg
xor
inc
push
cmpsb
sbb
ror
loope
add
xor
mov
jmp
mov
int
sub
or
mov
xor
les
add
enter
loopne
sti
xchg
mov
and
or
xor
fwait
in
clc
fwait
xor
cwtl
mov
jecxz
and
dec
mov
mov
aad
rcll
sbb
mov
call
nop
fsubrs
movq
mov
sub
insl
sbb
inc
or
add
xchg
cmp
jbe
mov
dec
je
xor
mov
cmpb
pushf
inc
nop
iret
gs
pop
iret
aaa
sub
push
mov
add
adcb
xlat
or
xor
mov
mov
xchg
add
loopne
call
shll
add
outsb
movsl
addr16
jo
push
mov
clc
pushf
and
aad
pushf
jbe
add
xor
movsb
jne
filds
inc
imul
add
adc
fwait
add
lds
mov
arpl
subb
or
mov
xor
and
jne
fidivl
add
push
xor
movsb
jno
inc
adc
ret
ss
loopne
rolb
cmp
or
sahf
push
andb
rol
paddb
shl
add
xchg
push
or
ja
and
push
scas
pusha
arpl
push
or
xchg
cmp
imul
pop
mov
inc
rcrb
cwtl
sarb
push
or
js
pop
mov
leave
push
lock
je
sahf
jp
push
pop
push
ret
cltd
push
cmp
mov
sbb
mov
lods
and
sub
ret
mov
mov
and
fimull
jmp
adc
mov
es
push
aam
div
pop
hlt
je
inc
test
movb
dec
adc
inc
fdiv
mov
jb
push
mov
aam
lea
scas
out
or
lds
sbb
loope
loop
xor
mov
mov
loopne
sbb
andb
add
popf
adc
je
or
in
imul
and
or
pop
pop
dec
rol
lock
cmp
dec
loop
insl
rclb
bound
ret
jae
xor
ljmp
cmpsl
sbb
incl
mov
and
dec
jge
inc
call
or
xchg
fstps
push
aas
adc
xchg
loopne
cmp
push
dec
and
aad
sbb
pusha
inc
ljmp
inc
and
push
in
pop
je
call
jmp
push
insb
faddl
add
hlt
sub
je
mov
lahf
push
mov
mov
adc
aam
sub
mov
cmp
nop
adc
ja
dec
pop
cmp
nop
add
pop
mov
dec
jl
sbb
lcall
or
stc
jp
xchg
sub
mov
push
mov
cmp
push
or
inc
or
dec
es
pop
loop
imull
pop
xchg
sbb
lock
test
ja
mov
add
jb
add
xor
sti
call
jnp
inc
push
xor
addr16
fwait
jl
subl
insl
pop
inc
pop
call
leave
lret
and
push
add
in
dec
mov
call
add
or
mov
cmpsl
dec
insb
pop
pop
xchg
and
cmp
sti
scas
add
inc
jecxz
xchg
sub
sub
lret
adc
cmp
inc
shll
call
xor
sbb
popf
mov
mov
jo
adc
movsl
repnz
call
test
in
push
jne
xchg
mov
or
cmc
xchg
mov
dec
xor
pop
cld
dec
and
dec
jecxz
mov
out
hlt
jmp
sub
mov
push
test
add
jns
lock
aad
add
pop
mov
xchg
adc
call
pop
lods
mov
out
popf
mov
lods
or
ja
add
loopne
pop
mov
xchg
xchg
lahf
sti
scas
test
ja
sbb
call
in
dec
push
inc
insl
and
or
rcl
adc
loopne
add
add
and
pcmpgtb
cs
shrl
mov
and
test
or
in
shl
xchg
fs
or
mov
cmpsb
xlat
dec
xchg
push
inc
jle
popa
jp
xor
clc
sbb
jb
shll
push
or
outsl
cwtl
inc
or
add
ret
sub
dec
push
ja
or
std
push
pop
sti
mov
push
jecxz
inc
movzbl
pop
dec
adc
testl
int3
cmp
dec
dec
xchg
sbb
inc
sbb
call
rorb
pop
lds
and
fsubrs
lahf
mov
movsl
push
es
sbb
mov
sbb
je
push
adcl
arpl
push
popa
pop
aas
leave
sbb
hlt
push
or
xchg
cld
push
jns
outsl
sub
test
mov
sbb
cmp
sti
jne
push
mov
lahf
push
pop
ss
lret
jp
mov
ds
dec
adc
lret
dec
orb
shr
and
jne
ds
jo
out
sub
aaa
sbb
sbb
pusha
loop
fdivr
outsl
or
xor
lea
sbb
daa
push
push
push
dec
fdiv
cmp
dec
negb
loopne
sbb
pop
pop
pusha
rorb
ficoml
in
int3
call
pop
sub
jp
mull
cs
sub
pop
jmp
mov
andl
mov
mov
adc
xchg
cwtl
dec
add
loope
shlb
fdivl
add
call
daa
les
aas
mov
das
and
addr16
xchg
xchg
dec
xchg
test
in
mov
lea
adc
add
nop
nop
add
add
andb
inc
adc
aaa
add
mov
subb
daa
rcr
mov
add
cmp
xchg
add
out
out
repnz
push
cmpsl
cmp
cmp
jb
pushf
out
ds
fdivrp
xor
fdivr
mov
pop
loop
ret
sub
xchg
push
xor
jo
xor
mov
jecxz
pop
mov
rclb
mov
jmp
sub
push
out
ds
shll
xor
call
xor
mov
int3
or
inc
testl
add
mov
dec
and
or
es
jle
push
adc
pop
mov
pop
push
jb
andl
lds
mov
dec
imul
mov
rep
std
xchg
push
lods
xchg
cmpsb
rep
push
rcrb
adc
cmp
shll
das
stos
jle
rcll
ss
test
pusha
bound
adc
inc
inc
in
xchg
add
adc
sub
dec
sbb
lds
cmpsl
sub
mov
rep
push
pop
lahf
inc
push
sbb
inc
sarb
or
inc
push
mov
rolb
or
pop
fs
pop
sbb
push
or
cmp
jb
je
ljmp
ljmp
or
and
les
lcall
clc
xor
or
mov
je
mov
cmp
scas
sbb
adc
call
pop
inc
pop
pop
insb
or
pop
mov
mov
repnz
pushf
pop
adc
xchg
push
push
cmc
pop
pushf
data16
cmpsb
test
sbb
and
into
imul
lcall
mov
addr16
lret
push
loopne
inc
push
das
adc
pop
mov
inc
dec
sbb
fwait
aas
js
mov
jae
lret
mov
std
jnp
mul
sub
adc
or
gs
push
add
or
and
scas
dec
adc
sub
sub
sub
push
jb
loopne
jae
and
cmp
xor
dec
jle
jmp
ljmp
pushl
or
mov
sbb
mov
dec
in
in
pop
cmp
add
and
jb
and
jmp
inc
and
and
ficomps
mov
loopne
or
rcrl
cmp
fdivl
or
nop
dec
in
or
in
les
pop
xchg
in
enter
adc
pop
jno
or
cmpsl
bound
jbe
insb
jo
rorl
leave
xchg
dec
pop
xlat
sub
mov
insb
lret
cmp
xchg
lods
inc
shrl
test
in
mov
add
sbb
lahf
bound
roll
inc
cltd
stos
repnz
cmp
jl
cltd
je
inc
mov
or
mov
sub
in
mov
inc
jle
shl
aam
fsub
insl
sbb
cmp
mov
jne
jle
inc
inc
xchg
mov
lcall
mov
adc
adc
imul
es
jnp
notb
adc
push
fisttps
inc
xor
movsb
push
ljmp
pop
mov
push
inc
sbb
jne
lods
nop
mov
cmp
pushf
arpl
jbe
orl
xor
or
add
stc
dec
mov
xor
push
aaa
jae
xor
jmp
add
popf
test
test
call
enter
push
data16
push
adc
mov
mov
fstpt
pushf
adc
mov
fldl
lods
lods
dec
xlat
push
push
mov
call
loop
lea
mov
push
jg
call
push
call
aad
cmp
in
in
dec
adc
or
and
mov
int3
leave
push
dec
or
cmp
add
icebp
roll
jl
icebp
mov
cmp
mov
lods
adc
jne
cld
jb
add
cwtl
mov
sarl
sbb
sahf
pop
test
and
adc
negl
add
js
jns
test
orb
aaa
push
or
gs
ljmp
push
add
add
dec
mov
ret
call
inc
stos
push
shrb
or
add
jbe
clc
and
cmp
into
mov
ss
inc
and
jge
mov
xchg
jb
mov
xchg
popa
inc
dec
pop
daa
js
add
add
add
or
lea
pop
je
mov
pop
pop
ror
cmp
adc
or
loopne
pop
add
lret
test
inc
mov
mov
popa
test
fimull
sbb
inc
push
loopne
xor
bound
jmp
lods
ss
loopne
mov
stos
popa
imul
xor
or
jge
push
mov
jae
cld
lcall
rcrb
sbbl
int
nop
add
or
bound
push
mov
add
add
add
les
jns
pop
mov
push
add
scas
pop
popf
jne
xor
out
lods
lahf
inc
cmp
xchg
push
inc
adc
test
insb
mov
cmp
push
aaa
loopne
cmp
adc
push
jne
cli
test
and
sbb
rolb
hlt
repnz
sahf
push
rcll
dec
fnstenv
mov
sarl
jbe
add
pushl
or
jno
pop
leave
jnp
mov
mov
std
and
xlat
outsl
push
xor
dec
mov
xchg
sub
jo
inc
shr
push
adc
call
inc
sbb
sub
cmp
jmp
mov
dec
xor
imul
adc
andl
dec
mov
gs
push
fdivr
mov
dec
adc
std
ds
add
and
push
push
ds
adc
xor
mov
jl
iret
mov
pop
inc
add
fldl
cmp
pop
jbe
test
add
repz
mov
adc
sahf
lret
mov
inc
cmc
and
adc
imul
push
sarb
jnp
inc
fcoms
mov
sub
or
lock
pop
add
inc
shr
int
mov
add
add
orb
jmp
les
clc
ss
xor
mov
mov
lock
adc
loopne
adc
lods
or
sbb
enter
cmovo
add
daa
push
out
jle
jl
adc
xchg
adc
cmp
mov
xor
push
xchg
les
popf
mov
inc
mov
adcb
inc
jecxz
int
cld
cwtl
push
mov
push
call
into
roll
ds
shlb
and
in
jbe
sub
add
xor
cmpsl
test
push
sbb
mov
mov
dec
inc
pushf
clc
push
or
enter
mov
in
and
jne
xor
outsb
in
std
jmp
and
xor
pop
call
inc
jmp
in
jbe
adc
dec
sbb
pop
js
xor
imul
data16
cmp
mov
adcb
mov
nop
in
adc
inc
sbb
pop
mov
jnp
mov
loopne
repz
adc
dec
pop
sub
adc
in
ds
add
push
rorb
fstp
cwtl
adcb
push
pop
add
dec
mov
dec
or
sbb
sahf
jp
jl
add
or
pop
repnz
repnz
mov
jl
sbb
out
filds
jne
mov
jmp
or
int
movsb
cmp
or
es
or
or
imul
dec
pusha
push
pop
xchg
push
xor
cmp
cmpsl
pusha
pop
or
add
filds
add
push
adcl
pop
pop
nop
or
addb
sbb
test
or
into
jne
pop
loope
xchg
sbb
ljmp
decb
push
call
mov
iret
mov
cmp
ss
mov
imul
cmp
fistl
sub
mov
mov
mov
stos
inc
imul
or
add
jnp
test
push
fucomip
cmp
adc
push
sti
je
cmp
jbe
movsb
rolb
xchg
jne
pusha
scas
and
insb
jg
nop
clc
push
adc
push
jbe
std
pop
jbe
bswap
jo
aad
or
testl
inc
push
in
subl
xchg
or
pushf
cli
adc
loopne
shlb
jae
adc
xor
pushf
loop
data16
inc
jmp
inc
add
imul
shlb
add
xchg
shll
test
loope
jb
clc
mov
add
and
mov
and
xor
test
xor
jbe
jl
mov
jbe
fwait
jmp
push
mov
call
jo
push
sbb
cmpb
js
in
mov
into
sbb
sar
lds
lods
sbb
inc
adc
pop
lcall
lods
stos
loopne
jno
mov
je
outsb
or
fwait
jne
ss
out
jle
inc
jns
cmpsb
aad
mov
in
loop
push
push
sub
jecxz
cmp
xor
push
or
fs
and
pop
sbb
aas
cs
push
mov
aam
xor
das
sarb
cmp
dec
pop
mov
mov
imul
cwtl
popa
fsubrl
pop
aas
cli
call
andl
inc
je
cltd
xor
push
push
dec
mov
shlb
dec
je
xor
aaa
in
jae
js
push
push
movsb
pop
pushf
mov
dec
add
or
push
push
add
push
sub
divb
push
xchg
cmpb
mov
shrl
fsubs
dec
sub
enter
add
lock
jb
scas
dec
xchg
and
mov
das
mov
xchg
add
int3
dec
jbe
add
hlt
mov
or
mov
ss
stos
add
out
and
cmp
push
push
adc
repz
push
push
mov
je
std
mov
jmp
adc
and
add
mov
pop
adc
add
sub
movl
sub
mov
dec
push
inc
pop
or
adc
and
push
imul
pop
mov
sarb
call
mov
jmp
push
imul
pop
addr16
insl
lods
icebp
jmp
sbb
sbb
sbb
jne
into
fistpl
loope
inc
mulb
mov
js
es
jecxz
sbb
pop
and
or
je
int3
xchg
andl
dec
decb
outsb
bound
outsl
xorl
or
sbb
jmp
nop
xor
adcl
jns
icebp
add
mov
lds
scas
inc
notl
inc
call
mov
mov
jmp
dec
cmp
inc
cmpxchg
stc
lea
cwtl
cmp
movsl
add
movsb
sbb
inc
mov
mov
xchg
push
clc
push
xlat
push
push
testb
push
enter
pop
jecxz
push
dec
xor
fxtract
icebp
daa
or
sbb
jne
into
movsb
inc
or
mov
push
mov
pusha
or
xchg
add
xor
or
ret
push
lret
and
xchg
in
mov
add
push
call
in
movsb
push
push
xchg
sub
js
sbb
mov
aad
test
or
scas
adc
mov
sbbl
cmp
xchg
and
int3
jbe
sub
jg
icebp
mov
dec
mov
push
lret
pop
test
cmpb
movl
add
out
push
push
sbb
push
sbb
inc
in
fdivl
or
loop
jno
mov
cwtl
or
popf
pushf
or
cmp
mov
je
test
sbb
test
test
stos
push
inc
add
fs
inc
mov
inc
cwtl
pop
sbb
inc
mov
xchg
pop
andl
pop
ja
cmp
jg
push
dec
lea
cmp
mov
pop
mov
orb
push
jbe
test
aas
mov
icebp
mov
add
and
adc
push
decl
or
inc
rorb
incb
jne
movzbl
add
je
xchg
xorb
movsb
nop
sbb
addb
mov
pop
lea
incl
nop
sbb
cmp
scas
sub
mov
jmp
sti
dec
inc
mov
je
mov
push
xorb
cli
sub
sbb
or
and
ja
loopne
rolb
testl
pop
rorb
mov
nop
inc
add
inc
rorb
out
add
sbb
in
sbb
call
add
push
inc
push
cs
outsl
call
sub
movsl
sbb
xor
push
push
call
lret
sub
aam
lea
subb
test
dec
dec
nop
fs
pop
stos
inc
je
xor
cmp
pop
nop
fs
mov
push
pop
notl
and
pop
aas
dec
pop
mov
add
mov
fs
cmp
add
add
mov
adc
pop
inc
add
pusha
and
sub
xor
inc
popl
xor
in
push
add
out
mov
inc
add
xor
and
add
and
xorb
mov
call
add
xor
add
out
xor
xor
sbb
add
test
loopne
addb
xor
sub
fwait
mov
xor
mov
adc
rorb
dec
push
pop
adc
xor
daa
add
adc
mov
jp
jmp
adc
xchg
je
rorb
aad
dec
cmpsl
mov
and
pop
popa
pusha
cmpsb
nop
adc
dec
cmpsl
xor
xchg
jle
cmp
cli
or
or
jp
jle
jge
cmpsl
xorl
pop
call
call
mov
pusha
popa
js
dec
aam
inc
adc
ja
ss
call
and
pop
dec
adc
adc
mov
jp
jge
xchg
mov
jnp
and
inc
pop
cmp
or
test
add
mov
call
enter
movsl
push
adcb
subb
sbb
xchg
jno
std
xchg
pushl
cmp
jmp
sub
push
xchg
pop
xchg
sbb
pushf
test
adc
mov
fmull
xchg
addr16
mov
je
push
into
cmp
test
fimull
jmp
sub
inc
jmp
or
mov
and
js
jle
push
aam
fadds
push
inc
idivl
add
cmp
insb
or
adc
iret
dec
xor
sub
mov
inc
xrelease
pop
negl
and
inc
loop
jne
shlb
sub
popf
notb
adc
push
es
outsb
cwtl
and
add
loopne
cmpsb
cld
aad
es
into
idivb
mov
decl
pusha
mov
imul
push
es
les
pusha
inc
outsl
movsl
or
movb
xor
insb
outsb
iret
dec
push
dec
cld
fisubl
test
call
jo
pop
xor
lcall
sub
xchg
js
sbb
xchg
add
js
xor
sbb
es
sbb
imull
push
shll
xchg
cmpsb
sbb
dec
sbb
je
enter
rorb
divps
sbb
push
sbb
mov
push
xchg
popl
outsl
pop
aaa
scas
dec
dec
cmp
cmp
orl
push
movsl
adc
pusha
inc
pop
add
dec
enter
in
inc
and
inc
mov
inc
push
push
jbe
push
adc
pop
rcrb
loope
pusha
inc
add
inc
rcll
or
pop
int3
cmpsb
fildl
aaa
and
les
pop
jb
roll
inc
xor
xchg
and
inc
sub
je
es
ss
add
or
dec
sub
in
or
mov
lret
addr16
test
lret
call
loope
jmp
adcl
inc
or
push
inc
dec
fldlg2
push
dec
inc
fs
cs
pusha
cmp
jge
nop
push
in
nop
je
mov
outsb
inc
inc
mov
inc
dec
fisttpl
jns
out
inc
or
push
sub
sbb
mov
popf
out
add
sbb
sbb
jmp
repz
je
or
mov
dec
inc
aaa
xor
mov
inc
daa
pop
nop
add
stos
imul
inc
mov
inc
outsb
inc
jb
push
inc
out
mov
or
push
mov
out
sahf
mov
sbb
mov
inc
cmp
inc
cld
or
push
adc
sbb
outsb
inc
inc
int3
add
fwait
shlb
pop
adc
pop
push
andb
nop
adcb
adc
dec
jmp
dec
mov
add
enter
cltd
adc
dec
cmpb
pop
jmp
cmp
je
lret
xchg
mov
add
sub
or
lahf
ret
frstor
lods
lea
test
inc
sbb
add
pop
add
scas
in
in
add
add
cmpsb
mov
emms
mov
lret
add
jno
je
xchg
add
and
add
add
xchg
sub
sbb
mov
or
xchg
or
or
cld
add
or
push
mov
sahf
or
add
or
xchg
or
jb
jb
or
xchg
cmp
push
push
push
mov
rdmsr
adc
push
movsl
adc
pop
adc
adc
cmp
mov
int
push
adc
jns
stos
add
ror
mov
adc
leave
adc
cmp
push
inc
pop
pop
jns
out
and
sbb
xchg
sbb
jns
sub
mov
jns
scas
fcompl
sbb
nop
adcl
add
rep
sub
je
push
sbb
in
lds
ja
sbb
cmpsb
pop
push
push
inc
incb
enter
pop
jne
add
add
sub
mov
fwait
cmpsb
clc
add
mov
pminub
add
cmp
xchg
jp
cld
jmp
cwtl
xchg
push
in
xchg
mov
repz
in
imul
rcl
ret
test
xor
xor
out
mov
out
sub
fmulp
dec
call
adcb
pushf
and
pmaddwd
mov
ljmp
add
push
mov
or
cs
ss
in
in
xchg
aad
in
cmp
push
repnz
mov
out
enter
xchg
out
or
push
imul
lock
fmulp
aad
dec
icebp
cmp
pop
add
repnz
mov
repz
std
mov
dec
dec
hlt
hlt
imul
fidivl
std
cmc
cmc
cmp
sbb
testb
sbb
gs
clc
in
sbb
mov
and
jns
scas
in
add
sti
in
repnz
cld
cld
cld
je
fdivrp
or
nop
shlb
mov
xor
xchg
cmp
dec
sbb
jmp
mov
fisttpll
jb
sub
mov
std
lea
std
jb
pop
jmp
sbb
jecxz
jecxz
xchg
push
repnz
xor
push
xlat
aad
and
or
stos
mov
aam
push
xor
or
out
xchg
repnz
call
push
mov
cltd
and
orb
mov
in
cltd
sub
nop
mov
rclb
or
stos
xchg
stos
or
cltd
xchg
pop
leave
or
lret
add
or
jb
inc
repz
sbb
leave
add
xchg
push
cli
stc
frstpm(287
add
xchg
stc
imul
mov
in
aad
xchg
clc
cltd
jb
andb
push
stc
sbb
xor
sti
sti
sti
xchg
scas
in
pop
or
cmp
jmp
xchg
stos
pop
sub
pop
add
test
dec
or
pop
mov
xabort
xor
stos
mov
loop
stos
xchg
stos
or
loope
pop
leave
or
clc
shl
add
dec
add
or
dec
out
xchg
fdiv
out
and
test
mov
adc
or
push
xor
ljmp
jmp
idivl
inc
mov
pop
testl
xchg
in
aad
into
mul
scas
testb
or
insl
repnz
mov
repz
notb
jns
or
mov
out
div
notb
xchg
mov
sahf
fldenv
repnz
stc
jmp
adc
xchg
leave
or
sbb
add
xchg
pop
cli
hlt
or
xlat
inc
lock
popf
out
test
push
jo
adc
stos
mov
xlat
ss
clc
sti
mov
loope
push
jnp
loope
jp
setb
pop
cvtdq2ps
cmp
lret
and
pop
pop
lcall
mov
repz
push
mov
or
xchg
repz
and
insb
repz
repz
andb
mov
xchg
or
in
mov
in
repnz
andb
xchg
cmpsb
movl
push
pop
adc
and
repnz
repnz
cmpsb
jb
sbb
and
icebp
pop
dec
adc
push
cwtl
icebp
cs
add
or
arpl
mov
sbb
adc
scas
adc
or
inc
jb
mov
test
xchg
in
jl
ret
sub
lret
and
push
sub
ffreep
xchg
stos
test
push
inc
insb
loope
xor
scas
inc
cmp
cmp
pop
leave
add
testl
or
mov
xor
and
in
add
movsb
xchg
dec
add
jmp
jg
mov
and
icebp
filds
int3
dec
push
nop
push
dec
imul
jns
adc
aaa
or
imul
dec
adcl
jp
sub
push
jecxz
repz
repz
mov
xlat
insb
mov
sbb
push
push
aad
in
xchg
jns
repz
or
mov
adc
mov
sbb
mov
inc
out
imul
sbb
lea
inc
cmp
and
push
adc
lret
test
mov
fnsave
imul
or
mov
adc
leave
jle
jmp
push
mov
push
fists
push
orb
push
and
and
mov
push
mov
cs
ficoms
cmp
and
lock
jecxz
sbb
sub
icebp
sahf
mov
mov
or
mov
inc
call
sub
nop
and
call
adc
ret
test
pop
jmp
sbb
pop
add
push
push
and
fsubl
call
sarb
xor
jo
adc
pop
insl
adc
cmpsb
movsb
test
jmp
and
insb
pop
movb
mov
mov
xchg
in
push
push
rcrb
popf
adc
lds
push
js
pop
fldl
inc
xor
stos
adc
push
adc
or
adc
lret
add
roll
sarl
cmp
daa
mov
dec
int
jb
sub
and
mov
add
add
shr
inc
add
xor
pop
mov
jl
ds
or
nop
add
add
or
shlb
xchg
js
data16
mov
nop
movb
and
stos
add
xor
xchg
and
adc
jo
mov
adc
nop
outsb
inc
adc
push
or
adc
adc
push
add
pop
xchg
and
mov
inc
cmp
xchg
and
add
xor
adc
lea
add
addl
ds
xor
add
or
scas
dec
dec
movsl
xchg
inc
pop
jg
mov
adc
jecxz
jbe
lods
mov
sub
mov
cmp
je
stos
sub
in
or
orl
call
les
stc
xchg
pop
or
leave
rcl
xor
jg
sub
nop
jo
mov
adcl
mov
sbb
movsb
sti
adc
mov
popf
mov
adc
push
or
lret
ds
xchg
rcll
jmp
aaa
aad
je
lcall
adc
and
push
cli
mov
jb
pop
and
dec
inc
push
mov
stc
xor
cltd
nop
popa
mov
hlt
push
cmpsb
mov
or
sbb
or
ja
push
xchg
mov
inc
and
pop
dec
inc
jno
pop
and
push
xchg
and
and
imul
inc
mov
in
sub
sbb
dec
in
movsb
push
xor
dec
lret
xchg
push
out
xor
jecxz
and
test
push
mov
dec
aaa
repz
inc
and
mov
sbb
xchg
add
orl
adc
and
xor
adc
fwait
mov
and
roll
enter
adc
or
push
test
sub
movsl
cmpl
and
jmp
imul
sbb
insb
and
push
mov
fs
dec
nop
or
mov
in
mov
push
sub
loopne
call
mov
add
aaa
xor
mov
rcl
pop
fcompl
lea
or
and
jno
iret
cmpl
shl
mov
pop
enter
les
and
push
jmp
push
pop
rcl
test
lcall
inc
cs
push
cwtl
test
sub
xchg
xor
mov
popf
push
push
rcl
rclb
mov
inc
cmp
std
lods
mov
mov
pusha
orl
pushf
mov
arpl
dec
push
leave
sbbb
in
adc
and
pop
stc
and
ret
xor
xchg
inc
ss
and
or
rcrl
test
inc
jle
mov
pop
lcall
push
mov
aaa
dec
nop
into
add
pop
xor
sbb
adc
or
lods
subl
or
decl
and
mov
jle
push
add
xchg
push
popf
add
adc
adc
push
pushl
in
les
or
bound
xor
and
loopne
testb
xchg
shlb
and
loop
test
mov
inc
jp
in
add
mov
daa
sub
jmp
mov
lds
rolb
nop
or
cmp
movsl
and
jno
stos
push
adc
jl
movsl
sti
shr
data16
data16
push
xorb
and
or
stos
fimull
sub
iret
dec
sub
cmpsl
lods
pop
or
cmp
pop
repz
popa
aas
ss
sbb
or
or
leave
sub
cltd
and
call
or
scas
add
cltd
nop
adc
mov
dec
test
xchg
cmp
cltd
and
dec
sbb
cltd
adc
xchg
sbb
jo
scas
je
sti
push
daa
or
and
dec
mov
push
sbbb
adc
push
inc
adc
push
and
and
inc
rolb
and
cwtl
cs
fisttpl
inc
ret
or
jmp
mov
loop
scas
xorl
adc
imul
fldenv
xchg
mov
nop
sbb
push
push
inc
xor
cmpsb
sbbb
or
imul
cmpsb
and
mov
dec
loope
test
mov
lret
orb
mov
or
clc
mov
xor
call
dec
inc
mov
xor
cmp
mov
stos
movl
jl
pop
dec
fldcw
insb
in
loope
popf
dec
or
imul
lods
jle
stos
mov
aam
sbb
xor
mov
inc
out
stos
mov
or
cmp
mov
mov
fs
sbb
mov
dec
inc
cmpsb
add
sbb
dec
mov
mov
popa
sub
rcl
stos
mov
cmpsb
and
push
mov
loopne
pusha
scas
mov
cli
enter
and
shrb
mov
cmp
or
mov
or
xlat
rcl
jecxz
ss
xor
inc
push
mov
xchg
aad
iret
stc
shll
adc
sarb
cmp
dec
ret
push
jp
xorl
rcl
cmpl
or
xor
xorl
dec
addl
icebp
fdivs
xchg
lcall
cmpl
sarb
push
mov
inc
mov
or
dec
dec
aad
je
cmp
push
rcl
sub
mov
daa
test
call
ljmp
imul
pop
mov
fwait
jno
sbb
imul
add
imul
call
mov
cmpl
jmp
inc
lods
imul
cmpsl
sbb
pusha
and
push
ret
add
sub
add
pop
sub
subl
dec
ljmp
popa
and
data16
into
mov
in
test
addl
call
mov
das
sbb
imul
and
rcrb
fildl
lcall
pop
xor
dec
cmp
mov
cmpsl
rcl
inc
mov
aaa
push
addl
subl
push
rcl
dec
pop
sbb
dec
inc
push
add
scas
cmpsb
mov
andl
imul
fwait
push
cmp
int3
sbb
aad
mov
lock
xor
fildll
scas
xchg
bound
add
ss
test
xor
mov
and
je
rcl
orl
or
shr
aad
addl
mov
mov
sub
outsb
and
or
pop
dec
xor
imul
dec
aas
mov
cs
inc
mov
add
sti
lret
cmpsl
rcrb
outsb
sbb
mov
inc
andl
push
rcl
jbe
pusha
push
loopne
jg
cmp
mov
cmp
popf
and
sbbl
ret
push
lcall
inc
dec
inc
xorl
jne
cmp
out
dec
push
orb
das
inc
push
lcall
dec
inc
mov
nop
push
subl
clc
js
movsl
push
rcl
adc
xor
je
push
sbb
andl
subl
xor
xchg
mov
mov
xchg
xor
fs
inc
fs
pop
dec
dec
addr16
dec
pop
cmp
or
cmp
popf
pop
adc
push
call
or
dec
push
popa
jo
cmp
lods
cli
cmp
cmp
daa
adc
xchg
sub
push
mov
pusha
ret
ds
jbe
cmpsl
jo
jge
aaa
imul
adc
les
das
push
sbb
adc
adc
or
das
mov
push
lds
mov
or
add
push
mov
cmp
dec
pop
ret
in
test
sub
dec
bt
mov
sbb
cmp
into
inc
cmp
jbe
lods
ret
mull
pop
push
nop
repz
and
cli
or
rcrl
test
test
adc
std
mov
rcrl
cmp
jnp
pop
int3
add
jl
dec
nop
popa
inc
mov
pop
and
push
in
pop
adc
imul
fstpl
sarb
imul
xchg
add
xlat
push
dec
push
jae,pt
mov
rcrl
xchg
and
dec
pop
sbb
jo
inc
or
xchg
xchg
loopne
mov
inc
pop
mov
mov
insb
or
or
pop
xchg
pop
movsl
and
mov
xchg
xchg
xchg
pop
add
dec
and
movsl
and
orb
fbld
mov
push
test
push
cltd
imul
test
cmp
xchg
je
sbb
push
mov
dec
jge
test
push
scas
pop
cmpsl
push
jae
mov
push
mov
cmp
inc
dec
push
dec
push
leave
ret
mov
push
out
inc
cmovns
js
pop
aad
adcb
sub
mov
in
cmpsl
rolb
cli
stc
mov
nop
push
inc
dec
in
dec
mov
movsb
xchg
xchg
mov
mov
fs
nop
fsubrl
mov
stos
mov
inc
and
and
pop
jb
pop
fwait
shrl
push
nop
mov
xchg
je
hlt
out
or
cmp
dec
enter
lock
xor
sub
lcall
push
jl
sbb
mov
inc
cmp
rolb
nop
dec
push
sbb
sbb
call
add
and
scas
mov
fimuls
call
add
inc
cmp
iret
mov
add
add
mov
lods
dec
sub
pop
sti
test
xchg
ret
negb
and
mov
dec
jp
dec
out
add
push
loopne
add
andb
outsb
inc
sub
add
or
mov
ficoms
xchg
dec
push
dec
xor
add
ja
inc
loopne
jmp
loopne
push
or
dec
jmp
js
add
mov
movsb
xor
add
movsb
shll
dec
mov
sbb
lahf
pop
dec
call
ds
rcrb
sub
mov
dec
adc
cmp
adc
xor
and
cltd
test
push
adc
pusha
mov
test
add
pop
and
stos
cltd
adc
popa
subl
inc
or
call
cmp
adc
xchg
stos
cltd
test
lea
adc
adc
xchg
adc
test
jmp
adc
adc
adc
cmpsb
adc
cwtl
dec
enter
dec
inc
pop
daa
adc
cmp
popa
das
push
test
daa
adc
pop
adc
cmp
mov
and
inc
jle
in
xchg
xchg
adcb
adc
add
cmp
add
je
call
movsb
add
incl
popa
xchg
jmp
mov
movsb
les
stos
and
int
rolb
xor
clc
leave
mov
adc
ljmp
test
mov
jo
sbb
adcl
pusha
addl
pop
ss
pop
push
jns
push
fsubrl
mov
sub
pop
inc
push
sub
repz
push
sbb
clc
pop
and
lcall
loopne,pn
adc
mov
out
push
xchg
mov
inc
push
sub
ljmp
adc
jmp
pop
jbe
adc
adc
mov
mov
nop
inc
and
cmp
pop
jbe
mov
shlb
js
cmp
call
sbb
pop
inc
sbb
ss
push
add
mov
fsubl
inc
jnp
cmp
arpl
es
or
jne
push
movb
and
dec
lret
jp
fistpl
cmp
push
inc
jmp
dec
jmp
xor
push
inc
inc
jp
add
adc
rorb
add
inc
pop
je
pop
es
adcb
add
cmpb
sbb
call
sbb
xchg
jmp
inc
sti
stc
add
mov
jae
loopne
xorb
add
or
rclb
cmp
mov
pop
and
cmp
leave
or
add
jp
into
call
mov
add
xor
inc
jmp
inc
popf
inc
add
adc
push
popf
or
pop
pop
dec
cwtl
sub
repz
sbb
pop
jl
and
mov
inc
mov
psubb
mov
xor
sub
into
inc
mov
rclb
mov
dec
fnstcw
call
xlat
push
sbb
out
ljmp
rorb
sub
jb
cmp
repz
nop
fisubrs
jge
push
push
or
jge
mov
out
shll
aam
es
push
mov
cmp
ja
cmp
xor
clc
in
push
add
and
push
add
ret
push
sar
inc
rol
add
hlt
call
loope
xchg
push
xor
xor
sub
movsb
or
mov
ss
cmc
inc
adc
sub
shlb
or
and
mov
and
push
lcall
dec
push
imul
imul
add
sbb
je
inc
and
test
sbb
popa
mov
jmp
or
and
xchg
add
push
dec
pop
push
push
in
mov
adcl
es
out
mov
xor
lea
add
inc
lea
xor
orl
cmpsl
dec
lock
dec
enter
and
ret
or
cmp
and
les
icebp
push
cltd
add
xor
mov
mov
cld
and
mov
cmp
xor
scas
mov
mov
add
or
test
cs
xchg
ffree
or
int3
out
mov
enter
call
push
push
inc
mov
or
cmc
fists
mov
or
and
mov
mov
and
imul
and
cmpsl
pop
data16
and
dec
inc
lahf
mov
or
xor
lcall
jb
inc
sbb
push
in
cmp
lea
nop
mov
xchg
lret
shl
jge
xchg
insb
xchg
sub
inc
sbb
insb
push
add
pop
add
push
cmpsb
xchg
xchg
xor
into
jmp
andl
mov
sub
sbb
jecxz
int3
push
int3
and
jmp
cmpsw
add
push
out
fs
call
movsb
mov
push
mov
sbb
push
in
jae
aas
testl
jmp
movsb
mov
jmp
inc
mov
sbb
pop
movl
sub
scas
sarl
inc
cli
pop
pop
repnz
cmpsb
rclb
ljmp
xchg
fidivrl
adc
shlb
pop
inc
xchg
stos
add
add
cmovb
add
push
sbb
aad
pop
cmpl
or
cmp
inc
mov
and
sub
shlb
jns
sbb
in
in
jnp
mov
jno
rcrl
repz
dec
push
mov
jecxz
add
rcl
or
mov
push
push
pusha
add
xlat
test
mov
or
jns
shll
jns
daa
addb
cmp
imul
xchg
dec
cmpxchg
or
or
push
addl
xor
sbbb
das
add
and
or
mov
jecxz
mov
mov
or
fistpll
cmp
xor
and
push
jmp
sbb
hlt
add
mov
xor
dec
xor
lcall
xor
outsb
xor
xor
add
add
insb
cmp
roll
add
and
mov
add
pop
add
sbb
and
sub
in
jbe
add
add
int
add
mov
out
popa
leave
and
sbb
push
enter
jecxz
dec
imul
xor
imul
fildl
call
sbb
loope
scas
add
dec
in
xchg
mov
nop
sbb
mov
dec
sub
cltd
push
pop
push
ret
sbb
lret
inc
inc
or
dec
push
and
and
push
xor
push
inc
xchg
xchg
pop
rorb
mov
adc
fwait
pop
and
mov
adc
jmp
push
cmp
in
or
and
in
inc
pop
jne
jne
add
xorl
call
add
mov
add
shl
test
popa
or
loope
fldl
ret
adc
loopne
push
and
shrb
mov
mov
xor
outsl
and
loop
jb
xor
jecxz
mov
jbe
lea
add
les
inc
mov
clc
pusha
out
aam
dec
call
jecxz
or
xor
and
sbb
imul
call
dec
icebp
sahf
add
or
out
and
sub
xchg
dec
adc
or
nop
mov
jno
in
and
call
leave
inc
jge
loopne
add
xchg
insb
scas
pop
and
xchg
sub
sbb
test
jbe
or
sub
into
add
enter
loopne
sbb
fcomp
push
xor
xchg
mov
xlat
inc
rolb
je
cmp
out
push
mov
outsl
mov
inc
adc
daa
lea
mov
mov
cltd
sbb
add
cmp
es
ds
add
adc
adc
test
pop
jo
nop
or
jb
aas
sbb
sub
call
push
adc
mov
mov
and
jo
or
pop
xchg
testl
rolb
pop
shlb
rcrb
push
xor
adc
mov
cmp
mov
mov
scas
stos
push
xchg
push
sbb
xchg
push
sub
pushf
es
mov
les
stos
mov
adcb
push
push
mov
nop
xchg
xchg
push
inc
dec
dec
xchg
cmpsb
or
test
sbb
push
mov
jne
int3
push
addr16
sbb
mov
add
loope
push
mov
movl
stos
dec
pop
adc
sub
loopne
addr16
fdivrl
cmp
mov
mov
and
stos
inc
or
mov
in
mov
aam
pop
call
dec
push
stos
dec
hlt
push
jp
stos
xchg
and
jnp
inc
inc
flds
loope
and
mov
pop
or
out
pop
and
movb
rolb
neg
movsb
data16
and
jmp
cmp
fst
inc
inc
or
xor
cld
cs
or
dec
pop
test
enter
and
call
mov
addl
pop
and
cmp
adc
rolb
xchg
push
lcall
int
lods
outsb
call
xor
pushf
mov
mov
vmovlpd
inc
xor
fldcw
adc
aaa
call
adc
pop
mov
ss
mov
dec
pop
into
jo
cs
int3
mov
mov
ret
mov
and
xchg
pushf
idivb
dec
jno
pushf
pop
adc
ds
popf
subb
hlt
adc
jo
fsts
adc
fldenv
adc
test
sbb
cs
pop
fnstenv
fsts
fstps
and
jbe
pop
or
or
jne
or
add
lcall
pop
jno
nop
fldenv
xchg
add
mov
sbb
mov
cs
adc
or
fnstcw
fsts
or
inc
das
push
lods
inc
inc
outsb
fnstcw
mov
adc
roll
fldpi
sbb
inc
pop
and
lahf
jg
je
shrb
rorl
xchg
sbb
add
mov
popf
sbb
imul
sbb
int
mov
sub
jae
imul
lcall
inc
sbb
stos
in
test
inc
fldcw
pop
or
mov
dec
call
xor
or
ficomps
inc
sub
les
ftst
test
mov
or
inc
or
adc
push
int
int3
sub
call
inc
push
orl
cwtl
mov
mov
je
mov
xor
inc
insl
ret
negb
add
mov
aaa
call
leave
nop
dec
scas
mov
nop
mov
add
mov
xchg
mov
xchg
or
or
js
pushf
dec
xchg
insb
pushf
mov
test
sub
xorl
bswap
xchg
and
cmp
cmp
xor
sbb
sbb
je
repz
loope
or
xchg
mov
xchg
rolb
pop
pop
inc
mov
mov
sbb
call
xor
bound
pop
sbb
ror
inc
xchg
push
push
push
jns
test
xchg
das
sbb
fs
pop
mov
cs
cmp
insl
pushf
and
xchg
pop
roll
pop
leave
loopne
popl
dec
dec
add
dec
inc
xchg
or
shlb
inc
jbe
dec
sti
mov
mov
dec
cmc
popf
and
decb
mov
enter
rorl
scas
call
test
jle
decl
shlb
cmpl
bound
dec
inc
pop
daa
or
pop
inc
mov
or
cmp
daa
or
jp
adc
neg
pop
adc
xor
andl
dec
jae
sub
insb
dec
leave
xchg
mov
or
jae
xor
and
cwtl
insb
jnp
sbb
add
test
cs
nop
mov
mov
jnp
push
xchg
or
ss
mov
jnp
pop
and
mov
push
daa
jnp
sbb
fnop
jne
movups
and
inc
jbe
jnp
xchg
push
xor
xor
roll
pop
push
add
dec
enter
adc
lds
sbb
je
add
addl
popa
jnp
roll
mov
imul
pop
leave
inc
xchg
mov
sbb
add
jmp
sbb
or
popa
mov
test
xor
xchg
fisttpll
mov
adc
jnp
and
pop
adc
mov
push
mov
es
shlb
fisubs
mov
cmp
pop
fcoml
sub
mov
xchg
pop
ret
push
and
adc
test
add
jo
bound
push
call
cmc
enter
popa
inc
xchg
shll
nop
mov
mov
popa
inc
aaa
pop
adc
jle
push
xchg
mov
int3
cwtl
nop
add
je
fnstenv
or
je
mov
mov
stos
sub
adc
push
mov
ret
test
mov
cmp
cmp
ss
mov
adc
aam
or
inc
or
aas
xor
unpcklps
cli
out
or
ss
stc
repnz
adc
and
adc
call
lret
xchg
sub
xor
lock
call
cmp
loopne
call
cmpsb
pop
int
inc
call
mov
cld
adc
push
call
lret
xchg
das
pop
pop
call
fs
in
call
jo
insl
je
adc
pop
mov
call
sub
sbb
cmp
lret
mov
mov
nop
jb
pop
sub
xchg
adc
add
out
push
mov
test
test
adc
movsl
jb
mov
fldl
shlb
xchg
mov
adc
test
loopne
in
xchg
lret
call
jb
pop
sub
xor
sub
sbb
adc
add
mov
leave
gs
loope
push
fstl
adc
xchg
dec
in
rcrb
cs
sub
mov
jle
in
mov
cmp
cs
dec
pop
inc
push
inc
gs
je
push
cs
cmp
xor
xchg
lret
push
adc
jb
pop
sub
inc
or
sub
push
jnp
inc
push
cs
pop
insb
and
dec
xor
or
or
sahf
test
fists
call
mov
xchg
imul
and
adc
in
sbb
inc
sbb
data16
push
and
or
mov
data16
mov
dec
lcall
les
cmp
inc
lods
mov
movsb
mov
mov
or
repnz
movl
push
inc
dec
daa
lods
push
add
add
mov
addb
out
je
xchg
bound
test
lcall
daa
push
mov
and
add
add
pop
pop
mov
adc
mov
xchg
sub
mov
sbbb
add
fstl
cmc
or
push
movsb
arpl
mov
lods
pop
push
movsb
fwait
loop
dec
nop
push
xor
jge
add
loopne
jge
faddl
fdivrs
xchg
gs
pop
or
or
push
pop
pop
adc
popa
sbb
insb
jbe
or
call
xchg
inc
pop
aam
xor
jae
sbb
rcrl
xchg
das
inc
mov
movsb
mov
shlb
call
test
out
loop
adc
adc
adc
mov
dec
xchg
sti
sbb
xor
mov
xchg
and
pusha
push
and
xor
rolb
pop
or
mov
mov
das
mov
mov
dec
xchg
stc
mov
mov
or
pop
sbb
xchg
push
or
shll
jno
add
mov
inc
xor
or
xor
mov
add
sbb
xor
adc
shlb
inc
movsb
xor
fs
or
inc
fisubrs
jmp
fs
ret
push
or
sbb
push
stos
adc
aam
cmpsl
jne
push
push
jne
inc
test
outsb
mov
mov
pop
mov
jne
call
inc
cmp
push
pop
sbb
jnp
out
mov
mov
dec
aam
orb
insb
mov
cli
sub
lds
repnz
in
push
adc
inc
pop
mov
push
dec
test
les
idivb
add
fnstsw
pop
je
rclb
sub
dec
rolb
pushf
sub
and
jmp
xchg
in
aam
pop
je
sarb
lret
pop
jo
push
call
je
pop
mov
gs
stos
dec
push
ret
fdivl
rclb
inc
subb
or
xor
imul
shlb
rclb
mov
add
sub
pop
jp
rorb
ja
sub
rcr
gs
pop
adc
cltd
pop
add
mov
call
cs
xor
pop
jns
pop
cmpsb
je
push
add
pop
lret
xchg
cmp
pop
cwtl
mov
sub
xor
pop
and
in
pop
fcompl
xor
and
daa
stc
sbb
fwait
shlb
test
lcall
out
inc
inc
ja
rorl
rcrl
cmp
sti
call
mov
bound
fwait
jno
and
inc
adc
pop
lods
fwait
add
or
xor
cwtl
dec
push
inc
sub
fwait
dec
js
jmp
lcall
jl
lods
shrl
mov
cmpsl
clc
testb
mov
add
nop
mov
sub
or
nop
adc
das
mov
add
sar
outsb
dec
sahf
adc
xor
cmpsl
pop
mov
or
cmpsl
cwtl
jmp
adc
pop
shlb
fistpll
test
or
adc
fs
fists
or
push
push
adc
je
scas
fiaddl
aad
xchg
and
lods
push
sbb
imul
and
xor
sbb
loope
pop
add
push
dec
mov
and
sbb
leave
test
out
mov
or
out
sbb
imul
gs
inc
inc
fsubr
mov
popl
repnz
lods
mov
negl
call
add
in
push
mov
lea
sub
stos
xor
inc
ror
rclb
xor
js
pushf
push
je
push
mov
lds
pop
xchg
rolb
scas
mov
jo
sub
cmpsb
pop
rorb
mov
jl
popa
adc
mov
add
cmp
or
insb
inc
xchg
bound
mov
jl
xchg
sub
push
insb
inc
jbe
jmp
xchg
mov
sbb
push
je
xor
adc
dec
mov
or
je
push
add
mov
xchg
imul
push
pop
stos
adc
or
push
cld
add
inc
outsb
add
sbb
negb
inc
aaa
lds
cld
jb
push
fsubs
int
add
dec
inc
and
sbbb
add
sub
mov
mov
test
test
or
dec
inc
and
push
cltd
and
and
mov
dec
sbb
mov
cmp
add
call
sub
sbb
fisttpll
andl
adc
rolb
or
or
inc
pop
andl
or
and
jp
cwtl
xchg
inc
or
fwait
and
adc
add
add
inc
dec
andl
aaa
inc
and
das
xor
mov
adc
rcrb
mov
ret
add
cmpsl
cmp
or
and
push
cmp
pop
scas
push
cmp
jnp
or
loopne
push
jnp
add
sahf
cmp
cmpsl
add
pusha
pusha
mov
dec
push
xor
rcrb
sbb
sub
adc
push
adc
nop
mov
push
pusha
pusha
nop
popa
jnp
add
jo
loopne
and
add
sub
pushf
xchg
pop
mov
mov
pop
cli
push
push
jns
sub
in
popf
inc
cwtl
xchg
mov
mov
jecxz
cmp
mov
push
out
cmp
scas
dec
push
mov
mov
rorb
frndint
sahf
call
adc
fldenv
add
add
push
dec
test
xor
movsb
xchg
push
add
cmp
push
add
pop
push
xchg
xor
dec
addl
xor
pop
mov
lods
mov
jo
cwtl
mov
mov
or
pop
xor
fwait
push
push
xchg
push
adc
push
pop
or
add
push
sub
addb
rclb
add
push
pop
call
xor
push
xchg
adcb
add
into
adc
leave
stos
sahf
sbb
test
mov
inc
adc
sbb
sbb
xchg
jmp
bound
push
mov
inc
inc
out
sub
dec
jmp
div
scas
or
arpl
leave
push
popf
adc
or
je
push
call
dec
leave
or
mov
fdivrs
testl
imul
or
push
xchg
inc
loope
stos
mov
addb
movsl
xor
xchg
hlt
cld
sbb
sub
cmpb
push
ja
cmpsl
jne
fistpl
adc
add
add
test
sbbb
mov
test
add
or
or
and
inc
adc
sub
lcall
add
mov
adc
fistpl
ret
repnz
xlat
fwait
scas
pop
inc
les
sbb
mov
dec
mov
out
jb
and
jl
call
int
es
call
fisubrl
or
fildl
push
cmp
xor
dec
cmp
mov
sbb
es
lcall
adc
xlat
ret
lods
add
pop
and
dec
icebp
in
push
inc
jb
out
out
inc
mov
js
and
adc
movsb
repz
popw
mov
dec
out
cmp
inc
sbb
repz
xorb
out
sub
dec
push
int
in
xchg
cltd
mov
test
dec
mov
movsb
roll
push
nop
inc
push
push
pushf
inc
out
cltd
adcl
inc
mov
add
test
jmp
cmp
inc
movsl
cltd
lock
jmp
nop
and
mov
sbbb
push
mov
mov
xchg
mov
pop
cmp
sarl
add
and
or
sbb
iret
repz
ret
mov
cmp
repz
ds
or
sahf
cmpsl
stc
clc
sbb
aam
push
mov
imul
push
mov
fdivp
clc
push
inc
push
push
sub
push
jns
idivb
push
xchg
jl
fidivrs
out
inc
cmpb
push
push
pop
dec
cmp
sbb
cmp
out
repnz
fmulp
mov
test
mov
ret
into
sbb
jns
jnp
incb
add
es
loop
repz
repz
sbb
cmpsl
stc
cmp
sahf
mov
sbb
out
sahf
mov
iret
sarl
and
pop
repz
repz
nop
sahf
iret
repz
lods
mov
fsubrp
icebp
cmp
cmp
inc
push
shl
push
movsb
out
jb
jle
sahf
jnp
ret
in
mov
daa
rol
loop
clc
adc
repz
data16
push
cmp
aaa
je
fs
push
jnp
ds
cmp
adc
daa
pop
mov
stos
inc
cmp
jbe
add
aaa
push
cwtl
cmpsl
insl
mov
iret
lea
repz
out
xor
push
scas
test
ret
sub
mov
shl
hlt
addb
adc
inc
fbstp
movsl
dec
dec
aaa
pop
jle
test
rol
sub
sti
fisubrl
inc
or
dec
push
loopne
sbb
je
pop
rclb
push
mov
push
push
ja
adc
adc
cmp
jb
insb
xchg
js
xor
xchg
stos
daa
xor
or
pop
jae
pusha
inc
or
xor
scas
test
bound
add
out
mov
and
and
cmp
es
dec
cmp
jg
outsb
aas
das
mov
imul
cmp
bound
or
lock
and
inc
mov
pusha
lds
jb
push
cmpl
and
imul
les
or
sub
mov
ficomps
repz
data16
add
ret
dec
int3
and
das
cmp
mov
addr16
sbb
aaa
aas
ret
je
jmp
das
push
dec
inc
push
push
inc
mov
inc
pop
inc
outsl
outsl
rorb
lret
pop
inc
xor
rcll
sbb
pop
dec
rcrl
push
and
pop
dec
call
sar
imul
dec
jae
inc
jne
std
rcll
outsb
je
arpl
fistl
je
ss
mov
xor
sub
sub
sub
inc
inc
xor
xor
aaa
aaa
xor
xor
jge
xor
xor
inc
xor
mov
idivb
cmp
xor
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
cmp
mov
enter
out
cmp
sets
fs
ret
test
mov
fidivrs
mov
push
lock
push
xor
or
push
mov
sub
inc
aaa
adc
xor
inc
pop
dec
adc
dec
sbb
pop
aad
shlb
popa
xor
dec
mov
std
xchg
fistpll
and
sub
pushf
xor
in
xor
and
dec
dec
outsl
mov
sbb
adc
in
scas
fwait
popa
ret
pop
push
push
dec
hlt
imul
ficoml
pop
push
call
push
cmp
out
inc
out
adc
push
sub
out
cmp
ds
adc
inc
mov
lods
data16
lods
and
loope
cmpsb
push
hlt
mov
dec
xor
or
jg
mov
and
outsl
xor
pop
movsb
fiadds
pop
adc
js
push
lods
insb
jns
push
inc
cmp
sbb
inc
cmp
cmp
sbb
xchg
mov
mov
add
ljmp
pop
mov
add
arpl
insb
mov
les
inc
xchg
and
outsb
ret
adc
pop
lret
adc
sub
and
xor
mov
inc
cmp
add
insb
addb
sahf
push
jbe
pop
pop
add
push
lock
sbb
xor
xchg
sbb
sbb
pusha
push
and
xlat
popa
jae
and
nop
mov
inc
push
imul
imul
mov
imul
scas
scas
je
pop
mov
jp
fs
imul
push
addr16
sbb
jecxz
test
xchg
lcall
inc
test
dec
aas
pop
fbld
pop
arpl
inc
cs
push
push
mov
cwtl
xlat
push
add
ja
cmp
je
outsb
outsl
jno
inc
or
popa
imul
mov
xor
pusha
mov
outsb
and
adc
sbbl
inc
and
add
inc
andl
popa
fsubl
inc
rolb
test
arpl
movb
adcl
and
xchg
pushf
add
sbb
push
xor
and
dec
add
adc
push
add
cmpsl
add
push
mov
pusha
cmpsl
fadds
jns
addr16
orb
idivl
adc
sarb
das
lcall
sbb
sbb
call
stc
cmp
push
das
push
pop
nop
cld
and
push
and
jns
out
out
stc
jp
push
cld
fdivr
xor
jns
cmpsl
movsb
test
mov
sbb
dec
out
push
pop
mov
and
dec
sbb
push
push
push
inc
dec
sbb
inc
adc
popa
push
dec
sbb
lds
sub
adc
push
cld
or
sahf
out
sahf
in
int3
les
movsb
xor
ds
mov
jl
insb
push
fs
pop
mov
sahf
out
dec
dec
inc
inc
cmp
repz
push
xor
sub
and
iret
repz
sbb
adc
stc
cmp
repz
add
cld
or
jns
cmpsl
clc
hlt
call
jns
enter
jo
cmp
out
xor
lock
int3
mov
cmp
repz
sbb
imul
push
fcom
sahf
out
sahf
les
dec
repz
aam
mov
iret
repz
sbb
add
call
out
push
mov
jno
iret
inc
cmp
xor
mov
inc
cmp
mov
inc
dec
push
mov
inc
xor
negl
adc
sub
adc
mov
xor
pop
push
inc
dec
cmp
mov
inc
and
test
xchg
mov
mov
inc
shrl
adcb
push
jecxz
push
and
sbb
inc
dec
pop
mov
sbb
pop
jo
and
inc
mov
pop
mov
loop
ud2
cmpsb
pop
and
sbb
push
in
ret
ja
pop
push
fsubrs
jmp
and
pop
jo
inc
cmp
sbb
ret
stos
jae
punpcklbw
adc
add
imul
mov
stos
xchg
icebp
or
mov
pushf
andb
rolb
add
cs
mov
and
loopne
lods
popa
das
push
inc
push
xor
xchg
cld
inc
inc
mov
cs
pop
push
jnp
out
mov
inc
cmp
pop
jne
pop
shlb
dec
ret
push
mov
push
je
imul
pop
xchg
pop
dec
loop
sbb
push
int3
inc
cld
and
or
inc
clc
lds
mov
inc
fs
cmp
xor
fists
neg
inc
push
push
push
insb
das
inc
in
stos
dec
scas
outsl
jl
add
scas
mov
adcb
add
das
loopne
outsb
repnz
insb
xchg
loopne
mov
insb
shl
push
mov
movsb
inc
jo
mov
insl
or
add
inc
sub
and
repnz
jg
fdiv
xchg
or
cmp
mov
ss
movsl
fadd
cmp
sete
int3
loopne
jnp
data16
ljmp
add
xchg
sbb
dec
xlat
jns
pop
jbe
jns
rcr
cmp
ss
push
lcall
lret
jecxz
push
test
adc
aaa
or
push
popf
jl
in
adc
aas
sbb
adc
cmpsb
jg
mov
jbe
push
xor
mov
enter
aam
cmp
mov
sbb
cmpsl
mov
outsl
daa
xchg
inc
add
iret
fcmovnbe
cmp
dec
and
sarl
jbe
fstps
movsl
mov
adc
aam
mov
cwtl
mov
adc
fs
loopne
mov
mov
push
sahf
loopne
daa
jbe
xlat
fdivp
dec
enter
mov
ss
bound
push
xor
push
mov
xchg
xchg
sbb
inc
movsb
cmp
push
dec
imul
add
out
adc
ltr
insb
cmp
push
jnp
lcall
dec
xchg
inc
push
es
pop
adc
add
push
outsl
ja
xor
bound
sub
mov
push
add
pop
pusha
add
out
daa
movsb
and
pop
mov
and
add
inc
repnz
mov
jns
inc
lods
mov
ret
fucomip
cmc
inc
dec
fidivrs
jno
sbb
leave
push
jb
mov
adc
inc
add
insl
jo
lock
add
outsb
push
add
mov
dec
add
xchg
add
push
lods
or
mov
jae
nop
push
adc
sbb
sub
adc
mov
jb
jnp
inc
roll
lret
out
adc
add
jecxz
inc
jecxz
xchg
xchg
sbb
pushf
push
push
add
and
add
es
mov
inc
push
mov
xchg
pop
ret
adc
mov
test
cmp
push
jo
jb
jns
jge
pop
xchg
mov
movsl
and
imul
cmpsl
xor
push
inc
scas
loope
sbb
imulb
push
in
loope
sbb
adc
push
inc
and
mov
pusha
inc
and
cmp
cmpsl
and
inc
imul
jge
xchg
xor
inc
mov
add
dec
inc
add
pop
sbb
fbld
jne
cli
mov
lods
gs
or
mov
notb
rolb
ljmp
mov
push
scas
shll
xor
xchg
and
xchg
jmp
in
shrb
pop
ds
fs
fstl
push
dec
xorl
dec
and
ret
inc
sti
mov
gs
push
adc
and
das
and
push
rorl
jb
xor
and
inc
mov
inc
xchg
push
mov
dec
add
rcll
sbb
aas
das
pop
outsl
mov
mov
inc
loopne
push
fldl
xchg
stc
dec
ficompl
add
push
lcall
orb
mov
push
xor
xor
dec
dec
pop
mov
adc
add
inc
jns
push
fs
lds
lret
mov
lret
mov
outsl
inc
push
outsl
cmp
xchg
pop
roll
add
inc
push
sbb
std
xor
lds
sbbb
sbb
lock
in
js
cs
rolb
insl
imul
push
mov
xchg
jge
push
adcb
arpl
inc
jmp
enter
dec
xchg
jne
inc
js
aaa
dec
inc
dec
pop
mov
xchg
or
aas
inc
cmc
push
xchg
test
adc
push
stos
mov
sbb
push
add
inc
jp
xlat
push
add
mov
stos
iret
add
jo
jo
mov
xor
xor
loopne
pop
mov
fs
sub
mov
push
addb
ds
sub
push
jo
in
ror
jno
cmp
push
fs
loopne
arpl
xchg
pop
roll
in
xchg
xchg
add
cmpsl
ljmp
dec
imul
adc
out
jno
add
iret
pop
add
fcom
xor
out
shll
cmpsl
add
push
pop
sbb
mov
xchg
xchg
or
sbb
and
jns
push
jle
popa
insb
cld
inc
jae
xor
cli
adc
sbb
je
ja
pushf
ret
push
testb
outsl
xor
into
add
add
dec
aam
lcall
mov
out
pop
sub
jnp
insb
sbb
add
out
jle
sub
rcl
xor
out
push
dec
sbb
and
pop
outsl
mov
pop
ficomps
mov
push
frstor
mov
fwait
xchg
adc
ja
scas
scas
sub
push
jecxz
push
mov
fildl
push
pop
or
or
in
aam
jl
dec
das
lret
jae
mov
add
pop
pop
push
insb
popa
cmpsl
shl
push
sbbb
push
setle
or
push
iret
icebp
andb
jge
and
add
sub
ret
std
jns
adc
daa
imull
test
mov
mov
jo
pop
add
add
gs
cmp
iret
dec
int
imul
sti
movsb
push
pusha
stos
fsubrl
ret
xor
jo
pusha
adc
xor
hlt
mov
push
jo
or
xchg
orb
test
mov
daa
sub
fs
add
push
dec
mov
push
push
mov
out
or
or
clc
out
lock
enter
repz
mov
lods
test
pop
mov
pushf
cwtl
xchg
nop
mov
jns
out
js
push
cmp
pop
push
inc
cmp
and
iret
repz
sbb
cld
in
lock
adc
call
mov
enter
cmp
repz
mov
repz
push
cmp
sub
sbb
iret
repz
or
cld
in
hlt
jns
out
in
in
int3
mov
lods
mov
mov
js
out
jns
fs
inc
sub
and
adc
repz
jmp
adc
inc
test
push
dec
pusha
arpl
pop
adc
push
roll
push
jmp
push
mov
daa
adc
or
cmp
out
testl
lock
push
leave
xchg
add
nop
dec
or
aaa
addr16
sarb
push
aaa
cpuid
push
push
push
imull
lret
jbe
add
pusha
pop
testb
push
mov
add
add
dec
add
push
addl
daa
adc
scas
pop
scas
and
fstpl
adc
mov
inc
addl
shrb
adc
jns
mov
push
pop
add
fwait
jo
add
in
cmp
mov
push
outsb
add
sub
fimull
cmp
insl
xor
ffree
sub
jbe,pn
and
es
xchg
lahf
mov
xor
xor
ds
je
mov
xor
mov
xor
loopne
outsl
jb
imul
mov
jnp
lods
popf
xchg
imul
add
inc
inc
js
and
jo
sub
and
pop
rolb
jb
jne
popa
pop
cmp
es
popaw
insb
into
insl
rcrl
pusha
sub
das
sti
ss
sbb
inc
loopne
jmp
jnp
jnp
push
inc
add
inc
pop
pop
adc
jg
mov
aam
add
xor
xor
sbb
pushl
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
pushl
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pushl
enter
ljmp
ss
es
dec
aaa
push
aaa
mov
jmp
pushl
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cli
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
loopne
sarb
aas
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
call
xor
xor
xor
xor
mov
xor
xor
xor
aas
clc
xor
out
xor
xor
xor
xor
xor
xor
aas
cmp
xor
scas
xor
shlb
jecxz
call
xor
mov
ss
ss
ss
ss
mov
lock
sbb
jno
mov
aaa
loopne
add
or
mov
cmp
loopne
jmp
cmp
cmp
cmp
aas
cld
cmp
push
cmp
jl
cmpl
mov
cmp
push
adc
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
jg
and
test
jo
test
mov
stos
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivr
pushl
fnsave
ljmp
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
movsb
cmc
lcall
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
call
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
cmp
loope
std
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
inc
sbb
pusha
pop
loopne
das
jle
or
cmp
pop
xor
push
xor
pushl
xor
xor
xor
xor
xor
xor
ret
xor
pop
cld
xor
pop
xor
lcall
clc
xor
xor
lock
pushl
test
mov
mov
nop
xor
out
in
xor
scas
clc
xor
outsl
jmp
arpl
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
mov
stc
cmp
cmp
cmp
push
lock
lcall
das
cmp
ds
fidivrl
jmp
xchg
outsb
xor
xor
mov
xor
dec
ss
xchg
cmp
cmp
mov
mov
ljmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
pop
and
adc
dec
aas
push
mov
dec
shr
incl
aas
lret
aas
in
out
out
jo
mov
xchg
xor
xor
xor
xor
lcall
cld
add
xor
xor
loop
xor
xor
std
pushl
push
xor
mov
xor
xor
scas
std
xor
cmpsb
mov
xorb
ss
add
or
aaa
and
jg
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
mov
imul
popf
cmp
xor
pusha
cmp
mov
icebp
cmp
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
pop
aas
sbb
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
repnz
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
lcall
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cli
push
cmp
cmp
cmp
sbb
cmp
dec
cmp
push
cmp
mov
cltd
cmp
jp
jg
cwtl
ds
ds
call
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
xchg
into
or
push
xor
insl
pushl
stos
lcall
fidivl
in
pop
or
or
adc
and
sub
cmp
jb
aas
scas
mov
xor
xor
xor
xor
xor
xor
jg
fbstp
xor
xor
scas
jno
xchg
xor
xor
ljmp
cmpsb
pushl
xor
xor
mov
pop
pop
pushl
xchg
aaa
fwait
sahf
cmpsb
mov
xor
scas
cmp
sbb
cli
xchg
cmp
fdivrl
aaa
cmp
mov
mov
data16
dec
cmp
cmp
cmp
cmp
and
add
xor
push
or
xor
cmp
bound
data16
push
filds
pushl
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
cmp
pop
jmp
cmp
cmp
cmp
cmp
jle
mov
pop
dec
out
sbb
ds
xor
xchg
aas
push
das
clc
stos
dec
mov
insl
xor
mov
fcomip
xor
xor
xor
jl
fiadds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
bnd
ljmp
or
cmp
pop
cmp
jge
mov
cmp
cmp
incl
jbe
xchg
cmp
cmp
cmp
mov
and
and
cmp
cmp
fdivrs
push
aas
jne
mov
xlat
lcall
or
mov
fwait
xor
xor
dec
add
xlat
or
repnz
aas
xor
shll
mov
xor
fsub
adc
es
dec
ret
jg
ss
outsb
notb
ss
in
and
cmp
rorb
xchg
cmp
mov
ds
ljmp
aad
clc
das
push
imul
cmp
test
mov
ret
call
jg
dec
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
cmp
cmp
pop
sarb
inc
cmp
cmp
jge
mov
pop
and
push
cmpb
cmpsl
ds
loopne
ljmp
idivl
add
sbb
addr16
loope
popa
sbb
sbb
jg
xor
xor
pop
xor
xor
cmp
or
xor
xor
xor
xor
xor
mov
xor
push
lcall
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
cmp
cmp
mov
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
push
sub
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rclb
dec
clc
loop
sub
jne
adc
xor
jae
sub
xor
jg
xchg
xor
xor
xor
fcom
or
jge
xor
xor
ljmp
lcall
add
adc
sbb
sbb
sub
sub
nop
cmp
cmp
cmp
int3
cmp
cmp
cmp
ljmp
push
out
xor
aaa
adc
mov
inc
xor
xor
lcall
decb
loope
movsb
xor
les
int3
mov
xor
xor
incl
or
xor
xor
cmp
sub
sub
xor
pushl
or
inc
cmp
cmp
cmp
adc
cmp
fiadds
loop
je
js
jl
cmpb
cmp
push
add
push
shl
mov
int3
mov
cmp
cmp
ljmp
call
dec
cld
pop
mov
call
cmp
pop
stos
sbb
and
and
add
lock
cmp
xor
cmp
inc
cmp
pop
jg
dec
cmp
pop
cmp
cmp
insb
cmp
test
sarb
cli
jl
cmpb
push
mov
nop
call
test
xchg
cwtl
mov
sub
xor
inc
clc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
rcrb
cld
pop
sub
aas
fdivrs
loopne
clc
jbe
push
ja
lahf
jle
cmp
pop
bound
clc
xor
lock
pushl
and
inc
xor
xor
cwtl
xor
xor
xor
xor
or
push
cwtl
cmpsb
cmp
outsl
cmp
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
jmp
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
dec
sbb
cmpsl
call
ss
ss
ss
pop
loopne
jle
or
or
adc
adc
aaa
sbb
and
and
sub
sub
mov
aaa
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pop
loope
cli
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
xchg
faddl
into
mov
dec
mov
mov
jmp
xor
enter
shlb
aam
fdivs
fcoml
pop
mov
in
out
aaa
hlt
clc
dec
pop
mov
cld
aaa
hlt
add
or
adc
adc
sbb
sbb
mov
ret
fdivrl
call
mov
cmp
pop
std
jg
mov
cmp
cmp
sub
cmp
cmp
cmp
cmp
aad
mov
cmp
jl
test
lcall
mov
mov
cmp
mov
mov
cmp
je
movsl
pop
orl
or
in
xchg
movsb
fs
lret
out
out
xchg
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
stc
popa
aaa
stos
mov
push
lret
aaa
ljmp
gs
outsb
add
jl
aaa
mov
daa
or
pop
out
repnz
push
add
inc
ds
loope
addb
repz
add
rolb
subl
aam
xor
out
lods
mov
or
lret
out
addb
cmp
and
push
xchg
sub
sub
add
repnz
and
dec
mov
cwtl
or
mov
rclb
out
add
sbb
push
pop
pusha
or
dec
out
subb
add
cwtl
insb
or
sub
daa
add
lret
mov
fsts
daa
popa
or
test
int
movsb
scas
aas
and
mov
add
inc
pusha
mov
fmull
push
gs
adc
or
gs
dec
add
iret
cmp
xor
pusha
sbb
adc
iret
push
sbb
call
out
lods
cmp
xchg
sbb
sti
push
push
sub
je
and
imul
pop
bound
jle
cld
arpl
incl
jl
or
incl
jb
hlt
mov
adc
add
and
or
pusha
dec
fmull
out
and
xchg
mov
and
das
dec
fs
jbe
call
mov
pop
insb
add
or
std
mov
mov
pop
xlat
xchg
insl
pop
push
sub
or
xchg
push
xor
add
jp
mov
ffreep
aaa
or
and
cmpb
or
ss
and
popa
or
imul
add
mov
dec
sbb
ret
add
push
add
add
adc
mov
and
sbb
pop
std
sahf
add
rcll
lret
sarb
sub
pop
jp
push
call
shr
inc
cmp
jne
mov
std
push
add
pop
adc
add
negl
pop
jmp
push
cmp
call
dec
dec
cld
xor
push
out
xchg
call
xchg
push
or
xchg
dec
pop
andb
inc
into
in
in
mov
adc
add
push
add
dec
test
push
push
clc
pop
lods
adc
add
addb
mov
or
ret
adc
loop
sbb
or
adc
jbe,pn
pushf
xor
jb
push
cmpsl
and
fstpl
push
push
je
inc
or
xchg
mov
sbb
leave
push
xchg
pop
clc
ffree
shl
or
mov
add
dec
test
or
push
pop
mov
loope
test
push
xor
sub
insl
pop
dec
sahf
and
or
pop
pop
stos
dec
ret
mov
pusha
cmpsb
or
outsb
mov
push
adc
aas
sbb
jecxz
xor
push
mov
test
adc
push
ja
lcall
aaa
push
insl
dec
inc
push
pusha
jno
pop
jecxz
pushl
xchg
or
add
add
pop
adc
les
push
add
mov
cmp
and
in
add
movsl
sub
push
pusha
dec
cmp
add
sub
js
mov
adc
push
pop
pushf
mov
push
pushf
mov
jo
jbe
dec
fcmovnbe
or
pop
int3
adcl
leave
inc
jo
sarb
ret
cs
inc
lret
xchg
fstpt
cmp
or
fstpt
or
fcomi
mov
push
mov
and
adc
sarl
mov
loope
pop
enter
xchg
stos
icebp
sub
cmp
jmp
bound
or
xchg
sub
mov
cltd
lock
arpl
pmaxsw
or
sbb
xchg
ret
inc
push
mov
cmp
mov
sahf
sahf
addl
inc
aas
cltd
adc
test
fldl
cmpsl
gs
jle
push
pop
cmpsl
gs
cmp
mov
and
lret
aas
cmpsb
jo
mov
mov
fwait
and
sbb
je
aam
pop
imul
push
add
jne
and
or
adc
ss
sbb
push
pop
fcoml
addl
stos
adc
cmp
mov
pop
sub
mov
mov
mov
adc
mov
repnz
fs
push
ss
inc
adc
sbb
rol
adc
imul
in
pop
cli
sbb
xchg
stc
and
ss
pop
or
decb
ds
mov
or
sub
sub
fucomip
dec
call
call
or
jbe
dec
mov
aaa
mov
and
inc
rolb
adc
cmp
popa
or
dec
inc
xchg
aaa
cwtl
fstl
pop
aaa
and
popf
and
cmp
test
lret
mov
call
es
add
fsubrl
xchg
sbb
mov
sbb
mov
sbb
pop
mov
push
add
lcall
push
adc
inc
mov
inc
and
sub
sub
gs
fwait
stc
add
lea
sbb
push
push
sbb
sbbl
push
add
movsl
jg
gs
mov
sub
das
mov
fistps
or
mov
mov
add
cmp
or
push
sbb
and
repnz
add
push
or
mov
sbb
sbb
adc
cmp
add
add
inc
fimull
jne
mov
orb
mov
xor
mov
add
add
push
adc
fldt
sbbb
and
fdivl
insb
push
or
inc
out
sub
fistpl
xor
jp
cmp
or
ja
ret
xor
mov
pop
inc
insb
mov
sub
lret
push
fcomp
mov
fcmovb
cmp
add
les
pop
nop
and
fwait
popf
cmp
movsb
and
cmp
mov
nop
push
and
es
add
sbb
dec
pop
mov
dec
mov
pop
sub
xchg
cmp
jnp
je
insb
fs
push
dec
lret
dec
inc
xor
jmp
out
mov
movl
and
addb
std
jg
and
repz
outsb
xor
pop
nop
inc
push
fs
mov
pop
pop
add
push
sub
mov
jns
shl
call
mov
repz
or
and
and
xchg
movl
or
push
in
shrb
mov
cltd
jle
add
jb
stc
xor
rclb
sub
cltd
and
mov
popa
hlt
push
sbb
test
cltd
mov
lods
and
je
cltd
mov
push
stc
adc
pop
aam
mov
pusha
cmpsl
push
divl
leave
repz
call
xor
gs
pusha
adc
incl
test
imul
in
movsb
daa
daa
xor
andl
dec
shll
daa
daa
daa
daa
cmpsb
xor
daa
daa
daa
push
and
daa
daa
daa
sub
inc
sub
sub
repz
sub
or
or
sub
imul
inc
lcall
xor
sub
sub
sub
adc
jmp
stos
in
testb
cmp
adc
sbb
cmpsb
mov
jecxz
sub
ret
sub
xchg
adcb
cltd
push
pop
push
out
xor
subl
ss
mov
pop
push
jnp
jae
push
lock
jp
mov
es
or
clc
fs
dec
sbb
cltd
lret
pop
sub
mov
psubsb
cwtl
addr16
andl
inc
push
xchg
sbb
push
loopne
jg
and
mov
or
add
cwtl
mov
syscall
addr16
pop
or
adc
sub
add
addr16
jle
jno
push
or
pop
xchg
rorb
push
test
push
addr16
pop
pop
push
mov
rcll
test
sub
mov
and
cmc
ficomps
orb
or
adc
test
or
mov
inc
loopne
addr16
and
jmp
pop
jb
addr16
adc
nop
out
nop
dec
out
adcl
add
cltd
mov
or
jp
repnz
mov
mov
mov
inc
pop
mov
cld
add
sub
sbb
inc
loop
nop
cltd
inc
mov
and
aad
xchg
mov
cltd
jb
icebp
xchg
push
cwtl
jge
jno
lret
rol
arpl
jno
inc
mov
fs
outsl
insl
subb
mov
xor
fdivl
nop
cmp
sbb
pop
pop
adc
cltd
pop
sbbb
sbb
pop
ficomps
push
push
adc
sbb
test
or
fadd
inc
loop
jmp
adcb
pop
ljmp
mov
popa
rolb
sub
and
bound
jae
mov
jns
mov
mov
mov
jae
pop
or
push
jae
jne
pop
aam
jae
inc
sub
mov
movsl
fsubs
outsb
sbb
dec
adc
bound
or
sub
mov
and
push
jae
ficompl
add
mov
mov
lret
inc
lods
dec
lods
inc
fsubs
sbb
mov
lds
pop
push
lods
sarl
in
xor
pop
xor
mov
jno
push
mov
or
push
jne
jno
rcrb
insb
push
cmpsl
loopne
jno
mov
rcll
cmpsb
popa
fdivs
fsubs
adc
pop
lds
fidivs
mov
adc
pop
addr16
add
mov
add
lds
jo
leave
inc
test
mov
test
fstpl
inc
stos
or
jno
bound
lds
jne
jno
scas
or
or
sbb
mov
sub
adc
xorb
mov
mov
or
aam
es
dec
jae
das
push
xchg
push
mov
mov
and
or
pop
adc
and
inc
cmp
and
xorb
adc
icebp
mov
pop
rol
and
movsb
dec
ja
dec
pop
adc
outsl
in
or
push
rorb
scas
and
pop
test
cs
jecxz
incb
push
dec
shl
push
mov
nop
pop
enter
push
add
mov
je
gs
adcb
inc
add
dec
adc
mov
adc
cwtl
pop
push
les
inc
sbb
sbb
jp
nop
les
popa
mov
inc
pop
and
xor
dec
pop
xchg
pop
mov
loope
push
ds
out
mov
cmp
jnp
pop
loope
sub
not
mov
push
push
inc
pop
mov
inc
xor
jmp
movsl
hlt
xor
fcoml
xchg
cltd
sbb
xor
xor
xor
cmp
xor
xor
inc
pop
inc
dec
mov
xor
dec
inc
pop
cmp
dec
cmpsl
das
pop
mov
and
fldl
mov
push
call
push
pop
jg
pop
jmp
or
mov
adc
out
or
fdivs
adc
pop
stos
fisttps
add
test
or
jno
bound
call
adc
or
xorl
fisubs
sbbb
rolb
movsl
aam
and
inc
cmp
in
adcb
pushf
add
cmpsl
mov
mov
cmp
scas
cmp
fidivl
jae
shrb
in
cmpl
lcall
in
nop
inc
pop
fistpl
mov
call
popf
add
xor
jmp
stos
adc
lahf
xor
dec
enter
dec
mov
xorl
push
sub
aas
lcall
dec
mov
fisttpll
cwtl
pop
dec
ffree
push
xor
js
cmp
fmul
fdivl
dec
std
test
mov
push
call
sbbb
pop
or
lret
test
les
fsubrl
sub
fdivrl
pop
lods
lret
call
pushf
dec
pop
jecxz
adc
push
ret
faddl
xor
mov
daa
adc
push
mov
dec
mov
gs
lock
add
mov
mov
hlt
mov
dec
fsubl
subb
sbb
ljmp
enter
mov
mov
in
mov
loopne
je
cwtl
nop
iret
xchg
fs
or
clc
mov
test
mov
mov
nop
loopne
xchg
or
sbb
xchg
sbb
mov
mov
pop
adc
sbb
mov
jmp
push
loopne
lods
pop
daa
sub
xor
in
xchg
inc
add
add
xor
or
add
andl
enter
lea
loopne
mov
and
inc
jecxz
rcrl
xor
shll
cltd
push
cltd
shll
mov
mov
adc
jp
inc
mov
and
scas
sub
push
cltd
mov
cltd
pop
lahf
add
inc
and
and
cltd
xchg
and
mov
stos
push
inc
jmp
cwtl
mov
mov
jns
sub
jns
and
cwtl
test
repnz
clc
inc
ret
pusha
andl
cltd
inc
ljmp
mov
fcoml
loope
fadd
sub
mov
mov
add
stc
push
repz
push
xchg
repz
xchg
push
mov
xchg
lods
jl
fsubrl
fadd
sub
and
jo
cmpsl
rcrb
adc
pushf
addb
and
jb
dec
inc
mov
pop
adc
adc
xchg
push
call
test
popa
insb
je
xchg
mov
arpl
mov
insb
xchg
icebp
jmp
stos
fcomi
out
cmpsl
jge
jmp
add
ret
call
dec
pop
jge
ret
movsb
popf
lret
hlt
je
sbb
sub
pop
push
ret
xchg
out
jae
xchg
js
jl
addb
loopne
in
mov
and
jo
xchg
inc
push
mov
pop
leave
and
inc
inc
icebp
push
sub
xor
out
pop
jns
fldenv
sub
or
jl
jl
mov
test
inc
adc
xor
in
sti
pop
out
imul
pushf
inc
pop
adc
or
sbb
out
repnz
inc
or
arpl
cwtl
mov
sbb
sbb
cmp
pop
movsb
jne
sbb
mov
pusha
and
pusha
xor
xchg
fistps
gs
push
je
aam
out
lret
adc
push
xchg
jecxz
cmp
xchg
inc
xchg
push
insl
loop
push
fcoms
push
xor
xchg
pop
fwait
mov
lahf
jae
movsl
xor
xor
cwtl
loop
push
jns
xchg
pushf
mov
imul
xor
mov
cmp
xchg
mov
push
mov
adc
push
push
or
xchg
push
push
add
xchg
or
ss
test
adc
xchg
add
cmp
aam
fptan
in
leave
js
cmp
dec
dec
push
scas
shrl
leave
stos
nop
daa
sbb
shll
mov
inc
sbb
hlt
insb
cmpsl
xchg
or
cmc
rorb
or
xchg
cwtl
add
es
lods
add
push
dec
add
pop
imul
sub
pop
add
test
inc
into
dec
xchg
dec
seta
cmp
mov
mov
adc
dec
dec
xchg
outsb
push
inc
xchg
inc
push
sbb
jns
lds
pop
xor
xchg
movsl
xchg
rcrb
or
ljmp
leave
xchg
mov
es
sub
aam
ret
adc
sbb
cwtl
sub
subb
int3
dec
jmp
call
xchg
mov
leave
rcrb
sub
and
pop
jo
add
fs
les
imul
cmp
adc
adc
inc
push
daa
jb
faddl
add
xchg
push
adc
mov
xor
adc
xor
cmp
or
in
insb
xor
mov
loope
clc
lods
stos
adc
jnp
or
int3
leave
call
pop
and
mov
fmuls
int
push
out
sti
fs
push
in
mov
inc
int3
pop
insb
push
inc
push
int
out
subl
push
cmp
insl
sbb
jge
mov
dec
inc
arpl
imul
fimull
push
inc
cmp
sub
mov
test
push
jb
dec
sahf
in
fisubrl
and
jb
push
adc
nop
or
sbb
mov
mulb
mov
fistl
push
fildl
enter
and
fildl
popa
ftst
cmp
push
cmpb
fucomi
nop
or
lret
cmp
cli
iret
aad
push
or
daa
ret
pop
cmpsl
add
and
fisttpl
adc
mov
or
inc
mov
push
pop
fistpl
shll
loopne
adc
push
dec
sbb
fistl
push
mov
push
and
rcr
sbb
fcmovnu
mov
adcb
xor
loopne
aaa
mov
jns
adc
jno
rcrl
fildl
fldt
call
push
push
xchg
mov
push
or
dec
inc
fisttpl
add
and
xchg
inc
add
out
loope
rorl
push
jle
dec
or
add
sbb
shlb
or
xchg
aaa
lea
and
fildll
adc
or
mov
cmpsl
mov
iret
adc
cli
lock
ror
sbbl
adc
sub
int3
jns
mov
sub
dec
pop
lret
lret
add
mov
mov
lret
lret
sbb
add
cld
mov
in
lret
lret
lret
lret
fdivrl
les
mov
mov
jns
cltd
mov
cmpl
imul
push
mov
and
jns
cmp
nop
sbbl
mov
enter
idivl
in
pop
cmp
mov
jb
sbbl
cmp
inc
push
xchg
mov
sbb
and
jo
gs
nop
orl
mov
enter
and
in
or
inc
push
jb
mov
and
cmp
mov
nop
sbbl
mov
enter
xchg
mov
in
pop
cmp
gs
sbbl
inc
mov
inc
push
cs
sbb
and
or
jb
sub
fidivrs
adc
inc
inc
outsb
daa
das
mov
or
xor
call
mov
or
mov
or
inc
dec
fcmove
inc
adc
adc
adc
sbb
imul
data16
sbb
cli
mov
and
call
sbb
cmp
les
cmp
inc
inc
cmp
dec
mov
cmp
sbb
dec
jl
dec
push
pop
repnz
dec
push
add
arpl
adc
cmpl
push
inc
mov
popa
inc
aam
cmpsb
add
push
inc
in
xor
test
das
stos
inc
add
add
inc
adcl
inc
adc
inc
leave
and
mov
stc
sub
jb
jp
dec
dec
dec
repnz
push
mov
mov
cmp
ret
ret
xchg
push
neg
les
pop
mov
hlt
imul
or
and
icebp
sbb
mov
mov
xor
mov
adc
add
mov
inc
incl
test
aam
or
movsb
mov
mov
mov
xchg
syscall
movsl
sub
push
lea
lret
movsl
sub
stos
outsl
push
xchg
dec
ret
push
xchg
outsb
subb
add
mov
gs
mov
outsl
shrl
mov
push
mov
xchg
and
cmp
xor
xchg
outsl
sub
movsl
outsl
stos
push
xchg
push
jl
sub
movsb
mov
mov
and
xchg
xor
outsl
mov
pop
rcr
push
lret
outsl
push
sbb
sub
cmp
je
xchg
mov
adc
and
add
sub
stos
xchg
outsl
repz
movsl
rcll
outsl
xor
xchg
outsl
int3
sbb
pop
inc
xchg
mov
addr16
outsl
mov
and
pop
pop
gs
shrl
movl
add
jmp
in
inc
push
and
leave
sub
jle
push
xor
imul
dec
imul
iret
scas
imul
mov
and
gs
imul
lcall
imul
sub
es
jne
cmpsl
sub
sbbl
sub
lret
imul
in
mov
xor
and
gs
imul
mov
mov
dec
jbe
ret
shrl
imul
rcrb
imul
pop
jo
lret
dec
xchg
xchg
and
movsl
sti
js
insl
or
movsl
add
fcoml
loop
in
mov
dec
or
cld
fsubr
enter
sbb
cmp
push
call
cmpsl
sub
fcompp
dec
lds
dec
pop
imul
out
call
jno
imul
imul
fisubrs
imul
notl
mov
imul
imul
jnp
adc
mov
xor
xor
imul
dec
or
js
xchg
out
cmp
push
rcll
and
sub
mov
movsl
aad
cmpsl
sub
out
gs
rol
aam
imul
icebp
cmpsl
sub
data16
and
lret
xor
sub
insl
stos
mov
push
cmpsl
sub
adc
lret
imul
je
nop
imul
aad
sbb
rol
lret
imul
cmp
imul
or
adcl
jne
cmc
lock
xor
push
sbb
lret
test
dec
popf
mov
stos
jg
loopne
sub
sbb
xor
cwtl
add
and
xor
cmpsl
sub
sbb
cmpsl
sub
push
push
imul
hlt
cmp
push
add
or
imul
pop
jns
push
xchg
out
cmp
sbb
xchg
inc
cwtl
imul
xchg
jmp
aad
xor
lret
inc
test
shrl
xchg
adc
pushf
outsb
pusha
stos
dec
imul
dec
imul
movsl
imul
sub
xor
gs
xor
mov
push
call
cmp
xchg
mov
out
mov
test
imul
mov
push
shrb
sub
je
push
loop
mov
call
mov
shrb
xchg
pop
push
jp
and
subb
xor
movsb
mov
imul
ret
dec
cmpsl
sub
xor
dec
shrl
mov
mov
repnz
or
or
adc
adc
cmp
fs
pop
jmp
imul
imul
ja
xor
lret
imul
out
mov
pop
icebp
in
cmp
dec
imul
imul
dec
pop
addr16
inc
cmpsl
sub
pop
sub
xlat
inc
adc
faddl
mov
shlb
in
int
cmpb
out
adc
dec
pop
das
orb
cltd
cli
lods
mov
jmp
push
das
nop
mov
pop
das
test
or
mov
mov
ds
lods
in
xor
push
rclb
test
push
sbb
dec
ja
cmpsl
rcll
mov
dec
xchg
pop
push
and
pop
add
xchg
jbe
sbb
dec
push
push
pop
addr16
xchg
cmpsb
cli
sahf
arpl
fldcw
movsl
cmpsb
js
mov
in
adc
and
loopne
push
negb
cmpsl
push
sub
mov
jns
mov
faddl
repz
rcrl
ss
push
iret
repz
pop
outsb
adcb
cmp
fdiv
outsb
or
push
iret
repz
ds
pop
jb
mov
repz
mov
out
jns
cmpsl
stc
push
stos
adc
cs
jns
out
pusha
jbe
test
idivl
mov
push
sbb
jns
out
xor
dec
pop
mov
ja
insb
addb
cmpsb
add
lods
sar
push
adc
aad
pop
ret
mov
push
lea
adc
xor
and
sbb
push
repz
out
mov
repz
add
push
clc
mov
xor
xor
add
les
mov
sbb
add
clc
mov
cmp
xor
mov
sahf
sarb
adc
iret
sarl
das
xchg
sbb
sbb
xchg
js
or
xchg
out
sbb
mov
sahf
int
sub
mov
and
and
js
iret
repz
jns
jp
andl
aam
inc
mov
out
push
shlb
lcall
mov
outsl
dec
popa
inc
enter
enter
sbb
push
cmp
and
add
xchg
cmp
repz
loopne
fcom
repz
repz
enter
iret
repz
mov
pushf
cmp
repz
xchg
nop
mov
test
repz
jo
push
iret
repz
push
push
dec
dec
repz
repz
inc
cmp
xor
repz
xor
adc
add
nop
fmul
test
jl
out
push
repz
rol
movsb
jl
push
iret
repz
dec
inc
xor
or
sahf
out
lcall
cmp
out
cmp
int3
test
xchg
repz
xor
jg
push
add
fidivrs
lock
mov
sub
das
adc
push
pop
xchg
sub
and
sub
adc
fdivr
adc
push
aaa
xor
push
push
add
call
pop
xor
mov
rorb
push
test
mov
inc
enter
pop
shlb
jbe
push
add
popf
lahf
jo
fdivrs
idivb
daa
or
push
and
aas
mov
and
sahf
mov
rorb
push
mov
add
lods
inc
add
imul
test
mov
pop
jnp
push
pop
cmpb
inc
shrl
pop
shll
jbe
or
imul
push
pushf
push
aas
andb
shrl
das
fs
aaa
inc
pop
shl
es
dec
xchg
xchg
push
les
jbe
pop
scas
inc
fisttps
xchg
aas
inc
fwait
push
in
mov
dec
jle
dec
mov
or
sti
push
and
fs
int3
push
push
subb
sbb
icebp
fsubl
mov
incb
mov
stos
or
add
dec
push
insb
jbe
ret
imul
push
xor
inc
mov
xchg
mov
add
movsb
aas
pushf
rorl
add
mov
ret
insb
pop
xor
cmp
push
insb
daa
cmp
outsb
cs
outsb
lahf
pushf
sbb
ds
outsl
gs
mov
roll
push
sub
je
rcrb
roll
cmpsl
mov
mulb
mov
push
and
sub
xor
outsl
jne
cmp
imull
imul
push
outsl
and
mov
mov
jb
or
or
ljmp
lret
add
leave
or
and
and
outsl
add
mov
aas
fwait
arpl
and
mov
sub
pop
lea
push
mov
add
add
sub
sbb
dec
mov
push
pop
sub
inc
push
mov
pop
sbb
mov
sbb
push
sbbl
or
dec
sbb
xlat
daa
push
mov
lahf
xor
xchg
xor
pop
lods
add
repz
sub
bound
or
pop
daa
or
push
cmp
dec
sbb
or
and
sbb
lahf
sbb
push
sbb
add
addr16
mov
imul
imul
mov
add
pop
mov
shll
mov
xor
add
ja
add
pushf
xor
test
push
addr16
bound
cmpb
js
add
movsb
xchg
sahf
out
sahf
jle
pushf
cwtl
xchg
nop
mov
out
test
pop
iret
repz
push
pop
dec
inc
inc
cmp
cmp
repz
xor
and
cmp
repz
adc
fmulp
out
xchg
hlt
xchg
in
push
in
fmul
repz
ror
mov
into
repz
mov
ja
outsl
je
insb
push
fs
cmp
jns
push
dec
mov
push
and
iret
repz
testl
enter
iret
repz
test
cwtl
nop
out
iret
xrelease
out
in
sahf
pop
inc
cmp
push
adc
cmpsl
stc
cmp
lock
loopne
mov
mov
xchg
insb
pop
lods
mov
outsl
and
pop
pop
inc
xor
add
cs
cwtl
inc
xor
test
neg
mov
stos
push
sbb
sub
pop
jo
bnd
lret
add
sbb
push
pop
cs
clc
ss
test
add
dec
mov
cld
pop
enter
dec
jnp
cmpsl
outsb
stos
lcall
xchg
cs
push
and
dec
pop
fdivrs
fbld
lret
js
xchg
mov
mov
incl
rolb
popa
or
and
jno
sbb
xor
push
fwait
push
fidivl
fisttps
mov
cmpsb
dec
es
fistpll
fwait
xor
adc
pop
ss
nop
ss
sub
aad
dec
ss
outsl
decl
xorl
aaa
adc
sbb
add
cmp
fstpt
push
cmp
xchg
aad
stos
fwait
les
mov
cmp
cmp
mov
adc
cmp
cmp
add
adc
xor
cmp
cmp
ret
mov
mov
ds
ds
faddl
ljmp
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
into
decl
push
data16
jbe
jnp
cmpl
movsb
aas
mov
rcrl
pushf
inc
aas
div
dec
add
aas
clc
dec
xor
cmpsb
mov
xor
stos
pusha
adc
cmpsb
sub
xor
xor
sbb
xor
mov
mov
xor
xor
into
das
xor
cmp
mov
mov
jno
xor
inc
shl
cmp
inc
fmuls
xor
xor
fisttps
cmp
mov
pushf
xor
xor
xor
xor
xor
xor
xor
decl
popa
cld
xor
dec
mov
ss
mov
xorb
mov
pushl
sbb
xchg
mov
mov
sub
das
cmp
add
pop
cmp
ljmp
xchg
sub
xor
xor
cmp
clc
sbb
cmp
cmp
and
pop
push
pop
cmp
outsl
cmp
je
shlb
pop
xor
out
pop
mov
cli
outsb
cmp
aaa
mov
cmp
cmp
cmp
adc
push
outsb
mov
cmp
cmp
cmp
cmp
iret
cmp
mov
cmp
push
ds
ds
cmp
xor
cs
cld
decl
xchg
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
aaa
leave
clc
dec
xor
xor
inc
lds
xor
xor
outsb
ud0
pushl
loopne
repnz
dec
ss
bound
xorl
ss
xor
ret
or
ss
jl
adc
ss
aaa
or
push
push
sar
push
xor
aaa
stos
mov
or
dec
adc
scas
xor
push
cmp
push
sbb
fnsave
ds
pop
cmpsb
test
mov
outsb
xchg
dec
sarl
fcoms
icebp
das
mov
repz
cmp
cmp
cmp
mov
cmp
cmp
pop
push
pusha
cld
pop
or
jno
jns
jle
xchg
mov
xchg
fmull
cmp
cmp
lcall
stos
pusha
push
add
insb
cmp
cmp
cmp
or
cmp
cmp
push
push
xor
xor
insl
adc
adc
dec
aas
outsb
inc
cmpl
aas
ret
aas
iret
js
dec
and
fdivrl
xor
mov
sbb
into
xor
jg
jp
xor
xor
xor
xor
xor
xor
jo
lcall
mov
xor
xor
pop
or
mov
xor
insb
and
xor
fcomip
xor
or
adc
push
ss
test
ss
add
ss
ss
xor
adc
jne
jle
or
pop
add
jecxz
cmp
mov
cmp
sbb
cmp
cmp
cmp
test
pushl
or
cmp
cmp
out
xchg
icebp
cmp
arpl
outsb
ret
fnstsw
adcb
fildll
sar
stos
ds
or
cmp
aas
fcmovnb
sub
add
push
cmpsl
cs
fbstp
divb
data16
mov
call
xor
xor
xor
xor
xor
movsb
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
ljmp
xlat
xor
ja
mov
pushf
ss
mov
sub
adc
and
push
xor
aaa
jb
jmp
sbb
int
inc
cmp
push
cmp
cli
push
divb
cmp
inc
ds
ds
ja
clc
imul
mov
lret
aas
lods
aas
push
jl
sbb
mov
popa
jl
xorl
mov
cli
cmp
jo
cmp
dec
cmp
pop
cmp
ljmp
out
xchg
outsl
cmp
xor
xor
xor
xor
or
push
imulb
or
loopne
aaa
pop
dec
es
xor
das
test
jp
add
arpl
fldcw
sub
pop
pusha
out
xor
xor
or
aaa
jge
push
je
js
mov
mov
daa
mov
popa
jle
xor
mov
jl
call
bound
lods
push
mov
dec
int3
inc
fdivrl
xor
cmp
xor
xchg
pop
ret
sub
xor
sbb
jb
out
bound
inc
mov
inc
xor
add
mov
xchg
xor
jecxz
pop
jo
or
or
adc
adc
sbb
sbb
cmp
pop
jbe
xor
mov
push
xchg
inc
xor
push
xchg
pop
xor
xor
xor
ret
je
jl
test
mov
mov
xor
sbb
sbb
sbb
fwait
ror
xor
dec
cmp
xor
xchg
je
ret
xor
nop
xlat
push
or
xor
jp
jmp
push
xor
outsb
jo
mov
loope
bound
sarb
cmp
pop
pop
lar
mov
push
or
pop
pop
daa
cwtl
out
rolb
decl
adc
sbb
sub
push
push
xor
xor
xor
xor
xor
ss
cmpsl
outsl
stos
mov
shlb
push
xor
or
xor
les
xchg
sbb
push
mov
push
jb
xor
incl
lcall
pop
fsubrl
in
call
xor
xor
inc
add
inc
xor
loop
adc
add
iret
sbb
xor
aam
xor
xor
xor
jo
shll
jp
xor
mov
clc
jg
jo
je
js
jl
andb
clc
decl
scas
pushf
xor
xor
xor
xor
xor
xor
xor
into
shlb
add
int3
fimull
movb
add
mov
cs
jp
sub
jecxz
je
pop
clc
or
cmp
mov
adc
inc
add
aaa
rcr
sub
add
decl
sbb
sarl
dec
cld
fcompl
xor
add
mov
call
push
or
shll
jnp
sub
cmp
outsb
insb
jp
push
lcall
and
dec
sbb
mov
bound
aam
incl
or
bound
jo
adc
add
xlat
jae
lds
inc
add
xor
cmp
xchg
cmp
add
cmp
mov
adc
push
pop
decl
popl
int
ss
cwtl
push
mov
add
pop
and
incl
xor
mov
fimull
sbb
mov
bound
sbb
and
mov
mov
rorb
jnp
cmp
mov
cli
inc
jecxz
repnz
icebp
in
loope
xor
jns
cmp
mov
stos
dec
jle
loopne
pop
lea
gs
int3
and
fmul
cmp
hlt
and
incl
jp
dec
lods
xor
fisubrs
and
cmc
xor
xor
push
xor
mov
jmp
outsl
je
mov
faddl
mov
lret
mov
jno
pusha
pop
fcompl
out
mov
ljmp
push
dec
mov
sub
jo
push
or
popa
jge,pn
aad
movsb
xchg
ljmp
clc
jmp
out
in
cmp
add
pop
add
sub
add
jo
incl
adcl
movd
mov
sub
cmp
push
adc
jmp
inc
lret
xor
dec
jecxz
loop
ret
cli
xor
add
adc
es
pop
jmp
pop
xchg
add
mov
and
add
leave
test
fs
inc
cmc
je
push
xchg
pop
or
mov
jle
add
clc
jmp
je
pushf
mov
mov
idiv
decl
mov
imul
sub
pop
mov
xlat
lea
pop
push
push
test
add
mov
inc
imul
ficompl
jno
dec
icebp
lahf
and
dec
inc
daa
xor
push
addr16
ss
icebp
inc
cmc
stos
jno
ja
mov
dec
clc
sub
push
lods
inc
decl
aam
out
stos
ret
lahf
pop
and
aad
sbb
test
push
adcl
push
cmp
add
xorb
out
inc
lea
pop
stos
inc
add
addr16
sbb
addr16
and
aad
out
cmp
jbe
int
fwait
cmp
adc
outsb
or
jg
js
pop
inc
dec
lcall
es
mov
xchg
push
pushf
sub
stos
ljmp
add
add
inc
xchg
cltd
push
dec
dec
cmpsb
cmpsl
call
lods
push
xchg
mov
mov
roll
mov
xchg
mov
ss
lea
lcall
jmp
mov
loope
lahf
xor
cmp
decl
rorl
into
shlb
mov
idivb
push
lret
out
int
push
xor
mov
in
inc
lret
notl
imul
inc
stc
cmpsb
int3
dec
mov
lahf
xchg
fs
fldenv
lcall
repnz
inc
xor
xchg
mov
fs
push
enter
outsl
call
xorl
xor
cwtl
stos
movsl
sub
pop
pop
add
or
decl
or
cmp
xchg
mov
sub
mov
lds
incl
add
repz
jmp
aaa
lahf
push
icebp
movsb
movsl
mov
inc
das
fcmovu
dec
cmp
and
incl
sub
scas
dec
adc
fisubrl
mov
add
loope
pop
call
mov
lret
jmp
inc
jl
adc
rorb
mov
outsl
std
inc
mov
mov
cmp
jo
pop
lds
sbb
mov
add
mov
scas
fnstenv
fstl
xchg
or
add
sub
mov
in
call
add
xlat
xor
out
push
or
push
add
inc
stc
jle
jbe
push
jne
call
fdivl
mov
sub
fcoms
lea
and
lods
pop
or
jg
call
add
rcl
adc
hlt
ds
mov
int
adc
push
call
lret
pop
mov
mov
por
mov
fs
add
add
outsl
clc
push
rcr
daa
mov
in
pop
das
cmpsl
fs
mov
mov
pop
cmp
outsl
clc
and
jns
mov
xchg
jns
fmuls
pop
mov
mov
test
jmp
pusha
mov
jno
daa
jmp
dec
insb
fdiv
ljmp
in
notl
mov
mov
ljmp
cs
rclb
imul
lock
cmp
dec
jmp
dec
adc
mov
pushl
push
loopne
adc
leave
push
or
pop
add
aad
call
inc
aad
in
test
xchg
or
rclb
push
and
outsl
dec
jg
pop
sahf
lds
call
pop
ljmp
inc
incl
divl
sbb
xchg
mov
je
fnstsw
mov
adc
ljmp
sahf
jmp
pop
dec
inc
cltd
test
stos
sbb
jne
pusha
aam
pop
stos
push
and
call
test
loopne
rcrb
xor
jnp
ret
cld
xchg
adc
jbe
loop
test
cmc
addr16
js
ficoms
test
cmpsl
pusha
pop
cmp
jmp
lock
movsl
out
data16
cvtps2pd
test
inc
or
arpl
int3
adc
jo
out
push
aas
xlat
std
scas
stos
sub
das
jp
repnz
shlb
lcall
mov
iret
xor
pop
cmp
mov
movups
je
jp
rorl
sarb
jbe
adc
inc
ja
pop
sub
ljmp
inc
ljmp
dec
iret
mov
cmp
insl
sub
mov
mov
pop
in
daa
sbb
inc
add
jns
je
shll
sahf
cmp
fstpl
call
and
popa
sbb
cli
push
and
and
push
rorb
push
movsl
cli
fsubr
cmovp
lcall
fmuls
mov
loopne
inc
scas
lods
cmp
mov
wbinvd
jbe
sti
ret
rorl
jge
inc
mov
and
mov
jns
in
inc
int3
pushl
jge
jecxz
mov
jne,pn
call
in
lret
out
xor
out
mov
inc
or
inc
jns
adcb
or
cmpsb
push
sub
mov
loope
leave
aaa
push
cld
jmp
stos
aad
imul
enter
test
pusha
sub
sub
pop
or
insl
mov
in
adc
mov
imul
insb
mov
pushf
push
inc
add
and
pop
mov
ljmp
aas
repz
or
lret
repnz
jae
jle
pop
mov
mov
stc
jl
mov
outsb
inc
clc
ror
mov
xor
pushf
sbb
pusha
les
sbb
clc
sbb
and
cltd
rorb
cltd
xor
ja
lock
out
clc
decl
out
ja
xor
int3
push
sbb
push
jno
push
cmp
mov
call
cs
aam
pop
mov
pop
inc
daa
xchg
ljmp
pushl
test
fdivp
adc
cmc
aas
popf
inc
pop
ss
dec
ljmp
incl
cmp
aaa
xlat
rorb
ja
push
in
lret
je
push
jg
inc
adc
lcall
scas
add
add
fs
out
adc
lods
scas
ficomps
pop
enter
xchg
xor
push
dec
mov
insb
pushl
add
das
xor
cltd
clc
adc
mov
pop
push
sbb
and
jle
or
inc
filds
cld
push
lcall
loop
mov
pop
push
movsb
pop
sbb
pushl
jbe
push
sub
fwait
movsb
gs
cltd
xchg
or
push
out
or
incl
arpl
int3
fsubrp
ret
and
and
jne
inc
idiv
mov
in
sbb
fsts
aas
pop
jbe
ret
jb
mov
mov
incl
mov
fiaddl
mov
pop
pop
in
add
xchg
into
xor
out
fcomip
mov
ja
lahf
add
and
xor
cmp
cmpsl
repz
mov
sub
inc
cs
lods
js
inc
ja
arpl
jle
or
pop
jle
jo
addr16
inc
mov
out
cmc
sbb
ret
push
das
sub
jmp
cmpsl
loope
in
ss
movsb
add
outsl
stc
pop
dec
fldl
scas
mov
in
cli
pop
lcall
arpl
add
inc
aas
arpl
sbb
test
mov
call
mov
mov
pop
push
sbb
push
leave
movsb
pop
scas
aad
outsl
das
data16
pop
mov
notb
js
call
dec
enter
add
cmp
cmpsb
jle
jbe
jg
pop
sbb
xor
call
jne
push
inc
cmp
mov
fs
hlt
and
dec
push
push
orl
incl
pop
nop
or
jbe
adc
cmp
jge
adc
lcall
sub
add
imul
xor
jns
jne
movsb
addr16
in
decl
lcall
fistpl
fwait
add
fstp
in
dec
cmp
mov
jbe
mov
movsb
decl
xor
ret
pop
aas
lahf
negb
loope
or
in
or
mov
stc
fs
jbe
cmc
decl
or
out
and
sub
movsl
out
and
stos
cmp
pushf
pushf
adc
cmpxchg
imul
cltd
xchg
push
cmp
lcall
or
mov
repz
or
pop
jle
mov
dec
test
lcall
sub
fstps
aad
xchg
push
sub
sbbb
xchg
cmc
sbb
mov
mov
jp
jns
cmp
pushl
ret
ja
xchg
xchg
push
inc
shr
mov
add
jg
rolb
pushf
sub
imul
insl
pusha
sub
cmp
xchg
and
dec
aam
pop
shrl
mov
pusha
mov
cs
bound
dec
test
push
add
loop
xchg
ljmp
dec
scas
fbstp
jge
dec
push
pop
hlt
xchg
out
cltd
cmp
pop
and
dec
in
cltd
jne
popf
sbb
ret
test
jmp
push
jmp
scas
movsl
mov
mov
jne
and
fsincos
sbb
fistpll
push
or
pop
ficoml
call
scas
jecxz
pop
jbe
sub
pushl
fcoms
ret
leave
or
int
mov
xor
mov
les
adc
mov
fsub
cmp
xor
imul
push
mov
shll
lock
ljmp
inc
add
jbe
xchg
sbb
imul
and
jmp
xchg
ljmp
adc
addl
dec
xchg
add
xor
outsl
cli
lcall
cltd
mov
pop
adc
scas
mov
gs
mov
adc
sub
jae
jno
push
ljmp
jg
add
xchg
jg
xor
sub
test
inc
popa
iret
into
mov
lea
mov
decl
cmc
cmpsb
es
jge
cmp
outsb
dec
inc
ja
mov
add
call
sbb
stos
dec
xchg
imul
sbb
decl
shl
scas
loopne
imul
sub
dec
mov
jecxz
mov
rorb
insl
inc
fdiv
sub
je
aad
lcall
inc
les
inc
idivl
ja
sbb
add
add
sti
fcoml
push
jmp
jecxz
mov
lcall
adc
sti
sti
xchg
aaa
popl
stos
pop
mov
cmp
roll
pop
jns
cmpsl
pusha
lret
mov
pushf
in
pop
int3
push
and
mov
mov
cmpsb
hlt
sbb
mov
movsl
dec
les
in
inc
cmp
imul
loopne
add
int3
pop
jecxz
test
mulb
arpl
xchg
sahf
iret
cmpsl
in
inc
pushl
jmp
les
jmp
push
mov
dec
rol
nop
test
decl
in
outsl
sub
inc
xlat
cmp
sbbl
jle
arpl
mov
mov
repnz
outsb
ds
lcall
fnstcw
mov
fdivrl
daa
push
jnp
push
inc
icebp
mov
mov
jno
add
mov
lret
rcll
fst
ret
jb
jge
mov
jp
bound
popa
leave
incb
lcall
and
and
repnz
rolb
gs
and
call
inc
pop
ret
ds
and
sub
jl
or
fisubl
cs
adc
cmp
jmp
fs
imul
or
sbb
loopne
sbb
mov
mov
rcll
jne
inc
jmp
inc
divb
push
mov
rcrb
mov
mov
mov
in
data16
data16
sbb
sbb
inc
mov
add
test
add
std
ja
and
idiv
daa
arpl
adc
pop
pop
dec
sbb
xchg
mov
and
sbb
adc
and
lret
fiaddl
popf
cltd
icebp
decl
and
xchg
jnp
and
cmp
jne
sub
jo
out
dec
xchg
cmp
jecxz
cmp
mov
notl
je
insb
mov
push
decl
ljmp
gs
arpl
mov
cmp
push
jg
sbb
push
pop
xchg
push
fwait
in
jge
xlat
repz
mov
pushl
ja
popa
or
movsl
cmp
popa
pop
stc
dec
push
cmpsl
insl
sbb
sub
lcall
call
incl
std
pop
fsubr
mov
in
popf
sbb
mov
mov
negl
call
xorl
and
aad
outsb
test
push
cltd
std
add
outsl
sub
jb
jne
mov
nop
xor
cmp
mov
xchg
hlt
loop
or
sar
pop
out
push
mov
negb
xchg
cmp
adc
neg
jno
in
jb
xlat
aaa
cld
ljmp
add
aas
xchg
out
inc
push
and
popf
dec
scas
adc
adc
pushl
mov
mov
out
mull
mov
sbb
scas
out
mov
lcall
decl
jne
sbb
push
cs
lods
xchg
adc
xor
pop
mov
decl
call
popa
ret
cld
in
push
iret
lret
hlt
inc
mov
leave
popf
xchg
loop
fdivs
lods
stos
pushl
std
jmp
fwait
mov
sahf
pop
mov
and
inc
and
ljmp
add
insl
adc
das
mov
ret
and
insl
inc
cltd
icebp
loop
decl
nop
leave
clc
or
dec
push
in
xor
xorb
fbld
push
and
ljmp
mov
stos
fsubrl
shl
jecxz
movl
adc
mov
jmp
aaa
stc
jno
insl
pusha
adc
lea
pop
movsb
xchg
mov
and
cmp
or
mov
push
adc
hlt
aad
bound
mov
cmpsb
jmp
call
mov
sub
sub
fmul
push
dec
mov
pusha
ljmp
sub
and
xor
fdivp
push
inc
xor
call
cmpsb
and
dec
jg
sub
add
stc
dec
fwait
push
push
test
ljmp
add
cmp
sbb
call
dec
sub
sub
sbbl
std
mov
jae
mov
cli
faddl
in
test
pop
ret
mov
int3
out
nop
loopne
sub
push
shrb
imul
cld
push
pop
push
outsl
adc
push
xchg
into
fcompl
or
cmp
jb
mov
dec
xor
mov
dec
in
adc
in
call
sarb
sti
popa
mov
add
dec
stos
add
mov
push
jmp
jns
fwait
cmp
cmp
fldcw
mov
or
jmp
adc
jecxz
arpl
push
ljmp
clc
jne
cld
and
insb
sub
aad
stos
mov
mov
jno
sub
loope
adc
mov
jl
push
mov
incl
push
push
adcl
pusha
and
add
or
inc
repz
xchg
aaa
das
jo
frstor
push
or
aas
jle
pop
mov
adc
push
push
fucomp
jnp
ljmp
fcompl
out
mov
jp
mov
decb
adc
mov
xor
xchg
sbb
mov
bound
pop
xorb
mov
xchg
jmp
jbe
xor
mov
aaa
clc
pop
outsl
fcmovne
add
in
cltd
sub
xchg
xchg
push
std
clc
xchg
inc
mov
xchg
cli
xor
add
add
sub
sbb
incl
adc
mov
dec
mov
outsb
in
psrlw
hlt
lds
sar
call
in
in
outsl
cmpl
shll
faddp
cwtl
cli
fidivl
dec
jecxz
incl
mov
xor
imul
ja
lcall
jge
inc
mov
rolb
xchg
xchg
in
icebp
movsl
mov
cld
jns
cmpsl
out
rol
inc
adc
xchg
mov
or
cmpsb
in
adc
cmp
mov
cmp
sbb
mov
dec
in
sub
or
int3
decl
mov
jl
or
and
xor
leave
push
cmp
aaa
mov
shr
rolb
repz
jb
lods
push
add
aas
dec
xor
dec
andb
sbb
into
mov
add
das
xor
xor
sub
outsl
mov
adcb
jl
sub
fistl
stos
jge
frstor
cmp
adc
push
aas
xorl
mov
and
imul
mov
push
stos
clc
push
es
or
out
inc
xorb
add
or
ljmp
les
jp
mov
ja
or
and
xor
mov
mov
fcomip
jg
scas
aas
dec
pop
mov
adc
add
sub
fcomip
mov
mulb
xchg
cmp
movsl
imul
paddsb
push
cld
mov
pop
sbb
xlat
sbbb
xor
lea
test
mov
incl
jmp
clc
bound
ret
notb
dec
mov
add
mov
or
inc
out
xchg
in
mov
cmpsb
sub
xchg
stc
jb
in
adc
lods
jmp
mov
shlb
jnp
push
jmp
push
scas
sub
lcall
mov
mov
inc
push
roll
xchg
lret
fwait
dec
mov
pop
std
incl
das
cld
js
imul
lods
push
push
enter
ljmp
outsb
add
mov
arpl
mov
dec
xchg
and
xor
icebp
push
dec
xchg
hlt
push
jb
mov
xchg
sub
cmpsb
or
jp
leave
mov
and
sbb
sbbl
test
and
xor
push
ljmp
jae
in
xor
lock
mov
xchg
add
loope
mov
mov
lea
or
call
and
lahf
inc
ja
ret
mov
mov
and
cmp
imul
rcll
fs
mov
jle
and
lret
hlt
cmp
jmp
pop
lods
ror
mov
mov
leave
dec
jg
add
inc
fldl
call
lcall
jge
sub
xchg
je
movb
popa
push
xchg
jg
mov
mov
loope
fs
xor
imul
popa
mov
jmp
call
inc
rclb
out
pop
dec
push
dec
adc
pop
shrb
jno
jmp
mov
das
or
push
adc
int
and
push
xor
xor
mov
sub
nop
xorl
jbe
icebp
cld
pop
arpl
or
mov
sbbl
inc
out
pop
hlt
push
paddw
jg
pushl
cmp
cld
sbb
pop
mov
lahf
ret
ror
mull
mov
adc
or
ljmp
lret
aam
insl
icebp
xor
push
std
rorl
jo
xor
add
lcall
push
mov
xor
fs
repz
and
gs
inc
pop
in
loopne
jmp
jg
sbb
add
inc
and
jmp
adc
push
xlat
ljmp
mov
out
js
out
ds
dec
adc
shlb
mov
ljmp
insb
fdivrl
adc
sbb
or
loope
testb
rcrb
hlt
xchg
in
push
int3
mov
or
decl
xchg
mov
xor
jge
add
lock
gs
and
sub
mov
xchg
lods
test
dec
fldenv
mov
insl
push
clc
int
push
sar
popf
fistpll
dec
adc
mov
nop
mov
outsl
cmp
enter
fadds
mov
je
mov
mov
xchg
mov
inc
test
mov
fnsave
bound
mov
stos
mov
mov
or
xchg
xlat
adc
inc
inc
lcall
cmp
adc
ljmp
iret
je
test
inc
pop
dec
les
lds
addr16
decl
mov
in
pusha
cs
jno
sub
cs
es
sub
sbb
decl
fdivs
add
mov
add
sub
cmpsb
mov
fdiv
jne
xchg
fidivrs
pop
ljmp
xchg
push
jns
push
jnp
aaa
arpl
insb
add
stc
iret
out
hlt
jg
jmp
or
sarl
xor
add
stos
xor
popa
cmp
sar
std
decl
into
arpl
mov
cmc
lods
out
insl
in
jno
cmp
sbb
or
or
xor
lret
in
or
dec
push
mov
test
cltd
test
shrl
cmp
cmpsb
ja
sti
icebp
test
mulb
cmp
fwait
pop
adc
pop
jle
xor
and
ret
aas
addr16
addl
pushl
mov
ja
scas
cmp
cmp
dec
pop
rcll
lahf
inc
fs
mov
xchg
loop
decl
mov
push
sbb
jge
aam
es
adc
mov
push
dec
cmp
decl
sub
and
cmp
insl
push
pop
jecxz
in
nop
aad
adc
sbbb
sbb
shr
rclb
in
mov
outsb
shrb
loopne
decl
inc
cs
cwtl
pop
push
in
xchg
aas
mov
js
stos
bswap
nop
in
jne
inc
xor
ljmp
lock
adc
popf
loope
xchg
pop
jmp
and
lods
mov
lret
dec
sar
lcall
test
pop
cld
fcomip
or
out
sbb
test
cltd
xchg
sbb
jnp
aam
mov
push
rorl
stos
cmp
jb
xchg
jg
xchg
jno
jnp
xorl
cmp
inc
icebp
popf
daa
lcall
jg
xor
arpl
cmc
ljmp
push
sbb
sbb
push
mov
mov
push
hlt
jmp
and
xchg
out
roll
cmpsb
lcall
flds
test
jp
pushf
hlt
lcall
subb
pushl
test
lods
jp
xchg
add
ljmp
aam
incl
mov
push
lods
mov
scas
adc
jle
je
ljmp
mov
call
js
iret
mov
test
imul
lahf
lods
mulb
stos
jg
aad
int
jecxz
call
adc
lods
cs
mov
or
rcr
push
addr16
inc
inc
mov
mov
out
dec
inc
ret
loope
mov
mov
push
xor
lret
or
pusha
and
sbb
or
lret
cmp
lcall
and
xor
mov
mov
out
add
push
ret
lock
decl
inc
repz
popa
mov
mov
mov
xor
int3
insb
push
dec
mov
jmp
pop
add
test
pop
cld
fs
sbb
inc
enter
mov
mov
fld
stos
and
cmp
pop
pop
xor
out
lret
fstl
xor
xchg
kmovw
popf
sbb
mov
mov
std
out
jno
stos
and
cmp
ss
mov
ror
cmpsl
lcall
mov
jmp
jne
out
fwait
jmp
push
jle
dec
inc
mov
sub
gs
out
aaa
dec
in
add
mov
mov
jp
dec
insb
jecxz
jns
add
sbb
xchg
movsb
pop
ss
fwait
mov
push
push
shl
mov
incl
sarl
je
dec
and
inc
loopne
int3
cmp
out
add
xchg
pushf
push
mov
decl
dec
mov
push
and
jp
pop
sarl
popf
imull
ficomps
aas
adc
cmc
mov
ret
imul
sub
and
add
pop
push
xor
sbb
call
xchg
lods
sbbb
mov
in
pusha
inc
pop
addr16
fidivrl
out
decl
adcl
dec
call
ja
dec
cltd
xchg
stos
lock
sti
push
cmp
daa
push
jne
lods
fimuls
aas
rclb
loop
incl
or
cs
pushf
bound
sub
lds
sub
subl
mov
xchg
sbb
outsb
inc
xchg
cmc
sub
lahf
stos
incl
outsl
xchg
lahf
ljmp
out
lods
shl
inc
sarb
pop
adc
aaa
inc
cmp
incl
xchg
sub
dec
test
jmp
sbb
scas
or
test
mov
pop
push
mov
pushl
pop
popa
cmp
cmc
dec
rorb
test
jb
mov
stc
adc
dec
xchg
popf
sub
call
xorl
jl
imul
ljmp
rclb
sub
sub
jnp
les
add
decb
addr16
outsl
fnstsw
call
repnz
dec
aam
mov
xor
push
adc
stos
sti
stos
and
cmp
mov
mov
shrb
movsl
mov
or
jmp
mov
fdivrs
jg
pop
repz
mov
mov
fdivs
out
ljmp
ficompl
jge
and
inc
in
cwtl
push
into
lret
dec
push
rcr
in
jle
xor
mov
mov
cld
jmp
std
push
cmp
in
in
sub
push
jmp
nop
ljmp
lret
mov
cmp
icebp
dec
jmp
sbb
or
movsb
adc
pusha
push
stc
mov
adc
adc
dec
jp
inc
test
sbb
aaa
pop
jge
pop
cmpl
mov
call
jge
add
sahf
sub
mov
adc
fisttps
push
or
imul
mov
inc
sbb
xor
sbb
enter
aaa
and
outsl
cmp
movsl
icebp
xchg
jg
ljmp
xor
incl
sub
lock
pop
push
out
ret
or
stos
mov
or
jmp
xchg
pop
rclb
xchg
xchg
cwtl
dec
xlat
mov
or
inc
jl
xchg
decl
push
or
xor
lods
xor
fnsave
mov
icebp
cli
mov
push
out
into
and
aas
aad
fcmovnbe
scas
vsqrtsd
loop
mov
push
rolb
out
fsub
popa
xlat
sub
dec
std
lcall
cmpsl
cmp
pop
cmpsb
jg
jnp
sbb
ss
xchg
das
fs
mov
push
out
push
clc
cld
jo
enter
and
sbb
jmp
adc
movsl
or
dec
ret
icebp
or
adc
cmp
imul
and
sub
nop
mov
push
test
int3
push
pop
gs
imul
movsb
popf
call
lret
pop
mov
sbb
shrb
add
mov
mov
stc
push
jge
push
inc
cmp
fimuls
pop
ljmp
push
mov
jo
fs
call
sub
jmp
test
and
inc
imul
dec
mov
das
cli
pop
adc
adcl
ljmp
fstps
dec
rcrb
data16
js
lock
jl
xchg
and
lcall
popf
cmpb
data16
pop
push
ljmp
mov
cmp
dec
imul
inc
nop
lock
xchg
bound
scas
mov
push
cmp
pusha
dec
les
cmp
sbb
std
xor
mov
lds
push
sub
mov
mov
pop
pop
xor
ljmp
jmp
jne
cmpxchg
scas
jl
pop
stc
lds
pop
sub
lret
mov
sub
pop
inc
push
xor
dec
int
int
inc
movsl
or
fsubl
hlt
jnp
mov
mov
popa
fsts
adc
mov
outsb
cmpsb
mov
data16
xchg
fcmovb
fisubs
insl
aad
pop
cmpsl
cmpsb
int3
push
jp
sbb
popa
push
test
mov
adc
in
lea
sbb
pop
imul
std
iret
cwtl
pop
jbe
out
mov
mov
mov
sub
pop
arpl
pop
inc
call
sti
fs
or
xchg
lret
mov
sti
push
lods
aaa
outsl
inc
in
mov
aam
int3
cmpsl
mov
pop
ficoms
out
fcos
lcall
mov
fdivrl
push
sub
daa
xchg
cwtl
cmp
adc
ljmp
insb
mov
xlat
push
bound
inc
or
add
mov
jns
dec
dec
outsl
cmp
xchg
ds
pop
mov
loopne
sub
imul
fmull
mov
arpl
inc
xchg
add
jne
push
ret
loope
fsub
mov
mov
cmpsb
ret
xchg
lret
decl
in
pop
xor
mov
int
pop
mov
xchg
in
pop
mov
lret
test
push
jmp
mov
sarb
je
add
rolb
int3
ret
std
mov
jno
cmpsb
dec
std
sbb
push
xor
mov
jp
addr16
mov
clc
mov
decl
lcall
andb
rclb
push
mov
lcall
lods
pop
test
incl
ljmp
push
push
int
fsubs
pushl
pop
and
loope
not
and
test
and
sub
lods
sub
and
ffreep
scas
inc
idivb
xor
or
mov
ret
jmp
fwait
add
scas
push
aas
add
inc
and
cltd
mov
jg
and
ja
testb
incl
or
xchg
rorl
jmp
cmp
or
ja
in
bound
daa
sarl
add
jmp
inc
mov
jmp
dec
dec
lods
inc
enter
pop
out
mov
push
ret
jbe
xchg
xlat
scas
ljmp
ffreep
not
cld
xchg
scas
mov
cld
dec
cmc
add
jp
outsb
rcrl
sub
or
cld
aad
ljmp
sub
jae
das
jl
mov
xchg
and
mov
stos
or
pop
lock
icebp
cld
pushf
adc
out
sarl
jo
outsb
mov
xorl
mov
ret
sub
call
out
in
mov
pop
jmp
cmp
xor
inc
add
jmp
cmpsb
xor
rcrb
into
mov
adc
test
inc
cmp
mov
stc
xor
ljmp
mov
gs
xchg
sbbb
push
jg
fsubs
jo
jge
in
mov
mov
push
push
mov
ret
shrb
loop
imul
mov
insl
pop
mov
incl
imulb
and
pop
sub
pop
rep
inc
aaa
jb
mov
mov
shrb
pushf
or
js
mov
ds
xchg
dec
mov
fucom
int
push
mov
jne
lahf
test
or
mov
sti
xlat
filds
lahf
testb
bound
les
cmc
stos
rolb
mov
push
and
jg
sbb
adc
lea
adc
fbld
leave
mov
fdivr
cmp
movsb
shr
push
adc
addr16
ja
add
mov
stos
cmpsl
mov
push
push
mov
hlt
insb
call
fnstenv
lcall
sar
loope
flds
repz
sbb
pop
pop
or
decb
sar
decl
subl
ljmp
dec
rol
or
mov
cli
sub
insb
sbb
decl
aam
dec
cmp
fdivrs
into
mov
push
scas
pushf
push
jp
add
xor
cmp
in
call
cld
or
jns
sti
jl
je
jbe
int
mov
shr
mov
sub
call
or
fwait
lret
pop
inc
ret
add
sqrtps
sahf
pop
xchg
out
incl
shll
nop
xchg
cmp
mov
and
mov
cmc
and
ret
subb
mov
arpl
scas
ljmp
cli
jmp
mov
cld
mov
cmc
fidivrs
cli
sahf
xchg
mov
xchg
adc
fiadds
mov
scas
imul
push
sub
outsl
lcall
insl
icebp
pushf
cmp
sub
mov
stos
inc
mov
and
loopne
push
dec
insb
sbb
ljmp
pop
xor
jl
nop
imul
incl
imul
sti
add
and
xchg
fldl
xchg
ss
pushf
rol
xor
xor
lcall
call
fsubrs
lea
in
add
jmp
adc
repnz
cmpsb
ljmp
mov
jne
in
fdivl
jno
mov
lcall
out
adc
mov
movsl
mov
adc
add
pop
jns
sbbb
add
cli
cld
push
imul
sbb
push
xrelease
loope
cmpsb
adc
sbb
outsb
pop
and
decl
jo
push
push
and
and
stos
xor
cmp
popa
sarl
std
out
sub
cmpl
aam
leave
test
and
push
mov
xchg
add
xchg
inc
ljmp
in
xor
add
js
fisttpl
mov
push
sbb
sbb
cltd
push
pop
pop
insl
xchg
movsl
incl
decb
push
mov
aam
cmp
jo
lret
jmp
or
inc
ror
mov
push
lods
lods
mov
dec
test
mov
dec
sub
in
cmpsl
sbb
cmp
sahf
jne
adc
sti
adc
cs
or
call
test
add
dec
xchg
sub
cmp
mov
jge
mov
outsb
popf
push
call
mov
fsts
or
pop
inc
ficomps
xchg
shll
cwtl
rol
stc
mov
decl
or
sub
pusha
aas
out
sbb
mov
ret
faddl
xorl
jae
in
inc
mov
jl
xor
dec
popf
add
lcall
add
sub
and
adc
lds
xor
pop
fiadds
test
call
lds
popa
out
ja
shrb
xor
mov
pop
mov
ja
fadds
and
mov
cmp
push
int
testb
ljmp
push
cld
xor
fbld
xchg
pusha
xchg
sub
mov
decl
jle
jecxz
aam
loope
je
arpl
fstp
and
das
leave
adc
and
mov
pop
pushf
test
scas
aas
pop
je
pop
pushf
lock
jg
out
bound
push
into
sub
pop
shrb
inc
orl
jmp
cmpsl
jb
lcall
fucomp
add
les
aas
pop
aad
fildll
jg
add
adc
rclb
push
add
mov
dec
dec
sub
test
xorb
sbb
fldcw
call
decl
xor
lahf
sub
push
test
leave
int
rorb
mov
decl
sbb
repnz
test
test
lcall
sub
movsb
out
jae
sub
mov
les
mov
jbe
mov
pushl
test
cld
aam
lods
mov
and
and
mov
sbb
in
mov
incl
adc
jg
fwait
clc
sbb
push
pushf
xor
jp
cwtl
outsl
nop
icebp
mov
prefetchw
or
mov
les
sub
push
test
add
lock
jmp
fidivrl
xor
iret
mov
in
cmpsl
push
mov
addl
test
call
faddl
ret
dec
sbb
aas
mov
in
and
ljmp
decl
jg
dec
or
popf
sub
inc
arpl
sub
sub
xor
jmp
mov
mov
bound
push
aas
clc
fcoml
inc
xor
mov
xor
decl
dec
mov
pop
xchg
and
out
mov
imul
addr16
jns
jbe
sbb
stos
shr
dec
lods
jmp
dec
adc
jg
xor
xor
call
std
out
mov
divb
cmp
cmp
mov
lret
insl
out
jmp
pop
repnz
cmpsb
pop
mov
frstpm(287
outsl
xor
ja
mov
sbb
in
ljmp
adc
mov
dec
es
dec
jp
rolb
mov
jbe
ret
inc
pusha
shl
sbb
decl
imul
rorl
inc
xchg
fcmovnb
mov
add
add
add
jmp
insb
inc
pop
inc
stc
pop
outsl
lods
shl
mov
dec
jle
shlb
mov
dec
repz
int3
pop
mov
push
int
test
jg
les
jne
mov
test
adc
and
icebp
js
repnz
ljmp
fisubrs
add
arpl
mov
lret
sbbb
push
inc
adc
cltd
inc
ja
add
jno
cmp
sub
mov
iret
add
ljmp
dec
pop
mov
dec
mov
adc
out
mov
push
pusha
out
jg
call
mov
stc
je
sar
cli
ret
xchg
insl
cs
ljmp
push
mov
pop
jle
push
jge
les
arpl
stc
pop
idiv
decl
pushf
adc
mov
adcb
jbe
or
push
in
test
data16
leave
jbe
fldenv
lock
pushf
mov
mov
icebp
add
mov
out
sbb
push
icebp
mov
loope
dec
pop
inc
data16
lcall
call
int
enter
xlat
shl
ja
repz
clc
fisubs
rcll
push
add
dec
jns
or
ljmp
mov
icebp
xor
out
sbb
lahf
xlat
test
push
lcall
pop
lret
cmp
jbe
mov
add
pop
sbb
cmp
int
or
leave
jg
cld
rorb
insb
push
jp
push
sub
mov
push
inc
and
mov
inc
cmpsb
and
pop
in
inc
shl
fs
push
cld
pushl
ret
cld
inc
nop
and
mov
sub
mull
mov
jg
mov
cmc
rcll
fwait
xchg
sahf
add
mov
shll
out
pop
pop
loopne
das
shlb
sub
int
pop
insb
pop
aaa
mov
jmp
adc
aam
push
pop
cli
push
push
dec
pop
in
ret
adc
loop
xor
incl
lret
mov
data16
inc
jbe
jne
jecxz
inc
dec
xor
mov
inc
aad
decl
cmp
cmc
xchg
fsubr
cwtl
dec
mov
or
sbb
pushf
bound
adc
fidivrs
std
mov
sub
leave
stos
mov
xchg
xchg
push
pop
movups
ljmp
sbb
rorl
fwait
xchg
dec
shrb
inc
gs
stc
ljmp
fists
mov
jl
pop
je
mov
dec
in
test
loopne
in
pop
fs
dec
dec
cmpsb
add
dec
mov
adc
shl
sbb
or
dec
sub
adc
popa
fildll
into
call
mov
mov
loop
add
add
scas
sbb
xlat
lret
stos
mov
insb
mov
int3
lods
call
jge
jle
aas
sub
scas
mov
inc
icebp
in
out
xlat
cmp
sbb
pop
loopne
mov
inc
pop
in
insb
cmp
push
dec
lret
test
cmpsl
call
dec
inc
test
sahf
xor
add
enter
pop
jmp
push
push
in
jnp
daa
pop
cmp
ja
ds
add
push
xchg
lret
add
and
pushl
les
clc
adc
cmc
int
das
sub
push
or
or
sub
lcall
lret
fs
shlb
jg
mov
dec
in
ret
ficompl
into
std
pushl
xchg
sbb
jge
mov
xor
hlt
xchg
shrb
dec
pop
stos
sbb
ja
inc
imul
into
loope
jmp
std
pusha
add
xor
scas
jecxz
ljmp
adc
mov
fs
ficoms
stos
ret
in
nop
jnp
xchg
shlb
test
sbb
sbb
psubb
xor
cmpsb
inc
pushl
call
aam
jns
add
pop
push
mov
int3
mov
insb
mul
into
mov
decl
mov
or
push
popa
and
pop
hlt
pop
or
lds
popf
push
or
mov
test
inc
push
addr16
xlat
sahf
addb
scas
ja
cli
add
bnd
jno
ljmp
inc
cmp
leave
push
mov
out
mov
cmp
lcall
stos
adc
ds
inc
cmp
jmp
xchg
xchg
xchg
bound
pop
inc
dec
push
pushl
andb
push
add
js
enter
fistps
push
xorl
push
sub
add
repz
or
adc
add
or
and
clc
movsl
sub
divb
fwait
test
or
mov
fldcw
ss
jg
push
inc
aas
mov
aad
fcoml
fucomp
mov
jnp
cmpb
clc
jb
lds
sti
add
scas
add
repnz
xchg
sub
cld
lea
mov
imulb
js
push
imul
lahf
cmp
fwait
sbb
cmp
and
sub
pop
and
arpl
std
decl
xchg
sub
lahf
jmp
fmuls
mov
pop
repz
jg
or
mov
cmp
lock
sar
incl
iret
mov
dec
cld
scas
sub
sub
imul
sub
or
inc
push
fisubl
xor
lret
test
movsl
mov
and
cmp
lcall
jp
push
pushf
outsb
adc
mov
clc
enter
mov
jnp
loope
xlat
lahf
std
loop
mov
mov
aad
aad
fldenv
mov
jmp
mov
mov
rcll
and
aaa
inc
cli
jno
lods
jne
aas
adc
xlat
int3
jo
jmp
inc
in
call
jnp
lret
jl
or
adc
lea
sbbb
xchg
in
js
ljmp
lods
cmpsb
mov
add
cld
sti
daa
cmp
push
arpl
fwait
sar
lcall
pop
jbe
xchg
add
into
imul
jae
leave
arpl
das
sbb
fsubl
pop
jp
rorb
and
ds
xor
shrb
or
adc
out
out
test
stos
add
xlat
push
or
push
inc
xor
int3
add
aam
dec
incl
adc
aas
and
sub
pop
test
xchg
popa
adc
adc
add
lcall
movsl
mov
mov
inc
xchg
jge
sti
dec
xor
int
outsl
cltd
push
lahf
popf
sarl
inc
in
push
mov
into
mov
je
ss
pop
mov
add
mov
call
cmp
into
les
jmp
into
in
subl
xchg
and
call
jp
lock
test
dec
lahf
mov
xchg
out
rcrb
hlt
or
rorb
xchg
icebp
imul
push
jno
ret
outsl
and
xor
mov
inc
int
mov
dec
hlt
sub
dec
xor
leave
add
leave
fstl
int
hlt
cwtl
jb
pop
pop
jmp
lcall
sahf
inc
out
repnz
and
je
insb
mov
inc
xchg
bound
call
add
sbbl
loope
and
stc
push
dec
dec
pop
mov
imul
jecxz
pushl
stos
popa
or
lcall
jne
sub
jne
gs
cmp
into
pop
les
cld
call
push
in
or
inc
ret
push
shrl
push
icebp
cld
mov
jg
clc
push
cmp
adc
popa
iret
xor
stc
sbb
popl
ret
call
sti
dec
pop
jb
jbe
roll
loopne
dec
mov
rclb
fldenv
outsl
clc
jg
push
adc
push
loopne
xor
pop
inc
lock
fmuls
jae
cmc
inc
negb
push
and
push
imul
movhps
lock
js
jo
jb
jns
dec
movb
ror
pop
mov
adc
mov
cmpsl
xor
jg
call
cmp
mov
cmc
movsb
mov
xor
ret
add
lcall
shlb
mov
ds
dec
adc
xchg
movsb
and
cmp
add
jmp
in
or
sub
inc
test
pop
leave
dec
pop
fwait
inc
lods
mov
popa
pop
xchg
gs
stos
lock
call
or
js
add
ret
aaa
xor
mov
mov
repz
sti
cmc
scas
push
decl
call
xchg
dec
push
sub
mov
mov
mov
push
sub
xor
scas
call
dec
and
fwait
jl
dec
nop
aam
movsb
es
test
push
cmp
jne
mov
mov
mov
adc
decl
xor
inc
dec
nop
daa
mov
jne
aaa
lcall
jmp
icebp
insb
scas
jg
jno
cli
mov
es
fisubs
mov
jle
popa
jl
inc
js
mov
incl
push
jg
ffree
mov
dec
pop
xchg
out
dec
and
sub
push
in
xchg
jl
pushl
dec
inc
jp
repz
jg
je
mov
xor
out
sub
mov
cld
cmp
mov
push
xor
lock
imul
fcomip
movsb
ljmp
xchg
inc
sahf
jne
dec
sbbl
lret
dec
and
cld
jmp
cmc
adc
enter
arpl
inc
mov
das
jnp
sti
adc
decl
sbb
adc
sub
jl
test
fdivl
cmp
repz
jg
pushl
or
cli
lcall
out
aam
les
push
ljmp
rcll
pushf
out
dec
ja
enter
arpl
stos
inc
aam
pop
or
negb
cmc
ja
lcall
sub
icebp
cmpsb
xchg
xor
mov
mov
and
clc
mov
hlt
ret
notl
mov
cmp
cs
sub
stc
cld
mov
push
jp
push
subl
dec
outsb
in
ja
pushl
rolb
or
ss
jecxz
jle
repz
repnz
ja
jmp
adc
xchg
fcmovne
pop
out
in
arpl
test
int
push
push
dec
cmc
pop
daa
sbb
cs
call
mov
push
mov
rorb
hlt
cli
in
dec
mov
sarb
loope
nop
or
lcall
jg
dec
in
xchg
mov
lahf
data16
mov
jle
add
mov
sbb
adc
leave
gs
and
repz
dec
jmp
pop
push
mov
outsl
mov
aam
sub
adcb
sub
lods
mov
lods
arpl
int3
dec
pop
or
js
std
sarl
mov
data16
xor
addr16
fcmovnb
mov
lcall
cmc
popa
cmpsl
sarb
mov
sti
loopne
fbld
cli
cmc
into
jne
mul
jbe
fsubl
fsincos
xchg
sub
ljmp
ss
mov
out
nop
movsl
xchg
sub
or
push
sbb
cmp
pop
mov
xor
mov
cmp
sti
pop
aas
mov
cmpb
aaa
pop
dec
sti
mov
sub
push
int3
jecxz
jmp
lcall
jbe
pushf
test
mov
ret
xchg
incl
stos
out
xchg
mov
in
pop
aas
push
push
iret
jno
dec
in
or
push
and
jg
incl
sti
subb
lock
or
lret
mov
mov
jmp
or
lcallw
push
enter
jne
cmpsb
arpl
jae
mov
ja
outsl
call
arpl
cwtl
cltd
sub
aas
xor
sbbb
xchg
fld
pop
xorb
xchg
out
mov
xlat
idiv
in
jne,pt
ds
sbb
dec
lea
and
dec
lock
dec
mov
mov
aad
lcall
mov
jns
ds
or
cmp
push
popl
test
xor
mov
fucom
insl
and
ret
mov
das
xchg
leave
inc
insl
pop
add
sbb
and
xchg
aam
mov
xor
sbbb
fcomip
clc
negl
jge
enter
dec
add
add
xor
test
ljmp
adc
jle
dec
push
sub
sbb
jns
push
int
cmpsl
push
sub
mov
in
add
dec
jg
pop
dec
sbb
hlt
pop
add
icebp
ret
or
jmp
lret
insb
ret
mov
addr16
or
cltd
fnstenv
incl
jbe
inc
cmp
scas
cmp
pop
das
inc
add
mull
test
and
clc
xor
cld
ss
xor
insl
and
jg
pop
or
loop
jp
push
fnstenv
loopne
aaa
fcomp
scas
add
jbe
fcomip
jno
pop
test
dec
push
cmp
jbe
inc
lret
insb
add
inc
lahf
jp
std
in
push
pop
or
mov
sbb
es
call
call
and
cwtl
pushf
addr16
in
push
shlb
pop
addl
adc
pop
cld
xchg
jg
icebp
xor
jmp
and
gs
cmp
xor
dec
stos
add
in
popf
add
sub
in
xor
mov
lods
cs
or
xchg
outsb
outsl
insl
fdivrs
aaa
divb
fxch
lret
push
sahf
cmc
inc
jecxz
cmp
call
mov
jmp
sahf
cmp
sub
pop
mov
test
daa
pop
cmp
add
fwait
push
std
repnz
mov
cmp
and
push
out
fnsave
jg
add
std
jg
jns
pop
test
pop
cs
ss
out
clc
pushl
rcr
les
sbb
jecxz
std
sub
pop
popf
cwtl
je
jecxz
jmp
dec
jecxz
mov
rorb
pushf
in
repz
les
mov
cmp
cmp
aad
lods
inc
jg
aaa
sub
jb
jge
jg
popf
rolb
mov
xor
out
shll
int3
repz
jg
in
mov
test
and
sbb
icebp
les
add
in
sbb
xor
lcall
sbb
mov
jbe
dec
rcl
jge
andb
pushf
sub
call
pop
mov
xchg
and
and
shlb
repnz
in
xlat
sbb
rorl
jb
negl
sbb
and
shrb
ljmp
xor
repz
and
adc
jge
inc
add
add
xchg
lods
pop
cmc
push
roll
stos
push
lahf
incl
pusha
movd
and
xor
adc
cmp
xor
fdivrl
stc
xchg
pusha
leave
mov
sar
jmp
and
adc
cld
ja
outsl
or
cmp
xchg
fwait
mov
das
shlb
jo
or
mov
jl
pmuludq
scas
out
aaa
jmp
xor
fdivrl
mov
std
jne
sahf
cli
sub
pop
adc
movb
lods
cmpsb
mov
jmp
jge
neg
je
lret
mov
cli
andl
pop
dec
mov
scas
in
nop
add
jmp
cmp
xchg
add
dec
orl
jl
ljmp
mov
fisttpl
mov
push
hlt
sub
adc
in
xor
mov
lret
fs
xchg
mov
mov
jae
lret
mov
lret
jmp
test
inc
push
aas
out
mov
xor
repnz
ret
inc
outsb
cli
jg
ret
push
push
push
ds
push
jne
xlat
aaa
pop
lds
mov
out
xchg
and
xor
inc
gs
cmp
bound
jmp
and
jle
cmp
cpuid
addb
dec
add
and
inc
sbb
js
dec
jmp
sti
mov
xchg
in
sbbl
xor
loopne
dec
add
xchg
enter
pusha
mov
aam
and
test
pop
dec
out
adc
mov
out
jnp
pop
fcmovb
push
gs
incl
xchg
xchg
mov
gs
jae
jno
roll
in
mov
mov
lock
test
cmp
mov
lds
stc
xor
out
cli
pushl
add
mov
adc
or
fs
in
adc
ret
call
ljmp
xchg
adc
mov
stc
rolb
cmc
mov
dec
cmp
ljmp
ficoml
loope
pusha
cmc
pop
filds
ret
inc
sbb
cmp
movsl
lods
push
imul
push
daa
sbb
bound
enter
gs
sbb
stc
hlt
pop
sub
push
sbb
lea
incl
adc
ret
mov
jno
popa
jno
push
hlt
lea
mov
dec
fs
call
push
in
lret
pop
subl
xchg
jnp
ljmp
inc
fwait
dec
or
pop
icebp
pushl
push
jp
mov
fiadds
add
mov
fdivrl
lcall
notl
push
or
cmp
cltd
test
push
in
jle
mov
ljmp
jo
aas
and
adc
jno
fdivr
cmp
jmp
dec
add
mov
decl
pop
xor
movsl
jmp
das
clc
jmp
mov
cmp
lret
push
les
xor
xchg
fstpl
jecxz
xchg
test
push
inc
and
aas
fwait
daa
lock
lahf
shrl
adc
les
or
sar
aaa
jmp
rolb
call
lcall
push
or
bound
in
jg
sbb
xor
sbb
dec
pusha
sbb
loop
pop
insl
push
ja
push
fisubrl
sub
out
andb
cmp
incl
jb
lahf
popa
or
cmpsb
ficoms
push
es
movsb
add
dec
rcl
adc
add
hlt
mov
push
arpl
movsl
cmpb
ret
andl
add
pop
inc
push
jns
push
sbb
lcall
es
call
std
pushl
ret
inc
lods
das
inc
icebp
mov
and
jecxz
inc
xchg
xchg
mov
call
test
out
jo
push
xchg
ljmp
inc
aam
lods
ficoml
ljmp
mov
stos
sbb
mov
leave
enter
jecxz
jmp
cmp
stc
push
std
decl
mov
push
mov
test
mov
sar
clc
mov
mov
pop
push
add
sarb
add
ljmp
mov
movsb
dec
push
mov
mov
ja
push
pop
add
out
lds
push
mov
incl
out
rorl
sbb
jbe
cmp
mov
dec
psrad
repnz
jmp
sti
jns
mov
in
mov
bound
xchg
outsb
mov
jl
pop
jnp
cld
push
aas
jmp
fimuls
sub
je
jmp
icebp
push
scas
notb
mov
pop
inc
sar
cli
add
rclb
mov
sub
add
mov
orl
stos
mov
inc
inc
ret
and
hlt
xchg
push
push
xchg
xchg
pop
ret
call
mov
sbb
test
mov
lret
push
hlt
and
or
pop
lcall
outsl
rcrb
xchg
adc
shll
adc
push
je
push
jg
mov
xchg
out
aam
jo
push
and
lret
mov
ljmp
and
loop
cmc
jnp
test
adc
cmpsl
xor
enter
and
movsl
enter
stos
jmp
mov
mov
in
mov
cld
lock
incl
xchg
adc
push
nop
fcomp
dec
mov
bound
pop
lods
cmp
popf
jns
decl
jae
mov
nop
mov
inc
mov
mov
cmp
and
push
cmp
fcmovne
inc
xlat
out
cli
andb
fs
test
mov
mov
call
cmc
or
ja
fildl
inc
dec
sbb
add
add
repnz
filds
mov
dec
sbb
test
roll
xchg
xchg
push
jb
or
mov
fadds
popa
mov
call
push
mov
fwait
jne
pusha
add
ja
mov
sbb
mov
decl
jmp
mov
lods
or
or
mov
adc
mov
push
xor
aad
sbb
xchg
mov
mov
lret
fdivrl
xor
data16
push
mov
or
push
add
inc
popf
cmp
jmp
dec
in
sub
and
or
pop
popf
daa
and
lcall
cld
fidivrs
stos
es
dec
mov
jnp
stos
ljmp
cmp
insb
loopne
sbb
mov
das
int3
jb
iret
popa
mov
xor
jg
int3
mov
fistpll
sub
cmpsb
and
xchg
xor
std
arpl
ljmp
or
cmp
mov
jle
jle
popa
lods
cmp
cmp
inc
mov
mov
mov
lahf
fdivr
scas
xchg
je
dec
lds
pop
lea
jg
mov
dec
mov
mov
xlat
inc
inc
sbbl
lods
jmp
pop
and
fcomip
pop
hlt
fidivl
gs
pop
leave
and
xchg
pop
inc
sub
sbb
lcall
cmp
lcall
inc
mov
stos
or
pop
add
add
in
mov
mov
aaa
push
in
inc
cmp
pop
sub
test
push
int
inc
fbstp
lcall
add
mov
scas
sub
imul
pushl
or
ffree
out
mov
add
icebp
int
xor
incl
loop
insb
xchg
mov
aas
xor
out
mov
cmc
sti
insb
cli
fisttps
loopne
cld
jmp
mov
int3
call
push
push
adc
and
aad
lcall
ret
mov
shll
fwait
mov
shl
or
ljmp
xor
push
jne
ja
pop
rclb
push
test
xchg
lcall
mov
xchg
data16
cmp
aas
stc
mov
xchg
pop
jp
xchg
push
dec
cmpsb
ret
cs
pushl
into
cmp
fisttps
andb
ljmp
ret
ljmp
lods
rorl
hlt
dec
in
inc
push
dec
lret
out
nop
mov
insb
push
int
lock
push
jne
and
cld
call
xor
or
mov
arpl
pop
shlb
fdivr
rcr
iret
fimull
and
incl
xchg
ds
push
xchg
imul
adc
sar
sbb
lcall
pusha
mov
loop
add
aas
lcall
stos
push
xor
pushl
es
in
sub
dec
mov
in
pop
push
loopne
push
fldcw
jb
mov
dec
add
jmp
dec
iret
aas
mov
push
mov
sub
inc
mulb
sahf
pop
into
loop
or
or
cmp
mov
xor
lcall
arpl
sbb
movsb
ljmp
js
cltd
push
xchg
call
sar
jne
rolb
inc
test
dec
push
jg
lcall
adc
rolb
inc
loop
dec
repz
jbe
cmp
mov
mov
pop
mov
ljmp
mov
cwtl
mov
jecxz
jne
mov
ljmp
push
leave
mov
sub
push
and
push
sbb
adc
aaa
sbb
mov
mov
push
fidivs
cmpsb
sub
add
jl
adc
out
popa
mov
adc
and
mov
stc
inc
sbb
pushf
pop
mov
scas
jge
mov
shll
xor
lds
jle
clc
repz
test
bound
dec
push
mov
cmp
cmp
inc
lcall
pop
push
cmp
les
adc
mov
aad
xor
mov
pop
aad
dec
lock
push
mov
mov
iret
incl
loopew
or
fs
mov
and
and
pop
xchg
cmp
add
lods
xor
addr16
mov
jns
mov
inc
or
xchg
call
std
decl
mov
ss
or
mov
push
push
sti
shrb
inc
add
mov
cs
mov
pop
bound
leave
bound
test
jns
in
shlb
fistl
jge
stc
daa
sbb
movsb
mov
scas
sbb
iret
push
loopne
in
inc
jmp
sub
cmp
imul
add
js
and
jnp
push
mov
jns
je
jle
lahf
cltd
mov
neg
cmpl
fwait
dec
sub
sbb
xchg
pop
sti
jmp
ror
aaa
adc
jo
jmp
cmpsb
push
fs
and
lcall
pushl
das
dec
in
mov
aas
xlat
pop
pushf
movb
inc
outsl
dec
dec
inc
sbb
mov
lcall
daa
push
dec
out
dec
outsl
xor
cwtl
cld
cmc
sahf
hlt
mov
cmpsl
testb
in
ds
call
jae
jp
jo
adc
fcmovnu
rclb
mov
lret
pop
lods
out
insb
cmpsb
push
pop
lcall
sbb
outsl
bound
pop
movsb
aaa
and
sbb
xchg
jle
add
in
mov
inc
push
cli
rcrl
outsb
lock
movsl
cmp
or
decl
push
jns
mov
inc
rep
sbb
sub
adc
fucom
cmp
int3
in
ja
adc
ret
mov
call
add
jmp
or
or
js
ret
arpl
fcmovb
stos
fidivrl
or
iret
repnz
inc
call
push
push
push
cmpl
mov
ljmp
add
jns
ss
inc
mov
arpl
arpl
loopne
adc
scas
or
and
fiaddl
pop
dec
test
lock
xor
push
cmc
mov
pop
mov
ljmp
pushf
js
jmp
sub
adc
pop
sti
dec
lock
fdivrs
add
lcall
decl
call
rol
ret
fistpll
jg
mov
adc
aas
dec
jge
scas
rcl
mov
in
icebp
fidivl
cmpsb
cmpsl
sub
jo
xchg
outsb
xchg
mov
jmp
or
cmp
inc
sbb
xchg
int
lods
mov
or
ljmp
popa
out
je
jbe
xchg
add
mov
xchg
mov
jno
sub
and
cs
push
std
pop
std
call
and
rolb
pop
cmp
cs
xchg
jno
daa
stos
mov
pop
jbe
dec
lea
inc
add
out
sbb
push
ficompl
push
push
fistl
dec
xlat
sbb
pop
and
mov
out
movsl
mov
ljmp
cmc
xchg
aaa
xchg
add
push
push
repnz
mov
ja
xor
mov
cmp
sub
cmp
push
add
inc
lahf
scas
testl
xor
push
jge
inc
mov
pusha
jo
pop
jae
mov
jmp
fldenv
cmp
sub
xor
mov
mov
popf
sar
mov
in
mov
jmp
lock
pop
int
xor
and
icebp
sub
push
pop
pusha
insb
cli
sub
shlb
popa
push
sti
pop
ljmp
fwait
loopne
sub
daa
jecxz
sub
das
mov
ret
lcall
push
push
daa
cli
cmp
test
dec
add
jne
repnz
lahf
repnz
mov
xchg
rcrl
imul
es
iret
mov
std
iret
aad
and
pop
dec
pop
fisttpl
xorb
and
xchg
arpl
adc
les
pop
imul
call
stc
popa
inc
adc
jb
sbbl
mov
lcall
cmc
mov
xchg
aam
es
popf
jle
arpl
jno
int3
imull
fldt
sub
subl
aad
icebp
movsb
cmpsl
aas
dec
mov
sub
and
cmp
int
xchg
jbe
dec
jns
xchg
imul
gs
scas
sub
sub
cmp
imul
je
jns
bound
popa
mov
stos
and
dec
incl
fistl
pop
and
orb
cmp
jne
pop
sbb
pop
in
or
std
out
jge
pusha
push
cmc
test
mov
outsl
sub
mov
jns
lock
pushl
jecxz
xor
cld
xor
pop
dec
stos
xchg
test
jmp
adc
addr16
lcall
out
aaa
fcos
push
popf
sahf
push
fisttpl
ficoml
pop
sbb
inc
mov
loope
nop
das
jp
in
test
mov
cmp
mov
push
pop
xchg
xor
inc
in
sub
jbe
add
test
cmp
iret
jmp
add
aas
sbb
or
add
xor
push
sahf
pop
jnp
incl
sti
cs
dec
mov
push
jmp
jns
notl
xchg
scas
jge
jmp
lcall
push
mov
loop
mov
arpl
xchg
imul
lret
in
adc
mov
std
lcall
js
lods
je
ret
inc
sub
mov
inc
dec
pushf
mov
or
jnp
xchg
ret
xchg
fisttps
xorb
call
xor
js
das
jl
sbb
inc
imul
pop
push
mulb
rol
scas
stos
icebp
incl
cld
mov
cld
mov
pop
jl
int
mov
call
pop
dec
movsl
xchg
int3
and
data16
arpl
mov
cwtl
jge
pop
je
adc
aam
mov
cld
ljmp
push
cmc
rcr
lds
pop
and
mov
incl
adc
addr16
cmp
lds
iret
arpl
bound
xor
lcall
mov
inc
loop
sarl
or
test
inc
inc
push
pop
push
pushl
mov
mov
js
add
jg
mov
int3
add
push
mov
xor
adc
insb
loopne
jmpw
inc
loope
push
loop
dec
leave
mov
cmp
mov
call
jge
mov
outsl
insl
mov
cmp
adc
push
movsb
or
pop
add
mov
sub
xchg
jmp
jp
int3
cmp
and
push
add
std
pop
push
cmp
xor
add
pop
aam
pop
jno
mov
jg
inc
fnstsw
cltd
cmp
pop
stc
or
dec
aas
stos
repz
mov
popf
std
inc
js
cmp
decl
das
aas
stos
push
xchg
lret
pop
add
or
push
in
in
lcall
js
sub
dec
mov
xor
mov
mov
push
dec
mov
jmp
mov
sub
jecxz
mov
jno
nop
shll
les
pop
lsl
stos
xor
cmp
rolb
inc
loope
adc
test
fidivs
pop
imul
call
in
pop
pcmpgtd
cwtl
inc
rcrl
scas
sub
dec
fdecstp
std
insl
popf
cmpsl
add
call
test
shlb
addr16
push
push
cli
xchg
mov
jg
jb
movsl
stos
lret
jl
cmp
mov
push
in
outsl
lret
or
mov
aad
pop
enter
adc
dec
scas
jno
cmp
sarl
shlb
shrl
and
stos
lcall
jne
in
rcll
in
jle
jecxz
mov
sarl
lcall
jb
outsl
decl
fdivs
cwtl
ffree
xchg
pop
cmp
fwait
loop
fsub
xor
lds
out
ss
ljmp
mov
or
cmp
jae
in
arpl
mov
loopne
ljmp
imul
cmc
adc
pop
jns
pushl
jb
sub
cmpsb
mov
adc
in
js
jg
inc
xchg
cmp
daa
push
roll
xorb
es
xchg
sbb
lods
iret
mov
lcall
ds
lret
dec
stc
out
leave
mov
insl
pop
std
call
idiv
fcoml
jo
cmp
scas
shll
jns
or
loopne
push
inc
pop
cmp
mov
cli
rcrb
cmp
pmulhuw
mov
sub
adc
outsb
mov
cli
or
cli
pop
shll
xor
xchg
lret
mov
addl
lcall
mov
clc
scas
xchg
or
jmp
dec
bswap
cltd
nop
or
mov
add
dec
ds
jno
jns
mov
mov
mov
adc
ljmp
addr16
out
push
xchg
push
into
aad
cmpb
jl
inc
xor
ljmp
inc
xchg
push
in
popa
push
mov
cmp
sub
dec
lret
or
adc
cmp
pop
imul
jmp
xchg
fildl
mov
enter
mov
iret
and
xchg
or
jnp
pop
inc
inc
fidivrl
ljmp
out
push
outsl
xchg
jge
xchg
mov
mov
lcall
or
leave
sub
pop
test
loopne,pn
push
xor
pop
inc
std
push
sbbl
dec
mov
mov
mov
sbb
jg
rclb
jmp
adc
cwtl
pop
jecxz
cmp
std
mov
nop
mov
push
inc
inc
mov
xchg
rcll
enter
imul
shlb
inc
and
fs
pushl
arpl
mov
xor
sub
mov
jg
call
in
jmp
scas
out
xor
adc
sub
mov
xchg
mov
es
pushl
mov
xor
test
jl
ljmp
mul
shl
xor
mov
jmp
xchg
cmpsl
ja
pop
fiaddl
hlt
sub
sbb
icebp
lock
stc
leave
sbbl
rcll
push
sahf
pop
dec
addr16
dec
pop
nop
inc
mov
adc
ljmp
mov
xchg
inc
pushf
xchg
mov
pop
imul
sti
sub
shlb
pushl
xchg
mov
mov
roll
jns
sbb
xor
push
loope
ficomps
imul
push
mov
dec
mov
mov
push
fildl
add
divl
mov
jg
inc
lret
loopne
mov
mov
icebp
cmp
fs
cs
jmp
push
lds
jge
call
cld
push
mov
pushf
sub
add
adc
loopne
int3
repnz
push
orb
stos
dec
lcall
sahf
pop
push
pop
and
cs
mov
adc
jb
add
sub
mov
cmpsb
int
mov
imul
into
jle
xchg
xlat
push
mov
shl
or
iret
push
push
mov
arpl
je
lret
fsubr
mov
out
enter
pushl
fsincos
sbb
lea
pushf
imul
lahf
push
roll
inc
pop
sbb
imul
insl
in
int3
dec
pop
shlb
jmp
lcall
int
mov
adc
test
add
pop
fsubl
mov
jge
daa
push
or
fwait
mov
test
sbb
js
in
incl
pushf
imul
adc
cmp
lock
jl
repnz
mov
popf
cs
xor
pop
xchg
jmp
in
shll
add
jns
int3
pop
dec
adc
mov
into
fs
jnp
decl
add
mov
les
lret
call
jmp
fs
in
pop
xor
jne
outsl
dec
movsb
das
orl
cmp
aam
mov
xor
in
cld
xor
pop
cmp
add
jg
sbb
pop
enter
push
ds
rol
dec
fistpll
inc
repz
negb
ljmp
mov
lret
jno
sub
xorl
mov
lcall
and
lret
push
cmp
out
lahf
sub
aad
sarb
adc
push
jb
js
call
jmp
call
jbe
xchg
and
out
sti
cmp
frstor
xor
xchg
incl
cld
test
mov
dec
push
push
outsb
add
leave
cmp
mov
add
xchg
call
pop
add
stos
stos
ja
das
nop
sarb
sbb
dec
jns
pop
cs
mov
xchg
lods
dec
add
test
mov
hlt
mov
push
out
int
cs
movsb
add
adc
bound
sbb
call
cmp
les
les
imul
jnp
dec
jmp
movsb
adc
lret
jp
sbb
popf
adc
mov
cmp
out
mov
shlb
fldenv
enter
mov
push
leave
pop
loope
and
jae
sbb
mov
and
lcall
ja
jno
add
push
jle
lret
and
stos
ret
idivl
mov
mov
jl
mov
jno
mov
lods
mov
fldt
dec
lods
das
dec
jmp
cmp
mov
xlat
jl
out
and
cld
out
loopne
shrl
pop
loop
inc
jo
lods
movsb
incl
xchg
add
mov
test
mov
sub
cvtpd2pi
incl
andb
jmp
enter
inc
push
stos
xchg
xor
call
pusha
lds
cmp
aas
mov
sbb
fcmovbe
mov
aas
decl
add
sbb
scas
out
pusha
sub
push
mov
aas
jmp
lock
inc
push
loope
jg
sbb
cmp
jbe
dec
test
lds
fbld
push
jo
cmpsb
xchg
test
xlat
pop
inc
lret
int
add
cli
push
fwait
fcomip
das
das
adc
cmp
cmp
pop
dec
push
push
adc
stos
decl
insl
outsb
pusha
aaa
add
mov
inc
mov
das
pop
into
jp
mov
aaa
mov
aaa
cs
xor
dec
sub
lcall
adc
jno
inc
push
adc
push
lahf
cmp
call
sub
popf
sub
lcall
mov
mov
rcll
add
fsubr
andb
loopne
jno
cmpsb
adcb
test
lds
jge
xchg
adc
incl
add
mov
push
mov
daa
push
jge
ss
lds
ljmp
das
mov
xchg
jmp
lds
adc
data16
enter
leave
cli
nop
loopne
xchg
xchg
idiv
sbb
push
mov
xor
imul
das
mov
adc
into
test
hlt
cmp
jne
jo
jmp
loop
adcb
dec
xchg
dec
sahf
push
mov
add
adc
push
or
jg
jle
outsb
out
sbb
push
sub
aam
and
incl
ljmp
into
imul
xchg
pop
jg
pop
ljmp
dec
aad
dec
movsl
push
fldl
test
out
pop
ja
sbb
lcall
mov
cltd
std
repz
inc
lock
incl
subb
push
das
mov
inc
addr16
cmp
jno
decl
adc
gs
ja
lahf
and
loope
into
rcrb
jg
mov
xor
pushl
arpl
gs
pop
cmp
xor
cmp
out
or
adc
dec
mov
icebp
mov
in
xchg
mov
int
xchg
daa
push
lods
inc
jnp
and
xor
mov
xchg
xchg
jno
imul
ret
nop
lcall
sbb
outsl
mov
pusha
insl
scas
or
cmpsb
aaa
push
ja
cmp
inc
fcos
lcall
adc
lea
cld
or
ret
jge
mov
pop
out
jg
mov
jmp
mov
out
mov
sbbb
adc
out
clc
shl
xchg
outsl
in
xchg
scas
clc
scas
lea
and
ljmp
jmp
mov
in
je
mov
pop
xor
adc
cld
inc
push
loope
out
hlt
loope
popf
mov
incl
leave
in
mov
out
cmpsl
push
repz
sahf
lret
lds
xchg
rolb
pushl
xor
cmp
leave
lock
mov
gs
sbb
shlb
incl
test
ljmp
outsl
mov
popa
inc
and
int3
inc
jmp
int3
dec
jmp
pusha
sbb
scas
mov
push
pcmpeqb
mov
aaa
push
jb
incl
mov
call
ljmp
shl
jo
cmc
rcll
ljmp
xchg
aas
pop
into
sub
cwtl
jnp
outsl
push
lret
enter
hlt
jno
jns
mul
setnp
xor
ljmp
jmp
pop
fnstcw
pop
add
and
clc
cmp
dec
icebp
dec
in
jmp
lret
bound
mov
es
js
mov
out
and
inc
sahf
incl
inc
ljmp
adc
adc
lcall
jmp
rcl
sbb
cmp
cwtl
and
ret
pop
int3
inc
aas
inc
lods
xor
pop
iret
sub
daa
icebp
pop
incl
addr16
adc
in
scas
adc
repz
cmpsl
ja
lock
or
pop
sahf
jge
cltd
xchg
into
movsl
mov
mov
ljmp
pop
push
in
insb
rorb
aas
pop
add
mov
arpl
dec
or
xchg
inc
filds
clc
and
jns
mov
mov
xchg
insl
sbb
cmpsb
je
pop
inc
decl
pop
sbb
sti
jp
imul
hlt
imul
jbe
and
adc
call
inc
sbb
scas
shll
dec
rcl
add
xchg
fnsave
or
sar
call
ljmp
lea
sbb
js
frstor
out
call
jbe
and
call
stc
jbe
and
jbe
decl
leave
mov
pop
inc
sti
fnstenv
push
in
jmp
in
xor
imul
sbb
aas
iret
in
sbb
js
push
jecxz
call
sub
faddl
add
add
pop
mov
push
push
sub
mov
lcall
insl
adc
xor
add
sahf
and
mov
insb
cmp
sbb
adc
cwtl
nop
fcoms
lcall
or
sub
add
aam
pop
fneni(8087
mov
jns
mov
fisubrl
fwait
daa
adc
ja
pushl
and
mov
xlat
dec
std
and
testb
pop
enter
call
lock
sub
mov
cmp
fs
mov
mov
mov
xor
pushl
leave
xchg
lcall
push
fwait
loopne
lock
mov
clc
movsb
jne
cmpsl
adc
jg
ljmp
int
adc
movsb
sub
or
inc
sbb
pop
movsb
lods
out
icebp
out
in
call
dec
hlt
lcall
add
push
pop
adc
mov
mov
in
push
movsb
push
lods
addb
jg
hlt
enter
xchg
push
rcrl
xchg
decl
push
cwtl
mov
xchg
loope
mov
es
add
movsl
jne
mov
xlat
cmp
imul
rolb
pusha
inc
mov
xlat
fsts
dec
push
stos
pop
cmp
push
pop
or
mov
imul
hlt
incl
inc
ss
and
mov
lock
and
sbb
push
out
pop
ljmp
xor
inc
gs
pusha
or
shrl
cld
push
js
push
jnp
inc
cmpsl
mov
jp
sub
xchg
dec
dec
movl
jnp
ret
lea
popa
xchg
and
rcrb
dec
push
sahf
push
inc
inc
int
and
push
add
nop
jmp
dec
lds
inc
inc
movsl
mov
lock
jecxz
fildl
pop
or
xor
aad
jmp
pop
or
cs
cli
jp
dec
out
popa
adc
mov
fimuls
ret
ja
push
movsl
call
shlb
jge
in
in
add
in
shrl
adc
fldl
adc
pop
mov
dec
mov
dec
cmp
add
dec
jg
and
fdivr
mov
test
xchg
call
fcmovnu
fldl
or
loop
and
ljmp
shlb
dec
add
adc
std
daa
xor
push
xchg
outsl
mov
dec
nop
push
ljmp
add
pop
dec
cld
js
daa
stc
in
cmp
imul
push
test
push
fdivl
sbb
xor
sbb
std
popa
into
push
dec
dec
frstor
outsb
xchg
fs
or
pop
ljmp
cs
and
sti
jbe
mov
jg
mov
decl
adc
mov
dec
inc
loope
loop
mov
push
sbb
daa
inc
int3
repz
fs
ljmp
pop
shl
idivl
adc
cwtl
shrb
mov
rcl
mov
imul
pop
jmp
lods
btr
call
hlt
nop
dec
dec
push
fcmovne
jne
test
cmp
and
push
xchg
xor
fildll
xchg
xchg
dec
scas
mov
popa
xor
xor
out
imul
jl
ret
hlt
sub
sub
sarl
add
clc
add
shrb
into
sub
jmp
int
sub
xor
imul
mov
mov
sbb
je
repnz
pushl
jle
cmp
push
je
test
sbb
mov
mov
fwait
imul
paddusb
fcomip
ljmp
loope
mov
in
xchg
movsl
jbe
fwait
lods
mov
pop
lret
ljmp
popa
mov
test
push
lahf
fmul
pop
mov
lret
ja
nop
sub
push
pop
std
mov
out
xor
mov
les
push
mov
mov
dec
pushf
jl
pop
or
imul
push
pusha
das
adc
in
add
pushf
xor
mov
push
cmp
mov
pop
cmc
inc
loopne
test
call
sub
mov
int3
popa
sub
in
push
cmpsl
lcall
out
stos
loopne
xchg
fcomps
fwait
jg
cmp
in
sbb
dec
xor
fiaddl
sbb
loope
insb
jl
mov
dec
in
adc
outsl
jo
incl
and
mov
leave
fisubl
mov
hlt
sti
cmp
out
mov
movsb
cmp
adc
mov
les
fidivs
bnd
cmpsb
pusha
lods
cld
xchg
icebp
or
sub
push
ljmp
fbld
jmp
sti
and
dec
ds
sub
mov
ret
lcall
inc
test
cmp
mov
and
clc
jg
xchg
push
mov
jg
out
test
std
add
dec
jb
jne
sub
jb
xor
sub
gs
xlat
push
lcall
ljmp
into
mov
nop
leave
test
cltd
adc
pop
mov
push
cs
cmp
test
test
dec
and
jp
arpl
xor
mov
lahf
shr
pushl
lret
fisubl
jmp
stc
dec
jmp
inc
fs
inc
xchg
cmp
inc
adc
in
dec
das
xchg
cmp
std
leave
movsb
jecxz
fisttpl
bound
mov
out
subb
pushf
xchg
cmp
fwait
push
ljmp
push
sbb
jne
sub
test
negb
shlb
pop
shr
das
lcall
or
cs
cmp
nop
mulb
stos
and
pop
dec
loop
push
cli
cmp
inc
cld
add
cmpsb
loop
mov
clc
push
mov
cli
bnd
repnz
dec
jge
repnz
sahf
stos
inc
call
outsl
jp
or
data16
push
daa
sub
jbe
jl
jb
out
ljmp
xor
popa
add
dec
sub
adc
dec
out
test
mov
out
cli
jmp
mov
inc
sbb
and
out
push
aad
xlat
nop
in
fldcw
jmp
jge
xor
stos
xor
inc
mov
mov
pop
in
orl
xchg
cmp
inc
mov
in
cmp
test
scas
sub
push
mov
cli
filds
shll
sbb
fwait
out
clc
cmp
jg
test
sub
insl
cmpb
xchg
fisttps
call
and
cmpsb
add
mov
lret
push
sahf
fdivrs
cmp
dec
xor
incl
push
out
cmpl
int3
mov
jmp
inc
ljmp
mov
cmp
jb
idivb
cltd
and
jmp
testl
sbb
jg
jl
dec
push
push
or
call
cmp
xor
mov
cmp
pushl
xchg
inc
insl
mov
shlb
stc
inc
xchg
cltd
xchg
mov
test
mov
xor
enter
in
mov
call
xchg
pop
mov
push
gs
mov
xchg
movsl
mov
mov
dec
test
ljmp
adc
dec
js
mov
jo
mov
mov
aas
cmp
adc
lea
mov
mov
or
mov
push
add
mov
jb
cwtl
popf
imulb
subl
in
repnz
add
cs
xor
mov
add
call
xlat
insl
push
sbb
mov
enter
in
mov
fldenv
adc
lcall
push
dec
and
pop
xchg
and
jnp
and
xor
ss
popa
push
lea
pop
adc
into
int
pop
aas
add
jecxz
sbb
adc
add
cwtl
inc
lahf
jg
aas
dec
pop
sbb
jg
or
dec
lea
inc
dec
rcll
sub
push
mov
das
add
testl
ljmp
pop
bound
inc
or
movsb
jp
jge,pt
jle
out
and
lret
cmp
outsb
pop
xor
pushl
test
lods
inc
test
cli
loope
es
test
and
inc
xor
dec
push
inc
xchg
cmp
daa
int
mov
aas
jns
mov
cmp
nop
roll
or
dec
subb
lcall
inc
lret
shr
adc
js
movsb
cmp
inc
mov
add
xchg
scas
push
mov
sti
dec
sub
call
cmpsl
mov
adc
xor
push
loop
addr16
cmp
push
dec
fucom
jns
cmpsl
adc
js
lock
lea
push
daa
xchg
lret
push
jle
adc
cmp
cmp
jge
or
pop
inc
fsubrp
mov
cmp
in
repz
in
testl
dec
pmulhw
fstpt
sub
lea
mov
sub
les
insb
push
ss
mov
dec
rol
jns
inc
aad
xor
cmp
insb
ret
push
roll
pop
cld
decl
cmp
push
xor
pop
rcr
mov
je
fdivrl
aad
xrelease
ljmp
dec
mov
out
das
and
adc
xchg
cli
add
jmp
stos
jmp
or
push
add
jl
mov
mov
mov
hlt
test
push
dec
mov
lcall
mov
int3
js
cmp
repz
add
jg
nop
inc
popa
mov
pop
movsb
add
popa
fbstp
rcrb
xchg
lods
repz
bsr
and
or
xchg
dec
leave
or
shll
pop
jle
add
cmpl
push
jmp
push
mov
xor
pop
xor
mov
stos
pop
repnz
sub
jns
cld
jo
push
aad
push
mov
in
test
adc
jb
and
cmp
data16
and
xchg
adc
lcall
pop
pop
jns
addr16
rcrb
mov
sbbb
mov
pop
cmpsb
movsl
jo
ljmp
fmul
push
aaa
xchg
mul
fsubs
dec
iret
mov
mov
dec
push
lret
and
cmp
incl
das
push
cmc
adc
or
pop
jmp
bound
ljmp
clc
jg
xor
nop
pop
shl
mov
dec
sti
pop
pushf
test
mov
add
dec
cmpsb
xor
iret
jnp
and
fsubrl
movsl
jge
sbb
call
stos
jb
orl
and
pop
pusha
sti
cmp
add
pop
lock
sub
mov
test
dec
cmpsl
xchg
cwtl
ds
push
push
repz
sbb
add
adc
jge
das
test
mov
xchg
sub
xchg
dec
push
rclb
sbb
lods
leave
mov
nop
sub
inc
pusha
push
pop
adc
hlt
mov
into
jmp
fbstp
mov
push
xchg
mov
outsl
jle
hlt
mov
inc
shl
mov
pushl
xor
push
ss
bound
lret
jmp
sub
loop
pop
adc
pushl
outsb
lds
add
roll
repnz
inc
push
ret
xchg
inc
setnp
call
sub
scas
push
push
mov
outsb
dec
popf
pop
pop
push
hlt
mov
xchg
testl
xchg
outsl
movsb
iret
sbb
xor
aas
fsubp
sbb
push
mov
push
stos
sbb
pushl
jmp
push
add
mov
enter
pusha
test
dec
dec
or
or
cld
jmp
push
aas
xchg
in
sub
sub
push
push
and
mov
clc
ret
adc
je
out
push
sbb
mov
out
sub
cmpsb
cld
int3
iret
loopne
mov
in
mov
mov
insl
dec
cs
inc
jecxz
rorb
push
fdivs
fmull
stos
xlat
jnp
lea
loope
jmp
mov
jp,pt
cmp
mov
sti
push
mov
scas
loop
loope
decl
pop
pusha
jge
mov
push
mov
inc
incl
cld
mov
cmp
or
mov
pop
or
xchg
outsb
jne
pop
out
clc
addb
lcall
ljmp
call
push
and
mov
sub
xor
and
add
pop
adc
lcall
incl
adc
testl
sti
mov
inc
decb
ja
push
icebp
and
jmp
enter
test
and
or
jge
sub
lcall
lret
mov
jle
in
jge
outsl
cmp
and
leave
pop
lods
lahf
cwtl
shl
ljmp
dec
jecxz
dec
xchg
cwtl
sub
xor
xchg
or
mov
cltd
push
xchg
dec
jmp
outsb
scas
mov
and
and
leave
xchg
adc
xchg
push
adcb
lcall
mov
shl
or
adc
mov
jno
in
push
sub
pop
xchg
cmc
outsb
fs
mov
push
outsb
dec
int
inc
in
bound
std
push
mov
push
sbb
xor
mov
in
jne
loope
mov
bound
mov
iret
pop
mov
idiv
ljmp
sbb
mov
adc
pop
bound
adc
cli
mov
xor
pushl
jbe
add
and
adc
shll
in
ja
into
mov
pushl
inc
fistps
sub
xor
adc
sbb
and
pop
fcos
out
cli
dec
movsl
mov
inc
or
lahf
out
clc
xchg
lahf
jecxz
sub
call
adc
loope
pop
in
push
inc
add
push
pop
rolb
neg
adc
mov
incl
cmpsb
sub
inc
jne
mov
sbb
les
sar
ljmp
test
xor
clc
call
lock
test
outsb
pop
incl
or
test
bound
ret
les
das
xor
lods
xlat
dec
aam
pop
pop
xor
jne
jno
out
insb
lea
adc
mov
adc
lods
xchg
lcall
jmp
or
scas
insb
ror
ss
inc
xor
cmpsb
pop
push
decb
add
mov
mov
inc
push
iret
cmp
ja
inc
xchg
and
rol
or
int3
shrl
jmp
addl
and
xlat
inc
imul
sub
das
rcrb
mov
adc
xchg
mov
imulb
sahf
cmpsb
mov
addl
lds
repz
incl
mov
sub
push
imul
mov
aad
es
jno
sub
ficompl
ficomps
rorb
inc
andb
dec
cmova
cmp
shlb
lret
lods
xchg
mov
pop
mov
or
jmp
call
hlt
jle
cmp
inc
icebp
out
mov
pushl
inc
inc
loopne
mov
roll
mov
pop
divb
pop
add
bound
pushl
cmc
sub
mov
pop
push
add
cmpb
das
inc
push
mov
decl
iret
mov
or
jo
out
movsb
and
aaa
loop
fcomi
cmp
sub
ljmp
and
fldenv
mov
inc
aaa
jle
js
jecxz
push
aaa
ror
jmp
mov
icebp
out
out
imul
mov
das
dec
mov
dec
lret
adc
pop
pusha
or
adc
rolb
out
scas
pop
movsb
fisttps
out
enter
jmp
dec
sbb
int
incl
ljmp
in
inc
mov
push
call
jbe
popf
leave
in
adc
stos
dec
out
push
imul
pop
mov
fwait
and
pushl
sub
movsl
dec
cmp
sbb
sbb
daa
shrl
xorb
or
mov
sbb
popf
jno
sbb
fwait
lcall
xchg
ja
ss
mov
pop
jnp
idivb
pusha
sbbb
jmp
shrb
adc
dec
loope
xor
imul
cmpsb
loopne
sub
xor
dec
xchg
mov
pop
mov
mov
or
and
ret
popl
int3
xchg
sub
je
paddusb
sub
inc
hlt
sbb
bnd
les
and
shrb
cmpl
ficoms
mov
sub
push
mov
sbb
push
rcll
dec
pushl
repnz
scas
clc
cmp
lahf
sbb
mov
clc
add
call
push
cmpl
insl
mov
pop
add
push
test
xor
mov
or
pop
pop
xchg
sti
push
repnz
dec
mov
lds
aas
inc
int
jmp
and
pushl
js
pop
inc
sub
aad
mov
mov
cmp
cmp
cmp
sub
xchg
addb
mov
adc
rclb
aaa
std
mov
xlat
ret
adc
mov
and
insb
cmc
xchg
out
imul
or
decl
test
fs
lret
sbb
inc
cmp
popf
mov
movl
jns
lds
xchg
mov
cs
mov
jns
lcall
xor
or
lods
mov
inc
inc
jl
fnstenv
jo
mov
fldt
rcl
mull
push
aaa
inc
pop
call
ret
sbb
sub
sub
incl
repnz
int3
xor
dec
inc
jle
out
xchg
cltd
imul
jp
ljmp
lcall
mov
push
repnz
and
cltd
in
inc
jmp
ret
ljmp
jbe
imul
jb
mov
loop
add
mov
cwtl
add
pusha
or
out
dec
adc
cld
mov
mov
sub
cmc
jg
loop
fnsave
jb
push
enter
test
jmp
cs
or
fsubr
aad
jl
mov
adcl
sbb
subl
push
loop
stos
push
pusha
jns
sub
mov
cmpsl
sub
xchg
mov
bnd
push
outsb
icebp
les
shll
mov
out
xchg
cmp
mov
xchg
push
xchg
mov
pusha
inc
out
inc
imul
std
cli
sub
ds
jecxz
frstor
push
lea
mov
into
in
into
lahf
pop
shll
and
es
dec
cmpsl
cli
adc
outsl
mov
sub
aas
int3
jle
bnd
pop
nop
lds
mov
cmp
sub
sbb
inc
xchg
ja
push
pushl
repnz
sarb
cmc
stc
pop
cmp
xchg
sti
add
xor
sbb
in
dec
inc
push
ljmp
jns
cmc
fiadds
es
loopne
mov
aas
test
pusha
aas
sti
decl
inc
hlt
lahf
adc
dec
stc
and
and
cmp
inc
cltd
mov
je
and
pusha
ljmp
xchg
lret
jmp
lret
push
push
sbb
insb
adc
fidivrl
lods
nop
push
sbb
incl
sub
inc
lock
andl
sub
ret
inc
and
mov
loopne
adc
sarl
xor
jp
repz
pop
cld
in
leave
lret
push
movsl
call
mov
fisttps
leave
int
fsts
int
ljmp
lret
sarl
fidivl
sub
fcom
add
cld
fwait
js
jb
pop
repnz
xor
out
aas
cmc
xchg
sub
ljmp
xor
add
loope
sub
in
jmp
pop
or
sub
jo
push
jnp
xchg
dec
xor
test
js
xchg
aam
and
addr16
cmp
jp
std
outsl
loope
fdivr
mov
push
sub
cmpsb
dec
fs
push
mov
test
les
incl
sahf
mov
cld
jle
pop
aas
shlb
or
sahf
cli
in
cltd
push
lcall
ljmp
test
aaa
cmp
cmp
jne
push
cmp
or
jbe
mov
aaa
xor
jg
cmp
inc
add
or
lds
xor
pop
mov
ljmp
xlat
rcrl
imul
or
imul
adc
pop
mov
scas
jmp
sbb
fildll
cmp
cltd
pop
dec
add
push
jb
incl
aaa
lcall
ja
pop
inc
in
movsl
cmpsb
push
sbb
test
add
lcall
ja
idiv
and
jb
sbb
add
jno
pop
in
inc
pop
je
cld
jns
sahf
mov
xchg
lock
ss
jb
xlat
sub
xor
jg
clc
cmp
outsl
icebp
mov
sbb
fwait
xchg
scas
mov
fcomps
adc
cmc
stos
and
xchg
dec
lds
fldcw
fwait
pop
hlt
mov
cmp
mov
mov
out
push
mov
and
outsl
xchg
outsl
adc
dec
rcrb
iret
fisttps
loope
sub
mov
ja
mov
ds
stos
inc
sahf
cmp
cld
decl
std
sub
out
adc
sub
pushl
push
push
push
cld
xchg
dec
push
jns
jge
std
xchg
cmp
mov
push
inc
lcall
movsb
mov
negb
pop
push
adc
pop
sub
ret
decl
mov
inc
scas
push
sbb
fs
xchg
test
jg
repz
test
pop
xchg
faddp
leave
bound
xchg
divl
lcall
cmp
stc
clc
add
add
dec
lret
lret
pop
xor
mov
mov
push
adc
pushw
nop
inc
int3
ret
adc
ljmp
cli
fld
cmp
enter
ss
pop
jecxz
es
dec
xchg
iret
testb
call
mov
movsl
data16
loope
jae
loop
jl
xchg
sbb
stos
stc
outsl
fisttpll
stos
adc
cli
lcall
and
fcomps
or
in
nop
jb
jbe
xor
call
gs
fiadds
sbb
hlt
mov
pop
jb
repz
rorl
lcall
aam
adc
add
ljmp
or
add
xchg
bound
loope
pop
lret
adc
mov
cli
popa
mov
or
in
dec
push
cmp
mov
xor
lcall
out
adc
sahf
xchg
test
add
aas
testl
sub
cmp
cmp
inc
mov
lcall
call
xorl
aaa
lods
mov
xchg
and
jmp
sarl
lret
ljmp
adc
adc
sbb
inc
lret
inc
lahf
sbb
cmc
jmp
adc
in
and
sti
pop
andl
scas
or
aam
dec
out
decl
ja
push
nop
mov
subl
lcall
mov
add
jg
incl
xchg
push
sarb
cmp
dec
stc
stos
push
repz
xchg
add
inc
loopne
cmpsb
fildll
pop
jae
pusha
inc
add
adc
jmp
mov
repnz
mov
or
adc
cwtl
lods
loop
xchg
decl
ret
xor
popf
das
mov
adc
mov
ljmp
mov
ljmp
fcmovbe
popa
das
repnz
ljmp
hlt
movsb
test
fdivs
dec
cmpb
push
arpl
outsb
sar
stos
jmp
cmpsb
insb
mov
fcompl
movsb
pop
cli
dec
push
aam
out
rcrl
jb
shrb
int
xor
jge
cmpsb
out
shrb
jmp
mov
push
push
cltd
sbb
pop
inc
mov
add
pusha
mov
jmp
and
fcomip
lcall
or
mov
mov
sub
dec
xchg
lahf
js
cld
push
ret
jmp
cmp
push
sub
adc
push
adc
add
pushl
and
mov
add
popf
sub
incl
push
ljmp
pop
pushf
lock
stos
sub
pop
pop
and
ja
arpl
lods
or
notb
test
and
cld
fnsave
adc
repnz
add
mov
call
fucom
dec
add
lock
sbb
push
sahf
dec
jmp
cmp
mov
cmp
out
sbb
cmpsb
lcall
mov
scas
ds
loop
dec
out
mov
in
and
sub
or
sub
pop
jno,pn
xor
call
data16
sti
dec
lods
inc
cmc
push
data16
testl
loope
inc
mov
push
aaa
std
decl
ljmp
push
xor
orb
imul
scas
jecxz
fcmovnb
jp
pop
or
and
xor
jne
icebp
adc
in
cmp
fcomip
mov
mov
clc
clc
jp
stos
je
cmp
inc
lret
push
leave
inc
xlat
jmp
ljmp
mov
ficoms
push
mov
loopne
inc
popf
popa
xchg
dec
mov
decl
lock
cmpl
mov
cmpb
inc
mov
call
or
jb
mov
arpl
mov
aaa
rsqrtps
jnp
cmp
loope
or
cltd
ret
push
ds
adcl
add
incl
insb
out
xlat
sahf
test
push
aaa
cld
xor
cmp
xor
ds
jns
pop
iret
push
mov
inc
mov
call
dec
test
int
pop
jns
iret
jne
pop
push
jnp
sbb
jecxz
xchg
pop
nop
or
shrb
call
fstps
add
pop
pop
mov
aaa
dec
std
fbld
or
mov
sbb
mov
aam
test
jb
sbbl
outsb
pusha
jecxz
decl
sbb
gs
push
and
add
fcmovnb
mov
jb
dec
subb
pop
xor
jno
xchg
add
popf
xor
dec
pop
sub
dec
pushl
inc
inc
mov
in
jecxz
pop
mov
mov
pop
ret
rcrb
lcall
push
or
shrb
add
sbb
dec
pop
decl
lret
test
popf
inc
punpcklwd
out
mov
mov
add
fistpll
sbb
cld
pop
sub
rorb
sbb
jne
push
and
stos
jg
std
xchg
jle
pop
and
into
shll
xor
loope
push
add
dec
or
mov
out
xchg
xchg
push
fidivrs
sbb
fcomps
jns
mov
inc
mov
mov
out
mov
mov
inc
cli
pop
dec
sbb
lea
lds
mov
fstl
lods
cltd
frstor
std
ljmp
pop
std
loopne
sub
mov
pushf
ret
pop
push
lret
js
add
add
push
mov
cmp
mov
loop
int3
lcall
in
sahf
or
inc
loope
push
push
or
cmp
arpl
ja
lahf
pop
sahf
xor
ret
mov
andb
popa
pop
idiv
cld
fildll
mov
push
sbb
mov
lcall
mov
jmp
in
sub
ds
mov
pushf
leave
repz
fdivrp
jmp
aaa
lods
sub
or
aam
dec
xchg
addr16
cmp
dec
or
dec
lock
out
shlb
cmpsb
in
push
mov
push
es
int3
mov
or
ljmp
daa
int3
out
pop
shlb
adc
sub
xlat
popf
repz
popf
sbbl
push
jecxz
lods
push
and
std
int
movsl
pop
xchg
jmp
arpl
mov
fsubrp
test
lcall
mov
aam
int
das
xor
cld
or
cs
lcall
lcall
xor
cmp
mov
xchg
into
fldt
adc
ret
inc
mov
test
lcall
je
and
xchg
cli
clc
dec
call
adc
jno
fdivl
ljmp
data16
movsb
jbe
fsubp
sbb
add
lods
and
aaa
pop
dec
mov
xor
incl
or
push
and
aad
arpl
or
sub
add
fs
jmp
into
sub
movsl
pop
dec
repnz
cmp
inc
dec
shufps
lret
fists
cmp
inc
jp
mov
fisttpl
jbe
mov
scas
cli
lcall
xchg
call
push
pop
lock
popf
stos
inc
shlb
daa
shl
call
call
dec
push
movups
jge
scas
dec
loopne
mov
jo
mov
dec
aad
insb
in
decl
fnsave
les
dec
xchg
inc
lret
js
insl
jb
shrl
sub
fcompl
loopne
in
rclb
lods
inc
fimuls
mov
negb
lds
jp
out
mov
mov
arpl
sbb
or
leave
shl
xchg
loope
cmp
jmp
cmp
filds
cmp
cmp
mov
jbe
ja
lock
aas
shll
aam
call
cld
ljmp
in
jns
outsb
adc
insb
mov
push
mov
mov
decl
call
jl
push
and
xchg
gs
jae
cld
jp
pop
int3
xor
mov
pop
mov
cmpsb
sbb
push
in
stos
outsb
testl
adc
test
call
cmpl
fcmovnb
fs
xchg
stc
dec
loopne
jle
cltd
mov
pop
adc
push
mov
inc
fxch
decl
repnz
dec
mov
mov
negb
inc
lret
aam
out
dec
scas
lds
shlb
inc
xchg
or
jo
fnsave
shrl
push
jl
fistpl
dec
fisttps
push
cmp
jl
movb
cli
lcall
xchg
out
enter
pop
xlat
cwtl
adc
push
dec
hlt
fwait
cmc
jmp
inc
sub
imul
sbb
xchg
ljmp
loopne
inc
adc
gs
mov
mov
lret
sarb
cwtl
inc
fbld
test
decl
aam
push
adc
lds
adc
and
mov
daa
es
jne
push
ja
mov
push
cmpsb
dec
xchg
or
adc
out
in
mov
mov
popl
mov
inc
mov
cltd
sub
aam
pop
jns
sbb
fcomip
mov
push
and
aaa
xchg
movsl
fcom
push
sub
pop
mov
jae
hlt
push
call
dec
jns
or
push
xorb
cmp
add
ffreep
das
outsl
leave
dec
or
jns
lret
mov
inc
enter
call
xchg
das
jbe
xchg
cmp
jmp
sub
stc
notb
pop
into
push
jo
dec
cmp
out
adc
push
cld
rcrb
sbb
pop
mov
incl
imul
adc
and
adc
sarb
roll
je
dec
adc
lahf
xchg
fistps
iret
les
call
jge
dec
pop
or
into
lret
adc
xchg
push
aam
les
inc
dec
pop
jnp
call
jmp
mov
in
cltd
jg
inc
rcrl
jp
enter
jmp
jl
stos
int3
sub
scas
daa
push
push
rolb
xor
jns
jmp
pop
ror
mov
dec
insl
mov
sbb
lcall
cli
scas
cli
dec
out
or
stc
pop
imul
fldt
incl
pop
xchg
int3
arpl
dec
pop
nop
cmpb
aaa
fsubrs
mov
bound
pushl
cld
stos
dec
cmp
inc
jnp
and
sti
xchg
testl
ljmp
clc
in
jecxz
or
jl
pop
cmpb
push
mov
lahf
jno
outsl
add
ljmp
dec
stc
push
push
test
mov
and
iret
loop
sub
jmp
fsubp
inc
scas
add
jns
lds
push
outsb
pop
xlat
and
fstpl
cmp
lcall
shrl
xchg
movsb
movlps
shrb
sbb
lods
xlat
xchg
inc
dec
push
pushl
out
ja
and
ret
mov
and
and
inc
jle
das
decl
jno
into
push
inc
shrb
int3
jns
test
dec
dec
ljmp
xchg
jmp
cs
insb
xchg
and
push
test
jl
fistpl
mov
cld
add
sar
sub
dec
push
neg
and
jnp
cs
divb
sub
cltd
inc
ljmp
mov
mov
push
mov
xor
mov
sub
shll
clc
call
inc
mov
dec
jb
cmpl
imul
pop
lahf
ficompl
mov
lcall
orb
or
push
popa
push
jno
sub
aam
lock
or
lock
iret
fs
mov
pop
hlt
ljmp
xchg
das
mov
popl
ljmp
dec
push
dec
jns
enter
xor
insb
adc
cmp
fwait
int
xchg
pop
stos
xor
pushl
aaa
add
pop
cmp
mov
in
pushf
push
ret
jmp
fdivl
testl
sti
xlat
pop
gs
in
xor
lock
decl
jo
stc
sbb
mov
sub
push
push
imul
fistps
ljmp
ljmp
xor
orb
add
sar
mov
and
mov
sub
fidivrl
dec
push
and
and
push
mov
jg
stc
xchg
mov
ds
sub
sahf
das
outsb
in
add
out
inc
xorb
cmp
lcall
pop
repnz
dec
or
stos
mov
xchg
sbb
jle
or
test
cmp
loop
popf
into
mov
cli
xchg
add
loopne
outsw
sub
pop
shl
pop
lea
scas
cli
call
push
hlt
or
xchg
nop
out
fwait
pop
sub
mov
ds
xchg
add
cli
push
mov
or
fistpll
and
lods
sub
nop
sub
dec
ljmp
ret
lret
jecxz
mov
inc
decl
mov
loop
cwtl
pusha
mov
push
add
dec
and
ljmp
clc
pushl
lret
lcall
pushf
fistpl
out
scas
pop
in
jae
icebp
and
aas
incl
cmpl
icebp
ljmp
push
aas
ss
loop
hlt
movsb
and
lcall
inc
jnp
repz
or
es
ja
adc
leave
mov
xor
sub
call
das
mov
fistl
inc
or
adc
jne
fcmovu
sub
cwtl
dec
das
push
popf
sar
decl
mov
nop
inc
aam
xor
mov
xchg
ja
mov
sub
call
xchg
inc
data16
dec
cmc
bnd
ficompl
ljmp
push
jg
aas
mov
sub
popf
jle
add
inc
jg
mov
adc
sbb
mov
repz
push
mov
decl
xchg
push
call
push
and
dec
iret
cmp
mov
das
add
repnz
cmp
ljmp
mov
mov
dec
sbb
stos
mov
sub
jns
dec
or
decl
or
arpl
std
orb
xchg
jp
sbb
mov
mov
push
mov
rcrl
jne
in
pop
test
xor
cmp
sbb
lcall
jno
fs
jp
cmp
fiaddl
pop
push
jp
out
xchg
int
icebp
adc
out
pop
repz
dec
ljmp
scas
jns
fadds
xchg
inc
sar
pop
sub
cmc
inc
jmp
outsl
dec
and
dec
stos
inc
adcb
push
or
inc
repnz
push
adc
sbb
ret
cs
leave
push
int3
incb
sub
fldenv
xor
pop
dec
jae
ficompl
mov
gs
sbb
mov
mov
popa
cmp
les
mov
inc
sbb
outsl
fwait
push
cmp
ljmp
sub
jp
shrl
aad
jae
in
xor
ret
mov
pop
mov
and
imul
xchg
test
inc
mov
jmp
shrl
pushl
xchg
inc
arpl
in
inc
add
scas
cmp
pop
sarl
push
or
jmp
jbe
inc
mov
push
push
ja
popf
mov
stos
movsl
mov
out
sbb
jmp
cmpsb
fs
mov
xchg
cmpsl
out
out
push
mov
xor
jnp
das
mov
lcall
lock
insb
jae
sbb
sbb
lds
hlt
out
std
lcall
fwait
outsl
dec
nop
lds
pop
xchg
clc
push
inc
xchg
lods
dec
mov
js
sub
cmpsb
popf
es
mov
outsl
stos
outsb
and
pop
push
fs
lods
aad
cli
pop
imul
mov
jae
jg
ds
imul
add
jge
ljmp
daa
insb
test
stos
scas
clc
js
adc
lret
popa
jle
inc
sar
test
ljmp
sub
xchg
test
mov
test
push
test
mov
lcall
mov
adc
mull
adc
mov
jl
mov
and
xor
lea
stos
dec
xor
fs
sbb
jae
xchg
push
push
gs
stc
dec
nop
lock
int
scas
movsl
and
jo
adc
adc
push
ss
decl
pop
jecxz,pt
mov
fldl
dec
in
arpl
lods
cld
sub
out
pop
sbb
or
call
or
mov
ljmp
sbb
sbb
aaa
and
dec
add
dec
fisttpll
call
in
or
test
les
mov
jmp
mov
ljmp
ljmp
inc
pop
xor
incl
movsb
test
das
or
pop
xlat
xorb
roll
fstp
lcall
dec
popa
stc
xchg
cmp
sti
sbb
xor
leave
js
sarl
mov
fidivrl
in
test
cwtl
xchg
cmp
and
sub
out
mov
hlt
lahf
jae
sbb
jmp
js
pop
insl
mov
inc
xchg
sti
in
push
sbb
out
add
push
std
sub
std
inc
cmpl
div
jmp
push
clc
cmp
sbb
icebp
add
sbbb
lcall
jo
aad
fists
add
cwtl
fbld
mov
dec
bound
fisttpl
push
jae
mov
mov
cmc
frstor
lahf
iret
incl
lods
sub
push
sub
lds
jecxz
repnz
mov
add
dec
sarb
sbb
xchg
jno
inc
inc
or
pushl
in
xor
pop
adc
sbbl
into
mov
add
cld
into
aaa
data16
sub
stc
hlt
add
mov
cmp
out
pushl
lods
adc
xor
testb
enter
arpl
cmpsl
push
jmp
mov
xor
decl
lret
adc
dec
aad
dec
imull
aas
mov
pop
sub
add
adc
lods
jl
mov
pop
push
loopne
outsl
sar
out
add
sbb
sahf
daa
pop
cli
lock
bnd
xor
in
pop
jmp
das
xchg
das
jg
call
movsb
dec
inc
mov
in
addr16
outsb
shl
sub
add
adc
pushl
cli
cmpsb
cmp
cmp
ljmp
cmp
dec
add
std
and
inc
push
and
jae
cmp
push
lcall
mov
decl
mov
lods
orb
fstpl
jecxz
loope
fs
mov
stos
aas
adc
stos
jmp
inc
cmp
sub
stos
mov
lret
ret
mov
loope
call
dec
or
push
or
fs
into
adc
inc
test
jmp
inc
add
outsb
or
aas
xor
xor
decl
fs
imul
icebp
inc
sbb
xchg
xor
mov
mulb
subl
sbb
jo
xchg
sbb
test
je
pop
or
repnz
jae
jl
int3
adc
jmp
clc
pop
dec
dec
scas
xor
into
leave
push
dec
iret
pop
push
sbb
inc
sub
fwait
scas
inc
mov
xchg
call
mov
dec
inc
mov
mov
jb
ja
sarl
mov
movsb
pushl
push
test
movsb
or
mov
mov
pushf
push
fcmovnbe
clc
cld
and
mov
jae
decl
xchg
in
pop
and
mov
in
mov
imul
mov
jbe
shlb
cmpsl
ja
pusha
inc
fisubrl
dec
mov
decl
mov
inc
shl
pop
test
cmp
inc
jmp
movsb
shrb
or
lock
jns
pushf
sub
sub
arpl
incl
push
pop
push
cmpsl
xor
popa
jl
out
scas
cmc
repz
push
jne
mov
xchg
push
push
fistl
repnz
push
testb
mov
adc
cmp
test
cltd
lock
dec
xor
out
cltd
add
sub
fdivs
push
or
mov
adc
jmp
or
cli
add
dec
or
lcall
dec
mov
aas
inc
jb
je
and
mov
sbb
fdivrs
sarl
es
mov
mov
dec
notb
jecxz
mov
sbbb
jmp
cmp
fwait
jmp
mov
mov
push
cmpsl
shrb
movsb
or
mov
ljmp
rcll
mov
ficomps
xor
lods
popf
adcl
in
je
mov
mov
inc
or
dec
sub
add
cmc
outsb
push
repz
addr16
and
mov
sub
or
mov
mov
lret
sbb
nop
in
dec
sahf
sbb
hlt
add
push
movsl
test
ds
pop
sarb
jge
test
pop
movsl
ret
out
xor
sbb
in
xchg
std
cs
push
xchg
mov
and
sub
mov
cltd
mov
fsub
or
arpl
lahf
adc
and
mov
decl
push
mov
shrl
and
cli
sub
dec
pop
jnp
mov
aaa
imul
jge
gs
pushl
ljmp
hlt
sbb
fisubs
jmp
clc
enter
insb
idivl
inc
pushf
lret
pop
jnp
icebp
jno
mov
jmp
ljmp
in
xor
fildll
adc
pop
movsb
adc
leave
nop
pusha
or
arpl
scas
fcomip
sbb
xor
mov
mov
ljmp
sbb
mov
xchg
out
inc
lods
pop
xchg
push
push
fdivl
add
and
sub
mov
cmp
adc
out
pop
mov
push
sbb
sub
or
dec
jmp
xor
enter
adc
loope
insl
out
lock
jp
pusha
and
cmp
mov
xchg
inc
pop
popl
xchg
adc
xchg
fxch
or
lcall
push
mov
mov
aaa
mov
push
outsl
mov
in
sbb
in
sub
clc
mov
or
lcall
and
decb
xor
xchg
fadds
xchg
ljmp
adc
cs
in
dec
lds
sbb
pop
cmpsl
cmc
int
pop
mov
xchg
rolb
mov
pop
dec
sub
push
adc
and
cmp
test
lcall
std
outsb
outsb
decl
inc
xchg
dec
jb
and
fs
mov
xlat
add
inc
decl
incb
or
push
push
xchg
stc
fildll
test
popa
fs
jmp
cld
jp
and
sub
out
cmp
push
jne
jb
jg
stos
stos
jno
xchg
fstpt
and
mov
jo
jge
pop
pop
stos
pavgb
push
lock
jmp
cwtl
inc
sbb
pop
push
dec
cmp
fnstsw
fcomps
xchg
scas
div
mov
leave
test
shll
xchg
scas
pop
rol
jmp
pop
pop
test
jo
push
jne
cmp
jnp
mov
sub
pushf
jb
push
push
int
outsl
rclb
inc
sbb
stc
inc
sub
pop
mov
inc
jg
pusha
nop
mov
das
popa
add
ret
xchg
pushf
out
fldpi
mov
sbb
jmp
fiaddl
sbb
pop
pop
fldl
out
test
loop
jg
andl
pushl
in
adc
popf
orb
movsl
call
fs
xchg
fdivrl
fcmovne
and
fnstenv
pushl
test
mov
movsb
cltd
out
popl
lock
push
mov
cmc
sub
fcomip
call
dec
addr16
inc
outsl
lahf
jno
clc
call
jns
push
ficomps
jg
ljmp
mov
test
jns
jge
adc
pop
or
cmc
inc
das
int
nop
jmp
cmovge
cwtl
xor
sbb
stos
sub
cmp
loope
dec
pop
lods
cmc
cmp
stos
adc
lcall
inc
or
ds
arpl
daa
test
mov
mov
mov
adc
dec
ja
pop
mov
in
inc
in
jnp
int3
nop
lcall
stos
push
lock
loopne
mov
sbb
cmpxchg
divb
xor
adc
push
cld
call
mov
adc
enter
adc
push
and
jns
push
sti
xor
push
stos
pop
pushf
int
push
stc
mov
out
out
shl
mov
out
sbb
insl
pop
xorb
incl
std
pop
cmc
in
pop
mov
popf
mov
push
dec
push
inc
outsb
mov
dec
mov
je
cmp
mov
sub
add
mov
mov
mov
loopne
dec
data16
fbld
add
sbb
jne
decl
mov
add
ds
in
orb
jp
pop
jbe
jmp
xchg
add
bound
pusha
adc
daa
stc
pushf
cmc
jbe
sar
jg
rol
cmp
and
xchg
adc
dec
je
adc
out
mov
and
ljmp
das
test
lret
sub
cmpsb
add
jo
mov
push
jg
hlt
cmp
stos
in
jecxz
lahf
cli
jle
fildl
int
in
dec
mov
in
mov
push
loop
les
lret
pop
enter
das
lds
or
jmp
push
hlt
ljmp
cmpsb
xor
xchg
push
repz
xor
cmc
pop
push
cmpsl
and
or
jg
decl
mov
or
fisttps
sub
pop
mov
fs
lcall
cmp
out
shlb
in
jbe
fwait
in
mov
cmp
jg
lcall
mov
push
les
or
pop
fisttps
jge
sub
xchg
cmp
jbe
pushl
dec
lret
out
dec
add
popf
and
push
push
xchg
adc
stos
fnsave
stos
sbb
pushl
xor
mov
cmpsl
push
lock
frstor
xlat
clc
sub
lods
cmp
mov
dec
pop
pop
jae
popa
gs
add
sbb
sub
mov
rolb
shlb
cmp
push
out
mov
mov
add
enter
test
push
jo
out
or
mov
mov
push
pop
sarl
std
jno
sub
pushl
std
sbb
jmp
inc
mov
lcall
daa
ret
in
call
cld
mov
bound
stos
xchg
mov
mov
in
dec
inc
dec
jmp
jl
incl
jb
les
arpl
test
mov
fistpll
pop
test
lcall
jge
pushl
shlb
out
add
and
sti
test
pushl
push
mov
lret
ret
mov
pop
xchg
fldt
pop
add
mov
das
es
mov
popf
dec
fnstcw
lret
dec
out
pushl
dec
push
ljmp
subl
aas
inc
mov
sub
ds
xchg
int3
lea
imul
add
std
sub
add
add
outsl
jl
jmp
repz
add
sub
emms
cld
ljmp
cwtl
ja
daa
call
bound
ret
xlat
insb
mov
dec
adc
incl
out
xchg
mov
ret
movb
mov
and
int3
dec
fcmovnb
mov
in
xchg
xchg
cmp
dec
test
shr
jno
inc
add
out
mov
sbbl
inc
or
lcall
xor
dec
inc
rcrl
sti
jns
lock
adc
jmp
enter
ja
mov
dec
fcompl
xor
fistpll
jne
mov
mov
out
adc
rorl
test
aam
mov
mov
aaa
call
call
popa
mov
roll
jecxz
jl
mov
jge
cmp
mov
loopne,pt
mov
das
sar
mov
inc
xchg
mov
rcr
adc
loop
pushf
xchg
cmp
inc
pushf
and
daa
mov
fisttpll
test
fadd
cld
inc
loopne
pushl
test
aam
sbb
fucomp
mov
aas
or
test
mov
notb
pushl
pop
xlat
stos
pop
adc
jno
iret
shll
and
cmp
adc
adc
repz
leave
push
shll
fldt
inc
into
jg
fs
mov
push
dec
mov
or
and
add
shl
adc
cs
andb
push
je
jbe
pop
adc
clc
incl
lods
fistpl
and
std
andb
adc
idiv
outsl
xor
and
dec
cld
inc
iret
or
mov
sbb
mov
cld
pushl
scas
mov
push
dec
jnp
out
inc
mov
xor
cli
mov
cld
xchg
decl
sbb
clc
mov
out
push
mov
or
aas
decl
mov
adc
dec
or
or
enter
push
cmpsl
cmp
pop
pop
aaa
cld
pushl
and
mov
jg
test
jbe
pop
sbb
iret
jbe
mov
ljmp
clc
cltd
lods
movsb
outsb
repnz
popf
jle
push
mov
pop
arpl
jl
lds
add
jmp
mov
sbb
mov
loopne
mov
pop
mov
call
je
js
adc
inc
call
call
or
inc
pop
xchg
cs
mov
mov
imul
incb
movsl
and
push
ret
insb
sbb
or
cmp
ret
aad
adc
mov
incl
dec
sar
lds
adc
scas
jl
in
add
inc
push
pop
add
inc
dec
xchg
mov
cmp
cmp
loop
repz
pop
xor
or
dec
pushl
inc
rcr
dec
repnz
and
ss
ljmp
push
xchg
dec
or
shlb
rcll
adc
cltd
jle
push
lcall
sub
dec
js
mov
sahf
jns
jnp
push
mov
mov
or
out
movsb
std
jmp
outsb
push
mov
and
mov
mov
push
push
into
sub
imul
lock
dec
pop
cmp
jmp
inc
adc
in
xchg
inc
pop
cmp
testb
pushl
hlt
push
repz
cmc
mov
andl
mov
rcll
sbb
jmp
add
sub
popa
cmp
add
cld
and
mov
fstp
lret
roll
scas
js
clc
mov
rorl
xchg
fsubrs
leave
lods
lea
jp
or
pushf
mov
jg
ljmp
aam
or
fwait
ss
jge
adc
outsl
adc
sbb
incl
call
sbb
dec
inc
jns
mov
fs
jg
out
inc
mull
fwait
inc
xchg
cmp
fildl
inc
loop
push
cltd
lcall
test
scas
push
icebp
and
in
inc
mov
mov
fmuls
sub
jl
mov
adc
scas
fdivl
pop
in
lcall
pop
mov
or
cmp
cltd
and
fbld
test
pushl
das
sbbl
insl
test
repz
shrl
mov
jmp
movsb
jg
test
and
mov
pop
jne
sbb
fisubrs
int
jb
ljmp
sub
cmp
sub
and
xor
cltd
fldenv
jl
cmp
cmp
aaa
pop
int
mov
int3
mov
ljmp
mov
inc
inc
sub
sti
dec
enter
lcall
inc
js
adc
xor
add
xchg
mov
jle
push
out
adc
dec
test
fstp
sbb
fidivs
fidivrs
jnp
dec
notb
jge
testl
or
jecxz
jmp
jge
fdiv
fsts
add
jbe
fnstenv
xchg
xchg
imul
fs
inc
pop
jg
pop
jp
jmp
stos
loop
xor
iret
adc
outsl
and
xchg
or
and
pop
and
pop
mov
call
mov
xchg
sbb
pusha
cmp
add
sbb
push
dec
lea
cs
mov
pushf
gs
scas
or
movsb
mov
xor
imull
mov
ljmp
cs
sub
mov
popa
sub
sar
mov
or
ret
stos
addb
pop
test
pop
loop
test
ret
cmp
and
fdivrs
jmp
push
add
incl
add
adc
inc
scas
mov
mov
fisubrs
incl
in
enter
dec
or
xchg
daa
cs
jae
pop
mov
pop
pop
mov
jg
outsl
mov
scas
mov
ds
and
jbe
test
aaa
push
sbb
outsl
clc
lcall
in
or
outsl
mov
movsl
or
dec
test
or
xor
push
mov
pushl
std
cmp
and
daa
les
cmp
xchg
xor
lret
add
mov
icebp
mov
call
out
in
cmp
sub
fistpll
outsl
js
test
or
in
fsubrs
shlb
lcall
rcrb
nop
incl
in
jg
cli
std
xor
inc
or
pushf
jmp
jbe
scas
xchg
data16
pushl
outsl
es
add
or
in
jb
pop
test
push
in
mov
jmp
arpl
or
fadd
lds
xchg
sbb
stc
ss
call
fdivrs
or
int3
jne
sub
ret
sbbb
xchg
call
scas
mov
ljmp
push
in
dec
add
arpl
mov
push
and
xchg
sbb
sbbb
ljmp
fisttpll
mov
pop
push
fwait
shrd
push
mov
or
or
push
stos
pushl
cli
bsr
mov
shr
arpl
out
imul
jle
xchg
sar
out
loop
cmpsl
mov
sarb
inc
add
out
xchg
insb
faddl
outsb
mov
fistps
les
and
jb
and
mov
or
pop
push
les
pop
sbbl
dec
inc
sub
fildl
jmp
mov
cld
nop
or
jns
mov
sub
jmp
mov
or
incl
nop
mov
std
sbb
es
movsb
add
mov
push
mov
sbb
pushl
xor
lcall
popf
cwtl
leave
xchg
arpl
jge
cmp
aad
pop
ljmp
cli
and
loopne
imul
incl
mov
or
fmuls
mov
ljmp
jns
jmp
loopne
cmp
push
xchg
outsl
cmp
std
fdivr
test
lcall
fildl
mov
scas
cld
popa
xchg
loopne
idivb
aaa
pushf
lcall
push
fldl
lock
mov
inc
pop
lds
leave
adc
mov
sti
pop
cmp
dec
or
leave
xor
aas
bound
scas
xlat
jl
outsl
push
les
aaa
cld
jmp
cmpsb
lods
arpl
lret
ds
cmp
and
js
mov
lcall
sti
adc
cmc
call
mov
nop
adc
popf
imul
jl
add
dec
cmp
mov
mov
cli
jecxz
or
or
cli
call
scas
popa
mov
shl
jo
jb
aas
cli
cmpsb
and
loopne
out
cli
cli
or
and
addr16
mov
pavgb
out
push
mov
inc
movsl
push
adc
shll
scas
hlt
jae
pop
push
not
jbe
adcb
incl
daa
ret
xor
insb
push
in
push
cld
addl
stos
jo
icebp
push
cli
js
jge
mov
decl
ds
add
test
aaa
jp
pop
add
mov
or
sti
jo
mov
mov
mov
cltd
cmpb
dec
mov
xchg
mov
mov
or
mov
adc
cmp
dec
ds
cmpsb
pop
not
pop
lcall
fwait
or
notb
pusha
pop
dec
mov
or
adc
add
fwait
cwtl
movsl
fildl
mov
sti
jg
pushl
jmpw
cli
pop
mov
push
out
je
mov
jnp
lcall
fs
icebp
gs
sbb
outsb
ljmp
dec
sar
sbb
pushl
dec
addb
lock
arpl
mov
push
test
mov
pop
jmp
lret
cwtl
mov
push
inc
jle
pop
mov
movsl
shll
sahf
push
lret
cli
fisubs
push
dec
sahf
fcomps
das
cs
je
idiv
pushl
lods
pop
fbstp
jo
mov
outsl
loop
pop
inc
fbstp
ljmp
popf
mov
call
cltd
scas
adcb
call
mov
lods
movsb
pop
xchg
lock
ljmp
lret
push
loop
dec
or
popa
int
fmuls
sbb
jo
adcb
outsb
cmpsl
jae
rcr
fwait
mov
dec
cwtl
add
mov
mov
icebp
rcrl
fcoml
adc
adc
filds
cmp
out
mov
cld
push
out
sahf
stc
inc
dec
stos
fwait
pop
jo
mov
lock
in
pop
stc
lds
enter
pushl
aas
icebp
jecxz
sub
pop
cltd
pop
dec
lods
cld
mov
es
cs
stc
lret
pushl
std
or
push
int3
shrl
jmp
rcrl
and
call
mov
lret
mov
sub
movsl
sbb
test
or
sbb
cli
dec
decl
jmp
inc
std
push
jg
xchg
in
xchg
cmp
daa
in
push
jle
mov
sbb
call
adc
mov
xchg
fbld
dec
imul
xor
pop
cltd
scas
std
lcall
inc
or
sbb
add
lahf
adc
out
cli
add
or
mov
jmp
sti
pop
add
and
ljmp
xor
movsl
idivb
fimuls
mov
jecxz
or
stos
hlt
mov
incl
mov
add
dec
mov
xchg
pop
sbb
cmc
sub
mov
pop
or
decl
scas
sbb
cld
or
push
in
popf
adc
pop
dec
call
xchg
mov
ret
jg
fildl
lds
sub
sbb
sti
in
fiaddl
push
lahf
push
pop
inc
dec
loope
enter
clc
out
out
ret
popa
xorl
xor
xor
xlat
xor
and
push
jnp
jns
xchg
jbe
mov
loop
cmc
loop
cmp
mov
pushl
std
incl
and
add
loopne
incb
in
fbld
mov
inc
adc
mulb
ficoml
adc
dec
js
or
add
jno
mov
mov
ljmp
aam
cmp
aas
aaa
mov
movsl
fnstenv
pushl
cmpsl
mov
cmc
jge,pn
xor
mov
push
into
inc
clc
es
in
jp
scas
fs
jg
insl
outsb
gs
cmc
add
sbbw
jmp
aad
xchg
mov
xchg
in
mov
in
cmp
sbb
sub
jg
add
decl
pop
mov
mov
mov
movsb
pop
cmp
gs
inc
out
xchg
outsl
in
call
inc
dec
out
jecxz
xchg
in
rorb
rcl
xor
lock
in
mov
divb
mov
pop
push
dec
xchg
insl
cld
push
mov
add
mov
std
into
jae
fnsave
xor
xchg
xchg
gs
popl
or
shrb
bound
insb
je
lcall
dec
fisubrl
movsl
adc
je
fidivrs
and
lods
mov
dec
incl
vstmxcsr
cli
lahf
popa
test
push
jnp
por
fwait
in
pop
push
std
clc
call
lods
sbb
in
jge
mov
cmp
pushf
cmp
or
xchg
xor
ljmp
mov
dec
xor
mov
jmp
pop
xor
gs
xchg
xchg
in
repnz
ljmp
add
xchg
fistpl
imul
jnp
lret
hlt
dec
and
call
stos
or
outsl
cli
or
stos
test
xor
lret
cmp
pop
sub
ss
data16
dec
in
and
loope
popa
shlw
push
sub
push
adc
scas
dec
jo
push
jb
test
jmp
and
and
iret
mov
xor
lds
mov
add
pop
cld
push
sub
pop
mov
dec
sbb
js
inc
dec
xchg
loop
xor
pushl
inc
clc
and
jne
sahf
bound
test
mov
call
jl
test
das
jae
scas
mov
sub
cmp
std
ret
xor
bound
jmp
std
lock
repz
lds
push
fld
and
mov
mov
or
les
decl
dec
cltd
lea
or
scas
cli
decl
loop
repnz
dec
dec
ljmp
mov
das
rolb
and
cmp
mov
mov
hlt
decl
add
or
xchg
loope
pop
push
fistpll
es
scas
mov
jg
xchg
mov
dec
jle
movsl
xchg
mov
xor
lods
push
jbe
fldcw
lock
cmp
in
push
jmp
cs
xchg
mov
mov
sbb
dec
inc
stos
jne
add
add
ljmp
inc
jno
rorl
fcomps
mov
jg
int
and
inc
inc
fcomip
add
loopne
bound
dec
fs
rol
lahf
add
or
insl
incl
sbb
popf
inc
pop
jecxz
fisttpll
xor
cmpsb
out
pop
cwtl
xlat
nop
pusha
jno
mov
add
je
les
inc
adc
mov
mov
mov
outsb
jmp
jne
es
outsl
cli
mov
dec
mov
push
stos
inc
add
mov
add
fdivr
lcall
sbb
inc
insl
xchg
pop
js
push
lock
lahf
rcl
repnz
insl
xor
decl
mov
inc
xchg
adc
lahf
sub
insb
xchg
xchg
mov
clc
incl
inc
dec
les
sbb
jb
dec
loopne
sbb
jns
ljmp
pop
cmp
sub
or
cmp
push
lea
inc
scas
es
in
pop
dec
gs
cmpsb
daa
je
ljmp
or
xor
pop
mov
add
mov
dec
imul
pop
dec
jae
sbb
lds
or
movsl
cwtl
jns
outsl
add
icebp
inc
pop
cmp
imul
push
lcall
jnp
mov
xchg
inc
push
loop
lcall
cmp
xor
rcrl
mov
xchg
and
push
js
mov
or
mov
repnz
mov
adc
cmp
add
movl
cmp
add
sbb
inc
or
loop
pop
mov
icebp
je
ss
add
add
iret
shlb
cli
or
lcall
in
imul
cmc
test
out
shlb
ljmp
jl
ljmp
bound
add
inc
sub
pop
popa
push
jno
repz
lret
pop
adc
ret
lret
jmp
pushl
or
adc
jbe
mov
stos
jge
cmp
out
pop
outsb
pop
ljmp
sub
ds
testl
inc
inc
push
pop
cltd
push
or
push
pusha
xor
push
mov
incl
call
clc
jle
or
rcrl
mov
xor
push
xor
push
ds
popf
add
incl
nop
adc
out
es
push
cmpsb
adc
fwait
mov
cmc
loop
ss
or
daa
sbbb
decl
fwait
ja
push
pushf
ss
fwait
mov
mov
cmp
adc
outsl
outsb
imul
xor
and
xchg
daa
jne
cltd
aaa
popa
stos
add
gs
xor
nop
clc
pushl
adc
inc
mov
dec
shlb
test
jno
push
pusha
jg
lcall
incl
dec
idiv
or
aas
jle
sbbb
mov
arpl
lcall
pop
fbstp
mov
push
mov
jecxz
adc
hlt
andps
push
cmp
xchg
mov
mov
inc
out
inc
insb
xchg
aam
movb
mov
lcall
mov
pop
in
push
notl
clc
fstpt
sbb
jle
sbb
in
dec
clc
scas
cmp
cmpl
ljmp
fnstcw
mov
lret
test
pop
std
pop
scas
and
fwait
jp
repnz
add
sti
stos
cs
xor
adc
jg
add
lret
repnz
sub
add
fists
pop
sub
mov
xlat
pop
cld
xchg
fimull
or
adc
int
pusha
movsl
adc
fidivs
xor
pop
call
push
mov
ficoms
into
xchg
mov
xor
and
addr16
imul
jp
xor
push
sub
movsl
stos
pushl
mov
cmp
push
ljmp
cmp
dec
fdivl
pushl
mov
fcompl
pop
jnp
dec
out
adc
sahf
in
test
int
inc
mov
mov
adc
sbb
decl
in
dec
cmp
fstpl
push
add
sub
dec
jne
mov
mov
push
fcmovbe
aas
std
xchg
push
push
mov
xchg
mov
jmp
inc
jmp
std
pop
inc
lock
sbb
jmp
iret
ljmp
outsl
cli
push
in
mov
cmc
and
pop
pop
aad
psubusw
xor
icebp
clc
adc
gs
jmp
mov
dec
inc
or
fisubrl
insl
popa
xor
stos
rcll
inc
mov
aad
call
sub
xor
inc
in
xor
and
add
insb
cld
jmp
push
cmp
andl
sahf
push
cltd
mov
cltd
jg
jbe
adc
fiadds
daa
fwait
push
stos
mov
std
sub
cmp
xor
stos
adc
cwtl
ds
jmp
and
xchg
pop
xor
push
enter
daa
das
jle
sbb
add
dec
fistpll
rol
cmp
pushl
es
hlt
push
loope
fadds
cmp
dec
stos
xchg
lret
shlb
ljmp
movsb
jnp
clc
out
jnp
je
jge
dec
sbb
cmc
mov
ljmp
fwait
mov
mov
pusha
pop
jno
cmpsl
ss
push
mov
repnz
popa
xchg
jmp
dec
inc
stc
xor
cmpsb
in
call
mov
or
movsb
or
outsb
cmp
data16
int3
rclb
repnz
pushl
pop
stos
sti
or
inc
push
adc
or
mov
cmp
ljmp
scas
mov
imul
push
loope
repz
lds
mov
loope
push
cmp
push
fisubl
enter
imul
fbstp
xchg
lock
mov
pushl
jnp
fisubl
decl
mov
scas
stos
adc
clc
inc
mov
repz
xchg
popa
mov
rorb
mov
fmull
mov
icebp
fs
in
or
incl
scas
enter
fucom
gs
ljmp
lcall
insl
push
lods
cltd
pop
jnp
push
stos
cwtl
mov
addr16
rep
into
inc
gs
or
xchg
and
incl
lods
cltd
bound
lret
int3
adc
imul
xchg
mov
jge
bound
out
subb
imul
xchg
sbb
mov
jg
fcmovbe
testl
stos
push
outsb
jge
mov
xchg
js
inc
sarb
stos
mov
decl
lock
dec
cmp
push
jecxz
push
push
xchg
cltd
iretw
add
aam
lret
sub
cwtl
sar
fnstenv
shlb
dec
aad
push
xchg
fidivrl
cmpsb
outsb
ret
aam
incl
jl
jmp
add
mov
sub
call
mov
ljmp
fcoms
add
test
or
jo
cli
jl
fdivrp
jle
sahf
and
xor
pusha
into
mov
popa
insb
pop
or
int
out
clc
ljmp
cmp
cmp
rcrl
xor
gs
and
jnp
mov
decl
jnp
cmp
jno
cmp
mov
popf
stos
dec
aaa
jno
inc
mov
jns
outsb
test
bound
mov
mov
insb
roll
outsl
jg
incl
dec
xor
adc
inc
dec
call
arpl
sub
mov
xor
incl
cmpsl
mov
mov
push
pop
imul
add
leave
inc
or
cmp
fcomip
jmp
mov
inc
inc
sahf
pushf
out
sahf
xchg
icebp
xlat
fsts
rcll
cld
jg
cmp
push
xchg
xor
and
icebp
lcall
add
mov
jb
push
out
mov
pop
mov
jmp
mov
or
hlt
inc
mov
sbb
adc
stos
ds
dec
mov
jg
pop
loopne
push
lods
mov
in
or
mov
mov
xchg
es
push
and
mov
aas
sub
lods
movsb
outsl
cmp
push
push
jo
incl
cltd
xchg
and
outsl
mov
mov
in
mov
cmpsl
or
outsb
push
stos
add
mov
aaa
lcall
xchg
movsl
ja
sub
mov
add
inc
test
pop
xor
adc
fsubrl
into
fistps
test
cwtl
lcall
add
stc
push
aad
xchg
xchg
push
sbb
cmp
fcoms
lods
xor
sub
jl
insl
add
ljmp
pop
fst
fsubrs
mov
pop
mov
mov
fsubrs
mov
sahf
jge
sti
into
push
ret
aas
xor
jmp
sub
nopl
inc
rcr
cmp
inc
orb
incl
fs
int
pop
mov
or
popf
push
cmpsb
xchg
and
call
pop
add
push
andb
pop
cmp
leavew
adc
insb
mov
scas
es
mov
bound
dec
sub
pop
ret
xchg
mov
fldl
sub
decl
sbb
scas
add
pop
sti
xchg
dec
mov
fists
jbe
in
xchg
jb
insl
pusha
jno
fmull
jmp
cld
std
and
xchg
jg
add
rorl
dec
js
ljmp
js
incl
decl
push
cmp
insb
bound
xchg
add
xor
sbb
ljmp
add
lcall
int
mov
cmp
insl
cmp
mov
pop
add
xor
pop
jle
xchg
std
adc
ret
mov
pop
push
xor
movsb
lea
jmp
mov
test
lods
mov
insl
notl
rol
cmp
cmp
ljmp
jo
mov
inc
pop
add
mov
push
mov
inc
es
jl
sbb
jg
decl
pop
fbld
ret
xchg
and
cmpsb
sub
loopne
in
push
stos
cld
or
shlb
cmc
out
dec
fists
mov
and
in
mov
cli
test
pop
xlat
xchg
lea
call
cmp
subl
fdivs
add
sbb
or
call
test
xchg
daa
cwtl
mov
cs
addr16
shll
jae
incl
cmpl
push
inc
test
sbb
pusha
shll
sub
mov
lcall
into
movsb
xor
jecxz
dec
cmpl
andl
xor
insl
lret
int3
clc
inc
out
mul
inc
jle
ret
jmp
stos
xor
es
lods
inc
jecxz
mov
in
pop
mov
mov
sbb
inc
in
iret
jo
pop
out
insl
lea
es
fcomp
hlt
incl
shrl
stos
or
fistps
repnz
jecxz
arpl
pop
dec
cmp
stos
call
mov
push
mov
inc
mov
inc
test
lret
add
rol
xor
hlt
call
ja
mov
es
in
dec
mov
push
push
fs
sbb
movups
jmp
adc
add
lcall
clc
pop
out
cmp
sub
fiaddl
and
and
jne
aam
xlat
js
int3
std
insb
stos
shrl
movsb
orl
lcall
scas
mov
mov
push
jo
rcrb
stos
xchg
push
sti
cmp
or
je
pop
filds
fidivrl
jl
mov
xchg
xchg
imull
incl
inc
les
pop
xchg
push
mov
mov
and
fisubrs
xchg
push
push
pop
in
popa
inc
mov
jmp
call
jns
push
icebp
ss
pop
dec
adc
std
add
aaa
ret
pop
cmp
sarl
cmpsb
cmp
insb
mov
ds
dec
and
inc
pop
lret
xor
xchg
jns
stos
dec
xor
call
cmp
sub
fucom
xor
ficomps
ss
sbb
xor
xor
mov
jmp
inc
sahf
jae
daa
mov
pop
mov
push
in
jns
ficompl
lods
xchg
push
daa
repnz
cld
mov
push
test
in
adc
sar
pop
cmp
pop
jb
fwait
sub
rcrb
rcr
lock
jnp
push
ja
cmp
icebp
pop
and
lret
idiv
jg
adc
iret
loop
jp
test
xchg
arpl
stc
mov
cltd
xor
push
ds
jmp
jmp
icebp
push
pop
cltd
push
outsb
loop
jge
lds
pop
leave
aad
pop
mov
hlt
add
mov
push
out
movsw
jbe
mov
clc
aas
pop
roll
pusha
inc
dec
out
cmpsl
sbb
ljmp
xor
aaa
push
dec
int3
pop
je
popa
and
push
test
push
sbb
lods
pop
pop
punpckldq
scas
xlat
fcmovnbe
or
imul
cmp
popa
insl
mov
push
jmp
fistps
aaa
or
lock
jbe
xor
sbb
loop
pop
pop
jmp
or
jo
roll
dec
iret
sti
jmp
adc
rcll
data16
cmpsb
cs
jnp
int3
mov
xor
lcall
add
shl
data16
ljmp
je
sti
add
rorl
je
lock
shrl
mov
pop
aaa
mov
lcall
sbb
push
dec
jnp
xlat
adc
addr16
sub
into
daa
xchg
add
jg
inc
fdivs
lcall
mov
movsb
pop
add
call
lods
jg
jecxz,pt
leave
or
pop
movb
stos
mov
loop
hlt
shl
dec
xchg
shr
jo
sbb
jge
mov
push
pop
rcrb
push
ret
rolb
or
scas
imul
imulb
call
add
mov
mov
push
lret
push
aas
add
cmpsl
dec
fnstcw
cmp
mov
aas
dec
sbb
jle
mov
xchg
dec
xchg
push
xchg
xor
sbb
and
sub
mov
call
in
xchg
dec
test
pop
test
filds
mov
insb
pop
rcr
imul
outsb
clc
jp
cwtl
clc
mov
fsubrl
mov
js
daa
fdivr
je
pop
mov
fidivl
pop
loop
movsb
sub
mov
jge
xor
xchg
xchg
inc
jg
outsl
xchg
mov
cld
jg
mov
mov
push
inc
jmp
aam
mov
mov
les
jecxz
fbld
push
and
dec
xor
mov
add
cli
adc
in
mov
ja
xchg
adc
clc
pop
sbb
lods
stc
jne
fdivrs
adc
mov
inc
xor
xor
adc
test
add
xchg
mov
jmp
jbe
lcall
clc
out
shlb
ret
xchg
pushl
and
icebp
in
xor
rcrb
mov
mov
aad
xchg
add
fwait
pushl
pusha
subl
and
mov
sar
ja
jmp
inc
dec
lods
add
xchg
lods
cmp
ret
in
jp
incl
insl
aad
sbb
dec
popa
mov
push
mov
repz
sub
jg
cmpsl
sub
in
pop
push
cmp
push
jne
shll
cmpsl
imul
mov
paddb
into
push
inc
jge
sbb
aad
pop
or
aas
cli
sub
jo
jecxz
xchg
pop
aaa
cmc
dec
sar
fcomip
repz
mulb
mov
dec
filds
push
sar
xor
inc
xchg
cli
jg
fnstsw
xchg
sbb
cmp
sbb
mov
inc
rcl
mov
out
repnz
mov
xor
loopne
mov
test
das
sbb
bound
loop
mov
int
das
push
xlat
mov
je
and
mov
cmp
jmp
xchg
scas
ljmp
scas
fmul
sbb
push
fistpl
jo
cmp
daa
ljmp
insl
xchg
push
fistpl
sbb
neg
fwait
sbb
subl
popf
dec
lock
mov
call
icebp
into
jb
xlat
dec
push
pop
or
lock
idivb
adc
fs
aad
xchg
ud0
jns
in
jecxz
mov
mov
inc
repz
vdivpd
and
out
imul
icebp
call
pop
dec
inc
dec
add
out
movsb
insb
jbe
or
int
aas
fldenv
jb
test
mov
xchg
mov
in
mov
lcall
rcll
or
dec
pop
enter
inc
aas
stos
mov
addr16
sub
ret
lock
jmp
ds
arpl
mov
int
xor
jecxz
incl
add
insb
mov
lea
sbb
xor
ret
shll
cli
add
call
xchg
popa
push
ss
out
insl
lods
mov
mov
and
ss
test
fldcw
push
mov
mov
xchg
test
or
xchg
push
fsubrl
pushl
test
mov
test
and
cli
sbb
scas
jnp
push
pushl
jnp
decl
push
mov
daa
mov
xor
fs
loop
mov
add
pushl
imul
cmc
dec
ret
fnsave
pushf
in
int
hlt
mov
pop
hlt
call
call
xchg
xchg
pop
and
xor
and
jbe
fcomip
decl
cmp
xchg
cltd
dec
cmp
fcoms
jge
xor
std
out
cli
loope
icebp
mov
divl
or
mov
jecxz
and
sub
pushl
ss
sub
les
adc
and
in
xor
test
pop
mov
int3
outsl
clc
mov
push
sub
sarl
push
inc
sbb
jno
jecxz
jb
adc
cltd
stc
lret
test
pop
sbb
jge
mov
fdivs
lret
incl
dec
mov
push
xchg
outsl
xchg
out
mov
es
decl
fisubs
cmp
and
stos
adc
dec
pop
in
mov
lock
decb
pop
andl
enter
scas
stc
dec
into
sahf
aaa
sahf
dec
mov
mov
fmul
sbb
mov
xchg
insb
jmp
mov
cmp
sti
mov
fmull
push
mov
push
adc
adc
push
inc
into
dec
sub
data16
lret
lock
jmp
add
je
int3
loopne
std
or
jle
pusha
mov
mov
sbb
int3
xchg
fstps
stos
movsl
loopne
cld
adc
xchg
mov
jg
sahf
sub
imul
pop
or
in
dec
test
sahf
pusha
out
cli
jmp
push
cmpsl
sbb
dec
data16
add
call
aam
pushl
xlat
addr16
cmp
rclb
jb
int
test
mov
cwtl
in
pop
or
incl
xor
lret
inc
cmp
insb
frstor
xchg
pop
ss
aaa
ss
mov
jg
cli
pop
divl
pop
loopne
jecxz
xchg
xchg
or
cmp
test
mov
push
mov
call
push
jbe
aas
call
mov
lods
sbb
pop
add
fdivrl
divl
mov
jg
incl
out
xor
adc
adc
call
in
in
jnp
jne
fdivs
repz
lret
stos
ss
jo
jne
rol
sub
or
je
pop
add
lcall
add
sbb
inc
sti
and
test
in
clc
lcall
xor
mov
jge
es
lods
dec
xchg
ds
shlb
clc
dec
addr16
dec
mov
cmpsl
mov
add
mov
dec
lea
out
jmp
jge
je
sbb
pop
dec
add
popf
pop
leave
add
xchg
scas
inc
outsb
dec
jb
bnd
stos
ljmp
sahf
stos
out
data16
int3
cwtl
adc
ja
movsb
push
cld
sub
sbb
sbb
ss
add
ljmp
mov
mov
xor
mov
mov
bound
out
lret
mov
mov
fbld
fimull
push
pop
data16
jae,pn
jg
rolb
pop
and
popf
ljmp
les
and
call
ljmp
insb
adcb
cld
ljmp
leave
std
adc
sbb
push
shrb
jns
inc
jbe
call
sub
pop
sbb
cmp
test
mov
cltd
mov
and
inc
pop
imul
dec
mov
pop
mov
mov
enter
lods
and
inc
lds
scas
xchg
ficomps
dec
enter
pushl
cmp
adc
xor
jg
rolb
scas
xchg
cmpsb
inc
out
stos
adc
pop
ljmp
jmp
cmp
aam
pop
fisttps
mov
inc
sub
or
ljmp
or
lea
add
lahf
aam
sbb
loop
sbbb
ljmp
push
mov
lods
aaa
push
mov
push
ljmp
sbb
incl
sub
push
pop
das
pop
jno
sbb
mov
arpl
rcrl
popl
pushf
mov
push
cmp
add
push
sub
repz
adc
fstps
mov
jmp
mov
out
arpl
sub
lret
adc
shrb
pop
ljmp
pushf
push
xchg
aad
xor
js
pop
in
dec
xchg
sub
push
ret
push
mov
lret
lcall
incl
push
clc
bound
cmpsl
cmpsb
mov
xor
jns
jmp
jge
mov
and
test
or
adc
popf
cmpsb
in
adc
call
push
lock
test
jne
jmp
fs
xor
xchg
shlb
cs
ljmp
fstl
xchg
aad
fidivrs
bound
mov
push
sub
addr16
ja
mov
sub
mov
lds
push
sbb
hlt
ja
add
sbb
enter
dec
popa
pop
cld
nop
and
jg
xor
incl
push
hlt
repnz
ret
cld
jl
sbb
adcl
lcall
pushl
mov
and
dec
dec
push
and
mov
cltd
jb
pop
jbe
clc
pop
loop
push
ret
ror
xor
dec
jg
jl
test
test
les
call
mov
pushf
jmp
pop
jb
jns
fdivr
mov
push
fs
mov
push
adc
sub
push
or
cmpl
imul
adc
push
xchg
addr16
aaa
mov
and
ljmp
lret
imul
insl
adcb
mov
imul
or
ret
decl
aaa
lret
scas
mov
or
mov
sub
cmp
cmp
lcall
pop
stos
jg
mov
mov
mov
adc
enter
dec
mov
call
dec
jae
outsl
pop
mov
sub
fisttpl
inc
aad
add
in
cmpsb
pusha
xchg
jle
negl
lods
pushf
add
mov
cmpsb
outsl
xchg
enter
jmp
jne
inc
mov
incl
or
cld
imul
in
mov
daa
push
enter
in
enter
jb
dec
data16
and
outsl
int3
jo
aaa
leave
ss
mov
mov
dec
xchg
mov
dec
adc
xchg
and
int
popa
es
fs
mov
lcall
push
jb
sub
xlat
mov
add
in
jg
outsb
arpl
jg
or
xchg
sbb
je
sub
in
mov
and
inc
mov
lcall
cmp
or
test
mov
sti
decl
mov
arpl
pusha
adc
lahf
cs
sub
inc
adc
lock
testb
and
lret
in
scas
pop
push
push
dec
decl
aam
aas
inc
dec
test
rorl
add
rcll
cmpsb
pushl
jg
sub
mov
negl
sbb
movsl
pusha
inc
ret
rcrb
loopne
ds
insl
movsl
push
sti
pop
outsl
push
adc
fnstsw
leave
sbb
mov
outsl
mov
sub
xor
pop
lcall
outsl
push
shrb
xchg
decl
sub
scas
jl
push
shll
mov
cmp
in
mov
or
pusha
movsl
pop
bound
cmp
push
orl
ljmp
fcoms
pop
mov
pop
loopne
sub
cs
fs
nop
dec
out
enter
call
mov
or
outsl
pushf
mov
daa
aaa
es
decl
aas
mov
and
mov
addl
addr16
faddp
cmp
stos
ds
sub
clc
inc
loop
gs
jmp
out
xchg
mov
jp
orb
lret
jg
jg
mov
out
stc
push
in
clc
stc
or
pushl
push
movsl
adc
incl
dec
out
cwtl
insb
out
mov
testl
outsl
clc
ljmp
add
test
mov
in
ret
cmp
pop
and
pop
jmp
jp
sub
imul
imul
clc
jno
sbb
popa
test
ds
jmp
dec
inc
lock
cs
orb
or
cmp
sqrtps
inc
fcomip
xor
add
fcos
push
cmpsb
cltd
cs
lret
xlat
xchg
adc
fimuls
cmp
pop
cld
pop
or
hlt
mov
test
subl
lret
fdivrl
push
icebp
fists
pushf
push
pop
cltd
loopne
push
pop
push
push
xor
or
xchg
push
sub
jecxz
sub
in
inc
mov
call
cltd
pop
fldz
rcrl
xchg
test
clc
decl
adc
addr16
stos
xor
mov
out
jmp
sahf
test
sahf
adc
mov
xchg
pop
push
xchg
xchg
xchg
mov
jno
test
gs
leave
mov
mov
dec
cmp
mov
repnz
or
leave
sbb
cld
incl
inc
popf
mov
xorb
mov
xor
sub
andb
mov
xchg
jns
in
dec
mov
adc
hlt
out
clc
mov
mov
icebp
out
repz
adc
inc
jb
incl
cs
shlb
cltd
das
pop
xchg
enter
or
adc
lcall
decl
mov
mov
sub
xor
inc
xlat
mov
decl
jb
and
and
push
mov
xchg
addr16
fildll
scas
sbb
test
cltd
cmc
lods
dec
mov
jmp
dec
lods
rcr
test
aaa
add
push
or
mov
pop
mov
ljmp
xstore-rng
cmpsl
inc
movsb
test
xchg
push
adc
push
movsl
pop
imul
out
aam
cmpb
fisttpl
stos
mov
inc
mov
out
out
decb
stos
fstps
mov
xchg
lods
jecxz
sub
mov
xchg
lcall
mov
int3
js
iret
addr16
ljmp
into
sbb
mov
adcb
ficomps
push
outsl
popa
push
daa
outsl
pushf
outsb
lret
decl
or
pop
sub
bound
mov
out
cmp
lea
cmpsl
rcr
sub
loop
decl
jmp
push
dec
cmc
nop
cmp
pusha
sub
sub
push
adc
jb
adc
jmp
div
gs
out
aam
lcall
stc
mov
je
add
cmp
add
pop
sub
int
jnp
mov
shr
mov
jg
dec
test
mov
es
insl
repnz
dec
dec
in
pop
mov
xlat
mov
xchg
test
dec
xchg
scas
ds
cmp
loope
cmp
dec
fisubrl
mov
push
ljmp
sbb
cmp
rclb
sbbb
loopne
push
leave
inc
std
cmpsb
mov
fidivrs
and
pop
call
sbb
in
dec
add
xchg
inc
xchg
mov
mov
fmull
cwtl
fwait
cmp
pop
mov
jnp
pop
jecxz
cld
xchg
mov
ljmp
dec
pop
xchg
not
adc
mov
leave
aas
shrb
shrl
jle
les
xchg
mov
inc
insb
int
jl
insl
fs
mov
dec
push
das
mov
out
inc
repz
cmp
add
sarb
fildl
lods
shlb
scas
xor
or
dec
clc
sub
outsl
adc
incl
and
fidivrs
je
xor
addb
dec
inc
ss
mov
imul
incl
jmp
dec
dec
mov
or
ds
incl
push
mov
inc
popa
pop
mov
movsl
xchg
fs
ss
cmpsb
add
mov
xchg
loopne
and
fsubrl
les
fidivrl
sbb
icebp
fcompl
mov
ljmp
xor
jne
ret
shlb
fdivrp
pushl
mov
lahf
aas
in
mov
outsb
insb
and
dec
movsb
cmp
sub
cmpsl
inc
decl
in
std
or
pushf
jae
outsb
fstl
lods
mov
cli
jg
pop
imul
mov
mov
arpl
rorb
sub
mov
pop
imul
sbb
das
sbb
in
or
outsb
or
jecxz
sub
pop
andb
cmp
fs
push
nop
push
or
outsb
dec
pop
in
ljmp
movsb
clc
lods
pusha
sbb
mov
sub
xor
les
lcall
std
dec
out
outsb
clc
dec
std
sub
and
sbb
ss
sbb
jg
inc
icebp
ja
lret
test
pop
std
decl
xchg
mov
in
jnp
xor
stos
sub
xor
fldcw
cli
adc
mov
mov
sbb
mov
loop
dec
subb
call
orb
fistpll
sub
or
mov
incl
push
out
lret
dec
mov
mov
inc
les
loope
xchg
hlt
mov
jb
mov
mov
mov
pop
incl
leave
mov
insb
repnz
adc
mov
call
jmp
fstpt
shll
mov
repz
ljmp
rcll
decl
and
adc
push
and
cmp
xchg
test
mov
sbbl
loop
incl
lret
sbb
jne
aam
ret
pop
bound
jmp
mov
inc
inc
daa
sbb
xor
hlt
loope
daa
cmp
mov
pop
jg
outsl
adc
popf
adc
cld
cli
mov
fimull
add
cmp
xchg
cmp
rorl
lods
outsl
push
ds
sbb
sar
jnp
jge
add
xchg
or
int
xchg
jle
fstpl
ficompl
jg
mov
lcall
or
mov
mov
adc
and
pusha
cld
mov
lds
xchg
pop
inc
cs
jg
sbb
jo,pt
and
shrl
js
sbb
add
lahf
pop
jmp
xchg
out
sub
test
pop
in
jo
cmp
lock
dec
mov
stos
test
les
inc
pop
mov
and
lea
mov
push
pop
or
inc
mov
push
pop
stos
fwait
pop
xchg
insl
sbb
shl
jg
repnz
test
push
mov
out
jp
cli
mov
movsb
jbe
adc
je
cli
aad
sbb
sar
sub
shll
std
dec
add
inc
out
cwtl
cmp
adcl
hlt
in
ss
and
out
sub
sahf
mov
cmpsb
cmp
lea
adc
gs
push
jnp
xchg
dec
mov
cmp
outsl
cli
aad
and
fidivl
imul
dec
mov
pop
xor
call
add
jp
je
jno
push
ror
mov
stos
loop
scas
aas
cmpsb
lret
xchg
sahf
es
mov
ja
mov
add
mov
ret
data16
pushf
jno
cld
call
jns
cmpl
shll
or
mov
ret
or
cmpsb
cmp
ja
pop
push
js
sarb
loopne
add
sub
rcll
mov
lret
xlat
pushl
cmp
in
dec
xchg
mov
outsb
jmp
mov
add
ljmp
movsb
outsb
sbb
xchg
push
jle
pop
adc
push
cmpsb
bound
push
shl
call
mov
push
xchg
test
xlat
es
cmp
xchg
mov
jo
ljmp
xor
les
ja
mov
lods
xor
mov
jp
call
loopne
push
std
push
pushl
call
dec
mov
stc
add
loope
inc
pushf
cmp
mov
ljmp
iret
insb
jmp
pushf
fistl
add
enter
add
insl
pushl
pop
mov
lea
out
or
lcall
adcb
ds
mulb
cmp
leave
out
aad
sub
repz
iret
mov
jmp
std
mov
fistpll
dec
xchg
pop
adc
push
scas
loopne
js
xchg
dec
into
xor
push
push
mov
call
subl
xrelease
insb
mov
roll
inc
fs
in
sbb
push
and
fsubrs
pushf
sub
xor
fmuls
enter
pop
and
pop
mov
inc
fs
cli
ljmp
rol
sub
out
cmpsl
add
inc
xchg
add
sbbl
inc
jae
mov
xchg
add
fisubs
push
mov
sub
pop
inc
mov
lock
call
mov
lods
stos
rcrb
or
jle
repz
imul
test
mov
inc
subb
vsqrtsd
cmp
dec
xor
sub
mov
std
incl
push
xchg
pop
mov
inc
add
daa
in
cwtl
negb
cmp
ja
fs
fidivrs
cmp
stc
sub
dec
pusha
cmp
dec
push
inc
jno
xchg
out
popa
or
add
int
and
cmpsl
sarb
mov
call
faddl
cmp
cld
push
scas
push
mov
mov
jmp
adc
fucomp
mov
call
ljmp
jmp
dec
xchg
icebp
xor
decl
lods
xchg
jecxz
jns
adc
pop
daa
pop
jnp
mov
testl
gs
imul
cltd
adc
push
add
sub
fld
push
jge
sbb
jae
pop
push
push
into
pop
fwait
fildll
add
aam
mov
add
out
cmp
jae
mov
push
call
test
or
shlb
fcomi
or
add
out
dec
leave
movsl
pop
mov
lds
jmp
mov
popl
push
xor
rcrb
out
adc
pop
xor
or
js
nop
and
fmull
dec
ljmp
xchg
mov
pushf
push
mov
xor
cwtl
ljmp
push
orb
cld
dec
xlat
sub
mov
in
pushf
xor
repz
cmc
rolb
jl
xor
xchg
insb
dec
arpl
mov
pushf
inc
or
popa
jnp
pop
std
mov
mov
sbb
mov
inc
xor
ss
test
mov
push
dec
push
cmpsb
mov
jne
movsb
out
dec
or
push
sub
inc
xor
lock
jmp
or
inc
bound
inc
cmpsl
mov
std
fbstp
stos
sbb
repz
cmp
pop
rol
push
and
dec
movsb
pushf
outsb
lods
out
cmp
xor
cld
mov
cmp
call
js
cwtl
test
gs
lock
incl
movsl
mov
or
rorb
ja
jmp
ljmp
sti
movsb
jmp
rolb
and
mov
ret
scas
out
movsb
ljmp
out
out
shrb
mov
cmpsl
dec
gs
sub
sub
fsubrs
sub
inc
pop
cld
incl
je
icebp
ret
dec
xor
add
adc
xchg
pop
or
push
shr
ds
pop
ljmp
leave
ljmp
push
xor
add
xlat
shrb
movsb
push
or
mov
mov
push
out
jnp
out
insb
push
fdivl
outsb
cmp
jo
push
enter
pop
pusha
decl
cmp
insl
jmp
test
xor
mov
js
xchg
fdivrs
mov
lcall
pop
test
js
cmpsb
lods
pop
mov
ja
and
jae
mov
pushl
push
jg
fnstenv
movsl
mov
xor
lods
shll
lea
sub
aas
bound
mov
pop
mov
cmp
sbb
leave
and
sub
jge
in
and
add
lcall
test
ss
push
mov
mov
bound
dec
iret
fcoml
cld
jg
mov
pop
nop
jae
mov
push
push
sbb
sub
cli
xor
adc
sbb
fs
mov
stos
iret
sub
sbb
adc
push
fcoms
je
dec
int
xchg
imul
inc
add
das
clc
stc
shrb
push
imull
je
aas
hlt
loopne
adc
mov
or
daa
cld
movsl
stos
fcomip
dec
xchg
jno
insb
pop
je
mov
nop
pop
inc
adcb
mov
sar
ljmp
add
pop
pop
rorl
loope
xlat
push
jmp
mov
mov
pop
dec
outsb
mov
repz
in
add
pushl
adc
aaa
aaa
stos
ds
adc
notb
outsb
sbb
jg
cmp
incl
mov
enter
or
push
int
or
mov
or
call
jle
call
pop
jle
outsl
inc
je
push
inc
xchg
jmp
xchg
or
incl
cmp
lock
sarl
out
lods
stc
fidivrl
ja
and
push
push
xchg
add
clc
push
adc
ret
or
adc
inc
popf
sbb
cwtl
and
adc
push
push
lods
or
fs
cmp
or
cmpb
sub
mov
dec
sub
add
push
lcall
sub
in
cli
adc
push
add
jmp
subb
and
dec
jbe
out
repz
adc
fs
jg
inc
jle
xchg
sub
xor
mov
movsb
sub
push
je
mov
imull
mov
cld
push
scas
xlat
ja
test
push
jmp
fcomip
incl
pop
cmp
pushf
mov
or
repz
cmp
pushl
cwtl
loop
ja
mov
rcl
sahf
orl
mov
test
or
lods
cld
jg
mov
int3
popa
mov
scas
jne
sub
inc
sbb
push
adc
adc
dec
push
inc
movsl
call
or
sub
call
clc
mov
enter
inc
or
popf
dec
je
sar
lcall
pop
ljmp
pop
daa
and
mov
test
sbb
push
cmp
cli
lcall
sbb
jp
xlat
jno
add
jecxz
out
lcall
repnz
sbb
dec
xchg
add
call
nop
nop
icebp
shrl
mov
jecxz
mov
pushl
dec
je
mov
fistps
fldcw
cltd
imul
xor
cld
dec
sub
xchg
ret
mov
cmp
inc
cwtl
push
shrl
dec
dec
adc
push
movsb
aas
sti
movsb
outsl
pop
mov
xchg
lcall
jmp
in
mov
dec
adc
sbb
adc
adc
mov
sub
lods
add
leave
je
push
rclb
mov
push
mov
dec
or
lds
cmpsb
jb
fldl
clc
stc
push
mov
xor
out
arpl
mov
xchg
movswl
call
outsb
xchg
into
sbb
xchg
sbb
dec
ljmp
ds
jno
hlt
push
sbb
call
idivb
loopne
xchg
ja
xor
lret
adc
sti
test
shrb
xchg
je
negb
cmc
mov
addr16
mov
xor
pushf
mov
lock
inc
mov
and
stos
push
jo
xorl
mov
decl
clc
push
sub
mov
mov
xchg
fisubs
scas
jae
stos
cmp
or
call
cltd
test
mov
decb
ss
jbe
adc
push
push
popa
mov
dec
clc
add
adc
pop
sub
pop
popa
ja
repnz
push
jge
or
dec
pushf
out
js
hlt
push
stos
xchg
into
es
cmp
jle
incl
data16
pushf
in
jae
dec
inc
sub
sti
pop
push
icebp
frstor
lcall
outsl
mov
cmp
lds
daa
les
les
ret
ficoml
lea
ds
dec
pop
and
pop
add
and
imul
jp
mov
mov
fistps
clc
call
xchg
xchg
mov
push
xchg
cmp
add
scas
aas
lahf
mov
adc
jg
cmpsb
xchg
fs
or
sub
adc
xchg
and
mov
decl
das
adc
jmp
in
xor
and
lods
int3
lds
adc
xchg
mov
rorb
push
push
pop
and
and
not
rcrl
cmp
adc
mov
add
les
negb
pop
imul
dec
jg
add
js
int3
mov
inc
and
std
pushl
pusha
test
or
push
setns
int3
sub
aad
movsb
push
mov
xor
sub
movsb
and
mov
pop
jbe
push
pop
outsl
cltd
movsb
cmp
cmpsl
mov
xor
outsl
clc
out
clc
shll
add
js
popf
je
sar
mov
pop
xchg
sarl
mov
das
jo
cli
insl
pop
out
pop
insb
mov
mov
jo
dec
inc
add
incl
xor
in
fcoms
inc
ljmp
xchg
fsubrs
sub
cld
loope
mov
mov
push
mov
lods
lcall
adc
std
mov
or
adc
pop
sbb
dec
push
ret
iret
nop
leave
mov
mov
adc
popf
xor
fs
pushl
mov
mov
lods
add
inc
add
movsb
pop
xor
mov
call
sarl
mov
and
push
mov
aad
shlb
out
adc
mov
in
int
das
push
xchg
dec
mov
js
cltd
fiaddl
mov
xchg
pop
mov
jge
incl
cmp
iret
xor
imul
or
inc
orb
cmp
or
cld
call
movsb
scas
mov
sbb
inc
flds
jle
ret
push
decl
js
pop
push
push
hlt
movsl
cmpb
mov
pushl
in
rcr
add
clc
fcomps
xchg
push
dec
fisttpll
pusha
mov
hlt
call
add
imul
jecxz
addr16
xchg
mov
and
jmp
out
lcall
cmp
lds
lcall
fdivrs
subb
or
xor
fs
mov
push
shlb
lods
out
ficomps
sbb
repnz
adc
mov
fwait
in
inc
dec
jae
xchg
decl
push
jmp
test
fdiv
stos
push
and
pop
and
decl
adc
mov
push
cmp
sbb
sub
pushf
pop
es
rorl
inc
xchg
lcall
outsb
leave
and
arpl
cmpsl
lcall
xor
ret
movsb
push
jl
fs
decl
sbb
shl
shrb
in
adc
enter
push
xchg
cmp
jmp
rolb
cwtl
xor
ret
cmpsl
add
sub
xchg
in
icebp
pop
adc
jns
cmp
sar
xchg
out
pusha
inc
iret
inc
mov
and
push
mov
fsts
lds
iret
dec
lock
sub
xor
vpshufhw
scas
xor
ja
xchg
loope
decl
push
out
or
es
or
imul
cmp
pushl
test
push
jp
or
mov
insl
jg
sahf
sahf
dec
orb
push
add
test
in
ljmp
shrl
imulb
icebp
icebp
frstor
es
aas
orb
lcall
adc
inc
inc
sarb
push
repz
and
inc
mov
jne
xchg
add
inc
cmp
in
mov
cld
inc
add
mov
cs
shll
iret
push
cmpsl
imul
dec
push
and
ja
fists
xchg
stos
and
dec
arpl
inc
iret
push
ja
les
mov
incl
and
cmp
and
lods
hlt
data16
push
mov
jbe
jg
xorl
int3
stos
cld
adc
xchg
mov
cmpsl
mov
aad
fidivrl
mov
adc
adc
das
pusha
inc
mov
imul
push
add
jg
jmp
push
out
jecxz
jl
pop
add
divb
out
push
mov
cmpsb
ret
mov
nop
jno
xlat
or
mov
cmp
lods
xor
es
ljmp
inc
dec
arpl
xor
mov
xor
xchg
fdivr
xorb
jg
sti
mov
pushl
cld
repnz
movsb
sahf
les
mov
call
sbb
xchg
adc
lcall
stos
lea
add
shrl
sbb
jmp
iret
dec
push
adc
or
sbb
rcr
call
dec
outsl
sub
mov
mov
or
addb
sti
pusha
cld
outsl
and
jnp
dec
push
pop
in
mov
jmp
stc
sub
xchg
mov
jmp
xor
movsb
popf
int3
ja
adc
push
and
inc
inc
stos
outsb
pusha
pusha
jg
decl
mov
es
pop
fsubrl
jbe
imul
out
dec
sbb
cmp
leave
rclb
add
dec
mov
nop
xchg
out
mov
gs
int3
mov
aad
jmp
call
repnz
jbe
adc
shll
orl
fdivr
call
lods
aaa
inc
arpl
fs
push
sar
inc
adc
insl
mov
leave
test
jmp
jnp
lret
fcomi
mov
das
sub
data16
jmp
jns
cs
decl
lock
ret
rclb
mov
out
outsb
ja
das
fucomi
fistpl
lcall
dec
jmp
and
out
mov
pop
jge
fwait
lock
mov
negl
or
stos
ljmp
movsl
and
pop
pop
sub
mov
mov
stc
mov
cmpsb
push
insl
lock
gs
mov
dec
dec
aam
iret
pusha
pop
mov
hlt
cmc
test
sub
cmp
icebp
sbb
setno
sbb
sub
andb
dec
pop
iret
clc
lcall
xchg
outsl
shrl
inc
pop
inc
xlat
inc
mov
icebp
xor
push
pop
dec
push
jecxz
mov
scas
orl
dec
xchg
jae
int
and
adc
ficompl
insl
pop
fcoms
or
test
cmp
pop
imul
and
dec
or
mov
sbb
xchg
shll
inc
pop
gs
pop
test
mov
aad
ljmp
pop
and
add
call
cmp
mov
jle
push
loopne
or
movsb
repnz
aam
into
xchg
sub
arpl
mov
lret
mov
sti
mov
pop
or
jg
lods
aam
das
adc
repz
rcll
adc
std
add
cmp
test
jmp
pop
mov
add
adc
mov
jmp
mov
cld
or
scas
js
mov
int3
push
imul
mov
dec
incl
mov
jg
pop
aaa
xor
ret
lods
mov
pop
ljmp
pop
mov
ss
add
setae
pushl
and
iret
sub
iret
mov
inc
xlat
insl
mov
ljmp
or
in
add
inc
movsl
cwtl
add
sbbl
cwtl
push
fsubrp
jnp
inc
sbb
cld
cmc
jmp
inc
dec
icebp
pushf
je
fadd
or
mov
inc
inc
lret
fildll
cltd
sub
add
stc
push
dec
icebp
test
jo
mov
cmpl
xchg
xor
fildll
mov
lahf
xor
push
sub
jmp
xchg
pop
cmp
bnd
sub
stc
pop
ret
add
cmpsb
jns
rcrb
cmp
enter
decl
push
or
sub
insl
loopne
xor
add
fiadds
push
loopne
decl
xchg
and
vmovaps
xor
lret
pop
pop
aad
pop
ja
fwait
out
clc
pop
clc
shlb
inc
rcrl
mov
or
add
repnz
jmp
jmp
out
mov
and
dec
incb
mov
loop
aaa
shrb
push
scas
clc
call
popf
jno
std
es
fidivl
sbb
jg
ljmp
inc
cltd
push
test
mov
inc
inc
lea
cmpsl
xor
imul
jmp
and
cmpsb
and
test
hlt
lds
jge
mov
and
adc
mov
ret
mov
cwtl
and
sub
repz
jmp
je
push
mov
subb
mov
int3
stos
adc
call
bound
pop
and
xchg
inc
nop
push
pop
mov
scas
adc
mov
jg
jg
shlb
inc
int3
xchg
ficoml
stos
xchg
mov
inc
std
call
lds
imul
loop
sub
insl
subb
xchg
pushl
and
ja
lods
pop
mov
jge
das
pop
push
cmpsl
mov
inc
lcall
push
test
les
mov
stos
adc
jne
push
push
cmp
call
push
push
or
push
insl
imul
inc
insb
jge
cmc
cmp
mov
sbb
mov
xchg
decl
repnz
stos
lahf
repnz
jns
sub
jecxz
pop
mov
xchg
shlb
int3
loop
in
xchg
incl
pushf
ficoml
add
into
xchg
loop
add
dec
lahf
fcoms
ljmp
mov
in
pop
jns
inc
ja
pusha
jg
xchg
je
fmuls
idiv
call
scas
cmp
js
push
icebp
aad
add
rcrb
inc
pop
je
cli
push
ljmp
xchg
rclb
push
test
mov
adc
ljmp
je
mov
aad
mov
push
out
xlat
and
pop
outsb
mov
add
incl
daa
lret
jae
loop
pop
adc
fidivrl
xchg
or
jmp
add
push
mov
mov
or
mov
fistps
mov
std
cmp
jle
pushl
std
push
mov
test
in
add
jno
cwtl
adc
shl
fsubrl
push
xor
ljmp
jmp
dec
dec
cmp
subl
jns
out
inc
xchg
adc
rclb
insb
add
imul
decl
xchg
pop
std
xchg
xchg
push
pop
push
icebp
adc
mov
add
mov
les
jge
loope
or
stos
lcall
insb
dec
mov
testb
call
in
jge
lcall
cmpb
fidivs
js
pop
inc
loope
mov
loope
loopne
add
pop
xor
testl
cltd
adc
or
jmp
pop
mov
xchg
imul
pop
cmp
jns
or
rcr
pavgb
cmp
mov
fcoml
out
std
lock
push
pop
push
cltd
or
adc
fnstcw
mov
out
lds
push
xor
jge
and
add
fbld
fsubrl
enter
scas
into
fs
dec
ret
sbb
clc
mov
call
mov
xchg
negb
scas
dec
cmp
xchg
aaa
mov
roll
adcl
add
lcall
fnsave
int3
cwtl
sub
inc
lods
dec
cs
jmp
pop
inc
mov
dec
rcl
imul
push
cmova
adc
or
incl
daa
jp
ljmp
cli
sbb
or
xchg
adc
cmpsl
int3
ficoml
mov
cli
insl
mov
and
xchg
mov
lds
in
fcmovu
icebp
jmp
ret
repz
inc
xchg
rorl
or
mov
ljmp
lock
rorl
testl
ffreep
nop
add
mov
and
push
stc
sub
jmp
movsb
push
mov
or
mov
lods
loope
test
pop
or
mov
xlat
sub
adc
fldenv
mov
lcall
mov
adc
push
aam
std
xor
sahf
lds
fdivrp
shrl
lock
inc
out
sti
scas
popf
ss
sbb
sub
lcall
hlt
pop
std
fwait
call
jmp
push
leave
popa
mov
mov
mov
idiv
outsl
decl
imul
rcrb
push
out
dec
push
xor
mov
adc
incl
adc
into
popa
fcmovb
stos
adc
bound
iret
pop
repnz
mov
call
mov
lods
mov
sbbb
jg
mov
add
out
pop
aam
or
sub
push
out
orb
call
pop
in
fst
or
xchg
rol
mov
popf
mov
sub
push
pop
bound
fcomip
jmp
dec
imul
cmp
outsl
pop
xorb
jb
sti
ja
dec
call
sub
jno
nop
rclb
fbstp
and
inc
adc
mov
cli
sub
xor
decb
lea
push
pop
popa
out
ss
lahf
stos
inc
inc
fstps
nop
cmp
push
pop
pusha
inc
std
fbstp
cmp
sti
xchg
mov
xlat
push
jmp
mov
sub
pop
push
test
faddp
sarl
lret
rcrl
adc
ljmp
stos
shr
xor
jmp
divb
fsubrs
inc
scas
mov
xor
ljmp
inc
les
dec
mov
push
push
add
sub
adc
dec
rolb
adc
jg
loop
jb
in
dec
pop
es
push
sarl
mov
in
jno
and
decl
xchg
mov
dec
packuswb
jge
pop
or
jle
sub
pushl
cmp
cmp
jmp
loopne
lahf
ja
sbb
inc
js
xchg
push
or
lcall
push
pop
jo
dec
fwait
or
mov
insb
cltd
arpl
push
daa
sbb
and
call
push
jo
js
decb
push
stos
mov
leave
push
pop
and
out
jo
mov
stos
outsl
mov
jmp
pop
add
jnp
fisubrs
sbb
inc
out
fisttpll
ljmp
mov
jmp
rclb
dec
jle
popa
dec
stc
in
inc
mov
cli
int3
bound
iret
incl
clc
fxch
rol
jge
xrelease
mov
push
lret
out
push
fbld
int
cld
incl
adc
mov
imul
in
orb
sbb
xchg
mov
xlat
enter
sbb
ret
dec
xchg
mov
mov
pop
xchg
call
cld
ljmp
popf
push
xchg
ret
ror
cmpsb
leave
stos
in
loopne
mov
sarl
jmp
dec
add
outsl
push
jb
cmp
sbb
xor
pop
xor
aad
mov
cli
dec
jbe
pushf
arpl
int3
stos
imul
inc
imul
cmp
push
and
inc
push
es
dec
pop
les
mov
xchg
fbstp
dec
idivb
sti
dec
dec
jle
ret
jg
jp
in
insl
cmpl
stos
es
mov
jmp
hlt
mov
jg
setbe
lret
nop
frstor
inc
or
lret
aad
pop
push
mov
adc
pop
nop
sar
insl
xchg
ja
dec
fwait
outsl
push
sbb
fidivrs
ljmp
sbb
mov
cmp
push
jnp
js
mov
outsb
addr16
cmp
and
aad
fildll
xchg
int
leave
orl
mov
mov
fiadds
aad
dec
pop
cmp
push
call
mov
mov
mov
lods
cmp
adc
dec
fbld
xchg
add
std
call
ja
add
lea
mov
lea
add
fcomip
ljmp
js
adc
mov
xor
dec
or
pushl
ds
fstpl
add
cmp
inc
in
adcb
xor
lret
mov
jmp
sub
mov
cmp
inc
mov
ljmp
inc
adc
jnp
cmc
fcomip
jp
xor
scas
sub
movsl
in
mov
sub
bound
mov
int3
mov
jne
push
es
daa
cs
sbb
mov
inc
subb
ljmp
or
inc
hlt
push
push
add
adc
and
imul
add
ljmp
cmp
cmp
pusha
push
add
xchg
lret
sbb
sub
push
sbb
adc
sar
stos
jnp
dec
orl
and
aaa
pop
stc
movsl
outsl
bnd
add
insb
mov
decl
test
imul
cmpsb
xor
pop
mov
loop
jae
repnz
jp
incl
enter
js
cmc
push
mov
xor
nop
enter
in
cmp
stos
mov
inc
pop
inc
inc
aad
mov
ret
cwtl
hlt
lret
push
jo
rcr
inc
sub
call
jecxz
push
nop
sbb
addr16
lea
cmp
sbb
dec
ret
push
data16
fnsave
and
cmp
mov
std
jo
dec
clc
cmp
cli
sub
fnstenv
in
ud1
add
pushl
inc
xchg
sahf
xorb
out
lods
jns
mov
into
aas
rolb
inc
mov
inc
add
in
pop
mov
enter
mov
and
inc
lcall
mov
cmc
incl
sbb
xchg
imul
movsb
out
add
and
lcall
mov
aas
inc
je
jle
sub
pushl
mov
pop
inc
cmp
push
jae
shlb
mov
push
pop
shll
loopne
ss
jmp
pusha
fs
test
sbb
pop
ja
push
ret
add
pop
push
jbe
mov
decl
andl
add
cmp
inc
xor
adc
adc
jmp
stos
sub
jns
xor
sbb
stos
push
inc
xlat
stos
ljmp
btr
jb
mov
push
push
mov
iret
and
gs
or
jg
xchg
stc
mov
xchg
cltd
shl
aaa
inc
stos
sti
outsb
push
les
xor
dec
or
std
incl
pushl
addr16
and
andb
inc
les
jae
cmp
test
loopne
mov
cmp
inc
jp
outsb
jl
shlb
imul
xchg
or
jmp
xchg
xor
xchg
fiadds
push
push
mov
cli
jl
arpl
push
jg
pop
push
ljmp
cmpsb
jecxz
xchg
xor
inc
jnp
sub
aad
push
cwtl
mov
cmpsb
mov
xchg
xchg
hlt
jnp
pop
mov
mov
out
or
lods
xorl
jnp
std
ja
fcmovb
iret
ret
cmp
decl
add
jbe
mov
lahf
xchg
push
cmpsl
cmp
outsb
lahf
pop
fsubrp
jno
incl
push
xor
inc
add
dec
testb
ss
sti
fisttpll
pop
and
sub
adc
mov
repnz
and
ljmp
cmpsl
cmp
daa
pop
cmp
sub
call
fildll
adc
adc
cmpsl
shrb
inc
int
testb
ljmp
xchg
repnz
arpl
loop
lock
pop
fwait
out
int3
mov
mov
push
and
in
adcb
incl
fisubrs
mov
leave
inc
xor
or
xor
xorb
pop
xchg
adc
push
push
jnp
decl
jne
push
jne
enter
lods
cmp
pop
loopne
pop
or
das
ljmp
dec
xor
mov
xchg
inc
add
sbb
cltd
pop
std
insl
and
mov
and
test
or
cs
mov
sbb
call
and
test
mov
sub
hlt
sbb
scas
ss
dec
cmp
adc
xor
cld
arpl
jle
xchg
dec
adc
sub
stc
fdecstp
lret
jne
adc
arpl
dec
jg
das
cmp
dec
jmp
xor
call
ja
jno
push
inc
adc
cli
mov
incl
movsb
mov
mov
pop
lds
enter
jne
in
scas
subl
mov
sub
incl
jne
shrl
and
loope
add
pop
push
push
mov
lock
xchg
push
xor
les
mov
push
repz
jno
lcall
or
mov
pop
int
xor
xor
or
mov
popa
je
push
push
mov
leave
push
xchg
and
add
mov
sbb
aam
out
sbb
and
adc
xchg
fldl
scas
enter
out
pushl
cmp
or
fwait
das
pop
mov
das
ret
leave
dec
ds
dec
mov
or
push
es
mov
pop
rcll
movsb
arpl
gs
pushl
and
int
push
addr16
mov
pop
and
ror
call
jg
adcb
arpl
and
mov
lods
pusha
mov
xchg
add
mov
ror
gs
hlt
mov
ret
mov
movsl
adc
and
push
sbb
outsl
test
sbb
test
xor
negl
xor
fildll
fnstcw
adc
addr16
jno
addr16
xchg
or
cli
out
inc
mov
test
xor
out
xor
add
in
mov
adc
or
lahf
subl
call
cld
jl
inc
jle
divps
and
mov
aam
mov
fcomip
pushl
imul
faddl
iret
hlt
daa
lds
push
push
sbb
cmpsb
add
std
in
cmp
push
insl
pop
xchg
dec
mov
mov
arpl
call
pop
cmpsb
lds
xor
stos
dec
int3
pop
cltd
mov
lods
cmp
call
inc
out
xchg
stc
movsl
cmp
sub
dec
fs
mov
add
add
bound
add
out
in
lcall
insl
popf
mov
loope
into
push
fimull
and
pushf
mov
ljmp
rcl
ss
cwtl
mov
push
mov
inc
pushf
xor
xchg
ja
addr16
push
cmp
out
icebp
scas
mov
lret
cltd
stos
mov
out
mov
clc
mov
lods
pop
cmc
dec
fistl
imul
sub
daa
ljmp
in
lods
jle
decl
lock
push
shll
jge
push
fimull
lahf
pushf
push
xchg
pushl
adc
jne
lock
pop
das
sub
and
jnp
pop
scas
pop
scas
ljmp
push
clc
outsl
add
out
jns
iret
mov
leave
test
dec
aad
mov
jmp
rclb
push
scas
mov
test
scas
mov
push
popl
js
xor
aad
outsb
inc
leave
in
fisubs
enter
sar
call
leave
out
lret
les
or
mov
aam
hlt
pop
icebp
incl
pop
xchg
inc
jmp
xor
mov
lock
xchg
adc
decl
outsb
sahf
sub
js
mov
je
orl
fildll
inc
and
ljmp
cli
or
push
or
mov
add
call
mov
and
inc
cld
mov
xchg
sbb
sti
inc
sti
inc
cmp
jp
add
ljmp
mov
jns
fsubr
das
lods
in
xchg
jl
popa
lods
pop
scas
div
push
in
lods
mov
mov
out
sub
cmp
lds
mov
and
les
add
jae
pop
cmp
mov
addb
xchg
in
and
pop
call
pop
mov
dec
sub
cli
les
xor
jecxz
ljmp
push
or
mov
test
cmp
loopne
popf
jo
xor
lret
subl
sbb
xor
incl
cli
shlb
pop
ss
mov
call
insl
cwtl
pop
jo
fadd
ja
inc
cmpsb
xchg
adc
std
call
incl
stos
mov
dec
push
pop
out
daa
iret
cmp
scas
xchg
cmc
mov
push
dec
incl
or
icebp
sub
push
in
and
mov
int
cmp
push
out
out
das
mov
cld
or
pop
inc
in
sub
repnz
pop
rorb
in
test
adc
mov
shrb
faddl
xchg
popf
cmpsb
mov
aas
sbb
lcall
aad
dec
fcomps
xor
mov
mov
incl
pop
add
jp
ja,pn
pusha
inc
pop
pop
or
sarb
out
xchg
aad
ljmp
sbb
jbe
pop
cld
test
mov
ret
das
clc
scas
das
out
inc
pop
aam
sub
pusha
cwtl
imul
mov
ljmp
adc
xchg
movsl
ja
cmpsb
inc
jb
and
and
hlt
add
int3
mov
push
fists
jnp
cmpsb
dec
dec
lods
mov
xchg
mov
dec
sub
decl
xchg
inc
jb
or
mov
sbb
sbb
mov
gs
and
gs
dec
fisubrl
cmc
mov
mov
decl
sub
jmp
xor
mov
repnz
cli
or
scas
jge
mov
enter
mov
mov
push
push
dec
mov
jg
mov
cld
inc
cmpsb
movsb
add
pushl
cld
into
xor
ja
bound
mov
mov
adc
ljmp
xchg
and
imul
push
mov
adc
enter
cld
and
lcall
sub
adc
dec
xor
sub
outsl
sbb
mov
int
fcompl
xor
pop
adc
into
jecxz
mov
sub
ja
adc
inc
in
cltd
popf
xlat
fdivr
call
or
rorl
repnz
nop
in
or
jo
adc
jp
decl
xor
jno
inc
push
iret
lods
gs
rol
loop
in
jl
xchg
xor
mov
clc
in
insl
decl
out
pop
into
pop
and
cs
into
mov
inc
nop
sub
ljmp
xor
push
sbb
cmp
and
sub
jg
mov
inc
cltd
fwait
cmp
decl
rolb
pop
xchg
mov
sahf
sub
sub
das
pop
push
mov
pop
pusha
rorb
lcall
sahf
repz
lcall
sbb
cmp
cmp
inc
out
clc
lcall
out
aam
je
cmc
jne
in
movsb
add
stos
enter
pop
mov
xor
iret
stc
mov
mov
pop
inc
leave
mov
or
in
iret
outsb
ret
es
arpl
push
mov
decl
xor
out
mov
hlt
cld
fmul
mov
cli
jo
cmpsb
mov
decl
ret
xchg
mov
pop
fwait
loop
int3
notb
cmpsb
mov
sub
jg
jns
pop
popa
imul
push
mov
jp
sahf
movsb
cmp
jmp
dec
ffreep
jbe
test
mov
pop
mov
mov
fs
jo
shlb
jae
decl
scas
pop
scas
or
repz
bound
std
jae
int3
adc
decl
push
inc
imul
ret
jmp
popf
mov
adc
mov
inc
push
mov
decl
and
pop
push
stc
xor
jne
push
inc
pop
dec
push
pop
or
cmp
sti
rcrl
lods
jmp
mov
pop
filds
dec
jbe
push
pop
nop
int3
and
out
sbb
aam
add
mov
push
call
fisubrs
pop
scas
xor
cmp
mov
inc
lret
sti
adc
sti
jmp
repnz
and
jne
popa
sti
aaa
lods
push
nop
and
in
clc
ja
jo
push
add
jg
fsubrl
gs
adc
lcall
das
aaa
pushf
repz
cmp
dec
lcall
scas
cmp
aad
fnstsw
inc
lods
mov
sub
stc
dec
lret
scas
test
jnp
js
movsl
jne
movsb
mov
cmc
add
sbb
and
inc
cs
mov
les
sbb
frstor
sbb
push
movsb
fwait
popf
push
loope
and
cmp
xchg
xchg
dec
call
ljmp
sub
outsl
pushf
push
xchg
cmp
push
outsb
pop
dec
push
test
movsl
out
aaa
pop
mov
aad
std
jmp
test
fldt
jmp
jb
pop
jg
sahf
adc
push
sbb
cli
lcall
add
mov
cmp
pop
pop
icebp
pop
bound
comiss
sar
ljmp
in
lods
pop
int3
imul
jle
or
ret
jecxz
xchg
negl
daa
std
push
push
xchg
adc
stc
addr16
test
cmpsl
mov
mov
cmp
aaa
cmp
jmp
fwait
xchg
xor
xor
test
mov
mov
jnp
cmpsl
mov
push
or
push
aam
nop
fidivrl
mov
sbbl
idivl
jg
mov
lcall
sarl
push
sbb
xchg
aaa
fidivrl
sbb
push
lcall
push
mov
and
sub
push
mov
js
sbb
scas
lods
cmp
idiv
pushl
insb
sbb
adc
fbld
push
jmp
push
std
mov
nop
xchg
mov
aam
cwtl
push
or
imul
dec
mov
jno
scas
xor
xor
cmpl
stos
lahf
xchg
pop
stc
ret
jmp
sub
sub
fldt
sbb
ljmp
jb
mov
out
xorl
jg
lds
or
inc
aas
xor
fnsave
into
test
ljmp
int3
incb
cs
xchg
in
push
addr16
push
inc
cmc
test
pop
imul
and
incb
pop
popf
inc
fmulp
adc
inc
popa
dec
push
mov
cli
aad
mov
inc
loopne
jmp
hlt
mov
add
outsb
dec
lods
es
inc
call
jl
push
mov
pop
and
and
or
cmp
push
mov
incl
aam
data16
xchg
inc
fsts
mov
cltd
mov
call
insl
pop
xchg
pushf
imul
xor
je
fcmovbe
jb
test
rclb
sbb
aas
pushl
loope
call
sub
stos
xorl
pushf
sub
adc
jbe
pop
cmpsb
and
jle
ss
neg
push
sbb
icebp
mov
xchg
jo
lret
dec
sub
xchg
lcall
jmp
mov
bnd
popl
sbb
cmp
push
jno
add
das
shrb
scas
stc
lret
lods
in
or
aaa
cld
lcall
outsl
adc
xchg
cmpsl
adc
adc
xchg
ret
add
xchg
dec
mov
add
mov
cmp
cmp
ds
mov
xorb
scas
stos
push
decl
sarb
xchg
and
dec
sub
div
push
mov
test
mov
add
ljmp
inc
mov
push
cmp
pop
ret
popa
test
lret
int3
cld
hlt
ljmp
mov
inc
in
or
dec
scas
dec
sti
sbb
rcrl
test
jmp
jle
xor
repz
popa
jge
add
sbb
jle
aad
imull
xor
hlt
jbe
stc
mov
decl
add
mov
outsb
xor
out
mov
xor
mov
mov
lds
mov
or
mov
das
in
xorl
pop
push
pop
loop
neg
pop
incl
jb
inc
test
xchg
add
pop
cmp
and
test
ljmp
sar
mov
cmp
leave
push
mov
sub
mov
dec
or
sbb
adc
hlt
add
or
mov
pop
pop
vpminub
in
hlt
lcall
xor
ret
push
fucom
dec
jbe
sbb
bound
push
mov
adc
pop
int3
mov
fistps
adc
jae
dec
jecxz
jno
and
lret
sub
imul
jg
loop
call
jle
fstpl
shll
lahf
jae
ds
xor
ljmp
mov
fsub
push
cmpsb
jno
dec
push
sub
into
orl
sub
lcall
decl
xchg
inc
push
mov
cmp
or
aas
repz
sbb
ljmp
or
cmc
or
pop
pushf
mov
inc
inc
fmul
out
std
dec
mov
or
fildll
xchg
fisubrl
cltd
mov
inc
push
ret
ret
arpl
lea
dec
jp
add
repnz
push
das
sub
sub
fistpll
or
xor
inc
fnsave
pop
clc
inc
xor
jns
insl
cmpsl
into
add
cmp
pop
fistps
mov
enter
add
push
loope
xor
jo
or
sub
and
xchg
test
call
cltd
jns
sub
enter
fidivrs
cmp
inc
xchg
pop
popa
push
dec
popf
lods
sub
lret
aaa
leave
clc
out
xchg
xchg
outsb
adc
popf
test
jmp
pushl
fdivrl
jae
pop
jb
das
push
lea
mov
and
lcall
mov
mov
cwtl
movsl
sub
jbe
and
sti
jge
iret
mov
cltd
mov
add
test
mov
stos
inc
add
push
pop
add
cmp
mov
cmpsl
push
andb
add
iret
movsb
mov
dec
jbe
inc
xchg
loop
mov
cwtl
xchg
xor
scas
jp
call
add
cmp
pusha
sbb
cmpsl
adcl
stc
fnstcw
jmp
cld
mov
adc
in
jle
test
add
jno
xorl
dec
ret
xchg
xor
and
decl
push
cs
sbb
mov
fcoml
and
xor
cmpsl
adc
xor
dec
pop
xchg
insb
push
mov
ja
hlt
pop
out
scas
jmp
gs
xor
dec
outsb
mov
faddp
outsb
push
cld
jg
mov
dec
scas
mov
jb
push
test
int
dec
xchg
icebp
adc
mov
movsl
mov
in
lcall
insb
test
sub
mov
or
cwtl
jg
call
xor
xlat
test
inc
cmp
jmp
repz
out
and
mov
dec
leave
xchg
cli
lcall
add
mov
pop
adc
lret
xchg
sahf
mov
out
mov
mov
and
cmp
std
scas
pop
xor
mov
fdivrs
add
add
fs
mov
je
jns
fisttpl
lock
call
jne,pt
repz
cltd
jle
in
fisubs
aam
fstl
std
mov
or
jmp
dec
jno
outsb
in
pusha
int
mov
lcall
mov
sbbl
cmp
in
clc
cmp
scas
cli
xor
rcll
mov
sub
call
adc
sub
jg
int
mov
add
arpl
push
outsb
inc
mov
call
inc
test
jmp
imulb
push
int
push
sub
sub
loopne
sub
js
ret
inc
cltd
pop
fstl
cmp
lcall
daa
movsl
movsb
dec
jne
cmp
pushl
cmc
pop
or
sub
mov
xchg
scas
push
inc
push
mov
lcall
pushl
mov
pop
jecxz
sbb
push
ret
stos
mov
jae
push
add
or
in
cwtl
pop
mov
dec
pop
push
lcall
cmp
push
test
pop
and
jmp
xor
jp
pop
lret
gs
mov
dec
lea
enter
add
xor
fbstp
cli
xchg
int
inc
add
pushl
mov
pop
rcll
jle
adc
xlat
call
mov
lods
push
mov
fistpl
sub
lods
sbb
push
jle
sbb
test
repnz
test
xor
adc
dec
cmp
xchg
pop
fistl
mov
outsl
mov
jmp
and
mov
scas
imul
lea
adc
add
dec
inc
decl
xchg
mov
and
jg
mov
sub
or
pop
jle
rolb
pop
lret
push
xlat
cmp
xchg
sub
call
cltd
push
nop
push
inc
lea
xor
mov
pop
jp
mov
sub
mov
mov
inc
push
and
aad
add
push
push
mov
dec
inc
fistpl
scas
cli
lcall
dec
in
inc
cmpb
lds
pushf
sahf
iret
mov
mov
xor
cmc
dec
sarl
mov
cmp
movsb
and
imull
sbb
stc
sub
lcall
into
mov
jmp
jns
fisttpl
arpl
xchg
lcall
mov
jbe
lcall
sti
aas
jp
or
nop
movsb
into
jge
pushl
std
call
fadd
lret
mov
inc
dec
int3
dec
aam
mov
push
fbstp
std
fstps
xchg
push
dec
cmp
rcrl
ljmp
sub
imulb
pop
adc
xor
in
push
pop
fisttps
inc
sbb
cmp
outsl
cmpsb
mov
push
leave
sub
push
movsb
xor
std
movl
movsb
xchg
jg
incl
rclb
nop
sti
sbb
loopne
mov
rcrb
pop
das
repnz
dec
lcall
cli
sahf
mov
loopne
negl
pop
dec
lds
pop
xchg
jmp
jg
inc
out
dec
dec
or
call
cmp
xor
ja
cmp
dec
or
cmp
jmp
enter
jle
dec
mov
mov
xchg
mov
sub
popa
aaa
std
pop
dec
or
call
loopne
js
mov
testb
mov
jecxz
mov
iret
gs
or
sti
ds
data16
mov
loop
jne
mov
inc
and
jge
mov
cld
jle
movsb
call
cmp
mov
movsl
dec
fmuls
mov
lcall
ljmp
scas
stos
rcll
cli
lret
call
enter
lods
and
jne
cmp
jmp
dec
push
sbb
fsubs
das
sbb
mul
call
ja
or
aad
call
jp
xor
adc
or
push
cs
pop
push
leave
sbb
arpl
jg
fsubrl
int
imul
in
xchg
pop
xchg
sbb
in
sub
xor
sub
ds
decl
das
leave
xor
and
jl
xor
fildll
pop
mov
xlat
cld
fsubp
iret
dec
push
sti
mov
cs
push
ljmp
jo
xor
out
incl
test
xor
fstl
push
inc
sbb
add
das
fmuls
push
es
and
mov
sti
pop
xor
fisubrs
insl
and
pop
jmp
mov
mov
xlat
test
xor
and
decl
adc
push
xchg
fs
cmpxchg
xchg
mov
cmpsb
movsl
pop
int3
mov
sub
add
std
inc
icebp
fsub
mov
imul
out
lret
xchg
pop
dec
fstps
cs
shlb
call
xlat
cwtl
in
data16
in
nop
mov
cmp
movsb
inc
ss
imul
inc
int3
incl
loopne
dec
sti
loope
pop
call
xchg
push
jmp
mov
xchg
mov
lods
imul
pop
cmp
inc
out
ss
adcl
sbb
aam
lods
mov
push
shrl
sub
inc
mov
add
cwtl
bound
loop
xor
pushl
aas
aas
jne
in
sarl
push
cmpsl
js
and
lea
sub
inc
add
pop
pop
lods
mov
loop
aam
jmp
sub
pushf
push
popa
test
andb
je
scas
xor
jmp
mov
xchg
sub
pushf
add
sbb
ds
mov
sahf
push
cmpl
int3
jg
call
add
jnp
and
cmp
int
cmp
decl
xchg
and
jno
in
cmp
sbb
gs
mov
jg
cltd
cltd
outsl
mov
ljmp
inc
stos
out
mov
ret
xor
out
test
or
mov
jge
xor
test
adc
sbb
mov
xor
in
insl
bound
mov
inc
xor
daa
pop
mov
aad
sahf
jp
data16
dec
jo
xchg
adc
dec
sub
jns
mov
cmp
arpl
mov
sbb
cmp
mov
pushl
les
mov
ret
ror
fwait
cmpsl
ja
sub
cs
cmp
jno
xor
loop
cmp
cld
sub
pop
mov
pop
cmp
std
jmp
mov
psubsw
test
add
icebp
cmp
ret
outsl
sub
ljmp
imul
add
sub
xchg
xchg
pop
lea
out
mov
push
js
in
sti
jg
decb
data16
test
rcll
daa
xchg
mov
aaa
jg
ljmp
call
cltd
dec
push
dec
ljmp
data16
pop
lret
movb
test
incl
daa
imul
and
or
or
nop
cmpsl
inc
and
call
lcall
je
cs
cltd
or
mov
insl
lock
mov
inc
sbb
out
lahf
test
decl
nop
or
xor
mov
ficoms
out
popf
enter
aas
pop
int
pop
sub
push
xor
mov
push
mov
pushl
loop
scas
push
inc
add
xchg
fildll
pop
xchg
bound
pushf
ljmp
mov
push
and
jecxz
leave
clc
rcrl
jne
insb
cmp
scas
sub
int
mov
sahf
sbb
aam
mov
xlat
adc
xchg
push
or
push
insl
aaa
std
jg
lret
fiadds
mov
mov
dec
adc
adc
pushl
ljmp
fwait
aam
and
adc
mov
pop
fcomps
imulb
ljmp
je
push
test
pop
fmuls
cmp
mov
mov
jl
adc
inc
mov
sbb
pop
xchg
or
sub
push
and
push
inc
aad
jbe
adc
cmpl
movsl
xchg
out
dec
scas
sub
cwtl
ljmp
imul
mov
das
pop
mov
jmp
pushl
std
jg
jnp
daa
mov
sub
mov
hlt
dec
pop
cltd
mov
hlt
pop
mov
lret
sub
imul
sahf
xor
pop
popf
sub
and
sar
lret
push
incl
mov
pop
test
cs
add
push
xor
or
test
or
fistpll
cmp
ljmp
jp
and
inc
mov
shrl
movsb
mov
jle
jmp
mov
dec
cltd
sub
lea
gs
shlb
mov
iret
push
in
pushl
aam
dec
pop
pushf
sbbl
push
push
mov
xorb
dec
arpl
mov
sub
jae
jl
cld
push
imulb
adcl
es
jno
call
loop
shr
cmp
sub
xor
das
mov
pop
decl
movsl
lock
mov
fsubrl
pop
decl
xor
inc
adc
inc
rcll
adc
sbb
ljmp
ret
jg
push
fdivs
fisubrs
and
fisttps
ljmp
mov
fcmovnbe
lcall
enter
inc
std
jg
lea
jmp
sub
push
jbe
sahf
into
das
addr16
mov
inc
jg
mov
ljmp
mov
ljmp
clc
dec
rcrl
sbb
scas
jecxz
mov
dec
push
push
push
jnp
adc
push
fucom
push
fwait
inc
mov
std
int
dec
and
and
rclb
inc
jne
push
push
cwtl
out
aam
or
aam
sarb
leave
mov
clc
fcomip
mov
sbb
mov
dec
or
xor
nop
adc
movsb
jns
js
jp
dec
cmp
int3
lcall
mov
stc
repnz
mov
std
xor
mov
push
lock
push
mov
cmpsl
lret
cmp
repnz
sbb
lods
sbb
inc
inc
pop
mov
scas
sub
popa
fs
xchg
scas
lea
and
in
clc
xchg
mov
popf
call
dec
xor
mov
xor
sti
dec
aad
stc
pop
insl
mov
lods
pop
mov
ret
js
and
mov
dec
pop
dec
pop
icebp
ljmp
adc
push
das
xchg
popa
int
shll
nop
add
out
jo
movsl
addr16
hlt
call
inc
ljmp
test
rcrl
in
enter
add
pop
xchg
incl
cld
and
bound
andb
adc
mov
cli
inc
test
jg
call
push
inc
bound
adc
xor
mov
or
imul
add
mov
add
cmpsb
subl
out
shll
dec
mov
outsl
iret
cmp
mov
jne
adc
pop
outsl
mov
jns
stos
jmp
jl
inc
pushf
push
or
dec
test
rol
jle
pusha
gs
jmp
sar
ds
hlt
pushl
mov
iret
cmp
rorl
in
sbb
sar
sbb
mov
lods
popf
scas
popf
scas
jge
stos
jns
test
jbe
mov
push
flds
test
mov
ljmp
out
outsb
adc
test
inc
cli
ja
cmp
enter
decl
hlt
lcall
mov
xor
ret
add
das
push
fistpl
or
aas
jle
mov
es
lcall
sti
add
push
mov
lcall
jae
decl
jae
fldl
inc
es
lret
sub
jbe
or
cltd
mov
mov
test
xor
imul
in
cli
pop
repz
pusha
test
xchg
pop
cmp
push
pop
xchg
adc
jno
ljmp
inc
rolb
add
xchg
repnz
and
movsl
sahf
push
out
mov
sub
inc
insb
loope
pop
fisubrl
test
mov
pop
enter
mov
add
lcall
test
std
cmp
or
ret
cmc
ljmp
lcall
mov
loop
mov
ret
leave
jb
mov
and
arpl
pop
jle
dec
dec
incl
mov
inc
adc
pop
lcall
xchg
jecxz
xor
or
push
pop
mov
fadds
in
mov
sarl
decl
cmp
cmpsb
icebp
jg
out
push
call
sbb
dec
mov
inc
pushl
dec
add
xchg
xor
push
mov
int
inc
push
cmp
aam
loopne
ljmp
mov
stos
inc
mov
ffreep
shlb
sub
mov
hlt
aad
mov
out
sahf
add
sti
fnstenv
jno
mov
push
popa
push
mov
or
cwtl
call
and
mov
mov
sub
and
xchg
mov
out
js
xor
arpl
mov
ds
dec
das
sub
or
adc
push
jmp
shrb
pushl
cli
push
outsb
dec
pop
imul
shlb
jle
push
and
lcall
scas
cli
cmc
imull
push
or
ljmp
sub
imul
adc
lds
inc
ret
inc
cmp
loope
add
lret
in
pop
icebp
jmp
xor
jbe
mov
mov
outsb
lret
das
int
push
orl
and
mov
push
out
pop
adc
mov
iret
out
ret
sub
ss
xchg
jne
xchg
mov
sub
xchg
pushl
ss
dec
ret
addr16
inc
xor
cmc
sbb
fwait
and
add
cld
xchg
ljmp
push
xor
test
push
and
mov
insb
sub
lds
hlt
sbb
mov
rcrb
shrb
mov
rcrb
push
sbb
dec
lock
daa
push
and
out
sub
fldt
cmpsb
sbb
push
stos
jge
into
je
aad
out
add
sbb
jge
push
push
mov
and
dec
mov
jl
mov
mov
incl
lret
int
lahf
rorw
aam
or
test
aas
push
loop
pushl
jmp
cmp
cld
and
icebp
lods
clc
adc
imul
inc
stos
int
fcomi
loop
decl
mov
adc
mov
aam
dec
jmp
fnstsw
outsl
rcrb
xchg
inc
dec
jle
mov
push
std
loopne
mov
xchg
dec
in
out
out
lods
mov
inc
and
loop
push
ret
or
cli
jnp
pop
lret
in
shrb
mov
inc
decl
in
lods
dec
sub
dec
mov
mov
ret
mov
mov
or
mov
sbb
aam
arpl
incl
push
loop
mov
lea
in
test
hlt
mov
loope
dec
repnz
add
inc
adc
and
fcoms
pushl
mov
incl
adc
lcall
xor
call
push
std
test
insl
je
pop
pop
ret
fnstsw
popf
mov
and
out
add
xlat
jp
and
adc
xor
outsb
sti
pushf
mov
sub
ds
outsl
cli
decl
jo
mov
push
sbb
decl
and
cmp
mov
jnp
ljmp
addr16
gs
xchg
std
mov
mov
mov
vmovhpd
repnz
mov
push
pop
mov
mov
jmp
pop
out
and
aaa
ja
scas
cli
jns
cmc
lret
idivl
and
iret
xor
ljmp
sbb
aaa
bnd
push
mov
sub
dec
ds
pushf
jo
push
cmp
ljmp
inc
fists
sbb
mov
stc
pusha
adc
adc
ljmp
mov
scas
stc
push
pop
add
xor
lahf
and
ds
xor
or
sub
scas
fnstcw
jae
out
cmp
lret
push
in
stos
lock
xchg
mov
scas
pop
xor
inc
push
incl
cmp
out
and
leave
add
je
push
popa
rclb
mov
cmp
decl
push
or
sbbl
xchg
xchg
lcall
inc
lgdtl
shll
clc
aaa
out
pusha
outsl
add
inc
xchg
push
fsubl
or
ljmp
add
mov
in
jb
mov
mov
inc
push
int3
ret
scas
cli
ljmp
fistps
lods
push
mov
pop
loop
xchg
repnz
into
insl
push
int
adc
aaa
mov
mov
ja
adc
call
mov
fwait
dec
cmpsb
cmpsb
adc
data16
cmp
adc
jmp
xchg
lcall
adc
ficoms
int3
adc
dec
inc
test
test
stc
jg
or
sbb
cmp
repz
mov
call
xor
sub
imul
push
add
test
xchg
js
pop
or
mov
inc
xor
push
ljmp
xchg
hlt
mov
out
add
fidivl
aam
pop
call
sbb
sub
pop
filds
ljmp
in
sub
rcll
dec
sub
sahf
adc
push
xor
loop
cmp
test
inc
js
sub
pop
xchg
add
pushl
xchg
lock
gs
push
push
lcall
sbb
pop
sti
adc
ja
mov
mov
pop
jnp
push
sub
jge
push
add
outsl
std
push
dec
inc
push
dec
subb
int
jo
sub
call
mov
loopne
and
mov
test
cmp
xor
cs
pushl
std
lcall
test
orb
sub
adc
in
add
sti
into
mov
cli
pushl
adc
push
fs
cmp
mov
mov
jmp
sub
pop
ds
cmp
xchg
ss
sti
push
icebp
shrl
jg
outsl
mov
xchg
and
shr
scas
subb
jmp
sarb
xor
and
pop
pop
pop
lods
xor
and
out
fimull
jecxz
adc
mov
mov
in
ret
dec
test
arpl
popf
ds
mov
pop
stos
in
adc
call
inc
xor
ficompl
clc
rorb
jg
sbb
mov
mov
in
xor
dec
push
xchg
hlt
stos
inc
sbb
sbb
xlat
pushl
movsb
push
mov
push
push
pop
mull
xchg
jne
xor
rcl
pop
pop
ret
notl
sub
lcall
ret
mov
adc
jb
and
inc
pop
cli
int
cmc
mov
mov
ss
mov
jg
adc
fcomip
lcall
dec
add
jl
lds
fwait
pop
push
pop
not
shlb
incl
std
jns
sbb
sarb
push
mov
mov
inc
ljmp
push
ljmp
std
or
adc
mov
lods
aas
mov
xchg
std
insl
fsubp
jg
std
and
push
loopne
orl
mov
jp
push
std
mov
cltd
sub
pop
adc
cmpsb
mov
mov
push
in
xchg
sbb
adc
xchg
ljmp
xchg
arpl
add
rolb
add
sub
sarl
popa
icebp
mov
call
cmp
movsb
fdivs
test
outsb
cmp
lcall
push
mov
daa
and
shr
or
cmp
ret
push
push
sub
aaa
add
call
push
fnstsw
inc
lret
push
ss
xlat
dec
les
shll
into
lea
cli
mov
jne
je
adc
or
cld
push
movsb
not
or
stos
jge
pushl
out
loopne
daa
jge
sbb
adc
or
mov
incl
sub
fprem1
mov
mov
mov
mov
arpl
xchg
out
mov
jecxz
ds
add
pop
mov
xchg
and
rcrl
pop
sbb
ljmp
dec
push
push
dec
mov
cltd
sti
pop
scas
rcrl
mov
lods
imul
mov
movsl
mov
mov
jae
rolb
push
xlat
push
sbb
sub
push
lea
ljmp
pop
cltd
mov
sbb
inc
fwait
sub
xchg
imul
mov
pop
mov
adcb
mov
and
mov
mov
cmp
icebp
pop
sub
jg
jg
xchg
dec
mov
lea
in
stos
neg
xor
out
and
adc
ljmp
or
test
pop
mov
fs
mov
jae
insl
call
aam
sub
inc
or
negb
sbb
icebp
ss
jae
jmp
push
mov
dec
xchg
imul
data16
jbe
dec
mov
int3
fildll
adc
nop
int3
shl
or
loopne
sti
jp
es
jae
xchg
dec
sbb
je
inc
movsb
cmp
ljmp
mov
orl
outsl
ds
cmpsl
xor
pop
outsl
sbb
decl
out
loopne
xchg
loopne
or
fstpl
sbb
xchg
leave
outsb
iret
mov
les
decl
xchg
cltd
xchg
dec
jmp
movsb
daa
cli
ljmp
test
lock
cld
mov
mov
sub
mov
and
ljmp
add
lret
shrb
es
repnz
mov
cs
and
inc
jg
lods
movhps
xor
inc
mov
mov
inc
pushl
sbbl
add
jmp
and
mov
inc
push
popf
adc
mov
pop
dec
or
cltd
arpl
xchg
sub
jne
xchg
daa
outsl
adc
pop
jmp
jmp
sub
lods
push
outsl
enter
leave
push
lcall
sub
mov
push
mov
insl
std
imul
shrl
jg
mov
jmp
dec
icebp
cmp
jb
mov
out
shlb
cli
push
push
fcmove
pusha
mov
and
and
lcall
arpl
fs
xchg
movsl
cltd
int
mov
outsb
ja
xor
les
fcmovu
addl
mov
inc
ds
or
jb
std
lcall
fadds
dec
clc
outsb
imul
push
adc
in
cld
in
ljmp
je
jp
or
lcall
lret
pushf
mov
sbb
pusha
popf
mov
mov
jmp
jns
jg
fnstcw
adc
jae
dec
test
or
in
roll
decl
ret
push
out
push
lea
mov
pop
adc
push
push
dec
fwait
cs
push
inc
mov
rolb
lahf
pop
test
jmp
xor
dec
add
push
cltd
mov
add
lcall
mov
pop
or
insb
pop
xchg
test
lcall
pop
cmp
stos
es
lock
push
ja
cs
xor
icebp
pushf
clc
lahf
mov
loope
push
ret
pop
xchg
lret
pop
inc
sti
test
in
cmpsl
imul
in
lcall
daa
nop
xchg
leave
jge
adc
jo
es
sub
mov
ljmp
push
or
pusha
add
into
out
mov
test
fildl
or
add
mov
sarl
cmpsb
or
clc
push
ss
and
call
popf
jne
nop
movsb
dec
jb
inc
push
mov
fdivr
flds
movsl
adc
ljmp
imul
jnp
mov
add
faddl
scas
jle
pop
adc
push
sbb
dec
xchg
out
push
mov
clc
fidivl
lods
xchg
mov
cmpsl
mov
pop
stc
stos
fwait
int3
xchg
call
pop
xor
adc
fs
enter
lahf
lea
sbb
xchg
dec
xor
out
lcall
rcl
dec
imul
pop
js
stos
gs
loopne
mov
cld
pop
dec
dec
call
push
xchg
test
xor
cmp
jmp
add
sub
xorb
dec
stc
xchg
mov
xchg
jmp
push
inc
icebp
adc
dec
xor
adc
jecxz
ds
xchg
jo
enter
ret
and
sahf
xchg
lcall
mov
sahf
ljmp
xchg
sahf
sti
xor
lods
ja
incl
dec
push
and
sub
mov
push
add
sub
dec
decl
pop
out
es
jmp
test
inc
fcompl
inc
ficoml
std
pop
mov
fdivp
push
loopne
xchg
pop
in
jne
mov
mov
mov
aam
call
fdivrl
aam
or
and
adc
jae
call
inc
mov
mov
imul
in
mov
dec
adcb
lcall
inc
imul
div
imul
xor
in
outsl
jns
xchg
mov
add
pusha
xor
inc
mov
loopne
lea
inc
jno
ljmp
add
cmp
lret
mov
loope
negb
out
dec
jne
dec
stos
clc
test
dec
cmc
sbb
mov
push
out
jle
pop
in
mov
jnp
outsl
cmpsb
les
incl
pop
add
and
cmp
scas
cmpb
and
mov
bound
jbe
xchg
mov
outsl
clc
incl
das
jne
imul
bswap
call
mov
jmp
popa
test
out
push
cmpsl
je
cltd
insl
or
adc
and
repnz
dec
mov
pushl
js
addr16
add
and
push
xchg
inc
and
push
fmuls
inc
stc
and
ret
mov
fisubrl
imulb
aaa
jmp
push
andl
adc
and
js
lret
mov
xchg
sti
call
sub
pop
je
xchg
hlt
in
add
pop
movsb
gs
andl
test
xchg
add
xchg
icebp
cld
fistps
push
dec
pop
stos
jno
daa
lds
ljmp
xchg
push
and
leave
popf
test
jmp
hlt
mov
lods
sub
adc
fidivrl
out
push
mov
ljmp
push
mov
clc
decl
pop
nop
adc
sub
dec
rorl
jbe
cmc
call
xchg
cmp
push
jnp
mov
loop
cmp
cmp
jbe
jae
icebp
inc
pop
idiv
mov
loopne
sub
mov
xchg
add
cmp
jmp
jmp
xchg
sbb
dec
mov
or
int
into
jge
cmpsb
rcl
loope
jbe
jg
lcall
fs
mov
xor
cmc
mov
push
sbb
rorl
cmp
movb
into
in
push
xor
stos
les
fistps
cmp
cwtl
xchg
pop
movd
ret
mov
mov
sbb
faddl
loope
add
mov
imul
popl
or
aaa
jb
jbe
in
and
jg
outsb
pop
xchg
add
das
add
cltd
fidivs
mov
jns
outsl
lcall
inc
dec
stos
xor
fmuls
adcb
xchg
lods
subb
push
adc
jg
decl
pop
out
aaa
pop
sbbb
jbe
lahf
push
loope
std
push
pushl
xor
push
ret
outsl
mov
sub
mov
int3
dec
ds
jo
lcall
xor
adc
cld
push
js
push
adc
mov
sbb
test
mov
data16
aaa
xor
ljmp
mov
scas
xchg
sub
daa
outsl
lods
inc
popf
xchg
scas
inc
stc
jmp
push
jbe
xlat
push
std
mov
stos
lcall
les
push
ds
loop
pop
dec
das
test
jno
outsl
push
push
call
fisttps
push
loope
push
ds
imul
sbb
imul
fistpl
in
lcall
cmc
jmp
mov
xor
loopne
outsl
pop
stos
in
add
mov
pop
and
rcll
cmp
adc
jmp
add
add
jno
enter
sbb
mov
xor
ljmp
decl
add
dec
mov
lahf
xchg
lcall
shr
cmp
xor
jp
inc
call
outsl
imul
push
add
sbb
out
dec
sub
xchg
pop
sar
ljmp
sahf
aam
test
lcall
add
jb
popf
das
cmp
xor
dec
negb
push
jp
jae
inc
lods
aas
pop
push
push
incl
push
jmp
ret
pop
test
sbb
jle
xchg
ljmp
mov
push
jmp
push
sbb
dec
mov
mov
sbb
push
outsl
aam
xchg
daa
mov
adcl
sahf
and
push
sbb
inc
rcrl
sbb
fwait
notb
inc
push
lock
sub
movsl
pop
fisttpll
inc
shl
add
sbb
and
push
pusha
jecxz
call
loop
popa
lods
stos
popf
out
aad
mov
sbb
dec
out
push
fnstcw
xchg
mov
mov
dec
jb
xor
mov
sarl
xchg
mov
ret
ret
jmp
inc
dec
xchg
hlt
lret
mov
iret
out
lea
mov
cli
test
and
inc
fs
pop
xchg
mov
and
xor
xlat
scas
mov
xchg
in
incl
les
push
sub
mov
adc
inc
orl
fwait
cli
icebp
shrb
ljmp
repnz
loopne
add
pop
in
ljmp
and
cwtl
stos
jg
in
inc
sbb
scas
push
mov
sbb
lcall
jbe
adc
mov
mov
test
es
stos
aad
cmpsl
stc
std
jmp
xchg
rcll
rol
mov
cltd
call
pop
dec
xchg
mov
jecxz
mov
xor
push
out
das
mov
lcall
das
stos
iret
fsubs
in
fsub
fwait
cmp
pusha
inc
adc
pop
sar
mov
push
pop
into
aad
stos
aas
stos
addr16
cltd
decb
push
call
mov
shll
ljmp
decb
mov
lret
jns
mov
frstor
dec
pop
outsl
dec
dec
nop
sbb
incl
or
push
cltd
mov
sub
lock
sbb
dec
inc
loope
fbld
je
ljmp
jp
repnz
mov
fildl
push
leave
clc
cmc
lea
jg
decl
fsubrl
imul
fstpl
mov
dec
ja
mov
clc
dec
cmp
pushl
add
sub
fwait
rorb
push
std
fxch
jp
xor
dec
or
stos
lcall
xchg
cmp
addb
repnz
adc
jl
fildl
iret
or
dec
sub
mov
imul
xchg
mov
rorl
stos
fidivrl
incl
xchg
xor
inc
iret
pop
sbb
dec
dec
cmp
mov
or
pop
loopne
imul
cld
scas
jno
sarl
sbb
lcall
sbb
mov
out
sub
lea
inc
loope
xchg
pop
movsl
inc
pop
nop
xor
ljmp
sbb
push
inc
jbe
jg,pt
in
xlat
loopne
testb
mov
cltd
push
inc
je
xor
or
fdivrl
jnp
stc
xor
adc
dec
lret
les
xchg
cltd
loopne
push
push
cs
cmpsb
mov
mov
pop
push
and
mov
call
sub
mov
cmp
cwtl
es
int
mov
in
or
and
fmull
jmp
jl
aas
popf
leave
pop
fadd
and
xorb
xchg
cmp
mov
das
lods
sti
pop
add
sbb
fwait
and
lahf
mov
stc
loopne
mov
adc
int
out
aam
or
mov
insb
enter
lods
mov
mov
decl
aam
ja
je
stc
pop
stc
lahf
loope
sbbl
jne
cltd
inc
xchg
jne
sub
mov
xchg
mov
outsb
sbb
dec
daa
push
sbb
push
and
lock
clc
jg
push
js
jp
inc
int3
mov
dec
add
ret
mov
mov
sbb
mov
gs
add
lcall
fs
dec
inc
push
mov
cltd
cmpsb
push
or
or
call
xchg
dec
test
ljmp
imull
sbb
cwtl
dec
rcr
or
jne
cmpsl
mov
sahf
ret
mov
cmp
mov
mov
addb
daa
or
xor
ja
sub
jg
popa
adc
lea
roll
or
and
sbb
fimull
xlat
es
mov
mov
mov
xor
outsb
repz
cmp
icebp
inc
sbb
sbb
shrb
mov
jo
into
and
test
sbb
sar
call
sarl
addb
lcall
push
push
jns
rclb
sti
adc
mov
push
fimull
les
push
dec
outsb
inc
repz
scas
mov
cmp
or
int3
cli
inc
daa
jbe
cmp
cmp
jl
jb
push
cltd
mov
lock
jg
fdivr
ljmp
sahf
stos
jne
and
xor
leave
xchg
mov
cld
or
outsl
fistpl
cmpl
lods
lds
leave
les
call
push
adc
fwait
cltd
and
std
imul
jno,pn
pop
rcrl
arpl
inc
out
fdivl
and
ljmp
roll
shrl
jecxz
push
xchg
rolb
push
mov
ret
jmp
or
pop
cmp
decl
mov
mov
mov
test
and
rcrb
call
out
fs
call
pop
into
jp
inc
ljmp
lret
xchg
push
lock
fdivl
xchg
pushl
xchg
pushf
int3
cmp
movsl
inc
inc
adc
jge
xchg
movsb
jecxz
xchg
xor
clc
jae
mov
xor
xlat
decl
sub
jbe
xchg
mov
and
loop
mov
sbb
daa
repz
adcb
inc
clc
repz
dec
push
mov
cmpl
pop
popa
das
mov
sar
incl
mov
pop
cmp
aad
js
ret
mov
push
stos
andl
dec
sar
mov
push
sbb
pop
or
mov
and
nop
jb
scas
test
mov
fucomp
mov
and
mov
push
xchg
lock
lea
mov
push
and
mov
xor
push
cmp
xor
jg
mov
inc
call
mov
loope
fistpl
dec
imull
call
loopne
into
jns
fdivrl
jmp
mov
mov
mov
mov
push
push
js
ret
popa
mov
inc
jbe
mov
pop
movsb
clc
cli
mov
pushl
out
pop
jge
popl
xlat
jmp
adc
iret
sub
test
popa
lods
mov
jge
loopne
cmp
lret
sti
push
xchg
punpckhbw
jg
cmp
ret
imul
mov
xor
test
and
cmp
ljmp
mov
mov
out
inc
xor
mov
out
inc
sub
mov
xchg
call
xor
fisttps
xor
mov
xchg
stc
aam
or
mov
push
dec
xchg
incl
movsl
hlt
popl
aas
fisubrl
mov
popf
jge
or
cmp
mov
mov
and
je
adc
mov
in
jnp
gs
daa
xchg
mov
clc
mov
lcall
xchg
sub
pop
repnz
clc
mov
xchg
push
shll
stc
stos
jle
scas
je
adc
idivb
out
add
mov
push
ja
push
cltd
cmp
fisubrl
inc
pop
adcb
mov
jbe
mov
xchg
push
sar
decl
adc
cmpb
inc
out
arpl
sarl
mov
inc
out
ljmp
fists
add
in
sbb
fwait
cmpsb
sbb
dec
cwtl
pop
inc
aaa
cmp
lahf
sub
push
decl
jp
fdivrp
jo
mov
sub
aad
push
lods
decl
adc
out
ret
sbb
cmc
xor
scas
xchg
mov
rol
adc
mov
push
adc
fdivs
mov
sbb
inc
nop
xchg
xchg
or
xor
stos
enter
daa
decl
mov
loopne
xor
pop
lods
das
mov
ds
loope
jle
dec
enter
jecxz
add
or
fnsave
fsubrl
jae
sub
ljmp
cli
js
sarb
insb
in
out
std
pushf
or
cld
popa
decl
daa
jmp
lea
sbb
out
lcall
xchg
cld
mov
ljmp
mov
fadds
sbb
stos
xchg
pop
ret
inc
nop
mov
pop
loope
xchg
push
gs
ljmp
insb
mov
add
insb
inc
ljmp
ficoms
sub
cltd
adc
jg
call
movsb
pop
xorb
das
pusha
daa
push
inc
aad
dec
lods
dec
lods
or
into
pusha
pop
xor
cmc
sbb
fldt
fistps
cmc
add
dec
mov
push
loope
repz
pushl
loop
inc
cmp
cmpsl
arpl
sahf
ljmp
jo
jo
jp
jg
movsb
ja
jmp
mov
jg
rcrl
dec
ljmp
scas
push
lods
in
arpl
ljmp
insb
adc
dec
lods
jge
leave
dec
jg
or
fcomip
out
xchg
dec
outsb
push
popa
lret
scas
aam
shr
xor
cmp
je
rcll
dec
adc
or
sub
pop
mov
push
lock
lea
jns
imul
pushl
dec
imul
inc
dec
les
inc
cmp
ljmp
xchg
mov
scas
sub
mov
and
subl
insb
mov
rcrl
imul
scas
shll
lds
pop
aas
add
lods
inc
lods
dec
ja
ljmp
shr
out
dec
mov
mov
int
cltd
xor
adc
hlt
pop
hlt
sbb
cmp
mov
movsl
jp
jle
add
push
das
imul
mov
pop
mov
sti
shlb
sbb
dec
test
call
insl
sbb
cmp
test
decl
xor
jbe
out
pop
stc
adc
aad
push
fwait
dec
jle
pop
cltd
icebp
pushf
pop
bound
jg
aad
pop
cwtl
mov
into
ss
jno
xor
push
seta
notl
rolb
dec
add
call
in
mov
sub
aad
xor
lcall
dec
adc
lock
outsb
jno
fcomip
cmp
mov
std
inc
icebp
test
add
cli
xor
fcmovnb
dec
mov
decl
or
lods
push
inc
adc
addl
mov
es
push
aam
repz
cmpsl
jmp
leave
je
loope
mov
jmp
daa
lcall
inc
cs
decl
lock
mov
mov
jp
sbb
or
stos
mov
out
mov
int
adc
sbb
stos
xchg
mull
stos
jnp
insl
mov
lahf
sbb
enter
jl
test
add
decl
xchg
adc
dec
idiv
add
mov
inc
push
mov
sub
das
jbe
push
fcomps
out
cli
loop
add
iret
out
push
sbb
aad
inc
cmpb
and
mov
rcrl
dec
testl
into
jb
inc
mov
cltd
inc
lock
mov
movsb
or
dec
cmp
xor
mov
sub
cmpsb
aam
cli
idiv
decb
xchg
push
mov
cltd
loop
and
je
pushl
xor
or
jle
jl
push
sbbl
das
scas
out
addr16
mov
inc
outsb
out
push
ret
frstor
jge
mov
daa
xor
xlat
sbb
ljmp
sbb
adc
jno
int
out
je
sarb
xlat
fbstp
mov
jmp
jb
loop
lea
icebp
jmp
cmp
push
lods
pushl
ds
mov
scas
cli
out
iret
loopne
lock
hlt
push
push
mov
adc
outsl
roll
inc
pushl
mov
pop
add
cmp
sbb
outsl
loop
jp
push
mov
mov
fisttps
dec
stos
mov
push
leave
push
iret
dec
or
fildll
incl
xchg
fnstsw
ret
fsubrl
stc
cltd
fldl
test
daa
cmc
in
sub
mov
inc
cli
mov
fwait
pop
lds
mov
js
scas
cmp
inc
rorb
decl
xchg
jecxz
pop
fimuls
lahf
mov
jae
push
pop
orb
test
inc
adc
out
pop
and
mov
pop
xor
mov
sar
lcall
lock
repnz
adc
fimull
fistl
bound
pushw
lea
lahf
add
lds
sbb
dec
jo
jb
cmp
cmp
or
stos
cmpsl
xchg
mov
mov
inc
add
jle
xchg
mov
in
rcll
repnz
mov
jp
fnsave
data16
cld
jg
dec
add
mov
insb
lret
or
dec
cmc
adc
xlat
pop
and
mov
xchg
in
push
or
xor
jge
aaa
mov
addr16
mov
jno
test
mov
dec
addr16
mov
add
outsl
dec
cmp
call
pushl
mov
stos
std
sub
les
shlb
and
adc
mov
fcoml
mov
shrl
lret
adc
inc
push
out
call
sbb
add
sub
int3
or
pop
sub
pop
roll
sub
call
push
inc
in
push
out
cli
cli
and
dec
test
push
shlb
fimull
jg
outsl
cmpsl
iret
sbb
add
aaa
xchg
sbb
test
and
pop
cmp
mov
pushl
xchg
jne
dec
stos
or
mov
pop
add
das
inc
push
inc
sbb
ficoms
mov
sbb
lcall
jne
bound
aad
repnz
jne
sub
and
jg
cld
or
adc
les
iret
aam
lahf
cld
jg
push
in
pop
rcrb
pop
mov
lock
div
cmc
out
out
or
or
jmp
stos
xorb
rorb
pop
xlat
hlt
rcll
cmp
cmp
fmul
lods
iret
icebp
sub
ret
les
pop
mov
notb
int
xor
sub
mov
test
adc
or
orl
xchg
test
jmp
mov
cld
out
in
push
xchg
lcall
mov
add
bound
sub
push
jecxz
or
ljmp
imul
aas
repz
clc
rcrl
mov
testl
mov
lea
pop
ds
pop
scas
pop
sbb
call
pop
jo
nop
incb
adc
dec
inc
movsb
mov
lds
rcl
ret
jmp
add
rcll
and
leave
adcl
sub
ret
lods
call
fisttpl
rcrl
pop
dec
ljmp
aaa
out
push
sbb
or
push
ss
cld
sti
notl
std
ljmp
add
pop
repnz
dec
xor
sbb
xchg
cld
decl
add
gs
mov
in
cli
adc
push
cmp
fildll
jecxz
lahf
cmp
inc
push
adc
mov
shll
ljmp
add
add
test
xor
xchg
dec
or
pop
xor
xchg
incl
dec
mov
int
ja
out
and
dec
jmp
nopl
push
adc
push
or
mov
jmp
sbb
dec
std
xor
mov
dec
jge
das
xchg
sbb
sbb
xchg
adc
push
push
push
ds
int
mov
pop
cmp
sarl
push
mov
jecxz
push
enter
in
and
adc
dec
pop
stos
mov
scas
cmc
cmp
pushl
lret
mov
jae
add
aam
mov
jecxz
adc
std
jnp
or
mov
adcl
push
sahf
in
stos
sub
ss
call
xchg
xlat
int3
add
lcall
ror
dec
push
mov
addr16
pop
sub
jmp
xchg
scas
lret
out
xchg
xor
imul
inc
jne
scas
xchg
mov
int
add
mov
fcoms
dec
mov
shl
addr16
push
push
jge
test
xchg
pushf
sbb
dec
lret
mov
push
out
arpl
add
sti
rolb
mov
mov
negb
jns
or
jae
and
xor
outsb
lea
fnstsw
inc
pop
xor
push
out
lcall
fdivs
sti
shll
mov
imul
mov
jnp
outsl
sar
sub
sbb
imull
push
stos
imul
leave
rcrl
push
dec
mov
incl
das
es
jns
pop
stos
cmp
cmp
pop
mov
mov
ret
iret
popf
and
adc
inc
cmp
add
sub
arpl
divl
fs
in
addr16
fcomip
cmp
or
std
repnz
push
sbb
in
mov
dec
sub
add
push
cmpb
and
fiadds
xchg
xor
sti
ds
jbe
mov
add
dec
decl
aam
pop
mov
sbb
add
imul
out
lock
push
or
decl
jecxz
inc
cmpsl
xchg
push
push
in
lods
data16
xchg
jmp
aad
push
jmp
pop
lea
rcll
or
xorb
repnz
jno
addb
inc
dec
sbb
add
mov
out
adc
outsb
jne
out
mov
in
jns
push
dec
push
sbb
mov
ret
pusha
push
daa
cmp
jl
xor
jp
jmp
out
flds
out
adc
sbb
xchg
call
and
sar
ljmp
jo
mov
in
enter
add
and
or
mov
mov
inc
outsl
cmp
outsl
clc
push
insb
rolb
movsb
mov
xchg
mov
aas
test
cmpsl
dec
shl
shll
cltd
adc
cli
call
and
mov
mov
addr16
hlt
cmp
push
mov
inc
je
or
fadd
gs
jbe
daa
xchg
add
nop
movsb
enter
jge
insl
push
rorb
jmp
scas
or
enter
add
test
mov
jns
adc
bound
xchg
pop
decl
inc
cli
fsubl
mov
enter
push
mov
test
sbb
es
call
adc
pusha
push
xchg
jne
fisubrs
jl
mov
lods
inc
int3
jns
cmp
dec
fisttpll
notl
decl
xor
stc
dec
rcrb
xor
mov
xchg
lcall
sbb
dec
and
sbb
push
in
sahf
and
jbe
les
lret
dec
and
or
call
scas
shlb
es
push
xchg
adc
mov
cwtl
cmpsl
bound
in
and
out
mov
push
xchg
stc
and
arpl
sbbl
subl
mov
jecxz
lcall
dec
data16
or
iret
dec
jl
jecxz
mov
mov
adc
mov
jmp
sbb
cli
and
aas
pushf
jle
mov
shlb
cwtl
gs
shlb
sahf
jns
aaa
pusha
leave
pop
xlat
imul
jle
pop
pop
mov
push
test
fisubrs
push
ds
pushl
push
outsb
sbb
push
mov
lahf
push
pop
fcompp
fs
inc
mov
dec
mov
jmp
lcall
adcb
stos
mov
inc
shl
pop
cld
xor
pop
mov
xchg
adc
jmp
xor
pop
xor
add
decl
incl
pop
sbb
lods
enter
push
add
cmp
in
inc
mov
mov
rcr
inc
mov
push
mov
push
fs
pushl
pop
adc
xor
jmp
loop
mov
add
dec
jg
ss
sbb
mov
lods
fisubrs
lcall
push
push
cmc
dec
mov
dec
or
pushl
sbb
push
lahf
cmp
jb
sbb
imul
and
dec
mov
mov
xor
jg
ljmp
out
jbe,pn
pop
push
xor
mov
xchg
push
sub
pop
mov
testl
rcrb
stos
xchg
fimuls
add
loop
sbb
lea
mov
mov
fcomip
lcall
sub
fisttps
rclb
nop
leave
mov
cmp
lock
jno
addr16
out
clc
shll
clc
adc
insb
lcall
dec
adcb
dec
mov
incl
ljmp
xchg
rcr
sub
mov
push
mov
scas
and
stos
mov
ds
std
loop
daa
push
pop
adc
push
ljmp
dec
adc
int3
out
lock
xor
aaa
int
mov
clc
push
dec
gs
push
pusha
stc
sbb
bound
popa
lcall
lcall
sbbb
call
dec
push
ja
imul
vmwrite
stos
out
js
scas
mov
mov
sbb
ss
insb
mov
and
test
lods
addr16
cmp
xchg
lahf
std
sar
incl
iret
xchg
push
loope
adc
call
xchg
sti
xchg
aas
popa
or
lods
gs
mov
filds
jae
push
mov
dec
jg
jmp
xor
sub
jnp
xchg
xor
jg
ret
cmp
or
in
cmp
and
xor
scas
ja
mov
out
inc
adc
xchg
xor
cmpsb
jmp
mov
ljmp
jg
movb
ljmp
decl
sbb
loopne
cltd
sbb
inc
mov
sub
push
inc
jno
xchg
jne
inc
fists
xlat
mov
sahf
xor
loope
or
fnstsw
enter
mov
cmpsb
mov
call
test
out
scas
aam
mov
out
and
lods
rep
mov
adc
sahf
nop
dec
xlat
decl
aad
bound
push
rcl
xchg
and
inc
stos
ret
aaa
out
add
pop
mov
hlt
in
push
decl
call
cld
sbb
pop
gs
loopne
adc
out
adcb
addl
arpl
sbb
jmp
fistpl
out
xchg
rolb
movsb
jns
push
arpl
lock
mov
sub
scas
sbb
pop
add
stos
aam
fstps
add
cmpsb
jg
dec
lret
jp
push
rorb
dec
rorl
adc
or
rcl
testl
ficompl
fcomip
insb
cmp
jge
sbb
xor
or
jno
aas
add
ljmp
or
daa
loope
ret
xor
xchg
mov
mov
scas
jne
dec
call
jmp
cli
inc
rorl
cld
outsb
test
dec
fnstcw
add
pop
inc
imul
loop
or
jmp
cmovge
fcmove
rcrl
lcall
imul
orb
mov
mov
mov
incl
add
mov
adc
ror
push
ss
adc
push
mov
mov
xchg
adc
xor
xlat
repz
adc
imul
adc
push
push
jle
jge
sbb
mov
lds
cmp
mov
ljmp
cmp
je
and
pop
inc
and
sbb
pusha
or
rorl
xor
cmc
ljmp
cltd
dec
popf
loop
adc
pop
xchg
inc
add
pop
and
lcall
cmp
mov
mov
rolb
jecxz
xchg
add
int
iret
sar
pushl
out
dec
xor
add
nop
push
shlb
xor
jne
decl
insb
insl
test
dec
sub
cmp
pop
aam
hlt
adc
push
call
incl
popf
int3
fsub
dec
mov
xor
sub
jmp
xorb
dec
dec
mov
adc
clc
scas
or
sbb
lret
out
scas
ret
loope
inc
push
mov
and
xor
call
ds
add
cmp
stos
data16
mov
movsb
ljmp
pushf
push
icebp
adc
push
mov
cmpsb
cmp
mov
mov
decl
mov
push
jecxz
aam
xchg
cmp
lcall
jne
gs
pushl
xchg
cmpl
pop
jb
loope
iret
push
test
dec
shll
ljmp
sub
or
mov
push
push
pop
jb
out
movsl
icebp
push
xchg
in
inc
cwtl
mov
sbb
inc
jmp
incl
adc
jp
jno
test
cmp
aaa
xchg
cmp
xchg
je
or
daa
sar
ljmp
arpl
adc
loop
imul
das
das
adc
sub
mov
mov
test
or
sub
mov
inc
cld
jp
pop
hlt
decl
xchg
sub
out
or
fnstenv
clc
mov
fcmovb
push
fwait
pushl
push
add
mov
push
mov
lahf
int3
cltd
popf
insl
in
jp
fldl
out
dec
fwait
add
mov
push
dec
ljmp
xchg
dec
mov
lcall
or
mov
jno
lods
mov
stos
dec
mov
fisubrs
call
notl
repnz
push
out
inc
clc
out
dec
xchg
or
cmp
jge
lcall
cmc
mov
mov
pop
sub
aas
out
inc
mov
xchg
xor
xchg
jmp
in
add
idivl
dec
xor
cs
test
and
dec
int3
pop
pop
js
jle
ds
add
shlb
xchg
in
jnp
pop
int3
sbb
sbb
leave
xchg
mov
sub
cmp
lcall
inc
push
mov
loopne
xor
fsubs
ret
clc
lret
jno
push
daa
pushl
popf
jnp
jl
rcrl
loopne
test
fcoms
mov
jbe
mov
std
clc
test
cwtl
fnstcw
or
fidivrs
cmp
dec
add
pop
dec
sbb
inc
loopne
movsb
cmp
lea
ss
pushl
jnp
adc
sbb
jne
pop
sub
push
sbb
pop
cltd
cmpsl
mov
push
sbb
pop
jmp
test
sbb
or
adc
push
lcall
cmp
js
push
cmp
jp
adc
sub
pop
cmp
jg
stc
stos
clc
loopne
fstpl
enter
mov
dec
ljmp
and
mov
mov
data16
xor
cmpsb
dec
mov
and
sub
lcall
mov
cmp
sti
push
in
mov
jge,pt
fisttpll
add
cmc
or
jl
mov
sub
aad
cmpsb
push
fldl
add
popf
into
cld
sbb
mov
lret
add
xchg
ds
xchg
dec
aaa
and
incl
int3
lahf
lret
and
add
insb
adc
add
and
or
outsl
xchg
push
mov
sub
inc
ljmp
rcr
stos
imul
bound
pushf
xchg
mov
jno
fwait
mov
pcmpeqw
stos
push
sbb
dec
lea
mov
lcall
movsb
or
stos
xchg
cmpsb
rorb
push
negb
outsb
jbe
xlat
pop
std
jp
fmuls
mov
mov
ja
pop
int3
in
nop
mov
xor
shll
aaa
sar
test
cmc
xchg
push
out
lahf
into
dec
incl
ljmp
leave
pushl
xorb
scas
cmp
mov
dec
jae
adc
dec
cmp
decl
nop
or
adc
pop
push
xchg
daa
pop
call
inc
dec
adc
inc
jg
decl
call
aaa
xor
fstps
lret
mov
gs
lcall
fs
sbb
fbstp
push
dec
dec
sbb
sti
mov
mov
add
insb
dec
sbb
daa
mov
popf
xchg
fdivr
mov
movb
adc
decl
int
popf
or
fnstcw
adc
cmp
dec
sub
mov
sub
jb
push
xor
jmp
mov
adc
lds
cmp
mov
shrl
cltd
fcompl
jae
mov
ljmp
pop
lods
filds
add
pop
adc
test
decl
or
mov
bound
jge
into
mov
outsl
jo
xor
insl
fs
ret
outsb
mov
pop
mov
or
jg
xor
mov
pop
cbtw
mov
cmp
dec
add
xchg
cli
or
fisubl
leave
pop
xor
mov
mov
and
xor
negl
fists
popf
call
and
loop
mov
daa
int
or
or
jge
aaa
push
push
push
sar
out
aaa
jmp
sub
pop
pop
sbb
clc
cmp
xchg
lods
mov
aam
pop
push
lahf
add
lds
jo
pushl
adc
sub
cmpsb
pop
aas
inc
lcall
xchg
pop
out
lret
mov
mov
adc
mov
pusha
cltd
lods
mov
jmp
inc
mov
or
cmpsb
pop
pop
jp
test
rolb
cmp
decl
gs
call
lret
adc
add
movsl
outsl
inc
lret
inc
fs
aaa
int3
xchg
pop
dec
movzbl
call
stos
inc
stos
mov
fidivl
int3
in
decl
mov
daa
fistpll
shlb
cmp
in
inc
cmpsb
mov
push
jnp
xor
lcall
xlat
adc
mov
mov
jmp
ret
xchg
cmp
sub
jo
push
jns
into
enter
jg
fldt
in
mov
sub
adc
lock
lock
fwait
loop
pop
std
push
nop
shl
out
ucomiss
rcrb
loopne
pop
dec
inc
aam
arpl
sub
mov
sarb
cmp
stos
movsl
ret
pop
or
pop
add
and
push
dec
jns
mov
call
clc
std
clc
push
das
out
test
aas
adc
int
aad
xor
jg
iret
rcll
les
arpl
in
lea
mov
xor
shl
call
ljmp
stos
jg
jle
nop
add
add
xor
mov
icebp
call
inc
or
sub
lret
iret
dec
repz
jbe
decl
jns
imul
adc
push
mov
negb
icebp
decl
clc
mov
sahf
out
sahf
sahf
lret
push
scas
and
jg
pop
jno
dec
fs
clc
mov
mov
cmp
add
inc
push
imul
xor
nop
scas
cmpl
pushl
les
push
out
fwait
iret
inc
mov
xchg
and
movsb
jmp
sbb
popa
loopne
push
ret
neg
loop
and
mov
adc
sar
inc
xchg
cld
jg
jle
inc
rcrl
mov
and
mov
sbb
pop
fiaddl
gs
inc
jb
inc
push
dec
ret
mov
pushf
mov
js
push
sahf
xor
xchg
sub
je
sub
shl
or
stc
je
pop
pushf
popf
dec
inc
in
cmp
dec
hlt
fmuls
call
loopne
adc
ss
pop
cmp
in
popf
or
insl
push
mov
pop
inc
dec
scas
adc
frstor
rcrb
jp
leave
sub
pop
icebp
sbb
push
jns
or
mov
push
pop
cmp
push
test
cmp
xor
lcall
jb
into
mov
xor
push
ja
dec
push
scas
or
push
das
jg
and
in
and
jb
xor
cmp
cmc
fst
filds
push
xor
out
or
sti
popa
xor
cmp
movb
push
or
sub
dec
jle
jbe
or
adc
inc
cmpsb
or
fsubrs
popa
mov
sub
push
lods
pusha
mov
jmp
and
in
iret
push
push
addr16
add
fldt
fdivrl
pop
lock
pop
jo
add
jle
shl
add
shll
movsb
ret
cmp
adcl
pop
gs
sub
pop
sbb
jg
mov
enter
push
dec
xor
pop
xchg
cli
push
inc
test
jecxz
sub
jmp
add
inc
and
mov
push
cmp
mov
imul
fwait
inc
sbb
addr16
aaa
imul
pop
push
pop
pop
ds
fs
push
loopne
push
mov
ljmp
or
adc
jmp
mov
xchg
sub
cmp
addr16
movsb
loopne
cld
ljmp
das
xor
addr16
mov
hlt
lods
or
dec
std
out
cmp
mov
cs
inc
adc
insl
bound
mov
cmp
inc
gs
dec
pop
repnz
xchg
sub
push
std
roll
scas
mov
int3
dec
and
incl
pop
sahf
jmp
mov
ja
pop
test
mov
daa
addl
mov
inc
mov
stos
pop
jge
or
or
ss
rorb
pop
and
sbb
fcompl
dec
neg
rorb
lock
addr16
mov
xor
repnz
dec
or
mov
pushl
sub
incl
enter
notb
add
aaa
fistpll
xchg
scas
cld
movsl
scas
pop
mov
cmp
scas
sub
rorl
ret
movsl
popf
sub
sub
push
push
rsm
dec
sub
incl
mov
jb
cwtl
cmp
jnp
arpl
mov
jae
out
xor
sbb
incl
or
xchg
decb
and
xlat
lock
fldt
icebp
xchg
xchg
pop
out
jmp
pop
lahf
sarl
js
jge
daa
lods
inc
imul
push
add
xchg
js
or
mov
dec
aas
pop
lea
pop
and
and
pusha
call
lret
fwait
pop
sahf
jge
incl
jl
cli
sbb
xor
ficoml
pusha
cld
aas
jmp
inc
mov
xlat
fiaddl
jp
xchg
lcall
arpl
fstpl
jmp
fimuls
gs
push
nop
lret
insb
fidivrs
xor
stos
pop
pushf
push
sub
or
decl
fidivl
sahf
nop
or
out
mov
std
adc
pushl
xchg
rcl
xchg
dec
insl
in
or
xor
imul
lcall
cmp
das
dec
fs
test
decb
mov
ja
pop
leave
cmp
jne
ljmp
aas
orb
pusha
pop
mov
mov
jb
jo
sub
adc
test
call
popa
adc
push
pop
xchg
sbb
decl
pop
mov
int
jmp
mov
xchg
jp
fstl
cli
jecxz
push
inc
ljmp
xchg
cmpsb
mov
adc
out
add
or
sbb
cwtl
movsl
add
in
fdivr
incl
stc
es
addr16
out
push
adc
icebp
pop
pop
dec
lods
fdivp
test
pop
negl
lock
lcall
les
arpl
mov
ja
jns
clc
nop
int3
xlat
inc
filds
mov
sub
mov
push
aaa
push
mov
or
loop
xchg
inc
and
decl
sub
ficoml
iret
imul
scas
sti
rorb
int3
std
ss
push
das
and
nop
fmul
les
jmp
cmp
mov
xchg
ret
test
ja
dec
ja
cmp
cmc
aam
popa
enter
aam
mov
fidivrl
xlat
lods
jo
imul
es
push
mov
or
jecxz
inc
and
or
lcall
cmp
mov
insl
les
call
movsl
enter
inc
xchg
cmp
dec
scas
push
out
bound
popa
jne
ljmp
scas
xchg
stos
push
adc
sbb
adc
mov
sub
rcll
pushl
mov
mov
data16
jl
cmp
xor
jle
push
sti
push
pop
inc
std
dec
fsub
sbb
inc
push
gs
jmp
add
into
fsubr
mov
call
aaa
mov
and
jae
xchg
mov
testb
jp,pt
lds
inc
xchg
inc
cmp
fldln2
inc
hlt
mov
jbe
mov
sbb
push
lret
ds
dec
add
adc
jecxz
punpcklbw
cwtl
xor
dec
mov
mov
push
xchg
dec
inc
push
cltd
adc
sub
sbb
adc
insb
sti
xor
jmp
pop
lods
pushl
sub
add
mov
imul
les
xchg
jg
in
fs
mov
mov
inc
inc
cmpsl
xor
je
adc
mov
decl
xchg
push
adcb
and
insb
and
push
fimuls
add
or
inc
push
arpl
pop
js
push
push
mov
pusha
lods
mul
sahf
push
xchg
add
cwtl
and
mov
aam
scas
movlps
call
and
mov
lea
add
jmp
out
aas
daa
mov
fildll
jle
mov
add
sbb
and
pop
loop
push
mov
cwtl
pop
lods
popf
in
jne
rorb
lea
dec
call
mov
adc
rorl
es
sti
or
cmp
push
add
loope
dec
je
insb
aaa
jmp
mov
arpl
pop
cmpsb
fcmovnu
add
push
js
sti
jb
inc
negb
push
mov
ss
lahf
ja
cli
mov
ret
jns
insb
es
ja
scas
test
push
dec
xor
test
pop
stos
pop
mov
dec
mov
pushf
sub
inc
sbb
pushf
cmp
add
or
push
mov
jg
xor
and
pop
mov
es
sahf
scas
icebp
movsl
lret
cltd
es
rcll
cli
jge
xor
mov
push
pop
fisubrs
mov
jge
adc
push
sub
lods
jns
jl
push
add
add
mov
adc
lret
jmp
popa
incl
out
mov
movsb
cmc
mov
sti
xchg
mov
xor
decl
mov
pop
insl
flds
pop
jbe
mov
sub
adc
pop
movsb
dec
loope
mov
fnsave
shlb
adcb
std
not
mov
aaa
jb
mov
rcl
lods
sub
or
fistl
dec
fidivrs
jb
add
call
jg
or
je
int3
jne
stc
fadds
sbbb
xchg
mov
pop
movsb
sbb
inc
sub
pop
sbb
aas
cld
sbb
sub
mov
jmp
pushl
mov
shrb
mov
or
fildll
enter
sub
call
sub
push
mov
jne
aam
nopl
cmp
jne
jb
ja
mov
xor
mov
push
mov
mov
or
cmp
mov
push
stos
ja
aas
jae
sbb
fbstp
in
cld
mov
mov
dec
aas
stos
sub
pushl
outsb
inc
out
add
cwtl
fdivrs
ret
mov
jbe
mov
dec
mov
pop
cmc
xchg
inc
cmpl
push
out
imulb
sub
into
adc
xor
cli
sarb
fisttpll
fiadds
or
fmull
loop
xchg
aas
shlb
cmpsl
cmp
outsl
cmpsl
loopne
jecxz
dec
ljmp
and
push
jle
lcall
out
push
fstps
call
inc
fnstsw
or
sbb
mov
pusha
adc
fldt
das
dec
leave
leave
pop
stos
std
pusha
mov
mov
jmp
pop
test
cmp
ret
adc
push
sbb
rolb
call
sub
pushl
les
hlt
inc
out
pop
shlb
rcrb
xlat
mov
jmp
inc
imul
aad
lcall
inc
sbbl
mov
jmp
decl
std
int3
mov
pop
in
push
imulb
jae
dec
xchg
dec
cmp
jg
jg
adc
aas
jnp
jns
and
mov
mov
cs
loope
dec
and
sbb
frstor
jl
jno
imul
shrb
lret
out
pop
and
mov
inc
cwtl
fnstcw
pop
adc
lods
adc
jne
push
dec
pop
fists
xchg
mov
in
dec
jb
lods
decl
lahf
push
push
testb
cli
lea
xchg
dec
sub
jmp
jmp
nop
hlt
mov
mov
aas
jg
push
loopne
leave
and
cmp
adc
cmp
ret
addr16
decl
sub
ret
mov
aas
pushf
mov
pop
mov
jg
inc
mov
sub
mov
jmp
stos
fcmovnb
stc
movsl
cld
and
mov
dec
push
fcmovbe
xchg
cmp
jne
cmpsl
push
ficomps
cmpl
pop
push
subl
int
mov
into
ds
sub
ds
out
sub
mov
aam
sub
negb
aaa
std
fldenv
pop
out
sti
xlat
lods
push
mov
repnz
ljmp
add
leave
mov
jno
inc
mov
movsl
cmpl
in
push
lea
mov
dec
adc
call
cmc
xor
movsl
movsb
xor
testb
out
or
adc
int3
fistl
lock
fisubrl
in
out
dec
pop
sbb
pop
out
sahf
jmp
outsl
lret
lcall
push
jmp
out
push
mov
addb
ss
mov
jno
push
outsb
and
sbb
nop
adc
xchg
mov
sbb
pop
pop
push
mov
and
jmp
mov
pop
cmp
in
fsts
mov
push
cwtl
adc
pushl
adc
andb
test
mov
mov
mov
call
xor
push
mov
dec
fucomi
xor
jmp
int
dec
xor
cmp
decl
lcall
inc
fwait
ud0
adc
loop
mov
arpl
fldl
sbb
std
mov
adc
movsb
stc
icebp
mov
mov
or
lcall
add
or
imul
aam
nop
lcall
mov
pop
stc
xchg
roll
jmp
xchg
jb
push
iret
and
loopne
adc
ret
test
int
cmc
pushl
mov
mov
sub
dec
ror
pop
dec
sub
inc
or
lcall
add
movsb
imul
push
sub
bound
or
adc
inc
add
cwtl
mov
stos
sbb
xchg
sahf
sbb
out
xchg
adc
push
and
ret
add
rorl
xor
pop
jg
adc
ljmp
mov
je
imul
mov
mov
xor
mov
jae
test
jg
hlt
int3
push
in
bound
jno
ljmp
shlb
xor
rcl
aam
xorb
jmp
pop
lret
dec
xchg
mov
call
test
mull
mov
add
jge
lds
sahf
cmp
jg
insl
add
push
out
push
gs
dec
jnp
call
sub
loopne
icebp
jecxz
pop
sbb
jae
xchg
inc
jg
jae
push
outsl
xchg
ja
cmc
xor
addl
sbb
mov
fdivrl
sub
daa
shl
pop
xor
loopne
sahf
fimull
cmpsb
jg
sub
fildl
xchg
incl
and
out
lret
in
push
ja
dec
cmp
data16
flds
test
call
lcall
pusha
outsb
ucomiss
insb
imul
stc
clc
jp
out
mov
lea
repnz
or
mov
sbb
adc
aas
cmp
cmp
mul
xorl
out
xchg
fdivr
in
push
inc
pop
inc
fs
xchg
sbbb
pop
jo
mov
mov
sarb
or
sbb
cmp
call
xchg
xchg
call
std
push
lret
mov
pop
xlat
pop
ficoml
dec
jp
jmp
test
jo
in
adc
dec
adc
pop
fs
je
mov
hlt
aaa
mov
shll
xchg
cli
push
push
sub
inc
mov
les
xor
mov
mov
loope
pushl
call
sub
mov
das
ds
in
sub
lret
cmp
inc
sti
mov
call
dec
movhps
hlt
cltd
xchg
in
fcomi
mov
negl
push
ret
push
push
icebp
sub
dec
dec
mov
addr16
jns
scas
rolb
or
adc
jmp
sub
and
outsb
loopne
popa
imul
pusha
jne
lcall
push
or
push
arpl
aaa
mov
decl
push
popa
xor
das
sub
mov
push
div
mov
jno
xchg
mov
int
call
sbb
fwait
out
into
lret
lods
jo
cmc
pushf
ja
mov
outsl
scas
or
incl
clc
es
pop
jmp
int3
pop
inc
xor
mov
loope
xchg
sub
pushl
jno
bound
int
js
stc
lods
cmp
test
js
imul
ljmp
ljmp
add
sbb
andb
jecxz
mov
inc
jge
loopne
rcrl
enter
popa
call
ja
mov
xor
and
popa
jb
movsl
add
in
and
mov
mov
orl
fwait
shrl
cmc
dec
scas
ljmp
mov
push
fsubs
fstpl
adc
inc
fdivl
mov
ljmp
and
stc
fwait
push
sbb
add
ljmp
call
les
pop
cmp
xchg
pop
fimuls
push
repnz
pop
inc
push
aas
dec
shll
jmp
test
inc
gs
inc
and
sbb
int
pop
fxch
icebp
cmp
mov
inc
add
ljmp
aaa
sar
dec
mov
scas
or
pop
pop
int
cs
mov
incl
dec
enter
mov
push
lea
jne
imul
test
jg
ds
test
xchg
xchg
mov
push
fiaddl
das
push
lcall
push
cmpsb
jne
decl
popf
mov
sahf
outsb
xorl
xchg
repz
andb
roll
cmpl
jae
dec
pop
jb
mov
mov
mov
ljmp
jmp
addr16
test
das
bswap
ret
rorb
dec
gs
xor
in
mov
leave
fisttps
pop
push
rorb
add
aam
inc
incl
dec
mov
nop
sbb
dec
test
jmp
mov
inc
repz
jl
das
fildl
pushl
mov
cs
ja,pn
and
mov
mov
mov
sbb
sub
in
xchg
xchg
xor
cs
jge
push
push
push
push
call
outsl
mov
dec
sbb
lcall
sahf
mov
xor
mov
pop
je
dec
dec
sbb
fprem
cmpsl
les
mov
ljmp
xlat
xchg
dec
test
xor
int
xchg
cmp
mov
fwait
add
dec
dec
inc
insb
adc
add
pop
loopne
lcall
je
mov
jg
xchg
in
xchg
jb
inc
into
mov
pushf
adc
adc
scas
flds
inc
mov
inc
cmpsb
lahf
mov
jmp
xor
and
xor
push
idivb
jb
fisubrl
mov
call
jecxz
jnp
dec
and
push
cmp
out
sbb
and
jge
les
loope
fcom
pusha
mov
cmpsb
sbb
sti
in
jo
lods
sbb
fists
jmp
sbb
mov
out
test
pop
popa
xor
call
dec
sub
inc
pop
shr
shrl
jns
push
push
lds
ret
repz
lcall
aaa
ret
mov
jns
testl
imul
aad
mov
mov
sbb
push
mov
rorb
aam
cmc
aas
stos
stos
add
jl
adc
sub
out
movsb
jne
into
push
jge
xor
lcall
jns
and
add
loope
xchg
add
dec
sbb
push
cld
jp
aaa
rcr
xlat
lds
jmp
fldenv
add
push
ss
mov
decl
jg
xchg
popf
mov
es
scas
push
jge
dec
outsl
popa
popa
lds
out
cli
pushl
lcall
mov
jp
cltd
and
rcrl
ljmp
mov
loop
push
icebp
jmp
xor
dec
and
and
movsb
jle
popa
inc
mov
icebp
adc
lahf
cmp
cmp
and
pop
push
inc
xchg
push
xlat
mov
fs
add
xor
dec
cltd
enter
mov
add
das
insb
pop
icebp
imul
dec
mov
into
jbe
and
mov
inc
jne
leave
daa
pop
jge
lods
and
xchg
push
mov
data16
jmp
adc
jge
push
xor
cmp
rcr
daa
dec
push
testb
pop
iret
divl
adc
jle
mov
or
aam
push
inc
mov
push
cmpl
imul
repz
xor
out
mov
dec
sub
sbb
out
xchg
push
mov
jmp
adc
push
xlat
decl
mov
popf
aam
xor
sbb
jno
cmp
xor
out
sub
jmp
lcall
call
call
push
push
jns
add
adcb
jge
stos
add
sahf
jl
out
lea
outsb
xchg
mov
fldenv
pop
pusha
dec
imul
inc
inc
aaa
cwtl
repnz
dec
hlt
adc
fsubrp
inc
jle
mov
cmp
test
push
das
insb
ljmp
idivl
insl
jnp
into
xchg
jle
or
mov
outsl
mov
mov
aad
cmpsl
mov
call
dec
rorl
ljmp
dec
fs
inc
rclb
xchg
push
jbe
jns
lcall
out
stos
xchg
add
mov
xchg
inc
fwait
push
scas
xchg
scas
mov
pop
les
lcall
adc
test
jb
out
lods
enter
addr16
cld
pop
mov
mov
mov
push
rclb
arpl
pop
push
mov
out
movsl
incl
cwtl
std
scas
push
stc
in
push
insb
scas
inc
push
nop
fsubl
in
stos
inc
dec
cmp
add
es
lcall
pop
dec
add
lcall
movsb
cmp
lcall
mov
mov
push
lahf
fstps
dec
clc
icebp
daa
ljmp
adc
dec
cmp
pushf
enter
cmpsb
jecxz
call
dec
out
ja
push
fwait
movsl
pop
and
loope
lods
push
out
ljmp
push
in
adcb
ljmp
fisubrl
mov
add
sub
pop
shlb
mov
pop
and
cmp
imul
test
jmp
and
push
or
dec
pushl
push
mov
sub
lret
pop
sub
ss
daa
fwait
jp
mov
add
mov
lcall
push
adc
add
xlat
repnz
mov
ja
adc
rclb
rorl
adc
push
clc
add
dec
loopne
mov
ret
orb
out
lock
out
out
cmpb
xor
jmp
or
das
sbb
jge
cmp
sar
xchg
jp
cmp
adc
and
and
pushl
xchg
pop
jp
mov
fdivr
jecxz
lea
add
dec
cli
xorl
fs
push
pushl
out
pop
pusha
dec
mov
pop
popf
int
sub
ljmp
cld
divl
dec
xchg
fisubs
jmp
leave
xchg
inc
outsb
cltd
push
fmulp
adc
popa
ljmp
jb
inc
cmp
jmp
dec
stos
mov
or
into
push
icebp
xlat
add
iret
pop
jno
daa
sti
bound
mov
inc
mov
fwait
jae
xor
aas
ja
mov
pop
pop
nop
cmp
ret
mov
test
xlat
cli
inc
add
pop
fstl
jne
or
loope
dec
cmp
idiv
mov
adc
cli
jge
das
dec
sahf
insb
sarb
sub
lock
imul
add
adc
pushf
data16
push
sahf
dec
pop
nop
fldcw
popf
mov
jg
call
xchg
pop
cmp
sub
mov
jnp
jae
cmpsb
sysenter
frstor
repz
ret
sub
pushf
mov
add
test
outsb
cmpsl
add
jg
sahf
mov
xchg
inc
jmp
jecxz
sahf
rol
jg
or
fdivs
je
jbe
out
xor
lcall
lods
xor
idivb
xor
mov
cli
std
xor
pop
std
dec
sub
xor
adc
xchg
adc
dec
outsl
push
push
cltd
incl
jg
enter
dec
pop
mov
fisubrl
or
jae
jmp
mov
out
aam
out
test
dec
mov
std
and
push
clc
sbb
sub
ret
push
jg
cmpsl
cli
and
in
stos
nopl
mov
cwtl
adc
cmp
fnstsw
jl
jne
adc
jmp
popf
xor
jbe
xchg
add
ss
xchg
imul
lahf
ja
push
cmp
mov
mov
and
pop
cmpsl
out
sbb
lret
adcb
loopne
adcb
fmull
into
sbb
jbe
icebp
push
repz
test
xchg
call
inc
or
cmp
or
ljmp
and
sti
inc
dec
push
clc
aam
dec
mov
imul
xor
loop
and
insl
mov
ljmp
cmp
call
and
and
popa
dec
xor
sub
jl
xlat
xchg
pushl
fistpll
loopne
movsb
pop
mov
shll
mov
jge
jl
test
incl
out
pcmpgtd
pop
inc
rcr
scas
cmp
ret
xor
sbb
ss
push
cmp
xor
fisubrs
in
push
stos
mov
rcrb
xchg
in
ret
cli
add
jne
dec
add
dec
jg
sub
cmpb
inc
jns
ljmp
adc
int
jecxz
jmp
cmc
icebp
cmp
lret
cs
nop
out
ret
dec
inc
jle
mov
js
jae
and
fists
jle
movsl
mov
jle
fnstenv
xchg
adc
sbb
push
cs
outsl
test
xchg
push
data16
stos
mov
or
mov
flds
lret
jg
dec
rcl
cmpsl
pop
push
shll
add
mov
sbb
pop
addl
dec
or
fisubrl
ret
add
jp
out
clc
ljmp
loope
movsl
das
lock
push
loopne
imul
push
push
push
add
xchg
mov
mov
sbb
es
jle
das
cli
jg
outsl
lock
xchg
imul
dec
sub
fisttpl
cmp
mov
fisubrs
and
sub
arpl
dec
sub
mov
lea
cmpsl
call
xchg
push
out
cmp
xchg
xor
aas
fidivrs
cmp
loopne
jge
dec
sub
scas
bound
addr16
nop
das
jecxz
adc
push
sbb
ret
dec
dec
mov
dec
mov
bound
imul
lcall
adc
fdivl
cmp
iret
sbb
push
xor
jno
jge
jg
xchg
arpl
in
inc
inc
fists
mov
jg
xor
mov
xchg
decl
dec
mov
sub
ja
lods
or
in
lcall
insl
sub
xchg
fs
push
adc
sub
das
dec
lcall
cli
add
call
jbe
std
test
xor
inc
xchg
out
fimull
or
in
nop
or
pushl
std
adc
mov
mov
xchg
iret
cmp
scas
jecxz
inc
decl
push
lea
rorb
or
xor
adc
or
decl
out
ja
push
xor
add
sub
push
mov
mov
cmpl
dec
sbb
xor
or
xchg
pop
cltd
fldl
push
push
sbb
fnstsw
dec
icebp
incl
cmpsl
shlb
scas
jns
xchg
mov
pop
lret
adc
cmpsb
fucomip
and
cld
lcall
daa
xor
in
ret
jno
das
xchg
push
ljmp
outsb
mov
fadds
int
mov
and
aam
jne
pop
and
pop
inc
outsl
data16
mov
and
cmp
xor
mov
add
lret
pop
inc
mov
mov
imul
jmp
xchg
push
fdivr
push
xchg
cwtl
xchg
sub
xchg
cld
decl
enter
lcall
dec
jns
mov
lahf
push
jecxz
outsl
xchg
sub
fdivr
decl
lods
add
incb
add
inc
call
imul
testb
lret
aad
repz
lcall
aas
movsb
insb
pop
dec
add
and
pusha
lret
loop
rcr
mov
mov
lcall
pop
lret
shrl
or
jno
mulb
mov
xor
icebp
xorl
out
mov
test
sub
adc
test
jmp
xorb
xchg
inc
xorl
inc
dec
movsl
stos
dec
xchg
adc
aaa
inc
xchg
or
popf
lods
adc
stos
rcll
cmp
cmp
push
and
arpl
xchg
nop
aas
pop
iret
xlat
sbb
mov
dec
into
popa
add
test
movsb
and
or
lock
pushl
pop
arpl
imul
incl
cmpsb
xchg
dec
cli
in
mov
mov
decl
fdivrl
into
sarb
std
and
leave
mov
cltd
fbstp
sarb
add
cld
incl
mov
jp
mov
aam
mov
cs
subl
mov
in
in
push
adc
mov
fwait
dec
or
sub
out
out
push
mov
mov
jg
pop
ljmp
ljmp
les
add
dec
pop
inc
enter
sbb
scas
mov
push
dec
je
mov
mov
and
push
fisubl
stos
scas
add
mov
into
fisubs
jnp
dec
jae
jg
push
inc
mov
jb
scas
push
sub
jge
lret
inc
mov
cmp
pop
mov
pop
les
mov
addr16
fidivl
mov
adc
sbb
ljmp
push
jmp
icebp
les
cmc
push
cmp
and
cwtl
ss
adc
mov
aad
iret
cmp
jne
arpl
sub
cmp
pop
in
cmc
lock
ljmp
inc
pop
cmpsb
jnp
mov
jb
stos
and
lock
add
or
jnp
jmp
pop
sub
out
mov
cs
cmp
pop
xor
push
xchg
mov
jmp
jne
jle
and
call
mov
jecxz
mov
fwait
push
xchg
mov
adc
push
mov
dec
mov
adc
fcmovnu
adc
call
pushl
fwait
inc
xchg
ds
mov
rolb
jnp
push
pushl
push
adc
inc
repnz
push
or
push
xor
fdivrs
cmp
adc
mov
lea
inc
sub
fnstcw
ja
push
dec
and
test
push
lcall
fisubrl
pop
cmc
mov
xchg
adc
dec
or
into
stos
push
xor
push
pop
lcall
pop
mov
or
cmp
decl
dec
sub
pop
xor
mov
js
xor
sti
dec
mov
push
cmp
jg
out
clc
xor
xor
ror
mov
or
sbb
out
xchg
cmc
outsl
test
dec
cmpsl
sub
aam
xor
inc
jg
retw
popa
ret
ss
inc
rorb
inc
ljmp
pop
xlat
push
ss
outsb
cmp
loope
fildl
sub
imul
inc
out
mov
aaa
inc
jmp
or
mov
mov
cld
insb
xlat
add
lcall
ret
mov
pop
pop
repnz
xchg
push
push
sbb
cltd
mov
mov
ljmp
xchg
out
or
adc
icebp
in
or
adc
sub
decl
icebp
xchg
sub
fs
out
sbb
call
sbb
test
and
jmp
inc
cld
lods
xchg
aas
daa
mov
jmp
push
decl
sbb
pop
aaa
inc
jnp
or
add
lahf
push
sub
inc
jmp
outsb
mov
push
jbe
mov
mov
sbb
aas
mov
nop
inc
imul
inc
adc
incl
dec
xchg
inc
in
push
pop
pop
jmp
adc
xor
push
or
je
pop
mov
mov
in
cs
sub
in
push
rorb
dec
adc
loope
sub
ss
ljmp
ficomps
call
ss
in
into
int
jecxz
mov
adc
add
fwait
and
mov
push
mov
and
in
cli
aaa
xor
sub
decl
inc
and
sbb
and
mov
pusha
xchg
jb
aaa
fisubl
push
decb
xlat
xchg
dec
pshufw
call
leave
repz
inc
cltd
cmc
cli
cmpsl
int
mov
lahf
test
mov
dec
call
pusha
popf
mov
xchg
cmp
sbb
aad
dec
out
jmp
dec
out
xchg
loope
incb
push
add
inc
lret
adc
cwtl
cli
jmp
out
fistps
inc
shll
mov
inc
shlb
sahf
jmp
lods
cwtl
mov
cli
aad
movsl
imul
adc
js
lcall
ljmp
stos
ja
popf
aam
test
rcll
xchg
jbe
lock
outsb
ljmp
xchg
dec
test
jecxz
lds
ret
jp
mov
pop
sub
mov
mov
jmp
icebp
sub
push
and
test
dec
push
push
jbe
data16
mov
in
lahf
out
mov
dec
ficompl
mov
sbb
jmp
push
fisubl
lcall
or
jecxz
adc
inc
test
push
in
in
add
test
ja
jmp
ss
enter
cmp
daa
and
jle
aas
lretw
mov
xchg
arpl
hlt
adc
sbb
push
ja
cmp
cld
pop
mov
notb
dec
sub
gs
mov
pop
xor
jmp
movsl
mov
xlat
pop
loope
ss
mov
xchg
jg
test
jmp
movsb
xchg
ljmp
lods
incl
in
insl
pop
adc
frstor
pushl
ja
mov
imul
adc
push
aad
cltd
cli
cmpl
leave
jg
scas
clc
adc
popf
pop
mov
repz
push
lcall
mov
popf
mov
mov
mov
test
fsubrs
mov
ljmp
mov
aaa
mov
inc
ss
push
pop
aaa
insl
xchg
jb
aad
lods
ja
mov
fisttpll
push
insl
clc
decl
xlat
repnz
pusha
pop
scas
cmpsb
dec
fstps
jo
pop
aaa
retw
inc
cld
push
pushf
ljmp
movsl
adc
stc
repz
push
jno
hlt
jmp
or
xchg
stos
les
add
out
clc
fists
dec
mov
jne
pop
jne
popa
sub
movsb
sbbl
xor
pop
jmp
xchg
xchg
fnstsw
aad
in
jns
pop
leave
sub
push
sub
mov
movsb
push
cmp
and
lret
pop
outsl
or
lcall
ficoml
jge
pusha
push
or
mov
or
scas
iret
subl
gs
pop
gs
mov
enter
adc
out
jmp
pushl
cmpsl
popa
xchg
pop
add
or
imul
push
pop
pop
xchg
insl
jbe
push
repnz
incl
cld
mov
xchg
mov
loopne
jne
sar
arpl
pusha
push
mov
mov
push
or
lahf
mov
in
or
xor
lret
xchg
jg
bound
int
call
dec
xor
inc
mov
dec
dec
mov
jae
notl
call
fisubrs
xchg
pop
push
jns
pop
xlat
pop
adc
ljmp
jae
xchg
repz
pushf
cwtl
lcall
jmp
lahf
push
xor
lock
jle
push
mov
mov
cli
lea
das
cld
sbb
data16
out
sti
hlt
cmpsl
sub
outsl
int3
fisttps
add
into
jg
iret
ja
push
jecxz
mov
fsubrl
fcomip
incl
sbb
lahf
push
bound
fs
pop
and
mov
iret
fstps
inc
scas
icebp
sbb
cmpsl
and
out
repz
test
xchg
ret
push
into
fdivs
mov
int3
mov
rorl
add
faddl
push
mov
sbb
jg
push
pop
cmpb
or
int3
int3
js
inc
and
repnz
in
cld
ljmp
inc
insb
pop
dec
and
in
xlat
iret
ficomps
dec
adc
jae
or
xor
lcall
insb
roll
sub
icebp
and
or
xchg
repnz
fwait
addb
ljmp
adc
or
and
shlb
fisttps
outsl
cltd
dec
and
jge
jnp
fs
out
pop
jecxz
xor
ljmp
xchg
enter
sub
pop
sbb
mov
push
mov
cmp
popf
bound
lcall
mov
test
pop
add
mov
cld
ljmp
jns
aam
mov
ljmp
push
pop
mov
ljmp
mov
pop
ds
mov
mov
insb
sti
sub
push
jo
lret
mov
pop
icebp
decl
in
inc
movsl
dec
fsts
mov
add
mov
sub
movsl
popf
adc
dec
inc
jle
cmpsb
in
cmp
add
fistpl
add
add
incl
or
push
or
or
or
or
or
fistl
adc
adc
adc
push
adc
outsb
xlat
dec
movsb
add
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
and
add
or
xchg
outsb
add
fsubrs
sahf
add
les
add
dec
jmp
inc
mov
jg
rclb
imul
add
add
adc
xor
adc
pop
and
xor
inc
mov
adc
xor
subb
js
jb
cmpsl
adc
test
lods
mov
imul
cmp
mov
dec
rorl
cmpsl
addr16
sub
cmp
add
xorl
pushf
into
jo
or
add
push
stos
add
pop
scas
cmp
adc
decb
lods
push
adc
pop
popa
jno
and
pop
xor
inc
mov
or
xor
adc
loope
roll
mov
sbb
xorb
scas
fiaddl
or
js
mov
push
std
or
outsl
clc
mov
sbb
cli
and
mov
inc
jnp
test
clc
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
pop
and
jecxz
cli
pop
mov
stc
or
clc
cmpl
jg
or
insb
sub
addr16
out
or
lcall
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fidivrl
ljmp
in
mov
orb
int3
lcall
mov
push
pop
mov
ljmp
mov
pop
movb
xchg
sbb
scas
adc
fcomps
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
fistpll
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
add
call
out
outsl
loope
loope
rorl
mov
int
arpl
add
testb
push
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
clc
pop
pop
mov
jmp
outsl
insl
js
pop
xchg
add
dec
mov
add
pop
mov
mov
sub
mov
jl
shll
jp
push
gs
jg
hlt
in
in
outsl
call
paddsb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
decl
imul
scas
fadds
in
sub
jbe
repnz
jno
pop
sub
jg
scas
cld
or
sbb
paddb
cmp
push
clc
jb
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
aas
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
fisubs
icebp
aas
std
cli
push
push
push
idivl
ljmp
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
or
ljmp
cmp
sti
punpckhbw
cmpsb
orb
mov
xor
jmp
xchg
fistl
negb
pop
hlt
lret
movsb
add
lea
pop
jmp
jg
gs
std
xorb
jg
aad
adc
incl
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
ljmp
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
decl
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
filds
cmp
ficoms
aam
sahf
mov
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cld
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
loopne
fdivrl
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
call
adc
push
jo
pusha
imul
add
mov
cmp
xchg
mov
push
in
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
jno
call
imulb
cld
xor
repz
jge
cmp
fmull
enter
jecxz
scas
sub
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
sti
sbb
push
inc
or
pop
jg
add
iret
mov
jg
mov
aad
test
mov
xchg
movsb
mov
iret
push
jbe
jmp
sar
push
sbb
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
std
outsl
sti
push
sbb
sarl
adc
loopne
and
rorl
mov
jg
push
imul
dec
push
in
aas
mov
fisubl
cmp
fsubrl
lock
and
incl
sbb
clc
xchg
das
clc
jmp
or
and
mov
adc
mov
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
ret
lock
data16
pop
nop
mov
out
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
jmp
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
insb
insb
adc
dec
mov
sub
jge
xor
idivb
ja
lahf
les
sbb
sbb
cld
addl
icebp
decl
inc
sbb
mov
lahf
outsl
int3
push
sbb
push
test
sti
jle
xchg
popa
out
add
paddsw
pop
outsl
xchg
inc
test
in
jge
popa
push
test
outsl
clc
lcall
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
jle
or
out
lcall
shl
cld
mov
test
mov
jg
pop
shrb
call
call
sarb
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
ds
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
pushl
mov
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
clc
in
adc
aas
repz
sbb
lock
in
cs
push
sub
out
sbb
aaa
clc
push
std
mov
inc
js
or
fists
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
push
loop
faddl
xchg
lcall
jne
pop
cld
mulb
jbe
or
dec
ss
lods
movsb
or
decb
pushf
imul
jl
fisttpl
subb
cmpsl
lret
dec
fistps
in
cmp
jmp
mov
std
push
test
pop
lock
jmp
hlt
dec
mov
xlat
inc
loopne
incl
jg
mov
sub
fildll
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
stos
pop
test
incb
lock
pop
pop
div
cld
mull
adc
and
sbb
cld
sbb
jmp
shrl
je
jge
paddsw
fbstp
out
xchg
add
out
icebp
mov
fndisi(8087
fisttps
sti
mov
fists
enter
push
and
das
jge
fisubrs
out
cmp
call
mov
das
js
iret
decb
adc
mov
and
xchg
adc
call
enter
popf
dec
or
add
cmp
int
add
push
enter
pop
aaa
std
fisttps
testb
cld
jg
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
aaa
pushf
jecxz
and
adc
mov
mov
cld
push
sub
mov
pop
clc
loope
loope
mov
lahf
pusha
push
dec
add
xlat
shrl
fimull
xchg
fldenv
iret
fdivrl
dec
fists
cmp
repz
loopne
pop
gs
sub
sti
push
sarl
pop
out
jg
jno
ret
dec
push
dec
inc
cmp
incl
pop
inc
sbb
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
stos
popa
mov
std
dec
jmp
add
sbb
mov
lods
fadds
mov
div
pop
stc
push
dec
out
fstpt
mov
enter
xchg
popf
pop
add
fsts
dec
or
add
sti
pop
inc
push
cltd
mov
or
nop
pusha
mov
in
mov
test
and
or
or
pop
repz
add
and
jl
lods
daa
add
pop
movsb
mov
addb
fidivs
add
incl
jae
add
push
repnz
mov
sbbb
jg
add
pop
ss
inc
add
pop
imul
add
dec
orb
push
add
and
mov
adc
pop
inc
or
sub
dec
fs
movq
loop
ss
add
nopl
dec
mov
scas
dec
fsub
test
popf
mov
stc
jno
mov
jnp
xchg
movsl
push
daa
add
cmpsb
mov
and
cmpsl
push
and
cs
push
out
mov
scas
push
and
stos
push
and
push
jbe
sbb
push
push
xchg
imul
stos
clc
testb
inc
pop
pop
add
mov
pop
sbb
outsl
int
sbb
mov
sbb
inc
mov
pusha
sbb
mov
xor
pop
les
push
adc
fs
mov
in
incl
int
or
lret
imul
imul
imul
sub
lret
mov
jbe
fldcw
cmpsb
stos
fdivs
mov
stos
pop
pop
adc
shrl
add
ss
add
jo
mov
push
shll
add
outsl
push
fisttpl
outsb
fcmovnbe
jo
fidivrl
iret
outsb
or
push
pop
mov
jae
outsl
adc
jns
out
jge
fisttps
outsl
push
xorb
ljmp
movsb
push
add
mov
out
mov
sbbl
push
mov
scas
imul
push
aam
in
outsb
mov
push
ret
add
mov
inc
testl
add
cmpl
ja
data16
inc
xchg
repz
mov
push
push
shlb
lret
imul
inc
ja
fsubrl
xlat
jne
add
ja
push
add
fcoml
aad
push
xlat
ja
js
push
faddp
addr16
in
fidivrl
push
jp
jp
inc
push
fidivrl
mov
lds
jns
ja
fldl
xor
pop
push
ret
nop
ljmp
push
xchg
sub
xchg
in
xchg
sub
jmp
insl
push
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
mov
ret
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
fistpll
outsb
mov
mov
push
imulb
sahf
xlat
add
movl
out
push
hlt
clc
jns
out
stc
cli
sti
cld
std
lods
adc
out
inc
jo
add
mov
jae
add
fs
jo
imul
fldcw
pop
add
pop
add
pop
sbb
mov
sub
jg
add
mov
add
add
or
add
in
add
outsl
or
or
add
lahf
stos
test
test
or
ficoml
ja
sbb
adc
sub
adc
add
pop
stos
femms
lods
lods
pop
jbe
add
add
imul
pop
pop
adc
rcr
or
lods
adc
sbb
pop
pop
scas
sbb
scas
scas
scas
mov
sbb
sbb
mov
mov
xor
inc
outsb
and
add
add
mov
push
sbb
jo
and
outsb
push
mov
mov
push
push
shll
mov
cmpsl
mov
mov
insl
push
addl
sub
mov
repnz
andb
mov
pop
xchg
pop
daa
mov
pop
test
mov
and
cmp
fsubs
cmp
cmp
cmpsb
add
mov
pop
xor
cltd
insl
push
pop
pop
or
or
add
mov
pop
xor
mov
pop
das
push
cs
xor
fbstp
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
cld
incl
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
xor
pusha
pop
pushw
dec
dec
incl
add
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
es
pop
jle
ja
jns
dec
push
bound
js
ret
adc
xor
jne
je
pusha
adc
bound
dec
fisttpl
addb
adc
clts
jae
add
pop
pop
scas
lods
pop
popa
mov
sub
dec
jle
xchg
pop
push
dec
add
mov
mov
dec
and
cmpsb
push
mov
xor
mov
sti
dec
xor
ja
push
ja
jb
cs
xor
mov
xchg
push
out
out
insl
mov
sbb
and
mov
imulb
xchg
jo
push
inc
mov
cmp
mov
inc
dec
fldl
push
daa
enter
or
mov
inc
push
popf
inc
mov
aaa
mov
xor
add
xchg
jno
lret
push
bound
mov
mov
flds
lahf
inc
inc
push
sahf
mov
insb
insl
fcomi
pushl
add
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
sub
in
push
dec
push
movsb
jae
add
jb
shll
jg
mov
push
rorb
add
lcall
fistpll
into
dec
mov
add
ja
sahf
jbe
sar
mov
sahf
push
add
add
ds
push
pop
movsb
outsl
mov
data16
jp
add
js
mov
xlat
popf
ja
data16
shrl
insb
pop
outsb
push
push
fidivrs
outsl
ror
push
ds
jno
add
mov
loopne
jge
push
jg
fiadds
call
sub
lock
add
icebp
fisttpl
xchg
mov
add
test
mov
iret
sahf
mov
divb
add
jb
out
in
push
jle
mov
orb
push
fnstcw
aad
push
divb
fildl
lahf
cmpsb
sarb
addb
push
sbb
sbbl
test
test
sbb
popf
int
inc
test
in
mov
push
xchg
nop
and
mov
xchg
in
xchg
lock
sub
sub
cmpsb
jge
add
scas
outsb
out
xchg
das
push
xchg
pop
fldt
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
push
cmpsb
pop
cmp
sub
sbbb
push
cmpsb
scas
jo
or
sahf
mov
shrb
into
shll
lgs
int
mov
stc
insb
fiaddl
push
rcr
rcl
mov
push
aad
jle
data16
add
shr
and
push
dec
dec
and
out
je
dec
push
pop
add
xchg
test
enter
push
or
or
or
es
add
notl
pop
push
adc
push
add
add
testb
mov
sbb
add
mov
adc
or
cwtl
sbb
mov
sbb
add
push
add
and
fildll
mov
and
cs
mov
aas
and
pop
imul
aas
xor
or
aas
aas
inc
sahf
sub
cmp
cmp
and
cmp
paddsw
jbe
adcl
incl
jle
cmp
imul
ds
mov
mov
repz
aas
adc
ds
data16
out
mov
decb
test
ror
add
mov
clc
aaa
lds
add
pop
lods
stos
test
sbb
add
and
dec
test
mov
lods
lcall
xor
sub
sub
sub
sub
sti
mov
ss
and
inc
mov
push
push
push
push
inc
sbb
call
insb
insb
pop
push
push
pop
push
push
push
imul
fs
das
pop
imul
nop
cltd
mov
call
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
xor
outsl
jns
jle
addl
jo
outsb
pushf
sti
adc
push
lds
repnz
rolb
add
mov
incl
test
test
out
inc
mov
push
push
repz
call
loopne
dec
xor
bound
jae
aas
add
xchg
pop
cmp
test
add
mov
add
mov
push
mov
fnstsw
incl
stc
cmc
repnz
inc
add
gs
pushf
add
mov
sti
fucomi
ret
push
in
lcall
or
mov
pop
jo
or
jae
js
jge
pop
into
xchg
add
mov
mov
test
scas
xchg
pop
dec
inc
js
in
and
out
call
mov
insl
sub
xchg
push
sub
nop
sub
out
xchg
xor
xchg
outsb
lcall
jnp
es
jbe
negl
fcmove
int3
out
shlb
iret
push
lret
loopne
push
std
mov
and
fdivrp
neg
insb
lea
test
jg
or
add
jge
xchg
pop
mov
push
decb
jns
dec
dec
dec
dec
dec
dec
add
pop
fbld
incl
add
dec
or
adc
cmp
adc
dec
or
fcmovnu
dec
inc
add
push
adc
add
or
pop
int
in
pop
cmovg
inc
push
dec
sbb
lahf
mulb
inc
adc
inc
inc
adc
sbb
dec
add
mov
mov
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
sbb
and
add
dec
in
xor
sub
ljmp
das
xor
sub
sub
test
mov
addb
mov
pop
add
ss
mov
mov
mov
mov
add
insb
mov
push
outsb
mov
push
outsl
mov
andl
add
roll
pushf
sbb
outsl
mov
push
cmpsl
pop
mov
incl
orb
inc
jmp
aaa
movsb
xlat
sbb
mov
adc
incl
outsb
sysret
add
andb
dec
ret
jg
ds
or
inc
jb
dec
in
lock
push
or
pop
hlt
xorps
push
inc
and
jg
add
pop
aaa
outsl
inc
andb
int3
ret
sahf
jg
push
lds
add
and
jg
pop
shrl
cli
mov
cli
mov
pop
adc
adc
pop
jg
cmpl
inc
test
inc
mov
sti
jg
adc
das
sti
mov
pop
jb
cli
jle
fsts
sbb
inc
dec
sti
jg
or
add
and
mov
mov
and
cmp
mov
cld
jg
add
sub
inc
loopne
jle
inc
add
in
cmpsb
std
ja
jg
adcl
jg
inc
dec
sbb
pop
enter
jg
jle
pop
adc
add
data16
sub
incl
push
sub
xchg
mov
dec
xor
incb
arpl
data16
push
test
mov
adc
add
pusha
xor
jg
push
mov
sbb
jbe
fsubs
pop
add
jmp
xor
sbb
sbb
test
xchg
inc
mov
in
jle
adc
repnz
imul
addr16
add
stos
push
add
push
jg
pop
add
jno
mov
andl
sbb
push
jg
shlb
inc
rorb
jg
sub
pusha
adcb
add
inc
jg
decl
sbb
pop
or
mov
jle
mov
fdivrp
cmpsb
ljmp
pop
push
stos
pop
stos
pop
pop
insl
fcmovnb
ficomps
pop
daa
aas
aaa
pop
mov
add
add
js
shrl
aaa
add
xor
push
or
sbb
push
pop
jle
push
dec
xlat
dec
testl
push
mov
popf
mov
daa
inc
insb
fcmovnu
push
arpl
pop
shlb
sbb
push
mov
inc
out
mov
dec
push
dec
lcall
or
inc
ljmp
xor
scas
dec
push
adc
inc
jle,pt
xor
mov
push
pushl
aam
into
push
fnstenv
into
out
jne
push
push
jne
pop
push
jbe
insl
inc
enter
jnp
push
jp
fildl
dec
jbe
xlat
fdivrs
add
mov
mov
jbe
es
push
popf
push
daa
outsb
ljmp
lcall
iret
dec
lcall
mov
inc
inc
outsb
test
cs
incl
xchg
out
xchg
dec
ja
xchg
and
push
mov
inc
xchg
push
push
data16
mov
jbe
fstps
mov
out
mov
xchg
or
inc
push
pushf
cmp
pushf
ds
cmp
dec
enter
xor
xchg
xor
ja
mov
sub
sub
nop
daa
ss
cs
or
cwtl
aaa
sbb
in
outsb
decl
mov
jg
jg
pop
fnsave
xor
call
inc
loopne
sahf
enterw
push
jbe
ss
cs
add
dec
or
pop
ja
test
xchg
movsb
call
ja
xor
aaa
mov
add
add
mov
test
in
adc
les
andb
add
mov
sub
pop
pop
or
or
push
iret
repz
push
orl
lea
jg
push
fadd
popf
push
imul
dec
repz
cmp
lock
cmp
and
sbb
cmp
icebp
stos
sbb
imul
add
mov
decl
push
inc
subl
pop
idiv
mov
imul
mov
push
sbb
fiadds
mov
xor
test
xchg
or
es
into
jmp
syscall
mov
sub
push
cmp
pop
add
pop
aaa
inc
popa
stos
xchg
pop
lcall
or
addr16
mov
sub
mov
or
pop
cld
or
data16
jge
call
daa
std
adc
emms
inc
mov
sbb
mov
gs
mov
sbb
jmp
xchg
sbb
push
sbb
lods
xor
das
incl
pop
es
lcall
fmuls
inc
pop
decb
cmpsb
sub
lcall
cmpsb
test
sub
xor
decb
mov
xor
inc
xchg
clts
add
push
sbbl
xchg
mov
jle
adc
xor
pop
sub
imul
sbb
add
out
incl
adc
sub
call
xor
xchg
fdivrp
or
jmp
outsl
mov
pop
sti
push
std
mov
shlb
out
adc
stos
inc
popa
nop
push
call
add
rorl
cld
pop
nop
fsubl
stc
sgdtl
pushw
call
jg
fwait
test
inc
cli
idiv
add
sbb
sub
inc
es
ljmp
movsb
push
test
inc
fnstenv
rcll
pop
inc
jmp
push
pop
aaa
mov
or
push
shll
mov
mov
roll
dec
scas
nop
jbe
sahf
ret
incl
mov
jmp
ljmp
pop
cmp
lahf
inc
inc
push
inc
inc
pop
inc
ffree
cmpsb
pop
mov
cmp
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
dec
push
dec
out
inc
cs
dec
mov
out
add
and
out
ss
push
rcl
outsb
int
shrb
es
push
jb
xchg
xchg
add
das
push
iret
insl
cmpsb
xchg
and
outsl
movsb
es
je
imul
cltd
notb
push
call
push
and
in
xor
sahf
decl
pop
add
pop
int
repnz
decl
mov
cmpsb
popfw
cmp
aas
decl
adc
push
cwtl
xor
lcall
xor
mov
lcall
xchg
in
insl
xchg
es
xchg
xchg
jmp
decl
xchg
lcall
inc
test
ds
add
push
add
cli
aaa
cmp
aad
or
faddl
mov
push
push
jnp
jp
or
jl
sub
cmpsb
jns
jns
jl
push
jge
add
insl
jg
es
jbe
mov
or
dec
push
dec
repnz
repnz
int
jae
pop
fidivrl
push
mov
jnp
push
jb
jge
hlt
in
add
int3
outsb
nop
negl
and
mov
stc
sbbb
aad
add
mov
adc
adc
outsb
add
push
sbbb
jnp
lahf
lds
decl
mov
addl
orb
out
xchg
aas
jg
and
xchg
out
push
sub
iret
out
mov
out
xchg
clc
push
neg
xchg
inc
sub
jg
and
ss
pop
cld
mov
jno
sub
jg
mov
icebp
mov
jg
jns
bnd
inc
daa
jg
mov
ja
jle
inc
push
loope
xchg
cld
jp
es
mov
jge
incb
out
xchg
and
orb
stos
push
add
pop
jmp
orl
mov
icebp
nop
sub
cs
cmpsb
push
push
fsub
pop
push
adc
push
int3
decl
dec
jle
mov
fidivrl
arpl
clc
int3
cmp
push
pop
fnstsw
movsb
aaa
push
pop
push
pop
or
nop
cmp
sti
and
lcall
sbb
hlt
push
jns
mov
push
addr16
mov
jmp
xchg
jmp
mov
push
xchg
mov
jle
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
stos
in
xchg
or
pop
push
push
test
ja
inc
or
daa
xlat
push
cmovno
or
cmc
scas
imul
add
push
dec
faddl
movb
or
xor
lret
pop
add
xchg
add
push
inc
lahf
rolb
adc
push
rcrl
fwait
call
fsts
adc
sub
or
into
pop
push
sbb
push
sbb
push
or
dec
lcall
or
movsb
pusha
fistl
push
inc
aad
xchg
jmp
add
inc
add
and
push
adc
loope
es
nop
mov
mov
push
adc
add
add
mov
push
gs
jo
les
sbb
push
stos
add
cmpsb
test
and
xor
dec
add
dec
mov
sub
pop
dec
lcall
push
aaa
xchg
inc
pop
mov
jne
mov
imul
inc
add
lock
inc
jmp
lahf
jo
das
fnstcw
mov
fildl
push
add
imul
lds
stos
and
add
add
jno
dec
and
bound
pusha
mov
mov
add
push
sbb
jmp
mov
mov
add
and
dec
and
movsl
and
popf
in
sbb
push
popa
shlb
xor
dec
test
pop
ss
xlat
jae
and
arpl
rolb
fidivrl
sbb
and
add
xchg
mov
push
mov
and
or
fidivrl
sub
add
and
cmpsl
inc
sub
xchg
divl
mov
push
insl
or
adc
add
xchg
jno
outsl
shrb
sbb
sbb
outsb
dec
push
outsl
loop
dec
sbb
pop
sub
divl
jno
fwait
ljmp
pop
pop
in
pop
mov
inc
imul
sbbl
inc
imul
or
mov
jne
addr16
inc
loopne
mov
and
or
or
popa
sub
dec
mov
inc
or
add
xchg
ss
and
and
mov
xchg
ss
xchg
mov
add
mov
popf
add
insl
pop
push
jmp
js
popa
xchg
aad
push
mov
aas
cmp
mov
sub
mov
xor
jnp
sbb
cmp
jo
je
mov
in
xchg
mov
movsb
fcomps
inc
fsubrs
adc
mov
xor
ret
sub
bound
adc
mov
outsl
inc
xchg
and
iret
jecxz
xor
adcb
adcl
lret
mov
mov
jbe
lret
jb
dec
lea
js
loopne
cmp
loope
aaa
shl
inc
je
mov
iret
cmp
cmp
mov
cltd
xchg
pop
mov
mov
popa
and
pop
test
sbb
lds
insb
les
arpl
and
cmp
add
pusha
stos
mov
sub
push
pop
call
dec
fbstp
xor
dec
push
jae
xor
ss
cmp
shrb
adc
nop
cmp
push
dec
das
xchg
fcmovnu
fsubl
imul
dec
ja
sbb
xorb
and
andb
push
les
jl
lahf
mov
jl
xchg
mov
mov
inc
outsl
jae
cmp
in
loop
outsl
mov
or
dec
jae
mov
push
loop
sub
inc
fwait
pushf
inc
fldenv
int3
fisubs
mov
cmpsl
shll
arpl
mov
cli
xchg
mov
adc
cs
aas
sub
xchg
pop
sub
xchg
mov
mov
sbbl
sub
sbb
inc
fisttpl
bound
sbb
sbb
arpl
jae
sub
lea
xchg
fisubrl
inc
xor
push
cmpsl
pop
lea
jecxz
or
inc
and
mov
cmp
jne
scas
mov
jb
fs
or
push
popa
adc
jp
rcpps
js
push
jb
cwtl
icebp
inc
dec
inc
inc
xchg
or
mov
jmp
imul
jbe
push
lds
pusha
sbb
ja
insb
lods
push
ficompl
das
add
sub
imul
or
nop
lea
loop
cmpsl
insl
pushf
dec
dec
inc
add
adc
out
mov
mov
jns
dec
loopne
lods
lock
push
jo
inc
ljmp
push
sub
sub
std
addr16
orl
xchg
mov
xor
inc
lock
mov
adc
sbb
outsb
inc
sbb
mov
sbb
int
fsubrs
pop
inc
je
mov
dec
outsb
dec
std
lea
call
das
push
sub
push
fistl
js
add
pop
add
add
sbb
mov
xor
imul
or
shll
adc
or
mov
fidivl
es
pop
add
inc
add
sbb
or
or
mov
sbb
movsb
dec
imul
fcmovnbe
fistl
inc
jo
sbb
push
loope
out
test
insl
sub
daa
rolb
es
subb
sarl
push
imul
mov
fsubrs
imul
push
bound
test
enter
xorl
sbb
out
jecxz
push
movl
inc
sbb
dec
xor
sarb
ljmp
jo
mov
inc
mov
xor
jmp
arpl
push
sub
je
in
sbb
rclb
mov
out
pushf
xor
xor
cmp
and
and
ret
push
dec
push
xchg
pop
movsb
sbb
jle
ret
mov
add
xor
outsb
ja
ja
dec
pop
lret
inc
lock
pop
arpl
mov
inc
inc
mov
popw
xlat
adc
or
mov
sbb
dec
adc
add
cmpsb
jg
inc
inc
xorb
inc
jbe
and
in
mov
outsl
and
insb
mov
xor
jbe
adcl
mov
es
scas
push
std
test
mov
xchg
dec
insl
movsb
mov
push
push
sub
adc
sub
shll
xor
dec
cld
addr16
adc
arpl
test
pop
xor
cwtl
push
and
arpl
roll
cmc
inc
cwtl
shrl
sbb
mov
shll
mov
cmp
cmp
jns
push
lea
and
jp
sub
mov
and
out
jmp
mov
outsb
fdivs
add
shlb
mov
cmpsb
aas
insl
sbb
imul
nop
shlb
xchg
jbe
inc
addr16
enter
xor
lahf
add
iret
repz
dec
push
mov
icebp
sbb
push
inc
inc
cmp
incl
sub
cmp
adcl
dec
or
cmp
jnp
pop
dec
mov
out
jmp
pop
outsb
inc
test
lcall
shll
add
in
and
pusha
aaa
sub
push
sbb
rolb
cmpsb
dec
jp
push
cmp
xchg
dec
movsl
dec
sub
jns
inc
addr16
add
imul
addr16
insl
add
add
jo
push
insb
xor
dec
addr16
xlat
push
sbb
pop
je
movb
mov
xchg
mov
mov
lock
movl
add
addr16
sbb
jnp
jl
and
sahf
push
cld
push
scas
mov
addr16
call
dec
xor
lcall
out
into
aam
adc
push
pop
mov
inc
sbb
sti
push
mov
fisubrs
add
push
xchg
and
xchg
incl
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
