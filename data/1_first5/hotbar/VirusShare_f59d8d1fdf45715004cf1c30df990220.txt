divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
movsl
push
mov
andl
push
cmp
enter
add
mov
punpckhwd
add
or
bound
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
bound
incl
sti
inc
add
add
call
jle
add
mov
mov
mov
mov
lock
add
sahf
or
sbb
pop
dec
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
sub
outsb
sub
sub
cwtl
in
add
mov
add
fsubrs
cmp
cld
mov
sbb
push
push
lods
push
repnz
inc
add
fdiv
fistpl
fldt
inc
add
test
mov
ds
je
pop
add
pop
mov
push
cmp
loopne
cmp
rcrb
cmp
pop
add
add
push
loop
icebp
cmp
add
push
add
sbb
pusha
les
xchg
dec
sarl
mov
add
sub
in
mull
pop
pop
sub
xorl
pop
sahf
or
lock
call
loope
xchg
and
js
in
push
push
cli
mov
add
in
inc
inc
mov
jmp
scas
adc
push
mov
pop
jge
mov
jns
fwait
mov
push
or
cmp
inc
inc
iret
xor
hlt
dec
push
and
cmp
jmp
sahf
cmp
fisttpl
mov
adc
or
pop
mov
jecxz
inc
sub
jb
mov
int
testb
adc
adc
rolb
and
inc
cmp
ljmp
pop
and
cmp
pop
inc
add
out
stc
out
mov
add
and
sbb
add
jae
pusha
inc
push
aam
push
mov
sbb
insb
xor
lock
adc
in
or
icebp
sbb
jle
mov
cmc
mov
add
sbb
mov
test
and
sbb
dec
lock
pop
divl
add
call
cmp
icebp
pop
cld
jb
adc
popf
sbb
add
cmp
jno
push
shl
insl
sbb
ds
sub
sbb
and
push
iret
sub
jo
push
rolb
push
outsl
or
rolb
and
inc
dec
mov
or
or
jns
pop
subl
and
or
push
or
in
jl
xor
and
das
enter
and
std
repz
je
mov
fwait
je
bound
add
lods
xadd
mov
push
daa
idiv
jecxz
mov
int3
push
xchg
mov
or
inc
jmp
push
cmp
jo
jnp
aad
cmovnp
inc
sbb
scas
sbb
jo
cmp
push
xchg
loop
pop
jb
sbb
mov
ss
push
cmpb
pop
movd
shrb
add
sub
cmp
loopne
test
push
pmulhw
insl
dec
mov
jmp
cmp
push
jbe
repnz
inc
sbb
jo
inc
add
xor
or
adc
mov
xlat
sbb
push
mov
and
mov
xchg
movhps
lods
jbe
push
xor
fistps
int
ljmp
sarl
push
push
sbb
lcall
or
adc
jmp
pusha
sbb
shrb
les
shll
cld
sub
mov
mov
mov
pop
pushf
jle
push
mov
mov
mov
sub
or
adc
push
push
push
sbb
test
mov
mov
pop
test
out
lea
lock
push
pop
push
push
adc
mov
ret
fiaddl
jl
or
push
mov
jl
out
pop
pop
push
xchg
or
int3
out
cmp
sub
aas
int
xchg
mov
shrb
or
mov
xor
jle
movsl
cltd
mov
push
and
aaa
shlb
sbb
lret
jl
mov
mov
xchg
pusha
rclb
mov
mov
lea
ret
dec
mov
hlt
je
push
incl
mov
lea
ljmp
aaa
je
add
cmp
stos
les
or
mov
jno
and
mov
bound
jle
movsb
mov
out
icebp
hlt
cmp
sbb
mov
mov
or
je
inc
or
sbb
inc
insb
fistl
lahf
or
mov
or
dec
inc
and
addb
out
into
enter
pop
cmc
adc
stos
pop
push
stc
or
ds
inc
or
ljmp
fistps
bound
xor
data16
cmp
add
leave
ret
push
mov
sbb
hlt
test
pushf
fimull
call
xchg
jns
adc
push
mov
jno
lock
jp
loopne
jne
pop
mov
sub
fs
add
sub
test
je
sub
mov
pushl
pop
in
rclb
push
mov
adc
adc
cli
xchg
inc
pop
mov
mov
std
addr16
push
push
mov
push
pusha
push
mov
rolb
or
sub
mov
xlat
mov
test
jne
fs
inc
cmp
jl
jmp
pop
shlb
iret
out
or
pop
push
imul
push
pop
jmp
sub
add
push
loope
cmpb
pop
ret
mov
lock
xor
lea
jns
adc
loop
loopne
jne
sbb
bound
and
mov
dec
jl
out
mov
adc
stos
push
jmp
add
jns
add
add
push
dec
push
adcl
ret
and
scas
push
mov
xor
adc
or
lret
cmp
and
pusha
adc
adc
pop
ret
push
adc
pushf
in
sub
shr
jbe
xlat
jmp
and
push
dec
mov
pop
jmp
test
jne
pop
ja
sub
scas
and
pop
push
cs
out
dec
outsl
jg
fwait
inc
aam
push
mov
sub
pop
js
sub
pop
cmp
mov
inc
jg
cld
jge
jecxz
out
cwtl
cmp
je
outsb
shlb
add
sub
cmpl
pop
lea
push
mov
imul
divl
add
jmp
mov
addr16
add
in
lods
loop
or
mov
push
inc
mov
loope
leave
ret
icebp
cmp
cmp
push
std
or
in
add
or
std
or
adc
adc
adcb
mov
or
stc
jne
mov
rorl
in
add
subl
mov
inc
das
pop
lock
repz
push
ja
lea
decb
pushl
cmp
push
fwait
xchg
pop
popaw
push
or
pusha
fsubl
pop
pop
arpl
adc
into
or
pop
xor
out
jo
pusha
xchg
add
nop
test
je
inc
pusha
or
pop
cwtl
rorb
mov
pop
push
loop
jne
push
movsb
mov
or
divb
push
push
dec
mov
addl
pusha
lret
pusha
in
mov
push
push
push
popl
adc
in
and
pop
xchg
mov
loopne
push
enter
adc
adc
or
sub
mov
add
icebp
inc
js
aas
or
add
push
popa
popl
fwait
dec
push
sub
push
mov
cmp
clc
mov
aaa
fs
cmp
je
cmpl
outsl
sub
jl
adc
push
jne
push
push
imul
jo
ret
jl
pop
jmp
sub
and
mov
pop
cmp
jle
xchg
dec
dec
cmp
leave
push
inc
sub
or
or
sbb
enter
sbb
pop
adc
inc
clc
jg
inc
fimuls
movb
outsb
into
jno
or
in
int3
mov
and
mov
lods
adc
addr16
or
inc
inc
or
shlb
xorb
mov
ret
outsl
or
ljmp
add
pop
jb
das
inc
pop
and
inc
lcall
dec
lock
cmpl
adc
test
jge
pop
jns
in
dec
push
push
call
outsl
pop
mov
sub
add
push
lds
ss
pop
sbb
push
cli
pushf
mov
push
and
ficompl
mov
ss
int
fmuls
adc
ss
dec
insl
lods
clc
mov
ret
inc
mov
dec
adc
pop
lret
sub
aam
loop
add
clc
cmp
sbb
inc
push
addb
xchg
sub
cmp
xor
cmpl
jle
push
cmp
jne
inc
jmp
mov
mov
jle
mov
aam
ret
shlb
push
out
cmp
pop
pop
jecxz
inc
cmp
push
sub
call
cmp
mov
in
stos
mov
jbe
inc
add
mov
push
adc
adc
adc
pop
push
lcall
jl
xchg
ljmp
out
fimuls
jge
bound
hlt
mov
xor
ret
adc
lock
fs
outsl
lock
cmp
ret
push
lds
orl
mov
dec
cmp
sarb
xlat
xlat
sahf
and
mov
les
xor
int
and
or
jb
shll
lea
daa
or
push
shrl
add
or
push
and
push
je
fistpl
jmp
pusha
out
iret
punpcklbw
and
out
call
mov
mov
adc
mov
pop
pop
jmp
mov
shlb
fs
mov
mov
insl
dec
popa
or
mov
je
cmp
ss
sbb
pop
stc
divb
add
ljmp
js
mov
pop
cmp
xor
inc
out
fcmovne
mov
add
mov
or
adc
push
jnp
inc
xor
arpl
add
add
scas
mov
inc
and
push
mov
or
sbb
scas
iret
mov
das
or
shrl
ret
push
push
ror
push
icebp
and
jnp
jnp
lods
sbb
and
mov
sub
sbb
das
sbb
ret
out
sbb
add
push
stc
insb
inc
pop
in
lods
push
sub
into
adc
pop
push
int3
adc
cmp
ss
mov
ret
push
adc
cmpsb
in
or
mov
adc
xchg
pop
lods
adc
pop
mull
dec
mov
xchg
add
xor
cmp
ja
cmp
test
adc
jmp
stc
and
stc
adc
cmp
popf
cmpl
push
ss
repz
mov
push
cltd
pop
divl
jne
lock
mov
inc
cmp
sub
push
push
sbb
adcb
cmpsb
comiss
push
pop
mov
dec
sbb
adc
cld
imul
mov
sub
add
push
push
jbe
call
sbb
cmp
xchg
cmp
sti
lret
and
jmp
sub
dec
je
adc
je
sub
test
xlat
sbb
ss
mul
clc
mov
fs
or
push
and
cltd
ret
call
jmp
nop
jecxz
pop
jne
test
pop
fdivrl
cmp
rolb
cmovo
push
add
or
jg
fcomip
call
add
mov
scas
adc
or
xchg
movsb
sub
mov
push
mov
xchg
xchg
mov
loope
pop
add
cld
fimuls
std
mov
and
loopne
arpl
iret
xchg
movsb
push
xor
push
push
sub
jl
pop
pushl
js
inc
push
in
cmp
imul
test
xchg
mov
adc
jmp
not
loopne
cmp
je
cmp
and
jmp
inc
xchg
cmpsb
push
lcall
mov
fldz
andl
or
cmp
jmp
pop
cmp
sbb
and
push
jmp
in
xchg
mov
and
jmp
data16
sbb
mov
mov
repnz
and
jns
out
das
inc
pop
push
out
jle
inc
pop
inc
lahf
xchg
push
push
fs
lods
scas
cld
sbb
cld
cmpsb
js,pn
push
mov
fstl
dec
imul
aaa
outsl
dec
adc
and
lret
aaa
sbb
in
or
clc
movb
add
xchg
lret
or
adc
pop
sbb
das
dec
call
outsl
cli
push
dec
mov
pop
push
lea
push
addl
xchg
or
push
lea
jle
xlat
dec
cmp
mov
cmp
inc
mov
or
add
sub
subb
inc
dec
or
pop
sbb
sbb
push
idiv
imull
pop
ja
push
sbb
lea
cmovs
mov
adc
push
cmc
push
jnp
push
call
daa
lock
in
push
ja
ja
mov
sub
popf
cmpsb
rcll
sbb
stos
push
test
mov
sbb
lods
in
add
push
rolw
adc
shrl
or
loopne
int3
inc
push
add
mov
imul
imul
stc
sbb
dec
mov
adc
dec
shlb
js
adc
xchg
adc
jae
ljmp
test
pop
popa
push
aad
dec
rclb
mov
and
push
mov
cmp
xor
mov
imul
cmpsb
frstor
shl
pop
push
inc
cmp
lock
sbbb
push
push
push
aad
repz
jp
cmp
hlt
mov
pop
xor
mov
dec
xor
mov
and
sahf
imul
push
mov
pop
lock
je
mov
lret
mov
stos
jo
mov
pusha
cmp
push
faddl
fucomip
add
mov
sbb
clc
push
push
sbb
hlt
dec
pusha
adc
outsb
xor
xchg
mov
ljmp
adc
clc
push
xor
jne
push
mov
pushl
mov
adc
lods
mov
fimull
push
mov
ss
dec
idivb
popf
mov
negl
pop
cld
je
dec
pop
mov
sub
ret
ret
add
bound
in
std
out
imul
mov
shll
mov
cmp
inc
cmp
cmp
sbb
pop
pop
leave
jae
mov
mov
jno
mov
lock
ret
pop
sub
rclb
repz
mov
adc
sbb
cmp
push
and
add
sbb
push
sub
push
and
cmp
adc
lcall
fistps
jmp
adc
fisttpl
enter
adc
cmp
fs
inc
xchg
xchg
jbe
dec
shll
xor
dec
or
jnp
lahf
push
insb
mov
xor
orb
adc
xchg
and
lea
decl
neg
sbb
and
test
aas
stc
dec
and
sbb
adc
out
int3
push
push
mov
call
cmpsl
inc
cmp
ljmp
add
test
inc
add
fadds
mov
mov
jge
je
push
mov
sub
outsl
inc
lock
pushl
and
repnz
cmp
mov
and
loopne
rcll
clc
fists
mov
xchg
mov
cmpl
je
cmpl
xchg
jne
adc
dec
je
mov
cmp
xchg
sbb
cwtl
pop
push
add
mov
jg
jmp
mov
jge
pop
push
andl
push
pop
ror
rorb
mov
pusha
mov
mov
popa
pop
lds
popf
decl
add
sub
jl
dec
test
cmp
hlt
movb
add
lock
iret
lret
fldz
bound
sbb
lock
cmpsb
cld
mov
dec
aas
mov
aaa
push
and
mov
mov
je
loopne
lea
xchg
pop
fs
add
outsb
sarl
or
test
inc
pop
loopne
out
mov
and
popf
push
jge
out
adc
xor
pusha
mov
jns
mov
test
and
and
fidivrl
jnp
pop
lea
inc
dec
push
cli
je
cmp
pop
jbe
scas
pop
pusha
mov
sarl
mov
cmp
mov
shrb
int3
fmuls
push
sub
or
nop
jns
push
jo
jp
push
enter
cmp
hlt
lret
adc
jl
pop
insb
movsb
rolb
andl
daa
cmp
cmpsl
test
and
xor
push
mov
lods
cmp
scas
jo
or
dec
lock
addr16
push
pop
sbb
sub
push
cli
xlat
call
xor
adc
sbb
push
mov
hlt
mov
push
cltd
push
jno
mov
outsb
out
movsl
sbb
test
icebp
mov
adc
mov
xor
movsl
imul
pusha
jno
mov
push
ljmp
iret
rol
aam
add
and
add
outsb
pop
push
cmp
pop
rcrl
leave
and
popf
lock
faddl
es
pop
or
fcoms
sbb
cwtl
rcrl
sbb
ds
rorb
faddl
lahf
or
sbb
or
jne
pushf
and
fidivs
push
adc
fstps
lods
bound
dec
push
add
push
subl
sub
lods
test
rcl
xor
xchg
pop
dec
dec
add
popa
leave
or
jmp
sbbl
cltd
and
loope
adc
inc
js
ret
cmp
daa
push
cmpsb
fs
mov
inc
mov
sbb
in
inc
adc
and
xchg
test
adc
pop
mov
cmp
xchg
or
cld
je
cmpb
mov
popf
cmp
cli
je
cwtl
pop
roll
sub
xchg
xchg
push
stc
push
xor
mov
sub
push
push
cmp
add
jmp
adc
pop
cmp
xchg
enter
jmp
nop
mov
and
bound
xchg
xlat
orb
cmp
shlb
mov
js
pop
mov
push
loopne
push
adc
push
in
adc
imul
xor
push
cmp
outsl
and
sbb
inc
fisttpll
cmp
inc
cmp
xchg
xchg
out
jo
stc
or
int
fsub
nop
pusha
in
mov
jne
insb
andb
imul
push
cmp
mov
mov
das
out
fwait
sbb
cmp
int
jl
mov
cltd
mov
add
sar
push
popf
jmp
adc
jl
in
fmuls
cld
cmpsb
lock
scas
out
mov
adc
mov
movsb
push
jo
fcomip
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
jecxz
iret
outsl
aaa
jp
mov
add
jne
or
push
jbe
adc
jmp
test
pop
insb
cmpsl
int
and
jmp
mov
sti
in
mov
cmp
mov
mov
mov
adc
mov
fldz
call
push
ljmp
movsb
sti
sub
clc
out
mov
test
pop
lea
cltd
idivl
dec
scas
out
inc
mov
xor
mov
jl
icebp
jne
mov
fs
or
xchg
arpl
mov
test
jle
cmp
lahf
sahf
das
outsl
fwait
xor
xchg
and
lods
lea
clc
add
ds
loop
movl
cmp
mov
dec
sub
jge
jmp
mov
lds
fildl
pusha
or
add
mov
or
enter
or
stc
mov
dec
sub
mov
mov
pop
add
pop
add
fisubrs
cmp
add
inc
mov
pop
mov
and
cmc
xor
cld
clc
fidivl
jmp
outsb
mov
mov
stos
sub
sahf
lods
jmp
outsb
mov
pop
add
jl
dec
call
push
mov
aad
sub
fmull
cmp
push
lea
push
or
jno
f2xm1
aam
push
adc
pop
loope
inc
and
mov
mov
pop
pop
mov
je
je
popa
push
push
je
or
pop
mov
jne
push
jmp
lea
nop
jle
add
push
push
push
pop
sti
xchg
roll
xchg
pop
mov
cmp
mov
adc
nop
arpl
into
mov
and
test
call
ror
sbbb
aaa
jae
pop
mov
ret
adc
adc
loopne
and
jne
sbb
sbb
rcll
pushf
outsl
sub
dec
loopne
jmp
leave
lods
add
xchg
pop
and
pop
push
adc
cmp
mov
mov
out
mov
push
mov
push
mov
hlt
orl
jns
push
add
pop
pop
push
mov
ja
aad
sub
dec
push
dec
add
push
arpl
or
enter
loop
loope
rcr
roll
pop
and
pop
add
jg
test
insb
lock
popa
push
and
out
adc
fs
arpl
push
xchg
adc
cmpsl
loope,pn
inc
sbb
adc
fs
int3
and
push
push
mov
xor
pop
push
in
stc
pop
sbb
movnti
xor
mov
mov
repz
ficoml
shll
insb
leave
push
xor
leave
jge
orl
and
sub
mov
inc
loopne
sbb
jno
pop
dec
rcll
xor
dec
mov
inc
ret
pop
xor
pop
jmp
pop
cmp
mov
leave
clc
lods
sub
clc
mov
test
jne
mov
sarb
dec
sub
sar
mov
int3
xchg
dec
dec
adc
pop
add
pop
jge
pusha
rcll
mov
jmp
lcall
jmp
rcrl
inc
mov
nop
lock
hlt
test
dec
rorl
dec
rorl
add
shrb
inc
sbb
repz
and
cmp
mov
jge
and
jmp
sub
sbb
sub
or
adc
rclb
shlb
rorb
into
mov
daa
negb
lods
adc
sub
xor
cmp
dec
test
xor
push
pop
pop
fstpt
xor
clc
or
and
push
je
test
je
lahf
push
test
jecxz
mov
or
or
aam
fbstp
and
sbbl
pusha
sub
push
std
xor
or
movl
xchg
insb
add
test
mov
icebp
xchg
jmp
into
mov
inc
sub
mov
xchg
sbb
lods
subl
arpl
and
or
mov
enter
or
push
rcrl
pop
push
pop
push
movsb
push
nop
in
subb
xchg
dec
jae
cli
ret
test
je
and
lock
jg
int3
xchg
mov
push
ret
jne
push
dec
mov
mov
std
xchg
das
mov
jmp
fdiv
xchg
popf
inc
arpl
inc
or
mov
push
mov
les
dec
adc
xchg
icebp
lods
in
xchg
mov
js
jns
hlt
arpl
test
xchg
call
or
mov
or
ror
push
add
fisubrs
push
out
xor
in
inc
or
repnz
add
pop
or
fsubrl
dec
add
sub
jb
inc
fdivs
and
pop
sub
inc
xor
mov
inc
insl
mov
push
cmpsl
lcall
mov
mov
repnz
mov
mov
call
or
pop
aad
rcll
dec
shrl
xchg
dec
pop
rol
inc
cmp
jecxz
imul
xchg
test
add
inc
fmul
push
push
xor
xor
pop
les
inc
repz
push
xor
add
filds
scas
lea
je
xorb
outsb
jge
or
add
adc
and
test
dec
sbb
cmp
in
stos
sbb
and
push
pop
or
fistpl
jg
ret
adc
or
xor
je
leave
mov
adc
or
test
mov
mov
pop
in
icebp
fldt
mov
jne
push
test
pop
mov
orl
pusha
scas
add
in
scas
add
orb
inc
rcr
jmp
add
cs
popf
jge
jno
inc
pusha
mov
mov
pop
or
call
hlt
hlt
in
add
mov
sbb
stc
sub
nop
or
add
dec
test
pop
or
fs
pop
fadd
aam
call
adc
sbbb
fldl
pusha
int
push
or
jp
mov
jle
js
leave
mov
push
sbb
jg
mov
add
or
push
cmp
shl
mov
lods
or
add
mov
fdivl
loopne
dec
fadd
sbb
inc
mov
mov
scas
adc
jge
jl
je
and
bound
fsubrp
or
rclb
adc
push
or
mov
call
cld
outsl
icebp
int3
mov
test
sbb
arpl
mov
sbb
je
aam
push
scas
lock
mov
xor
mov
or
xchg
rcrb
bound
push
jmp
mull
or
stc
sub
repnz
je
addb
push
fadds
adc
pop
enter
mov
xor
in
movsb
or
ljmp
cmpsb
pop
lcall
add
add
mov
inc
push
into
out
fchs
adc
pop
xor
movl
popa
push
pop
pop
xor
neg
sbb
bnd
xor
inc
and
insl
mov
jo
dec
push
add
or
mov
dec
cltd
pop
sbbl
pop
jbe
lods
lahf
sarb
add
pop
mov
gs
int3
or
fidivl
push
mov
in
fmuls
add
cmpsl
mov
mov
sbb
les
shlb
out
push
xchg
dec
push
or
jne
pop
push
shrb
hlt
mov
arpl
or
aas
fcomps
push
sbb
pop
sbb
add
ss
mov
add
gs
inc
in
lds
in
sub
or
add
cwtl
outsb
dec
inc
jp
lcall
loope
push
andl
das
movsb
xor
add
adc
test
adc
pushf
mov
scas
es
sub
inc
adc
add
dec
adc
sbb
sub
into
push
lcall
adc
rorb
push
dec
lds
mov
icebp
add
or
scas
rcl
test
mov
xchg
pop
shlb
mov
add
push
loop
movsb
mov
sub
adc
shlb
inc
test
dec
xor
pop
sub
mov
mov
mov
mov
sub
push
scas
xorl
mov
xchg
nop
popa
and
pusha
push
test
push
adc
daa
sbb
push
cmp
adc
and
cmovbe
mov
loopne
adc
sbb
test
sub
jmp
orl
and
lea
cmp
mov
fimuls
inc
and
cwtl
or
fnstcw
add
sub
add
mov
enter
adc
mov
add
add
daa
sub
aas
sldt
fmull
iret
lret
pop
hlt
mov
push
inc
xor
xchg
mov
cld
rclb
or
imul
dec
xor
les
sbb
repnz
sbb
inc
jmp
xor
and
pop
outsl
sub
or
add
pop
cld
inc
mov
xor
loope
lods
scas
jno
add
push
push
inc
add
sbb
sbb
add
lcall
push
or
mov
insb
inc
adc
push
outsb
test
add
xor
jl
or
pop
enter
or
push
addl
aas
je
mov
jmp
xor
mov
in
jne
leave
popf
outsl
push
adc
pop
push
sub
or
insl
jb
sbb
pop
sub
in
insb
inc
popa
movsl
lock
mov
or
dec
dec
mov
push
outsl
adc
jg
pop
inc
js
jo
es
filds
xor
adc
movsb
sbb
imul
or
adc
or
mov
push
mov
jl
int
cmp
push
dec
nop
mov
or
jg
inc
and
idivb
jo
jle
jp
daa
std
daa
fcomps
inc
inc
sahf
cmp
je
ja
orl
rorb
add
mov
lret
add
fsubrl
inc
mov
into
fmull
jb
sbb
inc
xchg
jnp
or
or
cmpsl
jb
and
jne
js
dec
push
test
jno
movsb
push
test
outsl
outsl
testb
in
fwait
movsl
je
and
gs
push
pop
mov
es
mov
cmc
out
mov
mov
xorb
inc
sahf
sbbl
or
jo
xchg
or
rclb
or
ror
xor
xor
cli
inc
xor
adc
add
repz
cmp
insb
or
jns
dec
enter
lret
or
xor
add
hlt
push
fmulp
add
sti
std
je
xchg
cmp
push
sub
mov
jl
or
cli
ja
sub
sub
push
push
jns
test
sbb
call
dec
in
imul
lret
incb
adc
inc
inc
or
sbb
and
xlat
or
mov
loop
mov
sub
add
inc
js
dec
shrb
sbb
add
ja
cld
push
outsb
mov
shll
imul
cs
mov
lret
add
out
adc
adc
add
xorb
xchg
outsb
xchg
sarb
fld
or
nop
dec
sahf
sub
adc
fldl
sahf
adc
push
xchg
or
bnd
inc
fsts
jbe
sbb
push
push
adc
nop
xchg
out
inc
add
add
and
call
mov
sub
cmp
cmp
shlb
mov
mov
xchg
lret
adc
aad
cmp
ds
mov
pop
pop
adc
or
mov
icebp
or
pop
pop
inc
cmpsb
int
push
fsubl
lock
push
dec
xchg
and
push
shll
pop
in
push
xorb
test
cwtl
push
mov
pushf
add
inc
adc
stc
fmull
dec
fisttpl
stos
lea
and
push
jnp
adc
cmp
sbb
push
mov
ret
sbb
decl
sbb
jnp
notl
mov
out
lea
andl
mov
inc
cmpsb
adc
mov
out
movups
pop
inc
push
lcall
lea
je
xchg
inc
adc
mov
lea
pop
add
xchg
shlb
pusha
lret
mov
and
or
in
inc
pusha
sub
rcr
cmp
sub
pop
push
cld
xchg
pop
test
push
jbe
mov
pushl
push
push
shll
pop
sbb
mov
and
dec
or
pop
test
dec
fisubl
test
sbb
dec
fdivr
or
jne
push
sar
cmp
push
xor
int3
cmp
test
jge
push
flds
xor
movl
pop
adc
mov
or
mov
sub
dec
sbb
mov
movsb
push
pusha
mov
insb
loopne
insb
test
cltd
inc
add
mov
adc
push
push
jl
rorb
jge
aas
lcall
neg
mov
sub
js
shll
dec
xor
js
xchg
dec
cmpsb
dec
pop
adc
xchg
mov
lock
push
jb
test
xchg
lcall
jl
sbb
fildl
adc
cmp
jns
add
add
mov
sbb
xchg
push
xor
add
lock
inc
push
cld
inc
add
inc
add
push
out
inc
cmp
mov
fsin
sbb
fcmove
jns
into
mov
test
pop
out
add
inc
push
sbb
pop
lods
cmp
outsb
movsb
rorb
cld
cs
inc
dec
sub
push
and
cltd
lcall
add
sub
push
cltd
dec
xor
push
ljmp
pop
push
and
ljmp
mov
adc
sbb
enter
orps
ret
and
pop
cltd
dec
outsl
xor
push
test
cmp
mov
lods
sub
adc
mov
dec
std
mov
push
cwtl
mov
js
sahf
mov
cmpsl
push
push
sub
pop
mov
cli
sub
push
jmp
das
cmp
pop
mov
mov
sub
or
nop
mov
mov
mov
test
sub
in
and
xor
dec
mov
and
sbb
sbb
leave
sbb
and
pop
adc
inc
lods
xchg
inc
movmskps
imul
push
rorb
adc
hlt
fdivp
cmp
or
les
sub
outsb
pushf
es
add
xchg
scas
mov
fs
in
inc
pop
repz
loope
cs
loop
pop
hlt
setne
je
loopne
pop
repz
sti
aas
push
push
push
idiv
mov
mov
cmp
jne
push
push
push
adcl
sbb
push
ja
dec
cmp
int
or
adc
push
sbb
pop
rclb
and
adc
push
loope
push
sti
gs
mov
mov
xchg
or
inc
insb
and
or
push
and
cmp
pop
push
sbb
sub
dec
mov
add
sete
jne
push
in
sub
vphaddwq
sbb
add
mov
iret
mov
add
push
andb
sub
test
push
mov
movsl
rorb
fwait
pusha
push
or
insl
inc
orl
je
jno
add
and
or
pop
sub
adc
or
or
cmp
push
push
je
xor
or
movsl
jmp
aad
addl
push
sub
aaa
lcall
iret
out
inc
lock
lcall
pop
pop
insb
or
or
ds
sbb
outsb
fwait
add
scas
inc
cmc
push
xchg
stc
sbb
pop
sub
dec
and
or
xchg
adc
dec
cmpsl
xchg
adc
and
jne
and
push
inc
push
or
sbb
loopne
jo
fs
bound
jbe
ret
dec
pop
es
in
in
in
insb
lds
jmp
repnz
scas
xchg
mov
inc
fnsave
push
add
mov
inc
mov
std
mov
out
mov
xlat
and
pop
into
push
adc
gs
hlt
push
mov
lock
sahf
mov
mov
lret
xor
add
jle
push
xorb
mov
xor
icebp
cmp
ljmp
or
ljmp
or
push
pop
shlb
push
cmp
or
test
cli
add
cmp
cmc
push
cmp
leave
jb
mov
ret
ljmp
pop
insb
and
add
cmp
xor
mov
xchg
icebp
sbb
sbbb
cwtl
add
sbb
sub
cld
jo
pushw
pop
lods
ja
shlb
insl
push
clc
jb
xrelease
jl,pn
push
push
push
sbb
repz
or
fidivs
lahf
lcall
add
push
cmp
popa
fmuls
sahf
cmp
loope
notl
jbe
stos
icebp
sub
out
jno
mov
inc
add
sub
ret
jno
sarb
orb
sbb
icebp
popf
hlt
mov
add
subb
sub
je
ljmp
loopne
negl
daa
xchg
sub
pop
aam
jmp
mov
add
mov
xchg
ret
sbb
lds
lret
mov
stc
dec
test
sti
daa
push
cmp
pop
xchg
push
mov
xchg
mov
pop
inc
xor
into
lock
cmpsb
imul
cmp
je
cmp
je
lcall
lea
add
cmp
jae
push
xor
sbb
fcomps
shl
and
daa
sub
adc
mov
push
add
add
cmp
ja
push
mov
jmp
cmp
dec
hlt
jge
mov
cmpsl
ret
fisttps
testl
or
mov
ljmp
shr
fldlg2
push
ljmp
pusha
pop
test
sar
or
je
test
jl
mov
cmp
jg
loope
dec
insl
mov
shl
push
cmp
push
jmp
inc
or
mov
dec
adc
adc
and
pop
or
adc
xchg
pop
nop
pop
imul
push
pop
movsl
pop
add
fldenv
xor
sbb
jae
add
pop
or
loope
xchg
inc
scas
jae
sbb
aas
pop
jns
add
imul
jge
xorb
pop
and
mov
adc
add
iret
es
out
cmpsb
mov
mov
cltd
cmp
test
push
xabort
sub
dec
push
xlat
sbb
sub
push
cmpsb
cmp
insl
and
jge
or
cli
cmp
inc
jo
pop
mov
mov
mov
jle
shrb
mov
cmp
adc
jo
dec
adc
data16
add
push
cmp
ret
push
sbb
push
lret
js
jp
dec
adc
push
mov
rcrl
push
mov
or
push
pop
sub
into
push
popw
hlt
mov
pop
add
lods
js
and
int3
cmp
out
mov
andl
andl
icebp
inc
xor
ss
mov
jb
lea
lds
mov
loop
rorl
xor
aam
bound
or
lods
int
movsb
cmp
sub
insb
sbbl
stos
push
sbb
lcall
push
cmp
xor
add
les
stos
mov
add
es
inc
xchg
adc
add
outsb
push
cmp
jbe
mov
outsb
or
sub
add
inc
pop
xchg
data16
adc
inc
push
add
sub
pop
pop
jbe
push
xchg
lock
push
daa
nop
cltd
cli
adc
icebp
mov
scas
test
mov
inc
lahf
ret
mov
cmp
mov
popa
add
or
sbb
pop
je
fistl
or
in
stos
test
push
test
and
inc
pop
xor
xchg
pop
cmp
cmp
mov
jne
sub
push
push
popf
scas
test
xor
push
aam
add
lods
mov
loopne
dec
in
inc
test
xor
mov
mov
and
push
push
adc
cmp
std
jmp
push
or
push
push
pop
xchg
dec
adc
dec
jne
mov
adc
add
push
sti
adc
bound
jae
std
jge
mov
pop
mov
sbb
push
aas
cmp
loop
push
mov
xchg
inc
ret
je
mov
lock
fistpll
pop
daa
push
sub
xchg
cmpsb
pop
leave
sbb
inc
cmp
insl
sub
sbb
or
sbb
hlt
shrb
push
aaa
nop
test
orb
nop
outsb
mov
test
mov
xorb
push
mov
popa
cli
lock
movsb
inc
dec
rcll
mov
mov
repz
rorl
call
ja
mov
aad
ret
dec
add
push
adcb
add
das
in
push
out
xchg
lahf
cmp
push
lcall
sbb
push
xor
gs
jl
je
sub
gs
adc
adc
into
inc
xor
adc
mov
push
add
scas
es
insb
hlt
mov
lahf
xor
or
sub
sbb
test
leave
inc
les
lods
pop
test
mov
loope
enter
lds
pop
cmc
jle
clc
xor
mov
ror
ja
popa
jmp
push
add
adc
int3
xchg
dec
lcall
xorl
sub
shlb
push
mov
insb
add
nop
aas
mov
pop
jmp
pop
or
scas
dec
sahf
fstpl
mov
sub
adc
ss
push
add
push
mov
or
lret
jns
mov
add
add
and
nop
mov
test
sbb
mov
sbb
push
mov
pop
lock
xlat
outsl
sub
fldl
mov
and
add
adc
add
sbb
xlat
add
iret
add
jns
mov
jbe
jns
add
cld
jne
jmp
push
push
in
jle
or
jno
push
sbb
jmp
bound
outsb
mov
push
dec
adc
inc
pop
and
or
loopne
mov
and
popa
arpl
ja
imul
pop
pop
mov
dec
add
xor
sub
xlat
mov
xor
xchg
or
cmp
push
jmp
cmp
cmp
leave
sbb
aas
insb
jno
push
pop
cmc
add
mov
inc
cmp
push
jo
fidivs
push
test
adc
popa
aad
in
adc
dec
jp
pop
loopne
add
loopne
fnsave
mov
sbb
shlb
mov
repnz
cs
sub
or
push
lods
test
fidivs
or
mov
add
and
hlt
add
push
xchg
pop
mov
stc
mov
sbb
pop
push
loop
cltd
fcoml
push
fdiv
or
add
lods
jmp
stos
add
pop
mov
pop
out
lea
add
loopne
add
orl
je
orl
mov
pop
fs
repnz
push
jae
xor
rcrb
push
xor
adc
fmuls
cmp
add
enter
fsubl
xchg
enter
int
enter
outsl
leave
push
and
ret
sub
xor
out
test
jb
lods
ret
sti
loopne
push
inc
out
adc
aad
pop
xchg
xor
cmp
push
sti
sub
jne
sub
jne
xor
push
dec
inc
adc
pop
dec
push
push
cld
cld
xor
push
push
stos
mov
pop
inc
ficoms
xor
mov
push
mov
test
mov
add
in
addb
sti
lea
push
lock
lret
sti
cmp
sub
mov
imul
jo
fimuls
loopne
jg
adc
lock
sbb
call
loop
lods
and
pop
hlt
shr
sub
xor
rolb
push
sub
sub
add
inc
pop
and
iret
push
push
add
push
xlat
mov
popf
jno
xchg
jle
jp
mov
adc
push
add
or
push
mov
call
lods
hlt
aaa
cmp
jo
enter
pop
mov
dec
xchg
push
mov
pop
push
dec
mov
add
push
pusha
adc
add
or
dec
punpckhbw
jmp
xchg
add
push
push
sub
arpl
adc
insb
into
mov
call
movsb
test
out
inc
imul
aam
add
push
add
mov
push
call
ret
sbb
aam
imul
mov
cmp
je
sbb
push
cmpl
leave
pusha
movzwl
das
xchg
mov
clc
cmp
xchg
push
xchg
pop
into
pop
and
arpl
dec
mov
jle
jbe
adc
push
sub
sbb
pop
lods
mull
shrb
pop
and
lahf
pop
dec
incl
sbb
add
add
sub
jecxz
in
and
in
sbb
push
mov
sbb
mov
or
mov
mov
cmp
je
push
lea
sub
and
frstor
arpl
cmp
sub
push
sbb
andb
imul
pop
or
adc
sarb
xor
adc
call
cmp
push
adc
mov
sbb
inc
and
mov
shrb
cmp
clc
add
hlt
push
in
xor
adc
push
sbb
cs
push
mov
neg
push
add
movsb
call
call
loope
in
jl
or
mov
sbb
inc
std
scas
je
lods
mull
test
ja
aas
push
dec
movsl
jbe
movsl
push
push
xor
push
jo
or
push
cmp
je
fcmovbe
push
push
xchg
stos
inc
pop
add
add
fimuls
ss
mov
and
cmp
je
push
push
aas
sub
sbb
sub
or
dec
pop
mov
dec
lods
mov
fdiv
mov
mov
adc
inc
xor
adc
imul
adc
push
push
push
in
imul
cli
subb
rorb
or
into
gs
xor
sbb
add
xchg
mov
add
cmp
gs
mov
cmp
shlb
cmp
dec
cmpl
je
icebp
mov
pop
or
and
jo
push
shrl
adc
and
adc
ret
add
jb
pop
ds
dec
popf
cmpb
inc
sbb
xor
jns
imul
and
jno
shr
call
lea
xchg
fcomip
in
cmp
je
cmp
je
cmp
jne
add
loopne
jbe
cmpsb
mov
cmc
je
mov
call
outsb
or
jno
xor
jmp
outsl
outsb
pop
sahf
loopne
clc
mov
cmp
xor
adc
mov
pop
out
sub
add
adc
addb
jmp
enter
dec
jg
jno
cmp
jne
xchg
cwtl
jl
push
push
adc
aad
sbb
or
add
jnp
cmp
stc
test
jl
rorl
mov
xor
cmc
rclb
xchg
aam
imul
and
loopne
add
sarl
icebp
cmpb
or
jns
aad
ja
int3
sub
sbb
inc
rclb
push
ret
jbe
aam
mov
call
add
test
lcall
mov
cmp
or
push
inc
adc
addl
outsb
add
add
fs
jmp
jge
cmpsb
in
xor
xchg
mov
mov
cmp
add
mov
cmp
out
mov
je
cmp
jne
mov
sbb
add
fistpll
inc
lock
mov
pop
dec
xor
popa
adc
jne
jmp
testb
lcall
adc
sbb
cli
cmp
jbe
jne
orb
fs
sti
in
inc
cmp
fs
dec
inc
jmp
inc
and
aad
jo
or
loopne
mov
lods
add
dec
adc
pop
loope
dec
push
clc
dec
out
lahf
ficoms
je
mov
lea
adc
mov
and
lahf
call
inc
xor
sub
jge
pop
sahf
jne
cmp
and
mov
cmp
push
mov
adc
je
sub
adc
or
ja
shrb
enter
roll
cmp
scas
cld
add
push
cmp
push
rclb
jp
push
sbb
cs
outsl
int
inc
sub
popa
xchg
mov
jne
mov
add
cmp
mov
insl
aad
mov
or
insl
push
mov
aaa
jb
sti
lahf
cmpsb
mov
shl
add
jmp
cwtl
push
cmp
inc
aas
les
inc
orl
mov
je
fs
jne
xor
and
lock
test
sub
dec
or
add
or
aas
push
jae
mov
jmp
dec
cwtl
xor
cld
bound
test
sub
lea
dec
popa
pop
sar
inc
incl
sub
xor
push
fucomi
gs
rorb
cmp
jg
or
jge
fistl
cmpb
or
jle
es
lcall
push
sub
and
pop
cmp
jl
pop
jle
push
out
inc
test
add
shll
and
jbe
mov
adc
loopne
test
fwait
and
or
je,pn
test
jne
ds
aas
and
jb
xchg
or
je
je
xor
and
adc
movb
inc
mov
push
sub
push
add
add
inc
add
push
xchg
jno
mov
inc
and
je
mov
inc
outsl
push
mov
push
mov
or
jae
add
inc
add
inc
push
es
xor
fwait
jp
insb
jne
pop
add
push
movl
sub
mov
jo
push
push
cwtl
enter
imul
xor
xor
pop
data16
fmul
icebp
or
rorb
mov
jecxz
or
call
cs
es
sub
cmpsl
ret
jne
xchg
shll
lods
push
sub
sbb
lahf
mov
movb
push
inc
pop
popf
mov
pushl
sub
faddl
cmp
in
pop
add
cmp
mov
xchg
daa
xor
loopne
inc
das
mov
or
push
or
cmp
pop
cwtl
xor
ficompl
lahf
inc
mov
jne
daa
mov
add
inc
pop
ds
dec
fadds
and
and
jae
mov
outsb
je
ret
insl
and
cmp
je
icebp
jo
sub
pop
in
mov
pushf
push
fsts
sti
add
and
ret
sbb
jbe
pop
mov
or
cmp
push
stc
and
pop
add
jo
ds
or
add
stos
movb
mov
push
aam
xor
pop
mov
or
xchg
mov
add
xor
push
shr
pop
es
jl
add
cmp
mov
sbb
addb
mov
mov
scas
mov
or
xchg
mov
fdiv
and
popa
hlt
pop
xlat
cld
sub
pop
pop
add
inc
xchg
xchg
add
and
loop
add
mov
les
jne
sbbl
dec
jae
cmp
add
shlb
pop
pusha
sti
pusha
jb
cs
push
inc
or
and
add
inc
fisttpl
sti
imul
lea
cltd
add
xor
pushl
pop
sbb
pop
repz
lods
dec
mov
or
add
into
push
mov
inc
push
and
push
outsb
dec
sub
jnp
in
jmp
xchg
jne
insb
in
mov
add
daa
cmpsl
addb
xchg
mov
bound
push
ret
pop
inc
mov
or
sub
push
push
leave
add
and
mov
pop
leave
or
xchg
dec
push
test
and
fs
stos
test
lahf
cld
aam
and
add
sbb
call
jle
setne
inc
mov
sub
rorb
add
rcl
fmul
sbb
or
cld
loope
mov
xor
pop
cmp
test
sub
in
ds
dec
xor
es
push
rclb
adc
out
and
xor
cmp
jne
adc
push
push
fdivl
jne
sbb
ja
lods
cmp
jnp
das
movl
add
and
sub
bound
into
cmpl
dec
adc
and
mov
cmpl
sub
push
cmc
js
mov
push
and
jb
fcomps
inc
pop
shr
adc
sbb
mov
lds
lds
add
inc
xchg
inc
fsubs
in
loope
jge
pop
and
aaa
sbb
das
mov
inc
jne
cwtl
dec
out
test
pop
mov
adc
jbe
js
push
aam
fsubr
cmp
fsubrs
mov
test
jo
push
push
gs
push
and
loopne
in
push
call
xor
shll
xchg
dec
adc
sbb
jg
fwait
inc
inc
pushl
jmp
pop
inc
cmp
je
fildl
add
pop
jne
les
aam
and
add
cmp
mov
test
push
inc
incl
flds
dec
data16
mov
fldpi
insb
test
movsb
push
adc
cltd
test
jge
and
je
jl
push
sarb
clc
je
jmp
add
mov
push
and
inc
or
sahf
cmp
or
or
dec
jno
loope
nop
jmp
inc
push
data16
mov
cmp
sbb
lods
lock
push
js
mov
insb
cmp
inc
mov
das
orl
or
mov
or
pop
movsl
jne
iret
sub
es
add
call
leave
test
dec
sub
xor
cmp
cmc
mov
mov
add
mov
jg
inc
pop
lret
push
push
add
xchg
lock
push
mov
push
das
mov
jmp
imul
cmp
jne
push
jbe
jbe
scas
out
cmp
movq
and
mov
xor
add
sub
xchg
lret
in
sub
xor
cmp
cmp
or
cmp
push
sbb
jg
fcoms
pop
ret
sti
jnp
inc
mov
mov
in
mov
movsb
or
call
xchg
push
and
add
orb
aaa
inc
mov
push
xchg
push
ljmp
sbb
loopne
jb
lcall
enter
dec
in
pop
sbb
push
adc
sub
adc
insl
xchg
pop
sarl
aas
cmp
popf
xchg
out
ret
sahf
insl
pusha
mov
mov
test
or
or
ret
decl
cmp
add
mov
xor
in
dec
loopne
push
add
subl
pop
ror
fwait
inc
dec
movl
cmp
push
loopne
nop
cmpb
mov
or
or
inc
inc
inc
repnz
pushf
data16
test
mov
cltd
mov
arpl
test
or
or
add
fisttpll
popa
pop
lcall
loopne
movsb
or
sar
mov
dec
xor
inc
push
push
xchg
xchg
stc
loopne
in
jne
cld
aam
loopne
rorb
cmpsb
test
cmc
or
out
sub
je
mov
jmp
pop
rcrb
lcall
inc
cmp
sub
pop
jo
rclb
jnp
adc
inc
jl
adc
fucomi
ud0
push
jg
insb
add
mov
lea
repnz
aas
jnp
ret
faddl
loope
xor
cmp
jb
jne
outsb
xor
cmp
orb
scas
lea
and
add
jo
xor
or
movl
push
xchg
rclb
fisubl
xor
in
sbb
sub
out
sub
push
xchg
out
xchg
mov
jp
orb
jg
stos
jne
add
lret
out
aam
fstl
xor
mov
mov
inc
lea
sbb
push
adc
mov
data16
idiv
push
adc
lock
xchg
jo
daa
shrb
sahf
dec
mov
enter
push
lcall
pop
or
movl
or
cmp
xchg
loopne
out
les
xchg
push
mov
inc
sbbb
dec
add
in
cmpsl
jg
add
dec
xchg
sub
push
and
adc
inc
lods
xorl
enter
or
int3
push
pushf
je
adc
pop
leave
xorl
mov
dec
mov
push
jl
mov
inc
popl
push
xchg
adc
cltd
dec
negl
inc
mov
popa
adc
pop
pushf
jbe
sub
scas
dec
cld
cmpsl
testb
aaa
sub
sub
add
sub
mov
and
sbb
sub
loop
loopne
mov
js
inc
jmp
out
and
push
pop
mov
mov
clc
movl
loopne
inc
jmp
imul
int
dec
sbb
push
xor
cmp
adc
and
enter
and
nop
or
jl
cmp
pop
ja
add
mov
mov
cmp
jmp
sbb
xor
push
inc
js
pop
cld
add
sub
dec
scas
pop
leave
sub
add
or
jmp
jl
sbb
pop
mov
sahf
xchg
push
lcall
hlt
mov
mov
add
in
rolb
or
jle
mov
cli
popf
mov
cmpsb
mov
in
add
mov
hlt
lcall
lods
cmp
shrb
popa
adc
stc
cmp
pop
or
cmp
inc
inc
or
cwtl
andl
dec
sbb
insb
dec
sahf
lock
dec
cmp
jecxz
add
sub
inc
sub
ret
into
adc
aaa
add
add
lock
std
cmp
mov
mov
popa
kandb
and
push
fcoms
lods
and
les
add
dec
pop
and
pop
lea
pop
pop
add
das
int
jecxz
jb
pop
push
xor
jno
jle
andl
xchg
lea
in
sbbb
nop
loopne
ljmp
adc
mov
xor
mov
and
push
stos
lods
xchg
xchg
xchg
cmpsb
push
sbb
mov
add
imul
mov
inc
cld
push
push
cs
add
gs
jecxz
push
imul
sarb
xor
insl
jl
ja
jecxz
sub
inc
adc
mov
dec
mov
imul
mov
cmp
adc
and
outsb
pop
dec
in
fmuls
push
insl
inc
pop
jns
loop
inc
push
or
rorb
sub
jbe
push
xor
jecxz
pop
cmp
loop
mov
push
sbb
push
mov
pop
pop
mov
or
or
daa
cmpl
mov
adc
imul
push
jge
sbb
out
sti
ds
fwait
nop
es
fwait
or
pop
cmp
xchg
mov
push
push
sbb
fwait
icebp
clc
insb
call
lcall
repnz
push
lcall
add
sub
dec
cs
es
adc
push
inc
mov
mov
jnp
pop
sbb
loop
push
inc
adc
imul
pop
mov
xor
or
test
outsb
clc
pop
lcall
fistpl
xorb
cld
or
dec
adc
movsb
shrb
das
loope
cmp
pop
add
or
sub
or
popf
invd
or
mov
mov
adc
repz
jge
add
push
lret
sub
imul
jmp
clc
mov
hlt
fdivr
data16
dec
add
mov
pop
adc
xor
ret
lea
push
or
andb
push
pop
pushl
lock
test
scas
inc
push
inc
push
jle
pop
adc
fdivp
pusha
nop
out
stos
xchg
sarb
aaa
pop
adc
outsl
sub
adc
add
test
jl
les
inc
aam
mov
scas
mov
jecxz
adc
fdiv
inc
fidivrl
adc
ds
add
add
dec
nop
push
icebp
push
pop
adc
push
popa
in
icebp
cmp
jne
fildl
xor
incb
out
in
xor
mov
in
adc
jnp
cwtl
and
or
add
xor
or
push
in
inc
xor
sub
loope
push
push
adc
aam
and
adc
pop
sub
add
xchg
mov
push
mov
pop
pop
lcallw
or
fistpll
add
add
or
mov
push
jmp
and
rorb
iret
sbb
imul
sbb
ret
jb
rorl
and
adc
add
loopne
or
bound
adc
lods
adc
push
loopne
je
cmc
pop
test
cmp
aas
iret
pop
ljmp
xchg
adc
xchg
or
sbb
sub
mov
inc
fwait
sbb
cmp
movsb
cmpb
out
fwait
push
shll
testb
add
mov
add
mov
xor
dec
enter
lds
or
jmp
and
push
movsb
sbb
jo
inc
xor
sbb
sahf
test
dec
ret
loope
jnp
call
imull
enter
push
loopne
mov
rorb
cwtl
adc
or
pop
or
xor
push
and
dec
and
outsb
ret
sub
jo
iret
xor
mov
fmull
xor
andb
dec
xchg
movb
add
push
jmp
sub
into
aad
or
int
cmp
test
mov
out
cli
xor
dec
out
popf
xchg
sub
push
push
jp
sub
shll
push
ljmp
xorb
push
loopne
lcall
pop
daa
jne
and
je
sub
stos
xchg
jo
xlat
push
push
jmp
sbb
xchg
or
xor
xchg
popa
jmp
xchg
mov
mov
mov
sub
cmpsl
xchg
mov
push
mov
adc
mov
or
fiadds
xor
inc
jecxz
pop
jno
xchg
xchg
mov
scas
inc
nop
sub
sbb
inc
xor
adc
add
lods
jnp
mov
xor
inc
imul
hlt
xchg
add
sub
shrl
jg
je
imul
push
fmull
in
mov
pop
xchg
jns
push
add
js
fmull
aas
aam
sbb
movsb
and
sub
in
js
dec
pop
call
pusha
xor
and
out
xchg
dec
lcall
movsl
inc
jmp
cmp
andl
xchg
sbb
mov
shlb
out
xor
mov
adc
inc
cmp
jne
mov
jmp
loop
mov
daa
add
pusha
xor
and
sahf
imull
pop
add
or
dec
xor
icebp
push
adc
push
fxch
cmp
addr16
push
shlb
add
adc
scas
lahf
sub
xor
jno
sub
das
dec
sbb
xchg
jno
push
mov
ret
lcall
daa
insl
sub
push
push
xchg
lcall
jo
sbb
out
test
push
fildl
loopne
or
cmp
jne
push
sub
or
and
jl
or
cmp
test
jo,pt
lock
dec
mov
sbb
ret
dec
mov
push
inc
sahf
push
cmp
xor
fdivrs
xor
hlt
mov
fdivs
xor
cmp
icebp
inc
test
xchg
mov
xor
movsl
push
mov
sbb
fstps
sbbb
mov
andb
mov
icebp
or
in
jge
pushf
add
ret
jbe
lret
cld
adc
dec
mov
push
add
push
sub
sub
add
adc
aam
push
mov
outsb
cltd
jae
and
sbb
cs
aam
cld
dec
popa
or
push
adc
test
fiadds
and
repz
call
add
mov
gs
das
or
xchg
mov
mov
mov
jecxz
out
inc
out
fiadds
repnz
sub
mov
mov
fadds
pop
movsb
adc
bswap
push
dec
mov
popl
imul
sbb
mov
push
sbb
push
xchg
lret
dec
or
adcl
or
daa
pop
aam
mov
inc
mov
mov
add
push
out
or
prefetcht1
dec
add
or
shl
cmp
push
push
or
cld
push
sub
jae
rcll
adc
ret
add
fcomp
ret
scas
je
push
add
test
cmp
in
and
fiaddl
repz
xchg
cmp
inc
daa
push
mov
or
or
rcll
pop
ja
inc
cmp
xchg
mov
xor
movsl
addl
mov
mov
sbb
lret
and
mov
shlb
jo
lock
xchg
pop
inc
inc
xor
mov
or
pop
vrcpps
xchg
add
add
xor
arpl
inc
lock
mov
xchg
stos
xchg
or
cmp
popf
add
adc
xchg
or
andl
pusha
pop
jno
cmpb
ljmp
inc
and
inc
in
je
push
scas
xchg
call
adc
cld
test
and
loopne
mov
mov
notb
iret
scas
nop
mov
in
sti
mov
sbb
mov
inc
dec
movsl
shll
mov
mov
dec
cmc
sub
fstpt
jmp
call
in
daa
roll
push
jle
add
push
sub
adc
cmp
sahf
shlb
ficoms
adc
lahf
call
add
loopne
and
sar
xchg
shlb
jnp
cs
jecxz
jmp
cs
xchg
nop
stc
sbb
dec
inc
insb
out
add
ret
mov
push
xor
rcrb
or
lea
push
mov
out
push
enter
call
gs
sub
push
pop
add
rclb
pushf
sbb
adc
clc
adc
pop
add
jge
adc
ret
fsubrs
test
add
pop
pop
adc
jnp
outsb
bound
sbb
or
fs
sub
fwait
mov
pop
xor
leave
mov
sbb
xlat
sub
int3
push
mov
add
ljmp
inc
in
jle
jmp
sarl
jl
mov
imul
inc
or
repnz
xchg
xchg
lcall
jns
pusha
les
nop
ds
insb
sbb
inc
orl
push
jne
ret
xchg
movzbl
push
ffreep
mov
sub
notl
mov
mov
outsb
adc
mov
rclb
fcomps
shlb
dec
jp
movsb
fnstenv
je
sub
leave
pushf
mov
xor
push
jmp
push
and
mov
xor
ret
inc
sub
mov
movsb
icebp
clc
dec
pslld
push
add
adc
push
inc
push
fwait
sub
add
mov
adcl
imul
cmp
sbb
arpl
mov
push
or
jecxz
push
push
mov
mov
or
shr
out
sbb
and
pop
xor
in
test
inc
lods
ljmp
add
or
add
shll
push
mov
fimuls
out
dec
mov
add
push
jge
jle
and
jb
cmp
inc
stos
decl
pop
cmp
jne
push
or
mov
push
xchg
rolb
test
insb
xchg
cmpsb
or
or
adc
jle
mov
adc
cld
mov
lock
aaa
xor
xor
and
inc
cmp
js
lock
xor
inc
cmp
push
xchg
push
push
push
and
pusha
mov
xor
push
lock
cmp
lcall
sbb
adc
dec
loop
sbb
in
mov
stos
mov
add
je
or
mov
mov
xchg
pop
adc
into
data16
loopne
push
and
je
imul
or
in
imul
or
sahf
mov
xchg
hlt
movb
mov
add
test
mov
adc
dec
cli
cmp
cmp
jbe
cmp
jbe
xchg
icebp
out
mov
sbb
dec
shll
roll
push
mov
or
insl
mov
in
arpl
enter
add
adc
mov
orb
jle
push
mov
and
xchg
mov
pop
rclb
sbb
add
adc
mov
adc
leave
cld
sahf
cmpsb
lea
popl
ss
fcoml
inc
lea
jl
mov
cwtl
sar
xlat
lock
fs
mov
mov
mov
jle
xchg
inc
inc
es
aaa
cs
jne
add
fadds
cmpsb
xor
loopne
or
xchg
bound
fstl
gs
add
je
push
and
and
fistpl
pop
mov
ss
xchg
or
adc
and
sbb
popa
jmp
fdivrs
cmp
jg
sbb
lcall
push
mov
mov
loop
inc
lock
mov
mov
and
int3
out
ret
xchg
ja
and
cld
push
out
leave
jb
ret
cwtl
movsl
sub
or
mov
cmp
sbb
lahf
add
mov
cmp
pop
xchg
adc
adc
jl
xchg
test
mov
pop
pop
clc
roll
shl
or
mov
test
je
adc
add
fidivs
repz
cmp
jb
pushl
fsts
sub
outsl
sbb
mov
clc
push
lret
flds
push
jae
fimull
fstps
and
sbb
sbb
aad
mov
inc
mov
adc
out
lods
add
sbb
and
fildl
pop
sub
dec
fwait
insb
jnp
or
popf
jg
outsb
lret
into
adc
daa
xor
lea
mov
add
dec
rcrl
xor
fcoms
sub
dec
lock
adc
ret
test
cmp
mov
adc
cs
mov
adc
das
cld
push
pop
dec
adc
mov
mov
aad
in
lds
push
pusha
mov
or
and
adc
cs
xchg
xor
mov
test
arpl
push
dec
enter
or
push
test
bound
adc
sbbb
mov
into
dec
stc
cmpsb
push
mov
add
or
aam
jl
inc
jecxz
pop
sbb
jmp
out
and
cmp
and
je
sub
push
or
add
pusha
xor
sbb
adc
outsl
push
push
sbb
fisubl
dec
dec
push
cmp
inc
mov
push
les
jne
dec
out
arpl
inc
jo
xchg
push
lahf
add
mov
xor
sbb
pop
rcll
or
in
pop
shll
popf
test
fldcw
jnp
lock
mov
and
add
mov
js
jb
ds
mov
pop
push
shlb
test
leave
pop
js
lock
sub
leave
mov
lcall
loop
or
push
jl
cmpsb
xchg
or
mov
lods
or
adcl
or
and
add
mov
mov
cmp
imul
ljmp
or
jns
es
faddl
adc
push
and
add
nop
cwtl
push
pop
addb
mov
out
mov
xchg
sbb
adc
and
loop
call
inc
sahf
movsb
mov
and
push
and
dec
jle
or
int
sub
fbld
out
aas
scas
imul
or
sub
xchg
jae
mov
lahf
jp
xor
or
and
cld
mov
or
pop
add
insl
sub
ja
testb
stos
xchg
jmp
outsb
loop
and
mov
rcrb
push
je
or
or
and
outsb
add
loop
sbb
test
out
test
call
cmp
xor
hlt
add
and
jno
notb
cmp
push
mov
dec
jmp
pop
fs
pop
out
push
add
or
push
jmp
aad
pop
pusha
test
xchg
or
fistpll
jno,pn
mov
mov
sbb
pusha
mov
sub
int3
and
test
mov
sbb
popa
pop
pop
jg
int
and
decl
test
hlt
sbb
mov
ja
clc
add
mov
jae
adc
lcall
xor
xlat
dec
fcomps
ljmp
push
xchg
rcrb
or
mov
dec
add
inc
sub
sti
rol
jle
rcll
aas
fldenv
std
inc
mov
sub
push
pushf
shlb
mov
jns
bound
cmp
mov
push
xchg
mov
pop
shlb
ljmp
shlb
inc
add
pop
and
push
push
push
xchg
push
mov
pop
test
incb
pop
mov
mov
jmp
cmp
fcoms
pop
pop
dec
dec
lahf
test
jecxz
cli
rolb
pop
loop
dec
or
incl
jle
hlt
add
cmp
je
mov
and
pop
xor
je
sti
mov
pop
aaa
push
mov
dec
inc
cmp
jb
std
lods
jo
stos
push
adc
jl
mov
shrb
sbb
add
lock
or
sti
mov
and
es
push
in
sahf
push
fisubs
in
scas
ljmp
mov
jnp
pop
pusha
inc
inc
cwtl
inc
call
sbb
add
lret
popa
adc
cmp
jae
xor
xlat
xor
sbb
scas
and
es
mov
pushl
lret
add
lea
adc
adcl
mov
mov
push
mov
sub
sbb
fs
mov
sbb
or
addl
pusha
cmp
mov
sub
lock
and
arpl
mov
inc
push
sbb
ds
sub
mov
xchg
inc
shrb
inc
faddl
push
push
fisttpl
mov
add
in
xchg
enter
xchg
dec
inc
cmp
lock
push
enter
sbb
stos
lock
idiv
cmp
cmp
mov
int3
aad
xor
mov
jno
les
adc
adc
notl
add
lods
sti
or
addr16
jns
out
sar
xchg
and
jmp
test
inc
mov
jmp
aaa
mov
mov
sub
leave
scas
mov
xchg
add
rep
push
add
push
int3
outsb
or
rcrb
adc
add
or
push
orl
dec
mov
adc
hlt
add
cld
out
aam
sbb
lcall
push
mov
add
and
sysret
cmp
sbb
jecxz
cld
stc
push
ret
push
scas
mov
test
test
pop
and
enter
and
mov
xor
xchg
or
lea
mov
dec
mov
mov
lea
add
lock
xchg
and
fcomps
add
je
push
jo
inc
rorb
push
and
iret
or
decl
inc
add
cmc
push
cli
push
inc
hlt
add
mov
add
addr16
push
std
fdiv
mov
rorb
push
jp
add
not
rcr
test
dec
inc
cmp
adc
push
shrb
rorb
pop
fwait
inc
sbb
add
xchg
mov
inc
lock
jne
mov
inc
lret
xchg
mov
xlat
xor
leave
pushf
sbb
mov
rorb
out
cmpsl
push
xchg
repnz
cltd
imul
push
add
mov
out
and
test
dec
aaa
inc
mov
xchg
add
rclb
xchg
gs
pop
cmp
je
mov
mov
push
mov
mov
inc
jl
outsb
dec
cmp
pop
or
xorb
ss
fbld
lods
or
js
fs
arpl
ret
stc
or
mov
and
and
add
add
insb
pusha
fadds
pushf
movsl
mov
jb
subb
mov
leave
adc
jbe
inc
cmp
cmpb
aam
adc
test
push
fdivrp
xchg
push
adc
mov
cld
test
fidivl
add
in
hlt
lods
mov
pop
or
inc
je
pop
shrl
out
je
dec
inc
scas
pop
or
addr16
and
jge
lret
xor
cmpsl
and
jl
sub
je
sbb
call
cmpsb
add
mov
aas
push
mov
cmp
jae
lea
jmp
cmpl
inc
cmp
rorb
jbe
in
in
mov
hlt
sti
push
popa
scas
or
inc
clc
sub
fimuls
or
shrb
push
sub
sub
loopne
inc
lds
adc
push
push
jo
dec
fs
aaa
push
ds
xchg
scas
in
aas
sarb
hlt
push
push
mov
daa
pop
xchg
call
sbb
dec
cs
loop
int
sbb
lds
and
add
rcrl
mov
or
xlat
and
sarl
int3
pusha
sub
stc
fstl
mov
add
add
int3
shl
in
leave
lds
or
add
adcb
add
sbb
orb
add
cmp
adc
mov
xchg
pop
test
xchg
jo
sbb
dec
pop
mov
cmp
mov
loopne
ret
jge
adc
cmp
push
and
push
mov
pop
inc
hlt
aad
jae
in
shrl
dec
popf
mov
pop
sbb
pop
xor
sbb
loope
sub
std
std
add
popw
lock
push
push
je
add
mov
mov
dec
jmp
xor
mov
les
or
push
hlt
push
xchg
jne
jbe
aaa
adc
or
call
or
inc
xchg
push
adc
mov
cmp
fmuls
scas
add
sub
fwait
fwait
inc
push
test
cmp
add
fsubr
mov
orl
fcoms
sub
es
xor
inc
lock
mov
xor
add
leave
and
cmp
or
and
mov
js
cmpl
cmp
shr
and
jne
push
push
pop
push
daa
xor
es
xor
cmp
adc
push
ret
cmp
push
inc
or
pop
push
and
lea
lea
xor
imul
jns
pop
rorb
add
dec
cwtl
dec
or
push
and
cmp
es
add
lahf
inc
test
sarl
jnp
jnp
cmp
xor
test
pop
and
cmp
cmp
jbe
adc
sahf
imul
clc
jne
mov
push
mov
sti
int
and
add
aaa
sub
lea
push
pop
js
out
cmp
stos
or
mov
dec
jmp
lahf
inc
inc
and
xchg
sbb
xchg
mov
hlt
inc
scas
xchg
inc
hlt
jns
outsb
adc
sbb
inc
pop
les
into
sbb
mov
lea
cmp
jae
pusha
or
into
inc
sbb
roll
jne
push
js
jle
mov
loopne
fnstenv
faddp
inc
or
mov
nop
or
ds
cmp
or
data16
xlat
cld
cmp
pushl
cmp
int3
mov
mov
add
sub
adc
adcl
loopne
mov
data16
fnsave
mov
xor
rol
lock
sti
addl
mov
jmp
hlt
and
je
pop
in
sub
sub
cmpsl
punpckhbw
mov
cmp
mov
outsb
mov
dec
push
adc
mov
adc
std
or
fdivrl
or
fldenv
data16
in
pushf
jo
add
jne
fldt
addl
jle
xor
pusha
adc
add
aam
or
int
mov
int
and
cld
jbe
push
cmp
jp
aas
jne
push
or
cs
ficoms
cmp
fldcw
sahf
ret
pop
sub
dec
push
cwtl
icebp
xchg
jmp
fnstsw
out
xor
loop
inc
sbb
or
jmp
or
test
jmp
in
push
push
mov
mov
insb
xor
imul
dec
jnp
mov
mov
push
dec
popa
loopne
push
loopne
in
or
xorb
push
jp
sub
je
scas
lret
mov
bound
mov
cmpb
mov
adc
inc
pop
sub
adc
movzbl
xor
loopne
aaa
mov
addb
orl
push
hlt
add
cwtl
je
xchg
jge
stos
pop
ljmp
xchg
aad
ret
xchg
or
jle
dec
or
push
pop
push
stos
adc
or
mov
adc
mov
seto
add
or
adc
ljmp
fsubr
pop
jmp
adc
lret
or
imul
add
enter
add
push
pusha
and
je
fdivp
loop
mov
aad
xor
and
js
cmpsb
fwait
insb
jns
lea
mov
mov
iret
lret
pop
mov
stos
jmp
xor
lret
jge
mov
mov
jo
hlt
mov
stos
and
push
push
xchg
push
inc
test
shlb
mov
jge
cmp
add
insb
cmc
les
cmp
adc
and
test
sarl
cmpb
pop
mov
pop
mov
cmp
adc
addb
adc
es
jmp
insb
sbb
shll
and
cli
addr16
jmp
enter
mov
mov
and
bound
sub
stos
je
mov
movsl
xchg
cli
dec
sub
lret
add
xor
xor
repz
xor
or
jmp
dec
sbb
xchg
cmpsb
stos
test
fiadds
fmuls
pop
mov
or
inc
cmp
mov
addr16
mov
pop
movsl
addl
cmp
pusha
push
insb
jno
or
pop
xlat
clc
and
addr16
sbb
call
or
jb
les
xor
sbb
add
sbb
adcl
sbb
out
hlt
lea
ret
pop
lock
sub
inc
jmp
push
push
mov
xchg
insb
je
cmp
inc
xchg
mov
push
aaa
hlt
iret
lds
test
inc
jp
lea
cmp
enter
jmp
cmp
mov
add
pop
daa
in
xor
add
inc
nop
aaa
adc
mov
jg
push
adc
add
sbb
sub
add
sbb
mull
add
scas
sub
les
xor
jae
ret
jmp
xchg
xchg
adc
xor
push
cld
push
lcall
icebp
ret
sub
add
or
testb
pop
inc
orl
sbb
movsb
lds
mov
test
xor
js
xor
jns
and
iret
pop
call
jne
mov
jns
in
in
jl
cmp
out
xor
dec
out
mov
mov
div
or
cmp
enter
mov
jl
xchg
cmpsl
bound
call
ja
cmpl
add
clc
jno
adc
pop
mov
and
sub
add
icebp
out
add
push
or
repz
sbb
dec
dec
and
repz
sbbl
sti
das
push
xchg
inc
mov
or
popf
test
xorl
mov
mov
ret
or
stc
movl
sti
and
xchg
test
jb
pcmpeqw
fdivl
pushl
jp
xchg
in
xchg
and
mov
cmpsb
push
cltd
push
sbb
or
pop
icebp
xchg
push
and
test
pop
push
and
rorl
daa
push
mov
sub
cmpsb
mov
sbb
push
int3
in
ja
jnp
test
adc
xor
test
mov
xor
loope
inc
ret
mov
aad
lock
cmpsl
xor
fadds
ret
lea
add
lret
jb
sbb
mov
sub
inc
fcompl
int
cmp
arpl
dec
add
rorb
sub
pop
or
add
mov
roll
add
pop
mov
or
push
int
xor
sub
mov
mov
add
xor
adc
push
lods
pop
lock
outsb
pop
lea
das
push
jge
push
mov
jno
add
mov
ljmp
push
popa
lret
or
cmpsb
and
js
fimuls
imul
jb
sbb
xchg
rclb
addr16
mov
inc
setns
int3
cmp
insb
out
ret
jae
sub
loopne
adc
or
int3
adc
ljmp
dec
mov
cmc
xchg
rcrb
enter
mov
xor
repnz
test
les
adc
idiv
mov
pop
xor
or
fmull
outsl
jmp
mov
nop
jb
scas
xor
push
push
push
add
xchg
cmp
push
jle
sub
adc
insb
int3
mov
out
mov
enter
addb
xchg
cld
jb,pn
mov
ss
adc
cld
pop
insl
cld
pop
adc
enter
add
add
lock
push
cmp
cmp
add
imul
mov
dec
dec
test
pop
test
add
lds
sub
push
add
jo
inc
mov
sbb
aaa
insl
loop
aaa
jle
shlb
cmpl
popa
adc
adc
dec
jae
xchg
xor
je
loop
ss
push
or
or
jo
es
xchg
xor
fstl
cmp
jmp
cld
cwtl
andl
leave
or
mov
jbe
jbe
fcoml
fimuls
stos
les
add
es
pop
pushl
jmp
add
pop
mov
and
push
cmp
xchg
cld
inc
mov
mov
fcoml
mov
dec
xor
ud2
push
outsb
testb
clc
jge
push
push
mov
mov
inc
cld
aaa
sbb
jne
cmpb
mov
jb
push
jae
lea
push
sub
xchg
hlt
add
lcall
fwait
stos
mov
xor
push
fs
and
je
or
daa
or
adc
mov
adc
daa
inc
sbb
or
cwtl
lods
filds
das
fadds
cmp
push
cmp
jae
inc
jmp
push
sub
out
stos
or
mov
jnp
jge
add
out
test
add
dec
pop
push
jmp
aam
ret
mov
ja
push
mov
add
lods
push
loope
into
or
int
divb
and
add
fimull
push
push
add
cmp
mov
pop
js
mov
jle
in
lret
fnstenv
or
add
cmp
adc
cmpsl
call
sbb
xchg
xchg
lds
push
leave
mov
sub
addb
sbb
mov
mov
call
in
pop
pop
enter
adc
xchg
aaa
or
add
or
fwait
sbb
and
test
xor
nop
pop
mov
dec
xlat
or
in
in
or
cmp
push
inc
jbe
adc
std
pushl
push
add
je
mov
cmp
adc
ja
cmpb
mov
push
mov
push
or
or
xor
sbb
jo
inc
imul
int
sbb
mov
loopne
ds
fadds
cli
or
jl
data16
shrl
je
cmp
sub
push
inc
or
fcmovnu
js
add
es
pop
add
dec
mov
into
and
xorl
mov
jmp
mov
adc
shlb
lea
cli
ja
push
test
flds
ret
push
daa
orb
push
inc
pop
dec
lds
lea
into
mulb
or
sbb
xchg
and
mov
fadds
arpl
push
addr16
cmpsb
imul
lods
sbb
enter
push
xchg
add
pop
in
inc
ljmp
xor
mov
test
or
sbb
out
jns
gs
push
pop
repz
push
add
ljmp
movsl
loopne
fwait
jb
xor
js
mov
xor
addr16
mov
adc
nop
cltd
fbld
sbb
add
cli
popa
add
cld
push
mov
mov
cmp
les
dec
cmp
xor
add
outsl
ljmp
outsl
push
lods
pop
mov
xor
xor
sub
jp
and
in
add
xchg
sbb
mov
jge
inc
aam
adc
pop
adc
jecxz
jecxz
jge
filds
outsl
sbb
lods
test
adc
adc
or
out
addr16
enter
mov
sbb
or
mov
xchg
paddusw
mov
dec
aaa
add
hlt
jge,pn
out
jbe
aas
xor
push
jg
or
shlb
mov
adc
or
or
ljmp
les
mov
push
and
xor
stc
mov
xor
inc
sbb
loope
es
and
push
mov
hlt
jle
arpl
jp
add
sbb
rcrb
push
dec
mov
cmp
sbb
cli
gs
ss
pop
sbb
pushf
dec
cld
lods
gs
xchg
push
sbb
cmp
in
jmp
sub
sahf
mov
ljmp
push
inc
loopne
lods
adc
jns
adc
fsubrs
repnz
add
xorl
cmp
dec
fs
mov
dec
ret
or
popa
in
push
add
adc
rclb
call
jbe
mov
dec
iret
dec
in
inc
adc
icebp
xor
mov
push
and
add
sahf
add
pop
int3
add
dec
add
test
lods
je
enter
inc
jl
sbb
out
push
repnz
je
push
adc
lods
jl
inc
push
and
push
or
outsl
arpl
sub
cwtl
lea
out
xor
stos
movsb
dec
xor
sbb
xor
lahf
repnz
into
daa
fstl
and
ljmp
pop
xchg
js
push
ja
add
stos
aam
jmp
jle
push
test
pushf
int3
sub
and
mov
popa
ss
ret
push
push
imul
sub
and
ret
mov
je
jle
xchg
shrl
mov
pop
push
mov
ljmp
mov
sbb
mov
mov
jbe
xchg
addr16
add
inc
ljmp
mov
jmp
xor
jns
fsubl
mov
rorb
adc
outsb
inc
xlat
pop
bound
or
dec
movsb
ja
roll
pop
push
push
aas
mov
push
iret
addr16
sbb
lcall
jmp
sub
jg
and
stc
cltd
mov
sub
mov
and
adc
push
adc
cmp
push
fistpl
stc
add
push
sbb
add
add
jo
cmp
ret
push
lret
dec
fcomp
add
test
pop
aad
jnp
call
push
sub
inc
insb
aaa
sub
les
in
lock
or
loop
mov
jp
pop
xchg
add
daa
adc
add
cmpsb
mov
out
pop
add
inc
push
add
cmp
ds
cmp
pushf
xor
xorl
pop
js
ror
push
roll
aaa
arpl
mov
pop
xchg
mov
or
repnz
cmp
mov
cltd
into
or
andl
or
cmp
daa
fnstenv
test
call
nop
fisubrs
sbb
mov
or
sbb
movsb
add
push
into
scas
subb
jl
adc
push
mov
cmc
xorb
dec
inc
and
jp
and
dec
stos
push
jo
out
insb
cmp
aam
cmp
and
stos
out
pop
lock
movsb
in
std
jns
mov
lods
mov
test
es
call
xor
adc
or
xchg
lock
xchg
test
lods
ja
out
imul
iret
test
ss
mov
nop
sub
adc
dec
icebp
sbb
jmp
pushw
mov
les
cmpsl
add
inc
jg
pop
adc
mov
jae
aam
sub
and
mov
jge
push
std
fisttpll
xchg
add
push
mov
xor
pop
stos
push
leave
xor
pop
mov
or
jo
and
add
push
js
std
mov
push
mov
rcrb
jne
aaa
lret
lret
dec
pop
lods
rol
mov
leave
mov
cwtl
cmc
push
jns
push
lods
sbb
push
xchg
sbb
mov
push
inc
inc
pop
movsl
cmp
gs
out
loop
mov
js
dec
movsb
roll
cltd
adc
adc
loopne
mov
iret
div
push
xor
xor
fistpl
sarl
adc
mov
stos
sbb
and
dec
mov
adc
insl
movb
mov
mov
pop
adc
into
icebp
ret
cmp
or
sub
into
call
inc
push
jae
test
lea
adc
loopne
andl
add
add
xchg
and
push
pop
ret
push
inc
push
push
fs
mov
add
dec
pop
cwtl
dec
sub
or
jle
lea
sbb
mov
jle
and
call
inc
mov
push
and
aas
push
add
pusha
pushf
mov
out
lods
rcll
jp
push
ds
fbstp
adc
push
stos
adc
out
pusha
cmp
mov
xor
leave
es
and
adc
sbb
pop
call
hlt
fnstsw
cmp
jl
js
sarb
loope
aaa
fadds
shlb
add
dec
sub
add
mov
xor
and
and
cmp
cmp
mov
mov
fstps
pop
cld
adc
xor
jne
xor
out
and
mov
fs
js
sbb
jbe
not
push
push
inc
pop
rorb
inc
inc
and
xchg
pop
jne
add
fnstsw
dec
movsb
inc
sub
mov
cmp
call
xchg
adc
je
pop
cmp
in
faddl
xchg
ljmp
adc
pushf
push
stos
aas
add
or
int
cmpl
mov
fsubs
into
add
or
flds
cltd
jns
xor
mov
outsb
xchg
push
clc
rcrb
or
or
xchg
aam
lds
cmpsl
hlt
push
and
dec
rcl
and
fldl
sub
add
inc
sbb
lock
mov
into
leave
add
fs
test
loopne
sbb
jmp
mov
lea
push
sbb
mov
mov
xchg
and
xor
stos
cmpb
je
nop
sti
mov
imul
push
and
in
sbb
pusha
rclb
in
test
loopne
pop
cmp
dec
sbb
mov
dec
popf
arpl
ret
mov
das
aad
push
fst
mov
shrl
jne
adcl
loop
in
mov
inc
popf
push
ljmp
popf
adc
mov
xchg
orb
cmp
inc
loopne
add
fidivl
mov
int3
push
dec
pop
mov
in
inc
loopne
and
add
cmpsl
les
notb
ljmp
add
ja
rclb
adc
cmp
insb
inc
add
rcrb
data16
clc
mov
arpl
mov
lea
lds
mov
mov
dec
fisubrl
divb
je,pn
xor
add
sbb
mov
add
inc
add
jp
outsb
inc
add
jmp
sti
fsubrs
pop
mov
pop
test
dec
fildll
mov
xchg
and
sub
add
aam
test
sbb
sbb
rcrl
mov
out
dec
and
push
ret
dec
loop
xchg
mov
ret
test
sbb
jmp
or
sti
xchg
sub
or
aad
mov
mov
push
shl
in
fidivrl
jg
ds
mov
add
das
cmpsl
fistpl
or
push
jne
dec
inc
hlt
add
sahf
adc
jae
jbe
jb
in
ret
or
andb
or
addr16
adc
push
cltd
add
aaa
or
in
fimuls
mov
inc
das
in
movsl
loopne
pop
or
dec
push
addr16
addr16
mov
or
clc
xchg
pop
push
adc
jb
jp
outsb
inc
lcall
addb
lret
mov
sbb
stos
add
mov
add
hlt
pop
rorb
test
mov
inc
push
add
push
dec
push
and
pop
out
test
shl
icebp
cmp
push
mov
mov
mov
pop
or
ss
mov
js
cmp
icebp
jo
popf
popf
sbb
ljmp
xchg
push
push
jnp
cld
add
mov
js
ss
pop
loope
mov
xorl
xchg
push
movb
xlat
cmp
mov
or
notl
movsb
sub
repz
and
mov
jns
aad
push
int
mov
jecxz
aas
adc
mov
dec
xor
ret
mov
adc
dec
mov
es
adc
nop
inc
scas
lcall
push
jmp
cmp
add
sbb
dec
enter
mov
or
mov
jb
push
push
fsubl
sub
insb
loop
mov
fcompl
sub
je
and
fisubrs
mov
sbb
fstps
leave
sbbl
test
imul
mov
fistps
add
test
and
dec
enter
mov
mov
imul
sbb
or
in
repnz
xlat
sbb
add
sbb
add
and
sub
push
cmp
or
movsb
jb
or
daa
xchg
xchg
lret
inc
or
sub
fs
mov
test
pop
not
xlat
xchg
out
sbb
pop
adc
mov
les
xchg
jl
mov
xor
and
outsl
fmuls
push
or
sahf
fsubrs
dec
aam
movsl
aaa
xchg
pop
push
movl
add
ficomps
pop
mov
xchg
add
nop
sub
add
cmp
mov
xorl
sbb
stos
mov
ret
into
mov
sbb
enter
add
jbe
push
xor
in
or
xchg
jbe
adc
xorb
nop
mov
jnp
fs
nop
inc
push
cmp
inc
push
cmp
cmp
push
cmp
nop
sub
and
cmp
nop
inc
adc
or
mov
push
or
adc
lds
add
rorl
subb
cld
decb
xor
sub
push
fldl
fistpll
clc
dec
loope
loop
dec
push
sbbb
push
push
stos
scas
es
ror
int
mov
mov
mov
adcl
loopne
xchg
jns
adc
lret
push
xchg
add
pop
sub
add
andl
out
and
fmull
add
dec
dec
lock
and
mov
add
adcl
popf
loope
mov
cmp
jmp
adc
ja
xchg
and
xchg
or
in
sub
ret
pop
sbb
imul
sbb
loopne
movsb
lock
ja
inc
push
pushl
pop
insb
or
out
aas
mov
add
push
test
out
scas
inc
shlb
mov
pop
jge
add
dec
and
inc
or
imul
lea
outsl
adc
sub
pop
jo
mov
les
sub
add
daa
inc
or
test
mov
mov
or
enter
pop
add
push
leave
test
or
inc
test
jns
jl
xor
push
inc
ret
jmp
scas
adc
xchg
xchg
add
mov
mov
xor
add
adc
js
mov
test
push
cmp
cwtl
fwait
and
pop
cmp
jo
adc
inc
pop
or
adc
loopne
mov
orl
dec
out
xchg
adc
enter
js
add
mov
jnp
or
push
ficoml
or
ss
mov
inc
add
nop
int
add
dec
jg
mov
adc
arpl
and
cld
insb
sbb
xchg
fwait
pop
hlt
icebp
inc
adc
adc
ret
aas
pop
lods
sbb
xchg
test
pop
fcoml
test
add
dec
xor
pop
addb
mov
sub
mov
push
xor
out
adc
adc
fadds
mov
insl
push
inc
jnp
insl
je
sub
xchg
test
fsubs
xor
adc
int
dec
jae
dec
mov
iret
xor
push
xorl
or
out
stc
xchg
mov
adc
std
mov
and
idiv
cmp
mov
loope
imul
adc
jp
inc
mov
bnd
pop
loopne
sub
movb
ret
pop
dec
loope
inc
orl
sub
inc
test
ret
aas
aaa
cld
mov
js
or
mov
jne
call
push
cmp
jae
push
imul
jmp
mov
cli
test
adc
andl
es
icebp
out
pop
add
fdivs
cwtl
mov
sub
shrb
sub
dec
sbb
dec
adc
mov
sub
jae
and
int3
prefetcht1
mov
or
call
push
xorb
testb
je
cltd
cmpsl
add
push
stc
inc
pop
pop
pop
addb
and
shrl
aaa
pop
jb
in
and
xor
jge
ss
or
jmp
rorb
push
adc
inc
dec
fwait
dec
test
and
clc
pop
lea
inc
or
std
mov
movb
xorl
scas
cmc
jae,pn
movsl
fiadds
and
fldt
and
lea
in
insb
jnp
push
loop
mov
shl
dec
add
add
ds
pusha
push
cmpsl
sbb
loop
nop
dec
adc
lea
ja
lock
repz
add
xchg
das
cmp
cmpsb
out
adc
gs
xor
add
xchg
sbb
cmp
jmp
shll
adc
push
xchg
cwtl
loope
dec
outsl
pop
push
mov
daa
add
loopne
inc
push
mov
mov
mov
popa
jp
jne
ja
sbb
and
dec
pop
hlt
xchg
imul
inc
xchg
push
mov
mov
dec
add
arpl
rcr
xchg
inc
or
and
push
adc
test
mov
push
call
stos
xor
sub
pop
push
mov
dec
repz
add
out
ss
xor
aas
mov
or
stc
leave
jp
sbb
jle
push
cmp
leave
xchg
pushl
add
dec
add
imul
adc
push
pop
pop
mov
xor
movb
popa
inc
jnp
cltd
sahf
aam
mov
push
xadd
test
mov
pushl
pop
sub
jno
push
push
movsb
pop
inc
inc
xor
dec
in
adc
cmp
pop
mov
mov
and
imul
mov
add
mov
aad
test
push
mov
sti
mov
stc
imul
pusha
push
inc
in
lods
push
mull
mov
inc
inc
and
mov
jge
push
xchg
add
bound
je
sbb
ds
cmpsb
shrb
in
xchg
in
cld
push
ret
inc
push
in
pop
push
popf
jno
orl
loope
and
icebp
inc
cmp
js
push
jp
inc
in
loopne
mov
nop
nop
and
jmp
push
jae
cmc
inc
xor
pushf
and
and
mov
scas
in
leave
jg
lret
cmp
nop
dec
add
repz
iret
out
inc
inc
mov
mov
ss
leave
pop
scas
cmpsl
scas
cmpl
in
pop
sub
add
cmp
push
icebp
sbb
and
inc
sub
mov
nop
testl
sub
add
cmp
lods
inc
icebp
pop
sbb
pop
das
insl
pop
popa
mov
leave
add
mov
decb
add
mov
push
inc
mov
loope
cmp
sbb
mov
leave
mov
xchg
loope
cmp
add
jae,pt
jo
mov
mov
inc
cmp
adc
or
add
add
inc
xor
pop
mov
fs
dec
sahf
popf
andl
rorl
adc
pop
inc
or
lods
push
push
xchg
lock
ds
loope
and
mov
cmpsl
repnz
orl
mov
dec
mov
sub
enter
sbb
test
sbb
pop
cmp
xor
loope
pop
sub
sti
stos
insb
sbb
pop
enter
add
add
mov
adc
cld
jns
push
jo
hlt
add
shrl
mov
dec
loopne
jne
lods
lods
cmp
les
loop
pop
xorb
arpl
mov
in
lock
push
rclb
ficomps
push
lods
insl
and
inc
jbe
movsl
and
jne
fiaddl
scas
nop
addr16
push
sbb
inc
sbb
mov
and
pop
and
call
or
dec
sub
in
call
testb
inc
sbb
add
pop
push
es
sub
div
daa
mov
push
icebp
cs
out
xor
mov
fs
jmp
test
or
sub
pop
jnp
add
mov
int
enter
and
popf
popa
add
jnp
jmp
mov
push
movsl
outsb
arpl
arpl
mov
add
aam
insb
rorl
mov
sarb
mov
test
into
mov
lret
adc
loop
mov
sub
enter
jecxz,pn
jae
inc
cltd
mov
sbb
sahf
cmpsb
xor
bound
fcmovnb
lea
adc
mov
pop
mov
aad
add
mov
and
popa
dec
xchg
mov
jno
jbe
jle
mov
jmp
jne
dec
aam
mov
cmp
clc
pusha
push
jmp
movsb
loopne
push
cmp
dec
popa
and
rolb
adc
jo
jnp
test
inc
cmp
mov
lock
jno
push
xlat
iret
movb
rorb
mov
xor
jmp
rolb
or
jg
push
xor
xor
inc
mov
or
out
cmp
test
adc
into
in
cwtl
jo
pop
shll
mov
aam
jecxz
push
movl
adc
add
xchg
pop
aas
sti
xchg
sub
mov
add
xor
rclb
cmpsl
rcrb
mov
rorl
push
cli
repz
adc
rorl
mov
add
arpl
push
xor
dec
push
je
dec
jne
aad
and
or
xor
push
push
xchg
and
mov
push
inc
lahf
rorl
dec
cwtl
add
aaa
add
inc
sti
add
dec
add
mov
xchg
push
push
jmp
cmp
pop
test
jp
sbbb
sbb
push
xor
dec
pop
arpl
mov
push
dec
sub
mov
inc
xor
add
jle
ret
xchg
loop
add
pop
inc
insb
in
dec
push
daa
fsubrs
enter
inc
xor
fisubs
adc
push
mov
sub
add
sub
movsl
rcr
and
jg
or
frstor
or
push
cwtl
repz
ffree
and
xor
push
arpl
and
cmp
jb
inc
mov
aas
inc
std
dec
mov
or
ljmp
inc
sub
pop
add
decb
sub
mov
xchg
push
fsubr
push
mov
test
add
sub
stos
and
scas
pop
ret
pop
out
incb
mov
push
lea
pop
push
jle
and
into
std
dec
pusha
popa
pop
add
enter
daa
stos
std
or
mov
shrl
cmp
je
inc
mov
mov
inc
add
sbb
loopne
xor
pop
and
pop
jne
js
fcmove
or
inc
sbb
loope
aad
fwait
jns
sub
add
push
dec
and
jmp
and
dec
sub
dec
shll
cmp
push
daa
xchg
xor
pop
pop
add
sub
gs
sbb
mov
je
adc
and
inc
pop
test
inc
and
cwtl
pop
or
and
mov
sbb
push
sub
inc
movb
mov
mov
mov
xchg
push
inc
rcll
leave
imul
sub
imul
push
ja
pushl
fisttps
add
xor
or
sub
add
mov
cmp
jecxz
pushf
and
cli
das
andl
dec
jns
fisttpll
aas
addl
sbb
in
js
ss
lds
adc
loopne
dec
mov
sbb
mov
adc
adc
movups
inc
jl
xchg
cltd
add
mov
push
push
jns
aad
xchg
cmp
mov
sub
add
and
dec
mov
hlt
inc
sarb
nop
popa
icebp
pushf
iret
or
pop
in
pop
movsb
jne
lea
cli
aad
mov
or
loopne
rcll
insb
mov
in
inc
inc
sbb
inc
xor
push
ja
imul
mov
mov
enter
push
push
fsubl
xor
cmp
imul
adc
push
mov
rclb
or
xlat
dec
das
testl
mov
test
inc
mov
inc
loopne
xor
xchg
pusha
movsl
dec
xor
add
sbb
insl
inc
add
xor
push
imul
cmp
stos
subb
hlt
add
inc
stos
mov
adc
shrb
mov
add
lock
and
setle
stc
clc
cmpb
js
xor
fucomp
pop
roll
ret
or
orb
jns
pop
sbb
adc
inc
outsl
in
and
fcompl
xchg
mov
mov
jge
pop
or
mov
jns
sbb
add
mov
push
jmp
add
and
xor
mov
push
subb
insb
je
jae
out
sbb
fsts
push
cwtl
pop
pushf
dec
loopne
jbe
xor
sbb
dec
aas
pop
push
jbe
and
clc
fadds
mov
shlb
out
jecxz
dec
fcom
pop
pop
repnz
jp
adc
sub
push
add
and
add
push
pop
jne
rcrb
adc
clc
inc
or
and
cmpl
pop
mov
lods
push
pushl
mov
or
lods
add
gs
test
adc
add
mov
shrb
nop
xchg
iret
andl
std
xor
aas
sbb
push
icebp
imul
mov
adc
xchg
incl
repnz
inc
inc
pop
imul
sbb
ret
icebp
lret
sub
push
push
sbb
rorb
repnz
movsb
leave
or
sbb
lcall
call
repnz
mov
in
in
inc
in
in
mov
cwtl
daa
lcall
pop
mov
dec
inc
cmp
pop
in
adc
add
pushf
cmp
movsb
mov
push
les
cld
mov
lods
xchg
hlt
inc
lcall
xor
ljmp
pop
push
movsl
js
imul
cmp
sahf
inc
ja
arpl
sbb
mov
add
jne
add
out
jo
pop
xchg
lods
rolb
and
or
enter
push
xchg
sbb
mov
aam
loope
ret
iret
repz
nop
fsubr
repnz
mov
sbb
lret
test
cmp
iret
mov
nop
imul
push
imul
cmp
xor
add
mov
mov
mov
lods
add
or
mov
mov
cmp
and
mov
add
inc
jae
xchg
cmp
or
rorl
add
sbb
sbb
pop
xchg
fwait
lea
mov
pop
in
and
outsl
inc
stc
jnp
mov
xor
add
rorl
pop
test
jae
icebp
das
push
aad
adc
inc
push
cld
add
call
pop
stc
popa
mov
pop
jge
or
or
xchg
cmp
nop
pop
inc
sbb
push
mov
filds
shll
mov
xchg
and
push
call
fs
mov
sub
mov
fistl
ja
inc
jmp
push
leave
mov
sub
testb
or
daa
dec
jae
push
movsl
cmp
add
jg
sbb
mov
in
jo
add
sbb
sub
fiadds
ret
lret
add
or
push
ja
sbb
cmp
ja
enter
or
int3
push
jae
iret
rolb
add
add
out
leave
fstpl
aad
and
loope
push
fists
mov
jae
addr16
cmp
push
ret
js
push
scas
scas
mov
daa
sub
sbb
call
inc
pop
dec
test
loopne
mov
inc
sti
test
popa
mov
jl
shrb
es
test
dec
fisttpll
push
lock
and
and
cmp
xchg
sbb
push
and
sbb
cmpb
inc
sub
lret
or
aas
cltd
or
xchg
arpl
or
pop
jb
cmp
sub
pop
sub
and
sbb
push
mov
or
jno
jl
sbb
xchg
inc
mov
popa
push
mov
adc
pop
sbb
cmpb
sbb
lds
mov
pusha
cmp
aas
aaa
rcrl
or
sbb
clc
push
push
add
xchg
push
cmp
and
leave
jae
rcrb
mov
and
add
push
pusha
inc
xlat
and
and
pusha
int
inc
scas
mov
xor
mov
in
sbb
and
ljmp
jne
mov
xchg
dec
or
jg
xchg
xor
loopne
cmp
sbb
cmpsl
ret
lods
bnd
sub
or
rorl
rolb
not
out
inc
add
cld
movsl
push
mov
push
xor
ja
loop
pop
adc
jl
leave
or
js
xchg
jg
lock
pop
mov
jmp
or
jne
sub
ret
mov
lds
add
fwait
xchg
or
sbb
xor
repnz
sub
cmpsb
ja
add
dec
push
cmp
dec
xchg
xor
push
pop
ficomps
xchg
or
lret
or
test
movsb
mov
adc
push
inc
mov
inc
test
inc
mov
dec
mov
and
lods
ds
sub
sti
xor
movsl
mov
out
js
lret
stos
push
mov
clc
xchg
xchg
test
adc
push
add
push
stos
je
nop
push
ss
sbb
mov
fildll
pop
push
repnz
stos
xchg
xchg
adc
pop
sub
imul
repz
or
inc
mov
testl
xor
inc
mov
mov
rcr
bound
mov
bound
dec
jmp
sbb
cmp
and
sub
push
and
push
repnz
cmp
cmpsl
pop
sbb
rclb
dec
mov
sub
mov
mov
adc
rolb
adc
pusha
inc
outsb
push
dec
iret
lock
inc
loope
inc
sahf
xchg
nop
mov
daa
xchg
dec
mov
push
cwtl
inc
push
jns
insl
enter
jb
and
mov
sbb
inc
aam
cwtl
iret
jae
sbb
adc
xor
mov
add
repz
or
pop
push
test
out
mov
xor
and
testl
xchg
inc
push
stc
adc
repz
cld
shl
adc
mov
add
pop
add
das
add
add
mov
and
dec
je
lods
xor
sub
test
and
test
pusha
jbe
and
js
pop
test
mov
in
add
pop
cmp
stos
mov
add
inc
and
dec
add
adc
and
cmpsl
or
je
mov
mov
xor
bound
sbb
cwtl
or
dec
test
pop
dec
sbb
xor
outsl
pop
jmp
inc
sbb
push
fwait
nop
or
xor
or
cmpsb
gs
inc
sbb
push
and
mov
dec
or
ljmp
jg
popa
and
dec
pop
sbb
cmp
dec
xchg
stc
es
xor
pop
ret
mov
in
lock
js
inc
push
repnz
repnz
push
stos
les
xor
mov
and
push
cmc
rcll
repnz
lock
movsb
xchg
mov
and
lea
test
pusha
sti
sbb
bound
out
or
cmp
jmp
jns
mov
or
xor
xchg
es
xor
push
or
add
push
fidivl
lds
pusha
sub
dec
push
sbb
cmp
rclb
aas
pusha
aas
sub
lcall
mov
rolb
scas
pop
sbb
mov
ret
push
and
imul
lods
out
call
int
or
pop
xor
jo
ds
sub
stc
dec
sbb
cs
and
dec
das
pop
lea
sbb
ret
sub
sub
lea
xchg
push
ds
iret
push
aaa
out
push
sub
jbe
sub
sbb
add
dec
jge
ret
fs
jne
xor
xor
sahf
push
fwait
adc
dec
push
fs
xor
dec
in
lock
mov
sub
mov
push
aaa
or
add
adc
sbb
sbb
ds
and
dec
sub
rclb
jns
pop
lock
mov
xor
jmp
xor
cmc
mov
daa
or
push
in
mov
outsl
inc
mov
xor
mov
sahf
adc
or
dec
jae
shlb
test
cmp
jb
ret
cmp
mov
add
cmp
inc
cs
cmp
test
mov
sub
and
mov
xor
nop
inc
dec
aas
xor
sub
hlt
and
sbb
jno
jl
sbb
or
mov
jmp
jg
inc
les
int3
pop
fsubs
movsb
push
jns
xchg
mov
fiadds
xor
and
pop
repnz
and
cmc
pushf
add
cmpsl
xlat
and
loop,pn
popf
mov
mov
push
pop
pop
mov
or
and
and
jae
ret
xchg
xchg
mov
ret
inc
jns
or
stos
push
out
sub
adc
stc
sub
push
aam
inc
icebp
movb
addl
lcall
cmp
mov
sub
mov
pop
and
test
cmp
and
sti
addr16
scas
jbe
cmp
aad
pusha
sbb
fnstenv
test
lret
push
jns
cmp
cwtl
inc
sub
out
nop
inc
js
xchg
inc
es
cmp
dec
inc
in
sub
push
and
cmpsb
movsb
jl
dec
inc
sahf
les
xchg
sub
xor
cwtl
push
xchg
mov
adc
add
nop
test
mov
cmp
mov
pop
or
insb
jo
mov
cmpsl
fs
and
mov
mov
cltd
inc
pop
leave
inc
in
cmc
repnz
mov
imul
lods
xor
lods
call
cmpsl
mov
lods
outsb
pop
andb
incb
roll
mov
test
jne
and
adc
xor
jae
aaa
pusha
in
lock
cmp
add
lahf
jl
in
push
add
pushl
inc
push
xchg
add
in
xor
lret
ja
pop
cli
nop
dec
mov
leave
push
stos
cmc
sub
sbb
push
lods
aam
jb
sbb
jb
fs
and
jp
push
ljmp
cmp
cmc
adc
jmp
xor
inc
lea
dec
mov
testl
and
or
jo
or
pop
adc
pusha
sbb
push
cmp
movsb
add
or
pop
sub
subl
mov
mov
iret
dec
or
pop
dec
pop
shrl
sidtl
mov
mov
xor
push
add
pushl
add
adcb
das
hlt
loopne
push
cwtl
or
in
mov
jmp
pop
arpl
stos
dec
fisubrl
xor
adc
and
xor
mov
xlat
int
int3
jo
ret
jp
adc
movsl
adc
adc
rclb
pop
fiaddl
cmpsb
mov
jmp
sbb
insl
movsl
mov
ljmp
mov
or
lods
and
mov
xor
sub
shlb
xor
mov
cmp
in
pop
sbb
loopne
outsb
inc
xchg
inc
sbb
in
mov
sbb
stos
adc
stc
push
or
jns
sbb
inc
sbb
sbb
lock
sbbb
xor
push
mov
push
xor
test
pop
sarb
sahf
or
jns
lods
movsl
push
jb
lcall
and
sbb
mov
nop
xchg
mov
mov
adc
popa
in
mov
insb
fadds
sbb
jecxz
xor
mov
inc
imul
sbb
in
cmpsb
pop
fidivl
push
and
movsl
ja
dec
push
es
sbb
push
in
lahf
cld
mov
mov
cmp
push
or
xor
add
ljmp
sub
adc
stos
lcall
and
xor
inc
nop
test
sub
fsubrs
inc
cmp
and
cld
xor
xor
xor
shrb
xchg
ss
pop
sub
pushf
pushf
or
aaa
mov
dec
push
std
cmp
mov
pop
call
push
es
sub
cmpsb
loop
lods
jmp
cmp
pushf
adc
mov
sbb
add
jae
push
mov
fadd
push
ret
cmpsb
lahf
cmp
enter
jmp
sbb
sbb
sbbl
aad
xor
mov
inc
cmpl
sub
bnd
dec
xchg
push
das
xchg
andl
xchg
popa
ja
jae
cs
dec
push
push
in
imul
arpl
fwait
mov
cmpsb
fldlg2
jno
push
jmp
je
xor
addb
dec
mov
movsl
cmpsb
shlb
jb
pop
outsl
and
lret
int
leave
test
fwait
pop
cmp
pop
push
xorl
jl
inc
pop
dec
pop
push
and
cmp
cmp
xchg
sahf
jne
xor
stos
dec
push
in
push
int
mov
aas
test
lods
push
popa
movsl
and
mov
sbb
jnp
inc
jnp
mov
test
fidivs
mov
mov
lods
xchg
xchg
or
mov
movsb
cmpb
mov
and
xchg
cmp
sub
xor
and
add
lret
adc
nop
sub
int3
ret
dec
lret
setae
add
dec
imul
xor
stos
cmp
xor
rcrl
or
mov
ret
lds
cmpsl
or
mov
sbb
dec
mov
xchg
outsl
addr16
jl
ret
mov
das
add
addr16
or
sbb
lods
sbbb
or
adc
or
test
test
orl
push
shrl
push
repnz
pop
icebp
loop
sub
and
popf
push
nop
movsw
jle
jecxz
dec
pop
lods
or
pop
lea
jmp
jecxz
loope
sub
jns
jle
lcall
pop
pop
test
dec
aam
and
push
mov
daa
or
leave
test
pusha
adc
bound
cs
test
xorl
mov
xorl
pop
rcrl
sub
movsb
shlb
dec
outsl
rolb
jae
push
nop
inc
dec
and
enter
sbb
xor
std
icebp
mov
xchg
push
lea
stc
aaa
sbb
in
in
push
test
test
xchg
jo
xor
push
pusha
cmp
int3
mov
lcall
sub
xchg
jmp
and
jbe
sub
and
or
inc
lcall
sub
cltd
aam
sahf
push
xchg
adc
pop
add
jae
adc
sub
sbb
mov
rcpps
push
adc
rorb
inc
jnp
fistps
jl
cmp
and
push
shl
push
pop
add
loopne
dec
push
js
pop
jb
cmpsb
dec
push
lods
out
nop
cmp
js
std
into
fmuls
mov
adc
fs
sbb
xchg
cmp
pushf
lea
jo
and
faddl
push
inc
xchg
aas
fcoms
iret
gs
and
outsb
and
shl
jmp
jo
pop
push
push
sub
jg
jmp
adc
nop
jge
xor
push
testb
out
or
inc
mov
pushf
cmp
dec
pusha
mov
test
pop
cld
aas
or
popf
add
jo
movsl
add
aaa
mov
jo
rorl
dec
sub
xor
xchg
call
fadds
mov
sub
je
and
pop
popf
test
imul
push
and
xchg
leave
mov
int
add
or
or
lcall
jge
mov
push
mov
je
mov
xchg
xor
aad
ds
dec
call
add
rcll
push
daa
sub
std
inc
jne
roll
cmp
cltd
pop
jns
lock
or
addr16
xor
and
and
xor
jnp
sub
outsb
insb
bound
or
or
rorl
jge
inc
stos
je
pusha
sub
in
hlt
xchg
sbb
je
mov
push
ss
ljmp
mov
add
add
mov
or
jmp
arpl
sub
pop
movsb
les
icebp
inc
roll
pop
add
lea
lds
mulb
cmp
add
and
sub
sub
pop
xchg
cmp
mov
lods
ja
data16
dec
inc
cmc
mov
inc
movb
test
sub
jae
sbb
lcall
pusha
scas
mov
roll
jo
pop
add
add
cld
fstps
mov
inc
add
and
cmpsb
mov
or
add
sub
lock
or
repnz
insb
or
add
mov
push
sub
imul
jnp
add
movsl
adc
icebp
and
sub
push
push
mov
in
pop
cmp
gs
insb
inc
cmp
jbe
fs
jo
cmpl
mov
xor
xor
inc
xor
or
inc
push
leave
test
jno
mov
push
push
push
je
sti
pop
add
mov
dec
insb
sub
push
sbb
pop
shlb
lea
int
out
je
lea
add
mov
orl
dec
inc
dec
dec
shrl
fwait
sbb
add
adc
data16
jl
out
add
stc
je
sarb
pop
sti
xchg
inc
pop
iret
push
sbb
xchg
popa
loope
pop
sbb
and
ret
xor
mov
push
push
rolb
shlb
or
lea
xchg
adc
xor
inc
outsb
sub
inc
inc
dec
cmpsb
bound
loope
cmpsl
mov
mov
inc
add
ds
push
pop
dec
stos
sti
adc
stos
inc
fwait
jp
jmp
mov
adc
inc
out
mov
adc
inc
push
xchg
xchg
je
push
push
mov
add
pop
jo
push
cmp
daa
sub
add
movsl
ljmp
cmpsb
and
out
sub
add
mov
mov
push
lar
mov
fstpt
xor
adc
dec
test
call
jo
cmp
cmc
add
es
leave
insb
push
or
xor
mov
cmp
push
fidivl
aas
ds
adc
mov
xchg
jnp
outsb
cmp
jne
xlat
mov
mov
imul
mov
je
cmp
je
cmp
je
cmp
je
push
inc
cmp
dec
add
pop
test
in
mov
inc
hlt
jne
push
mov
aas
js
xchg
adc
aad
pop
xchg
xor
clc
loopne
mov
cmp
xor
sbb
ret
push
jne
mov
addb
or
mov
shlb
mov
out
sar
loope
xchg
push
pop
shr
xchg
xor
lock
rcrb
loopne
addl
hlt
push
add
aas
insl
adc
pop
cwtl
and
add
add
xchg
dec
sub
push
icebp
and
adcl
popf
test
inc
cmp
fcmovb
pushf
in
xchg
mov
jp
sbb
add
lods
les
loopne
cmp
cltd
lods
or
jecxz
ss
add
shlb
mov
push
popf
data16
pop
fldenv
push
push
cmp
movsb
rclb
sub
or
push
daa
iret
sub
cld
rcrb
xor
xchg
sbb
ljmp
dec
xchg
comiss
inc
xchg
pause
clc
ja
fs
and
sub
lock
inc
and
jns
adc
test
fcmovne
mov
inc
imul
andb
ret
cmp
stos
cli
test
call
loopne
adc
dec
push
add
ss
leave
and
in
mov
or
rcrl
pusha
or
aad
sub
out
stos
pop
xchg
test
xchg
dec
xchg
or
movsb
cltd
xchg
sub
fdivrl
and
leave
hlt
sub
adc
cs
pop
xchg
ret
fldl
and
lods
mov
add
cmp
addb
fistps
xchg
inc
push
jns
inc
insb
lods
xor
jae
das
movsb
jae
test
mov
outsl
icebp
mov
sbb
pop
div
jle
inc
aad
movb
addb
rorb
aam
dec
sahf
dec
aaa
test
mov
adc
loopne
mov
fists
push
mov
pop
mov
sub
mov
mov
xchg
out
enter
push
sbb
sbb
push
lea
xor
jg
nop
sub
push
xchg
clc
je
push
push
adc
stc
ljmp
ss
adc
lds
push
mov
add
mov
mov
push
dec
jo
sbb
adc
jbe
sbb
adc
test
es
ret
les
lods
cwtl
stc
adc
jecxz
test
adc
addr16
lret
adc
and
jbe
and
loopne
xchg
adc
adc
shrb
fiaddl
jne
or
mov
add
aam
cmp
rclb
rolb
pop
imul
les
pop
mov
pop
pop
pop
add
jns
adc
dec
test
mov
or
roll
es
or
xorb
div
fildl
cmpsl
aam
add
pusha
loopne
mov
in
adc
lds
jne
movsl
add
out
dec
popa
push
xchg
pop
push
xor
mov
adc
pusha
xchg
dec
push
push
mov
add
int3
clc
mov
sub
sub
add
adc
jne
cld
sbb
sar
cmp
push
add
inc
push
stos
icebp
jo
and
jmp
sbb
pusha
jbe
mov
xchg
addl
fnsave
movsl
xor
add
aas
sub
dec
jne
dec
mov
ret
jo
cmp
popf
push
cmp
or
call
adc
push
subl
xchg
cmp
lea
push
or
xchg
or
movsb
or
in
mov
jle
cmp
jle
pop
imul
pushl
aam
movsl
test
cmp
push
adc
mov
jp
sub
adc
scas
adc
jg
pushf
dec
pop
pushl
push
or
or
jbe
adc
push
cmp
loope
or
adc
pop
add
inc
dec
add
adc
aas
or
or
mov
icebp
inc
call
add
pushl
and
mov
mov
leave
or
mov
lahf
fists
cmp
jb
cmp
jb
jmp
xchg
cmp
inc
jne
pop
sub
jo
or
jnp
xchg
mov
adc
pushf
jecxz
dec
push
shl
daa
inc
out
inc
test
movsb
jecxz
sbb
test
fisubrs
inc
test
sarb
cmpb
xchg
mov
jne
pop
push
mov
sbb
sub
addb
adc
cmp
inc
cmp
jbe
pop
add
pop
dec
add
xchg
cmp
xlat
or
adc
ret
inc
xchg
loopne
in
push
lds
push
push
lea
adc
cmp
test
test
es
cmp
cmp
scas
push
std
les
je
fwait
pusha
sbb
inc
in
xor
mov
dec
inc
rcrl
pushf
enter
mov
jle
pop
movsb
jnp
sub
dec
cli
inc
je
je
adc
dec
test
and
mov
push
shr
and
cwtl
pop
sar
push
xchg
jb
leave
cmp
fwait
out
lahf
jo
push
jmp
fsubs
cmp
jbe
sahf
or
push
jmp
push
add
cmp
xchg
push
xor
push
push
pop
leave
push
mov
xchg
mov
mov
in
mov
and
mov
cmp
rcrb
dec
cmp
push
inc
rcrl
adc
dec
xchg
dec
dec
fsub
mov
testb
rol
dec
aam
lea
in
ja
in
cmpsb
mov
mov
pop
popa
pop
gs
dec
lcall
or
mov
fcompl
sbb
lds
or
or
lods
sbb
push
or
fimull
rcrb
das
add
push
mov
mov
lahf
mov
sbb
mov
jp
call
fisttpl
sub
mov
aaa
enter
cli
addb
jmp
imulb
mov
loopne
pop
or
adcb
lock
add
mov
sub
lahf
mov
and
ds
adc
aas
sbb
sbb
pop
jge
sub
add
push
add
and
orb
mov
or
or
pop
push
pusha
pop
test
sub
js
inc
ret
lods
sub
or
mov
adc
pushf
and
add
dec
dec
testb
sbb
enter
push
mov
sub
pop
mov
jo
stos
jo
fisttpl
test
imul
sbb
xor
cmp
arpl
sub
push
or
in
test
push
loope
inc
pushf
out
fs
xor
sub
xchg
loop
pop
mov
jo
lret
jns
and
push
lods
bound
or
jno
or
push
imul
push
popa
or
repz
loopne
and
add
jbe
mov
inc
cmp
test
ret
int
jmp
and
jge
clc
add
xor
xchg
xor
push
je
lea
sub
pop
js
fisttpll
mov
push
lss
mov
sbb
sbb
repnz
mov
ret
or
and
add
adc
pop
or
sub
add
out
sbb
and
xor
or
sub
or
dec
test
outsb
dec
lods
fstl
pop
sub
loopne
out
iret
cmp
mov
inc
sbb
int3
and
or
gs
pop
in
add
sbbl
sub
mov
push
imul
stc
loopne
je
inc
sbb
dec
fdivr
je
push
icebp
lea
mov
push
and
xorl
fcomps
adc
pop
add
adc
cmp
fdivrs
incb
stos
jmp
push
pop
jmp
pop
pop
cmp
add
cmpb
adc
dec
loope
xor
je
cmpsb
push
out
or
stc
push
sbb
imul
inc
push
sbb
add
mov
inc
xchg
sqrtps
sbb
lods
aas
cmp
dec
inc
lea
mov
enter
mov
stos
rclb
or
into
mov
jne
rcrl
movsl
push
xchg
cmpsb
sbb
ss
sub
cmpsl
shll
xor
push
or
mov
push
lcall
sbb
or
push
sbb
dec
pop
or
pop
repnz
lahf
inc
jmp
mov
mov
push
mov
jg
xor
lods
push
push
cwtl
mov
mov
lahf
and
xchg
sub
stos
push
push
aam
stos
or
stos
and
fsub
xor
sbb
push
and
xor
inc
cs
in
jne
test
mov
addr16
sar
sub
jne
in
test
cld
dec
dec
enter
or
and
aad
add
stos
idiv
cld
adc
pop
sbb
xor
pusha
dec
jb
and
dec
lcall
mov
into
xor
gs
xor
add
inc
adc
pusha
in
adc
add
dec
pop
and
pop
add
xor
push
cmpsl
inc
dec
int3
mov
add
and
add
mov
insb
add
push
add
and
pop
push
addb
adc
out
jne
xor
adc
test
mov
arpl
jns
sub
cmpsb
loope
sarb
into
in
lea
ds
sahf
clc
sbb
fwait
imul
arpl
sub
and
aad
and
sub
add
sahf
out
dec
and
sbb
sub
test
dec
adc
sub
mov
xor
mov
ja
dec
pop
push
lea
aad
sub
movsb
jo
and
adc
dec
outsl
iret
add
lret
movlps
pop
test
xchg
mov
or
adc
lods
adcl
inc
xor
loopne
inc
pop
subl
pop
bound
movb
dec
mov
dec
daa
push
pop
jp
imul
fmull
inc
fs
das
add
cltd
fadds
ret
jmp
push
cmpl
xchg
xor
mov
xchg
in
pop
mov
icebp
in
lcall
cwtl
pop
and
mov
xchg
int3
inc
fsubr
cmp
in
fnstcw
xchg
sub
mov
ss
cmp
mov
aam
flds
mov
je
jne
push
pop
dec
mov
or
movsb
xor
loopne
push
xchg
xor
outsl
jae
pop
fistpl
pop
sbb
sub
xchg
mov
dec
jl
std
scas
inc
sbb
xchg
jle
lea
cmpb
ficompl
xor
outsl
jecxz
gs
xor
inc
clc
movb
push
and
jg
clc
sub
cmp
pop
jl
pop
je
insl
push
xor
inc
add
xor
jo
inc
fdivl
mov
ficoml
cmp
xchg
dec
repz
jmp
test
cmp
mov
test
mov
loopne
adc
outsb
dec
loope
jae
sub
add
or
lcall
sti
or
pop
cmp
pop
sbb
pop
mov
mov
icebp
test
xorb
dec
hlt
and
scas
and
enter
sbbb
pop
mov
or
repz
push
test
dec
out
jle
sub
pop
push
gs
loop
sbb
adcb
pusha
jae
xor
inc
sbb
lahf
rolb
jmp
nop
xor
and
jmp
cmp
jne
rcrb
jmp
je
lock
lret
out
stos
enter
push
mov
cli
jmp
adc
xchg
sub
jno
sti
outsb
and
push
adc
jge
inc
add
cmpsb
dec
cmp
or
stc
insb
test
cwtl
xchg
pop
mov
push
repnz
inc
xor
or
lret
je
adc
dec
loop
cmp
js
sub
nop
lret
mov
mov
adc
clc
int3
dec
jne
mov
push
incl
mov
mov
mov
xchg
jae
sbb
aas
dec
and
rol
loop
lea
jmp
push
sub
ret
mov
inc
sub
dec
jns
mov
inc
adc
sbb
fcomps
ret
jmp
pop
inc
in
sbb
repnz
xor
or
inc
add
or
in
adc
or
or
sub
inc
sbb
sub
push
push
test
xchg
addb
inc
jmp
subl
ret
aam
inc
out
fcoms
or
jle
in
mov
adc
andl
in
arpl
adc
adcb
pop
adc
test
inc
scas
pop
aad
ret
aad
call
fstpl
push
loopne
cmovno
mov
andb
ret
or
dec
popa
daa
sbb
mov
lock
mov
pop
cmp
scas
jae
test
push
push
aam
jnp
jecxz
repz
call
mov
adc
dec
fsubl
jg
jg
dec
add
sub
cmp
gs
jmp
movsl
std
or
lds
mov
lea
into
imul
and
dec
and
dec
or
movsl
mov
sbb
mov
push
adc
xorb
or
cmp
xor
adc
and
push
test
push
loope
or
sbb
mov
or
not
sub
adc
pop
push
aaa
jmp
xchg
test
and
push
push
jge
inc
xchg
cmpsb
pop
bound
jl
mov
or
and
data16
into
imul
dec
sbb
cmp
setae
or
fcompl
push
sarb
loop
aaa
xchg
sbb
dec
pop
cmp
or
scas
jmp
mov
leave
movsl
mov
sbb
xchg
fimuls
test
mov
call
xchg
test
movsb
cmp
rcrb
lock
movzwl
test
je
test
xchg
push
mov
lret
addr16
mov
push
mov
and
push
xchg
dec
mulb
adc
dec
or
sbb
jne
cmpl
call
inc
jecxz
sbb
cmp
ss
mov
cwtl
add
mov
xor
sbb
ret
cmp
mov
lock
or
fcmovbe
sub
fidivl
pop
or
jmp
mov
scas
xchg
lock
and
push
adc
loopne
jl
mov
sbb
or
sar
mov
sub
mov
mulps
sbb
mov
sbb
inc
jb
and
sbb
push
jecxz
es
mov
jo
pop
ljmp
andb
icebp
jb
mov
pop
mov
push
or
mov
mov
push
mov
sub
iret
addr16
pusha
mov
in
pusha
pop
pop
inc
pop
mov
incl
je
jmp
sub
popa
outsb
mov
pop
jle
mov
cmp
in
sub
xor
and
add
rcrb
inc
popa
test
add
jecxz
lret
mov
orb
fiaddl
mov
sub
jne
xor
and
and
inc
push
adc
or
in
ja
or
push
mov
push
mov
pushf
nop
or
call
lods
push
jg
and
in
loopne
sbb
test
shr
cs
in
or
and
faddl
hlt
sub
in
and
jbe
xor
cli
lock
filds
scas
lcall
mov
unpcklps
loopne
cmp
or
lock
and
cmc
inc
in
push
push
adc
rcrb
mov
cmp
push
icebp
jge
stos
push
loopne
cmp
or
mov
add
inc
or
inc
xchg
sub
test
add
subl
je
pop
inc
xor
push
mov
fisttpl
push
cwtl
call
xchg
inc
add
add
pusha
and
mov
sbb
adcb
aam
scas
iret
rcl
imul
nop
adc
jp
loop
inc
jmp
cmp
js
jg
add
or
mov
cwtl
or
sub
push
sub
push
cmpsl
std
aas
ret
dec
add
inc
or
mov
cwtl
xchg
xchg
rol
jns
pushf
fstl
cwtl
add
push
xchg
jmp
mov
mov
sub
ss
and
push
test
adc
add
stos
mov
inc
mov
sub
push
push
les
adc
add
adc
pop
pop
pop
ret
test
leave
rcl
fbstp
in
sub
int3
fst
or
push
loope
les
mov
lock
and
shr
popf
imulb
pop
cmp
push
push
outsl
ja
fdivs
bound
je
leave
or
pop
aam
jne
fisubl
lock
add
xor
idivl
jl
mov
aam
dec
add
or
pop
dec
or
fsubrs
and
cmp
imul
pop
xchg
out
push
idivb
mov
je
rcll
sub
xchg
shlb
imul
inc
push
aad
xor
movsb
adc
jmp
cmp
sbb
stos
movsl
pop
aam
xor
dec
pushf
push
xor
inc
cmp
jo
enter
mov
loopne
fst
inc
enter
fcompl
loop
adc
mov
xchg
aad
pop
or
lods
aas
js
int3
test
sbb
adc
test
inc
mov
je
pop
inc
push
mov
dec
inc
add
dec
jmp
cmp
sub
out
lods
jo
test
fsubrl
dec
or
imul
xchg
jbe
js
pop
mov
or
add
movsb
pop
inc
pop
dec
adc
push
add
clts
adc
add
xor
push
mov
xchg
and
mov
xor
ret
inc
cmp
mov
inc
push
xor
xchg
sbb
push
subl
jbe
add
pop
outsb
mov
jno
lods
cmpsb
adc
fiadds
inc
adc
adcl
push
pop
push
xchg
lea
aaa
dec
js
movsl
shl
inc
sbb
adc
adc
adc
icebp
sarb
arpl
push
cmpsb
movsb
test
lea
push
mov
aaa
mov
sbb
nop
loopne
xor
xor
lock
jne
push
add
lods
pop
in
loopne
or
mov
mov
mov
mov
cmp
sahf
inc
shrl
ret
pusha
or
or
xor
jo
inc
loop
insb
test
dec
mov
test
lahf
dec
adc
mov
clc
inc
push
mov
sti
jge
adc
js
cmc
cmp
jg
mov
lcall
cltd
mov
xchg
fisttpll
cmp
cmp
jbe
nop
xchg
mov
jmp
adc
dec
mov
mov
mov
push
shr
cmp
das
cmp
cmpsb
xchg
insb
push
sub
and
in
pushf
lahf
xchg
xor
mov
pop
enter
push
icebp
sbb
leave
aad
add
test
inc
test
cmp
dec
popf
stos
push
in
push
pushw
push
out
adc
sbb
sub
orb
pushf
popf
mov
shr
movl
sub
sub
pop
movsl
push
adc
fcmovne
jle
sti
call
push
push
mov
rol
fisubl
jmp
add
mov
jbe
icebp
and
sete
fs
dec
test
pop
stos
xchg
movsb
gs
xor
aaa
addr16
movsb
and
push
xor
xor
push
pop
cmp
push
pop
popf
les
jbe
fldl
pusha
in
push
sbb
fisubl
aam
loopne
mov
sub
push
or
pop
addr16
adc
jecxz
rcll
add
clc
or
test
cmp
inc
or
jae
das
scas
sbb
jne
add
repz
dec
push
jns
mov
je
inc
or
push
or
mov
or
cmp
push
push
inc
jle
sub
inc
sbb
cmp
mov
test
fcompl
cmp
and
mov
fmull
mov
pop
movsb
es
mov
cmpsb
jnp
cmp
je
xchg
and
push
or
fisubrs
movsl
cmp
xchg
nop
or
cmpsb
adc
fadd
add
roll
outsb
out
lcall
dec
hlt
xchg
xchg
and
cmpb
push
sub
sbb
in
sub
jmp
xor
sub
or
xchg
xlat
adc
js
dec
add
push
dec
into
je
mov
pop
and
sbb
push
movb
adc
pop
fdivl
jb
shlb
sbb
push
test
gs
sub
call
lods
clc
sbb
adc
sti
push
jle
cwtl
or
dec
loopne
adc
out
hlt
lea
mov
mov
mov
outsb
cmp
fnsave
test
orb
xchg
or
fwait
js
rclb
movsb
cli
mov
and
ficompl
lret
pop
dec
pop
cmp
outsl
pusha
mov
jo
popf
jbe
fcmovne
add
or
dec
sub
inc
mov
push
cli
or
xor
jns
mov
sbb
cmp
dec
shll
jo
cmp
jl
mov
movsl
or
call
cmpsb
cwtl
sub
sti
or
daa
shrb
pop
sub
test
lcall
shlb
scas
sub
in
sbb
rcrb
jmp
mov
jae
mov
xchg
int
adc
and
add
sbb
xor
test
pushl
add
sub
push
fmuls
rorb
sbb
orb
jo
enter
push
orb
and
shl
push
pop
ret
arpl
jns
xor
hlt
dec
ret
lret
push
add
adcb
aas
or
xchg
clc
adc
and
cmp
adc
xchg
xor
sbb
shrl
dec
pcmpeqw
xchg
push
or
adc
test
inc
shll
es
scas
xor
pop
mov
add
popa
add
fbstp
pop
jmp
cmp
sbb
pushf
in
jo
jne
cs
push
xor
xor
ror
test
lcall
add
push
ja
mov
and
or
lock
jne
mov
jb
mov
inc
data16
jmp
inc
xor
lea
inc
dec
daa
mov
pop
inc
inc
or
adc
out
out
adc
fdivs
mov
xchg
mov
loop
shl
mov
push
mov
mov
sbb
sub
outsb
inc
and
rol
ljmp
xchg
jbe
pop
add
movd
jmp
push
clc
fistps
lea
add
push
sub
gs
adc
mov
notb
push
clc
out
test
pop
andl
fistpll
fnstcw
adc
add
in
sti
je
pop
mov
and
or
mov
iret
and
fucom
das
add
iret
sub
or
push
ljmp
clc
imul
add
sbb
out
inc
xchg
out
fnop
movsl
sti
dec
sub
mov
stc
push
adc
xchg
pop
mov
stc
or
dec
shl
clc
push
stc
push
push
push
je
icebp
jne
leave
cmpsl
jge
xor
ja
mulb
sub
mov
int3
cmpsb
cmp
adc
and
dec
jge
mov
cmp
xchg
lods
outsb
aaa
or
ret
adc
shrb
mov
inc
ret
mov
jne
lret
clc
imul
cmp
mov
or
jmp
cmp
subb
dec
aas
xor
loopne
iret
sbb
jp
fwait
push
pop
repz
cmp
mov
pop
aas
push
pop
inc
or
pop
xchg
js
nop
jno
xor
arpl
es
add
movsb
add
inc
push
cmp
sub
pop
xor
sub
jle
xchg
lods
push
adc
add
addb
or
mov
xchg
or
sbb
xchg
sub
add
je
pusha
push
jnp
mov
pop
movsb
int
pop
mov
scas
jo
xchg
and
push
and
mov
adc
psrad
cs
mov
cwtl
notl
lock
xorl
or
into
add
gs
or
pop
and
insb
insb
test
enter
mov
movsb
add
clc
and
sbb
icebp
pop
testl
je
cmp
je
mulb
add
jl
push
lock
mov
and
iret
je
mov
adc
lds
sti
push
sub
inc
pop
and
pop
lea
test
ds
leave
push
addb
xchg
out
push
add
lock
adc
add
sahf
pop
in
lock
cmpsl
addb
jmp
adc
in
into
ja
mov
sub
dec
and
mov
int
mov
cld
ret
test
into
add
push
mov
or
lods
or
cmpps
in
or
cltd
pop
fisttpll
adc
inc
sbb
xchg
dec
shlb
mov
cwtl
jl
testb
or
add
push
inc
fidivs
and
ja
iret
orl
test
sbb
inc
mov
and
push
add
and
jns
testb
ret
push
sbb
bound
sbb
jns
adc
test
push
cmovae
mov
jo
popa
inc
xchg
sbb
mov
or
mov
cs
and
int
mov
cwtl
call
pop
mov
aas
jne
or
xor
xchg
fsubs
imul
cld
cltd
jae
xchg
stos
or
pop
enter
mov
cwtl
fidivrs
das
inc
lods
sub
push
test
sub
pop
loopne
adc
pop
or
mov
push
push
cwtl
dec
push
lea
rclb
pop
dec
loope
lea
lcall
push
or
sbb
mov
add
lods
add
adc
pushf
mull
in
cltd
fcoms
jecxz
mov
jb
out
adc
pop
stc
in
cmp
xor
push
es
out
push
lret
add
aam
mov
shlb
pop
arpl
rcll
lods
and
sub
sbb
ss
push
jnp
xchg
fimuls
fmul
inc
std
mov
icebp
inc
jmp
mov
ffree
arpl
pop
cmp
je
push
mov
push
sbb
push
pushf
sbb
dec
shlb
leave
sbb
cmp
je
aaa
cltd
ja
dec
lods
andl
paddsw
mov
lret
jne
arpl
sbb
adc
dec
pusha
mov
or
add
nop
pusha
pop
pusha
pop
imul
and
push
mov
and
pushf
and
xor
inc
or
sbb
inc
push
push
or
pop
sbb
xchg
xor
jecxz
lock
js
adc
adc
leave
int3
clc
mov
in
cmp
jo,pt
jmp
fnstsw
push
xchg
ds
loopne
clc
aad
sldt
and
lea
in
test
aam
inc
dec
imul
xor
pusha
shl
or
fadd
jb
fs
cmp
inc
jecxz
push
push
fsubr
and
and
cmpl
iret
cmp
test
push
push
ljmp
xchg
ja
int3
mov
adc
cmpb
xchg
sbb
es
pop
mov
cmc
adc
xor
lea
pop
pusha
xor
xlat
aam
fmuls
sarb
ret
adc
pop
jo
push
out
jo
push
cli
or
shrl
sahf
cmp
push
xchg
lahf
inc
xor
popa
cwtl
bound
insl
push
add
iret
dec
xchg
orl
adc
cwtl
enter
scas
add
and
movsb
jne
test
inc
and
icebp
aas
mov
je
mov
adc
int
cmpsb
jnp
inc
popf
daa
jae
xor
pop
sahf
add
push
lcall
aam
test
das
mov
pop
cltd
adc
cmp
push
lods
mov
aas
pop
lea
push
push
int
prefetch
mov
jle
out
adcl
push
fldt
lods
mov
mov
dec
jecxz
inc
les
jp
jp
hlt
fsubrl
and
aas
adc
pushf
xor
andl
addr16
inc
cld
fs
add
cmp
inc
inc
dec
or
imul
inc
sbb
push
inc
scas
orb
add
pushf
xchg
jmp
rol
pop
adcl
insb
add
sbb
xor
das
mov
xorb
pop
data16
rclb
in
push
pop
sub
push
les
adc
int
push
xchg
mov
adc
filds
pop
loope
es
xor
pop
cmp
rdmsr
sarb
aaa
dec
stos
fldl
mov
mov
jle
decb
xor
call
sub
lea
or
xor
adc
fs
sbb
mov
test
hlt
test
icebp
xor
mov
lea
cmpsb
rclb
push
lea
push
test
and
dec
xchg
xor
jo
mov
push
push
pusha
sub
je
add
adc
push
lret
lods
jno
stos
int
push
and
les
ret
in
fbld
out
sub
inc
mov
ret
pslld
dec
insb
adc
add
ficompl
rclb
xor
or
adc
inc
xor
pop
leave
loopne
and
jb
sbb
sbb
pushf
test
push
cmp
sub
rolb
xor
push
xor
mov
pop
mov
and
inc
add
and
pop
mov
insb
xor
aas
or
sahf
pop
inc
xchg
dec
jnp
andl
xor
add
xor
loop
scas
jno
int
jo
and
push
adc
iret
iret
or
int
push
pop
push
cwtl
loop
push
js
aad
sbb
and
mov
ss
push
inc
adc
fmull
jmp
aaa
mov
add
sbb
pop
pop
pop
pop
popa
cmp
jge
push
inc
idivb
add
inc
and
inc
lock
jbe
mov
jl
andl
pop
xchg
inc
pop
adc
in
je
jl
and
popf
xor
outsb
inc
or
pop
jb
mov
mov
sbb
mov
sahf
push
xchg
dec
outsb
mov
xchg
xor
rcll
cmp
push
xor
and
adc
aad
xchg
inc
cmp
mov
test
pop
mov
mov
fsubrl
add
push
mov
push
lock
movsl
jl
xor
dec
bnd
dec
cmp
adc
xor
jl
call
add
dec
cmpsl
adc
push
in
roll
push
outsl
shr
add
mov
inc
adc
mov
jecxz
inc
push
inc
adc
xchg
call
rolb
and
xchg
jp
jmp
pop
ret
jmp
pop
push
es
jecxz
mov
in
push
xchg
sbb
mov
lock
test
aas
sbb
add
jbe
add
add
jne
mov
xor
aas
lock
lods
add
sbb
testb
mov
sbb
or
mov
jge
daa
rcll
push
sbb
xor
and
xor
xchg
push
sbb
popa
lods
push
dec
mov
js
loopne
and
std
ss
mov
mov
push
adc
dec
lret
int
mov
mov
cwtl
jl
fistps
pushf
mov
fldt
xor
adcb
xchg
mov
mov
and
cmp
popf
add
mov
popf
shll
sub
add
sbb
add
ja
sbb
mov
mov
ret
jp
push
pop
loopne
xchg
xchg
xor
ljmp
rol
filds
fldl
lods
cmp
jne
shr
pop
mov
mov
mov
in
pop
mov
cmp
addr16
mov
and
mov
or
xor
ret
mov
pop
nop
jmp
and
inc
or
or
es
lods
ret
sbb
push
pushf
xchg
inc
xlat
adc
fcmovbe
or
aad
test
mov
mov
add
mov
inc
push
mov
pop
sub
mov
pop
dec
or
mov
or
js
std
mov
pop
andb
in
cmp
jmp
inc
ficoml
inc
fisubl
inc
sbb
push
pop
xor
lea
mov
sub
sub
mov
inc
mov
lods
fisubrl
pop
fcmovne
idivb
clc
loop
je
mov
add
push
jno
dec
add
xor
mov
sub
pop
add
or
push
or
sarl
jno
aas
pushf
xor
addr16
xor
add
nop
add
jb
jbe
cmp
sbb
pusha
add
in
mov
test
nop
inc
imul
lods
xchg
out
js
xor
push
shlb
gs
les
jno
jns
movsb
adc
lods
jnp
inc
cmpsb
daa
add
cwtl
mov
add
mov
imul
dec
or
je
out
jo
cmc
add
mov
scas
sbb
add
jmp
repnz
and
xor
cld
and
xor
fcomip
or
add
or
sbbl
dec
push
pop
hlt
inc
into
sub
incl
push
inc
xchg
or
inc
adc
mov
les
or
sub
xchg
sbb
dec
cmpsl
mov
fdivrl
xor
cmp
pop
and
and
je
rcll
shll
rcll
testb
rcll
pop
jae
adc
sub
bound
fisubl
orl
add
mov
data16
mull
test
mov
loope
mov
mov
sub
and
xlat
orb
or
out
add
imul
adc
loopne
adc
add
testl
jne
mov
fisubrs
inc
mov
inc
cwtl
imul
and
rorb
inc
inc
lcall
andb
sbb
mov
push
pop
and
mov
adc
sub
inc
orb
fadds
movsb
movq
xchg
int3
and
jle
dec
sbb
movb
inc
in
aas
pop
pusha
add
movl
incb
inc
insb
shr
inc
add
das
data16
fs
clc
dec
adc
adc
and
cmp
cmp
add
dec
iret
jo
sbb
stos
pusha
insb
std
lret
cmp
mov
dec
hlt
or
testl
mov
jge
cmpsb
mov
add
push
mov
hlt
sbb
inc
xchg
outsl
fs
sbb
lock
push
pop
mov
or
adc
inc
hlt
mov
mov
xchg
jne
xchg
pop
sarl
shll
push
jge
inc
lods
jnp
lock
mov
lcall
push
nop
sub
adc
insl
xor
push
ret
xchg
lock
adc
addb
not
adc
inc
xor
pop
sbb
mov
cld
jecxz
imul
jmp
sbb
mov
movsl
addl
insb
sbb
adc
mov
es
jg
call
lret
xchg
daa
inc
inc
inc
add
add
inc
jb
dec
insb
jne
sub
xor
xor
je
ss
loop
pop
dec
pop
dec
sub
add
ss
xchg
jl
adc
lock
mov
push
fisttpl
push
pop
mov
lea
clc
push
jecxz
or
push
mov
xor
dec
push
push
xchg
inc
aaa
jbe
aaa
fdivp
add
mov
rorl
mov
enter
add
pop
ds
loopne
dec
jg
repnz
andl
in
pop
fnsave
jp
aas
daa
or
cmp
mov
test
ja
xchg
bound
in
movsb
repz
lds
stos
push
outsb
into
leave
adc
xchg
cli
push
orl
lock
sbbl
xor
sbb
jl
sub
dec
dec
cmp
mov
sbb
xor
ss
inc
xlat
xor
daa
shlb
loop
dec
int3
push
add
mov
inc
push
push
push
ret
lock
sub
push
push
push
mov
aad
adc
pusha
pop
rcll
or
pop
sub
xor
fs
inc
bound
add
and
or
adc
lock
lea
pop
cmp
inc
leave
jbe
adcl
mov
pop
push
jnp
inc
fsubrl
pop
dec
loop
sbb
pop
mov
js
dec
push
popl
adc
pop
in
fdivrs
aam
jo
ret
inc
and
iret
rclb
call
inc
mov
dec
or
dec
or
cmc
xor
mov
or
or
mov
sbb
sbb
or
inc
aam
enter
and
sub
xor
fs
push
mov
jp
into
addb
or
adc
jl
push
or
add
sub
add
or
pusha
xchg
in
testl
shll
mov
pop
lret
aad
mov
push
call
hlt
and
xchg
lcall
mov
and
shlb
loope
bound
jmp
in
mov
push
mov
cld
ret
inc
enter
push
push
xor
fxch
std
xchg
cld
jl
movl
xchg
pop
push
push
or
or
mov
push
pushf
add
xor
adc
add
in
mov
fstl
dec
xor
sbb
dec
std
or
sbb
push
gs
outsl
ret
inc
push
and
pop
loop
andl
sahf
dec
adc
in
in
js
mov
push
rclb
inc
sub
sub
filds
testl
pop
dec
jmp
jbe
pop
lods
push
je
lods
xlat
add
mov
jge
sub
mov
mov
inc
sbb
bound
jnp
adc
shl
add
xor
cmp
push
push
sbb
cmp
or
push
sub
fists
sub
in
mov
movsl
xor
mov
int
out
xor
xchg
mov
add
push
mov
pop
xchg
insl
ror
or
sub
dec
icebp
push
orl
cld
push
and
in
cmp
pop
add
les
loopne
add
ret
testb
cmp
mov
cmp
pushf
mov
push
adcb
cmp
jecxz
stos
jl
jp
lahf
pop
andl
outsl
dec
call
cmp
ja
je
or
sti
int
sub
sub
sub
xchg
int3
aam
adc
mov
add
add
jo
js
jne
lcall
notb
fildll
push
jmp
cmp
movsl
test
bound
sub
cmp
xchg
jne
cwtl
inc
sbb
dec
mov
or
pop
and
pop
and
jbe
and
adc
cmp
mov
mov
ret
sub
jmp
mov
test
cmp
or
add
xchg
dec
imul
add
inc
add
mov
sti
or
adc
lods
pop
add
adc
add
cli
and
adc
movsb
das
icebp
lret
inc
lods
and
add
xor
cli
aaa
adc
or
and
cmpb
je
sub
add
lods
xchg
movsb
add
outsb
add
scas
test
inc
nop
adc
add
in
sub
outsb
mov
or
push
add
xchg
insb
push
sub
in
add
sub
call
mov
jnp
mov
adc
mov
add
dec
sbb
add
int3
sub
push
cmc
test
sti
sbb
jo
loope
pop
or
inc
xor
sub
jecxz
fs
iret
inc
cmpb
pop
sbb
jbe
movsl
xor
adc
fdivrl
notl
add
or
fdiv
jg
push
mov
push
sub
or
push
inc
push
push
push
mov
add
adc
sub
mov
call
mov
sbb
aaa
loopne
fs
lods
inc
cmp
gs
xor
notb
or
inc
addr16
jbe
rcll
testb
dec
add
cmp
add
inc
cmp
shlb
fidivs
or
mov
mov
xchg
subl
dec
pop
movsb
mov
or
nop
and
add
mov
fwait
out
les
adc
loopne
xchg
sub
sub
or
iret
mov
lret
adc
xchg
nop
mov
and
ret
xorb
push
in
mov
xchg
mov
ret
iret
movsl
cltd
sbb
clc
xor
xor
push
push
push
or
jb
shr
loopne
loopne
ljmp
pop
jge
jne
outsb
loopne
push
jp
or
dec
arpl
stc
sbb
inc
cmpsb
aam
aam
pop
xor
mov
and
push
test
or
in
cmp
pop
cmp
rcr
addb
sub
test
pop
xchg
fcoms
push
ret
shlb
fs
jl
and
imul
ffree
or
es
xor
ret
lods
or
dec
mov
add
push
adc
das
jmp
xchg
mov
sbb
movsl
lock
jne
mov
js
mov
fisubl
mov
sbb
sbb
sbb
or
add
notl
or
mov
adc
dec
jo
inc
stc
mov
ret
jb
jae
xor
or
jmp
and
or
or
mov
movsb
mov
sar
push
push
mov
dec
dec
hlt
enter
jb
push
popa
dec
mov
mov
sub
mov
out
push
mov
les
out
mov
add
push
xor
inc
enter
jnp
in
test
inc
push
jne
add
adc
xchg
or
push
add
fiaddl
leave
mov
sub
dec
shrb
data16
pusha
add
iret
loop
mov
mov
jo
or
in
daa
push
and
xchg
subb
movsb
sbb
dec
je
and
jmp
inc
mov
add
push
cmc
dec
ret
lods
mov
sub
sub
or
aas
das
or
mov
add
adc
sub
rorl
call
and
inc
std
inc
add
pop
xor
mov
aam
popa
or
jl
xchg
mov
movsb
mov
pop
mov
loope
add
lea
push
rorb
jg
and
aas
xor
xor
push
outsb
pop
cld
dec
in
jbe
cmc
or
and
clc
mov
dec
pop
incl
pop
fdivr
lds
sbb
or
enter
inc
inc
aaa
or
gs
ret
repz
and
aad
push
sbb
inc
std
jne
mov
dec
pop
hlt
dec
sub
bound
rcrb
sbb
popl
push
fs
or
sbb
add
outsl
or
ja
neg
sbb
mov
sbb
jle
push
and
xchg
nopl
cmp
pop
push
mov
push
or
fidivl
fdivrl
cli
icebp
push
in
popf
push
or
rclb
adcb
pop
mov
and
insb
mov
jl
out
add
call
movsb
mov
das
lock
mov
push
jne
add
inc
loop
jecxz
mov
push
add
lcall
scas
or
cmp
xchg
mov
or
pop
jg
sti
je
push
cmp
push
sub
sbb
push
mov
adc
je
push
sbb
adc
and
lock
sbb
lods
movsb
dec
sbb
inc
adc
pop
mov
jg
mov
inc
das
fdivrl
push
xchg
mov
lods
test
mov
adc
movsb
mov
push
pop
push
push
loopne
dec
ret
jl
mov
dec
pop
xor
lock
sub
or
add
pop
js
outsb
sarb
sbb
xchg
out
aaa
adc
and
push
inc
inc
data16
push
fisubl
mov
and
adc
rol
cwtl
and
lods
adc
or
adc
add
loope
mov
pop
dec
loope
mov
into
xor
jnp
enter
lcall
mov
adc
add
mov
or
mov
hlt
jge
mov
jle
push
shlb
ja
daa
xorl
inc
and
lret
test
popa
pop
push
test
pop
icebp
dec
jecxz
pop
push
pop
sbb
add
movsb
mov
arpl
fs
addb
loopne
movsl
add
test
or
cli
mov
imul
sbb
clc
ljmp
andb
in
sub
pop
fidivs
sbb
shrl
jnp
aaa
stos
and
add
push
xchg
xchg
mov
es
je
rorb
into
hlt
je
je
and
mov
call
add
pushw
data16
lods
push
adcb
jnp
push
jo
inc
add
lcall
hlt
lret
cmp
push
sub
push
mov
in
adc
push
in
imul
pop
add
add
fwait
add
sar
and
mov
js
add
rclb
inc
out
mulb
dec
dec
dec
hlt
add
pop
je
or
push
cmp
dec
clc
mov
jle
or
push
cmp
mov
xchg
out
xchg
inc
and
pop
and
cld
subl
mov
dec
sbb
dec
sub
mov
dec
adc
jmp
adc
dec
sub
pop
sbbl
push
and
pop
sub
mov
pop
int3
lods
das
test
add
outsl
push
add
hlt
adc
and
cltd
clc
fldl
jecxz
xchg
adc
lea
les
push
xor
shl
not
add
or
mov
push
sbb
mov
fldl
push
or
fsubl
mov
shrl
es
jg
in
adc
sbb
mov
in
test
out
fsubr
dec
or
jbe
mov
je
dec
into
imul
cwtl
or
xor
adc
insb
lock
push
mov
xchg
and
xchg
lahf
xchg
xchg
sbb
pop
adc
mov
cmp
and
lods
xor
sub
lret
and
sbb
pop
push
inc
xchg
mov
cld
test
cld
stos
or
xchg
add
adc
and
pop
ljmp
inc
mov
pop
mov
mov
test
sti
enter
xor
xchg
mov
pushf
and
cmp
mov
pop
scas
xchg
and
adc
jle
inc
enter
mov
jecxz
ret
cmp
fdivs
and
push
out
sub
mov
gs
in
sbb
mov
xor
sub
inc
hlt
and
nop
and
mov
aas
lahf
mov
xchg
add
jmp
adc
jo
in
jmp
sbb
sbb
aad
or
xor
rolb
mov
scas
stc
fimull
gs
nop
jo
lcall
leave
cmpsl
dec
push
mov
mov
add
cmp
sub
add
test
mov
dec
sub
jne
push
movsl
dec
inc
and
inc
outsb
iret
add
je
scas
add
mov
insb
imul
add
pop
push
and
push
adc
dec
test
dec
adc
arpl
add
or
inc
jg
movsl
mov
mov
jae
adc
subl
lods
add
mov
mov
dec
sub
iret
or
sbb
test
and
jle
sbb
add
add
daa
subb
fldl
jo
in
rorb
dec
test
jge
jl
xchg
xlat
pop
add
or
cs
add
push
inc
or
inc
or
add
add
test
lock
lds
les
jl
cmp
jae
das
nop
add
or
imull
shl
pop
cmp
add
jg
stos
pop
movsl
and
pusha
dec
sub
add
mov
jp
push
push
ret
jecxz
add
incl
inc
jmp
push
mov
cli
lret
pop
push
dec
fstps
sbbl
dec
sub
clc
popf
js
mov
add
call
insl
add
xchg
popl
mov
mov
mov
jge
je
loop
or
pop
jmp
push
or
xchg
pcmpgtb
into
js
imul
mov
push
or
fldcw
cli
or
jle
jecxz
shrb
fistps
mov
pop
mov
pop
mov
inc
popl
and
daa
jo
add
lret
jecxz
je
push
jb
or
push
addl
stos
jne
lret
lods
movsl
pop
fsubl
xchg
insb
lock
pcmpeqd
adc
fs
dec
decl
mov
stos
jae
mov
dec
ja
jmp
xor
jnp
dec
lock
aam
dec
enter
push
insb
call
imul
mov
lock
sub
push
xchg
add
ret
mov
adc
or
enter
or
or
push
test
mov
scas
cltd
out
das
cmp
jbe
shll
push
leave
push
add
push
xor
lret
add
xor
push
xorb
fldt
pusha
pop
insl
cmp
xchg
jo
push
lock
push
dec
mov
add
add
add
xchg
mov
pop
push
inc
pop
test
push
push
and
adc
rclb
push
add
mov
in
adc
stc
add
push
sbb
jne
test
lds
sub
mov
cmp
jbe
mov
cmp
push
inc
add
or
and
push
aaa
xor
shll
leave
inc
movsb
ja
inc
and
jbe
mov
and
pop
xchg
cli
mov
jns
in
push
push
lea
in
push
sub
andb
mov
pop
scas
and
dec
loop
sbbl
mov
imul
aad
out
add
push
add
or
sbbb
mov
sub
inc
testl
incl
xor
cli
aas
ja
push
aaa
pop
pop
shlb
add
je
mov
or
xchg
mov
adc
dec
insb
stos
je
push
xchg
movups
arpl
push
ffreep
shlb
cmp
jge
mov
jle
ljmp
push
lock
stc
add
jmp
rcll
sbb
lods
cmpsl
sub
or
test
cmp
sti
das
pop
push
fdivs
andl
out
aam
jo
dec
mov
pop
out
xchg
xor
and
ficoms
es
or
jb
dec
ficomps
fadds
or
adc
cmp
add
enter
inc
out
popa
jnp
jo
dec
mov
dec
leave
mov
in
test
or
adc
add
xor
pusha
mov
pop
xor
add
test
arpl
das
lods
outsb
loop
add
or
sbb
in
fisttps
sbb
lret
cmp
enter
adc
pop
into
jge
push
sysret
fdivrl
pop
ret
gs
imul
push
add
sbb
push
pop
inc
sbb
add
and
and
xlat
aam
and
andl
jbe
in
mov
push
pop
push
loope
jge
cmp
scas
cli
fisubrs
sub
or
mov
push
mov
xchg
hlt
push
push
aam
and
cmp
lods
add
inc
adc
shrl
dec
adc
out
mov
cld
mov
js
mov
add
inc
or
mov
xor
lods
fstl
adc
push
adc
adc
or
xchg
mov
loopne
add
lcall
inc
pop
pusha
pop
or
mov
clc
es
adc
pop
mov
push
fs
sbb
cld
pop
andl
mov
arpl
inc
dec
pusha
dec
adc
pushl
addr16
mov
stos
popf
or
mov
push
inc
sub
jo
jo
arpl
add
xchg
mov
sbbl
mov
pop
lds
in
add
jg
loopne
and
lret
dec
rcl
lahf
sbb
andb
xor
push
push
sbb
jae
add
lock
push
push
adc
sbb
lods
add
sub
push
push
hlt
add
or
push
or
adc
push
clc
sarl
jmp
and
ljmp
cld
lock
call
movsb
cld
sub
mov
mov
sbb
cwtl
loopne
and
sbb
testb
push
xor
inc
cmp
aaa
nop
rcl
ljmp
mov
aaa
mov
lea
cmp
nop
js
or
idivb
mov
and
subb
outsb
dec
mov
dec
ficoml
pusha
mov
sub
xchg
cs
xor
mov
insb
inc
je
mov
jp
inc
out
rcr
fiaddl
mov
jp
add
cltd
add
add
sub
jb
je
xor
xchg
inc
inc
sub
lods
out
inc
push
pop
push
insb
aaa
push
nop
sti
jl
test
push
cmp
jg
cmp
adc
pop
push
into
cmpsb
enter
ret
mov
pushf
addb
test
jge
mov
mov
jle
dec
add
jmp
add
rcll
rcll
dec
sbb
lret
popa
jbe
out
add
push
shll
add
add
xor
leave
sbb
mov
sahf
sub
xchg
cli
xchg
xchg
fisttps
pushf
or
xor
lret
lret
lret
xor
cmp
in
inc
call
pop
popf
jmp
movl
push
and
pop
or
movl
inc
shlb
adc
push
sub
sub
cmpsb
sub
mov
cmp
jno
sub
stos
or
adc
imul
push
lods
fmulp
and
xchg
push
mov
or
ljmp
adc
mov
cwtl
rclb
push
and
nop
sbb
jnp
icebp
pop
or
add
jbe
es
xor
mov
jb
sbb
lods
adc
cwtl
sub
jae
add
sbb
lods
stos
and
sbb
ss
movb
or
adc
test
lret
sub
rcll
sbb
shlb
inc
jge
inc
call
popaw
cmp
dec
imull
mov
push
ret
or
jl
add
cmp
cmp
push
inc
outsl
xor
cmp
pop
adc
cmp
or
mov
dec
dec
cmpsb
sahf
test
or
adc
jmp
xor
data16
push
popf
jne
pop
sub
sub
test
adc
jmp
and
pop
lea
sti
mov
mov
rep
bound
sub
or
sbb
cmp
jae
sub
and
mov
andl
pop
sbb
and
jne
out
movsb
mov
in
pushf
jae
push
push
test
cltd
imul
repz
ret
pop
push
loopne
adc
push
pop
push
or
mov
je
inc
sub
sbb
xchg
mov
adc
das
arpl
cmp
xor
xorb
cmp
inc
mov
xchg
testb
mov
xor
jbe
cmc
ret
in
mov
sbb
mov
and
or
cmp
xor
scas
sub
rolb
loope
andl
faddp
xchg
push
push
mov
mov
fs
add
mov
lret
and
add
dec
clc
imul
add
sub
enter
pop
pop
push
hlt
fiadds
andb
push
mov
or
mov
jmp
xlat
roll
ret
jl
inc
call
lock
shlb
cld
sub
xchg
fidivrl
xchg
or
xor
jmp
movsl
into
adc
xor
out
xchg
lods
inc
sbb
mov
mov
clc
pop
test
add
into
add
xchg
ror
lret
loop
mov
dec
cli
add
mov
push
push
push
cmp
call
xchg
dec
aad
push
push
aam
or
mov
add
addb
inc
rcr
fcmovnbe
add
orb
or
fcoms
dec
das
mov
and
data16
lods
jns
cmpsb
mov
adc
jno
incl
dec
xchg
mov
pop
sbb
rclb
dec
jne
add
push
xlat
mov
bound
inc
adc
arpl
and
sarb
add
enter
cmp
inc
pop
int
cltd
js
dec
push
sbb
rolb
sarb
dec
jne
adc
decb
lods
cmpsb
bound
push
test
push
movsb
loope
inc
sbb
or
int3
fs
push
ljmp
xor
and
je
lcall
pop
mull
loope
or
outsb
rorl
or
aam
cltd
out
mov
std
mov
stos
push
inc
adc
push
icebp
enter
jl
ret
sub
and
adc
adc
xlat
dec
fdivl
bound
jo
dec
mov
mov
inc
das
aad
mov
xor
lret
adc
shrb
pop
mov
jle
popa
add
dec
addr16
inc
sbb
clc
adc
ss
jo
xlat
add
jge
leave
adcb
sub
adc
sahf
mov
add
call
pop
pop
testb
je
push
stos
mov
add
test
sub
cmp
daa
jl
xor
push
insb
loope
mov
push
adc
shll
dec
fwait
push
or
cmp
adcl
adc
add
mov
inc
jecxz
sahf
pop
outsb
cmp
je
sbb
out
adc
push
clc
add
clc
jbe
inc
dec
out
loopne
jb
mov
jmp
cmp
adc
lret
dec
inc
shll
push
in
inc
ret
pop
sub
adcb
inc
rcrb
repz
mov
cli
mov
mov
lea
add
movsb
adc
fidivrl
and
shlb
inc
or
pop
insb
and
and
ja
lea
mov
xchg
xor
out
sub
test
sbb
inc
jp
loopne
xchg
rclb
xchg
shr
aad
in
jl
pop
test
mov
and
dec
pop
out
lea
xchg
gs
push
scas
adc
dec
or
std
add
enter
sbb
mov
xor
xor
cmp
pop
adcl
sub
xor
push
sbb
mov
pop
fisttpl
or
or
or
call
add
ja
pushf
xor
mov
cmp
mov
fistpl
stos
cli
sbb
enter
arpl
cld
push
out
rorl
jne
sub
mov
cltd
gs
jp
cmp
pop
jl
sbb
push
out
pop
mov
cmp
jb
pushl
mov
pop
add
jmp
sub
iret
xor
jae
adc
adc
push
jmp
lcall
jp
add
add
in
jb,pt
pop
xchg
sysexit
loop
test
push
mov
sbb
repnz
daa
bound
jns
xor
dec
insb
lods
add
adc
movsl
out
inc
and
lahf
pop
sbb
inc
or
subl
xchg
add
loopne
popf
ret
xor
addl
and
cmp
nop
aad
sbb
adc
mov
pop
cmp
jbe
push
dec
mov
pop
xorb
dec
mov
fsubrl
sub
pop
sub
pop
sbb
jo
and
add
sub
cmc
push
or
jbe
dec
push
inc
mov
imul
xchg
or
sub
aam
pop
adc
std
adc
and
or
addr16
scas
jno
or
enter
rcr
xchg
arpl
xchg
and
daa
xchg
xor
in
mov
arpl
arpl
inc
mov
push
dec
or
adc
addr16
and
mov
and
xchg
sbb
cmp
mov
outsb
xlat
and
add
lock
add
roll
in
pop
add
jne
das
mov
inc
add
or
mov
adc
xchg
lock
shll
cmp
or
xor
and
cwtl
add
pop
xorb
inc
add
xchg
push
adc
mov
xor
cmpsl
or
in
jmp
ss
cmp
test
adc
sub
sub
mov
mulb
add
jnp
add
lret
dec
inc
aas
cmp
sbb
insb
and
cmp
andb
inc
push
cmp
mov
and
inc
push
in
sub
and
sbb
xchg
jo
xchg
xchg
jb
or
jmp
push
xchg
add
pop
push
enter
or
xor
dec
sti
fsts
jne
cmp
arpl
sbb
pop
mov
mov
movsl
movsl
xchg
mov
dec
ret
movsb
je
out
mov
cmp
or
dec
dec
lret
out
pusha
push
in
add
les
dec
push
inc
sbb
xchg
adc
adc
sbb
outsb
jmp
lret
andb
add
or
adc
aam
or
jmp
push
lret
cmp
dec
inc
pop
push
or
sahf
pushl
fstpl
adc
lea
add
inc
or
adc
lock
icebp
loop
mov
pop
mov
pop
pop
pop
inc
mov
xchg
and
leave
and
push
or
sahf
adc
push
sub
pop
sbb
push
sbb
int3
xchg
jmp
orb
jecxz
add
in
adc
popa
sub
mov
in
adc
xchg
xor
les
sbb
and
cwtl
push
push
add
pushw
mov
fiaddl
js
ds
mov
mov
pop
aam
test
sbb
bswap
fsubrl
add
sub
add
lock
clc
and
aad
test
gs
pop
inc
jo
or
test
add
xor
jne
push
int
and
mov
je
pusha
add
sbb
scas
cmpsl
add
das
push
cmpl
shl
xor
in
mov
lcall
xor
psadbw
rclb
ret
cld
jmp
stc
jns
or
sbb
and
and
and
je
daa
and
lret
pop
loop
pusha
jg
mov
test
sbb
push
dec
jmp
icebp
je
xor
int
add
xchg
adc
dec
mov
cmp
loop
xchg
and
mull
in
xchg
cmc
sarl
mov
jg
or
adc
shrb
dec
fcoms
mov
jmp
or
inc
fs
cmp
inc
sbb
xchg
lods
dec
cmc
xchg
xchg
mov
lock
pop
or
sbb
pop
movsb
incl
lock
ljmp
das
das
std
dec
cmp
jg
insl
in
mov
insb
neg
mov
cmp
cli
nop
jle
loop
cltd
test
jae
clts
lock
rclb
dec
sub
push
mov
add
inc
xor
mov
ds
lods
addb
hlt
dec
roll
sbb
inc
cmp
popf
sub
adc
inc
xlat
or
mov
inc
gs
fdiv
add
mov
mov
subl
das
loope
clts
and
arpl
sub
orl
loope
push
das
or
clc
push
xchg
or
cmp
xchg
fsubrl
xor
mov
xchg
nop
outsl
insl
mov
push
adc
cmp
pop
xor
loop
inc
cltd
jge
and
inc
inc
jne
data16
push
jno
enter
push
xor
addr16
pop
sbb
and
lods
sbb
adc
xor
leave
orl
lods
arpl
outsl
clc
xor
fidivrs
push
leave
les
or
jmp
mov
mov
adc
pop
repz
xor
xor
lahf
and
adc
in
shll
and
push
jge
inc
sbbb
mov
add
or
push
lock
fsubr
sbb
int
shlb
adc
xor
mov
xor
cmp
inc
jl
cmp
jle
cmp
push
jp
xchg
add
jle
cmp
push
je
adcb
cmpsb
cmp
lods
cmp
jge
mov
pop
and
mov
jl
je,pn
cmp
je
adc
mov
cmp
push
clc
push
iret
and
or
cltd
or
add
pop
pop
clc
imulb
testl
test
add
mov
push
pop
push
dec
mov
inc
popa
push
rorl
roll
push
loopne
xorb
jl,pn
inc
adc
or
inc
or
in
add
popa
xchg
mov
and
fadds
push
cmp
fdivl
sbb
xchg
dec
mov
adc
pop
inc
mov
shrb
movups
mov
mov
inc
out
mov
rcrb
ljmp
rorb
jne
pop
push
xchg
inc
mov
jno
popa
sarb
inc
adcb
test
mov
in
or
adc
loopne
mov
adc
in
mov
jge
mov
pop
sub
or
cmp
push
pop
ret
inc
outsl
pop
nop
xchg
test
push
adc
and
les
add
pop
jo
loope
mov
pop
inc
xorl
or
push
mov
cmp
lcall
mov
cli
cmp
jle
js
adc
jno
jmp
sbb
pusha
jo
sbb
pop
sub
scas
or
or
pushf
mov
xchg
mov
and
cmp
inc
dec
inc
das
sbb
fisttpl
sti
enter
add
pop
adc
jns
or
push
pop
pop
iret
in
add
pusha
fs
or
cmovge
mov
push
popf
mov
ret
scas
or
pop
ja
xchg
jge
lret
xor
xor
cmp
xchg
inc
fsubrl
sub
mov
popl
ljmp
lods
push
mov
adc
icebp
push
and
jo
or
jmp
push
movl
mov
lahf
or
inc
push
mulb
cmpsl
lods
and
xor
inc
xchg
xchg
std
dec
cmpl
inc
shll
add
cmp
and
sub
cmp
sub
or
nop
and
scas
pop
rclb
ret
sbbb
inc
fnsave
ljmp
mov
clc
and
jno
inc
push
outsl
inc
adc
ret
sub
mov
mov
push
iret
cmp
mov
orb
jg
cmp
jle
nop
push
pmulhuw
jmp
inc
and
xchg
or
and
or
movb
and
gs
jl
ret
mov
jmp
inc
jl
mov
jmp
gs
bound
lea
cmp
adcl
iret
shll
dec
inc
adc
or
or
jo
daa
adc
jecxz
xor
das
sti
or
roll
sub
ss
sbb
dec
dec
mov
sub
dec
iret
insl
mov
mov
rorb
xor
adc
adcl
adc
lahf
mov
pop
fsubrl
mov
js
mov
leave
or
insb
outsb
pop
loopne
dec
in
and
daa
je
cmp
inc
adc
and
dec
push
sub
pop
add
jne
mov
nop
lock
inc
adc
cmpsl
daa
je
lods
adc
xor
jle
sub
data16
push
jle
pop
pop
clc
mov
and
inc
xchg
mov
jl
xchg
mov
shll
jne
push
repnz
test
lret
mov
add
cmp
cmp
push
fildl
icebp
rol
and
push
insl
and
push
insb
add
fsts
mov
jnp
add
lcall
push
fwait
xor
jae
and
adc
or
mov
and
mov
pop
and
push
push
jnp
fcompl
sbbb
add
and
mov
ret
mov
test
add
rcl
lock
pop
fdivrs
pop
into
add
and
adc
pop
xchg
push
inc
mov
mov
sub
jle
into
push
mov
pop
pop
ja
fsubrl
repz
jae
jo
pop
js
rcl
sbb
leave
mov
sub
push
mov
add
dec
sbb
aam
sub
or
inc
push
fisttpll
mov
push
cmpsb
sarb
fs
push
hlt
jg
mov
sub
stos
or
pushf
and
pusha
pop
sub
sbb
clc
mov
sub
push
dec
add
loope
xor
mov
lret
sub
xor
aas
stc
sub
lea
mov
pop
pop
ret
mov
cwtl
les
or
jne
push
push
mov
or
sub
dec
lea
adc
adc
shrl
or
add
adc
jg
adc
repnz
mov
pop
adc
or
adc
dec
jae
cmp
inc
loop
mov
inc
push
add
or
add
cmp
inc
push
or
dec
inc
shrl
dec
sahf
push
mov
adc
mov
ja
mov
adc
adc
jb
test
push
js
int3
cmp
mov
cwtl
push
in
xchg
jmp
loope
pushf
pop
cmp
push
call
testl
add
push
orb
shrb
outsb
lret
lock
jmp
mov
push
lea
mov
xchg
pop
movsb
les
and
shll
mov
push
push
adc
movsb
rcrl
pushf
ljmp
fdivrl
dec
add
sbb
jae
push
add
mov
push
and
sbb
push
inc
fnsave
add
arpl
jmp
mov
jo
mov
incl
leave
adc
dec
imul
loopne
push
fisubs
or
push
nop
pop
mull
test
subb
adc
out
cmc
mov
mov
loopne
push
fdivrs
leave
push
pop
je
rcr
sbb
fldl
fistl
sbb
dec
in
rcll
cmp
aaa
adc
adc
jne
push
divb
cmp
iret
iret
or
jne
or
jne
or
add
cld
jnp
js
out
fldz
lret
or
add
inc
or
cmp
inc
arpl
dec
jl
mov
orb
jnp
adc
cmpl
push
sub
push
pusha
fisttpl
mov
lret
mov
jnp
fstl
jecxz
fmuls
sub
cwtl
mov
and
decl
push
or
xchg
xor
fisttps
pop
xor
lea
in
cmpsl
mov
sbb
jg
sbb
and
cli
dec
push
xchg
add
sbb
cmc
cmp
jo
fsubl
inc
add
aam
mov
sbb
pop
add
shl
mov
mov
fisubs
imul
xor
aaa
inc
cmovae
sub
roll
out
popa
lea
pop
dec
or
fmull
or
sbb
gs
mov
mov
or
push
jbe
pop
sub
ficoms
adc
add
and
movb
nop
dec
or
movsb
or
or
mov
int3
pop
cli
inc
in
mov
js
push
add
cmp
in
adc
mov
imul
push
popa
sbb
repz
xor
add
lods
cmc
xor
in
lret
sub
adc
jl
mov
xor
adc
lahf
inc
adc
mov
mov
push
or
push
sbb
inc
popa
stos
mov
cmpsb
or
fs
loopne
inc
push
push
xor
or
xchg
or
cs
int3
test
ss
js
adc
inc
and
sbb
cmpxchg
jns
nop
loope
push
sbb
jno
add
loop
xor
fldl
adc
mov
jns
iret
inc
xor
add
inc
enter
sarb
inc
jo
xchg
or
in
or
rclb
inc
xchg
or
dec
enter
imul
push
lret
or
fs
fmulp
or
mov
fs
ret
sbb
in
call
xor
out
in
inc
pop
test
je
shlb
cmpsb
pop
rclb
fs
xchg
movsb
pop
rorb
xorb
sarl
inc
out
dec
xor
push
xor
jl
addb
scas
cs
push
inc
lods
mov
pop
jo
not
addl
outsl
arpl
push
and
ret
loop
arpl
or
mov
push
int
push
and
sub
mov
fwait
adc
adc
add
shrb
add
push
cmpsb
jmp
jns
add
add
in
sarb
sbb
add
add
sub
push
repz
je
and
sbbl
out
scas
icebp
outsb
adc
cmp
jl
ret
or
cmpsl
pop
cmp
adc
inc
ret
add
out
jmp
add
test
mov
jg
sidtl
add
or
stos
jo
stos
test
ret
sub
movsl
cli
sub
push
mov
adc
xchg
or
lret
push
mov
mov
adc
adcl
cmp
push
jp
in
push
push
jmp
mov
or
dec
pop
call
pop
fsub
es
ret
cmp
sbbl
pop
fsubl
add
mov
fsubs
insb
dec
mov
sub
lret
test
add
add
add
mov
push
mov
add
sub
in
mov
pop
clc
insl
sub
shrl
rcrb
inc
add
in
jne
xor
sub
push
and
xchg
arpl
inc
out
call
jb
jne
shr
xor
seta
or
inc
add
pop
iret
push
lods
sahf
xchg
out
add
mov
in
mov
fcmovbe
xor
ret
sahf
lret
cwtl
stos
fs
push
adc
pop
jle
adc
aam
inc
scas
cmpsl
dec
bound
movsb
clc
add
dec
mov
cmp
xor
sti
jg
in
shrb
push
push
shr
popf
pop
out
jge
dec
pusha
push
sarb
in
add
scas
clc
inc
movsl
mov
add
dec
adc
mov
imul
cli
push
sbb
lea
push
fisubl
iret
fildl
sub
nopl
cltd
mov
xor
dec
mov
fildl
shrb
push
rolb
dec
sub
sti
int3
sbb
pop
mov
or
inc
sub
and
adc
xor
aad
push
pop
jle
outsb
or
sar
les
lea
cmc
rorb
sbb
adc
icebp
jnp
loope
pusha
cmpsb
aad
push
dec
clc
pop
inc
dec
mov
mov
mov
sbb
push
mov
test
enter
popa
imul
jbe
push
shll
lds
jle
inc
rcrl
or
andb
mov
bound
jle
push
xchg
pop
jl
call
sub
mov
xlat
movsl
jmp
adc
mov
mov
push
shld
push
out
fsubl
nop
mov
adc
or
mov
adc
sub
movsl
pop
and
mov
lods
movsl
inc
push
push
xchg
popf
push
add
xchg
addb
mov
or
jnp
xchg
dec
test
adc
add
and
lahf
in
insl
push
sub
pop
icebp
sahf
mov
mov
and
push
mov
dec
adc
dec
movsb
icebp
out
bound
mov
stc
jno
or
lods
fmuls
frstor
xor
repnz
jo
xchg
mov
or
insl
push
popf
cmp
int3
jnp
pop
push
jnp
adc
xchg
rcll
shrl
fisttpl
mov
push
xor
push
mov
lock
xor
xor
dec
mov
gs
repz
xor
scas
call
adc
add
idivb
sub
jnp
add
dec
ret
dec
ret
scas
mov
add
lcall
push
iret
push
add
gs
xchg
js
addr16
lods
mov
pop
imul
test
jno
mov
add
adcl
pop
movsb
add
or
sbbl
aas
movsl
xchg
xchg
adc
sub
mov
lcall
push
add
add
daa
rolb
repz
xchg
sub
das
jno
pusha
out
clc
test
sti
pushl
addr16
jne
out
sub
nop
xchg
adc
sbb
or
mov
je
stos
add
mov
or
call
add
add
clc
ret
adc
jge
imulb
dec
rorb
sub
add
or
sbb
rcl
lahf
mov
and
ret
dec
dec
shrb
push
adc
pop
adc
outsb
adc
fmuls
add
push
fldl
fbstp
or
jo
inc
adc
fcomps
jmp
or
imul
lods
xor
push
mov
lea
aam
push
movsl
scas
dec
push
and
dec
addr16
adc
or
mov
fs
adcb
adc
push
jmp
and
adc
addr16
mov
dec
stos
lea
mov
es
add
roll
mov
fidivl
mov
inc
ljmp
scas
popa
cmpsb
jne
inc
push
mov
add
inc
push
jp
sub
rolb
fcoml
sbb
xchg
xor
hlt
cmp
add
in
push
in
and
movsb
cmp
xlat
adc
popa
xchg
add
inc
ret
xor
popa
stos
pop
sbb
and
loop
pop
scas
pop
mov
add
and
adc
out
lods
cmp
sahf
sbb
xor
sub
je
pop
aas
pusha
and
add
les
inc
push
jns
mov
and
daa
push
test
test
jmp
push
xchg
pop
xchg
aas
jno
test
cmpsl
or
mov
out
jg
cmpsb
clc
or
pushl
sbbl
aaa
mov
fisttpll
inc
pop
sbb
in
add
pop
add
dec
movb
jne
dec
add
shlb
hlt
lret
insl
pop
test
add
sub
sahf
mov
imul
test
pusha
inc
push
or
adc
int3
jecxz
es
pop
xchg
jecxz
les
fildll
repnz
mov
dec
nop
push
sahf
xorl
xchg
out
xchg
inc
pop
xor
pusha
or
outsl
lret
es
or
push
sub
enter
nop
cmp
jae
or
xchg
dec
mov
mov
add
xchg
mov
push
or
add
and
test
mov
xor
push
shll
cwtl
pop
sbb
sub
lcall
inc
and
ret
dec
add
and
in
adc
inc
sbb
and
test
pop
cmc
sbb
bound
pop
or
push
push
es
rcll
mov
stc
push
or
jbe
pop
gs
push
pop
test
add
test
pusha
pop
xor
test
and
and
xor
push
push
je
or
je
adc
insl
and
xchg
xchg
out
and
sub
mov
lcall
adc
inc
push
jo
cmpl
imul
test
and
sbb
insb
test
and
shlb
and
add
xchg
imul
adc
scas
sahf
pop
cli
jb
xchg
rolb
push
ja
aaa
cltd
fsub
pop
xor
adc
mov
insb
imul
sbb
lea
es
mov
cmp
out
or
sbb
les
add
adc
dec
sbb
mov
test
cmp
insb
push
pop
push
fwait
xor
push
popa
or
dec
mov
mov
scas
jge
sub
in
mulb
cltd
and
inc
cmp
xchg
pop
push
mov
or
jl
pop
mov
dec
jp
ljmp
outsl
ffreep
sub
mov
and
push
jp
jns
adc
push
rclb
jecxz
movsb
icebp
sub
inc
jge
in
add
sbb
dec
sub
xor
mov
push
pop
and
inc
stc
lea
fsubl
andl
adcb
and
add
aam
sub
int3
and
ret
sbb
push
fstps
movsb
fldenv
arpl
enter
jne
mov
xor
add
test
add
adc
loop,pn
je,pn
inc
arpl
and
dec
add
dec
add
inc
lock
inc
mov
loop
incb
adc
add
adc
je
add
adc
incl
mov
ret
ja
add
pop
dec
roll
hlt
ss
pop
sub
outsb
fisttpl
test
mov
mov
mov
mov
js
jmp
adc
cmp
sbb
ja
push
and
std
push
push
lods
shrl
pop
xor
dec
lcall
les
rorb
rclb
adc
xchg
or
ret
jnp
ret
mov
or
push
xor
cli
add
dec
adc
jne
js
std
daa
and
xchg
repz
cmp
jae
mov
es
loop
adc
pop
jp
add
xchg
cmp
adc
push
fld
sbb
push
jbe
cmc
inc
mov
cmp
cmp
orl
or
xchg
mov
mov
loop
inc
stos
sub
mov
ljmp
and
jb
jne
inc
mov
cmp
je
fwait
mov
lcall
inc
xchg
mov
push
fsubs
or
sub
mov
daa
popl
in
stc
std
bt
or
or
mov
push
loop
jmp
imul
fisttps
add
add
inc
mov
xchg
push
pop
add
and
das
aam
or
push
cmp
je
cmp
outsl
adc
or
add
mov
andb
add
loop
cmc
fcomi
loopne
mov
neg
inc
sub
and
jne
push
arpl
cwtl
icebp
call
das
xchg
pop
sub
cmp
jb
ret
jb
std
dec
cmp
adcb
fidivrl
mov
pop
mov
dec
mov
xor
add
sbb
xchg
mov
adc
jbe
add
dec
mov
xchg
icebp
pop
push
mov
push
sub
jle
fwait
rol
push
call
jbe
inc
dec
sbb
add
add
flds
fsubr
cmp
adc
mov
adc
mov
push
shlb
ret
mov
dec
push
frstor
test
inc
jl
sbb
add
loopne
les
adc
movsl
das
imul
bound
call
dec
or
mov
sub
fldl
iret
dec
jo
push
and
mov
or
filds
clc
and
insl
clc
push
cltd
rolb
scas
mov
sbb
out
out
cmp
hlt
mov
in
and
pop
fsub
pop
fsubrp
cmp
test
pop
dec
andb
mov
out
push
or
popl
or
gs
and
add
push
rorb
push
mov
cmpsb
add
mov
jge
int3
xor
je
add
shlb
addb
loop,pn
mov
mov
mov
pop
ds
jg
incl
jmp
push
pop
jmp
push
cmp
adc
add
add
or
or
pop
xor
push
jmp
push
or
iret
ds
push
lods
sbb
xor
xor
sbb
push
fscale
in
jle
push
enter
pushf
push
pop
add
lahf
mov
sbb
xchg
cmp
sbb
inc
xor
shl
cld
push
gs
mov
jg
clc
lea
ja
mov
dec
or
or
xor
push
push
fstps
nop
mov
pop
stc
add
mov
cmp
aam
xor
adc
and
jns
inc
sahf
sbb
cld
arpl
adc
ret
repz
sub
mov
sub
lahf
push
push
inc
fmulp
and
jl
and
in
and
or
movsl
loopne
cmp
pop
push
lods
add
jbe
in
sub
push
aaa
enter
in
mov
repnz
dec
repnz
xor
sub
fdivrs
push
into
push
fs
sbb
xor
mov
push
mov
jne
xor
addr16
xchg
push
mov
movsb
jle
xchg
sub
mov
enter
clc
stos
minps
sbb
icebp
js
push
push
jb
stos
mov
inc
or
or
jns
inc
and
xor
mov
mov
or
jbe
iret
lret
outsb
and
insb
aas
inc
sub
and
pop
nop
mov
pop
push
movsb
sbb
mov
mov
mov
add
or
ja
stos
sbb
iret
repz
testl
xor
iret
repz
gs
mov
cmp
repz
lods
loop
add
jns
cmpsl
nopl
jns
pop
push
jns
out
scas
mov
cmp
out
or
pop
repnz
dec
pop
imul
stos
cmc
xor
daa
inc
push
bound
mov
out
ret
adc
incb
mov
outsb
roll
xor
mov
imul
mov
cmpsl
jno
xlat
rcrb
mov
mov
loop
inc
stos
inc
sub
adc
add
add
int3
xor
xor
add
xchg
lods
cmp
fldenv
inc
imul
cmp
xchg
cmpsb
bound
xor
stos
push
cmp
insb
xchg
lret
sub
sbb
xor
push
gs
and
ret
sub
pop
xor
int
iret
lret
pop
sub
push
xor
stc
mov
mov
push
or
das
sbb
xlat
adc
add
dec
and
adc
roll
and
jl
and
jg
sbb
xor
add
sub
dec
lea
mov
cmpsb
adc
aad
nop
and
cmp
xor
aaa
in
push
mov
filds
loope
in
or
cmp
out
add
cli
push
pusha
out
sub
popf
sbb
or
cmpb
inc
test
je
mov
pop
add
pushf
push
neg
daa
ljmp
daa
jnp
jp
cltd
add
aaa
sbb
or
cmp
lock
loopne
pop
orb
loopne
call
call
mov
sub
lock
addl
push
mov
push
cmp
les
loope
call
aaa
movsb
add
fld
mov
das
dec
add
mov
pop
inc
out
lock
adc
rcll
sbb
aad
ja
push
pop
xlat
push
and
sbb
pop
enter
add
test
push
aam
pop
or
or
and
mov
and
jl
and
and
les
std
sub
dec
scas
in
or
pop
add
jne
add
loopne
lock
push
sarb
shlb
push
stos
das
pop
dec
mov
xchg
or
cs
add
jno
mov
pop
sub
jge
xor
xor
sub
leave
mov
insb
rcrl
mov
add
scas
xchg
push
mov
add
movsb
dec
inc
or
mov
cmp
sbb
les
adc
push
loope
lds
test
mov
ret
ret
loopne,pt
sti
movl
xor
mov
add
ret
sub
pop
aam
mov
nop
in
add
xchg
mov
fidivl
xchg
cmp
test
ret
and
sub
cmpsl
jo
ret
leave
icebp
bound
test
sbb
sbb
adc
cmpsb
movsb
fnstcw
aaa
dec
xor
adc
add
or
ret
mov
push
adc
mov
je
cltd
mov
xlat
stc
sbb
add
fidivl
movsb
fimull
insb
addb
std
or
test
jb
mov
xor
inc
adc
aam
mov
ret
pusha
sbb
ret
fsts
cmpsl
add
inc
sbb
or
mov
out
add
pop
pop
add
mov
sbb
lcall
ret
adc
nop
pop
int
loope
sbb
cmpb
add
iret
add
sbb
cmpsb
ds
mov
das
movsl
pop
pop
andb
std
imul
inc
mov
mov
movsl
scas
mov
scas
inc
xlat
daa
addr16
leave
fimull
or
add
stos
and
jle
ret
add
or
jmp
push
add
cmp
inc
nop
mov
sbbb
lret
pop
prefetcht1
pop
sbbb
and
mov
nop
cmp
inc
lea
mov
push
pop
add
or
aaa
adc
xchg
mov
push
xor
push
ret
movsb
sub
add
cltd
in
add
test
in
mov
adc
sub
adc
push
mov
scas
inc
jno
lods
icebp
adc
nop
mov
mov
outsl
inc
add
or
push
dec
mov
jno
cmovp
xchg
or
push
and
lods
inc
cmpl
mov
fldenv
in
push
xor
add
in
cmp
add
shlb
add
mov
ljmp
or
shlb
aaa
int3
mov
arpl
xchg
shrb
mov
movsl
fs
push
sub
sarb
scas
cmp
inc
jg
pop
or
xor
sbb
cmp
test
cld
rorl
push
dec
mov
inc
add
mov
nop
out
les
sbb
adc
imul
mov
popa
add
clc
adcb
cmp
sub
out
or
nop
jecxz
cmpsb
dec
fwait
dec
push
adc
shlb
roll
mov
movsl
sbb
push
pop
adc
mov
inc
aaa
mov
sbb
and
adc
frstor
aaa
mov
adc
dec
test
fs
pushf
lock
js
movsb
adc
mov
sbb
mov
add
imul
mov
shrl
dec
arpl
jl
cmp
std
or
popf
sub
xor
or
fstpt
push
push
xor
push
mov
repz
nop
jp
push
sbb
inc
rcrb
mov
mov
shlb
jp
add
or
pop
scas
inc
pusha
cmp
push
push
psubsw
js
lret
push
lcall
cmp
push
test
lret
inc
lea
insl
dec
int3
std
scas
adc
mov
push
and
push
push
and
pop
sbb
sbb
jle
xor
test
popa
gs
call
or
into
add
and
xor
sbb
push
adc
push
pop
movsb
insl
nop
add
push
mov
test
loopne
xor
lea
xor
xchg
sar
pop
add
sbb
mov
movsl
cwtl
cltd
loopne
inc
shlb
js
mov
pop
imul
or
fldl
lds
and
inc
iret
xchg
dec
jmp
and
pop
lock
ret
adc
shrl
push
cltd
je
sbbb
pop
dec
jecxz
xor
test
add
ljmp
adc
ss
xorl
add
mov
leave
mov
push
push
fadds
mov
ss
or
jle
in
mov
mov
cmp
mov
jl
xor
jmp
sbbb
jl
or
sbb
popa
jp
adc
cld
jg
push
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
hlt
mov
pop
cltd
idiv
adc
sbb
or
mov
jno
cld
aas
xor
imul
mov
test
inc
das
into
xchg
loopne
add
icebp
mov
xor
test
cld
or
mov
add
adc
dec
call
push
add
sub
and
in
hlt
incb
or
or
add
mov
pop
sahf
lret
dec
fsubl
daa
cmp
sub
nop
lock
ret
aad
add
push
push
inc
enter
inc
cmp
dec
test
data16
mov
cmpsl
xchg
cmpsb
aas
loope
jl
jns
repz
pop
push
les
sbb
push
cmpsb
xchg
test
inc
repnz
jmp
adc
dec
jmp
aad
bnd
push
mov
shlb
imul
sub
imul
orl
subl
adc
jb
call
mov
aam
ud1
imul
adc
cmp
lock
pushf
adc
or
jmp
lock
sahf
lods
adc
sub
cmp
out
push
adc
push
pop
lea
mov
iret
lret
adc
adc
cmp
test
xor
xchg
out
dec
insb
pop
sbb
pop
mov
lret
jge
js
push
add
pop
jns
test
pop
push
jle
in
imul
jb
sbb
sbb
mov
sbb
fchs
fdivrs
push
out
or
adc
fsubr
nop
inc
push
sbb
fsubrs
mov
pop
xor
mov
ja
dec
aam
sbb
lahf
mov
aam
inc
mov
sahf
push
xchg
dec
inc
lcall
in
in
xchg
and
push
rolb
add
and
mov
or
out
repz
aad
dec
in
mov
pop
add
mov
hlt
add
dec
jmp
push
inc
es
shrl
sub
jge
xchg
cmp
repz
inc
cmp
add
nop
dec
push
nop
pop
mov
sbbb
cmpsb
sbb
sbb
dec
add
xorl
lods
adc
es
xchg
mov
jl
enter
push
fucomp
mov
cmp
imul
xor
xor
in
sub
in
imul
orb
mov
fsubrs
jo
mov
adc
jnp
mov
fldt
nop
jo
xor
adc
jmp
add
pop
push
jae
rorl
rcll
mov
cmp
fldz
fcompl
cmpsb
movsb
fcompl
aam
add
inc
movsb
fmull
lods
and
adc
pop
hlt
in
test
mov
sbbl
push
adcl
inc
cmp
pop
cmc
push
mov
pusha
add
ds
ret
js
mov
dec
sarl
add
or
out
dec
enter
pop
pop
push
shl
inc
int3
fstpl
imul
and
mov
push
xchg
bound
push
dec
js
in
push
xchg
push
mov
nop
dec
and
add
sbb
cmp
loopne
or
xchg
out
adc
or
mov
push
push
mov
pop
enter
mov
mov
xor
sbb
psrlw
inc
movsb
mov
es
push
aad
mov
adc
pop
sar
jmp
push
shr
sbb
dec
inc
push
add
push
and
cmp
sub
or
add
mov
adc
rclb
insl
repnz
push
xorb
sbbl
add
add
fdivrl
adc
fsts
push
fstl
fwait
dec
out
and
fsubrs
sub
cmpsb
sahf
nop
and
sub
dec
imul
es
pop
push
cwtl
repnz
sbb
or
insl
sbb
enter
pop
in
sbb
sbb
add
inc
loopne
jnp
enter
repz
push
sbb
mov
and
inc
in
push
push
inc
or
fwait
mov
jmp
push
sub
gs
imul
bound
es
test
loope
xchg
sub
movsl
mov
mov
add
pop
pop
pop
jmp
lret
sub
add
stos
mov
push
mov
fldenv
scas
or
or
push
in
add
or
push
pcmpeqb
or
imul
out
sub
loopne
sub
pop
adc
xor
movsb
pop
sub
cmp
jp
jbe
adc
xchg
push
mov
mov
jge
fisubrl
mov
fsubrs
cmp
ja
add
bound
mov
sbb
add
add
cmp
std
in
movsbl
insb
or
and
cs
pop
rcrb
mov
push
popa
cld
mov
hlt
lods
push
adc
push
dec
pop
aam
add
leave
bound
scas
jns
dec
es
imulb
jo
jbe
fisttpll
or
stc
movsl
add
or
ficomps
adc
push
pusha
lcall
cmpsb
and
or
push
sbb
or
or
cmp
add
ret
mov
and
lds
orb
bound
fidivl
xlat
rolb
jne
cmp
jle
sub
loopne
push
sbb
sub
cmpsl
int3
jl
cli
or
adc
es
add
sub
xor
sub
cmp
sub
jne
mov
mov
jne
std
xchg
orb
push
and
scas
rcll
int3
jae
js
sbb
sub
mov
xor
rorl
pop
add
lods
mov
xchg
fs
push
shlb
fsubs
stc
mov
lcall
or
fdivs
jb
sbb
or
cli
push
xchg
addb
add
je
jg
enter
cmp
into
aaa
xor
rcrb
lods
cmp
add
or
mov
inc
add
addb
adcb
or
gs
dec
imul
push
mov
mov
in
ja
dec
or
movsb
xchg
cmp
mov
add
inc
lock
insl
mov
cwtl
xor
inc
pop
pop
ss
mov
out
push
out
loopne
push
sbb
movsb
in
insb
bound
push
dec
add
and
rorb
lahf
add
inc
cmp
roll
push
dec
in
add
in
adc
mov
stos
adc
mov
loope
dec
cmp
xchg
push
mov
dec
cvtps2pd
and
pushl
sub
mov
mov
jb
push
mov
pop
push
jne
ja
fimull
adc
pop
daa
ds
mov
pop
test
push
stc
adc
lods
scas
pop
mov
or
cmp
lret
push
pop
cmp
push
cmp
in
cmp
cmp
xchg
sub
sub
cmc
pop
cmp
repz
adc
pop
adc
addb
cmp
pop
add
das
add
orl
addb
jne
loopne
rolb
add
andl
jb
nop
xchg
jo
adc
or
push
or
mov
cs
sahf
cmp
sub
cmpsb
enter
cmp
mov
push
inc
lcall
dec
adc
mov
fs
in
add
es
les
mov
dec
cmp
pop
xor
and
cmpb
and
mov
or
inc
mov
scas
push
add
or
add
xchg
int3
adcl
mov
dec
pop
and
inc
or
in
sbb
pusha
inc
add
jo
es
mov
rorb
sub
in
sahf
add
es
xchg
sbb
xchg
or
pop
ret
xorl
or
ss
pop
xchg
and
adc
aad
fcomp
push
inc
movsb
push
dec
or
call
add
in
add
comiss
xchg
jg
and
adc
xor
sub
pop
dec
out
cs
pop
jnp
and
lret
rorb
or
aam
mov
pusha
js
sbbl
sub
or
dec
or
push
push
je
mov
lea
xchg
pandn
inc
dec
jnp
xor
and
xor
mov
jo
cmp
push
cmp
mov
orl
push
fwait
adc
or
popf
and
lea
nop
mov
dec
loopne
or
lds
push
cmpsl
cltd
and
repnz
xchg
add
and
add
mov
and
sub
add
jmp
or
mov
push
loope
and
pop
or
add
jmp
pop
fs
push
sub
lea
and
adc
sub
dec
int3
es
cmp
lret
pop
fs
sahf
jmp
test
lods
loop
add
imul
jne
or
cmpsl
add
add
xor
push
mov
mov
int
fs
shr
mov
or
pop
jo
push
add
jmp
jp
lcall
imul
mov
sub
xor
jns
or
push
push
and
daa
push
stos
inc
cmp
rclb
shlb
imul
lock
jne
dec
mov
insb
mov
xor
arpl
daa
mov
andb
in
sbb
inc
adc
and
pop
mov
jne
mov
push
add
adcb
or
lods
mov
movl
mov
out
scas
or
fistpll
add
pcmpgtd
rorb
call
cmpl
jne
xchg
dec
pop
push
inc
add
in
dec
test
or
cmpsl
add
jb
and
xor
mov
jae
mov
push
call
mov
rclb
mov
jmp
inc
hlt
stos
std
dec
add
mov
icebp
out
insl
ret
jne
imul
push
fdivl
cwtl
loope
in
sahf
push
fs
adc
pop
hlt
out
and
or
mov
push
cmc
imul
test
mov
pop
xor
push
pushf
inc
push
adc
movsl
dec
dec
mov
arpl
sbb
pop
push
pop
iret
aad
sbb
mov
mov
bound
mov
xchg
outsl
push
inc
adc
enter
pusha
pop
sub
xchg
scas
sbb
cmp
lods
imul
sub
or
cmp
sub
popf
add
or
pop
push
and
dec
sub
or
add
addl
test
loope
sub
push
outsl
dec
sub
out
cmp
sub
or
jb
adc
dec
inc
add
inc
and
inc
dec
xlat
cmp
insl
pusha
jmp
or
jecxz
push
xor
xchg
push
dec
call
add
adc
xor
out
mov
jo
or
xchg
mov
xchg
add
loope
or
sub
jb
and
nop
mov
shll
push
xor
inc
pop
test
inc
andb
movsb
pushf
or
sub
pusha
xor
mov
call
sub
out
xchg
sub
or
adcb
test
lods
in
mov
inc
ret
inc
dec
add
pop
pusha
xor
movsb
orl
pop
or
push
fs
rolb
lods
adc
push
addb
fdivs
and
pop
or
push
cmp
nop
push
sub
movsl
pop
imul
jl
js
sub
rolb
sbb
mov
mov
xor
lock
pop
add
ret
dec
orl
lods
jnp
ss
loope
mov
add
xchg
push
push
fbstp
sbb
test
movsb
or
sub
push
or
bswap
enter
es
sbb
movsb
pop
outsb
in
out
pop
pop
cmp
aaa
mov
sbb
push
pop
insl
loope
jae
movsbl
orb
clc
cmp
inc
push
adc
or
jns
insb
jmp
popa
sbb
repnz
mov
iret
jb
stos
shr
and
into
or
add
push
push
rorb
pop
orl
adcb
inc
cmp
add
subb
adc
mov
lods
cmpsl
addb
arpl
and
or
xor
dec
jno
push
jp
or
pushf
pop
cmp
push
pop
pop
pop
cmc
pop
pop
xlat
sahf
popa
xchg
and
inc
sub
paddb
and
icebp
cmp
jne
inc
int
adc
xchg
in
inc
push
pop
pop
outsl
loop
mov
sbb
out
rcl
or
movsl
cmp
mov
shll
and
mov
inc
or
cmp
or
ret
adc
ret
in
stos
and
test
adc
ret
push
pop
loop
inc
sbb
int
pop
sbb
sbb
or
xchg
pop
ja
mov
lret
push
lods
add
addb
les
fcomi
lret
cmp
pop
and
push
stc
ja
xor
add
or
std
dec
sbb
cmp
or
add
sub
mov
sbb
add
push
mov
pop
cmp
xor
rclb
add
dec
in
cmp
dec
js
aam
pop
lods
inc
push
and
jbe
xchg
in
lahf
adc
dec
rclb
xor
sbb
cwtl
daa
mov
cmp
and
rorl
pop
lret
je
push
imul
add
sbb
arpl
fsts
mov
cmp
bound
pop
push
aam
dec
mov
xchg
adc
loope
ficomps
jmp
sub
push
jmp
and
xor
data16
xor
mov
and
pop
sub
dec
and
arpl
cli
pop
sbb
or
lret
push
add
ljmp
stos
push
push
push
pop
pop
or
and
and
adc
cmpsl
insb
and
lds
add
mov
and
movsb
xchg
adc
xlat
and
and
jno
push
aaa
data16
cwtl
add
mov
and
add
stos
xor
push
xlat
es
and
mov
add
lds
stos
sub
jbe
in
aad
sub
xor
dec
sahf
pop
fsubs
push
push
sub
int
ja
addb
jne
push
xchg
les
sbb
xchg
sub
dec
je
push
arpl
inc
and
loope
and
aam
je
aad
push
rorb
xchg
scas
jnp
inc
jmp
out
ja
jo
xchg
pop
popf
sub
pop
jle
push
adc
testb
push
pop
push
or
pop
fs
leave
les
sarb
dec
outsb
add
push
cmp
adc
sbb
imul
adc
es
and
sub
add
lea
jmp
push
sub
sub
push
jge
or
adc
sub
sti
jb
add
cmp
adcl
stos
inc
stos
add
push
add
or
sbb
int3
mov
or
and
inc
and
add
or
push
jbe
pop
mov
add
add
add
dec
stc
imul
push
popa
bound
mov
push
push
mov
mov
push
dec
sub
dec
sbb
xchg
sbb
inc
or
or
add
xor
add
sahf
clc
sti
addr16
or
add
jmp
ds
cmc
mov
dec
mov
and
fisttps
enter
jle
and
loopne
add
mov
add
shrl
sahf
mov
add
add
je
out
mov
inc
aaa
incl
flds
xor
insb
cld
jbe
push
mov
clc
push
mov
test
inc
cmp
inc
jb
pop
pop
push
sbb
nopl
mov
fstp
ret
push
sub
decl
xchg
mov
mov
lret
scas
hlt
shlb
and
fcmovbe
test
cmpsb
mov
nop
mov
inc
pop
adc
push
inc
xor
mov
jp
xorl
mov
jg
sbb
cmp
ja
out
cmpsb
in
mov
add
push
sub
popa
lea
adc
dec
inc
into
jge
mov
fdivrl
push
gs
add
pop
psubw
pop
aam
cmp
loopne
movsb
xor
pop
ds
sar
jmp
jae
mov
add
movsl
add
int3
sbb
sti
stos
inc
cltd
js
sbb
pop
push
push
pop
cmpl
xor
gs
push
xchg
loop
adc
push
stos
inc
cmp
aaa
jl
icebp
jb
jmp
adcl
sub
xor
push
and
dec
mov
inc
nop
ret
push
ljmp
shll
aas
inc
scas
imul
push
jns
jo
xor
pop
adc
dec
mov
push
std
xlat
mov
or
add
pop
add
sbb
movsl
mov
adc
jl
or
pop
rclb
pusha
lock
push
das
dec
test
and
in
dec
mov
pop
xchg
rorl
add
xchg
dec
add
and
sub
lahf
mov
add
add
push
fmull
or
mov
xchg
xor
addr16
adc
push
jecxz
aas
outsb
cmp
lea
cs
aam
test
or
add
push
mov
frstor
push
dec
sbb
cwtl
imul
cmpsb
subl
adc
sbb
mov
dec
pop
movsl
ret
sqrtps
jmp
popa
jbe
pop
fdivrs
sbb
inc
xchg
cmp
pop
repz
cmp
push
fildl
xor
ret
cmp
fdivr
je
cmp
or
and
push
lret
sbb
ss
sar
add
xchg
loopne
xchg
out
and
int3
lahf
jbe
mov
cmpl
adc
lea
fst
cwtl
loopne
push
sbb
inc
ret
adc
in
mov
push
repz
test
dec
sbb
sti
mov
cmp
lea
cmp
xchg
add
xor
adc
in
test
dec
fcoml
shrb
addb
incb
mov
xchg
cs
scas
cmpl
pushl
ret
jg
inc
jmp
popa
fwait
cmp
xchg
lea
inc
push
adc
lods
sub
pop
mov
pop
push
xchg
pop
lea
aad
jo
dec
sbb
xor
imul
mov
sbb
fdivs
add
hlt
push
push
les
aam
dec
loopne
ss
cmc
jmp
ljmp
inc
sbb
fcomp
inc
and
and
dec
imul
in
ss
or
ss
nop
or
or
mov
mov
fdivrs
ret
mov
inc
popa
jp
mov
in
dec
adc
jb
push
addl
push
push
xchg
in
in
ja
dec
loopne
push
stos
cmp
dec
jno
add
sub
jecxz
jno
ret
add
arpl
imul
dec
inc
inc
add
pop
sub
dec
push
enter
leave
js
call
adc
call
or
mov
xchg
dec
pop
mov
sub
jle
lds
jo
xor
test
sub
and
leave
cmp
and
adc
test
cmp
arpl
add
jo
xchg
pop
dec
je
mov
pushfw
and
aad
hlt
cmpl
outsl
mov
mov
cmp
sbb
push
adc
jecxz
adc
push
imul
imul
mov
xor
pop
fisttpl
adc
add
push
push
dec
dec
loopne
cmp
push
add
dec
movsl
sbb
mov
fdivs
icebp
jns
adc
sub
test
out
push
push
add
mov
inc
pop
or
pop
jo
popf
rcrb
adc
das
dec
sahf
cmp
popf
es
xor
pop
sbb
sbb
dec
adc
and
adc
shr
decl
add
idiv
push
mov
fimull
mov
dec
adc
and
lret
xor
push
cmp
or
and
and
fisttps
and
and
nop
jae
scas
insl
shlb
std
adc
dec
or
jmp
mov
repz
sub
mov
stos
movsl
inc
sbb
cld
cmp
add
sub
mov
push
jns
xchg
or
in
in
outsb
sub
call
mov
push
in
add
add
mov
and
in
enter
push
push
test
cmp
daa
or
xor
bound
enter
sbb
and
and
add
adc
lcall
divl
add
or
dec
inc
inc
add
int3
sbb
nop
enter
sub
cmp
or
xchg
push
pop
rolb
mov
les
xchg
movl
or
mov
or
and
cmpsb
or
sha1msg1
test
nop
add
leave
leave
add
add
les
add
dec
mov
sbb
push
push
data16
mov
dec
sub
and
dec
xor
in
pop
test
shll
inc
and
mov
rcrb
mov
xor
imul
add
adc
mov
push
xor
pop
pushw
test
pop
jno
push
cmpb
add
or
loope
lock
adc
enter
ret
jne
push
sbb
adc
and
inc
sbb
test
mov
pop
enter
lock
pop
test
js
and
test
out
push
adc
out
and
test
dec
adc
mov
lea
jp
cmpsb
mov
aam
sbb
pushf
push
add
xlat
fadd
hlt
xor
insb
add
lods
xor
sbb
cmp
sbb
push
sti
into
out
les
loopew
dec
push
lods
push
adc
int3
push
daa
dec
cmp
lcall
add
inc
mov
push
or
push
pop
lahf
imulb
aam
call
or
mov
rolb
aaa
sbb
scas
inc
cmp
push
pop
and
loope
fs
and
mov
popa
std
ss
and
fmul
adc
mov
push
insl
sub
pushf
mov
and
mov
adc
lods
pop
or
xor
test
cmp
jnp
cmp
cli
cmp
add
cld
insl
fcmovnb
dec
mov
push
ljmp
test
repz
jns
nop
jne
cmp
mov
pop
jge
mov
test
dec
pusha
dec
leave
jo
ja
dec
imul
icebp
jne
push
jns
dec
pop
add
cmp
out
ja
je
popa
jnp
jo
inc
scas
adc
movsl
jmp
or
add
dec
repz
mov
mov
add
xlat
cmp
sub
push
adc
mov
add
cmpsl
mov
add
mov
dec
dec
add
and
popf
add
cmpsl
dec
mov
mov
orl
xorb
fisubrl
jne
cmp
pop
cld
sarb
add
inc
add
pushf
sbb
pop
cmpsl
pop
jo
mov
adc
sbb
mov
call
push
pop
pushf
add
aam
or
sbb
jns
add
sbb
clc
mov
push
enter
push
pop
xor
test
sti
xor
xor
push
loopne
mov
repnz
imul
mov
adc
mov
divl
mov
adc
ljmp
adc
out
and
xor
sub
rclb
sub
aas
push
mov
sbb
push
in
adc
add
sbb
mov
fmuls
and
mul
dec
dec
clc
mov
sbb
mov
xchg
xor
nop
lock
adcb
out
int
jmp
ret
mov
stos
std
roll
mov
outsl
cmpl
xor
push
cwtl
clc
in
jp
xor
jmp
cmp
mov
les
loop
add
add
fnsave
mov
adc
pop
sahf
sbb
and
stos
cmp
ljmp
dec
pop
or
cmp
push
out
aaa
lods
xor
and
imul
cld
and
je
inc
sahf
or
shlb
pop
pop
fcomps
push
pop
sbb
xor
mov
or
int3
loop
repz
dec
je
inc
push
lods
add
push
mov
sbb
cmp
sbb
dec
dec
dec
mov
call
push
push
push
push
push
call
cmp
inc
push
adc
sbb
mov
in
loope
je
cmpsb
mov
adc
call
jmp
mov
sarl
loop
add
shll
sbb
cs
add
mov
or
inc
adc
push
insl
jae
inc
insb
add
pop
and
xor
sub
xchg
idivl
mov
adc
or
jp
lods
adc
sbb
add
in
xor
push
dec
cs
mov
cmc
push
xchg
lods
roll
pusha
mov
popf
add
scas
rolb
xchg
or
lock
push
arpl
cmp
jb
popf
mov
push
push
rcr
mov
push
or
push
sbb
rolb
pop
mov
push
shr
push
push
negl
shlb
and
add
mov
bound
mov
push
push
seto
sarb
xchg
enter
push
mov
packssdw
mulb
or
insl
shl
rol
cmc
mov
jbe
fmul
pop
dec
adc
rcl
sub
fcomps
cli
mov
adc
adc
fdecstp
inc
loop
stc
lock
mov
jg
pop
jp
adc
sbb
cmp
push
xor
or
push
jnp
xchg
insb
inc
cmp
push
icebp
cmp
gs
push
mov
lret
pop
aas
and
xor
or
int
sbb
push
cmp
inc
mov
fcoml
daa
in
cli
push
stc
adc
loopne
add
adc
leave
adc
cmp
inc
cmp
and
movb
xor
adc
cmpb
insl
adc
mov
outsl
cmp
stc
sbb
push
adc
or
and
mov
add
xor
mov
pop
mov
mov
hlt
fwait
sti
rep
movsw
push
cld
es
xchg
movsb
mov
aas
std
aas
lods
or
mov
shr
mov
inc
mov
ja
inc
cmp
jle
movb
cmpb
fwait
imul
jg
mov
and
flds
fiaddl
mov
js
lret
add
movsbl
xor
orl
xchg
add
jb
and
push
cld
ret
xchg
je
push
push
fwait
adc
sbb
inc
pusha
mulb
sub
pop
pop
imul
mov
les
inc
add
push
or
insb
mov
or
subl
or
fs
push
insb
dec
xor
and
or
cmp
aad
pop
add
xor
jbe
lods
mov
mov
mov
sub
cmp
shll
sbb
fstl
cmp
push
enter
push
lock
lock
test
rorb
xchg
and
add
and
or
ss
shl
cmpb
lcall
rorb
add
add
jb
jb
push
pop
or
mov
jmp
or
jmp
or
jno
jmp
mov
jmp
por
jmp
adc
pop
mov
jmp
adc
dec
adc
dec
adc
mov
pop
jmp
sbb
xor
mov
sub
jmp
sbb
and
mov
pop
jmp
and
or
jp
mov
adc
fimull
push
add
outsb
add
push
mov
sbb
push
and
mulb
jle
push
xchg
xchg
sahf
cmpsb
scas
mov
jns
out
lret
rcl
sahf
out
sahf
fcmovu
in
out
repz
out
clc
std
add
iret
repz
sbb
and
sub
xor
ds
in
mov
add
add
push
pop
or
and
in
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
sub
repz
dec
mov
enter
sub
pop
mov
dec
inc
xor
mov
add
idivl
mov
divb
das
or
lea
les
jae
fstl
ja
push
push
cmp
adc
xchg
rcl
and
incl
cmp
sub
sub
mov
dec
inc
xchg
push
inc
cmp
jbe
inc
shlb
cmp
and
adc
fiaddl
lea
fwait
and
filds
push
jmp
inc
push
push
sub
inc
fisttps
pop
pop
mov
dec
jl
fimull
bswap
rolb
dec
ss
and
aam
or
xchg
add
fdivrl
jb
and
dec
dec
dec
or
inc
movsl
hlt
aad
xchg
inc
enter
cld
sub
jl
add
aam
cmp
dec
sbb
sub
mov
sub
test
mov
sbb
je
push
jbe
mov
dec
adc
in
insl
and
or
mov
xor
ja
out
mov
add
mov
add
dec
call
aaa
test
inc
or
mulb
mov
xchg
xchg
mov
inc
dec
push
or
dec
call
aaa
cmp
dec
lahf
pop
xchg
dec
mov
pop
arpl
test
add
adc
movsb
adc
rcrb
call
and
push
add
inc
pushl
cmpsl
and
cmp
fisttpll
shlb
push
cmp
cmp
pop
test
pusha
fnstsw
push
xlat
andl
invd
push
fmulp
test
sahf
ss
push
inc
pop
loopne
jl
push
add
in
lock
or
xor
std
mov
jmp
mov
jne
and
adc
xchg
jne
jno
dec
mov
aas
jo
ss
xor
jo
je
xor
movsb
mov
adc
or
pushf
cmpb
loopne
shlb
lcall
cmp
or
xor
and
ret
std
xchg
je
dec
sahf
or
lahf
cld
push
clc
xchg
xor
dec
je
xchg
clc
pusha
cmp
sbb
push
xor
jmp
clc
adc
cmp
cmp
pop
adc
pop
fsubrs
or
add
add
inc
dec
or
jnp
or
adc
cmpsl
or
cmpl
xor
mov
xor
jne
xchg
les
cmp
push
jbe
xchg
lahf
js
mov
movsb
repnz
inc
or
push
in
push
add
sub
dec
push
mov
int
ds
sbb
clc
mov
cwtl
ret
push
xchg
and
lods
xorb
cltd
or
mov
adc
pop
lock
pop
or
loope
mov
or
int3
push
mov
mov
imul
push
pop
push
test
xor
mov
in
inc
mov
sub
add
inc
call
test
sub
push
insl
cmp
cmpsb
pusha
adc
inc
dec
inc
sbb
jp
unpcklps
inc
fsubrs
mov
sbb
xor
push
in
gs
nop
add
sub
sub
add
mov
in
cli
push
jmp
add
push
aam
mov
adc
xor
addr16
or
inc
enter
sub
add
int
add
scas
mov
rolb
scas
xor
push
adcb
jecxz
out
lods
roll
sahf
add
or
popf
dec
popf
mov
jns
sbb
lret
xor
xor
sub
mov
mov
mov
xchg
cmp
ret
pop
or
call
stc
lahf
adc
rorl
je
cmp
xchg
jbe
addr16
inc
jecxz
ret
push
fsubl
daa
push
in
xchg
push
add
jmp
mov
bound
pop
xchg
stos
add
popf
jmp
call
js
popf
leave
inc
add
xor
fcomps
pushf
sub
pusha
adc
imul
add
repz
push
repnz
aaa
add
dec
xchg
fs
ret
std
loopne
xchg
xor
pop
xchg
and
nopl
test
dec
fdivrl
sbb
aas
xor
loopne
mov
pop
fcmovnbe
fldl
adc
add
pop
push
xadd
dec
cmp
jp
cmp
loopne
leave
sbb
add
dec
push
decb
push
es
add
mov
fsts
adc
or
push
scas
or
nop
push
xor
xchg
sahf
sbb
test
ss
jne
or
jl
jae
cmp
and
rorb
xchg
mov
fidivs
leave
inc
adc
je
pop
in
cmp
mov
xchg
push
push
inc
popa
daa
sbb
push
xor
in
movsb
push
or
or
ds
inc
add
sub
je
js
cmp
pmulhuw
inc
push
fwait
movsb
mov
jmp
pop
pushf
mov
adc
movsb
addb
inc
pop
lods
inc
jbe
je
mov
mov
pop
adc
frstor
pop
and
pop
int3
rcrb
push
cltd
movsb
aam
fsub
mov
add
xor
cltd
out
xchg
test
cmovp
jp
test
push
stos
xor
pushl
cwtl
add
add
add
lea
add
pop
add
aaa
mov
mov
data16
das
cltd
sub
jbe
or
in
or
xor
cmp
jl
sub
jle
jns
lea
add
add
or
push
or
push
or
sbbl
mov
xchg
sbb
jp
std
jmp
xchg
call
and
inc
and
outsl
lock
push
mov
jmp
adc
ret
push
inc
mov
sbb
dec
mov
mov
pop
sti
cmp
je
lret
pop
dec
and
and
xchg
push
dec
cmc
jmp
rcl
loope
in
mov
in
rclb
push
rcr
jae
int
sbb
and
ret
ret
sub
js
jo
mov
gs
sub
jmp
fwait
xchg
fsts
imul
sbb
or
call
sub
test
cmpsb
cmp
push
jmp
add
adc
sti
jge
lock
xor
jl
cmp
jle
mov
ret
push
pop
movsl
add
pop
sarb
or
inc
movsb
movsb
adc
mov
xchg
shll
cmp
mov
ss
sbb
lods
pop
add
pop
mov
push
sub
ds
sbb
test
pop
pop
mov
cmpb
jne
aas
and
add
pop
jmp
adc
inc
cmpsb
push
xor
sub
push
xor
push
clc
addb
add
mov
jge
ret
pop
pop
cmp
pop
push
xchg
movsb
mov
sahf
or
stos
or
push
jo
fcompl
add
lret
pop
popa
arpl
or
mov
add
sub
lret
inc
in
adc
sbb
and
loopne
xor
call
sbb
jne
xor
inc
addb
bound
cmp
addb
int3
or
adc
lock
lods
adc
sarb
inc
xchg
jno
in
jge
mov
test
push
aaa
xor
in
repnz
ss
in
or
jg
adc
orb
xor
je
xor
and
or
jne
push
xchg
adc
sarl
adc
fadds
scas
xchg
xchg
stos
mov
fcoms
sbb
or
out
test
inc
stc
loopne
mov
inc
loope
or
aad
jle
orl
pop
inc
aaa
adc
adc
enter
push
sub
jno
jne
and
push
shlb
adc
out
xchg
pop
sub
or
movsb
or
add
jo
jmp
sbb
sub
inc
fistpll
or
jmp
inc
xor
test
das
fs
mov
test
test
jb
fisttps
jb
sbbb
adc
xchg
pushf
pop
and
mov
push
add
push
xor
add
aaa
dec
loope
scas
int
dec
outsb
cltd
or
test
mov
and
jge
loop
addl
sarl
push
sbb
jae
cmp
das
fldcw
popa
cmp
jmp
xor
mov
add
add
push
jns
ss
cmp
fwait
mov
jge
cmpsl
push
xor
dec
adc
lret
outsl
psllw
test
xchg
push
enter
inc
or
cmc
fbstp
fwait
cmp
jle
mov
pushl
loope
les
mov
sub
sbb
or
int
mov
add
xchg
shl
and
jmp
pop
int3
add
sbb
cltd
ds
pop
xchg
lock
add
arpl
pop
xchg
cmp
cmc
adc
into
cmp
loopne,pt
mov
sti
sbb
adc
mov
lahf
out
rcl
ror
popf
icebp
aam
test
stos
jl
jbe
pop
mov
push
inc
jle
pop
jbe
loop
inc
psubw
adc
push
clc
inc
cmp
call
popa
add
push
adc
add
adcb
inc
and
adc
popa
jecxz
bound
pop
push
jg
nopl
andb
and
add
mov
inc
out
add
ret
scas
mov
movsl
pop
stos
jo
call
subl
ror
mov
push
ss
jle
mov
jae
lock
in
arpl
mov
inc
mov
or
call
test
add
in
inc
adc
pop
ret
xorb
inc
mov
jp
pusha
dec
add
in
inc
push
add
jne
inc
loopne
adc
das
cmp
aas
or
dec
xchg
mov
jl
mov
add
scas
daa
xor
push
inc
sub
rcll
dec
mov
addl
dec
pop
add
push
daa
push
sub
leave
pop
add
mov
or
xchg
nop
out
imul
addl
daa
push
sub
inc
sbb
mov
gs
lods
fs
dec
lock
dec
xor
iret
out
mov
push
dec
xor
xor
push
adc
mov
or
add
jns
movsb
clc
adc
imul
lcall
cmp
adc
fstl
fldz
fcomp
fnstsw
std
or
movsl
int3
fsubr
pop
faddp
pop
and
fstpl
mov
enter
adc
pop
clc
xor
dec
imul
xchg
cmp
ret
pop
hlt
xlat
rcrb
repnz
pop
hlt
jl
cmp
xor
fucom
in
jne
jge
jmp
loop
push
jno
xor
jmp
add
mov
push
icebp
pop
sbb
das
mov
rolb
sbb
std
int
movl
pop
loope
lcall
fldl
jbe
imull
cmp
and
xchg
dec
mov
lea
lea
cmp
or
xor
test
aam
aam
adc
test
adc
mov
or
add
cmpsl
ds
ja
es
js
push
fldl
int3
add
jae
push
jp
int3
test
or
jnp
mov
sahf
out
sub
sar
lahf
out
fimuls
enter
dec
jnp
sbb
in
ds
movsl
dec
fstp
cmp
mov
out
pop
call
push
jmp
pop
std
call
cld
dec
test
push
ret
or
arpl
cmp
lock
inc
pop
mov
lahf
or
sbb
and
rcll
sbb
sbb
mov
inc
pop
sub
push
dec
mov
push
aam
sarl
add
insl
push
arpl
and
hlt
mov
pop
adc
or
xchg
cmp
fildl
pop
aas
add
sbb
cmp
push
xor
push
std
and
or
or
rolb
arpl
test
shrb
pop
cmp
lock
mov
popf
gs
mov
add
sti
ss
js
push
mov
or
sub
add
add
cwtl
outsb
outsb
fwait
mov
jb
or
aaa
add
fldt
jne
push
push
xor
push
out
or
pop
inc
lret
ja
sbb
jb
push
xchg
or
dec
pop
jb
jns
movsl
mov
sbb
xchg
add
data16
mov
lock
mov
rorl
push
push
dec
loope
arpl
jo
lret
cmp
stc
mov
and
mov
das
jb
sub
loop
jecxz
sarl
iret
pop
cs
inc
cmp
jne
adc
iret
xor
pushf
add
inc
lcall
push
cmp
adc
pop
ss
bound
mov
call
add
dec
movsb
pop
or
mov
sbb
adc
pusha
or
and
clc
or
sar
add
popf
rolb
pop
mov
sub
sarl
cmp
mov
cwtl
out
cmpsb
xchg
jo
xor
cmpsl
adc
pop
andb
rcrl
add
addr16
push
lcall
pusha
and
int
daa
cmp
add
cmpsl
cmp
call
cmp
movsb
lock
fidivl
sbb
push
jmp
add
push
insl
enter
inc
jbe
mov
push
ss
inc
jb
sbb
pop
add
outsb
pop
or
arpl
xor
ja
jmp
dec
add
aam
add
pop
xchg
and
sub
movsl
push
sub
add
shrl
xchg
mov
fs
sub
aad
dec
xor
ljmp
push
das
daa
or
jae
scas
jae
xchg
fidivrl
popa
pop
jbe
hlt
mov
xor
lods
notl
mov
and
movsb
leave
pop
in
cmpsb
xchg
xchg
mov
cltd
inc
inc
pop
jne
aaa
jnp
push
push
push
push
push
dec
sbb
mov
mov
sbb
dec
test
inc
cmpsl
fisttpl
inc
sbb
ret
movsl
sbb
out
or
mov
sub
inc
mov
imul
or
cmpsb
lods
pusha
xchg
clc
orl
and
mov
mov
jbe
xor
jo
sbb
pop
and
push
and
jmp
xchg
lret
pop
mov
es
jno
popa
popa
cld
cmpsb
ret
mov
push
and
pop
imul
inc
mov
js
shlb
ret
jbe
mov
jl
xor
push
mov
test
xor
lods
cmpsl
sub
movmskps
add
jmp
add
daa
nop
int
test
add
and
or
stos
adc
test
in
xchg
loope
enter
lock
enter
adc
pop
fildl
test
loope
cmp
push
jmp
sbb
in
xor
js
mov
pop
push
popa
mov
enter
xchg
push
mov
or
aam
cmp
lds
mov
cmp
sbb
lea
sbb
xchg
pop
and
and
mov
xchg
or
cmp
aad
popa
and
and
push
jbe
fcoms
mov
orl
adc
je
sub
dec
add
stos
leave
mov
fsubs
daa
insl
or
and
orb
pop
pusha
inc
insl
sti
mov
dec
pop
ds
idivb
pop
dec
or
pop
test
mov
jns
call
sbb
pop
add
mov
cmp
mov
jl
decb
add
in
inc
pushf
fldcw
jo
sub
add
fcmovbe
sarl
aam
jbe
test
push
xor
push
sbb
mov
mov
cmp
inc
inc
lret
movups
pop
out
movsb
cmp
push
dec
sub
shrb
mov
fstpl
push
inc
addb
xchg
pop
js
push
xchg
jmp
sarb
gs
imulb
xchg
pop
test
fimull
and
mov
xchg
dec
fiaddl
jo
cmpsb
pop
push
adc
inc
xchg
mov
fucomi
or
popf
cmpsl
add
jne
cmpb
cmp
jl
push
xor
mov
cmp
sbb
rorl
jl
les
lock
push
add
or
inc
lcall
pop
nop
iret
sbb
push
add
add
mov
les
xor
xchg
cmpsb
mov
adc
adc
lea
and
sti
mov
add
push
popa
and
cltd
addl
add
sbb
sbb
pusha
mov
jb
or
pusha
popa
xlat
xchg
popa
psrad
or
das
xorb
jno
inc
ficoms
mov
adc
js
xchg
invd
outsb
and
xchg
and
je
cwtl
fsubrl
in
cli
adc
je
push
lret
sbb
and
movsl
roll
popf
jle
sbb
push
cmp
addr16
mov
mov
pop
jg
add
or
aaa
jae
nop
add
sahf
push
inc
test
movsl
imul
mov
pop
cs
push
incl
jo
and
in
arpl
loopne
push
cmp
push
and
sbb
filds
pop
xor
mov
nop
xchg
add
push
or
loope
sbb
cmp
lahf
mov
xor
orb
sbb
imul
testl
fsubrs
imul
fsub
dec
in
inc
push
or
in
sbb
scas
adc
sbb
sub
lods
pop
ss
add
je
or
rcrl
push
js
das
jp
scas
daa
test
inc
cmp
pop
sbb
inc
mov
addb
mov
adcb
jg
dec
enter
or
push
adc
inc
push
mov
add
sub
shrb
sbb
inc
or
loope
fiadds
or
leave
lock
cmp
fsubl
aad
nop
add
negl
sbb
and
sub
pusha
cmp
push
pop
mov
add
or
adc
mov
in
push
and
sbb
push
popa
push
std
dec
mov
mov
pop
jmp
popa
inc
or
inc
mov
out
add
cmp
sub
jns
xchg
pusha
pop
add
jo
scas
mov
add
sub
shl
sub
xor
add
mov
cmp
or
cmp
dec
or
mov
imul
inc
dec
jo
and
adc
inc
or
pop
mov
es
clc
aad
or
in
js
loopne
mov
cmpsl
dec
cmp
loopne
cs
or
mov
dec
outsl
adc
mov
xchg
negb
icebp
jmp
cmp
sub
mov
mov
jo
sub
mov
fsubs
test
pop
outsb
test
insb
push
pop
xchg
in
enter
mov
lcall
out
mov
push
into
aam
push
adc
les
jb
mov
inc
lods
xor
movsb
test
daa
clc
dec
mov
fmuls
xor
pop
jmp
jb
mov
push
lret
dec
std
lret
adc
push
mov
popa
aad
fsubrs
xor
insl
inc
jge
movsb
push
imul
sbb
stos
sti
fldl
inc
adc
mov
mov
push
jp
addr16
xchg
add
lahf
mov
jp
cmp
out
xchg
cmp
test
add
dec
and
test
lcall
mov
cmp
dec
push
push
ds
push
je
push
pusha
inc
cmp
inc
mov
add
rolb
xchg
pusha
call
xchg
xor
pop
lret
or
ret
call
cmp
outsl
andl
sub
lcall
fnsave
inc
in
daa
jns
add
add
jl
test
cmpsl
or
repnz
xchg
test
inc
fildl
insb
js
and
push
dec
cltd
sahf
hlt
push
add
cmp
repz
mov
movzbl
or
cmp
sub
das
xchg
leave
cmp
jge
push
inc
subb
jl
mov
lods
xchg
xchg
sub
pop
test
sub
pop
or
aad
adc
pusha
push
cmp
jnp
mov
jmp
loopne
xor
fwait
out
or
dec
mov
scas
insb
jmp
or
dec
enter
dec
adc
dec
or
dec
ret
push
mov
pop
or
sub
test
pusha
and
adc
sub
adc
mov
adc
push
xchg
or
dec
dec
mov
sbb
adcb
lcall
rorl
hlt
or
push
xchg
iret
cmpsb
lods
bound
hlt
hlt
dec
imul
lods
std
aaa
incb
test
jmp
inc
imul
add
and
jne
mov
test
and
add
ss
mov
inc
rcl
lea
ret
push
int3
add
adc
or
inc
xchg
les
leave
jb
push
lock
mov
pop
mov
or
and
or
pop
fwait
sti
mov
ret
fs
push
lea
pop
js
push
jecxz
jmp
jno
xchg
jl
or
xlat
jo
gs
loop
test
lock
scas
pop
inc
hlt
sub
test
fisubrs
push
mov
inc
pushf
nop
xorb
push
mov
sbb
add
mov
pusha
add
iret
iret
lods
movl
dec
mov
mov
aaa
adc
mov
mov
clc
push
add
or
stc
in
rorl
mov
push
mov
cltd
or
add
outsl
ficompl
mov
sbb
sti
xor
lea
aaa
mov
push
lea
cmp
mov
cld
pop
cmpb
jp
mov
es
ficoml
pop
or
adc
jo
fs
jp
enter
and
scas
xchg
insl
int3
loop
test
enter
test
cwtl
std
notb
cmpsl
repz
lret
mov
xchg
dec
faddl
and
push
or
cmp
mov
popf
dec
jae
stos
in
adc
push
push
into
push
mov
cmp
jbe
movsl
std
and
sbb
jne
enter
aas
ss
clc
leave
pop
or
push
inc
mov
movsb
or
mov
push
cld
cld
clc
or
pop
jmp
inc
inc
cmp
std
mov
loop
xor
fwait
push
cld
add
mov
movzbl
and
dec
or
aas
fiadds
push
add
push
ret
push
lea
cmp
jnp
adc
xchg
and
and
mov
jo
in
mov
lea
push
fimuls
gs
push
and
pushl
pop
shr
out
inc
pop
cmp
rorb
out
xchg
in
sbb
cwtl
loope
daa
jecxz
je
inc
pop
jo
jmp
push
pusha
pop
lcall
xchg
xlat
adc
notl
ret
pop
dec
or
punpckldq
insb
inc
xor
or
mov
xchg
jae
push
and
and
fsubs
test
test
sub
xchg
push
and
mov
insb
test
and
stos
adc
cwtl
sbb
push
in
xchg
fbstp
sarb
xor
add
push
add
imul
mov
or
sbb
lahf
sbbb
test
sub
fists
arpl
fdivl
adc
push
ret
or
cltd
sub
xchg
jns
sahf
out
popa
das
add
sbb
mov
push
push
cmp
in
hlt
or
mov
push
mov
imul
test
add
xchg
mov
je
es
mulb
dec
add
push
jbe
mov
lahf
test
push
add
ror
add
and
ret
sbb
or
pop
add
sbb
sahf
test
loop
shl
and
movsb
fldenv
fisubrl
or
ss
dec
loopne
dec
cld
and
iret
in
and
add
loopne
xchg
mov
xor
push
add
xchg
add
je
call
jecxz
mov
mov
and
mov
and
inc
xchg
xor
inc
js
stc
dec
dec
xchg
mov
or
push
pop
mov
lret
mov
xchg
mov
or
pop
add
aam
mov
adc
iret
out
mov
push
add
push
pop
lret
and
movsb
pop
jb
push
mov
jmp
sub
xorb
movsb
shlb
lret
mov
test
jmp
xchg
or
ja
xchg
push
and
cmp
xchg
adc
test
cltd
or
and
or
lds
or
xchg
xchg
sbb
xor
pop
mov
push
jmp
shlb
push
adc
clc
mov
xorl
mov
xorl
xchg
dec
mov
sbb
insb
sub
inc
and
xchg
add
mov
movsb
xor
aaa
lea
sbb
xchg
mov
iret
aaa
push
ret
jecxz
cmp
sub
cmp
je
iret
out
and
fsubr
fisttps
je
jge
aad
ret
jg
mov
mov
fisttpl
cmp
or
push
add
fst
jl
xchg
lea
out
cli
pop
cmpsl
mov
rcrb
es
jne
jecxz
and
mov
jge
mov
jb
sbb
adc
pop
pop
aad
adc
adc
movsl
cmp
ret
cmp
leave
sti
decb
pop
movsl
imul
bound
shll
inc
inc
jmp
inc
pop
in
repnz
sub
pop
inc
push
insb
sbb
cmp
mov
gs
sbb
mov
push
push
jmp
add
ret
repnz
mov
or
sub
push
clc
or
fimull
adc
arpl
cli
mov
repz
jecxz
insl
ret
les
mov
xor
xchg
mov
xor
popf
pop
mov
adc
sub
push
mov
test
inc
in
and
xchg
cmpsl
push
clc
rorb
push
mov
repnz
ss
in
enter
fbstp
xchg
and
xor
shr
shrb
les
xchg
mov
cmpsl
rcrb
add
addb
inc
mov
xor
sub
lods
inc
test
fdivl
xor
adc
xor
adc
push
inc
sub
fcoml
and
stc
rol
pop
les
xchg
mov
enter
ret
outsb
out
dec
stos
jnp
in
aam
adc
icebp
daa
sahf
and
push
insb
and
push
dec
add
push
sbb
jo
je
xor
mov
sub
push
inc
push
lods
dec
clc
or
je
mov
je
xor
adc
repz
popa
dec
mov
outsb
and
ret
mov
dec
enter
fcoml
mov
or
push
cltd
push
mov
enter
jle
jbe
pop
push
sbb
call
inc
ficoml
push
adc
push
sub
bound
cmp
test
xchg
adcb
addl
pop
sbb
jge
lock
jo
push
and
imul
or
mov
cmpsl
lock
jmp
cs
cltd
es
lahf
je
xchg
or
cmpb
inc
mov
loop
inc
in
lcall
test
gs
pop
cmp
jg
adc
leave
inc
les
pop
xor
shrb
loop
int3
insb
icebp
push
mov
xlat
cmp
or
test
xlat
popa
cld
dec
and
dec
sub
or
dec
mov
data16
xor
sub
push
sub
jne
jbe
inc
cmp
push
insb
inc
jle
loope
sbb
lea
ret
push
enter
sbb
pop
aas
mov
xchg
rorl
mov
jo
lcall
and
sbb
mov
ljmp
out
nop
loopne
leave
xor
shr
xor
adc
js
mov
not
movsl
mov
push
push
filds
sub
sbb
incl
mov
mov
shr
cmp
jbe
add
mov
xor
movsb
pop
dec
test
pop
add
aad
sbb
add
lcall
aaa
inc
enter
xchg
int
jecxz
mov
and
and
test
adc
jle
cmp
inc
push
sbb
shlb
mov
adc
adcb
mov
push
and
orb
push
inc
push
jl
xor
ret
out
jmp
addr16
jge
xchg
mov
jne
rcr
scas
int
or
jb
push
adc
dec
lahf
aaa
lock
xor
dec
or
dec
push
mov
in
mov
push
fs
repnz
lahf
add
nop
mov
xchg
cmc
arpl
test
stos
and
sub
push
fdivr
ljmp
cmc
push
lret
cltd
pop
pop
test
push
inc
pop
call
out
int
mov
adc
adc
and
ja
mov
inc
sub
lods
mov
cmp
hlt
mov
and
mov
call
cld
rclb
lods
push
dec
cmp
shll
adc
bound
push
cld
or
pusha
add
adc
shlb
xor
xor
jecxz
add
add
loopne
add
sub
fidivrs
or
push
repnz
add
add
add
inc
mov
into
push
push
add
push
or
and
out
adc
push
push
jmp
and
adc
in
cmp
int
adc
mov
aad
mov
mov
inc
xchg
push
je
cmp
and
push
push
scas
or
pop
jo
mov
xor
or
or
and
or
ja
add
inc
sahf
xchg
lahf
or
push
call
jmp
push
and
aaa
or
adc
sub
sbb
add
sub
dec
add
mov
adc
xor
and
rcrb
sbb
test
popf
shl
xchg
sbb
adc
dec
mov
ret
sub
dec
mov
or
xor
and
pop
je
dec
cwtl
push
or
gs
jns
adc
lea
or
ret
daa
or
xchg
or
xor
dec
or
sti
out
sub
clc
and
shll
lret
xor
ss
cmpsb
mov
cmp
or
fsubrs
sub
and
mov
test
adc
push
push
sub
inc
daa
add
sbb
sbb
loopne
lods
xor
rcrl
add
add
cs
adc
add
dec
repnz
mov
pop
enter
sbb
mov
mov
hlt
nop
push
stos
pop
int3
iret
ret
sub
daa
popf
or
xchg
test
inc
mov
mov
inc
push
punpcklwd
daa
js
xor
inc
xchg
push
cwtl
sub
out
popa
pushf
dec
dec
mov
mov
lcall
sub
push
xchg
or
xchg
inc
mov
daa
mov
xor
dec
aaa
shlb
mov
inc
jbe
jmp
inc
add
mov
sbb
daa
movsl
and
dec
loopne
in
lods
sbb
ret
mov
adc
pop
mov
enter
xor
sbb
jge
add
xor
scas
fcoml
sarb
and
add
or
push
mov
mov
add
cld
orb
mov
xchg
das
cmp
inc
and
xchg
movsb
mov
es
or
int3
mov
add
aaa
pop
ficoms
dec
enter
mov
xor
lods
pop
adc
push
mov
and
movsb
mov
mov
xchg
push
les
jb
cmp
mov
xor
inc
xor
add
pop
movsl
inc
push
push
ja
in
add
test
movsb
into
insl
xchg
push
jnp
jmp
scas
sti
mov
addr16
jge
sti
xchg
ss
mov
imul
stc
call
ss
ja
or
mov
push
fwait
mov
and
jb
hlt
push
sub
cmp
int
jo
and
cmp
mov
dec
in
dec
mov
xchg
fwait
loop
pop
xchg
sarb
fst
sahf
jmp
mov
sahf
movsl
push
inc
mov
jle
or
dec
add
xchg
mov
jl
shll
sbb
loop
mov
pop
cmp
imul
and
add
mov
inc
or
adc
pushl
push
jnp
cs
outsb
and
adc
or
cmp
pop
push
xlat
mov
jmp
mov
rolb
mov
adc
stos
insb
xchg
add
stos
push
test
out
in
jp
sub
pop
dec
es
bswap
das
aas
mov
inc
lcall
stos
pusha
xchg
adc
xor
shrl
jp
mov
adc
in
js
sub
cmp
je
jbe
inc
mov
sbb
add
stos
mov
imul
clc
bound
test
cmp
jmp
andl
in
shlb
int
sub
inc
sub
arpl
nop
push
in
mov
lea
icebp
lret
movsb
stos
nop
cmc
xor
or
test
pop
push
neg
sbb
and
ficoml
push
fstpl
icebp
adc
jmp
addr16
daa
call
push
aaa
mov
sbb
or
or
inc
adc
jg
das
inc
sub
adc
and
or
movsb
adc
push
add
add
push
pop
movhlps
cmp
mov
sub
movsl
scas
dec
fs
mov
or
push
insl
enter
cmp
repz
das
inc
push
sbb
pop
sbb
xorl
mov
sbb
push
rclb
add
or
std
add
fbstp
rcr
mov
xor
int3
fwait
push
and
movsb
cmp
jne
push
mov
js
nop
ds
xlat
rorb
add
push
daa
fbld
or
int3
sub
inc
xchg
push
push
add
push
mov
push
jp
push
pushl
mov
xchg
push
sbb
in
mov
adc
movsl
cmc
mov
clc
jno
adcb
adc
andw
xor
adc
ss
xchg
inc
mov
lea
jecxz
daa
or
adc
sbb
sub
xchg
nop
xchg
out
and
in
movsb
jns
and
cmp
pop
dec
das
bound
xchg
scas
or
and
or
mov
adc
push
sbb
lret
mov
mov
cmp
jl
xor
mov
addl
add
pop
dec
mov
dec
stos
clc
inc
loopne
adc
or
adc
push
mov
jns
push
je
movsl
push
mov
and
or
mov
test
mov
stc
cmp
test
js
rcrl
xchg
fiadds
add
imul
push
and
mov
mov
inc
mov
cwtl
push
xchg
pop
les
push
mov
push
add
in
or
je
lret
test
rorb
nop
mov
addr16
hlt
pusha
in
ljmp
sub
jno
xor
xor
pop
inc
cld
sub
sbb
push
or
fdivl
add
lcall
loope
cld
pop
mov
dec
add
add
and
add
hlt
sub
push
movb
xor
xor
or
push
mov
adc
sub
dec
loopne
int
and
and
outsl
cmpl
sbb
dec
xchg
test
add
add
mov
lea
lcall
xor
inc
push
push
adc
inc
fmull
adc
sub
adc
xor
push
mov
and
les
dec
pop
imul
or
jns
or
stc
lret
loope
push
pop
sub
pop
dec
ficoms
push
inc
push
dec
cli
daa
cwtl
mov
dec
adc
push
push
js
mov
rolb
dec
in
cmp
mov
add
nop
test
mov
cmp
dec
mov
mov
imul
dec
push
inc
test
and
test
in
jl
push
in
addl
xor
xor
test
or
adc
push
push
inc
push
push
hlt
clc
inc
pop
push
adc
push
sub
push
or
adc
daa
cltd
jmp
push
lret
add
inc
in
mov
mov
daa
js
push
nop
adc
adc
adc
push
xor
popf
inc
outsb
inc
addl
jnp
jnp
sub
mov
push
lahf
sub
iret
cmp
xor
xor
leave
aaa
push
jo
add
je
push
js
push
stc
pusha
or
call
cmp
push
inc
adc
adc
xchg
jo
popa
ror
je
push
les
jo
pop
xchg
movsb
cmp
xorb
and
out
addb
add
or
jbe
popf
xor
popa
int3
call
sub
sbb
fwait
cmpsb
nopl
add
enter
or
cwtl
or
adc
jo
ret
loope
mov
push
subb
test
sbb
sbb
inc
es
hlt
jge
adc
inc
ljmp
into
pop
rorl
jae
sub
iret
mov
negl
adc
or
aam
or
pop
mov
mov
cs
pusha
and
sbb
xor
or
adc
ret
rcrb
orb
inc
loopne
out
and
sbb
clc
add
loopne
pop
push
xor
push
mov
jno
jge
jnp
pop
mov
cld
pusha
lods
adc
push
out
lds
add
mov
int
mov
push
rolb
dec
cmc
ret
not
pop
jne
out
int
jne
dec
rcrl
add
rol
int
or
add
enter
loope
push
andb
sarl
sahf
mov
mov
mov
add
mov
or
or
in
xor
or
cmp
es
in
sub
or
mov
and
mov
fbstp
ret
jo
pop
lea
add
popa
and
in
xor
cmpsb
dec
pusha
mov
rol
mov
ror
xor
shr
xor
jmp
call
rol
mov
rol
xor
shr
xor
add
add
add
push
ja
iret
and
fs
or
jae
cld
lcall
or
and
xor
add
add
aam
xchg
inc
fsubrs
add
add
push
mov
ror
mov
fisubrs
repz
add
xor
and
and
xchg
push
aam
add
or
xor
xor
xchg
sub
repnz
sub
fmull
pop
sub
lea
or
xlat
ret
rcl
push
adc
add
add
nop
cmpsb
sub
call
orl
data16
or
sub
ljmp
rol
rol
out
add
jb
xor
push
xor
fdivl
xchg
cmpsb
loopne
dec
xor
sbb
dec
shl
aam
in
sub
sbb
xchg
xchg
bound
cwtl
xchg
xchg
mov
rcll
les
mov
pop
sbb
add
cltd
call
xor
loopne
loopne
mov
in
in
loopne
add
and
xor
pop
cmp
aam
pop
cmp
xor
push
sbb
lret
jo
int3
into
add
fildl
add
in
push
xor
and
and
out
cmp
out
into
add
and
int3
lcall
inc
adc
mov
cmp
jo
ret
push
jo
sbb
adc
cmp
shlb
xor
adc
push
loop
cld
rol
jne
mov
filds
cltd
push
inc
fadds
or
pop
jbe
call
idiv
push
or
clc
jp
push
and
shll
fdivrs
inc
imul
in
rcrb
inc
sub
mov
xchg
cmp
and
stos
sbb
aam
xor
shlb
cmp
sub
xor
inc
in
in
cltd
lods
mov
out
rolb
inc
jo
sbb
cli
xor
push
shrl
jge
shlb
shrb
movsb
test
inc
lcall
and
add
dec
add
add
inc
push
xor
inc
and
add
dec
push
dec
in
movsb
cltd
xor
push
push
xor
dec
add
inc
cmp
adc
add
jae
pop
cmp
leave
and
jo
add
push
mov
sub
int
add
or
imul
sbb
pop
nop
data16
xchg
and
enter
xchg
movsl
mov
fcoms
stc
rorb
adc
sbb
roll
push
adc
cmpsb
jb
cmpsl
jl
dec
dec
dec
xor
push
imul
pusha
aam
mov
adc
ret
xchg
inc
dec
jb
lcall
adc
adc
push
cmpsb
imul
adc
push
pop
push
in
add
and
push
pop
cmpsb
push
dec
lock
sbb
shrl
mov
loopne
adc
movb
inc
push
pop
aas
and
push
lea
cmp
pop
cld
insl
rolb
sub
xchg
mov
xor
pusha
adc
or
loopne
lcall
add
mov
mov
rol
sbbb
add
rorb
jbe
mov
cltd
in
push
inc
jae
mov
add
or
sub
xor
mov
adc
add
fidivrl
jl
sub
out
mov
add
jecxz
mov
or
mov
dec
jne
pop
inc
outsb
add
loope
lock
iret
sub
sub
mov
or
aaa
jbe
or
fs
jne
movsb
inc
adc
adc
sub
jae
push
sub
mov
pop
fadds
rep
or
push
std
dec
lods
mov
or
mov
push
insl
mov
outsl
pop
loopne
ror
mov
testl
cld
mov
mov
scas
xchg
sub
sbb
enter
push
inc
inc
and
aam
enter
sbb
dec
movsl
mov
add
dec
insb
fiaddl
dec
lea
add
mov
or
or
cltd
inc
sub
adc
bnd
and
mov
xor
mov
movsl
nop
jb
inc
and
sbb
roll
xor
test
cltd
sbb
mov
jp
xor
adc
xchg
loope
add
test
adcb
dec
mov
lds
xchg
jl
dec
mov
add
adc
jmp
mov
andl
adc
or
add
or
imul
and
dec
loopne
add
mov
sub
jo
add
sahf
cwtl
loope
inc
or
xor
sbb
push
add
push
inc
sub
push
xchg
out
cli
cmp
pop
mov
lock
add
sbb
mov
add
sub
and
inc
rcll
xor
or
ret
dec
mov
inc
adc
add
dec
dec
adc
xchg
push
mov
test
add
adc
clc
adc
aam
inc
in
pusha
push
mov
ds
sbb
scas
ret
add
pop
cmp
outsb
fiaddl
inc
cmp
sub
cmp
add
mov
sbb
lret
sub
std
add
insl
push
and
xchg
aaa
adc
or
dec
cmp
add
jle
nop
bound
lahf
es
sub
push
jno
or
arpl
or
orb
mov
imul
jns
in
ret
sbb
fiaddl
xor
out
jl
pop
hlt
jnp
mov
cld
jmp
sbb
cltd
sub
mov
sub
movsl
in
jo
nop
adc
and
cmp
adc
fisubs
mov
push
inc
fstpt
add
mov
sbb
and
test
mov
imul
mov
mov
mov
and
loopne
in
add
sahf
jge
sahf
and
or
lock
addb
clc
loopne
sbb
and
sbb
test
hlt
add
inc
cli
and
lock
adc
mov
jmp
cmp
ret
ds
rol
cmpsb
les
or
xchg
inc
mov
pop
sub
dec
mov
and
insb
loopne
or
fdivrl
inc
mov
lock
push
or
inc
cmp
jnp
pop
nop
cmp
addl
nop
mov
add
mov
add
and
push
bound
lret
pusha
pop
add
sub
mov
pop
jle
sahf
mov
inc
or
pop
popa
loopne
dec
js
xor
push
push
and
sub
sbb
and
push
push
dec
jge
cmp
add
mov
sub
adc
js
jne
jbe
adc
sub
push
sub
test
sbb
aad
iret
incb
cmp
xor
bound
pop
push
pop
sub
jo
xor
movsb
xchg
ret
loopne
add
xchg
in
and
xor
push
js
arpl
push
sub
dec
mov
dec
out
jge
xchg
jbe
or
imul
out
dec
jl
mov
movsb
es
test
xor
dec
and
inc
dec
xchg
fadd
shlb
test
jbe
mov
sub
mov
rol
inc
dec
aas
or
scas
outsb
xchg
adc
cmp
cmp
mov
mov
or
push
push
jae
xor
add
ret
cmpb
push
lods
pusha
cltd
orl
pusha
push
mov
mov
mov
movsb
flds
dec
and
in
inc
add
push
sahf
mov
push
jb
aam
inc
add
push
mov
std
mov
push
push
cmpsl
mov
push
rcrb
pop
push
js
pop
loopne
dec
push
mov
sarl
jb
jmp
stc
cmc
cmovl
and
xor
xchg
adc
in
stos
sbb
imul
movsl
stos
test
mov
insb
mov
mov
fidivl
pop
mov
xchg
pop
cmp
mov
popa
int
adc
or
xchg
dec
lock
sti
orb
jns
je
ds
jp
dec
dec
xor
or
inc
movb
in
push
jne
push
lods
push
and
xor
pavgw
rol
mov
xlat
push
lock
xchg
inc
add
and
inc
and
jne
mov
mov
or
sarl
pop
mov
popf
adc
or
sbb
adc
pop
inc
mov
mov
das
pop
insl
jb
ss
mov
sarl
dec
mov
jbe
sub
add
inc
daa
add
movsl
movsb
push
push
push
int3
inc
mov
push
call
andl
insl
sub
push
adc
mov
dec
mov
mov
ficomps
push
cmc
dec
mov
fmull
dec
push
push
adc
xchg
dec
add
ljmp
scas
xchg
jmp
cmp
jne
pushf
dec
push
insl
xorb
rcrb
xor
sbb
fcomps
sub
sub
xchg
mov
lret
loop
jns
fimull
scas
subb
or
fidivl
or
sbb
add
decb
push
add
mov
and
inc
jbe
ret
fwait
inc
inc
add
das
mov
mov
push
or
dec
xor
push
loope
cmp
cmp
and
addb
sbb
je
cmp
fimull
shll
adc
sbb
push
mov
push
mov
lock
dec
mov
cmp
fbstp
scas
jp,pn
push
lds
push
xchg
cmp
test
xchg
pop
inc
aaa
inc
iret
jle
mov
stc
ja
or
mov
ja
ss
cmp
jb
sub
add
mov
mov
jns
jp
orl
sahf
adc
and
jmp
push
mov
jecxz
pop
cmp
mov
push
jmp
nop
add
push
cmpsb
test
dec
mov
dec
and
adc
addl
lods
sub
ret
dec
lahf
mov
pop
cli
dec
xor
xor
mov
scas
mov
push
popf
mov
jg
flds
xor
pop
ret
int3
jmp
ficoml
mov
shrb
pop
ret
or
add
bound
nop
add
add
inc
ss
mov
rol
mov
mov
pop
mov
mov
inc
cmp
in
push
inc
cmp
mov
movb
call
adc
addr16
sub
movzbl
outsb
fmuls
inc
dec
mov
jne
push
ficoml
add
pop
mov
das
int3
incb
cld
xor
xchg
mov
and
adc
xor
out
sbb
pop
pop
dec
add
add
loopne
mov
imul
sbb
or
fnstcw
jge
je
adc
cmpb
xchg
push
or
pop
push
cmp
xor
decl
push
inc
cmp
jl
pop
add
and
mov
or
aam
adc
aaa
ret
push
xor
bound
es
jns
fadds
and
adc
push
push
push
pusha
mov
mov
push
out
or
jle
int3
xor
lock
xor
xor
pop
ret
push
das
sub
les
mov
push
jl
cltd
sbb
xchg
xchg
add
aas
dec
mov
cmp
aaa
jb
pop
rcrb
iret
fdivl
lea
sbb
pop
inc
xchg
andb
cmp
sbb
mov
cmp
cmp
adc
mov
push
lea
stos
sub
movntps
sysret
xor
mov
cs
lods
sub
in
inc
jb
jbe
mov
mov
xor
mov
leavew
hlt
push
add
or
push
mov
push
in
ljmp
loope
and
add
mov
enter
shl
ljmp
xchg
test
out
loope
shl
xor
mov
mov
mov
adc
movsb
mov
inc
lock
add
jne
inc
into
jl
jge
lcall
push
fidivrs
roll
ja
add
shrl
pop
adc
add
fisubrs
dec
adc
mov
jo
push
lds
jno
test
adcb
sub
push
inc
add
or
push
les
data16
sar
mov
inc
jmp
add
out
lret
sbb
enter
pop
dec
int
or
mov
inc
dec
jmp
xor
push
std
jl
mov
cmc
dec
sub
mov
pop
or
ret
icebp
or
cmc
test
inc
push
xor
arpl
shrl
fistpll
sub
jbe
fbstp
mov
icebp
cmp
fsubr
js
adcl
inc
or
and
mov
mov
sbb
push
fcmovbe
les
test
push
inc
add
outsl
push
xor
push
aas
or
sbb
pusha
lods
or
or
ja
nop
pop
adc
sbb
dec
es
mov
ficoms
xor
add
and
and
mov
out
adcb
dec
push
mov
bound
xchg
rcrl
out
or
or
pop
imul
out
rorb
cmpsb
add
xor
int
mov
test
push
dec
sub
add
mov
add
jle
mov
lock
cmp
jg
jl
add
jbe
insl
fsubrp
and
js
jbe
mov
jmp
das
out
sbb
mov
loopne
popa
rcrb
cmp
cmp
aad
cld
mov
and
aas
adc
out
and
pop
dec
jb
mov
aam
mov
pop
push
mov
and
adc
ljmp
mov
fisubs
in
mov
cmp
push
fldt
or
sarb
jne
cmpsb
jmp
cmpsb
cld
push
leave
jae
loope
loop
fcomip
inc
pop
loopne
sarl
ror
mov
adc
xchg
xor
inc
js
push
adc
mov
in
pop
adc
sbb
mov
popa
stos
inc
loop
and
adc
mov
xchg
pop
pop
ret
jg
pop
sbb
sbb
pop
jmp
rcrb
pop
xchg
icebp
lea
inc
int3
lea
cmp
fsubs
xorb
mov
add
mov
mov
test
push
shll
fsubrl
in
rclb
xchg
and
push
adc
or
orb
cmp
add
fs
out
or
or
mov
shrl
cmp
cmp
int
orl
or
mov
xor
mov
repz
inc
or
stos
loope
es
and
add
pop
inc
mov
adc
aam
adc
mov
fnsave
push
gs
adc
mov
add
ret
pop
cmp
and
mov
filds
adc
mov
mov
bt
jbe
out
sbb
sbb
mov
js
mov
es
adcl
repnz
int
xchg
mov
adc
call
int3
clc
je
or
test
mov
shrl
sbb
mov
dec
cs
pop
xchg
in
push
das
insl
cld
xor
or
ljmp
inc
sub
daa
push
push
add
pop
push
loope
jb
out
add
jnp
adc
mov
pop
push
fwait
push
push
nop
popa
insl
jne
adc
dec
pop
cmova
push
add
pusha
sub
pop
xchg
dec
mov
add
fcompl
xor
or
push
and
adc
fcomps
into
in
cmp
xor
das
scas
mov
adc
cmp
push
add
inc
imul
mov
sub
sbb
mul
inc
cmpl
xor
xor
out
cmp
jle
or
movl
cld
movzwl
out
mov
cmp
in
addl
loope
mov
sub
dec
or
push
add
fsub
test
aam
or
cltd
push
or
xchg
pop
jo
jo
gs
stos
xor
jbe
or
and
or
pop
imul
xor
ret
insb
arpl
lcall
mov
or
cld
test
insb
inc
or
or
adc
sahf
dec
jo
jne
sbb
add
add
sub
cltd
cmpsb
inc
aas
or
push
xor
testb
inc
sub
fcmovnb
push
ror
nop
or
add
cmpsb
xorl
mov
or
ret
add
insb
add
pop
ror
mov
add
clc
stos
lret
jne
and
movsb
test
mov
mov
sub
add
mov
in
jo
std
or
sarl
sbb
mov
sub
aaa
sbb
divb
adc
push
add
stos
mov
cmp
mov
jmp
sub
xor
mov
aam
adc
add
add
mov
pop
sub
add
xor
sub
inc
pop
cltd
lret
mov
or
adc
inc
add
sub
loopne
sbbl
push
pop
mov
push
add
cmp
ss
loopne
jae
add
and
icebp
jmp
jle
mov
call
ret
imul
adc
in
push
push
idivl
jne
jg
add
pusha
adc
adc
hlt
pop
or
inc
or
inc
add
cmp
insl
sub
add
out
sbb
movsb
and
stc
pop
push
ret
push
pop
test
or
cmp
pusha
je
gs
push
push
mov
aam
or
leave
or
inc
mov
add
mov
test
rcrb
pop
or
push
push
aad
into
xchg
mov
lods
jmp
pop
xor
push
cltd
ds
dec
adc
mov
fistl
scas
rcrl
std
add
mov
xor
mov
or
testb
rcrb
in
mov
push
es
add
repnz
icebp
jb
or
inc
fiaddl
pop
cmpb
cld
inc
outsb
pop
leave
jmp
lea
push
sbb
scas
dec
pop
sbb
dec
adc
and
enter
cmpb
into
jne
data16
cs
pop
or
add
or
jnp
idivl
dec
xor
lret
jmp
push
dec
dec
inc
aas
dec
pop
pop
xor
and
insb
adc
push
adc
inc
addr16
iret
xor
aas
loopne
mov
std
cwtl
nop
inc
push
add
push
insl
pop
fcomps
icebp
jbe
add
xchg
wbinvd
cmp
add
jp
ror
ja
jne
cmp
jne
push
xchg
ret
pop
and
adc
in
mov
lret
es
add
sbb
jmp
push
aaa
les
cld
dec
xor
les
lahf
sub
lock
xor
or
mov
sbb
popf
test
mov
ja
sbb
call
sub
daa
cwtl
test
or
sub
or
sub
mov
mov
mov
aam
add
cmp
and
jo
xchg
add
fcompl
adc
pop
fwait
mov
add
and
clc
dec
add
xlat
gs
push
subl
and
and
push
fisubs
jae
imul
or
push
jmp
dec
rorl
ret
and
jg
cmp
je
mov
add
neg
daa
lret
jne
add
and
ss
mov
jle
rolb
add
jle
fs
adc
adcl
test
fisubrs
bound
add
int
pushf
mov
add
nop
inc
lcall
and
in
push
pop
fimull
and
cmp
mov
jge
xor
jae
cmp
lods
add
stos
adc
cmp
mov
lahf
or
or
mov
and
js
push
loopne
test
xchg
test
add
icebp
add
pusha
insl
xchg
cmp
add
pusha
dec
add
and
adc
cmpsb
test
cmp
test
cmp
in
cmp
push
jge
mov
push
loopne
cmp
mov
loopne
ljmp
and
daa
aad
adc
les
add
xchg
mov
or
lret
test
lock
mov
ret
add
mov
rcr
and
and
pop
cmp
push
dec
and
scas
xor
adc
mov
push
arpl
sub
mov
xlat
shrl
shrb
cs
test
sub
push
pop
push
mov
in
or
cmp
ficoms
or
adc
insl
adc
push
popa
push
pop
cmp
inc
pusha
test
push
loope
or
dec
dec
pop
jne
and
orb
xlat
fiaddl
xchg
pusha
ja
in
scas
fwait
add
xor
push
les
aad
inc
xchg
push
out
popa
clc
cmc
push
cs
pop
mov
out
push
aaa
adc
inc
cmp
mov
xor
xor
adc
push
and
stos
pop
arpl
addb
fisubrs
filds
jb
mov
adc
jae
addb
rorl
in
fiadds
ljmp
scas
icebp
pop
aad
pop
repnz
sub
xor
sti
loopne
fldt
xor
repz
mov
out
inc
sbb
outsl
pop
fidivrl
jno
mov
dec
push
xchg
movsl
icebp
sahf
or
pop
pushf
icebp
xchg
add
pop
pop
ret
add
fimull
jae
popa
addl
sbb
sbb
enter
push
adc
cmpsb
sub
mov
stos
jg
mov
imul
out
jb
fiaddl
push
cmpsl
inc
dec
jmp
in
dec
xchg
or
push
mov
pusha
xchg
push
imul
je
dec
add
or
cmp
sbb
push
jbe
rolb
or
aad
enter
mov
repz
shr
pop
pop
gs
jl
movsb
jbe
mov
adc
cmp
push
inc
mov
inc
inc
xchg
cmp
test
fistps
in
pop
clc
push
xorl
cwtl
lahf
sbb
mov
call
push
popa
cmp
and
fidivl
or
mov
leave
faddp
mov
sub
pop
and
sahf
and
lret
inc
daa
cs
fstpl
mov
adc
ljmp
lret
scas
xchg
add
and
jne
dec
and
mov
sub
ret
loopne
int
jmp
push
orb
sti
xor
dec
pusha
add
insb
sbb
adc
push
cmpl
sbbl
je
jmp
or
push
dec
cmp
xchg
sub
out
sub
push
jns
add
xor
jno
pop
js
cmp
add
xchg
adc
scas
and
inc
mov
or
xor
icebp
jnp
negl
imul
inc
cmp
mov
jle
sub
sub
pusha
aaa
and
pushf
es
push
loop
jo
mov
dec
inc
pop
pop
and
pop
mov
gs
add
sub
inc
cwtl
adc
pusha
or
imul
or
sub
ret
and
add
inc
jl
fucom
imul
sub
dec
xchg
dec
mov
and
push
add
outsl
je
cltd
jnp
sbb
push
stos
mov
inc
add
cld
ss
jb
push
lahf
es
push
pop
in
lock
jl
mov
push
push
test
mov
stc
or
adc
data16
scas
cmpsl
and
aaa
add
cltd
adc
add
jne
mov
mov
arpl
es
pusha
pushf
cmp
push
call
test
xchg
popf
sub
cltd
sub
mov
shll
scas
popf
out
add
dec
pop
ja
cmp
adc
jmp
adc
pusha
jne
outsl
xor
popf
js
sbb
jbe
cmp
shll
sbb
xor
adc
sbb
push
movl
loopne
mov
insl
and
bound
mov
ret
add
inc
js,pt
xor
jecxz
and
dec
add
shrb
popf
into
mov
les
mov
dec
sbb
xor
and
or
or
scas
xor
scas
std
inc
and
or
fnstcw
mov
and
jg
mov
clc
jg
fs
test
movd
movaps
jo
push
enter
shlb
jle
adc
outsb
xor
cli
rcl
lret
mov
mov
or
jge
repz
popa
xor
xor
jg
push
push
mov
cs
jnp
mov
mov
jnp
add
mov
add
adc
push
add
adc
mov
mov
pop
add
fadd
roll
add
ficompl
addps
int
add
jnp
fcmovb
sbb
sbb
sub
fistpl
xor
sbb
in
fs
imul
data16
lret
stos
add
cmp
sbb
xor
xor
push
inc
mov
incl
loopne
xor
aam
adc
sbbb
pop
stc
push
push
ret
jge
mov
jge
sub
push
ret
jge
pop
ret
add
inc
aad
fldl
mov
pusha
or
sub
or
push
pop
add
sub
fmul
xchg
movsb
cmp
jb
aaa
std
sbb
je
sub
mov
adcl
rol
idivb
or
rorl
lret
adc
push
rep
mov
dec
jb
lock
ljmp
push
sub
dec
and
mov
pop
adc
sbb
loopne
sbb
jb
push
pop
fisttpl
mov
push
pop
and
cmovs
scas
jp
xor
mov
inc
adc
sub
stc
or
rep
jmp
ret
jne
mov
insb
out
sarl
test
lea
sub
sbb
sarl
pop
jbe
inc
mov
or
scas
adc
pop
fiaddl
dec
push
dec
add
add
and
mov
sahf
out
js
jo
push
cmp
out
mov
mov
call
iret
in
in
lock
hlt
and
clc
cld
adc
mov
lock
fldcw
sbb
lods
push
mov
push
lods
sbb
nop
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
cld
out
xor
mov
fimuls
fisubrs
sbb
xor
pop
nop
inc
push
push
push
nop
fiaddl
jl
mov
test
mov
inc
dec
in
inc
push
out
push
add
nop
dec
dec
addr16
add
stos
jecxz
add
push
mov
in
in
push
hlt
cld
add
out
out
or
daa
xor
sbb
out
sahf
sbb
sbb
adc
out
adc
or
int
nop
out
add
inc
inc
sub
out
or
pop
insb
xor
push
push
mov
pop
movlps
jp
dec
lods
mov
psubsw
sbb
mov
outsl
pushf
jns
loop
or
daa
mov
in
or
fucomip
add
and
or
mov
lcall
loopne
and
push
mov
test
je
xor
add
or
es
test
push
cmp
mov
inc
inc
pop
shlb
cs
jp
je
mov
fildl
cmp
jne
mov
pop
nop
data16
rcl
fnstenv
lds
mov
jne
nop
pop
add
and
lods
cmp
je
cwtl
les
adc
dec
js
loop
or
adc
mov
jge
sbb
call
pop
or
jne
popf
shrb
push
hlt
les
mov
xchg
lock
mov
pop
rorb
pop
js
shrb
or
jne
xchg
jmp
push
cmpsb
inc
or
cs
push
pop
add
push
xchg
test
xchg
aas
mov
pop
popa
call
dec
adc
decl
inc
cmp
jne
inc
cmp
inc
xor
jo
dec
adc
pusha
inc
inc
mov
push
push
adc
mov
adc
nop
in
push
pusha
jmp
and
push
dec
sbb
sub
xchg
pop
inc
inc
cmp
jb
adc
cmp
adc
or
lea
dec
repnz
push
add
push
push
comiss
aam
adc
add
mov
add
xchg
rorb
andl
pop
orl
lcall
hlt
cmp
jns
orl
cmp
dec
rclb
test
stos
add
enter
push
mov
sbb
ret
jnp
mov
loope
shlb
dec
leave
sbb
or
clc
imul
cmp
mov
mov
or
rol
inc
mov
data16
inc
cmp
aam
lret
jne
sbb
jl
pop
imul
or
xor
pop
add
add
add
fiadds
or
movl
adc
push
and
call
add
xchg
repnz
adc
std
pop
jo
adc
in
loop
frstor
push
add
orl
adc
stc
adc
fmuls
hlt
daa
mov
shl
adc
jns
pushf
sub
jne
and
dec
sub
fdivrl
inc
movb
pop
jmp
fdivp
mov
jmp
ja
and
pop
sub
mov
dec
sbb
inc
and
rclb
cli
cmp
ja
pop
into
and
movb
fwait
popa
loop
lea
neg
mov
mov
ss
hlt
dec
cli
or
add
jmp
or
mov
sbb
fadds
les
ret
push
and
jb
sub
outsl
ljmp
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
pop
out
push
dec
lret
ret
adc
mov
push
lea
add
and
lahf
mov
cmp
mov
pop
arpl
mov
test
fs
lcall
sub
jb
lea
mov
mov
or
cmp
jne
mov
push
cmp
aaa
dec
jae
jne
es
jne
call
and
repz
or
sbb
ret
adc
push
dec
jmp
sahf
lahf
out
adc
jmp
std
std
jmp
cld
js
out
cld
ret
pmaxub
dec
sub
inc
pop
push
jb
jge
cmp
add
sub
jmp
rclb
inc
pop
adc
jb
ja
adc
jns
dec
lahf
popf
sarl
or
testb
andb
test
adc
jo
js
je
adc
jne
ficomps
mov
aad
mov
std
or
or
push
aas
inc
push
adcb
add
and
add
adc
cmp
cmp
les
popl
enter
test
stos
add
aam
adc
add
and
call
adc
or
jg
add
mov
mov
dec
cs
add
sahf
jno
f2xm1
les
popa
sub
and
sub
jmp
jae
adc
pop
cmc
imulb
pop
jle
push
push
pop
div
add
les
jb
push
cmp
mov
xlat
nop
mov
pop
clc
mov
js
push
jne
or
lods
arpl
js
pop
sub
pop
adc
push
ss
push
mov
add
es
jl
sub
or
cmp
gs
or
addl
mov
xlat
loope
inc
mov
push
pusha
pop
add
aam
or
sti
clc
cmpsl
lock
cmc
loope
add
mov
sub
add
mov
call
leave
xor
jp
fnstenv
push
scas
or
jl
or
mov
mov
adc
jle
cmpl
pop
pop
repnz
je
inc
sahf
roll
xchg
add
dec
cmpsl
xor
pushl
mov
inc
jmp
cmp
jne
orl
jmp
adc
jne
sub
xlat
add
nop
add
add
cmp
outsl
adc
cmp
jno
mov
push
xor
dec
or
stc
out
push
push
cmp
and
sti
outsb
xchg
adc
insb
adc
pop
jne
dec
add
or
lds
outsl
or
sub
lret
or
test
adc
jg
fs
jmp
xchg
fiadds
out
pushl
lret
sub
cmp
ja,pn
xor
loopne
mov
cmp
jae
push
and
retw
movsb
cmp
sbb
rcrl
cmp
rorb
or
push
add
sbb
lods
movsb
mov
movsb
mov
cld
bound
adc
inc
adc
flds
mov
nop
test
jne
test
jne
push
subl
or
aas
aad
pop
mov
jbe
inc
mulb
jne
addb
mov
mov
and
pop
movb
into
mov
ja
or
das
in
sbb
push
test
sub
sbb
mov
pop
loope
ss
mov
scas
add
add
icebp
jmp
push
mov
lret
mov
push
mov
sub
daa
push
push
add
add
pop
adc
imul
jge
data16
ret
clc
stos
mov
shr
rolb
xchg
mov
pop
sub
shrb
jo
or
out
xor
add
push
jmp
and
or
pop
inc
push
es
mov
rcrb
andl
sbb
ret
push
adc
inc
pop
shlb
push
push
inc
decl
data16
inc
mov
clc
dec
and
sarl
daa
je
hlt
cmp
mov
add
xor
inc
roll
mov
addl
mov
dec
jmp
movsb
add
test
sbb
fidivrl
daa
xlat
call
aas
push
es
push
repnz
jmp
or
pop
adc
inc
test
cmp
pop
pop
jno
lock
jb
repz
dec
push
rol
push
clc
stos
and
sbb
lea
cmp
ret
adc
test
or
add
add
inc
dec
ret
pop
cmp
movsl
xor
add
pusha
xor
sbb
rcll
or
jecxz
dec
adc
mov
aas
xchg
pushf
sti
sbb
adc
fidivs
adc
repz
fists
dec
xchg
cmpb
push
add
loopne
je
and
jb
lea
push
adc
nop
fisubrl
push
dec
ss
add
adc
adc
lods
mov
sbb
xchg
and
jb
es
lock
mov
mov
or
mov
xlat
popa
mov
push
out
cmp
mov
repnz
insb
sbb
adc
pop
inc
mov
or
or
mov
lcall
fcoml
dec
push
rclb
inc
rolb
add
mov
or
das
cltd
xor
leave
jae
fwait
data16
sbb
call
lret
xchg
sbbl
and
icebp
mov
sbb
add
ret
daa
xchg
ss
loope
aam
jge
or
fldcw
adc
adc
or
std
movb
sub
iret
mov
cld
std
add
xchg
and
dec
cld
push
clc
push
push
push
orl
test
ror
adc
or
stc
xlat
rorl
pushf
clc
sti
pop
adc
cmpsb
pop
lahf
sbb
loopne
push
or
in
adcl
cmpsb
and
sub
jmp
fidivrs
repz
lahf
mov
sbb
shrb
in
insl
push
fnstcw
mov
pop
mov
aad
push
popf
aaa
push
pop
decl
pop
mov
or
rol
and
xor
or
les
jb
pop
add
pmaxub
inc
shll
es
or
in
xor
repnz
lock
pop
xor
aad
or
and
shlb
jo
int3
mov
lcall
inc
push
mov
outsb
push
cs
jae
cmp
pop
je
inc
mov
push
rcrb
adc
push
add
sbb
and
add
adc
pushf
mov
mov
mov
push
dec
outsl
inc
popf
sarb
pop
pop
fmuls
mov
dec
and
xchg
loopne
out
add
add
xor
xor
dec
ljmp
sahf
mov
and
xlat
test
sub
fdivr
add
push
cmpsb
ret
push
cwtl
xor
push
loopne
jnp
push
cld
mov
call
xchg
xor
inc
jno
sub
rcll
orl
or
mov
sub
mov
mov
cwtl
mov
push
pop
sbb
test
out
mov
jnp
and
jle
pop
fcompl
cmpsb
jg
sbb
push
cs
and
fildl
dec
or
fists
clc
enter
push
cmp
add
add
fistps
shlb
je
data16
dec
jl
inc
mov
sub
add
add
mov
jne
hlt
nop
sbb
jbe
rcl
rolb
xchg
mov
add
mov
pop
push
out
dec
add
movb
dec
add
mov
mov
dec
and
pop
push
add
js
loope
dec
pop
push
dec
pop
lea
in
add
jne
fisubs
push
push
daa
mov
or
cmp
je
push
jbe
test
test
out
call
rolb
in
dec
sub
pop
jg
in
jmp
ret
jp
and
xor
das
cmp
jns
in
xor
hlt
mov
pop
frstor
dec
and
or
push
or
lret
pop
and
fmuls
out
mov
mov
add
pop
push
inc
jns
roll
add
enter
adc
push
push
sbb
xor
cmpsl
fcomp
outsl
scas
cmp
jne
cmp
xchg
pop
mov
add
or
dec
adc
or
outsb
inc
loop
ret
gs
adc
push
mov
pop
jno
dec
cmpsb
push
and
cli
push
jmp
xchg
call
xchg
push
mov
int
dec
out
pop
mov
and
inc
nop
loope
push
mov
cmp
je
movzbl
add
sub
je
or
lea
repz
imul
jo
pop
add
and
enter
daa
sbb
repz
add
sbb
add
jns
or
add
jle
add
cmpb
add
mov
and
and
push
pop
jb
nop
out
push
or
or
add
push
dec
or
push
nop
addr16
or
pop
repnz
or
loop
add
cmpsb
or
or
or
and
repnz
cwtl
enter
push
push
ja
inc
enter
rsqrtps
push
fcomps
adc
pusha
adc
inc
adc
inc
or
ds
add
push
jns
cmp
ret
jb
mov
adc
inc
push
nop
aaa
adc
sbb
inc
push
push
push
push
pop
xor
and
pop
xor
sbb
pop
enter
sbb
sbb
repnz
sbb
add
push
inc
push
nop
sbb
sbb
sbb
add
je
pop
add
iret
sbb
stos
iret
add
mov
pusha
push
jae
cmpb
push
pop
mov
pop
enter
add
add
sub
cmp
das
xchg
mov
movl
fildl
ljmp
outsl
in
jg
repz
call
push
in
jno
repnz
sub
repz
cmp
ret
adc
aad
sbb
in
in
out
jns
nop
out
out
pusha
shlb
push
jbe
nop
aaa
jb
add
call
adc
dec
dec
cwtl
jmp
mov
ror
jmp
jmp
pusha
xorl
pop
enter
in
inc
in
sahf
jb
cmp
out
out
jge
adc
out
sbb
pop
push
nop
inc
lcall
jns
icebp
icebp
ucomiss
nop
addr16
std
repz
repnz
leave
std
hlt
push
fdivs
cmpsl
hlt
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
sbb
iret
div
pop
notl
test
idivl
std
clc
xchg
add
dec
clc
clc
cltd
adc
cmpb
pop
and
enter
sbb
fcoml
stos
cld
cld
cld
je
es
cld
push
cmovl
jnp
inc
ss
xor
sbb
iret
repz
adc
test
mov
sub
add
lea
and
rcl
ljmp
inc
es
inc
xor
jecxz
std
sti
inc
push
nop
ja
inc
in
stos
enter
inc
mov
xchg
xchg
sti
out
and
insb
nop
out
cltd
outsb
call
add
sub
xchg
and
cmp
xorl
cltd
xchg
cmp
mov
push
adc
popf
cli
sbb
rclb
out
cltd
repnz
push
lock
cli
inc
mov
inc
push
cli
sbb
jmp
cltd
and
add
stc
push
pop
xor
sbb
fstpl
div
inc
push
cwtl
xlat
negl
fwait
xor
pop
and
mov
clc
xchg
inc
or
cmp
pusha
xorl
cltd
mov
cld
inc
cld
adcl
pusha
sbb
adc
sbb
inc
pop
bound
cmp
subb
pusha
xchg
pop
insb
nop
loop
mul
das
xchg
inc
pop
pop
shl
scas
test
mov
pop
insb
nop
and
out
cltd
bound
pop
inc
mull
andb
pop
lcall
mov
pop
mov
add
pop
and
negb
insb
out
out
loop
push
jno
inc
negb
jns
cmp
testb
rclb
sbb
mov
loop
jno
cmc
repnz
pop
xchg
cmc
jae
test
dec
cmc
testb
xlat
movsl
div
jns
and
pop
add
clc
mov
jecxz
stc
popa
imul
hlt
cli
cli
pop
push
jno
jno
hlt
jns
cmp
pop
jne
push
hlt
lock
sub
das
data16
and
and
hlt
idivl
pop
xor
jns
push
sti
lahf
clc
in
or
push
ds
fcoms
imul
adc
loop
scas
repz
pop
and
repz
imul
xchg
xchg
mov
push
imul
bnd
arpl
mov
dec
pop
je
xchg
repnz
cs
add
dec
in
in
dec
push
jno
cmc
and
dec
pop
je
add
and
sbb
mov
seto
divb
icebp
das
mov
test
lret
and
fcompl
cmc
cmc
cmc
add
and
lock
mov
aam
ret
sbb
jns
lock
stc
jmp
jb
cmc
jne
push
lock
mov
xchg
scas
jne
push
lock
test
ss
fwait
cmpb
adc
add
sub
out
ret
sbb
scas
mov
add
enter
add
stos
adc
int
dec
add
push
adc
adc
push
push
lahf
loopne
add
jmp
and
in
sbb
pop
inc
fadds
ljmp
mov
ljmp
call
push
dec
int
repz
jp
ficoms
push
leave
iret
repz
pop
jmp
dec
cmp
fldcw
push
lahf
push
stos
pop
int3
pop
out
cmp
xor
sbb
mov
int
push
lea
pop
push
repnz
fs
loop
push
push
or
add
aam
mov
hlt
push
rclb
push
incb
sti
clc
loope
subb
mov
loopne
push
cmp
cs
cld
jge
push
push
xor
aad
imul
xchg
adc
pop
pop
lret
movsl
lahf
int3
rcrb
or
adc
pop
xor
jle
adc
sub
pop
and
add
js
fcom
aam
mov
fmuls
and
add
mov
sub
mov
inc
adc
sbb
test
push
add
sub
adc
les
dec
sub
jecxz
loopne
xchg
push
sub
jl
adc
dec
js
sahf
jge
outsb
test
cli
mov
out
shlb
in
inc
lcall
adc
test
add
test
lcall
sahf
cwtl
fdivrp
add
jmp
jne
insl
ret
mov
cmp
lcall
pop
and
sub
sub
pop
movsl
xor
inc
inc
inc
pop
push
cmp
enter
lret
jp
or
adc
pop
adc
mov
fisubs
xor
xor
iret
js
in
xor
mov
sub
sub
dec
outsl
cmpsb
or
and
pop
sub
inc
repnz
je
pop
sub
in
dec
roll
sub
inc
inc
push
jnp
sbb
cmp
enter
add
xor
sbb
jmp
push
cmp
stos
xor
orb
pop
xor
lret
pop
inc
ja
mov
or
xor
pop
adc
repz
jmp
mov
and
or
add
add
dec
jne
jo
push
dec
data16
inc
rcrl
xorb
shlb
adc
insb
mov
stc
aad
dec
xor
lcall
pushl
jne
mov
mov
jnp
lock
cmp
sbb
imul
dec
outsb
out
jns
mov
dec
jg
ret
fmull
mov
jo
fmuls
cwtl
ja
sub
adc
add
mov
clc
mov
fisttps
push
test
add
pop
pop
popa
cltd
nop
cmp
pop
jmp
js
dec
inc
lods
add
sti
test
push
sahf
fwait
add
jmp
stos
mov
adc
add
testb
push
adc
adc
sahf
lret
xchg
add
mov
mov
and
hlt
mov
inc
pop
dec
jne
leave
adc
ljmp
jo
pusha
and
add
add
cmp
mov
xchg
xor
das
movb
outsb
fdiv
mov
decl
mov
incl
inc
decl
jne,pn
loop
ret
iret
repnz
cld
jmp
enter
cmpl
mov
jbe
push
cltd
pop
idiv
push
push
pusha
or
rclb
sub
aaa
dec
mov
mov
xor
popa
loop
and
jmp
cmp
jae
dec
mov
xchg
pop
jae
pop
jbe
dec
mov
push
dec
imul
pop
adc
and
adc
dec
mov
xor
outsb
adc
mov
fnstcw
imul
add
push
mov
push
call
or
sbb
sbb
dec
dec
je
push
push
jne
popa
dec
push
adc
scas
jmp
insb
adc
xor
mov
xor
pop
decb
push
imul
mov
jb
jae
cmp
das
sbb
sbb
and
out
xchg
xchg
filds
fs
pop
fcomip
push
add
stc
mov
xor
add
or
lret
jl
mulb
test
mov
rolb
dec
push
fisubrl
push
sbb
mov
inc
sbb
cmc
mov
arpl
inc
lods
and
adcl
aaa
mov
or
aas
jge
clc
add
pop
cltd
pop
idiv
inc
xor
xchg
mov
out
cmp
pop
mov
adc
xchg
mov
xor
mov
xchg
scas
xor
outsl
call
adc
adc
test
jb
push
sbb
sub
rorl
xor
movsl
bound
sub
sbb
sbb
dec
lock
dec
mov
push
or
inc
or
add
jmp
cmp
jo
incl
mov
mov
ss
sub
loopne
push
or
les
inc
xor
movsb
cltd
in
mov
push
jno
clc
cmp
push
mov
jbe
pop
xchg
push
cmp
loope
push
jmp
jge
pop
je
sbb
cmp
jae
cmp
jle
sti
popa
inc
pusha
das
lcall
push
xchg
fnstenv
int
int3
ret
xchg
mov
mov
je
dec
jg
ficomps
add
dec
jne
mov
in
dec
mov
dec
adc
inc
bound
lret
cmp
push
ret
adc
insb
lahf
je
mov
cs
or
push
or
and
sbb
fcmovnb
xchg
or
inc
mov
mov
pop
inc
jns
cmp
pop
stc
push
aas
clc
lcall
or
sbb
push
push
pushf
test
mov
jp
and
test
inc
pop
cmpsl
lods
sbb
je
mov
sub
push
movsb
xchg
or
fcom
cmpl
cli
and
jge
add
cmpsl
lods
shlb
hlt
mov
clc
add
push
push
loopne
fdivp
out
cmp
inc
adc
or
out
sbb
out
add
mov
insb
and
pop
pushl
jbe
dec
ljmp
insb
ret
xchg
rorb
jmp
jecxz
les
clc
push
pop
push
fdivrs
mov
hlt
dec
js
loop
sub
mov
mov
jge
cmp
mov
mov
add
xchg
icebp
inc
jg
cmp
ret
daa
pop
cmpsb
push
sbb
enter
jne
rolb
fisubl
jg
push
je
inc
inc
cmp
je
xchg
mov
cli
sub
xchg
orb
adc
add
lods
popa
imul
mov
push
ss
in
mov
pushf
add
ss
enter
xchg
shlb
incl
fdivr
sbb
sbb
push
mov
push
inc
sbb
mov
inc
pop
int3
lret
push
aam
pop
pop
sbb
lods
mov
xor
jnp
shlb
sbb
mov
or
xchg
dec
cmp
or
push
inc
jg
xchg
insl
push
test
push
bound
push
lock
mov
js
mov
add
test
adc
cwtl
pop
pop
test
cmp
loopne
je
mov
and
mov
or
shll
pop
jo
or
shlb
push
pop
es
shlb
call
imulb
add
sbb
fistpl
lods
sbb
dec
movsb
jb
shll
push
pop
jns
in
add
lret
mov
mov
cmp
adc
xchg
adc
and
jo
into
push
shr
lea
arpl
jne
jmp
pop
stc
shlb
or
pop
cmp
sbb
das
dec
jmp
dec
cmp
hlt
cmp
mov
jae
inc
pop
mov
add
mov
dec
loope
mov
push
push
sub
js
mov
ret
mov
sbb
pop
call
cmp
xor
sahf
data16
sbb
xor
lock
faddl
sbb
movsb
ret
push
cmp
sbb
cmp
je
push
adc
push
mov
push
call
mov
pop
mov
or
add
mov
imul
adc
pusha
daa
gs
inc
or
inc
pop
das
jecxz
inc
ss
or
outsl
inc
insl
and
jnp
ja
or
subl
movsb
fs
push
cltd
pop
add
cwtl
jne
push
mov
xor
idivl
pop
xor
es
pusha
js
filds
aas
pop
dec
and
fidivl
lret
aad
cli
repnz
mov
add
adc
mov
dec
xor
pop
jmp
add
in
sahf
test
aam
jge
jne
jns
mov
fldz
sub
xor
adc
add
jo
scas
dec
cmp
jae
mov
inc
sub
movsl
imul
pop
fadd
sub
divb
cltd
dec
push
adc
sbb
sbb
punpckhdq
and
aas
outsb
mov
sbbb
fnsave
arpl
jmp
pop
arpl
xchg
push
jno
imul
jmp
cld
mov
imul
push
add
sub
insb
push
push
mov
les
mov
add
fs
ficoms
movsb
cld
fadds
test
fnstcw
addr16
ret
push
jecxz
test
xlat
ret
loopne
sbb
xor
stos
cmp
jbe
jbe
xchg
jl
xor
jbe
mov
aam
pop
cmp
and
pusha
inc
lock
fidivs
adc
sbb
add
or
or
movlps
dec
imul
sbb
mov
jecxz
and
ja
lds
sbb
mov
push
mov
jnp
sahf
enter
push
shlb
and
push
aam
inc
setns
cmp
and
enter
xor
mov
jmp
and
mov
test
adc
dec
lcall
std
data16
cwtl
cmp
jns
inc
and
insb
scas
and
sbb
pusha
js
xchg
adc
adc
inc
inc
js
cmp
jbe
stc
fs
add
jmp
xchg
pop
gs
sbb
cld
xchg
xorb
arpl
imul
cmp
mov
ja
mov
loope
sub
mov
and
sbb
mov
adc
adc
cmp
jge
cmp
hlt
inc
or
test
jle
data16
jge
and
sub
xor
ja
jmp
or
iret
sbb
push
js
mov
fistpl
bound
mov
sub
add
insb
pop
push
jle
repnz
inc
fistps
jecxz
dec
push
jg
out
or
adc
push
mov
lcall
xchg
cmp
lods
mov
push
test
and
cmp
sub
jbe
push
pop
xor
ror
jecxz
sub
shll
loopne
mov
lock
sbb
pusha
dec
sbb
call
enter
push
xchg
adc
jge
stos
sbb
mov
or
incl
test
test
sub
aam
lret
test
push
or
add
push
mov
adc
fucom
daa
add
xchg
dec
push
ret
inc
pop
and
les
jo
add
sbb
lods
mov
popf
insb
push
lea
out
ds
out
out
into
vmovntps
pusha
inc
or
loope
xchg
inc
xacquire
adc
jg
sub
pop
jg
push
xor
adc
shll
adc
or
cli
add
xor
push
dec
or
pop
sub
mulb
inc
jecxz
jmp
mov
mov
sti
sbbb
mov
dec
lea
dec
xchg
mov
xchg
pop
es
push
lods
ds
xlat
mov
ljmp
inc
jg
pop
fmuls
sbb
and
cmp
cmp
jle
jb
sti
jo
leave
pop
add
or
mov
inc
adc
push
add
cmp
push
and
push
call
dec
cli
dec
cmpsl
cld
sbb
pop
or
lret
cmp
push
sbb
pop
test
or
orb
and
pop
cld
mov
cmp
icebp
outsb
push
push
push
adc
xor
jle
mov
mov
out
xchg
out
xor
adc
out
iret
lret
cmp
push
or
lret
lret
sbb
sbb
add
popl
mov
mov
test
push
movl
cmp
pop
movsl
test
xor
xor
pop
cmp
jge
add
xor
fmul
adc
inc
push
pop
dec
test
fidivl
sub
loopne
call
add
testb
mov
js
lret
cld
sub
mov
or
int
nop
xor
adc
popa
sbb
sbb
sbb
add
add
test
shl
das
or
add
shl
or
shlb
cli
stos
add
cld
inc
pushf
pop
sub
mov
push
decl
testl
add
xor
xchg
imul
call
lods
pop
and
mov
addr16
es
jne
test
xor
push
movb
clc
push
lea
fisubs
sub
or
or
popf
dec
inc
insl
sbb
sbb
fdivrl
out
fisubrs
cld
ficoml
push
push
jge
test
add
mov
sub
push
cmp
sbb
pop
inc
inc
cld
and
sahf
pop
dec
and
incl
push
orb
mov
in
sbb
lods
jmp
and
je
and
gs
nop
mov
xchg
jmp
mov
mov
test
pop
mov
cmp
and
pushl
lret
add
jmp
cmp
push
add
and
and
jmp
adc
inc
pop
ret
sub
add
add
adc
ja
mov
add
or
insb
or
ja
xchg
pusha
sbb
outsb
add
mov
or
jno
and
or
push
xor
xchg
in
sbb
lock
icebp
and
cmp
int3
adc
fnsave
pop
insb
push
hlt
sbb
outsb
fucomip
mov
or
jmp
pusha
cmp
mov
ss
push
cmpsb
push
sub
jns
aam
inc
cmp
addr16
outsb
inc
std
jne
fsubr
fldt
dec
push
loope
stos
enter
mov
jmp
iret
rclb
inc
shlb
mov
jno
dec
mov
cmpl
mov
push
cld
sbb
xor
or
add
jmp
lret
bound
xor
loope
add
ljmp
dec
ret
sub
push
inc
rolb
mov
es
cmp
jbe
nop
in
add
test
sahf
sbb
inc
push
cmp
leave
or
bound
inc
jo
lea
add
xor
mov
aaa
jmp
cmp
into
sub
div
xchg
jmp
loopne
andb
cmp
ret
push
ljmp
add
inc
loopne
inc
add
jge
add
jb
mov
ja
mov
xor
inc
inc
inc
push
push
sti
dec
dec
cld
inc
adc
mov
inc
mov
mov
inc
dec
jne
mov
inc
mov
outsl
xchg
jl
call
add
divb
and
add
mov
loopne
mov
inc
dec
jne
push
inc
mov
mov
ficoms
and
dec
hlt
gs
jnp
xchg
sub
test
xor
adc
xlat
daa
mov
fsubl
je
shlb
shl
call
sub
out
inc
pop
mov
mov
xor
sbb
data16
scas
pusha
pop
loopne
aam
dec
inc
sub
sbb
call
sub
sub
jge
mov
arpl
jbe
inc
fsubrl
shrl
inc
push
add
int3
cmp
jo
mov
mov
insb
ljmp
shll
and
fs
xchg
fstpt
or
insb
xchg
es
ret
enter
xchg
or
pop
sub
jmp
xor
add
mov
mov
add
push
bound
ret
ss
push
aad
pop
lods
out
arpl
xchg
jne
pop
shll
ljmp
jb
jmp
xchg
enter
bound
cmp
add
popl
mov
mov
jno
pop
movl
adc
pop
ja
jnp
and
in
or
push
pop
mov
sbb
js
pop
cmpsl
or
lds
sub
xor
call
jl
in
sbb
les
inc
xchg
int3
mov
in
sub
and
out
icebp
sbb
mov
push
int3
push
cwtl
mov
jne
rcrb
out
aaa
out
jle
stc
mov
pusha
or
push
cmpl
rolb
add
pop
cmp
dec
pusha
mov
rolb
sub
in
dec
or
sbb
add
mov
jl
xchg
sub
xor
fstl
mov
loopne
lea
jnp
mov
mov
aaa
cmpl
push
pop
out
ja
ret
jo
and
and
pusha
mov
sub
sbb
js
cwtl
jo
les
js
and
push
mov
sub
lea
sbb
fsincos
in
stos
pop
in
or
pop
jbe
xor
or
inc
adc
es
xor
sbb
jo
loope
les
loopne
mov
orl
sbb
rcll
add
inc
ret
push
jbe
pop
mov
arpl
sbb
and
ljmp
sub
rcl
sbbb
daa
mov
jns
hlt
or
jnp
lds
or
jns,pn
push
adcb
add
mov
push
dec
mov
lret
int
xchg
call
push
sbb
cwtl
sub
subb
mov
mov
lea
push
push
push
mov
pop
or
aas
push
incb
lock
cmc
aam
and
andb
das
adc
inc
pop
cmp
inc
push
dec
xchg
lock
enter
sbb
sbb
push
cld
jmp
or
push
jo
and
sbb
mov
push
push
or
js
imul
cmpsb
insb
in
mov
in
cmp
push
bound
add
cmp
lock
cmp
mov
or
inc
sub
pusha
fmuls
ja
inc
ret
dec
push
mov
push
movsb
pushf
dec
sub
jns
jle
test
roll
mov
xor
not
movsb
jne
inc
add
je
frstor
lea
mov
mov
and
add
clc
in
pop
lcall
inc
push
cmp
inc
push
pmulhuw
pop
cmp
arpl
daa
jle
pop
cmp
xor
sbb
jmp
mov
jp
std
cmc
jns
sti
jbe
and
pop
cmp
gs
shll
test
imul
jae
sub
insl
jg
jge
inc
and
addl
dec
add
add
sbb
jle
mov
jb
cmpl
cmp
cmp
or
pushf
cmpsb
and
daa
test
jno,pt
xchg
push
out
inc
int3
dec
ja
mov
bound
jle
xchg
xor
mov
int
cmp
pop
pushf
inc
sub
pop
sbb
aaa
inc
mov
jo
jb
push
xchg
mov
rorl
xor
mov
pop
das
push
push
adc
cld
shll
jp
inc
sub
andl
loop
lea
sbb
mov
sub
sti
aas
sbb
or
fdivl
fcomps
int3
repnz
data16
popf
enter
clc
rep
shrb
aam
inc
cmp
xchg
add
rcl
jbe
ss
dec
cld
adc
cmp
ljmp
inc
inc
or
xchg
mov
cmp
fcomps
xor
test
test
pop
xchg
jno
ret
nop
movsb
js
jmp
jge
or
jnp
mov
adc
adc
pop
dec
lds
bts
jmp
repz
js
and
or
movb
dec
decl
loop
push
dec
and
in
clc
hlt
shl
iret
aas
push
js
or
pop
mov
in
mov
mov
jns
out
sarb
inc
rcrb
ret
jmp
push
sbb
mov
and
jns
nop
xor
mov
pop
nop
xchg
push
mov
nop
adc
mov
enter
xor
cmp
iret
repz
inc
dec
push
pop
fs
add
fimuls
inc
nop
or
and
mov
jmp
pop
cmpsb
mov
test
cmp
push
mov
call
xchg
push
ja
test
pop
xor
lea
xor
mov
add
push
jle
adc
dec
loope
ret
or
divb
rolb
pop
repz
cmp
jge
inc
mov
xlat
push
test
jae
stos
test
inc
and
popa
add
pop
and
aam
xchg
adc
ds
clc
shl
lds
mov
scas
orl
or
and
jp
lods
inc
jno
mov
push
cmp
dec
imul
adc
hlt
fdiv
mov
ds
hlt
call
cmp
daa
and
cmp
daa
and
adc
pop
orb
test
aas
cmc
hlt
lret
or
inc
or
je
mov
xchg
test
dec
adc
addl
jl
sbb
int
or
push
pusha
movsl
or
push
push
jge
jmp
mov
scas
je
mov
xchg
and
and
jne
or
push
cmpsb
addl
and
add
pop
lahf
add
push
js
sbb
push
xor
lock
xor
or
mov
shlb
xor
adc
cmp
mov
outsl
push
sahf
aas
pushf
xchg
sbb
mov
pop
lds
divl
mov
inc
jle
test
ja
enter
shrl
je
movl
in
clc
mov
push
mov
and
les
sbb
hlt
jecxz
cwtl
push
mov
in
inc
and
shl
pop
es
ret
pop
ror
and
inc
mov
ret
inc
and
xchg
adc
lahf
cmp
jno
mov
jg
or
inc
sbb
imul
outsb
inc
cmp
adc
adc
stos
lret
add
or
mov
inc
pop
xchg
mov
lea
inc
cmp
aad
sarb
dec
cmp
pop
push
xchg
test
pop
sbb
jecxz
jmp
or
xchg
inc
or
inc
cmp
xor
int3
movb
es
add
inc
shlb
mov
in
add
or
sub
mov
xor
das
test
push
pusha
push
mov
xchg
inc
or
test
adc
orl
movsb
lock
or
cwtl
subb
inc
adc
adc
adc
cs
jae
shll
mov
adc
jbe
xchg
sub
test
mov
in
or
sub
fcoml
inc
jbe
jle
clc
sbb
inc
pop
divl
or
add
push
mov
nop
clc
dec
xchg
int3
mov
cmp
sbb
fs
cmp
fimull
and
in
dec
xchg
sbb
xchg
sbb
incb
add
sub
pop
mov
cli
add
add
add
add
mov
je
cmp
cltd
sub
xchg
add
and
adcb
ljmp
inc
push
push
lock
mov
jp
or
jne
inc
nop
lcall
adc
or
jg
stos
inc
add
jmp
fdivr
push
xchg
inc
inc
cmpl
xor
test
cmpl
les
mov
dec
mov
rorb
rolb
xchg
je
mov
loope
loopne
xor
pop
sti
sarb
popf
in
mov
in
hlt
fadd
fsubs
push
jbe
mov
xor
ja
jecxz
push
add
negl
test
adc
xchg
in
leave
mov
leave
test
push
mov
mov
xlat
push
movsb
pushf
adc
inc
cmp
mov
dec
jle
movsl
movsl
aam
mov
lea
test
outsb
and
pop
ja
mov
movsbl
rcr
mov
cvtps2pd
test
pop
sbb
pop
rcll
cmpsl
loopne
add
mov
dec
loope
mov
mov
lock
mov
mov
cs
lret
aam
clc
fmul
lods
loop
popa
mov
sub
dec
or
je
or
sub
loop
je
sbb
scas
xchg
int3
pop
addr16
pop
or
add
loope
pop
addl
out
int
nop
cli
xchg
sub
notb
out
or
aam
fsubs
add
sub
mov
ror
int3
adc
inc
or
ja
movsl
mov
jns
and
mov
hlt
out
jo
dec
sbb
cmpsb
inc
stc
nop
je
or
inc
insb
je
xor
mov
test
data16
insb
xor
pop
icebp
cmpsb
pusha
sub
in
mov
mov
pop
and
pop
or
and
mov
dec
xor
cmp
and
movsl
addr16
int3
add
fs
or
sbb
fwait
imul
lcall
pop
xlat
cmc
test
mov
add
jno
lock
lret
pop
lea
fisubl
sbb
sbb
je
cmp
adc
or
push
sub
add
mov
ret
add
hlt
mov
test
fdivr
mov
inc
jmp
test
test
mov
je
push
jae
dec
testl
stos
out
jbe
mov
aaa
jne
das
mov
adcl
xchg
add
dec
and
and
or
lock
es
add
mov
test
and
cmp
les
mov
sahf
mov
inc
push
insl
outsb
loop
stos
cmp
loopne
sbb
bswap
negl
xchg
ljmp
dec
movsb
cmp
inc
out
loopne
cmp
pushf
jbe
std
je
mov
push
mov
add
mov
aas
push
and
add
add
jno
mov
mul
jge
lcall
sub
enter
mov
mov
cmpsb
and
xor
js
jecxz
mov
lea
out
pop
cmp
js
clc
push
sbb
ret
cli
test
gs
sub
loop
aad
sub
add
addr16
mov
pop
sbb
cmp
je
test
or
sbb
push
stos
pusha
outsb
ljmp
jae
rorl
fistps
xor
adcb
mov
pusha
pop
add
orb
adc
dec
push
jb
xchg
jb
lds
andl
incl
fsubrs
aam
add
ret
jge
jp
jne
mov
jne
mov
jmp
cmp
je
cli
pop
jle
insl
cmpl
incl
data16
push
mov
xor
int
pop
xor
sbb
mov
mov
call
cld
adc
sti
aam
scas
jnp
fidivrl
sub
fwait
adcb
or
ret
and
in
out
stc
lcall
mov
cwtl
inc
call
in
sub
nop
cmpb
jne
jne
stos
mov
push
push
push
movsb
ret
hlt
outsb
mov
nop
cmp
out
addr16
or
mov
out
fdivrs
mov
adc
push
pop
data16
or
hlt
sub
in
push
lret
roll
adc
inc
gs
popf
stos
fbstp
inc
push
data16
fidivrl
or
xchg
cltd
jmp
aaa
int3
je
cltd
xchg
lock
or
sbb
addb
push
shlb
inc
xor
pop
fsub
nop
pop
fimull
mov
or
sbb
dec
jg
cmp
lret
pop
mov
or
jne
mov
testl
sbb
push
push
inc
movsb
jle
and
xchg
aas
sar
xor
lods
sub
xchg
clc
sahf
add
mov
dec
jmp
add
xchg
sub
inc
cmp
bts
je
inc
or
into
or
shr
cmp
and
xor
ss
push
cmc
push
mov
loope
or
insb
sbb
clc
xchg
inc
int3
jle
cmp
sub
push
int
lret
test
sub
push
jmp
sub
icebp
int
push
sub
push
test
sahf
and
mov
cltd
push
hlt
push
cld
sub
sub
pop
rcrb
push
jp
mov
int
dec
fdivrl
lea
int
add
or
add
mov
push
mov
xor
push
mov
or
nop
mov
jg
aaa
cmp
mov
push
rcll
nop
popa
jle
sbb
mov
push
mov
xchg
lock
cmpsb
add
xchg
xor
push
and
imul
je
mov
cmp
adc
adc
mov
or
in
ret
sub
movsb
cmp
mov
movb
push
js
sub
mov
ret
add
dec
repz
fdivrs
add
shrl
pop
dec
imul
or
loopne
js
pop
adc
adc
adc
jo
and
loopne
jp
idivb
insb
or
add
push
lea
dec
or
or
inc
or
cli
fmulp
rcll
movsl
test
cmp
and
lcall
mov
push
mov
mov
pop
fsubs
push
add
push
push
loopne
adc
mov
inc
jl
push
pop
lcall
jne
push
aas
ret
pop
dec
popa
out
loope
add
pop
int
jle
xchg
setle
rcl
jo
mov
adc
aas
scas
mov
mov
push
add
jmp
push
mov
test
xchg
sbb
rorb
jmp
push
or
call
xor
nopl
inc
sbb
pop
bound
ljmp
or
dec
jo
sub
lea
jl
xchg
add
adc
xor
push
pop
jae
mul
or
or
adc
enter
inc
adc
clc
sub
add
jb
or
nop
rclb
dec
pusha
imul
sar
sub
mov
shr
mov
imul
mov
movsb
icebp
and
or
jno
dec
inc
outsb
dec
xor
mov
enter
add
inc
push
mov
push
cld
clc
adc
icebp
decl
je
cli
add
cmp
jbe
push
pop
xor
inc
adc
dec
or
es
fildl
mov
shr
lea
not
and
decb
jne
pop
cmc
xchg
mulb
sbb
lea
xor
pop
cmp
pop
add
add
xchg
cld
add
clc
dec
imul
and
push
or
movsb
cmpl
mov
push
shlb
js
add
and
sti
add
inc
dec
pop
cmp
xchg
mov
sbb
jl
mov
cmp
and
rcrb
andb
data16
mov
popa
lock
not
and
xor
pop
sub
sub
cmp
jle
jmp
lea
das
mov
xor
xor
pop
dec
add
mov
push
or
add
dec
ss
adc
or
mov
int3
jnp
popf
int3
inc
or
dec
or
out
aas
insb
or
dec
pusha
mov
mov
inc
mov
adc
pop
sbb
xor
mov
lods
push
or
pop
ret
testl
dec
adc
push
mov
imul
mov
shlb
cld
mov
pop
adc
and
stos
and
adc
daa
push
cmp
loope
add
outsl
das
sti
subl
or
andl
xor
popa
frstor
dec
inc
adc
ja
xchg
add
pusha
add
and
jmp
gs
push
mov
test
sbb
pop
xor
add
mov
mov
dec
adc
adc
sbb
jl
push
cmp
push
jbe
insl
or
mov
out
or
inc
cltd
test
mov
xor
sub
imul
push
ret
cwtl
outsl
push
mov
cmp
mov
imul
test
les
mov
inc
adc
stos
xchg
push
js
and
test
adc
adc
fucomi
fwait
orl
insl
and
add
and
xchg
imul
or
cmp
je
jl
fnstsw
add
inc
ljmp
test
cmp
clc
pop
test
loopne
xchg
add
or
hlt
or
push
mov
pop
or
add
popa
cltd
out
lea
mov
cmp
cmpsl
dec
mov
jmp
xor
in
xchg
mov
fistpll
ljmp
push
add
sub
aad
ja
sbb
je
inc
and
ret
pushf
adc
call
fwait
subb
sahf
pop
mov
push
pop
mov
mov
lock
clc
aad
jg
dec
inc
jne
or
lds
not
and
les
jl
adc
nop
out
fcompl
sub
pop
shr
sub
or
add
cmp
clc
mov
and
pushf
fwait
cmp
ja
mov
test
inc
mov
clc
mov
cmp
test
xor
add
stc
subb
jmp
pop
dec
int
push
mov
iret
dec
in
cmp
add
sti
pop
add
cmp
nop
rcl
fdivrl
or
push
jns
fsts
add
mov
sub
adc
pushf
sar
fiaddl
mov
cs
fstpl
test
data16
aad
fdivrl
jg
or
mov
shll
pop
adc
lcall
iret
subl
jmp
pop
pop
shl
aaa
js
test
add
sub
adc
inc
add
jae
insb
xor
je
sahf
and
and
cli
shrl
clc
jl
int
or
fiadds
mov
dec
insb
pusha
push
cld
loop
xor
push
sar
dec
jp
sbb
loope
movsb
pop
push
push
fidivl
xor
push
jl
cmp
dec
mov
out
je
fisttps
mov
dec
push
adc
sbb
adc
inc
jecxz
ficoms
add
or
lea
mov
test
mov
ret
adc
push
cmp
lods
sub
into
mov
test
cmp
lods
dec
les
sbbb
ja
mov
insb
sub
lods
pop
and
inc
add
mov
push
push
push
jge
add
out
adc
cwtl
inc
les
in
or
stos
pop
js
sub
fldcw
push
add
and
decb
xlat
pusha
cwtl
or
adc
rcr
adc
call
sbb
cli
jae
fnstenv
jmp
jnp
add
shrl
aaa
arpl
cmp
cmp
fsubs
sbb
mov
lahf
mov
sub
pop
lcall
fcmovnb
das
repnz
je
mov
in
pusha
ret
movzwl
and
mov
dec
int3
loopne
fcompl
iret
jne
fwait
jno
inc
aam
xor
cmp
xlat
lahf
sub
push
xchg
mov
mov
dec
mov
and
jne
cltd
aaa
loopne
mov
push
pop
outsb
leave
inc
test
sbb
push
pushf
mov
sub
icebp
sbb
fdivrl
aam
xor
add
loopne
cmc
call
iret
push
xor
cmp
pop
or
cld
jge
pop
mov
decb
jne
adc
pop
repnz
jmp
jp
mov
pop
pusha
dec
bound
dec
push
xlat
int
and
test
xor
jp
dec
jp
movsl
call
mov
mov
or
pop
xor
nop
fsubrs
sub
jge
hlt
roll
sti
or
push
or
out
add
or
inc
or
inc
or
push
mov
cs
mov
mov
mov
or
adc
cmc
lods
jbe
add
scas
and
lods
jo
pop
mov
sbb
dec
jne
cmp
loop
push
ds
jg
fsubl
inc
add
outsl
or
mov
jno
sbb
cmp
sbbb
in
jb
or
xorl
lock
xor
adc
pop
adc
lods
cmc
mov
or
fs
pop
test
icebp
cmp
push
rol
lock
push
push
or
or
dec
loope
sub
mov
gs
arpl
jg
and
imulb
or
add
mov
es
add
sub
scas
orl
xchg
js,pt
int
inc
cmp
cmp
sub
or
jbe
add
push
mov
xchg
shlb
adc
push
fcomi
repnz
int
fcoms
adc
push
loope
mov
mov
push
or
xchg
inc
add
mov
jmp
push
dec
push
pusha
add
loope
add
add
fdivs
std
lahf
pushl
adcl
push
daa
xlat
lock
out
pop
jne
push
nop
rcll
pop
mov
subb
std
pop
sbb
loope
movsl
movsl
adc
mov
mov
mov
lcall
inc
js
push
or
pop
psubd
add
cmpsl
pop
movl
mov
aad
lock
and
aam
mov
insb
int3
push
jecxz
push
fsubl
inc
je
das
movsb
mov
int
and
dec
pop
mov
es
enter
xor
dec
adc
xor
xchg
mov
addb
mov
orl
adc
add
gs
js
popf
call
xor
test
inc
sbbl
jmp
mov
mov
dec
jbe
dec
adc
jge
jmp
shld
dec
xorb
lahf
or
in
rdpmc
jo
lret
pop
add
cmp
mov
cmpsl
dec
inc
rorl
sbbb
xchg
imul
test
mov
mov
pop
fdivs
insb
xor
aas
add
pop
ja
faddl
lods
ljmp
dec
xor
sbb
sbb
inc
xchg
push
ret
pop
add
lods
sbb
sbb
xchg
arpl
stc
sub
shll
rorb
ss
cmp
daa
pop
jb
scas
and
xor
repz
loopne
icebp
push
out
push
jb
inc
pushf
fistpll
insb
jne
or
or
jo
jbe
pop
and
fdivrl
add
cmp
push
xchg
xchg
xor
scas
push
repnz
cmp
fs
inc
dec
push
jmp
out
sbb
int3
les
inc
or
pop
std
movsb
xor
ret
cmovo
shll
lea
in
cmpsl
mov
pop
cltd
dec
push
add
cmovo
lock
cli
pusha
sub
rcrb
dec
push
push
mov
pop
push
mov
in
xor
push
jb
lods
dec
lods
dec
jb
test
fmulp
nop
lret
call
add
rorl
pushf
mov
pusha
push
jb
or
mov
ret
nop
inc
in
fimuls
cld
inc
mov
fldcw
sbb
shl
test
mov
movsb
roll
cmp
jb
in
test
push
or
out
hlt
xchg
lahf
push
lods
inc
sub
in
lods
add
inc
sahf
rclb
and
and
adc
push
jb
lods
mov
ret
nop
sub
mov
xor
in
leave
add
in
pop
enter
test
adc
and
mov
test
dec
pop
aas
mov
cld
enter
cmp
mov
sysret
movsb
bound
movsb
cmc
or
fmuls
mov
cmpsl
jne
fidivs
pop
repz
aaa
mov
ss
fadds
movsb
repz
sbb
dec
jne
cmp
push
insb
ljmp
pop
imul
pop
adc
mov
lcall
fiadds
pusha
xchg
ret
xchg
add
and
or
fwait
shll
out
adc
mov
or
std
or
fldenv
cmp
or
mov
jne
push
mov
inc
or
pop
and
shll
mov
aam
push
push
push
dec
add
cmp
test
xorb
popa
inc
mov
jmp
jno
mov
add
xlat
push
testb
sti
mov
sub
lods
or
out
fsubs
push
clc
xor
fistl
jno
push
mov
in
jne
imul
add
mov
inc
cld
push
cs
fdivs
nop
add
add
int3
rclb
adc
nop
rolb
and
int3
out
push
or
mull
or
push
xlat
sub
shll
enter
pop
hlt
jno
mov
xor
or
and
mov
push
clc
add
cli
sti
cld
dec
inc
shll
and
ja
mov
or
in
cli
xchg
icebp
adc
cmpsb
xor
jg
sarb
add
push
jecxz
push
pop
sub
sbb
dec
mov
fucomi
add
jno
je
pop
inc
and
inc
fmuls
pusha
sub
jg
rcr
and
push
fldl
or
fucom
xor
mov
or
and
enter
add
into
dec
lcall
fisubrs
jmp
jo
push
in
fwait
std
dec
mov
mov
pop
sub
xchg
pop
xlat
das
sub
xchg
dec
adc
fidivl
xor
sbb
mov
fldenv
lcall
and
and
lahf
mov
add
cmp
fmuls
outsl
xor
rcrl
ss
xchg
adc
fwait
add
das
sbb
jmp
lret
test
adc
lock
test
xlat
sub
in
in
in
inc
adc
faddl
push
fdiv
aas
movsb
popa
push
fsubrl
fstl
push
shl
push
mov
aaa
jne
xchg
pusha
xchg
das
and
inc
lock
push
jp
cmp
cmp
repz
xor
iret
repz
inc
leave
std
loopne
add
xor
push
enter
push
jmp
sbb
or
pop
testb
lock
add
cmpl
sbb
xchg
out
pop
les
jle
fisubs
pop
push
pop
clc
adc
clc
add
test
jb
push
xchg
jmp
inc
faddl
pusha
jl
adc
mov
popa
push
jmp
test
fadd
mov
call
clc
outsb
push
ret
and
push
push
adcl
mov
outsb
cmp
inc
jns
sbb
lcall
adc
lods
add
or
add
les
stos
sbb
push
mov
adc
stos
mov
cltd
pop
out
sub
out
test
sub
mov
mov
ret
lods
mov
outsl
test
adc
hlt
mov
dec
repnz
mov
js
adc
or
shrl
test
or
pop
cs
lret
int3
call
mov
shlb
mov
mov
xchg
sbb
std
sarl
inc
into
jne
xchg
mov
push
sbb
push
and
add
incb
jno
or
mov
and
jne
gs
test
loopne
sar
or
in
lea
testb
add
xchg
lock
fstps
mov
mov
or
push
sti
cld
pop
mov
rolb
mov
xchg
test
inc
hlt
push
shl
lds
xor
sbb
adc
arpl
in
sub
imul
dec
shll
xchg
lret
movsl
cmp
or
int3
shl
cld
enter
data16
mov
dec
dec
push
pop
or
notb
add
xorl
add
pop
iret
mov
cmp
ds
mov
pushf
and
pop
mov
xor
lods
es
mov
call
mov
push
or
inc
cmp
int
xchg
cmp
lahf
test
mov
insb
jne
inc
sub
scas
pop
rorl
sub
outsl
pop
outsb
cmp
jne
jnp
ret
pop
push
xor
pop
inc
jne
cmp
inc
fcomps
in
movsl
xchg
inc
mov
cmp
lcall
lds
pushf
cmpsb
rclb
pop
lods
cmp
repnz
cmc
mov
sub
ret
fs
fdivs
mov
je
testb
lock
mov
imul
fs
push
push
cmp
clc
call
orb
cltd
addb
pop
adc
dec
daa
cmp
xchg
cmpsb
andb
call
mov
push
inc
cmp
lret
insl
lcall
dec
mov
mov
inc
icebp
mov
cwtl
add
fnstcw
jne
xor
pushf
cmpsb
or
mov
jo
mov
testl
dec
shr
mov
mov
mov
push
fldenv
jns
xlat
loopne
inc
daa
mov
sahf
add
push
je
inc
cld
shlb
in
push
hlt
std
sub
pop
jnp
pop
enter
dec
shr
mov
sub
je
add
jno
or
pop
xlat
push
add
lods
cmp
sbbb
fidivs
addr16
add
adc
insb
lds
jno
adc
cmp
std
mov
dec
sahf
pushf
mov
inc
subb
insl
adc
sbb
lock
aaa
addr16
cmp
cltd
das
lock
fdivr
adc
adc
ret
loopne
out
pop
fld
jo
and
rcr
insb
jge
test
rol
inc
pusha
add
aas
mov
inc
mov
adc
mov
repnz
lods
jb
std
call
jns
xor
mov
adc
push
ret
dec
mov
mov
fdivrs
cmpsb
fldcw
mulb
jbe
std
inc
lret
inc
stos
mov
pop
nop
std
cli
mov
sub
cs
int3
ja
lock
out
mov
mov
imul
pop
adcl
mov
les
pop
push
pop
daa
sbb
push
pop
sbb
pop
push
mov
enter
mov
mov
jb
adc
int
jae
mov
push
stos
dec
push
daa
jmp
sahf
aad
test
pop
mov
dec
sub
test
sbb
adc
push
dec
in
pop
inc
inc
adc
sub
inc
nop
in
call
mov
sbb
call
cmp
std
lock
xor
jmp
dec
test
test
repnz
loopne
mov
fs
inc
repz
inc
in
mov
popa
cmp
push
fdivrp
or
ds
cs
add
sub
test
sub
pop
repnz
dec
jmp
dec
int
xchg
out
nop
add
rcrb
std
pop
lock
xor
cli
data16
push
push
sub
sub
or
data16
adc
and
jo
negl
cmp
lods
roll
iret
push
addl
mov
dec
test
pop
fxch
bswap
aam
jns
int3
and
dec
subl
fbstp
bound
mov
movsb
adc
orb
push
cld
pop
sarb
inc
push
inc
lret
mov
sub
sub
pop
cmpsl
cmovge
or
mov
jne
fdivr
das
push
adc
dec
pop
jno
push
xchg
fiaddl
std
std
push
xor
jo
sahf
sub
ret
adc
enter
das
push
xor
jo
add
and
add
cmp
out
push
mov
xor
aas
test
ss
mov
nop
dec
push
mov
jb
mov
add
and
cmp
sbb
cmp
push
clc
jg
cmp
and
add
adc
inc
stc
in
jo
popa
icebp
or
add
sub
xor
pop
pop
pop
push
frstor
ret
or
mov
in
and
int3
test
lods
inc
pop
gs
lock
pop
insb
aad
cmpsb
pop
add
inc
test
jb
pop
enter
push
test
test
scas
movsl
call
xchg
or
mov
addr16
push
pop
int3
test
int3
test
xlat
adc
and
leave
mov
int3
inc
inc
inc
sahf
test
dec
xchg
jo
mov
lods
sub
jns
xor
push
xor
pop
mov
mov
int3
test
leave
leave
leave
and
xchg
push
lea
popa
nop
mov
enter
sub
mov
in
lret
es
test
and
cmp
and
cmp
adc
xor
in
xor
push
xchg
xchg
xchg
dec
cmc
loope
xor
fwait
mov
pop
sbb
int3
lea
in
stc
inc
clc
mov
leave
jmp
pop
lods
sub
lods
xchg
stos
xchg
test
sbb
pop
mov
and
enter
inc
jb
dec
addr16
mov
aam
mov
into
dec
lock
dec
mov
movsb
push
movsb
jb
jb
mov
and
stc
or
mov
lret
and
and
bound
xchg
mov
nop
push
enter
incl
mov
add
mov
nop
or
add
in
lods
or
dec
ret
rolb
push
push
mov
je
jmp
cli
out
sbb
test
popf
mov
cmp
add
roll
cmp
imul
aam
ss
imul
jmp
ret
cmp
stc
nop
sbb
push
sub
or
xor
pop
add
pusha
jo
stos
dec
sub
inc
adcb
pop
lods
adc
cltd
mov
cli
or
pushl
jg
cmp
mov
sub
jmp
or
out
sub
adc
push
daa
and
cmp
rep
ss
neg
pop
mov
hlt
mov
shrl
push
add
or
add
test
mov
xchg
or
or
cmp
sbb
jns
adc
popf
add
sahf
mov
adc
push
and
icebp
dec
push
lahf
iret
notl
outsl
inc
or
jbe
jle
test
outsl
ja
rcrl
mov
or
sbb
lock
adcl
inc
cmp
fcoms
or
adc
dec
int
push
push
into
and
xorb
call
stos
pusha
or
into
and
sub
ja
lock
ss
sub
mov
add
sub
jl
jae
adc
in
lock
rep
adc
insl
cmp
jne
outsb
sbb
cs
rcll
in
in
pusha
out
add
add
jp
or
push
push
ret
cmpsl
push
xchg
lds
sbb
add
push
pushf
test
test
cmp
hlt
pop
xor
loopne
insl
imul
sub
sub
jne,pn
sub
or
mov
test
shlb
mov
jne
pusha
lods
pusha
mov
sbb
xchg
ja
in
dec
sar
add
cld
cmp
jnp
lds
mov
sbb
cmp
add
and
push
or
out
inc
pop
mov
sub
test
nop
loopne
jb
stos
adc
add
and
iret
into
mov
or
mov
mov
cld
push
mov
clc
or
sub
outsl
mov
test
je
dec
jmp
divl
adc
loop
ret
cmp
lcall
sbb
or
dec
and
xchg
mov
jne
lea
popa
add
sub
and
mov
sbb
cmp
bound
test
sbb
mov
push
orb
aad
gs
inc
push
jb
hlt
insl
cltd
pusha
sub
or
mov
loop
shlb
adc
mov
inc
push
in
inc
insl
insl
or
add
lock
jmp
or
xchg
or
lea
xor
js
imul
lahf
or
jp
fbld
jle
adc
cmp
int
in
add
je
hlt
daa
clc
xor
xor
inc
push
inc
sbb
jae
testl
es
ss
jecxz
mov
in
cmp
jno
scas
xchg
aam
les
jle
cs
bound
jmp
scas
mov
inc
pop
push
hlt
ds
clc
or
je
nop
loopne
mov
mov
mull
int
pushf
mov
mov
fcos
out
int3
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
fnsave
out
dec
adc
inc
mul
pop
jb
cmp
or
cmp
idiv
push
jbe
dec
sub
sbb
or
or
fcmovu
fcmovu
lret
inc
add
iret
push
xchg
mov
pop
subb
es
jb
pop
pop
jmp
pop
or
int
clc
mov
movb
inc
cmp
repnz
movb
fwait
mov
mov
adc
mov
lahf
rcrl
sub
mov
and
pop
cli
cmp
sub
add
sbb
or
clc
out
or
mov
sub
ret
xor
addl
data16
nop
pusha
orl
std
jne
mov
and
call
cmpb
lock
adc
jp
wbinvd
frstor
dec
push
stos
lcall
inc
dec
ret
pop
dec
sbb
sbb
mov
inc
cmp
scas
mov
jle
jne
lea
sbb
sub
int
pop
mov
in
dec
lods
or
cmpsb
adc
push
sub
test
ret
fistps
pop
xchg
add
lea
jns
push
incb
dec
jbe
adc
pusha
out
icebp
and
mov
dec
cmp
mov
enter
jb
or
fs
into
leave
add
dec
mov
push
mov
cld
sbb
xchg
arpl
filds
add
pop
adc
mov
push
sub
adc
shlb
inc
xor
aaa
adcb
scas
add
sbb
jo
xor
lcall
mov
test
pop
movl
push
jns
test
pop
outsl
sahf
sbb
stos
add
push
adc
subb
xor
add
push
imul
push
jge
in
or
lahf
sar
mov
sub
fisttpll
add
movsb
shlb
subl
sbbb
xchg
cmp
ret
cmpsb
cmc
xor
jge
inc
cmp
push
mov
jo
repz
cltd
mov
mov
je
jmp
pop
loopne
and
push
repnz
lea
and
nop
pop
mov
les
addl
popa
fmuls
gs
sbb
ds
nop
xchg
or
mov
je,pt
mov
fdivrp
iret
test
pop
mov
push
sub
or
dec
xor
outsl
rol
adc
mov
mov
adc
divl
lret
ret
icebp
inc
in
daa
sbb
iret
xor
jo
and
ljmp
push
adc
add
add
int3
pop
out
ret
inc
adc
push
out
cmp
je
adc
test
ss
and
sti
jns
adc
xchg
pop
addr16
sbb
inc
outsb
or
cld
ret
sbb
mov
and
repnz
and
or
imul
std
sbb
je
mov
fdivs
or
push
jno
sbb
clc
or
setae
nop
pushf
icebp
lods
hlt
xchg
push
ds
icebp
repnz
pop
pop
mov
mov
or
or
out
fwait
add
inc
fists
sub
jle
ljmp
cmpl
and
xor
daa
dec
sbb
sbb
dec
mov
pop
jne
orb
add
data16
aam
mov
push
dec
sbb
icebp
dec
ljmp
ja
out
push
mov
sbb
jb
inc
mov
cmp
or
pushf
lahf
push
or
push
rolb
mov
call
lock
dec
and
in
je
ja
jno
cs
sub
lods
inc
sbb
repz
and
lock
pop
sbb
pop
add
cmp
pusha
and
dec
nop
inc
mov
addb
ret
adc
push
pop
mov
fadds
push
lret
xchg
es
adc
imul
or
fldl
add
and
ret
pop
add
gs
inc
dec
add
inc
sbb
scas
xchg
xor
push
xchg
cmp
subb
test
sarb
add
rcrb
js
imul
or
pushf
rorl
shlb
sub
pop
and
leave
and
scas
jl
ret
xor
and
loop
sub
cmp
mov
push
addl
sti
pop
cmp
cmp
xchg
test
cmp
lret
push
sbbb
popl
push
cmp
shll
inc
fs
inc
lock
leave
rorb
lret
dec
mov
pop
jmp
mov
xor
adc
cltd
gs
push
cmp
lock
or
call
ret
inc
add
cmp
add
pop
cli
sbb
xlat
into
popf
cmpsb
inc
or
fisubrs
and
cli
xchg
sub
dec
lock
addr16
shll
cmovs
jne
js
sbb
mov
or
pusha
out
mov
pusha
sub
addb
pop
xchg
clc
adc
je
mov
sar
mov
cmp
scas
mov
jb
mov
dec
or
les
push
xchg
fidivrl
aaa
popa
mov
idivl
push
in
mov
in
or
test
or
mov
add
inc
pusha
jne,pn
sbb
testl
mov
pop
sub
adc
cmp
jge
mov
ret
or
adc
inc
sub
mov
add
fisubrs
pop
sbb
push
push
ret
push
dec
jmp
push
insb
repnz
ret
cmp
inc
dec
add
aaa
xor
mov
jo
sub
adc
fs
jno
xchg
lret
and
adc
lcall
and
sbb
jno
xchg
insb
in
das
inc
inc
insb
inc
xchg
ficoms
push
push
pop
movsb
push
xchg
flds
int3
or
add
sub
orl
and
mov
stos
sbb
bound
and
jno
mov
cmp
cmp
aad
cmpsb
sub
push
mov
loopne
pusha
pusha
cmp
dec
jb
sub
add
aaa
sub
inc
out
pop
cmp
jo
ja
inc
test
xor
and
cmp
dec
xchg
lock
loope
rcll
lahf
pop
pusha
pusha
mov
jp
sub
and
mov
daa
outsl
loopne
cmp
jbe
pop
adc
add
mov
movsl
sub
cmp
lret
adcl
popa
xor
mov
je
push
inc
cmp
sbb
cs
adc
sarb
gs
add
enter
add
mov
daa
pop
inc
popa
mov
or
add
imul
push
sub
stc
inc
aas
or
out
mov
movl
outsl
mov
stos
roll
add
adc
fdivs
lods
mov
mov
inc
and
cmp
pop
mov
cmpsb
rorb
decl
arpl
adc
inc
mov
rcrl
ss
or
mov
fcompl
push
les
nop
lret
addb
jne
xchg
add
inc
jge
loop
xor
stos
ja
cmp
scas
xor
ss
jmp
xor
and
imul
inc
inc
adc
xchg
aam
jo
add
inc
pop
je
pop
es
jns
ficompl
test
and
or
adc
mov
fbld
adc
add
pusha
ret
push
xor
cmp
or
fs
mov
cmp
andl
pop
jp
into
inc
add
xor
inc
pop
loope
pop
add
mov
adc
dec
sbbb
pop
int
addl
cmp
cs
mov
mov
mov
mov
dec
sbb
push
push
sbb
add
or
jg
js
inc
stos
push
aas
jae
xor
xor
pop
adcb
shl
wrmsr
dec
add
push
ss
stos
pusha
mov
sub
push
and
dec
mov
or
cmp
lods
or
cmp
xor
pop
loope
cmp
movsl
int3
jne
pop
and
inc
mov
inc
inc
or
adc
cmpl
out
out
push
jne
std
push
and
cmp
dec
inc
inc
inc
cmpsl
fmull
jne
repnz
sub
push
sar
xchg
shrl
arpl
add
cmpsb
xor
and
mov
dec
jb
pop
mov
pop
mov
sub
cwtl
ret
jmp
mov
xchg
inc
addb
test
ficompl
sbb
add
and
mov
mov
or
lock
or
push
data16
fisttpl
mov
lds
mov
jle
mov
sbb
xchg
inc
push
pop
push
dec
add
insb
icebp
and
add
call
dec
lock
in
jmp
add
or
dec
fisttps
and
push
and
fsubr
push
xor
or
gs
sbb
in
js
dec
lret
andb
and
pop
hlt
stos
inc
mov
cmp
mov
add
xchg
mov
rcrl
jb
aas
xor
add
push
and
lea
loopne
dec
andb
and
pop
imul
dec
sar
rcrb
jg
popf
ficoms
insb
loope
push
adc
inc
add
jo
push
mov
aam
mov
or
mov
sbb
call
add
out
add
insl
cmp
out
inc
add
in
jb
jae
or
out
push
xchg
ret
incl
hlt
inc
shlb
sub
adcl
push
mov
xorl
mov
mov
addl
fistl
mov
cmp
jg
xchg
cmp
cmc
push
mov
and
inc
mov
aas
push
aaa
stos
mov
ljmp
jne
add
cmp
or
popf
or
mov
movl
sub
mov
jmp
scas
pop
mulb
mov
popa
xchg
test
sbb
aaa
pop
mov
out
mov
test
clc
es
not
mov
xlat
adc
push
xor
aas
fwait
adc
movsb
loope
push
sahf
cmpsb
dec
lock
mov
or
and
mov
or
ret
loopne
or
xor
not
push
arpl
push
jo
sbb
add
enter
les
aaa
cmp
enter
pop
xchg
dec
add
ret
sub
inc
sbb
cmpl
aaa
inc
adc
dec
repz
roll
in
mov
arpl
push
cwtl
rcl
fnsave
dec
mov
data16
popa
push
mov
into
bound
inc
jge
shlb
mov
imul
cmp
xchg
xorb
int3
repz
jmp
pushl
mov
push
daa
int
jle
push
push
jae
pop
fldenv
add
lret
lods
xlat
inc
add
pop
mov
sahf
imull
rorb
inc
adc
fsubp
repnz
jl
subb
repnz
mov
in
mov
lds
add
xchg
mov
repz
pusha
bnd
fldl
jl
mov
pop
mov
loop
popa
or
cmp
push
jne
add
lods
dec
stos
or
ficomps
aaa
leave
adc
or
mov
xor
or
nop
mov
lods
jmp
arpl
xchg
inc
inc
jbe
push
es
pop
xchg
xchg
jb
add
push
test
or
subl
dec
cmc
nop
mov
shr
add
lods
xor
xchg
lret
add
and
int
mov
mov
clc
cmpsl
xor
iret
decl
cwtl
push
repnz
cs
sbb
lcall
sbb
addb
push
cmp
add
inc
and
xor
pop
mov
or
push
pop
fisttpll
xchg
cmp
jg
add
out
cmp
jmp
mov
or
xor
stc
mov
dec
mov
push
or
es
scas
imul
and
sbb
xor
add
sub
shr
sbb
sub
or
and
ljmp
test
mov
pop
call
sti
scas
stos
js
cmp
or
sub
adc
inc
mov
add
fdivs
adc
mov
imul
std
push
push
fsubrl
fdivrs
jmp
or
jg
push
push
push
jge
aaa
sbb
mov
enter
push
push
ret
clc
sbb
mov
push
jmp
rcl
adc
sar
nop
mov
xor
cmp
inc
jmp
pop
call
pop
jbe
sbb
adc
jne
imul
sbb
push
or
jge
aas
sbb
and
fldt
cmpb
push
popa
push
jb
push
pop
adc
fs
jle
inc
push
mov
ds
xor
adc
xor
push
mov
cmp
std
mov
push
ja
cld
and
add
sbb
adc
test
test
xchg
or
rolb
stc
bndldx
add
imul
movl
sbb
jns
pop
or
mov
inc
xor
cmp
test
aas
and
cmp
sub
push
cmp
pushl
add
je
testb
je
fistpl
popa
and
sbb
in
add
or
xchg
cmp
lock
dec
jo
dec
dec
inc
loopne
stos
xchg
int3
xchg
sub
pusha
lods
jne
mov
add
out
gs
sbb
cmp
jbe
or
mov
push
add
mov
notb
push
mov
sbb
rcrl
test
cmp
jl
xchg
mov
dec
mov
and
enter
loopne
adcb
jle
sub
add
mov
add
fld
out
sahf
in
and
mov
out
jmp
adc
lods
lock
sahf
sub
or
cmp
mov
dec
push
imul
pop
inc
sbb
add
or
or
test
cmp
mov
or
dec
cmp
add
push
push
arpl
mov
xor
xor
jge
push
enter
sbb
cmp
nop
mov
adc
scas
and
push
loopne
addb
xor
aad
mov
lret
dec
mov
sti
jg
mov
inc
bound
add
adc
pushf
daa
sbb
pushf
push
push
push
jo
lea
fcmovnu
clc
addb
bound
imul
or
mov
dec
sahf
out
pop
leave
xor
sarb
rcrl
cmp
jl
mov
xchg
data16
sub
inc
adcl
fstpl
xor
adc
adc
adc
loopne
lock
jecxz
cmp
or
sbb
and
adc
mov
inc
insl
xchg
cmp
and
cli
sahf
addr16
fcoml
sbb
aaa
mov
or
cmpsl
mov
clc
adcl
lods
mov
lods
cld
jmp
mov
enter
add
pop
cmp
cmpsb
sbb
or
ror
cmp
jae
jo
push
xor
inc
pushf
movsl
jp
pusha
jg
fs
shlb
fldz
out
mov
cmpsl
je
lods
adc
sbb
bnd
xchg
loope
push
inc
cmpsl
and
shl
ljmp
out
pop
mov
rcl
in
into
cmp
jle
mov
rcrl
push
lret
cmpl
push
mov
ret
add
int
pop
lds
or
cmp
testl
xor
push
or
ss
or
dec
imul
mov
mov
cld
or
cld
mov
clc
and
inc
inc
add
sbb
cmp
cmp
movsb
cmc
repnz
dec
xlat
and
jae
mov
push
push
xor
adc
lock
hlt
dec
xor
imul
test
je
fstps
cltd
aam
push
lock
pop
out
cmpl
cmp
mov
idivl
jmp
cmp
fisubl
sbb
je
xchg
je
mov
mov
sbb
jmp
inc
xor
shrl
sbb
mov
testb
pop
inc
add
popa
jno
add
es
add
pop
sub
mov
xchg
pop
pop
call
adc
adc
xchg
adc
add
fld
imul
jmp
add
hlt
xorb
jbe
mov
fcoms
add
inc
push
push
add
push
lret
test
or
dec
sub
sbb
add
and
cmp
pushl
mov
cli
adc
cmp
enter
test
inc
andb
pusha
dec
xor
mov
dec
sub
jno
popf
xchg
jns
popa
sub
add
ja,pn
cmpb
lea
sarl
pop
je
pop
cmc
and
xor
ss
dec
imul
adc
movsl
or
lcall
ja
inc
pop
mov
sub
bound
fildl
dec
sub
fbstp
jae
push
cmp
jl
mov
inc
and
loopne
mov
xchg
add
and
or
inc
ja
jg
pop
lock
jne
clc
push
mov
int
add
popa
cld
into
push
and
lods
mov
jb
mov
repnz
push
inc
add
xorb
es
dec
and
jo
dec
xor
enter
icebp
stos
push
sarw
scas
mov
add
gs
add
mov
jae
mov
add
aaa
pushf
mov
add
cmc
lods
mov
inc
pop
shll
jne
or
xor
add
scas
imull
es
frstpm(287
or
out
push
arpl
aam
mov
mov
and
outsl
pop
lock
inc
jecxz
add
xchg
fstl
lahf
jb
mov
xor
inc
je
loope
jp
jecxz
xchg
clc
add
adc
fdivl
lret
repz
push
mov
cmp
add
jp
jno
add
mov
push
popl
rcll
xchg
iret
sbb
add
pusha
jg
and
rorl
and
outsb
mov
mov
jmp
repnz
shrl
adc
in
pusha
jbe
add
loopne
fistl
jge
decl
xor
dec
jg
adc
cmpl
fs
call
lret
pop
hlt
cmp
sarl
shl
aad
pop
shl
or
insb
shl
rolb
arpl
or
mov
jo
fcomps
pop
scas
mov
and
sbbb
cmp
inc
pop
test
or
push
adc
cmp
hlt
cmp
xchg
push
ljmp
mov
push
es
sub
adc
lock
push
inc
scas
pop
push
xchg
enter
push
push
push
adc
clc
push
mov
ljmp
xor
aad
xchg
shrl
loope
inc
out
pusha
mov
mov
cmp
fcos
mov
xlat
je
cmp
push
adc
shll
testb
les
add
xchg
push
or
pop
add
dec
dec
sarl
jmp
inc
ds
faddp
sbbl
adc
jb
cmp
add
sbb
push
or
push
push
jo
lret
fstl
icebp
push
inc
push
add
call
and
js
mov
adc
icebp
xorl
scas
or
out
push
pop
pop
adc
mov
cld
jle
les
pop
or
outsb
pop
mov
pop
es
jmp
cld
cmp
mov
pop
pop
inc
sbb
insl
cltd
pusha
and
push
mov
push
pop
lods
xchg
mov
bound
mov
orl
or
fsubrs
outsb
je
xchg
cli
adc
sub
lea
lea
or
loop
mov
int3
cmp
in
jbe
mov
sbb
jmp
fs
mov
lock
aad
cld
and
mov
je
xorl
call
adc
mov
pop
cli
clc
inc
mov
mov
mov
dec
xor
and
or
sbb
push
rolb
mov
hlt
aaa
sbbb
rcrl
es
sbb
jbe
cmp
pop
inc
cmp
xor
out
push
popa
dec
pop
mov
inc
jnp
sub
sarb
in
add
add
data16
test
cmpsb
int3
mov
in
movsb
push
or
adc
fldt
sbb
sbb
xchg
xchg
xchg
sub
xor
test
and
mov
ss
and
inc
cmovs
daa
daa
push
push
pop
add
pop
pusha
fs
insb
jo
js
and
jl
sbb
cltd
movsb
adc
mov
xchg
cwtl
pushf
cltd
fs
dec
mov
mov
sub
test
xor
test
add
lock
and
and
imul
mov
or
clc
insb
movsb
dec
adc
cld
adc
or
sbb
inc
push
dec
dec
or
sbb
and
or
test
inc
insb
pop
xor
mov
push
jo
add
sbb
ret
cmp
add
sbb
mov
inc
dec
inc
and
xorl
nop
inc
adc
sbb
sub
mov
jp
or
xchg
and
fcoml
or
dec
fnstenv
inc
and
outsb
es
nop
push
push
fcomi
add
syscall
loopne
sbb
int3
lcall
repnz
sub
push
adc
out
add
pop
dec
or
dec
daa
pop
fiaddl
jne
jns
mov
push
outsb
cltd
jne
movsb
fbld
xor
and
fcmovu
pop
pop
dec
mov
pop
cmp
add
mov
sub
push
push
je
ja
ret
scas
rol
add
jne
les
inc
sbb
sub
add
fmuls
add
jp
in
push
pop
push
shlb
dec
pop
int3
test
adc
sbb
inc
js
adc
lcall
or
sbb
push
aam
add
test
push
pushf
insl
imul
in
and
xlat
test
adc
js
or
insl
pop
xchg
add
push
pop
push
add
gs
cmp
arpl
les
xor
add
in
jns
int3
add
push
add
arpl
sbb
push
xor
ret
sbbb
inc
int3
mov
test
adc
add
dec
cmp
inc
inc
xor
adc
jo
lods
push
xlat
jmp
jbe
in
and
dec
xor
idivl
adc
lock
addb
shl
push
pand
add
and
push
push
dec
inc
dec
mov
push
ja
pushl
xor
loopne
or
inc
mov
pop
adc
adc
and
mov
lock
cmp
cmp
push
push
outsl
jmp
cmp
lea
pop
lea
xor
mov
psubb
sub
aad
loope
orl
add
xor
fiadds
notb
sti
icebp
jp
jo
push
mov
sub
fwait
mov
je
cltd
mulb
pop
xchg
daa
mov
popf
sbbb
mov
sub
leave
mov
jle
mov
shlb
cmp
xor
std
or
dec
jno
ljmp
pavgb
push
lea
shl
dec
adc
and
out
cmpsl
std
or
add
sar
mov
or
sti
add
pop
rol
adc
adc
insb
jne
aad
inc
adc
and
push
adc
shll
popf
add
mov
inc
sbb
xchg
inc
insb
push
sub
test
cs
mov
pop
mov
jns
movsl
or
cmp
in
sub
mov
loope
cmp
pop
addl
pop
outsb
xchg
xchg
pop
int
sbb
mov
lock
adc
mov
pop
sbb
or
lods
mov
sub
out
fs
adc
push
hlt
mov
add
andb
stos
jmp
leave
cmp
fisttpl
lret
add
cmp
fsubs
adcl
mov
pushf
lcall
adc
sbb
flds
push
dec
inc
lea
daa
hlt
and
cmp
ds
inc
loop
lods
adc
fdivrs
dec
pop
sbb
pusha
fcoms
xchg
fs
lea
jl
insl
daa
test
hlt
clc
cmpsl
loopne
xor
sarl
cmp
test
sbb
scas
jl
leave
incl
cmpsb
int
push
test
push
or
push
add
jmp
xlat
mov
sbb
scas
sub
xor
cltd
cmp
cmp
jne
movd
push
jbe
push
cmp
sarl
andps
shr
mov
jmp
inc
movsl
sub
adc
push
dec
pusha
push
iret
test
push
jae
adc
fcomps
rorb
lcall
or
cld
cmp
fisttps
cmp
sub
push
add
sysenter
sbb
xchg
xchg
xor
xchg
sbbb
push
dec
mov
stc
mov
lret
in
push
pop
fbld
jmp
xchg
mov
andl
add
aaa
ficoml
mov
cmp
mov
inc
cmp
fldt
loopne
aas
movb
inc
mov
adc
popf
and
lds
inc
fsubs
push
mov
fsubrs
sub
and
rcll
sbb
inc
add
sub
daa
and
xchg
mov
lret
or
pushl
in
pop
mov
movsl
dec
add
mov
xor
js
xchg
rclb
inc
fcmovu
mov
lods
push
orl
pop
mov
inc
inc
sbb
sub
insl
push
or
in
dec
in
mov
add
cmpsl
pop
add
cmpb
jl
xchg
inc
sbb
dec
dec
stc
pop
xchg
cmp
push
in
push
mov
mov
add
xchg
push
xchg
or
add
sub
addb
hlt
orb
push
mov
dec
cmpsb
pop
lock
scas
xorl
lret
jmp
xor
loopne
fnsave
fs
ret
sub
jns
jae
mov
mov
jo
lret
jmp
adc
repz
jmp
or
test
aas
lea
mov
pushl
sub
xsaves
lods
xor
xchg
ja
fdivrs
jne
push
or
push
ss
stos
cmp
adc
xor
in
clc
test
cmp
mov
xchg
and
fildll
inc
cmpb
mov
jg
subb
or
or
dec
cmp
cmp
pop
and
and
test
push
xor
mov
push
inc
leave
je
pop
pop
mov
aaa
push
xor
add
shr
aad
in
or
ret
xchg
xchg
sbb
xor
mov
clc
mov
scas
inc
clc
or
mov
or
sbb
cmp
movsl
add
xor
adc
loop
dec
adc
adc
unpckhps
pusha
sub
sbb
subb
pop
dec
sbb
push
xor
adc
inc
add
inc
std
insl
pop
or
mov
adc
push
add
jge
ret
lock
jae
addr16
movsl
fdivrl
sbb
push
and
mov
nop
adc
outsb
dec
pushf
fldenv
repnz
mov
shll
ret
aas
out
int
pminsw
pop
inc
inc
push
mov
inc
pop
or
pop
push
or
mov
insb
out
add
mov
inc
jg
rcl
xchg
cmpb
push
inc
push
xor
mov
lock
and
sbb
sub
cmovs
cmp
or
bound
sub
push
jge
or
orl
sti
out
push
gs
push
fisttps
pop
cmp
lods
jg
xor
xchg
jmp
push
add
stos
jge
addr16
pop
inc
aaa
and
sub
dec
inc
adc
ja
rorb
push
jne
fldenv
mov
and
pop
ds
pop
adcb
push
pop
lods
pop
scas
pusha
cmp
lods
pop
pop
mov
clc
and
jg
add
jns
rcrb
add
clc
je
xor
lcall
lcall
dec
clc
adc
jle
mov
jge
test
cmp
or
sahf
cld
inc
cmp
test
push
push
and
inc
cmp
shlb
fsts
or
js
pop
sbb
add
push
push
add
popa
add
pushf
test
das
mov
add
add
icebp
fists
adc
popf
adc
mov
push
jmp
add
jp
outsb
test
lret
jae
dec
adc
into
push
dec
push
xor
mov
icebp
xor
xchg
mov
mov
sub
add
mov
movsl
hlt
stos
xchg
ret
roll
pop
jo
inc
aas
pop
pop
movsl
scas
push
clc
scas
cmp
and
pop
add
sbbb
sbb
fcoms
sbb
movsb
adc
fwait
jnp
outsl
adc
sbb
cmp
cld
rol
push
loope
xchg
adc
push
cmp
mov
mov
jb
inc
xor
std
cltd
cmp
sbb
sub
mov
lea
sub
mov
jno
out
dec
inc
loop
das
mov
xchg
arpl
pop
dec
inc
dec
loop
in
pop
mov
jnp
imul
fcoml
out
aam
inc
dec
cmp
rclb
sbb
sbb
mov
jp
inc
sub
add
les
xor
and
sbbb
and
popw
jne
ds
jbe
jbe
mov
inc
mov
lahf
mov
insb
cld
and
mov
in
lods
dec
fdivrl
repnz
das
and
xor
leave
inc
jmp
rorl
jl
pop
or
push
push
jle
inc
adc
jl
xchg
mov
sub
or
cmp
stc
inc
lods
mov
mov
and
jne
or
or
inc
les
dec
mov
inc
sbb
popa
and
test
adc
jne
and
xor
inc
les
ror
nop
ja
rolb
xor
jmp
sub
or
sub
add
lcall
push
shld
hlt
push
pushf
pop
outsb
sti
mov
xor
pop
sub
je
push
popf
ds
cmp
call
sahf
and
pop
test
add
push
lcall
adc
add
cmpb
orb
js
in
imul
cmp
or
repnz
loop
lock
or
mov
add
test
and
fsubs
and
cmp
and
nop
aas
mov
shl
not
xor
loope
xor
and
inc
outsb
and
shr
add
es
and
cmp
clc
loopne
aam
sti
test
inc
cmp
test
adc
cmp
cmp
test
xor
loop
adc
sahf
mov
mov
je
sbb
or
sub
sbb
incb
jmp
sbb
std
or
jmp
inc
and
mov
and
sbb
popf
and
jecxz
jge
mov
jmp
xchg
jmp
cli
xor
jns
clc
or
mov
mov
cmp
add
sbb
sbb
loope
fnstcw
sarl
xchg
add
pusha
loope
pop
sub
lret
pusha
dec
and
adc
out
inc
ficoml
fldl
cmp
roll
sbb
rcrb
mov
inc
testb
in
mov
adc
sti
add
mov
out
test
fisttps
adc
repz
decl
dec
jne
sbbl
jmp
push
mov
imul
imull
mov
and
cmpb
imul
pop
sbb
jmp
push
and
and
add
adc
jmp
inc
push
fnstcw
or
pusha
pop
rcr
push
sbbb
mov
std
out
cmp
xor
sbb
inc
cwtl
cmp
test
or
arpl
fiaddl
sub
ficomps
popa
adcb
fmuls
add
sti
jmp
sbb
jmp
jno
enter
aam
xchg
push
aaa
mov
fsts
sbb
xchg
and
inc
jl
add
add
jmp
sub
sub
jmp
sub
cmp
mov
psubusw
push
adc
adc
sub
repz
pop
pop
or
cmc
jnp
inc
mov
mov
mov
pop
in
xor
jle
das
outsb
imul
fmull
mov
inc
leave
ljmp
add
sub
bnd
enter
xchg
shl
add
mov
or
scas
imul
insl
in
or
adcl
sbb
shl
jno
mov
push
push
and
jmp
pop
movsb
insb
xor
loope
in
aam
mov
xchg
inc
adc
and
mov
loop
push
and
sbbb
out
lock
orb
push
push
add
fcompl
and
sbb
jl
xorb
inc
xchg
add
test
adc
cltd
mov
arpl
int3
and
mov
add
mov
push
cmp
je
or
mov
push
rolb
jecxz
or
adc
call
sbb
lods
xor
hlt
adc
or
and
push
or
pop
cmp
test
out
xor
push
shll
divl
fsubrp
fwait
jno
mov
in
mov
pop
cmp
add
xor
mov
into
cmp
adc
xchg
or
loopne
adc
in
fmul
jo
sub
pop
xchg
mov
add
hlt
in
mov
dec
loop
mov
or
in
aad
adc
or
mov
and
sub
xor
cmp
adc
int3
jl
add
jle
sbb
inc
push
jb
fnstsw
loopne
adc
mov
inc
sbb
inc
mov
mov
jg
jae
pop
test
stos
std
lret
push
int3
pop
cld
or
aad
or
jge
adc
mov
sub
cs
into
jl
loope
ret
or
push
xchg
cs
pop
shl
jne
pop
je
popw
gs
mov
aaa
xor
xor
sbb
adcb
adc
mov
push
pop
fadds
into
and
dec
popa
aaa
mov
das
out
ja
flds
cwtl
sbb
push
push
xor
test
fbstp
jne
dec
pop
or
mov
aad
icebp
sbb
in
das
aam
gs
or
cmpsb
imul
push
or
push
xchg
incb
inc
and
jne
iret
scas
mov
sbb
xor
push
xlat
sahf
add
and
fsubrs
das
jae
imul
incl
sub
xchg
inc
ljmp
push
mov
ret
fnclex
and
dec
lock
pusha
or
xor
xchg
sbb
push
mov
das
adc
loopne
sub
fwait
sahf
in
cs
adc
sbb
or
and
jle
fsubrl
pushf
loopne
fdivp
jb
mov
bound
jo
push
cmp
and
inc
je
sbb
iret
loopne
inc
xchg
scas
push
mov
xchg
and
sti
jb
mov
and
push
call
jp
inc
ret
repz
out
mov
mov
push
mov
add
cmp
jbe
xchg
rclb
insl
jmp
sbb
testb
pusha
fidivrs
or
inc
shlb
and
inc
inc
xchg
mov
or
insl
push
or
push
push
mov
xor
int3
xchg
arpl
xchg
test
stc
inc
and
xor
lret
or
jp
shrb
adc
pushf
sbb
adc
repnz
sti
xor
fidivrs
jbe
sbb
ror
jb,pn
add
jnp
adc
enter
mov
add
loope
or
sbb
adc
pop
xor
stos
mov
xor
lcall
lahf
lcall
adc
pop
subb
xrelease
mov
or
cmpsl
int
and
push
mov
or
jo
dec
outsl
add
dec
push
or
test
and
push
out
sub
push
or
sbb
sti
add
push
mov
inc
mov
mov
pop
test
jne
or
hlt
mov
hlt
push
sub
stos
stos
test
add
fbstp
aam
rorl
pop
ljmp
mov
cltd
and
add
inc
pop
fisttpl
sbbb
add
lea
pop
popf
les
subb
inc
shl
mov
cvttps2pi
aam
loop
xchg
out
div
rolb
adcl
fisttpll
outsb
push
cltd
insb
pop
and
mov
out
es
into
loopne
insb
sub
xchg
js
mov
lea
xor
repnz
or
and
cli
sbb
aas
xlat
dec
pusha
sub
adc
mov
or
jb
incb
jae
adc
mov
adc
jns
addl
ds
outsl
mov
and
or
lret
inc
sahf
test
push
add
stos
test
cs
outsb
mov
dec
dec
stos
inc
and
rcll
ret
rsm
test
ret
mov
push
aam
xor
cmp
rorl
add
mov
clc
out
and
push
cld
not
mov
clc
popa
in
popf
je
dec
mov
pop
ds
push
or
and
lock
push
push
mov
jl
mov
shl
mov
cld
jo
sarb
je
mov
mov
push
jmp
mov
in
adc
hlt
test
and
inc
and
inc
mov
xchg
lds
add
cli
andps
bound
mov
push
pop
xor
pop
add
mov
dec
jns
inc
lock
or
or
xchg
jecxz
dec
ss
mov
xor
sbb
shrb
mov
or
inc
mov
sbb
sbb
push
sahf
cmpl
gs
popa
addb
mov
gs
out
or
cld
call
iret
and
mov
loopne
add
xor
mov
ret
jge
xchg
add
sub
xor
scas
shl
out
push
sbb
jo
and
flds
xchg
mov
or
into
and
sub
test
add
subb
aaa
and
bound
pop
pop
cmp
push
les
scas
mov
or
add
and
adc
sub
pop
adc
adcl
adc
jg,pt
inc
sub
or
adc
leave
repz
jb
inc
jle
je
sbb
adc
inc
enter
add
adc
ljmp
push
sub
clc
stos
adc
sub
xor
imul
add
movsb
mov
mov
pop
mov
dec
imul
jo
mov
mov
stos
test
cmp
in
jne
mov
jmp
mov
sub
or
xchg
add
mov
mov
sub
cmp
ja
push
sub
frstor
mov
outsb
xchg
mov
add
jmp
jle
sub
inc
inc
add
xchg
fsubl
adc
aas
and
or
jmp
mov
adc
jmp
cmpsl
mov
je
shlb
adc
and
pop
inc
pop
mov
jle
adc
push
xor
shrb
gs
mov
loopne
push
mov
jne
jbe
push
lods
or
fldcw
sub
pushf
push
cmp
inc
and
inc
push
jmp
mov
lea
sub
mov
jae
mov
xchg
je
sub
dec
sbb
push
push
pop
jge
pop
mov
mov
nop
add
stos
and
movsb
jne
dec
dec
jae
imul
sbb
in
mov
or
adc
int
hlt
mov
popf
loopne
fisubrl
call
decb
divl
out
push
sub
je
adc
gs
orl
iret
mov
push
and
dec
and
enter
mov
jbe
sub
mov
fbld
je
mov
test
add
mov
adc
gs
cmp
mov
jg
dec
testl
and
subl
pop
orb
cmpb
mov
push
mov
cli
and
sub
inc
xor
adc
or
jecxz
add
in
jbe
out
pushf
jmp
push
cwtl
pop
mov
xor
mov
dec
pop
and
insl
ljmp
jne
xor
incl
shlb
rorb
push
cwtl
jge
neg
add
jnp
xor
mov
sub
cmp
lcall
mov
cli
adc
mov
out
fstpl
or
jle
add
xchg
mov
popf
sub
xor
jne
xor
adc
inc
out
xchg
clc
add
test
je
add
cli
push
inc
mov
sbbl
rorl
or
jb
mov
dec
mov
pop
add
pusha
add
call
decl
icebp
mov
ret
and
mov
into
nop
fs
mov
dec
lock
adc
sbb
jns
mov
ja
ja
pusha
lret
mov
pop
mov
loop
int
movb
testl
pop
dec
repnz
les
das
fwait
pop
imull
into
jne
inc
or
cmp
mov
jae
cmp
jne
hlt
int3
add
adc
xchg
jne
mov
hlt
shrb
test
rcrl
mov
xor
lea
cmpsb
cmp
mov
mov
movsb
push
scas
hlt
dec
add
sbb
cld
push
icebp
loope
jns
dec
lock
ja
xchg
push
inc
and
push
js
subl
shr
mov
pushf
sub
lock
stc
jg
add
mov
inc
cmp
test
inc
call
ja
add
nop
shll
hlt
lods
add
or
shr
add
rcll
inc
lock
mov
jg
or
movsb
clc
lret
sub
mov
xor
add
notb
mov
int
fwait
adc
dec
fcom
insl
fadd
loopne
roll
mov
out
or
mov
sahf
dec
les
jne
insb
mov
dec
icebp
test
enter
sbb
mov
loope
in
add
mov
shll
add
ficompl
test
pop
aad
jg
xor
fiadds
push
call
push
xor
fisubl
clc
jle
jb
fs
cs
and
mov
rolb
lock
push
add
cmp
sub
test
lret
lret
xor
push
scas
push
xchg
shrb
dec
inc
dec
and
les
add
movsb
int3
roll
push
int3
xchg
fdivrs
lret
das
sub
add
out
sarl
negb
sub
repnz
movups
fidivs
ret
or
call
cmp
add
mov
imul
add
out
sahf
xor
les
cmp
cmp
jle
lods
xorb
or
rclb
push
aad
fists
jmp
inc
add
test
pop
jne
movsb
lods
arpl
pop
push
add
fs
mov
mov
shrb
mov
adc
mov
pop
cmp
or
dec
in
push
stos
and
dec
pop
push
xchg
xchg
pop
jnp
adc
inc
cs
or
ss
lods
jge
push
cmp
je
or
out
mov
dec
cmp
adc
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
adc
stos
mul
pop
add
fcompl
addr16
xor
xlat
testl
jae
push
jae
outsb
fisttps
sarl
sbb
pusha
or
pop
shlb
les
xor
cmc
sub
push
xor
push
pop
dec
lea
jnp
add
mov
adc
xor
jmp
xor
popa
insb
add
rolb
je
sub
pop
cwtl
add
xchg
mov
and
pop
shlb
jbe
or
add
and
fwait
dec
dec
adc
mov
dec
sbb
pop
je
setg
cmpl
out
clc
add
mov
call
stos
lret
ss
sub
movb
add
lcall
cmp
mov
jo
ficoml
xor
mov
clc
add
pop
pop
inc
pand
loop
lock
lcall
jmp
lea
icebp
add
add
xchg
xchg
mov
pop
or
pop
lds
mov
dec
inc
out
popa
sub
jns
les
add
sub
lret
in
ficomps
cld
xor
push
or
adcb
pushf
mov
andb
shlb
jmp
add
pop
lods
adc
ret
dec
mov
sub
mov
imul
dec
cwtl
clc
xorb
mov
and
insb
push
and
sbb
jmp
mov
ret
jbe
inc
shl
or
dec
adc
sub
fndisi(8087
jge
mov
rcll
loope
dec
out
adc
outsl
xor
shlb
pop
data16
xchg
push
add
rcll
pop
sahf
sub
xchg
add
or
cmp
ffree
jno
sub
and
mov
or
in
and
xor
xor
sbb
xchg
or
call
jno
dec
out
jmp
arpl
test
jb
call
xchg
rorb
das
add
fcoml
lea
add
cmp
adc
lret
lret
adc
stos
lret
pop
repz
iret
push
and
or
sar
mov
jmp
xor
jo
add
enter
leave
mov
push
icebp
pusha
loopne
lds
das
testb
mov
pop
push
xor
push
mov
ret
js
iret
xchg
lcall
pop
push
dec
inc
xor
leave
and
add
mov
cmp
and
gs
je
cmp
bound
imul
pop
fdiv
inc
neg
sbb
jecxz
mov
jg
adc
inc
daa
xor
or
jne
pop
cmp
sahf
pop
sub
rorl
cmp
repz
js
scas
test
movb
adc
xor
xor
xorb
xlat
mov
jg
ja
and
adc
xchg
int3
push
dec
push
sub
adc
push
xorb
jo
push
pop
mov
arpl
mov
loop
pop
sub
inc
jecxz
pop
data16
add
jbe
add
mov
add
push
mov
lods
enter
sub
cmp
ss
add
test
push
cmpsl
clc
mov
sbb
pop
or
cmp
xchg
stc
inc
dec
cs
dec
jmp
xchg
clc
sbb
in
mov
push
or
mov
call
and
push
xor
pop
cmp
mov
jmp
add
jo
jge
cmp
inc
out
add
mov
shrl
mov
add
sarl
jg
jb
push
sub
or
pop
cmp
fidivrl
rorl
dec
lahf
orl
das
rolb
push
nop
dec
jl
xor
push
xchg
addb
pop
pop
or
or
push
jg
lods
jb
mov
movsb
pop
mov
dec
xchg
out
mov
dec
pop
or
or
pop
xor
jmp
xor
daa
jne
adc
jae
and
stc
mov
add
sbb
aam
sub
push
lds
js
es
int
call
les
loop
loope
and
jb
je
mov
mull
xor
add
add
cwtl
or
add
lock
adc
pop
xchg
inc
sub
jge
mov
adc
inc
mov
aaa
add
cs
push
mov
add
mov
and
stos
push
in
test
ficompl
cwtl
sbb
nop
and
adc
xor
add
xor
je
pusha
inc
bound
mov
inc
xor
repz
mov
jb
push
cmp
daa
aam
aas
inc
lret
jbe
adc
rol
dec
add
lea
adc
sub
pop
add
and
adc
push
insl
push
jmp
test
shlb
mov
cld
jl
jle
loopne
sarb
inc
or
mov
xorl
jp
shr
loop
mov
mov
sbb
jns
adc
jle
jne
sti
clc
gs
or
pop
data16
dec
jns
shr
sub
mov
int
push
inc
je
dec
out
xor
shr
repnz
cmp
popf
push
sub
fcoms
loopne
dec
jnp
mov
xor
push
enter
movsl
or
inc
call
dec
add
icebp
sub
clc
fstps
or
and
push
fs
add
cli
or
dec
shrb
add
adc
add
or
and
pop
xor
cmp
xor
dec
out
loop
aam
call
cmp
js
push
add
xchg
movsl
je
sbb
cmp
js
pop
dec
aad
xchg
xor
xchg
lcall
nop
pop
bound
sbb
xchg
cmp
nop
pusha
dec
jmp
jo
or
rcl
sub
pushf
rorb
lahf
dec
push
sub
mov
dec
imul
pop
cmp
add
dec
add
sbb
cmp
mov
mov
sub
lock
fwait
pop
mov
cmp
jmp
mov
mov
sub
mov
pop
inc
mov
xchg
jmp
insl
sub
xor
mov
cmpl
mov
outsb
push
or
push
mov
mov
push
mov
insb
jle,pn
pop
mov
jl
or
aam
scas
push
jp
pop
call
pop
rorb
mov
test
cmp
ret
lret
or
jmp
mov
add
mov
fdivs
jge
mov
pop
push
das
mov
xor
insb
testb
add
arpl
int
lock
shrb
out
pop
cmp
jo
jecxz
inc
mov
mov
out
in
nop
add
adc
rorb
sbb
sbb
dec
xor
push
jmp
or
jmp
test
out
xor
xor
or
ljmp
adc
add
in
arpl
aad
jae
cmp
lea
test
arpl
adc
inc
xchg
add
rcrb
xor
adc
inc
adc
xor
sbb
jne
in
cmp
dec
mov
aad
xor
mov
mov
mov
push
xchg
or
jne
jbe
fdivrs
xchg
add
mov
push
cld
cwtl
adc
fs
in
shll
add
js
sarb
mov
or
dec
sub
loopne
cs
add
mov
mov
inc
or
fsts
xor
or
orl
mov
adc
jecxz
dec
repz
add
or
xor
xlat
push
mov
cmp
push
cmp
adc
test
jb
bndstx
mov
add
call
sub
push
add
xor
xor
push
cld
or
cmp
sbb
inc
jmp
arpl
dec
lds
or
cmp
jbe
or
cmp
inc
test
data16
sub
test
clc
test
jle
push
push
cmp
dec
bound
outsl
nop
add
fcmovnbe
outsb
sub
jp
fmuls
pop
test
icebp
rol
mov
jo
mov
pusha
mov
mov
or
das
adc
cmp
pop
testl
out
iret
push
sub
repz
mov
js
ret
inc
inc
jnp
mov
mov
adc
mov
xchg
adc
jle
mov
push
lea
push
sbb
mov
dec
xchg
mov
sub
jmp
inc
jno
cwtl
sbb
xchg
icebp
popa
xor
sysexit
int3
lods
and
ffree
ljmp
inc
jmp
test
lods
out
mov
adc
arpl
push
add
or
adc
adc
js
movsl
sbb
mov
or
test
xchg
jmp
xor
mov
enter
addl
or
ds
mov
mov
push
sub
dec
jo
pop
loope
inc
mov
push
lock
aaa
adc
mov
out
pop
cmpsl
sub
adc
pushf
popa
xchg
or
cmp
xchg
push
push
mov
test
shr
insl
mov
loop
jge
adc
xchg
loop
push
cmp
xor
ljmp
adc
bound
jmp
add
mov
dec
cmp
lea
or
and
decl
repz
add
or
out
into
mov
push
negl
shr
shl
pop
lock
pop
or
mov
add
add
or
bound
scas
push
rcl
xor
sti
in
sub
mov
cmp
inc
ret
inc
or
adc
add
bound
frstor
aaa
adc
xor
clc
fnstcw
inc
notb
les
inc
dec
add
push
jg
dec
testl
cli
mov
adc
mov
push
mov
sbb
jp
adc
adc
inc
es
popa
dec
dec
or
movsb
sbb
enter
stc
out
mov
pop
add
inc
jbe
xchg
mov
cmp
and
cmp
sbb
mov
push
cli
and
adc
iret
shl
andl
adc
aad
mov
mov
add
pushf
daa
sbb
clc
push
push
pop
fsubrs
icebp
test
add
lret
test
je
xor
pushw
or
add
inc
rcl
cmpsl
cmp
sub
movsb
fidivl
fiadds
mov
mov
cmp
xor
mov
add
dec
cmp
xor
movsb
call
mov
jne
add
call
xlat
push
ljmp
mov
dec
and
dec
cli
cmpsb
sahf
inc
mov
push
xchg
cli
adc
rcrb
popa
mov
jle
test
sbb
inc
cmp
popf
les
test
shlb
imul
mov
inc
fdivs
pop
jbe
cmp
lock
sbb
aas
xor
subb
mov
insb
xor
push
push
push
test
xchg
adc
cwtl
or
push
roll
push
adc
je
das
dec
inc
push
push
mov
push
push
and
pop
nop
iret
ds
inc
lods
and
adc
fprem1
and
lret
jne
aam
pop
or
rclb
cmp
sub
rorb
aam
and
adc
daa
and
mov
loopne
jbe
dec
add
cld
mov
and
enter
dec
call
loope
into
adc
in
add
add
rcll
jns
sub
push
je
jmp
dec
jo
or
mov
jo
fwait
cmpl
and
dec
test
pop
lret
push
inc
pop
cmp
ljmp
or
push
popa
push
shlb
add
aam
push
jp
les
fs
jmp
cwtl
add
imul
ret
enter
test
sub
inc
inc
mul
fstl
cld
neg
neg
sbb
sub
sahf
dec
ficoms
sbb
test
faddl
mov
adc
sbb
push
or
out
inc
and
fsts
fcomi
sbb
xchg
gs
sbb
and
test
dec
repnz
jbe
test
pop
pop
and
sub
adc
xchg
adc
lods
rcl
ljmp
dec
and
shr
test
stc
jecxz
cmpsl
test
push
idiv
and
not
cld
lock
je
mul
sub
jb
or
add
pop
or
dec
mov
inc
push
sbb
sbb
out
jecxz
lods
add
pop
movsl
es
inc
in
jle
sbb
and
jne
xchg
lds
or
mov
or
into
jbe
jns
mov
adc
ljmp
bound
movsl
jae
pop
mov
add
push
jb
stos
adc
lods
das
popa
cld
sbb
add
push
mov
sahf
push
sbb
and
push
or
jo
and
mov
pop
sbb
fiaddl
dec
insl
loopne
or
push
iret
mov
fwait
cltd
mov
ss
dec
pushl
add
dec
fidivs
jg
add
mov
in
jge
ret
push
dec
loopne
and
leave
jne
sub
push
sbb
lock
mov
leave
je
lcall
ret
mov
mov
mov
out
es
mov
je
dec
xor
mov
push
cmpsb
jns
cmp
ja
add
cmp
adc
cmp
jne
push
shll
leave
adc
mov
xor
idivl
pop
ss
xor
mov
push
jnp
push
orl
xor
and
and
fsubrs
push
xor
bound
fnstsw
pop
pop
es
sbb
sbb
clc
or
or
jmp
neg
je
mov
push
push
addr16
mov
lretw
dec
pop
push
nop
cmp
jecxz
jg
icebp
or
and
sbb
cmp
pop
mov
movsl
xchg
cmpsl
clc
jne
mov
dec
loope
xor
insb
add
cmp
arpl
in
jmp
mov
dec
aaa
pop
mov
or
test
jg
std
scas
mov
xlat
mov
jno
test
femms
gs
xor
adc
mov
sub
xchg
inc
addr16
xchg
sub
push
inc
mov
aam
push
xor
and
mov
sti
cltd
mov
add
call
sbb
mov
cmp
inc
push
push
lret
adc
mov
jns
pop
dec
mov
push
rcl
rcrl
aad
xlat
fcomp
test
fstpt
mov
inc
nop
data16
in
imul
sub
push
into
les
lods
adc
jne
cmp
test
mov
mov
data16
orb
mov
add
push
clc
mov
inc
push
add
sub
mov
or
add
mov
divb
in
pusha
ja
mov
icebp
adc
iret
out
jne
cmp
sbb
push
or
fwait
bound
sub
adc
add
shlb
pusha
push
lcall
mov
imul
pop
or
sbb
idiv
rorb
or
adc
mov
mov
or
fstpt
inc
push
loop
pop
sub
mov
adc
pushf
sub
adc
push
mov
test
adc
pop
jp
push
mov
mov
xorb
icebp
add
xchg
mov
jb
fistl
mov
decl
mov
add
add
imul
sub
ljmp
testl
into
and
lea
pop
adc
subl
jae
xchg
ja
add
sbbb
mov
pop
mov
aaa
repnz
in
ljmp
loopne
inc
or
hlt
push
xchg
and
cltd
mov
jne
mov
shl
outsb
popa
shll
push
mov
test
fsqrt
push
lea
dec
xchg
mov
or
or
push
mov
push
sahf
add
movsl
movsb
sub
cmp
pop
shll
inc
repz
addl
xor
cmpsb
cwtl
mov
jge
jl
loope
imul
rol
add
stc
jle
jle
or
in
outsl
jne
enter
orl
rolb
sar
loop
fcomps
loopne
cmp
rorb
cmpb
jg
or
cmp
movsl
add
inc
xchg
mov
jp
pop
mov
shrl
jecxz
adc
in
out
xchg
mov
or
dec
sub
push
inc
inc
dec
add
or
test
test
div
cli
enter
cli
inc
cli
div
xchg
scas
or
popa
inc
sbb
loopne
mov
push
jnp
sbb
ret
fcoml
adc
push
inc
ret
mov
push
push
clc
add
and
sub
stos
sbb
mov
rolb
dec
dec
cmp
push
xchg
cmpsl
mov
mov
lock
lods
cmp
mov
sbb
or
pushw
sub
loop
out
rcl
out
jge
xchg
testb
push
inc
mov
or
mov
sbb
repnz
and
adc
xor
into
lret
jae
rorl
sub
jne
fcomp
sub
ss
inc
test
dec
popa
cmp
mov
int
sub
cmp
xor
push
jno
ret
adc
push
lret
cs
cld
lea
fcmovu
data16
pop
insl
cmpsb
test
and
mov
inc
inc
and
repz
idiv
sbb
xchg
add
sbb
divb
jb
inc
sbb
sbb
mulb
mov
sbb
out
or
jge
mov
lock
sbb
leave
pop
add
jne
mov
fnsetpm(287
loopne
adc
into
sub
fwait
mov
pusha
mov
jge
add
sub
mov
mov
adc
inc
mov
and
add
inc
mov
push
add
push
nop
jbe
clc
mov
adc
test
sub
in
dec
cmpsl
sub
pop
pop
shr
xlat
dec
dec
pop
pop
add
or
push
cmp
mov
test
jne
mov
xor
fiadds
inc
imul
and
imul
pop
jl
and
dec
js
or
lea
push
and
ss
mov
push
adc
or
into
je
out
push
push
clc
loope
and
xchg
mov
insb
push
cmc
lahf
repnz
mov
add
sub
loopne
push
movsl
into
out
enter
add
add
sbb
jbe
rcll
xchg
clc
js
add
enter
adc
mov
jae
push
inc
frstor
add
negl
out
and
mov
sbbb
in
into
or
mov
inc
xor
in
std
lahf
negb
dec
nop
dec
mov
dec
cmp
jge
sub
andb
stos
cmp
movb
dec
cmp
arpl
mov
add
add
fadds
movsb
jb
pop
add
repnz
mov
mov
jne
dec
adc
divb
int
pushf
adc
push
lcall
lret
or
mov
sahf
inc
jbe
dec
push
jo
ret
adc
add
xchg
cmpsb
rorb
add
add
add
popf
ret
test
mov
mov
vorps
jl
sub
popf
movsl
dec
add
adc
cmp
jmp
mov
xchg
push
or
add
or
pop
pop
scas
add
push
addr16
adc
push
add
add
xor
sub
adc
or
xor
ret
fimuls
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
clc
scas
add
pop
and
pop
pop
fdivs
jnp
dec
mov
ret
lock
prefetchw
push
dec
fisttpll
jo
loope
mov
test
push
pop
jae
or
or
add
add
roll
push
lahf
add
mov
inc
xchg
xlat
dec
pop
or
sbb
dec
pop
lahf
push
add
cli
and
in
jo
ja
xor
mov
mov
inc
jge
sbb
mov
mov
add
or
adcl
xor
cld
addb
sub
mov
push
inc
stos
inc
jo
push
jg
sub
into
xchg
sub
pushf
movsb
dec
aam
mov
cmpsb
out
mov
testl
pop
test
add
into
or
add
or
movsb
sbb
adc
xchg
into
jle
pusha
cmp
out
stc
mov
xor
inc
jg
mov
into
into
mov
pop
and
pop
sub
mov
pop
nop
pop
cwtl
pop
and
sbb
fistpll
or
pop
add
pop
push
add
sub
pop
lcall
add
leave
lahf
pop
test
sbb
add
or
mov
adcb
inc
lcall
and
inc
xchg
sub
pop
sub
dec
inc
sub
jmp
jb
push
mov
lret
stos
loope
push
xor
xchg
add
scas
push
push
scas
data16
mov
aad
or
push
jbe
shrb
sbb
ret
jae
sbb
fmul
cmp
pop
xchg
push
mov
inc
sub
push
dec
and
mov
cmp
or
add
sahf
jle
xor
fisubrs
fmul
pop
outsb
adc
sbb
data16
sbbl
sub
jle
add
adc
jge
imul
popa
ljmp
cmp
xchg
xor
orb
xor
jno
dec
push
mov
inc
push
cwtl
test
scas
out
dec
sbb
xor
mov
out
push
adc
and
insl
add
inc
adcb
jmp
push
adcl
push
xchg
jb
or
out
je
mov
insl
inc
call
add
or
push
cmp
jbe
inc
inc
sbb
aas
int3
call
jle
and
in
sbb
out
mov
das
dec
push
mov
jo
jbe
or
loope
into
jnp
les
push
daa
push
icebp
cmpsl
mov
or
lock
filds
xlat
xchg
movsl
repz
push
xchg
rolb
repz
inc
and
cs
xchg
add
push
add
loopne
jnp
mov
xorb
dec
testb
pusha
test
sub
xorl
jle
mov
inc
test
je
jle
jns
test
push
xor
cmp
push
fstpt
aam
sbb
popf
push
fsubr
xor
or
enter
out
jns
orb
sbb
sbb
mov
cli
shlb
and
push
mov
fcoml
je
loope
and
pusha
xchg
dec
inc
sbb
clc
jmp
jmp
and
jge
lea
or
mov
mov
pusha
push
pop
push
imul
test
enter
ret
or
sbb
xchg
xor
fildll
push
shll
push
enter
xor
sub
adc
adc
bound
ds
into
xchg
icebp
aas
hlt
cs
push
mov
xor
sbb
out
jae
or
jmp
push
push
xlat
and
or
sub
mov
sbb
fnsave
xchg
sub
add
insl
add
pop
jmp
sbb
hlt
xor
mov
inc
xchg
sub
hlt
or
and
scas
push
jne
push
inc
das
lods
lods
and
mov
mov
xchg
addr16
pop
push
lock
lock
cmp
loopne
sub
mov
push
faddl
outsb
mov
sub
and
push
xor
in
xchg
sbb
std
xchg
jecxz
mov
fcomps
xor
adc
adc
test
cmp
or
mov
jns
cmp
mov
ret
notl
js
mov
jle
add
sbb
sbb
out
xor
les
sub
shl
jl
add
ficomps
push
sub
test
cmp
lea
popa
inc
jno
bswap
int3
add
in
pusha
adcl
gs
jbe
repnz
pop
nop
sahf
lret
mov
fsubs
lock
push
jmp
add
dec
js
loop
xor
fisttps
cmp
outsl
push
sub
js
mov
rorl
mov
and
xchg
cli
or
mov
mov
push
pop
leave
inc
js
loop
sbb
sbb
inc
and
cmpl
das
pusha
xor
inc
std
shll
dec
aas
shrb
sub
add
sbb
les
lret
outsb
inc
jb
loope
adc
insb
lcall
xor
xchg
xor
sub
mov
push
adc
lock
push
mov
pop
insl
pop
testb
lock
push
testb
push
push
or
cltd
inc
mov
xor
sbb
xchg
cwtl
or
cmp
loope
add
or
or
popl
add
js
out
sub
mov
das
adc
cmp
test
adc
mov
mov
sbb
aaa
adc
data16
cli
adc
jbe
shlb
fwait
pop
lea
xchg
ret
push
pop
or
mov
mov
and
loop
or
loope
and
mov
mov
aad
push
out
cvttps2pi
mov
test
cmc
push
dec
fbstp
add
fld
adc
mov
push
xor
adc
jmp
fsts
jno
outsl
cwtl
mov
xor
ss
add
jmp
cmp
fcomp
pushf
fstpl
adc
test
cmpsb
pop
or
pop
push
xchg
push
push
jge
add
dec
sub
lcall
stos
or
cltd
js
lea
mov
lock
jo
push
fs
int3
xor
or
mov
add
fsubl
sub
lock
in
leave
test
gs
loopne
mov
adc
or
in
dec
insb
mov
aad
inc
mov
jbe
or
sub
xor
xor
mov
dec
add
enter
push
in
push
dec
dec
lock
sbb
jb
jp
lock
and
or
mov
push
and
call
adc
push
inc
insb
jle
fsubl
adc
enter
fcom
mov
xchg
cld
aaa
add
jb
push
in
mov
inc
push
cmp
xchg
jge
fldenv
xor
adc
cs
fwait
jne
cmp
xor
inc
mov
adc
imul
push
fucom
push
adc
mov
sbb
mov
lea
sti
cmpsb
mov
pop
xchg
dec
xor
pop
dec
rcr
movzbl
and
inc
icebp
andb
add
fwait
dec
or
in
mov
or
in
leave
or
and
cwtl
mov
pop
mov
dec
add
roll
popa
adc
xchg
lods
repz
sub
mov
or
dec
aam
xchg
in
xchg
sbb
sarb
or
leave
insl
push
in
movups
shll
fadds
jnp
ret
dec
sub
sbb
outsb
cld
mov
adc
call
and
fildll
hlt
add
jbe
je
cmpl
loopne
and
faddl
add
sub
shl
xchg
adc
in
enter
jne
fstps
dec
imul
movsb
and
xchg
dec
fidivrl
or
xchg
or
lock
cld
call
negl
rclb
js
in
mov
cmpsb
mov
test
lret
rcrl
loope
dec
enter
xorl
lock
inc
test
inc
shrb
loopne
jl
or
sbb
adc
xor
adc
sub
adc
xor
dec
es
cmp
dec
es
fs
dec
fs
fwait
xchg
push
es
sbb
or
jl
add
rol
pop
jb
fistps
enter
xor
faddl
xchg
scas
add
xchg
test
xor
stos
in
pop
xchg
mov
xor
inc
in
jmp
xchg
imul
mov
in
sub
enter
rclb
xchg
sbb
in
xchg
sub
cmp
insl
xchg
call
inc
xchg
bound
xchg
dec
and
xchg
lea
std
jmp
cmp
fs
dec
leave
adc
cmp
mov
xorb
jmp
dec
push
cmp
aad
or
mov
adcb
rcrb
rolb
or
movsl
imul
mov
in
imul
call
mov
sub
or
fcoms
mov
inc
fcoms
inc
insl
adc
inc
jo
add
jns
insl
mov
jb
pop
sbb
daa
mov
outsb
orl
push
in
aam
sub
cmp
and
sbb
or
sahf
dec
adc
jnp
aad
cmp
addb
jnp
jns
or
mov
mov
out
sahf
cmpsb
push
insl
mov
out
sub
sbb
sbb
adc
jno
shlb
andb
out
cmpb
or
into
dec
clc
out
mov
mov
dec
adc
sbb
mov
repz
cwtl
cmp
fcom
popa
mov
adcl
or
push
lea
test
js
sbb
aad
fmull
out
shrd
mov
leave
leave
enter
stos
push
aad
adc
adc
sub
popa
dec
inc
cmp
lods
cmpsb
adc
push
adc
shl
insb
pop
mov
pop
and
cmpsl
or
jbe
xor
inc
fmul
adc
xchg
sbb
nop
pop
and
dec
xor
leave
stos
dec
leave
mov
push
push
sbb
pop
das
pusha
push
inc
mov
in
jmp
mov
add
lea
fisubs
mov
mov
das
pop
imul
movsb
sbbl
nop
daa
inc
push
mov
xchg
jne,pn
and
push
mov
loop
fwait
inc
test
mov
push
andl
lock
inc
sbb
sbb
pop
and
loop
pop
cltd
push
mov
push
mov
mov
pop
add
daa
mov
addl
test
or
cmp
pop
pop
mov
adc
fwait
in
pusha
cltd
fs
add
je
adc
sbbb
sbb
int
xchg
xchg
les
mov
jl
pop
mov
cmp
das
dec
pushf
and
adc
xchg
add
pop
xor
push
cmp
or
add
xchg
sbb
adc
mov
arpl
leave
xchg
enter
jne
jl
push
imul
mov
xchg
aam
pause
mov
jmp
dec
movsb
add
stos
add
dec
push
stos
xchg
jo
or
xchg
idivl
test
add
daa
mov
in
sbb
add
cs
imul
nop
and
xchg
pop
imul
pop
xor
and
enter
jno
or
xchg
or
or
or
lea
loopne
or
dec
lods
test
mov
aaa
ja
push
test
cltd
or
pop
dec
unpcklps
push
dec
inc
inc
or
push
mov
jns
push
pusha
or
test
adc
es
inc
xlat
test
pop
shlb
mov
ret
lret
jno
add
sub
in
lcall
sbb
das
inc
fmull
jl
adc
fwait
cmp
insb
mov
js
imul
fs
xchg
add
pop
pop
add
add
out
nop
int
sets
movsb
adc
xor
and
adc
std
mov
in
mov
mov
push
imul
std
bound
adc
rolb
nop
jmpw
or
cs
movsb
inc
cltd
or
mov
andb
shl
rclb
shll
mov
lds
jge
fmull
cmp
addr16
outsl
push
lret
shl
xchg
sahf
pop
adc
insl
mov
int3
dec
pop
or
push
jns
enter
leave
leave
leave
insl
mov
int3
enter
leave
leave
sarb
mov
cwtl
mov
pushf
iret
nop
dec
mov
dec
xchg
pop
shlb
movsl
push
das
mov
sbb
cltd
mov
movsb
sub
or
mov
push
xor
dec
push
add
pop
or
xchg
aam
repnz
mov
mov
rcrb
xchg
nop
pop
mov
jmp
cs
movsl
lods
lods
sub
add
mov
imul
xor
or
fdivl
or
xor
in
cmp
rorl
mov
leave
or
sti
lock
add
inc
inc
jnp
loope
mov
adc
cmp
orl
pop
or
add
movsb
xlat
and
or
and
aas
xchg
adc
fstpl
dec
mov
mov
call
mov
sub
popa
xor
scas
je
aaa
and
push
shrl
push
out
aas
pop
push
popa
mov
add
rclb
adc
dec
int3
jmp
inc
enter
sub
roll
popa
jb
sti
adc
pop
loopne
and
cmpsb
push
xchg
dec
lcall
cmpsb
mov
mov
pushf
inc
movsb
inc
dec
sbb
test
sbb
sub
enter
cmp
add
movsb
mov
enter
inc
mov
pop
push
and
mov
imul
cwtl
sbb
int3
fcmovnbe
sub
mov
pop
mov
lods
inc
test
bound
jbe
push
adc
aas
fmuls
push
or
and
adc
mov
xchg
cmp
inc
xchg
mov
rcll
adc
xor
xlat
jo
inc
test
adc
dec
in
adc
inc
movsb
lret
xchg
pusha
adc
cwtl
adc
mov
popa
stc
push
mov
stos
adc
adc
dec
sbb
pop
stos
jne
cmp
and
or
out
and
test
cs
and
leave
inc
push
test
inc
lret
sbb
lds
adc
mov
movsb
shrl
jecxz
jmp
in
ja
sbb
movsb
int3
shll
mov
xor
mov
fsub
lea
mov
dec
push
lods
in
addr16
loop
inc
jo
cmp
test
and
inc
or
sub
aaa
or
fwait
loopne
mov
xchg
mov
adc
mov
xchg
inc
es
test
fs
xor
inc
sbb
inc
sahf
or
imul
or
push
add
scas
test
inc
inc
mov
or
cmp
and
mov
xchg
xchg
push
lods
das
insb
std
pushf
std
mov
and
jmp
test
xchg
mov
jae
xchg
dec
fwait
in
xchg
test
cwtl
mov
cmp
and
test
loope
cmc
dec
pop
and
adc
jns
inc
mov
sub
jb
in
inc
mov
pushf
cwtl
mov
adc
test
fadds
stos
pop
inc
jge
lods
adc
mov
or
pushf
mov
ficoml
mov
stos
andl
mov
lea
add
int
sub
inc
push
add
inc
mov
mov
mov
mov
and
xchg
sub
stos
rolb
es
pop
mov
lret
loope
nop
test
loopne
jns
lods
xchg
jo
shll
mov
and
outsl
mov
adc
sbb
mov
popa
mov
or
mov
fdivs
mov
sub
rcrb
and
push
mov
pop
and
bound
mov
insb
test
rcrb
sub
loope
dec
lcall
nop
push
or
xchg
out
adc
inc
in
pusha
out
ret
sub
arpl
int3
xchg
sarb
mov
test
mov
mov
outsl
mov
push
pop
punpcklbw
sbb
adc
js
xor
mov
fcmovnu
sub
dec
xor
clc
mov
les
inc
push
cmp
enter
adc
add
in
mov
xchg
or
roll
dec
fcoml
mov
jecxz
sbb
lods
addr16
mov
insl
rdpmc
push
inc
cmp
sarb
stos
adc
and
mov
sbb
xchg
das
add
adc
pusha
mov
pushf
in
outsl
inc
lcall
mov
hlt
and
adc
xchg
les
mov
pop
leave
adc
loopne
in
loopne
imul
jne
popa
rorb
push
jno
int3
sbb
mov
or
inc
push
mov
fwait
shll
fcompl
shlb
mov
mov
cwtl
and
iret
pusha
nop
inc
pop
dec
mov
mov
inc
cmp
mov
in
push
and
or
add
xor
add
in
out
lock
daa
push
mov
add
cmp
sbb
filds
fists
add
sbb
divps
xchg
leave
cmp
add
xor
xchg
push
adc
std
xchg
add
cmp
inc
mov
popf
loopne
push
push
in
mov
idivl
push
gs
xchg
adc
out
xor
inc
outsb
jge
pusha
sub
pushf
inc
inc
inc
and
mov
cmp
mov
fnstsw
lds
or
fsubr
out
out
add
leave
out
adc
mov
jo
or
js
stos
xchg
imul
mov
rol
pop
push
pusha
jnp
cmp
add
adc
mov
nop
or
push
scas
shrb
loope
sbb
sub
sub
scas
pop
je
test
xchg
push
nop
cmp
mov
dec
xor
xlat
push
addb
fwait
in
mov
nop
and
dec
cwtl
pusha
mov
and
push
jno
divl
mov
in
enter
fs
pop
fdivr
ret
shlb
mov
test
pop
cwtl
lret
nop
movsl
xor
loopne
sbb
sbb
lret
les
addb
insl
sbb
repnz
pop
dec
jnp
ljmp
pop
push
bound
movsb
adc
and
cpuid
jmp
and
lds
push
sbb
adc
adc
imul
mov
imul
cmp
xor
sub
or
sbb
sub
xor
call
push
or
and
jb
xor
std
xor
xchg
or
test
adc
insb
enter
fists
add
nop
das
jae
mov
ret
in
jge
xor
test
dec
mov
sbb
add
and
nop
and
cs
mov
add
adc
gs
out
shlb
cmp
pusha
dec
push
fists
and
adcb
aam
add
test
adc
mov
xchg
invd
xlat
dec
xor
in
sti
nop
daa
iret
add
clc
dec
int
fs
xchg
enter
mov
mov
dec
inc
and
int3
mov
int3
test
jo
xchg
cmc
inc
leave
fimull
inc
mov
les
movsl
inc
add
inc
add
push
loop
push
add
ret
punpcklbw
rorb
adc
xor
cmp
lret
mov
or
lret
push
orb
jmp
mov
inc
or
xor
lds
adcb
xchg
test
enter
push
push
test
inc
adc
cmpsb
fiaddl
dec
and
sub
stos
imul
in
loopne
cltd
ficoml
push
jne
jmp
call
sub
inc
insb
or
pop
push
cmpsb
test
call
cmpb
mov
xor
test
adc
dec
dec
fwait
js
or
cmp
mov
inc
aam
in
in
xchg
dec
in
adc
or
or
add
insl
enter
minps
add
fistl
arpl
push
fs
out
outsb
scas
sbb
and
es
add
fsubs
pusha
adc
xor
adc
sub
xor
mov
xchg
dec
insb
sbb
aad
icebp
xor
leave
and
pop
enter
push
jnp
cmp
xor
mov
pop
jl
jne
in
shlb
lods
sbbb
and
lret
xor
mov
pop
adc
push
lahf
push
shll
cmp
pushf
adc
leave
xchg
js
fs
xor
and
mov
fistl
dec
sbbb
xchg
jmp
lods
mov
cmp
add
lea
xchg
orb
cmpsb
test
cld
stc
xchg
add
aad
shll
fistl
in
sub
cmpl
xlat
inc
lds
insb
test
add
lds
cmp
insb
adc
fidivl
add
pop
lock
inc
aam
das
test
aas
or
mov
ffree
add
xchg
movsb
adc
and
push
pop
ret
fldt
les
mov
inc
sub
xlat
fisttpl
add
orl
pop
jne
stos
popf
push
lea
test
int3
adc
inc
repnz
int3
jmp
or
push
nop
add
rorb
lods
cltd
rorb
add
enter
jle
rcl
pop
test
adc
pop
sub
adc
pop
push
test
fxam
lea
mov
xor
push
adc
pop
push
inc
push
lea
and
cltd
mov
bound
mov
add
mov
mov
mov
dec
cmp
lahf
fcompl
test
jb
xor
je
pop
and
inc
mov
test
and
sbb
hlt
scas
cmp
arpl
cmpsb
jecxz
and
pop
pusha
sub
inc
inc
mov
test
addb
sub
sarl
mov
lea
or
hlt
cltd
loopne
inc
pop
pop
jno
aaa
cmp
or
aam
loopne
test
adc
mov
inc
jb
mov
add
je
movsl
jne
xor
stos
mov
mov
and
push
stc
popf
pop
or
jmp
and
cwtl
fwait
push
inc
data16
test
adc
lcall
in
nop
xchg
fcomp
pop
fmull
cmp
sub
xchg
dec
fwait
push
rorb
jo
mov
pop
add
mov
nop
dec
pop
jbe
add
subb
cltd
mov
mov
fs
inc
xor
mov
add
js
and
push
in
xchg
inc
adc
dec
dec
inc
faddl
mov
and
fsub
push
add
ret
mov
andl
inc
cs
add
in
xchg
adc
pop
outsb
leave
pushf
push
xchg
cmp
add
push
push
cmpb
adc
pop
adc
int3
jp
fisttpll
mov
and
imul
sub
outsb
and
pop
push
out
movl
or
movb
test
mov
js
subb
cmc
push
xchg
mov
jp
movsb
mov
push
xchg
cmpb
or
or
imul
sbb
loop
add
dec
adc
mov
or
fsubl
dec
mov
pop
int3
fcom
cmp
fs
repz
dec
aam
jmp
adc
call
clc
push
insb
push
ja
or
loopne
out
inc
shlb
add
js
out
pop
js
mov
ss
cmp
lds
loopne
lahf
out
cs
std
push
sbb
sub
insl
mov
imul
out
push
inc
negl
cltd
jecxz
nop
fwait
and
out
inc
adc
test
inc
aas
xor
mov
mov
ljmp
add
fistpl
or
jnp
cs
in
mov
add
and
sar
dec
and
jnp
or
adc
out
leave
ljmp
jmp
jle
test
push
lahf
out
sahf
and
or
clc
add
and
inc
inc
dec
dec
dec
dec
mov
dec
dec
dec
push
push
jg
sub
pop
popa
bound
gs
imul
jo
jb
je
sar
jne
ja
jns
xor
xor
xor
ss
cmp
sub
mov
das
mov
gs
incl
es
push
or
cmp
rclb
cmpl
mov
adc
xor
jns
iret
cmpl
stc
sahf
pop
push
adc
sbb
je
jb
outsl
arpl
fs
out
sbb
pop
cmp
jb
push
dec
imul
push
ss
gs
xor
cs
adc
popa
and
test
insb
popa
je
outsl
outsb
push
mov
subl
pop
lock
rdpmc
add
rdtscp
push
mov
incl
sub
aaa
insl
mov
mov
loop
inc
outsl
jb
js
je
jb
gs
cmp
daa
clc
mov
add
add
add
das
mov
gs
push
je
mov
popa
jb
mov
andl
imul
dec
xor
arpl
cmp
repz
insl
insl
cmp
dec
and
jns
ja
jnp
add
das
das
adc
push
dec
push
inc
fstpl
push
jl
gs
insl
bound
daa
dec
outsl
jbe
push
fmull
outsl
adc
jo
sub
in
fucom
jne
jne
dec
jne
xchg
mov
jnp
inc
jo
imul
bound
sahf
and
pusha
inc
insb
adc
pushf
jae
cmpsl
xchg
popl
jae
xchg
addr16
push
jne
fs
lahf
mov
outsw
cmpsb
mov
sbb
dec
out
sti
sub
push
jne
xchg
out
into
cmp
inc
ds
popa
das
jo
bound
or
fbld
dec
jno
mov
pop
or
adc
add
push
faddl
mov
orb
inc
xchg
ljmp
and
es
sub
sub
sub
cs
pushf
mov
cmp
pop
pop
cmpsl
test
sub
pusha
cmp
cmpsl
es
jge
jg
cmp
inc
test
jecxz
mov
cs
and
push
pop
or
fdivrl
xor
cmp
jae
cs
fs
jo
in
mov
inc
inc
mov
ficomps
out
jo
insl
and
into
jle
add
jbe
dec
push
push
sbb
mov
fimull
sbb
and
add
stos
int
push
xor
sbb
push
jo
imul
and
jae
insl
pop
mov
je,pn
lods
test
push
idivb
test
inc
and
fs
sub
scas
mov
push
insb
in
pop
xor
inc
popa
and
mov
mov
jne
pop
xor
and
out
pop
cmp
push
xchg
or
xor
mov
push
jo
add
lcallw
push
mov
stos
out
mov
mov
and
or
out
pop
or
imul
push
pop
es
mov
and
push
mov
cmp
push
and
push
adc
adc
int3
fidivrl
popf
jb
loopne
outsl
mov
mov
daa
sub
dec
addb
das
arpl
xor
arpl
pusha
push
sub
mov
fidivs
filds
inc
xchg
insb
imul
out
xor
int3
gs
mov
push
lcall
mov
inc
mov
xor
gs
or
fistps
push
xchg
test
pop
aaa
scas
or
shll
fidivrs
xor
hlt
pop
pushf
or
rorl
dec
test
int3
dec
aaa
ja
outsl
pop
and
push
outsl
ss
fs
lods
pop
and
imul
inc
inc
xchg
rorb
xor
push
sbb
cmp
das
mov
mov
mov
jle
es
or
arpl
jno
lret
cmp
repnz
lret
inc
aaa
insl
jp
rcrl
ljmp
rcrb
imul
pop
or
push
mov
jno
rclb
mov
nop
inc
insl
imul
cmp
mov
adc
sbb
jbe
nop
out
dec
pusha
push
and
pop
push
cmp
add
scas
loopne
or
xor
fsubl
push
jo
cmp
sub
adc
arpl
rcll
sub
lret
inc
sub
pop
mov
dec
orb
pop
cmp
push
and
cmp
cwtl
ja
ds
lods
mov
pop
inc
inc
and
dec
cmp
es
adc
jg
lcall
loopne
lock
inc
add
jge
cmpsl
push
rol
das
lret
jno
icebp
pusha
inc
mov
jg
pop
repz
ret
movsl
add
xorl
jae
jae
push
loop
imul
add
cmpsb
gs
lock
add
add
xor
jg
sub
inc
jae
je
pop
sbb
jnp
pop
add
add
xchg
mov
sub
xchg
outsl
outsb
xchg
notb
adc
add
add
add
pop
stos
mov
add
and
push
pop
pop
or
aaa
test
push
pop
hlt
and
or
pusha
add
repz
add
pop
sub
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
jle
pop
int3
add
js
inc
add
xlat
push
inc
or
js
jo
xchg
out
insl
dec
rorb
sbb
xchg
xchg
lea
mov
mov
pop
mov
jo
es
loopne
or
adc
xchg
push
inc
and
ds
dec
js
or
add
loope
adc
and
loope
adc
dec
pop
test
dec
cmp
orb
cs
nop
out
push
adc
mov
sbb
mov
push
aad
pushf
loope
enter
add
and
inc
repnz
dec
add
test
sbbl
add
addb
ret
push
and
add
pop
add
sbb
pop
fiaddl
add
add
add
stos
pusha
push
mov
mov
pop
add
aaa
inc
push
pop
roll
and
jmp
addb
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
dec
push
inc
cli
clc
stc
cli
sti
cld
and
adcl
shrb
sub
mov
sbb
sbb
sbbb
push
pop
outsl
ja
mov
cs
jae
jb
bound
dec
cmp
ss
popa
mov
in
in
dec
repnz
jmp
mov
mov
outsl
js
push
push
inc
push
imul
insb
gs
lods
xor
out
mov
dec
mov
daa
pop
jbe
mov
and
out
inc
insl
jnp
pop
jns
inc
mov
imul
fcmovnu
and
inc
jb
jns
daa
pop
in
adc
mov
gs
and
pop
pusha
aad
lods
pop
aaa
call
or
cmp
rolb
les
push
mov
sub
jns
imul
pop
pusha
inc
jbe
pushf
push
rclb
lahf
fs
xchg
push
outsb
fisubl
dec
clc
popl
movsl
dec
sti
cmp
push
das
add
and
pop
es
dec
nop
les
lock
sub
pop
pop
pop
push
stos
popf
dec
adc
aas
xchg
add
imul
insb
call
mov
subl
gs
or
xchg
xchg
inc
push
push
push
push
dec
push
shrb
dec
push
jne
repnz
mov
outsb
mov
push
lods
xchg
scas
dec
sbb
addl
imul
call
adc
sub
jae
inc
in
add
fidivl
xchg
jg
popa
fcoms
mov
lods
jns
pusha
push
outsb
aad
mov
mov
mov
daa
xchg
rcrl
jmp
mov
popw
pop
cmp
stc
iret
es
cmp
push
das
push
sub
sub
inc
jl
push
jle
fcmove
cmp
ds
sub
gs
jnp
pop
push
cmp
lahf
xlat
ret
jmp
cmp
mov
dec
inc
dec
pop
pop
shrl
cwtl
jb
sbb
push
jb
pop
mov
cmpsb
imul
push
sahf
sbb
lods
sbb
pop
loopne
and
adc
inc
jo
sub
xchg
jl
lahf
sub
cld
cmp
repz
push
call
cmp
repz
add
jae
cld
inc
sti
push
aam
cwtl
xor
idivb
pushf
inc
push
test
iret
repz
jo
pusha
mov
or
push
dec
outsb
data16
dec
repz
out
push
mov
in
das
push
clc
stc
cmp
jns
dec
dec
push
inc
inc
int3
inc
iret
rorl
les
xor
cmp
repz
sub
sbb
cmp
adc
decl
lock
in
shrb
dec
sub
or
cmp
repz
inc
xor
ds
repz
sbb
std
in
out
sahf
out
shlb
sahf
inc
sbb
cld
aam
mov
xor
cmpsl
pop
mov
pop
aam
lcallw
push
shlb
jns
push
xor
data16
add
or
push
in
iret
bound
fs
sbb
sahf
jns
jb
xor
sti
push
ljmp
sub
add
scas
lock
add
jle
push
insb
cmp
inc
inc
dec
jae
fldenv
mov
sub
divl
sbb
dec
inc
dec
xor
inc
dec
enter
dec
dec
push
push
loop
and
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
aaa
outsb
fdivr
incl
popa
into
mov
mov
adc
outsb
mov
jae
mov
ds
pop
push
pop
clc
in
stc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
dec
mov
jp
adc
fisubrs
and
iret
mov
xor
iret
imul
adc
inc
inc
mov
mov
sub
fwait
jns
pusha
pop
ss
sbb
pop
jns
ds
xor
incb
mov
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
call
loopne
cmp
inc
mov
xchg
push
pop
mov
ds
and
xchg
dec
xchg
scas
lods
push
push
xor
loope
adc
xor
pop
and
inc
sub
lret
es
mov
flds
sbb
push
pushf
loope
outsb
jbe
and
add
xor
inc
fnstsw
push
movsb
jbe
inc
divl
sub
loop
push
push
inc
dec
cld
iret
repz
dec
push
sub
mov
adc
add
push
cmp
imull
dec
inc
adc
adc
das
addb
mov
adc
daa
adc
cmp
pop
cmp
cmp
cmp
push
das
xor
fidivl
inc
daa
pop
jno
jb
outsb
mov
cmp
add
and
add
cmp
out
mov
pop
xor
aas
daa
inc
push
push
inc
pop
sub
push
pop
push
adc
and
pop
cmp
bound
decl
sub
push
ljmp
add
ds
sahf
loopne
es
cmp
cmp
pop
pop
das
sbb
push
push
push
outsb
pushl
clc
xlat
xor
push
cmp
push
and
push
dec
xor
ds
repnz
fistps
pop
cmp
push
xor
push
cmp
ds
cmp
or
inc
ret
andb
mov
push
push
aas
push
or
push
xchg
scas
add
sub
push
add
sbb
dec
je
fisttpl
dec
cmp
push
add
and
add
inc
mov
sbb
pop
cmp
pop
ds
inc
inc
sbb
cmp
and
das
sbb
xor
cmp
and
ds
dec
and
cmp
cmp
pop
clc
xchg
mov
jle
xor
das
pop
inc
dec
or
add
sub
sub
repnz
push
mov
jb
mov
sbb
and
fcomip
inc
add
jae
xchg
inc
and
push
or
pop
push
sbb
pop
xor
cmp
inc
mov
es
adc
pop
in
add
dec
push
mov
sbb
dec
and
pop
and
lds
push
xor
pop
mov
cmp
sub
ljmp
or
push
adc
dec
cwtl
in
push
cmp
mov
daa
lock
jne
jg
repz
subl
lea
push
lahf
daa
ds
repz
sahf
ret
loopne
jns
imull
aam
fsubr
cli
repz
loop
lock
sarb
loop
and
idivl
sub
pop
shl
aas
scas
add
and
scas
and
adc
adc
push
popa
push
aad
mov
inc
popa
outsb
mov
inc
test
push
push
xor
addl
cmp
push
xor
cvttps2pi
push
or
sarl
movaps
out
sub
repz
out
mov
iret
repz
aas
push
push
jno
lods
cmp
repz
fisubs
notb
stc
push
sub
sub
pop
or
sub
push
sbb
int
cmpsb
lds
push
adc
add
mov
pop
add
xlat
xor
sbb
dec
adc
ss
aas
adc
js
scas
push
push
jnp
jbe
mov
inc
pop
push
out
ja
inc
dec
xor
cmp
inc
and
xor
nop
pop
or
cmp
xlat
repz
xor
push
sub
cmp
sahf
mov
push
pop
cmpsb
aas
pop
cmp
fdivr
stos
data16
push
jmp
dec
cmp
cwtl
fnsave
add
jb
adc
lds
push
insb
push
adc
clc
fcomps
dec
push
cmp
or
xor
sbb
sub
sub
or
aas
jp
daa
sbb
xor
or
mov
out
add
nop
test
out
pop
ja
push
sti
shlb
sub
ret
fsubl
cld
xor
out
pop
add
scas
sysret
sbb
dec
inc
add
mov
jge
fs
shll
scas
push
dec
xorl
pop
mov
daa
daa
push
xor
ret
sahf
push
inc
xor
ret
adc
add
pusha
sub
int
push
cs
adc
adc
out
mov
das
push
cmp
cs
sub
push
pop
push
add
ret
inc
pop
adc
loope
cmp
push
xor
dec
push
and
mov
cmp
xlat
test
fistpll
dec
daa
lahf
icebp
xor
pop
add
push
data16
and
testl
sbb
outsl
scas
add
sbb
aas
xchg
adc
or
cmp
aas
divl
clc
daa
adc
insl
push
cwtl
add
pop
pusha
pop
ss
outsl
es
icebp
in
xor
and
cmp
jbe
into
aaa
daa
push
and
dec
xor
es
adc
add
or
sub
into
das
das
xlat
cmp
sbb
dec
ret
xchg
mov
xor
dec
and
mov
push
adc
add
mov
xchg
ret
pop
adc
shl
fs
js
cmp
shll
dec
pop
filds
loopne
add
aas
add
and
xchg
jle
in
dec
dec
orl
fwait
dec
xchg
push
push
in
dec
pop
ss
inc
push
add
lock
sahf
push
gs
add
dec
xchg
jbe
int
hlt
test
cmp
adc
aas
adc
and
ds
sub
pslld
ss
bound
sbb
addr16
add
in
insb
sub
sub
push
sub
dec
add
push
push
or
loopne
add
mov
push
das
daa
pop
xor
repz
pop
dec
adc
ja
xor
scas
mov
cmp
xchg
cmp
ret
add
xor
mov
addb
pop
jg
aas
mov
and
aaa
sbb
push
sbb
mov
loopne
fisttpll
add
or
loopne
mov
and
sbb
dec
cwtl
lock
jns
or
stos
add
js
sub
adc
mov
addb
ja
and
xchg
int3
jg
mov
imul
cmp
push
pop
outsl
jo
or
sbb
push
ja
pushf
mov
outsb
mov
sahf
ja
repz
cmp
mov
lahf
out
push
sub
mov
lods
fwait
add
sbb
add
xchg
outsb
pop
cmp
and
insb
and
or
repz
sub
or
mov
push
mov
dec
or
test
dec
sbb
push
pop
push
inc
push
sbb
mov
mov
lahf
cmp
mov
out
cmp
aad
sbb
sbb
sub
pop
dec
xor
ja
rcll
dec
and
sub
in
pop
pop
cmp
jo
pop
xor
or
or
mov
inc
xor
iret
mov
mov
sub
pop
jge
shl
jp
out
push
pop
push
xchg
add
mov
cli
pop
mov
add
dec
pusha
int
fisttpl
inc
dec
push
popa
ret
pop
mov
fisubs
xor
adc
les
push
popf
jb
out
push
rolb
cmp
out
outsb
aaa
cmp
add
adc
sbb
loopne
mov
and
push
repnz
push
fs
jl
and
pop
push
ret
sub
pop
jmp
add
out
dec
daa
dec
adc
ret
dec
sub
inc
inc
cmp
or
dec
jae
into
les
mov
popf
imul
sub
bound
cmp
pop
cld
divl
push
das
xor
xor
dec
in
loop
dec
sub
jae
stc
pop
jnp
sub
sbb
sub
adc
dec
aam
les
inc
addr16
out
and
sub
dec
push
das
cmp
xor
dec
fsubl
je
data16
push
mov
arpl
fldl2t
hlt
dec
push
jb
add
cmp
imul
push
hlt
fwait
in
sti
mov
scas
push
fwait
xchg
dec
xchg
sbb
bound
pop
inc
add
cmp
cmp
xor
add
pop
pop
cmp
push
inc
xor
inc
dec
adc
dec
es
push
inc
mov
das
cwtl
xor
out
clc
cmp
cmp
and
and
aas
push
sbb
xor
mov
add
xchg
jle
popw
add
int3
push
jle
pop
and
push
push
push
into
inc
dec
add
add
mov
mov
mov
add
fsubrl
or
or
into
popa
popa
and
daa
and
sbb
xchg
enter
insb
or
cwtl
cmp
dec
mov
int3
add
pop
push
ret
pop
out
pop
add
repz
jmp
repnz
push
iret
sbb
sub
cmp
mov
sbbb
push
jg
loope
pop
xor
jbe
dec
sbb
inc
push
pop
jge
dec
leave
cmp
cmp
out
es
inc
sbb
push
push
daa
stos
stos
sbb
fiadds
lock
cmp
xor
pop
and
sbb
test
fnstcw
out
mov
sbb
inc
inc
sub
das
cmp
ss
das
add
push
das
aam
dec
test
xchg
aas
into
adc
daa
xor
pop
ds
mov
outsl
push
adc
add
pop
push
pop
sub
in
and
push
icebp
nop
pop
daa
jecxz
mov
cmpsl
popf
push
fldl
sbb
mov
in
mov
out
push
inc
loop
imul
divb
pop
out
add
daa
inc
cmp
and
or
push
jo
pusha
pop
jo
add
mov
and
aaa
add
call
aaa
or
sub
or
jo
add
pusha
mov
das
dec
cwtl
pop
or
pop
dec
outsb
in
inc
dec
jnp
inc
andb
push
outsb
xor
cmp
and
scas
push
in
sub
mov
adc
dec
add
cmpps
push
pop
push
pop
aad
cmc
and
dec
mov
mov
jno
dec
xchg
pop
js
adc
dec
lcall
sbb
js
popa
fisubs
pop
xchg
cmp
clc
sbb
cmp
out
popf
loope
cmpsl
mov
dec
mov
ds
cmp
xor
sbb
add
mov
pop
mov
and
fisubrs
sub
sbb
outsl
push
jecxz
out
test
push
fsubs
and
xor
pop
adc
pop
pop
jp
notl
sbb
out
or
pushf
jnp
sbbl
and
push
jns
daa
or
adc
push
sub
add
inc
pop
xor
das
outsb
inc
cmp
cmp
pop
pop
sub
sahf
pop
cmpsb
aas
pop
enter
int3
sub
and
add
cmp
inc
sub
ds
mov
push
push
loopne
jmp
outsl
xchg
inc
fs
aaa
pop
subb
sub
sbb
jg
cmp
xor
cmp
push
or
inc
pop
cmp
cs
push
push
sub
push
lods
loopne
mov
xor
cs
or
push
pop
int3
add
jo
subb
add
inc
sub
loope
xor
xchg
and
fs
jnp
xor
jg
lret
jae
sbb
insb
sbbb
cmp
nop
int
out
or
pop
adc
jae
dec
sbb
in
add
sti
dec
and
hlt
cmpsb
pop
dec
sbb
cwtl
xchg
mov
xor
jp
fidivrl
pop
and
fiadds
push
cmp
das
adc
add
push
adc
daa
cmp
insl
addr16
cmp
pop
or
cmp
movsb
loopne
mov
adc
jge
mov
mov
in
cmp
nop
dec
mov
imul
cmp
push
jnp
mov
adc
jbe
adcb
loopne
mov
out
cmp
das
daa
mov
jmp
jge
int
nop
and
xchg
out
pop
mov
mov
sub
cmp
add
sbb
add
push
adc
dec
cmp
sbbb
out
pop
inc
cmp
mov
std
and
mov
pop
pop
and
and
dec
dec
pusha
dec
test
aaa
dec
cmp
or
cmp
sbb
stc
js
das
xchg
fstpl
pop
sub
out
loope
sbb
and
sub
sbb
lds
push
lods
jnp
sub
pop
xor
pop
or
aaa
adc
sbb
loope
insl
sbb
bound
and
inc
inc
imul
cmp
rcrl
cmc
addr16
and
dec
sub
scas
push
insl
sbb
mov
sub
das
push
pop
xor
cmp
data16
adc
xchg
pop
nop
push
adc
pop
push
fisttps
cmp
inc
sbb
or
push
push
sbb
add
inc
push
push
adc
xor
fidivs
or
scas
sbb
aas
and
xor
jnp
inc
lea
aas
dec
loop
or
cmpsl
push
shlb
pop
daa
ja
or
pop
daa
add
shlb
sub
sub
push
and
sti
jne
pop
or
sbb
sub
xorb
push
dec
cwtl
sbb
mov
mov
or
xor
mov
dec
inc
sbb
mov
sub
adc
mov
xor
inc
roll
inc
push
adc
dec
push
or
push
pop
and
add
mov
push
or
sub
fbld
rclb
mov
adc
or
sub
insb
gs
cld
mov
je
imul
jmp
adc
subb
int
test
in
movsb
dec
push
fisubl
fsin
push
dec
push
inc
inc
add
push
push
dec
push
ret
fwait
int
push
dec
push
ss
mov
fsts
stc
outsb
mov
sbb
push
jbe
or
jl
jecxz
adc
adc
pop
lcall
bound
sbb
push
fcoms
js
ds
push
dec
dec
jne
psraw
lds
shlb
mov
mov
daa
jg
jg
push
and
mov
add
adc
mov
mov
lods
pop
dec
movsl
enter
std
decl
push
mov
inc
push
insl
ss
adc
cli
mov
sub
std
mov
jae
sbb
mov
sbb
mov
fsin
test
ds
pop
sbb
xor
mov
inc
xor
mov
sbb
enter
mov
pop
dec
xchg
pop
shl
dec
push
add
mov
pusha
pop
adc
adc
nop
push
and
xor
aaa
xor
cmp
pusha
dec
scas
int
mov
mov
jp
pop
push
insb
inc
jb
fldt
fadds
imul
jl
leave
jae
pop
insb
sub
pop
jb
dec
cmp
sub
repnz
cmp
sbb
or
xchg
out
cmp
and
dec
dec
sahf
dec
dec
fmul
dec
mov
inc
mov
mov
jo
jl
xor
push
dec
pop
mov
loop
clc
or
sub
mov
ljmp
jnp
cmp
xor
sub
sub
xor
or
xor
xor
inc
pop
xor
add
sub
jbe
adc
pop
mov
imul
das
js
xchg
imul
add
sbb
dec
jp
out
push
or
xor
sbb
clc
lret
cmp
bound
je
bound
mov
inc
daa
pop
insb
push
loopne
inc
mov
sub
adcl
mov
addl
xchg
pop
loopne
xlat
pop
adc
inc
sub
inc
jae
bound
push
push
lock
and
xor
cs
out
das
cmp
enter
outsl
sbb
ficomps
sbb
repnz
rcr
add
daa
adc
inc
mov
sbb
nop
outsb
and
pop
test
or
push
pop
adc
inc
pusha
or
mov
mov
es
jb
push
shll
and
lahf
jno
mov
inc
jns
lret
loopne
push
loope
dec
dec
sub
pop
loopne
push
adc
cwtl
jae
ret
cmp
push
call
add
adc
in
das
idivl
pop
or
xchg
xor
add
dec
fs
push
repnz
mov
xchg
xlat
repz
fadds
add
jl
pop
adc
dec
ds
lahf
mov
outsl
iret
rcrl
fimull
lods
mov
push
popf
fisubl
mov
push
dec
insb
leave
fwait
jge
test
mov
insb
mov
sub
dec
push
or
test
ja
mov
mov
out
pop
ja
add
cs
cltd
push
stos
add
ja
ljmp
xorl
mov
scas
enter
push
mov
iret
imul
lds
insb
ss
imul
cmpsb
call
mov
sub
lret
lods
aam
repz
cs
push
jne
test
sbbl
iret
sarl
in
test
dec
lea
loop
rcrb
pop
aas
clc
aaa
sti
mov
inc
xchg
xchg
daa
lods
dec
mov
lea
pop
sahf
aaa
mov
iret
repz
aas
xchg
inc
push
xchg
outsl
idivb
push
incb
gs
pop
orl
xor
out
push
cmpsl
call
xchg
test
jb
cwtl
stc
fsubp
jns
sti
leave
push
xchg
cwtl
jge
xor
nop
fistpll
and
lcall
push
in
lea
jns
pop
xlat
mov
jge
mov
ss
es
mov
es
jns
sub
lcall
lcall
cmp
out
or
lods
lock
iret
repz
ja
mov
ds
cmp
pusha
out
out
and
and
cmpsl
stc
cmp
sbb
mov
mov
or
movb
insl
out
sahf
out
scas
aad
ss
jns
jge
xchg
aam
or
and
pop
jb
sarl
lods
aam
push
xchg
pusha
bound
aas
or
clc
jg
jg
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
call
popa
stc
push
mov
xor
adc
mov
das
jbe
mov
scas
int
mov
leave
mov
pop
in
loop
and
push
pop
mov
add
idivb
adc
sar
mov
push
and
pop
sbb
enter
adc
iret
decl
xchg
inc
repnz
iret
pusha
or
cs
add
jp
push
add
inc
sub
pop
inc
addr16
outsb
push
push
jae
popa
and
pop
inc
pop
aas
inc
push
aam
sbb
sub
inc
sbb
sti
add
or
aaa
push
fisubrl
jnp
cmp
jae
mov
xlat
push
pop
jp
cmpl
jae
dec
cmp
imul
or
cmpsb
dec
add
xchg
ret
imul
insb
mov
push
dec
pop
je
push
scas
xor
fisttps
jp
enter
das
push
loop
fsubrs
sbb
pop
jbe
iret
push
jno
sbb
retw
mov
or
dec
mov
fwait
lock
mov
pop
push
xchg
mov
jns
dec
js
push
js
repz
and
push
ds
add
adc
nop
es
insl
jo
out
pop
insb
stc
sti
leave
mov
popa
jo
jae
es
outsl
fnstcw
cmpb
sub
mov
and
and
cmpsb
mov
lcall
or
cmp
xor
xor
xor
mov
and
xor
push
xor
xor
cmp
push
add
add
fistl
or
and
pop
mov
adc
push
cmp
cmp
mov
bound
dec
or
in
jae
push
add
mov
cmp
das
dec
or
jne
inc
xor
cmpsb
fwait
mov
cmc
call
es
push
sub
add
add
sub
sbb
mov
out
add
cmp
or
sbb
jp
mov
jb
das
sbb
xchg
fnstsw
das
mulb
pop
mov
inc
ss
shlb
xchg
cmp
add
ss
pop
add
js
push
mov
data16
repnz
push
mov
daa
das
dec
mov
mov
ret
and
sbb
das
jnp
ret
and
sub
or
sbb
inc
jae
mov
aas
sbb
push
or
push
cs
dec
divl
imul
push
fldt
xchg
sbb
xor
popa
cmp
push
aas
push
jbe
push
aaa
inc
sbb
cmp
mov
xor
aad
daa
mov
sub
movsl
xor
nop
dec
mov
or
mov
push
xor
add
dec
andl
and
aad
std
aaa
xchg
fdiv
movsl
xor
pop
insl
pop
inc
aaa
lahf
ss
push
xchg
ljmp
mov
daa
mov
sbb
lock
stos
adc
inc
xchg
lods
daa
add
lock
jge
mov
or
mov
inc
divl
iret
and
mov
add
lods
mov
ret
push
insb
pop
test
mov
mov
popa
daa
mov
mov
pop
xchg
or
icebp
mov
ss
pop
daa
mov
sbb
icebp
into
repnz
adc
push
ret
sub
and
loopne
inc
cmp
push
dec
adc
push
lods
lods
mov
scas
pop
rcrl
cltd
daa
lahf
pop
xchg
add
popl
xorb
pop
addr16
push
add
jg
loopne
ficoms
les
fsubrs
push
daa
mov
push
ret
fstp
and
mov
inc
imul
add
outsl
or
mov
adc
lods
daa
add
outsl
jb
adc
js
inc
xor
jl
jl
int
ret
enter
imul
or
fildl
cmp
jo
int
or
sub
xchg
adc
insb
jmp
inc
ja
cmpsl
call
ret
and
insl
and
inc
dec
mov
adc
in
sbb
sbb
pop
loope,pn
dec
lds
je
loope
scas
jle
and
cmp
das
push
xlat
or
or
cmp
add
inc
mov
push
xchg
data16
cmp
mov
mov
push
sbbb
xchg
sbb
pop
mov
and
add
fdivr
dec
adc
adc
xor
pusha
adc
pop
dec
clc
dec
sub
cmp
negb
xchg
das
fisttpll
fwait
cmp
pop
mov
in
add
lds
bound
mov
insb
icebp
push
inc
dec
xchg
das
inc
dec
add
dec
xchg
dec
fistpl
inc
add
add
xchg
or
fcomip
xor
call
or
push
cmp
sub
fwait
das
loop
icebp
adc
rclb
or
dec
ret
daa
gs
dec
sub
add
test
cmp
call
mov
and
fmuls
and
rcll
add
add
aas
add
es
jbe
ficoml
mov
je
sub
bnd
fildl
sub
add
idivb
push
ljmp
and
sub
in
push
movsb
lods
pushf
push
and
lods
mov
int3
ss
add
adc
or
repnz
ss
imul
dec
sbb
popa
mov
dec
adc
mov
sbb
ss
lcall
mov
mov
xor
lods
pop
pop
xchg
dec
pop
insb
ss
mov
dec
shlb
orb
or
sbb
loopne
adc
sbb
add
cmpsb
pop
fsubrs
xor
or
mov
xor
and
and
mov
pushf
inc
xor
cmp
es
gs
sahf
nop
jbe
mov
sbb
daa
aam
sub
js
loop
push
daa
dec
cmp
adc
cmp
cmpsb
les
aas
rcrl
xor
cmp
pop
and
inc
mov
pop
cmp
jbe
test
cmp
pop
incl
sub
add
mov
mov
jmp
xchg
pop
and
popa
fs
add
and
in
dec
movups
mov
out
popa
adc
push
sbb
sahf
out
inc
push
addr16
jl
mov
cltd
or
xchg
add
pop
push
add
or
adc
aam
sbb
and
sub
xor
sahf
int
sbb
push
mov
mov
fwait
in
mov
inc
shlb
add
test
fldcw
add
das
or
int
add
and
add
mov
adc
push
push
dec
mov
insb
lea
and
inc
mov
add
add
incl
imul
and
nop
adc
pop
je
cmp
scas
das
jmp
test
xor
push
or
movsl
xor
push
mov
nop
inc
cli
pusha
shlb
cld
call
jbe
fs
xor
push
adc
add
push
pop
jae
dec
andl
pop
pop
adc
push
dec
lods
xor
fiadds
xor
pop
inc
add
jg
lcall
inc
push
push
and
pusha
or
dec
add
cmp
and
lcall
and
or
xor
sub
xor
sbb
sub
or
push
pop
hlt
add
decl
push
cmp
or
pop
sub
sub
adc
in
pop
add
or
add
ljmp
jg
push
add
add
and
sub
dec
sub
add
pop
xor
ljmp
fs
mov
push
xor
add
aas
pop
push
dec
adc
mov
cmp
inc
or
cmp
add
ljmp
pop
push
pop
pop
sub
adc
sbb
adc
and
and
xlat
addl
rcll
enter
arpl
in
test
dec
mov
push
or
fsubs
lds
adc
push
adc
push
dec
sub
or
xor
pusha
and
xor
dec
add
fmuls
ds
mov
cmpb
pop
cs
cmp
out
dec
das
es
xor
sub
push
insb
and
lcall
dec
sbb
out
in
push
outsl
inc
or
push
adc
pop
pop
add
xchg
mov
daa
add
sub
lret
add
push
sbb
enter
inc
push
push
pavgw
inc
jb
add
push
outsb
fs
shrl
loope
pop
push
pop
fcoml
int
call
push
dec
inc
dec
push
dec
scas
add
sub
outsl
xor
mov
sub
mov
inc
aaa
jno
sti
shlb
pushl
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
decl
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
or
outsl
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
lcall
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
cmp
jae
gs
leave
ret
sub
xchg
mov
data16
mov
ljmp
call
cltd
test
push
push
shll
ja
daa
mov
cli
ljmp
shlb
stos
fmuls
lret
rep
cs
out
cmpsb
arpl
test
add
mov
mov
movsb
mull
jno
addr16
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
ja
mov
xor
dec
inc
and
sub
aas
inc
jb
push
js
loopne
decl
js
imul
dec
inc
arpl
push
cmp
daa
ljmp
ds
je
outsb
or
and
pop
sub
jno
popa
cld
pushl
imul
push
insb
and
push
cs
dec
cmp
or
dec
jg
push
pop
xor
push
or
dec
adc
arpl
xchg
or
cmp
mov
dec
aad
xchg
aaa
imul
mov
pop
daa
ds
push
jg
lods
out
pop
dec
pop
and
or
adc
ds
xor
push
aaa
push
xor
inc
add
xor
xor
xchg
fldt
push
inc
add
inc
into
mov
add
das
aaa
inc
push
inc
cld
xor
inc
ss
cmovb
pop
add
mov
ss
add
scas
aad
and
enter
inc
test
ret
sbb
xchg
dec
pusha
mov
or
sub
pop
xor
cmpsl
xor
dec
repz
or
inc
pop
and
fxch
into
test
scas
bound
and
das
inc
push
push
fsubl
push
inc
xchg
fistpl
out
mov
arpl
imul
orl
mov
hlt
aam
test
mov
xchg
jle
cmp
dec
and
cmp
mov
bound
push
xor
sbb
shrb
sbb
inc
xor
addl
adc
aaa
push
aas
jp
mov
pop
cmpsl
inc
mov
fdivl
daa
bound
stos
daa
adc
sbb
sub
sahf
push
mov
in
adc
popf
push
sbb
stos
fadds
mov
es
sub
adc
mov
adc
das
sub
dec
adc
cmp
sbb
push
inc
daa
jge
inc
xor
cmp
roll
rorb
inc
orb
adc
dec
xchg
add
popf
xchg
call
daa
cwtl
adc
sbb
pop
ficompl
mov
dec
mov
inc
sbb
sbb
sbb
mov
fs
dec
adc
scas
aad
xor
sbb
push
adc
cmp
add
sahf
push
test
mov
mov
lds
cmpsb
pop
adc
adc
pop
adc
or
pushf
or
ja
daa
outsb
outsb
je
xor
js
cmp
int
xor
jae
popa
insl
gs
ret
cmp
xor
sarl
cwtl
mov
out
and
inc
mov
lahf
imul
fdivs
insl
loop
pop
push
push
push
xor
icebp
out
testb
adc
dec
push
popa
je
xchg
icebp
push
rclb
loopew
aam
and
mov
adc
idivb
and
dec
push
or
testl
push
jne
jbe
outsb
inc
adc
adc
push
xchg
sbb
insl
lea
pusha
les
lods
push
xchg
pop
adc
add
pop
inc
cmp
es
std
mov
push
jae
pop
sub
xor
cmp
xor
push
xor
pop
mov
mov
push
mov
mov
mov
lds
add
ficomps
pop
and
sbb
mov
push
mov
adc
and
inc
aaa
push
mov
fcoms
bound
popa
dec
inc
pop
mov
ja
jb
pop
cmp
xchg
pop
lds
inc
jne
mov
xor
cs
inc
pop
dec
xor
movsl
sbb
xchg
sarl
lahf
lds
adc
int3
or
test
jge
jg
and
push
ss
mov
push
xor
adc
pop
dec
call
cmp
ja
sub
dec
sub
or
mov
cli
hlt
and
cmc
push
scas
fs
jo
pop
or
push
push
mov
cs
push
outsl
imul
push
and
pop
mov
movsl
pop
inc
pop
pop
add
mov
cmp
cmp
cmp
jns
das
cmp
lods
push
arpl
adc
pop
push
aam
or
loop
andl
ds
inc
lea
dec
cmp
push
lea
sub
xor
inc
sbb
pop
adcb
rorl
leave
mov
push
cmp
lods
sub
lret
adc
inc
mov
sbb
pop
xor
inc
out
scas
pop
mov
dec
movsl
inc
std
mov
pop
xor
mov
inc
mov
pop
imul
and
dec
and
pop
pop
pop
add
scas
aas
pop
cmp
rcrb
pop
xor
mov
sahf
add
mov
pop
dec
pop
movsl
insl
outsl
jae
repz
pop
repz
cs
aad
sub
mov
cmp
popa
daa
test
int3
xor
iret
xor
pop
push
xchg
dec
push
addl
jge
and
sub
push
ret
add
and
sub
push
xor
jae
fildl
mov
and
inc
inc
or
cmpsl
int3
fistpl
dec
cmp
or
in
out
fstps
jmp
push
sbb
dec
filds
add
fs
pop
adc
pop
push
and
addr16
popa
mov
adc
outsl
fwait
sbb
movzbl
movsb
popf
add
punpckhwd
dec
mov
je
scas
pop
add
jecxz
cmc
lcall
push
inc
pop
push
dec
inc
dec
inc
push
pop
mov
dec
xlat
jb
gs
js
cmovae
addl
push
shll
jb
aas
or
adc
lock
mov
inc
adcb
mov
push
out
lret
push
add
sub
add
sub
dec
add
testl
inc
push
inc
add
ret
jb
push
adc
fldcw
sahf
icebp
push
fisubrl
cmp
or
push
or
rolb
jo
call
xchg
sbb
add
pop
lret
cmp
sbb
xor
data16
aad
test
insb
add
push
aam
loop
add
and
pop
xchg
or
inc
and
and
and
adc
push
loope
in
jnp
adc
push
cmc
and
aas
push
and
ss
add
xchg
out
sub
lret
inc
pop
enter
xchg
push
fistps
or
stos
arpl
add
fisubrl
sbb
fisubrl
pop
das
inc
andb
or
pop
xlat
pop
mov
bound
bound
ss
fldl
sbb
add
andb
or
test
inc
xlat
outsl
or
sbb
mov
pop
imul
nop
fmuls
out
mov
jle
divl
push
pop
add
ds
mov
das
mov
insb
dec
add
fucomip
xchg
dec
inc
xadd
sbb
inc
iret
xorl
mov
inc
in
jge
xor
cmp
mov
std
mov
nop
jo
maxps
dec
add
cmp
lock
sbb
fstp
int
das
test
les
cmp
jnp
fsubl
aas
add
ds
sbb
movsb
or
fidivrs
sbb
sub
inc
lods
pop
lods
fldt
inc
add
jne
pop
pusha
cmpsl
ja
lahf
stc
pusha
in
lods
add
daa
mov
movsb
mov
stos
rolb
mov
push
push
inc
aas
mov
stos
pusha
jg
dec
outsl
nop
xchg
stos
sbb
inc
mov
cmp
mov
xchg
sub
insb
call
push
out
ficoml
data16
loopne
push
les
add
mov
out
sahf
out
pop
mov
sti
cmp
push
pop
xor
cld
pop
xchg
mov
jnp
divl
pop
sahf
pop
pop
ds
pop
repz
cmp
mov
add
xor
out
pop
enter
mov
jae
iret
cwtl
jl
push
jo
and
int3
push
add
adcb
jno
dec
inc
lahf
outsb
fisttpl
cltd
push
aam
ss
int
xchg
xor
mov
sbb
and
xor
fidivs
push
sbb
push
jo
out
push
mov
add
pop
jg
scas
jbe
ja
mov
add
jne
pushf
ja
add
dec
mov
dec
outsl
or
inc
pop
enter
sbb
adc
adc
das
dec
push
push
pop
dec
or
leave
mov
add
inc
cs
adc
inc
test
xchg
out
mov
leave
aad
test
xor
testb
cmp
ss
add
inc
icebp
dec
xor
dec
inc
push
mov
pop
pop
scas
add
subb
add
sbb
xor
and
push
xchg
xor
pop
inc
cs
mov
cld
mov
jl
or
push
push
sbb
pop
scas
fsubs
outsl
adc
sbb
daa
push
xor
shlb
xchg
cmp
xor
rorb
or
xor
fs
outsl
sub
fs
pop
adc
dec
sahf
out
mov
add
fadd
cmc
insb
pop
jl
pop
or
dec
xchg
aam
fs
mov
add
rcrb
mov
add
jg
and
pop
mov
inc
mov
add
enter
pop
sbb
fs
sbb
sbbb
add
and
outsl
mov
pop
jb
sub
cwtl
sbb
enter
and
push
xor
pop
pop
scas
add
sbb
push
cmp
shll
out
shlb
cmpsl
add
nop
xlat
lcall
push
insl
andl
aaa
fildl
pop
cld
sbb
test
or
fisubs
add
and
bound
lahf
mov
pop
lcall
test
push
adc
data16
dec
popa
jg
push
fcoms
push
lods
mov
imul
pusha
pop
sbb
sbb
pop
and
mov
adc
cmp
sbb
in
imul
popa
divl
sbb
push
popa
mov
push
push
outsl
jg
jbe
adc
daa
int
pop
test
jne
imull
or
ss
push
dec
cmp
arpl
mov
xchg
jo
popf
nop
orl
sub
or
mov
and
add
and
test
bound
xlat
or
popa
aad
pop
adc
mov
sub
loopne
xlat
or
xchg
cmp
pushf
xchg
xchg
mov
push
pushf
and
pushf
and
push
arpl
adc
inc
cmp
testl
and
jae
outsl
loopne
add
and
jb
jle
and
sbb
jnp
mov
mov
cwtl
push
xor
aaa
pop
ja
or
add
sub
xor
xchg
outsl
addr16
cmp
add
and
cmp
call
mov
dec
cwtl
sbb
xchg
gs
add
jb
mov
es
repnz
xchg
imul
int3
in
sahf
or
in
sub
push
lods
dec
sub
inc
mov
jmp
xchg
sbb
fists
addr16
outsl
add
dec
faddp
ss
fs
mov
cmpsb
mov
roll
les
rcl
enter
xchg
es
pop
or
dec
cmpsl
add
inc
xor
mov
add
iret
daa
push
leave
aad
push
out
aam
or
add
adcl
repz
in
pop
adc
or
imul
inc
lock
je
xchg
mov
sub
or
push
adc
or
or
or
push
lods
push
and
imul
fwait
xchg
es
adc
cmpsb
nop
add
scas
in
leave
add
add
pop
add
push
mov
fcom
stos
loopne
jbe
outsl
out
adc
out
add
cmp
addr16
nop
push
push
mov
stos
or
or
repz
and
fsubrl
in
push
sub
outsb
clc
or
dec
pop
and
repnz
fwait
and
test
cld
xlat
mov
daa
xor
divb
sbbb
insb
push
enter
xchg
imul
insb
inc
or
push
mov
mov
das
shrb
in
andb
in
ja
xchg
fdivl
cld
outsl
lods
pop
add
bound
ds
xor
cmp
test
pop
fcmovbe
data16
jnp
xchg
pop
das
pop
mov
lcall
sbb
or
addr16
outsl
sub
xor
out
pop
jne
fildl
jbe
jns
or
fmull
push
jns
iret
repz
mov
sbb
out
pusha
jnp
fdivr
repz
repz
stos
out
ds
into
jmp
iret
sarl
loope
jge
jns
stc
cmp
ds
es
jns
cmpsl
push
jle
mov
int
subb
popf
loopne
out
ds
sbb
cmpsl
stc
cmp
sub
dec
repz
adc
out
jecxz
test
mov
aad
xchg
push
jno
int
iret
sarl
cmp
mov
fistpll
mov
lcall
push
jl
xor
out
jecxz
mov
sarl
lock
mov
lea
imul
mov
insb
cmp
ds
xchg
and
sahf
cmpsl
stc
push
xchg
xor
repz
repz
xchg
and
out
lcall
dec
sahf
out
cmp
aad
xchg
xchg
out
idivl
and
cmpsl
stc
xor
stc
and
nop
mov
int
lcall
repz
mov
iret
inc
iret
sarl
insb
and
out
ds
dec
mov
out
ds
mov
mov
aas
nop
stos
xchg
mov
jns
inc
movsb
fbld
movsl
jo
int
jns
out
sub
out
imulb
jns
iret
repz
test
fucom
jmp
stos
push
push
mov
iret
repz
xlat
cli
inc
lods
mov
iret
sarl
mov
pop
scas
jb
int
jns
icebp
insl
scas
mov
out
xor
leave
sub
fidivrs
jle
mov
sarl
mov
mov
cs
cmp
ss
out
mov
mov
repz
pop
stos
in
xor
sarl
mov
repz
iret
loop
ret
pusha
ret
les
mov
iret
sarl
repz
pop
jl
out
ss
leave
fxch
dec
int
mov
cmp
xchg
out
shrb
data16
iret
aad
push
push
fcoms
test
addr16
jns
dec
push
rolb
or
pusha
jno
xchg
das
add
add
jbe
cmp
mov
inc
mov
aad
sahf
xchg
out
fldl
hlt
nop
rorl
jp
xor
je
movsl
add
pop
paddq
or
sahf
pop
inc
aas
push
and
test
in
mov
incl
and
and
ret
push
mov
or
adc
or
scas
jbe
pop
mov
inc
pop
dec
enter
push
dec
mov
into
mov
es
sub
dec
outsb
dec
inc
or
and
out
jle
fldenv
xorb
jbe
xchg
pusha
mov
outsl
aaa
leave
mov
dec
and
sbb
fistpll
cmp
mov
ss
mov
dec
mov
mov
inc
cmp
inc
sarb
loopne
dec
sbb
push
or
pop
jmp
sarb
out
ss
les
mov
pop
enter
xor
cmp
std
stos
jmp
fstpl
insl
push
ja
push
scas
push
mov
sarl
add
mov
pop
push
aaa
je
pop
iret
pop
push
jbe
fs
daa
je
mov
add
mov
inc
in
push
dec
outsl
mov
ficompl
cs
push
psllq
idivl
jb
daa
adc
lahf
and
xor
cmp
test
enter
adc
sarb
sbb
jns
dec
outsl
add
and
mov
ljmp
je
incl
jg
dec
pop
cmp
mov
cmp
or
push
popf
mov
pop
js
pop
pop
jle
negb
inc
enter
popf
jb
add
das
mov
sti
jne
dec
xchg
sbb
leave
or
cld
js
jns
dec
push
mov
cmp
fs
and
mov
in
mov
je
push
pop
push
push
push
cli
jnp
jl
pop
loope
inc
pop
xchg
jp
add
jns
add
mov
out
push
daa
int3
push
add
xlat
es
jp
fistps
and
mov
xchg
sbb
mov
and
fwait
mov
mov
and
roll
jnp
jnp
xor
mov
enter
jnp
cltd
jnp
jl
sbb
xchg
jno
add
addr16
xlat
mov
add
jnp
je
in
jnp
sahf
fldcw
adc
clc
in
inc
or
and
scas
sbb
pushf
dec
push
in
mov
sarb
mov
pushf
in
sbb
jge
jge
dec
es
gs
add
mov
jns
inc
dec
aas
pusha
jl
jl
push
add
jns
out
add
add
sahf
push
mov
or
pop
ja
or
xlat
xchg
and
in
lock
cmp
leave
add
in
jle
jle
inc
repnz
loopne
jge
add
sub
mov
xchg
xor
jge
jge
xchg
mov
xchg
pushf
cmp
cmp
movsb
lods
cmpsb
add
mov
xchg
xchg
xchg
in
cmc
std
and
or
cmp
xor
jle
jle
jle
dec
dec
inc
push
pop
shlb
jae
jae
fwait
cmpsl
mov
mov
into
push
xlat
into
pop
jo
push
mov
jg
push
jg
in
enter
jg
jg
add
and
jg
sub
xchg
cmp
pop
gs
xor
sub
fwait
and
daa
inc
xlat
lock
add
mov
jae
sub
xchg
mov
push
enter
adc
xlat
or
xor
pop
sbbb
adcb
xor
add
aaa
jb
push
addb
and
cmpb
enter
pop
insl
push
hlt
pop
leave
adc
push
inc
xchg
sbbb
inc
cmpsl
mov
and
daa
dec
xchg
xchg
add
mov
cmp
enter
sbb
andb
daa
xchg
addl
in
lds
add
adcl
and
push
daa
xor
orl
subl
or
sahf
xor
xorl
aad
loopne
jmp
or
out
pop
testl
or
sahf
out
sahf
pop
or
jns
out
cmp
inc
adc
jns
out
pop
adc
sahf
out
sahf
je
adcb
pop
xor
loope
sahf
sbb
lods
sbbb
mov
in
test
push
add
cmc
mov
sbb
stos
daa
pop
leave
in
inc
add
or
sbbl
aaa
xchg
push
xchg
add
xchg
xchg
dec
mov
cs
xchg
xchg
xchg
xchg
leave
or
xor
cltd
into
insl
pop
addr16
lcall
cmp
js
incl
pop
leave
jae
cwtl
stos
add
stc
ficoml
pop
mov
add
mov
or
add
sub
cmpl
mov
stc
fdivl
add
incb
test
push
outsl
lock
icebp
mov
pop
mov
gs
inc
aas
add
in
rorl
inc
inc
test
mov
pop
and
in
mov
dec
hlt
and
inc
xchg
fimull
mov
sub
mov
and
mov
mov
pop
mov
cmp
push
paddw
cltd
ja
in
sub
cmp
xchg
mov
mov
pop
addr16
jle
or
pop
jb
nop
mov
rorb
cmp
or
in
xlat
xchg
xchg
scas
jo
add
pop
js
xchg
mov
add
xchg
jno
mov
inc
jb
in
xchg
xchg
lcall
push
add
mov
fisttps
movsb
jmp
inc
testl
jb
lea
daa
cmp
and
adc
fsubl
je
xchg
xchg
cmp
leave
mov
mov
jns
orl
cltd
mov
pop
test
mov
mov
pop
pop
leave
mov
mov
mov
mov
mov
mov
pop
bswap
leave
leave
dec
femms
or
leave
or
or
leave
leave
leave
leave
pop
push
add
leave
add
add
stc
scas
mov
sbb
daa
push
pop
dec
jb
mov
cmpsl
inc
mov
mov
jae
dec
jb
add
xchg
mov
add
add
je
mov
scas
lods
mov
cmp
inc
xchg
js
nop
out
mov
insl
mov
jge
test
ja
aas
lea
xchg
push
push
popf
movsl
daa
pop
iret
repz
or
jbe
xchg
cmp
fsub
mull
xchg
iret
in
call
or
adc
pop
daa
and
movntps
iret
and
or
pop
or
cmp
and
das
dec
pop
repnz
cmovle
xchg
sbb
dec
lock
jp
pop
push
aas
mov
add
jae
pop
or
out
xlat
loope
pop
or
adc
subb
dec
notl
cmp
mov
mov
mov
daa
daa
mov
xchg
ljmp
fcmovnu
push
scas
or
lahf
adc
and
pop
and
out
inc
push
add
push
jo
jnp
xchg
xchg
das
pushf
cmpsl
mov
in
in
jns
iret
xlat
cpuid
jns
fcmovnu
ja
ja
xchg
mov
or
fisubs
ss
inc
push
dec
pop
push
or
out
bound
insl
or
jns
out
orl
pop
leave
xor
ss
mov
fmul
sub
insb
push
xlat
xchg
popl
cmp
sti
adc
sbb
and
jae
fstpl
sub
xor
cmp
inc
jbe
cmp
dec
or
dec
ss
cmc
fs
decl
xchg
cmp
xchg
xchg
mov
fbld
mov
inc
dec
dec
sahf
fistpl
dec
outsb
mov
repnz
fdivr
cli
clc
ret
add
push
sbb
pop
in
add
fsubrl
jg
mov
in
fwait
je
add
sbb
xlat
or
mov
in
inc
mov
jb
mov
mov
in
outsl
daa
mov
lret
nop
rorl
jne
nop
mov
decl
nop
push
dec
sahf
and
add
pop
popa
xchg
xchg
imul
xchg
xor
xchg
lcall
addr16
push
enter
addr16
xchg
pop
sbb
and
das
xchg
cmp
inc
mov
pop
xchg
xchg
insb
jle
enter
xchg
out
or
xchg
mov
in
in
into
ftst
pop
fsub
in
cli
in
add
xchg
sbb
in
xchg
push
ds
dec
xchg
push
xchg
mov
jb
xchg
push
jne
adcb
xchg
xchg
xchg
mov
xchg
pop
pop
nop
cltd
lret
and
add
xchg
leave
mov
mov
xchg
jb
inc
xor
out
mov
mov
add
jns
add
push
ret
sbb
shl
adc
xchg
jae
push
push
add
cmp
leave
jo
das
outsb
test
push
das
movb
cmpsb
in
or
les
mov
aaa
addr16
xchg
out
cld
add
in
and
push
add
str
xchg
lea
dec
and
mov
push
or
cmc
in
sahf
or
push
pop
xchg
xchg
dec
ss
xchg
cmp
add
test
jb
mov
popf
iret
pushf
dec
pop
xor
cmp
or
adc
in
dec
cmp
add
movsb
xchg
xchg
xchg
mov
jns
daa
pop
in
fdivs
cmpsl
mov
loopne
jns
add
pop
leave
adc
loopne
push
and
or
adc
lcall
out
pop
mov
dec
aas
push
add
mov
add
fcmovne
xchg
aas
js
sbbb
orl
fistps
add
lret
leave
leave
leave
repz
fninit
das
das
aas
jecxz
cwtl
lahf
repz
sti
cwtl
add
or
bswap
leave
leave
lods
or
or
or
leave
leave
leave
pop
push
add
leave
add
sbb
sbb
cmp
repz
xor
iret
repz
sbb
push
in
jmp
arpl
jns
out
and
and
andb
sbbl
and
je
and
mov
mov
iret
or
add
adc
pop
lar
fiadds
and
add
add
pcmpgtd
cmpsl
push
sub
dec
es
xchg
cltd
lcall
dec
test
daa
cmp
mov
mov
in
in
neg
add
or
fwait
push
repnz
pop
cs
iret
or
mov
pop
das
insl
fwait
iret
jne
add
in
fwait
iret
jge
lea
stos
or
cli
stc
inc
pop
or
xchg
and
mov
dec
sub
scas
jb
inc
inc
mov
fwait
daa
js
cmp
fwait
sti
pop
add
cmp
gs
cmp
pushf
pushf
pop
push
xor
dec
pushf
testl
addr16
out
push
mov
test
scas
pop
jo
shr
jle
mov
xchg
fildl
loopne
xchg
les
and
ljmp
add
cmp
sbb
cvtpi2ps
cmp
mov
pusha
popa
push
add
outsl
daa
daa
pop
fmull
lcall
dec
outsb
ret
fmull
out
or
loop
ljmp
or
mov
adc
or
adc
cmpsb
daa
sbb
jbe
nop
push
cmp
cmp
repz
add
jbe
jns
loop
rcr
push
xchg
out
mov
xchg
pop
lock
inc
mov
out
outsb
mov
mov
fbstp
pop
mov
rorb
scas
into
sahf
cmp
pop
icebp
sahf
push
adc
and
inc
ret
cmp
leave
in
addr16
add
into
addr16
decl
lahf
add
pop
mov
xchg
aas
aam
fmulp
pop
test
or
imul
push
mov
js
ja
pushf
or
out
pop
push
lahf
sub
pop
lcall
add
mov
lar
invd
pop
fmulp
testl
push
or
inc
mov
or
mov
out
imul
jae
pop
andl
repz
mov
jmp
pop
stos
pop
sahf
out
jo
pop
mov
addr16
jns
sarl
mov
jmp
outsl
adc
mov
mov
repz
add
add
add
mov
mov
mov
jp
push
jmp
pop
test
pop
mov
ror
daa
test
jle,pt
mov
stos
adc
inc
dec
call
ja
push
out
clc
addr16
leave
leave
repz
push
mov
out
cmpsl
add
stos
pop
leave
add
aaa
mov
inc
sbbl
sbb
pop
mov
lret
push
loopne
pop
addb
mov
push
aam
xchg
clc
inc
adc
stos
push
add
stos
dec
stos
pushf
pushf
dec
and
into
fldcw
sbb
pushf
in
dec
out
mov
cs
add
sbb
cmp
repz
or
or
das
mov
or
inc
mov
sbb
hlt
cs
mov
dec
mov
cltd
push
lods
push
filds
mov
cs
pop
add
and
sbb
movsb
and
inc
jno
pop
cmp
xchg
in
call
xchg
iret
or
leave
leave
add
sbb
xchg
lahf
cmpsl
pop
inc
mov
pop
scas
movsb
mov
mov
and
bswap
or
add
enter
aaa
add
leave
add
loopne
movsl
iret
mov
cmpsl
mov
int3
daa
adc
jbe
adc
inc
mov
dec
fildl
addps
pusha
cmovs
and
push
inc
xchg
or
jb
scas
push
scas
pop
mov
jg
movsl
mov
push
aas
push
pop
mov
dec
fsubrs
dec
dec
dec
fisubs
pop
out
sub
fiadds
push
or
pop
and
xchg
inc
jns
leave
leave
pop
lsl
leave
jae
jne
push
int3
cwtl
loopne
movsb
cmp
mov
and
das
and
iret
mov
out
xchg
add
adc
push
add
movsb
fwait
cmp
xor
cmpsl
push
jne
out
xorb
xchg
cmpsl
mov
leave
inc
repnz
pop
or
lahf
fcmovnu
add
mov
mov
sbb
outsl
push
lea
dec
daa
pop
pop
push
mov
xor
mov
daa
dec
in
popf
fsubl
mov
jge
out
outsb
mov
setge
movsl
add
sahf
push
mov
add
testb
mov
in
popf
pushf
call
push
test
lea
test
mov
pop
test
xchg
xlat
ja
mov
in
add
das
xchg
out
jecxz
add
fwait
in
negl
stos
mov
cmp
leave
inc
dec
jbe
push
add
jp
mov
aas
into
pop
push
mov
mov
push
mov
sub
add
or
mov
pop
sbb
addr16
movsb
fisttpl
out
out
negb
invlpg
mov
in
stos
push
stos
mov
leave
sbb
push
or
fwait
lahf
js
cs
stos
push
stos
pop
sets
cli
inc
mov
in
push
push
mov
dec
lock
fs
iret
iret
leave
xchg
sbb
mov
bound
daa
mov
outsb
fisttpll
xlat
lahf
push
add
jns
leave
cmpsl
scas
push
add
daa
dec
pop
mov
stos
cmp
adc
mov
repnz
stc
mov
adc
sub
lods
lahf
add
fistl
mov
repz
add
lods
xchg
dec
mov
mov
stos
in
fsubp
pmaxsw
dec
outsb
iret
idiv
push
lods
pop
sahf
out
fisttps
iret
es
pop
or
and
dec
clts
out
pop
mov
lods
push
lods
lods
out
pop
pop
inc
lods
dec
pop
push
adc
jns
xchg
pop
data16
jbe
mov
out
jle
jle
leave
sbb
sbb
inc
cmp
inc
push
mov
fdivrl
aam
sub
mov
add
dec
dec
call
outsl
fdivrs
xor
in
mov
push
das
cmp
imul
pop
pop
fcoms
aad
aas
push
cmpsl
loop
inc
pop
cmp
add
cmpb
xchg
or
or
out
and
push
daa
xor
add
push
in
ja
aaa
pushf
je
loope
lahf
add
dec
xor
mov
pop
cmp
add
add
pushf
cmp
or
gs
mov
sahf
or
or
outsb
cmp
imul
cmovne
pushf
mov
hlt
jns
fcmovne
xchg
add
in
repnz
mov
out
sub
pop
push
mov
dec
mov
pop
adc
jb
in
daa
xchg
xchg
out
pushf
cltd
mov
lea
dec
mov
mov
bound
mov
sbb
pmuludq
cld
pop
jns
enter
iret
or
adc
push
sbb
leave
dec
aaa
add
and
cmpb
dec
mov
mov
in
in
andb
ja
setae
jns
xchg
or
jns
xchg
or
repnz
loop
mov
invd
mov
shlb
aaa
das
xchg
out
repnz
add
jb
add
sbb
mov
out
jbe
xor
push
push
pop
jo
out
pushw
or
cmpsb
xchg
xchg
cld
fbstp
lock
or
mov
daa
mov
lret
in
xchg
xchg
daa
daa
hlt
or
xchg
xchg
aas
pop
jno
xchg
xchg
xchg
xchg
xchg
mov
in
idivl
enter
adc
daa
mov
and
cmovs
jns
iret
rep
sbb
dec
sbb
xchg
mov
lahf
pop
and
js
push
add
aam
inc
ds
divl
repnz
pop
adc
jp
jb
dec
mov
mov
data16
xchg
and
je
xorb
fistpl
mov
ret
lret
repnz
sahf
pushf
cmc
add
jb
inc
es
mov
mov
inc
mov
mov
mov
mov
jns
out
push
push
outsl
pop
ja
out
sahf
out
or
je
or
mov
ror
xchg
dec
scas
mov
mov
adc
shrl
pop
fidivrl
ljmp
outsb
cmp
pop
nopl
mov
pop
pop
pop
sub
aaa
mov
mov
mov
pop
pop
pop
dec
mov
mov
mov
mov
pop
pop
pop
jne
jge
test
pop
pop
xchg
mov
mov
mov
mov
adc
mov
shll
fnstenv
push
int
jns
hlt
pop
cld
and
mov
cmp
and
sbb
and
jns
out
sub
out
sahf
inc
daa
dec
sub
je
out
pop
sub
sub
lds
outsb
jbe
dec
jle
ja
leave
xor
pop
mov
dec
lods
pop
pop
mov
add
push
das
int3
mov
aam
push
ret
iret
idivl
mov
mov
sub
sgdtl
ret
mov
xor
push
call
pop
mov
xchg
mov
in
jbe
cmp
mov
mov
fcmovu
iret
mov
addr16
mov
add
cmp
push
cvtps2pd
cld
in
daa
pop
jge
push
add
sahf
test
pop
in
dec
mov
jns
loopne
jmp
pop
fcmovne
in
enter
mov
out
jns
and
das
cmp
cmp
xchg
inc
push
adc
data16
xchg
out
jno
sbb
xchg
xchg
sbb
test
mov
pop
xchg
out
jns
aam
fildll
mov
cmp
enter
mov
jb
jb
cmp
jb
jb
mov
sbb
hlt
adc
sahf
out
sub
xor
dec
fsubrl
iret
adc
rsqrtps
jo
pushf
pushf
pushf
mov
leave
rcr
psrad
fcmovne
enter
mov
cmp
and
cmp
xchg
orb
xchg
out
into
pmaxub
mov
outsb
mov
leave
addr16
add
mov
dec
test
mov
in
daa
insb
cs
je
in
sahf
push
jl
test
xchg
or
fwait
cmp
femms
ds
jns
iret
repz
adc
fcompl
adc
in
sbb
mov
das
pcmpgtb
ds
mov
mov
sbb
inc
cmp
jns
aas
sbb
xor
enter
pop
rol
frstpm(287
mov
aaa
movaps
aas
dec
rcrb
ss
movsb
sarb
leave
jbe
mov
rclb
in
lcall
jb
mov
fstl
in
push
sub
pushf
fsubl
adc
nop/reserved
pop
and
sahf
sub
xchg
je
in
sahf
pushf
push
pop
roll
cmp
mov
push
mov
or
cmpsb
jl
dec
cs
scas
mov
and
jb
xor
xchg
out
icebp
xchg
adc
mul
xchg
dec
mov
and
ret
in
cltd
movsb
dec
push
out
pushf
cmp
pop
push
add
jb
cmp
ja
jg
xchg
or
mov
daa
daa
daa
daa
ret
fidivl
xchg
jl
cmpsl
push
push
int3
std
add
nop
jp
ret
mov
enter
cmp
leave
repz
dec
xchg
push
add
pop
and
add
leave
leave
repz
cmp
stos
mov
lahf
mov
ret
cmp
scas
mov
out
psadbw
out
popf
mov
push
les
push
pop
fcomps
cs
xlat
or
cmp
les
pushf
cmp
jbe
pop
imul
into
xchg
pushf
mov
lods
mov
fucomi
in
xlat
fisttps
out
lea
lds
xchg
out
mov
sub
mov
inc
clc
cmpsl
push
xchg
add
add
dec
iret
and
add
ja
in
aad
or
mov
mov
ret
pop
lret
jg
pop
fldt
jecxz
mov
push
push
cmp
cmp
repnz
xchg
push
add
outsb
pop
leave
pop
je
add
mov
iret
mov
ret
syscall
jns
movsb
out
push
ds
in
jns
jns
out
cli
movb
jns
sbb
es
xor
pop
cmp
lret
lret
lret
dec
aas
inc
push
pop
lret
lret
lret
lret
push
mov
lret
lret
lret
lret
xchg
lahf
stos
mov
lret
lret
lret
lret
rol
loope
cmp
jmp
sbb
cmp
sbb
sbb
cmp
cmp
push
adc
lahf
out
sub
enter
repz
and
xor
cmp
repz
inc
xor
repz
repz
xor
repz
aaa
jnp
xchg
xchg
jns
out
cmp
pushf
cmp
in
mov
repz
cmovb
jmp
inc
hlt
decl
or
inc
repz
repz
dec
outsb
daa
iret
dec
ss
pop
dec
push
in
dec
dec
bound
js
pushf
cmp
sqrtps
popf
pushf
movsb
scas
fistpll
pushf
dec
ds
leave
mov
lret
cmp
roll
sbb
and
das
lret
mov
lret
push
lret
in
xchg
lret
jno
jl
jb
xchg
lahf
iret
xchg
xchg
lret
lret
sbb
test
mov
mov
iret
repz
adc
push
lock
ljmp
mov
sbb
push
sbb
jns
out
sbb
repz
sahf
out
and
push
and
repz
arpl
outsb
and
jns
fcmovne
test
jns
out
movsl
sub
jae
psrlw
fsubrl
repnz
repz
repnz
daa
out
sbb
int3
adc
push
sub
repz
xor
aas
cmp
repz
dec
cmp
pusha
leave
repz
pusha
cmp
daa
mov
orl
xor
iret
rep
inc
mov
inc
jle
into
int3
dec
mov
jbe
xchg
cmp
int
int
cmovne
mov
pop
add
fsts
int
aas
int
int
pushf
dec
and
push
sahf
xchg
out
jp
add
out
mov
cmovs
or
jg
xchg
xchg
inc
cld
in
or
leave
adc
xlat
inc
jg
loopne
jo
leave
call
cmp
cmpsl
adc
clts
or
loope
cmp
sbb
sub
test
xor
or
jle
push
into
lcall
arpl
pop
pop
pop
decb
jnp
or
jb
inc
into
lahf
fcom
in
popf
fldt
mov
into
fidivs
or
iret
aaa
jns
out
push
pop
pop
add
paddusb
mov
cmovae
cmp
repz
dec
or
mov
or
pop
test
cmp
cmp
rcll
rorb
out
cs
imul
sbb
rcrb
movsb
fwait
mov
pop
nopl
xchg
out
sub
iret
cmp
and
xchg
out
dec
ja
orb
lea
mov
fsubs
and
sub
rol
shlb
enter
rolb
mov
add
aad
inc
fcmove
pop
rorl
mov
rcll
jp
cmp
in
add
fwait
push
push
cmpsb
dec
mov
syscall
or
sahf
mov
shrl
rcr
shr
pop
minps
push
sahf
repz
rorl
rclb
jns
out
adc
pop
repnz
jae
sbb
push
cmp
xchg
outsb
movhps
push
insb
jns
test
cmpb
cmp
push
and
scas
es
js
sub
sub
fcmovbe
aas
mov
arpl
add
imul
fs
sbb
pop
sahf
ja
cmp
shrl
pop
cmp
add
in
add
pop
pcmpgtw
ror
repz
or
inc
leave
cmp
iret
leave
add
leave
xchg
out
pushf
aam
push
add
xor
inc
aas
or
bound
jmp
pop
pop
and
cs
das
aas
cvttps2pi
aaa
aam
aam
loopne
iret
repz
adc
arpl
adc
xchg
aam
sbb
enter
push
mov
jbe
mov
das
aam
into
test
fisttps
sbb
xlat
xchg
stc
add
jg
aad
in
mov
sbb
push
push
mov
pop
xor
add
cmp
or
inc
dec
cmp
out
push
push
pop
addr16
cmp
iret
jae
adc
adc
in
jbe
xchg
cs
rclb
mov
out
pop
jle
mov
sbb
lock
aad
sbb
push
mov
femms
sbb
jns
aaa
jb
das
push
push
cmp
jns
sahf
out
or
or
and
in
mov
pop
popf
test
out
in
mov
sahf
out
adc
mov
lahf
xlat
push
ja
cmp
sbb
adc
jns
sahf
push
aaa
aaa
and
rorl
and
and
out
fisubs
and
xchg
out
jns
cmp
movsl
sub
lahf
ja
cmp
rcr
push
xor
fsubr
in
and
push
xor
out
jns
enter
push
fsubrs
aaa
push
xor
cmpsb
js
aas
cmovp
cmp
sub
fs
nop
stos
stos
or
add
add
mov
pop
mov
and
dec
cmp
out
pop
out
push
rclb
aas
inc
push
push
pop
test
sti
push
xchg
movsb
dec
and
pop
inc
mov
xchg
add
inc
aaa
outsl
repnz
push
push
add
out
add
add
add
out
or
or
outsb
leave
in
in
or
or
or
daa
adc
adc
daa
and
mov
push
das
push
xorps
pop
imull
push
and
in
in
sbb
push
pop
andb
in
jbe
jb
daa
daa
iret
jae
sub
dec
outsb
fbld
xlat
les
data16
push
jo
ret
sahf
xor
es
xor
sahf
out
sub
sbb
repz
out
cld
call
repz
fcom
ror
enter
repz
mov
in
sahf
out
movsb
cwtl
nop
mov
repz
addb
jo
pop
push
cmp
repz
inc
cmp
sbb
dec
loope
adc
add
push
inc
inc
cli
mov
cmp
out
xor
adc
in
add
dec
add
popa
cmp
push
push
sbb
popf
dec
jno
mov
or
sbb
pop
or
push
adc
cmp
ss
movsb
add
in
leave
pop
lods
pusha
cmpb
cmpsb
fisttps
mov
jl
lahf
loopne
inc
jle
test
shll
push
mov
mov
cmp
mov
sbb
in
out
adc
mov
mov
ficompl
dec
leave
mov
mov
xor
fcomp
loopne
jb
jle
xchg
test
and
inc
inc
adc
add
or
add
movsl
rcrl
or
and
push
pop
cvttps2pi
jle
inc
aaa
push
ficomps
xlat
incl
xchg
insb
xor
das
push
push
mov
aas
pop
push
add
xor
pop
add
out
push
or
or
out
push
adc
sahf
out
sbb
in
iret
repz
sbb
iret
repz
sub
enter
lcall
jmp
clc
ljmp
jns
jp
push
mov
xor
movsl
xor
jns
mov
lods
popf
or
push
add
rcrb
inc
pop
je
push
inc
vmread
test
fwait
adc
lahf
adc
cwtl
incb
xorb
or
out
icebp
addr16
push
push
inc
dec
or
mov
inc
mov
fst
adc
push
push
xchg
xor
pop
daa
divl
jno
push
pop
and
fbstp
scas
cmp
pop
jg
arpl
imul
inc
movhps
mov
mov
mov
in
sub
sahf
not
sbb
sbb
addb
icebp
clc
add
lock
out
iret
and
push
and
mov
icebp
cld
lock
add
sahf
fcomps
pop
lock
push
jns
out
and
push
or
or
sahf
out
out
adc
in
enter
jnp
push
rcrb
push
iret
repz
mov
test
movsb
and
repz
and
and
xrelease
pushf
or
clc
mov
je
orb
inc
out
xor
inc
stos
pushl
push
cmp
xorl
push
iret
repz
cmp
pop
js
mov
lahf
cmpsl
stc
cmp
adc
xor
add
mov
pop
ja
xor
xor
mov
jae
adc
push
dec
insb
cmpsl
in
popa
jne
add
dec
inc
pop
repnz
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
incl
xchg
inc
push
add
inc
stc
mov
adc
mov
in
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
adc
cmpsb
lock
mov
popa
sar
mov
mov
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
and
push
xchg
int3
add
sti
aas
jno
or
mov
jo
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
ljmp
add
rorb
and
aas
inc
cmpsb
mov
insb
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
ljmp
cwtl
cmp
mov
sbb
add
movb
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
ror
add
cmpsb
fmuls
incl
adc
mov
inc
cmpsl
inc
push
sub
push
dec
jnp
pop
sub
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
movsb
mov
aad
mov
rclb
mov
sub
mov
lcall
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
call
shrb
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
lcall
mov
leave
mov
insb
fdivs
jne
filds
or
shrl
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
and
or
adc
stos
sbb
inc
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
mov
loop
lahf
xor
mov
js
stc
in
test
call
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
incl
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
mov
je
mov
aam
movsl
fisttps
fadd
shll
call
push
imul
mov
sarb
add
in
add
pop
dec
or
fnstsw
add
daa
adc
or
and
test
or
mov
popa
dec
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivr
pushl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
ljmp
sbb
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
mov
mov
shll
push
repnz
addr16
cmpsb
fldl
xchg
pushl
dec
fisubrl
or
scas
testb
mov
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
decl
push
xchg
ja
int3
add
mov
das
es
lds
or
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
ss
jmp
incl
push
add
adc
mov
jnp
sbb
xchg
or
pushl
or
rcl
xchg
aam
clc
mov
push
int
mov
idiv
jg
jmp
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
jmp
clc
sar
imul
push
js
or
push
addl
mov
movsb
incl
cmp
cmpsl
notl
pusha
rorb
imul
loop
push
scas
fcompl
fldenv
filds
aaa
mov
mov
sahf
mov
inc
jmp
cmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
cmc
out
add
ja
dec
fstpt
pop
jo
pusha
push
test
push
or
sahf
xlat
cmp
push
xlat
fcomp
ficompl
fsubp
jecxz
jns
jns
in
jmp
ljmp
sahf
out
cmc
div
clc
stc
dec
aaa
sahf
out
sti
cld
pop
adc
add
adc
push
push
movsb
sub
xchg
push
jbe
sbb
out
jae
inc
mov
dec
es
dec
bound
jbe
inc
jecxz
add
bound
inc
movsl
fisubrl
dec
popa
je
push
ret
ds
dec
fisttpl
and
jno
xor
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
dec
push
fstpt
xor
xor
xor
add
pop
jnp
push
inc
jbe
pop
insb
imul
es
imul
push
dec
inc
jle
and
test
inc
or
xchg
test
inc
and
mov
or
adc
mov
fs
push
je
xor
adc
ss
jbe
insl
adc
popf
inc
aas
fnstcw
stos
popa
cmp
jle
gs
inc
push
push
ret
push
add
sbb
sbb
aaa
out
and
lret
insb
popa
jns
sub
xor
push
dec
insb
insb
pusha
popf
imul
mov
or
je
aaa
aas
mov
test
inc
push
push
aas
pusha
lds
add
aas
movl
jae
daa
xor
daa
pop
or
and
or
rcll
movsl
in
int
sbb
inc
pop
jecxz
xchg
inc
inc
inc
add
test
mov
mov
mov
iret
int
push
dec
cmp
fsubrs
mov
sbb
mov
dec
jge
inc
outsb
jne
adcl
dec
jge
mov
xor
xor
mov
notb
or
add
outsl
in
cs
clc
xchg
into
pop
jo
mov
dec
mov
pop
inc
cmp
sub
add
xchg
sub
push
add
and
xorb
outsl
xchg
inc
mov
mov
dec
xchg
lahf
cmp
mov
push
nop
scas
pop
xlat
mov
xchg
out
and
inc
jb
addr16
sahf
andb
jo
loopne
dec
adc
lahf
push
outsl
outsl
lods
pop
or
mov
lds
sti
adcl
mov
mov
pop
or
sub
test
pop
cmp
arpl
cmp
mov
jo
lahf
pop
mov
push
xchg
insb
jns
shrl
lods
ss
xorb
mov
je
int
adc
test
dec
popa
mov
mov
bswap
dec
in
inc
sti
inc
push
bound
ja
inc
jbe
mov
mov
dec
dec
repnz
ja
dec
xor
je
mov
addr16
xor
xchg
int
repz
adc
push
xchg
mov
dec
jg
inc
loopne
movsb
mov
or
or
xchg
sahf
dec
hlt
pushf
add
inc
adc
clc
xchg
sub
sbb
sbb
adc
inc
push
inc
dec
lods
pop
jno
pop
bound
outsb
arpl
adc
xchg
cmp
pop
mov
sub
pusha
in
insl
inc
fs
sub
inc
jne
push
lea
xchg
inc
mov
xchg
fstpt
test
push
daa
sub
stos
orb
add
adc
mov
add
movsb
subb
cmc
cmova
dec
add
or
fdivr
loopne
adc
dec
add
add
mov
fistl
push
out
add
add
or
pop
pop
push
or
or
or
or
or
fidivs
adc
push
adc
push
in
jbe
filds
or
pop
sbb
adc
adc
adc
add
data16
jle
imul
adc
pop
adc
inc
add
negb
add
and
add
sahf
mov
inc
push
add
mov
add
es
imul
sarl
add
push
adc
pop
and
xor
mov
incl
inc
mov
adc
xor
cmpb
add
mov
adc
add
mov
rolb
addl
pusha
add
add
add
dec
or
add
aas
add
pushf
into
cmp
add
add
sub
cmp
adc
aaa
incl
push
pop
popa
jno
and
adc
xchg
mov
stc
and
push
lock
loope
icebp
mov
or
push
mov
xorb
scas
push
addb
js
incl
and
sub
rcr
push
ret
xchg
and
sub
hlt
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
adc
fsts
dec
mov
loope
mov
cmp
out
inc
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
add
or
adc
pop
inc
inc
xchg
pop
inc
leave
push
pusha
add
or
lcall
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
outsb
cli
pushl
lahf
mov
movsl
jecxz
pop
mov
sarb
clc
cmpl
jg
or
insb
sub
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
pushl
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
push
cmpsb
add
mov
popl
movb
xchg
sbb
call
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
sar
mov
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
in
fcomi
ret
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
decl
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
testb
push
sahf
pop
clc
sti
jg
jno
lock
jg
sti
fildl
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
incl
mov
jb
mov
mov
loope
call
mov
int
inc
fwait
sbbb
mov
dec
jp
push
outsl
jmp
hlt
push
add
stc
loope
mov
shrl
andl
aas
icebp
testb
mov
decl
inc
gs
sub
jno
pop
sub
jg
scas
cld
or
incl
call
sbb
paddb
inc
mov
dec
adc
call
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
in
cmp
test
loopne
cli
adc
aaa
xchg
in
add
dec
outsl
mov
inc
adc
loope
fisttpll
out
aas
std
cli
push
push
pushl
jg
cmp
sub
inc
scas
inc
mov
inc
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
jmp
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
add
js,pn
stos
imul
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
add
lcall
xor
das
pop
pop
pop
shlb
out
call
call
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
ljmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
incl
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
decl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
ljmp
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
mov
jle
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
jo
pusha
imul
add
mov
cmp
xchg
mov
or
outsl
cwtl
pop
xchg
ftst
jbe
xchg
and
lcall
out
jae
shrb
shlb
out
aas
stc
add
out
gs
mov
pushl
fidivrl
lock
adc
pop
cld
addl
adc
and
pop
repnz
cmp
fmull
enter
jecxz
aas
clc
aas
lahf
scas
sub
in
pop
mov
sub
mov
dec
outsb
mov
cld
inc
mov
push
sbb
push
inc
or
testb
push
pop
jg
add
jg
mov
mov
aad
test
mov
mov
iret
push
std
mov
out
jbe
push
sbb
stos
icebp
pop
incb
jno
mov
cvtpi2ps
push
inc
jecxz
sbb
sarl
adc
mov
loopne
sar
adc
lahf
xor
and
cmp
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
std
mov
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
lcall
cmp
cld
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
push
jnp
jmp
insb
sbb
cwtl
inc
mov
insb
cld
jg
inc
test
aas
repz
outsl
lock
in
jmp
stc
out
jmp
aaa
clc
push
std
mov
or
lods
out
jne
or
cld
push
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shrb
fisttpl
out
pop
or
or
dec
ss
les
incl
pslld
pushf
imul
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
jmp
outsl
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
sub
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
adc
loopne
cltd
or
mov
ret
nop
cmp
das
push
mov
add
lock
pop
pop
div
cld
idivl
pop
aas
adc
fs
loope
jae
push
xor
jg
ljmp
cmpsb
jge
fbstp
out
xchg
add
out
insb
clc
pop
inc
icebp
mov
loope
mov
cmpsl
popf
bound
cmp
ja
push
daa
outsl
das
jge
fxtract
mov
call
pop
lock
decb
adc
mov
and
adc
call
push
iret
or
lock
and
int
add
enter
push
pop
aaa
std
fisttps
outsl
js
dec
inc
sbb
xchg
fimull
hlt
orb
ror
sbb
cmp
xor
aaa
inc
adc
pop
lds
aas
pop
clc
loope
loope
mov
test
push
inc
lahf
jp
dec
add
xlat
fimull
xor
loopne
sub
cmp
cmp
repz
mov
sti
push
push
jo
sarl
pop
out
jg
jno
ret
dec
inc
sub
cmp
ficoml
dec
arpl
out
iret
push
dec
jge
lcall
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
push
cld
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
mov
sub
mov
lock
stc
push
dec
out
fstpt
mov
enter
inc
mov
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
std
call
addr16
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
call
sti
push
sti
pop
inc
dec
bound
push
mov
push
pop
lods
inc
mov
push
popf
int3
pop
iret
and
add
lcall
add
movsl
or
or
sahf
out
popa
les
jno
sbb
cmpsl
fstps
fstp
mov
decl
mov
mov
inc
xor
cli
jmp
mov
dec
subl
sbbb
cld
inc
mov
loope
mov
je
in
rol
add
cmp
mov
mov
push
movl
push
sbb
push
loope
adc
sbb
mov
inc
push
out
xchg
push
sar
js
clc
xlat
enter
add
pop
mov
pop
inc
aaa
or
sbb
shll
cs
xchg
bound
jmp
dec
movsl
or
pop
xor
add
mov
add
mov
sub
mov
test
lahf
pop
mov
xchg
fcomps
ljmp
or
les
ss
and
fldt
mov
mov
dec
dec
pop
jmp
mov
cwtl
rcrl
xor
in
xor
mov
push
or
jg
orb
push
adc
repnz
leave
shlb
mov
testl
dec
into
repz
jmp
hlt
movsl
adc
xrelease
mov
arpl
mov
jmp
push
mov
adc
cmpsb
push
pop
test
xchg
xor
push
lods
imul
decl
hlt
adc
stos
cmp
pop
dec
cs
js
lahf
add
ja
sbb
incl
subl
push
lods
insb
sub
je
daa
mov
movsl
pop
add
cld
pushl
out
push
das
cmovge
xor
call
lods
ret
fucomi
dec
rorb
pushl
mov
inc
mov
or
mov
outsb
adc
adc
cmp
mov
mov
fcomp
jmp
repz
cmp
fstpl
jmp
daa
jge
int
sbb
lret
iret
xchg
mov
das
ret
fstl
repz
cmp
stc
mov
aam
lock
dec
jp
adc
xchg
lock
mov
or
xchg
arpl
adc
pushl
sub
cmp
je
sub
mov
inc
mov
out
pop
mov
pop
scas
shl
mull
mov
es
pop
mov
cmp
mov
test
pusha
pop
fldenv
push
mov
fcomip
stc
jl
out
xor
testb
add
idivl
clc
gs
pop
dec
pop
pop
push
sbb
das
clc
or
or
push
aaa
or
push
push
dec
sub
cmpl
cmp
lods
movsb
push
bound
mov
sub
push
dec
xor
pop
and
jge
repz
fcmovbe
sbb
mov
in
outsb
adc
call
adc
std
mov
and
add
addr16
cmp
cmp
xor
cld
call
push
xchg
das
xor
jl
fs
push
push
call
in
mov
cmpsl
mov
push
fadd
mov
hlt
test
cmpsl
popl
push
adc
incl
xchg
or
iret
outsl
and
inc
cmpl
mov
int
lcall
mov
or
push
addr16
test
mov
adc
out
popa
pop
push
loop
loopne
mov
dec
lcall
and
shrb
mov
cmp
cmp
pop
mov
dec
add
ljmp
fsts
xor
lcall
lret
aam
jmp
insb
shr
call
pushf
mov
insb
testl
notl
mov
je
in
mov
sub
or
frstor
jg
jl
js
mov
incl
cld
jb
test
loop
insl
mov
aaa
jl
addr16
mov
adc
push
mov
mov
bound
push
clc
and
movsb
in
xchg
jg
dec
hlt
enter
ds
jg
cli
sbb
adcb
push
icebp
pop
and
out
popa
xchg
decl
call
add
scas
shll
lret
lock
jle
in
enter
fbld
pushl
fs
clc
iret
in
arpl
fistps
push
or
sti
or
mov
imulb
jle
push
xchg
xchg
es
mov
jle
push
insb
mov
dec
add
mov
aad
imul
imul
rcr
fcomip
adcb
xchg
and
mov
cmp
lcall
xor
jp
mov
out
idivb
pop
dec
fidivs
jne
push
ljmp
cmp
popa
mov
mov
sbb
incl
xchg
rol
stc
push
movntq
popf
lret
mov
push
xchg
scas
mov
in
mov
sar
pushl
es
mov
fcompp
xchg
scas
mov
and
outsb
rcl
add
mov
das
aam
jo
inc
loope
inc
test
inc
mov
test
dec
mov
lcall
jmp
or
xchg
adc
dec
pop
inc
les
test
lret
xor
pushl
jb
or
sub
jecxz
cmp
test
sbb
nop
repnz
sbb
pushl
fldcw
lods
insl
add
push
or
test
adc
xchg
sub
cli
inc
movl
jecxz
xchg
mov
daa
jmp
xchg
push
loope
xchg
and
ljmp
ja
or
jle
push
scas
ss
int
adc
add
movsl
push
insb
jae
inc
addr16
push
mov
and
mov
lret
sbb
mov
pop
adc
call
mov
push
icebp
lahf
mov
fistpll
cmp
cmp
adc
lcall
jg
sub
data16
arpl
test
sbb
jge
les
lods
mov
jno
out
out
incl
lds
loope
inc
fucomi
sar
sbb
xchg
jg
xchg
mull
and
aam
lcall
xlat
mov
or
mov
jecxz
mov
mov
outsb
pop
jb
movsb
lods
call
push
cmp
pop
in
cmp
cmpsb
ds
push
int
mov
jle
ret
shrb
rcl
imul
add
adc
push
jmp
inc
jp
test
sub
lods
out
loop
inc
bound
dec
sbb
mov
jmp
xor
inc
pop
movsl
xchg
icebp
js
cmp
and
mov
ljmp
aad
adc
in
sbb
add
cs
sarb
cmpsb
inc
cwtl
imul
xor
lcall
jnp
lds
cmp
sarl
fisubrl
or
sti
adc
ds
jmp
or
jecxz
xor
xor
pop
stc
push
ret
cmpsl
or
add
jmp
outsb
pop
loop
pop
rcr
sub
call
ljmp
nop
mov
mov
int
popa
shll
push
adc
mov
popf
jl
lret
data16
incl
imul
inc
loope
pop
inc
cmp
push
jo
sbb
scas
push
dec
insb
pusha
ljmp
pop
pop
dec
dec
rcrb
push
mov
shll
push
xchg
sbb
incl
dec
add
arpl
or
out
mov
lcall
insb
call
adc
inc
xchg
mov
cmp
inc
and
ljmp
imul
push
mov
int3
inc
push
xor
enter
mov
xor
xchg
push
stc
jmp
fcomps
idiv
inc
sub
cmp
icebp
sub
sarl
call
loopne
pusha
ss
out
cmpl
aas
cmp
rol
insb
cs
loopne
je
mov
push
test
loopne
xor
push
mov
inc
stos
mov
call
cmp
mov
sbb
sar
jne
lret
cmp
imul
ja
cld
lcall
cmc
and
fs
cmp
mov
inc
rorb
in
lahf
incl
push
into
push
pop
les
add
push
inc
or
xor
cmp
aam
mov
outsb
jno
adc
and
mov
mov
fwait
push
mov
jmp
xchg
add
loope
test
mov
jmp
inc
cmp
outsb
aad
out
mov
data16
repz
pop
and
jle
orb
aas
fldl
in
divb
stos
sahf
lds
aas
push
dec
add
lds
pop
push
add
jbe
cld
js
cs
call
cmp
rcll
sbb
dec
lock
mov
fcos
mov
cmp
and
aam
leave
mov
decl
cmc
rclb
jns
mov
xchg
test
sub
mov
jb
push
hlt
pushl
std
jmp
and
mov
sub
push
lock
ret
addr16
nop
pop
inc
into
push
decl
pop
cmpsl
movsb
je
push
lods
inc
decb
xchg
lcall
dec
cs
decl
pop
inc
cmp
jle
sbb
dec
cmp
out
data16
push
in
jmp
aaa
mov
xchg
mov
mov
push
or
jle
ljmp
jns
and
ljmp
cs
pushf
inc
or
rol
mov
push
adc
out
ss
cmc
xlat
ds
arpl
mov
jmp
add
lods
inc
adc
lcall
scas
mov
fwait
mov
daa
in
xlat
ss
stos
pop
inc
sub
adc
pop
inc
adc
das
dec
or
jp
leave
xlat
adc
je
dec
pop
xchg
push
xchg
push
push
out
es
in
movsb
bsf
cld
push
xorl
out
pop
into
arpl
sbb
add
push
cmp
loop
sbb
inc
sub
loopne
mov
fsubr
mov
mov
hlt
fcmovu
cltd
stos
mov
push
jae
inc
push
pop
xchg
mov
orb
subb
and
enter
mov
sbb
mov
int3
dec
mov
fistps
mov
stos
lcall
clc
add
jl
pop
lahf
push
das
ret
xor
adc
arpl
fsubrl
jmp
cltd
dec
stos
inc
sub
jle
std
out
ljmp
mov
xchg
cwtl
je
push
faddl
lret
rorl
ds
icebp
mov
mov
enter
add
mov
dec
add
daa
filds
decl
jns
fldt
ret
fisubs
pushl
mov
enter
sarl
lcall
push
xchg
push
sti
add
adc
call
lcall
xor
repnz
pop
jno
imul
pop
fcomip
jg
arpl
cmp
incb
dec
push
jmp
push
in
lcall
call
in
inc
addb
mulb
out
and
test
rorb
loop
dec
bound
adc
adc
dec
mov
xor
sbb
dec
movsl
mov
mov
cmpsb
ljmp
fnstenv
es
inc
pusha
iret
mov
xor
pusha
clc
push
sbb
std
ljmp
pop
insl
movsb
in
or
sbb
jae
xchg
fwait
mov
les
std
rcrb
jo
sub
mov
cwtl
das
aas
cmp
popl
in
adc
mov
cmp
ss
aas
nop
aaa
jmp
inc
cs
imul
xchg
pop
int
decb
and
fdivrl
xlat
mov
cmpl
jge
jg
scas
xor
or
out
call
setp
sbb
or
pusha
inc
mov
lcall
add
jg
mov
aad
out
mov
loope
push
cmp
push
mov
pushl
pop
add
pop
ds
clc
pop
mov
xchg
xchg
mov
xchg
shlb
pop
lds
jp
sti
pushl
dec
rclb
sbb
mov
aad
pop
ljmp
es
cli
pop
cs
test
and
dec
lcall
sahf
dec
dec
jp
cli
cmp
mov
fldenv
and
push
and
addl
in
pushl
js
jae
dec
int
daa
mov
jmp
jnp
mov
or
ljmp
cli
push
dec
push
cmpsl
mov
xchg
aam
jle
ljmp
sub
cmp
lock
outsb
ds
cmc
enter
arpl
sub
xor
jns
xor
sbb
inc
sbb
pop
les
pop
gs
ja
add
rorl
sub
xchg
mov
dec
test
pop
adc
or
push
dec
popa
stos
jne
stos
mov
cmp
ljmp
or
fs
dec
out
es
inc
cmp
push
idiv
push
cmp
pop
xor
xchg
sti
and
call
push
orl
xchg
lcall
das
pop
sbb
mov
aas
lods
cmpsl
and
or
push
mov
fnsave
outsb
arpl
popf
cmp
pop
add
minps
call
jae
push
jg
lock
ret
fisubs
fs
loop
jle
mov
adc
int
dec
ret
cmpsb
fwait
pop
push
popa
ljmp
mov
rclb
subb
ljmp
sahf
ja
adc
fcomip
add
and
fs
imul
into
lcall
push
int3
les
push
push
inc
in
xor
dec
mov
push
leave
push
clc
outsl
add
pushf
fldcw
cwtl
sbb
cld
pop
pop
or
xchg
cmp
cmp
sbb
sti
fisubrl
jg
pop
les
into
pop
inc
frndint
or
gs
inc
addr16
iret
lcall
addr16
or
jo
adc
pop
mov
xor
xbegin
scas
adc
iret
push
jne
inc
add
into
sbb
sub
inc
pusha
sti
pop
sahf
sub
jl
xchg
nop
in
xor
cltd
das
cmpsb
pop
loopne
xlat
or
inc
ret
aas
xchg
xchg
or
dec
or
rolb
addr16
test
adc
test
push
shl
jle
fwait
xor
and
and
incl
cmp
mov
arpl
or
enter
loope
inc
xor
push
sub
cwtl
xor
jp
xchg
cmp
xchg
adc
push
sub
or
outsl
sbb
enter
ljmp
aam
repz
shlb
leave
jae
jp
mov
adc
mov
jno
filds
inc
dec
or
sbb
mov
sbb
test
ljmp
stc
adc
jbe
movsl
mov
inc
repnz
and
cmpsl
in
mov
mov
cmpsl
jg
add
fldenv
les
in
jns
jge
push
rol
jmp
ss
aad
loope
clc
cltd
add
bound
inc
mov
lcall
or
sub
jb
adc
or
in
jp
jmp
pushf
scas
xchg
push
arpl
loopne
call
inc
outsl
roll
mov
bound
push
int3
je
sbb
lahf
push
sub
sbb
cmp
lods
and
jne
aam
cs
cmp
test
jg
push
pop
hlt
jle
jg
addr16
aam
jle
or
into
outsb
xor
je
xchg
gs
in
je
mov
jae
sti
movsb
movsb
lds
pop
inc
and
lret
pop
or
out
jp
mov
shll
hlt
push
scas
jg
orl
aas
lods
aam
adc
clc
fisubrs
pop
mov
incb
and
int3
std
xchg
not
jmp
les
pop
xor
push
ja
mov
loope
cltd
lods
ret
adc
je
imul
pusha
and
les
mov
pop
lahf
pop
ret
in
fbstp
mov
pop
icebp
sbb
aas
xor
clc
in
out
jne
sti
out
lahf
js
sbb
mov
pushf
jno
fisubrl
add
cmp
fisubrl
cmovg
xor
or
sar
movsb
fidivrs
ljmp
lret
test
pop
and
inc
mov
mov
add
clc
sahf
push
jno
nop
iret
lcall
mov
cmp
jle
arpl
test
fmul
or
cmp
call
popl
lock
lock
add
and
out
packssdw
lcall
ret
fcoms
lcall
mov
call
or
sub
add
popf
push
stos
mov
insl
mov
pop
lods
test
adc
jo
xor
out
xor
jp
adc
in
and
pop
loope
mov
call
and
shrl
push
mov
push
test
stos
scas
and
sbb
int
add
pop
or
ds
in
cmp
mov
loop
adc
inc
mov
jb
ja
repz
gs
xor
pop
xchg
xor
lcall
pop
in
or
ljmp
mov
cmpsl
mov
decl
mov
in
mov
daa
testb
cmp
rol
nop
mov
call
adc
subl
setb
pop
lds
jbe
fists
mov
mov
xor
jle
jns
popa
cltd
jle
ljmp
fildl
dec
fucomip
mov
out
stos
aaa
sbb
stos
fs
and
adc
mov
and
sbb
sub
lcall
lahf
popf
shrl
loope
ljmp
cld
dec
xchg
fwait
jecxz
mov
std
sbb
or
lret
mov
push
fisttps
and
adc
adc
pop
jge
jbe
adc
mov
outsl
push
testl
clc
or
and
mov
sub
mov
jbe
mov
call
sbb
call
push
mov
jp
orl
incl
sti
push
mov
subl
jle
ds
outsb
inc
lea
adc
test
ljmp
cli
jo
or
test
int
cli
sub
push
repnz
jns
addr16
sub
sub
inc
popf
movsb
mov
fistpl
lods
shrl
fists
pop
push
ljmp
pop
nop
shlb
pop
xchg
and
or
dec
iret
aad
cmp
inc
test
xor
xchg
ljmp
out
xor
fs
inc
push
das
fs
dec
iret
sti
pop
dec
ret
pop
outsl
int
ret
push
dec
or
repz
jg
mov
inc
decb
jne
sti
loope
mov
inc
rolb
sub
call
cmpsl
aad
test
xchg
and
or
in
mov
decl
movsb
cmc
rcrb
mov
test
push
aam
mov
outsb
aaa
lcall
jmp
imulb
movsl
jmp
jo
mov
loop
mov
cld
push
scas
int3
cs
mov
fiaddl
incl
lea
out
push
test
sarl
imul
loope
arpl
sub
inc
test
mov
xlat
outsl
pop
and
inc
mov
pushf
jns
pop
push
pushl
int3
xchg
sbb
mov
and
xor
xor
mov
jmp
in
daa
xor
push
sub
hlt
push
jle
and
jecxz
test
sbb
imul
jg
mov
mov
addr16
mov
add
lock
adc
dec
xor
mov
or
int
lds
mov
sub
in
in
inc
xchg
mov
jge
aad
sub
lds
movsb
popa
test
sbb
loope
jmp
scas
mov
add
mov
fwait
loope
cmp
adc
mov
aad
repz
incl
movsl
push
xor
arpl
lods
or
in
fs
cmp
pop
cmpsb
jmp
in
dec
je
imul
gs
mov
in
push
aam
dec
and
out
cmp
ljmp
cwtl
pop
lods
into
cs
xchg
sbb
stc
lock
nop
jecxz
mov
adc
mov
fcoms
leave
outsb
imul
jno
addr16
sti
popf
or
icebp
das
xchg
pop
cmc
jmp
into
mov
push
mov
rorl
xchg
dec
push
mov
out
jle
in
leave
stos
pushl
jl
xlat
repz
scas
or
hlt
xchg
and
arpl
sub
out
loopne
lcall
adc
dec
hlt
nop
xchg
shrd
rcll
inc
mov
jb
add
add
inc
mov
adc
sbb
add
xchg
mov
jmp
loop
decl
cltd
lock
rcrb
jbe
xchg
pusha
push
fistpl
pusha
xchg
xchg
cmc
adc
mov
mov
mov
je
aam
push
test
mov
fimull
add
inc
imul
incl
lret
ljmp
mov
out
xchg
pop
jae
cmc
mov
sub
clc
iret
mov
ljmp
addr16
xchg
mov
sub
mov
or
xor
pop
sbb
mov
jp
dec
pop
xor
xchg
pop
js
mov
pushf
aas
push
jl
xor
lret
lret
popa
push
cmp
ret
push
pop
adc
cmpsl
xchg
cs
sar
incl
dec
mov
sub
fsts
and
mov
adc
xor
add
lods
and
dec
movsb
xchg
dec
add
imul
sub
push
or
mov
mov
shll
arpl
jne
sbb
push
lds
mov
call
cmpsb
sub
xor
pop
add
xchg
les
fcompl
adc
cli
sahf
stos
in
ljmp
inc
inc
and
jle
or
std
popa
lret
lods
jns
repnz
jmp
push
daa
adc
mov
dec
push
mov
push
xor
loope
outsl
add
and
call
loopne
scas
decl
imul
and
inc
inc
loop
fwait
enter
lcall
call
dec
out
sbb
hlt
inc
les
mov
pop
shl
ljmp
out
int
out
stos
ficoms
fsubl
les
and
movsb
and
pop
incl
flds
stos
notb
nop
out
out
add
inc
push
push
xchg
mov
pop
pop
dec
hlt
jge
and
incl
pusha
sbb
mov
les
mov
mov
dec
aam
xor
insl
jmp
dec
sbb
shll
out
incl
mov
cmpsb
call
jg,pn
loope
sbbl
mov
jne
into
inc
jbe
cwtl
pushl
lahf
jns
lods
jp
push
fwait
mov
outsb
adc
into
inc
loope
jmp
cmp
jg
pop
leave
inc
add
and
push
jns
fst
or
aam
lds
adc
ds
push
mov
pop
inc
mov
xchg
cmpb
lock
shlb
mov
outsb
jb
iret
sahf
jmp
inc
add
xlat
ror
add
movsb
aam
cltd
incl
arpl
jl
pop
stc
imulb
rcrb
inc
jmp
dec
mov
insb
jmp
ljmp
lret
pusha
pop
mov
xchg
outsl
ja
test
mov
xorb
movsl
hlt
ljmp
sub
cs
insl
push
insb
dec
imul
mov
loop
enter
inc
in
inc
push
sub
dec
dec
cmp
sub
fchs
incl
inc
add
xchg
lock
sub
dec
into
dec
push
sbb
dec
push
mov
jmp
xlat
mov
mov
mull
push
push
mov
stc
imul
decl
pop
sbb
leave
inc
pop
mov
jns
xchg
cmpsb
lock
jmp
pop
lret
shlb
in
jno
std
adc
mov
adc
bnd
call
xchg
aam
decl
mov
pop
mov
rcrb
mov
jbe
mov
push
loopne
inc
mov
mov
iret
add
inc
or
test
in
sti
out
jmp
ud0
push
movzwl
dec
sub
jno
fldenv
and
dec
jno
sti
inc
and
lock
jmp
es
mov
add
push
xchg
lock
push
out
jns
ljmp
add
dec
inc
cs
cltd
scas
leave
push
lret
or
xor
mov
cmpsl
test
ljmp
aas
shrl
xor
xchg
xchg
push
add
arpl
ss
jmp
pop
sbb
and
fisubrl
lods
xor
mov
or
push
and
add
cmpl
xchg
add
mov
shll
and
imul
sbb
aaa
ss
addr16
adc
addr16
or
int3
add
fcmovnb
incl
mov
and
inc
inc
mov
fildl
scas
sub
cwtl
aam
pushf
cmp
lock
fwait
lcall
mov
loope
ret
add
mov
mov
lcall
push
popa
stos
mov
das
xor
cltd
pop
mov
jae
inc
int
loope
or
outsl
cli
fnstsw
inc
ljmp
xchg
push
cmpsl
repz
pushl
mov
push
insb
dec
test
inc
ret
or
jge
das
sbb
xchg
inc
inc
int3
dec
std
jbe
scas
xchg
mov
notl
mov
xor
inc
mov
mov
test
fidivrl
and
mov
ljmp
cmpl
jmp
mov
das
mov
ds
xchg
out
ljmp
lahf
fsubrl
std
call
mov
and
jnp
inc
mov
adc
xor
xchg
jmp
pop
jecxz
icebp
pushl
gs
push
bnd
aaa
sub
rorl
inc
dec
inc
dec
push
mov
enter
mov
adc
xor
xor
loop
mov
cmp
lcall
andb
std
mov
pop
adc
dec
sbb
cmp
push
gs
fcomps
jne
scas
clc
jnp
push
xchg
sbb
lods
adc
inc
mov
cmp
jnp
in
inc
stc
push
fldln2
stc
cmp
inc
mov
outsl
jo
dec
push
add
shll
cli
decl
inc
add
in
adcl
scas
es
clc
dec
lods
and
jle
jb
adc
mov
sub
retw
pop
shrb
lcall
add
mov
in
or
in
pop
sarl
call
sub
add
mov
and
jae
lcall
push
lock
sbb
sbb
adc
les
xchg
shl
inc
push
mov
sarl
and
mov
mov
and
out
sub
cwtl
mov
call
cltd
dec
and
imulb
stc
mov
xor
dec
pop
sbb
lods
jmp
mov
inc
mov
jmp
jle
sbb
movb
mov
adc
mov
mov
inc
inc
xchg
jo
inc
inc
jp
ja
mov
jmp
cmpsb
sbb
das
mov
decl
adc
js
sub
inc
repnz
push
es
cmp
out
adc
dec
inc
pushf
mov
mov
dec
push
cli
and
sahf
dec
jbe
int
sub
pushl
in
les
dec
lea
mov
push
adc
and
aaa
fwait
imul
je
decl
xor
push
es
adc
std
call
psubd
or
in
std
rorb
pusha
test
sbb
cmp
mov
lods
popa
jg
add
out
jecxz
xchg
xchg
push
push
xchg
push
cld
incl
repnz
pop
adc
push
mov
adc
sbb
faddl
subb
nop
call
sahf
mov
cld
push
cmc
int
adc
or
fsubrs
inc
ret
dec
sar
fldcw
xor
or
call
mov
push
cld
push
jno
mov
arpl
push
aam
pop
mov
dec
mov
incl
mov
and
and
or
inc
mov
and
cld
sarl
pop
gs
pop
scas
outsl
mov
mov
inc
adc
cmp
dec
mov
sbb
lahf
or
mov
push
sub
push
dec
inc
fcomip
add
sbb
jecxz
mov
and
decl
push
xor
mov
add
orl
test
xchg
pop
cmc
call
push
test
sub
xchg
cmp
or
pop
mov
pushl
push
adc
sbb
sub
out
sbb
pop
sub
mov
inc
lret
movsl
sbb
ljmp
daa
insb
and
pushf
or
adc
pop
pusha
ds
sbb
add
mov
incl
dec
notl
push
in
xchg
enter
mov
hlt
sub
negb
lods
dec
adc
inc
mov
int
adc
fsubrl
std
or
xchg
fnstsw
sar
fisubs
in
in
and
pop
clc
or
jecxz
push
adc
and
cmp
call
cld
jmp
ja
and
fisubrl
ljmp
faddp
cli
pop
rorl
push
pushl
push
sbb
or
add
pushf
rorb
cmc
jecxz
les
jg
fbld
inc
cmpsl
in
add
sub
sahf
push
cltd
and
push
call
lock
mov
xchg
imul
call
add
movsb
popl
lcall
imul
dec
pusha
push
mul
imul
scas
pusha
jb
or
cld
repz
mov
mov
fisubl
das
jp
push
in
jl
add
sbb
push
pop
mov
out
pushl
int
test
dec
pop
out
sbb
ds
cwtl
arpl
and
push
jae
ljmp
cli
notb
dec
ja
add
mov
mov
cmpsb
movsl
dec
aam
stos
push
pushl
rorb
movsb
mov
mov
cli
and
incl
fnstenv
fld
push
test
repz
ret
in
out
movsb
pop
ss
jns
popa
xor
call
stos
or
lcall
cmpsb
sti
cmpsb
loopne
push
dec
fwait
cwtl
out
cld
xchg
into
sbb
sub
mov
mov
aam
sub
inc
sub
sub
jne
ja
mov
jg
lods
mov
rolb
lds
dec
add
shlb
fisttpl
je
ljmp
add
out
pushf
cli
or
inc
outsl
out
inc
jns
testb
mov
es
call
xor
ficoml
lods
outsl
aaa
pop
mov
xor
divb
ss
lahf
call
pop
loope
cmp
adc
jb
stos
ja
cmpsl
aam
add
stos
sub
es
mov
arpl
divl
push
add
jo
lret
sbb
rorl
add
lcall
mov
xchg
shrl
mov
ljmp
out
add
movsl
push
inc
jge
add
fsubs
mov
leave
cmpsb
or
add
fwait
mov
jb
pop
cmp
and
mov
cmp
lret
xchg
or
cmp
loope
lcall
fcomip
xchg
inc
es
inc
je
lods
adc
js
pop
rol
clc
sbb
cmp
in
mov
call
stos
sbb
je
jg
push
roll
push
xchg
push
cli
call
call
xor
sub
bt
xchg
dec
pop
imul
jp
mov
daa
fsqrt
dec
loope
pushaw
jbe
inc
pop
push
sbb
pushl
xor
cmc
mov
add
out
in
jg
fidivs
jmp
jns
ds
loop
fsts
inc
js
pusha
xor
dec
mov
scas
mov
stc
adc
imul
xorb
xchg
fnsave
xchg
incl
push
mov
sysret
or
or
cld
add
mov
mov
or
push
negl
decl
or
out
into
dec
jne
enter
sub
and
popa
cmp
mov
pop
mov
sarl
sbb
pop
ds
ljmp
lea
pushl
mov
nop
mov
and
outsl
hlt
or
or
jmp
call
sbb
stc
xchg
or
xor
push
mov
add
iret
mov
or
jmp
pushl
inc
sbb
femms
inc
movsl
sub
mov
ds
jmp
call
pusha
sub
notb
pop
add
hlt
ret
inc
aam
push
les
jl
js
sahf
and
inc
in
addl
jg
stos
add
cmp
xchg
shrb
shll
pop
dec
mov
xchg
sub
adc
and
mov
or
insl
cli
ja
fimull
call
add
ret
add
push
mov
decl
pop
fidivs
push
xchg
das
fdivr
cmc
jo
cmp
aas
inc
mov
imul
cmp
daa
push
jmp
mov
adc
bound
dec
push
cmp
push
sar
insl
popf
frstor
out
inc
jno
ljmp
je
push
shlb
outsl
adc
mov
xchg
insl
test
jle
addr16
or
pushf
push
jmp
ljmp
decb
push
iret
leave
les
lcall
push
add
rcrb
clc
mov
sarb
lock
dec
and
call
push
jecxz
dec
out
mov
out
and
lods
mov
call
hlt
mov
loopne
out
out
pushf
cld
push
test
in
lahf
add
cmp
jmp
push
jb
mov
mov
cmp
mov
sub
iret
jl
pop
negb
decl
filds
mov
pop
ret
ret
jmp
mov
hlt
inc
sbb
mov
add
inc
enter
cld
jp
insb
or
and
decl
dec
mov
iret
popa
sbb
mov
mov
mov
ljmp
cwtl
xchg
xchg
ljmp
pop
test
sbb
cli
cmp
ja
mov
imul
jo
inc
pop
mov
push
shlb
push
popa
mov
iret
mov
incl
xchg
jge
movsb
ja
xchg
ret
jecxz
mov
imul
dec
xor
rorb
call
push
and
filds
sbb
mov
outsl
pushf
pop
in
sub
std
push
lods
cs
fbld
js
or
fnsave
mov
adc
jbe
iret
jo
movsb
jmp
push
add
jo
rcr
decb
outsl
dec
jbe
jmp
movsb
cmp
dec
nop
dec
sub
xlat
insl
rcrb
pushf
lods
vpshad
sbb
or
cmp
stos
cmp
incl
outsl
push
and
fnstcw
or
jle
iret
or
dec
push
incl
and
mov
mov
cmp
inc
cmp
pop
setbe
inc
cmovs
fstpl
ja
rolb
sbb
mov
fstps
btl
call
jecxz
inc
mov
fistps
imul
das
mov
ljmp
popa
pop
nop
sub
adc
pop
or
mov
data16
cli
xor
jmp
cld
pop
sub
lock
call
out
loope
xor
or
xchg
decl
das
loop
cwtl
push
sti
or
cmp
int
inc
gs
pushl
xchg
bound
outsl
jge
arpl
xchg
popa
nop
pop
stos
fs
dec
sbb
decl
stos
addr16
inc
adc
lcall
sbb
jb,pt
pop
sarb
decl
pop
mov
rclb
pusha
xlat
cs
leave
lahf
pushf
or
test
loop
fistps
dec
decb
pop
fs
popf
adc
add
add
cmp
mov
cwtl
scas
lock
dec
fnsave
and
insb
xchg
dec
xor
cli
xchg
lret
int3
shlb
arpl
sub
int
lcall
adc
or
movsl
push
icebp
sbb
hlt
insb
pop
mov
test
ljmp
adc
adc
push
sbb
jae
and
scas
out
sub
fldt
hlt
dec
fprem
ljmp
push
xor
cmp
fs
pushl
adc
cmp
dec
mov
or
add
aas
fs
dec
gs
fidivrl
xchg
je
movsb
mov
xchg
add
decl
repz
cmp
mov
icebp
cld
lret
jg
scas
out
cltd
insb
cmpsl
jbe
and
sub
add
adc
lods
data16
lods
aad
jp
mov
imul
loop
repz
dec
inc
inc
ljmp
std
adc
subl
cmp
cmp
sub
into
daa
inc
xchg
scas
push
sahf
xor
decl
mov
fcoms
lea
int3
push
xchg
mov
inc
inc
lock
lahf
xor
mov
outsb
mov
cltd
xchg
fisubl
or
imul
pop
cwtl
rcrb
mov
sbb
fimuls
scas
or
or
shl
adc
lcall
pop
jae
push
insb
jns
es
pushl
adc
ja
cmpl
push
push
xchg
mov
loope
jne
or
push
popa
push
call
pushf
fisubrs
push
jns
mov
jo
sbb
stos
les
push
xor
lods
mov
fcomip
decl
in
ds
addb
jnp
js
mov
pop
fdivrs
jecxz
addb
aam
fcomip
pushl
std
jmp
sub
decl
bnd
ds
mov
or
xchg
repz
decl
aad
mov
popa
in
cmp
fsubrl
push
arpl
cmp
add
mov
cmc
adc
pop
mov
mov
add
imull
mov
cs
int
lds
iret
mov
mov
mov
or
cmp
aam
xchg
xchg
clc
adc
ljmp
and
jo
mov
xchg
or
jl
pop
insl
stc
xor
das
adc
xlat
mov
push
mov
dec
jl
loop
jb
push
jl
popf
jmp
gs
sbb
cwtl
jecxz
call
inc
test
push
out
push
and
enter
fildl
push
movl
mov
fcmovnb
mov
gs
jl
inc
ljmp
jl
out
bound
decl
inc
fstps
nop
add
dec
lods
mov
stc
sbbb
fldt
stos
aaa
jb
add
pushl
mov
mov
roll
xchg
bound
hlt
pop
mov
aaa
cli
push
enter
aam
pop
adc
fdivrl
inc
iret
popl
push
test
inc
jl
pop
cld
test
mov
loopne
call
fldenv
setns
xchg
cmpsl
push
cmp
mov
xchg
dec
test
push
push
scas
add
fidivrl
fdiv
sbb
mov
lret
xorl
jbe
incl
out
push
cmp
fnsave
shr
icebp
pop
test
int3
jl
add
jmp
push
and
in
cmp
cwtl
mov
incl
cli
das
sub
add
and
call
movsb
cmc
pop
adcl
cmovbe
imul
jno
test
xor
jmp
insl
ljmp
push
insl
repz
loope
cmp
ud1
arpl
outsl
cmp
mov
leave
test
cmp
rorb
popa
movsb
sbb
push
mov
scas
jmp
or
roll
cmp
add
fimull
in
loopne
jp
mov
pusha
pop
dec
xor
pop
cmp
cld
jg
inc
jl
clc
sarb
insb
cli
inc
mov
ljmp
rorb
mov
insb
ret
sbb
xor
lds
fnsave
pop
insl
fcomip
dec
loope
lods
pop
imul
icebp
leave
ljmp
dec
mov
or
mov
aad
clc
pop
or
in
inc
sbb
or
sbb
lods
adc
cmp
mov
pop
fdivrs
icebp
sti
shl
sbb
ljmp
test
sbb
enter
dec
mov
setbe
adc
std
incl
sahf
xor
test
push
jae
xor
scas
jmp
imul
icebp
incl
push
mov
in
ja
or
fs
mov
iret
jbe
notb
ljmp
mov
fistpl
in
in
scas
ret
int3
push
inc
ljmp
cmpsb
into
pop
out
sub
mov
shrb
outsl
xchg
jno
ljmp
jecxz
sub
ljmp
outsb
jnp
insb
adc
push
xor
enter
dec
jecxz
mov
xchg
je
out
dec
jns
idivl
push
lcall
push
dec
pshufw
add
sti
mov
lea
adc
iret
xor
test
mov
incl
push
popa
mov
or
aas
ja
std
lret
popa
add
inc
fdivs
dec
aad
jmp
cmp
leave
repnz
xchg
xlat
call
fucomi
adc
jne
rcll
sbb
jae,pt
cmp
xchg
add
incl
lods
or
dec
mov
outsl
popf
mov
mov
sub
inc
test
call
xchg
fnstcw
ja
fcom
js
jle
shll
dec
cmp
ljmp
fwait
cld
cmp
or
push
mov
cs
loopne
pop
inc
jbe
aam
add
pushl
in
pop
daa
arpl
out
push
ret
insb
out
sbb
fwait
add
xlat
dec
cmc
dec
mov
inc
sbb
dec
pop
add
int3
pop
mov
nop
pop
push
sbb
aad
inc
scas
outsb
sbb
int3
dec
enter
fsubrs
sarb
ss
cld
ja
movb
repnz
pop
xchg
add
hlt
pushl
lock
xor
push
mov
js
xchg
xchg
add
dec
add
dec
call
dec
loope
enter
or
pushf
adc
lahf
out
inc
xor
xchg
push
call
push
xchg
sub
call
mov
inc
imul
or
aaa
test
pushl
fcmovne
pop
mov
lret
mov
daa
push
dec
sbb
outsl
insl
xor
cld
push
out
pushf
lock
test
pop
inc
stos
test
pop
je
fsubr
sti
jl
mov
or
pusha
repz
cmpsl
inc
decl
xor
push
test
and
outsb
pop
sub
into
loop
clc
ljmp
ret
lcall
jge
lret
bound
inc
pop
insb
sbb
std
cmc
popf
mov
pop
rcr
lcall
aas
outsl
in
es
fwait
or
cmp
mov
jg
orb
xchg
shll
push
jb
ljmp
cmp
xor
cltd
dec
cmp
and
push
dec
cmp
scas
enter
int3
or
mov
mov
mov
bound
dec
xchg
cmp
sub
mov
and
or
dec
in
lcall
scas
or
xchg
adc
movsl
sbb
jge
out
mov
lcall
xlat
push
jno
mov
repnz
fmul
push
and
or
sub
jne
fcmovu
mov
mov
mov
xchg
jae
mov
xchg
or
and
jecxz
cmc
aad
xchg
mov
sarl
mov
sar
ds
lret
or
lahf
lods
push
jns
neg
adc
pop
or
fdivr
sub
push
lock
pop
mov
pop
insl
sub
sbb
clc
cld
les
outsl
jbe
ja
das
in
ljmp
insl
sub
fmuls
inc
inc
adc
insb
and
pushl
jbe
add
subb
xchg
push
out
and
push
xor
pop
lret
sbb
ljmp
lret
dec
insb
jge
mov
dec
mov
fabs
pop
stc
clc
cmpsl
inc
jno
sub
xchg
mov
jbe
iret
mov
fsubrs
and
in
aaa
mov
negb
decl
jl
dec
add
pop
sbb
outsb
fsubl
xchg
adc
out
fs
cmpsl
in
inc
decl
xor
fisttpl
push
mov
fwait
mov
es
loopw
jg
shll
inc
inc
sarl
xchg
movsl
and
push
adc
ret
and
addb
cmp
pushl
mov
xchg
into
loope
pop
push
add
xchg
fstl
jae
mov
mov
sar
cmpsl
lcall
mov
push
or
push
cli
mov
leave
jo
aas
mov
popl
xchg
decl
ja
leave
push
adc
adc
dec
adc
ds
push
jmp
inc
push
xchg
sbb
mov
fs
sub
enter
pop
jecxz
mov
dec
push
jbe
xorb
mov
out
push
call
ljmp
sub
ljmp
push
cmp
popa
sub
jmp
sub
mov
sahf
sbb
inc
fistps
pop
ljmp
push
inc
xchg
dec
jge
inc
push
test
aad
mov
addr16
jb
fs
inc
push
loop
fstl
inc
insl
and
notb
push
mov
cmpb
mov
push
mov
incl
pop
xchg
ja
push
cmpb
in
call
adc
test
filds
loope
cmp
xchg
add
sbb
jns
mov
mov
xchg
push
inc
mov
insb
imul
mov
inc
add
pop
lret
adc
in
inc
insl
or
lea
mov
in
sub
mov
gs
dec
xchg
lods
and
mov
sbb
mov
add
rorb
cmp
jle
pop
sbb
cwtl
adc
cli
iret
inc
cli
lcall
mov
loope
mov
push
xchg
daa
push
jb
xor
sub
dec
xchg
jmp
addl
callw
xor
xor
and
pop
icebp
decl
add
push
and
sub
pusha
pushl
std
jmp
jp
repnz
fldl
divl
lcall
imul
mov
call
mov
mov
dec
push
pop
or
scas
sbb
decl
je
insl
jns
adc
sub
rcr
mov
iret
cli
ja
leave
jno
mov
cmp
pushl
repz
out
xchg
fcoms
dec
je
out
xchg
sub
scas
xchg
sbb
and
lcall
call
pop
int
scas
scas
shl
mov
xchg
in
cmpsl
es
cmp
lahf
add
mov
mov
lods
push
lcall
inc
xor
jmp
mov
call
mov
shlb
or
dec
or
mov
les
jmp
bound
cmp
rcr
outsb
sbb
fmul
bnd
pop
dec
fsubs
pop
and
jb
lcall
cmp
xchg
adc
cmp
pusha
js
pop
sub
or
xor
mov
mov
or
and
sub
shr
std
insl
mov
rorb
testl
lcall
xor
push
je
gs
xchg
jnp
mov
pop
pusha
data16
dec
cmp
fs
out
xchg
or
or
in
shr
nop
dec
packssdw
into
pop
stos
aaa
fs
aas
jmp
sbb
push
test
sahf
popf
jl
add
mov
cmp
dec
pop
fcoms
push
int
cld
pushl
cld
cmp
mov
mov
bnd
lds
and
mov
mov
js
out
mov
test
jns
add
inc
pop
push
jb
mov
mov
decl
pushf
mov
inc
add
aas
addr16
cld
ret
daa
lea
pop
push
bound
jmp
mov
fstpt
dec
aad
push
pop
or
dec
fmull
or
jmp
sub
dec
arpl
adc
push
fwait
mov
je
ljmp
jns
fstpt
bound
xlat
lret
mov
adc
jb
sbb
decl
xchg
xchg
push
jne
lret
lret
jmp
dec
cmpsb
jp
xchg
xor
shrl
dec
addr16
sub
loop
mov
sub
ficompl
mov
pop
dec
in
inc
and
push
pushl
movsl
inc
sbb
adc
cltd
mov
xor
xor
js
mov
add
aad
int3
iret
push
mov
push
inc
popf
xchg
mov
sub
ljmp
mov
ljmp
sbb
add
dec
sub
mov
sbb
jg
jmp
stos
repz
xor
arpl
cmp
jecxz
stc
cs
sahf
fdivp
adc
jmp
cmp
and
adcl
xor
pop
and
int3
xor
pushl
cmp
jecxz
add
movsl
outsb
cmp
in
notb
loopne
and
loop
aaa
xchg
jmp
inc
push
cltd
mov
rorb
ja
sarb
or
rol
adc
test
or
repz
xlat
jo
pusha
dec
inc
fst
xchg
negl
ljmp
jnp
fcomps
pop
adc
and
fcomp
adc
sar
fimull
pop
sub
pop
jl
test
dec
mov
jbe
jns
popa
sub
cmp
jge
cs
sub
hlt
mov
pushf
popf
js
cld
fs
mov
jo
out
into
test
ss
test
sbb
xor
mov
mov
je
out
push
nop
xchg
push
dec
adc
mov
nop
xor
test
decl
jns
clc
push
shrl
inc
add
sbb
sbb
add
ss
ret
jmp
pop
xchg
nop
sar
in
mov
xor
inc
push
sbb
dec
inc
repnz
and
xor
decl
lret
jmp
arpl
pop
aad
mov
andb
es
or
in
js
pushl
out
sarl
jnp
mov
or
cmpsb
call
addl
decl
ja
mov
repz
icebp
add
adc
inc
dec
mov
fildl
cmp
add
or
xor
jno
rorl
cmpb
pop
xchg
sub
clc
mov
call
xorl
ret
hlt
mov
pop
insl
sub
pusha
push
cmp
push
xlat
mov
xchg
mov
inc
imul
push
add
leave
xor
pop
movsl
jnp
mov
pop
add
inc
and
jno
fisttpll
ret
mov
jmp
icebp
imul
and
repnz
shrl
cmp
or
call
dec
xor
adc
shrl
iret
sti
les
movsl
fdivrp
pop
mov
fisttpl
in
xor
sbb
das
add
mov
in
test
in
inc
lcall
ja
inc
out
out
cltd
sub
scas
in
cmpsl
cmc
addb
lods
gs
outsl
add
pushl
icebp
and
sbb
xor
push
sbb
mov
lcall
test
jmp
fisubl
pusha
push
xchg
add
adc
out
adc
loope
cmp
cmc
cmp
test
out
fs
adc
fisttps
ret
jg
dec
add
incl
lock
pushl
clc
mov
lea
repz
adc
movsb
jge
xor
jp
pop
mov
mov
xor
call
notl
lret
or
push
enter
pop
std
pushl
gs
mov
inc
mov
fwait
shlb
insb
cmp
or
or
ja
icebp
shrb
or
ret
cmp
or
adc
and
in
std
ljmp
sbb
flds
sbb
add
and
or
push
in
cmpsb
xor
call
xchg
insl
mov
add
jbe
popf
cmp
dec
lcall
lcall
push
adc
mov
lods
push
call
adc
and
push
xchg
pop
cmp
inc
adc
push
xor
cmp
dec
push
imul
push
inc
mov
ljmp
inc
loop
test
mov
cmc
cld
cld
rcll
fisttpl
je
movsb
lcall
jno
jbe
push
xchg
shrb
push
pop
mov
mov
xor
sti
mov
push
adc
jl
push
inc
sbb
fcomip
decl
xchg
std
mov
rcrl
mov
in
int
inc
pop
cmp
or
call
call
lods
mov
add
add
pop
cld
rolb
popf
dec
lcall
xor
dec
out
fdivrp
call
int3
jle
pop
ds
mull
mov
pop
mov
jno
hlt
dec
sub
or
cmp
cmp
out
andl
iret
js
repnz
dec
jmp
mov
out
jmp
loope
insb
mov
sub
rcrb
mov
xchg
push
stc
fwait
clc
clc
sti
cmp
data16
in
pop
clc
cltd
lret
xchg
mov
pusha
xor
outsl
stos
or
mov
jmp
outsb
add
je
daa
or
popf
push
out
test
fucomip
jmp
sahf
stos
mov
jmp
xchg
cmc
roll
xlat
shl
mov
push
iret
xlat
bound
pushl
mov
xchg
lret
nop
cmp
scas
or
ret
push
movsb
lcall
and
or
xlat
inc
into
icebp
dec
sub
xchg
jmp
jbe
int3
lds
pusha
ds
add
daa
fimuls
mov
mov
pop
mov
inc
call
cltd
mov
dec
out
fcomps
sbbb
dec
fistpll
and
mov
mov
into
aas
dec
jo
rorl
jae
sbb
cmp
movsl
fsubs
pop
das
test
ret
clc
sub
sub
adc
cmp
mov
in
jno
pop
or
lods
icebp
mov
inc
sub
pusha
sub
adc
mov
incl
je
jns
and
xor
aam
inc
xchg
je
or
sbb
aam
push
push
incl
sbb
aad
mov
mov
pushf
inc
fnstenv
loope
jbe
into
data16
inc
rcr
lock
dec
adc
ljmp
push
fsubrl
pop
fisttps
in
fwait
fdivl
xor
push
repz
xchg
mov
dec
int
inc
xor
jmp
mov
les
add
mov
jmp
push
add
bound
jle
das
pushf
xchg
cli
jmp
pushf
jne
sti
ds
faddl
cmp
mov
fimuls
ljmp
hlt
jl
repz
xchg
and
jl
lret
adc
cmc
shlb
push
mov
lcall
pop
cmc
call
in
mov
xchg
xchg
mulb
and
mov
rorl
ja
mov
dec
lahf
sarb
xchg
jle
ss
loopne
incl
lcall
repnz
xchg
movl
nop
and
push
sbb
and
jecxz
divb
add
out
ss
sbbl
dec
jno
loope
inc
or
and
mov
ljmp
outsb
dec
test
or
add
int3
mov
sbb
jg
cmp
repnz
decl
lock
jl
mov
into
dec
in
sub
sbb
incl
sbb
mov
sbb
mov
inc
or
cmp
hlt
add
incl
cld
push
aas
lea
fwait
mov
fldt
jecxz
in
stos
mov
decl
mov
inc
aaa
pop
push
ret
in
mov
es
negb
mov
mov
stos
hlt
cmpsb
cmp
inc
jne
inc
push
jo
cwtl
push
push
cmp
push
or
shlb
add
call
jg
ljmp
sub
and
loope
dec
cli
es
ljmp
ss
out
push
dec
push
cmpsb
mov
bndstx
clc
jae
or
call
inc
mov
mov
inc
dec
ss
insl
ficompl
int
inc
movsl
mov
jp
lcall
out
clc
bound
mov
lcall
or
or
jge
shrl
ss
fcomip
out
or
sub
call
fiaddl
adc
shlb
mov
gs
imul
out
test
inc
and
add
inc
add
adc
jle
lods
out
mov
mov
mov
cmpsl
xchg
cmpsl
sbb
es
jb
addr16
out
pop
in
fstps
mov
incl
fisttps
and
clc
jp
adc
sub
pushl
lods
jno
xchg
shrl
adc
mov
dec
mov
cmp
adc
leave
call
flds
mov
push
jo
xor
sbb
jo
mov
lods
jo,pt
mov
int3
inc
shr
call
push
push
mov
sbb
lock
loopne
push
push
add
jle
nop
call
dec
inc
sub
dec
enter
icebp
push
out
adc
das
in
jb
inc
inc
ljmp
js
rcrl
pop
sub
cmpsl
and
daa
push
and
mov
cmp
call
cld
add
push
in
push
mov
jo
lea
mov
xorl
std
incl
int3
add
jp
shlb
push
push
hlt
mov
xlat
jg
mov
mov
lods
mov
add
sbb
call
out
sahf
pop
pop
jae
xchg
inc
xor
sub
mov
add
jp
das
dec
mov
test
addb
rolb
popf
dec
fnstenv
arpl
sub
dec
call
sti
jl
mov
inc
and
loopne
jno
shl
jle
push
cmpsl
sbb
add
pushf
pop
xor
jg
add
sub
pop
cmp
enter
iret
call
lds
and
sbb
jnp
ss
fdivrl
pop
stc
and
test
movsl
addr16
xchg
lock
popf
mov
jmp
data16
mov
aad
imul
incl
mov
add
pop
dec
cmp
jg
icebp
aam
jnp
xchg
and
push
fisttpll
clc
sti
add
sub
pushl
mov
dec
xchg
or
inc
xchg
test
xor
inc
jp
lods
pop
adc
push
aad
xchg
xchg
cmp
pop
icebp
jmp
xor
sub
cmp
loop
out
xor
inc
aaa
jmp
mov
and
mov
xchg
push
in
dec
sbb
mov
lcall
mov
sti
in
test
fcoml
jno
jp
pop
cwtl
imul
gs
sbb
imul
pop
push
cmp
sbb
sub
rolb
xchg
out
push
out
loop
mov
sub
jae
mov
pop
pushf
lods
mov
jns
inc
enter
mov
loopne
dec
jl
mov
push
sub
jg
cmp
loopne
and
dec
mov
inc
loop
movsb
andl
dec
jmp
cld
call
push
or
ds
pop
dec
mov
xchg
or
lahf
dec
fidivl
or
adc
imul
pushl
movsb
cmc
push
iret
and
sbb
push
xchg
call
pushf
pushf
push
mov
inc
rorl
in
adc
jns
jp
mov
mov
sti
xchg
mov
pushl
loope
jnp
cmpsb
aam
fsts
icebp
leave
jb
in
inc
int
cli
push
dec
aaa
or
inc
inc
icebp
and
iret
lret
inc
mov
mov
or
loop
aas
cmovl
jmp
int
push
movsb
scas
adc
rclb
clc
ds
xor
jmp
mov
scas
inc
je
out
mov
jle
cmp
and
insb
mov
sub
sbb
cmpsb
mov
pop
addr16
mov
aaa
cld
ljmp
ss
stc
loop
lahf
pop
test
inc
adc
push
decl
lcall
xor
mov
xchg
and
into
aaa
mov
sbb
push
loope
cwtl
les
dec
push
push
fnstenv
popf
stos
jo
test
mov
aas
in
scas
aas
mov
movsb
test
fnstcw
add
push
sbb
movsl
sti
mulb
mov
in
xor
mov
mov
ljmp
push
push
jae
mov
add
pop
sub
push
pop
mov
rol
incl
in
mov
rcr
jno
add
mov
xchg
cvtpi2ps
shlb
adc
les
or
ja
mov
das
and
dec
and
push
outsl
insb
push
inc
or
push
cmp
add
jo
jnp
bound
lret
addb
inc
mov
jae
bound
imul
cs
add
fidivrs
outsb
imul
fiaddl
add
add
adc
mov
add
shrb
clc
add
inc
jb
push
insb
push
add
sbb
inc
sub
enter
mov
or
and
fwait
adc
pop
push
add
ds
sbb
out
imul
push
dec
gs
outsl
add
outsl
outsl
insb
push
outsb
popa
jo
add
lock
outsl
je
imul
sbb
cmp
sub
push
or
dec
sbb
push
js
or
cmp
scas
ret
or
push
popa
adc
outsb
adc
cmp
inc
mov
push
incb
popa
jb
cmp
push
in
subb
es
ljmp
dec
add
outsl
insl
insl
bound
pushf
adcl
adc
or
add
insb
mov
adc
loopne
dec
push
int3
and
dec
outsb
imul
dec
nop
pop
add
sub
outsb
xchg
inc
sub
iret
dec
adc
out
pusha
popa
aas
flds
sub
inc
push
insb
imul
mov
cli
arpl
push
sbb
mov
inc
push
pusha
cmp
push
fisubs
add
inc
mov
mov
push
pop
ds
insb
jne
mov
sarl
inc
jne
xchg
dec
push
xor
imul
insl
adc
jo
inc
push
fildl
sbb
inc
and
fcomps
pop
push
mov
sarl
inc
mov
popa
subl
mov
sub
jb
sbbl
jns
mov
inc
mov
fdivrl
xchg
in
shl
push
push
push
hlt
fs
js
sbb
inc
jecxz
std
popa
or
cmp
xor
xor
xchg
andb
fsts
or
dec
nopl
push
pop
pop
sub
push
cmpsb
mov
inc
adc
sbb
sub
loope
insl
adc
orl
add
jns
imul
sbb
and
mov
or
int
push
inc
sbb
jo
xor
pop
and
popw
adc
shlb
lret
mov
mov
push
inc
xchg
popa
and
fldl
ss
ljmp
jecxz
pushf
inc
or
pop
dec
inc
dec
out
or
inc
mov
sub
sub
test
test
push
pop
popf
bound
lods
xor
js
cmp
loopne
fs
test
stos
pop
push
add
cmp
ja
and
and
inc
popa
push
dec
cmp
es
jp
ret
fcoms
push
push
jg
or
insl
sbb
or
xor
in
cmp
aam
aas
or
loop
outsb
adc
outsl
jns
adc
int
push
or
adc
pushf
pop
jmp
xlat
and
stos
aad
mov
pop
outsl
jns
inc
je
mov
inc
inc
out
pop
sub
push
inc
inc
push
test
jg
and
pop
sbb
mov
insl
ja
jo
adc
or
pop
push
stc
mov
add
xor
and
enter
sahf
rol
stos
loope
xor
inc
add
cmp
adcb
mov
xchg
mov
ret
pop
dec
or
test
test
sub
xchg
and
pushf
mov
jne
inc
fmuls
add
xchg
aad
fbld
jecxz
pop
or
adc
push
jbe
inc
xor
adc
xchg
adc
outsl
jecxz
xor
jg
mov
push
dec
inc
sti
inc
adc
push
add
pop
and
repnz
outsl
add
rclb
dec
add
adc
sbbb
fildl
sub
rolb
and
jns
jne
cmpsb
mov
nop
shlb
or
adc
arpl
push
fdivl
sti
mov
add
fs
pop
adc
adc
andl
sbb
add
out
jmp
rcl
mov
jo
testb
pop
jge
shl
xchg
push
popa
sbb
ja
outsb
adc
enter
jno
cmp
lea
jns
push
sub
add
movl
cmp
negl
xor
scas
mov
inc
jb
and
jl
test
lods
jo
mov
and
arpl
sbb
pop
inc
imul
add
push
sahf
mov
inc
pop
mov
insl
notl
jle
unpcklps
inc
call
push
movsb
jae
into
cmpsl
cmp
xor
aad
ja
test
mov
or
clc
push
push
lds
inc
sahf
scas
popa
add
and
sbb
cwtl
add
push
mov
xchg
lea
ret
and
sbb
push
int3
fincstp
pusha
push
xor
push
pop
xor
shlb
mov
or
imulb
push
push
adc
and
xor
pop
cmp
fists
or
dec
outsb
dec
adc
cmp
scas
jnp
fwait
dec
ret
cli
ss
sar
pop
add
add
mov
add
mov
xchg
movsb
imul
dec
rcrl
push
xchg
mov
inc
push
addb
pop
adc
js
jl
in
inc
rcrl
inc
jb
and
xor
out
dec
and
jl
outsl
bound
dec
movsb
bound
orl
inc
jb
stos
jg
inc
push
jb
inc
jae
fcmovu
fcmovu
inc
leave
inc
shll
xchg
cs
imul
ljmp
sbb
jo
insb
and
rclb
push
add
push
clc
adc
mov
inc
orl
pop
push
mov
or
mov
popa
push
sbb
inc
cmpsl
push
push
dec
mov
push
adc
and
fcompl
push
inc
mov
aad
sbb
hlt
nop
inc
mulb
and
xchg
or
xorl
mov
test
and
icebp
or
es
stos
lds
jb
lods
fmull
rorl
cmpsb
aaa
in
or
push
ss
jl
xor
mov
pop
inc
mov
pop
xchg
mov
dec
mov
push
js
mov
inc
push
test
adc
sub
adc
sbb
dec
sub
cwtl
dec
mov
lods
sbb
or
sbb
adc
outsb
push
push
or
flds
fcompl
inc
adc
xor
out
mov
mov
dec
shl
mov
inc
inc
cmpsb
xor
es
mov
test
ret
mov
and
cwtl
add
inc
lds
xor
and
inc
dec
movsb
xchg
inc
outsb
sub
rcll
cli
adc
push
outsl
test
inc
sbbl
mov
pop
sub
jbe
pusha
adc
jecxz
add
das
sbb
ret
sbb
bound
nop
pusha
xor
fs
int3
add
pop
push
xchg
pop
inc
iret
mov
pop
lods
jns
or
int
nop
inc
pop
shll
pop
cmp
pop
je
outsl
and
adc
dec
push
sub
push
or
inc
aad
lahf
cmp
sbb
aam
out
mov
cmp
cmc
cld
add
sahf
pop
pusha
inc
cmovno
stos
enter
push
addr16
or
mov
fidivrs
jbe
repz
sub
jb
inc
adcl
xchg
dec
push
das
sub
dec
dec
jae
cmp
add
jne
pusha
mov
pushf
data16
xchg
add
jmp
pop
bound
and
adc
jp
mov
test
addb
add
les
mov
or
or
std
dec
fsubrs
add
popf
aas
dec
add
adc
add
mov
in
cmp
mov
add
mov
jae
loope
xor
stc
daa
in
push
add
js
push
imul
inc
pop
dec
pop
add
cmpsb
imul
add
and
jb,pn
or
sbb
adc
push
rcrb
out
jge
push
out
inc
cs
adc
fisubl
cmp
rcrb
jb
push
xlat
pusha
dec
jp
push
lahf
ret
inc
inc
es
jg
jecxz
add
and
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
