divb
in
mov
mov
add
xchg
call
adc
scas
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
cld
fistps
pop
push
push
push
push
xor
mov
mov
xor
aam
imul
add
jmp
test
jne
pushf
or
out
jge
mov
mov
push
xor
pusha
outsb
in
mov
pop
or
test
jne
inc
sub
ret
mov
jmp
pushl
dec
lock
fbstp
xor
lea
or
lock
dec
test
jg
add
imul
add
outsb
xchg
scas
loopne
negb
inc
add
adc
cmc
sub
sar
inc
or
adc
ret
push
repz
mov
fildl
mov
or
add
fbld
add
push
add
aaa
shrb
mov
int
daa
data16
cmp
mov
andl
sbb
adc
gs
hlt
cs
mov
sbb
out
inc
jne
adc
fisttpll
sub
dec
shl
adc
or
out
mov
mov
or
or
pop
cmpsl
lret
mov
in
jo
lock
add
in
lea
test
add
jl
add
popa
mov
int
jbe
fs
add
pusha
lock
mov
sbb
jge
mov
subl
add
push
xor
and
rorl
das
ja
sub
pushf
and
mov
movsb
mov
adc
jge
cmp
mov
in
fs
aaa
dec
push
mov
jb
in
scas
ljmp
or
sbb
mov
test
or
scas
outsb
sub
fsubs
scas
sti
mov
pop
push
add
fldl
aad
sbb
push
push
sub
jle
subb
pop
xchg
jecxz
mov
dec
add
push
push
push
aas
bound
push
lock
mov
aaa
jg
inc
pop
cmpsb
jmp
lea
xor
push
mov
cmp
cld
or
sbb
push
clc
jge
jge
cld
mov
mov
mov
xor
mov
pop
ret
incl
loopne
mov
push
pop
cmpl
addr16
cmp
pop
inc
sub
inc
push
sar
js
enter
into
mov
adc
mov
ss
push
sbb
orb
jl
jne
pop
adc
or
loopne
inc
lea
adc
adc
decl
jg
mov
adc
adc
ret
pop
pop
loopne
rcrl
inc
or
pop
adc
outsl
loop
pop
xchg
sbb
pushf
sbb
mov
sub
push
mov
sar
aas
xor
cmp
ja
adc
cmp
clc
add
mov
mov
adc
adc
scas
and
xchg
pop
sub
scas
add
cmpl
decl
or
ret
stc
sub
adc
cmc
cmp
jle
ret
pop
pop
cmc
mov
cmpl
or
push
out
sub
clc
cmp
jge
dec
cmp
add
jge
add
pop
cltd
xchg
add
push
ljmp
ret
enter
sbb
or
cmp
jl
cmp
jne
mov
addb
jmp
mov
push
jbe
mov
testl
das
mov
mov
or
nop
cmp
add
push
push
lea
mov
insl
mov
mov
push
xor
push
sbb
cld
aam
push
cmpsl
bnd
sub
fdivrs
cmpsl
mov
sub
xor
fsubrs
dec
mov
pop
leave
roll
pusha
not
lock
or
test
jle
cmp
mov
inc
xor
enter
movsl
pop
jecxz
dec
loopne
inc
icebp
sbb
inc
roll
mov
dec
inc
cltd
mov
cmp
jns
loop
pop
mov
jmp
push
sarl
lea
inc
sbb
ficoms
sub
nop
or
mov
and
mov
push
add
adcb
fsubrp
or
jbe
push
hlt
jg
xor
or
dec
sub
cmp
push
xor
push
push
sar
push
push
adc
cmp
jle
lds
or
out
ljmp
add
cmp
cmp
jae
push
or
mov
xchg
pop
add
or
push
addr16
andl
ffreep
add
jb
pop
add
xchg
mov
leave
ret
lea
ljmp
data16
dec
cld
aaa
cmp
repnz
push
push
push
cmp
mov
or
adc
or
mov
mov
fdecstp
cld
pop
dec
jo
stos
mov
jo
inc
sub
loope
jno
aad
aaa
repz
out
mov
or
cmp
test
sub
das
xor
jno
cmp
jne
push
cmp
fcmovnb
lock
push
cmpsb
adc
pusha
js
sub
mov
or
pop
pop
push
roll
lret
mov
ret
fbstp
es
pusha
mov
mov
cmp
fisttpl
adc
ficomps
out
pop
popa
xchg
sbb
mov
int3
add
xchg
add
add
cwtl
mov
ds
iret
out
test
jl
mov
mov
sbb
jge
out
adc
xchg
mov
in
or
pop
in
ljmp
das
fdivp
jnp
stos
or
pop
push
cmp
push
dec
dec
sbb
orl
movl
mov
or
xchg
lea
out
sbb
mov
imul
jmp
add
add
sbb
add
lcall
cld
jl
add
lea
push
xchg
cld
xchg
push
cmp
cvtpi2ps
adc
add
push
outsb
xchg
adc
xor
mov
push
loop
mov
nop
mov
scas
dec
loopne
scas
fwait
lods
dec
fdiv
xor
into
fsubrs
pop
out
je
mov
push
dec
cmp
je
hlt
test
adc
dec
loopne
pushf
sbb
imul
je
mov
mov
mov
or
mov
add
pop
ror
test
leave
lea
fsubrl
js
and
push
test
sti
or
das
pop
sarb
adc
xor
sbb
push
clc
dec
in
or
push
js
call
pop
xor
inc
pop
imul
sub
jnp
orb
or
rcr
xchg
ja
mov
jbe
or
es
stos
or
mov
or
add
cli
push
adc
or
popf
or
es
addl
roll
ds
cmp
add
or
fistl
or
and
mov
ret
mov
or
lahf
push
insl
fldenv
add
sbb
lahf
sub
add
ret
lea
clc
test
add
repnz
inc
popf
sbb
or
add
lcall
xor
fcompl
scas
bound
add
daa
js
xor
pop
lcall
ret
sub
push
xchg
inc
fadd
cld
or
in
push
sub
addr16
inc
jl
les
push
sub
push
mov
or
dec
inc
and
mov
cli
icebp
jne
add
and
pop
jl
add
fs
sub
aam
push
rclb
js
lret
add
mov
add
mov
push
test
adc
dec
call
mov
int
sub
xchg
call
xor
rorl
dec
andl
bound
push
or
push
insl
movsl
sub
push
js
or
adc
repnz
and
sti
add
dec
or
xchg
adc
pushl
call
sar
add
xlat
andb
clc
inc
or
cmpb
dec
dec
aaa
rorb
je
mov
test
subb
jg
pop
movsl
jl
je
insl
jl
je
ds
repnz
push
sub
jle
dec
sub
adc
mov
xchg
scas
mov
lock
dec
xchg
mov
icebp
adc
rcrb
cmp
sbb
and
leave
shl
aaa
pop
sbb
sbb
lock
xor
sub
cmp
mov
hlt
jp
ret
xchg
lock
jae
jno
lock
add
fisttpl
add
aas
pop
push
ret
mov
jl
fcomps
cmp
xchg
inc
in
ret
cmp
aaa
fldenv
sub
sub
inc
cmp
sbb
jg
nop
jbe
mov
cmp
ja
and
cs
lea
push
imul
sub
out
add
hlt
rcrl
xchg
nop
addl
sbb
gs
vmovlpd
shr
or
lock
sub
sbb
push
out
adc
pop
in
leave
sub
adc
bound
cmp
outsl
sub
popa
mov
sbb
sarb
sbb
sub
test
nop
dec
mov
adc
ss
rcll
notb
stos
cmp
ljmp
sub
dec
xchg
cwtl
int3
loopne
sbb
sbb
repnz
orl
loop
sbb
pushf
mov
or
and
mov
stos
push
outsb
or
dec
lea
shrb
ret
iret
adc
sbb
lock
sti
ss
sbb
into
sbb
and
jns
test
lods
fidivrs
fcoml
hlt
mov
and
repz
cs
jnp
leave
cmp
pop
mov
in
and
jne
mov
loopne
cmp
subl
and
mov
out
push
and
jmp
in
jae
stos
nop
mov
pop
out
cmp
and
sub
mov
add
push
and
into
lock
jge
pushl
aam
jge
push
cld
and
push
aas
das
cmp
mov
out
add
push
push
adc
lock
iret
push
clc
movl
xchg
fwait
jns
or
aam
mov
xchg
lcall
or
jle
sbb
inc
enter
mov
pop
loopne
push
daa
inc
or
loopne
xor
add
add
fldt
pop
sbb
stos
cmp
je
in
sub
xor
push
inc
test
aaa
insb
jge
mov
stos
add
in
and
cmc
mov
adc
notl
into
mov
add
pop
push
sbb
mov
fistpl
fistpl
jae
dec
sar
inc
je
arpl
or
jbe
stos
and
rcr
ret
mov
and
or
xor
jb
and
sbb
sbb
mov
mov
sub
push
mov
dec
adc
sarb
xor
push
jo
xor
or
or
and
lods
dec
xor
pop
add
push
mov
or
xchg
xor
sbb
jge
xchg
in
sbb
pcmpeqb
rclb
fldt
subb
push
xor
sub
decl
bound
fsubl
pop
dec
out
jmp
fdivl
out
sti
mov
mov
aaa
iret
rclb
cmp
pop
add
add
dec
sbb
fcompl
nop
xchg
mov
rclb
cmp
xchg
adc
xchg
xchg
ret
movsb
pushf
sbb
enter
pushf
cmp
xor
fmuls
xchg
mov
int3
enter
sbb
int3
in
movsb
cmp
movsb
enter
jae
cmpsb
enter
and
jb
rol
iret
and
aam
sbb
mov
and
cmp
mov
jle
lcall
dec
mov
jo
sbb
dec
jmp
jb
sub
xor
hlt
xor
sbb
test
je
or
out
add
add
int3
adc
test
sbb
fcoms
fcmovnbe
push
loope
jmp
push
mov
push
dec
insb
into
inc
pop
shlb
out
fstpl
sub
pop
push
xor
sbb
pop
mov
add
dec
enter
add
imul
addl
aaa
aam
stc
sbb
xchg
push
xchg
test
sarb
incl
mov
add
enter
push
fdivrl
adcl
push
push
and
push
sub
sbb
test
imul
fs
movl
lea
cmp
test
imul
jo
je
sub
mov
and
scas
jmp
fcoml
adc
js
pop
fdivrl
insl
int3
and
or
dec
das
dec
adc
je
lods
loopne
pop
or
xchg
sub
push
and
xchg
stos
popf
push
jne
flds
pop
mov
clc
add
jmp
xlat
lods
xor
xor
ret
mov
and
and
sbb
daa
dec
push
mov
pop
repnz
or
daa
mov
std
xor
int3
sbb
das
jecxz
dec
or
insl
test
shll
mov
push
lods
sbb
pushf
lods
je
jl
fmull
or
jecxz
sub
cmpsl
adcl
call
int
adc
cmpsb
xor
adc
adc
sub
scas
push
mov
and
pop
lahf
insl
sbb
and
daa
jns
cli
sbb
jne
shr
into
adc
movsb
sub
dec
adc
into
cmp
adc
cld
add
adc
add
jb
cmp
inc
cld
push
or
push
pop
sub
mov
sbb
and
push
insl
adc
fdiv
fistpl
jno
xchg
fdivs
sub
enter
dec
lods
sbb
push
mov
and
mov
dec
push
in
hlt
ljmp
sbb
pop
scas
inc
lock
shl
add
push
push
ret
inc
shll
hlt
mov
inc
and
ds
xor
fadd
aaa
or
or
cmp
psllq
lds
sub
or
int
sti
cmp
je
or
je
xor
push
push
pushw
or
test
mov
cld
pop
cld
movsb
pop
cmp
movsb
pushf
and
and
mov
orb
add
push
cmpsl
dec
xor
adc
cmp
sub
or
and
fisttpl
jge
out
pop
dec
subb
pop
hlt
je
gs
imul
dec
clc
test
mov
xchg
test
dec
sbb
mov
sub
pop
sbb
lret
gs
or
roll
pop
push
pop
jne
int3
add
add
mov
lret
sub
and
and
mov
mov
enter
jp
adc
adc
insb
jno
xor
and
orb
ret
dec
jmp
and
or
or
mov
lahf
out
scas
sub
rolb
je
aas
incb
in
jp
cmpsl
push
xchg
aam
stos
adc
mov
push
movsb
and
mov
stos
mov
test
jns
jae
and
sbb
fldt
push
ljmp
sub
sub
cmp
loopne
sub
mov
adcb
xor
jno
xchg
iret
adc
ds
sub
lods
sbb
test
push
fbstp
and
mov
das
adc
in
sub
dec
pop
pop
pop
test
xor
insb
stos
out
movsl
push
xlat
push
xor
ljmp
lods
mov
test
loop
aaa
xchg
sub
xor
sti
push
jne
add
mov
loopne
bound
daa
pop
ljmp
adc
shlb
in
dec
sub
xor
fwait
cltd
mov
rorb
ja
cs
aad
sub
test
es
dec
dec
push
pop
test
xor
xor
xchg
dec
inc
shll
sbb
xor
inc
sub
mov
aad
pop
shl
inc
xor
xor
push
jnp
sub
nop
mov
fadds
sbb
jmp
neg
je
sbb
arpl
sub
mov
insl
lock
jo
lea
imul
xchg
pop
enter
ja
adc
test
or
or
inc
cmp
mov
pop
imul
mov
lret
mov
cmp
test
scas
or
push
ret
push
fcomps
in
sahf
test
xchg
popf
mov
adc
add
xor
xorb
popf
pop
shlb
or
dec
or
lds
cld
push
adc
sbb
inc
loopne
in
std
pushl
fildl
ret
bound
and
inc
cmp
inc
cmp
fsubl
sub
cmp
adc
andb
sub
xor
cmp
inc
sub
imul
dec
push
mov
orb
int3
cmpl
fcomps
inc
fidivl
mov
sbb
popa
sub
adc
inc
cld
jne
mov
ret
pop
testl
and
push
jo
negl
add
int
pop
arpl
xchg
jbe
ret
push
je
ret
push
lret
jo
push
pushf
jge
mov
pop
ja
mov
or
push
je
push
fistpll
jo
push
push
mov
adc
mov
jae
fildl
push
into
inc
daa
sub
mov
rorb
sub
push
mov
mov
push
mov
inc
mov
jmp
cmp
ds
xor
inc
sahf
out
jnp
dec
dec
add
rcll
inc
mov
add
js
xchg
mov
movsl
adc
loopne
cmp
jb
stos
shlb
inc
inc
push
popf
imul
inc
inc
aaa
add
leave
out
adc
push
cmp
mov
pop
sbb
adc
adc
test
sub
in
dec
push
mov
js
dec
repnz
das
jns
cmp
xchg
std
cmp
mov
inc
or
into
fsubs
push
sub
mov
jno
adc
dec
adc
sbb
xchg
pop
inc
in
jne
jb
das
xchg
push
setne
cwtl
mov
and
das
adc
inc
push
push
push
sbb
mov
mov
add
cmp
jne
or
je
xchg
lock
cld
ds
lds
and
ret
lock
mov
sub
xor
lea
fcompl
add
jle
das
or
sbb
mov
int
out
lcall
inc
xchg
mov
cmovl
jnp
add
test
pop
lock
test
fsubr
std
mov
fs
add
repz
rolb
push
pop
mov
insb
add
mov
pop
imul
inc
fcmovnbe
ret
push
or
add
and
dec
or
sub
rcl
pusha
push
lods
nopl
push
sahf
adcl
or
sub
repz
int3
insl
inc
rcrl
sub
push
mov
or
pop
pop
sub
les
or
mov
stos
push
rolb
mov
or
in
push
lock
xor
shl
jg
fldenv
insl
in
mov
lea
ficoms
mov
dec
dec
je
sub
jmp
je
mov
jge
imul
int
xlat
mulb
adc
push
xchg
xchg
and
jecxz
sbb
test
loop
cld
cmp
mov
sbb
sbb
cmp
add
sbb
je
das
xlat
and
jg
sub
lock
mov
xor
inc
mov
cmp
jle
jecxz
cmp
cmp
push
lahf
adcl
int3
iret
cmp
jle
and
scas
push
and
pop
add
orb
pop
sbbl
sub
in
add
out
cmpb
jle
sbb
add
push
mov
cltd
int3
xor
push
loopne
push
mov
out
or
scas
sarl
lock
push
cmp
fmuls
sub
xorb
sbb
out
add
and
push
pop
cli
stos
adc
ds
inc
xacquire
loopne
add
daa
les
push
add
fmull
jne
xchg
or
and
or
cmovne
or
in
inc
cmp
out
jp
and
stos
pushf
fcomps
stos
test
cltd
inc
pop
repnz
rclb
pop
or
push
insb
xchg
bound
add
cmp
test
add
push
in
pusha
push
stos
or
inc
cmp
rorb
in
or
mov
push
inc
clc
xor
sub
inc
mov
sub
call
xor
fmull
push
jle
ja
shll
ret
rcrb
cli
stos
add
out
lods
pop
cld
loopne
add
imul
cmpsb
add
pop
xchg
push
dec
fsubs
sub
mov
mov
js
sbb
push
cmove
sbbb
push
sub
stos
push
and
add
xor
mov
or
andl
push
pop
and
inc
daa
pushf
mov
je
lahf
stos
les
shll
dec
ret
mov
xchg
loopne
push
in
into
call
jae
imul
imul
sahf
fdivl
stc
pop
push
js
cmpsb
test
adc
push
call
test
mov
sbb
jp
je
lret
lock
mov
jmp
call
push
inc
mov
or
or
je
mov
and
pop
or
push
push
xchg
js
stos
mov
icebp
je
popf
cmp
push
out
nop
or
adc
xchg
or
inc
mov
sbb
push
xor
test
aas
mov
mov
adc
repnz
shlb
pop
fidivl
and
or
mov
add
adc
aam
add
ss
fcoms
fsubl
or
pop
push
mov
pop
ret
add
cmp
je
pushl
jno
jo
push
js
xchg
cmp
sbb
adc
mov
push
adc
push
ret
cmp
fcoml
inc
add
fs
xlat
sbbb
imul
push
mov
cmp
add
dec
jecxz
sbb
mov
jmp
inc
arpl
shll
xor
cmp
push
cmp
fs
lods
jae
push
xor
xor
mov
or
add
mov
inc
addr16
cld
add
add
sub
aaa
lcall
test
jg
mov
mov
jmp
mov
mov
push
scas
enter
pop
sbb
inc
orl
dec
repnz
mov
mov
dec
enter
fcmovu
mov
push
ficompl
pop
mov
lret
pop
ret
mov
mov
rcrb
outsb
sub
jno
mov
subl
jl
mov
push
jne
sub
pop
pop
xchg
ss
jno
ret
push
pop
jmp
jle
push
sbb
xchg
in
ret
mov
insb
hlt
test
add
imul
push
sub
mov
and
mov
test
inc
cmp
jae
mov
incl
xor
inc
inc
jecxz
in
in
jne
in
jmp
lea
pop
jb
xor
jge
jle
in
sub
mov
nop
and
scas
pop
clc
add
orb
pop
push
cmp
jg
and
push
mov
js
mov
cmp
jg
cld
ret
fdecstp
divl
divb
add
mov
sub
call
ror
add
lea
cmpsb
adc
push
push
mov
or
push
adc
in
test
xor
fstps
icebp
xchg
add
hlt
inc
add
mov
mov
mov
sub
cmpsl
mov
dec
popl
lock
and
jb
int
push
clc
pushf
xchg
fidivrl
je
test
js
in
dec
hlt
jg
in
mov
xor
push
dec
jmp
sub
mov
cmp
push
inc
inc
xchg
xchg
add
inc
jl
xchg
lret
push
jnp
int3
xlat
imul
jecxz
sub
sbb
ss
sub
push
das
push
pop
lock
cmp
jl
fistl
adc
push
or
ja
push
test
cmp
shl
das
sbb
icebp
ret
mov
and
sahf
sbb
or
mov
xor
jbe
inc
sbb
mov
push
xchg
fimull
push
sbb
pop
jns
mov
mov
hlt
add
add
stc
mov
or
stos
cmpsl
shll
rolb
into
scas
test
cmp
pop
add
mov
inc
push
pop
scas
cli
rep
test
fbstp
mov
mov
jbe
mov
xor
cmp
fimuls
clc
pop
pop
pop
or
outsb
dec
jecxz
or
shll
xor
and
fcomip
mov
ss
jae
dec
mov
cli
out
or
adc
or
push
je
push
and
xchg
mov
ljmp
fs
int
or
sub
or
mov
mov
sub
movsw
pop
loop
incl
clc
sub
clc
jne
cmp
je
pushl
movb
adc
fists
add
or
and
aas
jo
or
inc
dec
loope
mov
mov
leave
arpl
out
cmpsl
shld
stc
ret
push
inc
pop
ljmp
mov
pop
ds
in
insl
adc
sub
setne
sarb
orb
arpl
and
fisubrl
clc
adc
rolb
push
and
js,pt
jo
mov
mov
scas
out
cmp
out
inc
clc
mov
xchg
std
cltd
push
test
xchg
or
enter
fistl
pusha
je
into
mov
push
rcll
dec
lock
inc
call
jmp
jmp
push
inc
and
js
sar
je
cmp
add
js
adc
mov
jne
addb
add
fimuls
add
adc
push
cs
push
inc
xor
cmp
aam
in
sbb
or
rorb
dec
add
call
push
push
pop
test
jb
add
adc
inc
ja
scas
or
push
mov
add
hlt
pop
cmp
loopne
pop
hlt
sub
adcb
inc
lcall
je
jle
mov
pop
pop
mov
in
sub
mov
ret
insb
cld
lods
test
cmp
lea
jbe
mov
push
jp
test
test
push
sub
inc
or
mov
add
add
add
mov
ret
mov
movsl
xor
pop
inc
mov
add
subb
dec
add
add
or
add
add
popa
aaa
adc
adc
xor
push
push
sub
inc
dec
repnz
outsl
mov
arpl
xor
popf
test
nop
add
pusha
dec
xchg
mov
and
jo
and
lea
cmc
mov
push
push
sbb
mov
ret
inc
cmpsb
jmp
push
stos
dec
out
aad
pop
or
test
popf
ret
fcoml
or
lds
ret
dec
fsubl
and
add
pop
icebp
jns
nop
mov
xchg
add
or
or
out
sbb
jns
gs
push
sub
add
mov
or
nop
pop
jne
pop
dec
sbb
and
in
push
mov
jecxz
insb
sbb
pop
and
xor
js
dec
push
movsl
jns
and
mov
shrl
in
add
jne
dec
mov
sbb
cld
js
ds
push
and
fisttps
mov
pop
sarl
and
pop
add
bound
punpckhwd
jne
push
inc
punpckhbw
adc
out
or
in
adc
sbb
inc
add
add
jno
xchg
jo
pop
lahf
cmpb
push
test
in
push
pushf
push
enter
arpl
or
push
push
cmp
jle
lcall
popa
mov
jecxz
or
repnz
arpl
and
cmp
pop
insb
rolb
cwtl
push
out
or
sti
clc
sub
cmc
out
push
or
dec
push
cmp
add
daa
das
fs
clc
pop
mov
enter
addr16
ss
adc
adc
xor
mov
add
or
and
jb
ficoml
push
adc
pop
or
and
stos
mov
sbb
data16
loopne
and
jns
test
pop
repz
adc
mov
lea
addr16
or
xchg
andl
out
mov
push
mov
ret
or
ret
sub
mov
and
in
sbb
and
xchg
sub
jl
xchg
mov
mov
inc
add
inc
push
lods
movsb
aaa
call
mov
and
ja
pop
fimull
stc
movups
and
mov
adc
cmp
popf
cmpl
push
cmp
in
mov
xor
mov
adc
pop
negl
ret
mov
sarb
roll
jle
push
imul
push
inc
js
xor
mov
mul
mov
call
mov
mov
jbe
lods
pusha
adc
js
mov
cmp
popa
jle
fucomip
icebp
jmp
sub
dec
je
fcoms
je
sub
jo
sbb
test
incl
lret
lods
dec
in
jmp
mov
jge
mov
mov
sbb
leave
cmp
shr
jl
jecxz
jne
sbb
popa
sub
jmp
push
add
push
mov
xor
push
cmp
test
add
inc
loopne
faddp
jbe
xchg
sbb
push
mov
jbe
xchg
fistps
pop
loopne,pn
dec
das
mov
mov
pop
xchg
and
push
or
xor
push
push
shl
std
lea
pop
pushl
js
pop
mov
lea
mov
push
movsb
int3
sub
mov
rolb
push
rcrb
jmp
cmp
je
cmp
lea
fs
sbb
lock
adc
cli
mov
sbb
outsl
mull
and
jmp
mov
sbb
and
jmp
pop
fisubl
and
xchg
jmp
xchg
sbb
sub
push
or
out
sahf
adcb
cmc
mov
push
iret
push
jg
fucomi
sub
or
adc
and
sbb
jns
push
inc
sbb
fstl
lea
push
insl
lahf
mov
add
sub
aas
or
movb
add
xlat
mov
pop
sahf
cmpl
push
add
xchg
repnz
jge
jmp
test
inc
push
mov
cmpsb
icebp
pop
icebp
fcomip
in
push
pop
push
lea
push
push
push
push
add
push
lea
xchg
inc
dec
cmp
ja
inc
cmpsb
add
dec
mov
inc
test
mov
push
jle
lahf
out
push
push
push
ss
jl
ja
pop
mov
xor
cmp
pop
xor
mov
xor
add
push
sbb
xchg
jle
xlat
push
insb
mov
mov
mov
pop
rcrb
int3
push
aam
push
stos
jg
mov
movl
or
inc
nop
test
popf
push
xchg
lods
in
push
push
nop
rolb
push
insl
cmp
jp
out
dec
adc
mov
in
ficoms
cmp
sub
or
xor
push
and
psraw
pop
push
pusha
and
test
movsl
bound
in
fwait
sbb
push
or
fwait
add
push
push
fwait
aas
sarb
scas
push
add
add
lcall
jae
ret
mov
int
xchg
aad
xchg
mov
sbb
repz
xchg
fstl
push
sub
es
pop
in
inc
inc
or
inc
jl
into
das
in
pop
add
push
xchg
sub
shrl
fsubl
mov
ret
clc
movsb
mov
xor
es
xor
mov
mov
rclb
test
push
push
scas
add
cmp
jl
jle
xor
imul
xchg
lock
inc
jl
sbb
mov
mov
push
cmp
or
cmp
ds
rol
push
adc
pop
aam
xor
or
add
das
ret
ret
adcb
outsl
jp
cmp
bound
das
add
gs
push
faddl
psrad
inc
fildl
cmp
xor
cmp
cld
sti
in
xchg
mov
fdivr
mov
aam
mov
movsb
rorb
mov
roll
jne
push
sub
cmp
mov
sub
inc
add
push
mov
divb
sarb
cld
push
into
je
lea
push
sbb
push
push
add
jo
or
enter
add
push
nop
push
pushl
es
push
push
or
adc
mov
push
es
mov
shrb
les
mov
or
pop
push
dec
lock
div
test
inc
rcll
dec
cli
push
dec
test
or
xchg
sti
in
outsb
fisubl
sub
sub
in
mov
dec
lock
jmp
sub
int
sbb
in
cmp
push
mov
add
imul
inc
dec
cmp
mov
mov
test
clc
mov
mov
and
and
clc
inc
lea
rep
push
ds
and
mov
push
or
mov
and
xor
and
mov
js
xorb
mov
mov
ljmp
dec
test
pop
jmp
insl
inc
add
or
adc
roll
mov
add
mov
cmp
fmuls
adcb
inc
mov
js
push
sub
je
or
push
push
fstps
leave
and
push
push
outsl
inc
mov
loope
lahf
sub
adcb
pushf
lods
aaa
in
and
push
dec
xor
sub
pusha
mov
orl
filds
mov
punpckhdq
jge
or
lahf
mov
jmp
pushl
and
or
jg
pop
lea
pop
shll
mov
pop
xor
mov
sti
or
cmp
push
push
add
fwait
sub
ja
insb
jle
cmpl
jne
mov
cld
inc
xchg
jmp
subl
cmp
lds
or
jbe
adc
rcrb
dec
add
jmp
add
dec
cmp
adc
mov
lret
fnstcw
divl
jle
xchg
hlt
sbb
add
push
push
push
jno
adc
imul
and
xlat
in
or
nop
sbb
dec
xchg
les
pop
fimuls
fs
arpl
pextrw
jno
incb
jne
movb
loop
mov
or
pop
repz
out
xchg
inc
cwtl
icebp
pop
dec
fldz
xor
pop
lods
xchg
dec
pushf
cwtl
mov
xchg
jne
fisttpl
mov
dec
aas
mov
xor
pop
sub
mov
pop
push
mov
cld
push
sub
test
mov
add
out
mov
sub
pop
mull
popf
sub
mov
sbb
dec
or
push
sbb
mov
sub
dec
push
dec
inc
jge
add
mov
mov
mov
cmp
es
push
sub
push
adc
enter
cltd
xchg
and
add
jbe
cmp
dec
inc
add
subb
les
add
xchg
movsl
mov
std
int3
ja
xor
shrl
cmp
xor
nop
adc
daa
sbb
push
push
xor
push
push
push
lea
add
test
add
test
xlat
cwtl
sahf
out
mov
cmp
xchg
pop
inc
push
push
push
lret
jl
jns
jns
xchg
andb
jbe
xor
das
or
jmp
cmp
xchg
data16
test
mov
aaa
jl
je
push
nop
sub
outsl
cmpsb
mov
inc
pusha
fsubrl
push
cld
push
push
pop
push
out
sub
ficoms
push
push
popf
pop
add
movsl
mov
cmp
cmovbe
xchg
fiadds
leave
sti
popf
cmp
add
mov
pop
sti
jne
push
and
data16
inc
negl
popa
in
sbb
ja,pt
lea
das
sbb
jae
insb
lds
and
leave
xor
adc
fmuls
inc
jo
xor
add
pop
sarl
dec
or
xchg
pop
jo
dec
mov
adc
adcb
sbb
push
or
pop
mov
xlat
push
adc
adc
mov
add
jg
push
jle
add
loopne
aaa
push
pop
cmp
cmp
push
pop
push
and
jnp
jbe
jmp
inc
fdivs
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
cmp
out
imul
mov
addb
push
mov
stos
sbb
hlt
lock
sub
mov
pop
push
popa
push
sbb
push
push
push
sub
rclb
and
cli
sbb
mov
out
push
pop
mov
add
mov
dec
pop
mov
loope
dec
mov
loop
shlb
or
jle
in
mov
div
and
adc
cltd
mov
lea
fiadds
dec
adc
cmp
daa
sbb
mov
xor
inc
mov
jge
adc
dec
outsb
mov
idiv
push
mov
push
push
jno
aam
mov
ret
xor
idiv
sub
lock
mov
popf
push
and
fstpt
adc
les
jmp
pop
fidivrl
mov
ret
mov
pop
pop
jge
add
inc
add
cld
stos
daa
in
or
out
dec
fstpl
aaa
or
mov
sub
add
xor
rcr
sbb
mov
add
xor
lds
daa
pusha
js
out
xlat
mov
dec
fs
or
xchg
arpl
mov
test
mov
lahf
jg
push
xor
pushf
movb
iret
ficoms
sbb
dec
lea
out
xor
adc
ljmp
std
sub
cmp
or
or
out
insb
mov
test
xchg
aam
fildl
mov
fistpll
std
test
jns
faddl
or
mov
fidivs
cmp
dec
sub
mov
std
mov
test
mov
inc
les
js
shr
cmp
add
sbb
popf
mov
orb
je
into
clc
fidivl
jmp
push
xchg
movl
sti
mov
mov
pop
movb
add
add
xor
jmp
mov
push
movsb
rolb
loop
mov
sbb
mov
aam
imul
arpl
jne
push
adc
adc
je
or
xchg
and
clc
dec
outsl
jmp
sbb
movb
test
pop
and
aas
adcl
push
xlat
ljmp
sub
push
and
out
imul
in
and
push
or
aad
int
mov
repnz
xor
test
add
add
or
push
iret
clc
shl
adc
mov
je
jns
mov
xlat
jb
xor
xchg
inc
jne
inc
test
fists
je
pushl
divb
push
jbe
adc
push
leave
pusha
pop
leave
add
fldenv
sbbb
ljmp
inc
ficompl
scas
mov
sbb
inc
stc
ljmp
mov
lea
lock
jg
xor
dec
or
dec
or
sub
jle
addr16
cmp
add
adc
scas
jle
adc
andl
pop
adc
sub
das
and
jge
lea
roll
cmp
add
sbb
popa
sbb
subl
push
adc
pop
and
and
sbb
mov
and
push
notb
sbb
lods
jmp
pop
int3
xor
stc
out
pop
popf
dec
xchg
ret
mov
ds
or
gs
pop
inc
inc
cli
and
or
push
cmp
lahf
in
and
sbb
mov
pop
sbb
imul
cltd
mov
and
add
or
popa
cld
push
gs
mov
xor
incb
inc
inc
push
add
push
mov
clc
fs
clc
setb
test
enter
lods
std
add
enter
divb
sub
loop
incl
lea
push
lods
aaa
cmpb
cld
outsb
fmuls
push
fstps
shlb
lcall
insl
test
add
call
dec
mov
loop
adc
xor
shl
loop
mov
adc
loope
je
std
lret
out
or
add
shrl
in
cmpsl
mov
pusha
xlat
das
push
scas
pop
js
mov
loop
mov
and
xchg
imul
testb
adc
pop
mov
lock
sub
pop
jmp
jo
pop
aam
dec
dec
sahf
or
pop
mov
out
nop
sub
add
sbb
xchg
mov
jmp
lock
mov
adc
sbb
add
jmp
stos
cwtl
insb
add
pop
adc
loop
scas
outsb
into
pop
into
push
mov
xchg
mov
jne
xcrypt-ofb
cmpsl
insl
cmp
push
clc
jecxz
loope
inc
inc
xor
add
inc
inc
sub
xchg
sti
xchg
pushf
sbb
or
aaa
ficomps
adc
cmp
fcoml
add
test
jne
xorl
and
inc
ja
sub
lcall
add
inc
add
and
loop
stos
insb
dec
out
rclb
movsl
fstl
and
insb
push
push
les
sub
enter
bnd
test
jns
lock
push
mov
rorb
faddl
daa
push
jae
add
mov
ss
scas
jne
je
add
pop
out
cmp
mov
fstl
and
inc
sbb
push
enter
test
add
call
inc
mov
add
xor
insb
add
inc
xor
data16
lret
adc
push
sbb
xor
jo
insb
pop
push
pop
mov
sbb
xor
mov
add
arpl
mov
push
push
or
xchg
loope
iret
and
adc
imul
mov
sbbl
insb
inc
xor
enter
nop
adc
sbb
call
add
push
mov
push
aaa
mov
int
dec
jmp
push
mov
push
cmp
mov
adc
leave
adc
jne
mov
fnsave
and
push
shlb
xchg
or
jb
in
pop
push
sbb
mov
or
xor
andl
and
dec
andb
adc
mov
repnz
xor
daa
mov
test
je
cmp
sub
sbb
adc
mov
jle
jmp
dec
mov
sub
dec
insb
js
push
sarb
add
lea
orl
lods
rolb
inc
imul
es
adc
jle
fcoml
sub
adc
and
and
and
outsl
into
mov
mov
cmp
jle
or
cmp
scas
adc
das
aaa
scas
jne
out
cmp
sahf
pop
addr16
fwait
mov
imul
aam
loop
jae
jae
rorb
cmp
sbb
or
enter
repz
push
inc
cmp
sub
cmp
mov
js
dec
clc
pop
test
loope
cmp
sete
adc
loope
das
insl
add
and
dec
lret
adc
fcoms
xchg
sahf
test
data16
push
in
pushl
inc
jecxz
bound
lds
fwait
push
dec
enter
scas
mov
rcll
mov
add
stos
inc
nop
add
mov
mov
inc
fwait
mov
popf
xor
in
add
sbb
aaa
orl
mov
sbb
roll
pop
push
dec
rorb
inc
mov
mov
mov
js
pop
push
adc
roll
and
and
fistpl
dec
adc
xor
jo
lock
loope
das
mov
mov
xor
xchg
sahf
adc
or
push
iret
sbb
mov
cmp
popl
out
sub
daa
addl
test
push
test
movsl
jle
sti
add
or
add
pop
mov
out
inc
outsl
mov
jne
nop
pushw
insb
adc
push
adc
add
pop
pop
aas
ret
pop
les
mov
enter
or
xor
stos
popa
jo
adc
out
test
repz
in
call
outsl
sbb
lock
outsl
loopne
dec
and
cld
jg
cmp
arpl
push
mov
xchg
cmpsb
stos
and
in
add
dec
add
lock
mov
fwait
loop
cmp
popf
add
xchg
out
add
cmp
jge
adc
inc
push
or
or
call
sub
inc
xchg
or
out
adc
or
jae
mov
xchg
or
cmpsl
les
ss
xchg
rorb
push
shufps
or
jmp
or
stc
sub
push
mov
hlt
dec
jb
pop
and
push
not
lods
imulb
clc
insb
xchg
cmp
xor
inc
pop
arpl
cld
cld
data16
mov
mov
hlt
add
ljmp
pop
pop
ss
pushl
push
dec
out
shrb
popf
jp
sti
je
add
xchg
lock
call
cld
sub
lock
xchg
shlb
dec
pop
aaa
lcall
je
in
jmp
shr
push
mov
shl
jge
add
sub
add
push
ja
imul
jne
inc
out
xchg
fstpl
dec
dec
jp
inc
roll
movb
adc
or
inc
stc
inc
lods
pop
mov
add
jo
insl
pop
push
movb
test
xorb
mov
js
ja
pop
clc
jg
mov
push
adc
cmpsb
add
jb
sbb
das
or
lahf
mov
pop
loopne
faddl
or
clc
jecxz
pop
mov
outsb
and
pop
or
push
outsb
pushl
imul
pop
sbb
mov
js
mov
loopne
sub
cltd
push
xor
xor
cmp
je
orl
sbbl
arpl
and
sti
je
cmp
sbb
inc
jmp
push
lea
push
mov
push
sbb
shrl
push
cmp
push
or
jbe
pop
push
sub
jle
add
jo
mov
pop
out
pop
shlb
mov
xor
push
sbb
aam
sbb
fisttps
push
push
jo
in
fs
inc
cmp
loop
hlt
inc
loopne
add
subps
js
jmp
mov
in
push
sub
iret
ret
mull
inc
movsb
jecxz
pop
clc
jbe
mov
stos
add
test
inc
inc
push
aas
es
sub
insb
ror
and
sub
sub
add
rolb
add
pop
nop
mov
fstl
push
scas
sbb
aam
ficoml
and
icebp
lock
lea
andl
add
mov
xchg
pop
push
add
test
mov
insb
pop
out
popf
loope
nop
addr16
movl
mov
inc
stc
xchg
dec
sub
inc
push
jno
pop
dec
xchg
je
andl
je
jnp
lea
push
xor
call
in
les
cmp
xlat
rolb
push
cmp
jae
push
bnd
xor
daa
hlt
cwtl
mov
jmp
jns
pop
jae
or
ja
iret
fst
jnp
in
jp
dec
mov
stos
je
xchg
adc
xchg
sbb
pop
arpl
add
or
fs
inc
pusha
mov
lock
add
sbb
lock
adc
push
jbe
jp
adc
fistpl
ljmp
js
lock
mov
inc
insl
aad
ds
roll
xchg
addl
adc
addl
shrb
and
out
and
inc
stos
scas
sbb
pop
jns
aaa
out
ret
dec
mov
aaa
loope
add
adc
ds
dec
js
mov
cmpsl
outsb
cmp
test
roll
jge
cltd
add
pop
das
nop
dec
pop
loop
adc
lret
mov
ret
push
jnp
mov
pop
cmp
xor
adc
lock
test
and
push
lret
or
movsb
inc
subl
jno
mov
in
fidivrl
mov
mov
adc
sub
roll
mov
add
roll
rclb
xor
test
adc
cli
jb
sbb
int
xor
mov
jp
lea
fldenv
add
rorb
inc
add
inc
xchg
lock
push
add
arpl
pop
or
sbb
sti
cmp
adc
orl
fstps
pop
int3
xor
adc
mov
stos
sbb
hlt
push
sbb
mov
or
clc
sbb
sbb
sub
mov
mov
lock
test
fstl
lea
loope
call
add
mov
mov
sar
jb
aas
js
test
stos
sbb
push
add
mov
insl
mov
leave
test
js
lret
inc
inc
loop
pushfw
push
xor
mov
push
setne
cmpb
outsl
lods
jne
push
mov
and
das
pop
jbe
xchg
add
or
stc
mov
fmull
push
push
or
xchg
add
dec
nop
nop
inc
or
xchg
push
ret
xor
mov
pushaw
enter
or
movsb
push
jmp
xchg
imul
inc
push
dec
or
shrb
or
outsl
pop
mov
inc
jbe
scas
ds
sub
repnz
loop
shlb
add
fnsave
test
xor
popl
cmpl
push
and
push
pop
xchg
sbb
sub
mov
sub
mov
dec
notl
mov
scas
mov
mov
push
aas
push
lea
push
out
mov
out
into
repnz
adc
nop
jne
pusha
dec
xchg
mov
push
adc
ja
out
adc
jp
in
add
cmp
leave
xlat
scas
adc
call
jnp
loop
push
in
pushf
cmp
xchg
mov
jl
push
sbb
lods
mov
stos
mov
mov
cli
imul
jl
and
push
cmp
sahf
push
mov
sub
or
lods
pop
sti
movsb
jo
loopne
insl
adc
sbb
nop
nop
or
sub
push
xchg
or
shr
push
sti
nop
xor
and
xchg
adc
test
lock
nop
dec
and
and
sbb
pop
mov
loopne
pop
incl
and
add
cmp
fs
mov
xor
loopne
push
mov
and
pop
mov
or
aas
adc
inc
jge
inc
jge
xor
push
pop
sbb
mov
xchg
fldt
inc
or
sub
jge
push
xchg
xor
outsb
mov
loope
sub
rorb
mov
push
and
dec
mov
pop
pop
mov
cld
and
imul
icebp
fucom
fdivs
lods
les
inc
inc
or
aad
call
test
jbe
inc
roll
in
rorl
mov
push
test
or
mov
push
xchg
mov
or
push
mov
mov
xor
test
scas
push
arpl
pop
mov
ja
mov
fs
lock
jo
repz
test
mov
leave
fistpll
pushf
mov
cmp
in
add
repnz
adcb
xor
loope
jl
adc
xchg
mov
stos
insl
mov
mov
movsl
jne
and
push
mov
shll
inc
lock
pushf
mov
push
add
lea
lea
or
lea
push
scas
enter
clc
or
mov
inc
and
xor
in
aaa
mov
xor
pop
nop
enter
pusha
mov
enter
xor
mov
or
fdivr
insl
sub
fcomps
and
int
and
fwait
inc
push
loop
mov
push
aam
xor
dec
sbb
inc
mov
dec
lea
dec
ret
or
out
lock
mov
push
push
sbb
xchg
inc
out
dec
lret
pop
adc
into
dec
shrb
mov
addb
or
add
xor
mov
adc
sub
mov
das
push
xchg
mov
pop
cmp
mov
jbe
or
cwtl
inc
cmpsl
sub
hlt
jp
xor
mov
outsl
rcll
mov
jmp
cmp
add
nop
aam
cmpsl
push
cmp
xor
aam
dec
or
loope
loopne
out
inc
mov
in
pushf
aaa
jno
enter
mov
mov
push
popa
popa
mov
insb
jne
dec
insb
dec
arpl
jno
and
imul
jno
cmp
sbb
xchg
jb
push
and
rorb
aam
dec
repz
movsl
dec
or
addl
adcb
loopne
push
xor
or
cli
fdivl
xchg
or
pop
lds
dec
sarb
in
inc
loopne
xor
add
test
sub
add
sub
dec
sbb
push
mov
pop
sub
shrl
pop
bound
dec
add
mov
jl
adc
add
xor
ret
lods
adc
sbb
jbe
jecxz
call
mov
sbb
in
mov
pop
mov
xlat
push
cmp
loope
mov
dec
hlt
jle
insl
test
mov
jb
jne
xor
test
jo
shl
ret
pop
icebp
push
mov
sub
call
xlat
lock
jge
mov
pop
movsb
fdiv
sub
push
push
aad
cmp
lds
test
sbb
stc
mov
xor
adc
out
ret
addr16
imul
adc
fsubs
je
and
sarb
test
sbb
sub
add
les
and
sbb
sub
xchg
imul
aam
or
xor
dec
sbb
mov
insl
mov
in
mov
or
outsl
addr16
mov
incl
std
jne
push
pop
cmp
je
pusha
push
mov
dec
or
mov
or
push
push
sbb
adc
xor
aam
shrl
jo
icebp
lret
or
lods
sbb
jb
jo
in
cmp
mov
js
aam
xchg
repz
xor
lea
mov
loope
push
mov
in
xchg
xchg
push
lcall
adc
es
pop
sub
or
stos
push
push
dec
sub
cltd
fdivs
loopne
sub
ret
cli
jnp
pop
mov
push
enter
mov
imul
das
xor
push
cs
aam
fldt
out
daa
das
sbb
std
xor
or
das
sub
ret
icebp
cmpsl
sub
xchg
mov
and
in
pop
insl
into
shlb
sub
sahf
dec
lret
loopne
xchg
icebp
sqrtps
sub
push
fldt
lods
push
xor
enter
je
xor
loopne
or
pop
aam
rol
xchg
mov
lcall
adc
add
mov
and
mov
out
sbb
push
mov
mov
mov
pop
jmp
push
add
push
or
out
pop
adc
pusha
jnp
pop
jns
sbb
pop
adc
xchg
mov
sub
add
add
mov
add
and
sbb
or
dec
xor
inc
popa
pop
and
or
mov
out
dec
mov
sbb
sbb
or
mov
lea
pop
and
fsubrs
lret
insb
loopne
xor
mov
sub
orb
mov
ret
mov
push
jno
push
cwtl
lock
nop
lock
sbb
mov
sbb
or
movsb
pusha
xchg
pop
mov
or
movsl
lds
xor
adc
pop
or
xchg
xchg
push
in
inc
fsubs
xchg
aam
sub
sub
and
jbe
mov
adc
or
mov
mov
xor
inc
mov
xor
cmp
rclb
popl
cmp
mov
jl
or
in
ja
push
jbe
ds
mov
xchg
int3
push
nop
out
xchg
push
xchg
cld
out
mov
es
push
push
sub
ja
dec
jl
mov
dec
add
push
test
add
push
inc
ret
add
popa
je
push
or
jb
pop
roll
push
je
or
mov
add
push
mov
mov
inc
add
bound
lret
in
fst
push
mov
dec
sarl
hlt
inc
pop
lock
dec
add
aad
push
sub
mov
rclb
add
adc
add
mov
fwait
push
lahf
adc
mov
and
add
lods
xor
ljmp
dec
hlt
sub
push
add
and
movsb
sbb
add
jno
or
notb
pushl
ret
adc
xchg
std
mov
inc
cmp
or
mov
mov
pop
enter
xchg
outsl
in
adc
inc
iret
clc
or
xchg
into
cmp
ja
add
jb
xor
notb
rol
scas
add
dec
stos
into
cmp
ret
and
adc
xor
faddl
inc
bound
mov
push
push
cmpb
mov
xor
gs
pop
inc
add
xor
popf
popl
lahf
sbb
mov
or
dec
push
jl
mov
in
push
int3
push
inc
inc
and
lds
or
inc
ja
cltd
pusha
inc
sub
xchg
hlt
and
lret
cmp
sbb
add
sbb
xchg
insl
add
cmpl
ret
leave
xlat
mov
test
or
push
out
push
or
jge
dec
push
int3
or
xchg
and
or
sbb
sbb
pop
nop
add
sub
stos
inc
pusha
inc
ja
dec
xchg
fiadds
leave
test
adc
or
test
ret
pop
add
cld
je
cmpb
cmpsl
cmp
jmp
lds
in
and
dec
xorps
add
xchg
loope
clc
je
lret
ljmp
sub
xchg
sti
lea
push
lea
push
inc
push
dec
add
cltd
popf
push
leave
cltd
scas
jp
insb
cltd
sahf
popa
push
fisubl
aaa
std
inc
cltd
lret
cmp
jl
xchg
cmp
jle
loope
mov
pop
sub
pushf
jle
push
fisubs
cli
sbb
icebp
jne
popf
mov
ret
jmp
sti
push
ss
cmp
push
jns
into
sbb
xchg
pusha
out
jl
cmp
je
sub
jne
and
sti
ljmp
dec
aas
cmp
xchg
dec
dec
fstps
loope
ret
test
imul
push
push
bound
in
pop
adc
dec
fwait
or
sbb
mul
fldcw
fisttps
xor
push
out
push
dec
or
in
out
or
sub
adc
fldcw
inc
dec
or
pop
sub
in
inc
aas
xchg
pop
or
cmp
mov
fcomps
js
movsl
xchg
pop
or
push
pop
imul
push
fsubrp
inc
add
movsb
out
clc
mov
and
int
sarb
xor
mov
fiaddl
divl
add
cmp
inc
or
or
push
or
jne
xchg
cltd
dec
insb
add
into
jne
pop
outsb
sub
incl
cmp
je
incb
testb
jle
jbe
push
mov
fistps
mov
mov
xchg
xor
pop
mov
push
scas
add
inc
or
pop
pushl
das
mov
popf
mov
mov
add
jle
adcl
xchg
dec
movl
push
sub
dec
and
js
jl
dec
sbb
dec
push
sahf
xchg
js
rclb
inc
xorl
or
in
add
or
add
adc
scas
cwtl
adc
add
adc
add
rclb
mov
aad
inc
jne
sub
cmp
ret
pop
push
pop
stc
dec
push
cmp
test
decl
jns,pt
push
leave
push
cmp
je
xor
clc
es
jbe
mul
seto
in
neg
or
push
divl
imul
or
outsb
mov
mov
push
xor
test
leave
jno
sub
shl
fnstenv
or
mov
jecxz
cmp
clc
push
push
dec
pop
popa
js
xchg
sub
inc
or
ja
inc
sbb
adc
dec
inc
push
sbb
jecxz
push
stos
sub
or
add
inc
inc
mov
push
inc
int3
test
mov
sbb
ljmp
inc
mov
stos
je
sbb
sbb
mov
cmp
mov
mov
and
mov
add
clc
add
add
je
push
lahf
in
add
das
testb
hlt
or
lods
mov
fadds
and
xor
dec
add
jmp
push
loop
sar
les
loopne
stos
add
inc
test
mov
inc
cmp
jae
add
addl
inc
add
cmp
xchg
dec
lds
pop
loopne
sbb
loope
push
aam
in
cmp
jne
mov
mov
cmp
push
push
mov
js
mov
xchg
inc
pop
inc
in
jmp
gs
sbb
cmp
daa
addr16
xchg
jecxz
and
movsb
sbb
pop
or
pop
sub
dec
sub
push
or
lret
je
fcomi
movsl
les
js
pop
or
or
jne
jecxz
or
int3
inc
add
sbb
dec
xor
dec
mov
repnz
sbb
dec
or
push
adc
mov
rorb
icebp
lar
add
xchg
test
scas
push
add
lods
xchg
mov
cmpb
jno
mov
lods
lea
push
mov
push
je
inc
pop
or
lods
icebp
mov
sub
mov
add
pushf
and
inc
mov
and
adc
out
icebp
adc
inc
push
out
mov
sub
in
in
shrl
in
sub
add
pop
movsl
push
jle
imul
push
popa
sub
imul
orb
loope
cs
icebp
and
xor
inc
jp
add
loopne
sub
xchg
and
cmp
js
add
sbb
neg
push
mov
ret
pop
mov
adc
hlt
loopne
mov
pop
out
jne
pop
fisubrl
loop
jle
push
push
je
je
rorb
jmp
jbe
or
int
cmp
xlat
add
pop
lods
lods
xchg
jb
mov
xor
popf
add
sub
sub
rcrb
add
loop
call
cli
bound
test
sub
lods
cltd
jbe
cwtl
fwait
imul
adc
jnp
mov
mov
pop
in
jne
push
ss
or
pushl
in
and
ja
or
sbb
inc
xor
ss
or
call
and
insl
mov
inc
dec
lock
add
popa
mov
jmp
add
mov
ret
mov
or
xor
and
jmp
daa
inc
adc
testb
or
push
or
popf
mov
cmp
or
shll
pusha
movsb
pushw
push
pop
jl
push
insb
dec
mov
movsl
sbb
xchg
cwtl
fcoml
je
mov
mov
js
jl
adc
out
mov
and
enter
out
imul
inc
lods
add
add
pop
andl
in
mov
inc
push
xor
ljmp
pop
dec
inc
push
pusha
das
mov
push
or
sahf
mov
sub
je
jo
nop
inc
push
insb
push
sub
dec
lahf
cmp
sub
jb
sub
add
cwtl
cmp
stc
inc
push
repz
ret
push
xchg
sbb
sub
jbe
sbb
jecxz
or
ljmp
or
sbb
outsb
test
sub
or
lahf
cli
ret
insl
je
orl
fnstenv
test
dec
or
or
ja
out
test
in
cmpsb
xchg
lea
mov
jo
and
icebp
add
pop
cmp
jne
popf
sarl
test
in
mov
sbb
aaa
dec
out
cmp
pop
test
cmp
leave
int
into
mov
cmp
mov
icebp
sti
xor
jbe
push
test
jmp
xchg
xor
mov
sti
in
add
fcmovnbe
push
addr16
cmp
pop
iret
xchg
pop
repz
lea
cwtl
popf
mov
pop
fidivrs
pop
sbb
mov
sub
adc
int
mov
and
xor
sub
jge
mov
xor
into
and
adc
mov
cmp
imul
lds
add
das
fisubs
jmp
or
gs
or
bound
cmc
icebp
and
in
jmp
enter
andl
movsb
mov
sbb
jns
push
or
push
or
sbbb
dec
das
fsubl
or
sub
iretw
dec
test
xor
sbb
push
outsl
arpl
stc
cwtl
cld
cmpsb
mov
aam
or
dec
scas
add
fsub
add
das
adc
sub
adc
int
adc
push
in
insb
fmull
and
and
xor
xor
adc
shll
pop
sbb
cmp
mov
add
dec
pop
daa
in
or
pop
sub
push
insl
sbb
adc
mov
js
add
mov
push
inc
int3
mov
sbb
dec
pop
cld
cmpsb
pop
pop
jge
mov
adc
imul
dec
add
loopne
xchg
insl
ss
jl
mov
inc
pop
pushf
and
inc
add
cmpl
rolb
and
inc
or
inc
scas
clc
mov
enter
and
xchg
xor
jmp
dec
jne
inc
and
daa
add
stos
pop
test
ja
xchg
andb
leave
ret
jp
cmc
out
pushw
pop
dec
bound
test
aaa
loopne
out
sbb
sub
cli
orl
xor
and
ret
fs
sub
cld
sbb
ss
dec
mov
jae
add
jno
adc
push
fldt
or
cwtl
gs
inc
shl
mov
dec
xchg
aas
inc
mov
rorl
andl
and
and
test
mov
sub
loopne
andl
mov
daa
es
sbb
inc
and
and
and
leave
mov
adc
repz
push
sbb
push
mov
cmp
or
push
aad
pop
mov
mov
sbb
add
dec
cmpsb
das
lods
je
js
mov
and
jne
mov
jle
pop
adc
add
in
cmpsb
mov
js
inc
mov
test
cmp
jne
jae
ret
hlt
sbb
mov
mov
pop
int
push
loopne
jmp
push
ficomps
xchg
addr16
loopne
push
jbe
aam
scas
inc
push
jb
adc
shrb
or
dec
adc
ret
and
mov
mov
in
pop
pushf
or
jne
sbb
mov
jecxz
repz
popf
pop
clc
adc
dec
sar
outsb
and
and
lea
pop
cli
mov
movsl
xlat
pop
jb
in
adc
lea
scas
iret
cmpsl
xor
std
pop
pushf
pop
mov
aad
jp
jne
add
pop
lods
mov
push
pop
jp
hlt
add
push
adc
shrb
mov
dec
fcmovbe
loop
dec
rorb
and
or
jge
test
imul
and
lret
adc
mov
jmp
xchg
test
jg
daa
push
cwtl
cmp
fmull
pop
rcrl
or
mov
jo
inc
insb
pop
fsub
inc
loopne
fadds
test
test
sar
sbb
sbb
xor
pop
pop
ret
push
push
test
inc
push
shl
mov
mov
fsub
rcrb
roll
rclb
add
sbb
xor
sahf
outsl
inc
dec
push
les
dec
adc
xchg
or
mov
rclb
mov
xor
or
or
pop
or
test
or
adc
push
stos
or
mov
xor
xchg
cmpl
mov
pop
enter
inc
jmp
xchg
sbb
dec
repz
dec
lea
sub
int3
sub
cmp
jmp
jns
and
icebp
mov
inc
aad
mov
ret
mov
pop
adc
dec
lds
fmuls
popf
mov
loope
add
adc
cltd
push
ret
add
adc
mov
and
sbb
clc
add
dec
cmp
sarl
aam
pop
xor
mov
out
sbb
int3
shll
push
push
or
mov
jg
push
sub
add
jl
enter
call
lcall
stc
movsb
and
add
or
pop
push
jne
stos
adc
xorl
add
pop
sub
data16
call
rolb
xchg
andb
call
psrad
and
xor
xor
push
mov
test
sahf
xchg
sahf
dec
xor
pop
lods
jecxz
orl
xor
or
pop
pop
mov
pop
inc
push
daa
or
add
xchg
int3
inc
bound
rolb
les
push
arpl
ret
sbb
xor
xor
stos
mov
lret
lds
dec
lods
adc
fldcw
scas
and
in
cmpb
je
mov
xchg
popa
sbb
add
out
jnp
orl
push
push
shlb
or
insb
insb
push
je
adc
sub
fwait
push
inc
pusha
loop
pop
cmp
hlt
je
cmp
jne
inc
icebp
jb
pop
mov
cmp
outsl
rolb
adc
adc
mov
movsb
jne
add
test
dec
sbbb
lea
inc
fmull
jo
mov
je
xor
in
mov
add
adc
push
inc
lds
pop
pop
inc
mov
seto
dec
fistl
adc
inc
sub
out
stos
and
fidivl
sub
cmp
and
adc
pushf
nop
inc
das
add
es
loopne
adc
push
pop
or
inc
loopne,pn
aam
out
jl
sbbl
push
pop
test
pop
nop
sbb
jmp
mov
or
inc
add
pop
out
add
test
add
leave
or
insl
sti
in
aam
mov
sbb
push
push
mov
dec
insb
push
push
push
or
gs
push
pusha
jb
or
push
sub
add
into
add
movsb
in
cmc
dec
out
adc
jno
jno
inc
das
mov
dec
fsubl
sbb
push
shrb
and
test
jmp
outsl
es
test
and
push
cmp
lods
sub
nop
or
or
loopne
xor
and
sahf
dec
pop
mov
inc
mov
nop
je
adc
cmp
mov
fldl
les
inc
adc
test
outsb
imul
enter
fcomps
and
add
mov
and
pop
push
les
dec
cmp
imulb
mov
jmp
mov
sbb
rcrb
test
mov
inc
fistpl
sbb
rcl
ret
ja
ret
adc
rcrb
shlb
sub
add
add
push
mov
je
jmp
data16
cmc
jl
inc
inc
hlt
movsb
aas
push
gs
cmc
lea
or
or
mov
adc
roll
aad
sub
push
in
push
dec
jge
sbb
je
mov
mov
test
or
aad
pop
and
dec
add
xchg
dec
push
xor
xor
andl
or
fs
add
pop
shrb
and
sub
icebp
mov
jl
mov
sti
daa
int3
shl
push
sub
stc
adc
je
incl
icebp
mov
call
jmp
sbb
js
pop
adc
shlb
add
cmp
dec
mov
cmp
or
sbb
mov
call
sbb
daa
mov
cmpsl
or
std
mov
test
xor
cmpsl
mov
les
data16
jg
loopne
loope
mov
and
push
scas
dec
aaa
jo
in
mov
cmp
lods
call
or
or
stos
add
add
std
mov
adcl
stc
fwait
fcompl
sarb
test
dec
add
xor
nop
fsubs
push
and
push
out
popa
add
xchg
fdivr
roll
or
add
dec
ret
cmpsl
or
cmpsl
jmp
dec
cmp
movsb
xchg
in
pop
sarb
cmp
jl
jmp
out
mov
rorb
dec
xlat
scas
sub
popf
jb
adc
lods
pop
xchg
mov
rcrb
mov
jae
movl
popa
add
sbb
xchg
add
enter
cwtl
test
add
les
xchg
xorl
mov
aaa
xchg
mov
xchg
lock
aam
in
cmp
mov
cld
sbb
cmp
rcr
or
ss
fbstp
jp
or
inc
xchg
cmp
ja
dec
cmp
shll
xor
dec
push
je
dec
jne
xor
divb
clc
adc
out
xchg
shr
and
loope
test
pop
inc
roll
cmp
mov
test
leave
rcrl
int3
js
test
cmp
je
loope
lea
dec
mov
pushl
mov
xchg
in
xchg
ret
sti
imul
and
mov
inc
rcr
push
mov
sub
xchg
rcrb
mov
mov
lea
adc
fistpll
cli
jb
lea
or
popf
lret
mov
sbb
lock
mov
push
jmp
lea
subb
or
daa
xchg
in
das
or
mov
push
mov
js
add
sub
ret
mov
xorl
ljmp
test
adc
mov
mov
lcall
push
std
inc
cmp
dec
pop
mov
push
mov
frstor
sub
xor
inc
push
and
push
divb
sub
ds
je
dec
jp
and
rorb
adc
and
add
mov
sti
adc
inc
pushf
and
xor
push
mov
pop
int3
or
call
jns
sub
adc
and
and
lea
push
int
cmp
xor
sbb
push
inc
sub
movsl
cmp
add
fstl
ljmp
push
cmp
push
dec
jle
nop
enter
shr
and
pop
fildll
push
je
aaa
jns
shll
andl
adc
lock
adc
pop
pushf
roll
es
sbbb
mov
xchg
adc
mov
jmp
add
dec
and
add
sbb
outsb
fcomps
pop
rorb
xorb
andl
std
mov
xor
iret
popa
ljmp
mov
andb
cs
push
insl
adc
mov
xchg
sub
push
push
call
add
aaa
movsb
dec
sub
adc
mov
jmp
lret
cmp
or
loopne
add
jbe
push
ljmp
lock
xchg
shll
ret
idivl
inc
xor
inc
scas
jo
cmp
lock
lock
adc
push
and
push
mov
add
sub
pop
inc
jns
add
inc
mov
xchg
fidivs
add
push
mov
pop
pop
leave
arpl
cmp
mov
dec
popf
into
push
and
adc
adc
sbb
and
cmp
jge
and
test
or
xchg
push
cmp
jl
xchg
test
inc
in
or
and
and
inc
loop
pop
add
ja
add
mov
mov
pop
cmp
popf
pop
mov
pop
mov
jo
loope
out
mov
adc
push
dec
ret
mov
lea
adc
sub
adc
ret
or
mov
xchg
and
stos
add
ja
push
push
ja
in
lea
adc
rolb
pop
mov
and
subl
lds
jbe
js
cmp
inc
mov
cmpb
loopne
add
xchg
repz
imul
test
cmpb
je
pop
add
orl
add
sub
andl
imul
sub
sub
mov
mov
cmp
inc
sub
push
loopne
or
xorb
sub
cmc
xchg
add
or
pushf
lods
test
and
and
mov
pop
xor
lret
rcrb
jae
mov
mov
mov
push
daa
inc
jmp
mov
pop
xchg
push
add
mov
adcb
xor
ss
cmc
inc
dec
sbb
stos
push
test
insb
popf
subb
movsb
int
adc
inc
sbb
popf
int3
nop
leave
movsb
in
push
test
js
test
sub
subl
shll
pop
roll
mov
inc
pop
adc
out
adc
pop
lock
aam
push
je
incl
inc
sub
jnp
or
xchg
and
adc
xorl
je
pop
repz
push
dec
xor
loop
inc
mov
cmp
dec
cmp
xor
daa
adc
pusha
mov
faddl
and
jmp
jo
and
pop
jb
push
lea
incl
dec
dec
or
data16
adc
std
xchg
and
aaa
push
test
shlb
mov
add
pop
cmp
add
inc
ret
movsb
in
sbbb
mov
sarb
cmpsb
cmp
cmp
lods
bound
or
mov
test
fbld
lahf
adc
dec
andl
sti
add
push
popa
push
lock
dec
subl
movsb
and
cmp
or
and
sti
nop
aas
push
cwtl
clc
imul
add
mov
or
test
dec
push
bound
mov
sub
fstp
jmp
cltd
pusha
sub
xchg
pushf
cmp
add
imulb
daa
xchg
sub
xor
cmpsl
movsl
or
lock
mov
mov
scas
lret
in
je
push
lock
inc
push
int3
sbb
adc
lahf
scas
mov
sahf
loopne
movsb
or
push
call
into
dec
movsl
xchg
push
ret
out
add
dec
and
loopne
mov
popf
sbb
inc
sub
imul
pop
sub
pop
lods
pushf
mov
lahf
push
mov
jo
sbb
neg
cmp
lds
sub
cmp
es
add
inc
dec
xchg
adc
jge
and
jae
aad
adc
movsb
pop
aad
dec
and
rolb
pop
loope
xor
add
sub
push
sub
and
mov
cltd
out
in
fstps
out
adc
in
or
dec
jb
in
pop
add
sti
inc
sub
or
jmp
inc
add
push
inc
pop
fisubs
mov
push
dec
dec
rcll
inc
mulb
adc
and
push
arpl
mov
pop
jb
push
int
add
fs
sub
lret
dec
xor
and
sub
fs
pop
inc
inc
mov
call
push
nop
add
pop
add
je
stos
sbb
mov
es
cs
daa
cmp
pop
sub
push
add
or
cmp
sub
push
sub
sub
jl
test
push
pop
aad
cmp
movsb
mov
fiaddl
cs
andl
pusha
repnz
ljmp
mov
insb
sbb
cs
inc
sbb
lock
or
xor
adc
enter
lea
sbbl
push
adcl
pop
jns
xchg
imul
stc
mov
xlat
sbb
ret
adcb
add
and
loop
mov
and
bound
cmp
jmp
test
cmp
and
push
jge
loop
push
push
stos
or
movsb
jb
movsb
out
mov
ret
psllq
push
cli
mov
mov
data16
cwtl
outsl
pop
lock
iret
inc
mov
arpl
pop
pop
cmp
xor
jle
mov
inc
notl
or
cmp
lret
push
icebp
adc
push
fldl
jge
mov
and
inc
sub
pop
mov
mov
mov
adc
sub
sub
pop
sub
sti
xor
push
movsl
lea
rorb
jno
insl
pop
repnz
xor
cmp
adc
mov
jae
cmp
popf
pop
stc
sbb
sub
fs
push
xchg
xor
lds
adc
sbb
xchg
popa
xchg
fdivl
mov
dec
xlat
maskmovq
mull
mov
ljmp
pushl
mov
testl
ds
jb
xchg
push
xchg
adc
dec
fcompl
adc
or
xchg
and
pop
xchg
mov
mov
mov
mov
adc
clc
lds
xchg
xchg
lea
xchg
pop
or
xchg
cs
rcll
push
mov
xor
aaa
enter
adc
mov
fadd
cmpl
jne
pop
out
lcall
sub
loop
ret
ret
jp
test
jbe
inc
adc
dec
addr16
add
cmp
orb
and
stos
jb
xor
test
or
xchg
jmp
mov
jo
fsts
in
mov
or
test
dec
mov
inc
fcmovnbe
jge
int
int3
jge
add
and
add
cmp
cmp
lods
mov
aas
sub
cmp
mov
push
inc
shlb
mov
shl
pop
cmpsl
lret
cmpl
mov
testb
aam
xor
ljmp
inc
orb
ljmp
das
jmp
push
loope
pop
pop
xchg
insl
fistl
jge
addl
aam
pop
movups
gs
add
push
popa
or
adc
dec
hlt
mov
inc
push
ljmp
pop
sbb
xchg
mov
add
xor
test
insb
cmp
test
cmp
jl
test
lods
in
cld
addr16
and
addr16
scas
jmp
aas
imul
inc
ja
cmp
xlat
or
int
push
dec
dec
xchg
jns
in
popa
fildl
out
or
lea
mov
xchg
fdivs
jb
int
sbb
push
sbb
dec
xchg
xchg
add
dec
sbb
and
dec
push
and
and
or
sub
iret
pusha
and
and
jno
mov
fwait
lea
leave
and
call
mov
inc
add
pop
je
aad
bound
daa
add
dec
cmp
fadds
pop
pop
in
je
sub
call
subl
mov
or
sub
cmpsl
nop
sub
lock
in
jo
fcoms
arpl
push
mov
insb
push
aaa
addr16
and
fstp
stos
mov
xchg
out
sbb
push
sbb
dec
sbbl
call
enter
out
jae
in
add
mov
adc
fisttpll
rclb
adcl
adc
sbb
insl
mov
dec
shrb
mov
clc
sbb
out
nop
andps
or
add
push
pop
sarb
or
and
add
sbb
lcall
xchg
data16
leave
aaa
sbb
and
popf
adc
and
insb
cmp
adc
mov
insb
adc
pop
push
sbb
fscale
push
inc
sbb
mov
push
movl
xor
repz
nop
fiadds
aaa
pop
das
adc
and
push
dec
aaa
mov
cmp
and
lock
stos
mov
xchg
sbb
leave
call
mov
imul
das
rolb
or
mov
mov
inc
push
add
pop
sbbb
jbe
pop
aam
lcall
adc
adc
adc
call
xor
jne
jne
xor
popa
jmp
push
sarl
xchg
fcmovb
adc
in
sub
fdivs
push
cwtl
rcrl
adc
rolb
imul
adc
popf
dec
push
pop
lcall
pop
cld
pop
icebp
mov
stos
mov
test
sub
aaa
js
push
push
push
iret
or
xor
cwtl
sbb
push
inc
push
int3
aaa
mov
ds
push
popa
fcomps
cmp
xchg
sbb
test
jmp
push
dec
les
add
push
lea
lock
cld
mov
push
cmpsb
push
dec
insl
bound
rcll
push
icebp
xorl
mov
into
pop
jp
and
xor
sub
pop
add
ja
ret
mov
nop
adc
dec
popa
imul
pop
in
mov
sub
lods
stos
js
les
and
test
and
imul
and
enter
leave
or
rolb
jmp
lods
rorb
sbb
sbb
les
popa
sbb
xlat
lods
into
lods
cmp
push
push
movsb
jmp
repz
jno
or
xor
cbtw
in
cltd
mov
or
popa
outsb
adc
fdivrp
aas
or
inc
imul
nop
icebp
addr16
push
pushl
and
icebp
jl
pop
push
dec
fdivrs
je
adc
andb
adc
push
cmp
push
mov
cli
rcr
add
mov
mov
dec
adc
add
cwtl
pop
inc
movsb
sbb
adc
in
je
and
sub
and
pop
jne
pop
adc
adc
punpckhdq
test
shlb
out
mov
jge
mov
mov
idivl
push
clc
imul
rcll
pop
call
dec
push
inc
je
xor
add
arpl
movl
xchg
lods
jl
addl
dec
dec
loop
int
fsubs
and
push
shlb
lods
repz
sbb
sub
pop
in
aam
mov
adc
push
adc
pop
pop
pop
je
pop
pushl
aam
inc
mov
dec
aam
sub
std
adc
and
loope
out
jns
ret
push
mull
cmp
jle
sbb
adc
mov
lea
loop
into
mov
push
sub
sub
cli
push
xlat
pop
out
lods
jmp
in
and
fwait
pop
cmpsb
cld
dec
xchg
pop
inc
mov
xlat
in
and
cmpl
inc
je
mov
jmp
mov
jo
cmp
bound
aaa
mov
bound
pop
mov
mov
adc
mov
cli
jmp
sub
movl
fld
mov
sbb
push
or
jno
add
and
in
add
movsb
inc
stos
mov
loopne
mov
and
push
xchg
mov
sbb
sbb
mov
mov
gs
rcrb
mov
mov
aam
cmp
fcmovu
addb
or
mov
mov
push
sbb
dec
loope
adc
movsl
rolb
adc
xchg
aad
add
dec
sbb
xor
fstp
cmp
ss
jbe
clc
pop
push
inc
sti
test
inc
mov
test
jl
jo
lahf
inc
rorb
icebp
inc
in
cmp
jle
jae
inc
add
outsb
mov
es
push
and
roll
enter
cmp
jge
add
push
push
adc
jmp
rol
test
or
rolb
cmp
sub
inc
lret
cmpb
and
lock
sub
cmp
mov
sbb
adc
push
pop
and
add
push
mov
add
push
test
and
sub
jne
mov
pop
mov
btsl
adc
jge
push
mov
pushf
xor
neg
xor
push
or
cltd
cmp
movsb
inc
clc
mov
push
add
add
shr
push
add
jecxz
sbb
lcall
mov
fcoms
outsb
cmp
sub
pop
xor
and
jb
pop
or
or
jb
adc
adcb
sti
cmp
lock
add
mov
or
inc
subl
push
xor
loopne
adcl
adc
add
sub
mov
scas
pop
xor
mov
push
movsl
popa
add
jecxz
add
sub
sub
cmp
cmp
pop
cmp
mov
and
cmp
xchg
add
out
or
pusha
inc
mov
add
mov
movsb
mov
repnz
loopne
sub
testl
adc
push
setb
sbb
mov
orl
xor
popl
and
xor
xchg
inc
sub
inc
insb
daa
popl
icebp
popf
aas
add
out
nop
mov
mov
xchg
jmp
in
mov
addb
xchg
mov
add
add
adc
jne
inc
lcall
inc
rorb
pop
push
pop
jbe
fildl
sbb
sub
cmp
inc
leave
adc
adc
shr
fbstp
push
xor
push
sbb
inc
xor
test
mov
out
add
lahf
add
int
popf
call
je
mov
je
adc
das
loop
out
lahf
jle
and
das
shll
xchg
mov
rcrb
pop
add
pop
in
dec
push
pushf
sahf
push
in
mov
test
inc
dec
or
out
int
dec
imul
push
fstps
aas
sbb
pop
aad
test
xchg
xchg
mov
out
xorb
inc
lcall
adc
xorb
shl
xchg
dec
inc
sub
in
adc
sbb
jmp
in
push
int3
xchg
push
mov
inc
add
xchg
das
popf
cmp
outsl
shrl
push
in
repnz
add
or
add
mov
adc
fwait
leave
fcmovnbe
test
or
leave
inc
sub
inc
cmp
lcall
mov
fbld
out
les
jle
orl
out
test
xor
mov
mov
dec
js
push
stc
bound
rol
lock
xor
jo
jmp
loopne
xchg
inc
jne
ja
and
or
out
ss
pusha
add
and
mov
push
or
lods
cmp
mov
shr
pop
fstl
add
inc
and
aas
add
or
push
cmp
jge
movsb
mov
and
test
popa
xchg
xorb
mov
cltd
adc
and
and
push
cli
lea
push
fisttpl
dec
flds
sub
mov
mov
mov
mov
mov
addb
xchg
aaa
sbb
inc
mov
sbb
adc
mov
mov
cwtl
sub
or
inc
pop
adc
cltd
insl
es
mov
dec
push
gs
icebp
dec
fildl
or
and
cli
sahf
inc
add
add
push
adc
mov
xchg
ret
clc
cmpsb
lock
push
ret
add
xor
add
push
je
cli
sub
daa
fidivrs
pop
mov
outsb
jecxz
adcl
or
insl
fwait
pop
pop
dec
orb
test
add
ja
mov
out
jae
push
imul
jnp
inc
inc
icebp
push
add
int
int
dec
add
add
popa
mov
add
mov
aaa
lods
std
xor
and
insb
jo
fwait
xlat
clc
jnp
mov
int3
orl
gs
ss
enter
rol
js
mov
jae
mov
or
jnp
inc
jl
adc
sbbl
or
dec
mov
sub
xchg
mov
cmp
inc
das
push
or
loop
lock
jmp
les
movb
push
mulb
push
sbb
aas
sbb
pop
fxsave
mov
and
add
jmp
xchg
adc
movl
fcmovne
mov
ret
mov
adc
idiv
rorl
call
mov
cmp
cmp
jmp
insb
jo
mov
sub
sub
paddusb
sahf
sbb
xchg
mov
dec
mov
loop
cmp
add
int
dec
fs
imul
dec
add
imul
add
fs
imul
push
add
nop
jecxz
jmp
adc
orl
and
mov
sahf
pop
and
repnz
or
ds
in
sbb
xchg
int
xlat
testl
call
mov
pop
add
and
je
in
mov
dec
int3
adc
into
shll
sbb
movsb
cmp
dec
test
imul
lock
add
mov
call
test
add
add
lds
shlb
lahf
orl
stos
js
imulb
imul
inc
pusha
cld
or
adc
add
adc
add
dec
xchg
add
or
std
adc
sub
adc
push
out
outsl
in
mov
gs
aaa
mov
push
and
repnz
movnti
sub
push
mov
or
or
fwait
xor
cmpb
cmp
jbe
and
pop
ja
xor
idivl
sub
and
or
dec
push
imul
rcrl
xchg
adc
cmpsb
mov
inc
popf
xor
mov
movsl
or
push
daa
inc
pop
xchg
mov
pop
push
pusha
sub
sub
dec
mov
and
add
fists
sub
push
or
cmp
inc
lds
cmp
sbb
movsb
add
pop
ss
mov
xchg
push
rcll
push
mov
fadds
push
mov
lcall
mov
movsl
pop
push
adc
decl
je
sub
dec
lds
negl
pop
mov
jne
movsbw
addl
jno
jne
mov
or
or
je
adc
push
outsb
or
inc
push
arpl
push
stc
inc
in
jne
mov
inc
hlt
mov
push
jle
mov
mov
sbb
cmp
adc
jle
outsb
push
je
lret
mov
adc
mov
and
add
sub
dec
jae
pop
sbb
enter
out
push
imul
test
mov
mov
stc
xchg
loopne
mov
mov
and
scas
loope
push
sub
mov
sbb
dec
sti
in
adc
cs
cmp
rorb
xchg
fildl
dec
jl
mov
cmp
sbb
aas
push
inc
fdivrl
dec
outsl
aaa
aas
lea
mov
add
aaa
lret
adc
mov
xchg
mov
add
mov
flds
push
sub
pop
dec
and
or
pop
outsb
pusha
shll
lea
mov
mov
jno
roll
adc
jno
lea
and
enter
sbb
ret
xchg
and
xchg
pop
xchg
rcl
call
add
and
and
push
add
push
pop
shr
or
push
inc
mov
imul
mov
hlt
pop
icebp
stos
cs
mov
xchg
imul
pop
mov
push
jne
leave
cmp
inc
sbb
push
fs
mov
add
sbbb
and
popa
scas
insb
cmc
andl
sbb
orl
aas
divb
movsl
cmc
mov
ljmp
ja
lods
add
inc
repnz
lea
xor
ret
into
testl
or
mov
xor
push
adc
cmp
aas
push
lods
lcall
push
sub
movb
rol
adc
xor
add
in
loopne
or
jae
jae
cld
cmp
add
arpl
dec
clc
jg
add
adc
and
pop
dec
xor
fs
mov
pop
cmp
stos
movsb
inc
aam
hlt
add
inc
enter
movups
cmpsl
lock
popa
scas
sbb
incb
mov
xrelease
xchg
xor
add
movl
pop
add
outsb
gs
and
push
or
shlb
push
mov
lcall
daa
sbb
jg
out
into
cmp
inc
cmp
push
jl
jecxz
cld
cld
lret
enter
imul
or
cmp
adc
and
ja
and
insl
xor
clc
insb
ret
pop
stos
rcr
std
inc
xor
jne
or
sub
inc
sub
out
nop
pop
inc
filds
adc
xor
insb
inc
jo
jne
and
dec
adc
int3
lret
stos
pop
jo
jmp
add
ljmp
mov
popf
addl
jmp
hlt
sbb
test
test
fidivrl
add
jb
popa
fsubrs
inc
bound
movsl
add
call
pop
mov
xchg
pop
dec
dec
mov
mov
inc
aas
lea
fadd
nop
adc
fs
sbb
outsb
xchg
pop
aas
hlt
jbe
sub
lods
fwait
shrb
push
clc
sub
dec
and
push
stc
sti
clc
push
add
push
push
push
push
in
add
popa
in
pop
xor
mov
das
loopne
ret
and
add
mov
mov
push
cmc
imul
call
sub
mov
incl
cmp
jne
cmp
jne
mov
mov
ret
insl
add
movsb
cmp
mov
testb
repnz
dec
push
and
clc
or
push
mov
xor
jecxz
out
xor
repnz
xchg
nop
mov
mov
mov
fistl
mov
cs
mov
test
jle
push
add
mov
or
sub
ds
lea
cmp
fists
mov
movsl
das
pushf
jle
lret
pushf
jmp
push
inc
cwtl
lcall
rorb
hlt
adc
jge
lea
lea
test
pop
add
mov
dec
imul
cmp
pushl
mov
stc
or
cmp
js
rcrb
add
xor
rclb
jbe
xchg
js
cwtl
fs
enter
adc
fadds
sbb
jnp
mov
add
movb
icebp
sbb
call
std
xor
push
dec
pop
pushl
fs
push
push
xor
in
out
xor
nop
or
adc
adc
mov
xor
xor
sbb
gs
xchg
mov
xchg
nop
es
and
xor
add
stos
mov
push
repz
sbb
adc
mov
jg
cmp
out
jmp
mov
pushf
dec
cmp
sbb
adc
sbb
sub
mov
add
jmp
in
shll
in
mov
dec
and
cmp
lcall
adc
adc
in
pop
cmp
jo
or
jnp
add
loopne
mov
and
or
test
mov
xor
loopne
jp
xor
lahf
dec
mov
jne
add
lahf
insb
xor
cmpsl
rol
in
jg
xor
cmp
cmp
sbb
add
cmp
cmpb
loop
jge
outsl
adc
shr
stos
or
dec
add
jg
xorl
mov
inc
stos
out
add
loope
add
pop
cmp
shrb
dec
add
sbb
or
add
out
sub
pop
jne
lea
or
mov
and
dec
lea
inc
jge
and
xchg
pusha
mov
push
adc
loopne
adc
mov
daa
push
sub
hlt
test
xor
or
shr
iret
or
pop
dec
pop
mov
fidivrl
loop
cmp
mov
jmp
sbb
clc
add
jg
cmp
je
xchg
push
int3
pop
push
loop
and
adc
pop
mov
hlt
repz
hlt
mov
adc
or
outsl
sbb
pop
ret
call
sbb
adc
shlb
dec
xor
outsb
mov
ret
inc
fs
pop
mov
sbb
insl
test
fwait
xor
stos
cltd
outsb
cmpsl
lea
push
cmpsb
and
adc
pop
pusha
divb
outsb
xor
sbb
out
dec
lock
rcll
ss
mov
cmp
sub
test
adc
push
cwtl
sti
test
call
das
add
repz
lods
or
test
rorb
or
adc
cmp
nop
pushl
push
out
adc
test
lods
loopne
lea
test
orb
xchg
or
lea
ret
or
test
dec
mov
push
sbb
mov
mov
insb
lea
loope
xchg
push
ret
xor
daa
add
and
mov
mov
inc
imul
mov
adc
mov
jle
add
cmpw
sbb
cmpb
sbb
jl
push
add
jg
das
xor
pop
push
pop
mov
add
sar
mov
jne
jb
push
je
add
fnstcw
push
inc
mov
cmp
cmp
pusha
adc
pop
jns
mov
add
cmp
es
imul
add
xchg
or
adc
add
cs
daa
loopne
jb
sub
jmp
aas
mov
shrb
jg
movzwl
cmpl
push
adc
rorl
leave
push
or
jl
add
adc
sbb
int3
jo
adcb
xchg
js
cmp
ret
shlb
cmp
enter
insl
pop
push
pusha
xor
leave
xor
call
lock
fimull
pop
mov
jge
cs
jb
and
pop
and
jg
enter
cld
dec
fs
jb
xchg
inc
insl
jns
cmovg
pop
dec
pop
cmp
push
dec
xor
jo
rorl
fwait
fdiv
std
inc
jb
call
pop
roll
insl
pop
push
add
ficoms
sbb
orb
push
and
movsb
jp
andb
cmpsb
jo
add
jo
subl
sbb
andl
push
or
jo
or
push
fldenv
push
push
add
rcrl
push
in
push
xchg
xor
jl
push
popa
or
addr16
or
movsl
inc
cmp
test
cmp
cmp
imul
sub
push
mov
sub
sub
adc
mov
fisttps
cmp
sub
pop
adcb
arpl
lret
aad
ss
add
dec
in
sbb
pop
xor
in
add
or
cmpsb
xor
sub
push
mov
and
add
or
push
leave
les
sbb
sbb
frstor
xchg
xor
stc
sbb
and
sbb
push
dec
sub
push
add
movb
es
adc
pop
jmp
push
pop
les
xor
mov
cmpl
push
loop
add
inc
jne
sbb
ja
push
sbb
push
and
cltd
and
cwtl
dec
ret
in
fcoml
sub
inc
xchg
pop
mov
xchg
ja
add
inc
pusha
test
jle
sub
inc
popf
aam
hlt
cmp
daa
mov
add
mov
or
mov
mov
cmp
inc
dec
pop
jne
imul
xchg
xchg
jl
inc
lcall
add
je
jge
cmp
adc
push
push
push
fsub
dec
aas
jne
inc
xchg
jb
cmp
push
js
mov
push
out
xor
pop
and
adc
pushl
test
filds
inc
xchg
out
in
icebp
ljmp
xor
jmp
and
and
pop
add
dec
jecxz
lock
cmp
push
and
adc
loope
xor
test
adc
cmc
insl
and
mov
dec
addl
fwait
adc
lahf
in
push
cmp
nop
add
in
push
or
mov
lret
mov
arpl
push
xchg
fmuls
stos
mov
sub
roll
push
sub
adc
xchg
dec
mov
mov
lea
in
push
dec
and
jle
xor
push
inc
cmp
cmpsb
std
jne
pop
jmp
push
push
das
mov
inc
inc
pop
pop
push
sbb
or
cmp
or
sub
sbb
xor
enter
cmp
push
push
popa
loope
inc
push
adc
xchg
jp
mov
inc
sbb
push
inc
dec
xor
lods
popa
push
sbb
ljmp
xchg
push
mov
jno
or
cwtl
roll
out
lret
js
cwtl
xchg
xor
add
cmc
sub
daa
add
dec
sbb
adc
sbb
mov
mov
sbb
lods
clc
and
inc
mov
repz
ret
test
push
mov
dec
pop
pop
gs
cli
inc
push
sub
push
or
xchg
inc
add
jmp
cmp
and
jae
dec
inc
inc
dec
mov
mov
jmp
add
mov
addr16
sahf
and
sbb
in
dec
pusha
jne
mov
jo
repz
add
and
call
sbb
movsl
rorl
sub
xor
test
push
imul
test
sub
inc
call
mov
xchg
push
pop
jp
ret
mov
test
sbb
and
inc
and
call
pop
mov
movsb
xor
dec
insb
adc
and
xor
je
mov
cs
add
shrl
or
xor
adc
pushf
ret
inc
int3
push
in
cs
push
fwait
lods
or
lcall
into
cmp
xlat
and
or
add
addb
pusha
sbb
imul
push
imul
test
ljmp
test
dec
push
xchg
add
loope
fisttps
paddq
xchg
es
mov
or
loopne
add
dec
lret
mov
shlb
into
int
mulb
push
sbb
movsl
push
das
stos
rolb
cmpb
bound
ja
push
lahf
inc
xchg
rclb
out
sahf
adc
inc
insl
int3
lock
xorl
add
aas
loopne
and
add
adc
jle
adc
mov
mov
pop
cmpl
xchg
lea
dec
imul
add
or
pop
mov
or
dec
cltd
clc
popa
jne
cmp
sbb
arpl
jae
push
and
or
push
orl
pop
cmp
dec
sti
cmp
mov
hlt
push
enter
sub
xor
rclb
mov
mov
nop
mov
push
push
push
or
adc
mov
cmp
sbb
sbb
enter
sti
test
pusha
aam
lahf
sub
ret
push
mov
jp
je
jnp
cmp
sbb
adc
cmp
jmp
push
insl
mov
lods
add
inc
cmp
out
pop
pusha
pop
bound
xor
mov
pop
sbb
xchg
push
out
add
push
inc
xor
pop
add
cmpsl
andb
and
js
gs
out
sub
mov
xor
and
jmp
cmp
jne
xor
mov
mov
enter
scas
in
or
clc
xchg
xchg
into
cwtl
mov
pop
pop
pop
add
or
adc
daa
test
xchg
stc
add
in
push
repnz
xlat
xchg
push
adc
add
pop
push
jmp
loope
mov
imul
adc
push
or
pop
or
test
xlat
lea
ja
dec
xlat
jg
popa
and
and
cli
cmp
jne
fcmovb
push
mov
rol
add
pop
lcall
push
mov
lods
dec
and
roll
rorb
adc
mov
ficoms
mov
cmp
pop
sub
dec
jns
mov
pushf
enter
repz
nop
lret
xor
das
loop
mov
inc
loop
mov
ja
inc
sub
fwait
in
fldt
or
mov
push
orl
adcb
and
insl
mov
loope
mov
adc
sub
lret
lock
dec
sub
jae
dec
pop
add
and
dec
adc
mov
cmp
push
fstl
xchg
dec
jnp
les
jns
inc
jmp
ret
mov
aam
or
pop
cmc
or
add
clc
cs
push
xchg
mov
loope
inc
cmp
movb
and
xchg
mov
sub
dec
mov
xor
das
mov
in
inc
fs
inc
add
pop
les
das
xor
push
sub
xlat
jle
mov
das
loope
enter
mov
push
jg
orl
subl
pop
fs
lea
xchg
push
js
or
and
and
shll
dec
notl
jnp
and
and
ret
dec
mov
or
js
lret
or
mov
enter
sbb
add
mov
xlat
sub
jo
mov
inc
pusha
jbe
ss
mov
xchg
mulb
or
xchg
insb
push
inc
sbb
xchg
repz
or
iret
fcmovnb
adc
test
movsl
add
xchg
in
call
add
mov
xchg
mov
adc
mov
cmp
push
fldcw
and
in
popf
mov
xchg
clc
and
cmpsl
adcl
xor
and
mov
leave
push
jb
and
mov
or
xchg
add
js
push
jmp
mov
cmp
cs
and
adc
in
adc
imul
adc
adc
scas
inc
sbb
inc
cwtl
pop
pop
movsl
and
mov
cmpsl
jno
pop
xorb
imul
call
jne
push
sbb
mov
mov
in
jnp
enter
and
mov
mov
dec
sbb
arpl
xor
mov
sbb
xchg
fs
dec
mov
js
mov
lods
repnz
dec
std
ljmp
push
insl
nop
dec
jb
adc
shrb
push
test
orl
xchg
xchg
push
cmp
or
sub
in
and
push
inc
pop
or
cmp
sub
mov
adc
sub
insb
push
scas
sti
sub
sbb
lock
movsl
or
movsb
jns
add
ret
and
inc
xchg
or
mov
sub
insl
insl
insl
pop
fldenv
addr16
cs
and
sbb
sbb
add
fldt
jb
adc
and
jmp
push
push
mov
pop
imul
jmp
push
inc
mov
daa
inc
les
adc
jne
leave
cwtl
mov
dec
sbb
idiv
out
add
sti
mov
mov
jne
sub
sbb
rcrb
cmp
lcall
shlb
aas
stos
es
or
adc
je
cmp
xor
xor
dec
add
add
sub
add
aas
inc
mov
movsb
pop
rorw
pop
lret
arpl
xor
mov
pop
cmp
adc
push
jo
inc
fstl
mov
adc
xchg
pop
test
and
mov
ret
sarl
mov
repnz
nop
mov
mov
aas
idivl
cmp
lods
inc
movsb
jns
push
adc
lea
jbe
sbb
popf
push
or
dec
or
xor
jae
inc
push
leave
jns
xchg
and
popf
ftst
push
dec
sbb
test
mov
sbb
mov
imul
mov
in
pop
dec
outsl
addr16
or
mov
jle
add
sbb
mov
dec
sub
push
inc
push
sub
loopne
xor
adc
inc
adc
mov
or
syscall
jmp
sbb
xchg
xor
and
loopne
test
dec
pop
dec
push
imul
nop
cmp
add
cmp
test
sbb
fs
mov
add
nop
loope
add
add
aam
clc
push
ds
inc
add
das
mov
mov
movl
add
fisubs
adc
loopne
fcoml
fists
pop
dec
and
and
into
cli
shll
mov
mov
push
jo
rcrl
sub
addb
pop
xchg
movsb
xchg
daa
adc
cmp
mov
call
or
or
mov
mov
push
sub
daa
jne
push
sbb
mov
aas
pop
adc
loopne
push
xor
call
push
push
mov
pusha
mov
pop
or
dec
dec
mov
lea
sub
mov
movb
or
add
jno
imul
imul
sarb
mov
outsb
sub
add
or
rorl
xchg
dec
call
insl
sbb
push
xor
jmp
pop
push
push
fs
add
outsb
outsl
jge
loopne
push
adc
wrmsr
mov
in
dec
mov
pop
movb
out
inc
adc
cmp
stc
push
imul
xor
add
add
mov
jl
mov
sub
sbb
fbld
adc
and
decb
cmp
xchg
or
xorb
js
adc
pop
mov
cmp
mov
andl
les
xchg
pop
scas
add
fidivs
sub
in
adc
sub
pushf
mov
mov
lea
push
xchg
lods
cmpb
xchg
movsl
or
inc
push
sbb
push
pushl
loope
cmp
mov
hlt
fldl
push
xor
enter
and
and
mov
js
out
hlt
loope
cld
fistps
adc
rorb
jl
es
pop
je
add
je
sub
mov
inc
das
push
fwait
mov
xchg
sbb
sbb
cmc
ret
sbb
push
or
stos
dec
ds
pop
xor
out
cs
dec
cmp
fisttpll
or
push
lock
add
inc
adc
aad
rcl
or
xchg
or
adc
xor
dec
mov
pop
push
pop
inc
sbb
adc
add
rorl
aad
mov
insl
mov
dec
inc
sub
outsb
add
rorb
mov
and
jp
decl
ror
in
push
mov
xor
mov
sub
cmp
cmp
rclb
mov
or
xor
pop
ds
adc
rorb
movsl
scas
add
inc
and
sbb
and
xor
sub
and
mov
enter
lahf
rolb
gs
adc
pop
invd
out
fisubs
es
js
mov
push
push
mov
test
add
data16
push
mov
mov
pop
cmp
jne
inc
rorb
pop
cli
mov
fcomps
jmp
xchg
and
call
gs
xor
and
lods
push
dec
fldcw
fnsave
add
xchg
push
ret
push
jecxz
mov
mov
mov
loop
push
das
mov
movsb
add
jge
cmp
add
and
cmp
dec
push
mov
push
adcb
jmp
pushf
dec
xorl
and
sbb
xchg
out
pusha
insb
push
fs
js
mov
add
pop
xchg
add
int
test
sahf
out
test
leave
orl
jno
scas
sub
shrl
mov
mov
lahf
or
push
das
stc
add
insb
sbb
lock
mov
cli
push
push
movsl
aad
rcl
daa
xlat
mov
pop
shlb
add
lcall
rol
loope
mov
loopne
ret
inc
test
int3
add
out
and
jecxz
mov
inc
imul
sbb
or
adc
mov
cmp
sbb
sub
sub
or
jge
jg
orb
push
xchg
es
gs
jae
or
jle
jg
mov
mov
movzwl
xor
add
xlat
shl
bound
cli
mov
add
adc
mov
lods
dec
dec
movsb
push
push
sub
or
or
call
fcmove
punpckhwd
mov
cli
pop
movsb
adc
and
push
sub
shrb
loop
jb
sub
and
enter
add
fxch
or
and
mov
cmpsb
aam
jge
push
es
inc
mov
fstps
lcall
push
adc
pusha
inc
xchg
push
and
fldt
adc
push
inc
mov
sbb
ror
fildll
ljmp
cmpsb
ret
rorb
movsl
or
nop
adcb
sbb
adc
pop
mov
gs
jb
fists
dec
rclb
jge
jno
jmp
jb
pop
add
inc
or
mov
clc
jge
fwait
aad
xchg
lret
rorl
sub
or
or
leave
push
rorb
aad
or
rorb
adc
in
pop
les
inc
push
mov
daa
adc
fisubrl
or
xchg
add
call
inc
in
push
lea
loop
or
push
iret
inc
pop
data16
outsb
jp
lea
vdivps
aam
cmpl
aaa
sbb
inc
jl
dec
adc
and
sub
aam
dec
and
mov
jae
or
push
mov
ja
jmp
dec
push
jne
push
push
sub
and
jp
mov
insb
call
adc
inc
jnp
sub
out
roll
call
push
sbb
or
sub
push
mov
leave
xor
rcrb
xor
sbb
lea
addb
mov
popf
mov
lahf
and
lahf
arpl
or
add
das
pop
icebp
mov
push
mov
dec
xor
inc
dec
inc
push
mov
cld
jb
les
bound
sub
and
or
adc
mov
jle
leave
dec
repz
cs
jne
or
xchg
lret
enter
or
add
movsb
seta
arpl
ret
scas
leave
jl
je
cwtl
sbb
psllw
or
rolb
ret
test
cmp
clc
shrl
and
adc
mov
push
sbb
pusha
sbb
mov
fidivl
cmp
mov
loopne
movl
sub
nop
rol
notl
add
inc
movsb
pusha
cmpsl
push
or
icebp
cmpb
lock
and
fisubl
lock
adc
push
jl
mov
enter
mov
pop
sbb
dec
mov
adc
xchg
mov
popl
add
aad
loopne
pop
jle
or
into
dec
enter
or
push
push
mov
and
imul
loop
in
sbbl
ret
sarb
js
cmp
pop
subb
adc
cmp
push
or
sub
cwtl
lahf
or
or
push
dec
inc
or
sub
call
dec
scas
insb
fdivl
push
adcb
mov
sti
or
mov
pop
push
ret
repz
insb
sub
mov
sub
ds
out
push
sbb
ret
sbb
notb
out
pop
adc
push
out
xchg
pop
xlat
int3
adc
push
cmpsb
orb
iret
sub
dec
add
les
push
inc
inc
ljmp
xchg
mov
and
ss
jmp
sub
icebp
aad
or
xchg
outsb
push
cwtl
and
adc
jo
or
push
push
sbb
inc
mov
or
push
pusha
xchg
rolb
dec
addl
icebp
insl
in
push
faddl
mov
test
lahf
out
cmpsl
sbb
adc
xchg
movb
gs
mov
push
push
hlt
cmp
sbb
or
mov
cmp
mov
push
mov
bound
sbb
adc
add
mov
pop
rorl
ret
sbb
test
or
enter
inc
sbb
and
add
xchg
test
push
push
mov
dec
pop
in
leave
mov
repz
cmpsl
mov
jge
into
loope
push
loope
or
or
xor
lods
jo
les
subb
dec
add
adc
insb
std
loopne
cmp
cmpsl
add
jge
add
subb
add
inc
cmpl
nop
xchg
mov
pop
jne
adc
xchg
pop
sbb
adc
pop
mov
push
in
dec
or
daa
add
xchg
hlt
enter
je
test
adc
call
aas
mov
add
xor
jmp
add
and
or
call
xchg
in
outsl
sbbb
mov
scas
xchg
jno
adc
scas
je
and
jb
movsb
mov
xchg
cmpsb
icebp
inc
jge
in
lret
sahf
call
daa
mov
mov
test
cmp
lock
ja
hlt
pop
outsb
adc
mov
push
push
sub
pop
clc
orb
rorl
iret
sub
insb
cmp
sub
jmp
aas
adc
dec
xor
pusha
xchg
and
push
pop
lret
adcb
lock
xchg
mov
mov
push
adc
pop
in
xor
mov
add
ret
xchg
test
xchg
xlat
jl
and
pop
pop
or
loop
scas
add
mov
shll
testb
lea
aaa
orl
dec
adc
xor
dec
les
mov
jo
dec
mov
dec
cs
push
push
mov
sbb
inc
push
xor
pushf
gs
lea
push
xchg
fimuls
mov
lea
adc
xchg
bound
jb
shlb
xor
mov
add
pushf
divb
cmpsl
imul
shl
mov
dec
or
sbb
xlat
cmpsb
inc
hlt
xor
cli
push
add
jno
adc
push
cld
or
push
test
dec
hlt
fisubl
push
or
and
stc
adc
sbb
add
jl
fldt
test
or
sub
or
jge
aas
pop
ret
push
in
je
dec
nop
cmp
push
xor
shll
mov
aam
add
push
bound
or
or
push
adc
push
push
in
enter
mov
gs
pop
dec
lcall
mov
add
mov
add
mov
and
imul
and
pop
inc
push
pop
inc
lcall
test
pop
sub
les
mov
popf
int
pop
cmp
adc
dec
and
nop
shl
xchg
sbb
adc
xor
mov
mov
pop
dec
loop
sub
pop
loop
jb
or
loopne
add
js
insl
inc
sbb
jecxz
mov
js
sub
sbb
mov
or
mov
push
adc
or
cwtl
xchg
sub
lret
jo
push
pop
sub
rcrl
sub
inc
dec
inc
and
sbb
gs
mov
cs
or
add
sbb
pop
bound
inc
loope
bound
pusha
cmp
hlt
inc
stos
inc
arpl
push
shll
ret
add
jmp
and
and
lcall
jmp
inc
enter
mov
jo
das
inc
xor
inc
pop
ja
and
add
add
or
cmp
add
add
hlt
mov
mov
dec
je
insb
add
push
jo
pop
mov
mov
mov
push
and
sbb
push
fcom
pop
mov
push
pop
ret
add
test
les
push
mov
jne
jle
std
and
mov
xchg
int3
add
jge
sub
mov
add
in
xor
jae
adc
or
and
neg
jns
jmp
xchg
test
sti
sub
add
movsb
fmull
aam
jp
or
sub
or
pushf
add
cli
in
push
mov
mov
aas
push
cmp
ja
lea
push
add
movsb
in
pop
cwtl
ss
push
push
add
add
and
js
jo
dec
fs
add
xchg
inc
sbb
xchg
mov
pop
lock
nop
xchg
dec
and
pop
pop
repnz
nop
pop
lock
or
and
adc
pop
ljmp
in
push
pop
arpl
jp
sahf
xor
xchg
add
sbb
lock
out
xor
mov
push
lock
add
int3
adc
xchg
inc
daa
sub
mov
xor
pinsrw
cmp
dec
shlb
inc
adc
imul
jb
push
dec
push
and
add
dec
pop
sbb
xchg
xchg
mov
dec
mov
test
clc
aad
xchg
rorb
xor
decl
cmp
adc
mov
cmp
jne
sub
lock
aaa
lea
pop
mov
mov
sub
xchg
mov
add
clc
xchg
xor
or
out
or
and
std
push
ja
inc
inc
inc
cwtl
jl
fimuls
jae
dec
push
push
iret
and
sar
add
push
js
add
and
insl
mov
push
add
cmpneqps
bound
adc
inc
push
call
add
mov
cmpsl
adc
cwtl
in
adc
pop
or
pop
adc
mov
add
enter
xchg
push
fbstp
or
lock
test
add
mov
test
sti
lods
dec
sub
adc
sub
cmp
push
adc
nop
dec
test
loopne
add
hlt
incl
fldz
lea
fstpl
rcll
xorl
repz
dec
xor
sbb
clc
jo
push
xor
dec
xor
in
push
jecxz
cmp
mov
or
inc
adc
mov
adc
adc
sub
xorl
mov
and
movsl
stc
movsl
mov
push
push
test
pop
lock
sub
addl
add
jns
adc
inc
sbb
or
cmpl
push
mov
mov
add
add
or
or
and
fstl
mov
inc
rorb
fcoms
xor
push
or
and
inc
stos
xchg
and
aaa
xor
jle
mov
cmp
jl
jle
ftst
push
cmp
push
cmp
jle
cmp
jp
push
cmp
fbld
inc
add
push
adc
enter
jo
movw
clc
outsl
sub
add
inc
mov
divl
or
add
adc
hlt
pop
add
inc
mov
es
sbb
dec
popa
movb
inc
xchg
xchg
inc
xor
fldenv
pop
pop
scas
jge
sub
lret
sarb
addr16
jbe
aam
fldl
push
movsl
or
add
and
mov
ja
lea
push
lea
ret
in
fcoml
dec
loope
ficoml
sub
scas
dec
sahf
push
lea
roll
int
mov
jg
test
add
aaa
sbb
jb
mov
lock
je
ljmp
and
adc
push
push
int3
sub
jp
mov
adc
push
or
out
push
je
xchg
lcall
addl
incl
push
es
adc
pop
addl
mov
push
jne
insl
inc
or
dec
cmp
add
gs
inc
add
jmp
std
es
popl
xchg
adc
or
inc
lahf
xchg
push
jo
push
stos
xchg
adc
pop
dec
lock
add
insb
cld
jl
cmp
jne
lea
mov
xor
mov
sbb
xchg
jbe
push
hlt
mov
adc
xchg
jp
aaa
adc
jne
mov
add
in
add
mov
jl
and
inc
sbb
js
enter
std
subb
pop
or
and
adc
or
sub
test
aad
lahf
aad
and
adc
push
dec
xchg
push
ret
lret
or
fcomps
add
rcr
stos
arpl
sbb
dec
enter
mov
or
and
pop
mov
fstpl
push
or
mov
xor
stos
add
xchg
loope
mov
test
das
rorl
mov
adc
inc
mov
cwtl
xor
outsb
xchg
mov
movsb
and
mov
add
nop
pop
add
inc
fcomps
and
jle
dec
rorl
jle
jle
cmp
imul
mov
push
mov
aas
cmpsl
xchg
or
iret
insb
push
xor
jb
sbb
xchg
pop
and
inc
mov
nop
push
ret
add
add
jbe
jb
and
add
movsl
push
and
adc
push
fs
inc
aas
jb
sbb
sar
mov
mov
in
insb
add
fadd
add
mov
mov
pushf
push
push
mov
fcompl
cmpsl
fldt
add
daa
test
pop
push
and
mov
pop
lret
std
and
ret
std
add
ffreep
movsb
sub
push
in
cmp
pop
fildll
or
adc
sbb
inc
stos
adc
outsb
jb
fwait
adc
jl
inc
mov
inc
adc
or
jb
adc
adc
add
add
push
test
add
mov
add
sub
subl
out
adc
mov
sub
pushf
ljmp
arpl
mov
out
lea
push
or
xlat
mov
bound
jl
push
dec
push
xchg
inc
add
loop
lock
lock
pop
pop
cmp
ljmp
jg
push
mov
fst
sub
xor
in
fists
leave
adc
and
mov
popf
icebp
push
es
inc
push
fdivs
push
cld
dec
add
test
add
inc
pusha
add
cmp
sub
mov
push
and
push
repnz
mov
dec
in
daa
push
add
add
add
add
xlat
daa
sbb
inc
xor
fstps
incb
push
cmpb
sbb
nop
fs
sub
jns
mov
and
pop
mov
pop
enter
lods
call
fistl
and
andb
push
fdivrs
andl
sub
push
mov
sbb
dec
ja
and
imul
sbb
push
push
push
push
mov
popa
loop
sbb
in
push
andb
loope
les
inc
dec
xor
sbb
adc
cmpsl
inc
lds
inc
sbb
adc
imul
push
xchg
jae
inc
lret
sbb
push
sbb
pop
dec
xor
lds
push
or
mov
sub
insb
mov
and
and
sub
iret
mov
dec
sbb
insb
xor
xor
iret
sbb
inc
stos
mov
ret
jb
add
fdivrl
ret
xchg
xor
test
inc
and
sbb
cmp
add
dec
call
cmp
cmp
inc
jb
pop
nop
nop
and
inc
push
and
xor
and
inc
mov
jno
add
inc
enter
js
or
push
test
filds
jmp
fstp
or
adc
pusha
std
in
add
inc
cltd
orb
adc
and
incl
adc
jmp
adc
add
adc
pusha
adc
mov
sbb
aam
add
and
enter
push
inc
arpl
push
mov
ret
adc
stos
in
mov
inc
bound
jecxz
mov
fisubrs
mov
nop
push
inc
pop
push
dec
lahf
push
adcb
push
add
adc
push
loopne
int3
mov
lea
push
add
in
add
sub
xchg
scas
cli
mov
imul
shll
dec
sahf
lret
add
xchg
mov
add
adc
or
movsb
fdivr
fstps
leave
add
mov
call
mov
aas
push
inc
mov
adc
or
aas
filds
in
push
xchg
dec
cmp
in
push
inc
push
mov
xorb
addb
mov
inc
adc
push
add
loope
es
and
and
mov
jno
ja
add
pusha
inc
in
sub
call
jp
jno
sbb
enter
stc
jne
xchg
mov
in
das
or
or
add
loop
add
pop
sahf
sub
mov
push
add
mov
or
in
add
push
test
test
or
and
dec
arpl
cli
lea
add
enter
push
adc
mov
mov
adc
mov
push
addl
or
movsl
sbb
lods
or
mov
inc
inc
sahf
or
mov
fs
xchg
loopne
push
or
add
cmpsb
inc
xor
fbstp
lea
jecxz
adc
lods
in
fists
xor
mov
lock
lds
add
in
mov
xchg
lret
sbb
in
call
in
add
adc
adc
add
or
add
and
or
or
or
inc
repnz
loopne
loopne
add
test
adc
xor
jno
or
push
add
in
imul
in
push
add
sub
imul
orl
push
adc
cmp
mov
adc
scas
leave
inc
dec
fists
nop
or
push
add
cmpsb
inc
lock
add
or
outsb
das
sbbb
je
push
addr16
jo
and
popa
push
pop
lock
and
xor
cli
push
aad
push
fsubs
outsl
and
sub
and
in
dec
sbb
scas
jb
aaa
aas
fistps
test
loop
add
dec
sbb
dec
and
ja
push
enter
std
add
nop
adcl
ds
ficoms
cmpl
mov
push
incl
lahf
ficomps
or
or
add
and
add
add
jne
and
xchg
enter
push
into
sub
and
push
fisubrl
dec
mov
mov
add
ret
add
cltd
sti
inc
sub
insb
add
test
andb
cmp
repnz
adc
sbb
push
adc
sbb
push
mov
jns
in
stos
add
sbb
or
mov
bound
pop
sbb
add
sbb
andl
jb
jae
inc
push
shll
pop
sahf
adcl
mov
inc
jb
adc
push
nop
jns
push
or
sbb
shlb
xchg
loope
pop
add
inc
mov
adc
mov
pop
stos
sbb
xchg
jbe
jns
stos
push
sub
sbb
nop
dec
les
dec
sarb
filds
test
jo
leave
adc
lock
mov
shll
inc
outsb
adc
or
lock
hlt
sub
hlt
popf
jo
xchg
imul
or
movsl
push
or
fildll
call
jmp
js
adc
decl
pop
dec
popa
push
xor
dec
cmp
loopne
or
or
inc
pusha
pop
and
adc
lret
jp
cmpsb
bound
and
add
push
test
add
push
or
mov
jecxz
or
adc
cld
std
in
imul
lea
or
pop
fnstenv
jl
daa
dec
add
mov
insb
mov
das
pushl
fstl
movsl
sti
jge
movsb
cmp
dec
mov
pop
lods
adc
inc
cmp
fisubs
dec
sbb
les
inc
fimull
sub
cmpsb
and
call
aas
ret
push
stc
mov
add
xor
fnstcw
fnstsw
or
fstl
fnstsw
mov
test
je
fcompl
xchg
sbb
dec
scas
roll
aas
mov
and
sub
fldl
xor
inc
add
sbb
jb
imul
jp
loope
jmp
pusha
pop
push
add
adc
inc
fsubrl
inc
addr16
jo
xor
sbb
dec
ss
cmpsb
xchg
xor
dec
cmpsb
push
sub
cmp
shlb
cltd
fists
or
movsb
sub
lock
pop
jnp
sub
add
stos
nop
sbb
fdivrp
lahf
and
cli
or
adc
pop
xor
nop
pop
lods
sbb
push
add
aaa
cmpsl
sbbb
out
jne
sahf
pusha
xor
rorl
inc
mov
or
inc
mov
sti
ds
dec
adc
pop
scas
pop
ret
movsb
nop
inc
and
and
mov
cmp
push
lret
xchg
cld
shll
shrl
mov
arpl
or
add
test
icebp
sub
popf
sbb
addb
jge
cmp
and
into
adc
test
pushw
jb
mov
pusha
inc
add
inc
mov
stos
repnz
xor
and
xchg
sub
ret
and
push
mov
test
push
add
cmp
daa
mov
push
jmp
mov
fildll
push
mov
inc
adc
jge
add
push
aas
inc
sub
xor
pop
lahf
mov
lea
adc
in
repz
loopne
leave
shld
add
cmp
ja
jb
scas
add
sbb
lret
iret
xchg
xchg
test
sbb
pop
andb
adc
mov
mov
or
mov
push
test
lods
sub
xlat
fistpll
and
mulb
jmp
sbb
decl
pusha
push
and
in
or
push
push
or
add
mov
xor
rclb
and
cwtl
cmp
adc
jns
notb
add
popa
test
hlt
dec
or
or
test
or
iret
xor
popa
popf
rorb
adc
lods
fldcw
cmpb
sarb
mov
cmpw
or
pusha
jne
iret
and
ljmp
push
push
daa
sbb
mov
bound
loope
call
cmp
and
adc
cmp
push
jbe
push
movsb
push
fwait
hlt
push
xchg
int3
shlb
mov
push
xor
inc
jmp
or
lea
and
adc
or
dec
movsl
enter
aam
xlat
or
out
xchg
xchg
pop
or
subl
pop
jns
sbb
inc
xchg
xor
adc
xor
xor
and
adcl
idivb
add
ret
popa
ret
cwtl
bound
sub
push
inc
xchg
shlb
lea
cmp
out
add
sbb
int
push
insl
test
xchg
jle
mov
negl
pop
int
pop
sbbl
je
push
adc
aas
inc
mov
pop
xchg
lods
roll
push
out
popf
fcoml
or
dec
jo
add
adc
shrb
popf
lea
push
xor
inc
aas
pop
dec
mov
insl
ficompl
dec
das
push
aam
shr
lahf
lock
or
add
add
jmp
adc
rclb
mov
sbb
xor
or
and
mov
push
inc
shrb
in
test
and
jl,pt
xchg
xor
mov
jl
je
push
dec
scas
mov
callw
jp
js
iret
fisubl
xchg
mov
loop
dec
test
mov
or
dec
sbbb
sbb
push
or
or
call
dec
stos
cmp
jg
sbbl
jae
push
bound
mov
cltd
in
mov
pop
or
push
push
lahf
insl
add
add
add
test
cwtl
aam
or
jmp
mov
jmp
inc
mov
adc
sub
or
add
cmpl
cs
push
ja
fadds
nop
nop
xchg
push
loopne
mov
add
lret
or
xchg
sbb
inc
push
jo
aad
rorb
out
test
in
out
mov
add
push
adc
mov
out
ret
loopne
push
fmull
in
and
push
push
cwtl
mov
inc
cmpsb
sarb
add
rol
inc
pop
sbb
pop
loope
lea
shlb
das
into
inc
pushf
xor
sub
cmp
cmp
xchg
mov
arpl
leave
pop
int3
pop
ret
mov
pop
pop
fisttpl
insl
cmp
xor
push
mov
push
cmp
mov
sbb
call
test
stc
ret
jg
xor
mov
mov
or
jbe
cmp
adc
jne
lods
adc
jo
pop
fidivl
mov
js
pop
stc
shlb
call
add
arpl
and
je
rolb
and
mov
sbb
push
adc
pop
test
mov
push
add
testl
inc
stc
push
add
shrl
clc
jecxz
or
push
cmp
push
cmpsb
mov
aas
inc
push
add
mov
jb
lret
stos
xlat
inc
or
push
jg
mov
stc
loop
mov
push
push
mov
push
push
push
dec
sbb
test
dec
or
dec
out
add
sbb
add
add
cmp
or
les
jno
std
pop
cmp
orps
or
jl
clc
push
fisubrl
lock
sbbl
andb
inc
inc
mov
scas
loopne
pop
xchg
js
inc
cltd
shrb
lds
xchg
pop
sahf
push
loopne
repnz
cltd
sbb
bound
lahf
imul
pusha
aas
rorb
adc
push
push
add
das
jg
stc
add
push
or
sub
aaa
and
popa
roll
mov
roll
scas
pop
jg
je
sbb
outsl
pusha
mov
cmp
jg
mov
cmpsb
shll
jne
sbb
push
pop
ret
bound
lea
mov
xchg
and
add
sbb
cmp
or
and
jb
test
lock
and
mov
nop
or
pop
enter
pop
and
test
test
enter
inc
dec
or
push
pushf
int3
jb
pop
jb
add
xor
jb
pop
push
andb
mov
or
inc
or
nop
or
pop
enter
or
push
test
push
cmp
ja
les
daa
xchg
xchg
aam
in
push
or
test
inc
ss
movsb
jb
cmp
test
mov
pusha
testl
mov
push
mov
sbb
push
push
gs
repz
jne
xchg
movsl
mov
sahf
int
cmp
in
mov
out
and
sahf
out
sahf
mov
mov
mov
out
sahf
out
mov
out
sahf
mov
mov
mov
push
adc
and
sahf
out
sahf
insb
jns
xchg
mov
dec
lods
lcall
cli
dec
or
loopne
add
ds
outsb
sub
repnz
loope
push
sbb
sti
add
add
adc
ret
inc
sub
inc
pop
andb
and
add
bound
movsl
in
push
hlt
sub
test
add
and
xchg
fimuls
jbe
std
or
adc
sti
cltd
dec
fisubrs
inc
in
test
ss
pop
fxch
inc
or
xor
and
gs
cmp
xchg
push
add
les
fsubs
xchg
xchg
push
pop
mov
pusha
iret
test
leave
or
inc
rcrb
mov
mov
mov
leave
xchg
pushf
pop
addb
cmp
mov
fisubl
gs
push
add
sbb
mov
add
pop
pop
add
test
fcom
fnstsw
fstp
notl
mov
int3
jp
jmp
push
push
insl
sbb
cli
add
mov
clc
push
xchg
push
out
xlat
push
pop
pop
mov
lods
pop
fcompl
push
push
in
mov
xchg
push
jae
cmp
fs
push
loope
inc
adc
and
push
push
push
and
std
add
push
push
test
sub
mov
jae
xchg
sub
xchg
add
cmpsb
sbb
push
mov
mov
pop
fisubl
mov
cli
ss
or
iret
and
xchg
pop
lea
mov
xchg
outsb
orl
stos
mov
mov
mov
cmpb
push
push
mov
pop
stc
sahf
les
ret
enter
push
in
inc
adc
mov
arpl
or
mov
sbb
cwtl
out
call
mov
pusha
sbb
dec
mov
xchg
mov
xchg
into
xor
add
inc
xchg
jmp
inc
outsb
sbb
or
js
in
add
push
pop
lea
sbb
in
push
sub
fcmovnbe
nop
cmp
mov
cmova
sbb
sbb
cwtl
push
cmp
dec
xlat
xor
mov
ljmp
or
adc
mov
das
mov
in
ficoms
xchg
lods
daa
xor
or
js
sub
pusha
sub
test
adc
orb
nop
cmpsb
cmpb
sbbb
fildl
lcall
jo
adc
mov
or
pop
shlb
mov
inc
jbe
insb
sbbb
mov
sbb
mov
movsb
mov
adc
mov
adc
mov
mov
fs
xchg
pop
push
sahf
je
jne
xchg
jo
movsl
add
imulb
xor
ss
and
dec
xor
popa
inc
add
push
lret
lea
jp
imul
mov
xchg
arpl
push
or
jle
xor
pushf
jmp
pop
lods
jmp
and
mov
aas
notb
inc
movsb
in
rcrl
leave
xor
in
push
movsb
shr
push
pop
int3
std
loop
addl
or
and
add
mov
cmp
cmc
push
sbb
and
es
ret
sbb
mov
adc
ret
pop
in
push
sub
push
sbb
loop
jp
fs
aad
adc
pop
cmpsb
or
int3
mov
rcll
lret
xchg
arpl
iret
xor
inc
mov
arpl
pop
shlb
xlat
mov
adc
aas
pop
pop
das
and
xor
adc
and
daa
ds
dec
sbb
mov
mov
xchg
imul
xchg
ret
and
xlat
jbe
nop
rorb
mov
xor
mov
icebp
adc
push
sub
push
jle
lods
mov
cmpsl
sbb
push
mov
sbb
lock
mov
jmp
test
daa
cmp
ds
sub
mov
test
sahf
addl
sub
cmp
sbb
rol
push
adcb
pop
loope
daa
pop
addr16
repz
cli
xor
cmp
xor
int
rcrb
and
xlat
xor
cmpsb
xchg
out
pop
rolb
mov
xor
les
mov
mov
or
imul
add
mov
sbb
inc
mov
inc
cld
cmpl
jae
dec
jge
inc
test
add
sbb
mov
push
inc
jae
insl
mov
or
push
test
xor
jno
add
inc
and
mov
lock
in
lods
or
add
inc
add
bound
push
xchg
inc
fistpl
fcompl
cmp
fsub
mov
nop
loopne
mov
mov
les
daa
adc
fdivr
lcall
add
lds
cmpsb
movsb
pop
iret
mov
push
and
into
insl
sbb
pop
shrb
fnsetpm(287
add
or
fmuls
and
xor
orl
or
jl
mov
push
nop
sbb
sub
dec
push
hlt
push
xor
cmp
and
add
test
mov
mov
dec
mov
icebp
or
inc
lods
test
out
add
cwtl
pop
mov
jmp
mov
pop
inc
movsl
and
dec
imul
loopne
add
lea
push
and
sbb
lcall
hlt
icebp
dec
repz
loopne
mov
fimull
jg
pop
add
icebp
sbb
jnp
inc
movsb
fwait
lock
cmp
dec
ret
xchg
fs
enter
mov
mov
or
jo
rclb
sbb
add
lods
adc
sbb
jl
xor
xchg
pop
sarl
test
or
xchg
ja
push
dec
mov
fmuls
fs
call
fdivrl
mov
lret
arpl
adc
in
adc
jae
xor
mov
mov
shll
pop
add
pop
xlat
cmp
adc
daa
loopne
subl
rclb
push
mov
mov
cmp
sbb
nop
push
add
cmpsb
sub
push
sbb
fnsave
lods
sbb
enter
testb
push
les
jl
rcrb
xchg
push
lcall
or
mov
adc
test
mov
adc
adcb
pop
and
test
inc
xchg
rolb
jl
imul
xchg
lock
fdivl
jg
xor
ja
dec
xchg
xlat
inc
push
add
test
dec
mov
dec
sbb
call
xchg
xor
sbb
cs
mov
lcall
jo
dec
fwait
dec
sbb
xchg
xor
xor
pop
mov
inc
adc
int
mov
int
adc
movsb
adc
xchg
push
mov
or
jae
jl
dec
je
xchg
data16
insb
or
or
and
sub
mov
mov
and
push
fcom
xchg
imul
add
or
xor
cld
xor
mov
and
inc
lcall
mov
in
mov
mov
sbb
mov
cwtl
add
inc
popa
js
cmovns
out
and
add
add
int3
inc
or
or
lahf
nop
and
and
aas
enter
cs
mov
sbb
jno
test
in
imul
fmuls
sub
clc
push
fdivrs
jb
in
or
cld
or
jne
or
mov
xor
aaa
loopne
push
loope
adc
mov
idivb
sbb
or
and
mov
push
add
dec
sbb
or
sbb
xor
inc
pushl
leave
cltd
inc
addr16
xor
xlat
imul
cmp
adc
mov
popf
push
aaa
stos
dec
sbb
enter
je
push
pusha
lods
es
pop
int
or
xor
in
jmp
dec
je
sbb
enter
test
mov
xchg
sub
adc
push
pushf
sub
lcall
mov
in
push
xchg
push
sub
add
pop
inc
nop
sub
add
sub
sarl
enter
shr
mov
rcrb
mov
aaa
mov
pop
dec
jne
movsb
and
inc
push
scas
jecxz
mov
cwtl
mov
sbb
add
sub
xchg
mov
aam
mov
and
push
inc
loopne
and
jl
js
lea
jl
pop
loopne
xchg
mov
sub
xor
je
and
push
dec
pop
jb
pop
and
mov
fdivrs
les
stos
inc
hlt
scas
cmp
movsb
cmpsl
sub
cmp
inc
sub
push
dec
jns,pn
pop
sub
and
sbb
icebp
or
mov
xchg
push
ljmp
sub
xor
and
or
mov
add
dec
push
xor
or
fimuls
mov
cwtl
xor
mov
arpl
sub
pop
adc
push
popa
test
adc
cmc
sub
or
sub
addb
call
sub
int
or
dec
add
es
and
lods
aaa
push
add
shrl
loope
sbb
mov
sub
xor
adc
sub
les
mov
dec
add
andl
cmc
cmp
add
sbb
dec
xor
mov
out
inc
aad
inc
mov
test
adc
lds
or
sbb
jecxz
stos
sbb
sbb
outsb
or
pop
add
dec
and
adc
push
adc
or
adc
add
sbb
xchg
mov
out
add
ljmp
dec
aad
add
mov
pop
add
adc
loop
push
addr16
or
adc
es
jg
lock
repnz
inc
fldcw
mov
out
stos
lea
pushl
and
pop
xor
dec
call
jg
sbb
inc
mov
or
sbb
fsubs
addr16
sub
lret
es
jne
enter
mov
jecxz
mov
call
dec
lock
or
adc
push
xor
add
mov
add
mov
cld
add
pop
les
push
or
jne
adc
sarl
cmp
ljmp
iret
cmp
insb
imul
jo
aad
adc
mov
sub
mov
subl
sbb
popf
mov
stos
add
sub
sub
dec
shlb
out
punpcklwd
and
sbb
andl
mov
cmp
movsl
inc
call
outsb
and
xchg
inc
xor
lea
cmp
stc
jge
adc
or
clc
rolb
mov
add
jnp
lea
pop
and
ds
mov
mov
xchg
pop
add
outsl
ja
mov
mov
clc
insb
or
outsb
leave
adc
mov
or
mov
jmp
clc
cmp
stos
push
sbb
push
adc
cli
pusha
push
pop
cld
int
xchg
lea
cmp
adc
and
cmpsb
rcrb
nop
lcall
test
mov
mov
cmpsb
xor
test
pushf
ret
inc
pop
inc
pusha
ljmp
lret
xlat
addl
xchg
dec
mov
rolb
decl
mov
jmp
imul
xlat
aam
push
add
mov
xorb
je
jecxz
rol
cmp
mov
push
pop
rcrb
das
sub
rolb
ret
pop
prefetch
test
adc
ret
xchg
pop
std
sbb
dec
adc
and
ds
sbb
out
or
xor
sub
pop
les
out
cmp
sbb
adc
lret
lret
inc
cmp
lcall
insb
clc
xorb
lods
mov
add
lret
adcl
adc
outsl
pop
mov
cmp
out
xor
jge
add
sahf
mov
jae
sbb
faddl
fs
jecxz
shll
xor
sbb
jecxz
xor
sbb
xchg
pop
aas
push
dec
leave
lods
push
sub
jl
mov
ret
xor
sbb
xchg
pop
ret
sub
push
lahf
adc
mov
inc
stc
leave
testl
or
sahf
leave
shlb
push
adc
stc
mov
xchg
dec
aaa
xchg
lock
inc
sub
mov
inc
inc
fiadds
mov
cltd
xor
dec
clc
mov
enter
test
les
ja
outsb
mov
or
push
dec
jmp
mov
and
jg
je
mov
pop
aam
sub
movzbl
movb
shr
adc
jp
movsbl
mov
and
push
xchg
inc
jecxz
outsl
sbb
add
mov
inc
xchg
jne
and
add
clc
push
push
push
in
adc
jnp
cmp
jg
hlt
push
xor
xchg
or
add
add
push
adc
mov
fldl
xlat
push
xor
fs
setg
mov
cmp
adc
stos
jmp
out
sbb
adc
movl
fildl
mov
dec
mov
stc
sub
pop
xchg
jne
push
movsl
push
pop
push
dec
adc
fmuls
mov
roll
dec
fwait
je
xchg
mov
mov
cmp
sbb
pop
add
push
mov
mov
push
add
orl
shrb
jmp
jb
out
out
js
xchg
cwtl
xor
xchg
shufps
inc
arpl
mov
mov
imul
rcr
lcall
mov
push
bound
cmp
adc
loop
testb
clc
inc
enter
push
mov
pop
test
mov
cmp
es
cmpsl
in
add
outsl
sbb
sahf
test
cltd
lret
inc
or
nop
lret
sub
sub
mov
mov
les
bound
aad
lea
and
jo
sub
rolb
lock
je
sbb
and
dec
adc
adc
mov
pop
in
in
leave
jmp
pop
dec
sub
xlat
add
outsb
mov
jg
lock
stos
mov
lds
cmpb
insb
mov
inc
sub
or
push
push
rolb
flds
and
push
push
push
push
and
pop
pop
addb
jno
jg
mov
pop
adc
push
add
jg
push
mulb
inc
cmp
shrb
idivl
mov
daa
faddl
pop
repnz
push
jno
push
stc
mov
out
pop
mov
mov
sub
les
pop
push
cmpsb
cmc
add
xchg
mov
icebp
test
jbe
xlat
lods
rorb
das
movsl
xor
rorl
inc
pop
pop
mov
inc
icebp
mov
xchg
inc
test
rcrb
into
ror
incl
xor
xor
push
sub
imul
jbe
inc
xor
add
lock
sub
inc
sbb
sbb
add
into
pusha
jo
sarb
fsqrt
lahf
fmuls
jge
jbe
or
cmp
insl
hlt
stos
shll
add
sub
add
mov
mov
adc
jbe
incb
or
jo
add
jle
shlb
mov
adc
pop
mov
pusha
ds
aam
enter
push
loopne
push
jns
ret
push
push
mov
mov
in
xor
adc
jp
test
inc
xchg
cmp
xorb
gs
push
flds
out
inc
jo
rcr
dec
or
add
cmp
inc
cmp
pusha
sahf
aas
aad
mov
sbbb
push
pop
mov
add
lock
push
jns
and
cmp
movsb
cs
out
push
out
mov
jno
adc
add
xchg
cmp
sub
lea
enter
dec
nop
inc
jp
cwtl
mov
out
jg
push
loopne
and
and
pop
cwtl
adc
mov
jecxz
push
ss
jae
movq
out
cmp
jne
push
push
push
cmc
and
dec
sbb
mov
andb
pop
ret
imul
inc
pop
mov
test
jl
add
push
aaa
in
adc
push
test
cmp
cmp
or
lea
xchg
pop
imul
xor
test
xlat
inc
pop
push
mov
outsb
cmp
push
push
cmp
or
test
clc
clc
push
or
push
cmp
mov
dec
adc
lea
shr
adc
mov
pop
test
xor
adc
jne
and
movsl
add
shl
ja
adc
hlt
sub
add
mov
cmpsl
cs
dec
pop
ret
pop
xor
mov
cmp
adc
xor
inc
mov
adc
sub
adc
pop
pop
fists
imul
arpl
cwtl
push
mov
ret
add
or
cli
cmpsl
mov
mov
xor
jbe
cmp
cmpsl
lock
push
rolb
or
or
mov
gs
pop
pusha
jecxz
add
inc
sub
xchg
jecxz
jae
scas
inc
shl
mov
dec
pop
daa
pushf
sbbb
push
pop
mov
pop
mov
repnz
pop
fstps
out
adc
pop
cld
flds
fxtract
sub
shrb
mov
xor
aaa
push
hlt
xchg
sbb
fmuls
jns
sbb
mov
aas
jg
jae
adc
mov
push
loop
ficoms
mov
add
imul
add
adc
leave
xchg
xor
and
pop
lahf
xchg
sbb
sub
ja
les
movsb
jge
repz
pop
push
leave
cmp
enter
adc
mov
sub
out
add
or
push
bound
adc
dec
loopne
and
dec
cmp
xor
and
and
inc
and
pop
push
nop
test
lea
xor
stc
popa
and
xor
dec
sbb
xor
dec
fcoms
or
adc
imul
xor
icebp
cld
jo
sub
cld
dec
add
xchg
add
mov
dec
jne
shrb
pmulhuw
sbb
sbb
jbe
jo
test
xchg
or
pop
fldl
mov
and
stos
out
pop
pusha
loopne
xchg
push
enter
adc
jl
sbb
xchg
lock
inc
fisubrl
push
push
cs
inc
rclb
mov
mov
dec
and
xor
mov
or
inc
movswl
icebp
push
inc
pop
test
xchg
sub
or
xchg
pop
mov
add
ret
mov
cmp
pop
call
pop
dec
repnz
insl
push
add
movsl
and
cli
cltd
dec
cld
lret
jne
mov
jmp
seto
ret
aam
int3
repz
add
test
sbb
xorb
call
push
add
faddl
add
loopne
in
mov
push
lock
pop
add
pop
cmp
mov
mov
jno
sub
add
insb
roll
pop
push
jecxz
add
scas
add
leave
jmp
mov
fnsave
sub
push
fbstp
in
or
ss
mov
cmp
aas
add
vmulps
pushf
repnz
fstl
add
lret
mov
int3
mov
mov
dec
pop
sbb
jno
lock
adc
nop
and
add
ss
sub
mov
dec
shl
and
xor
mov
inc
sub
adc
sbb
mov
rcll
dec
sbb
lock
and
add
dec
mov
sbb
ljmp
xor
sbb
adc
inc
movups
test
sbb
test
and
xor
add
add
cmp
dec
dec
shl
inc
notb
mov
dec
or
insl
shlb
popa
mov
imul
cltd
sarb
lret
adcl
jne
push
imul
mov
inc
cmp
outsl
jbe
add
adc
jo
push
cmp
js
test
add
pusha
sub
or
aaa
aaa
xchg
adc
add
or
rclb
push
cmp
inc
lods
xchg
pop
jnp
and
rcrb
jo
push
dec
add
fcompl
push
test
push
xchg
lea
add
sub
loop
dec
loop
and
jnp
das
mov
xor
add
sbb
sub
aam
lcall
andl
mov
push
mov
lods
cmp
xor
subb
sub
loope
sar
sub
pop
pusha
testl
lods
xchg
xor
ljmp
popf
lds
aad
cmp
insl
mov
ss
cmp
ja
dec
call
mov
cwtl
das
adc
and
push
mov
add
ja
sbb
xchg
xchg
cmp
jmp
dec
test
pushw
mov
add
inc
dec
ljmp
int3
shl
xchg
pusha
shll
jne
and
not
xchg
lods
add
gs
lret
dec
seta
movhps
test
leave
or
mov
aas
push
test
jmp
loop
fiaddl
data16
lret
loop
sub
xchg
call
xor
sbbl
aaa
push
or
jo
repnz
dec
add
add
xchg
jbe
out
popl
ja
clc
push
ja
pop
adc
mov
add
in
add
lock
sbb
aas
adc
add
inc
adc
mov
addb
jg
dec
test
call
ljmp
add
les
push
push
push
adc
and
pop
push
pop
dec
pop
sbb
sub
push
mov
xchg
xchg
mov
jnp
inc
rcll
loopne
out
push
cmp
push
mov
inc
jecxz
adc
pusha
pop
sbb
mov
mov
sbb
adc
inc
rclb
inc
aaa
nop
mov
sub
cld
adc
lahf
cmp
dec
sti
jns
push
push
in
aaa
dec
add
add
inc
int3
mov
add
push
add
jg
addl
fnstcw
sub
pop
push
mov
imul
dec
mov
dec
fdivrl
push
dec
mov
mov
sub
ss
imul
dec
inc
popf
add
daa
add
fdiv
notb
or
or
adc
push
lds
jmp
xor
add
popa
or
jno
nop
in
jb
and
push
dec
mov
in
or
por
in
push
sahf
out
ret
jg
js
sbb
jg
xchg
adc
mov
jb
mov
push
mov
mov
ljmp
mov
in
dec
addb
out
inc
inc
sbb
cltd
fldl
jl
mov
call
in
test
sahf
mov
mov
neg
dec
and
jmp
decl
cmp
ja
inc
push
and
or
test
mov
inc
dec
stos
aam
push
leave
add
mov
insl
insl
bound
cltd
or
inc
add
pop
adc
in
rolb
mov
xchg
dec
mov
addr16
xchg
or
xor
xchg
setb
xor
sbb
sub
push
adcl
adc
divl
ret
imul
xchg
icebp
mov
jns
adc
mov
out
mov
push
dec
xchg
cmp
mov
pop
sub
pop
daa
or
lret
sub
test
dec
and
inc
cmc
push
jne
addb
adc
iret
imul
adc
outsb
aas
imul
mov
sbb
push
mov
pop
lods
insl
adc
or
cmpsb
jne
or
lods
and
cld
mov
mov
rcrl
pop
jmp
jp
es
xor
dec
inc
jbe
cli
loope
sub
dec
push
sub
in
mov
cmp
sbb
setns
cmp
mov
adc
rcrl
inc
push
test
mov
adc
inc
inc
sbb
lahf
xchg
movsl
jns
inc
and
sub
pop
xchg
mov
pop
pushf
add
pop
and
jb
inc
scas
test
inc
enter
xchg
mov
cmp
movsl
inc
or
sub
inc
dec
pop
mov
pop
shrb
in
test
mov
pop
jno
pop
xchg
in
leave
xlat
pop
iret
pusha
cmp
leave
jl
sub
xchg
cmpsl
add
sub
mov
roll
adc
sub
sbb
fcom
sti
lods
push
jo
popa
push
imul
adc
sub
ss
push
cmp
pusha
nop
das
adc
pop
or
fiaddl
es
jge
and
sarb
inc
mov
in
shll
mov
sbb
in
add
inc
js
pop
shlb
mov
dec
xor
rorb
add
out
fisttps
jo
sahf
xchg
js
icebp
sar
in
adc
ret
push
cld
push
jno
mov
in
ja
push
je
mov
stc
mov
aas
xor
add
insl
fnstsw
movzbl
and
or
xchg
dec
xchg
add
cmp
lods
add
push
jbe
lret
mov
or
jecxz,pt
push
jg
and
inc
leave
sub
dec
lods
out
mov
xor
fstl
sbb
and
sub
sub
jg
fcomps
test
mov
lea
jmp
or
push
je
popa
push
cmpsl
inc
enter
dec
push
cmpsl
pop
inc
adcl
or
mov
insb
pop
test
rorb
jne
je
sbb
pusha
sub
pop
daa
push
dec
cmpsb
add
push
lea
cwtl
call
dec
fimuls
sbb
xchg
xor
mov
sbb
adc
or
pop
xor
xchg
add
adc
and
pop
and
outsb
inc
mov
dec
jns
sbb
roll
syscall
mov
add
enter
push
or
inc
add
leave
inc
ret
adc
sub
in
divl
add
add
pop
test
test
cmp
add
pop
sbb
adc
push
loope
aaa
dec
xor
fmuls
aas
mov
inc
inc
gs
int3
add
mov
test
add
push
pushf
xlat
lahf
sbb
or
fidivrl
push
mov
lea
add
movsb
jl
xchg
out
stc
or
outsl
movsb
cmpsb
push
out
add
stos
add
ja
push
out
xor
outsl
leave
dec
mov
sbb
pop
loopne
push
sbb
inc
add
inc
or
sub
push
mov
push
cmp
dec
push
add
test
jle
nop
sub
loop
mov
or
pop
add
aad
inc
rclb
xchg
mov
dec
mov
mov
roll
mov
insb
push
repz
adc
xor
ss
or
pop
sahf
out
xor
and
out
pop
andb
je
sbb
push
dec
cmovbe
adc
jbe
push
pop
inc
jne,pn
adc
push
sahf
cmp
ficomps
xor
jne
or
scas
cmp
ss
or
jne
subb
cmp
ret
sbb
arpl
jg
jne
fldl
push
out
and
aad
jecxz
push
sbb
sbb
clc
add
stos
out
inc
xorl
fisubl
mov
add
add
xor
add
nop
inc
push
add
test
add
hlt
pop
sub
dec
or
or
decl
sub
fstl
std
fs
pusha
mov
mov
or
or
inc
clc
mov
pcmpgtw
pop
int
add
sbb
jl
movsb
jo
xchg
dec
and
fbstp
movsb
or
add
cs
aad
inc
jmp
lret
adc
test
pop
sub
push
dec
push
es
faddl
mov
pop
pop
inc
jb
or
and
xor
inc
dec
add
dec
jmp
adc
or
in
sbb
incl
cwtl
jg
pop
pop
aaa
cwtl
movsb
fwait
add
lea
mov
push
and
lcall
faddl
in
faddl
sbb
fs
fstpl
popf
in
ljmp
imull
test
xor
or
xor
cmp
loopne
add
xchg
sub
int3
shl
in
sub
in
xor
enter
nop
fxch
add
fstps
pop
mov
inc
adc
cmp
push
add
cltd
mov
orb
xor
pop
or
push
pop
fidivrl
and
and
push
cmp
jmp
out
repnz
popf
sub
clc
ret
push
xchg
cmp
dec
sbb
cld
xlat
dec
lret
loopne
mov
mov
xchg
out
xchg
mov
sahf
testb
in
hlt
mov
dec
pusha
insb
sub
mov
push
aas
push
cmpsb
jnp
fsub
mov
cs
pop
inc
test
test
xchg
sarl
push
pop
mov
lret
cmp
add
mov
fwait
mov
addl
push
cmp
xchg
insl
push
or
push
mov
aas
or
aad
pop
push
xor
add
xorb
inc
add
sbb
outsb
test
jge
aam
adc
xor
add
push
or
shr
into
sub
and
movsb
push
leave
cli
mov
pop
mov
fistpl
insl
and
sub
out
les
push
ljmp
push
inc
fs
jb
imul
push
in
push
cmc
add
lea
or
xchg
push
xor
lds
addr16
dec
jle
scas
xor
inc
xchg
icebp
add
jae
pop
push
xchg
pop
popa
loopne
mov
dec
push
xor
mov
pop
push
xchg
push
cmp
dec
aaa
je
fdivs
inc
pop
pop
mov
inc
or
imul
ja
pusha
add
sbb
mov
aam
jl
inc
popa
jb
xor
xor
in
lds
or
ret
mov
fstpt
in
dec
dec
jp
add
iret
or
inc
pop
add
sub
pop
adc
mov
lds
push
xor
add
mov
and
sbb
mov
jl
add
xchg
mov
mov
clc
fistl
xor
jge
inc
or
leave
jp
add
pop
xchg
and
cmp
jo
xchg
iret
sbb
or
or
sub
aam
sub
pop
inc
loope
sbb
jmp
cmp
cmp
sub
push
mov
outsb
les
push
jmp
mov
in
lock
jae
ljmp
or
sub
movsl
mov
pop
mov
pop
div
in
cli
aaa
jl
mov
outsl
movntq
gs
daa
adc
adc
outsl
dec
push
pop
fs
adc
cmpsw
insl
mov
call
dec
enter
jecxz
adc
mov
daa
xchg
sbb
add
pop
sahf
or
adc
fld
pop
enter
ds
add
push
pop
mov
hlt
and
popf
nop
sbb
cli
mov
negb
mov
mov
nop
int
pop
test
xor
push
dec
out
jne
lea
sti
lcall
and
movsb
cltd
dec
and
cwtl
dec
lcall
and
call
sar
daa
adc
imul
pop
test
or
sahf
dec
inc
jnp
mov
pop
std
std
add
xchg
shlb
inc
mov
cli
fldt
arpl
imul
jo
mov
lods
inc
add
mov
xor
add
mov
ja
fstl
and
or
daa
add
ret
pop
dec
stos
out
test
jl
xchg
dec
sbb
cmp
in
dec
mov
mov
fwait
insl
or
or
nop
dec
and
xor
xchg
mov
dec
dec
add
dec
push
add
rcrl
inc
lds
or
rcr
xor
sbb
cmc
jb
imul
pop
orb
call
loopne
das
insb
int
jno
lea
add
loopne
xchg
xchg
ret
inc
pusha
test
push
or
sbb
jo
xchg
cld
jb
arpl
fwait
xor
pop
jb
or
int
js
mov
jg
hlt
test
add
je,pn
pop
loope
sbb
mov
xor
push
sahf
outsb
pop
pushf
mov
mov
sub
scas
inc
xor
xor
flds
adc
sbb
jmp
and
rcrb
jbe
jge
adc
push
cmp
xor
aas
adc
lcall
or
aam
sub
lret
jmp
sub
xor
push
cmp
aam
cld
nop
jg
mov
add
push
les
mov
hlt
cmp
test
hlt
hlt
cmc
push
xchg
mov
jp
lock
nop
jne
mov
mulb
pop
jl
lea
mov
in
adc
inc
testl
push
mov
push
mov
mov
xor
cmpsb
clc
sbb
adc
ss
scas
pop
adc
inc
nop
adc
add
fcoml
inc
pop
insl
pop
cwtl
rol
repz
fsubrl
adc
inc
lods
aaa
jb
mov
push
jae
popa
and
ja
mov
lea
pusha
loope
jb
sar
jecxz
add
js
sbb
mov
cmc
sbb
inc
nop
bound
add
push
inc
test
push
push
ja
bound
js
sbb
out
imul
xor
pop
stos
sbb
jae
push
mov
pop
aaa
inc
mov
xchg
ds
sub
shl
js
jle
push
lods
dec
add
mov
sub
adc
enter
not
pop
add
xchg
and
cwtl
ret
xchg
mov
pop
mov
enter
pop
andb
or
in
adcl
sub
orl
stos
mov
or
cmp
push
or
or
inc
or
faddl
bound
and
push
scas
adc
sbb
fdivl
adc
pop
or
push
xor
adc
rcrl
or
loope
adc
inc
add
je
sub
fwait
dec
sar
dec
stos
sbb
push
dec
test
cmc
or
mov
ret
sub
push
clc
mov
cli
push
sbb
and
jne
dec
test
pop
int3
fcmovnbe
and
daa
and
push
push
push
and
push
push
cmp
or
rol
icebp
add
pop
in
out
comiss
inc
imul
push
ret
in
imul
add
mov
push
push
push
push
mov
dec
mov
jg
jae
inc
add
pop
or
xchg
sar
sbb
lock
mov
adc
decb
incl
adc
or
push
pop
cmpsb
adc
push
jge
imul
push
fmull
add
push
mov
sbb
sbb
movsb
or
xor
and
cmp
push
or
adc
cmpl
add
ja
add
ret
test
pop
movsb
outsl
mov
lods
add
ja
and
mov
sbb
in
xor
int
cmp
pop
stos
lcall
out
or
test
inc
out
dec
push
test
sub
mov
lods
push
inc
mov
push
push
adc
dec
aad
loopne
jle
sub
mov
stos
mov
in
pusha
jne
lret
cmp
idiv
addr16
push
lods
xchg
fwait
dec
loope
popa
add
lcall
es
fildl
mov
mov
ficoms
fdivs
addr16
cmp
add
xlat
je
jnp
cmc
divb
push
adc
pop
hlt
and
mov
loopne
cld
mov
cmp
aad
int3
or
push
sbb
mov
mov
add
pop
add
test
aam
adc
pop
enter
pop
pop
leave
andb
push
sbb
xchg
cmp
adc
popa
mov
inc
sarl
fsubl
arpl
add
mov
imul
jo
xchg
or
popa
loopne
fldenvs
jb,pn
cmc
fs
mov
add
add
mov
stos
inc
fst
je
or
dec
push
ret
subl
mov
lods
fcoms
add
or
or
in
add
hlt
fwait
ja
ja
imul
mov
xchg
push
inc
shrb
adc
shlb
jecxz
add
mov
jnp
mov
mov
xchg
out
push
in
and
shld
xchg
mov
sbb
test
inc
nop
cmpsl
mov
push
cli
xchg
adc
inc
sub
adc
arpl
xchg
adcb
fcompl
clc
inc
sbb
fbstp
clc
js
cld
orb
and
into
xchg
das
hlt
push
ret
sti
aad
jb
dec
push
fists
xor
mov
pop
inc
cmp
mov
arpl
sbb
xchg
jb
mov
cmp
mov
and
into
or
and
inc
or
shll
push
ja
push
pop
es
add
mov
scas
inc
shlb
fcomps
push
pop
mov
push
mov
xor
and
enter
pop
outsl
loope
pop
mov
fcmovnbe
or
cmp
data16
roll
and
inc
adcb
push
mov
pop
dec
rcll
fmuls
xor
sbb
pop
or
mov
add
push
imul
add
movsl
inc
and
push
or
pop
and
push
hlt
push
mov
loop
hlt
adc
push
cmpsl
rcll
hlt
lcall
fmuls
in
add
pusha
push
test
sub
add
sbb
stc
add
add
mov
xor
inc
inc
enter
xchg
add
scas
in
aas
jle
or
push
test
fs
xor
dec
inc
scas
in
or
movsb
lock
jmp
adc
sbb
dec
inc
mov
pop
adc
add
js
push
stos
pop
pop
add
mov
pop
xor
in
dec
rcrb
inc
cltd
in
iretw
xor
gs
push
jmp
jbe
in
dec
xchg
cmp
push
imul
lret
shll
adc
or
adc
mov
das
sub
push
cmp
lods
insl
and
je
or
mov
dec
add
sub
add
repz
and
and
mov
fcomip
mov
nop
mov
inc
mov
xchg
notl
sbb
and
push
or
push
push
frstor
or
clc
mov
sbb
pop
sub
mov
andl
test
test
xchg
push
push
cwtl
bound
addl
inc
add
mov
dec
repz
clc
mov
dec
sbb
and
cli
pop
add
inc
or
mov
mov
add
xchg
enter
mov
push
stos
cmp
adc
pusha
sub
test
and
mov
jae
or
addb
dec
loope
and
adc
pop
cmpb
lcall
inc
pusha
dec
or
ror
rclb
lock
and
or
js
cwtl
sarl
and
inc
jne
sub
dec
mov
mov
jp
mov
or
lahf
sub
adc
add
fsub
dec
cwtl
sub
dec
xor
arpl
add
adc
inc
in
or
ss
int
dec
xchg
xchg
mov
jne
imul
cwtl
movsl
push
imull
mov
jns
adc
imul
mov
inc
popf
adc
push
push
mov
fidivl
fwait
xor
lcall
adc
push
mov
jo
push
sub
inc
stos
push
dec
aad
cmp
lret
adc
push
xor
aam
jo
sub
mov
push
pop
fwait
cs
and
adc
imul
or
xor
mov
adc
push
and
stc
aas
jg
add
push
xor
sbb
jno
inc
dec
mov
and
popa
adc
add
fsts
xchg
and
sti
push
sbb
pusha
push
mov
mov
and
add
pop
lahf
shll
loopne
rorl
lock
sbb
cmpsl
xchg
cmp
lock
mov
mov
jecxz
aas
filds
lret
sub
test
xor
inc
inc
mov
cmp
hlt
mov
rclb
mov
fisttpl
adc
cmp
and
es
insb
xchg
in
inc
pop
inc
sub
xor
mov
sub
bound
jno
jecxz
mov
rorb
push
les
mov
fwait
adc
cs
jge
outsl
loop
adc
fldl
mov
popa
push
enter
adc
and
movsb
neg
fcomp
insb
lock
bound
fists
sbbb
sub
inc
rorb
mov
flds
aas
jmp
rorb
shrb
cmp
inc
fdivrs
adc
les
mov
and
jg
xor
mov
xlat
mov
add
and
int
jl
xor
enter
test
lods
inc
push
nop
fsubs
shrl
mov
or
cmp
nop
or
je
and
fsubr
in
xchg
pop
fcoml
in
dec
xchg
stos
pop
les
adc
fnstcw
out
roll
ds
xor
add
cmp
hlt
add
fwait
subb
int3
sbb
adc
jnp
cmpb
lret
adc
cmc
fbld
cmp
jae
movsbl
lea
cmp
ja
in
mov
stc
movsb
sbb
or
sbb
or
jbe
mov
shrb
out
inc
or
lods
int
decb
or
out
or
mov
jl
add
scas
das
mov
pop
add
adc
clc
add
std
xchg
out
in
add
clc
aaa
mov
fistl
sub
ds
mov
add
addr16
dec
pop
orl
cmp
jmp
les
dec
jne
xor
and
sub
pop
inc
or
cld
mov
test
sbb
or
cmp
jg
mov
add
outsb
mov
loope
roll
rolb
imul
jne
cli
incl
std
jg
mov
cmp
sub
stos
aam
jo
xor
mov
jl
jmp
mov
jle
mov
lea
cmp
jbe
lock
push
sub
mov
jmp
out
cli
sbb
cmpsl
push
add
add
addb
jmp
insl
stos
mov
ds
push
push
push
jmp
fcomp
test
or
xchg
mov
je
cmp
daa
lcall
pop
shrb
loope
add
mov
inc
cmp
push
sbb
cmp
mov
sub
and
insb
test
loope
js
pusha
in
cltd
rorb
pop
arpl
add
aas
mov
push
push
xor
stc
push
or
or
pop
insb
lds
add
stc
incb
push
push
push
jge
mov
xor
test
nop
or
cmp
mov
lahf
inc
sbb
add
filds
mov
mov
pop
mov
je
iret
sub
adc
push
xrelease
jle
test
cmp
mov
sub
pop
iret
push
adc
and
xchg
adc
or
xchg
cmp
jmp
push
call
xchg
push
and
es
push
or
sbb
outsl
ss
jmp
inc
push
imul
add
push
adc
inc
loopne
das
mov
adc
sbb
mov
in
lds
xorb
pop
push
decl
ficoml
push
jne
loop
push
inc
jae
inc
fmuls
mov
lahf
adc
inc
jo
imul
inc
cmp
syscall
and
lea
jge
push
or
pop
add
or
and
jno,pn
adc
mov
and
dec
cmp
jl
ja
mov
or
jns
jg
fmuls
mov
pop
push
or
js
and
movsb
fwait
push
pop
push
cld
xor
aaa
cmp
in
clc
sbb
adc
insb
incl
mov
int3
cli
sbb
jns
push
adc
decb
sub
pop
and
add
sbb
popa
scas
pop
ljmp
or
cmp
and
sub
sbb
js
bound
xchg
sets
xchg
test
lock
loopne
inc
lods
lea
dec
push
pushf
sub
mov
mov
lods
aas
mov
adc
or
dec
mov
cmc
pushf
push
movb
call
cmp
inc
jp
push
cmp
add
das
leave
loope
jo
xchg
jmp
lea
adc
pop
mov
mov
mov
wbinvd
mov
xchg
mov
add
fdivl
dec
aad
cmp
or
mov
ss
cmp
xchg
enter
std
adc
lcall
mov
xchg
pop
cltd
or
mov
dec
or
dec
add
or
mov
pop
inc
movlhps
lock
pushf
mov
out
or
rclb
cwtl
push
push
mov
push
push
mov
rcr
cmpsb
pop
mov
add
dec
shrb
iret
sbb
jl
jle
and
inc
mov
pop
test
push
sbb
cmpsb
aam
dec
mov
push
subl
push
push
push
outsl
push
jno
or
imul
mov
in
mov
jg
mov
pop
fisttps
out
and
adcl
mov
inc
fs
roll
cmp
or
add
mov
sbb
adc
push
mov
sub
roll
or
jmp
mov
and
std
imul
jne
lret
jle
add
clc
add
in
jmp
repz
fwait
outsb
add
sub
jne
or
add
pop
add
push
push
repz
add
or
dec
int3
and
pop
or
or
push
sbb
imul
xor
xchg
inc
es
or
call
cmp
mov
and
je
inc
lahf
adc
jg
push
adc
push
inc
xchg
popa
mov
add
js
cmp
jb
inc
stos
add
nop
out
adc
out
sub
add
xchg
adcb
ret
cmp
or
inc
xor
inc
add
dec
mov
cmp
cmp
ret
mov
add
dec
pop
add
push
dec
daa
add
jmp
jae
push
push
enter
push
adc
mov
jb
jecxz
or
shll
scas
add
aad
pop
or
addr16
sub
xor
test
sbb
sub
flds
xor
mov
pop
and
jmp
push
mov
pop
movsb
push
into
xor
lcall
test
sbb
clc
xchg
mov
adc
ret
jp
xchg
or
and
pusha
fcmovnb
pop
in
cmp
push
fbstp
jo
fmuls
push
aam
xchg
lret
jge
mov
jl
aad
inc
push
inc
sub
inc
shr
mov
cwtl
sbb
loopne
sub
pop
push
ret
movsb
int
ret
lock
xor
push
jnp
jmp
pop
fcmovnb
test
adcl
mov
jo
pop
nop
int3
pop
sub
add
push
rorl
out
or
or
jle
faddl
cmp
xor
ret
mov
mov
push
mov
add
inc
orb
mov
pop
push
out
or
addr16
xchg
lock
hlt
sbb
sarb
addl
aas
hlt
xchg
xor
mov
mov
movsl
mov
adc
or
mov
jl
sti
sub
lea
rcrb
lea
push
jle
cli
cmp
inc
cmp
jl
cmc
int3
xor
mov
dec
inc
aas
fmuls
push
mov
push
add
or
cmp
or
out
negb
push
or
jge
jl
je
cmp
pop
adc
pop
cli
jnp
leave
jle
sub
push
mov
push
cld
mov
xchg
push
add
stos
jecxz
xchg
mov
adc
and
sbb
or
and
add
add
or
adc
pop
add
shll
mov
jge
mulb
cmpxchg
stc
sub
jne
add
jle
cmpl
rorb
xorl
add
test
jge
daa
sbbb
loopne
jb
loope
xchg
add
add
int
add
add
in
ret
aas
cmp
cmp
jne
pushf
xchg
out
aad
mov
xchg
shlb
mov
mov
push
push
in
enter
inc
jns
iret
push
xchg
repnz
sahf
sbb
mov
int3
fwait
xor
and
test
iret
or
mov
pop
dec
sti
mov
or
test
andl
nop
inc
and
mov
cmp
adc
repz
and
sub
or
insl
test
fistps
and
mov
jbe
fadds
cmp
or
jbe
cmp
cld
inc
in
add
sub
fs
dec
adc
push
pusha
or
dec
adc
pop
sbb
or
add
nop
mov
xlat
cmp
pop
fcoml
test
push
push
push
subb
stos
and
jmp
lahf
or
push
add
and
dec
xor
or
add
and
add
les
scas
lods
pop
inc
dec
add
sbb
dec
loopne
lds
lahf
ret
mov
cltd
add
cmp
sub
cmp
jbe
xchg
or
sub
les
adc
mov
jbe
ret
mov
mov
jecxz
xchg
lods
push
add
popa
outsb
sub
adc
bound
xor
mov
push
ljmp
inc
data16
xor
test
add
or
fwait
std
pop
ret
jnp
pop
notl
dec
mov
or
les
addr16
call
es
faddl
cmp
mov
push
xchg
fnsave
push
or
pusha
add
daa
push
je
jno
push
sti
and
cmp
out
rcrl
adc
out
adc
mov
and
xchg
or
sbb
sti
rcl
xchg
adc
xrelease
pop
loopne
or
xor
lock
lods
lea
mov
push
cmp
std
push
pop
sbb
les
cmp
jae
or
cwtl
lret
push
add
ss
lds
xchg
or
fs
into
cmpsb
jo
int3
popa
and
or
sub
push
out
arpl
hlt
mov
clc
cmp
cmpsl
add
clc
mov
lods
dec
testl
xor
addl
cwtl
dec
jnp
rcll
add
pushf
jo
dec
adc
aam
add
cmp
add
sbb
addl
xchg
adc
add
sub
mov
and
add
cmp
mov
inc
pop
cmc
aad
mov
daa
movsb
xchg
or
fistpll
and
lods
fdivs
stos
xor
xlat
test
push
aad
sub
push
push
lea
hlt
imul
lea
je
outsb
push
fcomps
pop
sbb
fs
dec
or
mov
mov
fstp
pop
and
arpl
sub
out
adc
push
and
and
test
lds
jp
hlt
or
dec
ret
and
or
dec
sbb
cmpsl
push
mov
inc
cmpl
inc
push
xchg
sub
sbb
sahf
mov
out
mov
add
mov
push
push
pop
push
mov
push
pop
xor
inc
bound
adc
cmp
fmull
or
xor
cwtl
sbb
sbb
daa
stos
jg
sub
inc
pop
mov
loopne
dec
push
push
dec
adc
inc
inc
scas
mov
cmp
dec
sbb
mov
xchg
ret
jl
stos
mov
or
pop
leave
lods
or
pushl
enter
addb
push
adcb
gs
shlb
popa
and
fldl
sbb
jns
jns
jne
xor
adc
push
cmpsb
mov
mov
push
and
and
mov
arpl
outsb
xchg
andl
loope
repz
jnp
inc
mov
test
sbb
movl
add
jle
fisttpll
xchg
jl
xchg
incl
jbe
push
xchg
jne
cmpl
pop
addb
mov
dec
call
subb
jns
cltd
sub
mov
fs
je
xorb
dec
sbb
add
adcl
xchg
sbb
test
aam
rclb
mov
mov
cmovno
and
fistps
popf
push
imul
or
push
in
lds
cmp
out
pop
lock
inc
sub
dec
xchg
cmpb
pusha
push
inc
pop
enter
mov
fiaddl
cmp
push
fs
add
jbe
fnsave
push
xor
sbb
lahf
add
int3
xchg
sbb
cmpb
jnp
push
and
adc
dec
mov
push
jg
adc
dec
add
adc
add
or
jmp
std
push
inc
sbb
je
cwtl
pop
cmpl
inc
adc
inc
loop
les
adc
popl
inc
sbb
pop
xchg
sbb
insb
lds
sbb
cli
or
sbb
outsl
pop
and
mov
xchg
retw
in
inc
call
mov
push
adc
addb
test
imul
inc
enter
dec
test
mov
or
dec
mov
sbb
cmp
icebp
add
inc
iret
pop
mov
or
xlat
jae
ret
loope
mov
and
leave
inc
mov
lret
ljmp
dec
ret
out
dec
add
mov
adc
dec
push
cmp
mov
and
dec
hlt
stc
and
loopne
lea
or
pop
scas
in
cmp
jno
push
lret
cmpsb
push
call
cmp
push
jne
cmpl
jbe
push
and
out
int3
xchg
mov
jmp
push
push
shl
add
cmp
pusha
test
push
xchg
out
xor
movsb
fnstsw
xchg
outsb
inc
fnstsw
xorl
rorl
sbb
jmp
sub
mov
add
orb
mov
shll
inc
dec
fcomps
jbe
inc
fists
mov
test
out
add
mov
sbb
adc
inc
mov
mov
sbb
jge
push
mov
mov
push
pop
push
dec
pop
ret
ret
in
fadds
sbb
push
adc
nop
xchg
mov
sahf
data16
js
adc
sbb
dec
arpl
jae
scas
mov
inc
pop
push
jge
sub
aam
loopne
mov
mov
sub
xor
add
adc
push
idiv
rorl
adc
loope
lret
push
push
add
add
adc
push
mov
push
mov
mov
loope
mov
nop
decl
mov
fbstp
leave
fstps
fsubl
test
add
je
sbb
and
shll
adc
or
dec
sub
sbb
es
push
fisubl
and
cwtl
cltd
mov
test
inc
mov
loopne
int3
mov
dec
shlb
mov
sbb
push
mov
lret
cmp
add
and
nop
add
or
outsl
inc
pusha
mov
add
adcl
mov
push
sbb
adc
int3
jle
add
imul
lods
add
cmpsl
sbb
adc
push
lds
roll
inc
mov
xor
cmp
lea
fdivl
sub
dec
insb
or
mov
dec
mov
push
dec
loopne
add
add
pop
sbb
ljmp
shlb
cltd
add
mov
lock
rorb
mov
or
cltd
in
sub
ds
notl
pop
mov
lea
inc
or
fisttpll
jns
adc
getsec
xchg
mov
inc
or
or
cmp
sub
cmp
and
xor
lea
xchg
aam
pop
mov
push
push
or
stos
dec
xor
sbb
push
les
xorl
cwtl
or
adc
xor
pop
pusha
pusha
je
cmp
je
nop
adc
aam
ja
out
cmp
aas
repz
loop
pop
adc
movswl
add
mov
in
mov
push
sahf
jae
add
shl
dec
jl
xor
mov
push
add
xor
dec
push
loope
push
fisubrl
loopne
clc
xchg
push
enter
push
push
pop
aam
jl
sub
test
mov
cmp
aaa
add
stos
pop
jnp
clc
push
push
mov
jnp
adc
xchg
xchg
leave
lret
xchg
iret
push
sahf
push
adc
js
pusha
shr
jno
jle
and
cmp
sahf
push
pop
jg
dec
pop
pop
rorb
hlt
xor
mov
mov
aam
scas
sub
inc
std
xchg
addl
test
pushf
or
jle
lock
lret
sbb
mov
aad
shlb
les
adc
push
jne
xchg
mov
mov
inc
lret
gs
xor
sub
sbb
mov
test
push
mov
lret
inc
push
mov
dec
sub
adc
xchg
fwait
cmpl
cmova
jle
pusha
stc
push
sub
xor
outsl
shrl
xchg
ljmp
push
xor
scas
ds
sarl
mov
int3
adc
add
mov
jns
popf
mov
adc
adc
cmp
and
mov
push
pop
add
fdivl
frstor
test
incl
dec
jae
test
test
xor
mov
or
imul
add
sub
jne
add
lock
and
add
add
mov
mov
inc
mov
pushf
sbb
pop
xlat
outsl
movsb
bnd
inc
or
test
lret
test
mov
push
push
bound
jne
cltd
ja
mov
jno
add
cltd
test
push
out
push
mov
jp
push
add
add
ss
jns
fwait
cmp
push
imul
aas
pop
jne
daa
push
pop
aas
add
jnp
in
dec
cs
xchg
test
add
sbb
push
nop
sti
pop
adc
js
scas
pop
cmp
push
adc
sbb
ret
dec
sbb
ret
loope
sbb
mov
enter
jg
push
xchg
jo
pushf
dec
std
dec
jge
pop
push
push
xchg
add
repz
insb
ret
popa
andl
jecxz
dec
stos
dec
rcll
sbb
adc
bound
inc
xor
insb
cmp
outsb
stos
movsl
pop
dec
jbe
sarl
ss
aaa
aad
and
and
push
xor
and
data16
sti
loopne
inc
adc
cmp
push
add
add
xchg
dec
fs
push
or
xchg
cmp
jl
xchg
xchg
cld
and
and
pusha
test
push
popa
loop
cmp
shlb
pop
sub
sti
jno
arpl
sbb
fiadds
or
adc
cld
dec
push
daa
cmp
test
inc
sti
push
rol
and
push
inc
xchg
mov
dec
push
cmp
jns
cmp
jne
mov
jo
dec
pop
inc
add
inc
dec
mov
or
or
and
in
mov
sbbb
sti
pop
test
sbb
dec
cltd
cmp
cltd
pop
test
mov
das
ret
loop
dec
ljmp
or
pop
jmp
add
xchg
mov
mov
dec
xor
jne
mov
sub
lea
push
mov
inc
dec
rorb
xor
je
movsb
test
lock
imul
jne
and
rolb
dec
inc
pop
push
jo
sbb
pop
loop
pop
xor
jae
and
mov
add
xchg
icebp
or
scas
push
push
push
pop
inc
sbb
repz
push
jnp
xchg
pop
xchg
jle
cmpl
arpl
pop
lods
mov
jg
or
add
in
adc
pop
xchg
jg
push
cmp
mov
push
insb
test
cwtl
cwtl
inc
shlb
jne
sub
xchg
push
pop
jne
and
shlb
add
xchg
pusha
mov
lret
mov
or
xlat
mov
shrl
mov
mov
loopne
fcoml
pushf
pusha
movsl
cmpb
jmp
jg
adc
cld
lea
mov
mov
loopne
pop
and
lods
jg
mov
ja
push
or
jbe
mov
push
xchg
lret
cmp
jne
adc
hlt
loop
sub
or
mov
and
adc
stc
sub
xchg
xor
enter
or
jmp
mov
das
icebp
add
jmp
or
sahf
jne
xor
mov
jl
mov
cmp
push
mov
test
xchg
es
sbb
add
das
push
push
xor
ja
adc
dec
inc
sarb
xor
das
sub
jle
gs
cwtl
into
add
arpl
ret
add
cs
mov
sub
shlb
and
cmp
sub
mov
mov
sar
and
sbb
xor
push
sub
adc
sbbb
orb
sbb
adc
push
push
mov
jb
dec
int3
imul
adc
ds
jne
mov
in
sub
xor
sbb
sbb
mov
add
in
jno
movsl
mov
push
mov
adc
out
das
xchg
push
mov
sahf
xchg
push
ficoms
rcll
pop
jns
in
or
test
add
js
lret
cmp
sub
lods
push
push
xchg
or
adc
add
pop
jle
shlb
push
out
add
les
out
in
fdivrs
adc
je
loope
or
push
movsb
inc
adc
push
jb
adc
add
xchg
movsl
js
adc
lret
sub
adc
mov
call
jle
ja
xchg
inc
out
inc
sub
ret
enter
push
or
roll
in
ja
mov
test
jno
popf
and
mov
jl
sbb
testb
ret
shl
add
inc
icebp
cmovae
rcrb
loope
push
aas
add
call
les
cmpsl
hlt
add
or
insb
dec
nop
bound
and
pop
add
cmp
push
lods
or
jmp
rcll
adc
mov
outsl
jb
sarl
mov
mov
sub
dec
mov
push
ret
add
sub
add
jp
rclb
pushf
lcall
shll
inc
lcall
lods
add
jne
pushf
mov
add
adc
add
sbb
mov
les
jecxz
push
cmpsb
add
or
addb
mov
adc
hlt
mov
xchg
push
les
fcoms
pop
addb
or
inc
and
and
cmpsb
jl
loope
dec
ret
adc
cmpsb
pop
in
cli
jmp
mov
cmp
push
arpl
fdiv
push
lret
mov
aaa
add
out
cmova
mov
dec
mul
in
test
push
loop
dec
movb
xor
adcb
movsb
cmp
xchg
sub
fstps
in
in
add
shll
fadd
nop
ret
mov
cmp
sub
lret
add
mov
mov
sbb
or
fwait
pop
add
mov
test
or
sarl
cmpsb
inc
pop
lock
inc
out
pop
pop
xlat
daa
lods
jno
cmp
popa
fstpl
aam
enter
push
push
lock
push
push
fisttpll
and
movsl
or
gs
jecxz
out
sbb
inc
popa
nop
and
adc
inc
ret
or
stos
mov
jo
xor
cli
test
pop
dec
enter
pop
test
inc
vpmadcsswd
fdivr
call
test
push
jmp
mov
cmpsb
je
inc
jle
add
push
lret
cltd
push
jmp
popa
shll
rorl
adc
inc
or
insb
testl
cmp
push
xchg
inc
in
lcall
rolb
insb
ja
push
and
or
and
mov
jl
adcl
or
aaa
fmull
movsb
push
jecxz
adc
inc
xorb
mov
fstl
insb
adc
cmp
test
loop
ret
mov
cwtl
adc
das
test
sti
pop
mov
dec
sbb
lea
iret
push
dec
jo
or
popf
call
mov
push
sbb
adc
loopne
adc
sbb
lret
popa
shrl
xor
cmp
add
lret
cmc
mov
fld
inc
push
push
fsts
inc
cmp
jb
cmp
ja
ljmp
sbb
inc
aaa
push
push
ret
xor
call
dec
dec
je
add
push
mov
je
mov
push
rorb
cwtl
stos
push
pop
or
roll
inc
adc
ret
hlt
rep
xchg
mov
mov
jo
add
je
mov
mov
mov
mov
cmp
je
push
cli
outsl
mov
mov
cmp
addr16
je
cmp
jne
cli
xorl
sbb
mov
sahf
neg
push
repnz
pop
dec
xor
push
in
pop
add
testb
je
testl
je
sbb
and
and
cld
cmp
jbe
jg
leave
lods
fldl
fidivl
out
add
or
cmp
mov
iret
and
push
je
xor
sbb
xor
jmp
cltd
push
rol
cmp
fmull
popa
push
fsts
je
in
and
ja
mov
mov
jb
into
pushf
xor
inc
leave
mov
sbb
insl
sub
xorb
lcall
fstpt
push
jne
movsb
cmp
jne
outsb
push
fldenv
arpl
sbbb
pop
ss
adc
je
fadd
push
dec
push
sbb
or
ja
jbe
enter
aaa
test
inc
out
jge
add
pop
aad
inc
add
cld
push
cwtl
das
loop
pop
sbb
mov
jns
dec
ljmp
arpl
add
mov
addr16
aaa
mov
fmuls
mov
data16
pop
cmpsl
sti
sbb
xor
pop
inc
shrb
addr16
inc
jecxz
add
jmp
pushf
aas
insb
sti
and
cmpsb
lods
sbb
or
js
loopne
or
fs
jne
xor
lock
dec
push
mov
or
sub
aas
push
push
mov
jmp
dec
shlb
clc
or
or
lret
cmp
sar
dec
inc
cmp
inc
fadds
push
push
or
int3
call
or
and
test
fmull
cmp
cmpsb
xor
and
fwait
fwait
fwait
sub
jle
sub
sub
and
pop
or
dec
add
pop
jle
pusha
add
repnz
test
ds
loopne
pop
jbe
push
hlt
pop
arpl
repz
jne
add
je,pn
test
jne
pop
mov
mov
cld
jb
rolb
push
xor
cli
pop
inc
and
jae
movb
inc
repnz
add
adc
shlb
sbb
cwtl
subl
push
ret
mov
xchg
push
shll
jmp
adc
xor
loopne
add
daa
sbb
hlt
jo
push
dec
inc
push
lcall
pop
sbb
ds
loope
mov
push
and
dec
std
mov
add
out
push
lcall
vpmuludq
out
insb
mov
inc
js
lea
jecxz
and
xor
add
test
mov
insl
mov
subb
cwtl
dec
imul
xchg
mov
push
sahf
insb
insl
jg,pn
movsb
push
jg
mov
inc
cmp
and
push
aaa
pop
pop
mov
mov
int
xor
daa
mov
int
into
inc
rcrb
fcompp
in
cmp
mov
cmp
aam
lret
push
and
les
popf
inc
xchg
inc
and
mov
jns
pop
lea
rolb
and
cmpb
add
lret
mov
cmp
lds
ret
jecxz
push
andl
movsl
loop
ret
test
pop
cltd
aaa
jp
loopne
xchg
inc
mov
arpl
inc
push
pushl
jo
push
ss
mov
ja
je
roll
push
pop
push
movl
xchg
mov
xor
clc
shrb
lahf
jbe
sbb
pop
int
and
cmpsb
hlt
cld
clc
outsb
push
inc
inc
push
mov
jo
push
int3
add
loop
xchg
outsl
cmpb
sub
jno
test
lret
popf
int
adc
clc
outsb
cmpl
inc
push
aaa
outsb
je
pushl
std
pusha
lds
rcrb
add
sti
mov
call
push
pop
push
mov
push
je
add
imul
das
pop
scas
push
sbb
push
dec
lea
mov
jb
pop
sub
enter
mov
inc
add
pop
xor
and
jbe
sbb
mov
gs
xor
sti
inc
inc
fwait
cmp
inc
fcmovb
lock
pop
pop
faddl
xchg
push
nop
push
out
or
lret
cmp
popl
int
mov
fisubl
xchg
stos
pop
jmp
add
clc
cmp
je
xor
or
test
dec
push
inc
push
shlb
xor
push
fs
add
dec
adc
gs
sub
push
and
dec
push
inc
subl
add
dec
pusha
xchg
mov
or
mov
icebp
in
clc
mov
and
cmp
push
add
jl
add
pusha
add
add
push
sbb
inc
mov
adc
mov
xchg
or
add
sahf
mov
mov
push
aaa
hlt
jne
orl
add
push
add
add
pop
pop
sub
dec
jo
clc
push
fiadds
daa
ss
mov
subl
jg
or
add
orl
pusha
sti
pusha
jb
rorb
inc
mov
scas
and
push
adcl
aad
inc
imul
mov
rcl
adc
mov
push
push
mov
gs
or
and
inc
push
ljmp
jg
mov
rclb
adc
cmp
lds
add
inc
push
push
popf
test
in
pop
xchg
addl
jl
and
sbb
pop
cmp
and
nop
iret
and
push
or
fdivs
pop
fstpl
pop
or
and
xchg
cmp
xchg
inc
and
add
cmpsl
and
jo
aas
ret
cmp
in
add
jns
and
cmp
bound
xor
dec
or
and
xchg
int3
sar
push
scas
addb
push
int3
push
iret
push
loopne
arpl
test
add
popa
testl
sbb
ds
cwtl
cmpl
dec
push
dec
jnp
pushf
test
cmp
lret
cwtl
adc
insb
gs
pushf
mov
aad
or
mov
das
movl
ret
js
mov
imul
push
in
andl
aas
insb
pop
dec
imul
sub
fisubrl
add
or
xchg
sbb
cmpl
jmp
bound
and
push
adc
pop
jge
fadds
mov
sub
jne
push
or
jne
lock
pop
xor
inc
mov
mov
out
jecxz
mov
push
add
fdivr
test
dec
cmp
mov
push
adc
ficoml
push
repnz
out
push
adc
mov
xchg
jne
or
mov
cmpsl
dec
xchg
mov
xchg
fcoms
inc
fiaddl
push
je
dec
xlat
push
aas
je
cmp
subl
and
jne
push
imul
jne
stc
adc
sbb
incl
test
mov
in
xor
test
jne
jmp
sbb
sub
sub
sbb
clc
lcall
adc
inc
popa
fsubrp
addr16
jmp
jnp
pop
lea
jo
loope
fldl
add
je
enter
pop
in
sub
mov
push
imul
jno
mov
cmp
fcomi
jmp
pusha
mov
jae
scas
daa
test
add
and
xor
or
lret
xchg
outsb
decl
cltd
xchg
mov
sub
decb
adc
jns
add
cmpl
rolb
pop
xchg
adc
dec
sub
mov
push
pop
cs
lret
pop
pop
fs
push
scas
or
inc
faddl
ja
or
or
or
pop
popa
add
push
sub
and
ret
lahf
les
in
add
cmp
addl
adc
inc
push
dec
adc
ret
loopne
movsl
aas
add
inc
or
and
inc
mov
pop
xchg
add
push
sub
scas
loopne
push
jno
xchg
mov
push
push
push
pop
pop
cs
lret
pop
pop
pop
pusha
pusha
mov
or
and
adc
inc
xchg
add
addl
push
mov
add
stc
push
jg
push
roll
add
sub
cmp
mov
push
sbb
in
dec
push
sub
ss
fistpll
jmp
push
mov
sbb
data16
lcall
adc
es
sbb
sbb
push
lea
push
lahf
ror
pop
adc
push
add
xor
les
sub
inc
cli
arpl
inc
sar
jbe
or
add
daa
mov
jp
dec
adc
jns
mov
jp
iret
daa
scas
sbb
ljmp
fidivrs
xor
js
sbb
mov
add
aas
push
cli
jp
push
pop
jmp
shr
scas
movb
sub
enter
or
add
or
sti
and
add
and
or
and
nop
nop
cmp
pop
divl
addr16
sbb
fstpt
push
cwtl
xchg
cmc
lock
jle
mov
xor
sti
es
sti
out
sub
cmpl
in
iret
push
xor
inc
jae
sub
js
rep
out
xlat
popa
or
filds
or
inc
pusha
cmp
dec
push
addr16
add
in
and
push
mov
ja
xor
dec
add
dec
add
pop
js
cmp
adc
in
lcall
fs
add
xor
add
sbb
mov
adc
adc
ret
jae
nop
sub
cltd
sbb
and
pop
sbb
fsubp
dec
ret
mov
inc
pushf
add
pop
mov
and
jno
mov
adc
adc
std
mov
scas
adc
outsb
cmovs
iret
sbb
jbe
push
adc
lret
mov
aam
jae
fs
rorb
inc
push
cmp
push
add
clc
ficomps
mov
mov
cmp
lock
shlb
or
or
push
jle
or
jbe
jo
mov
adc
sbb
sbb
sbb
ret
add
in
orb
daa
cs
sub
stc
xor
aas
js
bound
sub
or
incl
addl
cmp
pop
dec
test
dec
push
adc
aam
pop
and
sub
mov
jnp
add
xor
hlt
sub
and
mov
xor
jecxz
lret
cltd
mov
je
cmc
adc
call
mov
dec
cmpb
lea
xchg
or
jns
add
xchg
mov
adc
fwait
test
jge
jb
loopne
or
xor
inc
cmp
out
push
xchg
rorl
es
lock
hlt
and
arpl
or
add
mov
scas
push
clc
cmp
rcl
and
outsb
push
out
xor
adc
add
pop
inc
add
mov
data16
and
mov
push
shlb
nop
push
cld
jmp
mov
and
movsbl
es
xor
roll
push
push
popa
test
xlat
lea
add
or
ss
cmpsl
cmp
and
xchg
js
adc
ss
mov
and
adc
test
and
push
in
add
adc
je
or
addl
out
pushf
jb
jbe
insb
mov
scas
pop
lods
xor
xchg
push
cmpb
jns
add
test
mov
fcompl
mov
fsubl
add
loopne
and
daa
adc
test
addr16
and
int3
sub
adc
orb
pushf
dec
adc
pop
sbb
push
xchg
pop
push
test
pusha
es
clc
mov
adc
inc
xor
bound
adc
and
ljmp
cwtl
test
jmp
sub
mov
imul
push
xlat
fcmovb
jne
insl
inc
or
add
dec
and
add
sub
fsubl
adc
xor
sub
mov
mov
and
add
jo
mov
mov
and
clc
and
push
mov
and
pop
push
dec
std
cmp
push
adc
test
xor
xor
ret
das
or
dec
jne
jns
cmp
int
add
add
xchg
ret
sub
add
jg
jbe
push
clc
jge
lea
in
shr
mov
leave
push
xchg
cmp
and
dec
popf
mov
imul
int3
movsl
sbb
lret
rcrb
mov
in
jg
dec
fmuls
or
or
and
das
or
jge
les
xor
sub
cmp
aam
and
add
sbb
cmpsb
jb
and
lods
sub
cs
fmulp
shll
mov
pop
and
test
aaa
xchg
call
inc
mov
xchg
inc
cmp
jl
jmp
sbb
mov
inc
mov
jg
or
clc
sbb
add
add
ljmp
add
aas
mov
xchg
cmp
test
adc
clc
addl
mov
xor
xchg
sbb
pop
cmp
pop
mov
in
xchg
pop
insb
xor
lea
mov
mov
dec
dec
or
jge
std
sbb
and
push
pop
mov
sbb
xor
aam
adc
sub
add
cmp
ret
sub
jmp
insb
adc
inc
loopne
ds
push
xor
or
jns
and
inc
je,pt
shll
push
xor
add
insb
cltd
add
or
or
jp
sub
sti
xor
add
bound
add
dec
jmp
daa
nop
jbe
je
int3
or
aas
ret
pop
pusha
dec
cmpsb
or
dec
je
verw
nopl
hlt
cld
push
rorl
or
hlt
push
fcompl
hlt
mov
mov
out
repz
sbb
xor
lea
adc
es
push
in
daa
or
in
inc
aad
es
mov
loop
mov
xlat
push
jmp
fimuls
sbb
lcall
and
jg
clc
xlat
pop
mov
cmp
je
pop
push
test
ret
or
icebp
and
push
popf
add
ja
or
rcll
divb
jnp
jmp
push
push
xor
or
dec
shlb
dec
cmp
repnz
test
mov
xor
jge
add
jle
jne
test
sub
ror
push
push
mov
cmpsl
adc
mov
mov
cs
xchg
xchg
addl
push
into
push
iret
test
testl
iret
add
jo
push
add
jbe
lods
stc
repz
inc
cmp
lock
mov
andl
xchg
test
lcall
inc
inc
addr16
in
aas
pop
cmpb
pop
iret
mov
mov
jge
xor
mov
mov
call
js
mov
xchg
bound
or
cmp
add
inc
sub
movsl
dec
mov
aam
clc
xchg
jo
ds
push
sub
dec
push
xchg
in
or
mov
xor
scas
sub
loope
je
ja
push
ret
jno
sub
dec
mov
inc
out
mov
xor
or
push
cmpsl
mov
stos
test
aam
cmpsb
add
loope
shrb
sub
jbe
adcl
add
and
stos
add
push
enter
xchg
xlat
lock
xchg
sub
inc
hlt
push
xchg
xor
leave
fdivl
or
adcb
enter
iret
or
adcl
rclb
pop
jne
mov
movsl
or
test
push
sahf
out
pusha
popa
adc
pop
test
lock
sahf
bswap
incl
adc
cltd
and
and
xlat
int
out
push
mov
push
pop
sbb
or
pop
inc
sbb
ss
adc
test
mov
mov
scas
xor
sub
rcrb
lock
or
add
fimull
mov
add
push
adc
enter
mov
sbb
xor
add
sub
and
or
lock
aad
xchg
and
add
popf
or
daa
hlt
cmp
repz
inc
xchg
rclb
fisubrl
cmp
push
cmp
xor
imull
add
jo
test
add
mov
and
dec
outsb
jnp
dec
dec
mov
jo
xchg
sbb
or
or
mov
sldt
mov
shrl
mov
add
roll
clc
mov
aam
popf
mov
sub
test
mov
or
loope
mov
test
arpl
test
push
cmp
iret
pop
add
push
movsb
push
outsb
xchg
push
add
loop
jns
pop
imul
or
aad
cmp
jb
mov
mov
icebp
stos
or
push
les
dec
sub
addl
push
daa
dec
jnp
jnp
adc
orb
mov
popf
ds
sbb
movl
aam
xchg
or
sub
add
movl
and
adc
lock
dec
xor
dec
push
daa
pop
lahf
insb
and
jns
jne
push
stos
popa
dec
dec
dec
fs
sub
mov
ret
push
call
popf
fadds
add
mov
testl
popa
stos
popf
movsl
xor
cs
and
inc
mov
xor
mov
mov
push
inc
mov
aam
ljmp
movsb
or
adc
repz
and
and
sub
cmp
inc
or
mov
out
dec
pop
pop
jmp
lcall
ret
push
mov
inc
cmp
push
xchg
cltd
and
shlb
sub
sub
xor
add
adc
aaa
adc
jo
cmp
std
dec
adc
inc
mov
stos
imul
mov
imul
sbb
or
mov
jge
imul
aaa
sarb
mov
pop
movb
cmp
jo
cmp
jecxz
mov
push
clc
inc
loope
in
shll
cmp
stos
sbb
and
and
lret
mov
cmp
mov
dec
cmpl
jl
sti
pop
sub
push
dec
lcall
xor
loopne
aad
sbb
loope
pusha
cmp
sbbl
push
cmp
jmp
clc
fistl
push
repnz
mov
and
inc
cmp
mov
pop
push
dec
imull
aaa
sbb
pop
mov
cmp
inc
ret
inc
shll
lea
fwait
cmpl
add
sbb
mov
mov
pop
sbb
and
dec
and
cmpl
jl
les
cmp
and
add
dec
test
movsb
adc
pop
ss
roll
push
pushf
push
clc
lds
push
mov
inc
lods
add
orl
pop
and
cmpsb
andb
jno
hlt
test
push
nop
cmp
sub
sub
fs
ja
sbb
jmp
sbb
and
or
and
pop
add
ljmp
cmp
cmp
mov
subb
jmp
clc
ss
je
cmp
xchg
clc
je
mov
and
and
or
enter
jge
bound
inc
rcrl
push
sub
inc
lods
adc
cmp
ret
ret
fildll
fcoms
data16
xor
sbb
xsaveopt
adc
int
loop
data16
pop
add
dec
mov
mov
fnstsw
nop
fucomip
popf
ffreep
xchg
pop
or
mov
sahf
pop
jbe,pn
and
cmpb
push
ret
push
mov
mov
sti
xchg
lods
or
and
je
mov
mov
stos
adc
push
inc
leave
mov
outsb
mov
cmp
orl
mov
sbb
jne
cmp
push
imul
adc
std
jo
test
pop
pop
pushf
jbe
and
popa
xchg
popa
xchg
mov
test
aas
test
jne
jecxz
mov
enter
fs
stc
stos
xchg
adc
lock
test
xor
mov
dec
xchg
and
xlat
xchg
mov
mov
rcll
inc
cld
incl
cmp
jae
popa
jbe
xor
js
mov
cmp
iret
jmp
mov
add
push
out
jo
push
adc
test
mov
sbb
fstps
xchg
add
movsl
mov
adc
inc
cmp
scas
mov
mov
mov
cltd
cltd
adc
lods
push
or
and
xchg
xor
inc
push
cmc
loopne
cmpl
inc
sbb
pop
pusha
xchg
and
jle
adc
pushf
mov
test
movb
fs
sbbb
jl
bound
xchg
and
sbb
mov
jp
rcrb
add
or
sub
mov
xchg
jne
movsl
lea
inc
jmp
cmp
out
cbtw
ret
mov
loop
test
or
lds
or
imul
mov
pop
insl
xor
sar
leave
sub
inc
loope
outsb
cmp
sarb
jbe
sub
add
in
add
movsb
push
pop
bound
mov
or
add
ret
ljmp
cmpl
inc
push
shlb
or
lods
insb
pop
cltd
test
inc
push
mov
mov
inc
push
dec
push
sbb
xchg
cwtl
dec
mov
mov
mov
sub
cmpsb
push
sbb
dec
inc
and
jmp
adc
mov
fs
xchg
popa
dec
xlat
jp
hlt
jne
test
shl
sub
add
or
lock
rorb
pop
clc
ja
xor
fiaddl
rol
adc
push
fdivl
and
ret
lahf
or
data16
out
sbb
dec
jae
mov
xchg
jmp
mov
inc
cmp
cmp
push
or
out
ret
lret
je
push
sub
push
mov
ret
rclb
xchg
sub
pop
adc
and
inc
popa
jecxz
test
inc
push
enter
arpl
adc
inc
cmp
movsb
sbb
lret
dec
push
pop
jle
mov
lea
inc
jbe
cmp
jbe
or
mov
in
mov
add
jle
add
sub
push
sbb
aas
insl
pop
js
dec
lcall
xor
push
add
and
and
xor
mov
mov
or
lahf
test
flds
inc
dec
cmp
rolb
adc
and
loope
or
inc
xchg
push
test
inc
clc
gs
pop
add
sub
popf
lret
pusha
push
pushl
inc
clc
or
dec
shll
or
add
testb
fs
push
jp
cmp
pop
fsts
loopne
clc
sub
lock
add
xor
mov
pop
pop
dec
mov
sub
dec
cwtl
add
add
dec
addb
adcl
jge
jl
add
cld
adc
or
xor
xlat
mov
push
inc
add
test
pop
mov
popf
add
push
sub
push
push
into
sahf
dec
pop
cmp
scas
mov
push
xchg
outsl
mov
hlt
add
mov
push
mov
lds
mov
aas
sti
jmp
push
cmc
int3
out
adc
loopw
mov
fcmovnu
ret
cmp
js
insl
mov
xor
pop
jnp
push
mov
test
sub
imul
pop
sub
cmp
rorl
xor
sbb
push
mov
movsb
sbb
je
xchg
lret
push
cmp
insl
or
bound
lcall
pop
mov
xor
into
imul
or
test
or
xchg
sbb
ds
jo
jbe
cmp
pop
lret
les
rorb
imul
mov
mov
fstpl
push
cmovae
xor
lock
das
jmp
cmp
inc
std
cmpsb
and
sub
mov
cwtl
adc
mov
and
enter
pop
imul
xor
adc
mov
movsb
add
movb
sub
shll
in
sbb
data16
dec
adc
xchg
dec
cmp
into
xchg
pushf
push
leave
pushf
out
jmp
lret
push
insl
push
xchg
add
out
mov
sbb
mov
pusha
daa
cmp
sbb
outsb
nop
xor
addr16
sub
xor
cmp
push
add
pop
mov
cmp
jg
popf
movsl
jae
jb
fcmovnu
fs
jmp
pushf
lcall
or
pop
adc
push
test
add
jo
ret
push
xor
dec
jnp
fsubrs
mov
leave
syscall
pop
add
xor
dec
pop
mov
fstpl
add
insb
aam
mov
aad
pop
push
mov
inc
or
push
movsb
and
dec
in
pop
pop
add
sbb
fnsave
testb
pop
mov
rorb
jne
mov
addb
movsb
mov
cmp
add
mov
push
shlb
push
mov
lahf
jmp
test
mov
jp
push
or
mov
sub
mov
inc
fs
inc
mov
or
xor
dec
pop
pop
shlb
shr
mov
pop
mov
mov
sahf
jg
cmp
cmp
cmp
cs
sarl
clc
inc
sbb
sti
jmp
insb
pop
mov
sahf
sbb
fadds
push
je
or
inc
xchg
mov
inc
adc
mov
fucomp
jmp
call
js
push
out
push
jnp
add
cmpb
ret
ret
jne
loop
dec
js
into
loope
jo
cmovo
ret
pop
lock
jo
or
add
dec
add
add
push
in
or
pop
add
pop
push
lock
and
or
jge
mov
jno
sub
inc
jecxz
clc
add
pop
adc
cmp
out
imul
pusha
into
sub
sbb
pusha
mov
ljmp
incb
add
inc
or
mov
scas
sub
mov
mov
cmp
cmp
mov
jg
xchg
mov
out
rorl
jmp
adc
movsb
push
lock
sub
jecxz
push
frstor
adc
lock
or
xor
xchg
pop
cmp
adc
sbb
ret
pop
dec
pop
aam
push
mov
adc
into
adc
xchg
repz
add
cmp
jmp
dec
adc
roll
push
push
mov
cmpl
or
mov
sbb
add
or
clc
mov
fsubrl
pop
jae
xchg
mov
dec
cmp
or
and
pop
rorl
into
inc
js
push
or
int
jmp
and
lods
mov
mov
pextrw
and
movsb
push
mov
sbb
stc
jl
ljmp
sub
mov
syscall
bound
sbb
scas
dec
sarl
scas
push
lahf
add
and
arpl
call
and
adc
andl
and
les
or
ret
sbb
adc
mov
fs
inc
mov
iret
xchg
out
pop
roll
sub
bsr
push
push
pop
pop
lea
xor
sti
dec
mov
mov
adcb
lock
shlb
add
xadd
je
repnz
out
mov
adc
les
pop
push
lods
add
andl
xchg
ret
lea
mov
pusha
xchg
push
cwtl
sti
push
adc
cmp
rol
adc
loopne
mov
mov
mov
call
mov
adc
mov
inc
mov
inc
inc
push
sbb
dec
stos
lea
mov
cmp
mov
mov
imul
xorb
inc
pop
test
rcrb
adc
ljmp
jno
xor
rolb
and
push
add
push
xlat
les
inc
jo
xchg
in
cmp
test
push
cmc
jne
add
adc
cmpsb
stos
xchg
adc
sub
cmp
ret
mov
xor
sub
fadds
push
negl
imul
push
add
pop
add
mov
icebp
or
cmc
rcrl
clc
or
xor
sbb
push
cld
and
bound
aaa
and
or
cld
jl
jmp
lret
test
xchg
lods
outsl
or
xchg
dec
cmp
push
cmpsl
mov
or
insb
fld
sub
mov
cmp
lods
mov
enter
int3
cmpsb
mov
lea
mov
jle
jo
rcrb
test
incl
repz
inc
jae
lea
jmp
cmpl
sub
jo
sub
repz
aam
lods
cmp
lahf
pop
lahf
js
inc
push
mov
addl
mov
mov
jmp
aam
in
xor
add
add
ss
orl
outsb
inc
popa
adc
dec
xchg
movsb
roll
fists
push
scas
dec
jge
add
iret
hlt
enter
add
push
push
sbb
xor
and
sti
pop
popa
or
pop
inc
dec
and
push
pop
xchg
flds
iret
neg
add
mov
cwtl
jb
jmp
or
adc
cwtl
or
jo
xor
fadds
call
sub
push
pop
loop
in
or
add
cmp
sbb
sub
dec
pusha
or
lea
cmp
or
nop
xchg
data16
or
jge
dec
cltd
inc
hlt
xor
mov
iret
add
push
mov
mov
push
sub
sub
xchg
mov
scas
push
popa
and
push
lret
mov
mov
mov
push
je
mov
ud0
mov
sbb
cwtl
wrmsr
lock
sbbb
xlat
xchg
cmp
pop
in
jbe
stc
xchg
addl
cmpsb
imul
mov
daa
sub
mov
push
mov
sub
inc
in
sbb
mov
inc
push
test
std
mov
les
pop
adc
cmp
gs
cli
sbb
mov
aaa
mov
mov
add
pop
pop
push
scas
lea
and
and
imul
xchg
xchg
out
xchg
add
nop
inc
or
inc
add
push
xchg
push
cmp
cmpl
adc
xor
pushf
xor
pushl
push
pop
lea
fs
sub
cwtl
xor
push
loop
jecxz
or
stos
sbb
mov
subb
mov
pop
xor
sub
add
lahf
inc
sbb
inc
push
xchg
push
add
outsb
or
sbb
xor
jnp
cmp
push
adc
lods
push
cmp
add
inc
fsubl
in
mov
push
loopne
jmp
stos
jbe
or
je
test
dec
je
jne
mov
push
test
cmp
dec
or
sub
andl
fimuls
push
stos
mov
or
xchg
xor
repnz
xchg
sbb
hlt
hlt
jns
adc
popa
jb
lds
inc
scas
adc
lods
sub
in
inc
inc
mov
xor
dec
dec
call
addb
pop
inc
pusha
lret
fxtract
jne
push
jo
adc
pop
fistl
cld
roll
loopne
fnstenv
mov
sbb
push
mov
dec
push
repz
inc
jo
push
cwtl
mov
inc
add
scas
out
or
das
inc
push
cmp
loope
push
addr16
inc
cmp
xchg
sbb
mov
testb
pop
inc
lods
or
pop
pusha
push
loope
mov
and
hlt
neg
sbb
and
idivb
shl
jo
movzwl
push
adc
test
les
cmp
lods
and
and
je
test
xchg
fistl
insb
xchg
cmp
aam
jo,pn
jo
repnz
mov
and
lock
mov
fstpt
sbb
cmp
aas
lea
pushf
jp
sbb
fistl
adc
lcall
arpl
cmpl
jne
cmp
jo
in
fdivs
or
jne
fimuls
cmpsl
jb
dec
mov
cmp
inc
clc
or
dec
cmp
fwait
or
adc
gs
sbb
cli
dec
jp
jmp
inc
jl
mov
addr16
jne
cmp
adcl
cmp
sbb
jb
fldt
jmp
ds
adc
push
fistl
das
loopne
push
inc
and
pushf
mov
or
test
pusha
fnstsw
sbb
cmpsb
jno
enter
sub
add
or
iret
and
pusha
loop
mov
xchg
mov
repz
push
sbb
mov
mov
xor
jecxz
cmp
add
mov
imul
mov
sbb
fldenv
mov
sub
or
test
aad
lea
nop
loop
fst
scas
test
pop
and
add
ret
ds
inc
dec
add
out
adc
pop
sbb
push
sbb
add
popw
movsb
pop
hlt
sbb
leave
ret
sbb
pop
or
adc
pusha
lea
sub
and
repnz
aas
rcll
push
push
je
cmp
sbb
popf
inc
xchg
scas
cmpsb
faddl
sbb
pop
xor
lcall
mov
jmp
jle
xchg
add
or
mov
sbb
add
mov
dec
pop
ret
lods
in
cld
jne
sbb
pop
pop
or
and
clc
sub
sub
or
push
and
mov
inc
lock
adc
add
inc
mov
jmp
mov
outsb
xchg
cltd
addb
inc
jge
xchg
mov
pop
mov
mov
cmp
psubd
jbe
addr16
mov
xchg
ds
inc
mov
sub
push
jl
les
sub
pop
imul
cmp
mulb
or
jb
push
jae
movsb
add
xlat
mov
lods
movaps
push
pop
or
add
pop
ret
push
test
jg
add
or
cmp
pop
aaa
add
cmp
push
arpl
push
cmc
pop
js
icebp
mov
sub
scas
ret
pusha
and
lea
add
xchg
fiaddl
cmp
xchg
push
cld
rolb
xchg
jp
mov
sub
out
mov
imul
fwait
je
fimuls
pop
pushf
push
and
xor
sbb
ds
and
negb
jbe
sbb
sbb
add
xchg
sub
testl
jae
data16
adc
pushf
mov
sub
cmp
mov
jle
test
push
inc
pop
mov
sbb
cli
cwtl
or
cmp
xchg
xchg
arpl
packsswb
test
in
loop
mov
je
or
xor
lock
inc
scas
xor
and
int3
sbb
lods
ret
add
pop
rcrb
add
loopne
sbb
je
jle
pop
jl
fistpll
push
cmp
xchg
pop
mov
lock
pushf
xor
adc
and
inc
sub
mov
cmp
add
pop
jb
add
jmp
and
mov
mov
lock
xchg
insl
cmp
scas
loop
or
mov
and
mov
xor
sbb
xor
jnp
jns
aas
or
out
mov
push
sbb
sbb
fsubs
popf
sub
dec
jmp
push
inc
fsubl
push
jle
arpl
fisubs
es
xchg
les
or
ret
loope
inc
gs
or
dec
xchg
mov
cmp
mov
jmp
lea
xchg
imul
pop
fcomps
jl
gs
cli
xchg
test
xchg
popa
jg
fildl
mov
pusha
add
shrl
adc
sarb
ret
jb
stos
adc
mov
xchg
lods
cmp
jb
popf
cmp
mov
xor
fisttps
push
mov
ljmp
fistps
cmp
xor
lea
add
popf
pushf
xor
xchg
add
lds
imulb
in
mov
and
je
dec
das
jo
fs
push
jae
lea
cmp
dec
ja
cmpb
jne
fidivl
inc
mov
testl
lea
cmp
sub
push
add
sbb
pop
inc
scas
negl
loopne
sbb
push
fmulp
pop
push
dec
or
dec
mov
loope
xchg
lea
lret
popf
jle
aam
adc
scas
sahf
adc
pop
dec
push
or
jmp
arpl
mov
add
fmuls
in
sbb
cmpsl
mov
sarl
clc
jg
mov
add
push
dec
add
cmp
mov
sub
mov
je
pop
imul
mov
mov
add
pop
or
jae
adc
jo
and
jmp
testb
sub
rorl
xchg
sbb
filds
and
lods
ficoms
cmp
bound
push
mov
sysret
push
lea
add
in
jle
movsl
sub
lcall
xchg
xchg
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
ds
add
xor
push
adc
pop
dec
add
xchg
xor
in
mov
jo
push
mov
jmp
add
insb
mov
add
add
mov
add
ja
push
out
xor
push
and
inc
cmpl
je
jne
adc
pop
dec
jae
addl
add
in
je
inc
and
data16
shrl
pop
sub
push
add
inc
add
js
aaa
insb
sub
loopne
jmp
push
mov
add
push
cmp
jmp
les
orl
subl
incl
pop
cmp
or
jmp
imul
add
pushl
cmp
pop
mov
sub
pop
add
and
xchg
fwait
or
dec
daa
bnd
mov
fcoms
sbb
icebp
mov
js
dec
ret
push
jae
lods
adcl
push
sub
sbb
and
ret
push
fistpl
sbb
clc
faddp
ja
xchg
dec
pop
ret
pusha
fsts
jg
push
pusha
cmp
enter
cmc
loopne
jge
add
add
mov
cmpb
xor
rcrb
std
fnstenv
inc
jmp
push
cmp
cmp
sub
mov
loopne
ss
mov
add
lret
std
sbb
sub
inc
cltd
mov
push
pop
sbbl
jb
sub
sub
movsb
repnz
xchg
jmp
push
sti
sbb
pop
cmpsl
mov
out
insb
mulb
or
shll
add
add
jb
jnp
cmc
dec
in
sti
sbb
add
mov
jb
push
sub
ja
cmp
aam
scas
lea
nop
jecxz,pn
sbb
pop
xor
test
sbb
lea
movsb
test
add
imul
push
lret
xchg
jae
addr16
sbb
push
icebp
push
pop
xchg
insb
loopne
mov
push
out
jmp
push
inc
outsl
add
loope
popf
inc
xor
cmp
and
jmp
mov
xor
inc
popf
cmp
lret
cmp
loope
cmp
in
cmp
stos
lds
int
mov
or
ljmp
andl
ret
fimull
adc
pop
mov
cmp
sbbl
push
inc
or
add
notb
inc
inc
es
mov
inc
xor
pop
sbb
cmp
add
and
mov
sub
add
pop
xor
xlat
jno
add
pusha
or
and
add
jle
xorb
nop
movsb
cmpsb
imul
imul
sub
out
push
insl
cmp
mov
in
ret
es
inc
mov
xchg
insl
inc
inc
je
add
outsl
rcrl
std
dec
adc
jp
aas
adc
adc
cmp
mov
xchg
xchg
jp
decl
outsb
or
iret
jne
add
sub
movsb
jo
cmp
push
stos
or
xor
sarb
cmp
sbb
shlb
ret
add
or
das
push
adc
pop
sub
adc
jne
mov
adc
pop
in
dec
or
push
push
scas
sbbb
fildl
ret
and
mov
push
pushf
cmp
adc
daa
sub
add
dec
pusha
in
clc
inc
sub
dec
sub
xchg
ret
mov
stos
mov
loopne
cld
push
pusha
pop
inc
dec
ds
pop
pop
leave
jmp
scas
rcl
fcomps
xor
mov
imul
adc
loop
ret
xchg
push
add
shlb
cmp
divb
ret
dec
push
mov
mov
jno
ja
pushl
mov
scas
pop
outsl
xchg
insl
jne
lods
pusha
jo
inc
mov
out
push
pop
ret
push
int3
adcl
or
cmp
hlt
push
mov
adc
rcrb
lea
lahf
adc
test
stc
push
or
rcrl
or
sar
loopne
arpl
scas
or
inc
xor
inc
filds
outsb
fadd
and
xor
inc
mov
insl
push
adc
ss
mov
adc
insb
and
cwtl
flds
loop
dec
test
dec
jne
pushl
sbb
pop
xchg
jle
jae
adc
mov
inc
sahf
jle
outsl
insl
dec
pop
pop
adc
or
mov
dec
xchg
sarb
in
or
push
jb
xchg
movsb
mov
adc
ret
or
test
andb
int3
gs
icebp
sbb
sub
in
nop
push
xchg
mov
insl
cltd
jg
mov
fisttpl
lahf
scas
mov
mov
ret
rolb
test
jns
sub
stos
test
mov
push
xor
dec
cmpsb
xchg
push
dec
xor
xchg
adc
adc
or
jb
xor
insl
lods
addr16
push
popa
or
imul
scas
sbb
ret
dec
xchg
mov
cmpsb
dec
leave
push
cltd
pop
lea
mov
test
leave
mov
adc
add
and
add
inc
sbb
add
add
add
lea
fdivs
and
into
test
rcll
push
sbb
xor
movb
pusha
std
push
inc
xchg
jl
cwtl
std
test
std
push
aam
push
and
in
js
rcll
ret
out
sbb
pop
xchg
jb
cmpl
sbb
leave
xor
mov
adc
je
push
inc
adc
or
and
dec
jo
and
mov
je
mov
or
dec
and
fs
enter
push
sub
test
cwtl
pushf
loope
sub
or
test
enter
aas
mov
push
ds
pop
xor
add
popa
stos
mov
sub
dec
mov
test
sub
iret
mov
and
push
stc
mov
popf
and
pop
shrl
popf
fs
or
mov
int3
push
push
cmc
push
sbb
out
and
cmpb
mov
pop
outsl
xchg
adc
and
inc
movzwl
js
clc
test
je
test
xchg
push
pop
or
or
add
fsts
sub
push
pop
push
mov
push
mov
xchg
adc
and
in
cmpl
push
inc
pusha
test
jo
mov
cmp
add
inc
sub
mov
jp
adcb
xor
lock
daa
in
push
sub
push
addr16
adc
adc
push
rclb
sbb
add
pop
xor
sub
or
dec
cltd
cmp
xor
dec
cld
lock
mov
mov
or
and
add
sbb
aam
cld
and
inc
ljmp
xchg
fisttpll
pusha
inc
repz
adc
or
movsl
arpl
push
daa
cmp
mov
les
sbb
pop
insb
pop
jle
cld
mov
in
xor
adc
imul
dec
and
or
dec
push
in
ret
xchg
ret
dec
xor
or
push
pop
jne
sub
push
jbe
inc
mov
push
add
mov
fs
inc
imul
rol
push
jg
fisttps
fdivs
ret
push
addb
es
daa
jmp
jp
hlt
lock
mov
into
inc
test
add
add
in
mov
sbb
testb
add
sti
dec
enter
clc
xor
daa
sbb
out
push
fwait
movsb
jne
cld
add
lock
rcl
and
cs
sub
fisubs
lods
and
scas
push
and
inc
inc
mov
lret
inc
mov
cmovs
adc
mov
mov
ficoms
and
lds
adc
fstpt
imul
cmp
mull
inc
adc
loope
call
jecxz
dec
call
inc
subl
inc
add
inc
addr16
sbb
gs
xchg
mov
xchg
outsl
push
dec
or
fisubs
sub
dec
and
sub
int
cmp
xchg
lock
rolb
dec
fisubrs
incl
or
movl
mov
movb
mov
ret
jl
mov
rolb
dec
popa
stc
ja
pop
or
pop
mov
ret
and
fcomps
mov
push
push
sbb
dec
cmp
into
push
cmp
inc
cmp
xor
incb
pop
mov
sub
inc
fwait
xchg
pop
dec
pop
dec
push
enter
loope
ja
mov
mov
into
out
or
mov
dec
pop
ror
orl
imul
aaa
or
ror
xor
fildl
shr
add
or
jnp
push
xor
add
icebp
adc
adc
mov
jl
mov
leave
mov
adc
cmp
popf
push
aas
lea
or
cmpsb
repz
je
fiadds
jmp
pop
adc
lret
mov
push
shrb
pop
outsb
fiadds
xor
adc
shlb
inc
add
jmp
and
push
es
push
movsb
rcll
stos
sub
mov
fmull
mov
mov
mov
sub
leave
sub
fs
mov
dec
or
push
fs
imul
mov
rcll
jmp
scas
fisttpl
or
int
jle
add
and
inc
nop
cli
xor
popa
or
pop
stos
iret
inc
enter
das
mov
and
js
test
rorb
or
fdivrl
cwtl
sbb
imul
ret
mov
pop
cltd
js
xchg
cs
adc
cltd
mov
push
xor
or
mov
push
dec
mov
sahf
mov
pop
mov
lods
add
mov
mov
inc
push
dec
jo
jl
xor
pop
dec
xor
xor
lds
ret
in
mov
sub
mov
lahf
imul
rcll
rorb
pop
adcl
aaa
rorl
adcb
inc
adc
repnz
push
mov
ret
std
call
btr
pop
in
lods
pop
loop
rcrl
roll
rorb
scas
imull
imul
movb
sti
xor
or
inc
insb
mov
cmp
repnz
xor
jne
push
pop
mov
xor
jno
add
jne
lahf
or
jae
or
pop
mov
lock
mov
or
jne
inc
shll
adc
mov
rep
loop
pop
push
pop
out
fists
lahf
cmp
imull
shr
sbb
mov
push
push
lret
loopne
cwtl
or
rcrl
cwtl
sbb
fcoms
scas
shrl
cld
testb
inc
add
imul
scas
xchg
shlb
lods
outsb
or
push
xchg
sar
mov
mov
and
push
or
jne
into
xor
sarb
push
sub
adc
mov
mov
pop
lea
push
jge
mov
adc
repz
and
dec
sarl
cmpsb
outsl
jp
or
xor
pop
mov
sbb
add
or
mov
dec
scas
xchg
jo
popf
lcall
pop
js
mov
enter
sarl
aas
jg
rcrb
leave
inc
out
lret
mov
push
rcrb
mov
out
popa
rcll
cmp
loopne
cmp
push
jmp
imul
call
insl
cmp
push
mov
sbb
jnp
loope
pusha
pop
and
adc
add
adc
push
add
adc
jbe
mov
aad
andl
mov
nop
cli
rolb
push
jne
push
test
dec
cli
or
pop
int3
xchg
out
rcrb
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
data16
pop
add
adc
test
jl
inc
mov
cmp
mov
sub
cwtl
sbb
cmp
je
add
xchg
and
push
or
imul
jne
adc
shl
cmp
xchg
mov
lret
fsubs
mov
pop
or
xchg
cmp
nop
xchg
inc
je
jnp
xchg
icebp
sbb
movsl
cmp
fdivs
mov
jl
mov
mov
cmp
popf
sub
lret
pushf
push
fidivs
mov
gs
arpl
pop
sbb
test
mov
in
push
hlt
push
xchg
icebp
pop
testl
rcrl
push
test
cs
cwtl
subb
add
sbb
sub
pop
aaa
jecxz
stc
mov
loopne
adc
jle
orb
push
ret
mov
and
mov
loopne
push
or
push
fcoml
xor
inc
mov
pop
dec
push
or
jecxz
push
or
dec
add
mov
rolb
xchg
orl
or
and
imul
jo
shlb
test
mov
xchg
adcl
rolb
inc
or
or
inc
sbb
push
sbb
lods
test
add
push
lods
sub
xor
inc
and
xor
shll
fs
dec
shll
mov
or
call
or
scas
sbb
adc
lcall
dec
int3
xlat
js
mov
xor
addr16
scas
sub
mov
mov
mov
jae
int
adc
mov
nop
in
jle
movb
sbb
mov
lods
pushl
sbb
xchg
fmuls
imul
sbb
nop
add
js
jo
sbb
add
nop
fs
push
sub
sbb
mov
jp
adcl
add
xor
mov
scas
mov
sub
add
int3
sub
pusha
je
mov
daa
push
mov
lods
or
stos
sub
divb
pop
adc
scas
adc
or
loopne
adcl
addb
xorb
mov
rorl
lcall
cli
inc
dec
adc
ds
arpl
into
jne
sbb
test
push
adc
pop
or
inc
fdivs
sbb
lea
ret
dec
scas
gs
or
je
inc
fld
pop
and
jl
rcrl
push
xor
sbb
cmp
lock
repz
push
mov
cmp
xchg
lcall
es
inc
into
jo
ja
mov
add
shl
ret
mov
sbb
add
pop
add
fdivs
add
je
fisttps
xor
out
and
das
xorl
movl
sub
daa
inc
dec
or
mov
imul
xchg
dec
test
jo
fbld
or
test
lret
xor
dec
mov
inc
fisubrs
xchg
stc
fldl
sar
lahf
dec
dec
mov
lods
cmp
or
repnz
sahf
fnstcw
add
imul
xor
insl
sub
mov
adc
adc
fnstcw
sub
mov
into
adc
cs
adc
inc
push
cmp
fisubrl
jne
xor
leave
cmpsl
inc
xchg
ja
fwait
aam
arpl
lahf
jo
cld
aaa
pop
and
push
dec
mov
js
pop
add
fiaddl
sub
jnp
cli
add
je
mov
xchg
sbb
inc
cmpb
pusha
sbb
outsb
decb
lea
xchg
and
inc
dec
gs
mov
cmp
rorl
aas
push
or
out
pusha
cli
out
fidivrs
pop
mov
test
lods
pop
mov
test
sbb
sbb
andb
pop
inc
pusha
xchg
xor
mov
dec
adc
outsl
lods
xchg
push
add
sbb
test
jbe
push
xchg
lods
or
mov
pushf
imul
xor
test
add
cmp
insb
adc
aad
cmp
sub
enter
hlt
popa
jl
xor
shrl
test
add
adc
lea
nop
in
push
jg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
or
push
or
lock
cmp
notl
xchg
and
sbb
je
cmovle
out
mov
je
xor
add
and
orl
enter
out
jo
dec
or
jae
cmp
cmp
mov
pop
jmp
mov
testl
cmp
cli
je
popf
add
loop
sbb
jo
mov
iret
je
cmp
lea
mov
hlt
sti
push
sub
cmpsl
js
fwait
inc
and
ret
jne
lods
addb
cs
push
outsb
dec
adc
dec
or
sub
inc
cs
lock
lock
pop
enter
into
dec
jmp
fcompl
push
pop
xor
loop
ret
mov
sbb
xorl
jnp
out
movsl
movswl
in
push
mov
lret
add
push
adc
push
inc
and
mov
push
lock
sub
sub
xor
sub
mov
int
pop
cmc
jecxz
rorl
push
flds
pop
adcl
push
push
test
or
sbbb
dec
scas
or
fs
sub
mull
mov
insl
xchg
repnz
jle
das
xchg
mov
jno
jbe
jo
dec
pop
js
push
adcb
sub
xchg
repnz
jns
or
test
or
mov
push
test
popa
shlb
mov
cs
aam
jp
call
js
xor
fucomip
je
push
aas
jne
outsl
mov
insl
js
xlat
mov
cmp
fildl
mov
fidivrs
shlb
jne
sub
flds
mov
cmpb
fwait
sbb
xor
sarl
js
data16
mov
push
and
dec
push
lea
push
pop
cwtl
push
out
rclb
add
sbb
dec
push
or
xor
mov
es
shrb
pop
fcoms
push
testl
inc
add
movsl
test
mov
add
lock
cmp
cmpsb
fimuls
jns
pop
or
push
and
mov
jmp
fdiv
or
xorb
mov
cmp
jp
jecxz
fcompl
cmp
inc
push
roll
mov
aaa
orl
xchg
dec
je
nop
fdivs
jne
or
xor
data16
stc
mov
jge
int3
mov
fdivrl
cmp
push
mov
fwait
cmp
shrb
mov
push
mov
clc
push
mov
dec
aas
xchg
adc
or
add
inc
push
push
sbb
xchg
dec
insb
or
jo
push
data16
nop
sub
popa
and
jnp
sbb
addr16
scas
rclb
adc
and
sbb
push
adc
xor
push
add
sbb
sbb
and
cs
ja
sbb
inc
mov
loope
push
lea
and
out
cli
sub
cmp
dec
js
cmp
lods
lock
inc
mov
pop
icebp
xor
pop
jno
pop
cmp
adc
fiadds
mov
js
lock
cmpl
test
addr16
mov
pusha
lods
pop
ret
xchg
in
mov
pop
test
jnp
insb
inc
je
push
mov
add
xor
xor
push
and
inc
int
shll
cmovno
lcall
cmp
dec
pusha
inc
add
int
dec
pop
mov
movsl
add
addl
xor
push
out
pusha
mov
sbb
and
jge
jo
adc
daa
lock
gs
xor
and
lock
test
subl
mov
xor
or
loop
scas
std
xchg
cmp
and
test
mov
dec
sbb
fdivp
pop
push
aad
mov
or
push
ljmp
and
out
push
dec
sub
dec
repz
and
aam
fimull
divl
dec
xor
popf
out
insb
in
adc
mov
lea
cmp
nop
scas
imul
mov
loope
push
hlt
nop
push
aam
push
and
cmpl
push
cld
push
inc
sbb
inc
adc
or
push
or
mov
aas
adc
leave
mov
or
and
stos
sbb
jno
or
sbb
or
cmp
test
int
rorl
sbb
push
adc
fcomps
sbb
or
nop
adc
in
cmp
ret
push
or
jnp
out
mov
scas
sub
sbb
jp
push
add
mov
push
js
pop
cmp
out
and
push
xor
pop
adc
scas
test
or
or
imul
pop
jb
shlb
test
inc
roll
dec
xor
call
add
je
gs
rcl
jle
scas
dec
loopne
dec
xor
push
inc
pop
or
sub
cmpsl
shr
dec
cmp
push
xor
daa
aam
aaa
or
push
xor
push
jbe
pop
jmp
xchg
je
or
inc
sub
pushf
adc
and
or
cmp
lock
mov
push
and
ja
xchg
add
or
and
in
push
jl
xchg
out
inc
test
inc
xor
sub
dec
push
xor
xor
and
vmread
or
mov
fwait
pusha
sbb
js
cmp
dec
js
or
mov
dec
adc
js
or
push
inc
jg
scas
push
push
push
mov
imul
adc
inc
xor
pop
or
aad
sarl
push
std
js
ljmp
or
adc
adc
inc
jno
pop
movsb
adc
sbb
sbb
and
inc
inc
ret
in
jmp
and
subl
adc
inc
cmc
js
cmp
jmp
pushl
mov
cmc
mull
jg
call
lea
ret
sub
js
pop
fmull
out
and
push
inc
sub
push
int3
lods
or
push
mov
and
add
sarl
inc
popa
sub
push
negb
ss
sub
mov
jl
andl
inc
inc
mov
adc
pop
call
pop
push
add
pushf
pop
stos
int3
cltd
xor
add
jae
xor
mov
stos
jecxz
cmp
call
repnz
jo
push
or
lea
call
sbb
mov
scas
inc
xor
jp
push
fcoml
shr
stos
cld
mov
dec
enter
push
pop
or
dec
adc
pop
adc
neg
push
xchg
ds
adc
or
fcoml
dec
adc
pop
push
jle
ds
and
and
clc
mov
je
push
adc
push
cmp
sub
xor
pop
push
sbb
jmp
and
push
cs
sbb
pop
mov
push
mov
mov
xor
inc
adc
and
mov
pop
pusha
subb
or
inc
jno
xchg
movsb
add
pop
pop
sub
mov
push
xchg
pop
add
addl
xadd
push
mov
add
cmp
mov
or
mov
xorb
imul
jl
inc
sbb
mov
icebp
icebp
adc
and
cmp
add
jl
loope
xor
push
pusha
jg
or
adc
or
test
cwtl
add
int3
fs
iret
rolb
fisttps
rolb
test
fidivs
xchg
mov
mov
mov
fstl
lods
cmpsl
sub
add
adc
dec
inc
mov
aas
mov
cmpsl
loope
cld
nop
add
inc
push
in
push
add
cmp
cmpsl
aaa
add
xchg
pop
addl
jle
xchg
movsl
push
push
cmp
sbb
pop
sbb
fwait
nop
mov
adc
pop
bound
push
icebp
add
mov
xchg
xchg
mov
lds
cmc
mov
clc
add
push
push
add
or
aad
lea
fisubrl
xlat
into
mov
mov
jo
mov
cmp
jns
xchg
pusha
insl
int
nop
inc
mov
or
je
out
neg
aas
jo
jle
mov
clc
jmp
dec
out
lock
pushf
jmp
daa
mov
pop
insl
dec
fwait
dec
push
fmuls
push
push
inc
adc
imul
cltd
idivl
push
add
xchg
test
lea
int
adc
cli
push
or
pop
push
ret
bound
inc
cs
mov
add
movsb
inc
add
scas
iret
sub
leave
je
int
pusha
mov
addl
repnz
and
inc
rcll
push
mov
xchg
dec
and
pusha
sbb
add
mov
pop
xrelease
push
adc
pop
cmp
dec
pop
mov
xchg
aas
or
lea
js
lret
leave
xor
xor
add
dec
cmp
add
pop
mov
ljmp
push
pop
cwtl
push
stos
loope
les
ja
adcb
xor
mov
xchg
fucomp
push
xchg
fistps
or
inc
sub
cmpsb
pop
addl
or
cli
sub
scas
mov
push
jo
push
push
inc
mov
mov
pop
push
or
jae
mov
testb
insl
mov
lods
fcomp
mov
and
orl
cwtl
hlt
frstor
insb
divl
dec
mov
or
je
les
insb
add
enter
adc
mov
mov
sbb
adc
sbb
add
cltd
dec
sti
inc
inc
cmp
adc
sbb
cmove
cmp
mov
xchg
add
rcrb
mov
mov
iret
sub
loopne
nop
enter
and
push
push
outsl
cmpb
dec
or
xor
jecxz
and
aas
aad
mov
mov
shrl
cmpl
stos
and
cli
push
cld
movsl
or
rolb
and
jg
lahf
movsl
jge
movl
shr
inc
add
cmpl
out
push
loopne
adc
push
test
dec
adc
sbb
add
dec
inc
sbb
or
pusha
sub
pop
aad
std
jg
mov
sahf
adc
and
divb
in
or
stc
pop
add
push
insl
out
in
sbb
dec
fcoml
movsb
inc
xorb
cmp
or
push
mov
mov
push
js
popf
repnz
pop
adc
inc
lock
add
repnz
inc
jmp
jns
mov
insl
lret
push
out
jno
ror
dec
add
xor
or
fstps
mov
lcall
rolb
orl
sbb
mov
sbb
arpl
lods
xor
icebp
not
bound
mov
divl
jbe
dec
adc
sub
jl
out
pop
mov
mov
and
pop
mov
dec
test
test
dec
cwtl
loopne
pushl
fadds
out
movb
call
inc
movsb
xor
je
add
mov
addr16
jne
sarb
cwtl
adc
lret
js
js
add
jmp
push
testl
scas
push
pop
mov
int3
push
lea
call
xor
sbb
cld
pop
movb
addr16
repnz
cmp
divps
jbe
daa
pop
push
push
fsts
mov
or
mov
cmp
cmp
jo
sbb
frstpm(287
xchg
add
adc
cmp
add
jo
icebp
dec
sbb
cmpsb
or
jl
inc
and
and
push
push
popa
cmp
fnstsw
adc
mov
in
ret
push
cmp
stos
add
lock
and
inc
dec
mov
ret
imul
lock
stos
in
lea
add
sbbb
addr16
xor
adc
push
into
inc
adc
push
cs
jns
mov
sub
clc
cmpsb
mov
fs
mov
adc
sbb
add
add
dec
fiaddl
cmp
pusha
scas
xor
jbe
mov
out
aad
xchg
cmc
mov
jo
pop
sub
fs
sbb
sub
fsubrl
fwait
ret
pop
testl
push
dec
mov
dec
es
or
adc
in
mov
mov
mov
sub
iret
test
pop
xchg
adc
test
inc
xlat
aaa
sbb
push
daa
add
loop
inc
or
mov
jmp
or
inc
add
dec
sub
and
push
sbb
cli
lret
add
xor
push
pushf
sub
sti
mov
je
add
inc
imul
inc
or
testl
std
in
rorl
xor
or
clc
in
neg
ret
push
int
xchg
and
and
loop
adc
imul
adc
mull
popa
jo
jo
rol
xor
pop
and
movsb
cmp
dec
js
movl
pop
pop
push
push
pop
dec
lock
or
dec
or
fcomps
mov
sub
mov
loope
insl
xorb
daa
test
leave
or
aam
lret
cmp
loop
pop
xchg
and
testl
xorl
lret
test
jo
test
sub
mov
jl
and
mov
pop
loope
addl
xor
aas
pop
ret
std
fcomps
xor
fidivrs
pop
ret
adc
or
mov
xchg
mov
and
push
sbb
loopne
rcll
pop
xor
xor
xchg
test
sub
sti
outsb
sub
adc
popf
xor
lds
push
add
daa
dec
in
xor
mov
add
xor
inc
xchg
xor
and
ljmp
inc
jb
or
lea
xchg
cmp
pusha
scas
xchg
add
mov
add
pushl
cld
push
ret
push
or
mov
inc
shl
jg
fisttps
ret
adc
inc
mov
bound
jo
jno
imul
push
xchg
add
adc
notl
cmpsb
jo
cmpsb
jne
ret
pusha
pusha
loope
outsl
nop
cmc
in
notb
bound
sub
sub
mov
int
sub
xchg
scas
cmp
rclb
or
jg
cmp
jecxz
or
add
add
jne
sahf
sbbb
push
jnp
dec
jnp
das
sbb
jmp
cmp
adc
rclb
adc
sub
adc
add
mov
inc
mov
xchg
jo
fmuls
jbe
test
call
push
xor
into
test
adc
dec
movsb
pop
sub
or
add
inc
sbb
sub
push
push
pop
mulb
loope
or
or
adc
or
stos
shrb
ret
test
cltd
and
jo
pop
aad
les
add
clc
lret
xor
mov
cmp
mov
icebp
je
sub
or
subb
lods
add
add
sbb
mov
mov
and
xor
lds
shll
or
ret
push
adc
inc
and
xchg
jge
popa
fldenv
je
adc
inc
add
mov
scas
or
inc
sbb
test
sbb
into
fiadds
cmc
add
adc
and
xor
adc
andl
enter
mov
sub
cmc
pop
and
shll
or
loope
pop
test
fsubl
cmp
add
xor
out
je
dec
pusha
mov
and
adc
push
dec
aas
inc
or
push
xchg
call
fcoml
fsubs
repz
push
popa
cmp
ret
popf
faddl
jmp
add
sbb
push
and
daa
push
or
mov
jno
outsl
pop
rolb
mull
xchg
add
add
push
les
dec
ret
xchg
les
cmp
lods
adc
enter
pop
fwait
js
and
jns
nop
inc
inc
add
add
add
adc
or
add
pop
shlb
ds
add
inc
mov
add
mov
jecxz
mov
les
mov
jecxz
xor
jns
sub
dec
push
cmp
xchg
js
inc
and
mov
bound
sub
in
push
xor
pusha
das
jno
int
push
ret
mov
pop
cmc
fsubs
sub
pop
rcr
test
or
jno
aam
in
addb
nop
loope
les
fcoms
lods
add
das
xorl
addr16
push
mov
adc
leave
mov
and
add
loope
pop
and
dec
test
push
xchg
sub
int
xchg
push
xchg
fnsave
das
dec
adc
inc
sbb
xor
jo
mov
and
pushf
jl
or
sbb
mov
iret
shrl
mov
sbb
or
ss
adc
imul
push
fwait
xchg
cmpsl
fidivl
jp
hlt
mov
and
xor
or
mov
in
dec
xor
adc
mov
xchg
dec
or
add
sbb
cltd
test
xchg
push
daa
and
test
loop
jp
cmp
add
xchg
inc
jmp
mov
ds
divb
pop
add
aam
mov
push
jl
or
xchg
clc
pusha
stos
inc
pop
mov
or
and
and
and
sub
jb
test
outsl
add
mov
and
inc
je
daa
andl
add
sub
pop
jp
lea
xor
imul
add
aaa
dec
lcall
out
sub
lea
dec
pop
sbb
cltd
movsl
dec
lods
push
and
sub
fcmovnb
sbb
cmp
xor
pop
test
mov
loop
adc
jnp
and
ud2
inc
inc
inc
or
mov
mov
inc
movsl
cmp
cld
loope
nop
adcb
insb
cmp
loop
ds
les
rorb
in
mov
and
adc
cmpsb
je
icebp
loop
pop
mov
jp
push
xchg
xchg
mov
js
pop
push
inc
leave
out
pop
je
rcl
add
adc
lahf
lret
add
adcb
adc
push
imul
push
push
loopne
or
add
lcall
inc
xor
xor
aaa
loopne
cmp
in
mov
xor
cmp
dec
inc
mov
hlt
out
and
pop
sub
mov
loopne
test
sub
lret
out
add
enter
pop
add
nop
cmp
sbb
push
cmp
mov
fildl
mov
nop
rcll
out
sbb
shrb
pushf
cld
xor
shl
mov
mov
adcl
adc
mov
push
push
add
bound
sub
sbb
adc
out
scas
nop
pop
jge
stos
mov
and
adc
mov
ret
addr16
push
jl
push
mov
add
shlb
loopne
les
sbb
test
ja
out
add
lock
inc
js
mov
fwait
cmp
stos
and
add
cmp
or
pop
mov
call
jmp
cmp
js
inc
cld
jnp
mov
add
xchg
add
add
dec
movsl
or
outsl
test
pop
jne
xor
adc
loop
adc
jl
pop
lret
mov
daa
test
jne
inc
test
jp
in
add
push
loope
call
mov
je
icebp
jge
int3
fwait
cwtl
add
out
cmp
outsl
sarb
sub
inc
push
or
das
push
sbb
jmp
or
pop
pushf
std
and
adc
les
dec
and
and
and
sub
sub
cmpsb
pop
sbb
sub
adc
sbbl
movsl
pop
mov
mov
dec
sbb
adc
cmc
mov
mov
adc
pop
add
adc
inc
jo
xor
pop
rcl
and
loope
in
dec
pusha
popa
and
divb
adc
pop
jno
sub
popf
and
jle
adc
lea
pop
jne
cld
sub
mov
pop
fistl
pop
lcall
in
mov
xor
les
xchg
mov
adc
cltd
mov
rolb
leave
adc
cs
aaa
inc
xchg
sbb
push
das
dec
sbb
dec
mov
mov
jp
adc
adc
push
xor
xor
add
mov
inc
and
cmpsb
add
mov
cltd
sub
cld
or
psubw
data16
sub
pop
shll
mov
inc
pushf
lret
sub
cmpsb
cmp
icebp
in
addr16
cmp
pop
xchg
roll
and
sub
xor
lcall
in
mov
xor
or
or
in
push
cmp
repnz
insb
pop
add
sbb
adc
aaa
test
imul
lock
insl
and
rorl
shlb
daa
inc
out
or
push
lock
push
push
lret
cmp
je
out
adc
adc
push
adc
lea
sbb
dec
xchg
imul
rorb
push
fdivrp
and
add
sub
dec
dec
push
repnz
pop
add
movsb
je
cmp
pop
xchg
daa
sub
jg
mov
ss
test
xchg
push
dec
mov
outsl
sbb
pop
insb
mov
push
adcb
dec
lret
les
mov
add
nop
ret
ja
stos
mov
rcrb
rorb
jno
push
cmp
sti
aad
loopne
xor
leave
pop
mov
cmpb
mov
jecxz
dec
push
inc
push
add
rolb
mov
mov
jp
cld
inc
adc
and
jo
test
xchg
aaa
adc
push
cld
and
nop
je
inc
or
popf
std
mov
pop
shl
adc
stos
and
das
pop
add
push
jb
or
sub
andl
sbb
mov
or
insb
sub
ret
add
or
je
adc
jnp
scas
sub
in
xchg
or
je
lock
and
sbb
in
jo
lcall
and
sub
and
xor
lret
add
sbb
sub
fdivl
dec
add
push
ficoml
xor
mov
push
push
adc
xchg
xor
in
sbb
xor
add
cmp
enter
cmp
add
and
adc
in
sbb
inc
jne
dec
mov
add
xchg
jns
add
inc
fs
pop
mov
dec
jmp
outsl
pop
dec
push
and
xchg
cmpsl
sti
add
fldl
add
int
iret
pushf
xor
add
ficoms
jl
mov
adc
adc
repz
pushf
adc
push
pop
push
dec
dec
dec
pinsrw
adc
dec
sub
jne
push
mov
sbb
mov
push
and
adc
add
mov
js
outsl
xchg
popa
dec
or
push
sbb
pop
adc
cltd
fcomps
repz
aaa
and
xchg
cmpsb
push
pop
pop
push
push
dec
push
mov
push
pop
mov
pusha
mov
jbe
push
dec
test
adc
push
sbb
data16
cmp
movsl
jb
xor
les
jo
inc
clc
push
sbb
iret
push
je
loop
dec
mov
or
adc
and
cmpsl
lea
xchg
sbb
faddl
loopne
cmp
or
insb
outsl
inc
pusha
and
jge,pt
fs
je
and
mov
in
or
ret
in
add
add
inc
in
cs
int
push
xchg
call
jne
stos
in
and
pop
in
push
testb
sub
push
sbb
or
arpl
lcall
xchg
pop
dec
loopne
loopne
bswap
and
rol
push
aam
fnsave
mov
loop
inc
fisubs
lret
push
xor
mov
jne
cmc
add
mov
icebp
imul
iret
pop
sub
push
sbb
popf
add
sub
mov
clc
mov
jg
clc
mov
or
adc
xor
push
mov
pop
jne
aam
faddl
xor
sub
xlat
aaa
add
or
loopne
and
add
scas
pop
mov
and
push
dec
in
xor
lea
jo
and
cmp
cmp
icebp
xor
xlat
add
mov
xchg
add
xorl
shrl
mov
dec
std
mov
leave
aam
dec
cmpsl
ret
add
ficompl
add
jbe
mov
pop
addl
mov
push
push
cld
add
cmp
sarb
cwtl
jbe
pop
das
cmp
sti
push
cltd
test
addr16
dec
fmuls
jae
push
lock
add
ret
pop
xchg
pop
cmp
jne
sbb
mov
clc
pop
add
cmpsl
mov
lods
sub
add
int
xor
xor
jp
adc
push
gs
rorb
xchg
add
sarb
or
add
add
test
rcl
jl
or
mov
push
xchg
xchg
dec
and
push
and
xchg
or
xor
shrb
and
pop
or
stc
daa
lret
cltd
adc
sub
pusha
imul
sub
leave
insl
jnp
lgs
enter
jno
fiaddl
mov
push
inc
cmpb
mov
addl
mov
clc
sub
outsb
adc
jge
adc
mov
xchg
cmpsl
push
inc
dec
leave
sarl
xorl
das
or
or
add
or
push
pop
add
les
arpl
loopne
and
dec
inc
cs
insl
aad
lods
dec
cli
ja
scas
in
and
scas
test
cmp
and
sub
sub
dec
sbb
adc
jb
adc
adc
add
xorl
in
dec
lock
pop
dec
rclb
shll
inc
push
imul
cli
mov
jmp
cmp
jbe
shll
push
pusha
sbb
push
add
cmpb
ficompl
imul
mov
jno
and
subl
loope
inc
lock
orb
add
das
push
sbb
cld
ret
mov
nop
pushf
or
sbb
loope
ret
push
or
mov
cmp
in
cmp
or
stc
add
lods
lds
lods
xor
push
sub
jo
add
mov
dec
lahf
mov
push
fbld
loope
jo
push
pop
pop
jmp
and
rol
jo
push
test
fldcw
xchg
rcr
ss
dec
or
push
pop
mov
push
add
dec
push
popa
pop
push
andl
sbb
and
push
and
pop
fcmovne
add
and
inc
sbb
test
xor
inc
int3
aas
lock
pop
inc
dec
jmp
ds
aaa
push
or
ja
push
insl
pop
ret
dec
inc
fisubl
or
jp
shll
mov
xchg
lds
subl
add
mov
jmp
cmp
icebp
rolb
pop
jne
push
inc
lcall
add
lcall
jg
stos
call
loop
jg
push
jae
jbe
sbb
pop
inc
jb
pop
aaa
loopne
sub
and
xor
xor
adc
ret
push
lods
ret
add
cmc
and
adc
fsqrt
xchg
pop
jns
sub
cwtl
shlb
nop
sbb
mov
sub
push
push
rcl
cmp
sub
adc
inc
cmp
ss
scas
loope
nop
jbe
mov
add
sbb
cmpb
arpl
sub
cli
lret
mov
cmp
push
lea
es
scas
leave
mov
shlb
pop
sbb
pusha
insb
push
pop
adc
add
sub
pop
pop
mov
insb
lods
add
push
inc
int
xchg
or
jmp
xor
sub
es
add
shrb
add
lea
clc
mov
mov
mov
shr
dec
adc
out
or
ret
arpl
mov
stos
mov
mov
movsl
xor
add
and
lock
sbb
push
repz
pusha
or
sub
or
imul
add
jle
pop
clc
scas
adc
aad
pop
cmc
add
roll
xchg
mov
inc
and
jb
jo
lods
xor
sbbl
sub
add
popa
loope
popl
mov
mov
loopne
xor
xor
arpl
pop
insb
push
sar
pop
adc
push
push
adc
aad
roll
ds
push
dec
lock
adc
jle
rep
sti
mov
test
test
sbb
mov
sub
inc
aaa
xor
sbb
sub
sbb
or
add
push
sub
mov
mov
dec
adc
sbb
dec
loope
arpl
pop
pushl
mov
or
and
lret
fdivs
call
mov
jp
ds
pusha
pushf
inc
loopw
arpl
push
pop
ds
or
mov
pop
mov
dec
das
lods
push
imul
xor
mov
inc
xor
rclb
push
mov
sbb
add
jecxz
in
cwtl
daa
cmp
lods
loop
mov
cmp
xchg
sbb
inc
pop
sbb
or
push
or
mov
mov
add
fstp
dec
pop
fidivrs
clc
shll
pop
mov
mov
fsubr
pop
cld
sub
pop
inc
mov
jge
loope
sub
pop
add
movb
cmp
sub
lea
inc
loopne
fs
pop
or
inc
cmp
jb
push
cmp
and
sti
jae
inc
pop
leave
mov
cmp
add
xchg
xchg
and
leave
or
cmp
push
js
adc
in
or
loopne
loopne
adc
test
jmp
xlat
fiadds
mov
add
or
inc
dec
sti
jl
test
cmp
xor
sahf
jg
cld
dec
cmp
sbb
mov
sub
mov
sbb
loop
sbb
cmp
nop
aas
out
push
and
out
cmp
sbb
dec
add
jmp
or
movsb
aam
push
imul
mov
in
movsl
xor
in
xor
push
out
and
inc
hlt
push
mov
movb
cld
jp
xor
dec
mov
in
sarl
sbb
inc
xor
cmp
shlb
or
or
xor
repz
cmp
jo
pop
dec
dec
lods
push
or
add
ds
push
sub
insl
pop
or
jg
cmpsb
inc
add
inc
sbb
add
mov
sub
mov
inc
mov
and
sub
mov
outsl
push
add
or
jecxz
push
bound
inc
xchg
xor
sub
movsb
sbb
push
mov
xchg
mov
sahf
in
scas
dec
movsl
jl
push
sub
xchg
ficoml
sub
mov
in
pop
sub
lds
inc
push
pop
sub
jmp
mov
rolb
jle
je
icebp
dec
or
ret
pop
xchg
mov
cld
lret
daa
xlat
addb
add
into
daa
lret
inc
inc
ljmp
ss
gs
movsl
aam
push
shlb
call
mov
fs
push
jns
mov
add
aam
or
dec
jecxz
xchg
mov
lcall
jae
push
mov
dec
movsb
push
mov
xchg
jae
in
inc
movups
cmpsl
jne
outsl
idivb
dec
sub
mov
push
negl
jge,pn
xor
jge
fldl
cmp
clc
ds
sub
mov
in
cmp
test
adc
push
pop
lea
sti
repz
orl
imul
sub
jae
jo
outsb
add
sub
cmp
ja
sbb
andl
xor
and
jne
push
mov
ja
xchg
sub
push
fs
push
and
push
hlt
cmp
je
dec
adc
pop
shll
rcrl
das
adc
adc
roll
mov
imulb
cmpb
jnp
adc
adc
adc
test
push
int3
xor
push
and
into
ret
and
nop
jmp
mov
cmpsb
mov
push
cmp
test
jecxz
mov
ret
or
shlb
and
pop
and
pop
cmp
dec
pop
cld
push
jns
call
adcb
push
inc
and
and
xchg
test
dec
imul
push
push
hlt
cmp
cmpl
inc
pusha
push
mov
or
and
popa
jns
inc
cmc
ret
and
jl
cmp
inc
xchg
push
push
mov
dec
xchg
push
aam
xchg
aad
sti
call
out
inc
push
arpl
adc
fidivrs
add
push
mov
adc
push
sbb
movb
orl
sbb
and
sarb
cmpb
dec
jne
nop
loopne
mov
sbb
pop
push
adc
push
loope
sbb
and
adc
add
cmp
rclb
loopne
push
xor
mov
xor
fs
movups
adc
xchg
cld
add
sub
xor
movsb
js
orl
fists
call
or
enter
cmpsb
cmp
inc
and
lock
xchg
testb
mov
scas
lcall
pop
push
cmpsl
cwtl
or
or
loopne
pusha
mov
adc
adcl
add
and
cmp
mov
and
sti
xorb
mov
add
cmp
je
pop
sub
add
shll
mov
push
add
adc
or
add
cmp
ret
cmp
mov
ret
adc
test
and
es
bound
add
jecxz
pop
jb
xor
es
pop
sbb
fwait
add
push
or
push
imul
sbb
inc
or
ret
sahf
ja
test
push
or
fmuls
dec
ret
xchg
add
cmp
push
hlt
dec
mov
cmp
dec
xor
incb
xor
or
loope
ret
adc
xor
punpckldq
pop
les
mov
pop
add
or
adc
sbb
and
cmp
xor
mov
push
push
fstpl
pop
or
loope
xor
cld
push
jl
jno
inc
lea
leave
sbb
xor
mov
jle
pop
inc
push
shlb
sub
call
test
pop
xor
add
jno
popa
lock
xchg
cmp
popl
inc
pop
enter
inc
insl
xor
adc
xchg
sbb
xor
scas
mov
orb
mov
imull
add
jne
sub
outsb
shll
add
incb
mov
sub
sub
jae
push
mov
hlt
cmp
jb
jae
ror
in
jns
xor
and
es
hlt
jae
adc
sub
jne
cmp
fdiv
and
cmp
inc
mov
xor
lret
int3
cwtl
and
adc
adc
pop
inc
rolb
push
push
clc
sub
sub
stos
add
mov
cmp
sbb
dec
cmp
sbb
jnp
mov
sbb
mov
insb
cmp
sbb
push
mov
add
subb
ret
lea
enter
cmp
dec
xor
sbb
pop
cmpsl
add
push
adc
cli
bswap
stos
jmp
jne
les
or
or
or
dec
or
pop
shr
pop
pop
dec
jg
sbb
shr
mov
xor
and
lahf
cltd
cmp
fisubrs
xor
push
popf
mov
mov
push
or
and
mov
jle
mov
dec
jb
subl
sub
xchg
sbb
daa
or
cmp
nop
out
nop
and
cmp
fwait
dec
push
cmp
nop
or
and
enter
arpl
adc
jb
sbb
sub
fwait
test
insl
adc
or
xorb
mov
arpl
fistl
pop
adc
and
fs
add
sahf
mov
lcall
hlt
or
adc
cli
rorl
add
test
out
add
pop
cmpsl
jne
in
sub
sub
ret
push
je
and
test
ret
sub
sbb
jno
cmp
iret
add
cmc
leave
and
ss
adc
push
xor
adc
test
adc
cmp
ds
in
inc
xor
and
cmpsb
fs
cmpsb
and
and
fs
lock
orb
and
dec
es
sub
daa
leave
orb
pushf
dec
leave
orb
jae
nop
xchg
xor
cltd
xchg
out
jmp
cmp
xor
cltd
lcall
push
cmpsb
movsb
pop
xor
xchg
jle
xor
or
xor
push
dec
push
int3
dec
call
adc
cmp
xchg
lea
mov
stc
pop
cmp
adc
jnp
test
insb
pop
add
mov
lret
int
daa
ret
sbb
in
add
data16
adc
adc
sbb
insb
xor
cmp
aam
inc
call
pop
test
and
cmp
adc
sbb
sbb
mov
aad
add
sub
fdivs
sarl
jecxz
mov
mov
adc
ja
xchg
lret
movsb
and
sub
inc
imul
push
push
xor
testl
pop
mov
mov
xchg
pop
push
cmp
sarl
shl
aas
in
rol
fimuls
enter
repz
xor
loopne
in
cmp
test
aam
sbb
mov
add
ret
loope
popa
xchg
mov
cmp
iret
cld
lock
sub
adc
adc
adc
xchg
push
incb
cmp
xor
mov
pop
pop
out
mov
xchg
push
mov
repnz
out
and
and
sahf
adc
add
aam
push
push
push
add
add
or
adc
pop
lock
add
adc
xchg
lods
jne
aaa
adc
push
xor
out
xchg
sub
divl
and
into
mov
jmp
sub
sbb
pop
dec
or
daa
push
popf
lock
pavgw
jno
xor
ja
js
js
push
push
mov
push
or
je
icebp
sub
fcoml
or
pop
or
mov
xor
icebp
adc
add
dec
mov
mov
js
add
or
fidivs
push
jne
sbb
pushf
jmp
cmp
shr
daa
jne
sbb
jns
flds
pop
mov
inc
add
xchg
jmp
das
addr16
fisttpll
dec
xor
jb
jmp
frstor
mov
pop
or
loopne
es
stos
cmp
mov
inc
lcall
in
sbb
imul
test
or
test
or
or
add
subb
je
les
sbb
test
cmp
cwtl
clc
ss
xchg
xchg
js
inc
je
in
xchg
mov
and
xor
daa
outsb
jo
les
jns
add
adc
mov
aad
cmp
and
mov
shlb
sbb
pop
mov
mov
push
and
xchg
test
ret
es
inc
pop
ss
mov
or
rolb
mov
gs
dec
cmp
mov
add
jns
jecxz
and
stos
mov
mov
push
lret
sub
sti
cmpsl
push
icebp
or
jbe
inc
popa
js
or
push
movsl
xchg
icebp
je
mov
rcrb
mov
mov
sub
cwtl
jmp
cmp
push
adc
push
push
jmp
mov
in
dec
xchg
pop
jge
dec
inc
lock
xchg
xor
in
sbb
nop
xor
or
sbb
cmp
xor
add
cmc
adc
fsubs
ja
int3
mov
sbb
sub
add
push
jnp
rolb
mov
in
sarb
cmp
xchg
jb
or
ret
movsl
push
cmpsb
pop
clc
jl
das
sbbb
mov
inc
dec
sbb
jle
pop
int
test
jbe
jmp
stos
jns
or
xor
add
mov
jl
or
inc
mov
out
repz
leave
cmp
mov
scas
jl
adc
add
outsl
mov
fisubs
mov
call
loope
sub
popa
outsb
in
ret
jge
push
cmpsl
dec
cmp
dec
or
fs
inc
mov
jl
enter
lsl
xchg
addl
jo
loopne
popa
fsubrs
pop
mov
pop
fcomip
inc
adc
and
outsb
inc
dec
cld
jne
js
adc
bound
push
pop
push
cli
push
fstpl
les
pushf
lea
push
lea
mov
mov
mov
arpl
push
adc
push
push
out
divl
mov
jb
mov
inc
mov
insb
loop
insb
mov
push
add
lea
push
add
pushf
jno
call
arpl
test
mov
add
sahf
jl
ljmp
xlat
in
adc
mov
or
mov
inc
bound
dec
add
push
dec
std
dec
orl
pusha
out
inc
fcomps
jno
sahf
push
mov
or
lock
or
es
jo
push
jmp
and
or
sbb
cmp
push
cmpsl
inc
xchg
loopne
pop
shll
sub
dec
xchg
ficompl
lret
mov
scas
jo
xor
movsb
mov
test
ss
dec
and
shll
sub
shlb
dec
push
lods
push
xchg
shrb
pop
lea
stos
aaa
mov
adc
sub
pop
subb
sub
or
dec
rclb
push
test
pop
fwait
or
enter
push
mov
pushf
fmuls
and
lea
rol
ret
add
sub
insl
leave
fdiv
sbb
or
pusha
push
jl
or
cmc
xor
aam
add
fsubs
xor
jmp
outsl
sbb
add
add
mov
adc
push
out
pop
adc
and
adc
mov
addb
pop
or
jbe
adc
pop
stos
popf
cmp
pop
outsl
mov
pushf
sbb
outsl
push
stc
push
iret
aas
fdivl
mov
fcompl
xor
jne
push
das
fsubl
ds
mov
mov
notl
jmp
push
arpl
push
inc
lret
push
sub
ljmp
sbb
shrl
push
in
lahf
je
and
push
xchg
add
xchg
lds
icebp
or
mov
arpl
and
inc
shlb
or
push
push
lahf
pop
mov
ret
mov
or
pop
aaa
dec
nop
push
ja
addb
and
aad
repz
iret
adc
scas
and
cmp
push
adc
push
loopne
inc
mov
cmp
inc
insb
sbb
push
sub
mov
nop
cmc
imul
push
adc
jo
pusha
add
inc
add
and
ret
push
dec
adc
xchg
nop
and
jae
shrb
jp
scas
insb
dec
cmpsb
xchg
or
rclb
push
push
js
jg
mov
mov
cltd
inc
add
adc
mov
in
icebp
dec
cmp
xor
mov
add
add
mov
add
xorb
xchg
inc
push
push
xchg
in
mov
mov
test
push
adc
mov
push
mov
adc
mov
inc
test
ja
lods
dec
xor
test
mov
scas
daa
sub
sub
inc
dec
cltd
sbb
neg
adc
loopne
aas
mov
sub
xor
xchg
dec
or
sub
fistpl
add
adc
add
push
pop
jno
lods
mov
test
mov
rolb
dec
in
mov
enterw
sbb
test
aam
or
and
ss
call
pop
test
jbe
loopne
sbb
fsub
mov
fs
jecxz
add
ljmp
add
pop
lret
arpl
mov
fwait
jo
pop
xor
psubq
xor
fiaddl
subb
mov
xor
es
mov
jmp
rolb
jo
add
sbb
notb
jbe
aam
inc
sbb
imul
popa
or
clc
sub
lods
dec
push
sub
stc
clc
lds
imul
dec
je
adc
in
arpl
dec
xor
popa
push
call
inc
pop
and
and
or
jne
jb
jl
push
mov
nop
xchg
cwtl
mov
arpl
arpl
cld
mov
add
push
mov
cmp
sub
mov
sarb
loop
push
pop
jns
cmp
xor
lods
enter
mov
out
mov
jge
fisubrs
rorb
dec
or
push
or
sub
cmp
sarl
lret
fcoms
pushf
mov
jmp
and
push
ss
adc
adc
mov
fidivl
and
aad
mov
mov
and
jle
aaa
sti
pop
jge
mov
push
js
or
push
loop
xchg
insb
add
iret
mov
sub
mov
inc
xchg
repnz
cmp
rcrl
push
jmp
outsl
push
xor
mov
mov
or
sahf
adc
jmp
push
mov
daa
and
mov
stc
lret
and
fidivs
idivb
xor
sub
push
adc
mov
sti
je
add
std
sbb
test
mov
mov
mov
sub
inc
inc
movsb
mov
cmp
fstps
sub
xor
lcall
push
les
outsl
ret
mov
andl
cmp
push
fucomip
popf
cmp
push
lods
mov
clc
and
addr16
push
push
nop
popf
mov
cmp
xorl
dec
fldl
test
pop
insl
add
daa
xchg
mov
rcr
push
push
push
lods
loop
xlat
sub
pop
mov
repz
adc
add
dec
jno
shl
roll
rorl
sub
mov
jecxz
or
jb
or
std
and
add
lods
adc
cwtl
sub
adc
sbb
movsl
insb
xlat
out
xor
stc
in
and
dec
adc
push
mov
stos
adc
ret
into
adc
dec
jb
push
push
inc
lock
mov
or
dec
mov
jo
add
bound
cs
ret
mov
mov
ret
or
sbb
or
insl
mov
xor
negl
test
sub
mov
and
aas
xchg
rolb
mov
fdivrl
jge
push
push
mov
push
jl
push
cmp
inc
imulb
or
push
jae
adc
jmp
mov
xchg
push
test
add
iret
adc
sbb
fldt
push
or
jge
add
inc
pop
sbb
adc
dec
inc
xor
aam
in
test
insb
dec
xchg
lock
and
push
clc
and
pushf
mov
push
push
adc
flds
daa
lcall
enter
cmp
xchg
into
daa
inc
push
jmp
or
cmpl
push
inc
sub
push
add
cmp
stos
mov
add
lock
xor
push
pop
jne
ja
lock
in
inc
cmp
push
sbbb
push
push
push
enter
aam
fdivrl
in
pop
xlat
cs
xchg
add
lea
shrb
add
ret
push
or
xchg
adc
test
decb
ret
imul
loope
ret
in
int
inc
mov
outsb
lock
es
loopne
lock
pop
cmp
mov
cmpsb
mov
xchg
ret
lcall
enter
inc
in
dec
fs
xchg
out
cmp
aam
hlt
fcoml
mov
xchg
or
roll
sub
and
push
lods
mov
jl
gs
cs
xchg
mov
lods
cld
into
cmp
je
mov
adc
je
xchg
das
orb
lcall
shlb
push
cmp
jg
outsb
adc
cli
jbe
or
inc
sub
jge
push
inc
adc
jle
xchg
sbb
or
jp
adc
outsb
inc
bound
jne
jge
pushf
pusha
outsl
add
out
xor
inc
test
je
xlat
add
or
out
cmp
fnstcw
cmpsb
dec
cmp
sbb
shlb
jp
sbb
push
lock
xor
fs
inc
jmp
inc
repnz
bnd
add
addr16
inc
ja
dec
and
jne
xchg
mov
iret
orb
inc
orb
das
push
pushf
push
dec
jecxz
push
lret
mov
sub
add
or
sub
lret
jmp
add
xchg
icebp
pop
cmpsb
cltd
jmp
clc
or
push
lods
iret
push
push
imul
dec
fnstsw
xor
pop
gs
sub
mov
jmp
test
aas
rolb
movsl
test
hlt
inc
rorb
outsl
push
mov
mov
sti
inc
rcrb
imul
cmp
addr16
scas
addb
pop
xchg
sbb
push
push
fdivl
sub
cmc
pop
xchg
mov
mov
arpl
scas
push
shrb
sbbl
add
add
cltd
mov
stos
inc
xchg
inc
mov
adc
in
arpl
push
pop
mov
adc
push
clc
ret
xor
mov
jl
shrb
movsl
cmp
xchg
xchg
faddl
adc
in
dec
inc
jnp
jae
or
loop
cmp
popa
scas
test
push
jecxz
ret
pushf
or
sub
scas
lods
dec
xchg
cmp
xchg
rcrl
or
mov
mov
or
cmp
das
mov
push
lods
popa
std
addb
test
xchg
or
hlt
xchg
push
mov
add
sub
pop
addb
mov
out
and
xor
insl
inc
lcall
and
pop
outsl
mov
cmp
movsb
mov
add
adc
cs
insl
and
cmp
loopne
movsl
inc
lret
sub
iret
hlt
and
test
inc
mov
mov
push
mov
cmp
ds
inc
ljmp
addr16
test
mov
dec
or
repz
push
loopne
add
fwait
jecxz
mov
sub
lods
xchg
add
nop
mov
ds
mov
lret
xlat
cmpsl
mov
mov
push
aas
mov
dec
push
push
or
loopne
mov
jmp
cmp
add
pop
movsl
lea
ret
push
sub
loopne
sub
add
adcb
cs
fs
lcall
cli
jmp
out
loope
inc
daa
dec
push
xor
xor
sub
test
gs
fldcw
dec
pop
cmp
arpl
das
es
sub
les
adc
test
pop
sub
and
mov
add
cmp
addr16
in
repz
jnp
mov
lahf
pop
leave
push
data16
lock
les
jecxz
in
mov
xor
push
push
push
pop
mov
adc
dec
imul
cwtl
fmuls
out
in
fdivrs
cs
dec
xor
jle
test
inc
xlat
inc
mov
cwtl
inc
fdivrl
mov
xor
cmp
jbe
jp
testl
fdivrs
loopne
mov
fsubs
sub
divb
aaa
sub
shl
adc
add
loope
add
gs
adc
not
mov
cmp
pop
jl
add
shr
cmp
jbe
add
jmp
add
pop
shlb
ret
and
fdivs
add
dec
loopne
jl
loope
add
hlt
pushf
popa
icebp
adc
scas
fsubl
call
enter
xchg
mov
xchg
int
inc
inc
jbe
aaa
or
jb
xor
lock
dec
ja
add
clc
jno
cmp
mov
cmpsb
lock
rorl
call
jle
int3
xor
lahf
movsl
and
dec
pop
add
test
and
mov
gs
cmp
xchg
mov
mov
movb
out
xchg
xor
loope
add
add
pop
jo
cmp
push
pop
pop
inc
jl
fmuls
pcmpeqw
mov
sub
jecxz
xchg
mov
test
movsl
sbb
nop
loopne
mov
nop
or
pusha
xor
xor
jp
fsts
add
sub
sub
aaa
adc
sbb
sbb
jb
sub
lret
es
insb
xor
jo
faddl
pop
cwtl
xchg
sub
inc
pushf
xchg
cmp
sbb
aas
xlat
addr16
push
stos
cmp
inc
xchg
in
jmp
or
lock
mov
xchg
add
pop
push
sbb
xchg
fwait
loope
push
add
mov
lock
rcr
stos
pop
mov
sbb
lcall
mov
psubusb
faddl
xchg
andl
sub
add
lods
je
loopne
mov
gs
dec
int3
push
flds
popf
mov
test
or
loopne
xchg
jmp
dec
popa
add
add
dec
cmpb
shr
outsb
adc
add
pushf
popa
repnz
and
ret
cmp
pop
testl
fstpt
mull
loopne
in
push
add
cmp
push
fcomp
xor
nop
add
xchg
add
xchg
flds
daa
and
sub
or
or
push
movsb
cwtl
aad
pusha
pop
ret
xor
enter
push
sbbb
cli
mov
pushf
push
das
orl
je
xchg
push
lcall
js
sub
mov
out
cmpl
push
femms
pop
push
pop
xor
dec
ret
mov
push
xor
adc
lahf
stos
movsl
rcrb
loopne
push
lock
outsl
adcl
imul
hlt
cmp
jb
pop
xchg
test
cmpsl
mov
js
sahf
out
les
repz
pop
out
aam
mov
jnp
adc
cltd
cmp
sub
push
xchg
nop
push
dec
in
lcall
adc
in
pop
push
repnz
add
cmc
rol
outsb
lock
pushl
sbb
test
inc
ljmp
mov
inc
pop
cmp
stos
movsl
mov
inc
pop
adc
dec
lods
repz
dec
adc
fldt
ljmp
pop
rorb
xor
movsb
daa
xor
pop
xlat
add
xchg
dec
add
test
cmp
adc
jmp
jb
fwait
shrb
lcall
inc
cs
test
pop
dec
push
push
xor
clc
sub
inc
shlb
jmp
push
push
pop
mov
stos
mov
sbb
aaa
loope
pop
insb
lcall
es
pop
or
push
fucomi
mov
and
push
gs
ret
push
mov
pop
xor
mov
mov
lock
ret
xor
cmp
jge
push
movsl
leave
sarb
cmp
cmp
inc
and
bound
sub
xor
or
sub
or
repz
in
pusha
cmp
push
mov
dec
sarl
es
fldcw
push
lock
mov
adc
push
push
loop,pt
mov
push
loopne
jbe
mov
mov
lods
in
sti
push
add
ret
inc
mov
mov
sbb
js
hlt
and
fadds
push
jecxz
jne,pn
inc
dec
adc
and
sbb
in
or
aad
ret
lret
push
aam
in
out
add
roll
mov
test
sldt
jo
xchg
or
mov
mov
push
xchg
add
cmp
pushf
add
orb
sahf
ss
add
mov
mov
mov
dec
jnp
push
mov
or
insb
xor
repz
test
dec
repz
int3
shl
imul
adc
rorb
jns
fcompl
add
pushf
mov
push
cmp
roll
sub
mov
adcb
ret
pop
jp
jbe
loope
adc
imull
sub
add
pushl
je,pt
mov
roll
repnz
jp
jmp
movsl
mov
ja
push
and
mov
mov
inc
cmpsb
pop
and
jbe
call
lcall
add
push
inc
inc
es
pushf
aas
cmp
js
dec
es
js
subb
mov
shlb
inc
add
add
test
xor
inc
mov
ret
je
call
fwait
xor
push
mov
popa
rorl
mov
in
push
mov
cmp
jbe
insl
fnstcw
jl
fsubs
je
sbb
cmovs
test
and
mov
adc
xchg
sahf
rep
shll
or
loopne
stos
xlat
and
jmp
xor
gs
xor
jae
sub
jb
dec
xchg
cmc
das
orb
add
lods
imul
inc
mov
aam
or
lods
scas
sub
jo
or
sub
add
or
bound
icebp
adc
int3
push
insb
adc
jge
bound
loop
movsb
cltd
fyl2xp1
icebp
das
mov
int3
inc
push
adc
mov
loopne
sbb
adc
dec
jo
add
out
and
add
fisubrs
call
adc
cwtl
fs
cmpsl
test
and
and
cmp
fiadds
insb
jns
and
mov
in
adc
out
hlt
add
push
loopne
jge
push
sbb
push
js
insb
sbb
addr16
cmp
xor
test
adc
sbb
imul
les
aaa
push
insb
and
shrl
stos
pop
int3
jmp
add
fwait
jae
sbb
mov
lods
test
jecxz
out
gs
outsl
inc
rcl
inc
int3
scas
mov
xchg
in
push
sbb
jp
aad
mov
icebp
mov
data16
pop
pop
sbb
jno
inc
add
subl
shll
aaa
lods
adc
ret
lea
lcall
xor
test
mov
stos
ss
jns
push
lods
inc
sub
fnstenv
adc
add
les
push
ja
daa
inc
push
mov
vmovaps
sub
fneni(8087
mov
lea
rcl
pop
push
inc
and
pop
pop
sbbl
and
or
out
sub
pop
jno
es
or
sub
inc
mov
sub
cltd
fs
repz
or
fldz
and
sbb
xchg
sbb
mov
lock
mov
pop
stc
sub
mov
pop
push
fistps
in
roll
xchg
in
cmp
adc
xchg
prefetch
decl
mov
ret
lea
push
hlt
pop
test
sub
ja
jecxz
lahf
push
aad
dec
shll
or
stc
inc
dec
ret
and
repz
mov
or
mov
add
imul
xchg
add
repz
ret
sarb
stos
test
mov
lea
fs
scas
mov
lret
sub
cltd
je
add
test
pusha
ret
icebp
push
pop
xchg
push
sub
call
imul
xor
push
daa
adc
inc
cs
cwtl
and
or
push
push
dec
fmuls
xchg
pop
jo
roll
jecxz
cmp
sbb
mov
cld
mov
iret
sub
mov
mov
pop
push
or
jbe
inc
xor
add
jo
movb
push
cmc
adc
xor
xchg
cld
xor
add
push
cmp
cmovs
dec
dec
xchg
in
fs
fiaddl
jbe
dec
dec
add
dec
outsb
enter
out
adc
push
fimull
pop
sub
ja
sbb
pusha
jne
pop
in
sub
js
mov
push
jne
add
push
into
enter
mov
sahf
clc
cmp
jge
jl
mov
push
je
add
mov
mov
xchg
sarl
mov
jmp
nop
mov
sub
push
lret
call
mov
jne
imul
rclb
add
jle
test
adc
pop
add
cmp
inc
mov
adc
ds
sub
aaa
xchg
mov
shrl
into
nop
cltd
stos
jo
add
push
pusha
add
or
jns
sub
movsb
inc
adc
mov
ret
add
add
jecxz
pop
stos
or
mov
xchg
leave
fisubl
mov
aam
mov
adc
es
adc
sub
push
test
add
or
sarl
adc
lods
test
das
jmp
btcl
or
dec
or
jne
and
sbb
mov
adc
movb
sub
inc
pop
xchg
pop
mov
push
cld
or
dec
sub
jae
cmpsl
in
xor
inc
cli
push
jb
mov
sub
ss
mov
mov
inc
arpl
mov
loope
add
in
out
jg
pop
add
in
cmp
lds
ret
in
add
add
jge
lret
sbb
sub
fmulp
jno
xchg
scas
jo
les
inc
outsl
lcall
push
pop
add
imul
jne
and
inc
sub
insl
sub
push
mov
push
lret
out
push
imul
inc
inc
loopne
scas
cltd
mov
add
rclb
aaa
mov
je
mov
roll
or
daa
rep
aaa
lods
jo
mov
mov
jg
pop
cmp
inc
sub
mov
mov
leave
shrl
fdivl
popa
loopne
and
jle
mov
mov
loopne
je
call
and
mov
inc
xor
bound
arpl
sub
popf
or
or
rorb
fnsave
faddl
pop
xor
mov
pop
or
push
insl
loopne
jecxz
ret
inc
cltd
fldenv
or
test
movl
inc
sbbb
push
sub
sub
popa
sub
mov
cmp
bound
repz
push
sub
xchg
inc
sub
mov
in
and
hlt
imul
and
jne
in
push
mov
mov
fisubrl
mov
jo
enter
jb
in
aad
mov
sub
xor
mov
hlt
add
mov
push
push
xor
or
shlb
jns
adc
pop
in
inc
sub
insb
xchg
arpl
jl
mov
and
dec
xor
pushf
fcompl
je
and
pop
jmp
inc
inc
mov
fmuls
jp
add
lods
jmp
or
out
sahf
pop
gs
mov
add
push
sub
mov
outsl
fiadds
fnstcw
inc
add
xor
mov
in
dec
hlt
push
adc
sbb
dec
push
xor
leave
push
xchg
fisubrl
aas
pushf
lcall
pop
xchg
outsl
dec
xchg
sbb
test
pop
dec
jmp
pusha
mov
daa
push
or
outsl
pop
cmpsb
xor
pop
xorb
push
rclb
pop
cmp
out
xor
cmp
add
or
pop
xchg
push
dec
dec
add
lahf
mov
push
arpl
or
addr16
insl
scas
gs
cmp
sub
jne
or
add
sarl
mov
push
or
xchg
mov
ficoml
jecxz
cmp
mov
cld
test
jns
dec
inc
xchg
push
shr
sbb
jnp
inc
ja
add
and
mov
ret
or
sbb
sbb
mov
jo
mov
sbb
add
sub
subb
loop
xchg
rcrb
xor
cmp
pop
loopne
sbb
insb
pop
fs
sarl
ret
or
sub
pop
xor
loope
adc
pop
xchg
adc
dec
out
or
inc
or
popa
and
mov
pushf
or
scas
pop
adc
pop
adc
pop
inc
xor
ret
or
mov
sbbl
adc
push
dec
call
imull
test
cmp
iret
xor
mov
cmp
jo
add
mov
inc
mov
jle,pt
xor
and
insb
mov
xor
gs
mov
stos
dec
lea
inc
imul
aaa
push
popa
pop
pop
lcall
or
xchg
aas
and
ret
popa
inc
or
movsl
and
sub
mov
and
ret
xor
adc
add
push
cmovne
inc
sub
sbb
and
ret
sub
leave
inc
add
fwait
in
sbb
push
mov
repz
jne
lock
jns
movsb
inc
andb
call
push
fisubs
mov
rcrb
loop
mov
sub
mov
enter
fcom
cmp
mov
sub
xchg
inc
push
movsb
cmp
pusha
and
mov
add
les
rcrl
cmp
mov
dec
in
les
out
ret
and
jbe
aad
in
push
faddl
lret
fmull
push
jp
jae
es
cmp
jne
lcall
xor
or
adc
add
mov
or
mov
xor
stos
xor
dec
push
inc
and
pusha
repnz
add
dec
add
std
in
xchg
dec
jno
enter
mov
stos
ds
cmp
add
sbb
pop
mov
adc
cli
mov
or
mov
lret
and
dec
sbb
cmp
dec
xor
sbb
loopne
lock
aam
push
in
dec
leave
loopne
inc
add
dec
gs
fwait
sbb
repnz
cmp
add
push
xchg
add
or
or
testl
sti
sbb
push
mov
flds
inc
xchg
int3
aam
aaa
rolb
jl
loope
outsb
adc
movsb
mov
aad
ds
jp
inc
xor
enter
data16
pop
push
dec
dec
popf
sbb
pop
push
push
sub
stc
cmc
bound
pop
jo
mov
pmaxub
xchg
test
cmp
sub
pusha
pop
movsl
popa
add
adc
mov
lret
mull
or
rol
aam
lahf
cmp
loope
adc
jbe
push
pop
jmp
outsl
sbb
add
mov
push
hlt
jge
pop
in
and
or
sbb
xor
pop
testb
cmc
stos
xor
or
pop
scas
aaa
fidivrs
jns
xchg
xor
out
popa
out
pop
jp
sub
mov
or
xor
lcall
jmp
jo
call
test
add
movsb
cltd
pop
orb
pop
mov
sub
xorb
xor
and
sbb
les
scas
dec
aaa
sbb
fs
mov
in
fld
mov
aad
fs
pop
mov
pop
test
into
sub
jns
mov
fdivrl
fdivr
arpl
pop
in
mov
cmp
out
and
add
lods
jmp
push
imul
rorb
and
cltd
popf
jmp
das
rorb
lods
add
cs
movsb
loope
pop
ret
lret
outsb
pop
loopne
and
push
dec
mov
add
xchg
nop
pop
insl
ss
inc
test
sbb
xchg
mov
pop
shll
add
sub
xor
jmp
cmp
push
inc
xor
and
rolb
mov
or
loopne
xchg
push
xchg
pop
add
add
push
imul
inc
push
or
cmc
and
jp
mov
xchg
subl
cmp
mov
fistpll
lret
repz
insb
imul
shlb
adc
data16
fnsave
inc
cmp
sbb
ret
nop
xchg
add
and
push
xor
cwtl
inc
fists
xchg
jl
ret
repnz
add
and
in
jnp
sbb
mov
and
push
test
cmp
lea
mov
cmp
fidivrl
sub
push
xor
filds
add
cmp
add
out
jl
push
inc
inc
dec
push
inc
pop
add
lret
sbb
mov
out
sbb
jnp
lret
cmp
out
loop
xchg
mov
inc
adc
andl
push
dec
push
sub
pop
adc
pop
mov
or
adc
lods
repz
xor
adc
mov
das
test
fs
mov
xchg
sbb
adc
push
pop
cmp
jbe
inc
and
push
inc
xor
decb
aas
orb
das
sbb
sub
cmp
add
mov
push
xchg
sub
call
push
mov
push
push
jg
in
out
add
cli
std
sub
test
or
cmp
in
cmp
addr16
jo
sbb
leave
repz
xchg
pop
and
sub
jb
add
or
enter
add
add
cmp
inc
or
mov
inc
je
sbb
aas
sbb
sbbl
sub
nop
cmp
lds
leave
jmpw
mov
push
popa
ja
xchg
into
sub
dec
js
inc
inc
or
mov
shlb
hlt
jle
and
sbb
add
adc
incl
push
inc
pop
adc
jo
frstpm(287
or
mov
jmp
aaa
shlb
and
ret
push
xchg
push
push
inc
and
inc
jp
rolb
jl
arpl
push
jbe
shll
mov
gs
adc
popa
pop
pusha
in
xor
sub
les
leave
pop
pusha
dec
sub
push
dec
cwtl
add
jb,pt
sbb
pop
rolb
repnz
or
outsl
movsl
mov
fldenv
sub
adcb
jns
je
sub
lcall
pop
stc
or
and
pop
cmp
jl
jns
or
jp
dec
popl
fcomps
cmp
or
dec
pop
pop
sub
dec
push
cmpb
es
adc
ja
into
jl
shrl
pop
enterw
addr16
mov
add
xor
pop
dec
mov
push
mov
cmp
pop
test
adc
push
xor
les
fstpt
xchg
inc
and
pop
jne
jns
scas
cmp
xchg
sti
push
jmp
ja
fiaddl
push
sbb
mov
daa
je
sub
dec
int
stos
rclb
outsl
inc
bound
fdiv
jne
jl
xor
dec
push
loopw
lds
lret
xor
and
fs
lea
shl
lods
rcll
pop
sub
movsl
xchg
sahf
xchg
pop
iret
repz
mov
adcb
inc
outsl
pop
popa
mov
push
jb
add
sbb
adc
add
nop
xor
xchg
or
dec
sti
js
add
ss
or
add
xchg
add
cmp
test
pushf
lock
push
jo
lret
stos
xlat
push
lock
xchg
and
push
inc
xchg
aaa
push
stos
rorl
mov
dec
xchg
xchg
xor
roll
lock
dec
ljmp
xor
jne
xchg
pop
pop
nop
inc
add
call
push
daa
add
dec
dec
mov
adc
test
mov
dec
inc
dec
out
add
xchg
push
rolb
repnz
test
sub
idiv
jmp
fxch
and
or
push
ret
test
fsubs
cmpsl
sti
adc
cmpl
xchg
loopne
add
ja
sub
xor
insl
es
lods
xor
pop
dec
add
cmp
jge
dec
inc
or
sbb
nop
cmp
out
ss
mov
xor
xlat
adc
adc
jo
fdivrl
or
inc
ret
inc
sub
or
mov
push
adc
jle
xchg
adc
jne
inc
mov
add
mov
into
sbbl
stos
movsl
cmp
and
scas
aad
mov
movsl
cmp
test
xor
inc
or
jns
sbb
add
adc
add
xchg
nop
inc
leave
iret
mov
inc
sbb
ss
xor
shll
fdiv
je
lock
add
imul
fcomp
dec
jmp
mov
jmp
subb
adc
push
or
push
jmp
cmp
fwait
aad
fsts
lea
bound
sbb
into
test
adc
pop
pusha
dec
or
inc
push
cmp
and
inc
inc
xor
insl
nop
in
xor
rolb
or
add
or
lock
sarb
scas
stos
xchg
adc
ret
rol
lea
mov
fs
inc
pop
cmp
idivb
sub
fmull
hlt
xchg
nop
pop
jo
mov
add
pop
and
sub
cmp
push
inc
adc
inc
pop
lcall
movsl
adc
pop
fwait
mov
inc
xor
adc
and
stos
xchg
or
push
andb
dec
sbb
adcl
push
add
rolb
add
stos
jge
or
dec
cmc
add
mov
add
push
popa
addl
add
cmp
or
dec
sbb
cmp
inc
mov
mov
or
orb
push
insl
popf
push
jge
sub
mov
mov
or
pop
mov
jmp
inc
movlps
adc
xor
insb
xor
jnp
push
or
mov
adc
rorb
adc
js
sbb
or
insl
clc
sub
stos
sub
pop
adc
xchg
jne
daa
icebp
jo
fistpll
sbb
adc
outsl
sbb
add
jecxz
and
push
inc
and
mov
xchg
jmp
mov
je
pop
and
add
jne
faddl
ja
jle
dec
lahf
imul
inc
or
data16
or
xor
inc
push
jbe
test
pop
addb
sahf
pusha
lea
ss
into
insb
xor
xchg
gs
adc
je
mov
addl
lods
cmp
add
push
or
loope
add
xchg
inc
call
loope
adc
pop
sbb
push
lods
sub
xlat
sti
scas
push
popa
nop
js
and
adc
and
dec
or
mov
mov
jg
cmpl
jne
adc
pop
ret
and
je
in
hlt
push
imul
jmp
mov
jb
inc
popa
ret
rclb
add
sub
fwait
outsb
and
inc
and
jbe
popl
adc
jnp
inc
adc
pop
cmpsb
clc
clc
jmp
inc
lahf
mov
jg
or
dec
hlt
call
adc
push
add
add
mov
aaa
push
lods
push
test
mov
pop
fadd
adc
hlt
stos
cli
lea
mov
cmpsb
inc
inc
dec
inc
test
into
enter
dec
in
push
sub
adc
or
test
bound
imul
or
sarb
add
imul
arpl
mov
pop
xchg
push
dec
lcall
cmp
cmpsb
jmp
in
rcrb
in
lods
add
or
sub
daa
je
inc
pop
inc
mov
sub
imull
out
cmpsb
sahf
jo
leave
jo
into
push
jne
sbb
or
pop
es
push
pop
push
xchg
push
jl
mov
pop
addl
or
add
enter
dec
mov
icebp
lcall
repz
xor
push
and
mov
ret
inc
fs
and
or
xchg
clc
mov
or
mov
add
pop
inc
ss
mov
and
xchg
jnp
outsl
das
movsb
xchg
sarl
test
ret
and
dec
jecxz
lea
jmp
cs
sub
add
inc
loop
loope
lcall
sbb
xchg
addb
sbb
cwtl
sub
loope
scas
push
mov
nop
pop
push
adc
mov
pop
jl
je
mov
dec
jbe
and
rclb
push
push
xor
add
inc
add
add
jo
xor
subl
aam
push
and
jb
adcl
adc
jo
jb
enter
or
add
mov
adc
dec
shl
inc
cmp
je
fiadds
js
push
dec
jb
cmp
stos
adc
sbb
enter
in
xchg
inc
arpl
mov
or
jbe
push
add
pop
push
test
push
push
je
in
xchg
push
lock
addl
add
aad
clc
add
add
enter
adc
test
add
mov
adc
or
xorb
adc
lock
mov
pop
sub
jae
sbb
cmp
inc
sbb
or
xchg
pop
inc
in
dec
sahf
push
sbb
or
sbbb
clc
rolb
das
and
pop
fdivrs
mov
inc
sbb
leave
mov
pop
inc
sarb
in
sub
adc
nop
inc
add
rcrl
and
cmpb
inc
popf
pop
cmpsb
mov
inc
and
push
sub
in
inc
push
les
sbb
jae
dec
leave
mov
mov
cltd
and
cwtl
lahf
cwtl
loopne
jo
call
subb
movsb
cmp
xor
mov
adc
leave
and
lock
jo
sub
popa
inc
insl
inc
jbe
push
jmp
mov
in
push
cmp
or
test
xchg
add
in
outsb
les
ljmp
adc
mov
hlt
xchg
lret
pop
mov
sbb
and
sub
fcom
or
inc
inc
add
rcrb
inc
and
das
testb
mov
ret
or
add
mov
lret
jecxz
sub
mov
push
push
pop
mov
xor
in
sbb
imul
add
rclb
mov
in
fdivrl
add
dec
ret
out
xchg
out
fldcw
mov
test
pop
loop
mov
les
adc
hlt
mov
nop
imul
fsubs
pop
mov
dec
cld
xchg
sub
cmp
or
inc
jecxz
sub
js
nop
push
jecxz
sbb
push
jo
out
xlat
mov
or
add
popa
movsb
ret
inc
or
inc
add
xor
scas
cmp
test
nop
inc
sub
insl
aam
mov
or
xchg
jbe
lods
push
push
xor
or
mov
or
adc
inc
pop
xchg
lds
jg
pop
mov
push
jo
cld
xor
sbb
test
stc
or
sub
pushf
add
sbb
aad
add
mov
subl
ss
and
mov
sbb
xchg
xor
fsubl
jnp
xchg
mov
jecxz
push
fsubs
adc
xchg
mov
shrb
sarb
dec
shlb
or
ds
push
adc
or
push
aas
cmp
mov
pop
sub
int
lea
call
cli
mov
mov
add
cmp
and
mov
popf
notb
push
mov
push
enter
mov
push
fldl
leave
cli
push
lods
shl
mov
rcrl
cs
movl
inc
cmp
xchg
add
push
xchg
cmp
jmp
mov
sbb
add
shlb
into
ret
cmp
nop
jecxz
pop
jno
sarb
mov
inc
push
dec
insl
mov
pop
cmp
jmp
enter
fnsave
and
iret
iret
mov
xor
rolb
mov
movsl
jl
jge
sbb
adc
dec
imul
sub
inc
sbb
mov
xor
dec
les
rolb
sub
or
push
popf
hlt
or
or
movl
add
and
pop
xor
ror
mov
leave
int3
inc
cmp
adc
mov
sbb
das
jg
or
popa
and
add
add
push
scas
lcall
movsb
sahf
movsb
repz
ret
cmc
xor
clc
sbb
sbb
dec
xor
rcr
adc
mov
adc
ljmp
gs
mov
add
call
jle
jmp
cmpb
xor
shr
push
popf
lods
rcll
push
pop
add
arpl
mov
cwtl
rol
movsl
and
jne
movsbl
and
pop
repnz
xlat
popa
stc
cmp
jb
jbe
push
paddb
cmp
je
outsb
push
mov
xorb
popl
gs
dec
int
testb
and
xchg
dec
lret
fildll
call
adcl
sbb
loopne
test
adc
addr16
mov
add
ret
jle
loopne
cmp
add
xor
inc
imull
cmp
je
rcrb
cmc
ret
pop
cmp
jl
cmp
xchg
fbld
inc
loop
out
xlat
jmp
adc
mov
add
push
fimull
adc
fistpl
add
insb
mov
adc
xchg
imul
mov
xor
rolb
lret
ja
fdivrp
add
fcmovu
ret
jmp
rol
loop
pop
cld
add
and
push
add
add
jb
jb
push
pop
or
mov
jmp
or
jmp
or
jno
jmp
mov
jmp
por
jmp
adc
pop
mov
jmp
adc
dec
adc
dec
adc
mov
pop
jmp
sbb
xor
mov
sub
jmp
sbb
and
mov
pop
jmp
and
or
push
mov
and
pop
hlt
inc
pop
push
outsl
sbb
ret
subl
push
lahf
sahf
divl
push
movsl
sti
push
add
or
jns
out
sbb
sub
cmp
jns
out
dec
dec
push
push
sahf
out
sahf
pop
popa
imul
sahf
out
jp
test
out
cwtl
popf
mov
sahf
lods
mov
mov
in
incl
add
add
push
pop
or
and
or
or
push
movups
adc
adc
push
pop
sbb
inc
in
lcall
sbb
sbb
push
pop
and
and
aas
push
fsts
out
testl
fdivr
neg
xor
cwtl
lahf
mov
pop
inc
and
sbb
inc
std
add
test
xchg
adc
pop
scas
js
cmp
cmp
pusha
stc
mov
test
dec
int
xor
sbbl
add
pop
add
or
xor
dec
dec
mov
push
jnp
fwait
xorb
ljmp
jb
inc
lea
ljmp
adc
inc
jo
mov
jl
pop
inc
dec
mov
jns
lock
pop
push
outsl
add
ljmp
loopne
pop
mov
rclb
fdivrl
pusha
fidivs
cmp
arpl
jb
xchg
rcrl
mov
cmp
fdivs
mov
or
push
inc
cmp
fiadds
adc
shrl
enter
push
jb
or
jns
insb
leave
fcompl
push
popa
mov
or
push
test
mov
shlb
clc
adc
sbb
ljmp
fwait
and
subl
movsb
sub
push
push
aaa
push
leave
add
js
faddl
push
jge
lea
adc
inc
push
sub
rolb
pop
mov
adc
ret
movl
mov
adc
cmp
cmp
dec
aas
pop
clc
add
sbb
stos
jl
and
scas
add
pusha
pop
mov
es
sbb
test
mov
jb
aam
ja
lea
imul
cmp
and
shlb
shrb
lods
scas
mov
stos
lcall
es
sbb
popa
inc
dec
imul
or
test
or
pop
cmp
push
add
or
lds
orb
or
in
scas
add
cs
lods
test
cwtl
xor
xchg
mov
test
scas
add
sub
rolb
pop
loopne
rorb
inc
ret
cmp
test
stos
pop
add
rol
dec
mov
lods
and
lock
pop
adc
dec
dec
jo
pusha
push
cmp
fisubrs
movl
xchg
sub
sbb
add
sbb
mov
lea
mov
lret
out
inc
add
jbe
lods
cmc
fsts
inc
popa
jl
jns
cmp
es
cmp
sbb
and
add
hlt
cwtl
and
rorl
scas
mov
adc
insb
ljmp
xor
movl
mov
and
and
insl
std
dec
shrb
add
arpl
in
or
or
and
jle
cld
push
adc
pop
loope
clc
in
stos
or
and
and
push
sbb
faddl
xchg
cmp
jle
xor
jbe
cli
es
lea
cmp
outsl
fisttps
jg
and
or
js
cs
or
gs
or
sbb
adc
add
mov
inc
mov
adc
cli
xor
cmpb
hlt
outsl
or
std
jge
out
icebp
jl
dec
push
sahf
cmp
push
insl
js
je
jae
repz
and
test
xchg
out
nop
mov
dec
daa
pushf
cwtl
push
inc
ror
cmp
jae
push
inc
mov
jl
jecxz
mov
adc
js
push
adc
je
or
imul
pop
push
inc
add
push
in
ss
call
mov
cltd
int3
movl
mov
sbb
cmp
sub
xor
mov
lahf
cltd
ja
jmp
jbe
and
add
ljmp
loope
mov
cmp
dec
sbb
add
add
cwtl
shrb
push
mov
or
add
jo
shlb
js
jne
xchg
pop
ret
lods
jns
push
push
sbb
push
cld
pop
push
mov
xchg
test
sti
mov
sub
adc
inc
jmp
daa
data16
jo
xchg
add
mov
add
mov
inc
inc
add
shlb
cltd
jb
mov
xchg
ss
mov
or
sbbl
and
ret
push
loope
movsb
std
repz
xor
in
pushf
mov
add
dec
xor
pusha
div
sub
sbb
ror
or
cwtl
les
xchg
in
lds
in
add
and
jno
jmp
incl
inc
xlat
push
push
fcoml
cmc
sbb
mov
inc
ja
divl
mov
and
mov
inc
ret
adc
filds
pop
rcll
xchg
mov
ds
add
cld
adc
adc
mov
jmp
and
clc
je
jmp
xor
sbb
bound
mov
push
in
fisttpl
jne
push
movsb
push
add
sub
and
ret
dec
sahf
fwait
xor
sub
mov
or
cmpsl
inc
push
mov
jae
cmp
jmp
push
nop
lret
sub
or
mov
push
aam
jg
mov
in
enter
sbb
fldt
or
xchg
movsb
stc
pushf
repz
or
loopne
jo
je
ss
wbinvd
not
xor
mov
mov
push
icebp
xchg
push
push
es
nop
inc
cmp
xor
adc
adc
out
shrb
xchg
sbb
ljmp
push
push
ret
sbb
push
ret
dec
add
call
mov
outsl
inc
and
or
add
inc
in
pop
dec
push
nop
pop
pop
add
cmp
and
xchg
nop
push
pop
inc
sbb
icebp
adc
and
pop
mov
xlat
es
cmpsl
cmp
dec
xchg
or
and
mov
aam
mov
test
inc
orl
sarl
lea
and
fistpl
bound
fistpl
push
cmp
and
add
mov
inc
jbe
inc
ds
adc
stc
icebp
mov
and
or
xor
or
pop
flds
cmp
pusha
mov
sbb
cmp
or
cmp
sarl
inc
pop
inc
pop
ret
movsb
inc
inc
aad
iret
in
and
pusha
cmp
sub
push
and
and
repnz
testb
mov
cmp
push
pop
adc
out
ret
adc
stc
sbb
cs
push
pop
inc
test
xor
in
inc
dec
in
or
inc
movsl
pop
fwait
pop
add
xchg
cld
movb
in
mov
sbb
dec
or
sbb
push
mov
sbb
adc
scas
inc
jecxz
lea
bound
ret
and
or
cmpsb
call
push
lods
je
inc
mov
push
hlt
dec
fidivl
ljmp
mov
clc
pop
in
je
test
adc
dec
inc
imul
cmpsb
cmp
ss
push
jg
add
inc
mov
dec
sub
inc
mov
pop
mov
ljmp
mov
add
inc
inc
loope
jle
inc
fisubl
mov
cmp
sbb
outsb
sbb
in
xchg
pop
xchg
test
enter
inc
scas
pop
ret
repnz
or
push
sbb
push
or
stos
das
cmp
mov
push
dec
int3
mov
cmp
mov
das
add
addb
inc
xchg
lret
cs
addl
xchg
aam
ds
loope
daa
pop
and
or
inc
popa
in
adc
sbb
cmp
ds
lds
mov
xor
daa
push
addr16
pop
shrl
lock
pop
enter
call
insb
mov
dec
push
lret
nop
lods
pop
mov
insb
sbb
dec
or
imul
mov
es
add
cmp
push
in
xor
xchg
adc
popa
mov
xchg
pop
leave
xor
inc
mov
fprem
jbe
pushl
orl
hlt
push
addb
out
push
cmp
add
cmp
sub
sub
pop
xor
xor
xor
mov
flds
mov
fsubrs
jl
leave
and
and
test
sbb
addr16
insb
adc
xor
cmpsb
mov
in
lea
dec
push
adc
in
pop
add
sbb
sbb
insb
add
add
mov
jl
mov
hlt
dec
mov
push
and
and
pop
inc
aaa
sbb
pusha
mov
push
insl
cmp
push
push
dec
adc
in
repz
sbb
pop
add
pop
jecxz
leave
leave
sbb
ret
lret
xor
rclb
push
dec
xor
and
gs
cltd
pop
movsl
and
notl
cmpsb
add
or
mov
jl
rclb
inc
xchg
sbb
push
movsl
and
pop
test
arpl
inc
adcl
pushl
cmpl
sub
sbb
jne
popa
adc
xchg
ret
sti
aas
sub
cmp
inc
xor
fldl
bswap
push
cmp
jne
push
fdivr
and
and
in
jmp
in
mov
cs
mov
dec
cmp
je
cmp
and
hlt
shlb
push
xor
fwait
inc
sub
inc
mov
andb
and
and
fimull
scas
or
inc
add
insb
je
fildl
mov
or
add
test
pop
divl
jmp
fstpl
lahf
jne
sbb
bound
inc
ljmp
mov
or
sub
inc
into
dec
stc
add
lock
in
fisubrs
pop
jp
dec
test
adc
stc
adc
add
xor
js
insl
mov
repnz
xchg
nop
adc
xor
in
hlt
pop
mov
add
movzbl
fisttpll
xorb
je
ds
data16
repnz
push
cmp
inc
pusha
cmp
enter
sbb
sbb
add
mov
ljmp
les
cmp
ret
mov
lea
jg
sub
daa
ret
cmp
insb
jmp
xor
sub
push
cmp
jge
mov
jp
or
inc
inc
push
mov
add
or
in
aad
pop
push
or
bound
loopne
js
mov
mov
loopne
pop
jle
jecxz
or
sbb
jae
movl
mov
or
push
add
popa
lcall
aaa
in
mov
lds
add
dec
je
add
adc
xor
fiaddl
orb
fs
mov
or
mov
sub
and
mov
xchg
call
dec
test
sbb
or
cli
shr
adc
test
jnp
je
push
add
imul
or
mov
cmpsl
test
inc
add
jmp
sub
movsb
inc
add
push
add
jne
sbb
jnp
mov
pushf
cmp
cmp
fisttpll
add
xor
add
mov
fwait
adc
cmpb
jne
inc
jmp
sbb
das
xchg
jmp
ret
cltd
idiv
inc
inc
imul
gs
jb
dec
cld
mov
adc
mov
push
pop
cltd
fwait
addb
push
add
or
cmp
add
mov
cmp
or
mov
adc
push
push
cmp
cmp
dec
add
leave
xchg
imul
inc
test
jmp
daa
pop
push
or
aas
or
adc
int3
xor
repnz
repnz
mov
jg
or
insl
mov
mov
imul
add
stos
fidivs
movsb
push
ds
jne
decb
lock
das
stc
and
je
cmp
push
sar
pop
cmp
je
cmp
jne
inc
jne
mov
sub
inc
js
je
or
or
add
cltd
add
nop
cmp
std
inc
xor
fstpt
inc
lea
pop
sarb
cli
sub
idivl
pop
mov
xor
jg
arpl
sbb
ret
push
push
push
add
mov
popa
sub
fcomps
call
bound
or
jg
sub
jae
dec
movsl
and
push
jmp
inc
jl
in
mov
mov
push
add
shl
dec
mov
sub
cltd
movsb
fstp
mov
mov
and
and
jg
std
les
outsl
adc
test
or
inc
sbb
push
inc
es
or
xchg
sarl
cmp
mov
imul
xlat
pop
sbb
stos
push
xor
scas
dec
ja
cmp
test
pushl
mov
push
push
inc
cmp
mull
jg
sub
scas
pop
out
imul
mov
mov
roll
mov
js
loop
daa
lcall
inc
dec
imul
clc
sub
add
aaa
mov
pop
stos
addl
aad
das
mov
xor
xor
fsubs
inc
cmpb
sahf
test
or
mov
scas
mov
idivb
dec
jl
pop
fsubr
inc
inc
inc
out
jmp
xor
push
xor
push
adc
push
inc
fs
jne
loop
xchg
jne
ljmp
mov
pop
or
rclb
or
xchg
dec
sti
les
dec
addb
push
shl
ret
jnp
mov
dec
lcall
pop
cmp
je
add
cmpsb
arpl
test
or
add
or
mov
mov
dec
or
clc
pop
clc
scas
push
push
out
dec
add
jne
mov
mov
pop
jle
mov
adc
or
push
sub
dec
pop
adc
jmp
adc
adc
je
and
ja
or
or
repz
insl
pop
lods
jp
ret
mov
rol
add
ret
test
pop
jmp
sidtl
push
test
roll
adc
sbb
movsb
hlt
jp
lods
or
dec
int3
loope
or
inc
adc
inc
flds
je
mov
lods
dec
push
sub
jge
jge
jne
inc
sub
pushf
mov
repnz
sbb
pop
dec
jmp
pop
push
add
repz
push
inc
adc
xorl
adcb
or
in
test
fs
add
movsb
loop
xchg
pop
fadds
nop
loopne
xchg
or
dec
jne
jle
push
je
cli
push
adc
lods
test
jmp
mov
inc
push
loopne
adc
sub
xchg
iret
sub
xor
rolb
inc
push
xchg
andb
and
ljmp
mov
iret
je
inc
add
shl
or
test
push
push
das
ret
mov
jne
mov
movb
push
sub
xor
add
cltd
testb
pushf
insb
sbb
jmp
jecxz
xor
adcl
adc
inc
adcb
mov
dec
je
inc
push
roll
mov
ret
aam
pop
stc
cmp
inc
push
lcall
mov
cmp
push
in
and
lea
addr16
or
adcl
rorb
faddl
and
mov
dec
sub
xchg
push
sub
add
jl
jbe
andl
jb
sub
dec
add
enter
jmp
and
pop
inc
push
cmpb
jne
in
adc
jno
into
jb
lods
negl
bound
addl
cmp
repnz
clc
sub
add
cs
not
push
mov
aas
add
lods
pop
mov
lret
shrl
lcall
inc
or
ficoms
call
xor
test
cmp
je
outsl
inc
add
adc
push
push
mov
or
inc
pop
out
or
xchg
jecxz
sahf
mov
popl
pop
repnz
push
loopne
or
arpl
jp
mov
mov
push
addb
rorl
or
jnp
in
out
push
ljmp
adc
jnp
dec
or
jbe
push
shlb
jp
test
adc
ret
adc
loopne
pop
pop
cmpl
hlt
adc
or
jb
loopne
dec
inc
insb
je,pt
inc
or
ja
push
push
xchg
sbb
mov
shlb
add
arpl
cmp
dec
js
bound
pop
stos
inc
pop
fisttps
lret
xchg
out
insl
dec
jbe
mov
jnp
lock
xor
mull
lods
xor
sbb
adc
and
xlat
pop
mov
sti
fcmovnbe
shl
addr16
push
jo
outsl
loopne
loopne
or
jno
fwait
pop
fists
lret
in
ror
push
and
xchg
pop
ss
push
mov
dec
xor
andb
push
inc
and
xchg
ret
loop
inc
push
sub
andl
fisttpl
inc
mov
pusha
jmp
push
sub
push
and
add
pop
shll
call
sbb
in
outsb
cltd
int3
imul
push
test
leave
add
sahf
leave
mov
lods
bound
inc
sub
jae
out
mov
xor
lea
bound
pop
inc
xor
cmp
jb
cwtl
jmp
pusha
mov
pop
in
arpl
push
dec
testb
fld
je
ret
fisubrl
push
setb
lcall
loopne
or
add
movsl
ss
xor
pop
ffree
jno
movl
add
add
mov
stos
or
mov
cwtl
pop
dec
jne
mov
and
inc
je
adc
cli
cmp
test
and
xor
insl
lret
pusha
cwtl
pop
test
aas
cmpb
add
aam
dec
pop
inc
push
sbb
inc
pop
push
ret
sbb
and
mov
sub
or
sbb
adc
lock
testb
mov
xor
push
mov
jmp
and
fistpll
xor
int
cs
mov
pop
xor
xor
fnstenv
push
or
inc
cltd
pop
sub
and
mov
pop
add
adc
ret
add
in
loope
das
sti
mov
mov
out
cmpsb
inc
stc
cmp
mov
jge
popf
je
adc
daa
jne
xor
std
push
xchg
or
and
sbb
cmp
mov
lock
xor
aaa
hlt
or
mov
in
fidivl
aam
shlb
adc
hlt
les
jne
mov
adc
sub
xchg
std
int3
pop
sbb
fsub
test
pop
dec
add
push
mov
mov
inc
andl
adc
jecxz
gs
loopne
push
dec
adc
inc
and
call
in
addl
cmpsb
jmp
push
push
shlb
adc
sbb
mov
mov
nop
or
inc
dec
sub
test
or
into
jnp
outsb
mov
push
add
and
cmp
inc
mov
mov
or
pop
dec
insb
cmpsb
addr16
inc
sbb
lahf
add
sub
xchg
inc
inc
dec
loopne
xor
pop
loop
rcll
xchg
mov
and
gs
lock
pop
in
movl
add
mov
in
add
shll
insl
jge
push
pop
out
xor
loope
rolb
add
enter
movb
or
mov
mov
imulb
dec
mov
movsb
andl
mov
lock
jmp
addl
and
addb
mov
or
sbb
adc
pop
xor
adc
ds
popf
add
out
test
xor
jmp
fsubr
ljmp
or
incl
std
xchg
ret
mov
adc
sahf
and
add
and
jno
xchg
sbb
mov
filds
adc
sub
sub
or
xor
add
jmp
insl
cmc
call
orl
add
sbb
mov
lret
push
testb
orl
adc
jo
js
loopne
imul
adc
push
test
xor
shll
and
add
ror
add
sub
mov
cmp
pop
adc
inc
mov
xchg
mov
out
movsl
add
aas
and
lods
or
xor
es
inc
pusha
sbb
pop
insb
sub
mov
jl
inc
adc
mov
push
outsb
jno
sahf
xor
mov
mov
push
ret
sub
sahf
or
cs
lea
inc
jecxz
mov
dec
xor
add
lret
xor
sub
js
aaa
fs
lret
add
push
xor
jmp
test
test
and
fimuls
and
mov
xchg
add
mov
add
pop
dec
ss
in
pop
lods
bndstx
or
or
adc
push
inc
mov
push
xchg
pop
imul
and
add
pop
mov
outsl
in
and
add
cwtl
jecxz
mov
sbb
pusha
cmp
mov
lret
inc
rorb
and
or
mov
sbb
mov
mov
xchg
rcr
adc
jns
xor
aad
inc
test
je
cmc
loopne
or
inc
inc
pop
jmp
lret
add
adc
aam
or
stos
push
lret
jns
je
add
xchg
movsb
ss
and
push
cs
sub
aas
ss
iret
mov
add
andl
arpl
adc
dec
int3
sbbb
inc
or
jo
bnd
scas
adc
or
ja
or
add
and
outsb
sbb
int
and
pop
setne
ja
adc
mov
xchg
lea
test
and
test
push
sub
push
repnz
pop
scas
mov
push
push
es
or
mov
mov
inc
mov
js
mov
lahf
push
push
cmp
or
ds
ja
jmp
add
or
add
sahf
sub
sahf
jl
into
push
sbb
pop
mov
adc
cmpl
sbb
leave
jle
jne
pop
push
jae
sbb
mov
cmp
jmp
add
ljmp
inc
movd
xor
mov
test
outsl
jl
push
dec
xor
in
rolb
xor
dec
push
fidivrs
dec
daa
loopne
and
xlat
xchg
or
push
pop
aaa
adc
adc
adc
xchg
cmp
fcoms
fdivl
sub
inc
push
push
clc
in
mov
popa
sti
fs
cmp
adc
pusha
loop
push
jo
mov
js
push
fs
sub
jl
and
mov
jmp
adc
xlat
and
xsaves
push
mov
stc
clc
or
in
mov
js
cmp
mov
or
jne,pt
repz
xchg
xchg
andl
nop
ljmp
push
into
sbb
jl
push
je
loope
scas
out
jae
cmp
pop
mov
jmp
cwtl
pop
adc
cltd
adcl
push
hlt
add
leave
adc
add
sbb
ror
add
mov
out
add
ret
inc
or
shr
rep
adc
data16
fcoms
and
adc
inc
add
sub
sbb
xor
insb
push
ss
arpl
add
cltd
jmp
pop
mov
jg
pop
mov
mov
stos
pop
jg
sub
jge
sub
mov
add
addb
outsl
and
jae
cmp
ja
xor
cmpsl
loopne
inc
jb
sbb
sub
or
pop
dec
shlb
jl
adc
sbb
addb
dec
push
xor
mov
dec
test
test
movsb
add
xchg
test
addl
add
call
aad
push
lock
push
iret
mov
aam
add
add
dec
and
sti
add
cmp
pop
pop
popa
in
js
rcrb
or
bound
dec
inc
call
and
cmp
cmpl
je
mov
mov
rolb
or
je
and
sbbl
mov
jo
sub
fisttpl
gs
sbb
sub
aad
jge
xchg
ja
add
int
push
add
add
out
add
mov
jo
pop
inc
or
add
scas
lahf
push
ret
loop
pop
adc
or
lock
test
scas
xor
repz
addb
lods
add
shll
call
jmp
aas
xor
popa
mov
mov
add
or
sbb
mov
mov
rclb
pusha
divb
inc
ret
or
cmp
inc
out
or
sub
and
aas
pop
xor
mov
add
std
push
cmp
mov
in
call
or
adc
inc
lds
dec
inc
scas
jge
ja
inc
jmp
or
fs
movsl
pop
cs
mov
clc
imull
rorl
jl
cmp
mov
push
shll
xchg
insb
mov
sbb
push
add
roll
jb
into
push
jmp
repnz
inc
push
mov
aam
dec
pop
dec
insl
fdiv
adc
bound
ret
mov
and
sbb
les
in
outsb
inc
adc
je,pt
sar
inc
stos
push
xchg
xor
mov
mov
stc
loope
aaa
mov
and
push
push
mov
sbb
xchg
andb
xor
aam
sti
into
push
jg
insb
sbb
aad
sbb
aam
stc
push
mov
jo
adc
jno
out
shr
adc
fisttps
and
xlat
test
mov
jg
pop
dec
pop
imul
popa
dec
xor
loopne
push
adc
movsb
add
bound
mov
mov
or
fs
sub
testl
xor
cmp
lock
add
xchg
pop
in
pusha
mov
je
cmp
mov
lock
lret
push
addr16
add
rolb
push
rolb
jmp
and
sbb
ret
int
fsubrs
orb
arpl
popa
push
jo
cltd
inc
mov
cli
pop
inc
sbb
cmp
icebp
or
es
inc
fmull
or
mov
icebp
cmp
jmp
push
dec
mov
test
add
or
dec
insb
pop
or
jle
adc
push
mov
test
jne
dec
mov
xchg
jl
sub
inc
aas
aas
inc
aaa
mov
testb
ljmp
push
adc
cmp
adc
lea
inc
or
pusha
test
cwtl
jl
adc
and
dec
jl
jecxz
push
add
jb
or
rolb
mov
dec
or
sub
or
sbb
insl
dec
or
and
add
add
jne
push
inc
cs
push
mov
movsb
fstl
xlat
pop
mov
bound
lret
jne
push
or
adc
cmp
sti
jbe
adc
in
loope
pusha
jle
push
xor
cli
adc
stos
jb
lea
fs
adc
pop
mov
loopne
je
and
add
lods
push
dec
xor
xchg
inc
inc
xchg
push
adc
push
movsl
dec
jmp
add
outsb
js
je
daa
adc
dec
add
das
and
pop
inc
add
push
xchg
pop
add
mov
fsubl
andl
gs
mov
push
push
inc
jecxz
in
mov
nop
push
lcall
or
lock
rorb
jne
or
lods
sub
insb
jbe
push
pop
pop
and
cmp
or
mov
sub
jo
sbb
mov
outsl
mov
or
fidivl
bound
push
pushf
es
lret
fcmovb
push
dec
das
inc
jle
test
adc
cmp
hlt
ds
pop
xor
push
pop
mov
jno
push
add
mov
outsb
mov
jmp
or
scas
pop
and
inc
push
and
sbbb
outsb
add
fnstcw
test
push
and
clc
jg
movsl
add
pusha
jmp
movq
sti
jle
movapd
cmpsb
mov
enter
shlb
lcall
push
add
lret
push
cli
or
je
cmp
and
in
mov
test
xor
jg
dec
mov
xchg
ret
adc
lds
and
in
add
or
add
adc
push
outsb
adc
xchg
lret
ja
sahf
or
pop
add
fadd
roll
jbe
and
mov
addsd
int
sub
fcmovb
cwtl
mov
rolb
adc
sbb
push
inc
hlt
jns
inc
inc
stos
and
push
sbb
movsb
jecxz
push
jmp
or
orb
scas
inc
dec
pusha
pusha
xchg
ret
rclb
pop
rorl
mov
test
jmp
push
jbe
mov
jno
sti
std
mov
adc
lods
ds
inc
sub
clc
ja
mov
mov
jbe
mov
cmp
jne
cmpb
adc
out
andb
inc
pop
mov
inc
inc
and
adc
cltd
add
or
or
mov
pop
xchg
ret
daa
lret
arpl
ljmp
adc
pop
lea
adc
imul
and
dec
mov
sbb
mov
and
xchg
xor
jae
xor
mov
xor
mov
inc
out
dec
mov
jl
jb
out
pop
adc
or
iret
push
cs
inc
push
cmpsb
out
dec
push
mov
sbb
icebp
call
fsts
inc
sub
or
pop
sti
adc
ja
sub
mov
inc
push
jne
and
or
sub
sbb
and
mov
in
adcl
add
addr16
sbb
sbb
sbb
cwtl
and
mov
push
outsb
push
call
fstpl
loope
mov
mov
cmp
cmp
imul
icebp
movsb
jnp
je
jp
xor
mov
sbb
insl
inc
inc
or
in
test
push
or
cmp
call
imul
hlt
pop
lret
pop
cmp
jmp
add
int3
mov
cvtps2pi
fistl
pop
out
mov
push
mov
jnp
sub
or
call
hlt
xorb
lea
fwait
xor
xor
rorb
cmp
les
sbb
inc
data16
fs
sbb
or
adc
inc
cmp
test
xor
lods
jmp
subb
inc
adc
xor
das
jl
sbb
rcrb
fists
push
outsb
repz
andb
jl
lock
inc
sub
stos
cmp
jb
or
scas
int3
outsb
add
pop
sub
or
rclb
push
adc
sahf
aas
mov
ret
pop
xor
and
je
pop
fstl
add
je
jae
push
add
sub
sbb
adc
xor
mov
pop
stc
dec
insl
ret
push
test
daa
sbb
js
lock
shr
arpl
adc
sub
mov
pop
rcl
add
and
shlb
das
cmp
adc
sbb
cwtl
leave
or
mov
inc
hlt
or
ret
or
jl
jne
insl
cmp
aad
pusha
jl
jmp
jp
lret
and
jne
out
jmp
lret
and
add
testb
pop
xor
cmp
fs
rclb
cld
shl
or
cmp
jne
dec
jmp
shr
rdpmc
jecxz
fidivl
mov
jne
inc
mov
lds
mov
push
loope
inc
and
in
sub
sub
popf
rcl
pop
or
dec
inc
dec
push
mov
pop
adc
add
jne
add
sbb
movsb
jae
and
inc
imul
es
xchg
mov
pop
or
mov
cmpl
fidivs
sub
adc
rorb
xor
adcb
leave
fisubs
sbb
cmp
sbb
imul
add
test
xchg
fdivl
inc
lds
loope
push
cmpsb
mov
daa
ss
loopne
dec
mov
idivl
pop
cmpsl
xchg
cmp
xor
sbb
imul
repz
sbb
jecxz
jb
xor
imul
inc
ret
enter
mov
repz
loope
xor
aas
or
pop
sbb
subb
jecxz
add
mov
and
jne,pn
cltd
out
outsl
jb
enter
push
gs
or
sbb
out
int
push
sbb
shrl
lcall
outsl
pushf
mov
jecxz
subb
ret
or
dec
push
jbe
sub
cli
in
cmpsl
aaa
pop
cmp
pushf
mov
cmp
into
lea
and
bound
sbb
jmp
sub
imul
jne
push
adc
or
loope
add
mov
sub
sbb
inc
mov
cltd
out
out
add
add
inc
push
mov
in
add
adc
in
test
repnz
ljmp
dec
pop
sbb
pop
and
or
mov
push
inc
or
add
inc
mov
sbbl
ja
je
jbe
or
adc
les
nopl
push
lock
sub
jp
push
dec
repz
xor
jns
ja
jge
sarl
adc
adc
inc
mov
dec
or
je
or
inc
in
xchg
cs
pop
popa
add
negb
clc
dec
mov
movsb
pushf
lock
xchg
mov
sarl
jne
das
out
imul
pop
push
add
mov
push
push
xchg
add
and
in
rcrl
add
fwait
rclb
dec
add
jp
dec
test
sbb
ljmp
out
mov
pushf
std
xchg
hlt
cmc
repz
frstor
xlat
push
jo
pushf
jo
pop
js
push
add
mov
fisttpll
inc
pop
sub
jmp
push
sub
add
sub
sahf
jnp
jb
mov
cmp
in
js
or
pop
mov
sub
ret
aaa
sbb
pop
pop
gs
mov
pop
sbb
add
pop
push
push
cld
adc
push
xchg
push
hlt
movsl
push
ja
mov
jbe
lea
adc
sbb
jp
sub
xor
inc
orl
aam
push
sbb
add
push
clc
jbe
into
nop
sahf
and
and
cli
out
es
pusha
sub
mov
add
insl
jmp
out
aas
sbb
push
rclb
pop
repz
imul
add
jmp
stos
rolb
cwtl
inc
jnp
adc
divb
jl
je
mov
movb
pushf
pop
incb
cs
fcomps
cmp
push
testl
repnz
pusha
xor
rolb
and
push
inc
sbb
cmp
stos
add
pop
add
add
and
cmc
cmc
jno
add
jmp
sahf
mov
add
hlt
cmpl
push
aad
lods
add
loopne
adc
add
inc
jp
nop
push
js
movsl
add
test
insb
fimull
sub
or
rolb
out
rcrb
push
test
shl
mov
sub
in
lock
adc
sub
push
js
ljmp
inc
into
test
hlt
mov
dec
push
into
adc
stc
rolb
test
push
rcrl
push
add
bound
lcall
js
sbb
aam
ret
push
adc
js
add
dec
jne
jmp
dec
test
cs
lret
add
mov
dec
es
jne
mov
add
jae
aas
or
xchg
push
push
mov
dec
push
cmc
mov
add
adcl
jno
idivl
push
shrb
jae
outsb
into
and
fwait
fwait
negl
add
cmp
jne
mov
push
cmp
jne
mov
es
jne
jmp
mov
cltd
adc
or
and
jb
mov
dec
or
jns
pop
inc
adc
jmp
std
push
out
jle
xor
cld
cld
jmp
fldt
mov
in
adc
adc
inc
inc
inc
into
lcall
add
inc
stos
inc
adc
aas
mov
mov
add
jb
jecxz
gs
mov
in
adc
repnz
and
aaa
push
pop
sub
pop
loopne
xor
pop
inc
jb
mov
movsb
testl
adc
add
adc
add
or
pop
std
andl
adcl
pop
pop
sub
nop
pop
pop
or
outsb
or
sbb
lods
or
add
sbb
and
out
int3
adc
push
daa
adc
or
pop
add
hlt
pop
cli
inc
push
loopne
ja
je
movb
jmp
xchg
adc
and
mov
incl
cwtl
in
or
jg
add
mov
ss
sbb
in
sti
add
rclb
add
jbe
add
push
xchg
icebp
and
mov
ja
jae
out
call
mov
addb
jb
lea
movsb
inc
mov
or
push
and
mov
call
pop
adc
orb
add
arpl
add
mov
in
push
shlb
test
call
add
xchg
mov
add
adc
mov
es
mov
push
mov
hlt
fldt
nop
push
and
les
das
in
mov
ss
out
xor
adc
cmpsl
add
insl
xchg
rorb
inc
call
or
clc
loop
inc
and
fdivs
fistps
popa
lcall
incl
jge
not
and
sub
dec
sub
notb
pop
pop
adc
pop
cmc
xchg
ret
sbb
imul
mov
fnstcw
and
push
adc
loope
add
xor
pop
mov
push
ja
inc
inc
lcall
push
lock
sub
or
in
sti
and
mov
inc
je
mov
cmpsb
or
mov
sbb
or
add
lock
inc
test
xor
fwait
cmpsl
jnp
mov
or
push
scas
xabort
roll
add
mov
inc
cmp
jb
or
ret
shll
cmp
lods
and
inc
adc
ret
adc
or
add
xor
fdiv
mov
call
ja
test
or
lea
iret
insb
push
sub
or
dec
or
push
adc
jle
jle
or
mov
mov
xor
xor
xor
jo
and
sbb
cmp
add
out
sub
and
fwait
mov
rolb
ret
je
shr
cmp
inc
xchg
jecxz
daa
test
je
hlt
and
dec
pusha
aas
iret
faddl
aam
xchg
pop
addr16
pop
sub
out
outsb
or
cld
aaa
sbb
add
and
icebp
mov
out
adc
or
rcl
lcall
aas
aaa
xor
shlb
lret
mov
mov
bound
cmpl
pop
js
cmp
cmpsl
mov
cmc
rcrb
xor
inc
jns
pop
inc
jmp
cmp
jecxz
outsl
mov
add
add
sub
fwait
cmp
mov
stc
xlat
hlt
stos
pop
inc
adc
cmp
cli
push
xor
adc
push
mov
cmp
je
cmp
and
ds
add
jne
pop
fmuls
xlat
js
data16
adc
loopne
mov
outsl
test
and
je
sbb
sub
pop
sti
inc
mov
sbb
jmp
sub
ljmp
or
xchg
les
jbe
push
add
and
dec
rcl
adc
push
in
aad
out
push
rclb
shl
cld
std
nop
dec
inc
lea
sbb
sbb
mov
sahf
insl
or
push
add
inc
xor
mov
push
mov
push
ret
test
inc
imul
dec
insb
jmp
popf
cli
mov
xor
ret
sub
addl
xor
mov
ss
mov
pop
lock
js
cli
or
add
repz
adc
and
adcb
or
push
push
shlb
cmp
sub
lds
push
mov
mov
xor
mov
or
cmp
dec
jo
xor
aaa
fimuls
mov
repz
in
pop
arpl
out
jmp
insb
sbb
inc
push
xor
xor
movsb
mov
or
sub
adcl
push
xchg
test
cld
fisttpl
pusha
add
incb
shl
add
lea
push
adc
or
inc
sti
aaa
test
add
cmp
mov
adc
and
push
fsubrs
and
adc
xchg
andb
and
inc
das
daa
jne
movsl
jnp
push
or
cmp
mov
or
dec
mov
or
add
mov
pop
dec
loop
shll
test
push
jmp
icebp
adc
push
imul
stos
in
outsl
int3
movsl
xchg
and
inc
pop
dec
ja
or
xor
push
mov
fsubs
and
mov
or
sub
sub
rorb
add
or
outsl
adc
push
cmc
out
jbe
pop
jp
cld
cmp
mov
mov
mov
mov
ror
ret
jecxz
mov
roll
int3
add
mov
pop
inc
add
inc
fdiv
sub
pop
add
in
sub
mov
mov
inc
rclb
add
sbb
rclb
je
pop
and
fcomps
or
jne
add
icebp
cmp
cmp
adc
or
call
inc
jne
or
push
into
and
jmp
xor
mov
push
mov
dec
stos
dec
jle
mov
pop
sbb
jne
ja
movups
mov
or
pop
aam
clc
test
or
dec
test
jge
mov
ror
inc
jb
out
push
mov
mov
sub
in
lret
add
popa
inc
pop
add
ffree
aaa
jo
adc
hlt
in
pushw
pop
out
test
ja
je
push
insb
push
mov
cmp
pop
addl
dec
test
cmp
pop
iret
jp
hlt
and
mov
and
decl
mov
push
stos
inc
add
cli
add
pop
aam
popa
test
mov
pusha
adc
cmp
jo
rcll
dec
mov
add
ficoml
test
dec
pusha
dec
loopne
dec
dec
pop
push
pop
cmp
pop
dec
rclb
lcall
push
cmp
out
sbb
mov
inc
fmuls
mov
mov
aam
add
adc
sbb
inc
adc
imul
mov
hlt
add
or
cs
push
testb
and
xchg
loopne
mov
jo
pusha
push
test
add
dec
dec
inc
test
stos
mov
and
lods
push
mov
push
in
mov
mov
sbb
and
lods
pop
das
or
fisttpll
cmp
adc
xor
push
jo
adcl
pop
adc
ret
or
faddl
div
add
push
clc
adc
fs
scas
add
sbb
mov
popf
inc
je
and
inc
mov
or
sbb
in
callw
or
mov
movsl
jmp
dec
je
add
or
push
push
out
inc
pop
or
push
or
insl
jns
ds
inc
add
sub
ret
imul
push
pop
rcr
mov
adc
sbb
clc
outsl
xchg
rolb
out
jo
lea
test
lea
mov
mov
push
add
mov
inc
xchg
push
push
ds
push
push
push
addr16
lock
push
jne
mov
adc
add
dec
jne
or
fs
adc
pop
repnz
sbb
jbe
and
test
and
mov
movsb
dec
xchg
cmovp
xor
or
daa
pop
je
jg
mov
mov
push
jo
jl
clc
loopne
imul
js
push
pop
cmp
jbe
leave
add
ja
in
imul
pop
rorb
add
dec
pop
add
or
sub
mov
push
pop
cmpsl
loopne
or
or
push
jle
leave
and
insb
mov
ret
mov
scas
or
push
or
sbbb
jmp
cmp
add
cmp
mov
pop
test
data16
ss
pop
notl
xorl
inc
sub
mov
shrb
mov
add
sub
add
test
jmp
hlt
fdivs
push
push
adc
dec
mov
sbb
fst
cmpsb
mov
sbb
test
adc
lds
or
dec
and
xchg
shl
fcompl
clc
mov
pop
jle
call
aaa
push
pusha
ss
mov
mov
or
lea
xchg
xchg
pop
sub
or
push
inc
push
shlb
add
fadds
ja
push
pop
int
add
test
sarl
xor
nop
sub
shl
rclb
movsl
push
pop
or
outsb
jmp
and
ret
cmc
dec
sub
jb
push
push
roll
stos
clc
sti
or
sbb
dec
xorl
pop
mov
imul
into
cmp
subl
dec
add
push
inc
lods
movsl
stos
sbb
sub
or
cmp
add
pop
and
sarl
inc
push
rcll
lahf
data16
push
stos
mov
or
xchg
clc
push
cld
test
fisttpll
xor
mov
lods
fists
adc
fs
lret
fdivs
sub
and
pop
adc
stos
dec
jns
pop
imul
out
add
jl
cmp
cmp
cmpsb
mov
mov
jmp
dec
fiaddl
cmp
or
mov
push
add
inc
inc
add
jmp
divl
dec
loope
bound
sbb
shr
rcrl
pop
stos
xlat
je
xor
fs
jb
insl
stos
xor
push
adc
xor
into
in
sets
push
cmp
push
sahf
int
push
mov
jno
and
jg
add
add
add
jnp
shrl
inc
mov
fdivrs
mov
lret
inc
dec
movl
test
cmp
dec
jne
pushf
xchg
push
sub
incb
stos
mov
adc
dec
and
xor
xchg
xchg
mov
orl
xchg
xchg
inc
mov
push
clc
ret
popa
mov
push
sbb
sub
jmp
mov
test
or
adc
mov
mov
push
pop
cltd
and
xchg
mov
ja
and
push
fdiv
adc
adc
aam
pop
lret
sbb
mov
xchg
xchg
xorb
add
inc
lea
inc
fcomps
fs
aam
mov
xor
call
xchg
sub
mov
dec
pop
getsec
popa
loope
lock
and
lock
or
xor
lcall
lret
rorb
mov
scas
stc
and
shrl
cld
jmp
and
push
mov
and
stos
ljmp
frstor
xor
cmp
sarl
scas
testl
inc
ja
or
in
outsb
jbe
mov
rorl
mov
ret
dec
inc
rorb
test
push
lock
inc
movsl
in
cmp
sbb
jmp
pop
adc
xchg
push
mov
or
lcall
repnz
rcll
or
arpl
cmp
dec
cmpsl
lock
mov
jo
add
addr16
add
adc
xor
ret
mov
fisttpl
sub
inc
pop
inc
sahf
addr16
jp
xchg
inc
test
xor
add
sbb
adc
push
mov
sub
push
loopne
sub
and
xchg
in
dec
inc
mov
push
repnz
push
dec
popf
jl
aad
mov
xchg
mov
and
mov
mov
orl
inc
jb
loopne
ret
pop
and
cmp
cs
jb
jb
jl
sbb
mov
dec
mov
swapgs
lds
jne
out
maskmovq
clc
orb
loop
lods
or
rep
enter
push
add
pop
sub
push
mov
or
insl
shll
js
enter
in
loopne
sbb
nop
es
adc
push
inc
and
mov
test
mov
or
inc
mov
mov
mov
add
push
dec
sbb
push
dec
add
xchg
inc
xor
xchg
mov
movl
pushf
sahf
jmp
jns
mov
inc
in
jns
out
call
out
sahf
out
hlt
clc
clc
cld
loopne
inc
or
loop
xor
xchg
jp
sbb
jmp
into
call
lcall
sti
sbb
insl
and
push
fcompl
jbe
push
lea
jl
cld
pop
and
scas
loopne
or
adc
out
xchg
rcll
mov
adc
inc
insb
nop
push
addb
frstor
test
add
out
add
xchg
add
mov
add
dec
dec
addr16
mov
popa
gs
mov
jns
testl
inc
out
js
dec
push
arpl
sbb
sahf
out
sahf
sbb
adc
adc
jns
out
or
or
add
cmp
push
test
ret
xchg
test
push
add
pop
mov
inc
pusha
daa
ja
xchg
pop
stos
fbld
xchg
test
shlb
add
cld
cmp
inc
or
out
divb
jl
push
iret
push
or
je
mov
test
add
stc
hlt
xorb
testb
jne
pop
mov
out
lock
pusha
mov
add
cmp
pop
jl
or
sti
pop
pop
pop
xchg
add
inc
and
jne
push
and
movsl
sbb
sar
pop
mov
ss
mov
aad
pusha
cmp
dec
test
and
mov
cmpsl
push
mov
lahf
pop
aaa
pop
cmp
cli
push
cwtl
mov
aad
cmp
inc
sbb
push
push
adc
adc
or
jmp
negb
cmp
lods
add
std
push
fstl
aaa
test
inc
cmp
jbe
push
inc
sbb
or
sbb
or
xchg
popa
xor
call
sbb
mov
gs
or
and
test
icebp
mov
lods
fists
add
mov
shll
call
mov
jo
cld
add
orl
mov
cltd
call
or
test
clc
loopne,pt
out
and
sbb
les
dec
das
push
lock
daa
pop
lcall
movsb
rcll
in
pop
or
lods
test
push
inc
enter
and
pop
std
movb
shll
insb
pop
jmp
mov
leave
sub
mov
inc
mov
mov
push
push
inc
jo
rcrl
mov
push
fcomp
lcall
or
add
sbb
or
inc
repnz
or
adc
adc
ficoms
pop
rolb
or
xchg
xor
pushf
orl
cs
add
cmpsb
cmp
xor
add
je
sub
pop
cld
cmpsl
pop
xor
jmp
sub
rorl
lret
je
rep
mov
pop
nop
dec
cltd
dec
ljmp
cmp
les
into
jnp
mov
lahf
fistpl
mov
mov
mov
cwtl
or
mov
int
cmp
push
pusha
sub
pop
pushf
rcrb
xchg
imulb
or
xchg
gs
addb
nop
lock
dec
mov
pop
rolb
fwait
dec
std
adc
cmp
ja
out
fs
hlt
fcompl
xlat
inc
xor
arpl
insb
jmp
rcl
aam
sbb
js
les
jb
inc
push
jo
cmp
mov
jge
pop
sub
mov
rcr
inc
sti
cmpsb
xchg
andl
or
movsl
xor
adc
pop
add
xor
jecxz
ds
add
loopne
fcoml
push
popf
aam
sarb
fstpt
clc
or
test
faddl
lods
mov
js
sub
mov
add
hlt
fucomip
mov
jae
aam
aaa
dec
cld
xor
into
or
jae
adc
and
pushw
in
xchg
jno
insl
push
jne
stos
dec
mov
mov
or
pop
sbb
je
pop
mov
push
add
sbb
imul
xor
adc
add
sub
or
out
sbb
pushf
sbb
add
jmp
push
jg
mov
mov
pop
test
lock
call
mov
aas
fwait
sbb
pop
xlat
mov
or
mov
xchg
inc
add
dec
pop
cmp
push
add
jbe
aam
adc
push
inc
add
cmc
adcb
jne
push
and
xor
inc
ja
sbb
sbb
push
adc
rclb
push
or
mov
test
push
xchg
sbb
mov
dec
clc
cmp
push
adc
mov
dec
ljmp
jns
ret
inc
mov
shll
insl
xchg
add
mov
push
inc
jo
iret
inc
cwtl
jne
ret
and
ljmp
rcrl
into
fnstsw
jge
ss
add
jmp
popa
cmp
adc
mov
push
xor
pusha
stos
pop
js
mov
add
rorl
mov
pop
xor
ja
pop
mov
mov
push
add
sbb
stos
cmp
ret
jle
or
movsb
shrb
mov
adc
idivl
lcall
sub
dec
aas
das
pop
pop
addl
push
rcrb
into
inc
rorb
popa
roll
sahf
js
pop
push
pop
push
sbb
ja
dec
in
mov
mov
mov
lret
shl
fdivrs
loope
push
jle
mov
lea
xchg
popf
jne
vmread
or
push
sarb
inc
sbb
sub
sbb
xor
lods
call
cmp
testl
cmpl
ds
cltd
or
inc
loopne
pop
ja
or
mov
loopne
mov
sbb
sar
pop
or
ror
testb
push
sub
lea
cwtl
sti
or
pusha
mov
lret
sub
or
je
or
adc
outsb
sub
scas
mov
enter
or
add
sub
roll
div
sbb
notb
mov
mov
adc
push
mov
add
mov
jl
sub
push
imul
shrl
mov
ja
movsl
mov
adc
lods
add
in
sub
jae
adc
push
or
inc
insb
sbb
test
xor
test
mov
ds
shlb
add
sbb
pop
and
push
sahf
cmpl
sbb
add
sub
mov
jno
sub
inc
fs
aaa
movsl
mov
imul
cs
sbb
adc
sub
or
call
mov
test
shll
pop
inc
das
xor
cmp
and
sbb
sbb
mov
sub
adc
or
filds
cwtl
outsl
jno
inc
mov
inc
adcl
lea
mov
popf
cld
stc
adc
je
push
sub
je
push
loopne
jae
and
imull
xor
push
fisubrl
sub
pop
adc
das
mov
add
sbb
or
dec
and
lock
jo
pusha
push
loopne
mov
dec
nop
add
mov
in
mov
sub
adc
or
je
rol
jne
inc
inc
push
xchg
pop
jne
cmp
mov
outsl
sbb
pushf
sub
mov
pusha
gs
mov
jo
dec
test
dec
call
inc
in
notl
movb
or
lea
push
fxam
aaa
ds
lcall
pop
mov
inc
lods
xlat
xor
sete
jo
std
push
bound
pop
jl
stos
mov
je
call
cmp
jmp
sbb
shlb
sbb
inc
mov
gs
mov
jmp
push
pusha
je
or
sub
mov
int
sbb
push
je
add
popa
xor
loopne
fistpll
xor
pop
sbb
arpl
or
xchg
cmp
adc
adc
sub
jmp
or
and
shll
cmpsl
add
push
add
out
stos
fiadds
mov
dec
jne
add
out
jge
xchg
hlt
jmp
cmp
jle
imul
aaa
andb
pop
push
bound
jmp
dec
int
mov
add
mov
mov
lock
nop
dec
dec
inc
fstpt
pop
ret
mov
movsbl
leave
pop
adc
neg
xor
push
cmpsb
rcrl
dec
add
xchg
sbbl
push
sbb
adc
push
push
inc
cmpsl
and
sub
bound
cmpb
jne
and
ret
push
pop
mov
and
data16
mov
jae
sub
ljmp
fprem1
ja
jo
inc
daa
add
mov
inc
out
insb
mov
and
out
data16
push
push
into
fisubrl
pop
bound
in
shl
je
and
orl
jle
jmp
cmp
out
cltd
jmp
xchg
sub
cltd
sbb
sbb
shrb
pop
jl
jae
dec
add
inc
lock
rol
dec
sub
sbb
jnp
or
pop
clc
xor
adc
popf
lock
sbb
mov
or
jne
and
mov
mov
sbb
xor
inc
push
or
jl
or
mov
xor
aas
repnz
sahf
add
jmp
mov
cmpsl
sub
sub
inc
cmp
scas
xchg
in
push
pop
outsl
add
into
jle
cmpb
je
shlb
or
cmp
cmp
in
xchg
aas
mov
es
xor
inc
repnz
rorl
pop
xorb
xor
or
aas
enter
add
sub
adc
jmp
js
daa
pop
xlat
dec
push
int3
mov
fisttpll
shrl
mov
mov
jg
test
jne
jmp
and
out
daa
push
and
sub
pop
scas
and
jg
fsubs
or
add
adc
mov
lods
or
add
add
lret
subl
xchg
cmpsb
xchg
pop
loop
aam
mov
push
add
popa
jo
adc
xchg
jo
add
push
stc
inc
mov
add
xor
lret
std
xlat
add
push
pop
scas
lcall
adcb
scas
mov
xchg
and
jb
popa
bnd
sub
add
adc
movsl
daa
pop
mov
arpl
ret
mov
or
mov
mov
enter
xlat
adc
mov
aaa
mov
jmp
and
cmp
fildl
sbb
scas
and
pop
inc
fdivp
insb
sahf
jns
and
das
jbe
jle
mov
pusha
ficoms
sub
hlt
nop
or
mov
pop
fsubrs
dec
jnp
inc
add
push
iret
repz
inc
cmp
sub
sbb
inc
add
repz
sbb
jmp
in
push
add
sub
cltd
and
push
shl
cld
nop
or
push
xor
pop
add
rclb
pop
pop
inc
add
cmp
repz
mov
mov
add
repz
repz
xrelease
push
adc
push
add
and
pop
dec
sub
jecxz
add
mov
mov
xchg
cmp
dec
xchg
es
lods
adc
dec
inc
xor
xchg
pushf
push
mov
xor
arpl
int3
in
cmpsb
cmp
jg
add
adc
xor
pop
ja
or
mov
and
lods
lods
test
cmpsb
insb
xor
test
inc
xor
loopne
mov
cmp
jmp
jmp
push
insb
jge
in
pop
lea
xlat
xchg
push
xor
pop
mov
pop
cmp
movsl
fmuls
mov
pop
rep
push
mov
add
mov
ss
icebp
or
mov
jb
fbstp
mov
xor
dec
sahf
or
adc
and
push
push
add
ss
ret
or
mov
cmpsb
add
int3
aam
test
pusha
test
lret
lcall
mov
dec
adc
pop
lahf
adc
mov
cmc
and
mov
cli
or
sbb
fdiv
add
js
addb
add
in
sbb
pushl
insl
and
mov
call
lahf
and
add
cmp
je
mov
adc
fisttpll
push
faddl
adc
imul
in
mov
shlb
lock
loopne
fmul
js
or
fstps
push
cmp
mulb
imul
dec
dec
mov
nop
outsl
repnz
cs
sub
movsb
or
sbb
pop
sbb
mov
fistpl
xor
int3
popa
or
or
cwtl
scas
and
or
push
push
push
jb
add
and
subb
pop
push
popl
test
xchg
push
jp
test
dec
jecxz
loopne
add
add
inc
ret
and
mov
js
sahf
cmp
adc
cmp
dec
and
andl
shrl
inc
mov
ror
mov
prefetch
pop
adcb
mov
sti
or
xor
dec
add
dec
ss
les
adcl
inc
aam
mov
sbb
into
inc
sar
ja
mov
rcll
mov
aam
sub
jne
pop
int3
loopne
pushl
adc
popa
mov
cmc
loopne
mov
inc
push
arpl
or
jl
inc
push
pop
testl
mov
sub
jbe
inc
cmp
mov
sub
sti
push
xchg
cmp
and
or
mov
jo
pop
sbb
mov
push
imul
stos
scas
test
mov
adc
adc
icebp
pop
lret
add
inc
sahf
jne
xchg
sub
shrb
xchg
sahf
pop
push
ret
sub
push
push
and
jl
cmp
fwait
xchg
dec
pop
mov
lahf
insb
push
pop
dec
dec
mov
lahf
xlat
ja
dec
loopne
pop
cmp
mov
outsb
pop
stc
mov
sub
mov
inc
adc
xor
inc
push
push
xor
lock
and
push
dec
lock
leave
dec
and
or
or
xchg
xor
es
and
enter
pinsrw
cmp
lcall
pop
push
push
add
mulb
sbb
dec
sbb
push
cld
inc
xchg
mov
cmp
sti
sbbb
mov
dec
xchg
mov
sub
or
xor
mov
call
add
or
xor
addb
dec
and
add
push
cmp
jmp
add
das
pop
jmp
or
add
cmp
shlb
push
pop
add
lcall
cmovs
jnp
test
shll
push
movsb
cs
cs
roll
sub
rclb
sbb
sub
and
xor
dec
test
jae
mov
mov
test
adc
add
xchg
adc
cs
push
dec
jge
cli
ret
xor
jo
in
lods
clc
push
pusha
adc
hlt
pop
pop
inc
push
xchg
mov
lea
cmp
loop
add
and
ret
or
pushf
mov
call
push
repnz
xchg
loopne
ss
add
add
pop
sahf
cmpb
push
and
bound
js
sahf
pop
jns
ret
jo
jmp
imul
test
cs
push
movsl
push
pusha
mov
cmp
mov
je
ja
mov
add
clc
daa
loopne
or
je
cmp
out
es
dec
xor
and
rorl
sbb
int3
or
dec
inc
cmp
add
mov
or
addb
adcl
adc
shlb
xchg
inc
rcrb
aas
xchg
lret
add
xor
loopne
inc
hlt
push
xor
mov
jns
xorb
int3
and
inc
fistpll
insb
jne
jp
scas
popa
dec
xor
inc
jnp
outsb
mov
sub
insb
jg
fwait
adc
adc
jno
es
sbb
xor
sbb
cmp
inc
cmp
xor
and
jb
pop
sub
aam
rcrb
in
adc
repnz
push
mov
nop
gs
pop
push
or
lock
stos
mov
cmp
lock
dec
mov
mov
xchg
pop
adc
jb
pop
cmp
mov
xchg
mov
cld
adc
jl
adc
add
pop
mov
sbbl
xchg
pusha
jl
sub
repnz
shll
add
sub
mov
dec
adcb
dec
daa
movl
add
xor
lds
dec
into
pop
ds
sub
inc
push
jmp
outsb
push
xchg
pop
xor
je
orps
xchg
mov
inc
adc
adc
jns
inc
movl
dec
add
push
loopne
es
fdivrs
add
in
rcrb
mov
pop
cmp
jne
or
dec
xchg
or
movsl
pop
xor
adc
adc
lea
add
out
test
jb
xor
add
inc
sbb
xchg
or
ret
mov
sbb
icebp
push
lock
in
jecxz
push
bound
adc
icebp
loopne
inc
or
aas
inc
loope
rcpps
xor
mov
and
je
loopne
jg
fdiv
jnp
test
test
nop
or
jl
hlt
sbb
inc
lea
push
push
stc
push
add
cmpsw
mov
sbb
inc
aas
xchg
cmpsb
cmp
inc
or
inc
divb
add
dec
sub
sbb
pop
and
loopne
pop
push
pop
enter
loop
in
add
rorb
dec
add
mov
xor
xor
mov
and
or
xor
and
add
aam
or
xor
and
imul
pop
addl
in
push
leave
add
loopne
xchg
inc
push
and
test
pusha
fists
out
and
xchg
sub
adc
mov
pop
mov
xor
or
cwtl
push
add
cmc
fnstsw
rolb
cmp
int
imul
aas
dec
xchg
fwait
sarb
mov
fwait
xor
add
pop
pop
jmp
or
pop
jmp
lea
cmp
sub
push
sbb
mov
lods
clc
xchg
mov
push
xor
xchg
sub
sbb
fwait
xor
xorl
adc
pop
dec
or
lahf
fisubrl
inc
inc
cs
mov
xor
mov
daa
add
lret
mov
adc
shrb
dec
add
sbb
leave
mov
add
inc
addl
sahf
pop
and
jmp
mov
add
dec
cmc
in
idivb
cmp
add
add
or
or
je
add
sti
add
inc
add
sub
add
sub
adc
mov
nop
sbb
rcrl
pop
push
insl
add
xchg
push
sbb
negb
push
add
add
lret
into
mov
xor
jl
and
mov
push
cmp
ret
or
out
mov
add
or
push
or
add
mov
je
sbbl
lcall
xchg
mov
add
jo
sub
inc
andl
stos
add
hlt
mov
sub
mov
mov
inc
lods
push
xchg
cli
sbb
xor
or
push
pop
sbb
enter
cli
add
rol
enter
outsl
push
pop
sub
or
mov
add
into
push
xchg
pop
loopne
dec
cld
cmp
out
cli
xchg
add
adc
enter
insb
mov
shll
add
push
adc
dec
sub
jne
dec
jnp
jbe
loopne
ficoms
push
push
notb
push
cs
sahf
xor
test
jne
xor
mov
dec
and
lret
cmp
insb
idivl
push
orb
mov
mov
jmp
nop
mov
ss
mov
pop
dec
and
testb
leave
sub
mov
cmp
and
adc
sti
cmp
ja
mov
mov
cli
sbb
and
cld
jmp
xor
sbb
mov
in
lds
clc
mov
pop
inc
jo
jg
nop
mov
adc
call
xchg
or
popf
jecxz
or
push
mov
cmp
pop
or
push
in
jno
decb
jle
lret
mov
in
cmpsl
imul
shr
mov
hlt
rcrl
xor
incl
push
movl
inc
ficoml
jb
sbb
adc
cmc
mov
jmp
inc
mov
add
adc
test
add
or
shlb
adc
jl
in
inc
adc
sub
push
stc
inc
inc
rcrb
in
add
xor
adc
lock
hlt
fmuls
cmp
sub
std
sahf
je
push
jmp
lock
pop
mov
inc
add
cmc
push
cmpsl
repnz
inc
sbb
scas
mov
inc
es
jae
cmp
gs
xchg
shll
lock
mov
out
jbe
pop
dec
popf
mov
sbb
leave
inc
inc
jmp
push
fisttpl
sbb
popa
enter
outsb
inc
mulb
enter
std
push
mov
loopne
cmpb
or
insl
adc
inc
ljmp
movb
shlb
clc
sti
rolb
add
jb
mov
xchg
xor
addr16
push
push
ret
clc
push
in
mov
adc
call
dec
jne
mov
inc
btr
cmpsl
inc
inc
mov
sbb
mov
mov
mov
xor
push
mov
inc
dec
jne
std
cmp
stos
mov
jmp
xorb
pop
addr16
lret
jnp
cmpsl
cmp
lock
out
push
ss
test
lcall
inc
add
mov
imul
adc
mov
in
sub
sbb
add
push
and
pop
pop
call
push
xchg
mov
add
mov
xor
inc
push
xchg
pusha
lods
push
xor
mov
push
cltd
add
dec
test
pop
push
mov
xor
xlat
testb
insb
ljmp
add
add
sub
sub
xor
xor
loop
mov
add
out
loopne
flds
call
cmp
dec
sbb
mov
inc
and
jns
inc
sbb
pusha
sbb
inc
jo
fnstenv
inc
sub
ljmp
adc
pop
add
fwait
jno
daa
push
aad
stos
ljmp
popf
jmp
inc
mulb
or
cmp
scas
lcall
add
jle
je
std
and
pop
pusha
and
inc
ljmp
lret
jb
mov
loop
sbb
add
mov
int
dec
xor
lea
or
clc
push
xchg
cmpl
mov
cmpl
ret
loope
pop
ret
adc
mov
addb
sub
rcrb
orl
out
jo
xchg
adc
adc
mov
lock
imul
ret
je
inc
iret
sar
dec
jo
push
mov
adc
pop
adc
pushl
inc
mov
into
int3
adc
mov
movsb
jnp
jno
inc
inc
sbb
sbb
cmc
sub
xchg
pop
movswl
sub
and
nop
mov
sar
enter
test
je
cmp
daa
sbb
inc
mov
lea
jg
pop
movsb
xchg
sbb
or
pop
cld
js
bound
xchg
inc
add
add
adc
mov
adc
inc
mov
hlt
push
adc
lods
sub
cmp
stos
popa
fstpl
mulb
ret
or
dec
xchg
pop
or
inc
aaa
test
add
and
pop
sub
add
test
push
lock
jle
or
add
outsl
xor
push
mov
pop
fisttps
jmp
subb
jp
push
dec
jb
sbb
jle
clc
ret
or
ret
js
lods
imul
rol
test
hlt
inc
test
js
fiaddl
je,pn
test
mull
push
push
inc
rorb
xor
aas
js
scas
push
das
sbbb
pop
iret
push
mov
inc
pop
xor
arpl
push
jo
dec
inc
or
add
jg
roll
dec
pop
adcb
inc
mov
mov
shrb
push
bound
pop
arpl
in
popa
sbb
push
push
imul
dec
and
or
adc
loopne
arpl
clc
pop
dec
das
cmpsl
add
sbb
push
or
fs
aas
cmp
insb
icebp
inc
mov
mov
sub
or
fnstcw
fnstenv
not
call
xchg
or
iret
push
adc
bnd
dec
xor
inc
push
push
outsl
inc
and
sbb
xor
pop
jb
cmp
js
pop
jb
dec
pop
cmp
dec
and
jle
add
sbb
jmp
cwtl
pushf
mov
push
dec
push
adc
aas
jbe
and
cmp
cmp
fst
js
or
mov
mov
insl
jg
jecxz
outsb
adc
lds
or
ja
mov
mov
cmpxchg
mov
sbb
jo
and
jmp
xor
inc
push
daa
sub
adc
jne
mov
testl
lcall
jae
test
int
pusha
and
mov
rcrb
imull
xor
push
inc
pop
add
pop
xor
mov
xchg
arpl
push
mov
adc
add
fwait
inc
inc
mov
mov
lahf
in
test
xchg
sbb
pop
mov
pop
pop
mov
insl
adc
push
mov
sub
xlat
add
xchg
mov
sahf
push
js
pusha
add
lods
ja
mov
jmp
lds
lods
popf
mov
dec
add
ret
sub
imul
rolb
sub
cmpsb
pop
add
add
sbb
or
and
push
inc
dec
rcll
dec
in
add
adc
test
je
rorb
adc
push
fsubrs
mov
push
or
ljmp
loope
shll
fimuls
aam
and
subb
sub
clc
or
mov
jb
addb
inc
jge
push
inc
xchg
pop
lock
out
inc
sbb
push
add
sub
test
stc
inc
pop
inc
loop
mov
push
les
je
push
or
test
addr16
into
mov
jmp
fmull
inc
add
and
or
adc
push
call
push
fldl
or
jecxz
rcl
mov
imul
sbb
enter
fstpl
jmp
addl
je
out
mov
cmp
inc
sbb
popa
pop
add
into
or
adc
lahf
sbb
mov
push
dec
add
and
sbb
mov
add
mov
jmp
adc
jmp
sbb
push
push
lahf
out
ja
pop
loope
pusha
iret
pop
fld1
loopne
xor
js
sbb
sahf
gs
or
stc
cmpsl
xor
orb
fwait
jnp
add
xchg
jmp
decl
mov
in
xor
push
arpl
les
jmp
adc
clc
and
dec
clc
fstl
mov
lock
push
hlt
xchg
jne
mov
and
repz
imul
fmulp
repz
out
jbe
push
dec
push
clc
jns
push
or
lods
movb
pusha
pop
xchg
add
or
jle
cli
mov
std
push
scas
push
mov
mov
rolb
fnstenv
mov
mull
add
and
bound
mov
xor
jbe
jge
je
push
cltd
jmp
inc
faddl
push
jl
pop
pushf
and
or
inc
scas
leave
and
test
pop
pop
arpl
ret
xor
jp
xchg
mov
lahf
clc
and
ret
and
push
push
test
jmp
nop
pushf
inc
test
jl
add
test
xchg
int3
sub
dec
and
sbb
clc
ficoml
mov
mov
sarb
fndisi(8087
or
inc
cld
jb
or
xor
or
adc
int
lret
sub
leave
and
std
cld
add
sbb
pop
or
mov
mov
clc
outsl
mov
scas
lret
sub
pop
divl
adc
sbb
ret
or
int3
push
add
fs
imul
add
sub
out
fbld
mov
sbb
je
insb
push
lock
stos
bound
dec
std
inc
sbb
test
cmp
or
or
inc
and
adc
cmp
hlt
push
mov
adc
xchg
push
mov
mov
push
cmp
fs
sbb
dec
call
push
mov
lcall
jne
rclb
jp
mov
sub
push
addb
or
je
adc
movsb
scas
in
or
das
xchg
lret
call
repnz
pop
xchg
std
mov
ds
das
cmp
pop
mov
ds
pop
pop
mov
mov
push
add
jae
add
xor
fwait
data16
arpl
negb
decl
jnp
add
jno
cmp
mov
jmp
popf
or
sbb
stc
mov
push
sub
add
imul
mov
sarb
in
je
call
push
movsb
inc
pop
rcl
cmp
call
jge
fadd
pop
mov
or
femms
lret
in
lock
push
arpl
mov
mov
dec
leave
in
jne
lret
push
pop
add
mov
enter
hlt
jb
cmp
add
pop
ror
pop
pop
into
ret
shrb
loopew
jae
popa
mov
or
arpl
jb
and
lods
es
ret
push
pop
shlb
pop
dec
data16
inc
sub
sbbb
mov
sbb
movsl
dec
cmp
inc
sub
pop
aad
jg
jbe
pop
and
push
cmpb
enter
ret
add
cmp
lahf
rcrb
stc
inc
xor
imul
imul
test
js
dec
push
imul
dec
data16
dec
orl
pop
stos
dec
cmc
pop
mov
shrb
mov
pop
inc
in
push
sbb
push
sbb
dec
xchg
pop
mov
inc
add
inc
je
push
or
sbb
adc
out
xchg
pop
mov
iret
das
xchg
jecxz
or
inc
fisubrl
jne
xor
je
sar
mov
into
adc
loopne
fsubr
movsl
xor
xchg
mov
or
add
mov
jo
movsl
stos
outsb
jg
add
jmp
mov
inc
scas
imulb
sub
hlt
loopne
lods
scas
vpsubsb
or
jmp
mov
fwait
mov
pop
mov
fdivs
xchg
fs
aaa
pop
pop
cmpsl
jp
sahf
sarb
rorb
add
pop
iret
xchg
ljmp
jmp
cmp
outsl
mov
sub
add
add
daa
mov
es
fs
adc
jns
insb
xor
pusha
addl
popf
inc
lcall
addr16
mov
notb
sti
test
mov
mov
push
enter
loopne
mov
imul
fchs
ret
mov
cli
jge
clts
sub
pop
mov
push
adc
push
testl
test
into
ret
mov
mov
loope
mov
or
daa
rorl
in
std
test
popa
div
into
sbb
or
pop
pushf
sarb
lea
loopne
daa
xor
lret
imul
lret
insl
cmp
leave
inc
adc
movsb
mov
loope
lret
mov
aas
sub
dec
xlat
outsb
dec
or
jo
adc
dec
dec
adc
sub
popl
jecxz
mov
push
movb
aad
mov
pop
mov
aad
fstl
daa
xor
dec
sbb
push
rclb
adc
fcoms
neg
ret
cmpsl
inc
mov
sarl
iret
jmp
das
cmp
daa
xchg
iret
movsl
lea
loopne
xor
or
popf
push
mov
leave
xor
xchg
inc
cwtl
cmp
cmpsl
xchg
fadds
bound
stos
and
push
ficoms
hlt
movb
or
dec
data16
lret
popf
test
pop
xor
jmp
ret
or
nop
jmp
mov
sti
and
mov
in
popa
push
add
xchg
inc
fmull
push
sub
push
clc
sbb
jmp
out
adc
inc
sub
les
sub
pop
mov
int3
sbb
sbb
sahf
inc
notl
fwait
mov
pop
mov
xchg
or
mov
sub
outsl
testb
mov
mov
jbe
jmp
mov
xor
jecxz
les
je
cmp
test
or
mov
out
xor
in
sbb
fiadds
jne
cmp
hlt
push
nop
cmp
test
ficoml
js
cmpsb
jmp
xchg
mov
popa
aas
andb
mov
dec
push
add
fsubrs
imul
add
rcll
fimull
mov
mov
mov
push
es
push
lea
addr16
pop
and
push
cmp
stos
adc
mov
fstps
xchg
mov
pop
pop
shrd
andl
inc
mov
leave
jo
rorl
and
fdivs
jo
stos
sub
leave
rorl
es
mov
sahf
or
in
sub
mov
aas
jo
xchg
xchg
fisubs
loope
test
out
outsl
icebp
bnd
lret
ret
jmp
lock
mov
fisttpl
in
mov
cvtpi2ps
aas
jb
mov
aas
aad
int3
jecxz
movsl
push
movl
adc
data16
aad
mov
inc
xor
enter
sub
xchg
adc
and
inc
inc
sbb
sub
sbb
sbb
sub
sbb
call
inc
xchg
and
xchg
push
xor
push
test
xchg
pop
jb
push
imul
sti
insl
leave
enter
sbb
call
movsb
outsb
adc
pop
push
cmp
outsb
or
or
inc
daa
xchg
fidivrs
call
xchg
add
dec
addb
add
movsb
or
in
aad
xchg
out
movsb
test
lret
cld
push
mov
dec
xor
cwtl
inc
mov
cwtl
lods
mov
or
inc
cwtl
lods
js
in
lods
imul
daa
pop
lea
nop
dec
dec
mov
xchg
push
test
scas
pop
push
adc
adc
cmp
dec
es
test
add
push
cwtl
test
nop
sbb
arpl
dec
and
push
mov
repnz
push
or
movsb
cwtl
dec
xchg
pushf
cwtl
nop
dec
dec
push
nop
nop
mov
pushf
adc
add
pushf
enter
cwtl
mov
jb
punpcklwd
negb
gs
mov
xor
hlt
vmovntpd
arpl
filds
repz
fsubl
push
ret
pusha
dec
outsl
insb
push
xor
lock
mov
dec
adc
push
dec
and
add
mov
fadds
pop
jecxz
je
or
cmp
jae
clc
add
add
arpl
ret
adc
and
inc
fimuls
pop
mov
adc
xchg
sbb
fs
xchg
mov
or
lahf
add
mov
xchg
jo
adc
mov
aaa
jns
clc
push
jmp
out
push
imul
push
jg
push
inc
loope
mov
mov
sbb
and
popa
jecxz
lods
mov
aam
test
div
movsl
dec
loopne
or
mov
sbb
or
add
rcrb
cli
rolb
add
pop
in
les
mov
loop
or
jg
or
push
adc
push
add
mov
sbb
pop
push
cwtl
and
inc
or
push
hlt
xchg
mov
adc
sbb
push
mov
dec
sbb
push
pop
pop
pusha
mov
jae
mov
jge
test
lods
test
adc
or
mov
and
push
push
dec
or
sub
mov
sub
test
add
lret
mov
add
mov
and
icebp
insb
es
outsb
loopne
lcall
push
and
jae
add
inc
arpl
xchg
mov
clc
aas
add
sub
and
fdivr
push
ljmp
adc
cmp
aas
and
add
test
or
or
test
jae
cmp
mov
pop
andb
cmp
mov
push
mov
nop
mov
adc
jae
jno
mov
cli
pop
dec
call
je
cmp
jne
cmp
jmp
and
ret
enter
aad
adc
imul
test
ljmp
mov
pusha
testl
mov
adc
aas
jg
mov
cmp
enter
cmp
xchg
lret
push
test
lea
ds
xchg
mov
cmp
mov
mov
je
pop
mov
sub
mov
jmp
push
sub
rcll
pop
js
dec
cmp
cwtl
mov
fadd
mov
and
imul
sub
sub
mov
cld
adc
inc
mov
jmp
inc
or
out
xor
mov
add
dec
cli
dec
pop
js
xor
sub
cmp
jne
jbe
pop
pop
hlt
inc
out
push
test
dec
fcomps
das
jge
mov
in
sbb
jb
gs
jmp
outsl
mov
sbb
pushw
jbe
add
cmpl
cs
incb
pop
adc
adc
lea
adc
inc
call
and
test
cmp
mov
dec
out
dec
adc
ljmp
xchg
fcoml
enter
adc
stos
pop
pop
dec
add
inc
pusha
xor
aaa
push
push
pop
pop
push
pop
mov
push
add
push
and
pop
jae
push
cmp
enter
mov
or
dec
inc
lcall
ror
sbb
addr16
add
dec
or
out
sub
fidivrl
movsl
insl
loop,pn
adc
jmp
or
clc
loopne
inc
cs
je
cmp
lret
sub
or
sub
jmp
js
and
dec
cld
cld
shlb
jmp
dec
or
xchg
sbb
pop
pop
jle
in
or
les
jmp
aam
add
sub
sbb
push
or
sbb
insl
push
mov
jecxz
data16
es
ret
insb
loope
inc
ret
rolb
cmpl
pop
mulb
aaa
xchg
push
pop
cmp
mov
lea
scas
decb
push
adc
dec
jne
ret
xchg
add
push
push
push
cld
xor
push
and
clc
aas
lods
jae
lea
add
add
inc
xor
sbb
daa
aam
jbe
orl
lods
dec
mov
loope
pop
or
xor
negl
and
enter
mov
adc
and
push
sub
lea
push
mov
sar
or
or
outsb
pop
push
cmp
push
jae
out
dec
ja
out
dec
in
fisubl
pop
push
dec
push
mov
mov
hlt
jp
lea
ret
inc
mov
lock
aaa
out
mov
incl
or
movb
xor
in
dec
xchg
pop
dec
inc
or
mov
cmpl
push
sub
adc
lret
in
inc
stos
sbb
mov
sub
jge
fcmovu
jl
cmp
fnstsw
mov
push
jl
pop
or
add
arpl
lret
xlat
xorb
faddl
add
xor
inc
jnp
and
cmp
or
rorb
and
sub
loopne
into
sub
shll
adc
jl
pop
inc
lahf
or
adc
pusha
jb
xchg
lock
or
pop
pop
push
sahf
addb
add
push
xchg
cwtl
mov
gs
push
outsb
js
pop
testl
mov
test
jns
dec
leave
mov
popf
add
aas
push
outsl
mov
push
loopne
incl
clc
sbb
dec
push
dec
test
repz
scas
je
xor
push
orb
jmp
mov
push
outsb
addb
mov
mov
inc
ljmp
lock
inc
sub
push
insl
outsl
add
xor
mov
mov
imull
or
adc
push
popl
push
mov
inc
sbbb
add
mov
jl
test
lods
push
imul
cmp
int3
mov
push
push
sti
aam
inc
sub
lock
popa
loope
leave
aam
movsl
add
inc
mov
sbb
stos
test
cli
and
adc
jmp
je
xor
sbb
xor
pop
int3
in
xchg
clc
sbb
lock
paddq
xor
dec
xor
scas
sub
push
dec
mov
add
dec
les
inc
out
shrl
or
mov
dec
sbb
call
xor
orb
or
add
sbb
pop
ret
mov
lods
int3
push
sbb
pusha
push
sbb
jnp
negb
push
sub
push
lock
jb
mov
int
fs
out
lea
daa
pop
mov
movsl
out
add
fistl
popf
imul
sahf
rorb
xor
and
das
inc
xchg
xchg
xor
gs
push
push
jb
pop
sbb
iret
and
addr16
enter
add
jnp
incb
cmp
fldt
loopne
daa
jg
jnp
cmpsb
push
xor
xor
add
push
pop
shrb
xchg
hlt
shlb
lret
dec
out
leave
adc
jp
jae
cs
xor
xor
iret
imull
cmp
xor
adc
jae
enter
daa
lahf
clc
adc
jl
inc
sarb
inc
gs
fnclex
pop
sbb
mov
mov
push
adc
mov
jg
add
movb
xor
push
clc
stc
xchg
mov
add
pop
movl
and
hlt
mov
adc
sbb
cld
scas
and
xchg
roll
and
aad
adc
or
inc
test
jecxz
push
mov
adc
ret
jnp
xor
movsl
cs
roll
out
lret
push
aam
leave
add
aaa
xchg
pop
sbb
outsl
add
std
lret
sbb
sbb
mov
not
mov
hlt
jge
inc
push
mov
xchg
jne
mov
and
xchg
js
movsl
inc
add
orb
xor
add
insb
dec
and
push
cmc
gs
mov
adc
aas
test
adc
daa
aad
dec
shl
dec
or
out
fcmovnbe
or
mov
cmp
pop
jecxz
fcmovnbe
jmp
popl
cmp
and
shr
xlat
cmp
jg
pushf
sbb
push
add
inc
jns
jo
popa
xchg
dec
ja
add
movsb
je
movl
test
xchg
imul
aas
clc
and
jb
pusha
lods
jbe
shlb
add
jmp
cmp
mov
loope
aaa
add
sbbb
adc
pop
lea
popa
and
in
adc
push
jo
mov
fs
add
jle
dec
inc
xchg
cmp
fdivrs
mov
enter
add
test
mov
pop
xchg
fadds
ret
sub
cli
test
jmp
pop
push
jle
shl
adc
and
cmp
cmp
adc
push
lock
fs
mov
add
jmp
push
pop
push
push
inc
cmp
mov
shr
rcr
or
mov
repz
dec
mov
xchg
mov
out
jb
cmp
ja
jb
cmp
or
xor
and
jle
lret
or
fisubrl
lret
iret
pop
and
mov
sbb
sub
sar
loope
test
rcll
adc
or
and
fs
mov
neg
mov
xor
imul
rolb
hlt
sti
rol
sbb
sub
out
sti
mov
fisttpll
xchg
or
inc
ss
adc
jbe
jb
cmpsl
xchg
adc
mov
pop
jmp
add
dec
rclb
and
jb
orb
aaa
and
mov
push
dec
cmp
mov
inc
mov
sahf
and
xchg
pop
clc
xor
xlat
dec
loopne
inc
mov
push
imul
cmp
push
sbb
pop
add
sbb
mov
xor
insl
xchg
sbb
movsb
xchg
mov
jmp
dec
and
sub
push
ret
aas
pop
cmp
pushf
adc
and
add
mov
push
dec
sbb
lret
lods
ret
xchg
jo
add
gs
mov
jmp
inc
adc
add
push
dec
js
jne
jl
popf
and
adc
stos
arpl
add
pop
inc
cmp
mov
push
xchg
sbb
test
je
push
dec
push
pusha
nop
repnz
inc
decb
dec
xor
add
xor
adc
sbbl
add
hlt
jb
mov
push
pop
clc
ds
xor
lock
inc
lods
pop
lock
sbbb
xchg
cmp
add
inc
dec
xlat
xchg
or
je
push
sbb
pop
movd
push
scas
pop
cs
adc
popf
loopne
mov
mov
adc
pop
test
or
or
xchg
or
or
lahf
adc
pop
pop
jne
je
jb
jo
push
adc
mov
mov
adc
popl
mov
rorb
mov
nop
faddl
stos
aas
add
sti
stos
or
andl
sub
ret
stc
jle
inc
mov
sarb
add
je
sti
scas
es
cmp
ret
je
mov
lock
sub
nop
loope
jmp
fistl
push
inc
out
push
mov
je
sub
cld
icebp
mov
fwait
inc
dec
jne
test
pop
aas
jmp
adc
outsl
push
push
stc
xchg
dec
pusha
jae
adc
or
or
sub
imul
fisubl
orb
xor
add
jbe
push
and
fidivl
and
push
mov
movb
sub
or
inc
out
xchg
and
mov
adc
lea
sbb
test
jl
cmp
jg
inc
jmp
cli
fsubs
adc
lds
cmp
imul
bound
movsb
fistl
shrb
cmc
aas
sbb
scas
sub
cmp
push
in
test
xor
shll
dec
mov
mov
test
adc
adc
xor
lret
fisttps
and
adc
jo
mov
and
add
sbb
push
mov
stos
pop
sbb
andb
ljmp
jg
ljmp
aaa
inc
movdqa
push
dec
adc
push
and
repz
sahf
shrb
pop
jnp
iret
imull
inc
or
jbe
jle
xor
jb
iret
out
outsl
jg
jg
jo
mov
std
mov
faddl
dec
jne
repnz
in
xchg
add
pop
ffreep
lea
cmp
adc
fdivs
je
shl
shll
mov
xor
dec
clc
enter
add
or
add
push
negl
ret
mov
fisubrs
shrb
lret
int3
rcrl
mov
shr
dec
scas
fnstcw
xor
pushf
mov
cmc
mov
push
mov
jns
ljmp
jge
and
inc
push
mov
lret
in
sbb
xor
push
and
adc
dec
and
jmp
andl
sub
inc
shll
push
xor
sbb
and
pop
inc
mov
ret
dec
mov
cli
and
shl
sbb
sbb
stos
xchg
clc
inc
cmp
dec
jl
jns
adc
pop
es
add
mov
idiv
inc
adc
pop
std
sarl
jb
pop
xor
and
dec
add
push
cld
jecxz
push
pop
rcll
mov
arpl
int3
inc
outsb
add
push
sbb
movsb
cmpl
add
imul
pop
inc
enter
pop
mov
pop
pop
cmp
cld
sbb
rcl
sub
rcll
pop
ja
pusha
imul
jae
stc
loopne
and
lods
mov
pop
xchg
shll
inc
and
mov
enter
les
add
push
add
test
pusha
push
mov
or
and
or
xor
mov
or
je
xchg
cli
adc
outsb
sbb
lea
lea
or
movsb
and
and
mov
jle
jge
fcoml
aad
mov
mov
push
or
or
clc
add
fwait
leave
push
inc
add
inc
ljmp
lahf
xor
in
mov
push
push
mov
outsl
les
daa
sahf
sub
adc
pusha
mov
adc
inc
mov
insl
div
mov
jno
add
jno
push
add
sbb
insb
loop
mov
inc
add
sbb
sahf
rcl
pop
mov
mov
push
inc
cmp
ds
add
gs
mov
push
sbb
inc
repz
divb
insb
enter
sbb
adc
or
xor
mov
imul
repz
loopne
push
sbb
dec
lea
call
and
mov
mov
push
incl
xor
add
movsl
push
and
pop
out
cmp
sbb
es
test
iret
add
add
xor
push
negb
pop
bound
scas
je
cmpsl
jecxz
or
andl
aam
sbb
cmpsl
hlt
mov
imul
addb
sbbb
test
and
jbe
sub
add
or
pop
or
sub
push
mov
xchg
rolb
jmp
xor
lret
lcall
ljmp
jmp
or
fisubs
loopne
mov
adc
pop
gs
adc
xlat
sub
or
sbb
jo
cmp
push
push
and
push
pop
cmp
sahf
rolb
jge
adc
cmp
je
dec
adc
sub
add
cmp
and
mov
inc
mov
inc
jae
sub
rorb
ret
adc
lea
mov
or
mov
xor
cmp
ljmp
divl
mov
mov
test
mov
mov
fidivrs
sub
sub
add
jl
scas
dec
ss
pop
into
inc
mov
outsb
adc
inc
push
push
nop
inc
mov
fcomps
or
addb
mov
cmp
pop
or
or
lods
mov
pusha
jecxz
cmp
movsb
or
or
xchg
inc
jmp
push
mov
cs
sbb
cmpxchg8b
adc
jno
dec
iret
and
mov
add
inc
adc
cwtl
push
mov
mov
push
cmp
clc
add
out
movsbl
sub
or
outsl
jl
incb
xor
xchg
push
jmp
mov
pop
test
jbe
popf
add
ss
fisubrs
add
dec
or
mov
pop
ja
inc
jle
sub
cmp
xor
dec
pusha
clc
push
xlat
jmp
dec
push
in
jbe
lcall
jmp
cmp
icebp
cmp
das
lock
jo
mov
lds
adc
sbb
mov
sub
push
jmp
adc
jnp
push
rcrb
mov
out
iret
jbe
nop
add
jne
dec
dec
or
lahf
jae
imul
sbb
pushf
sub
and
ja
sub
pop
lea
bound
sti
xchg
lahf
and
cmp
dec
cwtl
inc
jnp
popf
cmp
ds
and
xor
add
stc
sub
cmp
mov
mov
movsl
jbe
sub
mov
js
xchg
stos
loopne
je
mov
push
jge
add
subl
inc
loop
cld
stos
add
jo
movsb
testl
cmpl
adc
inc
fimull
cs
js
loop
xchg
call
and
or
lea
cmp
or
pop
pop
xor
jmp
cmp
cltd
and
cwtl
pop
xor
mov
test
call
mov
cmc
xor
das
fcomps
push
push
push
cwtl
jge
add
lcall
sbb
icebp
inc
jae
test
cmp
cmc
sub
sub
sub
inc
adc
lods
cmp
push
jge
jle
fucomp
ds
xor
xor
jne
loopne
test
data16
lods
cld
or
xor
lods
sarl
add
cmp
push
mov
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
fwait
aam
aam
into
push
mov
add
jecxz
adc
or
jne
mov
roll
ja
sbb
cmpsb
cmp
cmp
jae
cmp
mov
sbb
call
mov
div
xchg
xor
and
int3
bound
or
enter
dec
mov
lahf
lret
out
imul
and
push
loopne
lock
cmp
cmp
push
jp
fiadds
jns
pop
dec
adc
dec
lock
nop
dec
fsubrs
sbb
add
inc
or
mov
loop
les
mov
and
push
inc
std
test
scas
ret
xor
cmp
jb
xchg
add
stos
nop
pop
jae
ja
clc
inc
ja
incw
cmpl
insl
adcb
mov
push
pop
push
jg
sub
sbb
xchg
mov
push
sti
jg
add
xor
xor
jg
rolb
rcl
shll
and
call
shr
mov
add
or
shr
aas
or
sbb
inc
rcll
mov
bound
or
adc
inc
mov
push
adc
dec
mov
push
pop
xor
jg
cmpsb
push
shrl
shl
shr
or
mov
inc
ret
or
sahf
dec
mov
jne
outsb
mov
inc
xchg
sbb
aam
sub
adc
and
or
xor
sub
push
cmp
lock
rcr
fiaddl
add
mov
fwait
loopne
ljmp
jmp
or
mov
mov
ret
shlb
sub
add
and
cltd
jl
dec
int3
int3
jmp
out
jp
jp
or
daa
mov
aas
lret
into
jmp
lods
pop
divl
mov
dec
and
ret
mov
icebp
sub
bound
push
test
lcall
jp
lret
mov
ret
sub
test
sbb
add
adc
imul
les
mov
inc
mov
or
xchg
xchg
add
push
inc
shll
push
jns
out
push
cmpsl
repnz
and
mov
mov
or
ss
test
cmc
push
rcl
ja
push
push
mov
or
or
adc
sbb
mov
ret
shrb
lcall
pop
sub
movsb
push
rcr
jg
pop
shlb
mov
jg
jae
shll
mov
pop
je
cmp
push
push
nop
push
cmp
and
ret
in
arpl
lret
adc
ja
jne
dec
cmp
aas
xchg
push
ret
in
or
jns
pushf
mov
jb
dec
in
and
add
pop
orl
repz
mov
ss
or
bound
mulb
jno
popf
and
mov
add
or
xlat
add
pusha
shlb
les
mov
xor
pop
call
push
ucomiss
call
adc
test
jne
mov
loop
pusha
pop
je
and
adc
inc
adc
and
iret
xchg
xchg
xor
inc
inc
inc
jo
sub
mov
rcl
aaa
mov
rorb
ret
fwait
mov
adc
divb
fistl
add
sub
xchg
outsl
push
push
push
loopne
mov
inc
inc
cli
pop
pop
ret
ss
pop
push
sahf
cmpsb
sub
out
mov
or
mov
bound
add
cli
shr
sbb
push
pop
cmp
test
les
test
and
fisubrs
lock
lods
rcrb
push
ror
pop
xlat
jmp
outsl
fmulp
and
cld
push
or
cmp
push
adc
dec
adc
mov
inc
jmp
lea
call
into
leave
xchg
sbb
les
call
sbb
add
xchg
sub
mov
popa
rorb
push
fmull
xor
cmovl
loope
sbb
daa
push
or
xchg
lock
in
pop
das
out
push
loopne
sbb
jmp
gs
and
ret
and
mov
mov
push
and
jo
or
cmp
xor
mov
mov
dec
lahf
loope
inc
loope
push
lea
sti
push
inc
add
leave
sar
mov
aas
or
mov
push
je
or
or
or
and
pop
mov
cltd
and
add
sbb
andb
mov
pop
mov
sbb
pop
hlt
dec
add
outsb
adc
inc
pushl
rcrl
xor
pop
pusha
cmp
mov
cmp
ret
jnp
cmp
push
sub
clc
fs
xchg
fimuls
inc
out
rcrl
mov
adc
pop
shll
pop
mov
or
dec
sbb
or
ljmp
xor
push
hlt
mov
andl
adc
clc
dec
and
dec
and
in
pop
inc
fcoms
cmpsl
pop
dec
out
lret
fimull
sbb
cmp
fsubs
add
dec
popf
or
loope
sbb
jmp
mov
mov
mov
adc
dec
hlt
js
push
add
mov
jnp
adc
rorb
call
inc
xchg
push
push
and
xor
lea
pop
xchg
je
test
cmp
jns
pop
add
push
add
ja
mov
cwtl
insb
or
mov
add
scas
or
push
or
push
mov
push
add
dec
inc
mov
mov
add
add
xor
rol
sbb
insb
call
rolb
push
jmp
sub
in
lds
dec
iret
bound
das
clc
test
add
push
pop
sub
add
push
add
mov
testl
lcall
adc
push
sysenter
sbb
insl
push
sbb
dec
xor
cmp
mov
ret
or
shlb
dec
std
xchg
lret
fwait
xlat
lock
xor
jae
shll
mov
cli
or
pmullw
cmp
add
adc
orl
xchg
lock
mov
inc
xor
add
lock
and
daa
ret
sub
enter
add
insb
pushl
mov
int
je
aaa
dec
xor
jbe
fs
mov
jns
adc
fiadds
into
sbb
add
jle
inc
mov
test
xchg
lods
or
and
leave
mov
popa
add
sbb
inc
inc
mov
pushf
adc
sbb
mov
stc
cmp
ret
inc
scas
add
rorb
test
and
cmp
dec
push
mov
lods
fwait
es
push
mov
xchg
sbb
inc
xchg
dec
push
adcl
pushf
add
xor
mov
push
jo
lret
jmp
inc
mov
or
pop
and
adc
das
movl
movsb
mov
adc
ja
cmp
ja
cmp
mov
xor
sub
pop
adc
mov
fimuls
shrl
cmp
push
add
cwtl
sub
xor
pop
jmp
cmp
aas
and
sbb
addr16
dec
sbb
jmp
and
jecxz
loopne
inc
push
andb
mov
cmp
pop
mov
push
pop
test
mov
sbb
xlat
and
mov
or
or
jle
or
sbb
jmp
sbb
xor
push
push
ss
andl
test
add
out
adc
adc
push
inc
and
and
or
cmp
inc
roll
inc
pop
mov
or
push
daa
add
mov
mov
and
call
pop
adc
pop
and
aaa
mov
ret
mov
and
cmp
sub
imul
testb
ficoms
mov
pop
out
jmp
test
pop
xor
outsl
test
lcall
popa
mov
mov
inc
data16
sbb
and
jg
insb
lahf
je
inc
cmp
shrb
add
or
in
js
pop
sbb
jmp
ss
outsl
push
rolb
bound
fiaddl
js
dec
pop
mov
jg
jo
pop
mov
jb
adc
adc
mov
and
push
or
and
adc
push
bound
sbb
in
and
add
pusha
stc
add
jecxz
cltd
enter
dec
inc
push
inc
orl
dec
and
cmpsb
push
push
jge
mov
mov
or
test
jl
inc
loope
sub
xchg
ret
push
movsl
cmp
pop
fcoms
cmp
jb
cmp
jo
sbb
xchg
data16
dec
movsl
mov
mov
mov
cmp
pop
shlb
push
fcomi
adc
and
ret
add
pop
into
lock
idivb
cmc
les
dec
mov
mov
dec
in
and
sbb
add
or
and
shll
out
lds
push
andl
notl
push
push
in
mov
add
cmpl
add
adc
or
cmp
jl
push
pop
cwtl
mov
pusha
je
jne
aas
loopne
sub
out
int
xor
pop
ss
shlb
xor
add
xor
jge
cmp
shlb
jge
inc
sbb
insl
push
std
adc
test
shlb
fadd
sub
push
sbb
sub
loopne
jl
push
pcmpeqw
or
pop
lret
fwait
imul
shll
push
adc
cmp
jnp
mov
mov
jo
adc
pop
orl
outsb
adcl
arpl
mov
push
insl
sub
aam
adc
add
push
pop
add
inc
icebp
imul
add
jb
imul
dec
or
fbstp
scas
mov
xchg
mov
and
aam
add
fdivrs
or
push
add
pop
mov
push
or
jne
push
clc
js
adc
push
test
mov
inc
mov
dec
xor
mov
int
pusha
sub
jmp
nop
dec
je
cli
xchg
mov
push
and
adc
pop
jmp
addb
mov
or
mov
push
in
add
jo
loopne
fnstsw
sbb
or
push
in
sarb
and
add
xlat
mov
dec
pusha
in
sti
insl
add
sbb
fnsave
rol
inc
mov
outsb
mov
les
sbb
or
push
cmc
mov
cli
fcoml
adc
jmp
mov
icebp
test
sub
mov
mov
sbb
cmp
mov
add
inc
or
adc
xchg
push
adc
sahf
adc
mov
orl
mov
and
std
xchg
inc
cmp
roll
rcll
out
dec
sbb
xchg
ret
inc
jbe
addl
inc
je
inc
mov
jno
inc
dec
sub
xor
mov
stc
jb
sub
lods
adc
fldenv
sbb
jp
or
and
inc
and
pop
adc
sub
rcl
xor
dec
sbb
adc
pop
xchg
add
cs
push
xor
or
inc
and
fadds
outsb
stc
or
xorb
pop
imul
inc
adcl
inc
mov
popa
jp
dec
xchg
jno
into
ret
pop
lock
add
push
cs
or
cmp
icebp
push
mov
mov
je
loopne
dec
das
lods
mov
push
fisubrs
xor
cmp
inc
dec
xchg
cli
cli
xor
in
out
adcb
cmp
insb
xchg
push
mov
adc
fdivs
cmp
pushf
mov
fsubrs
pop
fucomp
mov
or
int
and
push
mov
mov
sbb
insb
dec
das
ret
and
xor
or
lcall
sub
faddl
or
lods
and
sub
fstl
testl
add
fstpt
add
mov
mov
mov
inc
adc
hlt
stos
out
rcll
pop
pop
pop
or
xor
ret
push
add
add
jp
cli
or
and
outsl
sbb
aad
and
arpl
xor
adc
cli
aaa
push
cld
dec
jg
cmp
mov
jo
xor
push
aad
jmp
into
fdivs
outsb
push
in
mov
inc
push
and
sbb
mov
sub
cwtl
stos
fs
jmp
dec
movsl
stos
clc
rclb
jo
inc
mov
out
arpl
cmp
cmp
or
adc
jbe
cmp
ss
in
in
sub
xor
loopne
in
cmp
in
movsb
dec
jnp
and
inc
cmovs
leave
leave
leave
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
sbbb
jl
sbb
test
fs
xchg
cwtl
es
fs
pushf
mov
repnz
mov
leave
and
int3
and
es
sarb
xor
fsub
in
dec
xor
and
aam
xor
and
hlt
clc
cld
jo
inc
dec
add
add
add
insl
fiaddl
or
adc
dec
sbb
and
dec
xor
sub
dec
xor
xor
cmp
dec
shll
inc
dec
es
jbe
dec
mov
cltd
fs
dec
pop
pop
pusha
and
or
sbb
loopne
stos
inc
push
push
push
dec
jo
jl
sub
and
xchg
dec
js,pn
mov
mov
dec
movsb
sbb
int3
movsl
shrl
mov
or
adc
adcb
and
sbb
leave
in
lret
and
in
cmp
dec
cs
inc
mov
mov
xchg
lret
and
or
enter
loopne
insl
mov
sbb
jecxz
clc
add
dec
pop
mov
rorl
jno
push
and
add
sub
dec
jp
cmp
inc
cli
call
inc
jecxz
orl
outsb
rorl
push
xchg
xor
mov
testb
jo
and
test
and
mov
pop
dec
xchg
add
or
or
outsb
sub
sbb
shll
dec
and
adc
or
fcompl
in
shr
add
jmp
jo
xchg
add
aam
ds
mov
notb
test
add
enter
test
addl
test
xlat
pop
test
ret
or
shll
mov
or
xor
xchg
sub
lods
sti
call
add
adc
lock
and
mov
in
out
movsb
pop
and
aaa
jecxz
sbb
lcall
xchg
jmp
ret
xor
adc
and
push
xorb
sub
aaa
jge
je
sub
loope
flds
out
push
adc
and
pusha
mov
inc
cli
sti
pusha
pusha
loope
pop
sub
xor
movsb
repnz
sub
adc
fucom
jnp
mov
pusha
pusha
fldl
cmp
xor
or
sbb
inc
testb
sub
adc
sti
out
lret
add
add
test
aaa
sbb
loope
mov
ss
mov
inc
mov
push
xchg
or
sub
push
and
lcall
fldl
pop
testl
sbb
addb
push
adc
sbb
jmp
push
and
or
fisttpl
adc
jmp
inc
flds
fstps
jmp
fisttpll
lcall
rcrl
repz
add
fiaddl
mov
stos
mov
fs
xchg
mov
cmp
mov
cmp
xor
test
or
nop
and
sub
or
pop
dec
push
aaa
sbb
fsubrs
std
fldz
and
sbb
mov
jne
ja
dec
jmp
sub
sub
jmp
sbb
leave
subl
dec
inc
mov
fldcw
and
test
into
adc
xchg
mov
call
dec
subb
adc
popf
sub
or
adc
push
jmp
loope
jl
idivb
test
cmp
or
or
xchg
push
test
inc
sbb
je
adc
fsubs
cli
repnz
add
mov
xor
es
cwtl
test
push
cli
mov
insl
in
sbb
cmp
jo
inc
inc
lock
loopne
or
push
push
pop
jmp
pop
inc
add
jle
push
icebp
ds
enter
loopne
and
or
mov
jb
aas
or
negb
sub
adc
mov
sbb
jge
cwtl
xlat
and
pop
mov
cld
add
add
pop
add
test
add
mov
jle
and
rclb
or
dec
call
and
sbb
outsb
adc
pop
dec
shll
in
sbb
sbb
hlt
adc
sub
ds
xchg
clc
es
stos
sub
push
add
mov
out
mov
pop
fstp
frstor
fucomip
jmp
jno
fnstenv
inc
and
cmp
loopne
inc
orb
mov
jns
inc
popa
cs
iret
or
jne
xchg
add
jno
xchg
loope
inc
dec
sub
iret
pop
mov
movsb
mov
dec
in
add
add
add
xor
and
or
pushl
mov
or
mov
and
push
das
sbb
ss
scas
mov
movsb
int3
test
outsl
sbb
pop
mov
sbb
shlb
push
xchg
mov
jnp
je
test
add
rorb
push
andl
add
pop
adcb
mov
push
jp
rcrb
cld
inc
mov
pop
test
js
mov
lcall
or
mov
push
xchg
sarb
lock
or
sbb
ljmp
fstpl
mov
lock
fsubs
into
pop
call
mov
jmp
adc
adc
and
jbe
add
pop
enter
aaa
or
fld
fucomp
add
mov
xchg
inc
jp
out
mov
in
pop
mov
xor
test
cmovge
xchg
shrl
icebp
das
sti
sbb
and
sbb
jle
adcb
cmp
inc
mov
dec
lcall
les
fisubs
jne
outsb
je
pop
sub
cli
push
and
dec
mov
fsubrs
sub
push
push
mov
ret
movsb
pop
inc
sbb
hlt
dec
ljmp
cmpsl
fstsw
pop
sti
ret
lret
sbb
loop
inc
lock
ss
and
pop
sub
rorb
data16
or
insl
or
push
mov
pop
clc
push
jle
fldt
inc
es
test
and
ja
fstpl
add
test
cld
lock
sbb
fwait
xchg
pop
movsb
fldpi
xor
xchg
pusha
into
mov
inc
je
lret
dec
sbb
inc
scas
aam
or
loope
xchg
sbb
mov
mov
ret
in
fsubrl
ret
andl
iret
or
movsl
cmc
jmp
and
jg
push
or
clc
or
or
jnp
and
loope
jo
pop
inc
ljmp
or
add
mov
jne
cmpsb
add
ss
popf
xor
add
push
rcrl
xchg
inc
push
es
jne
rolb
sbb
loop
mov
dec
mov
mov
movsl
roll
repz
add
adc
loopne,pn
adc
push
add
test
nop
lret
je
fdivrs
dec
xor
jo
push
xchg
sti
jbe
prefetchw
jg
iret
sbb
push
mov
mov
xchg
or
or
jle
add
loope
push
or
sti
xchg
loope
rcrl
inc
mov
cmp
add
dec
pop
es
or
lret
pushf
gs
test
push
or
hlt
inc
loop
dec
add
aas
lahf
add
sbbl
add
daa
lock
mov
add
add
sub
lock
lahf
test
scas
stos
je
pop
pop
ret
push
dec
xor
in
rorb
sub
jbe
test
push
adc
ljmp
popa
test
inc
jns
dec
or
inc
lea
inc
insb
mov
pop
xor
lret
push
iret
xor
rolb
ljmp
cmp
call
loop
rolb
cmpl
mov
fwait
sti
fstl
cltd
insb
pop
and
mov
out
mov
fsub
iret
loopne
adc
iret
mov
push
cmp
cli
push
or
add
and
add
xchg
inc
jge
xor
dec
cmp
sub
jmp
js
pop
pop
dec
mov
fadds
mov
stos
jns
sbbl
adc
stos
or
and
dec
sbb
or
popl
loop
cwtl
je
inc
in
aad
ret
and
or
push
or
inc
fmuls
or
add
push
enter
pop
rorl
ss
mov
movsl
das
fadds
cmp
iret
lret
sub
shrl
cld
sub
notl
loopne
pop
popf
jb
dec
add
and
pop
ds
push
or
push
adc
and
aam
out
lcall
jl
push
mov
out
xchg
push
pop
sub
cmp
jl
xor
pop
inc
pop
or
cs
inc
sub
lea
inc
jno
push
push
rcr
inc
pop
movsb
out
xchg
lods
sbb
test
fisttps
mov
inc
push
out
or
inc
rcrl
dec
xor
icebp
cltd
subb
cli
or
nop
repnz
pop
pop
push
push
xor
inc
shlb
push
repnz
incb
xchg
mov
aam
mov
dec
jns
cmp
and
shl
hlt
push
add
mov
sub
inc
mov
js
xor
push
rcr
and
subl
push
and
mov
arpl
or
mov
arpl
addl
popa
mov
filds
xor
gs
sub
dec
into
out
sub
xchg
pop
jl
popa
mov
and
mov
and
inc
mov
jge
mov
dec
xor
push
dec
lods
shl
test
pop
sbb
mov
xchg
pand
or
inc
daa
popa
xor
cwtl
cmp
mov
imul
shlb
and
or
mov
aad
push
xchg
dec
or
enter
ja
mov
inc
movsl
repnz
aam
test
dec
cmp
mov
adc
dec
pop
xchg
lea
push
mov
and
je
dec
or
jb
or
push
in
fbstp
test
pop
jne
cmp
js
add
pop
inc
mov
mov
inc
mov
mov
rorl
cwtl
repz
and
mov
out
pop
push
pusha
push
negb
pusha
pop
xchg
xchg
xchg
adc
in
fidivl
or
ss
cmp
je
or
cmpsb
lock
xor
mov
dec
push
cli
mov
add
sbb
sbb
add
or
mov
and
xor
data16
fcompl
fnstcw
in
mov
pop
cld
xor
outsb
mov
xorl
mov
fnstenv
jmp
xor
mov
lods
frstor
xor
mov
push
add
adc
sbb
fsubrp
push
add
adc
cmpsl
pop
es
enter
rcl
push
add
sbb
or
pop
jne
test
lods
inc
rorl
aad
jbe
and
mov
or
add
adc
cmp
adc
cmp
push
pop
sbb
adc
out
add
dec
adc
jg
in
sbb
sub
mov
popf
sub
cmpsl
adcl
bound
jo
sub
or
bound
adcb
jne
cmp
sbb
add
add
lods
hlt
or
jge
sub
add
adc
pusha
movsb
jno
in
sub
xor
lcall
xor
fisttps
push
neg
movb
fs
cltd
push
xor
xor
or
add
xor
or
cli
mov
add
sub
or
addb
push
push
insl
sbbb
adc
inc
add
loope
add
pop
push
pop
or
jo
aad
pop
jg
jmp
and
popa
push
aam
inc
mov
push
ds
jg
ret
jmp
add
add
xchg
xchg
jge
jnp
mov
xchg
sub
adc
adc
cmpsl
imul
cmp
xor
test
add
aam
nop
or
iret
mov
xor
addr16
xor
jno
add
lret
adc
push
adc
push
hlt
fsubl
test
mov
stos
cmp
jge
adc
mov
mov
pop
and
mov
push
and
or
shlb
inc
xor
mov
mov
xor
notb
lret
stos
xchg
push
lret
cmp
xchg
fs
mov
sbb
imul
pop
cmp
fsubrl
jecxz
push
ret
add
mov
movsb
fiaddl
xor
repnz
test
enter
js
subb
push
bound
mov
dec
and
add
insb
jg
cmp
movb
jg
cmp
enter
mov
xorb
neg
sbb
mov
out
mov
jg
ret
jo
fisubs
or
jne
bound
xor
test
dec
ljmp
jecxz
add
jne
in
loop
pop
inc
xor
mov
sub
insb
push
add
add
or
fisubs
add
mov
or
fbld
adc
xchg
hlt
fldt
leave
inc
push
add
dec
mov
mov
sbb
shlb
mov
addr16
pusha
push
fistps
jbe
add
pop
icebp
xchg
cli
pop
insl
cld
add
hlt
shrd
sbb
push
daa
push
shlb
xor
sbb
clc
cwtl
sahf
sub
data16
cli
ss
inc
and
xor
out
xchg
mov
mov
jne
dec
sbb
les
mov
jp
test
adc
rclb
dec
xor
add
push
test
cld
fisubrl
shlb
sbb
cmp
in
and
fst
shrl
mov
sarl
jg
fs
xor
jmp
mov
sub
mov
jns
das
cmp
sarl
ja
pop
clc
push
shll
xchg
or
xor
js
adc
push
lock
cmc
pop
adc
test
jl
jg
mov
arpl
dec
and
pop
pop
or
or
jo
pop
pushf
sbb
sub
pop
imul
add
in
in
add
scas
push
movb
js
rclb
inc
hlt
ss
test
inc
add
mov
movl
aaa
mov
jg
push
jle
mov
push
sbb
mov
addl
push
inc
sahf
sub
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
adc
adc
subl
push
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
addb
roll
pop
push
sbb
or
iret
xchg
sub
or
addl
pop
push
dec
pusha
nop
mov
mov
mov
nop
shlb
and
push
adc
sbb
int
nop
cmp
leave
lock
sbb
push
push
lods
push
adcb
push
pop
sbb
out
sar
and
jno
jl
loopne
jge
inc
or
pop
nop
dec
sub
dec
cwtl
add
iret
pop
ret
popf
jmp
xor
ds
fstps
clc
gs
or
pop
data16
rolb
sbb
gs
int
jns
xchg
inc
popa
je
inc
je
xor
mov
dec
sarl
adc
add
sbb
test
popf
sbb
rclb
dec
loopne
inc
push
mov
subb
movsl
or
add
pop
int
mov
inc
adcb
mov
pop
push
fadd
arpl
cmp
mov
ss
bound
sbb
insb
xorl
xor
mov
in
and
cmp
cmp
nop
cwtl
mov
hlt
ss
mulb
cmp
fcomp
clc
dec
test
hlt
adcl
push
notl
loopne
cmp
jp
push
mov
xchg
cmp
mov
inc
cmp
cld
inc
notl
dec
fwait
add
or
pop
mov
sub
jge
sub
aaa
jno
lea
aam
nop
sub
cmp
les
mov
inc
inc
pop
jmp
negb
adc
movl
mov
mov
cld
jg
inc
sub
and
leave
mov
and
dec
jne
mov
push
push
push
leave
pusha
ljmp
mov
pop
sub
mov
cmp
sub
push
cmp
and
mov
mov
test
jl
push
pop
btc
jo
mov
cmp
sbb
lods
pop
adc
mov
cmpl
push
or
aam
cmp
mov
push
mov
mov
adc
pop
sub
mov
clc
add
imul
pop
pop
pop
pop
pop
cwtl
shlb
dec
xlat
aad
pop
cmp
sbb
nop
icebp
insb
adc
dec
add
call
jg
or
sbb
sbb
outsb
fcomip
dec
je
dec
push
push
jmp
or
jmp
pop
xchg
cli
add
in
or
pushl
inc
inc
pop
adc
imul
lcall
nop
push
push
dec
jno
ret
add
sbb
leave
or
data16
shl
int
or
addl
cs
cmp
and
inc
andb
gs
sbb
mov
xor
sbb
add
mov
adc
adc
jmp
sub
popf
popf
fiadds
inc
mov
outsl
mov
adc
push
add
fstl
adc
or
dec
dec
gs
into
sub
xor
test
mov
jno
push
mov
sbb
mov
sbb
pop
xlat
stc
ficoms
and
or
adc
data16
roll
xchg
hlt
add
repz
mov
rorl
dec
or
or
inc
gs
out
push
hlt
pop
pop
jge
shr
add
or
testb
shr
rcrl
stc
push
push
adc
test
pop
inc
test
and
add
sbb
test
js
xchg
pop
lret
add
jb
add
mov
add
add
dec
mov
jbe
add
jl
in
sbb
cmp
xchg
mov
pop
sub
inc
rolb
pop
mov
and
sbb
inc
fisttpl
cmp
adc
dec
dec
inc
adc
sub
out
bound
xor
sub
dec
ss
clc
inc
daa
sub
push
rcrl
insb
shll
cli
push
fimull
push
shr
or
sbb
xchg
pushf
les
adc
jle
ja
pop
xor
add
jle
mov
lock
icebp
mov
adc
xor
clc
add
push
loope
pusha
mov
pop
add
mov
test
cmpsl
push
movsb
dec
push
sbb
cmpsb
or
mov
push
or
pop
lea
hlt
je
data16
sub
popf
fisttpll
push
nop
mov
stc
mov
sbb
and
leave
add
sub
lret
je
cltd
loop
jno
leave
add
jbe
js
fwait
add
cwtl
lods
inc
loope
pop
dec
ds
add
xor
xchg
sbb
push
sbb
pop
or
cmp
or
sbb
lret
or
jmp
jecxz
xor
ficoml
adc
les
xor
xchg
sub
sbbl
xchg
push
pop
add
stos
pop
or
xlat
mov
rolb
adc
add
ret
jo
stos
sbb
mov
fildl
push
or
add
addl
jne
test
sbb
pop
lea
adc
cmpb
outsb
jecxz
inc
popa
cmp
pop
sub
xor
int
pop
imul
sbb
xor
or
clc
sbb
fistpll
test
and
sub
dec
bound
and
sbb
add
pop
je
add
xor
adc
lea
fmuls
mov
mov
add
fdiv
fiaddl
fidivs
mov
mov
add
adc
fdivs
add
pop
rorb
cmp
das
mov
sbb
add
call
ss
imul
push
inc
adc
sarl
inc
stos
mov
adc
adc
mov
fstp
mov
cmp
mov
pop
adc
and
orb
addr16
aaa
push
or
mov
mov
fwait
rolb
xor
and
out
ljmp
cmpb
jl
ss
cli
pop
xor
incb
jae
ret
add
inc
aam
push
fstl
mov
mov
mov
pop
push
push
daa
inc
into
and
ja
add
push
push
imul
mov
movsl
mov
ds
mov
cld
mov
mov
push
andb
or
jmp
sbb
adc
lret
inc
pop
inc
int
adc
cmp
add
mov
adc
or
rorb
push
leave
or
std
adc
clc
out
roll
leave
add
in
cs
je
mov
iret
daa
and
add
or
xchg
aas
sub
xchg
and
fiadds
mov
rolb
cmp
sti
popf
sbb
or
inc
add
add
adc
sbbl
dec
and
mov
and
in
sbb
pop
add
push
clc
daa
add
adc
clc
xlat
push
neg
neg
sbb
sub
mov
sbb
add
cltd
add
sbb
xchg
adc
sbb
push
push
inc
and
fldcw
xchg
cmpsb
xchg
xchg
fcomi
sbb
mov
xchg
inc
adc
sbb
and
shlb
push
mov
dec
jns
js
mov
daa
pop
pop
pop
popa
dec
fildl
push
mov
adc
lods
rcl
ljmp
dec
and
shr
sub
adc
xchg
mov
and
and
cld
lock
je
add
jno
and
ret
mov
loop
in
popa
sbb
mov
inc
enter
mov
pop
fildll
jae
adc
or
enter
ss
xor
cmp
push
or
aad
popa
mov
call
aas
andb
hlt
add
dec
test
sbb
or
sub
xchg
test
xor
sbb
pop
jmp
js
push
outsb
cmp
paddusb
xchg
inc
xchg
cmp
loope
add
push
push
stc
push
popa
jne
push
cmp
adc
jo
cmc
mov
insb
or
scas
stos
sbb
mov
imul
cld
inc
ss
and
aaa
dec
sub
das
subb
inc
jns
rcrb
je
cld
mov
or
aam
jne
pop
push
aam
or
add
add
lahf
mov
enter
sbb
xor
cmp
and
pop
xor
dec
aas
fs
xchg
js
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
xchg
shlw
leave
adc
mov
push
jb
idivl
pop
mov
enter
xor
cmpb
cmc
or
lret
call
rcrb
lods
add
mov
fwait
xchg
data16
cmp
aas
push
jb
scas
pop
push
movb
jmp
dec
adc
or
rcr
adc
and
cmp
push
cs
test
push
mov
jae
jp
or
inc
add
xor
xor
jb
adc
dec
je
sbb
loopne
dec
sbb
out
es
mov
aad
push
adc
jp
dec
popa
cmp
lsl
es
inc
jb
sub
mov
js
push
andb
sbb
mov
into
push
dec
testl
cmp
dec
loopne
fwait
mov
adc
push
imul
jmp
shr
shr
push
inc
imul
lea
sar
mov
adc
lret
mov
outsl
pop
neg
xchg
push
ljmp
mov
cmp
adcb
and
addr16
or
insb
mov
add
imul
mov
jbe
push
sbb
adcl
adc
mov
jnp
or
dec
jle
repnz
sbb
clc
mov
sub
mov
mov
mov
mov
and
and
lea
inc
fstl
pop
xor
adc
cld
shrb
add
mov
ja
int
dec
orb
repnz
roll
call
loop
ljmp
and
inc
cmp
mov
jne
lea
rolb
add
jle
mov
cmpb
push
lea
sub
pop
xchg
push
or
or
mov
mov
ret
movsb
sbb
mov
mov
pusha
aad
lret
data16
xchg
mov
mov
add
mov
fs
jmp
imul
rorb
arpl
jle
cmp
mov
mov
shll
cmp
add
shr
or
and
pop
cmp
rorb
sbb
xchg
jmp
push
lret
jmp
loopne
mov
sub
addr16
out
mov
adc
cwtl
shrl
loope
shr
or
mov
cli
jmp
xor
rcr
xor
imul
and
push
cmp
repnz
add
dec
cli
cli
inc
cli
div
mov
add
lret
fadds
loopne
ss
xchg
test
sbb
adc
fisubl
lahf
call
fisubl
mov
shlb
js
fidivl
fldenv
enter
add
or
cmpsb
mov
dec
rolb
pop
xor
mov
xchg
sbb
stos
sub
jle
repnz
pushw
sbb
cmp
out
jge
mov
enter
ret
push
insl
cmovb
imul
inc
dec
or
jne
cmp
pop
cmp
addl
add
int3
insb
dec
xchg
pop
jbe
dec
sub
sbb
mov
enter
adc
xor
inc
lds
mov
push
lret
fcmovu
mov
mov
insl
test
cmp
jo
mov
int3
jg
add
xchg
add
or
inc
add
adc
into
or
adc
dec
sub
nop
inc
push
in
or
jge
call
lock
cld
icebp
or
add
jns
loopne
jne
or
push
in
nop
sbb
and
pushf
pusha
mov
pusha
add
xor
sbb
mov
sbb
decl
sti
inc
add
inc
mov
in
cmp
jle
push
pop
outsb
sbb
insl
push
call
andb
cltd
and
or
sbb
in
in
jne
or
cli
pop
xchg
fsubrl
mov
cmp
fcoms
xor
fiadds
jnp
lock
imul
jmp
cs
call
mov
loope
outsb
xor
pop
add
and
mov
push
scas
add
movsl
out
sahf
in
add
sti
add
push
sar
ja
into
sbb
loope
pop
aam
negl
inc
push
xor
je
ss
ljmp
adc
cmpsb
add
adc
jne
int3
stos
sahf
mov
and
dec
int3
sbb
aas
sub
test
call
adc
add
into
xor
and
or
mov
inc
ljmp
jmp
in
or
sub
cmp
jge
push
cld
stos
aas
sub
cmpb
or
add
dec
cmp
xlat
aam
inc
dec
add
add
fadds
xchg
mov
hlt
outsl
mov
ret
jp
jne
dec
orb
or
sub
cld
cmp
in
filds
or
ret
and
inc
pop
dec
lds
inc
mov
jp
ret
adc
imul
popa
push
lcall
rclb
mov
mov
mov
and
add
push
das
push
adc
pop
or
or
imul
fdivrl
pop
scas
je,pt
or
ret
sbb
adc
mov
inc
cld
mov
ret
movsl
shlb
orl
pusha
dec
adc
jae
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
std
rcrl
and
sub
and
pop
pop
in
cltd
sub
cmpps
ret
push
inc
dec
prefetchw
sahf
inc
ret
or
push
lea
add
stos
rolb
xor
jbe
jne
or
or
mov
and
movsl
push
or
inc
je
pop
mov
pop
mov
and
mov
or
sub
rcrb
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shlb
ret
hlt
or
scas
popa
sbb
mov
add
jo
add
clc
mov
dec
mov
inc
test
sbb
pusha
lock
push
scas
adcl
cmp
subl
xchg
clc
mov
shll
popf
mov
loopne
mov
jo
add
in
cmp
mov
into
or
add
mov
add
add
pop
mov
push
into
mov
mov
sbb
and
sbb
daa
daa
iret
addl
into
into
into
inc
cmp
dec
sbb
sarb
push
pop
nop
pop
fistpl
mov
das
ss
into
add
and
or
pop
stos
lock
pop
and
mov
enter
add
pop
cmpsl
inc
or
pop
xchg
out
mov
add
movsb
mov
pop
stos
sbb
test
mov
and
inc
pop
cltd
and
mov
inc
pop
pop
sub
sub
jmp
add
lret
sub
lret
mov
ljmp
stos
sub
pop
mov
pop
and
jge
pushf
mov
fldcw
and
jmp
xchg
rorb
je
test
les
add
xchg
sbb
cwtl
pop
scas
sub
mov
aaa
mov
xchg
mov
arpl
mov
xor
jl
add
sbb
add
lret
lock
nop
cmp
push
sub
jle
sub
loopne
dec
imul
add
sbb
fcmovnb
mov
mov
add
push
icebp
fistpl
fmuls
pop
sub
shl
mov
cmp
jb
cmp
jbe
sbb
sub
jmp
push
repnz
movsl
pushf
xchg
loopne
xor
or
fisubrl
test
fsubrs
icebp
jge
mov
into
push
cmpl
aam
subl
push
out
fwait
repz
and
mov
popa
test
push
daa
ljmp
pop
mov
mov
sub
pop
xlat
adc
test
js
pushl
pop
add
and
jo
fistl
and
push
push
mov
adc
inc
fstl
and
dec
push
inc
mov
jns
fmul
adc
add
jbe
sub
imul
pushf
pop
sbb
nop
push
repnz
insb
cmpsb
cmp
xor
lcall
cmc
je
push
cmp
movsb
add
aas
mov
sub
push
inc
push
aaa
sbb
add
mov
mov
lea
shll
add
sub
pop
cmpsl
or
add
imul
lock
or
mov
mov
mov
enter
notl
sub
pop
xchg
push
js
jl
cmp
adc
ret
out
arpl
mov
movsl
mov
filds
push
xchg
ret
add
call
xchg
outsb
das
test
rol
mov
push
push
pop
into
push
lcall
add
test
cmp
xor
mov
rcr
lea
and
outsb
gs
sbb
mov
adc
in
push
clc
sub
pop
inc
cli
jno
mov
mov
mov
jg
lret
xorl
push
mov
ret
adc
cs
sbb
push
mov
mov
aaa
and
enter
push
push
pop
add
divb
add
pop
nop
add
sub
push
popf
pop
outsl
fs
push
jmp
inc
rcr
dec
fs
and
je
ja
orl
subl
push
js
push
xor
push
orb
mov
xchg
sbb
inc
or
bound
pushf
iret
xor
mov
mov
push
mov
sub
add
sbb
adc
mov
test
loopne
fs
adc
add
sbb
je
jg
rolb
sub
mov
mov
aam
icebp
popa
cmp
jbe
adc
clc
dec
fwait
push
push
xchg
push
mov
fisubl
or
mov
lods
add
loopne
cmp
shr
and
mov
stc
push
mov
pop
nopl
sbb
fcomps
imul
cs
leave
scas
shlb
cld
adc
cmp
sbb
call
test
inc
sub
pop
push
xor
iret
ret
sbb
les
icebp
repnz
and
cmp
mov
movsl
jmp
and
and
push
push
rcrb
outsb
aaa
clc
addr16
iret
dec
xchg
add
dec
es
dec
in
mov
add
inc
mov
mov
xchg
mov
mov
add
pop
fwait
call
sar
xor
cmp
push
sbb
adc
add
movsb
sarl
cmp
sub
add
ret
pop
rol
mov
push
sarl
setb
mov
cmpsl
add
stos
mov
adc
push
mov
add
shlb
xchg
push
sbb
lea
loopne
es
push
fisubrl
sbb
sub
dec
push
pop
in
adc
push
pushf
ret
je
push
rolb
xchg
movsb
adc
stos
push
fldcw
pusha
push
xor
shll
dec
dec
popa
dec
or
push
inc
ret
mov
arpl
shrb
fisttpll
pop
xchg
loopne
adc
inc
sbb
add
les
out
clc
pop
mov
adc
ret
and
pop
lcall
xchg
frstors
andl
jns
adc
cwtl
mov
xchg
xchg
rolb
lret
sbb
or
push
cld
cmp
xor
inc
mov
mov
or
rclb
jno
push
aam
shl
xchg
mov
aas
add
icebp
adc
add
cs
rcrb
push
repnz
pop
dec
outsl
imul
in
and
or
lock
insl
clc
pop
adcb
xor
gs
cmc
int3
shlb
addb
cltd
sub
push
aam
pop
pushf
enter
inc
dec
pop
sub
popa
mov
imul
sbb
test
push
xor
fcoms
dec
or
or
xchg
cmp
mov
add
push
push
mov
sbb
adc
and
inc
das
roll
js
out
or
mov
pop
imul
shl
int3
jo
arpl
imul
inc
cmpsb
push
jo
cmp
and
ja
mov
jmp
jb
sbbl
xchg
imul
add
or
orb
jle
aas
or
sub
js
lods
mov
jge
adc
mov
sbb
cmp
ja
lods
rolb
jbe
jge
adc
orl
push
xlat
nop
aam
xlat
cwtl
jne
sbb
mov
scas
inc
sub
cmp
call
jp
repnz
std
fidivrs
jg
adc
in
push
sub
lock
or
add
push
xchg
rcll
xlat
add
inc
jmp
mov
popa
pop
movsl
inc
add
call
pop
dec
rol
hlt
fadds
in
ret
push
sub
cmp
arpl
push
push
pop
adc
inc
clc
or
leave
push
mov
mov
cmpsl
dec
aad
add
inc
lea
mov
aas
leave
xchg
xor
and
shrl
inc
sub
push
add
pop
fs
mov
sbb
in
sub
sub
call
push
inc
inc
loopne
pop
cmp
cmp
sti
jns
mov
int3
shlb
jle
sbb
fwait
inc
ret
mov
mov
dec
cmpl
test
jae
or
cltd
pop
lret
inc
cmp
push
lds
cmp
cmp
jp
ja
and
push
mov
pop
popf
add
ss
jl
or
sti
scas
std
pushl
mov
jecxz
shrb
jno
fwait
sarb
add
cltd
xchg
mov
add
lock
adc
push
in
xchg
mov
cmp
test
imulb
lods
adc
and
and
inc
xchg
mov
or
test
inc
or
xchg
sub
ret
shll
jl
stos
push
bound
mov
jae
adc
xorl
leave
sub
add
mov
push
xchg
sub
test
sbb
or
add
add
popf
rorl
xchg
andb
cmpl
cmp
jle
push
push
push
dec
aaa
jnp
sbb
mov
and
je
or
push
push
push
add
mov
mov
and
dec
dec
xchg
push
or
fdiv
stos
cli
mov
add
inc
hlt
addl
pop
jl
in
mov
xor
addb
adc
rorl
push
mov
sub
popf
adc
xor
js
inc
ds
loope
sub
xchg
sub
and
rclb
cltd
push
int3
and
push
adc
cmpsb
shl
pop
std
fcmovnu
movsl
mov
mov
jmp
aaa
loope
fdivs
test
push
mov
inc
mov
jge
push
cmp
cmc
arpl
leave
pushf
fildll
sub
jbe
pushf
adc
sub
push
rcl
mov
mov
pop
adc
loopne
test
cmp
jae
cmp
call
lret
cmp
jg
dec
dec
rolb
add
add
decl
sbb
inc
lret
xchg
cmp
test
fadd
dec
call
cmpsb
jmp
xor
fs
sbb
cmpb
cs
mov
dec
shll
rcl
mov
sbb
lret
pop
push
lds
pop
cmp
mov
mov
ret
rorl
xor
adc
add
pop
or
aaa
push
xor
test
popa
mov
cmp
dec
or
andb
andb
push
dec
cmp
mov
or
scas
or
inc
shr
add
pushl
add
xlat
mov
add
hlt
add
cli
dec
or
test
sbb
mov
sbb
je
addr16
scas
pop
adc
or
cmp
sbb
mov
jmp
cmp
add
popa
or
imul
sbb
mov
cli
rcrl
rcrl
testb
cmpsb
mov
push
pop
inc
dec
dec
aad
sub
testl
xchg
jo
lret
repnz
test
jbe
xchg
cmp
sbb
xchg
adc
jecxz
fs
mov
enter
dec
jne
push
aaa
ja
xlat
lds
jno
push
jmp
xor
inc
dec
lahf
mov
adc
push
addl
jne
push
sub
scas
mov
aaa
mov
in
dec
inc
cli
inc
cmpsb
fidivs
mov
cli
arpl
mov
push
xor
rorb
ret
lea
inc
add
or
repnz
inc
sbb
xchg
xor
mov
nop
insl
inc
mov
xor
jns
add
mov
push
icebp
ss
push
lock
jb
add
jne
pushf
cld
push
sub
jae
popf
je
sub
nop
aaa
jl
scas
lods
pop
sub
mov
add
push
mov
dec
cmp
push
cmpb
sub
add
and
callw
jnp
xor
mov
les
adc
jb
pop
fs
insl
loope
adc
movsb
or
push
leave
cmp
adc
je
test
andb
enter
jnp
mov
ret
mov
sbb
mov
xor
mov
sub
adc
sbb
adc
mov
leave
inc
jmp
xchg
mov
sub
insl
ret
mov
std
hlt
jne
sarb
adc
fisttpl
mov
insb
out
or
push
mov
mov
adc
pop
mov
fs
mov
pop
out
jle
add
icebp
sbb
mov
rol
ja
or
or
shl
jne
loop
mov
push
mov
push
dec
dec
jo
mov
xchg
rcl
mov
int3
adc
xor
jg
add
fwait
addb
jbe
fmul
pop
scas
and
adc
add
mov
xchg
pop
mov
imul
mov
adc
push
cld
and
fcmovne
jle
out
orb
mov
push
mov
adc
mov
ret
test
mov
cmp
fstl
sbbl
jno
mov
pop
mov
fmuls
adc
mov
sub
and
dec
pop
je
and
cmp
mov
sahf
jb
sub
jb
or
cmpsl
cmp
loop
gs
inc
pop
aaa
pop
pushf
and
clc
sub
dec
aad
jae
pop
sub
pop
scas
or
or
push
pop
and
jns
mov
pop
cmp
scas
and
adc
gs
cmpsl
adc
les
jbe
inc
adc
ljmp
sahf
add
and
adcl
test
pop
fmuls
sarb
rcrl
fs
mov
test
ret
enter
je
cmp
mov
and
mov
testb
int
push
xchg
testb
cmp
push
xor
outsb
lret
jbe
or
jge
push
jmp
inc
mov
fiadds
sbbl
je
cmp
out
jns
pop
cmp
sub
pop
adc
daa
clc
push
push
or
test
fdivl
add
push
dec
xchg
sub
push
ja
shlb
das
xor
fnstsw
jl
pop
inc
mov
repz
push
addl
mull
ja
fstpl
sahf
test
pop
jmp
mov
sbb
inc
pop
pop
or
scas
lock
sti
and
sub
mov
mov
pushf
sbb
xor
xor
pop
ret
gs
imul
dec
push
inc
in
fldl
test
xor
sbb
sbb
gs
jne
push
dec
lret
sub
enter
stc
add
push
adc
and
push
xor
add
nop
data16
add
test
jge
clc
dec
ljmp
sbb
pop
enter
mov
out
xchg
mov
xor
adc
mov
aam
and
aas
loopne
aaa
inc
arpl
and
shll
aad
and
aaa
adc
and
pop
je
mov
and
fld
fldcw
add
fildll
add
popa
mov
cmp
jmp
xchg
fstps
icebp
pop
icebp
xor
xor
rolb
mov
int3
jmp
cmp
fsubs
jbe
imul
inc
add
lea
sbb
les
push
inc
jecxz
test
movsl
in
test
ja
enter
mov
leave
or
xchg
pop
out
mov
imul
shlb
pusha
cmp
push
out
mov
nop
or
cmc
test
xchg
xor
push
pusha
jns
mov
or
add
data16
in
jb
jno
enter
popa
lock
mov
bound
lods
push
rol
pop
sub
sub
adc
jno
fs
pop
push
and
outsb
adc
cwtl
cmpsl
pusha
and
add
cmpsl
xchg
imulb
cmp
mov
dec
xor
in
or
and
xor
fwait
dec
enter
cld
test
add
fisubl
xadd
jecxz
pop
lods
and
mov
nop
hlt
lcall
mov
ljmp
pop
shr
repnz
pop
jnp
je
add
sahf
sub
pop
sbb
dec
mov
rcll
imul
es
test
jno
lods
add
inc
lahf
fdivrs
dec
in
add
cli
sub
dec
push
loopne
dec
fistl
movsb
out
and
add
or
jmp
jnp
adc
loopne
sbb
sub
movsb
or
icebp
outsb
dec
sahf
cltd
jnp
fisubrl
jg
scas
fs
add
cmpsb
pop
cmp
call
insb
jmp
ret
dec
or
jbe
jo
adc
jnp
mov
cltd
mov
mov
cwtl
xor
mov
inc
mov
movsl
inc
adc
and
sahf
pushf
mov
xchg
adc
ss
or
push
pusha
rorb
dec
pusha
push
nop
sub
imul
lahf
xor
push
ss
dec
lcall
inc
push
sbb
pop
lahf
lock
mov
mov
leave
leave
mov
inc
push
js
ror
push
fsubl
mov
cs
and
push
or
imul
sbb
mov
call
insl
aam
call
sbb
mov
and
push
test
cmp
pop
add
inc
pusha
adc
fsubs
fsubs
cld
and
cltd
fs
out
jno
pusha
fs
insb
jo
addl
or
mov
mov
fsubr
enter
adc
imul
lea
jp
jne
xchg
mov
rcll
test
mov
pop
mov
daa
and
in
sti
gs
cmp
mov
sbb
mov
cmpsb
imul
loop
in
xchg
inc
cli
sub
cmp
inc
mov
test
push
jne
rol
adc
andb
pop
outsb
adc
xlat
mov
mov
pop
jge
cwtl
enter
cmp
mov
loop
push
jl
sub
aad
fsubrs
imul
in
dec
je
push
xor
push
mov
inc
inc
mov
mov
addb
and
movsl
jl
shrd
jnp
cmp
cmp
push
sbb
je
enter
stc
es
aam
xchg
jecxz
paddsb
jns
push
inc
cmpsb
inc
add
aaa
dec
mov
jno
jo
xchg
fildl
adc
ret
push
movsb
popf
lock
mov
cmp
adc
cmpsl
or
loopne
jne
or
jnp
movb
sbb
shlb
cmpsl
lock
sub
lea
cmp
cmp
dec
adc
in
jl
nop
mov
adc
nop
arpl
in
mov
fsubl
loopne
and
pop
cmp
imul
jne
mov
xchg
test
sti
imul
cltd
imul
shll
sbb
fildl
dec
mov
and
daa
popf
add
cmp
icebp
or
and
rolb
repz
loopne
xor
stos
add
or
aad
lods
stos
xchg
sbb
adc
aas
pop
cmpsb
cmc
in
xchg
in
mov
cmpsl
testl
cwtl
add
cwtl
sbb
and
jmp
xor
lea
add
push
jnp
xchg
lods
or
xor
inc
test
popa
clc
mov
aaa
jle
mov
fldt
movsb
addr16
call
jl
fildll
push
lods
insb
lods
add
inc
in
daa
lods
nop
sub
push
cmp
daa
lods
movl
fistps
adc
adc
es
in
dec
dec
add
push
adc
fsubs
add
xchg
push
add
scas
cmp
sbb
addr16
or
inc
orl
loopne
xchg
xchg
andb
mov
and
pop
mov
push
add
loopne
or
std
loopne
pop
and
in
cmp
mov
aaa
enter
mov
loope
xor
cmp
sub
cltd
fs
jb
addb
mov
in
in
les
insl
dec
shll
mov
sub
in
je
mov
mov
insb
and
in
iret
push
push
loopne
es
mov
aas
inc
xlat
loope
add
adc
popf
idivb
adc
cmc
adc
adc
mov
and
push
or
rcrl
xchg
xchg
iret
or
xchg
xchg
inc
or
cmp
incb
inc
aad
mov
pop
ss
in
pop
fidivl
jne
sbb
js
or
push
sbb
movsb
pop
or
mov
loopne
repnz
sbb
adc
and
jmp
movsb
inc
cmp
fidivrs
mov
addr16
sbb
add
push
mov
movsb
add
cmc
mov
sub
mov
cs
push
in
std
rep
push
xchg
pop
sub
emms
sbb
mov
cmp
aam
mov
pop
jb
sbb
or
or
and
and
or
dec
push
jb
lock
mov
inc
and
enter
dec
movb
xor
mov
enter
mov
mov
cltd
dec
inc
dec
mov
jg
mov
sub
cmpsb
inc
sub
or
and
inc
sbb
push
pushl
loope
push
or
adc
mov
and
add
inc
rcrl
stos
pushl
adc
adc
aaa
lea
inc
dec
ror
adc
test
mov
int3
dec
or
cmp
jg
push
sbb
mov
in
in
jns
ret
sbb
scas
push
icebp
mov
shll
imul
lods
xchg
push
mov
inc
sti
es
push
jns
movl
push
and
imul
test
mov
sub
fucom
push
sbb
les
lcall
adc
enter
mov
dec
dec
xchg
cmpsl
adc
loope
call
and
jo
inc
add
sysexit
mov
mov
xor
ret
xchg
mov
stos
push
jo
pusha
jmp
cmc
mov
enter
add
dec
rcrb
or
or
ja
fadd
mov
insb
mov
comiss
pop
dec
add
add
and
pop
xor
call
mov
insb
popa
inc
cmp
fs
scas
pushf
inc
xchg
popl
push
lds
test
add
fwait
mov
dec
push
dec
pusha
mov
mov
pushf
shll
mov
loopne
xchg
push
lea
pusha
fiaddl
loopne
adc
push
jno
movsb
mov
inc
xchg
orl
arpl
jb
mov
test
iret
or
cld
mov
pushf
adc
jo
dec
adc
dec
jl
daa
pusha
fildl
and
js
les
mov
lock
xchg
jo
je
insb
or
in
add
mov
icebp
mov
adc
add
push
xchg
fdivrl
mov
fcomip
hlt
mov
adc
xchg
inc
mov
call
xchg
xor
test
dec
in
stos
test
fsubl
fcoml
aam
mov
push
icebp
mov
rcr
aam
mov
std
test
cmc
rcll
roll
pop
out
mov
xor
scas
and
packuswb
pop
pop
dec
dec
lahf
xor
into
mov
pop
imul
jo
lock
sub
or
or
leave
and
or
cmp
aam
mov
sub
shlb
mov
add
test
pop
and
pop
mov
mov
push
add
sbb
inc
push
in
push
call
into
div
xor
mov
add
pusha
not
push
cmp
cwtl
stc
mov
lds
roll
adc
ret
enter
sbb
push
daa
push
ds
mov
ficoml
movsl
jne
add
loope
inc
les
push
in
jecxz
fcompl
pop
lds
sbb
fwait
and
jne
mov
push
arpl
jb
add
test
mov
pop
stos
mov
inc
rorb
pop
imul
insl
aam
enter
es
mov
mov
push
es
mov
mov
or
adc
std
rorb
and
les
nop
and
mov
mov
add
pushf
pop
and
push
mov
xchg
pusha
xlat
in
orb
insb
enter
inc
jge
pop
xlat
lea
add
cld
out
shll
or
sbb
cltd
xchg
xchg
fsub
aam
xor
lock
fs
aam
mov
dec
fcoms
dec
nop
rorl
inc
cmp
add
int3
mov
lock
test
or
enter
test
sahf
mulb
ret
sbb
shrb
psrlq
cmpsb
adc
fsubs
enter
dec
rcll
mov
leave
insb
daa
pusha
mov
repz
stos
sbb
inc
sbbb
mov
testb
in
movl
mov
cltd
jbe
adc
pop
nop
pushf
mov
push
jecxz
and
inc
adc
mov
pop
jnp
mov
and
inc
mov
add
pop
sub
sbb
xchg
xchg
fstpt
sbb
add
lods
pop
aaa
inc
or
imul
shlb
or
lods
jge
andl
lock
sub
aaa
movsb
fdivr
add
or
movsl
pop
cwtl
or
push
roll
arpl
dec
adc
sub
call
call
test
popa
mov
es
pop
fdivl
and
lahf
into
sbb
dec
test
pop
addb
movsb
in
in
or
nop
pusha
insl
loopne
stos
lahf
push
nop
sbb
xchg
aam
or
xchg
movsb
bound
popa
dec
adc
ret
out
mov
cmpl
inc
stos
xorb
or
arpl
addr16
mov
push
loope
sub
loopne
aam
enter
fildl
pop
sbb
sbb
rolb
jg
inc
sub
pop
sub
add
insl
daa
rcrb
xchg
shlb
cmc
loop
fsts
adc
xor
inc
push
adc
and
test
xchg
jl
add
sbb
popa
mov
fwait
repnz
popf
mov
cmp
inc
enter
cwtl
rcl
cmp
xchg
stos
xor
adc
aad
cwtl
sbb
repnz
jmp
mulb
loope
shlb
mov
cmpsb
xchg
or
das
or
dec
enter
aam
pop
shl
xor
and
mov
add
sbb
push
stc
sbb
sub
and
pop
jnp
fimull
out
cmp
imul
jecxz
add
sbb
in
jne
inc
lock
aam
jbe
or
or
inc
aaa
inc
pop
shl
aam
dec
and
aad
aad
or
shlb
add
mov
jae
rclb
jae
sbb
or
rclb
aad
insl
aad
jmp
ja
mov
add
xor
cmc
fsubl
and
fdivl
rolb
pop
or
mov
aaa
and
dec
pop
cmpsb
lock
adc
mov
inc
sbb
mov
inc
cmpsl
xlat
sub
enter
pop
je
dec
pop
sbb
js
cmp
xchg
dec
fisubs
movsl
jne
xor
mov
fwait
cs
rolb
pop
xchg
push
jb
int
enter
ret
aam
orb
call
adc
fwait
fwait
sbb
mov
aad
shll
imull
inc
das
fdiv
cltd
inc
popa
sbb
jnp
loop
sbb
xchg
je
fsub
push
xlat
or
lahf
call
xor
and
push
sub
jb
jg
nop
mov
shl
push
daa
fidivrl
mov
das
aam
pop
xor
pop
das
jo
sbb
mov
cltd
adc
shrb
dec
cmp
inc
movsl
test
enter
aam
loope
dec
dec
dec
rorb
test
xor
lods
cltd
dec
int
fstpt
pushw
std
faddl
lea
lods
push
icebp
scas
fcmovnb
add
adc
lock
repnz
xchg
xchg
xchg
mov
jno
int3
lods
mov
xchg
sbb
fmull
call
test
push
mov
rcl
int3
or
popa
movl
les
push
mov
adc
mov
xor
dec
lea
add
insl
fstpl
pop
lcall
addps
comiss
adc
jo
add
out
ficomps
xor
aam
add
sub
addl
or
and
fistpll
mov
adc
test
xchg
mov
clc
mov
adc
outsl
pop
and
sbb
loopne
push
pop
test
fistps
or
push
iret
dec
outsl
stos
mov
dec
aas
loopne
pop
pop
outsl
loope
pop
aad
mov
loope
call
push
xor
or
mov
aas
loop
and
and
bound
push
mov
int3
mov
popf
mov
mov
lods
adc
lods
test
pop
rolb
xlat
je
add
in
xor
mov
mov
pop
and
mov
cwtl
fldcw
or
outsl
aad
in
pushf
pushf
inc
mov
mov
sub
add
mov
push
pop
and
dec
push
or
inc
push
pop
inc
sub
mov
es
or
xchg
xlat
fnstcw
fs
mov
jge
xor
dec
or
dec
test
iret
sbb
std
push
mov
imul
xor
inc
addb
mov
push
mov
xchg
sbb
add
mov
add
push
nop
adc
add
push
movsl
xor
or
mov
insb
or
stos
out
fs
faddl
add
fs
bswap
pop
xchg
sbb
fs
rcll
xchg
movl
pop
jb
or
sub
add
fcompl
popa
and
mov
xchg
add
mov
movsl
xor
xchg
sbb
loopne
fdivl
addl
scas
inc
inc
call
add
jp
xlat
mov
fsubrs
icebp
jbe
cmpsl
loopne
sbb
dec
orb
sub
cmp
xorb
inc
in
dec
in
shlb
xor
cmovnp
in
mov
inc
push
add
cmp
mov
sub
imul
mov
lods
mov
xor
jne
pusha
mov
clc
xor
push
rcr
cwtl
dec
adc
dec
arpl
hlt
rcl
dec
xor
enter
mov
in
jne
lods
push
or
pop
dec
push
fcoms
push
insl
xchg
dec
push
insl
test
add
sub
jo
dec
pop
insb
adc
and
sbb
in
cli
sub
cld
dec
xor
call
add
xchg
dec
cmpsb
adc
cmpsl
dec
fwait
hlt
cmp
pusha
sti
mov
enter
cli
in
mov
add
adc
mov
mov
and
and
jecxz
aam
fwait
test
loopne
enter
lods
dec
mov
sbb
filds
mov
jnp
inc
and
movsl
dec
ja
imul
push
sbb
pop
sbb
test
out
pop
loope
stos
inc
dec
jno
inc
popa
and
push
sub
orb
add
mov
aad
push
adc
pop
lahf
rclb
push
pop
mov
jo
aas
add
cmp
sub
and
test
or
xor
mov
mov
inc
fcomip
or
cmp
andl
rorb
daa
in
jge
jecxz
cwtl
xchg
sarb
mov
xorb
sti
aam
out
push
and
push
popa
adc
adc
in
je
pop
nop
fisubl
pop
adc
mov
and
inc
decl
mov
mov
adc
pop
sub
mov
inc
outsb
sbb
mov
cmp
repz
test
adcl
sbb
jne
aam
lods
mov
cmp
xor
cli
adc
or
inc
inc
daa
add
pop
lahf
js
adc
adc
hlt
mov
aad
lds
push
sbb
les
adc
repz
cmp
in
inc
or
cmc
jo
add
cmp
cmc
mov
je
arpl
sbb
call
dec
out
stos
xor
mov
push
aaa
cmpsb
idivb
fwait
cmc
test
or
push
or
xor
inc
adc
pop
rolb
mov
adc
loope
jecxz
xchg
mov
int3
mov
add
or
clc
add
clc
xor
mov
sub
mov
adc
sub
add
push
sbb
dec
aam
sti
test
push
dec
adc
xor
movsb
lods
popa
mov
nop
sub
cwtl
shrl
and
fs
mov
imul
mov
sbb
das
push
xchg
mov
out
inc
push
push
cmp
cmpsl
fdivs
xchg
adc
jbe
mov
ss
mov
jbe
pushf
adc
ss
mov
inc
xchg
sub
lods
adc
lds
or
int
shrb
scas
sbb
das
loopne
in
pushf
sbb
xchg
ja
cmp
push
mov
inc
cld
or
je
cmpsb
jecxz
frstor
ljmp
clc
aam
mov
adc
sub
test
add
pop
cmp
inc
mov
mov
cld
int3
aas
dec
push
dec
mov
jg
xchg
push
sbbl
mov
push
push
dec
std
pusha
mov
pxor
or
xchg
dec
sub
pop
sbb
scas
dec
push
dec
call
ljmp
add
sbb
les
jne
or
das
enter
movsb
fadds
xchg
out
pop
or
adc
or
stos
push
push
lods
imul
sti
lods
sbb
f2xm1
inc
cmp
xchg
adc
pop
add
dec
and
mov
ret
fimull
mov
ljmp
or
aam
shrl
sub
cmp
rcl
enter
ret
sub
add
mov
mov
mov
sbb
imul
popf
push
add
sub
xchg
cltd
and
mov
pop
sub
jge
jmp
add
jmp
dec
dec
fcompl
dec
sub
and
ljmp
pushf
inc
sub
icebp
dec
push
pop
rcrb
push
or
cmpsl
pop
add
sbb
hlt
inc
enter
adc
jne
sbb
and
cmpb
enter
cwtl
adc
test
mov
rorb
xchg
sub
fwait
sbb
movsb
push
insb
sub
test
mov
mov
inc
paddusb
jb
xchg
and
xor
xchg
cmp
xadd
mov
mov
cmp
xor
sub
jo
adc
mov
cltd
mov
xchg
xchg
mov
std
pop
add
in
mov
dec
mov
pusha
push
scas
insl
pop
push
lea
push
or
jl
and
xor
pop
sbb
add
mov
inc
stos
imul
addr16
xchg
jbe
popf
outsb
and
les
mov
cwtl
inc
mov
dec
pop
and
push
mov
rcl
sub
loope
dec
inc
pop
pushf
mov
imul
dec
dec
pop
imul
aaa
or
in
adc
in
lock
mov
mov
int3
xor
add
and
loopne
add
sub
xchg
or
ja
nop
adc
test
cmp
fsts
inc
shll
loopne
lock
dec
sbbl
inc
jo
jmp
sbb
mov
cltd
inc
arpl
pop
jno
or
pushf
inc
jno
pushf
mov
add
enter
xchg
pusha
jo
lods
pop
imul
sbb
mov
lea
mov
adc
xchg
adc
in
cmpl
mov
ret
sub
out
sub
cmp
dec
adc
imul
fs
sbb
push
pusha
imull
add
or
dec
leave
dec
sar
push
shl
addr16
or
dec
sub
and
and
adc
inc
sub
in
dec
test
sub
push
dec
repz
fistpl
pop
inc
add
bound
pop
fiaddl
ficompl
adcl
fs
mov
addb
mov
arpl
fisttps
shlb
jmp
sub
popf
jge
sbb
pop
aam
imul
fadds
dec
pop
dec
out
sub
mov
popa
inc
in
mov
sahf
mov
sbb
and
mov
jno
add
test
pcmpgtb
xchg
or
mov
imul
rolb
ficoml
sbb
and
sbb
mov
dec
sarb
xlat
inc
insb
mov
cltd
fs
mov
lods
xchg
dec
xor
js
mov
leave
and
mov
je
xchg
add
or
push
sbb
pop
mov
pop
fadd
mov
jmp
xchg
adc
mov
test
ror
nop
sbb
leave
mov
movsl
mov
inc
in
dec
dec
jae
pop
aad
or
ss
mov
adc
mov
mov
pop
pop
jno
insb
repnz
mov
lcall
in
pop
pusha
xchg
das
sbb
xor
pushf
test
sub
popf
add
add
xchg
addr16
inc
and
movsb
and
xor
je
jo
add
nop
andb
mov
adc
push
lahf
mov
repnz
inc
pop
cmp
adc
mov
sub
xchg
sub
repz
and
push
lods
testl
add
sub
push
and
popf
sbb
clc
scas
inc
add
push
pushf
movsb
sub
repz
leave
and
ret
mov
adc
inc
es
in
sbb
enter
sub
pop
lods
dec
xor
les
mov
dec
lds
repnz
or
int
and
and
adc
repnz
push
mov
adc
sbb
xor
dec
rorb
jmp
cmc
jne
arpl
dec
daa
or
adc
adc
xchg
xor
lods
push
sub
push
xor
test
in
rcl
adc
and
scas
adc
xor
and
arpl
in
ds
push
mov
push
test
add
or
movsb
add
adc
fwait
hlt
repnz
or
leave
fsubr
pop
sbb
push
push
lock
push
sub
aaa
push
xchg
dec
xchg
sbb
ret
sbbl
scas
sbb
jb
aaa
adc
xchg
sbb
sbb
negb
fadd
mov
imul
add
dec
pop
leave
jae
adc
push
mov
push
test
popf
pop
mov
xor
aam
push
add
pop
pusha
inc
mov
adc
es
xor
loopne
mov
inc
xchg
inc
mov
imul
das
mov
adc
mov
cs
mov
sarb
mov
mov
jno
fcmovbe
xchg
xor
xor
mov
sbb
sbb
dec
dec
popa
and
dec
sbb
cmpb
adc
adc
cltd
out
push
gs
pusha
in
add
or
scas
inc
add
add
aad
jbe
cmc
xor
roll
and
mov
fucomi
lds
sbb
dec
mov
mov
xchg
mov
jge
xchg
aas
ret
jb
push
stc
xor
std
xorl
sbb
in
fstpl
inc
sub
icebp
shlb
dec
lods
sub
and
add
push
insl
mov
loopne
test
cmp
shlb
decb
cmp
add
cmp
sbb
imul
rclb
imul
scas
mov
or
mov
adc
inc
movsb
add
orb
xchg
jo
cmp
enter
sbb
inc
add
pusha
sbb
rcrl
or
imull
das
and
movsb
add
xor
je
push
cmp
xchg
dec
pop
sub
dec
xor
lock
push
adc
loop
push
fs
mov
adc
mov
dec
inc
xor
sbb
test
cmpsb
jo
je
out
fcoms
js
and
nop
psubb
sbb
add
inc
int
mov
push
mov
sbb
lcall
pop
pop
loopne
sbb
mov
inc
cmpsb
xchg
sub
cmp
nop
inc
test
sbb
xor
ret
inc
add
push
ret
orb
lods
sub
and
pop
mov
or
mov
repz
mov
adc
cltd
cwtl
mov
inc
and
mov
movsl
adc
cmp
adcl
pop
jb
push
ja
stos
nop
push
jge
sbbb
push
adc
aad
sbb
mov
mov
xchg
aad
in
jecxz
or
inc
pop
fdivs
cmpsb
nop
add
pusha
lds
aam
add
mov
push
cltd
nop
xchg
lcall
mov
fisttpll
movsb
cmp
lcall
xor
fisubrs
int
push
int3
inc
pop
fidivrl
fisubrl
dec
mov
or
sub
shl
enter
adc
rol
inc
mov
jnp
cs
mov
pop
mov
test
lock
dec
jmp
and
push
subb
fs
fadds
repnz
or
jmp
fdivrl
adc
fsubrl
pop
xchg
mov
or
lcall
aam
clc
inc
inc
xchg
cwtl
cwtl
mov
and
cmp
adc
lcall
popf
mov
mov
in
out
fwait
sbb
xor
rclb
mov
sub
push
sti
frstor
clc
movl
sbb
in
mov
jp
mov
add
dec
not
pop
sub
jmp
and
cmp
rclb
push
pop
add
jecxz
sub
push
mov
popf
and
popa
jne
cmc
mov
mov
leave
pop
adc
dec
inc
mov
lahf
inc
mov
push
dec
mov
inc
xchg
fsubrl
dec
cs
in
or
add
or
and
std
mov
xor
xor
arpl
rcll
add
lods
clc
mov
popa
mov
mov
inc
push
icebp
movsl
jnp
or
mov
pop
xor
fsts
js
call
pop
stos
rorl
pop
hlt
push
mov
pop
add
pop
add
dec
gs
out
cmp
xchg
lock
xchg
or
sahf
int
cmp
push
jo
add
cwtl
and
sti
xchg
add
sub
add
fiadds
push
fwait
mov
sub
fld
ss
cmp
and
add
inc
incl
mov
add
adc
mov
rcll
xchg
adc
jg
decl
cmp
rclb
cmpl
test
add
nop
add
sahf
out
clc
into
pop
adc
test
aad
push
xchg
mov
jns
imull
mov
dec
in
pop
lods
or
mov
loope
xchg
cwtl
es
mov
xor
lock
rdpmc
add
push
fsubrs
pop
sub
repz
jmp
popa
and
insb
outsl
arpl
imul
push
gs
push
je
arpl
jne
jb
outsb
je
jge
sub
popa
add
js
insl
adc
cmp
push
and
rolb
jb
js
out
in
je
jb
gs
add
or
outsl
add
add
add
fnstsw
add
jne
les
inc
and
jb
dec
push
add
add
imul
aaa
or
mov
add
add
push
cmp
fiadds
inc
inc
aas
push
add
pop
in
fidivl
dec
add
sub
push
insl
rol
pop
xchg
je
je
and
jae
divl
dec
adc
fistpll
fildll
push
or
bound
jns
push
jne
imul
or
jbe
out
divb
insb
jp
outsl
or
out
fisttpl
or
imull
lret
aas
and
outsl
jmp
xchg
out
mov
arpl
xor
mull
lret
stos
insl
sub
push
imul
nop
loopne
ja
cmp
cs
jne
inc
push
data16
or
idivb
sbb
fs
or
mov
repz
pop
or
ret
lahf
popa
push
outsb
pop
inc
arpl
or
mul
fidivl
daa
dec
jbe
mov
fbstp
outsb
bound
ret
jge
adc
sbb
jo
pop
lock
outsl
fistpl
xor
scas
test
fbstp
mov
mov
xor
or
ret
fidivrl
cs
sub
adc
shll
sbbl
mov
jg
lock
or
shll
outsl
xchg
lahf
mov
jg
dec
nop
add
pop
mov
stos
dec
fbstp
jne
jbe
jb
xor
jae
pop
rorl
inc
jnp
pop
stos
bnd
das
ret
mov
mov
sub
fsubs
fistps
or
scas
jne
add
sbb
fdivs
xchg
orl
sti
je
jecxz
stos
fs
imul
arpl
mov
pop
es
paddb
mov
xor
add
mov
xchg
stos
jne
mov
pop
and
pop
stos
pop
dec
jnp
mov
lret
je
scas
cmp
loope
test
fisubs
mov
scas
data16
adcl
adc
mov
int3
push
addb
ja
xor
add
jb
lret
and
scas
enter
sub
das
inc
mov
adc
mov
sbb
stos
clc
sbb
cmp
push
stos
clc
pop
xor
test
xchg
das
cmpsl
fdivrs
jns
pushf
jp
cmp
in
cld
cli
push
jmp
aaa
sub
mov
addr16
jp
ja
pop
sub
sub
push
push
push
out
mov
cmp
jo
lret
or
cmp
mov
cmp
imul
mov
ds
mov
loop
fbstp
shll
cmpsl
push
fwait
cmp
dec
add
sbb
xor
loope
add
add
and
add
das
das
das
and
or
test
dec
ljmp
testb
push
decb
or
or
jmp
je
xchg
jns
aas
dec
add
lret
inc
mov
mov
jo
mov
mov
daa
rcr
fldt
and
sub
roll
outsb
fcmovnu
addb
out
iret
jns
sbb
imul
out
mov
push
arpl
sahf
pop
sbb
jp
jae
mov
cmp
push
and
sub
mov
dec
fbld
lea
fidivrl
pop
neg
iret
fdivs
mov
lahf
jg
outsl
cld
xchg
pop
cmp
cmp
add
out
stc
sub
dec
and
jns
add
das
fildll
jns
push
dec
push
inc
inc
arpl
bound
add
outsl
jbe
dec
arpl
inc
jo
pop
cld
mov
sub
addr16
xor
insb
xchg
mov
inc
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
out
scas
cmpsl
xchg
popl
fdivrl
jg
addr16
popa
je
jb
outsl
in
addr16
xor
and
daa
push
gs
cmp
sbb
dec
outsl
outsb
and
bswap
cmp
insb
xchg
pop
dec
inc
jecxz
popf
jbe
add
out
dec
or
sbb
mov
jae
fildll
je
push
push
inc
push
popa
insb
jne
inc
or
push
rcll
pusha
mov
jg
jge
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
clc
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
xor
pop
pop
pop
fnsave
je
popa
bound
gs
imul
jo
decl
jbe
js
jp
jl
jle
je
jnp
dec
adc
lcall
loopne
fistpll
mov
add
orb
sar
stc
mull
lret
jno
icebp
pusha
inc
mov
clc
ret
cmc
loop
outsb
movsl
add
xorl
sbb
imul
lahf
adc
cmp
dec
add
jnp
xor
jo
xor
stos
jnp
popf
add
dec
pop
sbb
ja
ret
ret
iret
loopne
imul
int3
adc
mov
pop
movsl
std
add
add
add
ret
pop
and
push
pop
push
add
xor
lahf
sbb
and
add
pusha
push
int
js
or
cmp
add
out
fucomip
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
fistpl
int3
push
jo
add
cmp
mov
jno
push
push
pop
icebp
push
outsb
imul
jo
aaa
mov
add
pop
push
mov
sbb
sbb
addl
out
xchg
add
lea
cs
nop
xchg
mov
xchg
mov
push
fisubs
or
or
push
scas
mov
lret
hlt
add
aad
pop
lods
mov
lods
in
add
scas
xlat
push
sbb
cmp
pop
sbb
push
push
inc
sub
pop
fnstenv
dec
inc
pop
dec
dec
inc
dec
inc
adc
sub
test
push
nop
fs
pop
sub
je
cs
jae
dec
bound
notl
outsb
data16
push
jbe
dec
ss
inc
xor
push
xchg
lcall
daa
pop
lea
mov
outsl
and
jb
js
push
inc
cs
sub
inc
outsl
insl
jo
jo
and
and
xorb
les
dec
imul
or
inc
mov
ds
cmp
fistpl
dec
inc
jb
jns
daa
pop
mov
stos
ss
jns
mov
je
and
arpl
je
mov
in
jne
addr16
outsb
insl
mov
jbe
mov
jo
int
mov
jb
and
xor
mov
push
push
lahf
xchg
or
imulb
push
mov
and
pushw
or
inc
imul
pusha
gs
add
push
lds
inc
pop
add
adc
xchg
adc
popa
push
or
ret
pusha
outsb
mov
push
xlat
push
cmp
jae
or
cmp
xchg
or
call
in
or
addr16
subl
gs
push
mov
mov
or
xchg
inc
push
push
push
push
es
insl
mov
push
jne
repnz
push
aam
enter
jo
mov
fisttps
test
sarb
insl
or
imul
inc
stos
shrb
push
inc
test
pusha
jg
xchg
ret
jae
inc
in
add
gs
sbb
addb
mov
sub
outsb
aad
mov
mov
mov
daa
xchg
rcrl
jmp
mov
popw
pop
cmp
mov
es
or
ds
and
fdivrl
inc
jl
push
addr16
es
lock
jle
jle
cltd
iret
shr
add
add
sub
fidivrs
sysret
or
sbb
das
push
xlat
enter
ret
aaa
aaa
and
iret
push
mov
xchg
xchg
out
push
jne
stos
addr16
loopne
mov
sbb
push
push
lock
adc
xor
gs
imul
xorl
hlt
dec
sbb
sahf
inc
pop
sub
fsubl
jo
sub
sbb
sub
mov
out
xor
sbb
add
repz
mov
rolb
mov
enter
iret
repz
push
mov
lods
test
iret
repz
cwtl
xchg
nop
mov
jnp
out
mov
cmp
or
ja
out
pop
insb
push
jns
out
pop
push
push
dec
dec
out
sahf
out
inc
cmp
xor
out
sahf
xor
adc
add
rep
mov
mov
cmp
repz
call
les
jns
dec
inc
xor
or
cmp
shlb
mov
lock
int3
mov
xchg
mov
mov
inc
push
jne
fistpll
sbb
and
add
and
lods
bound
scas
dec
insb
and
mov
sub
mov
enter
add
inc
xor
or
movb
add
xor
add
add
roll
mov
test
inc
and
in
shll
pop
fisttps
or
inc
add
jg
cmp
test
mov
xchg
xchg
xchg
xchg
xchg
call
pushf
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
pushl
mov
rol
enter
int3
int
iret
rcl
rcl
aam
call
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
testb
test
idiv
stc
cli
sti
cld
std
jmp
add
stos
test
sub
and
dec
lea
popa
and
mov
outsb
gs
popa
data16
pop
mov
cmpsb
pop
jns
push
xor
movsl
xor
data16
add
in
les
jo
dec
arpl
jne
insl
aas
inc
insb
fs
sbb
mov
cmp
mov
or
lahf
push
outsl
lods
push
setl
gs
xor
push
inc
adc
push
fdivrp
xlat
add
push
xor
push
dec
inc
dec
cmovns
add
jg
inc
inc
das
push
adc
sub
adc
push
mov
call
in
jg
lock
mov
out
xor
jnp
inc
loop
mov
ds
iret
aas
fsubs
pop
adc
clc
lret
sbb
jb
mov
and
adc
dec
scas
jp
and
mov
fstl
mov
and
inc
sahf
jg
cmp
dec
imul
lret
add
inc
mov
cmp
popf
mov
sub
fwait
ss
sbb
jg
inc
pop
jns
ds
xor
incb
int3
dec
dec
xor
cld
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jg
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
xchg
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
push
mov
jns
mov
dec
test
xor
jle
mov
add
scas
lods
dec
lock
xor
aas
mov
pop
adc
dec
pop
repnz
and
inc
sub
lret
es
mov
fcompp
add
adc
fwait
test
int3
sahf
es
out
cmpsl
jo
scas
pop
xchg
dec
cmpsl
test
dec
pop
ljmp
push
mov
ljmp
push
into
mov
jbe
pop
mov
enter
mov
push
clc
jns
inc
dec
xchg
je
fbld
pop
and
inc
ret
jnp
out
dec
addr16
ficomps
or
es
jae
rorb
add
mov
xorb
xlat
scas
push
or
mov
arpl
xchg
shlb
aaa
js
test
sti
or
ja
popa
daa
mov
jecxz
je
sub
cs
ret
lahf
je
jg
jmp
lock
push
xchg
lret
xchg
mov
arpl
notb
cs
jb
add
mov
sbb
adc
mov
mull
add
xlat
jae
in
jae,pt
insl
jle
or
push
fisubs
cmpsl
mov
add
lock
pop
inc
lret
pop
arpl
xor
rclb
jno
fbstp
out
sub
fisubs
push
push
ret
jg
fwait
xchg
cmp
mov
fcoms
cmp
xchg
stos
add
add
sub
jl
mov
out
or
xor
sbb
jo
aaa
fistpll
outsb
xlat
cs
fs
inc
and
into
xchg
ret
adc
cmp
push
mov
sub
cmpsl
xchg
push
add
add
cmp
pop
add
cmpsb
imul
dec
insl
pop
arpl
or
jecxz
out
push
stos
scas
jmp
imul
sbb
in
pop
roll
es
mov
andb
and
pusha
cmp
xor
push
lods
roll
xlat
cmpsl
sbb
insl
and
dec
dec
outsl
and
fstpt
js
fdivs
dec
jp
cmpsb
stos
or
aas
ja
pop
add
imul
rcrl
adc
pusha
inc
mov
out
inc
fildll
mov
daa
je
adc
push
insl
aaa
insl
aas
arpl
daa
pop
arpl
pop
pop
adc
das
add
and
and
and
jp
insl
pop
jp
jne
and
mov
push
dec
pop
cmpsl
lea
es
fwait
push
mov
dec
sub
jae
lcall
lock
sub
mov
pop
sub
out
into
ret
addr16
repnz
cmp
aas
mov
inc
aas
mov
clc
icebp
loop
addr16
mov
and
loop
jae
jbe
xor
arpl
adc
loop
call
lret
lock
mov
push
cmp
push
push
cmp
pop
add
loopne
or
and
bound
test
cmpsl
and
jnp
sahf
pop
push
adc
aaa
outsl
aas
xchg
pop
xor
push
add
dec
movl
je
or
sub
mov
xlat
xchg
push
ret
adc
scas
cmpl
cmp
mov
stos
cmpsb
push
fiaddl
dec
lahf
dec
pop
loopw
mov
out
test
mulb
out
and
mov
dec
popf
sub
sbb
addr16
xchg
orb
lock
dec
adc
stos
roll
jmp
add
add
pop
dec
out
pop
push
lret
ja
jp
xor
pop
loop
mov
push
arpl
jne
fcoml
scas
rorl
fmuls
and
mov
inc
inc
mov
pusha
adc
mov
ds
addr16
mov
push
test
mov
jo
mov
ja
es
dec
inc
mov
xchg
inc
push
inc
outsl
jge
pop
loope
jo
arpl
test
insb
jg
push
inc
inc
pop
dec
cmc
scas
and
sbb
orl
add
sbb
loopne
aaa
mov
dec
sbb
inc
cmpl
je
pop
daa
scas
clc
je
pavgw
pop
pop
mov
or
inc
push
adc
jbe
xchg
mov
lock
mov
lahf
inc
imul
popa
inc
cmpb
pop
xor
inc
dec
sti
cs
or
inc
jl
sbb
ja
pop
out
sub
jl
imul
dec
xor
je
outsb
out
lret
sbb
bound
ss
repnz
jp,pn
popl
mov
adc
out
cmp
bnd
jecxz
xchg
es
out
xor
rcrl
jl
scas
loopne
mov
jnp
sbb
repz
insl
aaa
mov
add
ja
fnstsw
outsb
sbb
add
add
xor
jno
push
adc
cmp
loopne,pt
outsl
outsl
lret
jl
jo
cmp
cmp
aaa
push
lock
add
lock
jl
pop
sub
xor
popa
lock
mov
imul
lea
jl
and
popa
mov
repnz
jo
call
jl
xor
cmp
es
addr16
and
and
scas
lock
dec
xchg
pop
stos
inc
aad
add
roll
cmp
sarl
shrl
in
les
iret
mov
cmpl
bound
shll
pop
out
les
lods
ljmp
pop
scas
sbbl
pop
imul
outsb
xor
pop
scas
push
pop
adc
xor
xlat
aad
lcall
sbb
insb
test
fcoms
add
add
aas
xchg
testb
imul
adc
lock
mov
push
add
cmp
aam
or
add
mov
inc
mov
mov
or
push
add
mov
push
push
into
in
pop
mov
lock
sub
clc
mov
jnp
push
cmc
bnd
push
ds
clts
addr16
iret
jae
inc
sub
inc
jno
cmp
push
shl
loop
testb
or
inc
fidivrl
test
cmpsb
push
dec
and
dec
push
dec
int3
loopne
mov
push
dec
aaa
pop
xor
cld
lcall
cmp
xchg
mov
out
fwait
mov
les
dec
or
mov
cmp
push
push
cmp
repz
jl
sbbb
mov
push
pop
push
pop
out
jnp
or
aaa
dec
and
adc
imul
outsb
mov
jmp
or
jo
jns
pop
movb
inc
mov
shll
inc
mov
pop
push
mov
or
pop
test
mov
add
popa
jae
imul
and
fmull
mov
jae
insl
pusha
push
popa
jne
or
hlt
sbb
push
dec
bound
xor
pop
sub
and
jle
jbe
push
inc
dec
iret
repz
imul
mov
fnstcw
fs
aas
outsl
lahf
out
sahf
ja
mov
into
jmp
iret
repz
gs
mov
cmove
imulb
push
push
js
dec
stos
cmc
outsb
icebp
aad
outsb
pushl
or
jb
jno
pop
js
in
je
cmp
outsb
lods
push
fimuls
je
jb
cmp
add
cmp
ss
sbb
pop
fcmovnu
inc
xor
and
and
and
arpl
mov
div
xor
cmp
fs
adc
sub
sbb
es
mov
outsb
je
ss
push
sbb
jae
or
imul
dec
outsw
sub
ja
adc
push
adc
cmp
outsb
push
movsl
add
out
mov
inc
popf
icebp
mov
imul
pusha
sub
cmpsl
adc
mov
jge
fmull
ja
daa
call
add
or
hlt
inc
js
push
lds
mov
out
mov
pop
test
rol
packuswb
pop
or
rclb
lret
cmpsl
push
push
in
jae
cmp
cmp
push
pop
into
shlb
add
mov
push
lds
daa
push
push
fstps
rolb
das
jbe
mov
sbb
iret
jge
iret
call
mov
ds
xor
jmp
push
or
sub
mov
jne
aas
and
pop
mov
or
stos
add
sub
iret
and
inc
fs
and
call
adc
rclb
mov
and
aaa
add
insl
rcll
sub
loopne
sub
ja
test
addl
sbb
adc
add
push
or
push
insb
test
mov
stos
add
pop
pushf
dec
jno
outsl
jo
roll
push
loope
cmp
jg
stos
mov
cmc
sti
pop
sub
lcall
mov
imul
push
pop
mov
push
movsb
jecxz
mov
stos
add
lahf
imul
and
je
push
sbb
push
xchg
sbb
xchg
dec
and
mov
add
mov
fwait
xor
fwait
sbbl
rol
sub
imul
push
jnp
je
gs
imul
add
jae
imulb
pop
fwait
mov
data16
xchg
fildl
jnp
fimuls
dec
pop
aaa
pop
bound
loopne
mov
test
adcl
ret
jb
fs
bound
jbe
imul
inc
cmpnleps
pop
adc
imulb
add
push
call
cltd
xchg
and
cmp
inc
pop
adc
cmp
mov
add
mov
lods
add
data16
sbb
add
push
xor
inc
or
je
mov
push
dec
ss
mov
or
mov
ja
movsb
movsl
scas
aad
pop
sti
xor
das
ja
jp
adc
push
inc
andl
mov
fidivrl
sbb
add
mov
jge
test
negl
sub
sub
stos
rcll
aaa
fbstp
jno
cs
mov
inc
sub
insb
jo
outsl
jo
fwait
adc
je
jns
cmp
push
sub
inc
mov
xchg
sub
mull
push
cli
push
mov
xchg
fisttpll
test
sti
and
cmp
fiadds
jb
or
into
push
sub
pop
mov
sub
mov
sti
and
ret
jnp
push
cs
and
icebp
adc
sub
mov
fsubp
sbb
dec
cmc
ljmp
insb
mov
nop
sbb
pop
sbb
in
inc
or
in
add
mov
push
shrl
sub
pop
push
push
imul
aas
shll
ljmp
xchg
rolb
aaa
add
pop
insl
inc
adc
jmp
inc
add
adc
das
inc
roll
and
mov
add
clc
rol
or
test
jae
popl
push
sub
add
push
mov
inc
fbstp
inc
ret
idivb
pusha
popa
inc
lcall
lea
out
lcall
lods
jne
inc
xchg
sub
loop
cmp
loopne
lods
out
rep
jmp
mov
in
arpl
pop
push
cmp
cmp
movsb
mov
out
or
jno
pop
shll
xchg
jbe
andb
test
movsl
push
insb
shll
cmp
add
jmp
roll
pop
mov
sub
cmpsb
jp
mov
push
mov
cmpsb
or
inc
add
loop
divl
add
sti
pop
or
lahf
stos
dec
cmova
xor
testb
xor
shrb
es
cmc
cs
out
scas
cmp
outsl
roll
xlat
or
ja
push
cmpsw
mov
dec
outsl
iret
pop
xor
pop
mov
je
icebp
imul
sbbl
adc
aas
xor
push
pusha
push
xchg
gs
jo
repz
jmp
or
inc
inc
pop
push
sub
cmovg
stos
mov
data16
inc
dec
jne
sbb
jne
arpl
imul
lods
orb
repz
shr
or
or
fnstsw
sbb
sub
xorb
xor
maskmovq
imull
test
lds
inc
dec
daa
inc
fwait
cmp
add
sbb
ss
add
pop
xchg
mov
inc
sbb
jae
xor
fs
xchg
inc
andl
xchg
daa
imul
add
scas
inc
lcall
cmp
xchg
filds
fldt
popa
xchg
add
mov
jno
or
pop
test
popa
mov
divl
or
subb
add
cmova
dec
pop
push
xor
xorb
or
fwait
stos
inc
dec
inc
outsl
insb
adc
and
mov
jae
das
push
or
scas
aaa
stos
in
rclb
pop
loop
add
scas
ja
mov
pusha
pop
push
mulb
sub
jae
sub
jmp
ret
jmp
mov
fwait
inc
cs
add
mov
push
daa
pop
rol
pop
push
dec
xor
mov
pop
mov
pop
jg
fisttps
fisttpll
push
sub
pop
notb
mov
out
add
add
fistl
mov
push
sub
ficoml
adc
jp
testl
mov
cmpsl
mov
mov
pop
jb
jge
outsl
outsl
iret
jp
cmpsb
sti
mov
push
movl
js
xchg
les
outsl
xchg
sahf
jne
jae
mov
add
out
out
xchg
sbb
les
pop
jmp
pop
add
lods
xlat
xchg
or
faddl
imull
cmp
out
loope
dec
sar
pop
add
into
sbb
push
int
mov
ss
adc
add
add
add
out
ss
cltd
out
inc
lcall
es
or
or
or
adc
test
ljmp
and
xchg
and
es
mov
pop
push
push
mov
outsl
out
les
scas
pushl
aas
sub
roll
mov
imul
mov
sub
les
pop
sbb
das
lret
sti
adc
xorb
sub
jg
iret
push
pop
int3
dec
out
inc
movsl
and
stos
adc
cmpl
lahf
add
jl
imul
dec
xchg
pop
sub
lods
pop
pop
push
adc
repz
jo
cmp
inc
jno
fsubr
fbld
loop
fwait
jecxz
push
dec
mov
push
das
mov
imull
mov
xchg
sarl
outsb
popa
and
fists
xlat
insl
sbb
ja
stos
jno
clc
sbb
and
mov
or
cmp
xchg
pop
sbb
dec
iret
shrl
movb
mov
rclb
add
jnp
bound
fwait
push
jecxz
fdivs
dec
shl
jb
arpl
sahf
les
iret
push
cmp
jge
pop
jne
mov
xor
cmp
and
fs
mov
add
sbb
adc
mov
jmp
js
push
jmp
jg
andb
mov
imul
lock
mov
mov
mov
pop
push
mov
out
xchg
bound
mov
sub
pop
mov
in
imulb
insb
mov
mov
push
mov
lock
cs
mov
pushf
in
jb
dec
insl
cld
dec
scas
xchg
stos
lods
pop
push
jb
mov
and
imul
sub
push
leave
test
cmp
cmpsl
xchg
stos
in
xor
in
xchg
pop
and
rcll
addr16
dec
mov
addr16
inc
data16
stos
in
mov
cmpsl
xchg
add
mov
stos
mov
inc
fs
push
leave
push
fs
xchg
pop
and
in
jnp
adc
rcrb
jo
popa
in
jnp
popa
addb
stos
push
leave
test
mov
loopne
push
xlat
push
jb
mov
mov
and
pop
cmp
sub
aad
pop
call
stos
mov
sub
aad
pop
test
pop
pop
mov
pop
mov
xor
mov
js
daa
sti
sbbl
sbb
insl
dec
mov
jg
cmpsl
adc
xor
pop
jg
mov
dec
inc
inc
pop
or
pushf
xchg
mov
inc
out
push
add
push
push
cs
inc
inc
pop
inc
arpl
fmul
dec
scas
xchg
push
dec
mov
inc
mov
and
lds
push
pop
adc
inc
and
xorl
dec
inc
mov
xor
dec
cmpl
sbb
fistps
movsl
push
push
dec
inc
fucomi
xor
aaa
push
sub
inc
pop
inc
push
xor
mov
or
cvtps2pi
andl
fldt
xlat
cmp
inc
push
cmpsl
ret
or
mulb
addr16
lds
inc
outsl
iret
insb
pushf
sub
mov
rcll
addr16
xor
push
xchg
mov
scas
or
arpl
jg
mov
lahf
pop
mov
xlat
mov
test
add
sub
loopne
fwait
push
mov
inc
je
mov
push
imul
and
push
push
ljmp
and
aaa
fistpll
iret
aaa
outsl
rorl
sbb
add
das
push
imul
add
lahf
dec
and
xchg
sti
adc
cmp
aas
das
mov
rcl
jbe
mov
pop
dec
mov
mov
add
and
scas
call
iret
inc
push
aam
rorb
sbb
inc
inc
jl
mov
dec
ret
aaa
outsl
dec
imul
pop
hlt
pop
mov
in
popa
adc
cmp
or
sbb
repz
call
xor
inc
jbe
in
dec
scas
sbb
pop
or
aaa
sub
xlat
add
xchg
ret
mov
bound
add
rorb
inc
sbb
or
inc
mov
ret
jecxz
cmp
and
dec
xor
lock
loope
addr16
addr16
out
mov
push
je
fs
sbb
sbb
je
arpl
sbb
lcall
and
dec
aas
aaa
test
sub
jmp
imul
xchg
test
or
bound
jae
ss
mov
cmp
popa
jae
js
outsl
dec
adc
pushf
js
xor
and
jb
jnp
dec
sbb
les
pop
add
and
or
pop
mov
or
test
stos
or
and
jl
jecxz
or
jo
jo
add
aas
outsb
jbe
pushf
adc
testl
mov
nop
dec
out
mov
popf
push
sahf
dec
sahf
outsl
push
test
outsb
lahf
mov
push
push
in
jnp
cmp
inc
cmpsb
xchg
mov
push
ds
pusha
dec
insb
xchg
lock
cmpb
inc
out
push
jl
adc
sahf
and
bound
xorl
xor
inc
or
inc
xchg
mov
mov
push
inc
in
add
mov
mov
adc
outsl
ss
test
cmp
mov
mov
ljmp
mov
cmpsb
setno
xchg
je
mov
xor
xor
fnsave
adc
cwtl
jl
jecxz,pn
dec
cmovno
mov
setp
or
aas
xor
ss
adc
jno
fwait
out
xchg
dec
pusha
mov
ja
mov
addr16
fimuls
jg
out
addb
je
adc
or
rclb
jae
mov
rolb
mov
or
xor
ja
popf
test
imul
xchg
adc
lcall
js
adc
test
jecxz
sub
xchg
or
push
xchg
pavgw
pop
stos
ss
mov
enter
cmc
add
adc
out
notl
addl
shll
dec
push
push
je
push
outsb
xchg
push
bound
ja
mov
push
cmp
shlb
push
or
add
mov
imul
push
call
xchg
insl
xchg
fidivrs
push
mov
jns
pop
mov
inc
pop
ret
fs
dec
lock
pop
or
into
xor
pop
lds
jbe
pop
das
dec
shlb
jmp
imul
mov
or
cmp
js
xor
inc
js
xchg
jbe
sarb
js
inc
push
cmp
xorl
ss
push
dec
mov
bound
and
mov
incb
shrl
push
mov
jecxz
jo
fisubrs
cmp
push
pop
push
faddp
xchg
outsb
sbbl
xlat
dec
jecxz
xchg
fidivs
mov
lcall
adc
cs
fs
inc
mov
addl
dec
dec
daa
xchg
xor
sarb
mov
pop
js
inc
pop
fucomip
inc
bound
imul
pop
pop
mov
out
fidivrs
push
es
ss
outsb
pop
push
push
jge
push
mov
fs
inc
pop
dec
jnp
or
add
and
jge
sarl
pop
push
sysexit
mov
loope
aas
dec
cs
sahf
push
outsl
pop
out
loope
push
push
sub
xor
push
scas
push
insl
mov
inc
icebp
pop
jnp
ja,pn
xor
push
jp,pt
jp
js
pop
add
ds
movsbl
adc
sahf
dec
das
xor
mov
pop
outsl
pop
sarl
js
push
into
roll
outsl
enter
imul
sbb
pop
push
push
sbb
adc
jp
call
fwait
arpl
aam
testl
outsl
inc
pop
stos
xchg
shlb
test
jnp
xchg
jo
xchg
jle
jo,pn
test
jle
xor
add
push
lea
fcmovnbe
pop
dec
pop
inc
scas
add
xchg
inc
cli
pop
xchg
daa
ss
jno
add
sub
mov
and
add
pop
js
sub
xchg
mov
loop
push
imul
pusha
push
inc
jae
cmp
lret
dec
insb
xorl
shlb
sbb
inc
inc
add
xchg
mov
mov
arpl
lret
push
lea
popa
add
add
add
mov
les
add
xor
dec
lret
daa
pop
sub
lahf
inc
daa
pushf
roll
adc
mov
sti
pop
push
mov
adc
mov
mov
notl
and
iret
fadds
pusha
jnp
mov
jnp
inc
add
mov
insb
outsl
popa
fs
outsl
test
fidivrl
bound
test
aas
add
adc
insb
sbb
fs
sbb
lds
add
sub
pop
cmp
cmp
mov
das
xchg
push
adc
gs
enter
adc
jae
popa
or
loopne
pop
cmp
lcall
pop
cmp
outsl
movl
xor
or
enter
push
pop
nop
add
xchg
iret
xchg
out
add
push
dec
pop
repnz
inc
push
cli
cmpsb
std
mov
jne
jo
arpl
xor
jg
push
push
cmp
ja
xor
xor
push
dec
add
or
inc
adc
mov
pop
mov
xor
pop
repz
lea
rcll
cmpsl
outsl
sbb
fidivl
mov
pusha
mov
inc
add
xor
push
add
adc
dec
das
push
sub
cmpb
pop
pop
xchg
mov
adc
pmaxub
cld
shlb
cli
cmpsl
fildll
rcr
sub
scas
push
adc
aam
xlat
pop
adc
mov
push
addr16
xchg
push
sti
sti
and
stos
fimuls
pop
aad
movsl
and
movsb
stos
xor
arpl
and
iret
inc
xchg
les
adc
das
or
adc
repz
mov
iret
add
mov
xchg
and
imul
mov
xchg
push
mov
nop
clc
mov
adc
orl
jns
add
das
mov
pop
iret
fbld
dec
lods
xchg
outsb
dec
arpl
jae
daa
shll
jbe
arpl
dec
cmpsl
mov
push
xlat
outsl
fists
icebp
xor
xor
sub
xlat
push
ret
sub
sbb
fs
mov
les
add
sub
jb
push
cmpsl
inc
shrl
push
add
add
lea
add
das
mov
ja
mov
inc
and
mov
mov
addr16
lahf
sub
ret
lea
jae
cmp
sarl
jnp
push
fmull
push
sbb
xchg
add
xor
imul
testl
cmpsl
dec
cltd
or
xchg
int
pop
add
add
pop
or
fldcw
add
das
adc
sbb
and
inc
iret
xor
inc
mov
sti
out
mov
mov
mov
xor
add
shrb
ret
sub
mov
insb
shrb
xchg
pop
adc
ss
dec
and
add
ss
dec
xchg
rclb
lret
str
flds
cwtl
or
and
das
decl
fnstenv
push
jae
ret
push
fcmove
xor
aaa
outsl
js
shlb
mov
fadds
pop
shlb
mov
mov
cmp
and
mov
add
adc
idiv
call
cltd
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
mov
pusha
or
mov
sub
sub
pop
repnz
mov
sbb
mov
ds
pop
sbb
lods
sub
and
jle
jo
fsubs
insl
std
mov
mov
pop
dec
xchg
push
sarl
jecxz
dec
push
pop
mov
pop
adc
adc
pop
push
and
push
scas
mov
jle
rcll
std
jp
dec
sbb
sub
ss
cltd
pop
fs
add
roll
inc
aaa
push
xchg
clc
xor
and
fsub
adc
dec
mov
inc
dec
dec
pop
xor
xor
pop
and
sub
jns
add
sub
in
inc
xchg
pushf
notb
les
dec
dec
jb
cmp
repnz
test
inc
outsl
pop
pusha
or
push
or
xor
lahf
mov
pop
mov
lahf
mov
cmovs
lods
or
lods
pushf
dec
dec
and
pop
mov
pop
daa
add
sarb
in
or
xorb
cmp
sub
pop
xor
inc
adc
inc
push
xor
fldl
jp
inc
addr16
js
imul
inc
ss
cmp
rcrb
clc
pop
cmp
orl
daa
add
aas
nop
aaa
dec
addr16
push
cmp
mov
jne
es
je
bound
imul
addl
inc
and
inc
and
scas
outsl
or
sub
and
es
mov
xchg
adc
pop
sbb
loopne
xchg
outsl
pop
dec
push
push
clc
inc
xorb
adc
insl
int3
inc
pop
das
outsl
xor
ret
outsb
addr16
or
xchg
cmc
or
call
aas
fwait
inc
push
inc
pushl
into
jb
mov
xor
dec
or
jbe
adc
and
out
push
out
pop
add
pop
jb
pop
pop
dec
ficoml
fcmovnbe
gs
repz
test
cwtl
cmp
and
inc
dec
dec
mov
inc
aam
push
jae
sbb
pop
je
les
pop
xor
iret
jbe
insb
sub
ljmp
pop
cmc
cltd
dec
addr16
push
mov
aaa
dec
inc
arpl
cmpsl
sbb
test
add
ss
cmc
jnp
mov
es
push
xor
fs
in
jns
int
or
inc
xchg
pop
pop
and
xlat
cmpsb
jno
jns
in
aad
movl
cmp
nop
out
xchg
xchg
test
gs
mov
movl
mov
int
hlt
sub
sub
push
or
fildl
daa
scas
and
jnp
insl
popl
push
mov
push
push
sahf
fcmovne
imul
xchg
daa
enter
aaa
imul
sbb
into
and
cmpsb
and
or
mov
push
mov
stc
sahf
xor
push
es
mov
fldcw
sub
push
lock
in
jns
cs
push
lahf
push
jns
loope,pn
push
aam
sahf
addr16
loop
int3
jmp
or
pop
sub
roll
andl
add
addr16
repnz
jnp
rcr
repz
dec
sbb
push
mov
jns,pn
sbb
push
cmp
outsb
push
jle
out
cmp
xlat
outsl
pop
adc
out
enter
pop
testb
sub
aas
push
push
imull
out
cltd
mov
clc
adc
xor
pop
clc
dec
testb
and
clc
mov
out
push
ja
aaa
jbe
mov
push
popf
dec
jae
push
push
push
or
push
test
outsb
fsubl
js
outsl
cmp
and
jnp
mov
insl
push
cmp
sub
incl
mov
fdivp
cmp
pop
pop
mov
add
pop
inc
mov
fildl
mov
es
push
popf
out
sahf
int
call
neg
ja
xchg
mov
jmp
ljmp
in
jmp
jg
add
jns
dec
and
call
cmp
out
repz
or
cmp
lods
into
icebp
out
adc
fistpll
xchg
mov
imul
shl
add
repz
pop
cmp
fwait
lds
cmpsb
cmp
or
and
jg
dec
sbb
scas
sub
mov
test
pop
and
sbb
mov
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
mov
lahf
add
idivb
pop
mov
push
and
pop
sbb
or
sarl
enter
adc
or
adc
cs
mov
daa
or
adc
pop
stos
ret
scas
aaa
inc
test
dec
stos
addr16
or
mov
out
xorl
and
divb
and
xchg
out
cmp
push
enter
imul
aaa
xor
push
js
xor
adc
mov
imul
mov
into
cmp
add
and
jmp
sub
or
jmp
stos
xchg
pop
out
xchg
pop
popf
aam
push
fstl
add
pusha
daa
push
dec
clc
add
jb
popa
je
mov
imul
jecxz
clc
sahf
mov
inc
mov
in
popw
dec
sysret
push
ficoml
push
jmp
test
ljmp
jmp
jb
add
cmpsl
push
jnp
mov
add
inc
rorb
mov
je
lahf
dec
mov
xchg
inc
test
mov
xchg
cs
fisubl
scas
test
or
das
outsl
xlat
popf
hlt
inc
rol
mov
jl
jo
inc
sub
imul
push
pop
dec
inc
add
shl
outsb
insl
xchg
mov
cs
jmp
daa
dec
mov
pop
xchg
push
sbb
pop
fs
mov
test
dec
xor
dec
and
imul
daa
xchg
push
add
and
test
xor
les
fisttpl
and
mov
pop
outsl
dec
decl
push
incl
addr16
jo
xor
cmpsl
test
jg
dec
fildll
sbb
outsb
push
jnp
push
push
dec
cmp
add
add
inc
mov
lahf
push
adc
cltd
inc
jg
add
adc
or
add
push
sbb
pop
movsb
sub
insl
push
dec
jmp
adc
dec
aas
sbb
lock
ja
and
je
data16
fcoms
sub
gs
je
adc
adc
pop
das
mov
or
arpl
mov
les
aam
mov
loopne
addr16
rcr
sti
inc
lods
jmp
iret
xchg
and
jo
lahf
fisubl
das
jecxz
pop
push
add
movsb
psubq
ja
jp
inc
xlat
mov
sub
pop
jg
cwtl
or
jecxz
and
sub
outsl
das
mov
pop
push
fcmovu
ret
mov
daa
mov
cmp
and
fimull
das
ficompl
fdiv
inc
das
push
loopne
mov
xchg
popa
add
pop
rol
adc
sbb
insl
subl
mov
xchg
add
jnp
or
pop
movl
pushf
rol
pop
sti
and
mov
repz
out
jbe
inc
ret
push
and
xorl
out
scas
xor
and
into
add
por
pop
push
push
jg
loope
push
push
push
xor
stos
ret
sbb
add
or
packsswb
add
jg
repz
add
cmp
aas
or
addl
or
jg
outsl
iret
lds
add
cmp
jmp
adc
jnp
aas
add
rcrl
fidivl
aam
negl
pop
cli
cmp
mov
repnz
popl
pop
push
lods
xorl
scas
in
mov
divl
push
inc
data16
rorl
dec
or
mov
repz
push
lahf
mov
inc
rolb
fistl
add
dec
loope
sbb
push
aas
jne
sbb
add
cmpsl
push
push
adc
aas
xlat
jg
outsb
pop
icebp
pop
add
testl
pop
pop
inc
iret
push
fistpll
ret
adc
mov
daa
push
xchg
fbstp
das
adc
adc
jno
sti
or
shrl
or
popa
insl
jo
movq
je
add
addr16
jo
jae
scas
mov
jno
outsl
xor
push
adc
les
jo
pop
sub
out
jo
push
jne
or
adc
cltd
dec
ljmp
outsl
bound
mov
mov
js
clc
dec
jae
push
xor
sti
xor
mov
mov
inc
sub
push
lods
mov
push
mov
imul
push
add
gs
addr16
mov
mov
adc
push
push
fldt
testl
out
stos
push
and
test
ret
bound
cmp
mov
bound
pop
test
rolb
pop
into
dec
push
push
dec
jne
movsb
mov
push
pop
mov
mov
adc
cmpsl
pop
cmp
dec
pop
pop
shll
push
push
and
mov
addr16
push
aam
shlb
jns
jb
iret
push
or
mov
fcoms
dec
sbb
xor
call
out
inc
outsl
outsb
or
aaa
inc
insb
mov
sysret
daa
sbb
orb
xchg
jl
loope
adcl
pop
sub
out
ds
pop
imul
pop
and
popf
scas
inc
push
dec
inc
dec
push
xchg
add
lock
sbb
add
mov
out
jge
inc
sub
movl
add
pop
sbb
inc
into
inc
leave
add
ja
aad
incl
and
ja
insb
jnp
and
pop
mov
sub
and
sbb
sbb
imul
pop
daa
daa
daa
push
in
jg
mulb
sub
push
pop
inc
inc
inc
push
inc
pop
and
loopne
out
pop
or
aas
js
insb
cwtl
in
cs
push
das
sbb
push
and
insl
and
and
lods
pop
das
push
sbb
mov
daa
and
mov
outsl
ds
push
pop
sbbl
pop
push
sbb
pop
and
aaa
push
add
mov
mov
es
push
and
ds
mov
push
mov
mov
popa
add
add
lahf
mov
xchg
jbe
mov
fsubrs
mov
mov
int3
lahf
outsb
fnsave
mov
int
mov
lods
flds
enter
pop
and
shll
scas
mov
adc
scas
lods
loope
mov
inc
xor
mov
nop
int
adc
lahf
fstpt
pop
mov
and
out
outsl
xor
imull
sub
pop
mov
stos
push
mov
cmpsb
dec
sub
lret
out
popf
sbb
popf
movsbl
sbb
popa
das
lods
adc
jmp
js
insb
ljmp
pop
adc
outsl
arpl
inc
imul
popa
rol
jg
outsl
and
and
arpl
mov
mov
insb
jns
fstp
adc
movsb
outsl
je
int3
push
push
xchg
dec
adc
dec
cs
arpl
mov
and
xor
and
sarb
add
jae
loop
dec
inc
pop
and
cmpl
push
push
test
outsl
fs
gs
jo
jns
add
iret
inc
mov
ja
lock
outsl
insl
jne
xchg
jbe
bound
fisubrs
or
addr16
icebp
bound
cmp
and
push
mov
pop
gs
inc
insb
mov
jbe
negb
incb
mov
inc
sub
aaa
sbb
outsl
jo
popa
imul
test
dec
sub
xor
push
inc
out
mov
in
orb
inc
or
inc
xadd
pushf
cmp
sti
sbb
inc
cmovo
fcmovnb
adc
cmpb
aas
nop
jo
bswap
and
outsb
pop
pop
pavgb
mov
mov
mov
pop
lods
dec
push
cs
push
add
jnp
fwait
iret
inc
sbb
lods
sbb
pop
mov
sahf
mov
inc
lods
popl
hlt
fdiv
jle
add
add
adc
add
insb
add
mov
jo
dec
aaa
sahf
pop
iret
fcmovnu
lcall
push
mov
fsubp
pop
add
cwtl
xchg
daa
outsl
inc
xchg
push
lods
fistpl
jns
daa
jns
fcmovne
sub
xor
xor
fstpl
addr16
scas
filds
pop
push
push
ss
pop
and
push
pop
push
and
add
es
push
jg
pop
dec
jnp
mov
fisubl
inc
enter
or
inc
das
outsl
das
mov
pop
lds
adc
sbb
adc
scas
push
cmpsl
add
out
lahf
pusha
push
cs
pop
push
adc
cwtl
ret
jle
mov
push
loopne
add
cwtl
cmp
nop
imul
hlt
mov
xchg
cmp
out
inc
cs
data16
push
inc
dec
push
outsl
xchg
xchg
jl
enter
cwtl
xchg
jl
ret
jae
ror
or
pop
rorb
mov
nop
enter
push
inc
adc
mov
inc
daa
adc
outsl
xchg
outsl
pop
daa
add
and
mov
test
enter
movsb
addb
fidivs
imul
mov
pop
adc
dec
add
lock
loopne
sahf
mov
mov
aas
pop
ljmp
xor
sbb
inc
outsl
mov
xchg
add
jbe
fisubrs
loopne
cld
mov
ja
pop
or
adc
popl
test
xor
inc
scas
fcomi
dec
pop
push
push
mov
inc
or
enter
pop
jl
mov
xor
lahf
repnz
sub
xchg
loopne
lea
popl
pop
sub
push
out
pop
cmp
inc
aas
addr16
or
les
orb
repnz
mov
cs
daa
les
aam
mov
xlat
pop
pop
add
adc
in
jne
push
push
and
insl
mov
jmp
scas
cmp
xlat
dec
pusha
sbb
in
test
enter
int3
jnp
out
inc
pop
pop
faddl
in
outsl
sbb
dec
cs
out
test
pop
sub
cmp
outsb
imul
hlt
inc
sahf
or
jl
pushf
nop
or
hlt
insb
pop
and
cmp
repnz
or
dec
lahf
mov
mov
or
mov
lahf
mov
ja
jl
jns
in
insb
jl
inc
cs
jl
test
in
nop
lods
mov
mov
mov
pop
and
and
nop
pop
rolb
cld
sahf
out
out
cld
jle
cmpsl
pusha
je
jnp
in
cld
jg
sahf
or
pop
sub
insb
push
in
nop
movsb
push
clc
pop
or
mov
imul
cs
js
dec
cmpsl
pop
inc
cs
jo
js
out
xchg
jg
movsb
mov
mov
push
movsb
cmp
jb
mov
out
test
push
sbb
pop
enter
adc
out
fmuls
pop
insb
test
sub
jg
int
and
cmp
lods
shrb
nop
dec
cmp
mov
lock
pop
adc
and
repnz
lock
test
push
or
nop
das
or
imul
inc
sahf
movsb
mov
cs
nop
xchg
call
test
call
pop
pop
adc
xor
cmpb
dec
lahf
inc
sahf
pop
pop
ja
inc
test
mov
inc
inc
pop
sub
test
aam
movsl
stos
ja
in
clc
orps
cmpsl
fs
adc
cwtl
arpl
pop
push
daa
arpl
push
dec
addr16
sahf
pop
pop
andb
cmpsb
out
mov
cwtl
push
cmpsl
divps
shlb
jb
sub
cmpsl
shlb
cmpsb
ja
ss
xor
dec
addr16
cwtl
movsl
push
cmpsl
jg
fimuls
out
mov
cwtl
mov
pop
out
mov
xchg
enter
test
inc
and
push
jb
ds
push
lds
gs
inc
aas
push
cmpsl
repnz
pop
or
sub
cmp
adcb
cmpsl
jo
les
iret
test
call
pop
xor
jnp
data16
push
cmp
adc
ja
mov
cmp
repnz
pop
enter
inc
mov
enterw
and
lods
lea
cmpsl
mov
pusha
adc
addr16
insl
or
dec
dec
inc
ja
and
lahf
cmp
insb
push
and
push
inc
repnz
nop
xchg
jg
push
pop
rcrb
in
jbe
push
push
insl
dec
adc
push
inc
jg
rolb
shll
push
inc
sahf
rclb
add
mov
sahf
or
movsb
mov
mov
mov
push
push
inc
and
or
or
push
cmp
lahf
dec
add
clc
xor
pusha
test
insb
call
mov
inc
inc
jg
pusha
pushf
subb
pusha
inc
iret
add
mov
daa
push
arpl
pop
push
xchg
in
rolb
in
insl
push
ljmp
fildl
pushf
or
inc
push
mov
lcall
adc
test
and
imul
enter
jbe
push
repnz
pop
cmpsb
test
mov
aaa
ja
cmpsl
andb
sahf
cwtl
dec
dec
xor
ja
or
inc
lods
fsubr
cld
add
pop
iret
push
inc
inc
lock
fdivl
inc
dec
adc
cmp
faddl
inc
mov
ficompl
mov
push
mov
sbb
enter
inc
rolb
lahf
xor
inc
ss
xor
push
insl
and
mov
insl
insl
inc
lahf
push
test
mov
lahf
jl
add
nop
jl
repnz
enter
rclb
enter
test
daa
fs
aam
adc
dec
and
jnp
xor
out
ficompl
jo
pusha
outsl
leave
orb
out
sahf
or
shl
mov
jnp
or
push
aam
pop
adc
not
outsl
aas
dec
pop
jns
mov
lods
mov
pop
cwtl
aas
dec
orb
pop
fsubr
jo
inc
add
enter
or
mov
lods
inc
xchg
fcmove
mov
outsl
add
cwtl
lret
inc
push
or
inc
out
hlt
mov
idivl
xchg
iret
test
imul
jmp
add
js
enter
aad
fimuls
inc
aas
popl
mov
addr16
cmp
addb
mov
xchg
pop
mov
mov
dec
adc
in
pusha
pop
daa
mov
out
idivb
imul
push
in
sub
test
incl
dec
sbb
jl
inc
fisubl
sbbb
nop
int3
cs
loopne
ja
dec
mov
pop
enterw
ja
xlat
mov
dec
inc
pop
xchg
jae
pusha
arpl
jae
push
xor
sbb
nop
ss
adc
ret
out
in
cs
pop
lahf
dec
daa
scas
movsb
mov
outsb
call
dec
scas
in
inc
cmp
dec
scas
in
xor
in
scas
sub
xchg
jnp
arpl
push
xchg
cwtl
push
jne
dec
push
imulb
sub
jl
subb
ss
jnp
addl
add
mov
iret
mov
xchg
jp
pushf
andb
out
xchg
push
fcoms
sahf
jns
sti
cmp
js
js
ja
push
fadds
dec
xor
cmp
loop
sbb
jne
outsb
enter
jo
jne
add
orb
jb
pop
mov
inc
xchg
enter
cmp
cmp
add
jns
jbe
pusha
add
and
iret
mov
add
iret
jae
cmp
cwtl
fdivs
cmpb
push
inc
mov
push
pop
jbe
jg
push
cmp
jg
jbe
fimull
jg
add
dec
push
cmp
xchg
pop
cmp
insb
push
ds
add
mov
dec
faddl
enter
filds
dec
aaa
subl
sub
js
push
sub
enter
outsl
add
cmp
xchg
je
mov
fdivs
lods
add
dec
and
js
fs
repz
hlt
ljmp
lods
nop
stos
loopne
pushf
xor
dec
xchg
in
fbstp
rcl
hlt
insl
pop
aaa
fs
push
lock
mov
add
scas
add
enter
fs
pop
enter
insl
sub
cmp
jb
jp
jp
or
outsl
add
dec
mov
sbb
sub
psubusb
sub
jnp
push
inc
sbb
fidivrs
jno
jp
jp
pop
js
cld
in
sarl
rcrb
pop
add
jle
adc
cmp
jg
out
scas
aad
jnp
ja
daa
nop
sub
jle
sub
jnp
out
ja
faddl
enter
call
aaa
sbb
and
add
push
jl
ss
xchg
cmp
pop
jl
push
jbe
js
inc
add
scas
add
enter
pop
or
add
fldl2e
ret
pop
clc
xlat
mov
je
push
xchg
fcomps
outsl
jge
fucomp
test
add
je
ja
outsl
and
call
mov
jo
pop
enter
inc
ss
jg
jle
push
clc
loope
cmp
jg
pop
push
les
and
dec
and
popf
push
mov
cmp
pop
sbb
aaa
mov
mov
fimull
divl
jb
jns
sub
xor
outsb
loopne
push
fildll
bound
jno
in
push
and
in
in
aam
push
adcb
push
addl
rolb
repnz
shll
or
mov
or
mov
pushf
pusha
pop
jg
jg
adc
flds
xor
je
adc
popf
sub
movsl
xlat
or
test
dec
andb
push
ret
push
push
jae
pop
adc
or
mov
push
add
inc
outsl
adc
mov
and
cmp
mov
nop
inc
ds
add
pop
sahf
adcl
sub
xchg
aaa
cmpsb
xchg
int3
push
mov
aaa
fcmovb
push
add
fisubl
in
aaa
outsb
cld
in
mov
jo
jae
lds
cmp
scas
dec
mov
add
sub
jle
or
lods
cs
jg
mov
jbe
inc
imul
push
cs
add
push
or
pop
inc
push
dec
addr16
xor
or
testl
mov
mov
dec
jg
fbld
aaa
pop
lahf
sti
mov
test
push
aaa
push
test
dec
push
sub
add
adc
xchg
shll
or
or
subl
adc
mov
push
push
fldenv
test
add
inc
push
jb
add
adc
lock
dec
pop
les
push
je
xchg
enter
ss
push
int3
xchg
dec
test
or
movsb
cmpsl
cmp
je
inc
dec
mov
or
xor
out
xchg
pop
outsl
add
xchg
push
pop
or
fbstp
test
gs
outsl
fbstp
test
add
push
repz
aaa
movsl
push
xchg
fsubrp
add
adc
pop
pop
lods
and
or
in
dec
mov
out
add
mov
and
mov
insl
cmp
mov
or
pop
leave
xchg
pop
add
ja
dec
enter
mov
push
pop
aas
and
xor
arpl
cs
pop
mov
sub
xlat
fcomip
data16
into
xor
add
lods
pop
xchg
ja
add
pop
dec
rcl
lahf
push
decb
mov
push
ljmp
andb
je
aaa
mov
mulb
js
jo
je
lahf
cs
nop
push
nop
mov
jns
nop
mov
lods
incl
mov
adc
in
enter
xor
pop
movsb
inc
ja
xor
outsl
xchg
in
xor
push
mov
dec
mov
push
pusha
in
cmpsl
fsts
pusha
int
push
inc
and
repz
mov
imul
ds
out
js
fmuls
and
stc
cmp
repz
mov
jns
cmpsl
aas
bound
cmp
cmp
es
out
sahf
cmp
xchg
shl
daa
ds
repz
gs
pop
sub
imul
insl
sub
int
sub
lahf
out
sahf
jnp
mov
lcall
pop
sub
jns
xchg
mov
or
stc
cmp
shll
jae
fnstsw
out
sahf
cmpsl
test
cmp
cmp
mov
ljmp
dec
push
jle
out
cmp
aad
xor
cmp
repz
sbb
iret
repz
clc
and
out
scas
or
push
sahf
out
lcall
lods
cmpsl
stc
xor
xlat
push
cmp
cmp
iret
sarl
jmp
cmp
mov
ljmp
out
xchg
enter
cmpsl
stc
cmp
mov
cmpsl
fnstcw
hlt
bound
pop
inc
mov
repz
lds
inc
jne
loopne
stc
cmp
mov
shl
inc
repz
cmpsl
pop
movsb
cmove
jb
iret
mov
mov
loope
inc
scas
push
repz
out
inc
dec
test
add
repz
and
nop
mov
leave
out
repz
dec
cmp
dec
scas
jns
iret
repz
mov
fdivr
cmp
repz
pop
pusha
mov
int
icebp
rorl
push
pop
stos
stc
cmp
out
xor
cld
inc
push
repz
cmpsl
test
adc
mov
jns
iret
mov
mov
repz
sbb
and
push
xchg
sar
inc
push
sahf
cmpsl
stc
xor
add
inc
mov
out
inc
pop
xchg
fisubl
sub
scas
push
mov
sti
mov
jns
jl
out
pop
push
sarb
pusha
nop
repz
iret
mov
xor
imul
arpl
adc
ds
pusha
mov
mov
xor
cmpsl
stc
cs
mov
int
stc
push
push
cmp
cmpsl
stc
subl
imul
xor
sbb
inc
jns
iret
repz
adc
imul
int
mov
jo
loopne
jno
jl
cmpsl
push
cltd
out
lcall
mov
dec
je
out
jne
cmpsl
stc
cmp
xor
enter
iret
sarl
aad
js
stos
int
out
ds
jns
test
jp
dec
mov
cmp
cmp
jl
enter
cmp
inc
jge
fimull
jle
iret
repz
mov
sub
ds
repz
sbb
xor
out
pop
mov
push
adcl
out
js
xchg
push
mov
mov
jl
mov
mov
fwait
int
nop
lods
xchg
jbe
rclb
xor
cmp
mov
xor
imul
out
movsl
push
push
lret
ss
xchg
dec
int3
nopl
outsl
leave
rcr
dec
push
je
aam
jb
and
rcr
xchg
psubsw
push
xchg
inc
add
insb
xchg
sub
push
or
ret
nop
and
dec
add
lea
xchg
and
xor
leave
push
dec
push
add
loope
push
fldenv
sbb
testl
push
mov
dec
mov
aas
xor
push
adc
inc
adc
fiaddl
aas
inc
rcrl
jg
movsl
dec
sub
sub
aaa
aas
dec
push
pop
arpl
xor
ficoml
pop
and
mov
adc
or
mov
out
xchg
idivb
shll
cltd
pop
outsl
mov
call
xor
ja
test
mov
lock
stos
aas
aam
daa
fisttpll
xlat
cli
jmp
enter
and
xchg
lea
dec
insl
mov
daa
getsec
push
rorb
cmpsl
jp
fists
push
scas
leave
in
pop
adc
aaa
or
repnz
adc
cli
rorb
cmovb
dec
and
rcrb
lahf
jb
test
xchg
int3
fsubl
mov
movaps
in
add
push
mov
pop
jo
sub
sub
pop
out
add
add
in
pushf
xchg
test
bswap
inc
push
mov
or
pusha
inc
add
xchg
pop
loopne
pop
xor
mov
adc
clc
orl
addr16
adc
add
xchg
sub
pop
adc
mul
push
jno
add
jecxz
xchg
push
xchg
pop
daa
js
pop
outsb
fs
mov
aam
subb
jg
inc
mov
adc
loopne
and
dec
in
and
cmp
adc
dec
and
mov
aaa
add
loopne
add
lock
adc
cs
push
ss
dec
adc
in
xchg
add
push
das
xchg
jo
xchg
dec
fisubl
daa
xchg
dec
cs
adc
xchg
mov
and
sub
jecxz
mov
push
push
andb
jb
inc
adc
sbbl
popf
xchg
pop
add
push
lcall
int3
daa
fwait
lahf
adc
adc
cmp
xchg
and
xlat
adc
fwait
cmp
cmpsb
pushf
sub
adc
iret
jl
rcrl
fists
andl
dec
mov
mov
daa
test
fadds
pop
dec
aad
loope
mov
sub
pushf
adc
inc
test
daa
cmp
jno
cmp
daa
nop
fidivl
push
stos
mov
daa
enter
popf
in
popf
add
adc
pop
xor
push
pusha
add
popf
pop
outsl
add
push
leave
adc
popf
mov
xchg
dec
or
call
fnsave
ror
imul
push
scas
push
or
movsl
push
sahf
adc
push
lock
xchg
stos
scas
sahf
js
mov
daa
mov
push
push
inc
shll
mov
push
mov
push
hlt
scas
inc
aad
outsb
mov
and
pushf
mov
fsub
push
add
dec
pop
or
lahf
mov
xor
cmp
lahf
int3
pop
lahf
mov
fsubl
cmp
pop
push
jg
pop
xchg
addb
jle
shll
mov
setne
add
push
dec
xchg
add
pop
and
je
out
inc
sahf
pushf
idiv
add
sbb
add
dec
and
or
xor
sbb
sbb
dec
inc
jb
xchg
push
pop
mov
fstpt
test
and
leave
sti
loope
movsl
lods
mov
pusha
in
inc
or
addr16
in
in
jecxz
stc
in
pop
inc
lods
add
pop
mov
jb
or
or
or
xchg
push
and
or
aaa
push
mov
rcrb
push
xchg
das
mov
sahf
add
dec
and
add
pop
test
mov
aaa
fsubr
and
mov
in
scas
and
in
add
sbb
in
mov
sbb
insb
xchg
testl
jae
lahf
pop
xchg
and
lcall
push
mov
out
fisubl
out
mov
inc
dec
clc
sbb
sbb
cmp
cmp
test
movsb
push
movsb
inc
daa
repnz
leave
or
dec
movsb
cwtl
pop
adc
in
test
mov
cwtl
mov
xor
adc
push
pop
out
xchg
push
pop
xchg
mov
mov
push
pop
add
add
add
push
jae
lea
ds
or
add
jns
push
pop
cmpsb
pusha
mov
movsl
shlb
xor
sbb
inc
xlat
and
addr16
pop
and
out
in
inc
and
adc
loope
negl
mov
daa
cmp
pop
out
pop
xchg
cli
and
nop
add
or
sbb
xchg
sbb
cmpsl
mov
popa
xchg
adc
xchg
pop
or
inc
pushf
xorb
loope
add
test
shll
fists
sub
subb
mov
daa
enter
inc
mov
push
push
pop
add
imul
push
dec
dec
dec
xchg
push
sbb
xchg
cmpsl
add
cmp
push
lea
ljmp
xor
jo
negl
pop
add
in
jbe
ud2
pop
push
nopl
mov
mov
pop
add
pop
stos
inc
jg
pop
cwtl
jne
cmpb
xlat
mov
stos
mov
xchg
pop
out
add
xor
loopne
shl
xchg
pushf
xchg
adc
xor
cmp
sub
dec
ja
psubsb
xlat
stos
adcb
rorb
and
fcmovne
testb
pop
and
xchg
addl
fisubrl
mov
sub
loopne
scas
dec
dec
in
dec
add
mov
and
dec
dec
fidivl
cmp
daa
cmp
adc
jge
stos
xchg
inc
outsl
lock
lods
enter
cwtl
daa
lods
mov
xchg
pushf
cmp
lods
dec
lods
cmp
cmp
add
jmp
subl
test
cs
and
and
in
inc
mov
cli
xchg
add
adc
sbb
es
xor
xchg
mov
or
and
mov
push
mov
call
mov
adc
scas
scas
jmp
and
scas
mulb
out
and
enter
jg
pop
fidivrl
imul
jbe
add
nop
nop
pop
push
ror
xor
fistpll
roll
dec
scas
add
mov
push
xor
or
mov
xchg
xchg
lret
mov
xchg
dec
cs
call
and
mov
sbb
sahf
xchg
push
sbb
inc
mov
and
mov
loop
jb
aaa
and
push
outsl
int3
ljmp
mov
filds
cmp
mov
in
fisttpll
es
xchg
mov
leave
imul
mov
lods
daa
add
jl,pn
and
pusha
add
fsub
and
mov
inc
mov
test
dec
add
push
adc
mov
outsl
add
outsb
daa
cmp
daa
xchg
push
and
das
pushf
scas
inc
cs
in
sbb
mov
and
inc
fisubrs
repnz
add
sub
add
add
xchg
daa
and
and
in
xor
or
pop
rolb
push
test
mov
ret
lds
jg
mov
add
jb
dec
mov
mov
add
adc
and
sbb
sub
xchg
xchg
mov
jb
in
out
pop
sub
sub
dec
es
dec
mov
das
sub
adc
mov
sub
sub
and
negl
jge
and
xchg
insl
add
mov
faddl
fdivs
inc
sahf
int3
sahf
mov
add
xchg
adc
sub
cmp
mov
movsb
push
push
pop
jl
add
dec
cs
call
dec
outsb
pop
loopne
call
cmp
push
cld
sub
push
push
cmp
jns
das
and
sub
xor
testl
xchg
lret
sub
mov
mov
mov
or
mov
fnstsw
adc
fists
shlb
inc
pushf
mov
rclb
daa
mov
mov
and
push
jmp
lea
ja
push
iret
sbb
jb
sbb
jbe
dec
mov
in
xchg
push
mov
xchg
daa
call
inc
leave
loop
ljmp
and
cs
cs
cs
fbld
das
push
arpl
leave
dec
add
or
fdivs
in
adc
add
push
fdiv
lea
dec
push
into
lret
mov
cmp
jns
push
cmp
dec
push
add
pop
mov
push
push
das
jge
mov
xchg
add
fs
sahf
test
dec
loopne
xor
aad
loopne
cld
push
jns
das
jmp
divb
add
xor
dec
inc
sahf
pop
push
and
xchg
daa
inc
adc
adc
cmp
jb
fistpll
repnz
push
lods
mov
xchg
mov
repnz
loopne
stc
add
xor
add
pop
daa
out
sub
adc
and
movsb
repnz
popf
mov
xchg
fisubl
je
into
popf
jb
mov
shlb
jo
cmpsl
rcr
aaa
mov
xor
mov
xchg
xor
xorb
xor
pop
in
test
add
mov
and
pop
jmp
dec
push
enter
pop
adc
popf
mov
xor
mov
divb
xor
mov
mov
add
mov
mov
add
or
aaa
xor
xor
mov
loopne
das
xchg
mov
mov
dec
out
hlt
daa
adc
pushf
mov
orb
loopne
sub
xor
jg
and
sahf
roll
pand
jecxz
jmp
into
outsb
daa
cmc
pop
std
sysenter
pop
mov
shrb
bound
pusha
setbe
scas
pop
roll
xor
inc
mov
leave
outsb
nopl
addr16
enter
add
in
pop
xor
shl
bound
and
jb
scas
inc
movsb
addr16
push
xchg
and
fbstp
jne
negb
mov
nop
push
sahf
insl
rolb
inc
daa
daa
daa
leave
rcr
pop
sbb
cmp
cld
ss
enter
pop
adc
add
aaa
jb
xor
or
xchg
adc
xorb
es
dec
mov
addr16
xchg
and
orl
stc
jb
enter
add
pop
adc
sub
sbb
sbb
cmp
ret
test
aaa
add
test
add
mov
mov
jb
fucomi
loope
jmp
stc
dec
pop
adc
les
adc
les
cmp
xor
jbe
add
js
mov
dec
dec
jb
inc
stos
lds
ret
in
jbe
into
iret
fimuls
out
lds
cmp
push
adc
sbb
add
jb
enter
add
cmp
jns
or
or
and
imul
leave
enter
adc
xor
adc
inc
sbb
jo
divb
add
bnd
add
das
push
add
pop
leave
lret
push
pop
cmp
and
es
mov
lcall
fmull
out
fsubl
dec
je
cmp
cmp
and
and
inc
push
cmp
out
cmp
mov
cmp
paddsb
mov
pusha
mov
movd
in
fidivrl
iret
lock
inc
cmovns
push
push
iret
enter
in
sbb
fsubl
mov
pop
mov
xchg
pushf
or
popf
movsb
dec
or
lods
or
enter
or
cvtps2pd
les
pop
nop
or
das
incb
sbb
aaa
ss
nopl
mov
cmp
pop
paddq
or
lock
cmpsl
xchg
pop
iret
leave
add
movsb
ret
arpl
pop
adc
and
pop
adc
pop
add
xor
add
dec
outsb
outsl
idiv
iret
and
jnp
into
add
adc
daa
shlb
inc
aas
lret
adc
sbb
jnp
cmp
cmovne
push
add
pop
dec
adc
jo
pop
shr
subb
push
daa
nop
daa
daa
insl
shrb
mov
outsb
pop
test
icebp
cmp
add
enter
frstor
adc
out
bnd
cwtl
outsl
fistpll
or
cmpsb
in
jbe
lcall
leave
dec
lret
dec
nop
push
mov
ds
jb
inc
into
sahf
addb
add
in
xchg
pop
mov
or
sbb
out
or
das
xchg
iret
add
xor
jb
enter
add
sbb
mov
pop
push
outsl
push
jg
inc
mov
or
jb
les
int3
push
adc
repz
inc
daa
inc
add
inc
mov
add
dec
xor
int
fsubl
adc
daa
int
filds
mov
xor
je
and
daa
int
test
testb
lcall
xor
or
hlt
int
mov
add
inc
ss
lea
iret
inc
cmp
sbb
adc
and
cmpsl
push
push
push
addr16
add
add
inc
in
add
out
push
scas
in
enter
add
ret
in
fs
aam
daa
sahf
in
sub
dec
into
ficoml
jg
and
and
addr16
test
leave
leave
in
push
xchg
jbe
leave
mov
inc
mov
push
inc
mov
sub
shr
stos
jmp
push
rorb
cmp
sub
test
popa
negl
insb
add
jl
test
ror
push
cmpsl
mov
rorl
in
cmc
add
std
inc
mov
push
add
aaa
jb
jnp
push
adc
sbb
testl
inc
fbld
mov
add
adc
enter
movq
imul
aad
out
popf
pop
inc
test
dec
in
test
outsl
inc
fisttpl
in
jno
loope
jg
pop
std
lahf
inc
mov
push
or
mov
outsl
inc
cmp
add
push
pop
xchg
pop
and
rcrl
jle
cwtl
sbbb
inc
cmp
push
mov
mov
movsb
ds
into
cmpsl
push
jo
daa
daa
daa
inc
or
ja
cmp
mov
cmp
inc
mov
xchg
sbb
dec
je
mov
ja
das
xchg
dec
and
xchg
popl
adcl
mov
mov
divb
inc
sarl
shrl
cmp
lock
pushf
pop
mov
iret
aad
iret
test
aas
lods
movb
divb
into
aas
mov
pop
pop
in
xchg
adc
push
pop
leave
and
fs
jnp
push
popa
imul
in
lcall
cmp
int
mov
pusha
dec
sub
xchg
rorb
ja
pop
ror
push
add
das
movsb
mul
in
cmpsl
pop
jbe
add
jb
fs
xchg
fildl
ud1
xor
xlat
dec
dec
xchg
mov
idivl
and
leave
enter
ss
ss
das
mulb
inc
or
bound
jb
fs
js
push
orl
pop
cmp
mov
push
and
add
and
add
in
xchg
daa
daa
in
hlt
pop
cld
das
sbb
add
ja
fmuls
jge
and
push
dec
dec
ja
repnz
add
xchg
add
int3
mov
enter
into
add
fadds
add
call
add
or
adc
or
cmp
ds
push
fstps
dec
dec
mov
sbb
lods
dec
cmp
push
iret
dec
cwtl
xchg
add
xchg
pop
pop
fisubrl
lcall
xor
pop
inc
cmp
dec
push
or
pop
or
jnp
bnd
jg
or
loopne
mov
ficoml
mov
cld
push
jb
pushf
in
and
sub
jbe
pop
push
mov
jecxz
mov
iret
push
ror
xchg
xchg
xchg
add
mov
push
in
or
push
lcall
add
or
jbe
inc
sbb
shld
insb
sub
fisttpl
das
faddl
in
sbbb
and
add
xchg
xchg
and
mov
jg
out
push
ror
push
adc
fdivrl
dec
inc
retw
scas
out
aas
gs
xchg
daa
insl
push
or
add
add
and
pop
xor
movsb
bnd
fnsave
jb
jb
push
pop
leave
dec
ja
cmpsl
push
insb
mov
inc
cmp
xchg
daa
out
ljmp
mov
leave
add
pop
adc
mov
pop
add
jns
push
xor
or
adc
mov
inc
sahf
mov
add
in
daa
push
cwtl
mov
xchg
jl
psubusb
pop
or
mov
push
testl
sub
push
sub
push
push
inc
push
pusha
cmpsb
loop
in
jo
out
mov
push
mov
jb
jb
mov
xor
push
iret
fmuls
mov
dec
push
or
in
in
sbb
sub
cmp
loopne
mov
mov
fbld
push
push
leave
enter
mov
xchg
dec
jb
xchg
ror
push
shl
adc
push
sysret
mov
xchg
loope
pushl
cmp
jns
cmp
xchg
dec
mov
push
in
sub
push
pop
push
mov
ret
in
pop
push
push
xchg
mov
mov
movsb
add
out
imul
call
xor
mov
pop
and
xor
ja
fildl
push
add
add
jbe
mov
push
mov
add
mov
push
mov
cmp
or
pop
arpl
push
add
ja
jb
dec
rcpps
xchg
push
leave
dec
add
pop
jb
jb
push
nop
cwtl
mov
ja
cmpsl
push
mov
adc
xchg
daa
filds
lahf
push
sbb
nopl
or
mov
or
push
decl
sbb
jb
push
add
push
jne
enter
addb
mov
in
xlat
int
outsb
daa
daa
out
psadbw
ficoml
femms
xchg
aam
lds
pop
cmp
imul
push
add
xor
xchg
mov
je
jg
mov
xchg
add
in
leave
mov
xor
fs
pop
int3
xlat
or
cmp
jnp
or
pop
adc
sahf
mov
adc
adc
enter
adc
and
sub
jmp
xchg
xchg
out
jbe
mov
out
dec
push
and
into
lahf
out
outsb
iret
sbb
pop
outsl
outsb
stc
jg
leave
in
in
cmp
or
adc
filds
adc
fistps
and
sub
xor
cmovno
enter
pop
jae
jnp
adc
sahf
dec
sub
pop
sahf
add
xorb
dec
lret
add
inc
jecxz
fs
loope
incl
hlt
add
stos
xor
movntq
cmpsl
out
daa
mov
mov
push
fistps
dec
push
das
add
dec
data16
add
das
inc
or
push
pop
je
pop
out
out
pop
fwait
pusha
nop
sbb
call
dec
mov
xchg
divl
out
push
xchg
call
lcall
cld
into
sahf
pop
and
push
add
pop
add
add
add
jne
test
pop
leave
dec
or
xor
and
scas
cmp
xchg
in
push
hlt
cld
punpckhwd
cmp
pop
add
adc
jno
push
leave
jmp
insl
nop
sbb
ljmp
push
jb
jb
add
cmp
push
mov
testb
mov
enter
mov
add
int
mov
jno
inc
dec
out
xlat
pop
sti
cmp
add
push
out
add
xchg
jmp
jg
sbb
test
adc
cmp
inc
xchg
add
dec
inc
sub
jl
test
xlat
lcall
or
xchg
pop
mov
add
sbb
pop
xchg
and
add
clc
pop
add
inc
fistps
push
and
inc
into
sahf
mov
cmp
cmovne
push
or
or
cmp
enter
setb
popf
adc
inc
mov
adc
jb
enter
push
fists
ljmp
sbb
sbb
sbb
sbb
daa
daa
daa
sbb
pop
push
daa
daa
daa
daa
adc
daa
daa
daa
adc
femms
push
cmp
into
sub
sub
cmp
pusha
push
xor
punpcklbw
dec
and
pusha
jo
xchg
out
out
add
cld
in
pop
add
push
dec
out
xlat
dec
inc
sbb
pusha
pop
jo
lea
pusha
mov
mov
enter
push
les
cmp
fcomp
rorl
or
pop
sets
out
das
out
test
sbb
push
popa
invd
jmp
add
lahf
popa
sub
lds
out
punpcklwd
shll
fucomip
add
push
nop
repnz
es
cwtl
dec
xchg
add
shr
xchg
xchg
xchg
fsub
call
sub
bound
mov
jno
lock
bound
and
push
inc
popa
add
cmp
enter
add
dec
in
sbb
jne
push
mov
mov
arpl
push
or
mov
inc
sub
mov
cs
xlat
sub
xor
icebp
es
insl
rcrb
fisubrs
jmp
fdivp
fs
out
pmaxsw
idiv
add
fs
push
push
add
daa
and
or
cs
ss
enter
push
inc
inc
aas
andl
leave
enter
imul
and
orl
outsb
pcmpgtb
xor
fs
add
mov
add
adc
roll
repnz
daa
call
in
pop
fisttps
sbb
xchg
xchg
xchg
in
pop
push
sub
xor
in
xchg
mov
das
dec
pop
push
or
fs
fs
push
jns
repnz
orb
nop
adc
xchg
xchg
sbb
inc
or
and
popa
in
orl
sub
jmp
decl
xchg
hlt
aas
lock
sub
xchg
push
or
push
pushf
mov
add
jbe
jecxz
inc
lahf
push
pop
pop
leave
dec
ja
ja
movsb
mov
test
add
push
add
or
cmc
pop
jb
mov
addr16
fisubl
rcrb
mov
inc
xor
mov
fcoms
test
ret
adc
testb
in
in
push
add
inc
add
inc
pop
push
fadds
xor
push
notb
dec
adc
mov
dec
outsb
daa
daa
push
cwtl
je
cmp
aaa
imulb
leave
lret
push
dec
imul
out
and
mov
or
insl
mov
xchg
add
aas
mov
pop
and
cmpsl
push
xor
cmp
inc
cmp
inc
cmovp
and
inc
dec
idivl
rorl
dec
insl
jne
clc
and
xchg
pop
jb
cwtl
mov
jb
out
push
in
shrb
ja
push
mov
push
pop
cmp
push
inc
add
daa
and
inc
push
add
pop
arpl
daa
daa
daa
insl
jne
xchg
cltd
mov
stos
iret
adc
push
in
xchg
into
push
push
stc
cltd
or
lea
imul
mov
insl
push
and
das
xor
mov
imul
dec
cmp
jbe
push
xorl
add
mov
pop
or
inc
sahf
pushf
pushf
into
ftst
pxor
in
xchg
and
adc
adc
loop
fs
sbb
xor
and
cli
insb
shll
add
jge
cmp
pop
push
mov
dec
out
pop
insb
sti
adc
add
insb
lock
push
fldl
push
add
es
test
mov
lret
jo
pop
cmp
pop
sti
das
daa
nop
inc
xchg
jno
add
shll
sti
pop
add
les
enter
push
sub
ss
enter
and
dec
fidivl
test
sbb
in
movsb
pusha
sarb
push
mov
pop
rcl
mov
mov
xchg
pushf
movsb
or
add
push
push
and
std
dec
shlb
xchg
jbe
jbe
test
enter
add
sarb
xchg
inc
dec
push
add
and
imul
in
leave
in
jbe
orb
xchg
cmp
mov
push
mov
pushf
add
add
and
pushf
or
or
xchg
xchg
xchg
or
inc
push
stc
loopne
adc
dec
into
lock
push
or
inc
sar
pushl
dec
inc
mov
sahf
push
add
add
add
daa
push
outsl
ja
movsl
ror
jg
or
inc
leave
pushl
cs
aad
fstpl
xor
or
in
aas
fbstp
jmp
mov
cmovne
dec
push
push
push
outsl
mov
daa
pop
or
std
pop
add
and
adc
sbb
adc
daa
adc
insl
pop
repnz
in
jge
lea
cmp
xchg
sbb
mov
mov
and
int
aad
paddusw
and
pushf
sub
sub
sub
jb
lret
xchg
sub
sub
add
mov
adc
sub
sahf
xor
lock
xchg
pop
xor
pop
add
mov
es
push
lods
add
hlt
ja
jae
jnp
call
pop
add
dec
dec
pop
jbe
cmpsb
scas
add
push
add
bnd
jb
cli
add
push
jbe
add
add
jae
xsha1
cmpsb
popl
rcrb
or
mov
mov
inc
mov
push
xor
mov
enter
add
cmp
push
int3
add
mov
das
repnz
cli
setl
or
and
dec
adc
pop
adc
jb
enter
push
ja
test
and
sbb
sbb
jb
enter
sbb
inc
mov
fsubs
loop
in
and
jle
dec
cltd
ljmp
inc
pop
es
sub
jb
cmp
inc
sub
pop
sub
dec
inc
mov
imul
fucomi
jbe
pop
test
lahf
cwtl
mov
mov
test
mov
btc
ret
and
jb
into
and
and
pop
out
xchg
and
out
sbb
jbe
jb
enter
sbb
pop
and
and
sbb
adc
xchg
push
out
aas
jbe
fisttps
outsl
cmpsl
xchg
jo
xchg
outsl
addb
mov
add
mov
pop
aam
ficomps
inc
jle
das
jbe
clc
sbb
cs
ja
push
adc
inc
mov
rdpmc
adc
enter
adc
gs
outsl
push
jns
sbbl
jb
enter
sbb
mov
mov
pop
fsubl
mov
xchg
and
and
std
das
js
in
flds
sbb
sbb
sub
xor
cmp
inc
sbb
enter
pop
push
push
popa
adc
imul
adc
xchg
and
adc
cmp
mov
or
or
or
pop
mov
add
ds
push
fxch
lret
inc
jns
or
jns
lahf
push
repnz
cmp
inc
add
in
jns
outsl
dec
push
push
mov
pop
push
lahf
push
pop
add
sahf
push
pop
jb
or
enter
addb
jb
xchg
push
lcall
mov
cmpps
cmp
in
sbb
pushf
mov
push
sbb
rorb
out
cmp
les
xor
jp
jp
enter
push
add
addr16
fcmovne
in
addb
daa
daa
daa
mov
das
test
mov
daa
enter
adc
enter
icebp
adc
cld
jnp
setae
das
sbb
xchg
xchg
xchg
xchg
sub
cmp
shlb
dec
sbb
movsl
inc
sti
jns
jne
and
pusha
mov
jnp
push
mov
mov
ret
add
sahf
roll
fucom
paddsw
and
daa
inc
cmc
add
enter
pop
adc
leave
in
fs
scas
subl
jl
inc
into
sahf
mov
jne
enter
add
and
xlat
fs
fldl
push
or
das
ljmp
comiss
adc
or
pop
sub
leave
in
in
aaa
cmovb
dec
pop
bswap
enter
pop
outsb
sbb
test
repnz
sbb
cmp
jns
pop
shll
fsubrl
dec
inc
sahf
out
repnz
and
enter
daa
push
sub
xchg
xchg
xchg
xchg
xor
dec
push
loope
in
pusha
imul
subl
or
cmp
add
add
add
add
add
in
hlt
pop
decb
jg
or
or
mov
add
sub
dec
dec
dec
dec
cmp
dec
push
outsl
daa
and
adc
je
stc
cs
mov
dec
mov
sbb
inc
and
push
lods
mov
cmpsl
xchg
sub
pminsw
in
repnz
addb
into
jo
adc
dec
andb
shl
movsb
sub
or
in
push
repnz
push
xorb
pushf
int3
into
outsb
aaa
add
mov
lods
mov
rorb
cmp
psllq
and
sbb
or
mov
sub
in
xchg
adc
adc
dec
adc
mov
pop
adc
jns
xchg
fsts
sbb
lcall
aas
mov
mov
cmp
cmp
and
jmp
xchg
addl
xor
cmp
or
inc
sub
pop
sub
pushf
mov
orb
setbe
push
test
mov
cmc
xchg
aas
xor
xor
imul
daa
mov
enter
mov
insb
in
mov
fucomip
das
xor
add
inc
into
into
prefetch
pop
sbb
and
or
and
cmp
inc
push
pop
pop
or
imul
cmp
adc
sahf
pushf
mov
loope
popf
pushf
popf
int3
pop
in
testl
popf
mov
and
cltd
pop
dec
push
punpcklbw
xchg
push
mov
and
fildl
mov
push
dec
in
add
jbe
cmp
jnp
out
add
cld
add
popf
mov
add
or
mov
or
inc
mov
or
mov
xchg
jb
pop
mov
adc
cmp
pop
iret
sbb
in
data16
mov
push
sbb
dec
dec
sbb
das
daa
and
and
xchg
daa
and
ret
in
fs
imul
movsb
sub
mov
add
xchg
ljmp
inc
mov
add
in
ss
add
pop
adc
xchg
faddp
adc
xchg
push
pusha
sbb
mov
popf
mov
add
fs
shr
iret
jp
test
fwait
xsha1
cmpsb
or
inc
dec
mov
or
enter
adc
adc
adc
repnz
adc
pop
and
push
aas
orl
inc
sbb
xchg
mov
dec
or
sbb
jo
jnp
xchg
xchg
inc
mov
mov
shll
xlat
in
out
pop
sbb
outsb
iret
cli
out
in
imul
outsl
add
or
sbb
sbb
sbb
dec
dec
sbb
daa
rcl
enter
insl
jns
jecxz
in
add
movsb
jns
push
mov
or
mov
or
or
mov
enter
bndldx
in
leave
enter
xor
cmp
mov
leave
push
pusha
outsl
imul
sbb
orl
xchg
xchg
sbb
mov
adc
out
inc
or
std
mov
mov
adc
in
leave
in
and
or
cmp
fs
push
aas
pop
packsswb
pop
leave
enter
jae
adc
jb
enter
cltd
pop
mov
mov
mov
mov
inc
and
paddq
fcompl
in
ss
stc
dec
mov
pop
scas
dec
cwtl
add
insb
daa
in
nopl
ss
dec
dec
add
and
inc
outsl
jp
pop
test
nop
mov
xchg
daa
fwait
or
push
push
xchg
and
mov
mov
leave
enter
adc
das
dec
dec
dec
mov
push
sbb
xchg
and
or
adc
and
in
leave
in
sub
aas
aaa
inc
pop
pop
dec
cmp
in
pop
and
add
jns
dec
inc
mov
and
and
mov
sbb
leave
add
mov
fldl
sbb
xlat
in
adc
xchg
sbb
out
add
pop
add
inc
mov
ja
push
add
xchg
divb
cs
popa
mov
sbb
shrl
jb
jb
lcall
jb
mov
or
or
dec
mov
or
xchg
es
mov
cmp
jbe
pop
xor
and
cmp
adc
leave
enter
iret
ficompl
in
repnz
lock
sti
sbb
pop
cltd
cmp
das
push
ja
pop
addb
cmp
and
mov
xchg
xchg
and
and
and
sub
sub
daa
in
xor
das
jbe
lret
leave
pop
xor
pop
loope
xor
ss
xor
push
sahf
mov
ja
orb
pop
cwtl
mov
pushf
stos
xor
iret
xchg
xchg
cmpsb
mov
outsw
daa
in
decl
mov
das
lret
push
mov
das
out
psubw
xchg
add
sbb
jno
daa
fs
in
xor
cmp
push
fucomi
negb
punpckhwd
orl
mov
pop
xchg
sbb
daa
mov
pop
push
enter
call
xchg
or
leave
enter
arpl
adc
ss
in
fldt
jns
test
lock
mov
xor
lcall
leave
enter
das
repz
xor
divb
repnz
dec
xor
movsl
xor
fs
dec
adc
pop
mov
inc
popa
iret
xchg
addr16
mov
insb
jns
inc
sbb
mov
filds
scas
enter
jecxz
por
repz
in
in
pop
mov
leave
pop
pop
fsubrs
or
pand
movlps
xchg
add
dec
pop
outsb
in
bound
orb
dec
pop
push
lcall
jg
pusha
or
push
push
aaa
mov
fwait
mov
daa
inc
mulb
push
rolb
repnz
or
test
push
pop
and
xchg
pusha
sub
rclb
rolb
jo
aaa
nop
inc
mov
popa
and
adc
mov
inc
jmp
pop
cmpsb
ljmp
push
dec
pop
mov
jbe
cli
inc
dec
inc
add
lea
scas
pop
inc
add
pushf
push
outsb
dec
aaa
sbb
movl
leave
push
out
out
popw
sbb
in
sahf
or
or
or
aaa
or
inc
fsubrs
adc
aaa
adc
xor
jbe
popf
push
addr16
das
push
xorps
pop
imull
push
and
fcmovne
repz
push
pop
andb
fucomi
orl
pop
dec
dec
sahf
out
sub
dec
into
filds
cmpsl
mov
into
aas
xlat
imul
rorb
incb
mov
mov
sub
add
sub
and
and
nop
addb
or
mov
and
popf
mov
adc
clc
sbb
add
movsb
add
enter
cmpsb
fisttps
mov
cld
cli
and
adcb
fisubl
mov
mov
pushl
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
mov
enter
out
fiadds
mov
push
js
jo
out
sahf
insb
push
jns
out
inc
xor
and
jns
out
adc
or
jns
negl
push
clc
hlt
lock
out
int3
pop
mov
push
iret
repz
mov
mov
iret
repz
xorb
add
mov
adc
dec
push
inc
popf
out
sahf
cmp
sub
sbb
jns
divl
fadd
mov
out
sahf
mov
js
cmp
jnp
pop
push
repz
dec
inc
xor
add
repz
in
fmul
mov
movsb
nop
and
add
jl
push
inc
movl
mov
pusha
pop
outsb
push
dec
xchg
cmpsl
fsts
inc
rcl
fcom
sub
dec
nop
mov
add
cmp
xchg
sbb
and
sbb
aas
orb
loope
mov
in
add
xor
outsl
lock
jmp
push
push
mov
lret
push
dec
push
out
push
aaa
adcb
pop
andl
daa
xor
inc
xor
lcall
inc
xchg
jb
mov
add
add
mov
arpl
pop
mov
das
add
popl
pop
dec
inc
mov
push
mov
sub
mov
jg
pop
push
in
jns
insb
in
out
cmp
add
ret
cs
push
outsb
jmp
jnp
cmp
in
mov
sbb
sbb
das
inc
mov
adc
cmp
mov
in
in
enter
paddq
aas
xor
in
sub
das
mov
jbe
in
mov
int3
or
adc
sbb
cmp
sbb
adc
adc
or
xchg
and
add
xbegin
jb
enter
and
daa
xlat
and
clc
fdivs
fwait
shr
pop
imul
daa
xor
xchg
mov
xchg
push
stc
sbb
add
rcrb
scas
jns
xlat
rcr
cmp
pop
js
sarl
inc
out
loopne
idivb
lock
xor
dec
insl
add
push
iret
repz
pop
ja
mov
repnz
lods
jnp
jae
das
push
dec
insb
sbb
aas
jbe
lods
stos
add
jl
xchg
push
ret
cmovno
enter
adc
xchg
aas
repnz
sbb
into
sbb
rorl
jmp
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
ljmp
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
jmp
mov
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
call
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
pushl
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
add
les
add
int3
mov
aas
jno
or
mov
pop
fs
dec
lea
aas
inc
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
pushl
xchg
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
decl
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
jmp
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
in
adc
movsl
jmp
jg
sub
jge
mov
inc
pushl
cwtl
arpl
int3
and
call
cmp
jp
cmc
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
decl
loopne
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
sub
or
lar
fisubl
pop
mov
push
add
inc
incb
je
inc
inc
push
dec
inc
push
sti
jg
push
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
cli
jg
jp
cmp
call
push
inc
dec
inc
push
fucomi
divb
inc
popa
push
outsb
jbe
imul
aad
sub
outsl
mov
aas
dec
insb
imul
dec
push
bound
iret
add
pop
mov
gs
dec
push
inc
add
inc
rorb
push
add
addr16
push
inc
inc
pop
sub
mov
test
addb
gs
xchg
mov
add
inc
arpl
add
push
arpl
imul
jae
outsl
push
dec
pop
mov
adc
xchg
xchg
or
fldl
xchg
pop
push
addr16
int3
and
sbb
cmpsb
das
add
pusha
das
push
fs
inc
shrl
idivl
dec
sbb
add
lret
dec
inc
popf
push
daa
dec
jae
inc
mov
data16
and
inc
inc
inc
jg
push
jns
dec
lahf
push
pop
mov
xchg
les
push
cmp
inc
data16
jns
and
sbb
push
inc
test
cltd
stc
dec
in
inc
lock
dec
push
dec
dec
pusha
in
pop
and
dec
bound
jbe
insl
xor
xchg
dec
jmp
xchg
lds
int
cmpsb
dec
or
loopne
iret
jecxz
mov
lahf
dec
popa
jne
arpl
outsl
mov
ret
add
pop
xlat
pusha
movb
rol
inc
and
shlb
inc
inc
xchg
push
mov
push
js
sbb
sub
mov
mov
rolb
or
stos
add
notl
or
push
test
push
imul
loope
pop
outsl
push
jb
mov
int3
jbe
lds
das
addb
or
jp
lock
push
push
adc
gs
push
xacquire
outsl
push
inc
dec
mov
stos
arpl
push
push
cmpsl
and
push
pusha
out
push
cwtl
aaa
pop
jg
mov
pop
mov
pop
xchg
add
xchg
add
push
outsb
data16
lods
push
sub
inc
xor
xchg
insl
add
pop
ja
inc
xor
ja
add
xor
ss
mov
add
cmp
stc
lahf
push
sbb
mov
xor
std
cmpsl
push
add
movsb
mov
mov
or
dec
inc
mov
lahf
pop
adc
aad
inc
adc
sub
inc
mov
jg
adc
iret
adc
sbb
call
jae
push
lahf
dec
inc
subb
mov
fisubrl
inc
xor
xor
mov
daa
dec
dec
push
mov
mov
aam
cmpsl
lods
arpl
xor
mov
in
dec
shrb
outsb
push
dec
push
pop
push
pop
adc
les
outsl
add
or
loopne
push
fcomp
data16
dec
outsl
addr16
xor
cmpsb
iret
inc
insl
push
aam
iret
pop
les
push
adc
xor
xor
xlat
cmp
dec
jg
push
push
push
pusha
dec
xor
push
clc
iret
repz
fmul
mov
andb
cmp
adc
cld
mov
xchg
addr16
lret
push
pop
add
push
iret
addb
je
ljmp
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
push
movsb
mov
aad
mov
rclb
mov
sub
call
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
inc
test
adcl
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
push
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
lcall
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
decl
movsl
mov
sub
mov
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
imul
mov
pop
mov
push
movsl
in
lahf
pushl
aam
call
xor
add
mov
push
loope
or
insl
or
incl
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
cmp
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
incl
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fdivr
ljmp
shll
jmp
outsb
xor
mov
sarb
add
in
lcall
or
cmp
add
daa
adc
or
and
incl
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
decl
mov
shlb
mov
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
decl
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
ljmp
xchg
adc
mov
jnp
sbb
call
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
sbbl
mov
ja
mov
out
cli
jo
ud0
cmp
pop
or
pop
std
incl
adc
sahf
gs
clc
sar
imul
push
js
or
push
incl
add
popa
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
decl
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
call
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
xchg
xchg
sub
aaa
mov
or
sbb
jmp
push
scas
pop
out
add
pop
cli
inc
add
mov
push
jg
add
jbe
outsl
inc
jne
insl
jg
shll
imul
insb
imul
sbb
je
jns
arpl
insl
lds
fsubs
pop
ja
or
insl
jns
sub
mov
inc
jne
outsl
insl
addr16
pop
mov
adc
imul
lret
bound
sbb
out
or
or
call
dec
inc
js
inc
insl
bound
adc
or
mov
inc
inc
js
shrl
xor
sbb
mov
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
std
mov
std
cmp
arpl
or
xor
bound
pop
xor
popa
push
adc
insl
pop
sbb
inc
mov
xor
inc
pusha
cmp
add
ror
cmpsb
into
and
or
pop
mov
test
xor
gs
mov
push
jbe
lods
mov
test
inc
aas
dec
sbb
xchg
inc
add
jns
addl
sbb
xor
insb
inc
lds
push
dec
or
xchg
cmp
shrl
insb
aaa
mov
lock
inc
push
lret
or
aas
add
push
sbbb
or
fistps
jp
mov
aas
dec
push
inc
inc
or
stos
aaa
inc
xchg
sub
sbb
inc
pop
out
std
push
loopne
es
inc
inc
inc
add
push
sbb
sbb
call
push
dec
dec
aad
pop
mov
sbb
mov
inc
sbb
inc
outsb
jne
in
fistl
and
stos
pop
pop
jge
xor
xor
iretw
add
or
add
loop
addr16
push
inc
or
or
mov
adc
mov
dec
out
push
js
subl
cmpsl
push
outsl
add
pop
xchg
pop
mov
sub
lcall
es
ljmp
xchg
mov
mov
xlat
mov
pop
mov
pop
xchg
addb
bound
inc
jb
addr16
or
icebp
dec
popa
jo
add
add
dec
add
push
outsl
outsl
test
adc
push
xor
push
sbb
sbb
lds
add
inc
pop
in
mov
test
lods
cmp
pop
inc
dec
js
arpl
push
push
jae
add
sarl
jo
push
sbb
xchg
pop
push
outsl
insb
jns
push
stos
add
push
add
push
popa
jb
je
testb
call
enter
lahf
mov
bound
dec
clc
and
arpl
xchg
adc
and
xor
inc
mov
xchg
adc
add
add
ss
push
sub
inc
enter
add
addl
adc
pop
xor
adc
scas
imul
divb
pop
and
mov
push
xchg
outsl
movsl
and
shll
pop
es
outsl
aaa
and
or
pop
insb
push
loop
aaa
push
dec
pushf
and
add
rolb
inc
lds
pop
inc
and
mov
push
inc
push
jo
sbb
push
add
dec
jl
cmpb
pop
nop
ss
push
cwtl
pop
push
scas
sbb
push
pop
mov
int
mov
inc
shlb
and
popa
insl
adc
pop
add
outsb
outsl
je
addl
jl
inc
dec
push
and
fistl
dec
mov
or
cmpsb
dec
shrd
popa
dec
pop
shll
pop
or
bswap
mov
into
jmp
jmp
jmp
repnz
in
push
pusha
ljmp
pop
ds
aas
lret
cli
push
cld
sub
add
push
imul
andl
add
movsb
xchg
pop
mov
daa
loopne
or
cmp
add
sbb
insb
daa
aam
cmp
and
hlt
jne
adc
add
sti
ret
mov
add
jbe
neg
inc
sbb
add
xor
movsl
add
repnz
test
mov
push
adc
mov
subb
xchg
int3
lds
push
loop
fwait
nop
das
inc
push
pusha
push
add
pop
xor
cs
fiadds
les
lods
add
rol
and
and
and
dec
lret
xor
inc
cs
mov
fistl
rcrb
lahf
es
out
add
fidivs
inc
cmp
test
push
dec
addb
in
sbb
inc
xor
sti
jne
movb
mov
push
data16
add
sarb
mov
rorb
mov
ss
popf
gs
out
pop
or
jle
inc
in
dec
jne
ss
pop
mov
sub
jecxz
push
addl
jp
sbb
sub
stc
jbe
mov
ja
inc
mov
add
push
push
push
out
xor
int3
fucomi
gs
add
mov
stc
ja
jne
jmp
mov
jno
ja
into
jl
push
cltd
or
call
aam
les
add
loope
pop
lcall
mov
mov
and
hlt
mov
cltd
adc
dec
pushf
jbe
mov
jl
les
fmull
xchg
cmpsl
adc
push
pop
mov
cmp
int
xor
gs
xchg
add
inc
push
leave
push
mov
sbb
sarl
mov
call
nop
fadds
mov
jp
call
movsl
mov
fdivrl
pop
nop
mov
jbe
mov
repz
pop
dec
mov
push
sub
pop
scas
sub
rcrl
nop
mov
sbb
and
subl
sti
adcb
loopne
push
movsb
movsl
outsl
and
mov
cmp
movsl
mov
loopne
call
inc
or
pop
outsb
xor
mov
ficoml
je
pushf
and
aad
mov
mov
or
xor
push
push
test
incb
imul
add
adc
fadds
push
out
push
dec
aam
mov
arpl
subb
pop
shlb
mov
jne
push
rcl
mov
loopne
insb
push
inc
adc
mov
xor
out
gs
loopne
ror
xchg
add
mov
movsl
es
hlt
call
add
cmpsb
les
mov
fs
fcomps
xchg
in
push
push
push
add
into
ja
sub
dec
in
push
leave
push
enter
lahf
pop
mov
cmp
pop
add
hlt
out
or
or
push
insb
push
inc
movsb
leave
push
xchg
sub
frstor
xchg
push
sbb
xor
mov
jo
push
ret
lret
add
sbb
pop
pop
pop
nop
sbb
sti
lds
sahf
lea
popa
jg
mov
cltd
es
stos
push
mov
lret
andb
cmp
mov
push
aam
in
jecxz
call
add
movb
dec
adc
insl
mov
add
push
mov
aam
lea
dec
ret
out
or
lds
sbb
loope
lds
add
add
push
in
rol
popf
andb
add
mov
pop
je
adc
and
roll
scas
lea
dec
lock
or
sub
xchg
jp
adc
add
insl
jmp
xlat
hlt
or
loope
fs
mov
cmc
push
pop
movsl
mulb
mov
mov
and
dec
jge
and
xor
in
push
jmp
jae
aas
adc
inc
dec
lret
popf
out
jo
sbb
add
mov
and
push
ljmp
lods
pop
je
call
insl
lock
push
push
insb
fdiv
sub
fs
and
xor
lahf
push
mov
pop
bound
jns
sub
out
and
mov
sbb
enter
add
or
cmp
add
sub
add
jecxz
cmpsb
pop
lcall
or
stc
jp
inc
out
push
fnstsw
sbb
das
push
mov
sbb
je
or
inc
or
and
mov
mov
clc
push
gs
xchg
sbb
xlat
rcll
test
ja
mov
xchg
addl
add
rcr
mov
roll
push
jnp
lcall
pop
cmp
ret
and
sub
mov
jb
and
std
pop
inc
ljmp
iret
add
aam
dec
shlb
mov
call
add
inc
enter
and
popa
fildl
fs
add
scas
add
or
push
adc
int3
lret
adc
loope
aaa
ficoml
sub
enter
xchg
push
sbb
test
cmp
fdivl
mov
push
push
pop
push
test
call
call
aam
or
call
cmp
xchg
lea
xor
mov
sub
jo
pop
rorb
pop
rorl
and
out
hlt
aaa
and
fisttps
add
cmp
and
push
add
loope
call
inc
and
dec
das
xor
adc
call
dec
add
inc
insb
mov
mov
idivl
lods
or
ja
pop
mov
xchg
xchg
xchg
iret
jge
mov
dec
call
imull
into
pop
in
dec
push
inc
mov
lods
icebp
je
or
pushf
stos
imul
mov
push
mov
cs
sbb
movsl
call
and
mov
push
or
in
shl
or
rcll
push
sbb
sbb
hlt
xor
clc
sbb
dec
cmp
or
fbstp
cmp
add
ret
sub
or
clc
adc
jle
scas
push
jecxz
inc
movzbl
xor
testl
add
sub
adc
sbbb
dec
adc
clc
sub
add
and
push
push
cmp
sub
sub
mov
mov
cmp
bound
addb
arpl
push
mov
add
mov
sub
mov
mov
and
dec
jo
mov
icebp
push
push
and
add
mov
inc
aam
push
or
add
aas
and
jne
or
sbb
push
sbb
popa
subps
sbb
sbb
loop
inc
test
xlat
fdivr
cmp
faddl
cltd
mov
sbb
dec
fdivrl
inc
stos
lock
loopne
jo
icebp
inc
pop
pop
push
lcall
int3
call
push
sbbl
addr16
adc
sub
movsl
inc
mov
addr16
xor
mov
inc
addl
sar
and
jno
negl
jb
call
out
les
ds
xlat
popf
sub
sti
rolb
addr16
xchg
xchg
shl
mov
add
cmp
dec
push
adc
mov
pop
cmp
rolb
ss
pop
xor
imul
add
push
push
sub
daa
rolb
fldt
xchg
add
cmp
xchg
add
shll
repnz
push
mov
jb
hlt
lods
insb
lret
into
fdivrp
xor
pusha
imul
add
mov
and
xor
add
lods
xchg
mov
jecxz
pop
mov
xchg
psubsw
push
andl
das
ds
adc
xor
call
mov
mov
int3
or
mov
jbe
je
adc
and
and
or
push
adc
loop
xchg
adc
testl
xor
int
push
enter
ss
repnz
fcompl
rep
push
xor
push
mov
fs
mov
mov
jle
cmpb
mov
inc
les
mov
lahf
cmpsl
add
push
mov
xor
loope
cmp
inc
shlb
or
xchg
mov
lcall
enter
outsl
push
jb
adc
dec
je
ljmp
pop
ljmp
ret
push
stos
je
pusha
pop
roll
mov
addb
fistl
sbb
movsb
icebp
xor
adc
pop
in
sub
sahf
scas
or
pop
fistpl
or
push
stos
xlat
es
pop
leave
std
push
xor
mov
test
sub
xchg
pushf
push
or
in
imul
rcl
sahf
mov
fiaddl
mov
lret
sbb
mov
push
loopne
pop
jp
scas
pop
cmpsl
cmp
ss
aas
js
out
xchg
in
repz
mov
sbb
sub
adc
negb
push
adc
push
push
or
insb
or
and
mov
dec
adc
push
or
cli
cwtl
push
cs
sbb
sahf
loopne
push
call
and
cmp
jle
jmp
mov
mov
pushl
stos
fidivs
push
gs
pop
mov
loopne
dec
in
sub
push
push
add
or
or
jmp
and
xchg
cmp
inc
fisubrs
dec
sub
push
mov
divl
push
pop
loope
and
dec
add
lret
and
in
enter
push
pushf
add
jno
test
test
jp
and
push
insb
cmp
adc
adc
xor
mov
and
into
sub
inc
ljmp
adc
sbb
jmp
mov
and
cmp
cmpsb
sbb
or
inc
inc
mov
or
mov
sub
in
mov
inc
jle
shl
aam
fsub
insb
sbb
cmp
mov
mov
inc
xchg
mov
lcall
mov
adc
adc
imul
mov
xor
push
jnp
notb
adc
push
fisttps
movsb
push
ljmp
pop
mov
inc
inc
sbb
jne
lods
nop
mov
cmp
pushf
arpl
jbe
orl
xor
or
add
stc
dec
mov
xor
push
aaa
jae
xor
jmp
add
mov
push
fcomp
inc
test
shlb
or
rclb
je,pt
pushw
fcomps
sahf
les
add
test
aad
mov
lods
dec
xlat
push
push
mov
jecxz
cmp
sub
push
jg
add
dec
lea
jb
mov
cwtl
add
addl
jo
pusha
loopne
mov
out
in
rorb
int3
or
pop
fs
add
icebp
rcl
dec
and
add
jne
mov
or
sbb
call
loop
test
cld
pusha
scas
sbb
in
sbb
add
ss
pop
test
jne
sbb
add
fnstcw
mov
nop
or
add
jle
or
gs
cmc
sub
ljmp
push
add
add
out
enter
pusha
dec
dec
xchg
loopne
jl
push
cld
mov
and
bound
push
mov
es
into
push
or
lret
ss
mov
dec
inc
inc
and
sub
inc
xchg
add
inc
dec
pop
and
xorb
adc
add
or
je
mov
sub
jmp
adc
or
loopne
outsb
push
or
ret
inc
xchg
movsb
inc
xchg
outsb
sub
jp
fimull
sbb
xor
stos
inc
fs
mov
fs
add
popa
adc
cmc
inc
mov
xor
sbb
xlat
push
add
cld
lcall
stc
pop
fbld
rorl
push
hlt
xor
adc
test
fwait
add
or
orl
push
mov
add
adc
rorb
scas
push
movsl
jns
lods
jbe
test
xor
not
xlat
xor
push
add
outsb
orb
adc
xchg
into
jae
test
sub
push
push
sbb
daa
cmp
adc
mov
mov
mov
push
loopne
int
rolb
hlt
repnz
insl
jns
xor
adc
dec
or
pop
inc
inc
xor
fstp
mov
or
shr
pushl
icebp
mov
jnp
mov
fbstp
call
cmp
jmp
push
xor
cmpsb
sar
cmp
cli
ret
push
inc
shll
lcall
inc
sbb
popa
mov
aas
mov
jmp
mov
dec
xor
mov
add
inc
adc
xchg
xchg
adc
dec
mov
mov
pop
push
fdivrl
and
pop
dec
adc
std
lahf
incb
push
adc
push
push
ds
push
sbb
ds
and
outsb
dec
sbb
lock
movsb
test
bound
addl
dec
add
mov
and
aam
xchg
pop
or
jb
dec
adc
imul
fisubrs
jne
push
sarb
adc
popf
into
cmc
push
sub
subl
push
add
add
jmp
movsl
or
mov
or
pop
rclb
mov
mov
scas
sti
jmp
les
xor
xchg
jmp
or
cmpsb
jno
rcrb
in
loopne
into
or
sbb
aaa
pop
ret
push
push
subb
lock
daa
xchg
mov
adc
xchg
adc
cmp
dec
iret
cmp
push
ret
popa
xor
popf
mov
sahf
out
mov
pushl
movsl
xor
cwtl
inc
jecxz
push
mov
push
enter
call
mov
repz
jecxz
sbb
pop
pop
in
jbe
or
xor
push
fldcw
sbb
popa
mov
ret
push
pop
cmp
jle
clc
push
or
enter
xchg
mov
and
orl
jmp
and
xor
insb
call
inc
jmp
in
lods
jge
inc
or
jle
or
cmp
jnp
mov
fsts
cmp
mov
pusha
pop
mov
lock
adc
inc
roll
enter
sarb
fs
mov
icebp
lds
ds
dec
sbbb
push
add
fcom
xor
dec
pop
push
pop
adc
mov
dec
dec
mov
mov
pop
push
add
or
sbb
sbb
repnz
adc
jne
mov
sbb
out
ds
or
mov
inc
es
or
or
or
jmp
sbb
lahf
dec
add
dec
add
or
faddl
shrl
push
cmp
push
mov
xor
mov
out
test
inc
inc
push
add
call
scas
sbb
out
pop
loope
sbbb
xchg
ljmp
fimuls
shll
inc
out
mov
cmp
mov
inc
mov
test
rcrl
cmp
in
inc
lock
mov
cs
inc
mov
movsl
xor
push
mov
lea
add
int3
or
xchg
stos
mov
push
fucomip
cmp
je
cmp
jbe
cli
mov
cmp
subl
mov
sub
and
std
pop
push
xchg
mov
or
sbb
pop
ret
or
inc
jae
add
push
mov
xchg
or
popf
addl
jae
adc
loop
test
push
getsec
cmp
shr
je
cs
sbb
push
jae
stos
fwait
add
xchg
cmpsb
shll
test
cmp
sub
mov
and
mov
mov
mov
adc
mov
mov
and
aaa
push
mov
inc
das
in
fsubr
jo
push
sbb
sub
sub
and
pop
mov
into
fdivrs
or
movl
aad
pop
push
stos
loopne
mov
sti
push
je
xor
nop
rorl
dec
jle
push
or
data16
shl
ss
loop
leave
xchg
push
stc
sbb
fildll
test
js
pop
push
imul
and
clc
jno
je
jl
enter
and
aam
xor
sbb
push
gs
ret
cmpsb
aam
in
dec
inc
dec
xchg
addb
clc
mov
and
add
lcall
sub
int
xchg
faddl
push
call
add
sbb
je
fmull
js
push
push
push
xchg
pop
int3
jmp
insl
cmpsl
insb
movsb
dec
add
or
or
int
push
test
pop
lret
add
mov
imul
movsl
and
and
in
dec
xor
mov
push
xchg
pop
push
mulb
sbb
popa
mov
jmp
xorl
sbb
pop
imul
mov
add
call
add
sti
cmc
cmp
hlt
ret
mov
mov
jns
mov
ss
clc
and
cmp
mov
sbb
push
mov
popf
add
mov
mov
jmp
sub
xchg
movsb
and
inc
roll
add
dec
sbb
sub
loopne
icebp
or
push
mov
sbbb
push
loop
or
push
pop
mov
aad
lock
iret
call
push
fdivrl
add
mov
push
imul
pop
addr16
sbb
pop
or
sbb
jae
in
sbb
jne
into
cmp
sub
mov
jmp
ss
cmp
mov
es
pop
cmp
or
loopne
push
out
je
int3
jecxz
decb
or
jns
outsl
orl
pop
icebp
aaa
jmp
nop
xor
push
sahf
jae
js
arpl
jmp
sbb
loop
icebp
call
rolb
push
or
das
enter
and
push
mov
fisttpll
push
push
add
jmp
movsb
inc
mov
call
and
nop
stos
aaa
push
xlat
inc
lcall
dec
jl
js
or
lods
push
negb
push
icebp
ja
jecxz
push
dec
xor
fxtract
icebp
daa
or
sbb
jne
into
movsb
inc
or
mov
shlb
xchg
dec
insl
push
xchg
add
xor
and
add
pop
push
lret
and
xchg
in
mov
add
push
call
in
movsb
push
push
xchg
sub
js
sbb
mov
aad
test
or
scas
adc
mov
sbbl
cmp
xchg
and
int3
jbe
sub
jg
icebp
mov
scas
mov
dec
dec
sub
or
jle
outsb
je
push
or
movl
push
ret
out
push
push
fldl
sbbb
sbb
inc
in
fdivl
or
loop
jno
mov
cwtl
or
popf
pushf
or
cmp
aaa
add
test
sbb
test
test
stos
push
inc
add
fs
inc
mov
xchg
rcrl
mov
pop
incb
jl
andl
cmp
jg
push
dec
cmp
adc
je
or
in
push
call
test
and
push
sbb
mov
out
mov
and
or
push
inc
adc
push
cmp
fadds
dec
jne
movzbl
add
aad
or
xor
movsb
nop
insb
sbb
fimull
inc
test
loope
inc
and
stos
incl
add
sbb
sub
sub
xchg
stos
shr
mov
jmp
jo
pop
or
je
mov
push
cli
sub
pop
aas
add
or
and
push
adc
or
outsl
xchg
jae
inc
pop
rclb
pop
xchg
andb
jae
inc
out
add
pop
xor
push
imul
xchg
leave
mov
andb
out
call
and
xchg
repnz
aaa
imul
popa
es
pop
cmp
addl
rclb
dec
dec
leave
push
adc
stos
inc
je
cmp
and
clc
cmp
leave
cmp
and
push
pop
aas
dec
push
in
dec
xchg
out
mov
mov
mov
push
inc
and
sub
aas
mov
je
xor
jmp
inc
add
sub
popf
push
lea
cli
popf
sub
or
mov
out
popf
xor
add
and
mov
or
dec
cwtl
pop
mov
popf
cmp
add
ss
xchg
mov
or
mov
je
loopne
pop
inc
add
shrb
popf
pop
orl
sbb
xor
and
mov
sub
lea
add
mov
sub
add
dec
or
inc
imulb
cmp
icebp
push
nop
dec
pop
je
and
addr16
cli
or
or
dec
add
out
call
mov
cmp
callw
pop
call
call
xchg
mov
popa
js
dec
aam
inc
adc
inc
push
jns
cmp
call
and
pop
push
inc
pop
mov
pop
fs
mov
xchg
mov
xor
leave
inc
pop
cmp
idivl
decl
inc
bound
lods
out
add
psubsb
add
call
xabort
pop
jmp
or
xchg
mov
je
cmp
jmp
insb
inc
cmpsl
jp
pop
xchg
sbb
sub
push
xchg
inc
xchg
xchg
addr16
int
clc
push
loopne
pop
push
into
cmp
xor
dec
dec
jmp
sub
inc
rclb
dec
jge
rorb
loopne
adc
and
ljmp
push
add
xlat
lret
cmp
or
es
or
adc
jp
test
cmpsl
ret
in
dec
mov
or
mov
push
and
inc
fiadds
shlb
sub
ljmp
push
push
es
ja
sub
cmpsb
add
movsl
push
and
cld
aad
es
into
mov
mov
je
ljmp
add
ret
test
es
and
or
pop
inc
and
mov
iret
dec
push
arpl
lahf
addb
in
fiadds
xor
pop
push
fwait
xchg
jb
inc
push
int3
xchg
js
sbb
xchg
adc
ljmp
lret
or
push
xor
enter
scas
push
test
sbb
adc
rorb
setle
sbb
repnz
push
xchg
popl
outsl
pop
aaa
scas
cs
pop
and
adc
or
and
xchg
test
adc
scas
fiaddl
stos
dec
xchg
or
or
push
fwait
rcrb
xchg
outsb
pop
aaa
and
les
pop
enter
xchg
shl
test
xchg
push
xchg
xchg
fwait
rcrb
xchg
sub
adc
xchg
cmp
lret
sahf
and
lret
call
stc
xor
sbb
add
loopne
daa
or
push
inc
dec
addr16
xchg
pop
fs
cs
pusha
call
push
in
nop
je
mov
cwtl
fs
mov
pop
dec
outsb
and
sbb
xchg
jns
testl
adc
xor
add
imul
add
jmp
cmp
je
pop
xor
xor
or
dec
pop
pushf
adc
fsubrp
loop
lock
daa
pop
nop
add
and
xchg
mov
pusha
xchg
and
pop
pop
cwtl
fs
sahf
imull
mov
or
push
mov
je
out
ror
jecxz
add
call
cld
or
push
adc
insb
add
and
dec
daa
or
sar
enter
lahf
popa
sbb
sbb
lods
inc
fisubs
dec
or
add
fs
and
out
aam
pushf
push
pop
jmp
cmp
je
nop
add
mov
push
repz
pmulhw
or
lahf
ret
lea
shr
xor
adc
mov
jnp
or
cmp
push
repnz
add
add
pop
repnz
jmp
mov
lret
add
jno
je
xchg
add
xchg
sub
mov
ror
test
push
push
add
pop
pop
in
lcall
or
inc
scas
sbb
cmp
cld
enter
add
or
pop
pop
add
or
add
or
xchg
or
cmp
mov
in
sahf
xchg
je
push
push
pop
cs
rdmsr
adc
mov
adc
pop
adc
xor
adc
inc
scas
in
int
push
adc
add
pusha
in
ficoms
adc
adc
push
adc
sahf
xchg
sub
pop
mov
sbb
sbb
xchg
cwtl
cmp
cmp
push
repnz
sbb
enter
mov
aaa
xchg
pop
lcall
sbb
bound
sbb
ja
sbb
sbb
in
push
inc
negb
pop
push
ja
shlb
fs
pop
rcrb
je
mov
sub
iret
cmp
xchg
mov
cwtl
xchg
push
in
push
sub
out
je
repnz
sub
rcl
ret
push
imul
addr16
sahf
addr16
roll
out
sub
mov
je
call
inc
les
ja
jmp
jb
cmp
mov
add
cmpsb
inc
mov
pop
pop
insl
nop
in
in
xchg
aad
in
jns
scas
in
in
mov
out
nop
adcl
or
lock
mov
icebp
cmp
mov
jnp
or
sbb
repz
std
push
pushf
lcall
xchg
jb
out
std
cmc
cmc
cmp
xor
testb
sbb
gs
clc
enter
clc
clc
or
iret
stc
stc
and
repnz
add
sti
enter
fdivrp
cld
cld
je
mov
push
push
nop
shlb
mov
xor
sub
cld
rorb
xchg
xor
sbb
shll
shrb
dec
lahf
rol
call
or
nop
cmpsb
loope
call
lret
stos
pusha
jecxz
xor
mov
enter
cmp
idivl
mov
and
or
out
sbb
call
mov
jae
and
dec
jmp
scas
ss
jmp
xchg
daa
in
push
and
test
or
jmp
dec
or
push
xor
out
xchg
mov
lock
cmp
cli
or
out
repz
sbb
mov
stc
shll
stos
dec
push
cmp
mov
xor
clc
cltd
pop
repnz
stc
push
stc
movsb
test
stc
sti
sti
jns
push
sbb
xchg
or
cmp
push
lret
sub
clc
mov
in
test
fildll
or
clc
mov
loop
push
xor
loop
arpl
subb
inc
clc
cmp
in
clc
dec
add
stos
or
out
xchg
leave
or
loope
testl
or
jnp
ljmp
mov
notl
sub
nop
pop
testl
inc
mov
mov
pop
repnz
notb
and
inc
scas
ss
inc
repz
push
and
sub
or
xor
adc
cmc
div
jne
repz
dec
xchg
addr16
loope
cmp
sbb
test
cli
cli
subb
xchg
cmp
loope
in
repnz
cli
hlt
roll
pushw
data16
test
push
jo
stos
mov
xchg
xor
sub
sti
mov
cs
loope
loope
jp
pop
pop
and
cvtdq2ps
or
mov
lret
in
pop
das
mov
paddq
add
push
and
repz
xchg
repz
test
insb
repz
repz
or
or
in
push
and
test
in
repnz
or
test
cmp
icebp
icebp
push
in
pop
das
xchg
pop
adc
and
ds
repnz
jb
popa
sbb
add
xchg
cmc
mov
mov
mov
lock
pop
add
pop
cwtl
icebp
or
cs
stc
mov
dec
icebp
xor
movlps
push
adc
or
scas
lock
mov
test
imul
sub
lret
cmpsb
lock
push
sub
stos
test
jge
rclb
loope
mov
xchg
aaa
inc
cmp
cmp
xor
add
adc
mov
lods
mov
add
jne
stc
xor
dec
icebp
dec
add
movsb
xchg
dec
mov
push
aam
jmp
jmp
and
add
int3
imul
pop
dec
push
nop
push
jns
adc
repz
push
add
adcw
sub
push
cmp
data16
push
repz
mov
mov
rep
sbb
push
push
aad
in
iret
repz
push
dec
outsb
or
push
dec
sarb
movb
jno
movsb
das
fmull
inc
into
in
adc
or
call
adc
shll
lret
mov
pop
sub
fwait
push
and
mov
adc
inc
jle
push
test
fists
add
push
andb
inc
sbb
mov
dec
push
mov
push
shrb
ficoms
and
mov
lock
sbb
inc
push
sub
mov
push
dec
xlat
pop
or
push
lea
fisubl
clc
rolb
sbb
sbb
mov
ret
xor
in
jmp
or
dec
xor
jl
inc
adcl
fsubl
call
xchg
xchg
jo
push
orb
insl
adc
jmp
add
insb
movb
testb
adc
in
movsl
dec
rcrb
lahf
popf
adc
adc
orb
fldl
inc
xor
and
adc
ss
sbb
popa
adc
adc
rol
jmp
ret
je
fiaddl
dec
int
jb
or
or
jbe
add
jns
call
adc
pop
icebp
and
nop
inc
add
add
or
xchg
pop
xchg
pop
mov
sub
js
mov
jo
xchg
movb
sub
jmp
out
mov
cmpsl
jo
out
mov
out
sbb
nop
outsb
dec
out
adc
xchg
mov
pop
adc
inc
pusha
push
add
sbb
or
dec
inc
cmp
pop
out
cltd
test
inc
and
lea
or
mov
test
sbb
fnstenv
mov
xor
mov
xor
add
or
jg
dec
adc
mov
jbe
dec
shll
mov
and
or
fimull
loop
stos
dec
inc
cmp
in
xlat
mov
call
sti
iret
les
and
test
push
test
push
xor
lea
mov
adcb
mov
imul
mov
adc
xchg
nop
in
xchg
push
test
dec
in
adc
dec
jb
dec
test
nop
pop
add
mov
jmp
fldt
sbb
add
adc
cli
leave
test
in
pop
adc
or
pop
cmpsl
or
pop
insb
inc
jno
mov
mov
push
sbb
fadds
test
or
test
aam
or
test
je
jbe
jg
pop
and
nop
je
xchg
test
xchg
test
dec
inc
test
xor
and
shld
leave
and
cld
push
out
add
enter
jecxz
mov
test
sub
repz
add
push
and
and
mov
dec
dec
push
or
push
test
inc
test
rclb
pop
xchg
nop
outsb
subb
shrb
or
adcb
and
cmp
and
xchg
xor
icebp
jo
jmp
push
jmp
lods
loope
xor
mov
and
jb
out
dec
cmpsb
nop
xchg
jmp
lods
nop
loopne
call
adc
sub
aaa
and
loopne
xor
fwait
push
pop
jns
inc
cli
sbb
mov
cmp
dec
jne
or
mov
push
adc
daa
jmp
push
mov
sub
xor
inc
mov
inc
pop
in
sub
cwtl
test
lea
xor
in
pop
adc
leave
popf
push
push
cmp
mov
sub
ret
inc
cmp
dec
dec
mov
and
mov
and
enter
xchg
test
dec
mov
inc
in
or
adc
pop
xchg
das
inc
sub
sbb
shlb
gs
movsb
lahf
xchg
test
push
mov
and
dec
mov
or
repz
pop
mov
or
or
dec
mov
pop
mov
scas
sub
sub
pusha
or
or
dec
dec
cmp
cmp
hlt
jle
and
inc
pop
popf
add
xchg
sub
jmp
mov
push
mov
xor
dec
push
mov
inc
pusha
push
adc
mov
adc
mov
sub
movb
rcrl
shl
jne
sbbl
sahf
leave
shll
sub
or
sti
jmp
mov
pop
popa
fsubs
push
and
xchg
mov
jb
xchg
test
inc
sbb
xor
pop
cltd
sub
sbb
jg
shr
data16
data16
loope
and
or
jnp
dec
dec
mov
iret
dec
stos
notb
pop
or
sahf
out
push
cmp
ret
dec
inc
xlat
aas
movsl
xor
movsl
sub
mov
or
outsl
and
mov
and
es
loopne
inc
sarb
inc
adc
and
xchg
xchg
push
int3
outsl
add
pop
mov
aaa
sub
push
daa
dec
mov
ret
or
xor
movsb
adc
outsl
mov
outsl
fsts
insb
dec
mov
dec
ja
repz
and
je
repz
cs
jbe
int
xor
or
mov
data16
mov
movsb
jmp
mov
sbb
repz
loope
xchg
insl
push
sbb
and
push
insb
test
and
inc
insb
inc
test
cmp
insl
enter
test
mov
test
repz
sbb
js
je
loopne
inc
push
sar
mov
push
test
call
sbb
enter
test
insl
test
mov
sahf
dec
je
sbb
ss
pop
dec
test
jbe
negl
in
loope
inc
adc
sbb
test
stos
lahf
mov
aam
sbb
dec
insb
test
bound
mov
je
inc
pop
test
cmp
pop
test
fs
test
mov
les
fs
mov
test
push
jae
push
mov
cmp
bound
mov
loopne
sbb
psadbw
or
shrb
fstl
mov
mov
mov
imul
test
adc
mov
mov
cmp
inc
ja
fs
iret
test
ljmp
sarl
enter
test
ret
mov
rorb
es
pop
inc
mov
jnp
rorb
fldt
adc
dec
ss
dec
xor
inc
dec
xor
cmp
sub
push
test
insl
mov
or
dec
or
cmp
out
add
push
sbb
mov
or
adc
in
sbb
movsl
test
xchg
movsl
test
test
imul
call
bound
test
fadds
sub
stos
adc
test
cmp
sbb
or
sbb
test
pop
sub
test
ljmp
popa
adc
add
bound
test
pop
movsl
sub
sbb
xchg
xor
jmp
and
insl
call
test
mov
xchg
out
dec
cmp
aam
or
mov
je
mov
orb
dec
lds
fstl
pop
sbb
ss
sbb
test
and
or
jns
sbb
loopne
test
sbb
lock
add
insb
or
jnp
xchg
or
int
jl
cmp
dec
push
in
add
sbb
test
out
test
mov
sbb
xor
or
push
inc
insb
inc
test
or
dec
cmp
or
or
stos
mov
imul
xchg
mov
insb
test
jmp
inc
adc
cld
add
sti
lret
cmp
out
mov
sbb
fadds
add
xorl
insl
call
les
in
push
test
mov
mov
bound
sbb
lock
scas
ret
jp
out
dec
push
adc
and
push
les
je
in
je
bound
jp
lods
fisubrl
test
test
fadds
xor
test
shrb
jg
test
cmp
pop
lds
movsb
mov
and
cltd
sbb
xor
and
and
cmp
inc
push
and
and
dec
push
cmp
and
pop
lcall
call
adc
outsb
sub
popa
jo
ret
mov
cmp
cmp
daa
adc
xchg
inc
jno
test
cmc
add
ds
jmp
mov
aaa
imul
and
daa
popf
aaa
dec
jns
or
in
icebp
mov
repz
push
pop
jmp
mov
xchg
rclb
xlat
or
pmaxsw
dec
in
mov
ret
outsb
mov
pop
sub
dec
bt
mov
inc
push
cmp
jne
lret
inc
lods
ret
mov
jmp
mov
test
addr16
test
or
mov
add
xchg
dec
cmc
ja
mov
flds
imul
dec
orb
inc
pop
and
mov
xlat
adc
insb
inc
sub
mov
test
sarb
dec
ret
in
test
push
cmp
xor
xchg
bnd
mov
flds
addr16
push
cwtl
push
sub
mov
cmp
push
pop
xchg
mov
inc
mov
add
mov
insb
or
or
pop
pop
jle
xchg
jle
or
je
pop
pop
add
dec
xchg
je
xchg
jle
or
cmp
jle
mov
outsl
jle
push
jg
scas
cmp
shlb
cmp
jle
shrb
push
mov
cmp
data16
int
sbb
faddl
pushf
mov
add
push
jne
sub
inc
jg
inc
push
mov
leave
dec
dec
push
push
cmp
hlt
nop
xchg
xchg
or
call
pop
in
inc
pop
cmp
in
jl
sub
fnsave
mov
leave
jg
push
mov
leave
mov
imul
fs
sub
hlt
scas
mov
leave
xchg
es
test
or
add
and
fwait
rorl
lock
pop
jl
xchg
out
or
rcl
or
enter
and
xor
addb
add
adc
xor
cli
testb
pop
sbb
xor
popa
dec
or
sub
or
xchg
fsubr
and
call
rclb
xchg
cli
sarb
jbe
fimuls
call
jmp
and
inc
sar
insb
inc
mov
rcrb
xchg
jmp
shll
lcall
xchg
xchg
ret
divb
inc
xchg
fwait
mov
mov
imul
and
push
xchg
dec
jp
roll
inc
sub
and
sub
test
and
xchg
nop
je
push
and
int3
nop
je
xchg
or
nop
je
pop
xor
loopne
dec
add
xchg
fs
xchg
xchg
xchg
int3
nop
xchg
mov
mov
leave
out
icebp
clc
cs
call
movsb
cmp
into
mov
pop
lahf
pop
dec
call
lods
rorl
sub
mov
les
add
andb
enter
clts
mov
inc
pusha
mov
enter
mov
jb
lcall
adc
cmp
mov
lcall
adc
mov
xor
mov
mov
mov
dec
call
es
es
mov
int3
es
mov
mov
fisttpll
test
mov
es
daa
mov
rcrl
das
push
test
bound
mov
mov
ljmp
add
jae
lea
jle
dec
sub
adc
adc
inc
add
scas
loop
dec
inc
push
add
fwait
stc
dec
daa
movsb
add
incl
inc
mov
je
add
gs
and
or
xchg
insl
sbb
rcl
cmp
or
adc
scas
ljmp
test
mov
mov
push
jmp
pusha
cmpl
xor
sbbb
mov
pop
push
jns
imul
cmp
xor
or
roll
repz
ffree
lahf
out
call
adc
sbb
sub
adc
push
adc
out
push
es
or
inc
imul
lret
push
or
adc
in
mov
stos
repnz
cs
mov
add
inc
and
cmp
pop
dec
in
push
ljmp
mov
ret
push
inc
call
sbb
aam
inc
mov
imul
out
add
fsubl
add
xor
or
popa
test
or
lahf
push
movb
cmp
shrl
ds
cmp
inc
jmp
dec
jmp
xor
cmp
fimuls
inc
inc
scas
xor
inc
or
loopne
jmp
inc
inc
inc
pop
je
pop
es
add
and
add
and
or
jbe
mov
adc
dec
stc
add
lods
or
xor
je
inc
or
je
lock
dec
fdivrl
and
fwait
loopne
cmp
leave
or
insl
sub
pop
inc
add
xor
je
xor
inc
jmp
add
fdivrl
arpl
jmp
xchg
and
movsl
adc
cmp
adc
sbb
enter
aas
add
sbb
pusha
popa
cltd
test
add
mov
loopne
movsl
shrl
xor
lock
fldl
xchg
rcrl
call
sbb
imul
or
jo
inc
inc
dec
sbb
out
addps
push
lret
sti
lods
fisubrs
jge
push
push
or
mov
je
inc
jecxz
imul
cmp
sbb
and
xchg
inc
incb
ja
cmp
xor
or
dec
push
add
ret
push
push
add
inc
test
enter
call
repz
mov
mov
push
hlt
dec
out
inc
dec
ret
fcomip
inc
insl
inc
dec
imul
out
cmp
pop
cmpsl
push
mov
pop
mov
xchg
jmp
add
sbb
dec
add
xor
cmpsl
push
ja
mov
xor
inc
and
inc
add
filds
cmc
add
scas
dec
xchg
in
mov
lcall
xchg
mov
cmp
add
sahf
in
nop
mov
xchg
test
mov
das
out
push
or
inc
add
popa
das
jp
movsl
jnp
xor
orl
test
or
add
cs
popa
mov
cmpsb
or
rcrb
xorb
push
cmpsb
xor
mov
lcall
add
dec
test
imul
test
mov
shlb
and
lret
aas
testl
xchg
lret
gs
fadds
cli
mov
enter
ret
sbb
push
push
inc
nop
in
xchg
xlat
cmc
fists
bound
add
daa
xlat
sbb
mov
mov
ret
inc
sbb
inc
dec
daa
and
dec
xchg
pop
data16
lea
cmp
and
and
daa
nop
sbb
inc
aaa
int3
or
push
lea
cs
push
fcoml
nop
outsb
xchg
lock
xchg
insb
fwait
mov
jbe
pop
mov
jmp
repz
mov
inc
xor
mov
test
inc
xchg
cmp
mov
lea
mov
movsl
ror
int3
leave
mov
jno
xor
or
loopne
lods
es
sarl
mov
mov
mov
cmc
or
mov
call
inc
pop
jmp
mov
and
inc
push
sbb
rorb
add
xchg
ja
sbb
xchg
dec
add
jg
inc
cmpsb
imul
cli
pop
pop
repnz
movsl
test
loop
ficompl
sub
rolb
add
jmp
ljmp
add
inc
cmp
xchg
rorb
int3
mov
or
ss
push
mov
and
xchg
lret
call
sub
add
add
cmp
xchg
or
mov
xchg
in
dec
enter
push
mov
arpl
ss
arpl
movsb
arpl
ret
test
and
movsb
fisubs
mov
mov
dec
jo
icebp
jmp
mov
push
insl
bound
addb
cmp
insb
push
or
or
or
adc
xor
sbbb
das
add
and
or
cmp
cmp
in
lea
mov
icebp
shll
xor
and
repnz
enter
fsubl
xor
lcall
jo
jno
xor
xor
xchg
popa
or
inc
xchg
ret
add
sarl
in
push
pop
mov
add
jbe
andl
andl
or
orl
pushf
clc
dec
jbe
add
inc
repnz
mov
sti
out
popa
leave
nop
adc
xchg
lea
mov
mov
xor
enter
push
and
sbb
fldt
sbb
sbb
sbb
loope
pop
xchg
dec
in
shlb
or
sub
jo
push
jecxz
dec
rorb
xchg
cltd
push
ret
sbb
roll
inc
xchg
or
push
push
and
pop
xor
jno
lds
rol
sbb
mov
cmp
std
fwait
pop
xchg
andl
add
xchg
lret
in
and
jne
enter
push
dec
add
jne
in
inc
nop
outsb
push
add
mov
jle
rorl
pushl
jmp
test
popa
fldl
fldl
sub
cmp
scas
and
jmp
push
xor
and
cld
insl
jb
fildll
jno
insl
mov
mov
call
sbb
out
les
loope
xor
push
xor
pusha
popf
fstpt
dec
mov
pop
and
scas
sbb
push
mov
dec
mov
ret
icebp
sahf
add
jne
cmp
inc
dec
adc
xchg
or
mov
popf
dec
jno
and
call
mov
loopne
sub
adc
xchg
insb
outsb
hlt
xchg
jl
fcompl
out
daa
pop
enter
sub
dec
pop
jp
dec
ss
loopne
sbb
es
jne
xchg
xchg
mov
xlat
inc
rolb
je
inc
idivl
mov
add
adc
daa
lea
mov
cltd
mov
adc
xor
cmp
pop
ds
outsb
add
pop
adc
add
pop
sbb
rclb
add
sub
call
xchg
pop
mov
and
test
pop
adc
sub
pop
push
testl
inc
movl
ret
call
rcrb
push
xchg
popa
mov
and
mov
call
lds
ja
xchg
xchg
std
pushf
es
dec
dec
std
mov
adc
fwait
xchg
pop
les
cmp
lods
xchg
push
jno
std
dec
jbe
fisubl
lcall
pop
sbb
or
xor
push
int3
mov
daa
and
fidivrl
daa
pop
mov
iret
sbb
pop
loopne
jo
iret
dec
pop
adc
mov
dec
loopne
fdivrl
aam
mov
sbb
and
iret
inc
or
mov
aam
or
call
mov
push
outsb
or
and
and
movsl
inc
sub
lea
xor
xchg
or
pop
movsl
out
xchg
or
cmpsl
movsl
movsb
inc
movsl
enter
jo
fs
movsl
loopne
dec
rolb
mov
mov
adc
movsl
push
push
or
aad
xchg
or
add
pop
and
call
xor
movsl
add
fs
movsl
shll
xor
out
sub
or
push
movsl
or
popf
inc
cmp
xchg
mov
movsl
pop
xor
addl
scas
mov
or
shrb
int
shlb
adc
movsl
inc
es
jecxz
mov
mov
or
cmp
xor
inc
fs
cs
cmp
es
cwtl
pushf
pop
movsl
inc
es
mov
cmp
and
and
inc
movsl
cs
addl
or
call
enter
mov
xchg
aam
movsl
xchg
nop
mov
and
cltd
movsl
jmp
and
push
shlb
inc
popl
and
inc
movsl
fisttpl
and
and
or
or
xor
inc
adc
movsl
and
adc
rolb
movsl
and
cmp
inc
movsl
enter
lods
enter
movsl
mov
movsl
ffreep
mov
adc
cmpsb
enter
sbb
mov
sbb
xor
or
fldl
adc
inc
mov
popf
sbb
imul
addr16
push
sbb
lcall
sub
inc
out
imul
test
hlt
test
or
outsb
inc
es
out
xor
mov
into
add
and
adc
sub
pop
cltd
shlb
cltd
nop
movsl
mov
pusha
movsl
les
roll
xor
call
cmp
adc
or
rcr
mov
mov
add
mov
sbb
insb
int3
push
sbb
pop
es
aaa
call
push
fisttpll
add
sbb
mov
inc
rcl
lds
cmp
and
decl
cmp
pop
and
inc
sbb
cmp
mov
addb
into
pop
push
adc
cmp
ret
roll
dec
jmp
cwtl
or
ljmp
insb
xor
mov
repz
shlb
loope
or
or
xchg
push
in
inc
adc
fiaddl
pop
dec
pushf
mov
rcll
adc
test
pushl
adc
and
mov
inc
adc
pop
xchg
push
or
fwait
push
push
push
jl
inc
mov
pop
add
cmp
dec
cs
lahf
sbb
or
hlt
loopne
push
mov
inc
or
inc
adc
pop
pop
cmp
inc
arpl
shlb
adc
mov
popa
xor
pop
cmc
movntps
testl
pop
call
push
pop
inc
push
lcall
inc
sub
cmp
sbb
loopne
inc
adc
or
ds
mov
or
dec
call
or
test
pop
and
orl
loopne
out
and
jo
jae
dec
popa
xorb
dec
pop
push
xorb
leave
and
jae
scas
and
jnp
add
or
jle
test
dec
sub
and
jp
add
sub
inc
sbb
sbb
movsb
xchg
mov
pop
add
sbb
or
adc
cltd
test
mov
adc
inc
adc
push
add
cli
dec
sub
push
mov
nop
sub
aam
xchg
mul
mov
xor
dec
mov
pop
ffree
mov
imul
xchg
cmp
sbb
mov
out
xchg
xor
push
scas
jmp
dec
sbb
addb
xor
and
or
inc
in
rcl
addb
adc
test
xor
push
mov
inc
andl
andl
pusha
call
andl
mov
push
push
andb
mov
adc
test
js
and
xor
cmp
add
add
nop
sub
sbbl
orl
push
mov
push
sbbl
and
punpcklbw
adc
je
pusha
enter
inc
xchg
mov
xchg
add
addl
and
add
and
xorl
pop
ss
jbe
xchg
call
repnz
aas
xor
unpcklps
das
push
jge
add
call
maxps
adc
call
xor
clc
repnz
xchg
lret
xor
lock
call
cwtl
sar
cmp
fcomps
jg
inc
call
mov
pop
decb
movsb
lods
andps
movsl
pop
call
in
xchg
xchg
pusha
call
push
jl
insb
call
je
gs
pop
xchg
popf
das
jl
push
sbb
inc
sbb
cmp
xchg
dec
in
xor
push
cs
adc
in
cli
lret
movsb
imul
and
adc
dec
in
mov
je
out
or
shlb
xchg
mov
push
mov
mov
push
dec
in
push
in
inc
aam
push
mov
hlt
es
xchg
dec
in
sbb
adc
add
mov
leave
or
rcrb
out
leave
gs
loope
adc
adc
sbb
xchg
lret
sbb
and
sub
xchg
lret
xor
jae
jb
pop
cmp
pop
xchg
push
xchg
lret
inc
gs
dec
pop
mov
xor
push
xchg
dec
in
adc
or
pop
add
loopne
and
mov
inc
mov
insb
and
data16
sbb
jo
xor
test
inc
out
sbb
and
mov
jbe
sbb
and
xor
daa
push
adc
inc
xor
mov
xorb
daa
int
dec
test
and
and
cli
cmp
jb
mov
daa
int
inc
test
inc
adc
pushf
xor
mov
cli
mov
rcrb
dec
mov
and
push
sbb
dec
rcrb
je
dec
stos
ret
push
dec
and
adc
xchg
push
sbb
rorl
mov
je
test
orb
push
adc
loop
jae
lea
inc
pop
inc
add
dec
inc
pop
pop
mov
mov
add
pop
mov
cmp
inc
ret
cmp
add
inc
push
iret
adc
test
inc
call
push
or
lods
dec
pusha
push
sub
and
pop
or
sub
fsubrs
xchg
cmp
cs
push
mov
adc
adc
push
mov
es
scas
xchg
rcrb
mov
sub
xchg
test
pop
sbb
subl
jno
inc
jmp
popa
push
push
inc
sub
call
addl
adc
and
mov
dec
mov
or
mov
orl
enter
call
incl
orl
push
mov
and
add
adc
fs
rolb
sbb
cs
inc
mov
push
add
push
movsl
pop
xor
push
mov
stc
mov
cmp
push
mov
xchg
sub
add
push
or
in
add
xor
push
add
push
add
add
inc
mov
fs
mov
add
sbb
repz
dec
add
fbld
fs
or
sbb
movsb
and
test
push
push
aam
mov
addr16
nop
push
mov
mov
outsb
stos
dec
adc
mov
sub
fld1
inc
cmp
push
stos
sbb
test
rorl
jg
fsubrs
mov
test
mov
xor
je
ja
push
in
push
pop
cwtl
sub
sbb
stos
in
inc
mov
push
cmp
mov
push
cmp
and
dec
sub
pop
pop
or
sub
subb
fwait
and
xchg
mov
sub
adc
test
push
andb
call
outsb
sub
xor
outsl
or
push
stos
dec
push
ret
and
xorb
cli
adc
push
movsl
roll
or
mov
cmp
sub
push
cmp
jp
andb
and
xor
andb
add
out
and
daa
fs
adcl
add
bnd
jns
jmp
push
or
adc
cmpsb
push
cmp
adc
movsl
rol
xor
push
and
in
pop
dec
mov
test
pop
xchg
sbb
sbb
dec
mov
sub
test
cwtl
lcall
out
shll
adc
add
or
xchg
jns
call
aaa
test
adc
dec
ja
push
jno
and
push
lods
mov
xor
add
adc
push
cwtl
shlb
push
mov
push
cwtl
sarb
dec
js
jmp
jno
push
xchg
leave
push
add
xchg
lods
addr16
or
push
ret
add
addr16
nop
push
and
and
adc
inc
dec
or
ja
or
add
sahf
adc
out
adc
push
addr16
fldt
rcrb
imul
mov
inc
adc
adc
andl
nop
or
push
pop
inc
subl
pusha
xchg
mov
movsb
add
movsb
sbb
nop
xor
sub
inc
or
mov
add
xor
scas
or
nop
and
movsb
shll
out
mov
mov
push
jno
mov
gs
sbb
out
enter
xchg
negl
arpl
bound
mov
mov
adc
lea
arpl
aaa
inc
and
js
dec
inc
and
xor
out
or
and
push
shlb
mov
add
inc
ret
push
nop
cmpsb
sub
cwtl
adc
xor
dec
js
cmpsb
popa
pop
or
xchg
pop
or
movsl
loopne
adc
or
push
gs
add
mov
pop
push
and
fldenv
jmp
add
or
lea
je
push
xor
xor
mov
enter
and
aam
mov
lods
add
mov
jmp
and
js
stc
push
cld
add
sbb
adc
fdivrl
negb
fldl
or
adc
jb
inc
dec
inc
popa
int
out
push
add
test
rcrb
out
ret
lods
mov
mov
dec
test
add
pop
pop
out
enter
dec
inc
and
and
mov
mov
out
jns
jo
mov
call
pop
icebp
lds
sbb
xor
or
adc
mov
sub
outsb
sbbb
mov
add
jle
pop
mov
mov
pusha
fcompl
rolb
fwait
mov
adc
or
fldl
pop
outsb
inc
sbb
xor
mov
mov
or
add
pop
pop
mov
adc
xchg
ret
pop
nop
into
push
add
fnstsw
lds
push
adc
jo
push
addb
jo
adcb
xor
cmp
mov
add
dec
push
pop
aaa
addl
pop
xchg
adc
push
or
adcb
arpl
adc
nop
push
or
or
pop
shll
ja
and
sbb
or
pop
mov
cmpsl
sub
cltd
adc
push
pop
and
in
adc
adc
mov
lcall
sub
clc
mov
push
out
cmp
fstpl
dec
scas
cmpsl
mov
cld
sahf
jg
push
mov
pop
call
push
dec
push
xor
incb
movsb
xchg
cmp
iret
xor
push
add
pop
movsl
mov
sbb
inc
sbbl
dec
push
sbb
jmp
and
or
pop
mov
cwtl
mov
inc
fs
mov
or
and
sbb
adc
mov
adc
xor
nop
pop
adc
rcll
or
mov
xchg
call
lahf
pop
fcoml
adc
sahf
stos
cmp
push
mov
mov
push
test
push
and
mov
dec
sbb
std
mov
fistpl
push
push
or
inc
test
xor
scas
or
leave
mov
popa
push
popf
or
or
pusha
leave
ss
je
push
call
std
mov
mov
jne
mov
andb
push
pop
mov
mov
inc
loope
xchg
les
hlt
inc
or
cld
sbb
mov
mov
subl
push
ja
adc
or
xchg
xor
pop
loope
jge
inc
ss
shrb
dec
push
imul
push
and
push
push
jne
sub
add
sti
fwait
repz
adc
aam
push
imul
ret
xor
outsb
fdiv
stos
xlat
fwait
push
jnp
sub
sbb
imul
mov
inc
dec
lea
call
icebp
add
fwait
insl
push
or
adc
adc
mov
fwait
mov
and
loope
shl
jge
sub
push
rcrl
ret
lcall
adc
or
push
push
stos
xchg
inc
or
or
pop
push
adc
mov
adc
mov
and
ret
sub
movsb
repz
mov
lret
daa
shr
outsb
add
rep
ret
push
adc
add
and
push
pushf
fs
int
mov
test
dec
mov
push
cs
inc
push
and
add
test
daa
cmp
adcl
mov
sbb
adc
jmp
dec
daa
mov
xchg
dec
xor
jmp
rorb
and
inc
and
add
mov
les
dec
iret
iret
movups
sbb
add
sahf
cmpsl
stc
cmp
out
sbb
ret
sahf
out
sahf
mov
push
repz
out
sub
or
sbb
cmp
call
add
push
lods
push
mov
sahf
out
push
inc
push
push
sub
push
nop
cs
repz
movsb
push
push
xchg
jl
push
inc
repz
je,pt
push
iret
dec
cmp
sbb
repnz
out
lcall
mov
jle
push
pop
into
sbb
incb
add
repz
push
loop
sbb
out
aam
mov
repz
pusha
sbb
pushf
stc
cmp
repz
lret
or
out
sahf
cmpsl
and
pop
data16
out
sahf
jb
nop
sahf
lods
mov
sahf
out
rcr
in
decb
dec
jecxz
fidivs
push
inc
push
rcr
out
dec
out
jb
jle
sahf
mov
daa
mov
loop
clc
adc
sub
cmp
sahf
out
int3
aaa
je
fs
push
cmp
sahf
notl
adc
daa
pop
mov
jbe
mov
xchg
lahf
jae
jbe
push
cwtl
cmpsl
lods
int
outsl
insl
mov
iret
dec
test
sbb
adc
xchg
iret
sbb
push
jbe
push
scas
test
test
int
mov
roll
pop
subl
daa
jo
and
pop
dec
cltd
aaa
pop
jle
sub
mov
divl
stos
dec
push
dec
ja
push
imul
mov
push
outsl
push
push
ja
rorl
push
and
lahf
pop
mov
fsubl
lret
dec
scas
ss
and
daa
xor
fistpl
xor
outsl
ss
xor
add
add
bound
dec
int
lock
nop
sbb
idivl
push
jl
push
mov
mov
cmp
fcomp
outsb
aas
das
sbb
lret
fwait
test
mov
daa
mov
repz
adcb
bound
mov
scas
mul
or
sbb
sbb
or
lret
and
sub
mov
dec
adc
cs
outsl
mov
cmp
out
push
xchg
inc
jnp
add
mov
das
cmp
mov
jg
add
jo
mov
ljmp
hlt
incl
push
push
inc
push
inc
pop
inc
outsl
outsl
xchg
repz
int3
and
pop
inc
and
lret
cmp
add
dec
inc
jae
out
dec
jnp
pop
dec
imul
pop
mov
pop
inc
jne
outsb
je
push
pop
inc
js
in
outsl
xlat
add
lret
inc
inc
xor
sub
sub
std
push
xor
inc
inc
xor
xor
xor
jge
fcos
in
mov
inc
xor
xor
ss
xor
cmp
mov
fdivrp
fdivl
cmp
xor
clc
inc
inc
xor
mov
xor
aaa
add
and
sysret
or
and
push
xorb
lea
or
rcrl
mov
cmp
xor
push
idivb
inc
or
push
and
inc
aaa
adc
pop
js
cmp
xor
dec
pop
or
inc
add
pop
push
arpl
negl
jle
xor
dec
and
cmp
ss
and
xor
add
ljmp
dec
sub
pusha
loope
dec
or
scas
push
push
jl
xchg
hlt
imul
inc
aam
pop
push
imull
outsl
jle
out
inc
out
adc
push
sub
out
into
repz
cmp
in
xchg
jne
sti
mov
lods
sahf
add
movd
and
hlt
mov
cmp
xor
adc
sub
and
jp
mov
xor
imul
movsb
mov
mov
je
push
push
mov
sbb
inc
cmp
add
cmp
cmp
sbb
xchg
rol
in
xchg
lret
add
popf
mov
pop
add
scas
sub
arpl
or
mov
xchg
and
outsb
ret
pusha
loope
adc
lods
mov
and
pop
cltd
dec
inc
xor
or
pop
bndldx
loope
sbb
inc
push
xor
pop
rcrl
jns
jo
inc
int3
pop
jg
jp
sbb
pushf
dec
stos
inc
out
movsb
pop
ja
push
and
sub
imul
inc
cmpsb
push
imul
push
mov
js
daa
fucompp
lods
shrb
push
imul
push
cmp
mov
fwait
add
popa
fs
jo
shlb
lods
insb
sbb
add
adc
pop
sub
dec
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
pushl
inc
cs
push
push
push
add
push
shlb
neg
outsb
outsl
push
popa
imul
outsb
popa
orl
fsub
push
int3
add
sub
add
add
jno
pop
sbb
or
pop
adc
push
or
inc
rolb
or
les
pusha
jg
andl
jle
pushf
add
sbb
push
mov
cmpsl
and
insl
out
dec
inc
mov
popa
sub
xlat
movsb
add
mov
test
fadds
adc
subb
repz
or
add
add
mov
push
adc
sahf
out
dec
xchg
adc
push
sbb
sbb
iret
sarl
sbb
call
imul
xor
jae
nop
cld
and
cli
js
xor
cld
stc
jp
push
cld
xor
repz
mov
out
or
pop
jbe
add
scas
push
lahf
mov
and
pop
push
adc
ret
dec
int3
orb
or
ds
cmp
cmp
sub
or
es
iret
lods
ret
adc
push
cld
sahf
out
lcall
insb
pushf
out
mov
repz
xor
mov
cmp
repz
mov
cmp
insb
push
pop
jns
out
push
push
dec
dec
inc
iret
repz
out
cmp
xor
sub
iret
repz
and
sbb
repz
repz
or
add
jns
iret
add
or
hlt
call
enter
jl
out
jo
xor
lock
repz
ror
mov
insb
inc
out
cmp
sub
adc
cld
push
sahf
out
sahf
fcom
les
jns
sub
aam
mov
xchg
jo
sbb
add
sahf
mull
call
cwtl
jl
pop
dec
iret
inc
imul
adc
pop
cmp
pushf
mov
xchg
fwait
and
mov
mov
scas
and
inc
dec
adc
jnp
mov
sub
inc
inc
add
adc
test
dec
cmp
daa
push
lcall
inc
mov
aaa
adc
sbb
pusha
das
popl
jecxz
gs
jo
sbb
cmpsb
les
cli
xchg
sub
out
pop
fs
es
mov
dec
adc
js
push
ja
mov
push
jmp
inc
faddl
pop
bound
adc
add
out
or
xchg
and
or
add
pushl
shrb
mov
pushf
andb
shrb
incl
dec
ret
jns
inc
lcall
add
jmp
mov
push
xor
xchg
cld
inc
inc
mov
jo
mov
mov
inc
cmp
pop
jne
pop
add
cli
jg
xchg
add
jne
imul
enter
adc
arpl
imul
push
loop
mov
jo
push
or
dec
add
das
jo,pn
bound
and
inc
mov
push
push
insb
das
inc
and
outsl
jl
add
pop
mov
mov
add
loopne
xchg
out
jg
loopne
out
test
addr16
mov
and
inc
loope
pop
jmp
sbb
inc
sub
aas
or
fdivs
cmp
mov
ss
fsubrs
lds
sete
int3
add
jae
ljmp
add
pop
fwait
in
xlat
jns
pop
shlb
cmp
ss
lcall
pushf
setl
lret
and
mov
rcl
inc
mov
jl
in
test
loopne
aas
sbb
pushf
call
es
lcall
in
inc
repnz
and
adcb
jg
enter
in
mov
xchg
sbb
pinsrw
ror
mov
mov
aas
jbe
in
imulb
lea
aam
insb
mov
daa
fs
loopne
dec
and
movsb
dec
adc
imul
daa
lock
mov
push
dec
mov
mov
adc
jb
xor
add
mov
jbe
sahf
mov
cmp
mov
inc
je
dec
imul
xor
sti
ltr
insb
push
fdivl
and
sahf
inc
xor
dec
dec
add
xor
push
add
push
outsl
ja
xor
lret
adc
sub
jb
sbb
add
xor
add
push
out
daa
movsb
and
clc
pusha
in
xchg
and
add
insl
orb
ja
cmc
into
inc
lods
push
filds
push
lret
add
xchg
mov
shll
inc
cmp
mov
adc
inc
add
insl
jo
cmp
xlat
fimuls
outsb
push
add
jnp
xchg
dec
add
xchg
add
push
insl
std
fisubs
mov
jae
sbb
add
adc
faddp
xor
push
push
test
inc
fidivrl
lret
out
adc
das
mov
sub
push
inc
sbb
out
mov
addb
test
shll
add
es
mov
inc
push
mov
xchg
aam
scas
pop
das
push
mov
es
cmp
push
jo
jb
jns
in
lret
lock
and
xor
dec
add
lods
cmpsl
xor
push
cmp
pop
sbb
imulb
push
imul
inc
popa
inc
jmp
inc
jge
and
sbb
idiv
pusha
inc
and
out
out
push
inc
dec
pop
sub
imul
fistl
add
xor
sbb
and
pop
in
cmp
inc
add
add
ficompl
fbld
jne
adc
mov
add
rolb
xchg
push
addr16
loope
inc
loopne
pop
push
scas
mov
cmpsb
dec
cmp
popa
xchg
sub
push
ds
fs
mov
xor
icebp
cltd
xor
dec
xor
loope
adc
cs
popf
xor
gs
push
adc
das
xor
jle
and
push
or
pushf
call
xchg
sbb
sbb
add
scas
mov
sarl
mov
outsl
mov
push
mov
inc
add
stc
add
out
push
push
lcall
orb
mov
push
pop
xor
xor
dec
dec
pop
add
mov
inc
jns
xchg
inc
imul
fs
lds
sbb
lret
xchg
ss
mov
push
outsl
pushf
dec
xchg
cmp
roll
add
stos
inc
push
je
and
sbb
sub
sbb
faddl
lock
movl
add
mov
or
jb
mov
shr
outsl
adcb
mov
in
jp
mov
inc
jmp
mov
das
push
aaa
cmpsb
xor
push
dec
inc
dec
pop
or
aas
inc
int3
pusha
movsb
in
or
out
jecxz
mov
mov
mov
jmp
sbb
jmp
gs
xor
inc
adc
inc
sarl
mov
stos
add
dec
and
add
add
xchg
jno
inc
pop
inc
dec
andl
sub
add
adc
dec
pop
data16
push
jo
jno
cmp
sti
imul
mov
cmp
scas
into
pop
roll
in
cmp
adc
xchg
cmpsl
pusha
inc
leave
xor
inc
sbb
imul
add
iret
pop
xchg
jmp
lret
xchg
ss
in
inc
cmpsl
add
hlt
gs
push
push
push
mov
push
shl
loop
ret
push
and
or
insb
jo
cld
inc
jae
adc
add
je
mov
add
push
orb
add
and
mov
sub
mov
jecxz
sarb
into
insb
sbb
mov
dec
jle
nop
cltd
push
jae
inc
xchg
or
imul
cmp
lret
fbld
pop
sub
out
sbb
stos
xor
push
std
fwait
xchg
jge
inc
andb
cwtl
aam
push
movsl
fisubl
jle
testl
pop
in
aam
inc
jp
add
jae
popa
loope
fisttps
ds
jge
pop
push
insb
push
sbbb
push
and
push
punpcklbw
repz
pop
and
add
std
jo
inc
pop
jns
sub
pop
dec
mov
mov
adc
add
dec
add
push
mov
imul
add
js
fsubrl
xor
fs
dec
push
sbb
push
mov
cmp
scas
adc
mov
add
xchg
xorb
adc
addr16
sub
fs
mov
pop
xchg
mov
sub
xchg
xorb
mov
mov
cmp
repz
add
clc
out
out
sahf
cmpsl
lock
out
sahf
mov
test
cmp
jnp
pop
mov
repz
nop
mov
jns
pusha
push
pop
push
inc
cmp
sahf
out
xor
sbb
push
add
cld
in
lock
imull
push
fcom
enter
out
mov
out
sahf
je
push
cmp
sub
sahf
out
and
adc
add
cmp
repz
in
hlt
in
in
aaa
sti
cmp
int3
mov
xchg
push
cmp
push
js
push
inc
sub
jl
out
and
or
jmp
inc
mov
dec
and
pop
loopne
sbb
add
sub
mov
push
testb
clc
negb
pop
rorl
out
sub
shl
scas
push
rcrb
push
nop
add
jns
aaa
js
rorb
and
cvtpi2ps
or
addb
hlt
sub
jbe
add
xchg
push
push
in
mov
mov
adcb
add
dec
pop
rolb
pusha
mov
mov
nop
xorb
bound
cli
and
test
ror
jl
mov
jae
orl
gs
addb
mov
loopne
fstpt
jo
add
in
cmp
add
cmpsl
inc
sub
push
inc
outsb
nop
push
aam
dec
cmp
insl
xor
inc
sub
jbe,pn
fwait
or
xor
and
inc
cld
fbstp
lahf
xor
xor
ds
je
sbb
fwait
jb
das
mov
imul
jecxz
mov
in
add
imul
ret
cmp
dec
add
and
pop
push
xor
add
pop
jne
sti
loopne
add
mov
popa
insb
into
or
ss
jns
dec
mov
stc
das
sti
ss
pusha
aaa
add
fstpt
push
inc
add
inc
pop
pop
adc
inc
add
pop
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
gs
jp
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
decl
outsl
xor
test
enter
ljmp
ss
es
dec
aaa
push
decl
aaa
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
es
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
roll
lcall
ret
add
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
mov
xor
xor
xor
xor
mov
xor
xor
xor
jae
xor
out
xor
xor
xor
xor
xor
inc
shll
xor
scas
xor
shlb
jecxz
call
xor
mov
ss
ss
cmp
loop
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
decl
loop
inc
cmp
loopne
jmp
cmp
jmp
cmp
push
cmp
jl
cmpl
mov
cmp
decl
adc
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
sbb
mov
das
jo,pt
test
std
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
lcall
or
andl
xor
ljmp
xor
xor
xor
jl
mov
mov
xor
xor
xor
xor
pop
xor
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
pushl
push
xor
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
mov
sbb
xor
aaa
ss
clc
loop
cmp
cmp
jmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fwait
adc
cmp
xchg
aas
inc
aas
pop
aas
ja
icebp
and
ret
push
or
cmp
pop
jg
pop
xor
push
xor
xor
xor
xor
xor
loopne
inc
lock
xor
ret
xor
xor
jg
lcall
hlt
xor
xor
xor
test
mov
mov
nop
xor
cwtl
xor
lock
clc
xor
cmp
fistpll
lods
cmp
cmp
cmp
cmp
cmp
cmp
inc
pop
cmp
cmp
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
test
adc
xchg
adc
jmp
or
sub
das
cmp
ds
fidivrl
clc
add
jmp
xor
xor
ljmp
mov
ss
ss
xchg
cmp
cmp
mov
mov
ret
iret
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
pop
pop
lcall
xchg
xor
adc
add
jmp
mov
scas
xor
xor
jmp
shll
or
and
xor
xor
mov
xor
aas
cli
ljmp
shlb
ss
add
lcall
lods
decl
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
aaa
cld
ljmp
outsl
aaa
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
call
std
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
icebp
mov
cs
cmp
dec
cmp
popa
cmp
cmpb
cmp
cmp
cmp
cmp
or
cmp
cmp
push
cltd
sbb
cmp
cmp
cmp
bnd
adc
ljmp
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
pop
cmp
scas
clc
decl
cmp
mov
jp
jg
cwtl
ds
ds
jecxz,pt
out
cmp
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
xlat
aaa
dec
or
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
jmp
xor
xor
xor
xor
xor
mov
xor
scas
dec
xor
xor
xor
xor
xor
mov
jl
cmpsl
xor
sbb
xor
xor
scas
jno
xchg
xor
xor
xor
cmpsb
cli
pushl
pushl
xor
xor
mov
ret
aaa
xchg
aaa
fwait
call
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivrl
aaa
cmp
cmp
cmp
mov
sbb
pop
fimull
nop
cmp
cmp
cmp
test
out
sbb
xor
or
call
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
incl
ja
js
jge
cmp
cmp
cmp
cmp
cmp
inc
add
lock
mov
pop
mov
cmp
ja
lahf
xor
xchg
aas
push
mov
pop
pop
inc
xor
mov
xor
xor
push
pushl
push
ss
fiadds
aaa
ret
mov
jmp
repnz
or
cmp
call
cmp
jae
jge
mov
cmp
cmp
jbe
xchg
cmp
mov
cmp
mov
and
cmp
cmp
mov
ds
aas
jne
mov
or
pushl
jg
mov
fwait
xor
xor
dec
or
loope
clc
or
sub
aas
xor
divl
pop
xor
mov
loop
ss
dec
ss
outsb
idiv
sbb
call
ss
in
and
cmp
cmp
cmp
inc
add
mov
sbb
sub
push
cmp
pop
push
imul
cmp
test
stos
sarb
mov
cmp
dec
cmp
or
jae
aam
fnstsw
push
cmp
jmp
cmp
jp
mov
cmp
cmp
pop
sarb
inc
cmp
lock
mov
and
push
addb
mov
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
loope
rol
cmp
clc
xchg
xor
xor
pop
xor
xor
cmp
or
cmc
pushl
xor
xor
mov
xor
push
push
jg
divl
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
pop
std
pop
loopne
cli
aaa
mov
cmp
mov
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
jg
adc
jbe
cmpl
cmp
cmp
adc
cmp
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rol
pop
aas
icebp
push
sub
jne
adc
xor
outsl
loop
xor
xor
jg
xchg
xor
xor
xor
dec
mov
stos
sbb
xor
xor
ljmp
sbb
adc
sbb
sbb
sub
sub
nop
cmp
cwtl
cmp
test
enter
sarb
aam
in
ljmp
push
out
xor
aaa
lock
inc
xor
xor
orl
jl
mov
pushf
xor
mov
mov
xor
xor
shrb
and
and
sub
sub
mov
sarb
inc
cmp
cmp
cmp
and
rcrb
cmp
adcb
push
fidivs
cmp
cmp
sub
mov
ret
push
rcr
cmp
mov
cmp
cmp
jge
fdivl
lock
dec
cld
mov
add
or
adc
pshufw
and
sub
sub
xor
cmp
aas
clc
jecxz
cmp
cmp
pop
cmp
cmp
cld
add
push
cmp
cmp
cs
mov
nop
xchg
cwtl
mov
decl
sub
xor
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
loope
ret
sub
aas
fdivrs
loopne
clc
jbe
push
sti
adcb
pop
bound
mov
xor
inc
xor
xor
cwtl
xor
xor
xor
xor
mov
cmp
ret
rorl
mov
jb
inc
xor
cmpb
out
pusha
cmpsb
and
fimuls
xor
dec
mov
mov
sahf
int3
shlb
aam
fdivs
fdivr
aas
std
ss
in
call
ss
ss
add
add
or
or
adc
adc
hlt
mov
aaa
and
and
sub
sub
xor
cmp
cmp
lcall
std
aaa
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
daa
mov
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
pop
loope
jl
aaa
movsb
aaa
test
mov
mov
mov
cld
pushl
les
enter
shlb
aam
fdivs
fcompl
in
test
aaa
hlt
xor
aaa
hlt
sub
push
loop
cmp
adc
adc
sbb
cmp
into
ret
fdivrl
call
inc
js
mov
cmp
cmp
cmp
cld
in
call
cmp
sub
cmp
cmp
cmp
cmp
push
cmp
push
stos
jl
test
mov
clc
cmp
test
lods
cmp
mov
cmp
sub
or
sub
push
in
aas
in
aas
push
mov
dec
pop
idivb
or
or
jg
mov
mov
ljmp
mov
cmc
push
and
mov
or
xchg
pop
pop
push
out
add
xor
push
lret
push
pop
or
xor
inc
add
add
push
imul
jge
dec
andl
push
sarb
daa
out
sarb
out
dec
or
xchg
pop
pop
push
out
enter
push
or
addb
data16
test
push
pop
testl
repz
xor
mov
imul
pushf
dec
fcmovb
inc
out
rolb
add
out
xchg
adc
or
stos
dec
add
icebp
and
out
shrl
inc
imul
xor
ss
das
hlt
loope
sub
or
lea
orb
jne
xchg
je
sbb
fisubl
bound
or
sbb
mov
or
lock
dec
jle
pop
mov
enter
pop
adc
ss
push
sub
sti
inc
daa
pop
sbb
jne
push
mov
outsb
and
mov
push
in
inc
xchg
cmp
or
mov
enter
lret
dec
adc
loopne
mov
cmp
mov
das
inc
pop
pop
jb
xor
dec
ret
pushl
insb
pushf
loopne
pop
cmp
cld
push
and
pop
roll
rcrb
andb
xlat
xor
adc
popa
push
xchg
in
add
sub
jns
xlat
and
sub
inc
mov
cmp
add
push
or
sbb
xchg
cmpsb
adc
out
fidivs
call
sub
xchg
sub
jp
add
push
pop
xchg
pushf
or
dec
mov
or
insb
outsb
and
push
sti
jge
or
jb
lea
call
push
mov
push
lea
fisttpl
inc
add
push
popf
pop
add
mov
add
movsb
xor
and
and
push
adc
je
inc
xor
sub
pop
outsb
push
push
or
js
or
fcmovne
lods
inc
lea
push
push
pop
jb
cmpb
pusha
push
nop
aad
jp
sbb
in
adc
add
pop
inc
push
push
call
inc
in
xor
or
xchg
add
mov
push
mov
mov
mov
lahf
fidivs
xchg
andb
call
cmp
sbb
cmp
sbb
xor
in
inc
fwait
jge
cmp
sbb
inc
loope
sarl
lock
jne
mov
ja
inc
and
movb
das
lret
jmp
lret
pop
pop
cmpsl
lahf
push
sbb
push
dec
sti
mov
sub
and
sub
pop
arpl
or
lock
and
adc
orb
add
push
xchg
jne
jg
and
test
fmuls
push
adc
dec
sbb
inc
and
pop
push
adc
pusha
xor
or
push
cmp
xchg
or
xor
xchg
ret
fisttpll
lahf
repnz
pop
mov
nop
rolb
add
pop
rclb
push
xchg
iret
xchg
or
je
fstpt
and
cli
lcall
fs
enter
adc
insl
push
xchg
jo
popf
jnp
inc
test
gs
and
pusha
loopne
sbb
outsb
movsb
mov
push
rolb
push
and
push
js
xchg
pop
ret
adc
cmp
push
rorb
push
mov
push
sbb
add
cmpsb
in
inc
mov
and
or
push
imul
or
or
xchg
ficoms
inc
lods
xchg
pop
decl
lahf
cmpsb
push
lahf
add
or
out
adc
dec
add
test
sbb
jl
adc
push
adc
dec
push
cmp
push
pop
call
pop
add
xor
adc
or
mov
push
pop
xor
inc
lods
dec
repz
adc
mov
mov
fwait
push
ja
inc
stos
adc
dec
cwtl
rorb
stc
xchg
xor
jnp
enter
or
mov
xor
jnp
add
and
add
or
inc
pop
mov
push
sub
fmuls
pop
divl
xchg
cmpsb
xchg
mov
lods
xlat
push
sbb
cwtl
add
out
mov
pop
mov
push
loopne
add
mov
adc
dec
and
int
es
lods
or
or
rclb
push
cmp
jmp
dec
add
pop
push
in
testl
rcll
mov
insb
daa
ret
inc
call
std
ret
push
adc
mov
or
rcrl
sbb
sarl
mov
bound
ss
sbbb
fisubrl
pop
outsl
sbb
icebp
push
shrw
int3
mov
push
outsl
mov
xor
or
gs
outsl
ror
sbb
xlat
sub
aaa
mov
outsl
xor
mov
or
outsl
cmp
xor
cmp
popa
leave
lds
or
fildl
and
dec
or
lea
adc
mov
pop
enter
push
mov
bound
rorl
cmpsb
adc
mov
sub
int
movsl
repnz
or
push
nop
inc
add
cmc
ret
push
arpl
jnp
fistpl
dec
push
mov
or
dec
icebp
push
pop
out
sub
jp
dec
cmpl
mov
in
add
push
xor
out
addl
pop
aaa
xor
test
adcl
mov
inc
or
sub
outsb
mov
or
sub
subb
jo
mov
pop
clc
sbb
inc
jmp
pop
pop
cmp
pop
out
add
fs
push
xchg
mov
scas
xchg
and
notb
and
mov
mov
sbb
out
scas
outsb
orb
sub
mov
test
pop
das
jo
pop
sub
inc
xchg
sbb
dec
imul
stos
sub
jge
cmp
addl
or
jne
xchg
jne
or
fst
xchg
or
adc
jno
xor
sbb
outsl
aas
add
call
call
gs
sbb
mov
lcall
mul
push
adc
sbb
call
mov
push
dec
scas
fcoml
dec
mov
add
jl
call
xchg
in
or
hlt
fidivrs
orb
dec
jo
push
call
dec
pop
negl
or
add
pop
inc
pop
test
pop
ret
call
ds
xchg
es
or
subb
incb
popa
or
dec
clc
movl
add
or
adc
mov
add
inc
adc
jbe
inc
shrl
icebp
sub
inc
push
mov
aaa
inc
sbb
adc
sub
mov
ss
sbb
movsl
and
test
loop
and
sbb
adc
addl
dec
mov
or
or
lret
xor
pop
jle
mov
sbb
je
pop
and
and
or
cmp
add
xchg
or
inc
mov
scas
add
mov
cmp
out
sub
cmp
xor
pop
add
dec
or
dec
mov
jge
mov
xorb
cmpsl
and
ds
gs
pusha
pop
inc
sub
fisttpll
pop
inc
mov
pop
push
mov
ret
or
add
addr16
shld
jo
mov
fnstcw
pop
mov
mov
insb
lret
xchg
enter
mov
jae
bound
pop
pop
xchg
pop
dec
pop
mov
pop
xchg
and
cmp
nop
nop
push
adc
rolb
hlt
pop
push
pop
sub
mov
mov
fidivrs
push
pop
push
dec
or
jns
inc
cmp
or
sbb
jmp
jns
movsb
mov
sub
sti
pop
int3
and
pop
out
fstp
and
pop
nop
xor
push
push
jl
subl
push
jo
pop
push
mov
mov
repz
cmp
fadds
loopne
lock
rolb
push
pop
out
sbb
inc
sub
xor
inc
add
sub
jmp
out
inc
mov
ds
xchg
cwtl
sbb
stc
inc
inc
pop
test
pop
push
daa
inc
inc
push
and
sbb
sbb
clc
hlt
or
push
and
cmp
inc
jns
mov
or
pop
out
movsb
inc
popa
rorl
jo
pusha
mov
pop
or
sub
jb
hlt
push
hlt
test
dec
push
push
pop
pop
push
cmpsl
add
push
add
mov
adc
inc
cmp
enter
sub
nop
cmpsb
jns
sub
push
xchg
add
dec
rcrl
sub
sub
and
sub
sub
sub
sub
sbb
jae
sub
sub
sub
add
xchg
sub
lcall
sub
cmpsb
imul
rcll
sub
sub
sub
dec
testb
sub
add
xchg
mov
sbb
and
test
ret
sbb
add
sbb
jns
fadds
fs
loopne
enter
mov
cmp
inc
js
inc
jmp
pop
stc
push
scas
or
push
lret
ret
lret
or
sbb
mov
inc
outsb
sub
mov
frstor
call
cmpsl
or
push
jge
bound
sub
and
sub
mov
mov
ja
inc
adc
inc
mov
adc
es
in
sub
push
in
pop
hlt
ds
shl
mov
inc
iret
push
xchg
in
mov
adc
rorb
inc
lds
inc
mov
mov
adc
push
sub
push
je
aas
and
sahf
sub
xchg
mov
push
je
xor
inc
xor
filds
mov
inc
cmp
or
jae
inc
push
jmp
out
push
mov
nop
shrl
ret
call
out
add
adcb
test
lcall
adc
movsl
fdivp
loopne
inc
ret
jo
les
je
adc
add
leave
cmp
jns
push
or
mov
dec
jns
mov
sub
pop
add
mov
lret
lods
ds
js
roll
fdivl
xchg
jns
xorb
mov
dec
pushf
rorb
outsb
cwtl
jns
sbb
mov
xchg
mov
mov
sbb
jno
jns
sbb
xchg
js
into
daa
jns
and
dec
sbb
and
inc
andb
mov
add
inc
ret
xchg
jns
ljmp
icebp
sbb
and
jns
sub
or
sub
mov
aam
popf
rorb
fbstp
aad
and
xchg
fidivrs
adc
inc
movsb
addr16
jmp
outsb
addl
cmpsl
addr16
addr16
sub
test
sbbb
addb
sbb
mov
dec
gs
or
adc
orl
mov
xor
clc
or
add
movsb
push
fistpll
sbb
pop
mov
aam
mov
pop
lcall
ja
mov
push
sbb
and
les
add
inc
andl
inc
addr16
adc
jbe
xchg
cmp
fiadds
ja
addr16
dec
mov
mov
and
inc
xchg
daa
loopne
adc
and
inc
xor
adc
lret
int
xchg
nop
fisttpl
aaa
and
xchg
stos
mov
mov
mov
mov
inc
mov
xor
dec
call
test
lret
adc
sbb
mov
test
inc
daa
mov
rcrl
das
push
nop
jne
and
addr16
mov
or
dec
movsb
sbb
cmp
jnp
dec
sti
add
and
mov
mov
mov
and
je
xor
pop
sbb
outsb
xorb
xchg
pop
push
mov
fwait
mov
xor
sub
iret
clc
pusha
push
push
movsb
add
xor
jb
mov
mov
flds
inc
mov
or
xorb
movsb
mov
je
movsl
data16
adc
jo
mov
pop
mov
sbb
adc
dec
nop
or
mov
dec
ret
fwait
pushf
pop
push
ds
lds
mov
sub
negl
sub
not
mov
pusha
xorb
stc
loopne
js
mov
mov
dec
nop
mov
cltd
sbb
and
and
push
cmp
and
and
cmp
and
sub
pop
xorb
dec
and
mov
pop
pushf
and
sahf
mov
lock
dec
dec
mov
jo
std
mov
cmp
lds
into
enter
jno
xor
mov
scas
call
jmp
movsb
jne
lea
call
es
std
adc
mov
mov
bt
jo
movsb
rcrb
aam
jne
enter
mov
and
push
imul
aad
adc
sbb
dec
cmc
xchg
mov
cmp
inc
nop
ss
addr16
mov
aad
lock
jl
fs
xor
pop
inc
stos
add
pop
addr16
outsl
call
hlt
out
inc
pop
push
sbb
mov
lahf
enter
and
push
aad
cld
xchg
in
outsl
and
xor
cmpsb
lahf
sbb
dec
adc
jb
mov
repnz
ficoms
add
mov
repnz
mov
sarb
call
and
das
mov
hlt
or
and
sub
fwait
in
sbb
fisttpll
adc
lods
mov
shll
xorb
cmp
mov
dec
push
test
ret
pop
enter
dec
jnp
les
lock
mov
dec
inc
out
dec
lock
add
nop
pushf
test
push
lret
push
jp
push
push
cmp
pop
fdivl
leave
and
popa
pusha
mov
sbbl
mov
sbb
or
stc
cmp
push
jp
pop
hlt
push
dec
loope
cmpb
loopne
in
add
jnp
das
shl
dec
and
jnp
jb
xlat
leave
sti
loopne
out
je
sub
mov
xchg
fsubl
rclb
pop
outsb
pop
xchg
nop
pop
or
push
mov
xchg
xchg
xchg
or
mov
inc
pavgb
mov
rcrl
stc
loopne
clc
adc
das
sbb
fdivrp
adc
mov
ret
sbb
jne
stc
push
out
daa
xor
stc
mov
cs
push
fadds
adc
fcoml
push
stc
and
or
mov
stc
inc
sbb
mov
in
dec
push
call
jo
stc
xchg
call
je
adc
fstp
cld
mov
adc
leave
sub
test
xlat
mov
mov
imul
ljmp
sbb
jmp
nop
daa
cmp
icebp
fcoml
movsl
sub
xor
or
ret
pop
jmp
jmp
jne
out
mov
aaa
jne
xor
dec
fidivs
lods
jl
add
fcmovnu
sbb
call
inc
inc
call
cmp
mov
icebp
int3
dec
add
inc
cld
test
mov
sbb
in
add
iret
aam
scas
in
outsl
adc
inc
adc
and
call
sarl
insb
xor
in
sub
sbb
cmp
push
lret
fadds
repnz
mov
ret
call
dec
lcall
je
and
lret
jge
and
paddb
ret
ds
shrb
xchg
js
jl
sbbb
push
test
jl
push
add
andb
mov
push
and
rol
pop
leave
scas
lock
mov
sub
fnsave
jge
shl
sub
pop
jl
mov
lods
xchg
shll
adc
shrl
cli
sub
pushf
push
out
imul
adc
or
enter
jnp
dec
jecxz
shll
push
jmp
nop
out
sbb
cmp
les
xchg
adc
or
or
xchg
sub
inc
pop
cmp
test
pop
pusha
xor
adc
sbb
or
and
mov
leave
add
xchg
pop
jecxz
cmp
adc
push
fsubrs
orl
lahf
xor
pop
rcl
xor
jb
movsl
sub
sbb
hlt
xchg
mov
daa
mov
cmp
mov
ret
in
loope
adc
adc
xor
jo
adc
xor
jo
adc
adc
add
cmp
aam
fptan
in
leave
sub
in
roll
fldenv
dec
dec
push
pop
rcrl
daa
xor
fst
xorb
insb
out
or
movsl
shrb
mov
jmp
xchg
add
pop
dec
loopne
movsb
adcb
sbb
dec
push
pop
adc
mov
sub
jp
add
adc
mov
fiadds
push
dec
aaa
insl
fs
das
mov
dec
adc
push
adc
imul
xchg
xchg
push
inc
adc
adc
add
sub
adc
adc
xchg
outsb
and
or
rcl
sub
sub
sub
pop
sbb
fcoms
mov
mov
sub
mov
out
sub
shrb
out
int3
or
fcoml
bound
fidivs
dec
inc
mov
push
mov
jne
dec
add
push
ret
jb
imull
dec
sbbb
imul
and
push
ret
push
jle
inc
aad
dec
ss
in
adc
dec
repz
dec
inc
add
out
in
dec
or
fisubrl
nop
je
adc
lret
dec
sarb
pop
dec
mov
imul
das
lcall
ffreep
jnp
insb
push
add
dec
dec
out
mov
lds
xor
lds
divb
lds
jmp
lea
sbb
insl
sub
push
shlb
pop
gs
lret
or
pop
adc
dec
sahf
in
xlat
push
aaa
pop
inc
loopne
jno,pn
pop
cmp
mov
sbb
pop
xor
xchg
push
xor
frstor
aam
ljmp
sbb
lods
call
test
aam
leave
or
cmpsb
outsb
push
ja
nop
pop
push
dec
and
jp
xorl
push
sub
xchg
in
outsl
push
sub
push
pop
mov
xchg
sub
stos
add
loope
sbb
cmp
ret
push
gs
inc
lret
sbbl
pop
or
or
mov
aam
ljmp
mov
pop
enter
push
jne
pop
sarb
aaa
out
jns
adc
jno
sbb
aaa
pop
hlt
aam
lcall
shr
cmc
add
and
pop
push
outsl
mov
loopne
sub
and
pop
mov
pop
enter
pop
test
jle
sbb
mov
iret
rol
add
pop
xchg
sbb
and
insb
pop
sub
sbb
jmp
adc
ret
inc
jecxz
in
dec
leave
in
loopne
loopne
jno
dec
xchg
leave
add
or
int3
stc
imul
out
dec
repnz
or
repnz
bound
repnz
dec
mov
xor
sub
adc
or
lock
call
mov
pop
pop
enter
mov
pop
pop
pop
test
mov
mov
mov
and
cmp
push
pop
mov
sbb
dec
mov
enter
sub
in
pop
cmp
mov
jb
sbbl
fstpt
dec
push
lds
sbb
and
mov
mov
cmpb
cmp
inc
pop
mov
sbbl
ds
push
jb
mov
and
cmp
add
stc
mov
sbb
jecxz
fdivrs
jb
mov
in
pop
cmp
mov
cmpb
dec
push
pop
mov
sbb
and
cmp
test
fcmovne
das
inc
or
mov
lcall
pop
orb
or
jle
mov
or
inc
cld
xchg
mov
dec
lcall
add
sbb
imul
data16
or
and
inc
dec
lcall
movsb
sbb
imul
xchg
out
stc
mov
inc
dec
lcall
cmp
cs
ret
mov
or
adc
adcl
sub
lock
add
adc
mov
inc
into
aad
jo
and
push
dec
push
rcll
and
jecxz
in
xchg
test
xor
sub
sub
and
repnz
hlt
adc
stos
and
xor
cltd
jno
pop
ret
shlb
push
mov
hlt
imul
test
mov
icebp
inc
xchg
lea
xchg
rcrl
inc
add
cmpsl
lods
push
add
xor
jg
mov
xor
sub
aam
mov
mov
imul
imul
movsb
scas
test
scas
fistpl
sub
cmp
scas
xchg
xchg
int3
lcall
scas
test
rorb
jo
add
add
shlb
hlt
hlt
scas
adc
mov
movsb
and
sub
js
mov
scas
ljmp
xchg
push
inc
jl
dec
movsb
stos
scas
mov
cmp
xor
scas
fistpll
popf
loop
movsl
scas
leave
rcr
jo
sarb
scas
mov
sub
push
popf
mov
jle
and
outsb
pop
pop
mov
and
and
xor
dec
scas
int
mov
inc
or
popf
mov
out
dec
pop
push
scas
nop
int3
adcb
inc
jmp
mov
outsb
and
xchg
xchg
or
cs
mov
scas
and
scas
imul
imul
movsl
icebp
add
mov
dec
pop
scas
loopne
mov
sub
lret
fimull
ja
scas
mov
shrl
dec
scas
sub
scas
mov
ds
push
js
sub
into
xchg
xchg
outsb
and
sbb
jbe
jp
je
or
add
inc
loopne
jae
push
inc
sbb
scas
sub
mov
cmp
ljmp
movsb
movsl
xlat
inc
loopw
dec
pop
loop
and
fsubs
or
sub
clc
push
call
imul
call
cmp
scas
xchg
or
cmp
cmpb
sub
movsl
and
sar
scas
bound
ficoms
inc
sbb
es
movsl
cmp
cmp
fisubrs
out
mov
xor
adc
pop
jo
pushf
scas
mov
sbb
movsb
and
lcall
pop
pushf
scas
fdivl
call
or
jne
rcrb
scas
pop
jo
mov
lods
scas
sub
aas
imul
rorl
ret
xchg
pop
cmpsb
push
xor
das
and
int
movsb
movsl
jmp
sbb
idiv
or
xor
shrb
daa
sub
mov
fidivs
sahf
scas
mov
sbb
in
push
xor
daa
sub
std
movsb
movsl
leave
scas
pop
mov
scas
xchg
jne
xchg
push
cmp
xlat
dec
popa
ja
cs
jbe
daa
sub
sbb
inc
test
rcl
aam
stos
jg
pop
add
jnp
mov
sub
dec
xchg
xchg
jge
xor
sbb
adcl
xor
imul
nop
or
jecxz
scas
push
cmp
inc
scas
cmc
mov
scas
lds
xchg
nop
movsb
scas
imul
sub
cmp
jo
xchg
inc
inc
scas
xchg
xchg
push
pop
push
inc
dec
dec
jbe
scas
clc
aad
xchg
xchg
rcl
scas
sahf
out
cmpsb
adcb
daa
sub
pop
sbb
popa
negl
ja
and
jb
scas
addr16
std
mov
mov
xchg
mov
scas
jp
dec
dec
out
and
xchg
xchg
push
xlat
scas
pop
sahf
dec
out
test
shrb
scas
fcompl
dec
push
xor
rcll
lcall
sbb
pushf
mov
jp
shrb
jne
mov
adcb
daa
sub
pop
sbb
loopne
ret
shrb
xor
dec
mov
loop
shrb
or
mov
adcb
sbbb
jmp
scas
addr16
mov
loope
push
mov
std
xor
rclb
sub
scas
pop
push
or
fsubr
hlt
cmp
dec
scas
jg
jo
popf
mov
xchg
rorb
lret
and
je
cmpsl
jns
cmp
cmpsl
push
test
imul
popa
mov
xchg
enter
int
into
bswap
cmp
adc
out
xor
popa
xchg
andb
inc
sub
fs
push
scas
rorl
jnp
pop
and
push
mov
pop
scas
rolb
int3
mov
pusha
jge
mov
adc
pop
fwait
enter
mov
mov
data16
out
ss
stos
mov
add
daa
lcall
mov
or
dec
or
adc
in
mov
xor
inc
loopne
sub
xchg
mov
add
cmpsl
xchg
aam
mov
loopne
jle
pop
xchg
and
add
mov
adc
add
stc
dec
fnstcw
cmpsb
xchg
cmpsb
inc
lahf
shrl
bound
in
js
mov
and
mov
fidivrl
push
mov
iret
sarl
xor
fs
cmp
repz
mov
into
imul
test
jns
ds
bound
mov
sahf
out
shl
clc
push
stos
repz
rcll
and
push
insb
iret
repz
jle
sahf
stos
mov
cmp
call
jns
out
inc
push
data16
ror
mov
hlt
add
sbb
lock
push
push
jge
xor
adc
adc
push
int
xor
add
mov
add
mov
dec
enter
aam
movsb
sbb
push
fcoms
sbb
aad
outsb
cmp
jl
lcall
mov
mov
aam
je
adc
sub
jl
jecxz
adc
idivl
rorl
pusha
or
adc
jnp
sub
rorb
adc
iret
repz
xchg
sbb
add
mov
xchg
and
rolb
push
push
pop
sahf
enter
movsl
stc
sahf
push
and
jns
repz
xor
iret
push
cld
adc
xchg
popa
adc
lock
shlb
push
push
xchg
add
daa
test
adcb
or
add
out
inc
jmp
xchg
xor
dec
inc
sahf
out
sahf
xor
sbb
or
cmp
sarl
icebp
in
in
repz
repz
aam
int3
iret
repz
enter
mov
cmp
repz
movsb
mov
iret
repz
nop
mov
iret
cmpb
insb
cmp
repz
fs
pop
pop
repz
repz
push
dec
dec
inc
iret
repz
inc
xor
and
sahf
out
lcall
xor
out
pop
cmp
cld
fdiv
cmp
repz
iret
repz
pop
dec
and
adc
sahf
out
ds
les
jns
add
push
nop
repz
fs
lea
push
sbb
add
or
out
mov
lahf
adc
or
stos
nop
inc
inc
aad
inc
pop
test
nop
add
lret
shlb
ss
cld
push
aaa
xor
mov
add
pop
xor
mov
insb
test
stos
pop
mov
ja
fisttpl
ss
js
dec
inc
cmp
inc
mov
mov
or
ljmp
push
xor
call
inc
xchg
mov
imul
add
pop
jae
jne
ljmp
jecxz
xor
push
push
fwait
mov
jb
sbb
idivb
add
xchg
aad
fdivrl
dec
mov
add
mov
pop
out
push
aam
lock
fsubrs
outsb
inc
add
fisttpl
daa
or
aaa
sbb
lahf
add
push
in
push
jle
xor
pushf
int
pop
push
pop
adc
inc
mov
data16
sbb
push
cmp
enter
into
ja
inc
dec
mov
aas
jb
rclb
and
mov
fsubrs
out
cmp
jge
xor
cmp
cmp
pop
pop
inc
fbstp
inc
cmpsb
inc
aas
dec
adc
dec
sbb
dec
lahf
add
mov
lds
dec
mov
inc
cmp
cmp
fdivs
repnz
xchg
pop
jo
sbb
and
pop
cmp
jg
push
fisttpll
push
dec
rorb
jo
pop
dec
outsb
mov
push
lock
cli
ud0
sbb
gs
pushf
xchg
les
xchg
nop
imul
es
insb
es
pop
popa
fadds
xlat
iret
fwait
loopne
and
aaa
add
xor
jb
jns
inc
xlat
fucomp
push
jb
outsb
pop
neg
insl
cmp
jo
jno
bswap
mov
jno
or
push
hlt
adc
stos
sbb
add
sti
pop
enter
jne
mov
leave
adcb
xchg
je
loop
imul
lahf
jo
cmp
out
stos
sub
and
stc
sbb
mov
gs
push
push
push
arpl
arpl
daa
mov
dec
outsl
and
xorb
pop
rcll
pop
pop
and
sbb
movsb
bound
mov
lahf
mov
sbb
pusha
lret
mov
or
fisttpl
sbb
xchg
pop
test
es
scas
pop
lret
dec
add
cwtl
push
xchg
imul
sub
arpl
sbb
sbb
movsb
add
mov
and
addl
mov
add
mov
lods
lahf
daa
mov
and
inc
push
inc
test
and
bound
adcb
xchg
mov
sub
mov
and
push
mov
aas
push
and
aam
mov
stos
loop
test
mov
xchg
popa
pavgw
shlb
add
jbe
dec
daa
mov
pop
or
dec
dec
mov
sbb
roll
inc
cmp
pushf
dec
pop
mov
repz
rep
test
pushf
xchg
sahf
idivl
mov
pop
jns
out
pop
push
push
dec
dec
out
sahf
out
inc
cmp
xor
out
sahf
xor
sbb
or
out
mov
hlt
call
out
enter
mov
xchg
dec
mov
sahf
out
fiadds
pop
jnp
out
dec
cmp
sbb
cmp
repz
xchg
mov
shl
iret
repz
sahf
out
iret
nop
mov
jo
push
cmp
cmp
cmp
sub
or
cmpsl
stc
clc
xchg
in
enter
sahf
out
test
or
and
dec
add
pop
cmpsl
mov
mov
cmp
enter
mov
stos
or
and
add
push
add
pop
jno
lcall
jo
sbb
leave
fdivs
push
jg
in
pop
enter
pop
or
mov
push
xchg
cs
sbb
push
cmpsl
mov
lods
or
rcr
inc
adc
aas
mov
je
rorl
cmp
or
jecxz
add
nop
icebp
fbld
dec
xor
xor
call
sub
iret
xor
xor
sahf
xor
xor
xor
xor
xor
aaa
fbstp
xor
clc
outsb
sbb
cmp
cmp
cmp
notb
cmp
bound
xchg
xor
mov
decl
cmp
cmp
xchg
mov
cmp
mov
and
pop
lcall
jecxz
data16
aas
fs
imul
aas
jecxz
call
dec
sbb
sub
inc
xor
mov
cmp
push
shl
loope
mov
div
in
jg
xor
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
jecxz
nop
icebp
xor
cli
xor
xor
dec
fisttps
push
test
mov
xchg
xor
xor
adc
sbb
sbb
jmp
jg
xor
xor
xor
xorb
xor
jecxz
in
repnz
ss
xor
xor
xor
xor
xor
fists
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
inc
sbb
xor
xorl
out
push
sbb
aaa
leave
jp
aaa
cmp
insb
cmp
and
xchg
leave
jbe
cmp
sbb
sub
sbb
and
and
sub
xor
jp
mov
incl
mov
repnz
cmp
pop
xchg
aas
dec
cmp
test
pushf
xor
cmp
sbb
filds
dec
cmp
cmp
cmp
inc
idivb
cmp
cmp
sbb
xor
cmp
nop
jbe
cmp
icebp
ljmp
cmp
ds
ds
ds
cmp
dec
xchg
mov
mov
movsl
imul
and
inc
xor
xchg
lock
jle
xor
and
and
lret
mov
aam
fimull
xor
jecxz
popa
cld
xor
cmpsl
repz
maxps
add
test
lret
push
add
clc
dec
mov
mov
aaa
in
decl
xchg
sub
cmp
xor
clc
xchg
js
jle
xchg
xchg
xchg
push
mov
mov
ret
adc
js
into
in
adc
push
xchg
cmp
mul
mov
xchg
jb
cmp
cmp
outsl
xchg
or
push
cmp
jne
fisttps
jnp
subb
cmp
cmp
loope
test
or
clc
outsl
xchg
es
in
jmp
lock
mov
ja
sbb
xchg
xor
jecxz
add
sar
insb
cmp
cmp
cmp
cmp
cmp
sub
ds
decl
sbb
ds
ds
clc
es
adc
and
dec
aas
mov
aas
dec
insb
sbb
pop
fidivl
test
icebp
jo
out
xor
inc
daa
lds
mov
xor
pop
popa
js
xor
xor
xor
shlb
inc
xor
insl
mov
cmpsb
xor
test
cli
xor
ja
mov
int3
loope
xor
ss
ss
aaa
jnp
mov
inc
mov
or
cmp
cld
jo
lea
push
cmp
xchg
cmp
push
ljmp
lcall
icebp
sbb
push
mov
mov
pop
cmp
outsl
sbbl
ss
sub
jno
ja
push
enter
cmp
cmp
cmp
cmp
cmp
cmp
scas
push
mov
ja
cmpb
cltd
cmp
aaa
lret
cmp
cmp
sbbb
sub
lret
call
ret
leave
cmp
inc
outsl
fmull
xor
lock
xor
adc
xor
and
cmp
cmpsb
xor
xor
jecxz
outsl
pop
add
xor
xor
mov
out
or
adc
sbb
das
ss
mov
mov
aaa
pop
mov
push
ss
mov
lret
jg
fdivp
cmp
cmp
cmp
mov
jg
mov
bound
imul
cmp
cmpsb
cmp
cmp
cmp
add
or
cmp
aas
iret
aas
loope
or
add
xor
xor
xor
popa
xor
test
xchg
mov
fbstp
dec
inc
movsl
mov
push
push
aaa
jge
mov
mov
hlt
xor
lcall
jecxz
aaa
gs
cmp
cmp
cmp
cmp
dec
jo
idivb
and
test
fsubp
xor
xor
xor
ss
pop
loopne
out
jle
cmp
fiaddl
inc
cmp
shl
cmp
dec
ljmp
js
xchg
out
mov
xor
enter
adc
and
nop
icebp
xlat
xor
mov
mov
call
les
je
test
fs
adcb
jb
mov
mov
sbb
push
and
add
xlat
popa
aad
adc
stc
int3
mov
xchg
sahf
js
jl
xchg
push
and
mov
leave
sub
jecxz
mov
shlb
dec
int3
xor
leave
sub
loopne
or
call
clc
sub
or
adc
xor
scas
cmp
cmp
inc
xor
sbb
and
push
xor
pop
mov
xor
insb
divb
add
xor
aas
leave
js
movsb
xor
shr
and
shlb
stos
shrb
cld
inc
ja
fdivs
fadd
in
call
cmp
xor
lods
testb
mov
nop
test
mov
add
jbe
xor
jo
mov
xor
ret
push
inc
enter
aam
lock
fmull
xor
xor
enter
sbb
or
pop
pop
sub
mov
inc
lock
inc
xor
insb
scas
xorb
test
push
add
clc
lea
pop
mov
pop
pusha
mov
sbb
xor
mov
mov
loopne
lock
enter
sbb
and
xor
into
sbb
cmp
stos
sbb
aas
subl
pop
aaa
hlt
jb
inc
movsl
mov
cmp
sub
xor
cmp
jmp
sahf
cmp
inc
xor
xor
xor
xor
xor
mov
shr
push
xor
pop
jg
pop
rolb
nop
xchg
cwtl
xor
out
movsb
sbb
out
inc
xor
push
repnz
pushf
sarb
xchg
mov
gs
push
sub
pop
jo
nop
add
mov
and
and
add
cmc
rcll
xor
das
inc
ss
cmpsb
jno
xchg
scas
add
push
cmp
subb
lcall
dec
pop
fdivp
push
jle
das
push
scas
mov
mov
and
loope
bound
dec
dec
sub
into
dec
nop
mov
cmp
mov
mov
mov
lods
jg
jnp
negl
or
sti
xchg
lods
pop
call
pop
imul
shl
inc
push
or
ret
repz
out
pop
push
fcompl
push
push
adc
shll
cld
jo
pushl
dec
sbb
in
dec
cmc
inc
jle
xchg
xchg
mov
lea
sbb
sub
ret
decl
cmp
mov
rcrl
jle
leave
dec
jno
lods
call
inc
cmpsl
cmc
mov
ljmp
fs
mov
push
xchg
xchg
inc
sbb
xchg
daa
icebp
mov
incl
cld
mov
jno
pop
out
bound
pop
or
xchg
mov
mov
push
dec
pushf
add
loopne
add
out
fcomip
dec
dec
in
push
xchg
push
icebp
in
mov
and
dec
or
daa
jmp
add
mov
lods
pop
out
int3
lea
outsb
shl
mov
pop
inc
or
dec
mov
push
mov
arpl
jge
lcall
xchg
jecxz
ja
and
mov
mov
or
sub
das
push
cwtl
xchg
sahf
pop
cmc
sub
dec
xchg
mov
mov
jns
pusha
cmp
jo
std
jbe
in
xor
ljmp
pushf
and
es
cmp
movsb
insb
pop
inc
dec
call
xchg
mov
fs
shrb
jge
inc
insb
adc
pushl
clc
es
or
cs
daa
gs
nop
in
lock
je
int3
out
int
call
lret
fistl
js
pop
out
test
scas
pop
mov
and
ret
jecxz
call
pop
jne
push
sti
int3
inc
test
xchg
xorb
aad
nop
imul
mov
dec
icebp
lcall
add
clc
leave
lds
adc
sbb
and
cmp
sar
lcall
fmuls
mov
jecxz
fsubs
int3
ret
popf
mov
mov
mov
decl
adc
dec
mov
mov
sbb
adc
fisubl
jmp
stos
jae
aad
mov
add
push
xorb
xor
mov
add
mov
rcr
out
call
jecxz
ret
roll
push
jnp
scas
jge
out
and
and
push
scas
cmp
xor
push
pushf
sbb
cli
mov
jae
flds
and
xor
mov
inc
repnz
pop
or
enter
dec
adc
outsl
test
ffreep
incl
fmull
xchg
pop
cmp
in
jo
testl
rol
cmp
mul
outsl
scas
out
aad
jns
jmp
inc
sbb
daa
or
jb
pop
ret
xchg
lcall
pop
jno
call
lods
rolb
cmp
test
sbb
ja
cmpl
inc
dec
out
add
cmp
inc
xchg
inc
loope
dec
shlb
outsb
sub
mov
jmp
imul
jne
jge
ret
sbb
xchg
icebp
gs
adc
mov
les
sbb
push
lock
fstl
push
in
push
mov
dec
cmp
pop
or
push
mov
sbb
push
ja
daa
popa
sbb
mov
xchg
cmp
jae
mov
loop
dec
add
adc
xor
mov
or
jle
xor
lret
ds
jge
xchg
test
push
jg
call
inc
imul
adc
aaa
jbe
outsl
clc
call
out
mov
and
dec
push
pushf
pusha
hlt
mov
arpl
mov
inc
jmp
pushf
cld
fildl
sub
pushf
pop
js
mov
data16
lock
call
inc
adc
xor
pop
lcall
xor
cmc
sti
sahf
adc
mov
pushl
mov
cmp
js
xchg
xchg
leave
hlt
stc
lods
bound
in
pop
pop
icebp
ja
push
outsb
push
orb
cmp
inc
inc
adc
ljmp
clc
insb
test
adc
inc
mov
push
jo
mov
xchg
xchg
cmpsl
sti
dec
out
jb
jmp
int3
jge
push
loop
pop
shlb
pop
cmp
ud2
cltd
mov
rcrb
push
add
push
jo
loope
xchg
addl
dec
lahf
jo
pusha
cmp
pop
xchg
pop
mov
pop
loopne
ljmp
jnp
cmpsl
mov
data16
jle
movsb
pop
mov
ljmp
hlt
pop
sti
addr16
fnsave
mov
push
dec
aam
dec
mov
dec
sti
cmpsl
lcall
push
pop
into
pop
les
scas
push
mov
dec
or
cwtl
arpl
lods
dec
outsb
xor
push
xor
xchg
fsub
movb
mov
hlt
jl
sub
call
inc
lahf
and
fwait
jno
gs
xlat
nop
jo
pop
insb
popf
sbb
xor
push
cmc
lods
add
push
pop
jg
out
clc
divb
aaa
ljmp
sbb
andl
lock
loopne
fnstsw
aad
xlat
incl
loop
or
xor
insl
iret
stc
adc
dec
test
lea
aad
xlat
call
lahf
inc
jnp
push
xchg
inc
xor
mov
ficompl
pop
mov
clc
js
sbb
lock
jg
push
inc
fldenv
push
aam
adc
movsl
push
mul
cmpl
cmp
mov
and
add
fs
push
int
add
roll
movsl
push
push
popf
lcall
cltd
mov
les
aad
push
jbe
or
ds
add
pushl
adc
loope
and
mov
and
orb
add
xchg
mov
jne
sti
xor
cmp
xchg
clc
dec
cli
jae
pop
loopne
aas
cmp
repnz
sar
out
cli
shl
cmp
add
lea
ret
cmpsl
push
dec
push
nop
imul
xor
jmp
repnz
dec
pop
lds
sub
add
testb
xchg
out
inc
or
pop
cmp
mov
shll
repnz
js
cld
leave
mov
test
xchg
push
jmp
xchg
inc
mull
addr16
xchg
add
aas
rorl
fldenv
incl
loope
mov
mov
ret
pop
adc
xorb
das
cli
xchg
pushl
fcom
inc
pushf
pushf
push
xchg
pop
pop
sarl
or
add
mov
gs
stos
adc
cli
rcrb
add
xor
add
xlat
or
lcall
xchg
movsb
scas
and
icebp
incl
addl
inc
xchg
pop
xor
orl
movsb
out
inc
scas
sub
dec
ljmp
stos
cmpb
nop
push
push
je
jp
push
movsl
mov
inc
mov
jo
fcomip
push
jo,pn
hlt
pop
xchg
cmp
mov
in
push
lahf
pop
scas
jl
mov
repnz
incl
clc
into
sbb
in
push
imul
sub
int3
enter
decl
jnp
jb
outsb
sub
cmp
leave
ljmp
inc
push
je
dec
mov
scas
cli
pop
jno
lods
and
repz
mov
notl
mov
aad
lock
ljmp
inc
fisttps
xor
mov
jne
lret
jb
push
decl
insb
fisubl
movsb
sub
inc
outsb
pop
and
cmpsb
cs
repz
sbb
dec
popa
jmp
inc
or
scas
das
jo
or
jno
or
inc
mov
jns
fucomi
aam
mov
call
sub
sbb
in
aaa
ds
sarb
shlb
pushf
lea
daa
rolb
aaa
cld
pushl
aaa
pop
mov
call
mov
sbb
stc
ljmp
in
sti
or
insl
or
fwait
cmc
mov
xlat
pop
int3
mov
into
mov
fwait
or
sbb
test
or
cmc
and
test
lock
test
xchg
dec
cmp
dec
lcall
push
loopne
aas
inc
fcomi
sub
xor
and
push
es
into
jle
pop
orb
lds
shlb
out
jecxz
cli
je
out
aas
jl
je
sbb
pushl
cmp
push
ret
sti
insb
cltd
in
mov
jo
adc
leave
xchg
push
mov
rolb
dec
test
fwait
sbb
push
arpl
sar
pop
cmp
xorb
xor
xor
out
inc
jmp
or
jbe
jg
in
mov
push
ret
sti
sbb
imul
incl
pop
insb
les
jmp
mov
xchg
je
cli
or
mov
mov
dec
adc
fwait
ljmp
pusha
mov
fs
cmpsl
loope
push
fs
mov
lods
adc
jb
ljmp
sbb
test
jge
xchg
int
xor
dec
xor
and
jmp
decl
sbb
out
repz
pop
into
xchg
js
ljmp
je
jno
cmp
sub
pushf
aam
mov
fucomi
jl
call
fucom
jb
pop
call
pop
xor
test
aaa
pop
dec
add
lret
ret
cld
jmp
pop
cmp
jb
in
mov
xor
pushl
cltd
cmp
idivl
and
cmp
adc
lahf
jno
stos
lret
sahf
xchg
ljmp
je
or
mov
push
add
inc
jp
mov
push
pop
jle
jo
incl
sub
mov
mov
inc
rclb
ljmp
inc
jnp
sbb
popf
mov
lcall
sbb
xor
bound
rorb
sbb
add
inc
loopne
stc
pushl
xor
jp
lods
jo
test
cltd
cmp
popf
ljmp
test
cmp
pushf
lahf
lret
or
mov
sarl
push
fcom
outsb
out
cmp
dec
neg
ss
jmp
and
in
cmpsl
adc
cli
ret
cmp
and
bound
fisttps
aas
cs
addr16
and
call
dec
sbb
std
push
cmpl
imul
sub
dec
lock
cltd
inc
or
call
insl
sub
daa
std
sbb
rcl
call
leave
pushf
jmp
mov
cld
dec
push
xor
mov
shl
hlt
repnz
ljmp
xor
or
xchg
mov
cmp
hlt
lock
mov
call
mov
jae
push
sub
adc
rolb
push
in
jb
cmpsb
lcall
inc
addl
mov
ja
cmp
push
sbb
in
in
mov
es
jne
inc
popa
pop
sbb
jmp
cmc
cmpsl
sub
fisubrs
enter
jbe
ret
jg
shlb
cld
cmpb
xchg
add
jge
push
and
ljmp
inc
aad
incl
jno
mov
mov
pop
jmp
popa
ja
push
pop
sub
jg
add
int3
out
jne
std
loope
xchg
pop
push
cli
sub
imul
mov
xchg
paddsw
call
push
insb
jle
out
push
sub
iret
sbbl
adc
incl
cmp
in
bound
dec
mov
jbe
mov
dec
sub
incl
nop
inc
js
adc
lahf
push
mov
sub
mov
jge
leave
inc
mov
and
clc
incl
shl
mov
test
in
xlat
lret
imul
clc
out
pop
es
and
sahf
ret
push
jg
insb
outsb
ret
push
xchg
lock
fists
int3
push
adc
mov
xor
xchg
mov
sub
and
mov
mov
push
aas
adc
and
xchg
pop
mov
jg
fisubl
test
iret
push
mov
test
mov
xor
add
clc
decl
outsb
add
fnstenv
stos
dec
imul
cmp
dec
loopne
stos
incl
pop
mov
out
scas
pusha
out
xor
sbb
jmp
and
repnz
xor
pop
cwtl
or
jmp
fneni(8087
cld
bts
push
cli
mov
cmpsb
add
mov
xor
mov
ffree
push
negl
add
nop
lea
out
arpl
les
sbb
sahf
pop
cmp
das
jo
rorb
data16
mov
lcall
mov
rsqrtps
sub
inc
subl
icebp
adc
cmp
mov
ljmp
scas
clc
pop
gs
hlt
leave
shlb
pop
loop
es
pop
shll
pop
shlb
ljmp
cli
outsl
cmc
push
sub
aaa
scas
push
mov
pop
stc
popa
aad
or
cli
fwait
sar
pushl
sub
adc
out
test
loop
push
ljmp
fcoms
dec
lea
ficomps
mov
cwtl
push
mov
fistpll
out
adc
mov
icebp
lcall
push
and
push
decl
loopne
jmp
jmp
or
mov
xchg
in
movsb
jecxz
push
or
jmp
pop
or
xor
pop
sbb
xchg
mov
adc
aad
lcall
call
test
out
or
xchg
xchg
repnz
enter
mov
out
repnz
jg
push
scas
pop
inc
cs
icebp
sbb
test
addb
pop
lods
lea
pop
jne
repnz
pop
std
decl
mov
xchg
inc
cltd
jp
mov
mov
insb
sbb
sbb
mov
sub
or
sbb
cmpsb
hlt
popf
lcall
fisubs
fwait
decb
mov
xor
sbb
imul
mov
jmp
lcall
lock
inc
js
mov
call
cwtl
adc
adc
repz
pop
fisubl
stc
roll
addr16
fisttps
or
xor
fs
sub
lret
std
pushl
ret
mov
sarb
repz
pop
jge
mov
movsl
and
add
decl
mov
test
les
fidivs
lods
shll
add
lcall
shlb
sub
mov
loop
aas
dec
add
xchg
xor
inc
sbb
sbb
push
loop
jl
int3
push
movsl
adc
push
bound
incl
push
adc
push
aaa
jp
movsb
pop
enter
adc
bound
inc
in
in
push
sti
leave
ljmp
mov
daa
mov
lcall
fmull
mov
imul
mov
loope
call
mov
cmpsb
out
test
pop
cltd
lods
out
mov
movb
add
dec
mov
idivb
inc
pop
dec
inc
shll
jg
adc
jmp
jecxz,pn
sub
push
add
push
add
inc
iret
jle
jns
std
mov
cli
dec
mov
xchg
lock
push
pushl
jmp
mov
cmp
enter
ret
shl
lret
ljmp
test
lods
cli
decl
cmc
movsl
test
cmp
xor
mov
or
scas
into
pop
testb
and
jns
es
shlb
jecxz
jecxz
adc
cs
out
mov
mov
shl
add
outsl
push
fwait
jb
jle
inc
clc
and
add
adc
fildl
push
test
imul
jmp
js
xchg
pop
mov
enter
mov
inc
repnz
pushf
sbb
adc
or
cltd
mov
ficoml
pusha
sbb
xchg
lcall
les
cltd
imulb
add
sbbb
jmp
jmpw
adc
movsb
addl
pushl
sub
inc
or
aad
mov
clc
out
jmp
xchg
cld
in
insb
jg
push
test
jns
imul
sbb
movsb
insl
dec
pop
call
mov
aaa
add
mov
pop
cwtl
lods
inc
mov
cmp
sbb
mov
fdivrs
push
in
fisubrs
insl
xchg
mov
mov
and
mov
jbe
outsb
out
or
addr16
iret
add
sti
dec
rorl
inc
adc
jge
dec
mov
mov
xchg
dec
xchg
and
test
loopne
inc
leave
lcall
and
popa
inc
cmpsl
add
addr16
push
dec
out
shrb
cmpsl
lock
orb
decl
into
add
mov
mov
mov
into
mov
out
mov
inc
sub
std
push
jmp
sti
sbb
add
dec
mov
push
leave
rorl
mov
mov
cmpsl
fwait
push
mov
mov
cli
in
out
ss
shlb
fs
in
outsl
outsb
loop
stos
enter
call
dec
or
into
mov
xchg
loop
pop
lahf
mov
adc
jmp
lods
push
pop
or
ljmp
mov
ret
push
push
push
rorb
add
out
into
leave
ret
pop
fisubrs
fs
cld
sub
cld
fwait
test
jo
cmc
orb
mov
dec
push
push
inc
dec
rol
je
in
push
int3
nop
arpl
decl
or
pmaxub
push
pop
daa
push
gs
xchg
jl
inc
imul
jns
movsb
dec
pop
icebp
movsb
incl
cld
outsl
push
sub
or
jg
ds
cmpsb
sbb
aam
stos
je
test
aaa
cltd
cmpsl
jne
xchg
xchg
sub
add
cmp
je
adc
jns
fs
out
inc
addr16
mov
or
mov
popf
stos
dec
cmpsl
incb
outsb
mov
and
xchg
pushl
int3
push
pushf
pop
push
outsb
sbb
test
push
enter
xor
push
inc
cli
mov
dec
lock
outsb
pop
push
lock
jp
movsb
cmp
ljmp
cs
xchg
pop
scas
bound
aam
outsl
sbb
imul
pop
dec
dec
push
jb
push
jne
push
jb
imul
bound
mov
sti
or
mov
das
js
cwtl
sub
mov
ljmp
in
sub
cs
jno
dec
in
movl
mov
xor
jne
push
inc
ror
out
push
lcall
movsb
mov
arpl
mov
xchg
mov
pushl
arpl
mov
cltd
cmc
mov
lds
fistps
call
orb
ljmp
jmp
cmp
rcll
adc
cmp
jle
xor
sbb
dec
sbb
je
std
mov
or
daa
iret
arpl
jb
jno
lcall
cmp
mov
push
repnz
jo
and
pop
xchg
out
ja
push
sar
incl
mov
mov
lret
jnp
jo
stc
lock
pushl
sbb
stc
xor
pop
push
shlb
inc
xchg
inc
ss
pop
add
sbb
or
pushl
mov
push
js
testl
sbb
xchg
inc
mov
or
lret
iret
sbb
xchg
scas
push
push
cmp
dec
int
jmp
loopne
xchg
inc
lahf
mov
cmpb
ljmp
pop
mov
rol
es
mov
test
dec
or
test
push
and
cmp
xor
or
push
cld
cmpsl
test
mov
stos
jg
ds
out
fidivrs
ds
cmp
out
mov
xchg
fadd
arpl
fdivl
push
dec
pusha
xor
insl
push
pop
add
mov
arpl
dec
sub
mov
lret
cmpsl
add
mov
jg
sahf
cs
pop
arpl
rcrl
icebp
ljmp
loope
mov
fmul
jg
push
push
fs
mov
jmp
dec
stc
push
mov
stos
stos
sbb
in
lods
sbb
inc
je
sub
movntq
int
xchg
mov
xchg
jne
mov
xchg
jno
sbb
filds
imul
adc
incl
xor
in
jle
add
daa
push
mov
cmpsl
cmp
xor
fidivl
mov
push
and
sbb
cmp
mov
add
sbb
mov
jg
out
sub
dec
cmp
loopne
sub
loope
mov
pop
addr16
outsb
test
call
pop
std
jne
scas
lret
mov
mov
fdivp
cmp
es
add
mov
sbb
jns
mul
jns
mov
ds
add
pop
out
xchg
inc
push
cmp
in
jae
and
imul
lods
loopne
dec
and
mov
neg
dec
jmp
jo
icebp
mov
rorb
popa
das
mov
sbb
and
lcall
xor
adc
inc
mov
fwait
ret
cwtl
movsl
jmp
test
mov
incl
mov
mov
movsb
adc
cmpsb
xor
sarl
push
fbstp
lcall
ret
cmp
dec
push
rcr
loope
imull
lret
xor
in
and
icebp
lcall
xchg
adc
lea
call
lahf
in
or
pop
fcmovnu
lret
pop
sub
bswap
and
les
cmp
jg
shr
inc
aaa
in
push
call
adcb
add
rolb
pushl
sbb
add
pop
jnp
adc
inc
or
xor
cmp
fcomip
jl
jb
stos
sbb
pop
lret
cmpsb
and
enter
xchg
mov
cli
aas
das
repz
xchg
cmp
loope
shlb
lcall
adc
repnz
lea
pop
loopne
xlat
xchg
and
xlat
test
inc
int
pop
mov
fstps
dec
push
int3
aaa
stos
bnd
call
fnstcw
rclb
xlat
out
fistpll
mov
sbb
test
les
icebp
add
lcall
lahf
adc
dec
lock
movsb
sbb
pusha
loopne
sbbb
or
adc
ljmp
bound
stos
adc
sub
mov
add
fdivs
mov
imul
fwait
outsl
lock
call
sub
aaa
das
sub
push
add
push
lods
scas
xchg
sbb
lret
mov
fists
inc
hlt
adc
mov
adc
in
adc
dec
mov
cmp
arpl
jge
add
test
test
movsb
xchg
cmp
dec
data16
pushf
push
sbb
pushl
sub
inc
out
adc
jbe
mov
insl
lea
cmp
fdivrs
jl
sarb
or
loope
dec
clc
out
add
and
movsl
cwtl
sbb
call
mov
jno
sbb
mov
pusha
xchg
ljmp
popa
sub
aas
push
cmpsb
lods
jle
cld
mov
push
sbb
mov
fstpl
call
jno
out
hlt
outsl
hlt
adc
xor
push
or
in
pop
out
pop
not
icebp
cmp
scas
cli
ljmp
xor
sti
xchg
cld
xor
test
mov
mov
pop
imul
aaa
jno
push
mov
arpl
jp
negl
test
gs
ljmp
ljmp
test
int3
add
outsl
call
loopne
popa
mov
xchg
mov
aad
inc
jge
adc
cmp
loopne
cmp
into
mov
inc
jp
mov
out
shlb
test
in
sar
call
adc
leave
dec
xor
ja
cmp
jp
mov
loopne
daa
sub
pushl
pop
sub
jge
or
adc
add
flds
jmp
in
mov
je
mov
mov
mov
mov
mov
sub
jl
mov
push
xorl
jmp
jno
fisttps
shl
fwait
sub
decl
insb
shll
jnp
js
loopne
xchg
call
sti
dec
and
cmp
lea
sub
adc
or
mov
mov
cmpsl
scas
xchg
daa
mov
das
jae
imulb
jle
test
add
mov
stc
mov
in
pop
xor
lods
push
jae
jmp
mov
repz
and
mov
xlat
loope
mov
es
lahf
jp
fs
add
shrb
dec
stc
movsb
call
pop
xor
pop
fdivrs
in
pop
vpsubb
cmp
jp
pushl
cmp
inc
pop
aas
mov
or
sbb
xlat
jne
lea
ljmp
int3
cmpb
rorb
push
push
mov
jae
mov
in
pop
sub
fidivs
pop
stos
pop
cmpsl
adc
push
pop
icebp
fsubl
fstps
dec
and
fbld
lods
pop
lods
push
roll
dec
lret
push
loopne
sub
lds
push
add
lcall
ja
sbb
inc
test
faddl
icebp
xor
adc
aam
test
cmpsl
fdivrl
fstpl
sti
stos
pop
fstpt
jb
mov
hlt
and
cltd
sbb
jmp
cmc
jne
xchg
cmp
fdivr
adcl
call
xchg
mov
addr16
or
int3
sub
ljmp
cmpsb
cmpsb
ss
jmp
cmp
lods
inc
pop
cld
lret
push
mov
pusha
sub
xor
xor
int3
out
cld
sbb
mov
sub
roll
inc
out
ss
scas
sub
test
add
mov
jp
daa
xchg
int3
xchg
push
das
xlat
lahf
dec
inc
dec
jae
push
adc
adc
adc
inc
repz
mov
cmp
jmp
js
fwait
cs
fldenv
xchg
jnp
push
inc
adc
inc
xchg
add
out
shll
jo
sbb
inc
or
insb
ss
adc
mov
int
add
out
fnsetpm(287
imul
gs
sar
jmp
dec
add
js
inc
inc
pop
test
fsubrl
repnz
xorb
or
push
fistpl
add
cld
and
aam
mov
sbb
jg
aam
add
mov
jnp
repnz
ljmp
repnz
inc
imul
dec
inc
loopne
repnz
mov
rcr
imul
mov
add
hlt
sbb
jg
dec
aaa
lock
pop
in
pop
xor
incb
cmc
xor
repz
lret
call
jg
adc
mov
scas
mov
ljmp
je
rclb
xor
int
jmp
ret
movsl
lock
jg
lret
jb
popa
adc
jp
ret
fdivp
ljmp
cli
inc
and
sub
pop
xchg
pop
xor
ret
inc
in
or
in
push
xor
mov
add
incl
jae
jnp
jnp
add
pop
test
dec
jnp
shr
pushl
aaa
in
jmp
decl
sbbl
push
psubd
pop
mov
std
mov
ljmp
cld
outsb
cmp
cmp
test
lods
out
and
adc
outsl
jge
fisubl
gs
enter
mov
mov
cmp
fwait
xchg
cmp
or
insb
xchg
lock
jmp
cmp
adc
fistpll
dec
sahf
push
mov
cli
pusha
loope
adc
dec
sub
pop
and
mov
test
or
push
sbb
cwtl
iret
pop
mov
inc
pushl
add
xor
mov
ja
xchg
mov
sub
xor
fstpt
pop
pop
push
mov
jge
xlat
xchg
adc
loope
sub
xor
movsb
pusha
jg
jne
in
push
arpl
mov
leave
adc
xor
sub
ljmp
cmp
ljmp
insl
bound
inc
xlat
fisubrs
int
ffree
into
cwtl
lea
and
sbb
cli
lahf
jnp
incl
inc
adc
mov
insb
std
and
popa
push
sahf
cwtl
or
push
or
mov
and
xor
adc
adcl
incl
pop
and
adc
popw
mov
push
or
fdivs
mov
cltd
jmp
stos
mov
sub
scas
xor
sbb
mov
jecxz
int3
adc
outsl
xor
inc
outsl
mov
jne
gs
insl
dec
pop
sbb
xchg
xor
adc
data16
cltd
out
cli
pushl
adc
cmp
xchg
jne
aas
test
add
rcll
lcall
mov
outsl
insl
cmp
pop
test
jno
or
add
test
jmp
push
pop
push
jle
sub
xchg
rcrl
movsl
xchg
nop
jns
inc
test
mov
mov
or
pop
rorl
out
jbe
frstor
in
frstor
in
mov
or
xchg
fcomps
jns
out
dec
or
mov
fadds
decl
sahf
jae
es
test
pop
aam
sub
push
xchg
cmpsl
xchg
pop
add
clc
ljmp
imul
lret
arpl
sbbl
jmp
cmpsb
push
add
xchg
jp
or
dec
fisubrl
jmp
adcl
push
add
ja
mov
aam
hlt
jno
cmp
lret
or
outsb
fidivrl
cmp
leave
in
popf
outsl
and
sbb
add
jp
addr16
jg
cmpsl
out
add
cld
call
orl
pop
xchg
jg
and
inc
and
mov
idivl
andl
sar
xchg
xor
cwtl
or
std
bound
inc
or
ret
ror
je
jae
jge
std
jmp
lcall
xor
and
lcall
push
shl
imul
decl
ffreep
jnp
push
sub
popf
push
or
into
sbb
lea
fs
dec
push
cmp
pusha
pushl
sub
out
das
xor
lea
push
mov
decl
mov
js
sarb
cwtl
imul
cmp
mov
fcoml
pushf
cmp
add
mov
cmp
jp
shll
filds
aas
push
call
add
jbe
pop
icebp
mov
inc
or
jmp
lds
test
and
dec
loopne
pop
sti
adc
sub
pop
int
lock
lcall
stos
shrl
cmp
and
sub
lret
inc
dec
inc
jp
insb
movsb
push
mov
cmp
je
pop
insl
call
shlb
xchg
nop
add
outsb
sbb
sub
dec
daa
je
mov
or
stc
mov
scas
cmp
in
and
push
jb
leave
mov
loopne
dec
repz
es
push
in
sbb
fadds
stc
subl
cmp
les
aaa
pop
pushf
jl
call
mov
sbb
jge
movsl
inc
movsb
jl
jnp
push
test
sbb
push
shrb
xlat
sarb
mov
popa
lahf
sahf
adc
fisttpll
jmp
add
mov
xchg
enter
mov
into
inc
in
stos
xchg
adcl
call
test
and
jmp
add
pop
pop
lret
or
push
sahf
and
cmp
int3
pop
call
mov
pop
dec
push
leave
cmp
jns
mov
jae
jne
in
adc
decl
movsb
call
ror
lods
jbe
mov
mov
pop
sbb
test
jg
adc
or
shr
mov
sbb
mov
mov
jl
sbb
fs
pop
cmp
dec
xchg
movb
jmp
mov
sbb
push
xchg
enter
repz
xchg
jl
push
arpl
add
scas
nop
test
xchg
jae
push
push
mov
jmp
xchg
movsb
je
adc
call
or
lcall
in
outsl
push
add
pushf
dec
mov
xor
call
inc
ds
push
adc
ss
or
sub
dec
add
int
pop
fwait
inc
out
sahf
add
sbbl
lret
xchg
adc
and
cld
lret
orl
jmp
outsl
or
xor
shll
inc
int3
sub
add
fistpll
pushl
cmc
xchg
add
cmpsl
or
adc
add
pushf
addb
out
and
xchg
add
jle
mov
and
jge
mov
jae
inc
push
ss
mov
repnz
mov
jg
xor
sbb
add
lcall
and
sahf
rol
std
mov
jle
pop
ret
xor
and
cli
mov
inc
jmp
leave
mov
adc
pushl
test
sub
sbb
daa
pop
lea
pop
aam
stos
xor
sub
fsubrl
sbb
jmp
sub
jecxz
insb
mov
leave
push
sbb
pop
mov
mov
ljmp
push
push
pop
mov
jle
loop
cwtl
fbld
cmp
xchg
repnz
aad
jmp
roll
repz
jmp
push
in
adc
pushl
mov
jmp
adc
mov
xchg
shrl
ljmp
std
mov
xchg
ret
sub
pop
shll
test
mov
in
or
negb
in
dec
in
jmp
jge
jne
fnstenv
je
jl
je
adc
lock
out
fptan
nop
push
fs
xchg
imul
fdivrs
push
dec
xor
add
xor
cmc
mov
fcmovb
jmp
mov
add
arpl
pop
xchg
leave
mov
mov
ljmp
xchg
es
adc
mov
add
movsb
mov
movsb
mov
pop
into
and
addr16
ljmp
xor
ljmp
pop
lods
mov
bound
ja
dec
add
sti
pop
mov
or
cmp
mov
jg
je
nop
cwtl
addr16
pop
popf
loope
fiaddl
flds
xchg
dec
shrl
aaa
mov
inc
or
int3
int3
inc
in
andl
add
dec
jg
jmp
push
fiadds
push
push
sub
fsubl
pop
jne
push
es
sti
ja
sbb
pop
aas
mov
push
mov
inc
stos
mov
jecxz,pn
loope
outsb
dec
ds
inc
das
or
shl
or
mov
pushl
dec
ret
xor
xor
add
in
test
xchg
dec
mov
push
aad
stos
fildl
ss
adc
xchg
pop
inc
mov
pop
les
cs
repnz
enter
shrb
push
inc
push
cmp
pop
cmp
outsl
clc
adc
dec
bound
out
sbb
or
cmc
jg
fcomip
jnp
cmp
pop
xchg
sbb
mov
das
mov
stos
popa
dec
and
popw
cld
jmp
jg
jmp
xor
std
das
mov
jb
cmp
scas
jo
sbbb
adc
add
and
call
adc
mov
jmp
and
icebp
jmp
inc
aam
notb
xor
sti
push
jbe
sarl
int3
in
lods
mov
sub
ljmp
pop
insb
mov
loop
pop
or
movl
test
push
cltd
mov
jmp
mov
xchg
movsb
sbb
mov
pushf
xor
mov
jg
jmp
ds
jle
cmpl
lock
movl
daa
test
pop
push
and
popa
xchg
stos
xor
xchg
jnp
mov
inc
mov
lods
jno
test
add
decl
add
cmp
aas
sub
loopne
mov
and
mov
mov
adc
adc
imul
outsb
xchg
push
ss
std
or
xchg
lret
cli
call
push
in
out
hlt
lods
pusha
fwait
mov
leave
xchg
mov
mov
decl
and
subl
negl
sbb
xchg
pop
jbe
fisttps
pusha
mov
lods
out
call
pushl
divl
out
aas
inc
mov
out
jle
enter
imul
lea
or
loope
call
dec
sbb
sbb
inc
jo
or
lods
mov
jge
movsl
ffree
mov
sahf
stos
les
out
cli
pushl
xchg
pop
sbb
in
sbb
inc
adcb
outsl
aaa
mov
incl
mov
out
jae
shl
sbb
pop
inc
imul
ja
dec
lods
cld
mov
push
inc
jp
fimull
mov
add
and
cmc
mov
jg
mov
or
xchg
test
rolb
cmpl
fldenv
sub
sub
add
and
cmpsb
sub
pop
out
jl
cmp
lcall
push
test
push
cmp
dec
in
mov
mulb
dec
mov
inc
adcl
shll
push
and
dec
ds
test
bound
jle
mov
cmp
lcall
mov
fs
jle
fcomi
stos
xor
pop
push
mov
fldcw
outsl
inc
cmp
dec
cltd
xchg
push
lfs
scas
mov
push
cmp
inc
sub
mov
in
das
outsb
add
lcall
mov
pop
cli
arpl
dec
int
roll
fisubs
std
inc
push
pop
cltd
lcall
fcomps
in
mov
push
clc
mov
inc
mov
push
xchg
repz
push
stos
les
ss
ficoml
popa
lea
stos
pushf
or
in
add
xchg
js
aaa
std
jmp
shrl
rorb
mov
pusha
push
call
call
mov
mov
clc
into
xor
stos
imul
lcall
repz
fcomip
xor
sbb
push
rcll
pusha
sar
decl
icebp
lods
inc
rcl
xchg
dec
icebp
mov
bound
inc
mov
cli
mov
stos
jg
fnstsw
sub
les
add
or
jmp
cltd
loop
mov
cld
mov
and
and
aaa
flds
fimuls
xchg
pusha
pop
xchg
xchg
and
adc
jno
sbb
out
xor
jp
sti
xchg
pop
or
pusha
mov
sar
bound
and
and
jbe
cld
mov
adc
push
js
xchg
std
pusha
mov
mov
push
movsb
lret
inc
mov
fcomip
push
cwtl
inc
mov
rcrl
incl
jnp
mov
lret
jmp
push
mov
and
clc
jae
mov
sub
ljmp
jno
fsubs
xlat
roll
pop
loop
mov
dec
xchg
rol
test
call
mov
cs
or
jae
mov
and
mov
mov
es
movsl
xchg
call
sbb
pop
pusha
outsb
cwtl
mov
dec
cmpsb
sbb
ljmp
sub
sbb
mov
push
fdiv
sub
mov
mov
sbb
mov
dec
mov
outsl
fdivrl
adc
pusha
mov
jb
inc
scas
pop
and
mov
add
push
adc
repnz
bound
xchg
icebp
pushl
inc
xchg
inc
mov
mov
sub
push
ss
adc
shll
ljmp
mov
xchg
sub
push
or
sbb
pusha
add
mov
loop
decl
cmp
out
lods
lahf
lds
xor
dec
mov
push
sub
jmp
add
hlt
gs
sbb
or
pop
push
int3
adc
and
ja
clc
jle
decl
pop
fwait
rcrb
cs
sub
jle
cmp
adc
das
iret
idiv
out
clc
shrl
mov
mov
ret
lcall
int
call
lcall
fisttps
ret
push
jnp
mov
adc
shll
dec
dec
dec
loope
adc
mov
xor
mov
cltd
adc
fs
add
cmp
iret
add
mov
in
push
mov
out
inc
cld
mov
call
outsb
sub
test
push
mov
add
outsl
sub
jl
sub
adc
ror
inc
pop
das
xor
xchg
cld
cmp
sub
inc
mov
test
mov
sbb
adc
and
loopne
mov
movsb
or
fs
aam
or
cmp
scas
shl
aad
jl
pop
fcomip
ficompl
imul
xchg
mov
jg
jb
jl
dec
sbb
lds
cmp
sar
ljmp
in
mov
clc
add
add
push
add
cmp
fs
lcall
jecxz
cs
pop
pop
mov
xor
jmp
cltd
dec
ljmp
lcall
imul
inc
mov
stos
push
mov
lret
mov
pop
addr16
mov
jp
pop
cmp
jp
cmpsl
dec
xchg
bound
xor
fwait
push
out
fsub
mov
pushl
xchg
pop
mov
xor
outsb
repnz
mov
loop
mov
loopne
xor
dec
roll
dec
cmpl
xchg
bnd
or
call
call
pushf
mov
adc
bound
adc
pop
push
repz
mov
in
adc
out
and
punpckhdq
lcall
add
adc
xchg
ljmp
or
jge
jb
push
jb
add
fists
das
mov
push
lods
dec
mov
push
and
jo
fcos
lcall
sub
mov
xchg
bound
sbbl
push
cmc
sar
dec
sub
fwait
ret
out
ret
test
mov
xor
mov
ljmp
rolb
lods
push
nop
pop
out
ds
push
fcomip
ljmp
push
sub
mov
mov
iret
shll
call
std
decl
sub
dec
clc
mov
das
xlat
repz
fs
daa
mov
mov
adc
lcall
lods
mov
loop
pushf
sbb
imul
cld
fbstp
popl
cld
adc
sahf
js
pop
push
mov
lods
xchg
data16
ret
and
loop
ficompl
decl
hlt
mov
sbb
xchg
mov
jb
aas
icebp
add
mov
push
movsl
fmulp
pushl
subb
push
data16
ret
call
sbb
test
adcl
push
add
call
fildl
cld
lret
lea
pop
jno
lea
dec
pop
jnp
lcall
jg
push
xchg
or
cwtl
addr16
bnd
out
repz
in
adc
add
ss
pushl
dec
repnz
jge
cmp
gs
push
mov
enter
cld
pop
mov
jo
stos
nop
mov
mov
jo
pushf
incl
sbb
mov
fadd
jae
imul
mov
out
jp
pop
jae
ljmp
mov
sbb
xor
divb
inc
xor
sbb
call
inc
xchg
inc
add
mov
jl
fs
lock
xor
out
in
or
sbb
decb
into
loop
pop
ficomps
rcr
jb
adc
lcall
mov
mov
pusha
sar
lea
pop
xor
lods
cmp
sbb
test
fldenv
cmp
filds
xchg
jbe
ret
mov
mov
stos
in
xchg
cs
std
mov
mov
jo
sbb
or
rcrl
lret
outsb
fwait
cmp
ret
pop
nop
and
enter
aas
cltd
mov
nop
cmp
call
jmp
cmp
xchg
icebp
ja
loope
and
in
or
and
adc
pop
mov
or
ljmp
stos
imul
movsb
jbe
popa
repnz
mov
fildll
pusha
insb
mov
jl
out
lret
mov
xor
cwtl
movl
divl
in
push
sbb
cltd
ror
cli
mov
in
push
sbb
mov
stos
or
stos
stos
jp
lcall
cmp
repnz
movsl
call
sub
ret
std
test
mov
ret
xchg
cmp
ljmp
fwait
and
nop
cmp
in
jae
dec
sbb
mov
dec
sbb
outsb
xor
mov
daa
inc
ret
push
lea
mov
les
aam
aas
pop
pop
cmp
jmp
loope
push
xchg
in
movntq
out
jnp
jg
ret
add
fnstcw
out
js
push
sti
fstpt
fmull
mov
loop
inc
jecxz
sbb
cmp
add
mov
or
aam
mov
stos
mov
push
push
cli
adc
xchg
push
aam
or
testb
add
jns
inc
repz
add
loope
xlat
pop
mov
mov
ret
test
lcall
je
sbb
jne
adc
mov
sub
fisubs
mov
and
mov
ffreep
add
aam
cmp
mov
mov
loop
adc
pushl
and
jnp
jecxz
test
bound
insb
mov
lods
jbe
decl
rorl
ljmp
push
repz
push
jb
or
cmp
dec
jg
jb
push
loope
icebp
cmp
jb
stos
lahf
add
std
cmp
icebp
fidivrl
xor
fldl
mov
pushf
test
jle
push
fisubrs
js
decl
jmp
decb
iret
inc
cmpb
pusha
jbe
leave
daa
pop
lcall
pop
inc
out
mov
rcll
mov
jb
adc
jae
push
jno
orb
inc
gs
cmp
loop
leave
inc
imul
ljmp
stc
push
add
mov
sbb
pushf
mov
fldl
lahf
lahf
cwtl
pop
push
dec
rolb
cmp
incb
stos
or
adc
jge
adc
scas
lcall
testb
int
orb
out
sbb
addr16
ret
xor
adc
lcall
or
jl
dec
adc
in
nop
adc
dec
mov
je
ljmp
cli
sub
or
sahf
ret
icebp
mov
leave
lds
dec
repnz
incl
add
arpl
adc
mov
repnz
popf
lcall
mov
call
inc
aam
loope
sub
push
push
jb
jno
pop
and
jp
cmpsb
mov
mov
in
out
js
popf
jge
test
mov
lods
or
adc
push
mov
jmp
dec
dec
mov
fnstcw
testl
and
jle
pop
add
pop
adc
xor
incl
into
or
sub
jae
push
cwtl
push
sahf
dec
sbb
loop
push
daa
xor
js
mov
push
ret
cmc
and
push
jno
shlb
fstl
pushl
out
inc
movsb
xor
push
xor
jl
jnp
insb
stos
mov
mov
xchg
xor
push
fwait
pop
xlat
mov
xchg
in
inc
inc
and
rdmsr
push
pop
popf
dec
sub
adc
adc
in
mov
pop
imul
test
lods
sarb
scas
xor
mov
inc
jns
rclb
ljmp
adc
and
or
js
lret
rorb
or
inc
ja
ret
xor
xor
push
sbb
subb
inc
mov
ds
sti
ljmp
jg
jecxz
roll
ja
jg
loope
loop
pushf
mov
mov
call
inc
div
gs
int
dec
dec
inc
dec
sbb
pop
push
pop
add
ljmp
movsb
lcall
pop
adc
xchg
add
int3
fdivl
stc
psrad
jmp
xchg
test
pusha
ret
out
dec
xor
cmp
mov
xchg
bound
push
xor
inc
lcall
jnp
xor
imul
sub
jg
or
mov
mov
push
pop
sbb
lock
cmc
mov
mov
ja
fdivp
outsl
decl
mov
loopne
subb
adc
jle
imul
pop
leave
subb
inc
dec
gs
sub
outsb
lock
out
push
loop
jo
mov
arpl
pusha
cltd
push
xchg
push
sahf
push
aas
or
xchg
enter
mov
into
jecxz
fcmovu
cld
push
iret
fcompl
sbb
loope
test
negb
add
jle
push
mov
jg
loop
pop
out
mov
outsb
movsb
mov
dec
sub
push
mov
cld
insl
push
sbb
gs
dec
mov
hlt
xlat
push
or
cmpsb
jmp
call
setnp
call
push
sbb
out
add
adc
mov
add
fcos
call
imul
adc
test
push
sahf
mov
cmp
adc
gs
and
test
mov
fsubrp
shrb
rcr
insl
adc
xor
insb
mov
cltd
in
sti
jg
fsts
shl
in
stos
test
ljmp
inc
push
fists
icebp
ljmp
adc
mov
aad
mov
sub
push
ss
jl
loope
push
pop
mov
rcl
xlat
sub
in
ds
adc
scas
cmp
jg
mov
cld
add
jmp
sbb
outsb
nop
and
inc
lcall
push
aad
pushl
lea
aaa
daa
lds
mov
pushf
pop
push
and
inc
jnp
pusha
dec
lock
pop
cmc
ja
sbb
les
jge
test
ljmp
jle
shll
repz
inc
loope
mov
sbb
or
mov
mov
sub
loopne
xor
pop
sub
loopne
dec
ss
pop
ljmp
push
dec
jecxz
sbb
rolb
mov
dec
push
sub
fistpl
icebp
sub
adc
call
aam
ja
adc
stc
xchg
int
icebp
cmp
ja
mov
jl
add
mov
xlat
ficomps
jb
ret
loop
xor
imul
test
into
push
lock
ljmp
js
cs
fildll
sub
adc
xor
data16
inc
push
lods
data16
aaa
push
dec
ljmp
mov
lcall
dec
xchg
add
rorl
jl
lock
push
shll
aas
pop
jle
jae
push
fbstp
icebp
popf
es
push
pop
loope
jae
add
inc
push
loope
sbb
sbb
nop
sbb
call
jbe
dec
cld
fs
push
pushf
sbb
mov
jmp
push
cmp
andb
jne
push
lock
jmp
add
pop
mov
das
ljmp
jbe
xchg
or
jp
mov
xor
js
push
mov
addr16
xchg
hlt
aam
fwait
shlb
pop
inc
push
jg
pop
scas
shll
add
adc
repnz
jl
xor
jp
in
repnz
mov
lret
sub
xor
in
cmp
lcall
mov
dec
jge
xor
add
cli
enter
clc
popf
pushl
xor
fdivr
into
outsl
jae
fwait
dec
pop
sahf
push
nop
out
cli
pop
mov
dec
lahf
out
lret
dec
sbb
outsl
lcall
test
pushf
iret
ror
popa
filds
inc
mov
sbb
ss
sbb
orl
outsl
decl
mov
xchg
xor
mov
js
jecxz
icebp
mov
jg
and
cmp
xchg
rcr
pop
cltd
sub
xchg
ljmp
mov
testb
stos
lds
fistps
in
adc
sbb
push
jmp
and
or
xchg
push
clc
nop
inc
pop
xchg
add
and
push
push
leave
xchg
cmp
dec
out
or
lock
xchg
rolb
les
pop
dec
mov
clc
mov
cwtl
pop
loopne
xchg
jge
sub
push
fsubl
in
pushl
imul
imulb
dec
dec
fwait
sbb
lret
aad
cltd
fildll
pop
pop
clc
es
sti
add
jns
mov
mov
mov
shll
dec
push
out
rcll
lcall
mov
push
inc
aad
jecxz
push
mov
lret
pop
jmp
mov
cmpsl
jge
subb
adc
call
sbb
scas
test
fucomi
mov
bound
clc
mov
xor
jbe
in
pshufw
push
inc
lea
adc
xchg
pushf
or
sbb
push
ret
lcall
std
lcall
jnp
pop
xchg
inc
sti
lret
mov
inc
pop
rol
jl
and
and
push
ret
cmp
jno
pop
jo
cs
jmp
lcall
adc
fcoms
sub
mov
jae
fidivl
sbb
sahf
lret
incl
lods
fisubs
dec
imul
cmp
bound
ss
in
jp
sub
mov
lock
mov
and
xor
test
sar
dec
push
out
clc
das
cli
jno
xor
xchg
sbb
xor
fsubr
aam
incl
push
mov
mov
andl
xchg
mov
xor
pop
shll
or
fcomip
pmulhw
mov
inc
inc
add
call
or
xchg
inc
lock
enter
jbe
and
shlb
add
fs
incl
into
ror
clc
dec
test
icebp
addb
outsl
ljmp
jne
cwtl
pop
jnp
outsb
call
aaa
jbe
rorb
jmp
jne
push
in
mov
mov
jmp
jmp
mov
lds
imul
aad
mov
pop
fisttpll
mov
and
mov
rcrl
stc
dec
mov
outsb
jmp
pop
jbe
cmp
cwtl
mov
xor
testb
je
pop
icebp
inc
cmp
mov
incl
push
cmpsl
cld
sub
addr16
or
xlat
fld
jp
leave
xor
push
push
incl
lcall
sbb
test
ss
fldt
sbb
sbb
mov
xchg
decl
jno
test
clc
fadd
push
outsl
or
mov
add
hlt
cmp
dec
movsl
in
mov
xlat
adc
ret
pop
test
push
ss
xchg
jmp
mov
jmp
nop
or
mov
inc
pop
mov
push
clc
in
int
dec
mov
jecxz
sbb
repnz
cmp
adc
mov
cmpl
stos
je
shr
scas
push
dec
ffree
test
sbb
shlb
test
pop
xchg
cmp
xchg
orb
out
fcompl
and
outsl
ret
adc
push
mov
incb
call
push
inc
fsubrs
rcr
pop
jae
loopne
add
shl
and
loope
mov
jl
jmp
lock
mov
adc
cli
cmc
pop
ds
sbb
jno
cmp
mov
ljmp
outsb
pop
sub
in
loope
jne
mov
sbb
loopne
jl
sbb
aas
mov
popf
bound
sub
out
dec
pop
xor
xor
inc
or
xor
std
arpl
push
xorb
stos
jmp
int
and
nop
pop
sbb
pushl
fadd
jl
into
cmpb
mov
cmc
adcl
push
mov
xchg
jecxz
aaa
std
les
aam
push
or
hlt
xor
push
push
mov
shll
push
xchg
sbb
cs
pop
cmp
push
and
mov
outsb
mov
mov
test
cmp
jb
push
cld
push
adc
movsb
mov
xor
cmp
xor
lcall
in
pushf
cmp
adc
arpl
lock
out
xor
rcrl
out
lock
sti
sahf
mov
adc
fsubp
xchg
inc
or
adc
stos
mov
test
out
jo
push
ror
pop
out
nop
mov
push
mov
push
add
stos
incl
mov
leave
jo
enter
sbb
mov
pop
and
cli
pushl
jo
nop
incl
push
addr16
or
mov
lret
cmp
stc
into
adc
jae
lds
add
mov
cmp
or
jle
sub
call
lods
jge
repnz
aam
outsl
push
mov
pop
xchg
mov
pop
or
call
inc
fwait
stc
nop
into
xlat
and
aaa
dec
cmp
aas
xchg
or
cmp
pop
cmp
mov
jg
ljmp
icebp
mov
aad
add
pop
stos
push
sbb
and
jne
mov
mov
fcomps
in
repz
sbb
mov
jmp
nop
inc
clc
call
jne
leave
push
sub
pop
jnp
or
add
cmp
sbb
rclb
mov
data16
in
xchg
sahf
incl
mov
inc
and
lds
cld
pop
cs
cmpsl
inc
into
aad
movsb
and
push
fdivr
data16
lret
adc
cmp
sti
xchg
mov
jp
negb
push
mov
sub
sub
jg
lods
and
hlt
dec
imul
mov
xlat
jns
out
syscall
xor
sbb
aas
je
mov
test
ffreep
jmp
pop
cmc
inc
sbb
cltd
sbb
xchg
int3
inc
pop
cmp
dec
jle
mov
test
add
dec
push
sbb
pop
mov
hlt
es
mov
fisttpll
scas
push
loopne
fsubrs
test
ljmp
mov
cmp
xor
ret
adc
cmc
rep
mov
or
push
adc
dec
movsb
add
add
rclb
scas
subb
aas
mov
outsb
cwtl
adc
jg
decl
mov
inc
adc
sbb
lret
pop
fnstcw
adc
mov
pop
les
in
cltd
es
call
dec
sbb
sbb
aas
and
fisubl
std
cmpsl
pop
or
pushl
andb
or
push
sub
dec
je
mov
push
xchg
add
cs
mov
decl
pop
dec
lods
cmp
fists
andb
in
test
inc
jle
xchg
ljmp
sbb
mov
lea
push
cs
jae
sub
or
ljmp
cmc
pop
popa
xrelease
jb
int
push
dec
clc
jb
cltd
js
sub
push
mov
mov
mov
arpl
repnz
aam
outsl
dec
jle
add
clc
out
std
stc
test
imul
push
loope
fisubrs
inc
test
dec
push
pop
mov
jecxz,pn
je
adc
fistl
mov
sub
data16
jmp
jp
mov
mov
rorb
mov
xor
mov
scas
fcos
mov
pop
scas
ja
mov
inc
fwait
xchg
mov
xor
cs
mov
push
and
push
decl
sbb
sahf
or
pop
sbb
subb
pushl
iret
sub
popf
lock
push
lods
negl
insb
fdivl
jg
cmp
inc
push
in
cwtl
mov
jl
jecxz
push
pushl
or
fisubrl
pop
lods
cmp
dec
xor
cmp
in
sbb
push
out
das
jb
out
push
ja
int
dec
in
orb
push
sti
rorb
add
inc
fcmovu
pusha
sub
xchg
xchg
push
push
xchg
in
push
sbb
sub
xor
pop
jg
lret
imul
call
inc
or
sub
fsubr
sub
dec
ss
cmp
mov
decl
cld
pop
mov
cmp
fstl
jae
clc
and
xchg
jb
pushf
sarl
and
jo
xchg
loop
or
in
ljmp
aad
call
inc
faddl
jle
dec
cmp
loopne
ljmp
out
test
sbb
insl
push
movsb
pmulhuw
add
out
xchg
pop
imul
xchg
test
mov
dec
sub
jmp
push
sub
or
or
imul
mov
push
gs
add
rol
jp
mov
mov
ljmp
addl
cmp
mov
das
mov
push
loop
mov
dec
mov
lret
es
sbb
cmp
into
test
ret
mov
sub
scas
mov
xor
cmpsl
lahf
pushl
jnp
dec
lock
xor
sarb
das
cmp
mov
pop
cltd
dec
pusha
scas
jno
jno
in
out
cld
pop
insl
mov
call
add
fwait
dec
push
jno,pt
lcall
dec
fwait
mov
adc
xlat
jb
sub
pop
mov
inc
xor
inc
call
rorl
inc
pop
xor
mov
jmp
movsb
jno
aad
sarb
lcall
mov
adc
lea
push
es
mov
aas
in
mov
jle
mov
or
jg
jl
mov
popf
jg
cwtl
sbb
or
mov
movsb
scas
adc
incl
ret
xor
or
dec
lret
inc
cmpsb
mov
push
insl
or
cmp
xchg
outsb
mov
mov
in
add
pushf
fiadds
dec
mov
mov
cltd
cmp
rolb
subl
shl
jg
jg
fnstsw
ljmp
mov
test
dec
add
mov
jnp
leave
scas
add
outsb
push
mov
dec
inc
mov
xlat
xor
cmpsb
mov
stos
shrl
movsb
ret
bound
fstl
data16
mov
int
sarl
cld
xlat
dec
push
icebp
mov
xchg
shlb
cs
jge
enter
or
adc
mov
xchg
lods
les
push
decl
xchg
fadds
xchg
test
xchg
push
mov
sarb
inc
repnz
mov
jg
pop
and
pop
imul
sbb
xor
pusha
ljmp
clc
dec
ss
add
pop
pop
pusha
push
cmp
cmp
cmpsl
popf
test
enter
sbb
lret
fdivs
or
js
insl
decl
mov
push
xchg
shrl
cmpsb
jle
aam
stc
fcoms
pushf
cli
fisttpll
jne
cld
sbb
decl
dec
lahf
lock
or
out
pop
fisttps
adc
pushf
dec
and
incl
clc
repnz
mov
insb
mov
xchg
std
stos
es
mov
pop
or
fistl
xor
xlat
syscall
shl
stos
mov
add
mov
incl
in
xchg
shll
iret
testl
aam
sub
push
inc
sar
mov
call
popf
jne
add
cmpsb
sti
or
dec
sbb
cmpsb
sbb
and
out
mov
decl
dec
divb
pop
scas
cld
mov
add
xor
decl
das
and
cwtl
bound
rolb
sub
pop
dec
fucomp
in
or
clc
pop
in
lahf
cmpb
imul
rclb
mov
loopne
in
incl
inc
mov
mov
cltd
cwtl
fisubrl
push
add
imul
aam
imul
stos
ds
shll
mov
mov
ja
jbe
adc
mov
sbb
les
cmp
aam
in
insb
das
daa
sar
mov
fbstp
pop
xchg
mov
sbb
dec
stc
lret
ffreep
cmp
pusha
add
dec
lods
push
test
push
into
pop
jle
in
xor
adc
dec
insl
pusha
inc
mov
cmp
ss
inc
repz
fwait
xchg
test
pop
adc
incl
sbb
pop
push
cld
sbb
out
cli
mov
cmp
mov
incl
push
cli
sarb
mov
or
es
add
inc
mov
pop
gs
push
mov
mov
mov
ljmp
sub
jecxz
aad
or
testb
jo
outsl
leave
sub
push
ss
jge
dec
aam
dec
jle
and
cltd
lahf
lret
jecxz
sbb
pop
cmc
loopne
das
jb
ljmp
mov
call
cmp
dec
jmp
clc
xor
dec
mov
test
andb
cmpsb
mov
insl
jne
out
jp
mov
sbb
push
pushf
subb
push
xchg
mov
lret
fsubl
mov
orb
jmp
dec
sbb
std
in
pushl
mov
fstpt
lret
add
sub
cmp
sub
fwait
pop
sbb
or
sub
pushf
push
inc
scas
scas
mov
decl
xchg
shrb
and
fstl
mov
add
dec
sar
mov
adc
loope
aad
adc
push
cmp
push
bound
jle
hlt
mov
jle
inc
jns
mov
jmp
mov
add
pop
fwait
sub
cmp
push
cmp
xlat
test
dec
lods
idivl
cmp
data16
push
ss
jecxz
div
mov
and
loop
jmp
xor
adc
and
pop
fadd
xchg
iret
or
push
jo
jae
aam
nop
jbe
ror
inc
sbb
cmp
jmp
scas
stc
jg
sbb
into
jnp
fsubrl
pop
mov
push
mov
inc
cmc
add
add
jg
call
mov
adc
mov
aaa
pushf
testb
pop
notb
cltd
cs
inc
lods
in
fdivr
mov
ss
out
iret
xchg
ds
mov
and
jg
ret
add
add
sub
ljmp
lock
jo
mov
inc
push
add
mov
insl
imul
mov
das
clc
sbb
aad
aad
pop
lods
rorl
mov
out
jmp
mov
pushl
or
push
mov
mov
dec
or
shlb
loop
xchg
inc
adc
lods
lcall
mov
ss
cmp
sbb
mov
incl
into
out
lods
xlat
mov
out
stos
and
lods
divb
aas
dec
outsl
fwait
cmc
sbb
cmp
jge
leave
mov
mov
jg,pt
scas
iret
mov
mov
fistpl
mov
mov
cmc
xchg
lcall
push
fidivrl
mov
cltd
mov
cmp
aaa
push
xchg
loop
imul
lcall
sbb
sbb
adc
push
out
pop
sub
xor
push
pop
subl
ret
neg
lcall
jp
sarl
lcall
lds
mov
inc
out
les
xor
mov
and
mov
in
xchg
call
and
cli
loopne
cmp
lahf
xchg
ja
xchg
xchg
adc
pop
enter
mov
je
hlt
pop
repz
jmp
adc
jmp
inc
movsl
jnp
push
imul
pop
pop
cmp
mov
mov
andl
mov
fidivrs
and
pop
mov
test
pop
mov
ds
jg
ljmp
inc
in
in
xchg
or
lock
xor
pop
sub
xor
and
or
call
jb
sub
jge
and
sbb
rcl
push
lcall
or
stos
jno
cmpsl
jp
xchg
xor
xchg
es
fidivrl
aad
push
dec
xor
cmp
icebp
out
inc
xorl
mov
xor
mov
nop
in
jmp
ljmp
inc
mov
clc
dec
in
mov
mov
decl
and
push
ljmp
cmp
lea
test
jmp
xor
cmpsl
xor
sbb
and
clc
std
xlat
call
mov
nop
dec
jmp
les
aam
push
ss
mov
outsl
int
dec
call
adc
push
ds
negl
insb
xchg
mov
jne
addr16
cs
mov
das
fucom
in
sti
mov
xor
jmp
aam
and
or
stos
sbb
stos
call
cli
jb
lods
xorb
xchg
sbb
lds
enter
scas
fisttpll
cmp
mov
sub
out
xor
pop
fistpll
sbb
lcall
dec
sub
es
inc
jo
js
shll
mov
xchg
jae
dec
adc
xlat
jmp
sub
mov
add
insl
bound
fistl
aaa
xor
test
repz
pop
xor
cmp
inc
je
out
sahf
xchg
arpl
sbbl
subl
push
sti
scas
lods
sbb
stos
fwait
hlt
sub
out
cmc
jp
pop
add
push
out
scas
and
loopne
aaa
xor
inc
push
cld
xchg
iret
push
push
xor
add
sub
stos
decl
fs
inc
or
in
push
cmc
in
add
int
adc
fcmovne
movsb
insl
sub
xchg
mov
ljmp
inc
out
ljmp
pop
mov
adc
sub
scas
clc
dec
mov
cmp
push
das
mov
and
sbb
rolb
push
push
sbb
jmp
push
dec
mov
ficoms
movsl
or
dec
sub
mov
add
out
sahf
and
xchg
jmp
jg
or
dec
add
cmp
test
mov
sub
sbb
inc
call
dec
mov
push
std
sahf
stos
sbb
adc
aad
icebp
popa
jbe
xchg
jmp
sbb
in
dec
push
dec
sti
lea
scas
dec
push
test
out
cmp
call
cld
popa
xor
les
repz
testl
lcall
mov
pusha
sub
xor
mov
xchg
mov
mov
test
je
cmp
sub
jnp
cmc
sti
imul
jl
dec
outsl
fcoms
std
es
and
lret
incb
and
pop
jbe
mov
iret
loope
sub
test
lcall
mov
aas
insb
cld
mov
cmp
test
decl
xor
arpl
mov
push
imulb
aam
iret
push
pop
jno
icebp
jmp
lcall
in
pop
or
xchg
add
jle
or
sub
sbb
cld
call
pop
push
mov
sub
aas
lods
das
pushf
stc
jno
inc
cli
add
loopne
es
jg
add
push
sub
std
jno
out
pushl
add
add
iret
xchg
sub
add
mov
jge
mov
push
jg
sti
mov
lcall
and
adc
sub
jo
jecxz
enter
sti
ljmp
xchg
fs
jo
inc
pop
push
imul
or
pop
test
aas
fidivs
js
adc
lea
je
les
or
rolb
adc
outsl
clc
pushl
imul
push
das
mov
iret
pop
iret
xor
inc
loopne
jg
call
cmpsb
fmul
int
mov
mov
dec
push
mov
test
xor
dec
jg
incl
lock
adc
lcall
adc
jb
xchg
decl
adc
in
in
dec
mov
adc
shll
clc
push
lret
xor
ret
and
dec
pop
outsl
cli
sarl
iret
jecxz
jb
pop
mov
sbb
fwait
scas
add
add
jecxz
xchg
sbb
loop
xchg
test
test
lcall
mov
sub
sti
and
mov
mov
pusha
in
or
pushl
lods
mov
dec
mov
mov
cmp
in
rorb
testl
mov
and
mov
sti
neg
negb
jbe
cmpsl
fwait
call
gs
cmp
lods
lea
pop
fwait
jmp
or
incl
mov
fwait
jg
add
mov
cs
and
mov
mov
fidivs
jmp
or
xor
cli
cmp
inc
dec
out
add
daa
stos
in
or
mov
push
push
jb
scas
adc
push
lret
inc
mov
js
mov
mov
adc
fisubrs
pop
test
in
fldcw
push
mov
pushl
adc
ss
jb
fcmovne
adc
pop
mov
inc
decl
or
and
xor
jae
cmpsl
mov
das
jbe
ljmp
fsub
call
cmpsb
dec
push
data16
fstl
or
repz
and
nop
cmp
ljmp
loope
or
ret
mov
lods
int3
je
jp
cmp
lcall
insb
loope
inc
scas
push
push
push
pop
and
mov
jmp
and
sub
sarb
stc
pop
pop
sbb
mov
rorb
lcall
xchg
xor
lods
mov
movsl
or
cli
jno
test
int3
fnstcw
xchg
loop
or
call
sub
adc
or
cmpsb
push
aas
inc
push
mov
jle
mov
and
mov
mov
clc
cmp
ljmp
push
mov
mov
inc
and
jl
shll
or
adc
xchg
in
mov
cmp
pop
jno
dec
xor
mov
jno
and
or
ljmp
mov
aad
ljmp
mov
pop
add
and
aas
fmul
jnp
outsl
mov
incl
clc
test
loopne
dec
ss
je
jo
add
imul
fidivl
jmp
daa
outsl
into
ficompl
call
loopne
cld
inc
adc
inc
pop
dec
mov
scas
xchg
insl
ljmp
stc
mov
cmp
ror
mov
pop
jnp
aaa
cmpsb
ljmp
lea
popf
add
cmp
repz
rcrb
or
mov
scas
lcall
ja
je
aad
loope
fsubs
out
sub
mov
add
pushf
ret
das
pop
push
add
arpl
int
out
repnz
fistl
mov
or
aaa
jp
gs
xor
xchg
sbb
movsl
lds
call
push
stos
jb
mov
lds
xor
shlb
sbb
sbb
cmp
lods
decl
push
aam
mov
shrb
loop
ljmp
push
icebp
and
scas
or
cmp
xchg
rcrb
dec
pop
sbb
jmp
mov
aaa
mov
je
jmp
dec
and
mov
adc
pushl
xor
add
dec
lahf
add
inc
dec
jecxz
cmpsb
mov
pop
and
mov
dec
ljmp
or
inc
adc
mov
pop
lds
mov
fisubrl
mov
cmp
mov
scas
sbb
cmpl
mov
add
pop
push
insb
aas
mov
sub
aas
cli
push
or
nop
andl
popa
jg
decl
test
adc
xor
xlat
cmpsb
add
push
jno
shll
jne
jmp
jge
filds
adc
or
andb
in
mov
in
inc
aam
loop
pop
lret
test
mov
pop
sahf
mov
popa
popa
xchg
mov
test
mov
fcoml
sub
jne
push
cmp
sub
out
xchg
cmp
outsb
xchg
cmp
decl
out
icebp
and
lret
push
stos
jl
flds
lcall
push
sub
mov
jecxz
stc
dec
stos
mov
pushf
xchg
je
in
psubb
cld
mov
and
fwait
push
fstps
add
lret
aas
sub
cltd
cmp
jmp
cmp
cmpsb
lock
push
sbb
inc
int3
mov
fldl
jl
loope
push
mov
lcall
int
inc
add
jne
pop
sbb
cmp
jmp
mov
xor
loopne
mov
dec
xor
int3
jne
repnz
and
inc
sub
and
loope
mov
pusha
enter
push
aaa
mov
adc
jecxz
jns
std
xchg
mov
add
sahf
cmpsb
push
push
dec
dec
or
cli
jae
pop
xchg
sbb
cmp
cmp
dec
and
addr16
sahf
push
ret
jbe
call
out
add
pop
or
imul
and
dec
rcrl
inc
sub
int
insb
mov
jns
pop
jl
xchg
pushf
jp
out
sub
icebp
ss
push
sub
sub
pop
jae
xor
movsb
call
ljmp
std
sbb
sbb
test
lods
jl
jns
iret
pushl
ret
jg
sub
aas
cmp
mov
outsb
test
or
inc
sub
popf
push
in
cwtl
xchg
jmp
aad
mov
xlat
sbb
inc
xor
adc
or
cld
call
and
insl
lea
icebp
test
xor
sbb
fisubrl
cli
outsl
cli
out
movsb
xchg
mov
push
cmpsl
pop
out
movsb
in
add
lods
incl
cwtl
dec
int
icebp
or
sub
faddl
in
mov
jnp
in
xor
aas
cmpsl
push
and
sti
fs
cmovns
mov
test
fbld
outsb
jecxz
addr16
lcall
mov
xor
dec
xchg
test
movaps
dec
push
movsl
mov
cmp
bnd
int3
mov
outsb
lcall
inc
cmp
aas
pop
movsl
sbb
sti
mov
mov
jb
add
jnp
fnstsw
push
pop
jle
or
inc
or
add
jge
out
daa
dec
sahf
out
std
pop
gs
jmp
pop
call
cmp
jb
xor
jns
aad
jle
lret
xchg
ds
insl
sbb
outsl
in
movsl
pop
or
mov
loope
incl
cmp
lods
imul
jmp
loop
add
dec
sbb
push
add
dec
js
or
test
sbb
popa
cmp
iret
fisttpll
ss
jno
clc
and
lret
pop
xor
jl
adc
mov
xchg
fwait
inc
mov
jmp
sar
inc
data16
xchg
sub
pop
add
jae
aad
xchg
and
pop
mov
lods
fbld
enter
lcall
fcompl
loopne
mov
std
push
jl
scas
imul
fs
add
call
push
inc
cs
mov
clc
adc
in
test
hlt
jg
cli
xchg
leave
test
decb
xchg
inc
test
rcll
jo
cli
imul
rclb
lret
sub
aam
jl
mov
lock
push
ret
or
incl
pop
push
xchg
lods
adc
icebp
and
subl
mov
loopne
xchg
lret
dec
mov
call
cmp
or
or
add
lret
daa
arpl
push
jecxz
aam
xor
cli
mov
adc
inc
enter
or
sub
and
or
daa
mov
and
sbb
sbb
das
sub
popf
and
adc
incl
cmpsb
mov
xchg
jb
mov
jno
aad
je
lcall
sbb
push
and
xor
es
jmp
rcll
xchg
lea
jp
mov
mov
subb
mov
mov
cmp
or
inc
frstor
stos
cmc
cld
xchg
stc
xorb
pop
js
jmp
dec
rol
dec
pop
cwtl
inc
mov
pushf
pop
and
push
fwait
or
ljmp
pop
ds
arpl
imull
int
xchg
in
les
mov
js
vmovsldup
lcall
inc
xor
mov
add
cmp
and
test
mov
lret
push
insl
jg
call
pop
jge
ror
mov
xor
jmp
negb
push
cmpsb
pop
inc
ret
out
mov
imul
rcll
dec
cs
int
cmc
dec
aas
lcall
xchg
and
sbb
in
daa
lret
scas
test
aam
pop
jne
sahf
jmp
or
in
jmp
add
out
dec
pusha
mov
into
dec
pop
scas
aaa
or
fstpl
out
pushf
mov
ficoml
jp,pt
sbb
add
push
pop
xchg
ficoms
lcall
jge
outsl
xor
push
jns
mov
dec
in
mov
clc
fdivs
out
add
mov
sub
push
inc
shl
icebp
lcall
add
andb
decl
add
lret
mov
pop
xchg
mov
add
sbb
pop
loopne
std
pushf
cmpsb
hlt
fidivs
cmpsb
dec
mov
pop
icebp
insb
test
fwait
jno
enter
cltd
jns
jnp
adc
jmp
loop
int3
in
cmp
lea
pop
inc
sbb
fldenv
and
cmp
jg
adc
mov
mov
sub
mov
insb
or
push
popf
mov
aad
frstpm(287
imul
cmp
jle
push
push
inc
mov
jg
inc
imul
mov
out
pop
lock
movsb
rcrl
lods
pusha
jecxz
lock
pushl
rorb
cmp
cmp
cmp
mov
and
fdivr
ljmp
ljmp
in
lcall
cli
inc
and
lds
std
call
adcb
ret
repz
cmp
pop
xchg
shll
test
jmp
pushl
into
in
call
jmp
push
inc
push
lcall
int3
cmp
call
sub
nop
lcall
ret
xor
mov
fiadds
jmp
ljmp
adcb
mov
imul
jns
mov
ja
xorl
push
andl
mov
shlb
mov
and
dec
sbb
rorb
stos
or
pop
fcompl
stc
xor
enter
ljmp
add
clc
jmp
sahf
mov
insl
mov
scas
mov
pop
je
jb
sub
call
jae
cmp
test
ljmp
inc
adc
cmp
dec
xchg
sahf
movsl
jmp
aam
mov
sbb
data16
mov
sbb
std
pop
in
adc
jecxz
movsl
sub
mov
decl
fucomi
cli
push
out
rcl
mov
scas
xchg
out
dec
add
pop
cli
jmp
jne
insl
faddp
pop
jge
ret
les
int3
push
and
imulb
cmc
aad
jecxz
decl
lock
pushf
outsl
mov
sub
cmp
push
out
lahf
movl
xchg
mov
sub
xchg
sbb
sarb
fidivs
sahf
cmc
add
fdivr
add
mov
or
shrb
ljmp
in
xor
loop
insb
dec
and
incl
push
pop
bound
and
adc
clc
stc
or
out
dec
pushf
mov
push
xchg
pop
push
mov
lods
mov
dec
incb
xorb
in
addr16
lea
push
pop
test
adc
in
mov
pushf
xor
fidivs
dec
lcall
cmpsl
cmpsb
mov
lods
leave
ja
stos
add
inc
fwait
in
adc
clc
push
cmpsl
sub
stc
les
daa
cmpb
mov
adc
cli
xchg
xchg
leave
xchg
jp
mov
ljmp
jo
dec
mov
addr16
mov
out
dec
addr16
add
decl
out
or
mov
jmp
pop
push
jno
orl
lret
clc
push
jo
ret
outsb
je
ret
divb
iret
add
shll
movsl
incl
inc
les
in
mov
adc
cmp
push
rcr
bound
mov
ds
dec
or
repz
xchg
mov
xor
push
icebp
push
xor
subb
adc
clc
mov
pop
pop
jp
clc
pop
mov
add
pop
jbe
fstps
dec
test
sbb
mov
and
add
sub
push
sti
ficomps
les
sbb
addr16
dec
call
sahf
popf
sbb
hlt
jg
std
iret
xchg
cmc
divb
je
xor
ret
and
push
incl
mov
test
ret
push
mov
or
and
icebp
imul
test
push
mov
sarb
sbb
inc
lret
push
shlb
sti
jno
jbe
shrl
cld
mov
mov
xor
xchg
movsb
not
mov
xlat
mov
dec
xor
ljmp
add
cld
push
mov
add
jl
out
jne
lea
add
pushl
inc
xchg
pop
add
test
lret
jb,pn
cs
lock
add
iret
xchg
enter
clc
jp
movsb
loop
xor
jno
js
mov
dec
ss
add
sub
shrl
out
cwtl
pop
lret
call
sbbb
push
mov
pop
xor
repnz
das
popf
mov
inc
cltd
adc
pushl
xchg
je
pop
nop
rclb
lret
sbbl
sahf
xchg
push
cmp
xor
or
jmp
push
stc
dec
lods
in
lcall
out
jb
orl
dec
push
out
cmp
pop
push
dec
lcall
adc
mov
or
adc
call
sub
call
mov
sub
outsb
jmp
cli
xchg
shrb
sub
cmp
lock
pushl
jecxz
push
push
xchg
push
pop
divl
rep
movsl
mov
cwtl
stc
enter
sub
cmp
pop
in
add
daa
push
insb
movsl
gs
or
in
mov
out
lods
ljmp
icebp
das
push
jns
xchg
orb
addr16
cmp
das
add
lcall
mov
lcall
mov
jnp
jle
pop
mov
cmp
lcall
push
xor
pop
jo
mov
cmc
jmp
sub
nop
jg
pop
movsl
jmp
mov
cmpsb
xchg
outsl
mov
lds
pop
sub
incl
dec
ja
xchg
pop
mov
xchg
aam
adc
push
std
incl
fldl
stos
adc
adc
in
inc
in
movsl
sub
or
icebp
fldl
sahf
xchg
jbe
aas
sub
lcall
push
mov
pushf
fadds
test
sti
jbe
iret
fcomps
mov
out
add
js
sbb
xchg
ds
ds
scas
ss
in
push
xchg
mov
jns
pop
cli
outsl
ljmp
mov
shrb
test
pushl
mov
jns
outsl
into
imul
nop
lods
dec
or
cmp
add
pop
ljmp
sar
mov
and
dec
nop
repnz
mov
pushf
mov
lcall
daa
mov
cmp
leave
add
push
xchg
xor
je
inc
addr16
decl
add
aam
pop
fadds
and
or
add
decl
shl
pushf
bound
sub
pop
xor
jecxz
sti
ret
add
mov
jecxz
insb
mov
clc
test
adc
xchg
sub
lods
fildl
cltd
xchg
inc
cmpsl
inc
ljmp
aaa
ret
ret
unpckhps
inc
push
hlt
cmp
inc
test
incl
sbb
das
push
mov
insb
lock
adc
movsl
xchg
nop
int3
sbb
ror
call
ljmp
xor
loop
sub
mov
arpl
imul
pop
iret
daa
push
cmp
testl
cmpsl
xchg
xor
roll
ja
cli
dec
cmp
loopne
mov
lds
adc
in
mov
push
subb
add
and
pop
outsb
xorb
decl
jle
insb
push
and
cmp
jp
pop
adc
pop
std
dec
ret
imul
sub
pushl
stos
test
call
xlat
mov
insb
push
int3
mov
push
adc
pop
sub
sub
jbe
dec
dec
inc
sbbb
lcall
or
adc
xor
outsl
fisttpll
in
out
in
imul
jnp
xchg
test
fcomip
decl
test
xchg
xchg
in
cs
insl
hlt
shrb
cmpsl
inc
and
call
dec
pushf
call
insb
mov
sbbb
push
xchg
js
pop
cmpsl
mov
lcall
inc
data16
cmp
cwtl
push
push
sub
pop
in
lcall
or
push
fistps
and
mov
sti
dec
xor
sub
repz
xchg
mov
sbb
dec
lock
popa
xchg
mov
lret
lods
pop
jno
cmpsl
dec
pop
cmp
adc
subl
scas
and
pushf
add
imul
inc
mov
xlat
and
jecxz
mov
sbb
pop
lret
cmpsb
mov
add
pop
ret
mov
pop
lahf
xchg
jmp
call
or
pop
mov
jge
repz
test
stos
sub
idivl
test
pushl
jl
test
std
mov
mov
jne
adc
sub
adc
mov
pop
sbb
jb
jmp
aad
hlt
dec
dec
lock
or
xchg
jnp
xlat
es
es
std
lcall
shrb
cwtl
jmp
sub
popf
adc
xchg
jmp
jns
in
popa
add
or
xchg
fincstp
xchg
cmp
push
bnd
loop
daa
pop
push
cmp
pushf
xchg
test
call
fldcw
pop
je
add
xchg
mov
jmp
pop
shrl
popa
xchg
loope
mov
sub
cld
cli
pop
or
popa
les
push
lret
dec
push
loopne
frstor
fisubs
adc
dec
mov
loope
iret
clc
add
cli
fsubl
into
mov
mov
inc
push
dec
lret
push
aas
xchg
push
adc
ja
lock
and
incl
or
inc
fisubrl
andb
pop
dec
out
pusha
stc
pop
jp
and
pop
cmpsb
rol
ljmp
mov
sbb
cld
mov
push
es
xor
or
ljmp
pop
cmp
mov
jb
adc
adc
loope
push
mov
pop
gs
inc
sub
addl
sub
aad
jg
sbb
pop
or
mov
dec
push
inc
or
mov
sbb
out
addr16
aad
or
inc
das
jae
loope
lods
call
jp
jne
adc
mov
ret
xchg
in
cwtl
push
xor
lock
sub
scas
pushf
incl
gs
cmc
jne
pop
sub
mov
loop
mov
jle
mov
mov
push
std
scas
clc
jmp
jmp
addr16
popa
ds
in
enter
mov
jle
in
or
call
rcrb
decl
push
mov
fisubl
add
pop
out
sub
inc
aad
fimull
ljmp
dec
dec
aad
mov
push
insb
xchg
adc
aam
mov
xchg
pop
fadd
xor
jb
inc
pushl
add
loope
push
xor
mov
jmp
fisubs
fsubrl
push
push
pop
int3
xchg
shll
mov
jmp
jb
xlat
ljmp
repnz
mov
push
jle
cmp
dec
les
lret
sti
imul
pop
xchg
fcmovnu
jno
mov
adc
add
push
mov
clc
jb
lcall
scas
clc
decl
push
lods
pop
jl
out
in
cmp
popa
out
xor
fcmovnb
stos
sub
mov
scas
repnz
lods
lret
push
xchg
mov
insl
leave
aaa
pop
test
push
add
jmp
in
push
mov
pop
cmc
imul
sbb
inc
lock
push
scas
fnsave
pop
xchg
mov
adc
mov
fistl
push
mov
dec
stc
lret
add
nop
fdivrl
xchg
fstpt
stc
mov
mov
push
cmp
fsubl
pop
jne
repz
std
fdivr
pushl
movsb
rclb
sub
xchg
and
int3
je
sbbb
xchg
adc
incl
xchg
fisttps
add
push
test
cli
in
aas
cltd
test
jmp
je
adc
adc
pop
push
inc
call
inc
or
sub
aas
xlat
fdivr
incl
cmpsl
lods
or
mov
andb
inc
dec
mov
xchg
jb
push
inc
idiv
pushl
outsb
pop
rorb
mov
lcall
hlt
adcl
hlt
dec
in
and
clc
incl
push
sub
sub
adc
dec
lret
popa
insl
and
mov
and
mov
ljmp
mov
fldcw
jp
pop
cmp
jno
pop
mov
stos
mov
hlt
adc
adc
xchg
jb
sbb
mov
lds
push
int
lahf
or
add
pop
pop
push
dec
xchg
push
outsl
clc
adc
inc
cltd
xchg
jbe
add
mul
lcall
fs
dec
pop
fs
cmp
int
lcall
je
add
mov
clc
movsl
push
and
out
fisttpll
xchg
lods
push
outsb
out
dec
jp
mov
hlt
jno
xchg
jmp
sbb
fsubr
xor
xchg
pop
lea
jns
jns
jnp
sahf
aaa
push
test
dec
pop
loopne
incl
stos
xchg
ret
ret
mov
or
dec
incl
xor
scas
cmp
lock
data16
jae
decl
and
adc
push
bound
leave
pop
pushf
aas
test
mov
xchg
push
sbb
in
mov
inc
out
lock
mov
cmp
lock
sub
push
push
mov
inc
adcl
add
pop
sub
pop
cld
mov
and
mov
jg
call
out
arpl
push
cwtl
cmp
mov
lahf
mov
ss
mov
inc
or
arpl
test
cli
sbb
jmp
mov
mov
or
pop
mov
call
push
pop
and
dec
scas
lods
cmp
mov
cmpsb
les
jmp
jp
xor
mov
dec
call
scas
add
or
cwtl
in
mov
jg
inc
lret
or
dec
push
sahf
push
mov
or
ljmp
inc
decl
fcomps
mov
ficompl
mov
adc
jbe
inc
pop
rorb
sub
in
mov
andb
mov
cmp
out
push
sub
gs
mov
pushf
adc
icebp
lcall
adc
add
pushf
insb
out
inc
xor
incl
decb
xor
mov
jno
shl
adc
aaa
mov
repz
mov
sbb
pushf
scas
mov
cmc
add
pop
sahf
and
jb
dec
ret
stos
std
and
xchg
lahf
mov
inc
jbe
imull
ljmp
testb
pop
sub
xchg
mov
sub
je
fistpll
call
mov
dec
filds
sti
fbld
xorl
mov
jecxz
loopne
das
mov
lcall
es
push
adc
je
mov
mov
xchg
adc
call
scas
sbb
xor
xchg
lret
cld
sbb
jnp
sbbl
adc
pushf
out
xor
rcl
inc
cmp
inc
loopne
pop
xchg
mov
sbb
imul
xlat
loope
nop
pop
lahf
xchg
daa
lock
aad
or
dec
inc
cmp
insl
in
xchg
ljmp
jb
xchg
and
or
les
pushl
dec
ret
ljmp
pop
mov
arpl
pop
cmp
sub
pop
pusha
mov
fiaddl
mov
ret
mov
jmp
sub
or
or
cli
aas
call
jle
inc
outsb
cmp
stc
xchg
pop
rcr
fcomps
jmp
sbb
pop
imul
pop
mov
fdivl
cli
adc
jecxz
jmp
icebp
adc
ret
push
cmp
push
and
test
xchg
clc
out
sarl
popa
or
sbb
or
lcall
loopne
dec
xchg
jne
test
sbb
cld
adc
mov
sarb
jne
sub
call
sbb
ret
lret
mov
push
sub
mov
sbb
dec
fs
push
sbb
and
ja
dec
insb
add
and
call
mov
sub
scas
iret
aad
jmp
aam
sub
fbld
in
dec
fdivl
sub
iret
mov
and
pop
jmp
ficomps
pop
push
decl
movsb
lcall
mov
int3
ljmp
push
jl
incl
mov
lds
pusha
mov
pushf
jbe
xchg
outsb
push
enter
add
inc
sbb
mul
outsl
xchg
loope
jmp
mov
sub
pop
inc
repz
movsl
push
xor
dec
mov
arpl
or
in
mov
cwtl
add
iret
mov
popf
les
jg
jmp
dec
add
sub
sbb
push
cli
cmp
lock
bound
int
ret
fsubp
dec
in
fcomip
pop
sub
jno
and
mov
decl
in
insb
inc
inc
ret
jl
mov
adc
std
pop
loop
mov
adc
cmpsl
ljmp
xchg
jbe
sub
dec
inc
mov
xor
ja
das
fmuls
aaa
adc
lret
cmp
incl
dec
sub
jmp
dec
mov
mov
jns
jae
sbb
iret
inc
mov
jmp
xor
test
cmp
sti
and
gs
shlb
inc
outsl
xor
push
and
in
cmpsb
test
in
xchg
xchg
je
mov
inc
cmp
xorl
lcall
ljmp
add
lcall
cmc
jp
test
xchg
lcall
stos
mov
mov
arpl
mov
data16
repz
out
xchg
xchg
incl
call
movsb
test
adc
ret
and
push
jg
mov
or
call
int3
jae
add
lret
mov
adc
insl
mov
pushl
fildl
movsb
push
xchg
adc
xchg
lahf
sar
decl
mov
test
sub
dec
mov
mov
lds
xchg
in
jg
in
cli
les
movsl
aam
jle
xchg
push
hlt
addr16
jno
dec
sbb
cld
ja
mov
decl
push
fisubs
pop
sub
inc
mov
mov
cmp
outsb
pop
and
pusha
xchg
out
dec
fsubs
dec
stos
push
mov
and
cmc
sub
test
xchg
jne
sub
pushl
out
clc
cld
and
xlat
xchg
jnp
imul
int
dec
mov
std
das
adc
cli
test
ljmp
push
xchg
repz
sbb
ficoms
jne
pop
xor
dec
push
orl
lcall
add
pop
mov
sub
inc
cmp
pop
jno
cmc
jno
neg
cld
in
jmp
dec
dec
int
add
pushf
adc
icebp
mov
dec
popf
dec
pop
mov
push
jns
pop
decl
faddl
mov
pcmpgtb
mov
sbbb
push
mov
loop
cmp
pop
stc
push
ljmp
aad
out
jns,pt
dec
adcb
lcall
insl
aas
ret
mov
hlt
mov
in
xchg
and
insl
stos
in
inc
rorl
data16
aad
aad
add
incl
fsubs
lcall
sbb
fidivl
add
sub
mull
mov
lcall
mov
cmp
jg
nop
scas
test
add
cmp
aad
cltd
aad
in
ljmp
ljmp
movb
sub
sbb
out
pusha
xchg
sub
ljmp
push
and
data16
xchg
faddl
mov
stc
add
out
push
fincstp
call
cmp
pushf
mov
in
in
out
shl
lret
cmpsl
push
mov
sar
shll
push
repz
mov
lods
bound
adc
or
xor
lret
decl
fs
test
sbb
jmp
pushl
jnp
lods
fcomip
fbld
inc
rorb
ljmp
bnd
iret
ss
push
and
lods
scas
int
nop
les
out
out
xchg
inc
call
sub
pop
mov
and
shlb
adc
int
fcoml
jns
insl
aaa
mov
push
pop
lea
nop
push
clc
jb
in
gs
aas
shll
jg
outsb
adc
ljmp
dec
insb
mov
sub
stos
sbb
push
push
add
dec
mov
pop
out
ja
fwait
incl
lret
stos
out
jb
mov
sbb
xor
je
cltd
out
push
movsb
icebp
icebp
jle
pushl
movsl
in
scas
les
jp
pop
push
icebp
pop
sbb
push
jbe
out
sbb
fbstp
push
ja
xchg
cs
pusha
push
push
fcomp
daa
mov
mov
sub
stos
stos
ljmp
dec
mov
dec
mov
popf
cmp
pop
insb
pop
push
mov
lock
pushl
cmp
dec
cltd
fsubl
add
fnstcw
lcall
fsubrs
jmp
mov
pop
adc
cmp
mov
call
adc
push
lods
lds
cli
fists
add
mov
push
fbstp
push
out
inc
mov
loop
jns
cwtl
mov
in
sarb
bound
jmp
ljmp
je
sub
sbb
pop
mov
pop
mov
outsl
jmp
das
mov
cmovo
sub
cmp
adcb
pushl
orl
movsb
popf
pop
push
mov
xchg
xchg
adc
out
clc
or
popf
push
lcall
clc
hlt
pop
dec
out
sub
jecxz
in
jb
push
mov
mov
mov
incl
jmp
mov
stos
dec
xor
ja
gs
push
jecxz
into
xor
ret
xchg
in
call
shr
xchg
adc
test
sbb
clc
cmpsb
cmp
sbb
sahf
inc
and
lods
mov
sbb
rcrb
sbb
jl
adc
push
mov
stos
fcompl
call
mov
mov
push
push
rcll
sub
rcll
data16
lcall
mov
cwtl
dec
dec
imul
roll
lcall
ffreep
sub
imul
mov
or
jg
ret
sub
dec
subb
and
ja
or
mov
es
pop
mov
inc
test
inc
push
ret
outsb
xor
sti
push
mov
xor
in
jnp
or
xor
xor
decl
dec
cmp
fisubrs
cld
adc
adc
and
pop
int3
rorl
lock
addr16
jmp
mov
pop
dec
sbb
mov
data16
cmp
movsb
push
mov
scas
jae
mov
call
push
pop
dec
pop
jnp
mov
push
adc
dec
lea
mov
inc
fbld
mov
xchg
mov
dec
clc
xor
sub
lret
sbb
xlat
push
sahf
pop
sub
lahf
cli
pop
jl
shlb
stc
arpl
int
fsubp
roll
rcr
xchg
outsb
icebp
xor
daa
xor
rcll
sbb
addl
addb
call
cld
cmp
mov
stos
push
int
loopne
call
mov
decl
mov
sub
scas
lret
mov
jne
call
pushl
pop
pop
xchg
sbb
push
sub
sbb
pop
inc
jmp
or
xlat
mov
call
or
pop
sub
pop
cmpsl
fisttps
mov
jnp
push
cmp
rcr
sar
xchg
ds
cwtd
jne
jg
outsb
rcrl
out
das
std
js
push
loop
or
ljmp
push
xor
es
fcoml
and
out
aad
data16
dec
lds
jp
lea
adc
ret
push
dec
iret
adc
addr16
lret
loope
mov
dec
jg
lcall
in
inc
mov
adc
push
xchg
rorl
test
lods
sbb
cmpsl
cmp
mov
insl
sbb
or
incl
sbb
sarl
ss
in
push
jecxz
lcall
mov
sti
in
push
ljmp
pop
xchg
add
inc
mov
xchg
and
fistpll
lcall
cs
je
outsb
cwtl
push
fs
xor
jg
cmpsl
insb
mov
jmp
xor
cmp
hlt
jb
mov
jl
or
jecxz
adc
mov
ljmp
fbld
jo
ss
jb
push
scas
roll
pushl
jg
sbb
stos
jns
pop
cmpl
inc
adc
xor
add
sbb
push
cli
xchg
sub
fmul
bound
scas
xchg
cmp
pop
vxorps
push
call
repnz
mov
insl
sbb
leave
out
cmp
mov
scas
mov
into
cmp
or
call
inc
into
inc
scas
jne
cmpsl
xchg
into
outsb
pop
fmul
mov
jp
xor
sbb
mov
js
fsubrl
incl
lret
mov
and
xor
mov
mov
jmp
sbb
xchg
mov
xchg
sub
push
and
mov
sub
push
in
cmp
lcall
jmp
sub
in
hlt
jnp
lods
lidtl
and
int3
inc
daa
sbb
ljmp
stc
rcrl
dec
repnz
sbbb
movsl
mov
test
out
cld
loopne
or
push
decl
mov
dec
je
xchg
adc
mov
dec
fnstenv
ret
cli
mov
lcall
inc
mov
loope
xchg
imul
imul
xchg
inc
mov
rcrl
jg
aad
xor
push
ret
and
sbb
cmp
js
outsl
outsl
jmp
js
popf
cmp
fucomip
inc
inc
jo
stos
es
je
cltd
push
sarl
jle
sbb
lcall
push
in
xchg
in
loop
int3
scas
hlt
int3
push
xor
cmp
mov
mov
dec
pusha
cmp
pushl
dec
xor
sbb
repz
push
gs
insb
icebp
in
inc
sti
pop
pop
cld
pop
xor
call
cmp
jb
or
cmp
or
fldl
sub
pushl
cld
fisttpl
les
sub
fcomps
and
ljmp
loope
loopne
pop
jnp
and
popf
sub
cmp
jmp
aas
js
lcall
push
stos
jo
push
push
repz
sub
ret
ret
repnz
sbb
mov
daa
xchg
pop
cli
aam
jle
mov
inc
jecxz
sbb
mov
or
ljmp
sarb
repnz
rorb
das
fistps
outsl
lahf
dec
das
jmp
call
mov
clc
mov
lds
xor
push
push
in
js
sub
movb
test
in
mov
xor
clc
and
inc
incl
sub
cmp
jne
test
testl
add
jg
cli
clc
sbb
mov
xlat
push
mulb
lcall
ja
pop
fcos
push
cmp
mov
mov
or
movsbl
ret
jecxz
push
imul
shlb
sarl
xlat
in
mov
dec
fwait
sbb
push
ss
push
xor
mov
incl
test
leave
or
test
push
and
dec
push
test
push
mov
push
mov
or
jmp
rorl
addr16
shlb
add
sbb
push
lahf
sub
jge
insb
dec
lahf
sbb
decl
cmpsl
inc
xor
daa
call
stos
inc
inc
cmp
add
bound
cmp
imul
loop
add
ss
cwtl
js
xor
fwait
inc
test
aad
clc
jg
xchg
cld
fdivs
push
mov
push
or
sbb
das
inc
iret
inc
ljmp
lahf
mov
fcmovu
test
inc
or
pop
cmp
movsl
scas
in
or
mov
stos
cs
pushl
ja
mov
inc
lods
shlb
adc
cmp
fcompl
add
js
ljmp
jns
decb
mov
clc
mull
adc
mov
pop
and
call
decb
jge
lcall
call
enter
inc
repnz
rcrl
and
mov
pop
stos
mov
pop
call
cwtl
pop
mov
mov
sbb
pop
push
or
lds
aad
or
push
out
jno
sahf
ljmp
fadd
sbb
adc
scas
out
push
js
pop
and
and
push
inc
cli
jno
xor
shll
mov
pushl
repz
inc
fisttpll
movsb
add
add
pop
push
xor
aas
pushf
arpl
aaa
push
mov
sahf
andb
ss
add
push
jge
ja
incl
fdivs
xor
xchg
pop
jne
repz
mov
jle
ljmp
sub
dec
push
add
pushl
lahf
cwtl
fistpll
mov
test
lcall
idiv
decl
icebp
fmuls
into
pop
push
sbb
inc
pushf
xchg
jae
xor
add
outsl
in
dec
call
push
cmp
ljmp
in
or
xchg
push
and
test
dec
std
pushf
sbb
mov
pop
cs
jmp
jmp
repz
lods
stc
sbb
and
add
dec
jmp
mov
repz
clc
add
xor
popf
cltd
push
mov
aas
pop
and
mull
or
jns
or
clc
imul
ret
or
push
js
dec
rcrl
test
call
mov
push
sbb
jg
pushf
push
out
jno
sbb
clc
push
and
push
adcl
push
in
out
je
dec
imulb
outsb
aam
stos
repnz
push
dec
cmp
xchg
xchg
jge
sbb
ljmp
out
sub
sbb
mov
jnp
scas
mov
add
int3
add
leave
push
out
std
jmp
icebp
loopne
cs
jecxz
xlat
pop
icebp
inc
lea
cld
call
iret
xor
jecxz
push
ja
xchg
test
pop
adcl
mov
shl
cli
or
push
mov
je
mov
push
rcrl
add
out
dec
pop
loopne
lcall
pusha
dec
clc
fwait
and
ret
ficoms
add
sti
sub
loopne
pushl
push
pop
or
movsl
fidivrl
dec
fidivs
outsb
roll
out
lods
jg
ljmp
mov
inc
sub
sbb
mov
push
dec
jbe
scas
add
adc
push
aad
nop
mov
btcl
popf
adc
out
data16
inc
push
rcll
xchg
lock
mov
cld
jle
push
mov
push
mov
jle
in
cmc
shl
jmp
and
mov
pop
loop
xchg
dec
pop
jae
aaa
pop
xlat
mov
cmp
mov
jb
fsub
push
add
movsl
dec
push
jl
and
jg
xlat
shrd
or
in
fsubrp
or
clc
lods
sbb
outsl
incl
xchg
int
push
rcr
data16
aad
push
scas
xor
dec
lods
int3
ljmp
lcall
adc
fsubrp
fildll
lcall
jg
inc
mov
data16
test
sahf
pop
movswl
fsubr
jg
dec
mov
out
or
lock
stos
ficompl
push
lods
in
mov
cwtl
or
pop
dec
je
lcall
jne
sub
cli
or
mov
cmc
inc
icebp
jl
lock
sub
ljmp
lea
xchg
out
mov
xchg
sbbb
mov
cmp
lcall
lret
xor
movsl
cmp
sbb
mov
cld
lcall
inc
push
pop
ret
xchg
pop
mov
test
and
call
push
add
popa
push
jle
pop
adc
sub
lret
nop
cmp
incl
out
jle
fdivrs
rcll
cmp
mov
xor
packssdw
push
dec
cmp
jns
mov
sbb
dec
inc
pushf
ja
mov
dec
ficomps
pushl
lret
xor
std
jmp
push
movb
sub
mov
push
ficoml
mov
dec
push
cmc
lea
data16
xor
push
stc
out
dec
lock
lcall
rclb
and
int3
das
mov
into
in
add
jae
xchg
or
repnz
fistpll
in
adc
push
jne
sti
mov
sti
inc
adc
incl
popa
popa
add
mov
aad
stc
cmpsl
mov
lahf
fisubl
lcall
mov
dec
paddd
push
faddl
xchg
cmpsl
xchg
outsb
adc
mov
cmpsl
cmpsb
jg
inc
mov
pop
shlb
xchg
xor
cmp
mov
stos
mov
call
aam
push
aaa
jne
in
scas
add
push
inc
dec
int3
jecxz
add
test
inc
xchg
add
lcall
xchg
push
mov
dec
call
mov
pop
lret
pop
leave
mov
cwtl
inc
mov
mov
pop
or
cmpsb
incl
cld
int3
mov
adc
push
mov
add
rclb
clc
ljmp
fiadds
insl
aam
mov
push
xchg
sbb
sahf
je
push
xor
aam
scas
ljmp
ja
sbb
scas
test
pop
loop
mov
test
dec
sbbb
aaa
sbb
mov
xchg
cmp
lret
xchg
inc
lds
ficompl
mov
add
je
jle
sub
cmpsb
xchg
fwait
add
ljmp
jle
shrb
push
es
jle
mov
repnz
dec
or
es
sbb
call
push
lcall
adc
shll
push
lods
cli
ds
lahf
lods
xor
inc
das
add
push
jbe
xchg
cs
loope
jo
shrl
jo
jnp
jno
iret
ret
or
call
test
dec
insl
push
fisubl
daa
xchg
cmp
sarb
push
gs
test
lret
out
pop
je
and
ffreep
jle
cmp
pop
bound
cmpsl
cmpsl
movsl
sbb
sub
dec
fistpl
sti
pop
ja
jp
jmp
sub
jmp
nop
mov
test
jp
mov
push
aad
fadd
push
lods
mov
mov
out
push
in
cmp
das
push
fcmovnb
das
test
mov
call
inc
add
mov
call
popf
cmc
mov
mov
pop
xchg
pop
in
daa
ror
sub
inc
sbb
fcompl
ljmp
js
fcoml
enter
int
pop
enter
in
daa
sti
xchg
clc
int3
clc
incl
cld
xor
ficoml
pusha
xchg
mov
cmp
pop
mov
ljmp
jp
jmp
idivb
pop
mov
imul
dec
jmp
mov
jbe
pop
dec
and
insb
mov
jle
testb
jae
jg
lcall
jno
into
imul
cld
push
fadd
insb
and
xor
pop
pop
xor
cvtpi2ps
es
bound
lods
mov
cld
lcall
ss
gs
stos
inc
and
cmp
and
inc
loope
fdivr
call
int3
push
out
mov
add
test
sbb
test
and
scas
cs
add
incl
loop
cmp
test
and
sub
dec
jbe
imul
frstor
jns
add
ficompl
lahf
mov
cmp
insl
push
jge
add
ljmp
adc
popa
sbb
shlb
mov
dec
pusha
adc
add
sbb
fnstsw
popf
push
add
inc
adc
lret
iret
mov
add
pop
xor
jg
and
add
xor
dec
mov
jae
push
out
in
sbb
pop
cld
jmp
pop
mov
pop
lds
dec
jo
cmp
pop
pusha
scas
mov
sbb
incl
push
and
stos
push
outsl
xchg
cmpsl
dec
gs
pop
push
cmp
sbb
inc
fldlg2
shrl
in
sub
out
test
iret
mov
push
xchg
sub
sub
call
mov
hlt
cmp
call
xor
out
or
lds
pop
out
js
leave
inc
in
xlat
fcoms
cmp
mov
mov
xlat
pop
scas
mov
ficoms
mov
pop
jbe
and
dec
push
leave
push
aam
or
stos
cs
mov
mov
xchg
inc
lret
push
mov
std
lds
add
and
ljmp
fidivrs
out
cli
in
les
fldl
inc
lods
sub
decl
xchg
inc
adc
mov
cwtl
mov
cmp
je
jg
int
fiadds
sub
cmp
in
cmp
call
inc
inc
mov
ljmp
xchg
pop
cs
and
mov
pop
and
dec
xor
pop
xadd
xchg
inc
and
push
xor
sub
in
std
cmp
push
jns
mov
mov
aas
cmc
and
sbb
or
sbb
mov
dec
sub
out
stc
xor
mov
jo
mov
add
push
and
mov
xchg
push
jae
outsb
sub
jnp
adc
xor
outsb
mov
in
test
xorb
decl
fsubrl
mov
shrl
out
adc
push
or
push
pop
lret
lds
pusha
shll
hlt
cmp
xchg
mov
fcomip
cmp
sub
and
sub
addl
loope
sub
cwtl
add
decl
and
cmp
in
xor
sbb
pusha
inc
xchg
mov
rorl
in
push
dec
std
lcall
dec
and
std
or
mov
sub
int3
cs
icebp
int3
insl
mov
incl
loopne
inc
aam
jmp
rol
push
add
inc
cmp
imul
adc
and
sar
sub
lods
incl
pop
sbb
mov
sub
push
and
das
sub
rcl
sar
ljmp
dec
push
xchg
shrl
xor
mov
pop
sbb
punpckhbw
cmp
jmp
jo
mov
fisubl
xorl
shrl
jns
mov
cmp
fs
incl
inc
mov
sub
dec
cmp
xchg
xor
mov
outsl
jno
ljmp
adc
std
shrb
xchg
dec
aad
in
sbb
test
inc
repnz
incl
adc
stc
aad
mov
faddl
mov
jnp
sahf
xchg
stc
sub
cs
mov
call
pop
test
sbb
fisubs
into
pusha
ficomps
jg
jg
pushf
movsl
xchg
in
lret
lods
inc
mov
out
xor
cmp
out
and
incl
int
dec
cmpsl
sub
insb
scas
or
and
shll
adc
daa
adc
fnclex
ja
pop
lock
or
pushl
iret
cmc
or
push
pop
add
stc
outsb
insl
frstor
ljmp
scas
cmp
push
clc
jge
lods
xchg
cmp
xor
icebp
push
push
call
cmp
push
dec
in
data16
xchg
xor
aaa
mov
addr16
xchg
loope
and
pop
sahf
ja
hlt
call
or
mov
add
mov
aaa
bound
lcall
mov
and
cmp
cmp
dec
push
jmp
mov
out
add
pop
mov
mov
dec
mov
lods
jo
daa
xor
sti
ud0
mov
fdivrs
rolb
push
out
mov
bound
rorl
mov
jns
insl
or
cmp
mov
int
jo
or
in
fwait
mov
jmp
adc
dec
out
mov
sub
xchg
xlat
test
jle
dec
movsb
outsl
mov
lahf
jno
pop
adc
lock
fistps
fiadds
lcall
inc
fs
dec
xor
dec
repnz
aas
cli
xchg
movsb
cmp
rclb
test
lahf
xchg
repz
push
das
and
xor
sub
cmp
test
ja
jg
lock
sub
xor
sbb
lods
stos
clc
lcall
incl
cmp
in
mov
insb
cmp
pop
scas
clc
out
cli
or
jmp
adc
idivl
add
jmp
or
mov
inc
mov
mov
xor
xchg
jns
add
out
or
mov
ljmp
sub
jno
iret
cs
fistps
jne
sbb
popf
stc
sub
fs
call
and
pop
sbb
mov
scas
int3
jg
push
mov
nop
pop
mov
jp
out
xor
sbb
cmp
and
ljmp
ja
int
pop
stc
cltd
or
xor
andl
out
test
inc
je
jne
push
and
pop
mov
cmp
mov
testl
jmp
icebp
loop
push
dec
outsb
and
adc
cmp
outsb
mov
sbb
fbstp
fnstcw
loopne
mov
push
ja
mov
mov
sti
loopne
xchg
pop
jmp
dec
int3
cwtl
popa
xchg
cwtl
das
cmpsb
shrl
cmp
lret
jg
ret
fldl
and
andl
adc
jg
out
enter
push
mov
lock
inc
or
sub
add
ljmp
add
dec
shrl
leave
jmp
inc
xor
ljmp
mov
jp
jns
std
sbb
fnstenv
pop
pop
lret
dec
lahf
mov
pop
icebp
mov
pushl
xchg
fs
push
psubw
iret
jp
outsl
lret
les
rcrl
push
filds
insl
push
pop
es
push
daa
pop
and
mov
cmp
adcb
cmp
orb
enter
shr
pushl
sarb
xor
cmc
sbb
clc
inc
ja
pop
cmp
clc
pop
sbb
decl
mov
fadds
insb
fwait
incb
fidivrs
cmp
aaa
in
repz
pop
lret
ljmp
sahf
test
stc
cmpsb
int3
enter
xchg
push
adc
xor
mov
mov
pop
xchg
add
pop
or
cmp
pop
pop
fbld
fstl
mov
enter
lahf
pop
ja
pop
push
cmpsl
sbb
lea
ficoml
xchg
adc
sarl
pushl
jecxz
pop
jg
cltd
out
fcoms
int3
cmp
push
sbb
pop
fstp
es
xlat
cmp
cmp
testb
and
in
or
addb
sbb
call
testb
push
cmp
and
fnsave
inc
xorb
jle
sbb
aaa
sbb
cmpsl
xor
adc
mov
clc
mov
hlt
jnp
xorb
lret
mov
out
jns
in
rolb
sub
cmp
ljmp
daa
xor
lods
in
pop
fwait
aaa
inc
aas
xchg
mov
call
inc
adc
insl
in
hlt
inc
mov
jg
pushf
ret
inc
jnp
push
lods
mov
aam
icebp
iret
pushl
lock
loope
sub
mov
cmp
push
mov
int
pop
sbb
aas
xchg
jbe
jg
out
mov
sub
popf
aam
std
mov
and
aas
xchg
and
pushl
enter
add
xchg
in
andb
cmpl
xchg
mov
inc
fcos
call
sbb
sub
lock
out
or
fdivrp
aam
xchg
mov
pushl
lahf
xor
and
enter
pop
shl
test
dec
jge
xlat
hlt
frstor
jmp
push
imul
xchg
pushf
fisubrl
jne
xor
stos
lods
add
fists
cs
push
aas
lea
adc
dec
pushl
or
push
in
std
jmp
xchg
and
push
sarb
fadds
in
movsb
rorl
in
sub
inc
jmp
aad
xor
call
out
cmp
popa
shl
pop
cmp
jp
stos
jle
addr16
cmp
popf
pop
xchg
test
cltd
shlb
inc
or
and
incl
call
lods
sub
adc
xor
test
push
xchg
jo
lcall
and
aas
fsubrs
outsb
lods
jp
sar
ss
pop
cmp
mov
fldcw
cmc
cmpsl
inc
jg
and
mov
and
lcall
adc
incl
inc
sub
fs
test
in
lahf
jnp
or
jl
adc
fmul
xchg
inc
movsl
scas
mov
leave
mov
jo
sub
fimull
adc
cmpsl
aad
jle
dec
cwtl
gs
dec
sub
es
cmp
adc
sbb
enter
lods
and
mov
loope
ljmp
lahf
inc
test
lods
aas
mov
icebp
inc
push
dec
mov
lock
loope
inc
out
ja
das
sub
push
addr16
and
pusha
leave
push
cmc
test
testb
sub
jmp
jno
inc
mov
test
sbb
pop
dec
dec
pushl
jecxz
aam
test
js
jno
sbb
jne
cmp
lahf
push
scas
mov
fcos
decl
mov
cmp
fidivs
mov
lods
pushf
dec
push
add
fistps
cmp
sar
fdivl
sub
push
cwtl
pop
movsb
iret
ret
in
out
sub
xor
mov
pop
xchg
xchg
movsb
add
mov
cmp
loopne
pushl
adc
jecxz
scas
cmc
imull
jg
jg
inc
jge
in
jp
add
inc
cli
mov
cmp
pop
mov
arpl
push
mov
mov
pop
mov
inc
mov
inc
pop
xor
pop
rcrb
and
imul
scas
mov
jne
mov
hlt
addr16
lds
push
out
pushl
push
nop
or
rorb
push
push
jbe
add
inc
cltd
addr16
pop
ds
mov
and
add
add
lods
mov
or
js
push
popf
out
and
sbb
mov
mov
mov
mov
iret
cwtl
inc
dec
iret
pop
xlat
icebp
es
push
sub
aam
sub
je
popa
lock
iret
inc
mov
fs
xchg
decl
jmp
sub
idivb
arpl
dec
mov
stc
sbb
ljmp
sbb
repnz
push
mov
sbb
dec
sub
or
int3
fidivl
cld
call
push
cmp
adc
mov
xchg
jecxz
push
ja
xlat
mov
call
popa
lret
iret
clc
xor
insl
jecxz
sub
inc
pop
mov
js
pop
mov
mov
das
inc
fwait
movsl
push
dec
adc
in
pop
pushf
adc
je
es
ret
jmp
mov
testl
pop
into
xor
hlt
mov
negb
sbb
xlat
out
sahf
les
xor
or
movsl
ret
imul
inc
cmp
decl
sbb
and
fwait
jno
xlat
dec
imul
popf
or
call
test
pop
das
xchg
inc
pop
das
sbb
cmp
and
lcall
sbb
adc
mov
mov
mov
sbb
mov
aad
pushl
push
mov
add
out
into
mov
aas
loop
add
call
mov
mov
cltd
adc
fwait
or
push
flds
sahf
cmpsb
inc
xor
sbb
es
cld
ret
std
mov
push
or
jo
pop
mov
ffreep
push
mov
imul
dec
push
mov
mov
enter
test
lret
rclb
jne
mov
xor
imul
pop
jno
popa
fldenv
jmp
cs
jle
add
cmp
add
push
incl
mov
lods
imul
jp
inc
xor
es
and
add
mov
decl
and
mov
scas
sarb
lcall
sbb
incl
inc
or
and
add
xchg
or
push
scas
fwait
cltd
pop
mov
out
movsb
lods
inc
inc
cltd
leave
inc
jle
out
adc
mov
xchg
mov
imul
cmp
cli
inc
enter
jmp
xchg
lret
das
fstpt
sub
int3
mov
ljmp
push
ficoms
je
hlt
pop
xchg
icebp
pop
xor
sbb
lret
push
out
and
inc
es
lds
pop
mull
sub
test
add
push
bound
ljmp
aam
mov
daa
sub
mov
sub
dec
push
sub
pop
std
int
cmp
xor
mov
test
out
in
or
sub
lods
out
push
dec
movsb
ficomps
sbb
ljmp
out
fwait
xor
push
push
sub
sbb
outsl
mov
push
test
decl
test
imul
sbb
aad
test
out
clc
lcall
lcall
mov
jbe
adc
scas
inc
in
scas
clc
cmp
xchg
lret
ljmp
or
cmc
rcrb
je
ljmp
outsb
pop
scas
cwtl
pushf
movsb
test
adc
sbb
mov
enter
mov
cli
jmp
adc
std
push
or
in
in
data16
cmp
push
fbld
rolb
cmp
imul
repnz
int3
lods
mov
cltd
decl
cmp
cmp
ret
jnp
rorb
shrb
and
pushl
push
push
jns
inc
pop
fisttps
pop
insb
pop
jle
cmpsb
lea
jo
jns
loopne
sbb
inc
out
jno
and
roll
pop
lahf
jno
lcall
mov
arpl
nop
mov
fadds
adc
adc
stos
int3
push
or
decl
dec
dec
mov
decl
incl
enter
cli
outsb
shld
push
std
cmp
sub
cli
mov
jae
sub
iret
les
xlat
cmp
out
push
das
lock
jmp
rorl
call
sbb
mov
and
cmp
inc
or
jmp
fistl
dec
pop
rcll
mov
push
stos
hlt
cmpsb
fimuls
loope
mov
mov
lahf
lret
ret
or
cmp
lcall
out
stos
add
movsl
mov
cwtl
fwait
into
xchg
out
or
ret
lds
adc
sub
in
jmp
mov
aaa
jnp
outsb
das
xor
in
xchg
movsl
pop
sahf
dec
xchg
imul
sub
and
ss
sbb
fld
inc
push
ret
dec
xchg
xchg
dec
lret
decl
ret
sub
or
test
push
mov
sbb
cwtl
push
sbb
sub
push
jp
mov
pop
lcall
outsl
jns
pop
mov
out
addr16
iret
xor
jns
xor
imul
xchg
andb
ljmp
adc
popf
int3
lret
je
imul
gs
aad
mov
cmp
sbb
lock
decl
in
testb
add
div
cmc
or
and
xor
lea
mov
decl
imul
mov
nop
rolb
pop
mov
test
incl
adc
xchg
and
shlb
add
push
ss
xorb
inc
xor
daa
fwait
test
incl
ret
fdivr
lret
shlb
inc
outsb
add
insb
fistpl
push
pop
lret
add
add
jne
icebp
cltd
dec
cs
cli
enter
cmp
outsl
pop
dec
sti
stc
xor
mov
inc
sbb
dec
in
test
dec
add
pop
ror
adc
push
test
inc
mov
jge
add
pop
adc
xchg
out
jne
jp
gs
pushf
xchg
mov
repnz
jl
cmp
test
mov
popa
bound
mov
ret
dec
aas
mov
xchg
in
jbe
and
dec
sub
outsl
add
cmp
pop
inc
loop
jle
lcall
sub
or
shrl
mov
lock
inc
sub
jmp
xchg
jl
jno
fnsave
lret
push
jp
jo
repz
movsb
jge
push
adc
outsb
js
xchg
jg
test
dec
sub
sbb
xor
arpl
add
stos
test
mov
stc
adc
ljmp
mov
clc
cmp
xchg
repz
inc
sahf
insl
out
xchg
mov
minps
mov
mov
test
fstpt
movsl
popa
leave
cmp
ret
out
clc
jmp
adcl
push
orl
in
test
inc
xor
pushl
cmp
adc
js
sahf
jno
xor
sbb
mov
fistpll
cmp
data16
cmp
mov
dec
popf
inc
cli
test
repz
inc
sub
dec
dec
stc
mov
push
adc
dec
xor
push
pop
leave
inc
gs
add
sbb
pusha
lods
and
pop
les
ljmp
in
fs
int
mov
pop
sub
jo
rcrb
xchg
loopne
pop
or
xchg
movsl
frstor
dec
sti
mov
xchg
mov
hlt
pushf
cmp
jg
lods
mov
out
xor
sahf
sbb
call
pop
cmpb
out
filds
fcomp
mov
xor
mov
cld
pop
gs
and
das
mov
cmp
and
pushl
add
jle
mov
rorb
scas
jnp
jno
mov
mov
pop
xchg
cli
nop
mov
repnz
decl
mov
fmulp
and
jecxz
test
push
sbb
fucomp
cmc
repnz
and
mov
cmp
arpl
test
sbb
xchg
xor
or
jne
ljmp
inc
lahf
cli
mov
sub
push
dec
mov
dec
mov
in
pop
jnp
mov
mov
aas
loopne
mov
popa
mov
addr16
movsl
lcall
jnp
call
push
cs
jno
xchg
xchg
mov
fsts
pop
cld
jmp
bound
dec
push
pop
fstpl
xor
ret
mov
sub
pushl
dec
std
scas
mov
push
pcmpeqd
ja
jg
test
mov
insl
lahf
add
decl
sub
sbb
es
push
sub
jecxz
ror
push
xlat
cmp
incl
mov
lcall
mov
adc
jnp
push
fucomip
sub
mov
sbb
push
jbe
jmp
and
sub
cmp
out
pop
ja
cltd
shrl
movsl
out
insb
test
clc
mov
int3
mov
scas
out
adc
or
cmp
call
xor
inc
rorl
rcrb
xchg
dec
out
es
adc
jmp
idiv
loope
sbb
push
lret
adc
out
mulb
jge
adc
ds
pop
cmp
push
aam
push
movsl
mov
adc
mov
adc
jl
int
dec
xor
jg
pushf
es
out
icebp
push
or
loope
arpl
mov
xlat
mov
jmp
std
push
stos
push
dec
mov
inc
jp
cli
mov
sbb
mov
popf
sub
jns
lods
jg
in
xor
cmpsl
test
sbb
jp
popa
in
fucomp
cmp
mov
lcall
pop
dec
push
mov
cmpsb
jmp
out
push
push
ljmp
adc
lret
das
lods
andl
jp
xchg
cmp
das
loopne
inc
xor
out
clc
or
sarb
repz
xchg
add
decl
jbe
dec
lea
clc
lret
cld
inc
dec
jle
in
jp
dec
jmp
jmp
add
mov
call
popa
dec
or
or
mov
out
xlat
push
inc
mov
adc
mov
adc
sub
hlt
ss
pop
cltd
cmp
jno
inc
repz
pop
push
je
test
mov
shl
pop
xchg
das
pop
jp
sarl
pop
fnsave
cli
ret
ljmp
adc
mov
lret
mov
mov
cmp
sub
cmpsl
pusha
mov
cmpsb
in
xor
dec
call
cld
inc
insb
mov
push
sbb
cwtl
mov
xor
mov
decl
adc
rcll
add
stos
jg
sbb
fnstcw
cmc
icebp
jmp
jno
in
nop
inc
ljmp
xchg
fcmovnu
push
into
maxps
loop
xor
jl
rol
dec
rcll
xchg
insl
ficoml
jbe
jmp
lock
cmp
jle
scas
aaa
cltd
dec
mov
pusha
xchg
test
das
das
sarl
cmp
push
pusha
test
xor
sub
xor
addr16
dec
xchg
inc
xchg
push
das
add
jmp
add
pop
scas
ret
xchg
or
mov
pop
pushl
xchg
or
sbb
mov
dec
pop
dec
cltd
lds
pop
lcall
push
out
clc
cmp
out
aad
jns
das
fldcw
or
or
imul
jmp
shl
xor
pop
frstor
sarl
lods
jne
pop
subl
arpl
in
jmp
test
push
sub
or
test
mulb
cmp
std
les
pushl
sub
dec
jl
test
lds
jbe
aad
iret
mov
xchg
xchg
xchg
adc
ret
jmp
pop
outsl
stos
jecxz
sbb
sbb
add
cmpsl
mov
ljmp
mov
cmp
cmp
xchg
xchg
loopne
pop
cmpsl
xchg
lcall
dec
lcall
add
enter
xchg
stos
pushf
xor
add
cmpb
and
ljmp
push
jb
je
dec
stos
shlb
jo
mov
insb
sti
outsl
out
dec
cltd
lcall
rcrl
xchg
loop
jl
inc
imul
sbb
sbb
add
mov
leave
sub
lcall
in
inc
test
insb
cmp
xor
addr16
shll
pop
out
lret
mov
push
in
jle
fcomip
call
sbb
lock
adc
fiadds
js
mov
jg
iret
or
jo
ljmp
xchg
or
xlat
fmul
mov
aaa
iret
outsb
pop
mov
jle
leave
push
hlt
jne
fcomip
call
out
or
into
sbb
jmp
sbb
or
mov
xchg
jmp
movsb
inc
dec
es
inc
xchg
inc
inc
testb
inc
jae
jb
imul
ds
mov
xlat
xchg
into
cld
loope
daa
leave
cmp
cld
inc
sarb
mov
gs
sub
sbb
jb
mov
fidivrl
add
pop
pop
dec
lret
cli
in
pop
sbb
cmp
incl
inc
aas
inc
push
es
leave
mov
jae
es
pushf
pop
adc
jmp
lcall
lds
subb
outsb
stos
ss
dec
pop
mov
cmovs
decl
mov
das
pop
sbb
lret
cmc
push
aam
and
jne
cmpsl
lea
icebp
pop
arpl
mov
lcall
ret
push
cld
cmp
jg
xor
bnd
stos
dec
xor
cmpsl
lret
add
inc
sbb
jne
and
jno
xor
and
dec
and
ljmp
fldenv
adc
test
es
gs
jg
mov
jg
fildl
iret
je
and
ja
mov
inc
push
arpl
lcall
jp
dec
std
sbb
jb
out
xchg
data16
jg
xchg
xchg
jecxz
test
push
add
ret
fsubrs
mov
lds
jb
lcall
fisttpl
loope
popa
jmp
jl
out
in
sub
pop
in
aas
mov
dec
cmpl
cli
pushl
pop
imul
adc
and
pop
sub
sbb
mov
xlat
mov
xchg
jge
cmp
xchg
repz
mov
movsb
cmc
pushl
pop
fwait
pop
or
cli
adc
subb
ja
sbb
jae
ljmp
push
xchg
pop
dec
ja
add
and
sbb
fsubl
lcall
push
jg
popa
jo
aam
add
pop
incb
nop
pop
fidivrl
cmp
movsb
arpl
jmp
mov
sarb
lods
add
lods
mov
fisubs
and
jo
push
add
mov
repnz
rcl
inc
dec
mov
ret
aaa
stos
outsb
test
nop
inc
popa
std
out
setns
ss
jbe
or
cli
cmpsl
pop
aas
xchg
mov
cmc
push
mov
fnstcw
enter
and
pop
jg
notb
jmp
ja
les
mov
pop
or
addr16
mov
sar
decl
xchg
or
popa
rol
pop
test
pop
sub
pop
cmpsl
jmp
jg
ds
es
xor
cmp
adc
mov
jge
dec
mov
in
incb
rorb
mov
jmp
push
fsubl
dec
lods
jmp
mov
pop
insl
in
rolb
mov
push
xlat
adc
cmp
adc
lock
fsubrs
negl
adc
test
lcall
mov
jnp
jge
call
out
pop
jne
cmpsl
sbb
adc
lds
into
cmp
jmp
jno
loop
popf
mov
pop
movsb
out
add
xorb
dec
xchg
or
repz
clc
daa
aaa
or
sbb
dec
push
jp
xor
mov
je
or
jmp
push
cmp
fisubs
mov
xor
or
movsb
popa
add
ret
arpl
iret
jg
in
ds
xor
xadd
xor
inc
sbb
iret
lea
jmp
jns
jle
inc
dec
fisttpl
imul
cmp
addr16
inc
mov
in
call
rcrl
mov
std
insb
pop
aas
cmp
cltd
jo
dec
movsl
imul
adc
in
push
jge
das
clc
incl
push
ffreep
pop
sar
or
xchg
test
ljmp
xor
out
xchg
jbe
and
inc
xchg
pop
inc
pushf
ja
loope
test
mov
mov
dec
mov
mov
push
or
lret
fcmovnb
pop
xor
ljmp
jp
fldt
sub
insb
sub
mov
popf
xor
push
aam
notb
popf
daa
sbb
jmp
adcl
adc
out
mov
xor
xchg
test
jge
sbb
pop
jmp
clc
in
incl
mov
lea
mov
mov
mov
fnstenv
jmp
mov
push
idivb
rorb
xchg
imulb
push
dec
pop
pop
sub
call
jecxz
fdivrs
adc
dec
jns
in
add
mov
push
jmp
jp
cmp
mov
out
outsl
mov
aas
mov
cmc
inc
and
inc
push
jge
leave
enter
xchg
add
mov
cmp
std
ljmp
jmp
scas
rcrb
data16
jg
pop
jns
sbb
mov
aam
sti
dec
xchg
aad
xor
mov
cmp
loope
ljmp
cli
addb
push
lods
cltd
ja
push
mov
lahf
stos
shrl
add
xor
mov
lcall
or
data16
fcoml
cmp
jbe
cmp
nop
adc
fcomi
xchg
cmpb
fdivp
incl
lods
cmp
sub
pop
ja
pushl
pop
cmp
mov
cmpsb
jmp
fildl
int
push
and
inc
xor
insb
jns
loopne
aaa
aam
incl
sub
push
aaa
mov
out
rep
fistl
les
bound
jne
call
out
xchg
movsl
aad
les
int
adc
je
push
xlat
sub
adc
push
and
arpl
sarb
mov
ja
sbb
cmp
push
pop
mov
scas
clc
hlt
ljmp
sub
dec
mov
andl
pop
pushl
fcmovnbe
xor
jl
xchg
adc
or
jg
idiv
xor
pop
or
sbb
xchg
cmpl
jo
mov
jmp
mov
jae
out
push
nop
adc
sbb
adc
pusha
ljmp
mov
ljmp
fwait
push
dec
jle
adc
push
movsb
out
dec
and
stos
sbb
test
cmc
push
mov
inc
icebp
jbe
jne
cmp
cltd
cmp
stos
and
and
outsl
mov
lds
sbb
mov
cld
js
cmpsl
outsb
inc
adc
mov
pop
lcall
mov
or
sub
ret
dec
pop
es
sbb
dec
cmp
sarl
pop
arpl
mov
lods
mov
xchg
inc
or
out
sub
lret
sbb
aaa
enter
mov
jl
mov
xor
inc
data16
mov
into
add
lcall
jge
lea
adc
push
aad
or
sub
add
addb
in
icebp
or
mov
stos
inc
imul
mov
dec
out
and
push
movsl
lcall
cltd
jp
incl
push
fdiv
je
aam
std
dec
sbbl
jo
testl
js
idiv
jmp
lods
sub
mov
rcr
dec
int3
test
pop
ret
test
imul
ljmp
dec
sub
mov
pop
or
sub
pop
push
inc
arpl
jns
cmpsl
jne
jno
pop
call
pop
iret
add
cld
les
aaa
push
mov
mov
imul
test
jne
jg
jle
mov
addr16
jp
or
int3
cli
mov
imul
or
in
and
call
leave
sub
into
aaa
cld
call
mov
loopne,pt
add
lret
lcall
add
data16
decl
and
cmpsl
pop
rorl
bound
out
dec
mov
lcall
scas
mov
call
lods
lahf
mov
add
movsl
push
jl
sub
mov
sbb
incl
movsb
leave
adc
xor
andl
bound
repnz
pop
lock
ljmp
push
xchg
ds
xchg
cwtl
cmpsb
fldl
aam
hlt
lea
pop
adc
test
loop
jae
push
and
push
lds
or
xor
pop
inc
sub
jmp
inc
aas
pop
fs
cmp
jo
jle
out
cltd
add
test
inc
mov
pop
filds
std
and
filds
imul
xchg
jg
fsubrp
std
dec
mov
std
jl
jne
push
addr16
in
or
ljmp
xchg
pop
xchg
jns
in
fmul
pop
adc
push
imul
mov
jge
xchg
mov
movsl
ja
shrb
mov
or
pusha
mov
pop
inc
std
cld
test
ja
ret
xchg
dec
pushl
je
popa
rcr
mov
sub
clc
lock
fisubrs
addr16
pop
adc
addr16
lods
jg
pushl
inc
test
call
daa
dec
add
pop
test
aad
dec
jnp
push
loopne
jmp
xchg
call
pop
pop
and
in
dec
fildll
std
push
add
lcall
or
inc
mov
in
sbb
cmp
sbb
and
outsb
ja
rcr
in
loop
test
mov
call
sbb
adc
inc
imull
cmp
jnp
js
sbb
out
cmpsb
mov
inc
mov
loopne
out
mov
fidivrl
adc
in
mov
mov
cld
sbb
pushf
int
call
pop
pop
or
pop
hlt
pop
repnz
lret
add
mov
and
mov
dec
addl
fisttpl
xchg
or
inc
cmpsl
test
cmp
add
ss
outsb
xchg
mov
loope
sbb
jb
incl
jmp
arpl
rcl
mov
lret
test
cld
repnz
in
ljmp
clc
mov
stc
hlt
or
and
stos
pop
and
cmp
push
clc
stos
sbb
ljmp
in
mov
xor
iret
dec
in
sahf
mov
xor
clc
inc
icebp
pusha
inc
cmp
mov
incl
test
dec
ja
add
popa
and
scas
cmpsl
ror
mov
jbe
push
jg
into
call
mov
push
mov
pusha
jae
push
ljmp
orb
shll
inc
sbb
fiadds
jnp
lret
inc
mov
push
popf
cmpsb
leave
mov
mov
mov
and
dec
mov
dec
sub
sbb
iret
cmp
shrl
les
out
jl
outsl
push
xor
dec
stos
ret
xor
decl
sub
popa
pop
pop
std
sbb
lret
cli
mov
sbb
adc
int3
mov
dec
ficomps
jle
cmp
and
repz
and
sub
xchg
and
jmp
ret
sub
pusha
adc
pop
dec
lcall
pop
daa
fs
pop
loopne
dec
pop
clc
xor
imul
mov
pusha
in
mov
lods
xchg
dec
fwait
pop
movsb
push
push
cmp
out
sti
xchg
mov
mov
mov
test
pop
popa
das
clc
call
add
mov
lods
xor
aas
jo
stos
inc
orb
jl
push
outsl
push
lahf
mov
adc
sbb
fs
inc
and
call
xabort
bound
xchg
mov
dec
mov
jle
fbld
cmpsl
mov
lea
mov
push
pop
pop
dec
loope
jmp
outsl
dec
and
dec
sbb
into
mov
call
push
mov
mov
mov
sbb
add
xchg
daa
mov
scas
stos
repnz
cmp
dec
or
in
jmp
pop
in
add
fcomip
mov
mov
mov
call
sbb
and
adc
in
lods
ret
test
stos
dec
daa
pop
icebp
cmp
mov
fisttpll
bound
sti
lods
pop
xor
sti
xor
int
gs
mov
mov
popa
iret
push
js
add
and
lcall
stos
ret
lock
mov
int3
aam
ror
add
dec
ljmp
lret
aas
xor
nop
xchg
enter
sarb
cwtl
add
adc
pop
or
lods
mov
decl
dec
das
xor
xchg
stc
js
or
mov
scas
fsubrl
mov
loope
xchg
enter
call
xchg
mov
lret
sar
jbe
sub
dec
sti
movsb
jle
push
sbb
inc
bound
jae
fisubl
xchg
movsl
inc
cmp
mov
neg
cmp
xchg
movsl
jle
cmpsb
cwtl
je
inc
loop
mov
in
adc
into
push
lcall
push
add
imul
shlb
push
xor
add
scas
mov
adc
out
push
inc
jg
push
cld
mov
mov
out
mov
aad
mov
adc
in
inc
push
push
decl
pop
lock
or
adc
aad
movsl
das
push
pop
xchg
xchg
dec
fmul
imull
ljmp
sub
mov
es
fidivl
and
ja
insl
in
cmp
test
incl
imul
mov
movsb
cmp
repz
cmp
sbb
scas
and
ljmp
add
pop
inc
pop
arpl
mov
pop
jge
mov
cmpb
lea
inc
sub
lcall
outsl
mov
or
mov
leave
dec
out
out
push
loope
movsb
and
and
xchg
cwtl
js
lret
mov
mov
mov
dec
lcall
int3
cmp
iret
cmp
mov
clc
sub
mov
or
fcos
mov
sahf
out
sub
adc
inc
xchg
mov
scas
pop
cmp
push
mov
ljmp
int3
clc
insl
je
xchg
sahf
movsl
pop
in
sub
jecxz
lock
push
sahf
lahf
pop
inc
cltd
out
movsl
and
sub
jb
bound
sbb
shl
cmpsb
inc
psubusb
loope
ja
addl
clc
pop
sbb
mov
lcall
sub
mov
fdivrl
aas
data16
ja
jmp
das
push
fcmovnbe
mov
dec
test
mov
sarb
push
dec
push
sarb
or
clc
mov
jae
rcl
inc
jge
mov
cs
adc
call
sub
imul
xchg
mov
andl
lret
xchg
mov
inc
xor
dec
inc
jg
ljmp
jg
out
inc
repz
test
frstor
and
rcrl
decb
sbb
adc
xor
ds
lret
adc
mov
imul
std
xor
sbb
lock
mov
cmpsl
enter
jge
loope
incl
js
inc
lret
jae
cld
adc
popf
mov
lcall
rorb
sub
mov
out
sarb
cmp
es
mov
stos
lock
adc
rep
fwait
sub
fiaddl
fidivrs
sbb
decl
jecxz
bound
mov
or
or
sub
icebp
not
scas
sbb
call
inc
inc
and
pop
lahf
jnp
lcall
dec
and
loopne
push
mov
faddl
inc
inc
sti
lods
je
pop
dec
sub
jae
inc
ljmp
fsubs
xor
fmull
cmc
outsb
mov
add
das
ret
cltd
sahf
mov
pop
lea
incl
out
pop
or
mov
push
fcoms
dec
xchg
jmp
sub
xor
mov
inc
mov
rcl
test
cmp
add
mov
incl
cmp
mov
push
adc
jnp
dec
adc
pushf
mov
sbb
repz
in
sbb
in
int
test
cmpb
aaa
ret
je
iret
sbb
scas
push
add
sti
scas
cmp
data16
add
adc
mov
lds
mov
mov
jmp
jo
sub
ljmp
push
sbb
mov
add
sub
cwtl
inc
adc
incl
loop
dec
ljmp
push
sub
dec
add
aam
and
mov
jo
std
dec
lea
loope
jp
xor
in
add
cmc
add
pop
cwtl
mov
incl
mov
xchg
leave
push
cld
cmpb
push
in
into
adc
pop
jmp
rol
out
adc
data16
aam
jmp
jbe
cmc
pop
movsb
push
je
mov
lcall
xchg
lods
inc
cmp
xchg
pop
mov
add
les
cmp
test
xchg
jecxz
je
jno
inc
test
shrb
fistpll
jg
or
sub
lahf
dec
and
loop
and
xchg
lods
mov
into
push
test
shl
mov
sub
call
int3
sbbl
push
mov
ljmp
shlb
call
dec
and
sub
inc
cwtl
and
xchg
mov
jmp
push
fnstenv
or
xlat
popa
daa
aam
cmpsl
mov
lahf
mov
xchg
cltd
shl
pop
out
std
fcomip
in
and
js
lea
xlat
lods
pushf
in
jle
cmpsb
cmpsb
repnz
xorb
aaa
std
call
mov
xchg
fcoml
aas
inc
and
fs
mov
and
jmp
mov
xor
fistl
xlat
shrb
mov
sub
fcomip
lcall
jae
mov
sub
adc
je
insb
or
cmpsb
out
cli
lcall
sbb
arpl
lcall
into
mov
andb
inc
ret
xchg
int3
fnstcw
and
mov
iret
fldenv
out
push
jle
sarl
pushl
inc
push
dec
push
xor
cmp
and
sbb
add
call
pushl
inc
cld
sub
orb
mov
add
inc
dec
dec
lcall
enter
jl
or
pop
movsb
jb
cmpsl
imul
jne
xchg
add
inc
subl
pop
cmp
cli
std
sub
sbb
pop
xor
sub
incl
mov
lret
sarb
xor
fcomi
sbb
sbb
cli
sbb
xchg
lods
enter
sar
decl
adc
pop
cmpsb
jmp
dec
cmpsl
fistl
test
push
xchg
in
mov
mov
mul
add
inc
or
je
into
pushf
into
mov
adc
fsqrt
inc
popf
pop
push
cltd
adc
sub
xchg
into
daa
push
ret
movsb
popa
les
dec
xchg
or
sbb
sub
add
jle
mov
mov
xor
decl
lock
clc
js
test
mov
jns
lret
mov
pop
pop
cmp
cli
incl
clc
push
ret
add
mov
scas
add
mov
mov
push
incl
mov
mov
fs
push
icebp
or
sbb
jae
xor
sub
rol
sub
cmp
cmpsb
pushl
xchg
push
jp
movsl
rcl
adc
push
mov
dec
cmp
fisubrs
mov
sti
addr16
jmp
test
lret
cld
push
or
mov
sbb
js
popa
cli
xchg
inc
test
pop
cmp
aas
mov
pop
gs
and
push
inc
hlt
push
call
in
lock
loop
es
insl
dec
lcall
scas
adc
push
pop
scas
pop
mov
dec
in
dec
dec
mov
bound
mov
scas
movsb
add
dec
js
cli
je
ja
xlat
jecxz
jg
mov
scas
adc
ljmp
jb
xor
jge
jg
stc
jnp
ja
mov
movsl
ds
push
or
rcrl
cmpsl
cmp
repz
inc
push
lret
sub
pop
add
sbb
cld
add
stos
test
rol
or
cli
xor
in
jg
pushl
jmp
ljmp
lods
xchg
push
xor
mov
test
mov
and
in
test
cmpsb
push
inc
lahf
xlat
popf
and
or
nop
mov
cwtl
nop
aad
shl
jne
sbb
sbb
das
jne
add
pushl
shlb
fcmovb
loop
xchg
mov
mov
jl
clc
fisttpll
jns
pop
push
insb
add
xchg
cmp
push
or
and
or
ljmp
in
ret
dec
shrb
xchg
xchg
mov
outsb
or
jns
mov
jmp
mov
cmp
lret
inc
out
adc
mov
jmp
mov
dec
cmp
ljmp
dec
xchg
cmp
pop
outsb
lods
jmp
and
sub
aad
nop
fs
cmp
popa
pop
loopne
push
lret
ds
loope
test
imul
add
clc
xchg
pop
adc
lcall
inc
cmp
add
jne
lcall
xchg
out
mov
lcall
sub
sbb
ret
inc
adc
mov
push
movsb
sahf
test
decl
ljmp
sub
xor
bound
sarb
mov
and
pop
arpl
hlt
xchg
adc
in
jecxz
ds
and
call
cmp
or
push
inc
insl
ds
shll
jp
mov
popa
aaa
stos
out
fsubl
fmuls
adc
push
mov
jmp
in
jae
add
and
mov
adcl
adc
push
adc
ljmp
mov
xor
pushl
push
xor
cmp
lea
cs
imul
aad
repnz
ljmp
xchg
jo
loope
adc
bound
out
repz
fwait
negb
jno
pushl
fnsave
xor
test
fdivl
cwtl
xchg
sub
jae
jmp
sbb
pushl
enter
test
fsubrl
and
sub
iret
cli
or
xor
repnz
cmp
xor
jle
je
jno
out
ret
in
jmp
shl
pop
cmc
xor
mov
and
sub
xchg
sbb
lea
test
cltd
sbb
decb
mov
cmpsb
mov
out
pop
mov
decl
fisubrl
cmp
sub
out
dec
fs
and
iret
cmovge
cmp
pop
dec
inc
jns
lock
fisttps
cmp
in
adc
mov
mov
jl
cmp
pop
scas
out
push
out
cli
pop
jmp
cmp
ljmp
in
les
adc
decl
jne
xor
pop
lret
pop
and
dec
insb
cld
repnz
push
fmulp
inc
decl
lock
and
mov
fsubs
sub
xchg
mov
decl
cmp
testl
iret
push
xchg
cmp
shlb
sub
lcall
xlat
cwtl
lret
popf
mov
and
xor
fcmovbe
sub
push
data16
xchg
sti
lcall
mov
fldenv
fisubl
popf
cmp
call
outsb
add
sub
lcall
mov
lods
or
cwtl
mov
lock
inc
push
sbb
cld
pop
pop
stos
xchg
xchg
mov
cs
ljmp
pop
lock
xor
ljmp
jg
incb
jg
inc
xor
scas
pop
push
push
dec
xchg
fistl
ljmp
fiaddl
push
pushf
xchg
push
mov
jge
jno
call
hlt
out
sub
mov
ss
mov
adc
pop
sub
and
sub
aad
imul
cmc
in
cmpsb
stos
mov
jmp
and
mov
push
jp
push
add
rcll
int3
in
std
dec
sub
dec
sbb
in
or
dec
or
sbb
insb
das
dec
outsl
cmp
push
shll
fs
mov
aam
push
cmp
call
xchg
cld
cld
shll
or
jb
fsts
jl
pushl
xchg
dec
shrb
int3
cmp
dec
mov
push
loope
movsb
inc
pushf
mov
das
lret
cli
mov
push
inc
mov
dec
mov
dec
js
outsb
add
je
cli
jne
xchg
imul
jns
and
or
filds
lret
inc
outsl
jns
adc
xchg
shl
adc
sbbb
out
adc
sbb
xlat
loopne
outsl
call
lea
sub
andl
mov
mull
pop
pop
fwait
cmp
pop
pop
dec
out
bound
mov
pop
aas
out
dec
out
sahf
mov
adc
add
sahf
jg
adc
nop
dec
mov
lcall
mov
pushf
das
les
test
out
loop
loop
arpl
daa
rcrw
std
sbb
test
jb
adc
sbbb
mov
inc
pop
and
push
and
decl
in
shrb
jbe
adc
mul
mov
insl
xor
in
roll
call
stos
adc
out
add
je
imul
cmp
hlt
adc
outsb
unpcklps
decl
xlat
rorb
fldcw
push
xchg
sahf
cmpl
inc
hlt
jmp
out
in
filds
mov
nop
das
rol
adc
or
push
mov
inc
decl
add
es
popa
stc
popa
outsb
jl
arpl
sub
pushf
decl
xchg
push
push
std
pop
test
pop
rorb
cmp
loopne
sub
stos
es
in
sbb
add
outsl
inc
clc
push
pop
clc
cmpl
add
or
pushl
lcall
mov
jl
outsb
cmp
xchg
dec
inc
decw
pushl
xor
dec
dec
sti
cmc
mov
loop
jbe
mov
pop
xchg
movsb
xchg
sub
mov
mov
jb
popa
push
mov
ja
lahf
xchg
jg
std
outsl
sar
jmp
xchg
mov
pop
jb
mov
add
mov
ljmp
mov
mov
cmc
arpl
lret
movl
decl
enter
insl
sub
mov
movsb
divl
jae
push
rolb
push
inc
inc
cmp
imul
lahf
adc
hlt
jbe
pop
out
insb
pop
inc
jecxz
push
test
and
mov
cmp
lahf
int3
dec
sahf
fs
into
adc
std
in
dec
xchg
xor
adc
cwtl
leave
leave
into
cltd
dec
mov
push
xchg
inc
or
test
dec
inc
pop
insl
pop
mov
jl
loop
pop
stc
ss
fisubrs
mov
push
dec
cmp
or
sbb
push
xchg
and
sbb
stc
insb
sub
jp
out
cwtl
xchg
or
test
sbb
jge
fcoms
rorb
jecxz
mov
incl
xchg
scas
mov
push
scas
mov
popa
jecxz
popl
or
call
push
hlt
and
mov
adc
mov
xchg
int
scas
cmp
dec
movsl
in
inc
push
movsb
cs
lcall
test
lret
sub
push
push
push
pop
mov
jg
xor
pop
icebp
pushl
int
aad
fistl
inc
add
es
aas
ss
xchg
cmp
ljmp
rcrb
fwait
cmp
push
nop
jb
inc
fsubrl
lcall
cld
mov
ja
cltd
and
pop
mov
into
lods
push
out
leave
jb
loope
sbb
ret
lcall
fbld
inc
xchg
adc
jmp
mov
xchg
xlat
fdivp
push
shrl
rcrl
daa
inc
adc
xchg
test
ljmp
push
mov
std
mov
xor
push
and
fdivs
xchg
cmp
jge
push
or
pushl
pop
jmp
add
add
in
mov
stos
loope
jbe
decl
mov
cmpsl
adc
sbb
ret
out
and
jl
enter
in
add
dec
push
stos
lcall
xchg
es
and
mov
xchg
es
pop
xor
or
loopne
mov
and
pop
mov
push
and
add
fnstcw
inc
xchg
add
les
pop
xor
mov
pavgb
and
xlat
sub
adc
fcomps
cmpsl
inc
in
out
test
jp
inc
fwait
mov
shll
iret
test
fldt
inc
push
lret
dec
inc
fistl
cmc
dec
inc
dec
pop
dec
in
lea
inc
fisubs
out
jmp
fcoml
xor
adc
and
pusha
inc
sahf
imul
fidivrs
mov
sbb
dec
mov
or
jle
mov
sub
and
dec
incl
shll
das
cwtl
movsl
dec
or
inc
test
out
psllw
adc
push
incl
shlb
push
add
sbbl
xchg
cs
bound
mov
pushl
jb
sub
add
fidivl
in
or
in
pop
gs
leave
stos
mov
pushl
dec
pop
cmp
cs
clc
movsl
xchg
fildl
sub
xchg
ss
incb
cmp
ljmp
out
add
inc
shlb
jle
movsl
cld
test
imul
arpl
lods
cli
cmp
into
add
and
and
mov
incl
call
loop
fdivs
add
out
xchg
mov
dec
push
adc
jle
je
dec
mov
call
clc
inc
sbb
insb
mov
mov
ret
cmp
jecxz
pop
dec
mov
push
outsl
push
out
fisubs
mov
jnp
ret
or
mov
cld
aaa
sub
add
mov
push
jecxz
xchg
mov
sbb
lcall
pop
inc
mov
or
cmpsb
mov
std
dec
movsb
xchg
pop
lock
jmp
mov
sbb
xchg
mov
inc
subb
inc
pop
jp
and
in
mov
xor
jb
fldenv
mov
dec
out
test
scas
add
decl
inc
jmp
and
out
xchg
int
sbb
adc
popa
imul
mov
xchg
mov
imul
mov
sbb
jmp
cmpsb
lock
xor
pop
test
cmpsl
jmp
sub
int3
mov
decl
stos
cltd
inc
mov
inc
pop
sub
jnp
sub
sub
into
gs
cmpb
loopne
in
adc
push
jo
xor
dec
xor
orb
xor
pushl
inc
out
fdivs
adc
out
and
ret
sub
decl
mov
hlt
je
mov
cs
and
or
data16
push
fdivr
dec
repnz
cmp
stos
mov
and
inc
stos
js,pn
xor
pop
sub
ljmp
jno
xor
push
psubsb
cmpsb
movsb
fldl
scas
xor
fsubr
cmp
hlt
ljmp
outsl
test
sub
xchg
mov
cmpsb
mov
pop
fiaddl
lret
xor
and
lret
decl
push
dec
cmp
sti
repnz
loope
bound
loop
cmp
lcall
mov
cltd
jg
jmp
mov
cmp
aam
scas
jae
int
pop
iret
call
or
imul
sub
push
push
insb
rclb
adc
lcall
add
mov
lcall
add
fistpl
jmp
int
cmp
inc
lods
push
jmp
shrl
pop
adc
adc
std
cmp
pop
mov
push
mov
xchg
inc
add
scas
sub
dec
data16
scas
adc
lcall
or
inc
add
cmp
out
pushf
ljmp
mov
je
test
dec
and
call
fnsave
or
add
pop
push
outsl
adc
dec
xor
ljmp
fdivrs
add
movntps
sub
jmp
sub
sub
mov
fs
in
dec
std
decl
mov
iret
lcall
scas
xchg
sbb
fwait
mov
cmp
gs
inc
mov
shr
loope
cld
in
lods
sub
frstor
mov
out
enter
aas
dec
dec
movsl
or
pop
stos
mov
sahf
decl
or
and
mov
mov
xor
es
mov
mov
jp
sbb
aas
das
std
hlt
les
mov
jnp
inc
and
data16
xor
push
sti
sbb
aas
push
jmp
xor
mov
enter
adc
fistpl
pop
cmp
idivl
mov
out
das
push
arpl
aaa
addr16
inc
xor
dec
fwait
sbb
lahf
pushl
inc
adc
les
jnp
popf
pop
test
lds
movups
shll
aas
insl
lcall
ljmp
es
aad
pop
lods
stos
aaa
inc
imul
insb
jl
leave
loop
call
jb
mov
sbb
repnz
add
in
dec
or
into
movsb
cmp
lcall
inc
in
jb
and
outsb
adc
pop
or
sub
push
stos
jp
inc
xchg
or
ljmp
xor
mov
push
dec
lcall
mov
adc
sub
jge
fs
lock
xchg
popa
repnz
jmp
cmp
jbe
loope
inc
mov
shlb
add
pop
out
cli
dec
dec
sbb
shrb
push
fldenv
shlb
add
ret
cld
cmpsb
es
incl
jmp
pop
mov
sub
aaa
mov
add
incl
loopne
cs
out
lds
inc
mov
stos
mov
mov
dec
notb
subb
js
sub
lcall
aas
or
jg
movsl
xor
inc
shll
adc
add
stc
push
hlt
dec
push
add
aas
mov
mov
jne
gs
fldlg2
aad
fmuls
cmp
sti
xor
loop
xor
arpl
mov
rcl
adc
pushf
mov
stos
test
iret
dec
mov
pop
or
mov
dec
mov
jl
add
aam
test
mov
stc
sub
mov
ds
incl
pop
cmpsl
mov
xchg
cli
mov
sub
lea
lea
push
mov
sti
cmpsl
or
cwtl
lcall
imul
das
je
mov
push
jmp
add
in
mov
xor
icebp
mov
ja
dec
sub
sub
jp
popa
je
cmp
lret
adc
jb
or
aam
jo
call
xor
jbe
ret
lret
pop
fwait
decl
pop
out
and
sbb
scas
je
xchg
or
cmp
pop
andl
call
add
mov
push
add
cmpsb
push
or
pop
mov
xchg
push
push
push
xchg
sbb
decl
inc
shl
shr
or
ja
clc
bound
inc
in
not
enter
clc
leave
fs
stos
inc
jae
fimuls
cld
shrb
add
mov
inc
add
jl
sub
call
mov
scas
sub
into
stc
cltd
fs
sti
dec
xchg
aaa
inc
cmp
std
call
stc
mov
pop
xchg
cltd
pop
jp
mov
add
fdivrs
adc
xlat
decl
sbb
icebp
fistps
addr16
cmpsl
sbb
push
adc
cmp
xlat
cmp
add
fcomps
sbb
lcall
pop
subl
xchg
mov
pop
push
jb
pushl
clc
and
lock
int
fmull
xchg
pop
cmp
cmp
jge
xchg
enter
jo
jecxz
jmp
mov
jns
cmp
fwait
sub
adc
or
or
cwtl
out
xchg
adc
add
and
sbbb
fistpll
out
and
mov
into
in
bound
std
jmp
stos
push
cmp
and
inc
mov
out
pushl
stc
test
stos
ret
js
inc
xor
adc
scas
std
xchg
adc
sar
call
cld
or
cli
rcrb
or
je
and
pop
add
call
and
and
and
popf
je
sub
pusha
daa
test
jb
sub
jmp
jno
loope
or
push
mov
dec
or
fldl
push
jno
test
ret
dec
jmp
andb
and
and
adc
sbb
int
push
sahf
int3
mov
pushl
push
sbb
mov
imul
fadd
mov
push
hlt
popa
sbb
popf
int
cmp
jmp
dec
js
cmpsb
inc
call
push
inc
pushf
mov
out
add
mov
mov
out
mov
stc
push
fcomip
dec
xor
pop
jnp
pop
dec
pop
xchg
fisttps
cmp
push
inc
cli
dec
out
push
adc
cmpl
pop
popa
cmp
lret
and
cmp
enter
das
push
cld
cli
std
mov
mov
mov
decl
sarl
incl
sarb
stos
jne
mov
dec
int
test
add
pushl
movsb
insl
shll
mov
out
push
mov
decl
add
out
test
jo
or
loop
pop
xchg
pop
sbb
pop
decl
adcl
sbb
jno
mov
mov
cmp
lcall
push
sub
nop
repz
ss
pop
out
pop
jo
fs
fs
pop
aas
add
push
pop
aad
or
std
pop
enter
and
mov
mov
fistps
add
push
push
sbb
lcall
ljmp
pusha
nop
push
dec
mov
scas
test
add
dec
dec
push
cmp
sub
push
ss
stc
jg
fcmove
cld
xchg
bound
sub
dec
add
cmc
loop
jnp
mov
push
incl
push
out
push
fstpl
dec
mov
sub
jl
arpl
pop
jge
push
lcall
jb
sub
and
testb
and
pop
into
cwtl
mov
add
ljmp
cli
ljmp
adc
imul
add
dec
xor
adc
in
leave
stos
lcall
xchg
shr
pop
push
insl
loopne
jp
sub
push
decl
pop
dec
jmp
iret
rcrl
mov
push
or
pop
rorb
hlt
add
stos
scas
mov
mov
pop
mov
test
mov
cmp
ljmp
jg
dec
jae
je
push
jle
imul
push
leave
inc
xchg
xchg
pop
mov
aam
push
cld
jae
mov
or
jns
lock
push
jno
xor
xchg
jb
mull
sbb
dec
loope
push
loop
mov
xor
sub
dec
in
ficoml
std
decl
cmpsl
sbb
jo
pop
lods
les
dec
add
sti
out
shrb
incl
jnp
dec
in
lahf
inc
in
cli
sub
dec
xor
or
mov
out
sub
xor
mov
ja
pop
sub
aad
test
pop
subl
lock
ljmp
xchg
test
clc
clc
adc
clc
bswap
outsl
mov
pop
shrb
outsl
and
mov
and
inc
mov
jg
push
adc
sarl
jg
mov
fidivs
xor
test
xchg
test
adc
arpl
cmc
jnp
jmp
mov
mov
cmpsb
pop
push
mov
popf
dec
aas
lret
loopne
incl
ds
js
sbb
cmp
adc
adc
mov
inc
dec
jo
add
dec
dec
mov
xchg
xchg
pop
lret
popf
push
mov
decl
sub
lods
fsubrs
xchg
nop
jg
cwtl
mov
sahf
repz
push
loopne,pt
lock
pushl
inc
insb
pushf
ret
mov
das
push
icebp
xchg
aaa
inc
sub
mov
aaa
ret
incl
jle
je
mov
xchg
mov
jns
movsl
and
fldcw
jg
pause
lcall
mov
lcall
adc
sti
pop
call
ljmp
rcrb
test
mov
pushf
insl
out
pushf
out
jp
nop
incl
pop
dec
jne
cwtl
xchg
xor
out
pop
cmp
sub
in
pusha
sbb
mov
pushl
push
fdivrl
xor
mov
add
lds
mov
jg
fisubrs
lret
and
pop
mov
nop
dec
cmc
xchg
push
insb
cmpsb
mov
jecxz
lcall
and
sub
xor
dec
push
div
mov
aad
cli
sbb
adc
pop
mov
pop
cli
or
add
push
test
jg
call
or
scas
push
insl
cmp
xor
repz
cwtl
xchg
mov
jmp
push
mov
cmpsb
cmp
test
stc
std
shr
ljmp
jp
lahf
ficompl
in
xchg
cmpsb
mov
lcall
mov
pop
lcall
or
aaa
out
jmp
mov
pop
xor
mov
jmp
jmp
sbb
mov
dec
sub
xchg
ds
fnstcw
hlt
adc
outsb
xor
dec
inc
mov
stos
insl
pop
std
mov
mov
adc
mov
xchg
xlat
inc
xchg
gs
pushl
lahf
int
xchg
testb
push
pusha
mov
sti
rorl
fistpll
incl
popf
jmp
pop
lret
sub
pop
mov
adc
stos
mov
sub
push
rcr
dec
lret
mov
xchg
cli
in
cmpsb
lgs
jg
inc
ficoms
adc
push
rcrb
cmpsb
int3
dec
jns,pn
mov
scas
inc
push
into
mov
loopne
and
pop
mov
lods
test
mov
mov
stc
pop
push
mov
sti
jge
imul
cwtl
lcall
jne
xor
cwtl
mov
or
and
mov
scas
dec
add
pushl
lods
xchg
or
lds
ds
mov
orb
adc
out
inc
and
call
mov
jmp
push
push
jbe
xor
and
decl
jge
std
test
dec
xchg
lret
mov
dec
lahf
fldl
mov
dec
fisttpll
fbstp
push
mov
ja
add
mov
mov
adc
pop
or
lcall
das
mov
in
aad
mov
fmul
mov
cmpsb
test
lahf
xor
xchg
mov
xchg
cmc
adc
jge
push
sar
rolb
push
sub
cmp
sahf
loop
xchg
xor
pop
xor
fistps
jle
inc
loop
in
mov
jmp
ret
aaa
outsb
adc
xor
call
pop
jbe
cmpsl
addr16
cwtl
sarl
push
sbb
dec
push
add
jo
adc
mov
inc
loopne
jmp
push
jne
dec
mov
lahf
cmpsl
ret
mov
inc
jle
cwtl
mov
xchg
mov
push
ljmp
decb
dec
lcall
pop
xchg
inc
test
mov
sbb
decl
popf
cmpb
mov
sahf
mov
loop
dec
push
or
jmp
pop
ss
cmp
or
in
adc
sub
sub
jns
inc
adc
pop
cld
fistpl
mov
dec
push
stos
call
pop
ds
mov
loop
pop
aam
outsb
pusha
jnp
jecxz
sub
incl
and
push
scas
mov
je
mov
xor
movsl
mov
push
scas
iret
fistps
rorb
dec
fnstenv
andb
jmp
stos
mov
mov
arpl
jmp
addr16
repz
loop
dec
test
sbb
jecxz
or
ljmp
add
loopne
push
mov
pusha
adc
mov
jmp
sbb
jmp
inc
repnz
repz
mov
add
and
mov
iret
inc
mov
rcrl
movsb
lods
outsb
js
and
xchg
lcall
movsl
cmc
fstpt
nop
inc
dec
inc
bswap
aaa
and
mov
in
fcomip
push
adc
and
sarl
cltd
jge
dec
add
cmp
jmp
in
mov
fisubl
sbb
mov
push
rep
jns
icebp
hlt
out
mov
insl
push
jmp
adc
testl
jl
icebp
ss
jb
leave
xor
mov
das
mov
mov
icebp
sbb
sbb
jno
pop
inc
cmpsb
sbb
xlat
pop
ficompl
mov
aad
mov
cs
sub
push
scas
sarb
nop
ret
dec
lods
fisubs
xchg
idiv
incl
pop
loop
cmp
push
std
lahf
aaa
loopne
shrl
test
mov
ljmp
xchg
inc
ret
jns
xor
pop
xchg
fidivl
inc
sbb
mov
pushl
out
add
push
push
pop
cwtl
hlt
push
mov
sbb
iret
lret
sub
adc
outsl
jbe
pop
je
jnp
add
xchg
mov
test
sbb
incl
push
faddl
mull
xchg
aas
imulb
arpl
mov
mov
mov
mov
out
out
ljmp
adc
std
lcall
popf
pop
into
mov
loope
mov
or
mov
pop
sub
mov
inc
xor
mov
cs
push
mov
hlt
mov
cmp
jo
dec
cmc
mov
movl
inc
xlat
fildll
dec
fcomi
out
stc
aam
cmp
mov
inc
out
and
pushl
add
test
out
mull
lahf
fxrstor
and
mov
jmp
ljmp
lret
mov
flds
daa
divb
push
mov
in
xchg
fbld
pushl
sub
gs
pop
and
xchg
es
and
clc
sub
sbb
dec
fistps
mov
jmp
js
mov
or
out
nop
repnz
sbb
decl
aaa
mov
add
and
insl
ret
xchg
loop
loop
add
ss
lcall
subl
sbb
sub
jnp
lcall
mov
dec
ret
dec
aaa
mov
rcll
add
mov
shrl
pop
jmp
in
mov
in
and
mov
sbb
out
sub
rcll
lcall
inc
lods
push
mov
push
jbe
mov
mov
mov
std
mov
leave
xor
sar
pop
lock
faddl
imull
mov
leave
cwtl
lods
test
cmpsl
test
incl
addl
in
lret
add
dec
and
push
add
jg
shrl
pushl
xchg
mov
pop
fcompl
dec
xchg
ja
imul
incl
xor
fbld
dec
dec
mov
cli
aam
std
xor
push
mov
loopne
push
xor
ljmp
in
cmpsl
adcl
insb
xor
lods
mov
mov
inc
and
ficoml
sbb
test
sub
in
mov
daa
fidivrs
push
loop
mov
mov
add
shrb
sub
sahf
pop
xlat
push
push
dec
cld
mov
xor
dec
and
pop
repnz
bound
mov
jmp
push
pushf
pop
add
sbb
filds
inc
add
clc
daa
push
sarb
ficoml
sbb
leave
xor
sbb
lods
aaa
shlb
int
xchg
cli
adc
sub
mov
ljmp
or
inc
movsb
mov
sub
sti
cmp
jmp
xor
out
cmp
das
pop
test
xorb
jle
push
and
aad
jp
cltd
dec
push
xchg
sub
cltd
inc
pusha
mov
movsb
mov
subl
out
outsb
sbb
outsl
insb
fistpl
mov
imul
push
std
pushl
lods
stos
rol
ret
cmp
notl
ficoml
adc
pushf
cld
sbb
jg
bnd
scas
inc
mov
adc
push
adc
dec
dec
ss
add
jmp
mov
mov
mov
pop
cld
mov
adc
mov
clc
cmpsb
arpl
cmp
push
xorb
roll
cmp
repnz
ret
cli
movsb
addr16
lret
push
call
sti
mov
je
inc
xor
mov
cmpl
imul
decl
enter
subb
addr16
and
hlt
stos
jp
sbb
fwait
ret
decl
lock
xorl
gs
repz
push
mov
lods
test
lcall
sbb
loop
sbb
ss
loop
nop
mov
push
mov
cli
jno
mov
sub
mov
push
xchg
push
int3
dec
lret
ret
loop
lcall
fisubrs
in
test
xchg
inc
sub
rolb
or
pop
scas
pop
sbb
mov
push
imul
jecxz
dec
aam
inc
or
ljmp
jb
fs
mov
push
in
pop
fst
adc
xchg
mov
xor
or
ljmp
push
push
lds
mov
das
push
rcr
adc
sbb
pushf
push
ss
fs
xor
sbb
adc
jl
es
pop
iret
cmp
ljmp
stc
popf
popa
push
jle
xchg
push
adc
add
sahf
lock
shl
jl
mov
add
push
sbb
mov
dec
popa
ja
inc
test
pushl
std
dec
dec
insb
ja
xchg
movsl
into
es
mov
test
clc
inc
int
and
add
cmp
ljmp
mov
fsubrs
xor
adc
push
rcrl
lret
sarb
cmpsl
clc
inc
fdivrl
stos
push
dec
loop
aaa
adc
decl
jo
xor
bound
sub
ljmp
sbb
fstpt
push
or
popa
xlat
add
mov
insb
xchg
xor
outsl
out
repnz
lcall
test
int3
daa
and
frstor
mov
cld
jns
hlt
jmp
les
sbb
dec
js
inc
repz
push
pop
jmp
mov
popa
xchg
mov
aad
das
sar
dec
movsl
jmp
mov
adc
mov
pop
adc
incl
fidivrl
aaa
les
arpl
out
js
iret
test
inc
xchg
mov
jbe
incl
push
fnstenv
xor
fsubrs
pop
pop
xchg
xchg
icebp
lret
sbb
sub
push
cmp
dec
idiv
ja
lcall
xorb
clc
lods
jecxz
pop
lret
xchg
negb
lock
pushl
sbb
stos
out
inc
inc
shrb
aaa
xor
lcall
es
mov
inc
mov
lret
cmpsb
imul
push
mov
dec
jp
inc
inc
push
lret
xchg
ljmp
mov
jecxz
movsb
jle
into
jmp
xor
insb
inc
movsl
push
and
sub
dec
inc
std
decl
pop
pop
sbb
lods
adc
or
fnstcw
ljmp
xor
dec
jo
inc
repz
push
jb
add
scas
filds
jno
or
outsb
stos
mov
pushl
add
pop
jmp
push
lsl
push
mov
push
xor
mov
call
sbb
pop
je
jae
mov
jg
in
cmp
mov
std
xor
sub
cmp
mov
jmp
sarl
push
mov
lcall
icebp
inc
ret
loopnew
ljmp
push
pop
inc
dec
and
mov
ljmp
xor
test
lds
stos
jne
stos
addr16
ljmp
mul
push
addr16
xchg
xor
jno
push
ret
and
outsl
adc
clc
push
jle
dec
setl
jne
incl
testb
xchg
daa
mov
sub
and
lret
stos
mov
add
xchg
imul
inc
inc
dec
movsl
sarl
cld
cltd
insb
adc
adc
les
pushl
movsb
out
or
nop
jne
bound
xchg
and
adcl
or
xchg
jle
dec
push
das
or
decl
shl
or
push
cmp
mov
jns
push
xchg
shlb
aam
imul
cmp
adc
push
decb
aad
not
imul
xchg
stos
rorb
jp
das
sar
pop
xchg
test
xor
sahf
ret
dec
shrb
sub
decl
fidivrs
movsb
xchg
hlt
add
stc
stc
xchg
jbe
imul
inc
andb
or
jmp
repnz
inc
cmp
inc
test
in
aam
push
out
insl
xchg
lea
pushf
jmp
dec
ljmp
mov
enter
adc
sarb
imul
xchg
mov
jg
cld
jno
adc
cmpsl
dec
add
xchg
stos
daa
xor
in
lods
pop
pop
adc
ljmp
das
mov
pusha
inc
cmp
inc
cmp
dec
sbb
popa
adc
int3
mov
jns
cs
clc
data16
ficoml
repnz
add
incl
movsl
jne
cmp
popf
test
mov
jg
inc
xor
ret
int3
mov
lds
sub
aaa
jg
sarb
jg
lock
decl
sub
cmc
daa
or
mov
pop
repz
fcomip
lcall
jmp
inc
pushf
sbb
in
inc
rclb
push
idivl
xchg
lcall
cmp
pop
mov
sub
or
xor
imul
fisttps
inc
stc
add
dec
ret
in
mov
xchg
in
add
push
mov
in
lcall
iret
clc
arpl
push
pop
enter
test
imul
adc
xor
call
lea
adc
call
jnp
fisttps
push
scas
xor
es
loope
xchg
lret
xchg
test
xchg
cmp
fsubs
xorb
cmp
fadds
mov
lcall
mov
pop
jge
outsb
je
adc
cmpl
cwtl
in
in
sbb
fdivp
les
push
xchg
cli
add
pusha
rcr
lret
rorb
popa
jne
decl
mov
xchg
adc
xor
add
fistpl
hlt
stos
add
lcall
sub
dec
push
xchg
jge
divb
cmp
imul
fsubrp
or
call
andl
vmovsldup
inc
pop
insl
inc
lahf
fstl
lcall
mov
mov
out
xchg
sbb
rol
out
incl
xchg
aam
sbb
pop
repnz
mov
lds
xchg
in
jp
mov
dec
jg
fimuls
add
incb
adc
xor
jmp
mov
pop
mov
mov
jecxz
mov
cmp
cld
or
cwtl
mov
sub
sbb
ja
ljmp
mov
xchg
sub
jmp
lods
imul
imul
cmp
rclb
out
mov
jae
dec
jmp
adc
jl
inc
in
pop
les
or
push
or
ret
mov
test
add
cmp
bound
repnz
das
adc
lret
cwtl
adc
add
push
cli
cmp
lahf
sub
push
cmp
mov
rorl
fcomps
jl
stos
cmp
sub
addr16
sahf
stos
mov
stos
aaa
pop
addb
outsl
decl
add
fdivrs
xchg
scas
or
iret
sub
mov
sahf
cli
mov
jmp
push
sbb
xchg
sahf
cli
leave
jns
cmp
in
adc
push
adc
arpl
inc
xorl
pop
fnstcw
movb
icebp
in
cmp
insl
into
in
push
pop
pop
cli
into
and
rorl
and
jmp
add
into
cmc
jno
cltd
inc
xchg
pop
inc
stos
fbld
mov
mov
inc
mov
test
orb
popa
pop
aas
mov
xor
loopne
loope
sarl
push
mov
ljmp
cli
jg
jo
push
lods
sub
inc
sub
xor
or
dec
mov
dec
dec
jmp
add
cmp
cmp
ret
shr
fildl
add
lock
mov
incl
ljmp
or
popf
xchg
sbb
ljmp
cmp
cld
sub
push
movsl
mov
mov
testl
scas
jnp
push
jo
mov
push
xor
push
mov
xchg
cmp
inc
mov
aam
in
mov
frstor
movsl
push
inc
cmpl
inc
ljmp
pop
enter
inc
hlt
mov
call
xchg
rorl
xlat
pop
fidivl
jge
leave
xchg
scas
mov
js
xchg
jmp
dec
cmpb
ss
ficoml
jnp
mov
push
insb
inc
imul
lods
inc
mov
pushl
cmp
xchg
add
lret
je
xor
push
xor
dec
add
add
mov
iret
xchg
inc
lcall
fildll
mov
hlt
push
sub
pop
in
out
mov
clc
ljmp
jnp
sbb
in
dec
mov
or
ljmp
lret
or
jae
fnstcw
movsb
pop
fadds
sar
decl
insb
or
cmp
imul
mov
add
incl
jnp
rcrl
jmp
mov
sbb
jp
imul
mov
lcall
sbb
ss
or
mov
fiaddl
daa
and
cwtl
jmp
sbb
inc
call
mov
test
sub
lcall
xchg
xchg
pop
adc
ljmp
idivl
ret
out
xchg
ds
jmp
ljmp
mov
lods
das
push
aas
inc
adc
and
mov
jno
sub
mov
sub
icebp
in
nop
cmp
mov
mov
mov
pushl
inc
in
cmc
mov
hlt
add
mov
pop
imul
addb
loopne
clc
mov
xor
in
jg
cmpl
es
sbb
repnz
pushf
iret
dec
pop
and
mov
incl
fcmovne
rol
cmc
add
jmp
or
mov
mov
js
in
lods
lcall
push
mov
mov
mov
jbe
adcb
and
mov
push
mov
sbb
jmp
aam
sub
push
mov
cwtl
ja
jo
dec
inc
cmp
dec
push
ret
data16
push
lock
gs
or
call
sti
add
bound
ljmp
cmpsl
clc
call
out
repnz
mov
leave
arpl
les
mov
incl
jnp
lret
rcr
push
iret
push
stos
repz
mov
push
jmp
stos
mov
stos
and
loop
js
push
mov
mov
pushl
push
stos
jmp
sti
jmp
outsb
inc
jp
cmp
dec
add
popa
je
mov
fisubs
mov
adc
lods
xchg
push
xor
fimull
push
lcall
and
call
mov
xchg
pop
mov
adc
decl
sub
nop
sarb
adc
dec
test
mov
jmp
mov
psubusb
push
stos
enter
lea
imul
dec
loop
int3
pushf
enter
gs
push
inc
mov
pushl
xchg
push
xchg
dec
pop
int3
ficoml
cmp
lret
int
cwtl
fidivrl
dec
cwtl
clc
lcall
fwait
cmp
dec
push
cmpsb
loopne
inc
push
stos
mov
pop
mov
cwtl
pop
sub
adc
imul
jo
hlt
or
filds
dec
stc
repz
addl
pushl
es
dec
in
pop
hlt
ret
jae
xchg
cmp
xchg
sbb
sbb
pushl
mov
fcmove
adc
subl
mov
movsl
dec
push
aas
mov
cmp
mov
jo
ljmp
xchg
mov
rorb
les
sub
mov
push
mov
push
test
cmp
scas
pop
in
ds
lods
mov
dec
es
lcall
dec
sbb
ret
ret
imul
daa
pop
sub
fnsave
adc
ss
inc
mov
aas
or
fs
dec
roll
sub
and
shr
dec
mov
xchg
or
sbb
jmp
int
mov
cltd
pop
dec
xor
lock
or
add
add
adc
into
es
mov
clc
push
sbb
jl
xchg
call
int3
jp
loopne
xor
mov
cmp
and
shl
inc
push
push
into
sub
mov
push
test
pop
dec
sbb
push
mov
xchg
jnp
iret
adc
in
push
add
or
xor
sub
lcall
xchg
sub
das
adc
repnz
mov
jmp
add
test
mov
mov
mov
jnp
fsubrl
xor
lret
out
cli
dec
pushf
js
dec
xor
aam
cmp
popa
scas
inc
pop
popa
push
mov
pushl
or
jb
aas
cld
adc
or
ret
out
xor
std
inc
lret
jecxz
ror
popa
mov
icebp
jg
or
rcl
imul
lds
pop
or
cmp
mov
or
call
pushl
cmp
test
loope
add
mov
or
pop
cmc
jg
mov
jne
sbb
xor
and
mov
leave
cs
mov
in
repnz
and
int3
cmp
sub
jg
add
mov
fisubrs
lret
mov
das
push
repz
incl
ljmp
inc
push
gs
iret
leave
fstl
in
ja
pop
in
mov
mov
stc
mov
or
bound
xchg
push
cmp
xor
cld
iret
push
lret
leave
leave
incl
mov
adc
sbb
bound
inc
sbb
in
xor
out
push
out
add
inc
clc
or
cmp
cltd
jmp
or
cmpb
jo
incl
mov
inc
push
stos
ret
xlat
int
xchg
es
insl
xchg
into
push
mov
push
loopne
movsb
jp
ljmp
cmp
xchg
incl
repz
outsl
pop
push
movsb
shl
and
mov
xchg
adc
sbb
mov
lcall
sub
dec
lahf
jae
jp
pop
xor
mov
pushf
mov
hlt
lcall
mov
push
add
push
pop
cmpsl
pop
dec
sub
cmpsl
insl
les
jmp
lcall
mov
stc
pop
jo
pop
test
ds
inc
sub
pop
imul
ljmp
shrb
adc
mov
adc
sbb
call
pop
ds
pop
loope
mov
xchg
mov
pop
lret
and
sbb
pop
mov
pop
mov
push
sub
sbb
or
mov
dec
push
push
ds
inc
ljmp
movsb
pop
imul
sarl
xor
push
push
clc
fsub
js
dec
mov
ret
ljmp
clc
cmp
addr16
mov
std
stos
sub
loopne
out
aas
push
sub
das
xor
imul
shl
inc
outsl
xlat
lret
dec
sahf
inc
bound
mov
out
sbb
int
and
pushl
lock
inc
dec
jno
cmpl
ret
inc
inc
repnz
call
in
out
movsl
pop
fistps
sbb
push
jmp
xlat
std
push
dec
pop
mov
lret
aaa
cmp
lcall
cld
loopne
scas
sbb
jl
fs
jbe
out
test
call
inc
xchg
push
stc
int3
push
mov
ljmp
or
mov
mov
mov
stos
ror
decl
dec
cltd
insb
push
sahf
stos
in
adc
push
andl
out
lret
imul
ljmp
mov
negb
jg
pop
sub
add
mov
ret
mov
inc
scas
inc
ret
or
push
sub
incb
pusha
ljmp
lahf
ds
test
mov
incl
mov
cmpsb
or
sub
xchg
loope
dec
scas
dec
fsubrl
pop
jmp
or
mov
insb
dec
inc
xchg
dec
pushf
sbb
stos
sbb
xor
mov
adc
dec
cs
insl
push
ret
cmp
popa
hlt
getsec
cmp
pop
add
cmp
mov
loop
or
loopne
mov
dec
sti
mov
cli
fdivr
xor
add
andl
sub
and
clc
les
incl
push
sahf
jg
sahf
out
push
mov
mov
add
mov
ficoml
push
cmp
int3
or
or
mul
das
pop
fldt
bound
inc
adc
into
scas
pop
jbe
mov
dec
lea
std
jno
sub
add
vcvtss2sd
test
jmp
dec
inc
add
mov
ja
rcrl
mov
add
mov
cmp
cmp
add
mov
mulb
imul
inc
insl
mov
jg
push
cmc
test
jnp
adc
push
dec
roll
xchg
call
fbstp
inc
push
rcrb
push
insl
rolb
xchg
clc
sbb
loope
addr16
push
push
sub
xchg
rol
adc
out
add
sbb
cmc
push
enter
jle
pop
popf
adc
lcall
out
mov
pop
jmp
inc
sti
es
aas
ja
and
scas
cld
or
dec
xor
pop
icebp
jg
sub
les
xor
xchg
iret
lods
push
cwtl
mov
sbb
sbb
hlt
mov
icebp
push
clc
push
clc
repnz
and
cli
jg
adc
xor
cmp
jnp
cmp
fstps
das
jg
ds
fdivr
call
jae
shlb
pop
sub
iret
or
sbb
lahf
cs
les
loopne
pop
mov
and
mov
lcall
mov
mov
lcall
ja
ljmp
pop
add
mov
andb
jno
mov
mov
dec
jbe
leave
decl
fidivl
push
in
xlat
sub
in
mov
dec
jmp
push
aas
out
dec
lahf
add
sbb
jne
or
scas
aam
sub
cs
jo
js
inc
stos
mov
jne
jns
paddsw
mov
call
clc
dec
sub
pop
hlt
pushf
cmp
ret
mov
sbb
pushl
jmp
ror
rcrl
sarb
sbb
cs
ljmp
inc
sbb
movsl
push
and
mov
cmp
in
leave
ljmp
jmp
mov
fdivrl
subl
sahf
outsl
insl
leave
pop
or
cltd
xchg
hlt
sub
incl
rcrl
jbe,pn
adc
outsl
aaa
subl
andb
mov
ljmp
sti
stos
dec
push
mov
cmpl
mov
or
nop
test
aad
stos
rorl
inc
xchg
jno
cmp
add
jo
jg
adc
and
push
insl
sub
cmp
lcall
cmp
fwait
ljmp
bnd
jecxz
mov
push
push
ficompl
mov
decl
lret
push
out
mov
rol
lret
lea
inc
das
mov
or
ja
adc
jmp
inc
jns
push
jno
std
rorb
push
inc
jno
pop
sub
idivl
dec
ja
incl
mov
mov
or
adc
cmp
call
cltd
xchg
test
or
int3
bound
inc
sbb
insb
fimull
cwtl
xor
dec
fwait
sbb
icebp
xor
pop
int3
int
pushl
ret
fdivs
and
or
pop
or
xchg
push
fsubp
pop
insl
loop
inc
cmc
adc
mov
xor
mov
mov
adc
cmp
pop
subl
mov
mov
add
mov
jmp
mov
pop
add
fs
nop
cmp
mov
lret
jmp
lcall
cld
add
push
add
or
ss
daa
lcall
enter
pop
push
mull
xchg
mov
lds
icebp
or
jp
jmp
mov
loope
andl
or
repnz
add
lods
cmpsb
pushl
shll
jno
in
nop
insb
mov
das
jns
bnd
and
or
lock
sub
or
mov
mov
mov
jnp
add
lcall
outsl
pop
cmp
pop
pop
cmp
pop
sbb
aad
inc
lcall
sbb
mov
in
push
xchg
jmp
cld
rcll
xor
lcall
ss
or
add
imul
add
ljmp
pushf
jno
out
mov
add
or
cld
jl,pn
cmp
xlat
lock
cmpsl
ss
lods
adc
xor
mov
mov
push
jns
inc
je
or
stos
mov
iret
inc
jl
cmp
push
rclb
xor
call
out
idivl
js
repnz
aad
mov
and
sub
gs
jbe
adc
out
popa
xor
test
adc
stos
and
mov
add
jg
dec
sbb
mov
lcall
jb
pop
mov
mov
mov
scas
push
mov
ljmp
mov
cmc
sub
test
mov
ss
jo
pop
setbe
mov
stos
sti
push
push
lods
mov
mov
sahf
out
pop
notl
add
cmp
ljmp
cmpsb
cmpsl
call
scas
mov
js
orl
mov
in
inc
mov
mov
fistl
mov
lock
or
pop
and
imul
ret
daa
push
stos
movsb
sbb
or
jno
inc
into
fldl
addr16
es
mov
mov
inc
lcall
xchg
jp
call
cmpsb
sub
outsb
test
mov
ljmp
clc
jmp
loopne
out
jmp
pop
addr16
test
inc
or
add
push
test
call
aaa
dec
adc
and
push
lcall
scas
mov
xor
lds
out
mov
fadds
pushf
mov
incl
imul
mov
adcl
add
xchg
nop
jo
in
mov
sarb
jbe
imul
insl
pushl
aas
outsl
enter
mov
mov
fistpll
sarl
dec
das
clc
mov
or
cmc
in
test
lock
pop
fcomip
incb
xchg
loopne
push
repz
mov
hlt
into
jo
and
setle
lcall
add
out
sti
daa
loopne
xchg
sti
dec
cmpsb
lock
std
xor
mov
int
scas
decl
in
inc
inc
sbb
icebp
push
clc
jbe
add
and
inc
add
jmp
out
push
ljmp
fs
dec
daa
mov
lahf
xchg
cmp
push
jecxz
lods
rorl
rcr
sti
sub
call
jg
xchg
push
pop
cmp
setge
push
in
pop
es
pop
out
xchg
frstor
jno
aad
pop
int3
mov
xchg
fistpll
xor
jl
decl
xchg
stc
subb
in
jae
fnstenv
rclb
sarl
add
fucomi
inc
insb
or
xor
in
or
inc
push
test
cmpsl
pop
and
adc
lock
imul
xor
or
pop
add
jmp
and
mov
incl
std
sbb
in
popa
xchg
mov
pushl
sbb
pop
sub
loop
pusha
mov
lcall
and
inc
jnp
sahf
or
icebp
fsubs
call
jle
jb
sbb
rcl
ljmp
mov
mov
nop
loopne
das
loop
xchg
int3
mov
addr16
mov
es
cmp
adc
gs
mov
inc
dec
ret
xchg
shlb
mov
and
inc
lcall
repz
jmp
ret
leave
cmpsb
mov
mov
pop
add
jge
adc
lds
pop
dec
and
insb
xor
mov
aam
ja
inc
lret
mul
mov
mov
inc
lret
xchg
sbb
mov
dec
fs
je
push
push
test
jmp
cwtl
push
inc
sti
xchg
int3
incb
ficompl
pop
out
cmp
jae
cwtl
test
or
incl
sbb
sti
es
xor
inc
add
jno
push
or
jo
sti
test
lock
jnp
cld
decl
test
test
push
out
fisubrl
imul
decl
sbb
lea
jmp
mov
sarb
mov
push
in
incl
mov
js
push
pop
mov
je
jno
add
popl
adc
push
outsl
nop
shll
mov
ljmp
lret
adc
into
cld
or
xorb
mov
aaa
jbe
in
and
les
cmpb
fmul
xor
lret
mov
mov
addb
out
dec
shll
loope
lcall
iret
xchg
addr16
pop
lret
shlb
and
push
shll
cld
xchg
int
ret
pushl
pop
mov
mov
rol
stc
mov
jno
xlat
or
push
inc
jae
sub
add
add
pop
daa
outsl
cwtl
sub
out
ds
fcomip
mov
mov
sarb
cwtl
inc
push
push
mov
inc
jb
sti
and
stos
mov
jg
dec
add
xchg
aas
xor
shl
and
and
adc
cmp
jmp
in
lret
das
test
jp
xchg
dec
and
pop
mov
in
incl
loope
mov
sub
or
inc
insl
cmpsb
test
ret
icebp
jle
inc
sub
xchg
and
push
lcall
stc
aad
mov
adc
and
adc
sbb
mov
call
lret
sbbb
jno
and
xor
loop
lret
fs
in
scas
or
dec
insl
inc
jg
mov
add
cmp
out
push
cltd
call
mov
js
jg
repnz
outsb
add
push
popl
mov
push
sub
call
jo
loopne
and
inc
test
and
roll
movsb
xchg
fstps
incl
cld
mov
jnp
fs
daa
and
mov
in
cmp
mov
sbb
mov
xchg
xlat
xor
outsl
inc
push
ljmp
pop
lds
call
and
lods
jmp
push
in
and
loopne
mov
and
aam
jg
arpl
jne
mov
push
arpl
xchg
add
push
mov
fisttps
std
pop
and
cltd
xchg
push
push
sbb
mov
outsb
push
in
jb
dec
iret
jl
ffreep
and
out
movb
pusha
pop
xchg
sub
mov
mov
push
and
pop
fistpll
pop
cli
ret
clc
sbb
shll
clc
xlat
jmp
add
shll
pmullw
test
inc
into
shll
pushl
push
stc
sbb
xchg
aam
cmpsl
push
xor
cmp
aas
and
movsb
data16
les
adc
mov
fcomip
lcall
cmp
adc
jno
and
mov
repz
fstl
loope
or
fs
inc
inc
inc
jb
push
out
mov
pushf
or
cmp
sbb
dec
or
jno
lods
and
jae
iret
and
addr16
jl
test
mov
movsl
push
fimull
pop
xor
ja
fdivs
je
cmc
push
mov
jbe
sti
inc
push
ljmp
xchg
ret
insl
push
ret
add
fcomip
and
mov
fbstp
bound
adc
and
sbb
out
inc
test
cmp
mov
mov
cmp
xor
add
mov
jo
mov
out
fstpt
fidivl
sub
bound
sbb
sahf
call
sub
inc
jne
mov
test
xchg
pop
stos
fs
or
decl
loope
mov
cltd
cmp
and
and
aad
xor
std
fcompl
decl
into
pusha
stos
sub
lock
adc
insb
icebp
lea
push
scas
pop
mov
push
sbb
cmp
cli
lret
jle
push
imul
out
lods
sbb
ret
aad
insl
cmc
mov
or
lcall
sbb
fisubrl
inc
dec
out
mov
push
adc
insb
mov
xlat
aam
call
sbb
mov
outsl
xchg
sti
into
xchg
in
jo
inc
mov
pop
jae
adc
decl
cmp
lahf
lods
push
imul
mov
cmpsb
sbb
test
inc
dec
insb
shrl
in
dec
popa
push
ljmp
cs
lahf
mov
adc
ljmp
test
mov
lea
pop
inc
arpl
xchg
xor
sub
push
mov
fiaddl
pop
lea
mov
gs
inc
cmpb
ss
call
cli
fsts
xchg
popf
xchg
push
sub
sub
je
sub
daa
inc
bound
dec
nop
or
call
add
mov
cli
roll
and
jmp
andb
adc
call
in
and
add
push
jo
sub
daa
inc
repz
cmc
jne
in
mov
mov
les
mov
mov
jmp
add
pushl
popf
xchg
fisubs
mov
mov
call
mov
and
sub
add
dec
pop
mov
mov
in
cli
dec
notb
or
int3
pop
cmpsb
movsb
clc
sbbl
mov
push
ljmp
popa
mov
lret
jne
cmp
test
clc
mov
inc
push
xchg
adc
xor
mov
lods
aas
push
mov
shll
mov
popf
mov
das
clc
pushl
and
lahf
das
es
sub
cmpsl
dec
ds
mov
dec
adc
cmp
mov
sti
addr16
insl
cmp
add
jp
jecxz
xor
inc
int3
sbb
sub
data16
into
les
jmp
pop
inc
mov
adc
div
les
in
cltd
push
cmp
out
and
mov
adc
sbb
nop
fmul
es
mov
mov
push
fildl
jecxz
decl
push
test
cmpsb
aas
clc
mov
flds
or
mov
les
sub
adc
cmp
mov
adc
mov
xchg
push
adc
xchg
or
mov
pop
push
jp
cmc
hlt
cmp
add
repz
push
xor
mov
fisubl
push
ret
cmp
call
cwtl
and
ja
jnp
cmp
cmovnp
ljmp
lret
incl
push
cmp
jl
loope
lcall
jbe
pop
out
mov
dec
cmp
out
adc
cld
lcall
inc
sbb
jo
gs
xor
sub
xor
addr16
popf
mulb
cmovle
adc
or
jno
xor
fsubp
gs
inc
repz
xchg
sbb
add
sub
mov
test
mov
out
xchg
repnz
pop
ffreep
lret
or
dec
xchg
cmp
out
inc
xor
xor
cwtl
movb
in
or
dec
pop
xchg
test
lcall
cmp
lea
cli
sbb
xchg
lcall
jg
mov
mov
repnz
and
into
in
rcrb
adc
mov
mov
decl
mov
inc
in
pop
mov
sbb
dec
insb
in
dec
cli
call
fadd
leave
and
imul
test
decb
call
cmp
mov
cmp
and
sub
decl
mov
insb
cmc
and
inc
ficoml
testl
cld
mov
rorb
xchg
in
les
lock
sub
and
call
mov
pusha
shlb
mov
jno
js
popw
popf
xchg
jg
inc
dec
rcll
dec
sub
sbb
test
jnp
and
mov
hlt
bnd
fcmovbe
shr
and
imul
sub
test
mov
jmp
dec
mov
xchg
lods
cli
jbe
dec
call
dec
shrl
clc
daa
call
cmp
jg
xchg
pop
xchg
push
scas
jb
shll
hlt
loopne
fnstcw
mov
mov
dec
adc
pop
ja
test
cmpsb
push
sbb
cli
pop
pop
popf
mov
jmp
lds
sbb
adcb
mov
xchg
mov
fisubrl
inc
lds
inc
mov
enter
cli
lret
jg
cmp
lcall
lahf
scas
repnz
pop
xchg
imul
mov
pushl
mov
and
movsl
aad
push
lret
orb
adc
mov
mov
test
sbb
gs
test
mov
lock
jmp
inc
mov
cmc
jo
scas
aaa
scas
push
fstps
pop
sbb
lds
ds
out
push
shl
sub
popf
loopne
fidivrs
jg
sbb
out
cli
cs
movl
adc
lcall
and
or
cwtl
into
rorl
lds
jbe
cmp
out
add
jnp
jmp
add
test
fwait
mov
sbb
mov
push
lods
fdivl
aad
adc
out
cmp
sub
andl
jg
pop
rcr
arpl
push
jp
add
add
dec
push
jg
and
sub
jge
ljmp
js
pop
push
test
mov
jg
dec
shl
xchg
push
js
jns
add
inc
leave
dec
aaa
dec
ret
jmp
iret
mov
or
insb
rcr
clc
xor
enter
mov
enter
inc
and
cmp
je
push
out
shrb
ljmp
mov
mov
jmp
xorb
imul
jp
inc
rcll
inc
dec
xor
jmp
movsb
ret
xor
sub
jle
pop
dec
mov
dec
ljmp
jl
call
dec
nop
inc
cmp
mov
xchg
scas
movsb
int3
bound
cld
cltd
cmp
jmp
jmp
lods
inc
ja
mov
jge
xor
pop
pop
out
int
push
cld
mov
cmp
pop
and
aam
mov
iret
cmp
jo
clc
clc
stos
dec
xchg
or
decl
or
jecxz
jg
mov
mov
sbb
loop
cmp
or
push
mov
call
mov
push
jl
fdivrl
mov
decl
insb
mov
pop
jbe
sub
mov
lea
fs
mov
pop
icebp
pop
pop
popfw
inc
loop
inc
or
sub
cli
mov
aad
inc
sbb
insb
jmp
aas
jnp
dec
lret
xchg
jmp
mov
outsb
add
mov
shl
icebp
jmp
jo
in
jbe
push
xchg
mov
push
mov
insb
outsb
or
jg
fadd
in
ret
mov
xchg
jecxz
das
sti
mov
xchg
cmp
xchg
test
call
adc
cltd
das
inc
add
bound
xchg
sub
lret
sub
mov
outsl
pop
ja
call
not
xchg
sub
dec
addr16
xor
fwait
mov
das
jae
pushl
jmp
cmp
insl
sti
pop
jne
sbb
outsl
pop
inc
outsl
pop
pushf
adc
in
mov
dec
incl
add
std
shrb
aad
pop
out
jnp
loope
andl
loopne
incl
call
or
out
aas
and
xchg
fs
sub
mov
movsb
lock
mov
cltd
pop
fldt
popa
mov
mov
cli
addb
cwtl
cmp
mov
cli
sbb
int3
mov
pushl
leave
ja
pushf
jl
add
loope
insl
cmc
call
sbb
adc
rcrl
incl
inc
jmp
dec
lahf
rol
or
fnsave
jp
jg
mov
dec
jo
test
or
jnp
mov
dec
push
bound
inc
fisubl
xchg
outsb
dec
add
sbb
dec
or
xor
std
enter
out
out
cli
pop
mov
mov
sub
xchg
add
imul
cld
fcos
lcall
sti
inc
fwait
sub
out
in
inc
hlt
repz
imul
pop
iret
stc
xor
xchg
jmp
xor
lods
xchg
mov
daa
cmp
bound
pop
inc
testl
in
call
call
pop
inc
xorl
movsl
stc
ljmp
mov
pushl
out
mov
xor
inc
mov
or
scas
inc
or
lahf
sar
pop
clc
pop
ja
cmp
mov
mov
xor
sbb
jp
rcrl
out
mov
jg
sarl
add
pop
test
xor
sub
sbb
cmp
push
xor
pushf
loope
jmp
loopne
xchg
mov
mov
sahf
cld
adc
mov
cwtl
insl
cmp
nop
lock
loop
mov
adcb
fs
sahf
push
pop
mov
lcall
insl
add
add
mov
fstps
and
lret
push
out
xchg
lock
mov
pushl
sub
jnp
push
cmp
aad
sarb
adc
test
cmp
sbb
adc
lods
fwait
lret
jge
out
inc
std
ja
adc
into
or
subl
daa
xorl
ret
iret
push
adc
jge
cwtl
fsts
sbb
cltd
push
mov
call
jle
xor
sbb
dec
lock
ss
cltd
cmc
outsl
cli
lcall
mov
lret
fidivrl
sar
mov
fildl
filds
out
pop
pop
inc
jle
mov
push
mov
ds
popf
cmp
aad
adc
push
test
out
lds
dec
or
inc
mov
mov
xchg
xor
pop
jo
sbb
and
movsb
jl
negb
enter
cmp
dec
call
mov
push
and
imul
and
add
cltd
cld
sub
inc
aas
xchg
sbb
incl
clc
dec
movsl
jmp
outsb
roll
call
jmp
mov
into
mov
in
inc
fcomp
mov
aas
inc
pop
jmp
dec
add
scas
addl
sub
or
sar
clc
bound
push
icebp
fidivl
xchg
loop
inc
outsb
xchg
pushw
add
mov
sub
sbb
and
sbb
add
or
pop
imul
lods
xchg
sub
fs
jg
mov
xchg
dec
mov
jmp
cmp
xchg
out
pushl
lea
nop
mov
inc
add
notl
jg
cmpsb
iret
cwtl
sub
pop
jb
and
push
adc
loop
loope
cmp
imul
sarb
mov
xor
add
les
mov
rolb
out
lcall
cld
xor
cwtl
cli
popa
xchg
loope
pushf
les
fiaddl
out
clc
insl
add
sub
scas
and
out
insb
push
lcall
jo
incl
add
cmc
pop
stos
mov
test
les
popf
or
cwtl
mov
dec
in
adc
mov
jb
sti
push
push
ret
orl
push
jo
pushl
je
hlt
cmpsl
cld
int
add
lcall
add
lret
negl
pop
push
in
sub
call
daa
mov
pop
je
or
mov
insb
loop
fistps
fs
stos
lcall
xchg
aaa
movsb
iret
sub
imul
cmp
jae
into
out
xchg
test
std
ljmp
jmp
jns
loop
sub
adc
lods
pop
lds
push
add
aad
pushl
fs
adc
mov
add
ret
imul
sub
es
push
mov
jg
sub
stos
popa
inc
loop
mov
sahf
insl
daa
testl
das
cmp
cs
ljmp
stos
pop
stc
jle
pop
xchg
inc
or
daa
adcl
cmp
and
mov
decl
adc
lds
fwait
insl
inc
cli
sbbl
cmpsl
dec
sbb
ljmp
dec
mov
imul
jp
ret
and
pop
push
aam
mov
decl
add
shrb
jle
dec
push
sub
ljmp
les
outsl
inc
in
push
cli
mov
clc
dec
test
std
pop
and
into
xor
mov
in
and
cwtl
fsub
pop
ret
mov
cmp
push
lods
ret
stos
fwait
push
and
jl
jae
roll
mov
lahf
pop
mov
fdivr
push
std
decl
js
xor
cli
sub
daa
and
xchg
pop
add
adc
fiaddl
imul
xchg
aaa
fistpl
pushf
mov
int3
lds
adc
sbb
mov
xor
jns
xor
jne
movsb
push
sbb
ljmp
into
arpl
jmp
inc
sbb
cmp
das
xchg
jne
mov
fsubrl
push
push
aam
xor
mov
jns
lret
add
das
ss
xchg
imul
jl
xor
loopne
arpl
orl
sub
pop
iret
fmull
xchg
push
inc
dec
mov
cmp
mov
movsb
mov
sbb
incl
imul
jmp
rcrb
into
sbb
fwait
pop
jno
mov
or
mov
ljmp
rcll
mov
add
mov
jno
lcall
out
dec
addr16
sbb
mov
imul
jns
inc
xchg
jae
dec
add
arpl
fldcw
inc
pop
inc
push
jbe
adcl
std
lcall
rorb
sbb
incl
les
add
inc
push
out
pop
jmp
xchg
divl
add
mov
jmp
inc
mov
aas
inc
add
sub
rorl
inc
mov
cmp
jnp
and
adc
jno
inc
and
and
jns
add
lcall
cmpsl
pop
adc
cmp
cli
xor
das
aaa
pop
mov
jbe
xchg
sar
jmp
push
sahf
icebp
or
mov
into
cwtl
lret
inc
mov
decl
jp
ss
mov
add
pop
pop
mov
push
bound
xor
mov
jne
xchg
sbb
ficomps
fsubrs
mov
fiadds
cmova
add
adcb
inc
lds
pop
mov
in
in
mov
mov
mov
mov
jae
push
lea
mov
push
inc
sub
jg
push
jo
int3
jno
sbb
push
out
push
mov
les
mov
add
jmp
cmpl
and
repz
les
jno
cmpb
in
cmp
cmp
lcall
gs
cli
sahf
jle
mov
mov
pushl
int
out
push
sub
daa
stc
repz
add
cmp
mov
out
inc
test
ljmp
xchg
adc
in
add
test
fidivs
les
xor
push
jg
cmp
jg
clc
hlt
jne
jmp
dec
inc
xchg
cmp
xchg
in
lret
xchg
es
mov
outsl
cli
ljmp
and
dec
push
push
ja
test
ret
sbb
rep
out
inc
dec
pop
in
cwtl
add
xchg
cmpsb
cmp
sub
inc
out
sbb
cmp
enter
jbe
lcall
cmp
leave
sbb
test
imul
stc
scas
movsl
test
and
adc
ljmp
test
scas
or
push
stos
sub
or
mov
mov
out
dec
aam
cmp
jecxz
pop
cwtl
fwait
in
pop
decl
cli
cmc
inc
addr16
mov
mov
pop
je
lret
ss
fisttps
lahf
mov
push
push
jge
cmp
push
xor
movsl
out
subl
mov
jp
mov
xor
mov
fdivl
cld
add
cli
lahf
mov
adc
push
pop
jo
cld
idivl
das
rorb
call
cmpsb
in
sub
cmp
ljmp
dec
mov
cld
sub
mov
pushf
sub
jo
sub
insb
insb
shll
inc
call
movsb
push
incl
pop
call
jle
jge
das
or
or
test
mov
mov
outsb
scas
movsb
jl
add
insb
jbe
pop
mov
out
pop
mov
sbb
jg
decb
sbb
adc
out
repnz
and
dec
mov
sbb
popf
push
mov
dec
daa
push
xchg
mov
mov
hlt
int
js
dec
aam
idivb
pop
xchg
je
adc
dec
mov
call
je
repz
mov
sub
rolb
mov
pushl
inc
fwait
rorb
insl
repnz
inc
int3
mov
mov
or
push
sub
jp
mov
and
inc
or
pop
std
sbb
or
movsl
xor
loopne
adc
imul
mov
leave
inc
dec
jmp
iret
cmpl
mov
pop
adc
fisubl
subb
loop
aam
out
mov
dec
or
sbb
fwait
or
mov
in
fsub
push
push
nop
sti
or
mov
icebp
addr16
cmp
dec
and
mov
hlt
xor
mov
cmp
decb
pop
sub
imul
pushl
xchg
fsubl
dec
out
stc
shrl
fisubs
test
sub
push
push
out
mov
lcall
movsl
pop
stos
lea
ror
and
aad
in
iret
mov
adc
call
es
add
jae
shlb
mov
sar
push
add
jge
cltd
fstpl
cli
push
pusha
cld
stos
in
and
icebp
xchg
push
mov
cmp
sarl
xorb
call
cmp
or
pusha
int
clc
mov
int
sub
fdivrl
cwtd
xor
cmp
data16
repz
xchg
popf
sub
or
mov
jnp
lods
repz
xchg
fdivrl
xor
push
add
bound
mov
test
mov
jg
pushl
lcall
leave
cs
xchg
mov
inc
inc
xchg
dec
popf
mov
sahf
cmp
push
clc
add
adcl
mov
xor
push
xor
dec
push
push
lcall
shr
inc
inc
sbb
outsb
adc
push
addr16
cmp
cmp
cwtl
sub
movsb
adcb
mov
sarl
lcall
push
sub
fistpll
popf
xor
cltd
inc
add
dec
mov
mov
bound
or
mov
lods
scas
sub
pop
xor
mov
mov
int
dec
jecxz
rol
fisttps
ret
lods
mov
pop
cmp
xor
jmp
outsl
or
repz
mov
ljmp
push
xor
adc
xor
or
pop
or
sub
sbb
fstpt
jmp
sti
or
rcll
sub
or
pop
dec
iret
or
call
stos
add
decl
mov
ss
sbb
cmc
into
clc
pop
popf
je
subb
fdiv
jle
test
push
loop
scas
adc
pushf
add
adc
jmp
adc
test
imul
fbstp
ret
lods
mov
outsb
push
out
pop
hlt
pushl
mov
xchg
push
lock
sub
jo
cmp
xchg
mov
cmc
pop
test
push
data16
rcll
pop
mov
ret
aad
outsl
shll
mov
call
push
sbb
pop
test
popf
arpl
fidivrs
js
and
stos
or
sarb
imul
imul
divl
sahf
mov
fstl
mov
loop
lods
pop
pushl
stos
sarl
mov
rclb
lcall
and
sbbl
bound
pop
xchg
dec
jbe
jle
aas
dec
and
mov
data16
je
inc
fldcw
andb
jle
cmp
shll
js
jmp
aam
fnstcw
push
cmc
push
jmp
push
rolb
rorb
fsubrp
cmpsb
rcrb
xor
cmp
lcall
mov
inc
or
mov
loop
stos
mov
sbb
sbb
xchg
inc
loope
pop
lods
add
jnp
mov
or
fdivs
xlat
in
aad
mov
jmp
dec
mov
out
push
cmc
je
pop
xor
mov
insl
sub
mov
decl
stos
xor
sahf
push
std
sbb
pop
into
jge
js
mov
jg
dec
in
or
leave
into
imul
mov
pop
dec
std
lock
xchg
pushf
jmp
in
call
insl
sbb
inc
bound
mov
dec
shr
push
int3
inc
dec
cwtl
fisttpll
lcall
and
xor
notb
cmp
enter
cmpsb
adc
hlt
leave
cmp
add
jg
jmp
xor
enter
test
adc
fmuls
or
sti
xor
ljmp
dec
inc
push
cmp
fiaddl
add
stos
iret
test
or
mov
or
and
les
jne
scas
das
adc
stc
xchg
cmp
inc
inc
xchg
sti
mov
imul
jmp
bound
outsl
fcomip
incl
cmp
fisttpll
or
or
sbb
enter
push
icebp
fmull
pop
cmpsb
jl
aam
pushf
loope
and
lcall
mov
inc
push
imul
in
icebp
ljmp
pop
mov
push
rcl
jnp
mov
ja
dec
cmp
jge
lcall
sub
xchg
scas
fsubrs
fsubs
lret
cs
popa
push
je
scas
adc
or
jle
sbb
jns
out
cmpsb
inc
mov
repz
dec
push
and
xchg
mov
xchg
and
mov
notb
cmp
pushl
data16
push
scas
or
dec
movsb
movl
push
inc
xchg
ja
cmp
add
ljmp
loopne
push
jmp
ret
iret
in
ds
jg
test
outsb
push
mov
mov
sub
in
xor
lcall
fwait
xlat
fisubs
mov
repnz
decl
jle
cli
ss
jae
cli
aas
inc
mov
mov
sbb
fiaddl
push
sar
push
in
cmp
pop
inc
cs
test
add
decl
cs
out
ficomps
sbb
mov
fnsave
pop
imul
loope
pusha
jge
sub
add
mov
lret
jns
test
mov
orl
and
movsb
dec
fists
lret
out
inc
arpl
mov
cmpsl
cmc
jecxz
jo
pop
adc
sarl
jnp
pop
mov
rorl
ljmp
popf
into
or
je
mov
push
jg
ljmp
dec
push
sub
fistl
cmpsl
dec
pop
xchg
pop
dec
ja
pop
sbb
mov
dec
mov
insl
popf
mov
jb
in
cs
inc
ds
sub
dec
jnp
test
stos
loop
sbb
in
aam
in
jl
scas
pusha
and
push
sar
pushl
xor
and
mov
ret
stos
ja
xor
mov
ret
cmpl
and
jmp
sub
aaa
and
daa
or
pop
push
mov
decl
mov
xor
clc
je
je
stos
xchg
call
add
cmp
mov
shll
ljmp
mov
rorl
lcall
cltd
or
pop
movsb
mov
xor
mov
push
pop
and
push
jl
mov
sbb
push
pop
cmp
iret
js
mov
hlt
mov
and
inc
xlat
outsl
sub
push
jno
dec
mov
outsl
pop
push
push
iret
or
and
and
popf
pop
outsb
adc
enter
pop
push
pop
iret
cmp
jb
cmp
jmp
aas
orl
adc
push
sub
imul
insl
push
jbe
mov
icebp
mov
or
jmp
rol
xchg
rorl
fsts
pushf
clc
add
jns
and
sub
dec
fsubr
loop
adc
jne
stos
dec
mov
rclb
xchg
push
out
and
or
dec
jns
cmp
xor
jb
clc
rorb
lods
cmp
sbb
pop
fldt
cmpsb
adc
fwait
pop
fnstcw
das
dec
xchg
push
lahf
js
or
ljmp
orl
push
jp
xchg
adc
mov
xchg
jmp
movsb
ljmp
cmpsl
dec
mov
inc
or
ret
test
xor
repnz
fisubl
mov
ror
fidivs
push
add
cmpsb
aad
imul
out
xchg
arpl
movsb
xor
and
cmpb
clc
sbb
scas
inc
fmull
push
jmp
aad
cmp
insl
sub
inc
pop
iret
add
adc
jb
pause
fldenv
push
bound
lcall
xchg
in
ret
adc
or
mov
insb
add
loop
or
xor
sarb
inc
stc
jb
out
cli
out
mov
or
bound
adc
sbb
ljmp
or
push
fcom
ja
jmp
stc
pop
lods
jno
int
or
ljmp
sub
mov
and
mov
mov
idivb
incb
mov
popl
fcomps
in
dec
mov
dec
shll
ljmp
xor
sub
in
pop
pop
icebp
xlat
or
in
rorb
jb
push
or
pushl
pushf
mov
or
popa
adc
xchg
ret
aad
mov
pop
pop
and
sub
dec
in
incl
sub
inc
lock
pop
lcall
outsl
shll
ret
sbb
pop
jecxz
or
aam
lcall
cs
mov
ljmp
bnd
test
imul
and
pop
lea
fwait
ljmp
flds
sbb
mov
jbe
sarb
or
ljmp
sbbl
cmp
ret
dec
mov
sub
and
loop
mov
pop
jmp
nop
sub
lods
jp
mov
or
sbb
mov
sbb
in
sbb
lret
imul
and
imul
mov
pop
fcomps
pusha
insl
add
xorb
std
push
out
sub
daa
mov
or
cmp
mov
xchg
cwtl
mov
mov
test
push
popa
cld
out
push
inc
or
mov
xor
lock
stc
cmp
ss
push
out
jb
pushl
pop
push
ret
dec
mov
addr16
call
aam
or
int3
push
pop
jnp
je
lcall
jl
cmp
arpl
imul
dec
and
out
sub
repz
les
ds
mov
sbbb
pusha
enter
out
daa
cmpsb
dec
mov
xchg
add
jb
lods
sbb
jmp
or
jmp
sub
ljmp
xchg
insl
dec
rorl
clc
in
cmpl
ljmp
cmp
inc
mov
mov
jbe
adc
mov
pop
pop
gs
adc
jg
mov
push
iret
int
dec
imul
jmp
or
mov
mov
call
xchg
pushl
test
jg
push
dec
mov
pop
es
lea
aaa
testl
std
call
dec
jbe
loopne
cld
inc
pop
jne
add
jecxz
push
imul
pop
pusha
into
pop
sub
les
les
cli
pop
dec
adc
cmpsl
inc
xor
inc
add
xchg
aad
lods
xchg
arpl
aaa
xchg
pop
jecxz
ret
popf
arpl
mov
rcll
push
xchg
sub
imul
pushl
jns
rclb
sbb
dec
cmp
mov
pop
sub
cmp
das
ljmp
lcall
jecxz
mov
cmp
cli
adc
mov
add
imul
sahf
xchg
dec
and
clc
out
lcall
addr16
pop
cs
sahf
add
fstl
xchg
call
adc
out
add
pop
not
aas
push
leave
jp
adc
lahf
gs
decl
aaa
rcrb
cmpsb
cmp
jge
add
das
pop
push
lea
jbe
sahf
jno
movsl
cltd
arpl
dec
call
int
xchg
xor
mov
adc
push
mov
cmp
in
sub
and
jbe
test
lcall
push
outsb
je
adc
mov
popa
xchg
out
outsb
insb
sbb
push
and
and
adc
pusha
mov
lret
mov
shlb
movsb
rcrb
lods
jmp
fcmovnbe
clc
sti
out
mov
xor
xor
mull
adc
mov
sarb
fcmovnu
rclb
cld
ljmp
mov
shr
adcb
mov
add
pushl
mov
or
push
fsubrl
cltd
adc
stc
inc
lock
clc
fcompl
cmp
std
incl
pop
rorb
inc
sbb
in
xchg
aaa
insl
dec
pop
iret
insl
mov
dec
and
jns
jmp
test
scas
adc
ja
add
cmp
jmp
mov
int3
mov
in
add
sub
loop
or
inc
int
ljmp
aaa
in
pop
cmp
fistl
lcall
jg
and
ljmp
push
ficomps
mov
lahf
stc
jno
js
sbb
mov
push
gs
int3
aaa
das
decl
hlt
jmp
adc
sub
fs
xchg
inc
push
loopne
or
popf
xor
xchg
stos
cmp
int3
lahf
push
pushf
ret
pushl
add
cmpsl
xor
add
mov
enter
cmp
mov
jmp
repz
je
inc
push
mov
and
and
cwtl
nop
inc
js
sbb
sbbl
jecxz
cmp
adc
adc
xor
aaa
lcall
jmp
pushl
lret
jbe
insl
mov
sub
jg
dec
cmp
inc
mov
dec
sar
out
cltd
dec
int3
adc
lcall
xlat
shlb
xorl
mov
push
jl
and
adc
mov
in
and
pop
mov
jmp
jmp
aad
mov
fisubrl
mov
out
lret
or
adc
ljmp
popl
jns
mov
push
mov
int
push
jg
into
pop
adc
lcall
sub
jg
cmpsb
mov
jnp
add
push
xor
jl
adc
in
aas
fdivrs
inc
lcall
adc
daa
lea
ret
pop
xchg
call
and
adc
push
popf
ljmp
out
sbb
pop
lret
out
dec
sbb
out
and
xchg
lds
pop
mov
in
outsl
sub
adc
push
divl
call
pop
and
inc
pop
sub
test
orl
stc
incl
or
aaa
aam
push
xchg
dec
pop
mov
xchg
dec
ss
xor
mov
push
incl
push
pop
mov
rcll
mov
repz
jae
or
ljmp
addr16
js
rorl
pusha
mov
xor
repz
incl
mov
pop
sbb
add
and
jmp
or
adc
arpl
push
sub
or
shll
push
pop
lods
jo
cmp
repnz
call
shlb
ss
inc
sbb
xchg
into
mov
push
adcl
xchg
sub
les
gs
or
push
add
and
popa
cs
mov
push
mov
push
lret
imul
call
fdivp
cmpsl
inc
repnz
pop
mov
mov
sbb
adcb
aad
repnz
lods
cli
fcoms
fs
gs
mov
iret
aas
push
aam
leave
xor
mov
lock
pop
or
jno,pt
xchg
fcoml
pop
movsl
xor
jle
push
inc
cs
sub
push
sbb
xchg
or
mov
rcll
dec
bound
aaa
std
pop
xor
xor
inc
mov
mov
loope
adc
pushl
cld
pushl
inc
bound
sub
movsb
pop
xchg
inc
jno
inc
dec
sbbb
push
shrb
or
mov
inc
mov
push
int
add
pushl
movsb
je
xlat
pushf
adc
and
lock
daa
shlb
add
or
jg
adc
push
dec
out
nop
clc
addl
test
rolb
icebp
xchg
call
lret
add
fstps
rorl
mov
jb
sti
and
outsb
pop
test
ljmp
cmp
mov
rep
dec
jl
insl
shlb
lods
aad
stc
ja
mov
jecxz
std
jns
dec
dec
cmp
ret
push
popa
sahf
adc
add
scas
test
cmovp
call
out
clc
mov
dec
adc
ficompl
sbb
fcmovbe
and
pop
outsb
cmp
es
mov
call
sbb
dec
and
sbb
adc
or
mov
mov
push
das
mov
popf
push
loop
scas
or
loope
call
ret
sub
mov
and
movsl
xor
mov
lcall
imul
sbb
dec
cmp
cmp
call
push
in
sub
mov
subl
repz
call
mov
mov
mov
mov
popa
ljmp
lock
pop
push
jmp
cmp
out
in
inc
negl
xor
jne
sbb
test
filds
push
popa
decl
xchg
lret
clc
inc
out
cs
inc
and
incl
jle
or
cmpsb
fcmovbe
ret
and
mov
add
mov
pop
dec
jbe
xchg
shlb
mov
jg
daa
in
fstpt
or
mov
inc
push
dec
sti
mov
push
mov
xchg
pop
adc
mov
inc
ljmp
push
ljmp
addl
cli
dec
mov
sub
stos
sti
pop
cmp
int
mov
mov
das
mov
push
out
int
incl
inc
scas
xchg
mov
jmp
push
push
lds
inc
mov
add
fcos
ljmp
mov
add
inc
lock
jnp
push
lods
adc
or
jecxz
mov
jg
add
inc
mov
lcall
mov
xchg
push
aaa
xchg
push
bound
lock
push
jo
xchg
pushl
inc
xchg
sbb
fisubl
push
lret
xchg
inc
cmpsl
push
cmp
pushl
repz
jb
sub
stos
cmpsb
nop
inc
je
hlt
into
nop
mov
cli
int
sbb
insb
icebp
sub
js
call
and
xor
ss
fcomip
pop
sahf
clc
fstpl
cmc
outsl
xchg
mov
mov
push
xor
movsl
jns
xchg
and
lea
lock
xchg
fdivl
gs
mov
push
mov
push
push
inc
loope
cmp
mov
dec
arpl
mov
mov
out
mov
mov
mov
out
nop
int3
mov
inc
iret
or
mov
into
push
jno
fiadds
sti
sub
cmc
push
int
test
sub
sub
mov
mov
aam
rcll
pop
xlat
jbe
outsb
mov
inc
mov
pop
jg
pop
daa
stc
in
jle
movsb
shr
lahf
ret
fisttps
jmp
cmp
mov
and
cwtl
fldt
xor
sub
mov
stc
shr
pop
ljmp
in
lahf
lea
cmp
stos
pop
cmpsb
xorl
roll
fsubs
in
xchg
push
test
out
pop
xchg
xchg
call
cmp
inc
or
jmp
jmp
dec
fimuls
xor
adc
pop
or
aas
xchg
nop
out
jo
add
rolb
pop
xchg
stos
testl
out
dec
inc
cmp
adc
cli
push
push
dec
dec
jnp
std
js
sub
push
mov
sti
mov
stc
icebp
fwait
adc
ret
and
dec
leave
push
mov
repz
xor
call
arpl
push
push
jo
mov
jnp
outsl
scas
mov
jns
popf
cmpsb
das
ds
lcall
adc
rcll
jmp
mov
xchg
adc
repnz
repnz
int3
jbe
mov
outsl
out
les
jl
loope
or
fldcw
adc
xor
in
xchg
testl
mov
fcomip
call
ret
fwait
sbb
jmp
int3
xor
es
mov
dec
inc
mov
jnp
jg
mov
jb
jecxz
test
mov
int
ja
dec
push
sbb
ret
push
cmp
bound
addr16
pop
mov
cmp
pop
pushf
dec
sub
ret
call
mov
inc
adc
mov
add
fwait
inc
iret
ja
loop
decl
lock
cld
sub
addr16
loopne
xchg
out
cmp
add
into
inc
lods
dec
sbbl
sbb
pop
jo
jecxz
mov
mov
mov
adc
in
mov
pop
out
shr
push
cmp
push
cli
cmp
loop
hlt
bound
push
jp
ljmp
cli
cmovns
xlat
pop
fistpl
lcall
mov
scas
and
loopne
push
inc
mov
jae
pushf
mov
jmp
pushl
aas
jb
pop
pop
out
cmc
lock
sub
ret
jae
push
xor
cmp
repnz
lcall
sub
push
add
fdiv
dec
jge
adc
into
mov
sarb
lret
sar
jmp
and
mov
cmc
jae
test
cmc
cmpsl
sub
mov
shll
into
push
inc
in
xchg
aad
sbb
lods
pushl
jb
fidivrl
nop
fimuls
push
sahf
aad
enter
sbbb
inc
stc
popa
test
mov
mov
out
scas
dec
dec
dec
jne
mov
mov
sub
mov
cmp
lret
xchg
daa
sbb
jg
cmp
clc
inc
push
dec
iret
aad
push
addr16
nop
jl
stos
xchg
mov
mov
imul
fcompl
or
aam
lahf
insl
mov
es
ss
out
fidivl
mov
jl
mov
lods
pop
push
lret
lods
in
shrb
sub
loop
decl
pusha
adc
mov
pop
fwait
sub
call
dec
stc
test
movsl
decl
mov
dec
jl
mov
jle
inc
sbb
mov
mov
jmp
in
sub
outsl
dec
sbb
xlat
das
mov
dec
movl
xchg
fidivl
lcall
test
testl
and
pop
mov
dec
mov
mov
dec
xchg
je
or
sbb
cmp
cmp
pushl
or
sti
jnp
stos
add
push
mov
arpl
xchg
mov
inc
lcall
mov
push
xchg
pusha
pop
cli
pop
inc
push
ret
xchg
cmp
leave
sarl
mov
pop
cmc
lcall
arpl
movsb
cmpb
mov
mov
dec
popa
sbb
cmp
lcall
out
lds
xchg
jnp
cmp
dec
mov
fmul
pop
outsb
call
incl
adc
xchg
js
out
fcoml
ret
adc
int3
sar
cmp
lods
rcll
mov
dec
mov
cmpsb
jg
push
mov
jmp
out
sub
enter
mov
pop
inc
inc
jle
cwtl
nop
icebp
icebp
add
call
call
pop
sbb
stc
sbb
call
mov
jae
pop
fstl
call
xchg
mov
ljmp
outsl
mov
fmul
dec
dec
jns
lods
cmp
int
incl
lret
sub
jge
mov
popf
movsl
dec
das
push
sub
pop
loope
daa
add
xor
lcall
pop
jne
inc
cmp
dec
jno
mov
subl
dec
aam
js
mov
xchg
ret
jmp
lret
sbb
ljmp
jecxz
mov
mov
clc
dec
fnsave
movsb
dec
pop
aaa
mov
std
incl
dec
cmp
sbb
xor
leave
cld
sbb
or
or
pushl
adc
push
dec
pop
ret
hlt
lods
divb
roll
or
stos
add
fdivrp
aam
out
loope
sub
push
sub
sub
sub
fdivl
out
xchg
lahf
stos
cltd
dec
xchg
es
lcall
dec
mov
scas
fwait
mov
or
test
in
mov
mov
cmp
mov
jmp
loopne
imul
insl
mov
dec
dec
inc
xor
jmp
sub
jns
xchg
lret
adc
in
add
mov
dec
sar
je
xlat
jns
pop
out
cld
insb
iret
insb
fstps
jne
fcmovne
lds
iret
fwait
mov
cmpsb
arpl
push
xchg
mov
clc
das
clc
lcall
js
insb
shlb
sbb
ret
ret
push
out
cli
ljmp
mov
dec
das
push
cmc
cmp
arpl
dec
test
call
mov
cmp
inc
fs
mov
out
cmp
xor
adc
xchg
ficoms
xor
cmp
call
mov
or
stc
or
push
mov
outsl
pusha
cmc
xor
adc
jl
lea
pushf
std
pop
cmc
cmpl
testb
add
add
mov
imul
fcomip
incl
mov
inc
jb
jae
inc
sbb
xchg
xchg
jge
scas
pop
es
push
and
loop
incl
jp
loopne
sbb
push
jo
mov
mov
jg
jmp
fbstp
xor
rol
add
sub
xchg
mov
clc
incl
lods
adc
mov
mov
rcll
int3
jl
loop
inc
pusha
lcall
in
movsl
jmp
mov
repz
movsb
inc
and
lock
add
lahf
cwtl
push
sbbl
decl
xchg
push
adc
test
out
add
mov
push
outsl
adc
addl
movsl
xchg
cmp
clc
pushl
aam
mov
add
shlb
jmp
xor
push
pop
insb
push
push
push
jns
icebp
gs
inc
nop
fdivr
ds
cmp
inc
dec
inc
pop
add
mov
fistpl
add
add
add
add
or
pop
pop
push
or
or
or
or
push
fcomi
or
adc
adc
push
adc
or
pop
sbb
adc
adc
adc
add
push
lods
fnsave
pop
adc
ss
pop
cld
inc
add
or
xchg
add
add
adc
sti
adc
movb
add
jp
push
cltd
fldl
xor
add
fbstp
imul
add
add
push
adc
pop
and
xor
xchg
mov
rcll
bound
js
dec
pop
xchg
test
xchg
subl
insl
xchg
inc
fwait
and
dec
enter
test
pop
mov
adc
and
nop
xor
shrb
adc
add
pop
incl
jmp
scas
cmp
adc
push
adc
pop
popa
jno
stc
add
adc
mov
or
xor
adc
shrl
mov
dec
inc
jo
mov
mov
rorl
mov
fiaddl
or
adc
stos
js
das
mov
push
nop
std
or
add
lcall
inc
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
push
ljmp
sahf
aad
std
movsl
jecxz
mov
sarl
jmp
clc
andl
lcall
inc
repnz
xchg
out
or
push
push
xchg
add
shlb
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
jg
faddl
lcall
mov
push
pop
mov
pop
pop
mov
decl
in
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
incl
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
lcall
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
test
cwtl
int
arpl
push
out
or
pop
sbb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
aaa
mov
mov
xchg
std
sarl
xor
hlt
and
jmp
sbb
add
dec
out
pop
jb
mov
or
push
mov
sub
subb
pop
mov
jl
rorl
adc
mov
std
lahf
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
aas
stos
push
testb
mov
scas
fdivr
incl
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jne
subl
jb
adc
push
lock
lods
jp
testb
clc
aad
aaa
sbb
lahf
dec
sbb
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
sti
jmp
or
dec
fisttpll
out
aas
std
cli
pushl
push
idivl
cmp
sub
inc
scas
inc
mov
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
pushl
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
fistpll
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
call
addr16
adc
ret
das
pop
pop
pop
shlb
ljmp
cmp
lock
or
sarb
std
pop
les
cli
mov
lcall
xchg
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
call
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
inc
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
inc
dec
shrl
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
shrl
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
call
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
in
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
call
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
loopne
idiv
pop
cld
addl
adc
and
xor
mov
lahf
fmull
enter
jecxz
scas
sub
add
in
pop
mov
sub
mov
dec
outsb
mov
pop
xchg
aas
mov
or
cld
inc
or
testb
push
pop
jg
add
jg
mov
mov
aad
test
mov
mov
iret
push
std
mov
out
jbe
push
sbb
stos
icebp
pop
incb
jno
mov
cvtpi2ps
push
inc
jecxz
sbb
sarl
adc
js
fdivr
loopne
and
clc
xorl
mov
imul
dec
ret
imull
mov
mov
aas
mov
fsubrl
cmpxchg
and
or
mov
pushf
mov
cld
cmpb
jne
push
and
mov
adc
inc
aas
cld
decl
rolb
pop
inc
jb
fistpl
adc
call
pop
in
xor
pop
pop
nop
mov
inc
sti
push
pop
push
arpl
daa
std
or
sbb
sub
pop
incl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
push
cld
lds
fidivrl
jg
stos
pop
iret
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
rcl
push
cld
addl
sub
stc
mov
lahf
outsl
int3
push
sbb
idiv
pop
imul
arpl
out
out
outsl
xchg
jg
incb
jge
popa
push
test
jbe
outsb
hlt
sti
fwait
clc
pushl
cld
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
icebp
outsl
js
pop
jg
pop
shrb
rcl
jg
adc
xor
inc
sti
lcall
fisttpl
sub
jmp
lea
jp
jnp
jecxz
jg
add
ds
pop
adc
imul
or
inc
pop
xor
in
inc
nopl
xor
subb
iret
mov
lock
inc
cmpsl
enter
clc
in
pushl
xchg
movsb
insb
or
and
xchg
ficomps
aam
jp
clc
insb
test
aas
repz
clc
fists
sbb
lock
in
jmp
out
sbb
aaa
clc
push
hlt
je
ret
jl
icebp
fs
pop
add
jne
or
cmc
mov
push
mov
and
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
aaa
std
insl
out
pop
or
or
dec
ss
outsl
pop
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
cli
testb
pop
in
aam
sub
pop
mov
jmp
mov
pop
lock
in
scas
and
jmp
hlt
dec
mov
xlat
inc
jmp
mov
jg
mov
sub
addr16
mov
jg
fsubp
cld
daa
jp
std
adc
cltd
or
mov
mov
ja
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
sub
je
jge
paddsw
mov
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
push
xor
es
push
or
jge
out
adc
insb
cmpsb
cmp
call
xor
decb
mov
das
push
adc
mov
and
call
mov
dec
jb
jo
or
mov
cmp
int
add
push
pop
aaa
std
ja
test
dec
inc
das
js
xchg
xchg
fimull
ret
and
pusha
dec
ror
sbb
aaa
inc
push
pushf
jecxz
adc
shrb
adc
aas
pop
clc
loope
loope
mov
lahf
jp
mov
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
xor
decb
push
xor
gs
inc
sub
sti
sarl
pop
out
jg
jno
ret
fs
dec
push
dec
cmp
pop
sbb
mov
jge
lcall
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
push
cld
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
mov
sub
mov
lock
stc
push
dec
out
fstpt
mov
enter
dec
adc
add
fsts
xor
sub
dec
add
dec
int3
movsl
data16
sti
push
sti
pop
inc
add
or
aaa
enter
bsf
popf
test
push
mov
andb
and
and
push
mov
add
or
add
inc
fidivrl
incl
fcom
push
jnp
stos
add
inc
sahf
jo
mov
jg
add
add
mov
cmpsb
in
inc
add
stc
imul
pop
dec
orb
fiadds
lahf
pop
push
test
push
mov
or
and
push
movsl
bound
push
pop
cmp
add
nopl
push
or
adc
or
jno
mov
jnp
xchg
movsl
push
daa
add
xchg
jnp
popa
call
push
and
jnp
push
movsb
push
movsb
inc
scas
push
and
stos
push
and
iret
push
push
test
and
imul
push
out
adc
add
mov
pop
sbb
lods
stc
sbb
mov
sbb
inc
mov
sbb
pushl
fwait
pop
les
push
adc
fs
mov
insb
or
mov
imul
inc
push
clts
imul
push
add
daa
fs
fldl2e
fdivs
mov
lock
pop
stos
pop
stos
mov
nop
jb
ss
add
jo
mov
push
shll
sbb
loope
shrb
shll
fidivrl
iret
outsb
or
insl
fcmovnu
mov
push
ja
ret
je
fidivrs
out
jge
neg
add
push
xorb
ljmp
insl
in
in
movsb
push
add
mov
sbbl
push
mov
jns
arpl
push
push
push
add
jne
inc
out
push
aam
push
outsb
add
mov
push
pop
into
loopne
je
add
ja
scas
cmp
add
pop
aaa
add
out
ds
push
push
shlb
lret
neg
fnstcw
ja
push
push
xlat
jne
insl
rcr
add
ja
push
aad
push
xlat
sarl
mov
ja
js
push
jns
push
jp
push
jl
fnstcw
inc
push
fidivrl
sarl
ja
adc
cmpb
je
ret
outsb
fidivl
jmp
ljmp
xchg
in
xchg
sub
push
pop
cs
xchg
xor
xchg
push
insl
push
xchg
dec
fisttpl
imul
aaa
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
ja
xchg
inc
lahf
mov
mov
in
jecxz
push
imulb
movl
out
jns
out
push
hlt
clc
stc
cli
sti
loope
sahf
out
std
incb
jecxz
arpl
data16
sbb
add
jo
imul
dec
push
add
pop
add
pop
add
ljmp
pop
push
enter
mov
add
adc
add
mov
or
or
outsl
or
and
stos
add
test
mov
or
push
sbb
push
pop
pop
adc
adc
xor
lods
pop
stos
cvtdq2ps
lods
pop
mov
mov
insl
cmp
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
fldcw
sbb
scas
scas
scas
and
subl
inc
and
mov
mov
add
pop
push
mov
push
pusha
cmp
and
xor
lock
popf
imul
and
add
das
and
and
shrl
mov
pop
sub
mov
pop
sub
daa
and
mov
subb
sub
lea
push
es
fwait
and
cmp
cmp
cmpsb
add
std
jg
mov
xor
xor
pop
or
or
jle
jbe
add
pop
pop
xor
jg
incl
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
jg
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
or
lock
jbe
cmp
jl
jge
jno
dec
add
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
inc
jmp
mov
pushf
fwait
lcall
mov
jle
int
mov
inc
xchg
push
dec
ja
jns
dec
push
bound
jg
fwait
push
js
imul
add
mov
pop
jg
xor
pusha
mov
andb
adc
lsl
test
int3
pop
scas
aas
scas
mov
repz
mov
dec
add
push
mov
cmpsb
push
jle
fcmovnu
mov
xor
xor
ja
push
ja
jb
sbb
fbld
dec
xor
mov
add
mov
mov
and
push
mov
jo
push
inc
mov
cmp
mov
inc
add
add
jae
xchg
jp
inc
iret
cld
fildll
popf
inc
mov
aaa
add
xchg
jno
lret
push
bound
pop
mov
mov
inc
jmp
push
sahf
mov
insb
add
outsb
add
xchg
xchg
pop
push
mov
bound
mov
cmpsl
push
movsb
jae
add
jb
shll
outsl
or
ljmp
pop
xlat
pushf
push
rorb
add
lcall
push
sti
fwait
imull
pop
into
dec
mov
add
ja
sahf
jbe
notb
fdivrs
sahf
push
add
add
ds
push
add
and
int
and
data16
testb
mov
shrl
insb
mov
outsb
push
outsl
ror
push
fsubrl
or
lret
dec
aam
sbb
fiadds
call
pop
mov
data16
add
xchg
adc
mov
add
test
push
iret
sahf
mov
jb
push
std
jbe
out
in
push
jle
or
jecxz
or
insb
push
fnstcw
aad
push
divb
fldt
lea
push
xorl
sbb
sbbl
mov
faddl
in
mov
push
sub
into
data16
nop
and
out
xchg
in
xchg
xor
in
xchg
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
cmp
pushf
cmp
aam
lock
jle
push
cmpsb
scas
jo
test
sahf
out
mov
lea
jbe
stos
into
shll
insl
roll
int
mov
mov
sarb
jl
sarl
xchg
pop
push
jle
data16
add
lods
add
hlt
cs
dec
out
je
add
xchg
dec
daa
push
and
sub
mov
mov
femms
or
or
jnp
das
sbb
es
push
adc
push
add
incb
adc
adc
ds
add
dec
sti
test
sbb
mov
sbb
mov
testb
mov
add
and
pop
sbb
mov
mov
loopne
ds
xor
cmpl
and
pop
lods
add
cmp
aas
cmp
pop
and
cmp
roll
cmp
ds
jbe
sbb
inc
jle
loopne
test
xor
dec
fidivrl
cmpb
aas
ja
neg
adc
ds
xor
dec
inc
out
mov
test
mov
ds
bound
pusha
add
mov
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
pop
dec
test
mov
mov
ds
xor
sub
sub
sub
sub
mov
ss
and
xor
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
mov
call
insl
popf
mov
jge
jns
jns
jle
addl
ja
jno
outsl
outsb
pushf
sti
lds
or
loopne
sar
or
addb
add
add
loopne
push
out
or
push
push
add
cmc
repz
dec
xor
sti
mov
jae
aas
add
xchg
pop
cmp
test
jg
incl
xlat
mov
add
mov
push
mov
fnstsw
bnd
or
add
dec
xchg
addr16
add
filds
jecxz
pushf
add
mov
push
in
lcall
or
jns
or
mov
push
push
dec
lret
decl
ss
xchg
add
mov
mov
loopnew,pt
test
scas
xchg
js
in
out
mov
nop
sub
sub
xchg
insl
cmp
push
nop
sub
xchg
xor
xchg
xor
xchg
outsb
lcall
leave
jbe
int
jnp
negl
fcmove
fst
es
and
int3
out
lret
loopne
push
std
into
mov
push
test
fdivrp
divl
xchg
add
test
jg
jle
orb
add
dec
xchg
pop
add
decb
jns
dec
dec
dec
dec
dec
add
pop
add
fcmovnu
and
push
dec
or
adc
cmp
adc
dec
or
add
dec
push
adc
add
or
pop
pop
arpl
pop
in
dec
push
inc
push
dec
sbb
mov
lahf
testb
and
adc
sbb
dec
add
dec
jmp
mov
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
ljmp
adc
sub
xor
xor
sub
sub
or
push
add
inc
push
lods
mov
mov
add
ss
test
mov
ss
shrl
push
outsb
mov
push
ds
add
mov
add
push
sub
sbb
add
mov
cmpsl
and
into
incl
pop
sub
jmp
adc
push
fnstsw
incl
outsb
prefetchnta
adc
push
and
jg
ds
cwtl
dec
push
stc
setb
lock
pusha
mov
sub
xorps
jg
js
lea
ja
aaa
add
sub
push
inc
pusha
push
sahf
jg
push
aam
pop
lahf
xchg
push
or
push
or
cli
mov
sbb
fists
sbb
or
addl
xchg
roll
add
mov
loopne
push
pop
das
sti
mov
xchg
orl
or
dec
sti
jg
mov
cmp
xchg
add
popa
jg
jg
or
adc
je
cmpsl
test
bound
push
cld
jg
push
add
xor
pop
adc
and
std
ja
jg
test
add
jg
je
dec
ret
dec
pop
push
dec
bound
jle
lret
inc
decb
and
push
data16
addl
push
test
add
decl
add
arpl
add
push
add
fidivrs
jg
add
xor
jg,pt
mov
add
push
jbe
pop
add
mov
fadds
jle
xor
inc
test
sbb
xor
xchg
mov
jmp
adc
repnz
lods
jle
lret
imul
test
add
jle
mov
lcall
imul
stos
dec
jg
pop
add
mov
push
andl
rorb
jg
jg
mov
sub
inc
rorb
inc
outsb
jg
decl
bound
mov
and
incl
mov
movb
pop
mov
dec
jg
jle
aam
jne
fdivrp
cmpsb
in
sub
pop
push
stos
pop
stos
pop
pop
insl
fcmovnu
cmp
pop
daa
aas
aaa
mov
mov
pop
pcmpgtb
lods
jle
add
push
inc
push
mov
mov
lods
adc
adc
jle
push
fucompp
sahf
rorb
bound
add
mov
push
mov
mov
push
arpl
pop
fisubl
ret
pop
push
mov
test
out
mov
sub
dec
decl
ljmp
dec
loop
dec
dec
xchg
jle,pt
inc
test
pop
jle
lcall
scas
test
mov
fnstenv
mov
push
push
jne
pop
push
jbe
dec
or
push
push
jp
fwait
adc
dec
jbe
mov
add
mov
mov
popf
jmp
jbe
es
adc
test
push
outsb
notrack
jp
test
jle
inc
jbe
test
incl
ss
push
or
call
dec
ja
xchg
test
testb
fiadds
mov
mov
fldt
dec
mov
and
sahf
inc
out
mov
xchg
sbb
scas
cs
aas
popf
inc
push
pushf
push
inc
outsb
fwait
cmp
data16
or
xor
xchg
xor
mov
push
sub
sub
nop
daa
ss
out
mov
dec
xor
nop
fstpl
pushl
push
or
push
xor
dec
add
pop
fnsave
xor
cmp
pushf
push
inc
sahf
or
lcall
sub
cs
add
test
ja
sahf
sbb
adc
xchg
adc
push
in
movb
ja
xorb
aaa
adc
push
ja
add
push
add
push
rolb
mov
add
mov
cltd
and
add
mov
negl
orl
lea
lahf
aaa
adc
popf
push
imul
incl
xchg
mov
sbb
test
push
lock
cmp
or
inc
lods
cmp
icebp
sub
push
in
add
mov
test
ljmp
shlb
out
pop
idiv
push
and
mov
xchg
call
push
or
mov
mov
xor
and
push
idiv
xchg
sbb
into
decl
syscall
mov
sub
ss
pop
add
pop
testl
sbb
add
sub
or
das
pop
cld
incl
stos
andb
insb
lahf
or
pop
daa
std
out
inc
loopne
xchg
psubusw
sub
incl
mov
mov
ds
or
incl
jmp
xchg
das
pushl
and
call
jmp
xchg
or
or
mov
int
inc
lcall
dec
push
decl
scas
jmp
decb
mov
gs
adc
push
and
and
int
insl
fwait
jle
adc
inc
sti
xlat
mov
inc
lcall
lods
inc
or
stos
and
lea
decl
mov
fisubrs
push
sub
sbb
rolb
fmul
std
jmp
push
sbb
incl
subb
cmpsl
mov
adc
smsw
sbb
call
jg
dec
adc
out
cli
mulb
sub
adc
push
inc
xchg
movsb
xor
test
jmp
ljmp
pop
fcmovbe
pop
pop
jnp
mov
inc
xorps
aaa
push
test
push
mov
imull
mov
push
mov
roll
movsb
sbb
ret
ljmp
fisubrs
xchg
push
adc
jmp
ljmp
flds
mov
push
inc
inc
mov
int3
pop
es
mov
out
ss
sahf
movsb
dec
push
stos
push
popf
inc
dec
xor
fldenv
aam
imul
push
add
and
sub
xchg
push
out
push
shrb
jmp
shrl
outsb
shll
xchg
mov
es
push
jb
notb
push
iret
insl
pop
dec
cmpsb
cmp
daa
outsl
pop
imul
push
push
push
sub
call
nop
mov
dec
in
imul
pop
int
repnz
and
push
jmp
pushf
cmp
aas
decb
cwtl
xor
push
inc
push
xchg
jp
in
cltd
push
push
aaa
push
lcall
fwait
dec
xchg
push
xchg
es
xchg
xchg
and
push
sub
aam
xor
scas
adc
inc
jmp
das
xor
and
push
add
pop
add
movsb
or
std
faddl
inc
fstpt
push
jnp
jp
aaa
int
cmp
or
jl
shrb
jge
jg
es
jmp
mov
fidivrl
push
dec
push
dec
repnz
repnz
jae
aaa
fbld
pop
fidivrl
push
mov
jnp
jge
push
lret
xor
add
int3
outsb
nop
test
stc
sbbb
sbb
ljmp
inc
pop
adc
adc
int
cmpb
push
addb
jnp
lahf
dec
es
addl
orb
jmp
and
xchg
out
push
sub
iret
fstl
fucom
jo
mov
cli
pushl
mov
repnz
push
fldl
mov
fnstsw
mov
icebp
dec
pop
cld
mov
jno
sub
pop
inc
test
outsb
push
jg
je
daa
jg
mov
push
enter
dec
loope
xchg
push
in
iret
cld
jp
es
xchg
mov
incb
out
mov
and
dec
jo
orb
jg
ret
push
push
pop
ja
dec
and
aam
cmp
decl
rclb
lcall
push
fsub
pop
cli
adc
add
sti
or
decl
xchg
and
jbe
mov
push
pop
push
pop
push
xchg
scas
jmp
ds
mov
lcall
jns
decl
cmp
sub
mov
jmp
xchg
jmp
mov
sti
popf
fldcw
sbb
jmp
adcb
or
lcall
cs
sbb
loope
and
lret
jg
out
mov
inc
aad
xchg
or
iret
sbb
push
mov
add
lahf
aam
jp
stc
inc
or
xlat
mov
push
cmovno
fistl
inc
jnp
adc
add
push
pop
sbb
xor
add
addb
add
push
lea
push
inc
lahf
mov
and
adc
adc
adc
sbb
jae
enter
mov
mov
test
pop
push
sbb
imul
add
mov
frstor
sbb
sbb
or
add
sub
inc
inc
push
add
nop
inc
add
sub
dec
addr16
adc
dec
arpl
adc
jno
inc
or
add
lock
xchg
mov
insl
jo
icebp
nop
add
add
imul
or
and
xor
mov
and
stc
add
add
jl
nop
xor
and
xchg
adc
and
out
add
pop
and
dec
test
fiaddl
andl
sarl
in
inc
jmp
lahf
jo
das
xor
cltd
mov
sbbl
movsb
outsl
jb
inc
jge
mov
fsubl
and
add
orb
and
ficomps
test
push
mov
dec
jecxz
movsl
add
add
add
sbb
loop
xor
add
mov
inc
cmpl
and
cmpl
mov
push
popa
shlb
xor
add
rcl
jb
push
lea
dec
jecxz
or
pop
or
inc
xorl
adc
add
clc
pop
pop
cmp
or
xor
add
xor
xchg
movb
xor
pushf
jnp
inc
jmp
sbb
inc
lds
andb
inc
jno
outsl
sarb
scas
jo
xor
dec
push
outsl
loop
xchg
xchg
and
push
or
cmp
pop
xor
sbb
mov
sti
loop
dec
insb
out
inc
imul
sbbl
pop
xchg
add
inc
jecxz
add
pusha
in
insb
jne
adc
in
and
fstl
add
add
lods
popa
sbb
mov
sbb
add
xchg
inc
insb
arpl
push
arpl
push
scas
cmp
add
lds
fiaddl
roll
pop
push
cmp
push
dec
mov
sub
je
loop
and
sbb
sbbl
outsl
negb
or
jo
je
arpl
in
xchg
sub
sub
insb
les
push
lods
add
xorl
add
push
das
and
lcall
das
jecxz
or
cmp
adc
pop
sbbl
fcoms
mov
and
cmp
add
xor
scas
loopne
lea
and
add
lcall
scas
arpl
mov
or
pop
xchg
in
push
cmpsb
and
lds
dec
arpl
adcb
cmp
mov
pop
mov
cmovge
imul
xchg
xor
pop
push
mov
sub
push
rolb
and
push
jmp
orb
imul
pusha
mov
pop
in
pop
test
add
mov
int
imul
popf
adc
push
ret
add
pop
inc
incl
fadds
inc
jg
inc
test
mov
cmp
cmp
or
push
jne
inc
xchg
lea
sub
xor
add
daa
mov
insl
fnstenv
xor
int3
js
imul
inc
arpl
dec
add
pop
rorb
sub
xchg
sub
inc
pop
movsb
popf
add
sub
push
push
loopne
jb
out
xor
and
and
push
scas
es
fbld
push
inc
mov
xor
fistpl
imul
mov
jnp
pop
arpl
insl
sti
dec
rcrl
xor
and
inc
and
cmp
sbb
push
ds
in
or
sub
inc
insb
cs
cmove
mov
jb
jb
test
das
sub
mov
xchg
sub
outsl
dec
inc
imul
pop
mov
out
lea
dec
insb
xor
in
sahf
daa
push
fs
add
sbb
outsl
jo
jb
mov
mov
adc
fwait
push
mov
test
dec
iret
dec
inc
mov
stos
dec
and
jae
ret
and
enter
sarl
and
je
cwtl
imul
push
sbb
push
les
std
std
imul
sbb
inc
lret
faddl
and
js
pop
mov
adc
mov
inc
jne
outsb
inc
sbb
notb
sbb
pop
and
or
lea
je
insl
dec
push
dec
or
arpl
imul
mov
push
js
mov
imul
add
sbb
mov
movsb
dec
shll
or
or
adc
rcll
mov
mov
push
es
cmp
insb
inc
fisttps
movsb
outsl
xchg
add
mov
pop
fisubl
inc
pop
imul
and
sub
sbb
sbb
mov
bound
daa
add
insl
ret
imul
cmp
cwtl
data16
pop
sarb
pop
test
push
insb
mov
inc
insb
scas
cmp
nop
sub
test
inc
test
jecxz
addl
inc
sbb
dec
mov
scas
add
out
jo
xor
sbb
add
movsb
sbb
jl
cmp
inc
cwtl
and
jno
scas
mov
test
add
jne
out
inc
mull
dec
dec
mov
jbe
in
sbb
dec
mov
imul
sub
push
pop
adc
ret
and
sbb
mov
jle
sbb
scas
cmp
ja
pop
jo
mov
lock
sub
repnz
mov
push
and
js
pop
stos
adc
xor
adc
or
sbb
ss
jg
mov
mov
adc
insb
movaps
js
gs
outsl
and
jno
in
loopne
push
cmpsl
inc
ret
sbb
pop
lea
jle
lods
cmpsl
adc
fadds
push
push
insb
mov
push
mov
pop
outsb
aad
insl
dec
adc
fs
adc
je
sub
xchg
or
push
jo
cld
addr16
loope
push
arpl
test
cwtl
inc
push
pop
xor
push
sbb
xchg
push
add
push
mov
inc
addr16
xor
mov
nop
fs
mov
js
jns
sbb
stos
sbb
cwtl
dec
and
inc
cmp
push
mov
movl
mov
daa
outsb
pop
test
addr16
shll
movsb
sub
and
inc
sub
lds
mov
bound
jbe
orb
into
test
jnp
mov
push
and
mov
xchg
jb
push
inc
sbb
add
sub
insl
xchg
sbb
sbb
pop
push
or
arpl
xor
pop
xor
jbe
mov
out
inc
test
sub
cmpsl
dec
dec
ja
imul
shll
add
aaa
or
movsb
pop
sub
sub
leave
add
out
rcl
sub
movsl
dec
jmp
loopne
sub
inc
and
sti
out
xchg
or
xor
dec
push
cli
fists
and
fcmovu
pop
inc
dec
cmp
push
cmp
adc
add
push
in
testl
push
add
adc
mov
sbb
push
sub
adc
sub
and
or
push
sbb
into
es
push
adc
push
inc
pop
adc
sbb
adc
sbb
sbb
or
or
pop
add
punpcklwd
sbb
sub
fnstsw
or
sbb
add
xor
sbb
push
sub
sbb
xchg
add
adc
lock
push
test
pop
addl
xor
pop
pop
imul
add
rorb
or
or
sbb
or
and
ror
pop
ds
incl
subps
add
sub
dec
sbb
mov
xor
xor
or
and
adc
xchg
in
push
adc
adc
adc
adc
sbb
pop
cld
out
sbb
and
add
sbb
cmp
mov
push
notb
cld
call
pop
sbb
push
or
and
sbb
or
adcl
aaa
dec
loopne
shl
cwtl
outsb
add
xor
sbb
adc
pop
fwait
std
jle
jo
add
pop
cmpsb
pop
sub
aas
loope
jg
and
push
pop
or
stc
wbinvd
xor
loopne
xchg
pop
adc
psubq
inc
in
add
push
adc
push
jbe
idivb
pop
adc
adc
je
adc
fidivrs
push
adc
add
cmp
dec
inc
or
jecxz
pop
imulb
bswap
add
push
xchg
jns
cmpl
adc
decl
xchg
adc
or
push
push
stos
adc
adc
or
sbb
mov
adc
adc
mov
call
xor
pop
sbb
sbb
or
or
es
mov
xchg
daa
cmp
sbb
and
or
inc
and
or
add
mov
incl
or
cmp
pop
dec
adc
or
pop
adc
and
push
hlt
pop
and
or
adc
pop
add
in
and
sub
xor
shlb
sub
repnz
inc
sbb
xor
das
jb
mov
lock
or
inc
pop
and
and
sbb
push
push
push
adc
fcomip
decl
push
push
inc
adc
or
cmp
sub
test
jg
adc
aaa
jo
or
or
add
inc
jmp
xor
and
aas
push
sbb
nop
jbe
and
jl
cmp
and
inc
dec
cs
jns
cmp
adc
sub
incb
in
incl
sub
lock
adc
lock
add
adc
push
jle
mov
mov
push
or
add
sub
or
push
or
adc
cli
idivb
unpckhps
sbb
ds
push
aaa
mov
or
test
cs
push
lock
add
mov
aad
fbstp
xor
ljmp
aaa
jg
add
push
std
mov
push
push
inc
xchg
inc
dec
outsl
and
or
dec
xor
sbb
push
push
jae
jbe
add
push
and
inc
sbb
adc
cmpsb
add
push
cmp
inc
mov
add
ja
incl
push
push
or
cmp
or
mov
dec
and
cmpsl
or
dec
inc
outsb
push
mov
pushf
popa
adc
lods
bound
adc
addr16
outsl
or
add
insb
loop
and
xor
cwtl
and
sbb
imul
xor
inc
mov
sahf
adc
adc
mov
add
mov
adc
sub
or
adc
sbb
xor
mov
lds
sbb
mov
dec
das
mov
jp
or
les
xchg
pop
aas
hlt
jg
dec
pop
mov
pop
pop
cmpsb
xor
sub
and
lock
jmp
incl
decb
adc
inc
mov
jl
test
clc
add
add
imul
mov
and
sbb
adc
xor
xor
daa
ss
cmc
sbb
test
xor
movd
aaa
test
cmc
stos
ficoml
adc
adc
idiv
mov
xor
adc
lea
cwtl
or
adc
cmp
dec
jg
jne
and
push
sub
sub
decl
and
sbb
adc
adc
fldt
push
dec
add
scas
dec
dec
push
and
adc
push
jg
mov
sbb
loopne
xor
ds
inc
cmp
pop
pop
and
cmp
lock
add
add
inc
xorl
xor
mov
add
std
outsl
clc
pushl
and
and
into
push
or
pop
sbb
or
push
add
adc
jg
cmpsb
or
or
sbb
das
or
or
imul
out
out
push
xchg
sub
adc
push
orb
outsl
and
xchg
mov
aaa
add
adc
mov
bound
test
jp
cld
fldt
or
jnp
inc
and
nop
adc
or
push
or
inc
or
jmp
and
jno
adc
sub
cltd
inc
jo
inc
xchg
sbb
mov
inc
dec
push
insl
adc
adc
and
insl
in
push
pop
jbe
push
xor
jp
inc
or
shrl
push
imul
int
dec
dec
mov
pop
out
xorb
pop
sub
dec
lcall
pop
sub
icebp
adc
push
xchg
adc
insb
pop
stc
or
bndstx
unpcklps
sub
int3
xor
das
adc
or
push
xchg
inc
inc
and
jmp
sub
cmp
jo
inc
xor
dec
dec
nop
push
out
xor
push
xchg
jns
xor
int
pop
mov
sbb
lock
or
decl
xor
cmpsb
cmp
xor
adc
pushw
sbb
fisubrl
or
adc
or
mov
sub
jnp
inc
dec
rolb
mov
dec
mov
lock
mov
cmp
rol
cmp
adc
mov
call
push
sbb
bndstx
aas
push
daa
add
cwtl
sub
push
and
add
ljmp
rcl
sbb
push
inc
add
aas
sbb
pop
sub
lock
add
in
cli
ss
orb
frstor
clc
sub
lods
push
lock
add
adc
mov
adc
sub
add
adc
sbb
xor
ss
outsb
lret
sti
jb
add
insb
adc
imul
call
and
scas
adc
push
cmp
push
sub
dec
push
or
mov
or
xchg
adc
sub
or
aas
pop
mov
or
adc
cmp
lcall
int3
xor
or
stos
stos
add
sbb
js
or
or
mov
xor
mov
sub
dec
or
in
ljmp
push
outsb
adc
aas
add
jno
jl
pop
push
add
pop
shrb
sub
push
lret
outsl
push
or
sbb
sub
es
push
lahf
or
cld
in
outsb
or
or
add
jno
lock
push
fstpl
jle
data16
cmp
call
mov
push
add
mov
stos
das
adc
and
adc
adc
inc
repnz
mov
jg
pop
out
or
or
adc
pop
je
xchg
adc
outsl
mov
dec
cmpsb
adc
sbb
add
add
outsl
add
sub
mov
enter
inc
lret
cmp
pop
pop
aas
sub
add
pop
add
lock
add
pop
in
shl
pusha
lcall
lock
sbb
scas
push
mov
jae
xor
mov
or
push
loop
adc
jne
cltd
mov
in
jg
and
push
push
and
lock
and
adc
adc
sub
and
xor
lcall
lock
adc
adc
push
cmp
sub
push
sbb
xlat
pop
lock
cmp
push
test
inc
xorb
adc
pop
into
adc
lock
xchg
mov
scas
cmpsb
aaa
mov
pop
mov
and
push
sbb
fbstp
cld
push
and
pop
adc
add
dec
add
mov
ret
push
or
and
adc
incl
unpckhps
adc
push
clts
pop
pop
or
cs
xor
sub
jp
adc
sub
mov
add
push
ret
xchg
je
push
mov
adc
cmp
subb
mov
ret
pop
push
mov
test
shlb
add
xor
lock
sbb
lock
add
push
incl
pop
lock
add
add
pop
fsub
add
fs
incl
cld
jmp
lock
xor
sbbb
sbb
aaa
cmp
jnp
jbe
sbb
pop
pop
or
and
push
sbb
mov
adc
sbb
cmp
ficomps
cmp
aad
pop
pusha
push
sub
or
and
inc
ljmp
or
mov
lock
sub
pushl
or
insl
sbb
adc
cmp
je
aas
push
or
adc
sub
adc
pop
sbb
fwait
inc
daa
xor
cmp
fimull
and
test
hlt
imul
cld
cmp
dec
outsb
pop
inc
pop
dec
lea
cmp
lock
pop
js
add
mov
inc
adc
pop
sbb
add
and
push
pop
push
jbe
pop
jnp
ljmp
sbb
cmp
or
dec
das
cmp
push
cmp
pop
cmpsb
inc
push
call
inc
cmp
xor
lock
dec
sbb
sbb
adc
push
and
add
lock
cmpl
incl
or
sub
push
pop
adc
and
and
adc
push
ja
and
sbb
or
idiv
sub
sub
jne
sub
lcall
pop
int3
pop
sub
sbb
inc
push
adc
and
std
fwait
aaa
and
add
das
adc
sub
push
pop
pop
or
pop
invd
sar
ja
nop
daa
add
sub
pop
mov
or
arpl
sub
sbb
or
dec
prefetch
lock
and
pop
push
xchg
movsl
adc
pop
sub
sub
incl
adc
or
xorb
xor
out
clc
pushl
jg
xor
or
adc
adc
sbb
lock
adcb
and
and
or
aaa
aaa
and
psrld
adc
out
push
dec
xor
sti
mov
sub
xor
sub
sbb
nop
fistpll
or
sbb
xor
inc
inc
inc
cmp
dec
test
adc
cmp
mov
mov
mov
push
aaa
sub
inc
dec
arpl
sub
adc
sarb
and
xor
cmp
pusha
stos
pop
add
fisubs
mov
sbb
adc
jno
jnp
cli
add
or
push
sbb
ficompl
xor
push
adc
sbbb
inc
or
sub
xor
and
or
dec
sbb
std
pop
lock
push
xor
test
or
xor
inc
mov
xor
sbb
sub
pop
push
cld
and
das
push
sub
ds
aas
push
lods
mov
inc
pusha
push
xchg
adc
cmp
sub
sbb
pop
add
inc
cmp
fcompl
ss
add
pop
pop
mov
je
sbb
add
or
bound
add
adc
xor
ljmp
es
loop
adc
or
push
and
sub
fcomip
sbb
or
loop
rcrb
inc
dec
pop
push
or
mov
sbb
jno
cmp
test
sbb
mov
adc
push
rorb
in
inc
dec
dec
add
repnz
sub
pop
ret
push
xor
lock
xor
mov
adc
and
sbb
xor
popa
test
sub
push
inc
inc
sub
das
sbb
js
cs
sbb
and
sbb
xchg
push
adc
femms
aaa
dec
adc
lcall
adc
push
mov
pop
pop
cmp
and
aaa
or
inc
sub
or
dec
pop
sub
xor
lcall
or
or
xor
lea
adc
jle
sbb
aaa
add
cmp
adc
and
in
adc
pop
adc
pop
adc
loopne
or
add
adc
sub
cmp
sbb
sbb
push
add
adc
sbb
push
mov
scas
mov
add
and
loop
std
es
inc
and
pop
or
push
inc
xchg
ljmp
mov
sti
lcall
sbb
sbb
sub
cmp
cmp
jp
or
or
inc
mov
jg
or
xor
dec
inc
push
pusha
adc
inc
imul
sbb
call
sti
add
dec
dec
insb
lock
mov
inc
push
mov
aaa
sub
cmpsl
or
pusha
lock
daa
push
arpl
sbb
mov
std
sbb
into
unpckhps
inc
sub
lock
sbb
sbb
sbb
cmp
fs
andl
xchg
push
pushl
sub
pop
adc
pop
ds
sbb
and
push
dec
call
dec
ficomps
ds
into
dec
addr16
or
adc
incb
push
pop
add
lock
xchg
ss
clc
adc
mov
sub
inc
or
inc
or
adc
push
push
adc
mov
mov
popa
push
sub
pop
cmp
hlt
add
and
and
sub
ret
jg
lcall
lahf
pop
sub
mov
adc
or
inc
es
inc
adc
inc
cmp
lock
add
loopne
sbb
fcomps
or
inc
inc
cmp
jo
cmp
mov
mov
fiadds
add
mov
les
add
data16
xor
adc
adc
pop
and
push
jl
inc
in
push
aaa
mov
call
bound
cmp
daa
cmp
and
jae
sbb
push
and
fildll
lcall
pop
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
es
ja
fists
add
push
cmp
pop
add
sub
push
sbb
add
sti
loopne
xor
pusha
lock
dec
mov
sbb
fcomip
fists
sbb
dec
sub
push
sub
sbb
cmp
add
outsb
xor
std
dec
cmp
mov
xchg
and
movnti
inc
inc
cltd
sbb
pop
xor
es
add
and
sbb
pop
mov
xchg
pop
ja
inc
outsl
pop
add
add
or
push
push
pop
adc
pop
lock
xor
mov
les
decl
jbe
das
push
pcmpgtw
or
lahf
add
jo
lcall
jbe
aaa
mov
jg
push
xchg
or
add
cs
sbb
scas
das
cli
add
xor
add
lock
scas
fstpt
mov
fldl
dec
or
or
lock
lret
lock
add
or
jg
cmpsb
mov
pop
push
in
adc
sbb
lock
mov
and
push
add
push
ds
add
lock
lock
add
sbb
leave
sub
sub
push
pop
dec
push
pop
repnz
pop
sub
sub
bound
pushl
pop
aad
lea
push
push
sbb
test
add
mov
dec
movhlps
or
stos
mov
lock
pop
jmp
inc
mov
lds
jp
aad
jne
mov
or
inc
add
push
or
stos
and
ljmp
add
mov
push
adc
or
adc
std
imulb
xor
adc
daa
pop
push
dec
or
and
mov
into
sbb
jmp
fsubrl
ds
sbb
add
dec
rcll
push
or
add
cmp
cmpsb
and
xor
cmp
cmp
sbb
pushl
or
or
and
xor
outsl
pop
fcomp
sbb
sbb
sub
dec
cmpsb
push
or
dec
dec
push
ret
js,pn
push
xchg
xor
cld
push
mov
adc
and
xor
in
lcall
es
or
or
mov
ret
in
or
adc
and
xchg
push
and
neg
nop
and
sbb
sbb
xor
addb
cwtl
sub
pop
dec
sub
sbb
inc
loope
sbb
ud0
sub
mov
adc
aaa
add
cmp
and
rorl
adc
notl
jecxz
sbb
cs
mov
mov
aas
cmp
or
or
mov
xlat
push
int3
es
mov
adc
and
pusha
and
and
shlb
mov
clc
mov
cltd
shl
filds
mov
sub
testb
sbb
negb
jg
imul
or
or
lcall
stmxcsr
cmp
and
push
adc
das
push
or
push
jg
bound
lock
dec
xor
add
incl
cmp
lock
add
sbb
jg
push
cmp
xchg
pop
mov
lock
add
shlb
push
push
popf
cmp
and
adc
mov
adc
movsb
outsb
das
call
or
pop
push
push
and
sbb
faddl
and
lcall
or
cmp
pop
jmp
lock
popa
pop
mov
repnz
push
add
or
jle
stos
cwtl
or
cmp
sbb
lock
adc
es
pop
sbb
sbb
test
mov
push
push
or
loopne
mov
jo
insb
dec
lock
dec
or
push
xchg
les
cli
pop
mov
add
mov
cwtl
push
mov
sbb
lock
push
inc
lock
add
adc
or
mov
ss
sbb
xor
sbb
push
sub
incl
cmpsb
cs
sub
ss
cmp
or
in
scas
or
add
add
mov
ret
sbb
push
adc
js
jae
setnp
mov
xor
rcll
pop
lcall
cmp
pop
mov
sbb
push
adc
inc
push
adc
and
xor
push
mov
dec
sub
and
adc
lock
xor
pushf
or
sbb
faddl
add
lock
ret
xor
outsl
mov
and
sbb
xor
cmp
cmp
cmp
sub
test
and
inc
adc
push
inc
cmp
sbb
pop
sbb
es
mov
inc
sub
dec
dec
push
mov
fs
and
das
jb
sub
das
and
aam
dec
inc
sbb
and
and
aas
push
aaa
mov
fildll
das
xor
arpl
and
adc
cmp
mov
subb
cmp
ss
lcall
aas
pop
xor
sub
es
dec
mov
add
inc
push
and
sub
je
and
dec
into
pop
pop
inc
insl
or
cmp
sub
jp
jle
xchg
and
push
cmp
xor
cmp
sub
cmp
sbb
pop
shl
cmp
push
cs
cmp
push
ds
in
mov
and
push
dec
xor
sub
xchg
adc
dec
push
push
push
lret
cmpsl
sub
push
inc
mov
inc
insl
push
inc
dec
push
pusha
pop
cld
decl
inc
inc
pusha
inc
aas
dec
jne
fs
cmp
lods
cmpl
push
sub
pop
dec
and
and
sbb
push
xor
dec
das
dec
xor
xchg
cmp
jmp
dec
dec
dec
cmp
cmp
cmp
test
sub
xor
push
xor
pop
mov
push
push
push
cmp
push
xor
shrl
cmp
in
inc
loop
in
lds
add
push
movsl
inc
xchg
lock
aaa
mov
outsb
mov
add
cli
lock
jmp
ja
or
add
or
push
and
sbb
lods
faddl
adc
and
sbb
pop
add
fldenv
mov
adc
dec
fiadds
pop
fadd
or
or
cmc
cltd
lret
and
pusha
or
call
or
in
cmp
jbe
jp
or
test
mov
lock
push
out
pushf
orb
inc
mov
or
cwtl
scas
xor
cs
mov
insl
xor
push
add
mov
rolb
cmp
aam
and
add
cmp
pop
lock
lock
mov
adc
mov
lods
nop
dec
push
lcall
or
or
sub
sbb
orl
jp
push
mov
movsb
arpl
dec
inc
inc
lock
dec
aad
adc
inc
hlt
adc
out
fdivrp
hlt
or
adc
or
adc
sbb
mov
dec
xor
adc
or
mov
das
push
or
mov
test
or
prefetchnta
mov
or
inc
add
inc
adc
adc
test
sbb
adc
jg
mov
mov
pop
jmp
pop
dec
mov
adc
or
adc
sbbl
rcr
xchg
and
dec
adc
fimull
push
add
push
mov
mov
jns
jno
and
lds
andb
std
testl
push
xchg
jae
lea
mov
dec
xchg
xor
add
and
add
sbb
sbb
add
or
mov
lcall
pusha
adc
data16
mov
adc
mov
or
cmp
or
and
adc
insb
add
add
sarb
sbb
or
mov
mov
shrl
mov
or
jbe
fldt
xor
in
or
sbb
inc
nop
insl
add
or
xchg
xor
pop
mov
enter
mov
jns
ret
insl
imul
or
scas
or
mov
xor
lods
and
lahf
inc
adc
sysret
outsl
sub
cmpsl
mov
mov
int
mov
insl
and
movsb
fists
insb
adc
and
fldt
jne
fdivl
insl
mov
adc
sbb
loopne
fidivs
es
mov
out
adc
add
push
mov
rcll
popa
dec
pop
jmp
sbb
cmp
jmp
pop
ret
aad
cmp
xchg
dec
pop
cmp
movsl
push
lods
xorb
adc
and
push
mov
shrl
or
jg
and
inc
mov
xchg
lods
pop
mov
add
sbb
and
imul
hlt
cmp
mov
xor
add
test
dec
add
decl
stos
push
xchg
mov
pop
inc
inc
mov
push
xor
insl
pop
adc
adc
insl
sbb
mov
adc
rcl
mov
push
pop
stos
add
and
adc
aad
pop
mov
pusha
or
lods
mov
adc
add
add
aam
add
inc
push
adc
popl
in
xchg
psllw
or
das
sub
xchg
adcb
adc
and
inc
add
inc
pop
mov
add
stos
divl
jns
rol
cmp
lock
mov
sbb
add
loope
int3
add
push
enter
out
lock
sbb
outsl
adc
add
imul
push
add
sub
inc
adcl
push
sub
xor
and
add
xor
in
mov
sbb
add
and
sub
sub
cmp
xor
sbb
or
or
outsl
inc
sbb
in
push
fisubs
or
sbb
xor
jge
pop
adc
and
imul
and
sbb
pop
inc
and
or
mov
sbb
sbb
sub
push
push
inc
sbb
popf
pop
mov
add
add
add
pushf
and
sti
cs
add
popa
jecxz
adc
mov
dec
mov
push
mov
sarl
dec
mov
xor
add
rorb
xchg
add
inc
int
cmp
adc
xor
jg
mov
dec
fcomps
sub
pop
fwait
add
bound
add
inc
bound
faddl
mov
lds
pop
sbb
jns
xlat
out
xchg
jbe
aaa
sbb
fmuls
addl
ds
dec
inc
pop
es
fstpt
repz
lods
es
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
push
inc
add
lcall
