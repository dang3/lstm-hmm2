fcomp
decl
jo
inc
add
mov
or
adc
sbb
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
mov
and
jbe
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
js
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
shll
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jns
mov
mov
sahf
mov
les
aaa
mov
mov
das
mov
push
lods
add
fsub
subl
mov
aas
pop
or
sbb
mov
getsec
fistps
in
adc
adc
push
lock
out
std
lea
push
push
add
inc
sbb
add
mov
xchg
dec
cltd
adc
sbb
mov
push
xchg
dec
add
sub
leave
adc
fs
add
adc
sub
add
sbb
add
rcrb
shlb
add
iret
out
out
push
and
jecxz
or
shll
sbb
sbb
fst
loopne
push
push
mov
adc
cmpb
mov
or
mov
xor
lret
sub
xor
or
fcomps
loopne
ret
filds
rcll
push
jle
mov
xor
push
mov
pop
xor
mov
cmp
adcb
sbb
sub
add
lea
mov
enter
sbb
sub
or
into
enter
mov
into
mov
dec
test
or
icebp
push
mov
mov
rcr
add
cmp
push
les
add
mov
in
mov
or
add
mov
dec
or
and
sahf
iret
lret
pop
add
add
test
add
push
loopne
push
push
pand
mov
push
and
jb
push
pop
xor
push
jb
in
inc
push
mov
lea
or
clc
fisubrs
push
mov
jbe
add
loope
xor
sbb
sub
mov
adc
xor
test
sbb
jo
pop
sub
int
aas
push
mov
and
mov
and
lea
cmp
jge
loopne
inc
fidivs
lods
mov
pop
ret
xor
inc
cmc
cmp
push
inc
push
dec
dec
push
sub
push
insb
loope
push
add
and
push
push
adc
sub
les
leave
jmp
pop
sbb
pop
add
mov
mov
sub
mov
add
js
sub
jl
or
scas
insb
add
inc
and
pop
xor
push
inc
xchg
inc
push
xor
push
xor
push
int
add
hlt
in
push
and
clc
mov
fwait
mov
push
aad
je
xlat
ficomps
in
ret
lea
out
rol
fadd
lock
in
dec
inc
pcmpeqd
ret
out
int3
push
add
call
inc
mov
inc
push
out
flds
aas
fstpl
andl
adc
out
adc
inc
or
mov
mov
movsb
test
hlt
nop
test
testl
mov
mov
add
sbb
cmp
repnz
add
sbbl
xor
mov
or
or
add
xor
xor
add
xor
lahf
add
notl
stos
add
es
ret
push
lea
push
inc
mov
ja
dec
add
inc
xor
loopne
stos
sarb
jb
mov
insl
xchg
push
jg
dec
or
test
sbb
sub
push
adc
sbb
or
sbb
mov
popf
mov
pop
mov
jb
sub
out
pop
mov
cs
sbb
and
pop
icebp
fdivl
and
das
xor
pmuludq
jl
adc
setns
xor
push
push
push
add
add
xchg
jbe
cmp
decb
fimull
add
pusha
sub
fprem1
jbe
sete
test
test
jns
sbb
nop
mov
movsb
xchg
and
test
movsl
iret
xor
mov
push
insb
pop
sahf
stos
jnp
int3
xor
and
push
cmp
cmp
or
push
das
test
and
test
jne
je
push
cmp
outsl
sbbl
push
sub
jecxz
adc
test
or
and
and
xchg
adc
or
shlb
out
adc
out
xchg
pop
push
and
mov
pop
subw
push
cmpsb
rorl
jmp
sub
sub
fidivrl
repnz
push
ds
push
scas
dec
push
cmp
and
add
push
sbb
out
adc
in
or
test
adc
pshufw
cmp
fdivrs
push
adc
loopne
cs
inc
sub
ret
jle
xorl
xchg
sbb
scas
mov
sbb
test
and
sbb
popf
dec
xchg
icebp
sbb
mov
incl
mov
fistpl
xor
pusha
call
divb
adc
adc
leave
mov
pop
mov
sti
add
cmp
mov
xor
adc
lds
aas
out
mov
inc
add
shl
jge
lret
push
push
sub
mov
xchg
push
mov
ja
mov
mov
out
shll
push
push
cmp
dec
cmp
mov
inc
imul
push
mov
test
jp
or
movhps
pop
pop
call
push
data16
rorb
sub
ffreep
imul
rolb
sti
hlt
add
test
xchg
or
outsb
fs
ds
pop
push
xor
sbb
adc
push
adc
lcall
cld
xor
xor
cmp
adc
sub
add
popf
push
test
inc
mov
xor
dec
jecxz
mov
xchg
adc
adc
dec
adc
or
js
fldcw
cltd
das
insb
or
jg
xor
mov
mov
jmp
mov
jl
lahf
mov
repz
adc
add
dec
dec
sub
adc
ret
enter
aaa
push
adcl
jge
cmp
sbb
xchg
or
icebp
jns
jl
movsb
in
adc
push
or
in
mov
fsubrl
pop
scas
in
sub
jne
jo
lods
pop
movsl
clc
mov
adc
insl
dec
xor
jg
jmp
subl
adc
pop
pop
jmp
mov
int3
call
std
adc
add
xchg
sahf
sub
and
cmpsb
jg
dec
cmp
outsb
push
cmpsl
push
in
test
out
es
ss
cmp
xchg
add
sbb
frstor
or
jmp
cmp
inc
adc
jle
jne
sbb
mov
mov
dec
addr16
ret
daa
es
and
mov
call
push
dec
push
xlat
jmp
cmp
je
sub
cmp
je
or
lods
negb
cmp
lret
sub
add
fs
mov
mov
enter
inc
mov
or
addl
adc
adcl
xchg
add
cwtl
push
outsb
lahf
sbb
outsl
into
push
mov
test
push
push
sub
pmuludq
call
xor
adc
call
inc
cmp
add
sarb
add
cmpl
jnp
add
xchg
push
js
jne
ss
in
cmp
jbe
xchg
push
xor
cmp
xor
or
inc
cmp
notl
imul
rolb
rclb
lahf
in
ja
or
ret
jne
movzwl
in
mov
push
je
push
xchg
into
jg
outsl
jg
sbb
jmp
imul
adc
add
inc
xchg
xchg
test
jne
sub
push
push
inc
sbb
aam
cmp
adc
push
mov
dec
pusha
pop
sahf
sahf
xlat
push
add
sbb
jne
fs
cltd
or
adc
jecxz
pop
dec
pop
push
adcb
push
lea
pop
jb
iret
mov
jg
inc
pop
cld
pushl
add
jge
xor
mov
cmp
jl
repnz
sbb
cmp
insb
pop
pop
ret
mov
ss
push
inc
jg
add
pop
rcrl
mov
addl
movsl
arpl
clc
xchg
test
sbb
pushf
xchg
push
mov
push
push
lcall
ficoms
rcrb
push
scas
lods
cmp
push
fistpll
or
mov
sub
jo
icebp
incl
push
add
sub
in
push
test
aad
pop
nop
lahf
dec
clc
jle
mov
mov
xbegin
pop
mov
sub
cld
lea
push
or
cmp
add
push
cmc
aaa
mov
jmp
add
call
add
push
add
push
mov
arpl
cwtl
jl
ret
mov
jo
jg
mov
fcmovb
add
add
movhlps
push
or
or
pop
cld
test
mov
je
cmpl
out
insb
mov
sub
add
mul
cmp
mov
pop
ret
cmc
or
xchg
cmp
and
xchg
push
dec
mov
jmp
xor
pop
cmpsb
out
sub
or
jge
cmp
push
and
ret
vpcmpeqd
and
pop
pop
out
jbe
data16
or
jne
push
or
push
in
push
push
cld
mov
or
lret
push
ret
pop
cld
arpl
cmp
ja
add
dec
sbb
sub
clc
push
gs
push
mulb
push
adc
shl
sub
lea
dec
pushl
adc
dec
cmp
mov
adc
adc
pop
adc
loopne
add
mov
jb
pusha
out
push
push
or
pop
cmp
push
push
pop
testl
cmp
and
in
pushf
out
into
aaa
or
sbb
or
je
xor
movaps
sbb
xor
mov
pop
adc
mov
out
jg
sti
push
mov
or
lds
out
cli
cmp
fisttps
fs
mov
dec
or
incl
mov
adc
je
cmpl
std
inc
sub
pop
or
mov
push
jne
push
dec
cmp
shrl
jns
xor
dec
test
push
inc
int
cmp
cmp
das
loopne
sarb
push
push
cmp
daa
or
insb
popf
mov
mov
inc
push
or
inc
or
add
xor
push
imul
loope
gs
pop
jne
ret
pop
mov
mov
pop
ret
or
shll
push
roll
out
fists
and
xlat
or
inc
inc
or
shlb
ret
mov
in
inc
ret
jg
xor
outsb
xchg
xchg
adc
lods
ja
xor
ljmp
or
pop
or
mov
jle
add
jno
lds
pop
push
push
inc
popa
jb
int
nop/reserved
add
mov
mov
add
pop
adc
xor
adc
sub
adc
xor
mov
fnstsw
jmp
inc
add
dec
adc
icebp
xchg
mov
lea
gs
or
sub
loope
xor
add
pop
lock
or
cmp
data16
push
pop
mov
jle
mov
jbe
out
or
push
sub
cmp
pop
cmp
add
imul
add
shlb
ret
and
or
movsl
fisttps
orl
decb
fsubp
loopne
xor
cmp
mov
enter
and
les
push
rorl
jg
mov
mov
or
add
ret
push
adc
push
jae
cli
add
add
sub
cmp
jge
dec
or
adc
je
push
inc
rcrb
push
lock
mov
sub
push
hlt
cmp
pusha
or
clc
mov
aaa
or
stc
rorl
cmp
ret
cmp
shrl
pop
and
jb
push
push
lock
mov
sbb
push
add
sub
pop
or
in
adc
xchg
popf
ss
imul
inc
cmp
or
sbb
mov
pop
lock
push
jge
jp
inc
pop
pop
push
lock
mov
jbe
jmp
pop
mov
cmp
scas
sub
fmull
outsl
gs
fdivs
pop
pop
pop
mov
lret
fstl
pop
push
lods
pushf
or
push
pop
rcr
inc
sub
in
or
cld
rorb
mov
sub
into
mov
jecxz
pop
lea
mov
xchg
mov
adc
xor
pop
repnz
pop
pop
fistpll
es
sahf
call
bound
cld
push
movl
test
push
adc
or
cwtl
cmp
cmp
dec
dec
sub
lods
and
xchg
or
push
test
xor
mov
xor
iret
lock
pop
or
pop
add
ffree
adc
mov
and
push
push
out
push
inc
movsb
rclb
pop
sbb
mov
fadds
dec
repz
das
push
fists
sbb
fstpl
incb
cmp
jne
xor
push
push
dec
pop
outsb
or
sbb
outsl
aaa
cmp
xlat
push
lea
add
ret
clc
cwtl
inc
pop
pop
inc
fisttps
mov
test
and
or
or
rcll
sbb
xor
inc
icebp
push
push
cmp
movsl
mov
mov
xchg
adcl
orl
inc
sbb
into
aaa
fcomps
aas
and
scas
jbe
and
aas
and
xchg
jl
sbb
sbb
lods
loope
mov
sub
inc
aas
or
sub
into
xor
xchg
daa
rcrb
or
and
pop
cwtl
push
das
outsb
jae
xchg
jo
ds
lahf
mov
das
push
fimull
inc
cmp
loop
xchg
stos
or
les
je
pop
jmp
aad
femms
or
jne
push
add
push
push
movsb
mov
push
loopne
pop
pop
cmp
adc
sub
icebp
mov
aam
testb
sahf
in
push
adc
sub
sbb
adc
ret
stos
imul
incb
sbb
and
jle
lock
out
or
mov
addr16
jmp
ret
pop
add
jne
fsubs
fbld
sarb
rcr
jle
repz
mov
jecxz
mov
fsubs
cmpb
inc
lods
je
shll
je
pop
sbb
sub
je
je
pop
cmp
iret
addb
test
call
mov
loope
pushf
xchg
mov
js
jnp
movb
mov
popa
sbb
or
out
xor
mov
daa
mov
push
pop
add
repnz
inc
dec
je
jmp
dec
sti
fwait
loopne
into
mov
rorb
mov
pop
push
mov
adc
cmp
or
pushf
push
fstps
leave
and
mov
jno
cmp
shrb
sbb
rorb
jp
lods
mov
sarl
cwtl
push
lea
adc
in
cmpb
test
frstor
lret
sbb
sbb
mov
jo
jle
xor
orb
adc
insb
push
sbb
inc
sbb
xchg
outsl
mov
aas
fldz
movl
xchg
sub
data16
mov
stc
sbb
in
mov
xor
je
ret
out
xor
jne
scas
dec
sbb
in
out
lcall
dec
bound
xchg
add
inc
mov
lds
cmp
in
popf
adc
cltd
xchg
sbb
add
out
pop
and
pop
mov
fstl
loope
cmpsb
mov
mov
and
sahf
inc
out
fucom
mov
adc
cmp
adc
or
xchg
xchg
lret
adc
scas
add
hlt
insl
xchg
sahf
arpl
inc
mov
inc
outsb
dec
dec
mov
mov
lea
push
ficoml
add
push
lea
jp
xlat
dec
cmp
push
xchg
out
push
dec
aam
push
or
les
pop
sahf
flds
lods
outsb
orl
popa
or
push
fadds
repnz
sbb
int3
add
test
js
jle
add
fiaddl
mov
xchg
mov
adc
test
add
in
xchg
cmp
add
lock
push
fwait
inc
add
push
jle
ficompl
add
or
andl
cmp
enter
mov
lea
mov
les
push
test
push
mov
lahf
push
mov
dec
sbb
or
outsb
rolb
sub
cwtl
shl
xchg
mov
in
cmp
sbb
xchg
xchg
mov
js
nop
dec
mov
cmp
inc
push
pop
out
dec
sub
mov
cltd
movsb
mov
jg
mov
mov
add
mov
xchg
shrb
push
add
add
xor
pop
xchg
repz
mov
out
scas
or
pop
dec
in
pop
hlt
popl
add
mov
add
cmp
je
lea
add
das
lahf
adc
add
add
pushf
push
mov
mov
gs
jle
adc
sahf
pop
mov
test
mov
push
cmp
ud0
lret
mov
xor
adc
pop
adc
test
ret
adc
je
xor
mov
sub
ret
push
push
cs
lea
dec
notl
or
ret
mov
out
push
mov
mov
insb
push
dec
dec
mov
push
push
xor
xchg
clc
jns
push
inc
dec
adcb
fsubr
sub
push
ret
add
lcall
xor
dec
sub
and
jmp
mov
add
sahf
inc
add
mov
das
mov
call
pop
or
push
xor
das
addl
rol
jbe
idivl
mov
adc
cmp
xor
cmp
inc
movl
inc
loopne
fucom
sub
push
loope
inc
sbb
adc
xchg
xchg
pushf
mov
neg
sbb
ret
jae
fsts
cld
call
adc
dec
cmp
push
sbb
sarb
adc
adc
push
xor
push
fnsave
and
jecxz
push
sub
test
add
aas
pop
mov
mov
or
in
repz
out
mov
mov
lret
into
jnp
cmp
adc
fisubs
inc
cmp
push
or
and
out
aas
xchg
loopne
mov
xchg
adc
or
or
pop
cmc
adc
cwtl
add
jmp
lret
xor
test
out
pop
push
push
push
and
push
add
cwtl
aas
test
push
jo
lret
push
mov
insb
fidivs
loop
and
add
das
mov
add
loope
sbb
cmpsb
pop
xlat
loop
pop
push
shlb
je
cmp
pusha
jne
andl
or
lahf
sbb
xchg
in
sar
aad
sbb
jmp
pop
add
xchg
movl
push
pop
cmpsl
add
xor
sbb
pop
mov
or
fmuls
sbb
xchg
mov
or
mov
fs
fisttpl
daa
dec
adc
and
mov
icebp
pop
inc
fistpll
push
mov
sub
jno
pop
popa
xlat
push
add
push
xchg
mov
push
adc
roll
sub
and
push
jne
push
mov
outsl
pusha
enter
mov
mov
sub
insl
lock
pop
lea
or
pop
pop
push
pop
mov
jbe
push
fstpl
movl
imul
fwait
pop
dec
cmp
xchg
sub
adc
ja
sbb
in
inc
movsb
cmp
jns
lods
and
dec
and
sbb
cmp
push
scas
sub
ficoms
pushl
nop
add
dec
push
xchg
adcb
sbb
dec
mov
mov
push
push
sub
mov
inc
js
inc
inc
pop
ret
pop
xor
push
rclb
push
pusha
lods
ret
mov
push
imul
dec
push
push
nop
cmp
sub
push
push
lea
aam
fcoms
mov
loope
ret
fs
push
jo
mov
push
xor
xchg
or
nop
jmp
fstpl
je
jno
xor
add
jl
pusha
jb
aam
pop
push
pop
add
inc
movsl
cmp
and
dec
cmpb
addl
dec
add
je
outsl
sub
or
call
mov
add
lock
push
push
and
and
enter
push
sbb
or
push
je
push
lcall
cwtl
shll
test
ss
lret
addr16
faddl
sub
cmpsb
mov
imul
popa
inc
fldl
fmull
add
mov
outsl
inc
mov
dec
cltd
xchg
fcoml
jb
push
lahf
push
mov
fisubrs
pop
repnz
or
mov
fisttpll
or
add
dec
cmpsb
roll
ds
push
js
inc
and
jecxz
push
lds
pop
rorb
enter
adc
daa
mov
or
mov
dec
inc
push
add
push
mov
push
jl
push
add
add
push
and
push
xor
call
sub
pusha
mov
dec
or
jb
and
adc
scas
push
mov
ljmp
cmp
roll
adcl
adc
or
xor
ja
adc
xor
outsl
addb
push
xchg
push
push
lds
pop
cmp
mov
xor
cld
cld
add
jge
add
je
mov
jp
jb
jge
xchg
lock
push
stos
pusha
lock
nop
test
sub
sub
push
pop
sub
cmp
cmp
fildl
mov
mulb
sahf
push
push
and
xchg
add
mov
pop
iret
add
fdivl
enter
mov
insb
push
mov
fsubrl
mov
sbb
int3
int3
or
push
dec
push
push
into
inc
arpl
daa
loope
xor
js
sbb
leave
loope
sbb
in
mov
inc
push
sbb
mov
add
xor
clc
test
insb
xor
lds
popa
dec
mov
jno
xor
out
or
enter
xchg
add
add
push
bound
inc
adc
jecxz
xor
es
xchg
sbb
cs
or
sbb
decb
sbb
adc
jl
cltd
and
rolb
ret
sar
push
mov
jl
dec
mov
push
push
add
push
add
mov
mov
lahf
dec
mov
imul
sar
mov
shr
add
mov
imul
lock
push
push
lahf
adc
call
in
jle
in
imul
add
jmp
or
push
adc
call
mov
add
push
sarl
push
enter
lea
sub
adc
push
cmpl
ss
dec
fmull
cmp
jne
push
push
and
lea
call
fisubl
dec
xor
ficomps
shr
imul
inc
mov
push
mov
and
lds
insb
xor
jge
cmp
pusha
dec
lcall
js
lea
jmp
add
xchg
push
cmpsl
sbb
inc
cmp
cli
dec
mov
out
data16
push
dec
cmp
nop
sub
mov
int3
sbb
stos
call
je
test
jl
lcall
insb
ja
arpl
inc
push
aaa
ds
sub
outsl
xor
and
mov
cmp
jbe
popf
mov
push
test
arpl
mov
in
jle
fidivrs
cmp
add
xor
sbb
inc
test
pop
and
mov
add
imul
dec
sub
cmp
or
out
or
jmp
mov
lea
mov
add
sbb
push
faddl
ja
xor
sub
xor
mov
fdivrp
rorl
xor
sbb
cs
cmp
cmp
inc
push
lock
xchg
xchg
cmp
add
inc
bound
mov
loope
xlat
inc
js
out
fidivl
adcl
andl
rorb
sbbb
in
sbb
pop
movb
imul
leave
jge
and
shlb
leave
call
jbe
jbe
inc
aad
adc
and
call
test
insb
adc
xchg
mov
call
dec
rolb
lahf
mov
je
mov
add
aam
js
pop
push
mov
mov
ja
push
or
dec
test
call
movsl
shlb
mov
and
or
sarb
out
sub
lea
roll
dec
and
ds
adc
sub
sub
addb
add
cmpsb
cmp
mov
pop
mov
loop
aam
push
inc
outsl
loopne
ret
xchg
jecxz
xchg
dec
adc
pop
add
insb
ret
sub
jne
and
and
loopne
or
sbb
mov
scas
pop
clc
cmp
sub
dec
test
cmp
pop
rolb
pop
or
add
push
add
mov
pop
andb
push
push
mov
or
popa
inc
xchg
fisttps
jg
push
add
push
or
mov
sub
push
jne
lea
push
iret
rorl
int
test
push
sahf
adc
push
sub
rclb
adc
push
push
pop
xor
dec
pop
sbb
movsb
inc
pop
and
sbb
mov
ss
inc
dec
fs
jmp
lock
lcall
lea
and
add
ret
loope
nop
sbb
cmp
pop
fs
cvtdq2ps
mov
xchg
mov
add
in
inc
push
jle
cmp
gs
pop
aas
loope
dec
ficomps
push
sti
mov
rcrl
fisttpl
movsl
mov
pop
ret
lahf
mov
and
int3
pusha
cwtl
and
add
leave
jo
in
or
es
sub
repz
pushl
adc
setb
sub
mov
sub
cmp
setae
stc
jle
pop
lcall
adc
push
js
lret
mov
and
inc
lcall
cwtl
xor
lret
pop
push
add
loopne
pop
xchg
inc
push
je
lea
push
mov
push
aad
push
movsl
loope,pn
cwtl
push
es
pop
pop
jnp
faddl
mov
add
rclb
mov
xor
push
pop
cmp
adc
int3
fwait
dec
inc
push
mov
pusha
aaa
lcall
lret
push
rolb
popw
adc
or
inc
ss
lcall
push
push
adc
dec
push
addr16
jb
and
fsub
leave
sub
lahf
or
inc
inc
add
adc
iret
cs
movsb
sbbb
addr16
push
pop
shlb
add
xchg
lock
movzbl
cwtl
or
int3
dec
movsl
pop
push
jg
jne
and
inc
fildll
xchg
xchg
dec
ss
repz
add
add
adc
pop
cmp
sub
add
dec
mov
push
adc
xchg
add
mov
mov
push
jb
js
ds
popl
leave
adc
movl
movl
add
in
push
mov
loopne
lods
xchg
or
pop
xor
iret
sbb
jp
adc
xor
sbb
xor
jmp
fcompl
and
and
cmp
add
pop
nop
push
pop
pop
jb
es
adcl
subb
leave
mov
push
mov
mov
hlt
add
push
ret
inc
push
adc
sub
add
cli
sub
add
mov
fidivs
pusha
dec
mov
sbb
xchg
jne
xor
mov
jmp
or
dec
sbbb
or
or
out
mov
pop
and
push
loopne
insb
fdivl
sbb
and
or
das
adc
hlt
sub
mov
jmp
jns
or
push
adc
subps
pop
adc
xor
or
sbb
jmp
xchg
cmpsl
lea
sbb
mov
xor
mov
addr16
imul
popa
pop
ret
aaa
mov
push
mov
xor
sbb
or
clc
inc
jne
nop
and
leave
es
ret
xchg
ror
mov
je
sbb
out
stos
repnz
clc
xlat
mov
sub
lods
add
pop
sbb
jmp
and
mov
outsb
pop
cli
and
insl
and
mov
inc
mov
out
push
xchg
or
push
or
or
add
xchg
sbb
push
dec
mov
incb
fildll
jp
dec
pop
jne
xchg
pushf
jg
xchg
sub
imul
sbb
js
and
sbb
roll
xor
cmp
or
jle
and
lea
inc
xchg
sbb
pop
push
pop
push
outsl
push
lret
push
push
pop
and
loopne
add
mov
or
nop
addr16
rclb
or
mov
or
or
testb
jmp
xor
fists
fmuls
mov
inc
cmpsb
push
add
nop
addr16
je
adc
push
push
fisttpl
cltd
xchg
and
xchg
adc
bound
out
xchg
outsb
xchg
or
fldenv
or
inc
jb
mov
loop
add
pop
xchg
aam
js
sbb
push
int3
jns
test
call
inc
add
mov
adc
jno
adc
mov
push
add
loopne
dec
add
roll
mov
sbb
int3
or
add
roll
leave
cmp
add
fwait
lods
std
pop
test
mov
mov
inc
es
pop
scas
lock
roll
mov
test
push
nop
xchg
es
sbb
pop
lock
mov
add
push
mov
mov
and
pop
sub
stos
push
pop
insl
mov
sub
cmc
or
cmp
and
push
cmpsb
add
adc
sbb
into
dec
scas
movsb
pop
push
lcall
pop
mov
add
les
and
sbb
ljmp
arpl
dec
xor
rcrb
jmp
push
inc
mov
ja
adc
sub
imul
lahf
in
fisubrl
dec
fnstenv
xchg
shl
add
dec
adc
sub
dec
sbb
insl
push
popa
sbb
and
cmpsl
mov
fadds
popf
push
adc
lea
sub
sub
and
dec
or
inc
fsubr
push
add
add
adc
xor
lret
ret
sarl
fldcw
pop
add
adc
and
mov
sub
les
jmp
pop
dec
mov
adcb
ror
mov
ja
and
jecxz
sub
add
push
repz
ret
ret
xor
in
sub
xor
cmp
cmp
jb
dec
int3
mov
andl
or
inc
fs
sub
adc
and
push
into
xor
and
pop
jl
cmc
add
jne
pop
push
push
mov
xchg
sbb
movsb
adc
pop
push
pop
and
cmp
pop
mov
adc
add
mov
or
nop
dec
aam
ljmp
loopne
movsl
test
xlat
adc
jmp
mov
xor
xor
and
and
rcl
pop
add
or
pusha
mov
pop
jne
and
fdivr
das
push
push
or
popf
mov
push
pop
mov
leave
and
and
stc
mov
sbb
jne
frstor
pop
xor
stos
cmpsb
sbb
push
dec
push
ds
out
add
fwait
dec
nop
sub
shrl
xor
push
pop
aad
or
lahf
push
fmull
pop
mov
movsl
in
lock
sbbl
shrl
push
pushf
sbb
push
into
icebp
adc
sub
dec
mov
sbb
cmp
or
adc
shlb
mov
mov
inc
mov
pusha
add
inc
sbb
sub
sbb
addr16
add
jmp
aaa
sub
shlb
and
jb
cmp
jne,pt
pop
sbb
push
mov
and
adc
stos
inc
outsb
cmc
jbe
ds
clc
xor
mov
dec
sahf
lea
test
mov
pop
jne
xor
mov
cmp
jmp
sbb
jne
addr16
push
pusha
adc
mov
add
cmc
dec
adc
and
scas
rcll
stc
bound
or
cs
xor
and
and
xor
xor
jo
add
push
and
dec
and
mov
cmpsl
out
add
popa
add
push
cwtl
dec
rcl
lret
or
dec
test
int
fwait
and
inc
dec
and
pop
pop
ljmp
xorb
or
xchg
mov
mov
push
adc
push
popf
jno
push
cmp
xchg
add
jmp
mov
adc
rcrl
fbstp
mov
push
test
sbb
push
cmpsl
add
push
push
cmp
jg
adc
out
push
cmpb
lock
imul
ret
push
and
mov
adcb
mov
push
pop
rorb
das
add
bound
sbb
sbb
or
xchg
cmp
adc
rolb
adc
int
or
fwait
jo
rorl
sbbb
or
shlb
sbb
xor
mov
xchg
xor
pop
mov
sub
add
xor
add
xchg
pushf
loope
fnsave
std
add
jl
add
xor
in
inc
adc
sub
pop
dec
xchg
push
xor
inc
and
and
repnz
inc
xor
add
or
jo
adc
popa
adc
mov
add
and
aaa
shrl
repnz
jnp
jo
xor
xchg
push
sub
push
jb
ss
add
mov
enter
xor
cmp
and
and
aaa
push
sub
sbbl
push
add
pop
out
inc
jno
pusha
cmp
add
push
test
sub
rcll
wrmsr
fisubrs
dec
xchg
dec
cld
fidivl
pop
add
insb
sbb
sbb
notb
es
loop
insb
xchg
xor
das
lods
xor
xchg
sbb
cmp
test
dec
push
iret
inc
cmp
inc
adc
add
inc
cs
mov
int3
inc
aaa
pop
or
push
sub
and
cli
insb
xchg
add
mov
mov
xor
into
mov
xor
xor
cld
or
jle
sbb
insl
dec
jge
push
or
or
movl
or
and
leave
and
xor
xchg
cmp
dec
sub
xchg
rolb
inc
rcrb
jo
or
dec
repnz
scas
mov
enter
lods
pop
add
and
inc
pusha
pop
add
mov
adc
inc
out
mov
ljmp
mov
inc
mov
out
add
lahf
xor
test
and
cmp
push
gs
imul
sti
loopne
adc
mov
pusha
fcoml
xchg
sbb
pop
sub
fdivrl
addr16
push
and
jle
and
test
or
add
mov
stos
or
add
push
loopne
inc
add
push
aad
fldt
add
cmp
scas
mov
push
in
pusha
xor
pop
mov
loop
mov
rolb
xchg
push
pop
adc
pushf
lret
dec
sahf
mov
adc
adc
test
xchg
push
mov
call
jno
fs
lods
ret
int
jmp
test
pusha
in
push
fstpl
mov
and
fstl
into
movsl
jns
fcoml
xchg
add
nop
shl
jae
inc
cmp
mov
rclb
stos
pop
adc
insb
out
xor
call
mov
add
fcomps
xor
out
add
mov
and
loop
add
sub
mov
adc
in
mov
call
mov
test
mov
push
std
test
adcl
jg
call
push
in
inc
pop
and
ret
call
popf
xchg
arpl
jno
movd
or
into
and
sbb
pop
pop
arpl
push
push
daa
mov
in
and
aaa
adc
mov
push
test
je
jne
in
jno
cmp
and
rclb
es
push
or
push
mov
pop
or
push
popa
mov
add
xor
xchg
mov
shl
rorl
or
pop
push
pop
mov
movsl
and
pushf
xor
pop
lods
adc
orb
add
or
les
addl
sub
sbb
ret
ffreep
add
loopne
push
std
std
call
push
add
loopne
xchg
sbb
and
mov
adc
shll
jg
in
xor
test
pusha
cmpsl
xchg
jns
sub
xchg
jl
mov
push
cmp
lods
adc
loopne
or
xor
xchg
out
in
nop
adc
and
dec
adc
sbb
mov
out
inc
ss
in
sbb
out
mov
push
push
inc
lcall
pushf
inc
fildll
push
in
cwtl
in
in
test
adc
and
mov
sahf
cltd
pop
add
adc
es
lcall
cmpsl
or
mov
ss
dec
dec
pop
nop
add
mov
or
ret
pop
inc
test
jns
xor
jecxz
outsb
aas
jo
stos
xor
fsubrl
or
push
pusha
inc
daa
push
adc
push
add
in
test
ret
imul
andb
popa
leave
stos
add
sbb
jo
pop
repnz
test
add
jb
push
pop
cmp
or
mov
fs
sbb
adc
jo
test
add
sub
add
enter
daa
sti
les
xor
push
push
insb
add
or
inc
sbb
pop
rorl
push
shl
mov
inc
and
pushf
popa
xchg
in
inc
pushf
notl
add
jbe
pop
std
jmp
divl
nop
sub
les
or
sbb
cmp
mov
inc
sbb
or
movsb
loopne
jb
pop
cwtl
jl
xchg
cs
and
incb
cld
sbb
lea
mov
inc
jmp
inc
or
sub
into
mov
stos
sbb
mull
cmp
movsl
les
lahf
push
nop
xchg
mov
or
push
xor
sahf
mov
sub
pusha
shrl
cmp
push
xor
lea
ds
mov
add
push
sub
orl
pop
add
int3
pop
or
sub
mov
sub
or
jmp
mov
inc
mov
je
test
call
outsb
das
cmp
adc
mov
dec
jae
ds
xchg
or
outsl
push
sbb
fs
pop
or
rorb
push
xchg
sbb
fs
mov
rcrl
std
xor
lret
sbb
inc
dec
fs
pop
xchg
inc
je
inc
int3
cmp
fbstp
xchg
addl
cmp
xor
sbb
pop
push
dec
fs
add
xor
sub
rolb
pop
mov
xor
push
cmpsb
push
sub
pop
add
lock
popf
loopne
sub
sub
mov
pusha
sbb
mov
mov
sub
iret
push
movb
adc
stos
cmpsl
and
mov
rcr
fwait
jne
out
adc
in
nop
dec
mov
leave
inc
add
dec
in
inc
push
and
jle
dec
clc
and
or
jge
xchg
mov
push
push
lock
es
mov
dec
ljmp
into
mov
bound
jg
cmp
mov
push
movb
mov
dec
or
cwtl
clc
push
jl
fucomi
xchg
add
sub
jne
push
and
lea
outsb
mov
iret
out
int
jp
inc
test
jmp
push
or
xchg
imul
out
aaa
push
das
pop
jl
sub
push
push
cmp
data16
leave
inc
repnz
xor
dec
pop
rclb
aam
adc
lods
clc
push
cs
jle
jb
inc
add
shrb
dec
int3
lcall
pop
icebp
scas
mov
pushl
push
cmp
or
xchg
xchg
cmp
adc
test
xchg
addr16
in
mov
push
or
mov
sub
jno
or
test
inc
mov
mov
mov
les
jno
sbb
shlb
ret
cltd
push
mov
add
dec
sahf
stos
in
add
test
sbb
aad
inc
lcall
dec
jp
les
pop
add
add
rolb
cld
ret
pusha
cmp
adc
mov
add
xchg
js
mov
pusha
add
sbb
or
dec
and
jnp
nop
clc
add
sub
jno
jecxz
dec
sbb
test
shlb
or
xchg
out
cmp
xor
pusha
or
inc
in
leave
daa
mov
jle
lods
scas
cmpsl
mov
pop
js
push
test
pop
je
movl
push
push
test
jae
ds
mov
aam
push
xchg
vfmsub231ss
jecxz,pn
xlat
inc
rol
and
or
sbb
incb
jle
mov
mov
xor
call
in
xchg
aad
xchg
add
pop
xchg
xchg
jge
push
sbb
xor
add
pusha
scas
outsb
add
xchg
add
xlat
mov
jae
mov
sub
ficomps
mov
push
push
xchg
xchg
xchg
test
pop
jg
pop
outsb
popa
scas
push
mov
xor
and
pop
pusha
addb
loop
sub
sbb
mov
es
insb
jle
aas
js
mov
pusha
ds
dec
cld
lea
sub
fs
dec
jo
sbb
fimuls
in
jo
sbb
aad
inc
mov
pop
add
insl
xor
push
lock
mov
fwait
or
sahf
inc
add
pop
dec
xor
into
sbb
sbb
jp
add
sbbb
adc
outsl
leave
add
in
push
mov
add
es
shl
add
inc
or
or
aad
or
xor
movsb
or
inc
in
sub
sub
int
test
cmpsb
push
aad
or
shl
aam
cwtl
push
pusha
stos
push
or
imul
xor
in
push
ds
cmp
in
and
xchg
addl
fs
adc
sub
pop
dec
mov
push
sbb
jne
jo
arpl
lods
shll
aam
adc
dec
jmp
sbb
into
adc
subb
cmp
push
push
mov
pushf
or
xor
fsubs
cmp
sub
hlt
mov
pop
hlt
add
sarl
je
adc
idivl
mov
push
aas
push
push
push
shlb
jmp
push
cmp
test
inc
daa
bound
rcrb
push
xor
sbb
dec
outsl
ljmp
jno
push
out
jbe
adc
push
push
push
jno
sub
and
inc
dec
sub
and
jns
push
lea
test
push
hlt
xchg
nop
outsl
arpl
ret
mov
xchg
fmull
mov
sete
mov
push
cmp
xorl
sbb
sbbl
add
popf
ljmp
add
inc
push
inc
dec
roll
cmp
push
sub
xchg
xor
adc
aad
adc
ret
incl
sbb
adc
sub
pusha
add
clc
adcl
shrb
cmpb
jg
pop
adc
pusha
lret
insb
push
sub
or
inc
or
push
mov
lret
mov
fucomip
xchg
cs
test
cmp
inc
rolb
push
es
pop
push
push
jg
xchg
lock
add
loope
sub
xor
fwait
xchg
or
xorl
scas
mov
nop
popa
xorl
mov
movsl
lock
je
xchg
adc
movsb
gs
dec
or
fdivs
inc
pop
hlt
rorl
movzwl
pop
pop
lea
setge
jmp
adc
sub
sub
movsl
xor
cmp
jo
loopne
sbb
mov
lock
jle
jl
sub
and
inc
mov
push
pop
lds
and
cmp
sbb
dec
mov
inc
ret
inc
imul
push
jg
and
and
mov
in
cmp
lahf
test
sbb
jg
and
test
shl
dec
sahf
sbb
inc
or
xor
jno
shrb
loop
adc
fwait
xchg
push
push
or
add
adc
shlb
cmp
push
mov
jle
sbb
sub
mov
jle
jg
out
subb
jno
jmp
ja
subb
jo
dec
aaa
push
and
add
out
pop
xor
push
and
xchg
dec
adc
stos
shrb
pusha
adc
cltd
or
cwtl
push
cmp
or
andl
add
adc
ret
lea
cmpsb
xor
mov
stc
imul
dec
inc
push
push
icebp
popa
nop
pop
jo
and
sbb
popa
push
inc
mov
loopne
popf
leave
xchg
adc
addr16
mov
scas
adc
pop
rorb
mov
jle
or
test
push
aas
adc
push
pop
pop
inc
imul
xor
pop
inc
outsl
and
and
sbb
adcl
inc
testl
sbb
and
out
push
testb
ret
mov
or
sbb
push
lock
push
add
jl
or
aas
fnstsw
daa
mov
adc
and
mov
sub
sbb
push
fstpl
movzwl
push
sbbl
ret
xor
pop
push
cmpsl
fnstenv
icebp
push
mov
loopne
movsl
jns
loopne
mov
fwait
inc
cmp
inc
std
sub
add
shll
and
cmpsb
mov
leave
xor
add
ret
push
and
cmp
mulb
add
mov
dec
push
dec
jnp
push
jg
mov
std
mov
hlt
cmp
jne
xchg
popf
sbb
inc
les
lock
test
mov
sub
push
push
shr
ret
fdivrs
aaa
mov
aas
daa
scas
sbb
mov
add
insb
sbbb
jbe
int
sbb
cwtl
sbb
and
pop
adc
xor
dec
lea
adc
add
sub
or
lea
cld
popf
mov
jge
push
push
push
imul
xor
jl
in
aad
cli
pop
push
add
jb
adc
sub
jmp
add
lret
xchg
xor
rol
sti
pushl
mov
sub
lods
stos
jl
mov
inc
xor
and
mov
and
xor
mov
ss
lods
xchg
mov
xor
sbb
popf
push
out
and
or
mov
and
cwtl
pop
dec
cs
int
jb
inc
sbb
lds
adc
pop
rcr
adc
push
adc
cld
lret
pop
insb
inc
push
ja
test
hlt
cmpsb
xor
je
cmpb
pop
pop
shl
stos
add
lock
push
mov
push
mov
sti
sub
ja
pusha
jae
in
sub
jns
jnp
out
add
add
ret
cmp
push
cmp
loopne
pop
sti
mov
dec
hlt
jge
jae
sub
or
inc
inc
xchg
iret
or
push
dec
mov
ret
movl
popf
aaa
pop
es
pop
jno
enter
inc
fsubrs
push
es
popa
adc
or
add
loopne
adc
sahf
jl
mov
push
jg
push
add
push
mov
add
push
ret
enter
push
aam
push
bound
orl
dec
add
mov
call
push
jo
push
icebp
adcl
hlt
sub
push
test
popa
inc
xchg
cwtl
dec
into
mov
adc
mov
cwtl
and
loopne
xor
loope
insb
test
imul
adc
or
sub
xchg
in
test
push
shll
mov
adc
mov
leave
add
adc
addl
add
int3
pop
mov
push
mov
stos
jae
lcall
cmp
push
ret
mov
imul
jle
scas
loopne
popa
std
pop
mov
ret
filds
adc
js
add
subl
or
xor
aas
repnz
sub
inc
outsb
in
add
ret
pop
mov
xor
popf
es
dec
fcoms
dec
and
mov
leave
dec
lcall
es
inc
cmp
lods
push
cmp
inc
lock
push
push
imul
adc
test
pop
icebp
or
jl
mov
and
adc
cmp
jle
lock
push
cmpb
sbb
or
cmp
jne
loop
push
int3
xor
pop
pop
inc
push
int3
fidivs
adc
je
mov
test
push
mov
cmc
sbbb
cmpsl
outsb
lret
push
lea
rolb
dec
push
cltd
or
adc
icebp
xchg
mov
push
push
fnstcw
gs
popf
push
outsb
push
add
and
test
xchg
leave
mov
pop
insb
jo
shll
mov
pop
hlt
or
lea
lea
jbe
or
mov
sbb
in
pop
pop
ret
std
imul
cmp
testb
ret
pop
shlb
test
je
lcall
call
add
lock
push
les
mov
jecxz
mov
push
dec
cmp
mov
inc
inc
pop
push
pop
pop
pop
pop
mov
hlt
pop
pop
ret
or
add
or
popa
xorl
cli
sahf
das
push
dec
and
fcoms
xor
arpl
movl
je
push
jle
mov
or
push
inc
or
push
push
cmc
inc
or
adc
movl
mov
rcll
test
push
jo
pop
mov
and
rol
test
out
rolb
mov
ss
sub
mov
pop
lea
stos
addl
es
mov
minps
pop
pop
repnz
je
jge
adc
or
lcall
andl
push
lods
cmc
push
mov
dec
cmp
sbb
pop
fsubrp
test
xchg
add
and
repnz
push
hlt
stc
andb
sarb
in
sar
inc
pop
mov
cwtl
mov
shrl
push
mov
fwait
lea
rclb
xor
and
mov
lds
jmp
mov
loopne
xor
cmpsl
mov
dec
xchg
push
and
dec
adc
repz
xchg
sub
push
iret
imul
jb
mov
jmp
mov
sub
scas
scas
ret
js
add
jmp
popa
sbb
sbb
xor
xor
les
push
add
add
cmp
fcmovne
xor
jmp
sub
jne
pop
push
inc
or
clc
push
aad
cwtl
mov
mov
mov
fstpl
mov
inc
dec
test
movsbl
mov
or
cmp
inc
addr16
shl
add
push
xchg
lret
push
and
xor
lods
dec
arpl
jp
shrb
push
push
sub
add
sub
out
dec
inc
add
mov
xchg
lcall
adc
mov
or
andb
and
mov
sbb
pop
outsb
xchg
mov
pop
imul
and
adc
push
mov
repz
mov
inc
xchg
incl
mov
in
shll
xor
js
push
sbb
in
sti
addr16
push
js
push
mov
dec
rorb
dec
dec
pop
adc
adc
and
pop
call
jb
push
xor
mov
je
std
add
es
cmc
mov
fists
test
adc
jp
xchg
ds
mov
ret
xor
push
and
rolb
arpl
push
mov
popf
mov
mov
and
inc
add
sahf
cld
and
jbe
adc
lods
push
pop
cwtl
sbb
mov
push
and
or
pushl
subb
stos
je
add
insb
scas
into
push
sub
pop
jo,pn
jne
cld
cmp
fcomps
dec
xor
xor
cmpb
mov
sarl
xchg
and
sbb
jbe
inc
pop
adc
pop
mov
inc
push
dec
cmpsb
pusha
rcrb
add
mov
lret
adcl
aaa
add
lahf
sub
pop
add
adc
and
in
out
stos
lret
and
xor
sub
push
cmc
int
mov
test
pop
add
xchg
int
or
in
cs
sbb
inc
ljmp
sarl
pop
jle
pop
jne
ret
push
cmpsb
fcoms
hlt
or
push
push
daa
cmp
and
push
add
out
mov
add
jbe
and
loopne
mov
sub
sbb
or
cs
inc
sarl
or
push
leave
mov
or
or
fcomp
jae
inc
xchg
mov
sbb
sbbl
mov
repz
add
push
repnz
stos
and
rorl
mov
jp
add
and
mov
add
incl
add
movsb
xchg
jns
mov
int3
sti
xchg
sbb
jg
push
test
stos
jg
mov
inc
movsb
pop
fs
push
adc
adc
dec
es
jecxz
jo
sbb
in
xor
push
and
sahf
cmp
and
add
sub
or
push
pop
mov
mov
push
cltd
dec
pusha
movsb
sub
add
jo
popf
and
xor
xor
add
pop
insl
adc
push
cwtl
sub
lock
push
aaa
xchg
and
rsm
add
jp
insl
lock
jg
ja
sub
daa
sub
adc
call
adcb
sub
mov
sbb
push
aam
jb
mov
sbbl
add
xor
je
xor
jb
arpl
ds
inc
call
ljmp
cmp
pop
pop
inc
inc
inc
xor
out
adc
ds
movsl
outsb
and
pop
or
push
mov
les
sbb
pop
push
inc
aam
sbb
add
subb
roll
cmp
cld
andb
sbb
outsb
push
xchg
sub
mov
push
rcl
iret
adc
inc
cmp
lret
jbe
mov
cs
or
xchg
xor
xor
int
sti
jnp
inc
jmp
mov
jo
mov
mov
scas
add
test
sbb
aaa
fdivr
mov
sub
mov
js
xor
pusha
je,pn
divl
dec
or
ds
and
arpl
and
mov
xor
fidivrs
mov
and
mov
movsb
mov
cmp
pop
and
and
jp
or
sbb
inc
std
push
jge
lods
nop
test
pop
and
push
pusha
lock
cmp
inc
push
and
sub
enter
pop
mov
mov
div
mov
ljmp
pop
adc
lock
mov
dec
sahf
cs
out
repz
scas
mov
and
fcoml
mov
mov
lock
add
or
cmpl
xchg
outsb
push
inc
push
xor
push
jg
cmp
clc
es
ret
aas
call
call
cmp
test
nop
add
ret
sbb
nop
lret
add
or
push
inc
sbb
es
push
js
push
cs
sbb
addb
mov
or
push
sbb
sub
cld
adc
push
repz
rcr
fistpl
stos
inc
push
enter
out
call
push
pop
pop
cwtl
jg
push
pop
call
inc
cmpsl
in
js
push
orb
jne
push
push
push
add
push
sub
pop
imul
out
cmp
mov
jle
ret
push
mov
sti
sub
imul
add
in
test
mov
jle
cmpb
jno
mov
sub
or
jge
lret
insl
subl
xor
stos
add
lcall
sarb
mov
pushf
xchg
jg
push
and
adc
mov
push
out
fwait
hlt
xchg
add
imull
push
lea
add
mov
clc
pop
push
push
push
push
repz
sahf
ds
mov
inc
and
test
lret
sub
add
pushf
nop
enter
push
movb
mov
push
sbb
lds
and
jb
loope
fisttpll
pusha
fwait
std
xorb
sbb
mov
sbb
pusha
or
call
pushf
cs
fsts
addr16
nop
andl
and
and
push
sbb
les
shr
hlt
jecxz
gs
mov
sbb
mov
aas
data16
sahf
push
inc
push
push
cltd
push
sbb
add
aas
push
scas
lea
jmp
mov
sbb
dec
sub
mov
out
push
rorl
ret
sub
js
sbbb
add
or
pop
nop
cmp
stc
adc
and
mov
ljmp
loope
mov
dec
roll
push
enter
lods
xchg
ret
gs
ret
push
jo
sbb
push
sbb
test
outsl
shll
nop
inc
add
dec
inc
sub
add
int
jnp
mov
push
push
mov
pmulhuw
add
ja
and
adc
cmp
sub
push
push
add
popl
dec
clc
mov
add
add
mov
push
add
aaa
add
cmp
test
rorb
cwtl
add
add
lock
xor
mov
jl
lods
push
aad
push
push
mov
sub
clc
push
push
ds
adc
fimull
lock
es
push
leave
adc
in
and
mov
data16
roll
incb
push
add
jge
xchg
mov
jl
shlb
xchg
push
pop
mov
cmpb
or
xor
mov
xor
mov
mov
dec
add
shll
cmpb
mov
xchg
les
jnp
cmpsb
sbb
pop
sbb
pop
clc
fistpll
push
call
push
xchg
xlat
mov
in
push
mov
iret
inc
add
push
shrl
std
push
push
mov
sbb
pop
xchg
sub
je
pop
leave
xorb
add
sbb
inc
cld
xor
idivb
dec
repnz
cld
add
sbb
add
sub
shrb
pop
and
xchg
dec
jmp
xor
or
or
hlt
es
subl
cmp
nop
xor
inc
and
jns
push
jg
or
rclb
ret
aaa
xor
dec
or
xor
mov
add
or
adc
shl
push
pop
push
push
fwait
nop
and
adc
inc
cld
xor
xor
push
mov
mov
inc
cld
adc
in
nop
std
sbb
jle
xor
cmp
mov
ret
mov
or
add
xor
sub
adc
jl
or
inc
dec
add
lock
gs
cld
adc
mov
enter
loopne
imul
fldcw
je
bound
cmp
jae
and
adc
insl
and
aam
sbb
movl
jb
lea
mov
dec
mov
mov
fisttpll
test
jae
dec
orl
inc
and
ret
fcmovb
cltd
and
push
mov
loopne
or
xchg
dec
movsl
rcrb
and
in
sub
movl
ficoml
sub
sub
add
movsb
cmp
ret
dec
imul
rorl
clc
cltd
rclb
sub
clc
mov
mov
jmp
lea
jne
push
push
loop
jb
push
loopne
inc
jl
cmpsb
mov
mov
cltd
push
cld
dec
push
ret
jo
or
adc
add
and
insb
and
or
cltd
pop
sahf
mov
loope
xor
pop
movl
xchg
pop
ret
aas
outsb
sub
mov
jl
out
mov
jnp
aas
push
adc
packuswb
rclb
movsb
insb
push
outsb
or
inc
or
xchg
push
ret
jnp
inc
push
xchg
pop
mov
xchg
movsl
mov
inc
dec
aaa
arpl
sub
dec
fndisi(8087
in
inc
aam
mov
adc
dec
mov
dec
push
xchg
scas
or
add
sbb
mov
test
mov
or
insb
out
mov
mov
pop
sbb
dec
xchg
push
fidivrl
rorb
sub
mov
xor
xchg
ljmp
sub
loopne
daa
and
pusha
xor
pop
mov
movl
test
add
inc
inc
or
sbb
push
inc
das
add
dec
or
shl
pop
sbb
xchg
or
hlt
fistpll
fdiv
xchg
sbb
sbb
ja
push
cmpsb
sub
hlt
inc
js
mov
or
mov
inc
push
scas
in
les
push
loope
sahf
sub
ret
test
inc
pop
fadd
ja
mulb
xor
mov
in
sub
xlat
imul
cmc
test
test
and
add
push
jl
jl,pn
in
cmp
cmp
or
imul
je
or
add
cmp
push
add
movsb
xor
adc
mov
dec
xor
mov
inc
xor
roll
cmp
jno
sub
add
vmulpd
loope
inc
mov
add
dec
dec
iret
andl
cmovs
push
and
push
push
jmp
call
and
jmp
sarl
repz
xchg
cmpsl
pop
xor
dec
add
sub
add
xchg
mov
lcall
scas
mov
mov
orb
pop
or
xchg
xchg
dec
adc
xlat
jns
shlb
or
dec
mov
mov
inc
mov
sahf
mov
mov
test
jl
nop
sbb
lahf
xor
ret
fdivrl
push
add
push
mov
cmp
cli
mov
loopne
lock
sbb
push
xchg
cmpb
inc
sbb
dec
dec
mov
movsb
lods
fcoml
mov
fadds
pop
dec
fstpl
push
add
popa
mov
lods
jge
jo
mov
notb
jne
add
mov
lods
pop
dec
jo
inc
push
mov
push
psubsb
je
add
or
stos
inc
lcall
rorb
fists
push
xchg
add
movsl
push
pop
inc
das
in
and
inc
sub
cmp
repz
jge
cmove
cmp
mov
je
or
pop
or
or
cmpsb
adc
sub
push
pop
loopne
rcll
lret
add
sbb
fs
popf
dec
mov
nop
jl
pop
push
punpcklbw
or
adc
nop
sahf
jecxz
jle
int
pop
clc
and
jb
dec
pop
shrl
fdivs
pop
scas
inc
and
xchg
fdivl
nop
or
push
push
push
in
addl
or
and
xchg
orl
and
and
sbb
pop
lret
and
adc
cmpsl
inc
and
inc
insl
jne
jne
push
loopne
mov
pusha
mov
mov
iret
sbb
xor
clc
push
in
and
aaa
xchg
or
add
hlt
push
mov
jmp
pop
ja
arpl
add
lock
or
in
outsl
or
adc
cmp
icebp
or
shll
out
gs
dec
clc
add
cmpl
push
wbinvd
outsb
jo
cmp
je
shr
in
ss
js
out
dec
adc
addl
pop
jns
stos
mov
or
sub
dec
lahf
dec
push
adc
stos
scas
cs
cmc
lret
adc
xchg
inc
lcall
add
dec
pop
fistpll
pusha
sbbl
adc
dec
xchg
inc
add
cmp
mov
test
mov
ss
and
in
or
push
adc
sbb
xchg
lret
push
jmp
stos
ljmp
sub
add
adc
and
scas
in
sti
inc
gs
inc
ficoms
cmp
cmc
je
cmpsb
inc
xor
cmp
dec
dec
out
push
cmp
les
shlb
sbb
pop
inc
jbe
xchg
mov
out
dec
rcrb
test
pop
jno
lods
push
test
dec
sub
push
test
and
fildl
sbb
xchg
sbb
push
jmp
adc
mov
in
or
push
pop
xchg
cltd
lds
mov
pop
mov
fisubl
mov
stos
sti
cmp
and
cmp
shrb
je
add
int3
in
dec
mov
adc
xor
mov
adc
adc
out
cmp
scas
das
std
loop
repnz
or
dec
adc
bound
mov
lret
popa
popf
inc
pop
jbe
push
inc
push
dec
cmpsl
cmc
rorl
pusha
icebp
inc
pop
add
inc
sbb
jl
push
push
xchg
jl
sbb
les
popa
inc
sbb
xchg
imul
and
and
push
xor
loopne
repnz
push
fisubl
lcall
daa
sub
add
pop
push
nop
ja
out
inc
and
mov
add
lea
sub
adc
sbb
lods
adcb
add
aam
sub
mov
push
and
sub
pop
push
mov
jne
mov
dec
jle
push
jmp
vmwrite
test
push
add
xchg
inc
pusha
sub
cld
and
jne
add
xor
mov
pop
pop
xor
dec
mov
stos
push
xor
aas
push
cltd
sbb
dec
jne
jo
sub
push
sahf
push
pop
sub
int3
es
mov
je
movsb
adc
loop
lods
mov
nop
mov
je
push
sbb
jno
push
and
sbb
mov
pop
das
cmpsl
dec
push
jl
inc
add
mov
mov
test
inc
xor
and
mov
xchg
mov
mov
cmp
rorl
pusha
xor
movsl
das
clc
dec
xor
das
gs
push
ret
pop
sub
fistpl
inc
and
adc
add
shlb
daa
movsb
sahf
inc
mov
loop
das
pop
jne
sub
jne
mov
add
pushf
fiaddl
jecxz
or
mov
pop
test
push
imul
pusha
loope
sub
xchg
jne
sbb
mov
fcompl
aaa
adc
bound
mov
sub
repz
mov
mov
dec
popa
adc
jae
jl
or
pop
int3
mov
push
arpl
xor
movsb
iret
test
and
outsl
pop
push
stos
pusha
or
sub
push
pop
and
mov
push
sahf
inc
fdivrs
and
in
dec
xor
adc
inc
add
inc
enter
je
sbb
xor
pop
mov
jecxz
int
lock
bound
mov
push
cli
rcrb
cltd
fdivrs
add
addr16
mov
mov
test
inc
inc
insl
sbbb
int
aaa
fdivs
push
loope
xor
xchg
insl
flds
push
pop
mov
je
shll
xchg
dec
mov
inc
add
fsts
mov
sbb
pop
dec
jae
leave
sbb
sub
pop
push
dec
mov
or
cmp
in
pop
sub
cmp
andl
and
xor
mov
inc
sbb
xorl
adc
push
shrb
push
adc
rclb
pop
sahf
inc
popa
sub
pop
pushl
and
add
pusha
or
mov
sbb
xor
xchg
insb
adc
pop
aam
clc
cltd
mov
lea
mov
sbb
inc
fbld
mov
cld
inc
sub
ja
popa
or
pusha
ja
adc
pop
sub
jge
jnp
rclb
pop
sub
pop
pop
dec
loope
pop
mov
sbb
add
mov
scas
nop
dec
mov
or
test
xor
mov
sub
push
push
xlat
and
adc
sbb
pusha
pop
je
pop
dec
or
testl
leave
sbb
insb
and
mov
inc
ret
xchg
or
adc
push
into
cmp
mov
pop
lret
jo
std
push
or
mov
jae
push
inc
loopne
xor
and
xlat
loopne
jmp
mov
push
mov
and
arpl
adc
pusha
cltd
push
xchg
adc
pop
push
jae
or
xchg
pop
in
dec
sub
or
add
les
xor
push
mov
and
inc
xchg
mov
add
push
inc
call
cltd
shlb
inc
cwtl
sahf
adc
mov
and
js
adcb
lock
aam
inc
ljmp
arpl
rolb
in
mov
adc
xor
pop
lods
lods
pop
sub
loopne
and
mov
inc
clc
add
xchg
pop
test
shll
orl
sbb
adc
add
inc
ret
call
or
push
lea
das
cmpsb
icebp
pop
sbb
dec
inc
pop
cld
cmpl
add
adc
xor
dec
dec
push
rorb
push
mov
jg
cmp
lea
leave
mov
popa
jo
jb
call
inc
pusha
adc
fimuls
jge
xorl
loopne
push
call
fiadds
sbb
cmc
and
mov
mov
outsb
xchg
gs
orb
push
mov
test
push
push
and
dec
adc
adc
pop
ds
xor
clc
loope
add
push
out
xchg
jbe,pn
pop
sub
cld
inc
and
mov
cmp
add
add
shll
test
or
push
push
dec
add
js
jmp
pop
into
imul
lods
nop
sub
repz
adc
cmp
fnstcw
and
sbb
jmp
je
push
imul
add
mov
and
in
push
jne
sbb
and
and
adc
dec
es
arpl
and
pop
mov
pop
repnz
mov
cmp
aad
pop
push
and
pusha
adc
cmp
adc
aaa
in
loopne
add
ret
dec
shll
jae
dec
aas
pop
add
cmp
fs
inc
pop
sub
add
cmp
inc
mov
pop
push
sub
xor
xchg
fbstp
cmp
repnz
cmp
lea
enter
or
ret
xchg
mov
ds
idivb
bound
pop
mov
jmp
cmp
in
fsubrs
adc
icebp
cld
mov
out
popf
adc
mov
push
mov
shr
adc
push
push
rcll
push
mov
daa
enter
fs
push
adc
adc
xor
mov
add
jne
lds
push
and
and
adc
cmp
sbb
enter
push
add
adc
push
pop
xchg
add
or
or
xchg
cld
adc
adc
sbb
or
cli
sbb
adc
mov
sbb
das
test
inc
aas
dec
dec
in
out
or
adc
push
rcr
and
add
push
call
mov
fs
cmp
jne
push
push
in
into
inc
add
enter
ret
add
ljmp
incl
cwtl
lret
clc
std
sbb
lcall
lcall
xchg
imul
cmpsb
je
mov
ds
sbb
push
sbbb
out
fbld
or
or
jg
mov
xor
mov
mov
dec
add
push
test
sbb
dec
adc
cmp
je
clc
frstor
outsb
xor
inc
cmp
sbb
call
or
in
pop
adc
fadd
cmpsl
mov
push
add
mov
mov
loop
fs
out
das
ds
push
and
push
imul
push
sub
push
sbb
add
movsb
xor
pop
jl
clc
sbb
cwtl
sub
inc
jl
lret
pusha
ret
add
outsl
movsb
dec
shl
daa
insb
inc
lcall
sbb
push
push
movsb
call
adc
je
lret
jecxz
sbb
pusha
push
mov
loope
adc
adc
inc
sbb
repz
push
lea
push
inc
push
and
lods
xchg
lcall
movsb
and
lea
mov
and
mov
cmp
test
inc
fnstsw
xchg
out
data16
xor
cmpsb
and
add
cmp
mov
add
je
test
mov
outsb
xor
outsb
add
aas
xchg
in
xchg
or
and
add
mov
aad
and
clc
push
repz
dec
or
stos
or
jmp
nop
daa
test
test
das
scas
fmul
out
jo
lods
int3
repnz
inc
call
cmpb
ror
arpl
xchg
seto
mov
cmpsl
fiadds
sbb
dec
hlt
xor
mov
push
enter
outsb
cmpb
jne
inc
push
pop
pop
outsb
inc
xor
xchg
or
or
sbb
mov
popf
pop
out
iret
push
sbb
and
dec
inc
mov
iret
add
lods
inc
or
sbb
scas
xor
scas
xchg
cmp
jl
inc
push
adc
xor
movsl
bound
xor
stos
jno
outsb
xor
push
fs
cld
xchg
cmp
xchg
sub
jl
and
insb
sub
adc
enter
lods
lds
add
lds
rolb
ja
fldl
mov
xorl
lods
and
sbb
push
inc
inc
or
inc
add
xchg
pop
sub
and
mov
int3
jmp
loop
test
movl
loope
push
lea
pop
push
inc
dec
cwtl
test
dec
jl
mov
pop
dec
adc
mov
xor
mov
dec
jle
push
clc
mov
push
or
int3
movb
and
inc
push
push
fldl
push
cmp
xor
dec
sahf
add
shll
imul
xor
sub
mov
cmp
addr16
test
sbb
push
call
shlb
sbbb
push
xchg
jg
push
jne
fstps
add
cmp
sahf
xchg
cmpsl
inc
push
cmpsl
in
jns
push
push
xor
out
pop
lods
mov
lods
in
sbb
adc
add
adc
push
jo
shr
adc
inc
mov
push
xor
sub
xchg
dec
jo
jns
clc
push
sbb
mov
inc
popa
push
xlat
pusha
mov
jb
push
movsb
inc
push
push
xor
ret
les
and
mov
cltd
mov
loopne
adc
jno
xchg
sbbb
sbb
test
xor
adc
sub
imul
mov
or
outsl
cmp
jne
test
and
inc
mov
insb
loop
push
push
loopne
or
sub
insb
push
and
int3
ret
mov
mov
push
notl
addb
je
pop
icebp
xor
mov
pop
jle
les
mov
sbb
fstpt
cmp
push
je
pop
add
loopne
sbb
pop
jns
jecxz
inc
adc
sbb
or
rcrb
out
or
adc
adc
and
adc
jae
and
add
movsb
sbb
test
add
sbb
mov
mov
rorl
xchg
ja
loope
hlt
inc
mov
dec
push
xchg
or
pusha
pop
es
mov
mov
jno
cs
or
fsubr
pop
je
sahf
dec
aam
push
lea
in
mov
add
inc
ret
in
decb
sbb
add
jp
pop
push
xor
or
mov
push
push
dec
mov
add
repz
mov
pop
add
add
sahf
add
sub
cmp
icebp
and
mov
pop
push
mov
outsl
mov
inc
push
and
mov
add
dec
jle
cs
cmp
mov
sbb
and
sbb
pop
add
sbb
sbb
fmuls
sbb
pop
inc
adc
pop
inc
add
add
jge
sbb
enter
sbb
push
push
adc
add
pop
in
jl
mov
hlt
pusha
add
or
aas
dec
les
sbb
or
cltd
add
and
dec
into
stos
dec
pop
sbb
add
and
cmp
outsl
sub
sbb
pushf
test
addl
jp
iret
inc
sbb
sbb
aad
outsb
pop
dec
and
xchg
pop
cld
push
enter
dec
push
test
cmp
aaa
dec
loope
inc
imul
ret
pop
mov
sbb
push
cmpsl
or
inc
adc
dec
repnz
adc
fiadds
add
cmp
leave
dec
fstps
mov
dec
add
jns
movsb
mov
rorl
subps
pop
xchg
mov
lret
xchg
incb
cld
and
cmp
dec
pop
and
stos
insl
fcomps
push
jo
in
sub
es
and
or
xchg
or
add
sbb
push
sti
add
mov
cltd
fstpl
add
adc
dec
or
sbb
pop
pop
pusha
push
movsb
movsb
adc
jmp
or
add
mov
jo
and
and
and
orb
es
imul
mov
push
add
or
sbb
adc
jmp
js
inc
es
inc
pushl
ja
xor
sahf
mov
push
push
push
roll
adc
inc
adc
push
cli
xor
add
mov
jo
pop
add
std
sbbl
add
and
lea
adc
ret
push
sbb
cmpl
sbb
pusha
aad
call
pop
xor
addr16
mov
inc
scas
inc
ret
add
or
xor
enter
pusha
adc
and
aam
imul
lock
sub
stc
push
test
push
notl
xchg
cmp
xchg
mov
push
inc
jl
cs
loopne
xor
xchg
hlt
cmp
and
xor
ret
mov
pushf
pushf
fcom
or
test
mov
imul
int
jmp
inc
sbb
pop
pop
pop
push
inc
int3
mov
push
or
dec
enter
imul
sarb
enter
sahf
jle
mov
mov
add
inc
fnstcw
jg
inc
orb
mov
dec
pusha
mov
lods
in
and
and
rclb
inc
out
add
imul
and
popa
sub
adc
add
mov
pusha
add
sbb
int3
add
stc
jl
sub
or
leave
xor
stos
test
adc
lret
aad
adc
cmpsl
push
jno
mov
leave
adc
and
es
sbb
inc
lcall
dec
cwtl
adc
dec
cs
in
mov
cmp
cmp
incb
dec
push
push
test
test
addl
pop
clc
mov
adc
pop
mov
xchg
add
fbstp
lea
cmp
jne
cmp
aaa
add
lea
push
add
pop
ud2
xor
mov
add
aaa
add
out
push
push
cmp
sbb
or
pusha
sbb
add
xlat
xorb
popl
enter
fmuls
ret
xor
push
mov
cmp
test
addb
inc
movsl
pop
cmp
jge
mov
fsubs
loop
rorb
jg
ret
inc
pusha
cmp
je
inc
mov
sarl
jge
aas
add
cmpsl
outsb
icebp
in
xchg
ret
shrb
imul
in
sbb
pop
mov
add
in
mov
lods
and
fsubp
jae
or
add
adc
ror
adc
ret
repz
mov
push
ret
mov
adc
rclb
sub
pop
and
ret
push
push
ret
dec
jnp
test
push
sbb
call
push
mov
xchg
cmp
or
mov
mov
dec
sbb
dec
shr
mov
jne
mov
je
adc
add
add
xchg
or
fcoms
pop
mov
and
pop
cmp
sub
xor
je
sbb
add
sbb
mov
pop
inc
movsb
stos
test
adc
decl
mov
or
push
and
rorb
add
insb
stos
xorb
xchg
ss
sarb
push
in
mov
pop
fnstsw
dec
jns
mov
xlat
inc
adc
fdivp
insb
or
and
and
xor
fisubl
xchg
aam
xor
mov
cmpb
hlt
add
fdivl
test
jnp
sbb
push
movsb
lret
add
les
stos
shl
xlat
mov
clc
xlat
js
fildl
cwtl
loopne
xchg
roll
gs
cmp
xor
inc
stos
add
fdivrl
xor
fists
sbb
gs
jg
push
and
xor
adc
sub
mov
dec
xchg
xchg
mov
sub
cwtl
and
push
xchg
dec
pop
push
nop
and
out
stos
daa
es
adc
xchg
adc
lods
mov
sub
xchg
scas
test
add
shlb
hlt
lods
cwtl
add
mov
dec
adc
add
xor
fs
push
or
fldl
cmp
xor
mov
stos
adc
xchg
cs
stos
inc
pop
push
mov
add
cmp
adc
xor
dec
dec
xor
pop
sbb
adcl
popa
in
jo
cmp
inc
mov
cs
mov
add
fstpt
fistl
push
push
mov
sbb
xchg
and
jle
lcall
fst
lcall
inc
or
shlb
sbb
jb
xchg
jns
fistpl
add
cmp
jae
mov
pop
into
lea
jmp
xor
call
xor
ja
push
push
or
xor
cwtl
testb
test
mov
lods
call
jmp
ret
jg
mov
in
cmp
mov
fstpt
outsb
add
das
inc
imul
pop
ss
andps
add
cmp
jl
pop
ds
jle
add
outsb
mov
mov
aaa
add
hlt
push
pop
mov
or
lcall
adc
push
movb
enter
mov
add
push
push
aas
sub
push
sbb
push
dec
add
xor
mov
lock
loop
adc
inc
jle
mov
dec
or
pop
sbbb
cmc
adc
mov
ds
mov
loop
mov
and
ds
jae
push
fs
stos
sbb
sbb
in
adc
lods
call
in
loopne
fisubl
xor
cs
push
mov
adc
adc
adc
in
lock
ret
or
cmp
mov
inc
sbb
cmp
mov
scas
sub
loopne
aam
or
push
jne
cmp
sub
cmp
movsb
mov
and
sub
add
test
pop
and
adc
scas
test
and
mov
inc
pop
in
or
lret
jnp
mov
mov
aas
inc
push
dec
stos
clc
cmp
dec
or
jo
push
cmp
clc
push
fistpll
les
or
insb
or
pop
or
jo
in
add
call
lock
out
out
xchg
mov
add
mov
sbb
and
push
adc
adc
imul
pop
pop
pop
add
adc
mov
xor
sbb
push
xor
sbb
jecxz
or
xlat
aas
std
cltd
adc
mov
push
mov
adc
test
inc
out
out
add
loop
lock
je
push
xorl
push
shl
inc
hlt
adc
lds
into
xchg
gs
loopne
or
cmp
mov
cmp
and
and
arpl
sub
adc
inc
sbb
subb
dec
sahf
sbb
cld
dec
adcl
jae
mov
adc
mov
addb
inc
dec
arpl
scas
repz
add
adc
mov
mov
add
push
mov
push
mov
add
sub
push
mov
pushf
rclb
sub
mov
inc
int
insl
or
addr16
sub
adc
pop
mov
lock
mov
push
rolb
pop
and
push
repnz
mov
dec
adc
push
pop
and
shrl
mov
outsb
jmp
push
sub
mov
loope
incl
std
xor
xchg
jecxz
sbb
aaa
dec
mov
mov
jmp
xchg
cmpsl
xchg
dec
fisubrs
or
adc
sub
inc
and
iret
push
repnz
add
cltd
pop
and
adc
mov
add
test
jb
les
sbb
fbld
ret
or
inc
pop
jbe
push
stos
and
add
xchg
mov
int3
sarl
pusha
daa
or
xor
inc
sub
or
adc
adc
xor
and
xchg
add
test
inc
sub
dec
or
lret
sbb
or
push
push
nop
or
or
inc
push
dec
verw
pop
mov
sub
dec
cmp
mov
pop
cmp
sub
adc
adc
sti
xchg
xor
int3
or
inc
rcl
jnp
mov
loopne
pop
add
dec
mov
or
adc
adc
fstl
fldt
push
movl
and
hlt
mov
in
popa
lret
cmp
jbe
sub
add
sti
cmp
rclb
cltd
add
jle
icebp
sarl
push
pop
ret
push
leave
push
adc
jge
daa
pop
insb
adc
cmp
jecxz
sbb
add
jge
mov
mov
xor
dec
jae
rclb
int3
push
dec
jae
adc
xchg
xor
mov
or
or
pop
push
jp
push
sub
cmp
or
insl
cmovbe
or
int
or
push
rolb
cmp
push
rorb
cmp
xor
rorb
and
and
and
add
int
rcrb
add
adc
or
rorb
mov
out
adc
cmp
push
stos
jb
pop
jb
add
add
add
or
and
sub
imul
addr16
mov
cmp
sub
adc
imul
imul
adc
aad
test
mov
imul
mov
dec
push
sbbb
xor
enter
pop
cmc
test
sub
lcall
popf
dec
cld
and
adc
lea
fbld
sbb
inc
xor
dec
sbb
inc
int
into
sbb
sbb
or
cmp
lahf
shrb
push
xor
push
xlat
shlb
cmp
adc
xor
cmp
cmpsl
add
xor
mov
xchg
out
mov
pop
sbb
xor
bound
inc
out
xchg
adc
dec
add
in
and
add
and
dec
sbb
subl
mov
mov
sbb
jmp
cltd
dec
xchg
sub
adc
xor
pop
scas
dec
push
fsubrl
pop
mov
inc
adc
addb
sbb
shrl
sahf
inc
push
cmp
dec
pop
mov
xor
sub
push
or
dec
pop
fwait
aam
ret
cmp
cli
xchg
push
cmp
inc
cmpsl
jb
push
or
mov
in
and
add
and
and
cmp
add
inc
or
jmp
cmp
push
jmp
push
push
mov
inc
les
or
in
cld
sbb
jns
or
push
hlt
mov
cltd
add
lock
or
push
insb
popa
testl
or
add
adc
nop
inc
push
in
sbb
adc
enter
mov
stos
add
adc
sub
bound
test
adc
sub
mov
or
dec
and
lahf
jmp
inc
push
setb
mov
cwtl
scas
push
out
add
sbb
push
je
jl
sub
aam
push
mov
jl
push
outsb
cmp
shlb
orl
and
mov
and
jl
je
or
hlt
cs
inc
jb
mov
dec
add
stos
push
push
and
jmp
sbb
adc
push
stc
clc
add
ret
loope
inc
lahf
jo
in
roll
inc
divb
aam
mov
push
or
push
push
insl
push
add
fildl
loopne
movl
xor
outsb
in
fs
mov
cmp
rolb
aad
mov
cmc
mov
sbb
outsb
inc
push
jo
pusha
mov
sbb
mov
adc
inc
jo
les
and
jl
cld
add
fdivs
mov
nop
push
or
test
add
mov
mov
pop
sbb
adcl
leave
or
push
dec
sub
cmc
sbbb
outsb
cmp
cmp
push
mov
loopne
ret
jg
popf
loopne
push
push
mov
pushf
ficoms
in
je
aas
inc
mov
sub
js
or
lcall
mov
hlt
mov
lea
roll
aaa
jno
test
add
imul
mov
sarb
ret
pop
mov
push
dec
inc
loopne
and
inc
jnp
call
push
icebp
or
rorl
ret
into
pop
es
dec
popf
add
and
mov
mov
add
fadds
mov
test
lock
iret
pop
inc
fsubrs
loopne
push
lea
adcl
pop
pop
push
cmpb
push
stos
add
mov
cmp
insb
push
lods
lahf
rolb
jne
lea
xchg
nop
sub
jo
rorb
mov
jmp
and
cmp
lahf
xchg
dec
loop
orl
pop
sub
filds
or
rcll
mov
push
mov
mov
mov
inc
lock
xchg
insb
jno
cmp
jae
push
inc
sbb
sti
jmp
mov
push
inc
or
jg
enter
push
mov
icebp
adc
mov
xchg
lock
mov
and
sbb
inc
push
test
dec
xor
xor
inc
ljmp
push
xchg
lea
xor
add
imul
and
or
add
add
jo
push
dec
rcrl
pushf
mov
pop
cli
fs
push
cmpl
inc
inc
cltd
insb
clc
lods
addl
xchg
mov
fiadds
insl
sbb
aam
sub
pop
and
or
push
sub
dec
xchg
mov
or
inc
push
and
enter
push
xchg
stos
cmp
dec
xchg
xchg
lret
and
and
enter
push
dec
push
mov
cmp
sub
dec
cs
dec
adc
xchg
sbb
cs
and
dec
mov
rolb
bound
inc
pusha
jle,pn
shlb
fs
cmp
mov
xchg
je
adc
rcll
mov
sub
les
lods
add
ja
nop
mov
test
pop
mov
and
add
pop
int3
inc
shrb
xor
dec
scas
in
insb
push
cld
jo
imul
xor
sub
adc
out
mov
add
loop
aas
fs
bound
es
push
add
js
or
jo
std
in
xlat
test
jp
inc
push
dec
lahf
cwtl
pop
push
mov
sbb
bound
fs
and
sub
push
jno
mov
pop
cmp
xor
add
xor
dec
sbb
fmull
in
or
pop
dec
es
xchg
pop
sbb
sbb
sbb
push
cmp
pop
xchg
and
push
in
sbb
xchg
and
ss
dec
sub
mov
and
or
bnd
sub
clc
sbb
xor
fcmovnb
push
push
mov
push
outsl
cmp
push
in
or
sbb
mov
call
mov
sbb
sbb
xchg
mov
pop
jns
push
push
jle
addl
inc
fs
lret
sbbl
adc
sbb
xchg
add
sbb
jns
sbb
inc
push
add
add
xor
and
mov
pop
ds
push
sarl
call
inc
xchg
mov
add
cmpsb
cmp
cli
cmp
push
sub
adc
xor
aad
sub
jo
adcl
pop
dec
insb
push
sub
push
dec
mov
adc
adcb
and
cmp
push
and
adc
insb
lods
inc
mov
sbb
mov
pop
mov
adc
mov
inc
sbb
dec
or
sbb
push
into
or
cmpsl
push
imul
in
sbb
lret
cmp
mov
cs
or
movl
dec
xor
dec
cmp
es
sub
out
xor
mov
push
sbb
mov
aam
adc
adc
ret
mov
dec
xor
and
clc
jl
mov
rorb
xor
xchg
ret
cmp
dec
jne
aaa
repnz
fcmovnu
rcll
sbb
push
les
jns
jnp
xchg
pop
mov
addr16
sbb
sbb
lahf
and
adc
adc
add
push
push
imul
movsb
pop
pop
leave
sub
call
xor
leave
cmp
mov
push
pop
or
or
daa
sbb
stos
pop
dec
mov
enter
arpl
add
insl
or
adc
or
arpl
orl
mov
js
je
or
adc
jns
lds
clc
ljmp
es
add
ret
adc
xor
leave
enter
cmp
inc
fiadds
push
mov
cmp
sub
mul
push
cmp
lcall
sub
xchg
lea
je
or
addr16
add
or
mov
and
out
cmp
sub
sbb
imul
adc
and
add
cmpb
cwtl
and
lock
adc
mov
insb
inc
xchg
cmp
push
orl
pop
sub
add
lea
xor
dec
add
sbb
aam
out
mov
inc
inc
sub
jns
mov
xor
test
sbb
mov
fcmovnu
sub
lcall
push
jp
sub
lahf
fsts
jne
add
lea
jg
or
sbb
adc
sub
dec
dec
lock
hlt
or
jg
xchg
pop
or
pop
xchg
add
sbb
cmp
adc
add
dec
push
push
jbe
aas
repnz
jl
jnp
clc
cmc
cmpsb
mov
imul
test
imul
pop
adc
fsts
imul
xor
pop
sub
iret
or
dec
cmpsb
loopne
push
adc
xchg
fldenv
adc
push
adc
mov
pop
xlat
aad
pop
std
rol
scas
or
add
and
inc
pop
push
jmp
movsl
sbb
cwtl
sbb
js
imul
xorl
mov
jns
outsb
adc
inc
mov
and
jmp
repnz
aas
add
sub
sub
dec
mov
les
cld
lock
pushf
or
cmp
push
lock
sbbl
lock
into
loop
cmp
sbb
je
orl
push
ror
and
lods
or
les
xchg
cli
xchg
je
cmp
mov
or
xlat
cli
and
push
daa
pop
mov
pusha
imul
cmp
jl
adc
mov
or
jl
push
jg
pop
mov
adcl
outsb
xchg
imul
lods
sub
jae
push
mov
cmpsl
mov
add
outsb
test
push
mov
adc
adc
inc
jb
adc
or
xchg
adcl
jb
xchg
push
adc
xor
push
xor
push
add
sub
sbb
incb
jae
cmp
jg
pop
fbstp
jno
xchg
dec
dec
repnz
inc
adc
test
push
popf
sbb
in
sgdtl
pop
dec
jp
sub
mov
mov
sbb
sub
sbb
add
jae
sub
loopne
sub
add
insb
pop
or
sbbl
inc
insb
add
and
sbb
or
xor
inc
xorl
mov
imul
movsb
cmp
push
fmull
adc
sub
cmp
shl
jecxz
test
pop
insb
xor
shll
and
adc
xor
xor
sbb
or
or
push
js
push
popf
je
leave
nop
push
cmp
jb
pop
xor
adc
je
inc
iret
xor
xchg
mov
adc
out
dec
jle
mov
andb
lods
mul
arpl
pop
jmp
or
lds
xchg
mov
dec
dec
hlt
pop
les
lret
mov
xchg
add
inc
mov
mov
and
in
mov
and
dec
add
inc
add
pusha
push
pusha
lret
test
sub
lcall
push
jge
inc
xor
stos
mov
jbe
sub
mov
sub
push
pop
mov
pop
push
xor
jp
dec
adc
or
push
push
mov
xor
lds
or
pop
loop
mov
inc
jmp
sbb
test
ret
xchg
add
mov
mov
insl
aam
mov
adc
sub
xor
push
mov
cltd
add
call
rolb
sti
lahf
add
shll
pop
add
push
int
push
jmp
jne
loop
add
ljmp
add
ljmp
lret
mov
cmp
xchg
xor
push
data16
ret
das
add
cmp
sbb
fidivl
aam
ds
xchg
dec
lcall
dec
mov
cmpsl
add
sub
mov
dec
cld
jno
push
add
inc
add
jns
ficoms
mov
push
test
jne
rol
sub
mov
loopne
int3
pop
add
mov
and
and
push
push
sbb
nop
cwtl
xchg
add
adc
inc
cmpsl
aad
mull
pop
lcall
add
decb
aaa
inc
gs
or
or
xorl
jmp
inc
jecxz
inc
lock
mov
subb
add
repz
out
test
add
dec
or
mov
push
inc
jns
sub
pop
adcb
push
pop
sub
mov
sahf
sbb
cmp
and
adc
out
int3
pop
mov
xor
adc
inc
pop
sbb
mov
ficompl
ret
pop
add
push
add
add
scas
cmovge
dec
lahf
jnp
push
xor
out
xor
fldt
sub
push
daa
mov
ret
invd
cli
xor
dec
pop
divb
mov
mov
sub
sub
sub
push
xchg
push
sbb
push
cld
push
or
cmp
sbb
sbb
mov
xchg
inc
and
movsb
push
pop
mov
shrl
xchg
mov
cmc
or
add
sbb
movzbl
or
mov
mov
adc
sub
arpl
pop
xchg
rcl
jno
dec
push
pop
push
inc
lret
in
mov
fs
lret
jae
and
or
adc
and
or
in
lods
pop
negl
aaa
sub
push
mov
gs
lods
popl
jns
add
scas
inc
and
loope
in
xchg
xlat
loop
loope
add
mov
aam
push
shrb
pusha
pop
je
gs
popa
std
mov
dec
xor
jg
pop
add
add
dec
dec
jb
push
cmpl
sbb
xor
add
lret
lock
inc
scas
push
pop
xor
inc
fistps
outsb
sub
jno
mov
xor
rclb
push
mov
mov
lods
sbb
push
mov
add
mov
sub
or
cmp
add
das
adc
pop
ss
repnz
jl
push
add
and
add
jns
add
pop
and
fs
push
xor
aad
mov
push
jb
notl
push
xor
adc
je
mov
dec
or
lods
mov
bound
lds
lods
fs
push
nop
fsts
daa
lret
sbb
and
lock
inc
aam
cmp
movsl
push
mov
test
push
xchg
add
in
cmp
xor
xor
and
fwait
adc
mov
icebp
push
pop
clc
push
adc
dec
and
pop
pop
add
adc
mov
pop
xchg
add
add
push
cmpsb
sarb
in
adc
nop
xor
pop
push
push
push
xchg
sarb
push
loope
lods
mov
jne
scas
and
lods
lret
xchg
cmpsl
sbb
adc
in
dec
dec
or
xor
adc
gs
dec
add
push
insl
or
adc
add
icebp
push
and
cmp
adc
insb
data16
inc
inc
push
push
sbb
xchg
lar
pop
outsl
sbb
adc
nop
mov
out
in
and
sub
add
pop
xchg
dec
sbb
mov
add
adc
aaa
pusha
jle
popf
jno
push
adc
xor
jmp
xchg
in
sbb
xor
iret
shrb
pop
adc
adc
sbb
mov
sti
jnp
add
clc
pop
cmp
jne
imul
push
or
idivl
outsl
push
or
das
pop
xchg
pop
repnz
inc
fs
add
adc
movups
enter
jmp
sub
push
hlt
outsl
inc
cmp
lea
rcl
xor
mov
mov
add
sub
jo
add
sub
lret
cmpsb
rorl
add
mov
jge
xchg
setns
push
and
push
fcoml
sbb
or
add
push
cmp
cltd
and
xchg
mov
mov
mov
jmp
jne
push
sbb
aam
push
adcb
sub
xor
sub
or
lods
insb
adc
add
stos
mov
mov
mov
dec
ljmp
mov
pop
js
sub
pop
call
test
sub
les
inc
std
mov
mov
test
pop
fistpll
inc
movsb
ljmp
mov
lods
lret
or
pop
xchg
push
fldenv
call
pop
bound
dec
xchg
jno
mov
sbb
sub
dec
addl
jae
outsb
cmp
cltd
dec
jp
aaa
lea
icebp
or
mov
mov
gs
mov
fisttpl
cwtl
jns
mov
idivb
orb
or
jne
pop
inc
add
sahf
push
or
in
pop
add
cmp
and
push
notl
cmc
and
ret
and
inc
test
ds
lret
mov
ljmp
push
movsb
pop
pop
xor
add
xor
inc
fisttpll
sbb
mov
test
push
or
pop
sbb
push
xor
cmpsl
add
repnz
xor
xor
pop
enter
or
stc
jp
enter
mov
pop
or
mov
xor
jmp
lea
ljmp
scas
jmp
mov
sbb
arpl
sbbb
mov
push
rorb
outsb
orb
mov
or
int3
out
jge
movzbl
rolb
cmp
cmc
negb
ja
mov
and
push
inc
leave
cmp
xor
xchg
add
sbb
dec
pop
xchg
and
sub
mov
or
aaa
mov
sbb
pop
inc
add
int3
dec
int
mov
and
mov
mov
aad
or
cmp
mov
or
fcoms
ds
cmp
jbe
scas
ds
jbe
sub
lcall
xor
xor
mov
pop
mov
outsb
mov
push
and
or
call
xchg
pop
mov
push
into
mov
js
movsl
imul
add
movsl
mov
mov
or
mov
add
add
adc
push
cmp
mov
mov
fcoml
subb
gs
xor
jge
cmpsb
and
and
adc
adc
icebp
clc
sbb
push
cmp
jle
push
dec
xor
xchg
mov
and
repnz
adc
mov
jecxz
inc
stos
outsb
jae
les
and
add
xchg
mov
inc
pop
ja
sub
js
lahf
push
rorb
sbb
pop
mov
adc
sbb
xchg
mov
movl
mov
roll
cmovae
loopne
sbbl
or
repz
pop
lock
mov
sbb
test
and
or
add
and
pop
or
inc
inc
nop
outsb
lds
lea
jno
add
sub
sub
xor
inc
insl
lcall
dec
cmp
sub
jecxz
dec
aaa
pop
xor
pop
lea
adc
pop
fwait
outsb
fldt
jo
mov
add
push
js
jl
inc
push
or
adcb
pop
cli
incb
and
and
adc
sbb
mov
lods
loope
cmp
dec
sahf
mov
or
testl
mov
inc
inc
sbb
or
lds
pop
inc
dec
ljmp
or
sub
mov
movsb
push
pop
dec
pushf
out
or
and
dec
or
ficoml
orb
jl
ret
sub
xchg
data16
pusha
je
or
and
pop
insb
cmp
ficoml
dec
pusha
ret
push
inc
pop
adc
dec
add
scas
and
push
or
ss
xor
int
sub
inc
lods
dec
add
and
add
test
jae
and
and
xchg
jo
sbb
adc
pop
inc
pop
push
cmp
imul
jmp
xor
sub
adc
mov
add
xor
adc
add
scas
das
std
movaps
xor
cmp
jne
cmp
cmp
or
cmp
mov
mov
and
mov
rorl
repz
pop
inc
push
or
mov
aaa
add
xor
shrl
and
mov
fwait
push
ss
fnstenv
setnp
or
in
push
jno
inc
inc
mov
push
cmpb
mov
xor
xor
xor
mov
xor
jae
out
push
dec
sub
adc
lea
and
aad
dec
popa
and
push
imul
jns
aas
add
and
inc
cli
push
jbe
push
pop
push
sub
mov
add
test
test
movsb
mov
push
and
cmp
jg
stos
decl
xor
popa
hlt
sub
dec
xchg
push
orb
mov
mov
mov
push
cmc
sub
dec
push
mov
addb
nop
orb
daa
pop
enter
or
or
insb
lahf
push
pop
sbb
mov
dec
jge
pusha
dec
pop
mov
outsb
pop
adc
push
sub
xlat
cmp
daa
bswap
in
and
push
or
adc
cmpl
cmp
insl
sbb
std
popa
fmull
adc
cmp
pop
loope
add
imul
push
inc
aad
pushf
lahf
inc
ret
adc
inc
inc
daa
and
xorl
push
jb
je
sbb
imul
push
push
sbb
xorb
sbb
popa
pop
xchg
dec
xchg
movsb
push
mov
xchg
xchg
pop
mov
test
cmpsl
xor
ret
lock
orl
and
cmc
push
jle
or
and
inc
ret
scas
mov
mov
cmp
pop
lods
pop
adc
je
cwtl
add
sbb
mov
jb
shrb
sub
je
cmp
das
lea
imul
or
mov
push
add
jo
xor
push
inc
fs
sbb
or
mov
add
test
sbb
jbe
push
mov
insb
lock
push
js
mov
sbb
rorb
mov
xchg
ljmp
mov
pop
add
push
pop
and
mov
pushf
test
pop
lds
jle
movsb
and
and
jno
xor
xor
jae
pop
add
sbb
xor
es
je
mov
in
pushf
jge
test
and
xchg
pop
sbb
js
sub
jnp
xchg
mov
add
xorl
cmp
inc
push
insl
xor
arpl
insl
lock
xchg
add
dec
fs
mov
push
aam
pop
dec
push
repnz
decl
inc
push
push
sub
jle
adc
pop
cmp
inc
test
hlt
inc
enter
mov
mov
insl
adc
inc
cmp
push
aaa
mov
aas
push
es
jo
adc
popa
push
pop
ss
shlb
inc
inc
sbb
sahf
lret
jno
fs
test
sbb
push
mov
adc
in
mov
jmp
jne
jle
mov
jp
mov
inc
jecxz
mov
test
jge
addl
push
push
xchg
sub
push
jl
test
mov
push
cld
pop
xchg
out
movsb
xor
stos
push
je
sbb
sbb
and
das
push
lcall
cmp
rol
xor
cs
js
mov
add
insl
mov
mov
dec
test
lds
xchg
sbb
or
mov
iretw
aaa
mov
arpl
mov
enter
add
inc
insl
jbe
lock
lret
push
push
inc
xor
push
stc
clc
or
push
cmp
mov
jo
xor
orl
jge
sbb
inc
rcr
pop
je
mov
rolb
fs
les
lods
inc
sub
add
movsb
jb
repz
sbb
cltd
dec
cs
pop
dec
inc
out
in
push
test
xchg
jl
mov
popf
mov
inc
dec
mov
mov
and
mov
enter
dec
pusha
push
mov
push
leave
shlb
and
lock
and
push
and
push
and
push
sub
subl
add
xchg
adc
out
dec
push
movsb
lret
jb
or
inc
inc
add
push
fcoms
dec
push
pusha
mov
mov
add
sarl
add
fbld
sbbb
xchg
or
sbb
aam
pop
and
sbb
mov
and
daa
inc
daa
pop
adc
adc
push
xchg
int3
mov
sub
mov
sbb
mov
pop
fbstp
xchg
mov
xchg
jp
add
push
push
cmp
and
mov
push
push
mov
xor
hlt
lods
mov
and
jmp
and
clc
test
cli
sub
xchg
xchg
or
aad
sub
sbb
gs
dec
pop
pop
jp
push
mov
or
adc
dec
test
mov
xor
arpl
orb
sub
mov
pop
adc
jne
int
clc
inc
sbb
push
sub
sbb
jb
push
sub
cmp
xor
sub
fs
sbbb
sub
sbb
add
cmpl
ret
sbb
sub
pop
je
xor
push
pop
test
sub
iret
xchg
mov
stos
adc
add
push
mov
mov
adc
lahf
inc
outsl
add
xchg
xchg
mov
sbb
push
xor
mov
fdivrl
mov
xor
mov
lahf
inc
inc
or
cmp
add
mov
add
clc
adc
sbb
sub
jno
popf
push
sti
push
or
adc
sbb
jle
adc
lods
xor
adc
pop
xchg
add
mov
and
ret
pusha
icebp
xchg
cmp
cmp
inc
call
insl
add
or
add
jge
popa
pushf
jl
cltd
int
mov
inc
call
dec
loopne
clc
jbe
sbb
dec
adc
inc
xor
add
push
adc
mov
sub
test
push
mov
push
les
fldlg2
es
cwtl
clc
pop
pop
sub
adc
cmp
inc
and
sar
mov
dec
and
mov
mov
mull
lods
dec
add
adc
les
test
xor
or
adc
mov
aam
adcb
add
pop
mov
int
shrb
in
inc
leave
dec
popa
or
and
adc
add
xchg
push
insl
loop
loope
mov
xor
or
xchg
repnz
adc
pop
inc
test
add
sub
sbb
icebp
add
idivb
xchg
rorb
test
inc
adc
popf
adc
inc
xchg
outsb
sti
setge
sub
ds
or
and
outsb
lret
and
adc
in
mov
xor
aam
push
inc
xchg
mov
add
lret
mov
sbb
je
adc
dec
lods
inc
scas
push
xor
add
adc
mov
add
sarl
pop
vsqrtpd
mov
or
sbb
push
mov
and
push
jb
add
push
sahf
dec
push
xchg
sbb
in
pop
cmp
or
inc
add
add
push
or
cmp
fs
dec
clc
sub
dec
sub
pop
mov
insl
ljmp
add
imul
adc
cmpsl
xchg
loop,pn
and
jbe
out
dec
add
insl
loop
imul
mov
sbb
adc
fldcw
stc
mov
xchg
or
movsb
sbb
lds
add
push
pop
jmp
or
add
out
lock
push
xor
aad
in
push
xchg
and
mov
mov
or
dec
adc
pushf
cmp
push
pop
push
cmp
push
sbbl
inc
and
or
pusha
jg
inc
sub
insb
add
fmull
vpperm
test
and
mov
aaa
add
inc
insb
inc
xchg
insb
pop
or
xlat
or
push
xor
jns
cmp
dec
inc
je
repnz
insb
mov
dec
push
sbb
inc
rolb
fsubl
xor
sbb
sub
or
push
add
pop
add
stos
sbb
jmp
cwtl
push
jg
inc
popa
push
sub
in
dec
push
loopne
inc
push
rolb
je
out
mov
mov
sbb
je
push
xchg
out
insl
call
adc
insb
mov
xchg
fwait
cli
push
push
push
mov
inc
ds
negl
sub
xor
ss
cmp
adc
sbb
push
jo
adc
ucomiss
push
femms
hlt
add
mov
pop
add
pop
sub
lock
add
push
inc
pop
push
pop
push
add
push
and
popf
adcb
xchg
and
fstpl
sbb
jl
sbb
xor
and
jno
xor
andb
mov
popa
jae
int3
fsubrl
push
and
rorb
test
sub
je
xlat
stc
pushf
not
jns
loop
or
push
or
out
jg
xor
incl
adc
fsts
add
ret
aad
add
test
xchg
xchg
push
jecxz
xor
in
xchg
lret
adc
inc
push
sub
and
je
add
push
push
xor
push
mov
adc
or
push
mov
incl
cmp
dec
pop
inc
or
mov
dec
add
push
test
sbbl
stc
test
add
loope
loopne
sbb
push
cmp
out
jbe
jnp
or
ret
mov
push
hlt
push
push
clc
ret
mov
mov
dec
and
push
movsb
inc
dec
int
push
adc
call
lock
push
cwtl
cmp
sbb
clc
popf
pusha
mov
push
enter
xor
movsl
mov
cmp
leave
rorl
sub
push
push
leave
jae
or
or
xchg
push
add
xor
ret
test
jge
or
adc
sub
cmp
xor
incl
test
xchg
push
adc
xchg
insl
xor
jne
sub
test
push
out
dec
jb
xchg
adc
push
dec
cmp
sbb
mov
jl
push
xlat
in
sbb
fwait
and
xor
call
sbb
in
scas
movsb
int3
call
aam
xor
and
mov
xchg
fcom
popa
push
sbb
leave
sbb
sbb
test
cmp
sbbl
or
leave
add
sbb
rcrb
js
leave
sbbb
push
pusha
and
mov
enter
and
and
andb
es
faddl
enter
dec
sub
enter
fisttpll
sub
cmp
aad
and
xor
adc
hlt
test
pop
jb
cmp
es
xor
mov
jbe
sub
dec
aam
cwtl
int3
dec
shll
aam
and
and
rol
and
cmpsl
mov
lret
mov
dec
sub
push
jl
outsb
leave
jae
bound
mov
adc
cs
cmpsb
loop
cli
daa
adc
lock
mov
or
jl
push
or
inc
push
push
cmp
loop
and
test
add
xor
xor
adc
push
nop
xchg
and
and
push
sbb
adc
mov
pop
mov
add
sbb
sbb
mov
sub
xor
cmc
push
or
loope
and
cmp
cmp
pop
xor
cs
xor
rcrb
in
mov
xchg
cmpsb
adc
in
aas
xchg
hlt
inc
les
inc
fcomps
mov
push
hlt
inc
lods
push
repz
inc
xchg
out
jns
ja
pop
sbb
adc
imul
mov
inc
add
jmp
lea
in
out
lea
push
cli
testb
jae
lcall
ss
loop
addr16
in
add
addl
outsl
add
rolb
cmpb
mov
inc
movsb
adc
and
aas
lods
ds
dec
cmp
pop
cmp
cmp
sub
repnz
cmp
xchg
mov
mov
fwait
in
mov
inc
lea
jl
push
pop
jmp
pop
mov
scas
test
add
pop
push
sbb
mov
jmp
rorb
xor
dec
dec
ss
add
push
jg
or
test
and
imul
sbb
lcall
pop
dec
sub
sub
and
rcrb
or
insb
imull
push
stos
mov
adc
nopl
imul
cld
shrb
cmp
mov
or
jb
enter
cmpb
clc
and
imul
lret
push
cmp
mov
and
popa
in
adc
mov
imul
push
add
adc
cli
movsb
dec
push
sbb
ss
leave
push
in
fiadds
rclb
dec
cs
xorb
adc
lcall
jg
push
push
push
das
cmp
or
xchg
cltd
sbb
pushf
cmp
inc
adc
adc
pop
xor
pop
sub
adc
adc
loop
inc
pop
inc
xor
dec
test
mov
sti
nop
dec
lcall
push
orb
and
cmp
and
rolb
in
push
and
fmul
dec
pop
dec
sbb
dec
xorb
scas
mov
mov
adcl
and
sub
or
dec
xor
nop
xor
and
dec
and
and
adc
pop
dec
push
inc
pop
adc
push
call
dec
dec
or
adc
xor
inc
dec
dec
inc
scas
sbb
xor
lock
push
inc
push
pop
cs
sbb
cmp
inc
mov
mov
dec
dec
xchg
test
adcb
push
sbb
pop
or
sbb
mov
mov
inc
movsb
fnstcw
jp
cld
sti
mov
sub
dec
sub
test
sbb
or
add
push
sbb
mov
push
mov
outsb
loope
pop
sbb
or
dec
sbb
out
sub
sub
or
cmp
add
sub
push
sub
mov
xchg
out
sbbl
and
rcll
mov
xchg
shr
jl
mov
mov
push
cmc
lods
jge
in
or
xor
shr
xchg
aam
xor
ffree
and
shrl
add
insb
cld
xchg
and
into
push
pop
cltd
xor
or
adc
xchg
adc
mov
sbb
pusha
adc
push
xor
xor
mov
mov
mov
cs
push
fs
sub
inc
test
notl
dec
xor
push
or
dec
jbe
xor
bsf
xorl
cmpl
leave
pop
xor
jne
cmp
loopne
imul
imul
lret
mov
or
xor
inc
adc
lret
ja
adcb
push
test
rcrl
lea
and
loope
mov
nop
xor
xchg
mov
sbb
sbb
jno
push
das
js
aaa
adc
mov
mov
test
lcall
aam
sub
pop
pop
lods
call
inc
dec
cmpb
sub
xchg
push
mov
movsb
cltd
ljmp
lcall
scas
sbb
int3
scas
fcmovbe
cwtl
pop
mov
xchg
out
jns
add
scas
add
sub
movsb
leave
inc
aam
inc
shrb
mov
int3
mov
add
and
add
ljmp
push
pusha
mov
addl
mov
daa
fs
imul
or
sbb
xchg
push
sarb
lods
xchg
adc
cld
or
jmp
push
fwait
mov
push
push
cmp
jae
call
add
cli
push
jmp
int
xor
push
pop
fistl
mov
mov
lock
out
push
pop
inc
jne
mov
dec
jecxz
push
lahf
dec
and
mov
jmp
stc
add
stos
xchg
inc
sbb
daa
dec
outsl
loop
sub
or
jge
pop
or
repnz
or
test
add
inc
sbb
mov
sarl
add
mov
call
jno
push
jmp
push
adc
pusha
sbb
jo
push
mov
inc
xchg
sub
lea
inc
inc
enter
dec
adc
cld
cs
or
cltd
popa
mov
and
test
xchg
jl
push
push
dec
lock
adc
push
dec
shrb
xor
fists
or
xor
and
fs
test
push
add
and
fbld
mov
pushf
xchg
pop
inc
inc
lock
test
push
fcomps
add
add
or
sbb
sbbb
xchg
cmp
add
and
xor
data16
repnz
adc
xchg
or
fldenv
cmp
inc
bound
repnz
and
and
adc
mov
dec
dec
fmull
pop
mov
std
add
jo
fdivr
xor
rclb
add
jae
mov
punpcklwd
mov
or
inc
inc
dec
push
mov
bound
aas
xor
pop
sub
mov
xchg
dec
repz
jb
xor
sub
lret
popf
aam
mov
adc
push
sub
add
inc
outsl
ret
add
in
test
or
jge
loopne
jb
mov
xor
push
or
xor
addb
lahf
sbb
movsb
xchg
push
dec
xchg
mov
push
push
mov
cmpsb
push
imul
imul
repz
imul
and
dec
and
push
ret
inc
mov
pop
pusha
adc
dec
aad
stos
xor
outsb
pop
adc
movsl
push
xchg
ret
inc
sub
and
rclb
aam
fildl
movsl
pop
pop
adc
pushf
push
dec
and
adc
mov
leave
popa
aas
fwait
insb
push
movsb
adc
sarb
cmpsl
outsl
xchg
or
adc
and
adc
roll
and
sbb
and
dec
dec
cs
or
or
es
inc
fwait
or
loop
ret
out
lret
cmp
jae
mov
or
sbb
xchg
mov
push
mov
loopne
leave
loopne
jl
and
or
sbb
aas
push
xchg
xchg
out
and
rolb
and
insb
ja
add
jbe
mov
or
ret
pop
and
js
jle
loop
insb
mov
outsb
xchg
cmp
cmp
add
cltd
fcmovbe
sbb
add
fistpl
lea
cmp
push
jmp
fnstcw
incl
mov
shrl
jbe
imul
sub
cmp
jb
lahf
imul
mov
push
mov
movsb
or
jg
adc
shlb
pop
out
pop
dec
mov
sub
shll
push
mov
or
jne
mov
add
pop
adc
and
add
push
dec
mov
pop
loope
sbb
pop
mov
outsl
push
dec
add
test
clc
push
sahf
fndisi(8087
dec
cmp
xor
and
add
add
add
pop
push
pusha
mov
add
jo
add
insb
fstps
cltd
mov
cmpsl
sub
add
cwtl
pop
xor
fs
or
and
adc
xor
and
or
sub
ljmp
add
jle
sub
adc
mov
ret
and
inc
je
xor
mov
mov
sbb
cmp
add
insb
cmp
lcall
nop
andb
add
inc
xor
cmp
into
outsb
insb
adc
lods
cmp
xlat
imul
push
mov
push
or
jbe
in
xor
adc
in
outsb
fiaddl
xchg
inc
cmp
dec
pop
shrb
or
sbb
push
fsubs
in
sbb
orl
test
cmp
out
jbe
cmp
in
icebp
mov
sbb
push
mov
mov
sbb
jbe
les
mov
add
push
in
add
push
xchg
cmp
mov
mov
xchg
cltd
dec
dec
push
jb
lea
add
mov
jnp
call
nop
xchg
cli
les
jns
in
sbb
icebp
sbb
fisttpl
push
mov
pmulhuw
add
in
sub
mov
mov
xor
test
je
mov
adc
inc
cmp
test
adc
test
addb
pop
xchg
scas
mov
fisttpll
mov
aaa
imul
js
clc
dec
insb
inc
pop
push
xor
nop
xor
sbb
mov
fdivrl
mov
jne
lock
jbe
ret
fldcw
sub
imul
and
push
mov
leave
push
adc
mov
std
mov
js
jp
add
or
push
lds
inc
loopne
enter
pop
push
mov
mov
shlb
lret
push
or
fwait
ret
addl
lahf
add
add
rcl
mov
jo
test
jne
push
mov
jge
ss
imul
pop
add
mov
roll
cmp
lods
out
pushl
or
or
je
push
je
push
in
ret
jnp
loopne,pn
cli
in
lret
rorl
adc
add
loopne
shl
mov
int3
add
in
repz
add
ds
pop
xchg
test
outsl
mov
fdivrs
inc
hlt
cli
and
xchg
xor
test
and
ret
cmp
mov
push
daa
add
ja
sbb
shl
stos
jecxz
hlt
pop
dec
test
ret
add
lds
in
push
adc
lret
aam
xor
movsb
mov
lock
jb
mov
dec
mov
xchg
rolb
xchg
hlt
nop
adc
enter
xor
movsb
scas
les
in
sub
xlat
xor
adc
shll
out
adc
add
push
xchg
pop
pop
add
sub
pop
xchg
fbld
add
cmp
loopne
data16
jmp
cld
inc
test
rolb
sbb
and
add
adc
jge
jmp
setl
movsl
pop
dec
xchg
jne
inc
adc
inc
xchg
inc
loopne
push
gs
xchg
cmc
stc
add
int3
push
les
sbb
insb
mov
adc
mov
pop
push
mov
or
jne
clc
rcrl
xchg
or
movsb
sbb
dec
mov
mov
push
mov
test
sbb
jl
xor
mov
es
out
push
movsb
call
icebp
push
sbb
repz
lds
jecxz
fisubrl
add
or
xorl
test
pushf
xor
jne
dec
mov
adc
xor
les
and
ret
ljmp
cmp
test
pop
mov
add
leave
aad
and
or
out
call
test
pop
lahf
dec
push
rcrl
push
das
cmp
in
xor
cmpsb
push
aas
or
int3
mov
sub
jno
mov
clc
sub
rcll
cmc
sti
add
xchg
cmp
pop
and
mov
inc
pop
shll
faddl
adc
int3
mov
int
push
pop
add
sbb
inc
aam
loope
mov
xchg
mov
xor
and
jmp
lret
pop
and
inc
sbb
sahf
ret
data16
mov
lahf
adc
out
dec
or
jne
inc
ret
mov
jmp
inc
mov
lea
push
mov
xor
lds
inc
adc
mov
movsb
xchg
cmp
cmp
push
stos
rolb
pop
add
bound
inc
dec
orl
and
fcoms
bnd
xchg
push
inc
mov
int3
pop
xor
dec
sub
lcall
inc
mov
sbb
jnp
add
xor
lahf
out
imul
mov
ret
bnd
add
jae
mov
cltd
addr16
jge
mov
dec
jnp
add
mov
sbb
and
xor
xor
clc
xchg
jo
mov
add
pop
lods
push
pop
push
add
cmp
dec
adcl
mov
jge
or
cmp
je
xchg
xchg
mov
mov
mov
push
and
inc
add
fmuls
pushf
mov
je
push
sarb
daa
out
adc
mov
cs
stc
xchg
cmc
dec
les
pushf
stc
bound
std
inc
test
push
pop
mov
adc
out
nop
out
add
adc
jae
shrl
add
imul
dec
dec
push
fcmovbe
lods
daa
faddl
dec
mov
lds
sbb
mov
pop
pop
xchg
outsb
pusha
lcall
or
cmp
je
push
leave
push
or
adc
ret
jne
xor
or
xchg
fcmovnbe
popl
mov
mov
test
or
inc
or
jo
ljmp
or
push
push
sbb
rcr
js
inc
xor
sub
mov
ljmp
add
sbb
push
xchg
cmp
iret
inc
sbb
dec
stos
xor
adc
sbb
sub
push
inc
add
add
pop
push
and
or
or
jg
add
test
fs
enter
movl
or
aas
xor
jg
add
pop
lea
cwtl
or
jb
adcb
mov
pop
mov
add
xor
sarl
test
adc
sub
leave
das
sahf
test
mov
lret
push
add
or
push
adc
push
test
sti
push
cmpsl
ret
sub
cmp
sbb
and
pop
andl
adc
add
ds
subb
rorb
mov
pop
mov
inc
shl
add
popf
lahf
adc
or
cmp
jecxz
xlat
call
and
sub
into
add
sub
sbb
sar
cmpsl
sbb
push
add
push
outsb
insb
xchg
push
add
dec
test
pop
jmp
leave
test
fmull
mov
cmpb
pusha
sub
mov
and
pushl
jne
cmp
jne
cmpsl
mov
add
mov
sbb
pop
inc
jno
sub
mov
les
dec
bound
hlt
add
daa
js
sub
push
dec
out
push
cld
int3
cmp
xchg
daa
push
or
sub
mov
add
or
subl
pop
inc
into
mov
into
jmp
and
loopne
loopne
popa
add
push
mov
pop
cs
in
dec
hlt
dec
addr16
test
jecxz
or
jo
js
inc
stos
test
pop
pop
sub
and
pop
dec
add
inc
jl
pop
xchg
or
aas
insl
push
mov
das
test
xchg
lods
pop
lret
cmp
nop
rolb
or
mov
or
pop
cmp
mov
push
or
insl
inc
or
add
in
andl
sbb
stc
bound
bnd
xor
aam
adc
mov
ret
push
jp
lock
cmpl
mov
out
ss
icebp
push
push
push
aam
divl
adc
inc
adc
push
inc
add
les
movb
sbb
add
push
or
push
rcll
add
loopne
push
xlat
cmp
adc
pop
add
adc
aam
lret
int
imul
cmp
outsb
inc
add
inc
shrb
dec
add
je
fildll
rorl
sub
jmp
inc
dec
add
adc
and
and
inc
xor
dec
cmp
and
add
fmull
mov
and
add
fistps
or
xchg
dec
ljmp
cvtps2pi
addr16
mov
adc
or
inc
faddl
sti
jb
cmp
jns
or
mov
adc
rorl
cmp
and
idiv
jo
and
jnp
sbb
add
loop
xor
ret
in
mov
pusha
mov
mov
iret
cmp
inc
out
mov
pushf
cmp
cmp
ret
mov
cmp
jne
sbb
jle
int3
adc
es
cmpsb
add
roll
in
add
loopne
js
inc
mov
or
pop
mov
sbb
push
idivb
loopne
cwtl
add
mov
pop
or
or
decl
test
xchg
push
xchg
cmpl
fwait
lds
xchg
push
rolb
iret
jle
outsl
cmp
jns
and
movsb
mov
rcll
hlt
and
mov
mov
jl
pop
jb
xchg
add
push
add
or
and
push
loope
fadds
pop
addl
dec
test
imul
mov
or
int
lcall
dec
push
add
or
sub
addr16
shrb
xor
mov
adc
jno
and
add
or
push
icebp
or
cli
mov
or
inc
pushf
add
lock
pusha
add
pushf
mov
and
and
cmpsl
inc
ret
std
add
xor
adc
test
mov
jmp
push
add
dec
nopl
mov
dec
shrl
dec
mov
adc
push
add
push
pop
xchg
push
xor
sbb
insl
or
or
jg
pop
andl
inc
aad
loope
mov
xchg
cmp
sbbb
xor
xchg
pop
xor
cmp
inc
adc
mov
dec
sbb
inc
push
push
data16
inc
push
or
push
fmulp
jle
push
idivb
cmp
cli
ljmp
test
rolb
in
sbb
lods
xor
and
jmp
add
ret
test
mov
mov
add
pop
out
xor
aad
mov
outsl
jl
add
es
add
dec
xchg
push
mov
in
loop
addb
push
dec
push
mov
xor
daa
jecxz
nop
add
jmp
js
push
pop
or
addb
pop
or
arpl
xor
push
add
lds
ret
ficomps
and
xor
xor
std
add
add
cwtl
cmp
jae
adc
sub
dec
psubb
inc
sub
inc
add
aam
call
adc
lret
adc
enter
lcall
add
mov
ja
outsb
popa
sbb
add
inc
jl
jecxz
lds
inc
lcall
xchg
inc
mov
add
mov
cmpb
or
mov
out
jmp
dec
push
jne
cmp
jb
sub
jmp
push
dec
movzwl
push
pop
cmpl
push
setl
movzbl
push
imull
testb
xchg
adc
rolb
and
les
or
inc
add
inc
leave
and
push
sahf
jl
or
cmp
add
sbb
or
in
add
lret
jae
cltd
dec
push
push
push
rorl
dec
inc
pusha
mov
push
lahf
lods
add
pusha
xchg
cmp
nop
xor
cwtl
js
adcb
std
int3
sub
pusha
popf
pop
iret
mov
mov
mov
mov
xchg
xchg
loope
negl
sub
in
dec
call
mov
dec
push
dec
cmp
es
xchg
or
lahf
enter
js
xchg
adc
mov
pop
dec
or
jg
xor
fmuls
aas
loope
popa
cmp
push
push
push
jecxz
test
pop
mov
jne
dec
sub
imul
adc
pop
call
pop
sahf
loopne
dec
lcall
mov
into
mov
mov
push
pop
sahf
rolb
adc
ds
mov
mov
dec
jmp
push
lds
add
push
movsl
sbb
and
sub
add
lds
cmp
xchg
xchg
push
push
cmc
xor
dec
add
ja
ja
loopne
inc
cmp
mov
movsl
add
inc
xchg
mov
add
mov
adc
sahf
xchg
mov
xor
xor
dec
cmp
mov
shrl
push
das
xor
push
pop
xchg
sub
sbb
nop
mov
push
push
fwait
je
ficompl
loop
add
lea
movsb
xchg
and
adc
leave
test
and
adc
or
or
mov
push
sbb
lret
fistl
inc
cmp
xor
cmp
mov
pusha
and
pop
xchg
mov
add
iret
sbb
adc
and
adc
inc
addr16
cmp
rorb
mov
sbb
fistpll
jge
inc
and
mov
data16
mov
push
pushf
push
outsb
fsts
ljmp
movsl
lds
test
lods
dec
je
push
nop
addr16
dec
add
or
and
jle
xor
inc
loop
jne
xor
daa
mov
mov
pushl
ret
cli
aas
inc
jne
add
push
mov
cmp
fidivrs
mov
sbb
rclb
jno
mov
inc
jecxz
test
xchg
out
sub
das
xchg
adc
or
and
call
cmp
push
nop
jnp
push
dec
and
inc
sub
int
insl
inc
pop
orl
lea
mov
and
repz
cmpb
jne
adc
sbb
outsb
xor
adc
test
jg
daa
repz
in
xchg
jo
dec
push
gs
imul
dec
mov
push
lods
pop
sbb
and
dec
pushf
and
adc
cmp
fiadds
xor
popf
ror
xchg
lahf
clc
add
sub
cmp
sbb
adc
mov
stos
push
inc
iret
sbb
xchg
mov
jne
jmp
add
adc
add
sub
xchg
dec
js
add
adc
dec
jb
pop
inc
and
sbb
hlt
inc
arpl
xchg
xor
call
movsl
push
in
push
rcrl
push
push
or
inc
andl
jecxz
inc
jmp
lahf
and
pop
xchg
in
add
inc
sub
mov
sub
lods
adc
adc
pop
filds
sbb
push
dec
shll
ret
push
loope
xor
adc
mov
xchg
fs
sahf
xchg
test
sbb
adc
or
xchg
add
shlb
ss
dec
or
enter
cmpsb
pop
push
pop
xor
mov
inc
jne
mov
add
mov
nop
jb
loop
adc
repz
jg
lods
in
pop
pop
pop
mov
inc
es
sub
mov
cmpsl
in
aas
push
imul
pusha
insb
mov
cltd
outsb
sub
adc
push
cmp
sahf
nop
ret
add
pop
add
adc
sbb
push
mov
xor
ds
push
js
aaa
push
jb
and
add
hlt
jae
cmpsl
dec
push
dec
and
test
push
dec
enter
adc
sub
mov
sub
js
arpl
les
push
add
movsb
orl
cmp
sub
popa
jmp
sbb
mov
xchg
dec
add
pop
adc
popa
andl
and
pop
and
pop
mov
mov
xor
daa
jl
and
pusha
js
add
enter
sub
es
xor
js
xchg
dec
push
sbb
push
cltd
call
jo
sbb
lea
popa
add
push
add
es
dec
js
or
sub
and
or
in
mov
push
mov
xchg
xchg
mov
jb
xchg
add
cmp
ret
inc
cmp
mov
push
ja
cwtl
pop
imul
mov
dec
dec
stos
or
je
inc
dec
dec
sub
pop
stos
inc
add
pop
paddw
inc
mov
xchg
cmp
enter
cmp
cmp
jns
scas
add
test
push
shufps
dec
xor
mov
mov
push
jns
or
ficomps
adc
inc
push
or
jmp
fwait
add
inc
cs
adc
xor
xor
push
xor
or
push
shll
mov
aam
call
call
push
push
addr16
mov
ficomps
jmp
push
or
pop
fs
pop
mov
mov
or
xor
int3
rcrl
sub
ja
dec
sub
popa
das
mov
and
push
andb
and
lea
add
mov
out
getsec
and
and
daa
pushf
jmp
fldl
punpcklbw
xchg
inc
adc
int3
insl
add
or
test
loope
and
call
jle
sbb
or
inc
insb
es
movsl
add
or
dec
daa
sbb
and
push
add
adc
stos
shl
mov
fdivr
push
lret
pop
subb
lds
enter
ret
push
add
lret
insb
popa
add
nop
adcl
push
lods
dec
sub
cmp
lods
repnz
aaa
aad
push
jecxz,pn
jno
pop
enter
lock
hlt
flds
sbb
jb
roll
in
sub
dec
or
fldl
mov
xor
loop
dec
and
mov
adc
xchg
sub
cmp
ret
or
adc
rorl
add
jle
add
shlb
lcall
or
push
adc
and
jle
int
sbb
insb
loope
int
and
pop
test
jp
xlat
arpl
cltd
inc
push
sbb
and
push
imul
jg
sub
mov
mov
and
pushf
outsl
rcr
jle
mov
add
daa
loop
jne,pt
fimuls
test
fstpt
sbbl
lret
jge
push
js
or
les
push
xlat
sub
push
jge
cld
cmc
jl
lea
in
cltd
rcl
mov
push
shll
pop
dec
add
cmp
add
cmpsb
dec
sbb
cmpb
add
outsl
xchg
dec
push
mov
mov
js
push
fisubl
mov
push
push
stos
arpl
push
push
xchg
add
adcb
pop
frstor
pop
pop
aam
sub
pop
jmp
push
int3
cmp
fnstenv
add
lahf
xchg
into
sub
jae
add
roll
add
mov
xor
call
test
aas
jle
sbb
call
xor
push
sbb
insb
adc
push
push
mov
inc
loopne
test
sbb
jo
ret
div
ljmp
cmp
adc
pop
mov
mov
fistl
xor
test
rclb
mov
or
pop
or
and
cwtl
cs
mov
sub
push
xor
mov
xor
ficompl
pop
adc
adc
sub
push
fmul
push
push
pop
icebp
mov
jl
es
inc
add
add
sub
and
ljmp
mov
orb
adc
and
inc
sahf
repnz
sbb
pushf
mov
sub
jle
ret
adc
inc
add
jne
clc
nop
popa
xchg
push
into
int
push
mov
dec
cmp
lock
sub
stos
out
xchg
and
filds
xor
mov
push
sbb
adc
mov
mov
nop
shll
sub
neg
or
ja
push
outsl
jmp
ja
lock
out
es
sahf
cwtl
jne
jp
bound
and
push
imul
sbb
add
jg
dec
adc
in
decl
sub
cmpsb
sub
cwtl
data16
mov
jae
dec
iret
push
rcrl
pop
outsb
cli
test
adc
loop
pushf
nop
or
pop
push
aaa
jae
xchg
pop
loope
sbb
mov
fcomi
push
jo
rcll
fidivrl
push
sub
mov
or
je
inc
xor
xchg
or
mov
and
out
and
mov
rorb
popa
ss
sbb
jb
sbb
and
push
cmpb
jae
flds
add
pop
mov
fildl
call
jbe
fisubrs
fdivs
fldcw
movzwl
data16
mov
data16
fldcw
stos
inc
mov
cmp
es
mov
jbe
and
pop
push
sti
cmp
or
cmp
push
es
mov
push
cmp
incb
mov
jo
mov
sbbl
cmc
cli
add
push
push
inc
loopne
filds
cmpsb
test
and
rol
loop
fnsave
add
add
dec
sarb
sub
push
cmpb
out
push
mov
js
xor
cwtl
call
push
or
int
call
inc
in
adc
call
es
cmp
movsb
jle
or
sbb
lcall
cmpsb
lods
mov
sbb
or
out
push
cmp
or
dec
inc
cmp
add
andl
mov
mov
sbb
sub
push
jns
push
mov
pop
mov
pop
out
fildl
ljmp
sbb
flds
flds
cmp
js
lds
or
fmulp
lret
leave
jmp
mov
fldcw
fmuls
pushf
outsl
jne
push
sbb
sbb
popa
pusha
jg
jae
adc
fdecstp
xor
xor
pop
jge
cmp
jae
pop
movl
mov
int3
addb
or
jae
popa
mov
jne
sbb
push
and
push
or
dec
mov
loope
or
xchg
fadds
into
pusha
shlb
je
jg
jl
cmp
adc
push
xor
adc
mov
dec
shl
add
cld
add
dec
enter
push
in
mov
dec
popa
jno
add
aaa
pop
cmp
sub
jmp
xchg
dec
cmpsl
and
jle
outsb
or
rorl
daa
mov
mov
lea
into
movsb
push
dec
adc
or
and
cmp
push
mov
adc
data16
push
push
and
adc
xor
jo
sahf
rcrl
ret
dec
cmpsl
xor
adc
jo
xor
add
out
pushf
pop
push
call
notl
adc
jl
mov
in
push
aas
add
in
test
mov
xor
inc
adc
mov
pop
xor
sti
out
fwait
push
dec
testl
or
leave
cmp
push
js
js
ret
push
punpckhdq
pop
js
lock
movsl
fldcw
aaa
xchg
xor
or
pop
je
push
dec
mov
mov
mov
or
sbbb
rolb
pop
das
mov
cld
inc
mov
adc
inc
inc
add
push
inc
push
cltd
inc
sbb
sbb
cmp
jg
mov
shlb
lea
loopne
lods
fimull
add
test
jl
or
pop
push
jg
push
inc
dec
pop
scas
dec
insb
jge
cwtl
popf
mov
out
xlat
outsl
add
push
rorl
mov
adc
and
dec
mov
pop
or
sbb
and
arpl
jg
test
ret
jl
subl
cmp
ss
dec
dec
test
mov
aas
xchg
add
jl
cmpl
cmp
xchg
adc
inc
sbb
ds
add
inc
je
test
add
or
mov
pusha
leave
ret
adc
mov
push
dec
jg
lock
call
jmp
cmpl
xchg
in
push
cmp
cmpl
cwtl
adc
sbb
js
inc
push
lock
int
adc
add
call
xor
repnz
clc
mov
mov
mov
les
push
or
int3
test
sub
jmp
gs
add
loopne
es
push
clc
push
push
adc
push
int3
ds
push
in
or
adc
jns
int3
in
adc
adc
adc
sub
mov
sbb
jbe
jo
push
jmp
sbb
push
jecxz
lds
pop
sbb
mov
ret
fnsave
push
push
je
mov
insl
movsl
inc
mov
or
and
and
std
add
jo,pn
mov
add
push
push
inc
clc
call
mov
sbb
mov
iret
mov
out
push
add
fs
sbb
test
jmp
xlat
sub
popa
outsb
push
out
sub
push
add
jle
mov
cmpsl
orl
sbb
jo
adcb
and
add
add
push
call
jne
push
stos
mov
adcb
rol
call
add
repnz
dec
clc
js
adc
call
in
insb
ja
or
in
mov
loope
call
lock
and
aas
pop
popf
dec
or
rcrb
mov
movsb
stos
inc
insb
cld
adc
pusha
sbb
jne
daa
nop
and
ficompl
sbb
inc
daa
push
mov
or
add
pop
das
add
call
in
insl
sub
daa
jp
in
dec
jne
addb
add
lock
ljmp
xor
mov
jo,pn
mov
dec
lock
push
outsl
push
inc
jbe
es
push
cmp
outsl
popf
add
mov
add
push
push
icebp
in
dec
jp
cli
int3
stos
sub
loope
pop
add
cmp
cmp
psubq
or
inc
mov
cltd
addb
jl
subl
jae
mov
lock
xchg
mov
sub
lock
adc
mov
inc
mov
call
mov
jns
add
sbb
std
xor
push
mov
pusha
push
call
mov
xchg
and
out
sbb
hlt
adc
pop
pop
inc
inc
adc
add
cmp
daa
and
adc
mov
or
jmp
adc
sub
push
in
das
xchg
gs
or
inc
or
mov
cwtl
test
nop
sub
jns
ljmp
mov
mov
push
push
mov
dec
mov
ss
pop
push
push
adc
mov
pusha
cmp
inc
lods
pop
lret
jp
test
mov
rcll
ja
push
adc
scas
gs
ret
shrl
or
in
jnp
xchg
fxch
fst
or
push
sarl
xor
and
and
inc
shll
rorb
subl
dec
mov
cmp
das
push
stos
in
scas
dec
lret
inc
bound
mov
cld
sub
mull
imul
push
inc
cmpsl
orb
lods
cmp
aad
sbb
push
and
imul
xchg
push
and
out
push
idivb
mov
mov
mov
pushf
sub
push
daa
lock
imul
push
jne
adc
mov
cmp
je
fwait
pop
cs
push
adc
aam
rol
inc
xchg
jg
movzwl
mov
mov
mov
cmp
rcrb
loop
add
clc
jle
sub
roll
shlb
push
adc
cmpsl
cmc
ror
je
adcb
mov
add
jo
je
popf
xchg
fs
scas
xchg
pusha
jns
loopne
mov
adc
dec
inc
ret
sbb
in
adc
and
and
mov
adc
call
shll
sbb
insb
cmp
push
adc
adc
lcall
inc
push
add
jge
sbb
loopne
push
xor
inc
sbb
pop
fisttps
test
pushl
outsl
in
test
mov
test
data16
pop
push
dec
sbb
push
rorl
push
sbb
pop
cmp
andl
je
add
push
jns
and
orl
mov
in
pop
sub
or
sbb
xor
aaa
dec
ficoms
push
sbbb
adc
nop
or
add
aas
mov
sbb
push
imul
ja
jb
imul
mov
sbb
add
xor
xor
nop
sbb
in
jnp
push
inc
fbld
pop
cmp
out
shr
mov
leave
mov
mov
inc
push
test
loopne
mov
cli
cmp
cmpsl
adc
dec
ret
or
dec
xor
pop
sarb
shlb
cmp
xor
inc
leave
test
rol
or
cmp
dec
cmp
sub
push
pop
push
jo
adc
fwait
cld
rclb
pop
cmp
out
or
mov
dec
cmp
push
jmp
xorb
int3
xchg
rclb
es
popa
test
push
cmp
lds
push
lock
mov
pop
xor
xchg
jl
and
shlb
pop
arpl
subb
shll
hlt
or
add
adc
xor
jmp
mov
mov
movsl
lahf
adc
push
jb
and
into
mov
sbb
or
and
inc
fdivp
xor
jmp
jge
out
icebp
mov
clc
mov
push
and
divl
divl
cli
xchg
jp
cmp
sub
mov
scas
shlb
jne
mov
inc
push
jmp
cmp
fadd
bound
xchg
ljmp
enter
jg
cmp
xor
insl
jne
cs
add
mov
jae
arpl
push
in
push
push
je
inc
or
mov
or
and
jle
cmp
mov
pusha
les
inc
sbb
sub
push
call
call
rcr
xor
popf
pop
cmp
je
mov
push
sbb
pop
mov
mov
pop
loop
push
push
fidivs
sbb
fcoml
cmp
je
push
mov
mov
aam
aam
sub
push
cmp
movb
jmp
pop
js
popf
sbb
jno
add
add
pop
xchg
and
push
jb
push
push
push
sahf
xchg
rorb
call
mov
addr16
sub
xchg
into
push
loopne
aaa
cmp
sbb
sti
clc
shlb
sub
xor
add
subb
mov
cmp
sbb
jnp
jae
sbb
xchg
ret
sbb
out
fwait
sbb
dec
loopne
adc
les
or
lea
inc
xchg
mov
mov
je
pop
sbb
sub
loop
call
ljmp
push
adc
cmp
outsb
addr16
fistl
imul
insl
lea
mov
mov
sbb
sbb
mov
push
mov
mov
aam
lcall
sbb
push
mov
data16
repz
or
sbb
push
pusha
shlb
je
movsl
cltd
xchg
mov
into
iret
iret
call
cmpsb
cwtl
cmp
std
fnsave
or
push
mov
inc
int3
pop
fwait
cmp
xor
negb
ficompl
sub
push
and
idiv
add
aam
adc
mov
dec
xchg
int
adc
and
cmp
sar
mov
push
xor
pop
mov
sub
add
and
sbb
add
and
and
xor
add
and
pusha
push
cmp
dec
jae
and
stos
sbb
add
add
sbb
push
dec
mov
jne
cli
pop
fdivrp
adc
and
testb
jo
add
sub
js
pop
push
xor
jno
add
scas
dec
setle
mov
testl
add
loope
mov
mov
std
xchg
fldcw
push
dec
adc
filds
jmp
mov
and
sbb
jae
push
adcb
xchg
stc
sub
or
xchg
add
cli
push
ja
cmpb
shrb
bound
daa
pop
out
shll
mov
sbb
xchg
jle
leave
lea
test
or
xor
mov
xchg
push
pop
addl
sbb
mov
adc
test
mov
mov
mov
adc
xor
sbbl
pop
fsubl
shll
jo
shlb
in
push
inc
ljmp
add
inc
xchg
lock
std
mov
mov
add
pop
mov
dec
or
adc
pusha
lock
das
lret
notb
lock
or
ret
inc
sbb
scas
rorb
fdivrs
xor
adc
popf
loopne
add
adc
pop
mov
das
or
push
jns
push
incb
repnz
out
es
das
add
iret
cmp
jmp
mov
stc
sarl
inc
xchg
out
or
pop
sub
rolb
ret
roll
mov
xchg
jbe
mov
sbb
pop
mov
pop
dec
jne
stc
lock
lock
je
cmpsl
lods
xchg
loopne
jne
xor
jb
inc
xchg
ja
fwait
sub
insb
push
pop
lahf
sub
sub
dec
sub
rcr
add
push
mov
pop
rolb
addb
outsb
aaa
test
pop
or
adc
lahf
fldcw
mov
lods
into
mov
push
mov
adc
lret
clc
rorl
movsl
cmp
or
fcoms
ljmp
push
and
js
mov
xchg
sbb
bound
adc
insb
je
pusha
xchg
dec
adc
mov
push
push
pop
ret
pushf
es
or
adc
push
inc
adc
pop
sub
or
jmp
pop
fcmovnu
clc
fidivs
pop
push
push
or
pop
add
nop
aas
icebp
test
addb
or
mov
pop
mov
call
call
push
xchg
inc
js
lds
je
push
push
adc
out
sbb
or
add
pushl
hlt
and
ljmp
or
dec
xor
int3
lock
add
sbb
pop
cmovl
push
mov
xchg
and
daa
add
or
mov
gs
je
inc
inc
push
cltd
pop
fs
pusha
fs
xchg
insb
insb
push
inc
loope
lods
lcall
insb
les
arpl
pop
xchg
ret
ja
sub
idiv
mov
ret
in
dec
adc
je
cmp
je
mulb
sbb
sub
mov
add
iret
je
xor
lods
push
lea
push
push
lock
lds
push
sub
inc
pop
xchg
jmp
lea
pop
mov
inc
push
dec
leave
add
rolb
sub
push
add
xchg
pop
lock
mov
adc
lock
mov
lock
push
mov
and
dec
in
pop
leave
push
push
adc
push
into
xlat
and
add
dec
and
mov
int
mov
mov
sbb
add
add
push
std
rorl
mov
lea
fimuls
ret
movsb
sub
cs
adc
test
mov
jle
inc
push
je
push
setl
pop
mov
mov
arpl
inc
sub
add
jno
xor
mov
orl
and
test
ljmp
sbb
adc
addb
jbe
scas
inc
pop
jo
call
sbb
out
sbbl
adc
bound
jns
insb
sbbb
clc
push
push
jge
jne
mov
xchg
jp
addb
mov
xchg
pushw
sahf
cs
or
popa
insb
mov
push
cmp
adc
outsb
sbb
mov
xchg
clc
data16
adc
xchg
lahf
mov
lock
lret
pop
enter
mov
mov
and
rorb
fwait
sbb
add
iret
in
js
push
and
inc
cmp
dec
push
lea
xchg
add
aam
add
lea
lcall
push
or
sbb
mov
add
lods
add
adc
xchg
mov
dec
cmp
xchg
enter
fwait
cli
les
es
pop
sub
mov
int
xor
aad
pop
lock
adc
xor
fs
adc
adc
sub
rcrl
and
sbb
and
mov
faddl
inc
lcall
sbb
add
or
cmp
adc
and
xchg
movsl
aad
ret
add
pop
mov
dec
jge
add
cmp
je
and
incb
inc
mov
es
enter
sbb
jg
out
adc
sbb
scas
adc
add
movsb
ret
pop
mov
sbb
pusha
pop
out
mov
filds
or
mov
addb
and
or
sub
push
and
fadds
cmp
fistl
into
and
fsub
adc
lds
in
cmp
repz
xor
add
stc
loopne
lret
sub
clc
aad
lcall
pop
add
mov
add
cmpsb
cmp
sbb
sarl
adc
sbb
or
adc
cmp
je
push
pop
adc
jmp
mov
cs
repnz
in
mov
push
jmp
loop
mov
cmp
shrb
add
ja
mov
jo
addr16
fistpl
or
cmc
fs
in
mov
mov
xchg
push
pop
dec
pop
mov
movsl
add
idivb
je
mov
bound
push
sbb
out
cmp
es
out
jo
ds
cmpsl
mov
inc
adc
cmp
inc
jne
je
xchg
xor
cli
push
adc
and
fcoml
test
jb
mov
inc
js
enter
lods
daa
test
insl
jnp
dec
test
mov
jecxz
push
mov
mov
jne
dec
sarl
add
in
imul
insb
pusha
and
je
or
cs
or
xchg
incl
in
jnp
cmp
push
outsl
lea
push
push
sbb
or
or
out
mov
jmp
or
adc
pop
fmull
ja
adcl
mov
jne
je
xor
or
bound
dec
test
movsb
adc
shll
mov
loopne
icebp
pop
xchg
jae
or
xchg
add
stos
cmp
or
add
js
aaa
js
push
les
add
mov
cwtl
pop
jge
and
push
adc
sbb
xor
inc
xchg
pop
pop
pop
arpl
push
cltd
ret
xor
pop
pop
loopne
push
cmp
cmp
stos
pop
push
pop
push
xlat
and
push
pop
sub
dec
push
mov
aas
sub
test
test
sub
std
decl
xchg
out
pushf
movsb
insb
cs
data16
sarb
push
push
ljmp
mov
jp
adcb
inc
call
mov
xlat
adc
pushw
push
inc
test
nop
push
mov
gs
mov
test
lsl
xor
popa
add
or
es
inc
push
and
xchg
in
or
mov
mov
add
add
pop
add
push
std
outsw
repz
and
fbld
mov
xchg
in
sub
sub
pop
pop
jb
js
xor
ficompl
rclb
xor
or
pop
xor
xchg
cmp
jo
adc
je
add
cmpl
insl
inc
insb
js
shll
xor
adc
xchg
rorb
and
xor
add
or
adc
test
add
jle
mov
pop
inc
xchg
dec
daa
jo
xor
inc
pop
adc
push
or
lret
inc
outsb
jecxz
push
lds
sbb
inc
jmp
pushl
xchg
mov
pop
mov
iret
call
inc
lea
push
or
cmc
ss
jbe
loope
mov
rcll
cmpsb
sub
or
stos
ret
xor
ret
inc
mov
inc
push
inc
idivb
push
push
jle
es
ljmp
inc
andl
sub
mov
adc
sbb
and
subb
cmpsb
jmp
push
outsb
inc
or
xor
pop
jecxz
fistpll
loop
xor
pop
and
push
xchg
dec
outsb
mov
arpl
push
jnp
adc
xor
inc
add
test
dec
adc
aad
mov
insl
imul
push
test
lret
and
inc
mov
aad
jne
mov
fdivrl
iret
test
ret
movsl
in
push
mov
mov
dec
cmp
or
shufps
popf
lcall
pop
sbb
loopne
adc
add
shr
pop
movl
dec
insb
dec
jno
jecxz
dec
adc
pop
repnz
inc
push
inc
adc
inc
add
add
push
and
fdivs
pop
inc
pop
pusha
mov
sahf
and
addl
pop
pop
xchg
pop
dec
push
fnsave
mul
add
or
xchg
pop
xchg
jp
lock
test
push
je
stc
pop
lea
or
dec
adc
jnp
arpl
jne
sub
push
lods
add
sbb
testb
out
negl
add
or
add
xchg
adc
mov
sar
and
xor
and
xor
mov
or
test
jl
inc
movzbl
mov
pop
xchg
ficoms
lock
push
fsubs
adc
inc
int
mov
lret
mov
jl
fbld
sbb
nop
fldt
cwtl
xor
push
mov
mov
mov
xchg
movswl
add
and
cmp
add
dec
add
in
lahf
aaa
add
xchg
pop
add
sbb
out
push
push
push
test
jne
je
sbb
xchg
push
pop
fs
lret
fists
xor
cmp
pop
xor
add
mov
or
dec
add
cld
mov
fisubs
aaa
movl
xor
push
push
xorl
mov
addr16
mov
or
cmp
add
lcall
sbb
pushf
inc
xlat
adc
lcall
dec
rcl
stos
outsb
imul
fdiv
fmuls
mov
sub
mov
iret
inc
inc
add
add
pop
out
push
adc
into
jg
lods
add
fstl
jo
jmp
xor
movsb
mov
test
push
rorb
push
pop
cmp
sub
mov
sti
sub
ret
mov
insb
mov
cwtl
mov
sub
mov
adc
and
out
jne
sub
icebp
lea
jp
in
cmp
out
or
ljmp
shrl
mov
dec
icebp
add
insl
sub
nop
xchg
cwtl
gs
pusha
push
cmp
mov
push
xorl
lock
cmc
cmpsl
cmp
push
jno
add
xchg
mov
lock
mov
ret
call
test
je
add
xchg
fwait
or
mov
ja
movsb
mov
mov
rolb
push
add
jl
add
xchg
movsb
cmpsb
push
inc
sbb
adcb
sbb
lea
sbb
test
sub
movsl
aam
scas
add
loopne
sub
add
jp
push
mov
in
or
rcll
jge
ljmp
sbb
pop
and
and
xor
cmp
jecxz
mov
in
pslld
je
mov
mov
push
in
push
or
lret
inc
js
jae
stc
add
add
mov
or
cmp
dec
insb
mov
pop
mov
data16
imull
dec
push
push
or
sbb
insb
add
scas
inc
xor
jb
add
cmp
add
push
mov
mov
or
adc
add
xchg
mov
or
pop
cmp
cmp
mov
cs
mov
mov
cld
cmp
push
add
xor
jl
loop
ret
mov
pop
xor
add
or
sbb
xor
add
and
aas
sahf
mov
xchg
xchg
int
jbe
mov
adc
lock
andl
and
push
mov
rorb
cwtl
les
sbb
pop
adc
jno
aas
jbe
insb
shr
inc
add
outsl
adc
xchg
and
and
cmp
les
push
sahf
loope
xchg
sub
pusha
insb
std
mov
jg
mov
decb
adc
dec
inc
sbb
out
xlat
movsb
test
xor
inc
insb
jge
test
clc
add
mov
inc
fisubl
clc
inc
sub
dec
jnp
je
push
adc
pop
dec
cmp
les
sub
rcrb
xlat
out
xchg
jne
add
jns
cmpsl
inc
aam
cs
jnp
shl
mov
out
icebp
xchg
sbb
jle
push
push
cmpsl
add
rorl
mov
push
inc
sbb
push
fadd
push
jnp
sub
rcrb
and
jp
pop
cmp
loope
adc
imul
add
add
movsl
add
insb
insb
daa
adc
jno
jo
sbb
in
subb
aad
jg
call
mov
jns
add
movb
mov
push
xor
xor
je
sbb
ret
cmp
xor
mov
rorl
dec
add
and
movsb
add
xorb
push
aad
adc
push
mov
mov
lea
loopne
pop
mov
loopne
mov
mov
and
or
or
sub
sarl
push
sub
add
push
loopne
push
xchg
ds
addl
jb
dec
out
xor
lret
pusha
aas
lahf
or
mov
hlt
out
jmp
dec
dec
loope
mov
lcall
pop
and
mov
push
pop
or
dec
sub
orb
jmp
pop
xchg
jo
movsb
mov
pop
xchg
xor
mov
add
mov
inc
loop
mov
icebp
mov
inc
push
dec
or
and
int3
les
test
loope
jb
out
pop
and
adc
sbb
push
call
and
add
orb
les
mov
mov
shll
out
or
dec
or
andb
lea
cmc
inc
adc
cmp
insb
cmp
mov
inc
jnp
cmpsl
data16
pop
mov
xchg
xchg
stos
push
adc
shrb
pop
idiv
add
test
pop
push
in
mov
rolb
call
inc
mov
jno
lds
cmpsl
aas
mov
popf
out
cmpb
lods
inc
lcall
jmp
fbstp
sbb
andl
out
xor
jmp
or
xchg
lock
sub
xchg
cwtl
push
and
fcmove
into
mov
add
xchg
nop
lcall
test
jno,pt
neg
je
add
shl
inc
mov
testl
add
lcall
aaa
ds
add
push
push
ret
jne
adc
lret
test
adc
mov
cmpsb
add
adc
jne
imul
inc
ret
fimull
push
mov
pusha
mov
add
jae
push
push
sbb
and
xchg
jl
movl
pop
add
push
push
xorb
nop
movsb
or
add
rcl
sub
dec
in
sbb
jo
inc
lea
cmpsb
dec
cmpsl
mov
cmp
mov
bound
in
das
or
rolb
cmp
es
andl
sub
mov
fnstenv
xor
push
push
popa
and
pop
push
rolb
insl
subl
add
xor
pop
mov
ss
pop
lods
push
repnz
lods
xlat
add
mov
lret
mov
sub
loopne
pop
inc
shlb
adc
fchs
popa
or
lds
sti
sub
xor
rolb
mov
mov
xchg
cmp
fwait
rcr
mov
pop
in
or
push
ret
xchg
push
cmc
add
cmp
inc
in
mov
dec
dec
lret
or
push
xor
xchg
mov
or
scas
jo
inc
push
push
sbb
or
lahf
pop
dec
cmp
mov
cld
pushl
push
push
pcmpeqb
mov
dec
pop
xor
jbe
loopne
add
ret
testb
cmp
xchg
cmp
cmp
xchg
negl
aam
xor
and
sbb
outsl
out
ret
outsl
mov
or
pop
or
sub
sub
sub
xchg
jno
in
enter
scas
cmp
stos
movsl
cmp
and
push
or
cmp
icebp
cmpl
fwait
push
add
jne
lcall
mov
sbbl
adc
adc
push
xor
inc
add
sub
adc
sbb
add
mov
dec
sub
push
inc
les
jb
mov
sbbb
or
push
push
inc
sub
vprotw
add
lods
push
dec
sti
adc
je
shlb
add
or
push
add
sti
or
adc
imul
shl
rclb
loope
shrb
add
and
mov
lea
push
movb
mov
mov
ret
push
jg
loope
mov
dec
je
sub
sub
mov
add
imul
pop
add
push
adc
lods
mov
outsb
mov
xor
daa
or
push
jnp
clc
enter
daa
push
push
pop
jo
leave
mov
add
pop
lds
aaa
dec
and
lea
cltd
mov
or
sbb
mov
in
nop
jns
lcall
or
out
stos
or
adc
push
ljmp
add
gs
cmp
push
ret
push
daa
sbb
rcll
fcoml
add
faddl
or
adc
sti
je
and
sub
sub
and
or
inc
sub
dec
mov
add
loopne
into
inc
cmpsb
dec
sub
cltd
adc
fadds
xchg
push
ss
fs
mov
in
push
sbb
cwtl
add
sub
stos
xor
ljmp
sbb
cmpsb
pop
lret
or
into
adc
mov
cwtl
add
out
cmc
inc
or
adc
mov
inc
sbb
push
cltd
mov
sub
sub
inc
sub
lcall
cmp
call
repz
push
mov
push
push
call
push
fmull
outsl
mov
fnstsw
aas
cs
push
sbb
xchg
mov
sub
in
sahf
and
push
xchg
fcoml
in
xchg
out
inc
pop
and
in
shll
xor
aam
xchg
out
add
aam
and
xor
cltd
rcrb
loopne
jno
push
add
lods
inc
xchg
push
inc
aaa
add
adc
dec
inc
cwtl
idivl
sbb
dec
pop
sub
cmp
jge
or
mov
pop
adc
dec
fisubl
mov
sbb
add
test
mov
pushf
popa
push
icebp
jns
mov
rorb
add
test
sbb
or
adc
add
or
push
roll
cmp
je
test
hlt
xorl
scas
push
dec
pop
adc
fcoml
loop
ret
sub
pop
mov
mov
cs
loope
les
fldt
xor
adc
cwtl
fidivrl
inc
enter
lret
xor
push
jne
xor
adcl
fwait
jmp
mov
push
cmpsb
shll
lock
jno
pop
inc
data16
add
adc
test
fcoms
push
int
in
push
repnz
leave
and
push
push
popf
inc
andl
add
cmp
or
mov
sub
xor
mov
jb
or
or
or
push
mov
add
adc
out
pop
adc
lea
mov
and
add
cmp
pop
call
push
or
push
std
mov
jo
xchg
mov
add
cmpsl
dec
inc
push
dec
js
adcl
je
adc
inc
les
add
sbb
push
or
push
test
cmp
xor
cmp
add
inc
andl
add
or
insb
pop
shl
call
ret
lock
incl
mov
mov
add
mov
out
sbb
stc
xor
xchg
ret
call
mov
add
jmp
into
pop
jmp
pop
ret
pop
cli
shlb
sub
push
into
mov
adc
or
push
xor
repnz
test
dec
rcrb
or
es
sbb
push
sub
cmp
cmp
pop
push
add
cmp
inc
adc
fiaddl
lods
shlb
lock
mov
scas
int3
push
push
mov
push
xchg
pop
add
cmp
test
push
cmpsb
loopne
jg
iret
push
pop
lods
add
jl
mov
sbb
mov
inc
mov
mov
test
inc
dec
loop
xor
or
les
cli
or
jg
dec
rorb
add
jg
push
dec
mov
jne
es
and
add
add
les
repnz
or
or
sbb
push
inc
sbb
mov
mov
sbbl
loope
cli
fistpl
ja
xchg
cmovnp
push
movsb
jns
sbbl
arpl
push
dec
lock
je
push
repz
js
imul
dec
or
fadds
outsb
inc
inc
loope
sarb
sbb
rcrl
push
inc
push
ss
adc
add
in
fiaddl
sbb
mov
mov
jecxz
dec
adc
mov
stos
mov
cmpl
pushf
mov
scas
sub
inc
adc
pop
mov
inc
push
aas
pop
orl
outsb
xor
mov
jnp
xor
sbb
push
aad
aaa
sarb
movb
sbb
stos
sbb
and
push
adc
add
sbb
lcall
out
mov
icebp
inc
jne
add
scas
mov
mov
add
mov
ds
adc
data16
test
pop
sbb
fmuls
or
inc
xor
rclb
add
loopne
push
add
dec
or
mov
mov
test
or
sbb
inc
les
lods
insb
add
hlt
sbb
pop
enter
fisubrs
push
test
or
pop
or
in
aaa
stos
dec
inc
mov
enter
jo
jp
jge
xchg
mov
or
lret
es
add
je
sub
inc
add
test
movsl
cli
call
dec
jmp
or
fsts
adc
xor
cltd
inc
jnp
add
jne
or
mov
xchg
push
cli
inc
mov
sub
popf
fimuls
add
push
sub
mov
subl
dec
dec
cli
add
push
ja
jmp
or
push
cmp
jo
fimull
or
aas
add
inc
inc
pop
add
push
push
out
jge
sbb
inc
dec
adc
jp
push
or
mov
pop
daa
test
and
xchg
sbb
fs
dec
adc
push
leave
insb
cli
fiadds
aaa
jno
lcall
scas
mov
sbb
pop
sbb
insb
inc
pop
dec
and
pushf
push
adc
test
fucomp
and
adc
adc
sbb
adc
push
xor
and
repz
fs
lods
popf
add
call
gs
fucomi
scas
imul
push
int3
lahf
sub
xchg
sbb
push
sbbb
sbb
or
lds
pop
lock
lds
or
je
dec
out
add
xchg
aas
mov
adc
js
add
push
push
enter
push
xchg
and
iret
lret
sbb
mov
push
add
sbb
mov
dec
jle
xchg
movsb
xchg
sub
mov
in
and
and
addr16
pop
mov
mov
sbb
sbb
cli
or
xchg
add
jae
sbb
iret
outsb
push
pop
mov
jo
push
push
sub
in
jle
add
sub
adc
xchg
xchg
stos
xor
or
jb
or
and
cmp
repnz
xor
xor
mov
pop
and
add
xchg
cld
or
in
gs
pop
sub
mov
mov
xchg
sbb
or
inc
push
dec
cmpl
repnz
je
add
push
dec
push
add
dec
xchg
test
stos
loope
jle
mov
jb
cli
dec
jmp
mov
inc
or
or
mov
xor
lahf
icebp
push
mov
rol
fldenv
sarl
mov
roll
sbb
push
pushf
lods
inc
testb
insb
cmp
stos
pop
fadd
dec
xchg
shlb
adc
call
pcmpeqw
mov
push
sub
push
es
add
enter
sub
add
or
and
dec
cmpsb
adc
inc
and
jmp
pushl
sub
mov
scas
and
sbb
sbb
insb
pop
lret
dec
loopne
xchg
test
ds
mov
sar
mov
push
mov
mov
inc
add
sub
sub
adc
push
stc
mov
inc
sbb
dec
mov
xlat
testb
sub
cmp
fmuls
testl
mov
jae
loopne
gs
mov
or
inc
push
xchg
lret
je
out
pop
xor
sbb
loopne
aam
repnz
sbb
loopne
filds
in
push
in
jb
adc
in
push
mov
call
push
andb
fidivl
push
mov
mov
orl
leave
xchg
lods
push
ss
imul
fdivp
or
xorl
add
inc
and
add
cltd
adc
dec
ds
pop
enter
dec
lock
repz
jne
pop
add
or
cmp
pop
adc
pop
mov
daa
or
adc
dec
cmp
cmpsb
pop
or
add
xor
cmp
xchg
mov
jno
push
push
dec
xchg
aaa
add
push
and
or
bound
test
pop
aam
leave
insw
add
or
xchg
je
mov
add
push
test
call
in
push
jmp
cmpsb
and
movsb
aam
mov
aam
mov
cmp
addl
call
mov
imul
mov
add
sub
rcr
add
fidivs
push
pop
add
xor
and
xchg
adc
rcll
xchg
cmpsb
or
dec
ficompl
sbb
cmp
out
inc
rorl
in
sub
inc
add
ficoms
stos
fcomps
add
nop
add
lret
mov
inc
sahf
fstpl
cmp
push
and
cmp
out
pushl
mov
push
mov
in
mov
jae
xchg
inc
aaa
cmove
add
cmp
jne
pop
in
push
mov
cmp
jge
cmp
cmp
pop
pop
mov
fwait
or
and
pop
jmp
push
hlt
push
and
mov
loop
dec
or
ficompl
and
stc
hlt
loopne
jl
repnz
mov
call
add
call
xchg
inc
imul
jg
xchg
fcompl
sbb
or
mov
or
test
decb
faddp
inc
aad
and
data16
mov
andb
xor
jle
ror
std
subl
out
int
andl
lods
loopne
and
sbb
cmpsl
and
add
dec
movsl
and
pop
mov
or
insl
inc
ret
pushf
aas
push
pop
or
pop
or
ss
jnp
push
adc
xor
daa
decl
pop
lret
addr16
inc
inc
or
cmp
sbb
mov
dec
fdivl
jne
pop
dec
add
sti
std
jns
imul
adc
sub
pop
xor
scas
sub
ret
mov
pop
adc
or
lock
jns
add
push
xorb
push
imul
test
mov
push
sbb
imul
out
mov
push
xor
sub
orl
inc
pop
mov
pusha
insl
mov
cmp
into
pusha
jb
popa
int3
imul
jno
pop
mov
lock
test
cmpsb
dec
dec
dec
das
ss
cltd
mov
and
inc
dec
or
push
das
inc
xchg
hlt
mov
loopew
lcall
push
dec
dec
stc
add
test
mov
test
cmp
jbe
mov
cmp
push
sbb
push
pop
adc
jmp
arpl
add
pusha
test
inc
in
lods
jbe
mov
xor
cmp
jbe
xchg
lea
adc
jo
pop
mov
xorb
mov
ret
sbbb
cmpsb
in
mov
xchg
addr16
add
cmp
int
shlb
loope
xor
add
adc
push
pusha
sub
imul
push
inc
push
cmp
jb
subl
mov
scas
xor
inc
jmp
xor
js
cmp
add
ja
push
push
push
fstpl
mov
push
and
xchg
inc
sub
aam
mov
ret
add
xor
test
or
pop
addb
lods
loop
or
or
js
loopne
jmp
cwtl
adc
outsl
sti
daa
jo
jne
andl
push
xchg
jne
fsubrl
sbb
push
mov
or
fs
outsl
out
mov
mov
adc
or
mov
push
jb
jecxz
daa
lea
dec
xchg
ret
dec
lea
mov
dec
int
rorb
inc
or
sub
adc
push
add
jno
or
add
mov
or
add
push
dec
mov
mov
sub
sub
sbb
or
or
fldenv
or
adc
cmc
adc
add
adc
clc
pop
loope
sbb
pop
mov
sub
jno
in
imul
cld
sbb
xor
dec
out
arpl
aam
fs
pop
xor
and
or
mov
cli
or
pop
sub
xor
mov
fs
xor
sti
mov
ret
test
pusha
pusha
shll
cmpsb
dec
fmull
pop
pusha
pushf
hlt
pushf
stos
push
add
pop
mov
or
fcoml
jo
hlt
inc
sub
inc
leave
enter
shlb
cmpl
cmp
cli
push
inc
or
pop
bound
lea
push
sub
push
les
cli
rep
mov
xor
fldt
gs
add
or
mov
push
xor
and
pop
pop
sub
pop
inc
xchg
or
sbb
les
add
imul
ja
dec
lods
loopne
nop
add
loopne
adc
jns
sbb
pushl
sbb
hlt
pop
ret
push
mov
mov
push
lods
xor
mov
or
dec
movsb
xchg
cmc
cmp
dec
and
pusha
data16
mov
test
mov
addl
inc
cmp
punpcklbw
rolb
push
xor
pop
fisttpl
dec
or
adc
cmp
or
mov
fs
adc
push
jmp
cmp
mov
mov
lock
add
je
push
or
and
sbb
rcll
aas
loopne
mov
mov
ljmp
cld
or
jecxz
lcall
clc
loopne
cmp
dec
mov
xchg
mov
inc
inc
and
jbe
sub
lea
in
andb
and
aas
push
cmp
sbb
leave
pop
ret
dec
pop
aaa
lods
in
jb
dec
mov
jmp
xor
idivb
push
pushf
aas
or
fadds
lret
pushf
movlps
or
cwtl
mov
rorb
fcmove
push
cld
push
xor
and
lock
sbb
inc
je
movsl
outsl
test
jne
pop
cltd
test
inc
mov
add
popf
xchg
adc
jl
push
int3
jmp
sbb
shl
adc
je
cltd
in
xor
movb
pop
and
xchg
loop
imul
lds
jl
test
fnsave
cmp
jbe
push
decl
sub
mov
nop
pop
jo
int
mov
adc
call
mov
shr
not
xchg
xor
inc
add
mov
cmc
sbb
das
xchg
jmp
shll
cld
xchg
push
xor
cli
and
mov
lcall
add
stos
push
sub
out
test
das
mov
or
xor
xchg
xchg
xchg
xchg
or
cmp
insb
inc
imul
cmpsb
lret
shll
movl
std
dec
or
xor
sbb
rolb
push
sbb
add
sbb
jge
imul
xor
sarb
add
and
jno
push
sbb
or
inc
mov
push
lods
fimuls
dec
mov
adc
and
leave
add
adc
rclb
call
stc
inc
mov
std
sub
icebp
outsb
movsl
jno
pop
or
es
rcrl
inc
mov
jnp
sub
add
mov
arpl
push
jp
jle
je
or
add
inc
sbb
subl
lcall
loopne
xchg
iret
fisttpll
popa
inc
lcall
push
out
iret
sbb
push
adc
mov
or
or
je
cmp
or
cmp
cmp
sbb
outsl
push
sub
sub
add
loopne
xor
xor
adc
loope
xor
mov
and
push
mov
and
pop
cmp
ret
sub
pusha
xchg
gs
push
sub
rep
rcll
les
cmpsb
inc
xor
or
rcr
int
or
sbb
cmp
jae
idivl
mov
lock
add
sbb
call
arpl
mov
jnp
and
jne
push
push
push
cmp
in
sub
les
sbb
dec
scas
mov
dec
jbe
or
adc
data16
add
roll
sub
lret
xchg
loop
jge
sbb
or
add
sbb
sbb
shll
testb
jbe
sbb
addb
xchg
lock
stc
jl
xchg
push
and
add
push
sub
xor
xor
or
adc
andl
test
mov
sbb
add
pop
shl
push
dec
mov
mov
pop
rolb
mov
mov
cmp
sete
push
pusha
fwait
loopne
mov
jmp
mov
adc
sarl
shl
mov
sub
loopne
xchg
inc
mov
cmpl
enter
add
inc
cmp
mov
inc
mov
push
cld
clc
pop
js
cmp
xor
add
lret
lret
add
jnp
push
adc
mov
push
push
ja
xchg
push
mov
sti
push
or
or
or
push
sbb
outsb
inc
or
mov
mov
push
loope
incb
sahf
push
mov
dec
mov
and
dec
in
ss
add
mov
jo
push
cmp
jno
mov
push
mov
addl
push
jb
bound
sbb
inc
adc
arpl
and
add
add
adc
popa
bound
cwtl
popa
xor
cmp
sti
dec
or
and
sarb
dec
jne
push
loopne
mov
add
cli
bound
loopne
push
push
inc
sbb
and
mov
xchg
xchg
push
jno
dec
lahf
movsl
push
push
xchg
inc
mov
xor
and
je
mov
out
push
es
rcrl
cltd
cmp
jl
orb
gs
orb
sub
push
cmp
sub
pop
xchg
pop
subb
stos
push
sbb
pop
sbb
or
andb
inc
and
dec
jns
ret
pop
add
mov
into
call
aad
pop
pop
or
sub
adc
cmp
push
addl
movb
dec
dec
mov
adc
int3
adc
movsb
or
orl
inc
xchg
es
add
push
gs
cmpsb
das
pusha
aam
jno
fisubl
inc
push
sbb
scas
jle
jle
inc
stos
add
jle
and
in
pop
pushf
push
cmp
add
cmc
test
push
adc
sub
sbb
push
pop
cmp
push
call
outsl
push
cmp
test
cli
add
lock
add
cmp
je
les
cmp
mov
adc
push
outsb
sub
sar
cmp
jbe
or
add
shlb
jo
call
inc
popf
pusha
in
adc
sub
jecxz
inc
mov
pushf
faddl
jp
leave
push
repz
mov
add
aaa
je
dec
pop
inc
pusha
xchg
je
icebp
pop
cmp
add
out
add
sti
orb
lea
mov
fimuls
stc
imul
pop
pop
mov
push
movsl
push
sbb
pop
cmpl
js
mov
jl
pop
in
mov
add
lea
lock
mov
or
push
sbb
inc
pop
inc
or
push
ds
sbb
adc
push
xor
aas
jno
sub
pop
iret
pop
pop
xor
mov
loopne
rcrl
dec
imul
pusha
add
call
adc
mov
mov
pushf
push
shlb
or
and
testb
push
sbb
enter
mov
ss
arpl
dec
add
ss
dec
cmc
jne
sub
lea
jp
cmp
mov
std
push
mov
aad
jae
jb
pushl
jle
fdivrl
push
pop
jmp
call
clc
jae
adc
test
push
add
and
pusha
xor
inc
adc
addr16
or
dec
push
inc
mov
jb
std
and
cmp
push
pop
cltd
sub
inc
lcall
pand
lods
mov
repnz
daa
je
add
cs
loopne
pop
out
add
pop
pop
mov
outsb
mov
inc
jmp
pop
lock
pop
xor
jmp
mov
inc
sub
sub
out
stos
jns
xchg
je
or
inc
and
push
movsl
adc
and
jle
jno
sbb
dec
cmpsb
scas
mov
jb
stos
movsb
mov
cli
int
adc
adc
dec
push
leave
test
push
sbb
xor
andl
out
mov
dec
stc
adc
daa
or
nop
arpl
cmp
nop
lret
or
and
and
fidivs
adc
push
jb
or
dec
or
addb
and
push
or
mov
sub
fldt
je
xchg
das
dec
or
pop
dec
lahf
sbb
ss
inc
pop
adc
push
cmp
and
adc
repnz
ret
or
mov
lret
clc
add
or
push
pushw
outsb
inc
pop
js
add
jne
xor
enter
xor
add
cwtl
in
mov
pop
pop
pop
and
fwait
bound
cmp
or
dec
enter
add
ds
movsl
je
cmp
cwtl
or
mov
ss
jns
push
ret
jnp
push
jle
pop
mov
inc
aas
and
or
in
add
sbb
xor
in
add
nop
add
nop
and
add
test
lods
add
nop
add
fmul
add
nop
sub
or
jb
add
cs
pusha
jg
pop
or
jmp
push
pop
cmp
pop
push
add
and
les
aas
pop
xor
or
xor
mov
mov
mov
xchg
scas
xor
lock
jl
sarb
pop
dec
push
cld
or
fbld
or
pusha
push
push
push
add
movsl
jnp
out
and
adc
cwtl
jge
inc
xor
adc
inc
or
inc
cmp
cld
inc
inc
add
or
scas
xchg
movl
leave
jno
add
les
andb
ret
or
add
adc
and
dec
pusha
cmp
adc
adc
jmp
dec
mov
ja
ja
ja
lret
rcl
inc
mov
pop
pop
js,pt
andl
ja
mov
sbb
mov
ret
xor
pusha
mov
in
imul
push
rclb
in
in
xor
push
and
sbb
test
push
orl
inc
adc
push
in
jbe
or
xorb
int3
pop
push
cwtl
sbb
in
into
js
ds
pop
adc
mov
cmp
fsubrl
fstps
fmull
sub
xchg
fnstenv
std
lock
fbstp
scas
fcomps
jg
add
sub
clc
andb
xor
jne
push
or
fbstp
mov
xor
mov
lock
adc
aad
mulb
xchg
in
push
pop
out
je
mov
stos
lock
push
or
dec
pusha
es
movsl
sahf
pop
sub
sbb
adc
das
dec
in
pop
clc
push
push
or
sbb
jae
jne
or
adc
sbb
sahf
out
call
dec
push
jo
test
in
inc
lock
arpl
cmp
je
mov
dec
mov
clc
and
lock
sub
loop
insb
js
jg
or
mov
push
cmpb
jae,pn
push
or
int3
mov
or
xor
cmp
add
lds
add
sbb
cmc
jno
adc
lock
sbb
push
daa
push
sbb
add
inc
movsl
lock
pop
mov
jo
sbb
push
and
cmp
jg
insl
rol
mov
cmp
push
and
out
aam
andb
stos
insl
loop
xchg
stos
push
push
in
sbb
movl
cmp
leave
insl
in
call
out
or
mov
mov
sub
jnp
sub
pop
xchg
xchg
shlb
xor
xchg
dec
or
push
lea
add
loope
dec
mov
lea
mov
out
add
repz
add
pop
cltd
or
pop
loopne
test
push
xchg
fcoml
or
push
mov
pop
or
or
ljmp
fcompl
pushf
or
adc
or
xchg
test
mov
movsl
add
sbbb
adc
lock
jmp
inc
dec
fwait
inc
fadd
dec
repnz
stc
pop
hlt
xor
out
mov
sub
nopl
sub
cltd
pop
mov
mov
add
add
clc
xchg
cmp
jmp
push
mov
clc
xor
and
or
or
adc
fisttpll
dec
gs
mov
pop
mov
repnz
xor
lahf
cltd
stos
and
lock
push
xchg
cmp
gs
ss
roll
daa
push
aaa
and
or
cmp
xor
mov
lock
lock
inc
xrelease
in
into
je
lea
push
xlat
repz
lock
in
cli
idiv
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
cmp
xlat
add
int
lods
mov
inc
pop
outsb
jg
mov
mov
pop
and
mov
jl
je,pn
cmp
je
sbb
mov
jne
pop
adcb
lcall
iret
jae
cs
sub
pop
or
mov
mov
jbe
testl
push
outsl
inc
inc
rol
adc
into
js
sub
pop
pop
and
mov
jl
jl
imul
jmp
add
decl
pop
lock
fsubs
mov
fildll
aaa
and
iret
cmp
jne
movl
hlt
inc
mov
and
adc
push
jle
jmp
or
cmpsb
push
sub
sub
adc
sub
lock
jge
lea
into
mov
mov
test
inc
into
push
jne
inc
or
mov
andl
xchg
adc
sbb
mov
cli
ja
jbe
sub
cmp
xor
dec
sbb
xchg
mov
es
incl
mov
or
jle,pn
cmp
add
sub
push
pop
scas
call
fisttpl
addb
or
cmpsl
push
enter
lahf
jl
cmp
ds
jo
pop
cmpl
push
sbb
xchg
jle
dec
push
aad
leave
fadds
cmp
or
or
push
inc
test
test
icebp
loopne
inc
call
push
jb
sub
jge
je
inc
sub
sbb
ret
outsb
dec
loopne
sub
lar
popa
cmpsl
aad
inc
xor
das
test
xchg
xchg
sbb
clc
adc
arpl
or
mov
cmp
imul
pop
pop
pusha
testl
cmp
jp
mov
mov
ud2
adc
fmull
mov
mov
pop
mov
add
imul
xchg
arpl
sub
dec
je
adc
roll
jne
push
mov
cld
out
xor
sub
inc
push
jns
jne
xor
or
scas
push
addl
dec
cmpl
aaa
cmpsb
nop
pop
insl
je
fsts
cli
je
sub
in
or
pop
or
loop
rclb
pop
and
ret
addb
inc
inc
jle
add
inc
and
push
dec
add
cmp
jo
and
inc
mov
jno
push
sbb
std
cmp
sub
popa
and
xor
add
sub
jne
mov
add
lock
jmp
push
por
sub
inc
push
movsb
and
add
cmpsb
sbb
sar
in
pop
xchg
sub
jb
loope
pusha
xor
mov
popa
icebp
mov
dec
pop
fucomi
jae
sbb
lahf
cmpsb
push
test
sub
pop
pop
icebp
ss
inc
mov
bound
xchg
push
jae
cwtl
dec
stos
jnp
jmp
into
test
arpl
jmp
sub
adc
mov
or
ljmp
sbb
loopne
dec
pop
xchg
push
mov
or
sti
test
xchg
mov
fwait
movb
shll
or
out
pop
lret
or
in
xor
inc
mov
and
sbb
loop
adc
fists
mov
test
push
test
or
je
cmp
rolb
adc
jg
pop
push
lods
cmp
rorb
inc
aas
cli
add
rol
xchg
lods
inc
mov
xor
inc
add
xor
pusha
cmpsb
mov
je
pop
sti
and
add
and
push
test
push
jne
in
or
sbb
or
push
inc
repnz
mov
and
mov
jae
pop
je
fwait
push
and
adc
clc
or
fs
inc
insl
inc
xchg
add
lods
cmp
add
mov
dec
mov
xchg
and
dec
pop
jg
mov
cmp
push
imul
push
mov
loopne
pop
cltd
inc
fsubrl
sub
rcr
xchg
js
mov
std
mov
xchg
xor
fisubrs
cmp
sub
adc
lds
int3
jbe
fdivrs
mov
add
mov
xchg
adc
mov
cmpb
stos
sbb
fildll
pop
or
jle
enter
sub
repz
lock
pop
push
or
push
push
sbbb
sub
sti
loop
ret
in
pop
das
inc
hlt
pop
xchg
xor
adc
mov
jg
ret
jl
out
notl
push
hlt
jg
mov
sub
push
nop
adc
cmpsb
jo
jmp
jmp
daa
mov
ret
orps
push
mov
xor
xor
push
cmc
sbb
mov
inc
push
dec
sbb
sub
lea
mov
addl
pop
mov
insb
roll
sti
cmpsl
mull
push
mov
roll
sub
dec
test
cmp
mov
mov
outsl
push
pop
sub
dec
adc
shrl
pusha
stos
outsb
cmp
push
mov
add
or
jns
jb
addb
movsb
or
mov
cs
adc
subb
add
or
and
push
das
loopne
enter
aaa
es
inc
mov
sbb
pop
mov
pop
in
push
push
adc
jne
fisttpll
fdivrs
lods
xlat
cld
add
jl
xchg
mov
pop
and
dec
clc
ss
fadd
jmp
add
sub
pop
test
insb
and
icebp
test
mov
sub
outsb
lret
adcb
inc
mov
xlat
jmp
aam
dec
xchg
jp
adc
push
lea
add
push
or
cmp
push
lret
ret
pop
xor
cmc
xchg
push
push
adc
faddl
xchg
sub
shr
jmp
in
int3
lea
add
enter
xchg
cmp
mov
xor
lea
test
jae
dec
popf
lea
call
sub
jae
cmc
xchg
fimuls
cmp
xor
and
loope
xor
jbe
inc
add
xor
popa
data16
js
jb
mov
adc
inc
pushf
pop
jle
adc
push
dec
and
push
shlb
out
sub
fcomp
add
repz
push
fldl
pop
adcb
jge
push
fstpl
dec
cld
ss
pop
iret
outsl
pop
mov
jne
adc
adc
jne
push
repz
cmp
divb
or
jne
or
add
repz
jne
or
jecxz
shrl
out
add
pop
andl
push
inc
pop
in
loop
cld
rcrb
addb
push
pop
es
xchg
mov
and
syscall
inc
ds
mov
loope
das
mov
or
adc
dec
fstp
pop
jecxz
loop
jbe
or
movsl
movsl
lea
movsl
mov
fnstenv
adc
stos
inc
cmp
add
mov
jae
mov
push
js
inc
and
mov
and
add
or
jo
inc
frstor
ret
ret
jne
cmp
inc
in
mov
loop
or
fimuls
fstpt
pminub
push
pop
add
outsl
das
and
mov
and
adc
push
test
ja
setbe
or
or
inc
les
push
adc
push
popf
std
and
jo
mov
movsb
push
jbe
xchg
dec
addl
sub
daa
jns
lcall
lock
lahf
aad
out
push
std
push
mov
fs
syscall
push
cwtl
cmp
cmp
push
xchg
das
add
imul
jns
jo
outsb
push
pusha
or
dec
sahf
sub
test
dec
popa
xchg
ficoml
cwtl
hlt
push
adc
mov
lods
aaa
pop
xor
push
push
push
pop
fisttpl
sbb
pop
mov
add
mov
mov
sub
or
add
fs
inc
add
xor
movsb
mov
add
or
mov
sub
fldenv
mov
push
loope
pusha
mov
push
fisubs
add
inc
lods
jne
xchg
ficoml
mov
jmp
xor
add
insb
inc
push
jns
add
mov
leave
push
adc
enter
or
jo
ja
fstpl
or
rolb
jb
popa
sub
xor
cltd
fmuls
mov
mov
xchg
inc
jo
imul
jbe
or
fcmovu
and
sbb
imul
adc
popf
nop
or
add
in
popf
sub
push
shlb
daa
daa
daa
int3
enter
daa
daa
daa
mov
sbb
daa
lods
test
or
jge
xchg
mov
push
aas
xchg
cmp
inc
loopne
or
adc
or
lahf
push
mov
test
mov
imul
push
fisubrs
add
fs
sbb
dec
dec
aas
ret
idivl
mov
or
cmp
jle
adc
add
pop
xor
lods
mov
orb
test
lea
push
adc
add
sti
jle
mov
mov
nop
subl
push
add
add
nop
data16
mov
jbe
leave
jp
lock
pop
sbb
hlt
call
mov
out
sbb
into
fistpl
and
add
mov
pushf
and
inc
mov
adc
imul
scas
add
sub
lcall
cmp
rorl
sbb
or
mov
or
push
mov
mov
xor
push
call
jmp
push
mov
inc
inc
adc
pop
scas
fisttpll
push
push
mov
or
dec
jb
cmp
pop
inc
outsl
xor
lret
mov
push
stos
push
lcall
hlt
sbb
mov
sub
enter
jg
jno
add
addr16
lea
and
xor
ss
dec
movsl
stos
call
loopne
scas
pop
adc
movlps
adcl
fadds
cmp
shlb
dec
mov
and
jl
negb
arpl
mov
cmp
rcrb
mov
rclb
or
adc
sub
push
inc
lock
loope
mov
xlat
mov
push
int3
and
adc
add
jge,pn
or
xor
popf
add
lcall
cmp
push
sarl
pop
mov
je
and
and
inc
jmp
cli
and
push
dec
jno
sub
inc
jg
dec
adc
clc
cmp
add
into
inc
rolb
and
lods
cmp
and
scas
out
pusha
and
daa
jnp
add
test
mov
jae
imul
push
iret
pop
jp
mov
rcl
sbb
add
sub
dec
int
push
xchg
xor
pop
sbb
or
adc
inc
loopne
xlat
rol
xchg
push
ret
ja
mov
ret
lea
arpl
mov
xchg
mov
adc
adc
add
sbb
mov
int3
cld
outsb
cmp
sbb
popf
ror
scas
push
loopne
test
jns
clc
fldl
ja
mov
sahf
inc
cld
inc
or
dec
rorb
jg
inc
addb
mov
pushf
in
jno
rclb
or
and
fwait
or
lods
outsl
dec
adc
add
add
repnz
fcomi
cmp
sub
push
jle
and
test
cmpsl
xchg
jle
sub
in
stc
mov
imul
push
xor
push
mov
mov
test
adc
and
fucom
lahf
sti
inc
out
dec
push
sbb
pop
xor
xchg
inc
popa
lds
mov
stos
adcb
fimull
add
lahf
les
fmuls
sbbl
andb
mov
lahf
adc
lret
adc
push
in
movsl
xchg
dec
mov
arpl
arpl
or
lahf
add
inc
jge
mov
mov
adc
fndisi(8087
in
ret
in
lock
ds
das
jne
out
scas
rolb
sahf
daa
xor
pop
push
jae
pop
mov
sub
sub
xor
rol
sbb
mov
aaa
push
ret
testb
fsts
and
test
xchg
xor
leave
pop
jp
mov
add
adc
cmp
or
cltd
lods
add
arpl
push
mov
push
out
movsb
fldenv
mov
jo
mov
sbb
pop
movsb
mov
inc
addr16
arpl
push
xor
sub
push
push
sub
ret
addr16
fs
pop
mov
ss
mov
mov
sub
xlat
cmp
leave
add
sbb
or
mov
xor
nop
xchg
jl
jmp
mov
push
pushl
pop
mov
mov
push
jp
adc
mov
jecxz
enter
mov
add
call
loopne
int
mov
ljmp
lahf
add
inc
lods
xor
mov
jl
push
movsb
aaa
int3
xor
ja
add
xchg
ret
divb
sub
dec
or
cmp
inc
add
mov
xor
jge
adc
lock
arpl
add
push
add
mov
aam
add
or
inc
xchg
enter
ret
sbb
es
fmull
outsl
or
push
clc
fisttpll
add
or
imul
gs
xchg
out
fwait
les
in
aam
dec
je
lock
xlat
inc
or
jb
push
inc
test
aam
or
sub
xor
jns
pushf
mov
fcomps
pop
shl
pop
sub
in
xchg
js
gs
xchg
jge
mov
fiadds
ret
into
inc
dec
das
loop
and
pusha
subl
fldt
adc
inc
jecxz
and
mov
jmp
insb
pop
mov
or
pcmpeqw
mov
mov
cmp
xor
test
and
xchg
test
shl
push
xchg
nop
cmp
imul
pop
adc
scas
pop
cmpsb
rolb
push
pop
dec
sbb
mov
jno
push
pop
outsb
jl
insb
dec
out
dec
stos
nop
xchg
mov
mov
dec
test
outsb
jb
cmpb
dec
leave
mov
and
jne
inc
mov
inc
inc
mov
outsl
movsl
mov
and
xchg
movsl
mov
xchg
pop
in
mov
mov
leave
cmp
sub
and
or
pushl
and
sbb
and
jnp
push
xor
xchg
mov
andl
imul
movsl
pop
ljmp
push
insb
ret
clc
loop
sbb
add
in
mov
cmp
cmp
push
movsb
icebp
push
jns
jne
je
outsb
cmp
and
sub
stos
sahf
mov
push
mov
add
add
sub
sub
add
fdivr
nop
push
pushf
enter
sti
push
pushf
pop
sbb
pusha
lods
jns
ret
addl
pop
dec
pop
lock
or
outsl
or
xchg
sub
movsb
or
imul
cmp
mov
sub
mov
cmp
aaa
or
dec
cmp
pop
hlt
mov
jo
xor
mov
dec
mov
mov
daa
aad
cld
and
xor
cmp
adc
scas
sbb
or
pop
or
pop
lret
inc
add
push
xchg
sub
pop
inc
ja
setae
fs
add
and
sub
scas
movsb
or
lock
loope
mov
sub
lcall
test
or
xchg
and
roll
addr16
test
ja
sub
sbb
and
setno
jmp
xchg
loope
stos
sarb
push
in
mov
and
in
pusha
jecxz
sub
cmp
sbb
sbb
and
push
or
cltd
jg
mov
push
test
cs
lock
sti
lret
cmp
push
fimuls
cmc
and
pop
sub
mov
movsb
xchg
insb
xor
cmp
pusha
fsubrs
cld
add
inc
repnz
dec
pop
dec
xor
addb
out
clc
adc
pop
or
add
scas
mov
push
pop
int3
xchg
or
insb
xor
add
and
popa
lahf
cli
into
clc
cmpsb
je
movb
or
adc
or
adc
stc
add
push
pop
dec
xor
out
inc
add
aam
mov
or
outsb
in
xor
ss
xor
movsb
es
imul
pop
xor
sbb
add
push
or
xor
call
movsb
adc
andb
cmc
pushf
insb
nop
sti
adc
aaa
or
mov
push
insb
lock
inc
mov
mov
aad
movsb
push
dec
xlat
dec
inc
movsl
mov
push
pop
push
jns
rolb
repz
push
adc
cmpsb
pop
pop
lods
jge
pop
mov
aaa
push
jp
imul
push
mov
jne
xor
xchg
jnp
jo
pop
adc
adc
mov
push
or
pop
insl
lods
jno
dec
sbbb
cs
add
loopne
jl
push
aaa
lret
push
gs
fstps
ret
adc
fstps
sbb
cltd
imul
sbb
fmull
xchg
and
in
rcrb
and
sub
jge
jns
xchg
pop
xor
pushf
imul
xchg
mov
jno
mov
sar
shl
add
mov
jns
fstp
out
or
mov
orb
pop
jne
adc
mov
test
push
call
sti
pusha
les
lock
inc
xchg
loop
enter
inc
clc
call
xor
cmp
xor
xor
xchg
mov
ret
mov
jb
add
loope
sub
xor
ret
incl
test
pop
xorl
mov
xchg
repz
cmp
jae
roll
add
jmp
dec
and
lea
xchg
ret
sbb
and
insb
fildl
loop
jo
adc
popa
loop
outsl
or
xchg
fldt
bound
push
mov
icebp
decl
imul
movsbl
add
inc
mov
sbb
jg
lock
lcall
push
cmp
je
push
jle
aaa
cmp
mov
pusha
push
push
ss
sub
cmp
jne
push
stos
ret
add
sbb
add
mov
clc
mulb
jmp
fnsave
fstpl
fldl
pop
mov
les
adc
pop
enter
add
xor
xlat
dec
roll
sbb
ret
arpl
shlb
rcl
aas
jge
jecxz
mov
clc
stos
test
clc
push
inc
sbb
fidivrl
jg
push
sbb
xchg
out
and
pop
fsub
pop
fsubrp
jb
bound
fwait
xor
sarl
or
add
out
data16
and
add
mov
pop
and
push
shlb
push
mov
lahf
call
call
out
jge
int3
xor
je
add
and
pop
inc
mov
and
in
outsb
or
pop
push
push
stos
add
sub
clc
adc
mov
aas
mov
loopne
rdmsr
pop
jmp
push
ret
sbb
mov
push
cld
sub
clc
pushf
lods
insb
adc
je
into
jmp
push
sbb
iret
nop
cmpsb
imul
pop
dec
in
rorb
in
imul
xchg
push
enter
adc
cwtl
test
sbb
repnz
fsubl
xchg
push
push
jns
mul
imul
push
sbb
lea
pop
or
and
in
int3
adc
jno
jbe
adc
lods
cmp
sbb
es
lcall
pop
ljmp
push
dec
and
add
fs
jmp
gs
and
sub
adc
adc
jle
pop
int
lahf
push
cltd
cmp
add
rcll
inc
rcll
xor
sbb
and
mov
xor
or
repnz
push
fs
mov
dec
dec
jecxz
fstl
in
insb
mov
fwait
je
xchg
mov
lret
mov
push
addr16
xchg
ss
add
push
nop
fldl
iret
in
frstor
cmp
outsb
cld
mov
sub
je
wbinvd
sahf
iret
xchg
or
adc
cs
pop
mov
daa
cmp
mov
mov
pop
insb
sbb
pop
jns
push
and
and
sbb
or
mov
ror
mov
sbb
rclb
push
jle
or
lcall
mov
jns
cld
aas
xor
or
adc
push
stc
mov
add
push
mov
mov
xor
cs
mov
ja
rorb
pop
push
push
pop
aad
inc
add
addl
test
mov
cltd
test
ds
repz
repz
adc
pop
addr16
jns
out
xchg
mov
jns
iret
fsubrp
decb
stos
sbb
repz
xor
push
arpl
cmp
repz
xchg
mov
iret
rcl
std
out
inc
ret
xchg
ljmp
iret
and
popa
xor
scas
add
stos
and
or
mov
cwtl
push
cmp
mov
push
fs
call
in
sbb
test
adc
inc
lds
mov
sub
or
xchg
vpsubsb
add
sbb
ljmp
xchg
pop
jg,pt
push
push
cltd
dec
ja
pop
push
xchg
pop
jp
inc
femms
lods
popa
cmpsl
prefetchnta
scas
leave
popf
pop
and
mov
sbbb
mov
push
sub
adc
test
xor
loope
push
idivl
sub
rolb
sbb
addb
and
sahf
xchg
sub
in
add
push
pop
or
outsl
fsubl
into
daa
xor
add
ficoms
cwtl
xchg
iret
push
jb
shlb
sahf
out
xchg
inc
and
pop
or
loop
add
jb
dec
push
int3
or
add
inc
lds
adc
subl
and
inc
sbb
filds
insb
loopne
imul
movsb
in
mov
pop
or
or
sbb
fstp
mov
pop
pop
shrl
enter
and
inc
jge
add
iret
xor
or
xor
sub
out
xchg
lret
jo
add
and
sub
mov
loopne
push
popa
push
mov
call
in
add
repz
aad
lods
xchg
repnz
adc
pop
add
xchg
in
test
lcall
mov
mov
cltd
nop
sbb
add
and
popf
out
lock
sbb
mov
imul
xor
aad
add
adc
xchg
outsl
sub
es
add
fidivrs
sbb
push
out
push
cmp
jno
pop
sub
and
in
or
jb
cmp
pop
aam
or
xchg
or
or
aad
inc
jle
xor
mov
xchg
fiadds
jo
lds
mov
add
push
push
push
test
cmp
push
movsl
ret
leave
lret
call
cmp
in
cmpsb
xor
push
in
hlt
leave
xchg
cmp
popa
push
add
and
fcmovb
add
adc
cld
xchg
add
or
cwtl
aad
sbb
fidivs
dec
adc
sbb
in
lret
mov
leave
xchg
adc
lock
mov
xchg
sub
movl
adc
push
and
and
mov
in
pop
in
push
add
inc
and
push
jns
sbbl
mov
dec
push
in
or
xchg
sub
je
addr16
inc
repnz
icebp
pop
pushf
dec
pop
pop
dec
lgdtl
add
add
test
add
fstl
jl
add
arpl
mov
adc
add
sbb
add
jo
icebp
inc
or
outsb
adc
out
or
dec
adc
or
mov
dec
or
dec
mov
xor
add
ret
sub
cmp
test
sbb
adc
jg
jg
shlb
les
and
xor
add
push
fdivrl
add
pop
mov
add
mov
inc
add
sbb
add
mov
je
pop
and
xchg
push
sbb
cs
push
std
inc
ljmp
stos
jae
test
in
sub
insl
and
aad
or
test
inc
add
mov
into
ds
add
or
or
leave
mov
push
and
and
push
movl
lahf
sbb
xchg
xor
ret
mov
xor
roll
push
add
adc
enter
fwait
rorl
push
xor
xor
mov
push
and
in
andb
inc
push
jl
subb
adc
mov
sbb
stos
dec
inc
sahf
and
add
and
dec
sahf
mov
push
add
add
adcb
sub
cmp
cs
lcall
test
or
push
cli
inc
mov
cmp
pop
mov
aaa
or
jecxz
sbb
push
push
dec
adc
dec
jbe
dec
push
pop
cs
pop
push
aas
mov
xor
push
dec
popa
sbb
adc
or
mov
add
add
inc
nop
sbbl
addr16
punpcklwd
addb
cmp
fsubrl
pop
push
xchg
dec
cmp
movsb
std
pop
mov
nop
push
mov
dec
pop
jmp
push
add
cmp
popa
mov
mov
lods
add
fidivrl
push
in
inc
mov
pop
insl
jne
xor
and
cs
inc
and
lods
push
cmpb
add
ss
je
jnp
cld
dec
and
or
in
xchg
dec
and
inc
inc
scas
je
add
or
cmp
dec
nop
jo
xlat
jge
nop
cmp
sbb
sbb
sarb
jle
pop
adc
xchg
add
fdivs
test
cmp
adc
fists
inc
bound
mov
or
je
mov
add
fiaddl
xchg
fs
pusha
int3
fldl
mov
mov
ja
mov
inc
jno
rcrl
shlb
sub
xor
icebp
shlb
xchg
addr16
fstpt
sub
jne
fldl
mov
sub
or
mov
cmpsb
add
push
sbb
push
push
sahf
or
leave
add
repz
jp
add
or
xchg
lret
adc
push
push
enter
test
push
and
cmp
push
push
dec
push
dec
sub
daa
push
cmpb
lret
mov
adc
jmp
adc
pop
mov
movsb
pop
inc
pop
sbb
into
jnp
push
inc
pop
inc
sub
fisubl
pop
mov
push
push
cmp
loopne
ljmp
add
and
lock
sbb
mulps
xlat
je
fwait
dec
data16
inc
and
pop
xchg
fsubl
xchg
or
push
pop
sbb
xchg
rcrb
xchg
jmp
dec
shl
mov
dec
jbe
cmp
gs
sbb
and
sub
std
push
imul
push
xor
imul
mov
inc
cmp
inc
cli
repz
jno
popa
mov
inc
mov
callw
loop
sub
int
call
sub
sub
add
dec
adc
sbb
ljmp
cmp
mov
jg
test
push
jle
outsb
mov
xor
sub
cmp
mov
jl
mov
incl
shr
and
cli
inc
jl
or
sbb
popa
jp
adc
std
pop
imul
shll
pop
mov
push
add
inc
jmp
sarb
xor
mov
push
cltd
pop
idiv
sbbb
fdivp
test
dec
lock
push
movsb
sbbl
fmul
aad
xchg
xchg
clc
and
clc
mov
mov
mov
cmpsl
push
test
out
ret
mov
cs
or
imul
orl
dec
or
lret
shr
dec
inc
push
lock
testl
xchg
into
inc
sahf
in
sbb
mov
mov
iret
cmp
mov
dec
mov
xchg
dec
faddl
cmp
daa
cmp
repnz
jns
stos
sub
notb
mov
and
push
enter
add
jle
lret
jmp
sbb
add
test
test
rolb
out
lea
push
sbb
adc
add
xorl
add
push
push
imul
adc
push
or
sbb
popf
xor
jl
lea
or
push
jl
dec
jae
and
mov
mov
xchg
dec
repz
jp
inc
mov
enter
push
xchg
rcll
push
lods
push
and
imul
dec
pop
pop
push
rorb
adc
div
mov
fnstenv
adc
jle
pop
sub
push
lock
xlat
mov
xchg
jp
jns
popf
jo
push
orb
push
xchg
insl
cs
jns
movsb
sbb
xor
enter
aas
cmp
enter
loop
xchg
xchg
xchg
xlat
push
jl
enter
push
aam
xorb
push
lock
push
sbb
insl
popa
or
mov
sbb
adc
sti
sub
nop
mov
and
push
loopne
mov
ss
jns
imul
in
xchg
cwtl
and
push
leave
enter
aam
shr
fs
xchg
mov
repnz
sbb
inc
loopne
or
jns
and
enter
and
lret
mov
data16
add
in
mov
or
shrb
leave
mov
sub
jns
aaa
stc
andl
adc
inc
leave
int
mov
dec
fisubs
xor
and
xchg
cwtl
dec
nop
dec
jb
leave
pop
mov
repz
leave
adc
es
jo
leave
leave
leave
insl
lods
shld
test
cltd
lcall
ret
add
adc
cli
pop
pop
mov
les
lods
bound
jae
add
fcomps
js
push
or
mov
xor
xchg
and
aaa
push
in
sbb
cld
cmp
cs
xor
loopne
test
mov
xchg
push
push
insl
loopne
enter
push
mov
xor
out
jno
add
fcompl
xor
sets
js
inc
mov
scas
fildl
verw
mov
mov
lret
jbe
and
mov
pop
inc
aas
xchg
mov
call
leave
fsubs
adc
ds
pop
cltd
inc
std
imul
push
sahf
and
enter
pop
mov
jp
pop
cmp
repz
shrb
ja
pop
push
in
pop
mov
xchg
jecxz
shrb
add
shll
and
ds
jmp
xchg
loope
bound
or
movsb
cltd
jno
fsub
push
sti
or
sub
and
xor
sub
inc
xchg
xor
xor
aaa
lcall
add
and
pop
xorl
popa
dec
mov
inc
rcrl
pop
pushf
inc
or
or
ror
mov
ret
dec
sbb
and
and
rcrb
xchg
pusha
xlat
inc
add
sbb
mov
jo
mov
xor
push
loopne
adc
js
cmpsb
xor
xor
movsb
fstl
and
cmp
fadds
sub
ds
add
fiadds
adc
dec
enter
lcall
pop
add
pop
xchg
inc
dec
sbb
jo
mov
cltd
dec
or
inc
pusha
adc
xchg
mov
outsl
adc
pushf
add
cmc
or
dec
and
test
sbb
xor
push
mov
lods
cs
push
sbb
sub
int
jmp
adc
insb
or
push
adc
push
or
mov
mov
cmp
nop
cwtl
adc
sub
js
add
test
and
in
add
mov
push
inc
call
cs
pop
xor
xchg
out
and
and
pop
daa
xorl
push
test
fmuls
cmp
rorb
ja
iret
mov
and
ja
fsubs
sbb
xchg
lods
scas
shlb
push
adcb
fldl
push
leave
sbb
mov
jo
cmp
movsb
and
test
cmpsb
clc
lea
std
decl
les
fisubrs
sbbb
jbe
dec
sub
pop
aam
add
call
cmp
imul
or
add
inc
xchg
andl
jl
and
jl
test
pushf
jmp
mov
adc
or
lret
notl
scas
push
and
adc
gs
adc
cmp
add
sbb
mov
mov
cli
inc
pminub
cmp
loopne
lcall
int3
jl
cmp
cmpsb
sar
or
adc
pop
add
add
sbb
fadds
sub
mov
push
mov
data16
push
les
aam
loopne
ret
pop
xor
xchg
mov
dec
cmc
push
ja
js
test
add
lcall
js
int3
or
adc
fdivs
mov
icebp
pop
adc
xor
aam
pop
pop
cmpl
sub
mov
aad
and
negl
sub
sub
notb
ror
cmc
clc
push
or
xchg
inc
cli
and
pushl
mov
or
fdivs
mov
dec
int3
and
call
fsubrs
sbb
jo
fcoms
iret
pop
ljmp
fcmovne
fsubp
ret
leave
xchg
sbb
lcall
add
push
pusha
cmp
inc
sbb
fwait
xchg
inc
mov
sahf
cmpsl
je
or
mov
dec
jnp
xlat
and
pushf
xchg
fidivl
in
xchg
cmp
ja
clc
sub
lcall
pop
sub
and
inc
cmp
rolb
or
xor
arpl
pop
adc
sub
and
in
push
pop
cltd
loope
add
aam
inc
add
sbb
jne
sub
lahf
or
xor
mov
dec
jne
aas
into
cmp
and
mulb
lock
sub
jbe
add
fldl2t
pop
jmp
xchg
cmp
xchg
lret
adc
lret
rorl
cmp
push
scas
pop
mov
cmp
dec
cmp
sub
in
cmp
scas
pop
mov
es
sbb
push
adc
pop
pop
xor
je
rol
call
and
js
add
jp
cmc
dec
or
pop
leave
lods
jno
mov
adc
inc
sbb
aad
scas
and
sbb
sbb
pop
and
mov
jge
dec
mov
jae
std
xor
movsb
inc
clc
push
inc
pop
cli
sbb
hlt
add
jle
movsb
inc
dec
or
shrb
je
jl
cmp
and
addb
sbb
shlb
inc
push
push
shlb
pop
lea
push
cwtl
lds
push
sub
stc
jne
push
sbb
jne
add
nop
sub
adc
xor
cwtl
and
mov
andb
mov
mov
mov
push
adc
test
movsb
out
add
pop
and
mov
mov
add
pop
inc
outsb
cmc
add
pop
jne
and
out
add
subb
cmp
add
inc
arpl
mov
notb
lock
cmp
stc
call
add
mov
push
test
add
mov
inc
add
scas
dec
inc
lods
sub
ja
inc
cmp
add
imul
mov
aaa
repnz
testl
cmp
or
test
aaa
push
adc
rolb
sbb
outsl
test
push
cmp
add
or
sub
or
cltd
sub
pop
adc
and
push
sbb
sti
in
ds
cmpsl
xor
sarb
nopl
sbb
and
xchg
sub
aam
daa
adc
stos
daa
adc
ja
aam
outsb
push
mov
in
xor
and
xchg
inc
xchg
push
cmpsl
repz
mov
sub
lock
add
cs
adc
mov
add
inc
xor
xor
xchg
enter
lods
or
add
mov
xor
add
loop
push
and
mov
adc
push
push
enter
out
adc
fldl
in
lahf
pop
push
push
inc
push
pop
push
and
leave
test
inc
fsubs
and
pop
add
addb
cld
mov
adc
xor
mov
je
cltd
movsb
pop
add
in
xchg
cli
push
inc
popa
es
rorb
iret
insb
xchg
sbb
mov
adc
xchg
and
or
pop
and
push
das
dec
push
sbb
dec
sbb
rclb
push
gs
or
adc
xchg
mov
or
jmp
ljmp
push
mov
xchg
mov
lret
and
jo
push
sahf
fcompl
mov
decb
add
notl
push
cltd
jb
or
or
sub
mov
pop
sub
xchg
sbb
xor
std
sahf
fistpll
add
push
mov
cli
or
addl
ret
loope
test
push
icebp
push
dec
push
or
andb
mov
jne
in
adc
jae
mov
dec
pop
call
add
neg
and
sysenter
jl
out
and
mov
sti
mov
mov
in
fidivrs
fwait
test
inc
push
xchg
add
jl
cmpl
jbe
adc
pop
pop
js
sahf
sub
sbb
xor
loope
ds
aas
pop
mov
je
dec
push
sbb
gs
leave
jecxz
mov
repnz
insl
imul
cs
lock
ss
mov
xor
xchg
inc
jecxz
push
movsb
cmp
clc
pusha
sub
pop
push
mov
xor
cmp
xchg
xor
movb
aaa
shl
xor
nop
int
push
add
adc
dec
jns
ret
xchg
and
push
mov
mov
push
or
adc
xchg
xchg
sahf
xchg
loopne
pusha
loope
adc
add
mov
add
stc
inc
dec
pop
and
push
push
push
sbb
or
inc
push
popa
sub
xor
inc
adc
dec
into
jmp
mov
jnp
mov
fsub
pop
push
dec
enter
inc
mov
or
addr16
ss
add
add
es
movsl
adcb
fcomps
ret
andl
jb
adc
jne
mov
fnstenv
in
add
cmc
inc
mov
sbb
adc
std
out
cld
or
cmp
lods
xchg
add
mov
fildl
push
add
push
xchg
adc
out
fsubrs
ret
adc
and
sub
fs
das
stc
psubq
sub
fs
pop
nop
push
push
cmp
arpl
stos
bound
push
fdivrs
leave
sub
movsl
int
sbb
aad
test
mov
aaa
ss
xchg
fiaddl
mov
add
inc
xchg
cmpsb
and
pop
cmpsl
jns
leave
push
mov
mov
push
cs
adc
cmpsl
orl
jge
or
mov
add
mov
pop
dec
movsb
add
dec
pop
out
negb
sub
or
jmp
push
or
lods
push
test
ljmp
rcll
pop
sbb
cmp
jae
pop
add
orl
pcmpeqw
push
int3
shll
imul
cmpsl
adc
mov
pop
lcall
scas
push
cmp
shrb
mov
movsb
mov
movsl
or
test
add
aas
mov
ljmp
add
add
stos
es
test
and
adc
iret
push
mov
or
mov
mov
push
sbb
mov
and
loop
add
in
fnstcw
pop
xlat
sbb
and
in
xchg
dec
addr16
sbb
add
jbe
mov
testb
pop
int
xlat
test
test
mov
xchg
jne
sub
addb
rorl
or
lods
lds
or
push
out
pop
and
scas
adc
cmp
and
pushf
je
xor
dec
insl
add
and
sub
test
repnz
sub
pop
mov
fisttpll
adc
movsl
enter
loopne
mov
jmp
shl
mov
insb
adc
mov
pushf
adc
mov
add
mov
pop
add
mov
stos
ret
and
stc
psrlw
popa
or
push
aam
or
xchg
dec
ja
in
std
sub
jo
addr16
pop
xlat
loop
cwtl
sbb
push
jns
push
dec
sbb
es
rcll
ret
or
sbb
test
xchg
std
mov
jo
add
sbb
mov
sbb
aaa
scas
push
inc
sbb
cwtl
sbb
popf
pop
xor
push
or
sbb
pop
add
jne
jae
push
or
insb
pop
test
or
ss
inc
mov
scas
mov
insb
shll
push
jp
xor
arpl
mov
imul
pop
jns
pop
das
addr16
loopne
and
push
adc
adcl
fwait
ja
iret
lret
pop
push
shll
push
adc
out
sub
jge
cmp
sbb
imul
sbb
outsb
or
out
xchg
test
jmp
and
std
adc
loopne
push
mov
push
and
shrb
xor
sub
fsubrl
sbb
xor
movsl
and
and
orl
dec
test
push
ljmp
mov
or
jp
sub
cs
and
shll
add
jo
fists
movsb
xor
jl
es
sub
lds
sub
adc
js
sbb
rcrl
ds
nopl
sub
add
fwait
daa
dec
in
add
hlt
int3
add
sbb
sbb
xlat
in
lods
pop
idiv
inc
inc
push
push
or
fisubrl
pop
add
or
clc
mov
xchg
test
andl
sti
push
jo
or
and
sub
test
xchg
pop
mov
scas
repnz
add
pop
cld
mov
loop
add
arpl
std
lret
xchg
jmp
pop
cmp
and
inc
or
mov
enter
clc
inc
mov
js
test
and
add
mov
mov
jge
inc
insl
sub
loopne
push
imul
sbb
cmp
push
adc
xorb
sbb
pop
fisttpl
inc
add
or
sbb
pop
xchg
ret
pop
lahf
push
pop
add
jecxz
sbb
adc
push
sub
sbb
or
aad
push
rol
adc
ljmp
shlb
dec
in
add
push
xchg
jne
andl
push
insb
inc
push
sbbl
inc
into
add
xor
jns
test
pusha
test
aaa
mov
pop
pop
imul
pop
sub
mov
add
pop
or
lahf
xor
and
sub
adc
adc
clc
and
lcall
or
cld
adc
test
loopne
sub
add
das
adc
sub
les
out
push
shlb
dec
cld
imul
mov
icebp
mov
add
jae
add
xorb
shlb
dec
add
out
mov
incl
jmp
nop
push
xor
mov
and
dec
or
adc
jbe
test
inc
cmp
jg
mov
pop
pop
push
xlat
mov
test
jne
movsb
rolb
push
or
repnz
or
mov
mov
jp
nop
push
mov
scas
pop
inc
add
and
mov
push
cmp
cmp
movsb
mov
int3
push
lahf
out
pop
gs
push
push
mov
clc
ds
inc
and
int3
xorb
sbb
cmp
je
jno
cmp
ja
mov
jnp
adc
sbb
add
rcrl
incb
add
xchg
mov
adc
dec
aas
hlt
dec
adc
loope
mov
dec
pop
jl
lods
ja
dec
ret
xchg
and
jge
cli
sub
mov
cld
jmp
adc
cmp
in
fcmovbe
pushw
sti
stos
vmread
loopne
insb
mov
dec
pop
cmpl
xor
push
popa
xchg
lock
add
cmp
hlt
mov
in
cmp
or
int
cmpsl
xchg
cmp
divl
cmp
xor
mov
leave
ret
dec
jl
xchg
push
jne
mov
or
pop
xchg
test
push
or
inc
dec
xor
adc
out
loopne
push
dec
jns
in
and
xor
or
jnp
mov
push
or
push
sub
xchg
pusha
or
jle
cmpsl
pop
cmp
cmp
or
cmp
dec
inc
adc
jo
test
add
lods
arpl
sbb
xchg
lea
xor
inc
test
xchg
insb
jae
hlt
rolb
es
add
fildl
or
xchg
dec
cld
push
js
jb
hlt
loope
sbb
scas
mov
flds
fs
repz
and
fs
pop
pushf
insb
inc
test
mov
lds
insb
decb
outsl
adc
rol
inc
mov
adc
xor
testl
jl
popf
xchg
and
lods
inc
sbb
jmp
movsb
inc
dec
pop
call
fisttpl
inc
pop
lods
add
push
dec
mov
mov
dec
mov
jmp
repz
pop
in
and
xor
push
sahf
push
push
hlt
dec
pop
and
rsqrtps
pop
enter
add
popa
xchg
dec
test
and
sub
int3
movsl
xor
or
dec
cmc
sbb
shr
rolb
test
popf
xchg
cmp
test
sbb
mov
enter
jge
insb
lea
popa
imul
int3
sub
push
xchg
adc
inc
jecxz
hlt
add
rorb
pop
pop
js
je
pop
shll
cmp
jb
add
sbb
lods
inc
stc
cmp
fstpt
ficoms
mov
and
and
sub
add
test
or
adc
jmp
les
loopne
ljmp
loopne
pop
adc
xor
popa
sbb
mov
pop
rcll
mov
mov
std
ret
push
ja
or
fs
rcll
jne
xorb
inc
cmp
adc
out
stos
je
inc
inc
adc
add
cs
jo
loopne
add
inc
mov
xor
pop
cltd
xchg
add
les
test
popw
jnp
xchg
mov
inc
test
or
or
add
xchg
mov
clc
add
push
pop
out
mov
adc
mov
add
cmp
in
or
xor
mov
add
jo
lds
test
invd
sub
and
dec
inc
inc
lahf
loopne
in
sub
aad
or
sahf
lods
jnp
inc
out
or
sub
popf
cwtl
nop
loopne
sub
add
mov
inc
xor
dec
xchg
or
insl
mov
adc
call
push
push
das
leave
ljmp
sbb
xor
jmp
push
adc
movb
cmp
jge
adc
aaa
xor
push
push
jnp
nop
xor
dec
adc
or
test
mov
mov
adc
mov
je
sti
dec
sbb
pop
fs
push
adc
leave
call
sub
pusha
xor
jb
sub
adc
data16
aad
imull
xor
inc
pushl
fistl
adc
repnz
repz
and
jle
inc
sub
rol
sub
dec
movsl
sbb
mov
fsubs
jno
fadds
inc
hlt
jl
or
xchg
mov
push
inc
jmp
adc
pop
jge
shll
lds
jbe
push
xchg
addr16
push
aas
add
sbb
lock
dec
adc
xchg
xchg
and
and
jge
sub
mov
push
mov
and
mov
sub
test
dec
dec
pop
mov
cmpsl
xor
mov
cmp
rorl
add
dec
cwtl
or
sbb
or
jle
push
inc
or
mov
arpl
xor
mov
arpl
xchg
jae
inc
inc
flds
jmp
sbb
pop
xchg
lret
xor
out
in
in
push
test
jmp
jb
dec
out
loopne
fadd
imul
xor
xchg
fcoml
mov
cmp
rorl
push
adc
sbb
pop
shrb
adc
pop
filds
xor
adcl
dec
hlt
push
loop
mov
andl
push
out
mov
mov
adc
xchg
pop
xchg
adc
or
stc
iret
xchg
mov
lea
mov
xor
pop
dec
cmp
pop
jmp
mov
or
mov
rcrb
add
gs
cld
or
mov
or
dec
test
add
enter
iret
jbe
mov
mov
lret
lea
mov
sbb
add
xor
push
sarb
push
ret
mov
sub
push
divl
rcll
inc
dec
loopne
or
pop
push
xor
jne
or
cmp
push
addl
aad
add
push
decl
into
mov
mov
pop
ljmp
jnp
jl
push
jle
scas
jmp
cmovnp
and
out
lds
ss
movsb
sbb
insl
or
push
cmp
mov
mov
mov
stos
mov
add
cmpsl
cli
jbe
fbld
xchg
int3
lahf
pop
jnp
rcrl
pop
cmp
dec
sub
add
pop
jmp
mov
roll
popl
and
push
push
xor
jnp
lcall
inc
dec
and
std
lret
call
movl
in
cmp
int3
adc
xorb
icebp
je
jl
pop
jg
call
xchg
dec
or
xchg
out
lea
add
or
and
orb
adc
add
push
test
sub
or
add
jge
push
sub
or
mov
dec
clc
inc
push
and
push
dec
adc
andl
cwtl
les
pushf
cmp
inc
lahf
mov
or
sbb
adc
dec
lods
or
mov
xchg
inc
das
ret
leave
sbb
inc
dec
or
adc
test
mov
clc
cld
fildl
mov
jmp
xor
sbb
xchg
xchg
push
mov
adc
add
push
dec
inc
clc
push
cmpsl
and
jle
cmp
icebp
adc
mov
sub
and
mov
icebp
add
stos
lock
xor
and
dec
hlt
jne
push
nop
inc
ja
push
add
pushl
mov
sbb
add
lea
jo
adc
and
scas
xorb
out
xor
sarb
cmp
xor
or
inc
jo
inc
and
sbb
sub
je
push
sbb
test
jo
mov
clc
in
add
cmpsl
lcall
pushf
lock
loope
test
mov
daa
jmp
adc
pop
and
and
add
mull
push
and
dec
shll
mov
movl
cmpsl
adc
mov
jbe
out
xor
and
push
cltd
aam
andl
push
rorb
shl
in
add
add
xchg
movsl
cmp
xchg
adc
adc
ret
ss
out
fisubrs
mov
dec
push
adc
in
or
dec
sbb
and
fildl
jg
add
testl
mov
xchg
jmp
and
inc
lea
adc
roll
lock
js
jns
lret
shrb
jnp
jge
inc
pop
sbb
jmp
jg
out
std
push
je
gs
outsl
stos
or
shrb
add
sbb
dec
xor
movsb
roll
ljmp
pop
inc
movsb
ja
hlt
add
adc
sbb
push
sbb
in
inc
adc
adc
mov
jmp
add
call
mov
dec
mov
dec
mov
jmp
push
in
ss
mov
and
insb
xchg
sub
test
xchg
hlt
push
flds
sahf
movsb
add
jle
push
adc
sub
and
xor
mov
xor
and
jo
test
lea
inc
adc
sub
jno
add
add
pushf
sbb
dec
add
lea
fcomps
rcrb
mov
subps
adc
mov
dec
movl
std
push
pop
and
mov
popf
cmp
fadds
std
addr16
xchg
pusha
mov
jp
js
adc
push
ficoms
je
or
adc
rol
mov
cmp
xchg
lds
sbb
xor
cli
lea
xchg
fistpll
or
popa
test
push
jmp
push
inc
mov
fsubp
jmp
mov
and
add
or
in
shlb
mov
call
dec
push
push
and
jmp
sub
js
mov
xlat
mov
mov
cmpl
sub
ja
dec
mov
dec
pusha
es
xorb
add
jecxz
or
aas
cmp
ret
imul
es
xchg
outsb
xchg
push
adc
pop
clc
jne
loopne
or
push
add
jp
loope
jmp
cmpl
jge
out
aaa
xor
xchg
aaa
sub
and
mov
mov
daa
cmpsb
push
test
sub
sub
jnp
pop
mov
sub
repz
cmp
adcb
lock
xor
mov
pushf
rcrb
sbbl
fisubs
cmp
mov
popf
ja
inc
mov
push
adc
dec
mulb
inc
cltd
repnz
lods
inc
mov
sarb
pop
sbb
lock
xlat
push
cld
add
imul
cmp
or
pop
enter
xchg
fidivrl
sub
bound
mov
lds
mov
icebp
inc
test
adcb
or
jo
add
ljmp
dec
mov
test
or
pop
push
test
popf
mov
or
mov
pushf
mov
test
mov
out
mov
insb
sti
ljmp
pushl
xchg
inc
in
cmp
je
orb
adc
test
jnp
sbb
or
mov
mov
imul
xor
jp
pop
aas
cmp
push
push
jp
jns
rolb
push
mov
sub
push
jge
enter
lods
test
xchg
int3
mov
std
pop
cs
push
test
fisubs
lret
sahf
loop
fisubrl
test
mov
es
pop
into
js
xchg
enter
jge
and
js
push
or
mov
fdivrs
push
aad
fmul
jb
fcomip
pop
dec
add
sbb
inc
out
xor
cli
mov
adc
adc
mov
add
jl
cmp
or
mov
pop
cmp
sub
or
push
cltd
jecxz
sbb
push
fucomp
jns
or
std
mov
lret
sub
cld
dec
loopne
or
shrb
jne
or
and
sub
xchg
dec
mov
pop
adc
adc
in
push
adc
loopne
add
mov
fnstcw
enter
xchg
inc
cmp
or
fcmovb
test
push
mull
or
adc
cmpb
adc
fisubrl
inc
sbb
enter
fstpt
stc
sbb
sub
inc
cmp
repnz
das
xor
sbb
outsb
pop
add
fsub
pop
mov
sti
rep
movsw
js
sbb
sbb
movsb
mov
push
inc
inc
or
mov
sar
jg
ljmp
or
mov
inc
inc
cmp
jle
movb
xchg
lea
cmpb
xor
adc
aam
call
insb
mov
and
imul
movsbl
xor
scas
xor
add
ss
push
or
add
jb
and
push
cld
adc
sahf
mov
scas
lret
pop
lock
sbb
push
fs
sbb
xchg
mov
sub
mov
adc
test
add
xchg
dec
jae
lock
lods
lods
jge
inc
add
push
sub
out
enter
xor
sti
or
push
push
pop
jo
mov
sbb
sbb
pop
lds
push
cmpsl
xor
mov
sbb
mov
pavgw
inc
push
and
shrl
movsl
test
push
mov
adc
cmp
push
add
mov
dec
lcall
adc
clc
dec
insb
loopne
and
xorb
lea
and
loop
or
adc
mov
push
cmp
mov
or
pushf
pushf
pushf
add
pushf
pop
or
or
jnp
outsb
outsb
outsb
or
jmp
or
jno
jmp
push
jmp
outsb
outsb
outsb
outsb
por
jmp
adc
pop
adc
push
outsb
outsb
outsb
outsb
adc
dec
adc
dec
adc
aas
outsb
outsb
outsb
outsb
pop
jmp
sbb
xor
jmp
outsb
outsb
outsb
outsb
sbb
es
and
pop
outsb
outsb
outsb
outsb
pop
jmp
and
or
jmp
ret
outsb
and
jne
mov
int
adc
sarl
fiaddl
pushl
hlt
cmp
repz
add
or
sbb
cmp
repz
xor
ds
repz
inc
dec
dec
push
push
pop
cmp
repz
imul
cmp
repz
test
iret
xchg
cwtl
popf
mov
repz
mov
add
add
push
pop
or
cmp
mov
add
or
adc
adc
push
pop
sbb
sbb
xor
inc
test
push
pop
and
and
aas
orb
sub
rorb
inc
movq
orl
decl
mov
or
shlb
cmp
jle
mov
jno
pushf
aad
mov
and
jmp
in
pop
mov
js
xor
pop
out
jae
sub
mov
push
das
sbb
scas
fbstp
pop
movsb
xchg
rcl
or
mov
inc
jge
std
mov
xor
aaa
mov
icebp
mov
cmp
jbe
incb
mov
jbe
test
push
sub
and
pop
clc
push
imulb
or
aam
lock
sbb
aaa
dec
or
sbb
push
pop
mov
and
xorb
unpcklps
rcrl
add
movsl
lock
and
in
jle
repnz
mov
sbb
mov
sbbb
sub
lcall
xor
jle
pop
add
adc
adc
dec
or
sub
enter
mov
add
sti
jns
lods
mov
sub
add
nop
addr16
push
push
adc
mov
add
or
or
nop
divl
push
add
push
aam
add
je
mov
int3
inc
inc
ja
jecxz
adc
mov
ja
adc
add
cmpxchg
jmp
mov
pop
popa
das
push
das
dec
add
push
push
xchg
test
lds
mov
test
xchg
dec
fidivs
xor
dec
adc
mov
inc
dec
inc
cmc
dec
loop
outsb
lock
arpl
jo
adc
sbb
xor
call
add
push
sub
mov
sti
jmp
nop
sbb
xchg
into
rolb
push
clc
sbb
or
push
ss
lcall
lcall
bnd
mov
test
outsb
scas
push
sbb
sbb
push
cmp
scas
dec
out
jne
lock
xchg
pop
out
jle
inc
adc
pop
scas
add
sbb
movsl
ficoms
lret
jne
imul
adc
aas
inc
sub
xchg
xchg
fistl
loopne
dec
and
loopne
sbb
out
ja
pop
push
pop
pop
xor
pusha
add
jno
mov
mov
or
or
push
enter
insb
dec
xchg
cld
add
lds
mov
je
repz
mov
xchg
lock
call
mov
imul
mov
ficomps
cmp
push
sub
shrl
inc
ja
fucom
mov
or
or
int3
adc
push
ljmp
add
inc
push
add
mov
test
jnp
mov
fsubp
dec
fidivs
xchg
and
fists
jl
arpl
dec
push
shl
and
mov
add
push
jno
xchg
and
dec
add
xchg
sbb
or
je
cmp
mov
adc
add
inc
mov
lock
movsb
sub
or
dec
pop
movsl
pop
add
or
in
out
lret
cmp
inc
sbb
mov
mov
call
hlt
loopne
les
mov
leave
jb
imul
loop
aad
imul
inc
add
pop
mov
push
cmp
mov
jbe
sti
fs
fsubl
sbb
dec
shll
int3
enter
imul
outsb
or
mov
add
and
add
cmpsb
add
adc
movsb
xor
fdivrl
fmull
xchg
in
add
sbb
ds
adc
lret
cmp
jne
dec
xor
cmp
roll
nop
pop
fisubrl
add
xorb
cmp
mulb
daa
adc
testb
ret
cltd
call
mov
jge
ret
loop
je
push
loopne
or
loopne
cmp
subb
pop
adcb
or
adc
negb
lock
sahf
add
loopne
cmpsb
fs
or
loopne
addl
or
repnz
cmp
add
cmp
out
int3
or
mov
cmp
div
add
test
sti
ret
negl
dec
insl
dec
leave
rcr
lcall
inc
mov
add
subb
xchg
fucomp
and
pop
push
cltd
push
or
pop
dec
xor
sbb
mov
push
add
xchg
fbstp
xchg
fstps
mov
ret
es
dec
adc
dec
imul
arpl
push
or
pop
sbb
popa
xchg
or
adc
xchg
mov
mov
adc
ja
or
pushf
movsl
dec
dec
and
ljmp
add
push
imul
adc
push
cmp
or
nop
sbb
mov
sub
xor
adc
insl
pop
repnz
faddl
xchg
stos
shrb
lock
add
add
sub
fidivs
movsl
add
xorb
fmull
pop
cmpsl
adcl
bound
ja
jmp
iret
pop
jg
dec
sub
fstl
fsubs
fiaddl
add
loopne
outsb
lea
daa
in
add
addr16
lods
jge
popf
mov
adc
push
call
add
dec
sahf
fstpl
inc
inc
pop
or
pusha
pop
je
mov
push
pop
add
and
mov
fsubrp
add
stos
push
cmp
fnstenv
add
cmp
cmpsb
xor
fsubrl
nop
or
or
ret
xchg
aaa
movb
mov
inc
leave
insb
cmpl
push
test
and
add
pop
es
iret
sahf
pop
jle
xchg
rcl
ja
hlt
or
pop
jne
push
jmp
cmp
je
stos
inc
movsl
xor
or
fisubl
adcl
subb
pop
cli
xchg
insl
fucom
cld
dec
leave
sti
and
push
in
and
mov
imul
sbb
lock
push
filds
pop
inc
repnz
xor
inc
mov
cmp
push
add
inc
sub
mov
cmp
jo
pop
fisubl
dec
imul
mov
ret
sub
stos
sub
jl
push
pop
push
jp
mov
movsl
loopne
ljmp
xorl
push
das
orl
lds
loopne
mov
out
and
and
fadds
sub
adc
push
xchg
dec
xor
fnstsw
sbb
and
xchg
or
stos
mov
or
jp
push
or
add
inc
sbb
cmpsb
pop
mov
repz
negl
jp
xor
inc
xchg
ret
xchg
or
repnz
sbb
xchg
xchg
lret
xor
cmp
xacquire
xor
sbb
xor
in
sbb
enter
or
or
lock
in
or
inc
insb
jb
mov
xor
int
lods
pop
cli
in
adcb
or
fmul
les
jle
pmulhuw
mov
or
or
es
adc
dec
mov
sbb
and
mov
sub
movsb
pop
ret
js
lret
in
and
cmp
cmp
inc
frstor
mov
out
pop
sbb
frstor
pop
push
push
pop
pop
fisttpl
lret
add
and
and
pusha
fs
icebp
test
les
add
sbb
rol
rclb
dec
test
mov
popf
inc
incl
les
femms
imul
mov
test
cmc
ret
lret
sahf
insl
and
xchg
je
or
jns
jl
and
push
cmp
mov
push
cmp
jl
sub
cwtl
cmp
stos
lea
dec
mov
outsb
dec
jp
stc
dec
jnp
inc
push
or
sbbl
fstpt
add
andb
fucomip
frstor
xchg
mov
lods
sub
inc
and
pop
push
sti
aas
xchg
lods
push
adc
jnp
pop
jl
jmp
out
push
xchg
loopne
cmp
jge
and
sahf
mov
fldln2
ja
sti
cmp
je
or
jge
and
mov
dec
call
ss
jmp
rcrl
mov
mov
inc
rcll
int3
and
xor
or
xchg
insb
je
popl
mov
dec
mov
loopne
int
sbb
push
fwait
push
jno
jle
aas
sub
mov
in
or
call
adc
fs
pop
or
mov
loopne
push
pop
cmp
add
adc
int3
jmp
jle
es
lea
mov
add
push
fistpl
sbb
mov
decb
inc
sahf
js
pop
jno
bound
mov
jle
mov
lods
in
cmp
lock
pop
sub
push
dec
adc
xchg
xchg
sbbb
adc
mov
adc
fists
js
add
pop
jne
push
inc
pop
inc
enter
mov
xchg
push
cmpl
adc
push
mov
push
pusha
pop
cld
mov
xor
add
js
and
fdivrl
jmp
mov
or
sbb
inc
les
cmpl
sbb
lea
jp
hlt
adc
mov
test
mov
call
loop
jo
lock
add
sub
dec
mov
adcl
loopne
rorb
ret
icebp
xor
insb
je
cmp
in
jp
data16
fwait
adc
or
jnp
mov
orl
jge
ss
adc
loope
add
and
ret
inc
nop
pop
inc
mov
push
xor
mov
shlb
hlt
or
mov
jne
push
xchg
cmp
clc
adc
add
fsubs
xor
daa
sbb
xchg
rorb
add
inc
movsb
out
addb
lock
loopne
mov
add
in
insl
sbb
dec
sub
ss
push
push
imul
ja
imul
or
ret
mov
jo
ret
jmp
adc
cmp
or
pusha
mov
loop
push
and
xchg
in
adc
inc
ret
push
repz
rorl
leave
test
lods
add
add
test
nop
adc
cmpsl
stos
xchg
push
or
mov
lret
jp
add
sub
adc
or
shrl
sbb
sbb
insb
xchg
int
data16
inc
inc
mov
mov
xor
adc
xchg
and
sbb
adc
loopne
faddp
sbb
lock
jmp
mov
jmp
call
ret
outsb
pushl
add
mov
add
popa
aad
add
sub
popf
andl
push
movsb
inc
and
and
jle
call
mov
pusha
mov
movzbl
mov
imul
push
cmp
xchg
inc
adc
lcall
dec
xor
in
pop
das
mov
push
js
out
pop
mov
es
inc
mov
pop
xlat
sub
push
adc
mov
inc
mov
or
and
jbe
loope
in
icebp
jmp
inc
es
mov
aam
movsl
dec
adc
mov
popa
dec
adc
es
mov
or
jmp
jbe
rolb
clc
cmp
add
jne
and
mov
add
add
adc
shlb
addr16
enter
popa
lret
or
adc
aad
dec
push
adc
insb
mov
cmpsb
jae
or
jecxz
mov
cwtl
and
es
ss
lret
ret
add
and
and
jo
sbb
adc
push
scas
ja
rcl
mov
jb
icebp
sbb
or
dec
inc
mov
and
xor
mov
and
sub
loopne
pop
push
inc
testl
add
inc
pop
sbb
aad
jg
and
lahf
sub
add
scas
js
and
add
invd
fmuls
jne
insb
jns
push
mov
sbb
mov
lcall
cwtl
push
xor
iret
push
dec
push
add
les
jnp
mov
and
inc
and
daa
mov
cmpsl
xchg
addr16
xor
mov
adc
stc
in
imul
sbb
push
push
or
mov
push
ret
inc
and
or
mov
les
inc
es
fldl
inc
jnp
push
xchg
push
cs
ds
sbb
and
mov
inc
push
or
and
movsl
and
xchg
orb
roll
jbe
fnsave
adc
and
adc
fldz
fcomp
fnstsw
add
add
cld
fnsave
xchg
ljmp
faddp
push
insb
imul
adc
call
fldcw
hlt
mov
rcl
jbe
sbb
pop
and
sub
enter
push
pop
movsl
data16
dec
je
jb
clc
hlt
jle
lcall
fnstsw
and
imul
loope
je
mov
add
add
adc
add
or
mov
jge
clc
mov
fwait
mov
jmp
mov
loopne
lods
mov
jmp
lods
lock
and
iret
add
popa
sub
xor
mov
mov
or
popf
cltd
mov
sbb
add
and
imul
data16
or
sbb
testb
mov
repz
inc
cmpb
sti
xor
shl
fimuls
enter
int3
les
loopne
js
jmp
cmp
xchg
lcall
pushf
cmp
jo
add
dec
inc
pop
add
adc
ret
xchg
or
pusha
dec
lock
mov
sub
inc
sub
mov
mov
fiaddl
or
push
xchg
arpl
cmc
xchg
int3
or
hlt
adc
pushf
or
xor
adc
add
jl
xor
push
aaa
or
adc
jne
mov
and
imul
adc
adc
cwtl
cwtl
addb
jns
xchg
jmp
or
inc
fidivl
mov
sub
jecxz
pusha
shll
jns
and
pop
divb
and
push
or
arpl
icebp
adc
push
sti
outsb
ss
out
push
in
and
pop
sub
add
dec
imul
and
clc
add
mov
or
aaa
add
add
lea
or
call
and
std
push
jns
cld
cmp
jb
push
in
mov
and
pop
jb
xor
js
lret
or
add
out
mov
or
xor
test
inc
mov
dec
orb
in
mull
sub
cld
sbb
push
adc
sbb
imul
stos
cmp
stos
mov
mov
leave
push
jne
je
xor
push
in
add
rolb
vmwrite
xchg
cld
fs
enter
dec
mov
rcll
shll
inc
pusha
shll
sbb
ds
add
dec
dec
addl
test
xor
fists
icebp
xchg
adc
ret
mov
lock
pop
push
es
cli
cmpsl
push
pop
mov
nop
cmp
jne
ret
and
mov
lcall
and
divl
rcll
xor
mov
mov
test
rclb
jne
or
es
sbb
jo
add
pop
inc
movsl
cs
nop
icebp
mov
pop
xor
push
jmp
cmp
call
jl
mov
es
imul
adcb
jmp
rcrb
dec
mov
aam
push
imul
adc
fcomp
add
and
fidivl
push
mov
lret
inc
jbe
jno
add
in
cltd
repz
or
je
cmp
jb
ret
inc
stc
jg
and
mov
outsb
popa
pop
jbe
adc
pusha
push
dec
and
rorl
push
mov
push
inc
inc
add
xor
xchg
test
sub
iretw
jnp
push
mov
push
push
dec
cmc
xchg
jp
or
cmp
or
sbb
inc
lret
sbb
sub
faddl
mov
add
ret
jno
sub
add
jns
mov
hlt
idivb
push
sbb
repz
rol
xchg
push
push
pop
cmp
xchg
mov
insl
dec
pusha
inc
sbb
pop
sbb
adc
or
or
push
sbb
mov
inc
scas
pushl
popa
and
push
push
ss
push
jb
xor
dec
mov
mov
call
rolb
ret
and
dec
pop
mov
in
inc
push
jnp
or
sub
pop
movsl
fucomip
push
call
cmp
add
dec
daa
sub
jmp
sete
iret
add
mov
outsl
arpl
push
add
xor
mov
flds
push
lcall
xor
imul
or
in
adc
push
push
xor
rep
mov
inc
int
out
jo
add
inc
jge
pop
dec
pop
push
jb
stos
ljmp
push
inc
inc
orb
aam
aaa
outsb
xor
lea
mov
enter
je
mov
cmc
scas
add
insb
xchg
push
dec
pop
sbb
rolb
mov
mov
or
add
cmp
and
mov
imul
movsl
add
aam
inc
or
inc
nop
xchg
faddl
push
in
xchg
xchg
pop
stos
inc
pop
sub
sub
inc
or
mov
call
jno
lea
dec
cmp
not
shlb
and
adc
push
cmc
mov
and
int
aam
stos
mov
cmp
xor
fcompl
sub
xor
pusha
and
pop
orb
add
push
les
add
es
pop
pop
addr16
or
mov
scas
test
dec
push
inc
sub
lock
jbe
mov
fwait
jmp
push
in
cmpsl
mov
fwait
mov
fsts
in
add
lahf
sub
push
xchg
push
testb
add
inc
xchg
daa
push
push
imul
ljmp
andb
mov
adcl
ret
and
mov
ljmp
sbb
cmpsl
add
dec
adc
pop
add
andb
jmp
xchg
movb
mov
sbb
add
fisttpll
adc
pop
lcall
imul
adc
test
inc
add
push
xor
gs
mov
test
sbb
xlat
push
ds
enter
pop
push
movsl
push
or
jno
adc
pop
or
mov
or
mov
dec
sbb
adc
icebp
addb
mov
stos
stos
notb
xchg
xor
and
in
push
jecxz
or
or
ljmp
add
inc
dec
je
rcrl
inc
repz
xlat
mov
daa
mov
and
jg
add
aaa
push
jb
jae
cmp
stos
loope
imul
pop
loopne
pop
cs
es
daa
movsb
adc
push
inc
loopne
adc
aam
sbb
jmp
cld
fnstsw
pop
xor
psubw
notl
add
or
loopne
sahf
movb
iret
arpl
fcmovnbe
loopne
test
inc
xor
bound
inc
mov
imul
test
inc
mov
fcoms
rcrl
out
push
pop
push
mov
loopne
fcoml
popa
or
outsb
cmp
int
nop
adc
enter
sbb
and
data16
outsb
inc
sbb
push
push
es
das
xchg
inc
sub
inc
mov
out
mov
pusha
sub
xchg
mov
dec
mov
cs
inc
dec
xchg
imul
es
mov
shr
lock
jnp
or
lret
jmp
xchg
pop
hlt
or
into
out
popf
inc
imul
ss
test
pop
mov
idivb
int
adc
or
adc
cmp
pusha
sti
lock
adc
inc
or
sti
xchg
xorb
mov
xlat
fs
xchg
test
mov
mov
adc
sarb
inc
adc
sub
mov
mov
jmp
std
inc
or
inc
xchg
scas
sub
add
sbb
sti
fs
es
addr16
pop
daa
dec
inc
xchg
mov
or
or
dec
ud2
pop
or
cwtl
dec
orb
inc
or
add
pop
mov
cmpsb
push
andb
push
lret
push
cmp
mov
and
add
jo
dec
clc
mov
fwait
rcll
and
popa
and
js
jge
int3
adc
xchg
adc
mov
ret
push
xor
or
dec
or
cwtl
lock
test
mov
xchg
pop
push
jl
icebp
xchg
xor
fstl
push
inc
daa
cmp
loope
pop
pop
pop
push
pop
push
out
in
icebp
add
push
filds
pop
jmp
mov
adc
enter
in
ret
dec
hlt
cmc
movsb
push
mov
pop
scas
push
arpl
test
xchg
cmc
std
add
or
sbb
ljmp
pop
addr16
xchg
gs
sbbb
fstps
out
mov
mov
mov
push
or
mov
push
dec
sbb
aas
adc
inc
ds
cmpsl
push
sub
shlb
jmp
aam
xchg
cmc
mov
shlb
data16
jo
test
data16
cmp
mov
and
stos
aam
jbe
mov
test
into
scas
xor
lcall
nop
popf
mov
fneni(8087
mulb
lock
push
push
lahf
and
dec
push
and
loopne
pop
pop
sbbl
mov
popa
push
push
in
mov
dec
loopne
movsb
dec
aam
dec
add
jg
push
inc
xor
adc
pop
dec
fdivr
cmp
or
dec
xlat
lcall
cmp
je
mov
in
jb
pop
das
and
mov
jl
add
push
stos
pop
test
sbb
mov
inc
mov
and
add
xchg
loope
inc
adc
movsl
push
rcrb
lds
je
out
imul
movzbl
or
fadd
les
dec
lcall
incb
jge
fsubl
sub
subb
jl
mov
lods
pop
test
sub
mov
xchg
test
and
jle
in
ds
in
xchg
sbb
sti
add
ds
cmp
push
mov
jmp
sarl
movsb
dec
mov
add
cmp
cmova
add
shll
lods
popa
or
sub
dec
dec
mov
js
fs
test
adc
inc
scas
stos
inc
push
mov
dec
mov
add
push
dec
mov
andl
xor
mov
insb
pop
or
fwait
mov
sub
and
rorb
mov
scas
push
aaa
enter
jne
fldl
push
je
mov
or
and
jne
inc
loop
insb
mov
mov
or
fs
add
mov
lea
or
clc
addr16
dec
and
mov
test
mov
inc
mov
mov
push
sub
icebp
rolb
dec
repnz
jge
sbb
pop
push
in
mov
pop
mov
loop
add
push
and
fdivs
loop
adc
and
xchg
rcrb
pop
fs
mov
test
rolb
rclb
sub
sub
stos
or
in
push
mov
sbb
bound
imul
pop
les
movsb
jle
outsl
dec
je
int3
arpl
pop
push
arpl
iret
add
mov
cmp
test
or
or
movsb
sub
cltd
push
xchg
push
dec
pop
xchg
outsl
xchg
loopne
sbb
cmp
int
xor
ljmp
sub
mov
fstpt
jnp
jle
adc
xor
shl
mov
test
aam
sahf
lods
dec
and
das
cmpsb
shl
ljmp
shrl
xor
pop
lahf
jo
sbb
pushf
aam
in
je
push
sub
xchg
sub
pop
inc
xor
rolb
jae
fdivl
pop
xorb
test
add
es
decb
out
or
clc
pop
mov
incl
cmp
xor
movsl
xchg
sar
lock
or
int3
adc
pusha
scas
xchg
xor
jns
dec
subl
pop
inc
mov
into
pop
add
push
sahf
xchg
push
pop
xor
ss
jg
adc
xor
leave
insb
xchg
sbb
add
ret
into
lods
add
dec
mov
ja
mov
popa
cmp
rclb
jbe
mov
mov
pop
mov
and
add
sub
mov
loopne
aad
and
inc
jbe
add
pushf
arpl
lods
or
adcb
cmp
insb
imul
push
sbb
adc
add
test
lea
add
push
pusha
or
sbb
mov
adc
push
loope
pop
int3
and
pusha
mov
dec
or
push
xor
pop
stos
in
pop
mov
push
mov
xor
sbb
cmpsb
daa
gs
in
loopne
push
imul
pop
pop
adc
or
loop
push
xor
cmp
ret
fcompp
leave
and
lock
inc
cmpsb
rorb
add
ret
notb
lock
mov
in
adc
addb
pop
sbb
call
add
push
mov
in
lea
std
add
rolb
aad
sbb
and
test
popa
or
out
pop
inc
test
orb
jp
and
push
and
sbb
jmp
sub
jnp
sub
mov
data16
popa
jl
in
das
loope
xor
dec
adc
das
cmp
cli
sub
jne
repnz
xchg
dec
and
out
mov
lods
mov
or
or
xor
in
stos
xor
sti
call
cmp
cwtl
sbb
or
jg
add
xchg
shl
push
shlb
popf
lret
cwtl
inc
push
pop
pushf
fsubl
or
inc
adc
or
mov
mov
push
wrmsr
and
pop
sub
dec
fdiv
xor
mov
pushf
hlt
mov
cmpsb
or
or
cmp
dec
jne
push
out
js
cmpl
cld
push
dec
or
mov
cs
dec
movsb
pop
imul
sub
in
pop
sub
or
add
pop
sti
or
add
or
xchg
push
ret
xchg
js
mov
or
add
pop
ds
std
pop
dec
ja
sete
xchg
adc
iret
pop
sub
jo
sahf
or
insl
sbb
xor
mov
mov
or
pop
leave
mov
sbb
adc
push
add
mov
xor
dec
cltd
xor
xor
add
mov
aas
adc
xchg
cwtl
mov
sub
rclb
cli
inc
or
mov
pop
inc
sbb
xorl
inc
out
sub
scas
cld
roll
cmp
je
iret
inc
aaa
clc
push
add
cmp
inc
inc
aad
ret
jg
mov
insl
fwait
mov
push
cmp
or
push
add
jmp
lea
fdivrl
pop
cmpsl
mov
push
cmpsl
frstor
pop
adc
xor
cli
inc
dec
mov
dec
hlt
cmp
jge
cli
fstl
data16
push
mov
dec
rep
add
jle
rcrb
push
lcall
push
arpl
sub
jne
inc
inc
jmp
inc
fs
sub
movsb
sub
pop
aas
cmp
gs
xor
add
mov
push
push
dec
jmp
test
add
add
sub
pop
jle
or
push
sub
imul
mov
je
cmpsl
idivb
in
push
push
inc
mov
paddsb
or
cmpsl
jecxz
jmp
mov
loope
ja
and
in
xchg
dec
clc
rcrb
in
mov
pop
and
in
mov
les
sbb
pop
adc
dec
dec
in
mov
mov
out
ret
andb
dec
adcb
push
dec
in
aam
push
inc
mov
add
push
xchg
jne
push
lods
push
cmp
out
faddl
adcb
add
jns
and
mov
push
arpl
movsl
sub
enter
xchg
out
fmuls
jnp
in
push
inc
xchg
aam
or
xor
ret
add
mov
popa
and
mov
push
xchg
lods
sbb
dec
clc
or
shlb
jbe
push
mov
bound
dec
lods
mov
dec
loope
stos
dec
mov
mov
add
push
xchg
stc
clc
popf
mov
loopne
push
cmc
push
mov
ficoms
mov
jle
xor
and
out
pusha
jo
xlat
and
popa
nop
mov
add
in
outsl
mov
adc
cmp
aam
push
jo
hlt
mov
push
mov
out
push
xor
inc
stos
ljmp
fmull
insb
add
cmp
into
in
push
jns
popa
call
sub
imulb
jo
xchg
xchg
les
lock
jne
or
or
inc
adc
dec
or
stc
in
popf
add
leave
add
adc
push
adc
stos
subb
test
mov
or
push
daa
mov
fisubrs
test
call
repnz
dec
xchg
dec
js
and
clc
jge
xchg
lods
aas
insb
ret
or
cli
test
ss
data16
xor
lea
cltd
test
lods
in
pop
cmp
leave
repz
mov
lods
leave
movsb
sub
add
leave
sahf
add
call
jp
outsl
push
add
pop
rclb
mov
push
rcr
call
inc
inc
mov
das
lea
and
cld
push
fdivl
push
insb
mov
or
cmpl
scas
hlt
push
ss
movzbl
xchg
mov
push
add
call
das
call
mov
fistpll
or
jl,pn
mov
fisubl
sbb
aaa
divb
rorb
out
hlt
cmp
fst
xor
shr
xor
adc
adc
movsb
in
jp
not
mov
jl
mov
sub
mov
shr
cmp
jbe
add
jmp
add
iret
or
xor
lods
les
and
cpuid
add
inc
dec
inc
xor
jl
pusha
frstor
popa
mov
movsb
sub
stos
inc
shrb
or
ret
jns
adc
xchg
or
lods
mov
mov
push
jecxz
jae
cli
push
or
aaa
mov
sub
pop
insb
push
inc
cmp
jecxz
orb
rol
add
or
out
pop
testl
push
cwtl
adc
add
jb
push
xchg
mov
out
and
xchg
and
bound
add
add
iret
mull
inc
push
pop
inc
scas
xchg
adc
mov
movsb
mov
pop
mov
mov
adc
fdiv
aas
movsb
outsb
jl
inc
jae
pop
xchg
xor
jmp
dec
pop
mov
call
adc
orl
aad
fadds
pop
jg
mov
insl
push
add
adc
pop
sbb
clc
pusha
adc
xchg
cld
movsb
xchg
test
xchg
dec
push
xchg
push
repnz
push
xchg
ficoms
sbb
jmp
cmp
ss
jge
cmp
in
shll
xor
push
xor
sub
gs
add
xor
push
aaa
add
push
add
outsb
insb
add
ja
fsubs
mov
lods
inc
cmc
push
jecxz
scas
aas
sub
pop
inc
xor
lea
loope
dec
and
sahf
inc
sahf
xchg
fists
mov
xor
or
sahf
pop
jmp
sbb
or
cmp
ss
push
jg
or
adc
pop
xor
jne
mov
pop
xchg
push
cmp
sbbb
sub
adc
fidivl
add
ret
jle
jp
dec
mov
cmp
stc
or
xor
adc
sbb
sub
adc
rcl
mov
mov
push
xchg
mov
or
orl
xchg
and
add
ret
sbb
mov
xchg
push
adc
sbb
mov
aad
mov
mov
push
dec
sbb
xchg
push
fwait
xor
jl
loopne
mov
mov
loope
sbb
adc
je
jbe
and
xor
mov
pop
xchg
cmp
inc
push
dec
adc
xchg
push
leave
xlat
pop
adc
cmp
and
mov
sbb
sbb
out
jmp
and
movsb
adc
dec
aad
loope
and
push
aam
inc
lret
movsl
je
jbe
mov
std
push
jnp
adc
pop
jne
push
sbb
jns
xor
push
jp
sbb
call
sub
les
add
dec
xchg
in
and
leave
xor
and
and
mov
push
xor
inc
dec
ljmp
icebp
adc
xchg
mov
or
dec
cmp
push
push
dec
popf
add
dec
sub
lods
lret
stos
dec
fcoml
adc
or
push
cwtl
dec
mov
bound
mov
loop
add
add
sbb
push
into
push
out
pop
add
jo
pop
mov
xor
in
adc
cmp
mov
movb
jbe
add
lret
xchg
jns
push
pop
xlat
xchg
mov
jbe
jmp
inc
or
adc
mov
xor
mov
hlt
xor
jns
cmpb
add
fidivrs
sbb
dec
insl
pop
repz
or
sbb
mov
fildl
inc
andb
jp
or
test
mov
gs
jo
and
xor
aas
nop
daa
dec
jecxz
and
mov
xchg
push
cwtl
sub
add
sub
push
xor
push
dec
mov
xor
test
aaa
jbe
test
lods
sti
mov
xchg
mov
lret
inc
adc
mov
inc
and
mov
sbb
push
sbb
mov
pop
lods
mov
adc
inc
les
inc
enter
xor
and
fcmove
int3
les
add
out
shlb
and
and
add
push
jne
dec
and
cltd
sbb
cld
push
and
jno
loope,pn
pop
cmp
imul
sbb
jbe
cs
insl
and
xor
cmp
or
adc
cs
and
dec
add
lds
jge
test
stc
jl
add
cmp
sub
fisttpl
sub
imul
add
in
xchg
in
lods
and
into
jno
sbb
inc
repnz
loopne
adc
bound
push
ret
inc
shlb
sbb
adc
scas
mov
sbb
and
push
add
xor
xlat
pop
or
adc
or
sbb
pop
lock
fidivrl
sub
outsl
adc
jg
ja
fwait
mov
cmp
jne
or
mov
dec
xor
lea
and
push
xor
push
shlb
sub
fsubs
lcall
add
jmp
xor
pop
inc
push
add
movsb
arpl
leave
add
cmp
popa
push
lock
or
pop
jp
inc
cmpsl
sub
add
sub
mov
jae
stos
ret
or
jecxz
lds
mov
aam
inc
dec
test
cmp
ret
adc
dec
pop
test
addr16
shlb
int
sub
pop
or
sub
rcl
push
xor
xchg
sub
sbb
sub
seta
mov
rol
ficoml
add
hlt
iret
sub
ljmpw
xor
cmp
test
mov
add
je
or
and
xchg
push
jb
mov
cltd
jae
xchg
jb
adc
dec
enter
inc
aam
dec
arpl
in
leave
sbb
push
push
ret
adc
xor
stc
lret
xor
xor
mov
movsb
xchg
mov
fldz
sbb
fwait
sub
push
fnstsw
movsl
push
push
fcoml
xchg
mov
psubsb
sbb
and
lock
or
xor
or
push
or
xlat
in
and
and
dec
or
cmc
dec
lret
call
jns
movsl
mov
push
test
lods
push
ret
int3
dec
jns
adc
aaa
or
add
aam
pop
movsl
xchg
inc
inc
repz
push
psrlw
pop
adc
sub
in
and
sbb
mov
movsl
outsl
adc
inc
cmp
mov
or
cmp
push
movsb
dec
dec
or
popa
mov
testl
mov
inc
fistpl
inc
es
pop
ljmp
or
sub
sub
and
cmp
push
sub
push
add
pop
ret
adc
mov
loop
jmp
iret
mov
cmp
jge
sub
cs
sbb
xor
xchg
loope
add
scas
xor
lret
push
inc
dec
test
cli
enter
imul
pop
push
cmpb
pop
cmp
scas
sub
jno
scas
inc
xchg
cld
or
imul
push
ret
xchg
cld
push
je
pop
mov
jmp
stos
mov
push
xor
or
xor
mov
dec
jl
adc
loope
push
pop
or
fidivl
mov
repnz
xor
adc
dec
inc
adc
lahf
or
inc
aaa
dec
mov
adc
or
pop
adc
int3
push
and
test
rorb
cmp
decb
inc
pop
sub
les
cltd
sub
dec
xchg
adc
xchg
test
sbb
lock
and
jb
loopne
jp
movsb
sbb
ret
pusha
push
pop
xlat
sub
xor
movsl
pop
in
flds
and
push
xchg
mov
push
pop
push
je
mov
inc
fiaddl
sti
sub
jmp
push
and
push
lods
mov
mov
insl
mov
mov
sahf
jmp
xor
inc
inc
fsts
cld
jo
or
roll
pop
inc
inc
push
or
push
ret
push
movsl
mov
dec
add
sbb
inc
sahf
xchg
add
repnz
sub
icebp
or
inc
rorb
xchg
push
and
hlt
push
cmp
push
movb
xor
orb
int3
imul
into
pop
inc
mov
mov
push
scas
add
stos
and
push
lock
shll
xlat
pop
cmp
shlb
repz
addr16
fists
pop
outsl
mov
or
insb
movl
testb
adc
test
movsl
in
sub
pop
ss
xor
pop
mov
mov
adc
outsl
es
sub
cld
inc
mov
clc
int
xchg
jg
jno
lret
outsl
cmp
mov
sub
add
mov
pop
push
outsl
push
push
add
shll
loop
push
push
add
orl
adc
adc
jbe
fs
add
push
pop
pusha
mov
push
pushl
stos
pop
add
cmp
inc
fisttpll
add
loop
cmpsl
ret
cmp
push
jl
xor
pop
pusha
push
in
addl
inc
xchg
or
cwtl
xor
inc
xor
addl
cmc
je
push
xchg
xchg
pop
add
lock
sbb
push
or
roll
adc
testb
in
xchg
jmp
adc
inc
pushf
mov
mov
daa
dec
fcomps
sbb
cltd
in
push
repnz
int
outsl
mov
xchg
push
xchg
dec
mov
cmp
sub
add
sub
cltd
add
cs
xlat
jbe
push
stc
pusha
or
dec
adc
xor
icebp
rcll
xchg
or
mov
test
jle
je
mov
push
add
push
add
sub
xor
push
cs
add
xor
shl
add
pusha
sahf
add
cmp
adc
das
xor
push
cld
mov
dec
inc
dec
inc
shrb
jg
es
add
mov
sbb
fs
adc
or
or
or
add
test
sub
push
sbb
lret
shr
or
xchg
adc
inc
ret
xchg
int3
into
jp
lret
jecxz
mov
mov
sub
icebp
ds
pop
into
pop
mov
push
test
cmp
xor
dec
add
sbb
lds
in
cmp
add
in
shrb
stc
add
mov
and
in
cmc
ss
xchg
jge
adc
int
xorb
lock
mov
aad
adc
movsb
push
lock
jg
mov
cmc
ret
test
test
fwait
dec
stc
ret
pop
out
lea
xlat
ja
movsb
and
jb
mov
shlb
inc
test
mov
adc
test
xchg
into
mov
and
ret
rorl
nop
mov
mov
cmp
in
add
or
cmp
push
mov
pop
cld
lods
test
add
pop
mov
fwait
cmp
adc
aam
or
cmp
adc
mov
in
fucomip
xor
pusha
mov
rol
mov
ror
xor
shr
xor
push
mov
mov
rol
xor
shr
xor
add
add
add
dec
mov
dec
fs
popf
out
or
jae
or
and
dec
mov
pushl
fiaddl
sti
add
aam
sub
jge
scas
push
lcall
ror
lahf
scas
or
add
xor
and
and
or
xchg
push
aam
adc
xor
imul
sub
fdivr
outsb
movsb
push
or
push
or
xlat
ret
pop
inc
in
rcl
add
add
dec
andl
movsb
jb
rcl
call
call
dec
xor
sub
aaa
and
cli
mov
rol
rol
movsb
imul
mov
shrb
cmpsb
mov
call
in
shl
sub
dec
xor
lahf
push
cmp
cmp
mov
or
add
sahf
rorb
sbb
fadd
inc
push
lock
aam
call
jb
xor
loopne
in
cmp
movsb
in
loopne
cmp
imul
rcr
jno
xchg
aam
pop
push
testb
fmuls
jo
int3
ds
push
loopne
add
in
push
xor
mov
mov
and
and
loopne
or
into
add
and
jbe
xor
push
test
add
cmp
rcrl
jo
ret
push
jo
fimuls
enter
mov
push
xchg
xlat
xor
js
adc
adc
push
loop
testb
filds
cltd
faddl
add
dec
subl
imul
fisubrl
fdivrs
or
clc
jp
push
and
add
xorb
inc
and
dec
fs
call
sbb
loopne
inc
add
add
adc
cli
stos
addb
push
or
imul
sub
nop
cmpsb
in
in
and
shr
rolb
inc
sbb
scas
add
cli
xor
xchg
mov
fcom
aaa
rorb
xorb
add
and
shl
in
call
lahf
jo
add
add
and
in
movsb
sahf
dec
in
dec
adc
int
push
dec
xor
sbb
xor
lock
dec
push
xor
xor
add
rolb
push
scas
dec
push
sbb
push
push
movsb
cltd
add
cmp
sub
fs
pop
cmp
stos
nop
mov
push
dec
in
movsl
add
or
xor
inc
pop
cld
xor
and
rorb
pusha
and
cmp
pop
pusha
pop
mov
rclb
adc
orb
rorl
and
jno
xor
shll
dec
dec
dec
lahf
xchg
xchg
dec
icebp
stc
stc
stc
mov
pop
add
mov
rolb
dec
test
imul
xchg
imul
cs
pop
push
and
popa
add
dec
les
xor
jb
out
pop
add
sub
mov
add
out
addb
add
lret
jb
jecxz
adc
lea
pop
add
sub
movsb
jle
cmp
lea
pop
xor
jo
cmp
decl
enter
sub
rcr
sub
add
rol
and
lods
fwait
xchg
mov
adc
mov
test
cmpsb
mov
sub
mov
dec
xor
aas
lea
jmp
xchg
out
decb
sub
pop
add
ja
mov
or
mov
dec
jne
pop
or
daa
push
loope
lock
jnp
es
xchg
sub
mov
cmp
jbe
adc
add
fs
mov
adc
add
fldt
push
jae
push
pop
fadds
rep
or
jle
xchg
mov
or
fnstsw
add
mov
outsl
pop
push
sar
mov
not
int
push
xchg
or
xchg
ljmp
adc
mov
inc
pusha
nopl
pop
into
xor
decl
jb
cmp
ja
daa
dec
mov
xor
inc
aaa
mov
repnz
push
mulb
inc
push
push
mov
add
and
lcall
jle
xor
add
pop
or
loop
push
inc
adc
sbb
add
addb
lret
jmp
fstpt
mov
mov
imul
das
je
or
mov
adc
imul
jne,pn
add
sti
aaa
add
jne
dec
inc
lea
inc
mov
jmp
dec
mov
dec
xor
push
movsb
jne
jmp
push
nop
mov
adc
jbe
add
sbb
cli
add
test
or
push
add
inc
cmp
add
mov
push
inc
and
push
xor
or
mov
mov
pop
mov
ret
mov
insb
xor
pop
cwtl
cli
data16
or
clc
lahf
fidivrs
lock
out
mov
lea
xor
aad
mov
add
mov
hlt
fidivrl
or
inc
cmpl
cmp
jne
neg
outsl
leave
push
insb
jne
mov
add
mov
add
cmp
jb
or
ja
pop
push
cmp
push
inc
xchg
sub
xor
push
add
fbstp
inc
inc
shrl
loopne
pop
or
pop
cmp
or
inc
int3
pusha
test
mov
loop
jne
mov
jg
inc
ret
inc
inc
jle
movzwl
sbb
fsubs
jb
rcr
push
lret
cmp
std
dec
pop
shl
add
jmp
cwtl
aas
les
sub
dec
hlt
xor
je
mov
jns
test
jne
xchg
and
mov
push
test
aas
push
mov
mov
or
add
pop
jae
mov
test
in
das
jmp
dec
shlb
arpl
test
sub
push
push
cmp
push
inc
lcall
ds
jbe
xor
push
mov
mov
inc
jg
outsb
outsb
outsb
outsb
or
jge
and
jle
es
outsl
outsb
sub
sub
and
pop
cmp
jl
pop
jle
mov
fst
pusha
sbb
pop
cmp
jp
jb
jbe
mov
or
popa
test
fwait
and
or
je,pn
test
add
je
outsb
and
add
negb
mov
sub
stos
lahf
xchg
sti
adc
sbb
rclb
inc
loop,pt
sbb
push
inc
shl
out
lahf
push
push
mov
inc
and
je
mov
inc
push
mov
push
ljmp
jae
add
mov
es
dec
movsb
add
inc
lahf
mov
mov
add
push
mov
roll
icebp
sti
cwtl
mov
or
xor
push
mov
dec
ret
mov
imul
push
mov
fimull
mov
mov
or
leave
lods
pop
xchg
and
xor
fimuls
pop
pop
ljmp
dec
test
xchg
xor
inc
and
inc
outsl
jo
lea
movl
add
pop
jb
adc
pop
or
movb
inc
cmpl
inc
mov
loopne
inc
push
jo
pop
das
mov
or
xchg
sbb
push
dec
mov
mov
lahf
inc
mov
sbbl
incl
pusha
cmp
outsb
mov
dec
fadds
inc
and
loopne
dec
lcall
fsubr
insl
and
cmp
je
test
adc
push
push
fsts
sti
mov
popf
movsb
xchg
mov
jp
push
jbe
pop
add
xor
add
xchg
in
and
mov
add
cwtl
cmp
in
movb
add
pop
adc
dec
lods
jg
lods
rsqrtps
inc
push
add
inc
mov
lidtl
adc
dec
cmp
add
push
pop
es
inc
sbb
adc
push
pop
roll
or
push
cmp
push
cmp
lock
shll
ret
popa
hlt
stc
add
add
inc
xchg
push
or
scas
xchg
outsb
inc
rorl
pop
push
les
jne
cld
call
adcl
inc
loopne
icebp
movsl
add
sub
pop
or
mov
adc
jbe
add
fwait
jecxz
dec
adc
mov
orb
cli
pop
push
inc
mov
pushl
push
mov
sahf
push
movsl
and
mov
push
outsb
sub
mov
stos
call
sub
sbb
ret
out
xor
mov
lahf
jne
xchg
mov
cwtl
addl
xchg
xchg
dec
nop
xor
jbe
xor
or
or
popa
xchg
jne
iret
push
leave
mov
cmp
or
xchg
cmp
and
inc
and
insl
popa
roll
test
xlat
push
xor
sub
xor
push
lods
idivb
faddp
inc
dec
mov
mov
adc
in
outsl
leave
xor
or
jmp
xor
fprem
mov
xor
mov
js
adc
mov
or
sbb
mov
in
sub
loopne
in
and
and
pusha
mulb
inc
adc
jle
fdivl
xor
test
cmpsl
pop
mov
das
cs
das
dec
xchg
das
sbb
adc
adc
sbb
dec
adc
sarb
sbb
add
jo
dec
push
mov
mov
mov
push
das
adc
je
sbb
je
fucom
aaa
cmp
cli
mov
mov
inc
inc
inc
fstps
inc
or
fcomps
rcll
mov
jne
sbb
adc
cmovb
or
lods
sub
add
push
lcall
pushl
inc
fsubr
cmp
ljmp
push
push
frstor
xor
fs
movsb
or
xor
jbe
jp
xor
mov
sbb
stos
inc
pushl
push
sbb
ss
inc
inc
and
mov
mov
cmp
jne
les
aam
adc
and
push
loopne
pop
cmp
cmpsb
or
push
inc
inc
or
pop
les
add
dec
and
popf
insl
js
push
jmp
test
movsb
push
popa
ja
mov
xchg
sub
js
ja
lods
cmp
xorl
push
mov
jo
and
push
xor
add
add
push
mov
test
add
ret
and
enter
cmp
cmp
das
mov
xchg
nop
jmp
inc
push
sbb
ds
in
adc
pop
je
pop
dec
mov
push
push
rcll
pop
aaa
mov
adc
dec
les
andb
mov
imul
pusha
mov
orl
jl
jg
sub
cs
lret
xor
cmp
lcall
and
and
clc
add
mov
push
rolb
inc
cmp
ficoml
xorb
xchg
push
das
xor
push
jo
rcll
imul
fadds
sbb
add
in
jbe
outsb
jns
jbe
ja
and
movq
mov
xchg
in
xor
mov
xor
cmp
in
cmp
ficomps
divb
adc
adc
mov
add
add
adc
mov
or
data16
jmp
push
outsb
icebp
cmpsb
or
inc
sub
push
xchg
mov
ds
insl
mov
repnz
aam
push
push
push
stos
xor
bound
add
les
and
push
sbb
xor
xchg
sahf
push
jne
mov
int3
adc
jmp
xor
je
rcrb
or
jbe
add
cmovle
and
inc
add
orl
fcoml
sbb
xlat
in
testb
or
or
sbb
cmp
ret
sbbb
js
xchg
push
xor
in
add
sub
stos
insb
aas
out
jne
sbb
les
ss
and
nop
ja
js
or
fdivrs
and
dec
xchg
push
push
movzwl
hlt
adc
pop
inc
push
rcrb
fistpl
cs
std
pop
repz
jne
jne
lret
xor
jns
loop
call
mov
jmp
xchg
mov
xchg
les
shll
rol
and
mov
loop
push
bound
or
mov
insl
cmp
mov
lfs
inc
add
add
mov
hlt
loopne
add
mov
inc
ret
adc
lods
sbb
testl
aam
jbe
jo
orb
addb
and
push
mov
cmp
or
les
mov
sub
mov
data16
negb
gs
out
add
daa
lock
and
and
out
into
sub
test
sbb
or
scas
or
push
fwait
sahf
in
ret
sub
cmp
nop
jae
cmp
or
cmpsl
nop
jb
adc
adc
hlt
mov
dec
inc
inc
pop
addl
imul
or
loopne
sbb
pop
movsb
jl
xchg
pop
fucomp
xorl
imul
arpl
adc
xchg
int3
inc
mov
scas
jns
dec
mov
popa
adc
pop
lds
scas
dec
hlt
idivb
inc
notb
aaa
jbe
push
and
cmp
call
xchg
in
pop
sbb
mov
xor
pop
loop
inc
addr16
out
sbb
and
mov
faddl
les
jne
adc
mov
std
xchg
mov
adc
bound
add
pop
cmp
push
adc
dec
sbb
test
xor
cmp
and
or
and
fs
lea
pop
sub
mov
dec
sbb
fimull
ja
adc
inc
adc
jo
add
dec
lea
popf
mov
push
mov
sub
inc
xor
xchg
out
shll
pop
lret
mov
imul
pop
pop
js
mov
and
fidivrs
xor
ljmp
adc
xchg
or
jns
mov
arpl
sub
loop
outsl
lock
mov
rorb
or
push
pop
or
imul
faddl
inc
andl
adc
or
fisttpl
in
jb
ds
add
dec
add
insb
push
ds
cmp
jecxz
mov
ja
mov
cmp
imul
aaa
add
fsubrs
xchg
xchg
roll
adc
fimuls
dec
dec
jp
or
ljmp
xchg
cs
sub
xor
pop
dec
flds
xchg
les
mov
leave
lcall
js
adc
push
xorb
dec
and
sub
mov
dec
rorl
outsb
imul
mov
and
js
data16
and
mov
and
pop
and
cmp
loop
dec
push
lods
jp
pop
mov
loop
inc
cmp
sub
mov
pop
ljmp
sbb
test
sub
incl
push
sbb
test
mov
xchg
dec
fsubs
clc
int3
shl
dec
jle
es
mov
inc
sub
push
mov
ret
inc
pop
arpl
ja
fld
push
inc
pop
push
repnz
adc
adc
repnz
push
lods
add
mov
faddl
add
lods
lock
xor
sub
popa
adc
xchg
sub
iret
insb
mov
test
adc
and
fs
popw
adc
js
pusha
jb
push
cmpps
cmp
rcrl
xor
push
mov
add
aas
lea
movsl
leave
sub
inc
stos
dec
loope
outsb
mov
or
sbb
mov
pop
xchg
add
subl
push
sub
mov
push
test
sbb
hlt
insl
cmp
test
inc
jge
fs
js
pop
cmp
push
xchg
xor
not
xor
rorb
inc
mov
and
jne
orl
aad
or
stos
inc
test
pusha
sub
repz
push
les
sbb
pusha
aam
sub
jmp
jge
pop
addl
mov
mov
ds
mov
pop
cli
and
push
pusha
push
xchg
mov
sub
lcall
lods
mov
ret
mov
inc
or
dec
shlb
jge
in
mov
add
mov
push
mov
and
inc
insb
adc
adc
add
gs
repz
adc
sub
jp
sub
lock
jg
cmp
inc
mov
je
cmp
and
or
pushf
pop
insb
jmp
jbe
push
mov
xor
add
adc
ret
mov
push
push
jp
in
jns
mov
sbb
dec
or
push
test
mov
jbe
cmpl
pop
clc
repz
enter
cmp
jmp
enter
inc
sbb
xor
ljmp
test
jbe
mov
insb
push
push
jle
dec
push
xor
xchg
je
es
dec
or
sbbl
add
sbb
cmp
shll
add
sub
sbb
sbb
sub
push
xor
push
cmp
fs
cmp
lcall
mov
sbb
mov
imull
mov
fsubr
test
shlb
pop
mov
xchg
push
push
mov
mov
xchg
es
push
fwait
mov
pop
repz
decl
adc
push
jae
push
rolb
lods
mov
xchg
mov
jmp
jne
mov
movsb
sub
enter
in
pushf
aas
add
xor
mov
and
scas
xchg
adc
push
addr16
call
arpl
xor
shl
outsb
mov
mov
lahf
push
add
push
aaa
jecxz
fldl
orl
sub
insl
and
das
adc
shlb
jle
jae
cmp
and
xchg
mov
pushf
add
pop
and
ja
popa
je
dec
sbb
pushf
dec
cmp
shrb
popa
mov
and
es
pop
dec
ret
inc
add
and
adc
test
and
lods
pop
addr16
or
sbb
jmp
xor
jae
or
cmp
subl
add
cs
sar
mov
sarl
mov
cmp
jbe
sub
add
mov
das
sahf
push
call
push
add
mov
ljmp
movsl
xor
jbe
mov
jb
std
pop
adc
ds
in
inc
push
ret
sub
enter
sub
and
mov
pop
mov
mov
dec
cwtl
ret
aad
or
rorb
sbb
xchg
xor
jmp
dec
push
inc
cmp
movsl
pop
xchg
dec
xchg
mov
xchg
inc
sub
clc
add
test
and
add
cs
add
repnz
dec
pop
mov
lock
cmpsb
cmp
push
mov
je
or
lock
jbe
ljmp
sub
pop
inc
xor
push
pushf
add
arpl
jo
jmp
fdivl
add
ret
mov
adc
nop
ret
xchg
jl
push
and
inc
pop
push
xor
mov
jne
ret
addb
inc
jmp
and
rol
push
jbe
pushl
sbb
sub
mov
icebp
sbb
je
push
cmp
adc
cmp
push
sub
adc
push
push
xchg
inc
scas
ret
cmp
lea
and
push
rorl
ds
faddl
xchg
ja
outsl
cmp
mov
inc
sbb
test
sbb
inc
insb
xchg
push
dec
xchg
sbb
dec
idivl
popa
shrl
scas
sub
out
adc
sbb
adc
ret
pop
inc
ss
cmp
add
stos
stc
ja
and
test
add
jne
fmul
jb
sbb
cmp
sbb
lods
xor
jne
mov
mov
inc
sub
add
adc
push
loope
mov
pop
push
jmp
dec
les
dec
aaa
mov
rorl
dec
addb
mov
lea
mov
negl
ret
jg
pop
rolb
push
push
lea
jbe
loope
negl
pop
or
pop
add
int3
jb
repnz
or
xor
stos
sbbb
and
nop
sbb
cld
and
shlb
cwtl
or
mov
or
jmp
add
aam
cmp
rcrb
cwtl
jle
clc
push
pop
ret
cmc
clc
lods
xor
push
push
add
adc
movsb
outsb
fsubl
or
jo
mov
add
and
lods
mov
idivl
inc
arpl
lds
leave
jo
mov
iret
cmp
and
push
adc
scas
add
xchg
pop
cmp
mov
add
jne
jbe
lret
cmp
pop
and
sub
cmp
cmpsb
xor
ss
inc
bnd
pop
test
ret
pop
stos
cmp
push
mov
aam
sub
jne
insb
sbb
sbb
das
adc
add
lods
mov
mov
sbb
hlt
mov
sbb
scas
pusha
xor
call
or
lods
int3
xor
cmp
lea
xor
dec
inc
add
inc
das
push
adc
in
ljmp
aas
push
push
pop
add
xor
mov
sub
rclb
mov
ss
aaa
cmp
mov
inc
adc
mov
or
dec
aaa
add
sbb
out
xchg
addl
outsl
or
bound
mov
mov
cmc
xor
jg
cmp
adc
fildll
loop
das
cmp
add
fcoml
je
xchg
or
jmp
rcrb
sub
cmpsb
mov
call
movsb
and
inc
push
xor
gs
cld
push
cltd
jbe
in
hlt
cmp
jge
cmc
add
mov
rolb
or
or
inc
imull
int3
or
adc
imul
insb
iret
or
inc
push
sub
sbb
adc
mov
mov
mov
dec
das
movsl
sbb
gs
pop
insb
push
adc
adc
add
clc
dec
adcb
mov
lods
jle
addr16
cmc
xchg
sbb
inc
movb
sahf
rol
or
push
mov
mov
mov
dec
or
sbb
adc
or
cmp
adc
cltd
mov
mov
and
push
fwait
lock
jb
pop
inc
add
xchg
add
push
push
inc
push
cmpb
adc
dec
inc
pop
pop
rcrl
insb
dec
aam
and
mov
adc
out
imul
jl
shrb
pusha
loopne
je
int3
mov
sarb
jbe
push
xor
test
xor
sti
mov
mov
pusha
mov
lods
pushl
xchg
push
push
xor
inc
daa
shlb
push
call
xchg
inc
pop
test
mov
adc
nop
dec
mov
mov
mov
test
xchg
mov
mov
add
sub
push
xor
jb
inc
shr
addl
mov
punpcklwd
xchg
xchg
dec
sarb
push
adc
pop
lret
or
dec
and
movb
or
lea
or
lods
dec
shl
shrb
add
jl
or
mov
rorb
and
call
lods
dec
jne
pop
pushf
mov
or
adc
iret
aaa
ret
mov
mov
sbb
mov
jno
push
lock
add
notl
adc
imul
pop
mov
adc
lock
and
shll
imul
sbb
jmp
aaa
lret
pop
pop
clc
push
ss
test
ds
adc
pop
push
cmp
push
sub
or
sub
fimuls
add
jmp
inc
mov
cmp
sub
insl
inc
jl
lcall
push
inc
ficompl
in
xor
and
std
lock
pushf
leave
sbb
dec
leave
ret
pop
shll
xchg
mov
mov
mov
fucom
sub
mov
mov
xchg
add
inc
xor
inc
aam
add
inc
push
mov
lds
daa
lods
enter
cmpsb
lock
push
test
stc
cmp
add
xlat
xor
and
sti
lods
jge
sbb
adc
push
push
pop
add
push
out
xor
mov
call
repz
add
cli
lea
inc
lea
xlat
lret
fsts
imul
mov
aaa
int3
cld
xor
int3
push
leave
mov
inc
cmp
inc
cs
fs
mov
int3
mov
in
sub
clc
or
fistpll
pop
dec
rolb
jl
cmp
je
jl
ret
xchg
iret
adc
rcrl
shll
add
inc
mov
divl
adcb
push
mov
ret
std
pop
ss
add
sub
and
add
inc
mov
cmp
mov
dec
sbb
cmp
sbb
or
cmp
pushf
fistl
out
or
mov
iret
in
loopne
jle
push
pop
test
cs
push
rorb
shrb
pop
cmp
sub
mov
xchg
and
add
cmp
add
ret
lret
cmpsl
or
cmp
adc
xchg
fcoml
cmp
je
mov
or
ds
mov
ss
cmp
out
jle
cmp
adc
rclb
adc
fsubs
cmp
mov
repnz
and
bound
fadd
roll
enter
insl
icebp
daa
xchg
pushf
dec
mov
test
cmpl
je
dec
adc
ficoms
mov
jp
mov
inc
roll
subl
lods
inc
mov
sbb
mov
test
dec
lea
adc
jmp
cmpl
and
ljmp
cmp
sbb
test
aam
fisttpll
sub
mov
xlat
xchg
dec
popa
add
sub
adc
cmpsl
in
adcb
test
stc
adc
adc
clc
insb
lock
xchg
stos
or
js
push
mov
add
popa
je
and
out
clc
in
in
fdivl
push
inc
gs
call
push
and
sub
cli
xor
mov
inc
cmpsb
insb
or
push
or
ss
cs
aas
je
or
sub
jns
ja
jg
lret
mov
push
jae
sub
shrb
ror
or
call
inc
cmpsb
add
jno
adc
push
dec
cmp
jbe
push
mov
add
add
xor
add
mov
sbb
mov
mov
fcmovu
sbb
out
sahf
test
fmull
test
or
pop
dec
fadds
and
fwait
mov
aad
push
mov
inc
hlt
pop
shll
test
mov
or
pop
xor
adc
call
sub
lock
stc
push
je
mov
sub
fwait
jmp
mov
inc
xchg
je
shrl
sub
mov
andb
add
xor
push
lea
cmpsl
push
lock
xchg
or
cwtl
ja
movsl
mov
dec
das
jbe
cmp
sbb
dec
enter
pop
scas
mov
insb
dec
adc
cld
xor
sbb
pop
cmpsl
xchg
or
dec
add
subb
and
mov
enter
push
scas
ret
jmp
and
push
adc
and
pmulhuw
aad
popa
add
nop
inc
pop
add
gs
mov
fs
jmp
mov
test
and
push
daa
inc
push
jns
add
adc
stos
pusha
rcll
push
cmp
lret
mov
adc
cld
xor
mov
inc
adc
inc
mov
or
sti
sbb
je
mov
sub
movsb
cmp
xchg
jbe
push
dec
inc
cmp
dec
dec
dec
clc
jne
mov
push
jbe
loop
test
cmp
dec
xchg
lea
add
adc
xor
stos
es
jo
sub
mov
xchg
mov
hlt
hlt
iret
popa
in
jns
or
push
dec
dec
push
push
sub
pop
pop
pop
outsb
add
cmp
call
insb
cmpsl
or
inc
sbb
mov
hlt
jne
push
js
lock
fistl
cld
loopne
fnstenv
out
nop
pop
push
mov
mov
xor
push
repz
mov
in
add
or
add
xlat
cld
clc
pushl
add
inc
es
lea
mov
int
mov
nop
mov
push
xchg
lahf
lahf
lret
cmp
xchg
pop
cmp
mov
inc
push
mov
xchg
rorb
cmp
lea
add
mov
pop
and
cmp
xchg
mov
cmpsl
in
push
shrb
cmp
mov
or
push
mov
add
mov
call
cmc
lea
mov
ljmp
mov
mov
popf
adc
dec
sub
ds
adc
jne
cmp
cmp
adc
or
jg
popf
xchg
push
add
imul
mov
das
dec
mov
in
je
test
sbb
fcomps
push
mov
inc
add
in
inc
cmp
es
mov
leave
inc
xchg
pop
fmuls
stos
scas
push
pop
rolb
sub
ret
jne
iret
and
sbbl
lea
aam
adc
loopne
stos
movsb
push
and
add
xchg
push
fiadds
mov
cmpsb
inc
xchg
ja
or
or
and
enter
adc
popl
fxch
sbb
imul
shlb
xchg
jns
mov
pop
sub
jle
clc
cmp
lret
clc
scas
mov
push
push
int
mov
arpl
pop
or
into
sub
out
movsb
dec
cmp
mov
jl
pop
outsl
sbb
mov
add
ss
icebp
punpcklbw
or
cmp
je
mov
pop
std
jns
outsb
pop
jl
sub
cmp
call
lea
fidivrl
inc
or
aas
dec
in
adc
inc
in
addr16
test
lcall
pop
mov
cmp
into
scas
jg
pop
call
mov
insb
push
lock
insb
flds
dec
cmp
jb
clc
out
xor
test
sarl
cmpb
outsb
popl
loopne
cmp
adc
mov
jge
lods
es
jmp
push
mov
mov
mov
aas
ret
sbb
mov
jmp
enter
aad
mov
pop
or
nop
inc
movsl
outsl
pushf
pop
push
inc
loopne
mov
es
leave
add
aas
push
cmp
sarl
in
cs
sbb
in
or
aaa
in
sub
scas
icebp
add
xchg
pop
xchg
outsl
mov
push
inc
adc
es
mov
mov
pusha
addr16
addr16
das
repnz
mov
push
cmp
pop
ret
enter
clc
and
subb
jecxz
insl
les
fdivrs
add
testb
add
xchg
inc
lock
and
mov
fists
xor
mov
xor
jp
hlt
cmp
les
jmp
mov
ss
dec
mov
fiadds
ds
add
mov
enter
mov
pop
je
push
jae
adc
mov
jmp
cmp
add
mov
add
sbb
mov
out
mov
enter
loopne
adc
mov
in
jns
addr16
andl
cmc
inc
sbb
dec
test
mov
push
xchg
mov
gs
xchg
push
popf
jnp
xchg
repnz
push
shr
push
mov
pop
lret
xchg
loopne
pop
xchg
in
dec
push
cmp
or
xchg
xor
mov
jbe
jmp
test
jge
xor
hlt
je
ret
or
pushf
mov
call
or
add
test
lods
add
out
in
jl
cmp
sbb
testl
adc
lret
add
je
mov
inc
insl
rol
adc
insl
popa
dec
sub
bound
mov
out
aaa
xor
call
mov
clc
add
out
jbe
xor
jno
repnz
add
pusha
shll
or
imul
cmp
sahf
or
add
push
inc
sbb
or
mov
inc
lds
sbb
popl
mov
dec
aad
mov
pushf
lahf
fisttpll
mov
movl
int
popf
loopne
inc
pushf
jbe
or
inc
test
add
push
dec
fcompl
lock
divl
fists
xchg
in
xchg
and
dec
hlt
test
add
and
fiadds
stc
sbb
xchg
pop
rorl
sub
cmc
xchg
mov
aam
cmp
sbb
push
insb
loope
xor
adc
xor
test
into
pop
sub
and
popf
xor
in
push
push
lods
push
sbb
mov
add
pop
ret
or
pop
dec
and
xchg
clc
gs
pop
cmp
test
sbb
popf
mov
lret
push
dec
add
movsl
arpl
das
sub
and
mov
jmp
js
xor
add
movsl
nop
into
insb
loope
inc
mov
pop
inc
insl
lock
insb
mov
dec
js
rcrb
add
pop
dec
dec
add
loopne
stos
lea
pop
push
cld
mov
lea
mov
clc
push
push
iret
and
cmpsl
mov
jp
std
mov
add
xchg
cltd
jno
rcrb
and
sub
icebp
jo
jecxz
lds
clc
stos
ror
or
in
mov
loopne
mov
fmulp
mov
pop
idivl
ret
jae
sub
rcrl
sub
cs
ljmp
dec
push
mov
push
popa
push
lret
add
enter
cmp
mov
jnp
test
inc
inc
mov
xor
mov
pop
jbe
aaa
pop
repz
mov
lock
jae
sub
ja
lock
pop
and
xchg
sbb
sub
inc
in
pop
lcall
enter
shrd
mov
jge
xchg
aam
ret
shll
push
mov
inc
addl
add
adc
fildl
push
pop
aad
sub
add
add
xor
cmp
xor
sub
stos
add
pop
add
in
jp
ret
cmp
push
lods
mov
mov
xlat
push
mov
inc
lcall
popa
inc
cmpl
and
adc
rcrb
xor
mov
sahf
mov
data16
cmp
sub
push
outsb
mov
dec
lock
mov
jmp
xor
cmp
js
push
and
fimuls
inc
pop
int
cmp
add
or
and
pop
xor
or
push
pusha
daa
ja
ja
add
jle
out
and
dec
push
mov
iret
bnd
and
testb
js
cmc
ret
push
jae
lea
push
sub
add
lret
sbb
adc
lods
popa
imul
stos
insb
shll
and
imull
dec
pop
ret
cmpsb
in
test
or
adc
adc
sbb
or
and
test
push
mov
mov
jae
inc
jmp
push
jp
sub
dec
cmp
sub
cmp
ret
sub
sub
add
add
dec
pop
push
inc
add
fsub
sub
clc
subl
sub
xchg
lods
push
fisubs
mov
mov
pop
imul
movsb
dec
and
mov
push
push
je
pop
adc
push
xor
push
add
repnz
push
int3
ds
add
in
cmp
incl
add
lds
mov
cmc
adcb
insl
imul
sbb
mov
pop
pop
ret
jbe
push
inc
inc
or
int
xchg
or
loop
cmc
test
outsl
push
cmp
add
push
and
or
pusha
add
and
fs
and
push
jle
xor
mov
aad
je
mov
ret
jae
sbb
add
cmpb
ss
inc
mov
xor
push
add
jne
xchg
mov
imul
sbb
jb
test
lock
push
sbbl
unpcklps
mov
jmp
pop
imul
fs
inc
or
mov
push
adc
bnd
lret
adc
or
mov
and
add
stos
mov
mov
adc
in
fcmovnu
shlb
lea
cli
ja
cmpb
out
aas
and
sbb
ret
push
enter
test
mov
cmp
cmp
inc
in
addb
mov
jecxz
mov
mov
and
inc
xor
jmp
out
into
gs
imul
imul
lods
xor
jmp
lods
inc
mov
add
testb
popa
ljmp
jbe
push
mov
cmp
jb
sbb
cwtl
jb
pop
xchg
adc
imul
andb
dec
cmp
adc
inc
repnz
mov
cmp
inc
fsubrl
mov
jl
idivl
shrb
push
mov
lock
push
push
enter
lea
mov
incb
js
sub
jbe
mov
adc
and
mov
push
mov
inc
sub
icebp
mov
sbbb
insl
mov
sub
pushf
pop
adc
inc
popa
fstl
and
sti
out
mov
inc
push
lock
jo
rorl
mov
adcb
jbe
inc
sbb
cmp
inc
mov
orb
or
push
sub
out
cmpsl
inc
add
or
pop
and
inc
and
push
adc
xor
add
sbb
fwait
mov
xchg
jbe
inc
shr
lods
cmp
cmp
sbb
push
pop
lret
js
add
add
popa
addb
pop
call
movsb
cmp
sub
in
push
adc
xlat
push
mov
dec
fisubrs
sbb
xchg
sub
jle
ret
sahf
lods
dec
mov
sbbb
adc
add
jl
cmp
ret
dec
add
push
dec
xlat
mov
dec
xor
and
scas
cltd
scas
mov
fildl
xor
jne
sahf
cmp
pop
fstps
push
cmp
and
add
repnz
mov
add
mov
inc
pop
push
mov
mov
adc
call
mov
sub
pusha
or
orl
or
aaa
lret
dec
fwait
sub
lret
es
add
mov
cwtl
dec
je
loope
inc
mov
xlat
adc
sahf
pushf
push
xlat
jb
xchg
adc
push
push
cld
test
jne
or
aaa
cmp
adc
pop
xchg
lea
cmc
into
sub
sbb
push
cmpsl
sub
xor
pop
dec
lcall
adc
mov
adc
add
repnz
pop
sbb
pop
sbb
mov
fwait
mov
int3
mov
inc
sbbl
in
mov
movsb
xchg
lea
or
inc
cwtl
xchg
mov
mov
push
mov
and
fistps
pop
pop
mov
filds
movsl
mov
movsb
jo
popa
adc
sbb
stos
xchg
dec
or
lea
adc
xorb
xor
adc
js
sbbb
call
pop
leave
and
rolb
test
stos
cmp
xchg
pop
inc
push
or
xor
xchg
pop
pop
add
enter
xchg
lock
adc
addl
jns
push
mov
ja
cmp
mov
cmc
jmp
mov
inc
popa
in
jmp
xchg
fstps
in
rolb
add
je
add
push
push
out
loop
jbe
dec
and
repz
daa
or
iret
push
imul
push
or
and
imul
shrb
and
pop
inc
adc
dec
test
adc
sub
jo
sub
adc
sbb
insl
jne
pop
jmp
mov
loopne
fcomp
mov
xor
mov
orb
and
add
cmp
icebp
add
pop
loope
repnz
cld
std
xorb
mov
adc
pop
mov
mov
shl
jbe
outsb
sbb
cmp
mov
movb
jo
lock
cli
jns
push
mov
nop
mov
movzbl
pop
cwtl
xor
shlb
add
out
or
jnp
fs
add
add
cli
add
mov
xchg
xchg
sarb
or
xor
pop
add
dec
add
add
xorb
mov
jo
xchg
jo
cmp
ljmp
mov
mov
push
jo
out
shll
xor
inc
cmp
jl
pop
sub
mov
jmp
ja
or
jle
shlb
push
xor
adc
inc
repnz
xor
ret
push
lock
es
insb
xchg
shll
mov
inc
dec
cltd
out
or
fistpl
pusha
jle
adc
iret
xor
jle
xor
pop
ret
push
das
and
push
push
jl
daa
mulb
cmp
xor
pop
arpl
add
das
nop
jmp
in
aaa
fimuls
fwait
push
fcmovb
sbb
cs
mov
ja
inc
mov
cmp
or
lock
and
cmp
xor
mov
push
lea
stos
dec
lods
imull
xor
sub
das
xlat
arpl
das
adc
inc
cmp
jmp
call
push
inc
xor
mov
lock
add
or
enter
in
lods
std
add
add
add
mov
fildll
jmp
add
loope
shl
xor
mov
mov
ficomps
inc
add
mov
mov
dec
or
xor
fidivl
aas
je
mov
cli
jge
ret
mov
sbb
rcll
lea
add
jo
ficoms
push
lret
or
sbb
dec
mov
xchg
jne
pop
and
popl
fsts
fs
js
cs
or
mov
sbb
mov
daa
hlt
jae
add
lock
or
mov
push
add
mov
hlt
inc
jmp
fldl
adc
sbb
insl
lods
pop
add
dec
mov
xor
pop
hlt
icebp
xor
or
sub
lock
and
popf
sub
or
add
pop
dec
pop
jno
cwtl
mov
cmp
and
test
xor
mov
lret
jle
add
pushf
cmp
stos
jg
imul
add
add
mov
and
mov
fisubl
mov
icebp
cmp
push
hlt
movsb
mov
ljmp
inc
sbb
adc
adc
pop
add
sub
frstor
xchg
mov
add
pop
shrl
pop
dec
add
or
jmp
dec
stos
or
jae
xor
addl
xchg
jns
and
push
sbb
sub
loopne
pop
imul
sbb
and
mov
mov
cmpsb
xchg
inc
mov
ret
or
xchg
mov
jae
mov
mov
insb
shlb
xor
xor
movsl
adc
cmp
sub
aad
mov
hlt
lea
shrl
sub
pop
call
pop
push
inc
test
ss
jmp
push
js
pusha
sti
daa
rol
xor
call
jnp
sub
cmp
and
mov
inc
aaa
cmp
repnz
add
adc
xchg
mov
jecxz
aas
jge
xchg
insl
or
dec
add
aam
xchg
adc
push
ret
mov
insb
fstps
add
sub
inc
cmpsb
fsin
pusha
cmp
divl
lods
sbb
sbb
es
arpl
jo
mov
test
fistpl
aam
add
testb
sbb
dec
fimuls
jp
xor
xchg
xor
push
xor
test
testb
inc
or
lret
jo
adc
movl
mov
pop
jo
popa
sbb
pop
jmp
rorb
in
add
sahf
push
or
sarl
dec
lcall
sbb
loopne
push
pop
pop
mov
adc
ljmp
adc
imul
sub
insb
and
clc
or
dec
push
shrl
mov
mov
xchg
or
and
sub
fisubrs
outsl
sub
ficompl
sbb
adcb
stos
je
sub
push
adc
repz
sbb
inc
or
and
jmp
and
adc
nop
imul
loop
mov
push
imul
cwtl
test
lods
xor
push
repz
or
ret
mov
or
clc
fdivl
xor
xor
jne
or
mov
cmp
cld
lods
pop
push
mov
sbb
sbb
pop
test
movsb
xor
jne
push
sbb
cmp
call
mov
sbb
fsubs
adcb
xchg
dec
inc
test
mov
push
sub
das
packsswb
iret
addb
out
dec
mov
adc
cmpl
sbb
cmp
inc
add
pop
push
jmp
je
mov
pop
mov
fisttpl
cli
repnz
push
or
push
or
addb
push
fsubl
xchg
pop
or
cmp
mov
or
call
add
in
mov
test
push
jo
sbb
add
imul
cmp
inc
inc
jne
sbb
cmpsl
into
and
mov
or
mov
push
orl
inc
add
fdivs
dec
pop
add
mov
inc
cli
add
jo
out
cmp
jle
xchg
mov
scas
and
mov
jecxz
sub
mov
mov
inc
cmp
in
mov
nop
add
mov
jae
pop
mov
sbb
sub
sbbl
arpl
dec
insl
xchg
test
stos
jno
jmp
mov
or
pushf
add
dec
test
cmpsb
pop
ret
arpl
inc
inc
pop
scas
inc
sbb
push
or
insb
adc
push
insb
xor
xchg
push
push
aaa
or
jo
and
mov
pusha
loopne
push
jp
push
idivl
push
shlb
pop
aas
or
je
imul
nop
sub
inc
jo
jne
addl
in
add
loopne
sbb
out
sbb
mov
adc
imull
adc
adc
pop
push
mov
fdivrs
call
lret
jne
movsb
jns
add
add
add
rolb
data16
test
mov
push
pop
jecxz
sbb
je
cmp
je
xor
sub
adc
testb
je
cmp
mov
adc
or
fimull
cmp
aam
jmp
sub
sbb
es
push
adc
jge
add
add
mov
sub
add
xor
add
pop
in
push
pop
and
push
cmpsl
inc
xor
test
std
pop
subl
add
jo
es
loop
jae
cmpl
xlat
jp
ja
in
sbb
ret
lcall
dec
adc
jne
jg
add
add
dec
xor
mov
or
loop
cmp
insl
loopne
rclb
mov
jmp
mov
pop
push
and
add
stc
clc
jg
inc
clc
add
dec
hlt
push
push
mov
imul
sbb
or
inc
mov
orb
push
cmpsb
leave
jno
add
jb
jl
outsb
add
push
push
inc
mov
push
cmpsb
jno
insl
shlb
sub
pop
and
cmp
addr16
mov
sbb
add
loopne
lock
mov
add
inc
sbb
sbb
rcrb
stos
add
repnz
roll
outsb
lock
fiaddl
pop
cmpb
leave
jmp
clc
pop
adc
lea
push
sbb
jne
sub
ds
adc
bswap
lret
and
mov
sub
sahf
mov
pop
fnstenv
das
test
stc
jmp
and
dec
arpl
lret
jmp
push
xchg
in
hlt
dec
pop
pop
xor
mov
call
test
sub
daa
out
mov
out
std
cmp
fnstsw
cwtl
nop
inc
insb
and
pop
sbb
xor
mov
fistpl
mov
fisubrl
arpl
cmp
add
fs
xor
ja
clc
jne
cmp
inc
push
sub
testl
push
adc
sub
push
les
sub
insb
mov
pop
sub
push
lds
push
ret
les
lock
loope
cmp
loopne
test
add
aaa
js
add
shlb
push
fadd
bound
cmp
sbb
sbb
cmpsb
sbb
or
faddl
pop
mov
in
sti
sub
sahf
les
xchg
push
out
scas
pop
sbb
cltd
push
or
out
push
xchg
push
add
push
and
add
fs
ss
insb
rcrl
push
pop
arpl
or
mov
inc
push
test
aam
out
xlat
ljmp
pop
cmp
push
sub
loope
cmp
or
pop
lret
fsubl
or
inc
jmp
dec
rorl
jno
add
pusha
pop
lret
fstpt
fdiv
add
dec
inc
push
int3
mov
ja
push
cltd
push
xor
enter
xchg
mov
xchg
mov
mov
out
or
add
test
cmp
pop
mov
mov
rcrl
or
test
jo
xor
sbbb
js
cld
pusha
dec
adc
cmp
xor
push
cmp
or
adc
in
fiadds
loop
lcall
inc
adc
cmpl
push
ljmp
fdivr
outsb
or
cmc
push
cmp
adc
mov
roll
cwtl
dec
sub
mov
mov
sub
aad
sbb
test
xchg
dec
adc
lods
fildl
rcrb
xchg
sub
cmpsl
adc
js
scas
jl
outsl
inc
adc
push
mov
repz
insl
cmp
inc
sbb
or
push
ds
cmpsb
mov
test
sub
subl
inc
mov
lea
enter
inc
cmp
mov
push
xchg
push
stc
pop
cmp
dec
pop
in
pop
cmp
or
loop
pop
insb
add
lods
pop
in
jle
test
ja
int3
dec
dec
pop
dec
xor
adc
xlat
icebp
add
xchg
cmp
in
jmp
jmp
xorl
jle
rorl
fdivs
mov
add
fidivrs
int
and
mov
jnp
xchg
aaa
adc
cmp
loopne
outsl
je
je
je
rcll
rcll
and
cld
pop
ds
sbb
or
sub
lea
pop
mov
add
ja
lds
dec
push
ds
jae
loope
mov
adc
cmp
dec
xor
dec
pop
jnp
mov
adc
inc
je
sar
into
mov
repz
pop
mov
adc
sbb
repz
push
fdiv
jo
ret
ss
and
aad
cmpsl
inc
dec
loopne
pop
int3
adc
dec
imul
or
add
fcmovb
and
daa
add
jo
sbb
sbb
loope
pop
aaa
mov
loope
js
add
add
xchg
inc
and
bound
out
jb
mov
mov
insl
jmp
in
cmpsl
dec
daa
push
push
mov
inc
mov
pop
lods
scas
pop
inc
insb
push
cld
gs
dec
jecxz
rolb
add
jge
pop
rolb
push
cmc
cmpsb
lahf
sti
and
push
push
lret
jo
ss
jl
and
dec
movsb
jbe
mov
leave
bound
fistpl
inc
pop
inc
inc
inc
test
mov
pop
jb
cmp
das
ja
dec
or
jl
shll
into
fs
les
sbb
or
adc
push
xlat
mov
dec
jae
jp
adc
loopne
ja
fiadds
clc
adc
adc
je
mov
xor
cld
cmp
push
push
push
int
jg
mov
add
and
jne
push
xchg
mov
push
push
js
pop
jecxz
jne
mov
int
fld
lock
mov
push
aas
jmp
dec
andb
push
dec
adc
insb
stos
inc
mov
movsl
or
jne
pop
sbb
xchg
or
pop
je
jmp
or
push
dec
movsb
ret
jno
sub
adc
push
out
lea
cwtl
movsb
loop
test
sbb
addb
cmp
cli
jg
jb
dec
mov
cmp
lea
ljmp
jb
icebp
jnp
xor
neg
mov
inc
cmp
mov
and
inc
adc
push
dec
andl
test
leave
dec
inc
sbb
movl
orl
mov
rclb
add
cs
sahf
adc
or
sti
and
sub
out
xlat
adc
pop
in
mov
jl
inc
orb
add
sbb
inc
data16
loopne
jnp
jmp
xchg
inc
cld
ss
stos
mov
mov
push
jge
rol
xlat
add
push
push
test
push
sarl
jmp
inc
data16
cmpsl
and
cltd
adc
in
clc
inc
add
jne
cmp
mov
push
sbb
mov
push
arpl
call
cmp
mov
mov
shll
xchg
dec
mull
rcrb
dec
je
sbb
mov
jmp
adc
dec
mov
and
push
inc
xor
mov
sbb
adc
shll
sub
dec
adc
jle
cmp
mov
sbb
je
movl
jo
mov
int3
inc
or
inc
mov
fdivs
jl
sbb
pop
inc
ds
cmp
repz
add
data16
sbb
imul
mov
test
jnp
jge
int3
add
inc
in
xchg
lock
push
stmxcsr
ljmp
or
jae
inc
adc
and
mov
and
dec
test
sti
jmp
movq
movaps
push
clc
repz
outsb
jae
xor
jle
xor
cli
rorb
push
lahf
jo
lret
je
mov
mov
jge
repz
or
jg
mov
fstl
jnp
mov
adc
jg
cld
stos
rcr
aam
ret
or
add
adc
lea
ja
fiadds
pop
add
sahf
divb
add
pop
pusha
jle
mov
addsd
int
add
sbb
notl
push
dec
sbb
pop
push
fucomp
xor
leave
inc
cmpsl
nop
sbb
adc
insl
clc
ja
lods
dec
mov
or
bound
xchg
lret
int3
xor
push
js
sub
mov
test
sub
pop
ljmp
pop
xor
es
inc
mov
call
mov
jg
pushf
dec
mov
jb
xor
jmp
js
sbb
jmp
add
inc
jbe
adc
enter
add
pop
ljmp
fucomip
rorl
test
push
jp
and
clc
ljmp
cs
movsb
je
push
stos
loop
mov
push
test
jle
xchg
mov
inc
inc
fldcw
ja
jle
mov
cmp
mov
andb
mov
mov
cmp
jne
jb
sbb
subb
lds
sub
div
adc
cltd
repnz
loopne
fdivs
shrb
adc
stos
push
and
lods
mov
sbb
call
xchg
sbb
dec
or
es
mov
in
adcb
movsb
rcll
lock
sub
in
stc
pop
xchg
test
rclb
push
inc
bound
out
push
test
xchg
imul
mov
dec
push
aas
xor
push
adc
outsb
xor
jne
inc
cmp
dec
xor
shr
dec
adc
loope
cmpsb
js
les
mov
pop
and
popa
adc
pop
mov
mov
das
inc
arpl
leave
jmp
dec
dec
jle
jo
fimuls
inc
inc
aad
insb
lea
hlt
cmp
fwait
lods
in
jle
iret
or
xchg
arpl
dec
sahf
aaa
xchg
cmp
adc
cmp
loope
rcrb
popa
aam
loopne
in
es
or
mov
mov
sub
in
mov
mov
stc
icebp
lods
push
pop
and
mov
es
out
imul
pop
or
mov
mov
add
enter
cmpsb
mov
sbb
ret
test
shl
shlb
dec
leave
sbb
mov
rolb
cmp
mov
mov
jge
or
adc
rcrl
inc
inc
cmp
aam
lret
jne
sbb
xlat
cli
dec
imul
xchg
lock
jnp
movsl
jo
add
adc
or
sbb
jp
inc
das
inc
add
fs
pop
js
movl
pop
cmp
pop
call
test
bound
inc
or
dec
je
add
add
loopne
jne
orl
and
ljmp
pusha
cwtl
adc
out
xor
cwtl
js
test
mov
aad
or
imul
add
ret
xor
sbb
mov
fiaddl
inc
jecxz
add
stos
mov
ret
inc
fmull
mov
pop
rclb
clc
rolb
fidivrs
push
adc
jno
push
adc
psadbw
adc
fimull
loopne
jne
idivb
clc
test
test
jmp
cmp
or
pop
mov
adc
push
jo
imul
in
addb
add
lock
int3
sub
lock
lods
adc
dec
pop
add
dec
cmpsl
andl
push
sbb
inc
divb
ss
testb
insb
mov
ffreep
out
lret
jbe
push
xor
pop
div
test
inc
es
or
bound
cld
inc
imul
jl
mov
push
lock
and
lock
push
adc
fidivs
sub
mov
pop
xor
inc
mov
add
push
scas
outsb
rcll
movsl
add
sub
inc
rolb
pop
add
ficomps
fcmovne
xorb
aaa
pushw
dec
lds
repz
loope
les
fwait
jle
push
fdivrs
xchg
repnz
incl
int3
xor
js
adc
insb
jecxz
sbb
fsubrs
lock
push
jge
sub
rorl
in
insl
daa
mov
push
cmp
sbb
movsb
nop
jnp
cwtl
mov
inc
sbb
pop
mov
inc
loop
or
repz
inc
push
mov
mov
or
dec
cmp
scas
jo
loope
mov
enter
aam
push
push
cmp
iret
add
xrelease
push
shr
or
push
jmp
imul
dec
mov
js
jo
cmp
stos
loopne
out
add
cmp
mov
xor
dec
pushl
test
sub
imul
out
pop
mov
je
cmpsb
fdiv
ret
xchg
add
mov
jbe
ret
aad
add
or
add
loop
dec
inc
cwtl
hlt
mov
sbb
insl
or
mov
movsl
mov
loopne
in
lods
idivb
fwait
ds
out
add
cmp
pushf
mov
xor
push
pop
sbb
add
insl
shlb
lods
in
or
jle
cmp
pop
jl
addr16
lret
lea
add
push
mov
mov
cmp
loopne
or
mov
and
stc
int3
and
mov
testb
inc
mov
adc
test
inc
ds
loopne
lret
dec
dec
or
sbb
add
je
inc
scas
fnstsw
push
aas
push
dec
in
in
jp
push
jmp
inc
cmc
pusha
adcl
or
test
lock
leave
xor
push
dec
push
adc
jge
ret
jmp
inc
les
mov
loope
and
movl
cmp
stos
shrl
loopne
mov
out
ret
pop
mov
add
xor
in
fidivl
dec
inc
or
inc
mov
adc
adc
mov
jl
push
mov
lea
test
pop
in
pop
std
pop
mov
jne
mov
loop
andl
in
ret
mov
dec
mov
inc
adc
call
xor
outsb
aaa
cmc
add
dec
sbb
mov
in
cmp
and
mov
or
jge
pop
pop
pop
lock
push
and
and
loopne
and
jb
push
sahf
repz
lahf
pop
pop
push
inc
or
les
mov
insb
sbb
popa
sub
lcall
push
ljmp
nop
xor
leave
or
pusha
or
leave
divb
bound
scas
inc
or
push
push
adc
jae
bound
mov
cmp
es
pop
arpl
movsb
and
dec
or
ficompl
inc
inc
dec
adc
cltd
mov
ss
in
cmp
rcrl
mov
sbb
push
pop
in
jbe
cmp
je
and
add
sub
bound
sub
xchg
pop
ret
lea
repz
imul
jo
push
pop
add
enter
add
daa
mov
add
add
sarl
iret
imul
jno
jle
add
add
pop
push
flds
add
sahf
xchg
mov
or
sbb
push
pop
jb
cmpb
or
or
pop
enter
or
sub
cmp
or
pop
xchg
inc
enter
loop
or
enter
or
or
in
jns
add
push
nop
addr16
push
ja
jae
inc
push
push
rsqrtps
jb
fimuls
pop
adc
fwait
sub
fdivs
adc
inc
or
mov
adc
add
lcall
adc
xchg
add
pop
adc
adc
xor
mov
push
iret
enter
push
push
pop
pop
movsl
mov
sbb
cmp
sbb
cmp
pop
enter
sbb
jb
jb
sbb
sbb
dec
in
mov
jb
sbb
push
and
bound
sbb
sbb
sbb
and
pop
pop
sub
incl
add
sub
cmp
mov
mov
add
cmp
xchg
dec
and
mov
and
sbb
inc
cmp
add
push
in
jno
repnz
sub
shr
jns
push
ret
adc
aad
cmp
enter
mov
cmp
fwait
out
rol
sbb
add
fmulp
dec
call
nop
adc
dec
dec
cwtl
jmp
xor
ljmp
jmp
jmp
incb
in
in
cltd
sbb
out
repnz
sahf
enter
out
out
jge
inc
enter
out
pop
lock
imul
in
icebp
icebp
ud1
sahf
repnz
std
repz
hlt
hlt
cmp
pushf
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xor
cmp
pop
testl
cmp
clc
clc
inc
push
fsubs
clc
cltd
adc
iret
in
repnz
stc
lock
cli
cli
sbb
sbb
iret
sti
sbb
jb
jns
stos
cld
cld
cld
je
mov
xchg
aaa
cld
push
packuswb
sbb
mov
xor
sbb
add
adc
ret
inc
or
and
and
add
lahf
sahf
adc
in
cmp
scas
cmpsb
movlps
jecxz
jecxz
xchg
pop
add
std
sti
in
in
push
in
fdiv
inc
bound
daa
push
sub
sbb
out
xor
call
jns
sti
sub
dec
jae
and
lret
add
jmp
in
add
cli
popf
cli
dec
in
rcrl
push
fsubs
out
cltd
push
lock
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
sar
add
stc
and
jns
lcall
pop
mov
sbbb
inc
repnz
out
clc
dec
push
cmp
cmp
mov
cltd
mov
sub
orl
mov
dec
dec
and
sbb
sar
sub
mov
frstor
scas
lret
add
mul
pop
ret
xchg
pop
leave
shl
scas
idivl
inc
in
mov
out
out
xchg
add
out
out
xchg
pop
leave
and
and
dec
in
rcrl
and
sub
shl
das
xchg
inc
pop
pop
mov
xchg
notb
insb
out
xchg
inc
testb
sub
or
jno
imul
loop
push
mov
pop
xchg
cmc
jno
jns
jae
pop
jmp
push
push
dec
cmc
div
imul
cmp
int3
jns
and
cmp
clc
clc
jecxz
or
xchg
hlt
stc
popa
cmp
xchg
hlt
cli
cli
jno
jno
xchg
or
sbb
das
pushw
data16
cmp
out
push
push
jo
test
lahf
pusha
adc
xor
jb
ds
xchg
or
repz
xchg
inc
pop
subl
xchg
pop
pop
lcall
mov
repz
add
pop
push
sbb
xchg
bnd
and
mov
xchg
repnz
and
mov
in
in
cmc
mov
repnz
andl
and
aaa
xchg
mov
mov
mulb
xchg
pop
dec
jo
icebp
jb
ret
xchg
pop
pop
test
cmp
sub
cmc
cmc
adc
and
add
jecxz
ljmp
test
popf
lock
cmp
lea
jns
jne
push
lock
mov
push
lock
push
leave
xlat
and
test
lods
dec
std
ret
dec
scas
and
dec
add
out
xlat
push
pop
cmovno
jns
push
fcoms
inc
int3
add
les
add
inc
mov
jp
push
jnp
nop
mov
adc
jne
dec
jo
adc
dec
add
cli
mov
add
push
outsl
mov
pop
add
and
add
lods
adc
sbb
ds
push
sub
adc
int
mov
adc
sbb
int
imul
jl
int
shrl
add
adc
push
push
imul
jg
out
or
ret
iret
out
cwtl
les
roll
dec
sbb
add
mov
enter
add
mov
decl
jle
rolb
add
lock
xchg
inc
cld
jb
test
mov
xor
imul
lcall
imul
add
add
add
push
sub
push
mov
movsl
es
hlt
push
rolb
popa
call
lods
daa
or
aas
stos
lock
mov
sbb
hlt
mov
push
es
mov
daa
push
and
xchg
sbb
std
les
push
or
and
add
adc
or
push
xor
add
sub
sahf
fmuls
mov
testb
repz
adc
dec
add
mov
and
add
and
fsubrl
clc
inc
fcmovnbe
inc
sbb
push
dec
jg
decl
adc
sub
enter
push
js
int
fadds
addb
scas
ds
movsb
mov
xchg
sbb
neg
bound
adc
mov
add
jl
mov
add
or
adc
and
je
rep
add
dec
ljmp
outsl
cwtl
push
imul
add
loopne
dec
inc
stos
test
jge
cmpsl
and
lcall
aaa
xchg
push
sub
in
inc
add
lret
add
jecxz
loopne
aad
pop
fsubp
add
mov
js
lds
inc
push
lods
xchg
icebp
add
or
insl
sub
mov
pop
jns
jne
adc
int
pop
inc
jb
pop
ja
add
sub
sub
inc
inc
inc
inc
xchg
shrb
xor
cmp
sbb
xor
mov
frstor
pop
inc
push
inc
and
push
adc
push
mov
push
gs
cmpsb
and
pop
push
push
sub
add
or
or
and
mov
pop
roll
mov
add
sbb
pop
cmp
pop
add
rolb
fisubl
cld
mov
xor
xor
arpl
sbb
add
jns
pop
inc
mov
das
and
pop
add
lret
mov
jo
or
add
and
lods
push
mov
repz
sub
lea
mov
test
or
jmp
loope
inc
xchg
out
xor
xchg
cmp
inc
jmp
cmp
jne
ja
stos
scas
sbb
add
lret
xor
dec
out
adc
xchg
dec
adc
cmp
in
sub
cmpsb
push
xor
andl
xor
pop
stos
jl
sbb
or
and
repz
lret
insb
adc
pop
jne
dec
add
test
jne
inc
lds
fwait
andb
xor
or
imulb
add
hlt
mov
sbb
aas
add
je
mov
sub
cmp
cs
imul
adc
and
adc
sbb
insb
js
adc
movsb
stos
and
inc
mov
jle
push
das
mov
add
imul
pop
adc
scas
pop
xor
dec
neg
xchg
cmc
mov
or
test
cmp
add
push
fs
lret
jbe
fimull
add
inc
add
or
mov
pop
rol
mov
das
in
add
je
mov
sbb
mov
mov
push
push
iret
mov
pop
push
and
into
push
xor
lahf
ret
mov
push
jo
aas
popa
push
xchg
les
sub
inc
lcall
xchg
push
fcoms
sti
cmp
mov
jnp
shrb
jl
pop
mov
filds
push
imul
push
cmp
jne
lcall
push
cmp
jne
mov
jne
call
ljmp
add
push
or
out
add
inc
adc
jmp
xchg
cld
cmp
std
jmp
cld
push
xchg
sahf
sbb
mov
loopne
cs
mov
inc
jb
lret
pop
jne
shr
repnz
push
adc
pop
lock
pop
pop
repz
xchg
pop
mov
pop
das
lds
leave
jns
xchg
jne
mov
ret
ret
pusha
jnp
in
cltd
push
fwait
std
or
pop
fs
mov
cmp
adc
addl
pop
rorl
sahf
add
lret
xchg
xchg
xchg
es
gs
pop
or
cmpsb
es
pusha
push
add
sbb
fimull
scas
push
add
sahf
add
repz
adc
adc
rol
inc
js
rcll
sbb
pop
rolb
int
adc
stc
aad
hlt
lods
add
push
jmp
mov
rcll
jne
sub
sbb
inc
inc
cmp
scas
adc
dec
push
dec
outsb
out
jns
fs
loopne
mov
dec
mov
rorl
push
lcall
lret
in
sbb
cwtl
ja
add
sbb
nop
or
xchg
js
sbb
daa
icebp
inc
dec
cmp
sbb
mov
fildll
add
inc
pop
hlt
jae
ret
jmp
sbb
pop
cs
clc
fiaddl
inc
mov
icebp
call
mov
and
stc
or
push
stos
add
testb
mov
sub
fstpl
xchg
out
out
sbb
or
clc
mov
test
push
mov
mov
dec
fdivrl
inc
adc
and
mov
add
ds
adc
dec
pop
xor
mov
das
movsl
repz
int3
add
push
push
push
adc
lret
add
pusha
rorl
sub
cmp
andb
stc
mov
push
pop
and
add
scas
push
pop
and
std
test
xchg
test
sar
mov
rep
jmp
loopne
mov
cmp
and
mov
enter
sub
jl
lea
sub
or
push
fsubs
mov
aaa
or
inc
add
add
mov
int3
lea
dec
add
pop
pusha
push
movl
dec
cmp
cmp
jnp
pop
or
push
inc
push
cmp
sub
iret
repz
mov
mov
call
call
popf
out
sahf
hlt
hlt
clc
clc
cld
fldt
push
or
lea
lock
fldz
jns
adc
jmp
and
adc
nop
inc
pop
xor
add
pop
inc
fsubs
push
mov
into
jl
adc
or
pop
mov
out
add
neg
fimuls
and
stc
sub
xchg
fistpl
adc
cmp
pusha
fiaddl
jl
xchg
frstor
mov
add
sahf
inc
push
out
push
add
cs
je
cmpsb
lea
add
ljmp
mov
push
mov
repz
aam
in
cs
repz
aaa
sbb
sbb
adc
iret
repz
adc
or
test
repz
add
icebp
jns
xchg
or
push
sub
sub
push
add
inc
pusha
mov
pop
ja
pop
add
test
idivl
push
xor
mov
mov
incl
inc
decl
cs
and
test
lods
mov
hlt
push
cld
cmp
xor
jbe
push
cltd
pop
idiv
add
mov
pusha
or
sbb
add
mov
shlb
dec
mov
mov
fisttps
cmp
xor
sub
jmp
cmp
jne
add
jae
dec
cwtl
mov
inc
outsl
les
push
mov
dec
pusha
fmull
add
sub
outsb
subl
rcl
dec
faddl
lea
jo
mov
imul
sbb
add
outsl
pop
lcall
je
or
dec
dec
push
pop
mov
je
push
push
dec
fisttpll
aam
lods
or
mov
xchg
out
xlat
xor
xor
adc
pop
decb
push
movsb
stc
mov
inc
and
sbb
or
int
das
sbb
cmp
pop
inc
add
lret
or
int3
filds
outsb
cltd
push
or
xor
mov
pop
add
push
push
xchg
sub
inc
add
testb
mov
push
pop
xorb
xlat
mov
lret
cmp
jbe
jmp
cmp
sbb
sub
sub
insl
or
cld
andb
jge
push
push
cltd
pop
idiv
xchg
or
xor
xchg
inc
out
cmp
and
push
outsb
cmp
cmp
in
xor
mov
xor
push
pop
imul
fs
add
loopne
adc
xchg
dec
inc
sti
fs
jmp
jl
mov
sbb
mov
adc
or
loope
adc
sub
sbb
subb
sbb
sbb
inc
mov
mov
sub
pop
incb
inc
jns
xor
pop
cmp
mov
iret
fdivr
add
sti
cmp
jno
sub
sbb
mull
call
xor
mov
jae
or
test
push
or
jbe
mov
push
fdivp
daa
adc
xor
mov
enter
jg
insl
cmp
orb
jle
sti
ljmp
mov
mull
iret
jno
mov
mov
ja
int3
dec
jo
mov
je
mov
inc
add
dec
jne
mov
mov
push
inc
call
push
push
adc
push
lahf
xchg
inc
cs
shrb
ss
cmp
out
pop
push
test
xchg
inc
adc
push
aaa
andl
inc
sub
inc
cmp
pop
stc
pop
or
xor
jg
xchg
scas
inc
mov
inc
jmp
push
pushf
sub
or
fsubrl
pop
inc
and
es
adc
push
je
mov
mov
mov
push
movsb
xchg
popf
cmpl
sub
and
mov
or
call
clc
iret
xchg
add
push
mov
orl
inc
adc
or
out
call
ret
in
push
mov
out
mov
aas
movsl
or
roll
cmp
xchg
rorb
sbb
clc
push
pop
cmp
icebp
dec
push
fadds
cld
mov
and
les
adc
adc
mov
mov
negl
decl
inc
jg
jbe
and
sbb
mov
dec
fdivr
shlb
test
js
test
cs
mov
clc
xchg
mov
decl
add
movsbl
fs
orb
sbb
add
fidivrl
cmpsl
cmpsb
fisttpll
dec
je
and
mov
or
push
cmp
sbb
mov
mov
push
push
jle
je
les
mov
incl
pushl
pusha
push
mov
push
inc
sbb
xchg
test
or
and
loop
cmpsb
pop
or
bound
dec
mov
sbb
or
xchg
dec
push
xor
hlt
jmp
les
xchg
in
xchg
mov
add
movsl
addr16
test
adc
cld
imul
cmp
and
sbb
test
add
shll
stos
inc
or
lcall
pop
inc
mov
add
popa
rcll
lcall
out
push
add
fdivr
frstor
rorl
dec
movsb
jb
push
xor
jns
jb
hlt
push
mov
mov
adc
sbb
fildl
fsubrs
cmp
ror
add
push
or
lea
cmp
and
jmp
dec
jnp
cmovge
or
and
das
roll
repnz
push
dec
sbb
stos
into
add
xor
orb
adc
jo
mov
sbb
dec
or
clc
inc
pop
insb
pushf
ret
add
mov
sbb
stc
gs
repz
xchg
stos
in
or
mov
add
adc
sbb
jp
lahf
jge
popa
push
mov
outsb
jns
inc
push
nop
jno
aam
pop
push
je
movsl
push
cmp
inc
sbb
mov
mov
cli
mov
popa
rolb
jl
dec
jae
or
sbb
inc
push
jmp
add
add
ja
or
and
inc
inc
call
pop
lcall
outsl
inc
sbb
sti
inc
les
or
out
sub
test
cltd
pop
stos
call
mov
ss
stos
xchg
fdivl
and
fucomp
es
inc
jmp
aas
imul
push
lea
xor
pop
das
decb
leave
leave
inc
push
imul
sbb
cmp
add
shlb
pop
arpl
and
fldz
push
movsl
movsl
mov
data16
jns
or
jne
push
syscall
push
leave
or
rep
fistps
pop
popa
adc
divb
add
jg
orb
xchg
cmp
stc
lock
shrb
mov
addr16
jge
outsl
adc
jmp
pop
cmpsb
xor
fsubl
pop
xchg
push
jno
ss
mov
fs
icebp
clc
sarl
inc
mov
loop
aam
cli
jno
std
adc
inc
add
adc
clc
outsb
jl
fs
pop
out
xchg
and
or
pushf
test
test
cs
sub
shll
in
inc
inc
loopne
sub
into
dec
sahf
push
cmp
nop
jbe
jbe
inc
or
js
adc
add
adcl
pop
and
push
cmp
loopne
push
sub
outsb
fdivrl
cs
sub
bound
rorl
inc
popa
sbb
in
call
xor
and
sub
jecxz
ret
gs
clc
jge
jnp
or
fcomps
mov
or
shlb
xchg
add
aam
xor
cmp
push
aam
pushf
enter
lret
sub
in
mov
jmp
mov
dec
shll
push
xchg
adc
dec
clc
ret
cmp
std
data16
push
into
inc
adc
mov
enter
push
outsl
sbb
pusha
js
xchg
adc
adc
inc
inc
js
or
popa
jbe
sub
pop
das
or
xorb
jmp
mov
fidivrl
cltd
mov
push
adc
loope
sub
sub
into
inc
mov
rclb
nop
loopne
adc
das
dec
and
inc
or
dec
cmp
jo
mov
lret
scas
add
inc
mov
sbb
ja
insl
push
or
mov
jno
hlt
add
popa
ret
mov
fildl
fcompl
mov
xorb
in
ret
or
repnz
inc
xchg
lea
xchg
xlat
inc
and
jg
adc
test
cmp
icebp
sbb
rorl
mov
push
xor
rcrb
rorl
cmp
add
mov
inc
sbb
xor
out
mov
xor
mov
mov
sbb
loopne
or
les
mov
push
incl
inc
fldcw
sub
sub
call
inc
sub
lods
lcall
add
nop
add
lret
cltd
loope
ret
aam
jno
lea
out
cmpsb
mov
add
ret
mov
out
pop
adc
or
pop
out
sub
jmp
xor
cmp
sub
push
ja
js
dec
jo
push
sbbl
neg
mov
push
fbstp
or
add
jmp
ds
dec
loopne
adc
test
mov
cmp
jb
push
in
jg
xor
jb
lahf
mov
dec
mov
mov
dec
dec
add
inc
push
ds
or
adc
and
cltd
ret
ret
jo
hlt
or
add
pop
and
adc
mov
sub
push
xchg
imul
jl
xor
dec
int
mov
cmp
sbbl
cmp
cmp
imul
add
mov
pusha
inc
cmp
scas
in
in
mov
subl
adc
in
jbe
and
and
lcall
lret
xor
lock
ds
and
add
inc
imul
add
cmpb
cwtl
jp
mov
dec
sbb
add
jbe
pop
iret
test
loopne
push
dec
push
clc
pop
ljmp
adc
cmp
loope
aaa
je
dec
stc
or
sub
inc
sub
xor
mov
mov
xor
test
add
xor
or
mov
inc
mull
mov
pop
mov
xor
cmp
data16
push
fcmovb
push
notb
mov
push
lock
add
mov
sub
mov
out
mov
push
adc
push
pop
dec
ss
or
or
add
addr16
imul
mov
es
pusha
or
xor
xor
stc
pop
pop
sbb
ret
mov
push
cmp
sub
adc
das
inc
mov
or
or
or
fists
fsubs
icebp
jae
jo
addl
adcb
call
xor
insl
inc
cli
and
gs
or
push
into
out
xor
push
daa
mov
add
scas
test
mov
and
enter
push
add
xchg
adcb
rol
inc
mov
shrl
mov
adc
sub
mov
inc
mov
iret
dec
loopne
push
push
fldl
adc
sbb
xchg
or
mov
out
or
mov
fstl
rcrb
test
xor
pop
cmp
pop
imul
push
lea
loopne
sbb
add
or
call
adc
popf
pushf
mov
sbb
inc
int3
add
imul
add
sbb
push
push
inc
sbb
lods
push
orb
mov
je
adc
test
or
push
dec
or
rcrl
inc
dec
jb
mov
mov
call
pusha
adc
lcall
lea
in
add
or
xchg
pop
or
jo
xor
enter
lods
dec
cld
jl
jg
pop
fdivrs
add
into
adc
and
add
push
cmp
aad
mov
xchg
lock
add
sub
add
adc
push
or
paddd
insl
dec
rol
das
and
push
adcl
or
xor
or
enter
push
lock
movb
inc
and
je
loop
mov
pop
push
lods
rclb
fmulp
test
sub
sub
cmp
push
adc
sub
std
data16
sbb
cld
jns
and
popl
lcall
inc
mov
pop
test
movl
cmp
xor
push
ss
cmp
inc
enter
fs
mov
faddl
fadd
mov
fiaddl
leave
adc
sub
cmp
rcll
or
sbb
inc
push
push
in
adc
andl
or
je
dec
xchg
add
adc
ja
or
test
xchg
hlt
orb
test
inc
andb
cli
mov
loope
and
pusha
sub
mov
add
loopne
into
pop
sub
mov
inc
ja
or
dec
jne
lea
and
or
xchg
bnd
mov
add
sub
inc
hlt
jb
inc
lahf
aam
outsl
sbb
imul
add
aas
xor
mov
and
and
lea
push
push
rcrb
lock
pop
mov
fwait
test
lea
or
jno
mov
mov
cmp
cld
ficoml
jae
push
push
test
and
cmp
loopne
push
dec
inc
inc
cld
dec
pop
cmp
dec
and
mov
sbb
in
jae
orb
mov
je
sbb
mov
cmp
test
add
mov
mov
lahf
inc
ja
sti
lods
leave
sub
mov
cmp
mov
and
cli
or
imul
and
jae
mov
test
ljmp
pop
shrb
inc
add
mov
imul
jge
jo
scas
shlb
jg
or
ja
test
or
scas
or
es
add
hlt
cmp
data16
aaa
subb
jno
xor
mov
scas
test
cmc
and
pop
cmp
jmp
mov
pop
and
rorb
fisubs
add
cmp
push
cmpsb
push
sbb
inc
popf
cmpsl
cmp
xchg
inc
jge
in
cmp
std
jne
shr
pop
cmpsb
sub
stos
enter
push
ljmp
add
jg
push
and
add
mov
push
or
adc
in
mov
cmp
bound
outsl
shr
adc
shlb
lock
out
into
mov
fidivl
push
jmp
or
movl
push
and
push
jg
dec
xor
inc
sbb
inc
xchg
add
rolb
rorb
sbb
cmp
jbe
enter
jne
mov
dec
lods
jo
add
inc
pop
leave
std
jl
push
inc
adc
imul
test
dec
add
mov
aaa
jmp
push
stos
cmp
push
testl
inc
cmp
mov
inc
inc
adc
shrl
inc
xchg
push
jg
pushf
jge
add
jb
mov
xor
push
xchg
inc
dec
push
mov
inc
or
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
test
ds
jl
sbb
mov
divb
rcrl
inc
push
mov
inc
dec
jne
icebp
jnp
adc
test
nop
add
cwtl
add
gs
loop
or
jmp
cmp
or
cwtl
cmpl
xor
call
insb
mov
pop
add
push
cwtl
inc
jno
aam
or
sub
mov
and
sub
nop
add
ss
mov
inc
sbb
int
outsb
sbb
jno
lds
sahf
inc
and
rol
xor
lcall
xor
push
push
xchg
and
int3
cmp
mov
xlat
cli
repnz
add
jns
and
push
repnz
and
fs
mov
mov
inc
or
add
out
push
orl
lret
pop
sub
out
lcall
fucomip
call
or
mov
jmp
add
ret
or
mul
jmp
mov
xchg
jno
es
cmc
test
ds
xor
rcl
cmp
fs
sbb
cmp
leave
xor
daa
loop
js
mov
std
and
cmpsb
cmpl
adc
or
or
cld
mov
pop
and
sbb
cmp
pop
pushl
data16
nop
inc
mov
sbb
fstpl
lahf
das
adc
mov
les
xor
and
clc
subb
and
rcrb
cwtl
shlb
insl
movsb
mov
mov
sbbl
outsl
outsl
inc
leave
sbb
aaa
out
jle
cmp
push
cmpl
add
push
adc
lds
cmp
sahf
inc
add
xor
dec
or
or
inc
or
daa
jns
xorb
test
mov
mov
mov
ficomps
cmp
mov
aaa
cmpl
push
xchg
or
pcmpgtb
add
push
push
sarl
xor
sbb
js
or
xor
xor
aam
sub
pop
rolb
mov
out
inc
sub
jle
inc
or
pop
in
dec
or
xchg
clc
add
xor
and
push
in
clc
lock
adc
mov
sbb
or
pusha
ret
loope
add
aaa
insb
xchg
sbb
mov
incb
dec
jmp
push
ficomps
push
jbe
pop
mov
out
sahf
xchg
frstor
mov
jne
sbb
push
cmp
rcr
pop
add
daa
mov
das
or
mov
cmc
repnz
pop
sub
push
pop
xor
out
inc
sti
adc
add
cmc
add
push
xor
je
pop
pop
xlat
cs
out
call
bndstx
cwtl
sbb
cmp
es
mov
push
add
outsb
ja
pusha
or
aas
push
pop
test
mov
pop
in
cwtl
mov
pop
arpl
or
sbb
cmp
movsb
inc
cmp
mov
mov
cli
xchg
popf
aaa
add
lret
insb
push
cld
xchg
and
inc
or
push
push
push
push
pop
movsb
xchg
inc
add
adc
jmp
shlb
push
bound
fwait
adc
or
fnstcw
outsl
add
and
test
inc
sub
jbe
inc
ret
dec
push
adcb
nop
in
xor
push
push
movsb
pushf
popfw
adc
dec
mov
rolb
or
mov
rol
xor
inc
int
push
mov
adc
push
popa
adc
clc
rcl
inc
jmp
and
sbb
jb
pop
xor
inc
and
jb
inc
dec
push
sbb
and
sbb
test
jle
hlt
push
mov
adc
dec
jnp
sbbb
scas
iret
insb
and
pop
cmp
je
jle
fwait
shrb
test
sbb
insl
jg
outsb
adc
andl
xor
pushf
push
push
lahf
fistps
dec
jns
fucom
movsb
lret
mov
out
in
jb
test
hlt
ja
adcl
pushf
jmp
and
daa
test
xor
jno
push
int3
dec
orb
ja
mov
aad
mov
repz
xchg
xchg
lret
push
inc
mov
and
mov
pop
push
bound
gs
jo
jb
xchg
mov
or
push
xor
add
das
xor
add
ja
movsb
jp
pop
jp
fwait
inc
sub
andl
mov
popf
sub
mov
out
push
xor
jle
sub
lods
lods
mov
loopne
fcoml
lods
lods
mov
mov
clc
or
mov
les
or
pushf
popl
add
shll
enter
dec
cld
adc
push
setle
sub
aam
or
xchg
mov
roll
sub
lahf
lea
js
ljmp
jb
mov
punpcklbw
pop
jmp
in
js
lcall
aas
xorl
xor
push
mov
orb
insb
or
fwait
test
jmp
mov
adc
andb
add
jae
test
add
js
push
adc
loop
adc
repz
add
pop
and
test
add
pop
cmp
fs
mov
or
pushf
adc
adc
cmp
mov
clc
out
lock
call
repz
enter
sub
add
push
jmp
repz
cmp
xchg
pusha
pop
mov
sbb
fldt
pop
nop
les
call
inc
dec
push
pop
mov
mov
out
fstl
and
je
iret
repz
test
mov
jecxz
faddp
or
push
fsubr
pop
pop
xor
int
adc
cmpsb
pop
sbb
test
cmp
cs
push
push
call
adc
mov
inc
out
das
es
adc
movl
jle
jo
pop
cmp
dec
mov
inc
mov
not
out
add
rorl
jge
inc
mov
or
test
sbb
cmp
mov
xor
and
add
es
add
icebp
adc
or
add
or
clc
cmp
jecxz
and
mov
clc
test
lea
scas
add
lea
fdiv
mov
sbb
call
sbb
adc
xorl
inc
mov
enter
test
or
inc
or
je
dec
xchg
xor
dec
dec
adc
adcl
cmpsl
jns
pop
mov
or
sub
cmp
push
lods
xchg
rol
push
push
jge
jmp
or
or
cmpl
pop
and
je
rclb
xchg
data16
or
push
dec
ret
adc
and
add
jl
add
adc
pop
out
jbe
push
bound
xor
xchg
xchg
sbb
and
and
int3
sbb
and
fisubrs
xor
out
popa
inc
add
outsl
and
push
das
dec
ret
adc
lds
arpl
or
loope
mulb
fsubrl
loopne
cmp
sub
loope
call
sub
mov
mov
outsl
push
sbb
stos
sbb
dec
in
lds
hlt
jecxz
jmp
lock
cmp
cmpsl
mov
push
inc
and
sbb
push
pusha
in
shl
pop
dec
ret
and
fsts
sub
sbb
ret
or
loop
pop
xchg
mov
in
js
inc
pop
mov
sbb
loope
or
add
sub
fbld
add
add
and
add
xchg
test
mov
mov
lea
inc
cmp
push
das
inc
call
push
pop
xor
add
bound
imulb
popa
loopne
jmp
inc
loop
ret
test
daa
jmp
xchg
rolb
sbb
out
into
faddl
and
movsb
mov
add
sub
mov
shrb
or
fildl
data16
mov
mov
dec
clc
inc
or
test
mov
leave
xchg
rcrb
mov
jl
xor
push
aaa
jecxz
inc
xor
test
dec
dec
sbb
faddl
movsb
push
mov
adc
jbe
sub
shrb
push
fnstenv
sbb
ret
jle
js
push
pop
cmp
pop
divl
or
js
mov
ds
mov
dec
scas
xchg
inc
jle
push
push
jne
sub
or
dec
ljmp
jns
aam
sub
or
inc
ret
push
sub
pop
lock
mov
loopne
add
mov
pop
inc
arpl
xor
xchg
iret
loopne
ret
shl
and
and
push
pop
int3
or
push
lock
push
xchg
inc
outsb
mov
add
xchg
xchg
aam
mov
jo
push
mov
mov
pushf
mov
pop
adc
add
push
pop
je
adc
imul
xchg
dec
push
pop
cmpl
pop
adcb
movsb
mov
jg
sbb
jo
out
xchg
fwait
sbbl
gs
sti
sub
or
cs
lret
clc
aam
fadd
not
mov
jne
xor
inc
jecxz
mov
xchg
test
popa
addr16
pop
sbb
movzwl
test
in
or
loopne
xlat
xor
es
inc
subb
dec
inc
shlb
jnp
mov
lea
ficompl
jl
ret
cmpb
mov
add
rcrl
pop
sar
pop
mov
ficompl
xchg
pop
dec
das
outsl
inc
add
mov
in
jmp
aam
clc
push
pushf
lret
clc
fsubs
ret
call
decb
add
ljmp
sbb
into
pushf
pop
or
add
ret
addr16
orl
or
adc
cmpsl
cmp
mov
adc
cmp
aas
mov
sub
arpl
mov
fisttps
lea
ja
movsl
mov
dec
enter
es
out
pop
enter
movsl
hlt
hlt
out
sub
stc
cwtl
je
or
inc
rcrl
out
je
lock
test
outsb
loope
insb
cmp
push
mov
add
sti
loop
in
adc
and
pop
or
enter
add
orb
enter
movsl
jg
jmp
cltd
sbb
or
imul
outsl
cmc
jne
pushf
data16
sbb
pop
xlat
inc
jl
xor
movsb
mov
sub
jbe
pop
cmp
pop
shll
jbe
jb
or
sbb
cmp
cmp
adc
or
add
mov
ret
add
hlt
or
loop
fdivr
stos
push
cmp
dec
nop
and
lahf
mov
jae
jle
test
pusha
popf
dec
aam
mov
pop
push
jne
das
mov
mul
lock
testb
pop
and
in
pop
movsb
addl
dec
sti
setbe
mov
sub
in
sub
inc
mov
hlt
add
jnp
aad
adc
inc
inc
push
insl
cmp
sbb
xor
xor
int3
negl
mov
fdiv
push
dec
lret
xor
push
ss
addb
cmp
fstpt
inc
mov
push
mov
movb
xor
mov
int3
stos
fnstsw
sub
leave
sarl
lcall
and
inc
mov
dec
mov
pop
sbb
xorb
or
or
lea
cs
andb
pop
test
sub
call
add
into
add
addr16
mov
push
outsb
je
cmp
xchg
mov
sbb
aaa
cmp
aas
add
pusha
add
add
fbld
test
jl
mov
or
lods
add
rolb
mov
adc
adc
pop
cmpsb
sbb
or
adcb
mov
mov
fstl
into
ret
sti
movsb
std
cmc
pop
cli
jne
mov
jne
mov
jmp
cmp
icebp
jmp
insl
cmpl
incl
int3
push
andl
sub
mov
jbe
out
jl
call
cld
adc
sti
mov
jbe
ret
dec
sub
and
add
sti
inc
mov
test
lea
and
lcall
mov
cwtl
inc
call
in
sub
addb
cwtl
stos
mov
push
push
pop
inc
xor
cwtl
push
push
outsb
mov
sbb
jae
addr16
incb
pop
dec
mov
adc
inc
daa
add
adc
push
call
pop
data16
push
js
dec
push
sub
lret
out
mov
jecxz
jne
push
in
push
fbstp
inc
push
adc
sub
jecxz
in
rorb
jmp
aaa
int3
je
cltd
test
dec
sub
pusha
sbbl
adc
pop
mov
jecxz
nop
pop
fimull
cltd
scas
jecxz
mov
or
sbb
lahf
cmp
rorb
lret
pop
mov
or
outsl
lods
cmp
jne
and
lea
stos
and
or
push
inc
dec
cld
loopne
aam
cltd
push
pop
and
das
sub
stc
cmp
xor
or
xchg
clc
sahf
add
mov
outsb
rcrl
xchg
sub
inc
cmp
add
push
mov
dec
rcl
add
jmp
mov
movb
inc
jmp
cmovl
or
jmp
dec
add
xchg
jb
in
mov
repz
push
aam
cmpsl
insb
je
gs
sub
mov
sub
mov
jmp
test
cmpsb
and
sub
sub
sub
sub
or
pop
shl
jb
or
push
jp
push
mov
data16
lea
add
adc
sbb
push
jbe
dec
adcl
jne
cmpb
cmp
call
in
fistps
rcll
sbb
popa
xchg
dec
pushf
test
inc
push
dec
clc
dec
lods
add
cmpsb
orb
push
sti
push
jo
xor
and
and
inc
dec
testl
ss
adc
loop
outsl
movsl
daa
pop
mov
sbb
movsb
cmp
test
add
push
jg
dec
add
cmp
adc
test
data16
fs
or
mov
pop
xor
clc
cs
addr16
xchg
push
push
or
imul
cli
mov
subb
mov
sbb
xor
pop
ljmp
pop
mov
ret
lea
pop
ret
add
mov
movsl
pop
or
and
shlb
outsb
or
push
lcall
mov
out
push
mov
xchg
inc
or
es
std
jecxz
mov
rcll
or
add
mov
jl
push
pop
pop
cmpsb
xor
fcoml
add
out
sti
insb
insb
push
dec
xor
pop
fldl
in
push
movsb
jge
push
andl
adc
lret
mov
push
ss
outsb
push
adc
jmp
pop
jne
mov
push
push
cmp
cs
dec
arpl
sbb
inc
scas
and
lds
jb
adc
pusha
out
push
or
lea
test
cmp
adc
dec
xchg
xor
fsubs
mov
mov
adc
enter
mov
pop
mov
adc
add
adc
jmp
rcl
in
das
aas
test
xchg
popf
sub
clc
push
add
cld
shr
mov
imul
xchg
mov
inc
int3
add
mov
or
jbe
pusha
cld
daa
push
xor
sbb
mov
out
mov
test
clc
dec
nop
dec
divb
sar
dec
cmp
jbe
push
pop
mov
dec
or
adcb
ljmp
and
mov
shr
lea
not
and
decb
jne
jbe
dec
fsubs
sbb
lea
xor
pusha
cmp
pop
add
mov
jl
push
dec
pop
add
add
pop
and
push
or
movsb
add
clc
and
mov
push
shlb
js
add
and
sti
add
in
dec
pop
cmp
xchg
mov
add
fimuls
lds
sub
fsts
movsb
jno
jno
mov
jg
mov
shr
not
and
add
fnsave
loopne
mov
dec
stc
push
pop
xor
lret
pop
pop
pop
dec
add
mov
mov
repnz
nop
fimuls
xchg
lea
mov
inc
add
pop
dec
or
adc
negl
ss
mov
mov
inc
mov
mov
icebp
mov
and
ret
inc
lret
call
jl
clc
mov
jmp
dec
adc
push
mov
or
pop
adc
xchg
or
jbe
jp
bswap
jmp
adc
push
and
mov
mov
dec
xlat
ret
and
loope
add
scas
fistps
add
push
call
aas
gs
push
or
adc
andl
add
decb
adc
inc
test
dec
add
add
and
call
mov
cmc
jne
push
push
mov
sbb
add
inc
das
das
int
push
mov
inc
xchg
jp
dec
adc
or
jl
push
cmp
or
or
shr
fsubl
mov
xchg
inc
mov
or
mov
push
lock
adc
dec
sub
cwtl
outsl
push
popa
cmp
and
cmp
add
std
cltd
dec
stc
negb
les
cwtl
and
pop
jge
adc
and
xor
or
adc
mov
dec
int
jmp
orl
loope
push
cmp
fcmovb
data16
popa
test
roll
ljmp
ret
imul
inc
clc
pop
aad
mov
int3
push
mov
dec
jne
or
or
push
push
pop
int
and
sbb
mov
inc
sub
shr
mov
inc
orl
orl
or
adc
jge
loop
hlt
inc
cld
lock
call
adc
add
je
fsts
xchg
ret
movsb
and
rclb
or
adc
fs
inc
pop
hlt
cmp
pop
mov
mov
lock
stos
incl
dec
inc
jne
or
lds
not
and
les
or
adc
ror
sbb
sub
pop
shr
xchg
mov
or
cld
adc
adc
icebp
add
jmp
pushf
jle
xor
shrb
adc
jecxz
stc
lods
dec
mov
int3
push
sub
adc
xor
mov
movsb
inc
stc
sbb
clc
jge
jb
rolb
es
add
mov
nop
dec
or
mov
add
push
jns
test
arpl
sub
add
repnz
pop
push
sub
adc
pushf
sar
dec
mov
int3
fwait
pop
push
hlt
lea
data16
ss
jg
or
imul
push
jns
push
pop
adc
lcall
add
nop
scas
mov
data16
and
js
sbb
sub
adc
inc
insb
xor
adc
fldenv
stos
inc
and
clc
jl
add
add
lea
mov
imul
dec
insb
pop
xor
push
sar
dec
jo
xor
jp
movsb
pop
iret
and
xchg
into
pop
lock
cld
xor
cmp
fwait
cmp
je
filds
cmp
push
mov
je
add
fbstp
mov
add
adc
adc
fimull
or
dec
lea
mov
push
xchg
sahf
jbe
mov
mov
push
cmp
pop
push
cs
mov
test
pop
jb
xlat
cmp
dec
add
sbbb
imul
dec
insb
lock
scas
arpl
and
les
push
dec
push
push
push
jge
mov
shr
adc
mov
mov
cmp
dec
or
mov
cs
nop
cmp
and
decb
xlat
dec
inc
add
pop
xor
push
hlt
call
sbb
fwait
or
fnstenv
nop
jnp
add
imul
lock
aaa
arpl
pop
testl
mov
and
das
jecxz
inc
imul
and
js
sbbb
repnz
je
mov
loopne
or
and
ret
cld
inc
mov
dec
pop
iret
jne
inc
ret
or
mov
dec
movsb
push
inc
or
cli
xchg
aad
mov
nop
lret
fcmovnu
gs
dec
mov
and
jne
mov
lock
sbb
push
pop
outsb
leave
inc
test
inc
push
aad
inc
fcompl
sbb
jle
cld
add
sbb
xchg
dec
jo
jp
jge
iret
push
mov
cmp
fisubs
pop
mov
mov
pcmpeqw
in
lock
jmp
adc
sub
dec
mov
inc
pusha
dec
bound
dec
push
and
push
clc
into
xor
inc
test
xor
jp
cmpsl
movsl
call
push
fs
pop
xor
sub
push
lcall
push
or
dec
sarl
lock
or
inc
or
dec
or
push
mov
rclb
adc
push
std
loopne
or
adc
cmp
shrl
and
outsb
test
lea
ds
sbb
into
push
pop
add
lods
ds
subl
roll
leave
xchg
repnz
sbb
cmc
cmp
loopne
sbb
or
out
or
xorl
pop
add
jp
rcrl
xor
inc
sbb
adc
loopne
ret
clc
dec
test
sti
sub
lahf
aam
icebp
push
xor
hlt
jp
mov
push
inc
cwtl
and
test
loope
adc
and
add
fsubp
movb
shlb
cmp
push
test
cs
flds
inc
cmp
cmp
sub
add
push
mov
add
sahf
cmp
mov
rcrl
adc
cmp
and
insb
lock
lret
test
xchg
jl
dec
cmp
xchg
jp
adc
or
mov
push
xor
mov
shll
inc
mov
push
pop
fcomp
outsl
in
notb
adcl
xchg
xchg
push
mul
xchg
imul
out
pop
jne
push
in
adc
pop
inc
xor
mov
sub
and
dec
cmp
sahf
xlat
mov
out
rclb
inc
push
or
pop
shlb
sbb
roll
add
xchg
cmpsl
pop
jl
mov
out
dec
fimull
xchg
test
and
insl
lds
or
xchg
stos
imul
add
add
idivb
add
loopne
xor
mov
insb
mov
call
inc
dec
jne
daa
fmull
test
into
sub
xor
inc
idivb
lods
shlb
nop
pusha
jns
or
into
inc
jbe
add
add
jo
add
lods
aam
xchg
dec
jp
hlt
mov
jne
popa
jns
xor
mov
mov
jp
adc
cmp
in
loop
call
pop
lcall
int3
mov
movsb
in
je
scas
pop
add
cmp
mov
pop
jns
rorl
sbbb
hlt
imul
test
mov
lea
sbb
lcall
mov
rolb
xchg
and
movsb
mov
cmp
idivl
out
dec
or
or
ficoms
jmp
push
cmp
xchg
insl
xor
ret
pop
add
sbb
xchg
arpl
fsubrl
cmp
sub
seto
leave
lea
jp
leave
sbb
scas
and
hlt
fidivrs
nop
hlt
hlt
icebp
test
cmp
push
inc
pushf
cwtl
orl
fsubrl
pop
and
or
sbb
jg
adc
jns
leave
add
cmp
xor
ss
cmpsl
cmp
lcall
push
sbb
jmp
int3
pusha
add
les
movsb
rorb
std
pushf
xor
ret
jne
in
movsb
in
push
enter
lret
mov
call
test
dec
in
js
lock
aaa
xor
dec
lahf
in
sbb
leave
adc
leave
enter
xchg
inc
js
call
js
js
js
enter
neg
lret
inc
sub
insl
and
dec
sbb
cmp
xchg
call
push
pusha
xchg
push
jns
inc
mov
repnz
repz
inc
add
mov
mov
ja
fcmovbe
sub
push
test
es
mov
call
add
mov
rep
popf
je
push
hlt
xchg
xchg
push
xchg
sub
lods
nop
and
and
xchg
jne
nop
add
sub
or
lods
enter
add
mov
adc
push
leave
and
rcrb
js
loop
in
add
add
in
mov
nop
xchg
test
test
pop
cmp
popa
mov
call
cld
enter
js
outsl
sarb
pop
mov
rdtsc
lods
or
cmc
or
push
push
mov
lcall
addb
out
jns
iret
leave
adc
cmpsb
xor
mov
jne
cmp
mov
stc
lea
jecxz
add
cltd
js
lock
lret
arpl
add
scas
jge
xchg
ret
xlat
dec
loope
xchg
pop
jne
pop
mov
sub
je
or
cmp
lods
xor
mov
pop
add
or
xor
and
and
or
scas
enter
inc
enter
mov
adc
clts
mov
push
cmp
sub
inc
add
rolb
out
mov
mov
shr
lds
sbb
mov
push
cld
sbb
ret
mov
cmp
jne
and
cmp
and
adc
mov
push
cmp
inc
repz
add
add
pop
inc
or
nop
sbb
xchg
lods
movsb
mov
cmp
ret
xchg
mov
mov
rcrb
mov
push
add
add
jns
mov
dec
add
addb
mov
inc
daa
jne
js
add
or
or
adc
mov
add
jne
add
or
or
pop
mov
ds
add
rolb
enter
dec
adc
rclb
das
movsl
push
call
lods
push
or
int3
add
mov
or
shll
enter
dec
pusha
or
jno
out
adc
sub
pop
inc
bound
lcall
stc
cli
sti
cld
pushf
mov
dec
inc
bound
or
dec
and
xor
cmp
mov
je
pop
sub
clc
add
mov
rolb
rcrl
mov
aaa
sahf
int
mov
ljmp
mov
inc
push
or
push
fmul
jecxz
js
fisubl
push
pop
fcomp
pop
loopne
fldl
or
fldl
or
push
sbb
aad
daa
shlb
lods
popf
xchg
lcall
mov
jo
push
lret
fisttpl
mov
pop
sub
lret
xlat
das
sub
xchg
dec
je
in
mov
add
and
sbb
push
jns
pop
sti
fldenv
lcall
mov
ljmp
push
xchg
out
mov
fldcw
sub
add
add
jae
stc
fwait
add
sbb
jmp
lret
xchg
adc
push
sahf
out
rorb
sarb
in
inc
adc
faddl
push
fcom
fdivrl
fisttpll
nop
xchg
push
shl
push
jo
pop
mov
das
and
inc
lock
sahf
out
cmp
inc
push
dec
push
pop
ljmp
aam
push
ja
push
mov
add
andl
ret
add
in
sahf
fnstcw
cmp
inc
jmp
push
sub
lock
push
mov
andb
ss
push
jle
mov
and
inc
xchg
mov
xchg
inc
faddl
fcoms
popa
push
jmp
lods
adc
clc
push
fmull
call
inc
jp
cmp
inc
jnp
imul
adc
push
push
out
jle
testb
lcall
xchg
test
ret
lock
sbb
or
sbb
and
je
push
push
adc
adc
xchg
popa
xor
push
imul
cmp
xchg
sub
mov
mov
outsl
mov
jne
xor
insb
mov
mov
sbb
xlat
add
lea
mov
test
push
mov
rcl
das
cmp
mov
lods
std
repnz
arpl
testb
pop
pop
pop
mov
pop
mov
mov
pop
add
incb
lods
add
or
jne
lret
clc
push
jmp
pop
sar
stos
idiv
lea
testb
mov
lar
cmp
xchg
mov
mov
mov
loopne
mov
push
mov
inc
pop
lock
mov
mov
add
fwait
or
adc
leave
push
stos
imul
jae
cmpsl
xchg
lret
xchg
std
lods
push
sahf
and
mov
test
mov
int3
rcl
loope
cs
sbb
xor
outsl
dec
dec
push
cs
mov
pop
add
scas
cmp
xor
pop
subb
cmp
cmpsl
iret
mov
cmp
mov
stc
icebp
mov
lods
and
xchg
jno
enter
cmp
test
fdivrl
sub
call
mov
test
push
mov
movsb
cmp
lahf
mov
dec
cmp
inc
sub
mov
rcrb
adc
rolb
ss
inc
xchg
pop
inc
jne
mov
lret
idivl
inc
xor
mov
scas
aad
cmpsb
rclb
imul
cmpsl
test
mov
lods
ror
or
dec
movsb
pop
imul
and
cmpsb
test
bnd
mov
jg
pop
cltd
ror
movsb
cmp
fs
push
lods
jo
cld
or
add
popf
addb
fidivs
adc
imul
xchg
scas
orb
rcll
pop
addr16
inc
cmp
sahf
iret
mov
mov
pop
fildll
inc
popf
mulb
dec
xchg
sub
xchg
stc
cltd
cmp
adc
adc
sbb
testl
mov
gs
add
repz
push
dec
fcmovbe
jns
daa
mov
stos
pop
and
add
push
pop
pop
or
inc
cld
jecxz
hlt
sbb
loopne
in
xlat
imul
mov
and
sub
in
je
mov
test
testl
insb
add
es
xlat
mov
or
repnz
std
mov
sti
jecxz
xchg
leave
mov
fs
sbb
lock
test
cmpl
fdivr
adc
adc
ret
cwtl
subl
xchg
lds
test
cmp
test
orl
lcall
out
ficomps
pop
sub
call
call
push
es
push
mov
std
cmp
xor
jge
mov
push
xor
daa
xchg
lcall
sti
out
loope
lds
sub
push
jmp
xchg
lret
imul
pop
aam
cmpb
inc
mov
cmp
inc
pop
sub
sub
cwtl
icebp
push
push
mov
jecxz
sbb
std
mov
mov
in
sbb
scas
mov
imul
inc
push
xor
dec
imul
mov
sbb
add
xor
cmp
adc
lods
popa
dec
lock
iret
cmp
cmp
mov
sbb
call
in
std
lock
xor
icebp
imul
test
jmp
std
mov
xchg
std
inc
repz
daa
test
ljmp
lods
cmc
mov
or
push
data16
int3
hlt
sub
test
sub
dec
pop
enter
dec
ret
inc
mov
pop
sar
test
std
xor
jmp
pop
dec
push
sub
sub
or
cwtl
push
jo
sbb
jge
jmp
mov
loopne
sub
addl
pushf
repnz
test
lea
test
lock
push
adc
xchg
dec
cmpl
aad
sbb
pop
bound
into
dec
pop
insl
mov
movsb
adc
or
cwtl
inc
push
inc
xor
sub
sub
sbb
mov
jp
jne
fdivr
push
loop
sbb
push
dec
pop
jno
and
xor
je
sbb
push
fs
std
std
test
mov
xchg
adc
mov
das
addb
xchg
and
nop
adc
push
inc
mov
lahf
idivl
xor
add
enter
add
enter
jl
adc
sarb
mov
xchg
lods
cmp
sbb
adc
adc
jecxz
lret
and
inc
push
adcb
jp
add
sub
icebp
adc
test
add
xchg
ret
nop
imul
mov
add
lods
xor
push
pop
mov
sub
pop
add
and
add
add
pop
push
test
popa
push
bnd
scas
movsl
call
jecxz
inc
call
and
les
cltd
popa
and
test
popa
arpl
pop
and
popa
cltd
popa
xor
xor
aam
les
imulb
or
push
cltd
stos
mov
imul
dec
or
push
dec
ljmp
es
xchg
cmpsb
push
ret
pushf
and
cmp
xchg
inc
lods
test
xchg
dec
sub
xchg
mov
adcl
leave
xchg
cmp
jbe
sbbb
xchg
pop
sub
test
pop
arpl
pushf
push
loope
xor
cmp
repnz
mov
pop
sbb
cltd
inc
cmpsl
add
mov
mov
and
int
cld
xchg
mov
and
mov
lea
pop
pushf
pop
pause
lret
push
lea
xchg
fwait
xchg
pushf
and
and
pop
mov
loopne
test
dec
pop
xchg
add
aaa
movsb
push
mov
mov
dec
sub
dec
xchg
dec
inc
pop
inc
xor
nop
dec
es
movsb
inc
xchg
nop
bound
dec
inc
or
adc
test
scas
nop
incl
dec
adc
pop
add
xor
nop
nop
pushf
enter
lods
lods
test
or
pop
push
int
adc
je
mov
je
stc
aam
outsl
dec
mov
inc
popf
dec
mov
push
out
lcall
jmp
test
lret
adc
cmpl
cs
adc
xchg
or
mov
divb
push
xor
fwait
or
pop
and
or
inc
les
cmp
add
wrmsr
inc
xor
xorb
imul
and
sbb
lea
xlat
call
test
add
out
mov
call
and
push
sarb
lds
fsubl
xor
loopne
nop
and
dec
mov
jmp
hlt
pop
or
jl
dec
xchg
add
movb
cs
pushf
xchg
pop
or
mov
sbb
ficoml
int3
xchg
idivl
add
xor
bound
push
xor
loop
je
cmpsl
mov
sbb
sbbb
mov
pushf
xchg
and
jle
popa
add
sub
mov
sbb
adc
fucomip
stos
bound
dec
loope
jb
rcl
sbb
sub
lahf
test
mov
cs
imul
mov
stos
lahf
sub
std
add
mov
sbb
xor
lds
cmc
push
test
add
lcall
test
stc
jmp
mov
mov
cli
mov
xor
or
lahf
or
shlb
repnz
cmp
inc
or
jnp
cmpsb
aad
add
je
hlt
daa
int
or
clc
inc
push
inc
sbb
jae
testl
cmpsb
jmp
ss
clc
push
cmp
adcl
test
test
add
add
and
jmp
add
or
jb
jg
fildl
adc
imul
lds
hlt
adc
outsb
adc
jmp
andb
loope
cld
or
jmp
xor
enter
movb
mov
push
stos
daa
push
or
and
push
dec
adc
adc
push
and
test
rol
push
cmp
mov
sbb
push
mov
fcoms
imul
xor
lcall
mov
lret
xchg
mov
and
sbb
sbb
adc
sahf
or
int
add
push
mov
mov
xlat
inc
sbb
add
testl
lea
gs
pop
fstpl
push
sub
sub
or
sbb
andl
jmp
mov
out
inc
cmp
push
lret
loopne
and
lods
daa
test
sbb
fcompl
and
call
mov
lea
and
add
sahf
or
loop
push
mov
or
jae
mov
mov
xorl
stos
mov
pusha
sti
popf
xor
les
andl
hlt
ljmp
jb
lret
xor
mov
outsl
inc
cmp
roll
pop
out
xor
imul
or
cmc
pop
jnp
insb
popa
insl
jg
inc
mov
inc
movsl
sub
push
push
cli
sbb
sbb
or
adc
add
mov
aam
jb
inc
pop
adc
push
clc
sub
adc
test
bound
inc
sub
cwtl
rclb
mov
loopne
cs
mov
ds
push
test
mov
and
add
add
arpl
sub
inc
popa
test
pop
mov
mov
pop
orb
push
or
fidivl
out
imul
ret
mov
pop
or
rcl
push
pop
int3
pop
movb
pop
xchg
mov
push
add
shlb
adc
xchg
dec
add
movsb
adc
and
pop
add
mov
pop
mov
or
xlat
jge
imul
mov
pop
andl
cmp
xorl
jl
mov
mov
jle
cmp
push
sbbl
lret
xchg
orl
sbb
ds
lea
push
cmp
xchg
mov
test
sbb
rcl
lock
leave
push
fsubrl
ret
les
int3
sbb
xor
inc
movsl
testl
or
add
add
add
mov
call
in
hlt
add
mov
dec
cmp
xlat
out
dec
push
adc
push
mov
lods
xchg
or
xchg
jg
mov
int
ds
shll
fs
xchg
mov
scas
rcrl
and
or
pusha
pushl
xchg
pop
inc
push
add
xorl
xorb
lock
jb
dec
je
jmp
jmp
mov
mov
cmpl
or
mov
add
xchg
pop
xchg
stc
push
adc
xor
cmp
push
lret
inc
sbb
popf
push
in
ret
lds
push
inc
adc
lods
scas
fimuls
arpl
add
fwait
idiv
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
ja
add
cmp
jge
mov
mov
and
or
adc
mov
insb
call
pop
sbb
push
push
test
or
insb
in
test
nop
or
xor
sub
adc
fs
pop
and
and
sub
push
inc
orl
movsb
adc
push
data16
xor
addr16
es
shll
adc
add
popa
loope
je
out
add
add
ret
dec
sub
loopne
orb
scas
es
iret
sahf
xchg
test
adc
fldpi
or
add
in
mov
adc
mov
mov
outsb
xor
lret
loop
dec
cld
add
xor
test
xor
jbe
sbb
and
or
adcb
out
mov
lds
icebp
insb
inc
shlb
cmpsb
out
mov
mov
cmp
je
out
and
sti
jns
adc
xchg
pop
addr16
sbb
inc
outsb
or
cld
and
les
scas
ret
cmpl
or
sbb
sbb
mov
stos
pop
pop
andb
bound
and
ja
push
adc
and
and
cmp
ss
lock
mov
andb
and
add
dec
aas
adc
push
xchg
jb
and
ja
xor
sub
popa
or
and
test
sbb
mov
jmp
push
pop
inc
xchg
mov
add
pop
test
xchg
add
mov
mov
test
cmp
jbe
push
pop
jo
fisttps
jge
push
sub
int3
mov
mov
gs
fisubrs
lret
adcl
popa
cmp
ds
pop
arpl
push
cmp
dec
jbe
sbb
inc
jnp
add
xor
lahf
inc
add
jne
adc
daa
dec
add
repz
sub
add
imul
adc
push
out
mov
pusha
add
mov
mov
in
fdivs
clc
xor
mov
inc
and
cmp
mov
mov
lds
jb
push
stos
inc
mov
adc
sbb
inc
clc
mov
icebp
sub
push
sub
xchg
mov
sub
lret
aaa
add
fmuls
movsl
jbe
pop
ja
cmp
pop
jno
push
ss
jmp
xor
push
inc
adc
add
insl
xchg
xchg
lods
enter
pop
je
pop
in
scas
add
je
dec
cwtl
and
aam
add
xor
xor
mov
shr
push
sti
jge
bound
add
jo
xor
sbb
or
je
repnz
loop
and
mov
add
test
sub
into
inc
add
xor
cmp
inc
inc
pop
test
arpl
call
fisubrs
sub
popa
aam
in
cmp
mov
js
pop
inc
mov
pop
fsubr
mov
mov
cli
mov
mov
shrb
dec
bound
dec
popa
push
sbb
mov
jae
pop
push
mov
out
arpl
sbb
push
mov
cwtl
nop
subb
add
push
push
add
mov
or
ret
jo
jns
add
fildll
nop
dec
push
lret
mov
inc
inc
mov
addl
daa
gs
mov
stos
int
cmp
dec
inc
inc
fcmovnbe
inc
outsb
or
jne
repnz
sub
sar
shl
int3
add
das
cmpl
and
push
ret
dec
insb
and
aam
pop
sbb
in
pop
sahf
xor
xchg
ret
jmp
add
add
andb
mov
jb
or
sti
or
pop
mov
lock
cmp
setb
pusha
data16
cld
popf
xor
add
daa
and
mov
mov
push
pop
in
pushf
jbe
cmp
and
dec
shll
lock
lea
pushf
jmp
add
or
or
or
imul
and
push
and
test
frstor
or
in
cwtl
insl
ret
int3
js
into
mov
addb
sahf
mov
mov
out
mov
push
jl
roll
orl
add
adc
and
addl
sub
mov
pusha
and
and
enter
add
sar
sarb
jg
popf
adc
push
sahf
mov
rcrb
dec
add
lahf
add
push
push
mov
subb
or
scas
cmp
cmp
in
sar
and
shl
add
xchg
fwait
push
sahf
inc
add
pusha
in
xor
and
xor
leave
lcall
mov
loopne
xchg
fs
xorl
push
in
or
subb
fwait
je
jb
xchg
adc
xchg
mov
ror
xchg
dec
cli
shl
insl
inc
pop
rorl
cmp
aas
push
aaa
xor
ds
xchg
int
push
mov
jne
sub
test
call
js
insb
jo
aaa
and
mov
mov
cmpsl
shrl
adcb
adc
sbb
push
pop
and
ret
inc
mov
and
mov
std
inc
jmp
push
xlat
cs
cmp
aam
xor
push
sahf
mov
push
rclb
add
sbb
jle
jg
sahf
mov
test
adc
loopne
or
sub
fisttpl
push
rol
mov
lds
add
enter
or
enter
add
adc
jb
shrb
xchg
pop
xchg
dec
add
ret
sub
mov
cmp
or
push
ret
out
shr
sub
inc
adc
test
xor
pusha
cmpsb
cmp
pop
jo
movsl
dec
out
call
lods
adc
add
cltd
sub
sub
push
ret
sub
add
das
or
and
mov
sbb
sar
je
sub
shrl
mov
jo
addb
mov
shlb
fisttpll
jmp
neg
inc
sahf
push
lcall
push
push
fadds
xor
es
scas
ds
mov
mov
push
and
les
xchg
mov
inc
jl
pop
shrl
and
or
and
xorb
jnp
jp
lock
adc
loopne
mov
pop
mov
int3
stc
add
jmp
adc
xchg
push
add
jae
sub
in
mov
and
ds
mov
fs
outsb
movl
jns
push
pop
jo
iret
in
jo
pop
je
stos
sbb
mov
out
push
test
xor
push
mov
push
mov
mov
push
jo
fnsave
push
fnclex
mov
push
push
fimuls
adc
out
clc
jl
outsl
push
push
dec
adc
push
and
jne
out
test
inc
or
sub
jle
pushf
outsl
ja
xchg
push
jg
test
scas
jecxz
scas
sbb
hlt
adc
or
adc
mov
pop
loopne
mov
xchg
cmp
out
mov
ss
test
into
and
call
or
sub
std
mov
xchg
adc
dec
ja
fimuls
lahf
lods
add
sub
stos
add
sub
xor
lcall
inc
rep
add
ss
divb
inc
adc
adc
ss
and
mov
je
push
push
shrb
ret
xchg
jmp
pop
testl
test
dec
out
pop
add
les
xor
js
adc
fstpl
add
or
xchg
bound
lock
movsl
mov
clc
lock
or
lahf
mov
xlat
pop
xchg
and
xor
or
mov
fnsave
loopne
pop
add
inc
insb
out
insl
ss
add
addb
or
push
add
fdivrl
in
sbb
test
repz
or
mov
aas
enter
mov
mov
cld
sbb
xchg
call
jl
js
mov
push
push
push
fidivrl
pop
xchg
jl
push
xor
test
cmp
pop
mov
jb
add
xor
inc
jo
aas
add
jmp
mov
mov
and
and
and
out
xchg
inc
cwtl
ret
sub
mov
imul
fadds
jmp
in
aam
sarb
ret
and
data16
sbb
sub
mov
jge
adc
sbb
test
push
jmp
mov
jge
dec
sbb
jne
lods
mov
jmp
mov
pop
fwait
adc
outsl
jo
pop
test
adc
inc
add
xchg
add
lods
or
mov
push
fdivrl
mov
dec
popf
mov
lret
rorl
cmpsb
imul
pop
test
lock
cmp
or
notl
pop
imul
clc
and
sub
ljmp
adc
inc
jmp
in
test
test
pop
sub
sub
inc
fdivs
imul
mov
jge
aas
sbb
or
cmp
les
fsubrl
pop
psubusb
popa
fildl
rol
adc
mov
testb
mov
xor
jp
xchg
sbb
arpl
mov
push
ja
mov
and
add
sbb
mov
mov
das
sahf
or
enter
sbb
or
add
scas
mov
rolb
push
mov
or
lock
in
push
aaa
movsb
xor
les
sbb
movl
mov
roll
sbb
cmc
xchg
loopne
xchg
stos
inc
or
push
inc
dec
jp
mov
push
cmpsb
push
mov
shll
add
pop
or
mov
ret
and
test
or
mov
mov
adc
nop
lret
int3
cwtl
pop
and
mov
jle
sbb
xchg
push
enter
add
fidivrl
sub
mov
inc
adc
jae
or
sbb
cmp
je
adc
outsb
cmpsb
pusha
jle
cmp
int
cmpsb
int3
push
fimull
hlt
add
mov
fs
add
mov
icebp
push
pushl
int3
jle
dec
rclb
jo
xor
and
add
jmp
jns
lret
jmp
das
shll
sahf
xchg
push
in
sub
lods
sub
dec
cmp
jmp
pop
adc
cmp
jge
dec
and
and
inc
sbb
psubusb
mov
loopne
xchg
sub
or
or
jmp
dec
dec
push
dec
js
je
aas
and
imul
mov
mov
daa
inc
push
sub
fisttps
lret
popa
movsb
jo
in
orb
mov
pushf
add
push
jl
mov
mov
push
add
add
sub
add
pop
aas
or
sbb
push
jle
adc
mov
das
inc
sbb
pushf
sbb
insl
test
xor
and
insl
addb
push
adc
push
movsb
lahf
imul
pop
jg
and
add
jmp
pop
jl
mov
leave
lret
arpl
and
xchg
and
adcl
outsb
sbb
cmpsb
call
and
pusha
aaa
or
jo
jne
push
xor
fstps
jb
int3
add
nop
jo
push
inc
sbb
jp
dec
fsubrs
lret
pop
sbb
push
into
outsb
loope
fdivs
and
pusha
movsl
push
clc
add
fnsave
orl
loop
outsl
mov
out
push
dec
sub
mov
sbbl
iret
and
mov
pop
adc
inc
or
ror
jae
inc
je
rorb
xchg
js
cmp
dec
cmc
xchg
inc
dec
shlb
jbe
mov
in
enter
or
add
mov
popf
mov
add
and
or
cs
pop
xchg
sub
pop
mov
rcl
in
push
rolb
cmp
inc
adc
call
movsl
and
add
aad
add
stos
cmp
lods
jbe
or
mov
push
and
out
mov
enter
mov
dec
jg
cmp
push
or
sbb
ret
add
adc
js
sbb
rcr
or
test
push
or
inc
pop
icebp
mov
add
aam
outsl
or
ficoml
adc
movsb
mov
repz
mov
inc
push
pop
jbe
in
je
clc
or
inc
cmpl
test
jae
outsb
mov
pushf
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
pop
xor
testb
loopne
mov
inc
shl
or
push
adc
adc
push
mov
repnz
shl
in
sbb
or
pop
adc
adc
xchg
test
leave
mov
mov
xor
xor
jno
mov
jo
push
or
sbb
sub
inc
xor
pusha
mov
aam
fisttpll
insl
cmp
inc
loopne
test
add
pushf
out
push
dec
and
mov
adc
scas
cli
inc
fsubl
or
pop
sarl
xchg
lea
je
imul
test
mov
cli
in
cmpb
lea
sti
xor
pop
cmc
and
lods
push
fldt
inc
rorb
dec
or
cmpsl
test
mov
push
jb
sub
adc
cmp
inc
pusha
adc
jae
push
cmp
jl
mov
inc
push
mov
das
fmull
xchg
add
sbb
jns
out
jge
add
and
push
aaa
push
add
xchg
into
push
into
mov
mov
jb
add
test
or
mov
push
sbb
in
lods
in
dec
dec
dec
adc
and
rclw
mov
mov
push
std
mov
mov
or
lret
xchg
or
pop
scas
or
cmc
lods
mov
test
cmp
push
xchg
imul
and
jns
jne
out
scas
imul
and
in
rcll
insb
loopne
arpl
outsl
dec
aam
adc
mov
push
push
sbb
pop
jle
inc
cmp
mov
mov
out
xor
inc
sub
loope
sub
inc
das
sub
fldl
subl
clc
cmovbe
fs
in
mov
mov
push
mov
jle
add
xchg
sbbl
clc
dec
inc
push
inc
std
and
xchg
imul
cmp
jl
hlt
insb
das
pop
js
jae
insb
aam
cmp
and
rorb
and
ljmp
sbb
dec
in
daa
jg
adc
orl
call
lret
pop
hlt
sarb
dec
sbb
aad
jb
push
mov
sbb
test
cmp
dec
add
mov
add
shrb
pop
and
negb
std
jb
jo
ja
ja
adcb
pop
or
add
out
cmp
mov
push
ljmp
sub
push
push
dec
lock
and
shll
xchg
enter
inc
lret
mov
clc
push
mov
ljmp
dec
and
imul
mov
into
dec
and
lcall
lock
nop
adc
xlat
je
cmp
adc
cmp
jb
test
and
inc
clc
xchg
subl
pop
add
cmp
je
jge
push
fidivrl
or
push
movb
daa
test
pop
je
ret
lds
cmpl
sub
pop
adc
daa
mov
push
or
cmpsb
in
push
fsubs
adc
movsb
gs
cmpsb
xchg
call
and
outsl
fdivl
adc
leave
push
push
jne
or
mov
test
nop
mov
insl
js
mov
pop
pop
add
bound
jmp
dec
jecxz
adcl
outsl
or
push
sbb
jg
dec
sbb
mov
imull
fs
or
adc
push
ret
jmp
mov
pop
fs
fidivrs
lsl
jmp
push
pop
push
push
inc
shr
fidivs
shr
rcr
or
div
pop
dec
adc
inc
std
std
mov
jb
cmp
or
cmp
or
lahf
cmpsl
add
xor
and
adc
or
push
sub
pop
lret
jo
jle
iret
jo
cmp
mov
and
ret
adc
mov
push
xor
jg
je
iret
jne
mov
mov
pop
pop
and
add
push
add
mov
xchg
dec
lahf
cwtl
push
popa
pusha
loop
pop
mov
cmp
inc
pop
dec
sbb
push
dec
add
sbb
fnstenv
push
cmp
xor
fiaddl
push
jns
add
inc
js
scas
jecxz
inc
in
sbb
jae
mov
sub
test
ret
popa
cmp
test
xchg
cmp
adc
popf
out
inc
adc
adc
xor
les
add
rol
push
lea
sbb
inc
dec
push
lds
test
jl
addl
mov
ficoml
test
sbb
subb
mov
pusha
loop
roll
adc
stos
aam
mov
adc
push
xor
push
push
fdivr
sahf
and
pop
inc
and
push
xor
push
pop
adc
clc
sahf
je
filds
std
xchg
cli
adc
lea
lea
inc
mov
pop
mov
or
aam
mov
xor
mov
push
sbb
lods
cmp
adc
mov
push
test
ljmp
inc
loop
dec
enter
rorl
shrb
and
outsb
js
add
inc
inc
cmp
add
cmpsb
sub
sahf
inc
dec
and
pusha
add
andb
mov
push
mov
add
push
mov
clc
sbb
cmc
rolb
test
rcrl
ljmp
push
inc
cmp
xor
out
pop
sub
call
sti
cs
xor
imul
push
pusha
movsb
loopne
adcb
cwtl
inc
inc
pusha
cld
inc
push
adc
sbb
in
sub
or
in
in
adc
ss
and
and
sub
xchg
xchg
xchg
xor
cmp
push
inc
and
daa
daa
daa
mov
cmovs
leave
leave
add
pusha
leave
leave
leave
leave
fs
leave
leave
je
jl
movsb
cmp
test
mov
cltd
cwtl
pushf
mov
movsb
test
sub
xchg
cmpsb
fmuls
add
cmp
and
pop
mov
xor
jle
dec
dec
imul
call
or
adc
sbb
movsb
pusha
inc
sbb
clc
and
fwait
or
and
std
cmp
jg
and
pop
xor
adc
push
jo
mov
rolb
push
xor
inc
ret
cmp
push
int
rcrb
inc
dec
jne
fwait
les
sbbb
xchg
lret
sbb
daa
sbb
insb
fldcw
or
add
cli
out
pop
mov
adc
cmp
adc
js
fidivl
mov
dec
sub
shrb
fcoml
add
inc
or
mov
mov
cs
cmp
add
inc
add
add
jo
testb
xor
inc
pop
cltd
add
pusha
fwait
pushf
sarb
nop
cmp
fdivs
test
pop
cmp
mov
das
je
sub
push
push
je
lret
jbe
xchg
loopne
xor
ret
into
or
out
xor
rcr
cli
cmp
fmuls
fadds
push
popf
ss
xor
or
sbb
inc
jo
adc
mov
jne
fcompl
pop
mov
je
push
pushf
cmc
xor
test
cmp
push
xchg
test
imul
add
and
mov
lret
or
sbbb
adc
cmp
adc
push
jb
inc
add
iret
push
or
repnz
iret
sub
cltd
cmp
outsl
jb
or
pop
or
xor
into
sbb
insl
adc
and
rcll
push
lret
das
shlb
loope
out
jl
adc
sbb
mov
jmp
cmpsb
cmpsl
jmp
mov
xchg
mov
push
adc
jnp
lahf
loopne
sub
or
cmp
sbb
dec
mov
lcall
cs
push
sbb
mov
loopne
rcrl
mov
mov
pop
push
pop
pop
cwtl
js
test
shr
cmp
or
jle
or
jb
push
mov
push
adc
jmp
enter
sub
insl
stos
dec
sub
dec
add
and
es
out
pop
push
xor
cmpsb
jno
notb
xor
xchg
js
pusha
scas
push
dec
fcom
jbe
jmp
fwait
mov
add
pop
lret
lods
shr
mov
ret
dec
popf
add
inc
dec
add
ds
pop
fbld
in
cmp
xor
add
fcomps
cwtl
jecxz
clc
push
xchg
xchg
rcll
std
push
lea
push
and
out
icebp
sti
imul
sar
mov
or
xchg
mov
ficoms
jno
imull
outsb
les
and
iret
or
test
shlb
adc
add
mov
sbb
jmp
mov
bound
sahf
push
inc
pushl
jmp
lea
in
xor
pusha
or
sub
jmp
stc
cmp
or
loope
pop
addl
pop
mov
sbb
mov
and
mov
cmp
pop
cmp
in
lods
mov
adc
cmp
xor
push
hlt
mov
add
and
test
jmp
ja
pop
add
mov
jo
lret
add
cmp
fsubs
jo
lret
ficoms
push
xchg
sbb
cmp
jmp
push
dec
inc
test
dec
lea
push
pop
fdivl
inc
loop
add
cmp
faddl
pop
pusha
fcoms
push
adc
mov
add
jl
dec
sub
lahf
xor
jns
xor
sarl
cmp
and
ds
dec
mov
cmpl
push
mov
push
or
pop
daa
mov
iret
sbb
scas
pop
pop
mov
cmp
cmp
popa
xchg
mov
cmp
rolb
rorl
adc
or
mov
and
mov
pushf
cltd
or
or
inc
adc
clc
test
mov
clc
pop
cmp
xchg
lcall
loop
jmp
cmp
xlat
pushf
mov
sub
adc
push
sysenter
sbb
adc
andb
inc
rcrb
or
add
adc
lret
neg
mov
push
xchg
mov
jbe,pt
sub
sub
scas
jnp
or
push
cmp
mov
aas
js
mov
inc
cmp
cmpsb
aas
movb
inc
mov
jnp
jbe
adc
cmpl
fmuls
jo
dec
pop
push
and
inc
dec
rolb
inc
add
xor
daa
jmp
push
mov
or
pushl
cmp
mov
mov
gs
movsl
dec
add
lds
add
xchg
scas
in
mov
lods
push
orl
xchg
out
or
loopne
cmp
and
jns
dec
adc
sub
add
push
add
nop
inc
aas
mov
loopne
xchg
dec
dec
stc
pop
mov
cmp
add
jbe
pop
xchg
push
xchg
sub
loopne
repnz
mov
cwtl
push
sub
lock
scas
int3
out
fs
fs
std
or
stos
jno
inc
lock
add
mov
sahf
test
aaa
divl
mov
jo
lret
jmp
or
pop
sti
mov
pop
or
ja
push
xorb
bound
inc
ja
dec
rorl
fdivrs
jne
ljmp
and
inc
jne
pop
gs
adc
xor
jnp
rorb
inc
inc
call
cmpb
sbb
or
or
movsl
rcrb
dec
pop
and
repnz
sub
sbb
clc
cmpl
mov
cmp
xor
push
pop
scas
icebp
cmpsb
add
sub
js
cmpsl
or
fdivr
ljmp
add
les
add
or
fisubrs
jmp
sbb
add
sbb
xor
mov
jno
popa
add
jmp
ret
cmp
adc
and
and
push
lahf
or
jp
cmpsb
and
cwtl
xor
inc
add
inc
xchg
ss
and
std
mov
adc
cwtl
mov
fisubs
add
pop
adc
push
add
insl
or
sbb
push
and
mov
inc
dec
sbb
mov
scas
bound
lea
shll
stc
mov
push
daa
jle
pop
inc
xor
ret
mov
pop
mov
popf
sub
add
es
into
and
and
test
aam
pop
cmpb
out
xor
xor
push
inc
sub
mov
xor
sbb
sub
mov
sahf
mov
movl
add
ret
fldl
push
pop
notl
sbb
pop
jle
xchg
lods
mov
and
cmp
gs
loopne
icebp
mov
pop
cmp
lods
jg
dec
data16
insb
rclb
pusha
sti
mov
jge
addr16
push
mov
or
add
loopne
jne
js
mov
and
lds
adcb
push
pop
lods
pop
pcmpgtw
int3
pop
pop
mov
hlt
and
jg
cmp
add
adc
ljmp
ljmp
inc
loopne
mov
lcall
mov
scas
dec
lock
nop
js
fnstenv
fiadds
scas
dec
cmp
ret
ljmp
in
push
or
and
je
inc
cmp
in
mov
shlb
test
add
js
pop
dec
push
icebp
sbb
push
add
push
popa
add
xor
jmp
push
shrb
inc
ds
cmp
rol
lds
pop
es
cmp
dec
sbb
shlb
push
jp
adc
test
xor
mov
dec
js
dec
xor
pusha
and
inc
jmp
icebp
xor
mov
push
push
jecxz
add
cmp
add
mov
inc
xchg
dec
pop
xor
xchg
ret
push
and
bound
pop
pop
cmc
scas
pop
clc
scas
cmp
and
pop
add
sbb
and
push
jno
push
gs
movsb
adc
arpl
outsl
adc
sbb
cmp
cld
rol
push
addr16
mov
and
jmp
jp
and
sub
popa
jno
out
loope
aaa
sub
enter
jl
sbb
pop
mov
mov
fistl
adc
mov
je
and
das
mov
lea
sub
mov
pop
mov
or
das
push
fstl
out
dec
nop
or
sbb
dec
rolb
pop
sbb
sbb
rcrl
sub
sub
sbb
leave
cmp
inc
and
sub
mulb
jne
orl
fldlg2
cmp
mov
mov
ret
cld
nop
mov
xor
and
aas
jo
mov
inc
das
adc
ja
xchg
hlt
inc
std
rorl
or
or
or
adc
and
data16
scas
or
std
or
or
xor
pusha
xchg
jae
loopne
cmp
inc
and
jne
or
add
dec
inc
data16
fisubl
mov
jmp
sub
cmp
in
orb
popa
daa
repz
adc
adc
inc
arpl
sarl
add
inc
fists
push
dec
or
ror
pusha
movsb
sbb
dec
push
mov
in
std
jmp
dec
jo
xor
push
sbb
lds
push
add
popf
insb
mov
push
mov
pop
mov
xor
pop
sub
je
push
popf
jne,pt
sbb
mov
cli
cmp
and
data16
pop
div
push
je
ds
add
jmp
inc
xchg
pop
mov
mov
dec
lretw
je
lcall
or
roll
addr16
or
inc
pop
xchg
sbb
insb
push
ret
and
xchg
test
and
sbb
dec
xchg
add
or
or
nop
iret
outsb
jg
in
shl
not
xor
loope
xor
and
add
and
shr
add
dec
outsb
xadd
add
lock
mov
test
lock
test
adc
jp
pop
add
adc
test
xor
push
mov
add
je
sbb
or
sub
or
sub
inc
jmp
mov
incb
jmp
outsb
divl
lret
jmp
inc
and
mov
and
loop
imul
cwtl
out
xor
add
or
call
pusha
xor
or
or
sbb
mov
enter
jle
test
push
pop
adc
pusha
mov
lret
pusha
pusha
loope
pop
sub
xchg
addr16
rorl
jecxz
pop
fstp
mov
pusha
pusha
pop
je
pusha
insl
rcrl
push
addr16
nop
pop
mov
push
inc
pop
or
xchg
adc
scas
cmp
cmpsl
sti
add
add
test
pop
and
xor
mov
dec
add
push
xor
add
or
sub
push
leave
jb
pop
mov
ret
scas
aam
pop
testl
cmpsb
insl
sub
je
jb
dec
mov
sub
and
inc
add
adc
in
xor
inc
push
fnstenv
pop
xor
fisttpll
or
cmp
add
push
mov
cmpsb
ret
inc
mov
pop
or
test
push
mov
cmpb
pop
sub
fidivrs
out
adcb
lret
xor
cmp
or
xchg
or
pop
fs
sbb
fldz
rcr
sbb
loopne
arpl
jl
add
sub
sub
leave
sbbl
fwait
rcrb
nop
psubusw
inc
test
int3
adc
div
add
mov
sbb
pop
dec
jnp
into
clc
or
push
sbb
fstpl
pop
mov
shlb
into
jbe
daa
pop
aas
rorb
push
int3
pop
addl
outsl
mov
rorl
repnz
pusha
lret
movsb
sahf
mov
add
adc
es
push
test
loop
divb
not
insl
in
sbb
jp
dec
in
inc
stos
push
shl
stos
cmp
fsubr
mov
push
push
sahf
jmp
xor
ret
fsubl
aam
test
loopne
xchg
and
mov
lods
dec
push
inc
and
inc
pop
flds
inc
sub
shrb
mov
push
add
fidivs
movsb
xchg
sbb
pop
lock
add
lea
adc
add
mov
push
pop
movzbl
add
test
push
mov
lods
test
lds
adcb
sbb
popa
cmp
or
adcb
sbb
scas
add
adc
or
int3
subb
inc
add
push
hlt
push
jo
test
pop
test
pop
add
out
out
pop
in
sti
mov
push
add
lods
fsubrp
fwait
jno
jbe
das
gs
mov
test
cmp
es
xorl
sbb
jmp
insb
jo
pop
add
lods
imul
gs
cmp
incl
mov
fcompl
mov
cmp
imul
cmp
xchg
add
pop
in
pop
nop
cmp
and
or
xchg
imul
xor
and
adc
loopne
inc
adc
inc
push
out
int3
popa
out
mov
jns
and
test
popf
adc
mov
stos
xorl
std
pop
test
cltd
shrb
sub
pop
cld
mov
daa
aad
clc
out
sub
jmp
sbb
add
rcrl
loope
ret
sahf
push
pop
or
lock
pop
and
out
je
and
add
clc
sti
lock
addr16
sbb
adc
roll
mov
fadds
into
pop
flds
dec
mov
addl
and
inc
pop
cwtl
jmp
mov
test
cvtpi2ps
or
mov
mov
icebp
sbb
shll
inc
push
arpl
inc
add
fidivs
push
out
mov
pop
in
and
adc
inc
jo
push
in
sbb
xor
push
add
fidivl
jl
sbb
sub
shr
call
incl
sub
dec
xor
int
aad
push
fstpl
sbb
and
loop
xchg
imul
dec
lock
and
xor
push
or
insl
or
push
mov
iret
addb
sub
shrl
enter
fwait
int3
and
sub
cs
fwait
sbb
les
pushf
loopne
xchg
jle
call
jb
fsubrl
mov
or
push
lea
push
inc
cmp
mov
rolb
inc
xchg
adc
xchg
scas
push
repnz
out
xchg
jno
and
pop
dec
test
and
cmp
repz
aas
call
jbe
out
add
das
mov
lods
or
pop
xor
dec
or
les
push
data16
fidivrs
mov
ud2
adc
pusha
das
lea
pop
insl
push
push
stos
test
mov
sub
jns
inc
jmp
push
ja
mov
jnp
mov
repnz
add
ljmp
push
nop
pop
subb
or
or
mov
test
adc
add
gs
mov
les
mov
inc
inc
psubq
mov
pop
lods
or
test
xlat
sub
cltd
sbbb
inc
jle
and
adc
or
or
add
loope
or
inc
add
mov
ret
pop
xor
sbb
mov
jle
cli
push
xor
mov
dec
cmpw
push
inc
test
pop
pop
les
push
pusha
pop
mov
loope
dec
mov
xchg
mov
dec
or
mov
xchg
xor
or
test
mov
jle
inc
in
sub
push
add
add
push
mov
or
test
daa
scas
cwtl
pop
test
jne
inc
and
mov
mov
fsubrs
inc
stos
stos
repnz
pop
pop
inc
nop
loopne
mov
aam
xor
cli
sub
and
add
mov
mov
dec
jns
dec
xchg
loopne
mov
inc
mov
dec
fsubs
sub
inc
shl
add
adc
inc
aam
loop
rolb
sub
outsb
jmp
jmp
mov
cltd
insb
pop
and
mov
out
mov
inc
dec
imul
jbe
lea
mov
mov
xor
or
sahf
scas
nop
shlb
cmp
sbb
lahf
stos
mov
dec
cmp
enter
fcomi
jb
incb
jae
dec
mov
rorb
insb
push
mov
mov
mov
and
xorb
push
jge
push
mov
test
roll
mov
sbb
sub
adc
loope
dec
stos
inc
lock
roll
add
push
aam
xor
cmp
gs
test
mov
movsl
xor
inc
aas
add
je
lcall
push
out
and
push
cld
not
push
call
popf
je
mov
and
push
ds
or
and
lock
fisubl
or
push
xor
and
popa
adc
inc
shl
push
aas
fcoml
pop
sub
sarb
je
mov
fs
aam
bnd
push
mov
in
xor
sub
pop
hlt
test
scas
sub
or
mov
icebp
push
push
lea
mov
cli
jp
mov
paddw
lds
xor
pop
fwait
cmp
icebp
sub
dec
jns
inc
lock
xor
sbb
adc
jg
flds
cmp
loopne
cmp
imul
inc
xor
icebp
cltd
pusha
or
mov
jl
pop
andl
stos
stos
mov
into
out
loop
rcrb
iret
and
mov
xchg
in
sub
add
pop
mov
es
scas
sarl
sbbb
or
mov
or
loopne
and
mov
mov
jmp
orb
fdivr
and
adc
sbb
xchg
pmulhuw
cmp
cmp
add
xchg
stos
sub
add
repnz
add
or
sub
cmp
and
mov
mov
push
xchg
jmp
add
mov
lds
inc
mov
nop
dec
add
pop
into
mov
mov
mov
lcall
pushf
mov
fmuls
xchg
sbb
aam
call
enter
aaa
mov
mov
or
ljmp
or
loop
jne
inc
jmp
mov
sub
stos
adc
ja
out
ret
pop
mov
sub
cmp
ja
push
dec
jmp
mov
add
fs
mov
push
cmp
into
add
cmp
call
sbb
mov
into
jmp
or
subb
or
mov
jmp
cmpsl
movsl
sarb
jbe
mov
adc
imul
inc
jle
mov
cmp
push
xor
sbb
push
mov
nop
clc
cmp
jbe
mov
int3
clc
or
fldcw
pushf
push
cmp
fs
or
sub
push
jmp
dec
jno
lea
fdivs
mov
pop
out
fistl
pop
jge
pop
cmp
jno
xlat
cmp
add
bnd
js
jae
imul
sbb
in
cmp
jmp
and
sbb
fisubrl
call
or
lea
cs
out
testl
and
cmp
sbbl
orl
and
mov
scas
mov
dec
or
sub
cmp
mov
mov
jmp
je
inc
scas
sub
fisubs
mov
sbb
mov
call
in
dec
mov
js
adc
add
inc
imull
mov
dec
mov
jmp
ficomps
jmp
dec
sbb
orb
mov
sbb
imul
mov
push
mov
cmp
jbe
inc
or
jecxz
add
pushf
jmp
push
cwtl
sub
xor
cmp
stc
fists
into
dec
ficompl
es
sbb
cmpsl
jne
mov
add
shrb
jg
rclb
jge
neg
add
mov
orb
movsb
sub
cmp
icebp
inc
and
cmp
adc
nop
cmpsl
jne
push
sbb
cmp
push
mov
jge
jle
lock
xor
iret
xor
jne
xchg
adc
inc
add
dec
test
lods
sarl
push
add
sbbl
and
inc
aad
cmpl
jb
mov
dec
mov
pop
cmpb
clc
xor
add
mov
jmp
fmulp
mov
mov
mov
ret
xorl
into
nop
fs
out
cmpsl
faddl
in
fisttpll
mov
ja
xlat
xchg
ja
mov
pop
push
mov
movb
testl
xchg
xchg
enter
jne
outsb
fldl
inc
into
jne
inc
or
int
mov
cmp
jne
hlt
int3
or
data16
jne
mov
inc
or
test
rcrl
or
add
and
mov
lea
mov
lods
push
scas
sbb
scas
adc
dec
test
cmp
dec
sub
lock
ja
cmpsb
mov
push
data16
subl
call
dec
cmp
mov
pusha
or
xchg
add
pop
add
je
jge
test
js
mov
sbbb
bound
add
or
shr
push
cmp
fidivs
mov
jg
mull
into
or
adc
inc
mov
les
popf
test
add
notb
je
jp
push
mov
mov
ljmp
pusha
fcom
insl
fadd
loopne
shr
or
mov
sbb
test
jne
insb
mov
cltd
xchg
test
mov
dec
icebp
mov
mov
and
sbb
sub
dec
adc
cmp
cmp
adc
sbb
sar
jg
mov
jmp
push
xchg
aad
call
mov
clc
bound
shlb
and
dec
sbb
mov
pop
cs
sahf
nop
dec
ja
mov
dec
add
cmp
or
sub
jmp
sbb
jmp
scas
inc
sbb
push
jae
dec
and
les
xchg
test
rcl
inc
int3
test
ficomps
or
jmp
sub
add
notb
mov
lsl
adc
rorb
xchg
or
call
push
pop
push
rclb
mov
jns
pop
sbb
push
cli
aas
or
repz
ja
out
push
or
hlt
push
lods
mov
or
push
fisttpll
iret
das
hlt
jmp
inc
mov
std
fwait
sbb
test
pop
jne
cmp
add
inc
scas
inc
mov
mov
cmp
adc
mov
cs
in
xor
dec
pop
pop
sti
scas
mov
xchg
adc
inc
testb
inc
ss
cmp
je
or
pushl
rorb
cmp
je
mov
lock
pop
jne
dec
mov
inc
inc
mov
out
cmp
fldz
call
add
inc
or
cmc
rol
sub
je
mov
pop
sub
clc
adc
into
sbb
or
mov
mov
pusha
movsl
xor
adc
inc
loope
sti
repz
ret
cmpsb
fsubrl
inc
fisubrl
cmpsl
adc
je
add
ljmp
popa
call
dec
cwtl
add
pop
sub
or
ficoml
ljmp
fdivs
push
mov
jle
iret
pop
ss
inc
repnz
test
push
cmp
mov
shll
je
setg
sub
cld
clc
add
mov
mov
sbb
ljmp
jne
movb
push
test
mov
add
add
cmp
ficoml
xchg
jecxz
xor
mov
es
sbb
cmp
loop
lock
incl
lret
jmp
sub
add
push
add
fstpt
lods
test
push
inc
push
xchg
dec
inc
mov
push
mov
adc
jns
es
push
scas
dec
mov
pop
idiv
xor
push
or
xor
testb
mov
jne
daa
dec
xor
push
dec
inc
out
les
xor
pop
xchg
jmp
fbstp
xor
aam
or
sbb
iret
addb
push
xchg
out
jo
add
push
pop
cmpb
ret
jbe
xchg
clc
fmuls
pop
lcall
sub
adc
jo
add
lahf
adc
mov
cmp
xor
mov
add
xchg
add
inc
push
sbb
sbb
into
daa
lock
sub
inc
lods
jno
das
add
mov
jl
dec
fs
xor
sbb
mov
call
jno
pop
mov
jmp
arpl
xchg
loope
iret
movb
mov
push
fcoml
or
pop
push
add
clc
sub
ficoms
push
push
and
mov
subb
in
inc
outsb
fwait
or
loopne
dec
sar
lea
fcompl
push
out
add
enter
add
int
ret
adc
pop
push
xor
sbb
enter
xor
loopne
js
push
mov
push
sub
push
dec
mov
xor
leave
and
add
cmpsb
movb
in
or
xchg
out
gs
je
fcmovb
mov
fwait
jbe
sbb
neg
sbb
jecxz
loop
mov
jg
ret
daa
xor
or
jne
pop
dec
je
sarl
add
mov
or
push
sarb
loop
sbb
inc
xor
sub
and
or
and
adc
xor
adc
insl
sub
adc
and
mov
movswl
shrl
and
and
data16
adc
xor
cmpl
outsl
mov
ret
mov
add
and
adc
dec
shrd
push
jle
pop
pushf
int3
ss
ss
mov
push
cmpsl
clc
mov
or
jg
outsb
cmp
nop
stc
inc
add
dec
lret
cltd
pop
shr
out
xchg
clc
sub
mov
push
shll
or
call
lock
push
mov
addb
dec
inc
rclb
mov
ret
xor
jo
push
sbb
dec
and
cmpb
sarl
jg
mov
in
push
sub
or
fidivrl
sarl
loope
mov
lock
push
add
jb
ds
sub
nop
sbb
jbe
add
stos
add
mov
inc
ret
test
jg
lods
jb
push
scas
mov
inc
dec
pop
or
mov
lcall
add
daa
rclb
mov
jae
stc
mov
cmp
sub
shlb
and
push
in
je
int
xchg
pop
mov
sbb
adc
loopne
jb
add
or
test
mov
rorb
push
inc
addb
dec
mov
andb
sbb
sub
add
sbb
popf
call
jne
jl
cltd
test
mov
mov
pop
imul
stos
pusha
daa
pushf
add
cltd
out
into
les
push
xchg
pop
sbb
rclb
cmp
mov
cmp
or
je
mov
xchg
xchg
add
repz
mov
push
or
inc
lret
jbe
adc
push
sbb
test
lea
mov
adc
push
push
insl
inc
or
insl
cmp
cld
cld
jl
lods
sub
fimuls
inc
lea
pop
incb
ljmp
mov
inc
pop
scas
pop
jns
jge,pt
fdivrl
jle
gs
or
pop
data16
dec
aaa
jo
loope
add
mov
push
inc
je
dec
leave
psubusb
pop
lods
jmp
xor
mov
pop
or
inc
dec
xchg
pop
add
xchg
push
or
cmp
pop
mov
add
inc
add
adc
call
incb
fdivl
fmull
insl
push
pop
clc
fstps
or
add
stc
add
push
rcrl
loope
addl
jge
push
inc
bound
xchg
push
rolb
sahf
pop
arpl
cmp
lock
push
dec
sbb
or
ja
or
add
mov
jmp
pop
inc
sub
jbe
mov
cmpb
jne
sub
mov
cmp
adcl
inc
sub
add
dec
das
xor
pop
push
inc
subb
push
jp
push
cmp
add
adc
je
lahf
xor
cmp
dec
cld
dec
inc
jbe
sub
pop
add
dec
leave
popf
ret
pop
inc
ja
mov
je
aaa
xor
mov
sahf
movsl
sub
repnz
ss
adc
cmp
rcrb
or
xchg
pop
lcall
pop
inc
mov
xchg
xor
mov
mov
iret
push
dec
add
sub
mov
cmpl
dec
sbb
or
push
inc
pop
jo
data16
push
mov
fcomps
dec
aaa
fwait
rcrb
fsubrs
push
dec
mov
cmp
ss
sub
cmp
mov
test
adc
dec
xchg
cmp
pop
rclb
add
lret
mov
inc
fdivs
jge
adc
pop
pusha
mov
aas
cmp
adc
pop
mov
cmp
inc
cmp
push
push
add
sahf
sbb
sub
mov
mov
dec
jecxz
jecxz
cmp
inc
and
icebp
mov
gs
pop
nop
add
dec
and
sub
outsb
lcall
jne
push
push
jmp
or
jmp
cmpsl
fildll
testb
and
mov
sbb
mov
rcl
movb
negl
int
stos
lret
and
push
aaa
mov
cmp
jne
test
fdivrs
jno
adc
add
add
add
popf
mov
xor
lret
or
add
es
sbb
mov
sub
in
inc
addb
mov
or
aad
mov
cmpsl
enter
mov
or
mov
push
xchg
or
popf
aad
stos
fdivrs
xchg
add
push
push
decb
add
jg
mov
jno
jecxz
push
push
sub
or
popf
pop
addr16
or
js
cmc
iret
mov
mov
sub
outsl
cs
jns
dec
cld
mov
xor
push
push
je
cmp
inc
dec
dec
xrelease
test
or
dec
icebp
ret
or
sbb
cmp
and
dec
and
sbb
aaa
mov
cmp
push
lret
insb
jl
je
pop
sbb
das
add
pop
fildl
adc
sub
push
mov
icebp
insl
arpl
pushl
cmp
repnz
jmp
mov
bswap
nop
adc
pop
mov
push
and
cmp
testb
inc
test
clc
or
push
mov
push
push
push
enter
push
lahf
mov
jmp
rorb
outsb
mov
or
mov
jmp
adcl
cld
jo
dec
loopne
decb
imul
sbbl
das
adc
cmp
cli
and
pop
testl
inc
sub
xchg
loope
xor
adc
enter
or
jge
jo
xor
jge
inc
cwtl
mov
pop
mov
lods
aaa
test
mov
pop
rorl
dec
movsb
cmp
sub
jmp
adc
push
leave
mov
add
xchg
test
rorb
std
test
data16
ljmp
jne
pop
push
cwtl
cmp
adc
adc
nop
adc
dec
xor
outsb
adc
aad
sub
push
sbb
pop
dec
xor
adc
fabs
xchg
loope
dec
push
pop
call
jo
jns
lea
int3
dec
xor
pop
or
enter
filds
add
lret
push
dec
mov
xorl
loope
sbb
sbb
push
lock
add
es
jmp
jp
and
and
repz
cs
xchg
cmc
outsl
dec
sbb
fwait
cmp
adc
nop
cmp
imul
loope
loop
imulb
pop
mov
sub
out
iret
adc
lret
aas
add
adc
lret
inc
jmp
jp
shr
add
or
pushf
mov
leave
fcmovb
jmp
shr
int3
imul
lret
mov
add
add
or
bound
scas
push
add
shll
in
test
clc
stos
mov
sbb
rcr
or
add
int3
cld
push
scas
add
fnstcw
dec
loopne
jne
enter
les
add
xchg
or
jg
or
mov
shr
cmp
mov
mov
lods
or
mov
pop
mov
adc
adc
mov
sbb
fwait
repnz
xchg
shlb
dec
cmp
iret
adc
movl
inc
mov
mov
jbe
daa
and
xchg
jae
outsb
imul
adc
or
notb
or
shl
mov
lock
mov
imul
enter
mov
cltd
and
inc
push
sub
cli
stos
div
jo
mov
test
test
in
sub
adc
call
call
mov
push
or
cmp
mov
xchg
fcompl
inc
ficoml
fdiv
idivl
pop
out
mov
fstpl
negb
add
sbb
sbb
test
push
cld
sub
jne
xorb
push
ljmp
mov
leave
dec
movsb
or
pop
movsb
fisubs
lret
mov
push
std
or
push
adc
push
out
push
xchg
push
and
fstl
mov
jle
cld
inc
add
lcall
xchg
sbb
xchg
cmp
nop
mov
imul
inc
xor
dec
cmp
pop
lret
lock
jl
cmpb
jl
xor
subb
idiv
fdivl
lds
xchg
adc
adc
fsts
nop
loopne
test
dec
std
inc
dec
inc
push
push
mov
push
push
fsubs
sbb
lcall
sbb
int
cld
aam
pop
or
clc
stos
add
cmp
sub
mov
ja
and
adc
lock
loopne
add
xchg
stc
and
enter
jg
je
out
or
test
jne
cli
in
or
flds
and
rcll
jns
sub
push
je
jmp
dec
jo
or
lcall
cwtl
test
and
gs
pop
and
lock
adc
daa
movsw
xor
stos
push
push
push
ss
movb
hlt
pop
jmp
xchg
push
push
xchg
xchg
mov
mov
push
fidivl
add
push
xor
cli
stos
fsubr
imul
inc
push
test
neg
sbb
sub
insb
cmp
sbb
sbb
int
sbb
inc
push
sbb
fcoms
cmpsb
mov
cmp
rcr
aad
xchg
inc
sub
cmp
xchg
adc
sbb
mov
fldl2t
dec
jns
fcmovnbe
test
jbe
jne
pop
pop
pop
adc
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
insl
or
pop
cmc
adc
cld
lock
je
push
pop
jmp
or
add
dec
add
add
push
dec
add
les
sub
adc
insb
add
inc
push
adc
pop
sub
push
jge
fcoml
jnp
pop
sub
je
push
sbb
into
push
add
jmp
bound
sbb
les
adc
mov
or
adc
aas
mov
in
cs
inc
and
fwait
cmp
orb
push
or
movl
insl
xor
daa
push
pop
dec
mov
and
push
mov
jp
add
cs
mov
arpl
and
fcmovne
aam
dec
pushl
dec
out
rclb
les
filds
and
pushf
mov
dec
xchg
movsl
adc
dec
cmp
jne
cmp
testb
inc
jmp
fists
movsl
lods
pop
sub
leave
je
mov
inc
mov
mov
adc
wbinvd
scas
es
mov
je
std
jg
sbb
cmp
jb
cmp
ja
add
cmp
jg
cli
out
ret
cmp
jne
xchg
xor
hlt
mov
mov
nop
sbb
pop
cmp
pop
jbe
or
add
push
dec
pop
mov
addb
push
mov
mov
jecxz
mov
fbld
push
mov
sbb
jne
rcrb
jbe
das
or
jmp
imul
je
fbld
fsubrs
leave
loopnew
les
fwait
int
lret
sbb
inc
adc
pop
and
dec
sbb
add
imul
push
leave
notl
and
xchg
shl
lea
ja
mov
mov
sbb
pop
adc
add
jmp
inc
imul
int
sarb
movsb
rcrb
push
pop
sub
xor
or
dec
add
dec
xchg
xchg
or
dec
mov
mov
dec
aaa
sti
test
add
adcl
jmp
sbb
add
pop
nop
out
jg
jg
mov
push
rcl
sahf
out
sahf
rcl
aad
xlat
fmuls
jns
fstpt
rolb
and
gs
data16
idivl
xor
inc
add
inc
mov
lock
jne
rorl
imulb
push
xlat
cld
enter
add
data16
fucomi
mov
mov
add
push
push
push
push
clc
xor
mov
pop
xor
push
lahf
sub
push
and
push
je
test
and
call
cmp
sbb
pop
das
or
push
jnp
push
sbb
and
push
popa
add
add
push
lods
cld
inc
sbb
pop
movsb
mov
imul
pop
pusha
shr
fiadds
lcall
lea
imul
lea
sar
inc
adc
ret
movswl
jp
sbb
sbb
push
mov
pusha
loop
inc
xorl
pushf
cmp
inc
call
sub
lret
roll
adc
sar
fisubs
addr16
stos
aaa
test
mov
adc
les
fcoml
movsb
and
decl
push
adc
fadds
or
dec
lock
pop
ljmp
or
loop
mov
and
and
lea
pop
sbb
movsb
subl
inc
jle
mov
ja
xchg
cmp
add
ret
xchg
and
sub
jns
lods
mov
inc
divl
in
je
in
ljmp
and
xchg
or
and
sbb
and
push
rolb
mov
rolb
push
mov
jge
jbe
cld
or
imul
cwtl
xchg
aam
lcall
ljmp
push
in
sub
inc
inc
xor
xchg
cwtl
mov
jge
jl
outsb
lcall
rol
add
or
jle
jle
and
push
scas
jne
fiaddl
sbb
add
add
ds
popf
mov
cmp
or
mov
sub
gs
push
lret
rcrl
inc
xchg
xor
mov
mov
inc
lods
test
je
ss
shrl
fidivs
cmpl
or
dec
add
xor
dec
adc
lods
lock
dec
push
mov
cmp
gs
cli
inc
cli
div
dec
jo
mov
xchg
sbb
add
loopne
mov
push
mov
push
jnp
sbb
insl
gs
adc
and
mov
dec
data16
es
mov
xor
mov
rolb
dec
rcl
les
idivb
jns
rolb
lock
sbb
loopne
mov
aad
ret
add
and
repnz
pushw
sbb
or
clc
out
jge
fs
cs
xchg
mulb
test
inc
enter
add
mov
add
pop
sbb
dec
or
mov
inc
shlb
fdivrs
aam
dec
xchg
fldl
and
jge
adc
lods
mov
push
rorl
adc
dec
xor
call
ds
out
cmp
cld
lea
fcmovu
mov
mov
mov
lods
lods
daa
loop
mov
cltd
add
iret
idiv
sbb
movsb
add
sbb
idivb
inc
dec
sub
sbb
test
sub
nop
inc
push
in
or
jge
mov
or
icebp
mov
sub
daa
loop
cld
add
jne
sub
fnsetpm(287
loopne
pop
pop
pop
addb
mov
jns
mov
mov
sub
insb
sbb
movb
inc
mov
mov
xor
push
add
push
nop
cmp
popl
push
dec
adc
adc
add
dec
cmpsl
sub
lods
pop
shll
adc
push
shr
and
push
shll
test
jne
sbb
neg
and
insb
jle
inc
imul
test
jmp
loopne
loopnew
ret
push
cs
fsubs
push
je
or
mov
mov
xchg
adc
pop
add
cmp
out
sbb
push
cld
jo
and
xchg
mov
ss
arpl
rorb
mov
add
sub
lock
push
faddp
dec
into
or
add
push
test
mov
push
js
add
enter
cwtl
fidivs
shlb
sub
int3
pop
sub
adc
jne
cmp
cld
adc
add
in
into
or
mov
inc
dec
rolb
test
in
decb
add
add
xor
inc
adc
jle
cmpb
or
add
dec
cmp
mov
mov
add
dec
add
add
fadds
dec
push
add
mov
jp
jne
or
mov
jb
int
pushf
cld
sub
enter
inc
ret
and
add
push
rcll
add
xchg
jbe
add
rclb
lcall
and
cmpsb
adc
and
popf
out
adc
aad
mov
mov
inc
cld
lea
or
movsl
popf
cmp
or
dec
cmp
jmp
iret
xchg
insb
jl
mov
add
or
sub
add
add
cwtl
adc
addl
and
push
ret
push
sub
add
add
xor
orl
ficomps
mov
mov
iret
xor
into
pusha
inc
sar
scas
add
mov
rcrl
add
xor
xchg
fisttpll
in
shll
or
or
push
dec
mov
in
inc
push
pop
movsl
test
or
or
rcrl
mov
add
inc
xlat
rolb
lahf
or
mov
cli
sbb
xchg
pop
xor
or
ljmp
push
add
pop
and
in
jo
ja
xor
mov
mov
inc
jge
sbb
mov
lret
cmp
pop
adc
in
out
xchg
daa
add
insl
cld
mov
addb
sub
mov
push
inc
stos
inc
jo
push
jg
sub
into
xchg
cmp
pushf
movsb
pop
in
mov
cmpsb
out
into
in
stmxcsr
inc
or
dec
bound
cltd
imul
adc
or
movsb
sbb
adc
xchg
into
jle
pusha
cmp
out
stc
mov
xor
inc
jg
mov
into
into
mov
pop
and
inc
pop
sub
mov
pop
nop
pop
cwtl
pop
and
nop
fisubrs
not
and
or
pop
adc
sub
jle
xor
and
lcall
add
leave
lahf
pop
test
sbb
add
or
mov
adcb
inc
lcall
and
inc
xchg
sub
pop
cmp
dec
inc
sub
jmp
jb
push
mov
lret
stos
loope
push
xor
xchg
add
scas
push
push
scas
cmpsb
mov
mov
add
push
dec
xchg
ret
mov
mov
jl
or
popa
pop
fmul
cmp
mov
cmp
mov
adc
push
and
vcvtsd2si
mov
movsb
punpcklbw
inc
ret
fisubrs
ds
cmp
fwait
adc
sbb
xlat
jle
and
daa
mov
dec
or
and
adc
xchg
xor
sarb
addr16
jb
ljmp
sbb
add
icebp
mov
dec
cmp
mov
rcl
dec
sbb
xor
inc
sarb
pop
push
loop
aaa
cwtl
orb
loopne
xor
jmp
and
dec
sub
add
dec
or
mov
out
je
cli
scas
xchg
inc
test
mov
cmp
lret
xchg
fisttpl
inc
inc
fsubrp
jmp
pop
sbb
or
dec
xchg
fisubrs
inc
mov
mov
jo
mov
inc
insb
jbe
icebp
ret
ret
test
mov
or
jecxz
imul
push
mov
movsl
xor
shlb
cld
mov
loope
push
mov
jnp
rcrb
or
or
mov
adc
xor
jp
pusha
push
arpl
nop
scas
ret
andb
nop
adc
jbe
jle
pushl
dec
push
leave
scas
xchg
sarb
push
push
mov
aam
mov
and
in
xchg
xchg
fcoms
mov
xchg
and
sbb
jge
inc
add
sub
or
test
cmpsl
ret
sub
je
mov
adc
sub
fcoml
fmul
in
mov
mov
dec
xchg
inc
sbb
and
incl
cld
and
inc
pop
jge
lea
xor
mov
push
imul
push
pop
push
imul
inc
dec
enter
popa
add
and
or
lods
subb
push
or
in
push
shll
add
xor
movsb
dec
std
adc
adc
bound
or
jo
cs
add
shrb
inc
sub
jmp
push
push
xlat
test
pop
inc
movsl
test
sub
pop
ds
sbb
fsts
clc
sbb
lods
mov
sub
sub
sub
lret
es
mov
dec
inc
pop
or
push
fwait
jl
bound
push
inc
add
sarl
cmp
mov
push
xchg
xor
sar
pusha
lret
jbe
pop
fisubrl
push
mov
add
cmp
stos
gs
push
rcrl
mov
or
outsb
and
bound
push
adc
xchg
into
add
or
inc
mov
pop
add
andl
or
mov
mov
and
sbb
popa
sbb
dec
roll
popa
adc
pop
test
or
sbb
sbb
enter
ret
decl
ds
dec
cld
lea
push
push
add
dec
pop
jl
lret
aam
mov
jbe
or
pop
bndstx
mov
popa
js
xor
insl
lock
dec
mov
jmp
in
jae
fsubs
sahf
or
jle
outsl
stos
loopne
jmp
dec
loop
fwait
and
das
movsb
fisttps
out
sub
cmp
mov
js
pushf
adc
mov
pusha
movsb
fcoms
inc
aad
adc
sbb
inc
js
pop
inc
inc
add
push
sar
fcompl
mov
cmp
in
ljmp
add
les
pop
movsb
sbb
pusha
pop
pusha
call
shrl
dec
or
stos
sub
xor
adc
ret
rcl
sub
and
sub
or
add
push
mov
lods
push
adc
sbb
data16
testb
push
push
inc
and
or
add
or
push
xchg
test
add
cmp
add
sbb
add
xchg
or
xchg
mov
scas
insl
out
outsl
fdivl
pop
scas
mov
pop
push
daa
add
test
mov
push
adc
cmp
sub
xor
mull
push
push
or
pop
cmp
or
aad
pop
inc
add
inc
mov
adc
cltd
bound
cwtl
xor
scas
mov
or
rcrl
aaa
adc
ljmp
div
cvttps2pi
dec
or
xchg
add
xor
je
loope
jmp
daa
ds
fldenv
mov
mov
push
fildll
jne
rclb
arpl
enter
fsubrp
test
jns
fstps
aam
icebp
lahf
cmp
and
fistl
pop
xchg
jmp
cmp
fcomp
adc
mov
ret
fstps
shlb
xchg
mov
push
int
push
push
mov
loopne
popa
pusha
add
mov
fimuls
or
dec
in
stc
mov
mov
into
outsb
sub
push
scas
inc
cltd
dec
ljmp
mov
ret
fcoml
inc
dec
pop
mov
mov
sbb
jecxz
or
mov
xchg
dec
jb
in
aad
sbb
mov
clc
jecxz
fsubs
testb
call
insl
xor
mov
sub
xchg
or
add
adc
jns
loopne
add
orb
pop
fisubrl
shlb
dec
mov
mov
fs
push
test
mov
vorps
inc
mov
ret
lock
pop
call
cmp
xchg
pop
imul
adc
bound
mov
pop
in
jo
test
jbe
enter
xor
ret
pop
add
dec
pop
fdivr
shl
and
pop
lahf
add
leave
iret
mov
nop
inc
jne
test
and
jmp
pop
inc
enter
adc
insb
in
push
xchg
adc
fwait
sbb
jne
cmp
movsb
dec
iret
in
leave
inc
inc
adc
repnz
dec
stc
add
sub
jmp
pop
or
add
or
push
sti
loopne
outsb
push
nop
push
cmp
push
insl
ljmp
pop
mov
cwtl
push
cmpsb
dec
repnz
jno
out
and
or
pop
fwait
xchg
mov
nop
cmpsl
sbb
xchg
or
and
lret
cmp
jno
adc
lret
nop
fs
xchg
test
sarb
les
dec
into
aam
inc
fidivl
xchg
in
fidivl
xchg
fsubs
pop
shll
fwait
in
movups
mov
xor
movsl
fadds
dec
inc
add
pop
iret
pusha
popa
xchg
cmpsb
in
outsl
fdivrl
lock
leave
insl
sbb
in
in
stos
cmpsb
or
lock
push
cltd
in
pop
hlt
add
int3
fs
inc
adc
arpl
cltd
lock
leave
pop
adc
sbb
push
xlat
pop
in
xchg
xor
nop
bound
fnstsw
pop
mov
jecxz
pop
in
inc
jb
arpl
jl
insl
push
add
dec
inc
jmp
dec
cmp
xor
lock
aam
cmp
xor
cmp
arpl
shlb
xor
adc
test
lea
mov
inc
sbbb
in
call
rol
cmp
out
inc
shrb
jle
test
pushf
dec
test
add
dec
cmp
dec
xor
and
sbb
xor
and
and
xor
and
dec
xor
cmp
xchg
dec
xor
dec
xor
leave
fs
inc
dec
out
push
cld
fwait
sbb
add
mov
pop
popa
add
inc
mov
pmulhuw
loopne
nop
inc
lcall
push
xlat
mov
cld
sub
sbb
add
push
mov
stos
mov
test
icebp
add
jecxz
dec
pusha
cmpsl
cmpsb
xchg
cld
shl
test
aam
clc
xchg
arpl
fsubl
int3
insl
jb
aad
or
pop
rclb
add
xchg
fmull
pop
push
filds
fwait
aam
in
rorb
jb
push
xchg
popa
pop
rolb
xor
add
xchg
pop
xor
fdivs
push
fsub
push
fucomip
popa
je
in
adc
fidivl
flds
fisubl
insb
mov
jg
in
add
je
in
cmp
inc
cmp
les
roll
test
jl
dec
fwait
in
arpl
in
in
jmp
psubsb
adc
nop
mov
arpl
mov
mov
adc
insb
faddl
push
inc
push
adc
dec
call
cs
inc
sub
dec
call
jb
sub
fsubs
mov
pop
scas
xorb
add
mov
and
outsb
out
lock
ret
repnz
sub
out
cmp
mov
sbb
inc
popa
enter
push
rclb
adc
pop
leave
and
xchg
cli
hlt
outsb
inc
sbb
mov
fsubrs
insb
push
js
dec
ss
mov
add
jno
out
and
mov
adc
stc
sar
lcall
sbb
test
xor
sub
sub
dec
les
xor
dec
and
push
adc
fcoms
repnz
fcom
pop
sbb
mov
xchg
jo
nop
outsl
and
in
dec
push
push
mov
xchg
fistl
xchg
xchg
xchg
xchg
mov
mov
xchg
enter
xor
cmpsb
aam
divl
lea
push
and
movsb
xchg
dec
dec
pop
sbb
jb
negl
mov
dec
ret
sbb
mov
shrl
mov
jb
mov
jb
orb
or
fdivl
jb
push
pop
in
pop
call
sbb
sbb
dec
jae
call
bound
aas
xchg
imul
pop
cmpsl
or
lahf
mov
sarl
mov
adc
and
and
cmp
enter
sub
xor
rorl
fcom
ficoms
int3
xor
adc
dec
mov
inc
mov
push
arpl
fwait
xor
adc
sub
mov
sub
fldl
outsb
orb
xor
and
inc
xchg
outsb
mov
and
in
adc
shr
popf
mov
fsubr
fdivrs
or
or
add
pop
sub
mov
add
loop
shlb
push
ja
pusha
mov
cmpsb
mov
ret
out
shrb
mov
in
and
insl
xchg
outsl
jmp
pop
cltd
ss
in
pusha
inc
add
and
adc
js
aad
scas
xchg
adcb
sbb
leave
add
scas
jecxz
add
xor
lea
test
mov
lods
incb
orb
push
adc
jmp
or
dec
rcl
adc
loopne
test
pop
cmpb
pop
xlat
or
jno
add
dec
cmp
sub
push
fmull
and
ret
dec
movsb
nop
add
push
cmp
ret
pop
movsl
in
pop
pushf
fcomip
sbbb
sub
rclb
in
fnstsw
jp
inc
lea
push
call
mov
faddl
mov
or
or
dec
fmull
je
fisubl
and
cmpb
nop
sub
ret
jnp
rolb
jnp
jne
cmp
lods
lahf
mov
push
popf
mov
and
adc
jnp
and
or
or
or
enter
or
mov
sub
sbb
aaa
mov
enter
adc
inc
jge
fiaddl
insl
je
mov
mov
inc
or
add
sub
inc
int3
jge
aam
mov
je
sub
lret
loopne
push
cltd
test
aam
xor
mov
xchg
in
ret
push
mov
ljmp
mov
push
xor
sub
jle
popa
jle
shlb
jg
and
sbbl
in
push
sbb
xchg
nop/reserved
cwtl
addb
pop
add
insb
lods
nop
decb
popf
mov
or
xchg
mov
and
addb
pop
lock
sbb
fwait
pushl
mov
test
or
clc
gs
fists
sub
dec
mov
or
push
push
mov
mov
loopne
aam
and
adc
dec
dec
inc
mov
add
push
xchg
ret
push
andb
inc
lods
dec
outsb
adc
enter
dec
sarb
mov
cwtl
test
pushf
lods
adc
insb
mov
dec
outsl
movsb
xchg
dec
add
inc
lcall
push
inc
xchg
adcl
adc
outsl
or
ret
push
adc
in
or
orb
imul
mov
clc
mov
push
mov
outsb
xchg
test
movsb
enter
xchg
nop
aam
mov
and
pushf
sbb
pop
ret
fcmovu
mov
mov
jmp
and
mov
mov
rclb
sub
push
or
pop
or
sub
xor
lock
mov
jno
push
inc
inc
sbb
cmp
orl
mov
pushf
int3
adc
loope
sub
outsb
pushf
mov
scas
dec
jge
mov
rcl
push
scas
mov
and
imul
pop
rcrb
nop
in
sbb
lock
and
sti
xchg
dec
rolb
mov
or
push
int3
xor
in
mov
adc
js
or
xchg
fcmovnb
mov
pop
pop
mov
loope
push
out
mov
maskmovq
testl
aad
stos
xchg
fadd
push
adc
mov
dec
xor
jns
mov
sbb
dec
sub
xchg
and
arpl
mov
insb
lock
shl
leave
jo
mov
add
in
pop
add
xor
sub
fcomps
pop
test
sbb
fdivs
xchg
ret
jae
inc
sti
dec
push
stc
xchg
iret
or
and
faddl
call
push
ds
adc
sbb
add
in
pop
add
add
int3
dec
mov
int3
nop
xchg
xchg
test
pop
sbb
fwait
mov
xchg
and
pop
ret
xor
bound
inc
lods
add
or
test
lock
push
adcl
adc
call
sbb
fmuls
pop
ret
xorb
or
test
lock
adc
push
push
pop
adc
icebp
fadds
mov
adc
jb
xchg
aad
fdivs
adc
fsts
xor
push
pop
loope
adc
les
push
add
aaa
je
adc
dec
push
or
pop
sub
filds
inc
lahf
lods
loopne
test
xchg
fstpt
xor
pop
fdivr
inc
aam
fiaddl
add
sar
insb
jg
cmpl
lds
cwtl
push
pop
add
arpl
or
test
mov
imul
add
xchg
nop
xchg
and
push
cwtl
jne
pushf
ficomps
je
repnz
test
fadd
cmp
add
cmp
inc
int3
mov
nop
or
rolb
push
xchg
leave
fidivs
or
lahf
push
xor
cmp
or
inc
mov
or
outsl
add
fdivrs
les
sbb
adc
sbb
pop
scas
pop
jl
or
in
fdivrl
rcl
or
mov
mov
add
inc
inc
push
psubsb
insb
sbb
jne
sbb
mov
prefetch
or
jno
adc
enter
inc
lahf
pusha
xchg
pop
je
daa
and
inc
fstl
in
push
lds
lock
xchg
fsubl
inc
hlt
test
sbb
lock
add
pop
jo
shrl
insl
mov
adc
stos
outsb
popa
jb
ret
lea
adc
mov
xchg
mov
insl
in
and
cwtl
mov
cmpsb
adcb
pop
pop
xchg
sbb
imul
enter
mov
movsb
adc
cld
arpl
add
sarl
cltd
pop
sub
dec
push
mov
scas
cmp
sbb
push
aad
lods
daa
ret
push
sub
dec
roll
enter
inc
and
test
xor
and
add
pop
mov
icebp
xchg
mov
nop
nop
or
pop
add
lfs
sub
shl
test
xlat
mov
mov
fwait
dec
leave
or
and
enter
mov
pop
rolb
out
in
enter
mov
pop
es
or
add
push
test
in
pushf
stos
sub
inc
imul
pop
in
pop
lock
or
pushf
jb
pop
stos
jg
and
cmp
stos
sub
add
leave
or
call
mov
out
adc
sti
adc
adc
lods
movsb
push
cld
mov
rcrb
pop
loopne
shrb
mov
pop
and
les
ljmp
push
and
cltd
dec
int3
or
daa
or
cmovb
pop
adc
in
movsl
cmp
and
ja
sub
scas
in
lahf
test
lea
pop
call
in
fistps
add
mov
mov
mov
imul
sbb
insl
add
nop
dec
out
enter
mov
dec
jno
shll
das
dec
mov
les
mov
test
or
add
inc
fwait
movsb
xchg
xlat
shrb
shrb
mov
mov
mov
in
adc
int3
insb
mov
jg
jo
imul
fdivrl
mov
push
aam
pushf
or
jb
sub
movsb
mov
movsl
test
xor
inc
sysenter
arpl
pop
jb
ret
pop
mov
ss
lods
jg
movsb
dec
dec
rorl
jbe
mov
jne
or
in
lds
movsl
mov
push
pop
int3
pop
les
add
mov
stos
rorb
inc
popl
xchg
faddl
jns
movsl
test
xor
cmp
js
cmp
in
pusha
and
movsl
sbb
fwait
nop
mov
nop
out
push
cltd
add
xchg
cmp
inc
sti
rorb
fs
lcall
lcall
xor
inc
fdivl
and
inc
mov
lcall
xlat
sahf
out
jg
scas
inc
add
nop
or
add
adc
std
enter
mov
loopne
mov
adc
movsb
jb
cwtl
adc
in
andb
xchg
test
jo
add
cmp
scas
subl
add
pusha
lds
mov
jo
sti
mov
and
jb
push
fcoml
xchg
dec
movsl
mov
dec
cmp
sbbl
xchg
pop
lret
xchg
add
nop
or
or
and
leave
sbb
jl
cmc
mov
add
aad
insl
jno
adc
sub
ja
lock
pop
roll
mov
xor
int3
popl
je
inc
jmp
fwait
xchg
lods
or
cmp
ss
mov
xlat
push
andb
mov
xchg
xchg
dec
cwtl
pusha
fisttpl
or
push
xor
fsubrs
and
or
jns
fdivr
shrb
dec
pinsrw
repnz
mov
adc
adc
lods
xchg
test
xor
push
cltd
stos
mov
sbb
add
in
outsl
xor
std
add
cltd
nop
inc
sti
or
or
fs
adc
push
loop
nop
and
rorl
inc
inc
mov
or
sysenter
xor
jge
cmpsl
xchg
lods
mov
mov
add
fadds
cltd
jbe
xor
add
stc
and
sbb
and
ja
sbb
adc
cmpsb
loopne
loopne
xchg
fsubrs
adc
inc
in
push
push
in
andl
das
test
inc
mov
lret
cmpb
stc
push
xchg
add
push
in
fisubl
cmp
xchg
sub
pop
das
xchg
addr16
data16
or
lods
orb
or
push
pusha
leave
xchg
stos
mov
shrl
push
outsl
ffree
mov
mov
inc
insl
movsb
or
fidivl
or
add
ljmp
movsl
loopne
mov
adc
leave
mov
inc
cld
adc
mov
call
call
nop
out
pusha
or
clc
cltd
mov
fcomps
xchg
test
or
push
add
sub
push
les
or
rcrl
jno
mov
xchg
mov
add
js
fbstp
movsb
mov
in
inc
pop
stos
push
cmp
call
aam
push
pusha
jne
fisttpl
enter
loopne
pop
lds
gs
sbb
pop
stos
scas
scas
les
rcl
bound
inc
test
test
pusha
mov
mov
sbb
push
mov
mov
or
add
adc
dec
test
inc
sub
sbb
push
in
pop
mov
pushf
xor
jne
mov
and
aad
call
mov
and
add
je
jne
and
sbb
inc
mov
orb
dec
jo
push
pop
pusha
mov
lock
push
adc
test
es
push
nop
sti
int3
loopne
adc
fildl
mov
dec
lret
and
mov
fiadds
arpl
dec
lock
push
sarb
xor
push
mov
fsubl
es
pop
mov
fldt
popf
inc
jmp
jns
lcall
cmpsb
or
adc
repnz
fs
es
fs
pop
insb
hlt
pop
cltd
fs
dec
push
js
push
nop
dec
es
inc
jo
imul
clc
inc
repnz
dec
pusha
fcoms
or
cmp
orb
out
and
lret
enter
loopne
mov
addb
addb
cmp
dec
addr16
dec
xor
and
je
aam
and
dec
int3
enter
rclb
jb
mov
movb
adc
mov
push
mov
or
push
or
pop
sub
adc
pop
xor
xor
shlb
mov
add
enter
rclb
mov
mov
or
inc
mov
mov
jl
pop
fadd
dec
cmpb
push
arpl
fisttps
orl
lock
push
adc
mov
outsl
mov
jns
fcoms
inc
jg
pop
adc
mov
and
clc
aas
push
add
fsubrl
push
sub
and
mov
push
and
popa
test
jbe
stc
enter
xor
add
cmp
or
jmp
and
add
cltd
int3
dec
mov
fcmovnb
dec
pop
and
ss
sub
imul
mov
test
push
cmc
add
rcrl
test
loopne
mov
mov
jmp
xlat
inc
sub
mov
push
out
pushf
adc
fistl
xchg
add
and
js
je
and
sub
adc
dec
cmc
aam
mov
enter
cltd
jnp
mov
loopne
pop
call
or
add
cmpsb
popa
es
xchg
adc
es
and
push
xchg
fisubrl
ret
ljmp
adc
sub
cmp
dec
add
sbb
je
mov
lahf
adc
aaa
jo
adc
jne
xchg
pop
hlt
add
add
inc
mov
add
cmp
add
in
jmp
jge
jge
in
push
push
and
adcb
mov
jno
ffreep
xor
mov
dec
or
inc
xchg
lds
das
and
adc
iret
aam
pop
mov
insb
inc
lea
aam
jbe
pushf
add
stc
fimull
je
sti
fwait
adc
cltd
or
sbb
jb
jo
cli
mov
sti
cld
cli
xor
and
scas
fs
cmp
and
add
and
hlt
add
adc
and
insb
inc
mov
cwtl
dec
pusha
sti
mov
and
imul
xor
mov
xor
and
push
mov
adc
mov
sbb
cs
shl
dec
popa
aam
stos
in
cli
lcall
fbld
test
mov
xor
iret
mov
mov
xor
xor
ror
pusha
add
sbb
les
xor
sub
mov
sbb
das
decl
and
and
fwait
call
mov
lock
push
push
sbb
lret
jp
push
fsubrs
pop
dec
adcl
pop
sub
aas
inc
mov
sub
mov
and
push
inc
xchg
sub
push
repnz
mov
rclb
pop
mov
imul
jp
mov
sahf
mov
stos
inc
add
jae
test
mov
push
pop
mov
sbb
jle
adc
add
decb
fsubrl
int
shlb
mov
jb,pt
addr16
leave
push
push
or
add
call
dec
xor
sub
fistl
jnp
inc
andl
pushf
and
mov
and
push
sbb
test
jecxz
sub
das
adc
add
shll
dec
pop
push
pop
mov
dec
dec
sbb
jno
pop
adc
xor
ret
push
mov
stos
cmp
xor
loopne
mov
cwtl
imul
orl
insb
ds
gs
scas
add
into
pusha
add
cmp
mov
fdiv
aas
fdiv
inc
add
dec
mov
push
mov
call
jl
mov
sub
sub
jo
inc
jg
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
add
or
pop
and
xadd
int
in
push
pusha
pop
pop
dec
popa
or
jns
cmp
pop
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
ljmp
push
lcall
fs
ljmp
insb
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
leave
lcall
mov
sub
adc
or
cmp
rclb
xor
dec
pop
mov
loope
jmp
sarl
push
push
push
jecxz
jb
idiv
out
jmp
je
jb
outsl
arpl
fs
out
fcomp
mov
sbb
push
dec
imul
int3
and
cmp
jb
gs
out
insb
xor
cs
insb
push
bound
and
pop
popa
je
outsl
outsb
ret
into
lods
mov
idivb
xor
divb
incl
sub
adcb
fldcw
js
adc
pushl
outsl
arpl
jae
add
arpl
outsl
mov
addb
add
or
fadd
push
adc
xor
mov
mov
popa
jb
mov
dec
lods
fisttpll
dec
xor
xor
out
btcl
insl
cmp
dec
out
lcall
add
das
das
adc
push
xor
mov
push
inc
inc
gs
insl
bound
daa
cmp
outsl
jbe
dec
arpl
push
jo
fdivrs
jne
jne
dec
jne
xchg
repnz
divl
mov
insb
dec
popa
jb
push
bound
inc
insb
adc
into
mov
xchg
out
jnp
jns
jg
addr16
xchg
scas
push
jne
xor
dec
jno
and
daa
push
scas
clc
sbb
notb
adc
and
jbe
ja
pop
dec
inc
ds
popa
lds
insl
or
filds
mov
adc
ret
inc
jb
mov
dec
or
sbb
pop
rclb
xchg
mov
push
int3
and
and
sub
sub
inc
cmc
dec
shrl
das
movsl
cmp
cmp
ds
inc
das
push
adc
hlt
pusha
cmp
jmp
jle
add
arpl
test
insb
pop
dec
addr16
and
push
pop
or
mov
inc
adc
push
je
ret
pop
inc
insb
jae
cs
je
xlat
je
push
mov
inc
inc
mov
out
jo
insl
and
add
jbe
dec
push
push
sbb
sbb
dec
dec
inc
sbb
and
push
fwait
loope
add
xor
sbb
push
xor
insb
imul
insl
pop
mov
pop
push
shr
je,pn
jo
xchg
mulb
or
pop
mov
and
fs
pusha
addl
imul
data16
pushf
or
xorb
inc
popa
and
mov
fidivrl
sbb
xor
mov
data16
push
xchg
or
aas
xor
loopne
fidivs
dec
mov
add
scas
lcall
mov
test
and
or
mov
sbb
jp
push
xor
ficomps
fs
xchg
jnp
mov
mov
je
and
rolb
push
ds
data16
daa
fidivrl
and
jo
fsubrs
mov
push
add
daa
sub
sub
xlat
and
das
arpl
cmp
arpl
pusha
popa
sub
mov
mov
add
inc
xchg
insb
imul
gs
inc
inc
orl
lcall
mov
pusha
and
xor
gs
ret
sub
push
fistps
push
xor
cs
aaa
mov
xchg
shll
inc
jns
cmp
pop
dec
jae
dec
add
add
inc
xor
ja
outsl
jl
dec
pop
outsl
ss
fs
jb
xor
imul
inc
inc
xchg
push
inc
cmp
mov
data16
jmp
das
mov
mov
adc
cmp
inc
jle
lcall
out
push
cmp
jo
bound
pop
enter
inc
aaa
insl
jmp
add
in
ljmp
sbb
imul
pop
or
cmp
inc
jno
rclb
mov
pusha
mov
nop
inc
insl
imul
cmp
pop
add
push
xorl
cmp
xor
and
mov
lret
cmp
addr16
jae
xor
push
pusha
jo
rorb
test
dec
cmp
mov
pop
pop
data16
lret
inc
sub
pop
dec
mov
or
jo
and
jbe
insl
mov
inc
imul
test
and
dec
cmp
fwait
int3
outsb
inc
jg
lcall
loopne
jbe
jae
add
stc
mull
rol
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
sbbb
gs
popa
mov
add
xor
jg
mov
outsb
popa
js
jae
je
pop
push
pop
add
add
xchg
cmp
sub
xchg
adc
add
add
adc
add
add
add
clc
jg
rolb
add
and
push
pop
pop
or
aaa
clflush
push
push
pop
hlt
and
or
pusha
add
int3
sti
lcall
sub
add
out
fucomip
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
fistpl
int3
push
jo
add
cmp
mov
inc
push
mov
int3
js
jo
leave
jae
ss
rorb
sbb
leave
xchg
lea
mov
nop
xchg
insl
pop
jb
xchg
xchg
lock
and
push
adc
xchg
push
inc
or
ds
cmp
mov
test
dec
adc
test
dec
cmp
pop
adc
loope
je
cmp
fists
lret
cmp
jo
lods
mov
xlat
jb
push
xchg
pop
and
push
leave
and
sub
dec
jb
pop
leave
add
test
add
add
addb
jo
pop
ja
add
xchg
sbb
add
repnz
addb
pop
orb
push
shrl
lods
popf
adc
aaa
add
roll
dec
or
and
add
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
jmp
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
push
xchg
sbb
cli
roll
add
call
movsl
push
add
push
insb
aas
ljmp
or
add
ja
inc
mov
jae
jb
bound
dec
stos
xchg
jbe
cmpsl
inc
ss
popa
mov
repnz
lods
mov
lea
dec
in
fstpt
popa
addr16
outsl
js
push
push
inc
push
mov
rolb
and
insb
gs
jne
pop
addr16
dec
mov
daa
add
insb
divb
dec
imul
mov
jb
jo
ds
and
inc
test
les
daa
pop
mov
and
mov
addl
or
outsb
xchg
cmp
outsb
push
push
mov
sub
fstp
add
push
fdivrl
aad
push
lahf
fs
xor
or
xchg
mov
mov
or
gs
or
and
pusha
es
dec
dec
and
mov
pop
xchg
jae
push
cmp
pusha
ja
or
call
push
adc
das
outsb
gs
mov
adc
jbe
xchg
insb
inc
push
push
push
push
dec
testl
fnstenv
repnz
mov
pushf
mov
or
dec
jge
cmp
add
jg
imul
inc
call
inc
pandn
and
jae
inc
push
shll
xor
jg
popa
jl
mov
rcll
jne
adc
jns
pusha
push
or
stos
push
addr16
das
je
outsl
lods
jo
mov
xchg
daa
xchg
mov
cmpsl
cmp
pop
cmp
cmp
repz
repz
push
das
push
sub
divb
es
jle
sub
sub
mov
jnp
addr16
sub
sub
xchg
loopne
push
cmp
call
cmp
ficompl
pop
pop
cwtl
dec
adc
jb
sbb
push
jb
imul
jo
ss
lret
cmp
sbb
xor
es
sub
jo
sub
mov
fisttpll
lahf
sub
cld
loopne
cmp
repz
call
fnstcw
iret
repz
cwtl
push
dec
add
out
cmp
fildl
aam
cwtl
nop
loopne
mov
test
xor
iret
repz
jl
je
lods
repnz
pusha
xor
pop
pop
daa
pop
adc
pop
es
fcoml
lock
push
push
nop
push
dec
dec
jns
mov
outsl
ds
push
cmp
cmp
sub
and
jns
out
sbb
adc
add
cmp
repz
fcomip
in
rcr
cmp
lods
mov
inc
or
cmp
jl
fiadds
test
pusha
iret
repz
inc
xor
sub
hlt
sahf
out
lcall
xor
out
insb
inc
sbb
clc
cmp
repz
pusha
xor
fsubl
pop
aam
lcallw
shlb
jns
push
test
xor
data16
add
mov
pop
push
in
mov
bound
fs
sbb
repz
jb
xor
xchg
jp
shrd
sub
sub
rolb
add
jle
push
insb
cmp
inc
inc
dec
jae
mov
adc
mov
mov
push
inc
dec
xor
inc
incl
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
lcall
das
adc
sub
adc
xchg
inc
inc
call
rclb
mov
and
jg
scas
xor
jnp
inc
loop
mov
ds
pop
addr16
aas
fcoms
inc
pop
clc
lret
sbb
jb
xchg
jge
inc
lcall
arpl
cmp
adc
dec
scas
jp
adc
incb
mov
mov
and
cmp
dec
imul
pop
jns
iret
lret
add
inc
mov
mov
add
dec
mov
pop
sahf
fwait
ss
sbb
pop
jns
dec
sti
jnp
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
pushl
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jmp
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
test
mov
ds
dec
xchg
scas
lods
sti
xchg
clc
push
xor
sbbb
or
icebp
pop
test
hlt
stc
aas
fdivr
and
es
mov
flds
sbb
mov
insb
mov
jns
mov
dec
test
shrb
mov
outsb
jbe
and
inc
pop
out
mov
inc
inc
or
and
jmp
jo
daa
inc
push
bound
out
aam
dec
push
dec
push
sub
out
dec
mov
adc
pop
add
sbb
cmp
pop
sub
cs
push
push
inc
inc
aas
inc
clc
jg
aaa
lret
pop
sub
inc
dec
cmp
inc
xor
inc
sub
sub
jge
imul
xor
dec
sub
cmp
jno
mov
fldt
dec
xor
pop
add
pop
sub
jg
jnp
adc
adc
add
push
pop
or
sub
sub
mov
mov
dec
or
sbb
push
xor
cmp
mov
mov
lods
sub
xor
adc
ljmp
ljmp
pop
or
sbb
out
out
or
sub
sub
pop
pop
pop
inc
and
movq
pop
and
or
dec
pop
pop
or
sbb
and
pop
pop
pop
pop
test
lcall
push
pop
sbb
adc
pop
es
dec
jge
inc
mov
inc
push
addb
dec
xor
xlat
pop
neg
or
pop
aad
pop
addb
xor
das
push
pop
es
addb
lea
push
inc
and
sub
add
dec
sub
cwtl
repnz
mov
or
and
dec
sub
sbb
inc
sub
and
dec
fisubrl
sbb
mov
sbbb
push
push
cmp
inc
xlat
outsb
jo
dec
aas
add
int3
xor
xor
mov
idivb
and
xor
inc
or
mov
adc
js
sub
stos
pushf
imul
popf
xchg
push
push
mov
jb
mov
sbb
and
gs
fdivs
shlb
es
or
xor
push
or
out
clc
cmp
inc
or
push
sub
or
or
roll
in
sub
pop
cmp
mov
jo
or
ja
aas
cld
pop
push
sub
mov
sbb
movsl
cmp
cld
fildl
dec
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
scas
jmp
mov
xor
xor
jns
cmpsb
jnp
rsqrtps
andb
rolb
xor
mov
outsl
push
push
pusha
andb
mov
nop
pop
xor
push
and
and
adc
mov
hlt
or
dec
mov
pop
and
adc
cmp
outsl
insl
add
pop
and
outsb
popa
sub
jmp
popa
push
pusha
push
or
popl
push
imul
outsb
or
bound
xor
and
push
or
and
repz
push
pusha
nop
mov
mov
push
scas
ds
push
adc
fidivrs
clc
loopne
push
push
inc
push
push
popf
negl
push
and
push
lds
testl
pop
xor
adc
pusha
shll
pushf
cmp
les
sbb
pop
fdivl
scas
cs
fisubs
xlat
push
add
cmp
clc
ss
or
adc
aad
push
add
or
pop
or
push
cmp
xor
and
push
or
sahf
push
fisttpll
push
sahf
mov
cmp
xor
or
or
data16
ret
fcoms
jb
inc
arpl
jbe
clc
cmp
adc
jb
adc
lds
cwtl
pop
push
push
insb
push
adc
fmuls
and
sbb
xor
sub
outsb
xor
pusha
sub
cmp
daa
inc
shll
jp
cmp
push
sub
mov
push
iret
pop
xor
cmp
rclb
and
ja
cmc
cmpsb
hlt
jae
sub
cmp
xchg
mov
dec
xor
out
pop
pop
cmp
mov
cmp
mov
scas
xor
ss
fs
cmp
push
push
hlt
outsb
scas
inc
dec
popa
or
mov
push
pop
test
inc
pusha
dec
cwtl
pop
xor
mov
xor
pop
pop
rcrb
out
jo
popa
jl
xor
jae
movsl
add
pusha
sub
or
and
push
inc
push
das
pop
shll
cmp
inc
xchg
loopne
daa
cmp
into
sbbl
lock
sub
int3
mov
testb
and
and
pop
xchg
stos
pop
fimuls
and
adc
sbb
push
push
fiaddl
mov
scas
pop
cld
add
movsb
call
outsl
andb
loope
inc
mov
xchg
mov
or
push
popa
cmp
and
mov
mov
ds
add
or
inc
adc
adc
xor
ja
cmp
pop
fadds
aas
sub
data16
push
addr16
push
imul
xor
sub
out
sbb
mov
jbe
cltd
into
scas
daa
sbb
add
cli
in
inc
jae
jno
mov
mov
push
out
popa
or
xor
aaa
fdiv
mov
iret
das
pop
adc
daa
xor
jo
xchg
sbb
dec
xchg
popa
xlat
mov
cmp
sub
cmpsl
cli
push
hlt
cmp
popa
cmp
cmp
and
push
jg
and
and
jo
jle
mov
xor
jo
ret
movsb
sub
shr
je
stos
dec
ss
shrb
push
out
lock
cmp
xchg
cs
faddp
sub
cmpsb
cmp
or
inc
xchg
jo
jl
nop
pop
xchg
push
cmp
inc
xor
bound
mov
or
sub
push
fisttpll
pop
or
cmp
push
add
inc
and
test
jb
test
fstps
scas
cwtl
mov
icebp
cmp
or
ja
dec
push
sub
fcoms
pop
push
xor
imul
pusha
cmp
pop
add
sar
inc
or
sub
or
out
lock
out
scas
sub
cmp
adc
and
cmp
into
mov
cmp
sbb
mov
and
inc
add
mov
sub
shll
ja,pt
cltd
mov
add
mov
dec
cmpsl
or
xlat
fwait
add
sbb
or
ljmp
mov
push
dec
pop
aaa
or
pop
push
or
xlat
ret
jle
arpl
inc
cmp
inc
inc
pop
cmp
push
or
or
cmp
xchg
jmp
push
mov
xorl
add
dec
fs
test
add
daa
and
inc
negb
add
bound
popa
mov
sbb
bound
dec
and
xor
jmp
loop
mov
adcl
mov
mov
bound
pop
insl
mov
add
addr16
and
jae
popa
cs
inc
xor
xor
pop
insb
daa
cs
cs
and
xor
js
cmpsl
popa
test
adcb
mov
jae
scas
sahf
or
dec
ret
rorl
push
and
lds
les
or
add
stc
es
xor
ret
push
mov
clc
mov
mov
or
sub
push
or
adc
adc
add
sub
fwait
rcrb
das
mov
xchg
adcb
sub
fadds
mov
pushf
cmp
dec
or
test
cmpsl
mov
mov
jne
es
pop
xor
mov
ret
xorb
pop
mov
sub
sub
xor
jp
and
insl
fistl
adc
sbb
cmp
leave
cli
sbb
test
fmuls
push
push
enter
sbb
cwtl
or
cmp
inc
push
dec
nop
mov
imul
pop
int
pop
js
ds
sbb
jle
pop
and
pushl
xor
aas
adc
mov
lcall
mov
add
lcall
mov
call
add
pop
pop
je
and
pusha
mov
outsb
lods
sarb
adc
inc
sub
xor
push
xor
andb
jmp
sub
push
jo
sbb
inc
add
test
lods
inc
sbb
xor
out
fbld
faddp
push
rolb
repnz
jne
mov
hlt
outsb
stc
dec
pop
cli
daa
nop
add
push
pop
and
sub
stos
xor
nop
ljmp
xchg
xor
and
fmull
push
out
and
loope
push
mov
adc
cs
cmp
mov
das
add
xor
xor
add
add
das
out
add
inc
sub
push
js
das
add
dec
cmp
add
push
push
mov
js
lcall
sub
sbb
lock
xchg
pop
pop
xchg
pop
sub
enter
sub
rolb
loopne
inc
adc
sbb
mov
imul
inc
jmp
push
es
cmp
loopne
test
or
cmp
pusha
sbb
and
xor
or
xchg
cmp
popf
sbb
fmuls
leave
cmp
sbb
fimull
mov
xchg
bound
jo
sbb
push
and
je
sbb
dec
sub
sbb
inc
or
mov
icebp
test
mov
mov
push
popa
outsb
jl
lret
push
and
cmp
bound
adc
pop
aaa
and
popa
iret
sahf
addr16
push
inc
lahf
xchg
push
fiaddl
into
mov
and
dec
lods
adc
mov
sub
scas
pushf
pop
mov
adc
test
dec
divb
cmc
xor
decb
xor
dec
push
push
or
lods
in
dec
sub
add
cmp
xor
insb
or
mov
sbb
xchg
aas
push
movsl
arpl
les
push
cmp
in
fucomip
add
inc
cmc
ss
sbb
cmp
cmp
add
or
dec
ss
addb
pop
or
pop
cmp
cmp
xor
mov
dec
dec
pop
pop
or
dec
inc
inc
cs
pop
ss
js
mov
repnz
loope
add
in
add
cmp
or
cs
icebp
dec
push
pop
push
scas
out
rolb
ficomps
outsb
dec
pop
fdivrl
fistpll
xor
cs
faddl
pop
inc
cmp
jnp
std
and
xor
mov
and
or
adc
and
shrb
out
adcl
sub
jecxz
aaa
push
imul
shrb
or
sub
or
mov
rclb
sub
in
jge
sbb
and
jbe
das
sbb
movsl
xor
mov
or
pop
xor
or
and
gs
mov
aaa
adc
popf
movl
mov
mov
imul
cmp
sbb
out
adc
fcomi
push
dec
pop
xchg
inc
mov
push
flds
rcll
pop
cmp
add
shll
shl
fidivl
pop
pop
mov
cltd
xor
ds
pusha
mov
aaa
xorl
pop
or
scas
dec
or
lea
movsl
dec
and
cmpsl
push
adc
arpl
push
mov
pop
sbb
sbb
and
sub
or
pop
pavgb
or
scas
pushw
in
xsaveopt
push
cmpsb
adc
aas
cmp
ret
inc
pop
xor
pusha
into
movsb
roll
and
aaa
ret
ljmp
adc
fstpl
inc
push
pop
inc
cld
lods
add
test
mov
gs
aas
or
pop
or
xor
sub
sbb
nop
push
cs
mov
test
pop
and
mov
mov
fmull
xor
ss
test
aaa
imul
xor
pmuludq
icebp
or
xchg
ret
sub
or
cmp
imul
faddl
add
pop
negl
push
icebp
mov
mov
xchg
add
aaa
mov
lock
pushl
imulb
je
jo
insb
gs
inc
xchg
fs
push
add
pop
mov
fsubrs
popa
inc
cmova
lods
dec
inc
insb
push
dec
cmp
jle
lds
sbb
add
imul
leave
push
xor
ss
mull
and
inc
fnstcw
out
fldcw
jo
fsubl
fiadds
fdivp
cmp
push
nop
dec
out
cmp
fstps
xor
inc
data16
rclb
pop
add
lds
jl
push
dec
dec
jge
getsec
jg
loopne
shlb
mov
mov
out
sbb
ljmp
repz
cmpb
shlb
movsl
enter
push
push
mov
inc
push
insl
iret
neg
cld
ss
adc
mov
sub
sub
jae
sbb
mov
sbb
pushf
ds
aam
repnz
pop
sbb
addr16
jle
jo
fsubs
call
rcrl
test
xor
dec
xchg
pop
shl
dec
push
mov
jge
add
pop
adc
incb
jbe
pop
push
and
xor
aaa
and
jo
cmp
dec
scas
out
scas
add
mulb
dec
leave
mov
pop
xor
inc
pop
push
jo
push
inc
je
jb
or
outsl
push
dec
imul
dec
adc
lock
pushf
xor
loopne
ror
and
pop
shrb
add
outsb
pop
mov
sahf
xchg
out
inc
jo
pusha
js
sahf
dec
push
dec
inc
inc
fs
pop
and
scas
cmp
loope
lcall
ds
pop
pop
or
js
or
push
dec
outsl
jnp
cmp
xor
sub
sub
xor
sub
scas
clc
inc
xor
inc
push
xor
jmp
sbb
cmp
inc
cmp
outsb
add
cli
push
mov
sub
mov
xchg
sub
xorb
cmpsb
sbb
test
push
sbb
push
test
aaa
bound
clc
lret
jne
cmp
popa
outsb
mov
or
add
stos
and
add
and
mov
addl
aaa
jg
ja
dec
mov
das
arpl
inc
xor
das
jnp
shlb
pop
adc
mov
inc
sbb
pop
mov
out
ja
aaa
xorb
pop
ficoml
orb
inc
push
add
dec
xor
adc
testl
cmp
pusha
add
jl
push
or
jbe
or
sbb
outsb
cmpsb
dec
loop
ja
and
inc
sub
or
pusha
ret
cmp
add
pop
cli
outsl
add
sub
cmp
nop
and
push
jns
fistpll
and
lahf
mov
sbb
or
inc
mov
pop
xchg
dec
mov
and
sbb
loop
jae
or
insb
pop
mov
pop
add
mov
dec
imul
cs
sub
lahf
insb
stos
inc
inc
outsl
lock
inc
out
js
pop
into
ds
jae
outsb
shr
xchg
sub
sbb
push
in
pop
push
cmc
push
pop
xchg
push
fstp
fwait
in
outsb
fcoml
sti
imul
pop
in
mov
imul
xor
arpl
pop
lahf
mov
push
std
xchg
rcrb
ss
add
pop
cld
or
insl
jns
in
scas
push
push
pop
pop
jnp
in
xor
inc
scas
into
clc
inc
cmpsb
cmp
push
data16
sahf
pushw
pop
shl
push
scas
gs
jns
int
cmp
ljmp
dec
mov
js
and
cs
jns
out
out
cmp
jp
inc
sbb
repz
jo
stos
jmp
stc
xor
inc
sahf
push
scas
sub
push
cmpsl
stc
data16
cmpsb
sub
add
push
imul
jmp
mov
mov
aas
sub
adc
sub
scas
ja
out
fidivrs
adc
push
xchg
fwait
lods
iret
sarl
out
add
ljmp
jo
nopl
shr
dec
ds
xchg
push
aaa
mov
push
cmp
test
fisubrs
xor
cmp
xrelease
push
or
repz
mov
lds
push
pop
push
pop
fidivrs
mov
push
push
push
xchg
mov
mov
pop
cli
cmp
mov
test
out
fmulp
sbb
push
dec
xchg
mov
icebp
adc
inc
xchg
loope
fbstp
pop
out
push
add
mov
cmpsl
sahf
sub
ficoml
jl
iret
shrl
mov
cmp
shll
xchg
jns
iret
jmp
and
jl
test
int3
and
out
sahf
sub
jg
mov
int
jns
hlt
push
daa
sbbb
addr16
lcall
cmpsl
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
mov
or
adc
mov
jg
pop
mov
scas
int
mov
leave
loop
and
push
pop
mov
add
idivb
adc
lahf
negb
push
and
pop
sbb
enter
adc
jg
pop
xchg
inc
repnz
iret
pusha
or
jbe
pop
adc
add
cli
and
enter
outsl
pop
into
gs
lcall
test
aas
inc
push
out
out
mov
int
inc
sbb
out
or
aaa
roll
test
cmp
sbb
sbb
xlat
push
out
pop
jb
inc
das
xchg
jae
dec
insl
roll
dec
je,pn
jbe
cmp
pop
push
jnp
push
xorps
mov
inc
insb
pop
push
xlat
jp
out
dec
pop
je
jns
push
jno
ja
fisttps
jp
das
push
lock
in
adc
scas
cmp
sti
imul
pop
retw
push
sub
dec
or
adc
pop
push
dec
mov
ja
or
inc
dec
clc
push
stos
push
clc
dec
outsl
pop
repnz
rorb
aaa
les
xchg
push
ds
or
das
adc
ja
out
popa
insl
jo
es
insb
je
push
mov
popa
jo
jae
es
outsl
and
in
cmp
cmp
adc
and
cmp
mov
mov
mov
xor
xor
xor
xor
xor
cmp
cmp
push
dec
repz
jge
xor
cmp
ds
add
dec
or
sub
add
adc
loop
scas
or
push
inc
or
add
add
dec
or
mov
add
sahf
push
xlat
adc
clc
sub
inc
mov
inc
repz
add
es
pop
das
ds
pop
and
mov
or
sbb
or
loope
insb
jne
sub
mov
jbe
push
aas
inc
testb
jmp
cmp
daa
or
xor
push
shlb
daa
sub
daa
jnp
fisttpl
or
daa
sbb
clc
add
js
jge
ret
add
pop
or
pop
pop
xor
into
mov
dec
xchg
cli
ret
lcall
or
jo
inc
fistpl
push
lahf
inc
ss
xchg
aas
testb
addb
mov
pop
sub
or
push
or
cmp
push
xchg
das
sub
add
mov
sbb
push
cmpsb
lahf
push
inc
push
addr16
add
dec
mov
repz
or
xchg
data16
insb
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
mov
mov
mov
insb
popa
xchg
sbb
sub
ss
int
add
or
adc
int
shll
pop
add
add
push
dec
str
add
stc
das
call
lea
fisubrs
and
das
sub
outsb
test
stos
lock
pop
fcomps
lods
das
sub
or
dec
or
popa
push
or
mov
daa
pop
and
push
inc
inc
popa
mov
pop
rorl
pop
les
push
in
push
mov
and
sub
das
lods
test
mov
mov
aaa
lahf
push
ljmp
shll
mov
ret
outsl
stos
outsl
inc
mov
insb
fstl
push
or
pop
das
add
mov
lods
inc
pop
insl
aaa
iret
sub
mov
sub
and
pop
ret
daa
inc
lds
imul
or
sbb
dec
lods
dec
jg
sbb
jnp
or
pop
pop
sub
repnz
adc
pop
push
cmp
arpl
add
nop
or
add
pop
pop
pop
das
mov
insl
rcr
scas
pop
cltd
adc
adc
xchg
push
xor
outsb
outsb
popl
pop
and
imul
pop
addr16
inc
adc
pop
jg
add
pop
add
or
dec
push
jge
add
mov
and
mov
inc
imul
orb
add
outsl
inc
sbb
or
js
int3
xchg
push
sub
sub
xor
cmp
or
sub
push
and
pop
dec
cmp
add
imul
add
iret
in
or
xchg
pop
xchg
sub
mov
ret
xor
sub
fildl
jae
xchg
pop
es
pop
dec
adc
aad
sub
jg
ss
loop
cmpsl
stc
dec
sub
in
push
adc
filds
add
and
pop
jge
or
jo
lret
loopne
in
das
inc
push
push
xchg
jno
je
pop
xor
dec
in
push
push
rcll
or
daa
imul
mov
push
and
cwtl
pop
sub
out
jge
sbb
sub
das
cmp
push
test
mov
sub
clc
xor
out
inc
adc
sbb
mov
ja
dec
sub
push
pop
insb
mov
xchg
xchg
dec
and
sbb
or
aas
cmp
pop
add
das
push
cmp
add
xor
lret
cmp
adc
add
add
cmp
fistpl
divl
pop
xor
sbb
pop
and
icebp
es
and
lcall
push
imul
arpl
and
sub
inc
pop
into
call
inc
out
xor
add
mov
mov
jo
roll
rcll
add
aas
in
adc
gs
lea
daa
dec
add
or
adc
shr
jmp
dec
daa
cmp
js
jbe
jo
adc
mov
jge
push
daa
loopne
cmp
ret
fidivrl
sbb
cltd
sub
cmp
enter
inc
add
sub
pop
sub
jno,pt
mov
mov
mov
mov
mov
adc
or
inc
das
xor
test
cmp
mov
fcoms
pop
and
jle
inc
xor
add
shll
add
ret
test
adc
ret
int3
adc
and
mov
daa
inc
lret
add
adc
dec
ds
inc
or
xor
push
lds
mov
das
cmp
cmp
xor
mov
sbb
xor
aas
shll
sub
pop
push
sub
imul
or
adc
add
inc
jg
test
or
shll
sub
out
xor
add
notl
cmp
sbb
or
and
jno
lods
arpl
adcl
push
jg
out
add
adc
arpl
addb
and
pop
cs
sbb
loop
sub
cmp
sbb
pmuludq
push
xor
add
mov
imul
hlt
cwtl
cli
daa
leave
jb
jo
loop
push
or
jbe
fs
jbe
cs
add
add
sarb
dec
pop
rorb
and
pop
dec
pop
adc
push
pop
dec
push
add
pop
aas
inc
dec
rorb
aaa
cld
fistpll
pop
or
or
and
add
and
add
decl
sbb
pop
or
xor
or
or
add
pop
sbb
adc
aad
incl
add
pop
cmp
inc
sub
aas
dec
es
sub
sub
push
pop
push
inc
inc
aam
adc
push
dec
adc
ds
mov
jg
out
pop
pop
and
sub
push
sbb
mov
pop
sbb
out
mov
dec
sub
adc
and
and
dec
pop
and
push
pop
or
add
adc
add
push
and
cmp
adc
add
cmp
xor
xor
adc
inc
mov
pop
jecxz
divb
xchg
and
adc
dec
sbb
add
push
mov
ljmp
insb
adc
adc
sub
xchg
or
sbb
insb
in
movsl
cmc
push
add
jb
aas
fistpll
bound
and
inc
or
loopne
loopne
or
out
inc
ret
cmp
inc
xor
mov
cs
test
test
ja
insl
push
outsl
inc
and
movsl
fdivs
out
mov
mov
pop
bound
push
lret
shlb
cwtl
add
test
and
mov
out
imul
or
push
cld
loope
inc
push
sbb
push
push
inc
push
dec
inc
or
push
dec
add
xor
outsl
inc
jg
inc
sub
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
data16
lcall
cmpb
aad
sbb
cwtl
stos
pop
fcomps
call
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
out
popf
rorl
and
sub
sub
fsubrl
mov
fimull
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
dec
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
inc
addl
data16
mov
call
cltd
test
push
hlt
jo
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
scas
lcall
out
orb
js
test
add
mov
mov
ljmp
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
push
std
push
orl
loopne
pop
inc
jns
jne
jnp
dec
inc
jmp
inc
jge
inc
push
jp
dec
dec
inc
je
aaa
cmp
push
jo
push
xor
decl
cmp
insb
cmp
das
cmp
or
arpl
ja
dec
imul
imul
addr16
sub
dec
push
jno,pn
aas
pop
sub
push
xor
testl
or
add
sub
mov
mov
aaa
pushf
sbb
inc
pop
pusha
push
sub
add
lods
sbb
push
inc
sbbb
sub
arpl
aaa
pop
aas
daa
pop
aaa
add
daa
cmp
or
or
test
and
and
xlat
sbb
movups
sub
lret
stc
mov
push
xor
inc
add
xor
cld
in
lcall
inc
add
mov
xor
and
aaa
inc
push
inc
jnp
mov
dec
inc
ss
ucomiss
data16
xor
add
cmp
mov
out
loopne
or
xlat
test
mov
jo
and
mov
pop
xor
popa
and
or
lea
mull
and
mov
popf
or
bound
or
jmp
inc
inc
push
jbe
mov
fistpl
fdivl
loop
jo
arpl
xchg
jno
data16
shll
incb
push
pop
mov
jecxz
pop
je
mov
and
xor
adc
xorb
scas
lea
mov
add
dec
pop
pusha
mul
sbbl
loopne
loopne
or
xor
lods
mov
shlb
or
cmpsl
or
pop
mov
add
push
cmp
rcll
jp
pop
or
sahf
das
mov
int3
push
sbb
xor
and
dec
insl
or
movsl
loop
sub
pop
lock
lock
mov
adc
push
push
add
sbb
pop
push
push
pushf
ret
scas
mulb
sub
cli
mov
gs
lret
jnp,pt
mov
sub
jge
sub
orb
lods
sbb
and
sbb
add
mov
pop
add
add
cmp
popa
mov
mov
bound
cmp
sbb
xor
cmp
pop
push
in
push
mov
pusha
in
addr16
add
ds
push
mov
loope
sbb
push
pop
out
and
or
and
pushf
enter
inc
mov
adc
bound
or
xor
mov
test
inc
inc
lods
push
xor
or
into
out
aas
outsb
outsb
je
xor
js
jb
in
xor
jae
popa
insl
gs
cmp
ret
push
adc
and
and
inc
aad
inc
mov
pop
idiv
loop
mov
xor
insl
loop
and
das
out
test
dec
sub
andb
mov
popa
je
push
icebp
pavgw
inc
pop
out
ret
mov
sub
imulb
or
cmp
or
pop
push
adc
pop
dec
rclb
add
pop
pop
push
sbb
or
xchg
push
les
aad
pop
test
xor
je
add
fstl
lea
ret
lahf
fs
sbb
add
push
jae
and
out
mov
xchg
pop
adc
or
push
xchg
pop
dec
sarl
sbb
pop
aas
stos
pop
ds
inc
sub
insb
mov
ds
lock
sbb
call
or
pop
mov
xor
xlat
adc
push
xchg
xchg
pop
push
cmp
adc
call
inc
or
fsubrs
inc
adc
popa
dec
call
pop
push
ja
jb
pop
lock
les
repz
int
pop
inc
jne
dec
push
inc
mov
call
pop
cmp
adc
mov
and
inc
or
pop
cmp
inc
sti
test
cmp
cmp
jnp
push
dec
push
and
adc
pop
ss
pop
nop
jns
es
pop
lods
call
enter
push
or
bound
hlt
inc
push
ljmp
imul
and
lods
dec
xor
imul
ds
ficomps
fwait
fs
mov
push
inc
cmp
test
scas
pushf
push
cmp
arpl
decb
xorb
das
scas
inc
sub
test
adc
adc
sbb
es
xor
mov
pop
cmp
hlt
push
mov
xor
mov
cmp
cmp
and
mov
mov
mov
hlt
cmp
sahf
cmp
inc
and
cmp
pop
add
insl
adc
mov
xor
push
lahf
dec
cmpsb
ja
scas
inc
lcall
lret
adc
xor
sub
imul
push
or
outsb
loopne
dec
aaa
push
add
mov
outsl
imul
es
inc
jb
mov
xlat
ficomps
and
xor
out
out
pop
pop
or
pop
push
pop
xor
pop
fcomps
dec
xchg
enter
dec
pop
movsl
mov
pop
repz
hlt
push
fildl
cmp
xor
sub
push
adc
add
lret
pusha
mov
add
in
and
add
inc
and
aas
dec
cld
cmpsb
rorb
and
and
mov
add
or
inc
and
inc
add
adc
out
or
add
cmp
add
fstl
dec
cmp
jns
jne
xchg
add
adc
pop
gs
mov
std
movsl
ss
dec
and
addr16
popa
pop
pop
xor
sbb
lods
push
and
cmovno
sbb
punpckhwd
orb
je
scas
pop
bswap
and
outsb
sub
cmp
adcl
dec
push
inc
pop
push
dec
inc
dec
leave
mov
ljmp
jb
lods
outsb
xor
inc
lock
lock
pop
daa
pop
daa
cmp
push
dec
jb
push
or
sbb
inc
aas
dec
xlat
xchg
js
pop
mov
das
fsubs
mov
and
jle
scas
cmc
test
ljmp
add
jno
xchg
sbbb
cs
pop
xchg
mov
mov
inc
and
or
ret
jb
nop
mov
sub
pop
jo
js
inc
add
lret
add
call
push
in
and
sbb
aaa
jae
cmp
call
adc
mov
imul
adc
push
push
push
inc
cs
dec
lcall
inc
arpl
sbb
push
pushf
cmp
xchg
js
mov
sbb
dec
or
pop
lods
xorl
mov
push
pop
cmp
jle
xchg
push
out
inc
push
pop
add
xchg
jb
pop
dec
jp
pop
int
dec
cmc
dec
gs
pop
push
adc
mov
or
cmpsl
or
push
scas
jnp
pop
cmp
xor
xor
loop
sahf
or
fwait
push
jne
add
lods
push
add
sti
jno
or
je
or
sub
ss
push
cmpsl
mov
push
out
enter
inc
shrl
fisubrl
sbb
mov
dec
and
ficoml
stos
jp
andb
inc
das
outsl
or
or
outsb
vmovsd
arpl
psrld
loop
outsl
sub
push
sbb
inc
dec
stos
test
pop
xlat
outsl
scas
pop
inc
or
imul
cld
pop
mov
push
push
push
das
xor
xor
mov
hlt
dec
and
or
and
sbb
es
sub
mov
or
addr16
inc
mov
fistpl
outsl
insl
pop
xor
dec
and
xor
testb
mov
inc
dec
dec
dec
inc
mov
imull
data16
cmp
scas
mov
andb
fldenv
pop
rolb
subb
mov
int3
dec
push
pushf
push
mov
push
test
aad
scas
inc
pop
mov
popf
fs
sub
adc
dec
jne
dec
outsb
add
xchg
dec
inc
xadd
cmpsb
mov
test
inc
xchg
inc
adc
cld
cmovo
fcmovnb
fidivrs
mov
cmp
mov
inc
sub
outsl
pop
pop
inc
dec
add
cmp
xor
lret
popf
xor
sbb
inc
cmp
bound
xor
add
out
mov
dec
movsb
mov
xorl
adcb
xorb
iret
mov
mov
lahf
add
daa
adc
sarb
pusha
adc
xchg
and
mov
inc
add
loopne
aaa
push
push
pop
daa
aas
jg
out
mov
dec
outsl
mov
and
inc
jb
push
jb
xor
push
jb
push
sub
and
push
jb
add
daa
fwait
mov
or
mov
or
fwait
iret
shrl
aas
sbb
mov
dec
sti
xor
or
aam
adc
sarl
hlt
cmp
mov
push
cmp
cmp
sahf
out
sahf
cmp
cmp
cmp
cmp
jns
jns
push
je
cmp
repz
and
or
aaa
out
mov
push
adc
add
dec
out
push
or
out
dec
test
rclb
add
imul
or
iret
xchg
cmp
in
cld
add
or
add
jae
mov
push
mov
adc
in
jge
cwtl
dec
inc
mov
fildl
mov
jg
pop
mov
push
in
hlt
ja
and
in
in
xchg
mov
dec
inc
lock
loopne
mov
das
or
shll
push
lods
cmp
add
mov
filds
or
repnz
inc
inc
add
adc
mov
fwait
cmp
outsl
add
xchg
or
fistpll
sub
and
enter
shrb
mov
dec
pushf
xchg
add
enter
mov
jb
xchg
pop
mov
pop
jo
fistpll
mov
jns
push
cmp
ret
push
lock
je
pop
scas
add
bound
leave
push
lods
fs
xor
nop
pushf
pop
enter
dec
repnz
cmp
enter
ss
sub
adc
sarb
xchg
sub
cmpsl
dec
cmp
sub
or
add
cmp
jl
jnp
aam
push
rolb
mov
lahf
mov
loopne
sbb
cmp
fs
pop
cmp
push
jg
les
repnz
sub
sub
stc
sahf
dec
cs
cmp
outsl
add
test
scas
fs
outsl
and
xor
out
ds
or
and
adc
outsl
and
mov
and
mov
add
xchg
outsl
out
mov
add
cmpsl
add
sbb
xlat
cmpsl
lcall
aaa
inc
sbb
push
or
adc
fs
insb
ficoms
add
les
inc
cmovle
mov
mov
lahf
mov
aaa
ret
out
inc
push
push
push
pop
dec
rcr
xor
mov
ret
mov
adc
pop
dec
ficoms
add
or
or
repnz
ja
or
rolb
icebp
mov
xchg
outsl
jg
cmp
and
daa
negb
jle
add
push
jne
lcall
rolb
ja
cmp
inc
push
or
push
xchg
push
add
dec
inc
adc
mov
adc
faddl
popf
nop
inc
in
inc
lahf
xlat
or
or
dec
and
aad
int
adc
add
xlat
or
lcall
enter
xchg
adc
loopne
jo
inc
inc
lahf
xchg
adc
inc
jno
pop
lods
inc
pop
mov
addb
mov
and
add
cld
add
inc
scas
jo
clc
push
test
ret
push
pop
aaa
mov
pusha
mov
imul
dec
xchg
aaa
in
xchg
or
bound
add
jb
jecxz
adc
add
xchg
xchg
lods
pop
jb
je
test
xchg
cmp
pop
add
les
add
mov
addr16
and
fs
adc
inc
add
in
lods
dec
sub
inc
mov
incl
xchg
sbb
fildll
add
dec
fidivrs
ds
adc
adc
inc
pop
or
inc
sbb
clc
inc
cmp
sbb
aaa
add
push
xor
ficomps
fs
movsb
cmpsb
jo
mov
xor
push
sub
add
or
daa
dec
dec
scas
fs
sub
daa
or
add
in
repz
sahf
push
mov
push
push
mov
pushf
dec
sub
ss
ja
xchg
aas
add
pop
xchg
inc
cmpsl
adc
or
aas
je
pop
enter
add
xchg
popa
inc
lcall
fwait
mov
or
in
pop
dec
fbstp
nop
fwait
mov
add
add
or
pop
addr16
orl
dec
dec
pop
scas
fadds
xchg
add
xorb
mov
add
nop
lahf
sbb
fsubs
pop
or
test
test
or
fdivrs
mov
jnp
inc
push
test
push
das
push
adc
fwait
insb
outsl
add
pop
leave
add
mov
andl
enter
inc
pop
fcomps
mov
xchg
sub
sbb
sub
dec
das
or
enter
mov
push
dec
outsl
movsb
adc
xchg
jl
mov
sub
imul
pop
out
out
add
loopne
lock
clc
aas
sbb
addr16
pop
mov
js
out
xor
cmp
sar
push
fsubs
fs
sahf
cmpsl
stc
cmp
and
pop
cmpb
dec
aas
jge
mov
hlt
out
sahf
out
dec
cmp
xorb
push
dec
jb
or
out
lcall
addr16
repz
out
dec
es
addr16
cmp
xchg
out
sahf
dec
mov
cmc
sbb
dec
repz
push
movsl
fstps
push
cmp
sahf
out
cmp
xlat
pop
push
xor
lahf
out
mov
call
lcall
sub
jl
out
mov
cmpsl
stc
cmp
jle
negl
push
xor
jbe
loope
push
cmp
cmpsl
stc
cmp
and
jns
cmp
pop
push
pop
push
pop
push
cmpsl
stc
cmp
insl
test
ja
jge
lcall
pop
xchg
cmpsl
stc
xor
test
pop
call
repz
sbb
mov
repz
mov
dec
repz
fiaddl
sub
mov
repz
cmpsl
ficomps
addr16
idivb
push
sahf
cmpsl
stc
adc
test
lahf
cmpsl
flds
imul
insb
fwait
jl
cmpsl
stc
adc
outsb
jns
iret
shrl
stc
cmp
repz
jo
jmp
jno
ds
movsl
add
dec
jae
repz
out
xor
sahf
out
iret
fadds
jle
pop
jbe
enter
jl
ja
or
push
nop
out
lcall
loop
stc
cmp
and
in
sub
iret
repz
into
add
cmpsb
in
fsubp
imul
sub
xchg
jg
ds
roll
inc
push
push
add
jns
adcl
cmpb
out
push
add
repz
call
adc
stc
cmp
xchg
call
and
mov
int
imul
inc
neg
jl
ds
push
in
xchg
and
test
sarl
inc
xchg
mov
jns
out
cltd
popa
movsb
pushl
lcall
fstpt
fwait
mov
repz
les
pushf
push
and
imul
mov
sti
cmp
andb
inc
sarl
loopne
movsl
push
xchg
pop
cmpsl
loope
data16
insl
test
stos
add
scas
scas
add
and
add
inc
xchg
cmp
loopne
mov
add
xchg
out
dec
push
add
push
js
stos
jae
cmp
ja
add
leave
lods
ljmp
call
aam
rcrb
inc
aas
inc
in
test
fidivl
int3
loopne
or
mov
sarl
aas
icebp
push
cmc
out
ret
add
push
push
mov
mov
popf
mov
aaa
data16
inc
add
inc
mov
enter
cmpsl
mov
or
enter
add
outsl
out
inc
out
das
ss
adc
int3
jg
dec
cmp
push
aas
nop
push
inc
jns
dec
mov
lahf
fmuls
push
xchg
inc
in
es
push
fcomip
jo
fdiv
push
sub
aas
jge
dec
adc
cmpl
out
cmp
stos
mov
nop
das
fs
sar
inc
xchg
mov
jle
ss
mov
mov
mov
xchg
test
xchg
inc
sbb
leave
leave
mov
xchg
aad
pop
fadds
jb
jnp,pn
inc
ljmp
lret
inc
mov
aaa
sbb
push
inc
sbb
call
sub
mov
mov
inc
dec
push
or
dec
dec
xor
into
jl,pn
movups
push
popf
sbb
das
enter
lahf
call
push
test
rcrl
inc
ret
mov
loopne
add
or
mov
lock
push
cli
aas
cmp
inc
incl
pop
aas
int3
adc
pop
in
and
and
daa
fimull
sub
push
ret
and
inc
mov
pop
pop
push
in
nop
or
xor
inc
subb
iret
cmp
push
add
outsl
loopne
inc
dec
les
cmp
pop
mov
aam
cmp
push
push
lcall
es
xchg
xchg
or
pop
in
adc
sti
cmpsb
mov
xchg
pop
loopne
inc
xchg
test
jg
push
loop
movsl
rol
push
pop
fwait
inc
divl
leave
cld
pop
rcll
iret
in
jns
add
add
xchg
and
xchg
pop
cld
add
or
xor
xchg
dec
adc
insb
mov
push
add
fsubl
mov
sbb
push
in
in
je
sub
dec
cmpsb
jo
adcb
enter
and
fmul
addr16
jo
in
pop
sbb
pop
jbe
fwait
in
pop
cmp
mov
jns
cmpsl
addr16
movsb
ja
in
xchg
mov
sub
testb
add
and
cmp
jg
pop
add
dec
xchg
dec
sahf
sbb
mov
pop
push
add
or
pop
jl
dec
inc
pop
daa
dec
dec
mov
in
mov
mov
loopne
add
jns
pop
test
inc
dec
pop
pop
and
daa
cmp
out
jns
sbb
add
repz
pop
dec
add
add
add
sub
xor
ds
jmp
repz
or
nop
dec
push
mov
push
inc
and
repnz
add
and
lahf
or
lea
pop
add
mov
add
loope
jmp
das
xchg
out
incl
cmp
or
sub
dec
dec
enter
dec
push
dec
cmpsl
xchg
xchg
mov
cmpsl
pusha
cmpsl
jbe
xchg
xchg
xchg
xchg
xchg
mov
push
ror
xchg
xchg
xchg
rcr
loope
popf
out
mov
test
dec
inc
unpcklps
jae
pop
lahf
pop
and
sub
xor
cmp
daa
cmp
mov
cld
adc
shll
push
xlat
popa
push
pushf
loopne
cmp
xchg
setg
dec
mov
mov
test
shlb
int3
cmc
mov
cld
scas
daa
sbb
cmp
pop
sub
bound
pop
dec
xchg
stos
rclb
jl
cwtl
and
lahf
or
add
xchg
pop
and
out
xor
push
aas
push
mov
jb
scas
or
xchg
dec
jo
push
pop
arpl
jg
arpl
cltd
inc
repnz
dec
sbb
int3
arpl
jns
cmp
dec
xchg
pop
inc
ret
pop
xor
adc
and
xchg
cmp
add
imul
jb
and
cmpsl
jnp
orl
xchg
xchg
fildl
mov
mov
xchg
movsb
fs
dec
cs
fs
lock
out
dec
inc
gs
mov
dec
mov
dec
push
dec
pop
dec
imul
dec
jg
mov
dec
repz
mov
or
or
or
or
cmp
loop
in
adc
iret
repz
adc
push
adc
out
sahf
out
sbb
sub
aaa
push
inc
pop
push
sbb
repnz
popa
sbb
outsl
push
sbb
mov
in
mov
dec
cs
dec
rcrb
push
les
inc
mov
roll
sbb
pop
ja
out
pop
add
sub
rcll
lock
in
add
test
mov
push
daa
xchg
push
push
mov
lahf
pop
xchg
or
add
loop
push
push
mov
inc
es
xchg
pop
iret
sub
or
xlat
push
push
and
mov
push
add
daa
iret
cmp
add
fidivs
xchg
lock
ja
push
imul
push
daa
inc
scas
mov
mov
add
pushf
add
or
inc
lds
imul
pushf
or
mov
inc
loopne
jo
das
sbb
dec
adcb
push
nop
mov
pop
roll
rorb
jecxz
arpl
add
mov
inc
push
leave
sbb
add
mov
cmpsl
adc
in
roll
fwait
in
imul
pusha
xchg
xchg
testb
iret
add
dec
dec
sahf
xchg
rolb
outsb
fnstsw
mov
pop
scas
inc
pop
xor
movzbl
mov
jns
inc
insb
pop
or
test
insb
out
mov
mov
mov
icebp
add
insb
xchg
mov
mov
push
or
gs
mov
cmp
mov
out
mov
in
adc
leave
and
outsb
rorl
add
insl
jmp
leave
dec
push
or
pop
dec
outsb
fisttpl
adc
ja
mov
rcll
fldenv
pop
insl
xchg
push
mov
cld
pop
dec
shlb
push
in
dec
and
inc
dec
jb
sub
outsl
cmp
dec
dec
and
jo
mov
push
push
lea
push
leave
jae
mov
add
pop
out
out
pop
movups
xchg
sbb
mov
push
fbstp
in
add
jo
adcb
jo
pop
xchg
in
lds
jo
enter
pop
jb
pop
addr16
mov
pop
or
pop
jns
stc
sbb
pop
and
pop
jns
jns
xor
pop
inc
pop
dec
pop
jns
jns
push
pop
pop
pop
arpl
pop
fnsave
jns
pop
jnp
sbbl
daa
daa
daa
push
or
daa
daa
or
or
jb
pop
push
add
jb
add
add
and
jno
mov
insl
addr16
mov
insl
push
mov
xchg
lcall
push
dec
pop
and
add
das
xchg
aam
pop
inc
pop
pop
rcll
subl
or
out
xor
hlt
pop
ja
les
int3
addr16
add
mov
outsl
out
xlat
negl
pop
inc
jle
lcall
femms
add
mov
push
daa
das
int3
jo
or
aaa
pop
aas
pop
lahf
or
and
je
mov
jp
fwait
in
pop
push
ja
iret
in
orb
iret
ret
push
adc
ljmp
bnd
lar
dec
or
sub
adc
mov
cmp
sbb
cmovle
lock
dec
add
dec
inc
jbe
popa
cmpl
push
sbbb
testb
cmp
inc
pop
or
out
pusha
es
adc
pushf
orb
add
add
jmp
jns
fstpt
mov
rclb
pop
leave
in
and
jne
out
lahf
fcmovne
leave
ljmp
and
and
pop
cmp
out
mov
pop
dec
pop
push
cs
in
dec
sahf
add
jno
or
xchg
or
xchg
mov
jns
xchg
xchg
fsub
out
add
out
mov
pop
divps
pop
and
push
leave
sub
pop
pop
and
and
pop
pop
pop
pop
and
and
pop
pop
pop
pop
das
and
and
pop
ficompl
xchg
iret
add
js
mov
push
mov
loopew
daa
adc
pop
js
cmp
push
pop
mov
jbe
leave
pop
rorl
fstps
loope
jns
sahf
push
jmp
icebp
testb
wbinvd
adc
or
js
pusha
sbb
xchg
and
lcall
jb
enter
pusha
lods
pusha
dec
mov
mov
push
mov
popa
sarb
enter
dec
dec
popa
push
popa
pop
popa
sbb
aas
push
js
mov
andb
pop
adc
in
pop
jp
out
das
xchg
out
jmp
add
pop
add
cmp
bound
pushf
pop
mov
xchg
fidivrl
sub
inc
repnz
add
jb
sbb
cmpb
iret
stos
repnz
jl
mov
jnp
jnp
in
out
add
scas
out
inc
arpl
in
dec
inc
pop
arpl
cmp
arpl
arpl
arpl
or
jnp
pushf
fsubl
out
and
pushf
stc
add
pcmpgtb
outsl
in
xchg
fs
push
or
inc
fs
jl
and
imul
in
mov
mov
in
ror
or
enter
jl
fs
fs
add
fs
and
in
and
dec
out
data16
mov
ja
lock
cltd
add
sub
jns
mov
repnz
add
xor
sub
xor
mov
push
push
add
jns
leave
fcoml
adc
out
or
dec
or
push
addr16
scas
or
mov
jns
ljmp
nop
iret
mov
inc
push
push
add
mov
jg
xchg
jg
jmp
push
add
in
xor
mov
mov
out
das
into
push
or
ud2
test
iret
repz
out
addr16
xchg
decl
sbbb
mov
dec
jb
adc
push
in
push
pop
gs
in
in
mov
dec
es
xorl
in
hlt
iret
enter
xchg
or
mov
or
sub
ja
stos
cmp
cmp
leave
repz
sahf
add
push
add
push
call
mov
popf
in
imul
jns
push
add
addr16
das
out
imull
ljmp
in
in
push
push
push
push
in
in
push
push
push
push
frstpm(287
in
push
push
pop
ud2
cmp
cmp
pop
cmp
cmp
push
add
cmp
add
pop
sbb
sahf
out
sbb
ja
in
sahf
out
push
xchg
pushf
pushf
cmp
mov
lahf
cmpsl
repz
repz
and
add
mov
es
add
into
leave
testl
fnsetpm(287
ret
jmp
inc
push
add
dec
imul
negb
pop
imul
adcb
cmp
stos
cpuid
lcall
movsb
rcr
mov
dec
dec
loopne
pop
lock
clc
negb
add
movntq
or
adc
sbb
repz
sub
daa
dec
mov
cmp
cmovo
js
cmp
push
pop
insb
xchg
adc
call
xchg
iret
leave
repz
nop
add
ror
push
add
repz
fiadds
jmp
pop
das
jo
out
or
or
push
in
cmpsb
xchg
test
pop
das
dec
insl
xchg
fucom
int
push
push
add
pop
insl
push
adc
enter
dec
jbe
inc
lcall
xchg
jbe
mov
xchg
in
cwtl
jmp
leave
leave
leave
inc
insl
insl
insl
push
test
mov
incl
dec
outsb
lcall
outsb
and
pushf
pop
mov
ja
pop
data16
jns
enter
outsb
xorb
out
sahf
pop
lods
jb
sbb
xlat
sbbb
jb
out
inc
and
repnz
mov
enter
mov
or
adc
into
leave
jae
test
add
mov
jmp
xor
es
outsl
mov
jl
iret
insl
in
xchg
test
sete
cmp
repz
add
add
pushf
mov
les
mov
or
fcompl
in
jns
out
in
push
hlt
hlt
mov
adc
adc
or
cmp
mov
das
jo
fcmovne
or
push
addps
bound
cmp
push
pop
mov
adc
jno
inc
mov
mov
jbe
sbb
test
mov
rorl
add
in
xor
jecxz
dec
xor
femms
jno
fisttpl
push
jno
das
das
dec
jno
cmp
int3
lahf
jno
imul
and
jno
cltd
pop
dec
cs
daa
out
movsl
dec
push
add
fsub
aas
cmp
mov
lock
or
pop
dec
jae
iret
push
push
add
mov
cmpsl
call
dec
cmp
jb
push
pop
push
iret
fwait
loopne
aaa
jb
inc
push
add
divl
jmp
push
sahf
out
sahf
or
pusha
or
mov
js
xchg
jb
cltd
test
ja
inc
mov
mov
int3
aam
repz
dec
in
add
mov
pop
add
cmp
repz
or
or
sbb
fsts
sub
mov
push
sbb
cmp
inc
jae
adc
in
popf
dec
addr16
xorb
in
mov
jae
jae
add
test
aam
into
popf
xchg
lret
rcrl
pslld
fstps
xor
inc
dec
push
sbb
sub
and
jg
lea
mov
mov
push
out
rcr
dec
inc
jp
stc
push
je
pop
push
leave
andl
or
push
sub
enter
shlb
dec
push
dec
jb
cmp
stos
sub
fbstp
inc
dec
dec
das
or
push
add
pop
loop
es
ss
jne
insb
jle
lahf
or
sbb
and
nop
dec
sbb
insb
pop
nop
dec
dec
dec
jg,pn
mov
in
add
iret
fidivl
and
outsl
in
lock
jne
cmp
aad
jbe
adc
daa
push
inc
pop
cmp
push
cmp
jno
and
test
dec
inc
repnz
xchg
mov
nop
xchg
xor
clc
jbe
jb
enter
ja
ja
ja
pop
mov
and
sub
addr16
iret
inc
ss
sub
xchg
or
xchg
xchg
cmpl
push
sahf
das
pop
ja
jb
jb
ja
orb
lcall
enter
ja
ja
cmpsl
sahf
ret
lret
xchg
mov
jo
lock
clc
divps
int3
js
add
xor
push
jb
aas
xor
cmp
vmread
and
js
or
cmpb
loopne
xchg
sbb
and
pusha
xchg
daa
enter
xchg
loopne
loope
pop
pxor
enter
mov
iret
call
mov
jns
aas
nop
sahf
add
add
jb
inc
repnz
xor
jns
out
xor
xchg
dec
dec
dec
outsb
xchg
lsl
fsubrl
mov
psrld
adc
xchg
dec
dec
ja
dec
jp
or
pop
adc
cmc
and
xchg
cmp
add
fnsave
pop
ltr
pushf
jmp
cmpb
mov
inc
mov
pop
popf
pop
and
or
mov
xchg
pop
cmp
cmp
jnp
jnp
jnp
mov
cmpsb
daa
and
push
aaa
js
es
inc
inc
dec
jnp
cmp
xchg
pop
cmpsl
pop
arpl
jb
xchg
jbe
push
jnp
mov
inc
jnp
lar
test
sbb
jmp
push
inc
das
xchg
xchg
sbb
fiadds
mov
aas
jl
punpcklbw
and
iret
cld
andl
leave
imul
lea
cwtl
shrl
daa
leave
jl
pop
push
mov
mov
cwtl
daa
pop
in
nop
xchg
jge
mov
and
mov
mov
stos
rcrb
mov
or
push
pavgb
mov
push
stc
jmp
dec
mov
cmp
jle
push
leave
xor
jle
punpcklbw
xchg
dec
sbb
jle
dec
push
add
sbb
cmp
daa
ds
out
sahf
js
addb
xor
jmp
add
das
das
das
pop
scas
cwtl
jle
jle
jle
jle
das
mov
pop
vmwrite
iret
dec
or
fdivrs
push
out
sahf
out
pop
call
dec
sahf
sbb
add
or
fisttpll
pop
adc
push
aaa
lcall
daa
and
or
adc
daa
xor
mov
jg
xchg
cmp
pop
push
cwtl
fwait
pop
jg
inc
mov
jg
jg
jg
pop
inc
xchg
jg
jg
lock
jg
jo
pop
mov
or
outsb
xchg
sbbb
sbb
mov
orb
dec
sahf
or
enter
xchg
cmpsb
movl
add
syscall
cwtl
jns
leave
repz
mov
add
or
ja
enter
pushf
scas
loop
push
cltd
andb
xchg
xchg
mov
outsl
addl
add
popf
and
addl
subl
jae
mov
or
add
iret
sbb
and
jns
out
dec
pop
push
or
sahf
pop
aaa
clts
pop
add
or
jns
out
or
in
sahf
punpckhdq
jb
in
dec
sahf
adc
dec
sahf
out
push
mov
mov
sbb
aad
or
cs
add
add
outsb
addl
mov
xor
dec
iret
repz
cmp
or
dec
or
repz
or
das
movsb
fwait
outsl
sub
inc
xchg
daa
lahf
xchg
shl
in
ret
mov
fcmovu
loop
pminsw
or
pop
or
repnz
cmpl
pop
inc
pop
filds
repnz
mov
or
fists
push
mov
push
jmp
test
xchg
mov
rcrb
ja
add
mov
orb
push
inc
xchg
out
or
loopne
gs
loopne
scas
test
and
sub
aas
dec
test
cmp
sbb
push
pop
pop
popa
jbe
cmp
or
jno
outsl
pushf
cmp
fisttpll
add
sahf
pushf
xchg
cltd
test
dec
cs
mov
fistpl
lsl
inc
mov
jl
xchg
enter
inc
xchg
mov
pop
push
xchg
fbld
in
cmp
or
xchg
jmp
xor
add
sbb
loop
push
sti
xchg
xchg
inc
mov
xchg
xchg
push
push
lcall
or
leave
out
xor
adc
xchg
xchg
movsb
addr16
pop
leave
and
test
daa
enter
xchg
fsubl
incl
in
mov
mov
shll
jmp
xor
mov
fwait
mov
in
sbb
pop
push
sahf
out
cmp
sbbb
mov
xchg
out
jns
loop
ljmp
repnz
mov
adcb
adc
movsl
and
jb
mov
mov
mov
sqrtps
jnp
fmuls
addl
mov
in
jbe
setle
in
add
jb
dec
push
jb
aam
lock
adc
or
jns
push
push
pusha
push
popf
cmp
jnp
and
mov
and
andl
movsl
rorb
cmpsl
push
add
and
in
fldl
das
dec
xchg
add
mov
repz
rcrl
mov
iret
movl
leave
leave
inc
repnz
add
adc
cmp
mov
inc
test
lea
cmp
cmp
jle
mov
cmp
xchg
sahf
push
push
cmpsb
pop
repz
repz
or
cmp
or
or
into
lea
iret
fimuls
push
out
fisubs
lea
mov
jb
add
adc
in
sahf
out
add
add
fmull
mov
mov
mov
js
orb
mov
mov
mov
mov
in
mov
mov
mov
in
loop
mov
mov
fsubp
in
or
sub
pop
jns
out
xor
cmp
inc
out
sahf
out
dec
and
sahf
out
sahf
popa
and
jns
out
jl
xchg
xchg
bnd
out
lcall
jae
cs
mov
xor
inc
leave
push
test
dec
mov
cmp
fdivl
add
or
pusha
data16
nop
nop
je
out
push
add
out
popf
pushf
add
fisubs
daa
push
leave
pusha
stos
nop
cwtl
mov
test
bswap
loop
and
sti
adc
sub
daa
dec
test
cmp
xchg
setge
movsl
in
in
daa
lods
dec
adc
cmp
lds
sahf
mov
xchg
das
dec
xchg
mov
enter
xchg
pop
das
push
daa
daa
js
and
and
scas
fucomi
in
outsb
daa
mov
movntq
lea
out
imull
daa
out
push
cs
cmp
popa
outsb
daa
iret
jae
xor
iret
leave
repz
xor
daa
iret
mov
push
cmp
iret
inc
mov
mov
pop
sarb
xchg
pop
adc
cs
lods
push
jb
sarl
jo
adc
cltd
xchg
jmp
dec
xchg
shr
nop
fcmovne
mov
xchg
sbb
and
daa
pop
sub
imul
clc
scas
dec
leave
rep
test
mov
cmp
leave
ror
xlat
add
loop
clc
add
or
add
dec
sahf
or
das
pop
cmp
iret
leave
repz
adc
leave
repz
je
jg
push
leave
repz
cmp
mov
cmp
stos
sbb
cmp
int3
sbb
ds
leave
in
clc
and
xchg
in
sbb
mov
xchg
insb
ds
xchg
scas
sub
scas
xchg
iret
sub
mov
ret
mov
sbb
xchg
push
loopne
divps
das
call
repz
or
cs
push
or
repz
fwait
femms
sub
xor
jns
iret
adc
inc
push
adc
fwait
cmp
push
push
adc
lar
pop
push
add
push
jo
iret
jecxz
fwait
lret
xchg
cmpsb
sbb
shlb
sbb
xchg
into
add
pcmpeqb
xor
aas
ret
cwtl
aas
lret
adc
mov
sbb
outsb
xlat
notb
mov
sahf
push
movhps
mov
inc
cmovns
pop
leave
jae
pop
add
outsb
daa
test
mov
xchg
and
mov
pop
into
cltd
jns
xchg
xchg
out
push
test
jo
lcall
sub
jae
mov
add
lcall
xor
in
mov
push
ret
xchg
dec
push
mov
mov
pop
incb
fwait
push
fwait
pop
out
jns
push
add
es
dec
dec
rcll
fdivs
addr16
punpckhwd
jno
lahf
fcmovne
jns
cmpsl
push
inc
mov
pushf
pushf
dec
movsb
lods
mov
xchg
mov
mov
jb
daa
mov
pxor
fwait
pop
lcall
fcoml
iret
sub
cmp
inc
jmp
repz
dec
add
mov
sub
mov
fisttps
movsl
fucomi
jbe
pop
lods
fbstp
pop
add
mov
daa
mov
inc
inc
mov
clc
fsubs
addr16
mov
outsl
adc
xchg
popf
adc
in
in
mov
xchg
push
pop
cmpsl
pop
and
leave
arpl
pusha
xchg
pop
pushf
mov
xchg
ja
mov
cmc
in
mov
dec
push
dec
mov
in
in
int
jo
hlt
pop
cld
jg
sahf
pop
or
fcmovnb
push
das
pop
sbb
decl
xchg
pop
and
sub
dec
sahf
add
ret
jg
pop
leave
jae
xchg
add
cs
sahf
ja
sbb
xchg
jl
mov
jns
out
es
add
add
cmp
inc
push
out
lret
lret
lret
lret
push
lahf
pop
lahf
push
lret
lret
lret
jle
mov
mov
pop
mov
out
rcrb
mov
in
lahf
negl
add
and
mov
dec
mov
pop
mov
daa
daa
mov
sbb
aas
sbb
sbb
daa
daa
daa
pop
push
adc
daa
sub
jnp
fmulp
repz
cs
pushf
push
xor
dec
mov
push
pop
xor
sarl
cmp
cmp
cmp
cmp
repz
repz
cmp
jns
incl
or
adc
repz
inc
fidivs
leave
repz
sahf
inc
inc
js
inc
subl
cltd
cmovnp
movsb
out
repnz
scas
mov
jns
dec
rclb
push
out
in
jns
icebp
cld
pop
mov
adc
leave
leave
rorl
pop
ds
jmp
leave
leave
push
pop
push
fbstp
jmp
popa
dec
mov
mov
enter
sahf
out
ds
add
leave
rep
pop
lock
or
rcrl
push
mov
js
iret
mov
mov
nop
push
adc
adc
adc
adc
movsl
out
jns
sub
push
sahf
out
ds
mov
xchg
loopew
push
sbb
jns
sbb
mov
xchg
iret
or
mov
pop
and
rep
and
lock
add
mov
add
popw
adc
mov
movsb
in
leave
out
test
imul
mov
mov
xchg
movsb
movsb
inc
cs
push
dec
push
add
leave
shrl
outsl
mov
clts
nop
fmulp
leave
leave
cwtl
rcr
mov
cmp
mov
sahf
jp
lret
lret
mov
movsb
jo
pop
adc
dec
movsl
dec
or
movsl
movsl
push
add
lock
sub
leave
and
xchg
pop
ja
mov
daa
imul
cmp
xchg
xchg
jnp
mov
jo
scas
jg
les
mov
mov
in
xchg
xchg
lock
das
sti
movsl
push
cmpsb
adc
pop
xor
dec
push
pop
adc
pcmpeqb
inc
mov
das
dec
sahf
out
xchg
cmpsb
push
sbb
in
sbb
nopl
leave
repz
cmp
loop
in
mov
push
and
cmpsl
push
nopl
out
and
das
daa
cmp
cmp
push
cmpsl
jg
loopne
mov
cmpsl
pop
push
add
cmp
repz
mov
sahf
ja
push
add
mov
stc
pusha
rcll
addr16
pop
mov
scas
xor
jns
test
add
fucom
jns
data16
or
shl
outsb
mov
scas
jbe
outsb
sbb
jb
test
test
pop
setle
jns
adc
jns
out
adc
adc
in
in
leave
pop
aam
sbb
sbb
movhps
mov
cld
bsf
enter
add
or
adc
and
sahf
ja
sbb
push
es
out
jns
cmp
xor
add
inc
cmp
dec
sub
add
pop
enter
test
push
or
out
sub
pop
leave
enter
rol
and
fstpl
sahf
xchg
xchg
out
add
xlat
in
cmc
fisubs
lods
dec
test
repz
push
dec
stos
push
or
iret
repz
sub
xor
aas
pmuludq
in
cmp
add
adc
jb
stc
mov
nop
stos
cwtl
stos
jns
mov
stos
stos
pop
mov
add
dec
sahf
out
add
jns
out
or
or
pushf
jecxz
fisttpll
pop
add
fsts
push
stos
lahf
es
incl
sbb
xor
push
stos
cmp
xchg
and
push
enter
stos
stos
orb
stos
pop
wbinvd
sahf
cmp
fldt
add
and
psubq
or
inc
dec
and
jns
enter
ds
add
bound
invd
js
repz
cmpl
mov
cltd
or
iret
repz
or
dec
mov
lds
or
shrb
out
lods
pop
jnp
pop
jecxz
mov
sbb
repz
ds
ja
cmp
sbb
push
in
js
and
mov
aas
xchg
setg
and
sahf
es
ret
sub
dec
cmc
in
sub
in
mov
adc
cli
lods
das
cs
and
xor
fisubrs
enter
scas
pop
punpcklbw
push
sahf
xchg
out
push
in
push
jns
mov
cmp
leave
leave
cwtl
mov
cmp
repz
xchg
pop
mov
adc
fsub
dec
or
cmp
cmovg
das
and
nopl
sahf
out
daa
sbb
and
and
sahf
out
jns
xor
and
out
in
dec
dec
es
pop
cs
leave
repz
sub
push
sub
iret
cmp
mov
sub
fsubrl
mov
xor
fcmovne
mov
xadd
leave
in
and
sbb
dec
sub
mov
inc
pop
cmpl
aam
xor
mov
cmp
and
dec
xor
push
test
dec
out
add
aas
inc
push
dec
pop
insl
or
mov
stos
xor
or
pop
inc
sub
aaa
ret
and
imul
imul
cmp
pop
xor
iret
repz
xor
and
sbb
or
enter
sahf
out
aam
int3
out
jns
out
sarb
cmp
lods
movsb
cwtl
nop
jns
ja
mov
out
sahf
out
push
inc
inc
cmp
lock
xor
or
add
in
jno
fildll
mov
mov
out
fldl
add
add
add
jns
or
or
pop
jb
cmp
or
or
or
daa
adc
adc
and
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
jns
xlat
pop
sbb
addr16
or
sub
add
inc
enter
orl
jno
cmp
std
imul
dec
dec
test
ljmp
aam
in
incb
add
movsb
add
cmpsb
fisttps
cs
jb,pt
movsl
sbbl
test
pop
shll
cmovo
pop
inc
mov
or
mov
sbb
in
call
adc
add
mov
xor
fmuls
xchg
in
fsubp
stc
jb
jle
inc
enter
inc
popl
pop
cmpsl
mov
fdivr
inc
and
fadds
dec
fiaddl
mov
jle
pmovmskb
pop
sub
fadds
xchg
mov
and
push
das
aas
xor
inc
in
pop
aas
mov
mov
out
mov
push
or
or
into
adc
adc
jo
inc
sbb
iret
repz
in
sbb
je
dec
push
mov
pop
dec
enter
sahf
rclb
cwtl
lret
inc
clc
lret
push
jns
jnp
jns
jp
push
cld
iret
out
push
dec
sbb
cmp
push
sub
mov
sarl
aas
push
sbb
sahf
fs
inc
pop
dec
imul
or
add
cwtl
push
jae
xorb
daa
cmp
icebp
addr16
push
push
pop
fst
inc
insl
inc
jg
inc
push
fdivrl
xor
pop
test
xor
sti
sub
scas
cmp
inc
pop
lods
mov
jg
out
push
cs
ja
dec
and
inc
sub
mov
mov
adc
xchg
lods
push
out
and
es
xor
sbb
jns
cmp
sbb
sbb
inc
clc
loop
lock
and
jbe
iret
jnp
and
pop
pop
cld
shl
ds
repz
jnp
push
pop
adc
fsubl
das
idivl
repz
or
or
adc
sahf
rcrb
in
out
enter
xchg
loop
sbb
out
pop
test
movsb
and
jns
out
and
and
sahf
mov
es
cmp
mov
frstor
out
xor
adc
dec
pop
xchg
xorb
inc
cmp
xorl
push
cmp
out
push
pop
js
mov
sti
cmp
out
adc
xor
add
sahf
out
cmp
pop
ja
mov
cmp
jae
das
push
dec
jmp
pusha
popf
insb
xchg
dec
push
jnp
das
mov
add
cli
or
or
ret
nop
cmpl
adcb
sbb
pop
stc
and
leave
sbb
into
sbb
rorl
and
sahf
mov
pushl
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
jg
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
cmp
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
decl
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
std
addr16
and
add
sti
aas
jno
or
mov
fisttps
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
movsb
call
lcall
cmp
push
mov
xchg
aas
ljmp
cmp
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
icebp
incl
gs
std
orl
pop
ficomps
frstor
or
push
pop
pop
push
jns
mov
inc
inc
push
dec
ljmp
pushf
pushf
jnp
cmpsl
add
cmp
popa
push
out
mov
les
hlt
push
xor
xchg
fs
pushl
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
hlt
adc
jno
repz
test
jge
ficompl
jmp
mov
hlt
movl
imul
jg
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
call
jb
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
mov
xor
filds
or
shrl
pushl
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
data16
incl
jbe
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
mov
leave
pop
js
stc
fs
xchg
sbb
decl
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
call
add
shl
adcb
cmc
fnstenv
adc
mov
mov
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
mov
loop
mov
dec
adc
ret
movsb
sti
hlt
shrl
imul
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
push
inc
pop
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
call
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
jmp
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
gs
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
incl
mov
aad
mov
call
xchg
shll
push
repnz
addr16
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
sar
fists
addr16
mov
jns
imul
andl
shrb
ss
jg
xchg
ja
int3
add
mov
das
es
lds
or
das
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
incl
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
fcomip
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
mov
mov
loop
mov
push
addl
mov
cmp
cmpsl
jg
lods
push
push
pusha
rorb
imul
scas
fcompl
scas
and
filds
aaa
pusha
mov
call
sahf
mov
inc
jmp
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
jmp
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
mov
pop
xchg
addr16
sbb
inc
add
pop
or
cld
movb
aad
repz
xlat
fcomp
fidivrl
repz
fsubp
iret
jae
repz
in
jmp
ljmp
iret
repz
cmc
div
clc
mov
cli
sti
cld
daa
mov
jbe
adc
inc
cmpsl
inc
sub
inc
popf
sbbb
push
iret
daa
cltd
fdivs
jnp
inc
push
dec
bound
jbe
inc
popl
xchg
je
ret
inc
insl
bound
test
popa
je
push
sub
inc
in
cltd
out
push
fs
and
inc
dec
dec
inc
jns
jg
sub
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
outsl
insl
sti
pop
xor
xor
or
xor
bound
push
push
fs
push
inc
jbe
jge
sti
insl
pop
insb
imul
push
insb
gs
push
dec
inc
cmc
neg
and
inc
cmc
add
bound
mov
test
das
test
push
je
scas
xchg
mov
ss
jbe
adcb
push
jge
aas
insb
dec
inc
pop
icebp
mov
je
ret
bound
sbb
push
adc
cli
or
adc
arpl
sub
jo
xor
insb
popa
jns
sbb
dec
insb
adc
dec
popa
xchg
cmp
xchg
aaa
aas
inc
add
aas
xchg
pusha
lds
or
cltd
and
add
fidivl
dec
xor
shrl
pop
inc
aas
and
movsl
inc
inc
pop
lea
mov
inc
inc
dec
inc
fistpl
pop
cmp
jo
inc
inc
add
ds
push
testb
mov
xor
adc
sbb
int
push
dec
cmp
inc
mov
mov
push
sbb
mov
push
ret
cli
inc
outsb
jne
jno
imul
pop
in
pop
ja
xor
xor
or
outsl
add
addr16
push
xchg
into
pop
jo
imul
pushf
lea
cmp
or
jg
aaa
fs
or
or
push
add
ss
andb
outsl
pop
or
lcall
cmp
mov
rorb
pop
mov
add
sbb
lock
dec
adc
cmpsl
rcl
sub
test
mov
mov
mov
jno
pop
mov
andl
xchg
add
in
nop
test
pop
cmp
and
xchg
cmp
mov
jo
ds
subl
jns
mov
inc
jb
sub
cmpsb
gs
fwait
jnp
addr16
outsl
arpl
insb
adc
lret
fimull
inc
lods
ja
inc
jbe
pusha
xor
jg
cwtl
in
ja
dec
xor
jmp
das
dec
or
xor
or
subl
and
mov
popa
pop
arpl
mov
and
hlt
aaa
pop
ret
dec
mov
inc
clc
xchg
sub
jo
lods
mov
outsb
rclb
pop
jno
cld
inc
push
inc
dec
pop
bound
outsb
arpl
rcll
pop
fisubrl
int
pusha
in
insl
add
stos
movsl
or
inc
fldcw
fisttpl
adc
divl
daa
sub
adc
and
mov
push
inc
add
testb
add
adc
mov
fdivr
loopne
adc
jbe
adc
adc
pusha
add
cmp
in
add
add
add
or
pop
pop
push
or
or
or
fidivs
adc
push
adc
adc
push
adc
jbe
push
add
pop
sbb
adc
adc
adc
add
adc
aaa
in
data16
or
push
add
rolb
nop
add
add
add
add
adc
add
add
jno
push
lock
add
cmp
call
push
and
inc
push
adc
pop
and
xor
inc
mov
outsl
or
lock
bound
js
add
add
cmp
add
mov
cmpsl
xchg
add
nop
addb
or
adc
add
dec
or
add
xor
add
sub
pop
add
adc
mov
ja
adc
push
stc
int
call
inc
push
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
addb
loopne
sbb
mov
fiaddl
or
adc
mov
cli
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
imul
loopne
ja
fdivrl
add
mov
mov
loopne
mov
fsts
clc
inc
push
adc
loope
mov
cmp
test
out
cmp
xor
call
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
push
add
xchg
pusha
rclb
inc
leave
add
adc
sub
add
lcall
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
cli
aad
std
movsl
jecxz
pop
mov
ljmp
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
call
data16
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
aaa
std
jmp
aad
add
sbb
int3
lcall
fs
scas
mov
pop
pushl
inc
pop
movb
xchg
sbb
scas
adc
mov
xor
ljmp
lods
scas
xchg
test
aam
and
sbb
sarl
and
roll
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
outsl
or
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
mov
call
lea
pop
cwtl
int
arpl
push
out
or
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
fdivr
decl
hlt
and
xchg
jmp
sbb
lcall
incb
mov
mov
out
pop
jb
mov
mov
mov
sub
pop
add
arpl
dec
jp
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idivb
aad
or
mov
scas
fadds
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
ljmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pushl
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
clc
xor
jmp
xchg
pop
clc
outsl
pop
dec
fistl
hlt
sub
movsb
add
lea
pushl
jg
gs
std
xorb
jg
aad
adc
ret
call
loopne
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
or
mov
cmp
pop
les
cli
mov
mov
inc
arpl
stos
mov
lcall
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
jg
call
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
ss
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
lock
decl
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
mov
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
lcall
into
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
incl
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
add
cli
jb
and
jae
shrb
jmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
clc
mov
pop
cld
addl
adc
and
int3
mov
push
enter
jecxz
scas
sub
loop
sar
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
add
pop
iret
mov
jg
mov
aad
test
in
pop
mov
lock
mov
iret
push
jbe
lock
std
stos
icebp
pop
incb
jno
adc
push
inc
mov
jecxz
sbb
sarl
adc
loopne
sar
adc
jbe
mov
clc
sti
push
sti
imul
dec
push
in
aas
mov
shlb
loope
fsubrl
lock
and
pop
fadds
clc
xchg
pushf
mov
incl
in
or
and
mov
adc
inc
aas
inc
push
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
sub
pop
pop
nop
mov
inc
pushl
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
dec
xor
fsubr
fistps
lds
fidivrl
jg
jmp
stos
pop
add
dec
mov
sub
jge
xor
push
les
sbb
sbb
cld
addl
mov
jg
sbb
mov
lahf
outsl
int3
push
sbb
jg
xchg
pop
test
bound
pop
outsl
pop
loopne
push
in
jge
popa
push
test
jbe
jg
ljmp
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
sub
shl
cld
mov
in
mov
pop
jg
pop
shrb
rcl
jg
adc
xor
pushl
fisttpl
sub
jmp
lea
jp
jnp
jecxz
out
cld
adc
inc
lds
push
pop
adc
imul
or
inc
pop
mov
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
lcall
iret
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
lcall
test
aas
cld
out
fcomi
fistps
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
sahf
push
loop
dec
inc
push
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
add
fisttps
mov
or
dec
ss
mov
leave
inc
lods
movsb
or
repnz
mov
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
cld
outsl
incb
mov
pop
lock
jmp
hlt
dec
mov
in
scas
sbb
xlat
inc
aas
mov
jg
mov
mov
addr16
sbb
cld
daa
jp
std
adc
cld
jbe
inc
cltd
or
mov
ret
nop
cmp
das
incb
add
pop
pop
div
cld
idivl
fcomi
add
stc
lahf
loope
jae
jmp
shrl
je
jge
std
scas
bound
jg
stc
add
out
leave
xchg
inc
icebp
mov
loope
mov
cmpsl
popf
sti
sub
mov
ja
push
outsl
das
jge
fwait
dec
das
add
cmpsb
cmp
call
std
add
decb
adc
mov
and
jo
adc
call
jo
testb
iret
or
add
cmp
int
add
push
enter
pop
aaa
std
fisttps
testb
cld
jg
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
aaa
pushf
jecxz
and
adc
mov
mov
cld
push
sub
mov
pop
clc
loope
loope
mov
lahf
inc
push
dec
add
xlat
jmp
in
cwtl
pop
fbstp
xchg
fldenv
iret
movsb
or
xchg
lcall
decb
mov
loop
dec
and
out
jg
jno
ret
xchg
xor
jno
cmp
mov
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jmp
clc
pop
lds
jmp
std
mov
daa
jmp
faddl
or
inc
push
jae
mov
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
add
xchg
decl
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
sar
ljmp
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
push
sti
pop
inc
dec
stos
fs
push
mov
push
cmp
mov
push
popf
int3
pop
iret
and
add
pop
insb
dec
jle
ljmp
pop
test
pop
or
mov
xchg
popa
out
jnp
or
push
mov
lret
out
mov
jl
pop
dec
jne
xchg
push
mov
inc
xchg
call
hlt
mov
push
cld
sub
mov
test
into
push
into
jle
mov
out
call
sti
fcoml
push
loopne
fbld
imul
mov
add
jnp
clc
out
popa
dec
inc
loopne
pushl
sbb
out
ud1
mov
fnsave
outsb
mov
sub
mov
and
lea
jnp
nop
andl
lret
jne
push
outsb
inc
loopne
xlat
inc
insl
dec
sub
fnstcw
data16
mov
pop
stos
adc
and
push
adc
pushf
sti
and
jl
push
ss
xchg
mov
bswap
or
mov
int3
dec
subl
sbb
leave
cmpsl
clc
js
lret
ljmp
push
mov
sti
inc
lret
mov
or
sbb
jae
das
hlt
pusha
jecxz
jg
cld
xor
mov
lahf
jae
lret
cmp
dec
aaa
jp
out
mov
sub
sahf
mov
decl
popf
xor
xlat
js
hlt
push
xor
inc
mov
sbb
fbld
fcompl
pop
loop
pop
loop
xor
jecxz
cmpsl
call
push
cmpsl
xchg
notl
test
stos
pop
mov
in
or
jmp
arpl
out
sub
stos
and
jle
test
xchg
lret
sbb
mov
cli
inc
mov
out
cli
jmp
or
ja
out
push
mov
add
adc
push
daa
je
xchg
hlt
cmp
loop
adc
sbb
movsl
sub
incl
cmp
shlb
mov
inc
aam
push
and
fidivrs
dec
adcl
xor
insl
jne
pop
mov
xchg
push
cmpsb
stc
idiv
popf
popa
sbb
stc
shll
rcrb
and
clc
popa
mov
sub
popa
add
dec
mov
clc
mov
lea
lcall
addr16
mov
call
movsl
or
les
setno
iret
adc
mov
dec
rclb
mov
cmp
dec
adcl
jne
or
arpl
call
pushf
stos
iret
cli
and
mov
xor
cmp
in
mov
incl
dec
push
sub
adc
cwtl
mov
fsubrl
jmp
mov
das
jae
testl
ficoms
sub
fadd
pop
lcall
push
cmpsl
pop
outsb
mov
push
jae
or
movl
dec
in
mov
adcl
test
dec
push
pop
filds
push
jge
decl
mov
outsb
dec
mov
loopne
sbb
inc
ja
xchg
imulb
jmp
mov
mov
inc
and
xor
scas
sub
outsl
dec
pop
jno
ljmp
fbld
jae
shl
adc
rol
dec
sub
enter
outsb
popa
movsl
or
leave
jnp
addr16
frstor
pop
xlat
cltd
pop
out
pop
inc
hlt
movsb
repz
scas
movsl
sbb
inc
xchg
dec
lret
inc
ds
decl
lahf
call
call
std
jae
out
ret
push
mov
jge
adc
fcomip
incl
mov
mov
pop
std
mov
ror
add
mov
lcall
loop
out
or
jle
dec
mov
push
lcall
sub
xchg
loopne
out
outsl
dec
dec
jg
dec
push
push
push
std
jl
test
or
ljmp
sar
call
pop
mov
call
fimull
mov
stos
mov
sti
cltd
xor
scas
aam
pop
and
in
movl
ss
test
pushl
call
inc
dec
lahf
std
pop
sti
pop
jnp
pop
movsl
call
sub
rcrb
add
push
cmpsl
and
adc
fs
mov
stc
loop
jmp
push
repnz
dec
loope
pop
mov
aas
or
das
subl
lret
loopne
mov
call
scas
icebp
out
mov
mov
sbb
inc
pop
cltd
sbbb
or
mov
decl
es
int3
jg
sbb
jp
movsl
ss
and
mov
repz
fucomp
decl
or
test
push
inc
ret
or
inc
dec
iret
aad
aaa
cld
sbb
mov
jnp
dec
inc
and
les
dec
out
lcall
jno
jecxz
mov
icebp
leave
dec
jle
pop
cmp
jle
pop
shrl
sbb
pop
cmp
call
cmp
xchg
mov
mov
jno
filds
fidivrs
mov
faddp
decl
mov
lods
imul
lret
ja
repz
adc
jge
test
decl
xchg
mov
or
int3
jne
mov
popa
and
or
push
jmp
pop
ljmp
stos
out
or
stos
scas
test
push
adc
sti
incl
lds
push
jbe
fdivrl
insb
xchg
cwtl
cmp
lcall
clc
jns
xor
std
out
fisubl
push
mov
daa
rol
jle
sahf
cs
add
pop
std
adc
and
add
outsl
jge
mov
lcall
loope
das
mov
lahf
imul
add
decl
jg
xor
ret
punpckhbw
cmp
stos
jp
fucom
mov
xchg
ja
addb
or
stos
pushl
mov
daa
mov
dec
mov
mov
pushl
je
sbbb
shll
jle
and
call
shl
sub
call
fisubrs
fs
aaa
iret
jecxz
sub
sub
lds
aam
xor
call
dec
jg
es
cmp
shrl
cmpsl
leave
mov
push
jp
rcl
jbe
jp
add
vfnmadd132ps
movsb
mov
shll
leave
lods
xor
and
inc
fisubrl
mov
cmpl
add
adc
idiv
decl
shll
push
in
fsubr
pushf
ret
cwtl
push
adc
call
sub
pop
cmc
jmp
jb
sub
mov
pop
mov
mov
mov
mov
imul
mov
sbb
std
lcall
dec
jle
leave
insl
jnp
lock
jp
inc
std
call
icebp
add
sbb
cmp
pop
je
loop
xchg
test
mov
fcmovb
sub
pushl
push
lods
inc
movsl
adc
mov
ds
push
lret
out
hlt
aad
mov
cmp
sub
clc
cmp
das
cli
mov
dec
xor
jmp
or
popf
aad
mov
test
mov
mov
loop
repnz
dec
push
lahf
stc
mov
xor
lcall
mov
ds
in
subb
fdivrp
jne
jno
notb
sub
fcompl
jle
pushf
pushf
insl
cmp
xor
call
imulb
daa
ss
into
enter
in
out
out
in
fidivrs
cmp
out
call
imul
pop
sub
test
popf
dec
fwait
xchg
xchg
imul
push
inc
cmp
adc
sbb
pop
mov
test
lcall
cmp
das
jecxz
or
repz
jmp
pushf
and
push
adc
pop
fwait
mov
test
pusha
repz
iret
adc
jo
mov
xchg
jns
ja
fists
xchg
pusha
call
lcall
scas
cmp
push
add
push
sbb
and
xorl
stos
inc
mov
inc
sar
jmp
cmp
cmp
scas
inc
or
pop
sbb
fdiv
jg
add
jne
decb
lods
mov
and
int3
ljmp
incl
xchg
in
xor
ret
mov
call
jae
stos
push
outsb
stos
imul
pop
xor
pop
in
repz
movsl
cmpsb
loope
sub
pop
adc
leave
aam
adc
cld
hlt
or
mov
fstl
lcall
decb
retw
mov
maskmovq
jbe
aaa
sbb
add
mov
sbb
lcall
jl
mov
cli
pop
shrl
sbb
mov
inc
fstpl
pop
mov
xchg
call
inc
fcoml
pop
cmpsl
cmpsb
fs
inc
mov
lods
insl
cmpl
mov
cld
decl
aam
pusha
push
pop
mov
inc
fcoml
mov
jno
and
incl
cmpsb
xlat
cmp
push
push
mov
or
push
rol
inc
std
push
mov
push
cmpb
sti
xchg
dec
and
jg
dec
leave
mov
les
jae
inc
jae
cmp
sar
lods
jo
xchg
mov
dec
lea
mov
ja
mov
ljmp
mov
jns
pop
outsl
cwtl
mov
enter
sbb
xchg
leave
jecxz
ljmp
inc
lret
imul
pop
jmp
xor
int
cmp
mov
movsb
decl
imulb
gs
add
xchg
xchg
adc
jmp
cmpsl
movsb
das
cmc
mov
push
lcall
lcall
jmp
mov
adcb
and
test
push
pop
filds
sbb
out
fldt
mov
push
loop
adc
js
or
idivl
xchg
ret
inc
mov
call
loope
daa
aas
loop
test
mov
inc
push
fcomps
mov
fnsave
pushf
gs
pop
popa
xlat
icebp
incl
sub
mov
and
sub
add
dec
test
dec
jle
in
rcl
mov
dec
pop
data16
dec
xchg
add
cs
call
testl
pop
popa
and
jecxz
push
es
jns
addr16
movsl
jnp
adc
mov
xor
out
popf
mov
dec
mov
loop
ljmp
adc
ss
cwtl
pop
divb
incl
cli
xor
xor
sbb
or
adc
sub
in
lret
out
sbb
jno
mov
movsw
lods
dec
gs
and
inc
dec
sub
loop
cmp
xor
push
adc
sbb
aaa
in
mov
sbb
add
xchg
jle
in
push
ljmp
adc
in
and
enter
scas
jmp
cmp
xchg
mov
cltd
jbe
add
mov
jg
inc
pushf
popf
add
dec
jl
jbe
xor
adc
cli
xchg
push
xor
cld
fnstenv
or
scas
adc
fwait
sbb
dec
add
pop
sbb
in
pop
ljmp
sar
into
fadds
push
in
fidivl
xor
push
ret
enter
inc
pop
aas
in
jmp
push
and
inc
xchg
into
mov
popl
imul
jno
outsl
jb
xor
loop
hlt
xor
fs
xrelease
adc
ds
xor
mov
fs
xlat
push
clc
jae
testb
lret
movsb
pushl
test
movsb
loope
pop
insb
xor
and
sub
addr16
sbb
inc
ret
enter
mov
int3
imul
mov
lds
daa
jno
push
cmp
out
mov
or
ds
jne
dec
sti
mov
add
hlt
mov
arpl
pushf
int3
jns
dec
pop
push
cmpsb
mov
mov
inc
and
sub
mov
sbb
mov
pushl
and
and
inc
mov
loope
out
shl
adc
clc
jle
ret
mov
incl
mov
pop
mov
ror
cltd
iret
jecxz
mov
and
test
ret
pushf
xorl
adc
jg
decl
dec
loope
pop
les
jo
mov
mov
decl
popa
push
cltd
mov
outsb
loopne
cmp
lcall
and
jmp
mov
lods
leave
inc
xorb
cmp
mov
jmp
xchg
cmp
cli
mov
pop
leave
and
loope
and
dec
int3
cld
dec
pop
mov
rcrb
out
ficompl
xchg
pop
push
pop
nop
cli
ret
dec
add
cli
jp
leave
lret
popf
cmpsl
push
mov
fbld
loopne
mov
push
add
call
aam
pop
sbb
cmp
mov
jo
push
mov
shll
fcos
dec
call
adc
lds
jl
pop
paddusb
incb
pop
add
shr
xchg
ljmp
aaa
insl
cmp
or
out
cwtl
pop
ret
dec
cmc
push
shrb
roll
or
ficoms
or
cmp
mov
in
jmp
mov
in
xor
xchg
decl
stos
xor
adc
xchg
loope
and
inc
pop
mov
int3
jnp
daa
xor
ret
nop
sar
outsl
cli
pushl
das
dec
cmp
add
std
ficompl
jp
aas
test
sub
jbe
inc
adc
shl
sub
sub
pusha
or
movsb
cwtl
xchg
push
nop
pop
fstpt
dec
mov
test
cmp
daa
sub
sbb
inc
ss
cld
cmp
inc
mov
and
jle
pop
insl
and
shrb
dec
sbb
adc
gs
out
adc
bswap
xchg
add
mov
add
movsl
outsl
rolb
push
cmpsl
insl
and
faddl
aad
pop
mov
loope
push
fistpl
scas
push
cltd
and
lock
or
inc
ljmp
mov
lret
pop
scas
adc
cmp
mov
mov
es
cli
pop
inc
dec
in
xchg
or
mov
call
mov
push
push
imul
pop
sti
adc
out
xchg
lret
adc
movsl
push
push
xchg
sub
jle
lods
jae
sbb
leave
aas
je
inc
rol
addb
xchg
aaa
je
mov
imul
in
jp
jb
cmpps
push
push
inc
ljmp
dec
shll
or
and
sub
fnsave
rol
mov
incl
and
xchg
jne
jo
mov
jg
jle
testb
xchg
fdivl
pop
dec
mov
call
inc
mov
mov
pop
xor
out
sbb
inc
fiadds
enter
idiv
scas
or
xor
dec
enter
in
lea
and
xor
jmp
mov
jne
test
dec
jns
add
push
addl
mov
lea
cli
xchg
in
sub
xchg
pop
nop
lahf
mov
push
test
cmp
dec
push
xchg
daa
mov
incl
push
icebp
mov
add
add
rcll
jae
insb
cmp
call
mov
push
sbb
inc
mov
jns
ss
mov
std
gs
out
xchg
cmpsb
inc
mov
and
sbb
imul
int
fcomip
jmp
ds
mov
fists
out
mov
icebp
jbe
insb
subl
sbb
lret
jmp
push
insb
shl
outsb
lea
loope
and
je
mov
int3
call
imul
mov
push
mov
vpaddd
ds
lret
stos
jle
cmp
ljmp
dec
ljmp
andb
popa
ljmp
pop
into
jbe
mov
outsb
gs
adc
lcall
xor
enter
push
ja
int3
call
adc
jle
call
xchg
sub
mov
ret
jge
sbb
mov
outsb
jmp
out
cli
outsl
cmp
ljmp
adcl
test
jo
xor
dec
std
adc
cmp
inc
add
pushf
bound
inc
ss
cmpsb
das
lcall
in
push
mov
in
hlt
push
dec
sbb
int3
and
incl
adc
psrad
lea
xor
jmp
xor
cmp
fimull
sahf
xchg
sbb
lcall
or
call
xor
mov
mov
pop
add
jae
mov
ret
cld
inc
orl
mov
pop
push
mov
xchg
adc
lss
mov
decl
cmpsb
pop
stc
jecxz
in
jae
mov
lea
inc
idivl
mov
xchg
test
stc
inc
popf
scas
gs
jmp
repz
lods
jl
lods
cmp
sub
jmp
out
mov
pop
jmp
out
lret
sti
loope
push
cmp
jb
sub
mov
xor
stos
stos
mov
xchg
xor
mov
mov
mov
cmpsb
xchg
data16
and
and
jl
pop
sbb
mov
fs
push
scas
mov
dec
jmp
jmp
rclb
movsb
imul
js
xchg
inc
xor
addr16
sub
and
incl
sub
sahf
dec
pop
notb
mov
fwait
pop
xchg
loopne
pop
pop
adc
incl
or
inc
pop
adc
mov
cmpsb
cwtl
dec
outsl
div
movb
pop
cld
cli
ret
push
mov
jl
int3
daa
push
fwait
push
repz
mov
clc
ljmp
jl
jge
std
mov
sub
movsb
jae
mov
ljmp
dec
fistl
mov
sub
insb
jbe
stos
dec
or
adc
xor
pushl
mov
insl
imul
inc
mov
jmp
cwtl
or
call
dec
dec
inc
scas
and
ficompl
mov
fdivs
mov
push
mov
clc
testl
pop
hlt
call
sbb
push
mov
dec
adc
xor
cmp
adc
xchg
inc
mov
push
inc
dec
fcmovne
shlb
mov
insl
dec
pop
sub
mov
call
andb
mov
in
movsb
jmp
adc
mov
icebp
push
dec
jb
sbb
mov
lcall
mov
xchg
mov
or
aad
mov
sbb
add
adc
add
xchg
stos
or
ret
adc
sub
je
pop
cwtl
insb
sub
sub
jg
mov
shll
sbb
inc
test
mov
mov
call
pop
outsb
iret
push
cld
sbb
dec
fdivrl
lods
aas
arpl
incl
cwtl
clc
fwait
and
insl
push
mov
fsub
jnp
arpl
pop
and
arpl
decl
xchg
cmp
data16
enter
test
int
mov
test
xchg
mov
adc
arpl
mov
sub
inc
subl
jl
sub
mov
enter
and
iret
mov
enter
fdivs
xor
ret
iret
fcomip
jge
add
mov
mov
movsl
scas
clc
stc
mov
or
jae
lret
or
pop
clc
dec
add
inc
enter
xchg
dec
subl
add
in
lret
adc
pop
and
shll
pop
in
cmp
fcomps
jge
in
xor
cld
inc
pop
sbb
sub
loop
push
mov
fistps
pop
adc
mov
sub
dec
and
rcrl
aam
xor
decl
adc
les
or
sarb
mov
pop
mov
push
mov
sub
daa
arpl
call
mov
dec
test
jecxz
dec
in
cld
jg,pt
xor
push
sbb
rclb
adc
lcall
mov
fcoms
addb
jge
dec
xor
pop
mov
decl
ss
inc
sub
pushl
adc
ja
cwtl
in
dec
inc
enter
stos
decl
stos
xor
sbb
cmp
and
xchg
daa
adc
dec
or
lods
cwtl
pop
mov
test
je
sub
pushf
shlb
leave
repnz
dec
sti
and
jns
incb
imul
pop
pop
clc
mov
mov
pop
jecxz
xchg
addb
dec
hlt
loop
cli
es
mov
lret
rcll
pushl
push
xor
mov
sarb
adc
dec
mov
repz
mov
push
scas
lods
xor
das
mov
or
mov
stos
dec
mov
mov
outsl
sub
in
int
fs
frstor
es
testl
stc
add
sar
incl
or
xor
xor
mov
inc
movsb
sbb
cmpsb
fdivr
ja
add
pusha
enter
incl
adc
mov
push
push
cmp
cmpsl
add
aaa
xchg
out
arpl
fsubl
ss
ds
cmp
adc
fadd
test
imul
iret
push
cmp
in
and
gs
xchg
or
mov
push
test
movsl
xor
cwtl
ret
outsb
mov
lret
cmpsb
repnz
sbb
add
ljmp
adc
inc
mov
xchg
sbb
test
lds
cmpsl
jmp
das
fstpt
add
dec
insl
into
adc
or
xchg
push
shrb
xor
or
ljmp
fsubl
push
ret
pop
inc
cltd
shr
inc
xchg
je
sar
inc
inc
scas
inc
cli
out
jle
mov
push
leave
ljmp
icebp
xor
pop
fisubl
imul
jno
mov
mov
lcall
mov
mov
pop
aaa
rorb
jmp
dec
ljmp
pop
jmp
js
sarl
jp
hlt
clc
mov
cmc
repz
sbb
mov
scas
xchg
lock
minps
rorl
mov
es
push
pop
outsl
and
adc
jecxz
dec
aaa
je
ljmp
xchg
arpl
in
push
add
lock
in
lret
call
push
in
rolb
jg
push
in
popf
xchg
push
and
xor
clc
add
jno
sarb
fwait
pushl
xor
cs
fwait
or
jge
and
std
push
dec
and
lret
dec
ljmp
push
inc
or
fnstsw
scas
or
outsl
sub
or
fidivl
mov
adc
adc
cmp
aam
arpl
or
mov
sbb
call
jge
sbb
xchg
fdivrl
lcall
xchg
dec
and
pop
repnz
jo
ljmp
xchg
outsb
decl
aad
dec
std
sub
adc
sar
outsb
jg
mov
sub
js
decl
rorl
dec
adc
nop
cmp
sbb
fcomip
add
popf
or
xor
add
adc
pop
add
lock
popa
in
ljmp
shr
pop
stos
in
iret
int3
rcrb
aas
cs
jl
xchg
adc
inc
int
in
push
xor
pushl
inc
push
xlat
mov
sub
xor
jmp
or
pop
lcall
push
negb
out
pop
cmp
mov
xor
cmovg
add
mov
xor
call
mov
out
clc
jne
xchg
gs
pushf
iret
pop
or
mov
xchg
xor
jns
sti
call
xchg
jne
jae
sbb
jmp
jnp
xor
mov
cmpsb
insb
out
fnsave
call
clc
xor
jg
mov
fs
test
mov
add
in
inc
jmp
arpl
jg
jp
orl
push
sbb
call
or
add
stos
rcl
jns
cmp
aad
sub
insl
push
int
stos
lds
lret
push
fistpll
and
test
out
cli
fwait
xor
icebp
sub
jp
xchg
test
call
lret
and
in
test
inc
sbb
pushf
lret
test
xlat
or
pop
test
lcall
nop
cmpsb
jae
pop
sbbl
and
lret
pop
push
test
int3
jl
call
je
xor
cmp
stc
pop
movsl
lds
insl
mov
jmp
lcall
xor
sub
cmp
clc
sbb
pop
sbb
loopne
jg
xchg
loop
add
mov
cmp
data16
xor
mov
incl
xchg
mov
aas
adcl
mov
fwait
cmp
jg
and
pushl
xchg
push
fisubrl
jmp
push
cmp
ljmp
fdivrl
movsb
dec
sub
or
enter
xor
dec
stc
cmp
and
pop
add
decl
push
xor
scas
dec
testb
sbb
fcomip
and
pop
enter
cmp
xchg
imul
mov
and
incl
xchg
cld
mov
dec
mov
pop
pop
xchg
push
sub
xchg
sbb
dec
ret
cmpsl
jmp
fwait
sti
sub
adc
pop
out
or
outsb
adc
ret
cli
jo
fistpl
pushl
dec
adc
mov
push
mov
imul
movsb
xchg
test
int3
inc
outsb
dec
jo
or
sub
out
push
lods
sub
xchg
std
aam
loope
pop
pop
or
mov
pop
cli
out
loope
jg
dec
fmull
mov
add
sub
jge
jb
jo
rolb
test
aam
mov
in
popa
sar
jg
cmpsb
lret
js
fcmovnu
sub
test
rorl
pop
cmp
cld
ljmp
xchg
rclb
xchg
xchg
cli
rcll
fdivrl
jg
aas
push
sub
sbb
rol
in
cltd
mov
mov
inc
aam
mov
jnp
inc
in
movsl
sti
fdivrl
imul
arpl
push
sahf
arpl
push
push
testb
outsb
fisubrs
rcrb
and
adc
jbe
xchg
imul
dec
cltd
fld
das
in
cli
mov
incl
pop
movsl
add
cmp
hlt
xor
xchg
mov
lcall
push
pop
jo
je
or
rol
int3
xor
test
les
adc
dec
sub
in
in
dec
fmulp
adc
cmp
add
inc
loopne
xchg
pop
pushf
repz
lcall
xchg
or
mov
dec
cmp
imul
lcall
out
mov
fdiv
pushf
repnz
and
cmpsb
cmpsb
iret
cwtl
mov
outsl
add
in
cli
scas
cmp
jg
mov
pop
mov
shlb
jp
lods
les
xchg
sahf
xchg
push
jbe
inc
insb
jmp
pop
push
popf
xchg
insb
xchg
mov
ret
sbb
inc
lods
les
mov
test
jmp
cmp
loop
movsb
shr
rcrl
fbld
hlt
aam
xor
cli
cmpsb
cmp
sbb
jmp
fcmove
inc
sbb
std
cmp
in
push
out
test
rorb
ret
mov
add
decl
fisubrs
clc
das
xor
mov
add
fiaddl
roll
incl
rcll
xchg
and
int
push
cwtl
cmp
xor
sbb
push
mov
push
das
stos
ljmp
push
ret
in
cmp
cmpsb
aas
fildll
jge
js
jge
adc
xor
out
ljmp
mov
outsb
idiv
movsl
jo
pop
addl
pop
out
repz
sti
mov
test
es
ja,pt
add
call
sbb
jle
jg
imul
scas
lods
push
xchg
pop
mov
gs
inc
clc
sbb
test
cltd
outsb
jo
pushw
dec
adc
cs
ljmp
push
add
call
repz
push
xchg
cltd
stos
and
leave
es
pop
mov
cmpsl
decl
mov
ret
movsb
fs
adcl
sub
aaa
jns
je
jo
mov
aad
jmp
clc
xchg
out
mov
pop
sub
sub
enter
jg
fmulp
add
push
orb
jnp
xor
out
gs
std
mov
mov
idiv
sbb
lcall
push
shll
arpl
jmp
xchg
sub
jne
adc
ret
or
ljmp
pop
aam
out
push
outsl
sub
sub
push
jl
and
outsl
incl
adc
jo
push
sbb
rorb
inc
pushl
imulb
xor
idivl
arpl
dec
loop
add
lods
call
data16
incl
movl
lcall
adc
lods
aam
jb
fcomps
sar
lds
loopne
pop
ret
add
add
xchg
ljmp
inc
clc
cltd
in
adc
test
outsb
sub
jp
ja
sbb
pop
lds
push
rcrb
jmp
dec
pushl
xorb
sub
shl
cmpsb
push
xor
xchg
cli
adc
xor
sahf
or
mov
mov
clc
scas
cli
jmp
test
pop
xchg
popf
or
cli
jnp
ret
dec
out
dec
in
aam
adc
ljmp
xor
lahf
fldl
in
test
shll
lret
sub
pop
cmpsl
imul
mov
mov
jo
imul
loopne
push
mov
xchg
sub
out
inc
ret
lcall
sub
sbb
rcrl
mov
jl
add
adc
sahf
mov
addr16
pushl
es
sbb
xchg
xchg
push
cwtl
push
out
shrl
dec
movsl
jns
imul
cmp
jg
cmp
test
jg
jmp
mov
lahf
dec
sbbl
cmp
jns
lcall
in
push
pusha
cmpsl
repnz
sbb
test
mov
xor
fisubrl
stc
pop
decb
adc
cmp
orl
or
lret
cltd
sbb
leave
das
adc
jmp
dec
jmp
dec
fiadds
and
sub
sub
adc
sub
cs
mov
mov
js,pt
jo
pushf
sub
cmp
ret
mov
xlat
pusha
dec
xchg
xchg
imul
add
outsb
xor
inc
or
mov
cmp
dec
cmpsl
cwtl
repnz
push
sbb
or
bound
or
xchg
iret
adc
popa
cltd
mov
inc
lea
fiadds
sub
and
xlat
cmc
xor
ljmp
clc
arpl
into
push
mov
mov
scas
daa
sbb
xor
outsb
ret
xor
insl
jg
fdivl
jg
in
mov
repnz
cmpsl
xchg
fbstp
mov
sub
cli
dec
adc
ret
repz
rcrl
cmp
aad
cli
dec
pushf
push
cmp
xchg
std
dec
lcall
ss
push
cli
into
pcmpgtd
je
xchg
in
test
jge
aaa
imul
stos
pop
dec
pop
bound
dec
das
pop
cs
push
js
xor
and
incl
shlb
add
xor
dec
mov
std
incl
pop
clc
xchg
shl
mov
mov
lods
dec
mov
push
jmp
xlat
in
xor
js
jg
mov
test
mov
cltd
enter
xor
push
add
mov
inc
scas
xor
sbb
loopne
mov
out
popf
pop
xchg
rolb
sbb
clc
cmp
xchg
pop
jmp
xor
mov
imul
out
mov
icebp
fcoms
xlat
inc
mov
push
xchg
sub
cwtl
fcoms
into
xor
inc
jge
int
fcomip
in
scas
outsb
fidivrs
fmul
push
adc
adc
add
mov
jmp
lret
jbe
sarb
idivl
iret
cli
call
push
pop
ljmp
jmp
mov
sub
mov
push
push
test
scas
out
pushl
ljmp
in
mov
dec
scas
push
mov
lcall
mov
inc
bound
xor
lcall
jno
mov
mov
sbbl
movsb
mov
push
int3
mov
cs
xchg
rclb
lcall
inc
das
inc
cwtl
push
in
aam
andl
arpl
cmp
xchg
cmpsl
mov
mov
cmp
popf
add
data16
push
inc
mov
sub
js
sub
jo
pusha
sbb
add
xchg
daa
inc
jmp
mov
xchg
push
sbb
fnsave
or
cmpsb
mov
and
add
mov
push
pop
adc
shlb
pop
fdivr
ret
sub
sub
pop
push
sti
clc
or
jae
inc
ret
jge
sbbb
call
jecxz
fwait
sub
repnz
cld
xchg
dec
xor
push
xchg
jecxz
movsl
inc
test
insb
add
inc
jl
inc
cmp
xor
iret
mov
test
mov
stc
push
mov
cmp
cmc
pushl
pop
js
fiadds
xchg
stos
jge
adc
incl
jl
cmp
jne
sub
push
push
lds
iret
fidivrl
cmpsl
mov
es
call
xchg
xchg
ljmp
cli
test
xchg
mov
jge
loopne
lods
cmp
es
sbb
dec
test
adc
aas
and
cld
xorl
outsl
icebp
stc
sbb
ljmp
stos
ss
mov
pushf
cmc
dec
loopne
icebp
dec
mov
cmp
or
jmp
mov
cwtl
loop
push
js
testl
call
cltd
or
push
roll
inc
imul
push
mov
insb
jmp
ja
add
call
and
mov
and
das
jae
sub
xor
lock
decl
push
sub
mov
imul
imul
pop
and
sub
shlb
dec
push
and
pushl
fistps
outsb
pop
loope
imul
mov
push
arpl
push
add
lcall
or
xor
sti
add
cmc
adc
and
pop
sub
cmpsl
int
push
push
sbbl
sbb
mov
insb
adc
ds
jg
push
inc
sti
lcall
pop
sub
test
add
pop
xor
mov
cltd
stos
mov
decl
mov
or
mov
mov
xor
insl
in
or
mov
push
imul
lcall
addl
cli
scas
ds
mov
and
jbe
iret
ds
es
inc
lcall
jmp
mov
addr16
adc
movsl
jbe
push
mov
dec
popf
inc
ja
xor
cltd
inc
out
clc
decl
stc
mov
dec
jbe
xchg
adc
les
sbb
xchg
cwtl
decl
divl
jno
sbb
adcw
push
fs
jo
pop
xor
adc
loop
inc
dec
jg
xor
sbb
repz
push
adc
les
int
call
mov
cli
push
cli
data16
adc
jmp
push
or
movb
mov
decl
call
xor
adc
cmc
and
cmp
mov
sbbl
pop
mov
sahf
fwait
inc
into
mov
aas
sbb
push
sbb
scas
iret
scas
arpl
decl
shlb
sub
xor
testl
pop
pop
fisttpl
repnz
decl
inc
loopne
les
jbe
mov
mov
add
add
lds
lds
adc
mov
call
push
inc
mov
jns
std
test
xor
push
push
fldenv
jne
nop
xchg
sub
mov
jg
jmp
push
adc
lock
sub
add
and
mov
incl
xlat
loope
mov
mov
lret
mov
jl
xchg
fstp
out
xor
sbb
neg
inc
cmp
pushl
push
stc
dec
std
test
fs
rclb
add
cltd
sub
pop
jno
fcos
pushl
xchg
adc
pop
mov
ret
fucomip
xor
pop
outsb
xchg
icebp
mov
lret
lret
cmpsb
call
rol
daa
cli
sbb
jo
push
dec
or
mov
sti
pop
mov
jbe
xor
lock
mov
cli
stos
sbb
or
lret
dec
pop
notb
into
dec
imul
call
in
push
jmp
fs
jle
push
enter
or
sub
fs
push
in
lcall
xor
fwait
testb
movb
sbb
lea
test
lcall
lcall
jns
mov
and
mov
push
xchg
insb
push
xchg
scas
subl
or
xchg
or
adc
jg
mov
adc
lcall
ret
dec
ljmp
sbb
or
ljmp
push
mov
in
and
mov
pusha
fstpl
cmpsl
push
mov
mov
insl
push
fsts
inc
outsb
js
test
xchg
xchg
aam
adc
test
sbb
fcomps
es
daa
or
xchg
inc
pushl
pushf
shll
mov
popa
iret
lea
inc
cli
cli
shr
std
and
call
jo
or
pop
dec
insb
insl
lret
cmpsl
dec
lods
repz
xchg
sub
xchg
imul
fstp
js
mov
add
push
hlt
push
bound
inc
cmpsl
jge
and
mov
stos
mov
jnp
cmp
ja
imul
mov
andb
out
xchg
sar
mov
ljmp
xchg
lcall
ja
inc
jecxz
inc
push
add
lds
cmp
inc
or
incl
or
adc
mov
add
jp
hlt
fdivrl
lcall
dec
cld
pop
fabs
push
je
int
js
clc
icebp
push
jle
cmp
sub
xchg
ficompl
fistpl
in
lahf
in
mov
outsl
aam
jmp
call
sbb
movsl
stos
ret
std
jg
mov
mov
mov
out
adc
mov
push
cmpsb
idivl
cmp
sbb
pop
xchg
cli
push
mov
mov
add
ss
xor
jle
sub
cld
in
pushl
aad
fiaddl
sub
sub
mov
imul
std
cmp
cmpsl
popa
and
loope
pop
cmp
jg
fisttps
sbb
mov
lret
nop
adc
aad
xor
lcall
jmp
push
inc
jae
jle
adc
jns
pop
jbe
push
leave
ret
dec
xor
out
adc
jmp
int3
add
lea
jbe
test
aam
sti
mov
xchg
mov
out
out
mov
lock
lret
sbb
and
mov
add
cwtl
add
fcomip
decl
sub
dec
insl
sti
loopne
dec
int3
mov
movsl
fwait
push
std
and
mov
fcoml
jmp
adc
fs
into
lea
jmp
sbb
xchg
fmuls
push
dec
js
fdivr
jp
lock
scas
lods
repnz
in
pusha
insb
fwait
addb
jl
das
dec
jge
subl
ficomps
jg
cli
stc
call
dec
cwtl
adc
xchg
jne
and
cmp
aaa
dec
es
ret
dec
mov
dec
int3
jg
mov
push
outsb
mov
ss
xchg
sarl
movsb
in
sub
call
xchg
fnstsw
je
shll
add
lret
sub
mov
mov
and
sbb
loopne
inc
push
or
negb
jle
cli
pop
in
outsl
pop
mov
and
fwait
dec
mov
push
clc
stos
lcall
lcall
ficompl
and
imul
test
or
js
inc
mov
xor
ljmp
jp
cmp
pushl
lods
sub
jne
js
xchg
dec
xchg
imul
mov
sbb
repnz
sti
dec
jnp
inc
sub
or
lea
mov
decb
bound
adc
ljmp
and
out
lret
xchg
mov
xchg
pop
test
lods
rol
inc
jp
call
aas
mov
adc
lods
cld
sbb
pusha
test
rolb
pop
incl
adc
sub
repnz
test
fdivl
dec
cmc
and
push
repz
mov
xchg
movb
shr
push
push
cwtl
in
push
pop
sarl
aas
dec
push
sub
jmp
sbb
leave
scas
xor
das
scas
sbb
adc
xchg
or
dec
gs
or
popa
jbe
in
jbe
lret
push
add
decl
addl
jbe
jmp
scas
shlb
fsubs
lret
or
cmpb
popf
mov
xor
mov
orb
jae
mov
and
sbbl
das
adc
ficoms
jp
ss
jmp
mov
sti
cmp
out
mov
or
mov
cmp
adc
ljmp
lret
jmp
mov
les
mov
push
lcall
jle
call
xchg
in
and
clc
andl
fst
mov
scas
inc
mov
fnsave
movsl
or
aaa
test
mov
and
inc
addb
pop
mov
lcall
adc
dec
sub
sub
test
lcall
jns
or
push
adc
call
fistpl
jnp
or
cmpsl
jmp
popa
jne
mov
or
and
dec
mov
decl
pusha
fisttps
push
mov
mov
test
jbe
mov
subb
ljmp
mov
pop
and
and
lret
mov
add
sbb
dec
inc
das
stos
decl
int3
movsb
or
cli
jno
cmp
push
les
sbb
decl
adc
push
mov
cmp
aam
cs
sarl
cmp
cmp
adc
in
jbe
ret
enter
push
out
push
sti
dec
push
sub
mov
ds
push
aad
xchg
jge
mov
mov
in
sti
mov
imul
mov
arpl
push
push
stos
inc
lea
xchg
pop
mov
mov
push
xchg
jg
pop
cmpsb
aas
in
das
cli
pushl
mov
mov
bound
sub
mov
incl
loope
mov
pop
jg
repz
fstl
mov
xor
loope
rcrl
pusha
stos
es
decl
rcll
push
jnp
mov
pop
lret
mov
dec
mov
cmp
xorl
xor
ss
lcall
jb
loope
lret
shrl
or
push
fbld
sbb
adcl
adc
incl
adc
xor
mov
xor
dec
push
pop
mov
xor
jns
insb
dec
lods
mov
out
ds
jno
jle
nop
scas
ds
xor
lcall
sbb
call
fildll
lahf
mov
jecxz
mov
adc
loop
ja
pop
pusha
ret
ljmp
incl
repnz
mov
inc
pop
mov
add
jne
enter
ja
idivl
inc
adc
mov
cmp
xor
prefetch
sbb
jnp
sbb
push
sbb
fisttpl
mov
inc
and
es
sbb
xor
in
mov
push
and
sub
xchg
xchg
aaa
inc
idivl
mov
dec
adc
call
fnstenv
sti
ljmp
mov
fwait
sbb
push
ja
pop
xchg
push
icebp
lock
jg
lahf
sub
xchg
sti
mov
pop
sbb
or
rorl
ss
in
jp
lcall
sbb
jl
arpl
adc
push
sti
jne
jbe
mov
sar
lcall
add
xchg
adc
mov
idiv
cltd
test
les
out
sub
loopne
or
pop
cmc
in
imul
mov
cmp
mov
sbb
aam
out
or
cld
dec
xor
jb
inc
or
lock
jmp
fs
pop
mov
movsb
jbe
pop
xchg
lods
test
leave
dec
or
cmp
outsl
scas
adcb
decb
repz
jge
mov
pop
fcmovbe
fcomip
rclb
push
sbb
dec
dec
call
addr16
sbbb
xchg
adc
mov
lock
mov
push
push
ret
jo
lods
or
aas
pop
stos
aad
mov
call
lea
das
mov
stos
into
jne
or
aam
imul
cmp
repz
scas
mov
mov
mov
cwtl
ret
mov
pop
ljmp
mov
adc
add
insb
movsl
or
call
fdivl
pop
adc
sti
xchg
cltd
shlb
sub
insb
ret
sub
mov
call
mov
mov
test
jbe
jmp
jmp
and
jmp
imul
push
xor
ljmp
sub
adc
aaa
lahf
xchg
mov
in
cmp
aam
int3
push
dec
lock
jo
mov
xor
in
jae
lret
sbb
or
mov
sbb
dec
loop
ficoml
jae
sarb
and
xchg
lcall
mov
pop
cltd
adc
int
jle
in
inc
mov
aad
push
das
loope
jmp
and
aas
nop
cwtl
sub
movsl
dec
stos
addl
ss
mov
lcall
pop
pop
lock
out
xlat
cltd
cs
stc
int3
lods
int3
and
decl
mov
popa
pop
fwait
xchg
mov
xchg
fdivrs
mov
movsl
lods
call
pop
addl
inc
cmp
dec
pop
pop
clc
shlb
sub
sub
push
sarl
inc
mov
dec
int
cmp
pop
jle
test
repnz
jnp
fcoms
andb
xchg
mov
je
and
xchg
cwtl
pop
pop
cmpl
outsb
mov
imul
fsubrl
lret
int
cmp
imulb
pop
adc
and
and
imul
push
idiv
outsl
push
test
and
sub
push
mov
loop
mov
push
sbbl
push
push
adc
cld
lcall
loop
sbb
sbb
fimuls
xor
out
xchg
or
test
shlb
ja
pop
pop
mov
mov
sar
incl
add
push
ffree
ja
daa
enter
imul
pop
testb
ret
mov
call
aad
popa
ds
cmpsb
test
push
bound
jge
or
loop
push
jmp
fnstcw
adc
or
cli
stos
bound
lds
push
es
icebp
ljmp
out
clc
jl
repnz
or
fs
call
xchg
pop
sarl
mov
rorb
out
clc
fstps
je
add
clc
stos
cld
stos
sbb
cmp
sub
jg
mov
sub
pop
mov
pop
cwtl
add
lds
mov
stos
sbb
mov
xchg
out
sub
cmp
ljmp
and
addr16
scas
add
jnp
mov
test
xor
mov
push
pop
mov
call
stos
loopne
pop
jb
pop
jne
pop
inc
lret
js
lahf
in
jmp
push
xchg
xchg
in
dec
inc
sar
decl
jae
mov
popf
xchg
pop
out
inc
test
xchg
push
adc
popaw
add
xchg
out
sub
xchg
negb
mov
adc
loopne
jb
icebp
cs
dec
shlb
jg
push
jp
imul
movsb
or
push
jg
test
inc
xlat
xor
cli
mov
inc
and
cld
movsl
mov
aad
fld
add
inc
push
ja
dec
pop
xchg
xchg
movsbl
into
or
mov
cli
cmp
imul
xchg
and
dec
xchg
dec
stc
sub
sub
xor
or
icebp
ljmp
cld
sbb
test
sub
sbb
ret
push
pop
mov
mov
movsl
pushl
fucom
lock
mov
xchg
sbb
mov
add
add
jg
mov
push
scas
sbb
cli
dec
int3
cmp
sbb
adc
cmp
cld
or
cmp
incl
rcll
adc
ljmp
push
mov
push
or
dec
add
sub
repnz
fstl
pusha
cld
adc
jb
or
jno
pop
call
insb
mov
scas
orl
sar
lea
xchg
clc
jmp
movsl
fptan
je
aam
push
adc
jnp
or
or
lods
dec
push
dec
pop
pushl
push
dec
mov
mov
sub
lcall
mov
and
sub
or
sbb
das
or
inc
enter
cmp
dec
mov
jno
adc
test
out
xor
ja
pushf
inc
jmp
movsl
sti
cli
pushl
mov
mov
mov
inc
aaa
cli
pop
push
push
test
repnz
jno
mov
orb
sub
sarb
mov
adc
fst
mov
fadds
sub
xchg
div
adc
std
ljmp
fwait
cmp
xchg
je
psadbw
jb
fldl
mov
mov
das
mov
xchg
lock
lods
or
fmuls
cs
cmpsl
cmp
out
scas
pushl
in
adcb
push
xchg
pop
cmpsl
pop
fidivs
and
incl
xchg
jmp
test
in
jno
flds
scas
jno
outsb
pushf
or
lret
xchg
aaa
lret
or
scas
adc
call
mov
test
cmpsl
fiadds
adc
arpl
dec
mov
add
push
ja
add
call
mov
out
or
sbb
subb
pop
mov
mov
mov
mov
jg
mov
lret
cli
jecxz
jno
rclb
xchg
dec
inc
fs
mov
call
inc
or
inc
in
mov
rolb
cmpsl
imul
sub
cs
lcall
add
sbb
lcall
out
add
mov
scas
pop
out
ljmp
mov
mov
ja
incl
push
sarl
and
adc
cmpsb
cmp
pop
out
call
call
add
rcll
flds
mov
mov
xchg
fadds
gs
ds
ds
incl
fs
cwtl
insl
jecxz
cs
xor
push
push
and
iret
negl
mov
dec
jne
ljmp
inc
rcrl
negl
outsl
add
mov
push
dec
test
ds
lcall
outsb
push
div
sbb
pop
sub
push
pop
or
lods
cmc
pop
xchg
ds
add
ljmp
sbb
xor
daa
test
test
xchg
or
dec
aad
push
fnstenv
sub
cld
and
mov
loop
lds
stc
mov
sbb
daa
and
adc
xor
adc
iret
fcomip
incl
in
mov
xlat
mov
mov
jbe
fnstcw
test
incl
imul
jmp
bound
add
push
ljmp
push
mov
mov
jb
adc
xor
or
loopne
lret
sub
ljmp
inc
and
jmp
and
gs
call
in
mov
decl
insl
xor
cwtl
push
cmp
xlat
mov
mov
or
push
ret
fcomip
fstps
lret
dec
icebp
fistpl
mov
repnz
call
jg
sbb
outsb
mov
les
imul
ja
lahf
stos
inc
movsl
cmp
decl
xorb
test
ror
cs
inc
cmpsb
pop
sub
add
dec
xchg
push
jbe
mov
lcall
xchg
and
cmp
cltd
pop
pop
xor
adc
mov
incl
sahf
fidivl
fdiv
pop
inc
mov
std
lcall
jnp
cmpsl
sbb
call
insl
adc
dec
ljmp
dec
adc
leave
cmp
mov
xlat
insl
inc
dec
jmp
in
xor
add
jne
hlt
mov
pop
lods
push
ljmp
test
sarl
sbb
cmp
and
repnz
and
hlt
lods
add
decl
lahf
lcall
std
les
xor
out
arpl
mov
test
loopne
popa
dec
push
movd
adc
mov
mov
ljmpw
push
mov
add
push
push
sbb
call
arpl
pushfw
lea
lods
arpl
xchg
test
shll
sub
rol
js
sub
je
mov
xor
aaa
cld
stos
cmp
or
rorb
leave
or
dec
jp
icebp
decl
test
aam
pop
fmull
je
jl
jns
iret
mov
cmc
lods
or
lcall
jp
cmpb
mov
jl
outsl
ljmp
lcall
repz
gs
lods
out
fsubl
insl
sbb
xchg
dec
imul
repz
call
sbb
fsts
adc
cmc
lods
pop
and
jle
cli
xchg
push
loope
stc
movsl
fdivrp
ljmp
jl
insl
in
mov
in
ja
mov
fcoml
push
or
adc
xor
add
cmpsl
dec
divb
mov
sti
decl
shlb
testl
shlb
push
icebp
cmp
popa
mov
imul
fstpl
cwtl
sbb
xchg
popf
or
pop
jl
add
dec
ret
push
fistpl
adc
xchg
fadds
or
fstp
test
fmuls
cmp
and
cmp
sbbl
cld
inc
fildl
sar
or
decl
jecxz
inc
sub
popa
mov
mov
cli
mov
pop
push
icebp
pushf
insb
pop
stos
es
xchg
push
mov
data16
jmp
jbe
inc
push
jmp
test
les
outsl
notl
imul
pusha
in
shrb
push
fmul
mov
fxch
out
jbe
lods
shll
and
out
lret
sub
int3
jle
jmp
cmp
xchg
dec
inc
adc
out
adc
clc
or
jg
lods
js
ret
jg
push
xor
gs
adc
xchg
jne
or
dec
sbb
jb
jmp
lcall
pusha
jg
fisttpl
mov
pop
bound
mov
in
inc
in
test
xchg
cmp
push
mov
clc
dec
out
xchg
loop
outsl
add
xlat
push
pop
and
iret
mov
and
pop
xchg
mov
jo
fsubs
call
fs
fldl
ljmp
ret
loope
fdivrs
push
jmp
sub
jg
or
inc
mov
or
sub
jp
fucomip
mov
adc
jle
data16
lcall
xor
fcom
xchg
sub
inc
and
jg
mov
shlb
dec
fstl
or
gs
or
mov
sub
mov
xor
mov
test
icebp
lcall
data16
sub
sbb
push
add
mov
ficoms
mov
jmp
in
cwtl
notl
or
aaa
pushl
bound
arpl
push
or
cmp
mov
mov
ljmp
jmp
insb
mov
cmp
sbb
lret
or
xor
jl
sbb
decl
jg
sbb
adc
scas
pop
daa
mov
sbbb
xor
pop
roll
movsl
scas
sar
adc
idiv
aas
dec
mov
push
dec
or
clc
decb
mov
in
rclb
dec
pop
mov
jae
xor
cmp
daa
sbb
jp
jle
sbb
mov
push
xor
push
inc
in
push
xchg
or
lcall
push
xchg
push
stos
nop
mov
mov
call
popa
test
loopne
ss
ljmp
sub
jnp
sub
jecxz
jge
adcb
lea
dec
jg
xor
outsl
dec
mov
or
mov
inc
xchg
push
pop
cld
add
sub
xchg
mov
sbbl
aaa
cld
decl
leave
test
adc
mov
pop
sbb
and
sbb
fwait
sub
mov
scas
inc
jg
call
loop
and
pop
sbb
jns
outsl
add
pop
test
push
mov
stc
xchg
mov
int
int
daa
xor
inc
imull
mov
push
push
iret
mov
mov
std
sbb
pop
shrl
outsl
aas
add
incl
xor
and
push
fisttps
xchg
movsb
movb
cld
cmpsb
or
pusha
ffreep
imul
pushl
arpl
push
xor
xlat
int
fisubl
loope
mov
loopne
outsb
fwait
imul
inc
and
incl
subb
or
and
xor
xorl
pop
dec
cli
ja
js
xlat
sti
lcall
push
lea
pusha
mov
jecxz
shll
fsts
ja
in
sub
and
les
movsl
sbb
push
cmp
mov
in
xor
sbb
lcall
cmp
push
push
push
xor
bound
sub
mov
insb
pop
sar
pushl
pop
inc
enter
lods
icebp
jp
mov
iret
roll
push
loopne
sub
das
test
pop
into
arpl
sub
jl
adc
sub
popa
fisubs
lcall
jne
adcw
push
cs
xchg
sub
or
mov
inc
xchg
cwtl
hlt
outsl
clc
lcall
popa
bound
mov
insb
stc
imul
inc
adc
add
mov
inc
test
shlb
xadd
dec
daa
mov
clc
adc
movsb
lock
mov
test
fadds
push
das
sahf
sub
fprem1
addb
out
inc
inc
jb
mov
cmpsl
cld
das
mov
jns
jmp
xor
pop
sub
adc
jne
pop
xchg
aam
shrl
daa
push
call
inc
add
mov
mov
sbbl
adc
push
dec
test
gs
ret
add
std
inc
sbb
pop
push
nop
stos
jbe
sahf
mov
cmpl
sti
inc
inc
sti
jp
ds
pusha
fstpt
mov
jmp
pop
repnz
inc
fcomip
rclb
jmp
adc
lcall
clc
cld
cmc
rcll
push
scas
and
ret
movsl
or
adc
pushf
cmp
dec
push
mov
xchg
mov
adc
xchg
mov
subl
decl
push
xchg
add
cmp
inc
fs
xchg
ror
adc
pop
mov
incl
pop
arpl
aaa
or
pop
cmovp
dec
ljmp
push
ret
jmp
mov
mov
sbb
daa
xchg
adc
push
jmp
pop
testb
fcomip
xchg
aas
sbb
rcl
iret
mov
dec
sbb
cmp
adc
mov
jg
imul
mov
dec
mov
ss
pushf
fcomip
pop
push
mov
pop
push
inc
decl
aam
mov
sub
jl
sub
stc
nop
jl
and
mov
les
daa
decl
mov
add
jle
and
out
push
jmp
pop
cmp
mov
incl
aas
test
mov
xor
push
push
repz
mov
mov
sub
jmp
test
rcrl
call
ret
jp
push
jmp
and
cli
add
or
enter
adc
cld
loope
pop
push
lahf
adc
roll
fisttpl
adc
mov
fsubp
push
inc
cmp
inc
push
cmpsb
add
inc
into
xchg
sarb
pop
adc
dec
stos
xor
je
or
aad
push
mov
or
outsb
mov
into
je
jae
lcall
mov
mov
cmp
jmp
cmp
push
mov
sbb
sbb
jne
mov
inc
sub
push
mov
sbb
mov
das
gs
stos
enter
sbbb
xchg
pushf
decl
lods
xorl
loope
call
mov
stos
jg
pop
fidivrl
mov
sub
cmp
fwait
push
pop
add
xlat
les
stc
xchg
std
and
mov
call
ret
mov
add
neg
sub
sub
leave
sbb
add
popf
and
mov
test
inc
mov
and
mov
cs
fnstenv
jns
sub
pop
sbb
lret
sbb
sahf
jae
fcomip
lcall
int3
sub
sub
cmpsl
out
inc
jo
fmull
pusha
adc
scas
pushl
add
movb
dec
cmp
out
out
inc
and
ds
add
faddp
repnz
lcall
stos
popa
mov
lcall
sub
and
or
xchg
push
mov
scas
inc
xchg
sub
int
jne
and
lcall
arpl
rorb
sub
inc
xor
sbb
nop
cli
jns
call
and
pop
mov
and
test
pushf
xchg
ljmp
push
aaa
int
cmp
fisubl
xor
xchg
pop
decl
cmpb
into
mov
test
les
mov
xchg
push
gs
xor
test
incl
xchg
jl
jmp
jo
pusha
scas
leave
jp
nop
adc
ds
jnp
loopne
push
jp
jmp
adc
adc
sub
mov
mov
cwtl
sub
dec
fcomip
jmp
push
negl
sub
pushf
jo
or
fadd
jne
addr16
incl
xchg
mov
jg
cmp
xor
mov
aam
adc
or
inc
mov
outsb
jecxz
sub
test
lahf
call
aas
sbb
lea
jp
push
or
lahf
movl
inc
inc
stos
std
mov
js
push
rcrb
enter
incl
mov
cmp
movsb
push
cmp
popf
ljmp
mov
lock
cmp
or
jnp
pop
xor
cmp
int3
mov
jo
out
ljmp
mov
mov
loopne
jae
cmp
mov
push
inc
fisubl
xlat
pushl
mov
fsubrl
cmp
dec
imul
stos
rclb
jbe
decl
lock
clc
pop
xor
jecxz
xor
jecxz
jmp
pop
ficoms
leave
pop
mov
sub
xchg
nop
scas
sahf
pop
mov
sbb
ret
pop
or
push
cmp
call
in
adc
dec
push
call
jae
and
pop
push
xchg
lcall
dec
cmpb
jo
add
in
gs
decl
push
cmpsb
dec
adc
mov
mov
mov
jecxz
pop
xor
js
pop
and
lret
rcrl
add
fnstcw
icebp
lods
push
mov
push
das
sar
out
or
dec
xchg
insb
fsts
cmpsb
clc
inc
in
ja
lods
inc
cmpsl
jmp
hlt
pop
dec
jecxz
lods
xchg
jp
and
jl
dec
imul
jmp
fildll
jecxz
shll
andl
add
decl
adc
out
test
dec
pop
lds
inc
dec
mov
jno
inc
lock
clc
and
dec
repz
sbb
lcall
and
decl
ja
imul
dec
mov
mov
addl
loopne
cmpsb
adc
insb
call
es
bound
cmp
adc
mov
push
jno
lret
mov
sub
dec
jb
jmp
ljmp
xchg
fisubrl
xor
lea
mov
shlb
icebp
jmp
and
cmpsb
scas
popa
cmp
push
xlat
loopne
rcrb
sub
pushl
lock
jp
rcrb
sbb
xchg
ds
jb
pushf
aad
aaa
mov
out
and
mov
incl
cmpsb
aas
mov
scas
add
mov
imul
mov
leave
loope
and
out
mov
jecxz
in
pop
xor
and
pop
enter
lahf
cmp
mov
mul
jns
add
lods
lahf
cltd
mov
sahf
rclb
sub
push
mov
jo
cmp
adc
sbb
imul
pop
out
rolb
push
xchg
cmp
cltd
loopne
cmpsb
ds
jg
sub
nop
xchg
or
sbbb
lcall
xchg
nop
cmp
enter
cmp
fistps
jb
addr16
pop
jbe
jp
loop
dec
aaa
scas
andb
dec
je
and
jp
test
lcall
scas
sbb
mov
dec
call
push
test
push
sub
pushl
pop
sahf
mov
fidivrl
es
out
gs
push
outsb
lcall
out
mov
jae
mov
sub
inc
dec
rorl
mov
jnp
push
movsb
and
std
decl
bound
dec
outsb
dec
cli
jns
or
das
loop
decb
dec
jnp
pop
mov
fcmovbe
stos
fcmovbe
jb
jae
imul
sbb
clc
popa
pop
sti
and
and
jb
sub
and
mov
inc
mov
cs
ja
dec
and
xchg
dec
loope
inc
mov
mov
ret
mov
jnp
mov
cmc
mov
scas
lcall
aad
lock
inc
lahf
mov
adc
or
ret
gs
icebp
out
mov
pop
xor
sbb
pop
cmp
push
sahf
pop
pop
sub
nop
or
daa
xor
add
cwtl
call
insb
ljmp
jae
in
cs
xlat
inc
mov
mov
stos
aaa
leave
popa
xchg
adc
sub
pop
pop
xor
add
or
push
rcl
mov
add
nop
pop
movsb
mov
decl
fxch
cmpsl
adc
scas
push
and
cmc
cmc
sub
imul
push
jg
mov
lds
push
pop
and
imull
lods
sbb
rorb
inc
cli
ljmp
bound
inc
lret
sahf
cmpsb
arpl
adc
jmp
out
pop
pushf
jmp
fs
push
and
mov
int
loop
test
js
pop
popf
decl
fdivrs
dec
jno
inc
jmp
pop
popa
cltd
jg
or
outsl
or
sub
jp
mov
adc
adc
inc
jnp
in
icebp
iret
fisubrl
dec
hlt
jo
cmp
sbb
incl
add
mov
dec
hlt
inc
fucomip
pop
js
jb
hlt
mov
cwtl
ret
pop
jne
xchg
add
mov
mov
std
mov
adcb
xchg
lcall
cmp
loopne
mov
pop
push
clc
jnp
jp
push
add
ljmp
int3
inc
test
inc
imul
cmp
sbb
adc
lcall
jle
xor
bound
xchg
xchg
leave
cmp
shlb
dec
adc
mov
incl
mov
jmp
fcompp
mov
mov
dec
xchg
mov
decl
mov
cltd
dec
mov
movsl
sub
dec
xchg
std
or
inc
leave
lock
fs
call
xchg
dec
cmp
xchg
sahf
scas
aam
jge
inc
data16
das
test
or
or
pusha
lcall
in
sti
nop
mov
lret
push
insl
imul
jb
gs
or
ljmp
xor
or
imul
mov
sbb
jae
mov
movsb
insb
popa
fcomip
or
int
mov
aad
lret
xchg
repnz
sub
jp
movsl
call
mov
jne
push
dec
jns
pop
cli
cmp
jle
mov
sahf
jmp
adc
mov
repz
in
dec
jp
pop
or
scas
add
stos
dec
sbb
pop
mov
ja
decl
nop
les
mov
or
xchg
xor
call
mov
or
adc
in
jne
xchg
movsb
ss
xchg
mov
sbb
ljmp
xor
insl
test
dec
add
xchg
rorl
mov
js
jae
mov
mov
push
pushf
jle
paddd
mov
decl
xchg
sbb
cmpsb
push
call
in
iret
cltd
jl
fcomip
mov
push
jne
idiv
lcall
lods
push
mov
jmp
lods
inc
mov
pop
pop
fs
dec
or
pop
fwait
clc
decl
adc
xchg
sub
inc
xchg
lret
sti
outsb
incl
fs
sbb
cmp
fsubrs
jl
out
inc
jo
pushf
dec
jns
pushl
ds
push
sbb
aad
jg
pushf
pop
mov
inc
cmp
push
xchg
adc
fadd
dec
inc
decb
mov
dec
add
pop
std
lods
ljmp
cmpsl
push
mov
inc
in
lock
inc
jne
dec
popf
sbb
xlat
sub
or
push
sbb
cs
out
dec
call
out
in
jg
sti
push
sbb
ja
lock
bnd
jbe
jl
mov
jae
mov
call
and
out
sbb
test
jnp
mov
cmp
shrl
push
or
add
inc
hlt
or
jp
call
in
mov
pop
sub
insl
add
adc
push
movsb
pop
push
jnp
lods
int3
aas
push
jp
frstor
xchg
and
lods
movsl
rolb
or
daa
xlat
movsl
dec
ss
clc
decl
ret
adc
inc
mov
mov
test
jae
mov
jle
pop
call
cld
jle
xor
xchg
pop
add
push
shll
out
mov
out
ljmp
cmp
in
popf
xchg
data16
div
mov
test
stos
rcr
clc
das
adc
call
cmc
fcmove
and
incb
lods
cmp
scas
pop
push
dec
popf
std
xchg
sub
das
scas
mov
test
push
out
cmpsl
sbb
test
inc
stos
xchg
cmp
sbb
je
out
xlat
pushl
testb
mov
xchg
push
cmp
mov
dec
cmc
mov
pop
jns
incl
mov
mov
mov
pop
pop
sbb
xchg
rcrb
in
lahf
scas
lcall
into
es
in
lods
dec
stc
adc
ljmp
test
pop
sti
xchg
pusha
movsl
scas
scas
mov
mov
push
mov
icebp
xchg
ja
testb
mov
movsl
cmp
in
sub
insb
jl
nop
or
mov
xchg
mov
inc
jle
xor
ljmp
or
mov
or
cmc
mov
or
and
inc
mov
dec
loopne
cmpsb
xchg
jl
imull
stc
rcrb
fisttps
xchg
and
pushl
sbbb
imul
add
cmp
inc
cwtl
call
jp
in
or
add
pop
repnz
pop
push
js
test
gs
adc
mov
add
push
or
xchg
popf
jg
repz
push
cwtl
in
iret
mov
neg
cmpsb
sub
adc
dec
and
sub
icebp
xorb
incl
jl
and
bnd
mov
mov
mov
jecxz
push
outsb
sub
decl
in
mov
mov
rolb
sahf
push
leave
je
iret
pop
outsb
aas
xor
call
arpl
xchg
lock
mov
mov
insb
jno
aam
enter
dec
pop
sahf
sbb
std
lcall
dec
pop
pop
mov
fsubrs
pop
mov
cltd
xchg
test
mov
add
pop
idivb
add
int
mov
mov
incl
out
cmp
mov
jle
aad
sbb
add
idiv
mov
je
and
or
hlt
fsubl
insl
cmpsl
inc
inc
scas
sbb
insl
popf
flds
test
dec
inc
inc
jge
decl
mov
movsl
push
movsb
dec
cli
dec
cld
outsl
je
xchg
inc
test
jl
das
push
and
decl
or
sahf
repnz
push
out
xchg
or
jo
sbb
mov
idivl
jmp
js
jge
push
dec
data16
pop
xchg
cli
mov
push
push
jno
insl
push
sbb
xor
jno
or
call
inc
add
test
sbb
and
lcall
mov
je
push
ret
pop
xchg
add
enter
dec
pop
loope
das
mov
mov
jns
out
push
and
jmp
aas
shrl
jg
sub
pusha
scas
inc
cmp
jg
dec
insb
xorl
decb
lcall
dec
fxch
mov
leave
jl
imul
or
xchg
jge
enter
cmp
sbb
inc
push
push
inc
or
push
ficoml
incl
cli
int3
cmp
jne
sbb
popf
incl
leave
addr16
sti
xchg
or
test
sbb
mov
jae
stos
outsl
cld
jnp
jbe
sbb
mov
dec
push
pop
insl
xlat
popf
inc
lcall
out
mov
mov
pop
addr16
iret
in
sarl
lea
orb
push
adcl
mov
es
adc
popf
add
sarb
call
lock
sahf
inc
sar
xor
aaa
cli
sbb
pop
in
callw
ret
ss
sbb
jae
daa
pop
sbb
movsb
push
adc
ljmp
xchg
xchg
mov
dec
mov
mov
sbbb
xchg
outsl
test
xlat
pop
ja
pop
push
fiaddl
fcompl
fdivrl
test
or
call
sub
cmp
insb
clc
mov
sbb
mov
decl
fistpl
sahf
xor
mov
cmpsb
pushw
test
jmp
iret
xchg
std
lcall
dec
push
movsl
lret
and
jne
xor
pop
jg
fisttps
jnp
or
cmpsb
in
sbb
inc
push
push
pop
xchg
sti
insl
pop
push
push
ljmp
cwtl
aas
adc
adc
cmp
mov
lds
mov
idivl
cmp
and
ljmp
inc
or
cltd
push
push
adc
scas
push
add
sbb
iret
add
out
fstpt
dec
sar
bound
ljmp
call
stos
inc
jg
mov
cmp
je
ds
sbb
js
gs
inc
inc
ja
push
pop
std
pushl
jne
jmp
stc
aam
pop
ds
leave
cld
out
push
outsb
push
dec
idiv
decl
sub
push
out
sub
aam
enter
sbb
scas
mov
test
dec
xchg
ret
sbb
shrl
mov
lret
pop
mov
stos
xor
neg
mov
decl
clc
and
roll
cmpsb
int3
sarb
imul
lock
popa
shlb
or
pushl
and
mov
ljmp
in
pop
out
mov
sbb
icebp
mov
adc
mov
in
jmp
sbb
sbb
and
fidivs
and
add
xchg
inc
adcb
loop
cmp
sbb
dec
mov
movsb
ret
or
stos
xor
push
adc
adc
sbb
lret
inc
cmp
pop
fiadds
into
mov
push
stos
jge
std
push
inc
xlat
sbb
pushl
clc
ds
shll
jo
movsb
jns
cltd
into
call
xor
ja
sti
sbb
adcl
cltd
aaa
popa
insb
dec
inc
cwtl
fists
lcall
fdivs
loope
sbb
in
lret
mov
in
push
fimuls
into
xchg
test
or
ljmp
ret
clc
aam
loopne
inc
data16
movsl
jl
inc
mov
int3
mov
and
xchg
jg
dec
aaa
movsl
movsl
pop
loop
sbb
inc
fstpt
push
test
decl
mov
test
jne
daa
adc
and
mov
add
incl
leave
in
xchg
pop
or
xchg
xor
cs
lcall
push
xor
fistps
movsb
jae
lret
lret
jnp
fidivl
jl
je
gs
mov
mov
repz
xchg
rclb
cld
cmp
popa
add
lods
push
xchg
inc
mov
in
icebp
call
loope
rorb
sbb
mov
arpl
jg
jo
movsb
mov
fisttps
out
add
xchg
xchg
aam
lcall
xor
xchg
inc
dec
mov
xchg
sbb
popf
xor
bswap
inc
jmp
xor
loope
movsb
jo
repz
cwtl
mov
mov
loop
jns
popf
or
hlt
lcall
xor
mov
je
jp
cltd
jo
movsb
sub
mov
incl
jo
jle
in
add
and
sar
jmp
imul
or
push
xchg
push
sub
mov
lods
sub
imul
das
lods
inc
sub
xchg
int
mov
test
xor
mov
loopne
dec
cli
pop
pushl
mov
adc
movsb
pop
lret
mov
mov
test
out
cli
frstor
imul
imul
adc
out
or
sbb
mov
cmc
or
sub
clc
ljmp
scas
xchg
fucom
xchg
ss
test
pushl
imul
outsb
inc
dec
in
jge
stos
add
enter
cwtl
cmp
sbb
idiv
lcall
movsb
out
push
pop
add
inc
xchg
sub
xor
dec
pop
and
mov
scas
jmp
stc
out
out
scas
push
fcom
pop
sub
inc
fildl
data16
mov
and
sarb
incl
mov
clc
cmp
xor
inc
mov
out
mov
loop
test
in
mov
jg
fld
pop
jl
xor
and
lock
stos
sub
dec
mov
mov
dec
jo
cmp
xchg
pop
inc
cltd
subl
xlat
lcall
inc
sbb
or
inc
fldenv
js
mov
push
sub
pop
addr16
mov
mov
insb
repz
andl
inc
in
bound
xor
call
les
test
sahf
sbb
mov
sub
pushf
mov
outsb
cmp
ja
jp
xchg
pusha
fmull
xchg
mov
sbb
add
fbstp
test
jmp
pushf
repnz
fisubl
push
xchg
push
mov
sti
sar
cld
scas
in
es
lcall
adc
and
push
mov
or
push
mov
adc
decl
data16
dec
icebp
rcll
stc
and
xchg
pop
mov
or
ljmp
mov
dec
repnz
sahf
and
xchg
js
ja
imul
cmpsb
or
jg
ret
fcoms
xor
cmp
nop
addr16
sub
xchg
xor
lcall
aaa
jo
push
dec
mov
cltd
lret
push
icebp
roll
ror
jle,pt
push
repz
jmp
mov
outsb
sub
test
lock
jmp
adc
not
add
clc
sti
jecxz
repz
xor
jnp
pop
xchg
jns
incb
pop
push
adc
fwait
push
pop
and
sahf
jmp
or
icebp
lcall
dec
cmp
inc
ss
cmp
mov
shll
xor
std
pop
cmp
inc
stos
inc
and
adc
xchg
shld
add
dec
xlat
mov
inc
sub
or
inc
arpl
int
pushl
mov
sbb
sub
loopne
loope
mov
mov
cltd
sub
or
pushf
push
pop
loope
jb
mov
add
stos
mov
popf
cmpsb
arpl
ljmp
cli
push
pop
jecxz
into
mov
jbe
push
or
cmpsl
add
adc
scas
pop
out
clc
pushl
and
popf
mov
out
pop
mov
or
loop
and
outsb
add
ljmp
pop
clc
push
cmp
jmp
lea
inc
dec
mov
xchg
xchg
stc
pop
inc
clc
dec
imul
sar
call
mov
lock
push
data16
sub
xor
xchg
adcb
sbb
lret
push
dec
inc
dec
lcall
jne
imul
stos
stos
push
sahf
xchg
es
pushl
fildl
jae
dec
loope
jl
cwtl
sub
mov
ljmp
decl
lods
adc
mov
adcb
xchg
pop
mov
popf
das
aad
mov
push
loope
mov
jb
fstpl
xchg
mov
lods
andb
lahf
and
outsl
xchg
dec
cld
ljmp
dec
xor
mov
cld
cmp
dec
or
mov
mov
sahf
inc
testb
lahf
ret
push
jo
call
aam
stos
xor
hlt
sahf
imul
in
sub
dec
filds
sbb
out
enter
call
lds
sub
dec
jne
mov
add
data16
pop
aas
mov
ret
xchg
loopne
lcall
xlat
mov
mov
loope
pop
enter
sub
lock
xorb
stos
decl
cltd
push
inc
pushf
leave
repz
in
cmp
xchg
jno
mov
stc
mov
fwait
lods
jle
fnstenv
mov
cmp
or
push
xchg
cmp
mov
imul
mov
daa
lea
dec
mov
xchg
fnstcw
imul
adc
sub
inc
cmp
mov
jg
or
aas
mov
or
mov
stos
mov
call
jbe
test
sbbb
gs
shrd
add
stos
inc
loopne
mov
cmc
lcall
lock
cmp
jge
std
add
cmp
xchg
test
push
ficompl
dec
nop
mov
inc
or
lret
movsb
sbb
jge
xchg
clc
pop
scas
mov
xor
inc
outsl
jo
lcall
ljmp
or
stc
or
ffreep
pop
inc
or
pusha
test
mov
fdivr
enter
adc
bound
mov
cmp
mov
leave
mov
aas
loop
rolb
in
cltd
stos
lret
popf
add
pop
movsb
shl
int3
lcall
dec
xor
jmp
add
addr16
jae
sbb
imul
and
decl
outsb
sub
movsl
stos
cmp
lcall
cwtl
out
push
mov
sbb
and
and
out
mov
loop
shll
inc
repnz
sahf
ds
mov
and
cmp
test
mov
icebp
daa
loopne
iret
rcrl
inc
out
es
xor
push
sbb
jg
scas
clc
jmp
mov
inc
xchg
push
popa
xorb
push
xor
stc
jns
icebp
mov
hlt
jp
push
and
mov
jo
jle
dec
sarb
ljmp
ljmp
pop
int
cmpsb
jge
pop
lret
jle
mov
stc
xorb
decl
dec
and
lock
jno
sahf
daa
inc
pop
mov
fsubrp
or
dec
cmp
push
cmp
push
mov
or
mov
test
inc
lock
inc
mov
mov
add
xchg
pusha
sbb
inc
es
test
push
ret
aam
inc
lea
stos
adc
mov
mov
inc
or
incl
repnz
test
js
fisubl
and
in
and
dec
pop
leave
loope
dec
and
fistps
mov
or
xchg
fsubl
cmp
adc
rorb
sbb
pop
or
pop
pushl
es
into
dec
mov
lea
mov
scas
es
inc
test
call
or
out
dec
stos
popa
gs
pop
fcmovb
shlb
sub
sbb
mov
decl
test
outsl
ds
fsubrp
stc
sub
push
fisubl
repz
jno
in
fsubl
dec
or
loope
inc
xor
and
notb
pop
icebp
xchg
testb
jmp
adc
clc
addb
ret
scas
pop
popa
int3
and
pushf
imul
insl
xor
addr16
mov
pop
fidivs
jne
or
lahf
std
lods
in
push
cld
cmp
mov
sub
push
sub
cmc
mov
jmp
xchg
fwait
xor
jecxz
xchg
pop
add
ljmp
push
cmp
decl
pusha
add
rclb
fcoms
adc
adc
ds
cmpsb
sub
je
inc
dec
jmp
push
loopne
jb
mov
inc
cwtl
jg
jmp
cltd
iret
xchg
add
jecxz
loop
push
sub
or
mov
aas
mov
mov
pop
push
jmp
dec
or
sbb
jg
filds
insl
out
jp
and
lcall
sahf
out
xchg
dec
jle
pop
lock
jl
inc
xor
cmp
sbb
repz
mov
push
add
ljmp
cli
mov
add
adc
push
scas
cmpsb
push
xchg
dec
inc
mov
mov
mov
jmp
sub
in
ret
loopne
test
sbb
inc
ret
and
mov
push
scas
cli
lds
sub
or
movsb
imul
mov
loopne
in
call
or
add
out
sti
lret
scas
dec
pop
out
das
test
pop
imul
sbb
pushl
pop
js
faddl
mov
cmp
cmp
cmp
daa
data16
jecxz
ljmp
mov
das
hlt
inc
call
dec
aas
inc
aas
cmp
push
xor
jg
pop
jl
sub
sti
add
imul
jge,pn
mov
push
jg
xor
mov
add
mov
inc
fisubs
loope
and
push
ljmp
test
lea
push
jecxz
inc
add
add
sahf
in
add
popf
xor
call
imul
arpl
filds
orb
bound
ret
aad
mov
insb
mov
outsb
cmpsb
adc
hlt
pop
lahf
mov
lea
push
out
aad
fistps
decb
js
nop
inc
xchg
shl
fistl
pop
popa
inc
adc
push
outsb
in
pop
lea
hlt
imul
jo
ja
push
pop
dec
popa
imul
pop
shlb
cmp
pop
cmp
fdivr
pop
pop
shrl
shr
aad
xchg
mov
int3
cmc
xlat
ret
es
dec
pushl
rorl
ret
jo
sbb
out
fistpl
mov
cmp
dec
sbb
push
pop
pushl
addr16
mov
loop
sub
mov
sar
fnstsw
loop
mov
scas
xor
xchg
insl
push
nop
repnz
cld
incl
cs
cmpsl
pop
fs
out
inc
sub
cltd
xchg
jnp
pop
outsb
repnz
aaa
pop
and
rorl
or
pop
outsl
aas
or
imul
mov
out
cli
incl
xlat
add
fnstsw
dec
xlat
jle
mov
fstpt
incl
xor
and
call
or
jns
and
fistpl
xchg
jmp
clc
movsl
ss
dec
ljmp
addr16
sub
xor
ss
mov
scas
add
test
mov
out
into
push
push
pop
sbb
push
mov
out
loop
jg
sbb
loop
int3
mov
inc
mov
xchg
inc
xor
add
jae
push
stc
pusha
jmp
dec
pop
jge
into
mov
cmp
imul
cli
cmc
fbld
mov
sarb
cs
jl
inc
jge
loope
pop
jmp
mov
xchg
inc
insl
clc
cmp
addr16
cli
cmp
icebp
lret
decl
sbb
jp
nop
js
fdivrs
out
lret
inc
pop
fdivrs
jecxz
mov
js
xchg
xchg
call
xlat
int3
xlat
loopne
clc
pop
adc
arpl
nop
in
rorb
movsl
xchg
cmpsb
fisubrl
incl
inc
xchg
push
shrl
and
fisubl
xchg
mov
xor
or
enter
call
lcall
xchg
mov
or
incl
inc
in
xor
lret
jg
test
inc
xchg
mov
cmc
outsb
push
jp
xchg
jns
mov
inc
cs
lods
cmpsb
sbb
sub
cmp
arpl
pusha
jle
xchg
lcall
lret
movsb
inc
dec
cmp
stc
mov
popf
and
mov
lds
pushl
push
xchg
outsl
rorb
and
addl
jge
sbb
clc
addr16
inc
out
or
fiaddl
test
inc
fldt
pop
fwait
adc
lcall
pop
ja
pop
lea
lock
loop
test
test
jns
xor
mov
pop
xchg
orl
cmpsl
addr16
mov
xchg
popf
data16
xchg
push
call
dec
mov
out
popa
in
mov
sub
pop
jle
adc
rol
push
xor
push
ret
popf
and
dec
sar
jmp
xchg
stos
mov
inc
inc
and
loopne
cwtl
xchg
push
pop
insl
std
sbb
loop
scas
xor
push
call
dec
les
pop
test
cmp
pop
mov
fs
push
in
mov
je
repz
xchg
enter
mov
stc
fbstp
call
je
mov
xchg
pop
pop
or
mov
jns
fxrstor
jns
sub
pushl
bound
stos
scas
jns
loop
movsb
sbb
lods
sbb
xchg
scas
in
aas
jno
repz
and
xchg
and
cmpsl
and
lock
pop
xor
jg
or
movsl
sarb
inc
inc
xchg
and
pushf
inc
test
mov
add
dec
adc
in
gs
roll
call
gs
push
lcall
mov
push
sub
sbb
xchg
ss
lcall
iret
popf
out
outsb
cmp
or
jbe
and
pop
mov
xchg
into
mov
in
cmp
push
inc
fistpll
arpl
test
and
fadds
cmc
stos
jnp
js
jno
cmc
shrl
call
pop
into
ret
lock
inc
pop
sahf
test
push
push
sbb
adc
js
jle
ds
incl
jecxz
cmp
idivb
mov
xchg
in
cmp
scas
js
nop
jns
xor
push
jae
ds
lds
loop
test
mov
aas
jle
mov
ljmp
xchg
mov
subb
mov
imul
stos
je
int3
aad
ljmp
bound
rorb
ljmp
sub
pop
push
push
mov
lds
pop
inc
mov
add
out
adc
mov
incl
call
inc
xchg
adc
adc
rsm
inc
scas
jbe
insb
fucom
movsl
ljmpw
call
icebp
xchg
sub
inc
cld
sub
inc
adc
jmp
or
jmp
xor
dec
jmp
mov
pop
mov
or
cmc
add
mov
aaa
jb
push
arpl
jl
inc
movsb
fcomip
add
mov
jmp
hlt
in
iret
xlat
push
push
and
mov
sti
push
out
enter
pop
mov
xchg
dec
jg
or
outsl
sub
mov
das
test
pop
out
jbe
stos
ljmp
cmp
clc
mov
aaa
in
fnstcw
fcompl
mov
fmull
in
popf
sub
sbb
xchg
dec
add
in
test
mov
mov
add
mov
mov
in
add
add
addr16
xorb
sbb
rclb
and
dec
ss
into
cmp
test
inc
jge
into
inc
cmpb
push
push
aaa
mov
jnp
rcrb
hlt
jp
leave
addl
icebp
dec
jge
xor
mov
dec
bound
mov
fldcw
fdivl
jne
mov
dec
and
add
pop
movsb
shl
lods
dec
fcomip
decl
imul
sti
add
mov
ret
lcall
adc
mov
pop
cmp
jp
inc
jg
stos
jmp
mov
push
pop
movntq
jmp
inc
mov
sarb
fisubrl
comiss
cmovle
push
or
cmp
sbb
loop
jbe
repz
mov
mov
inc
cltd
cld
inc
and
into
sub
or
out
lcall
fmuls
mul
mov
xchg
adc
fbld
std
call
sahf
push
stc
icebp
or
jae
lret
mov
data16
fiaddl
addr16
call
push
adc
sbb
jnp
jp
dec
hlt
ss
mov
sbb
rcr
cmp
jmp
xchg
push
push
lock
andb
cmp
pop
mov
ret
or
pop
inc
jne
mov
fistpl
pop
sbb
arpl
cmp
and
je
data16
mov
mov
addb
fcompl
leave
mov
jbe,pt
inc
push
pusha
mov
ja
dec
push
adc
fwait
pop
fcmovnb
ljmp
loop
stos
xchg
or
and
mov
mov
pop
inc
orl
incl
nop
lods
inc
lcall
sahf
pop
push
add
fwait
sbb
jne
test
call
or
push
inc
inc
lret
divb
outsb
jge
dec
loope
dec
mov
bound
mov
sbb
shr
aad
out
movsb
in
push
lret
add
add
inc
push
jg
pop
popf
mov
rolb
loopne
std
fldenv
or
cltd
mov
xlat
incl
sub
popa
mov
dec
int3
fists
in
mov
xchg
add
xchg
shrl
dec
incl
xchg
cld
push
sbb
xor
adc
jmp
sub
dec
xlat
or
sarl
decl
pop
test
test
ljmp
dec
loope
mov
adc
mov
xlat
adc
xchg
scas
shl
frstor
pop
fistps
movsl
xchg
lds
decl
pop
bound
sbb
mov
test
or
inc
mov
outsb
je
es
mov
cmpsb
sbb
jmp
test
push
add
and
lock
push
pop
mov
aad
mov
incl
sbb
rorb
jae
or
fcomip
out
es
jle
xor
repz
aad
fstp
jp
clc
sub
fcomip
call
in
push
insl
jnp
dec
mov
ja
jle
mov
pop
enter
push
ss
das
mov
mov
loop
mov
inc
in
mov
pop
in
sub
pop
mov
jnp
mov
push
int
dec
fsubl
cmp
xor
pushl
cmc
sahf
pusha
dec
cmp
decb
lds
fidivs
sbb
mov
or
test
ror
xor
roll
jne
dec
pop
cld
add
jmp
sbb
addr16
cltd
cmp
mov
jmp
mov
int3
insl
pop
lock
inc
dec
pop
push
xor
sbb
outsb
jo
xlat
add
jno
push
mov
push
jmp
sbb
lret
push
fcompl
ss
add
cmp
push
and
ret
xor
cmp
data16
loop
add
jo
xor
pushl
ja
inc
psrad
jge
js
or
fdivs
pop
test
incl
sbb
lahf
adc
fs
jno
add
cwtl
inc
push
sub
mov
ljmp
inc
out
gs
movsb
inc
jmp
xchg
imul
out
adc
popa
sbb
push
cmp
movsl
aas
jbe
mull
add
jb
push
lret
sbb
or
aaa
ss
mov
hlt
orb
in
cmp
lcall
add
js
cmpsl
xor
and
add
aad
out
adc
leave
adc
inc
aad
pushl
cld
cmpsb
in
pop
js
pop
pop
and
xlat
pop
adc
outsl
pop
add
clc
sbb
mov
div
mov
push
pop
sbb
mov
sarl
add
mov
decl
bound
shll
imull
pop
push
notb
negb
xor
clc
decl
mov
jo
gs
xlat
add
cmp
call
fsubrp
sub
inc
jge
test
add
mov
mov
push
call
add
mov
sti
shr
sti
aad
sub
add
enter
push
clc
xor
call
ss
roll
jb
sbb
mov
je
cli
cmpsb
out
inc
sub
jp
add
inc
ljmp
cli
mov
jb
mov
sbb
out
test
and
lcall
mov
and
cmpsl
fisttpl
les
movsl
push
jbe
mov
xor
push
sti
ja,pn
mov
mov
fcomip
decl
and
add
into
sahf
cmp
andl
lret
xchg
pop
sbb
push
ljmp
nop
outsb
fcom
cmp
inc
call
mov
cmpsb
xor
cmp
call
int
xor
aad
test
cmp
sub
lods
es
pushf
dec
mov
mov
int3
shll
push
pushl
das
fsubs
in
das
cmpsb
xchg
int3
adc
sub
xor
xchg
mov
hlt
xchg
sti
lcall
xchg
adc
inc
and
pop
mov
or
int3
nop
and
aaa
cld
decl
and
ja
push
iret
lock
outsl
dec
sbb
push
jecxz
lcall
stos
mov
outsb
xchg
pop
test
mov
arpl
mov
or
bound
decl
out
js
stc
notb
mov
pop
pop
lcall
repnz
dec
mov
insl
out
or
lcall
jge
imul
adc
sar
inc
cs
jge
repnz
insl
push
out
sub
jg
pop
pop
clc
dec
xchg
shll
jg
dec
inc
jno
out
rcll
pop
clc
fdiv
orb
out
adc
pushf
mov
dec
push
fcompl
insl
mov
xchg
lods
cmpsl
adc
outsb
cmpsl
ljmp
cmpsb
scas
faddp
enter
shll
call
je
jnp
pop
and
xor
lea
xchg
in
aam
mov
in
repnz
push
aad
loop
call
jg
bound
mov
and
adc
call
movsb
xor
adc
outsb
fs
adc
insl
lahf
pop
push
mov
stos
and
orb
pop
fisubrs
add
lock
hlt
call
insb
cmpsb
sahf
adc
stos
inc
imul
dec
sub
call
mov
xchg
test
dec
rcrl
xor
jg
xchg
mov
loopne,pn
xchg
inc
or
jnp
inc
dec
scas
pop
int
sub
jo
inc
scas
xor
pop
incl
mov
mov
outsl
lcall
repnz
cwtl
ljmp
test
xor
push
sub
lcall
mov
jne
clc
mov
scas
sub
sahf
and
into
test
jae
call
loope
mov
lret
es
stos
xchg
ficomps
mov
xlat
hlt
add
fcomip
decl
mov
test
or
add
cmp
std
or
not
pop
bound
jo
cmp
loop
cmpsb
cmpsl
es
cmp
ds
lea
leave
push
inc
je
push
int
fldenv
inc
mov
inc
adc
ljmp
or
test
and
lods
and
aaa
cltd
pushl
ficompl
bound
ja
mov
ss
lret
leave
push
sbb
mov
pushl
xchg
fistpll
out
sub
cld
jle
sub
cmc
dec
mov
incb
pop
adcl
push
mov
rol
hlt
mov
nop
push
pushf
aas
and
sbb
xchg
pushl
aad
and
out
mov
xor
pushf
and
jg
mov
and
fldt
adc
xchg
fsubrs
je
or
inc
loop
mov
negb
mov
pusha
or
jp
adc
xor
fwait
inc
mov
mov
in
xor
in
ljmp
loopne
call
outsl
push
pop
push
cltd
xchg
lahf
dec
dec
or
jge
jo
dec
movl
push
call
push
jl
test
or
cld
jno
inc
cwtl
in
jnp
xor
incl
add
divl
scas
xor
cli
mov
jmp
jne
idiv
call
add
add
ja
shrb
pop
dec
call
and
lds
mov
loop
call
les
add
sub
clc
icebp
sub
push
lcall
xchg
dec
aam
sahf
sbb
stos
fidivrl
jno
outsl
in
shlb
jbe
bound
nop
popa
mov
ljmp
sar
int3
test
add
lock
clc
lcall
incl
add
jmp
gs
test
dec
jmp
test
movsl
aam
push
je
mov
pushl
sahf
je
and
mov
inc
call
mov
imul
adc
test
data16
jne
xchg
cltd
fcompl
cmp
xor
js
arpl
decl
stos
xor
mov
loope
or
inc
push
pop
add
cli
sti
roll
cli
sbb
push
test
lcall
ljmp
mov
mov
sbb
cmp
xchg
pop
sub
iret
mov
jns
mov
and
es
push
push
lods
xchg
add
xchg
push
push
mov
jne
dec
cmp
call
jnp
pop
jno
sub
xchg
mov
sar
mov
cmp
call
xchg
xor
and
iret
stos
dec
mov
jmp
psrlw
outsl
call
push
sahf
movsb
addr16
and
addr16
test
adc
ficoms
and
push
pushf
loop
shll
mov
fcmovne
test
in
es
mov
rolb
out
hlt
mov
cmp
jp
xchg
bound
test
sub
fisttps
test
pop
pop
call
xchg
xor
xor
adc
push
ja
daa
and
or
or
sbb
sbbl
incl
or
aaa
sbb
mov
cmpsb
insb
mov
add
fistpll
adcb
popa
aad
fisubs
scas
dec
rolb
dec
push
and
push
push
inc
or
inc
cmovl
push
xor
inc
mov
lret
addb
inc
dec
inc
mov
bound
mov
push
fsubp
ja
add
imul
or
ss
imul
add
add
and
mov
push
adc
pop
mov
push
jnp
add
dec
adc
in
andb
and
cmp
icebp
mov
inc
adc
jg
push
push
cmp
push
outsl
outsl
insb
push
push
jo
xor
jo
push
and
movsl
adc
fisubs
sbb
pop
mov
dec
jo
inc
push
shlb
je
mov
adc
mov
bound
jnp
push
push
js
stos
and
fists
pop
cwtl
and
divb
nop
mov
sub
addl
outsl
insl
insl
or
xchg
lock
pop
pop
push
push
dec
jb
jns
dec
stc
sub
inc
data16
and
jmp
notl
dec
sub
inc
imul
inc
insb
sbb
nop
cmp
inc
jns
push
xor
mov
shrl
dec
cmp
inc
ret
jae
inc
arpl
inc
mov
push
insl
push
dec
nop
sbb
insb
jo
icebp
pop
insb
push
push
pop
ds
insb
jne
or
inc
pop
or
data16
push
mov
rcrb
push
cmc
sbb
jo
inc
push
fildl
cmovae
mov
push
pop
jo
aaa
lds
out
popa
arpl
push
push
sarl
outsl
push
jns
cmp
jae
adc
push
push
push
mov
inc
jne
arpl
add
cs
das
cmp
cmp
in
jae
pop
mov
sub
xor
rcll
or
pop
or
dec
packuswb
inc
outsl
mov
pop
mov
jo
bound
mov
dec
inc
dec
sbb
frstor
pop
pop
jmp
jns
movsl
or
and
jbe
mov
and
ret
or
jo
inc
push
xor
push
or
enter
xchg
mul
inc
or
outsl
popw
push
dec
mov
dec
mov
inc
pop
push
pop
cmp
add
adc
ss
test
or
cmp
mov
in
test
push
jae
in
ljmp
mov
adc
or
fmuls
pop
push
mov
shl
jb
stos
or
mov
fs
arpl
lods
xor
push
push
cmpsl
push
je
ja
mov
push
pop
jg
pop
mov
ja
sub
cmp
and
inc
popa
es
mov
ret
popf
insb
sbb
xchg
xor
xor
pusha
push
and
dec
sbb
inc
xchg
rcl
or
adc
outsl
jns
int
rcrl
js
js
jmp
inc
adc
sbb
pop
jne
repz
adc
fisubrs
push
inc
nop
pusha
pop
outsl
inc
iret
sti
sub
inc
cmp
inc
sbb
push
mov
mov
and
cmp
insl
adc
xchg
sbb
stc
mov
add
fldt
xor
xchg
adc
jns
mov
nop
adc
stos
adc
cmp
add
roll
pop
cmp
test
xor
dec
outsb
stos
pusha
mov
or
andl
sbb
push
jne
inc
enter
dec
sbb
out
xor
or
inc
leave
add
inc
jae
xor
sbb
mov
jno
adc
dec
mov
daa
movl
fdivs
dec
mov
cmp
pop
mov
andl
rcll
xor
or
outsl
or
add
outsl
icebp
cs
push
mov
cmp
jp
inc
daa
jbe
imul
fisttpll
cmp
adc
psubsw
push
loop
insl
mov
xchg
push
fldl
and
xor
mov
mov
adc
test
sbb
jne
daa
aad
pop
pop
xchg
sarb
sub
arpl
push
inc
pop
jl
dec
add
inc
add
insl
cmp
jg
out
xlat
loop
dec
and
inc
mov
inc
mov
mov
xor
and
push
fadd
sbb
jns
and
sub
out
sbb
ret
and
fsubrs
mov
push
sbb
sub
adc
push
mov
outsb
fisttps
insb
cmp
lods
popa
fbld
adc
fs
fs
test
cmc
or
and
push
outsl
in
jbe
repnz
jb
and
or
inc
sub
jo
mov
push
inc
inc
inc
push
arpl
stos
sbb
imul
mov
or
sahf
fs
sbb
sbb
insb
mov
shl
fnstsw
punpckldq
inc
imul
mov
xchg
and
dec
jae
jno
bound
test
push
xchg
push
sub
inc
leave
jl
jne
push
pop
js
enter
and
dec
inc
cmp
sbb
pop
in
jle
lret
push
loopne
adc
dec
sar
xchg
or
and
lret
pushf
jge
dec
push
push
pop
xor
sarb
add
cmc
sub
inc
push
push
adc
sub
ja
push
fists
or
dec
outsb
dec
les
sub
xchg
dec
shl
mov
lcall
dec
add
lcall
mov
xchg
lcall
add
or
rcrl
adc
rorl
inc
push
add
adc
into
cmpsl
mov
mov
daa
and
mov
or
andl
jl
outsl
in
and
dec
movsb
bound
add
ret
rolb
jmp
inc
jb
push
jb
inc
jae
ss
idiv
leave
inc
shll
xor
movsb
xchg
imul
ficoml
inc
jo
sbb
jmp
cwtl
jns
sahf
and
rclb
push
bound
cmp
test
cmp
dec
cmp
sbb
pop
pop
lea
push
aaa
cmpb
and
dec
nop
cs
cmpsl
push
mov
addb
adc
pop
push
mov
mov
jo
mov
test
sbbl
xchg
xor
gs
and
jbe
add
xor
push
fsubrs
lods
movsl
ret
push
push
shll
push
sub
cmp
shl
std
and
mov
inc
and
fstl
insb
xchg
es
or
cs
lods
in
ret
popa
imul
jge
ja
adc
movsb
dec
xor
sub
les
jmp
and
or
add
mov
jg
sbb
shrb
sub
mov
sbb
cmp
lods
call
or
loope
addr16
insl
pop
push
dec
mov
cmp
test
and
push
mov
push
lret
dec
or
pop
insb
addb
xor
dec
inc
mov
daa
jbe
inc
cmp
lds
inc
shll
arpl
xor
sub
pop
or
jbe
fadd
or
xchg
icebp
andl
outsb
sub
inc
outsb
decl
mov
adcl
and
xchg
ret
mov
pop
enter
add
sub
ret
mov
add
pop
pop
mov
or
or
add
roll
je
js
data16
push
fs
outsb
sub
outsl
mov
lcall
aaa
mov
push
mov
push
lods
pop
fldt
mov
out
jg
jge
sub
add
xor
ret
sbb
dec
in
addr16
subb
out
std
lret
push
push
inc
out
adc
add
incl
inc
fs
sbb
adc
inc
mov
adc
data16
jnp
xchg
popa
ffreep
jo
add
pop
in
add
mov
jae
bound
ja
pop
jnp
dec
imul
dec
fld
inc
or
jl
or
add
insl
outsl
dec
or
or
sub
movsb
push
loopne
xchg
jge
fisttpll
inc
xor
pop
fcmovbe
push
cmp
add
out
and
cmp
rcrl
mov
add
adc
or
pop
mov
sbb
dec
js
pop
js
push
cwtl
cs
mov
cmp
xlat
add
and
jb,pn
mov
push
cmpsb
popa
lret
mull
out
dec
in
add
mov
inc
cs
lret
pop
cli
adcb
add
ja
fcmove
push
dec
rcrb
sbb
roll
dec
cmpsb
clc
add
or
jo
das
inc
loop
dec
xchg
add
add
xchg
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
inc
add
add
