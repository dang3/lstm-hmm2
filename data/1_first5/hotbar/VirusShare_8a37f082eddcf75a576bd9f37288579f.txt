fcomp
decl
or
add
mov
or
push
add
popf
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aam
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jge
mov
mov
sahf
mov
les
int
mov
mov
xor
push
push
es
fsub
subl
fisubrs
xchg
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
sbb
add
add
xchg
dec
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
lcall
add
and
rorl
cld
sti
or
shlb
add
inc
hlt
push
and
sbb
push
sbb
mov
adc
mov
loopne
inc
mov
add
and
inc
lock
mov
sub
lds
ss
mov
pop
outsb
loopne
ret
inc
pop
jb
fists
sbb
insl
fistpll
sub
push
fldt
xor
mov
add
mov
cmp
adc
add
out
lea
int3
pusha
push
mov
mov
enter
mov
fisubs
out
xor
sub
push
push
into
icebp
push
enter
dec
test
mov
mov
sarl
lcall
fdivrs
push
les
add
push
or
punpckhbw
mov
or
add
or
push
cmp
pop
cmpsl
mov
shll
add
mov
lcall
and
and
out
sbb
inc
aam
xor
push
daa
inc
and
lea
or
mov
dec
sub
ret
sbb
iret
dec
add
sbb
mov
push
sbb
pusha
sbb
stc
mov
cmpsl
and
dec
test
pop
int
pop
jo
pop
sub
pop
repnz
push
mov
and
mov
xlat
rcll
pop
mov
clc
pop
jge
mov
stos
pop
pop
lods
mov
pop
ret
xor
push
iret
repz
push
inc
push
dec
dec
push
sub
push
insb
loope
push
sub
cmp
add
and
sbb
jb
les
icebp
or
movsl
cmp
ljmp
test
clc
mov
sub
mov
and
adc
jl
or
scas
insb
add
inc
lret
xor
add
and
inc
xor
push
jne
shl
xor
pusha
push
repnz
inc
repnz
add
xchg
mov
test
xor
ljmp
pop
fiaddl
add
mov
dec
inc
psubsb
xchg
int3
push
add
call
inc
mov
inc
test
jecxz
pop
mov
or
enter
add
push
push
sbb
aas
jle
sub
movsb
sbb
inc
hlt
rorl
push
seto
mov
mov
xchg
cltd
push
push
jbe
xor
cmp
lds
and
add
xorl
mov
jns
stc
mov
or
or
nop
cmp
and
xor
push
mov
lock
ret
push
lea
int3
gs
or
add
movsb
fcomp
cltd
stos
jp
xchg
inc
xor
jge
cmpsb
add
push
xorb
push
jg
fbld
sti
mov
faddl
inc
rol
or
lea
and
andb
mov
pop
mov
scas
jbe
mov
lcall
inc
dec
in
addps
arpl
adc
sub
adc
inc
jne
fmull
fcomp
ret
inc
push
mov
xchg
push
es
push
jl
fiaddl
out
push
push
push
cmp
decb
dec
fisttpl
mov
pusha
sub
daa
mov
rolb
xchg
pop
or
or
add
or
and
xor
nop
and
movsb
scas
es
shll
pop
cmpsl
ljmp
rclb
push
sub
cmp
inc
or
aad
and
dec
scas
pop
punpckhbw
jne
mov
sbb
adc
inc
jne
push
jle
and
movsb
loopne
push
adc
adc
jne
cld
add
loop
push
or
out
mov
and
adc
push
subb
punpckhbw
and
dec
sbb
mov
mov
inc
test
sub
push
or
xor
bnd
sub
dec
add
ss
xchg
fimull
adc
fs
les
mov
cmp
cmpsl
push
sbb
and
push
inc
or
xor
sbb
std
fists
and
mov
push
fsub
add
push
sbb
and
fsub
inc
pop
jle
test
mov
push
jecxz
data16
mov
mov
jmp
icebp
sbb
push
jecxz
jecxz
int
inc
jle
mov
push
push
and
pop
push
and
adc
adc
es
and
mov
test
jno
jl
mov
add
push
mov
jl
aas
js
xor
mov
rclb
out
xor
push
lahf
into
mov
mov
rolb
in
push
mov
cmp
mov
adc
jno
js
shll
popf
cmp
xchg
lahf
inc
imul
fs
ds
or
movlhps
mov
sbb
data16
lock
cmp
dec
lock
mov
mov
rolb
test
xchg
or
jl
jmp
adc
ljmp
adc
push
adc
movsb
imul
sarb
mov
push
cmp
xchg
mov
jns
je
sbb
sbb
inc
mov
add
jns
mov
adc
loope
outsl
mov
push
pop
daa
add
adc
adc
das
push
addl
data16
div
out
mov
cmp
and
mov
mov
add
mov
add
sub
ret
aaa
push
lret
sbbl
push
out
fcmovnb
lea
sahf
je
adc
jl
aad
pop
inc
dec
push
sbb
lret
dec
mov
and
push
mov
add
mov
dec
push
jo
lods
mov
addl
jg
xchg
sbb
fmuls
outsl
mov
and
punpckldq
push
nop
mov
pop
jb
orl
orl
push
stos
and
int3
or
pop
mov
push
das
cmpsl
mov
cmpb
lods
in
stos
sbb
sbb
test
leave
cmp
or
pop
and
sbb
adc
jle
xchg
mov
dec
addr16
lock
xor
and
insb
xor
rcrb
push
lret
aam
cli
cmp
je
sub
cmp
je
or
std
jmp
sub
rorl
and
mov
add
mov
test
mov
shl
inc
mov
pusha
gs
mov
popa
add
add
lcall
sbb
sbb
push
mov
stos
aas
push
push
push
pop
cld
incl
call
xor
adc
call
inc
cmp
jl
or
add
ret
fadds
pop
push
push
js
xchg
jne
cmp
xor
sub
jbe
pushf
push
xor
pop
pusha
aas
push
mov
push
pop
mov
mov
push
fs
dec
sbb
daa
add
inc
ds
and
adcl
test
push
or
icebp
push
add
push
mov
and
jle
pop
popa
fbld
and
jne
movzwl
mov
cmpsl
int3
xchg
je
push
ljmp
jl
and
jmp
mov
lea
mov
lea
mov
inc
test
jne
sub
push
push
inc
sbb
adc
adcb
jno
lock
xchg
cltd
cmp
push
or
fists
js
mov
fs
add
stc
insb
jne
adc
or
jcxz
pop
dec
es
lea
pop
mov
sbb
cmp
ret
in
idivb
xor
mov
cmp
cmp
icebp
jo
jl
xor
jne
pop
insb
pop
pop
ret
mov
jbe
mov
push
mov
jl
rcrl
int3
arpl
push
insl
loopne
push
push
lcall
loopne
shll
clc
cmp
or
jle
jo
adc
lea
adc
pop
cmp
add
orb
push
test
jg
or
mov
sub
test
jge
push
call
fcmovnb
inc
push
test
pop
nop
lahf
mov
iret
mov
sti
jle
mov
mov
cmp
pop
insb
mov
clc
mov
lea
push
or
cmp
loopne
mov
add
mov
ja
add
pop
shr
jmp
insb
fcoml
add
push
hlt
in
ret
fists
sub
cwtl
jl
inc
jo
jg
mov
and
or
movb
pop
pop
pop
pop
ret
pop
clc
and
icebp
mov
enter
jbe
mov
jle
je
cmpl
insb
jge
sub
add
fisttpl
movl
or
or
orb
pop
jb
xchg
rcll
mov
out
push
clc
or
add
jp
adc
movsb
clc
sbb
lret
pop
movsb
push
cs
into
push
and
fldenv
mov
rcrl
sahf
or
jne
in
pop
sbb
test
jg
loope
xchg
push
push
cld
mov
or
pop
ret
rolb
std
ja
jbe
sbb
cmp
dec
fnclex
jmp
xor
push
mov
ret
sbb
push
test
repz
jg
cmp
dec
jmp
imul
add
ja
adc
filds
mov
shl
hlt
pop
add
push
inc
sbb
mov
push
pop
push
push
lea
sbb
pop
addl
shll
out
aaa
or
or
js
dec
sub
movsb
ret
adc
adc
pop
push
cmp
aas
sub
cwtl
loop
add
or
rcl
rolb
daa
test
icebp
mov
stos
scas
add
mov
pop
xlat
add
jle
add
testb
or
sbb
pop
sar
rol
call
out
adc
je
cmpl
inc
outsl
jg
lea
jl
mov
push
jne
push
lret
call
mov
test
push
sub
cmpb
das
and
push
fists
push
push
jge
sbb
incl
adc
mov
inc
cwtl
pushf
loope
xor
stos
loope
adc
or
add
dec
daa
shll
xchg
roll
fists
and
xlat
or
inc
inc
or
shlb
push
and
in
inc
ret
aas
pop
inc
ret
adc
cmc
inc
pushf
sub
sarb
ss
adc
adc
push
popa
sbbl
sbb
jmp
pop
push
push
or
cwtl
sbb
gs
push
mov
mov
mov
adc
xchg
mov
mov
int3
lods
aaa
mov
rcll
clc
jb
cmp
inc
das
rcr
hlt
jmp
inc
add
adc
mov
in
adc
mov
lea
add
push
sbb
and
sub
fiaddl
add
lock
add
repnz
orb
out
mov
jle
mov
jmp
fldl
add
cmp
add
aam
add
shlb
ret
and
adc
pusha
pop
mov
dec
scas
adc
push
mov
nopl
ret
mov
enter
dec
adc
mov
decb
add
inc
push
add
ret
push
or
mov
pop
scas
pop
inc
insb
mov
push
or
xchg
test
inc
jle
mov
test
push
mov
or
push
sub
ds
ss
push
hlt
cmp
cli
lret
and
xor
shl
xorl
stc
rorl
add
add
cmp
rorl
and
mov
sub
movsb
jb
xor
cs
push
shl
mov
sub
push
add
and
sub
adc
or
push
adc
fisubs
dec
pop
pop
push
or
and
test
mov
inc
pop
lock
jge
jp
inc
pop
pop
push
xor
push
cmc
dec
mov
push
lahf
mov
popa
cmpsb
fldl2t
aas
inc
cmp
jb
mov
pmaxub
add
sub
pop
pop
pop
mov
cmpsl
negl
dec
xor
test
dec
xor
cmp
or
insl
sub
addps
jge
lods
in
adc
adc
xor
incb
pop
pop
fistpll
fldl
data16
mov
mov
adc
inc
adc
cmp
push
adc
adc
cmp
test
and
or
xor
ljmp
es
jae
cmp
ror
negb
push
ret
mov
pop
pop
stc
int3
mov
pop
repz
mov
mov
push
sbb
pop
and
sbb
add
das
stos
mov
enter
loopne
sti
jne
xor
push
push
dec
pop
outsb
or
sbb
repnz
clc
jbe
push
lea
add
ret
pop
inc
icebp
repz
test
push
mov
push
test
in
mov
or
add
jmp
xchg
aas
inc
adc
pop
das
test
push
mov
jg
aas
sbb
inc
mov
sbb
and
and
lahf
imul
sbb
pop
sbb
ret
sbbb
add
mov
or
sub
into
push
adc
push
jns
or
loope
rolb
hlt
je
pop
mov
or
mov
cmp
loop
push
dec
aad
les
je
or
fildll
sbb
test
xor
push
push
add
hlt
shrb
ret
xor
mov
pop
jbe
push
adc
jl
repnz
sbb
adc
ret
cmpl
sti
jne
or
jle
lock
or
filds
imul
sar
mov
shr
add
jne
and
insb
mov
sarb
rcr
jle
repz
fdivrs
out
jecxz
and
and
mov
or
jg
jl
adc
je
orl
fisttpll
pop
cmp
adc
lods
xchg
jne
popf
jbe
pushf
xchg
mov
xchg
mov
movb
mov
pop
adc
or
movsb
jge
pop
inc
dec
adc
outsl
rorb
lahf
add
repnz
std
xchg
jmp
dec
divl
shll
shrl
rorb
std
jnp
xchg
pop
pop
push
mov
sub
mov
or
pushf
push
fstps
leave
and
mov
loop
cmp
shrb
fldt
fbstp
iret
pusha
rorb
jp
lods
iret
insl
cmpsb
jg
push
lea
adc
dec
xor
mov
shll
push
cmpb
cltd
jge
xchg
xor
out
fldt
mov
xchg
pop
repnz
in
dec
cmp
push
mov
div
out
movl
xchg
lret
dec
inc
push
sbb
sbb
mov
xor
xor
je
xor
insl
clc
pop
stc
jne
scas
dec
sbb
in
fnstenv
repz
mov
inc
cmp
test
add
inc
mov
add
popf
mov
sbb
sbb
pop
and
cmp
fmull
loopne
adcb
movsb
fstl
loope
fdivl
sub
sahf
in
sahf
cmpsl
call
hlt
clc
adc
jns
jae
add
adc
or
fisubs
add
sub
pop
mov
inc
outsb
dec
dec
mov
dec
std
push
cld
pop
push
lea
push
ficoml
add
push
lea
jle
xlat
dec
cmp
push
inc
repnz
dec
aam
lret
enter
pop
sahf
and
insb
jb
nop
test
sbb
push
mov
aad
cmp
sub
in
sbbb
push
je
aas
push
in
add
jle
add
fiaddl
popf
lret
stos
inc
cld
xchg
ficoml
xchg
fists
test
mov
sub
xchg
add
push
push
aas
insl
adc
push
jle
ficompl
add
pushf
fldenv
ret
xor
xchg
iret
sbb
jge
or
jle
xor
or
add
mov
or
push
pop
push
and
jbe
add
sub
push
outsb
fadds
sub
mov
in
imul
mov
out
sbb
xchg
enter
shll
mov
js
cmp
sbb
out
sub
mov
dec
sub
dec
lods
inc
or
loopne
mov
test
incl
push
setne
push
mov
push
add
pop
xchg
push
mov
rcrb
in
movsb
sub
inc
rcpps
add
cwtl
sar
mov
je
lea
add
add
add
xchg
iret
or
push
mov
mov
sahf
inc
std
or
pop
mov
pop
cmp
in
sbb
cmpl
xor
ret
sbb
adc
adc
test
je
xor
mov
sub
ret
push
push
fiadds
push
lea
je
adc
cmp
inc
clc
out
out
clc
push
push
mov
mov
insb
push
dec
dec
mov
push
push
xor
mov
dec
sbbb
sub
push
ret
add
lods
jns
adc
mov
xor
dec
sub
and
jmp
mov
add
sahf
inc
add
mov
add
into
cmp
ljmp
adc
xor
and
xor
push
inc
gs
push
push
jbe
fadd
ret
outsl
icebp
jbe
cwtl
push
sbb
push
adc
out
sahf
push
xor
cmp
inc
push
cmp
jp
mov
push
lahf
stos
fwait
loop
mov
fistpll
adc
mov
mov
and
xchg
pop
ret
mov
neg
sbb
ret
jae
fsts
cld
call
pusha
adc
add
mov
subl
addb
adc
lods
loope
xor
push
fnstsw
push
shlb
sub
add
test
addb
mov
in
jle
adc
repz
out
mov
mov
lock
lret
push
sbb
pushf
xor
fisubrs
cmpsl
adc
push
scas
call
lock
or
jo
inc
mov
jl
fists
sbb
mov
cwtl
add
push
mov
jmp
lret
xor
push
push
push
and
push
add
sbb
cs
jo
lret
enter
push
mov
inc
popf
ret
loop
and
das
int3
mov
loopne
mov
or
mov
mov
push
inc
clc
add
pusha
jne
addl
dec
inc
sbbl
call
lea
data16
in
jg
jmp
pop
or
incl
xchg
cwtl
jo
in
push
pop
cmpsl
adc
rolb
jno
sbb
enter
mov
inc
mov
push
jp
lock
inc
xchg
add
sub
mov
fxtract
or
clc
ds
adc
jmp
scas
xor
xlat
ret
jg
add
push
xchg
mov
add
clc
inc
and
jne
jl
inc
sub
mov
inc
and
clc
push
xchg
mov
sub
lea
push
jb
pop
xchg
push
fstpl
pusha
movb
mov
fwait
imul
jl
push
mov
sub
in
rorb
enter
add
bound
and
cmc
mov
sub
jnp
sbb
ficoms
outsl
movb
mov
cmc
fldcw
push
dec
sbb
dec
lret
mov
push
sub
addb
fmul
js
inc
inc
lahf
push
rorb
xor
pop
push
pusha
jbe
sarb
or
add
and
dec
push
das
lock
mov
nop
cmp
sub
push
push
lea
ficoms
mov
mov
jp
xor
add
sub
push
dec
sub
or
js
jmp
repz
rorb
addl
or
push
test
push
mov
push
je
cmp
mov
pop
mov
inc
xor
mov
dec
add
dec
xor
add
or
loop
test
call
mov
movsl
mov
and
jns
popf
stos
push
push
and
jo
push
sbb
xor
adc
jbe
ja
mov
bound
adc
or
mov
faddl
push
push
jb
aas
inc
sarb
int3
xor
imul
pusha
fmull
sub
mov
push
xchg
mov
outsl
inc
in
dec
cltd
and
lods
push
jb
es
push
andb
movsb
inc
cmpsb
loopne
lock
and
es
ret
cmpsb
jecxz
add
add
mov
ds
push
sbb
and
xchg
push
lds
pop
add
push
inc
test
adc
test
ret
push
frstor
mov
or
dec
inc
push
gs
add
push
mov
scas
add
js
andb
scas
inc
cmp
lock
cmpsb
loope
sbb
cmp
push
es
jo
es
push
rsqrtps
loope
add
cmpb
jno
test
and
adc
adc
stos
adc
fs
inc
xor
pusha
fadds
mulb
addb
push
xchg
sbb
push
lds
pop
inc
addl
cs
cld
iret
mov
jge
add
je
jmp
out
dec
mov
jge
xchg
lock
push
stos
sbb
sub
sub
rcrl
adcl
test
fldcw
dec
inc
cmp
dec
push
mov
jns
mov
push
icebp
dec
or
stos
xchg
add
push
add
add
iret
add
loopne
adc
fdivl
outsb
mov
mov
js
add
int
dec
dec
sbb
je
mov
int3
int3
dec
push
daa
loope
aam
push
lods
xchg
push
xor
rcll
mov
cmp
add
mov
loopne
inc
add
lock
inc
push
sbb
mov
nop
pop
inc
add
dec
loop
cltd
or
xor
push
pop
out
add
enter
mov
shlb
push
and
mov
pusha
mov
sbbl
test
jp
pop
shll
rclb
cmp
cmp
add
cltd
and
movl
or
fldenv
fstl
adc
jl
dec
add
sub
xlat
adc
add
mov
jo
jge
mov
dec
bound
imul
sar
mov
loopne
ljmp
aad
rclb
repnz
push
lahf
jle
mov
jle
push
pushf
nop
imul
scas
and
fucomi
enter
sahf
cmc
sub
mov
stc
add
sbb
mov
push
enter
mov
jo
cld
cmp
je
cmpl
rorb
cmp
jne
push
sbb
push
adc
mov
inc
jle
adc
ret
mov
fcoms
pop
jmp
mov
es
lea
or
int
ror
popf
sbb
lds
lods
xor
inc
dec
xor
and
lcall
push
dec
lods
sub
adc
inc
add
je
and
inc
roll
hlt
pop
hlt
or
out
data16
push
ljmp
jo
fisubrl
int3
sbb
inc
test
je
test
jl
out
lods
push
call
je
add
push
ds
sub
cmp
fstp
sub
sbb
loope
jmp
xor
push
test
std
push
xlat
imul
adc
test
or
jbe
in
push
jbe
add
xchg
cmp
xchg
sbb
and
or
inc
in
add
popf
imul
pop
lea
cmp
or
out
lods
mov
lahf
or
jmp
mov
rcll
pop
fistl
nop
mov
faddl
xor
sub
xor
mov
fdivrp
shll
mov
test
shr
inc
pushf
sbb
mov
mov
mov
ja
dec
jno
add
push
fcoms
jmp
add
pop
mov
rorb
out
fidivl
or
xor
mov
add
inc
fcomps
sub
cmp
movb
cwtl
js
push
jge
ret
cltd
push
cli
enter
push
mov
jbe
test
les
hlt
sbb
into
or
insb
xchg
mov
dec
or
pop
call
xchg
idivb
movb
lret
xor
je
mov
xchg
xchg
jo
aam
mov
inc
insl
pop
xchg
pop
mov
daa
outsb
add
dec
adcl
movsl
jno
xchg
push
repz
imul
sarb
jl
jp
lcall
lret
and
je
icebp
add
xchg
mov
xlat
or
inc
in
les
lods
inc
out
inc
outsl
loopne
addr16
ss
jmp
jecxz
leave
jae
add
pop
add
or
sbb
es
imul
sbb
xor
or
pop
inc
jne
or
stc
mov
sub
dec
and
mov
mov
outsb
mov
add
push
loop
mov
pop
cmpb
or
push
rcll
test
stos
jmp
notb
xchg
test
mov
mov
ret
push
add
push
inc
mov
jae
inc
jg
and
leave
or
push
jle
fwait
cmpsb
jo
fstpl
inc
rolb
fnstenv
movl
sahf
adc
orl
push
push
ja
xchg
pop
xorl
orl
and
cld
lock
fs
les
mov
adc
lea
pop
add
or
ficomps
push
sbb
jo
rorb
push
dec
mov
sbb
mov
or
adc
cltd
inc
push
pop
test
and
clc
je
push
push
cmp
movsl
inc
cs
decb
lahf
or
sbb
dec
scas
or
xor
or
imul
and
les
sub
clc
setb
insb
push
pop
mov
enter
setae
lcall
repz
mov
js
lret
cmp
data16
jle
mov
pop
pop
hlt
inc
or
xchg
inc
jb
lock
pop
push
add
js
push
movsl
inc
push
aam
lea
push
call
push
aad
push
dec
mov
es
pop
pop
adc
mov
and
jecxz
insb
jecxz
xor
xchg
stos
mov
xor
push
pop
cmp
inc
sbb
dec
inc
push
push
fmuls
mov
aam
mov
xor
popf
and
add
rcr
lds
ss
jb
or
push
inc
push
push
icebp
add
xchg
push
add
inc
or
dec
pop
add
mov
pop
repnz
inc
stos
iret
call
jge
cmp
jns
scas
push
pop
rorl
adc
jle
mov
cmp
ja
movzbl
enter
dec
movsl
pop
push
dec
jno
xlat
and
inc
mov
dec
ss
repz
add
add
adc
pop
cmp
sub
add
dec
mov
push
adc
lahf
mov
mov
mov
in
ret
ds
inc
and
sub
inc
xor
push
bound
push
sub
movl
test
enter
pusha
jmp
das
sbb
inc
sub
cmp
sbb
scas
and
adc
lret
mov
cltd
sahf
imul
and
add
push
jge
add
bound
mov
mov
jae
sub
pop
orl
mov
das
and
pop
and
cli
xor
add
out
orb
insb
or
sub
xor
arpl
mov
jl
xchg
jne
sub
pop
mov
sbb
jmp
pushf
ljmp
or
dec
cmpb
sub
dec
mov
dec
mov
sbb
dec
xchg
jl
push
jne
stos
les
mov
mov
jmp
sahf
out
mov
frstor
pop
and
push
pop
inc
push
and
jmpw
int
cmpsl
mov
mov
add
sub
mov
push
mov
pop
ret
aaa
ret
lds
xor
ljmp
nop
and
leave
imull
mov
jo
shrl
and
xchg
repnz
jbe
test
sub
xor
lea
push
or
mov
movsb
andl
hlt
inc
pop
fiaddl
xchg
mov
xlat
or
dec
sahf
pop
in
stc
subb
xchg
push
or
or
add
insl
cmp
jmp
push
dec
mov
aaa
es
push
clc
test
inc
pop
jb
or
cwtl
sub
mov
push
arpl
inc
adcb
sbb
sbb
imul
daa
mov
xor
jo
and
lea
inc
or
loope
xchg
push
push
xchg
ljmp
push
adcb
and
lcall
sub
push
or
in
cmp
lea
sub
cmp
add
std
cmpsb
add
add
add
fcmovne
or
int
jl
and
outsl
or
add
lods
jl
adc
and
add
or
push
xor
leave
or
xchg
add
xchg
leave
lret
lret
add
mov
cmp
and
inc
xchg
or
jne
adc
mov
cs
jne
push
gs
and
cltd
fs
pop
call
mov
fcomps
and
jno
adc
lods
xchg
or
fiadds
clc
or
add
push
mov
inc
inc
popf
cmp
clc
rcrl
cmpsb
ret
mov
add
mov
loop
imul
je
data16
ss
es
cmp
out
pop
movl
jne
ss
rcrb
push
rcl
push
push
add
dec
mov
or
mov
pop
sub
pop
lds
insl
repnz
add
push
cmc
mov
adc
and
adc
std
pop
xor
scas
lds
push
mov
xor
dec
jge
out
jo
dec
pop
inc
adc
pop
pop
sub
int3
push
sbb
jmp
push
adc
cmp
dec
adc
add
mov
and
push
sbb
adc
jae
imul
lahf
sub
adc
adc
pop
shll
lock
mov
dec
sbb
insl
sub
mov
pop
sbb
push
adc
mov
xchg
inc
imul
push
xchg
xor
loope
je
xchg
adc
adc
mov
xor
aaa
and
enter
mov
cmp
ret
test
in
pop
flds
adc
adc
push
jmp
adc
les
adc
test
sbb
test
aad
jle
bound
outsl
jecxz,pt
int3
add
push
push
out
mov
pop
cmp
daa
imull
sarl
into
nop
push
push
stos
adc
std
stc
cmp
adc
xchg
dec
mov
and
jmp
push
sub
sub
inc
jmp
das
push
mov
push
into
movl
or
pop
lods
jge
jne
dec
cmp
mov
imul
push
sbb
jl
inc
sbb
xchg
pop
mov
adc
adc
ljmp
xchg
sub
fldenv
jb
movsl
pop
and
fs
or
add
inc
jg,pt
push
push
push
xor
and
add
nop
divps
add
js
mov
pop
jne
das
pop
push
pop
jns
cmp
sub
push
enter
jg
sbb
mov
adc
dec
test
jne
adc
stos
dec
sbb
leave
in
out
add
mov
outsl
roll
fstl
mov
push
cltd
rorb
out
fmull
mov
jns
ljmp
sbb
les
dec
pushf
sbb
ss
push
fwait
xor
rorb
xchg
push
jle
jbe
cmp
adc
shlb
adc
sbb
mov
movsb
dec
and
sbb
mov
add
mov
enter
jmp
and
pop
adc
and
xchg
mov
push
pop
sbb
faddl
and
dec
adc
add
aaa
in
jbe
cmp
clc
lea
jo
xor
mov
popl
push
and
cmp
or
pop
jne
xlat
pop
pop
test
add
cmp
in
mov
adc
xchg
lods
pop
out
pop
inc
loopne
adc
data16
add
adc
bound
lods
adc
sbb
adc
and
inc
and
jmp
xor
adc
and
out
loopne
bound
dec
and
inc
icebp
mov
dec
filds
mov
jmp
pop
sbb
sub
lcall
lret
and
inc
push
inc
xor
pushf
inc
pop
ljmp
mov
mov
xor
xchg
hlt
mov
unpckhps
std
fists
push
pop
enter
push
pop
sub
jmp
cmp
xchg
add
in
mov
jbe
mov
fbstp
sub
xchg
test
push
push
cmp
sub
add
or
mov
push
sti
and
inc
loope
mov
inc
and
inc
and
mov
mov
sub
in
dec
pop
rolb
sbb
sbb
sub
sbb
inc
dec
and
in
push
add
inc
in
and
mov
push
fwait
pop
pop
adc
shlb
dec
jl
push
xorl
fldenv
pop
sbb
fwait
add
xor
push
fnsave
in
cmp
std
add
xor
push
or
push
nop
push
ds
push
and
and
cs
inc
ds
inc
add
pop
leave
sbb
pop
add
push
adc
ss
sub
sbb
cwtl
jnp
push
pop
cmpsb
pop
ljmp
dec
mov
stos
mov
inc
push
inc
sub
push
and
sbb
inc
cld
or
push
and
mov
test
cmpsl
push
das
dec
push
dec
sub
pop
mov
jns
sub
cld
fidivl
pop
xchg
sub
jl
lea
jnp
dec
in
mov
xchg
xor
inc
test
shlb
xchg
movsl
lock
xor
xchg
xor
popa
les
call
inc
cmp
dec
scas
mov
pop
inc
mov
loopne
push
push
test
push
sub
or
or
add
mov
sbb
int
bndstx
leave
into
mov
loope
fbstp
leave
or
sub
pushf
jmp
push
sbb
push
lds
push
or
movsb
das
mov
or
jne
movl
daa
int
and
inc
jb
stos
cmp
nop
mov
sub
and
cmp
xor
and
jb
sbb
call
or
or
pop
add
mov
pop
mov
pop
sarb
test
lret
sub
or
rorb
test
daa
mov
jg
sti
sbbb
inc
movb
adc
xor
in
jecxz
cli
mov
sti
fs
pop
loopne
adc
call
add
ss
mov
mov
out
sarl
and
imul
and
add
cmpsb
dec
or
add
add
enter
sub
cld
ss
jnp
push
mov
outsl
add
dec
ljmp
xchg
stos
jl
inc
xor
jno
dec
loopne
ljmp
add
jmp
xchg
pop
inc
push
je
ret
pushf
pop
and
and
lock
or
jne
xchg
push
lcall
add
mov
fs
jae
jo
or
push
clc
mov
sub
pop
in
jns
sbb
mov
mov
push
jp
stc
fldcw
inc
dec
sbb
adcb
stos
push
fwait
outsl
stos
xor
dec
add
out
mov
jle
fmull
mov
mov
and
inc
or
call
mov
ret
stc
ss
incl
mov
dec
mov
ffree
mov
push
dec
adc
popf
or
push
push
or
push
mov
je,pn
or
les
inc
xor
jge
into
pop
sahf
and
imul
mov
in
and
fisttps
ret
add
and
jecxz
or
flds
dec
lock
lock
or
push
mov
pop
or
ret
lret
fld
jo
jns
and
in
mov
push
mov
or
nop
sbb
outsb
mov
ret
ret
dec
pop
push
sub
test
dec
xor
lods
adc
gs
test
pusha
gs
or
dec
mov
mov
sub
xchg
mov
roll
and
add
inc
push
outsb
das
mov
cmpsb
cltd
xorb
sbb
mov
pushf
mov
movsb
pop
and
jg
in
cmpsb
or
xchg
repz
push
movsb
push
push
push
mov
jl
lea
push
cmp
sbb
movsl
lret
or
enter
xor
xor
pop
dec
adc
sbb
in
adc
dec
out
inc
ss
mov
lcall
and
sbb
imul
or
cmp
popa
push
nop
or
sbb
and
in
cmpsb
stos
and
jo
cmpsb
cltd
mov
adc
lret
orl
cmpsl
addl
inc
es
add
adc
adc
and
pop
test
jns
xor
cmp
js
push
adc
sub
add
mov
pop
test
and
mov
stc
add
pop
add
mov
cmp
adc
xchg
addr16
push
dec
inc
lcall
popa
adc
daa
sti
aas
jno
and
or
dec
es
adc
add
sbb
daa
xchg
test
inc
push
rorb
and
pushf
mov
mov
push
subl
mov
out
in
dec
or
enter
daa
pop
cmp
cmp
jns
pusha
adc
sbb
or
movsb
push
in
or
in
cwtl
push
imul
rcr
sbb
lea
mov
inc
ds
adc
sub
mov
push
jbe
mov
adc
jno
adc
movsl
les
nop
xchg
mov
or
push
xor
sahf
mov
sub
pusha
shrl
cmp
push
test
movsbl
lea
aas
mov
jo
cmp
sub
orl
out
insl
cltd
mov
mov
or
or
jmp
insl
add
rolb
pop
cmp
adc
mov
dec
jae
or
ret
psubsw
outsl
mov
dec
enter
or
cmp
or
cmp
adc
cwtl
int3
push
pop
mov
rcrl
std
inc
dec
pusha
sbb
adc
andnps
inc
dec
fs
in
mov
pop
add
pop
inc
add
xor
sbb
cmp
in
insl
xor
cmp
stos
fs
sbb
pop
add
sub
mov
and
rolb
sub
mov
jb
cmpsb
push
sub
sub
add
cmpb
mov
or
push
pushl
popf
divps
xchg
fldl
xchg
mov
fistpl
insb
adc
iret
frstor
scas
stos
outsb
xor
lea
and
call
jge
mov
adc
push
stos
cmp
and
jle
dec
std
call
dec
clc
and
or
jge
push
lock
jl
and
hlt
popf
insb
xor
jnp
into
mov
sahf
pop
and
jle
jg
push
sbb
cwtl
push
pop
mov
adc
dec
outsb
jl
daa
orb
sub
jne
dec
mov
test
aas
pop
xor
lea
mov
jmp
mov
lea
inc
dec
mov
int
fucomi
pop
int3
add
dec
int
inc
cs
mov
insb
push
mov
mov
add
and
xlat
push
push
cmp
xor
and
adc
cmpsb
inc
push
jno
push
jl
pop
js
jle
jb
inc
add
dec
in
lcall
clc
xlat
cmp
nop
add
push
cmp
sub
xchg
dec
sbb
jbe
add
call
out
mov
sub
mov
mov
sub
mov
xor
and
and
sub
mulb
push
mov
das
or
shlb
ret
leave
inc
add
mov
int3
dec
add
js
repnz
and
mov
aad
adc
sub
dec
push
rol
movsb
pop
mov
mov
push
test
jo
jecxz
ss
cmp
adc
add
sbb
out
test
jno
dec
and
orb
jnp
test
pop
lock
pushf
inc
jl
sbb
lret
out
in
test
or
pusha
or
inc
sahf
in
shl
or
add
mov
mov
js
je
cmp
test
movl
inc
push
test
or
mov
test
aam
push
xchg
xlat
jecxz,pn
inc
sub
add
xorl
decb
cmp
jle
mov
and
xor
push
xor
push
das
inc
and
xchg
test
adc
add
lcall
rorl
int
adc
jae
xchg
shrb
outsb
add
inc
rorl
dec
inc
sub
shrb
cmp
pop
andb
push
stos
ret
inc
xchg
int
mov
inc
pusha
pop
ret
in
sbb
and
adc
adc
pop
jno
mov
jle
aas
js
lcall
dec
mov
cld
lea
sub
cld
xchg
out
fs
dec
jo
sbb
shrb
pop
fimuls
mov
mov
imul
mov
popa
movb
adc
clc
mov
aad
adcb
aad
sub
add
xor
cmp
jp
pop
inc
pop
sbb
in
jo
pop
mov
and
rorb
lds
loopne
cmp
cli
push
add
loope
les
push
pop
xor
inc
stos
add
fisttpl
sbb
jne
das
setle
cltd
push
adc
mov
xor
push
rorb
lahf
add
inc
repnz
enter
sub
fiaddl
out
lods
add
inc
pop
xor
or
inc
adc
xor
inc
mov
sbb
rcr
and
lods
orl
jmp
dec
out
dec
add
sbb
cmp
push
xchg
pop
mov
mov
cmp
push
sahf
fmull
adc
adc
add
ret
je
mov
ret
xchg
scas
fcmovb
aas
push
aas
push
push
xor
mov
lcall
cmp
test
mov
jl
aam
and
popa
xchg
jmp
rorl
inc
add
push
mov
adc
dec
hlt
dec
push
push
push
insl
jae
sub
and
and
test
inc
pop
xchg
mov
push
jmp
mov
insl
lods
fdivs
inc
clc
sbb
jne
xchg
inc
add
jns
js
loope
icebp
and
xchg
ret
mov
mov
mov
cmpsl
dec
cmp
sbb
adc
push
xchg
ss
js
mov
jo
sub
add
and
adc
movzbl
test
fcompl
clc
dec
push
cmp
popa
sub
push
add
roll
mov
subl
ffreep
fistpll
add
or
pop
loopne
pop
xchg
stos
in
inc
popf
push
test
dec
push
push
or
lock
pop
int3
ret
xchg
sub
rorl
cmp
lea
ljmp
jg
mov
push
or
dec
aam
push
xor
and
and
out
mov
pop
or
pop
pusha
sub
or
outsb
inc
add
pop
int
loope
push
cmp
inc
mov
adc
out
dec
and
sub
repz
pop
and
or
inc
insb
sbb
sbb
add
popf
shrb
sbb
pop
sub
lock
cmpsl
sub
stc
and
xor
lock
movsl
inc
jle
jl
sub
fcoms
sub
cs
xchg
and
pop
jecxz
hlt
and
cmp
pop
ror
mov
je
cmp
lahf
mov
add
and
ret
scas
test
enter
adc
xchg
jno,pn
pop
add
adc
mov
inc
inc
mov
dec
shlb
daa
ret
popa
mov
ret
jle
sbb
pop
popa
adc
xchg
sbbl
or
and
push
sbb
jno
dec
aaa
push
and
add
repnz
test
sbb
cmp
adc
inc
inc
sub
stos
call
or
and
popa
cwtl
popa
sbb
scas
fstpl
cmpsl
and
dec
push
xor
ss
jb
mov
ret
insb
cmpsb
xor
mov
stc
loopne
push
cld
inc
push
push
icebp
mov
and
sbb
jge
mov
leave
xchg
add
lea
mov
and
adc
adc
test
inc
test
mov
push
mov
or
data16
pop
inc
outsl
or
dec
push
leave
sbb
sbb
inc
dec
scas
bound
dec
or
lea
dec
out
psadbw
mov
mov
loope
fcoml
lock
dec
add
lods
es
fnstsw
call
test
xor
mov
sbb
push
add
dec
stc
mov
bnd
xor
xchg
aam
xchg
pop
push
dec
lret
push
mov
adc
cmp
mov
mov
rcll
xor
sub
je
mov
cmpsb
mov
xor
mov
add
rol
popa
jle
and
dec
adc
or
ror
cmp
dec
push
ja
add
sub
sub
movsl
inc
inc
hlt
cmp
jne
sbb
pushf
call
inc
jp
ja
cmp
mov
sub
push
movsl
xor
dec
ret
inc
ror
adc
aaa
mov
in
sbb
testl
cmp
lock
test
adc
xchg
mov
push
leave
cwtl
sbb
pop
leave
loop
jae
mov
jmp
outsb
add
or
lea
jge
push
loope
movsb
sbb
mov
or
pop
insb
lods
push
sar
push
add
repnz
push
inc
sub
dec
lahf
pop
fidivrs
sub
pop
xor
pushl
xchg
ficoms
mov
pop
cmp
sbb
into
xchg
or
test
add
jl
bsr
jb
xchg
ss
lods
xchg
mov
xor
sbb
lds
and
or
mov
and
cwtl
pop
dec
cs
int
jb
inc
sbb
lds
adc
pop
rcr
sbb
aam
sar
lret
pop
insb
and
test
hlt
cmpsb
xor
je
cmpb
pop
mov
add
cmp
push
lods
clc
sbb
add
icebp
push
xchg
add
mov
sub
dec
sub
stc
jnp
pop
loopne
xorb
lret
lret
add
rol
ja
push
mov
xchg
lods
cld
addr16
loopne
pop
pop
mov
dec
hlt
jge
jae
cmp
or
inc
inc
xchg
dec
and
xchg
xchg
cld
push
dec
mov
ret
movl
popf
aaa
pop
es
das
jno
enter
inc
fsubrs
push
es
popa
adc
or
jmp
in
adc
sahf
jl
mov
push
jg
push
add
push
mov
add
push
ret
enter
push
aam
push
bound
orl
dec
add
mov
call
push
jo
push
icebp
adcl
hlt
sub
push
test
push
mov
mov
ret
push
test
fisttpl
jo
dec
lods
loope
sub
out
outsl
subl
repnz
stos
lods
imul
and
hlt
push
adc
dec
repz
xchg
pop
or
dec
push
adc
ret
jg
cmp
cs
rcrl
adc
dec
mov
lods
add
pusha
adc
cmp
jl
lds
stos
andl
test
push
scas
outsb
mov
addr16
push
and
jle
fists
jg
mov
ret
aas
xor
add
cmp
cwtl
loopne
inc
cmpb
mov
push
jns
xor
lret
push
push
jp
lahf
das
fcmovnb
and
aas
and
mov
outsb
ret
fdivrl
dec
jle
or
scas
jb
mov
xchg
or
fsubrs
ret
insl
popf
pop
loope
test
idivb
enter
es
xor
sbb
adc
mov
cmpsb
rorb
stos
or
out
xor
dec
adc
movsl
jl
loop
call
lea
cmp
jle
lock
stos
add
out
imulb
push
inc
adc
lock
loop
or
pop
pop
rcl
cltd
mov
xor
sub
dec
popf
or
and
add
into
xchg
push
int3
outsl
ljmp
cmpsb
les
lea
xor
nop
pop
cltd
or
push
sub
sub
sbb
add
jp
push
jbe
push
outsb
push
add
and
fstpl
add
scas
outsl
lods
shrl
add
pop
hlt
xchg
add
lea
lea
into
fimuls
mov
sbb
mov
sbb
int
pop
test
jmp
jne
cltd
jge
add
rol
mov
aaa
addr16
or
jmp
add
in
add
mov
incb
enter
jne
or
adc
cmp
pop
adc
inc
jae
inc
aaa
mov
jg
dec
push
flds
ret
mov
lcall
adc
inc
add
loop
add
cmp
jp
stos
mov
movsb
pop
or
lea
sbb
sub
push
mov
pop
add
sub
je
std
adc
lret
sub
add
push
andl
inc
loope
jmp
inc
iret
cmp
inc
pop
and
mov
dec
jo
mov
inc
imul
outsb
push
std
ret
jp
pop
mov
xchg
cld
push
push
fsubl
or
mov
ljmp
sbb
or
adc
lds
nop
and
mov
lds
jmp
mov
mov
mov
adc
cmpsl
xchg
inc
rcrb
add
pusha
imul
call
sub
and
es
shl
sbb
lds
addb
xor
sbb
adc
xor
les
inc
add
add
jno
popa
xlat
mov
xor
sub
adc
add
xlat
add
push
js
shlb
adc
clc
cs
mov
or
cmp
sbb
dec
push
jae
sub
add
pop
push
adc
cmp
lahf
or
out
aad
mov
jmp
dec
pushf
in
and
movsb
out
xchg
repnz
sbb
inc
int
jl
mov
cmc
adc
dec
xchg
mov
xor
xchg
call
push
aaa
loope
or
imul
fimull
push
xchg
add
mov
pop
xor
push
dec
cmp
adc
sbb
xchg
adc
adc
sub
repz
xchg
jl
push
xchg
incl
push
adc
icebp
sub
xor
push
sbb
dec
xchg
adc
test
push
xchg
add
rclb
mov
inc
add
push
test
and
pop
sbb
xor
sbb
and
aas
test
sbb
es
cmp
movsb
pop
xlat
mov
xchg
into
add
sbb
dec
dec
mov
push
adc
pop
and
sti
js
mov
cmp
pop
cmpb
dec
dec
jnp
add
and
insb
and
stos
pop
out
xchg
jge
addb
sbb
or
add
shlb
in
add
add
out
sub
shrb
testb
lret
add
cld
cmp
jmp
test
or
cmc
xor
or
add
sub
dec
rclb
add
sub
lods
call
pop
scas
add
push
dec
adc
mov
and
push
aad
xor
xchg
jecxz
mov
xor
and
sti
fwait
pop
imul
cli
and
push
int3
stos
sbbb
ljmp
jne
stos
sarb
add
dec
jo
sbb
xchg
xor
mov
pop
mov
scas
mov
jecxz
arpl
xlat
add
mov
jle
pop
jne
ret
nop
adc
cltd
bound
sbb
add
dec
push
push
or
push
ficoml
pop
jmp
or
inc
cs
mov
add
xor
or
xorl
sahf
fsubs
popf
or
sub
fdivl
adc
mov
sbb
add
mov
pop
mov
add
add
push
jb
cmc
xor
add
cmpsl
repnz
pushf
sub
and
cmp
lcall
push
or
aaa
mov
add
jmp
pop
sub
pop
pop
pop
and
test
es
inc
stos
jg
nop
lcall
leave
push
jecxz
lock
or
push
out
xchg
arpl
imul
pusha
insb
push
and
inc
stos
pop
cmp
cmp
sub
xor
arpl
push
push
je
repnz
fdivs
in
pop
lcall
add
and
and
bound
mov
insl
sub
test
and
loope
fildll
mov
and
add
cmp
insl
sbb
xor
adc
jl
pushf
pop
loopne
mov
or
adc
test
stos
js
push
rcrb
test
xchg
stc
lret
mov
ljmp
or
xchg
add
xorb
cltd
test
sub
add
fimuls
test
stos
cld
sub
mov
aas
stos
shl
ficoms
pop
sub
jl
jo
pop
stos
dec
mov
adc
ror
add
add
xor
movhps
dec
jne
enter
rol
pop
ret
cmpsl
out
ds
sbb
cmp
stc
add
sahf
sub
sub
aaa
add
ret
rcll
add
push
push
push
call
lock
push
mov
test
sbb
lock
cmpsl
sub
ss
push
jb
and
jo
add
cmp
xor
xchg
adc
push
xchg
or
add
ss
or
xchg
les
orl
adc
pop
push
sbb
shl
push
cltd
pusha
rorb
push
dec
push
fsubl
mov
add
andb
pop
sbb
iret
xchg
gs
or
gs
dec
add
xor
leave
jae
add
add
insl
pop
jb
arpl
in
push
jo
add
pop
lahf
lock
test
or
xor
adc
inc
push
push
push
sbb
pop
ret
mov
dec
pop
add
orb
xor
sbb
test
je
lea
add
rcrb
push
arpl
pushf
push
test
inc
adc
mov
cmp
jb
pop
pop
fdivrs
cmpsl
cmpsb
adc
aam
push
add
sar
lea
push
push
inc
sub
test
add
sub
loopne
xchg
adc
jle
pavgb
mov
jle
loop
or
ret
clc
mov
sub
imul
add
in
sub
jle
cmpb
cld
mov
sub
or
jge
lret
jo
or
push
lcall
das
cmp
sahf
sbb
push
and
dec
pop
pop
cmp
bound
inc
sub
mov
xchg
lea
add
pop
push
push
push
push
mov
push
push
push
push
xchg
push
add
add
push
movb
orb
mov
sbb
lcall
jecxz
out
sub
jb
xor
popf
or
mov
js
jg
sbb
sti
dec
add
pop
add
cmp
sbb
mov
aas
push
lea
jmp
into
nop
rcrl
push
push
dec
xchg
dec
insb
enter
add
rorl
ret
clc
sub
je
and
add
rclb
lcall
fcmovnb
fcmovne
push
mov
or
pop
shrl
pop
xor
ljmp
std
nop
xchg
sub
jns
pop
incl
sub
and
ljmp
sbb
dec
insl
fistpl
xchg
pop
jo
sbb
xor
jmp
adc
adc
sahf
add
jno
xchg
mov
orb
mov
pop
add
pop
dec
add
jle
icebp
mov
ret
add
cmp
push
loopne
inc
and
add
pop
and
sub
mov
cmp
mov
xchg
jns
xchg
lock
xlat
mov
jb
ret
vxorps
ds
movsl
lods
xor
or
push
adc
nop
jo
cs
xchg
mov
inc
lds
cld
add
xor
int3
push
push
pop
mov
jge
out
sbb
add
push
cwtl
sub
sbb
or
mov
je
clc
cld
mov
dec
add
cmpb
shll
mov
xchg
iret
int3
addb
sbb
inc
push
xor
sbb
cwtl
sbb
cmp
push
xchg
xlat
popf
push
mov
pop
mov
or
mov
push
mov
sbb
inc
daa
rolb
pop
jge
jo
leave
add
sbb
inc
cld
xor
iret
repz
xor
cmp
add
mov
enter
mov
push
and
push
jnp
mull
in
jmp
xor
out
insl
mov
push
push
mov
pop
xor
sub
xchg
outsl
or
xchg
mov
cmc
or
rclb
ret
push
add
pop
addr16
call
or
call
add
jnp
mov
lock
push
call
xor
push
les
mov
cmp
pop
push
lahf
adc
shll
aad
sub
rcrb
ret
dec
pop
sbb
fimull
pop
lahf
shrl
mov
dec
shll
adc
movsb
fwait
incb
push
push
inc
dec
inc
cmp
scas
or
inc
clc
xor
push
into
aam
xchg
movl
ljmp
mov
in
pop
add
sarb
or
sar
push
mov
pusha
mov
dec
lock
inc
push
ret
pop
and
add
imul
cmpsl
rorl
fdiv
filds
scas
insb
popa
push
dec
jbe
rsm
or
pushf
jle
stos
mov
pop
fnstenv
je
inc
jnp
cmp
jae
adc
sbb
pop
test
push
std
fistl
pop
movl
inc
push
push
ss
mov
jl
add
xor
xor
jl
jae
and
jo
xor
pop
clc
lock
mov
push
test
sbb
lahf
dec
movsl
sbb
and
add
sbb
pop
adcl
cld
ret
jge
movb
cmp
ret
dec
imul
rorl
cld
sub
inc
inc
mov
pusha
nop
mov
inc
clc
cmp
lea
jne
push
push
push
adc
or
pop
cmpsb
mov
mov
clc
movsb
push
sub
fwait
js
loope
dec
xchg
andps
loopne
mov
lea
movsl
mov
cli
pop
cmp
call
das
ret
mov
xchg
test
rolb
test
je
adc
jno
sbb
loope
or
sbb
xchg
sbb
aas
test
iret
test
adc
mov
out
adc
ds
cmpsb
insb
push
dec
cmp
inc
jp
inc
mov
or
and
jg
rolb
cmp
ror
insl
pop
pop
mov
outsb
in
sub
adc
inc
add
mov
sub
pushf
adc
lcall
mov
lcallw
xor
or
enter
inc
jmp
ljmp
xchg
xor
xor
inc
sbb
cmp
stos
rcr
jne
push
pop
sub
in
adc
int3
fistpll
add
je
clc
movl
out
sbb
daa
inc
inc
ljmp
sbb
push
dec
sbb
hlt
lods
shll
jp
jmp
data16
hlt
fistpll
sbb
dec
lea
push
test
jg
inc
push
inc
xchg
les
jae
mov
test
jb
push
push
in
cli
aad
out
pop
hlt
inc
sbb
lea
mov
dec
jo
or
add
jge
loop
push
je
dec
pop
jo
push
jp
divl
add
arpl
inc
and
push
mov
jmp
cmp
cmp
test
and
sub
je
js
push
push
pop
jl
mov
in
jle
adc
andl
push
gs
push
push
fisttpl
rcll
addl
subb
aas
loop
push
pop
pop
arpl
pop
inc
mov
rcrb
cs
pop
pop
divps
and
xor
int
push
push
jl
push
jle
add
rol
idivl
mov
sti
dec
sahf
pop
sub
mov
stos
and
jecxz
iret
pusha
cmp
cmp
xchg
mov
lcall
sub
inc
mov
or
test
sub
out
and
psrad
test
mov
in
add
mov
mov
ret
lea
mov
push
mov
jl
shlb
mov
mov
jp
std
inc
cmp
fidivl
mov
add
outsb
push
pop
cli
mov
push
push
mov
add
frstor
pop
push
push
ret
and
pusha
push
movsb
std
dec
insl
mov
sbb
fmull
or
jge
push
and
sbbl
scas
lods
lret
xor
adc
inc
push
mov
push
inc
je
imul
inc
add
push
jo
and
js
aas
add
mov
inc
movsl
push
pop
inc
xchg
sub
jmp
add
fs
stos
rcl
inc
inc
push
movsl
jl
enter
push
pop
or
push
enter
sub
push
insb
jl
or
mov
popf
mov
push
insb
fs
mov
stos
movsl
repz
mov
inc
fcomi
sbb
mov
xchg
jle
lds
push
gs
clc
stos
pop
push
push
inc
and
push
sbbb
fdivl
fiaddl
cmp
jnp
sub
loop
aas
enter
push
add
mov
and
sbb
jae
adc
mov
sbb
mov
push
push
xor
mov
sub
push
loopne
cmpsl
adc
mov
or
sarl
mov
inc
cmp
sub
sub
mov
cmp
push
inc
dec
rcrl
sub
xor
sub
test
rol
fldenv
in
iret
adc
adcl
add
push
dec
lock
add
inc
out
testb
add
add
sbb
inc
icebp
bound
lods
ljmp
push
inc
xadd
outsl
js
or
dec
adc
es
in
stos
mov
or
lret
addr16
sahf
scas
cs
lret
adc
cmc
inc
lcall
pop
adc
and
push
fnstenv
adc
lods
and
dec
jl
inc
sbb
pop
sub
xchg
inc
adc
mov
mov
add
mov
fabs
fstps
test
push
movsl
jb
ja
push
test
push
pcmpgtd
cmpsb
jmp
cmp
mov
test
add
rcl
lcall
pop
sti
sbb
sub
cmp
push
xor
inc
movsb
push
dec
cmp
roll
out
sub
outsl
les
mov
rcrl
xchg
punpckldq
cmp
icebp
cmpb
push
cmpsl
cmp
sub
push
sbb
nop
cmp
or
xchg
cmp
cmpsl
push
mov
adc
cmp
or
jp,pn
mov
or
jg
sbb
enter
pop
sub
mov
xor
fcoms
iret
int3
xor
sbbb
inc
insb
xor
clc
sbb
into
vpunpckldq
sbb
sub
iret
xor
loope
sarb
adc
sahf
or
loopne
cld
sbb
add
and
push
mov
push
subb
sbb
cmpsl
aaa
push
sbb
adc
inc
sbb
xchg
test
mov
push
push
push
xor
dec
fisubrs
xchg
fisubl
lcall
daa
and
sbb
push
cmpps
mov
mov
push
int
sub
sbb
push
jno
popa
stc
xor
add
aam
sub
mov
push
and
sub
mov
jne
mov
dec
pop
ja
jmp
vmwrite
test
add
push
push
add
nop
and
add
and
push
pusha
leave
out
gs
sbb
push
in
mov
dec
imul
aas
push
cltd
daa
xchg
or
dec
jne
call
movsb
jge
pop
dec
or
sub
in
pop
fdivl
ds
add
jmp
mov
sahf
cs
push
cmp
inc
sbb
mov
scas
mov
jno
push
and
sbb
push
pop
das
cmpsl
insl
pop
add
adc
dec
or
shll
nop
and
sub
sbb
xor
mov
mov
fs
cwtl
dec
mov
push
cmp
jecxz
mov
and
pusha
xor
sub
and
sbb
das
sbb
push
push
mov
aam
pop
sub
mulb
inc
and
adc
add
fdivs
adc
loop
movsl
aas
adcl
js
outsl
sub
sbb
das
bound
dec
adc
xchg
push
dec
xchg
bound
mov
xor
dec
jns
loope
sub
sbb
xchg
clc
dec
or
dec
lock
faddl
mov
sbb
pop
push
rorl
mov
add
pop
mov
outsl
xor
enter
nop
mov
imul
mov
jae
push
arpl
push
inc
pop
jmp
ror
and
test
rorl
push
sub
or
rolb
rcrl
mov
xor
mov
es
pop
fiadds
and
pusha
and
push
add
inc
add
imul
addl
mov
lcall
clc
or
pop
mov
push
mov
cmp
add
inc
inc
test
push
shrb
fsubrs
scas
movsl
xor
jl
push
jmp
out
mov
mov
pop
std
add
cwtl
push
mov
rorl
mov
pop
lea
rcll
xchg
cmp
roll
cmp
jp
push
inc
inc
lods
pop
pop
lahf
push
ljmp
lea
bound
xchg
and
loopne
mov
sti
fcos
push
dec
and
cltd
mov
cwtl
shrb
sub
jo
inc
sub
or
das
sub
test
mov
mov
inc
jp
or
dec
push
dec
mov
push
loope
mov
inc
rcrb
mov
dec
in
fs
das
and
sbb
push
and
cwtl
imul
push
cmpsl
popf
jmp
inc
loopne
cmp
iret
pop
mov
sbb
pop
or
push
xchg
mov
cmc
sub
and
xchg
jge
xchg
loop
jl
push
decl
sub
js
fidivl
movsl
jge
lods
xchg
xor
add
sub
push
repz
mov
jmp
sub
push
push
xlat
and
push
or
mov
or
push
pop
inc
lcall
ss
jne
jl
sub
subb
pusha
pusha
mov
je
xchg
mov
mov
jnp
sbb
lret
or
push
adc
pop
xor
mov
shll
or
xchg
call
xchg
add
imul
loopne
imul
in
arpl
pusha
xchg
lock
push
jns
pop
pushf
mov
xor
push
pop
sub
cwtl
inc
mov
jecxz
out
das
or
pop
int
repnz
or
xchg
pop
xor
inc
das
sbb
xor
es
and
or
cmpsb
push
pushf
sbb
hlt
lock
inc
les
dec
add
adc
adc
xorb
in
std
cmc
xor
jp
add
push
sub
loopne
clc
fldt
mov
push
pop
xchg
mov
sbb
orl
movsl
daa
adc
add
in
jecxz
lahf
jl
mov
push
lea
sbb
sbb
pop
dec
sbbb
jge
lds
out
adc
xor
rorb
fidivl
jecxz
mov
xlat
push
lock
das
lea
mov
popa
andb
pusha
push
js
inc
mov
rorb
das
loope
jge
xorl
aam
push
call
add
and
sbb
icebp
pop
mov
mov
pop
popa
sub
mov
hlt
pop
push
sub
sub
inc
xchg
inc
jbe
movsl
xor
xchg
lock
push
movsl
push
aam
and
xor
jl
adc
sub
icebp
out
repz
popa
enter
js
es
inc
arpl
push
add
jp
pop
adc
push
push
and
js
jne
mov
repnz
mov
mov
inc
and
push
ror
shll
and
fsub
mov
jno
rorb
sbb
and
push
rorl
mov
add
mov
add
imul
dec
es
or
es
xor
cmp
mov
add
mov
pop
mov
std
cmp
dec
lcall
ljmp
xchg
xor
mov
adc
cwtl
sub
adc
xor
push
and
xchg
dec
jg
jnp
gs
cmpsb
jmp
pop
mov
mov
adc
jne
xchg
adc
sub
wrmsr
xor
adc
inc
into
into
aas
cmp
cmp
inc
pop
inc
sbb
dec
push
mov
sbb
cmp
cmpsl
or
pop
mov
arpl
clc
dec
fmuls
out
insb
arpl
adc
mov
push
mov
shr
mov
push
rcll
push
mov
and
nop
test
sbb
sbb
aaa
add
xor
or
outsl
and
cmp
int3
nop
jne
sbb
icebp
lcall
add
xchg
sub
pop
les
bound
mov
mov
loopne
push
add
imulb
dec
into
es
filds
aaa
and
les
xchg
adc
dec
mov
push
or
mov
ja
push
push
cmpb
fisttps
movb
pop
je
dec
inc
cli
out
push
sub
mov
jg
push
orl
push
jecxz
cli
movsb
sbbb
and
cmpsl
inc
push
push
mov
and
and
loope
inc
inc
insl
fidivs
dec
lcall
mov
lock
das
push
and
cs
push
push
xor
inc
cmp
pop
lds
repnz
adcb
divl
xchg
push
fcoml
or
mov
iret
lret
adc
jecxz
stc
dec
mov
sbb
cmpsl
pop
mov
inc
aas
dec
dec
in
out
or
adc
push
rcr
and
add
push
std
push
cmp
cmp
jne
js
xor
and
icebp
add
popf
cmc
adc
lods
ret
add
jmp
daa
sbb
bound
add
add
mov
sbb
cmp
mov
adc
xchg
inc
cld
adc
je
out
clc
mov
xchg
sub
inc
inc
inc
sub
inc
out
fstl
fistpll
faddl
sbb
push
mov
mov
lahf
push
add
push
outsl
adc
sbb
pop
rorb
inc
loop
cmp
je
xor
inc
cmp
add
fnstcw
mov
push
sub
ret
pop
sub
enter
adcl
fcmovnb
fbstp
mov
loop
stos
imull
cmpsb
fs
mov
aam
stos
call
decb
call
icebp
or
push
out
pop
dec
aad
cmc
jno
out
xor
enter
xlat
jnp
mov
cmp
int3
adc
fiaddl
mov
shll
ret
push
gs
mov
sbb
cs
push
push
jge
call
lret
fwait
popa
lods
inc
movsl
and
aaa
fcoml
inc
mov
repz
movsl
test
push
add
adc
push
inc
push
add
mov
popf
test
lds
or
lahf
dec
sbb
add
sti
sbb
push
jns
and
sub
or
bound
stos
cmp
insl
sbb
jl
cltd
nop
js
cmpsl
sbb
inc
cmp
mov
mov
test
inc
add
test
xlat
jge
adc
sbb
inc
add
and
or
sub
sub
push
sbb
out
or
inc
hlt
pop
adcb
dec
inc
mov
mov
and
shrl
adcb
jb
jo
sub
cmp
or
cmp
push
mov
xor
test
jo
test
push
mov
sbb
mov
in
imul
mov
arpl
push
sbb
pop
xchg
jb
jg
cmpb
jne
inc
inc
in
push
xchg
xor
dec
or
push
dec
repz
or
int
sbb
ficoml
pushf
test
mov
inc
adc
outsl
aam
mov
lods
inc
or
pop
mov
pusha
and
ss
subl
aaa
cmp
jmp
push
outsb
test
mov
pop
sub
xor
push
sub
out
rcrb
mov
and
out
lods
push
dec
jb
dec
clc
dec
mov
xchg
mov
adc
add
jnp
add
cmc
inc
or
in
or
lret
inc
inc
add
test
and
pop
dec
cmp
xor
add
in
aas
fdivrp
dec
pop
xor
cli
lods
pop
xchg
add
pop
loope
mov
add
lea
cwtl
notl
iret
pop
fsubrs
or
dec
xor
mov
lods
test
lods
lods
mov
push
test
shlb
adc
xchg
ds
or
xchg
or
push
push
sub
pusha
push
push
inc
and
imul
jb
xor
push
aas
cmpsl
in
pop
incb
pop
push
xchg
or
xchg
enter
in
push
push
outsb
imulb
dec
movsl
mov
inc
xchg
sub
enter
push
push
mov
insb
fdivrl
and
inc
push
push
imull
and
rclb
xor
lods
jmp
xchg
dec
jbe
lahf
js
push
jl
or
movsl
inc
or
inc
pusha
sub
movsl
adc
rorb
push
xchg
int3
sub
adc
adc
leave
sub
shll
clc
push
push
shlb
add
sub
aad
mov
sub
xchg
int
std
xor
push
daa
xor
out
inc
std
xor
pop
xchg
cmp
es
mov
push
and
or
test
adc
inc
daa
orb
fmull
sub
pop
mov
inc
adc
iret
cmp
jne
in
add
add
test
aaa
insb
loop
and
jmp
cmp
rol
hlt
ret
or
je
mov
pop
mov
push
inc
or
dec
mov
nop
sub
pop
pop
pop
rclb
adc
mov
fstpt
lcall
ud2
pop
arpl
loopne
lea
sbb
shlb
mov
cmpl
inc
jecxz
cmp
faddl
movsb
repnz
push
adc
adc
and
iret
xchg
push
sbb
adc
add
dec
je
movsb
sbb
rorl
and
sbb
loopne
xchg
or
mov
add
xchg
ja
cmp
pop
mov
dec
call
ret
pusha
pop
stos
test
es
hlt
mov
xchg
je
xor
xlat
mov
mov
jmp
mov
or
sub
mov
push
sarb
mov
add
inc
jnp
mov
js
mov
mov
push
push
movb
cmp
mov
lret
hlt
adc
sbb
enter
mov
mov
loopne
push
xor
adc
mov
push
test
fstpt
loopne
jns
jmp
mov
cmp
push
mov
add
sbb
inc
mov
dec
mov
inc
adc
pop
add
adc
adc
movsb
rcrl
lock
hlt
shlb
add
adc
ror
mov
hlt
pusha
add
pop
popa
push
fs
lahf
rorb
test
push
sbb
dec
into
push
sub
sbb
jno
nop
add
setb
hlt
cmpsl
dec
les
pop
xchg
mov
int3
cltd
cmp
push
jbe
pop
fisttps
push
stos
xor
test
sub
mov
mov
cmp
pop
cld
push
push
je
shrl
je
adc
loope
inc
add
lods
xor
xchg
fsubr
mov
sbb
jbe
hlt
xchg
xor
dec
sbb
add
aaa
xchg
add
adc
mov
mov
in
fdivs
je
add
jns
jo
mov
movsb
pop
adcb
dec
mov
mov
mov
mov
js
insl
sub
add
ss
cmp
pop
ret
push
imul
xchg
jge
insb
push
jbe
jp
and
testl
and
xor
add
fisttpll
cltd
push
push
aam
fstpl
add
jae
jle
cltd
mov
sbb
xchg
push
jmp
test
cwtl
nop
andb
popa
dec
popa
pop
nop
fwait
in
bound
outsl
stos
ja
dec
add
sub
or
and
mov
cmp
or
test
subl
or
lods
outsl
in
sbb
sbb
and
sbb
xor
inc
pop
lock
push
lods
xor
push
adc
inc
adc
ja
cmpsl
sbb
cmpb
mov
arpl
mov
adc
clc
push
fs
adc
lea
push
or
ret
xchg
cli
xor
pop
xchg
cmpl
sbb
and
and
rolb
addr16
push
lods
orb
lock
je
jl
or
or
aad
inc
cmp
scas
add
aam
dec
or
jno
mov
mov
mov
push
dec
mov
add
xchg
and
popa
mov
xlat
jge
in
or
jge
inc
loopne
loopne
jo
xor
xchg
hlt
loope
sbb
movsb
pop
adc
fcomps
push
faddl
in
fcom
or
or
jmp
test
adc
jmp
inc
movsb
outsl
push
inc
sbb
lock
pop
cmp
or
dec
enter
mov
lods
int3
imul
enter
lock
sbb
pop
add
shrb
inc
addl
push
add
jl
testl
mov
pop
mov
icebp
and
push
add
add
mov
sub
scas
add
cmpsl
push
pusha
popf
inc
jmp
xor
xor
cwtl
sbb
adc
jns
cmovp
or
pusha
and
out
adc
not
mov
sub
test
adc
call
jno
jo
insl
sub
in
jbe
and
stos
push
pop
cwtl
sbb
push
pause
or
je
cwtl
adc
sbb
and
addps
pop
inc
pop
inc
dec
cmpsl
call
rolb
js
lods
test
push
xor
xchg
loope
scas
mov
add
lea
xor
jb
jne
cmp
aaa
mov
push
sbb
pop
scas
pop
loopne
lahf
imul
add
jae
fmull
push
push
or
aad
sbb
movsl
jg
bound
xlat
xchg
insb
add
das
fimuls
sbb
arpl
loope
lock
mov
or
loopne
adc
repz
mov
in
mov
add
js
mov
cld
add
add
sbb
push
ljmp
hlt
jmp
jge
or
int3
es
or
fptan
mov
movsb
sbb
arpl
sbb
dec
jp
nop
inc
repnz
add
add
add
or
lods
and
or
add
adc
or
stc
incb
jo
jae
add
ja
loope
mov
faddl
bound
andb
mov
mov
aam
sbb
call
mov
cs
mov
cmp
or
test
or
xchg
loope
lds
cmc
out
fsubr
jmp
pop
loope
jne
mov
loope
shlb
sub
mov
cmp
mov
mov
sub
into
cmp
addb
adc
push
leave
xor
add
sbb
mov
pop
lods
mov
in
test
negl
cmpsb
xor
push
mov
or
push
and
mov
lcall
adc
push
inc
adc
sub
sub
mov
lcall
jae
pop
rclb
rorb
jmp
or
cld
xor
scas
mov
lods
add
xor
inc
xor
push
test
push
inc
and
or
cmpsl
mov
jns
data16
sbb
sbb
dec
repnz
add
pop
or
mov
cmp
and
insb
inc
cmp
sbb
inc
stos
mov
mov
mov
repnz
aam
add
push
jb
push
push
mov
addb
hlt
mov
add
xchg
xchg
dec
or
dec
movsl
mov
sub
nop
add
and
pop
push
and
push
add
sub
cmp
int
push
cli
mov
or
jnp
sbb
push
in
in
das
pop
mov
dec
in
adc
roll
add
xor
mov
out
out
cmp
loope
dec
mov
stos
mov
or
adc
sbb
push
ljmp
mov
sub
dec
rolb
cltd
xor
mov
jb
pop
sbb
jg
pop
or
or
sbb
mov
mov
fistl
jb
loopne
push
push
mov
sbb
movsl
mov
inc
adc
std
add
pop
mov
push
cli
inc
or
shlb
mov
stc
jb
sbb
add
cmp
jae
dec
cltd
pop
pop
cwtl
add
es
sub
mov
stos
add
ja
push
push
push
adc
sub
sbb
push
inc
in
pop
xor
adc
fists
rolb
sti
ret
imul
cmp
cmp
inc
jb
fstpt
outsb
add
das
call
pop
or
or
pop
add
aad
ds
in
xchg
jno
cs
mov
mov
mov
sbb
jmp
and
push
pop
or
movb
xchg
test
or
mov
sbb
jmp
and
dec
bound
xor
mov
inc
push
jle
bound
mov
or
push
sbb
test
mov
aas
pop
cld
and
jo
incb
nop
sbb
mov
insl
dec
sub
xor
dec
add
cs
jo
flds
fisttpl
pop
xor
push
out
movsb
xchg
mov
out
and
loop
ss
cmp
add
hlt
shll
inc
mov
sub
sbb
ds
mov
sub
cmp
es
or
fwait
and
mov
fdivs
or
test
scas
jbe
ficomps
inc
pop
add
dec
or
pop
xor
dec
mov
aas
sub
push
push
dec
or
push
fs
clc
jp
and
pop
loopne
push
adc
mov
ret
add
dec
adc
lods
cli
and
test
mov
jmp
fcoms
pop
inc
popf
fwait
jecxz
sbb
sbb
and
stos
rorl
push
sbb
repnz
cmpb
adc
mov
insb
sub
and
inc
mov
imul
sbb
mov
cmc
inc
xchg
push
mov
jbe
pushf
xlat
jo
dec
jg
int3
sub
mov
mov
pusha
sub
sbb
or
push
leave
cwtl
scas
and
inc
sub
loop
lock
je
xchg
fwait
push
and
jge
sub
mov
inc
hlt
mov
cmp
lds
lods
push
adc
jae
pusha
mov
sub
add
sbb
xchg
in
arpl
sub
or
xchg
sbb
mov
jbe
add
and
or
pop
mov
adc
mov
jle
sbb
and
inc
push
mov
adc
icebp
add
adc
mov
ret
mov
mov
sbb
cwtl
subb
mov
add
movsb
dec
push
push
mov
adc
mov
sbb
xor
int
lea
lahf
test
je
sub
pop
push
inc
mov
jnp
nop
inc
pop
adc
mov
in
push
leave
jae
dec
adc
adc
jo
cmp
adc
scas
shrl
mov
pusha
leave
push
dec
lods
in
xor
rclb
push
jo
cmpsb
jb
push
push
loopne
mov
inc
sbb
cmp
mov
pop
shr
dec
addr16
shlb
push
sub
sub
and
dec
cmp
xchg
out
and
sub
shrl
cmp
mov
xor
and
sbb
scas
cwtl
mov
and
add
add
push
addb
push
lcall
xor
dec
xorb
add
push
sbb
add
push
nop
lret
add
push
push
and
or
xchg
add
xor
add
inc
sub
cmp
cmp
lret
or
or
inc
push
dec
and
adc
insb
push
push
and
inc
sub
mov
xchg
jbe
je
adc
mov
sar
les
test
inc
enter
adc
rcl
loopne
div
sbb
add
dec
mov
or
fsubl
dec
adc
sub
jnp
cmpsl
mov
pusha
add
pop
mov
or
pop
call
jbe
sub
and
or
and
push
out
std
push
pop
lods
adc
inc
lea
daa
sbb
sbb
dec
cld
pop
sbb
cmp
push
dec
jae
pop
rclb
dec
jae
xor
adc
push
adc
test
dec
mov
xor
sbb
adc
ja
sysexit
xor
lcall
push
dec
mov
inc
movsb
sbb
or
or
dec
lcall
mov
lcall
and
movsb
sbb
and
add
dec
lcall
mov
hlt
and
adc
adc
loop
mov
daa
adc
jns
gs
push
leave
dec
dec
cld
add
add
add
in
push
add
and
dec
xor
push
loopne
jnp
mov
xorl
add
outsb
loope
sbb
leave
add
xchg
cmpsb
mov
sbb
adc
mov
sbb
jmp
std
mov
jne
orl
test
adc
pushf
cmc
outsl
and
sub
adc
fsubl
aam
sarb
fbld
daa
dec
mov
dec
and
sbb
push
cmp
inc
push
rcrb
mov
adc
xor
adc
test
cmpl
mov
cmp
fsts
cmpsl
add
mov
add
aam
mov
les
outsl
and
jbe
sub
and
xor
loope
bound
or
sub
dec
sub
in
push
add
ret
and
push
in
xor
popf
jo
jmp
jno
sub
adc
push
inc
pop
mov
xchg
stos
pop
mov
pop
mov
xor
add
sbb
sbb
sbb
push
hlt
sbb
pop
mov
push
add
lret
in
lock
loope
es
push
std
test
dec
push
push
push
es
pop
rclb
push
or
or
mov
or
add
and
pop
clc
sarl
or
jmp
les
inc
jnp
jne
test
aam
xchg
lds
jle
sub
xchg
mov
or
pop
inc
sbb
sbb
push
leave
xor
lock
mov
adc
add
push
dec
sbb
sbb
pusha
sbb
adc
sbb
adc
push
nop
ja
mov
inc
add
pop
or
mov
pop
or
push
sub
cld
lahf
sti
dec
loopne
push
test
stc
lahf
push
shrl
hlt
push
push
mov
lahf
and
and
pop
xor
out
add
bound
arpl
lods
je
pushf
scas
es
aam
pusha
push
sar
lahf
test
add
mov
xor
mov
adc
mov
add
and
jl
dec
inc
inc
adc
adc
or
lock
push
xchg
pop
dec
push
push
and
xchg
sbb
inc
mov
sub
fprem
add
jo
and
ret
xor
and
mov
cmp
mov
lea
push
push
inc
pop
mov
add
fildl
loopne
movl
int3
fbstp
inc
mov
cmp
xor
push
ljmp
push
sbb
or
int3
addr16
push
mov
pop
mov
mov
pop
and
orl
jb
xor
adc
pop
jge
add
andb
mov
adc
inc
push
push
inc
fadds
mov
adc
ficoml
adc
push
mov
shll
mov
sbb
push
cmp
hlt
nop
push
loopne
fsub
pop
in
lcall
dec
mov
iret
dec
in
push
mov
inc
in
js
or
dec
jmp
in
fbld
popa
mov
push
call
lea
insb
loopne
into
add
sbb
shlb
sbb
int3
inc
sarb
ret
test
push
orl
mov
inc
add
lret
adc
push
jg
filds
add
popa
pop
and
inc
push
movsl
cmp
add
add
popa
sub
inc
iret
sbb
fs
push
lea
faddl
insl
dec
loop
cmpsl
add
push
cmpb
push
adc
pop
mov
add
xchg
fimull
cli
sub
jmp
sarb
ficompl
xor
lea
sbb
cmp
pop
jmp
mov
xchg
cmp
lahf
sub
push
inc
pop
int
and
or
mov
loop
or
mov
neg
push
rolb
call
mov
cmp
jae
clc
daa
rclb
add
jmp
mov
test
and
sub
push
js
push
xor
xor
loope
test
aam
adc
movsl
dec
inc
push
cltd
adcb
in
cmp
lret
or
gs
xor
add
mov
or
add
jne
outsb
adc
fs
cltd
push
faddl
popa
push
pushf
jo
xchg
xor
inc
cli
in
mov
or
cmpl
cmp
insb
add
dec
add
loopne
insb
inc
pop
mov
fiadds
rcrl
insb
jmp
or
push
xchg
sbb
xor
jo
or
mov
xchg
cmp
dec
pop
sub
mov
dec
inc
cmp
or
test
add
sub
xchg
dec
inc
and
nop
andl
dec
or
ret
jno
push
cvttps2pi
pushf
adc
xchg
sbb
pop
jb
dec
adc
mov
sub
cmpl
fs
test
je
adc
mov
mov
sub
pop
test
jl
xlat
sub
jno
ja
and
fidivrs
jb
imul
fwait
inc
dec
and
inc
dec
inc
cmp
inc
aaa
jo
or
add
xor
mov
add
mov
mov
sbb
mov
cmp
dec
iret
add
jo
aas
xchg
jo
and
js
lods
mov
cmp
popa
dec
lahf
filds
xor
push
stc
pushf
test
sub
inc
sbb
lods
push
outsl
and
and
inc
pop
cmp
cmpsw
mov
cmp
xor
dec
sbb
mov
push
nop
xchg
or
pop
pop
sbb
dec
es
sbb
and
ljmp
cmp
inc
sbb
ss
xor
int
and
sbb
mov
or
inc
pop
xor
rolb
clc
push
fcmovnb
push
add
push
push
outsl
or
pop
and
in
sbb
out
lret
pop
pop
sbb
sbb
es
or
in
out
push
cmp
pop
push
stc
filds
pusha
jne
xchg
dec
xchg
lret
push
dec
pop
shl
sbb
pusha
in
nop
dec
push
add
xchg
sbb
pusha
sti
add
fisubs
ds
mov
jns
push
cmp
data16
xchg
pop
icebp
add
cmpsb
cmp
mov
pop
mov
cmp
push
stos
mov
pop
lea
inc
cs
push
jo,pt
in
xchg
inc
push
ret
xchg
pop
addr16
icebp
dec
insb
push
add
dec
jns
mov
mov
push
dec
jmp
and
cmp
and
inc
in
mov
xor
mov
sbb
inc
mov
sub
or
jno
out
fmuls
or
ljmp
sbb
scas
mov
lret
cmp
mov
cs
lock
aam
dec
add
xorl
dec
cmp
add
mov
adc
mov
dec
lods
xchg
jno
adc
or
sti
add
clc
jl
mov
mov
xchg
xchg
mov
popf
test
movsb
testb
arpl
mov
call
or
cmp
daa
xchg
jnp
mov
adcl
subl
add
popa
addl
adc
imul
or
outsb
stc
fbld
js
add
pop
lods
and
or
lret
ljmp
xor
inc
inc
scas
push
addb
or
adc
push
test
jecxz
call
das
in
adc
js
je
or
adc
loopne
jns
ljmp
es
pop
push
ret
adc
xor
xor
sub
cmp
nop
aaa
xchg
xor
push
mov
push
cmp
sub
mov
push
xchg
mov
loope
mov
or
and
mov
xor
in
addr16
fidivrl
rcl
arpl
and
mov
jmp
mov
xor
mov
and
inc
adc
add
add
loopne
stos
js
adc
fadds
cmp
push
adc
sub
mov
pop
lea
nop
out
add
add
xchg
push
mov
push
stos
pusha
pop
sahf
jns
insl
pusha
enter
xor
or
mov
or
push
pop
je
popf
js
hlt
mov
lahf
and
ss
add
sbb
cmp
sub
nop
push
and
adc
mov
xchg
popf
popa
stos
jno
testb
dec
ljmp
pop
test
adc
jno
cmpsl
push
push
sbb
and
testb
adc
shll
incl
cltd
push
cmpsb
push
and
mov
test
cmp
xor
push
xchg
sub
mov
dec
aad
add
xor
pop
cmpsb
adc
dec
clc
and
adc
push
adc
mov
bound
cmp
mov
pusha
xchg
lret
pushl
movsb
punpckhbw
mov
inc
dec
test
das
jge
push
lods
cwtl
inc
xor
mov
xchg
jno
lock
jo
and
adcb
insl
mov
xor
and
in
mov
jmp
xchg
pop
fwait
clc
add
sub
xchg
cmp
and
push
xchg
add
cld
clc
xchg
sbb
jl
dec
push
sbb
repnz
into
loop
cmp
sbb
je
xchg
or
mov
xchg
push
clc
test
faddl
dec
cli
xchg
je
cmp
les
add
movsb
pusha
or
xchg
and
or
push
lock
hlt
or
push
jmp
fstl
cmpsb
fdivrl
adcl
sbb
or
mov
add
mov
sub
mov
xchg
jo
cmpsl
mov
add
adc
lods
or
adc
inc
push
xchg
or
mov
push
inc
scas
sub
pop
enter
push
adc
xor
sbb
push
sub
int
add
je
inc
arpl
lret
incb
push
push
jg
pop
les
dec
repnz
inc
addl
and
inc
push
push
push
nop
mov
jne
jp
or
cmp
stos
cmpsl
nop
sbb
sbb
jae
iret
gs
push
test
add
sub
das
and
xor
pushf
dec
insb
fs
inc
leave
test
inc
insb
adcb
shr
or
leave
mov
jo
cli
mov
nop
push
and
sub
xorl
pop
test
jp
xor
loope
dec
dec
inc
and
pusha
je
or
movsb
add
cmp
jo
pop
push
js
cmpsb
xchg
inc
je
popf
pushf
or
gs
jl
daa
inc
leave
test
adc
aaa
jb
dec
je
hlt
sub
inc
pop
iret
inc
mov
and
xor
mov
sub
mov
push
and
jmp
mov
int
cmp
sbb
xchg
and
add
lret
jl
inc
scas
add
sub
mov
aaa
xchg
nop
pop
mov
js
je
clc
and
pop
enter
push
and
dec
add
inc
add
add
sub
inc
pop
pushf
pop
imul
lds
shlb
std
outsb
adc
pop
push
and
push
push
dec
imul
push
push
push
mov
xor
loop
jne
mov
or
cmp
sbb
movsb
sbb
inc
mov
mov
or
sbb
mov
faddl
dec
pop
or
test
test
cs
and
add
dec
js
inc
pop
add
mov
xchg
into
leave
jne
mov
aad
push
jecxz
adc
lea
mov
pop
je
es
xor
adc
ret
das
jnp
adc
cmp
xchg
jecxz
adc
ds
repnz
fldl
ss
pop
js
cs
adc
jne
mov
add
or
cld
gs
loop
jo
mov
adc
lcall
or
add
pop
add
addl
ret
or
dec
shrb
sub
aam
or
dec
stos
xor
std
mov
or
and
mov
sbb
inc
push
mov
or
andb
inc
adc
mov
lret
inc
lock
add
mov
jns
pop
sbb
xor
xchg
add
or
mov
test
mov
fs
cmpsl
or
pop
push
pop
or
add
jno
dec
jle
cltd
arpl
xor
mov
std
sub
jl
arpl
xor
mov
push
test
inc
mov
cmp
xor
mov
aas
test
les
and
lahf
jnp
test
imulb
push
movsl
dec
mov
mov
fldt
sub
push
xor
add
or
ds
fwait
sbb
push
mov
mov
mov
adc
imul
push
push
dec
cld
popf
das
adc
push
xchg
inc
rep
ret
mov
inc
and
dec
pop
pop
mov
sub
subb
sbb
sbb
cli
adc
movzbl
mov
mov
hlt
and
xor
sub
add
arpl
pop
or
push
inc
inc
push
pop
push
inc
fs
pop
jb
sub
cmp
arpl
enter
lahf
push
cmpsb
movsb
jbe
or
push
cltd
fiaddl
inc
fisttpl
push
subb
orl
in
push
push
loope
fs
xor
loop
inc
loope
adc
addr16
or
insl
loope
and
push
inc
loopne
xor
mov
sub
imul
sarb
popa
mov
enter
cmp
sub
push
rclb
nop
dec
call
bound
add
int
mov
pop
xor
add
inc
lcall
outsb
inc
fstl
sub
aaa
je
pavgw
aad
loope
loope
push
sbb
lods
into
mov
add
daa
sub
xor
icebp
cmp
pop
add
cmp
push
clc
sbb
push
add
fucom
subl
outsl
stos
pmaxub
xchg
repz
mov
clc
jo
jl
xlat
rclb
adc
add
push
adc
je
fs
mov
mov
bound
inc
mov
lds
nop
les
xchg
jno
sbb
in
fisubl
enter
mov
movsl
push
pushf
in
test
pop
inc
pop
mov
rcll
push
cmp
pop
or
add
fst
cld
ja
loop
add
out
mov
mov
js
inc
sub
dec
sbb
add
xor
push
stos
inc
add
xor
jns
mov
push
cmp
lea
in
repz
jg
push
jnp
push
mov
and
jne
stos
dec
lods
mov
sub
sbb
adc
or
dec
rclb
and
lds
jb
xor
enter
loope
ret
adc
inc
and
cmp
adc
inc
inc
push
push
sbb
nop
xchg
inc
dec
pop
push
loope
inc
add
outsl
adc
adc
mov
cld
movsb
adc
pop
and
sarb
dec
sbb
mov
add
or
inc
or
jle
popf
push
push
dec
adc
push
data16
cmp
sbb
mov
adc
cmp
jg
adc
jmp
cmp
jnp
inc
ljmp
test
sbb
dec
dec
mov
cmp
mov
inc
ljmp
push
lret
inc
mov
add
cltd
enter
and
xor
dec
test
xchg
inc
mov
cmp
mov
andb
test
xchg
mov
push
inc
cmpsb
rorl
or
mov
jge
xchg
push
mov
mov
clc
in
decb
fcoml
sbb
add
cmp
add
or
xchg
cmp
jne
mov
sbb
jl
mov
aam
push
out
push
pop
sbb
sarb
mov
mov
inc
sbb
mov
mov
xchg
subl
jge
adc
mov
js
bsr
pop
pop
call
xor
jg
inc
les
mov
popa
push
dec
lds
dec
fildll
pop
xchg
push
je
xchg
sub
jmp
popl
mov
loopne
call
sbb
fs
jno
test
push
mov
cmpsb
and
sub
dec
cmp
jae
pop
gs
dec
cmp
aaa
lea
nop
push
es
icebp
or
and
jns
mov
test
andl
pop
push
or
dec
mov
daa
jns
add
inc
cmp
sub
or
push
call
mov
cmp
xor
dec
in
mov
inc
adc
aaa
and
fsubs
jecxz
or
push
sbb
inc
cmp
js
jge
dec
jnp
fs
or
int
imul
adc
nop
add
adc
repnz
push
sub
jbe
enter
cmp
jb
or
insl
test
int
adc
add
mov
push
lea
add
add
push
and
rcrb
adc
andb
fadd
stos
popf
push
mov
dec
and
test
outsb
jle
jnp
cwtl
loopne
int3
iret
jge
inc
into
or
aad
pushf
or
test
cwtl
insl
pusha
mov
cmp
daa
lcall
inc
leave
mov
sbb
pop
mov
ret
mov
shr
jecxz
mov
ret
cmp
je
sub
inc
add
push
int3
mov
pop
iret
push
pop
push
loope
mov
aad
or
cmp
adcb
ret
cld
fcoms
inc
ds
cmp
jbe
scas
ds
jbe
cmp
lcall
loopne
xor
mov
in
jle
pop
mov
push
and
or
call
sbb
dec
pop
mov
into
sbb
mov
sbb
ret
jno
mov
ret
testb
add
add
push
cmp
cmp
mov
sbb
jg
inc
ljmp
adc
andl
adc
push
xor
add
jns
cmp
cmp
clc
pop
hlt
jle
push
cmc
add
sbb
rclb
adc
mov
inc
push
adc
push
mov
mov
imul
pop
inc
add
ja
sub
js
rorb
push
fistps
jae
pop
mov
add
mov
pop
sbb
mov
jle
sub
movl
adc
pop
cmovae
add
pop
mov
jne
push
imul
rorl
jecxz
lahf
aad
pop
xchg
sbb
push
loopne
movaps
pop
or
inc
shrb
jle
jno
add
inc
pop
sub
xor
dec
mov
cmp
out
or
jl
jmp
pop
lea
ret
xor
arpl
and
fwait
insl
fwait
or
mov
push
fdivs
sub
add
filds
incb
push
pusha
cmp
push
push
and
sbb
mov
xchg
dec
sbb
lock
push
pop
inc
inc
add
stos
or
or
or
jle
bound
arpl
pop
push
pop
inc
dec
or
sub
test
cwtl
sub
push
push
xor
mov
mov
sub
dec
or
or
jl
ficoml
push
sbb
js
xor
stos
popa
loopne
inc
or
pop
insb
test
and
cmp
pusha
ret
movsb
or
pop
add
mov
dec
lcall
xor
dec
sbb
inc
and
int3
and
or
mov
adc
mov
and
jne
mov
or
sbbl
adc
leave
pop
test
imul
inc
nop
mov
sub
add
mov
add
xor
push
xor
pop
dec
sub
in
xor
jp
jne
cmp
pop
pmulhuw
test
nop
fistpll
xchg
je
jecxz
xchg
leave
out
or
cmp
and
adc
lods
mov
stos
push
and
shlb
push
and
mov
fwait
push
fidivrl
iret
das
fwait
sub
xchg
xorb
mov
inc
cmpb
mov
xor
mov
sub
enter
sub
push
dec
sub
adc
lea
add
dec
push
and
add
mov
sub
push
sub
pop
cmp
and
or
push
jl
test
sub
mov
or
mov
jno
adc
adc
lahf
push
mov
decl
xor
ret
call
push
adcb
sbb
mov
add
int3
adcb
adc
cltd
pop
and
movsl
or
or
pusha
cmp
push
nop
or
or
insb
lahf
push
nop
mov
sub
push
jg
pusha
cmp
push
aam
mov
dec
mov
cmp
push
inc
lds
fildl
push
repnz
adc
adc
cmpl
pop
ljmp
or
push
insl
mov
stos
nop
lret
adc
cmp
pop
fsubrp
push
sbb
jnp
dec
es
out
sti
dec
stc
test
inc
inc
ret
adc
push
ffree
inc
sub
je
cmp
inc
dec
mov
xor
and
mov
aam
jl
and
popa
ljmp
lcall
fs
repz
pop
les
pop
ja
xor
push
or
sbb
or
cld
es
push
jne
xor
mov
inc
adc
gs
fiadds
add
sbb
es
adc
adc
mov
jo
repnz
adc
inc
je
mov
and
js
and
jb
outsl
jg
inc
shrb
sub
je
push
jne
lea
adc
xchg
adc
push
add
mov
add
lea
jg
sub
cmp
pop
mov
dec
test
push
mov
pop
mov
insb
xorl
jp
js
mov
cmp
sbb
xlat
insb
mov
loop
test
sub
pop
into
xchg
push
mov
mov
movsb
push
and
dec
les
mov
pop
jle
add
in
jle
xchg
jns
clc
fmuls
and
scas
cwtl
push
dec
sbb
pop
add
sub
icebp
pop
dec
xchg
push
je
mov
aam
dec
adc
push
fdivrl
push
mov
nop
cmpsl
js
sub
fs
fdivrs
xchg
gs
push
cmp
jae
mov
cmp
dec
cmp
notb
xor
mov
pop
dec
adc
push
add
stc
decl
mov
push
inc
aas
into
pop
add
inc
mov
sarb
and
subb
call
adcb
int
push
test
scas
adc
cmovbe
adc
adcl
jnp
xchg
js
roll
sub
push
mov
js
sbb
push
mov
xchg
imul
test
lods
pop
pop
jmp
pmaxub
call
dec
lea
pop
jb
test
and
push
dec
pop
repnz
out
adc
dec
jl
mov
and
xchg
add
jo
push
je
pusha
fs
mov
andb
in
xor
ret
das
push
es
or
shll
shll
and
js
mov
add
fstpt
cs
pop
popf
push
lahf
test
test
add
xchg
mov
sbb
mov
mov
enter
add
mov
in
xor
xchg
je
adc
dec
mov
inc
xor
test
lock
fdivl
subl
jo
xor
add
pushf
xchg
pop
xchg
sbbl
pop
je
imul
xchg
and
mov
sbb
repz
mov
rol
es
xor
movsb
jb
sbb
in
cltd
dec
pop
push
jl
inc
out
push
test
imul
pop
mov
bound
and
and
lods
cmp
gs
pusha
adc
mov
xchg
adc
dec
and
ret
sbb
mov
xchg
cmp
push
and
jge
loope
dec
adc
movl
adcl
sbb
dec
add
testl
inc
inc
add
dec
mulb
inc
jo
cmpb
or
jns
sub
mov
jle
jb
adc
push
and
push
pop
and
lock
leave
push
daa
inc
daa
insl
xchg
pop
inc
push
xor
ret
mov
sbb
mov
fucomip
lea
push
xchg
cmp
inc
dec
bound
or
test
mov
push
imul
lods
xchg
shlb
or
pop
xchg
and
jmp
and
or
cmpsl
in
aad
aaa
lret
mov
dec
push
xchg
clc
das
sub
adc
inc
sub
jne
jno
dec
and
and
pop
push
and
pop
and
adc
adc
ret
popf
jne
push
push
jns
mov
push
and
dec
xor
sbb
push
sub
push
mov
sub
sub
sub
sbbb
sbb
add
je
mov
outsl
sub
pop
xor
inc
push
pop
leave
xor
and
mov
xor
xchg
mov
stos
adc
lcall
fisubrs
xchg
pop
add
adc
lahf
xor
or
sbb
mov
xor
aaa
inc
cmp
cli
sbb
cmp
dec
shrl
fiaddl
insb
push
add
lcall
push
and
shlb
xchg
push
stos
sbb
push
dec
sbb
sub
aam
sahf
notl
lods
xor
sbb
adc
xor
xor
adc
lahf
pop
lods
cwtl
or
inc
mov
insl
add
sbb
jmp
or
pushf
jbe
mov
jle
add
add
out
or
mov
loopne
das
xor
add
mov
lods
fildll
dec
inc
dec
popa
add
mov
es
jmp
mov
clc
pushf
es
jmp
pop
cmp
sub
cmp
mov
adc
mov
xlat
adc
push
or
clc
inc
mov
push
cmpb
mov
jae
adc
lds
jne
and
add
xchg
jg
roll
hlt
ljmp
movsl
push
xor
movsl
mov
rolb
ss
insl
or
inc
push
push
enter
or
cs
and
rolb
add
or
pop
iret
and
and
popf
sub
add
repnz
xor
and
arpl
push
dec
mov
mov
add
sub
movsb
push
sbb
call
pop
test
inc
int
in
pop
nop
sub
test
mov
mov
ficompl
cwtl
ds
push
add
es
sbb
mov
pop
adcl
sbb
adc
pop
ret
mov
adcl
xchg
shrl
icebp
movsl
push
fadd
rcll
adc
and
mov
add
sbb
dec
inc
stos
inc
js
nop
add
cmp
adcb
and
add
push
and
or
adc
push
ds
push
inc
cmpsb
jecxz
lcall
sbb
push
or
call
jne
rcrb
cli
push
and
jmp
out
pusha
push
dec
mov
cmp
push
push
ja
insl
add
xchg
dec
or
cmp
repz
stc
iret
adc
xchg
icebp
and
ret
je
inc
jmp
xchg
adc
jl
and
xchg
movsl
cmp
push
and
jae
mov
mov
test
popl
push
cmp
daa
daa
and
mov
inc
subb
add
push
andl
in
add
icebp
pop
insb
add
cld
lea
sub
test
add
shrb
push
cltd
jg
inc
insb
cs
mov
les
sbbb
ret
or
jns
cltd
inc
sub
inc
cmp
jbe
je
daa
test
insb
and
je
and
fs
sub
inc
popa
add
adc
mov
push
or
add
pop
add
daa
mov
inc
and
sbb
rclb
fld
pushaw
and
in
sbb
jmp
push
ja
or
fcoml
mov
add
jmp
imul
fistpll
call
and
mov
cmc
in
and
push
aam
or
dec
push
pop
pop
jne
pop
rcr
add
cmp
add
sarl
jne
inc
push
mov
andl
push
das
add
lret
add
add
xchg
push
add
nop
sub
push
pop
push
add
aaa
orb
mov
xchg
or
push
dec
jl
dec
pushf
pop
xchg
mov
inc
lea
cmpsb
mov
mov
faddl
shrb
lret
jne
lea
js
pushf
sbb
popf
mov
push
sahf
mov
ljmp
sbb
xor
fdivr
xchg
push
cmpsb
cmpsl
add
testb
lea
and
aad
xchg
adc
adc
xor
mov
xor
xor
xor
sub
fdivs
je
out
pop
and
in
push
cmp
and
inc
dec
mov
and
sub
push
inc
leave
add
and
push
cmp
enter
add
push
mov
movsb
dec
sahf
test
test
or
xor
stc
sub
rep
out
push
loopne
imulb
push
push
or
in
repz
or
loope
mov
push
push
cld
roll
mov
mov
xor
out
push
adc
enter
test
xchg
lea
pop
popf
cmpsl
sbb
mov
fidivl
pop
or
fimull
jmp
or
scas
xchg
out
or
or
or
lock
insl
inc
movl
adc
dec
adc
lods
xchg
xor
inc
adc
inc
rcll
pop
cmpsb
push
adc
lret
sub
pop
push
pop
pop
push
out
xchg
gs
pop
leave
and
into
xor
nop
pop
xlat
in
push
xchg
rcl
dec
call
sbb
sbb
int3
call
sbb
xor
xchg
fcom
fs
and
leave
sbb
gs
sbb
ds
sbb
push
xchg
sbb
push
rcrb
push
sub
sub
xchg
rcrb
cmpb
push
and
and
mov
cmp
es
enter
fsubrl
enter
add
test
and
in
sbb
pop
subl
pusha
sub
aas
push
cmpsb
inc
mov
mov
mov
dec
es
mov
ffreep
test
pop
inc
ds
push
inc
mov
cwtl
jae
je
fs
fsubrs
aam
dec
or
call
test
insb
mov
es
sbb
dec
mov
addr16
repnz
andb
jge
add
mov
mov
ret
lock
fstpl
imul
or
xchg
into
jne
fstl
mov
sti
or
cwtl
dec
or
push
add
xor
cmp
je
xor
stos
mov
jnp
jb
cmp
and
loop
dec
notb
adc
or
sbb
add
inc
dec
scas
or
jg
call
sbb
add
pop
lods
cli
les
xor
jge
xor
fs
cmp
push
xchg
sub
mov
sbb
movsl
xor
mov
pop
je
stos
scas
mov
subb
in
push
adc
cmp
dec
dec
pop
enter
jmp
dec
cmp
jnp
xor
daa
and
aas
xor
xchg
fwait
add
movsb
mov
lret
inc
clc
cmp
sahf
xchg
inc
sahf
hlt
inc
cld
inc
pop
in
inc
fcomps
bound
int
inc
hlt
or
inc
idivl
ss
arpl
add
popl
inc
push
or
mov
cli
mov
xor
cmp
push
push
push
popf
sbb
push
sub
sbb
loop
adc
stos
push
js
xlat
inc
lcall
add
push
inc
push
rolb
enter
dec
cmpb
movsb
inc
daa
xor
repnz
inc
adc
pop
mov
aas
mov
mov
and
add
cmp
xlat
cmp
and
cs
or
cs
cli
jne
lea
xchg
pusha
sti
int3
add
sbb
dec
movsl
mov
pop
push
test
add
lea
jge
xchg
je
loopne
xor
xchg
dec
push
xor
or
int3
xchg
xor
push
test
subb
loope
cltd
xor
push
xchg
xchg
jnp
sub
push
nop
mov
adc
push
imul
push
movsl
xor
insb
dec
cmp
aaa
addl
sub
or
addb
fmuls
adc
inc
jns
adc
xchg
aaa
mov
jge
push
dec
adc
shll
inc
movsb
mov
sbb
or
push
inc
movsl
frstor
sbb
or
fs
cmpsb
inc
lock
mov
cmp
push
out
jg
inc
fcmovnbe
push
fists
xchg
push
push
imul
rolb
dec
fwait
sbb
cld
pop
mov
mov
stos
and
and
jle
adc
sti
fs
push
cmp
sbb
pop
aam
xchg
inc
xor
jb
dec
dec
push
sbb
pop
push
es
pop
mov
xor
cmp
and
aaa
nop
push
add
sub
and
shr
fcoml
dec
mov
test
in
or
add
ss
fs
sub
es
aas
sahf
xor
pop
mov
push
pop
cmp
enter
pop
sub
orb
fmuls
enter
and
and
xor
push
dec
dec
out
aam
dec
dec
push
call
dec
loope
inc
add
add
cmpsl
jo
jnp
lret
inc
aam
sar
or
cld
repnz
xchg
fcoml
and
xchg
rcrb
orb
push
cltd
jne
push
mov
add
cmp
cmp
sbb
ja
mov
adc
sbb
mov
xor
in
xor
and
sub
mov
enter
sub
and
sbb
ss
cmp
movsb
cmpl
xchg
mov
push
test
lods
ud2
nop
sub
fs
or
inc
cmp
cltd
or
popf
movb
push
or
les
jp
pop
xchg
push
mov
mov
mov
fsub
les
add
cmp
sbb
add
pop
sbb
rol
push
sbb
int3
mov
test
cltd
cmp
and
pop
pop
arpl
mov
jo
dec
and
push
mov
aaa
add
stc
inc
xor
push
rolb
sub
stc
mov
punpckhbw
rol
cmp
sbb
mov
mov
sub
sbb
pop
jmp
das
leave
mov
cld
or
lcall
adc
or
mov
push
rolb
ss
jle
divb
push
pop
sub
scas
js
adc
imul
and
sub
lret
lods
add
xor
rolb
mov
ja
adcb
push
test
shll
fstpt
push
adc
je
stc
cltd
and
or
push
jp
push
cmp
pop
push
pop
stos
mov
jmp
ljmp
repnz
popa
push
add
and
pop
push
nop
out
fcoms
xor
push
lahf
les
jns
and
stos
add
push
das
lds
pop
jl
adc
adc
sahf
sbb
or
stos
jbe
es
movsb
dec
in
dec
sahf
push
xor
inc
mov
push
add
stos
in
aam
push
imul
adc
mov
jb
mov
mov
cmp
push
push
sbb
ret
push
pop
aad
dec
and
or
adc
push
dec
or
movaps
fs
push
cmp
jae
in
sub
dec
aam
mov
repz
movsb
sbb
mov
out
cmp
push
pop
cmp
ja
sti
imulb
pop
inc
jne
mov
sbb
stc
dec
pop
pop
mov
push
jmp
sub
pop
sbb
inc
sti
cmpb
sbb
jge
mov
add
sti
mov
or
test
sahf
fistl
add
cmp
repz
or
in
pop
add
jle
jmp
push
adc
jg
cmp
lahf
test
mov
inc
jo
push
push
outsl
int3
sub
std
add
push
lea
adc
or
push
sub
adc
ret
sbb
arpl
aas
sub
push
push
or
adc
je
jg
adc
pusha
xor
lock
add
push
and
ret
add
xchg
cs
aam
mov
mov
shrb
mov
or
shll
stos
inc
lock
mov
insb
lods
xchg
xor
cmp
add
std
or
push
push
inc
fildll
mov
cmp
clc
sub
repnz
push
dec
mov
ret
dec
iret
inc
add
test
bound
mov
dec
push
or
adc
xchg
xor
fcomps
stos
jns
dec
dec
cld
push
pop
mov
hlt
test
cmp
xlat
or
ja
dec
jns
adc
mov
or
mov
push
lods
popf
cmpsl
shll
xor
push
xor
fistps
aaa
pop
sub
pop
or
inc
aaa
sbb
cmp
cltd
adc
and
data16
sub
test
inc
imull
inc
mov
and
adc
loope
pusha
and
pop
or
add
xchg
sbb
xor
xor
add
sbb
and
in
mov
mov
mov
nop
dec
inc
dec
inc
adc
dec
stos
and
push
add
cltd
imul
or
ret
add
nop
and
orb
mov
adc
movsl
push
inc
lds
enter
add
in
and
inc
jl
xor
mov
mov
in
in
xchg
add
add
daa
movsl
dec
push
pop
jo
and
lods
nop
daa
adc
pusha
rorl
xchg
add
inc
inc
cmpsb
nop
inc
sbb
loope
test
jae
adc
sbb
or
and
pop
sbb
adc
mov
xchg
pop
imul
out
sbb
ljmp
jle
cmp
jae
mov
xchg
pushf
xchg
lock
adc
sbb
std
jl
push
mov
fs
popa
outsl
inc
pop
call
ja
xchg
xor
and
subl
or
mov
insb
ja
fiadds
rcrb
jbe
mov
cmpsl
addb
jle
push
inc
or
into
add
dec
pop
pop
imul
add
pop
add
add
lea
mov
fmull
sub
inc
mov
pop
mov
sub
add
cmpsl
or
ja
push
sub
cmp
jb
mov
cmpsb
sarl
aam
js
rclb
movsb
jg
sub
or
add
stos
pop
out
pop
dec
xor
xor
jae
or
xchg
and
mov
addl
movsl
sbb
test
sbbb
addb
js
pop
pushf
popa
fmuls
pop
mov
push
test
cmp
add
add
dec
jae
cmp
adc
fdivl
xchg
push
nop
xchg
loopne
xor
inc
dec
lcall
cmpxchg
pusha
flds
jo
mulb
insb
fstps
sub
sbb
inc
pop
add
or
or
and
adc
into
lcall
or
sub
lock
and
add
into
stc
adc
int3
mov
add
sbb
dec
sub
sub
insl
fistpl
sbb
xor
testb
lods
sbb
sbb
mov
fwait
sbbl
jb
fists
test
xor
loop
xor
cmp
stc
fadds
or
push
lods
cmp
neg
mov
push
insb
sub
loopne
insb
mov
push
or
mov
ljmp
xchg
mov
mov
mov
mov
xchg
cmp
ret
test
cmp
add
jne
inc
add
lea
sub
mov
jge
nop
lds
push
test
cmp
in
icebp
mov
sbb
push
mov
mov
pop
sbb
jbe
les
mov
add
mov
sub
add
push
xchg
jno
test
jle
sub
lock
dec
dec
push
jb
lea
add
mov
jnp
or
cwtl
jp
add
cli
in
inc
icebp
sbb
fisttpl
push
movsb
cltd
add
xor
in
inc
enter
xchg
mov
sahf
add
je
mov
add
sbb
mov
or
pop
stos
sbb
lcall
ljmp
xchg
lea
pop
push
sbb
pop
icebp
add
orl
pop
mov
jmp
mov
fdivrl
ja
xor
mov
cwtl
adc
dec
xchg
jns
and
sbb
insb
xor
lcall
or
or
push
out
mov
and
js
jp
add
ljmp
push
inc
out
push
jns
mov
xlat
push
push
mov
mov
add
pop
mov
lods
add
xchg
popa
pop
aas
add
jo
add
test
aam
popf
sbb
push
mov
sbb
or
mov
mov
push
pop
add
cmp
je
cmp
je
cmp
sbb
cmp
je
push
je
arpl
push
in
or
loopne
sar
in
popa
mov
adc
add
push
mov
add
faddl
movsb
push
outsl
jae
insb
ret
pop
mov
fadds
inc
hlt
cli
in
push
mov
cmp
in
ret
adc
inc
shrb
mov
je
pop
dec
sbb
test
jecxz
hlt
mov
add
lds
inc
push
in
test
adc
lret
xor
adc
jo
movsb
jl
pop
lock
xor
dec
mov
pop
enter
sub
out
jns
adc
in
mov
ljmp
adc
sub
movsl
mov
pop
and
nop
push
push
add
pop
pop
xchg
pop
push
add
outsl
mov
int
sub
jns
pop
xchg
push
shll
or
add
lods
sbb
inc
mov
loope
xchg
jge
jmp
orl
or
cmp
inc
faddl
inc
xchg
add
rol
push
xchg
xchg
scas
sti
inc
cltd
int3
sbb
insb
lret
loope
mov
add
push
enter
das
stos
lret
jne
daa
push
cmp
jb
mov
cmpsb
push
push
loop
sub
movsb
add
xchg
mov
aaa
nop
in
sub
inc
int3
push
mov
call
and
push
mov
push
test
dec
xchg
std
mov
or
push
cmp
in
cltd
mov
inc
ret
test
and
pop
mov
jl
aam
pop
scas
inc
shll
subl
sbb
js
mov
inc
and
adc
movsl
jo
mov
and
dec
clc
mov
push
push
jbe
bound
cmpsb
mov
and
int3
mov
sub
xor
hlt
sub
and
cmc
sti
and
je
addb
xchg
push
test
or
add
fsubl
aaa
or
int3
mov
add
jb
stos
and
push
adc
sbb
into
mov
mov
les
int
out
rcll
adc
push
adc
jge
inc
imul
xchg
add
mov
jbe
or
aaa
cmp
outsl
lahf
xchg
and
cmp
mov
and
mov
sub
xor
insl
inc
in
adc
mov
sub
imul
dec
aam
jmp
in
sub
adc
or
inc
fdivs
aad
and
or
call
mov
add
je
mov
xchg
dec
sub
mov
aaa
loope
sub
pop
and
push
sub
push
xchg
lcall
inc
test
inc
add
les
sub
add
jae
cmp
fwait
inc
jge
jge
dec
jmp
mov
or
adc
movsl
add
xchg
or
xor
xor
in
add
mov
fcomp
aam
fisubrl
cmp
jge
or
xchg
adc
add
inc
or
std
add
adc
add
mov
and
push
sarb
clc
les
cs
stc
call
pushf
cltd
pop
in
mov
pop
mov
adc
sbb
add
cmp
add
pop
and
sub
dec
clc
aam
mov
inc
lods
out
faddl
dec
xchg
or
int
mov
adc
push
sahf
sbb
push
push
xchg
ss
outsb
pusha
jp
or
sbb
pop
xor
dec
test
and
aam
std
pop
add
jne
xor
clc
xor
test
mov
pop
clc
pop
mov
roll
es
add
adc
jo
test
mov
push
out
xchg
ficomps
pop
movl
ljmp
mov
mov
add
push
cmp
nop
roll
mov
or
testl
dec
cmp
repz
push
inc
adc
sbb
fistps
pop
add
push
das
or
push
add
xor
loopne
mov
push
fs
dec
mov
movl
rolb
clc
pop
test
or
xor
add
or
ret
aas
ljmp
mov
sub
push
jecxz
or
mov
inc
movsb
jo
jb
jae
push
lret
pop
ljmp
cmp
push
jmp
jno
or
cmp
or
pop
add
adc
ret
inc
or
test
subl
adc
orl
js
sar
adc
add
orl
push
jl
testl
sub
sub
jge
dec
dec
into
or
ret
cld
imul
sbb
sar
icebp
fcoms
stc
push
adc
dec
cmp
pushf
in
das
popa
dec
push
imul
fldenv
inc
inc
leave
sub
dec
mov
out
inc
idiv
adc
jge
jne
cmp
jne
int3
jnp
inc
push
sbb
pop
loope
mov
and
and
jnp
lock
or
or
call
mov
push
dec
ja
add
or
cmp
es
adc
cld
out
push
xor
pusha
or
inc
mov
mov
mov
push
push
incb
add
jmp
push
jle
mov
push
pop
jnp
and
pop
cs
dec
insl
pop
xchg
inc
test
jo
js
mov
stos
sub
and
rcrb
test
xor
mov
add
sbb
inc
dec
movsb
inc
into
sub
inc
mov
xor
mov
sub
stmxcsr
pushf
pop
adc
push
sbb
push
adc
ss
xor
stos
sub
mov
lods
pop
loopne
leave
pop
xchg
jle
sbb
rclb
mov
sarb
push
mov
pop
add
pop
cmpl
mov
jmp
sub
push
sub
push
push
push
push
sti
cmp
mov
push
push
inc
add
int3
dec
sbb
inc
adc
dec
sbb
or
in
jnp
push
or
pop
shlb
ja
dec
mov
pusha
test
shr
xchg
xchg
scas
mov
out
sub
pop
fsubr
inc
cmp
inc
add
inc
shlb
push
stos
sub
push
dec
push
jl
xor
add
jmp
movb
adc
hlt
inc
jmp
dec
imul
inc
xor
sub
sbb
dec
cmp
or
and
fildl
or
pop
aam
mov
or
push
cmp
push
aad
and
les
sti
adc
pushf
add
stos
jb
cmp
sahf
mov
add
push
aas
rcll
add
testl
adc
clc
jo
and
jnp
sbb
movsb
mov
fst
ret
mov
outsb
dec
in
mov
iret
cmp
sbb
inc
rcl
sub
fstl
and
hlt
aas
jecxz
jle
test
cmp
sbb
push
call
push
cmpsb
add
push
mov
fdivrs
mov
mov
xor
aad
aad
adc
sbb
sbb
add
and
or
sub
pop
sub
das
test
or
cwtl
mov
push
addl
lds
inc
inc
jecxz
inc
inc
dec
outsl
push
or
outsl
ret
push
out
pop
mov
push
enter
ja
lea
lret
mov
push
jne
or
int3
sti
or
test
test
rclb
push
add
or
mov
adc
sbb
stos
mov
aas
lock
and
orb
dec
call
fisttpl
sub
jcxz
insl
mov
dec
jo
shl
jno
mov
dec
mov
or
adc
add
cmpb
adc
lock
xor
or
adc
adc
jle
sbb
pop
gs
arpl
add
or
mov
jmp
push
cmp
dec
add
and
mov
movsl
pop
in
popf
cmp
cmpsl
dec
xchg
mov
mov
xor
adc
xor
lea
or
or
lret
xchg
test
scas
inc
inc
xor
inc
jo
sbb
bound
imul
popa
fsts
pop
xor
sub
into
adc
cmp
mov
popa
adc
adc
mov
orl
add
cli
adc
into
jle
mov
stc
cmp
and
sub
test
add
or
mov
sbb
add
inc
xor
scas
mov
pop
xor
add
mov
cmp
push
lret
jo
ret
pop
outsl
insl
sbb
es
mov
stc
inc
sub
call
add
arpl
and
divl
nop
push
mov
jnp
or
jmp
jl
push
mov
or
adc
pop
or
and
arpl
adc
push
cmp
andl
push
in
inc
xchg
jno
xorb
mov
mov
or
test
dec
sub
and
pop
clc
push
insl
pop
inc
cmc
mov
mov
sbb
adc
test
add
add
nop
test
xor
mov
add
mov
pop
add
xchg
sbb
add
mov
iret
lahf
fmull
xor
ljmp
loope
push
and
sub
shll
shr
icebp
int
add
dec
movzwl
dec
pop
cmpl
push
setl
cmova
shr
mov
push
imull
push
push
add
lods
mov
and
ret
shll
push
inc
add
repnz
inc
sahf
inc
mov
jl
add
jb
sbb
xchg
add
dec
add
repnz
push
push
cmovbe
inc
cmp
mov
push
lahf
jmp
push
adcb
jne
rcl
pop
sbb
jle
push
jne
loopne
mov
or
xor
xor
in
push
fs
test
arpl
cmp
xor
sbb
pop
sbb
inc
and
or
adc
push
adc
mov
sbb
cmp
xor
push
inc
pop
insb
cmp
int
add
test
and
jb
pop
pop
mov
inc
mov
push
push
push
jecxz
nop
dec
pop
jmp
and
xchg
adc
add
or
scas
push
add
xchg
adc
mov
mov
repz
dec
push
mov
xor
cmpsb
jne
sub
adc
and
insb
xchg
xor
inc
ds
xor
xchg
cmp
push
push
push
push
cmc
xor
cmp
lock
rorl
mov
add
vphadduwd
das
or
lds
mov
lds
es
leave
and
cmp
inc
mov
dec
adc
das
push
lea
xor
sub
pop
sbb
push
stos
dec
jae
dec
xor
pop
js
ret
inc
add
mov
aam
push
mov
adc
mov
push
push
cwtl
and
push
lea
sbb
mov
pop
ficomps
dec
xor
add
or
and
mov
pusha
fcmovne
fwait
add
push
ret
inc
fadds
test
jno
push
les
ljmp
aas
and
pop
leave
xchg
mov
xchg
mov
lds
aad
nop
out
xor
cmpsb
fisubs
or
ficompl
sub
xchg
cmpsb
pop
je
and
adc
push
or
enter
inc
test
xor
xchg
clc
push
stos
jle
add
xor
cmpsl
mov
or
pushl
adcb
pop
add
push
mov
cmp
lock
mov
jmp
mov
ja
aad
inc
jo
mov
sub
jecxz
sbb
out
outsb
push
xchg
and
mov
inc
orb
push
xor
cmp
xchg
cmp
in
or
push
dec
push
inc
repz
and
and
xchg
or
dec
rcrb
inc
mov
les
adc
xor
cmp
mov
xchg
sbb
cmp
lcall
fistps
xchg
add
in
xchg
push
je
jecxz,pn
push
lret
imul
or
push
add
dec
xor
inc
pop
or
pushf
and
mov
jnp,pn
add
add
pop
sub
movsb
or
or
sbb
add
inc
add
sbb
add
cmp
test
in
xor
xchg
dec
adc
fs
jo
xchg
leave
sub
call
mov
fisubrl
fisttpll
adc
sub
ss
lds
add
xor
add
cmp
sub
pop
jbe
cmp
test
sbb
inc
push
subl
test
mov
cmc
ljmp
jecxz
mov
inc
pop
sbb
jmp
sub
add
bound
add
pop
mov
sub
dec
ret
add
sbb
pop
aam
loope
mov
jno
repz
or
pop
push
sub
sbb
inc
cmp
cmp
sub
push
lock
xlat
orb
push
cmp
cmpsb
pop
dec
sub
jne
jne
dec
jecxz
cmpsb
iret
add
jmp
nop
adc
repz
and
pop
pop
mov
fsubrs
shrb
fmuls
ja
push
imul
jg
jo
xchg
ret
cmp
dec
loopne
dec
inc
sbb
dec
mov
sbb
cmp
xchg
push
or
add
add
mov
in
inc
add
dec
ljmp
or
test
sbb
fwait
push
jl
aaa
pop
and
js
arpl
and
js
pop
push
adc
fwait
mov
call
or
ret
or
add
or
mov
into
fs
in
push
xor
push
sbb
or
or
lods
and
loopne
adc
call
add
js
inc
lds
test
dec
xor
adc
std
sbb
sub
loope
inc
inc
loope
scas
js
xlat
push
es
cs
or
bound
adc
arpl
test
mov
jb
xchg
add
cmp
push
insb
ret
mov
push
aaa
stos
inc
cwtl
pop
jno
sti
mov
enter
push
inc
inc
mov
dec
or
add
invd
jb
sub
sahf
inc
lret
and
cmp
enter
adc
cmp
jns
add
push
dec
mov
inc
pcmpgtd
pop
jb
push
dec
inc
dec
or
mov
fstl
fisubrl
inc
jmp
in
push
or
add
add
adc
add
enter
xor
push
push
xor
push
push
mov
adc
shlb
pop
push
inc
divl
bound
pop
cmp
pop
mov
or
fiadds
mov
push
cltd
nop
out
dec
dec
push
xor
fdivs
inc
sub
push
sub
sahf
imul
dec
xor
sahf
or
pop
push
adc
cmp
xchg
or
push
xchg
subb
movl
adc
add
jle
loopne
stos
mov
int3
adc
in
dec
pop
cwtl
inc
push
add
in
pop
push
push
pop
push
add
sbb
mov
or
inc
adc
popa
push
insl
shll
fcomps
xor
aam
add
push
push
push
aam
mov
pop
add
loopne
adc
xor
inc
add
inc
sahf
sub
mov
pop
enter
jo
mov
sub
push
cmp
aas
lea
sub
jg
cmpsl
push
rclb
or
lret
inc
movsb
int3
cli
mov
repnz
cmp
inc
das
incl
movsb
inc
and
dec
add
add
nop
adcl
sub
mov
test
xor
push
mov
dec
les
inc
ja
pop
dec
cs
aam
lea
xchg
and
jmp
dec
loopne
jo
pop
add
xorl
test
adc
fstpl
push
inc
cwtl
add
icebp
push
pop
sbb
enter
adc
push
add
pop
ret
and
push
pop
pop
adc
push
adc
add
jle
jmp
xor
add
aas
nop
sub
jbe
int3
ljmp
ffree
adc
cmc
jecxz
push
mov
add
punpckhwd
and
pop
sbb
push
add
arpl
cmpsl
sbb
and
push
or
jg
mov
mov
push
orl
movd
das
loop
out
or
cmp
fimuls
add
stc
xchg
movsl
add
add
js
or
popa
add
sarl
or
incb
xchg
add
pop
jge
loop
idivl
adc
in
rcl
xchg
push
or
rol
mov
fbstp
adc
sbb
inc
sbb
adc
adcb
cmpb
dec
push
mov
mov
push
js
pop
fisubl
movzbl
push
push
sub
or
add
repz
add
adcb
pop
std
inc
dec
aas
aam
sub
pop
jmp
push
int3
or
sub
rcl
add
arpl
or
mov
mov
out
mov
lret
call
mov
or
pop
sbb
mov
jmp
pop
and
xor
add
ret
jl
sbb
sub
mov
pop
sbb
push
push
mov
inc
loopne
xchg
sbb
jo
ret
div
sub
pop
mov
cmp
sbb
ss
inc
dec
push
out
test
rclb
aaa
or
mov
or
pusha
pop
or
movsb
sbb
test
adcl
fstl
sub
sbb
push
inc
pop
and
xchg
rcrb
mov
jl
mov
add
sub
loope
call
mov
adc
cmp
push
jl
ds
cmp
xor
mov
cmp
pushf
push
test
xor
lcall
sahf
into
add
add
cld
mov
insb
cmp
loopne
mov
stos
out
lea
dec
mov
push
xor
in
add
gs
mov
sbb
adc
jl
out
mov
seto
aaa
notl
inc
loop
or
cmp
dec
jmp
mov
sahf
cwtl
jne
dec
or
or
movsb
add
mov
push
adc
dec
push
add
ret
gs
leave
sub
or
add
das
or
xchg
mov
popa
mov
cmp
ds
sbb
fiaddl
in
push
movsl
mov
add
xchg
out
ud1
in
pop
loope
adc
sub
mov
jno
pop
lcall
ljmp
xor
mov
or
out
and
pop
lcall
xchg
and
cmp
lea
bound
jb
fmull
ret
push
add
mov
add
xor
pop
and
push
enter
jl
fadds
jno
fldcw
movzwl
xor
inc
fldcw
xchg
ds
stos
pop
add
outsb
push
or
adc
popa
loope
aad
inc
cmp
or
cmp
xchg
dec
push
outsl
inc
mov
inc
and
adc
pop
sub
add
cmp
jb
xlat
inc
loopne
xchg
inc
push
sub
test
and
shrl
aam
shl
xchg
add
adc
js
push
sub
push
ss
outsl
push
icebp
in
mov
out
push
mov
pop
cs
add
add
call
inc
in
pop
cmp
pop
xor
dec
or
sbb
inc
or
fcompl
cmp
cmpsb
lods
mov
sbb
or
out
insb
call
sub
add
pop
lret
outsl
add
add
rorb
sbb
mov
mov
sbb
sub
push
jns
push
mov
pop
mov
pop
out
fildl
ljmp
sbb
flds
flds
cmp
js
lds
or
fmulp
lret
leave
jmp
pop
mov
fldcw
fmuls
pushf
outsl
jne
push
sbb
sbb
popa
pusha
jg
jae
adc
fdecstp
xor
xchg
pop
rolb
stc
je
std
add
lahf
movl
and
adc
and
clc
or
repz
cmp
jne
pop
cmp
mov
push
or
lret
xchg
loope
or
xchg
pop
inc
clc
into
loopne
repnz
pop
cmp
adc
daa
lods
add
add
add
jecxz
inc
push
add
sbb
outsl
gs
insb
std
sbb
push
icebp
jge
mov
jmp
xchg
cmc
dec
or
or
mov
jmp
mov
sarb
pop
adc
mov
cwtl
stos
frstor
cmc
add
cmpsl
adc
test
repnz
add
push
push
scas
add
data16
push
push
and
pop
pusha
and
add
daa
xor
shl
test
xor
add
cmp
mov
push
call
aaa
adc
int3
inc
cld
and
ds
aam
addb
sub
push
jb
adc
lds
daa
icebp
out
adc
int3
adc
xor
fiaddl
inc
xor
pop
sahf
or
punpckhdq
pop
js
lock
adc
xchg
cmp
jmp
xor
adc
or
stos
subl
call
or
xor
imul
sbb
jne
push
push
cld
shlb
imul
sbb
pop
add
jae
aas
inc
push
fsubrl
cltd
push
jae
out
ss
add
adc
sub
or
mov
cmp
pop
jmp
fbld
sub
cmpl
push
call
jge
arpl
cwtl
popf
mov
xlat
out
or
xchg
add
push
rorl
and
ds
lock
jge
xor
or
adc
add
movq
or
fadds
addb
push
inc
push
mov
bnd
out
or
jl
cmpl
cmp
sar
xor
inc
sbb
ds
add
mov
test
or
popa
or
mov
dec
fsts
pop
push
mov
push
push
call
sbb
imul
outsb
jmp
push
cmpl
imul
xor
lock
call
or
pop
sarb
ret
cltd
and
ret
mov
mov
mov
jmp
or
xchg
jp
dec
int3
test
mov
gs
add
pop
jecxz
mov
clc
push
push
adc
mov
daa
mov
ds
push
in
or
xlat
ret
adc
adc
adc
adc
sub
sbb
cmpsl
scas
jo
push
jmp
andl
leave
in
sbb
cmp
push
push
je
mov
push
sbb
pop
jmp
pusha
or
and
lock
jo
mov
add
inc
test
and
push
sbb
cmp
ret
in
pusha
jnp
sti
push
push
les
incl
je
jmp
sub
cmpsl
add
sub
popa
outsb
pop
subb
push
add
jle
mov
pop
je
aad
sub
popf
add
dec
and
sub
inc
xlat
pop
add
sbb
inc
roll
xchg
dec
lock
adcb
daa
rcll
inc
or
inc
xchg
pop
aam
cmp
stc
popa
ret
call
ds
ja
or
jmp
jp
xchg
xor
ret
mov
xor
roll
and
sbb
sbb
adc
push
aad
and
pushf
mov
stos
imull
push
loopne
repnz
add
or
and
faddl
jl
sbb
pop
in
xchg
es
mov
push
loopne
push
ljmp
xor
nop
adc
js
push
add
push
push
mov
hlt
out
push
fcmove
cmp
inc
addr16
cmp
fstps
ljmp
int3
stos
push
add
test
aam
cmp
mov
test
or
mov
mov
lock
subl
mov
insl
movsb
lock
jb
sub
bound
sti
jno
push
push
mov
sub
jne
dec
pop
add
mov
cs
mov
add
in
rolb
dec
add
repnz
test
add
stc
clc
jbe
adc
add
or
add
jno
data16
jge
xchg
flds
inc
das
mov
sub
ja
inc
sub
push
ficompl
lret
iret
dec
movb
mov
cwtl
nop
or
pushf
ja
pushf
sub
repz
or
rorb
xchg
shlb
mov
sub
xchg
js
push
ss
pop
push
adc
imul
clc
mov
xchg
push
fiadds
jl
and
push
mov
pusha
jg
push
mov
pop
ret
rcrl
adc
neg
sub
fst
or
push
shll
sub
and
inc
cmpsl
in
movsb
stos
jmp
popf
imul
add
cmp
push
dec
outsl
ja
into
jae
clc
call
je
lods
push
fstps
add
bound
cwtl
xor
clc
sub
mull
imul
or
add
cmp
mov
add
pop
push
mov
fldt
and
out
push
idivb
mov
mov
mov
pushf
sub
test
loopne
dec
test
mov
cmc
ljmp
in
in
dec
jecxz
push
fwait
pop
cs
push
adc
aam
add
test
xchg
aas
testl
ljmp
cmp
or
mul
xor
pop
push
jle
add
push
sbb
jb
rcll
int3
test
hlt
push
jne
cmpb
test
je
pop
push
cmpsl
mov
pusha
jns
push
xor
loopne
jmp
adc
add
shrb
in
adc
sub
sbb
dec
and
mov
pop
aam
inc
xchg
add
scas
inc
sbb
js
push
addl
sub
je
dec
pop
push
add
jge
rcll
loopne
push
xor
mov
mov
push
inc
rorl
sahf
inc
cmp
sub
test
aad
sbb
push
sbb
add
push
pop
cmp
shll
pop
je
and
jo
mov
and
sbb
or
inc
or
xchg
or
sbb
rcrb
les
dec
loope
push
or
cmpsb
mov
lret
mov
daa
fs
add
add
fimull
les
mov
push
push
imul
add
add
dec
insb
sbb
icebp
addb
xor
loopne
or
xchg
jnp
mov
pop
cmp
mov
and
or
sub
out
mov
loopne
pop
cli
sarl
inc
loopne
cmp
adc
das
adc
or
popa
xor
int3
add
mov
or
xlat
mov
inc
lahf
arpl
push
jb
rol
jl
dec
inc
xchg
pop
lock
push
dec
je
push
pop
inc
sbb
pop
pushf
js
adc
test
pushf
jns
mov
jp
in
nop
and
sbb
rcll
dec
xchg
rclb
mov
nopl
out
rolb
jo
mov
leave
and
mov
pop
xor
add
or
sti
icebp
mov
arpl
fs
jne
or
in
hlt
or
add
push
aam
adc
rorl
push
xor
insb
mov
out
stos
int3
xchg
xor
fnsave
shll
in
ja
ja
and
scas
xchg
por
std
in
out
mov
mov
xor
divl
cli
jo
test
nop
sbb
cli
pop
push
and
or
js
and
shlb
jne
mov
std
mov
stos
dec
mov
rcr
cmp
pop
push
jno
pusha
push
enter
clc
cmp
xor
insl
jne
cs
add
push
repz
mov
dec
push
das
iret
push
push
je
inc
or
loop
in
push
or
and
jle
cmp
lahf
imul
inc
xor
sbbb
cmp
scas
leave
jno
cmp
dec
push
jo
mov
dec
mov
fbstp
cmp
inc
pushf
rcrb
mov
cmpsb
mov
and
dec
jl
or
fidivs
push
or
sbbl
daa
cmp
je
push
mov
sub
xchg
aam
cmp
adcl
push
movb
stos
popf
sub
das
sbb
aaa
scas
sub
add
call
pop
jb
push
push
adc
xor
mov
mov
push
fcoms
dec
xchg
outsl
and
pop
push
sbb
cmp
push
sbb
push
sub
jo
adc
xor
xor
out
out
push
push
test
mov
add
push
ret
mov
sbb
leave
mov
or
dec
loopne
adc
les
pusha
sar
in
push
mov
mov
outsb
iret
add
lods
push
mov
push
mov
mov
cli
add
cmp
lret
push
mov
inc
or
or
jbe
adc
out
jmp
xchg
xchg
outsb
hlt
add
inc
push
xchg
push
mov
mov
xchg
testb
sbb
js
mov
aam
les
mov
adc
mov
test
cmp
shll
insb
jo
shlb
js
iret
iret
movsl
cltd
fmuls
fsubr
mov
xchg
cmpsb
cwtl
mov
or
push
mov
inc
int3
stos
imul
fwait
inc
mov
scas
sub
lcall
pop
les
idiv
into
xchg
add
xchg
int
adc
cmp
mov
and
ret
pusha
movsl
sar
mov
mov
and
push
fdivs
and
cmp
sbb
add
and
jo
push
fs
jae
add
push
cmp
jbe
dec
sub
add
enter
xor
or
sub
pop
sbb
cmp
jne
adc
and
imulb
push
mov
jo
js
pop
push
xor
push
add
loopne
shl
add
dec
pcmpeqw
stos
in
adc
ret
imul
xor
sbb
pop
lods
jge
pop
mov
jne
cs
mov
pop
js
lret
sbb
pop
xor
push
xor
cs
push
add
ror
test
pop
jmp
shll
push
dec
rcrb
xchg
js
xor
sub
add
lods
ja
push
jle
shll
mov
mov
or
mov
mov
fcomps
mov
ja
sbb
push
adc
pop
js
add
mov
shl
mov
les
adc
pusha
rcrb
mov
add
pop
decl
outsb
and
rol
ljmp
add
xchg
jbe
xchg
add
add
test
xchg
jl
jne
mov
lock
and
add
or
adc
jne
adc
lret
push
mov
iret
notb
ret
scas
shrl
cmpsl
fisttps
aas
fstpt
fnstcw
adc
pop
add
and
adc
mov
mov
incb
leave
dec
ja
repnz
out
add
cmp
divl
iret
cmp
ja
sbb
in
stc
xchg
mov
nop
fcmovnbe
cmp
fnstenv
rolb
mov
stc
push
adc
lock
xchg
and
sbb
ss
push
stc
push
push
push
je
icebp
jne
leave
cmpsl
jge
xor
ja
out
mov
pop
lahf
sub
mov
pop
or
add
push
mov
ja
mov
jp
add
add
push
cltd
fucomp
jbe
je
ret
adc
shrb
ljmp
jns
xor
push
mov
clc
xchg
jbe
add
mov
movsl
cmp
or
jg
stos
ljmp
fldl
ja
dec
xchg
add
add
lret
jne
xchg
pusha
jle
or
or
push
push
mov
dec
inc
rolb
pushf
adc
push
inc
xchg
add
outsl
or
out
popf
sti
cmp
adc
pop
push
push
or
in
fmuls
dec
icebp
inc
cmpb
ret
aas
mov
enter
xchg
jmp
call
inc
lods
inc
pop
xor
adc
sbb
sbb
icebp
fmul
pusha
add
or
jo
pushl
mull
sbb
fisttpll
dec
xor
lock
add
nop
jnp
dec
notl
xchg
inc
js
shlb
sbb
lods
mov
daa
add
sub
test
mov
xchg
inc
inc
pusha
insb
insb
cmp
fs
dec
sub
adc
lcall
ret
ja
inc
arpl
sub
sbb
adc
je
cmp
je
sub
ret
imul
add
mov
and
cmp
je
lods
dec
xchg
jbe
adc
imul
push
sub
inc
dec
add
lds
xchg
jmp
lea
fdivr
repnz
dec
inc
xor
lock
andps
jne
lock
pop
and
cld
rorl
cmpsl
sub
push
filds
push
push
adc
and
xor
add
into
cmp
fs
pop
out
dec
xorl
movswl
jbe
sar
jnp
mov
into
add
push
mov
lods
mov
into
lea
mov
sub
test
testb
xchg
mov
je
pop
outsl
leave
rcl
mov
setl
sbb
sbbl
jp
push
xor
sub
add
and
sub
mov
xor
or
inc
mov
add
repz
dec
addb
call
inc
pop
and
inc
sbbl
sub
jns
adc
push
imul
push
xchg
sbbb
jne
cli
xchg
pushw
mov
mov
inc
mov
cs
add
mov
jmp
popa
insb
cmp
popf
divb
mov
and
xor
mov
cltd
or
xchg
sbbl
mov
push
rcrb
pop
push
movsb
and
pop
lock
sarb
fwait
sbb
push
inc
or
xchg
mov
push
and
dec
push
lea
push
pop
cwtl
push
adc
and
lea
mov
sbbb
lret
push
or
add
lret
adc
test
pushfw
xchg
fcoms
cli
add
icebp
les
out
xchg
pop
xor
pop
addb
push
xor
or
xchg
ljmp
push
jb
nop
bound
call
fisttps
jns
and
pusha
dec
sbb
imul
addl
mov
out
std
mov
sbb
or
cmp
loopne
and
adc
pop
pop
clc
pop
and
jbe
inc
sbb
bound
scas
sti
cmp
je
aaa
jns
jle
pop
cli
in
or
test
jge
mov
mov
loopne
sbb
xor
sti
add
dec
and
pop
xchg
cmp
mov
pop
jne
push
add
inc
ljmp
mov
adc
and
or
fcompl
cmp
orl
sbb
and
push
pop
in
fdivs
jecxz
lock
icebp
or
adc
xchg
cltd
icebp
adc
in
cmp
jo,pt
jmp
repz
mov
xchg
lret
pop
push
push
pusha
dec
lock
mov
add
pop
add
cmp
cmp
adc
sbb
or
xchg
cli
dec
xchg
adc
cmp
pop
adc
mov
sbbb
push
mov
cmc
adc
cmp
mov
and
ja
int3
shrb
adc
cmc
add
sti
fwait
pop
fs
rcrb
or
mov
ffree
xor
pop
mov
movsl
imul
cmp
sbb
out
push
pop
adc
test
or
es
out
jo
push
cli
pop
fwait
js
or
mov
aaa
mov
xlat
push
rolb
xor
aad
popa
mov
and
testb
mov
mov
das
inc
cmp
jmp
loope
sahf
mov
ss
push
stos
push
js
aaa
fadds
and
cmp
mov
movzwl
sub
jne
ljmp
inc
lcall
push
fmuls
jns
je
or
cs
or
push
dec
mov
cmp
push
adc
ljmp
je
repnz
push
cmp
shlb
xchg
sbb
fs
push
orb
adc
out
movb
pop
and
leave
lcall
add
inc
pop
xchg
ljmp
addr16
les
adc
pusha
out
test
and
mov
stos
sbb
loop
or
or
sbb
mov
sbb
sti
and
cli
cmpsb
mov
mov
icebp
inc
add
orb
or
ret
mov
imul
nop
dec
jne
aas
shrl
sbb
sbb
adc
call
movsb
sub
mov
mov
mov
push
pop
push
mov
es
sub
jo
inc
xor
pop
mov
jle
and
std
ljmp
jl
sbb
xchg
jnp,pn
and
rdmsr
daa
aaa
fcmovne
sarb
push
jo
jmp
xchg
mov
mov
xor
call
icebp
and
mov
xlat
adc
pushw
push
inc
test
nop
push
mov
gs
mov
test
add
xor
xor
popa
adc
or
es
inc
push
and
xchg
in
or
mov
mov
add
add
pop
add
push
std
outsw
repz
and
fbld
mov
xchg
in
sub
sub
pop
pop
jb
bswap
or
mov
sbb
push
cmp
ret
sbb
xor
xchg
cmp
jo
adc
je
add
cmpl
insl
inc
insb
js
shll
xor
adc
cwtl
rorb
and
xor
add
or
adc
test
add
jle
mov
pop
inc
xchg
dec
adc
andl
adc
pop
inc
pop
inc
adc
push
or
lret
inc
outsb
jecxz
push
lds
sbb
inc
jmp
pushl
xchg
mov
pop
mov
iret
call
inc
lea
push
or
cmc
ss
jbe
loope
or
rcll
cmpsb
insl
ss
inc
or
mov
sub
push
inc
notb
sbb
ret
jns
inc
push
fbstp
add
mov
jl
orl
and
cmpsb
adc
pop
cld
and
push
jmp
outsb
inc
or
xlat
loopne
jecxz
fistpll
mov
dec
xor
pop
or
mov
dec
outsb
mov
fadds
cmp
in
lahf
xchg
xorb
add
and
ljmp
adc
test
mov
and
inc
push
cmpsb
sbb
cmp
scas
mov
adc
test
push
mov
in
push
add
jle
jl
dec
cmp
pop
jecxz
sbb
jl
adc
push
mov
adc
sbb
add
js
add
add
cmp
insb
dec
dec
adc
mov
push
inc
adc
sbb
and
cmp
add
fdivs
lods
mov
addl
push
repnz
pop
fisttpll
cmp
pushf
xor
lock
out
jns
movb
test
loop
or
mov
incl
dec
iret
cmp
cmp
cmp
mov
imul
ret
jle
add
testb
je
and
out
dec
add
and
icebp
xor
andl
in
loope
xor
xchg
push
sbb
movzbl
pop
in
imul
add
mov
xchg
push
mov
push
scas
push
repnz
lahf
sbb
cmpsl
inc
add
dec
add
mov
movswl
add
fisubrl
push
lea
xor
inc
add
shll
add
rolb
or
pop
nopl
lock
mov
test
mov
dec
dec
rolb
inc
push
cltd
scas
xchg
push
cmp
fists
mov
dec
sbb
cmp
sbb
push
adc
or
push
push
movhps
mov
sbb
push
push
dec
push
mov
dec
shlb
and
add
inc
mov
add
xor
mov
pop
lcall
pushf
pushfw
inc
xlat
adc
aam
mov
pop
mov
test
rcl
mov
or
inc
push
mov
pop
adc
pop
pop
add
sbb
cli
pop
into
orb
aaa
dec
push
jo
jmp
xor
imul
push
sbb
mov
stos
scas
adc
imul
sti
sub
cwtl
pop
lods
insb
mov
insb
mov
cwtl
mov
or
mov
adc
or
into
jne
or
lea
jp
mov
add
or
add
leave
pushf
cmpsb
jnp
dec
mov
dec
icebp
add
insl
mov
gs
cwtl
lcall
test
xchg
and
aaa
push
sub
sub
addl
and
add
daa
cmp
je
push
xchg
arpl
add
movsb
adc
int
es
loope
fldl
xchg
retw
adc
pushl
push
call
rorb
aad
sbb
jl
add
test
movsb
pop
or
push
out
clc
test
lea
mov
xchg
sub
jo
insl
xchg
into
enter
sub
push
xor
rclb
push
mov
cmc
pushf
test
enter
or
inc
or
ds
cmpsl
mov
fdivl
pop
xor
adc
sub
xor
sbb
mov
xor
pop
jae
mov
add
add
or
sub
cmc
ja
or
outsl
or
pusha
lds
fsts
dec
push
push
pop
pop
jmp
xchg
dec
insb
add
fcoms
xor
test
data16
sub
pop
cmp
xchg
ds
jge
adc
xor
popf
add
xchg
mov
cmp
jne
mov
add
pop
mov
xor
inc
and
add
xor
push
jg
shlb
mov
lods
xor
mov
test
cmp
push
pop
and
sbb
xlat
mov
jbe
xlat
push
movzbl
xchg
and
cli
lock
cld
xabort
clc
dec
add
les
sbb
jno
aas
rolb
adc
inc
insb
shr
inc
add
icebp
xchg
adc
cmp
adc
add
jle
adc
mov
pop
or
jg
sahf
stos
pusha
insb
std
mov
dec
in
push
jbe
or
out
gs
movsb
les
jae
mov
add
jge
sahf
cmp
subl
lock
mov
inc
fiaddl
jl
clc
push
daa
lods
mov
sub
mov
pop
adc
sub
mov
xor
xchg
jne
add
cmp
jmp
dec
cwtl
in
mov
idiv
sub
in
sbb
push
in
lea
push
push
mov
insl
xor
push
pop
push
or
xor
xor
not
and
cs
cmp
inc
add
jns
shl
icebp
or
dec
clc
sarl
pop
jmp
in
pop
mov
movsl
addl
insb
loope
cmp
sbb
outsl
pop
test
xor
ud0
mov
into
inc
add
push
fisubs
inc
xor
or
xor
je
adc
push
pop
lods
add
pop
dec
sub
push
loopne
daa
ss
adc
add
mov
enter
nop
add
push
in
lock
xor
push
sub
push
pop
mov
lea
and
insl
mov
or
dec
nop
pusha
repnz
je
aaa
jbe
js
adc
mov
out
push
loopne
dec
sub
or
and
dec
pop
sub
add
xchg
jg
mov
and
push
in
or
xor
jbe
push
jo
mov
call
cmpsb
mov
cmp
in
xchg
pusha
or
inc
iret
fdivl
mov
ret
arpl
jno
push
pop
pusha
arpl
cmp
aad
popa
xor
and
cmp
mov
or
test
mov
cmpl
subl
push
outsl
xchg
inc
hlt
dec
loop
push
dec
mov
lea
ret
pop
movsb
push
insb
push
fldcw
push
pop
sbb
lods
imul
cwtl
push
push
adc
cmc
add
loop
jae
pop
fs
or
pop
movsl
loopne
inc
fs
fs
hlt
dec
cmp
sub
or
and
adc
sub
pop
hlt
dec
cld
aaa
lret
mov
div
sub
sbb
or
pop
lods
pop
pop
pop
stos
cmp
mov
inc
jne
stos
or
loopne
pop
div
add
mov
lret
mov
setle
or
xchg
aam
or
or
call
loope
push
imul
cmpsb
mov
or
jo
sbb
or
cmp
ds
or
or
xchg
lock
sub
dec
bound
mov
dec
roll
or
sbb
or
sub
jno
not
je
add
shl
inc
mov
testl
add
test
xor
mov
xor
lret
ret
jo
adc
lret
int
push
int3
aam
mov
cmpsb
add
inc
nop
push
insl
jne
pop
adc
imul
fisubl
inc
in
push
push
push
jae
push
push
rolb
cld
xchg
fxch
std
jl
movl
fldenv
or
add
es
dec
xor
js
int
enter
add
movsl
push
push
pop
add
movsb
in
sbb
jo
mov
mov
sbb
test
dec
push
gs
clc
adc
imulb
add
testl
mov
inc
js
rcl
jae
cmpl
mov
push
rolb
andl
cmp
mov
fwait
mov
pop
lods
push
cmc
cmpsl
mov
add
cmp
mov
add
mov
xchg
aaa
adc
jo
xchg
push
loopne
mov
sti
sub
loopne
cmp
lds
inc
mull
xchg
cmp
push
mov
push
in
and
mov
xchg
lock
push
inc
testl
lret
or
push
xor
xchg
in
or
inc
push
push
mov
lcall
dec
xchg
fists
adc
cld
push
or
xchg
mov
in
les
fisttpl
xchg
push
jo
loopne
add
loopne
xor
ret
idiv
les
pop
mov
sbb
aaa
lods
into
pop
jno
pop
or
push
and
inc
popf
adc
dec
data16
stc
jbe
and
out
ret
outsl
or
adc
push
add
sti
dec
ja
je
inc
outsb
or
je
or
sub
xchg
jnp
adc
adc
popl
inc
sarl
in
or
sahf
inc
jl
add
xor
jne
lcall
mov
push
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
inc
cmp
pop
inc
movb
mov
decl
sub
mov
mov
or
mov
mov
jbe
adc
imul
mov
cmpsl
loopne
ljmp
mov
clc
test
cli
gs
xchg
sarb
add
je
and
inc
pop
sahf
or
add
adc
in
ljmp
mov
cltd
and
push
inc
es
sbb
push
rolb
test
les
ret
push
mov
dec
je
sub
call
mov
add
lcall
pop
add
push
jp
loopne
mov
out
mov
or
daa
or
fisubrs
ds
adc
inc
sub
push
pop
popa
mov
loopne
add
lds
or
and
or
pop
cli
dec
pusha
orl
adc
sbb
push
xor
stc
pop
and
xchg
jp
pop
mov
add
push
ss
dec
cli
shll
cmp
movsl
test
mov
mov
rorb
adc
pop
fcoml
popa
add
adc
push
stc
sti
je
dec
or
dec
int3
sub
dec
mov
inc
push
inc
mov
clc
mov
mov
ror
orb
scas
fcomps
and
fadd
mov
loopne
enter
push
push
out
cmp
or
in
xchg
add
sub
js
xor
popa
aam
and
fdivrl
mov
xchg
sub
xchg
adc
loope
cwtl
dec
popf
sub
add
mov
test
les
andb
push
fs
dec
push
cltd
mov
imul
sub
sub
rcl
dec
and
sub
call
xchg
out
add
push
lock
cmp
push
in
mov
call
sbb
add
sub
repz
pop
jge
scas
push
leave
dec
dec
sbb
sub
and
add
out
mov
fcoml
in
cmpsb
movsb
cmp
pop
and
in
movsb
imul
mov
mov
cmp
aam
cmpsb
mov
aas
mov
mov
sbb
pop
and
or
push
in
or
addb
rorb
xchg
idivl
into
and
push
fucomip
adc
ja
inc
rcll
xchg
addr16
fisubl
mov
sbb
inc
dec
mov
int3
cs
add
out
popa
push
icebp
fidivrs
xchg
mov
adc
or
xor
sbb
jmp
xor
movsb
popf
das
xchg
or
jmp
jle
addl
sbb
shl
sbb
rcll
push
sbb
jnp
pop
mov
and
fstpt
push
xchg
mov
outsb
and
pop
mov
scas
adcb
cs
fistpl
les
jmp
or
mov
cmpsb
negb
or
int3
mov
inc
push
jne
lea
adc
int3
subl
in
jmp
pop
in
cmp
in
sbb
xlat
nop
nop
clc
data16
cwtl
mov
adcl
scas
fcoms
push
sub
shll
outsl
shrl
inc
xor
je
and
fucomip
add
add
test
mov
jle
xlat
leave
xchg
xor
mov
pop
and
pusha
inc
add
or
div
or
mov
add
adc
mov
cld
lea
mov
and
in
add
cmp
clc
sub
nop
or
push
or
push
push
repnz
rcll
dec
inc
adc
xchg
lock
mov
dec
push
push
fsubrs
or
cmp
je
notb
or
push
les
xor
test
addb
jo
push
in
add
fmuls
and
shl
call
lret
loopne
dec
pop
incl
mov
xor
jb
bound
xor
shl
inc
inc
inc
or
test
loopne
cwtl
ret
hlt
mov
mov
gs
es
cmp
pop
jp
jg
stos
pusha
or
sar
sbbl
or
dec
mov
cld
lret
lea
rclb
outsl
or
hlt
insl
and
jecxz
and
les
dec
dec
lock
pop
push
push
add
add
dec
adc
add
rcr
xor
mov
xchg
or
mov
push
push
mov
push
pop
cwtl
adc
pop
fs
or
sbb
loopne
int
push
jg
insb
idivl
ret
inc
imull
call
call
push
pop
adc
add
dec
xchg
cmp
mov
out
xchg
pop
dec
cld
dec
or
or
or
in
sub
xor
outsl
shrl
cmp
jg
sti
orb
fcomps
or
ficompl
fadd
dec
or
inc
sub
xorl
mov
push
movsl
inc
psraw
aad
ja
push
pop
lret
xchg
movsb
jns
js
rorl
push
cmp
andb
je
push
jg
jns
dec
arpl
dec
or
call
push
mov
lods
xchg
xchg
shrl
and
push
inc
adc
add
xchg
add
and
rcrb
pop
add
pop
pop
xor
jecxz
dec
adc
add
aad
and
pop
add
sub
and
adc
or
pop
mov
movsl
jle
xor
lods
pop
xor
jnp
movups
sbbb
es
aad
aaa
shlb
movb
sbb
stos
sbb
and
push
adc
add
xchg
xor
ret
xor
mov
ds
inc
jne
stos
outsb
ret
fs
pop
sti
mov
adc
ss
dec
adc
movsl
ret
pop
sbb
bound
insl
xchg
loop
push
inc
xor
rclb
jmp
js
scas
and
adc
and
add
filds
sbb
orb
sbb
push
out
add
call
jecxz
push
test
or
in
aaa
stos
sarl
add
jge
jne
es
xchg
mov
cmp
push
je
jmp
fistl
add
or
cli
call
jb
add
dec
cmpsl
jne
push
adcb
call
jnp
add
lods
adc
or
dec
lret
push
jge
pop
mov
sub
push
fmull
add
and
hlt
add
xchg
add
fwait
std
fnstcw
xchg
rorl
dec
cli
add
pop
je
add
mov
or
push
cmp
rorb
or
add
xor
push
adc
xor
imul
inc
mov
mov
pusha
std
dec
adc
insl
leave
dec
movsb
inc
or
add
adcb
mov
fs
sbb
mov
aam
sub
dec
adc
fiadds
and
push
push
cmp
cmp
push
mov
lea
dec
and
pushf
push
adc
and
cld
push
daa
cmp
adc
xor
push
cld
push
xor
nop
je
sbb
shll
push
jmp
jmp
lret
and
mov
pop
and
popa
shlb
xor
sahf
sub
mov
inc
jno
sbb
add
mov
lock
dec
or
je
dec
out
add
jl
aas
adc
int
sbb
push
pop
lret
add
sbb
pusha
cmp
insl
xor
cmpsb
add
push
fldenv
jnp
sub
sub
push
and
or
push
add
and
repnz
jns
push
push
sub
das
add
sub
das
adc
clc
or
xchg
add
xor
pusha
inc
mov
fnstcw
out
xchg
and
push
push
sub
push
and
push
mov
enter
xchg
push
and
cmp
xchg
sbb
xor
push
lods
pop
push
and
sahf
xchg
inc
scas
cmp
sbb
cmp
inc
repnz
cmp
push
inc
in
add
inc
xchg
or
fmull
cmp
dec
xchg
popf
pusha
add
inc
and
mov
push
sub
dec
in
add
adc
fstpl
inc
ret
push
pop
in
dec
jmp
iret
xchg
adc
add
push
add
xchg
push
push
push
mov
inc
push
jecxz
rol
rcrl
inc
dec
xchg
mov
xlat
and
dec
lcall
std
dec
dec
xchg
clc
push
sarb
pop
or
ret
dec
or
mov
call
ljmp
into
test
nopl
add
enter
dec
push
inc
add
or
dec
mov
and
mov
pop
cli
xchg
pop
jmp
pushl
sub
inc
movsl
sub
lea
jno
mov
insb
pop
lret
dec
loopne
dec
ret
mov
mov
scas
cld
mov
push
pop
and
das
inc
add
movsl
lock
pop
xor
enter
andb
out
push
push
movsl
les
xlat
testb
adc
mov
ret
sti
inc
jecxz
adc
jae
loopne
xor
sub
pop
or
sbb
aas
inc
fildl
je
out
push
icebp
mov
xor
mov
out
repz
add
lea
push
mov
in
stos
pop
sub
call
jns
cs
ror
cmp
testb
lock
jne
orl
push
jmp
pop
inc
xor
xchg
fdivp
or
aaa
clc
lea
mov
add
shll
mov
xor
pushf
pop
dec
dec
and
daa
pop
fdivr
lock
and
sub
jne
pop
sbbl
push
push
mov
daa
or
adc
pop
or
add
xor
push
aam
xchg
mov
fcoml
xchg
or
cmp
sbb
lcall
xchg
les
ficoms
dec
or
inc
dec
cmp
roll
mov
call
test
cmc
popa
enter
xor
stos
sti
add
push
inc
std
dec
sbb
jbe
xchg
dec
clc
push
mov
sarl
test
sub
cld
add
push
and
fsub
pop
es
pop
cmpsb
jns
jne
leave
push
dec
dec
xor
inc
jp
xorl
mov
add
or
xchg
test
xchg
pop
cmp
inc
aad
cmp
or
repnz
adc
stos
and
testb
jb
pop
add
sarb
jbe
ss
xor
push
ss
out
dec
pushl
mov
sub
jbe
je
jno
inc
ja
sub
and
out
pop
cmp
jne
mov
xor
pop
cmp
jge
cmp
loopne
loopne
cmp
mov
push
jmp
shll
mov
sbb
or
add
hlt
add
out
hlt
loopne
jl
repnz
mov
add
clc
add
call
xchg
jg
popa
rcr
mov
sbb
cmp
sbb
sahf
or
shr
sbbb
lock
add
aad
call
adc
pushf
cmp
adc
xor
add
push
in
jle
subl
lock
mov
repz
in
loopne
cmpsl
jno
add
call
sub
in
or
inc
mov
pop
or
jp
fcompl
cmp
xor
js
and
add
xchg
or
and
decl
push
mov
inc
inc
or
or
jno
mov
rorb
xor
jp
call
xchg
stos
movsl
mov
mov
insb
decl
or
push
sub
mov
test
xchg
jo
jns
mov
jge
sbb
jmp
push
inc
jecxz
add
scas
ret
push
or
loop
test
mov
scas
cltd
out
das
cmp
jbe
mov
mov
or
push
lds
add
or
mov
jb
push
popa
and
rorb
into
movsl
imul
inc
pop
mov
and
aaa
test
dec
xchg
sub
cmpsb
dec
cltd
mov
and
mov
test
inc
xchg
inc
aaa
mov
das
or
jle
pusha
inc
dec
dec
stc
add
test
dec
hlt
out
repz
mov
jo
add
mov
out
push
push
cmp
push
sbb
push
pop
adc
jmp
arpl
sub
leave
outsl
pusha
test
inc
out
jbe
mov
pop
or
idivl
shll
adc
push
push
sahf
add
pop
and
iret
mov
or
pusha
fwait
jb
cmp
in
mov
nop
mov
add
cmp
xor
add
xchg
test
xor
sti
push
adc
xchg
sbb
es
sbb
cmp
jb
inc
mov
ret
cmp
pop
or
std
ja
sarl
rdmsr
or
cmp
aas
ja
push
push
push
pop
pop
mov
clc
nop
mov
inc
cmpsl
pusha
xchg
cli
aam
mov
ret
test
enter
cld
push
pop
adcb
mov
decb
inc
or
sub
cmp
js
popa
out
fdivs
andl
cmp
and
push
and
lods
movb
or
add
adc
les
jmp
pop
gs
jb
mov
lahf
add
inc
xor
filds
or
cmp
jmp
dec
leave
mov
xchg
lahf
movsb
inc
inc
aas
or
fsubs
xor
push
add
rolb
or
add
das
rcr
scas
mov
xor
add
xor
xlat
movsb
sbb
pop
adc
push
jne
mov
jne
inc
fisttps
in
mov
ud0
rolb
dec
inc
adc
add
vmwrite
xorl
xchg
sbb
xchg
out
gs
imul
negb
rcrb
sbb
out
movsl
xor
aam
fsubl
incb
push
or
dec
insb
mov
sbb
mov
jnp
scas
xor
jb
inc
loopne
push
insl
scas
add
arpl
or
enter
cmp
jno
pop
int3
js
sub
aad
das
lret
and
in
das
pop
or
dec
jp
xor
dec
pop
in
push
and
or
nop
aam
adc
or
pop
ret
lea
lret
cmpb
cli
rep
mov
adc
add
push
xchg
pop
or
inc
fiaddl
lea
pop
cmp
sub
pop
adc
sbb
imul
les
add
push
jge
mov
dec
lods
jge
or
pop
add
push
pushl
fisttps
jns
out
pop
ret
push
mov
xor
ja
sub
aam
addr16
insl
xor
fiadds
cltd
jne
test
or
xor
fadd
push
popa
xchg
pop
pop
in
lock
dec
and
cmp
pushf
dec
mov
sub
test
xchg
push
or
ret
andps
shlb
cmp
pop
sbb
loop
pop
or
pop
push
adc
fs
cmp
inc
out
or
stos
pop
sbb
clc
je
add
push
sbb
dec
fisttpl
rcrl
cmp
mov
mov
ljmp
cld
adc
faddl
sub
jge
loopne
jns
insb
mov
inc
xchg
pop
incb
push
cwtl
fildl
jbe
sub
lea
testb
mov
cmp
jb
cld
and
pop
dec
and
pop
mov
dec
flds
sub
or
divb
imul
rcrb
call
xchg
inc
adc
mov
mov
and
cld
ret
cltd
jb
push
xor
inc
lock
sbb
inc
je
mov
cli
jp
inc
sbb
rcrb
popf
xchg
pop
cmp
aaa
adc
dec
mov
jnp
mov
jecxz
sbb
test
adc
mov
push
into
insl
sbb
sbb
push
insb
ja
sub
ret
xor
push
cmp
push
imul
ret
nop
inc
or
ljmp
mov
mov
or
dec
ss
mov
les
mov
shr
not
inc
mov
aas
jbe
popl
sbb
out
and
pop
fxch
popa
shll
push
xor
mov
lahf
push
cmpsl
push
sub
ja
enter
lret
outsl
movsb
add
fsub
in
in
add
xor
mov
in
inc
in
clc
dec
sbb
dec
insb
je
cmp
jecxz
into
add
jns
push
push
inc
mov
add
rolb
add
mov
pop
adc
cmpl
xchg
cltd
stos
mov
fmuls
jno
incb
mov
sub
aaa
cmc
dec
or
mov
push
lods
fidivrs
fs
mov
iret
push
subl
int3
rclb
pusha
stc
xchg
jae
mov
icebp
pop
or
adc
xor
push
movmskps
push
or
jmp
pop
stos
cwtl
shl
cmpb
jp
push
je
or
ja
push
xchg
movsb
lock
push
cmp
fldl
into
fcoms
dec
and
jns
shrl
pop
call
sub
mov
or
lret
jge
loope
int3
je
cmp
jae
movsl
add
cmp
dec
add
and
add
dec
popf
cmp
mov
dec
sub
push
push
cwtl
or
adc
sub
lret
xor
xchg
loop
jbe
lret
jne
pop
cmp
js
jecxz
jnp
mov
add
stos
add
sbb
sti
rep
bound
sub
mov
sbb
cmp
jae
addr16
or
cmp
shlb
add
sbb
sbb
arpl
jbe
jnp
and
jne
mov
clc
xchg
aam
inc
push
inc
cld
arpl
les
and
adc
inc
dec
loopne
adc
add
sub
je
inc
sub
add
and
xor
push
xchg
outsb
test
inc
xor
xor
cmp
sub
xchg
testb
push
rol
ljmp
push
mov
dec
repz
andl
xor
xor
or
adc
andl
inc
inc
inc
mov
sub
sub
rolb
sahf
xchg
mov
push
sbb
leave
clc
push
mov
inc
rolb
jge
in
int3
mov
sete
add
cmp
mov
jmp
adc
add
pop
inc
cwtl
push
inc
mov
and
add
add
or
add
xor
jbe
xchg
cmc
insb
enter
pop
adc
shll
mov
push
shrd
push
cld
clc
pop
das
sbb
pop
pusha
xor
add
lret
loop
test
xor
mov
push
push
inc
sub
icebp
sub
sub
in
mov
mov
push
mov
jp
cmp
call
jb
add
push
mov
mov
push
pop
push
js
sahf
push
mov
in
or
and
add
pop
adc
adc
jno
sbb
fdivr
subb
mov
pop
mov
dec
rclb
loopne
jb
mov
adc
inc
adc
arpl
pop
arpl
add
mov
xor
or
inc
test
sbbb
cmp
aas
imul
sarb
dec
jne
push
loopne
mov
inc
popa
lods
je
cmp
mov
jmp
rorl
add
mov
lock
dec
movsb
xchg
jo
push
insl
jmp
push
test
std
jo
mov
jge
je
xor
mov
jg
adc
testl
scas
out
cltd
cmp
jl
orb
outsb
adc
xorb
stos
outsl
or
push
icebp
lret
push
inc
stos
subb
xchg
sub
mov
sbb
fnstcw
popa
pop
adc
sbb
push
loope
add
xor
call
aad
pop
pop
mov
xchg
sub
adc
addr16
adc
sbb
pop
mov
pop
xchg
rolb
push
jl
or
movsb
inc
sar
adc
dec
sbb
int3
adc
push
add
roll
pop
and
es
push
pop
adc
add
push
das
pusha
aam
mov
push
sbb
test
mov
jle,pt
inc
stos
add
or
shl
pop
pushf
push
cmp
add
cmc
test
push
adc
sub
or
push
pop
cmp
push
call
sub
cmp
test
cli
add
lock
add
cmp
je
les
cmp
test
adc
push
outsb
sub
sar
cmp
jbe
or
add
shlb
jo
call
inc
pop
pusha
in
adc
sub
jecxz
inc
mov
pushf
faddl
jp
leave
push
repz
mov
add
je
cmp
je
jmp
sbb
mov
push
add
call
or
lea
mov
fimuls
adc
sub
pop
dec
outsb
sub
push
sbb
pop
jnp
xchg
pop
jge
js
mov
jl
pop
in
mov
add
lea
lock
mov
or
push
sbb
inc
pop
ds
push
cmp
sbb
adc
push
xor
aas
imul
mov
sub
arpl
adc
pop
rcrl
sbb
leave
xor
ret
pop
sbb
call
inc
or
test
xor
xchg
or
inc
testb
adc
imulb
pop
aad
enter
arpl
dec
std
cmpsl
jp
add
jne
sub
lea
push
mov
fwait
jp
cmp
sub
push
push
cmp
jb
pushl
out
pop
mov
mov
pop
or
iret
add
push
pop
jmp
xor
jae
test
je
adc
add
dec
xor
or
mov
mov
adc
adc
xor
lea
out
int3
pop
ud1
inc
mov
jecxz
lea
dec
or
push
lock
in
data16
and
pop
dec
jl
add
mov
lock
pop
loopne
add
sub
jmp
pop
adc
or
mov
lcall
pop
lock
pop
jmp
push
jmp
cmpsb
inc
sub
mov
mov
popa
or
inc
and
mov
movsl
dec
mov
std
sbb
mov
nop
mov
scas
mov
test
dec
mov
cs
pushf
dec
and
insb
sbb
sub
mov
push
mov
sbb
cmp
cmp
xchg
sbb
or
popa
into
es
pop
or
outsb
fistpl
mov
arpl
ja
pusha
leave
adc
addr16
sub
lods
sub
sub
dec
mov
jmp
fadds
mov
jmp
dec
mov
adc
add
mov
pop
add
movl
out
adc
pusha
or
fidivrs
ljmp
pop
js
add
jne
xor
and
and
or
test
aad
push
xor
and
xchg
bound
loopne
sub
dec
enter
or
cli
sahf
pop
sub
pusha
dec
xchg
xor
cmp
pushf
pushl
mov
add
mov
push
ret
fs
inc
push
cmp
add
insb
and
and
mov
cmp
es
cmpb
sub
jb
sbb
daa
inc
sub
sbbb
mov
cs
or
jmp
push
sbb
push
pop
push
or
xor
sub
sub
xor
or
xor
mov
mov
mov
mov
leave
fcmovnb
push
push
es
sarb
mov
leave
cld
or
fbld
add
add
dec
ja
jecxz
adc
xor
and
pop
adc
xchg
or
jbe
js
cld
mov
push
adc
sub
movl
adc
movsb
andb
mov
push
or
add
adc
shl
sub
mov
adc
adc
jmp
cmpsb
pop
or
cli
ja
ja
imul
or
xchg
pop
pop
mov
dec
sub
xor
and
sbb
mov
cmovae
xor
fadds
jne
imul
dec
ds
shr
pop
or
and
mov
xchg
and
jae
inc
cmp
add
push
and
inc
adc
aaa
lea
jbe
adc
xor
push
repnz
inc
cmp
push
push
or
negl
into
ret
stos
fstps
cld
setbe
in
pop
ss
xchg
out
push
mov
clc
sbb
add
pop
pop
sub
add
fwait
mov
jns
inc
shrb
fbld
outsb
mov
addb
dec
outsl
addl
mov
aam
add
aad
lock
dec
mulb
out
je
mov
je
insb
stos
repnz
popa
pop
test
fwait
pop
sahf
addb
sub
das
dec
pushf
adcb
pop
rolb
jae
jne
sbb
sbb
add
in
test
sbb
lcall
addl
lods
sbb
cmp
or
cli
mov
inc
repz
add
pop
ret
jge
push
jae,pn
outsb
inc
arpl
mov
mov
inc
std
scas
adc
or
aaa
sub
lds
cmp
add
in
cmc
mov
je
lock
pop
push
xchg
xchg
in
mov
movsl
or
xor
add
clc
mov
mov
push
push
jo
mov
sub
cmp
jg
mov
nop
and
outsl
cmp
push
jo
rolb
xchg
aam
enter
cld
mov
push
push
inc
add
xorb
jbe
ss
add
in
call
in
loopne
rorl
push
adc
or
push
sub
cmova
cld
inc
js
or
dec
or
repnz
add
push
cmp
movb
dec
mov
inc
xchg
xorb
repz
ds
add
repz
popa
push
jmp
and
mov
test
xor
or
push
or
or
inc
adc
xchg
loopne
jo
jb
add
or
adc
es
adc
or
pop
fcmovu
mov
movsl
xchg
pop
cmp
jns
cld
lock
push
and
push
and
jno
stc
out
or
lcall
movzwl
adc
enter
sbb
and
push
hlt
inc
adc
mov
sub
push
jmp
mov
rol
es
clc
xor
add
or
mov
loope
lock
push
outsb
out
shl
mov
xchg
dec
ds
sub
movsl
adc
push
adc
lock
loopne
inc
adc
gs
ss
cmpsb
jae
daa
push
aaa
and
or
cmpsb
xchg
aas
or
sbb
lock
popa
mov
add
or
in
mov
out
xor
fdivr
popa
insl
shl
push
das
pop
adc
sti
decl
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
cmp
jmp
and
inc
pop
mov
or
cmp
mov
pop
and
jg
daa
sbb
xor
je
cmp
je
test
push
pop
adcb
mov
repnz
push
and
iret
jae
lods
and
and
pop
mov
icebp
pop
add
add
sbb
jbe
cld
es
sub
add
inc
sbb
or
and
sub
lods
and
mov
rclb
enter
add
aam
sbb
add
dec
xor
sbb
jge
and
aaa
mov
icebp
out
sub
jne
movl
push
mov
and
push
and
push
clc
int3
ret
test
aam
add
add
cld
xor
or
js
ja
lea
cmp
ss
mov
cld
xchg
xchg
lods
repz
or
push
jne
test
imul
aaa
xchg
shrb
mov
jo
nop
cli
ja
inc
in
jo
sahf
jle
data16
fldl
nop
xor
pop
rorb
sub
stc
fstl
xchg
adc
add
fmuls
pop
mov
pop
shll
inc
fisttpl
dec
inc
test
fists
jl
call
out
pop
and
sub
xchg
xchg
or
xchg
dec
push
aad
leave
push
mov
lea
mov
fiaddl
aas
pop
mov
push
add
inc
call
add
inc
ja
insl
add
xchg
outsl
je
and
pop
mov
cmp
mov
mov
inc
jnp
std
mov
das
sbb
and
rolb
lret
jnp
lock
push
pop
pop
fs
test
pusha
mov
andb
cmp
push
fwait
jo
mov
fmull
adc
test
or
das
adc
mov
xchg
pop
push
cltd
add
push
mov
or
dec
je
out
ror
adc
es
adc
sbb
mov
jns
cmpb
aam
jne
xor
mov
push
and
cmp
out
test
lods
pop
test
and
lret
cmpsl
je
push
mov
sub
sub
ficompl
mov
loop
rclb
ret
addb
mov
sub
jle
and
loopne
add
sbb
push
imul
inc
xchg
push
les
sbb
rolb
cmp
and
pop
push
push
jp
js
xor
adc
ret
popl
jne
mov
sbb
jnp
nop
push
pmulhuw
jmp
sub
nop
or
and
and
sti
in
pop
xchg
add
or
out
loope
mov
push
mov
fucomi
jae
rolb
arpl
push
push
test
int3
lret
jmp
addr16
mov
dec
dec
fstl
aad
jnp
and
int3
in
adc
jnp
jmp
jp
mov
mov
dec
adc
sub
pusha
ljmp
or
sbb
or
push
ss
pop
cltd
fisttpl
mov
icebp
adc
out
rcrl
fsubrl
jno
cmpl
in
xor
inc
cmp
mov
sti
lahf
gs
sbb
ljmp
sub
pop
mov
mov
and
daa
je
cmp
in
xchg
adcb
and
pop
push
mov
add
push
pop
test
lods
inc
rol
lcall
mov
dec
jne
fsubrl
xor
and
testb
int3
fs
push
jle
push
fdivl
sub
mov
jne
dec
mov
leave
in
dec
pop
mov
or
sbb
or
in
mov
repnz
mov
loopne
ret
cmp
insl
push
jp
pop
insb
pop
je
fwait
adc
clc
or
shl
xor
jo
mov
push
lods
add
xchg
adc
or
stos
pop
ret
and
adc
imul
enter
inc
int3
or
pop
sbb
shll
sbb
adc
mov
insb
jmp
or
adcl
ret
jmp
jbe
fdivrs
xor
pop
shlb
adc
xchg
adc
sti
sbb
push
cmp
movl
jle
enter
push
rorb
add
cmp
clc
jg
add
push
lea
push
push
push
outsb
dec
and
ds
sub
push
sbb
sub
das
inc
hlt
pop
or
xor
dec
sub
dec
mov
cmc
add
sbb
jl
into
jo
xchg
push
push
hlt
jg
mov
sub
push
lea
mov
cwtl
add
sbb
lret
mov
push
ret
orps
dec
adc
mov
loope
in
xor
inc
sbb
repnz
lock
mov
sbb
sbb
sub
lea
sub
and
pusha
insl
loopne
ss
mov
jo
fs
jne
mov
mov
cmp
push
jg
lea
fdivrs
scas
push
push
push
inc
mov
or
mov
fistps
sub
shrl
rclb
add
aam
mov
or
dec
jns
jb
add
inc
movsb
or
ret
dec
adc
add
mov
insb
add
or
xor
data16
mov
sub
jmp
gs
dec
adc
xchg
add
push
cmpb
pop
in
push
sbb
push
ljmp
mov
icebp
mov
cmp
test
pop
xchg
mov
mov
xor
cmc
mov
lea
sbb
adc
fcoml
js
enter
test
xchg
pop
subb
test
jmp
push
xchg
adc
mov
jmp
lds
jbe
xchg
mov
lea
insb
push
xor
or
or
inc
push
or
sub
push
push
adc
test
add
shr
jmp
in
jnp
rorb
pusha
jnp
cmp
sbb
jae
test
mov
repnz
sbb
push
inc
sbb
mov
dec
ljmp
test
loope
and
lock
ret
incl
or
ror
sub
rclb
popl
pop
jle
mov
pusha
mov
dec
dec
sub
inc
sbb
pusha
xor
fcomp
in
outsl
subb
fldl
pop
push
push
fstpl
fs
inc
data16
bound
data16
aaa
adc
adc
jne
out
stc
jns
divb
or
jne
push
js
lahf
or
jne
or
jecxz
mov
mov
loopne
fldz
add
pop
andl
cmp
mov
lahf
filds
in
or
mov
pop
lea
setae
loopne
jg
push
xor
fistl
aam
arpl
mov
adc
jecxz
loop
aam
mov
movsl
lea
movsl
insb
sbb
mov
ret
scas
add
ss
cltd
les
aas
lds
jnp
add
adc
jb
mov
lea
add
fidivrs
bound
mov
scas
add
test
add
ffree
cmp
pop
mov
add
aam
pushl
inc
inc
in
fcoml
push
or
fimuls
jbe
in
movsl
pminub
push
push
test
jg
jbe
bound
push
and
pop
or
add
js
dec
add
inc
or
fcomp
or
add
test
cmp
sbb
outsb
lods
popf
ds
outsb
fwait
enter
push
jbe
or
sub
inc
push
outsb
sub
sbb
xchg
xor
lock
pop
push
mov
add
push
jbe
mov
imul
sub
js
or
and
ljmp
jmp
adc
fsubrs
lock
push
lods
repnz
in
jge
push
add
pop
or
fldl
repnz
jo
divps
adc
cli
xchg
lods
cmp
sbb
push
stos
addb
aaa
addl
sbb
mov
ds
lds
push
in
push
add
ja
push
cld
push
and
pop
and
popa
pop
addl
push
cmpb
bound
data16
dec
lret
lods
push
fstpt
pusha
mov
add
adc
xor
or
push
jl
add
xor
push
sbb
xchg
fld
imul
es
mov
pop
enter
inc
or
jo
inc
enter
ja
xor
or
adc
mov
pop
shlb
cwtl
mov
fmuls
mov
or
fdivl
and
mov
inc
jo
loopne
or
adc
jbe
fcmovu
in
call
adc
sub
add
add
mov
daa
daa
daa
daa
sarb
mov
test
mov
jge
and
push
inc
shrl
bt
push
mov
mov
add
push
sbb
mov
nop
jp
xorb
movsb
pop
loope
xchg
pop
fs
xchg
cs
lahf
xor
jecxz
xchg
or
ret
fidivrs
push
ret
jle
ljmp
mov
and
cli
es
cmp
or
add
mov
adc
jle
dec
lsl
call
insl
push
pop
out
or
lea
add
cmpsl
cltd
lods
jnp
cs
cmp
rcrb
fbstp
test
rcll
xor
hlt
jge
add
cmp
jl
cld
aad
xchg
xor
fistpl
xor
pop
dec
inc
inc
into
ret
pop
dec
ret
push
call
ror
popf
push
daa
sbb
insl
push
add
add
inc
sbb
cmp
sarl
push
xlat
and
icebp
push
fstpl
or
mov
sub
mov
insb
adc
jo
icebp
sub
scas
mov
xchg
push
addb
in
pop
stos
adc
xor
mov
test
mov
dec
jb
cmp
jno
insb
adc
jo
sub
add
push
cmp
mov
rcr
movsl
push
arpl
and
js
mov
sub
xchg
inc
inc
xor
mov
push
aas
xor
jmp
pop
call
mov
pop
vmwrite
cmc
roll
sub
shl
adc
jne
xor
sub
jo
mov
cmpsb
int3
mov
and
test
enter
sahf
mov
mov
cmpsl
cmpsb
mov
clc
xchg
mov
mov
or
add
adc
sub
rolb
outsl
sub
jl,pt
sbb
xchg
pop
inc
mov
jle
popa
mov
pop
in
mov
lret
pop
inc
push
aaa
and
inc
pop
movsb
xchg
xchg
dec
and
dec
or
xor
xor
jne
or
mov
mov
jg
adc
pop
push
dec
ss
cmp
dec
inc
rolb
daa
xchg
testl
jb
pop
xor
xorb
sti
daa
xlat
movsb
cmp
fcomps
inc
imul
push
iret
pop
jp
movsl
push
cmp
or
shr
push
adcb
sub
and
add
cmovbe
ret
mov
pusha
ret
lea
popa
add
mov
aam
mov
das
push
pop
or
imul
ret
push
aam
cmp
pop
mov
pop
daa
xor
js
push
jns
mov
ja
fsts
fwait
mov
or
loope
add
addb
pop
or
ja
or
add
in
sahf
or
js
mov
mov
outsl
dec
adc
enter
or
or
ja
pop
add
push
jle
adc
pop
and
pop
push
cmpsl
cmpb
cmc
dec
sbb
sub
in
stc
inc
xor
mov
int3
push
and
movsl
clc
or
pop
ja
and
add
and
lahf
rcll
sar
add
lock
fsubr
push
test
xchg
push
lods
adc
stos
push
cltd
add
jo
stos
rorl
xor
lahf
sbbl
movb
lahf
push
add
add
lahf
lret
fildl
data16
enter
lods
cs
test
adc
add
and
rclb
lahf
or
dec
xchg
ret
fists
push
push
mov
push
mov
jo
or
fwait
in
lock
ds
push
add
das
push
pushf
xchg
shlb
out
cmp
jbe
dec
xor
dec
xacquire
add
mov
xor
mov
sub
loopne
adc
paddusw
and
call
shlb
adc
dec
and
mov
adc
loopne
or
push
ds
dec
sub
and
cltd
lods
jae
andb
pop
adc
lea
outsl
and
in
mov
test
mov
sbb
pop
and
adc
arpl
sbb
lock
pushf
mov
push
sub
adc
mov
mov
add
add
xor
mov
inc
test
clc
inc
mov
loopne
mov
roll
jl
jmp
push
pop
or
push
jle
sub
push
jnp
or
or
insl
mov
jecxz
cmp
dec
aaa
jo
cmp
faddl
lods
call
out
sub
decb
adc
push
cmp
arpl
fcomps
testl
in
or
inc
mov
pushf
push
mov
xchg
adc
test
mov
and
sub
dec
adc
dec
stos
xchg
cwtl
dec
sarl
adc
pop
push
arpl
add
push
add
fld
xor
aam
adc
cs
pop
dec
inc
push
adc
sub
sbb
fsubrp
sbb
xchg
jb
clc
loopne
push
loop
mov
imul
addr16
in
push
dec
es
sub
out
dec
aam
mov
loopne
or
push
and
lds
lods
push
inc
test
push
popf
or
fs
push
test
lahf
loop
dec
stos
imull
pop
xchg
cmpsb
mov
cwtl
jo
in
jp
cmpsl
xlat
andl
add
sbb
push
dec
cs
push
sub
push
and
subl
fldt
mov
mov
xor
xchg
mov
rclb
repz
pop
mov
pcmpeqw
dec
jno
fimull
and
and
xchg
push
cmp
add
dec
mov
add
sar
or
jae
stos
push
rcll
cld
scas
pop
push
push
test
ds
cmp
jp
fnstenv
add
aaa
mov
cmpsl
push
pusha
rorl
int3
xor
dec
jne
add
mov
sbb
jne
loope
mov
add
inc
jb
push
sahf
mov
and
push
jp
mov
inc
dec
in
add
mov
mov
pop
push
js
or
pushl
sbb
int3
ret
fstpl
sahf
and
rolb
or
push
das
add
mov
and
dec
imul
cmpsl
mov
add
aad
cs
pop
xchg
sbbl
xlat
inc
scas
mov
cmp
adc
jle
fnstsw
lcall
test
add
sahf
mov
out
add
sub
mov
jno
sbb
shl
push
pushf
sti
xchg
sbb
adc
pushf
pop
pop
xor
jns
sub
or
jns
lcall
and
or
rolb
xchg
lret
outsb
outsl
or
sahf
xchg
inc
movsb
or
sbb
jns
xorb
imul
imul
sub
addr16
xchg
out
add
sbb
mov
and
in
cmp
mov
add
testb
push
cld
and
inc
mov
adc
aad
daa
outsb
scas
sbb
xchg
loopne
or
xor
dec
push
cmp
inc
and
subb
enter
fs
and
lds
xor
lock
aaa
movsb
or
mov
pop
and
loope
subl
jo
hlt
or
inc
mov
pop
popf
out
test
leave
and
fldl
mov
inc
rcll
add
adc
push
loope
jnp
and
cwtl
cltd
in
mov
and
push
sub
and
insb
xor
jns
test
and
and
sbb
or
cltd
jg
rorb
mov
cs
cmc
pushf
lock
add
push
insl
and
push
fimuls
aad
xor
mov
movsb
cmpsb
xor
insb
pop
repnz
sbb
xor
dec
pop
dec
cmpb
add
add
fisubs
adc
add
sbbb
push
pop
int3
xor
insb
xor
sbb
add
cmpsb
popa
popa
lahf
cli
je
out
into
mov
call
adc
dec
adcl
imulb
push
pop
out
inc
add
add
adc
dec
sbb
push
aaa
bnd
ss
xor
push
pop
and
xor
cwtl
xor
mov
xor
rcrb
or
dec
sub
add
mov
cmc
pushf
pop
xchg
loopne
push
outsb
or
mov
or
xchg
lea
rorl
inc
rorl
dec
stos
dec
lar
push
rolb
out
loopne
nop
dec
int
pop
pop
jp
pop
lods
test
fsubs
aaa
fs
mov
mov
or
xchg
ljmp
jne
xor
xchg
jnp
push
pop
jle
inc
mov
mov
mov
sbb
aad
js
sbb
add
loopne
mov
rorb
sub
xor
inc
fwait
xchg
flds
lock
fstps
sbb
sbb
sbb
or
sub
notb
dec
jb
sbb
int3
gs
sbb
sub
jge
cmp
xor
adc
lcall
sub
das
popf
sar
shl
add
mov
push
pop
out
or
mov
mov
inc
cmpb
add
mov
loopne
ss
cmp
call
in
xor
mov
adc
inc
jl
aad
ret
mov
loop
push
inc
add
mov
cmpsl
mov
push
incb
jle
jbe
push
pop
sbb
jbe
cwtl
sub
dec
sti
mov
lcall
repnz
inc
pop
clc
xchg
sub
pop
pop
pushl
mov
ret
data16
push
pop
add
and
ret
jle,pt
repz
rorl
outsl
xor
outsb
lret
push
xor
and
adc
sub
or
call
mov
nop
or
xor
or
in
push
adc
jne
push
out
xchg
mov
cmp
jae
les
adc
mov
mov
pop
mov
mov
add
sbb
dec
and
add
mov
lock
icebp
out
mov
inc
or
jbe
push
cmp
les
xchg
jmp
shll
imul
in
inc
imulb
int3
and
test
in
cld
in
dec
pop
inc
dec
mov
pop
jnp
sub
ja
push
cmp
je
nop
pop
mov
push
dec
sub
cmp
pop
adc
stos
inc
popa
cmpsb
sbb
sbb
xor
xor
push
inc
lods
mov
outsb
ljmp
dec
je
or
sub
mov
aas
fwait
adc
add
sub
roll
push
fcmovnb
sub
mov
mov
mov
or
and
mov
inc
stos
add
mov
push
icebp
mov
add
cmp
pop
scas
daa
cmp
or
sub
jb
shlb
jne
pop
nop
cmp
push
outsl
icebp
cmpl
scas
sub
pop
fnstsw
jne
jmp
sub
dec
sbb
sbb
dec
sub
test
mov
dec
and
stos
jle
adc
push
or
mov
mov
repz
dec
mov
jmp
mov
add
cmp
ss
cltd
dec
cld
cmp
shl
cmp
fld
mov
xor
cld
push
or
mov
lret
je
rorl
adc
das
notl
or
lea
lret
xchg
sub
push
xor
clc
cmpsl
mov
cmp
sahf
jg
bound
and
ja
cmp
das
mov
sbb
adc
jmp
xor
rol
push
pop
inc
dec
jns
movl
pop
jmp
fmuls
adc
sbb
inc
fsubs
dec
or
andl
sahf
ret
and
inc
cltd
pusha
lock
paddd
insb
jno
imul
scas
inc
sbb
movsb
rcrb
mov
push
sub
or
sbb
dec
sub
loop
push
lods
fisttpll
popa
aam
sbb
add
add
cmp
loopne
les
jmp
and
add
sbb
xor
or
adc
add
movsl
add
arpl
xchg
bound
cwtl
stos
ljmp
pop
clc
and
insl
clc
push
je
inc
sub
fnsave
out
js
pusha
nop
out
cmp
add
pop
pop
hlt
aaa
arpl
fsub
pop
fsubrp
sub
cmp
imul
xor
jg
xchg
int
add
and
xor
push
and
xchg
shlb
add
cmpsl
push
subl
shll
dec
adc
mov
movsb
add
xchg
adc
lods
mov
sbb
repnz
lret
push
sub
push
fldl
addl
or
fstpl
sbb
and
test
fisttps
js
adc
sbb
in
stos
jbe
pop
sub
sbb
int3
add
cmp
in
sahf
out
int3
xor
outsb
or
movsl
sbb
scas
xor
cmp
notl
sbb
addr16
out
mov
cmpsb
push
and
add
and
sbb
clc
leave
out
dec
adc
lea
xchg
jg
or
mov
dec
roll
aaa
fnstcw
dec
dec
and
divb
and
and
sub
enter
rolb
nop
lret
cmp
adc
pushf
xchg
scas
rol
lret
adc
pusha
aaa
insl
sbb
lret
xor
testb
adc
cmpsb
mov
in
and
push
jne
and
sbb
push
test
out
lret
out
or
pop
push
jecxz
sub
sbb
dec
decl
ret
insb
xor
push
mov
fildll
js
cld
aad
adc
and
repnz
push
push
sub
dec
ret
xor
pop
in
lret
jo
dec
cmp
push
pushf
dec
mov
mov
lahf
test
jbe
mov
lock
int3
and
aaa
dec
jbe
mov
loopne
adcl
dec
mov
adc
sbb
mov
and
punpckhbw
push
outsb
or
std
xor
jae
cmovo
lods
cmp
call
shlb
jo
xchg
dec
jbe
push
jo
scas
test
or
sbb
les
or
and
movsl
nop
push
shlb
repz
jnp
or
push
popf
scas
mov
shl
repnz
jns
ss
pop
nop
out
sahf
out
mov
aam
iret
repz
testb
sbb
cmp
iret
repz
insl
jle
mov
mov
shl
cmc
out
sahf
out
mov
sub
dec
push
or
xchg
insb
pop
repz
loopne
adc
push
je
xor
or
push
nop
pusha
sub
add
push
repnz
mov
fdivrp
push
mov
mov
les
inc
imul
rolb
lock
je
fadd
jb
in
sbb
inc
dec
test
and
or
adc
stc
add
aad
movsl
sub
call
xlat
push
ja
sbb
add
add
inc
push
dec
aaa
mov
fwait
push
xchg
pop
jge
xchg
cmpsl
pop
mov
lahf
cmc
aad
pop
adc
mov
and
sbb
fisttpl
jge
jmp
hlt
ja
ret
inc
mov
fcoms
lahf
push
iret
pop
pop
js
sub
outsb
dec
sub
enter
and
adc
out
add
sub
addb
ds
das
js
popa
mov
sub
rcr
add
add
in
iret
rcl
push
mov
sub
enter
or
pop
inc
mov
leave
lods
push
add
dec
adc
add
xchg
push
xor
adcl
push
sub
or
mov
int
in
pop
adc
rclb
pusha
mov
sar
or
in
mov
mov
inc
cmp
jle
movsl
movl
xor
pop
pop
cli
outsl
sub
pop
jo
push
xchg
imul
sbb
push
sub
loopne
lock
popa
add
pop
sub
xor
call
pop
xchg
pop
add
push
jb
sbb
or
push
lods
in
xor
or
xor
sahf
mov
pop
push
push
push
test
jle
add
adc
orl
add
mov
aam
faddl
shlb
sub
inc
mov
sbb
dec
sub
add
xchg
pop
sbb
subb
or
ljmp
outsl
and
or
pop
test
int
push
xchg
sbb
or
inc
in
sbb
int
push
sbb
in
mov
mov
les
out
aaa
xchg
xchg
push
jmp
ret
push
aas
add
adcl
push
cmp
push
movsl
ret
cltd
nop
add
pop
filds
movsl
jecxz
dec
add
fsubs
nop
mov
mov
or
push
dec
push
adc
add
push
push
and
mov
cwtl
fmull
sub
dec
adc
mov
popa
mov
orb
fwait
push
leave
add
mov
movl
push
lock
add
xchg
and
mov
addr16
test
call
xchg
push
mov
mov
leave
sbbb
pop
mov
or
subb
adc
addr16
push
arpl
jo
icebp
lret
mov
pop
negl
out
or
ss
adc
adc
add
repz
clc
and
xlat
add
add
in
loop
jne
adc
lods
xchg
jl
add
ficoml
test
add
or
and
dec
insb
daa
test
aad
or
lods
add
xor
inc
cmpsl
sub
test
adc
test
add
mov
add
and
adc
stos
dec
and
mov
sbb
test
add
push
jge
lea
add
jns
sbb
enter
jo
or
mov
push
push
sbb
cmp
mov
test
or
stos
jae
pop
push
inc
cwtl
jnp
or
sbb
inc
imul
fs
cmc
or
add
xchg
sbb
iret
cs
nop
nop
lahf
add
or
push
push
xchg
jmp
pop
sbb
sbb
mov
mov
add
push
adc
test
and
pop
enter
push
push
and
lds
push
mov
inc
inc
je
or
xchg
sub
add
mov
es
xor
pop
mov
inc
sbbl
sahf
and
and
xchg
leave
add
xor
inc
orb
lds
ret
or
and
add
adc
sbb
add
pop
out
popf
sub
sbb
cli
inc
loopne
roll
push
cmp
push
sub
aaa
or
jecxz
sbb
or
add
mov
jle
and
or
pop
adcl
or
or
add
add
and
push
ret
and
add
xor
test
lret
cmp
test
jae
push
or
cld
insb
and
je
les
cmp
nop
push
mov
mov
push
xchg
dec
nop
fiaddl
stos
and
inc
sub
inc
xor
enter
adc
mov
push
mov
adc
or
jge
repz
movsb
imul
sbb
xor
inc
add
or
mov
dec
xchg
jo
or
addr16
scas
add
pop
dec
filds
xchg
sub
and
push
mov
fldcw
loopne
pop
adc
sbb
rcl
mov
ds
test
inc
call
inc
out
mov
sbb
arpl
pop
mov
lods
call
mov
iret
fs
push
mov
inc
aas
mov
mov
inc
inc
ja
mov
xchg
lret
sbb
aam
sbb
lods
movsl
mov
xor
lret
mov
push
sahf
popf
jno
das
mov
jne
fldl
fucomi
push
push
mov
mov
mov
or
out
mov
or
push
cmpsb
or
mov
pop
push
sahf
das
add
dec
ret
repnz
add
or
or
adc
push
jne
loopne
adc
adc
mov
cwtl
ret
jbe
mov
daa
push
push
or
imul
cmc
mov
rorl
dec
ret
adcl
testl
or
or
xor
lahf
mov
pop
in
push
and
xor
je
mov
loopne
mov
pop
add
mov
jbe
mov
es
dec
or
or
xor
cmc
xor
mov
lods
loopne
push
call
jns
shlb
cwtl
scas
inc
popf
adc
push
push
and
clc
fcoml
xor
pop
add
jmp
lock
xor
mov
dec
lds
ds
push
lret
icebp
mov
sub
lret
pop
call
mov
imul
or
inc
adc
test
add
pop
inc
in
push
xor
xor
jo
decl
scas
push
mov
xor
sub
cmp
mov
jl
mov
mov
cmp
jl
or
sbb
popa
jp
adc
std
pop
imul
shll
pop
mov
push
add
inc
jmp
sar
test
add
mov
push
cltd
pop
idiv
sbbb
cmp
cmpsl
in
push
pop
dec
out
xor
mov
ds
and
xchg
inc
cmp
sbb
jge
sbb
or
mov
cmpsl
pushf
dec
push
and
lods
mov
loope
mov
popf
mov
les
sub
shr
add
or
dec
or
dec
jl
xchg
addl
cmp
out
xchg
hlt
incb
pushf
int
or
sbb
pop
push
sub
into
faddl
cmp
fidivrs
push
mov
mov
push
cmp
push
mov
cmp
enter
std
xchg
test
xchg
data16
in
xor
dec
xchg
rolb
dec
lea
cmp
popa
pop
test
dec
or
inc
xchg
enter
lods
mov
dec
sub
pop
sbb
mov
or
jo
pushf
inc
cmc
sub
lea
sbb
ljmp
inc
pop
cmp
dec
shll
aam
jl
mov
mov
pushf
mov
push
rclb
adc
push
push
lods
adc
adc
fwait
adc
pop
nop
pop
cmp
mov
es
mov
push
push
pop
dec
jmp
pop
dec
adc
pop
cmpl
daa
mov
loop
xchg
js
daa
fsts
push
fdivrs
jbe
jns
cs
loopne
nop
enterw
xchg
xchg
xchg
scas
dec
insb
jge
sbb
data16
xchg
push
movb
dec
call
xor
xchg
nop
xchg
call
xor
js
sbb
sbb
xor
mov
adc
push
xor
nop
push
push
mov
dec
imul
out
movsb
cwtl
and
dec
ja
sbb
dec
cs
pusha
xlat
pushf
mov
inc
ja
jb
gs
or
imul
pop
loopne
test
insb
mov
cmp
or
shr
aad
dec
in
mov
fnstenv
jo
icebp
mov
push
sub
jbe
jns
ret
es
lock
insl
sub
sub
cmp
inc
adc
mov
and
dec
dec
inc
mov
fs
dec
nop
pop
xchg
dec
dec
es
outsb
push
leave
adc
fs
lods
cmp
cmp
mov
stos
jl
int3
cwtl
xor
pop
stc
in
mov
jge
test
bound
pop
sub
lret
aaa
ja
fwait
or
ja
xchg
andb
or
popa
sbb
mov
out
pop
cmpsl
arpl
xor
mov
sub
xor
mov
imul
push
inc
sti
dec
es
push
adc
loopne
mov
mov
inc
mov
mov
pop
fdivrs
outsb
sahf
and
mov
pop
mov
adc
add
fmull
js
scas
fildl
jmp
xor
jl
faddl
jb
pop
jge
dec
add
jo
or
test
cld
shrb
ret
call
aad
sarl
repnz
loopne
adc
mov
sub
enter
cmpsl
dec
movsb
pop
gs
call
or
sub
xchg
pop
or
test
xor
ror
sbb
inc
pop
mov
and
inc
add
jo
iret
aam
fcoms
imul
in
lock
inc
jle
or
loopne
push
jno
pop
add
or
js
ss
pop
xchg
out
addr16
hlt
lret
push
push
ljmp
xor
push
ret
les
int3
in
jb
dec
sbb
xadd
or
repz
fsubs
add
shrl
ret
pushf
push
jne
ja
hlt
js
or
push
and
xchg
scas
jae
fcoms
sbb
dec
jno
lret
stc
and
orl
rcrb
add
jo
xchg
add
xchg
lret
fbld
push
xchg
inc
sub
loope
mov
outsl
out
and
in
jle
push
cmp
mov
cmc
outsl
add
neg
sub
ds
xchg
shlb
loopne
xor
imul
xor
and
call
add
sbb
psubw
dec
or
xorl
rolb
dec
fisubrs
push
lods
inc
pushf
add
sub
sbb
frstor
pop
xchg
jne
jmp
sub
jbe
shl
jecxz
add
and
inc
or
jmp
push
movsb
xchg
pop
xchg
hlt
xchg
insb
or
push
adc
add
mov
stos
add
inc
jno
and
and
sub
push
rcl
push
and
in
adc
mov
sbb
or
inc
icebp
ret
addr16
jl
out
aaa
test
jb
push
mov
or
sub
stos
pop
and
aam
ret
mov
pop
push
sbb
adc
loopne
or
loop
jnp
fs
iret
mov
es
fsubrs
cmp
ja
fcomps
rcrl
cmp
arpl
sbb
push
jb
cli
int3
mov
xchg
lds
es
and
add
decl
icebp
cs
sbb
dec
add
shlb
dec
sahf
xchg
push
mov
insl
add
mov
adc
jmp
mov
call
pop
pop
cmp
pop
incl
aad
cmovs
or
and
lds
fidivs
add
xchg
adc
or
out
sysenter
or
rcrl
and
pop
and
push
or
or
not
or
mov
mov
adc
xchg
and
pminub
cmp
push
pop
movsl
push
loopne
push
sbb
or
adc
or
adc
out
cli
test
imul
or
adc
push
or
aam
sub
mov
les
cli
insb
mov
push
dec
xor
shrl
loopne
sbb
and
xchg
imul
add
xchg
jl
lcall
js
int3
or
adc
fmuls
mov
icebp
pop
adc
xor
aam
pop
pop
cmpl
sub
dec
lcall
pop
fistpl
sub
sub
push
mov
mov
dec
mov
std
in
movsl
adc
pushl
xchg
sbbl
loope
sbb
ret
data16
xchg
call
jne
iret
fwait
push
fs
pop
pop
fsubs
iret
pop
dec
xor
push
ljmp
push
xchg
fmulp
push
inc
and
jne
or
lea
or
fwait
xchg
sub
rcll
pop
mov
dec
push
sbb
dec
insl
mov
jnp
shr
sub
cmp
loopne
je
xor
je
rol
jp
and
loopne
shlb
mov
jmp
jbe,pt
je
pop
or
mov
inc
lahf
adc
push
iret
add
cvtps2pi
sub
mov
adc
adc
push
add
add
inc
mov
cltd
sbb
jns
lock
adc
xor
mov
mov
inc
clc
or
daa
jnp
jbe
sub
sub
mov
sarl
mov
adc
stos
pop
adc
or
lret
insb
cmp
pop
cmp
jb
cmp
dec
cmp
lret
push
cmp
sub
jb
es
sbb
adc
pop
push
jle
cmp
rcrb
test
pop
insl
cmp
sbb
adc
leave
lds
mov
lea
fs
jne
and
xchg
or
adc
jp
push
repnz
xchg
pop
subb
pop
js
add
std
scas
and
cli
jecxz
js
cmc
or
fld
push
jle
pop
mov
dec
jmp
cmp
je
or
in
cmp
add
dec
inc
leave
push
stc
push
mov
jmp
cltd
aam
sbb
push
enter
loope
int3
pop
aaa
xchg
jo
or
pop
pushw
sbb
add
pusha
xor
mov
push
lock
in
and
or
imul
push
adc
in
lcall
pop
sbb
dec
fnstsw
sbb
or
outsb
enter
xor
sbb
cmp
dec
mov
add
in
xor
insb
xchg
fimull
rcrb
pmuludq
mov
mov
mov
loopne
in
add
cmp
cmpb
push
pop
push
lret
inc
xor
test
jle
mov
sub
test
scas
dec
ja
psllw
xchg
or
push
jnp
jne
ret
sub
sbb
shrb
or
cmp
ret
fstpt
test
cmp
cld
jle
xchg
mov
sub
sbb
or
dec
xchg
push
jo
push
ds
pop
xor
or
gs
jl
subb
adc
and
test
add
xor
mov
cs
scas
push
popf
or
xchg
sets
push
test
rclb
adc
stos
push
icebp
adc
xchg
aam
in
addr16
dec
in
inc
ret
push
mov
cbtw
push
popf
xchg
lods
int
inc
aam
test
cmp
mov
inc
les
and
sbbb
push
dec
inc
in
test
mov
pop
adcb
jecxz
inc
and
or
xor
or
add
sub
inc
es
inc
mov
dec
sti
pusha
sub
or
mov
pusha
add
add
add
stos
out
popa
or
fucomi
pop
xor
mov
in
pop
sub
mov
mov
pop
filds
es
and
fistl
sub
or
or
xor
lock
mov
test
int
pusha
leave
mov
add
adc
and
sbb
inc
daa
movsl
jle
loope
call
push
ds
pop
rolb
dec
ret
outsl
mov
push
lods
mov
test
ret
out
add
ja
jo
out
shll
decb
add
cmp
fldl
or
cmc
es
jg
inc
dec
loope
ffreep
arpl
and
mov
xchg
xchg
cli
ss
push
adc
adc
pushl
cmpl
jne
inc
cmp
jb
dec
es
movsb
stos
push
dec
or
sbb
or
dec
sub
in
xor
jae
loopne
fcoml
jge
call
popa
rcrl
loop
mov
jl
loopne
jmp
dec
imul
mov
pop
aad
clc
or
push
shl
jns
push
faddl
sahf
pusha
adc
pop
xchg
pop
repnz
mov
jl
mov
push
pop
pop
pop
and
sbb
xchg
xor
lea
push
pop
sub
jae
and
xchg
jo
je
dec
push
popf
push
ja
jnp
loope
jbe
inc
or
mov
fwait
or
add
sbb
mov
jb
mov
xor
clc
mov
pop
push
shr
aaa
push
pushf
divl
lods
cmpsl
xor
outsl
sbb
sbb
cmp
popa
and
idivl
nop
adc
sbb
lock
das
shll
sub
pop
dec
jns
mov
mov
or
jp
dec
xchg
xchg
dec
rolb
sahf
pusha
or
add
cli
or
mov
xor
sbb
addl
xor
dec
add
adc
andl
data16
xchg
pop
fsub
pop
pop
push
fists
mov
out
pusha
nop
imul
push
add
adc
sub
dec
mov
fs
cmp
cmp
inc
jb
or
push
js
mov
xchg
mov
push
adc
testb
push
sub
mov
stc
adc
int
pusha
or
add
add
cmc
in
cmpsb
xchg
or
cmp
cmp
push
out
inc
xor
push
sub
dec
sbb
frstor
subb
push
fists
fmuls
sub
fs
loope
push
pop
aaa
lea
mov
lret
bound
insb
mov
leave
push
cmpsl
lahf
cmp
push
sbb
cmp
sbb
fs
dec
jo
or
xor
xchg
pop
packsswb
addl
mov
lods
inc
sub
imul
imul
inc
pop
loop
add
push
fimull
push
bound
jecxz
cltd
cli
pop
out
lret
lahf
mov
jg
push
pusha
adc
sti
jle
cli
or
pusha
add
test
adc
add
test
add
orl
in
lret
dec
and
loop
lock
cmpsl
xor
movsb
lret
xchg
jb
jo
xor
sub
cmp
pop
fidivrs
aas
aad
dec
movsb
out
sar
and
add
leave
clc
sbb
sbbb
jp
fs
fisttpl
pop
mov
mov
push
push
subb
xchg
mul
ja
in
jmp
cmpl
cmp
inc
and
dec
addr16
cmpl
fldl
negb
stos
dec
rorb
cmp
mov
or
jo
mov
popl
fisubrl
cmp
xchg
and
or
push
in
pop
add
adc
dec
sahf
pop
push
repnz
and
cmp
xor
dec
mov
and
inc
cmc
sub
test
cmp
popa
mov
jle
mov
lcall
xor
dec
cli
jo
xor
sahf
fprem1
es
movsl
xor
insb
dec
lods
or
das
sub
mov
xor
lcall
add
mov
xchg
or
xrstors
xchg
shll
lods
imul
ret
je
inc
mov
jo
shrd
shl
punpckhbw
sbb
sbb
xchg
mov
adc
mov
inc
or
dec
add
or
mov
or
sbb
mov
fsub
dec
cmp
scas
loope
inc
scas
push
inc
sbb
jb
xor
push
xor
push
mov
add
es
push
test
and
adc
ss
sub
add
pop
test
mov
shl
jbe
xor
sbb
test
adc
inc
xor
push
inc
mov
es
and
mov
daa
int
aam
sub
mov
lock
cs
sub
push
push
test
push
shll
xor
jge
or
sbb
inc
sbb
fists
xchg
push
push
dec
pusha
adc
xor
mov
fnstcw
jae
faddl
adc
or
cwtl
addl
iret
adc
out
push
cmpsl
and
scas
mov
imul
mov
push
sub
push
add
cmpsl
sti
add
sub
jne
or
and
fistpll
imul
pop
push
xchg
fwait
push
scas
mov
inc
lods
rcl
pop
add
mov
push
cmp
add
adc
test
jmp
lds
sub
xor
push
xor
fsubs
leave
or
jo
cs
pop
xor
xchg
sbb
fwait
push
sub
pop
cmpsb
pusha
fwait
daa
test
xchg
mov
fwait
in
and
jl
add
popl
inc
loope
lods
ds
mov
and
stos
push
pop
repz
adc
sub
in
scas
add
cmp
push
lock
mov
jno
das
stc
sbb
cmc
sub
aam
mov
dec
fimuls
ret
jne
mov
loopne
mov
add
xchg
or
inc
rorb
mov
inc
xor
sub
add
in
fs
sub
sbbb
adc
mov
subb
inc
addr16
loopne
push
mov
dec
dec
push
add
adc
push
adc
subb
pop
je
movsl
mov
lea
lock
jmp
pop
mov
scas
mov
adcb
add
ret
fiaddl
sbb
or
add
and
pop
dec
addl
jno
loope
daa
pop
pop
pop
cmpsb
inc
push
pop
cmp
cmpsl
aad
sbb
mov
ret
dec
in
add
push
push
fbstp
subl
fildll
sub
notb
sahf
clc
mov
push
repnz
repz
pop
pop
and
mov
mov
hlt
xchg
sbb
xchg
xor
add
mov
xor
xchg
pushf
push
mov
testl
test
ljmp
mov
or
push
loopne
hlt
push
add
mov
jp
loope
add
scas
adc
push
and
insb
clc
xor
adc
inc
mov
loop
sbb
pushf
fwait
mov
jecxz
mov
add
add
cmp
push
cmp
rcrb
das
xor
sbb
mov
jnp
inc
push
mov
shlb
test
outsl
jne
gs
cmp
pop
fsts
outsb
xchg
sbb
divl
push
movsb
rol
push
or
xchg
decl
mov
add
cmc
scas
adc
adc
and
jmp
cmp
xor
je
mov
out
pop
push
mov
clc
lock
pop
or
ja
and
or
je
mov
mov
clts
test
lea
push
mov
mov
add
pop
dec
lock
xor
sti
cmpsb
je
psubw
movsl
loope
sarl
push
lock
sub
or
inc
mov
mov
data16
mov
xchg
and
or
push
pop
jmp
cmp
or
add
rorb
push
jl
lcall
pop
mov
jb
jmp
lret
cmpsb
fs
gs
fildl
rcr
jmp
add
movsl
and
shr
sub
push
jne
mov
int3
add
adc
or
xchg
sbb
jne
mov
setg
xor
add
push
inc
and
inc
push
sbb
mov
add
push
and
sbb
xchg
mov
push
sbb
pop
loope
shlb
testb
add
cmp
mov
test
xchg
insb
jae
pop
fiaddl
es
add
cmp
addl
or
sub
insl
icebp
pop
mov
mov
flds
fs
sbb
push
int
xchg
add
xchg
lea
cli
dec
sbb
inc
fcomps
push
adc
pop
inc
lcall
push
sub
sub
and
cs
pushf
and
pop
adc
xchg
call
bound
dec
ret
dec
bound
sarb
pop
xor
or
sbb
repz
or
int3
and
xchg
add
lods
add
push
push
orb
or
leave
jae
push
add
clc
insb
cmp
scas
and
frndint
xlat
jb
imul
ds
stc
dec
bound
mov
adc
dec
js
add
shlb
pop
jno
popa
mov
and
aaa
faddl
fadds
and
test
push
or
mov
xchg
or
mov
push
mov
fcmovnb
cmc
popa
lock
jecxz
ret
xor
add
xchg
push
jge
xor
sub
popf
imul
or
push
sbb
arpl
add
add
popl
dec
lods
repnz
faddp
das
adc
jb
xchg
mov
cmp
pop
add
clc
xchg
mov
add
cld
mov
outsb
or
add
jmp
xchg
adc
jne
test
adc
jg
jmp
jb
iret
les
dec
adc
test
testb
pop
jns
sub
adcl
sub
sub
push
and
sub
int3
mov
mov
jl
popa
dec
js
dec
push
jae
add
sbb
enter
dec
cmp
lods
dec
pushf
repz
loope
sbb
jae
inc
jmp
aam
push
add
repz
orb
test
xchg
clc
fsubrl
fwait
xor
adc
nop
dec
sbb
and
xchg
popa
frstor
pushf
adc
push
jns
adc
and
adc
pop
add
fists
sbb
in
add
ret
mov
repnz
mov
and
pop
add
mov
stc
add
fwait
sbb
pop
in
loopne
rolb
and
and
and
sbb
dec
add
adc
imul
inc
and
mov
or
mov
xor
inc
rclb
push
pop
dec
leave
in
fbstp
sar
leave
les
lods
call
divl
mov
in
sub
pop
pop
xor
test
jmp
xchg
push
sbb
sub
pusha
and
mov
push
inc
test
adc
mov
sbb
ret
add
int3
outsl
add
pop
jnp
adc
cmp
adc
out
mov
ficoml
aam
push
fld
imul
inc
fisubrs
mov
dec
push
and
jl
sbb
cmp
adc
dec
xchg
cmp
xchg
das
daa
nop
loopne
cli
adc
pusha
sub
cltd
xchg
fcomps
xchg
or
add
xchg
mov
add
inc
or
pushf
in
rcll
push
outsl
in
or
fcoms
pop
in
adcl
setge
lahf
je
insl
dec
pop
xorb
xor
aam
push
mov
or
mov
es
jno
leave
cmp
popf
int
loopne
call
je
stos
adc
nop
push
pusha
add
cmpsl
inc
in
lock
push
decl
xchg
arpl
mov
shrb
std
pop
dec
enter
or
xchg
adc
addr16
push
adc
jmp
or
outsb
mov
scas
jge
add
movsl
inc
dec
push
push
sub
xchg
movzbl
push
or
in
in
dec
movsl
push
test
mov
pop
inc
lret
mov
lods
fmull
cmpsl
pop
dec
jmp
lock
test
or
and
adc
adc
push
subl
imul
push
jge
mov
push
lock
addb
inc
sub
pop
and
sbb
push
jp
cltd
xor
adc
cmp
xor
stos
fcom
and
mov
movsb
sarb
mov
adc
xchg
pop
push
stc
iret
mov
push
ret
xchg
mov
lea
jg
dec
cmp
outsl
push
mov
dec
mov
andl
add
fistpl
or
mov
ljmp
das
dec
xorl
aam
call
dec
sti
ja
outsl
clc
cmp
cmp
jbe
cmp
jbe
mov
sbb
popa
pusha
xor
add
addr16
in
insl
testl
mov
add
inc
loope
rclb
mov
jnp
test
pop
push
movsl
and
sub
jp
fdivr
test
jnp
add
jne
push
aad
fcom
inc
push
decl
xchg
sarl
push
sub
mov
push
jle
xor
test
ret
cmp
mov
sbb
rclb
movsb
movsb
sbb
jo
lods
push
cmp
adcb
sbb
out
mov
leave
dec
xor
cli
jbe
mov
bound
pusha
pusha
pop
sbbl
inc
lcall
or
shl
shll
call
mov
push
or
movsl
test
adc
xor
jg
lods
pop
pusha
sbb
or
lods
andl
jbe
mov
movl
es
les
inc
sbb
js
mov
jp
xor
testl
sub
cmpsl
je
or
sbb
jo
add
or
ss
mov
adc
inc
or
repz
push
imul
out
or
clc
xor
icebp
movsl
jge,pn
push
insl
sub
add
xchg
jge
and
adc
sbb
sub
nop
lahf
mov
lret
mov
in
push
xchg
adc
xchg
push
test
outsb
jmp
loop
sbb
or
loope
rcl
xor
and
add
pusha
fstpt
jmp
or
in
sbb
int
nop
fimull
and
xchg
rolb
jo
mov
in
shl
adc
mov
xor
xchg
xor
adc
and
dec
hlt
jne
sbb
add
outsb
lock
repnz
push
lods
or
dec
mov
and
pop
adc
ret
fdivl
dec
test
sbb
sub
data16
cmp
xchg
inc
insl
loope
inc
or
and
xchg
xchg
push
mov
ret
cmp
rclb
inc
xor
jae
adcb
test
scas
mov
jmp
mov
jge
add
rcr
stc
pop
cli
cmpsl
push
xor
adc
mov
das
sbb
or
adc
cmp
test
movsl
out
nop
lret
and
aad
enter
mov
js
mov
adc
xor
mov
lds
lods
sub
add
movb
mov
mov
dec
push
adc
mov
pusha
push
xor
ss
mov
cmpsl
jae
push
or
aas
jg
add
sbb
testl
inc
xor
addr16
and
mov
loope
jae
sbb
pop
loop
jne
jns
lret
stos
in
jns
and
sub
ljmp
dec
jg
adc
or
jl
sub
mov
sub
cld
and
pop
mov
mov
mov
loop
or
xor
dec
adc
push
jno
nop
pop
scas
inc
adc
stos
add
jne
ret
in
mov
lea
dec
mov
and
fisttps
adc
sbb
mov
ret
ret
mov
inc
ss
pop
add
out
push
je
cmc
inc
push
jo
xor
dec
mov
pop
cmp
sub
add
lret
inc
add
cmc
and
and
mov
and
xor
in
into
mov
sub
dec
add
pop
mov
inc
mov
cmpsb
push
clc
sbb
pop
inc
js
xadd
mov
das
imul
mov
dec
je
mov
cmp
mov
add
and
mov
cmp
adc
push
out
or
adc
sub
adc
sar
hlt
cmp
mov
inc
sbb
adc
cli
lea
xchg
and
dec
out
fs
push
ret
fdivp
incl
dec
call
mov
jns
and
sub
sbb
push
adc
push
mov
dec
dec
and
jno
sub
sub
mov
xor
xchg
mov
lcall
lods
jo
jle
add
mov
mov
es
jl
inc
add
sbb
and
in
push
adc
ret
fcomps
pop
xchg
fnstsw
jmp
pop
clc
jne
loopne
test
cmp
cmpl
out
cmp
lods
xor
sub
add
mov
sbb
daa
push
shrb
fdivrs
pop
and
or
pop
pusha
or
ficompl
mov
or
sbb
cmpsl
pusha
in
jns
pushf
int3
sbb
and
fnstsw
push
push
push
bnd
imul
dec
push
mov
or
xor
jb
inc
in
xchg
sarb
mov
inc
lds
jle,pn
mov
or
inc
movl
sbb
mov
fcmovb
mov
mov
movsl
or
pop
dec
pop
mov
hlt
adc
icebp
test
adc
rolb
ret
test
add
mov
jno
xchg
sub
sub
push
popf
and
mov
push
les
fs
orb
sub
adc
out
stos
xchg
sub
pushl
sbb
xor
cmp
imul
mov
test
jnp
sbb
and
fsub
or
push
jae
mov
mov
xchg
xchg
pop
scas
loopne
mov
cmp
jns
pop
sub
push
mov
addb
jge
jg
or
push
cmp
jbe
xchg
dec
cmc
or
and
loopne
clc
xchg
jbe
and
add
mov
mov
testb
pop
xchg
enter
cmc
xchg
fsub
js
imulb
pushw
or
insl
shl
push
aad
idivl
fmul
pop
dec
add
mov
mov
push
aad
jg
movzwl
inc
mov
inc
into
cmp
jo
sbb
adc
pusha
cmpsb
in
adc
or
pop
xchg
add
or
push
fs
push
inc
xchg
xchg
cmp
jp
idivb
mov
lret
jne
pop
mov
sub
lods
lds
sub
sti
adc
mov
in
stc
mov
fcoml
daa
in
add
and
dec
loopne
add
push
adc
push
scas
inc
cmp
outsb
ret
frstor
repnz
loop
hlt
or
std
sbb
cmp
adc
mov
mov
stc
inc
sbb
or
repnz
sti
add
cmp
xchg
nop
cld
mov
add
add
mov
pop
pop
mov
sti
sbb
rep
movsw
push
cld
movsb
popa
cmp
push
inc
mov
or
mov
shr
mov
inc
mov
imul
incb
movb
cmpb
add
and
xor
pop
test
sub
push
mov
jmp
inc
sub
sbb
mov
imul
or
ja
aaa
add
jb
and
push
cld
and
cmp
push
movsb
loope
pop
sbb
lods
leave
pop
xchg
push
mov
cmp
inc
dec
imulb
andl
js
fsubs
dec
roll
mov
jae
loopne
pop
pop
jge
inc
add
rorb
or
sub
into
enter
aaa
xor
cmp
push
push
cmp
loope
jl
jl
sbb
sbb
pop
push
mov
dec
and
push
dec
push
insb
jbe
mov
ds
movups
movsl
stos
loopne
dec
adc
decb
xor
add
mov
mov
inc
scas
rcrb
clc
dec
rorb
xchg
mov
xchg
and
ftst
add
and
mov
ficoml
jb
jb
push
add
add
jb
jb
push
pop
or
mov
jmp
or
jmp
or
jno
jmp
mov
jmp
por
jmp
adc
pop
mov
jmp
adc
dec
adc
dec
adc
mov
pop
jmp
sbb
xor
mov
sub
jmp
sbb
and
mov
pop
jmp
and
or
ja
mov
adc
out
test
inc
loope
dec
out
vmovss
adc
jle
add
push
in
mov
mov
xlat
and
or
push
adc
sahf
out
sahf
cmp
pop
jns
out
imul
out
addb
sahf
xchg
fwait
mov
sahf
out
mov
mov
sahf
out
rcl
sub
add
testb
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
aad
mov
and
sbbb
inc
repz
fimull
sbb
push
nop
adc
scas
xchg
addl
mov
fdivrl
or
pop
xor
cmp
jle
mov
sbb
out
xlat
imulb
call
js
xor
pop
js
pop
out
jae
sub
test
sbb
pop
jmp
call
rol
or
iret
adc
nop
test
push
lock
mov
sub
xor
aaa
mov
test
ficoms
jbe
decb
subl
pop
add
jne
aad
add
push
pcmpgtb
dec
or
sub
add
adc
or
aaa
xor
push
or
or
sarl
push
inc
js
inc
loope
fdiv
dec
das
dec
dec
cltd
lock
push
fadds
push
imul
push
aaa
push
jo
push
outsb
call
idivl
cmp
in
and
xchg
and
dec
or
fbstp
add
dec
scas
sbb
loopne
or
adcl
sti
add
push
sub
mov
or
xchg
test
cmp
stos
and
inc
dec
xor
jne
add
push
inc
jmp
cmp
lods
cld
cmp
push
pop
mov
int3
add
movb
mov
add
adc
add
push
bound
jmp
inc
pop
lods
add
pop
cmc
clc
loop
jno
xchg
add
mov
cmpsl
adc
mov
pop
pop
inc
sub
cmpsb
adc
mov
add
pop
cwtl
js
mov
inc
jmp
xor
aaa
popf
push
add
jge
shl
dec
fwait
cwtl
mov
adcl
push
or
or
pop
sub
push
icebp
xchg
pusha
insl
adc
sahf
bound
sbbl
add
sub
mov
test
out
push
sbb
les
jne
and
fwait
mov
sbb
inc
sbb
mov
shr
pop
scas
add
sbb
push
ljmp
add
aas
inc
dec
mov
push
in
les
jge
roll
lock
in
mov
mov
in
lea
cmp
fwait
js
std
push
les
dec
pop
cmp
and
or
add
jno
or
pop
xor
mov
pop
ret
push
mov
je
je
and
push
xchg
lock
imul
cs
adcb
pop
outsb
or
adc
cmp
mov
fidivrs
cmp
push
sub
or
add
sub
add
sub
je
ja
adc
orb
dec
adc
dec
loope
pusha
fsub
inc
push
inc
adc
insb
fnstcw
pop
jnp
std
and
mov
fiadds
rcrl
dec
add
push
das
sbb
cmp
xchg
fs
pop
mov
mov
add
popl
gs
add
mov
mov
clc
xchg
stos
cmp
or
inc
xor
loopne
add
pushf
push
shlb
lock
mov
loopne
adc
mov
inc
pop
lea
imul
ds
inc
jecxz
arpl
pop
repz
xchg
loopne
inc
cltd
inc
rol
mov
push
inc
addr16
les
es
loop
push
inc
and
push
push
out
inc
add
mov
inc
ror
hlt
sbb
ds
cmpsb
imul
bound
lcall
andb
repz
sbb
sbb
mov
xor
dec
and
andl
mov
fmull
mov
fmull
xchg
in
add
inc
xchg
sbb
push
movsl
test
or
add
cmp
jne
outsb
adc
sbb
dec
add
add
pop
add
fwait
loop
addr16
orl
ss
inc
sub
pop
pop
push
repnz
sub
testb
jp
xchg
xchg
push
pop
or
fcoml
pop
jae
bnd
nop
cld
mov
mov
loopne
cmp
lock
mov
loop
imul
jae
sbb
loopne
xchg
or
and
loopne
push
dec
leave
xor
repnz
enter
add
enter
xor
pusha
repnz
add
adc
add
sbb
cmp
les
sarb
insl
push
add
pfrcp
pop
push
je
mov
cltd
push
or
pop
xor
add
push
push
mov
dec
or
dec
and
ja
sub
stos
pushl
ljmp
rcrl
add
test
cltd
insl
or
pop
movsl
repz
pop
sbb
dec
es
lea
inc
dec
cltd
pop
cmp
or
mov
and
dec
filds
add
sub
fwait
dec
add
or
sbbl
mov
cmp
mov
nop
and
divb
movsb
sub
imul
push
push
arpl
push
xor
repz
sbb
add
adc
lods
gs
dec
xor
mov
pop
push
add
xchg
xchg
add
and
xor
pusha
aaa
cld
or
jge
ss
push
fisttpll
cmc
jb
fistpl
sub
mov
xorl
pushf
jno
pop
push
popf
pop
es
in
lahf
add
mov
call
and
sbb
fnstenv
mov
punpcklwd
mov
push
pop
lret
je
push
and
dec
mov
mov
stos
push
cmp
cli
je
in
jmp
push
adc
xor
xor
add
sub
mov
mov
xchg
lahf
movb
outsl
fcom
and
inc
gs
jb
mov
jmp
jne
je
push
xchg
xorb
sbb
adc
jo
cmpsb
jb
sub
insb
jle
pop
jle
add
test
les
or
jne
pop
jmp
cmp
or
inc
ss
push
adc
fisubl
call
loopne
mov
movsl
push
and
insl
mov
push
mov
pop
repnz
cmpb
in
or
push
call
push
mov
mov
addr16
in
repnz
and
fisubs
sub
push
mov
xor
pop
mov
jmp
mov
cmp
rolb
add
in
dec
mov
sub
scas
jae
jp
inc
jl
pop
cmovs
mov
cmp
ss
rorb
and
push
xchg
pop
in
and
out
and
and
cmp
push
sub
xchg
test
daa
and
lds
and
scas
in
sbb
pop
or
sbb
inc
sbb
mull
adc
xor
xor
mov
pusha
or
xchg
test
cmp
sbb
lret
or
cmp
lock
or
and
push
cmp
fwait
xor
mov
sbbl
add
adc
cmp
inc
in
cmpsb
loopne
dec
movzbl
outsl
pop
inc
pop
cli
mov
movsl
in
sbb
out
lods
and
xor
shl
inc
add
subl
test
or
and
nop
and
pop
cmp
cwtl
pushf
fdiv
mov
movsb
movsb
test
icebp
lods
nop
xchg
inc
push
and
mov
in
mov
dec
mov
pop
mov
test
mov
pop
mov
call
cmpsb
pop
aam
fcomp
loopne
dec
sub
fs
dec
adc
pop
aam
gs
fmuls
inc
cmp
inc
mov
decl
cmpb
add
lea
push
mov
test
in
mov
insl
and
xchg
je
jl
and
xchg
adc
mov
push
cmp
xor
add
adc
test
inc
hlt
cmp
je
dec
fldl
jp
lea
or
out
mov
sbbl
fildl
xor
cmpsb
repnz
push
loopne
lods
sub
inc
and
jp
sti
aas
xchg
hlt
push
pop
jl
jmp
xor
mov
out
push
lret
addr16
setne
mov
hlt
sahf
mov
sahf
mov
sti
and
pop
jne
xchg
dec
xchg
rorl
outsl
and
call
rcrl
sbbl
sbb
lcall
mov
je
and
daa
push
fcoml
fldt
js
or
sbb
sbb
push
fwait
inc
imul
rorb
je
mov
call
mov
cmpsb
or
fwait
push
fbstp
push
xchg
sub
pop
cmp
lret
pop
shrb
pop
loop
pop
push
es
repnz
jg
and
fistpl
sbb
mov
dec
mov
pop
jno
fimuls
test
lods
jle
mov
and
pop
add
pop
pop
add
and
xchg
adc
out
sub
push
cmp
je
cmp
jne
push
inc
pop
inc
push
rolb
enter
sub
rorb
sbb
push
inc
cmpl
cmp
cmp
js
or
jo
movsb
aas
lods
push
clc
mov
in
mov
lods
xchg
js
or
rolb
and
filds
push
cmpl
xor
adc
ret
sbb
xchg
xor
aam
push
xchg
lock
dec
test
les
dec
call
pop
addr16
hlt
xor
into
mov
test
push
push
adc
adc
xchg
jmp
mov
sbb
pusha
jb
push
ret
sbb
lcall
addr16
push
push
jnp
insb
add
popl
push
scas
in
jge
ss
lea
mov
leave
movsb
lock
jb
call
add
je
adc
pop
dec
and
dec
aaa
xchg
xor
add
dec
mov
jne
imull
push
nop
hlt
out
adc
andb
sub
testb
cmp
mov
sbb
xchg
lcall
ret
fists
dec
loopne
add
xchg
jne
jae
popa
popa
sbb
aas
mov
out
ss
push
push
imul
neg
cmp
jo
and
push
lods
xor
addr16
jne
mov
xor
mov
lods
add
loop
sub
je
mov
enter
jmp
or
ret
inc
jo
int
or
jmp
inc
sub
pop
or
xchg
rorl
or
pop
jmp
push
sti
popl
sti
cmpsb
jmp
insb
inc
into
xor
push
or
and
inc
dec
add
cmc
das
cmp
call
push
aad
fsubrs
add
insb
xchg
int
push
enter
cmovs
test
pop
lds
mov
xchg
into
ret
or
pop
or
rcl
aaa
cmp
scas
add
inc
lods
adc
push
sub
dec
ss
and
stos
pop
inc
sbb
inc
pop
cmp
cvtps2pi
enterw
loopne
push
and
sub
xchg
bnd
cmpl
mov
xchg
mov
xor
jmp
daa
popa
cmp
sub
sbb
sbb
imul
inc
shl
lock
adc
int3
enter
mov
js
in
mov
out
pop
inc
les
jecxz
pop
cmp
xlat
xor
adc
inc
mov
adc
add
or
and
xor
mov
jo
icebp
jmp
enter
es
sub
imul
fmulp
mov
push
rorb
movsb
pop
lahf
jle
jmp
insl
je
add
ljmp
add
jmp
lock
xchg
in
jecxz
lds
adc
ss
xor
sbbl
push
pop
adc
push
adc
pop
test
jae
or
cwtl
sbbl
xchg
out
push
and
in
mov
pop
in
rclb
xchg
pop
mov
test
addl
rcl
xchg
icebp
subl
or
fwait
mov
notl
sti
mov
stos
je
dec
call
popa
and
sbb
aaa
xchg
jmp
inc
cmp
repz
pushf
rcrl
mov
push
xor
mov
or
adc
jne
xor
mov
xchg
push
xchg
insb
ds
xor
dec
and
je
mov
pop
test
and
and
dec
mov
pop
sub
and
xchg
mov
jbe
xchg
or
in
push
adcl
and
and
imul
jl
sbbb
adc
es
pop
push
inc
ret
and
mov
and
cmc
xor
xchg
push
les
mov
mov
aas
push
addb
xor
mov
push
push
mov
addr16
inc
aas
push
fnsave
mov
add
faddl
fstl
fldz
fcomp
fnstsw
loopne
loopne
lods
add
jl
ss
fsubr
pop
faddp
mov
fstpl
insb
jnp
nop
mov
lods
aaa
int3
add
sub
or
hlt
mov
push
aam
push
adc
pop
jo
enter
lock
lock
xchg
orb
push
adc
hlt
add
mov
jle
test
test
es
add
clc
inc
aam
push
in
dec
mov
push
push
pop
adc
lret
sub
negb
cmp
or
frstor
sub
xor
fwait
or
gs
ret
jmp
push
data16
add
mov
lods
push
pop
jmp
into
inc
inc
or
mov
iret
or
sbb
add
js
sub
pusha
jl
jg
insb
outsb
rorb
push
aaa
xor
push
outsb
or
arpl
fldl
mov
popf
adcb
adc
movsb
hlt
lea
mov
sub
inc
ret
or
mov
in
loop
fimuls
insl
cmc
rorl
enter
jo
int3
loopne
nop
into
rcl
in
rcrb
jno
and
push
sarb
movsl
mov
cmpb
add
cltd
pop
decl
push
jne
push
add
cmp
xchg
mov
ljmp
push
dec
sbb
lods
jmp
punpckhdq
mov
xor
push
sbb
dec
sub
nop
lods
hlt
adc
push
mov
xchg
mov
add
add
and
enter
inc
or
mov
jo
mov
lods
xchg
je
stos
push
fnstsw
imul
inc
mov
into
shrb
aas
xchg
and
or
rolb
js
pusha
shll
jns
xor
pop
notb
ja
jo
cli
arpl
leave
icebp
adc
push
sti
push
push
out
push
in
and
pop
sub
add
dec
imul
fidivrs
rcr
fmull
add
aaa
add
xlat
pop
push
pop
mov
push
cmp
je
inc
repnz
call
jb
push
stos
xor
mov
dec
pop
jb
adc
and
sub
or
inc
sub
ret
inc
lock
push
jae
xchg
cwtl
adc
and
fmuls
fld
adc
mov
movsl
add
pusha
sbb
imul
loop
xchg
test
jp
lret
out
das
sub
dec
cmp
mov
or
mov
pop
icebp
mov
pop
movsb
cmpsb
in
sbb
in
enter
xchg
insl
add
mov
in
fs
push
loop
and
jo
pusha
pop
and
and
test
rorb
sahf
mov
add
xchg
jge
movsl
push
add
fsts
adc
insb
cld
xchg
or
test
es
sub
mov
jge
cmp
jne
js
mov
or
cwtl
lods
adc
inc
add
cmpsl
cmp
nop
pop
lock
adc
mov
mov
dec
push
or
sbb
sbb
aaa
cmp
aam
dec
loope
jae
pop
imul
je
xor
sub
ja
push
jmp
cmp
push
inc
lret
and
push
test
sbb
rclb
jnp
jnp
fs
xor
ret
mov
mov
rcl
add
and
fidivrl
call
sbb
mov
in
addb
ror
repz
mov
jb
pop
test
faddp
jg
and
add
test
jbe
popa
pop
jbe
add
cmp
dec
out
and
push
test
xorb
dec
inc
add
xchg
scas
out
sbb
ljmp
cmpsl
outsb
idivb
dec
xchg
dec
pop
add
orl
les
push
mov
adc
leave
inc
ret
sub
pop
xchg
push
rolb
xor
sub
push
dec
fistps
testb
popa
sub
and
adc
pop
aad
push
pop
inc
ret
lds
pop
insl
dec
jo
xchg
data16
or
dec
ret
lahf
xorb
scas
mov
je
and
push
dec
xor
inc
add
and
sbb
xchg
jge
push
enter
sar
decb
or
xorl
ret
dec
jge
inc
dec
dec
pop
mov
in
inc
push
push
stos
mov
xor
mov
shl
dec
movsb
call
add
nop
mov
fldlg2
pop
and
lock
push
mov
popf
sete
add
mov
pop
insl
je
cmp
and
lock
xor
inc
sub
add
mov
int
stos
mov
adc
std
in
push
mov
fcoml
jno
add
inc
mov
jb
mov
push
mov
pusha
fs
mov
imul
dec
call
sbb
inc
push
js
jp
scas
test
es
add
lock
lds
push
mov
push
or
cwtl
es
mov
cmp
adc
ret
mov
adcb
mov
cmp
inc
es
dec
pop
daa
test
pop
lret
sub
enter
and
adcl
inc
pusha
cltd
sub
pop
mov
mov
loope
les
popa
arpl
jo
cmp
dec
arpl
xlat
adc
push
adc
sub
sub
out
mov
ror
and
es
je
adc
es
mov
xor
addl
mov
push
xor
push
push
lock
mov
addr16
pushf
pop
sub
mov
insl
or
les
leave
dec
inc
andl
fs
xchg
mov
inc
orb
in
mov
fsts
push
sub
test
inc
icebp
push
add
xchg
dec
rcrb
mov
xchg
icebp
push
push
je
mov
insl
rol
call
icebp
mov
and
lock
ljmp
adc
xor
movsb
adc
ljmp
add
repnz
jo
sbbl
and
movsb
pop
lret
sub
cmp
mov
add
or
push
movsl
inc
mov
xor
and
negb
push
adc
gs
add
sub
push
cmp
add
or
or
inc
bound
dec
in
dec
ret
mov
mov
push
inc
rclb
enter
mov
dec
pushf
bound
add
iret
dec
movb
add
or
stc
push
lods
notb
jo
push
sbb
in
or
mov
xrelease
shll
jmp
mov
mov
push
mov
repnz
fidivl
jae
test
aas
mov
adc
cmp
gs
in
push
movsl
add
test
add
in
mov
mov
sbb
adc
lods
cmp
xor
lods
gs
incb
or
inc
das
and
loopne
ss
or
outsl
inc
cmp
xor
add
push
adc
jge
testb
dec
js
fsubrs
and
test
push
je
inc
push
movsl
in
test
push
outsb
add
jb
mov
idiv
add
out
bound
and
adc
leave
mov
aad
jne
inc
gs
add
loopne
lea
push
sbb
mov
push
and
es
std
adc
or
lret
add
rcl
mov
pop
repnz
or
push
pop
cmp
leave
add
mov
add
ret
jb
fisubrl
adc
cmp
aam
mov
xor
lock
test
imul
mov
sti
out
lcall
xchg
test
add
negb
xchg
bound
or
push
pop
fidivrl
mov
mov
jmp
shlb
or
sub
test
out
and
push
shlb
enter
pusha
pop
jo
popa
dec
imul
repz
pop
repz
add
add
outsl
add
fidivrl
lods
dec
mov
hlt
es
mov
cmp
mov
imul
cmp
xchg
cmpb
clc
mov
dec
adc
push
popa
popa
or
adc
inc
scas
dec
xchg
ret
cmpsb
adc
leave
or
jb
mov
sarb
dec
or
cwtl
mov
andb
cmp
lock
mov
and
ficoms
rolb
fsubrl
push
pop
xor
push
out
loopne
aas
xor
add
mov
inc
push
inc
pop
in
dec
test
xchg
jb
inc
adc
hlt
xor
pop
lods
push
mov
jge
adc
jbe
dec
sbb
pop
jmp
jecxz
push
gs
and
sbb
push
xchg
mov
fs
lahf
pop
mov
jne
mov
mov
push
aam
xchg
mov
push
sbb
jne
repnz
inc
fmuls
cmpsl
push
jp
sub
repnz
mov
test
repnz
sarl
cmp
rorb
jo
sbb
leave
lcall
add
call
or
cmpsl
lea
movsb
pop
push
je
push
imul
xor
inc
mov
push
je
inc
pop
andl
fstl
mov
popa
mov
xlat
bndstx
push
push
bound
stos
movsb
adc
clc
clc
dec
jg
push
adcb
pop
pop
dec
jge
pop
sahf
cmp
or
jo
lcall
pop
pop
jmp
inc
in
pop
jb
out
sub
jl
and
sub
mov
pop
pop
lea
rcl
int3
dec
add
stos
mov
xchg
addr16
mov
je,pn
sbb
movzbl
pop
add
es
or
push
add
adc
inc
xchg
clc
sbb
cld
cmp
loop
bound
push
inc
and
push
jl
mov
dec
push
lods
fwait
dec
test
sub
iret
call
push
pop
lock
dec
inc
and
mov
aad
movsl
mov
cmp
inc
inc
popf
jp
or
dec
mov
adc
and
pop
or
mov
push
push
sbb
inc
and
popf
jg
daa
push
dec
fldcw
cmp
lret
jno
mov
or
cmp
mov
les
dec
or
push
xchg
add
mov
and
shlb
lret
js
jno
xchg
xchg
fwait
data16
push
sub
pop
jmp
out
rorb
push
aaa
enter
jne
outsl
leave
pusha
sbb
jbe
je
or
je
scas
and
dec
iret
jne
mov
push
and
outsl
add
mov
ss
jne
mov
clc
test
lds
xchg
and
mov
inc
sub
dec
jae
xchg
adc
test
mov
mov
jge
in
mov
pop
mov
pushf
test
lods
fsubs
pop
add
cwtl
gs
rcl
loop
pop
movsb
sbb
xor
mov
xchg
cmc
dec
rclb
sub
mov
xor
leave
hlt
push
mov
sbb
adc
lfs
shrl
pop
les
movsb
cmp
int3
arpl
lahf
cmp
mov
add
sahf
sub
shrb
pop
lldt
push
js
push
push
or
movsb
mov
mov
push
xchg
outsl
xchg
push
jmp
inc
loopne
cmp
sbb
mov
test
mov
mov
and
adc
in
fs
repz
adc
test
or
dec
xchg
xchg
addr16
test
testb
mov
hlt
pusha
xchg
aam
or
xchg
mov
ja
cmp
fsubrl
rorb
jae
fidivrl
pop
test
add
in
ficomps
xchg
hlt
push
jl
or
pop
push
jl
arpl
cmp
jo
or
movsl
imul
cmp
jne
or
or
dec
pusha
rolb
sbb
push
push
jp
or
lret
inc
mov
outsl
xor
jl
push
sahf
xchg
std
jle
test
xor
sbb
cmp
sbbb
xchg
dec
mov
loope
sahf
popa
ja
xor
adc
pop
mov
and
int3
out
sbb
add
jne
jb
cmp
adc
arpl
pop
mov
push
adc
push
in
shl
jmp
push
lret
add
sbb
sbb
adc
subb
test
lea
sub
lds
add
fsubs
stos
jo
pop
aad
pop
int3
and
sub
push
mov
enter
arpl
mov
mov
sahf
xchg
or
sbb
push
mov
cmc
loop
push
cmp
pop
or
sbb
ljmp
sbb
adc
out
or
sub
sbb
js
push
push
sub
inc
in
lock
out
sahf
outsl
pop
sbb
adc
add
mov
rclb
loopne
imul
jb
cs
pop
push
inc
sbb
subb
jns
mov
je
inc
test
in
pop
out
ret
in
pop
inc
mov
or
jle
sbb
inc
mov
je
shrl
jns
sub
and
push
mov
popa
das
push
cmp
dec
and
inc
clc
xchg
dec
insb
cmp
hlt
fwait
jne
in
in
lea
imul
mov
push
insl
movsl
pushf
xor
fildl
sbb
sti
call
loopne
add
test
call
add
adcb
orb
xchg
pop
xchg
popa
and
add
or
xor
mov
outsb
and
cmp
lock
mov
or
sbb
dec
xor
call
or
mov
jecxz
mov
cmp
popf
or
push
mov
add
sub
mov
jb
mov
jle
leave
es
sub
pop
sub
dec
mov
pop
sub
or
jl
fiadds
lock
loop
inc
or
or
pop
inc
and
cmp
sub
xor
sete
jne
movb
adc
lock
xor
mov
mov
or
mov
adc
xorl
mov
int3
and
je
dec
xor
pop
add
popf
jbe
add
sub
test
and
sub
mov
mov
mov
cmc
mov
mov
pop
adc
hlt
cmpsl
cld
sbb
xor
cmp
je
push
call
mov
flds
inc
test
cmp
jg
pop
fildl
or
fiaddl
test
add
pusha
lea
out
clc
pop
cmpsl
mov
push
pop
in
pop
adc
pop
xor
xor
ljmp
test
mov
bswap
sub
mov
cmp
jle
shlb
xor
ret
push
or
mov
std
push
cmp
jne
inc
inc
inc
dec
sub
jmp
inc
fs
sub
push
mov
push
hlt
icebp
movsb
and
add
xchg
push
xor
fisttpll
push
test
cmp
repnz
dec
subb
or
push
sub
sahf
shll
cmpsb
jmp
push
mov
mov
and
rcrb
cmp
clc
fnstsw
subb
insl
fimuls
popa
and
flds
and
xchg
aam
dec
clc
rcrb
in
mov
push
and
in
cmp
enter
pop
adc
roll
fstpl
xchg
mov
dec
loope
push
roll
inc
adcb
push
inc
mov
xchg
push
jne
push
lods
je
jb
in
faddl
adcb
cli
mov
cmp
push
mov
add
mov
dec
pop
ds
mov
mov
popa
fadds
mov
jo
call
push
xchg
xchg
xchg
mov
and
jbe
pop
cmp
mov
dec
clc
or
inc
shlb
push
je
imul
test
outsl
aam
rol
js
sahf
mov
sub
mov
mov
out
imul
stc
bnd
jecxz
pop
xor
push
clc
adc
mov
fldl
or
pop
push
sbb
adc
jmp
mov
std
adc
xchg
push
push
pop
push
adc
add
mov
imul
dec
add
test
cld
lock
repz
test
push
addb
inc
enter
xor
xor
or
dec
fcom
movl
inc
xchg
xchg
xchg
jne
mov
or
aaa
fstps
and
jbe
es
inc
in
mov
pop
mov
orb
cmp
jecxz
or
inc
xchg
imul
imul
out
xor
outsb
dec
adc
lods
pop
ret
cmc
call
mov
lcall
clc
sarl
ret
sbb
jmp
or
xor
mov
ss
insb
in
lcall
cmp
mov
jnp
dec
sahf
int
test
imul
sub
adc
sub
imulb
dec
lret
fld1
fwait
mov
outsl
sub
xchg
mov
test
mov
clc
inc
and
push
in
jnp
cmpsl
cs
xchg
nop
ds
push
jge
mov
fdivl
pop
add
mov
pop
mov
push
push
xchg
pop
jge
scas
mov
pushf
sbb
cmp
and
mov
ffree
xchg
ja
test
clc
add
jl
movsb
mov
push
or
sti
sub
adc
rorb
ret
stos
je
out
fst
xor
shr
xor
rolb
ret
fsubl
flds
or
not
mov
dec
pop
mov
xor
popf
mov
shr
cmp
jbe
add
jmp
add
mov
das
je
cltd
in
pop
xchg
fadd
pop
and
mov
enter
push
adc
mov
pushf
test
pusha
frstor
loope
add
push
enter
test
sub
adc
and
mov
fldt
add
sbb
or
out
aas
insl
mov
push
push
mov
xchg
mov
imul
out
fcompl
dec
add
mov
add
ret
int3
jo
push
or
cmc
pop
icebp
pop
and
jnp
lea
add
jb
pop
mov
fsubrs
and
bound
scas
mov
popa
call
jl
add
movsb
push
push
jb
mov
outsb
cmp
mov
add
cmpsl
jg
stos
mov
xor
scas
rolb
push
test
ljmp
sbbl
cli
pop
adc
dec
pop
mov
sbb
and
mov
dec
adc
and
sbb
sbb
push
mov
orb
pop
adc
or
sub
js
adc
sbb
std
and
rcll
push
cmp
add
inc
mov
and
sbb
ret
jge
cmp
cmp
push
ja
and
mov
sti
sbb
and
sub
incl
inc
mov
sbb
loopne
in
outsb
insb
add
pop
mov
and
adc
push
jecxz
and
pop
mov
jl
js
rclb
jecxz
or
mov
push
or
and
sbb
and
jl
pop
jmp
sbb
or
pop
dec
inc
cmp
inc
sub
rolb
sub
rcl
sub
arpl
subl
mov
cmp
cmp
add
xor
add
push
out
inc
pop
test
sub
add
add
sbb
je
in
cld
popl
xor
sub
loopne
or
and
repz
arpl
cmp
or
mov
push
push
or
lods
in
aaa
xchg
ret
push
cli
add
test
jnp
jmp
inc
mov
push
jp
jns
pop
jp
mov
xchg
fs
fildl
and
or
pushf
scas
mov
dec
mov
int
sbb
sbb
adc
mov
cmp
mov
fstpl
loope
cmp
push
sbbb
adc
mov
adc
cmp
and
inc
mov
mov
out
jmp
and
movsb
adc
push
imul
popa
inc
lret
or
mov
lock
cmp
adc
pop
jne
add
pop
stos
mov
mov
mov
rolb
cmp
shll
adc
add
dec
enter
or
or
push
push
dec
mov
adc
add
lods
mov
imul
and
aam
inc
dec
je
fcoml
sarb
mov
push
xchg
enter
add
bound
add
andl
outsb
cmp
or
dec
xor
add
add
add
add
sub
jle
movsb
or
sub
mov
fsts
das
sub
add
xor
fiaddl
push
jmp
inc
jo
and
push
test
or
mov
dec
inc
ss
adc
int3
dec
mov
and
adcl
jnp
cmp
xor
adc
insb
inc
test
mov
sub
mov
xor
nop
daa
rorb
pop
sbb
sub
and
pop
push
pushf
cltd
dec
add
push
fstps
shlb
daa
mov
cvtpi2ps
pop
and
test
clc
daa
push
lods
lods
dec
or
sahf
xchg
adc
push
fisttpll
jnp
mov
inc
adc
and
mov
and
fmull
cmp
mov
add
dec
gs
or
fstpt
push
cli
inc
enter
or
mov
int3
cmp
jge
add
out
jmp
ret
popa
add
jne
dec
xchg
ror
dec
jge
push
es
cmp
pop
cmpsl
push
add
movsb
push
scas
sbb
jo
mov
pushl
push
push
or
pop
xchg
xor
adc
pop
inc
cwtl
repnz
inc
repnz
cmp
xchg
jge
inc
pop
sbb
pop
leave
out
inc
cwtl
sub
mov
sbb
nop
or
push
pop
in
pop
scas
fldl
lods
inc
rclb
cmp
enter
scas
xor
pop
xor
test
xchg
scas
add
shrb
xchg
icebp
push
push
jle
and
test
jmp
dec
add
rcrb
cmp
popa
loopne
and
inc
xchg
push
inc
hlt
xchg
jg
jg
sub
adc
xchg
mov
cmp
pop
leave
int3
jne
rorb
mov
cmp
inc
jmp
sub
push
xchg
jbe
mov
ficoms
or
mov
add
mov
mov
push
imul
jl
add
shl
das
pushf
jecxz
rclb
dec
rorb
loopne
stos
sub
mov
sbb
sbbl
es
dec
fs
test
js
adc
mov
outsb
pop
push
in
dec
push
inc
ret
xchg
sub
adc
mov
loopne
and
mov
sub
in
xchg
push
cld
sbb
inc
repnz
push
add
call
ljmp
or
sub
js
aam
aad
mov
pop
add
je
or
and
sbb
mov
pop
push
xor
js
dec
jmp
inc
adc
lahf
nop
rorb
dec
imul
jb
insl
push
push
shrb
cmp
rorb
push
arpl
pop
push
add
jne
push
jg
dec
adc
outsl
pop
push
fstpl
push
pop
add
in
push
add
call
mov
xor
jmp
or
or
dec
movsb
outsb
or
faddl
and
frstor
js
jmp
test
or
shr
mov
add
movsl
outsl
xor
enter
adc
add
enter
mov
aam
pop
push
pop
aaa
dec
mov
and
push
clc
and
in
jmp
addb
or
lods
stos
add
rolb
sub
add
test
nop
sub
cmp
xchg
dec
push
jl
adc
bound
repnz
shrb
inc
es
push
add
push
iret
hlt
negb
push
xchg
sub
sub
inc
lea
push
sub
push
add
es
scas
nop
lods
adc
add
or
mov
inc
outsl
adc
push
xchg
ds
and
inc
or
stc
xor
in
xchg
sbb
push
movsb
stc
sub
cld
in
hlt
mov
faddl
loope
cld
pop
cwtl
push
je
jmp
or
push
shrl
mov
int3
fistpl
ret
mov
dec
jl
sbb
jne
xor
add
jl
fmull
bound
sub
jns
loope
xorb
pop
push
scas
fisttps
dec
inc
clc
es
testb
ret
push
xor
loopne
mov
icebp
insl
sbbb
or
nop
arpl
lods
xchg
cli
push
out
mov
adc
sbb
adc
pop
outsl
adc
dec
cld
push
push
cmc
loopne
push
mov
sbb
stos
shlb
ret
lock
xor
jno
mov
inc
mov
cwtl
sbb
pminub
or
sub
add
and
mov
fistpll
nop
cmp
notl
and
and
sub
xor
push
mov
jmp
push
bound
or
xorl
mov
inc
inc
add
jnp
test
push
push
inc
jno
dec
adc
dec
or
adc
jns
cld
in
add
pop
inc
or
add
movsb
mov
push
and
dec
dec
add
hlt
push
cmp
push
movb
mov
bound
xchg
je
or
add
ss
pop
inc
mov
rol
shll
pop
inc
and
push
lock
mov
push
inc
dec
xchg
cltd
mov
cli
addr16
adc
push
jb
adc
popf
mov
mov
cs
mov
pop
or
popl
pop
sub
sbb
push
and
lcall
test
sbb
push
pop
movsl
adc
pop
pop
mov
adc
cmovl
lret
add
dec
mov
mov
add
xchg
pop
sbb
outsl
out
inc
push
dec
push
jo
pusha
mov
aas
push
mov
or
jb
nop
test
push
data16
jbe
adc
testl
pushl
stos
mov
and
clc
ds
add
rolb
mov
ret
jl
loop
push
jle
in
addl
shll
or
sbb
mov
cmp
inc
xchg
leave
dec
insl
loopne
push
mov
add
sbb
sbb
mov
jo
xchg
jmp
adc
inc
sti
add
inc
sub
mov
daa
pop
push
nop
adc
pop
sub
loope
lods
fs
pop
jbe
inc
mov
mov
inc
addl
je
push
gs
adc
add
cs
dec
cmp
push
stc
pusha
or
jns
xor
or
icebp
sbb
xchg
subb
dec
sub
cltd
adc
cmp
mov
movsb
jecxz
rclb
xor
push
sub
or
push
add
add
jae
jmp
add
adc
xor
push
fcmovb
mov
icebp
lret
dec
inc
dec
lock
jns
mov
lret
call
mov
pop
enter
test
mov
gs
pop
inc
mov
adc
lock
or
sbb
jne
mov
loopne
or
data16
cmp
fadds
jp
pop
pop
jl
sub
push
mov
pop
bound
mov
scas
out
sub
jg
jl
ret
test
js,pn
sub
and
fstl
sarb
aas
inc
push
scas
sub
in
adc
jecxz
xor
fcmovnbe
ja
push
movsb
inc
int
lock
mov
sbb
push
xchg
outsl
fwait
icebp
imul
cmp
mov
cmc
ret
test
test
clc
dec
stc
ret
in
out
lods
mov
sbb
mov
and
imul
mov
shl
xor
add
add
int3
dec
js
pusha
sbb
inc
inc
and
lea
mov
loopne
sarb
xlat
cmp
inc
sarb
add
vmovsd
adc
sbb
xchg
mov
or
mov
adc
xor
inc
xchg
jo
and
rclb
lcall
and
xor
mov
rol
mov
ror
xor
call
sti
shr
xor
sub
jnp
xor
shr
xor
add
mov
dec
add
loopne
popf
out
dec
mov
movsb
jg
jae
or
and
xor
add
add
xchg
jecxz
mov
outsb
sub
jge
add
pop
lds
notb
repnz
cli
lahf
scas
test
or
add
xor
and
and
xchg
push
sbb
popa
pusha
aam
adc
xor
push
fs
push
imul
fmull
inc
sti
outsb
movsb
pop
push
or
xlat
ret
mov
rolb
testl
hlt
add
xor
fsubr
sbb
rcl
call
lock
xor
sub
ljmp
rol
rol
out
add
movsb
imul
fsub
in
dec
xor
imul
in
shl
in
sub
dec
lahf
push
cmp
bound
mov
mov
add
or
aaa
loop
sbb
ret
dec
inc
push
lock
call
loopne
movsb
jb
xor
call
fs
cmp
xchg
cmpsb
imul
cmp
jno
xor
push
push
push
testb
cmp
fidivrl
push
fcomp
or
push
xor
and
and
mov
subl
into
add
mov
add
or
test
roll
inc
clc
mov
inc
enter
jo
ret
push
jo
ficoms
add
mov
xchg
adc
xor
cs
stc
adc
push
loop
mov
add
notb
loopne
cltd
push
inc
add
dec
subl
imul
fisubrl
fdivrs
or
clc
jp
push
and
add
xorb
inc
and
dec
fs
call
sbb
pop
lret
inc
add
add
adc
cli
stos
addb
push
or
imul
sub
nop
cmpsb
in
in
and
shr
rolb
inc
sbb
scas
add
cli
xor
xchg
mov
fcom
aaa
rorb
xorb
add
and
shl
in
pusha
inc
and
add
inc
add
and
in
movsb
sahf
dec
fs
adc
int
push
dec
xor
sbb
xor
push
and
pop
dec
add
rolb
push
scas
dec
push
sbb
movsb
cltd
add
cmp
sub
or
cmp
stos
nop
mov
push
dec
in
movsl
add
or
xor
inc
pop
je
pop
and
rorb
pusha
inc
mov
xchg
pop
mov
rorb
and
sbb
adc
movsb
add
sub
in
adc
jl
rcll
dec
dec
dec
icebp
jl
inc
sub
stc
stc
mov
pop
or
xchg
inc
mov
aam
add
dec
negb
dec
lcall
adc
adc
push
cmpsb
imul
adc
add
fsubrp
add
and
xchg
inc
les
pop
movb
pushf
out
pop
add
adc
mov
lcall
cmp
jb
lock
fistpl
incl
sub
lea
sub
cmc
push
adc
cli
decl
sub
sarb
cld
fisubs
mov
or
or
mov
dec
insl
insl
fstl
jne
adc
inc
fsubl
cmpsb
mov
sub
push
xor
imulb
add
sub
sub
mov
add
or
mov
dec
jne
pop
in
add
dec
sarb
mov
jl
in
xchg
sub
mov
cmp
jbe
or
rorb
push
fs
jle
push
aam
cmp
jae
push
pop
mov
xchg
sub
sub
stos
or
sbb
cmp
scas
or
mov
mov
outsl
pop
loopne
ror
mov
mov
xchg
or
xchg
ljmp
adc
mov
adc
and
lar
ss
inc
mov
cmp
ja
or
cmpsl
cmp
call
aaa
popa
repz
push
pushw
or
dec
mov
lcall
jle
movsl
inc
rorb
mov
or
inc
adc
sbb
dec
dec
xchg
loop
xor
cmpb
xchg
pusha
lret
jmp
fstpt
mov
mov
imul
das
je
or
mov
adc
imul
jne,pn
pop
sbb
idivb
mov
mov
inc
lea
inc
mov
jmp
dec
mov
dec
xor
push
movsb
jne
jmp
sub
jnp
lcall
and
sahf
add
sbb
cli
or
int
or
inc
pushf
stc
inc
cmp
fs
ret
dec
dec
inc
push
inc
and
mov
push
and
cltd
push
pop
mov
insb
and
pop
cwtl
lahf
and
rol
out
lahf
adc
lock
mov
lea
cmp
cld
xor
or
insb
hlt
and
mov
incb
subl
sahf
rcrb
cmp
cwtl
xor
insl
notb
push
cmp
ljmp
je
and
insl
mov
cmpsl
lret
xchg
in
xchg
orl
mov
push
add
cli
gs
push
add
push
aam
mov
jno
xchg
loop
xchg
mov
cmpsb
cld
negl
and
inc
inc
test
int3
int3
and
jb
int
mov
pop
mov
jecxz
add
jmp
cwtl
aas
les
es
dec
hlt
xor
je
fs
sub
inc
shlb
and
lock
test
incb
inc
sub
push
jae
mov
jmp
sbb
ret
xor
xor
test
sub
lods
in
add
push
push
cmp
push
inc
inc
push
xchg
xchg
xchg
iret
ror
in
ja
lret
cmp
jg
or
jge
and
dec
int
jle
es
sub
sub
and
pop
cmp
jl
pop
jp
adc
adc
inc
test
in
mov
and
jbe
mov
or
test
fwait
and
or
repz
je,pn
test
jne
je
outsb
and
pop
or
jb
jb
je
xor
inc
and
movb
enter
into
je
enter
push
loop
cwtl
add
inc
out
adc
push
push
push
mov
inc
and
shll
adc
pusha
mov
fidivs
ja
pop
mov
push
mov
push
je
cmp
cmp
inc
jbe
ss
push
add
jg
xchg
loopne
pop
sub
add
sahf
sarl
jle
je
sub
cwtl
mov
or
xor
aad
push
mov
xorb
add
pop
outsl
pop
aas
and
jecxz
fs
sbb
mov
cwtl
jbe
out
add
pop
xchg
mov
lods
sbb
push
pop
arpl
pop
ljmp
add
rorl
pop
inc
and
lea
sub
xor
movl
push
add
pop
jb
addl
jg
movb
inc
cmpl
enter
xor
mov
jnp
jo
or
xchg
sbb
pop
cwtl
xor
push
dec
xor
mov
mov
mov
incl
jbe
pop
fisubl
inc
arpl
lcall
movb
jae
out
loopne
dec
mov
insl
pop
push
out
loope
cmp
je
test
adc
and
les
push
fsts
sti
mov
cwtl
mov
lea
cmpsb
jbe
pop
mov
mov
add
in
insb
pop
arpl
or
add
dec
ss
sub
in
xorl
test
mov
pop
and
nop
pop
inc
inc
loop
inc
inc
mov
sub
scas
jl
add
cmp
lcall
sbb
push
in
xor
mov
rorb
push
or
mov
adcl
lock
popa
sub
repz
hlt
cld
sbbl
cltd
xor
jo
pop
push
pop
mov
icebp
or
jae
ljmp
loope
add
or
or
stos
inc
sbb
or
mov
pusha
jb
cs
loope
xorl
mov
push
add
inc
fisttpl
and
test
pop
pop
pop
lods
stos
pushl
test
cmpsb
insl
mov
int3
push
mov
push
outsb
loop
cmpsl
pop
mov
and
pusha
sub
jbe
sbb
pop
adc
push
mov
lahf
sub
pop
cmp
addl
xchg
xchg
mov
pop
jns
das
or
sbb
mov
iret
push
leave
es
sbb
mov
pop
in
dec
or
sub
or
cmp
and
and
xor
mov
mov
stos
idivb
ficomps
xchg
movb
sbb
dec
cmpsb
imul
dec
clc
push
pop
fwait
push
rolb
ljmp
mov
xor
xor
mov
test
jne
add
cmpl
and
daa
shrl
js
cmp
mov
jnp
xchg
push
push
fdivl
sarb
pusha
sub
mov
cmp
mov
das
stos
das
sbb
add
bound
add
or
stos
mov
cmp
scas
xchg
dec
dec
sub
cmpl
push
fildl
in
fcomp
and
je
push
mov
inc
je
pop
cmp
out
jge
inc
inc
inc
xchg
mov
cmpl
and
aaa
sbb
das
lods
lock
in
cwtl
add
inc
loope
xchg
shlb
jle
andl
inc
fsubr
cmp
fldcw
sbb
jo
push
push
orl
inc
fsubp
neg
pusha
pop
and
jmp
insb
jne
jl
sub
sbb
dec
jp
sbb
stos
inc
jmp
mov
loopne
inc
adc
lock
adc
cmp
jne
loop
jbe
les
aam
adc
jmp
cmp
adc
scas
xor
jp
inc
pop
inc
adc
scas
dec
fcompp
xchg
mov
mov
jne
movsb
push
jbe
mov
cltd
test
adc
pop
jge
cmp
pop
or
or
jo
and
inc
jecxz
add
add
dec
and
adc
ljmp
inc
ret
das
clc
adc
sbb
nop
jmp
inc
push
sbb
dec
popa
in
adc
pop
je
pop
mov
inc
mov
jecxz
adc
rcrl
icebp
mov
pop
aaa
mov
add
jmp
add
movl
cmp
insl
outsl
inc
addr16
pop
int3
and
xor
dec
cmp
sub
in
mov
dec
repz
lahf
inc
mov
mov
mov
rclb
add
push
lcall
ficoml
dec
push
add
xchg
jecxz
clc
or
das
mov
mov
push
cmp
and
xor
xor
cmp
jbe
sub
ja
and
int
xor
dec
fadds
stos
push
sub
xchg
lret
in
xor
xor
cmp
pop
cmp
filds
sbb
arpl
jns
xchg
xchg
cmp
pop
jl
mov
mov
xchg
into
adc
data16
pop
inc
lret
enter
sub
push
xchg
push
enter
and
lods
pushf
cmp
pop
sbb
push
es
push
add
push
shrb
fsubs
les
daa
push
inc
mov
ljmp
call
sahf
push
int3
sbb
push
jne
jmp
pusha
popf
push
or
xchg
or
jbe
mov
inc
add
cmovle
sahf
orl
gs
add
lods
xlat
and
mov
sahf
or
or
add
out
or
popa
pop
ret
sbb
loope
push
cmpl
fcompl
sub
xor
rclb
ss
sub
sbb
out
jne
sbb
dec
ds
or
ret
xchg
inc
imul
and
je
pop
add
mov
addl
inc
fistpl
test
jnp
jne
loope
clc
jne
lret
aas
or
stos
inc
xchg
inc
punpckldq
mov
sub
cmpsb
hlt
xchg
mov
and
cwtl
xchg
ja
pop
inc
shll
mov
cmp
ret
jmp
cmovle
ret
mulb
inc
insl
cmp
xchg
inc
push
addl
dec
js
dec
es
data16
inc
add
gs
xchg
call
in
pop
lods
out
nop
ret
push
xchg
int
dec
loopne
mov
dec
rorb
insb
addr16
dec
push
mov
add
cmp
or
sbb
sub
cmpsl
mov
sbb
mulb
push
imul
xchg
pop
pop
test
clc
les
iret
in
xor
inc
pushf
pop
fidivl
or
leave
inc
movsb
shll
or
fwait
sahf
inc
or
sbb
xchg
ret
or
in
nop
sbb
lahf
xchg
aas
inc
xor
insb
add
cmp
pop
jmp
sbb
hlt
inc
inc
pop
push
jo
and
mov
in
rcr
add
or
inc
cmp
pop
xchg
cmp
arpl
outsb
xchg
in
xorl
inc
mov
adc
push
xchg
negb
mov
cmpsb
gs
scas
xlat
popa
sbb
or
dec
scas
mov
cld
les
inc
ja
shll
push
and
fsubrs
pop
sbb
adc
or
xchg
aam
and
into
pop
xor
lret
inc
cld
pop
mov
push
sub
leave
inc
dec
push
jnp
adc
mov
adc
rcrl
dec
xor
push
adc
imul
sbb
xor
cmp
and
pop
push
mov
push
rcl
pop
xchg
cmc
outsl
push
sbb
push
rolb
daa
in
ja
adc
inc
add
mov
adc
push
pop
movsb
cmpsb
out
mov
bound
mov
adc
lcall
int
and
push
into
addr16
lcall
pop
lahf
les
imul
sbb
xchg
push
aam
cmp
dec
iret
inc
call
mov
int3
aam
test
popf
or
adc
stos
inc
mov
and
cmc
sub
loopne
outsb
or
sub
stos
fisubrs
int3
xchg
pop
fcmovb
notl
mov
andl
adc
rorb
loop
inc
dec
mov
jo
in
and
dec
insb
rcrl
ja
fadd
rcll
dec
sti
dec
dec
jb
push
dec
dec
adc
xor
enter
fs
ss
or
pusha
ljmp
cmpsb
imul
and
mov
fstps
jno
or
push
test
add
or
xor
cmpsl
popf
add
and
xchg
ret
loop
and
cmp
daa
mov
inc
inc
push
mov
addl
loop
andl
sbb
mov
orb
mov
shrl
cmp
push
lret
jp
es
cmp
adc
or
cmp
pop
fiadds
je
cmpsb
mov
incl
and
adc
loope
mov
mov
pop
xchg
fcmovnu
and
jle
es
push
sub
adc
lods
popf
and
pop
push
aam
dec
and
cwtl
pop
arpl
sti
push
mov
ja
jmp
inc
fs
inc
test
shlb
sbb
xor
cmp
add
adc
mov
or
sbb
daa
or
mov
jg
fs
xchg
gs
xor
push
flds
mov
cmp
cwtl
mov
jb
cmpsb
mov
pop
xor
push
jle
cli
notl
lea
mov
icebp
pop
test
ret
and
push
xchg
jle
fwait
lret
add
roll
push
scas
and
jae
push
mov
rcrb
mov
test
cmpsb
dec
xchg
mov
adc
mov
mov
jmp
inc
push
inc
nop
lret
fmuls
nop
in
shrb
testb
and
jne
orl
sbb
push
or
cmp
cli
adc
pushl
stos
cwtl
adc
push
sti
inc
jmp
jge
pop
addl
insb
stos
add
mov
pushl
or
leave
push
sahf
test
into
push
push
inc
in
sub
lahf
std
lock
cwtl
inc
or
dec
jno
xchg
inc
je
push
push
push
or
add
add
pop
push
xor
push
mov
cs
adc
add
insl
in
mov
push
out
or
sub
adc
sub
cmpsb
push
rol
sbb
imull
pusha
sbb
pop
inc
push
jl
pop
push
jo
je
cmp
jbe
lds
mov
xchg
dec
xorl
ret
out
push
jnp
enter
push
push
jp
sbb
jbe
cmp
insl
xor
and
xchg
nop
push
sbb
pop
sti
lret
mov
jnp
test
loope
bound
in
inc
pop
movsb
jmp
push
cmp
movsb
orl
ja
mov
mov
push
mov
or
lret
mov
adc
cmp
cmp
out
push
add
fs
adc
push
push
lcall
push
cmp
imul
add
lods
inc
call
pop
add
mov
int
int3
mov
fsubs
ret
out
jg
dec
movsb
lahf
shlb
pop
mov
addl
movsl
js
bound
fwait
ret
add
add
mov
jbe
sub
mov
andb
inc
movb
popa
mov
mov
jmp
test
aam
cld
fisubl
movb
xchg
xor
push
push
outsb
scas
jmp
adc
cmp
inc
push
jno
mov
enter
cmp
mov
dec
pop
mov
mov
lods
pop
rorb
adc
xchg
gs
frstor
or
add
outsb
adc
int3
adc
hlt
pop
movsb
jne
fsubs
jne
or
adc
test
enter
inc
movsl
pop
test
inc
mov
or
jne
mov
test
xor
jns
subb
js
adc
mov
and
xchg
adc
popa
pop
push
add
add
subl
roll
mulb
clc
leave
sub
cmp
cwtl
rcr
cld
cmp
jbe
sub
add
mov
and
adc
pop
mov
fdivrl
push
push
mov
addr16
mov
idivl
jbe
shlb
cmp
jb
xor
loop
jp
scas
inc
push
inc
push
ret
push
adc
lahf
fs
lret
and
mov
pop
mov
dec
push
inc
mov
fwait
mov
clc
daa
push
push
pop
xor
nop
inc
inc
sbb
xchg
hlt
pusha
arpl
pop
test
gs
inc
inc
cmp
xchg
mov
je
sub
clc
adc
or
push
lods
sbb
push
js
clc
sub
ja
repnz
inc
dec
add
mov
lock
lock
cmpsb
cmp
push
add
xor
or
sbb
push
fsts
pop
xor
pop
rorb
pop
sub
pop
rolb
popf
sbbl
mov
add
jb
paddb
movsb
cld
inc
adc
add
push
mov
push
add
cmp
fwait
lea
jne,pt
inc
jmp
inc
push
add
pop
adc
sbb
adc
xchg
ret
add
inc
mov
pop
mov
imul
mov
enter
jno
mov
add
xorl
out
shrb
adc
jb
push
cs
adc
mov
loop
loop
cltd
xchg
add
sti
popa
mov
sub
push
inc
aaa
dec
sbb
xchg
cmp
sbb
push
dec
push
sbb
dec
idivl
popa
shrl
scas
sub
out
adc
sbb
adc
ret
pop
inc
ss
cmp
add
stos
stc
ja
and
test
add
jne
fmul
jb
sbb
cld
ljmp
cmpsl
rcrb
jne
mov
not
into
mov
inc
sub
add
fcmovb
push
loope
mov
pop
push
jmp
dec
les
pusha
xchg
rorl
dec
mov
cmc
lea
insl
adc
sub
movsb
sub
push
aam
cmp
sbb
or
pop
add
dec
pop
stos
adc
adc
or
xchg
negl
les
js
cmp
lret
adc
icebp
mov
pusha
fidivrl
jl
inc
xlat
adc
icebp
jmp
jne
add
mov
stos
sbb
or
inc
call
xor
lds
insl
push
jg
sbbl
adcl
filds
push
and
xchg
jae
jnp
add
std
test
dec
mov
test
xchg
fidivrs
add
fsub
js,pn
ret
sbb
pop
cmp
jne
pusha
xor
call
mov
and
stc
pop
cmp
test
push
xor
mov
adc
jb
pop
push
pop
and
stos
cmp
testb
mov
push
mov
testl
test
push
mov
mov
jo
xor
bnd
xor
or
andb
jo
cmpsb
insb
adc
imul
and
loope
insl
pop
sbb
inc
das
push
ljmp
and
add
xchg
xor
sub
sbb
adc
mov
add
and
adc
mov
mov
testl
es
adc
mov
sbb
xchg
imul
cmp
lds
popf
inc
push
mov
mov
aas
push
jecxz
orl
sbbl
loop
das
cmp
add
and
add
fldl
xchg
lods
out
pop
rcrb
sub
shlb
push
popf
sub
loop
mov
add
fs
mov
add
and
cmp
jge
stos
push
mov
jecxz
mov
mov
inc
into
lods
push
mov
icebp
push
outsl
jge
mov
and
pop
mov
fs
lods
and
or
dec
js
adc
stos
aaa
jmp
push
add
sub
insl
in
sbb
add
lock
pop
or
or
or
dec
inc
stos
icebp
inc
enter
jle
xor
cli
gs
jl
inc
movb
dec
call
jmp
mov
pop
stos
xchg
les
adc
dec
push
cmp
sub
jg
and
roll
add
push
les
mov
pop
inc
add
lcall
push
mov
mov
inc
pop
pop
xchg
test
and
lea
cmp
in
sub
xor
xchg
dec
js
and
mov
cmpl
cmp
and
addl
or
int3
mov
dec
test
hlt
xor
shlb
sbb
push
subl
xor
or
inc
push
sbb
jmp
mov
sbb
repz
js
mov
and
int
jbe
inc
sub
rorl
jbe
mov
ret
xchg
xchg
or
sbb
es
mov
sahf
add
xor
or
dec
hlt
add
push
test
lea
int
mov
sub
div
adc
and
inc
mov
xor
aaa
lret
pop
loop
outsl
dec
filds
lahf
pop
push
pop
adc
jecxz
ret
outsl
xor
test
or
and
scas
out
mov
cmpl
fnsave
sbb
push
push
clc
bound
inc
push
fcoms
adc
sbb
or
out
sti
loope
sbb
dec
leave
ret
pop
mov
cmp
scas
sub
repnz
inc
cmpsl
in
add
sub
adc
aad
inc
xor
imul
inc
mov
add
dec
jge
js
adcl
test
stc
cmp
push
push
mov
hlt
mov
jne
jne
ds
ret
push
fcoml
mov
fs
sub
or
sub
pop
mov
movsl
and
push
movsb
sahf
or
insl
xlat
lea
push
loope
loopne
jle
lret
sbb
jno
push
mov
rorb
sbb
out
push
sbbb
repnz
cmp
dec
mov
adc
orb
and
push
pop
pop
mov
adc
je
jl
ret
xchg
je
xchg
iret
adc
mov
push
or
sarb
shlb
orb
nop
pop
jp
aad
push
dec
jg
xchg
in
add
jge
cli
imull
add
inc
mov
cmp
test
popa
inc
dec
test
fdivs
rolb
add
testl
sahf
jecxz
add
inc
sub
cmp
je
mov
or
xor
cs
mov
dec
cmp
or
rol
add
mov
in
and
pusha
aad
dec
rcrl
add
adc
test
pop
mov
mov
inc
fbstp
je
dec
sbb
adc
or
insl
call
mov
lea
orl
out
xor
push
mov
xor
aad
xchg
mov
out
adc
jmp
cmpl
and
cmpsb
repz
push
ds
mov
cmp
xor
mov
decl
mov
xlat
mov
sbb
pushf
notb
sbb
jmp
adc
add
fs
loopne
push
xchg
scas
out
sub
ret
rclb
je
shrb
int3
in
in
dec
xor
dec
push
or
cmpsl
test
lcall
xor
ljmp
int
idivl
clc
push
cmp
ss
pop
xchg
orl
or
sub
jg
cmp
mov
push
jae
pop
pop
add
jl
add
call
xor
aad
or
xchg
mov
adc
xchg
cmp
nop
dec
add
adc
pop
sbb
cmp
push
test
hlt
mov
sahf
test
rcl
scas
xchg
or
mov
pop
jl
lods
mov
push
inc
hlt
mov
push
xor
outsl
mov
xor
or
popf
pop
xor
std
les
sbb
daa
mov
ds
je
enter
jl
dec
push
je
pusha
lea
outsb
push
adc
sbb
lock
lock
add
mov
xchg
sub
add
or
jnp
push
xchg
andb
insl
xchg
fsts
je
xchg
ret
xchg
icebp
inc
das
jbe
mov
cmp
or
adc
notl
mov
or
mov
xchg
cld
bound
xchg
inc
or
cmpsl
add
adc
add
shrb
cmp
mov
adc
dec
mov
mov
nop
or
rclb
in
add
or
movb
les
mov
or
xchg
xchg
test
add
jno
mov
jo
dec
adc
cmp
jb
clc
lea
jns
add
rcll
notb
or
cli
pop
xor
mov
xor
testb
pusha
fistpll
pop
push
lret
or
mov
or
jnp
jge
fnsave
je
mov
mov
insb
movsb
cmp
adc
dec
inc
dec
inc
jns
int
imul
mov
push
test
push
mov
data16
push
loopne
xor
xchg
inc
ljmp
dec
mov
xchg
inc
lcall
and
and
jns
rorl
or
enter
pop
pop
lods
rolb
call
movsl
add
add
fxtract
jne
push
pop
push
add
js
fistl
cld
aam
sbbb
sub
jne
mov
push
add
ss
stc
repz
add
or
nop
data16
add
xlat
add
jb
cld
clc
pushl
xor
inc
sti
mov
or
sbb
int
mov
loope
outsl
push
mov
adc
cld
pop
cs
xor
inc
movl
cmp
push
mov
adc
add
inc
das
mov
adc
sub
shr
lea
jnp
js
mov
mov
pop
and
pop
cmp
imul
shrb
push
adc
data16
rcrb
push
add
cwtl
add
popf
ljmp
insl
imul
shlb
add
and
enter
cmpl
or
cmpsl
mov
cmp
adc
cmc
and
cmpsl
jge
push
pop
add
jp
dec
insl
dec
test
bound
mov
lods
fcomps
fwait
data16
fsubr
jmp
pop
add
pop
mov
in
mov
add
bound
std
push
das
pop
pop
push
push
sbb
jb
sub
or
lea
ficomps
inc
jns
adc
adc
rcrb
movsb
movsl
push
or
dec
mov
xchg
jo
sub
cmc
nop
std
rorb
dec
add
mov
lods
leave
mov
jns
add
adc
push
sub
int
mov
aam
adc
rcrl
push
sbb
jo
mov
cmpsl
dec
jo
loopne
jmp
arpl
dec
mov
and
orl
data16
dec
ror
lods
test
roll
je
insb
inc
or
cltd
fsubs
cmp
or
add
sarl
cmpb
in
addl
decl
jge
add
jmp
popa
push
shrb
xor
mov
mov
sti
ret
or
and
push
add
push
mov
sub
call
nop
sbb
push
data16
push
lods
inc
push
insl
jne
mov
xlat
push
aad
dec
pop
sete
jbe
jb
dec
and
mov
cld
xchg
lock
mov
fwait
sub
nop
inc
push
dec
xor
inc
aam
cmp
addr16
ds
cmpl
cmpb
lret
mov
ss
das
dec
clc
and
mov
inc
mov
pop
pop
cmpb
dec
jb
push
jae
mov
in
mov
sub
repz
pop
insb
mov
sub
mov
jg
fwait
inc
jmp
push
push
mov
call
or
mov
mov
sbb
iret
and
push
or
add
lds
aam
ja
adc
mov
gs
scas
adc
mov
add
push
in
pop
lock
jl
outsl
icebp
xor
add
loopne
add
add
xchg
jmp
cmpsb
adc
fildl
xlat
nop
aam
adc
inc
jge
and
int
lret
in
lods
int3
lcall
jge
jmp
push
fabs
adc
xchg
loopne
push
jno
mov
outsb
mov
pop
bound
mov
lea
rcrl
mov
sbb
lea
xchg
in
add
add
and
dec
dec
cmpsl
and
or
rcrb
cmp
jo
in
cmpl
sarl
test
mov
cmp
add
enter
sbb
inc
test
push
sbb
sub
bound
call
jae
popl
or
jge
jmp
sub
out
clc
jno
repnz
mov
pop
mov
or
decb
push
sbb
icebp
or
repz
xchg
inc
fidivs
sbb
or
sbb
sub
loopne
test
je
sti
sbb
and
fadds
adc
mov
mov
popf
shlb
or
in
cmpsl
adc
aam
mov
scas
faddl
fdivrl
xor
jl
stc
pop
roll
add
xchg
in
jge
xchg
cmp
add
push
mov
into
aaa
mov
fiadds
lock
push
and
rorl
mov
sub
lods
sub
cmp
int3
fbld
sbb
dec
or
imul
popf
xor
in
push
jb
cmp
orl
movsb
pop
or
ja
xchg
push
xchg
xchg
imul
clc
gs
aam
mov
xchg
mov
roll
notl
cmp
push
dec
add
sub
push
sub
fmuls
push
inc
jmp
ret
in
cmp
add
add
movsl
or
mov
jbe
movsl
mov
add
or
lock
pop
dec
dec
or
mov
push
enter
cli
mov
push
arpl
jo
mov
sarl
outsl
sarb
icebp
mov
sbb
nop
rcll
jnp
mov
rcrb
pop
imul
sub
test
sbb
xchg
loope
clc
stos
rcrl
or
jmp
shl
jmp
call
push
xchg
sub
insb
mov
int
or
enter
pop
lock
sub
xor
pop
mov
push
push
orb
fmul
add
imul
addb
adc
adc
aas
lret
inc
inc
mov
xor
and
push
int3
push
fisttpl
inc
jns
movl
decl
jb
mov
sub
ja
inc
les
mov
ficomps
jle
sub
push
mov
jecxz
cmc
daa
sbb
adc
mov
push
jb,pn
pusha
cmpsb
mov
ss
cld
pop
xchg
and
pop
adc
andl
das
fildl
push
sub
xor
pop
add
add
scas
push
jne
xor
cmp
ja
mov
mov
in
mov
sub
xchg
add
sarl
scas
mov
frstor
loopne
dec
sub
and
in
sbb
inc
cmpl
adc
jecxz
int
adc
add
je
lea
insb
sub
xchg
sbb
xchg
or
mov
dec
test
jmp
loope
or
or
mov
and
int
imul
push
insb
insl
out
inc
add
push
pop
inc
sbb
xor
inc
insl
cmp
jns
lahf
push
jo
xchg
out
pop
fcoms
xchg
in
add
bnd
add
fmull
jge
and
ret
push
jae
lea
push
sub
xorl
sbb
adc
inc
or
push
js
pop
pop
dec
inc
ficomps
or
mov
frstor
sbb
and
subl
faddp
or
sbb
cmp
add
hlt
push
jp
sub
mov
and
cltd
inc
fadd
jae
sahf
or
movb
mov
add
idivb
fsub
sub
clc
subl
push
push
add
mov
fdivl
imul
and
pop
push
enter
shrb
push
dec
sub
bound
add
nop
push
repnz
pop
lret
adc
aaa
pushf
cmp
add
rclb
push
mov
or
incl
add
lds
nop
fdivrs
sbbb
fldln2
add
loopne
jge
ja
pop
enter
ja
adc
inc
inc
or
pop
clc
sub
or
dec
or
mov
and
pushf
in
repnz
or
or
lock
xchg
inc
dec
mov
adc
outsb
jle
sbb
mov
push
cltd
adc
fisubrl
je
mov
xlat
push
bnd
jb
add
orb
mov
mov
xor
and
or
sbb
push
pop
les
aam
and
push
rorb
adc
adc
rcrb
sub
push
inc
cmp
add
jbe
loopne
mov
popa
pop
and
mov
lods
stos
fmuls
cli
leave
mov
shlb
lea
cli
ja
cmpb
jb
inc
lods
out
aas
ret
push
enter
sbb
pop
pop
inc
icebp
movsb
adc
or
and
mov
arpl
loop
popa
add
and
inc
std
pop
arpl
xorb
cmpsb
imul
imul
mov
add
imul
fmull
and
or
cmp
ja
or
adc
dec
adc
cld
cld
xor
and
pop
dec
push
and
movsb
mov
test
push
adc
fs
mov
shll
scas
cld
lcall
les
rcl
inc
dec
inc
nop
add
mov
test
sbb
cmp
in
inc
sahf
push
xlat
sub
sub
les
add
xor
mov
and
xchg
int3
mov
xchg
xor
push
mov
cmp
pusha
mov
jge
add
dec
mov
mov
loopne
jecxz
mov
add
repz
cmpl
xor
pop
ret
push
mov
push
aaa
add
jno
test
pop
cmp
mov
mov
lret
mov
mov
insl
xchg
adcb
popf
mov
push
call
xchg
mov
addr16
sub
dec
mov
push
lret
clc
repz
ficoml
pop
pop
mov
outsl
push
push
push
data16
push
rcrb
sbb
cmc
mov
and
and
outsl
add
cmc
inc
xchg
inc
cs
ja
push
mov
push
mov
pop
leave
stos
sub
cmpsb
push
les
aam
std
insl
ja
push
adc
jle
and
mov
sub
fwait
mov
lret
into
insb
jnp
popf
jg
fwait
mov
les
xchg
lea
cmpsl
xor
or
ja
movsl
pop
loopne
orb
loope
dec
and
jl
in
pop
mov
dec
cmp
xor
js
jge
jo
sbb
and
add
push
adc
adcb
xor
xchg
cmpsb
pop
pop
in
sub
movsl
sub
inc
imul
dec
std
cmp
jle
jne
and
sub
ss
stos
cmp
adc
xchg
pop
push
fwait
sbb
scas
lods
inc
insl
ljmp
icebp
subb
or
sbbl
inc
add
pop
cmp
jge
inc
mov
jbe
sub
mov
adc
push
out
adc
rolb
aam
fstpt
cwtl
xor
mov
add
add
loop
jbe
cmp
repz
xor
or
jns
cmp
dec
xchg
iret
lods
in
push
xor
or
imul
cmp
and
jae
mov
loopne
xchg
ss
decb
mov
or
push
add
andb
inc
jbe
push
test
pop
call
cmp
stc
popa
loop
lahf
cmp
mov
mov
jp
jl
inc
cmp
inc
mov
movb
xchg
nop
jno
push
nop
iret
int3
mov
mov
add
adc
cwtl
xor
mov
jne
xchg
dec
imul
std
mov
add
adc
ja
mov
mov
or
int3
dec
mov
or
int
iret
add
add
imul
cmc
daa
rcll
fnstcw
jge
lahf
and
lock
or
adc
push
cmp
and
shr
inc
cmp
jl
pop
out
insl
sti
adc
or
sarb
pop
fidivl
ret
push
xor
add
adc
movsb
dec
addb
mov
pop
inc
enter
insb
mov
xchg
xchg
jecxz
sbb
or
mov
fiadds
mov
cmc
xor
pop
ret
push
das
bound
and
or
push
jl
adc
add
rcl
pop
ret
rclb
stos
sbb
das
mov
inc
in
aaa
inc
leave
sbb
mov
mov
jl
xchg
je
pop
cs
push
add
ja
jl
ret
add
push
js
mov
cmp
or
movntps
push
or
jl
inc
cmp
pop
lahf
rolb
xor
outsl
pop
or
or
or
adc
push
xorb
shl
and
sarl
js
inc
jmp
add
loope
shl
lret
mov
pop
rorb
mov
mov
pushf
gs
mulb
add
mov
sar
jge
dec
xor
fidivrs
addb
ja
add
add
sahf
xor
ret
push
sbb
mov
andb
add
or
and
and
mov
loopne
mov
cwtl
sbb
jge
lock
add
cmp
incb
inc
mov
or
add
add
lea
enter
icebp
or
adc
arpl
xor
bound
mov
xor
sbb
push
mov
aas
add
lret
mov
mov
xchg
inc
lcall
leave
jle
das
pushf
add
shrl
ret
mov
and
sub
mov
icebp
cmp
and
jp
dec
ljmp
or
ret
adc
sub
add
add
sarb
lods
or
mov
xorb
push
js
in
pop
into
std
mov
lock
adc
and
jae
dec
shlb
or
imul
xchg
or
scas
mov
mov
fimuls
shll
xchg
add
pusha
iret
jbe
push
loope
and
cmp
out
out
jno
or
mov
cmp
aaa
jge
test
cmp
or
push
xorl
mov
cmp
xor
int
jbe
fwait
push
push
aam
sub
xlat
les
aam
mov
jg
mov
pop
push
outsl
adc
push
fdivl
ss
insb
fisubrs
jmp
push
js
jbe
mov
jmp
das
je
loopne
nop
sub
cmp
cs
fnstsw
inc
adc
add
sahf
popf
shlb
mov
cmp
test
adc
cmp
in
mov
pushf
testb
push
ret
sub
int3
jno
xor
adc
cmp
sbb
enter
or
es
sbb
xchg
or
or
lods
push
pop
jae
add
bound
xor
adc
aad
testb
addl
dec
fiadds
clc
xchg
icebp
push
sbb
xor
pop
test
mov
movsb
lea
sbb
mov
xor
or
popa
and
adc
loopne
outsb
xchg
pop
pop
ret
mov
or
push
ljmp
dec
clc
andb
lea
inc
fcoml
push
pop
imul
sarl
or
sub
add
lcall
adc
test
stc
inc
ss
push
jne
in
sub
sub
push
add
or
push
push
dec
adc
mov
mov
daa
push
jo
pop
or
enter
adc
inc
mov
ja
sub
into
cmp
sub
int
aam
mov
or
and
insb
and
dec
inc
adc
leave
jno
out
leave
inc
or
or
push
and
dec
adc
mov
xor
pop
push
gs
rolb
out
adc
je
and
lcall
and
clc
mov
cmp
xchg
xor
or
cmp
bt
sbb
pop
sbb
push
mov
mov
xchg
jne
push
lods
idivl
sar
sarl
sbb
pop
push
push
arpl
cmp
mov
mov
dec
mov
gs
lds
loopne
scas
pop
icebp
cmpl
insb
or
fildl
je
mov
ret
and
pop
mov
loopne
pop
push
jns
push
push
xchg
push
scas
adc
js
cwtl
adcl
int
dec
mov
adc
or
cmp
movb
cltd
push
and
lods
test
stos
mov
arpl
fmuls
push
andb
das
adc
sbb
push
add
inc
imul
mov
sub
sbb
xor
aas
sbb
out
cmp
jle
js
and
fldcw
mov
loopne
push
sar
inc
cmp
in
add
or
js
dec
mov
sbb
in
cs
jne
push
add
pop
adc
leave
push
inc
xor
push
das
pop
mov
push
inc
mov
jo
jo
xor
and
or
xchg
jne
repz
add
enter
jp
in
push
arpl
test
push
or
dec
call
insb
xor
inc
sarb
shll
or
jo
dec
inc
pusha
mov
std
mov
idivl
push
loopne
add
hlt
push
sub
inc
fcoml
scas
stc
jo
jne
addl
fcomps
adcb
cmp
test
cmp
ja
hlt
clc
adc
fnstenv
popa
dec
fcompl
inc
jecxz
cmp
fstpt
xchg
add
stc
push
add
add
add
loop
add
inc
int
sub
imul
cld
sarl
sbb
fisubrs
mov
cli
arpl
push
inc
aaa
sbb
adc
sbbb
pop
add
jmp
sub
shll
adc
add
inc
loop
out
add
mov
sub
dec
lock
cltd
push
nop
cli
push
or
repz
adc
aas
mov
repnz
and
mov
push
add
sub
fildl
jae
dec
and
sahf
rolb
icebp
jmp
push
mov
dec
sbb
test
cs
in
push
es
idivl
jne
jg
add
xchg
jo
pop
dec
hlt
add
pop
shlb
bound
testb
fisubrs
add
add
and
nop
mov
push
movsb
popa
clc
cmpsl
xor
sarb
inc
hlt
push
cmpsb
xchg
push
mov
sbb
push
icebp
inc
mov
xchg
insl
or
ss
jno
loop
or
adc
add
push
push
pop
dec
ja
jl
mov
and
adc
cmpl
popf
jmp
pop
mov
cmpsb
sarb
add
fs
lock
fstpl
rorl
sbb
and
stos
add
repnz
roll
add
in
aas
pop
cmpb
leave
jmp
lea
iret
adc
sbb
adc
xor
or
lret
cmp
leave
lret
out
mov
jne
data16
mov
fdiv
adc
negl
cmp
add
aas
push
jnp
sbb
jmp
push
dec
pop
pop
push
dec
dec
inc
xor
aas
adc
dec
cmp
xor
sbb
inc
xchg
daa
jae
cmp
out
std
cwtl
xchg
or
lea
add
fneni(8087
iret
add
xchg
push
daa
pop
sub
mov
aas
xor
aam
fdivs
cmp
jnp
inc
jne
push
sub
jae
and
cmpsb
mov
frstor
push
xor
jmp
adc
inc
xlat
aaa
les
test
mov
and
mov
lods
sbb
add
test
mov
pop
push
cmp
sbb
dec
and
add
cmp
mov
sbb
sbb
int
imul
sbb
sti
push
les
pop
sub
fdivl
adc
inc
sub
jno
push
or
push
add
jmp
pop
xchg
xchg
cltd
push
and
and
push
add
pusha
mov
mov
pop
fwait
je
inc
movsb
loopne
sbb
mov
cs
cmp
dec
jno
pop
out
imul
imul
jae
push
ror
outsb
dec
bndldx
dec
push
in
dec
adc
and
pop
jnp
cmp
cs
dec
jae
add
inc
ja
push
dec
or
adc
cmp
push
mov
test
sub
jo
test
je
or
push
mov
pop
pusha
jo
bound
or
leave
gs
loope
das
pusha
fchs
in
sub
jb
ja
pusha
dec
adc
pop
jno
je
sub
in
jnp
inc
or
clc
dec
lock
test
cmp
insl
loopne
loopne
adc
mov
xchg
incl
pushf
jp
mov
cmp
dec
dec
imul
out
lret
sub
movsl
dec
fcmovbe
lock
pop
scas
popf
loop
dec
adc
push
add
cmp
or
and
popa
inc
test
cmpsl
scas
jl
int3
or
loop
scas
adc
push
inc
in
and
repz
in
cmp
push
aas
addb
or
jne
ljmp
xchg
ljmp
cs
je
push
enter
or
dec
xor
cmp
sub
mov
jns
dec
insl
jmp
cmp
loop
outsb
pop
in
bound
stc
adc
dec
pop
dec
in
pop
aad
and
push
xchg
add
movl
jmp
lock
scas
pop
pop
push
push
cli
push
add
mov
dec
test
clc
dec
dec
pop
jnp
push
out
push
pushf
cs
xchg
aaa
loop
inc
rcll
and
adc
je
push
adc
cld
loopne
inc
hlt
pop
ds
testl
popa
jno
sub
lea
add
ja
cmp
and
push
ds
jae
xchg
and
mov
bound
js
sti
push
or
ret
pop
jbe
xchg
les
in
inc
je
sar
push
cwtl
testb
dec
dec
cmpb
sbb
scas
xor
and
sub
loopne
dec
and
dec
mov
or
pop
pop
ret
inc
mov
adc
or
pop
cld
jo
add
inc
lds
jecxz
mov
in
push
dec
or
pop
aaa
popa
in
xchg
jnp
sbbb
pop
gs
iret
inc
and
inc
push
out
jb
add
adc
or
mov
adc
pop
cs
mov
inc
mov
inc
jecxz
push
rorb
jne
andb
inc
mov
push
and
lock
jo
mov
inc
sub
jp
js
jbe
mov
xor
and
ja
sbb
inc
cmp
in
xor
mov
lahf
shl
sbb
and
faddl
outsb
and
push
jo
js
mov
in
mov
je
sub
dec
add
ja
insb
dec
mov
rolb
je
push
cld
cmp
push
lret
aad
push
push
mov
inc
sbb
xor
add
and
jne
repnz
push
dec
in
sarb
push
mov
xor
push
xchg
fucomip
xor
dec
adcb
sbb
mov
movsl
or
pop
xchg
scas
sbb
mov
jg
sub
add
sub
and
call
inc
jns
dec
nop
shlb
cmp
cmpsb
add
cmp
sub
xchg
jmp
rcrl
mov
pusha
ljmp
xor
icebp
loopne
sbb
jnp
mov
inc
cmp
mov
scas
jle
push
sub
pusha
aaa
and
pushf
es
push
loop
jo
mov
dec
inc
pop
pop
and
pop
mov
add
push
and
lock
mov
push
repz
xor
or
adc
sbb
or
ret
mov
and
jo
dec
pop
les
dec
push
adc
xor
stos
imul
adc
jno
inc
cld
ss
jb
repnz
pop
pop
loop
dec
in
pushf
push
jge
jmp
sbb
push
push
js
call
adc
xor
push
jmp
cmpsl
and
cltd
adc
and
dec
jne
mov
inc
cmp
sbb
xor
loop
arpl
mov
cmp
mov
mov
shll
xchg
pop
ja
push
jle
popa
dec
je
xchg
jno
inc
aaa
nop
or
xchg
push
pop
mov
rorl
jbe
outsb
add
adc
jno
nop
jmp
inc
add
movl
pushf
jp
jg
shrl
or
dec
mov
push
insb
orb
cld
jle
nop
or
out
rcrb
js
and
mov
push
imul
pusha
jne
sub
jnp
popl
test
add
inc
lock
in
mov
xchg
or
scas
pop
dec
jmp
sbbb
mov
jne
cmp
add
test
loopne
clc
jg
sbb
sti
mov
test
movd
movaps
fldt
enter
shlb
jle
xor
push
lahf
jo
cli
rcl
lret
je
mov
mov
jge
repz
or
jg
mov
movsb
fstl
jnp
mov
mov
jnp
lods
cld
aam
ret
or
add
adc
lea
fisubrs
xchg
repnz
divb
mov
mov
mov
or
pop
enter
mov
repnz
idivl
ret
adc
dec
sbb
push
fucomp
mov
cmpsl
nop
and
fmul
and
ja
mov
pop
xchg
bound
or
push
and
xchg
mov
test
sub
adc
pop
ljmp
pop
xor
push
ret
jge
mov
pushf
dec
mov
pop
pop
mov
sub
pop
jb
xchg
jmp
jb
and
adc
ret
dec
enter
adc
adc
ret
daa
mov
sbb
fisttps
dec
mov
bound
mov
push
mov
movsl
dec
outsl
cmpsb
mov
mulb
xor
push
jge
push
dec
pop
lods
jle
dec
icebp
push
mov
inc
sub
mov
cmp
jmp
jmp
mov
mov
cmp
jne
push
mov
add
inc
xor
mov
aad
and
mov
add
mov
js
les
cmp
inc
mov
jl
push
mov
pop
sbb
inc
shl
or
popf
sahf
or
sbb
adc
hlt
and
test
mov
loopne
leave
mov
lds
rcll
fcomi
arpl
and
das
push
in
pop
cmp
pop
xchg
jmp
test
shlb
mov
bound
gs
push
clc
push
les
xchg
inc
aas
push
aas
mov
out
push
out
es
xor
mov
or
adc
jne
inc
cmp
test
xor
or
filds
in
mov
adc
cltd
pop
adc
inc
dec
push
mov
cs
push
adc
pop
push
push
and
push
rclb
push
add
pop
sbb
cmp
cmp
lahf
sub
sub
xchg
arpl
repz
out
adc
push
add
push
jl
lcall
add
or
adc
out
mov
nop
sub
repnz
push
mov
sahf
mov
sbbl
in
cmp
imul
sbb
clc
hlt
cmp
xor
xor
add
enter
adc
sarl
sub
add
ret
hlt
mov
shl
shlb
dec
leave
sbb
icebp
shll
xchg
jl
rolb
cmp
mov
mov
cmpsl
shl
shl
data16
imul
inc
cmp
aam
lret
jne
loope
pop
mov
imul
jg
jmp
jnp
and
push
sbb
adc
mov
add
adc
mov
pop
cmp
and
gs
stos
and
popf
inc
or
add
shlb
cmp
icebp
decb
jp
or
orl
mov
cltd
xchg
lock
pop
stos
hlt
daa
mov
xchg
push
adc
pop
lret
pop
aad
xchg
xchg
inc
mov
repnz
xor
xor
push
lock
pop
jbe
inc
push
xchg
push
jge
stos
mov
pushf
aaa
push
js
mov
pop
js
loopne
rclb
jmp
push
ret
fmuls
out
or
iret
test
inc
jnp
mov
and
data16
jne
idivb
nop
mov
jmp
popa
movups
mov
sub
sub
rclb
and
in
sbbb
add
add
mov
or
mov
mov
add
adc
pop
add
je
inc
bound
inc
movb
pop
push
pop
inc
inc
testb
jnp
fiaddl
or
or
lret
jbe
push
xor
pop
div
es
or
lahf
nop
or
imul
ds
lret
cmp
xor
jle
adc
fidivs
sub
jbe
enter
push
mov
cmc
push
cmpsb
xchg
adcb
sbb
sub
add
pop
fcmovne
lods
outsb
pushw
mov
loope
aam
fsubrl
cmp
les
jne
or
add
icebp
jl
testb
decl
int3
xor
pop
xchg
adc
lock
xor
jno
push
fcmovne
cmpsb
pusha
jb
and
adc
repnz
inc
rorl
in
outsb
test
sarb
push
xor
movsb
loopne
and
pop
shrb
lds
ljmp
mov
inc
lods
adc
popf
xchg
mov
inc
test
dec
rclb
inc
pop
pop
push
ficompl
into
adc
jnp
dec
sub
adc
cwtl
pop
aam
push
dec
cs
add
sbb
mov
mov
sbb
call
imul
fmuls
and
sub
std
mov
loopne
out
add
cmp
jb
mov
dec
inc
in
sbb
ss
lods
push
adc
test
sub
add
push
cmpsb
fdiv
ret
mov
sub
cmpsb
mov
enter
adc
or
cltd
sbb
gs
xor
sub
push
movsl
in
sub
cmp
mov
xlat
inc
out
jmp
sbb
sub
mov
push
pop
sbb
dec
pop
fcmovnu
lods
in
jae
dec
or
cmpl
into
or
push
fistps
fistpl
cltd
or
xchg
loopne
or
and
out
and
mov
dec
lock
testb
les
rcrb
inc
mov
adc
sub
fwait
rorb
and
out
dec
jmp
ficomps
or
mov
push
aas
push
jp
stos
add
jp
pop
enter
and
mov
add
stc
cmp
lock
or
mov
clc
ret
adc
ud0
inc
loope
and
sbb
push
or
or
cmp
aad
orl
mov
jb
and
movsl
stc
mov
mov
dec
pop
cmpsb
int
dec
insb
cmpsl
and
inc
cli
xchg
add
cmp
fisubrs
mov
repnz
push
inc
cwtl
mov
add
fdivr
sub
xchg
mov
dec
pop
js
push
ds
jne
mov
call
and
ljmp
mov
xor
dec
mov
in
inc
les
enter
mov
in
dec
mov
push
push
add
adc
int
js
adc
push
jge
push
fcomps
jl
dec
cmc
mov
mov
pusha
xchg
lret
pop
mov
or
insb
adc
pop
push
inc
and
test
pusha
dec
enter
push
push
fs
inc
mov
pop
dec
ljmp
jne
pop
clc
dec
or
jecxz
xor
popl
movsl
dec
jo
pusha
popa
jbe
bound
gs
adcl
mov
push
adc
and
mov
popa
xchg
push
and
fcmovne
dec
adc
pop
add
pop
ss
add
enter
or
or
mov
pop
lods
call
add
cmp
je
dec
xor
outsl
inc
or
sub
bound
data16
lock
lea
repz
imul
pop
add
add
daa
add
jnp
add
loopne
je
dec
cmpsl
add
jno
inc
sahf
xlat
js
lcall
enter
add
cmpb
pop
dec
in
jb
pop
jb
or
in
jns
or
dec
inc
push
nop
or
sub
addr16
jns
pop
or
nop
or
add
seto
lcall
add
inc
or
mov
ja
push
setne
jb
push
adc
pop
addr16
mov
sub
cmp
sbb
adc
adc
adc
jae
and
adc
mov
add
adc
jns
pop
enter
inc
adc
js
push
push
inc
sahf
xchg
add
pop
mov
sbb
sbb
orb
inc
sbb
jns
psubsb
sbb
and
pusha
in
sbb
sbb
mov
sbb
je
pop
sbb
jns
cmpsl
inc
bound
sbb
add
push
or
cmp
inc
push
pop
pop
dec
sbb
add
add
sub
cmp
sub
das
add
ja
movl
xchg
call
and
lcall
mov
cmp
cmp
in
in
jno
repnz
sub
rol
lea
fdivp
xor
aad
cmp
push
nop
out
mov
mov
jns
out
fwait
andb
lret
call
xchg
jge
nop
adc
jns
cwtl
jmp
push
nop
addr16
push
sbb
out
in
in
sbb
sbb
inc
fsubrp
inc
in
sahf
out
adcl
sbb
pop
mov
xor
or
xor
cmp
pop
enter
repnz
out
std
repz
hlt
hlt
shll
jb
sahf
or
fwait
mov
fdiv
inc
jg
mul
popa
in
pop
idivl
inc
lcall
in
sbb
clc
cltd
adc
inc
stc
inc
sahf
lret
add
cld
cli
cli
or
sbb
iret
sti
sbb
outsl
in
repnz
cld
cld
cld
je
cld
push
getsec
push
mov
xchg
mov
sub
clc
ret
inc
sbb
dec
ret
sbb
add
lahf
in
pop
cmp
or
adc
es
jecxz
add
cs
in
in
fisubrl
mov
stc
daa
xchg
sti
orb
out
repnz
outsb
call
mov
inc
sub
sbb
pop
jmp
jmp
inc
pop
xchg
pop
in
add
cli
popf
cli
sbb
js
out
out
jno
sbb
out
cltd
push
lock
cli
push
cli
imul
stc
repz
rolb
cltd
sar
xchg
or
push
stc
stc
xchg
inc
pop
dec
fstpl
testl
negl
fwait
in
xlat
enter
adc
mov
mov
clc
cmp
lret
sti
sti
cltd
add
pop
mov
insl
push
in
or
clc
mov
sbb
out
dec
and
nop
test
sub
and
loop
xchg
inc
pop
xchg
mul
pop
shl
and
jg
nop
or
mul
sbb
out
inc
pop
and
out
inc
andb
sbb
sti
imul
ljmp
negb
pop
and
mov
xchg
imulb
inc
add
insb
out
out
pop
push
jno
jno
idivb
cmp
pop
and
add
push
push
adc
loop
shl
jno
cmc
and
mov
xchg
cmc
sbb
pop
bnd
pop
dec
cmc
cwtl
xlat
movsl
test
fwait
jbe
jne
and
seto
clc
jecxz
stc
sub
mov
popa
imul
cmp
pop
pop
jne
or
sub
push
hlt
sbb
lock
data16
hlt
divl
fstpt
jge
jo
sti
in
or
adc
iret
movsl
imul
loope
loope
mov
repz
dec
pop
and
scas
repz
xor
inc
or
imul
mov
mov
and
push
sub
bnd
jmp
je
dec
xchg
repnz
inc
add
sbb
arpl
cmc
and
pop
je
dec
add
and
xchg
inc
add
sbb
outsb
sub
js
divb
dec
and
xchg
icebp
jb
test
xchg
fcompl
lret
cmc
cmc
cmc
and
icebp
jecxz
mov
aam
ffree
lock
push
jns
sbb
inc
jb
sbb
jne
pop
repnz
xor
scas
jne
and
test
xchg
fldl
xchg
cli
imul
cmpsb
add
sub
out
ret
mov
inc
ds
add
repnz
add
ja
int
stos
add
jp
push
addl
sub
adc
jne
or
loopne
cmp
dec
add
sahf
nop
icebp
sbb
ljmp
pop
pop
add
and
cmp
push
cmp
dec
mov
insb
push
sahf
sbb
push
int
repz
cmp
adc
mov
lods
pop
adc
push
cld
sbb
jns
dec
sbb
mov
push
mov
adc
fdivrp
outsl
push
inc
or
repz
outsl
sbb
test
clc
in
sbb
add
dec
and
add
enter
add
xor
addl
pop
add
negb
push
sbb
test
mov
imul
lcall
imul
add
punpckldq
push
out
repz
mov
add
mov
push
js
test
ret
sbb
pop
adc
inc
cs
sub
loope
mov
push
leave
jg
fnstcw
je
push
and
add
std
ss
nop
push
or
and
add
adc
or
test
mov
add
sub
sahf
fmuls
mov
testb
repz
sub
rorb
rol
in
adc
sbb
or
test
and
xor
mov
xor
sub
jne
enter
push
mov
incb
int
push
cmpl
mov
mov
and
sbb
neg
orl
inc
daa
lock
enter
add
rorl
mov
push
rep
mov
dec
ljmp
sbb
push
push
sub
fidivrl
loopne
fsubs
adc
adc
dec
and
mov
fcoms
sub
repnz
insl
fsub
movl
add
out
loopne
pushf
inc
stos
add
pop
js
mov
outsb
loope
add
push
mov
insl
xchg
or
adc
cmp
test
outsl
pop
ja
add
jb
pop
inc
outsb
loope
inc
inc
inc
inc
xor
inc
add
dec
cmp
enter
cs
sbb
mov
imul
inc
push
inc
and
gs
iret
push
mov
cmpsb
xor
clc
sub
xor
jo
jne
mov
or
or
push
or
sub
movsl
sbb
roll
sub
inc
inc
pop
cmp
enter
adc
sarl
pop
mov
or
adc
ss
int
shlb
fwait
add
push
les
adc
and
sbb
fwait
inc
nop
out
or
jl
or
mov
lods
push
mov
push
lea
mov
popl
orb
mov
jo
out
out
xchg
xchg
sub
outsb
out
xor
inc
fnstsw
inc
jmp
cmp
jne
orl
add
pop
push
int3
les
jp
dec
add
out
adc
sar
jg
cltd
pop
inc
xor
filds
xor
pop
int3
or
fildll
adc
insb
adc
pop
jne
popa
rcr
jl
add
add
lds
push
pushl
lret
sbb
loopne
dec
div
mov
lret
dec
sbbb
fidivs
lret
sub
cmp
cld
mov
jmp
cmp
jae
push
enter
movsb
fisubrl
adc
and
add
dec
call
mov
aam
add
inc
rcrl
imul
fsts
cmc
mov
sbb
inc
inc
sub
adc
ja
lret
mulb
aam
es
mulb
scas
cltd
clc
and
pop
push
movsl
jo
loop
mov
ret
es
stos
mov
or
imul
das
in
rolb
sbb
mov
sub
adcl
add
sbb
xchg
cmp
ss
mov
xor
pop
inc
roll
or
sub
imul
fisttpl
add
seta
pop
push
cmp
jne
jnp
les
xor
push
pop
dec
push
push
repnz
sti
das
add
in
push
cmp
jne
mov
push
fdivrl
aaa
es
jne
fcmovu
int3
sar
adc
or
inc
cs
or
repz
mov
adc
jmp
std
enter
std
jmp
cld
push
sub
mov
fimuls
inc
push
pop
add
or
add
adc
shlb
repnz
pop
popa
pop
inc
sbb
mov
push
movsl
repz
pop
xchg
lds
shll
leave
jns
adc
sbb
push
inc
pusha
jge
out
adc
gs
nop
andl
xchg
orl
xchg
push
push
orl
fiadds
adc
or
arpl
lea
lret
xchg
fidivs
inc
inc
lcall
or
pop
mov
add
sbb
fimull
inc
nop
cltd
mov
jne
jo
sub
dec
or
loope
xor
pop
adc
push
rolb
adc
push
in
fistps
stc
aad
hlt
push
jmp
mov
shll
push
jl
rcrl
ss
or
loopne
inc
cmp
sbb
push
inc
push
dec
outsb
out
jns
mov
dec
pop
nop
mov
mov
push
push
push
lcall
sbb
cwtl
and
jecxz
ja
pop
inc
push
dec
push
add
loope
add
jl
mov
jne
and
call
dec
cmp
jo
test
jmp
inc
add
mov
ret
jmp
lret
sbb
lret
clc
adc
call
dec
sub
add
push
stos
add
testb
iret
push
or
fstpl
push
out
out
push
and
orb
fimuls
jmp
jne
mov
mov
rcr
jns
inc
adc
add
dec
add
push
lea
iret
aam
xor
das
int3
add
jecxz
cmp
push
add
lret
rorb
ljmp
faddl
mov
mov
inc
fistl
pop
and
cmovs
scas
roll
push
push
test
bound
or
rep
jmp
fmull
push
mov
sbb
add
xor
clc
das
ds
hlt
push
js
adc
push
pop
and
dec
je
inc
add
add
notb
lea
dec
dec
sub
int3
add
movl
addr16
add
add
fisttpl
push
rorb
mov
jns
test
cwtl
mov
mov
call
call
repz
repz
hlt
clc
clc
cld
stos
test
dec
jl
adc
add
fldcw
cld
push
or
lods
mov
or
or
jp
inc
pop
sti
ret
pusha
sbb
and
loop
mov
lea
jl
cld
or
std
cld
out
xorb
fsts
lea
xchg
daa
stc
out
in
xchg
xchg
sub
mov
inc
cmp
add
out
add
out
add
ficoms
push
add
imul
pop
add
and
dec
add
push
je
iret
repz
push
inc
dec
push
pop
repz
xor
sbb
iret
repz
sbb
adc
adc
cmp
repz
or
or
inc
nop
or
push
test
xor
push
add
pop
wbinvd
sbb
daa
ja
jl
adc
push
xor
push
mov
mov
incl
inc
decl
jne,pn
pop
pop
lods
push
ja
mov
cmp
ljmp
divb
jbe
push
cltd
pop
idiv
add
mov
pusha
or
adc
add
adc
pop
aaa
dec
mov
mov
out
test
xor
sub
jmp
cmp
fs
xor
dec
nop
mov
mov
mov
jbe
mov
dec
es
les
pop
sub
mov
lahf
mov
mov
outsb
call
sti
push
mov
push
jg
mov
sub
sbb
add
test
push
or
sbb
dec
dec
je
es
push
push
xchg
jmp
or
mov
xchg
xor
mov
and
xor
pop
aaa
mov
push
cmpsb
cs
notl
inc
daa
inc
sbb
push
add
das
sbb
popf
loope
les
and
dec
pop
push
nop
arpl
add
add
push
xor
xor
mov
dec
lahf
xor
cmp
sub
test
xor
adc
ficompl
imul
dec
pop
xlat
mov
lret
jmp
cmp
push
mov
sub
sub
aaa
mov
or
aas
jge
shrb
dec
push
push
cltd
pop
idiv
int3
pushw
mov
inc
xor
xchg
inc
mov
cli
ds
cmp
and
mov
inc
push
adc
xchg
fsubrl
jae
rcl
mov
orb
aas
dec
enter
add
shlb
jbe
imul
cmp
push
lcall
mov
pop
dec
ret
pop
sub
sbb
sbb
mov
cmp
subb
mov
push
insl
xchg
inc
pop
incb
inc
jns
adc
cmp
jmp
sbb
mov
cmp
icebp
pop
sub
sbb
test
out
sar
inc
in
push
jl
js
and
cmp
push
mov
in
push
pop
xchg
push
cmp
les
jmp
jge
pop
je
sbb
nop
cmp
jl
fs
out
xchg
dec
jno
push
data16
outsl
mov
pop
mov
dec
jo
mov
je
dec
inc
out
jnp
add
mov
test
call
inc
or
loop
lcall
pop
popl
fstl
or
and
fcmovnb
dec
pop
xchg
or
inc
mov
push
aaa
orl
and
jns
cmp
push
mov
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
jb
lds
sbb
pop
inc
fildll
mov
sub
push
je
mov
flds
cmpb
jp
push
push
add
add
sbb
and
jge
loop
rcll
or
push
hlt
mov
push
push
data16
jns
add
adc
adc
or
out
fdiv
cmp
call
sbb
out
mov
aaa
jbe
pushl
out
dec
ljmp
xchg
nop
push
xchg
mov
or
push
imul
push
insl
cld
mov
hlt
dec
js
mov
mov
adc
push
sbb
aam
add
sti
push
adc
push
inc
jg
jbe
pop
pcmpgtb
push
gs
inc
adc
mov
in
pop
mov
loopne
add
fisubl
mov
inc
inc
cmp
je
dec
lds
icebp
xchg
mov
push
mov
cs
sbb
adc
add
pop
ret
rcrb
je
and
inc
sub
aam
ret
or
sbb
mov
pushf
jp
push
lock
adc
les
mov
incl
call
pusha
push
mov
push
inc
sbb
xchg
sub
push
ret
sbb
lods
mov
inc
mov
mov
or
fidivs
or
xchg
dec
mov
mov
hlt
imul
dec
push
mov
xor
sub
or
mov
jo
add
test
jle
movsl
xchg
adc
test
decb
cmpl
cmp
mov
pop
addl
mov
loopne
int3
sub
inc
or
add
push
enter
pop
inc
int
lcall
push
pop
add
out
push
cli
frstor
sbb
inc
sub
dec
movsb
jb
jns
or
xor
mov
inc
sbb
mov
adc
fildl
lahf
dec
mov
add
cmp
push
shll
inc
ret
popa
bound
inc
shl
add
jmp
dec
or
jl
push
in
hlt
push
jmp
das
dec
jmp
aam
je
dec
sbb
data16
push
jecxz
inc
jno
inc
push
and
and
cmpsl
rcll
in
sbb
sbb
mov
sub
inc
sbb
push
stc
gs
and
xchg
movsb
es
in
and
sbb
clc
adc
or
jp
ja
ret
xchg
cmp
je
push
jne
xchg
pop
push
add
call
rcrl
cmp
or
pop
and
int
test
pop
and
das
cmp
ja
mov
cmpb
jne
inc
inc
call
mov
pop
mov
xor
or
inc
and
out
sub
push
or
call
jb
mov
pop
push
je
dec
jmp
inc
jmp
imul
aas
pop
cli
xlat
inc
movsl
add
lea
adc
sub
sbbl
leave
jne
mov
add
add
iret
shlb
add
sbb
pusha
leave
pop
fsts
push
xor
adc
cmpb
or
adc
bound
dec
xchg
rep
pop
jo
xor
jb
mov
add
cmp
pop
and
daa
add
add
or
push
rorb
mov
pusha
add
jo
sbb
loopne
arpl
xchg
push
push
ficompl
xor
ret
clc
push
aas
inc
mov
or
add
insb
mov
inc
add
loope
dec
sarb
fstpl
js
or
or
xorb
pop
aam
push
cs
fwait
lea
sub
inc
stos
into
in
or
outsb
jbe
in
dec
int3
js
adc
add
and
push
dec
and
orb
add
mov
cmpl
xor
or
mov
pop
mov
sbb
in
shll
and
or
gs
clc
mov
sub
out
popf
sahf
enter
or
add
andb
sarl
int3
xchg
push
aam
sub
pop
push
pushf
enter
xchg
sbb
push
mov
jmp
ret
sbb
mov
dec
inc
dec
lcall
std
data16
es
and
cmc
sbb
enter
xchg
scas
xchg
or
sbb
adc
pusha
js
gs
dec
stos
js
or
invd
popa
jbe
and
test
xchg
das
fistps
cld
sub
mov
fidivrl
cltd
hlt
ja
rolb
push
and
inc
gs
push
pushf
inc
pop
xor
adc
iret
and
xchg
sbb
cmp
pop
xchg
add
dec
or
add
pop
pop
nop
inc
mov
sbb
ja
aam
or
mov
pusha
js
mov
add
sbb
imul
in
mov
sub
add
dec
xchg
jle
add
test
repnz
inc
xchg
loope
sbb
dec
xchg
jg
adc
jbe
addl
pop
lcall
xchg
cmp
call
shl
cmp
outsb
insl
ja
pop
xor
rcrb
movb
jmp
lock
xorl
lahf
mov
rcl
push
or
ljmp
push
aaa
sbb
sub
push
incl
sti
or
push
dec
test
mov
adc
inc
enter
inc
or
xor
and
inc
rcrl
sbbb
push
ret
dec
xchg
xor
cli
push
xor
icebp
push
rclb
sti
add
push
ret
inc
addr16
and
push
pop
rclb
lock
pop
or
jmp
mull
jecxz
xor
cmp
ja
loopne
dec
outsl
xor
adc
lea
neg
out
fcom
rorb
out
ret
mov
cmp
rolb
or
cmp
jb
mov
cld
jb
lahf
mov
dec
popf
mov
testb
mov
inc
sub
and
pop
add
ret
sbb
inc
loope
into
jne
dec
mov
or
add
mov
fstpl
adc
imul
sbb
jne
adc
xor
sarb
ljmp
cmp
js
cmpsb
addl
cmp
or
add
and
ss
xchg
mov
inc
js
in
jbe
mov
add
and
add
ror
lock
jae
mov
pusha
cs
sub
sub
xchg
mov
jle
andl
push
adc
push
and
jbe
and
mov
jo
andl
sub
dec
adc
adc
mov
sub
hlt
sub
and
in
addb
cwtl
scas
adc
jns
xor
mov
mov
ss
adc
xor
add
add
inc
data16
bound
clc
dec
xor
sub
mov
add
mov
sub
imul
adc
push
pop
dec
ss
xchg
dec
insb
push
or
add
and
in
fimull
mov
ret
es
xor
aaa
xchg
lret
lock
stc
pop
imul
mov
jne
or
jno
imul
adc
inc
das
dec
jmp
pop
and
and
pop
fistps
arpl
jo
adc
or
inc
into
inc
call
xor
gs
and
mov
add
out
cmp
pop
daa
movsl
sbb
shll
mov
and
lea
mov
add
pop
or
rol
inc
decb
adc
sub
std
out
js
faddl
inc
mov
push
push
push
repnz
mov
ret
adc
add
out
or
dec
loopne
sarl
adc
lahf
sbb
cmp
aad
xchg
jne
dec
or
xchg
aad
push
lea
loopne
rclb
cld
mov
sub
imul
rcrl
and
int3
add
mov
jae
mov
dec
mov
test
jle
mov
jnp
je
orb
dec
add
iret
xor
push
dec
or
push
lods
sbb
mov
iret
mov
push
push
call
sub
sti
sbbb
add
lea
dec
xchg
xchg
pop
lcall
les
push
clc
rolb
xor
inc
jg
dec
loope
cli
pop
fdivrs
xor
push
push
enter
cmp
add
into
mov
or
sub
adc
mov
enter
push
or
fisttpll
rcrb
out
mov
shrb
ficompl
scas
sarl
mov
sub
outsb
add
lock
cmp
fisttpll
push
or
push
lods
lret
test
test
in
sub
xchg
fnsave
adc
xchg
xchg
sub
sub
push
or
xchg
inc
sbb
sbb
adc
popl
paddsb
push
out
mov
pop
test
jnp
jmp
mov
add
mov
or
xchg
jo
cmp
stc
and
faddl
sarl
push
mov
cmpsl
or
loopne
call
testb
leave
or
sub
js
dec
sub
call
mov
dec
stc
add
dec
cmpsl
repnz
adc
or
test
xchg
push
nop
andb
loope
add
jl
mov
sub
rcll
aad
or
loope
and
insb
add
mov
cld
pop
into
pop
sub
mov
add
mov
inc
dec
jne
lea
int3
repz
push
inc
jle
mov
add
and
add
scas
jmp
outsl
sbb
sti
mov
mov
out
xchg
hlt
mov
and
and
add
lea
fimuls
or
ja
sub
adc
add
and
inc
fists
je
sbb
mov
fdivr
fidivl
stos
mov
test
and
sub
push
cmp
push
push
cld
test
dec
and
adc
xor
mov
mov
sbb
jmp
and
je
inc
ret
and
orl
notb
add
aaa
xor
jo
jmp
mov
mov
jle
mov
mov
scas
push
xchg
call
sub
aas
lods
add
or
push
roll
cmp
add
ljmp
push
je
inc
mov
dec
sbbl
jl
enter
clc
mov
jge
jo
jg
or
shlb
not
and
or
or
jmp
aam
roll
ss
dec
jns
push
lahf
jno
add
or
pushf
ja
movsb
pop
insb
push
cld
cmc
and
pop
ds
jmp
mov
pop
sbbl
mov
push
add
cmp
push
cmpsb
push
sbb
inc
popf
cmpsl
cmp
xchg
inc
jge
in
cmp
std
jne
fsubr
pop
cmpsb
sub
stos
enter
push
ljmp
add
jg
push
and
xchg
cwtl
fmull
xor
xor
pop
daa
inc
ljmp
mov
fistps
and
lock
out
into
imul
std
fidivl
push
jmp
stc
mov
adc
sbb
insl
push
pop
push
and
stos
ljmp
push
inc
sub
mov
rolb
cmp
cmp
jbe
nop
xchg
in
lea
mov
sahf
pop
loope
and
cmc
inc
pop
leave
cli
stc
bound
dec
in
leave
xor
cmpsl
mov
push
push
jnp
mov
jb
mov
out
pcmpgtb
mov
cmp
insb
inc
movsl
and
in
inc
and
pop
mov
incl
jle
jge
add
jb
mov
xor
lods
push
sbb
into
sar
out
insl
inc
or
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
ret
lock
cmp
aas
sahf
dec
add
lret
data16
loopne
or
inc
push
mov
inc
dec
jne
cmp
test
dec
add
int3
add
gs
lret
jnp
test
xor
test
xchg
and
push
or
cmpsb
dec
dec
loopne
adc
addl
fisubrs
dec
mov
loop
push
push
inc
pop
push
and
int3
jle
add
lcall
loope
inc
sbb
sub
orl
loopne
sbb
push
pop
or
adc
push
xor
cmp
inc
and
mov
cmp
lods
mov
xor
xchg
sub
repnz
mov
mov
mov
mov
xorl
mov
jg
out
ja
inc
pop
sub
jmp
xor
dec
sbb
add
inc
xor
add
sub
push
mul
jmp
jo
add
adc
fcompl
inc
pop
jmp
sbb
dec
mov
xor
imul
adc
add
lret
icebp
mov
inc
mov
std
and
dec
stc
inc
stc
pop
movl
mov
push
cmp
sub
cmp
es
push
push
sbb
or
pop
pushl
das
ds
jne
mov
out
lods
cmp
sbb
rcrl
sbb
sub
cltd
xchg
int3
testb
and
jp
xor
pushf
mov
inc
dec
mov
xorl
pushl
out
jle
rep
xchg
fimull
push
push
cmpl
mov
pop
cmp
cwtl
shlb
inc
add
sub
add
or
sbb
push
xor
pusha
xor
testb
inc
mov
rorb
sub
fsubrs
jnp
or
cmp
adc
movsl
sub
sub
popa
aas
adc
loopne
and
adc
xor
je
push
and
inc
cli
adc
aas
hlt
fcompl
xor
pop
mov
lret
and
pop
clc
mov
jbe
dec
js
nop
push
or
jb
ret
add
into
lcall
mov
or
sbb
stc
cltd
inc
and
adc
mov
rcll
sbb
inc
pop
mov
mov
mov
sbb
cmp
shlb
cmp
daa
mov
pop
adc
gs
cmc
test
leave
mov
push
mov
xorb
xor
pusha
add
cmc
add
test
insw
lret
call
rcrl
and
cwtl
loope
and
add
mov
or
aas
push
pop
setg
shrb
jmp
dec
andb
pop
dec
ss
pop
dec
push
pop
mov
shlb
fs
and
sbb
jp
sti
fstpt
loopne
insb
push
cld
push
jo
gs
add
xor
jne
xorb
mov
or
xor
andl
cmp
sub
cmpsb
insb
or
in
push
bound
sbb
inc
add
or
inc
cmp
pop
fldl
inc
lock
push
push
xor
dec
sbb
xchg
dec
mov
sbb
aas
inc
cmp
or
loopne
add
xchg
or
es
fidivs
not
fistl
lcall
test
fdiv
cli
pop
pop
sbb
clc
inc
and
mov
shlb
sbb
xor
inc
push
enter
dec
pop
cmp
xchg
and
jle
movsl
mov
cmpsl
bound
jmp
repz
andb
jbe
lret
mov
mov
adc
pop
aaa
and
test
rol
xchg
add
push
subl
adc
cmp
or
bound
bt
jnp
mov
pushf
cltd
pushf
cmp
push
jle
dec
rcll
or
cltd
je
lods
daa
test
or
jno
push
int3
dec
ja
shll
fsubrl
ljmp
in
daa
imul
sub
inc
cltd
movsb
jb
mov
cmc
dec
or
loopne
sbb
lds
push
xchg
push
xor
xchg
mov
and
xor
inc
add
sbb
das
mov
ja
add
movsb
jp
hlt
rorb
inc
sub
andl
cwtl
dec
lea
out
insb
xor
das
mov
xor
sbb
gs
or
fcoml
mull
mov
mov
clc
or
in
popf
enter
shrb
pushf
popl
add
shll
call
adc
push
xchg
sub
aam
inc
nop
inc
cmp
push
stos
pop
pop
fcomps
sub
sbb
xchg
push
mov
jp
out
jmp
in
js
jmp
sar
test
dec
xor
test
insb
aas
or
dec
xchg
add
insb
or
xchg
mov
lahf
push
js
or
mov
inc
js
enter
pop
xchg
pop
lret
adc
sub
fdivrs
stos
pop
test
pop
iret
repz
mov
push
jo
pusha
or
repz
push
dec
pop
pop
push
or
mov
clc
mov
pop
pop
and
and
divl
xor
pop
nop
inc
push
push
nop
adc
mov
enter
in
in
cmp
out
push
hlt
cld
add
or
sub
ret
pusha
pop
mov
jnp
inc
inc
or
pop
insb
pusha
aam
add
pop
popf
add
leave
adc
and
ss
sbb
push
loopne,pn
cmp
push
adc
cwtl
shl
cwtl
shrb
jmp
das
js
or
loop
xor
adc
and
cli
dec
imul
lret
jne
mov
inc
inc
into
pop
rorl
jge
inc
mov
mov
xor
les
cli
ljmp
push
xlat
or
pushf
push
push
call
add
and
jle
les
or
nop
jae
or
loopne
add
inc
ret
and
fcomip
mov
aas
lds
mov
jne
hlt
mov
popa
sub
and
es
dec
fwait
xor
push
into
inc
mov
enter
iret
stos
lret
or
inc
or
je
pop
daa
jns
jg
dec
adc
cmp
jae
leave
add
inc
push
stos
mov
xchg
out
cmp
push
cmpxchg
pop
push
push
jge
jmp
fisubrs
inc
adcl
inc
mov
push
movl
add
jmp
adc
js
push
mov
jnp
andl
lock
adc
push
adc
xchg
cmpsb
loop
cmp
or
std
push
add
push
or
test
shrb
fnstcw
xor
out
cmp
xchg
in
test
mov
aam
mov
addr16
test
icebp
sbb
fstpt
test
ja
enter
mov
movl
adcb
push
mov
and
push
add
jecxz
jmp
or
add
cmpsl
mov
push
inc
and
sbb
shl
gs
jl
and
ljmp
mov
mov
sbb
out
pop
or
sbb
sbb
adc
test
mov
jge
lods
in
add
add
or
enter
nop
sarb
add
decb
lea
inc
cmp
mov
ficompl
pop
and
shrb
push
jbe
jmp
nop
ds
inc
loop
push
cmp
xor
xchg
sbb
mov
loope
lcall
inc
push
out
in
add
mov
sub
shrb
mov
fildl
fwait
subl
ljmp
loope
test
mov
jno
add
or
and
fisubrl
and
add
aaa
xchg
and
and
and
mov
test
dec
js
movsl
xchg
imul
sub
mov
adc
jbe
push
and
xchg
ret
test
dec
push
fnsave
test
fcoml
inc
ret
rcrl
push
outsl
cmp
pop
divl
in
xor
mov
add
dec
xchg
mov
sbb
lods
loopne
push
imul
mov
dec
add
and
dec
add
push
mov
mov
loopne
cmp
or
push
add
mov
movsb
and
je
pop
jecxz
daa
and
shll
ret
and
ljmp
int3
rorb
fisttpll
outsl
adc
outsb
mov
pop
adc
addr16
testb
mov
lret
fscale
sub
fdivrl
dec
inc
add
jmp
nop
push
dec
sub
aas
mov
pop
repz
sbb
cmpl
pop
test
cmpl
loope
subb
aas
xor
jp
jg
dec
out
mov
sahf
or
xchg
xor
jno
mov
test
and
or
mov
hlt
fdivrl
fdivrs
xor
xor
pop
sbb
pop
scas
mov
mov
mov
mov
inc
leave
fbld
leave
test
in
or
call
fcmovnb
add
pop
and
fisttpll
pop
test
imul
pop
ja
and
mov
loopne
sub
jg
sbb
sar
pop
mov
adc
shl
jb
fmull
or
aam
mov
fsubs
lret
inc
rcr
sub
dec
or
je
or
push
push
push
dec
inc
adc
scas
mov
pop
or
add
sbb
sbb
test
sub
dec
mov
pop
cld
adc
cmp
mov
loopne
sub
push
imul
sub
ja
lret
or
ja
movsl
mov
adc
lods
add
jb
xchg
or
movsl
hlt
hlt
mov
nop
je
or
inc
jo
cmpl
adc
lcall
xor
adc
adc
sbb
mov
push
xchg
ss
push
jb
fimuls
jle
xor
mov
xorb
repnz
xor
movsl
mov
add
fs
or
imul
imul
pop
lahf
sub
mov
adc
push
xchg
push
dec
inc
outsb
lret
pop
cmp
inc
or
or
iret
sbb
jle
inc
je
pop
jge
xchg
jns
or
lcall
add
cmp
mov
fdivr
xchg
dec
pop
inc
fsubp
lock
sub
je
push
jae
cli
push
inc
adc
testl
out
jne
cmp
adcl
pop
loope
icebp
jge
testb
in
imul
shrl
in
inc
cmp
subl
inc
mov
and
imul
test
jae
inc
inc
push
insl
cmp
xchg
pop
scas
jl
xor
mov
int3
testl
adc
dec
dec
lret
rolb
aam
add
mov
jnp
aas
cmpsl
xor
mov
insl
insl
lock
mov
pushl
fnstsw
push
popa
cmp
jecxz
mov
les
in
lods
hlt
mov
inc
mov
dec
mov
pop
sub
dec
inc
jno
js
lods
xor
data16
mov
mov
cmp
mov
iret
sbb
pop
stos
test
sub
lret
add
add
into
add
das
cmp
push
push
mov
outsb
in
je
test
fdiv
xor
out
popa
aas
add
xor
lock
xor
mov
add
add
movsb
shlb
bound
mov
lds
jecxz
shlb
ss
stos
add
push
add
xchg
not
sbb
pop
jbe
adc
hlt
cmpsl
cmp
out
jmp
cmp
jle
insl
cmpl
incl
add
add
int
mov
mov
mov
call
cld
adc
push
dec
inc
cwtl
sti
xchg
fstp
shl
cmc
mov
sub
jl
push
pop
js
inc
mov
test
lea
lcall
mov
aas
nop
imul
ds
mov
and
test
push
icebp
push
pop
mov
lret
enter
out
addr16
test
cmp
mov
sbb
inc
daa
add
adc
dec
mov
xor
loope
movsl
sbb
push
sub
lret
scas
push
inc
cmp
popa
jbe
into
test
je
adc
push
mov
push
lcall
int3
pop
ss
je
cltd
and
add
adc
jl
mov
flds
pop
mov
push
ds
jecxz
nop
pop
xlat
icebp
xchg
fimull
mov
or
sbb
call
lret
pop
popf
lock
mov
or
jne
and
lea
mov
das
sbb
or
jle
mov
insb
and
and
enter
xor
icebp
pop
lcall
lret
mov
dec
jmp
add
sub
inc
cmp
loop
aas
je
into
xorb
or
and
decl
movb
inc
jmp
cmovl
or
jmp
dec
fildl
popa
ret
and
sub
sar
roll
push
push
sti
sub
pop
pop
add
sub
sub
push
test
dec
fimuls
mov
adc
sub
sub
adc
or
pop
shl
push
jp
mov
dec
mov
fdivrl
sbb
stos
ds
fnstsw
add
adc
push
movsl
sub
jbe
dec
sbbl
add
nop
aaa
shlb
cmp
call
outsb
fistps
loopne
nop
popa
jle
sbb
mov
sbb
mov
jg
or
lea
sbb
popa
or
push
and
cmp
add
sbb
or
push
cmp
movsl
daa
pop
mov
mov
mov
ret
fisubrl
movsb
cmp
add
cmp
push
sti
xlat
nop
mov
movsl
pop
sub
adc
mov
push
sub
movsb
jb
adc
push
xchg
jo
sarl
cmp
xchg
ss
mov
dec
push
xchg
shl
adc
pushl
inc
or
lcall
cmpsb
inc
mov
adc
xor
mov
mov
cwtl
add
lea
addr16
cmp
pminub
gs
test
or
movsb
cmpl
xor
add
test
or
cmp
daa
push
mov
or
add
mov
push
jbe
mov
push
and
cli
mov
or
jl
push
pop
cmpsb
cltd
mov
add
out
int
adc
lds
sbb
jo
inc
jle
lret
or
pushf
jge
test
cwtl
and
xor
insl
shl
xor
cmp
ss
jne
pop
les
sbb
pop
dec
or
jmp
push
addb
xor
sbb
inc
adc
adc
xchg
imul
xlat
and
sub
or
dec
jo
sub
mov
testb
and
cmp
test
sub
cltd
pop
sub
in
add
jbe
push
xchg
pushf
decl
imul
add
jmp
clc
sub
xchg
xorl
or
sub
rclb
adc
jmp
inc
xor
enter
stos
sbbb
sub
cld
shr
mov
imul
das
mov
inc
les
insl
add
cld
outsb
xor
adc
push
xor
sbb
mov
ret
add
loop
jmp
fs
jne
sar
dec
cmp
sub
aas
jbe
push
pop
loopne
dec
or
pushl
and
mov
shr
lea
not
and
decb
mov
or
sbb
lea
xor
mov
inc
or
dec
pop
add
add
sbb
push
or
inc
inc
mov
inc
lods
mov
add
push
sbb
clc
and
sti
add
pop
mov
pop
cmp
test
mov
es
out
lret
imul
mov
lea
jno
jno
mov
sti
pop
mov
shr
not
and
add
pop
or
xor
cmpsb
jl
fisttps
das
mov
xor
sub
add
mov
push
or
or
js
flds
addr16
repz
int3
inc
or
dec
or
sti
setnp
adc
mov
mov
inc
mov
cmp
xchg
mov
push
or
mov
mov
jmp
dec
adc
lods
sbb
mov
or
test
mov
cld
cmpsb
in
lcall
and
dec
movl
adc
shl
jnp
paddsb
dec
or
jp
push
call
aas
gs
or
jge
push
or
pop
testl
adc
inc
jmp
pusha
add
and
nop
cli
add
in
mov
or
call
xchg
pop
or
adc
arpl
enter
pusha
dec
adc
dec
sbb
aas
add
outsl
sub
cmp
testl
mov
mov
cmp
mov
pushf
pop
stos
imul
jne
movb
push
pop
mov
daa
js
add
lahf
inc
mov
les
dec
sbb
jne
outsl
stos
cmp
movl
or
or
adc
sbb
inc
inc
int
jmp
orl
or
add
inc
and
pop
or
mov
cltd
shlb
rolb
ljmp
rorb
clc
incb
pop
and
stos
cmp
dec
jne
or
pop
push
cltd
out
mov
mov
popa
imul
loope
or
inc
sub
shr
jg
filds
inc
orl
orl
sti
xchg
les
mov
push
mov
lock
push
add
sub
sbb
je
sub
pop
sar
add
mov
hlt
fcoml
dec
jb
adc
fs
inc
call
mov
inc
mov
pop
incl
xor
inc
jne
or
lds
ljmp
repz
lahf
or
adc
and
sbb
sub
pop
shr
add
ror
jb
cld
bound
sub
dec
cmp
clc
shrb
jo
xchg
pushf
jle
cmp
jl
pop
and
fnstcw
adc
xor
xchg
sbb
add
mov
addb
jmp
pop
dec
int
push
mov
iret
dec
in
cmp
add
sti
pop
add
cmp
nop
rcl
fdivrl
or
push
jns
fxch
push
sahf
sub
add
mov
sub
adc
pushf
sar
fiaddl
mov
cs
fstpl
lea
or
jg
shll
mov
pop
cmpsb
repnz
pop
push
pop
adc
add
lcall
adc
and
js
push
ja
and
sub
adc
inc
insb
xor
out
shlb
mov
pop
pusha
inc
and
clc
jl
loope
jmp
orb
das
mov
fisubrl
inc
dec
insb
pop
xor
push
sar
pop
or
orl
and
jl
push
fidivrl
xor
cmp
out
push
mov
fists
push
or
mov
insb
rcr
fbstp
loopne
fnstenv
dec
ficoms
add
mov
ja
data16
dec
lea
mov
and
test
js
test
xchg
dec
ret
push
lods
decb
into
mov
sub
into
rdmsr
xchg
sbb
mov
jns
dec
inc
insl
call
sbb
mov
jp
insb
mov
add
loope
icebp
mov
push
dec
push
push
push
jge
sub
scas
xor
shr
adc
and
pushf
in
or
ret
shrl
mov
nop
cmp
and
decb
xlat
xchg
call
push
or
int3
mov
jne
mov
push
aas
fnstenv
lock
add
fcmove
jae
xor
aaa
arpl
add
add
or
mov
cmp
mov
ret
pop
xor
pushf
pop
lcall
cmp
je
mov
dec
sbb
and
clc
inc
dec
push
inc
mov
dec
sbb
sub
xchg
cmp
push
dec
cmp
lret
scas
stos
xlat
jmp
dec
mov
loopne
mov
adc
outsb
leave
inc
test
inc
push
pushf
mov
sub
icebp
or
jle
je
cli
xor
add
cmc
call
jge
iret
mov
loopne
xchg
cmp
insl
std
jge
and
mov
decb
jne
cmpsw
pop
pushf
dec
repnz
jmp
jp
mov
inc
cltd
adc
jne
add
push
and
dec
xlat
into
xor
dec
jp
call
mov
mov
or
pop
fsubrs
xor
sub
jge
hlt
popa
inc
inc
sbb
cmc
inc
lock
cmp
or
dec
sarl
inc
or
xchg
mov
push
mov
or
push
cmp
mov
call
out
sbb
add
scas
aam
pop
cmp
push
lea
cmp
sbb
pop
mov
push
ds
add
leave
rcrb
subl
repnz
faddl
cmp
add
jb
or
xorl
jecxz
sahf
add
push
pop
or
pop
jne
and
test
mov
lock
aam
clc
flds
cltd
sub
push
push
inc
addl
addl
dec
mov
or
mov
mov
add
imul
push
mov
push
pop
test
pop
das
clc
fnstenv
sbb
push
mov
jmp
movsb
pop
sbb
test
js
adc
or
cmp
dec
fcoms
iret
sub
or
sbb
and
cmp
add
inc
mov
xor
outsl
sbb
ficomps
andb
fdivr
outsb
imul
std
lahf
pushl
adcl
push
repz
ds
adc
push
in
adc
inc
andl
mov
or
mov
adc
mov
xchg
push
xlat
cmp
dec
inc
js
push
or
jmp
leave
and
push
hlt
inc
addb
sahf
rolb
and
insb
rorb
int3
push
mov
data16
or
je
sbb
adc
insl
sbb
fistps
das
or
ljmp
andl
pop
sub
or
or
dec
sub
out
stos
adcb
nop
pusha
cmpl
jle
add
add
lods
aam
xchg
dec
jp
hlt
mov
jne
popa
sbbl
mov
mov
jge
sbb
aas
fwait
in
loop
call
movzwl
aad
in
int3
test
push
add
je
dec
loopnew
add
cmp
mov
xchg
and
movzbl
rolb
enter
pushf
mov
sub
adc
xor
push
and
add
loopnew
into
dec
dec
add
aaa
jle
cmp
jle
adcb
lods
or
insl
push
lret
pop
add
imulb
xchg
arpl
sub
shll
rorb
ss
cmp
leave
jge
daa
pop
jb
scas
and
xor
repz
loopne
icebp
push
out
push
jb
inc
pushf
fistpll
insb
jne
or
or
jo
jbe
pop
and
fdivrl
add
cmp
push
xchg
xchg
xor
scas
push
repnz
cmp
fs
inc
dec
push
jmp
out
sbb
int3
les
inc
or
pop
std
movsb
xor
ret
cmovo
shll
lea
leave
fs
xorb
push
cltd
dec
push
add
adcb
lock
shrl
xchg
aaa
push
cmp
mov
cltd
bound
xchg
push
cs
enter
or
jl
call
jnp
jnp
pushf
push
sub
jnp
neg
lret
mov
rolb
outsl
lahf
addr16
pusha
xchg
add
fs
jb
add
mov
mov
popf
and
jp
stc
pop
mov
push
test
xchg
xchg
lret
movsb
shr
cs
sub
mov
adc
hlt
xchg
lahf
push
or
xchg
ret
repnz
cltd
shrb
cmp
call
call
xchg
pop
mov
dec
jb
pop
rolb
xchg
in
cwtl
add
push
nop
in
push
cmp
inc
test
test
mov
fwait
clc
mov
leave
mov
xchg
jle
cld
enter
cmp
and
mov
data16
sbb
data16
cli
les
addl
dec
test
sahf
out
lea
push
shlb
imul
daa
cmp
push
data16
lea
pop
imul
cmp
inc
adc
ret
mov
pusha
out
sub
clc
xchg
adc
inc
cmpsb
ret
xchg
jne
js
pop
jne
fdivl
mov
mov
cmc
sub
and
or
pop
add
or
and
pop
or
mov
test
inc
adc
loopne
daa
das
mov
or
xchg
xor
dec
add
dec
bound
push
adc
cmp
popf
inc
jg
pop
add
test
mov
push
sar
dec
and
fbstp
cmp
add
add
push
cmp
and
loop
je
pushf
cmp
xor
push
push
out
add
xor
xchg
lcallw
sbb
sarl
cmp
flds
ret
xchg
cwtl
add
mov
ss
out
add
add
mov
mov
add
jmp
add
test
js
add
rcr
loopne
push
or
and
xchg
add
jle
or
add
jo
add
std
jne
dec
sub
shr
mov
aaa
inc
cld
push
adc
mov
inc
mov
call
mov
rclb
inc
pop
rclb
imul
push
js
loopne
int3
and
fsubl
mov
pop
aam
push
or
shll
enter
and
movsl
pop
fstpt
add
dec
mov
sub
dec
stos
mov
dec
inc
clc
add
cli
xor
cld
std
fmuls
adc
inc
loop
dec
stos
mov
push
and
sub
jg
jg
cmp
cmpsb
inc
lret
adc
imul
sbb
add
in
sarl
sub
sbb
dec
mov
jle
movsb
insl
ljmp
dec
je
xor
adc
or
rcrl
mov
aaa
sbb
fstpl
push
fldl
or
int
in
call
xor
mov
icebp
test
mov
push
mov
pop
jmp
jo
push
fidivs
mov
pop
cmp
cltd
push
xlat
das
cmp
sub
mov
std
sbb
je
add
and
sbb
stos
int3
sbb
sti
fnstenv
lcall
xchg
insl
ljmp
cmp
insl
in
into
add
jne
insb
aas
insl
mov
mov
sub
sbb
jle
lahf
fdivr
fwait
add
js
adc
jno
mov
mov
add
pushf
cld
sarb
jns
andl
lock
inc
in
in
in
pop
push
call
xor
cmp
push
push
shl
push
sub
jne
das
jbe
pusha
xchg
repz
lock
iret
repz
mov
fcomip
cmp
repz
push
dec
mull
add
andl
sahf
in
mov
test
jl
mov
fs
or
dec
jbe
and
mov
or
push
mov
sbb
lods
shlb
xchg
in
sub
fidivrs
and
and
inc
sbb
jbe
or
int3
sbb
dec
sti
mov
jmp
push
faddl
pop
or
or
popa
pop
push
lock
push
jmp
push
jmp
cli
clc
push
fmull
out
dec
mov
inc
jp
cmp
in
mov
and
jne
push
push
cmpl
jge
jle
testb
rcrl
jns
orb
pop
ret
push
test
push
mov
and
mov
lods
outsb
or
pushf
fwait
gs
rclb
out
cwtd
lahf
fwait
test
push
lret
test
add
scas
add
movsb
lfs
cs
lret
lret
test
pusha
mov
jb
add
cltd
mov
lods
std
xchg
sbbb
testb
pop
mov
pop
mov
movsb
rcll
clc
adc
rol
push
jno
incb
shll
cmpsl
sarb
xchg
dec
sbb
pop
sar
std
in
xchg
arpl
and
repnz
in
dec
inc
cmp
stc
mov
mov
mov
out
test
inc
pop
push
inc
jne
addb
add
ret
push
pop
ja
adc
enter
clc
push
mov
xchg
std
lods
cmp
orl
leave
rorb
pop
cs
int3
shl
cwtl
enter
fcoml
dec
leave
in
jne
push
pop
or
add
mov
cs
add
test
iret
mov
cmp
hlt
iret
lods
mov
ss
or
mov
leave
mov
mov
popa
mov
mov
mov
sub
je
or
inc
pusha
lcall
mov
or
jne
inc
sub
pop
aad
pop
outsb
test
sbb
pop
xor
pop
inc
jne
movsl
pop
mov
xor
or
adc
xchg
cmpsb
rclb
out
cmp
push
int
lds
movsl
test
pop
lods
dec
push
push
mov
push
ret
sbb
mov
frstor
push
lea
sub
pop
cs
sub
sbb
push
adc
call
loopne
pop
cmpsb
xorb
dec
shll
or
xor
adc
loop
push
inc
cmp
repz
mov
popf
in
mov
stos
jne
jne
shl
rcrl
pop
jne
add
les
mov
xor
cmp
push
adc
adc
mov
xor
movsb
loopne
mov
sbb
es
movb
daa
jno
imul
sahf
add
mov
imul
inc
adc
hlt
or
fisubl
in
mov
out
ret
pop
enter
mov
fs
notb
loopne
sub
bound
pop
out
inc
add
into
je
notl
pop
insb
mov
mov
pushf
enter
in
dec
dec
sub
xor
rcll
or
and
xchg
std
aaa
lods
dec
mov
addr16
lock
sbb
dec
sahf
fdivr
adc
pop
ret
lret
add
ds
out
and
shr
je
xor
pop
rclb
in
push
mov
orb
popf
mov
call
ds
call
push
mov
jns
cmp
jno
imul
daa
pop
aad
fwait
in
mov
inc
mov
movq
enter
lds
mov
ja
lea
cmpsb
lret
lock
out
imul
mov
mov
cmp
call
cltd
cwtl
jmp
dec
or
sbbl
std
mov
cs
sbb
mov
std
stc
lods
push
dec
out
imul
inc
add
movb
jno
jne
test
ss
fisttps
test
sbb
adc
into
inc
inc
mov
dec
xchg
jl
sbb
cmp
inc
push
or
inc
dec
call
std
sub
xor
push
imul
test
sahf
dec
repnz
mov
ja
xchg
daa
push
mov
mull
lods
popa
mov
fdivrp
or
jecxz
lods
mov
dec
cs
aad
inc
adc
hlt
sub
test
inc
push
pusha
jmp
popa
dec
jmp
dec
das
rcrb
nop
add
movsl
mov
ret
pop
lock
int3
jp
dec
xor
push
sub
lods
pop
fistps
sub
or
adc
and
in
ds
int3
cmp
loopne
pop
or
xchg
lahf
jne
test
dec
test
in
lahf
xchg
popf
adc
std
push
or
pop
dec
cmpl
stos
sbb
je
les
add
fldl2t
insl
mov
movsb
adc
in
sub
out
js
inc
push
inc
xor
sub
sub
sbb
mov
jp
jne
fdivr
push
loop
sbb
push
dec
pop
jno
and
xor
je
sbb
push
fs
std
std
std
pop
add
mov
xchg
adc
mov
das
out
in
xor
adcb
repz
aas
nop
inc
cltd
inc
add
push
jne
pop
cwtl
pushf
sarb
ss
adc
pop
xor
mov
test
call
ret
xor
aas
test
dec
call
pop
leave
leave
and
and
and
test
mov
popf
inc
sarb
mov
push
loopne
push
push
lods
aad
out
cmp
sbb
adc
popa
dec
sub
cmp
ja
fimull
pop
or
adc
add
loopne
jo
sub
movb
pop
repz
lods
xchg
xchg
push
add
xchg
push
pop
scas
loope
lock
mov
ljmp
xor
push
repz
sub
pop
add
xor
add
in
xor
pushf
loope
bnd
scas
movsl
call
leave
test
mov
inc
aam
push
cmc
pushf
loope
enter
pushf
loope
jb
or
adc
and
xchg
sbb
cmc
pushf
loope
loope
fs
int3
les
imulb
or
or
push
arpl
add
lret
mov
test
adcl
dec
test
sti
pushf
add
or
and
stos
xchg
ret
jmp
xchg
push
pop
fwait
and
es
cs
inc
xchg
pop
fdivrs
sti
fwait
push
pop
push
push
push
jecxz
std
fwait
push
cmc
sbb
cmp
jns
in
fwait
mov
cmc
sbb
pushf
lds
clc
mov
dec
cs
cld
lcall
xchg
push
outsl
dec
scas
sbb
pushf
pop
repz
xchg
ss
lea
clc
mov
roll
jecxz
stc
xchg
orb
ds
mov
mov
xchg
push
movsb
cwtl
xor
xor
push
lcall
movsb
bound
aas
dec
sbb
repz
in
pop
and
cltd
sub
or
dec
nop
nop
pushf
nop
xchg
sub
lods
push
lea
in
or
daa
mov
push
addr16
and
mov
adc
fisttpll
add
or
movsl
inc
add
mov
sahf
jno
sbb
test
lret
addb
loopne
das
adc
or
mov
pop
mov
mov
or
sahf
mov
xchg
ljmp
push
inc
insb
jne
add
subb
add
pusha
jl
or
add
lea
xlat
inc
xchg
or
mov
adc
shrb
jne
push
xor
adc
mov
sub
dec
es
roll
or
jl
dec
scas
into
out
test
xchg
jl
dec
cmp
dec
movb
add
dec
mov
loop
mov
push
push
outsl
mov
test
je
mov
xor
add
ret
cmpsl
mov
sbb
test
bound
jle
cld
int3
or
jle
popa
add
sub
mov
add
mov
shll
inc
js
je
jmp
bound
test
adc
sbb
mov
shll
lahf
xchg
dec
cmp
les
out
lret
pop
dec
pop
scas
and
add
pop
icebp
or
pushf
ljmp
lock
push
xor
mov
ss
pop
add
jmp
add
or
jns
lock
and
loope
push
mov
cli
xor
dec
jmp
or
testl
clc
inc
push
inc
das
popa
lcall
or
jmp
ss
sbb
xor
loopne
jb
cmc
les
add
sub
adc
rorb
movsl
and
add
mov
or
ss
add
and
mov
jge
and
pop
jmp
loope
push
adc
stc
nop
pop
adc
xor
jmp
lret
inc
stc
gs
pusha
bound
out
daa
push
rcll
or
push
and
ret
push
push
mov
dec
mov
lret
mov
adc
xchg
jo
dec
lcall
mov
mov
sbb
repnz
add
add
add
lret
movsl
pop
sbb
adc
in
or
stos
add
push
or
mov
addr16
mov
cmc
rorb
add
push
in
sarl
rol
sarl
sub
fisttpll
push
or
or
js
adc
mov
and
mov
cmp
sub
leave
xor
push
pop
daa
jle
fcompl
mov
call
push
loopne
addr16
lea
gs
xchg
in
and
cli
nop
cld
add
push
mov
adc
int3
or
jae
xchg
push
lea
stos
xchg
push
fildl
jb
out
test
lea
daa
mov
inc
cmp
ljmp
jb
push
pop
xor
jbe
pinsrw
test
add
cmpl
pop
out
xor
or
sbb
dec
sbb
or
and
push
push
or
dec
insl
jno
push
cli
sbb
xor
dec
dec
or
out
test
add
mov
fdivr
jb
inc
clc
sub
pop
add
sbb
lahf
fs
push
and
dec
or
xor
lods
cmp
sub
cmp
push
inc
add
mov
mov
cmpb
pop
jb
stos
add
lcall
adc
push
pop
mov
add
lret
adc
xchg
lock
cmp
or
add
imul
ret
mov
pop
or
rcl
push
pop
int3
pop
movb
movsb
cmp
jl
cmpl
test
pusha
pop
add
movsb
adc
lea
mov
or
xlat
lret
roll
xchg
jge
imul
jle
addl
out
cmp
xor
lock
and
sarl
call
cmp
fwait
dec
ljmp
pop
pop
sbb
lret
cmp
xchg
gs
sub
adcb
push
cmp
xchg
pop
test
fs
orl
rorl
jmp
leave
push
sbb
or
int3
fwait
and
inc
js
dec
mov
je
push
push
test
or
add
cmp
xor
imul
pusha
ret
push
dec
in
hlt
add
pop
mov
add
or
and
out
inc
int3
rorb
add
shlb
dec
mov
clc
sti
or
jle
shll
fs
pusha
jne
loop
mov
mov
test
mov
pusha
pushl
xchg
sub
nop
sahf
pop
mov
add
sbb
jmp
xchg
inc
shlb
or
les
cld
mov
jmp
mov
push
push
mov
mov
dec
or
push
xchg
add
pop
xchg
jnp
push
or
fdivrs
push
les
push
in
push
mov
test
xor
adc
add
fimuls
or
fsubs
mov
aam
inc
pusha
mov
jne
sbb
inc
mov
cmp
adc
mov
lret
jge
mov
mov
mov
adc
movsb
fcmovnb
mov
adc
mov
fs
push
dec
jmp
es
js
push
insb
pop
stc
xor
mov
add
test
and
xor
push
adc
lods
jecxz
push
sub
mov
lcall
or
push
mov
das
lds
jno
pop
fs
xchg
cmp
and
mov
or
xlat
add
push
pop
mov
outsb
pop
ret
add
fs
bound
mov
mov
es
mov
iret
adc
fldenv
outsb
fcomip
jmp
fsubs
shl
push
adc
and
xor
loop
adc
stc
xor
test
xor
sti
add
inc
and
or
je
sub
out
or
mov
pop
insb
inc
shlb
and
out
cmp
je
out
fmul
repz
adc
xchg
pop
lret
adc
outsb
or
cld
icebp
sub
adc
jno
test
sbb
repnz
ret
and
cwtl
out
mov
mov
mov
xchg
cld
pop
pop
andb
sub
ja
push
adc
and
and
cmp
ss
lock
roll
inc
andb
and
add
dec
inc
xchg
xchg
addl
jb
and
and
adc
sub
or
and
test
pop
inc
mov
jmp
push
pop
inc
or
pop
test
xchg
or
mov
mov
stos
lods
cmp
jbe
push
pop
jo
fisttps
jge
push
sub
int3
mov
mov
gs
fisubrs
lret
adcl
popa
cmp
ds
pop
arpl
push
cmp
dec
jbe
sbb
inc
xorl
dec
out
xor
lahf
inc
add
jne
adc
daa
dec
and
repz
in
mov
pushf
dec
add
shl
stc
dec
mov
xchg
add
push
out
mov
add
aaa
add
in
fdivrs
adc
mov
inc
and
cmp
push
push
push
add
or
xorb
inc
mov
adc
out
inc
mov
scas
cmp
aad
or
push
add
jne
xchg
add
lret
xrelease
aam
ja
cmp
xor
into
div
dec
jmp
xor
into
sbb
jb
inc
adc
add
lods
enter
pop
je
pop
es
inc
pop
int
or
or
data16
mov
shr
xchg
push
add
dec
stc
add
sbb
pop
cs
xchg
xchg
inc
mov
add
je
repnz
loop
and
add
mov
ja
sub
inc
add
xor
inc
cmp
xchg
pop
add
adc
pop
stos
pop
aam
and
in
push
mov
add
inc
call
sbb
sbb
pop
fsubr
mov
mov
mov
fiaddl
clc
test
cmpb
movb
push
jae
mov
or
shl
test
adc
push
bound
cmpb
add
push
push
orl
xchg
inc
ljmp
and
jo
jle
dec
lret
pop
shrl
movsb
clc
inc
adc
inc
inc
pushf
or
pop
mov
sub
lea
or
scas
dec
sahf
ss
jne
cmp
dec
inc
inc
or
jne
repnz
fistps
push
sar
add
lock
and
pop
sahf
adc
hlt
aad
push
clc
adc
pop
js
dec
insb
aam
xchg
je
loope
mov
addb
jmp
jbe
lret
pop
andb
pop
xor
cmpl
sti
or
out
int
out
xchg
push
pop
lret
addl
xchg
daa
xor
jns
push
mov
rclb
push
push
pop
push
dec
push
add
lock
or
or
add
rep
xchg
rorb
or
or
push
and
or
cmp
inc
mov
outsl
add
jge
mov
or
pop
mov
adc
inc
inc
fcompl
jle
test
cmp
mov
push
mov
pop
sub
push
aaa
clc
sub
addl
les
andb
jp
mov
add
adc
mov
push
adc
sarb
jg
popf
test
rorb
insl
iret
daa
add
xor
sub
or
dec
fdivrs
push
push
scas
cmp
aas
pusha
dec
mov
add
out
add
and
pop
mov
and
sti
mov
lcall
in
inc
adcl
xchg
fs
adc
xor
shrl
movsb
hlt
push
andb
dec
ret
add
ret
in
jle
jae
cmc
push
jne
add
xor
in
push
repz
xor
ds
mov
jne
aaa
popa
push
inc
ss
sbb
mov
movl
add
add
mov
jmp
scas
pop
notb
test
sub
adc
or
or
inc
push
mov
inc
testl
mov
mov
test
mov
mov
push
xlat
cs
add
xor
xchg
daa
insl
inc
aas
lock
rcrb
dec
lock
mov
fildll
inc
sahf
mov
test
adc
jbe
pop
push
loopne
or
xor
not
push
roll
cld
inc
add
add
enter
les
sbb
adc
jb
rcrl
add
ret
sub
jnp
inc
arpl
jge
add
aam
lret
mov
push
shr
shlb
xchg
dec
movsl
sti
and
adc
and
inc
push
dec
push
push
sub
lea
dec
add
call
lods
adc
cltd
jo
add
cli
sub
add
push
cmp
roll
jle
nop
cmp
je
sub
shll
xchg
jo
addb
je
add
rcrb
jg
test
jge
hlt
rep
ss
neg
xchg
cmpsb
imul
lock
test
aam
dec
aaa
add
mov
sub
dec
mov
test
pushf
push
dec
shll
cmpsl
fwait
adc
icebp
in
mov
rorl
add
insl
or
lods
fidivs
mov
popa
push
mov
cmp
in
and
sub
jecxz
mov
push
add
int3
add
jmp
cld
fsubrl
dec
testb
push
jae
ljmp
add
dec
mov
sbb
sbb
outsb
jae
fsubrp
movl
insb
ja
lahf
lret
xchg
adc
js
repnz
sahf
lret
jl
adcb
adc
sti
adc
and
or
rclb
push
or
fnclex
mov
adc
or
pop
aam
pop
adc
repz
outsl
push
push
dec
adc
push
and
out
cmpsl
push
mov
outsl
inc
or
ds
push
jbe
jle
pushf
outsl
sbb
push
test
sub
out
sbb
hlt
call
adc
mov
dec
loopne
mov
jo
les
stos
sub
dec
test
into
and
outsb
xchg
mov
call
std
inc
or
icebp
mov
dec
sub
test
mov
shrl
shrl
jnp
adc
fsubrs
fld
lock
in
lock
fsubs
call
jne
fdivl
mov
inc
adc
enter
add
jp
or
test
loopne
adc
and
pop
idivl
ja
xchg
test
mov
hlt
push
insl
or
loop
ljmp
push
sub
sub
xor
clc
fsubl
and
mov
rorb
clc
lock
lahf
mov
dec
imul
push
pop
and
mov
and
push
add
in
jmp
imul
test
mov
mov
push
add
mov
push
jnp
fdivl
imul
iret
add
inc
es
sub
cmpsl
or
mov
push
inc
sarb
and
sarl
js
xor
mov
adc
push
push
fidivrl
dec
stos
add
jg
and
sub
mov
and
push
mov
cmp
xor
popa
fwait
and
jmp
or
push
xor
dec
mov
fiadds
or
sarb
orb
test
fisubrs
sarb
ret
and
mov
int
adc
jbe
xchg
inc
fisubl
test
cmp
es
add
nop
int3
jno
addb
paddsb
ss
dec
xchg
in
pop
aas
jmp
adc
outsl
mov
and
jae
mov
stc
adc
inc
add
or
sbb
sub
jge
mov
push
fdivrl
sbb
mov
setbe
cmp
dec
test
aaa
int
cli
xor
dec
loope
lock
popa
inc
fists
sar
pop
imul
mov
and
pop
sbb
jl
cmp
jg
inc
jmp
hlt
mov
push
inc
pop
sub
jne
imul
jl
push
rolb
jge
aas
sbb
shlb
xchg
in
inc
adc
adc
and
xor
inc
pop
ret
ret
ss
adc
mov
mov
and
mov
xor
fsubl
mov
cmp
pop
mov
ja
cld
and
add
sbb
jnp
push
mov
das
sahf
or
enter
sbb
or
add
mov
sub
test
rolb
push
mov
or
lock
in
push
aas
movsb
xor
les
lea
enter
add
pop
add
xchg
aaa
loopne
xchg
rolb
aas
movsb
inc
xchg
hlt
inc
pop
adc
jecxz
cmpsb
push
mov
shll
add
pop
or
in
insl
cmpsl
xchg
or
test
or
sub
adc
ret
cmp
lods
ret
sahf
adc
nop
xchg
cltd
xor
jle
xor
mov
shlb
lahf
push
pop
inc
popa
out
jg
sub
add
xor
xchg
mov
mov
insl
mov
gs
ror
adc
jle
cmp
cltd
and
mov
xor
jbe
xchg
mov
push
push
lret
pushl
enter
nopl
pop
dec
mov
push
in
and
dec
add
jmp
jns
dec
jmp
inc
lock
in
inc
gs
xor
imul
and
mov
push
or
jne
inc
sbb
jecxz
fwait
movsb
mov
sub
jmp
pusha
lea
sub
push
aas
and
cmp
test
cld
mov
push
push
cltd
jg
aaa
mov
sbb
lock
cmpsb
lret
xor
push
shl
aaa
pushf
add
push
jl
push
rclb
add
push
add
add
and
xchg
or
add
ja
jg
aas
xchg
and
dec
jle
das
sbb
sbb
pushf
sbb
test
and
lods
dec
dec
xor
push
movsb
lahf
imul
dec
sub
adc
pop
jg
shlb
lods
jmp
push
pop
jl
mov
dec
and
rorl
xchg
xchg
or
popf
adc
or
aaa
loopne
mov
jne
sbb
sbb
cld
sub
gs
add
stos
nop
lock
inc
sbb
dec
pop
mov
mov
mov
mov
in
shlb
mov
mov
push
add
or
pusha
clc
add
pusha
ss
push
mov
mov
inc
mov
pusha
mov
cmpl
dec
cmpsb
pop
adc
cmp
jae
dec
ret
mov
push
sbb
mov
jg
inc
dec
rolb
addb
xor
mov
in
enter
sub
rclb
mov
or
ret
ljmp
xor
xchg
sub
rcl
cmpl
cmc
inc
cmpl
inc
push
mov
icebp
call
push
cmp
sbb
sahf
cmpb
neg
or
loop
xor
mov
ret
inc
test
out
pop
xchg
icebp
add
lret
jbe
jmp
or
daa
inc
test
xor
mov
inc
ret
insb
push
fmuls
cmpsb
push
add
mov
pop
icebp
mov
pop
ja
cwtl
jmp
repnz
outsl
or
fiaddl
adc
movsb
mov
repz
mov
inc
push
pop
jbe
in
je
clc
or
inc
cmpl
test
jae
add
pushf
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
pop
xor
testb
loopne
mov
inc
shl
or
push
adc
adc
push
dec
push
repnz
shl
in
sbb
or
pop
adc
adc
xchg
test
leave
rorb
pushf
or
push
add
rol
push
or
sbb
or
and
push
mov
daa
mov
movsb
adc
test
jbe
sub
jo
add
mov
xchg
and
aaa
sub
push
icebp
enter
hlt
mov
mov
arpl
mov
into
ret
cs
push
fidivrl
filds
pop
rcrl
pop
je
pop
push
and
lods
inc
test
mov
or
lcall
sub
or
dec
icebp
mov
mov
jb
xor
push
loope
pop
inc
cmp
jae
push
cmp
jl
mov
inc
sbb
roll
lcall
in
adc
jbe
or
adc
add
mov
clc
push
mov
loopne
pop
popa
lcall
pop
jmp
movsl
test
sub
scas
mov
cmc
sbb
inc
add
push
lret
or
in
dec
inc
push
popa
lods
dec
dec
shrb
leave
mov
icebp
cmp
int3
cmpb
mov
loop
pusha
or
push
add
jae
into
adc
or
inc
xchg
mov
dec
cmc
lods
mov
test
or
and
push
xchg
xlat
out
xlat
mov
jns
jne
jmp
fildl
or
push
ret
jnp
shlb
sbb
test
mov
mov
pop
adc
pop
jle
xchg
out
push
jge
mov
inc
push
sub
aaa
rorb
das
subl
dec
xchg
inc
mov
xor
ss
adc
adc
mov
push
jle
orl
lahf
sub
aas
mov
arpl
mov
adcl
rorb
jo
jl
ret
pop
hlt
outsb
add
aam
push
je
enter
in
pusha
jbe
sub
add
sbb
jmp
ret
sbb
cmp
mov
jg
adc
orl
sub
into
push
lret
pop
hlt
mov
icebp
adc
aad
add
xchg
cmp
or
rolb
mov
push
ss
push
sub
nop
fwait
pop
and
mov
pushf
and
test
adc
mov
or
or
push
sub
and
notl
jmp
sub
and
push
push
dec
or
xor
frstor
mov
out
data16
cmp
clc
push
mov
adc
cmp
add
dec
and
imul
adc
or
mov
xlat
decl
clc
je
cmp
adc
cmp
jb
testb
cmp
clc
xchg
testb
int
mov
in
je
test
sub
jge
push
adc
mov
movb
mov
jb
je
ret
jns
mov
mov
pop
adc
daa
mov
push
or
mov
adc
push
insl
adc
pop
push
pop
rcrb
mov
call
and
js
je
cld
adc
add
sub
mov
or
mov
push
insl
cli
mov
mov
mov
pop
es
jmp
loopne
sahf
adcl
inc
shl
lock
pop
push
mov
mov
cmpsb
and
mov
push
adc
push
lock
enter
xor
mov
push
pop
push
push
inc
shr
rcr
shr
out
pop
hlt
rcr
or
div
pop
dec
adc
inc
mov
jb
cmp
or
cmp
or
xor
clc
jns
shlb
or
fisubl
enter
lret
or
fxch
notb
mov
fidivl
push
push
add
adc
fldl
mov
dec
testb
iret
jne
mov
fwait
cmp
lret
add
add
lock
sub
orl
push
loop
push
mov
fwait
cmpsb
cmova
dec
sbb
push
dec
add
rclb
loopne
push
jle
jne
lea
les
stc
adc
les
pop
jecxz
jae
mov
mov
sub
test
ret
adc
in
jg
sbb
lea
xchg
fsubrs
fs
adc
pop
xor
pop
cmpb
sub
or
call
mov
inc
xchg
jbe
ljmp
cmp
push
mov
dec
jl
cmpsb
cld
sbb
subb
mov
or
pop
push
mov
icebp
mov
mov
adc
pushf
push
push
ds
cmpsb
filds
lea
mov
outsl
addl
aad
fiaddl
lea
lea
adc
or
dec
dec
pop
xorl
fildl
mov
mov
popl
and
adc
mov
and
adc
dec
enter
sbb
adc
xorl
or
inc
inc
mov
ret
mov
into
imul
sub
sbb
push
sbb
mov
and
adc
sbb
push
das
jge
call
pop
sbb
loopne
cmp
inc
cmp
xor
out
cli
test
call
jnp
inc
lret
cmp
push
sarl
add
shll
pusha
xor
outsl
pusha
in
xor
pop
mov
or
mov
enter
ss
daa
daa
daa
sub
xor
daa
daa
daa
sbb
cmp
daa
insl
dec
push
inc
and
inc
cmovs
dec
dec
dec
push
push
pop
xchg
xchg
xchg
or
xchg
xchg
xchg
push
rclb
xor
sbb
mov
xchg
cwtl
leave
and
dec
pushf
mov
xor
or
cmp
out
cmp
ss
sbb
pop
xor
stc
and
jle
or
dec
dec
fwait
nop
call
test
shl
sbb
rorb
sbb
clc
and
inc
inc
adc
std
jnp
mov
and
pop
fistl
mov
sub
xchg
adc
scas
xchg
mov
insb
jg
ret
sbb
xor
shlb
icebp
sub
data16
xchg
call
sbb
test
and
aad
push
in
push
cs
add
add
adc
cmp
adc
dec
push
add
xchg
and
sbb
mov
add
add
adc
push
inc
cmp
sbb
push
xor
push
pop
cmp
orb
js
add
std
xchg
and
rolb
inc
pusha
fwait
xor
movsb
push
cmp
fcomp
or
daa
mov
inc
scas
pop
cmp
insl
push
lea
addr16
test
cmp
lret
jo
cmp
push
xor
xchg
cmp
sti
push
xor
fdivr
cmp
lods
xlat
jo
fmuls
lret
and
popf
outsb
push
insb
in
dec
pop
int3
ficompl
out
inc
ret
out
cmp
jne
jo
push
fcompl
sbb
dec
mov
mov
pop
je
push
pushf
inc
push
dec
and
loopne
test
subb
jb
or
mov
scas
addb
or
in
daa
or
lods
repz
cmp
cmp
dec
adc
add
dec
push
jb
rcrb
or
push
or
loop
cltd
outsl
pop
push
xor
or
adc
sub
inc
movsl
mov
outsl
insl
and
loope
sbb
adc
mov
and
sub
jmp
cmpsb
dec
mov
jmp
push
adc
in
push
repz
push
or
addr16
loopne
cmp
xor
xor
shlb
mov
and
leave
sahf
push
int
push
into
incl
push
sbb
dec
sub
dec
adc
mov
orl
in
mov
and
cmp
lea
push
jmp
enter
mov
push
mov
dec
xor
loope
es
and
sub
adc
ret
fidivs
notb
xor
insl
aaa
mov
scas
push
clc
jmp
fwait
jo
test
sub
sub
lcall
cs
mov
mov
cmp
jne
push
dec
in
add
and
call
in
cmp
xor
punpckldq
fistpl
push
jecxz
inc
loopne
push
adcl
lock
inc
push
lea
adc
fmull
sar
xchg
out
cmpsl
mov
or
mov
negl
insb
sbb
jne
aad
adc
pop
ret
adc
adc
dec
popf
add
push
int
mov
inc
sbb
mov
inc
dec
ljmp
mov
pop
mov
xor
ds
pusha
dec
sub
hlt
xor
mov
sub
pop
test
mov
pop
sub
xchg
js
repnz
test
addb
jmp
cmp
and
rcrb
sub
cld
outsl
fistl
push
hlt
mov
lods
or
subb
cmp
add
pop
or
enter
push
lret
push
cmp
in
loope
cmovle
icebp
iret
inc
call
jmp
mov
sbbb
dec
inc
lea
adc
leave
add
inc
cmovo
mov
insb
push
lods
jnp
sub
jo
mov
cmp
popa
adc
jge
test
adc
jl
dec
sub
jns
xor
sarl
cmp
fisttps
cmpl
add
out
lods
pop
push
or
push
js
loopne
add
ljmp
sub
loope
sahf
cmp
xchg
push
sbb
lock
movl
sbb
out
jp
sub
int
push
jmp
pop
pop
dec
je
in
push
dec
lock
add
test
pop
dec
je
mov
clc
pop
cmp
fistps
fisttps
mov
stc
xchg
fstpt
lahf
insl
jl
adc
push
sysenter
sbb
movsb
jno
and
xchg
adc
stos
pushf
sbb
adc
lret
jbe
out
and
jmp
xchg
mov
andl
add
aaa
enter
out
cmp
mov
adc
cli
or
adc
lock
aas
movb
inc
mov
adc
bound
mul
cmpl
fmuls
push
and
loopne
sahf
dec
sbb
inc
mov
mov
cmp
push
pop
fucomp
sub
or
in
jo
sbb
movsl
dec
add
nop
lret
addb
inc
mov
xchg
rclb
inc
cmc
pop
lret
add
mov
cwtl
mov
int
sbb
or
repnz
cmp
mov
xchg
push
jb
add
inc
sarl
inc
xchg
or
dec
stc
pop
xchg
cmp
jbe
and
into
xchg
push
inc
out
add
add
sub
adcb
test
mov
mov
lock
or
into
or
das
push
cltd
int
mov
std
jno
adc
loopne
fisttpll
add
xor
add
outsl
jo
lret
jmp
or
and
mov
pop
sti
mov
mull
pushf
aas
lea
loope
out
xorb
cltd
cmpsb
les
in
inc
ja
fadds
xchg
cmpsb
xchg
cmp
ljmp
repnz
adc
mov
fidivrs
xor
inc
cli
mov
rorb
inc
cmpb
sbb
sbb
lods
pop
es
pop
lahf
dec
andl
mov
dec
out
test
mov
inc
enter
js
ret
pop
je
aaa
push
lea
movsl
jmp
aam
pop
mov
sub
and
ret
fdivrl
sbb
incl
cmpb
jnp
inc
aad
icebp
sub
orl
sbb
mov
adc
add
xor
fmull
adc
push
inc
pop
jmp
unpckhps
xchg
mov
repz
sbb
test
and
cmpsb
push
mov
mov
add
inc
and
std
mov
and
push
push
pop
jmp
in
jno
andb
push
add
dec
nop
adc
push
and
mov
xor
arpl
out
bound
and
stc
mov
push
pop
inc
xor
sub
out
pushf
cli
or
mov
jp
ja
fldl
mov
jl
js
std
into
mov
rcl
fildl
adc
adc
push
jmp
js
adc
divb
sub
sub
lret
lods
test
orl
nop
sbb
shlb
adc
push
gs
push
sbb
mov
mov
rolb
gs
sub
pop
cmp
jnp
js
lods
jg
rclb
shlb
adc
jbe
jge
jge
addr16
pop
mov
jne
std
or
adc
and
push
cmpsb
ds
push
jne
mov
mov
in
ret
mov
lea
pop
pop
out
push
pop
lods
pop
int3
pop
pop
inc
cli
xchg
mov
cmp
mov
mov
call
cmc
or
pop
add
add
dec
add
out
imul
push
lock
inc
lock
outsl
xorb
dec
cmp
insl
sbb
push
rorb
ljmp
and
loop
sub
pop
jl
inc
lret
js
inc
test
add
js
pop
sbb
ss
les
add
in
mov
movsl
call
enter
inc
loopne,pt
inc
sub
and
xchg
adc
jecxz
cmp
and
cs
cmp
adc
pop
dec
xor
mov
sti
adc
sbb
lret
push
jecxz
dec
pop
jge
mov
loop
and
mov
rcrb
xchg
ret
xor
cld
xlat
adc
pop
cmc
cmp
and
pop
add
sbbb
push
gs
nop
or
add
imul
jno
xorb
cmp
ss
xchg
fistl
jp
add
jmp
sub
shll
out
xchg
xchg
mov
subb
mov
pop
cwtl
lahf
pushf
push
repnz
sub
xor
push
scas
imul
mov
subb
lea
jb
data16
insb
dec
push
xor
dec
cs
pop
mov
xlat
rcll
jge
sahf
nop
or
sbb
mov
and
sbb
inc
shl
pop
into
sub
lea
cmp
add
outsb
pushf
mov
jl
fadds
in
push
imulb
ljmp
dec
jbe
jbe
mov
int
xor
sub
nop
mov
daa
add
aas
repnz
or
dec
inc
das
adc
inc
jb
and
rorl
mov
clc
into
jl
or
or
and
data16
or
mov
test
mov
mov
or
jae
add
mov
inc
and
jne
or
and
dec
inc
data16
punpcklbw
mov
jmp
shlb
mov
push
jbe
adc
push
pop
inc
jne
and
push
xor
clc
negb
dec
or
ror
loopne
inc
lcall
test
sar
and
pop
movsl
adc
sub
movsl
pop
lods
aad
add
movsl
aam
inc
push
mov
pop
cld
pushf
pop
mov
xor
pop
sub
je
push
popf
ds
push
or
fdivrs
pop
call
xor
and
data16
pop
imull
sbb
lods
incl
push
test
sub
adc
and
dec
data16
jp
lret
adc
dec
mov
push
or
or
shrl
and
or
inc
pusha
ds
insb
push
mov
cs
repz
test
and
add
pop
sahf
popa
and
ja
loop
nop
in
shl
mov
shll
dec
xor
adc
or
mulb
daa
pop
shr
add
jmp
cltd
in
add
movl
sahf
lock
xchg
cmp
test
adc
test
adc
cmpsb
pop
add
lods
test
push
mov
rcl
add
je
or
or
shlb
jmp
jg
mov
or
mov
jmp
sbb
lock
jbe
jbe
and
mov
and
xor
mov
jge
add
or
jmp
sub
mov
and
push
fdivl
or
mov
mov
pusha
and
out
mov
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
mov
and
pop
push
jns
adc
fnstsw
push
cmpsb
cmp
pusha
insl
sarl
push
sbb
mov
add
pop
add
outsl
and
or
add
out
lret
add
test
fisttps
add
repz
orb
testl
shl
sub
push
mov
sub
or
negl
cmp
and
sbbb
pop
pop
xorb
sbb
jmp
push
and
divb
add
sarl
xor
inc
push
flds
fnsave
sbb
mov
fstpl
push
subb
ljmp
out
push
sbb
push
pusha
lods
dec
cld
cmp
lock
insl
pop
lea
neg
jmp
leave
nop
es
pop
xchg
and
or
or
pop
xchg
push
or
and
aaa
sbb
out
mov
fcompl
addb
arpl
dec
jmp
sub
sub
jmp
sbb
leave
subl
adc
fwait
rclb
inc
mov
add
adc
out
jge
div
add
cmp
sub
mov
fwait
rolb
test
jmp
pop
in
pop
mov
shlb
into
jbe
outsl
pop
aas
rorb
shlb
faddl
loopne
jne
rorl
repnz
inc
sahf
mov
add
adc
es
push
test
loop
divb
not
insl
in
sbb
jp
dec
in
inc
stos
push
shl
stos
cmp
fsubr
mov
push
push
sahf
jmp
xor
ret
fsubl
aam
test
loopne
xchg
and
mov
aad
addb
push
pop
cltd
rorb
sub
clc
in
pop
xchg
mov
push
add
pop
outsb
mov
add
and
mov
add
add
adc
or
out
ss
ret
add
push
pop
movzbl
or
aam
stos
aad
movsl
xor
mov
add
sbb
lock
daa
mov
sbb
adc
add
adc
xchg
add
addl
add
mov
pop
sub
inc
cwtl
mov
add
lret
pop
mov
add
lods
fsubrp
fwait
jno
mov
dec
inc
and
inc
cmp
sbbl
xor
inc
xchg
loope
ficoms
pusha
sub
or
imul
sub
sub
divl
cmp
mov
mov
fdivrl
jnp
mov
enter
cmp
and
enter
inc
sbb
or
mov
imul
out
dec
xchg
pop
cwtd
adcb
popf
test
jmp
jns
or
test
popf
adc
mov
inc
sbb
inc
mov
pusha
pop
jg
jae
pop
test
mov
push
int3
pop
cld
or
aad
pop
clc
out
xor
mov
sub
cs
into
rolb
rcrl
push
xchg
and
jne
jb
je
popw
gs
sbb
out
xchg
mov
fdivl
mov
sbb
sbbb
adc
mov
push
pop
fadds
into
inc
ret
dec
mov
mov
in
sbb
outsb
xchg
and
jne
jne
cmp
or
mov
push
adc
sbb
xor
adc
shll
push
or
sub
push
or
push
out
mov
xchg
jne
adc
ret
jne
iret
inc
sbb
xor
push
add
cmp
sub
inc
das
jae
shr
loop
pop
sub
dec
subl
ffree
loopne
xchg
fidivrs
pop
sti
sbb
loop
inc
fnstenv
inc
sbb
and
xor
ficoms
push
mov
or
add
in
push
mov
fldt
loopne
fcmovne
fwait
sahf
adc
xchg
and
sbb
les
add
cmp
or
jle
call
call
fldpi
xor
popf
inc
and
mov
fistpl
push
mov
rolb
adc
cmp
push
repnz
jno
xchg
xchg
and
adc
or
and
cmp
call
mov
out
add
push
mov
les
jbe
inc
or
imul
pusha
push
call
pop
das
das
data16
fnstcw
je
shlb
xchg
xor
mov
pusha
das
lea
sbb
push
stos
test
push
mov
loop
data16
loopne
sub
jbe
stos
mov
jnp
repnz
inc
mov
inc
and
adc
push
push
in
pusha
lcall
add
sbb
add
jge
les
push
jp
je
les
int
inc
inc
popa
add
sti
jbe
test
adcl
dec
inc
movsl
sbb
inc
fwait
adc
andl
jne
push
add
loope
icebp
inc
fcomps
dec
add
add
push
pop
xor
and
sbb
rorb
cmpl
adc
jle
inc
test
loop,pn
dec
dec
ret
mov
inc
sub
movsb
faddl
cmc
lret
inc
ljmp
leave
sbb
adc
dec
push
or
cmpsb
add
mov
sub
sbb
daa
adc
mov
aas
jb
add
scas
cwtl
pop
test
jne
jg
test
mov
push
in
xchg
inc
stos
stos
repnz
pop
pop
arpl
xchg
cli
jo
mov
jge
movsl
add
jle
cmp
scas
xchg
xchg
mov
cltd
and
add
lods
pop
lea
jns
dec
xchg
loopne
aam
adc
sub
xor
inc
shl
add
dec
cmp
loop
rolb
adcl
mov
jmp
dec
cli
out
mov
insb
pop
and
mov
out
mov
inc
movsl
mov
push
into
jbe
lea
xor
mov
add
or
sbb
shlb
cmp
sbb
iret
dec
cmp
enter
mov
or
add
dec
mov
adc
imul
movsb
push
and
sbb
sbb
inc
test
or
sbbl
ljmp
sti
cmp
dec
dec
aaa
or
jo
inc
hlt
adc
pusha
inc
adc
xor
js
movsl
cmp
mov
lahf
xor
push
movsl
xor
stos
sub
pop
lods
jg
sub
sub
not
rcrb
inc
loop
je
mov
and
outsl
outsb
loop
ds
push
or
and
lock
in
adc
adc
mov
jl
scas
xor
addb
add
pop
sub
sarb
je
mov
fs
aam
bnd
xchg
sub
in
cltd
sbb
mov
hlt
test
push
adc
and
or
lcall
lea
mov
cli
adc
fnstenv
sub
mov
pop
lods
dec
test
xor
pop
test
iret
dec
jns
inc
lock
sbb
mov
popa
or
cmpsl
test
lcall
cmp
mov
ret
imul
xchg
mov
mov
jl
pop
andl
stos
stos
mov
into
out
mov
jl
mov
out
and
pop
dec
into
and
inc
lcall
rorl
es
inc
xchg
push
cli
scas
shl
nop
sub
sarb
lock
add
or
push
adc
push
xchg
mov
in
add
xchg
xor
fdivr
and
adc
mov
pop
xchg
repnz
pop
cli
mov
mov
add
in
stc
push
add
add
and
add
pop
stc
test
clc
add
inc
xchg
xchg
mov
or
jl
or
pop
mov
scas
inc
push
and
add
sbb
aam
add
sahf
xor
push
adc
mov
mov
mov
test
mov
lcall
or
test
pop
add
lods
mov
or
push
or
or
loop
jne
inc
jmp
mov
sub
and
or
xchg
add
lret
pop
aaa
push
pop
mov
sub
cmp
ja
push
or
jmp
fs
mov
mov
cmp
into
add
dec
jmp
xchg
call
pop
xor
inc
stos
mov
or
loopne
jmp
pop
jge
invd
mov
mov
jmp
sub
lods
jbe
mov
adc
pop
fstl
and
mov
loope
sti
iret
mov
cmp
push
xor
mov
mov
orl
nop
sti
mov
rcrb
lods
push
subl
pushf
push
cmp
fs
mov
adc
push
jmp
dec
pop
gs
xor
sbb
mov
ret
pop
add
mov
cmp
jbe
pop
jge
pop
cmp
out
jge
mov
add
mov
dec
jae
imul
sbb
mov
jmp
and
mov
fisubrl
call
xchg
cmp
mov
or
cld
mov
in
orl
jnp
cmp
and
xor
add
stc
sub
cmp
mov
insl
xchg
mov
xor
ds
mov
jbe
jge
mov
mov
mov
pop
cmp
adc
cmpl
mov
jmp
dec
dec
cmove
repnz
mov
dec
cmpl
shrb
jmp
cld
je
cli
and
movsb
outsl
mov
sub
stc
push
adc
sti
or
mov
std
jecxz
add
pushf
jmp
insb
and
mov
pop
push
mov
dec
xor
add
add
jne
xor
pop
xchg
sbb
rclb
jge
neg
add
adc
sub
jl
fcompl
cmp
aad
mov
sbb
cmp
in
test
push
enter
mov
dec
fsubr
xor
jne
pop
stos
adc
ficoml
inc
in
dec
xchg
les
addb
mov
mov
and
add
cmc
pop
lret
cmp
jb
mov
dec
mov
cmp
loopne
pop
cli
dec
or
mov
aaa
xor
icebp
mov
push
xor
and
and
and
adc
sub
lods
into
nop
rcrb
mov
adc
sbb
ja
stc
mov
or
pop
lods
lret
mov
mulb
movb
testl
jne
enter
sbb
or
into
jne
subb
and
pop
cmp
xlat
movsl
pop
jnp
xor
hlt
int3
add
jne
rolb
or
es
aaa
hlt
rcrl
pop
push
mov
les
push
add
mov
sub
push
test
dec
cld
jb
ds
cmpsl
inc
dec
lock
ja
pop
or
js
sbb
insl
mov
pushf
sub
xchg
stc
jg
add
mov
xchg
js
mov
sarl
sbb
gs
lods
add
or
shr
outsl
add
rcll
sti
sbb
pop
mov
jg
or
dec
inc
mov
ret
or
notb
je
pushl
and
insl
fadd
loopne
movsb
aam
not
out
or
mov
sahf
dec
dec
inc
or
shrl
cmpsb
clc
ret
push
push
sbb
and
adc
imul
add
ficompl
sar
pop
push
aas
mov
jmp
call
stos
lret
sbb
mov
mov
jl
shlb
adcb
inc
jno
mov
loopne
ja
orb
mov
add
cmp
sub
enter
sbb
jmp
scas
out
mov
dec
and
mov
movsb
int3
mov
test
int3
add
xorb
lret
lods
pop
es
sub
add
negb
mov
movups
add
mov
and
shlb
pop
jnp
or
call
xchg
cs
add
push
and
inc
add
push
inc
or
mov
repz
xor
movsl
into
je
mov
orb
shrb
hlt
jmp
inc
jmp
sbb
sbb
pop
jne
cmp
scas
lods
pop
ret
inc
scas
inc
inc
call
mov
cmp
shrb
adc
mov
pop
cmp
in
or
in
or
stos
and
sbb
xchg
adc
pop
jnp
insb
inc
cs
or
ss
cld
aas
lods
jge
stc
gs
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
loopne
adc
out
add
out
call
inc
pcmpgtw
mov
lret
pop
jae
push
or
je
out
clc
sbb
push
or
add
xchg
or
clc
add
popf
xor
sbb
mov
aad
fwait
shlb
dec
jnp
hlt
push
add
cmpsl
adc
repnz
mov
imul
and
sub
cmp
testb
sub
mov
add
jle
mov
rolb
or
xchg
ret
jle
pop
shll
repnz
mov
sub
pop
je
or
jge
setg
sub
pop
inc
mov
cmpsb
aas
sub
mov
jne
movb
cmpsb
mov
or
lret
icebp
sub
sbb
ficoml
inc
cmp
add
add
add
add
lcall
mov
jmp
sub
add
push
cmpsb
pop
pusha
pop
xor
jg
rcrb
dec
add
mov
mov
out
dec
cmp
add
adc
fs
negb
xchg
lret
cld
xor
push
or
bound
add
testb
addb
and
mov
lea
adc
mov
dec
xor
cmp
or
push
xor
mov
xor
jl
adc
push
add
jge
loopne
jne
fadd
jbe
xor
push
add
clc
dec
adc
mov
ds
aam
sub
adc
xchg
scas
into
lahf
adc
push
xor
shlb
enter
mov
call
xor
inc
or
nop
cmp
mov
fstps
sbb
stos
cmpb
incl
dec
mov
stos
push
adc
js
jno
imul
pop
xchg
pop
cs
push
fldl2t
call
mov
or
call
call
fcoml
rclb
insb
roll
add
addl
push
and
clc
test
sub
push
or
add
dec
sar
lea
scas
loopne
jmp
add
testl
adcl
jno
mov
pop
push
or
enter
sbb
frstor
stos
loopne
js
push
pop
sbb
xchg
pop
push
dec
pop
decl
addr16
xor
leave
and
add
cmpsb
sti
add
xchg
addr16
popf
insl
loopne
rorb
fimuls
ljmp
loopne
jg
add
daa
xor
or
jne
pop
daa
cmp
adc
mov
out
push
add
scas
test
xor
icebp
nop
mov
inc
sbb
sub
and
or
mov
adc
xor
fiadds
mov
mov
push
sub
adc
arpl
push
sub
movswl
pop
mov
sbb
les
lods
data16
dec
dec
xor
or
cmp
add
mov
add
andl
dec
shrd
push
jle
mov
ss
jl
jmp
clc
mov
or
pushl
xchg
stc
inc
add
dec
jmp
addr16
xchg
clc
sub
adc
sbb
mov
roll
shrb
addb
dec
inc
xor
ret
sub
jo
sbb
out
and
and
pop
push
pop
sbb
js
jg
loop
and
sub
or
inc
adc
neg
cmp
mov
lock
ret
cmp
adc
push
mov
js
add
jbe
and
and
adc
xlat
inc
or
jg
lods
jb
in
lods
jge
fs
dec
inc
dec
pop
add
jb
or
sbb
sarb
test
add
jae
stc
mov
or
sub
mov
push
popa
xor
or
jbe
mov
dec
xor
sbb
and
mov
loop
call
mov
push
pop
jl
mov
and
sub
or
inc
add
mov
andb
jmp
lock
inc
sub
add
inc
sarb
mov
jne
cmp
loopne
jl
popaw
add
mov
xchg
xor
or
ficompl
xor
add
add
es
stc
test
mov
xor
je
push
rclb
jne
cmp
xor
sbb
ficoms
dec
mov
rorb
inc
rorb
xor
mov
sbb
enter
push
insl
dec
xor
pop
push
jmp
insl
cmp
movb
sub
lods
sub
or
rcl
mov
inc
shlb
push
insl
ljmp
xor
jo
adc
jge,pt
testb
jle
gs
or
pop
addl
popf
out
or
popa
je
pusha
mov
sbb
or
popa
and
pop
dec
inc
push
sub
roll
or
loopne
hlt
adc
cmp
or
mov
arpl
and
and
pop
sti
mov
fldl
fdivl
fmull
insl
push
pop
clc
and
add
in
adc
inc
jecxz
lar
xchg
shrl
dec
rol
add
das
add
adc
cld
sbb
dec
insb
pop
arpl
sub
inc
cmp
dec
push
aas
shrb
inc
add
sub
mov
clc
jmp
icebp
cli
pop
jb
sbb
cmp
push
and
cmpsl
andb
jmp
roll
and
or
cmp
jmp
inc
inc
or
dec
jmp
push
cmp
sbb
sahf
xchg
pop
shrl
sbb
jle
shlb
inc
cld
or
dec
push
sub
cmp
push
gs
call
pop
push
int
push
adc
mov
mov
aaa
sub
fadd
es
mov
push
cmp
pop
fidivl
sub
dec
add
sub
mov
pop
jp
cs
inc
mov
adc
or
cmp
jmp
insl
inc
add
cmp
xor
lods
or
pop
cmpl
js
push
or
push
data16
or
dec
push
mov
adc
popa
dec
xor
add
imul
and
or
sbb
test
lret
pop
inc
or
cmp
jnp
mov
sbb
add
jbe
jge
pusha
lock
mov
push
es
or
bound
cmp
or
add
jnp
sub
mov
sbb
cmp
mov
mov
icebp
xor
pop
pop
cmp
jno
nop
add
xor
aaa
mov
sub
test
or
adc
hlt
jmp
or
jmp
divb
sahf
jle
mov
je
push
ljmp
adc
addl
test
negl
cs
sbb
int
jae
shrl
dec
fst
jne
test
add
les
popaw
dec
mov
fstpl
push
sbb
les
xchg
sbb
shll
incl
add
orl
lea
or
xor
push
push
inc
push
sbb
mov
push
decb
fcoms
lods
xor
cmp
jno
mov
jl
lock
mov
popf
pop
sub
addr16
insl
js
pop
cmc
iret
mov
add
or
subl
imul
dec
add
mov
sbb
inc
dec
jecxz
lea
push
xchg
movl
inc
pop
xchg
rcrb
icebp
ret
mov
push
mov
cmp
xlat
jge
notl
cmp
sbb
sbb
in
jo
pop
je
pop
push
insl
xor
das
add
adc
ss
jl
dec
fiadds
arpl
cli
pop
cltd
pushf
and
xor
dec
cld
or
cmp
sbb
inc
jmp
dec
push
jns
mov
lods
pop
inc
or
push
and
insb
fmuls
cmp
inc
test
push
sub
add
push
push
cmp
dec
or
syscall
push
push
shrb
sbb
fdivrs
pop
mov
lock
mov
jo
mov
xor
xchg
fstpl
loope
or
adc
pop
jmp
adc
mov
rcrl
addb
in
adc
dec
jge
shl
jl
lds
sub
adc
sub
pop
jmp
xchg
test
mov
cmp
test
ljmp
cwtl
adc
inc
pop
mov
sbb
sub
mov
jecxz
mov
cmp
xchg
je
loope
adc
adc
jp
sbb
jmp
ret
sysexit
std
inc
js
xor
ljmp
jge
jl
loopne
mov
mov
push
add
fisubrs
nop
adc
mov
ret
adc
aad
sbb
fs
sbb
push
fabs
dec
xor
push
pop
call
add
xor
xchg
ljmp
dec
filds
inc
sub
loop
mov
dec
xor
dec
add
leave
js
adc
and
test
jecxz
push
inc
jmp
pushf
dec
out
push
movsb
pop
mov
and
xor
or
jno
mov
push
test
jno
inc
jl
jge
adc
adc
cmp
or
mov
test
add
imul
iret
adc
sub
fwait
mov
cld
inc
dec
cmp
lea
or
jp
shll
std
out
pop
add
or
pushf
sub
ja
or
fcmovb
jmp
shr
or
cwtl
jns
das
mov
add
add
or
bound
scas
push
bound
imul
inc
add
sbb
pusha
lock
rcr
or
dec
cwtl
add
int3
cld
push
out
jne
rclb
fnstcw
inc
push
or
enter
in
cmp
inc
dec
add
lea
mov
shr
cmp
mov
adc
or
mov
cs
or
push
jp
adc
adcb
fwait
repnz
orb
xchg
add
cmp
iret
adc
out
cwtl
sbbb
xor
pushf
push
pop
daa
mov
mov
jle
in
jmp
push
ret
insl
or
mov
push
cli
or
notb
or
shl
andl
adc
lods
mov
mov
add
notrack
add
lods
cli
stos
imulb
or
fwait
test
test
adc
mov
pushw
or
sbb
pop
cmp
xlat
cmp
push
popa
cmp
cwtl
movsb
ficoml
je
aam
fdiv
cli
add
in
insb
inc
pop
mov
lock
push
add
testl
test
add
sub
jne
add
call
pusha
push
ljmp
adcl
xor
test
aaa
lret
mov
push
dec
mov
sbb
andl
jle
adc
inc
pop
add
push
add
jle
and
pop
cmp
nop
mov
lret
fidivl
pop
je
cmp
lock
mov
sbb
aas
xor
cmpb
stos
ret
fdivl
cld
inc
mov
addb
xchg
push
sub
fsts
adc
bound
mov
push
mov
push
push
fsubs
test
inc
adc
sarl
fldenv
ljmp
or
cmp
sub
and
adcl
mov
in
add
dec
add
out
aad
stc
and
enter
or
pop
adc
into
jne
mov
push
neg
add
shll
pop
inc
fisttps
test
je
mov
dec
jo
or
ljmp
pop
data16
or
cmp
or
add
adc
mov
mov
pop
outsb
mov
mov
xchg
add
ret
lea
hlt
aam
xchg
and
push
pop
and
or
xchg
int3
add
hlt
iret
push
aad
xor
in
imul
inc
ja
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
int3
xchg
sbb
xor
sbb
fcoms
imul
inc
and
adcl
icebp
sbb
adc
fs
sbb
jne
jmp
cmp
jne
pop
pop
pop
pop
mov
mov
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
or
mov
sub
idiv
and
cld
je
rorb
das
push
mov
or
push
mov
cmp
rcrb
ljmp
insb
add
mov
adc
rsqrtps
ss
sbb
xor
xchg
cli
push
and
gs
int
sbb
into
jbe
add
mov
jns
aas
bound
cmc
aam
sbb
sbb
mov
jne
mov
ss
inc
cltd
and
push
or
adc
loop,pt
push
repz
dec
and
fwait
dec
push
es
cmpxchg
out
and
mov
test
insl
xor
sbb
dec
jae
or
sahf
mov
cltd
inc
or
sbb
fisubs
and
xor
dec
pushl
dec
hlt
test
jno
ss
or
push
jge
pop
insb
rclb
adc
ror
insb
leave
jne
cmp
shll
mov
inc
jmp
fists
imul
je
aaa
mov
mov
test
inc
ret
scas
es
mov
je
fisttps
and
push
cmp
ja
add
cmp
lahf
xchg
jns
ret
cmp
jne
xchg
jge
je
xor
adc
mov
movsb
inc
ss
cmp
pop
jbe
add
xor
push
push
pop
mov
dec
mov
xchg
movsb
and
pop
mov
cmp
in
or
mov
sbb
inc
dec
sbb
mov
popf
clc
or
ret
jmp
imul
je
push
xor
fmuls
aaa
call
add
int
push
into
nop
inc
cmp
cs
pop
mov
rorb
mov
mov
fidivl
test
jecxz
push
cmp
adc
js
xor
mov
hlt
je
aad
dec
jg
inc
sbb
pop
adc
add
jmp
inc
imul
int
sarb
movsb
rcrb
push
pop
sub
xor
adc
add
dec
xchg
xchg
or
rolb
sbb
mov
inc
add
test
add
sbbl
cmpsl
mov
mov
inc
iret
pop
nop
out
jg
jg
mov
push
rcl
sahf
out
sahf
rcl
aad
xlat
fmuls
jns
fstpt
rolb
and
mov
idivl
xor
inc
add
dec
mov
data16
rorl
imulb
push
dec
pushf
enter
add
data16
fucomi
mov
mov
add
push
push
push
push
clc
xor
mov
xchg
xor
push
aas
sub
push
and
push
je
test
and
call
cmp
sbb
push
sbb
push
jnp
push
sbb
and
push
popa
add
add
push
lods
cld
inc
sbb
pop
lods
mov
imul
pop
pusha
shr
sahf
inc
mov
lcall
lea
imul
lea
sar
inc
adc
ret
movswl
add
neg
and
mov
inc
xorl
pushf
cmp
lock
out
mov
sub
add
adc
sti
add
xchg
fisubs
stos
pushf
hlt
add
push
jp
mov
fistl
push
push
fmull
decl
mov
test
or
and
lock
inc
adc
push
ljmp
or
mov
and
lea
pop
adc
movsb
subl
jae
xchg
ja
add
cmpb
and
mov
aaa
repnz
in
ljmp
loopne
inc
or
fimuls
popa
test
sbb
and
add
leave
add
rolb
test
rolb
push
mov
or
cs
sarb
dec
xchg
mov
int
or
cwtl
dec
push
sub
mov
movsb
cmp
cmp
push
lret
movsb
sub
inc
xchg
mov
xor
mov
jge
jl
fdivl
and
rorb
inc
or
jle
jle
inc
test
fiaddl
cmp
add
or
and
inc
or
and
add
or
adc
pop
dec
gs
push
lret
cmpsl
mov
movl
lods
or
fs
shrl
mov
out
mov
jmp
dec
adc
iret
and
lods
lock
div
jns
lret
cli
inc
cli
div
xchg
loopne
adc
loop
add
sbb
add
loopne
pusha
outsl
mov
mov
pop
adc
dec
dec
js
aam
dec
sbb
shll
inc
insl
es
mov
xor
mov
xorl
rolb
xchg
cmpsb
mov
mov
xor
xor
mov
inc
add
mov
stos
mov
add
sub
repnz
pushw
cmp
loop
out
jge
enter
xchg
mulb
test
inc
nop
add
sbb
mov
add
das
cmp
or
jns
inc
shlb
fdivrs
aam
inc
nop
and
and
jge
and
mov
adc
mov
scas
add
xor
or
call
sub
xor
cld
lea
push
jns
sub
fnstcw
pop
xor
rcll
lods
rolb
dec
les
cltd
add
imul
sahf
mov
sbb
imulb
sbb
mov
test
enter
mov
out
or
adc
orl
inc
lock
movsb
adc
cmp
jne
xchg
dec
les
jne
sub
je
loopne
repz
mov
add
mov
adc
ljmp
jno
ja
sub
es
inc
clc
movb
inc
mov
push
add
push
ret
pop
hlt
popa
nop
cmp
push
call
push
adc
adc
in
dec
andb
xchg
and
pop
shr
inc
loop
popa
mov
or
push
shll
test
jne
sbb
neg
and
insb
jle
inc
imul
jmp
pop
dec
je
loopne
loopnew
lahf
imul
add
inc
xchg
xchg
lock
in
mov
dec
and
pop
cmp
xor
out
sbb
push
xor
mov
add
subl
mov
add
sub
add
cmpsl
sub
dec
into
or
push
nop
lret
sub
xchg
cmp
mov
mov
mov
inc
dec
enter
andb
push
shlb
add
int3
pop
sub
roll
jne
cmp
shll
les
add
into
or
mov
inc
test
add
xor
or
dec
nop
dec
mov
dec
cmp
jge
sub
cmpb
mov
push
bound
movb
dec
cmp
clc
sbb
dec
add
add
fadds
mov
mov
movb
dec
test
mov
jp
jne
dec
lods
adc
int
pushf
adc
push
inc
ret
and
add
sub
adc
inc
jbe
in
and
or
dec
movsl
jge
enter
or
adc
and
ret
push
jmp
add
push
mov
shll
lea
or
or
adc
out
or
or
xchg
push
or
ss
push
add
or
xor
movsb
pop
pop
scas
add
adc
xchg
adc
mov
mov
ret
sub
adc
or
pop
sbb
fidivl
test
outsl
pop
mov
mov
iret
xor
sub
lret
into
pusha
inc
push
mov
rcrl
add
cltd
lea
pop
out
add
prefetchw
inc
adc
stos
movsb
mov
hlt
inc
push
pop
rclb
jae
or
or
loopne
xchg
cmpsb
add
add
mov
rolb
inc
imul
or
mov
jge
sbb
pop
mov
or
cmc
mov
add
lea
xor
and
jbe
fdivrl
and
and
movb
push
mov
pop
xchg
lret
cmp
sub
sub
in
jae
inc
ljmp
mov
roll
sub
fdivl
xor
or
inc
stos
and
sub
into
xchg
cmpsl
add
cmp
jge
scas
and
into
in
stmxcsr
mov
bound
cltd
xor
in
xorl
add
cmp
rorb
mov
jle
pusha
push
mov
je
and
sbb
inc
jg
push
cmp
jns
into
into
mov
pop
and
inc
pop
sub
fsubp
fisttpll
cwtl
xchg
push
shl
pop
mov
out
int3
or
shlb
or
pop
adc
movsb
nop
adc
aas
movsl
pop
in
lcall
add
leave
lahf
pop
test
out
or
add
add
adc
repnz
sbb
sub
sbb
je
and
pop
lret
inc
cmp
imul
sbb
sub
jmp
push
pop
ret
push
xchg
rcl
out
push
scas
aam
add
adc
push
and
mov
and
pop
shll
or
and
pop
fmul
cmp
add
mov
lods
push
cmp
adcb
and
add
fdivrl
and
mov
add
hlt
add
fisubrs
mov
jle
sbb
xlat
jle
and
daa
or
add
sub
adc
jge
mov
xor
bnd
jo
scas
ljmp
pop
pop
cmp
leave
push
xor
sub
and
mov
aam
xlat
aam
lock
jg
push
adc
int3
rcll
add
inc
pop
or
jmp
inc
or
in
gs
loopne
ds
roll
cli
icebp
stos
and
cmp
lret
inc
inc
and
notb
fsubrp
jmp
pop
sbb
and
ficoms
out
fwait
negl
cli
mov
jo
jbe
cwtl
jns
jmp
mov
cld
mov
push
and
push
or
xor
cmp
lock
sbb
mov
sbb
mov
cmp
jb
sub
test
inc
push
and
mov
test
imul
movsb
fs
and
pusha
sbb
sbb
scas
ret
mov
stc
sbb
add
scas
pushl
xchg
xchg
inc
repnz
je
test
push
sub
in
xor
mov
aam
and
jecxz
pop
popf
cs
cmp
fcoms
stos
xor
pushf
nop
push
and
out
jge
adcb
sbb
inc
and
int3
sub
xor
shlb
rclb
fcoml
lcall
xor
in
mov
dec
xchg
inc
sbb
push
dec
stos
xor
incl
fs
mov
das
jno
jge
lea
jae
fisttpl
inc
fldcw
dec
adc
or
xor
mov
and
xor
adc
out
add
push
push
test
test
dec
add
pop
std
adc
adc
rclb
add
outsb
adc
sub
mov
jae
addb
lds
jmp
push
push
xlat
movsl
sub
inc
push
rcrb
pop
ds
mov
fsts
add
popa
sar
sub
sub
shll
iret
dec
insl
mov
or
js
push
jl
bound
push
inc
loope
cmp
aas
lods
movsb
into
add
jmp
adcb
lret
push
add
lret
jbe
pop
fisubrl
lods
pop
rclb
and
xor
imul
outsb
outsb
loope
xor
mov
cmp
cmp
xchg
lret
cmp
sub
inc
mov
pop
add
push
cmp
faddl
fisubl
and
pusha
jns
cmp
movsb
sbb
dec
sarl
test
les
imul
mov
jg
xor
and
call
sbb
clc
mov
dec
cld
add
pop
pop
jl
lds
mov
jbe
or
int3
mov
xchg
jnp
cli
mov
inc
dec
divb
nop
icebp
jae
fdivrs
mov
push
jmp
nop
adc
jae
jmp
inc
add
ss
idivb
pop
cmp
push
js
push
xor
mov
mov
mov
ljmp
js
mov
cmp
sub
clc
fcompl
inc
arpl
cmc
and
add
or
movsb
sbb
mov
xor
hlt
push
mov
shll
es
stos
adc
and
imul
scas
adc
xor
sub
add
push
adc
lahf
subb
mov
push
push
adc
sbb
outsb
adc
inc
inc
ds
push
and
addr16
add
or
push
xchg
nop
or
cmp
lea
xor
insb
sub
sbb
xchg
mov
scas
insl
out
outsl
fmul
pop
scas
mov
fmuls
daa
add
test
mov
push
adc
cmp
sub
xor
mull
push
push
lret
cmp
cmp
or
aad
pop
inc
add
inc
mov
adc
mov
and
ret
inc
xchg
rclb
pop
mov
jmp
sub
or
xor
cvttsd2si
mov
inc
xchg
add
pop
sbb
je
daa
push
and
fld
add
fildll
negb
fsubrp
test
jns
fstps
ss
adc
shrb
inc
js
xchg
jmp
cmp
scas
sbb
adc
ret
addr16
adc
pop
in
push
or
pop
pop
xchg
int
or
lds
sti
arpl
add
cmpsb
or
imul
mov
les
stc
mov
das
jbe
imul
mov
aad
idiv
sbb
ret
addr16
or
enter
lock
dec
enter
popa
push
jb
in
in
call
enter
int
fistpl
lahf
dec
loopne
mov
call
xchg
pusha
in
cmp
outsl
xchg
dec
movsl
fsubs
neg
push
xor
mov
test
and
push
arpl
rolb
ja
pushf
notb
mov
mov
out
inc
cld
push
push
in
rclb
int3
in
add
in
leave
test
and
orb
inc
lock
or
sub
fimull
add
adc
push
in
mov
xor
mov
in
xor
cmc
inc
or
mov
pusha
arpl
cs
pop
add
dec
pop
jle
fs
fmul
incl
push
inc
stc
sbb
sub
jne
aad
in
sbb
pop
sbbb
call
xchg
jl
adc
es
add
mov
stc
es
add
and
iret
movsl
adc
ret
xor
das
sub
jp
and
bound
aad
xor
or
shlb
cmpsl
mov
add
dec
pop
mov
jb
mov
and
adc
inc
icebp
je
fwait
and
imul
sub
mov
push
repz
nop
ret
es
rcl
xchg
sbb
sub
sub
pop
imul
mov
in
xchg
in
sbb
or
pop
jo
leave
insl
push
or
in
movups
bswap
movsl
fcomps
rol
mov
sub
clc
popa
outsl
fsubrl
mov
cmp
xor
in
jne
rorb
bound
push
scas
push
pop
hlt
add
pop
enter
xchg
jne
ja
jne
xchg
stos
cmpsb
arpl
cld
cmp
sub
or
sbb
jae
mov
nop
imul
push
std
jmp
mov
push
adc
push
dec
daa
xor
adcb
aaa
call
shll
icebp
push
sub
daa
xor
loopne
and
xchg
xchg
imul
shlb
cmp
mov
mov
roll
dec
int3
add
xchg
mov
add
adc
fs
or
adc
cltd
fs
dec
and
fs
dec
xor
xchg
dec
es
cmp
inc
inc
es
fs
fs
insb
insb
add
sub
mov
mov
inc
add
mov
push
cmp
add
add
sbb
adc
in
add
clc
hlt
jae
or
mov
inc
cld
leave
and
inc
clc
sub
lock
jno
xor
add
orl
jecxz
stos
addr16
push
add
sbb
je
in
sub
pushf
addr16
imul
pop
movsl
icebp
mov
lahf
aam
les
sbb
or
test
nop
add
dec
es
fsubrl
cwtl
fs
inc
cwtl
call
enter
aam
mov
or
adc
shlb
or
push
imul
ja
imul
add
sbb
test
mov
mov
push
hlt
js
fidivl
icebp
add
shll
and
push
lds
imul
rol
in
shrl
xor
pop
pop
adc
mov
aaa
pushf
in
or
sbb
imul
in
fcomps
insb
lock
lahf
mov
in
inc
adc
insl
mov
or
aam
insl
call
in
je
or
pusha
call
nop
dec
repnz
mov
nop
fcom
push
push
or
icebp
adc
outsb
out
inc
sbb
sbb
insl
test
pop
jp
jge
outsb
leave
mov
mov
jg
rcrb
shll
inc
fcoml
sahf
xor
xchg
dec
cmp
or
adc
xor
xlat
sub
outsl
sti
subb
insl
mov
mov
pushf
xchg
add
xchg
or
out
out
sub
xor
adc
hlt
adc
add
popa
and
or
pop
push
ret
and
lret
sub
in
fwait
cmp
cmc
fcomp
cmpsl
sub
jns
mov
outsl
call
movsl
push
and
lea
mov
cmp
cmp
mov
mov
cmp
cmp
rcl
jmp
or
aad
bound
jne
jb
dec
lods
mov
outsl
bnd
insl
ret
sbb
add
adc
push
sbb
push
mov
jae
jns
jne
mov
sub
add
enter
das
in
imul
push
xor
mov
pop
fsubrl
push
je
push
mov
test
dec
jo
or
call
repnz
sub
gs
jne
or
test
int3
xor
dec
pop
cmp
cmpsl
sbb
cmp
and
jge
inc
jbe
push
sub
jge
mov
add
mov
movnti
cmp
mov
add
fisttpll
sti
or
mov
enter
fldl
fpatan
mov
sub
add
les
or
aad
mov
fwait
and
dec
fdivr
jo
dec
movsb
xchg
pop
add
mov
dec
cli
inc
fcmovu
jne
pusha
imul
adc
test
mov
fisttps
mov
jl
sub
setne
mov
pusha
inc
add
inc
jo
dec
cmpsb
dec
je
js
and
and
aad
xchg
pop
int3
cmp
add
dec
cmpsb
or
add
push
fcom
mov
pushf
xchg
lea
pop
addr16
lcall
add
and
shlb
jecxz
inc
and
push
das
dec
subl
add
in
stos
xchg
mov
jg
mov
clc
pop
xlat
lods
rorl
push
add
push
dec
in
mov
setge
jmp
and
test
add
add
fistps
add
lcall
jg
push
ret
pop
pushf
pop
mov
call
loopne
mov
mov
insb
mov
lea
decl
xor
adc
lods
xchg
pushf
or
fisubl
movd
adc
je
sbb
and
sbb
adc
sbb
cs
xchg
add
adc
add
rolb
ja
sub
xor
jb
and
or
jb
and
inc
pop
bound
in
loopne
xchg
and
test
xchg
sbb
xorb
xor
inc
and
test
rorb
or
sub
loop
aaa
dec
or
push
popf
clc
or
icebp
xor
add
sub
xor
mov
mov
test
sbb
dec
leave
adc
test
aas
in
dec
lds
and
lret
dec
jg
xlat
mov
jl
or
movsl
mov
or
leave
in
inc
push
nop
push
dec
or
test
jno
enter
xchg
cwtl
add
lods
nop
decb
outsb
insb
xchg
dec
popf
cli
or
jae
pop
dec
pop
mov
pop
lock
rorl
or
call
mov
sbbb
subl
jne
cmpsl
push
sub
fists
dec
push
or
adc
sub
jno
test
loopne
adc
scas
in
xor
inc
mov
sbb
mov
lock
cmp
or
pop
dec
push
sbb
int3
clc
xchg
fildl
lds
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
cwtl
mov
pop
insb
nop
dec
outsl
movsb
mov
das
cmc
nop
data16
test
test
or
inc
adcl
or
rolb
aam
in
fadds
imul
inc
imul
sub
in
je
push
mov
sub
in
movsb
xchg
xchg
nop
adc
xchg
or
inc
jno
subl
mov
pop
enter
mov
pop
and
mov
push
push
imul
mov
call
loop
or
or
and
jne
xchg
adc
add
inc
mov
and
std
inc
adc
lahf
and
inc
xor
shl
lds
and
test
nop
fs
push
in
call
lock
sti
test
fdivrl
push
inc
ds
push
nop
data16
mov
xor
dec
es
fnstsw
mov
push
sub
enter
bound
aas
jb
rorl
lds
outsb
loope
sarb
rcl
lret
adc
pop
aad
fdivrl
adc
enter
nop
sub
fcompl
add
test
shrl
or
mov
outsb
inc
in
scas
mov
inc
xchg
xchg
inc
push
push
fmull
nop
fcomps
xor
xchg
nop
add
xchg
ret
jae
aaa
in
add
sti
movsl
or
dec
jb
test
mov
inc
mov
cmpsl
xchg
test
jo
enter
xor
iret
int3
lahf
mov
enter
and
jg
ret
mov
add
call
jmp
cmp
add
loope
nop
iret
pop
jmp
fsubrs
aas
fdivs
jmp
shlb
sub
add
sbb
sarb
push
fcompl
adc
je
insb
pop
fwait
imul
xchg
mov
cmp
movb
or
in
lahf
push
and
stc
inc
sub
je
adc
or
pusha
leave
lock
fisttpl
xor
pop
arpl
pop
sub
lock
push
dec
or
sti
pop
push
cmp
mov
das
mov
mov
cmp
jo
ret
mov
xchg
into
enter
inc
ja
iret
inc
sbb
pop
jne
or
cwtl
cwtl
jl
mov
sbb
pushf
fsubrp
aaa
test
and
fdivrs
cmp
out
out
inc
int3
enter
and
dec
xchg
testl
mov
adc
pop
mov
cmp
pop
mov
out
loopne
inc
es
jmp
outsl
mov
xchg
and
add
fisubl
xchg
sub
cltd
fs
mov
jl
call
mov
and
sub
cmp
mov
pop
jge
bound
jb
or
cwtl
push
adc
dec
or
xor
mov
and
jne
xor
dec
cmpsb
sbb
loopne
xchg
psubsb
adc
cmpl
fadd
inc
stos
inc
popa
leave
mov
xor
adcb
scas
scas
enter
or
mov
and
xchg
aaa
sub
xchg
mov
movsb
ljmp
jb
cwtl
faddl
dec
pop
test
and
and
sub
loopne
and
adc
mov
and
insl
inc
cltd
xchg
inc
fcompl
xchg
lret
ret
aas
jl
xor
mov
adc
dec
enter
in
orb
cld
je
add
sbb
or
or
or
mov
outsl
leave
mov
aam
inc
enter
rclb
in
lods
daa
ret
sbb
enter
ret
test
push
and
inc
fwait
and
push
add
pop
inc
lods
ud0
dec
enter
sub
lods
popa
xchg
icebp
jns
lcall
pushf
lods
dec
inc
sub
mov
shlb
das
ds
lahf
mov
lock
mov
in
scas
or
addb
outsl
dec
jb
push
dec
or
or
or
inc
mov
popf
imul
int3
popf
in
inc
in
mov
add
fldcw
jl
pusha
and
out
fs
mov
fisubrl
inc
ret
pusha
xor
lahf
out
out
sahf
jg
sbb
inc
or
cmp
xor
imul
mov
pop
pop
pop
mov
lahf
cmpsb
mov
pushf
ret
sbbb
les
pop
enter
insl
ret
mov
mov
cmpsl
inc
mov
imul
mov
test
pop
aaa
push
lds
push
mov
or
and
mov
or
push
pop
add
xor
inc
dec
push
pusha
adc
mov
add
add
and
mov
xor
or
pusha
mov
inc
enter
jae
aam
enter
lds
and
inc
and
mov
cmp
xchg
sub
xchg
add
xor
lods
fnsave
popa
push
sub
stc
pop
int3
add
jg
mov
mov
and
test
push
aam
int3
rolb
subb
insb
and
rorl
int3
arpl
sub
sbb
add
pop
inc
mov
mov
jg
orb
dec
movsl
lock
adc
dec
and
in
bound
fsubs
int3
pop
les
xor
pop
dec
xor
imul
popl
ss
cmpsb
test
mov
je
dec
mov
sub
pop
in
dec
adc
faddl
xor
push
adc
sub
pop
pushf
cmp
add
rclb
rorb
or
movsb
adc
and
nop
and
outsb
movb
cs
in
inc
mov
rorl
repnz
pop
jg
scas
inc
add
xor
xchg
adc
mov
pop
std
enter
push
cs
xchg
inc
in
loopne
loopne
iret
or
test
cwtl
adc
push
test
mov
jl
and
mov
into
adc
sub
mov
cmpsl
pusha
inc
lea
push
jp
int
test
mov
adc
les
add
sub
mov
mov
add
xor
sbb
or
mov
push
stos
sub
stos
add
mov
stc
add
ret
mov
jne
in
test
inc
mov
cmc
fcoms
mov
shrb
cs
outsb
and
xchg
sbb
or
std
sbb
pushf
movsb
outsl
dec
sub
lods
jns
cmp
fisubl
xlat
push
andb
mov
and
dec
cwtl
pusha
fs
xchg
fildl
cmpsb
sbb
nop
inc
out
das
lock
cmp
mov
stos
cmp
les
inc
and
mov
push
and
pop
aaa
shrb
lods
jb
sbb
pop
insb
lods
stos
les
jns
mov
xor
inc
push
cltd
nop
std
add
nop
or
fs
adc
and
xor
fisttps
outsl
es
sysenter
xorl
xlat
int3
or
dec
mov
add
kmovw
add
add
add
in
add
pop
push
sbb
add
ja
push
xchg
negl
orb
arpl
push
xchg
cltd
adc
inc
in
nop
das
aam
andl
push
in
inc
add
pusha
leave
mov
in
and
add
mov
xchg
fsubrs
dec
invd
pop
das
sahf
add
or
cs
sub
or
or
out
or
dec
enter
gs
sbb
mov
add
mov
inc
scas
mov
orb
popa
sub
pop
test
xchg
sub
incl
mov
or
cld
nop
fs
arpl
rol
shrl
xchg
add
adcl
enter
sbb
test
ss
inc
inc
or
or
or
sub
xchg
aaa
sub
sbb
jne
xchg
orb
xor
mov
add
sub
or
fbstp
xchg
in
dec
inc
adc
pop
popf
sbb
mov
add
or
loopne
test
push
xor
loopne
mov
add
dec
mov
shlb
fwait
addl
les
mov
mov
jno
dec
shrl
test
mov
call
mov
bound
mov
gs
shlb
mov
inc
or
in
mov
push
or
push
adc
push
add
jne
adcl
xchg
test
adc
mov
push
aam
mov
pop
adc
sbb
mov
in
int3
test
and
call
loopne
mov
test
add
add
call
inc
cmpsb
clc
fdivp
adc
mov
xor
dec
shlb
js
pop
cmp
mov
xor
push
outsl
fwait
mov
mov
rol
fiaddl
jb
mov
jl
shll
cltd
push
dec
xor
hlt
pop
push
pusha
dec
xor
and
dec
inc
lret
add
jo
mov
mov
dec
clc
inc
fadds
fs
adc
rol
mov
mov
push
mov
loopne
faddl
in
inc
mov
mov
in
andb
subb
xchg
imul
dec
es
mov
inc
xchg
enter
pusha
mov
sbbb
xor
jecxz
mov
inc
cltd
sbb
push
fdivs
xor
jecxz
in
add
xor
dec
adc
sub
mov
repnz
dec
add
mov
sub
mov
jg
inc
cwtl
nop
mov
sbb
es
dec
nop
fists
and
pushf
movsb
js
mov
push
loopne
xor
daa
xchg
imul
nop
ret
add
cs
enter
mov
and
pop
pop
rclb
sbb
and
mov
add
out
pop
test
pop
out
pop
sub
outsl
add
xor
in
cmp
fcoms
aam
add
shl
in
xor
cmc
enter
xchg
fcmovu
adc
rolb
mov
mov
jno
push
xor
aas
push
rcrb
adc
mov
scas
test
les
adc
sbb
aad
movsb
test
rcrl
cs
loopne
dec
dec
lcall
sub
mov
nop
in
movsb
dec
fcoms
test
cmp
nopl
lods
subl
js
sub
imul
xor
adc
mov
fdivrl
add
int3
pop
call
aas
mov
or
les
xor
adc
add
mov
imul
stos
jne
adc
sbb
lahf
adc
mov
shrl
sub
pop
hlt
sbb
das
nop
lock
stos
push
add
in
iret
xor
or
loopne
hlt
dec
in
imul
leave
adc
adc
or
mov
xchg
dec
popa
or
fcomp
cmp
inc
les
mov
testb
aas
add
xchg
sti
xor
mov
insb
adc
xchg
dec
adc
hlt
cli
mov
sti
cld
cli
scas
fs
fs
dec
pop
cmp
cmp
dec
cmp
inc
push
fmuls
sti
adc
rcrb
inc
mov
sti
imul
sti
and
fidivl
adc
leave
mov
pop
and
or
ficompl
mov
sbb
push
sbb
roll
stos
pushf
push
or
push
pop
pop
mov
mov
fs
iret
cmp
push
sarl
aaa
mov
push
shlb
enter
inc
orb
les
push
add
aad
and
iret
das
adcl
adc
jmp
int
sbbb
leave
push
pop
push
movsl
or
push
fcoml
pop
insb
pop
fstpl
or
cmp
inc
and
cmpl
mov
xchg
divb
sub
sub
add
sub
xchg
dec
dec
push
and
cmpb
rcrl
rcr
pop
dec
jg
xor
rclb
add
or
repz
jp
shl
fwait
aad
ret
add
jle
or
movb
jl
in
out
int
adc
mov
sub
push
and
loope
into
or
loop
mov
jne
xor
xor
andl
or
adc
fwait
and
pusha
jl
ret
std
xchg
lret
inc
and
push
inc
lahf
and
mov
push
jp
xchg
testb
sbb
movsb
cmp
faddp
or
hlt
fisttps
aaa
sahf
mov
fists
add
stos
mov
fs
addr16
jo
push
scas
mov
fiaddl
scas
stc
xor
mov
adc
iret
repz
pop
jne
popf
out
add
mov
add
xlat
rcrb
aas
pop
hlt
inc
add
mov
xchg
push
aas
in
loope
push
mov
inc
aas
pusha
das
push
lock
mov
mov
ljmp
add
fistpl
or
jnp
mov
fxam
test
add
and
sarb
cwtl
in
push
nop
mov
cmp
push
rolb
inc
dec
dec
dec
dec
dec
dec
dec
dec
pushl
fidivl
pop
pop
popa
bound
gs
ljmp
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
ljmp
clc
adc
mov
rcll
xchg
adc
push
or
cmp
rclb
sahf
jbe
int
jnp
pop
mov
in
out
push
movsl
fbstp
out
adc
push
jp
lcall
dec
outsb
je
jb
outsl
arpl
fs
out
sti
pusha
fistps
jb
push
dec
imul
push
push
es
gs
xor
cs
insb
push
bound
and
mov
xchg
popa
je
outsl
outsb
js
inc
cli
mov
cmp
aas
rdpmc
add
mov
rcrb
ljmp
mov
inc
outsl
jb
js
je
jb
gs
cmp
or
or
arpl
outsl
add
add
add
add
loopne
cs
je
push
je
mov
popa
jb
push
cmp
fisubl
outsb
dec
xor
sti
mov
cmp
cmp
add
dec
and
jns
add
das
das
adc
push
dec
push
inc
inc
arpl
add
daa
dec
outsl
jbe
clc
mov
testl
jo
sub
addr16
push
jnp
orl
xchg
push
push
stc
inc
jo
imul
bound
pushf
mov
adc
iret
cmp
cmpsl
xchg
popl
fstl
inc
push
jne
xor
lock
lahf
mov
daa
push
mov
fwait
sub
adc
into
cmp
jle
push
jne
xchg
pop
lods
mov
ds
popa
das
jo
or
stos
sbb
inc
pop
nop
push
mov
imul
popa
pop
dec
dec
fucomp
pop
adc
and
loopne
push
pop
and
sub
mov
es
sub
sub
sub
cs
movsl
adc
cmp
ds
inc
das
pop
pop
std
sub
jnp
jge
jg
shrb
inc
test
out
js
in
cs
and
push
pop
or
clc
pusha
pop
notl
dec
xor
inc
insb
jae
mov
les
push
fs
mov
pushf
cs
pop
inc
inc
mov
insb
mov
inc
xor
insl
and
jb
jbe
mov
jbe
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
push
add
inc
outsb
push
jo
imul
push
pop
mov
je,pn
fldt
sub
jo
xchg
idivb
and
dec
fs
mull
and
mov
insb
out
scas
mov
push
insb
sbbb
int3
and
and
daa
push
outsb
addr16
jae
sbb
xor
and
insl
and
xchg
fwait
sbbb
jne
dec
mov
dec
rolb
les
and
mov
sahf
ljmp
or
imul
popa
add
or
fs
gs
bound
add
push
and
push
loopne,pt
sbb
int3
fidivrl
popf
jb
loopne
outsl
mov
sbb
fcmovu
push
daa
sub
dec
addb
das
arpl
cmp
dec
loopne
push
arpl
divb
fsubrs
mov
fiadds
push
sbb
flds
imul
out
int3
or
vmread
push
lcall
sbb
pop
xor
lds
sub
gs
push
xchg
jnp
sbb
cmpsb
cs
out
or
or
xor
shll
mov
adc
pop
dec
add
add
imul
nop
ss
fs
jo
cli
jbe
add
dec
imull
inc
xchg
push
mov
inc
pop
push
gs
push
mov
out
fisttpll
jae
inc
jle
outsl
push
mov
out
push
cmp
cmp
xor
pusha
or
inc
aaa
insl
in
ljmp
imul
add
outsb
popa
pop
or
in
inc
jno
or
std
cmp
push
push
leave
nop
push
roll
inc
insl
imul
inc
fnstsw
adc
sub
es
lea
push
and
add
ja
push
cmp
xchg
mov
addr16
jae
xor
adc
jne
pusha
jo
sub
test
sar
shrb
sub
and
inc
sub
pop
dec
jmp
dec
or
jo
and
cmp
out
inc
imul
inc
inc
and
mov
push
push
dec
cmp
jg
outsb
imul
rorl
jg
push
rol
das
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
adc
je
sub
jae
push
inc
jo
sbb
imul
das
cmp
gs
popa
dec
add
dec
push
clc
enter
popa
js
jae
cmp
addr16
dec
pop
add
adc
sub
dec
jnp
sub
xchg
adc
aaa
mov
push
adc
add
add
add
add
scas
adcb
cmp
pop
or
aaa
ds
push
pop
hlt
pop
mov
in
or
pusha
push
js
or
fcmovnu
cltd
jns
pop
add
sbb
imul
in
std
addb
add
xchg
test
mov
and
adcb
pop
daa
push
cmpb
iret
mov
lret
jb
int3
pcmpgtd
push
jo
add
inc
xor
scas
mov
push
sbb
js
jo
dec
sahf
pop
sbb
sahf
dec
lea
mov
mov
xchg
xchg
pop
lock
dec
xchg
jo
es
push
loop
push
adc
xchg
push
inc
or
ds
cmp
mov
test
dec
adc
test
dec
cmp
pop
adc
loope
je
cmp
fists
int
fidivrs
mov
xlat
jb
push
aaa
pop
and
push
leave
and
sub
dec
jb
pop
leave
add
test
add
nop
dec
cs
mov
ja
add
xchg
add
add
mov
sub
add
fcoms
and
add
ja
push
mov
mov
imul
mov
mov
pop
rcl
inc
pop
inc
out
and
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
movsb
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivrp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incb
movsb
inc
andl
push
xor
je
sarl
or
lods
sbb
pop
outsl
ja
jns
movsb
inc
cs
jae
jb
bound
jmp
stos
inc
ss
popa
jbe
movsb
sbb
mov
pop
mulb
pop
lea
dec
mov
outsl
js
mov
mov
push
mov
inc
cltd
sbb
mov
dec
mov
mov
in
dec
imul
pop
jns
inc
mov
imul
mov
jb
jns
daa
or
sub
nop
xchg
notb
mov
lods
sbb
lcall
push
or
cmp
outsb
pushw
xchg
or
mov
jbe
inc
add
pop
pusha
inc
mov
push
push
push
lahf
dec
add
dec
fs
and
push
dec
clc
pop
shlb
adcb
loopne
push
sbb
xor
lods
dec
lahf
jecxz
push
dec
lock
xchg
pop
pop
push
push
jae
cmp
mov
aas
cmp
call
movsl
jae
addr16
subl
jp
mov
mov
xchg
sbb
add
xchg
inc
pusha
mov
push
push
push
push
dec
testl
dec
movntq
mov
sub
push
fildll
dec
jge
sahf
push
sub
jae
push
inc
sbb
jo
or
sub
jg
je
stos
outsl
jae
inc
subl
dec
xor
mov
jg
sub
pop
fsubl
or
in
push
mov
das
je
outsl
xchg
jne
pop
daa
xchg
mov
popw
pop
cmp
push
jl
cmp
cmp
push
cmp
push
sub
es
data16
jle
sub
sub
addr16
cmp
cmp
sub
iret
jmp
xor
jmp
cmp
xchg
add
dec
inc
mov
cmpsl
jbe
pop
pop
cwtl
jb
sbb
fstpt
shl
push
jb
imul
push
or
shrb
add
sbb
and
cltd
jnp
lods
es
jo
sub
or
jl
lahf
sub
cmp
repz
loope
add
clc
loopne
loopne
sti
cmp
repz
lcall
adc
fildl
in
test
int
jge
loopne
shl
push
xchg
nop
loopne
cmp
repz
test
cmpsl
stc
pusha
jmp
push
add
and
adc
fs
lock
sarl
or
pop
pop
neg
jnp
push
push
fdivrs
rolb
dec
push
dec
push
sahf
out
sahf
inc
inc
cmp
xor
jns
out
sub
and
adc
xor
out
add
ror
repz
mov
sbb
cmp
ds
fiadds
mov
cmp
push
inc
inc
cmp
add
out
ds
loopne
movsb
jl
out
jl
sub
in
clc
cmp
rol
pushf
jo
sub
cmpsl
and
or
mov
mov
dec
jns
push
test
xor
data16
add
mov
pop
push
in
mov
bound
fs
sbb
repz
jb
xor
xchg
jp
shrd
sub
sub
rolb
add
jle
push
insb
cmp
inc
inc
dec
jae
mov
adc
mov
mov
push
inc
dec
xor
inc
incl
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
lcall
das
adc
sub
adc
xchg
inc
xchg
popa
into
mov
mov
scas
xor
jnp
inc
loop
mov
ds
pop
addr16
aas
fcoms
inc
pop
clc
lret
sbb
jb
xchg
jge
inc
lcall
arpl
cmp
adc
dec
scas
jp
adc
incb
mov
mov
and
cmp
dec
imul
pop
jns
iret
lret
add
inc
mov
mov
add
dec
mov
pop
sahf
fwait
ss
sbb
pop
jns
dec
sti
jnp
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
pushl
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jg
jmp
insl
xor
sahf
icebp
mov
cld
or
cmp
jle
inc
mov
decl
out
fcoml
cmpsl
xor
ds
dec
je
lods
aas
cld
sub
push
xor
sbbb
or
test
repnz
hlt
shl
and
es
mov
jle
add
mov
add
pop
f2xm1
scas
pop
xchg
sub
mov
out
leave
ljmp
mov
dec
test
push
push
inc
inc
or
outsb
jbe
test
add
inc
es
adc
mov
popf
mov
cs
push
gs
es
sbb
sbb
jg
out
dec
push
sub
mov
xor
dec
pop
mov
inc
cmp
adc
sub
inc
inc
dec
sbb
pop
pop
adc
pop
push
cmp
inc
mov
mov
push
sbb
push
adc
mov
das
sbb
dec
adc
std
fidivl
dec
jb
jbe
push
dec
ss
pop
pop
pop
push
ja
aaa
sti
xchg
add
sbb
aas
sbb
pop
or
push
popf
sti
std
cmp
sbb
or
aas
adc
sbb
das
dec
push
push
daa
add
and
lods
push
push
dec
ret
adc
sub
push
dec
sub
dec
cld
push
sbb
inc
pop
sub
dec
dec
div
add
sub
sub
pop
pop
or
dec
and
adc
inc
jnp
and
and
dec
dec
and
mov
and
xor
or
ds
pop
adc
or
dec
dec
xor
ds
adc
dec
ds
jge
inc
rolb
ja
xchg
push
add
mov
pop
jnp
push
pop
aad
pop
das
push
or
sbb
xor
sbb
es
test
mov
sbb
sub
std
xchg
or
pop
add
cmp
push
pop
sbb
ds
adc
sbb
inc
sbb
adc
mov
fisubrl
sbb
push
rol
or
sub
fadds
pop
mov
dec
sub
inc
adc
push
mov
push
or
das
and
mov
adc
js
ljmp
jle
rolb
xchg
shl
mov
mov
jb
cli
ja
pop
push
push
pop
push
gs
cld
cmp
xchg
and
cmp
pop
or
pop
pop
or
inc
bnd
pop
push
sub
pop
and
in
sbbl
xorps
aas
jo
pop
push
pop
pop
and
or
adc
insl
mov
shld
and
lock
call
fs
adc
dec
cwtl
in
push
cmp
xor
dec
repz
push
mov
out
lcall
adc
int
and
xor
outsl
jg
out
cmpsl
push
pusha
pop
push
mov
lahf
jnp
scas
push
push
xor
and
mov
divl
push
scas
pop
pop
hlt
adc
mov
push
pop
or
or
int3
jp
cmp
outsl
insl
mov
pop
xor
mov
xor
jmp
popa
inc
mov
add
imul
jle
xor
cvttps2pi
in
loopne
push
jbe
push
and
dec
idivl
nop
mov
fimuls
into
repz
xorb
mov
andb
push
push
jnp
idivl
and
ds
lods
push
pop
adc
pushf
fwait
push
pop
sub
cmp
inc
sbb
push
pusha
push
sbb
xor
pop
add
xlat
or
pop
aam
dec
cmp
push
adc
sub
js
inc
jbe
mov
and
dec
prefetch
dec
or
pop
iret
stos
mov
nop
pop
or
jmp
or
jmp
push
add
dec
push
or
lcall
jmp
icebp
jecxz
arpl
sub
jb
popf
pusha
jbe
push
pop
pop
push
push
insb
push
push
loopne
sub
and
sub
cwtl
or
lods
sub
inc
mov
jnp
pusha
sub
push
inc
push
movhps
pop
push
xchg
adc
pop
or
pop
sub
mov
mov
js
pop
xor
cmp
sub
enter
ja
sub
xor
cmp
xor
or
pop
pop
sqrtps
unpcklps
fadds
scas
jge
shlb
fs
cmp
mov
scas
dec
dec
pop
add
sub
pop
test
sbb
and
sub
xchg
scas
out
jl
push
mov
sbb
cmp
pop
es
sub
and
pop
es
gs
jae
inc
add
push
cmp
sbb
daa
es
call
and
pop
mov
iret
adc
push
cltd
cmp
fidivrs
or
sub
or
test
cmp
and
popf
jbe
xchg
stos
pop
bndstx
shll
jnp
adc
sbb
push
jle
popf
inc
sti
rorb
add
xchg
outsl
pop
pop
pop
loope
inc
xor
dec
mov
cmpsl
loop
in
or
sub
shll
or
and
test
pop
push
xchg
pop
pop
inc
pop
inc
or
or
roll
xor
push
cmp
xor
inc
adc
addr16
mov
cmp
imul
pop
scas
and
out
sbb
cltd
jmp
xchg
ret
into
scas
daa
int
xor
in
dec
mov
push
rorl
mov
popa
push
xor
jmp
xor
cmp
push
movsb
mov
mov
lcall
inc
pop
shrl
cmp
pop
lahf
imul
andl
push
in
xor
sbb
cld
clts
cmp
adc
movsb
dec
aas
dec
ja
insb
pop
push
xor
jne
es
xchg
dec
push
cmp
dec
add
pushf
xchg
add
xor
popf
lret
mov
add
fbld
daa
cmp
cs
lcall
cmpsb
jl
rclb
dec
sbb
mov
jo
fisttpll
in
cmp
dec
xchg
fildl
inc
fiaddl
pop
lcall
cmp
pop
push
add
lar
xor
loopne
add
jge
or
xor
jnp
inc
in
mov
pop
jmp
inc
mov
lods
xor
add
imul
or
std
pop
add
dec
pop
push
pop
pop
push
pop
adc
fndisi(8087
sbb
fwait
aaa
add
push
das
push
mov
pop
pop
pop
call
sbb
mulb
jl
adc
lock
out
mov
push
std
pop
or
jns
popa
jne
push
or
ja
and
mov
test
push
das
add
xor
aaa
jp
mov
adc
push
rcr
cmp
pop
pop
daa
push
dec
and
pop
bt
adc
inc
xorl
clc
add
inc
es
and
es
es
scas
dec
orl
dec
cmp
add
add
push
daa
arpl
fistl
les
mov
fcoms
mov
popa
fidivl
sbb
pop
jae
add
sub
push
sbb
pop
addb
das
out
mov
roll
mov
decl
mov
pop
bound
pusha
out
pop
pop
pop
push
push
je
and
imul
daa
jae
popa
mov
movsl
arpl
je
aas
mov
mov
cs
and
psubq
and
add
push
add
addr16
jae
push
movsl
inc
pop
push
bound
ret
imul
aas
in
jecxz
fsubp
push
rolb
push
ret
jo
call
xor
add
lock
fadds
mov
mov
mov
pop
imul
inc
pop
dec
and
and
adc
lcall
inc
and
das
loopne
icebp
mov
push
adc
add
pop
aas
sub
popf
adc
push
push
dec
or
fildl
mov
ret
add
das
pop
sub
adc
sbb
jle
inc
ficomps
adc
push
inc
xor
xlat
pop
sub
lcall
push
adc
ret
in
in
or
cmova
and
ret
sub
jno
shll
ds
sbb
ret
inc
jo
pop
inc
xchg
outsb
dec
subl
imul
daa
iret
sbb
das
sbb
xor
and
inc
fsubrl
xor
sub
sbb
cmp
ficoml
dec
xorb
cmp
mov
es
inc
ds
cs
callw
add
add
jo
pop
adcb
push
sbb
pop
sbb
pop
push
dec
pop
rclb
pop
adc
sub
dec
sbb
adc
add
jl
xchg
int3
cmp
cmp
cmp
loope
out
fbstp
icebp
fsubp
imul
cs
repz
movsl
mov
inc
cli
push
xor
daa
mov
add
lods
mov
and
lret
das
adc
ljmp
in
push
jo
mov
subb
add
add
sub
aas
enter
outsb
pop
xchg
mov
add
sbb
push
cmp
sbb
sub
mov
out
pusha
cmpsb
add
loopne
test
and
ljmp
or
ret
js
jnp
mov
sub
jg
sbb
cmp
in
notl
js
inc
outsl
repnz
add
ja
mov
mov
cltd
repz
vmread
adc
sbb
mov
sbb
sbb
js
popa
fisubs
pop
xor
mov
mov
and
push
pop
out
sub
xor
sbb
mov
movq
jnp
aam
jmp
jnp
adc
dec
int3
xchg
and
in
lea
cs
dec
sub
cs
inc
pop
sbb
daa
sahf
xor
testb
fsts
adc
ret
pop
aaa
les
popa
iret
xor
dec
adc
mov
cli
mov
das
fstps
and
subl
cmp
mov
dec
jno
adc
scas
pushf
pop
mov
dec
dec
dec
notb
test
push
cmp
popf
orps
pop
pop
sub
push
repnz
sbb
data16
push
mov
xchg
lahf
test
xor
in
xchg
ud0
out
cmc
es
sbb
dec
cmp
dec
add
dec
pop
dec
xor
inc
add
adc
pop
and
ds
mov
es
xor
pop
rcr
ds
dec
and
sbb
cmp
pop
xor
mov
sub
push
push
fmuls
stos
jne
adc
cmp
xchg
push
and
out
mov
adc
fcompl
fisttps
push
jns
pop
fdivrs
cmp
testb
and
dec
mov
adc
adc
int3
inc
movsb
lret
inc
inc
xorl
fists
out
push
aad
jae
push
imul
in
fidivs
mov
mov
sbb
andl
pop
sbb
imul
dec
addl
add
jmp
ds
nopl
in
jge
and
outsl
fldt
sbb
jp
sbb
mov
sub
inc
je
xchg
movsl
movsl
push
xor
and
sbb
jmp
adc
xchg
adc
insl
xchg
ss
jo
sbb
cmp
lods
fwait
cmp
and
loopne
aad
push
push
testb
add
and
sub
add
out
mov
push
adc
push
pop
and
adc
adc
xor
sbb
xor
xchg
cwtl
pop
enter
leave
push
test
adc
es
pop
cmp
pop
dec
lods
or
inc
leave
dec
test
cli
sbb
lahf
loop
cmp
and
cmp
cmp
or
pop
jmp
sbb
adc
and
filds
pushf
and
adc
sbb
cmpsb
xor
sbb
pop
inc
push
cmp
sub
xchg
mov
popf
dec
insl
sbb
imul
dec
pop
jmp
in
aaa
cmp
mov
ds
inc
pop
sub
movsl
ret
pop
xor
and
sbb
rorb
mov
mov
daa
or
in
les
sub
pop
add
mov
and
sbb
prefetcht0
lcall
rcr
lods
xchg
dec
adc
pop
xor
inc
icebp
int
xor
push
pop
aas
and
pop
sub
and
mov
cwtl
sahf
sub
sbb
insb
or
sbb
dec
mull
fadds
icebp
pop
mov
pop
aaa
mov
pop
xchg
add
pop
add
ret
popa
lcall
loope
pop
sub
insb
gs
outsl
mov
fs
push
orl
popa
push
jle
mov
outsl
inc
add
inc
sbb
xor
mov
and
adc
inc
sbb
rclb
mov
inc
jb
push
jge
sbb
imul
push
adc
shrb
jge
lret
lret
push
xor
lock
int
cmp
and
inc
fneni(8087
fdiv
into
jnp
jo
fisubs
loopne
pusha
mov
jl
andb
icebp
push
push
out
push
jecxz
shlb
or
add
pinsrw
push
dec
dec
insl
or
aaa
shlb
mov
mov
ljmp
outsl
fistps
push
and
mov
add
adc
mov
mov
lods
pop
dec
movsl
lods
mov
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
loop
sub
sub
nop
mov
xchg
mov
mov
ds
pop
sbb
lods
sub
jle
jo
push
idivb
dec
fsubs
sbb
stc
mov
dec
xchg
pop
shl
dec
push
inc
jbe,pn
adc
adc
aaa
jmp
xor
aaa
aaa
xor
dec
cmp
nop
pop
and
dec
mov
pop
test
inc
pop
push
or
inc
jb
mov
push
dec
imul
addr16
mov
cmp
pop
js
push
in
dec
test
jns
sahf
cmp
sub
int
out
cmp
inc
clc
add
and
enter
cmp
mov
insb
inc
js
pop
int
mov
loopne
pop
add
test
loope
inc
dec
pop
int3
repnz
frstor
sbb
ljmp
leave
jnp
cmp
xor
sub
sub
inc
sbb
sub
xor
inc
push
xor
dec
adc
mov
cmp
insb
push
outsb
add
jno
mov
push
sub
pop
mov
das
js
mulb
and
pop
shrb
or
dec
jp
pushf
ljmp
jo
mov
dec
jne
cmp
popa
outsb
mov
and
push
add
fisttpl
rcll
iret
sub
sub
mov
in
add
adc
sbb
outsl
test
push
insl
aaa
das
mov
icebp
mov
sub
pop
and
out
out
cmpsl
inc
pusha
mov
sbb
or
jo
or
iret
mov
pop
or
cwtl
inc
xchg
dec
movsb
das
test
xchg
jg
mov
aas
pop
and
sysret
xchg
addb
or
rolb
mov
pmaxub
sahf
sbb
pop
les
inc
adc
push
adc
add
jg
cmovg
add
aaa
mov
xchg
mov
inc
test
mov
movl
das
push
jne
push
adc
sbb
mov
dec
mov
lods
add
imul
outsb
lahf
outsb
inc
cmp
pop
inc
je
dec
sti
out
jns
push
outsb
pop
sbb
sub
idivb
inc
inc
outsl
pusha
inc
mov
outsb
pop
cmpsl
jno
into
ds
lea
push
mov
sbb
push
push
jo
repnz
iret
fwait
dec
xchg
out
pop
mov
fldt
push
inc
ds
popa
xor
inc
insb
push
insb
lahf
in
inc
es
sahf
pop
mov
mov
pop
fs
jne
in
cmp
rorl
push
and
fidivrl
das
pop
das
jl
scas
in
out
xchg
mov
or
push
iret
jnp
or
dec
lret
nop
push
mov
mov
push
ss
mov
mov
fs
inc
adc
bound
push
loope
cs
mov
mov
push
mov
out
lcall
push
jns
sahf
test
pop
insl
push
lea
dec
sub
mov
je
idivb
sub
xchg
push
cwtl
repz
out
leave
push
pop
pop
push
sub
ds
leave
dec
push
fiadds
pop
arpl
repz
push
jne
xchg
pop
jbe
das
out
push
cmp
pop
push
mov
push
pusha
testb
xchg
js
in
xchg
xor
dec
push
sub
out
jns
lea
mov
jl
scas
ss
and
test
pop
fistpll
imul
es
push
nopl
sahf
out
adc
dec
sti
pop
pushf
pop
mov
xor
dec
repz
adc
and
sahf
out
pop
jae
mov
jns
dec
repz
push
add
je
mov
and
call
xor
cmpsl
stc
push
pop
push
push
inc
and
jns
jge
iret
mull
and
sarl
test
inc
out
ds
push
fmul
repz
call
push
jb
iret
repz
mov
imulb
jle
decl
addr16
jg
dec
sbb
scas
dec
test
sub
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
lahf
add
idivb
in
shl
mov
and
pop
sbb
pop
enter
cmp
adc
or
adc
jg
or
add
or
nop
add
push
dec
addr16
aam
dec
cli
mov
enter
fisubrl
ss
sub
incl
lods
test
aas
inc
push
dec
fnstsw
mov
aaa
daa
inc
sbb
sbb
ja
aaa
push
mov
out
nop
mov
aas
jae
fisubl
sahf
jecxz
xlat
push
xor
mov
fdivrp
inc
jae
dec
cmp
dec
popf
jbe
pop
je,pn
push
ljmp
cmpsb
dec
add
lods
xor
aam
inc
fwait
insb
pop
push
aam
pop
push
dec
pop
je
in
ffree
mov
aaa
push
fisttps
jp
das
add
sbb
repnz
gs
sarl
outsb
push
inc
imul
xchg
ret
dec
test
or
mov
ja
mov
dec
addr16
push
in
adc
ja
cmp
dec
cmp
or
ds
xor
das
adc
loopne
test
popa
insl
jo
out
daa
out
jbe
insb
je
push
addr16
jo
jae
es
mov
jno
outsl
and
fcmovu
fldenv
sub
push
cmpsb
mov
iret
lods
push
or
cmp
xor
xor
data16
xor
cmp
cmp
push
xor
xor
cmp
push
insb
inc
sar
add
sbb
dec
add
aaa
aas
pop
jbe
jae
cmp
sub
add
or
add
sbb
loopne
out
add
scas
cmp
pushf
test
mov
inc
add
cmp
cmp
push
cmp
popa
daa
lcall
daa
jp
inc
test
dec
adc
add
jecxz
lods
ja
test
inc
dec
cmp
pop
in
data16
inc
push
cmp
data16
cmpsb
cmp
aaa
stc
cmp
sbb
lret
or
and
push
cmp
and
pop
test
das
das
push
dec
sbb
das
cmp
xor
push
bound
pop
movsl
data16
cli
mov
test
xchg
push
daa
inc
sbb
add
mov
loopne
je
out
inc
sbbl
mov
sub
or
pop
jbe
inc
jae
xchg
mov
xor
sbb
icebp
icebp
or
cs
dec
div
push
repz
pop
jo
inc
subl
push
xor
das
insb
or
sbb
xor
pop
push
push
push
push
mov
xor
dec
daa
and
xchg
and
inc
imul
aaa
dec
call
pop
pop
dec
pop
fsubrs
loop
stos
daa
pop
push
inc
sub
lods
les
xor
push
mov
lahf
xor
shrb
pusha
mov
and
mov
xorb
das
stos
xchg
test
daa
or
jge
aad
mov
lods
ss
iret
loope
jl
add
cmpsl
adc
pop
ret
bound
dec
insl
daa
insl
push
insb
mov
add
xchg
and
das
dec
pop
cmpsl
sbb
cmp
mov
xor
pop
sub
adcl
fldcw
loope
or
out
adc
mov
insl
add
fimuls
fidivs
sbb
lods
mov
pop
int
push
and
adc
pop
add
lock
insb
les
jecxz
movsl
push
dec
add
fiadds
mov
pop
and
adc
mov
shll
aaa
cmp
xchg
lret
mov
dec
push
cmp
mov
inc
inc
pop
pop
adc
inc
and
xor
inc
jmp
adc
add
pop
xchg
les
loopne
iret
or
pop
xchg
mov
jo
or
push
cmpb
dec
js
xchg
xchg
leave
mov
outsb
mov
pop
xor
aad
dec
ss
add
js
inc
shlb
sbb
lea
pop
scas
dec
das
sub
loop
in
loop
mov
into
push
mov
scas
mov
sub
or
dec
adcb
ds
adc
bswap
mov
push
inc
add
loope
pop
push
fcompl
dec
es
iret
lea
adc
jp
es
js
fs
addr16
mov
fs
data16
loope
adc
sbb
or
dec
jns
mov
in
or
push
bound
inc
cmp
xor
xor
dec
psllq
push
sub
lcall
mov
pop
orl
pop
outsl
dec
sub
sub
dec
aaa
adc
xchg
or
mov
icebp
adc
push
pop
scas
dec
sub
and
and
cmp
pop
lock
and
jno
pop
dec
lock
mov
add
add
es
fwait
les
les
sub
add
fidivrl
jno
pusha
mov
test
adc
push
fs
cmp
cmp
insb
js
adc
inc
data16
sbb
sarb
xchg
cmp
push
cmp
pop
xchg
adc
xchg
shr
into
pop
mov
pop
fdivr
sbb
cmp
cmp
pop
adc
daa
test
xor
jo
mov
sub
sbb
cmpsb
mov
or
cmp
pusha
unpckhps
push
pushf
das
adc
ja
cld
int3
in
rorl
enter
dec
popl
lcall
fisubl
push
cmp
cmp
xor
add
dec
xorb
add
cmp
pushf
xchg
mov
hlt
test
cmp
sbb
push
jnp
comiss
mov
psraw
out
mov
pop
inc
dec
clc
or
and
sub
sbb
pop
aas
xor
inc
out
shll
faddl
popa
lea
das
push
adc
xor
dec
rorl
divl
xchg
repnz
xchg
sub
add
dec
and
lods
mov
sbb
daa
mov
push
addb
sarb
jae
mov
and
jbe
roll
je
and
cld
dec
mov
cmp
dec
and
lahf
aam
cltd
jb
jo
mov
push
fcompl
outsb
xor
cs
add
clc
add
xor
sub
or
aam
mull
sub
adc
push
in
or
add
or
sbb
push
mov
and
pop
inc
and
adc
sbb
pop
jo
sbb
incl
and
xor
pop
push
dec
sub
and
push
pop
push
loope,pt
pushl
pop
and
xor
or
pop
and
cmp
sbb
inc
sbb
xor
mov
sub
add
sbb
aam
sub
adc
lfs
daa
fucomi
or
call
inc
pop
xor
pop
inc
and
dec
mov
push
add
adc
fbld
mov
sbb
pop
push
inc
and
push
das
push
sub
sbb
incl
add
dec
dec
pop
adc
push
add
cmp
dec
add
xor
adc
and
push
sub
dec
and
cld
inc
push
pop
and
idivl
add
jb
xlat
js
cmp
mov
push
cmpsl
xchg
add
repnz
adc
xchg
pusha
push
push
adc
add
sub
pop
dec
sub
in
xchg
or
sbb
add
sbb
xor
inc
dec
push
push
pusha
sub
add
jnp
andb
out
sub
xor
ret
inc
push
adc
dec
lret
pop
aaa
adc
push
dec
fstl
push
les
nop
inc
xchg
movsl
jg
mov
or
mov
and
les
cwtl
pop
bound
add
rol
xor
nop
push
aad
inc
and
inc
mov
or
jns
ss
xor
std
filds
push
push
inc
push
dec
inc
dec
push
dec
pop
add
mov
out
arpl
adc
inc
sub
mov
inc
aaa
jno
dec
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
call
test
and
jge
push
je
mov
andb
jmp
icebp
fwait
rol
fwait
in
inc
mov
ud0
ljmp
cmp
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
pushl
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
decl
or
or
or
cs
ret
sub
xchg
mov
data16
inc
mov
call
cltd
test
push
push
shll
ja
cli
decl
daa
mov
mov
mov
sbb
stos
fmuls
lret
rep
cs
out
cmpsb
arpl
test
add
mov
mov
movsb
mull
jno
addr16
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
cmp
push
std
call
inc
jne,pn
popa
inc
and
and
sub
add
ds
xor
ljmp
push
dec
push
inc
push
xor
sub
push
and
cmp
dec
cmp
inc
xor
pop
or
ljmp
sub
outsl
inc
js
cmp
xor
push
xor
and
imul
jns
sub
fs
dec
ljmp
fnsave
or
inc
and
and
sub
or
aaa
mov
mov
push
pop
pop
push
sub
xchg
outsl
les
or
and
aam
popf
dec
inc
sahf
jmp
mov
pop
inc
daa
pop
ret
ljmp
push
pop
sub
mov
add
aaa
adc
xor
pop
and
jle
xor
xor
push
inc
add
sahf
xchg
cmpsb
pop
xor
xor
xor
jle
xor
xor
and
aaa
inc
lcall
inc
ss
pop
pop
pop
decb
inc
add
pop
lahf
ss
push
cs
and
je
and
loope
cmp
xlat
cmpsl
and
lods
inc
push
bound
pusha
xor
add
jo
dec
inc
mov
adc
push
stc
sbb
cwtl
jmp
add
pop
push
mov
aad
lea
lock
pop
jae
mov
ret
mov
cmpsb
outsb
push
pop
into
lea
mov
incl
add
sbb
divb
dec
dec
insb
mov
xchg
mov
movsb
pop
sub
addl
pop
pop
adc
push
loopne
xor
xorl
xor
jb
outsl
shrb
mov
cmpsl
lahf
mov
aam
push
cmp
or
push
adc
sbb
insb
and
faddl
call
push
mov
sbb
lods
loop
clc
inc
data16
mov
mov
gs
pop
sbb
outsl
and
add
sbb
pop
sub
sbb
push
scas
out
fsubrs
cmp
cmp
rcll
adcb
es
subb
adc
mov
add
inc
arpl
add
cmp
jno
push
xchg
sub
dec
in
push
mov
lock
inc
cmp
jnp
std
sbb
dec
add
add
in
icebp
test
adc
out
add
insb
dec
daa
adc
add
pop
lods
mov
adc
add
push
xchg
adc
dec
aad
push
test
mov
test
cmp
inc
lods
jg
outsb
je
xor
mov
pop
js
xor
imul
cmp
xor
pushf
xor
mov
jae
sbb
dec
and
lahf
idiv
xor
scas
mov
insl
loop
adc
dec
push
jecxz
push
dec
or
insb
add
pop
push
popa
je
arpl
insl
pop
pop
dec
inc
jne
fxch
je
xor
and
adc
add
add
push
push
gs
repnz
pop
or
das
or
imul
xchg
test
or
ret
je
adc
dec
mov
or
add
ffree
test
cs
xchg
cltd
mov
cmpsb
inc
mov
jge
and
sub
dec
and
das
lods
sarl
sbb
movsb
stos
mov
jmp
mov
dec
mov
lods
sub
sbb
lret
adc
and
out
adc
push
and
xchg
cld
sub
adc
aaa
or
push
subl
jl
cmpsb
dec
popa
dec
inc
pop
mov
into
ja
jb
pop
cmpb
jmp
lds
inc
jne
mov
jb
ss
decb
xor
cmp
sbb
aas
mov
ss
cmp
test
or
fiaddl
pop
sub
fidivrs
pop
adc
xor
jbe
or
out
call
pop
mov
aaa
daa
mov
js
add
sbb
push
aas
fs
jo
testl
add
loope
outsl
imul
cs
scas
hlt
fsubs
dec
rcrb
lods
testb
mov
aas
fmull
or
add
scas
inc
sub
dec
dec
xor
xor
shlb
popw
push
or
lea
pop
sub
push
adc
sbb
je
outsb
cmp
inc
mov
adc
inc
jae
pop
or
mov
lea
iret
movsl
push
dec
hlt
test
pop
sahf
subps
sbb
imul
push
and
cmpsl
sbb
ja
aaa
add
int3
add
outsb
insl
adc
lock
lds
je
addr16
push
xor
xor
mov
pop
cmovg
add
pop
adc
test
imul
pop
aaa
mov
lcall
pop
movsb
dec
call
lods
insb
in
sbb
pop
pop
pop
test
xor
imul
dec
pop
fwait
and
movsl
imul
push
pop
xrelease
push
cltd
movsl
xor
arpl
rorl
mov
inc
jne
and
aas
std
scas
push
add
xor
cmpsl
or
mov
dec
pop
add
mov
inc
sub
inc
dec
dec
cld
jbe
add
sub
inc
dec
rorb
in
mov
add
inc
and
inc
add
or
add
sahf
adc
cmp
xchg
mov
jge
jg
xchg
fstl
aaa
jns
jne
or
xchg
add
adc
mov
std
movsl
and
addr16
popa
pop
push
pop
pop
xor
outsl
and
mov
inc
outsl
push
punpckhwd
bound
ss
outsb
push
je
scas
pop
loopne
test
jg
sub
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
jns,pn
dec
sub
jb
gs
xchg
insl
xchg
daa
inc
adc
pop
or
fwait
pop
daa
dec
or
add
push
dec
jb
loop
pusha
and
jp
nopl
loop
push
ljmp
cmp
loope
mov
shlb
adc
lds
xorl
adc
ret
jb
push
adc
jle
sub
inc
lret
inc
or
add
popa
cltd
loop
in
sbb
push
mov
aas
jae
pop
addr16
out
sbb
push
iret
cmp
mov
push
mov
outsl
dec
ljmp
push
dec
lcall
mov
xchg
nop
ja
push
mov
add
js
mov
add
push
inc
mov
repnz
adc
cmp
or
add
inc
dec
add
xchg
push
out
inc
add
out
push
lret
sbb
push
dec
insb
xor
in
add
push
inc
pop
sbbb
jne
and
cmpsb
adc
dec
lahf
pusha
pop
pop
pop
mov
ret
and
shll
inc
loope
xor
jns
loopne,pn
daa
jge
dec
mov
popa
cmc
out
adc
adc
and
sbb
mov
mov
sbb
lcall
arpl
daa
mov
adc
mov
push
pop
insb
adc
pop
add
insl
xor
ja
push
dec
imul
lahf
daa
push
xorl
lds
push
pop
push
sub
mov
push
in
jne
je
sub
mov
aaa
push
sbb
jns
xor
jl
out
mov
fnstcw
cltd
or
xchg
int
mov
add
pop
or
add
das
adc
sbb
and
sub
data16
inc
iret
xor
inc
mov
mov
fnstsw
mov
mov
popa
xchg
sbb
add
test
sub
add
or
int
mov
pop
adc
pop
add
fldcw
pop
adc
push
push
insb
ss
int
lret
str
add
pop
mov
and
das
incl
and
push
push
das
xor
xor
dec
inc
sbb
mov
add
sbb
fisubrs
scas
add
bound
mov
inc
mov
dec
outsl
insl
pop
xor
dec
add
fidivs
das
push
cltd
sar
mov
push
inc
dec
dec
dec
inc
mov
add
icebp
sbb
cmovno
push
fs
xor
pusha
test
lods
cmp
subb
mov
dec
and
popf
mov
notl
adc
xchg
fmuls
cltd
fiaddl
daa
in
dec
add
xadd
sbb
fstps
cmc
inc
jg
inc
xchg
inc
cmovo
or
fdivp
adc
cmpb
aas
mov
inc
sub
outsl
pop
pop
inc
dec
add
pop
roll
add
xor
inc
outsb
mov
add
fwait
aas
add
test
mov
push
addr16
movsb
aam
iret
enter
in
lock
or
movsb
add
outsb
and
xor
aaa
cmp
pusha
in
jg
daa
test
push
adc
test
push
outsl
pop
mov
inc
jo
out
pop
int3
aas
repz
fsubrs
jg
dec
outsl
mov
pop
ss
dec
inc
xchg
sub
mov
sub
sub
divb
lea
mov
pop
clc
aas
push
iret
repz
js
push
test
mov
enter
mov
ss
inc
pushf
ds
out
andb
sbb
sahf
cmpsl
stc
cld
cmp
les
mov
cmp
ds
jge
out
test
cmp
cmp
push
lods
cmp
repz
mov
cwtl
jl
xchg
xor
clc
inc
cmp
or
in
aaa
add
icebp
mov
out
dec
adc
dec
cs
out
pop
adc
add
fmuls
sahf
out
xor
push
cmp
add
sub
add
popa
fdivs
mov
loopne
je
idivl
cmp
mov
add
and
and
jg
or
push
mov
add
sbb
jns
xchg
mov
outsl
aam
inc
pop
xor
dec
lock
filds
das
adc
sbb
dec
ret
push
xor
add
inc
or
jns
or
inc
mov
mov
outsl
xchg
pop
jb
fbstp
cmpsl
mov
cmp
cmp
dec
aaa
push
mov
dec
or
xor
rcll
scas
add
sbb
push
leave
push
lock
cld
xor
or
fildll
cwtl
out
lods
cmpsl
aaa
les
pop
rcll
aam
in
scas
or
pushl
out
jb
and
xor
jae
inc
cmp
cmp
ficoml
xor
cmp
sub
inc
scas
mov
inc
in
popf
fiaddl
xchg
mov
add
sub
outsl
loop
xor
movl
shl
xor
add
push
scas
xchg
mov
dec
xchg
add
or
push
enter
sub
mov
enter
sub
leave
mov
outsl
cmp
dec
fildll
fistl
jo
dec
lock
or
and
pop
enter
aas
pop
enter
fdivs
popa
mov
popl
out
pusha
mov
dec
aas
orb
jae
add
pop
xor
adc
push
aaa
fiaddl
cs
out
mov
mov
divl
insb
jnp
call
push
fsubl
add
sub
mov
xor
cmovle
inc
mov
push
scas
inc
inc
push
pop
inc
fcoms
dec
lret
fimuls
mov
push
add
je
push
test
push
xor
pop
sbb
cltd
sub
add
jbe
fimull
cmp
divl
jns
ja
or
mov
inc
inc
outsl
push
push
outsl
pusha
lds
jg
jne
lods
sbb
testl
push
je
push
aam
in
rorl
lahf
enter
cwtl
inc
push
jl
loopne
into
pusha
xchg
push
fdivl
mov
adc
and
cwtl
pop
dec
inc
pop
inc
lahf
push
addb
dec
fstpl
mov
negl
stos
daa
xlat
or
es
pushf
addb
inc
mov
loop
shrl
inc
add
fimull
xor
popa
xor
outsl
and
sub
fdivs
add
cld
loopne
sub
rolb
or
push
push
add
dec
xchg
or
push
add
pop
cmpsb
aaa
pop
inc
outsl
addr16
or
call
adc
inc
mov
out
jb
iret
add
add
cmp
lods
pop
hlt
jg
add
in
and
mov
push
repnz
sbb
pusha
nop
xchg
imul
jo
cmp
inc
sahf
or
push
lods
in
dec
sub
inc
mov
sub
inc
or
fimuls
sbb
loopne
outsl
add
dec
ficoms
dec
adc
inc
pop
adc
pop
js
dec
clc
inc
ds
test
mov
or
test
aaa
lds
mov
loopne
insl
pusha
pop
leave
add
or
or
xor
sahf
xor
jo
daa
pop
leave
in
aad
out
pushf
inc
daa
or
pop
leave
xchg
add
idivb
pop
and
push
aam
push
dec
repz
inc
sub
dec
pushf
dec
xchg
sahf
out
cmp
xchg
mov
hlt
inc
or
dec
cmpsl
dec
scas
inc
or
bound
dec
xchg
dec
je
push
dec
outsl
jb
push
xor
pop
or
mov
aam
nop
dec
sahf
in
mov
xor
dec
add
add
sub
call
mov
jo
dec
pop
pusha
and
xor
lods
outsl
out
lods
or
add
sub
mov
out
lahf
addr16
pop
inc
lea
pop
or
pushf
inc
and
hlt
daa
or
push
jb
add
aaa
xor
lfs
hlt
outsb
imul
xchg
rclb
xchg
cmp
sahf
add
addr16
mov
mov
daa
sub
cmc
sbb
iret
dec
push
and
jnp
ss
cwtl
push
sarb
add
inc
push
cmp
js
das
mov
enter
add
mov
mov
jns
rorl
dec
outsb
in
insl
leave
xlat
sub
dec
xlat
push
addb
dec
or
push
das
push
push
dec
push
jnp
pusha
push
push
fdivs
fsubs
aas
add
out
mov
mov
lcall
dec
aam
and
add
cmp
sarl
inc
jbe
jns
out
icebp
or
xor
repz
out
out
or
iret
repz
sbbw
dec
xor
pop
dec
and
jbe
or
push
out
ds
mov
xchg
iret
sarl
jecxz
push
cmp
sahf
out
cmp
les
push
dec
jno
data16
std
push
and
int
jns
out
push
inc
jb
lcall
inc
pop
sahf
ja
out
mov
cltd
enter
jns
push
pop
pop
xchg
ljmp
cmp
out
push
pop
push
xorl
mov
out
cmp
adc
xorl
pop
push
jge
cmpsl
stc
cmp
adc
data16
out
jl
pusha
stos
sub
push
xor
out
arpl
cmp
lahf
ja
push
fmuls
gs
mov
adc
push
xchg
xor
cmp
sarl
test
cmpsl
stc
cmp
out
daa
push
jns
iret
repz
call
repz
repz
mov
out
insl
pop
outsb
fwait
jmp
outsl
stc
cmp
cmpsl
insl
and
aad
jno
jl
cmpsl
imul
imul
jae
xor
ds
mov
out
lcall
fwait
mov
icebp
xor
push
jns
push
out
cmp
push
jp
mov
xchg
jnp
sarl
clc
push
jl
inc
jge
sarl
enter
xchg
ror
out
bound
fcomps
cmpb
repz
aam
adcl
loope
adc
fmul
sbb
out
jl
sbb
sahf
out
jl
xchg
pop
xchg
jl
mov
fcoms
imul
cwtl
jl
cmpsl
stc
mov
fcoms
mov
mov
lahf
out
push
clc
inc
int
jge
nop
xor
add
mov
lahf
out
leave
sbb
imul
pushf
ret
push
popf
push
jns
iret
repz
out
and
int
lret
cs
jns
div
xor
out
mov
mov
iret
mov
out
mov
xchg
enter
push
lock
add
mov
lods
out
gs
ss
scas
subl
aaa
lock
jmp
daa
add
push
sbb
mov
push
iret
add
popf
lret
push
add
mov
inc
cmp
sub
push
push
pop
jns
fucomp
pcmpgtd
outsb
ja
dec
scas
loopne
and
cmp
incb
adc
or
aas
in
pop
enter
icebp
in
mov
mov
jmp
xchg
push
out
mov
dec
jae
addb
iret
movsb
push
inc
sbb
int3
push
xchg
or
mov
aaa
pop
enter
scas
inc
pop
enter
xlat
pop
jb
mov
dec
push
and
push
outsl
mulb
out
nop
dec
aas
int3
fimull
push
into
push
aas
jbe
mov
adc
pop
pop
fmuls
frstor
rcrb
push
pop
insl
jb
je
test
aas
mov
sbbl
aas
insl
scas
mov
sbb
das
push
iret
shlb
bnd
inc
ss
mov
xchg
sarl
and
fs
leave
jmp
mov
aas
dec
int
out
or
push
repnz
push
inc
mov
jge
neg
into
inc
mov
pop
addr16
das
addr16
inc
xchg
in
je
mov
daa
les
adc
mov
iret
mov
or
adc
clc
roll
rcrl
ds
shrb
dec
leave
dec
mov
xlat
adc
in
andb
in
mov
hlt
mov
xor
aas
xor
inc
decl
int3
in
je
pop
and
mov
inc
jne
push
xor
sbb
pushf
loop
pop
add
movl
pop
sub
cmpsb
xor
inc
iret
mov
adc
add
push
sub
das
outsl
or
inc
roll
inc
dec
pop
pop
dec
pop
push
push
scas
sub
dec
mov
les
dec
cmpsb
pop
ficoml
mov
in
sub
sbb
cmp
pop
jnp
inc
aam
mov
jns
das
out
dec
dec
xchg
pop
cmp
jmp
jno
add
add
testb
dec
dec
dec
mov
les
adc
add
out
dec
push
xchg
inc
sbb
dec
inc
fisttpll
xchg
pushf
test
push
mov
les
add
mov
cmpsb
or
scas
pop
rcr
and
pusha
pop
push
push
mov
mov
test
and
xchg
test
fs
pushf
xchg
push
pop
add
leave
add
and
pop
pop
add
dec
inc
cmp
pmulhuw
dec
inc
lds
add
mov
movsb
pop
add
pop
mov
daa
fs
dec
mov
repnz
dec
add
add
xchg
pushf
loopne
adc
dec
sub
push
xlat
or
mov
js
pop
cwtl
xchg
and
xchg
dec
cmp
repz
add
add
mov
repnz
jo
ficoms
jl
incb
push
pop
and
fwait
inc
push
daa
fs
in
and
test
ret
or
mov
push
mov
hlt
push
mov
and
leave
imul
xchg
mov
cltd
dec
pop
movsb
dec
scas
xchg
xchg
mov
push
aad
test
mov
add
pop
leave
xor
dec
cmpsl
push
cwtl
es
enter
dec
ss
ds
dec
sbb
inc
dec
dec
in
cmp
cmp
and
cmp
xchg
cltd
inc
popa
outsb
mov
dec
mov
pop
aam
jbe
fisttpll
fsubl
pop
ss
push
lock
aaa
and
out
ss
push
mov
push
pop
xchg
add
es
bound
sub
inc
mov
movsb
bound
loopne
aaa
xchg
push
mov
sbb
mov
or
and
arpl
push
outsl
xchg
leave
arpl
push
cmpsl
sub
add
iret
js
cwtl
xchg
inc
pop
das
xor
jl
jg
mov
aam
and
jns
push
or
xchg
ret
mov
scas
push
cmp
mov
push
push
pop
inc
jl
xor
fs
xchg
daa
jp
xor
out
push
dec
notl
jb
and
push
les
in
sub
xchg
xor
cmp
inc
push
dec
nop
jl
aas
add
gs
xor
dec
jb
fs
gs
iret
add
mov
add
push
bswap
push
repnz
push
jmp
repnz
push
adc
cmp
repz
or
or
cmp
repz
or
cmp
bound
insl
adc
cmp
repz
adc
iret
repz
adc
cmp
lds
rcrl
loope
xchg
adcb
sbb
inc
cmp
aam
push
and
inc
add
and
push
inc
pop
ret
int3
inc
js
shll
add
push
out
inc
out
mov
daa
fs
loopne
sbb
sub
divl
mov
xchg
test
repz
add
aas
lock
sbb
fists
inc
movb
push
pushf
out
out
daa
sub
mov
repnz
push
fs
leave
nop
bound
push
pushf
pop
and
add
out
daa
scas
aaa
add
adc
dec
shrl
or
push
add
popa
aaa
and
xchg
scas
add
lods
scas
leave
dec
cs
xchg
addr16
in
push
pop
dec
and
jg
jb
loope
push
mov
jo
fsubrp
mov
push
add
dec
jae
ffree
clc
das
call
inc
push
cmp
push
adc
pushf
mov
push
clc
push
xor
imul
adc
iret
in
xchg
sbb
jl
cmp
imul
outsl
push
pop
inc
leave
xor
or
leave
add
xchg
daa
iret
leave
hlt
add
add
lods
cmp
daa
ss
ds
inc
pop
inc
pop
mov
dec
orps
int
add
push
je
pop
cmp
cmp
ret
sbb
leave
sub
insb
mov
lds
mov
jns
pop
fwait
loop
inc
add
es
inc
cwtl
xchg
push
mov
pop
leave
and
mov
and
add
out
cmp
and
daa
inc
xchg
xchg
or
pop
std
jl
inc
dec
mov
cmovbe
xchg
mov
add
jns
addr16
pushf
orb
cmpsl
sbb
jns
and
inc
push
inc
pop
outsl
dec
outsl
push
repnz
outsl
cmc
pop
movsb
outsl
mov
pop
sub
cltd
mov
pop
xchg
add
mov
mov
leave
leave
lods
movsb
lds
int
aad
mov
and
add
ss
inc
ds
pop
ljmp
jle
shlb
jo
test
push
jns
xor
push
daa
inc
push
jo
inc
mov
mov
in
js
add
mov
pop
scas
lods
pop
mov
mov
pop
les
aam
mov
pop
in
in
pop
hlt
pop
mov
pop
add
or
adc
outsb
mov
and
sub
setae
or
xchg
or
or
xchg
xchg
xchg
xchg
pop
push
add
xchg
add
add
dec
and
push
addr16
jno
fucomi
jbe
addr16
xchg
je
adcb
hlt
jb
movsl
pop
jb
inc
fwait
jae
lret
jns
inc
incb
pop
push
pop
enter
ja
cwtl
xor
dec
sahf
fisttpl
add
insl
push
shrl
pcmpeqw
je
sbb
ret
fistpl
test
mov
sahf
ja
lea
push
push
rorb
or
loopne
call
decl
incb
popf
mov
sub
and
fmuls
xor
cmp
iret
fimull
pop
and
push
andl
iret
xchg
add
movsb
mov
bt
mov
or
rorl
popf
out
mov
das
xchg
jns,pn
ret
push
cmovle
add
xor
ret
push
inc
mov
cmovle
aas
cmp
mov
out
jne
xchg
xlat
pop
or
adc
fmuls
out
push
aas
jbe
dec
enter
push
pusha
das
push
pusha
push
pusha
out
jns
push
push
add
xor
jae
jns
cmp
inc
push
pusha
dec
pop
and
lods
pusha
daa
daa
mov
out
xchg
fwait
mov
xchg
add
in
jmp
popa
push
add
fldz
cmp
lahf
adc
sbb
dec
and
outsb
and
sub
inc
mov
popa
outsb
andb
xchg
popa
jns
test
sub
ja
popa
mov
popa
mov
bound
bound
adc
jae
jns
nop
bound
mov
mov
fisttpl
or
sarb
arpl
in
ss
cmp
arpl
push
jns
fistpl
popa
push
imul
out
arpl
mov
add
xchg
arpl
mov
rclb
cmpsl
in
xchg
adc
or
shll
cmp
fs
xchg
dec
jnp
fs
cld
nop
jbe
jb
cwtl
mov
repnz
mov
fs
mov
call
fs
icebp
mov
push
xor
push
gs
cs
mov
gs
adc
shlb
add
jnp
cmp
enterw
ja
fs
data16
sahf
fisttpl
add
outsl
push
jns
test
adc
dec
sbb
cmp
push
imul
jl
out
xor
je
daa
adc
mov
pop
test
mov
mov
pushw
addr16
das
sbb
addr16
sbb
sub
adc
push
out
decl
mov
jb
arpl
addr16
xchg
xchg
and
addr16
addr16
mov
sub
or
jmp
hlt
decl
push
mov
push
inc
xchg
xchg
fisttps
jge
leave
repz
jne
add
int3
jnp
pop
and
push
ja
push
inc
jb
inc
ret
sub
in
jbe
out
out
psadbw
pop
fildl
and
imul
arpl
xchg
xchg
sahf
out
jnp
add
mov
fwait
add
daa
stos
imul
pushf
in
repnz
imul
pop
push
push
imul
push
movsb
adc
das
xchg
dec
jp
scas
pop
or
pop
xor
clc
iret
mov
ja
push
add
ja
addb
xor
push
imul
mov
cs
mov
and
das
imul
inc
das
dec
cmp
in
push
or
or
loope
repz
outsb
imul
mov
in
sbbb
lahf
aad
xchg
pushf
pushf
fucom
dec
adc
inc
pop
or
jmp
popf
pop
mov
xor
jbe
mov
add
cmp
add
jmp
leave
inc
jnp
mov
sub
jbe
leave
leave
loopne
lock
xchg
enter
adc
nopl
jns
cmp
add
xchg
pushf
ljmp
pop
insl
mov
mov
mov
xchg
add
daa
daa
daa
scas
mov
insl
mov
insl
iret
insl
xlat
insl
fildll
outsb
mov
pop
ud2
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
sahf
xchg
add
negl
fdivp
xor
sbb
outsb
sbb
sbb
out
push
pop
pop
daa
iret
leave
leave
rorl
and
aaa
aas
and
iret
repz
and
dec
and
xchg
outsb
sub
cmpl
fisubl
addr16
into
dec
ja
mov
in
in
add
out
outsb
outsb
in
jns
pop
testl
mov
outsl
incl
cmp
dec
outsl
in
in
minps
push
imul
outsl
push
sbb
sbb
outsl
aas
outsb
popf
jae
mov
bswap
iret
or
jns
shlb
repz
or
or
dec
push
mov
clc
pop
pop
lock
data16
adc
sbb
inc
repnz
aaa
adc
inc
jbe
lahf
xchg
out
dec
add
insb
xchg
mov
sub
sahf
jo
jo
movb
push
lret
cmpsl
mov
lock
das
or
outsb
repnz
adc
add
sbb
adc
and
push
fists
daa
inc
lahf
or
inc
dec
cmpsl
mov
daa
push
pop
scas
pop
jmp
mov
mov
test
in
jno
xchg
mov
jb
xchg
fsub
jb
loop
and
mov
sbb
jb
jb
jb
jbe
or
push
jb
jb
pop
pop
loopne
xchg
pop
sbb
jb
mov
and
or
es
mov
mov
push
inc
int
aad
xchg
mov
pop
mov
lods
xchg
xchg
iret
add
mov
dec
leave
subl
mov
push
push
mov
cmp
cmp
xchg
push
xchg
inc
jae
andps
repnz
repz
add
add
jb
jl
or
xchg
pushf
pop
movsb
out
jns
or
cmc
in
sahf
adc
test
mov
inc
dec
or
sbb
stos
sbb
sahf
and
sub
incb
mov
sbb
pop
or
mov
pop
scas
pusha
fildll
jo
xchg
lahf
outsb
bnd
aaa
xorb
jno
mov
mov
xchg
push
bswap
cmpsl
js
loope
pxor
or
adc
pushf
in
movaps
mov
jne
mov
jne
jg
int
mov
mov
rcr
mov
or
sbb
into
mov
sarl
fists
aas
dec
cmpsb
andb
push
cmp
aas
push
add
jns
bound
jbe
add
jae
add
pop
adc
sbb
and
sub
xchg
popf
mov
push
jbe
pop
jbe
enter
adc
scas
jl
cmp
jns
test
add
cs
movsb
push
add
cmp
mov
out
sahf
out
or
or
or
in
mov
jbe
jl
cmp
notl
enter
dec
aaa
daa
push
mov
mov
pop
ja
rorl
in
ja
ja
mov
mov
and
inc
repnz
ja
imul
iret
daa
cmp
cmc
and
jmp
inc
inc
pop
adc
cmpsl
xchg
andb
loopne
xchg
and
pop
js
js
inc
repnz
mov
js
fsubs
cltd
cld
pop
sub
popa
pushf
fisttpl
dec
add
insb
pop
mov
in
sub
mov
fisubrs
add
lret
xchg
js
js
idivb
js
and
pop
iret
or
cmp
and
cld
pop
add
popf
sbb
xchg
xchg
xchg
xchg
jns
jns
xchg
xchg
xchg
xchg
jns
jns
add
jns
jns
or
vmwrite
sarl
repnz
nop
jns
xchg
sbb
or
jp
xchg
xchg
iret
sub
adc
lods
nop
dec
addb
inc
or
mov
mov
jp
jp
jp
push
call
jp
call
and
sbb
cmp
cltd
jecxz
xchg
fisttps
jo
rclb
adc
das
sbb
jnp
enter
jnp
jnp
jnp
fdivl
jb
jnp
pop
push
pop
bound
enter
jnp
jnp
psllq
cmp
cmpb
jnp
movd
jnp
rcr
repnz
movsb
lock
cwtl
push
jbe
loopne
das
jl
inc
dec
add
sub
cmp
loop
repz
dec
jl
movsb
push
pop
movsl
filds
xchg
adc
leave
or
xchg
xchg
jo
or
outsb
scas
jnp
scas
incl
add
jbe
in
push
mov
iret
enter
out
pop
or
repz
add
cmp
dec
es
iret
add
xchg
pusha
push
jo
imul
jns
push
push
xchg
xchg
xchg
xchg
mov
imul
mov
cs
out
movsb
jecxz
testb
dec
repz
out
xchg
xchg
enter
aaa
jle
pop
adc
jns
lsl
jle
dec
ja
fiaddl
leave
cmpsl
fcmovne
orb
push
fisubs
pop
jle
sarb
scas
movsl
ja
fdivl
dec
add
or
xchg
pop
pop
pusha
rorb
add
in
mov
inc
jg
jg
inc
cmp
jg
jg
and
xlat
xchg
add
leave
lods
mov
add
fistps
pop
and
insl
shlb
mov
pushf
sti
pop
add
and
fsts
adcb
outsb
daa
and
addb
push
cmp
repz
pop
add
out
movsb
fwait
lar
divb
jb
xchg
cmp
cltd
mov
test
fs
fmul
add
cltd
out
xchg
or
in
testl
outsl
popf
mov
ja
jno
shrl
addl
xchg
flds
and
add
lcall
leave
and
xor
popf
lods
in
movsb
cmp
inc
lcall
out
jg
fnsave
xchg
repnz
movsb
into
nop
add
push
test
lsl
mov
repnz
les
test
enter
mov
fiadds
push
xchg
ds
add
xor
cmp
jle
jb
sgdtl
push
dec
sbbl
pop
push
sbbl
subl
outsb
mov
pop
ud2
iret
repz
sahf
adc
mov
push
nop
pop
cmp
repz
sbb
out
mov
sbb
test
push
out
mov
sub
push
daa
leave
stos
push
cmpsl
pushf
call
test
mov
pushf
xlat
test
cmp
enter
test
pusha
test
mov
jo
js
pop
andb
repz
mov
nop
cwtl
dec
sahf
out
push
or
in
in
push
mov
movnti
sbb
lock
adc
roll
popf
test
les
cmc
mov
cmp
lock
jg
outsl
push
sbb
jae
jle
mov
fisttpll
into
push
stos
or
sahf
mov
cli
lar
iret
or
sbb
cmp
repz
cmp
inc
or
clts
xchg
and
jg
dec
sub
in
push
xchg
bound
push
leave
repz
cmp
jp
cmpb
lcall
push
daa
sbb
jo
aaa
int
ja
dec
and
add
lock
xchg
xchg
push
add
adc
xchg
dec
sahf
ja
inc
xchg
push
add
or
rolb
xchg
pop
ja
jg
xchg
fisttpl
mov
lcall
mov
ror
shrb
out
jae
out
lcall
mov
scas
neg
push
inc
pop
hlt
out
jnp
add
mov
or
xor
daa
sbb
add
mov
je
je
aaa
inc
mov
mov
loope
push
pushl
sbb
orb
loope
mov
mov
out
enter
mov
out
mov
xchg
sbb
mov
cmp
cmp
push
dec
pop
push
or
jbe
cmp
popa
imul
daa
or
sahf
or
pusha
cmp
imul
outsb
push
xchg
add
ds
add
loop
mov
and
jae
inc
push
add
rclb
cld
pop
enter
jmp
mov
das
fistpl
add
mov
loop
jmp
repz
mov
jns
inc
add
xor
sbb
mov
xchg
pop
leave
out
sub
pop
xchg
mov
mov
xchg
dec
lock
leave
cmp
mov
rorb
and
incl
mov
inc
dec
repnz
mov
push
repz
add
popf
pushf
cmpsb
mov
iret
repz
or
cmp
fimull
stc
int3
cmc
bnd
mov
mov
adc
movsl
inc
dec
jo
adc
lea
mov
and
lea
cmovno
jb
cmp
imul
mov
rorl
pop
xchg
mov
mov
repz
xor
pop
xchg
xchg
xchg
xchg
jl
call
lock
sbb
rep
cmp
pop
cvttps2pi
push
cmp
leave
push
pop
push
and
push
js
daa
iret
and
dec
mov
scas
push
daa
js
inc
repnz
cmpsl
jo
jns
lock
repnz
nop
nop
xor
push
outsl
xchg
cmp
ja
lea
dec
movb
mov
mov
inc
sahf
pushf
pushf
pop
loop
repnz
push
xchg
sbb
sub
sahf
pop
fsubrl
dec
xchg
outsb
daa
and
xchg
pop
gs
xchg
repnz
mov
xchg
pop
xchg
xchg
sahf
xchg
iret
repz
into
iret
cmpsb
xchg
scas
mov
mov
fmulp
repz
or
into
push
push
lret
jns
ficoms
adc
test
inc
inc
inc
inc
cs
xchg
xchg
xchg
mov
nopl
das
das
das
das
dec
xchg
pop
xchg
pusha
xchg
push
das
jo
jnp
xchg
das
das
xchg
xchg
sahf
xchg
cmpsb
xchg
scas
xchg
stc
inc
das
das
mov
mov
stc
mov
rcll
xchg
jns
jns
repnz
cli
xchg
add
jns
ja
push
pop
and
sub
xor
and
sahf
out
and
and
sahf
out
daa
insb
sub
in
sahf
or
jns
pushf
cmp
lcall
in
xor
data16
movsb
into
xchg
push
push
pop
lahf
outsb
fcomi
loopne
fistps
push
das
lock
cmp
xchg
xchg
clc
xchg
nop
stos
iret
fs
sbb
jns
push
add
and
push
xchg
jns
lods
fdivr
adcb
das
in
in
in
ror
pmulhuw
jmp
in
in
dec
data16
xchg
lods
mov
mov
adc
int
adc
lret
out
popf
fisttpll
in
add
jg
xchg
sahf
fcmovne
sub
insl
sbb
xchg
out
jne
jge
seto
cmp
daa
cwtl
mov
es
and
add
loope
into
in
in
outsb
daa
jmp
cmp
movhps
sub
push
cmp
leave
repz
arpl
sbb
xor
repnz
aaa
iret
leave
rep
daa
xlat
pandn
cmp
xchg
int
jmp
nop
lods
and
movaps
add
ss
jl
scas
pop
push
xchg
cwtl
iret
nop
mov
outsb
fnstsw
xchg
add
xor
mov
cwtl
das
cltd
addr16
ja
cltd
xchg
dec
dec
inc
pop
popa
mov
repz
cs
fwait
push
add
mov
add
add
rcr
pop
call
aaa
jns
movsbl
lcall
pop
pop
sub
adc
repz
cmp
dec
adc
pushf
cmp
fs
jp
pushf
cmp
leave
test
cmp
repz
iret
leave
repz
iret
leave
repz
call
repnz
mov
pop
fwait
inc
repnz
lock
and
add
xchg
and
das
fnsetpm(287
movsb
add
fwait
fwait
setle
mov
clts
loopne
in
js
xchg
fwait
push
or
or
pushf
push
iret
rorl
or
adc
push
sbb
enter
and
ficomps
adc
inc
push
adc
cmp
rorl
add
pop
xor
loopne
sbb
pusha
imul
ljmp
cmp
inc
inc
sbb
sbb
xchg
pushf
and
je
iret
push
scas
pushf
and
aas
mov
pop
ja
cmp
mov
xlat
mov
pushf
xchg
divb
decb
push
popf
cmpsl
push
adc
daa
mov
adc
popf
xor
cmp
cmp
mov
xchg
dec
add
jb
je
jl
leave
inc
jb
mov
fmulp
mov
push
add
iret
bswap
pop
js
xlat
fistps
push
or
leave
decl
sahf
mov
sahf
sbb
in
inc
xchg
push
leave
inc
repnz
add
js
mov
fildl
in
leave
add
ret
cs
stos
jp
mov
out
out
test
pop
push
lahf
mov
push
lahf
pop
push
push
push
es
mov
in
jg
mov
addr16
daa
and
mulps
jno
and
cmpsl
push
aam
iret
in
in
pushf
movsb
lods
xchg
daa
add
mov
xlat
in
dec
outsb
xchg
add
sbb
insb
adc
mov
sub
xor
leave
repz
cmp
cwtl
in
call
mov
in
jbe
fwait
jne
jge
jge
fistl
pop
lods
fbstp
pop
mov
outsl
popf
fsubl
xchg
mov
div
clc
insl
xchg
xor
mov
xchg
pop
sub
int
fsubrl
dec
cmpsl
push
push
out
cmpsl
in
daa
pop
jbe
jbe
xchg
adc
out
inc
mov
and
mov
fwait
aam
fsub
pop
in
xchg
iret
jae
jg
pop
cld
add
xor
or
aaa
or
outsb
cmp
sbb
jne
jae
pusha
push
sahf
adc
add
push
mov
mov
inc
mov
mov
sub
or
outsb
repnz
sub
add
jp
fiadds
dec
mov
xchg
mov
jns
test
xchg
xchg
mov
movsl
mov
fbstp
mov
jns
fsubl
std
mov
or
movsb
jbe
jns
xor
aas
movsb
dec
movsb
push
pop
outsb
daa
daa
fisttpll
sbb
dec
dec
dec
dec
sbb
pop
push
jns
dec
dec
adc
jns
out
imul
xchg
orl
pop
testl
fwait
aas
push
cmp
cmp
mov
repz
repz
cmp
repz
aas
out
inc
cli
inc
sahf
add
inc
push
adc
inc
sahf
idivl
es
xor
cmp
daa
iret
cmp
jle
dec
mov
lahf
cmovge
stos
sahf
fcmovne
repz
mov
bswap
push
jns
out
push
loope
in
leave
enter
testl
xchg
fistpl
pop
and
pop
cmp
daa
dec
aaa
subps
scas
mov
daa
gs
fistpll
mov
arpl
mov
sbb
jb
cmpsb
shlb
jns
out
add
add
mov
aaa
cmpsl
outsl
or
cmpsb
mov
add
andb
mov
mov
sahf
adc
adc
leave
repz
adc
inc
push
iret
mov
mov
iret
repz
pusha
sbb
into
hlt
in
push
sbb
mov
jg
cmpsl
xchg
iret
or
shlb
push
and
push
cmpsl
cmpsl
xor
das
xor
mov
pop
and
leave
out
sbb
sub
inc
repnz
add
mov
jo
lret
enter
test
fnsave
movsb
ds
cwtl
pop
clts
pushf
pushf
pushf
cmp
test
call
fisubrs
or
shrb
fsubrs
loopne
cmovl
test
add
push
add
testb
ss
test
cmp
jnp
orl
fwait
test
push
xchg
sarb
xchg
aam
pop
fbstp
loopne
pavgb
stos
push
in
in
xchg
stos
and
or
pop
leave
leave
leave
leave
inc
dec
pop
arpl
adc
test
cmp
cmp
movsl
out
sahf
ja
push
sbb
jns
sbb
sbb
nop
pushf
cmp
push
out
and
pop
jmp
std
or
cmp
leave
leave
push
sub
aas
fcmovne
repz
dec
push
das
pusha
stos
push
and
add
stos
jns
out
push
add
add
repnz
fstps
add
jp
stos
inc
iret
aaa
jb
enter
lods
sbb
sahf
add
pop
add
jns
outsb
pop
jbe
out
jbe
syscall
or
xchg
and
scas
xchg
out
mov
pop
movups
out
adc
dec
sahf
out
push
rcr
pop
in
iret
repz
in
sbb
sbb
pop
mov
add
lahf
out
dec
fimuls
push
and
ja
mov
and
xor
xchg
cmp
sahf
es
fiadds
fidivs
xchg
scas
push
sub
push
sub
sub
add
jne
pop
ds
lods
jle
inc
dec
sub
sub
ret
inc
xchg
push
daa
lock
lods
out
inc
dec
jg
lods
pop
rorl
add
out
push
dec
scas
push
lret
repz
add
dec
scas
cmp
repz
or
cmp
cmp
repz
cmovg
call
sub
test
out
xor
iret
repz
add
fiadds
std
or
jl
or
mov
inc
push
jle
scas
es
cs
lahf
ss
jb
scas
incl
dec
scas
push
scas
mov
inc
mov
insl
scas
js
enter
outsl
sbb
les
scas
scas
scas
aas
pushf
cmp
orb
cs
mov
jg
mov
mov
pushf
push
inc
out
xor
cmp
cmp
lret
aas
ds
add
jbe
pop
invd
mov
or
out
sahf
mov
mov
jmp
or
loopne
cmc
in
jmp
add
daa
iret
pop
pop
and
sbb
cmp
inc
sbb
sbb
pop
push
addr16
leave
repz
andb
and
movsb
imul
and
iret
repz
shrl
fisubrs
and
mov
pushl
mov
sbb
sub
mov
push
sbb
mov
pshufw
mov
mov
xchg
out
nop
cwtl
push
pop
test
jns
dec
mov
xadd
in
sahf
adc
adc
push
mov
and
out
fdivs
lock
rep
dec
sbb
add
iret
repz
sbb
cmp
in
nopl
sub
and
pushf
cmp
repz
and
cmp
leave
repz
pop
es
jns
out
push
js
daa
iret
cmp
push
sub
mov
nop
js
jns
mov
shlb
scas
ss
stos
add
add
adc
movsb
add
xor
cmp
aam
xchg
inc
push
mov
push
sbbl
push
add
aas
inc
push
xor
inc
sbb
xchg
push
push
lret
scas
pop
inc
xchg
dec
push
or
aaa
dec
aaa
adc
adc
cmpsl
jns
add
leave
out
inc
cmp
jns
out
xor
sub
dec
repz
sbb
clc
enter
iret
repz
loopne
fcom
idivl
repz
enter
xchg
out
sahf
mov
cmp
repz
je
pusha
repz
repz
push
dec
inc
sub
xchg
or
or
add
scas
dec
and
cmp
sarb
add
repz
jae
sbb
cmp
or
or
or
in
or
or
outsb
mov
scas
adc
adc
adc
daa
daa
mov
and
jbe
push
das
push
xorps
shr
das
insl
push
and
mov
push
pop
andb
mov
aas
addl
sub
xchg
add
aas
xlat
pop
push
insb
ret
repnz
add
xor
add
add
bound
xchg
fsts
dec
aad
add
mov
cld
or
add
movsb
add
in
leave
pop
lods
pusha
cmpb
cmpsb
fisttps
mov
jl
lahf
loopne
inc
jle
test
shll
push
mov
mov
cmp
mov
sbb
in
out
adc
mov
mov
ficompl
dec
leave
mov
mov
xor
fcomp
loopne
jb
jle
xchg
mov
xor
xchg
mov
pop
mov
jnp
push
fdivr
inc
xor
lods
mov
inc
dec
fiaddl
pop
mov
js
jle
pmovmskb
add
mov
sub
inc
mov
aas
pop
shlb
aas
ja
or
cmp
repz
dec
les
or
out
adc
into
adc
adcb
sbb
and
test
push
sbb
repz
test
push
cmp
pop
pop
jbe
push
fmul
mov
jns
imull
or
js
lret
in
repz
jp
push
cld
cmp
inc
pop
xor
cmp
sub
cmpsl
push
mov
call
aas
in
or
pop
fisttps
pop
orl
jg
dec
inc
mov
insb
jbe
push
cwtl
push
jae
xorb
fwait
test
mov
push
push
pop
inc
jg
divl
add
inc
push
xchg
aaa
push
insb
pop
aas
pop
pop
pop
stos
inc
xlat
pop
xor
push
sti
sub
and
and
add
push
cs
aad
mulb
xor
add
rcl
pop
xor
add
push
sub
inc
and
inc
roll
sahf
out
dec
push
sbb
sbb
rorl
jecxz
add
and
iret
jnp
out
loop
xor
xchg
cmc
cmp
adc
lock
psubsb
push
pop
ror
in
push
and
push
or
add
push
cld
adc
pop
loopne
push
hlt
sbb
fsub
push
sbb
push
sahf
out
sahf
rclb
and
mov
lods
and
out
cwtl
pop
or
adc
mov
jmp
inc
out
xor
test
xchg
push
xchg
xorb
inc
cmp
xorl
push
cmp
repz
xchg
mov
jge
out
repz
xor
add
repz
cmp
xchg
mov
sahf
shl
bnd
das
push
dec
jne
mov
insb
add
cmp
inc
pop
enter
ds
or
or
ret
pslld
and
adc
mov
xchg
sbb
leave
sbb
into
sbb
rorl
and
sahf
pushl
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
mov
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
call
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
xor
loopne
and
add
sti
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
sar
dec
adc
lcall
cmp
push
mov
xchg
aas
call
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
xchg
test
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
stos
sub
cmp
mov
mov
jecxz
cmpsb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
pushl
loop
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
sti
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
fidivs
les
lahf
into
ror
add
cmpsb
fmuls
and
stos
loopne
pop
inc
push
jns
rcr
inc
pop
inc
push
dec
ljmp
pushf
pushf
jnp
cmpsl
add
cmp
popa
push
out
mov
les
hlt
push
xor
xchg
fs
pushl
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
jmp
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
xchg
in
leave
mov
add
insb
push
arpl
je
cmc
or
outsb
cmp
imul
addr16
std
incl
std
test
movsl
cli
test
xor
leave
mov
aaa
xor
jne
iret
or
pop
lcall
shrl
push
ficoms
push
xlat
enter
mov
and
mov
call
xchg
mov
mov
or
or
and
or
adc
lcall
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
and
incl
movsl
in
lahf
xor
mov
js
stc
mov
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
lcall
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
cld
call
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
xlat
pushl
pop
cmp
mov
inc
movsl
fisttps
fadd
sar
jmp
jmp
outsb
xor
mov
sarb
add
in
add
pop
dec
or
ljmp
cmp
add
daa
adc
or
and
test
or
data16
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
pushl
and
mov
add
inc
aad
scas
ja
popf
adc
incl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
decl
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
lcall
out
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
jmp
call
aad
mov
call
xchg
shll
push
repnz
addr16
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
fwait
jmp
out
mov
jns
imul
andl
shrb
rclb
insb
jmp
add
mov
mov
mov
decl
lock
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
ljmp
cli
call
lcall
clc
sar
imul
push
js
or
push
addl
ret
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
clc
mov
mov
fidivrs
mov
jmp
adc
repnz
lret
mov
cmpsb
mov
sarb
ljmp
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
adc
lcall
filds
sub
fmuls
pop
sbbb
push
clc
dec
sahf
popa
pop
jo
pusha
push
mov
filds
xlat
fdivrs
out
fcmovnu
jns
out
loop
in
jns
out
call
out
sahf
out
repz
cmc
negb
clc
stc
cli
sti
cld
add
jge
je
cmpsb
adc
test
lahf
nop
rclb
cmp
mov
push
add
and
bound
xchg
jbe,pn
jne
call
inc
cltd
movsl
fisubrl
popa
je
push
cltd
dec
or
and
inc
dec
outsl
aas
lds
xor
pop
inc
cmp
pop
bound
lods
insl
jmp
aaa
cmp
popa
arpl
cmp
arpl
or
xor
dec
insl
pushl
bound
jg
popa
push
inc
jbe
pop
insb
imul
push
insb
gs
push
sahf
add
inc
orb
push
inc
dec
inc
dec
cmpsb
push
mov
dec
aad
xor
mov
mov
shlb
push
je
inc
xchg
mov
scas
ss
jbe
mov
rorb
inc
aas
sub
dec
push
add
adc
gs
inc
inc
dec
js
push
adc
addl
sbb
xor
insb
inc
lds
popa
jns
pop
dec
or
pop
popa
xchg
cmp
inc
xorb
insb
aaa
jbe
cmc
lock
inc
push
and
lods
fadds
or
adcb
cltd
and
jae
mov
jp
pop
int
mov
inc
aas
inc
jbe
and
pop
inc
inc
push
sbb
inc
pop
idiv
js
es
jo
inc
inc
add
mov
popa
mov
lret
mov
iret
int
push
dec
cmp
mov
andb
sbb
mov
pop
mov
outsb
jne
push
xchg
pop
insl
inc
popa
mov
push
pop
xor
xor
insl
fwait
cmp
add
int
mov
xchg
into
pop
jo
xchg
adc
pusha
in
pushf
inc
cmp
pop
subl
lret
dec
int3
push
adc
outsl
add
lods
dec
pop
mov
mov
lcall
cmp
sbb
pop
movsb
sub
push
xlat
mov
arpl
add
mov
inc
jb
andb
dec
popa
jo
sbb
add
mov
outsl
test
dec
sub
push
jno
xor
stos
loop
in
jb
pusha
rcrb
in
nop
pusha
lds
inc
push
cmpb
arpl
or
mov
popa
add
out
mov
je
addr16
xchg
shlb
gs
jb
push
jae
inc
stos
xchg
addr16
outsl
arpl
insl
dec
popa
mov
sarl
xlat
inc
push
bound
ja
inc
jbe
cmpsb
outsl
pop
xor
addr16
mov
push
dec
xor
bound
xor
fs
add
add
add
insb
adc
outsb
jg
dec
sub
dec
pop
dec
mov
inc
and
or
jb
outsb
pushf
adc
sbb
xchg
sub
sbb
sbb
pop
lods
mov
push
stc
inc
push
inc
dec
lods
pop
jno
pop
bound
outsb
arpl
adc
xchg
or
pop
mov
sub
pusha
in
insl
mov
push
inc
xchg
fs
inc
push
xlat
cmp
daa
inc
mov
test
and
inc
adc
push
add
push
add
mov
ljmp
fdivr
loopne
adc
dec
sbb
pusha
add
cmp
add
add
or
fisttps
or
pop
push
or
or
or
or
or
adc
adc
push
std
fwait
pop
rclb
push
add
pop
sbb
adc
adc
cmpsb
add
or
adc
pop
adc
rorb
adc
add
add
add
adc
xor
add
adc
push
inc
mov
mov
add
jge
ljmp
call
xor
adc
pop
and
xor
inc
mov
adc
pusha
or
jb
js
adc
clc
push
mov
xchg
sbbb
inc
or
and
add
jno
and
arpl
dec
inc
or
add
nop
cmpb
add
sub
addl
and
scas
pushf
into
add
out
scas
adc
sarb
adc
push
adc
pop
popa
xor
stc
out
adc
or
xchg
mov
lock
pop
stos
and
loope
icebp
mov
mov
push
xor
xorb
scas
fiaddl
or
fisttps
inc
mov
dec
nop
cli
sub
rcr
call
xchg
and
sub
std
cmpsb
xor
aas
imul
mov
cmp
inc
or
pop
les
fsts
dec
add
or
cmp
adc
ja
out
cmp
xor
mov
cmpsl
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
stc
stos
pusha
inc
inc
xchg
pusha
add
std
or
es
add
lds
cld
cli
and
pushl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
push
dec
adc
mov
stc
decl
mov
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
incl
xor
lcall
fs
scas
mov
pop
pop
mov
incl
in
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
jg
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
jl
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
call
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
idiv
jmp
mov
int
arpl
push
out
or
push
fists
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
test
and
xchg
jmp
sbb
das
xor
mov
out
pop
jb
mov
mov
loope
call
mov
int
inc
fwait
sbbb
mov
dec
jp
push
outsl
jmp
hlt
push
add
stc
loope
mov
shrl
andl
aas
icebp
testb
mov
decl
inc
gs
sub
jno
pop
sub
jg
scas
cld
or
incl
call
sbb
paddb
inc
mov
dec
adc
call
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
in
cmp
test
loopne
cli
adc
aaa
xchg
in
add
dec
outsl
mov
inc
adc
loope
fisttpll
out
aas
std
cli
push
push
pushl
jg
cmp
sub
inc
scas
inc
mov
inc
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
jmp
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
add
js,pn
stos
imul
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
add
lcall
xor
das
pop
pop
pop
shlb
out
call
call
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
ljmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
incl
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
decl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
ljmp
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
mov
jle
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
jo
pusha
imul
add
mov
cmp
xchg
mov
imul
ftst
jbe
xchg
and
lcall
out
jae
shrb
shlb
out
aas
stc
add
out
gs
mov
pushl
fidivrl
lock
adc
pop
cld
addl
adc
and
pop
repnz
cmp
fmull
enter
jecxz
aas
clc
aas
lahf
scas
sub
in
pop
mov
sub
mov
dec
outsb
mov
cld
inc
mov
push
sbb
push
inc
or
testb
push
pop
jg
add
jg
mov
mov
aad
test
mov
mov
iret
push
std
mov
out
jbe
push
sbb
stos
icebp
pop
incb
jno
mov
cvtpi2ps
push
inc
jecxz
sbb
sarl
adc
mov
loopne
sar
adc
lahf
xor
and
cmp
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
std
mov
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
lcall
cmp
cld
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
push
jnp
jmp
insb
sbb
cwtl
inc
mov
insb
cld
jg
inc
test
aas
repz
outsl
lock
in
jmp
stc
out
jmp
aaa
clc
push
std
mov
or
lods
out
jne
or
lcall
dec
add
mov
fsubrp
dec
sahf
enter
fcmovu
dec
cld
inc
inc
adc
inc
loopne
test
out
rolb
pop
or
cli
loop
cld
or
dec
ss
div
leave
inc
lods
movsb
or
repnz
mov
or
call
fistps
cmpsl
lret
pop
in
cmp
jmp
mov
int
cmpsb
insl
pop
lock
jmp
hlt
dec
mov
incl
inc
aas
mov
jg
mov
outsb
call
loopne
addr16
sbb
cld
daa
jp
std
adc
cltd
stos
pop
test
or
mov
ret
nop
cmp
das
incb
lock
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
shrl
je
jge
aas
mov
push
fbstp
out
xchg
add
out
icebp
mov
cld
and
lock
mov
cmpsl
popf
sti
mov
fisttps
aaa
ja
push
test
jmp
call
xor
scas
mov
push
adc
mov
and
sbb
mov
push
sbb
mov
cmp
int
add
push
pop
aaa
push
cltd
nop
test
add
sbb
xchg
fimull
in
jmp
int
jmp
arpl
adc
mov
sub
jbe
mov
clc
loope
loope
mov
lahf
jp
or
scas
jo
add
xlat
jmp
mov
xchg
fbstp
xchg
fldenv
iret
fdivrl
xchg
mov
mov
push
cmp
repz
shlb
jo
push
cld
imull
out
jg
jno
ret
cwtl
scas
xchg
xchg
arpl
aas
mov
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
pushl
mov
jne
in
sbb
xchg
imul
jmp
outsl
test
ljmp
into
daa
jmp
faddl
mov
add
jae
jg
push
pop
pop
add
pop
bound
std
stc
push
dec
out
fstpt
mov
enter
or
ljmp
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
or
and
xchg
xchg
mov
fildll
fsubrl
dec
add
inc
inc
inc
or
add
push
sti
pop
inc
dec
push
jbe
int3
les
bsf
aas
pop
mov
add
cli
daa
dec
inc
cmpsb
cli
bound
mov
ds
rcr
pop
add
int3
xchg
pop
jb
xor
stc
pop
hlt
gs
cltd
pop
ljmp
jns
jge
mov
arpl
std
sub
aaa
mov
push
mov
idiv
ljmp
or
mov
std
sub
mov
popf
and
pushl
xchg
sbb
shll
jecxz
jb
in
rorl
push
ljmp
cmp
fsubr
jl
mov
cmp
xor
lods
push
orb
jbe
dec
mov
call
cmpsl
dec
sbb
inc
mov
mov
push
add
mov
ljmp
jno
sbb
lds
stos
adc
insb
rcr
xor
bound
repnz
lcall
mov
ret
idivb
push
pop
hlt
jg
rcll
sbb
mov
push
and
scas
daa
fs
incl
cmp
push
push
and
sbb
stos
ljmp
in
scas
sbb
in
aad
out
xor
mov
in
add
bound
pop
lock
push
insb
inc
shll
out
roll
ret
popf
stos
cwtl
adcl
mov
dec
sbb
out
in
mov
jae
sti
jae
std
push
cmpsb
movsb
fisubl
add
pop
mov
mov
jmp
pop
fisubrl
inc
xor
jno
cltd
inc
movsl
fwait
push
sti
dec
mov
jl
push
xchg
xchg
fwait
pushf
negl
daa
addr16
and
lcall
loope
imul
push
dec
std
ret
push
adc
jb
call
mov
out
mov
fwait
shll
xor
mov
cltd
lret
stos
cwtl
decl
xor
aaa
cmp
popf
aad
xchg
into
or
cmp
xchg
jmp
in
repz
lea
push
enter
add
ja
fs
dec
les
xchg
filds
mov
jp
xor
sbb
gs
out
lea
pop
dec
pop
je
out
test
rorl
loopne
imul
ljmp
sbb
sub
imul
es
daa
adc
sub
das
jbe
pop
lcall
mulb
lock
mov
pop
push
dec
xchg
xor
aam
pop
jl
js
add
movsl
lods
fcos
cmp
cmpsb
addr16
xlat
sub
cmpsb
insb
insl
and
imul
into
push
rcll
adc
ljmp
pop
mov
push
jg
cmc
cli
cmp
push
test
add
adc
fwait
stos
arpl
pushl
aam
test
fmul
mov
push
add
mov
jle
cmp
call
lret
sarb
jle
cmc
iret
rorl
mov
test
stos
mov
adc
or
xor
mov
and
jmp
imul
push
push
pop
and
jg
mov
xlat
jo
lcall
mov
movsb
incl
mov
shll
xchg
out
mov
call
mov
adc
in
fldcw
adc
cld
pusha
daa
ret
jg
fistps
jl
fwait
adc
ret
imul
dec
and
jg
inc
std
adc
mov
cmpsl
jnp
scas
loop
mov
cli
ljmp
add
mov
lcall
inc
outsb
arpl
cmpsl
mov
sbb
int
stos
cmp
xor
pop
ja
pop
divb
int3
dec
cmp
inc
add
mov
fisubrl
test
call
or
fdivp
inc
out
jge
jnp
push
xchg
dec
repz
dec
push
jmp
std
sbb
call
cltd
pop
sbb
lds
popf
xchg
popa
sub
scas
push
cmp
push
lcall
out
fdivrl
ss
mov
jmp
lret
cmp
in
push
xchg
repnz
pushl
bound
add
pop
jno
repnz
jne
repnz
not
mov
lock
imul
sahf
pusha
jns
and
cmp
sahf
add
incl
ds
inc
fiaddl
repnz
xchg
call
xchg
cmp
lret
inc
into
push
call
mov
pop
sarb
in
negb
dec
arpl
fs
arpl
xchg
test
push
mov
cvtps2pd
int3
dec
test
sbb
dec
imul
mov
fiadds
lcall
cmp
xchg
mov
out
mov
jo
push
jmp
movsb
test
rcrl
pop
or
xor
push
ror
andl
push
fcmovnbe
ror
sub
pushl
add
jae
aas
add
ss
mov
inc
xor
cmpsb
jecxz
mov
call
in
sub
xlat
push
cld
lret
or
or
xchg
xchg
in
xlat
lret
mov
aas
mov
jnp
push
cwtl
es
jl
sbb
sahf
addr16
dec
xor
les
andl
mov
xor
jne
decl
jmp
push
jbe
mov
insb
stos
jb
xor
and
xchg
jmp
mov
push
xor
xchg
ret
or
stc
js
mov
inc
mov
icebp
pop
fidivrs
daa
call
adcb
mov
adc
pusha
mov
call
sbb
imul
jp
cmp
cmc
jmp
fisubl
outsl
mov
jnp
test
repnz
ret
mov
call
subl
cmp
add
inc
mov
mov
push
popa
jg
sahf
sub
cmp
arpl
outsb
mov
pushf
jmp
adc
xchg
lock
leave
mov
dec
iret
fcomps
inc
test
xchg
xor
add
push
fs
decl
gs
mov
sub
daa
pop
xor
std
pop
jmp
jmp
in
sbb
mov
pop
jmp
scas
push
mov
push
dec
test
xchg
dec
iret
xchg
push
dec
decl
or
cli
xchg
push
xchg
lret
push
sbb
add
cltd
pop
mov
aas
enter
mov
lcall
mov
enter
pushf
aaa
adc
jp
xchg
cs
stos
xchg
jg
movsl
xchg
sbb
jg
xchg
xor
mov
pop
inc
imul
in
xchg
fadds
or
pushl
aam
cmp
add
cmp
lea
sarb
jmp
loop
ret
sbb
xchg
cmpsb
aaa
and
jp
adc
cmp
mov
mov
pop
in
xor
iret
jb
cmp
dec
and
cmp
mov
call
addr16
mov
cmp
aaa
sbb
pop
cld
adc
ret
mov
aad
mov
push
dec
cmp
movsl
movsl
xchg
sub
aam
cmp
sub
out
add
dec
lret
cmp
jne
cwtl
mov
xchg
imulb
popf
adc
loopne
inc
xor
pop
out
mov
data16
lahf
cmp
mov
adc
incl
aas
fwait
cmpsl
in
js
and
mov
or
sbb
ja
sbb
add
sahf
arpl
ljmp
lret
imul
test
cmp
addl
lock
fisttps
mov
push
xchg
out
movsl
or
das
lock
mov
repz
xchg
mov
push
mov
sbb
movsl
lcall
pop
aad
fsubrl
cmc
je
jp
dec
lret
cbtw
outsl
fnstenv
aam
xor
jp
sub
pop
in
pushf
test
mov
je
xor
out
mov
pop
bound
pop
pop
sahf
xchg
push
mov
mov
jb
jg
jmp
fsubs
mov
jl
int
mov
addr16
pushl
jmp
push
adc
cwtl
shl
fwait
jo
stos
and
in
loopne
or
add
fiadds
std
sahf
mov
pushf
adc
and
mov
into
lcall
incl
jmp
outsb
push
loope
mov
movsl
mov
add
movsl
mov
test
aaa
ljmp
add
imul
mov
lcall
xor
inc
sub
orl
cmp
adc
jl
jno
dec
sbb
push
mov
mov
pop
sbb
mov
sub
test
jp
lahf
sbb
inc
ret
dec
arpl
scas
jp
xchg
mov
call
jns
js
ds
cmp
xchg
push
pop
push
lds
test
ljmp
mov
leave
sbb
repnz
jbe
pop
out
iret
cltd
enter
sub
mov
lahf
sub
xchg
xor
in
arpl
pop
daa
inc
or
pop
fcmovnb
insl
jmp
in
sar
incl
pop
out
mov
jbe
sub
gs
cli
lds
push
and
loopne
push
addb
mov
adcb
pushf
cmpsl
mov
jno
sub
sarl
fidivrl
push
out
imul
mov
push
pusha
imul
mov
cmpl
xor
sahf
or
mov
mov
test
mov
cltd
pop
mov
pop
popa
push
adc
outsl
test
sbb
mov
pop
mov
pop
iret
in
idiv
push
dec
test
fisubl
sarb
call
outsb
and
push
lds
ret
mov
and
fsts
dec
dec
jne
mov
lods
mov
stc
xchg
push
ljmp
jecxz
pop
mov
xchg
ss
sbb
mov
mov
pushl
jle
dec
inc
incl
shlb
mov
push
in
je
dec
stos
scas
xorb
dec
mov
jbe
or
mov
mov
gs
imul
jge
out
mov
sbb
lcall
out
out
je
testb
push
sub
add
push
repnz
mov
cli
mov
sbb
movsb
idivl
jl
pushl
mov
xchg
addr16
jecxz
popf
mov
daa
mov
popa
push
loopne
movsb
call
ljmp
jmp
ljmp
loope
and
fs
adc
mov
mov
notl
add
pop
cmp
xlat
movsb
xor
inc
mov
adc
lcall
fmuls
mov
xchg
lea
ret
dec
and
out
sub
push
repz
pushl
pop
jecxz
repnz
push
sub
sub
jg
cwtl
xor
out
addr16
pusha
inc
test
ljmp
inc
adc
lcall
xor
xchg
push
pop
mov
sub
fcmovu
jns
add
call
adc
or
pop
fwait
mov
push
hlt
and
dec
mov
pushl
test
out
jecxz
dec
mov
sub
dec
jns
int
clc
loopne,pt
xchg
fcomip
call
out
mov
push
inc
adc
adc
push
xlat
push
lcall
sub
mov
mov
push
inc
sahf
lret
flds
sbb
loopne
inc
sbb
decl
push
dec
mov
add
imul
sub
and
jnp
dec
movsb
roll
movsb
add
scas
cmp
push
inc
and
push
js
sbb
sub
inc
es
into
xchg
scas
mov
and
xchg
mov
cmpsl
mov
test
pop
or
pop
and
adc
sbb
jge
nop
push
pop
sub
jle
push
pop
test
cmp
mov
jmp
xor
cli
cmc
dec
in
mov
pop
loopne
mov
xchg
fwait
pop
sbb
mov
mov
je
shlb
decl
movsl
mov
popf
clc
pushf
ss
inc
jnp
jbe
push
out
jmp
hlt
std
inc
ss
xor
and
xchg
sub
out
cwtl
dec
dec
dec
jle
push
xlat
mov
inc
jbe
or
jmp
xchg
mov
ja
inc
adc
jg
push
in
pusha
out
pop
ffree
shrb
inc
pushf
or
gs
mov
insb
lcall
mov
adc
xor
negl
cmp
mov
aad
push
mov
orb
ljmp
iret
lods
loope
mov
fimull
je
jp
jb
idivl
pop
or
call
mov
andl
jbe
adc
jge
fwait
decl
pop
inc
fwait
cmc
dec
sub
addr16
fisttps
stos
mov
adc
jg
mov
addr16
mov
and
jmp
xchg
lret
mov
int
fdivrp
repnz
xlat
decl
out
pushl
adc
pavgb
xorb
mov
pushf
inc
jae
lahf
cli
mov
and
push
inc
push
pop
stos
jae
inc
shlb
push
mov
sub
incl
inc
clc
lock
push
sti
xor
dec
pop
cmp
push
aad
clc
pop
push
stc
sub
pop
sbb
call
mov
sub
jnp
hlt
jns
dec
lea
bound
push
add
aam
scas
mov
jl
push
test
call
lock
xchg
and
cmpsb
add
mov
sub
gs
sub
ljmp
dec
scas
sub
aaa
insl
sbb
jo
mov
cli
jp
lahf
cmp
sub
das
pop
in
out
mov
shll
hlt
lds
dec
fidivl
push
sar
mov
pop
jb
xlat
xlat
ss
sub
and
mov
into
in
dec
ljmp
dec
add
in
aam
shlb
in
pop
outsl
dec
movsl
push
and
mov
mov
add
push
movsl
mov
mov
xorb
cmpsl
xchg
lret
xor
es
jmp
incl
cmp
outsb
mov
stc
in
jecxz
and
cld
sarl
les
lcall
xorl
shlb
pop
push
jmp
push
xor
rsqrtps
test
push
jo
and
stos
mov
pop
mov
and
pop
sub
rclb
ret
xchg
push
or
or
or
call
xor
test
cwtl
pop
or
movsb
popf
in
bound
lcall
inc
aam
andl
mov
movsb
jnp
pop
popa
or
ljmp
inc
outsl
movsl
pop
jbe
movsb
test
out
mov
pop
dec
bnd
icebp
pmulhw
test
fcoml
and
push
mov
pushl
leave
test
dec
fcoms
shlb
roll
shlb
mov
jmp
sub
dec
and
fisubrs
dec
nop
sbb
and
mov
mov
push
push
adc
xor
inc
call
std
and
idivl
lcall
sbb
xchg
xchg
decl
mov
das
popf
xchg
scas
mov
inc
sub
and
sbb
pushl
xorl
add
lods
adc
pop
mov
fbld
or
jmp
jae
sti
push
sbb
sti
ds
fcomip
sbb
in
jns
leave
les
push
out
dec
scas
mov
outsl
scas
hlt
lods
add
sahf
fcomip
pushl
js
outsl
loopne
push
out
rorl
mov
test
fwait
aaa
mov
mov
mov
xchg
xor
jmp
or
sub
jg
shl
add
and
scas
or
mov
in
dec
call
pop
sar
call
sbb
mov
iret
push
inc
incl
xor
xchg
aad
dec
jle
pop
mov
divl
jl
loop
inc
cmp
push
aam
ljmp
dec
rorl
jnp
aas
cmc
jl
ffreep
lea
out
jae
and
decl
lock
jo
mov
data16
aaa
pop
cmp
adc
decl
sbb
out
lock
mov
js
sbb
jl
ret
fists
inc
mov
lods
loop
jl
adc
mov
cld
mov
shlb
fdivr
out
jge
or
pop
dec
sbbb
sub
xchg
cli
aad
rcll
ficoml
out
ljmp
es
jbe
outsl
pop
mov
jl
xor
xor
or
and
jp
and
scas
cli
pushl
lods
loopne
adc
aam
ljmp
fidivl
cmp
movsb
lcall
jg
ds
sbbb
movsl
scas
inc
adc
pop
dec
jg
gs
lcall
dec
jbe
sarl
pop
sbb
std
sbb
sti
cmp
mov
and
cmp
lcall
sbb
and
pop
adc
cmpl
lret
cmp
sar
incl
test
jns
addl
dec
dec
mov
adc
dec
or
push
loop
and
incl
dec
daa
test
std
sub
addr16
cmp
testl
dec
cmp
out
add
mov
ret
jae
pop
arpl
incl
push
and
sub
mov
xchg
shl
daa
inc
int3
push
and
mov
jmp
inc
and
inc
in
iret
jg
inc
pusha
rorl
mov
add
xchg
cmp
pushl
jo
xchg
inc
push
xchg
add
iret
test
rclb
scas
xor
pop
lods
ljmp
push
sbb
dec
pop
jae
arpl
aaa
jb
xor
insl
aas
lcall
sbb
pusha
divl
cltd
dec
andb
in
or
push
ud0
ljmp
movsb
inc
pop
clc
fmull
inc
mov
les
cs
hlt
mov
test
rolb
loop
inc
push
ds
and
cli
jne
ljmp
cld
fnstsw
inc
xor
outsb
rclb
into
sbb
or
and
fwait
push
andb
dec
mov
pusha
cld
inc
outsl
call
sbb
jecxz
jg
into
mov
or
mov
imul
dec
ret
xchg
shll
jg
ljmp
pop
call
sar
cmp
dec
or
pop
xchg
add
rorl
jno
lcall
add
sub
jnp
rcl
jmp
inc
cs
lret
cltd
decl
sbb
pop
outsl
aam
fs
inc
dec
push
repnz
aaa
jge
lds
arpl
inc
dec
xchg
xlat
call
test
loope
sub
sub
or
lahf
insb
pop
xorl
orb
push
in
adc
mov
popf
int3
sub
mov
mov
pusha
loope
cmpsb
push
mov
xor
pushl
cwtl
stc
cmp
les
push
fcoms
out
ret
pop
sbb
xlat
daa
pop
xor
pop
inc
xchg
dec
daa
insb
and
incl
fs
nop
jge
xchg
in
out
imul
jge
incl
mov
ss
jmp
mov
call
add
pop
cli
mov
mov
xchg
and
cli
decl
fwait
jb
call
add
stos
fimull
popa
and
aad
push
jp
iret
in
call
cmp
or
adc
decl
mov
call
or
arpl
ret
push
pop
add
stc
aad
stc
mov
inc
sbb
jle
fwait
dec
and
loope
add
adc
ljmp
and
adc
push
call
jo
stos
lods
stc
ja
adc
sub
dec
mov
test
andl
fisubrl
push
call
test
lods
out
divb
cmpsl
inc
mov
out
mov
fs
lahf
pop
jmp
rcrl
pop
fdiv
in
push
inc
cmpsb
daa
xchg
stc
inc
lcall
outsb
iret
pop
mov
pop
add
std
fwait
aam
fstps
push
or
out
cmp
lcall
add
push
daa
ja
call
stc
std
mov
mov
sbb
lret
or
decl
divps
fildl
mov
sarb
pop
sbb
jg
jne
fisubl
rolb
mov
mov
into
les
or
mov
call
pop
pop
sbb
xor
xor
jae
mov
lods
insl
outsb
test
sbb
adc
jae
dec
shll
dec
mov
movsl
pop
mov
dec
sbb
pslld
mov
repnz
ljmp
loopne
call
sbb
pop
add
shlb
jl
sbb
dec
pusha
inc
movsb
ljmp
int
testl
inc
aam
pop
imul
incl
call
pop
add
lahf
test
nop
ret
das
loopne
pop
xchg
ljmp
arpl
shrl
inc
add
push
push
sbb
addr16
leave
outsb
jmp
inc
scas
add
mov
mov
pop
ljmp
and
cltd
pop
in
mov
add
push
cltd
inc
minps
lcall
pop
xchg
pop
in
daa
imul
jmp
outsb
lds
ds
icebp
fstpt
xor
fcoml
arpl
jae
mov
or
pop
sbb
mov
mov
hlt
into
and
imul
cld
clc
pop
or
pop
push
in
cld
push
cs
test
pushl
bound
jo
cli
lods
stc
inc
push
inc
mov
jne
lret
xchg
mov
inc
adc
ficompl
pop
and
fists
outsb
loopne
mulb
jno
sbb
fldenv
mov
sbb
data16
push
int3
in
stos
sbb
call
into
dec
jo
and
and
cmp
pop
testb
fiadds
sub
iret
xchg
adcb
sub
addr16
pushf
xor
add
pop
mov
test
inc
jns
xchg
push
inc
sub
jl
pop
call
xchg
mov
mulb
imul
imul
pop
lds
jnp
pop
pop
lret
mov
or
mov
call
lea
sar
jg
pusha
jg
mov
add
aaa
pop
push
mov
sub
je
jl
and
out
pop
mov
ljmp
lods
out
test
out
jmp
push
xchg
jb
pop
dec
push
test
out
and
xchg
sbb
popa
std
jmp
xlat
push
xchg
and
xchg
fcmovne
icebp
mov
leave
out
loop
inc
push
adc
decl
cmp
mov
std
call
rclb
pusha
sbb
shl
je
rclb
push
cmp
mov
cwtl
jbe
and
test
aad
shlb
xor
adc
loope
stc
shlb
mov
fsubrs
test
les
stc
add
adc
push
outsb
data16
clc
shrb
rcr
aad
pop
call
pusha
aaa
mov
rolb
mov
mov
popf
inc
jl
movsl
add
incl
ficoms
xor
cmp
cmpsl
xchg
mov
enter
push
and
sti
push
push
into
mov
push
or
push
mov
or
jb
xchg
mov
xor
sbbl
js
cmp
in
aam
inc
adc
lock
movsl
lods
inc
repz
loope
xor
arpl
pop
cld
jmp
rorb
cwtl
int
xchg
outsl
add
and
pop
test
popf
ret
fwait
jg
or
insl
ud2
inc
jbe
jle
test
in
scas
mov
jne
adcb
nop
push
inc
repnz
incl
push
xchg
add
outsb
daa
insb
cmc
shlb
jno
daa
pop
pop
outsl
les
mov
lods
xor
dec
jle
cmp
and
loopne
push
out
cs
in
inc
jns
ret
adc
into
and
add
jmp
fcmovnu
mov
mov
jmp
test
mov
ljmp
xchg
stos
mov
cmpsb
fimuls
aaa
jns
stos
xchg
pop
notb
pop
xor
dec
jg
decl
mov
pop
in
cmp
insl
rcrb
stos
dec
std
cli
xorl
in
fidivrl
fiaddl
lret
das
jp
stos
push
bound
xchg
dec
ljmp
sbbl
icebp
test
inc
test
add
push
daa
sar
outsb
fwait
push
and
or
imul
enter
call
inc
shl
pop
cli
pop
fsubl
popf
sbb
inc
in
mov
les
cli
ljmp
inc
sti
push
outsb
movsb
ja
mov
mov
ljmp
fstpl
shlb
hlt
fs
sahf
pusha
or
inc
shlb
ja
cmp
fcomi
repnz
call
cltd
xor
ljmp
in
cmp
push
jb
aad
hlt
stos
repz
mov
mov
xchg
aas
mov
push
mov
and
jecxz
sbb
clc
xchg
pop
cmp
xchg
jmp
xchg
xor
push
js
into
lcall
arpl
or
mov
filds
adc
mov
mov
movsb
pop
cwtl
clc
or
sahf
or
mov
orb
mov
dec
neg
push
lcall
icebp
aam
add
shlb
in
jo
sub
cmp
mov
in
scas
jmp
sub
xchg
call
cmpsb
adc
sbb
sbb
lret
je
cmp
sub
arpl
out
push
dec
int
out
insl
repnz
adc
ljmp
ss
cmp
sub
loopne
fnop
int
aas
push
fstl
mov
pushl
adc
fsubp
dec
insb
leave
mov
leave
lods
mov
fmulp
inc
push
cmp
fadd
lcall
andb
fs
cmp
imulb
fcomps
mov
repnz
rcrl
pop
in
lds
ljmp
cli
add
gs
jg
fbstp
scas
lret
xlat
outsl
cmp
fs
scas
in
icebp
fstpl
mov
call
cmp
push
je
and
jg
push
inc
jnp
subb
call
or
stos
gs
add
cmp
fldt
fs
stos
xchg
push
lret
iret
cmpsl
sti
xor
add
vmaxps
fistps
add
call
cmpsb
adc
cmpsl
lock
xlat
test
rcll
out
jg
jmp
jg
fadd
mov
aad
incl
push
orb
xor
std
data16
or
loop
repz
les
je
stos
add
std
cmp
shlb
lcall
lea
adc
leave
mov
call
aad
xchg
xlat
cmpsl
or
scas
cli
pop
and
cwtl
aad
mov
fsubs
je
mov
outsl
mov
enter
cs
push
cmp
sti
jno
xor
imul
sar
pusha
lahf
mov
xchg
cld
jmp
or
call
mov
sub
jb
pop
ret
cli
jge
test
xor
and
jecxz
decl
scas
and
mov
add
loope,pn
dec
adc
ljmp
mov
fistpll
jl
jns
jns
das
enter
cmp
inc
pop
in
addb
lret
xchg
divb
cwtl
xchg
mov
loopne
mov
repnz
sbb
xchg
cwtl
mov
mov
pushl
aas
adc
mov
aaa
adc
cmp
iret
mov
jbe
inc
fwait
adc
lcall
adc
test
ljmp
xor
mov
ja
les
inc
addl
clc
jae
or
push
out
mov
cs
push
stos
mov
sar
fdiv
cmp
inc
jns
jno
test
aas
push
insl
and
cmp
call
loop
dec
ret
add
dec
inc
repz
xor
xchg
lods
mov
cmp
push
and
mov
pushf
jg
cmp
fldcw
push
pushf
loop
or
push
aad
xchg
jp
push
stos
lcall
jmp
dec
push
xlat
cmpb
pusha
outsl
pop
cmp
cmp
ljmp
pop
inc
int3
cmp
push
fwait
or
push
xorb
movsl
bound
or
stos
mov
shll
jecxz
das
cmp
dec
sbb
cmp
inc
call
js
dec
and
leave
test
lret
in
cmpsl
rclb
movsb
cmc
inc
lock
imul
mov
sub
int3
shll
les
jle
lret
cltd
fbld
into
idivb
dec
int3
lret
into
jae
icebp
in
jo
sbb
cli
lcall
loopne
xchg
xchg
in
lahf
leave
sbb
lret
sub
jmp
pop
loope
xor
inc
mov
jne
push
call
mov
enter
push
aas
testl
xchg
fxam
outsl
fcomi
cli
push
addr16
in
mov
adc
stos
sub
mov
inc
incl
mov
and
push
fbstp
arpl
call
ljmp
in
int
negl
gs
mov
jns
push
addr16
and
cmp
pushl
sbb
push
fs
andb
sti
call
orl
ljmp
cwtl
leave
cmpsl
and
jbe
cmp
hlt
push
int3
ret
mov
sub
ljmp
mov
std
mov
les
pusha
xchg
pop
insl
cli
fwait
add
or
xor
outsb
push
in
pushl
sub
fwait
dec
and
mov
iret
mov
out
inc
mov
lcall
stos
mov
adc
ljmp
icebp
sub
fistl
mov
sahf
loop
cmc
mov
xchg
stos
movsb
and
call
or
clc
lcall
adc
pop
in
sub
push
inc
movsl
push
mov
inc
outsl
mov
sub
sarl
popf
je
mov
mov
imul
scas
repnz
xchg
jl
jl
test
call
sub
cmp
lahf
je
inc
inc
insb
mov
push
jnp
push
in
incl
or
fsubl
out
ss
loopne
dec
mov
sbb
fcomps
sbb
push
cmp
lcall
scas
adc
out
inc
or
jbe
add
gs
repz
movsb
test
pop
stos
mov
lcall
inc
jmp
lret
mov
dec
lock
test
pop
hlt
or
lds
pusha
test
decl
push
outsl
inc
mov
sarb
test
ds
adc
pushl
out
xchg
cs
push
lcall
pop
shll
inc
ret
out
inc
out
jmp
mov
sar
pcmpgtw
pusha
mov
imul
cmp
push
mov
sti
icebp
call
ljmp
mov
sahf
pop
push
adc
pushf
sti
jg
mov
orb
or
add
das
out
fsub
adc
push
and
jle
add
icebp
hlt
inc
push
int3
dec
in
fistpll
dec
cs
sbb
fldl
cmp
adc
jmp
jmp
data16
inc
pop
data16
and
in
xchg
mov
popa
pop
sub
jne
aaa
mov
mov
call
subl
adc
out
pop
roll
sbb
scas
sbb
out
push
mov
xor
decl
adc
and
sub
inc
fcoml
fwait
jecxz
stos
mov
dec
dec
mov
inc
shrb
jecxz
pop
lret
daa
dec
cltd
pusha
jmp
xchg
fstpl
jmp
sbb
loop
mov
and
pop
dec
xchg
mov
sbb
xchg
pusha
jne
add
stc
add
mov
cmp
adc
addr16
shrb
mov
inc
cli
incl
inc
into
sbb
data16
add
call
mov
cmp
popf
dec
cwtl
mov
insb
dec
inc
xor
dec
add
call
cmpsl
jo
jne
mov
push
sbb
test
fcoml
js
sbb
and
ss
cli
mov
ss
mov
test
inc
shr
movsl
mov
fsub
xlat
push
out
repnz
sahf
repz
roll
add
sbb
das
shl
imulb
push
lea
decl
add
xor
mov
mov
mov
xor
cwtl
xor
add
popf
in
scas
sbb
fisubs
inc
add
mov
insl
xchg
outsb
test
or
fsubrs
ja
mov
lret
inc
pop
adc
mov
call
or
jg
inc
mov
mov
push
cld
dec
icebp
jl
fs
call
mov
hlt
out
jbe
out
sbb
aas
push
inc
ss
xor
pushl
adc
mov
mul
popf
push
mov
cwtl
ja
sub
sbb
adc
push
lret
sbbb
loope
bound
ret
sub
inc
lahf
jnp
push
aad
imul
sub
sub
clc
fdiv
pop
xor
mov
aas
movsl
and
lcall
cld
inc
sahf
inc
dec
cmpsb
sbb
mov
dec
clc
jg
fisubrl
and
mov
sti
fiaddl
add
mov
fstl
mov
stc
incl
loope
dec
jmp
stc
cld
push
push
js
fcoml
out
popf
push
jmp
imul
lcall
xor
dec
mov
ds
mov
cmp
sbb
ja
jecxz
jmp
fs
sbb
pusha
mulb
pop
hlt
int3
aas
jg
fwait
lret
push
addr16
leave
ljmp
aaa
std
call
scas
js
pop
stc
es
dec
pop
roll
or
dec
and
jmp
es
jle
mov
sbbb
ljmp
test
subl
adc
incl
xorb
lods
in
pop
push
in
jmp
mov
and
ljmp
loope
jbe
aaa
sub
or
cmp
xlat
dec
jg
sub
ljmp
ret
lock
subl
mov
adc
mov
or
sti
pop
ret
andl
lahf
fiadds
pushl
leave
js
adc
jbe
sub
es
jp
movsb
stos
jns
loop
push
call
add
decl
mov
out
aam
inc
mov
sahf
push
dec
mov
pop
js
out
mov
inc
adc
inc
fcomps
adc
sub
cmp
shll
movsb
mov
push
decl
out
jmp
push
rorl
sbb
subl
or
out
popa
call
jno
cmp
movsl
rcll
sahf
adcb
pushf
test
lcall
cwtl
adc
add
aas
pop
push
ljmp
sub
pop
idiv
pushl
std
and
add
stos
lcall
sbb
xor
ljmp
mov
cmc
ficomps
xchg
add
out
sub
push
push
dec
push
push
out
lods
inc
adc
jmp
out
cli
lcall
push
std
ja
stos
jg
or
pushf
loope
push
xor
bound
dec
ret
lcall
push
adc
cmp
test
adc
xchg
jae
mov
sti
out
roll
jmp
lcall
pop
mov
and
imul
sub
lock
xor
push
xchg
imul
mov
fistps
lods
mov
cmpsb
test
lahf
mov
pop
sbb
xchg
ljmp
hlt
sbb
mov
inc
push
orl
gs
arpl
decl
lods
push
mov
inc
jns
xchg
jge
jbe
and
popa
enter
jno
aas
jbe
sahf
mov
leave
or
aad
cwtl
lcall
iret
ret
xor
les
pop
pop
icebp
decl
jnp
push
jbe
inc
cmp
push
outsl
cltd
or
and
lea
jne
stc
fimull
mov
sub
cwtl
enter
jle
test
add
jne
fsubrs
mov
stos
and
dec
push
pop
sbb
and
mov
lock
jg
adc
clc
inc
and
test
dec
push
push
fidivs
mov
xor
ljmp
pop
pop
jmp
pop
ds
fwait
insb
std
aaa
pop
clc
push
and
cmpsb
xchg
jmp
incl
loop
stos
and
cli
xor
ffree
roll
dec
bound
imul
ljmp
sbb
xor
pop
dec
cltd
sub
push
out
icebp
adc
add
ja
scas
xchg
icebp
adc
xchg
mov
cli
push
gs
inc
xlat
sub
test
push
data16
lcall
hlt
stos
jne
mov
clc
pop
jbe
pop
add
negl
out
sarb
mov
jmp
pushw
sahf
xchg
test
push
sbb
pop
inc
out
jmp
lock
ljmp
mov
in
lret
out
outsl
addr16
jnp
push
jno
adc
std
dec
call
aaa
std
xchg
push
inc
sbb
cs
and
add
lea
cmp
lcall
mov
repz
sahf
pop
pop
fidivrl
mov
int
mov
out
and
push
mov
jg
stos
insb
cld
inc
stc
in
push
jnp
shl
out
stos
mov
cld
pop
mov
add
push
push
call
dec
aam
lret
shll
or
and
push
cmp
rcr
popf
mov
xlat
xchg
pushf
dec
mov
call
aad
loopne
insb
scas
mov
scas
test
lcall
repz
xchg
mov
mov
mov
xor
cmp
sbb
cld
dec
imul
xor
mov
mov
mov
mov
daa
leave
cmp
pop
jge
inc
dec
xchg
out
mov
inc
outsb
mov
xor
mov
jmp
push
fwait
mov
test
call
stos
aas
cmp
mov
das
jno
sbb
mov
xor
and
fcmove
dec
dec
aaa
loope
add
mov
ss
insl
ja
or
mov
mov
loop
inc
in
inc
xchg
and
lock
icebp
jp
mov
inc
xor
loop
loop
decl
cltd
leave
fidivrs
scas
sub
fs
fwait
xor
or
call
test
push
lock
jp
hlt
out
out
add
fisubs
mov
aas
mov
adc
push
cld
hlt
adcl
mov
push
xor
stos
lcall
cli
dec
mov
dec
pop
xchg
lret
mov
add
mov
ljmp
in
mov
and
lahf
int
int
xor
mov
jno
add
pushl
xor
mov
cli
jle
xor
hlt
in
jb
repnz
lock
incl
loope
jge
adc
sub
xor
popf
clc
fwait
shlb
push
out
xor
mov
into
dec
addr16
push
inc
fwait
ret
loop
jnp
movsl
xor
mov
lcall
pushl
and
shlb
sub
shll
insl
pusha
aaa
push
enter
movsb
mov
jmp
adc
push
xchg
inc
jo
jne
mov
dec
pushf
inc
xor
js
pop
pop
lea
call
dec
sub
jb
push
push
cs
lret
mov
push
test
outsl
xchg
out
mov
push
sub
dec
cmp
jae
push
sub
aas
imul
repz
sar
inc
pop
mov
pop
js
push
push
icebp
jbe
shr
out
lret
ljmp
arpl
out
icebp
push
sahf
cs
scas
repz
dec
push
cltd
add
cmpsl
jbe
mov
int
loopne
das
test
ja
popf
jg
gs
push
xchg
shr
add
lcall
into
test
mov
loope
fnstcw
pop
xor
fisttps
push
std
repz
icebp
lcall
gs
incl
lcall
adc
pop
xlat
jl
daa
mov
dec
loop
div
arpl
and
inc
js
sub
or
sub
sub
pop
sbb
mov
add
lcall
jo
inc
aam
pushl
mov
leave
movsb
ljmp
mov
icebp
cmp
xchg
jbe
xor
repz
into
data16
pushf
mov
mov
mov
lds
mov
adcb
jb
jns
xor
sbb
add
add
lods
lcall
jecxz
lret
lods
div
jmp
icebp
pop
cmpl
inc
test
jmp
sti
ljmp
movsb
out
fld
sbb
pop
cmp
ljmp
stos
movsl
mov
push
jbe
jbe
mov
xor
dec
mov
mov
mov
incl
sub
out
hlt
pop
pop
inc
in
fsubrp
push
or
xchg
inc
xchg
inc
stos
repnz
cmpsl
fwait
mov
ss
movsb
sahf
mov
imul
out
inc
or
and
mov
mov
call
rol
mov
xchg
mov
cmp
lock
add
les
or
sbb
cmp
out
mov
lods
cmp
cmpsl
push
les
nop
mov
fsts
cmp
dec
loope
addb
lahf
pop
loope
push
pop
mov
mov
sub
jge
in
xchg
std
pushf
lcall
gs
xchg
lock
stos
jb
or
ss
loopne
pop
nop
sub
aam
stc
test
stc
cmpl
and
push
pusha
pop
lods
sub
mov
in
imul
fucomp
incl
cmp
add
insb
lods
cmp
mov
dec
push
test
sub
mov
rcr
decl
xor
shll
xorb
popa
pop
es
xlat
fs
xchg
jecxz
or
daa
ljmp
lods
or
inc
in
bound
cmp
push
popf
cmpsb
cmp
sbb
in
loop
call
test
sbb
cmp
jne
or
shrb
jb
push
leave
inc
fildll
popa
subl
mov
sub
sbb
adcb
iret
jl
inc
cli
mov
fidivrs
aam
or
fmuls
test
ret
xchg
imul
stos
sbb
das
cli
fldt
cltd
subb
movsl
push
jl
xor
scas
fsubr
cli
xor
or
sub
inc
mov
gs
mov
aas
mov
sti
cmpsl
mov
fistps
inc
cmp
jmp
push
mov
pushl
std
fcoms
dec
in
mov
lods
lcall
aad
and
repnz
mov
jg
jns
push
adc
inc
lds
test
and
adc
test
shl
jl
ljmp
out
sbb
mov
insl
mov
bound
iret
mov
cmp
pop
mov
mov
loopne
xlat
mov
cld
xchg
or
mov
and
fs
xor
rcrl
test
cld
in
mov
or
xor
add
pop
icebp
idiv
icebp
aam
sbb
add
dec
mov
ret
clc
aaa
sub
decl
push
inc
push
nop
icebp
mul
es
insb
push
and
push
push
lds
push
call
inc
test
pop
popa
test
inc
xchg
jo
imul
xor
inc
dec
decl
lock
xorl
out
gs
mov
jle
mov
jbe
add
call
inc
out
lods
fiadds
inc
imul
or
mov
cs
inc
mov
fcmovnu
pop
std
xor
fs
ret
jle
decl
mov
in
pop
popf
testl
cmp
ret
call
or
jns
lds
sub
enter
fldcw
out
test
lcall
xor
jne
adcb
in
and
push
aad
popa
loop
and
jg
lcall
add
je
mov
pop
mov
pop
or
jmp
test
jg
dec
mov
imul
xor
sub
imul
pushl
jge
mov
xchg
test
inc
pop
dec
jecxz
ret
ljmp
xchg
adc
push
sbbb
and
jbe
aad
incl
nop
pop
fsubs
sbb
push
adc
and
ret
jg
mov
jbe
and
dec
inc
mov
aam
jp
shrb
or
decl
xor
loop
or
rcrl
mov
fdivrl
rcr
bound
das
sahf
dec
cmp
call
loopne
or
pop
sbb
fs
int3
push
add
scas
subl
call
inc
ljmp
push
clc
cmp
sub
cmp
bnd
cs
sbb
fcompl
stc
lock
or
aaa
test
lods
sub
and
adc
push
push
dec
push
aaa
mov
mov
jbe
mov
in
outsl
pop
pop
cmpb
mov
adcb
mov
mov
lret
sahf
outsb
stos
xchg
push
enter
shr
jmp
imul
lret
repnz
xlat
popa
inc
sbb
jae
cwtl
lret
lods
pop
mov
mov
cwtl
push
test
dec
cmp
js
cmp
pop
xchg
mov
movsb
std
js,pt
add
xchg
sbb
addr16
cmp
nop
mov
int
repz
stos
les
cmp
dec
push
andb
push
addr16
cltd
inc
lods
mov
xchg
mov
rcr
cmp
jmp
cmpb
sbb
cmp
push
cwtl
test
lret
jmp
push
add
dec
sub
je
les
popf
daa
movsl
dec
cmp
dec
add
loopne
xchg
ret
cli
das
mov
imul
add
add
shll
sub
sbb
push
mov
sbb
icebp
arpl
dec
sub
fidivrs
cmc
les
adc
jmp
popf
mov
push
lods
jg
fnsave
loopne
adc
sbb
adc
push
shll
mov
add
mov
sub
pusha
jle
nop
js
fcomip
xor
lcall
push
mov
cmp
sbb
cmp
ds
sub
ljmp
pop
mov
mov
enter
jmp
push
mov
test
loope
and
imul
lret
scas
std
movsb
fwait
adc
cmpsb
lret
into
adc
test
sbb
sbb
cld
addr16
loop
incl
in
insl
mov
sbb
ds
and
into
dec
cmpsl
lahf
les
loope
pop
dec
jg
jmp
div
jp
pushf
sti
shlb
lds
ss
jbe
outsb
jb
ss
pop
pop
lcall
loopne
push
sub
cli
sbb
fistpl
aad
or
ljmp
jle
push
negb
es
or
lcall
pop
je
fwait
loope
add
xor
xchg
pop
loopne
mov
ljmp
inc
out
mov
sub
dec
add
sub
sbb
in
jne
adc
incl
and
shl
pop
pop
mov
mov
test
xchg
dec
jg
and
cmp
mov
push
xor
adc
into
adc
push
mov
cltd
ficoml
ljmp
xchg
cmc
mov
jl
pop
xor
fidivrl
dec
mov
movsl
les
fsubrl
and
cwtl
xlat
stos
popf
push
cmp
pop
add
cmp
clc
out
clc
jmp
addr16
fstpt
or
add
into
inc
xchg
lods
add
test
pop
cmc
ljmp
gs
pushf
cmpsl
mov
cs
push
lea
test
call
decl
std
dec
jno
push
dec
movsl
adc
pop
call
jmp
call
inc
add
idivb
mov
daa
xor
dec
sub
mov
mov
int3
inc
mov
add
sub
es
stc
lret
mov
idivl
add
lcall
mov
imul
arpl
jge
cmp
bound
test
jmp
dec
popa
int
aas
orl
xor
xor
lcall
mov
pop
test
js
adc
jb
xor
inc
jmp
sub
pop
mov
jmp
rclb
mov
mov
or
daa
nop
daa
push
loopne
dec
cltd
xorl
cltd
ret
sub
arpl
jg
dec
add
ret
imul
adc
shll
aad
xchg
cmpb
mov
and
lcall
ljmp
push
int
adc
into
daa
test
lret
aaa
repz
adc
pop
loop
xor
adc
ljmp
cli
or
popf
mov
mov
inc
mov
movsl
cs
scas
movsl
mov
outsl
push
aaa
sbb
shll
or
mov
mov
cmpsl
mov
lcall
and
inc
iret
push
inc
ja
and
cld
out
pop
add
xor
outsl
lret
mov
mov
sbb
xor
cmp
lock
xor
add
aaa
cwtl
scas
aaa
xchg
pushf
dec
lret
mov
xchg
jle
cld
mov
faddl
xchg
xchg
jno
repz
inc
inc
xor
xchg
mov
xchg
inc
mov
les
mov
adc
fwait
inc
repz
xor
jle
mov
push
push
test
inc
add
popa
fucompp
les
cmp
sbb
jp
movsb
add
icebp
pushl
rcrl
adcb
rcll
hlt
pminub
jg
test
mov
pusha
push
lret
push
adcb
mov
js
movsb
ljmp
dec
fnstcw
mov
arpl
or
push
cli
xchg
imul
out
cmp
pop
lcall
cmp
js
jb
xchg
jae
lahf
sbb
mov
jns
std
xor
mov
push
incl
into
movsl
mov
stos
data16
push
movsb
sub
test
or
ljmp
into
push
js
push
enter
dec
sbb
jmp
cmpl
jmp
dec
jp
jo
pop
cmp
and
inc
add
repnz
sub
jmp
cmp
gs
dec
pop
in
addl
out
orl
sbb
jne
jg
shr
jno,pn
ss
stc
dec
orl
mov
shll
mov
lods
call
jmp
hlt
rolb
cmp
mov
jne
fimull
decl
xor
cmpb
lcall
cmp
mov
add
fldcw
shlb
mov
leave
xchg
pop
cwtl
sbb
dec
jmp
sub
sub
sarb
loop
pushf
ljmp
inc
leave
inc
and
cs
mov
mov
pushf
incl
push
cli
xchg
in
adc
add
mov
mov
jne
sub
pushl
imul
stos
jno
cld
inc
push
adc
mov
cmp
loopne
lods
rcl
enter
call
dec
addr16
pop
jbe
add
push
in
arpl
sbb
mov
hlt
add
ljmp
das
push
jo
inc
pushf
in
push
in
fiadds
pop
aam
inc
cwtl
out
pop
incl
mov
cmp
adc
repnz
in
fwait
adc
test
sbb
loopne
jmp
push
mov
fbstp
pusha
xchg
fs
outsl
adc
pop
mov
push
mov
bound
mov
mov
cmp
or
sbb
js
sub
mov
int3
mov
stos
std
xchg
xor
cmpsb
icebp
sub
xlat
std
movsb
dec
call
lcall
bound
repz
push
in
sti
scas
pop
in
shll
cli
dec
mov
and
mov
mov
mov
cmpsl
sbb
aam
aaa
or
jp
in
xlat
test
cli
cmp
ljmp
push
mov
mov
inc
or
dec
push
ds
fimull
add
ljmp
mov
fidivrs
cwtl
or
aad
dec
jns
jecxz
popa
sub
incl
shrb
fdivp
inc
into
incb
cmp
jge
pop
cmp
inc
pop
cli
call
roll
push
orb
xchg
mov
and
loop
in
push
sar
ja
mov
add
push
or
sbb
adc
xchg
fwait
mov
or
aaa
mov
icebp
pop
mov
loopne
scas
ja
jecxz
pushf
loopne
call
clc
aaa
inc
xor
fwait
sub
xchg
mov
ljmp
mov
pop
sub
dec
mov
bound
je
add
icebp
mov
dec
adc
jmp
add
cmp
imul
lds
xchg
scas
stos
divb
mov
mov
shrl
add
adc
call
inc
or
push
add
push
lock
add
cld
nop
inc
aad
insb
push
popf
cmpsb
lods
fiaddl
mov
mov
adc
sub
hlt
js
in
dec
in
lcall
pushf
outsl
jle
fidivs
scas
pop
or
mov
xchg
imulb
ficompl
mov
ss
lods
or
ljmp
xchg
sub
and
pop
cmpsb
jae
ss
and
lock
lods
and
jle
clc
xchg
mov
stos
mov
mov
dec
inc
arpl
add
mov
mov
clc
jmp
dec
sbb
shl
or
dec
adc
xor
jne
mov
outsl
aad
mov
mov
shll
into
clc
addr16
push
sbb
shrl
call
outsb
insb
in
sub
scas
or
sub
add
inc
dec
std
popa
jmp
sbb
ss
subl
jae
fwait
mov
or
xchg
mov
xchg
lock
mov
add
rcrb
inc
xor
lahf
jb
insl
scas
lock
roll
lret
mov
cmpsl
fldenv
push
mov
in
gs
fstps
lcall
cmp
pop
rolb
ficoms
adc
jp
enter
mov
pushl
pop
xchg
ret
sbb
mov
add
push
aas
mov
push
jmp
ljmp
out
jnp
mov
and
inc
or
xor
xor
mov
cli
ljmp
leave
mov
jge
ret
jp
cmp
in
pop
inc
ficoms
or
inc
jbe
mov
fwait
xor
ficoms
inc
mov
popf
imul
jp
shlb
lock
leave
xor
xchg
mov
xor
cmp
test
fnstcw
jg
dec
std
hlt
jmp
xchg
mov
popa
xchg
push
cli
lods
dec
inc
sahf
mov
mov
lcall
push
adc
cld
pushf
mov
inc
or
sub
mov
sahf
roll
incl
pop
jno
mov
add
jmp
sarb
call
outsl
mov
fcoml
enter
or
nop
hlt
shrl
aaa
pop
inc
les
cmp
ljmp
js
test
icebp
jbe
rol
cmp
repnz
jo
or
fdivr
push
push
cmp
out
inc
xchg
pop
and
pusha
call
ljmp
clc
jo
lret
sbb
pop
jg
mov
orb
fnsave
push
pusha
jb
aaa
das
movsb
mov
inc
mov
fwait
cmp
xor
icebp
adc
fists
ljmp
ret
in
cmp
jl
shrl
sub
cli
jmp
call
test
mov
mov
ljmp
iret
mov
cmp
das
imul
sbb
mov
cld
add
jns
jg
loop
sbbb
icebp
iret
and
or
iret
sbb
repnz
mov
das
hlt
push
mov
jae
jl
mov
fisubs
mov
decl
jno
cmpsl
inc
push
cli
lea
add
sbb
aas
and
idiv
lea
xlat
hlt
sahf
pop
sbb
add
ret
jmp
dec
push
mov
jle
dec
xlat
sti
adc
fwait
push
push
add
fsubrl
adc
jno
in
ljmp
mov
stos
inc
push
push
and
dec
xchg
fcmovnu
dec
fstpt
fistpll
inc
jo
dec
out
inc
repz
jnp
aad
shrl
xor
xchg
movsl
cmc
mov
movsb
and
xorb
jmp
sub
or
iret
das
or
and
pop
enter
sub
aad
movsb
andl
ljmp
ret
push
lods
sbb
insb
lret
ja
sbb
sub
dec
or
loop
int
pop
addr16
sbb
adc
push
fstpt
add
cmp
out
mov
lahf
faddl
mov
inc
mov
push
in
sti
adc
fmuls
cmp
int3
adc
mov
imul
push
sub
mov
popf
leave
dec
adc
sbb
jno
mov
push
gs
sahf
out
ljmp
xor
aad
sub
pop
out
dec
notb
xchg
pop
add
dec
push
pop
js
mov
push
pusha
pop
loop
jnp
jbe
xchg
mov
loopne
cmpb
repnz
push
inc
xchg
pop
fwait
sbb
mov
dec
ret
xlat
and
test
scas
sub
dec
jnp
mov
push
sub
push
xchg
sti
stos
out
cmpsb
hlt
in
dec
pop
fdivl
subb
popa
mov
das
mov
pop
sar
push
jge
inc
push
call
arpl
adc
mov
insb
mov
sbb
lods
push
pop
lods
push
je
out
dec
push
jnp
or
jg
movsl
lcall
or
sub
xor
cwtl
lret
lret
rep
call
repz
ret
icebp
or
loope
jns
dec
and
fsubrs
pop
inc
incl
scas
decl
addb
hlt
mov
cwtl
gs
cmp
fcomip
jp
nop
fmull
gs
cmp
cli
adc
cmpsl
xchg
xor
pusha
and
or
lahf
cli
mov
adc
pusha
cli
mov
inc
pop
inc
lea
xchg
mov
pushl
lret
icebp
mov
mov
fsts
xlat
ljmp
and
mov
mov
or
cmpsb
cld
xchg
setb
add
lds
dec
push
in
pop
jmp
pop
not
push
push
xchg
daa
or
jne
and
or
sarl
inc
lcall
pop
cmp
decl
xchg
pop
lret
and
mov
adc
adc
pop
cmpsb
arpl
jns
inc
mov
addr16
addb
hlt
pop
mov
aas
inc
push
shrb
fcomip
enter
jg
pop
cmp
fidivl
xchg
xor
push
or
test
leave
testb
incl
jecxz
daa
fs
ja
or
mov
movsl
jmp
fidivs
fsub
daa
int3
loope
decl
leave
scas
pop
dec
sbb
mov
loope
sub
push
adc
xchg
jb
mov
sub
push
ljmp
je
rorl
lods
cltd
sbb
lock
cmp
cmpsb
insb
mov
pop
incl
movsl
divl
js
adc
add
jb
cs
jge
jmp
inc
and
mov
xor
leave
mov
push
jo
into
decl
xor
adc
das
sub
ret
daa
fsubl
pop
pusha
loop
cmp
xchg
mov
je
mov
ja
dec
fcomip
jae
out
jl
push
jp
mov
les
pop
repnz
lcall
sub
fistl
aad
cmp
sbb
cmp
lahf
rclb
fnsave
mov
push
add
cmp
cli
jg
inc
subl
rcll
dec
lods
sub
dec
pop
pushl
push
jmp
add
cmpsb
inc
xchg
cmp
adc
psrad
and
aas
int3
push
jb
lcall
and
pusha
arpl
fwait
in
mov
pop
movsl
mov
adc
xor
sub
xchg
dec
data16
shll
sbb
out
dec
jg
jbe
or
popl
pop
xor
rcr
test
outsl
pop
jbe
adc
call
sbb
push
sub
mov
xchg
out
mov
dec
cmp
lcall
cli
pushl
loope
pop
push
adc
aas
incb
rep
sahf
sbb
aam
dec
daa
fsubs
lods
ljmp
or
aaa
das
fwait
clc
cmp
cmp
mov
push
nop
jmp
jg
test
movsb
es
std
push
es
and
fwait
mov
push
jecxz
and
mov
mov
imul
std
sar
decl
insb
lcall
in
in
fmul
push
leave
xlat
mov
je
mov
cmp
pushl
push
sub
mov
mov
ljmp
mov
jnp
or
rsqrtps
incl
xor
xor
repz
fs
and
pop
ss
xchg
pop
fistps
or
mul
xor
jne
in
ret
cli
cmp
sub
ljmp
mov
dec
push
out
stc
xor
cs
mov
call
std
lahf
insl
pop
xchg
and
pop
ss
mov
aam
inc
repnz
xchg
push
pushl
or
mov
sti
popa
pushf
sbb
xchg
cmp
nop
int3
cld
push
lods
stos
mov
call
jge
cwtl
sub
out
push
adc
pushl
outsl
xchg
add
outsl
sbb
sbb
sub
cmp
nop
sar
pushl
add
lcall
shrb
inc
repz
in
pop
or
and
dec
push
stos
sub
stos
repnz
int
popa
clc
popa
mov
loopne
jnp
std
test
inc
shlb
decl
or
cmpb
inc
repz
lds
or
mulb
jge
jno
adcb
clc
js
or
int
and
fnstsw
cmp
mov
jno
xchg
xchg
push
or
sbb
pushl
cmp
mov
jge
mov
fadd
popf
outsb
adc
inc
insl
mov
imul
push
dec
xor
mov
mulb
bound
mov
add
loopne
jo
cmp
and
mov
sub
push
sub
fistpl
inc
aas
xchg
mov
pop
cmc
lcall
cmpsb
bound
movb
and
xor
ds
mov
jle
jecxz
mov
mov
out
stos
nop
sub
stos
test
repnz
adc
das
cld
xor
iret
clc
cmpl
sbb
repnz
mov
fs
test
xor
jbe
shlb
adc
pop
add
scas
js
decl
xchg
mov
in
xor
iret
enter
scas
and
notl
popa
lock
addr16
insl
inc
adc
ljmp
add
loopne
adc
push
sub
pop
adc
lea
or
dec
insl
adc
lret
jbe
mov
xor
rcl
xor
adc
adc
mov
js
pop
xchg
sar
imul
pop
fnstcw
dec
mov
push
sbb
stc
les
inc
nop
pop
sahf
jb
mov
push
js
clc
mov
cmpsl
adc
jno
adc
xchg
push
adc
mov
leave
xchg
fstpt
incl
cli
adc
js
rcll
nop
rclb
movsl
out
sbb
push
xor
jmp
fisubrl
insb
orb
pop
ror
jae
jl
cmc
cli
jae
add
mov
sbb
cmpsl
rcrb
loopne
mov
jno
aas
dec
aas
push
mov
mov
hlt
sbb
xchg
sub
xchg
dec
adc
add
cli
out
cld
xchg
jmp
rcll
cmp
jmp
xchg
shll
insb
push
xchg
insb
std
sahf
sarb
fsincos
js
and
adc
xor
push
cmp
dec
and
ljmp
and
sub
xchg
xchg
mov
push
mov
lret
aaa
inc
or
mov
cli
mov
sub
in
pushf
push
adc
filds
pop
push
push
jb
scas
xchg
inc
decl
jecxz
push
xor
jne
popf
adc
imul
loope
inc
arpl
add
out
lret
mov
aad
lret
call
movsb
cmc
std
out
jp
stc
mov
push
sub
addl
or
rcrb
pop
andb
add
idivl
and
push
jne
test
stc
dec
adc
dec
adc
stos
or
mov
mov
xor
lcall
nop
dec
aam
fstl
adc
test
fiaddl
mov
add
inc
and
cltd
inc
pop
mov
sub
pop
dec
in
nop
loopne
jmp
enter
pop
mov
call
or
iret
adc
stc
xchg
jno
mov
ljmp
clc
rcl
pusha
out
jae
and
test
cmp
decl
pop
xor
call
inc
divb
xchg
cmp
push
dec
add
jnp
mov
cmp
std
xchg
roll
sub
xlat
cmp
jl
xor
mov
pop
mov
sbb
lret
test
inc
lds
in
je
pop
mov
cmpsl
mov
outsl
fdivl
lcall
mov
sahf
pop
aam
pop
jns
fcmovnbe
pusha
les
or
sbb
and
incl
incl
mov
call
xor
and
pop
loop
out
sub
incl
sti
lcall
inc
pop
mov
dec
adc
dec
xchg
dec
mov
ds
adc
fidivl
je
ret
mov
stc
loope
pop
xchg
fistpl
and
mov
outsl
cld
push
sbb
daa
aad
or
arpl
sub
jmp
dec
xchg
inc
loope
incl
leave
cmp
cmp
cli
pusha
mov
rcrl
fucom
jnp
incl
sarb
das
add
sahf
jmp
add
mov
ret
push
fincstp
lret
jp
loop
ljmp
clc
outsb
lds
or
lock
scas
push
and
sbb
ja
mov
lcall
pop
in
push
mov
ljmp
sti
dec
sub
imul
fidivrs
and
mov
mov
push
sahf
repz
incl
fldcw
cmp
pop
jo
jecxz
xchg
negb
ljmp
pop
inc
xor
loopne
ja
repnz
pop
loop
dec
pop
pop
cmc
mov
pop
rcr
pop
enter
jb
xchg
aad
sbb
in
ret
iret
sub
call
std
and
dec
add
subl
inc
add
xchg
xchg
dec
sbbb
cmp
xchg
mov
cltd
loop
sti
ljmp
sub
mov
mov
xor
mov
ljmp
mov
insb
xor
sbb
jecxz
add
sarb
fmuls
incl
fisttpll
data16
cmp
cmp
icebp
mov
movsb
or
mov
ljmp
aam
adc
and
jmp
cltd
inc
cltd
aas
pop
and
cmp
outsb
cli
jecxz
divb
push
dec
sub
ljmp
popf
js
test
xor
aaa
test
sub
sbb
imul
call
xorl
ljmp
xorl
ja
mov
or
or
inc
dec
mov
xchg
sbb
mov
fcomip
loope
mov
es
out
or
lahf
lods
and
dec
int
add
cmp
decl
lock
divl
repnz
fisttps
movsb
scas
inc
xor
jg
fdivs
jo
pop
add
cmp
jmp
icebp
insb
out
adc
push
out
pushl
mov
fstpl
push
sahf
pop
cmp
xor
aaa
lock
or
push
ljmp
stos
movsb
push
shll
sbb
or
inc
xor
sub
and
decl
repz
shll
and
or
sbb
lcall
sarl
inc
call
stos
hlt
loope
call
bound
out
lods
jecxz
cmp
or
mov
cmpsl
lds
imul
jle
xchg
adc
mov
mov
push
mov
aaa
jns
mov
cli
flds
lcall
mov
ja
scas
lahf
mov
jb
rcrb
or
and
dec
push
out
push
push
mov
pop
testl
mov
xchg
outsb
sbb
scas
sbb
sar
lock
mov
repz
daa
stos
js
jp
xchg
mov
fisttpl
mov
aas
outsb
aas
mov
xchg
fdivs
jo
lcall
mov
sbb
cmp
jg
ja
xor
dec
jmp
jmp
dec
idiv
call
jp
shrb
leave
scas
cmp
pshufw
call
cwtl
dec
mov
faddl
inc
xlat
and
inc
xchg
ja
shlb
decl
xchg
jl
pop
inc
lods
fwait
test
push
cwtl
adc
clc
shr
push
adc
adc
sar
stos
ljmp
pop
lock
ljmp
int3
add
fs
addb
inc
or
mov
mov
pop
stos
push
xchg
addl
xchg
mov
xchg
out
mov
mov
leave
test
cltd
pop
scas
mov
pop
xchg
mov
cmpb
fcomip
cmp
pop
popa
sbb
pop
xchg
xchg
mov
mov
insl
dec
scas
clc
mov
rcl
faddl
fadd
inc
mov
and
enter
xor
jmp
pop
mov
cli
dec
xchg
ret
pop
shr
jecxz
mov
sbb
pop
sahf
dec
nop
mov
sub
mov
pop
mov
loop
adc
ss
cmpb
movsb
mov
xor
into
incl
incl
xchg
arpl
pusha
dec
stc
fs
fldenv
add
xor
call
sub
sbb
ficomps
or
inc
cmp
incl
dec
pop
jo
cmp
call
add
mov
push
shrl
mov
jb
enter
add
jp
xchg
sub
or
in
add
mov
cmc
mov
popa
std
dec
sub
push
jle
xchg
fs
mov
ret
mov
out
scas
mov
add
lahf
push
ret
sbb
mov
data16
repz
inc
ret
test
hlt
mov
dec
pop
push
in
sahf
cmc
sub
xchg
call
in
in
dec
dec
xor
je
xchg
jnp
mov
cmp
mov
jmp
in
int
push
movsb
cmp
xor
adc
ja
jmp
lcall
mull
mov
bound
xchg
in
pushf
xchg
nop
mov
ficoms
pop
out
mov
sbb
push
jne
test
rcrb
mov
push
jle
lock
fs
repnz
pop
inc
cmp
and
inc
mov
xchg
mov
pop
cmc
ds
lods
mov
mov
push
xchg
test
cmc
sub
pop
subb
aas
adc
pop
lock
decl
sub
lods
lahf
pop
nop
lock
test
add
loopne
ljmp
mov
jge
cltd
push
xchg
lret
cli
push
adc
incl
xor
mov
js
daa
mov
pop
out
push
mov
xor
bound
lahf
push
les
ljmp
inc
add
cli
lock
test
pusha
call
sub
aaa
inc
pusha
xlat
cmp
ja
push
pop
lcall
sahf
lret
fbstp
ret
int
xchg
iret
test
sub
mov
popf
pop
fs
lcall
dec
in
push
js
leave
push
xor
push
fwait
ss
notl
divb
lcall
hlt
mov
cmc
sarl
das
push
dec
arpl
fsubr
aaa
scas
and
cld
adc
push
mov
jmp
push
insb
or
repnz
jge
cmp
or
out
in
dec
cmp
fcmovu
xor
adc
shr
mov
js
mov
dec
call
loopne
cli
adcb
inc
and
pop
push
mov
mov
incl
mov
mov
lds
ds
push
popf
xchg
fdivl
adc
ljmp
imulb
push
filds
mov
icebp
shrb
push
pushl
leave
pop
ret
push
and
jp
add
aad
mov
xor
pop
std
xchg
ljmp
xchg
in
sbb
fisubrs
rclb
fsub
ds
les
mov
call
leave
mov
mov
aad
push
xor
ja
cmp
add
sbb
cmpsb
jno
cmpsb
lods
cmp
push
pop
pop
dec
lds
pushl
cmpsb
cld
pop
mov
jl,pn
add
mov
inc
inc
scas
inc
repnz
jp
ja
outsl
test
mov
iret
sub
pop
test
jge
repnz
addr16
mov
jno
jmp
imul
xchg
mov
imul
dec
mov
mov
jb
mov
pop
add
test
jmp
hlt
mov
jmp
fsts
arpl
mov
dec
movsb
mov
mov
cltd
xchg
call
das
mov
aad
or
pusha
and
movsb
cli
pop
imul
pushf
dec
jnp
and
cmp
mov
outsb
inc
mov
iret
jnp
adc
sbb
shrl
jmp
pop
popf
inc
push
shll
sbb
popa
adc
call
cmpb
js
jecxz
data16
mov
jecxz
insl
les
xchg
iret
pop
ljmp
dec
ja
testl
or
dec
std
cwtl
mov
scas
mov
fwait
mov
dec
sti
sarl
loopne
sti
dec
stos
popf
ret
mov
cmc
jmp
jo
test
dec
push
mov
cmp
mov
rcll
push
xchg
into
jnp
mov
test
jg
dec
or
push
loop
adc
nop
xor
and
icebp
ja
ljmp
sbb
push
pop
xchg
pop
icebp
lds
popa
xchg
push
inc
in
pop
lret
filds
jbe
cmp
out
cli
mov
jp
jle
lds
call
mov
jne
outsl
cli
rcrb
into
jae
mov
add
pop
cld
ljmp
daa
xchg
aam
stos
movsl
add
cmp
push
xor
inc
or
fadds
xor
cvtdq2ps
scas
or
repnz
adc
push
in
ss
sahf
adc
sub
mov
decl
pushl
adc
test
gs
xchg
fwait
dec
out
mov
pop
andb
cmp
loope
faddl
fcmovnb
mov
je,pn
nop
andb
test
clc
add
cmpsb
pop
in
daa
push
cmp
call
mov
cmc
fs
sub
addb
stos
orb
test
incl
push
test
lock
push
push
sub
mov
jecxz
aas
jo
inc
icebp
jle
dec
lcall
push
lret
and
movsl
sub
cmpsb
aas
push
rolb
jnp
repnz
and
or
lds
dec
jg
inc
cmc
inc
cmp
jmp
cwtl
xchg
push
xorl
mov
sub
es
sbb
icebp
add
out
mov
pop
jo
sbb
arpl
jl
das
mov
cli
push
ret
jg
into
or
outsl
cli
jmp
jmp
mov
ja
pop
dec
out
addr16
push
pop
and
aas
int
jmp
call
xor
lahf
mov
dec
sbb
daa
cmpsb
enter
pop
or
call
pop
sbb
cwtl
pop
mov
cltd
and
call
jp
inc
sub
daa
pop
aaa
cltd
jp
fsubrl
shlb
arpl
adc
ret
ljmp
sbb
mov
or
mov
and
xor
mov
sub
mov
clc
mov
or
imul
ret
lret
xchg
mov
xchg
or
jg
lret
in
out
fs
pop
je
outsl
sbb
jo
xchg
cltd
or
pushf
adc
loop
call
jae
push
xchg
inc
dec
pop
sbb
fdiv
leave
dec
pop
mov
dec
or
test
arpl
scas
cmp
cmp
testl
inc
mov
push
ljmp
aad
xor
mov
add
clc
aad
lcall
fwait
mov
pop
mov
push
add
stos
cmp
fisubrl
std
decl
aad
leave
shlb
jbe
mov
rcll
sti
cmp
jg
jmp
mov
add
jl
xor
xor
jle
xchg
inc
adc
incl
inc
inc
daa
mov
and
mov
leave
leave
cld
clc
in
push
push
icebp
sub
jb
xchg
xchg
bound
xor
push
call
xchg
punpckhbw
jmp
xchg
sbb
out
push
gs
sub
scas
lret
xlat
push
ja
int
out
fcoml
mov
xlat
leave
jecxz
and
pushf
jmp
dec
std
pop
cmpb
inc
add
xchg
inc
pop
stos
adc
adcb
stos
lret
mov
inc
cmp
insl
jmp
dec
stos
in
fcmovnbe
out
movsl
adc
cmp
fsubrs
call
xchg
sbb
mul
and
mov
out
out
push
cmp
dec
sar
ljmp
push
ja
jns
or
mov
test
mov
fiadds
ljmp
dec
xor
prefetchwt1
sahf
push
adc
mov
sbb
jns
decl
enter
mov
push
dec
movsl
pop
lahf
test
hlt
mov
xor
pop
push
icebp
dec
outsb
scas
or
cmp
pop
cmc
mov
sahf
lcall
or
adc
mov
or
andl
lcall
aaa
pop
cmp
addr16
aad
std
xor
push
sbb
mov
pop
test
jp
pushl
inc
stos
ror
dec
mov
sti
sub
lds
mov
ret
fbld
mov
add
lds
inc
jnp
inc
shrb
xchg
ljmp
std
cltd
mov
mov
add
jl
mov
jg
xor
pop
xor
out
push
mov
imul
shrb
sbb
loope
pop
gs
jle
mov
mov
jge
ljmp
cmp
insl
push
dec
mov
addb
cmpsl
mov
xchg
mov
leave
add
push
xchg
jg
ljmp
jecxz
in
xchg
sbb
mov
inc
and
pop
or
decl
xlat
in
sub
mov
push
cwtl
jmp
outsl
mov
adc
ljmp
add
cmp
sbb
cmp
test
pusha
jmp
xchg
loope
add
jmp
inc
ret
hlt
mov
cmpsb
sub
pop
inc
sbb
lock
sub
lret
ljmp
lcall
or
hlt
lock
add
jae
cs
mov
dec
scas
movsb
out
repnz
pop
sbb
cwtl
ds
xchg
sbb
addr16
xchg
adc
sbb
jmp
ljmp
push
jne
pop
fsts
repz
xchg
jg
fldenv
or
iret
mov
mov
xor
xlat
adc
push
nop
dec
inc
xchg
sub
dec
movsb
sub
psubsb
data16
dec
cmp
xor
daa
lahf
out
jp
sub
mov
pop
ljmp
cltd
cmpb
xchg
jmp
mov
pushl
jmp
aam
xchg
std
lds
fsubl
cwtl
sbb
imul
xchg
aas
lcall
incl
jno
lcall
test
loop
repz
push
or
call
addb
xor
dec
ret
xor
jbe
movsl
ljmp
aaa
decl
ret
ss
in
and
inc
push
mov
es
fs
dec
leave
or
jge
mov
cmp
ret
ja
cmpsb
inc
cmpsl
call
or
outsb
cmp
inc
sahf
fwait
mov
xchg
in
mov
or
incl
rcr
iret
adc
mov
mov
mov
cmp
xchg
jg
lcall
lcall
sti
negb
add
xchg
fists
incb
jno
movl
ret
ljmp
lcall
sbb
outsb
dec
hlt
xor
sub
scas
in
push
jg
andb
aad
jb
push
cmp
sub
repz
adc
push
sub
mov
call
das
pop
in
aad
pop
cltd
inc
addr16
add
adc
xchg
push
cmpsb
idiv
out
cli
inc
inc
or
stc
sub
imul
push
mov
xlat
sarb
lret
inc
lock
pop
mov
mov
out
frstor
repz
imul
stc
mov
decl
std
jns
adc
mov
es
mov
aaa
fldln2
shl
fildl
stos
dec
mov
jnp
arpl
mov
adc
fidivs
and
and
sub
ret
lcall
pop
xchg
cltd
in
ret
jbe
cwtl
inc
cltd
mov
popaw
pop
imul
jp
ret
out
in
gs
or
test
fdiv
scas
popa
xchg
push
pop
and
sub
jmp
pop
push
fstpt
ret
and
call
fsts
push
sbb
das
jle
aam
loope
shlb
cli
xor
cld
mov
cmp
dec
mov
test
sbb
or
dec
popf
loope
outsb
jl
sub
aam
mov
decl
in
leave
shrb
pop
shl
popa
xchg
fbstp
ds
sub
cmp
stos
jecxz
in
cmpsb
imul
xchg
mov
bound
add
and
movsl
jmp
ljmp
push
sub
dec
mov
bound
or
push
jge
ffreep
lea
daa
or
and
xchg
int
pop
outsl
gs
popa
loop
fildl
das
call
shrb
mov
mov
ljmp
cmp
lock
xchg
pushl
pop
sbbl
sub
lea
cmp
test
addr16
popf
test
call
insb
sbb
xchg
or
xchg
mov
mov
push
mov
dec
xor
call
fmull
push
lock
in
dec
pushf
outsl
xlat
mov
out
dec
rcr
fwait
ret
decl
stc
aas
ror
inc
outsl
imul
cmp
ret
pusha
xchg
lahf
ss
clc
dec
and
in
rcrb
notl
fs
aam
mov
les
test
lods
mov
movsb
dec
call
xor
leave
cmp
in
cmp
pop
pop
adc
sbbl
test
add
sti
cld
xor
decl
sbb
dec
inc
jmp
dec
jnp
pop
std
ljmp
idivb
incl
ret
loopne
outsl
daa
setg
pusha
add
sarb
mov
test
cmp
lcall
jge
lods
addr16
out
mov
adc
mov
icebp
std
test
out
add
out
sar
call
fisubrl
popa
mov
xlat
rcrl
ss
dec
jae
jns
cmp
addr16
fst
jge
dec
mov
lds
jbe
repz
test
mov
decl
pop
rcll
inc
jp
and
xor
cmp
adc
leave
sti
xor
std
fcomip
enter
mov
movsb
xor
insl
cmp
int
filds
stc
jno
jl
in
fisubrl
rcrl
fmul
sub
mov
xchg
push
pushf
out
cli
mov
mov
fmull
inc
pop
and
das
das
sar
xchg
call
pop
in
gs
pushf
add
shrb
int
xchg
xchg
xlat
inc
jecxz
es
inc
jmp
or
out
push
leave
pop
decl
cmpsl
pop
cmp
adc
jmp
mov
dec
xchg
mov
cld
xor
push
or
nop
popf
clc
push
mov
sbb
xchg
stos
or
inc
mov
aaa
std
out
clc
adc
dec
push
ljmp
adc
inc
repnz
dec
xor
movsl
stc
jl
cmp
lds
jp
mov
fwait
data16
xor
ljmp
gs
cmc
rcll
inc
ljmp
dec
cmp
sbb
mul
cli
xlat
into
ss
sbb
mov
jb
pop
and
cmp
xor
repnz
mov
push
xor
jbe
mov
sbb
fistps
nop
pop
or
adc
ret
mov
loope
mov
sar
mov
xor
pop
cmp
jp
jmp
xor
jns
add
jg
mov
test
sahf
mov
add
cltd
out
cltd
leave
adcl
add
adc
or
and
xor
call
int
les
xlat
aas
std
sbb
scas
leave
and
lds
incl
daa
cmpsl
push
adc
adc
add
rcll
addr16
jns
testl
or
hlt
lret
dec
andl
mov
cwtl
xchg
ja
jl
std
stos
fildll
popa
sub
lds
jmp
ljmp
shlb
outsb
or
xor
pop
jae
int3
cmp
imul
push
out
clc
xchg
imull
pop
mov
jno
push
scas
jo
stc
aam
dec
xor
out
test
lcall
push
adc
mov
pop
popf
mov
dec
jg
inc
inc
xchg
mov
sbbl
js
xlat
push
movsl
push
ds
incl
decl
xorb
nop
stc
mov
dec
pop
mov
jp
shl
test
sbb
jmp
cwtl
push
aaa
add
ljmp
pop
or
mov
and
mov
adc
xchg
dec
icebp
aaa
add
pushf
insb
cs
mov
and
cli
aaa
ja
pushl
inc
or
push
sbb
dec
rclb
cli
data16
pop
jns
cmpb
or
xchg
ror
or
call
and
fs
out
sub
stos
adc
mov
call
aaa
sbb
fwait
daa
xchg
pop
jg
sbb
jno
push
shrl
test
mov
in
ss
jg
pusha
cld
orl
in
jae
jmp
out
mov
inc
add
dec
push
aas
mov
in
call
arpl
cmp
hlt
sub
adc
in
ficompl
in
lahf
adc
push
lcall
ss
sbb
fiaddl
out
fidivl
mov
cmp
xlat
fucom
pop
lret
push
dec
dec
mov
jns
rorl
mov
and
jns
xor
mov
in
nop
scas
push
fistpll
repnz
iret
das
or
jae
jmp
and
lcall
movl
and
es
orl
and
sbb
jmp
pop
aas
xchg
in
mov
stc
ficompl
sbb
mov
cmp
dec
stc
jae
mov
add
leave
pop
add
je
dec
fistpll
jge
mov
adc
mov
jo
decl
add
cmp
pop
or
mov
fldenv
in
xor
or
add
mov
xchg
jl
insb
jg
sti
lods
insb
stos
out
xor
xor
mov
call
pop
pop
add
icebp
mov
sbb
daa
sbb
out
fildl
cli
push
sti
push
ljmp
stos
sub
lods
xchg
xchg
dec
pop
sbb
cltd
dec
sbb
mov
fstps
nop
inc
lahf
mov
test
push
dec
xchg
push
xor
out
mov
ljmp
enter
xor
or
inc
push
icebp
clc
lods
jo
inc
mov
push
adcl
and
push
push
mov
insb
or
aaa
test
data16
jae
cmpsb
insl
mov
lret
out
dec
mov
ljmp
fsubs
add
es
test
jmp
or
mov
push
dec
and
pushl
enter
inc
xor
repnz
lcall
inc
push
xchg
xor
pop
inc
mov
das
cmp
xor
mov
jmp
sahf
cs
cltd
sub
inc
dec
jne
or
mov
mov
jmp
xor
inc
aaa
dec
adc
mov
push
xlat
pop
mov
push
mov
pop
jae
adc
cmp
dec
decl
sub
mov
andb
xlat
push
mov
cld
cs
into
dec
sarb
jmp
jae
fisubrl
mov
les
or
cmp
pop
adc
shll
testb
fcomip
jo
lret
jnp
insl
notl
loope
lods
mov
negb
push
xor
clc
add
arpl
lods
dec
ljmp
inc
cltd
xchg
addr16
test
stc
add
cld
cmc
mov
xchg
push
add
and
xlat
sbb
roll
mov
mov
scas
pop
sub
dec
push
lcall
orb
jmp
inc
mov
loop
adc
das
dec
xchg
loop
hlt
mov
shlb
jg
mov
dec
xchg
ljmp
dec
and
inc
sbb
cwtl
and
std
lret
das
add
inc
inc
pushf
shlb
stos
dec
adc
out
xchg
fldl2t
or
push
les
mov
mov
popf
and
aaa
lret
xchg
inc
mov
lcall
testb
dec
and
xchg
push
fdivl
pop
idivb
imul
inc
mov
jmp
fnstenv
add
mov
cmp
pusha
adc
pusha
xchg
cli
incl
in
insl
cld
in
jge
jmp
cmp
mov
gs
xchg
mov
and
push
movsl
add
push
xor
pushl
in
shlb
xchg
inc
mov
mov
std
call
cs
loop
into
jns
lret
shll
lret
inc
ljmp
mov
jle
imul
push
mov
fsubl
decl
or
xchg
mov
or
repz
stos
sbb
jg
mov
xchg
ljmp
addb
pop
or
jge
sub
adc
lcall
rorl
pushf
push
es
sub
lcall
jnp
push
movsb
test
cmpb
or
sahf
fsubrp
jecxz
movl
pop
or
mov
shll
rcl
fimuls
fwait
dec
loop
leave
movsl
jo
mov
dec
gs
repnz
jg
das
sar
or
addr16
jnp
js
test
push
divw
hlt
mov
adc
push
rorl
pop
inc
xor
cmp
ljmp
sub
rcrl
in
adc
jb
cmpsl
fwait
imul
fbstp
cmp
jg
test
mov
xor
push
insb
mov
adc
lds
call
cli
movsl
subb
add
sbb
lea
dec
ja
or
int3
fdiv
mov
repnz
sbb
clc
popf
cli
rcll
popf
xchg
sub
mov
cmp
jb
xor
outsb
sarl
mov
arpl
add
test
jbe
stos
hlt
add
pop
addb
lds
or
iret
inc
aas
shl
mov
bound
sub
movsb
scas
sarl
cmp
sahf
adc
inc
xchg
adc
sbb
test
test
inc
les
cmc
push
imul
into
push
gs
cmc
or
fisubl
stos
test
pop
push
inc
jge
negl
xlat
xchg
push
mov
mov
lahf
ss
and
sbb
iret
aas
mov
cmp
and
ljmp
sub
fwait
jl
push
fisttpl
dec
lcall
jns
add
lcall
stos
pushf
jl
lea
jle
stos
sub
and
adc
mul
inc
loop
cld
shlb
push
mov
adc
adc
jg
jge
jg
decl
or
push
data16
or
lcall
mov
xlat
fdivr
cmp
xchg
imul
movsb
pop
jg
pop
out
fidivrs
test
loop
xchg
test
mov
dec
ljmp
xchg
stos
push
iret
hlt
add
jecxz
xchg
and
jo
adc
xor
imul
ljmp
push
test
dec
push
xchg
xchg
pop
aad
pop
pusha
loop
mov
cwtl
mov
or
jmp
imul
inc
push
sub
xor
mov
jecxz
xchg
pop
push
cmpsl
xor
int3
iret
loop
mov
outsb
cmp
xor
shlb
incl
in
add
pop
movsl
push
or
mull
inc
outsl
dec
xchg
sub
ljmp
adc
loop
in
cmpsb
mov
pusha
xchg
or
mov
cmp
call
cltd
add
stos
jl
lock
call
cmp
sbb
jl
jg
call
sti
mov
jno
scas
scas
jno
enter
xor
ljmp
clc
mov
test
mov
inc
fwait
mov
daa
inc
lock
pop
jle
fdivr
push
mov
mov
cmpsb
int
loope
je
xchg
push
fidivrl
clc
jmp
cltd
jo
call
in
mov
inc
iret
pop
inc
or
in
xchg
jae
mov
jmp
decl
addb
xchg
push
inc
outsb
mov
lret
mov
dec
sahf
jmp
push
insl
push
fwait
mov
je
or
inc
js
mov
xchg
mov
sbbl
jns
jae
std
push
cmp
hlt
or
shrb
jp
shlb
sbbl
jg
mov
add
bswap
cmp
movsb
mov
imul
repnz
ds
cwtl
outsb
inc
jns
xor
test
sbb
sbb
aas
stos
int3
loop
sbb
push
cmp
jl
inc
data16
incl
movsb
test
leave
ja
push
stos
out
push
add
insl
add
out
jb
leave
call
loopne
loope
mov
sub
dec
mov
sub
xchg
jle
inc
xor
mov
imul
xchg
inc
or
sub
aaa
or
je
adc
decl
jge
jae
and
push
mov
sbb
das
dec
dec
and
pushf
scas
cmp
divl
std
jmp
stos
xor
or
cmp
pop
xchg
clts
repz
pop
loop
out
push
stos
in
adc
or
xchg
call
dec
imul
pop
inc
pusha
jbe
lds
xor
test
fidivs
push
js
and
inc
in
cmpsb
mov
xchg
xchg
or
leave
push
adc
pop
and
addr16
cli
gs
shrl
call
stos
mov
xor
cvtdq2ps
mov
fildll
mov
into
or
xchg
add
pop
jne
inc
incl
ret
sbb
aam
mov
xor
js
push
ljmp
inc
add
and
inc
dec
add
imull
lds
gs
push
sarb
decl
jbe
dec
cmpsb
sbb
aad
scas
inc
xchg
add
lods
movsl
mov
sub
jo
sti
cmp
es
mov
dec
jl
sbb
mov
pop
fwait
pop
imul
shr
inc
xchg
cwtl
add
mov
ljmp
xchg
push
ret
hlt
pop
cmp
fdivs
sbb
and
mov
fidivrs
std
mov
jmp
or
push
xorl
les
pushf
ret
mov
mov
sub
ja
ret
add
mov
in
jg
lcall
out
mov
push
out
out
cli
decl
daa
dec
cmpsl
lds
xchg
mov
movsb
fldl2e
jle
push
jno
jbe
fwait
decl
dec
test
pop
imul
lahf
hlt
inc
pop
lea
lds
cmp
test
stos
call
stc
inc
mov
jo
in
and
leave
or
mov
jecxz
or
sbb
int3
insl
or
imul
sbb
cmp
scas
decl
push
jg
xchg
movsb
aad
pop
cltd
in
repnz
dec
cld
pop
pop
jp
nop
xor
call
fwait
in
add
or
imul
and
push
pop
cmpsb
mov
mov
inc
jno
jae
ljmp
call
ja
popa
cmp
fidivrs
sbb
push
aam
test
or
jns
pusha
adc
cmpsb
popf
lret
add
sbb
mov
sbb
or
iret
pop
fnsave
mov
incl
test
orb
mov
leave
orb
lock
ret
pop
cmpl
loopne
out
hlt
mov
loopne
fcmovu
icebp
jmp
and
pop
cmp
pusha
xchg
add
sbb
mov
filds
popf
repz
lds
sahf
popa
add
add
icebp
mov
pusha
mov
call
int3
cwtl
mov
dec
clc
arpl
std
arpl
sbb
in
xchg
push
xchg
cmpsl
pusha
jg
sbb
push
repnz
jno
es
cmp
jp
lock
sbb
mov
inc
fsubrl
sbb
out
int
lret
and
add
inc
push
cmp
int3
mov
add
imul
xor
dec
adc
cmp
test
sbbb
scas
mov
mov
dec
push
fucom
scas
decl
out
pop
sbb
int
pop
jg
jnp
mov
icebp
mov
mov
mov
call
or
adc
dec
and
mov
mov
test
jne
hlt
imul
xchg
add
movsl
dec
add
pushl
daa
mov
add
loope
push
jns
fs
push
jns
or
pop
ds
cmp
jmp
scas
and
cmc
cmpsb
sub
adc
sbb
push
outsl
xor
jecxz
fisttpll
mov
mov
bound
jp
mov
stos
adc
pop
jb
jnp
daa
jmp
incl
cwtl
or
pop
jb
lods
je
daa
testl
and
mov
jp
daa
mov
jle
dec
sbb
inc
jmp
mov
gs
xchg
sbb
push
sbb
addl
pushl
test
sub
pop
dec
adc
ror
sub
xchg
or
mov
jmp
aam
movsl
pushf
leave
jne
inc
push
jae
hlt
in
incl
mov
les
fwait
hlt
mov
jg
incl
pop
dec
cmp
in
out
ret
iret
add
mov
or
or
push
inc
or
into
sub
jg
cli
xor
sub
jo
add
jecxz
in
adc
dec
inc
out
ljmp
std
data16
mov
adc
out
fdivr
pop
mov
out
mov
or
test
or
ljmp
jmp
cmp
pushl
xchg
movsb
fs
test
jg
push
xchg
jg
subl
shrb
decl
push
jns
inc
fimull
aam
fwait
mov
repz
cli
mov
pop
fs
in
dec
dec
lret
lods
in
add
and
insl
popa
out
cmp
pop
push
pop
inc
xchg
ficoml
cltd
insb
mov
incl
push
lock
xchg
mov
fsub
dec
into
std
mov
pushl
repz
loop
jge
cmp
mov
pusha
jle
or
pop
roll
inc
sbbl
dec
inc
jge
int3
repnz
adc
mov
push
xchg
daa
lock
outsb
out
adc
imul
adc
mov
dec
das
pushf
es
aas
and
jne
sbb
or
incl
out
sahf
dec
enter
out
popa
cld
fmuls
dec
push
das
movsb
push
mov
xchg
pop
jecxz
ljmp
in
mov
outsb
ds
mov
cli
fldt
sti
xlat
fdivrs
jbe
incl
mov
adc
sub
scas
or
in
mov
mov
imul
cmc
incl
pop
pop
fmul
outsb
pop
push
mov
setbe
ss
insb
idiv
mov
or
fstpt
ljmp
xchg
sti
mov
fmuls
jge
ljmp
pushl
imul
pop
nop
fsubrp
jae
icebp
adc
mov
sub
sbb
test
mov
nop
mov
pop
imul
dec
cmovne
shr
lds
push
sti
and
jmp
cli
decl
aam
dec
inc
dec
add
push
mov
not
push
cmc
mov
jno
xchg
mov
andb
lahf
jecxz
int
jl
adc
faddl
call
inc
mov
jb
cmp
or
mov
ljmp
dec
shll
push
das
push
mov
sbb
inc
popf
push
mov
popf
sar
rcll
dec
inc
xchg
sub
dec
push
or
xlat
xor
insb
lahf
stos
mov
xchg
insl
je
loop
sbb
mov
js
pushl
push
xor
in
das
fdivs
cwtl
inc
fcom
push
out
mov
cmc
int
lcall
jmp
jecxz
inc
push
ja
cwtl
and
aas
ljmp
sbb
sar
incl
sbb
addr16
fcomip
mov
xor
fwait
fs
sub
lods
adc
mov
xlat
lcall
imull
push
pop
cs
mov
ss
loopne
jg
ja
push
pop
in
imul
fldt
rol
dec
sub
xchg
fwait
cmp
call
dec
lea
scas
pop
adc
bnd
sbb
push
inc
dec
repnz
hlt
adc
icebp
leave
lock
dec
inc
movsl
sbb
jno
mov
fistl
and
and
jmp
jg
cld
lahf
inc
loopne
add
in
orl
dec
mov
sub
stos
repz
sbb
ss
xor
fildll
incl
and
mov
gs
js
inc
ja
pop
flds
lods
jp,pt
fsubs
adc
stos
in
adc
mov
loope
pop
fildl
jmp
cwtl
xor
mov
dec
fisubs
dec
mov
lcall
mov
mov
push
mov
gs
mov
daa
das
xor
dec
push
mov
add
push
cld
fcomps
js
aas
jmp
decl
xor
push
jg
inc
pop
leave
cmc
orl
and
mov
jge
dec
or
out
stc
outsl
lock
adc
xchg
and
inc
outsb
mov
ljmp
cmp
in
fucomp
loope
stos
sti
jl
or
in
and
push
int
cmp
sar
rorl
jae
mov
stc
push
adc
sbb
ret
out
clc
or
gs
adc
sub
mov
push
adc
push
scas
jbe
lods
add
fidivl
call
inc
stos
daa
aam
sub
call
sbb
repnz
jo
mov
aas
inc
xlat
xlat
fwait
jge
out
xor
or
inc
loope
mov
ss
cmp
xchg
loopne
fidivl
les
je
pushl
and
sub
mov
cmp
push
sub
xchg
xlat
mov
adc
lcall
nop
mov
push
sbb
lock
xchg
roll
fwait
repz
pop
idivb
pop
sahf
pop
repnz
clc
popf
cltd
sub
mov
push
add
hlt
push
pop
sub
push
test
out
call
ret
xchg
and
adc
daa
js
jns
sbb
cmpsl
dec
push
mov
ljmp
inc
mov
mov
jg
push
rcll
insl
jmp
xchg
rcrb
cltd
fldl
fsubrs
sbb
mov
pusha
jmp
int3
iret
xor
jnp
push
mov
mov
rcrl
jg
dec
fdivrs
and
insl
jo
mov
pushl
mov
mov
jl
mov
pop
mov
cmpb
jbe
pop
mov
mov
dec
lahf
jmp
push
xor
push
loope
cmpsb
repz
and
stos
dec
mov
pop
add
js
xchg
mov
in
dec
or
movsb
aad
insb
xor
mov
aad
cwtl
xchg
insb
minps
lcall
loope
adc
sbb
into
icebp
sub
sbb
hlt
call
dec
cmp
adc
xor
push
out
adc
add
jg
aam
jbe
adcb
cmc
inc
sti
ljmp
lret
push
into
jnp
cld
scas
idivb
mov
jno
cmp
jns
pop
push
push
xor
mov
jbe
rcrb
mov
sarb
and
lcall
pop
or
adc
xor
mov
dec
xor
mov
jecxz
inc
mov
inc
aas
int3
call
push
push
pop
xchg
fucom
ja
lret
daa
bound
fnsave
and
mov
cmpb
orl
pop
pop
push
adc
push
jmp
imul
jae
ds
mov
add
lcall
jbe
mov
mov
xchg
cld
pusha
in
add
ja
xor
and
das
clc
pushl
sub
mov
inc
dec
ljmp
insb
and
es
call
or
popa
jmp
stc
push
negb
inc
mov
jp
in
in
xchg
jmp
jbe
xor
pop
aas
loopne
pop
jge
clc
sbb
std
pushf
adc
dec
push
fimull
push
jbe
mov
push
repnz
mov
loope
push
into
jg
fcmovnbe
cmp
pop
in
push
or
sub
scas
sbb
into
and
incb
dec
and
fnstcw
adc
call
leave
das
push
or
mov
inc
xchg
xor
or
mov
adc
dec
sbbl
cld
cmp
or
loopne
and
ds
rorl
sbb
push
inc
sub
icebp
nop
pusha
cs
enter
fwait
popa
mov
and
incl
inc
outsb
xchg
jle
lds
jae
pop
fbstp
add
fs
inc
icebp
inc
push
fdivrl
push
jecxz
mov
incl
dec
imulb
frstor
sub
shrb
cmp
xorb
xor
decl
aas
mov
insl
dec
mov
stc
mov
sahf
adc
pop
mov
decl
addr16
mov
std
adc
mov
dec
mov
out
sub
jae
std
outsl
hlt
es
dec
sarb
mov
fsubrs
xchg
decl
and
push
mov
push
movsb
in
dec
xchg
mov
sti
lea
sub
sub
dec
popf
jg
popa
std
loop
mov
mov
lock
xchg
pop
xlat
cli
jb
xchg
ret
ret
clc
jno
push
pop
scas
fadd
pop
lods
addr16
movsl
pop
lock
xchg
outsb
push
sbb
mov
sbb
mov
hlt
jle
sub
or
cmc
fs
not
ret
xchg
fcomip
call
pop
push
xor
pusha
cmp
les
pop
mov
repnz
sbb
call
insl
std
sarb
pop
popa
add
or
cmc
push
out
mov
mov
stos
outsb
cmp
dec
pop
in
es
dec
mov
pop
dec
mov
repz
adc
incl
inc
mov
jae
jo
or
mov
mov
decl
push
mov
sbb
cmp
or
leave
and
push
jae
fistpll
jne
jle
xor
push
or
jne
leave
nop
mov
test
dec
outsl
or
movsl
xor
cli
push
mov
push
jl
shrb
loop
dec
pusha
ljmp
mov
mov
pop
test
in
cltd
cltd
movsb
shl
scas
imul
test
je
cmc
mov
mov
jmp
mov
pop
pop
lcall
mov
push
sub
dec
sub
mov
jg
sub
cltd
cmp
rorb
shll
pop
mov
mulb
arpl
lcall
cmp
fs
xor
orl
push
lret
jno
popf
xchg
decl
mov
rclb
mull
loope
ret
gs
ljmp
shl
mov
add
pushf
insb
aad
into
cs
mov
add
mov
lcall
in
leave
adc
sub
jmp
push
cs
fcompl
mov
push
fcomip
mov
mov
sti
cmp
inc
mov
ret
aaa
pop
clc
stos
imul
les
lahf
add
jno
lcall
cmp
nop
pop
movsl
cmp
daa
mov
ljmp
aam
push
stc
aam
add
test
add
ljmp
iret
mov
mov
std
repnz
scas
jne
push
add
pop
inc
cmp
jmp
xchg
aas
js
das
rclb
decl
sub
inc
push
sub
enter
addr16
push
dec
xor
decl
loop
pop
push
out
mov
mov
sub
pop
out
cmp
jmp
notl
jbe
cmp
inc
pop
add
or
add
push
insl
inc
inc
call
lcall
cmc
rcl
push
das
fdivp
in
div
and
jb
outsl
mov
call
roll
adc
xlat
scas
fcmovbe
mov
jb
out
popa
das
imul
rclb
inc
pop
rcrl
call
xchg
int3
xlat
ret
int3
fdivrs
mov
sbb
dec
test
popa
fbld
ljmp
pushl
cmp
mov
enter
mov
out
pop
push
add
out
adc
in
push
mov
cmpsl
loope
xchg
dec
xchg
shlb
xchg
fwait
jmp
sub
loope
test
test
add
mov
int
cltd
cmp
sbb
sub
inc
orl
cmpsb
push
aas
mulb
mov
add
mov
mov
adc
mov
test
push
roll
out
xor
stc
sar
decl
sar
sbb
mov
stos
ret
and
sub
mov
imul
jp
inc
pushf
dec
in
lahf
xorl
jmp
or
testb
loop
sbb
sbb
inc
cwtl
cmp
push
mov
rcr
icebp
xchg
in
das
lods
inc
sahf
adc
lods
decl
enter
fcomps
mov
mov
sub
test
adc
jg
fs
imul
cld
mov
dec
addr16
inc
mov
sbb
call
arpl
stc
cmp
or
xor
inc
fstps
sbb
cmpsb
inc
fdivr
lcall
jecxz
rolb
decb
nop
pop
xchg
cltd
xor
incl
ret
mov
outsb
xchg
inc
popa
jae
loope
push
aam
xchg
xor
aaa
xor
pop
loope
stos
mov
adc
push
ss
lret
cmp
leave
pop
data16
sti
call
mov
nop
test
sub
fmul
push
mov
fisubl
cmp
inc
mov
or
pushl
test
sbb
iret
nop
mov
adc
je
push
and
repnz
ficoml
arpl
push
pop
sarb
cld
push
pusha
out
dec
notl
out
cmc
sbb
sub
call
ljmp
sbb
lods
inc
pop
sub
in
xor
pushl
mov
jns
push
sbbb
pop
xchg
ret
adc
fbld
pop
aaa
std
call
sbb
lret
jmp
push
mov
out
cmp
loop
adc
pushl
and
idivb
loopne,pt
jbe
cmp
mov
or
mov
or
or
int3
mov
jmp
ljmp
add
andl
mov
push
daa
cmp
std
mov
daa
push
push
xor
jmp
xor
jmp
adc
inc
or
test
aas
adc
icebp
xor
mov
adc
paddq
xchg
adc
lret
push
mov
fcomps
lds
or
mov
insl
insl
testb
or
insb
cld
mov
clc
dec
mov
and
imul
hlt
mov
test
sbb
xor
out
mov
out
jp
push
adc
inc
lock
jb
adc
hlt
cwtl
push
call
pushl
sbb
inc
addl
jp
lret
test
mov
daa
loope
cmpb
mulb
daa
mov
ja
lcall
aam
jns
cmc
sub
ret
sbb
dec
mov
pop
adc
add
lock
jmp
mov
add
push
add
insl
test
lods
mov
mov
and
nop
jmp
sub
mov
xor
jno
sub
jmp
jne
mov
sahf
inc
lcall
fdivrl
movsb
and
dec
cmp
bound
rclb
jmp
mov
aam
lods
dec
mov
adc
decl
in
and
negl
mov
int3
pop
add
mov
jge
xchg
mov
lea
push
jmp
pop
std
fsubl
hlt
push
incl
in
gs
out
js
fs
aad
mov
cmp
call
jp
popf
xchg
push
xor
jl
std
inc
ret
add
rol
incl
mov
in
sub
shll
mov
lds
aaa
movsl
jae
jne
xor
jmp
jl
sub
in
imulb
cmp
xchg
and
adcl
adc
out
xor
push
sub
adc
fcomip
xchg
aaa
movsb
movsb
mov
fdivrs
loope
lret
xor
pop
out
xor
ljmp
push
and
sbb
hlt
xor
push
jg
sub
mov
and
xorb
daa
and
lcall
lcall
pop
push
push
and
mov
lods
dec
nop
loop
mov
out
cmp
add
mov
push
cmp
mov
push
mov
fwait
int3
pop
andb
cmp
into
mov
jnp
jb
and
inc
aas
les
mov
insb
aam
cli
inc
out
adc
popa
pop
es
cld
push
jg
dec
cmp
add
and
xchg
cmc
dec
cwtl
jg
adc
icebp
xchg
dec
outsb
add
cli
jmp
es
sbb
lahf
jo
out
cmpsb
lods
jmp
mov
sbb
push
push
add
inc
outsl
push
adc
add
orb
nop
dec
push
out
test
cs
dec
jmp
dec
push
and
out
mov
test
insb
push
inc
or
pop
outsb
dec
jg
push
xor
in
pop
xchg
jno
lret
addb
inc
mov
jae
bound
stc
mov
aaa
and
repnz
jo
imul
or
mov
or
ds
add
adc
push
inc
dec
push
add
out
pop
push
mov
xor
or
dec
or
adc
inc
mov
mov
scas
mov
mov
jl
sbb
inc
adc
aas
jbe
sub
dec
pop
push
outsl
outsl
insb
mov
mov
push
push
xchg
jo
push
and
dec
or
dec
gs
push
aaa
fistpl
dec
jo
inc
push
shlb
je
pop
addb
xchg
rcr
imul
adc
std
dec
jne
js
stos
xchg
push
insb
pop
pop
inc
fists
mov
mov
in
push
sbb
inc
jns
push
imul
popa
jb
icebp
loope
mov
dec
or
es
aaa
dec
insl
mov
testl
or
dec
addb
dec
or
dec
jb
xor
add
dec
outsb
inc
or
push
inc
and
testb
repz
push
outsb
dec
xor
test
in
sbb
insb
sbb
xorb
push
xor
imul
mov
outsl
jp
xorl
icebp
inc
sbbl
pushf
bound
jo
jae
sbbb
push
pop
xorb
ds
insb
jne
mov
jne
data16
popa
pop
push
push
xor
sbb
add
dec
call
fildl
push
fildl
inc
pusha
inc
mov
push
rorl
pop
push
out
popa
addr16
subl
dec
xchg
pop
push
gs
movsl
or
test
ror
cmpb
jae
adc
jp
ret
push
push
push
negl
or
inc
jne
arpl
add
movsl
dec
xor
pop
cmp
push
xorl
xor
arpl
sub
mov
inc
or
dec
packuswb
push
pop
mov
mov
iret
push
dec
inc
dec
sbb
pop
adc
sbb
je
lods
ljmp
jo
or
mov
out
and
xchg
pop
pop
pop
cmp
andl
sub
sarb
inc
in
cmp
mov
pop
add
pop
clc
outsl
popw
cmpsb
dec
cmpsl
mov
add
out
aad
push
push
push
cmpsb
or
inc
xchg
push
jne
dec
or
xchg
push
adc
outsl
rcr
push
sbb
inc
loopne
shr
dec
jae
enter
stos
mov
jns
xchg
dec
jmp
inc
mov
pop
pop
lods
xor
cmpsb
testb
mov
and
outsl
dec
mov
xchg
lods
xor
sbb
ja
mov
adc
jg
pop
push
adc
ja
lcall
and
test
cmp
es
jp
adc
push
fdivs
mov
sbb
adc
scas
inc
push
sbb
aam
sub
lcall
mov
jns
int
jp
cmpb
outsl
scas
fs
cs
jmp
bound
and
pop
lods
lods
jmp
mov
jns
adc
inc
inc
jbe
sarl
mov
jge
sbb
cli
mov
adc
and
xor
je
insl
adc
or
push
es
mov
sub
or
push
and
addl
xchg
and
gs
mov
dec
sub
iret
js
pop
mov
outsl
inc
test
rcrl
push
mov
shlb
adc
pop
insl
adc
pusha
pop
mov
adc
jne
inc
popa
xor
push
in
inc
out
xchg
sub
xor
inc
inc
xor
inc
leave
jo
jae
leave
adc
jl
insl
mov
ds
sbb
push
pop
mov
mov
enter
and
pop
popa
mov
jno
popa
fists
sub
push
mov
push
je
inc
push
in
inc
lods
repz
adc
mov
dec
cmp
in
outsl
call
or
jbe
dec
in
icebp
dec
test
dec
push
add
xchg
aam
insl
xchg
and
icebp
dec
gs
push
lock
mov
sbbl
inc
mov
lock
gs
adcl
inc
arpl
or
sub
cli
pop
mov
xor
fs
mov
or
fcmovnu
mov
pop
out
and
inc
lahf
addr16
inc
sbb
fcoms
sbb
push
aaa
dec
dec
out
jae
and
movsl
fwait
pop
jnp
jns
and
or
fisubl
pusha
or
movsl
mov
mov
jno
sub
outsb
add
aam
jp
rolb
outsb
mov
dec
rcll
shlb
out
fs
fs
orb
and
push
outsl
repnz
jb
and
popa
and
in
cmp
into
jo
inc
inc
mov
pop
mov
push
arpl
mov
std
inc
imul
xor
sahf
fs
push
jno
subb
js
insb
push
mov
lock
insb
jle
jno
testl
dec
mov
stc
xor
dec
jae
jno
mov
jge
ss
lea
adc
in
js
leave
jl
js
cwtl
rcrb
cmp
and
mov
push
jle
xchg
movsl
mov
scas
push
loopne
pusha
cli
sbb
ja
leave
and
push
xchg
mov
and
adc
scas
enter
fldenv
cmpb
adc
ja
fcomps
andb
jnp
or
dec
outsb
dec
in
or
mov
insl
ds
mov
pop
add
add
mov
shll
xchg
movsb
dec
lcall
or
movhps
dec
imul
xchg
mov
lcall
or
mov
cmp
push
mov
mov
xorb
outsl
jp
cmp
inc
xor
inc
jo
call
sbb
icebp
xor
test
jb
inc
jae
jo
mov
test
movsb
xorb
inc
add
das
ficoml
pop
shll
xlat
cwtl
mov
sub
pushf
push
js
inc
cmc
add
xlat
adc
in
xchg
and
sub
fidivl
and
push
aaa
cltd
adc
cmpb
mov
add
in
inc
notl
push
adc
in
loope
pop
insl
addr16
push
and
lret
insb
or
nop
scas
arpl
jno
div
aas
imul
lcall
icebp
mov
test
pop
jmp
dec
inc
pop
fistl
ljmp
dec
jno
jecxz
insb
std
jmp
jb
mov
dec
sub
jns
insb
mov
scas
xchg
push
lods
and
inc
sbb
lock
mov
daa
cmp
cmp
hlt
lods
and
leave
mov
xor
cmpsb
insb
adc
or
jg
outsb
ja
mov
mov
sbb
sbb
adcb
mov
fwait
loopne
insl
pop
push
dec
mov
popa
inc
sub
imul
adcl
cmp
mov
es
inc
mov
sub
rolb
inc
xor
in
enter
jno
inc
sbb
outsb
pusha
adc
data16
adc
lock
sub
mov
leave
xchg
icebp
pop
bound
arpl
sub
mov
push
lock
mov
inc
xchg
insb
and
dec
popw
imul
vmovaps
mov
rol
ret
fdivs
jo
pop
adcl
jmp
mov
xchg
dec
scas
inc
sbb
mov
fs
inc
mov
jmp
pop
sbb
adc
lret
push
sub
lods
sub
mov
mov
lahf
adc
xchg
clc
loopne
add
and
xor
sbb
mov
push
addr16
fs
ficoms
out
adc
add
mov
xlat
incl
ja
xchg
sbb
fdivrl
sbb
adc
sub
pop
loope
jne
data16
mov
jo
add
pop
icebp
rorb
nop
sbb
es
xchg
mov
dec
imul
dec
cmpsl
cmpsl
or
jmp
add
inc
push
add
jns
dec
and
fnstcw
pusha
or
mov
test
and
pop
or
test
mov
lods
inc
pop
xor
ucomiss
jae
jb
cmp
cmp
pop
adcb
clc
mov
leave
push
add
mov
cmp
pop
mov
dec
divb
xor
jg
dec
mov
dec
addb
mov
jmp
mov
fcmovnb
inc
and
jb,pn
popa
adc
add
sub
lods
mov
inc
cs
mov
lret
dec
out
lock
dec
sub
aam
cmp
jae
arpl
xlat
fmull
es
mov
add
dec
ljmp
rorb
and
add
add
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
