fcomp
decl
call
dec
and
push
mov
or
adc
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
shll
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jl
mov
mov
sahf
mov
les
mov
mov
xor
push
cwtl
in
mov
add
xor
das
dec
adc
outsb
push
inc
fidivrs
or
sbb
aaa
push
xor
mov
adc
push
lea
push
ficoms
push
add
mov
xchg
or
sub
adc
cmp
roll
dec
add
jg
and
add
push
pop
sbb
int
jmp
inc
push
orb
dec
icebp
out
xor
xor
inc
hlt
push
and
sbb
push
sbb
rcll
push
mov
add
add
ja
and
or
inc
lock
or
sub
lds
mov
pop
lods
jp
or
and
add
xchg
inc
fnstsw
cmpsl
sbb
sub
mulb
push
push
fldt
mov
xchg
add
xchg
sub
cmp
adcb
push
sbb
push
cwtl
out
inc
add
ss
mov
out
xor
push
sbb
bswap
mov
into
jecxz
nop
pop
mov
dec
test
mov
jbe
mov
cmp
mov
fdivrs
push
les
add
push
sub
repnz
lds
inc
mov
add
clc
in
and
push
cmp
lock
add
push
loopne
push
addl
sub
and
and
mov
inc
aam
xor
push
cmp
repnz
inc
push
mov
lea
or
out
push
pop
mov
dec
sub
jbe,pt
add
les
xor
sbb
add
cmpsl
or
pop
in
inc
xor
mul
push
stc
jo
pop
sub
out
pop
call
in
and
mov
test
adc
mov
out
adc
pop
lods
mov
pop
ret
xor
mov
inc
push
dec
dec
push
sub
push
insb
loope
push
add
fdivrs
ret
and
sbb
adc
mov
leave
mov
scas
mov
movsl
cmp
ljmp
test
clc
mov
sub
mov
add
adc
jl
or
scas
insb
add
inc
and
scas
sbb
push
inc
lret
xor
push
xor
push
int
add
call
add
sbb
mov
push
aad
je
xlat
ficomps
in
ret
lea
out
rol
fadd
lock
in
dec
inc
pcmpeqb
ret
out
int3
push
add
call
inc
mov
inc
je
fldenv
xor
lea
or
sahf
cmp
std
adc
mov
insb
or
aas
sub
push
movsb
aas
pop
cmp
hlt
nop
test
cmp
mov
push
jg
dec
mov
dec
push
bnd
cmp
mov
sbb
jo
xorl
xor
inc
je
or
or
jge
and
and
xor
lock
repnz
subb
dec
push
popa
adc
push
cltd
and
and
fistps
ds
xor
jge
lahf
ss
hlt
push
jg
adc
or
test
push
adc
sbb
push
out
lea
and
adc
insl
mov
pop
mov
jb
sub
add
pop
sbb
and
pop
sub
pop
and
and
adc
jne
mov
pop
dec
fmull
mov
push
xor
in
pusha
push
push
es
jbe
sub
out
push
push
push
xchg
decb
jbe
dec
sbb
mov
push
pusha
sub
jns
fprem1
sete
test
test
in
sub
add
nop
mov
orb
xor
adc
jne
loope
pusha
insb
pop
cmp
divl
xor
and
push
cmp
je
test
test
lds
dec
jp
punpckhbw
jne
mov
inc
out
test
jne
push
jle
or
and
aas
add
push
mov
or
and
shl
adc
push
lcall
push
dec
test
and
push
jecxz
inc
xchg
out
pop
movsl
loopne
popa
push
or
xor
cmpsb
jo
push
enter
dec
add
mov
dec
push
ds
dec
ds
scas
dec
push
nop
adc
clc
cmp
mov
jno
push
inc
or
sub
nop
xchg
sub
adc
inc
cmp
add
push
mov
jle
push
push
rolb
movsl
in
ret
jle
test
mov
cmp
xchg
sbb
mov
sti
mov
mov
pushf
jbe
xchg
icebp
sbb
cmp
int
inc
jle
cmpb
sub
push
push
mov
sub
js
or
leave
mov
les
mov
test
or
mov
mov
xor
adc
mov
inc
add
mov
dec
sub
push
sub
mov
xchg
push
adc
xor
mov
lahf
data16
push
push
jle
icebp
inc
cmp
inc
imul
sbb
jp
or
clc
mov
sbb
sbb
or
ss
sub
mov
loopne
neg
sub
cmpl
je
adc
adc
adc
inc
std
mov
fcoml
push
push
pop
xchg
scas
std
sarb
cld
mov
dec
lea
sub
addr16
ljmp
mov
sarb
mov
add
mov
fcoml
adc
adc
pop
cs
test
daa
add
adc
inc
jbe
adc
das
cltd
das
lahf
cmp
insb
or
mov
mov
fcmovnb
add
adc
jl
lahf
mov
push
jmp
inc
mov
inc
sar
in
push
mov
adc
sub
ret
aaa
push
sbbl
adc
lea
pop
pop
icebp
jns
jns
in
jl
aad
cmp
push
sbb
sbb
ret
mov
and
push
cmp
dec
lea
jne
jo
dec
sub
adc
sub
in
jg
push
bound
cli
jmp
cmc
lea
insb
mov
aas
clc
mov
mov
int3
push
mov
mov
or
mov
and
push
push
xchg
dec
lcall
and
cmp
dec
lods
mov
outsb
in
test
es
mov
sub
xchg
hlt
sub
mov
add
mov
cmp
or
cmp
inc
add
push
mov
incl
jle
jne
mov
dec
ret
daa
sbb
aam
popa
pop
rcrb
push
jmp
mov
scas
cmp
je
sub
cmp
je
or
pop
jmp
sub
or
and
mov
jl
mov
test
add
inc
mov
add
rorl
jae
add
add
pop
popf
xchg
cwtl
push
outsb
lahf
jo
outsl
rcrb
mov
fs
or
sub
push
inc
xor
jg
mov
xor
adc
ljmp
add
aad
cmp
jl
test
std
add
push
mov
jp
in
ret
xchg
mov
inc
subl
and
xor
push
mov
or
jo
fs
dec
faddl
inc
xchg
mov
aaa
adc
in
aam
test
pop
push
fimuls
rorb
pop
popa
add
and
and
add
and
mov
and
int3
pop
cld
imul
jmp
ss
mov
lea
add
inc
test
jne
sub
push
push
inc
sbb
cs
adc
adcb
lock
xchg
mov
jno
ret
fists
mov
lds
fs
insb
jne
pop
jo
es
jecxz
pop
dec
es
lea
lods
sbb
and
cmp
jg
test
add
loop
push
jge
xor
mov
cmp
jl
xor
mov
pop
insb
pop
pop
ret
mov
mov
mov
ffree
dec
outsb
adc
pop
rcrl
rol
mov
sbb
push
mov
movsl
lahf
loopne
shl
add
cmp
cmp
or
or
jo
sub
lea
push
imul
cmp
mov
push
jg
push
test
mov
std
sbb
jge
push
call
cltd
in
push
test
pop
nop
lahf
mov
sti
push
mov
jle
mov
mov
cmp
pop
in
aas
jecxz
insb
mov
mov
lea
push
or
ss
sarb
movl
pop
rcr
ds
ja
add
jmp
insb
fcoml
add
push
fists
sub
hlt
jecxz
clc
cwtl
jl
inc
jo
jg
std
or
test
add
add
dec
pop
ret
ds
adc
icebp
mov
enter
lock
jbe
je
cmpl
insb
jge
mov
clc
add
in
inc
hlt
mov
push
pop
or
xor
adc
cmp
push
ret
ret
shll
les
jg
jbe
mov
ds
jne
js
shlb
jp
jg,pn
xor
push
cld
mov
or
lret
clc
fistl
inc
repz
cmp
ja
push
clc
lea
push
push
arpl
aaa
jmp
jmp
aam
push
add
rorb
mov
lcall
mov
lahf
adc
adc
adc
or
mov
adc
push
sbb
lods
test
push
push
push
aaa
add
cmp
push
push
jmp
push
mov
add
sbb
pushf
subl
mov
mov
js
cmp
adc
push
add
push
mov
mul
jg
lock
bound
int3
or
shl
test
aas
pop
push
mov
mov
push
fnsave
add
imul
mov
mov
or
movl
push
aaa
add
mov
adc
je
cmpl
lea
jl
mov
push
jne
push
outsl
shrl
imul
enter
test
int
pop
cmp
sub
rcrb
shl
push
hlt
push
push
mov
lea
fdivl
mov
inc
inc
or
inc
xor
push
aaa
fnclex
xor
cli
scas
cmp
fsts
xlat
dec
xchg
test
rorb
lret
enter
push
shrl
xor
add
stos
fcoms
pop
dec
mov
ret
decb
pop
aaa
or
inc
inc
or
shlb
adc
ret
dec
inc
inc
inc
aas
jg
imul
mov
sbb
fdiv
pop
cld
test
aaa
adc
push
fstps
push
clc
add
outsb
pop
push
push
insl
mov
push
xor
int3
pop
jl
sub
mov
mov
jb
dec
add
adc
sbb
lods
aaa
mov
cmp
cmp
rol
cmp
jge
pop
hlt
add
jmp
inc
add
dec
adc
adc
cmpsb
clc
ret
lods
mov
lea
lds
sbb
shrl
mov
fiaddl
sbb
add
repnz
cmp
icebp
cs
mov
jmp
ret
test
jle
add
shlb
ret
and
dec
addl
pop
pop
and
push
adc
push
out
outsl
rol
sbb
add
enter
orl
and
or
add
ret
push
pusha
ret
mov
xlat
int3
mov
push
or
inc
jle
mov
or
dec
inc
or
xor
lahf
out
lock
hlt
cmp
cli
lret
ficoms
clc
xor
sar
outsl
clc
rcrl
decl
add
sub
dec
mov
pop
sub
sub
pop
movhps
in
mov
adc
inc
adc
inc
sub
and
sub
add
imul
adc
ficomps
mov
and
dec
aas
js
or
mov
jge
fidivs
pop
pop
push
xor
sub
jmp
pop
test
daa
lahf
mov
popa
inc
cmp
jb
shr
hlt
fmull
jl
pop
pop
push
loope
lods
pop
mov
je
lcall
lret
adcb
lcall
outsb
sub
addps
inc
xor
insb
out
stos
sub
sar
jb
out
or
pop
pop
cmp
ds
fs
or
data16
push
cwtl
pop
cwtl
test
adc
cmp
icebp
or
adc
cmp
in
and
xchg
dec
dec
sub
ljmp
push
test
or
fmuls
jecxz
push
sbb
add
pop
inc
subb
xor
int3
mov
vmaxsd
xchg
and
adc
pop
sbb
mov
or
pop
and
sbb
stos
lret
nop
in
sti
pop
pop
jge
cmp
jne
xor
push
push
dec
pop
outsb
or
fucom
push
xlat
push
lea
add
ret
jl
insl
and
fisttps
mov
test
fsubrs
push
test
or
ud1
rcll
xchg
stos
shl
mov
inc
adc
mov
test
mov
add
jg
and
sbb
mov
and
and
mov
and
subb
aas
sbb
add
cld
ret
fisttps
push
jns
subb
into
push
sbb
pop
test
jecxz
loope
or
stos
shrb
mov
je
mov
xor
cmp
fiadds
ja
fimuls
mov
je
or
mov
sbb
test
jbe
sti
mov
inc
push
push
movsb
rol
add
add
shrb
ret
xor
push
pop
leave
mull
push
jbe
push
adc
sub
sbb
std
repz
test
cmpl
and
sti
push
out
cmpb
ljmp
or
jmp
ret
adc
shr
add
jne
and
cmp
ficomps
adc
sbb
sahf
jecxz
arpl
jmp
cmpb
adc
lods
adc
shl
ja
je
orl
cmp
jne
cmp
mov
call
les
aas
pushf
xchg
mov
insl
cmpsl
fnstsw
movb
cmp
sbb
aaa
xlat
jo
je
push
inc
dec
adc
daa
mov
sbb
add
repnz
dec
je
push
and
dec
cmp
dec
mov
add
xchg
sbb
jbe
pop
push
mov
das
cmp
nopl
pushf
push
fstps
leave
cmpl
ja
loope
mov
fisttpll
imul
jmp
or
jp
lods
cwtl
push
lea
jmp
call
mov
sbb
adc
sbb
mov
aaa
sti
cmp
popf
jns
lds
sub
adc
cmp
xlat
pop
enter
xchg
fldz
movl
sahf
or
mov
stc
sbb
sub
lods
scas
sub
fsub
divl
xor
je
xor
jne
scas
int
loope
dec
sbb
in
fnstenv
push
inc
cmp
iret
repz
test
int
jns
inc
mov
iret
in
add
lods
loop
push
jae
or
and
loopne
jg
sbb
addb
loope
push
adc
out
jno
add
and
sahf
in
sahf
in
or
rcrl
add
lret
in
int3
adc
or
adc
xchg
lret
scas
mov
xchg
sahf
pop
popf
mov
jg
mov
mov
pop
push
lea
push
gs
push
add
push
lea
repz
rolb
dec
and
pop
leave
aam
les
sub
mov
xchg
add
inc
cmpsb
loope
sbb
push
js
add
adc
sbb
mov
pushw
je
js
jle
push
mov
add
fiaddl
cld
xchg
mov
nop
xchg
in
push
fists
test
nop
xchg
add
add
dec
push
push
push
jle
jne
mov
ficompl
add
pushf
subl
xor
mov
and
mov
mov
and
adc
adc
int
mov
jle
or
push
fmuls
pop
icebp
dec
sbb
add
in
sub
sbb
movsb
rcl
in
push
lock
call
in
out
stos
xor
sbb
xchg
shll
mov
js
cmp
dec
jbe
out
dec
dec
push
push
push
push
or
xchg
pop
test
or
mov
push
setne
push
mov
dec
and
xor
push
cld
mov
cmp
pop
dec
jg
in
in
rcpps
add
inc
lret
inc
cwtl
rcrl
je
lea
add
add
add
mov
lods
mov
push
mov
mulb
jle
sahf
pop
mov
stc
imul
ret
pop
loope
in
sbb
addl
inc
xor
adc
push
mov
in
mul
or
add
popf
imul
ret
push
push
lea
int
adc
cmp
lahf
les
clc
push
push
mov
mov
sbb
dec
dec
mov
push
push
xor
push
inc
dec
fcoml
cmp
je
sub
adc
jmp
rcrl
rol
lcall
dec
sub
mov
aaa
mov
sahf
inc
add
mov
cmp
mov
mov
in
es
mov
leave
push
push
inc
jbe
push
pop
push
inc
fadd
ret
cwtl
out
out
repz
sbb
push
adc
xor
cmp
inc
or
jle
inc
xor
sub
fidivrl
sub
adc
xchg
popf
or
mov
inc
neg
sbb
in
sub
ret
cmp
call
push
jecxz
lret
adc
sbb
add
push
addb
lock
xor
push
in
or
jno
jnp
mov
cld
sub
push
add
scas
inc
xchg
jge
add
les
mov
repz
rolb
mov
push
or
cmp
xor
xor
lods
cmp
sahf
imul
sub
and
loopne
pop
inc
nop
inc
lea
adc
out
jle
adc
cwtl
add
jmp
lret
into
mov
push
push
push
and
push
add
mov
push
cs
jo
lret
push
mov
movsl
pop
xor
fildl
mov
das
int3
mov
fwait
loop
pop
xlat
loop
pop
push
xchg
les
push
add
je
cmp
loop
pusha
and
aad
lahf
sbb
jle
mov
sar
aad
sbb
jmp
sbb
test
lcall
xchg
cwtl
jb
pop
movl
adc
rcrb
and
ds
mov
shrl
push
inc
mov
mov
out
fisubrs
sahf
or
adc
rcll
dec
xchg
dec
nop
adc
mov
jg
jge
ds
mov
xor
rcrl
aas
mov
push
add
push
xchg
mov
dec
sub
sub
sub
jle
idiv
push
jne
push
mov
and
xchg
add
add
xor
rcrl
or
lea
popa
mov
pop
push
pop
fsubs
push
fstpl
movl
mov
insl
imul
or
and
mov
or
and
adc
enter
xchg
loop
and
sub
test
jecxz
lods
and
xchg
inc
mov
mov
jmp
movb
dec
pop
pop
or
je
inc
testb
dec
lret
push
push
sub
sub
push
addb
inc
inc
or
push
rclb
push
addl
push
pusha
jbe
add
lods
lods
mov
test
jge
push
push
nop
cmp
add
iret
push
push
lea
mov
idivl
pop
push
sub
mov
ss
push
cmp
or
je
rorb
jg
cmp
addl
or
push
push
test
je
orl
dec
addb
adc
inc
xor
ror
add
je
imul
add
or
push
test
mov
cmpsl
push
cmpsl
inc
push
push
and
inc
sahf
jbe
jo
push
sbb
jo
inc
and
js
je
push
jbe
ja
mov
push
dec
mov
sbbl
sub
movsl
sbb
cmp
clc
rdpmc
inc
fldl
fmull
add
aaa
jl
push
inc
in
sub
jb
es
enter
mov
js
pusha
leave
adc
sub
cmp
adc
scas
add
cmp
shlb
popa
mov
in
push
push
loope
or
adc
pop
test
push
mov
enter
push
ret
jne
or
decl
mov
push
add
push
mov
pop
lock
add
in
push
push
and
jp
imul
lock
rclb
sahf
dec
or
in
inc
es
pop
push
mov
aam
push
add
dec
xchg
add
push
cltd
and
or
push
inc
xorl
dec
xor
push
mov
outsl
addb
push
xchg
push
push
lds
arpl
pop
cmp
shll
cld
cld
add
jge
add
je
mov
pop
hlt
cli
cmp
jge
xchg
lock
push
stos
sub
loopne
and
sub
sub
push
pop
inc
push
push
jo
test
cmp
mov
int
dec
push
mov
in
dec
sahf
push
push
and
xchg
add
jnp
test
fdivl
outsb
pop
and
shlb
pop
adc
fmull
sbb
sub
adc
int3
dec
push
push
push
lods
fdiv
dec
mov
rcrl
mov
push
daa
add
popf
cmp
out
dec
loopne
inc
inc
push
sbb
mov
movsb
rolb
push
ss
add
jno
inc
mov
pop
dec
popa
dec
lds
out
push
aad
add
leave
enter
popa
leave
inc
push
mov
xor
mov
jno
inc
and
daa
lock
rcrl
lret
js
cltd
and
mov
add
clc
or
fldenv
fwait
in
enter
adc
jl
dec
add
dec
add
out
xchg
int
call
bound
mov
idiv
call
dec
bound
imul
sar
mov
shr
add
mov
imul
push
or
or
adc
mov
pop
movsb
in
jle
in
or
testb
jmp
faddl
sub
mov
stc
add
loop
add
push
push
enter
mov
jo
and
add
cld
cmp
je
cmpl
sbb
cmp
jne
push
adc
pop
adc
add
ficomps
clc
loopne
lods
pop
es
lea
xor
mov
rol
shl
mov
and
outsl
sbb
mov
lea
out
mov
inc
dec
push
dec
dec
call
cmc
arpl
and
push
je
sbb
mov
or
out
data16
push
ljmp
pushf
sub
sub
stos
mov
adc
cmp
aad
fstpt
cltd
idivl
jo
add
aaa
ds
sub
mov
sbb
sub
sbb
mov
jbe
popf
mov
lcall
add
mov
test
or
jbe
add
xor
sbb
add
xor
mov
popf
imul
cmp
mov
dec
jae
dec
sub
jge
jmp
mov
cmp
fwait
pop
fistl
mov
sbb
push
faddl
add
and
pop
decl
rorb
push
stc
sti
xor
sbb
ret
adc
std
mov
mov
mov
jns
inc
push
fsubs
js
mov
cmp
add
popf
add
mov
shll
js
out
fidivl
mov
lods
add
jle
push
in
push
pop
movb
add
mov
stos
xchg
xor
xchg
imul
adc
call
jbe
inc
cmp
aad
sbb
and
call
sbb
nop
rcll
sbb
dec
rolb
lahf
mov
je
mov
add
aam
js
pop
push
mov
mov
ja
push
or
dec
test
call
movsl
imul
sub
lods
test
add
sarb
notl
sub
sbb
int3
loopne
ret
dec
and
pop
test
test
or
sub
inc
add
inc
fildl
push
sahf
or
inc
outsb
jno
aam
push
inc
outsl
loopne
popa
ret
sbb
jmp
jecxz
inc
jo
sbb
pop
add
mov
xchg
cmp
jne
and
adc
jo
add
into
or
les
pop
or
or
pop
dec
mov
push
mov
pusha
add
or
and
in
push
pop
adcb
mov
sbb
xchg
out
test
mov
xchg
fisttps
fisttps
add
lock
jae
inc
xor
or
mov
adc
cltd
push
loopne
lea
add
or
cltd
test
test
push
pop
push
adc
jl
mov
adc
push
push
dec
xchg
sbb
mov
mov
xor
jl
mov
xchg
adc
inc
pop
js
int
mov
mov
jp
sub
lea
pop
add
xchg
or
ficomps
or
rorb
mov
popa
xchg
push
dec
mov
mov
mov
xchg
or
jns
sbb
xchg
push
push
cmp
das
orb
mov
pop
ret
lahf
or
or
sbb
andl
mov
es
inc
aam
cli
cld
mov
push
clc
push
sub
clc
setb
pop
cld
fisttps
push
mov
sub
cmp
setae
lcall
and
add
mov
xor
xor
mov
les
add
xchg
add
pop
push
add
sub
inc
push
aam
cltd
xorb
pop
add
adc
push
dec
push
movsl
push
es
pop
pop
adc
add
jno
or
jecxz
clc
or
push
dec
xor
push
pop
cmp
inc
mov
cmc
dec
inc
push
adc
sbb
adc
popf
paddw
add
adc
dec
mov
inc
ss
push
inc
push
shrb
push
dec
push
cmp
inc
or
adc
mov
in
inc
add
inc
scas
cmpb
or
call
imul
adc
les
jno
jle
or
pop
xchg
pop
cmp
ja
movzbl
push
lcall
dec
jno
cmp
cmp
ds
jnp
test
cmpsl
push
mov
add
mov
add
add
push
add
test
scas
xor
inc
call
adc
lahf
adc
dec
rcrb
mov
pushf
ret
ret
ds
inc
jb
adc
adc
mov
movl
test
insl
xchg
pop
jmp
jns
cmpsl
dec
pusha
mov
add
das
sbb
xchg
inc
cmp
test
xor
incl
xor
mov
cltd
and
jb
ds
and
jo
push
popa
int
dec
xor
add
cmp
lea
cmp
dec
xchg
lods
mov
pop
std
sbb
xchg
mov
ja
pop
jo
add
sahf
xor
je
ds
sbbb
bound
jne
sub
sbb
pushf
ljmp
dec
sbbb
inc
ds
fisubs
mov
and
or
ret
pop
xor
jl
push
jne
xchg
cmpsl
or
sbb
jo
mov
jmp
ja
sbb
push
adc
cmpsl
or
subps
test
or
inc
and
jae
mov
mov
mov
dec
add
pop
rclb
in
xchg
push
dec
xchg
mov
cmpsb
pusha
rcrl
cli
shl
sub
movsb
xor
or
je
xor
push
test
jecxz
jo
shrl
out
in
xchg
icebp
xor
pushl
jne
push
push
push
ljmp
pop
mov
movsl
movl
in
mov
sti
subb
std
or
out
arpl
mov
adc
out
sahf
dec
push
xchg
dec
ljmp
push
or
cmp
xchg
imul
push
dec
mov
ljmp
dec
dec
inc
pop
enter
insl
xchg
sub
sbb
ret
dec
arpl
sbb
add
and
sbb
push
cmp
mov
xor
ret
add
les
enter
push
push
push
aaa
mov
mov
add
push
push
mov
pop
loopne
add
ficoms
ret
enter
sub
pusha
leave
and
inc
add
test
or
add
add
add
fcmovnu
nop
out
je
fcoms
insb
mov
inc
mov
add
adc
cld
adc
pop
aam
fisubrl
fisttpl
and
adc
shll
adc
nop
es
inc
xor
cmp
cs
push
add
jne
adc
mov
addb
sub
sbb
cmp
or
fs
pop
call
mov
dec
adc
fwait
mov
stos
pop
jno
pop
jg
lods
push
rorb
add
cmp
push
lock
mov
addb
jmp
clc
cmpsb
ret
mov
mov
mov
je
data16
push
add
inc
ss
cmpsl
aaa
pop
inc
es
pop
movl
in
ret
call
sub
add
movsl
add
add
jl
push
data16
mov
pop
sub
xchg
or
insl
add
insb
xor
pushf
sbb
cmc
or
push
and
shlb
and
movsb
pop
push
mov
daa
and
add
test
out
and
sbb
popa
jge
sub
int3
push
movsb
sbb
mov
jo
mov
add
dec
adc
orl
jl
sbb
xchg
clc
fdivrl
jae
imul
je
jne
lahf
in
cmp
jno
mov
mov
jecxz
mov
inc
push
pop
fmull
jmp
push
cltd
or
loope
inc
in
popf
mov
pop
cmpsl
mov
xchg
sbb
push
cmp
sub
inc
pop
push
test
shrl
and
sbb
add
mov
jae
xor
mov
pop
clc
and
adc
gs
mov
dec
jl
adc
test
sbb
test
aad
jle
bound
out
ds
int3
add
push
jns
adc
add
inc
out
test
into
nop
push
movsl
cmp
push
std
stc
cmp
mov
xor
or
xor
or
or
mov
jmp
das
aas
xchg
loop
test
into
movl
fmull
pop
lods
jge
adc
mov
leave
lret
lods
sub
pop
out
push
sbb
and
loope
sbbl
or
mov
mov
or
sub
jb
shld
sbb
je
movsl
nop
iret
lahf
adc
push
xchg
lret
add
push
push
add
add
sbb
ss
pop
jne
or
sahf
das
mov
and
sub
sbb
xchg
push
jle
sbb
add
roll
adc
push
enter
sbb
repz
cmp
or
roll
in
or
add
xlat
std
mov
jns
push
pop
pop
jge
addb
adc
dec
rcrl
ss
push
into
icebp
sub
mov
xor
mov
sbb
or
push
mov
popa
mov
jbe
mov
movsb
enter
sbb
sbb
xchg
roll
add
adc
jns
push
xor
push
add
and
mov
sbb
add
dec
push
add
and
adc
pop
mov
cmp
pop
addl
aaa
cmp
add
sub
mov
outsb
xlat
test
cmp
jmp
sbb
jne
adc
xchg
jmp
push
pushf
add
or
cmc
add
add
jne
mov
bound
xor
lret
in
xor
and
dec
repnz
and
xor
and
stc
push
cs
bound
dec
and
icebp
lret
lods
lock
jmp
add
sub
add
pop
lret
push
enter
es
xor
ljmp
mov
mov
xor
xchg
push
push
mov
and
mov
adc
add
movsb
push
mov
add
jecxz
rcrb
sub
cmp
xchg
add
or
out
inc
mov
call
scas
shll
les
test
push
aaa
cmpsl
add
sub
add
push
xor
clc
sti
js
cld
jnp
sub
jno
mov
inc
imul
mov
adcb
repnz
daa
push
inc
push
pop
rolb
sbb
das
leave
adc
sbb
cmpsb
adc
in
add
adc
sbb
or
xor
pop
imul
push
fwait
addl
sub
xlat
shrl
inc
movl
hlt
in
sbb
adc
jb
mov
xor
cmp
dec
ss
pop
add
out
loope
lcall
jb
xor
push
sahf
adc
push
push
xor
ds
jo
test
pop
sub
dec
fmuls
pop
add
ds
adc
add
ss
jl
xchg
sub
mov
push
dec
add
push
jb
mov
repz
cmp
cs
or
add
mov
or
inc
push
out
in
pop
pusha
inc
jb
pop
cmp
jb
push
test
pop
push
popa
hlt
aam
xor
cld
loopne
shll
mov
jnp
cmp
xor
mov
les
inc
add
and
aas
lock
or
adc
js
xor
push
sbb
pop
test
pop
adc
push
cmp
xor
stos
sbb
test
sub
ds
inc
push
testl
mov
insl
sub
jge
leave
into
test
lea
sub
lds
or
insl
dec
jge
pop
pop
mov
push
or
or
jne
xchg
adc
inc
sbb
int
mov
stos
cmp
xchg
and
dec
adc
dec
inc
sub
jmp
push
movsb
cmpsb
inc
cmp
lea
sbb
mov
inc
lods
mov
addl
pop
inc
pusha
pushf
ss
pop
add
push
xlat
imul
add
sub
or
inc
mov
mov
jg
test
idivb
movb
mov
fbstp
cli
mov
cmp
cmp
loopne
adc
jecxz
in
sub
xchg
fcomp
int3
mov
mov
push
mov
xor
aaa
sahf
movsb
and
faddl
sbb
add
or
lods
shlb
add
mov
stos
in
push
loopne
sbb
inc
sub
jnp
xchg
cld
ss
mov
outsl
ljmp
enter
jl
out
mov
loopne
stos
cs
ljmp
pop
inc
cmp
add
jmp
hlt
push
cs
popf
adc
pushf
push
and
pop
fcomps
mov
sbb
subl
shll
je
or
ss
out
push
clc
mov
pop
cmpsb
jmp
std
push
xchg
faddl
sbb
jp
adc
inc
inc
rorl
cmp
ja
cmp
fld
stos
pop
fwait
outsl
sub
jle
shlb
push
out
mov
sbb
xor
sub
push
mov
lock
pusha
pop
call
subb
outsl
sub
jmp
xchg
adcb
dec
orl
or
inc
aad
std
test
jg
add
cs
push
in
in
inc
mov
pop
and
or
les
pop
call
jo
addr16
and
inc
pop
lock
mov
sbb
and
leave
push
test
add
jecxz
mov
js
or
in
push
loope
pop
je
push
or
push
in
or
pop
or
inc
push
test
jo
das
ret
or
out
iret
dec
in
addb
hlt
dec
push
sbb
sub
mov
and
ret
jno
adc
gs
loopne
jl
gs
or
les
sbb
xor
sub
fists
add
out
add
add
in
lock
dec
mov
xchg
sbb
shlb
sbb
loopne
cmp
je
pushf
mov
sti
nop
pop
scas
mov
sub
adc
inc
lcallw
ret
aaa
iret
rcll
mov
dec
push
cmp
iret
and
sbb
pop
adcl
imull
inc
push
adc
or
push
inc
lcall
inc
mov
and
mov
xor
inc
lcall
inc
cs
push
and
test
add
xor
cwtl
sbb
mov
in
cwtl
jae
fs
stos
inc
adc
xchg
mov
add
xchg
outsl
shll
rcll
pop
add
inc
dec
rorl
and
in
inc
cmc
insb
mov
jmp
nop
lock
inc
sahf
add
nopl
sub
adc
fstpt
xor
jecxz
outsb
jo
pop
scas
sub
ss
pusha
inc
daa
push
adc
push
add
in
test
ret
imul
andb
and
stos
add
jo
pop
jb
test
out
movsb
jb
add
jb
push
pop
cmp
nop
or
adc
xor
test
push
push
mov
in
add
add
or
xor
mov
mov
push
push
pushf
sbb
sbb
or
dec
lahf
push
mov
lea
jmp
mov
divb
nop
orl
sahf
ja
enter
push
mov
nop
pop
les
repz
mov
dec
fcomps
cmp
ss
jb
arpl
sub
or
scas
pusha
xchg
cmp
in
cwtl
jb
pusha
rcll
movsb
push
les
dec
lret
xchg
add
jno
mov
inc
pop
sub
icebp
dec
xchg
mov
sbb
push
pop
repnz
mov
lahf
push
outsl
sbb
mov
sub
xor
cmp
push
jo
mov
push
aas
mov
or
add
mov
adc
out
out
pop
or
pusha
sub
mov
or
or
inc
mov
or
xor
je
aam
add
and
adc
mov
xchg
popf
orl
or
in
loope
outsl
mov
pop
popf
js
inc
or
cmp
data16
xchg
push
pop
mov
rcrl
mov
push
jmp
xchg
and
sbb
inc
dec
jno
mov
mov
jne
pop
inc
je
imul
add
mov
shrb
inc
dec
rcrl
jo
fs
inc
sbb
or
push
inc
dec
subl
test
push
sub
fnstenv
lret
xor
popf
pop
sub
add
sbb
add
mov
orl
mov
mov
insb
stc
mov
cmp
push
fldt
xor
frstor
xor
push
cmpsl
and
inc
jne
out
adc
jb
enter
push
lds
ja
je
cmpsl
mulb
hlt
dec
clc
and
or
loop
pop
ljmp
xchg
icebp
arpl
dec
in
out
pop
mov
rol
jle
jg
xchg
add
adc
loope
pusha
fsubs
add
pop
je
fcomps
inc
fucomi
cli
push
call
sub
jne
push
loopne
xchg
daa
jp
lea
jnp
rorb
fucomi
pop
repnz
pop
jecxz
or
jp
in
cmp
out
add
test
mov
push
push
cmp
popa
or
sub
es
paddusb
jb
cmp
mov
jno
js
imul
jb
inc
add
dec
insb
jg
cmp
xchg
cmp
lea
nop
add
mov
jbe
push
cmp
lods
call
adc
jbe
jle
shlb
mov
out
mov
sub
cmp
xor
add
test
test
das
lea
aas
movsl
imul
or
xor
cmpsl
aas
sbb
fwait
inc
ret
addr16
es
jns
xchg
sub
js
push
xchg
out
inc
imul
cmp
inc
stos
pop
jg
mov
push
and
mov
ss
cmp
lret
addb
adc
lods
add
mov
outsl
pusha
add
mov
jno
dec
and
pop
pop
push
jbe
mov
and
cmc
dec
sbb
das
jecxz
sub
je
xor
out
imul
jo
inc
ja
add
or
jnp
dec
jo
add
mov
mov
ljmp
test
sbb
push
lods
xor
pop
test
mov
push
outsb
adc
mov
xchg
mov
shrb
jecxz,pn
xlat
adc
icebp
push
and
sbb
cmp
jle
mov
mov
xor
jo
into
sbb
in
push
push
add
add
sbb
adc
test
adc
hlt
add
inc
pusha
jnp
adc
arpl
fs
push
int
jae
pop
add
or
outsb
shll
jl
push
mov
mov
mov
cmp
or
and
mov
mov
xchg
pusha
pop
pusha
ja
cmp
push
and
adc
dec
mov
sti
xor
sarl
js
mov
iret
add
cld
lea
sub
fs
rol
imul
dec
mov
cmp
sbb
mov
enter
xor
jno
pop
lcallw
pop
insl
inc
mov
lock
sbb
mov
sbb
enter
testl
adc
js
push
mov
rorb
movsb
add
inc
ljmp
pop
add
or
jnp
test
xor
jo
iret
popl
outsb
sub
mov
int
subb
pusha
test
js
les
xorb
or
cmpsb
adc
push
lahf
mov
xor
dec
fimuls
ds
inc
leave
add
adc
inc
es
mov
jnp
and
test
dec
icebp
dec
xor
sbb
xlat
stc
sub
sbb
xor
das
jno
cmpsl
xor
xchg
test
pop
add
in
add
cmp
push
xchg
pop
cmp
lahf
mov
and
rol
xchg
adc
mov
cmp
add
ret
je
pop
shrl
sub
xchg
push
repz
sbb
aas
push
push
xor
decb
mov
jmp
push
cmp
test
push
inc
mov
jo
xchg
add
cs
insb
cwtl
push
sti
inc
inc
add
ljmp
adc
adc
push
push
sub
loop
xchg
push
sub
and
and
inc
test
adc
jno
push
jmp
mov
add
fdivs
jne
cmp
pop
cld
xchg
inc
add
jns
js
sete
mov
jb
daa
push
sbb
call
dec
add
sbb
dec
dec
loope
cmp
add
xchg
xchg
inc
fsubrp
sub
mov
nop
jle
sub
adc
and
popa
pop
insl
jne
mov
mov
ret
ret
inc
mov
sub
flds
fists
mov
fistpl
xor
subl
or
fistpll
pop
stos
adc
inc
stos
sub
cmc
sub
test
inc
mov
dec
jnp
inc
dec
cmp
je
pop
fbld
sub
test
cltd
rorb
rol
push
es
inc
ret
jg
xchg
lock
add
loope
sub
xor
fwait
xchg
or
xorl
scas
mov
mov
inc
add
sub
pop
push
cmp
xchg
xor
test
jl
sub
sub
xor
les
std
add
rorl
insb
xor
lret
movzwl
mov
popf
shrb
xchg
cmpsb
rcrl
xor
cmp
andl
push
lock
jle
xor
or
fsubrs
pop
xor
push
das
sub
pop
and
jo
xchg
and
and
push
loope
push
cmp
mov
or
cmp
or
lret
pusha
sbb
cmpl
jg
and
test
adc
scas
es
jo
sbb
jno,pn
jno
adc
adc
sub
adc
inc
mov
xchg
add
je
mov
push
jle,pt
sbbl
adc
inc
push
sahf
sub
add
jno
jmp
insb
aam
dec
aaa
adc
call
add
xchg
adc
xchg
or
pop
adc
lods
xchg
stos
call
rclb
gs
cwtl
fstpl
and
xor
cmpsl
xor
xorl
repz
fisttpl
loope
inc
push
push
icebp
nop
pop
jo
mov
roll
sbb
loopne
popf
jb,pt
push
leave
xchg
adc
add
mov
add
sahf
roll
or
adc
push
xchg
inc
inc
mov
mov
movb
and
xor
outsl
or
sbb
shlb
sub
testl
dec
or
add
dec
out
jle
xchg
mov
mov
pop
aad
push
test
pop
push
add
loop
rorl
fnstsw
call
ljmp
mov
sbb
push
add
fdivl
add
ret
xor
pop
push
xchg
xor
adc
xchg
loopne
mov
push
rcll
or
or
das
cld
dec
mov
insb
xor
xor
adc
rorl
out
pop
jb
arpl
add
je
push
push
or
popf
testb
jg
mov
sti
jg
xor
hlt
cmp
jne
or
push
inc
les
into
loope
xchg
out
ja
bnd
sub
lock
cmp
mov
jnp
aaa
testl
decl
cmp
subb
adc
xchg
loop
loop
sub
sbb
inc
mov
pop
adc
xor
mov
outsb
add
or
lea
jge
cmp
adc
push
imul
pusha
xor
push
pop
stos
add
aas
push
add
push
push
inc
sub
shlb
fidivrs
sub
sti
xor
cmp
adc
or
movl
mov
xchg
sbb
nopl
jb
lods
mov
out
out
add
in
sub
dec
and
or
sbb
das
sarb
mov
lret
lds
xor
push
in
aam
sar
pop
out
bound
ja
xor
lods
cmpsb
aaa
mov
jp
mov
push
cwtl
lea
add
cmp
push
mov
push
aas
cmc
xchg
add
sub
testl
outsb
scas
out
add
add
cmp
fsub
push
mov
xchg
lods
or
decl
hlt
jge
pusha
scas
push
cmpsl
arpl
jp
mov
inc
inc
fmuls
sbb
or
shll
add
xrelease
jno
enter
int
sub
push
es
xchg
mov
jae
push
and
pop
mov
push
push
jg
push
add
push
out
xchg
adc
enter
rorb
dec
cld
sub
ds
push
loope
lea
mov
mov
add
or
or
jo
sub
push
hlt
sub
push
test
andb
push
mov
dec
ss
ficomps
push
stc
xorl
jo
add
or
cwtl
lods
out
outsl
subl
mov
jo
jne
hlt
and
hlt
push
adc
cmp
ss
stos
movnti
or
adc
adc
xchg
pop
rcrb
adc
mov
sbb
lods
leave
add
shlb
lds
cmp
mov
push
jae
or
mov
push
scas
outsb
dec
sbb
adcl
lea
jle
cmp
lods
mov
or
aas
cmp
arpl
add
and
dec
cmpb
lods
xor
mov
jns
push
jo
push
xchg
jp
lahf
das
push
add
cld
inc
loopne
ret
jg
arpl
mov
shl
sbbb
xchg
or
ret
test
popf
pop
scas
adc
ret
test
cmp
insl
es
cmp
subl
and
sbb
ret
vminpd
movsl
stos
or
decl
filds
jl
mov
xorb
and
adc
cmp
jle
lock
rclb
mul
inc
imulb
lock
pop
mov
push
xor
xor
pop
pop
mov
sub
insb
lret
pusha
jo
popf
or
outsb
jns
inc
test
push
int3
call
cmpsl
push
lea
mov
orl
or
push
rorb
and
push
push
je
sbb
fnstcw
cmpsb
sub
fbld
pop
imull
sbb
shrl
pop
xchg
cmp
hlt
xchg
addb
mov
or
mov
movsl
mov
sbb
ret
push
and
int
pop
pop
pop
popa
loopne
mov
add
ret
dec
pop
dec
pop
mov
shlb
jle
or
fisttps
outsb
aas
mov
movl
or
push
xor
jne
or
push
lock
adc
inc
jae
lods
mov
xlat
jg
ss
push
ficomps
xchg
push
lcall
shll
add
ret
xor
fs
stos
popa
je
cmpb
lock
mov
sbb
cmpsb
push
mov
lret
pop
jb
add
ret
std
sub
movnti
test
mov
js
int3
jmp
aas
iret
adcb
push
fs
mov
shl
jns
arpl
dec
movsl
pusha
push
jp
pop
mov
aas
inc
mov
push
cmp
mov
test
lods
inc
xor
or
xor
and
or
add
shl
jmp
mov
daa
arpl
addr16
je
cmpsw
lret
pop
lcall
int
push
iret
xor
dec
movsl
adc
push
subl
xchg
lds
xor
push
sbb
pop
pusha
mov
inc
cmp
inc
or
mov
and
ljmp
mov
xor
iret
sarl
add
f2xm1
push
shl
adcb
inc
mov
add
mov
ds
xchg
in
mov
test
cmp
and
jae
add
push
push
push
xchg
push
push
sbb
decb
xchg
jle
add
inc
add
jmp
dec
data16
mov
cwtl
push
loopne
dec
add
push
cmc
adc
or
xor
or
and
xchg
jmp
or
imul
fidivl
add
dec
add
mov
cmp
sub
inc
mov
sub
adc
aad
pop
sub
ficomps
inc
inc
ret
mov
push
xor
push
sbb
dec
inc
lahf
lock
in
push
ds
xchg
adcb
xchg
loopne
sub
stos
das
cmp
mov
push
inc
gs
in
xor
sti
je
adc
lock
jp
es
sub
fists
lods
xor
cmp
adc
add
adc
and
sti
push
mov
and
lea
xchg
and
shl
xchg
mov
arpl
insb
and
sub
out
and
rolb
and
xor
add
mov
out
jnp
fstl
xor
and
js
push
cmp
add
jne
cld
cmp
mov
lds
ja
add
mov
sub
dec
loopne
cmp
add
sub
pop
push
je
inc
adc
pop
xlat
add
and
faddl
and
cmp
sbb
push
aad
sbb
mov
sbb
adc
sti
int
mov
sub
test
inc
xor
push
int3
sub
push
jne
push
imul
add
and
dec
insl
or
dec
js
pop
repnz
cld
mov
inc
mov
arpl
add
or
movl
test
dec
xor
pop
add
push
add
inc
sub
push
push
add
dec
pop
pop
xchg
lahf
add
repz
push
ds
cld
or
add
or
and
sahf
push
sbb
fs
loope
mov
add
and
out
cltd
mov
jle
popa
stc
adc
add
movsb
cmpb
jb
adc
jp
inc
stos
and
rorl
jns
sbb
cmp
add
add
push
jl
sub
decl
jne
jecxz
adcl
in
imul
test
stos
je
jb
xchg
pop
dec
dec
xor
stos
add
sub
xchg
sbb
insl
mov
in
push
test
push
and
and
roll
push
inc
xorl
je
dec
xor
lock
push
cltd
dec
add
and
inc
popf
add
xchg
add
inc
xlat
insl
sub
adc
fisttps
mov
xchg
adc
sub
push
insl
gs
aam
lret
inc
sub
lcall
add
add
adc
adc
cmpsb
or
jae
stos
js
push
add
test
sbb
lret
mov
mov
jmp
shll
mov
add
aam
dec
jo
jb
cltd
movsb
ret
stos
sub
leave
rorl
add
mov
test
stos
cld
sub
mov
aas
ficoms
in
shl
sub
jl
popl
push
mov
jl
sub
mov
xor
adcl
lret
push
sub
inc
or
dec
mov
add
xchg
push
fmuls
jne
xor
pop
mov
cmp
push
cwtl
cmp
into
xchg
and
mov
cs
insb
lock
cmpsl
insl
and
xor
mov
mov
cmpsl
in
outsb
clc
sub
ss
pop
call
shrb
xor
xchg
dec
call
push
xchg
push
jnp
ss
push
dec
xor
xor
mov
orl
pushf
xor
iret
or
push
sub
jg
push
jne
ret
push
mov
nop
push
push
enter
fdivl
ficoml
fs
aaa
xor
cmpl
iret
gs
in
lcall
leave
dec
add
inc
dec
add
adc
jae
xor
arpl
sbb
or
xor
push
jo
and
add
pushf
lock
or
rcrb
pop
decl
sub
or
mov
inc
xchg
lock
add
or
decb
cmpsb
pop
sbb
lea
stc
pop
push
aas
add
rcr
sub
xor
mov
and
dec
adc
into
cmp
jb
pop
jl
dec
lods
pop
fdivrs
aam
push
call
or
sub
inc
adc
imul
sub
test
adc
adc
jb
mov
mov
jle
loop
or
mov
popa
sti
sub
imul
add
in
call
inc
sti
call
add
clc
sub
or
jge
lret
or
push
repnz
add
lcall
das
cmp
sahf
aas
pusha
loopne
cmp
and
aas
imul
sub
sub
lea
add
pop
push
push
push
push
cld
xchg
dec
movsl
daa
push
push
push
push
sbb
out
in
push
scas
sub
add
add
push
movb
add
adc
xor
pusha
push
lds
push
cwtl
sub
jb
enter
call
jg
imul
daa
add
pop
add
loope
jae
mov
decl
lea
jmp
into
nop
sarl
sub
inc
adc
jp
push
rorl
ret
loopne
test
fdivs
adcb
rclb
push
push
or
outsl
int3
push
mov
or
pop
sarl
pop
xor
ljmp
std
inc
inc
scas
nop
insb
adc
insl
pop
incl
scas
pushf
and
ljmp
popa
sub
inc
inc
inc
xchg
pop
jo
jmp
adc
adc
rcrb
pushf
pop
out
inc
add
add
fsubrs
jnp
add
add
mov
push
push
xor
add
cmp
push
lock
adc
add
idivl
cmp
mov
lret
ret
in
je
imul
aad
jge
loope,pn
push
vxorps
mov
push
lcall
adc
dec
cmp
and
dec
pop
add
inc
lds
jle
pop
xor
int3
push
push
sub
mov
cmp
push
les
loopne
add
xor
das
pop
and
push
push
cmp
fcomps
adc
or
mov
mov
fimull
sarb
pusha
push
push
mov
xchg
data16
inc
sbb
inc
push
xor
and
pop
sbb
cwtl
sbb
push
test
xchg
xlat
popf
push
in
cld
call
push
cli
push
shrl
add
push
mov
sbb
pop
cmp
mov
sarl
cld
xor
idivb
fs
out
cld
add
sbb
jmp
fs
push
adc
xchg
lock
in
sarb
mov
xor
sbb
idivl
push
cmp
push
mov
aaa
test
mov
cmpsb
cli
ret
loope
push
inc
mov
xor
or
mov
pop
or
pop
pop
push
out
mov
cli
call
push
or
pusha
pop
cld
pop
add
lock
push
call
popa
fnstcw
dec
cmp
pusha
bound
inc
pop
push
addr16
dec
or
pop
ret
add
dec
adc
or
pop
imul
sub
mov
add
or
mov
ret
jg
push
cwtl
mov
orb
or
push
adc
xor
xor
push
sbbb
cltd
cli
mov
movl
ljmp
ss
aas
pop
add
sarb
test
or
push
push
mov
out
mov
pusha
push
dec
lock
and
adc
mov
pop
and
and
inc
xor
pop
imul
jb
push
popf
fdiv
gs
cmp
insb
popa
push
stos
or
scas
fisubrs
fstps
inc
add
clc
inc
inc
jnp
cmp
jae
mov
mov
pop
pop
outsl
inc
adc
sbb
movl
cmc
fcompl
inc
push
mov
pop
fcomps
jl
mov
lock
lret
cmp
and
inc
and
call
ret
fdivrl
sub
push
mov
sub
sbb
movsl
cmp
and
or
add
sbb
cld
cmp
mov
jge
movb
imul
rorl
test
pop
xor
sub
sub
jne
mov
adc
cmp
lea
jne
push
push
cld
or
push
push
rcrl
jl
cmpsb
mov
mov
sub
test
fs
dec
xchg
jge
push
lea
jae
movsb
cli
pop
movl
or
or
out
movl
je
mov
xor
sbb
pushf
rcrb
aas
mov
nop
iret
mov
int3
adc
out
adc
movsl
in
push
loope
popf
cli
dec
mov
andl
jmp
in
or
or
das
jecxz
pop
and
adc
adc
andb
loopne
pop
cmpsb
adc
dec
mov
adc
pop
prefetch
or
in
pop
lods
mov
test
testl
mov
mov
inc
xorl
out
rol
js
xchg
xor
xor
imulb
push
pop
sub
int3
ret
in
adc
mov
clc
movl
sbbb
inc
inc
ljmp
sbb
mov
push
dec
push
dec
and
hlt
hlt
pop
lret
arpl
hlt
out
sub
pop
fistpll
push
int3
lea
push
cmpsl
adc
hlt
inc
js
push
sub
sub
fs
sbb
lods
add
push
xchg
ret
hlt
inc
sbb
pop
aad
inc
insb
arpl
in
dec
jo
sbb
mov
lahf
dec
enter
xchg
pop
jo
arpl
jo
divl
fwait
cmp
orl
pop
push
mov
cmp
lea
inc
cmp
adc
mov
js
lock
fsubs
sub
adc
xchg
aad
add
push
push
das
leave
add
xchg
and
adc
outsb
cwtl
cmp
push
or
sbb
mov
push
push
loope
inc
sub
mov
dec
imul
jg
push
and
push
push
jl
inc
pop
mov
pandn
pop
dec
rcrb
sti
or
lock
jns
test
xchg
dec
add
xchg
sub
sub
jo
loope
add
pop
mov
orb
pop
or
dec
lods
movsb
pop
inc
mov
push
or
dec
mov
and
add
sub
adc
in
add
mov
stc
mov
or
mov
rcll
jl
cmpl
ljmp
test
mov
mov
les
fs
or
lock
ljmp
fstpl
lret
sbb
push
push
sbb
lcall
and
std
mov
add
dec
fstpl
push
add
popa
mov
or
mov
push
cmpl
and
jecxz
shrb
mov
push
ss
adc
add
add
je
loope
std
or
and
push
sub
sbb
mov
fiadds
pop
inc
add
sub
nop
sbb
jg
inc
sbb
inc
inc
xchg
inc
push
movsl
cs
shrl
or
xchg
and
push
jl
pop
and
mov
or
pop
mov
push
mov
fs
mov
add
inc
mov
hlt
xor
jl
fimull
or
mov
and
stos
pop
stos
sub
sbb
pop
jo
outsb
and
add
lds
cmp
mov
add
adc
pusha
nop
shll
cmc
insl
jae
orl
adc
dec
xlat
xor
sbb
adc
sub
or
xor
sub
popf
mov
and
loopne
mov
js
and
or
or
xor
sub
mov
inc
sbb
jno
xorl
cmp
cmp
push
movaps
movsb
je
scas
arpl
sub
adc
adc
fldenv
adc
adc
adcl
add
or
cmp
inc
loope
in
out
fiaddl
out
gs
clc
add
pop
or
mov
mov
rol
outsl
js
or
insb
repnz
adc
mov
in
stos
mov
xchg
sub
decb
push
icebp
ljmp
adc
movsb
jmp
adc
adc
fnstenv
fmuls
push
lock
cltd
in
xchg
mull
inc
sbb
pop
inc
sub
cmpsb
sub
inc
adc
push
je
insb
and
inc
xchg
and
mov
test
push
xchg
lret
inc
push
test
push
cmp
or
add
cmp
sub
test
add
inc
adc
sub
arpl
mov
sti
nop
inc
fidivs
adc
cmp
andb
cmp
push
cmp
push
cmp
in
les
inc
cli
cmp
testb
or
icebp
mov
rcll
cmpb
push
aas
jge
imul
cmp
sbb
ret
sbb
xchg
call
mov
or
push
pop
fadds
sub
push
push
pop
jno
xor
negl
or
jg
out
inc
data16
pop
sub
clc
sti
mov
adc
xor
add
mov
inc
insb
movsl
stc
rcl
dec
into
vpunpckldq
sbb
push
push
add
sahf
shl
loop
cmp
scas
and
pop
lods
outsl
std
dec
add
loop
dec
adc
mov
sub
adc
js
inc
push
dec
sbb
mov
adcb
push
sbb
mov
pop
test
pop
xchg
sub
and
sarb
push
push
xor
fisubl
je
add
lcall
xchg
push
push
pop
pop
adc
inc
and
mov
sub
or
mov
sbb
push
xor
push
mov
arpl
add
push
and
push
mov
popf
sar
push
inc
cmp
dec
mov
dec
xchg
ja
ja
jmp
ss
push
add
test
and
adc
leave
sub
mov
push
add
xchg
int
add
xor
sbb
enter
pop
pop
sahf
shrb
mov
stos
rorl
aas
push
cltd
push
rcll
lods
in
dec
jne
call
mov
xchg
out
dec
push
pop
sub
shrl
pop
fdivl
add
add
lods
loop
js
nop
mov
les
pop
addr16
inc
jno
push
int
subl
je
pop
das
mov
adc
or
inc
dec
inc
icebp
inc
lock
adc
testb
pushf
inc
xor
dec
shll
xor
les
jl
dec
mov
pop
cmp
movsl
imul
pop
repnz
xor
in
xor
dec
xor
push
push
xor
sub
dec
push
pusha
sahf
sub
adc
push
add
fadds
sti
jo
push
mov
es
enter
sbb
add
push
pop
adc
inc
lods
dec
cmp
add
imul
pop
test
dec
jns
sbb
icebp
fwait
ret
sbb
xchg
jne
mov
repnz
mov
mov
imul
sub
mov
pop
mov
xor
xor
sub
addr16
jb
xchg
addr16
cmpsb
movsb
push
adc
jmp
sub
iret
and
and
lea
xorl
mov
out
int3
pop
rcrl
mov
xor
xchg
cmp
outsb
add
dec
enter
pusha
nop
and
or
push
pusha
into
add
jmp
mov
pop
int
rcl
test
dec
shlb
add
pushl
sub
or
push
dec
lds
shll
loopne
inc
inc
insl
je
mov
cmp
mov
popl
fs
xor
addr16
push
popa
push
addr16
pop
add
leave
subl
cmp
fsts
rcll
outsb
imul
sub
mov
sbb
inc
mov
xorb
clc
insb
jo
inc
sub
and
shlb
mov
mov
fcoml
xor
push
loope
scas
nop
dec
pop
push
negl
rclb
and
and
xor
out
sbb
adc
mov
jmp
lea
nop
rcrb
mov
xor
aam
inc
stc
sbb
push
jecxz
or
xor
sub
scas
sbb
xchg
jge
xor
ltr
jmp
sub
js
fidivrl
fs
pusha
ret
rolb
fs
jl
mov
jno
sub
push
rcll
or
push
insb
jmp
sub
push
push
xlat
and
and
scas
push
xchg
pusha
push
or
jge
push
push
add
sbb
sbb
insb
and
in
xor
mov
fdivs
rclb
xchg
icebp
repnz
jnp
pop
test
inc
arpl
jb
xor
add
or
les
shll
add
hlt
call
mov
push
jo
jne
imul
sub
nop
lret
arpl
lods
in
sbb
pusha
cltd
aas
push
bts
or
mov
pushf
mov
pop
and
add
push
push
repnz
dec
add
movb
das
mov
cmp
repnz
xor
push
or
or
test
inc
push
inc
sahf
and
jp
repnz
cs
lock
sbb
push
inc
adc
arpl
dec
lods
mov
pop
jge
or
jne
inc
cmp
aam
outsl
mov
push
pop
mov
push
and
add
xchg
or
mov
push
jmp
adc
jo
sahf
sub
adc
add
aas
adc
mov
push
lea
jl
xlat
sbb
insl
sbbb
jge
lret
and
jne
mov
jg
push
rorb
mov
cli
stos
fstl
xlat
push
fucomi
das
lea
dec
fidivs
jb
jb
call
bound
cmc
rorb
shl
cmpb
je
sub
and
call
fiadds
sbb
sub
inc
sbb
lock
insl
mov
sub
fcoms
add
adc
ret
or
dec
sbb
addl
fiadds
push
les
jnp
pusha
and
cld
adc
sub
out
and
popa
cmc
dec
push
js
es
cmp
or
inc
add
cmp
orl
sub
and
cli
push
push
inc
mov
mov
into
dec
sbb
jo
sub
test
and
shll
and
and
mov
sub
jl
fcoms
xor
mov
push
out
inc
pop
rorl
in
cmc
inc
sbb
imul
ljmp
mov
or
sbb
mov
cwtl
jp
add
das
fdivrp
lcall
jb
lock
out
loope
xor
xchg
inc
dec
xchg
add
mov
sub
cmp
jp
inc
mov
adc
mov
xor
jne
xchg
add
jbe
in
sub
xor
xor
aas
cmp
mov
jb
adc
inc
or
inc
lods
mov
pop
and
push
cwtl
add
mov
cmp
mov
dec
push
fdivr
sub
pusha
in
fdiv
mov
lea
adc
mov
push
mov
shr
adc
push
test
push
push
push
and
daa
sub
jecxz
xor
jo
jecxz
push
sbb
aaa
add
vpcmpeqw
lds
dec
mov
loop
outsl
and
cmp
mov
mov
sbb
and
inc
sub
lods
fucom
jge
ret
push
outsl
popa
pop
ds
xor
push
aas
filds
dec
into
test
mov
xchg
and
push
aaa
and
aad
adc
dec
cmpsb
dec
mov
mov
ja
xchg
in
adc
push
inc
cmpb
shufps
pop
cli
cmp
lock
out
mov
movsb
iret
mov
cmpb
pop
push
push
push
orl
sbb
push
movsb
cmpl
and
cmpsl
inc
or
sub
fidivs
xor
ret
inc
dec
lcall
or
lock
mov
pop
cs
push
push
cmp
lds
push
repnz
adc
ja
jno
xchg
fcoml
or
shll
push
arpl
pop
hlt
sbb
stc
dec
mov
mov
adc
dec
or
and
repz
push
mov
fmulp
adc
push
inc
call
insb
jge
cmp
jne
push
inc
and
pop
adc
xor
ret
add
sub
and
jmp
daa
call
adc
inc
add
std
sbb
inc
pusha
sub
cmp
lahf
or
xchg
pop
and
loop
je
out
pop
lret
clc
mov
mov
movl
xor
inc
out
sbb
fisttpll
mov
faddl
sub
adc
jo
popl
and
test
mov
mov
or
fildll
scas
xor
inc
cmp
adc
push
sub
xor
jle
adc
call
ljmp
add
xchg
test
xchg
loop
fs
stos
idivl
mov
mov
call
call
into
in
icebp
or
pop
dec
aad
push
add
jno
mov
jl
jno
xlat
or
push
mov
dec
add
xor
cmp
add
mov
and
mov
imul
je
dec
mov
push
push
call
adc
je
lret
stos
mov
add
fdivrp
aaa
fcoml
repz
push
lea
push
inc
push
adc
popf
aam
jne
lods
add
xchg
test
mov
lahf
sbb
sbb
adc
mov
popf
fs
push
cltd
adc
adc
sub
xor
stos
cmp
fcomi
cmpsl
ja
pop
icebp
adc
inc
cmp
or
mov
jne
mov
jge
pushf
push
pop
adc
sub
mov
and
ret
adc
aas
out
mov
cmpsl
mulb
dec
testl
and
sub
cld
or
shr
ja
cmp
cli
and
or
rclb
movsb
out
loopne
or
test
cmp
jo
push
addr16
sbb
pop
fs
push
xchg
dec
or
aaa
mov
pusha
dec
hlt
pop
test
push
or
jg
cmpb
jne
inc
xchg
push
xchg
sbb
aad
dec
repz
or
or
inc
cmpsb
lret
es
add
mov
and
adc
bound
outsl
lea
nop
or
or
xchg
xor
sbb
pusha
and
ss
test
adc
and
adc
rdtsc
jo
aad
jmp
sbb
jb
adc
into
xor
push
xchg
mov
sub
sbbl
outsb
dec
dec
imull
mov
xchg
mov
adc
add
les
add
scas
inc
or
add
add
and
add
test
ret
pusha
aam
dec
cmp
xor
mov
fidivrs
push
leave
js
sub
xchg
add
pop
loope
ror
push
clc
push
lea
cwtl
fists
nop
movsl
mov
pop
fdivs
sbb
xor
mov
in
test
lods
lods
mov
cld
pop
adc
pop
cmp
adc
cltd
arpl
pop
test
pusha
push
dec
push
je
cmp
enter
xor
and
sub
push
enter
incb
pop
push
jb
pop
pop
enter
or
pop
repnz
push
enter
dec
movsl
mov
push
inc
les
iret
sub
addb
mov
push
push
jne
insb
push
pop
cmp
add
cld
add
push
nop
out
xlat
and
adc
push
xor
sub
push
xchg
in
lahf
or
sbb
lock
dec
adc
and
cltd
pop
push
sub
rorl
adc
imul
clc
inc
mov
sub
sbb
push
mov
xor
push
and
shlb
mov
adc
push
cmp
sub
test
pop
mov
pop
jp
mov
and
test
clc
add
and
mov
sub
mov
or
inc
iret
cmp
jne
in
add
repz
mov
movsb
fadd
mov
dec
or
shl
mull
hlt
ret
or
repz
push
fisttpl
je
lods
bnd
repz
and
into
repnz
dec
add
sbb
push
add
sarb
or
push
xor
pop
arpl
loopne
sbb
and
inc
rolb
pop
xchg
aaa
dec
sbb
insl
and
rcrb
xchg
add
and
adc
jae
and
add
movsb
sbb
test
add
sbb
jp
mov
aaa
push
shlb
xchg
or
xchg
cmp
pop
mov
dec
sbb
rcl
ret
pusha
pop
cltd
ret
es
stos
aaa
loope
pop
mov
sub
int
jns
and
jmp
mov
jnp
shrb
lea
sbb
add
mov
pop
jb
stos
xchg
mov
adc
or
sub
paddsb
dec
movsb
aaa
xor
mov
dec
hlt
test
and
fisubs
scas
mov
push
xor
adc
inc
mov
mov
icebp
or
mov
sbb
push
mov
dec
mov
cld
mov
adc
pop
mov
sbb
inc
sbb
inc
xor
dec
mov
fistl
cltd
mov
mov
movsl
mov
es
sbb
add
sbb
sbb
adc
hlt
push
add
and
and
pop
cmpsl
sub
hlt
roll
jl
inc
dec
mov
and
movsb
nop
pop
push
sbb
and
loopne
dec
into
sbb
sbb
add
add
push
movsb
mov
pop
xchg
mov
push
jbe
cltd
xor
pop
fisttps
dec
mov
dec
xchg
or
jo
je
dec
mov
cmp
cmp
push
enter
push
aaa
and
aaa
dec
loope
lods
cmpsl
hlt
xor
jmp
dec
mov
sbb
nop
lods
mov
dec
pop
hlt
fdivrl
lret
cmp
enter
mov
cmp
cmp
in
mov
and
sbb
movsb
int
push
xor
aas
jo
pusha
mov
pusha
sub
add
jne
ss
xchg
orb
cmp
pop
ret
push
mov
jo
int3
pop
mov
push
xchg
adc
je
data16
and
or
add
add
dec
aam
mov
cltd
fstpl
add
jae
pop
mov
push
jns
sbb
xchg
inc
push
jmp
test
andb
and
mov
inc
stos
ja
add
sub
adc
inc
dec
mov
insl
or
push
push
push
push
push
add
sub
sbb
inc
sub
pop
or
and
sbb
dec
repnz
pop
nop
jns
outsl
push
cmp
jge
jbe
cmpsb
cmpsb
mov
adc
sbb
cmpb
bound
call
pop
addr16
pop
in
jne
clc
pop
mov
add
and
lea
push
addb
int
pop
xchg
cmpl
sbb
and
or
mov
dec
call
stos
xor
subb
or
cwtl
loope
enter
pop
mov
aam
loope
ficompl
xor
push
mov
rcr
notl
xchg
popf
lods
dec
xlat
jge
jl
and
jge
inc
jl
cs
loopne
xor
xchg
hlt
jl
and
xor
inc
and
sbb
fsub
mov
pushf
fcom
or
call
imul
int
jmp
inc
sbb
pop
pop
pop
push
inc
int3
mov
mov
or
dec
enter
imul
enter
dec
ret
sbb
pusha
add
inc
movsl
inc
ds
and
testl
imul
mov
push
inc
push
unpckhps
adc
inc
mov
imul
lea
push
movsb
fwait
sbb
mov
xor
push
mov
and
xchg
or
jl
push
xor
adc
mulb
push
adc
rcrb
aad
jno
loopne
fisubrl
mov
leave
adc
and
push
sub
push
repz
pop
sarb
test
cmp
shlb
push
dec
rcrl
push
test
pusha
ds
add
addr16
pop
mov
xchg
add
lea
imul
jb
jne
cmp
aaa
mov
push
sbb
pop
pop
aas
rclb
rol
aas
movsl
dec
inc
add
out
dec
mov
or
sub
je
fmuls
movsl
jg
les
add
das
fisubrs
jns
data16
xor
jnp
ret
loope
push
mov
adcl
inc
add
push
mov
and
test
mov
xchg
clc
pop
sbb
add
sbb
sub
ja
sub
sarl
jge
sbb
mov
adc
clc
fptan
cmp
nop
xchg
xor
arpl
sbb
sbb
and
xor
push
lahf
jmp
and
or
add
adc
push
mov
repz
inc
or
cltd
shr
xor
mov
mov
xchg
dec
and
iret
in
push
arpl
arpl
test
push
sbb
dec
rol
push
push
das
mov
cs
lcall
push
xor
test
or
lock
jmp
fst
loope
loope
jne
mov
int
and
cmp
jnp
fstl
mov
mov
pop
and
cmp
cmpb
xor
xchg
add
add
sbb
lods
mov
enter
out
mov
call
jge
or
push
and
loope
xchg
pop
add
xchg
push
add
bound
fidivl
mov
push
mov
pop
mov
and
in
divl
inc
movsb
nop
loopne
fcomi
mov
loopne
jns
mov
sub
mov
xor
scas
mov
pop
add
cmpsb
and
mov
push
negl
cli
sarb
adc
test
mov
pop
imul
movsb
hlt
xchg
sbb
sbb
xchg
sbb
inc
add
shlb
pop
addb
pop
add
mov
fwait
sub
cmp
cmp
mov
mov
cmp
cmp
push
es
and
loop
popa
orl
imul
js
fnstcw
mov
xchg
dec
xor
mov
jb
xchg
sub
add
adcb
test
jp
adc
adc
mov
jl
adc
cmp
mov
mov
rcl
jns
mov
scas
cs
and
adc
lock
mov
data16
ds
sub
push
mov
or
cmp
adc
mov
push
cs
push
ljmp
add
sub
cltd
add
dec
shrb
pop
sbb
mov
inc
cmp
imul
or
pushf
push
mov
mov
loopne
popf
mov
mov
sbb
repnz
stos
and
pop
mov
add
pop
popa
std
outsl
cli
inc
or
shlb
cli
stc
jb
pop
mov
add
cmp
jae
sbb
jmp
xor
clc
fstpt
sti
stos
add
ja
push
push
push
insb
pop
jbe
adc
adc
movsb
mov
sti
movsb
jb
pop
pop
ret
pop
cmpb
cmp
jb
xchg
mov
outsb
add
das
dec
pop
ss
aas
rorb
or
pop
add
aad
sti
loope
and
jno
cs
mov
sbbb
xor
loope
hlt
std
and
lcall
adc
push
movb
xor
mov
mov
and
das
jmp
push
jo
test
sbb
inc
xor
mov
rcll
pop
adc
inc
xchg
sub
sub
std
mov
mov
flds
add
add
js
sbb
stos
and
xor
add
ds
and
xor
adc
sbb
aam
mov
sub
insl
dec
dec
or
cmp
pop
xor
cs
sub
or
sub
xor
xor
js
push
scas
loope
les
pushf
cmp
rorl
sbb
add
add
lea
push
add
mov
cmp
mov
sub
test
pop
or
and
mov
clc
adc
icebp
int
test
cs
hlt
inc
pop
or
dec
or
in
adc
aas
popa
push
inc
test
or
out
imul
or
sarb
push
add
or
loopne
sub
lahf
or
mov
int
adc
adc
inc
lock
into
adc
inc
sahf
or
and
or
sahf
minps
xchg
jns
or
add
mov
daa
sbb
xor
or
pop
insb
loop
add
aas
mov
dec
pushf
xlat
jo
sub
mov
cmpsl
adc
push
mov
sub
sbb
lods
leave
addr16
and
sub
loopne
lock
je
xchg
jge
sub
sahf
int
loop
add
adc
mov
les
add
push
into
pusha
mov
jg
stos
inc
push
rcrb
ss
xchg
sub
jns
or
jbe
add
roll
jae
ds
addl
adc
mov
sbb
push
outsb
add
int3
loope
repz
inc
add
mov
cmpsb
sub
add
and
in
sub
inc
push
stc
mov
add
sub
rolb
push
adc
mov
cs
fildl
int
and
sub
inc
push
pop
or
pop
push
inc
or
rclb
nop
inc
push
pop
mov
test
iret
push
repnz
cmp
mov
pop
adc
sub
jmp
adc
xor
cmpsb
in
push
and
std
xor
cmp
je
aaa
dec
fdivrl
lea
xchg
ljmp
mov
repnz
data16
add
pop
and
add
push
repnz
jg
inc
aaa
xorb
add
sub
adc
icebp
add
sbb
lahf
add
xchg
pop
and
push
mov
lods
outsb
push
lcall
nop
lret
xor
or
xor
adc
xchg
add
test
inc
sub
dec
pop
sub
lret
sbb
or
push
push
nop
or
or
or
or
inc
push
sub
dec
gs
pcmpgtb
insl
xchg
adc
insb
push
inc
jl
dec
sbb
inc
lods
lea
sub
adc
or
cs
xchg
xchg
xor
int3
nop
and
aam
in
xor
add
mov
or
fsubl
dec
adc
jbe
adc
push
movl
sbb
mov
or
xor
pop
pop
mov
add
sti
pop
leave
inc
repnz
cmp
add
adc
pop
and
push
inc
lea
ret
sbb
sbb
add
adc
mov
dec
rorl
aam
rclb
jae
push
int3
adc
enter
hlt
xor
mov
mov
jp
fwait
pop
ja
pcmpeqw
push
jae
inc
fs
inc
mov
inc
movsb
sbb
or
cmp
dec
lcall
mov
lcall
and
sbb
add
sbb
mov
add
dec
dec
pop
aas
sub
mov
subl
and
aas
cmc
lods
cld
add
add
cwtl
in
adc
and
dec
ror
in
sub
insb
pusha
mov
shlb
std
dec
xor
push
mov
loope
add
into
daa
add
rolb
fs
jno
ret
add
add
scas
mulb
adc
pop
push
mov
inc
fucomi
bound
outsb
dec
std
inc
or
orl
shrl
or
adc
adc
xchg
cmc
push
adc
stc
jne
mov
and
add
sbb
lcallw
xchg
add
and
xor
pop
mov
jns
lahf
test
push
ds
cmp
test
sbb
mov
add
cmp
adc
push
push
cmpsl
add
xor
cmp
mov
and
and
and
and
ja
jns
and
lcall
add
sbb
sbb
push
push
lret
sub
mov
popl
popf
pop
sbb
push
jno
or
adc
xor
pop
mov
fsubrl
pop
mov
inc
mov
addb
sbb
shrl
sahf
inc
push
cmp
dec
pop
mov
adc
sub
push
in
lock
push
fwait
aam
ret
cmp
sahf
cli
xchg
jge
push
push
push
cmp
inc
cmpsl
push
sub
or
mov
sbb
and
call
loope
jmp
std
xchg
inc
or
jmp
iret
or
gs
jne
test
push
adc
inc
in
sbb
sub
or
sbb
mov
or
and
add
lock
sub
dec
and
sbb
popa
addb
adc
test
in
sbb
adc
inc
ficoms
mov
pop
add
and
mov
insl
xlat
lds
push
adc
dec
and
lahf
mov
cmp
mov
or
inc
dec
lahf
adc
shlb
add
mov
xchg
arpl
add
scas
and
cmpsl
pop
aam
push
mov
cmp
adcb
insb
clc
add
mov
in
aaa
orl
and
pusha
clc
and
jl
je
stos
adc
fstps
xchg
mov
lock
adc
pop
jne
push
push
and
push
leave
and
sbb
adc
leave
mov
or
xchg
ret
shlb
inc
loop
test
fcmovu
dec
clc
inc
or
push
push
push
nop
inc
mov
xor
cmpl
fildl
loopne
movl
ret
cld
pop
mov
mov
cmp
dec
and
ljmp
add
sub
ss
outsb
inc
scas
adc
movsl
rorb
shlb
mov
mov
cmpb
inc
popl
addb
mov
fsubrs
incb
add
push
jle
adc
mov
add
mov
dec
in
xchg
fcoml
sbb
popa
mov
mov
into
orb
mov
insl
cmpb
push
cmp
hlt
nop
push
loopne
pop
test
push
push
mov
add
iret
dec
in
push
aas
dec
xchg
notl
sub
js
rolb
or
in
shr
dec
ret
xchg
mov
mov
jne
add
test
sub
shlb
sbb
xlat
rolb
ret
dec
push
pop
call
mov
fnstenv
addb
fistps
push
test
push
add
adc
pop
and
mov
js
fs
das
and
lea
shlb
sti
or
inc
dec
call
mov
aas
mov
ficompl
lods
movb
cwtl
sub
bnd
mov
jne
lea
cmp
lods
jo
adc
sarb
xchg
cmp
dec
jl
jbe
orl
pop
int
jb
mov
nop
orb
adc
pop
fs
push
mov
push
adcl
mov
jno
cmp
jae
clc
daa
rclb
add
jmp
mov
test
and
sub
push
js
push
repz
mov
clc
sub
add
mov
stos
inc
push
nop
or
dec
and
dec
mov
push
ficoml
nop
lock
xchg
add
lea
mov
or
inc
and
add
in
inc
mov
es
xchg
push
icebp
adc
sub
xchg
inc
cli
in
mov
or
cmpl
sub
insb
add
int
loopne
insb
inc
pop
mov
fiadds
rcrl
insb
jmp
jns
mov
xor
mov
inc
or
out
jne
leave
sub
or
xchg
mov
insl
xlat
mov
add
fwait
inc
cmp
adc
test
add
pop
dec
cs
inc
and
and
dec
sbb
xchg
inc
push
cvttps2pi
cmp
inc
adc
dec
adc
inc
loope
adc
sub
mov
or
dec
push
add
fs
cmp
inc
fistpll
test
adc
ficompl
cmpl
inc
hlt
adc
ja
xor
xchg
and
mov
mov
and
dec
inc
cmp
inc
aaa
jo
xor
add
adc
add
je
push
cld
jo
cmpsb
dec
rclb
cmp
sbb
inc
sarb
mov
dec
jbe
mov
jo
aas
inc
add
adc
xchg
or
call
mov
sbb
sub
mov
mov
insb
xchg
push
clc
addl
sbb
inc
enter
push
jno
int
adc
inc
pop
cmp
cmp
icebp
hlt
movb
dec
add
inc
pop
sbb
jl
daa
adc
leave
push
pop
pop
sbb
xchg
dec
and
cmp
xor
cmp
cmp
ljmp
pop
xor
cmp
xchg
dec
lcall
subb
or
inc
movsb
add
pop
clc
push
fildl
movb
ret
push
push
adc
ret
adc
insl
or
sbb
fs
js
adc
push
sbb
jo
adc
jns
push
nop
lret
inc
filds
dec
jb
sbb
xchg
repnz
out
add
push
sbb
in
orb
sti
add
es
inc
repnz
ds
push
adc
pop
lds
sub
and
sub
cmpsb
lret
stos
les
ret
cli
cmp
push
mov
stos
pop
in
dec
pop
lea
jo,pt
push
adc
ret
sbb
dec
insb
push
add
and
mov
push
addr16
dec
jmp
adc
movsb
mov
and
inc
mov
add
dec
jl
mov
sbb
push
inc
shll
lahf
xchg
push
push
or
lea
imul
push
repz
cmp
arpl
cs
stos
dec
movsb
inc
test
xchg
or
pop
dec
cmp
into
xor
or
and
mov
inc
fs
jno
adc
sub
mov
dec
cmp
jge
push
clc
jl
test
fcomps
sub
popa
sbb
add
inc
movsb
stos
test
andl
and
xor
xor
cmp
mov
push
jnp
shlb
loop
mov
or
dec
imul
jae
jmp
add
push
push
sbb
or
imul
pop
pop
pop
stc
dec
cwtl
in
fistps
js
dec
xor
add
sbb
cs
int3
jmp
dec
mov
adc
add
dec
push
adc
adc
nop
inc
dec
subl
dec
jl
push
nop
pop
jno
xor
js
je
outsl
add
ret
adc
jns
ljmp
lds
jmp
and
dec
add
sub
cmp
dec
xor
in
jns
cmp
mov
inc
sub
mul
or
add
add
mov
mov
shlb
push
inc
adc
pop
addr16
cmp
cmp
adc
adc
cmp
mov
mov
mov
and
inc
adc
lods
push
dec
add
addr16
cmp
or
adc
mov
adc
sub
and
add
sub
lea
jne
nop
add
add
clc
das
popf
mov
test
sahf
jns
rclb
ror
or
mov
popf
je
mov
test
nop
inc
jmp
pop
push
sub
lahf
ss
movsb
aaa
dec
jne
jg
adc
cwtl
or
inc
and
nop
pop
dec
sub
test
pop
shll
add
testb
aam
sub
sub
dec
testb
mov
data16
dec
push
sbb
inc
pop
cs
xor
adc
cmpsl
shr
xchg
dec
sbb
pop
or
adc
mov
into
mov
movlhps
pop
sub
pop
xor
stos
iret
add
mov
sub
adc
adc
xchg
mov
mov
push
ja
cmp
push
jbe
pop
or
add
and
jp
dec
inc
fwait
dec
test
sbb
nop
lods
cwtl
dec
lock
in
push
pop
dec
loop
andb
mov
and
mov
adc
inc
ret
add
lahf
sub
mov
jmp
add
sub
xor
dec
push
xchg
xchg
push
mov
sbb
cld
frstor
jl
dec
push
imul
clc
sbb
sbb
inc
cmp
sub
or
scas
je
or
mov
test
movsl
dec
mov
push
cli
xchg
xchg
cmp
xlat
xchg
sbbl
push
and
fwait
mov
inc
and
ds
hlt
or
lods
add
fnstsw
fdivrl
xorl
mov
mov
mov
sub
jae
push
mov
or
xchg
push
sub
sub
adc
mov
adc
adc
mov
out
xchg
and
adc
mov
nop
lcall
sub
rorb
rcrl
js
sbb
or
jg
and
fisttps
lock
sbb
rolb
inc
pop
jb
aas
adc
push
add
add
add
push
movsb
mov
nop
sbb
sbb
pop
sbb
jae
sub
cmp
repz
cs
mov
enter
sbbl
xchg
insb
sbb
lea
xorl
add
xchg
mov
lcall
inc
addr16
adc
mov
popa
shr
repnz
test
cli
movsb
inc
hlt
stc
insb
xor
popa
and
sub
and
or
stos
pop
push
sub
in
js
nop
push
xchg
popf
je
xchg
pop
enter
xor
pop
jb
jl
dec
je
jbe
jo
mov
sbb
xlat
jae
adc
test
stos
xor
mov
jp
mov
lods
negl
arpl
adc
mov
adc
pop
lret
hlt
pop
nop
add
xlat
adc
add
aaa
xchg
js
push
and
leave
je
mov
mov
orl
mov
shrb
sbb
inc
xor
cmp
jge
stos
mov
mulb
sub
pop
push
xor
push
and
and
pop
push
push
sub
push
push
mov
mov
sub
pop
cmp
mov
inc
pop
mov
adc
bound
negb
inc
stos
xchg
addr16
cmp
adc
adc
xor
lods
inc
dec
adc
cmpsl
push
dec
jge
pop
cmovs
push
inc
pop
ret
mov
and
jg
or
lods
add
pop
iret
push
push
ret
mov
add
inc
leave
jne
loop
into
rclb
mov
arpl
dec
pop
mov
add
inc
fstpl
lret
jae
xor
jecxz
or
les
adc
pop
cltd
jo
aam
push
push
scas
sub
lret
mov
test
mov
push
add
mov
mov
dec
cld
xchg
mov
inc
sub
test
xor
and
jne
jo
jecxz
sbb
jno
push
add
lret
push
xchg
adc
xchg
ret
das
or
shlb
aam
or
mull
shrl
std
mov
dec
xchg
dec
add
decb
stos
sbb
mov
sub
or
test
inc
mov
adc
inc
lock
and
adc
add
repz
jecxz
xor
sbb
mov
or
push
dec
or
das
or
daa
int3
xorl
shrb
pop
les
pop
movsb
add
cmp
gs
adc
sub
jl
mov
repz
cmp
mov
rorb
imul
addr16
jno
push
les
add
scas
lahf
pmaxub
mov
xchg
push
fidivs
push
add
mov
fldt
sbb
subb
sub
mov
mov
fs
cmc
dec
sbb
push
testb
push
sub
sbb
stos
push
rcr
or
nop
dec
jge
sub
push
push
out
add
mov
jecxz
pop
cmp
push
inc
repz
and
push
pop
mov
lock
push
sbb
or
or
sub
mov
mov
movzbl
hlt
and
shll
inc
dec
arpl
inc
inc
movl
repz
inc
fs
add
jns
pusha
cmp
xor
xchg
sub
sbb
or
jbe
enter
seto
inc
fildl
push
cmpsb
or
push
sub
addl
aaa
sbb
or
loop
push
sub
sbb
je
mov
or
clc
inc
mov
add
movl
test
roll
jecxz
xchg
inc
and
xor
cmp
xchg
movsl
movsb
add
clc
fldt
add
fcmovnb
mov
add
int3
mov
movb
add
sbb
stos
or
pop
aaa
mov
ret
push
xchg
push
pop
test
mov
je
fucom
lods
mov
test
jo
jecxz
daa
sub
addb
icebp
cmp
je
push
add
adc
pop
stc
push
psrad
push
add
lods
and
add
sbb
sub
mov
cs
test
stos
daa
movsl
clc
jo
push
icebp
sub
jb
adc
add
sbb
mov
mov
imul
jmp
sub
cmp
jae
nop
les
sbb
and
lock
clc
push
inc
pusha
sbb
push
jno
test
pop
push
imul
cmp
sub
and
or
fst
ja
icebp
fbstp
sub
add
push
loop,pn
add
and
sub
mov
xor
inc
add
shrb
inc
ret
mov
aaa
call
pop
mov
jnp
and
dec
out
test
push
push
jnp
push
shrb
jns
inc
jne
xor
and
inc
ljmp
rclb
les
add
push
adc
add
sbb
inc
or
rorl
adc
pop
and
cmp
ss
adcb
inc
inc
push
push
inc
inc
push
jns
dec
pop
pop
add
nop
push
mov
outsl
adc
adc
dec
dec
fwait
pop
jo
dec
repnz
jne
inc
jmp
jbe
sbb
sub
sbb
mov
add
pusha
jle
popf
enter
aam
bound
xor
push
sbb
sbb
cld
push
insl
pop
adc
adc
jmp
cmp
jnp
add
repz
cmp
jne
add
test
pusha
leave
idivl
test
test
jns
lret
adc
subl
xor
jb
sbb
mov
xor
jmp
push
hlt
dec
sahf
dec
or
adc
sbb
mov
adc
ljmp
add
mov
push
push
sub
hlt
inc
insb
leave
push
test
sbb
adc
mov
cmp
imul
push
push
cmp
and
stos
add
mov
mov
push
pop
xchg
cli
or
sbb
sarb
xchg
mov
jo
xchg
mov
mov
add
lock
and
mov
and
stos
mov
mov
mov
test
les
loope
xor
xor
push
sub
insb
cld
daa
in
add
mov
adc
test
gs
cli
fildll
out
xchg
push
je
xchg
sub
jmp
mov
pop
mov
in
decl
cmp
and
sbb
jno
xchg
ljmp
outsb
sub
sub
dec
cmp
jae
jmp
cmp
aaa
lea
add
and
or
subl
or
and
into
or
js
jno
jne
pop
push
or
xchg
in
or
ss
add
jmp
lcall
call
add
cmp
gs
inc
add
cmp
stos
or
inc
adc
xchg
fisubrl
shlb
pop
xor
pop
or
push
sbb
and
mov
and
es
jnp
int
xchg
or
xor
sbb
sub
and
cmpsb
xchg
adc
sub
addr16
lods
mov
roll
mov
aaa
push
das
nop
pop
lds
add
add
add
pop
pop
sbb
push
inc
ljmp
or
add
sub
subl
xor
int3
iret
in
xor
rcl
clc
addl
or
js
cltd
insl
loopne
mov
push
ret
push
push
adc
mov
loopne
sbb
jo
push
sub
mov
sarb
jmp
jmp
cmpsb
test
cmp
je
sub
add
pushf
xor
int3
cwtl
pop
ret
int
iret
inc
adc
jbe
add
and
xchg
mov
sub
cmp
pop
lods
mov
xchg
and
repz
jbe
sub
arpl
loopne
xor
sti
popf
in
jle
pop
mov
push
and
or
push
add
dec
pop
mov
aam
or
jbe
mov
sbb
ret
mov
fists
mov
insb
imul
add
add
push
cmp
inc
sub
loope
sbb
and
into
inc
cmp
fwait
mov
cmp
sbb
and
sub
and
jg
inc
rolb
cmp
jle
add
cmc
add
inc
xlat
sbb
add
pop
cmp
and
sbb
inc
add
lcall
dec
pop
ja
sub
js
add
sbb
pop
mov
add
sbb
sub
cmp
add
push
push
mov
out
inc
push
add
fs
mov
jmp
mov
lea
mov
jne
pop
or
and
add
dec
movaps
cmpsb
flds
or
inc
movsb
pop
icebp
roll
and
aaa
add
pop
daa
outsb
sub
sub
xor
fwait
cmpsb
xor
dec
mov
jo
into
inc
or
clc
add
or
lea
xchg
out
pop
sbb
std
jo
mov
sbb
sub
add
addb
incb
test
cmp
rolb
clts
and
inc
insb
stos
sbbl
xchg
ss
or
cmp
pop
pop
push
adc
dec
add
test
sbb
sbb
push
daa
out
inc
pop
push
pop
inc
dec
or
push
movsb
or
cwtl
sub
popf
inc
movsb
xor
pop
mov
sbb
or
je
dec
or
mov
aam
or
jl
sbb
js
test
ret
or
je
imul
pop
and
pusha
ret
sbb
push
push
inc
pop
add
dec
pop
dec
push
or
int
sub
ss
add
mov
pusha
or
mov
rcrl
mov
xchg
and
fbld
pop
xchg
sbbl
xchg
inc
adc
cmp
ret
push
es
add
and
nop
push
outsl
mov
adc
mov
add
xor
add
add
or
jmp
xor
cmp
jne
cmp
inc
or
pop
seto
jmp
xor
loopne
cmp
or
add
cmp
pop
mov
push
xchg
push
and
popa
clc
int
dec
and
mov
fwait
icebp
int3
sahf
adcl
arpl
mov
mov
mov
jno
jnp
ss
pop
cmp
xor
push
inc
dec
cmp
cmp
es
xchg
sbb
sub
adc
lea
and
aam
inc
add
std
jb
sub
add
jle
sub
or
inc
mov
cmp
sbb
inc
pop
cwtl
dec
inc
jbe
dec
sub
arpl
lret
dec
add
mov
into
lcall
xchg
mov
adc
movsl
sbb
pop
lahf
subb
cmp
jae
xchg
push
adcb
jno
xchg
cmp
mov
es
or
and
movsl
or
or
pusha
in
add
ss
mov
mov
int
imul
pusha
cmp
inc
in
push
in
cmp
in
cmp
adc
inc
xor
pop
pop
cmpl
pop
cs
movsl
popa
cmc
ljmp
arpl
inc
sbb
adc
lea
sub
jnp
and
add
dec
push
imul
inc
inc
movsb
mov
push
inc
mov
sti
inc
bound
popa
push
add
xchg
sbb
arpl
aam
fildl
jae
test
clc
inc
cmpb
xchg
shl
leave
xchg
aam
repz
pop
inc
xchg
mov
mov
xor
mov
test
repnz
adc
adcl
cmp
adc
ljmp
or
add
push
mov
sbb
adc
dec
jge
jo
repnz
stos
cmc
inc
inc
je
mov
add
sbb
and
push
cmp
xchg
dec
jb
shrb
sub
je
nop
sub
lea
movsb
sbb
xchg
and
sub
push
push
add
and
pop
mov
jo
fs
adc
pop
cmp
sahf
add
dec
mov
test
jo
enter
mov
pop
mov
insb
cmpl
popf
gs
mov
cmpsl
sbb
lds
test
push
push
rcrb
mov
movsb
push
mov
mov
dec
ret
pop
in
fs
data16
mov
or
xchg
sub
clc
and
dec
sbb
adc
sbb
sbb
icebp
pop
je
mov
or
mov
int3
xchg
xchg
daa
push
nop
cmpsl
push
fsubl
sub
fmuls
cmp
xchg
fists
mov
inc
mov
cmp
dec
sub
cwtl
arpl
sbb
notb
dec
adc
scas
sbb
pop
dec
cwtl
adc
mov
pop
cmpb
stc
decl
inc
push
inc
sub
jle
test
inc
cmp
inc
movsb
and
mov
stos
sub
sub
push
cmp
push
aaa
mov
inc
push
jl
add
shrb
scas
mov
cwtl
sbb
xchg
sbb
sub
push
mov
js
sbb
push
mov
xchg
imul
test
lods
pop
push
jmp
pmaxub
call
dec
lea
fdivl
test
and
push
dec
pop
repnz
out
adc
dec
jl
mov
and
xchg
add
jo
push
je
pusha
fs
mov
andb
in
xor
ret
das
push
es
or
shll
shll
and
js
mov
add
fstpt
cs
pop
popf
push
lahf
test
test
add
xchg
mov
sbb
mov
mov
enter
add
mov
in
xor
xchg
fwait
push
sub
int3
mov
inc
xor
test
lock
fdivl
subl
jo
xor
add
pushf
xchg
pop
test
lods
cmpsl
ficomps
imul
xchg
and
mov
sbb
repz
sarl
punpckhbw
movsb
jb
sbb
in
cltd
dec
pop
push
jl
inc
out
push
test
imul
pop
lods
cmp
inc
mov
cmp
xchg
enter
and
cmp
in
dec
pusha
adc
and
ret
jne
xchg
and
push
pop
orb
and
jb
mov
xchg
cmp
push
and
jge
loope
dec
adc
movl
adcl
sbb
dec
add
testl
inc
inc
add
dec
testb
jo
cmpb
or
jns
sub
mov
jle
jb
adc
aam
add
and
lock
leave
push
daa
inc
daa
insl
xchg
faddl
push
mov
xchg
mov
sbb
mov
fucomip
lea
rcll
cmp
and
dec
bound
or
test
mov
push
imul
lods
xchg
shlb
or
pop
mov
pop
jmp
and
push
clc
sub
add
add
dec
push
cmc
dec
das
sub
push
or
cvtps2pi
fidivrl
dec
dec
stos
nop
mov
push
and
sub
sub
or
sbb
rcrl
sahf
jg
push
push
jb
and
pushf
xor
sbb
push
push
sub
mov
adc
fwait
sub
inc
sbbb
imul
cmpl
ret
insb
iret
pop
je
mov
sub
xor
mov
inc
push
xor
lods
push
dec
fcmovne
xor
add
push
stos
adc
mov
sub
add
xchg
lahf
lds
mov
sbb
inc
jbe
in
mov
sbb
roll
cmp
popa
les
cmp
add
inc
ja
xor
sbb
push
clc
inc
xor
shlb
jle
sbb
daa
nop
xchg
notl
sbb
lods
xor
and
xor
sbb
cltd
sub
mov
nop
xor
icebp
push
mov
out
add
rep
add
or
inc
mov
js
mov
jmp
pushf
jbe
in
mov
call
adc
or
mov
xor
rorb
lea
sub
xchg
xchg
push
mov
push
fwait
xor
sub
repnz
pusha
pop
push
mov
scas
and
dec
test
jp
outsl
shll
pop
xlat
int
sub
jne
pop
lahf
add
sub
pop
cmp
subl
add
or
and
or
inc
xor
cld
add
cmp
or
or
roll
mov
rolb
adc
inc
push
or
or
inc
shlb
push
scas
inc
sahf
or
xor
inc
add
add
push
test
iret
dec
push
mov
adc
xchg
rorb
frstor
mov
push
popf
movsb
mov
in
adc
setge
inc
pusha
inc
aaa
sub
add
jns
pop
les
outsb
fadds
nop
add
pop
sub
test
mov
lds
pop
pop
and
rcl
inc
pop
adc
rol
sbb
rcrb
dec
dec
addr16
add
scas
push
adc
xchg
imul
mov
sub
icebp
sub
adc
push
adc
cmp
mov
push
mov
push
and
push
jb
mov
add
jns
imul
add
cmp
aas
and
adc
add
xchg
cmp
push
pop
adc
enter
push
sahf
sub
cmpsb
lcall
sbb
push
add
sub
rcrb
jmp
and
jbe
out
inc
addb
cmp
inc
cmp
outsb
cmp
add
int
sub
pushf
sbb
and
stc
cmp
pop
lret
pop
movsl
push
push
push
aas
jmp
or
add
out
lock
push
xor
aad
in
push
xchg
and
mov
mov
or
dec
adc
pushf
cmp
push
pop
push
cmp
push
sbbl
inc
and
or
pusha
jno
inc
sub
insb
mov
and
sbb
fs
lods
push
sub
cmp
pop
mov
or
or
xchg
or
jns
sub
inc
out
test
je
daa
test
es
repnz
xchg
insb
and
int
and
fs
cs
out
popa
add
jo
inc
pusha
subl
push
pop
and
xchg
test
sbbb
fcoms
add
inc
push
adc
in
and
dec
push
cmpb
fmull
mov
jb
xor
inc
add
fistpll
xchg
xor
mov
lock
adc
mov
aam
mov
push
push
aam
imul
addb
jne
pop
sub
fwait
cmp
xor
or
adc
lock
mov
das
add
mov
in
sbb
add
push
add
push
inc
pop
push
pop
push
mov
sbb
push
lock
mov
bound
xchg
jmp
rclb
xlat
inc
aaa
mov
and
test
aaa
mov
fstps
movsl
mov
mov
fcoml
mov
xchg
shlb
outsb
movsb
pop
jne
pusha
jl
shl
mov
inc
add
into
aam
je
dec
sub
aam
sbb
or
test
push
jg
xchg
or
add
fsubrl
inc
lea
stos
add
or
add
xchg
sti
xor
add
sbb
gs
xchg
pop
or
xor
adc
xorl
jne
inc
sub
sbb
mov
cmp
je
out
push
mov
in
push
cmp
mov
add
and
push
inc
cmp
cmp
add
mov
dec
add
mov
test
adc
aam
inc
sub
or
or
loopne
or
push
push
or
out
pop
sarl
or
xchg
outsb
mov
push
push
cmp
mov
clc
jbe
xchg
mov
xor
and
push
adc
fisubl
test
xchg
lea
pushf
mov
dec
cmp
mov
jb
fidivl
jmp
je
cs
dec
or
iret
push
repnz
cmp
push
repnz
or
sub
inc
jbe
shl
or
adc
dec
adc
imul
mov
rorl
ljmp
jne
adc
movsb
mov
out
mov
mov
mov
xchg
and
or
xchg
mov
and
and
in
push
repnz
lahf
push
xchg
push
and
or
push
gs
sbb
sbb
repz
sbb
nop
rcrb
fs
outsb
sub
sbb
pop
in
scas
test
add
nop
inc
ds
cli
sbb
sub
push
add
enter
and
sbb
xchg
and
mov
cmp
inc
push
and
and
mov
cmp
es
enter
fsubrl
enter
add
test
and
in
sbb
pop
subl
pusha
sub
aas
push
cmpsb
inc
mov
mov
mov
dec
es
mov
ffreep
test
pop
inc
ds
push
inc
mov
cwtl
jae
je
fs
fsubrs
aam
dec
or
call
test
insb
mov
es
sbb
dec
mov
addr16
repnz
andb
jge
add
mov
mov
ret
lock
fstpl
imul
or
xchg
into
jne
fstl
mov
sti
or
cwtl
dec
or
push
add
xor
cmp
je
xor
stos
mov
jnp
jb
cmp
and
loop
dec
notb
adc
or
sbb
add
lret
ret
or
mov
sbb
aaa
arpl
repnz
pop
cli
outsl
ljmp
pop
cli
call
call
les
or
sbbl
pop
jno
sub
mov
jecxz
dec
dec
pop
enter
jmp
dec
cmp
jnp
xor
daa
and
aas
xor
xchg
fwait
add
movsb
mov
lret
inc
clc
cmp
sahf
xchg
inc
sahf
hlt
inc
cld
inc
pop
in
inc
fcomps
bound
int
inc
hlt
or
inc
idivl
ss
arpl
add
popl
inc
push
or
mov
cli
mov
xor
cmp
push
push
push
popf
sbb
push
sub
cli
jo
loop
adc
stos
push
js
xlat
inc
lcall
add
push
inc
push
rolb
enter
dec
cmpb
movsb
inc
daa
xor
repnz
inc
adc
pop
mov
aas
mov
mov
and
add
cmp
xlat
cmp
and
sub
mov
cs
cli
jne
lea
test
cmp
or
jo
and
push
lods
xor
push
push
test
add
mov
jge
rcrb
add
push
sbb
push
dec
push
sub
push
xor
ljmp
add
rolb
cltd
in
xchg
xchg
jnp
mov
cmp
add
dec
movsl
push
xchg
sub
insb
loope,pt
adc
jl
jns
fiadds
xor
add
xor
mov
test
addb
pusha
sub
dec
mull
cmp
es
jns
aaa
dec
pusha
adc
xor
pop
sub
rorl
addr16
xor
ret
cmp
insb
inc
push
pop
repnz
xchg
pusha
cli
fs
add
daa
call
lcall
pop
cmc
and
cmp
inc
popf
pop
jg
inc
fcmovnbe
push
push
jle
push
inc
push
imul
inc
xchg
push
jmp
dec
lcall
adcl
jno
mov
adc
sbb
loopne
jne
enter
dec
jecxz
bound
xchg
push
xchg
or
fldl
cld
dec
and
lods
pop
xor
mov
or
add
ret
sub
in
fsubl
mov
mov
add
or
add
sub
mov
push
lock
sahf
test
in
push
sub
dec
adc
repnz
pop
sub
and
cmp
dec
and
and
orb
dec
jns
jne
dec
dec
push
call
dec
dec
dec
adcb
inc
inc
dec
aad
fdivl
shrl
inc
jle,pt
push
dec
jb
push
jns
inc
xchg
xor
mov
test
ds
jno
and
push
jo
popa
jmp
inc
in
add
inc
pop
inc
cmp
lock
rcrl
sbb
out
mov
push
dec
add
xchg
pushf
sub
push
jne
add
subb
mov
sbb
xor
cmp
inc
xchg
push
loop
sub
or
es
push
test
jns
sub
sub
adc
and
shr
aas
cmp
add
sub
xchg
mov
cmp
imul
and
insb
rcll
push
mov
push
mov
addr16
sub
push
inc
add
sbb
pusha
fiaddl
cmp
mov
pop
shll
nop
push
sbb
shlb
les
push
sbbb
and
ss
sbb
add
xchg
or
pop
aaa
add
add
or
add
dec
pop
and
arpl
in
lods
mov
pop
sbb
pop
mov
aam
mov
ret
loop
or
jmp
das
leave
xor
push
outsb
inc
push
cwtl
adc
cld
mov
mov
orb
ss
jle
mov
mov
std
pop
test
sbb
imul
and
and
sbb
dec
and
pop
and
insl
je
lret
ja
add
outsb
lea
or
pusha
and
sbb
dec
push
and
cltd
push
inc
xor
push
jp
test
rclb
pop
push
into
mov
mov
and
pop
jo
popa
jno
test
js
and
push
or
pop
ret
icebp
pop
push
push
add
or
xchg
adc
push
lahf
and
adc
xchg
mov
sbb
adcb
push
xor
push
adc
dec
add
mov
mov
movsb
dec
push
dec
sahf
stos
in
add
mov
leave
mov
dec
aam
push
es
loope
dec
mov
ror
mov
or
les
out
clc
sbb
pop
bound
push
nop
lea
cld
mov
gs
xchg
movsl
mov
adcl
lock
dec
hlt
push
cmp
jae
in
xor
adc
inc
lcall
movsb
sbb
mov
push
mov
jae
mov
outsl
add
popa
push
pop
inc
jne
mov
ret
mov
xchg
scas
pop
frstor
xchg
les
xor
pop
ret
sbb
dec
mov
sbb
test
cmpsb
pop
jge
sti
cmp
inc
orb
sub
or
lods
mov
add
sub
and
and
mov
or
push
jmp
push
adc
sbb
sahf
mov
inc
jo
push
cwtl
or
inc
je
mov
wrmsr
push
lea
adc
or
mov
in
or
cmp
inc
sub
incl
bswap
jl
push
push
mov
mov
jne
je
sub
sbb
sub
push
les
mov
jbe,pn
mov
add
sub
bound
inc
and
xor
pushf
xchg
pop
stos
push
or
loope
lock
roll
push
std
or
and
or
out
mov
orl
cmp
rcrb
xor
or
and
ss
dec
dec
iret
inc
add
and
mull
or
out
es
dec
push
adc
mov
jns
dec
dec
cld
push
pop
mov
sbbb
sbb
xchg
sub
xor
mov
xchg
nop
adc
jg
arpl
dec
pop
cmpsl
rcll
inc
nop
sbb
jno
mov
fbld
pop
adcb
sub
pop
test
sbb
dec
add
xor
xchg
sub
test
and
sub
arpl
rorl
pop
pop
jmp
mov
pusha
insb
jge
xchg
or
and
cmp
pop
add
lea
stos
and
sub
xchg
imul
dec
sub
push
mov
and
and
aad
dec
dec
or
insl
cmpsl
scas
cltd
imul
sbb
add
or
cmp
pop
loopne
adcl
sbb
adc
movsl
adc
enter
sub
and
xchg
mov
and
sbb
mov
sbb
and
add
add
push
xchg
sti
outsb
push
lods
nop
daa
and
mov
cmpsl
stos
or
adc
nop
inc
sbb
loope
adc
test
cs
adc
sbb
and
pop
leave
or
or
xchg
imul
jg
call
inc
cmp
jae
mov
add
sub
adcb
andb
jl
and
push
outsl
rcrl
popf
xchg
shlb
filds
cmp
pusha
cmpl
add
pop
or
jbe
mov
xchg
xor
dec
ret
filds
dec
cmp
jle
sbbb
push
into
add
sbb
xor
add
lea
xor
in
mov
push
sbbb
popf
mov
sub
cmpsl
or
sub
ja
push
cld
cmpsb
sar
sub
cmp
jb
mov
pop
dec
shlb
loopne
movsb
jg
adc
inc
insb
mov
xchg
xor
mov
mov
push
mov
and
sbb
movsb
pushf
jo
push
add
mov
repnz
pop
cmp
mov
xchg
lods
test
dec
pop
add
add
push
jae
cmp
inc
or
mov
mov
add
sti
add
pusha
flds
cmpsl
mov
add
insb
fstps
sub
cltd
mov
mov
adc
pop
add
sbb
xor
dec
or
and
adc
xor
and
or
sub
cld
inc
addb
mov
pushf
sbb
adc
mov
inc
lahf
andl
push
test
mov
cs
ss
mov
add
pop
cmp
and
push
pop
jns
push
and
fwait
pusha
xchg
loopne
stc
add
adc
cmp
add
push
lods
cmp
mov
sub
push
lret
dec
insb
insb
mov
push
or
pop
fbstp
ljmp
xchg
bound
add
and
shlb
inc
jo
nop
dec
cmp
shlb
std
shrb
cmc
insb
cmp
inc
push
lea
sub
jmp
mov
test
push
test
icebp
mov
sbb
mov
ficoms
dec
orb
mov
scas
mov
sub
mov
sbbb
movaps
add
dec
jno
test
jle
xchg
fdivs
cltd
dec
dec
push
mov
dec
lods
insl
add
mov
jnp
pop
mov
es
dec
cmp
in
and
js
add
dec
enter
add
mov
enter
inc
in
inc
enter
dec
mov
iret
add
push
mov
or
xor
push
pop
adc
lcall
scas
test
jmp
rolb
add
mov
leave
les
dec
sbb
test
push
pop
add
movsb
aaa
movsb
jno
andl
ret
sarb
scas
jne
push
inc
xchg
jns
and
sbb
lds
lcall
add
out
out
xor
mov
js
add
xchg
add
push
jo
fsubrs
add
rclb
adc
push
out
push
push
fwait
ret
jo
pop
mov
lods
add
add
mov
shr
test
adc
test
jne
jne
movsl
mov
lret
ss
sub
mov
mov
shr
mov
and
or
or
je
push
je
xlat
push
or
push
xchg
loopne,pn
mov
add
rclb
mov
or
out
push
ret
jg
mov
sbb
cmp
cli
inc
sub
es
push
mov
out
xchg
mov
xor
push
daa
inc
shlb
js
call
shl
cmpsb
aas
push
fimull
dec
test
ret
add
pop
stos
sbb
adc
and
int
bound
les
jl
cltd
sbbb
push
aas
sbbb
dec
mov
xchg
test
cs
adc
pop
movsb
adc
sbb
xor
adc
jb
push
out
jno
jno
movsl
mov
nop
push
push
test
cld
add
mov
jo
ret
pop
xchg
outsl
mov
rorl
or
imul
aas
rorb
add
pop
test
inc
push
rcll
rcrb
or
test
clc
ret
inc
faddl
inc
xor
push
vandnpd
int3
sbb
insb
mov
push
out
adc
mov
push
jne
adc
inc
lret
cmp
jns
mov
xchg
push
push
push
adc
mov
gs
xchg
loop
push
mov
xchg
aaa
inc
mov
sbb
dec
jae
int3
push
movsb
call
js
sbb
push
int
mov
pop
es
mov
push
push
or
bswap
pop
or
and
inc
cmpsb
inc
lods
subb
imul
es
jl
aam
mov
and
nop
aad
inc
les
adc
jno
sbb
push
pop
mov
or
xchg
stos
inc
and
adc
ror
inc
call
or
aaa
pop
rolb
pop
push
push
push
aas
or
int3
mov
sub
jno
mov
clc
sub
rcll
cmc
sti
add
xchg
cmp
dec
xor
push
xchg
xor
fsubl
adc
int3
mov
add
adc
push
orb
pop
adc
mov
enter
push
mov
psrad
adcb
jge
inc
sub
aaa
inc
arpl
fmull
lcall
aaa
cmp
outsl
lahf
push
test
imul
and
xor
and
flds
test
lds
inc
adc
mov
xchg
xchg
cmp
in
mov
add
aam
pop
or
pop
sbb
or
cmpsb
sbb
or
popa
test
bnd
push
and
ss
mov
xchg
dec
sub
push
ljmp
movsb
cltd
dec
sub
int
xor
xchg
jns
add
les
adc
mov
mov
movsl
test
xchg
jl
add
jae
rcrb
xor
cmp
dec
call
mov
loopne
and
nop
mov
mov
or
mov
adc
and
lods
mov
in
nop
data16
inc
xchg
fcomp
aam
shll
or
push
sbb
xchg
xchg
mov
jne
sub
mov
fmuls
pushf
mov
je
push
sarb
icebp
mov
rolb
mov
shlb
adc
pushf
cltd
mov
mov
mov
adc
mov
movsb
jo
adc
rcrb
add
mov
ficoml
clc
aam
adc
faddl
lods
xchg
cs
xchg
jo
sahf
sbb
cmpsl
lcall
int
adc
das
cmp
je
test
jmp
mov
adc
leave
loope
loope
jnp
jmp
mov
test
pop
mov
roll
cmpsl
mov
fsubrl
dec
cmp
push
sbb
inc
mov
imul
mov
jle
or
push
cmp
mov
roll
movsb
ss
jbe
stos
xor
cmp
loopne
dec
rorl
dec
mov
pop
sub
fisttps
mov
pop
push
aam
insb
in
sbb
jne
xor
push
fs
or
xchg
adc
xchg
cmc
movl
push
xor
test
decb
or
pusha
sub
add
sbb
arpl
cmp
sbb
mov
jecxz
sub
and
pop
cwtl
sbb
ret
lret
push
sub
ljmp
fdivl
xchg
push
inc
jl
xchg
insl
add
mov
push
sub
cmp
sbb
addl
push
ret
fadds
sbb
loope
test
mov
jae
addb
pop
dec
lcall
and
orl
add
aaa
call
and
sub
into
add
sub
sbb
sar
cmpsl
sbb
push
add
push
outsb
insb
pushf
add
dec
in
imul
push
jl
and
add
cmpb
popa
sub
mov
lds
insl
je
xor
cmp
jne
int3
jnp
push
sbb
pop
push
add
loope
loop
lret
mov
inc
loope
das
ret
xor
pop
inc
lahf
iret
stos
or
ja
push
pop
and
push
out
int3
cmp
add
ljmp
lcall
aam
popf
mov
inc
push
test
mov
incb
les
loopne
mov
fs
arpl
push
and
mov
fs
rcrb
addr16
test
mov
or
inc
stos
loope
xlat
xchg
and
push
push
inc
push
test
lahf
nop
iret
daa
mov
mov
addr16
ret
imul
sahf
add
xor
xchg
xor
sub
pop
adc
mov
push
inc
or
xor
xchg
movsb
push
mov
pop
mov
sbb
sbb
lods
pop
xchg
jle
ret
push
cli
or
mov
data16
mov
imull
bound
fwait
into
insl
test
cmpl
mov
ss
popf
cld
push
sub
push
push
push
orb
sub
jns
push
inc
add
imul
and
sahf
pop
shl
sub
xorb
arpl
test
loopne
push
xchg
imul
lods
lret
cs
jmp
cmp
inc
add
add
test
adc
jl
xor
jmp
sahf
incb
inc
xor
inc
dec
add
inc
pop
xchg
mov
mov
repz
and
aaa
or
add
cmp
je
xor
call
sbb
fistpll
inc
jge
pop
mov
or
adc
dec
add
mov
cmp
pop
xchg
pop
add
pushf
add
stos
jb
cmp
or
adc
addb
sub
testl
sub
clc
jo
and
jnp
sbb
inc
add
rcrl
push
shrb
not
push
pop
iret
cmp
loopne
inc
ror
repnz
fstl
and
arpl
cmp
mov
je
mov
cmp
cs
add
sbb
or
sbb
cmp
adc
inc
and
or
aad
push
add
cmp
jg
inc
pushf
or
sti
push
mov
cwtl
pop
ja
maxps
in
das
jo
add
xor
test
push
add
jmp
or
xor
inc
inc
dec
outsl
push
test
insl
pusha
lock
push
das
imul
mov
jl
dec
stos
addr16
pop
sti
addl
test
pusha
dec
loop
push
mov
addl
lods
inc
jecxz
sbb
sbb
loopne
scas
sbb
aas
mov
xor
push
add
ret
add
xor
jecxz
jo
xchg
fcom
inc
shl
jno
and
mov
or
mov
mov
outsb
add
xchg
inc
pop
xor
add
add
inc
add
mov
jp
add
fldenv
cmp
arpl
xor
push
add
pop
cmp
and
mov
cmpsl
pusha
xor
pusha
cmp
mov
mov
sbb
je
sub
jmp
xor
or
or
scas
lret
aas
inc
inc
xor
movsb
push
cmp
xchg
sbb
mov
push
shrb
leave
pop
mov
xchg
adc
in
or
mov
jg
jle
and
inc
push
pop
sub
sub
or
adc
jl
or
xchg
cli
into
jle
pop
mov
cmp
and
add
or
and
jmp
sbb
mov
or
cmp
cmp
push
xor
test
dec
scas
stos
inc
pop
xor
ltr
pop
pop
sub
push
lret
icebp
jnp
ret
outsl
insl
sbb
es
in
cmp
cmc
dec
mov
clc
push
push
mov
adc
pop
je
inc
xor
push
pop
xor
pop
dec
xor
sbb
xorl
xor
push
xor
movsb
pusha
or
sub
nop
add
and
add
xor
lds
push
or
pop
sbb
addl
pop
mov
adc
stos
pushf
shll
popa
add
cmc
push
add
mov
mov
or
mov
inc
inc
adc
adc
mov
cmpsb
xchg
or
test
ds
or
dec
scas
mov
lods
adc
loop,pn
pushf
vmovupd
je
add
sbb
hlt
mov
xchg
add
mov
adc
out
or
mov
and
mov
jne
cmp
jb
sub
jmp
push
dec
movzwl
dec
pop
addl
lds
jle
setl
movzbl
push
imull
sbb
push
stos
ret
rclb
and
xchg
les
add
inc
add
inc
leave
sub
sbb
cmp
add
jb
in
add
lret
jae
cltd
dec
push
push
push
cmovbe
fmull
nop
and
pop
or
in
jmp
push
jne
pop
push
jle
push
pop
clc
inc
add
or
test
pushf
andb
iret
xchg
lret
daa
scas
test
pause
dec
inc
stos
fs
sub
mov
inc
shrb
adc
sub
dec
push
call
mov
fs
incl
mov
les
stc
xchg
push
les
push
pop
lea
fs
mov
pop
aas
loope
jbe
popl
push
push
jecxz
and
xchg
pushl
inc
dec
sbb
add
and
add
push
inc
pop
or
out
adc
adc
mov
gs
arpl
movsl
add
sti
movsl
and
mov
das
jns
jne
mov
popf
adcb
dec
sbb
lods
xchg
sub
mov
and
pop
sbb
push
push
push
cmc
xor
lret
test
cmp
mov
inc
imul
add
mov
jmp
pop
jl
vpunpckldq
jge
and
pop
repnz
loop
ss
dec
jae
and
adc
mov
shrl
ret
inc
cmp
sbb
outsb
push
fwait
jae
sti
jbe
dec
xor
add
ret
pop
push
xchg
mov
aam
int
xchg
imul
fwait
pop
mov
adc
cwtl
dec
xor
and
sbb
push
mov
pop
ficomps
xor
enter
into
pusha
add
mov
fcmovne
ret
push
mov
test
mov
inc
daa
cmp
add
jno
push
rorb
icebp
inc
cmp
push
fbstp
mov
or
xchg
and
rcll
or
lcall
sbb
mov
fsts
cmpsb
sbb
das
inc
pop
pop
ficompl
jmp
dec
je
je
xchg
addb
inc
fidivs
adcb
loop
dec
stos
jle
add
push
cmp
mov
mov
incl
add
push
mov
ret
ret
add
mov
mov
or
jno
mov
push
out
cwtl
inc
jecxz
xchg
mov
dec
cmp
or
adc
xor
cmp
or
cmp
xchg
cmp
push
dec
sbb
mov
sbbb
or
cmp
dec
hlt
xor
sub
pop
lea
outsl
mov
push
mov
adcb
pop
jne
adc
xor
sbb
sub
fs
add
repz
sbb
in
dec
andb
push
sbb
xor
sub
subb
xchg
and
inc
aam
or
jnp
add
pop
sub
dec
lret
test
or
sbb
add
push
xchg
stos
iret
sbb
add
cmp
test
in
xor
xchg
dec
adc
fs
push
xchg
xchg
dec
sub
call
dec
ret
enter
rolb
fsubrl
stos
sbb
sbb
shlb
test
xor
and
inc
test
bswap
hlt
lds
loope
jmp
add
mov
mov
rclb
cmc
stos
sub
jno
inc
add
xchg
in
mov
pop
test
and
add
add
outsb
aad
pop
inc
data16
adc
push
scas
shlb
dec
ret
pusha
lock
sbb
jne
cmp
pop
mov
jno
cld
andl
xchg
adc
mov
add
dec
es
or
pop
nop
dec
push
aas
cmp
inc
rcr
imul
push
mov
push
cmpsb
pop
push
and
lcall
inc
pop
ljmp
and
inc
jmp
nop
adc
jnp
rorl
mov
fsubrs
shrb
fmuls
popf
aas
push
imul
jg
outsb
sub
xor
fs
jo
sub
js
dec
inc
sbb
or
xchg
dec
roll
cmp
movsl
add
add
add
jns
shll
xchg
adc
testl
push
or
test
push
add
leave
jl
js
pop
xor
fsubs
push
pop
inc
inc
loop
fcmovne
lea
sbb
jmp
fldcw
add
jne
call
push
inc
bound
fs
mov
jge
push
sbb
orb
js
push
add
or
enter
sub
es
xor
js
push
mov
test
push
push
rorb
nop
jo
dec
xor
lea
push
leave
push
loope
push
push
cmp
or
xchg
or
cwtl
and
test
cwtl
test
pop
jae
mov
sub
sub
pop
mov
fwait
xor
cmp
pop
and
sbb
push
cmpsb
jno
sti
mov
jb
rcl
push
inc
inc
call
dec
or
subb
pop
pop
jb
sahf
inc
jb
pop
or
xchg
cmp
cmp
cltd
movsb
dec
adc
push
dec
pop
jno
dec
push
sub
data16
inc
dec
add
test
adc
ss
fwait
ss
jmp
nop
add
fwait
add
adcb
repnz
add
orl
xchg
outsb
add
fcoml
mov
push
rorl
addr16
pop
bound
sub
push
aad
mov
or
pop
enter
enter
push
push
inc
cs
dec
dec
push
inc
xchg
popw
jnp
fistps
sub
iret
xor
jl
add
sub
or
jae
pop
push
push
push
add
adc
xor
cmp
push
push
subb
and
push
cmp
push
int3
cmp
ds
scas
enter
sbb
push
enter
add
iret
cmpb
pop
xor
stos
inc
xor
sbb
push
pop
aam
or
mov
mov
sub
and
fsubrs
add
xchg
outsl
jg
mov
add
push
push
gs
pop
jns
adc
imul
mov
add
add
dec
xchg
inc
out
movsl
mov
insb
insl
add
xorb
ror
inc
mov
push
cmpb
push
pop
adc
jg
cmpsl
push
lret
xchg
xchg
repnz
pop
aad
movsl
jne
das
lcall
out
inc
adc
and
add
push
pop
add
and
or
xchg
inc
int3
inc
adc
push
mov
or
out
ja
pop
pop
push
xchg
xchg
and
sub
fdivs
add
enter
pusha
inc
and
nop
push
dec
xor
imul
shll
daa
xor
in
pop
sbb
sub
and
in
xchg
xlat
popl
pop
pop
or
jb
adc
hlt
das
stos
or
jle
add
jne
cwtl
cs
xchg
leave
or
push
inc
test
call
xchg
jno
int
sbb
add
jmp
pop
aam
loopne
arpl
dec
and
cmpsl
sbb
and
mov
sub
adc
mov
mov
adc
stos
inc
cwtl
out
sbb
jmp
and
jle
mov
rclb
jno
add
jne
fimuls
add
in
mov
sahf
out
or
popa
add
mov
cmp
xchg
dec
jg
movb
push
pop
sub
add
mov
mov
je
test
pusha
jmp
push
mov
fistps
pusha
cmp
jge
mov
je
cmpb
or
mov
mov
push
js
cmp
cmp
push
sub
test
add
pop
add
std
aam
mov
aaa
pop
pop
xchg
sub
cmp
fidivl
dec
out
pop
add
arpl
sub
adc
mov
inc
testl
cwtl
or
inc
sbb
mov
mov
jmp
subl
ret
jl
sbb
lods
sbb
fchs
out
push
out
sbb
out
inc
loopne
jo
push
inc
ja
ret
div
sub
push
ja
mov
mov
dec
push
sbb
add
test
rclb
fimull
lock
cs
push
test
jmp
shrl
or
push
xor
mov
xor
orb
and
xchg
mov
mov
cmp
jle
call
push
je
call
adc
adc
jl
xor
repnz
pop
loopne
push
cs
paddq
call
adcb
lcall
sahf
into
ljmpw
lret
adc
insb
cmp
sub
stos
out
mov
push
add
dec
and
daa
clc
neg
lock
jge
dec
adc
mov
sbb
cs
aaa
push
mov
nop
shll
push
and
neg
or
cmp
sbb
or
es
es
sahf
aam
clc
cwtl
jne
jp
mov
or
and
and
dec
inc
subb
fldenv
sahf
fsubl
pop
and
push
xor
mov
mov
xor
and
mov
jae
ds
inc
jmp
push
push
inc
xchg
mov
mov
xchg
dec
hlt
nop
sbb
in
pop
loope
adc
sub
mov
mov
cwtl
mov
inc
xor
addl
or
out
and
adc
mov
and
xor
lea
bound
les
int3
jb
push
add
inc
andb
mov
jg
mov
add
push
add
push
fadds
jno
fldcw
xor
mov
add
inc
fldcw
sbbl
mov
xor
adc
in
dec
popa
inc
cmp
or
cmp
cltd
test
rcr
lock
and
sarl
jne
inc
and
adc
movsl
sub
loope
pop
dec
adc
aas
add
push
xlat
inc
adc
out
push
push
dec
or
shl
xchg
add
inc
imull
cmpl
mulb
das
in
mov
out
push
mov
in
or
mov
and
adc
std
pop
adc
xor
imul
mov
push
les
or
fcompl
sub
push
mov
into
cmp
jbe
or
iret
xchg
out
jmp
aam
lods
add
or
out
adc
add
and
movsb
sub
or
mov
sub
sbb
sub
imul
sbb
out
dec
lret
sbb
flds
flds
mov
sahf
bound
les
fmulp
lret
pop
leave
sbb
leave
iret
in
sbb
jl
arpl
sub
fmuls
push
sbb
sbb
add
jecxz
jae
adc
fnstenv
xor
mov
das
loopne
cmc
je
repz
lahf
sbb
add
movl
push
xor
aaa
inc
or
or
cmp
jne
sbb
fcompl
push
add
push
or
aam
or
lret
cmp
xchg
push
repnz
test
rolb
adc
imul
sub
xchg
hlt
movb
movsb
cld
add
sbb
pop
add
out
add
sahf
icebp
jge
mov
push
call
or
jl
shrb
xor
and
jp
cmp
shll
lods
fistps
adc
out
lea
iret
jo
enter
and
push
loopne
mov
adc
push
xor
jecxz
and
pop
lods
test
inc
push
fisubs
push
add
sbb
xor
xchg
and
lock
push
call
bound
and
ds
nop
in
sub
movsb
outsl
and
push
outsb
mov
push
lds
daa
ficomps
dec
cld
xor
mov
mov
cmp
mov
mov
pop
ret
push
punpckhdq
pop
js
lock
aad
adc
adc
xchg
cmp
mull
je
push
dec
mov
stos
push
sub
repnz
repnz
inc
pop
dec
cmp
sub
push
cld
mov
sub
adc
sbb
jae
push
sbbl
fdivrl
jg
mov
loopne
adc
mov
pop
jmp
mov
xor
xor
in
scas
and
cmpl
pop
mov
cwtl
popf
mov
ja
movsb
mov
xchg
add
adc
push
rorl
mov
dec
std
sub
stos
mov
inc
cwtl
jne
and
xchg
or
xchg
or
xchg
and
pusha
fsubs
lds
test
jbe
out
jb
sarb
cld
adc
repnz
inc
sbb
ds
adc
test
je
test
cmpl
or
mov
or
adc
mov
add
shll
call
jmp
cmpl
mov
cmp
cmpl
sbb
or
rcrl
mov
call
or
sbb
mov
clc
xor
and
pop
mov
mov
je
rorb
nop
hlt
scas
dec
dec
int3
test
mov
gs
add
jg
push
loopne
lea
push
push
adc
jl
mov
ds
push
in
or
cltd
jge
jbe
sub
sbb
rclb
xchg
mov
adc
mov
imul
leave
push
jmp
pop
and
mov
or
or
push
push
je
lods
adc
jp
js
pop
jmp
les
andl
lock
jo
mov
add
pop
mov
mov
and
push
jbe
add
pusha
testb
incl
je
jmp
dec
adcl
xlat
sub
popa
add
push
outsb
push
push
add
jle
mov
mov
sub
iret
xor
adc
sub
in
inc
movsl
sbb
call
fwait
add
dec
lock
jne
adcb
cld
les
add
push
sub
inc
xchg
cmp
repnz
pop
xor
dec
inc
or
and
ja
or
jmp
adc
xor
add
mov
rcrb
dec
mov
cld
das
mov
pusha
sbb
inc
and
mov
mov
dec
cmc
mov
push
loopne
repnz
and
popf
mov
das
push
in
data16
pop
in
scas
mov
in
cld
adc
lock
push
xchg
add
ljmp
xor
sub
pusha
mov
push
sub
movl
cld
or
das
or
in
inc
jmp
xchg
test
push
cmp
rolb
push
push
icebp
cli
int3
stos
into
or
test
aam
cmp
or
test
or
leave
adc
js
mov
lock
adc
subl
mov
fwait
movsb
lock
jb
sub
or
mov
xorb
push
push
push
mov
sub
jne
mov
pop
call
rolb
mov
mov
pop
repnz
pop
aam
inc
test
add
ror
pop
adc
js
cmp
inc
mov
fsubs
dec
mov
mov
mov
sub
lret
cli
push
inc
sub
push
iret
dec
sti
cmp
movb
mov
cwtl
nop
lret
repz
pushf
sub
mov
lds
shlb
add
mov
push
call
and
pop
pusha
insl
dec
mov
push
adc
inc
jmp
mov
inc
mov
pop
sarl
mov
out
add
mov
pop
xor
pop
ret
rcrl
and
fxch
inc
rorl
push
shll
cmp
inc
add
fcomps
imul
cmp
push
dec
into
pop
outsl
ja
add
push
je
lret
lods
push
fnstenv
bound
cwtl
xor
testl
imul
dec
push
or
cmp
sub
das
mov
push
mov
add
sbb
out
push
idivb
mov
mov
mov
pushf
sub
dec
test
test
loopne
divb
ljmp
fwait
pop
fcmovnb
jmp
push
jg
test
add
test
testl
push
andl
cmp
mov
imul
pop
mul
xor
push
mov
rolb
jle
add
xchg
shlb
cmp
or
push
adc
sahf
bound
pop
hlt
push
cmpsb
imul
std
add
je
pop
in
adc
mov
jmp
adc
dec
pop
data16
in
pop
andb
dec
push
xor
lret
clc
sbb
adc
call
inc
xchg
xor
je
xchg
sbb
ss
les
push
sbb
add
add
lea
loopne
mov
xor
mov
or
push
pop
pop
scas
scas
rorl
sahf
ret
mov
mov
test
pop
push
push
stos
inc
xor
in
push
sbb
mov
cmp
loopne
adc
jbe
mov
push
jns
adcl
xor
in
cvtdq2ps
sahf
data16
sbb
lea
aaa
mov
loopne
push
mov
sbb
lret
mov
lcall
add
test
pop
pop
les
sub
je
and
push
imul
or
mov
shrb
xchg
mov
add
loopne
xchg
enter
out
push
cmp
mov
fldl
mov
mov
lahf
push
mov
cli
cmp
sahf
cmpsb
pop
mov
adc
loop
ret
or
mov
and
pusha
pushf
out
fisubs
call
lock
inc
xchg
push
lahf
arpl
cmp
xor
test
pop
lock
inc
mov
push
pop
jns
mov
sbb
adc
pop
cmp
addr16
mov
cmp
pusha
cmp
pushl
dec
xchg
rclb
insl
ret
add
out
andl
lock
mov
xor
addr16
inc
jl
and
arpl
fs
sbb
hlt
or
add
sbb
push
ret
lea
adc
imul
and
xchg
popa
push
xchg
repnz
call
sbb
in
rcrb
lock
je
xor
jmp
std
in
jbe
sbb
out
adc
clc
mov
mov
jge
stc
lock
add
xlat
dec
and
add
js
and
mov
jne
mov
subb
cmp
fadd
bound
jno
pusha
push
enter
cmp
xor
insl
jne
cs
add
push
jl
sahf
das
jae
arpl
push
lret
repz
push
je
inc
or
jge
fidivs
push
or
and
jle
cmp
push
push
xor
inc
cmpsb
outsb
push
adc
add
xor
call
testl
aas
mov
sub
cmp
dec
pushf
rcrb
mov
cmpsb
mov
jge
out
int3
cmp
je
push
fidivs
push
or
cmp
push
fcoml
cmp
and
clc
xchg
je
push
mov
or
xchg
aam
inc
jnp
mov
push
movb
sub
sbb
xor
or
jnp
pop
pop
pop
add
pop
jb
push
mov
pop
sahf
xchg
shlb
adc
lret
push
push
push
into
push
loopne
and
pop
push
add
fucom
sbb
push
sub
push
push
adc
xor
xor
fstpl
sbb
jnp
rcll
add
mov
sbb
mov
stc
leave
ja
call
js
cmp
jne
add
mov
or
not
jmp
hlt
inc
loopne
pop
outsb
push
mov
mov
mov
and
jg
add
cmp
lret
dec
repnz
or
pop
inc
or
jb
sbb
shr
xor
pushf
outsb
hlt
add
dec
and
push
push
mov
mov
or
xlat
je
sub
mov
cs
push
mov
pop
adc
adc
or
add
imul
push
je
out
dec
addr16
or
out
xchg
andl
sti
or
push
mov
inc
int3
insl
lods
int
stos
inc
mov
scas
dec
jnp
xor
and
pop
les
xchg
add
xchg
pushf
sbbl
and
push
imul
pushl
cltd
mov
sub
push
nop
sbbl
add
je
insb
add
nop
add
mov
sbb
movsb
xchg
cmpsb
mov
fs
push
add
xor
or
or
dec
sbb
test
pop
or
and
test
dec
jo
js
pop
xchg
data16
pusha
sti
add
add
out
dec
pcmpeqw
or
lock
es
or
or
fidivl
mov
jne
cs
in
xchg
int3
filds
lret
sbb
mov
iret
add
push
xor
sbb
ror
mov
adc
test
mov
xchg
add
in
and
ja
xor
insb
stc
add
jp
push
jle
shll
mov
fcmovnb
or
sbb
leave
lea
test
or
cmpsl
scas
push
pop
push
adc
popl
rcrb
and
adc
shl
mov
inc
mov
adc
pusha
in
in
or
pop
pop
mov
inc
shl
mov
push
rol
ljmp
sbb
ja
add
mov
test
xchg
cld
xchg
xchg
mov
mov
add
or
lock
popf
dec
fiadds
outsl
mov
iret
pusha
lret
notb
test
push
and
inc
sbb
in
scas
mov
cmp
mov
je
test
pop
iret
lret
mov
das
or
incb
frstor
outsl
pop
repnz
out
add
and
iret
and
cmp
jo
lcall
push
clc
add
mov
test
out
fnstcw
xchg
inc
rolb
push
adc
movsb
sub
mov
stc
sbb
addr16
ss
push
and
je
icebp
jne
imulb
lea
xorl
fwait
adc
fwait
pop
lahf
dec
add
cld
sub
je
aad
in
pop
dec
sub
adc
mov
and
adc
add
add
jbe
fstpt
ret
adc
shrb
mov
mov
test
inc
push
mov
fcmovb
xadd
rorl
pop
lods
push
or
jmp
cmp
xor
negl
cmp
inc
aam
rorb
xchg
pusha
mov
test
aam
sub
or
rol
or
cmp
add
adc
push
inc
or
or
adc
inc
mov
jmp
pop
xor
push
or
in
aaa
mov
loop
mov
sub
test
enter
mov
enter
xchg
ljmp
call
push
sub
xor
inc
sub
addl
aas
add
je
neg
cmp
mov
adc
out
orb
int3
lock
jo
insb
adc
pop
clts
neg
adc
sbb
and
sbb
lods
in
rorl
je
inc
mov
fs
xchg
pusha
pusha
insb
insb
adc
sbb
loope
fcoml
sbb
insb
aaa
lds
les
xchg
ret
ja
rcrb
pop
icebp
sub
fidivrs
adc
je
cmp
or
imul
add
mov
enter
mov
add
iret
je
stos
xchg
movsb
sbb
push
push
insb
sbb
push
push
lock
push
sub
push
orb
pop
xchg
jmp
lea
ss
repnz
dec
adc
sub
add
mov
push
add
lock
pop
enter
lock
hlt
and
and
push
cmpsl
mov
add
push
push
adc
ficoms
xor
add
sbb
cmpl
mov
fidivs
mov
into
add
push
mov
lods
mov
into
lea
mov
sub
sub
xchg
shrb
mov
cmc
nop
mov
cmpsb
mulb
inc
push
je
aam
js
rorb
loopne
jl
testb
mov
inc
sub
add
sub
push
and
es
dec
xlat
test
test
cmp
mov
push
adcb
jbe
subb
scas
call
daa
cmp
inc
sbbl
pop
leave
enter
bound
dec
mov
insb
clc
push
push
mov
fdivrl
jne
cli
xchg
mov
mov
sahf
cs
in
call
popa
insb
cmp
adc
std
aas
jne
outsb
and
xor
xchg
push
cld
test
cltd
or
sbb
fwait
add
fwait
jge
rcrb
ljmp
and
out
sub
jo
cmp
je
cmp
aaa
sbb
cmp
data16
mov
dec
push
lea
push
pop
cwtl
push
adc
or
pop
add
lea
mov
add
lret
push
or
adc
outsl
sbb
lods
add
es
xor
adc
xchg
fcoms
cli
les
add
and
pop
xor
pop
pop
sbb
mov
popa
lock
push
xchg
inc
fs
adc
stos
adcb
sub
cmp
pop
arpl
and
mov
push
imul
mov
aad
nopl
ja
mov
xorb
loopne
and
add
or
cmp
add
je
push
mov
and
sbb
push
xchg
mov
xchg
sti
decb
pop
loopne
or
and
ja
add
mov
and
out
jge
sbb
jg
adc
test
push
cmp
mov
hlt
add
and
pop
xchg
push
cmp
subb
mov
inc
ljmp
mov
adc
ds
and
or
jbe
add
pop
push
pop
inc
dec
fistl
mov
jecxz
lock
or
inc
loopne
cmp
ds
int3
jp
repz
cmp
xchg
adc
aad
addl
add
movsb
mov
std
cmpsb
cmp
cmp
adc
push
jecxz
loope
mov
cmp
push
les
hlt
fsubr
mov
aam
mov
jg
fdiv
xchg
test
push
jmp
jbe
dec
cmp
xchg
loopne
or
shrb
adc
cmp
sbb
loopne
xor
adcl
mov
icebp
mov
xchg
mov
lcall
idivb
je
mov
movl
adc
loopne
addb
push
out
jo
push
cli
fadd
mov
out
push
add
cmp
push
add
mov
scas
lock
stos
lods
adc
and
testb
mov
jecxz
das
inc
cmp
xchg
ss
push
popf
pop
js
aaa
fadds
and
ljmp
std
je
mov
or
test
jnp
inc
jecxz
mov
jae
pop
sahf
xchg
push
dec
push
xor
push
je
or
rcrb
jp
sub
or
adc
push
add
je
repnz
push
cmp
sahf
popa
xchg
sbb
fs
pop
push
sub
fdiv
xor
add
pop
dec
les
add
push
sbb
add
xor
push
xlat
inc
dec
or
push
adc
and
cmp
sub
adc
sbb
aas
pop
pusha
gs
cmp
jl
or
push
mov
js
aaa
inc
ljmp
sti
and
push
test
mov
enter
orb
rorb
xchg
ret
insl
pop
imul
nop
stos
dec
std
imul
sbb
jns
push
cmp
xorb
cmp
push
xor
ljmp
ret
int
pop
mov
clc
mov
inc
mov
ljmp
in
xchg
cs
popf
xchg
xchg
sbb
rcrb
stc
dec
mov
inc
addb
in
testl
xchg
dec
xor
call
add
movb
mov
lods
pop
inc
shlb
push
jo
pop
adc
push
mov
out
xchg
jns
pop
cmp
or
xor
xor
test
sub
or
cwtl
fdivrs
pop
cmp
mov
sub
mov
mov
or
add
outsl
adc
push
std
cwtl
mov
xchg
fbld
roll
shrb
fs
enter
xor
ficompl
rclb
xor
or
pop
enter
sti
adc
ljmp
push
push
pop
xorl
cmpl
insl
inc
insb
js
pop
push
adc
je
xor
lea
arpl
mov
and
xor
adcl
das
and
pop
sbb
insb
subb
clc
push
rorb
js
daa
rorb
inc
pop
inc
inc
js
pop
or
lret
inc
outsb
jl
outsl
dec
adc
outsb
inc
jmp
pushl
xchg
mov
pop
mov
mov
scas
in
cmc
add
sub
cmc
ss
fcomps
rcll
lcall
or
or
shlb
sbb
insb
sbb
mov
inc
idivb
mov
push
clc
jge
add
mov
jl
andl
mov
insl
cmp
dec
pop
sbb
and
or
cltd
les
scas
mov
outsb
inc
or
int
jo
xchg
fistpll
mov
xor
pop
sahf
xchg
xor
outsb
mov
cltd
mov
xor
xor
adc
mov
ljmp
inc
jno
push
test
or
inc
cmp
mov
adc
out
mov
test
push
mov
in
push
mov
jl
dec
cmp
jmp
xor
jl
or
or
adc
add
add
roll
pop
add
mov
insb
dec
dec
adc
in
clc
mov
inc
adc
and
inc
push
and
fdivs
mov
mov
addl
scas
es
pop
pop
fnsave
idivb
movsb
push
pop
xchg
jp
xor
push
push
sub
dec
test
sbb
push
arpl
add
jne
sub
push
lods
jnp
xor
add
sbb
out
idivl
testb
je
and
data16
stos
and
and
icebp
xor
and
xor
push
sbb
or
fstpt
movzbl
xchg
mov
dec
pop
push
and
pop
cltd
push
sbb
adc
pop
mov
fadds
scas
push
mov
fbld
int
lahf
sbb
cwtl
jl
shlb
adcb
mov
mov
xchg
dec
mov
mov
mov
push
lea
add
shll
add
add
add
xchg
out
sbb
xor
mov
test
adc
les
fs
xchg
push
cmp
fbstp
test
pop
hlt
add
mov
mov
xchg
es
xor
push
adc
push
sub
fildll
movhps
mov
and
mov
adcl
push
push
dec
push
loope
sbb
data16
sbb
inc
cmpsb
mov
outsb
daa
jge
cld
nop
jmp
jno
dec
sbb
divl
insb
or
shlb
pushf
pushfw
inc
xlat
adc
mov
or
aad
test
fst
lods
dec
rcl
mov
mov
sarb
add
pop
pop
add
into
aaa
sbb
in
dec
push
jo
jmp
xor
fildl
pop
outsb
pop
push
fcoml
mov
imul
add
sub
cwtl
push
insb
mov
insb
mov
cwtl
mov
adc
pop
mov
adc
xor
les
jne
push
xchg
js
cmpb
test
or
leave
pushf
dec
imull
mov
dec
icebp
add
mov
adc
add
xchg
cwtl
gs
xor
jns
dec
push
or
pop
enter
inc
inc
clc
inc
or
cmc
daa
cmp
xchg
push
xchg
dec
pop
in
je
lock
movsb
adc
dec
out
andl
add
xchg
int
add
mov
ja
rcl
movsb
xor
sub
inc
rorb
stos
add
jle
into
add
xchg
push
stos
xor
mov
adc
aam
mov
xchg
sub
or
or
popf
enter
sub
std
or
push
mov
ljmp
jge
xchg
push
add
inc
or
ss
dec
inc
pop
xor
xor
mov
sub
aam
mov
mov
dec
push
jmp
dec
push
or
jae
inc
add
imul
aas
add
or
sub
sbb
out
pop
sbb
ficomps
shlb
andl
mov
jl
xor
dec
push
push
or
insb
add
fcoms
xchg
or
data16
dec
andb
movsl
jge
mov
or
adc
add
pop
rcrb
cmp
lock
mov
cmp
jne
mov
cmpsb
add
push
inc
and
add
add
jp
arpl
in
push
dec
mov
push
mov
push
push
mov
add
sahf
adc
sbb
pop
adc
shll
aas
mov
xlat
fdivl
xlat
push
orps
add
jne
popf
pop
js
fiadds
push
cld
xabort
add
mov
les
repz
cli
jge
movl
shr
inc
add
mov
cmp
mov
outsl
add
jle
adc
rcll
pop
dec
aaa
sbb
or
outsl
shll
stos
pusha
insb
std
mov
dec
fld
mov
in
adc
out
gs
mov
jb
jge
sahf
pop
aas
lock
lock
mov
dec
pop
add
push
movsb
mov
xor
ja
xchg
out
push
push
pop
adc
sub
mov
es
lret
xchg
jne
add
push
mov
mov
sbb
in
mov
push
lahf
add
js
cld
out
insb
or
aam
adc
int
les
inc
nop
pop
xchg
mov
sbb
xor
andb
pop
inc
push
int3
inc
add
femms
lcall
sub
aas
cmp
adc
push
imul
movsl
addl
insb
pop
cmp
sbb
int
pop
sub
or
pushl
lcall
add
push
adc
movb
inc
out
loop
or
xor
je
pop
lods
add
adc
rcrl
push
loopne
push
sub
ss
add
lret
das
add
and
enter
mov
lock
xor
in
push
sub
push
pop
mov
fst
push
lea
outsl
jecxz
mov
repnz
adc
inc
aaa
jbe
or
nop
or
js
dec
sub
out
dec
out
or
pop
sub
add
xchg
clc
pop
sbbb
lret
sti
addb
or
push
in
insb
aas
jbe
push
cmp
in
and
push
call
mov
lcall
pusha
or
inc
jb
mov
iret
stos
push
fmul
arpl
nop
popa
repnz
jecxz
and
push
mov
nop
jmp
xor
mov
sbb
inc
je
or
add
movsl
sbb
into
dec
adcl
je
cmpsl
inc
push
dec
cmp
lea
movsb
push
insb
push
lock
push
push
pop
lcall
push
push
dec
rcl
adc
into
lock
push
pop
jp
or
dec
xor
popf
pop
fs
nop
pop
or
adc
or
icebp
lea
idivb
xor
popa
push
push
jo
mov
int
sub
jnp
inc
in
out
pop
push
sbb
or
mov
add
in
loopne
pop
jno
mov
nop
pop
dec
arpl
lret
mov
orl
inc
test
mov
ljmp
cmp
call
loope
xchg
test
or
flds
inc
rcrl
aaa
sbb
xor
add
push
jmp
or
xchg
lock
sub
jae
lret
add
daa
ret
add
push
sub
mov
jl
je
add
jno,pt
shl
inc
mov
testl
test
xor
lret
pop
or
xor
and
rorl
jne
lret
out
and
and
adc
adc
ret
fisubl
or
push
in
push
inc
mov
push
jae
push
push
inc
cwtl
fisubl
pop
es
out
leave
add
jl
movl
lret
push
adc
aas
lods
mov
pop
popa
xor
add
jmp
pop
add
push
sub
dec
mov
mov
sbb
dec
push
gs
filds
add
mull
mov
or
aam
mov
jae
cmpl
mov
push
rorb
andl
and
mov
xchg
mov
pop
lods
push
xchg
shlb
daa
mov
imul
add
inc
ret
sub
aaa
sbb
cmp
adc
lock
ss
lds
cs
mov
xor
push
and
test
cmp
xchg
adc
leave
dec
js
addr16
push
inc
push
stos
pop
fdiv
inc
in
mov
or
dec
push
loop
xor
test
fcoml
dec
push
jbe
push
push
into
sar
pop
push
div
fistps
mov
pushl
push
push
adc
out
adc
je
les
push
xchg
jp
pop
push
cmp
jg
jo
loopne
add
ret
idiv
inc
add
lcall
sub
into
pop
dec
adcb
and
and
mov
out
out
orl
and
out
ret
outsl
or
lret
fucomi
aas
sahf
sti
dec
ja
je
or
je
or
sub
outsl
call
adc
adc
cmp
stos
sarl
mov
in
es
or
add
xor
jne
lcall
mov
arpl
push
jmp
cmp
adc
bound
mov
adc
pop
xor
pushl
dec
push
add
push
and
in
mov
cmp
dec
jmp
fcompl
cmp
mov
mov
es
hlt
and
mov
push
fisubrl
cli
gs
add
je
call
or
popl
daa
cmp
pop
xor
inc
js
jbe
rcrb
enter
mov
jnp
add
pop
shrl
xor
test
aas
push
mov
or
lret
das
sbb
or
je
sub
sub
inc
push
adc
add
add
push
push
in
cmpsl
in
aad
mov
or
icebp
xchg
fnsave
or
push
adc
insl
add
nop
push
pop
jo
ds
add
xchg
lds
shl
inc
mov
pusha
orl
adc
push
imul
stc
pop
and
gs
lea
cs
add
cld
out
popf
inc
jp
push
sahf
sub
shll
cmp
pop
test
sub
sbb
adc
hlt
xchg
pop
xor
fcoml
mov
push
mov
sti
je
int3
sub
mov
or
shlb
inc
mov
bound
aam
sbb
jo
sbb
jnp
dec
in
fadd
ss
loope
and
data16
in
xchg
add
fildl
sub
stos
xor
call
popa
cmp
mov
dec
roll
notl
fcoml
dec
mov
pop
lds
adc
add
dec
call
or
xchg
arpl
mov
or
mov
adc
in
xor
inc
lcall
out
sbb
call
pop
rolb
add
push
fcoml
outsl
inc
xlat
pop
push
xorl
dec
jns
dec
jle
call
mov
sub
add
fcoml
cmpb
in
pop
and
and
mov
sub
aam
int3
aam
dec
mov
cmpl
xor
mov
inc
loop
or
dec
shrb
aam
addb
es
jge
addl
jnp
fucomip
cmp
ja
adcb
sbb
repnz
fisubl
mov
sbb
sub
inc
sub
fmuls
pop
int3
out
popa
jnp
je
push
icebp
mov
adc
aad
repz
or
add
jl
movsb
sub
or
jmp
xchg
mov
in
jle
sbb
dec
ret
adc
inc
jp
push
sarl
adc
jnp
sub
call
ficompl
cmp
adc
and
and
pop
mov
test
push
sbb
cmp
jo
call
daa
test
xor
inc
enter
or
add
jne
jle
sbb
int3
subl
in
ss
in
cmp
mov
nop
clc
lods
js
add
aam
jp
mov
jo
cs
lock
push
sub
mov
or
dec
je
and
shr
add
adc
popf
js
lock
xor
pop
sbb
pusha
inc
mov
xchg
filds
or
mov
add
mov
outsl
ficoms
mov
sbb
sbb
cmp
sarb
addr16
cmp
test
jb
xor
or
push
das
or
xchg
mov
add
in
test
push
enter
mov
lret
inc
jne
push
cmp
cmpsl
lock
dec
je
add
jg
dec
movsl
sbb
call
pop
pop
add
jbe
adc
lret
call
clc
mov
dec
pop
incl
pop
dec
cld
cltd
add
dec
lret
das
cmc
movsl
decl
xchg
loope
inc
insb
test
pop
pop
shrb
ret
hlt
mov
add
jmp
out
pop
jp
pushl
xchg
dec
mov
cli
andl
pop
sbb
mov
mov
shrb
cmp
lahf
push
xor
dec
add
js
mov
daa
outsb
or
jecxz
mov
dec
pop
push
push
xchg
jo
push
add
mov
inc
adc
fidivl
mov
pusha
xor
aaa
rcll
outsb
jl
push
mov
xchg
pop
fs
cmp
inc
or
inc
cmp
je
subl
jae
mov
les
sbb
push
filds
pop
rolb
pop
dec
xchg
xor
mov
inc
les
adc
or
and
hlt
or
jg
scas
add
pop
cmp
add
jg
sti
add
push
dec
sbbb
es
and
fiaddl
les
cmpl
out
mov
and
mov
mov
cs
sbbl
cli
aad
ja
sbb
xchg
punpckhdq
sbbl
push
js
add
push
jg
repz
arpl
dec
or
jge
mov
add
jl
enter
sbb
fnsave
and
push
inc
adc
and
ss
and
inc
movsl
mov
mov
mov
jecxz
dec
adc
add
ficompl
sub
and
adc
pop
inc
push
pop
pop
adc
mov
pop
mov
cmp
movups
add
xor
movb
sbb
push
cmp
sbb
xchg
sub
mov
sub
mov
inc
jne
add
out
mov
adc
mov
adc
inc
cmp
cmpsl
enterw
sbb
sub
mov
loop
adc
imul
push
sub
fldenv
roll
push
dec
add
xchg
add
mov
adcb
aaa
or
cmp
mov
jl
sub
hlt
push
out
mov
call
je
aas
push
test
or
in
sub
and
enter
xor
add
jge
xor
mov
es
fisubrl
xor
je
lock
pop
les
mov
add
fsubrs
add
fsts
adc
cmp
jnp
popa
add
jne
xchg
mov
jge
dec
jmp
mov
cli
fmuls
mov
sti
and
add
push
subl
dec
dec
cli
add
pop
je
or
push
cmp
inc
or
push
mov
clc
and
mov
and
sbb
dec
test
pop
or
outsl
dec
idivb
cmp
mov
inc
or
popf
adc
cmpsb
sarb
sbb
sub
mov
clc
dec
adc
fiadds
push
pop
ss
int3
push
mov
adc
pop
dec
and
sbb
sbb
push
adc
and
roll
add
push
ja
inc
adc
push
xor
adc
repz
fs
ficompl
inc
shr
push
jmp
push
mov
xor
leave
test
push
test
arpl
test
popa
and
adc
push
sub
repz
aas
rcrb
sbb
cmp
dec
or
je
sti
test
out
push
or
or
fs
sbb
xchg
lret
pusha
inc
and
or
and
sbb
sub
pop
push
push
test
and
xchg
or
das
sbbb
adc
sub
or
pop
push
push
add
sub
add
lea
or
xchg
add
pusha
inc
outsl
repz
sbb
in
pusha
rcrl
mov
inc
jo
push
push
sub
xor
out
push
sbb
enter
push
xchg
sbb
pusha
cmp
push
jns
adc
movsb
mov
and
or
add
xchg
push
out
ret
push
sahf
dec
xor
or
or
es
insb
add
inc
xchg
sbb
in
or
sbbb
xor
nop
lods
cmp
mov
push
repz
enter
adc
adc
cmp
in
jl
mov
popf
aaa
mov
add
inc
push
dec
push
enter
inc
sbb
jl
mov
rol
xchg
push
dec
push
push
mov
jge
jmp
jge
adc
pavgb
stos
pop
or
ret
dec
fnsave
shlb
call
push
sub
pcmpeqw
mov
push
sub
push
xor
xchg
sub
add
or
and
dec
and
mov
and
jmp
pushl
sub
mov
scas
or
push
out
pop
inc
insb
pop
lret
dec
loopne
and
test
mov
mov
scas
cld
mov
push
inc
insb
cmpb
loopne
inc
lods
add
sub
js
or
adc
adc
cwtl
sahf
stc
enter
jge
sbb
xchg
xlat
testb
arpl
mov
fmuls
popa
jno
jecxz
jae
or
sub
mov
scas
adc
and
mov
inc
pop
xchg
mov
sub
push
xor
js
sbb
cld
stc
mov
lcall
jbe
pop
mov
call
xchg
call
cmp
pop
cld
imul
scas
add
push
sbb
cmp
pop
sub
js
mov
sbb
xor
xor
imul
fdivp
or
add
push
and
lock
std
pushf
pop
dec
xor
repnz
fdivr
lock
cmp
lock
cmp
xorb
push
push
fcoms
push
cmpl
daa
or
adc
daa
and
xchg
xchg
add
xor
mov
xor
pushf
loopne
dec
rorb
pop
dec
xchg
pop
cmp
pop
inc
loope
sbb
or
xchg
cmp
dec
or
dec
cmp
lock
pushf
test
xchg
popa
shll
mov
lea
stos
retw
sti
inc
std
sbb
dec
sub
jbe
inc
mov
add
imul
xor
adc
pop
cmpsb
lds
aas
jns
jne
dec
stc
or
push
push
into
sub
lcall
or
adc
inc
jnp
ss
imul
int3
mov
mov
call
sub
inc
adc
stos
and
add
dec
add
sarb
or
dec
push
mov
jae
mov
out
pop
adc
jl
fldl
add
cmp
sub
pop
sbb
pop
and
out
pop
cmp
jne
pop
adc
mov
xor
pop
cmp
jge
testl
cwtl
mov
fwait
rolb
orl
jae
adcb
cmp
add
dec
or
add
xchg
jae
loopne
jl
repnz
push
inc
call
or
jb
sbb
add
call
xchg
ret
cmpl
fmuls
sti
mov
test
or
test
inc
movsb
xor
rolb
out
loope
cwtl
and
data16
movsl
cmc
xchg
mov
dec
or
rcl
xor
jle
pop
or
insl
subl
gs
pop
lea
in
loopne
add
sbb
adc
mov
sbb
scas
adc
xchg
sbbl
or
sub
pushf
inc
pop
pop
or
adc
xor
cmpl
add
ljmp
movsb
arpl
inc
inc
or
ja
fstpt
xor
dec
dec
mov
jne
scas
xchg
dec
jmp
mov
mov
adc
sub
and
aad
aad
add
mov
jo
aad
push
xchg
add
sbb
xor
inc
jecxz
mov
arpl
and
lods
jmp
shlb
add
mov
lcall
push
lds
cmpl
xchg
es
cmp
popa
mov
cwtl
movsl
imul
mov
jno
aaa
test
inc
or
jns
mov
mov
test
adc
clc
push
mov
or
or
pop
stc
outsl
or
sub
inc
dec
dec
stc
add
jge
or
test
dec
push
push
cmp
jo
jge
cmp
jbe
mov
cmp
push
sbb
aaa
jo
fcoms
adc
xchg
cmc
fwait
stc
sub
leave
inc
out
in
decb
ss
jbe
xchg
lret
mov
push
lea
in
pop
xor
rorl
jae
iret
popa
inc
dec
inc
mov
mov
mov
mov
and
nop
mov
xchg
sahf
add
or
or
imul
enter
push
sbb
xchg
sti
push
push
addb
push
xchg
cmp
shlb
push
pop
outsl
js
sbb
cmp
jb
cmp
cmp
push
mov
jmp
xor
pop
mov
incl
aas
ja
push
push
push
dec
pop
sahf
and
pop
mov
std
add
mov
ret
push
mov
and
fs
pop
cmp
data16
pop
inc
or
pushl
icebp
xchg
jmp
cwtl
adc
out
fdivs
add
inc
mov
inc
and
push
pop
out
cmp
movb
or
add
jmp
jnp
mov
fbld
add
add
add
sbb
enter
jo
jno
mov
dec
lea
mov
je
xchg
inc
inc
or
push
adc
push
add
popa
add
xlat
les
movl
push
push
add
sbb
arpl
mov
sbb
or
or
neg
fcmovu
mov
add
mov
dec
adcb
cmp
add
sysret
jae
cmp
jo
pop
ret
gs
imul
lea
out
sbb
dec
aam
xchg
in
add
ss
inc
push
or
or
push
and
xlat
mov
pop
scas
xor
or
mov
insl
sbb
movsb
flds
push
mov
fdivs
pop
mov
adc
int3
js
imul
xchg
push
aad
mov
push
pusha
rolb
in
in
into
xchg
xchg
jbe
inc
pop
pop
jb
mov
and
or
push
adc
sub
sar
lea
push
pop
mov
rep
mov
adc
rorl
mov
jge
or
lea
pop
push
xchg
and
cmp
xchg
xchg
push
sbb
bound
sbb
adc
push
jge
push
jo
add
jge
or
jo
add
test
sbb
out
pop
ret
push
mov
mov
mov
insl
outsl
add
xor
sbb
jne
test
or
dec
loope
cmp
pop
in
and
pusha
pusha
add
hlt
or
imul
and
push
xor
ret
sbb
cmp
pop
jbe
adc
xor
add
cmp
int3
fs
xchg
cli
dec
in
push
test
mov
ljmp
add
add
stos
and
rcrl
vmread
mov
mov
ljmp
cld
adc
js
push
call
clc
sub
test
loopne
stc
mov
xchg
outsb
sbb
sbb
jle
and
jbe
sub
lea
cmp
add
sub
push
pop
inc
inc
cmp
jb
sbb
mov
cld
and
dec
xchg
aaa
dec
dec
scas
nop
cmp
inc
or
rolb
rorb
dec
cmc
enter
lods
pushf
cmp
sbb
mov
xchg
push
and
orb
mov
pop
mov
aam
pop
mov
push
cld
push
xor
sbb
sbb
dec
pop
or
inc
je
mov
inc
or
mov
xor
js
add
int
sbb
adc
je
lret
sbb
test
loopne
mov
sbb
lds
pop
mov
in
push
ret
xor
imul
cmp
std
and
nop
inc
in
or
ret
mov
push
inc
adc
or
dec
aam
jge
mov
sub
jle
dec
add
or
and
jmp
out
mov
aas
cmc
sbb
cwtl
popf
into
out
and
shrl
divb
add
xor
hlt
pop
or
addr16
ja
shrb
das
xchg
or
xor
jns
jns
xor
cmp
inc
faddl
jmp
jl
adc
dec
fs
xor
and
add
and
cmp
cmp
loopne
add
cmp
add
adc
dec
or
dec
hlt
xor
rclb
add
and
jno
push
sbb
or
inc
mov
push
lods
fimuls
dec
mov
adc
and
leave
add
adc
rclb
pop
xchg
cmp
insb
stc
mov
dec
out
push
icebp
outsb
movsl
jno
pop
or
es
fcomps
inc
push
sahf
rcll
scas
inc
adc
inc
jecxz
in
dec
jp
jle
je
or
adc
inc
sbb
mov
xor
adc
loopne
fcoms
fisttpll
dec
and
roll
test
sub
lods
pop
lret
pop
call
or
mov
mov
push
int3
je
cmp
jae
add
mov
imul
pop
dec
nop
mov
divb
xchg
mov
cwtl
leave
push
rorl
adc
and
test
xor
sbb
mov
stos
daa
pop
cmp
add
jnp
sub
lods
repz
mov
sti
rep
bound
sbb
inc
xor
or
adc
pop
jp
or
sbb
cmp
jae
cmp
shlb
add
or
mov
sbb
add
mov
fdivrs
clc
xchg
pop
push
push
push
loope
mov
inc
sti
dec
add
jae
xlat
and
adc
sbb
dec
loopne
adc
sub
data16
inc
sub
sub
add
pop
adc
push
xchg
add
inc
xor
xor
inc
xchg
xor
pop
xchg
testb
rorb
push
int3
inc
xchg
mov
into
repz
xor
adc
inc
inc
inc
call
push
add
or
sarb
add
push
add
hlt
leave
clc
loopne
jo
push
mov
xor
and
mov
cmpsl
xorb
xchg
inc
in
jbe
add
mov
jmp
mov
jl
inc
cwtl
adc
mov
xlat
add
sub
cmp
xor
cmc
insb
xor
jbe
repnz
roll
pop
mov
pop
mov
push
cld
clc
pop
cmp
outsb
das
xor
add
lret
jg
xor
loop
pusha
jnp
pop
adc
push
and
ret
sub
dec
in
mov
or
dec
dec
push
cmp
call
jb
add
mov
inc
orb
mov
push
mov
repz
pop
in
xchg
and
add
mov
adc
fcompl
ljmp
mov
sbb
loopne
sbb
mov
adc
inc
adc
arpl
arpl
push
pop
lock
pop
xor
or
adc
data16
out
mov
shrl
sbb
and
sarb
dec
jne
inc
inc
popa
aas
push
loopne
mov
lods
cmp
mov
push
cltd
add
sarl
dec
movsb
dec
xchg
jo
jmp
jno
push
push
std
jo
iret
mov
jge
je
mov
test
jg
xchg
push
ror
adc
testl
mov
pop
cltd
cmp
jl
orb
adc
cmpb
jbe
outsl
or
es
inc
stos
jno
icebp
subb
xchg
sub
mov
push
sbb
fldenv
adc
popa
xchg
cmp
sahf
stos
sbb
fndisi(8087
scas
add
dec
mov
call
call
xchg
sub
pop
inc
leave
adc
mov
pop
mov
rolb
push
jg
jl
movb
adc
test
xlat
add
rol
jge
rolb
or
es
nop
xchg
jns
push
addr16
pusha
aam
lods
push
mov
das
testb
test
mov
xchg
inc
stos
push
ds
in
pop
push
cmp
in
cmc
test
insl
push
adc
nop
cmp
rorw
push
call
cmp
sbbl
cmp
es
mov
or
lea
dec
outsb
cmp
je
les
cmp
add
sarb
xchg
inc
push
clc
add
clc
jbe
or
or
mov
mov
jmp
call
lret
dec
inc
fisubl
fisubs
in
adc
add
mov
mov
jp
leave
addl
mov
add
or
cmp
and
jmp
dec
lret
inc
push
add
pop
call
add
lock
lea
mov
mov
addl
sub
dec
outsb
sub
push
movsl
sbb
pop
pop
push
jnp
xchg
js
mov
pop
std
jo
jnp
mov
sbb
add
lock
add
xchg
or
push
sbb
jne
ds
das
cmp
sbb
inc
inc
fidivs
mov
aad
or
iret
pop
mov
insl
add
jg
sub
xor
sbb
jne
sub
enter
sbb
stos
push
or
lret
pushf
xor
and
and
pop
nop
sbb
push
mov
jmp
dec
ss
arpl
dec
add
dec
cmc
push
mov
cwtl
outsb
sar
lea
jp
fs
sahf
int3
std
push
mov
push
push
cmp
jb
pushl
fdivrl
pop
or
sahf
add
pop
jmp
xor
jae
push
add
add
cltd
pusha
xor
and
aas
adc
lods
pop
or
and
out
int3
mov
jb
ds
add
pop
cltd
sub
lea
lcall
movsl
fcmovne
lods
inc
pop
mov
bnd
add
out
mov
insl
loopne
adc
pop
loopne
push
pop
pop
mov
mov
sub
adc
mov
lcall
pop
lock
pop
shrb
jmp
cmpsb
inc
sub
inc
mov
mov
or
inc
and
adc
dec
xchg
push
mov
std
xchg
push
aaa
push
inc
sbb
adc
mov
test
xchg
sbb
pop
cli
add
pop
enter
mov
push
jb
sbb
jmp
jb
adc
jbe
push
es
or
cmp
push
test
or
in
popf
dec
daa
pop
mov
outsb
pop
sbb
jb
mov
arpl
ja
pusha
leave
adc
addr16
sub
lods
sub
sub
dec
mov
jmp
orb
call
mov
dec
enter
add
xor
pop
add
movl
mov
or
js
test
pushw
outsb
inc
pop
loopne
adc
add
or
xor
in
je
sub
js
pop
and
xchg
bound
jo
adc
sub
dec
das
jge
sahf
mov
xchg
or
es
pop
mov
sub
jle
mov
push
in
add
je
mov
in
add
movsb
nop
add
nop
and
and
in
hlt
add
nop
add
sbb
enter
daa
dec
sub
add
sub
les
cmp
cs
jmp
push
jb
pop
pop
push
adc
xor
xor
scas
mov
xor
or
xor
mov
mov
mov
xchg
mov
push
cmp
fildl
jnp
cwtl
jl
sarb
mov
cs
or
fbld
or
dec
cmp
cli
fnsave
jecxz
adc
shr
xor
sbb
adc
adc
sbb
pop
mov
dec
dec
fildl
loop
cld
mov
pop
dec
js
sub
movl
dec
lods
dec
add
adc
lds
mov
sub
adc
add
repz
rorb
adc
adc
jmp
lcall
cli
ja
ja
movsl
mov
lahf
and
xchg
pop
jge
mov
sub
xor
andb
hlt
divb
das
cmp
aad
add
inc
pop
mov
imul
sub
pop
dec
fimull
mov
and
and
xchg
pop
fbstp
inc
call
and
inc
adc
outsb
dec
cmpsl
data16
push
cwtl
loope
fiadds
enter
push
pop
fadds
scas
adc
ja
je
mov
sbb
movaps
xchg
fnstenv
out
push
pop
subb
add
movb
sub
clc
andb
xor
jne
push
or
fbstp
sub
in
outsl
adcl
add
adc
leave
aad
mulb
xchg
in
push
pop
out
je
mov
stos
lock
push
repnz
es
push
inc
jecxz
lock
dec
cmp
jns
clc
push
cmp
sbb
jae
jne
sbb
sbb
imul
jo
sbb
inc
call
arpl
ljmp
lock
dec
pop
scas
clc
and
cmp
dec
or
into
mov
jae
or
repz
jae,pn
outsb
lea
mov
or
dec
scas
nop
fwait
jg
cmp
movsb
adc
add
pop
xchg
adc
insb
jmp
cmp
in
cmc
es
adc
lock
sbb
add
lea
xor
add
sbb
inc
clc
pop
mov
xorl
push
push
lods
dec
cmp
jg
nop
and
shll
jo
and
lock
sbb
stos
shr
add
xor
push
push
inc
add
shlb
or
mov
leave
insl
call
sub
out
or
or
push
xchg
mov
sub
xchg
push
pop
or
pop
add
clc
dec
or
push
cmp
fadds
lret
int3
dec
mov
pushf
ret
mov
clc
out
cmp
jmp
add
pop
or
push
mov
test
push
xchg
or
push
push
andb
or
ret
dec
or
fcoml
or
test
adc
or
rolb
push
lock
jns
cld
lock
add
test
mov
mov
inc
dec
mov
mov
in
in
jbe
imull
sub
cltd
sub
and
add
sub
hlt
inc
add
xorl
xchg
cmp
jmp
push
out
clc
xor
and
or
or
adc
fisttpll
dec
add
pop
adc
ds
xor
test
or
lahf
cltd
stos
and
lock
ds
cmp
gs
ss
roll
daa
push
aaa
and
or
cmp
xor
cltd
ret
push
lock
sbb
xchg
in
lock
fmuls
mov
push
inc
add
repz
mov
std
call
cmp
jl
cmp
jle
cmp
push
jp
or
pop
ret
mov
lods
mov
add
push
jp
pop
cmp
mov
out
xchg
fildl
pop
and
cmp
jl
je,pn
mov
sub
js
movb
mov
push
add
and
iret
jae
ret
push
cs
pop
sbb
inc
shlb
les
aas
jbe
testl
or
sarl
fidivs
hlt
sub
jne
scas
mov
lock
dec
sub
push
clc
rclb
orb
xchg
push
cmp
jmp
mov
leave
mov
hlt
jge
mov
pushl
sub
mov
movl
add
ret
sbb
or
pop
pop
or
pop
aam
add
outsb
adc
add
cld
lock
subb
push
mov
dec
mov
gs
xchg
lods
repz
add
mov
xchg
push
dec
mov
push
mov
mov
lods
xchg
mov
shll
mov
cmpsb
sahf
jle
cltd
cmpsb
fldl
inc
lret
sar
pop
mov
add
push
js
cmp
dec
push
dec
faddl
fdivs
xor
fistl
mov
js
xchg
mov
pop
mov
adc
leave
mov
sub
lods
dec
sbb
lret
call
scas
mov
xchg
adc
sub
sbb
imul
fmuls
lea
mov
fiaddl
xor
movl
adc
adc
ja
add
xchg
push
je
and
outsb
mov
inc
or
mov
imul
and
add
adc
test
push
inc
or
lret
imul
push
push
pop
pop
pusha
in
mov
mov
add
adc
and
cmp
mov
dec
stc
mov
cmpl
jns
das
adc
or
cltd
mov
imul
dec
je
adc
sbb
push
jne
push
push
mov
sbb
dec
arpl
cmpsb
xor
sub
das
or
push
push
jne
xor
shr
mov
or
scas
loope
add
and
imul
in
xor
and
je
je
add
xchg
xchg
sub
dec
sub
pop
sar
or
loop
rclb
ret
addb
gs
sub
jle
and
add
add
jo
pusha
jno
cmp
adc
inc
xor
rcll
sbbb
addl
ret
push
sbb
adc
jne
aas
adc
cmc
mov
sbb
jnp
inc
cmp
por
sub
inc
cs
add
shlb
pop
imul
pop
scas
lahf
xor
je
loope
mov
sub
cmp
push
out
pop
fucomi
jae
add
push
sarl
push
push
test
xor
scas
jnp
push
mov
ss
inc
pop
cmp
aad
add
aaa
test
in
xchg
inc
les
add
into
sbb
jmp
ret
jmp
or
ds
sub
pusha
ljmp
and
sbbb
fs
mov
pop
xchg
fxch
xchg
inc
pop
rcll
pop
lock
shll
movb
fsubrl
jno
rclb
cld
in
xor
mov
or
cmp
sti
sbb
lahf
ficoms
cmp
mov
mov
test
je
or
je
mov
jne
adcb
and
stos
add
add
add
jno
mov
rolb
hlt
pop
xchg
faddl
jo
cmp
fcompl
and
addb
dec
int3
fs
mov
jmp
add
and
jno
or
leave
in
push
push
inc
mov
sbb
adc
imul
adc
mov
and
mov
insl
insb
pop
je
fwait
lods
inc
movb
ds
push
clc
or
fs
inc
outsl
orb
or
lahf
push
lods
add
adc
xchg
js
adc
adc
mov
xchg
cmp
rclb
dec
stos
pop
inc
push
mov
pop
cltd
jge
adc
test
sub
shll
fadds
mov
jmp
xchg
cmp
sub
adc
aad
int3
jbe
fdivrs
mov
add
mov
xchg
adc
fcomip
adc
cmp
cmpb
fildll
pop
or
jle
pop
scas
add
push
mov
sub
repz
shrb
inc
xchg
push
or
push
push
jae
sub
popa
or
sahf
sub
sti
cld
pop
test
inc
hlt
pop
adc
inc
dec
sbb
mov
add
and
stos
lods
mov
push
hlt
jg
mov
sub
test
not
lea
je
sbbb
add
jmp
mov
add
pop
orps
mov
sbb
xor
mov
lock
or
decb
add
xor
pop
rolb
pop
mov
dec
subb
mov
movsb
movsb
pop
cmp
push
jg
push
ljmp
scas
push
push
nop
loopne
or
cmp
pop
jle
mov
lea
mov
imul
jne
adc
clc
aam
mov
add
dec
jns
jb
cmp
mov
or
xchg
sub
je
unpcklps
or
add
jp
scas
pusha
add
push
gs
push
mov
and
dec
sahf
out
xchg
xor
mov
jne
in
adcb
push
ja
mov
ds
xorl
shll
insb
adc
xchg
cmp
pushf
mov
pop
and
or
dec
clc
ret
jmp
lea
insl
jmp
inc
rorl
pop
jmp
stos
pop
mov
mov
outsb
lret
mov
in
xlat
jmp
aam
adcb
in
and
insb
push
push
or
dec
popf
pop
xchg
repnz
or
push
adc
ja
in
iret
shr
stos
pop
test
jnp
add
ret
dec
jnp
cmp
push
lea
repz
sahf
push
test
dec
sbb
add
inc
sbb
mov
mov
xor
dec
and
mov
incl
and
xor
lds
mov
inc
pushf
pop
add
aaa
pusha
sbb
pop
or
pop
pusha
ret
test
fcomp
rclb
in
cmp
push
fldl
mov
test
pop
push
push
fstpl
add
xor
jle
inc
pop
data16
aaa
adc
cld
cmp
add
bnd
push
divb
or
iret
repz
jne
or
jne
or
fiaddl
or
leave
loopne
fldz
sub
mov
or
call
inc
in
stos
dec
inc
jle
ja
lea
inc
xchg
and
stos
jg
push
xor
test
aam
dec
mov
lret
lea
fstl
jecxz
lock
mov
cltd
xchg
shlb
fnstenv
orb
add
insb
jl
les
aas
mov
xchg
negb
add
and
repnz
js
xchg
push
test
and
mov
les
dec
popa
sub
lea
add
inc
ffree
jge
xchg
insb
add
aam
pushl
inc
inc
in
mov
loop
or
fimuls
in
push
in
movsl
pminub
push
pop
add
inc
fdivrl
and
jnp
push
and
rol
ret
push
rolb
int
add
jmp
or
add
push
ja
nop
scas
outsb
adc
movsb
push
and
xchg
sub
add
fcmovbe
sbb
and
pmulhuw
std
xor
dec
mov
clc
jns
push
pop
push
push
add
ds
addl
push
mov
sbb
sbb
popa
stc
cmpl
lock
xor
push
scas
in
push
stc
jbe
test
pop
or
fistl
xor
pop
or
sbb
iret
and
pop
sub
or
add
cmp
mov
and
or
lods
in
xor
cs
inc
xor
ret
xor
sbb
inc
pop
test
cmp
ja
test
repz
lods
cmc
add
mov
jmp
push
outsl
nop
xchg
cwtl
dec
and
xchg
cltd
fsts
jno
mov
dec
xchg
add
fmul
es
add
mov
push
xor
and
sub
roll
inc
cmp
enter
or
rol
adc
mov
pop
ret
imul
cwtl
mov
mov
mov
in
fcompl
xor
and
inc
jo
loopne
sub
or
mov
pmulhuw
adc
adc
pusha
leave
push
add
add
pushf
mov
ror
enter
pushf
pushf
sarb
mov
test
gs
mov
imul
sbb
adc
push
dec
sahf
popf
xchg
add
das
jl
mov
xor
movsb
sahf
push
imul
enter
push
ret
clc
popa
ret
mull
push
pop
cmp
cmpsl
mov
mov
pop
dec
sbb
sbb
int
test
icebp
mov
cmc
movsl
add
push
or
das
adc
jle
leave
psubq
jp
je
insl
push
lea
repnz
add
add
shrb
cs
data16
push
or
sbb
jl
jl
call
dec
lahf
dec
sarb
into
shl
push
int3
fistpl
xor
mov
xchg
into
push
lock
push
jne
and
or
inc
push
push
add
add
insb
or
push
push
in
cltd
or
mov
icebp
push
frstor
inc
pop
sbb
mov
mov
sbb
xlat
shrl
pop
lret
xchg
push
sti
lcall
dec
insl
xchg
sub
push
push
cwtl
mov
scas
test
mov
ret
cmp
lcall
pop
pop
dec
test
insb
add
push
stos
xchg
mov
rcr
fstps
rcrl
in
sub
scas
and
sub
push
or
xor
mov
push
aas
xor
adc
scas
pop
rdpmc
and
pop
vmwrite
sub
cmp
adc
in
dec
ret
out
jne
xor
cmpsl
test
add
cmp
mov
loopne
xor
sbb
adc
mov
mov
popf
cmpsb
mov
loopne
fdivrl
inc
add
call
push
inc
adc
inc
lock
cmpsb
lock
icebp
mov
pusha
mov
add
mov
jle
test
lret
ret
dec
lcall
pop
inc
pop
push
in
push
add
inc
pop
aam
rorb
jmp
loopne
mov
inc
pop
cmpsb
stos
push
xor
and
orb
icebp
push
sbb
adc
pop
push
lret
xchg
inc
add
ds
shrb
enter
jnp
or
inc
xor
or
int3
mov
cmc
popa
shlb
ja
push
mov
push
dec
and
iret
pop
inc
bswap
jno
push
movsl
sub
add
push
into
xchg
push
int
and
pop
pushf
and
adc
and
inc
loopne
scas
addl
ds
mov
pusha
ret
lea
xor
adc
add
adc
push
imul
int3
cld
ret
push
aam
outsb
cmp
adc
pusha
pop
lds
add
leave
scas
push
jns
add
orb
push
push
test
dec
mov
loope
add
andl
pop
jbe
add
aam
in
sahf
ss
or
js
mov
sbb
je
orl
pop
jb
adc
ret
aam
cmp
cmc
dec
mov
pop
and
pop
push
mov
xchg
jle
cmc
test
add
in
stc
adc
mov
mov
int3
push
bound
dec
or
pop
ja
add
aam
orb
sti
test
lock
lods
push
sbb
lds
adcb
stos
inc
and
cltd
or
aaa
mov
mov
xor
add
lds
add
lahf
ljmp
sbb
sub
mov
xor
bound
push
pop
test
orl
or
lahf
fs
mov
mov
ljmp
inc
cwtl
push
mov
jo
test
je
mov
add
call
sahf
add
les
inc
and
rcrb
jb
mov
roll
adc
adc
paddusw
and
stc
add
fdiv
shlb
adc
dec
and
xchg
or
push
ds
dec
sub
and
cltd
lods
jae
andb
pop
adc
lea
outsl
and
dec
sbb
test
mov
sbb
pop
and
adc
arpl
sbb
lock
pushf
mov
push
sub
adc
mov
mov
add
add
clc
xor
push
jg
or
push
sbb
sbb
roll
cmp
cmp
jl
jmp
rolb
or
sub
add
adc
push
or
insl
mov
jecxz
cmp
dec
aaa
adc
loope
push
lods
call
out
sub
pushw
xor
sbb
cmc
fisubl
faddl
lea
in
mov
mov
push
test
in
fistl
mov
push
mov
xchg
adc
test
mov
and
sub
dec
adc
dec
stos
xchg
cwtl
dec
sarl
adc
pop
push
arpl
add
push
add
fld
xor
aam
adc
cs
pop
dec
inc
push
adc
sub
sbb
fsubrp
sbb
xchg
jb
clc
loopne
push
loop
mov
imul
addr16
in
push
out
adc
sub
push
dec
aam
inc
inc
or
push
loopne
or
movsb
inc
mov
das
inc
jl
push
inc
test
sub
ljmp
nop
inc
testl
je
les
pop
andl
add
inc
mov
inc
out
das
mov
testb
subl
adc
add
and
xchg
mov
and
pop
mov
mov
push
add
jne
popf
clc
jno
aaa
sub
stc
and
add
push
outsb
test
movsl
addb
xchg
test
sar
dec
xchg
nop
cmp
imul
pop
adc
scas
pop
cmpsb
rolb
push
pop
dec
jmp
roll
xor
jb
jnp
dec
jge
pop
ffree
dec
add
popf
fs
cmp
dec
cmpsb
mov
loopne
dec
mov
cmp
dec
sbb
loope
inc
add
pop
inc
mov
push
leave
rep
and
push
inc
pop
movsb
sub
daa
insb
shr
add
mov
movsb
aad
jne
idiv
xchg
ret
clc
or
pushl
addr16
push
icebp
sbb
fstpl
insl
add
leave
and
xchg
xchg
icebp
dec
sub
xor
das
add
andl
dec
adc
add
jno
mov
faddl
xlat
add
mov
movsl
adc
rcl
pop
lret
sub
jo
jmp
mov
rolb
push
lea
ret
dec
push
push
add
mov
push
pushf
sti
in
cmpsl
pusha
push
pushf
pop
pop
leave
xor
xor
lods
or
repz
test
test
pop
enter
loopne
xchg
cmp
outsl
or
mov
or
jo
rcll
mov
push
rorb
adc
push
sub
dec
add
hlt
push
sbb
sub
mov
jnp
nop
pop
hlt
mov
and
dec
movsb
in
or
aas
add
or
sub
push
jae
inc
cld
and
sub
sub
jno
scas
sbb
test
push
rorl
xor
dec
push
cmp
sbb
or
xchg
out
je
ja
mov
dec
push
and
and
lock
push
xor
xor
inc
jo
xchg
or
and
pop
or
or
movsb
xchg
inc
or
ljmp
cmp
push
jb
ja
sub
or
or
push
daa
sbb
inc
movsb
pop
arpl
and
push
sbb
jnp
and
insb
in
cwtl
and
push
sub
sbb
mov
ror
shrb
and
sbb
movsb
and
push
or
cltd
jg
push
or
test
cs
test
cmc
lret
cmp
and
lock
inc
aad
sub
cmpsb
xor
insb
out
add
pop
sub
add
sbb
dec
or
cmp
adc
out
shrb
testl
push
call
add
js
dec
push
pop
int3
cmp
xor
ret
or
sti
aam
cmpsb
je
cmp
mov
pop
cwtl
fmull
call
adc
roll
jne
xor
out
inc
add
dec
jecxz
mov
sbb
ss
arpl
jg
pusha
les
inc
xchg
jl
or
xchg
add
xchg
inc
cmp
cmp
or
add
or
cmc
pushf
hlt
aas
or
mov
cmp
push
nop
pop
xchg
push
lea
cmp
rolb
outsb
imul
push
rolb
out
loopne
mov
sbb
mov
popa
je
fs
push
rcrb
mov
mov
scas
mov
fisttpll
mov
jne
xor
xchg
jnp
ljmp
mov
mov
test
pop
sbb
pop
adc
add
faddl
test
loopne
add
push
xor
insb
orl
xchg
fsts
out
fists
lock
fstps
sbb
dec
ret
les
or
and
push
enter
jb
sbb
sbb
sub
mov
xchg
xor
test
xor
push
xchg
mov
sar
shl
add
mov
push
pop
out
or
mov
mov
inc
cmpb
nop
add
push
stos
dec
aam
xchg
cmc
dec
push
in
subl
mov
bound
jg
mov
mov
icebp
sub
inc
add
mov
sub
add
mov
push
pop
sbb
mov
dec
sti
mov
stos
cmovs
dec
inc
pop
shlb
jmp
jle
ss
ret
data16
lock
xchg
aas
push
push
dec
mov
clc
jle,pt
repz
cmp
outsl
xor
fmuls
das
push
xor
jge
push
ja
jbe
mov
or
xchg
inc
jl
call
sbb
or
xor
pop
addr16
jne
jg
ret
out
xchg
repz
cmp
push
aam
jae
sbbb
mov
aam
mov
jmp
mov
popa
xchg
adcb
sbb
push
inc
jae
dec
fistps
jge
addl
lret
sbb
adc
insl
loop
sbb
jmp
imul
movsbl
add
inc
mov
cmc
loopne
aad
icebp
xor
add
jno
aas
cld
mov
cmp
pushf
or
addb
xchg
outsb
and
add
push
ljmp
xchg
sbb
pop
pop
jne
jbe
std
jmp
fisttpll
popa
and
sbb
add
cwtl
or
cmp
loopne
les
call
and
add
loope
sbb
roll
mov
std
mov
adc
int
pop
pop
aas
clc
lcall
neg
pop
clc
and
insl
clc
push
je
jge
lods
fnsave
out
out
jge
pusha
cmp
add
pop
and
pop
fsub
pop
ficoms
sub
scas
enter
mov
lock
push
jg
push
add
add
and
xchg
xchg
add
push
shlb
add
outsb
or
out
movb
imul
sub
dec
je
add
es
inc
icebp
jb
xor
mov
das
mov
stc
push
ss
sub
push
push
pop
jns
sbb
push
sub
aam
mov
mov
xchg
sbb
add
out
fbstp
push
and
add
pop
dec
imull
pop
sbb
repnz
inc
adc
xchg
ss
push
stos
mov
pop
push
cmpsb
cld
out
in
es
push
push
xchg
sbb
and
xchg
aas
or
lea
ja
fcomps
je
inc
inc
sbb
and
push
push
xchg
push
in
sub
int3
stc
and
movups
sbb
adc
es
ds
in
adc
xor
or
repnz
fistps
lret
shll
lcall
mov
and
fdivl
jo
enter
push
jns
lcall
and
pop
push
jecxz
inc
dec
push
cmp
pop
cmp
inc
in
ficomps
push
and
pop
or
or
jno
and
aas
in
and
push
push
xchg
cmp
push
xchg
repnz
adc
jl
dec
sahf
pop
or
arpl
movsb
js
repz
adc
sbb
mov
xchg
enter
dec
fcoms
mov
and
pop
add
push
fldcw
xchg
pop
aas
in
sbb
push
adc
dec
shrl
inc
adc
or
inc
dec
fimuls
pop
sbb
sahf
sbb
lret
orl
mov
das
xchg
iret
dec
jle
mov
adc
pusha
nop
outsb
hlt
rclb
push
sbb
xchg
hlt
adc
insl
pop
or
nop
sti
stos
or
lods
push
sbb
repz
cmp
pop
outsl
repz
repz
lcall
inc
sahf
out
sahf
push
bound
xchg
cmpsb
jns
out
mov
fldl2e
sti
repz
repz
sbb
repz
popa
jb
xchg
movsl
mov
pop
repnz
jmp
and
xor
je
and
cmp
pop
xchg
addb
jmp
mov
dec
rolb
mov
push
and
bound
or
xchg
shl
mov
mov
movsl
pop
rcl
mov
adcb
or
add
adc
sub
or
lds
jo
inc
mov
xor
mov
dec
cmpsb
mov
roll
movl
inc
push
pop
push
xchg
pop
jl
xchg
push
popaw
add
in
shrl
mov
push
pop
mov
pop
inc
test
jne
addl
and
insb
add
mov
push
push
imulb
sbb
js
sub
ret
mov
inc
fildl
and
cwtl
and
add
push
mov
ss
shl
scas
mov
sub
aam
fwait
sbb
xchg
notb
iret
sarb
sbb
roll
bnd
or
icebp
mov
add
outsl
xchg
fsubrl
dec
incl
push
mov
sub
mov
rcll
aam
xchg
and
lock
xchg
mov
or
xchg
ds
jl
add
loope
adc
loopne
dec
hlt
mov
cmp
enter
clc
mov
aaa
iret
and
push
notl
pop
xor
push
sub
pop
jo
push
xchg
imul
and
push
push
push
arpl
ja
loopne
lock
popa
add
pop
sub
xor
call
push
xchg
call
push
xchg
xorl
add
or
and
mov
and
sbb
or
and
xor
or
das
scas
in
insl
lahf
out
lock
xchg
rclb
cmp
movsb
inc
aaa
lahf
mov
or
pop
insb
adc
jb
pop
leave
inc
outsl
add
add
sahf
or
ret
or
leave
add
pop
add
out
rolb
and
dec
and
xchg
fsubrs
nop
out
or
sub
or
inc
enter
xor
test
mov
mov
imul
push
add
jmp
xchg
aaa
inc
ret
stos
push
and
add
pusha
push
push
cmp
shl
movsl
ret
ret
dec
sahf
xorl
push
xor
xor
fdivs
in
daa
adc
pop
mov
adc
mov
test
push
xchg
jl
push
jle
mov
adc
leave
or
dec
adc
sbb
and
or
es
adc
lock
cmpsb
push
sub
sub
add
into
pusha
inc
movsb
mov
jg
cmpsb
push
xchg
add
fs
mov
xchg
out
add
adc
in
jns
arpl
jbe
sub
mov
sub
nop
adc
adc
shl
addr16
add
arpl
icebp
push
sahf
xor
xor
add
add
add
sub
cmpb
fwait
adc
dec
xchg
adc
add
adc
pop
inc
or
outsb
adc
or
push
rorb
imul
push
adc
aam
insb
cs
and
insl
or
and
cmc
mov
and
test
test
adc
pop
push
or
jg
and
xchg
add
or
sbb
scas
es
out
or
cmpl
mov
xor
inc
popf
pop
inc
add
inc
push
push
and
add
je
lcall
or
enter
std
push
aam
adc
mov
jae
stos
and
or
push
lea
and
inc
xor
or
iret
mov
add
or
sub
mov
outsl
cltd
lahf
sbb
mov
in
pushf
push
scas
test
in
add
rorl
cmc
es
and
adc
mov
push
push
and
lds
push
mov
inc
inc
je
or
push
and
inc
repnz
pusha
adc
and
js
aad
addl
inc
add
mov
inc
sahf
and
inc
pusha
es
add
andb
or
or
mov
mov
adc
pop
inc
add
and
pop
or
cmpl
pushf
sbb
cli
incl
or
adc
cmp
pop
jne
shll
inc
xor
jecxz
sbb
or
push
loop
jae
push
add
enter
push
pusha
and
xor
and
push
xor
fwait
or
add
add
and
sahf
test
xchg
fwait
testl
dec
js
or
add
sbb
imul
mov
sbb
pop
cmp
xchg
cmp
push
mov
cmp
mov
pusha
pop
shr
add
push
mov
jbe
movsb
imul
in
push
insb
in
popa
dec
lret
mov
stos
sbb
add
mov
fcoml
and
push
cmpb
je
shll
push
jnp
cmp
mov
in
and
lods
insl
out
or
jno
and
dec
inc
mov
addr16
roll
or
jns
xchg
cmp
xchg
shlb
repnz
adc
dec
cltd
lds
dec
push
xchg
ss
test
cmp
adc
imul
xor
pusha
sbb
arpl
add
pop
in
sub
stos
and
cmp
fs
mov
pop
es
aaa
mov
shll
xor
mov
sbb
xchg
mov
or
jne
orl
dec
push
cltd
icebp
pop
sub
fisttps
add
nop
mov
jno
faddl
lret
sbb
push
push
icebp
sbb
push
sub
pop
push
mov
xchg
mov
pop
add
mov
adc
push
test
push
push
and
cwtl
mov
test
call
push
push
inc
orb
mov
stos
xorb
mov
inc
cwtl
pop
dec
and
dec
pop
test
pop
mov
pop
mov
push
jns
popa
hlt
pusha
test
fimull
push
push
lahf
xor
mov
ror
roll
rorb
push
addb
fs
xchg
mov
inc
xor
ss
in
ljmp
pop
sub
jno
dec
popa
mov
fwait
int
adc
mov
jbe
cmp
push
add
gs
jae
add
add
cmp
push
fcmove
lock
mov
pop
add
pop
mov
aam
aam
lea
movsb
das
icebp
aaa
dec
adc
sbb
xorb
in
pop
adc
sub
pop
call
adc
rcrl
sbb
stc
pop
or
push
or
adc
in
and
stc
mov
aas
mov
jle
outsb
mov
xor
sub
cmp
mov
xchg
jbe
mov
fs
and
cli
inc
jl
or
sbb
popa
jp
ljmp
int
adc
cmp
cmp
je
mov
mov
push
add
inc
cli
dec
adc
jmp
movb
mov
push
cltd
pop
idiv
mov
je
xor
cmpsl
in
ljmp
inc
cmp
roll
adc
and
iret
mov
push
es
xchg
outsl
mov
push
test
test
mov
mov
fsts
test
dec
stos
clc
loopne
shr
add
or
dec
or
test
inc
push
lock
mov
hlt
incb
adc
sbb
mov
cmpsl
mov
cmp
mov
imul
cmp
daa
cmp
dec
mov
lock
push
cmp
push
push
sbb
mov
cwtl
enter
aaa
cmc
test
pop
jno
mov
lcall
nop
dec
xchg
add
sub
lea
mov
pop
out
fcompl
pop
adc
xor
or
pop
cmpsb
push
push
add
mov
push
mov
jne
pusha
and
or
fisttpll
add
sub
int
add
push
int3
push
and
push
aas
pop
and
mov
mov
je
sub
pushf
mov
inc
enter
add
movsb
adc
lcall
adc
adc
pop
call
xor
xchg
mov
faddl
cmovne
push
jo
pop
inc
adc
sub
enter
mov
cli
daa
mov
jo
mov
jl
std
push
cmpsb
lea
sbb
cmp
movsb
sbb
enter
in
cmp
dec
dec
add
pop
mov
in
push
mov
xorb
push
push
fs
sbb
inc
orl
push
cltd
fdivrs
sbb
push
jns
les
test
dec
imul
pop
aam
and
and
and
adc
and
pusha
dec
inc
fisubl
sarb
adc
and
imul
sbb
cmp
push
dec
push
push
pop
in
jmp
xchg
es
or
inc
daa
jns
xchg
pop
js
ret
insl
sub
push
mov
push
sub
inc
fsubrl
inc
adc
fisubs
xchg
test
mov
pusha
cwtl
dec
nop
and
xchg
pushf
pop
mov
leave
or
js
imul
cmp
pushf
pushf
fsubl
xchg
es
stos
jl
cwtl
test
dec
int3
icebp
in
or
mov
mov
fadds
sub
adc
push
mov
dec
in
sub
dec
fcomps
pop
add
cmpsl
push
loopne
bound
push
in
and
xor
cs
xor
sub
fdivrl
push
inc
xchg
fdivl
sti
fadds
push
dec
test
and
ret
loopne
cli
les
inc
mov
or
sbb
pop
nop
mov
mov
xor
sbbb
mov
or
fucomip
mov
mov
xchg
test
dec
push
dec
loopne
sbb
and
minps
push
es
or
outsl
add
jl
aam
jo
insl
ljmp
test
imul
nop
or
outsl
jmp
push
std
addr16
xchg
mov
push
int3
aas
or
push
cmpsb
pop
jl
xor
or
jns
or
push
gs
or
mov
jmp
pop
leave
xlat
dec
push
cmpsb
sub
jle
lret
fcoml
jo
jno
or
xor
ret
fmull
lock
ret
imul
inc
sbb
inc
and
jae
inc
pushf
in
les
mov
cs
sahf
fcoms
rolb
dec
adc
and
mov
in
xchg
add
jbe
icebp
push
or
sub
call
dec
push
and
fsubl
daa
adc
and
bsr
adc
or
fs
movl
or
les
cvtps2pd
scas
adc
pop
test
dec
cli
inc
push
push
lods
inc
add
imul
adc
fstl
jmp
inc
mov
add
cltd
movsl
sub
ds
bound
outsl
jp
xor
add
xchg
pop
mov
and
jecxz
pcmpgtb
lahf
pop
sbb
pop
cmp
jno
xchg
mov
mov
ds
lret
jmp
mov
and
add
mov
push
mov
xor
pop
movsl
pop
mov
outsb
jb
dec
adc
sbb
out
and
jmp
leave
out
sub
hlt
xchg
insb
or
or
arpl
dec
sbb
inc
or
iret
mov
mov
orl
in
mov
inc
movsb
cmp
hlt
test
xchg
cmpl
lods
ret
sub
nop
out
jns
imul
or
push
pop
mov
call
inc
out
test
push
loop
outsl
mov
jb
fsubrs
cmp
ja
and
imul
jl
add
add
sti
aaa
dec
add
nop
repnz
push
push
push
xchg
jmp
movsbl
lds
and
xor
sub
cs
js
loopne
pop
ds
mov
shll
jb
push
scas
add
lret
and
shrb
pop
inc
inc
pop
imul
or
faddl
arpl
cmpsl
adc
pop
add
pushl
shlb
lock
enter
lds
es
ret
into
or
push
mov
test
sbb
jg
stos
sbb
push
dec
mov
xor
jl
inc
add
shll
aaa
mov
xchg
mov
rcl
faddl
xchg
add
ret
inc
pminub
cmp
stos
mov
push
loopne
push
sbb
mov
sarb
cli
or
addb
cmp
out
es
add
push
fcoms
cmp
sarb
mov
mov
xchg
data16
arpl
inc
lcall
loopne
inc
pop
jns
xor
stos
dec
cmc
ret
jmp
sub
rcrb
and
int3
or
mov
gs
add
or
and
sbb
adc
sub
ds
pop
or
mov
repnz
repnz
sub
clc
push
push
pop
adc
inc
cltd
push
push
pushl
loop
adc
fsubl
dec
loope
pusha
ret
or
lea
xchg
call
popa
mov
fwait
push
pop
fadds
iret
ljmp
fcmovne
fmulp
add
das
stos
xorl
into
add
repz
je
dec
inc
xchg
inc
je
dec
push
lret
repz
mov
and
sbb
sbb
lcall
xchg
fucom
bound
mov
xchg
jo
mov
loopne
inc
cmp
pop
clc
add
nop
add
popf
sub
jmp
ds
or
test
or
push
pop
adc
fs
and
loope
sub
mov
gs
fiaddl
pop
pop
mov
shrl
add
and
mov
push
jge
jno
sahf
flds
sub
mov
cmp
sti
xchg
cmp
mov
rorb
jp
rorl
push
scas
pop
insb
cmp
pop
cmp
in
xchg
fsts
fisttpll
loope
cmp
mov
cmp
es
sub
cmp
adc
xchg
repnz
adcb
or
sub
inc
jmp
fnstcw
push
shll
inc
mov
pop
leave
or
dec
pop
push
fdivs
jmp
add
mov
lds
jns
or
jnp
cld
cwtl
inc
pop
fst
and
push
inc
or
icebp
inc
lret
data16
jp
hlt
test
jl
mov
cmp
je
sub
cmp
mov
cltd
and
push
lea
xchg
and
lcall
shrl
push
and
fdivl
xor
fcoml
pusha
dec
subb
and
cmp
add
and
and
pop
test
mov
sbb
push
adc
sub
add
shr
add
adc
mov
sub
jle
add
outsb
addb
adc
xchg
push
xchg
flds
inc
iret
xlat
push
int3
or
push
mov
cltd
inc
arpl
mov
add
cmp
mov
out
loopne
xor
cmp
jns
and
jecxz
adc
mov
dec
add
call
cwtl
xor
inc
sub
scas
dec
adc
mov
ja
add
adc
xchg
or
ret
jne
rcrl
cmp
mov
fmul
pop
fisttpll
pop
insl
or
cwtl
or
cmp
pop
jle
xchg
jg
loopne
mov
pop
call
loop
and
push
mov
push
mov
rcll
or
arpl
adcl
nop
push
mov
in
pop
mov
sarb
loope
icebp
scas
push
cltd
outsl
push
push
popa
in
adc
rcl
jno
and
jb
mov
lahf
icebp
aam
loopne
xor
in
addr16
in
adc
push
sub
pop
xchg
pop
xchg
push
xor
aam
and
add
sub
jl
aas
adc
add
adc
lods
mov
mov
pop
arpl
jl
ss
loop
push
pop
pop
and
jbe
jo
xor
es
xchg
pop
and
lock
int3
and
in
daa
lahf
push
or
mov
or
test
fstl
addl
or
sti
loope
mov
cmpl
jnp
enter
ds
adc
cld
pop
jl
mov
jmp
fidivs
int3
movsb
mov
xor
sbb
add
mov
or
loopne
sbb
sbb
or
add
lcall
cmpsb
popa
push
or
ret
or
push
cmpb
or
sbb
rclb
ds
push
lods
mov
in
pop
lret
test
xor
add
xchg
pop
ja
jne
mov
into
shr
push
add
push
cltd
jb
or
and
xor
xlat
add
and
sbbb
mov
add
pushl
rcrb
addl
cmp
adc
ret
dec
call
ds
dec
sbb
push
sub
es
add
push
sub
xor
cmp
cmp
jae
mov
pusha
xchg
call
loopne
mov
add
jmp
xchg
jl
pop
testl
push
cmp
jne
pop
icebp
fbld
or
push
fdivr
xchg
adc
ss
cli
mov
xchg
pop
push
pop
aas
mov
dec
sbb
mov
or
and
je
fldl2t
sub
mov
dec
push
jne
in
loope
leave
mov
repnz
add
cmp
xchg
jo
or
push
jo
fbld
cltd
cli
dec
mov
push
mov
mov
jecxz
ret
idiv
pusha
pop
push
or
out
pushf
testl
sbb
mov
push
movl
mov
adc
inc
mov
orl
lock
adc
aad
push
mov
mov
or
jp
xchg
xchg
fimull
add
sahf
pusha
or
add
cli
push
jne
mov
xchg
cmp
push
addl
je
dec
movsl
fs
je
test
dec
into
sbb
data16
xchg
sahf
fsub
sti
pop
push
fists
mov
out
pusha
nop
imul
push
add
adc
sub
inc
out
pushl
cmp
jge
inc
sbb
inc
jb
es
cmp
lret
enter
pop
adc
not
cli
mov
sbb
dec
ja
test
xchg
pusha
or
add
sub
rorl
insb
adc
jne
sahf
adc
cmp
or
mov
push
and
push
je
add
fmull
js
ret
mov
or
shll
xchg
mov
pop
aaa
std
inc
push
jnp
sbb
and
cwtl
adcl
push
xchg
sbb
dec
aas
jno
cmp
add
push
aaa
dec
dec
jb
lea
repz
adc
lods
xor
cmc
xor
mov
mov
test
imul
sti
test
dec
inc
pop
lret
bound
loopne
push
into
fimull
dec
dec
bound
pop
out
pop
data16
daa
lret
or
loopne
mov
aas
inc
std
add
xchg
push
pop
imul
sahf
mov
out
test
mov
sbb
pushl
or
nop
or
or
mov
pop
sarl
cmpsl
subl
fwait
add
sbb
nop
cs
xchg
pop
xor
jecxz
cmp
fidivrs
std
lods
inc
cmp
enter
popl
add
and
xchg
mov
iret
push
popf
push
push
test
mov
and
inc
pushf
sbb
sub
jecxz
add
enter
inc
das
or
and
dec
addr16
andl
and
mov
add
xchg
or
fldl
jnp
jl
xor
lods
add
popa
mov
inc
outsb
mov
test
add
pop
lret
or
xor
out
repz
and
and
mov
test
inc
xorb
repnz
push
push
bnd
sub
sub
cltd
hlt
xor
out
push
call
jb
jmp
das
sub
mov
add
movsb
sub
loopne
or
jecxz
clc
dec
cs
sarl
cmc
jle
mov
pop
inc
mov
out
or
xchg
jmp
std
sub
jo
pop
pop
jmp
shl
punpckhbw
and
imul
dec
sbb
es
rcll
ret
sbb
sbb
pushf
add
or
mull
mov
dec
cmp
scas
ret
leave
inc
scas
push
inc
sbb
in
imul
xchg
add
dec
pop
scas
and
push
or
sub
cmp
movsl
pop
test
ret
fdivrs
add
insb
test
test
mov
push
js
mov
xor
xor
sbb
cltd
shrl
mov
mov
pop
pop
pushf
mov
and
adc
insl
daa
iret
mov
sub
mov
jle
sbb
sbb
and
imul
sbb
dec
movsl
andb
xor
adc
ret
into
inc
mov
flds
xchg
ret
or
pusha
or
addl
popf
sbbl
dec
push
xor
xor
outsb
xchg
iret
cmpsl
and
scas
pop
mov
imul
notl
add
push
push
mov
and
and
addr16
in
or
sub
cli
pop
je
xchg
sub
push
aam
insl
rcrl
addb
movsl
test
aad
push
mov
lds
mov
or
or
cmp
lea
daa
leave
or
leave
ret
stos
dec
adc
inc
es
xchg
or
pusha
or
pop
sarl
sbb
jo
in
push
loop
shll
pop
lods
in
movl
nop
arpl
repz
cmp
cs
pop
je
push
push
das
lock
sbbl
fadds
outsb
cmc
sub
aam
mov
lods
pop
jnp
fiadds
jo
push
loopne
out
inc
rcrb
insb
xchg
dec
nop
adc
sbb
sub
or
mov
xor
inc
xor
add
or
pusha
in
and
popa
mov
adc
cmpb
push
add
and
push
in
jo
or
add
adc
push
push
adc
stos
gs
pop
push
imul
add
jg
sbb
das
dec
and
sbbb
fsts
scas
mov
ret
adcl
pop
and
ret
push
or
pop
pop
dec
and
inc
mov
xor
push
push
mov
push
adc
add
add
push
sbbl
push
dec
or
repnz
aam
xor
les
mov
mov
xchg
lock
mov
add
adc
sub
push
xchg
sarl
push
and
sub
add
cltd
push
add
out
leave
add
cld
or
ficompl
push
add
xchg
ficoms
movsl
sbb
xchg
inc
xor
ret
push
sbb
and
insb
hlt
stos
mov
xchg
add
scas
aam
mov
or
ret
cmp
js
jo
push
xlat
xor
xchg
add
sbb
mov
sbb
push
adc
insl
outsl
adc
jne
gs
cmp
inc
jb
pop
pop
push
add
nopl
andb
faddl
cmp
xchg
or
loopne
jle
movsb
add
lret
movsl
ficoms
scas
and
push
sub
and
push
cmp
sub
or
xchg
mov
clc
push
cmp
fnstcw
enter
jg
push
lods
aas
or
dec
imul
bound
inc
jmp
mov
mov
cmp
push
xor
mov
adc
mov
add
sub
outsl
dec
xchg
rolb
stc
xchg
sbb
and
cmp
pusha
adc
sub
adc
cltd
inc
adc
adc
mov
mov
pop
dec
stos
int3
or
xchg
movsb
int
shl
std
mov
cmp
or
loope
sbb
add
lea
dec
jmp
or
jle
jmp
icebp
jb
jmp
xchg
cmp
or
out
fildl
xor
mov
dec
pop
and
dec
or
inc
cwtl
and
fbld
mov
and
or
nop
xchg
insb
adc
inc
scas
lret
loopne
push
sub
push
std
pop
dec
jns
xor
inc
xor
inc
dec
add
pop
imul
or
push
and
cmp
cmp
or
or
std
mov
add
jo
cwtl
and
sbb
fldcw
repnz
das
dec
test
xchg
xchg
ss
sahf
insb
jae
push
add
jmp
and
pushf
and
sbb
movsb
nop
xchg
daa
jo
lahf
das
adc
inc
fmuls
mov
popa
and
sbb
pushf
insb
xor
fisubrs
and
decb
outsl
mov
inc
mov
adc
rcll
dec
pusha
dec
cmpsb
pop
or
add
xor
add
inc
fiaddl
inc
dec
pop
call
mov
push
shlb
out
add
xchg
or
xor
test
dec
scas
jnp
test
sbb
scas
cmp
pop
lods
add
imul
cltd
xor
hlt
dec
pop
xchg
imul
cld
nop
xor
add
scas
push
mov
and
mov
adcb
dec
jge
popf
call
fimuls
mov
xchg
mov
loope
cmpl
outsl
mov
sub
mov
xchg
outsl
push
jecxz
popa
int3
adc
add
pop
ja
push
rorb
xor
xchg
pushf
cmp
inc
je
fdivl
add
jae
mov
fstpt
sub
aam
push
xchg
mov
adc
mov
mov
sbb
jge
jb
and
lahf
sub
fdivr
add
pushl
stos
inc
jmp
pop
mov
add
clts
wrmsr
sbb
or
rolb
xlat
icebp
push
mov
dec
mov
ja
push
icebp
dec
or
mov
xchg
inc
add
lea
xorb
dec
xchg
add
adc
out
stos
je
inc
inc
adc
add
cs
test
mov
inc
bound
lret
adc
jno
mov
sahf
push
fistl
cmpsl
ret
mov
in
adc
or
or
mul
jne
shlb
loopne
popa
mov
pop
loop
dec
or
jl
mov
test
mov
roll
dec
or
sbb
jmp
mov
cmp
add
jns
sbb
test
loopne
mov
je
adc
es
in
or
dec
arpl
pop
inc
mov
loopne
in
loopne
jo
ret
dec
and
or
jmp
ret
mov
xchg
or
adc
sub
pop
ljmp
add
inc
mov
fs
xor
inc
dec
test
mov
push
icebp
mov
xor
js
inc
shrb
mov
fs
loop
push
test
mov
jp
mov
xor
dec
and
std
into
pop
xchg
pop
insb
xor
imul
out
mov
scas
pop
xorl
push
gs
fmulp
adc
dec
loope
mov
pop
data16
test
pop
cmp
imul
sub
xchg
das
js
fnsave
add
pop
cmp
xor
enter
push
loope
sub
ljmp
pop
test
rcll
push
inc
sbb
cmp
or
mov
in
test
setge
das
mov
cmp
mov
xor
aam
ret
or
pop
mov
mov
pop
dec
dec
aaa
roll
and
scas
jne
adcb
hlt
dec
xchg
cmp
or
inc
jbe
inc
int
push
call
and
cmp
xchg
mov
dec
mov
cld
lods
xchg
bound
cmp
pop
jne
loopne
lea
inc
dec
push
push
sub
dec
out
push
or
in
in
cmpsb
push
test
call
mov
out
loopne
faddl
cmp
jo
cld
cmp
xchg
sbb
xchg
push
push
adc
subl
imul
push
mov
or
inc
sbb
sbb
xchg
sbb
mov
cli
push
pop
xor
out
js
sub
stos
mov
jl
cmpsb
add
movb
mov
mov
movl
ret
xchg
mov
lea
inc
sbb
mov
nop
jbe
or
mov
cld
sub
mov
shlb
mov
rol
fadds
inc
cmp
xchg
or
xchg
xchg
add
enter
out
addr16
jbe
mov
sbb
xor
sbb
ds
sar
rol
ds
mov
sub
push
divb
outsl
add
inc
dec
pop
push
push
lret
fcmovb
je
or
cld
cmp
out
lahf
jne
push
pop
ffreep
jne
push
aad
sti
divb
dec
in
mov
mov
pop
add
and
sub
cmpb
sub
scas
jmp
scas
ret
cmp
jb
ret
out
jns
movsb
sbb
das
or
push
cmp
loope
mov
mov
xor
adc
rol
cmp
add
wbinvd
and
push
in
mov
xor
or
leave
enter
pop
js
fcompl
push
rcrl
pop
push
and
rcll
cmpsl
add
mov
add
xchg
or
cltd
movsb
fucomi
xorl
adc
add
lods
push
enter
les
push
pop
fidivrs
push
rclb
rclb
adc
lock
mov
adc
inc
adc
sub
add
mov
push
mov
pusha
inc
aam
push
pop
stos
or
mov
scas
or
cmp
sbb
xor
and
or
lret
jbe
ss
push
pmulhuw
sbb
jb
stc
or
add
dec
sbb
mov
mov
in
adc
mov
dec
mov
add
xchg
shr
rcrl
push
xorb
hlt
jne
mov
push
sar
mov
popl
xchg
stos
lods
add
xchg
sub
cmp
js
test
cs
xor
adc
flds
es
daa
or
inc
jo
jo
rol
push
out
jmp
test
loopne
pop
and
in
lcall
jmp
outsb
or
jae
add
cltd
jmp
test
pop
addr16
pop
dec
add
stc
mov
dec
mov
jno
adc
les
pop
ret
in
dec
shrb
mov
sbb
mov
enter
inc
cs
andl
rolb
inc
lods
pop
dec
ds
lods
xchg
adc
imul
and
lods
dec
push
adc
xor
rclb
sub
lock
aas
jg
add
mov
add
outsb
std
testl
mov
lock
and
and
or
shrl
jns
imul
mov
int
inc
jo
imul
pop
xchg
dec
jg
adc
orb
or
mov
call
pop
mov
and
inc
clc
pop
add
jo
xchg
jbe
push
adc
mov
push
inc
jne
sub
adc
jmp
inc
add
and
outsb
decl
aas
dec
and
jg
xchg
dec
mov
jmp
ss
adc
xor
mov
pop
or
mov
pop
push
push
mov
jl
push
pop
or
out
in
or
xor
and
mov
popf
rcr
xchg
adc
cld
enter
in
sbb
arpl
dec
add
xchg
lock
pop
sbb
pop
inc
fsubl
mov
or
inc
loop
xlat
sub
inc
xor
inc
imul
jo
add
sahf
std
popf
xchg
push
pop
mov
js
inc
xchg
adc
je
jp
push
or
rcr
sub
adc
les
mov
jo
sub
sbb
loopne
and
popa
test
or
ret
add
sbb
adc
add
cmp
pop
lods
nop
jno
sub
leave
jl
mov
add
jnp
es
mov
xor
cmp
xlat
mov
mov
clc
push
jle,pt
add
dec
sub
scas
add
sbb
lods
adc
icebp
cmp
mov
sbb
mov
sub
decb
enter
out
push
adc
pop
clc
jne
dec
jg
out
loopne
jns
xchg
jmp
cmpl
xchg
push
and
mov
adc
daa
push
shrb
pop
mov
xor
arpl
pop
popa
pop
jne
cs
mov
pop
push
pop
test
in
shl
and
sbb
pop
out
and
pushf
int3
sbb
push
push
push
mov
push
pusha
or
enter
or
sub
imul
xchg
sbb
push
scas
sarb
loopne
enter
jbe
mov
xlat
push
imul
sbbb
sub
or
hlt
and
bnd
je
fcmovb
mov
pop
sbb
inc
or
clc
adc
cmp
cmp
jae
jo
add
mov
ljmp
mov
adc
xorl
pusha
pop
je
sbb
jmp
cs
dec
sbb
mov
pop
out
fisttpl
pop
jg
jp
or
loopne
int3
ljmp
mov
out
lods
out
rcll
push
jnp
jo
ja
mov
cmpsl
xor
pop
push
dec
loopne
add
xlat
sub
xchg
push
test
jnp
sbb
sbb
fcompl
jae
mov
aas
pop
clc
xor
dec
test
xchg
sbb
sub
jns
push
mov
addb
dec
adcl
jge
aam
fwait
push
cmp
push
jge
out
jbe
mov
call
movsl
fstp
in
fisubs
lret
sub
mov
vmread
mov
mov
dec
fsub
js
inc
push
push
or
insl
shl
push
mov
aad
fmul
pop
push
xlat
clc
dec
add
cld
aam
push
insb
mov
adc
adc
jbe
insb
jnp
stc
lock
mov
imul
pop
ljmp
mov
inc
aam
fimuls
fnstcw
cmp
push
or
std
mov
fisttpll
mov
outsb
imul
adc
sub
repnz
pop
adc
adc
rcrb
add
add
popf
sbb
push
enter
inc
sbb
dec
sarb
sti
xor
xchg
popf
hlt
or
cmp
in
mov
insb
xor
inc
sbb
in
mov
mov
sub
cmp
repnz
sbb
jmp
enter
add
pop
pop
mov
and
movsl
movsw
push
pop
add
cld
movsb
mov
rclb
or
mov
shr
mov
inc
mov
inc
mov
adc
movb
in
lea
cmpb
jnp
dec
and
xor
in
push
mov
and
dec
rcrb
fldenv
add
ja
movsbl
xor
fwait
mov
in
add
jb
and
daa
push
cld
je
push
push
scas
lret
and
sbb
dec
pop
bound
popa
gs
imul
jmp
sbb
cmpl
loopne
in
movsl
cmpsl
push
or
dec
jae
lods
lods
push
mov
add
inc
add
xor
dec
dec
or
fcompl
test
ss
xor
cmp
push
or
or
xlat
sbb
sbb
pop
outsb
lock
and
dec
push
rorl
sbb
push
rolb
inc
push
push
xchg
inc
popl
cmc
and
dec
or
cmp
push
add
stos
loopne
or
inc
mov
add
lcall
xabort
cmp
inc
add
or
test
clc
mov
leave
leave
dec
fcmovnu
adc
leave
leave
leave
leave
add
out
leave
or
jmp
or
jmp
or
jno
out
out
jmp
push
jmp
por
jmp
out
out
adc
pop
adc
push
adc
dec
adc
dec
out
out
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
out
out
jmp
push
jmp
pop
jmp
and
or
and
or
jmp
and
jne
sub
push
lds
clc
mov
add
inc
in
loope
test
fisttpl
sahf
testb
pop
push
imul
sahf
mov
jns
out
mov
mov
sahf
out
rcl
fneni(8087
sahf
out
sahf
in
out
hlt
stc
cmp
sarl
or
iret
repz
es
in
mov
add
and
or
or
push
movups
adc
adc
push
pop
sbb
inc
in
lcall
sbb
sbb
push
pop
and
and
aas
sbbb
sbb
mov
xor
mov
orl
mov
push
cmp
loopne
jg
add
idivl
mov
cmp
lret
out
lock
fdivrs
xor
out
jae
sub
xor
fnsave
out
mov
xor
add
sub
xlat
pop
es
or
test
pop
jge
dec
lock
xor
aaa
mov
loop
mov
inc
cmp
jbe
inc
sbb
test
movsb
arpl
or
or
xchg
and
pop
add
js
scas
jge
pop
clc
std
push
add
inc
mov
mov
or
mov
call
loope
sub
add
inc
lock
in
and
add
sti
in
ss
aaa
sbb
xorb
mov
mov
push
or
call
repnz
in
dec
lock
sbb
xlat
xchg
jecxz
sub
push
and
shll
pop
dec
adc
add
adc
in
xchg
and
inc
enter
mov
or
out
jns
inc
test
das
nop
mov
cmp
dec
dec
jne
cld
and
push
add
push
inc
cmp
push
add
mov
sub
ffree
mov
mov
add
jae
or
add
and
shr
int
pop
and
xor
pop
fdivrl
add
sub
push
ret
cmp
mov
dec
int3
dec
push
adcb
mov
push
push
mov
lock
outsl
mov
adc
loope
das
inc
inc
push
xchg
mov
imul
test
cmp
enter
loopne
add
aaa
jb
ds
mov
push
adc
inc
or
sbbl
push
adc
add
movsb
push
jne
inc
ss
rclb
shl
lret
or
and
inc
hlt
push
vorpd
jmp
scas
add
mov
sbb
jne
imul
ljmp
les
roll
lcall
sbb
iret
ret
iret
adc
pop
movsl
testl
inc
xchg
popa
xchg
adc
or
test
cltd
cmpsl
jno
fcom
adc
or
mov
or
push
mov
je
dec
xchg
shlb
xchg
inc
xor
or
adcb
clc
adc
out
popf
movsl
iret
cmp
cmp
push
adc
and
sub
or
pop
rclb
adc
pop
and
ljmp
mov
mov
and
add
in
sub
je
fisubs
daa
scas
insb
push
scas
or
fists
lock
mov
xchg
or
dec
push
inc
xchg
add
push
mov
pop
or
test
pop
pop
sub
adc
dec
push
cmp
or
mov
dec
loop
inc
inc
jo
add
shlb
add
mov
mov
movb
xchg
xor
sbb
pop
icebp
push
or
in
aaa
cmp
loop
inc
mov
mov
xchg
imul
mov
cmp
call
rcll
and
inc
add
mov
xchg
cmpsl
shl
dec
cmpsb
dec
enter
xorl
shl
ror
int3
xchg
enter
add
push
or
movsb
xchg
adc
mov
fildl
dec
lret
cmpsb
add
xor
int
cmp
jbe
loopne
shrb
sbb
pop
ret
ds
adc
shl
jne
outsb
mov
add
add
sub
daa
add
pop
dec
int3
mov
inc
daa
fistpl
jbe
adc
push
repnz
testb
xchg
mov
test
xor
rolb
outsb
fwait
aad
bnd
nop
push
or
adc
add
inc
cmp
xorb
mov
push
mov
pusha
xor
negb
lock
addr16
sbb
loopne
fs
push
cltd
shl
xor
testl
enter
cmpb
sbb
testl
cltd
xor
rcr
pushf
ficoml
mov
adc
les
jp
pop
pop
add
mov
or
pop
push
push
push
cwtl
add
addb
inc
adc
pop
sbb
cmp
stos
pushl
sahf
es
shl
cmp
flds
push
aam
or
pop
or
pop
daa
adc
push
cmpsl
cs
cltd
addb
es
push
scas
sbb
call
mov
mov
adc
sub
add
mov
in
add
jle
cmp
or
push
pop
enter
sub
int3
rcr
imul
leave
xchg
sbb
add
inc
mov
shl
inc
rclb
add
or
mov
xchg
add
pop
cwtl
fmull
push
daa
xchg
add
jmp
iret
pop
cld
add
fisttpll
add
fiaddl
add
xorl
add
pushf
jno
mov
push
popf
mov
add
inc
mov
sub
fimuls
inc
sbb
lods
mov
mov
sub
es
jl
movb
mov
push
pop
loope
add
jae
jae
dec
push
or
int
scas
sub
jne
stos
pop
sbb
je
in
jmp
push
outsl
xor
cmp
jge
inc
or
xor
xchg
pop
mov
push
add
inc
push
jb
adc
in
test
inc
or
lods
pop
pop
push
lcall
cmpsb
mov
pop
es
adc
pop
jle
cmpsb
mov
ret
add
or
jne
mov
jmp
cmp
je
lcall
adc
fisubl
sub
inc
loopne
or
adc
cmpsl
add
loopne
mov
das
add
xchg
xor
in
gs
je
mov
ds
push
iret
je
push
cmpsl
sbb
inc
repnz
inc
or
cmp
cs
inc
sub
push
shr
jne
push
add
sbb
enter
pop
add
pop
dec
loopne
dec
dec
push
int
xchg
and
push
rol
jl
fnstsw
sub
xor
jl
lock
cmc
sbb
xchg
mov
fcoml
jmp
add
clc
and
jecxz
jl
push
outsb
xor
inc
popl
js
fsubs
or
fsubrl
dec
mov
push
add
scas
or
xor
xor
jnp
out
orb
pusha
inc
sub
mov
xor
or
or
orl
sbb
loope
daa
xchg
sbb
or
xor
in
xor
sbb
xor
sbbb
mov
add
pop
mov
jne
sub
jl
jae
movzbl
ds
insb
pop
push
aaa
mov
jmp
xchg
xor
shl
inc
add
mov
xor
mov
mov
and
pmulhuw
nop
and
push
shl
jmp
aas
test
pop
mov
xchg
es
sub
mov
jecxz
mov
push
in
and
lahf
enter
xchg
jg
out
pop
mov
je
fcomp
fistps
in
push
es
pop
xchg
adc
add
and
shr
mov
setge
cmpb
clc
fistpl
add
lea
push
mov
test
sahf
imul
jg
insl
and
lret
sub
jbe
add
jns
je
or
incl
cmp
jl
sub
lea
cmp
hlt
cmp
je
fmull
rorb
or
dec
jnp
push
sbbl
fildl
jae
fistpll
cmpsb
repnz
lods
sub
inc
and
in
jne
aas
xchg
hlt
push
int3
mov
int3
jmp
out
push
lret
mov
inc
setne
mov
dec
cmp
cmp
mov
or
mov
and
pop
jne
jge
and
sub
adc
push
aaa
and
jmp
rcrl
mov
in
aam
xor
pop
popf
pushw
mov
das
lds
cmp
sub
popl
xchg
dec
mov
xchg
or
sbb
push
fwait
cltd
dec
lds
imul
xchg
das
or
call
int3
sub
and
decl
fmuls
push
pop
cmp
or
cli
in
int3
cld
xchg
add
lret
es
lea
loopne
das
repnz
jge
pop
sbb
push
push
sbb
mov
cmp
les
adc
dec
fucomi
lods
inc
sbb
lods
jle
mov
insl
out
add
lock
pop
sub
adc
push
cld
dec
push
pop
js
cmpb
jp
clc
ljmp
je
cmp
jne
push
inc
pop
inc
enter
cmp
xchg
push
sub
push
lea
sahf
push
adc
xlat
mov
mov
xor
mov
test
push
pop
mov
cli
push
clc
mov
in
mov
sbb
or
mov
enter
sbb
push
stos
push
cmpl
and
std
ds
nop
ja
adc
sub
inc
sti
lock
movsl
test
or
call
loop
jo
mov
fisubs
subb
mov
adc
clc
jmp
mov
ret
push
in
lods
jno
or
jp
fildl
jbe
add
fwait
push
push
jnp
les
add
sti
sbb
ss
clc
les
jno
or
cmp
xor
mov
sbb
cmp
std
inc
push
mov
jne
push
and
es
repz
clc
adc
add
mov
scas
and
sub
mov
mov
sbb
mov
test
pop
cmp
dec
loopne
mov
ja
xlat
in
sbb
das
fcmovbe
push
out
ss
push
push
imul
fstpt
jo
push
add
lods
jecxz
inc
mov
xchg
mov
insb
ds
sbb
jmp
add
mov
ret
fdivrl
push
dec
adc
push
int
or
add
or
jmp
inc
fs
lds
xchg
rorl
les
test
test
xor
xchg
push
push
push
orl
into
cmpsl
dec
add
inc
pop
lea
add
or
add
inc
add
shrl
std
rcll
mov
mov
mov
mov
rcl
inc
cwtl
bound
addb
pop
sub
sbb
pushf
pop
pop
mov
les
and
jne
sbb
add
jne
mov
loope
jmp
stos
add
or
andl
push
and
movsb
inc
and
jmp
and
cwtl
rcrb
cmp
mov
movzbl
jo
inc
and
push
xchg
in
out
push
add
xchg
test
lcall
loop
fs
mov
inc
adc
cmp
sbb
pop
mov
es
xlat
inc
mov
sub
adc
mov
sbb
or
and
and
jmp
dec
es
mov
inc
dec
movsl
dec
adc
mov
popa
mov
fmulp
rorb
aam
jae
insl
in
push
movsb
pop
je
add
cmp
add
ljmp
jmp
adc
lds
pop
icebp
lret
mov
push
add
pop
xchg
push
shrl
pop
cmpl
popf
pop
push
mov
test
enter
int
loope
sbb
jecxz
push
push
rol
pusha
cmp
in
pop
mov
ret
pop
mov
cmp
adc
sub
icebp
aas
adc
dec
in
xchg
icebp
adc
or
dec
inc
mov
addr16
mov
mov
sbb
jae
inc
rorb
pop
ja
and
je
adc
jmp
inc
and
aad
jg
or
inc
movaps
es
mov
mov
mov
adc
add
jne
fs
sahf
pop
xor
xchg
fisubrl
jns
or
icebp
pop
push
jns
pop
or
dec
xor
pop
mov
and
lods
adc
leave
pop
cmp
fwait
xor
test
push
lea
fcmovb
sub
imul
lods
push
stc
pop
and
push
pop
popa
sbb
sbb
movl
add
lds
sub
and
push
lahf
dec
sahf
dec
daa
push
push
test
mov
fs
pop
clc
and
push
push
popf
pop
sbb
aas
push
frstor
push
xor
add
faddl
fstl
fldz
fcomp
fnstsw
pop
sbbl
fnsave
pop
fsubr
pop
fisubs
push
insb
inc
sbb
cli
and
adc
test
add
or
test
cmp
aam
dec
sbbb
ret
inc
shl
rcrb
xor
lock
inc
test
add
mov
sub
inc
add
push
scas
inc
sub
lea
pop
sbb
inc
cmp
sbb
push
outsl
imul
fldl
xchg
mov
fldt
stos
mov
jp
mov
sub
lods
ss
sbb
test
jmp
jg
inc
or
iret
pop
dec
sub
xor
xchg
es
jecxz
xor
mov
fwait
sbb
adc
add
add
leave
inc
ret
fsubrs
fldl
mov
push
cld
fs
test
mov
or
out
repz
mov
fimuls
std
mov
push
enter
xorb
mov
in
stos
add
data16
lcall
shlb
lcall
lea
mov
fsubrs
mov
sub
cltd
pop
scas
or
lcall
push
jne
push
xor
out
mov
and
imul
add
dec
mov
cmp
push
jge
pushf
mov
jecxz
hlt
adc
mov
into
pop
dec
fldenv
or
xchg
ds
adc
or
pop
std
lar
jne
mov
pop
and
push
rcrb
pop
test
push
clc
cwtl
sub
and
into
rolb
and
or
aas
xchg
cmp
sub
gs
pusha
rorl
and
div
pop
inc
pop
imul
arpl
ret
fcmove
sti
mov
les
push
ss
subl
mov
add
pusha
mov
xchg
sti
mov
clc
add
or
aaa
add
pop
jbe
jne
xchg
dec
jmp
cmp
jl
inc
aam
test
add
push
stos
xor
mov
dec
pop
jb
adc
dec
and
iret
or
xor
inc
lock
xchg
cwtl
inc
rcrl
mov
jo
aas
outsl
mov
dec
ss
sub
addb
sbb
push
shll
fs
testb
xor
mov
xchg
das
dec
push
stos
mov
in
add
dec
or
mov
pop
sub
sbb
jne
je
test
mov
les
movb
inc
inc
jle
clc
aad
mov
xchg
push
and
dec
lock
push
add
add
aad
test
shll
rcrb
xor
push
sbb
xor
pop
rol
dec
inc
xchg
or
lock
aam
inc
pop
push
es
scas
pop
ja
jge
cmp
jne
js
sbb
push
dec
mov
and
lods
adc
inc
xchg
cmpsl
cmp
in
xor
dec
fwait
stc
mov
mov
adc
or
sbb
hlt
cltd
aaa
cmp
add
cs
or
or
pop
push
out
shlb
sbb
push
jmp
cmp
xchg
les
cmp
pusha
jb
sbb
ss
loopne
jns
rclb
xchg
push
or
scas
inc
popf
sub
aam
add
or
orl
aaa
cmp
cmp
or
cmp
enter
cltd
repz
or
gs
xor
jb
testl
and
add
sbbb
pop
jbe
push
dec
cmp
dec
xchg
dec
pop
push
leave
jp
push
sbbl
sbb
dec
inc
add
cmp
cmp
jge
cmp
dec
push
push
push
dec
xchg
or
pop
dec
jnp
dec
or
mov
pop
and
and
dec
push
sbb
mov
xchg
push
loope
mov
cltd
test
and
push
dec
imul
leave
add
sbb
mov
inc
sarl
pop
inc
ret
and
pop
adc
inc
sbb
mov
or
or
or
mov
test
cli
xor
and
push
rcrl
mov
aas
sub
or
push
xor
enter
pushf
in
ret
push
and
xchg
jno
ret
dec
xor
pop
dec
pop
or
addb
dec
mov
js
iret
cmpsb
push
nop
mov
xor
clc
movsl
xchg
add
in
test
inc
in
xor
in
fimuls
or
xor
sub
pop
insl
popa
xchg
movsb
or
dec
push
stc
subb
es
pop
push
imul
fs
std
rcrl
jo
in
adc
enter
mov
test
push
pop
push
add
movsb
mov
push
popf
rcl
mov
rorb
add
push
int3
pop
sub
fnstsw
movl
fsubs
cld
int3
scas
add
daa
or
adc
call
pusha
mov
push
cmp
fistl
add
daa
pop
adc
and
bound
sub
cmp
sbb
test
iret
push
inc
fcoms
sub
xchg
movsb
pop
in
sub
push
stos
inc
and
cmp
pusha
cltd
sub
or
inc
jbe,pn
xor
inc
call
cmp
inc
cmp
cmp
xchg
or
xlat
sub
andl
dec
lods
mov
adcl
les
enter
movsl
adc
xor
inc
sub
push
stc
pop
add
sub
inc
and
xor
sub
nopl
mov
dec
adc
lret
add
lock
mov
cmp
jge
dec
fstpl
insb
inc
push
xchg
sub
mov
std
jmp
push
in
mov
mov
dec
push
lret
add
adc
push
push
out
xchg
movsb
inc
dec
filds
push
push
je
pusha
imul
xchg
lcall
rcl
lahf
lock
aam
mov
test
xchg
adcb
dec
xor
xchg
add
mov
rcll
pop
fs
push
adc
rcrl
add
xchg
in
push
dec
add
add
dec
jle
push
push
dec
test
xor
test
int
nop
fildl
loop
xor
mov
and
dec
xchg
lahf
push
pop
or
pop
push
and
dec
lods
inc
mov
dec
jl
ficoml
in
push
test
jnp
jno
push
dec
pushf
mov
dec
sbb
adc
cmpsb
pop
test
test
lods
pop
pusha
adc
notb
lods
sub
jecxz
loopne
inc
jge
lods
add
sbb
icebp
mov
shll
call
test
xchg
jb
mov
mov
push
outsl
aam
jb
jb
jae
adc
nop
add
fnstsw
cmp
pop
push
movsl
pop
push
in
and
pop
int3
in
push
inc
loopne
adc
int3
push
cmp
add
jmp
sbb
add
or
sbb
ja
incb
or
loopne
aam
inc
addl
rcr
loopne
outsl
cmpl
inc
mov
push
aaa
adc
testb
dec
fsubl
fiaddl
jge
push
fsubrl
divb
je
in
test
adc
popa
add
aam
xchg
loop
fsubrs
dec
sbb
incl
int3
lret
or
int3
mov
adc
das
stos
add
or
scas
cmp
xor
and
hlt
insb
dec
push
mov
pop
mov
add
or
es
sti
add
enter
or
lret
add
pop
jbe
dec
push
pop
repnz
or
loop
jo
leave
mov
xchg
mov
mov
icebp
and
in
fisubrl
adc
sub
test
std
or
ljmp
adc
adc
lahf
rcr
sti
adc
mov
mov
outsl
mov
xchg
into
mov
mov
fwait
mov
mov
mov
cmp
sub
dec
clc
out
cmp
add
je
mov
xor
xchg
pusha
pop
jo
adc
hlt
mov
add
movsb
pop
xor
test
mov
add
cmp
xchg
mov
imul
add
dec
lret
insb
outsl
pop
hlt
jo
or
dec
pop
mov
add
push
add
add
cwtl
or
mov
xor
inc
xor
scas
inc
cli
adc
sbbl
jb
aam
or
dec
or
cwtl
or
ljmp
inc
or
mov
imul
mov
sbb
pop
adc
out
jne
subl
push
inc
inc
repz
inc
pop
jmp
and
enter
test
mov
jb
push
adc
arpl
hlt
pop
fistps
incb
or
jo
pop
jmp
xchg
pop
dec
xchg
aam
and
aas
imul
pop
mov
mov
pushl
or
push
hlt
inc
push
adc
mov
repnz
inc
jne
fadds
mov
jmp
movsl
negl
sarl
orb
test
mov
and
and
mov
sub
mov
das
lds
aam
and
xor
sub
add
call
cltd
cmp
cmp
adcb
ret
scas
push
jl
add
je
rolb
sbb
sub
loopne
test
je
add
addl
push
subl
popf
inc
or
imul
js
sahf
cmp
or
cmp
lcall
loop
je
fs
leave
lds
and
cmpb
cmpb
xlat
adc
inc
lods
and
sub
mov
or
aas
pop
lea
inc
mov
xchg
add
or
clc
rcrl
sub
and
jo
data16
in
cmp
cmp
movzbl
pop
and
adc
lahf
rol
inc
cld
cmp
or
push
and
push
push
pop
clc
push
jl
mov
sub
subb
sub
arpl
push
mov
leave
push
pop
pop
lahf
push
mov
add
mov
movsl
mov
into
loopne
jle
or
cmpsl
pop
movsl
testb
mov
push
cld
and
lret
shrl
rcll
test
and
ss
cmp
add
or
daa
or
or
push
adc
mov
adc
or
or
and
testb
imul
xlat
sub
hlt
shlb
cmp
cmp
xor
cmc
clc
xchg
in
push
je
or
je
push
and
xchg
ja
sbb
test
pop
add
mov
pushf
jne
mov
clc
or
mov
mov
ret
scas
push
mov
es
or
inc
call
loope
adc
test
in
mov
pop
mov
sub
push
loop
lods
fcomps
dec
fnstcw
outsl
mov
rcrb
mov
pop
daa
mov
cmc
add
xor
dec
sti
rclb
sub
sub
xor
mov
push
mov
sbb
adc
mov
imul
dec
jecxz
cmp
int3
arpl
pop
sbb
iret
andl
mov
scas
add
inc
adc
cmp
test
push
or
movsb
mov
inc
or
outsl
test
inc
loopne
jno
push
xchg
mov
test
call
fs
lret
ret
mov
mov
push
pop
jbe
cmpsb
adc
pop
pop
test
pop
loopne
dec
lret
mov
data16
pop
fisttpll
and
xor
add
add
mov
sahf
gs
mov
test
pop
inc
stos
movsb
out
adc
push
jae
mov
inc
cmpb
fdivrp
pop
or
clc
es
mov
test
jmp
push
pop
push
cmp
cmp
or
movsl
xchg
sar
lock
jne
or
fcoml
mov
or
inc
adc
jp
or
mov
pop
inc
mov
into
fiadds
fildll
sahf
xchg
jno
xor
ss
jg
adc
xor
leave
insb
xchg
sbb
lret
aam
into
lods
add
call
xor
das
mov
pop
mov
and
add
out
sbb
sub
jne
jb
cmp
inc
testb
push
pushf
arpl
lods
or
mov
insb
imul
push
sbb
xlat
sbb
adc
and
add
test
lea
push
or
or
sbb
pusha
xor
in
mov
int3
and
call
add
or
jne
push
lret
enter
movsl
lret
sub
mov
inc
jecxz
and
jp
es
loopne
addr16
fstl
loopne
leave
inc
xorl
jae
hlt
sbb
lret
cmp
das
leave
out
inc
test
mov
and
or
cmpsb
pop
loope
js
push
or
imul
push
inc
in
inc
add
add
ds
js
arpl
fsubrp
cmpsl
sti
add
loopne
push
pop
fdivl
cs
fstps
sbb
push
mov
jns
lods
sbbb
fdivl
pop
sbb
pop
push
pop
or
mov
jno
je
divl
mov
or
clc
and
shrb
jns
push
inc
push
in
popa
cmpsb
adc
stc
das
push
cwtl
loopne
pushf
or
mov
xchg
cli
mov
mov
repnz
xchg
push
or
xchg
or
xor
inc
sbb
insl
test
cmp
pushf
cmp
sti
call
sbb
or
dec
add
call
xchg
cwtl
mov
push
arpl
add
xchg
or
outsb
and
and
push
nop
movb
wrmsr
and
pop
fidivrl
dec
fdivrl
jo
mov
pushf
mov
dec
int3
cmp
popf
flds
jecxz
push
jne
cld
xor
jo
push
mov
sub
push
leave
cmpl
and
adc
dec
movsb
mov
sub
dec
mov
iret
aaa
sti
jmp
sub
nop
dec
push
leave
mov
or
clc
lods
dec
mov
mov
jae
push
or
jmp
add
jo
and
xchg
dec
sete
add
add
into
cwtl
xchg
stos
and
loopne
js
jmp
cmp
pop
mov
or
mov
adc
outsb
adc
xor
push
mov
adc
or
lea
mov
ret
and
inc
call
pop
hlt
ret
adc
add
sbb
loope
mov
push
push
push
icebp
dec
inc
out
lods
cld
pop
or
je
add
inc
test
clc
insb
flds
cwtl
mov
mov
cmp
ret
jg
mov
mov
or
or
sub
lea
in
adc
pop
cmpsl
mov
push
pop
in
pop
adc
inc
dec
inc
push
xor
ljmp
cmp
jge
pushf
mov
push
ret
adc
push
lcall
rcrb
fnsave
leave
std
push
rorb
sub
jne
inc
inc
jmp
inc
fs
sub
and
and
cmp
sub
push
cli
icebp
add
out
ret
mov
push
dec
jmp
test
shrb
inc
out
repnz
iret
loopne
jnp
or
sub
aam
hlt
pop
ud2
cltd
scas
arpl
ss
shr
push
loop
pop
pop
inc
xlat
push
enter
sbb
dec
test
jl
sbb
loopne
in
out
mov
xchg
es
pushf
and
je
mov
pop
in
mov
ret
and
mov
xor
cs
lods
add
adc
mov
add
aam
fcoms
mov
rcll
adcb
test
mov
and
movsb
pop
jne
sbb
and
lods
jmp
sub
inc
mov
xchg
mov
subl
mov
xchg
mov
les
enter
ret
outsb
out
dec
or
in
aam
inc
sub
jo
or
pop
sbb
loope
mov
call
push
es
push
mov
clc
or
je
and
xchg
cmp
test
mov
fcoms
mov
jle
dec
inc
cs
cs
mov
mov
push
test
clc
arpl
sbb
cmc
push
mov
test
or
out
dec
pop
pop
push
sbb
push
nop
popf
pusha
clc
sub
xchg
repnz
mov
test
mov
xor
inc
xor
hlt
mov
loope
inc
loope
mov
add
add
xchg
dec
lock
sub
repz
pop
mov
inc
into
and
inc
call
std
add
or
aad
out
xor
jo
dec
xchg
xchg
xchg
jne
arpl
or
es
scas
das
push
push
jbe
push
mov
insb
lret
and
adc
insb
fdivl
stos
addb
mov
aas
mov
lods
pop
es
in
mov
fidivs
jne
dec
ret
cmc
call
mov
xchg
in
or
xchg
lods
dec
clc
aas
je
xchg
push
gs
or
mov
push
pop
jae
xor
test
gs
pop
cmp
repz
rcrl
fisubl
or
inc
push
movsb
sub
sahf
add
mov
adc
call
fcoms
ja
add
or
pop
scas
cmp
in
movsl
pushf
mov
or
out
mov
lcall
push
mov
cmp
mov
xchg
mov
sbb
xchg
or
cmp
call
mov
jge
test
call
movsl
or
cmpsl
mov
nop
push
mov
and
mov
sbb
xchg
add
mov
shlb
cli
shr
hlt
cmp
xor
adc
push
adc
jp
not
mov
enter
push
aad
mov
mov
shr
cmp
jbe
add
jmp
add
mov
mov
pop
xchg
fadd
pop
and
jg
add
inc
dec
and
in
xor
frstor
loope
mov
in
jle
mov
adc
sbb
adc
inc
add
adc
mov
call
js
insl
mov
push
push
mov
xchg
mov
imul
hlt
fcompl
inc
add
xchg
inc
push
add
xchg
ss
rcr
jo
mov
testl
xchg
jnp
or
push
or
dec
push
push
and
xchg
xor
mov
cmp
jmp
pop
aas
bound
loopne
pop
and
int
add
test
xchg
dec
push
or
cltd
add
push
mov
inc
out
das
push
sahf
shlb
xor
sub
daa
mulb
test
inc
je
xchg
mul
std
xchg
dec
and
mov
mov
xchg
and
je
inc
mov
push
push
call
mov
xchg
and
daa
repnz
shlb
bound
push
lret
divb
fs
imul
pop
mov
xchg
popa
xlat
jmp
pop
push
mov
nop
add
jmp
inc
push
sbb
ret
jge
cmp
add
pop
ret
addl
sub
bound
andb
xchg
jns
sbb
or
push
inc
in
add
sub
add
add
push
test
test
flds
or
and
and
adc
pop
pushf
push
or
and
sub
and
jl
pop
jmp
sbb
or
dec
inc
cmp
inc
sub
add
mov
dec
js
pop
mov
add
inc
xchg
cmp
jp
or
pusha
mov
jbe
inc
lea
xchg
es
xor
inc
pop
or
xchg
orb
inc
repnz
andl
dec
or
xor
sub
cmp
xor
sub
inc
es
clc
outsl
add
out
adc
pop
mov
orb
sbb
sub
ljmp
push
mov
mov
and
scas
or
inc
mov
popf
mov
iret
mov
jp
es
and
cmpsl
mov
dec
push
push
out
mov
int
sbb
cmpsl
mov
xor
loopne
and
mov
enter
cmp
cmp
or
xchg
adc
cmp
and
adc
sub
jbe
xchg
out
jmp
mov
movsb
adc
dec
aad
and
movsl
push
xchg
mov
mov
jbe
push
push
push
loope
jnp
adc
pop
jne
mov
sub
or
mov
shlb
scas
mov
test
add
add
cmpsl
dec
repnz
add
and
adc
inc
or
push
sbb
pop
dec
rcrb
dec
xchg
add
fisubl
adc
lock
sbb
imul
and
jne
jae
je
fcoml
adc
imul
push
ret
cwtl
enter
dec
fdivr
or
jo
dec
push
lcall
popf
jns
add
sub
mov
loopne
jb
add
dec
cld
movsb
or
adc
push
inc
call
lods
mov
and
xchg
mov
cmp
loope
add
jmp
inc
fsubrl
xor
or
leave
jge
les
stos
xor
ret
and
mov
push
enter
sbb
mov
daa
pop
adc
or
insl
in
mov
loop
movsb
adc
xchg
iret
insl
or
mov
les
pop
mov
cwtl
sub
or
pushf
xchg
dec
cld
pop
push
inc
sub
xor
mov
cvtpi2ps
fisubs
sub
or
mov
js
and
mov
push
mov
inc
insl
sub
dec
push
arpl
mov
sbb
cmovo
push
xchg
or
mov
cli
inc
enter
lods
nop
andb
add
adc
out
mov
push
push
jne
repz
inc
sbb
jge
les
cmpsl
imul
sbb
push
cld
push
push
subl
sub
push
andb
data16
test
push
cmp
and
xor
movsb
mov
das
add
jne
inc
sub
and
push
stos
push
pop
fstl
mov
mov
scas
cmpsl
in
lods
mov
rolb
inc
adc
les
loopne
mov
fs
push
and
or
add
jmp
mov
jl
popa
sbb
pusha
call
shlb
call
push
xlat
inc
orb
rol
cltd
in
jns
loopne
outsb
sbb
mov
sub
outsl
adc
loope
mov
cmp
jne
jo
xchg
cltd
rorb
xor
arpl
je
dec
inc
lret
jmp
movsb
imul
push
mov
fsubs
dec
xchg
xchg
push
outsl
lock
add
jmp
xor
adc
dec
jbe
xorl
add
or
arpl
shl
xor
jle
sbb
inc
addr16
sbb
fsubrl
andl
icebp
push
dec
bound
adc
bound
icebp
lock
adc
and
imul
and
sub
push
sub
jo
mov
ret
enter
xchg
in
sub
seta
mov
rol
sbb
shrb
sub
incl
cmp
movsl
inc
sub
js
mov
mov
ja
mov
or
je
or
and
cmp
xorl
test
into
icebp
push
dec
jmp
inc
mov
scas
cltd
nop
rorb
xchg
shl
leave
sbb
in
insl
push
push
mov
stc
xchg
cwtl
mov
mov
jle
mov
out
inc
outsl
mov
mov
push
loop
push
fsubl
fstpl
mov
or
and
call
stos
sbb
adcl
inc
or
adc
push
dec
lds
add
ja
das
loopne
fimull
ret
lret
loopne
push
adc
jns
or
sahf
movsl
pop
enter
push
ret
pop
and
add
fcoml
dec
and
and
xchg
xchg
pop
xor
inc
iret
sbb
in
jmp
adc
loopne
push
add
cli
jne
adc
movsb
adc
xor
add
out
sub
sub
lods
push
mov
je
and
inc
add
outsl
addr16
es
push
add
push
negb
push
iret
push
nop
sub
sub
inc
lea
push
sub
scas
test
push
add
push
adc
add
data16
sahf
cltd
and
add
imul
adc
xor
lock
dec
jne
push
and
and
in
or
ficoms
add
test
adc
or
jl
addl
mov
je
int3
rolb
push
fidivs
decl
inc
adc
xor
mov
jl
and
xchg
or
nop
inc
adc
mov
fprem
fs
clc
xchg
jo
push
bound
andb
mov
and
imul
call
jg
fst
lea
or
es
dec
test
mov
xchg
mov
call
fs
adc
dec
cld
push
push
ljmp
dec
pushf
leave
push
loopne
adc
lock
xor
cltd
loope
jmp
sti
mov
inc
mov
push
movsl
pop
in
cwtl
push
xchg
and
xchg
mov
add
adc
fistpll
nop
pushf
sti
inc
mov
push
loopne
loope
push
gs
push
xchg
mov
inc
mov
jle
mov
jmp
sub
inc
sbb
roll
pop
jne
push
popa
push
rorb
into
push
push
jmp
test
dec
add
add
repnz
pushf
push
shlb
inc
or
pusha
add
and
test
push
cmp
push
movb
inc
lods
jg
xchg
outsb
sub
gs
add
pop
inc
mov
sbb
js
movl
lock
hlt
sub
cld
push
jmp
xlat
pop
cmp
cli
addr16
bound
ret
mov
mov
movsl
movl
adc
sahf
mov
or
jl
adc
sbb
pop
sub
dec
sub
gs
adc
sbb
inc
jl
pop
pop
mov
cmp
jae
lret
or
stos
push
mov
icebp
xchg
pop
push
outsl
push
ja
push
mov
add
fdivr
aas
pop
mov
xchg
push
sbb
or
push
xor
jbe
inc
nop
test
in
cmp
test
or
mov
mov
mov
push
jl
push
in
add
gs
and
not
inc
inc
xchg
or
cwtl
mov
sub
cmp
add
cmc
je
push
inc
and
shl
push
sbb
adc
and
xchg
jmp
sbb
pshufw
je
jmp
inc
cmp
sbb
stos
adc
daa
pop
dec
insb
dec
loope
mov
dec
insb
sub
mov
sarl
xchg
lods
mov
dec
dec
mov
or
iret
cmp
loope
push
pusha
cmpsb
loopne
adc
in
loopne
popf
xchg
push
stc
pusha
or
rolb
and
in
mov
loopne
and
push
or
out
cmp
sbb
cmp
je
bound
pop
add
xor
push
inc
push
xorb
std
inc
and
bnd
inc
lods
xchg
adc
sbb
jae
add
pusha
dec
add
sbb
pop
mov
xor
push
mov
pop
cltd
xor
mov
inc
dec
iret
inc
jbe
lock
call
imul
mov
sbb
test
adc
test
adc
xchg
mov
add
js
push
dec
xlat
pop
jmp
xor
sub
inc
fmul
jp
cmp
sub
dec
push
out
xorl
sub
adc
rclb
roll
test
mov
cmc
es
dec
cmp
add
xchg
test
in
sbb
popa
sbb
push
jg
pushw
cmc
jge
out
and
cmp
popa
xor
adc
movsb
push
fbstp
jecxz
subb
cmp
mov
cmc
ret
testb
test
cli
xchg
rcl
xor
mov
pop
mov
pop
mov
shlb
dec
cmc
mov
rorb
rorb
lock
adc
popl
jp
or
or
cmpb
or
or
mov
addb
push
call
les
popa
lods
les
pushf
std
loope
jno
cmp
cmp
jo
pop
adc
jp
in
pop
fisttpll
jmp
dec
pusha
mov
rol
mov
ror
call
shr
xor
sub
jnp
xor
shr
xor
add
ret
cli
add
add
loopne
out
cmp
pop
xchg
fs
or
jae
std
mov
not
and
xor
add
add
and
sub
jge
add
int
scas
sub
push
cwtl
repnz
cli
fisubrs
jl
iret
add
xor
and
and
xchg
push
aam
inc
or
xor
push
fs
gs
repnz
repnz
dec
imul
sub
fmull
pop
or
ja
push
or
xlat
ret
rorb
testl
hlt
add
xor
fsubr
iret
and
xchg
rcl
call
mov
dec
xor
ljmp
rol
rol
out
add
pop
and
push
xor
fmul
movsb
test
in
dec
shll
aam
in
mov
sub
in
lahf
in
xorl
data16
inc
push
bound
pop
sub
lock
les
mov
pop
xlat
rclb
fadd
cs
cltd
imul
xor
cwtl
loopne
and
in
loopne
ror
loopne
xor
pop
cmp
aam
rorl
xchg
xorb
ss
push
imul
or
push
xor
and
and
cmpsl
jge
lods
loopne
or
mov
mov
xor
push
test
inc
mov
inc
adc
mov
inc
inc
scas
shlb
add
adc
or
pusha
lcall
inc
adc
icebp
int3
iret
push
loop
mov
add
add
pop
inc
fadds
pop
jbe
call
add
ret
lret
push
clc
sub
pop
mov
xor
xlat
add
gs
fdivrs
cmpsb
cltd
add
fs
push
cmp
call
cld
xor
lret
inc
mov
sub
or
test
adcb
push
aam
cmp
and
dec
sub
imul
sbb
insb
inc
shr
pop
add
inc
aaa
cli
push
pop
xor
xor
xor
rolb
imul
inc
nop
cmpsb
imul
scas
call
add
sbb
adc
xor
lret
je
push
dec
add
inc
xor
pusha
inc
jb
js
orb
cmpsb
xor
cmp
add
sahf
push
jl
add
pop
xchg
push
pop
enter
cmp
adcb
xor
fwait
dec
jae
sahf
push
add
imul
or
inc
push
sbb
test
imul
or
dec
push
xchg
enter
movsl
mov
or
enter
rolb
dec
cmp
xor
sahf
fs
or
jo
cmp
xchg
fs
dec
dec
icebp
push
lahf
xchg
xchg
stc
stc
stc
mov
adc
pop
dec
mov
xor
pop
fimuls
push
dec
lcall
adc
adc
aaa
insl
xchg
imul
and
add
adcb
and
icebp
mov
rolb
pushf
out
pop
add
sub
mov
add
sub
lcall
jb
clc
pinsrw
lea
xchg
add
sub
test
lea
pop
xor
ss
aas
push
adc
sub
shl
push
loope
mov
mov
rorb
or
jmp
loope
or
mov
adc
adc
in
dec
push
ja
inc
jae
mov
sub
or
mov
js
mov
aas
lea
jmp
jns
jg
lea
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
add
mov
mov
ficomps
sub
mov
cmp
jbe
push
xor
insb
or
clc
fs
push
inc
dec
adc
shl
fildl
sub
jae
push
pop
fadds
rep
or
fisttps
and
sbb
rol
or
dec
mov
outsl
pop
push
hlt
insl
loopne
ror
mov
notl
xor
mov
mov
adc
add
mov
and
jb
cmp
ja
dec
sahf
jbe
mov
inc
inc
aaa
pusha
loope
imul
cmp
push
mov
je
mov
mov
add
push
sbb
mov
sub
mov
sbb
lahf
imulb
pop
push
inc
adc
clc
pusha
testl
mov
repnz
inc
push
push
adc
jmp
mov
in
xor
filds
add
popa
fmull
pop
jne
push
cmp
clc
dec
fsubs
jne,pn
pop
sbb
sbb
or
push
dec
inc
lea
mov
mov
pop
dec
xor
push
movsb
jne
jmp
fnstenv
cli
adc
je
testl
divb
sbb
cli
adc
adc
or
inc
inc
repz
adc
fs
dec
inc
push
inc
and
or
add
jp
add
sbb
cwtl
sbb
add
mov
fnstcw
lock
out
mov
lea
or
mov
insb
sbb
hlt
and
push
subb
jae
sahf
mov
pop
sahf
rcrb
sarl
sti
cmp
notb
incl
jg
cmp
mov
lret
cmp
xchg
pushf
outsb
or
ja
pushf
push
inc
ret
lods
fnsave
outsl
pop
lea
add
push
xor
lea
cmp
push
pushf
and
test
ret
inc
cmp
pop
out
movzwl
data16
faddl
lret
jb
cmp
rol
pop
shl
add
jmp
cwtl
aas
mov
mov
inc
orl
ds
data16
test
jne
in
and
lock
test
sub
dec
or
add
sub
aas
push
jae
mov
jmp
dec
shlb
test
xor
ds
add
cmp
sub
ret
fiaddl
inc
cmp
push
adc
rcrb
ja
jle
popf
lret
cmp
jg
or
jge
and
fsubl
jle
es
sub
sub
and
pop
stos
movsl
mov
cmp
jl
pop
jle
pusha
test
test
outsb
dec
and
jp
jb
loopne
repz
push
adc
aas
mov
je
test
jne
je
outsb
and
mov
jb,pt
jb
je
push
das
add
sti
adc
movb
into
je
jl
andb
cmp
lock
inc
pop
ds
adc
jno
xor
add
and
je
mov
cmp
jmp
mov
cmp
add
mov
or
call
jbe
sbb
inc
lahf
lea
pop
and
sbb
mov
movsl
pop
dec
lods
roll
es
pop
cld
icebp
pushl
push
mov
and
loope
sarl
lret
arpl
js
out
fidivl
cmp
pop
sbb
or
jb
test
sub
xchg
loope
sbb
push
jo
arpl
dec
inc
insl
fbld
xor
inc
and
jp
fwait
push
inc
lea
push
faddl
inc
movhps
cmp
push
decl
in
mov
cmpl
push
mov
cmp
repnz
mov
or
xchg
sbb
pop
fidivl
ja
fnstenv
dec
in
rclb
add
inc
arpl
in
sbb
dec
fadds
inc
and
push
shlb
xor
pop
insl
and
cmp
je
test
push
out
adc
out
add
dec
push
imul
cwtl
inc
loopne
inc
data16
xlat
mov
jae
mov
cmp
inc
dec
add
arpl
sub
add
mov
ds
fucomip
jo
add
inc
push
pop
rcll
aad
lods
aam
or
sub
cld
and
mov
es
jl
add
cmp
add
push
sbb
push
lock
xchg
pop
mov
or
xchg
mov
sahf
push
pushl
sarl
fdiv
and
popa
hlt
sti
push
sub
clc
inc
xchg
xchg
pop
push
mov
sbb
cltd
or
push
sub
push
popa
scas
and
shrb
or
sub
pusha
sti
pusha
mov
xor
jb
cs
es
xor
add
ds
dec
adc
mov
inc
lea
hlt
push
push
push
je
dec
mov
sarb
movsb
jo
insl
mov
roll
mov
and
inc
add
cmp
push
xor
xchg
jne
lahf
jne
and
addl
sbb
push
xchg
xchg
xchg
lods
and
in
out
popa
push
and
mov
push
push
leave
mov
cmp
or
mov
xchg
cmp
dec
push
test
fld
pop
test
mov
ror
add
push
mov
call
push
idivb
faddp
inc
lcall
rclb
in
xlat
xchg
imul
sarb
adc
mov
xor
popa
and
dec
fdiv
mov
sbb
jne
dec
rolb
xor
shrb
and
shr
xor
adc
cld
push
fdivl
rclb
xchg
sub
dec
cpuid
cmp
xchg
pop
cwtl
push
das
sbb
sub
bound
sbb
rolb
mov
xchg
inc
cmpl
xchg
push
ja
mov
mov
fcomp
sbb
and
inc
je
sbb
je
cld
mov
cli
mov
mov
inc
inc
inc
mov
mov
xchg
hlt
loope
jge
pop
and
mov
sbb
and
inc
mov
add
or
cmp
jle
loopne
xor
andl
inc
fsubr
cmp
ljmp
push
push
mov
inc
dec
and
insb
jne
fsubs
push
jl
sub
jge
inc
sbb
sbb
es
je
inc
pushl
add
int
ss
inc
adc
and
mov
mov
xchg
jne
les
aam
adc
jo
adc
cmpsb
or
loope
xchg
or
mov
dec
mov
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
sub
mov
jl
out
mov
jo
and
jae
mov
imul
jns
nop
mov
lods
test
add
enter
ret
jo
ret
lahf
mov
das
ret
cmpsl
mov
push
sbb
stos
popa
outsl
adc
pop
je
pop
outsb
mov
leave
or
and
add
jmp
clc
adc
add
jne
mov
xor
mov
pop
movb
mov
sbbb
and
fsubl
or
jg
sub
jg
xchg
lret
xor
cmp
or
jmp
mov
add
cld
add
ret
push
mov
push
cmp
xorb
mov
jecxz
mov
rcll
imul
in
insb
push
cmp
rorb
xchg
push
cmp
adc
in
jbe
and
mov
dec
inc
and
sbb
xchg
push
sub
xor
xor
cmp
insl
mov
fisttps
or
pop
xchg
inc
movb
mov
add
xor
add
into
adc
data16
lret
xor
jo
xchg
add
push
roll
inc
and
or
pop
std
cmpsl
sbb
cmp
xor
ljmp
out
mov
lock
aam
dec
sbb
add
sub
mov
jle
xchg
jmp
imul
sbb
jmp
adc
aam
pusha
popf
test
xlat
jbe
pushf
mov
clc
nop
inc
push
pushf
inc
add
and
push
sahf
orl
outsl
lock
les
adc
sahf
cs
inc
sahf
arpl
or
add
sti
loopne
add
js
rcll
add
push
aam
daa
and
notb
cmp
push
cli
xor
jne
sbb
and
add
sub
xchg
aaa
je
clc
or
pop
push
je
and
addr16
movzwl
test
fistpl
rcrb
std
mov
mov
adc
pusha
std
in
clc
jne
lret
xorl
fldlg2
cltd
punpckldq
loop
call
nop
dec
cmpsb
les
mov
xchg
js
pop
inc
shll
or
or
and
insb
jmp
add
pushf
sub
cmp
xor
add
in
daa
push
test
adc
fisttpl
adc
es
data16
sbbb
or
mov
fsubl
sbb
into
ret
jmp
int
xlat
aam
orb
xchg
xchg
mov
lea
lods
fisubl
sub
sbb
js
shll
and
mulb
push
lock
test
daa
daa
clc
fdiv
cmp
mov
enter
add
data16
inc
sbb
bound
adc
ds
sbb
fwait
mov
in
ret
mov
movsb
or
cmp
xchg
xchg
add
cmp
add
xchg
xchg
enter
cs
aam
or
inc
pop
sub
mov
aam
rcr
pusha
movsb
inc
sahf
add
loopne
add
fisttpll
pop
leave
hlt
xorl
imul
in
in
xchg
lock
and
mov
test
popa
adc
pop
or
xor
loope
scas
dec
cld
les
sbb
adc
jbe
push
and
test
je
jne
lcall
push
or
push
cwtl
inc
pop
loop
jg
jl
arpl
les
and
mov
mov
stos
inc
adc
mov
adc
js
mov
add
push
adc
pop
sbb
dec
sbb
push
xor
and
and
lea
cli
adc
test
pop
movsb
cmc
imul
sbb
dec
sbb
dec
fiaddl
inc
inc
add
inc
adc
jo
lea
lahf
fidivs
imul
sub
adc
xchg
xadd
xchg
jns
nop
lret
outsb
adc
pop
movsb
imul
pop
push
fldt
hlt
sbb
shrb
fwait
in
xchg
sahf
mov
cmpsl
test
lods
scas
or
or
mov
gs
push
outsl
lock
pop
jb
and
mov
dec
stos
imul
fcmovb
mov
insb
andl
adc
pop
cmp
mov
test
fsub
movsb
jge
dec
add
dec
add
insb
sbb
lahf
adc
ja
mov
sti
dec
jb
shll
dec
nop
dec
scas
loopne
or
pusha
das
inc
repz
push
rorb
pusha
ljmp
ljmp
xor
sub
and
dec
fstps
add
add
lods
inc
or
in
test
or
add
and
nop
hlt
cmp
sub
cld
mov
or
mov
xchg
test
or
subl
inc
adc
shll
sbb
cmp
jp
jle
pop
loop
inc
cmp
sub
mov
jo
cmp
mov
fiadds
or
sbb
test
sub
incl
cmp
cmpsb
and
adc
mov
xchg
dec
fsubs
loop
pop
xchg
add
jle
es
sub
test
or
jp
arpl
ja
add
cmc
test
pop
push
inc
sub
mov
test
std
dec
cmpl
or
test
add
mov
daa
ljmp
jbe
push
cmp
xchg
je
adc
and
xor
or
loope
dec
test
jb
push
gs
or
arpl
cld
call
xor
adc
pop
and
push
xor
mov
shlb
decb
jo
cmpsb
and
lret
add
xchg
and
or
mov
push
lods
sub
gs
test
cmpsb
cmp
or
push
les
inc
jge
bswap
fldt
jmp
inc
inc
test
pop
in
cmpb
lcall
testb
mov
mov
mov
sbb
out
inc
insb
and
dec
pop
push
pop
aam
add
jae
ficompl
test
jmp
jge
pop
subl
lea
xor
nop
dec
es
mov
dec
push
sub
bound
pop
cmc
cltd
into
sub
mov
lods
mov
out
xchg
mov
cmp
push
push
das
jns
push
push
add
pop
stos
ficoms
and
scas
fwait
jle
push
insb
sbb
shll
das
inc
sarb
jno
in
ljmp
sub
adc
sub
push
dec
pop
outsb
sbb
imull
lock
pusha
sbb
mov
inc
push
jl
pop
push
jo
je
cmp
jbe
lds
mov
xchg
dec
xorl
ret
out
push
jnp
enter
push
push
jp
sbb
jbe
cmp
insl
xor
and
iret
test
mov
xchg
iret
mov
jnp
test
repz
adc
nop
out
sbbl
pop
enter
cmp
inc
std
test
jbe
mov
xchg
outsl
xor
dec
push
mulb
push
jbe
adc
dec
or
sbbl
mov
cmp
cmp
out
push
add
xchg
iret
das
adc
push
push
mov
sub
cmp
push
cmp
scas
add
fs
cmp
lcall
push
sbb
mov
int
ja
push
inc
cs
lahf
cli
jmp
and
ja
pop
mov
xchg
push
push
mov
mov
push
es
push
fwait
mov
pop
repz
pop
mov
add
sbb
outsb
push
jae
push
rorb
xchg
mov
jmp
and
mov
push
lods
nop
pop
cmp
xor
mov
add
inc
dec
dec
and
divl
mov
int3
xor
stos
add
mov
mov
pop
xchg
sbb
dec
add
inc
je
lea
sub
xchg
mov
scas
xchg
std
pop
or
int3
adc
cmp
sti
insb
jne
bound
and
ja
inc
xor
push
fdivs
pop
cmp
lods
push
or
mov
pushf
inc
jl
or
cmp
inc
add
and
adc
testb
addr16
or
sbb
or
adc
cmp
subl
add
test
sar
cmp
xor
sarl
sarb
lret
jbe
sub
sub
mov
adc
mov
push
pop
fsubrl
add
xlat
push
mov
fdiv
jo
andl
mov
cmp
jb
std
mov
pop
adc
ret
sbb
dec
sub
enter
sbb
and
mov
es
ret
mov
shlb
dec
ds
out
insb
push
arpl
pop
jecxz,pn
popa
dec
push
inc
cmp
lea
xchg
mov
push
add
mov
out
push
push
pop
sbbb
in
xor
or
mov
add
lock
cmpsb
cmp
push
add
xor
or
sbb
push
pop
jno
or
pusha
xor
cld
xchg
dec
sub
pop
hlt
add
test
cwtl
add
aaa
popf
jg
add
mov
js
out
dec
jbe
jl
push
xchg
mov
add
add
movsl
xor
and
orl
mov
add
mov
scas
inc
jl
enter
jno
inc
xchg
and
adc
or
bound
cmovbe
adc
xor
inc
adc
popf
push
push
mov
pop
cmp
inc
adc
ds
je
cmp
or
inc
xor
movb
push
les
dec
mov
and
sub
enter
stos
cmp
dec
adc
jno
stos
pop
scas
sub
lcall
mov
inc
ss
cmp
sbb
leave
fmuls
mov
stos
stc
ja
and
jne
fmul
jb
rorl
sbb
mov
xor
dec
mov
ror
mov
inc
push
mov
adcb
or
lret
add
push
jmp
idivl
mov
push
stos
dec
cmp
add
in
test
add
divl
lock
out
orb
lea
jno
add
mov
or
cmpsl
mov
pop
add
add
cmp
pop
cmp
and
cmpsl
push
or
lret
repnz
sarb
pop
and
mov
push
add
or
or
arpl
in
add
aam
loop
or
test
mov
cmc
sbb
lret
out
js
sbb
shll
xor
add
pop
push
xor
add
jb
sarl
mov
push
push
pextrw
mov
mov
pop
or
call
jo
push
dec
inc
add
mov
out
xor
sbb
pop
cmp
jne
jbe
add
sbb
fmuls
rcrl
les
int
shll
popa
out
mov
sbb
add
mov
or
call
clc
adc
mov
subb
jp
add
pop
jp
mov
sbb
shlb
jbe
push
sbb
add
lret
cmpsb
insb
sub
xlat
test
and
loope
fisttpl
xor
inc
das
push
ljmp
and
mov
push
orl
movsl
push
mov
mov
and
pusha
sbb
adc
and
jne
xor
adc
adc
mov
pop
xor
mov
or
adc
and
xchg
je
or
imul
xor
ss
lea
aad
push
cwtl
popf
repnz
aas
push
jecxz
adcl
cmp
lcall
cmp
add
and
add
fldl
xchg
test
jmp
rcrb
sub
shlb
push
gs
push
or
add
dec
jmp
sub
inc
and
jle
ljmp
jae
mov
mov
push
mov
pop
popa
mov
or
icebp
push
outsl
jge
mov
and
pop
mov
fs
sbb
sbb
dec
js
adc
movsl
outsl
jmp
push
adc
fistl
xor
and
dec
ret
pusha
arpl
or
adc
add
dec
or
pop
nop
cmp
mov
pop
lahf
mov
stos
inc
movb
mov
lahf
push
pushf
jmp
lahf
setnp
fstps
testb
inc
or
mov
je
push
cmp
xor
and
push
and
roll
add
push
les
mov
pop
inc
add
lcall
push
xor
mov
inc
pop
pop
jb
mov
and
xchg
pop
or
mov
stos
outsb
pop
pop
inc
adc
and
sbb
jge
loope
orl
mov
cmc
int3
es
sub
shlb
call
dec
cmp
ss
sub
jne
movsl
mov
pop
movsl
adc
es
std
test
inc
scas
push
dec
lea
insb
add
add
repz
into
aad
roll
mov
ror
add
movsb
sub
stos
add
push
or
ja
sbb
or
loope
sbb
mov
mov
rolb
xor
or
notl
xor
sti
mov
and
frstor
or
sbb
jmp
aaa
lret
mov
clc
hlt
leave
stos
aam
cmp
jmp
test
bound
loope
push
test
or
andl
test
call
mov
adc
jl
lcall
lock
sub
push
add
pop
pop
in
lock
mov
sbb
dec
leave
ret
jnp
xor
mov
sbb
xchg
orb
or
lret
rolb
adcb
xor
inc
cmpsl
mov
inc
push
es
mov
adc
out
or
cmp
cmp
push
xchg
and
inc
and
or
cmp
sub
pop
push
icebp
pop
cwtl
rorb
data16
test
shlb
out
dec
ret
int
push
insb
rolb
push
fst
lea
add
adcb
inc
aam
and
push
fst
mov
int3
mov
xor
ds
push
leave
nop
aam
dec
loopne
dec
and
ret
cmp
jno
push
dec
dec
mov
sub
pop
les
push
leave
pop
pop
mov
lods
in
fidivl
lret
loopne
ret
xchg
iret
adc
mov
push
icebp
pop
lods
fidivrl
or
popa
push
test
pop
stc
lock
push
popa
add
adc
std
xchg
ss
aaa
cwtl
imul
push
add
inc
mov
sbb
mov
dec
mov
add
or
push
aas
push
cmp
pushf
dec
mov
nop
xchg
jecxz
xorb
sbb
and
adc
cwtl
fs
daa
or
or
or
add
cmp
ret
rcr
push
je
add
sbb
push
orl
adc
push
adc
mov
pop
adc
sub
or
jnp
adc
lahf
mov
stos
push
test
jg
mov
push
pop
cmp
je
mov
push
mov
add
and
xor
add
or
dec
add
outsl
or
sbb
popf
inc
jl
jmp
imul
enter
bound
xchg
push
fisttpl
inc
mov
out
inc
arpl
je
dec
aas
or
out
mov
lods
into
movsl
pop
cmp
orl
rclb
sbb
push
or
xor
mov
adc
movsl
pop
icebp
inc
dec
lea
add
cld
jmp
cmpl
and
push
inc
stos
inc
repz
in
and
push
jle
mov
dec
sbb
xchg
add
fildll
mov
jmp
data16
xlat
cmpsb
sbb
mov
subl
jbe
mov
jge
inc
mov
add
fs
lock
lods
add
jl
js
js
push
mov
rep
cld
mov
pop
bound
pop
push
xchg
test
ficoms
or
dec
mov
or
clc
push
xchg
leave
or
ss
lcall
push
sub
jg
lret
pop
ds
out
mov
hlt
pop
add
dec
addl
push
push
adc
sbb
jo
mov
pop
mov
xchg
or
xlat
mov
cmpsl
pop
add
les
ds
sbb
faddl
stos
dec
repnz
inc
mov
xor
sbb
mov
test
jmp
cltd
rclb
xchg
subl
lret
xchg
shrl
sub
call
inc
iret
mov
xor
adc
and
xchg
push
add
push
xor
lock
sbb
lea
inc
xchg
sub
adc
mov
jl
inc
add
outsl
mov
ss
jbe
add
fsubrp
or
call
mov
add
xchg
or
sub
je
push
pop
mov
cmp
repnz
movsb
sbb
in
and
adc
mov
cld
push
sbbl
out
xchg
movsb
pop
and
add
cmpsl
add
mov
mov
or
xor
add
ret
movsl
lds
push
enter
push
or
in
shll
sub
push
mov
lods
dec
xor
rorb
add
js
mov
sbbl
clc
lea
or
rcl
jns
add
dec
popl
push
cmp
mov
adc
std
add
push
adc
xor
testb
mov
sahf
add
push
lret
or
fldcw
nop
cs
loop
outsb
jb
je
mov
add
movsb
cmp
movsl
push
lret
jns
iret
mov
dec
dec
dec
clc
jne
mov
push
test
sub
xchg
gs
js
fsubrs
lea
cmp
stos
insb
ret
mov
dec
enter
inc
xchg
sbb
xchg
mov
hlt
xchg
jb
sub
cmp
or
pop
pop
loop
push
pusha
inc
add
cmp
call
xor
sahf
in
inc
sbb
loop
scas
and
hlt
jne
push
js
add
loopne
fldcw
push
shll
cld
test
mov
push
je
repz
push
sbb
add
or
bound
xor
lock
or
pushl
push
cltd
sbb
mov
inc
mov
xchg
jge
dec
js
lock
mov
or
jge
cs
xor
inc
movl
cmp
push
mov
xchg
scas
and
repnz
add
sub
loopne
dec
call
fistps
fldcw
mov
and
adc
in
push
xchg
inc
adc
inc
push
loope
mov
dec
inc
and
add
lret
ss
cmpsl
insl
shll
fcoml
into
xor
and
sbb
add
lret
jne
and
popf
add
cmpsl
std
mov
jne
or
jge
mov
push
push
icebp
or
dec
into
sub
mov
push
sarb
xchg
popf
lods
fcomps
call
inc
cmp
sub
pop
in
add
inc
in
fmuls
das
jl
das
pop
mov
enter
or
mov
ret
mov
lea
aam
jecxz
dec
adc
jne
int3
adc
and
add
push
and
push
ficomps
hlt
xchg
mov
dec
adc
adc
fistpll
mov
leave
sbb
dec
cmp
les
cmp
push
jg
rcrb
loopne
lods
cmp
mov
fidivs
sbb
cltd
gs
jne
popf
xchg
imul
nop
dec
cmp
lods
scas
icebp
fwait
xchg
in
incb
int3
xchg
cmp
je
icebp
mov
pop
or
imul
jecxz
aam
cmp
jb
xchg
xchg
dec
and
sub
and
mov
dec
fildl
sarl
dec
sub
sbb
cltd
test
sbb
sbb
mov
ss
sbb
outsb
push
or
movl
cmp
in
add
dec
cmp
jmp
ds
or
and
inc
mov
add
ret
cmp
cmp
sub
push
sbb
bound
jecxz
or
jo
adc
lods
push
aad
dec
mov
and
sahf
movl
icebp
xor
inc
mov
jo
push
push
insb
add
leave
les
dec
cmp
cli
xor
or
test
sarl
cmpb
add
push
test
adc
mov
jge
add
jmp
adc
push
sbb
mov
pop
ret
sbb
mov
lds
inc
adc
popa
loopne
xlat
push
mov
sub
add
jne
imul
mov
fdivs
or
push
jo
aam
push
lock
je
and
mov
in
inc
addb
jp
into
outsl
sbb
xchg
xacquire
roll
ljmp
addr16
and
addr16
addr16
leave
inc
push
push
dec
cmp
mov
cmp
movb
aas
aam
and
rcrb
adc
cmpb
dec
sbb
dec
into
jb
push
jae
adc
clc
je
lret
and
pop
mov
sbb
cs
sub
out
mov
jns
inc
flds
out
mov
dec
mov
inc
cmp
fadds
mov
and
out
push
repnz
and
nop
mov
fstl
test
lea
sahf
mov
rolb
mov
or
sbb
es
js
rol
lds
cmp
jb
or
outsl
adc
loopne
push
pop
sub
pop
add
mov
inc
push
or
int3
cmp
outsl
sarl
or
mov
xchg
push
pop
jmp
push
cmp
add
pushf
loopne
push
repnz
scas
mov
mov
pop
stc
mov
mov
sbb
adc
jge
mov
xchg
in
adc
mov
dec
adc
lret
or
cmp
lcall
out
in
jl
jp
mov
nop
test
bound
movsb
std
adc
call
mov
dec
mov
sbb
insl
inc
aad
sbb
bound
sub
xchg
popl
out
jle
jae
mov
clc
add
clc
jno
sub
add
pop
mov
inc
xor
add
icebp
fimuls
push
sbb
div
jne
sbb
pushf
xchg
inc
sahf
or
loope
out
sbbl
sti
sbb
and
jo
inc
mov
inc
adc
mov
mov
enter
vpsubusw
popf
rol
test
jmp
dec
outsl
and
les
aam
test
jne
and
jl
add
xchg
jg
xorps
in
xchg
and
call
add
in
sbb
adc
xchg
mov
and
xchg
and
dec
aas
sub
rorl
jmp
das
sub
mov
mov
pushf
fucom
bound
push
insb
loope
and
adc
xor
test
popf
test
xor
in
push
clc
mov
adc
test
ret
movsl
adc
xor
mov
pop
pop
clc
in
inc
pop
cmp
pop
outsb
sbb
imul
xchg
mov
roll
lret
out
xor
jl
lea
sbb
lds
jmp
cmp
add
add
movsl
or
inc
cmp
dec
jnp
mov
mov
sbb
aas
sub
pop
dec
dec
cmp
xchg
mov
lea
arpl
cmp
and
mov
or
adc
xchg
cltd
add
movsb
cmp
rcrb
pop
imul
ret
aaa
addr16
stos
mov
pusha
inc
ror
mov
jmp
mov
jns
scas
xchg
out
jae
sub
pop
mov
int
or
enter
cld
adc
ljmp
sbb
and
dec
push
popa
mov
mov
add
lds
fwait
addr16
mov
incb
mov
xor
orb
int3
ret
jbe
push
push
fnstsw
decl
jae
andb
ljmp
stos
mov
jo
lea
adc
imul
enter
adc
in
pop
ficompl
jb
dec
je
sub
adc
cld
pop
xchg
mov
inc
addl
lret
fildl
push
sub
xor
pop
add
add
scas
push
jne
xor
cmp
aaa
add
xlat
push
sbbl
mov
xchg
lret
sub
mov
sbb
mov
fbld
or
sub
xor
inc
aas
inc
cmpl
adc
jecxz
add
add
je
lea
push
push
ss
adc
adcl
add
push
lret
or
js
jp
das
sbb
and
int
add
add
lods
lcall
xor
add
lock
cmp
jle
inc
sarb
pusha
or
push
mov
mov
or
jl
add
ret
push
jae
rorb
push
sub
sbb
sbb
decb
push
sub
mov
push
jns
sarl
or
mov
or
jmp
pushf
data16
fimuls
out
das
pop
insb
lock
push
cmp
jae
inc
jmp
push
ficomps
out
lcall
mov
scas
sub
adc
and
ret
shrl
add
movb
addb
ret
cmpsb
addb
fsub
sub
clc
subl
push
push
add
mov
sbb
adc
imul
sub
push
ljmp
test
jne
movsb
adc
add
inc
mov
lods
in
inc
gs
or
sbb
push
incl
add
lds
inc
enter
push
les
gs
sbb
or
mov
cmp
jb
inc
or
jae
mov
and
cmp
pop
test
fistl
xchg
add
mov
or
lock
inc
rcr
jo
add
jle
or
push
cltd
add
insl
xor
clc
scas
xchg
lock
bnd
clc
cmp
ja
cmpsb
aad
roll
mov
les
fnsave
lcall
xchg
ficompl
cvtps2pi
mov
lret
xlat
push
shlb
add
push
push
loopne
xchg
push
adc
unpcklps
lret
psllw
sub
push
inc
or
add
push
adc
and
std
xchg
stos
mov
mov
jmp
mov
adc
shlb
lea
mov
cmp
or
xor
push
enter
jge
jmp
pusha
jno
cmp
mov
pop
add
dec
ss
ficoml
pop
or
mov
sbb
xor
adc
jmp
jmp
lods
fstpl
cld
push
imul
adc
push
sub
lea
ficompl
mov
outsb
fs
push
test
cmp
mov
test
mov
test
sub
pop
or
out
test
ja
stos
jmp
push
adc
mov
mov
cmp
mov
xchg
jmp
or
adcb
mull
sub
mov
dec
dec
add
xor
pop
pop
repz
mov
subb
jne
or
push
and
ja
mull
gs
and
fstps
push
ja
mov
leave
inc
sub
icebp
mov
inc
mov
sub
leave
pop
xorb
inc
jno
lods
inc
addb
add
fwait
xlat
sti
adc
or
jl
xor
sbb
xor
lock
add
jbe
cmp
sub
lock
sbb
sbb
mov
push
and
test
dec
sub
fisubrs
fs
ss
adc
fwait
add
rcrb
or
lcall
sub
xor
push
pop
sbb
nop
add
add
push
adc
cmpsl
cld
pusha
adc
xor
sbb
pusha
dec
test
or
insb
loopne
sub
dec
pop
or
inc
test
cmp
inc
inc
dec
sbb
leave
jnp
cmp
pop
nop
adc
sbbl
cmp
ret
dec
and
mov
dec
xor
outsb
mov
cltd
scas
sarb
ret
xchg
sub
xor
or
subl
fldenv
and
add
xchg
adc
jbe
mov
lock
adc
xor
in
push
mov
das
xchg
call
out
or
cmp
test
leave
cmovnp
dec
push
dec
cmp
scas
fsts
shl
add
or
pop
dec
mov
adc
into
test
in
push
fsubrs
cmp
cmc
mov
arpl
mov
cmc
loope
mov
ja
int3
mov
fstps
push
mov
push
cld
sbb
mov
pop
fstpt
mov
enter
pop
sbb
pop
sbb
loopne
insb
lret
mov
xor
fdivp
sbbl
mov
mov
inc
shrb
mov
addb
popa
push
push
cvtpi2ps
loopne
or
loop
and
mov
idivl
pop
pop
mov
dec
sbb
jl
mov
jo
fdivr
mov
add
pop
adcb
sub
pop
push
inc
and
push
xorb
lret
shll
test
stos
cmp
push
mov
scas
stos
sbb
cmpsb
push
dec
xchg
pop
jne
stos
xor
dec
sbb
ror
lea
sub
fs
add
adc
pop
xor
mov
dec
mov
cmc
stc
or
sarl
push
pop
stc
add
jmp
xor
jns
mov
aaa
rolb
add
mov
mov
loop
jbe
and
out
or
rorb
jle
mov
iret
push
lcall
or
lret
pop
adc
xor
mov
cmpsl
inc
shr
sahf
or
iret
movsl
bnd
call
pop
fiaddl
mov
and
sbb
ret
jns
mov
sarl
adc
stc
add
dec
cld
out
mov
mov
mov
ja
push
jl
jl
inc
cmp
mov
adc
mov
cmpb
rclb
nop
sub
adc
sbb
pop
cwtl
mov
aam
xor
mov
jne
and
xchg
add
mov
pop
rcr
or
xchg
mov
jnp
enter
adc
xor
mov
add
dec
add
add
fsubrl
adcb
inc
fnstcw
jge
and
clc
cmp
lock
out
cmp
pop
push
fdivr
sti
je
xor
and
lahf
xor
inc
cmp
jl
pop
push
shlb
mov
push
emms
or
shlb
push
xor
icebp
pop
push
sub
mov
loopne
lock
adc
leave
xor
int
js
adc
xchg
add
insb
sbb
jle
dec
icebp
fiadds
xor
pop
ret
push
das
bound
sub
push
jl
sbb
add
rcl
pop
sbb
adc
jae
aam
adc
inc
in
aaa
imulb
sbb
mov
hlt
and
stc
dec
fs
out
pushf
pop
cs
xorb
pop
add
push
cmp
sbb
push
cmp
cmp
push
lea
ss
sub
stos
sub
ret
mov
or
pushf
mov
inc
or
cmp
pop
and
xor
mov
lock
dec
xchg
push
add
or
orl
shl
and
add
mov
enter
shl
add
mov
xadd
movsb
lret
mov
sbb
or
movsl
movsb
mov
cmpb
jge
adc
jge
xchg
inc
mov
rolb
jg
cwtl
xchg
loopne
lea
add
insl
pop
inc
add
pop
add
fisubrs
dec
nop
je
cmp
repz
add
pop
or
movsl
movsb
ss
pop
sub
or
cmpb
sub
lds
mov
dec
lock
nop
push
rorb
loope
inc
sub
sbb
mov
ds
mov
or
orb
sbb
xchg
fsubr
add
cli
js
cmp
test
sbb
cmp
mov
test
or
pop
and
adc
data16
xor
cmp
or
pushf
cmp
stos
into
inc
test
xchg
ss
imul
loopne
sub
xchg
rcl
andb
ljmp
mov
addr16
add
mov
or
mov
test
or
add
mov
repz
in
pop
lock
loopne
sar
loope
dec
and
jb
and
push
adc
dec
shr
in
jns
and
xchg
test
mov
rol
ficoms
shrb
xor
rcll
jbe
mov
add
cmp
sbb
jl
add
xchg
cmp
push
in
cmpsb
inc
out
or
mov
mov
pop
scas
sbb
add
xor
int
cmp
ficoms
leave
js
rorl
add
sub
pop
lea
fildll
adc
jg
jo
push
fistpll
lods
fidivs
ss
jmp
push
js
jbe
mov
mov
das
sub
add
test
int
jae
inc
addb
mov
jp
js
add
mov
fs
mov
jge
pop
mov
sub
dec
push
cmp
in
sarl
add
ret
loope
xchg
sahf
and
jecxz
gs
jecxz
mov
pusha
cmp
jne
and
popa
movsb
mov
jmp
sbb
mov
popf
test
mov
jae
lcall
testb
je
insb
inc
sbb
dec
inc
sub
xor
jle
inc
sbb
inc
push
pushw
mov
sbb
mull
outsb
in
push
pop
pop
pop
ret
mov
or
pop
jmp
rorb
mov
andb
mov
in
dec
arpl
mov
xor
xor
sub
or
mov
pop
push
fnsave
jecxz
push
sub
xor
mov
push
xchg
and
push
add
dec
mov
stos
mov
mov
mov
inc
sahf
inc
pop
pop
or
out
outsb
in
or
aad
sub
ja
add
sub
int
lea
mov
or
jno
stos
jp
popf
inc
fdivrp
mov
adc
add
or
inc
leave
inc
or
ret
xchg
jecxz
or
push
and
dec
push
loopne
cmovl
and
mov
stos
adc
dec
fdivrl
adc
push
adc
mov
adc
addr16
into
push
push
xor
aad
sbbb
outsl
test
enter
xor
jbe
push
sbb
jnp
je
pop
push
mov
mov
cs
push
xor
mov
pop
mov
cmp
sbb
mov
mov
mov
es
push
push
lret
or
dec
movsl
mov
dec
mov
push
das
xchg
mov
hlt
mov
pop
icebp
js
xchg
outsb
cmpl
test
add
pop
push
mov
jo
pop
pop
mov
pop
push
cmpsl
pop
mov
rcll
push
adc
adc
or
xor
xchg
pop
adcl
loope
pop
adc
rorl
push
and
xor
fcomps
in
add
pusha
popa
mov
xchg
add
notl
cmpl
jne
mov
cmpsl
dec
scas
push
sbb
pop
inc
inc
roll
sbb
add
sub
pop
mov
imul
call
aas
xor
bound
or
out
cmp
jle
push
and
int3
inc
addr16
fmuls
imul
in
addb
add
test
stos
sbb
mov
jne
push
add
pop
or
in
sub
or
scas
sbb
push
inc
pop
cmp
pop
jmp
jl
or
pop
add
mov
ret
push
arpl
inc
lea
mov
or
pop
data16
xchg
push
insb
xor
dec
mov
mov
lock
jo
dec
inc
pushf
jp
jmp
add
fs
add
cmp
push
sub
inc
jo
inc
pop
repz
addl
clc
mov
cmp
leave
loopne
shl
jne
loop
stos
hlt
mov
jne
sti
dec
icebp
pop
push
sbb
mov
lahf
stos
lret
jne
cmp
out
mov
jmp
push
add
xchg
mov
add
pop
jno
in
jo
sub
std
and
es
je
cmp
je
push
jp
mov
fdivr
add
cli
testb
je
cmp
mov
inc
shlb
push
cmp
pop
ret
sub
imul
adc
add
imull
add
mov
sub
fnstenv
push
adc
push
mov
jge
push
js
loop
repz
adc
pop
nop
clc
dec
das
inc
adc
adc
negl
subl
add
rolb
shlb
ljmp
icebp
jmp
je
sti
cmp
add
or
mov
dec
jg
push
cmp
xchg
pop
jne
jg
add
and
adc
and
sub
mov
insl
loopne
add
imul
cmp
addl
inc
cmp
add
dec
hlt
push
push
mov
imul
sbb
or
inc
mov
orb
jo
xchg
jno
aad
sbb
imul
mull
outsb
add
push
push
sbb
aad
in
pop
andb
push
dec
rcll
xlat
pop
mov
and
scas
rcrl
std
add
data16
int
push
push
rorl
sbb
mov
cmp
sbb
or
sbb
roll
add
loopne
jb
cmp
leave
jmp
lea
push
add
out
sbb
jne
adc
imul
inc
mov
leave
lret
add
sbb
data16
sbb
jl
fcmovnu
adc
stc
loope
and
xor
mov
jmp
push
dec
pop
pop
xor
xor
push
sarl
push
pusha
arpl
int3
sub
cmp
lea
jne
push
sub
and
push
push
adc
sub
fucomi
or
cmovb
les
bound
adc
xor
and
mov
xchg
sbb
xor
cmp
sbb
out
and
xor
bndldx
sbb
fcmovnbe
sub
fsubp
mov
dec
loop
add
loopne
xchg
sbb
inc
loopne
notl
and
sub
jo
push
or
sbbb
outsb
pop
push
mov
pop
bound
and
mov
push
mov
xor
jge
or
or
movb
jo
lea
and
xlat
pop
lock
adc
lcall
sahf
stos
or
jae
pop
mov
jne
fidivs
or
out
rolb
fcoml
sub
repnz
fsubs
icebp
add
mov
xor
push
xchg
orb
or
push
xchg
sbb
mov
or
mov
adc
mov
pop
fisubl
mov
sbb
orb
popa
cmp
pusha
fnstenv
sub
ss
push
adc
mov
adc
adc
in
ret
and
add
clc
mov
clc
fstl
cmp
insl
loopne
ljmp
fadd
jns
mov
cmpsb
xor
push
sub
and
repnz
xor
push
push
clc
fisttpl
sub
mov
push
test
sbb
push
pop
and
push
sbb
scas
jl
jl
les
adc
je
pop
jp
inc
pop
or
mov
or
push
nop
and
or
ss
loopne
xchg
inc
mov
cmp
addb
sub
je
testb
insb
dec
jecxz
js
jo
adc
sub
pop
aam
into
ret
mov
enter
xor
rcrb
mov
push
xchg
jle
sbb
adc
lahf
ljmp
cltd
sub
loopne
cltd
pop
ficompl
xchg
shr
and
or
test
mov
add
lock
add
pop
ljmp
out
popa
clc
pop
push
cs
pop
int
xchg
sbb
out
push
aaa
loope
inc
cmp
mov
je
je
inc
adc
inc
hlt
xorb
loopne
testl
fisttps
inc
inc
add
ja
je
into
sarb
dec
rcll
mov
adc
psraw
dec
pop
repnz
adc
inc
je
pop
pusha
loop
sar
xor
xor
add
add
sbb
leave
xor
cltd
jno
pushf
xlat
inc
xlat
and
xchg
inc
inc
loop
add
pop
fs
js
cmc
sbb
ret
sub
jb
cmp
sub
cmp
loopne
sbb
daa
out
jecxz
lock
rorl
adc
ret
adc
movsl
dec
jnp
bound
inc
aam
adc
or
mov
pop
inc
adc
js
out
jb
add
pop
pushf
inc
xlat
jmp
in
cmp
rcll
mov
pop
xchg
mov
jae
dec
cld
out
sub
bound
add
add
mov
rolb
mov
aaa
aas
sti
and
push
ja
sbb
or
jnp
inc
dec
movsb
jbe
mov
cmp
sarl
jno
push
inc
inc
inc
or
mov
jb
cmp
sub
lahf
mov
shll
lock
aad
popa
and
add
daa
pop
test
adc
cmp
imul
test
mov
je
lods
mov
adc
bound
push
mov
pop
jle
jle
add
and
test
repnz
add
ret
mov
insb
push
lret
jmp
dec
loopne
dec
xor
adc
sub
lods
xor
and
sbb
in
jne
je
jmp
or
push
jmp
sub
test
mov
out
lcall
bound
sbb
loope
add
add
cmp
cli
jg
jmp
inc
das
dec
icebp
aas
cwtl
mov
mov
mov
xor
sbb
and
jnp
add
fisubs
cmp
mov
xor
sub
aaa
and
sub
pushf
es
loope
add
push
mov
dec
inc
push
jecxz
js
pop
and
cmp
sbb
mov
pop
push
and
mov
lahf
xor
loope
and
stos
adc
mov
or
gs
shll
test
or
mov
dec
les
and
sbb
sbb
add
jnp
jmp
sub
sbb
incl
ss
stos
inc
mov
in
or
pushf
push
jge
xor
jne
out
push
push
sub
adc
or
cmpsl
and
ror
call
jle
shr
data16
cmp
push
sbb
cmp
add
arpl
cmp
inc
sbb
data16
xor
popf
out
inc
jbe
ja
dec
je
sub
clc
adc
fwait
adc
inc
ljmp
loope
dec
sbb
adc
shll
aaa
adc
push
ljmp
movl
dec
mov
adc
call
scas
shrb
jle
rcrb
inc
js
js,pt
and
dec
arpl
add
sbb
cmp
mov
sbb
jg
int3
add
inc
ret
adc
or
scas
pop
adc
and
add
or
pop
mov
andl
test
loopne
clc
jg
dec
or
in
outsb
add
movd
movaps
aaa
out
push
enter
shlb
jle
xor
stos
dec
mov
lret
je
mov
or
and
lret
or
jg
fistps
rcl
xchg
fstl
jnp
mov
in
add
int3
add
add
adc
push
add
adc
mov
mov
repnz
jnp
int
ret
mov
mov
ficompl
addps
int
add
jnp
fcmovb
sbb
sbb
sub
jecxz
inc
mov
sbb
in
fs
clc
ja
pop
cmp
dec
mov
cwtl
mov
add
adc
test
out
int
lea
js
push
mov
mov
dec
adc
xchg
adc
pop
lock
sub
mov
les
sub
ljmp
dec
and
test
js
mov
loope
xchg
sahf
fisttpl
mov
jo
icebp
arpl
inc
cwtl
ja
arpl
lcall
out
shll
popf
adc
mov
adc
push
add
xadd
cld
dec
add
daa
mov
int3
stos
aam
in
je
in
cmp
dec
sbb
idivl
mov
mov
shrb
push
sbb
mov
mov
cs
pop
mov
pop
mov
mov
inc
inc
fdivrl
mov
push
xchg
lea
addb
mov
mov
cmp
jne
add
push
aas
mov
cltd
es
mov
fisttps
pop
cmp
xor
pop
sbb
fwait
add
sub
and
push
pushf
bound
inc
loop
push
cmp
adc
in
mov
and
mov
push
xchg
mov
pop
sbb
or
insb
or
popf
popf
pop
push
inc
sbb
push
hlt
jp
test
in
lock
out
imul
fcomi
or
arpl
sti
push
mov
popa
xchg
popa
ss
jmp
push
rcrb
cmp
popa
adcb
and
pop
sbb
inc
push
mov
mov
push
decl
adc
int
inc
cmp
jne
inc
cmp
push
xor
pop
adcl
in
mov
push
es
add
inc
inc
mov
xor
sbb
adc
sbb
and
push
adc
test
pusha
imul
pop
inc
inc
cmp
cmp
lret
xchg
sahf
sbb
in
xor
push
iret
xchg
arpl
dec
adc
and
mov
push
lret
imul
adc
or
or
or
add
mov
adcl
lods
or
adc
iret
and
sbb
imul
xor
pop
or
mov
repz
in
icebp
and
add
sarl
sub
fnstsw
ret
mov
shl
shlb
dec
mov
sub
or
inc
pop
cmp
push
jo
sbb
lcall
inc
inc
cmp
aam
inc
mov
cwtl
sbb
sahf
je
std
jg
jmp
jnp
and
push
sbb
enter
or
loope
push
mov
adc
lahf
das
or
test
sbb
test
shlb
inc
or
dec
sub
cmp
imull
dec
loopne
jne
orl
mov
dec
push
cwtl
addr16
daa
xchg
push
test
mov
aad
jl
rolb
add
ret
xor
lock
xchg
fiaddl
cld
inc
adcb
into
lea
stos
mov
js
xchg
push
loopne
pop
push
ret
pop
rclb
pop
js
sbb
jo
or
leave
add
cmc
dec
rorl
xor
and
data16
add
jne
cld
or
loop
rclb
xchg
sbb
xchg
jle
scas
or
movsl
push
mov
adc
dec
add
or
pop
jb
jmp
mov
sub
pop
scas
testl
xchg
dec
pop
bound
inc
or
aaa
inc
insl
popa
insb
xor
inc
lods
mov
mov
lret
jbe
push
xor
pop
div
or
pop
test
jae
or
les
inc
imul
inc
jb
push
jmp
or
inc
xor
cmp
jae
or
adc
sub
fs
jae
or
push
rcll
sbb
shrb
sub
add
dec
sub
pop
pop
xor
sbb
xor
lds
andb
adc
xchg
popf
mov
sbb
cmp
rclb
repz
decl
int3
xor
sti
and
ret
adc
fucomip
xor
lock
and
int3
pusha
jb
inc
ret
lds
fstps
push
inc
inc
rcll
jb
and
sbb
cmp
push
repz
jecxz
frstor
clc
cwtl
ljmp
pop
push
inc
push
mov
inc
xchg
mov
mov
cmp
pop
aad
jo
scas
jo
loope
inc
add
add
fwait
and
mov
push
sbb
cmp
sbb
sahf
or
sbb
jecxz
mov
mov
lods
or
cmp
pop
and
loop
sbb
les
jo
xor
mov
sub
cmpsb
mov
divl
xor
dec
ret
dec
pushl
push
jp
lds
test
mov
cmp
je
cmpsb
fcompl
test
adc
lahf
push
add
pop
push
lods
dec
cmp
dec
negl
daa
sub
mov
cmc
adc
fmuls
xlat
mov
mov
sti
out
testb
jae
nop
xchg
sub
sbb
pop
cmp
pop
fnstcw
sbb
daa
jo
or
pop
dec
arpl
subb
jle
int3
in
push
std
push
or
fistpl
push
rcr
mov
push
je
hlt
mov
inc
es
lods
mov
add
sbb
adc
lods
orl
xchg
xchg
mov
or
mov
dec
jmp
pop
sub
data16
je
inc
jnp
or
scas
cli
pushf
push
fmul
adc
push
jmp
inc
test
mov
scas
aas
push
cmp
sub
jno
lock
cld
inc
push
incb
rorb
ret
jmp
inc
pop
adc
push
or
adc
or
adc
pop
jae
or
and
xchg
and
inc
pop
mov
in
inc
movsl
clc
lcall
mov
or
inc
ja
fadds
js
sub
add
push
add
and
push
imul
push
imul
cld
pop
add
cs
dec
pop
nop
add
or
cmp
push
mov
jne
mov
sbb
je
lods
xor
jbe
js
call
push
call
cltd
ret
pop
popa
mov
imull
cltd
js
mov
cmp
and
mov
mov
xor
push
jg
mov
cltd
xchg
lret
aaa
clc
lods
or
push
or
sbb
or
mov
push
repnz
jle
push
inc
jns
or
inc
ret
enter
xor
mov
fsubl
jo
and
mov
jne
pop
imull
or
xor
push
or
pusha
notb
movsb
cmp
daa
push
hlt
bound
inc
push
sbb
adc
pushf
or
and
icebp
bound
sbb
imul
rcrb
inc
addb
dec
sbb
scas
in
jge
pusha
mov
adc
icebp
adc
adc
pop
cwtl
add
and
cmp
je
dec
xor
sub
bound
jle
dec
inc
inc
ret
lea
rep
fistl
ss
push
pop
add
cmp
pop
dec
add
and
xor
add
adc
je
push
lcall
lcall
flds
add
in
mov
inc
push
xchg
pop
push
pop
iret
movsl
test
or
or
mov
dec
or
and
enter
or
repnz
or
repnz
in
add
or
or
fsubp
add
add
sbb
cwtl
push
push
mov
push
rsqrtps
adc
pusha
adc
sub
adc
nop
xchg
out
repnz
adc
ret
jns
cmpsb
adc
adc
adc
and
cltd
adc
sbbb
push
push
push
cs
enter
xor
push
nop
ja
sbb
lcall
sbb
call
iret
sbb
sbb
test
sbb
sahf
ja
je
pop
sbb
or
iret
jmp
jge
sbb
enter
inc
push
pop
cli
jg
cmp
jne
add
add
sub
cmp
sti
es
movl
dec
ljmp
and
andl
cmpb
add
mov
cmp
je
lcall
out
sub
rol
lea
aad
add
jnp
cmp
mov
repnz
out
xor
xchg
xor
add
call
out
popf
mov
adc
inc
jmp
sub
enter
sbb
xorl
in
enter
cltd
mov
cmpb
sahf
out
out
adc
jb
out
sbb
nop
inc
lcall
jns
push
xor
icebp
seto
pslld
out
std
repnz
repz
std
fdivs
cmpsl
cmpsb
hlt
hlt
rorl
pusha
hlt
fwait
add
push
mov
and
enter
pop
jns
cmp
idivl
cmp
add
dec
push
clc
clc
clc
cltd
jns
mov
stc
lock
and
enter
iret
sti
push
push
and
sbb
stos
cld
cld
mov
fdivr
je
cld
push
setb
sahf
and
std
xor
inc
sahf
out
sbb
adc
ret
inc
or
cmp
push
in
jl
lahf
in
cmp
stos
cmpsl
movsb
or
adc
jecxz
in
shll
mov
inc
fsubp
inc
in
scas
and
icebp
inc
mov
sbb
xchg
sti
out
out
sbb
inc
out
outsb
call
add
sub
pop
xchg
xchg
sbb
or
inc
repnz
in
add
in
cli
sbb
dec
push
out
out
out
cltd
leave
and
das
cli
adc
xchg
pop
push
cli
sbb
jmp
cltd
sbbl
imul
jb
stc
xchg
cmpsb
jb
fstpl
div
negl
cmp
pop
fwait
xor
jns
cmp
add
stc
out
clc
push
push
xor
orb
mov
outsl
cld
inc
cld
sbbl
pusha
sbb
add
cmp
and
xlat
lret
dec
call
xor
loop
repnz
in
repnz
imull
mov
mov
out
orb
bound
mov
pop
inc
idivl
inc
mov
and
sbb
dec
push
ljmp
shl
pop
mov
mov
mov
int
insb
out
out
jno
pop
lret
and
and
add
sbb
repnz
mov
pop
dec
pop
and
xchg
cmc
jae
xor
inc
pop
pop
dec
cmc
div
into
add
mov
repnz
push
mov
clc
adc
add
hlt
stc
popa
cmp
mov
lret
and
jno
hlt
pop
and
hlt
push
hlt
or
pushw
dec
scas
mov
hlt
idivl
jo
or
push
sti
lahf
or
adc
or
test
sub
xor
loope
jmp
adc
gs
scas
xrelease
mov
cmpsb
jb
repz
repz
add
pop
leave
and
push
sbb
jmp
outsb
cmc
mov
xchg
pusha
leave
mov
sub
mov
leave
and
and
add
mov
movsl
mov
icebp
icebp
js
in
rorb
in
xlat
mov
test
push
cmp
mov
sub
cmc
jb
sbb
cmc
add
mov
lock
or
popf
lock
imul
popf
dec
push
jne
push
lock
pop
xor
sbb
scas
lock
mov
ss
ja
inc
xchg
sub
out
pop
xor
rol
in
xchg
add
jne
inc
ds
add
sbb
inc
sahf
add
stos
add
loop
mov
add
push
jnp
and
push
insl
add
cmp
inc
in
adc
dec
add
sahf
and
sbb
adc
pusha
pop
add
pop
shrb
and
adc
push
and
and
xchg
sbb
pop
push
cmc
push
add
int
sarl
data16
xchg
push
mul
imul
jecxz
add
pop
mov
sahf
dec
push
jne
push
fsts
mov
out
jns
push
push
sub
push
cld
call
test
dec
rorl
iret
ds
dec
and
add
mov
mov
add
adcl
ret
pop
push
sbbl
in
test
xlat
lcall
sbb
sub
std
cmpsb
add
xchg
stc
push
add
inc
and
add
push
adc
gs
push
shl
xchg
lock
stc
clc
rclb
dec
jg
cltd
lock
cld
mov
push
add
dec
add
cmp
je
push
dec
inc
sbb
adc
insl
sbb
or
adc
inc
mov
inc
decl
fs
fucomip
sub
fsubs
mov
and
testb
repz
mov
cld
test
ret
adc
lods
xchg
repnz
add
lea
pusha
sub
push
push
leave
cmp
dec
inc
cmp
push
imul
sahf
or
popa
clc
push
scas
pop
cwtl
sub
neg
add
and
mov
mov
xor
pusha
add
sbbb
insb
add
or
jle
and
je
rep
mov
add
push
dec
ljmp
popf
les
push
clc
ss
inc
sbb
pop
mov
mov
ljmp
fidivl
adc
sub
in
inc
adc
push
adc
test
sahf
in
in
lcall
fadd
sub
add
adc
sbb
insl
ja
adc
or
mov
jb
pop
ja
add
mov
ret
sub
inc
inc
inc
inc
inc
sub
cld
andb
push
enter
xor
mov
imul
inc
push
inc
and
gs
iret
data16
and
andl
xor
fsubrs
jne
cmpsb
or
or
inc
and
pop
repnz
je
pop
roll
sub
sbb
sbb
pop
cmp
enter
push
jnp
rolb
lcall
std
adc
dec
and
inc
xlat
stos
jp
or
xchg
push
fcompl
mov
mov
bound
nop
mov
inc
dec
jge
and
add
cmp
dec
or
jl
ror
leave
or
lods
push
mov
and
jle
mov
xchg
mov
js
mov
sti
inc
add
xchg
imul
push
inc
add
mov
inc
jmp
cmp
jne
orl
fldl
adc
jne
sub
mov
push
in
dec
xchg
sar
add
adc
cmp
push
xor
dec
cld
jmp
mov
repnz
test
and
adc
jl
lods
or
adc
dec
add
add
cwtl
push
rol
mov
ud0
loopne
loopne
adc
lret
or
div
sbbb
cld
xor
sbb
fidivs
lret
sub
cmp
cs
and
cld
leave
cmp
jae
push
movsb
adc
adc
and
mov
imul
aam
test
and
add
or
inc
cld
imul
arpl
andl
jne
test
adc
push
mov
fs
jl
or
sub
es
testb
outsl
mov
push
sub
mov
pop
mov
push
js
mov
ret
mov
das
in
shlb
sbb
mov
lds
mov
cmp
pop
adcl
loope
add
xchg
pop
push
cltd
push
or
mov
std
cmp
cmp
push
sub
adc
cltd
cli
cld
pop
loopne
pop
fisttpl
sbb
cmp
jne
jnp
inc
xor
xorl
int3
push
cmp
jne
mov
push
cmp
aaa
dec
jae
jne
es
jne
decl
inc
xor
adc
or
add
push
or
lahf
out
mov
jmp
std
std
jmp
jo
xor
push
sub
test
inc
shlb
fimuls
inc
je
adc
push
jb
stos
scas
jo
sarb
orl
sbb
int
repnz
inc
repz
jmp
loope
test
add
jbe
jne
pusha
cmp
lock
in
inc
js
lea
push
lods
std
test
push
or
dec
and
push
xor
shrb
faddl
pop
or
inc
push
adc
or
push
sahf
mov
cmp
xchg
movsb
ja
dec
inc
lcall
into
xor
push
fimull
inc
nop
cltd
mov
jne
jo
sub
dec
or
cmpsl
roll
pop
adc
push
xchg
xchg
ds
mov
push
in
fistps
stc
aad
hlt
push
jmp
mov
shll
push
jl
rcrl
ss
or
loopne
inc
cmp
sbb
push
inc
push
add
nop
mov
mov
aaa
push
dec
push
lcall
sbb
and
jecxz
ja
xor
dec
push
add
roll
or
dec
testb
call
dec
cmp
jo
mov
mov
add
mov
ret
jmp
lret
sbb
lret
clc
xor
call
dec
sub
add
push
stos
add
testb
iret
push
or
xchg
push
clc
lock
sbb
dec
or
test
addl
xor
clc
rcr
jns
inc
adc
add
dec
add
push
lea
iret
aam
lret
mov
and
xor
das
lahf
push
pop
out
xor
adc
adc
roll
and
sbb
roll
cmp
fimull
pop
and
cmovs
cli
inc
mov
scas
push
pop
test
push
test
mov
or
rep
jmp
das
inc
out
mov
mov
xchg
add
enter
insb
out
call
push
push
jnp
and
dec
push
and
push
lods
mov
or
scas
adc
mov
dec
dec
sub
int3
add
movl
addr16
add
add
lret
or
push
mov
mov
cwtl
jno
mov
inc
in
jns
out
call
out
sahf
out
hlt
clc
clc
cld
testb
inc
mov
add
fnstcw
add
sub
in
push
clc
or
lcall
nop
nop
inc
pop
or
insl
sar
inc
and
push
jbe
sbb
lea
jl
cld
scas
loopne
push
or
jo
ja
xchg
xor
fsts
mov
xor
sub
nop
pushw
test
test
rcr
add
push
fldcw
out
add
lret
mov
push
out
push
add
outsb
in
xchg
mov
imul
push
sahf
mull
data16
and
sub
xor
pop
lahf
out
inc
dec
push
xor
sahf
out
sahf
sbb
sbb
adc
jns
out
adc
or
or
sahf
out
add
inc
test
or
aaa
icebp
xchg
xor
push
add
pop
andl
inc
ja
dec
add
bnd
cli
sti
pop
mov
xor
mov
mov
incl
inc
decl
jne,pn
pop
pop
sub
mov
jae
xchg
in
push
ljmp
cmp
jbe
push
cltd
pop
idiv
sub
xor
adc
cwtl
rorb
ja
nop
add
ja
aaa
dec
mov
mov
xor
inc
xor
popf
out
bnd
cmp
jae
dec
enter
xchg
jbe
popf
cmp
hlt
mov
dec
sub
pusha
add
call
call
add
clc
pop
movsb
push
pop
or
push
jg
imul
dec
sbb
add
mov
add
test
je
push
mov
outsl
or
dec
dec
je
push
push
paddq
jl
jne
xchg
insb
adc
mov
lcall
or
stc
mov
push
enter
cmp
das
sbb
rcrb
add
lods
xor
swapgs
lret
xchg
cmp
inc
pop
add
xchg
dec
dec
adc
out
or
dec
pop
ja
rcll
cmc
pop
lock
cltd
rclb
inc
stos
mov
inc
and
nop
lret
add
in
jmp
cmp
mov
sub
sub
insl
or
lock
push
push
cltd
pop
idiv
sbb
ret
movsb
mov
inc
out
cmp
and
nop
sbb
or
mov
mov
iret
pushf
push
pop
inc
and
add
add
shlb
adc
jl
mov
sbb
loopne
adc
or
xchg
insb
sub
sbb
jb
mov
cmp
rorl
aam
lods
fisubrl
sub
add
dec
xlat
pop
xor
call
pop
cmp
add
sti
cmp
loope
sub
sub
mov
rolb
inc
add
pop
addb
lds
cli
add
xor
pop
xchg
push
js
lahf
push
cmp
mov
and
je
sbb
jl
ud2
and
fs
sti
ljmp
aas
jno
mov
mov
fnsave
int3
dec
jo
mov
je
notl
cmp
rorl
or
inc
in
xchg
inc
cs
jo
js
push
lahf
pop
mov
or
sti
popf
sbb
pop
push
hlt
push
or
inc
mov
push
aaa
orl
and
test
out
pop
stc
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
push
lds
sbb
pop
inc
add
loop
and
fldt
ret
push
je
mov
cmpb
sbb
jecxz
cmp
imul
sbb
jge
loop
lock
rcll
jne
push
hlt
mov
mov
push
data16
cmp
jns
and
inc
adc
or
out
aas
dec
fdiv
call
push
mov
pop
sbb
jge
mov
mov
aaa
in
int3
dec
mov
jbe
ljmp
xchg
rorb
nop
push
xchg
pop
jg
mov
pop
sbb
sahf
adc
movsl
cld
mov
mov
add
mov
sbb
push
sbb
add
push
cmp
jg
jbe
sbb
gs
push
adc
fisubs
mov
mov
mov
icebp
loopne
add
mov
inc
inc
cmp
je
xchg
mov
mov
rclb
sbb
adc
add
aam
pop
ret
fidivrl
dec
je
and
mov
sub
ret
or
sbb
push
and
dec
mov
ljmp
lcall
or
push
inc
sbb
icebp
or
daa
ja
neg
adc
sti
sbb
lods
mov
sub
fisubrs
dec
mov
insl
sbb
add
dec
push
popa
mov
hlt
pop
xor
popf
inc
cmpsl
movl
or
aam
add
add
test
in
pusha
jle
adc
test
cmp
cmp
je
mov
add
mov
inc
mov
int3
sub
inc
add
jno
add
push
pop
sbb
add
inc
int
fs
lcall
add
sbb
shr
and
sbb
dec
movsb
jb
pop
inc
sub
hlt
cmp
push
push
insb
lret
mov
mov
xor
dec
mov
push
fcom
iret
add
stc
cmp
rcll
sbb
jne
inc
shl
mov
popa
dec
or
daa
in
jl
push
push
jmp
das
dec
jmp
mov
jmp
dec
sbb
sahf
into
push
test
or
and
and
daa
jp
in
sbb
nop
push
sbb
add
sub
jbe
sbb
es
ret
mov
repz
and
lods
adc
ret
or
lahf
jge
shll
outsb
jns
and
inc
jne
fstpl
roll
xchg
stos
mov
call
push
pop
or
or
idivb
sbb
inc
push
jmp
cmp
pop
and
in
ja
or
and
jne
inc
inc
call
jns
pop
mov
out
adc
sbb
sub
movsb
mov
stos
call
adc
aam
lock
dec
jb
sbb
pop
test
push
je
filds
aas
movsl
add
imul
dec
lret
push
add
movsl
pushf
or
xor
das
decb
leave
leave
add
movsb
cltd
jne
add
imul
and
pop
pusha
leave
sahf
movsl
xchg
cmp
fldz
pop
jl
xchg
divb
add
push
es
dec
and
adc
mov
scas
repz
lret
pop
mov
test
add
pop
cmpl
pop
jne
cmp
fchs
lods
testl
ror
add
outsb
mov
addr16
negl
ds
jmp
pop
arpl
pop
xchg
push
jno
fistl
fs
and
lds
inc
mov
push
mov
push
addr16
std
mov
les
cmp
xchg
cmp
pop
fisttpl
push
xorb
movsb
cld
adc
lds
push
adcl
and
roll
in
inc
inc
adcb
push
dec
in
or
outsb
jbe
js
and
cmp
addb
mov
cmpb
rol
jno
cmpl
fsubrs
stos
cs
scas
add
bound
sarl
daa
sbb
in
call
shr
and
stos
adc
jo
jno
mov
fwait
gs
clc
imul
fcomps
testb
inc
int3
or
rcl
jl
push
xlat
cmp
add
xchg
iret
push
dec
pushf
xor
pop
sub
push
mov
jmp
mov
imul
inc
dec
jg
pop
sbbl
sub
push
inc
and
addb
ret
repnz
adc
cmc
or
adc
movsl
stos
imul
add
cmp
xchg
das
iret
pop
sbb
cld
arpl
outsl
movsl
loopne
imul
cmp
or
ja
or
or
sub
or
shll
into
push
rolb
xchg
test
insl
loopne
and
push
jge
cmp
rclb
orl
inc
mov
and
sbb
ja
lods
xchg
jp
jbe
xorl
js
mov
inc
add
hlt
sbb
cmpsb
sub
push
dec
xchg
jle
inc
pusha
mov
xchg
loope
jle
jmp
adc
into
jne
and
mov
sub
xchg
cmp
scas
rorl
inc
adc
icebp
cmp
push
clc
fsubrs
rcrb
sarl
add
lock
sub
mov
pop
loope
ja
call
sbb
hlt
or
cmp
push
aaa
fsub
sub
incl
jnp
or
test
mov
adc
dec
dec
inc
or
or
xor
fsubrs
fstps
xorb
push
ret
adcl
rclb
roll
or
dec
ret
inc
push
cltd
and
push
jo
push
lock
pop
shll
jmp
imull
jecxz
dec
incb
sbb
dec
outsl
xor
adc
lea
neg
out
fcom
rorb
out
ret
mov
cmp
rolb
or
cmp
jb
mov
cld
jb
lahf
mov
dec
xchg
mov
testb
mov
inc
or
and
pop
add
ret
sbb
dec
loope
jne,pt
dec
mov
or
add
ret
lods
test
cwtl
out
cmp
adc
imul
sbb
jne
adc
xor
sarb
push
jecxz
add
cmp
mov
cmpsb
addl
cmp
cmp
stos
test
mov
shr
and
in
adc
pop
mov
and
and
andb
and
and
test
mov
jae
cwtl
shlb
out
add
repz
sub
pop
jle
xchg
pusha
adc
sub
xchg
inc
mov
push
push
add
loopne
xchg
sbb
or
shl
loopne
pop
push
clc
pop
jo
add
ljmp
xchg
lret
sub
andl
push
and
dec
xor
adc
add
mov
cs
test
adc
enter
add
aam
cmp
mov
add
mulb
or
das
dec
mov
add
mov
std
testb
dec
in
push
adc
push
pop
dec
ss
adc
loope
mov
mov
adc
mov
es
and
add
xor
nop
or
jmp
fcompl
xchg
jne
or
cmp
sub
adcl
aam
push
add
sbb
inc
mov
jmp
pop
cmp
fcomip
jae
add
adc
jo
adcb
adc
xchg
iret
rcrb
inc
sub
adc
and
sbbl
sbb
aaa
mov
xchg
sbb
jbe
mov
rcrl
push
arpl
enter
push
add
push
add
rol
inc
incb
dec
stos
add
ja
sub
std
add
fists
das
cmpl
fldl
adc
mov
sub
add
ljmp
or
mov
fstl
rcrb
sbb
dec
loopne
loopne
or
cmpb
gs
aas
jmp
test
sub
xchg
cld
sub
call
je
imul
lock
test
add
scas
xor
or
jecxz
sbb
jnp
adc
mov
je
add
iret
xor
imul
inc
push
dec
or
pop
test
testb
push
and
icebp
adc
pop
repnz
inc
imul
push
lea
or
xchg
pushf
pop
sbb
mov
adcb
lret
and
jl
jg
pop
fmuls
pop
push
js
into
sub
dec
adc
xor
add
mov
leave
cmp
repnz
sub
adc
and
push
insb
and
test
shl
das
pop
or
sbb
and
ficompl
repnz
mov
pop
shr
sub
add
shll
adc
push
or
push
pop
cmp
mov
lret
test
sub
mov
gs
xor
adc
sub
in
addr16
push
or
repz
in
sbb
sbb
dec
aam
imul
mov
inc
mov
loopne
movl
cmp
xor
sarb
or
addl
shlb
adc
loope
sarl
jns
movb
in
shrl
loopne
call
or
or
mov
insb
xor
pop
dec
sub
sbb
xor
pop
or
ror
dec
xor
adc
or
movsb
shrl
clc
mov
mov
in
popa
bound
roll
aad
mov
or
loope
and
add
sub
mov
xlat
add
testl
or
push
push
add
enter
adc
add
pop
cltd
cmp
fcompl
xchg
imul
test
cmpsl
add
add
test
push
sbb
out
movb
popf
out
ret
jb
imulb
ja
sub
es
or
aas
push
push
addl
shlb
popf
data16
cld
ficoml
push
push
ds
pushf
fmuls
xor
add
pop
repz
push
cmp
add
dec
inc
inc
cld
popf
mull
dec
and
int
mov
orb
mov
mov
movsb
lods
jmp
and
je
and
mov
dec
cmp
mov
pop
loop
cmp
pop
mov
mov
test
cmp
stos
mov
lret
lds
and
jae
ljmp
jmp
add
shl
inc
ret
pop
and
adc
mov
xchg
inc
jo
jg
sub
test
ja
test
and
adc
rcl
or
sbb
xor
pop
or
mov
jno
pop
push
mov
mov
dec
add
pop
insb
aas
inc
loop
push
cld
pop
cmp
test
add
cltd
ret
mov
push
lret
cmp
fwait
or
cmp
mov
pop
ljmp
adc
in
xor
fsubr
fldt
push
cmpsl
or
stos
enter
push
add
das
adc
or
mull
icebp
or
cmp
lahf
call
cmp
or
push
mov
push
and
adc
xor
or
dec
mov
fs
popa
push
stos
movl
push
and
xor
inc
sbb
inc
rolb
mov
dec
jo
cmp
les
call
inc
xor
paddsw
add
imul
or
inc
pop
leave
inc
test
mov
imul
push
lea
push
into
jg
mov
sub
test
fs
adcb
jg
or
lcall
popa
xor
inc
inc
jne,pn
mull
add
jge
add
dec
pusha
imul
xor
outsl
stos
popa
jne
mov
adc
jg
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
pop
mov
ds
sbb
cmp
jmp
inc
push
mov
inc
dec
jne
sbb
movsb
mov
add
pusha
addb
gs
sub
cltd
push
jnp
test
xor
mov
add
adc
dec
loopne
adc
mov
dec
test
adc
aam
or
iret
dec
or
add
push
rolb
lahf
mov
pushf
sbb
xor
jns
sub
mov
push
mov
inc
data16
inc
push
inc
and
ss
mov
sar
cmpsl
and
add
ljmp
repnz
xchg
and
fs
or
xor
into
mov
and
arpl
push
loopne
icebp
std
outsb
lret
pop
sub
jmp
xor
dec
repnz
sbb
dec
cmc
inc
xor
repz
ret
ss
push
push
mul
jmp
adc
jno
es
inc
dec
jmp
xchg
bound
dec
mov
and
inc
movsb
push
flds
cmp
leave
xor
daa
loop
js
mov
std
and
jmp
cmpl
adc
stc
lret
out
or
cld
mov
pop
and
sbb
cmp
pop
pushl
data16
nop
inc
mov
sbb
fstpl
lahf
das
adc
mov
les
xor
and
sub
dec
pop
sbb
sbb
mov
mov
push
add
js
cwtl
sub
xor
push
rolb
fidivs
out
jle
jnp
in
repnz
push
cmpl
add
icebp
push
pushf
or
cmp
sahf
pop
adc
inc
add
jbe
dec
or
movsb
shlb
push
es
xor
sbb
push
mov
leave
orb
mov
in
xchg
and
lea
jnp
mov
aaa
or
jne
cmpl
push
pop
ret
mov
aam
movsl
sub
pushf
push
ss
xor
adc
xor
push
sbb
sub
and
ljmp
xor
rcrb
push
mov
or
jo
adc
mov
sbb
pop
sbb
jo
loope
xchg
ds
mov
cltd
inc
adc
sbb
add
push
ficomps
inc
ret
push
in
jbe
pop
mov
jne
ss
or
or
sbb
push
cmp
shrb
clc
sbb
mov
cmc
lar
pop
push
jns,pn
cmp
push
je
or
out
add
ds
inc
jb
test
lret
mov
adc
jmp
repz
add
sbb
rcll
push
push
push
mov
jb
xor
mov
shrb
loope
cs
mov
inc
adc
dec
push
leave
movb
mov
rolb
pop
adc
inc
cwtl
and
sbb
pop
xchg
lret
bound
outsl
or
push
jo
scas
or
inc
mov
mov
sbb
mov
or
inc
cmp
xchg
inc
add
add
add
insb
sbb
xchg
test
insb
jg
or
inc
sub
sbb
outsl
mov
dec
mov
inc
sub
mov
inc
ret
dec
push
rcr
add
push
ret
bound
movsb
pushf
xchg
cld
imul
orl
jnp
lcall
rcl
test
into
repz
and
jae
iret
adc
popa
js
or
mov
inc
push
repnz
inc
and
and
xor
jb
pop
cmp
inc
mov
jb
dec
pop
cmp
xor
daa
jle
popa
lcall
enter
jmp
cli
mov
insb
and
mov
mov
adc
test
or
mov
loope
mov
int
jg
inc
and
jge
addl
push
push
aas
pop
pop
into
imul
and
xchg
jle
pushf
cwtl
xchg
dec
out
cs
cmpl
cmpsl
mov
adc
pushf
cmpsb
and
daa
jbe
popf
test
push
stos
mull
xchg
cmp
imul
and
imul
sub
inc
mov
pop
pushf
cwtl
mov
and
and
jmp
gs
xchg
jb
or
mov
adc
add
mov
lock
movsb
jp
inc
sub
inc
jmp
dec
bound
pop
pop
rorb
pop
imul
fstps
das
mov
or
dec
lea
sub
loopne
lret
fcoml
ror
lret
out
iret
mov
clc
or
out
lret
lret
test
movsl
shrb
sbb
mov
add
sarl
dec
call
adc
jp
or
sub
aam
xchg
adc
int3
mov
lahf
lea
mov
sub
add
xor
add
sbb
add
out
jmp
or
pop
jmp
jge
xor
rorb
fists
call
dec
pop
fdivrs
xchg
add
insb
or
xchg
mov
es
mov
call
daa
nop
adc
test
pop
jnp
out
xchg
aas
push
sbb
add
jecxz
pop
pop
test
sub
push
test
jnp
jns
testl
dec
add
cmp
out
push
mov
push
test
push
adc
mov
push
push
and
rcrb
pop
pop
test
mov
pop
push
sbbb
pop
sbbb
mov
faddl
in
sbb
repz
cld
add
pop
pop
outsl
xchg
or
add
pop
pop
pop
sub
adc
data16
cmpsb
insb
sbb
dec
je
push
push
cs
push
cmp
arpl
dec
fs
rcll
jmp
inc
notl
adc
js
or
add
fcoml
gs
and
popa
mov
mov
sub
pop
insb
lret
jne
add
cmpl
dec
cmp
jge
inc
mov
push
test
lods
mov
sbb
adc
sbb
cwtl
push
outsb
call
inc
out
jbe
ror
sbbb
add
hlt
inc
movsl
and
or
and
ret
idivl
jb
lea
imul
dec
sbb
hlt
fdiv
mov
ds
mov
int3
or
and
enter
fwait
xor
push
enter
ljmp
cmc
je
addr16
dec
mov
dec
adc
or
jae
sub
and
lcall
or
inc
or
loopne
movl
cmpl
add
je
xchg
adc
push
movl
add
jmp
adc
mov
pop
ja
sbbb
sbb
jbe
ret
das
inc
lods
push
bound
xor
inc
lcall
hlt
dec
or
lea
adc
cmpsb
mov
jnp
fs
out
loop
and
outsl
push
mov
xchg
cmpsl
loope
aam
add
sub
loope
notb
jle
bound
or
test
ja
enter
lock
je
movl
or
push
mov
ret
rcr
fistpl
push
or
mov
and
mov
push
inc
and
popa
jo
pusha
shl
push
loope
and
ljmp
popa
loope
push
mov
ret
hlt
iret
or
imul
mov
or
adc
adc
aam
pop
test
xchg
out
add
add
or
loopne
xchg
fimull
inc
pop
add
adc
jns
inc
cmp
inc
subb
push
pop
nop
sbb
mov
js
push
mov
push
imul
inc
cmp
jo
test
inc
loope
daa
jmp
pop
dec
call
dec
ficoml
and
dec
cmp
dec
out
in
add
into
xchg
mov
shrb
outsb
mov
outsb
popa
xchg
fildl
outsb
push
mov
fimull
dec
popa
mov
les
and
add
lret
js
fdivl
jecxz
xchg
pusha
add
add
cmp
xchg
ret
xchg
xor
mov
inc
cltd
adc
jbe
push
inc
lea
or
test
and
fsubl
icebp
adc
jae
ret
rcrl
std
mov
divl
in
iret
adc
shl
adc
sbb
clc
dec
xchg
xor
pop
or
push
jne
pushf
push
adc
ljmp
jns
andb
push
jg
test
sub
pop
ss
add
add
loope
loopne
inc
inc
jp
mov
fdivl
pop
mov
rclb
ret
and
leave
dec
add
push
push
xorl
mov
mov
mov
test
and
sbb
jo
push
mov
or
decl
dec
aas
add
push
pop
movsl
call
nop
xchg
dec
rorl
loop
push
int
lcall
push
jg
sbb
je,pn
lods
gs
repnz
add
sti
xchg
lret
lret
rorb
popf
in
mov
pop
cs
fadd
fadd
ret
cmp
push
xchg
je
mov
ret
call
test
bound
leave
movzwl
test
rcrl
in
or
sbb
rorb
mov
jbe
mov
rol
imul
outsl
ja
ficompl
jl
dec
rcr
in
or
loopne
xor
test
push
xchg
sar
pop
mov
rorb
or
sbb
lea
cs
dec
aam
clc
fcomps
xlat
loopne
xor
sub
dec
or
je
dec
sub
adc
sbb
scas
pushf
pop
or
jb
in
push
pop
add
xor
sbb
adc
pop
nop
cli
sub
fcompl
cmp
sub
aam
out
mov
mov
sub
clc
outsb
or
push
imul
lret
or
cmpsb
xor
movsl
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
xor
mov
cwtl
je
or
inc
insb
je
adc
into
pusha
lock
test
outsb
loope
insb
cmp
sub
adc
sbb
pop
fcmovnu
pop
mov
mov
pop
or
xor
mov
inc
outsb
jg
dec
xor
cwtl
nop
push
inc
movsl
jg
jmp
iret
in
jb
or
imul
xor
cmc
jne
js
movsl
loope
and
je
ret
or
push
mov
mov
push
jbe
mov
call
adc
jecxz
push
or
sbb
mov
pop
push
or
mov
mov
ds
mov
xor
inc
mov
fdivr
jmp
loop
popf
pop
test
and
je
push
dec
inc
stc
sbb
pop
out
testl
push
fucomip
mov
aaa
jne
das
mov
adcl
mov
sbb
dec
and
or
mov
and
or
addr16
xor
in
sub
in
inc
or
push
sahf
sub
in
inc
add
lock
into
push
insl
cmp
movsb
mov
loopne
xor
negl
or
testb
lret
mov
adcl
add
je
mov
movsl
sti
mov
push
mov
movsl
mov
mov
mov
xor
dec
arpl
fstps
fidivrl
lcall
jmp
mov
adc
int3
push
sub
xor
add
lea
lahf
xor
jns
push
sbb
imul
dec
outsb
jo
add
add
inc
mov
pushf
into
add
addr16
fmul
pop
je
push
outsb
je
test
xor
call
popa
aas
add
xor
lds
and
xchg
test
add
sbb
andl
adc
cmp
popa
push
sbb
or
jo
jecxz
push
stos
add
push
add
ret
pop
push
adc
addr16
mov
jmp
cmp
jle
insl
js
dec
ja
mov
incl
mov
dec
dec
cwtl
add
or
xor
int
or
cmpb
sub
xor
adc
dec
shl
mov
adc
jne
sub
xor
jb
sti
inc
mov
outsb
and
jecxz
lea
stc
lcall
pop
test
or
sbb
dec
sbbb
sub
inc
dec
lds
pop
mov
hlt
lcall
jae,pn
adc
mov
addr16
decb
mov
test
into
rolb
adc
push
xchg
xchg
js
pop
data16
push
cmpl
lret
test
adc
inc
fistps
xchg
je
adc
dec
add
jmp
or
jmp
aaa
int3
je
cltd
add
fldenv
sub
or
jae
pop
and
inc
clc
neg
jecxz
fisubrl
outsb
in
pop
fimull
mov
xor
jge
inc
sbb
dec
test
pop
mov
or
jne
and
ficomps
testl
push
inc
adc
inc
aas
nop
clc
shll
cltd
push
jg
mov
adc
cmp
push
nop
xchg
clc
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
or
add
xlat
pop
dec
shlb
xor
ss
sbb
or
or
inc
inc
mov
outsl
adc
roll
je
gs
mov
or
add
sub
icebp
int
push
sub
push
test
cmpsb
and
mov
cltd
push
hlt
push
cld
sub
sub
pop
rcrb
push
jp
push
cld
mov
cmp
in
fdivrl
lea
enter
jns
mov
adcb
jbe
dec
subl
xchg
cmpsb
push
fdivs
add
mov
nop
aaa
cmp
call
in
fistps
rcll
sbb
ret
cs
pushf
test
inc
jmp
lock
lods
add
cmpsb
dec
lea
pusha
xchg
loopne
push
icebp
jl
mov
add
push
xchg
xchg
loopne
fs
adc
cld
out
movsl
daa
pop
mov
xor
sahf
mov
sub
movsb
cmp
ds
out
filds
add
sub
sub
mov
imul
lcall
push
push
out
xchg
imul
enter
rolb
loope
or
mov
into
subb
mov
rclb
cmp
pop
mov
cld
jne
lea
mov
xchg
push
add
repnz
leave
or
jo
pop
xor
rolb
and
lcall
inc
aam
daa
push
mov
xchg
dec
ret
fs
jb
push
fcomip
vphaddwd
cmp
fcoml
jae
or
push
jne
push
mov
ret
out
and
out
mov
xor
pop
addr16
es
ret
loopne
daa
inc
cld
movsb
jge
push
les
sub
xchg
xor
cmp
ss
mov
sbb
pop
jne
mov
push
push
xchg
arpl
mov
xchg
sbb
lods
and
imul
scas
and
or
lds
add
or
or
lea
sbb
adc
or
adc
mov
in
out
mov
mov
imul
add
jmp
add
sub
mov
push
rclb
mov
and
push
add
pop
sub
cld
shr
pop
xchg
clc
jnp
mov
inc
and
push
push
add
dec
or
cld
daa
push
mov
lea
mov
mov
mov
ljmp
divb
sar
pushl
add
cmp
jbe
push
pop
and
dec
or
outsl
mov
sub
jae
mov
shr
lea
not
dec
adc
shll
pop
mov
les
sbb
out
sub
lea
xor
jl
sub
adcb
add
stos
xor
and
addl
jg
push
jecxz
push
add
mov
clc
and
sti
add
xor
dec
pop
cmp
ficoms
hlt
mov
jl
and
cmpsb
loopne
sub
pop
movsb
jno
jno
fwait
lret
cmp
shr
not
and
add
and
xor
ja
in
or
das
mov
xor
addr16
pop
dec
add
mov
push
or
cmp
in
cmp
lea
out
or
inc
adc
dec
or
pushl
pusha
mov
mov
inc
xchg
add
mov
mov
roll
mov
jmp
dec
in
adc
loopne
lock
inc
ljmp
pop
scas
mov
repz
push
and
stos
pusha
mov
xor
pop
fsubrs
loope
add
scas
jp
push
call
aas
dec
sti
mulb
or
sbb
nop
cmp
sub
dec
inc
adc
dec
adc
add
and
pushl
push
push
movsb
and
jp
shll
aaa
int
push
mov
fildll
enter
lea
dec
adc
dec
sub
ret
push
cmp
lahf
or
or
mov
mov
enter
inc
inc
xorb
mov
pop
adc
pop
in
jne
ds
cmpsl
test
mov
scas
dec
daa
cmp
inc
out
dec
ja
addl
or
jg
push
xor
adc
push
ljmp
adc
adc
adc
outsl
adc
out
jmp
orl
in
insl
sbb
add
call
pop
push
mov
shlb
lea
ljmp
fadd
inc
lret
incb
pop
or
cltd
inc
add
or
hlt
or
adc
in
ror
sbb
cmp
push
shrl
ret
cmpsb
inc
incl
or
sub
shr
in
inc
orl
orl
adc
adc
jne
fst
inc
inc
cld
lock
call
cld
push
dec
jne
je
clc
add
movsb
lcall
sub
arpl
cmpsb
sub
fs
inc
bsf
pop
mov
mov
lock
cmp
inc
sbb
cli
clc
jne
or
lds
not
and
sub
les
add
adc
sbb
sub
nop
out
mov
loopne
or
jb
cld
fmuls
icebp
orl
adc
inc
xchg
pop
pushf
jle
jmp
flds
cmp
pop
stc
add
dec
push
xchg
push
mov
int3
push
pop
inc
lcall
inc
stc
xchg
add
iret
clc
rolb
rcr
sub
pop
add
cmp
fimuls
sub
nop
dec
or
mov
sub
add
dec
enter
movsl
adc
pushf
sar
dec
mov
jmp
mov
lea
jmp
jg
or
mov
imul
xor
adc
lcall
fwait
rclb
jmp
orl
jp
js
test
andl
lcall
jge
cmp
loope
aas
lcall
inc
or
movsb
das
mov
divb
pop
xor
push
sar
dec
or
movsb
pop
jbe
loop
xor
cmp
pop
ret
xor
cmp
mov
xchg
fisttps
xor
mov
inc
pop
sbb
fbstp
ja
cmp
mov
add
mov
loope
sbb
or
mov
loope
mov
mov
mov
push
cmp
lret
shrb
insl
jo
xchg
cmp
rdmsr
cmp
lods
dec
xor
mov
cld
imul
lock
and
dec
cld
call
dec
push
push
push
jge
push
or
adc
xor
lret
mov
or
push
adc
nop
cmp
and
decb
xlat
incb
adc
inc
call
push
jne
mov
pop
mov
xor
add
dec
mov
repnz
aaa
arpl
mov
jg
adc
mov
and
xor
outsb
pop
cmp
nop
pop
lcall
fcmovb
scas
pop
cmp
je
mov
push
xchg
xchg
loope
sbb
mov
dec
pop
iret
jne
mov
jno
mov
xchg
cwtl
xchg
ljmp
out
insl
out
mov
repz
mov
and
jne
mov
out
clc
test
and
leave
inc
test
inc
push
push
and
mov
sub
icebp
sbb
fdivrl
pop
add
xor
add
xchg
and
push
cmp
push
push
or
out
and
mov
decb
jne
jp
into
xchg
lock
jmp
jp
dec
xchg
cmp
and
jo
sti
bound
dec
push
and
into
xor
dec
jp
ds
sub
pop
inc
mov
or
lea
mov
cmp
divb
test
add
cmc
add
rorl
out
or
dec
cld
or
adc
pop
push
in
mov
mov
out
or
aad
adc
nop
xor
loope
adc
add
in
xchg
mov
and
lods
test
lea
ds
or
inc
sbb
sbb
rorl
std
xor
lea
leave
mov
repnz
cmp
adc
sbb
pop
jb
or
xorl
jp
inc
pop
adc
adc
inc
or
dec
cmp
sti
mov
sar
icebp
push
mov
mov
pop
pop
sbb
cmp
dec
out
inc
adc
and
in
popf
adc
movb
mov
push
add
inc
pop
or
jnp
lahf
jge
push
pop
inc
inc
cmp
cmp
sub
add
in
add
mov
out
fs
fnsetpm(287
pop
sbb
push
and
add
loopne
inc
push
into
sbb
or
add
mov
add
in
dec
gs
xchg
inc
loopne
insb
xor
clc
and
push
dec
lcall
insb
sti
ficompl
mov
xorl
negb
push
adc
sbb
lds
je
out
or
jne
push
inc
outsl
adc
mov
push
adc
movsl
sbbb
xor
inc
pop
xlat
cmp
cpuid
add
inc
js
push
or
jmp
jecxz
push
hlt
or
pop
jl
xchg
sahf
and
fidivrl
mov
sub
lahf
dec
dec
jl
insb
int3
push
mov
imul
push
jne
xchg
jg
cld
loopne
out
xor
add
ret
mov
lock
hlt
inc
inc
dec
jne
or
sub
or
inc
fdivl
lods
xor
jno
into
rolb
add
add
lods
in
push
push
jo,pt
popf
call
jp
mov
popa
push
jns
xor
jecxz
shlb
and
mov
fwait
in
push
loop
call
lcall
or
repnz
in
scas
mov
pop
add
cmp
mov
mov
mov
test
xor
cmp
test
enter
and
xor
lcall
rorb
in
movsb
mov
add
and
dec
xor
jmp
push
or
xchg
mov
push
ret
pop
outsl
int
xor
ret
sbb
or
add
scas
subb
pop
dec
dec
leave
cmp
rorb
ss
faddl
mov
xor
nop
outsl
mov
repnz
mov
mov
jne
cli
scas
pop
ret
cwtl
mov
inc
jmp
fdivl
jg
das
leave
int
adc
ss
sbb
cmpsl
cmp
lcall
in
cmc
jmp
imul
push
rorb
pusha
pop
std
pushf
xor
ret
test
or
dec
repz
lea
leave
inc
es
push
jbe
call
add
add
jp
lock
test
pop
fwait
dec
lahf
push
sbb
adc
in
leave
enter
leave
mov
lock
jp
jp
leave
dec
movsl
jb
ljmp
enter
scas
pusha
push
cmp
dec
outsl
xchg
jo
cs
push
pusha
jns
inc
xor
lahf
inc
push
in
fimuls
cld
shrl
xchg
addr16
stc
pop
mov
es
xchg
mov
cmp
mov
in
loopne
nop
or
sbb
roll
call
xchg
push
lods
adcl
shrb
xchg
ja
call
call
in
inc
and
add
mov
pop
and
les
loop
pusha
xor
xchg
in
xchg
xchg
add
add
in
push
nop
and
test
test
xchg
inc
test
mov
mov
jle,pn
cld
enter
cmp
pop
mov
pop
mov
sysret
dec
lds
mov
mov
mov
lcall
fidivrs
addl
xlat
ss
mov
ret
jnp
aaa
and
sub
jbe
push
sbb
xchg
lea
fldcw
add
addr16
lret
mov
push
clc
mov
sub
pop
and
cs
fucomp
je
rcl
js
adc
adc
pop
xor
lret
or
cmpsl
mov
or
and
adc
or
test
insl
push
lods
sarl
mov
and
mov
inc
dec
addr16
push
push
inc
add
push
adc
xchg
enter
ficoms
js
jecxz
shr
lds
or
mov
aaa
cmp
add
add
add
mov
push
cmp
and
sahf
lret
xchg
push
jl
inc
xor
adc
push
xor
icebp
bound
xchg
mov
lock
xor
add
xchg
iret
insb
je
stos
add
fisubrl
add
add
jnp
dec
into
mov
dec
add
mov
lock
add
add
mull
or
and
adc
adc
push
adc
lods
rol
jne
add
hlt
ja
add
or
push
pop
inc
stos
push
ds
sub
dec
pop
cli
add
cmp
pop
inc
aaa
adc
adc
movsl
aam
das
fdivs
aad
out
add
pusha
lret
int3
and
not
and
sbb
mov
pop
sarl
sub
ret
dec
pop
inc
dec
shll
cli
sti
cld
std
mov
xor
dec
inc
inc
dec
popa
aaa
cli
xor
lods
es
sbb
cmp
cmpsb
cmpsb
and
jg
gs
sbb
add
shll
mov
rcrl
int
mov
dec
mov
ljmp
xchg
xchg
je
push
or
add
pusha
jl
dec
fisubl
fistps
fstpl
push
fldl
or
fldl
or
sub
add
xor
mov
mov
inc
lcall
push
leave
pop
jmp
jo
mov
rorl
mov
fistps
insb
pop
cmp
das
cmp
xchg
dec
je
add
and
imul
push
sti
fnstenv
neg
sub
insl
ljmp
pop
fstpl
gs
scas
popa
mov
ds
sub
pop
rol
rcrl
stc
fwait
add
cmp
cmpsl
repnz
jmp
lret
xchg
adc
in
jl
add
pushf
cld
rolb
xchg
idivl
in
pop
push
call
rcr
cmp
push
push
and
test
roll
jne
das
and
inc
lock
pop
mov
mov
cmp
repz
iret
pop
fildl
iret
repz
lock
andl
sahf
jecxz
mov
add
adc
cmp
inc
in
push
or
push
xchg
jg
push
inc
lods
rorb
add
sbb
mov
clc
jle
push
jle
je
fidivrs
and
inc
or
dec
sti
mov
inc
jmp
push
push
xchg
jmp
pop
or
inc
faddl
std
mov
popa
push
jmp
push
ljmp
clc
push
fmull
jo
mov
out
jp
cmp
rorl
in
push
push
adcl
cmp
add
push
push
push
dec
mov
rolb
or
rorl
push
loopne
or
push
adc
dec
out
inc
xchg
adc
pop
pop
es
cltd
js
or
lock
mov
and
mov
mov
int3
add
in
call
pusha
cmp
cltd
clc
xchg
std
nop
adc
mov
ds
pop
mov
arpl
push
clc
mov
sbb
sar
f2xm1
xor
jb
or
pop
xchg
out
or
jg
xchg
dec
sbb
mov
sar
lea
mulb
stos
jmp
addr16
cmp
fiaddl
jg
stc
mov
mov
sti
cld
pop
mov
rolb
add
call
fcomps
xchg
or
adc
adc
lea
and
fcomps
xchg
fsts
mov
mov
jb
jl
leave
rorb
shl
enter
cwtl
aam
xlat
movsbl
dec
push
pop
or
xchg
dec
popw
add
sbbl
xor
pushf
sbb
ror
mov
cmp
lods
in
movsl
inc
hlt
ss
or
adc
popa
sub
cs
dec
mov
and
mov
mov
or
inc
or
shll
or
call
push
inc
sub
pop
movsb
in
adc
outsl
nop
je
xchg
ss
xchg
xor
pop
inc
repnz
cmp
inc
xor
insb
sub
xchg
mov
aad
aad
cmp
push
int
dec
movsl
test
js
inc
ret
imul
push
sbb
mov
mov
adc
leave
fwait
test
call
mov
mov
sarb
inc
push
loopne
sub
lret
mov
call
lods
jo
add
pop
js
lcall
adc
adc
sti
push
inc
cmp
lea
std
mov
std
dec
inc
jne
mov
mov
jne
add
movsb
popf
testb
cwtl
xchg
stc
mov
cltd
push
adc
notl
mov
jge
add
or
mov
mov
fcmovbe
jns
cmpl
mov
mov
sahf
sbbb
stos
lds
cld
xchg
cmpsb
push
pop
dec
inc
hlt
or
imul
fwait
mov
ds
mov
sub
jno
popa
nop
and
or
pop
and
int3
jp
add
into
je
neg
xchg
test
outsb
pop
insb
dec
or
jg
std
mov
push
test
decb
mov
insl
pusha
nop
pop
sbb
std
aaa
fs
fisubl
repnz
adc
cmp
ret
mov
hlt
pop
mov
jmp
je
add
jno
inc
popa
pusha
lea
cli
subb
pop
cmp
xor
call
mov
jno
jns
call
int3
mov
push
mov
ret
dec
mov
fdivrs
mulb
stos
cmpsb
fldcw
mov
inc
mov
js
inc
movb
mov
lea
in
xor
pop
mov
imul
mov
rcrl
mov
pop
lret
jmp
pop
push
mov
push
push
mov
pop
sbb
xchg
cmp
mov
mov
lods
bound
out
xchg
aad
int
mov
push
movb
stos
dec
aad
test
es
fisttps
test
in
sub
inc
into
inc
ss
dec
inc
adc
enter
cmp
cmp
xor
jb
push
call
std
xchg
mov
and
pusha
imul
test
fs
push
mov
mov
daa
push
mov
cmp
push
popa
mov
fdivrp
sbb
mov
data16
lcall
pop
repnz
dec
jmp
out
adc
push
cmc
sub
sar
lock
push
pop
sub
or
jmp
data16
data16
sbb
jmp
adc
and
pop
sub
int3
cmp
cli
jo
or
roll
dec
sbb
test
xchg
cld
lods
in
pop
adc
std
push
adc
xchg
dec
cmpl
int
sbb
les
pop
into
dec
pop
insl
mov
movsb
adc
add
test
js
jmp
push
inc
lret
jne
cmp
push
dec
inc
adcl
mov
jne
jmp
fdivr
adc
subb
dec
pop
and
push
je
nop
xchg
and
dec
std
std
and
add
std
loope
mov
loopne
sub
xchg
fstpl
movsb
bound
mov
inc
add
movhlps
jns
xchg
sbb
ss
bound
sub
mov
mov
shll
adc
loope
adc
lea
or
aas
xor
pop
pop
es
mov
dec
test
add
add
mov
cmpb
fsubs
xor
xchg
loopne
aad
push
jecxz
mov
push
xlat
adc
imul
lret
and
fimull
mov
adc
push
sbbb
or
push
add
lods
xor
mov
xor
xchg
int3
lock
xchg
jo
jmp
shr
add
xchg
dec
push
lock
push
arpl
repz
add
daa
test
sbb
test
fwait
rcll
movsl
call
in
call
jnp
xor
cmc
fwait
roll
enter
rcll
adc
and
fwait
shll
and
iret
fwait
rcl
int3
les
imulb
or
test
add
nop
mov
in
fwait
shr
ja
in
fs
sbbl
lods
or
dec
pop
dec
gs
inc
xchg
lods
fstps
xchg
mov
test
cltd
movsb
repnz
cmp
sbb
pushf
lcall
jno
sti
lcall
pop
std
lcall
loope
xor
inc
sub
insl
and
mov
cmc
sbb
fwait
mov
add
dec
jb
cld
mov
mov
cltd
adc
adcl
aad
mov
pop
mov
divl
add
addr16
mov
mov
outsl
xchg
xchg
jb
scas
pop
or
ds
mov
mov
jb
movsb
xchg
and
in
push
jecxz
cltd
lea
cltd
add
bound
dec
aam
or
sti
leave
adc
pop
repnz
incl
push
and
and
nop
nop
nop
pushf
dec
add
pushf
lods
lods
push
and
test
pushf
xchg
enter
or
je
dec
pop
je
stc
dec
int
push
dec
outsl
mov
fdivl
dec
movsb
inc
add
sahf
out
mov
push
popa
mov
dec
sub
inc
add
insb
mov
xchg
xor
pop
shlb
or
mov
popf
cwtl
push
pop
mov
or
mov
rclb
add
push
fsubl
jecxz
imul
or
sbb
push
aaa
popf
mov
in
outsl
cmp
push
mov
mov
and
cmp
adc
mov
mov
sub
xor
sub
jb
sahf
add
inc
jno
nop
loopne
or
or
pop
cmp
data16
movb
xor
mov
clc
or
mov
xor
ljmp
outsl
mov
test
je
mov
xor
shrb
cmp
je
cmpsl
mov
sbb
mov
sbb
xchg
and
jle
popa
pop
xor
add
les
mov
sahf
std
push
cld
push
mov
shll
fucomip
stos
bound
test
jb
inc
mov
push
cmp
add
into
popa
sub
movsb
cmpsl
and
push
iret
es
out
mov
loope
xor
sub
mov
movl
sbb
pushf
xor
push
jl
iret
dec
lock
push
gs
push
mov
dec
ret
pushl
and
test
jmp
pusha
xchg
enter
adc
imul
cwtl
lahf
or
and
dec
mov
inc
or
push
add
je
hlt
daa
clc
inc
push
shr
lret
sbb
jae
testl
cmpsb
jmp
ss
xor
icebp
test
test
cmc
xlat
inc
add
inc
jp
xor
xor
rclb
dec
and
jg
add
mov
xchg
lds
and
sub
jne
cmp
add
stc
nop
rol
insb
pop
jmp
add
cmp
clc
movb
iret
cmp
arpl
daa
push
shll
add
xor
aad
mov
push
and
inc
dec
inc
rol
push
push
mov
mov
out
dec
jecxz
loopne
fmuls
sbbb
cmc
xchg
jo
xor
xor
sub
lods
mov
inc
sub
enter
pop
sbb
xchg
adc
stos
cmp
cmp
push
mov
leave
sbb
mov
xchg
sbb
imul
xchg
push
in
rcr
leave
sbb
sar
or
cli
mov
fstpl
push
push
pusha
push
test
je
js
mov
inc
xor
xchg
rcl
xchg
and
cmc
rcr
inc
cmp
push
xchg
sarl
cltd
ret
dec
test
leave
xor
dec
je
fiaddl
addr16
cld
leave
cmp
lea
and
pop
cwtl
sub
mov
jge
lds
out
mov
jae
jo
adc
pop
mov
out
icebp
out
mov
lea
fmull
and
inc
mov
sub
imul
and
inc
into
outsl
inc
cmp
roll
sbb
xor
ficoml
xchg
pop
jnp
fadd
fidivrl
bound
inc
dec
push
push
jl
jno
push
cli
sbb
mov
dec
or
daa
hlt
cs
mov
aam
jb
inc
mov
sub
adc
or
sub
mov
and
in
andl
shlb
rcll
daa
push
xor
xchg
xchg
ds
push
test
add
fistl
pop
inc
stos
aad
jbe
jge
sub
inc
popa
jmp
or
mov
mov
addb
lock
fidivl
out
imul
ret
mov
pop
or
rcl
add
int3
pop
fiadds
movsl
xchg
cmp
jl
cmpl
test
pusha
push
add
movsb
adc
lea
mov
or
xlat
lret
roll
xchg
jge
imul
jle
sbbl
stc
out
cmp
xor
and
sarl
loop
call
cmp
jae
lret
sbbl
pop
adcl
cmp
test
cmp
sahf
lret
xchg
cmp
ror
push
or
sub
mov
jmp
leave
push
sbb
dec
jb
or
int3
outsb
jae
les
dec
mov
adc
pop
sbb
or
add
icebp
imul
push
pop
or
pusha
ret
subl
hlt
add
pop
xchg
push
testl
add
inc
out
ret
dec
xchg
push
inc
dec
es
inc
sti
or
call
ret
cs
sti
faddp
je
push
or
flds
push
push
es
jmp
cmpsl
movsl
mov
pusha
pushl
add
pop
mov
pop
add
ss
xchg
aas
and
cmp
sub
inc
or
je
jmp
xchg
xchg
sub
xchg
push
push
mov
mov
ljmp
cmp
fcompl
popa
mov
inc
or
fdivrs
push
les
sub
lds
or
adc
dec
add
fimuls
or
dec
push
js
dec
mov
mov
mov
inc
sbb
inc
mov
xchg
fwait
sub
adc
cmp
btc
jge
mov
mov
pop
mov
dec
push
jno
mov
outsl
mov
sbb
push
xchg
mov
push
dec
jmp
push
insb
das
adc
enter
js
add
xor
sub
adc
mov
mov
pop
scas
push
fidivrs
add
push
inc
ja
mov
pop
mov
das
dec
cwtl
cmp
aas
inc
enter
pop
addl
and
je
add
inc
inc
and
aam
or
mov
orb
orb
scas
es
mov
es
fsts
mov
jp
or
and
shl
push
adc
adc
outsb
xor
lret
icebp
pop
mov
loop
xor
test
xor
std
add
and
pop
add
or
out
xchg
sbb
jecxz
movb
inc
cwtl
ss
sub
pop
cmpsb
out
cmp
je
out
out
fidivl
adc
xchg
pop
gs
or
outsb
or
cld
cmp
in
ljmp
repnz
ret
xchg
aad
out
testb
and
mov
cld
pop
pop
adc
std
and
sub
mov
and
and
and
clc
or
jmp
mov
sbb
and
adc
sub
testl
insb
insb
pop
mov
or
ja
xchg
xor
jo
imul
cmp
xlat
push
aaa
mov
jmp
push
pop
inc
in
cmc
fldt
add
test
dec
add
mov
fidivrl
stos
pushf
cmp
jbe
push
pop
or
jge
push
adc
pop
inc
ljmp
mov
jmp
popa
jbe
jecxz
sbb
xor
pop
into
xor
cmp
xor
jnp
add
xchg
fisubs
mov
add
daa
dec
insb
or
inc
add
pop
push
cs
pop
sbb
adc
or
stc
xchg
push
imul
dec
push
out
mov
push
lds
or
insb
jne
mov
add
adc
fdivs
lock
cld
mov
inc
and
cmp
imul
push
rorb
or
inc
mov
fs
or
fs
mov
loop
xchg
mov
push
or
mov
daa
push
cmp
jne
xchg
add
lret
outsl
or
loop
ja
cmp
arpl
jl
ss
jmp
xor
into
rol
and
inc
inc
adc
add
lods
enter
pop
je
pop
fcomps
inc
ficomps
int
or
xor
movsl
and
nop
test
fs
bound
sti
xchg
ret
add
loopne
bound
icebp
xchg
xchg
cmp
add
je
repnz
loop
and
pusha
or
push
test
push
ror
inc
add
xor
jae
fimuls
pop
add
ret
scas
adc
dec
stos
pop
sub
cwtl
rorl
cmp
pop
stc
push
ja
mov
daa
lods
lds
mov
xorl
mov
movb
test
ret
inc
stos
jl
jae
call
pop
inc
xchg
ljmp
jbe
ss
push
sti
les
subb
add
push
push
orl
lods
scas
clc
or
and
jo
jle
xchg
inc
add
icebp
lea
sbb
adc
adc
mov
dec
cmp
and
adc
jnp
jne
scas
in
jmp
cmp
dec
inc
inc
or
jne
xchg
mov
mov
add
push
sar
loopne
add
hlt
lea
into
or
je
mov
and
and
lock
cmp
cld
jmp
mov
cmpl
sbb
ret
jmp
push
dec
insb
pop
push
inc
addb
jae
sbb
sbb
insb
sti
or
out
int
pusha
push
and
imul
insb
fwait
inc
adc
xor
jno
push
pusha
jmp
inc
push
pop
push
outsl
add
dec
push
les
add
andb
dec
adc
add
shll
add
and
push
and
mov
mov
or
xor
xchg
in
js
into
mov
in
pop
mov
mov
pop
mov
adc
jl
add
pop
pop
sbb
push
out
rcrb
fsub
pop
sbb
and
cld
adc
andb
and
push
cmp
daa
data16
add
sar
sarb
jg
popf
xor
adc
mov
adc
insl
stc
add
sub
xor
mov
add
dec
inc
push
push
fmuls
insb
push
scas
cld
jmp
sar
and
shl
add
and
xorl
push
adc
xor
leave
lcall
hlt
inc
adcl
xchg
pop
ret
fs
xorl
add
adc
jb
xchg
xorl
push
ret
pop
sarb
push
insl
push
mov
inc
in
push
insb
pop
cli
or
xor
ds
mov
jne
mov
adc
adcl
sub
mov
and
shlb
add
add
mov
jmp
scas
pop
notb
adc
popa
and
movsb
aad
es
fsubrs
mull
cmp
out
mov
test
ljmp
mov
jmp
push
xlat
inc
mov
push
xor
int
pop
lock
rcrb
dec
lock
mov
add
dec
mov
or
hlt
or
loopne
or
xor
not
push
mov
inc
rol
filds
jle
add
enter
les
xor
enter
pop
xchg
dec
add
ret
sub
xchg
push
jge
add
jmp
sub
push
sbb
je
jg
jg
adc
and
inc
leave
rorb
pusha
jo
inc
daa
ss
dec
cmp
add
adc
cltd
dec
inc
loopne
sub
sub
add
push
cmp
roll
scas
mov
cmp
je
sub
roll
push
push
jo
push
inc
add
shl
out
push
push
cmpsb
jge
hlt
rep
ss
neg
shlb
and
mov
hlt
lods
lock
push
inc
cmpsl
jmp
scas
or
rorb
mov
adc
xchg
enter
cwtl
movsb
xor
lods
loop
and
in
mov
shrl
pusha
add
aad
push
mov
popa
push
mov
pop
mov
or
js
test
in
stos
pusha
dec
test
vfrczps
jmp
adc
jmp
cld
jnp
leave
jle
add
push
push
jae
popf
xor
push
imulb
push
sbb
mov
mov
iret
sti
std
outsb
movl
insb
cs
jae
ja
loopne
pop
je
sahf
lret
xor
sbb
adc
pop
test
adc
loope
movsb
xchg
loop
sub
outsl
pop
pop
hlt
mov
push
or
fnclex
sub
add
cmp
sbb
or
adc
outsl
push
push
dec
adc
push
and
jl
xor
push
pop
out
std
outsl
inc
or
jbe
jle
pushf
imul
ja
mov
jno
inc
test
sbb
push
cmp
ret
mov
or
mov
insl
push
movsb
or
dec
shlb
dec
test
adc
ja
into
and
call
mov
mov
dec
sub
dec
lret
ja
lods
add
sub
imul
and
mov
imul
in
lock
rep
add
xor
in
push
fdivl
adc
ss
and
test
ror
or
pusha
mov
fsts
mov
jmp
pop
mull
in
jle
aam
movsl
ja
add
loop
pop
push
add
sti
push
outsb
sub
add
or
and
mov
jno
lock
fsubl
sti
or
lock
test
icebp
cmp
lahf
mov
xlat
es
xor
pop
test
outsb
add
shll
aam
fsubrl
dec
fsub
push
out
insl
je
mov
cmpsb
faddp
pop
pop
lods
xchg
orb
movsl
xor
mov
fsubrs
and
pop
dec
mov
repz
cld
test
inc
iret
decl
dec
sbb
mov
push
dec
les
out
inc
push
jb
xor
xor
jnp
push
loope
push
fidivrl
dec
push
xor
inc
jbe
movsb
and
mov
fdivrs
push
mov
jmp
aas
add
or
ss
jmp
mov
or
and
and
push
popa
mov
scas
mov
mov
pop
lods
pop
add
aam
lcall
ret
and
mov
push
pop
lods
sub
and
sub
notl
nop
int3
push
movsb
push
or
and
and
or
idivb
jmp
adc
outsl
jo
repnz
inc
fldcw
jae
adc
outsb
movsl
or
imul
inc
push
xor
cmp
fsubrl
jnp
popf
mov
push
sub
dec
nop
inc
test
inc
stos
aam
lds
jecxz
je
push
lock
sub
ret
ret
stc
js
imul
aad
cmp
push
xor
mov
cld
cmp
inc
jmp
hlt
pop
punpcklwd
jne
imul
jl
push
shrb
add
sbb
dec
enter
adc
cmpsb
repnz
fsubs
popa
and
mov
pop
adc
xchg
push
mov
mov
inc
cwtl
dec
fcoml
mov
xor
outsb
outsl
stos
adc
or
add
mov
pop
fadds
or
ret
sub
mov
or
sub
sub
pop
enter
push
mov
leave
inc
or
inc
loopne
sbb
jg
arpl
int
movl
sbb
add
imul
rolb
and
outsl
xchg
es
addl
dec
dec
sub
movsl
cmc
inc
push
mov
add
daa
or
testb
je
sbb
sbb
in
sub
sub
dec
dec
inc
cmp
dec
adc
push
daa
andl
arpl
and
pop
jmp
lret
push
inc
ret
cmp
sbb
add
jg
insb
jae
insl
add
adc
mov
sub
das
insl
insl
mov
xor
add
inc
lret
or
inc
hlt
sub
mov
fs
rolb
mov
fstl
pushl
cmp
xor
loopne
lahf
mov
xchg
and
adc
out
jmp
jns
cmp
xlat
sub
push
in
adc
ret
lods
ret
dec
cmp
dec
jmp
pop
loopne
stc
dec
adc
and
lcall
add
psubusb
movsb
mov
sub
jmp
clc
or
or
xchg
je
fs
push
dec
aas
and
loopne
inc
test
mov
pop
xor
or
mov
inc
dec
sbb
mov
jo
iret
add
add
push
jl
push
add
loopne
mov
push
add
add
dec
or
add
mov
or
sbb
lods
adc
mov
add
sbb
orl
je
push
out
std
dec
jecxz
add
and
or
cs
push
jg
sti
fs
pop
jl
mov
leave
outsb
cwtl
cmp
xchg
xchg
leave
xchg
rcrl
lods
push
or
jecxz
and
and
mov
xchg
push
test
xchg
loopne
dec
inc
movl
int3
add
or
adc
or
or
mov
mov
mov
mov
aaa
mov
loope
fdivs
and
or
insb
inc
push
clc
push
jl
clc
add
add
jmp
mov
jo
mov
push
sbb
ficomps
cmpl
lods
sahf
pop
adc
jbe
jle
inc
or
sbb
jbe
cmp
inc
js
cmp
mov
or
adc
jo
mov
imul
test
addr16
and
gs
sbb
xor
mov
mov
ds
inc
cmpl
and
cmp
inc
push
pop
cmp
mov
movsb
push
stos
ret
mov
mov
aam
or
fimuls
cli
or
or
mov
ror
inc
dec
mov
test
or
push
test
and
mov
stos
rcr
or
test
or
and
inc
cld
cmp
cwtl
fldt
repnz
and
mov
sbb
sbb
repz
sti
inc
rcr
inc
xor
fisubrs
pop
je
and
pop
push
pop
cmpl
nop
rclb
jmp
inc
sub
jmp
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
add
dec
cld
sub
pop
add
inc
inc
or
dec
jge
nop
or
movsl
push
leave
adc
movsl
sub
mov
shl
out
push
xor
sbb
xchg
adc
mov
leave
mov
jns
rclb
fwait
ja
add
inc
jno
push
or
sbb
orb
xor
or
or
sub
cmp
clc
fsubrl
and
add
fldl
adc
aaa
adc
icebp
enter
outsl
mov
repz
fsubl
or
mov
push
pop
add
inc
mov
mov
pop
out
cmp
cli
filds
repnz
fwait
or
sbbb
mov
and
add
xchg
inc
rorb
lcall
pop
dec
mov
ss
test
aad
inc
or
xor
pop
push
cmp
jl
adcb
mov
jg
rorb
sub
mov
xchg
add
jecxz
orb
fucomp
mov
jne
clc
push
mov
out
mov
mov
decl
mov
jb
movsl
pushf
inc
popa
andl
jle
popa
mov
jb
imul
rcl
mov
mov
push
push
insb
icebp
cmp
scas
mov
daa
inc
mov
jne
pusha
cltd
stos
adc
adc
or
xor
and
fisubl
lret
xor
mov
stos
push
xchg
mov
jns
jne
jmp
insb
out
loop
frstpm(287
or
push
fmulp
push
push
arpl
adc
dec
lret
mov
add
dec
scas
pop
jle
daa
push
or
xchg
and
jmp
ljmp
das
pop
inc
mov
shrl
mov
jbe
xchg
andl
sbb
nop
jle
add
xchg
ja
push
jecxz
mov
lock
xchg
jo
push
cmp
push
lods
insl
sub
hlt
outsb
add
jle
aam
inc
push
pusha
cs
adc
in
orl
add
loopne
sbb
dec
in
jecxz
mov
adc
dec
jg
adc
orl
mov
lret
pop
hlt
adc
mov
mov
or
rclb
push
sbb
popa
rcll
or
sub
and
negb
std
jb
sub
pop
cmp
test
cwtl
mov
xor
cmp
testl
repnz
adc
call
or
ljmp
out
sbbl
jbe
inc
lret
cmc
sub
adc
ljmp
test
inc
dec
aaa
gs
nop
push
lret
add
jo
mov
inc
dec
and
pop
jo
call
sbb
adc
cmp
sbb
movsb
icebp
jb
testb
jo
adc
inc
add
les
add
mov
and
push
movb
and
lods
clc
out
mov
divb
cmp
jbe
mov
push
or
roll
cmpsb
fwait
les
mov
mov
rcll
call
and
sti
xchg
ret
adc
add
push
push
scas
or
mov
and
or
cmp
bound
jmp
jo
iret
adcl
pusha
js
clc
inc
pop
pop
push
cmp
rclb
nop
fwait
mov
add
sbb
pusha
mov
fistps
shr
inc
push
pop
push
push
inc
shr
rcr
shl
sahf
sub
or
div
pop
dec
adc
inc
out
out
fildll
out
jb
cmp
or
cmp
or
xor
cld
cmp
pusha
and
adc
or
fidivl
ficompl
dec
xchg
sub
iret
mov
imul
or
adc
push
or
add
test
das
add
jne
mov
adc
pop
into
fiaddl
dec
cmp
cmp
ljmp
inc
xchg
lods
wrmsr
mov
mov
shll
inc
pop
dec
sbb
push
dec
add
xor
rcr
bound
jnp
jle
jne
lea
js
mov
cmpsb
push
fldenv
add
in
pop
mov
ret
cmp
jae
mov
sub
test
ret
ret
jno
pop
cmp
popl
cmp
adc
cmp
xchg
mov
adc
or
add
sbb
sub
orl
mov
inc
xchg
cmpsb
lcall
add
dec
mov
mov
add
outsl
iret
mov
cld
sbb
subb
mov
rol
addl
and
push
test
push
sarb
push
push
test
jl
push
mov
push
adc
push
xor
sub
sahf
je
mov
xor
cli
adc
lea
lea
push
mov
jnp
test
insb
mov
cmp
sbb
mov
popl
lods
mov
push
cmp
and
adc
dec
enter
add
adc
adcb
or
xor
ret
movb
inc
out
dec
cs
and
pusha
add
pop
sbbb
sub
inc
jne
loop,pn
mov
clc
sbb
das
jge
test
rcrl
ljmp
push
inc
cmp
xor
cli
test
loopne
call
imul
push
sarl
imul
push
rorb
aam
xorb
andb
lods
xor
dec
pop
pusha
mov
or
enter
adc
ss
and
and
sub
daa
daa
daa
daa
xor
cmp
insl
dec
or
and
inc
dec
dec
dec
outsb
cmovs
xchg
xchg
or
add
xchg
xchg
fs
xchg
xchg
je
jl
dec
jnp
sbb
test
mov
xor
xor
movsb
test
sub
and
je
cmp
out
cmp
dec
fwait
add
loopne
push
stc
ss
xor
jle
fwait
nop
data16
call
adc
dec
adc
sbb
dec
dec
roll
adc
cld
and
std
sbb
mov
pop
sub
xchg
jnp
adc
add
scas
jg
ret
push
jae
xchg
cmp
shl
sub
jne
out
xor
call
lret
test
and
stos
sbb
fsts
xor
push
add
sbb
pop
cmp
adc
cmp
sbb
xchg
rclb
sahf
mov
nop
push
push
jo
xchg
stos
neg
mov
add
roll
xor
push
cmp
roll
pop
mov
add
lahf
or
add
and
inc
pusha
push
movsb
push
es
cmp
fsubs
add
xor
pop
inc
and
popa
pop
out
cmp
ss
pushf
test
je
sub
and
or
push
cmp
sarb
and
xchg
fcoms
add
fmuls
in
or
popf
in
mov
ficompl
dec
cmp
inc
cwtl
out
sbb
cmp
push
fdivl
sbb
dec
push
adc
sbbl
cmp
pushf
frstor
sub
nop
jecxz
nop
and
loopne
dec
shrb
loop
or
jno
xor
rorl
fs
lret
add
movsb
push
repz
adc
adc
cmp
inc
enter
add
push
leave
inc
cs
rorl
add
or
and
inc
push
cmp
and
movsl
xor
lods
lea
cld
xor
adc
lahf
out
jl
adc
add
jmp
cmpsb
dec
icebp
out
xor
mov
adc
rcl
add
cmp
mov
pop
xor
xor
shlb
mov
and
leave
sahf
push
int
push
into
incl
call
push
mov
cld
push
bound
push
pop
cli
push
ds
adc
pop
cmp
or
add
and
cmp
adc
shrb
xor
mov
push
jl
sbb
xor
push
add
push
mov
lods
ljmp
pop
dec
ss
addb
mov
xor
fwait
ret
jno
notb
xor
es
sbb
scas
push
xchg
mov
in
clc
jmp
fwait
mov
adc
pop
rcrl
pop
mov
cmpsb
into
add
mov
mov
shlb
mov
jp
lock
push
cmp
inc
cmp
popf
xor
mov
cld
fimull
sub
inc
insl
push
push
pop
mov
push
rolb
sahf
addl
out
out
std
mov
adc
pop
and
fcmovnbe
sti
mov
or
ret
nop
mov
outsl
mov
not
jne
aaa
bound
sbb
aam
adcl
imul
rorl
stos
cmp
ficoms
pop
inc
sbb
jmp
pop
xor
fsubr
test
sahf
push
inc
pushl
out
cli
pop
mov
jns
dec
push
cmc
out
dec
sub
andb
cltd
inc
push
pop
addl
pop
mov
mov
test
dec
adc
addr16
or
fistpl
stc
or
lods
mov
mov
sub
push
xor
push
hlt
mov
sbbb
sub
test
jmp
mov
add
cmp
fs
or
enter
sbb
addr16
dec
jns
xor
insb
orb
iret
inc
call
jmp
push
dec
cli
leave
cmp
push
jo
adcb
mov
inc
fisubrs
or
mov
sub
fcoms
popa
addl
push
leave
dec
sub
dec
jg
sarl
cmp
test
sahf
filds
and
cmpsb
int
lods
pop
sbb
test
loopne
out
rolb
jno
add
js
inc
mov
sarl
xchg
clc
xor
addl
dec
movl
int
je
outsl
push
push
jmp
inc
fnsave
lods
pop
add
pop
lock
test
aad
add
sub
cmp
sbb
fisttps
cmp
lahf
lods
subb
mov
in
js
sbb
dec
add
xchg
cmp
pop
or
inc
adc
ret
mov
push
xchg
jge
jbe
mov
andl
out
dec
cmp
jae
mov
pop
pushl
adc
cli
or
inc
mul
in
adc
mov
adc
mov
mov
fsubrs
sub
and
addb
add
bound
daa
jmp
push
jp
dec
incl
stos
dec
xor
lret
cmpb
dec
add
push
nop
cmp
cmp
rclb
inc
lods
push
subl
cmc
pop
push
or
loopne
cmp
adc
mov
and
mov
or
xor
xchg
add
push
sarl
dec
mov
lcall
mov
add
jbe
add
xchg
push
xchg
sub
inc
out
or
add
xchg
sarb
into
into
sub
jmp
scas
int
enter
fs
xchg
add
cltd
std
jno
loopne
adc
outsb
pop
lods
sub
test
out
add
mov
jo
lret
jmp
mov
xchg
call
sti
mull
jge
mov
fsubr
or
inc
pushl
lods
xor
loope
adc
cmpsb
xchg
cmpsb
les
ljmp
sub
lret
jl
jne
divl
fiadds
cmp
mov
jl
inc
cmpb
pop
es
sbb
sbb
dec
xorl
mov
pop
lahf
xor
das
out
in
dec
mov
cs
dec
mov
leave
inc
leave
je
movsl
jmp
shll
push
xor
mov
add
sub
cmp
in
fldt
clc
ljmp
cmp
sahf
les
call
or
jbe
adc
sbb
add
mov
dec
or
pop
jmp
push
jo
cmp
adc
into
repz
sub
xor
and
aam
adc
sub
mov
inc
and
std
mov
adc
xchg
jge
xchg
add
jno
sbb
enter
push
out
imulb
inc
or
sbb
push
and
mov
bound
ficomps
popf
mov
inc
scas
bound
in
fisubrl
and
stc
mov
mov
pop
inc
xor
ret
mov
adc
mov
fldl
mov
xor
idivb
nop
std
into
and
xor
hlt
pop
aam
lret
cmpb
out
mov
xorb
sub
add
xor
sbb
sub
mov
mov
rolb
sbb
mov
cmpsb
push
adc
push
cld
pop
add
dec
pop
inc
movb
and
arpl
scas
mov
loope
andl
outsl
add
xchg
bound
scas
sbb
jge
addr16
les
dec
pop
std
push
dec
push
mov
xchg
adcb
pop
xchg
sub
cmp
loopne
add
lret
test
sbb
leave
mov
jecxz
jl
pop
adcb
push
pop
push
movb
lods
pop
int3
pop
pop
push
dec
decl
cmp
call
pop
rcll
pop
popa
clc
je
xor
out
add
inc
imul
lcall
pop
cli
or
jle
js,pn
or
dec
cmp
insb
cwtl
int3
cld
inc
mov
jmp
lds
ficoml
lods
je
inc
cmp
jl
inc
test
add
js
movsb
jbe
iret
pop
sbb
push
add
into
dec
push
popa
add
and
movsl
jmp
mov
ds
and
int
jl
mov
push
and
mov
outsb
lcall
sub
fwait
mov
dec
orl
inc
or
ret
cwtl
and
adc
cmp
add
and
inc
jl
hlt
add
ret
push
add
xchg
pop
pop
stos
test
sbb
cmp
and
pop
add
xchg
add
sbb
sbbl
lock
andl
xor
dec
sub
rclb
fwait
inc
inc
cvtps2pi
jbe
push
mov
test
xor
cmp
xor
fmuls
pushf
fisttpl
lret
sub
cmp
out
adc
mov
int3
jne
mov
cmp
insb
leave
gs
cs
push
dec
sbb
jge
mov
fcoml
push
nop
or
dec
cmp
int
cmp
sbb
pop
sub
cmp
jno
mov
push
lret
fadds
int
notb
flds
jbe
jbe
mov
test
sub
add
pop
nop
mov
imul
das
and
loope
leave
inc
add
fcmovb
rorl
jl
hlt
sbb
or
or
adc
loopne
cmp
or
gs
adc
cmc
xor
inc
outsl
jae
inc
and
xor
popf
jne
or
movsl
sbb
je
hlt
mov
jmp
adc
add
dec
data16
xor
in
icebp
xchg
adc
and
pop
and
pop
push
dec
or
ror
je
adc
push
rorb
and
xchg
std
jmp
fwait
jne
xchg
loopne
cmp
xchg
ret
sbb
mov
mov
mov
xor
jg
popf
pushf
pop
sub
je
push
popf
ds
cmp
xchg
scas
mov
push
data16
pop
idiv
add
push
test
shlb
jecxz
lods
adc
inc
jo
lretw
divb
inc
and
or
iret
inc
jmp
push
or
and
xchg
or
pusha
jge
inc
mov
add
and
test
xor
rolb
and
lret
mov
adc
in
shl
not
xor
loope
xor
and
leave
and
shr
xchg
fcompl
in
shr
and
jno
and
and
xor
lock
test
adc
or
add
shlb
push
mov
add
je
sbb
js
je
or
or
sub
inc
jmp
mov
fucomp
outsl
incb
jmp
sbb
lock
and
mov
les
and
aaa
jecxz
in
data16
jge
add
or
shll
sub
ljmp
fdivl
or
and
jge
mov
std
or
sbb
loope
flds
and
pop
adc
mov
pusha
loope
pop
sub
xchg
adcb
and
adc
pop
imul
fucomp
aam
je
sbb
das
sbb
addr16
lods
test
in
adc
dec
in
or
add
add
test
fisttps
scas
fs
push
xor
cmp
push
add
or
sub
sarb
sti
xor
xchg
aam
pop
testl
jp
test
adc
dec
pop
sbb
jmp
push
and
inc
add
outsl
or
int
add
inc
flds
flds
mov
sbb
fisttpll
jecxz
sub
pop
jne
add
mov
pusha
out
cmpsb
ret
mov
or
test
jge
sub
rol
push
fsubrp
cltd
adcb
xchg
and
xorb
sbbb
lret
hlt
cs
or
cmp
aaa
ret
sbb
out
rcr
sbb
mov
fsubs
mov
add
sub
mov
outsb
pop
sub
jmp
sub
push
lcall
lcall
inc
test
int3
es
adc
div
add
repz
dec
jo
dec
xchg
mov
pop
rol
or
jmp
or
jp
fstpl
mov
and
jge
fnsave
repz
fdivl
addl
mov
repnz
notb
add
adc
dec
es
test
enter
mov
shrl
sbb
jp
dec
in
mov
sbb
shl
out
mov
stos
cmp
jp
push
sahf
jmp
pop
lock
movsb
fsubr
dec
mov
test
and
mov
and
inc
lods
inc
push
cwtl
pop
add
add
out
into
mov
push
add
xchg
fidivs
add
and
push
jmp
add
push
adc
pop
out
faddl
xorb
pop
movzbl
add
ljmp
sbb
mov
and
cmp
andb
push
xor
cmp
or
sbbb
adc
or
inc
lret
inc
add
jo
sub
hlt
mov
jle
jl
mov
out
call
ret
push
add
lods
fsubrp
ficompl
gs
adc
loopne
cmp
pop
fcmove
inc
or
or
stc
sub
or
push
jmp
sub
sub
dec
std
or
fidivl
sbb
mov
adcb
mov
inc
je,pn
pushl
lea
push
or
jae
inc
push
mov
fldenv
jbe
sub
dec
adc
dec
pop
xchg
jns
and
mov
call
out
test
jnp
xorb
adc
add
sbbl
test
mov
int3
pop
cld
and
scas
iret
push
cs
ja
rolb
rcrl
push
into
mov
lock
or
rcll
cltd
jge
and
jo
mov
or
mov
sub
sbb
push
hlt
cmp
ret
fmuls
mov
mov
flds
addl
cwtl
fwait
sub
nop
cmp
test
jnp
imul
pop
or
mov
cwtl
push
gs
or
xchg
roll
dec
jle
cmc
add
mov
push
add
pop
adc
inc
sbb
xor
testb
push
add
sbb
sub
shr
loop
pop
xor
aad
inc
add
fstl
mov
push
test
inc
fsts
mov
and
xor
push
mov
pop
testb
or
push
mov
add
sub
fwait
mov
adc
sbb
and
or
jle
or
js
call
mov
xlat
inc
leave
mov
pop
mov
mov
mov
rolb
inc
xchg
scas
push
ja
or
repnz
and
sbb
or
inc
fsubr
or
mov
orb
mov
mulb
sub
mov
in
cmc
pop
add
push
imul
jl
jbe
imul
test
test
push
data16
sahf
lods
ret
test
je
or
pop
adc
pusha
and
pop
dec
js
pop
insl
push
inc
and
mov
inc
cmpsb
data16
ja
mov
lahf
cmp
and
imul
adc
inc
outsb
or
add
pop
sbb
cld
movsl
pop
nop
faddl
mov
mov
cmpsl
xor
psubq
xchg
clc
push
jo
shr
mov
in
inc
sbb
mov
xchg
inc
mov
adc
enter
or
add
loope
insb
inc
adc
sub
js
inc
add
or
mov
push
push
nop
mov
xchg
adc
cmpw
inc
inc
inc
and
or
icebp
sub
dec
popl
add
aad
test
cmp
imul
pop
int3
fisubrs
imul
or
dec
or
les
add
in
sub
push
push
push
add
rolb
adc
enter
test
jne
push
add
push
xchg
mov
stos
stos
rorl
repnz
pop
pop
ja
mov
and
push
ret
jle
mov
pop
lds
loopne
add
sbb
push
dec
jns
dec
fwait
inc
xor
xchg
loopne
mov
pop
or
sub
inc
shl
add
pop
xor
loop
xchg
out
div
rolb
adcl
fisttpll
outsb
dec
cltd
insb
pop
and
mov
out
es
into
loopne
push
into
sarb
jbe
lea
xor
repnz
and
and
clc
sbb
aas
push
popa
mov
dec
cmp
and
mov
enter
incb
jae
adc
mov
adc
pop
mov
add
push
and
jge
push
pop
push
gs
loopne
inc
adc
js
inc
mov
sti
loopne
or
dec
stos
inc
repz
inc
fsubl
lar
push
aam
xor
cmp
push
imul
movsl
xor
xchg
add
je
cmp
and
push
cld
not
rclb
jl
rcrb
xor
mov
push
or
inc
sbb
jne
shl
push
xor
ret
mov
jl
inc
shl
jle
mov
cmp
jl
mov
test
sbb
jmp
bnd
popa
pop
addr16
sbb
dec
mov
hlt
push
jl
rolb
nop
pop
mov
loop
adc
push
lret
loop
cmp
paddw
cmc
data16
mov
jno
adc
movsb
loop
ss
dec
jns
inc
lock
or
or
xchg
lahf
push
add
jp
addr16
std
shl
sbb
mov
push
or
jl
sbb
mov
out
push
push
push
andl
stos
stos
mov
into
out
loop
mov
lea
and
jno
cmp
add
inc
sbb
jge
pop
and
nop
es
scas
inc
pop
dec
jmp
cmpsl
loopne
add
and
or
mov
xchg
in
adc
stc
and
inc
or
lret
pop
pop
xchg
add
lods
stc
lods
add
jb
sub
add
cmp
nop
inc
clc
inc
add
add
inc
xchg
add
or
stc
stos
cmp
dec
push
cs
or
jl
cmp
sbb
xchg
mov
add
bound
in
addr16
popl
inc
mov
nop
push
add
into
mov
les
lcall
movsb
mov
xchg
push
xor
cmp
test
jl
add
add
or
pop
sub
loop
jne
inc
jmp
mov
sub
mov
lock
das
add
mov
pop
mov
sub
cmp
ja
push
dec
ss
inc
shr
fs
mov
push
cmp
into
add
xchg
lods
pop
xchg
call
add
mov
mov
andb
jo
jmp
pop
ds
pop
fsubrl
jmp
andl
jmp
adc
push
lock
mov
adc
xchg
scas
adc
lods
sub
je
cmp
jle
mov
cmp
push
xor
push
test
jmp
dec
push
jno
ds
cli
lods
push
jbe
xor
xor
pushf
push
cmp
fs
jp
mov
dec
jno
lea
fdivs
mov
pop
out
fistl
pop
jge
pop
cmp
jno
idivl
jbe
nop
add
jne
bnd
js
jae
imul
sbb
in
cmp
jmp
and
sbb
fisubrl
call
mov
mov
repnz
ds
push
sub
lock
gs
orl
in
pop
imull
pop
jbe
and
shl
or
stc
sub
cmp
mov
xor
mov
mov
pushl
mov
jge
add
lea
fcos
sbbb
jbe
cmpb
jl
or
inc
testl
fisubrs
and
into
dec
cmpl
push
adc
jmp
testb
cld
je
cli
and
sub
lock
cmp
daa
call
jmp
mov
jmp
mov
sub
push
cwtl
jo
icebp
add
insl
push
xor
dec
mov
dec
ficompl
es
mov
push
mov
adc
shlb
push
jg
push
cwtl
jge
neg
add
mov
outsl
lcall
xlat
test
cmp
adc
cmp
adc
nop
sbb
jmp
ret
jno
mov
jge
jle
lock
xor
jne
inc
imul
notl
inc
jg
scas
inc
in
dec
test
lcall
mov
sbbl
les
pop
and
repz
mov
pop
add
or
enter
mov
mov
into
mov
mov
ret
and
push
in
and
rorb
out
mov
andl
adc
sbb
std
mov
or
or
inc
enter
pop
es
dec
sub
add
add
xor
jne
enter
mov
or
into
jne
outsl
push
lock
or
cmp
cmp
jne
lock
add
jne
push
pop
and
add
loop
cwtl
or
inc
shll
lret
les
push
adc
movsb
jl
popa
add
sub
sbb
cld
stos
icebp
ret
adc
lock
ja
push
adcl
insl
mov
add
sahf
sub
sub
loopne
xor
jg
add
add
or
aaa
push
clc
mov
jle
js
mov
shll
loopne
xor
bound
jmp
and
rcll
jne
sbbl
jg
or
adc
dec
dec
icebp
jge
mov
les
add
divb
popa
aad
adc
jmp
add
shrl
shl
shr
or
xchg
adc
sahf
dec
jne
dec
test
aam
shrl
aam
pop
cwtl
mov
mov
orl
adc
or
cmp
add
ficompl
mov
fdivs
sti
pop
insb
pop
dec
lock
in
fiadds
push
call
jnp
sbb
mov
mov
dec
notb
loopne
and
dec
sbb
jl
out
orb
cmpsl
ss
cmp
sub
add
lret
into
jmp
add
push
scas
jns
xlat
cmp
jae
jno
les
int3
roll
addb
stos
add
lret
das
sub
add
loopne
add
negb
push
push
jns
add
adc
les
cmp
bound
loopne
test
xchg
xchg
add
inc
push
add
push
aaa
or
repz
push
out
push
or
out
sahf
inc
shlb
lods
mov
daa
push
push
rcrl
loope
or
lcall
mov
pop
jne
cmp
add
mov
inc
mov
mov
mov
or
rorl
insb
pop
cmp
aad
mov
in
mov
xchg
sub
dec
pop
in
pop
sti
scas
sbb
xchg
adc
inc
cs
or
testb
stc
gs
or
decl
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
push
lock
inc
mul
pop
add
cmp
call
sub
xor
cmc
sub
cmp
je
out
clc
xchg
sub
movsl
in
rol
mov
xor
add
sub
xor
adc
sti
repz
nop
adc
in
xor
loope
pop
cmpsl
adc
gs
in
das
jmp
push
push
pop
aaa
sbb
loopne
testb
sub
add
notb
mov
rolb
shlb
or
add
xchg
mov
mov
push
pop
loopew
dec
je
setg
sub
clc
clc
add
mov
and
push
fidivs
sbb
aas
sub
movb
xchg
jge
inc
jle
add
push
ficoml
sub
das
xor
mov
es
sbb
jp
sahf
pop
add
add
call
dec
std
mov
add
or
jecxz
int
or
pop
or
lea
mov
mov
out
rcrb
cmp
add
subb
fs
negb
jns
stos
idiv
xor
push
or
mov
jo
sub
add
adc
fimuls
ljmp
inc
imul
dec
push
jb
push
scas
xor
rcrb
cmpsb
adcl
rcr
and
and
adc
push
xchg
out
andl
ret
jbe
xchg
clc
dec
shlb
adc
jge
mov
rcll
mov
lods
movsb
in
pop
pop
jg
cmp
xor
enter
movsb
xchg
push
loopne
sbb
pop
call
daa
shl
gs
cmp
cs
jae
jno
das
add
mov
jl
dec
fs
xor
sbb
mov
call
jno
pop
pushf
imul
pop
xchg
in
arpl
nop
or
iret
or
jge
xchg
je
jl
rorb
add
adc
jne
roll
add
shlb
adc
enter
sub
and
mov
push
je
or
add
or
add
dec
sar
lea
push
lock
add
lock
sub
ret
repz
adc
pop
push
test
and
inc
enter
lea
js
push
sub
push
dec
scas
incl
leave
and
add
cmpsb
std
add
ret
movb
push
and
ss
jmp
fwait
sbb
inc
neg
sbb
jecxz
mov
lock
ret
daa
xor
or
jne
pop
adc
sahf
mov
jmp
out
test
xor
scas
test
xor
js
inc
aam
or
adc
xor
xlat
or
jg
ja
add
jbe
sub
cmpsb
lret
push
sub
adc
ss
or
mov
sbb
les
pushf
data16
loopne
loopne
mov
ret
mov
add
add
shrd
push
jle
push
daa
xor
cmp
ss
scas
scas
xor
mov
or
lea
nop
stc
inc
add
pop
hlt
xor
out
xchg
clc
sub
mov
inc
xor
or
incb
push
shrb
sbb
flds
add
pushf
popa
fsub
test
adc
icebp
mov
dec
and
pop
and
or
pop
sbb
js
jg
mov
in
push
sub
or
inc
adc
neg
cmp
mov
lock
or
iret
inc
dec
inc
shll
sbb
pop
sub
xor
jbe
adc
add
mov
popa
jge
add
push
jg
lods
jb
xor
dec
pop
rorb
or
or
loope
lcall
lods
lret
rcrb
orl
mov
pop
es
mov
adc
inc
add
je
lods
inc
jecxz
int
sbb
mov
adc
loopne
test
or
testl
inc
mov
mov
add
orl
and
movsl
dec
hlt
dec
add
jge
mov
jne
inc
add
int3
jl
data16
mov
pop
xor
xor
ficompl
out
into
mov
pusha
bound
pushf
out
add
mov
xor
enter
je
push
shlb
and
cmp
add
push
pushf
push
xor
stos
ficoms
dec
test
sub
mov
add
mov
adc
or
push
jmp
pusha
mov
dec
xchg
jl
lods
sub
and
out
mov
mov
inc
hlt
mov
rol
push
cmovae
ljmp
mov
inc
mov
jge,pt
outsb
outsb
mov
pop
or
pop
data16
xchg
cmpsl
sbb
loope
add
inc
popa
je
inc
je
dec
or
in
in
sbb
clc
jmp
add
add
or
repnz
pop
bound
or
cmp
push
aaa
mov
inc
and
add
movsb
aam
sbb
fldl
fdivl
fmull
pusha
jbe
add
push
pop
clc
fstps
or
cmc
jno
std
push
jl
jp
shrl
mov
loop
dec
rol
ret
in
das
inc
bound
and
insb
pop
lock
arpl
inc
cmp
test
push
push
mov
xor
add
or
push
jb
sbb
cmp
icebp
jp
sbb
and
and
xor
sub
add
hlt
sub
movsl
fs
or
pusha
dec
jmp
sahf
sbb
pop
lods
fcom
shrl
lahf
xor
xchg
pop
and
lahf
test
push
push
pop
cmp
popf
ret
or
push
pusha
int
push
mov
sarb
mov
into
sub
push
fcmovu
sahf
es
or
cmp
imul
pop
sub
xchg
ds
sub
mov
pop
cmp
pop
jp
mov
adc
mov
sub
sbb
or
pop
cmp
bound
cmpl
lods
int3
cmpsb
push
or
push
jne
sbbl
js
popa
jae
push
adcb
add
adc
and
imul
fidivrl
and
sarb
mov
test
or
sbb
pop
inc
cmp
lret
add
mov
sub
fs
pusha
mov
cmp
pop
adc
push
dec
or
or
jnp
sbb
sub
mov
add
or
jl
cmp
xorb
inc
mov
mov
xor
je
aaa
mov
push
loopne
gs
sub
and
dec
jne
push
push
jmp
jle
test
add
mov
je
push
incl
ss
cs
addb
fs
sbb
and
fst
dec
sarl
jne
test
les
or
sbb
hlt
add
test
fimuls
adc
sbb
ss
sbb
sbb
add
jne
data16
incl
or
mull
fnstcw
jl
add
adcl
test
adc
sub
js
sbb
add
or
add
lods
xor
sub
mov
movb
movsl
cmpb
push
xchg
test
cmc
iret
mov
shrb
jp
sbbb
or
mov
add
adc
xor
divl
repz
shl
and
or
inc
sbb
cmp
jge
notl
shll
pop
cltd
sbb
sbb
dec
sbb
aaa
lret
arpl
loopne
ret
add
call
sub
push
mov
xchg
and
xor
sbbb
push
cmp
sbb
inc
nop
xchg
jmp
mov
adc
test
ffree
mov
and
cmp
shlb
push
push
mov
mov
push
push
mov
aam
push
lahf
xchg
add
outsb
pop
mov
mov
jmp
or
lret
cld
jo
inc
add
or
pop
add
push
sbb
pop
jmp
adc
enter
rcrl
addb
in
adc
and
pop
insb
pop
mov
fisubrs
mov
push
shlb
sbb
mov
push
sub
ljmp
lcall
push
lea
lods
sub
dec
aaa
xchg
mov
dec
movsb
cmp
jmp
adc
adc
and
sbb
adc
test
leave
rorb
std
jg
data16
ljmp
pop
test
jno
stos
push
add
ret
mov
fimuls
nop
adc
fs
inc
adc
push
inc
cmpsb
cwtl
aad
xlat
cwtl
lods
rcrb
inc
fld
mov
pop
jmp
inc
repnz
lea
fwait
fs
sub
pop
or
fbstp
jno
nop
addl
lret
shll
popa
fisubrl
mov
lret
dec
jo
loope
push
cmp
adc
dec
dec
jecxz
out
pop
xor
inc
dec
jo
jmp
pushf
sbb
hlt
and
sbb
or
cs
sbb
outsl
cmp
aaa
xchg
cmp
adc
ja
xchg
ja
jo
inc
inc
or
or
dec
xor
test
cmc
shlb
push
and
ror
adc
add
jnp
lret
adc
adc
shr
add
or
mov
add
shr
test
jg
shr
or
mov
push
push
int3
mov
bound
scas
push
bound
sti
in
stos
mov
sbbb
push
sbb
and
js
rcr
or
fldln2
cwtl
add
int3
cld
push
push
idivl
push
dec
adc
fnstcw
inc
jl
add
mov
ds
ja
inc
dec
add
lea
mov
shr
push
mov
mov
adc
sub
push
mov
xor
mov
inc
sub
add
xchg
and
lret
cmp
iret
adc
out
or
sar
inc
jbe
sbb
dec
pop
daa
push
pop
rcr
jle
in
jmp
cmp
shr
adc
xchg
or
shl
andl
adc
aad
dec
shr
test
add
ds
cli
loopne
sbbl
int
loope
test
adc
ficoml
dec
call
dec
sbb
shrb
sbb
push
xor
movsb
ficoml
fmul
popa
mov
mov
xor
insb
out
mulb
mov
call
test
add
add
call
or
ss
adc
adc
mov
lret
mov
cmpsb
mov
sbb
sbb
fldl
aam
and
mov
jle
subl
ja
cmp
pusha
xor
or
or
jle
cmp
out
push
mov
pop
std
fildll
je
cmp
lock
jl
cmpb
jl
push
outsb
mov
cmp
adc
xor
inc
xchg
adc
xchg
push
fsts
push
and
aad
cli
mov
rcll
inc
push
push
mov
push
push
dec
pop
add
mov
or
stos
xor
cld
aam
push
or
or
adc
xor
jmp
or
pushf
pop
cmp
jbe
scas
shrb
fs
and
shl
or
or
sbb
jne
xlat
fnstenv
pop
hlt
lret
add
shll
jmp
je
mov
shlb
scas
or
xor
xor
mov
or
arpl
aam
adc
mov
jne,pn
ljmp
dec
outsb
rorb
xor
bound
hlt
aam
push
jp
les
fs
and
sbb
pop
stos
fidivl
push
xor
in
incb
adc
fdiv
fiaddl
or
adc
sbb
pop
iret
and
sbb
sbb
fnstenv
aad
into
jl
xchg
sbb
fcoms
inc
movsl
jmp
fcomi
gs
dec
sbb
adc
mov
nop
int3
sbb
dec
jns
fisttpl
jg
mov
pop
ret
inc
jae
lds
jae
lods
rcl
ljmp
jge
loope
shr
mov
das
inc
mov
jmp
mov
inc
jge
mul
cld
lock
je
push
rclb
mov
or
add
rcl
addr16
adc
sbb
xor
mov
adc
insb
add
scas
nop
and
hlt
inc
ss
xchg
pop
mov
cli
sbb
negb
jp
je
push
sbb
into
jbe
jns
mov
shr
bound
adc
push
mov
jle
movsb
aas
daa
ss
push
or
adc
sub
and
sbb
jo
fwait
les
mov
adc
sbb
insl
ret
lods
xor
js
sbb
adc
jo
inc
or
aam
adc
cmpsb
out
or
inc
and
pushl
dec
out
ss
sahf
lret
inc
add
adc
movsl
ficompl
leave
jne
cmp
testb
std
bound
or
je
dec
clc
das
insl
push
mov
mov
mov
jmp
es
mov
je
test
aas
out
lcall
jb
cmp
ja
add
cmp
adc
cmp
push
sti
xchg
shlb
xchg
xor
adc
mov
jb
idivl
pop
mov
pop
add
push
inc
pop
push
adc
les
or
xchg
cmp
push
mov
push
xor
pop
outsl
add
or
fidivrs
or
ret
jmp
not
scas
mov
call
fmuls
mov
mov
or
push
loopnew
int
and
lret
inc
push
pop
leave
add
and
sbb
push
and
cmpsl
jo
adc
cltd
or
push
jo
cld
xor
mov
hlt
fs
mov
dec
outsl
pop
sahf
mov
add
adcl
sub
rolb
mov
outsb
out
int
pop
cs
lea
pop
inc
push
inc
mov
jle
movsb
sub
xchg
sub
and
movsb
rcrb
dec
cld
and
push
imul
add
arpl
adc
addps
fistps
xor
orl
nop
jg
mov
movb
push
rcl
rcl
lahf
out
sahf
aad
xlat
fcomp
and
sar
inc
rorb
data16
inc
add
fwait
js
and
adc
sub
add
idivb
incb
mov
or
adc
mov
push
push
mov
out
and
dec
pop
sub
push
jb
adc
maskmovq
in
jo
loope
push
call
cmp
cmp
das
or
push
xorb
hlt
inc
test
and
add
add
icebp
sbb
pop
movsb
mov
imul
imul
lea
sar
add
imul
lea
sar
inc
mov
or
movswl
loopne
push
insb
sbb
pop
sub
cmp
out
loop
adc
cmp
mov
test
orb
fcoml
mov
adc
sti
add
aad
ret
stos
pushf
rorb
mov
push
jp
mov
outsb
add
push
testb
dec
or
leave
adc
or
test
hlt
pop
add
test
fcmovu
popa
roll
mov
lea
pop
incb
xor
sbb
mov
jae
xchg
ja
add
add
dec
movsb
and
test
jb
and
add
dec
lods
sarl
or
lea
add
popf
sub
adc
sbb
add
mov
sbb
loopne
or
mov
dec
xchg
mov
sub
or
dec
scas
sub
andl
or
ret
push
les
inc
add
push
addl
mov
jge
jl
dec
rcll
add
and
rorb
or
jle
jle
inc
fadds
call
shl
rolb
rolb
xor
or
and
add
jno
movsl
les
ret
push
lret
lcall
test
push
xchg
sbb
jo
dec
inc
lods
ss
shrl
shlb
shl
jmp
lret
dec
repnz
push
pop
adc
lock
imul
mul
test
inc
cli
testb
inc
xchg
repnz
pop
adc
addr16
sbb
and
loopne
notb
stos
xchg
lret
mov
add
xchg
test
test
adc
dec
data16
pop
xor
js
js
xor
mov
rolb
imul
idivb
dec
jae
inc
mov
nop
ret
sbb
pop
jnp
add
daa
pop
repnz
mov
sub
loop
out
int3
shll
mov
test
inc
cmp
or
andb
or
sbb
mov
push
dec
or
daa
pop
inc
shlb
fdivrs
aam
mov
jo
inc
inc
test
dec
ss
ret
push
cmp
les
lcall
pusha
add
dec
xor
pop
mov
mov
xchg
cmpsl
call
fcmovu
mov
xor
xor
dec
push
adc
inc
add
lods
rolb
inc
jl
and
xchg
push
inc
out
sbb
call
notb
negb
test
dec
gs
lock
out
or
add
enter
adc
or
lock
movsb
adc
cmp
jne
inc
pushf
xchg
movsb
jne
sub
push
in
subb
dec
add
mov
adc
push
enter
sub
pop
jbe
pop
sub
fildl
pop
movb
inc
mov
push
add
rol
or
nop
sbb
dec
adc
inc
fisttps
out
adc
cmp
or
gs
pop
shr
push
hlt
cmp
mov
test
rorl
test
jne
sbb
adc
xor
fiadds
inc
imul
rcrl
loopne
mov
mov
loopne
fadds
pop
add
and
and
add
sbb
rol
cltd
into
xchg
out
adc
pushf
lret
sbb
and
xchg
mov
add
or
mov
add
lahf
stos
xchg
or
dec
cs
add
sbb
ljmp
push
mov
clc
js
xchg
add
fiaddl
inc
dec
enter
test
push
shlb
add
pop
add
add
add
mov
add
in
into
or
mov
inc
lock
pop
in
rol
adc
dec
nop
dec
mov
dec
cmp
jge
pop
cmc
cmpsl
push
sub
cmpb
or
add
dec
cmp
jae
mov
add
dec
add
add
fadds
add
adc
shll
mov
lock
jmp
add
or
dec
xor
mov
adc
and
add
push
add
cwtl
jbe
add
or
or
test
and
ret
dec
out
push
xor
adc
add
push
mov
loop
lea
or
sub
and
adc
ficompl
jmp
iret
data16
hlt
lea
add
or
push
test
scas
add
push
ret
cmp
adc
fiadds
sub
mov
push
imul
add
mov
mov
test
inc
pop
mov
mov
iret
movsb
repnz
lret
into
pusha
inc
jg
push
into
mov
rcrl
rcrb
cmpps
pop
pop
shll
or
or
ljmp
or
movsl
popf
loope
adc
lret
or
out
push
imul
push
or
inc
add
inc
or
mov
mov
mov
iret
enter
xlat
dec
pop
scas
push
add
enter
pop
and
ret
mov
and
fs
js
adc
cmp
add
insb
in
aas
movsb
push
push
sub
fldcw
mov
sub
addb
or
push
xor
add
dec
inc
jo
xchg
pushf
movsb
xor
ret
inc
cmpsb
dec
add
or
pop
into
in
stmxcsr
fiaddl
testl
ss
or
add
sbb
add
add
xorl
into
out
stc
mov
mov
xor
repnz
push
inc
jg
into
into
xor
mov
and
mov
pop
sub
push
pop
nop
movsb
sarl
cwtl
pop
mov
nop
int3
or
shlb
or
mov
pop
adc
clc
sub
pop
push
sub
add
leave
lahf
sbb
out
pop
test
add
xchg
addr16
add
add
inc
mov
sbb
je
pop
inc
lcall
xchg
sub
adcl
sub
sbb
lret
jb
lret
push
xor
xchg
push
adc
push
push
cmpsb
mov
push
dec
xchg
mov
pop
shll
insb
pop
popa
mov
lret
mov
push
test
push
idivb
adc
push
and
vcvtsd2si
mov
movsb
punpcklbw
inc
ret
fisubrs
fwait
adc
sbb
xlat
jle
and
daa
mov
dec
or
and
adc
xchg
xor
sarb
xor
ljmp
or
fnstenv
dec
stc
sbb
inc
and
dec
scas
dec
jno
rorl
push
aad
movsb
rorb
aam
xlat
addb
adc
scas
les
cwtl
orb
shlb
push
lock
dec
sub
inc
push
or
add
dec
addb
outsb
ds
je
adc
rorb
lret
adc
jbe
inc
inc
fsubrp
jmp
pop
sbb
ret
ficoms
imul
mov
and
mov
jo
sub
xchg
lock
into
test
push
or
clc
pusha
sbb
sub
cmp
mov
add
sbb
movsl
xor
je
cmp
mov
cmp
mov
jnp
rclb
inc
and
loopne
test
inc
imul
dec
and
inc
jp
pusha
aam
cmp
sbb
sbb
jle
pushl
xchg
inc
repnz
test
out
mov
pop
push
xor
mov
call
and
cmp
xchg
fcoms
lea
push
and
lock
jge
shlb
and
int3
cmpb
mov
sub
je
mov
adc
push
hlt
dec
mov
mov
dec
xchg
inc
sbb
je
stos
dec
clc
incl
sbb
in
hlt
add
in
mov
xor
sub
inc
push
imul
push
imul
rorb
jb
and
or
xor
adc
lods
push
inc
and
xor
dec
add
std
adc
adc
bound
push
add
or
sub
outsb
mov
pusha
add
jae
inc
mov
and
xlat
leave
test
pop
movsl
test
or
je
pop
ds
dec
mov
adc
clc
sbb
sub
sub
lret
xorl
dec
inc
pop
or
pop
sub
jne
push
inc
cmp
popl
lods
movsb
jae
cmp
ret
jmp
imul
add
std
mov
mov
fisubrl
stos
push
mov
out
mov
push
or
push
rcrl
fmul
outsb
pop
mov
sub
outsb
xchg
mov
cmp
adc
sbb
xchg
loop
fsubs
add
out
push
pop
push
xchg
clc
mov
or
push
adc
lretw
enter
inc
pusha
jns
cmp
imul
dec
shll
push
add
testb
test
mov
fimuls
or
cwtl
ret
call
mov
or
add
push
jl
je
lea
loop
jne
ss
int3
jge
rol
adc
xor
fstpt
inc
dec
mov
xchg
nop
mov
push
and
fbld
stos
loopne
jmp
dec
es
das
movsb
scas
cmp
add
ss
sbb
js
scas
sub
or
cmp
rorb
inc
and
leave
inc
pusha
jo
push
rclb
sbb
inc
rcrl
imul
push
das
push
mov
push
cmp
movb
sbb
ss
mov
push
adc
sbb
test
lods
ljmp
lea
lock
cmpsb
inc
hlt
xor
ret
push
mov
subl
cmpsl
push
adc
push
mov
out
push
testb
xorb
inc
ds
push
mov
mov
sub
mov
aad
mov
pop
mov
inc
sbb
xlat
add
insl
lock
pop
adc
outsl
dec
subb
pop
add
push
and
daa
xor
or
and
imul
andl
add
dec
sbb
lods
xchg
inc
cmp
jecxz
xor
inc
mov
loopne
mov
sub
loop
and
ret
sbb
mov
cltd
jne
mov
test
sub
and
aaa
push
push
aam
add
pop
mov
lods
aaa
pop
je
daa
subb
scas
ds
jbe
fildll
sub
iret
sub
test
jns
fstps
push
xor
mov
shrb
xchg
jmp
cmp
fcomps
imul
ficoml
test
or
mov
cmpsb
pop
in
dec
mov
push
add
in
adc
bound
add
cmpsb
inc
bndstx
dec
in
lock
adc
mov
cs
movsl
test
mov
sbb
ret
fsubl
sub
lock
in
push
fs
cmpsb
insl
inc
gs
loopne
fadd
clc
mov
in
dec
insb
mov
aad
jo
cmp
push
xor
pusha
pop
imul
lahf
xor
outsl
shrb
dec
xor
mov
mov
add
rcrb
xchg
shlb
shlb
in
test
dec
adc
push
mov
inc
mov
orl
jg
pop
call
nop
pop
or
imul
add
jle
push
les
or
aam
xor
pop
mov
ret
pop
add
dec
pop
fsub
ret
sub
test
test
in
and
push
aam
xorl
xor
push
in
adc
mov
xor
sbb
jne
leave
in
cmp
movsl
int3
inc
inc
adc
xchg
iret
in
cmc
mov
add
cld
repz
or
add
rol
sbb
mov
xchg
add
pop
xor
mov
push
imul
cmp
in
lea
pusha
push
jae
ss
xchg
sub
push
pusha
fwait
cmpsl
dec
fisubl
sbb
pop
dec
sub
sub
xchg
movsl
mov
jecxz
test
call
xchg
and
cld
addr16
in
stc
adc
test
aam
push
xlat
test
popa
ss
dec
or
in
cmpsb
in
adc
shrd
shll
cmp
popa
outsl
imul
xor
mov
in
jns
push
cmp
dec
push
inc
nop
dec
jbe
hlt
add
jp
stos
pop
test
jne
ja
test
arpl
rclb
xchg
mov
inc
hlt
lahf
inc
push
jnp
insb
stos
fisubl
add
test
gs
and
hlt
dec
or
xchg
lock
and
xor
rorb
loope
xor
stos
cmp
xchg
loopne
int3
jb
insl
int3
cltd
aam
mov
es
cmp
cmp
inc
out
shrb
ret
dec
mov
xor
xchg
imul
and
dec
es
sub
xor
es
cmp
es
fs
inc
dec
fs
jne
insb
add
lods
mov
cs
fistpl
inc
add
mov
push
enter
mov
xchg
sbb
sbb
sbbl
in
loopne
lret
clc
dec
or
dec
hlt
nop
inc
and
inc
jae
clc
mov
lock
loop
stos
push
sub
leave
push
add
scas
pushf
in
je
sub
jl
sub
je
inc
push
pop
movl
fmull
dec
int3
aad
or
in
and
rol
and
sbb
add
xor
mov
call
gs
lods
fwait
enter
aam
in
xor
fadds
rolb
call
test
cltd
push
aad
push
ja
lahf
dec
imul
xor
insl
mov
in
test
mov
mov
push
hlt
pop
fidivl
jmp
icebp
add
shll
and
lock
mov
mov
cmpb
jg
test
cmp
fisubrl
leave
popf
cwtl
or
lock
pushf
in
sub
jne
mov
jmp
psubsb
popa
pop
enter
fcomps
insl
insl
add
filds
dec
pop
insl
pop
aam
and
xor
pop
add
in
mov
adc
pop
xor
call
in
sub
pop
fcoms
daa
pop
and
rorl
push
xorl
mov
out
xor
and
les
popa
sbb
add
data16
pop
sbb
push
es
in
push
dec
add
mov
xchg
sbb
lret
xchg
cli
pushf
jnp
jno
pop
mov
outsl
jnp
sub
shrl
loopne
add
ret
fwait
jbe
out
imul
fmul
and
mov
out
push
sub
add
jge
popa
dec
and
jno
jecxz
pop
add
adc
test
les
jo
cmp
jns
or
lock
mov
shrd
dec
mov
dec
dec
dec
int3
rcl
mov
fsts
sbb
sub
sbb
loope
jl
leave
cwtl
in
ret
sbb
add
scas
adc
sbb
xchg
pop
sbb
popa
or
jae
mov
xor
pop
pop
jae
mov
fmul
cwtl
ljmp
shll
or
dec
pop
push
inc
push
or
or
or
nop
je
and
adc
mov
je
fwait
xor
enter
mov
ficoms
or
movsl
or
adc
mov
fsubs
daa
ret
aaa
mov
jne
sub
xchg
ss
aaa
call
xor
mov
lds
std
inc
outsb
xorb
or
sti
test
inc
push
mov
lods
mov
inc
fidivs
les
add
ljmp
pop
roll
faddl
and
fisttps
add
and
shlb
push
ja
pusha
sbb
push
ss
jl
in
jbe
fisttps
sub
inc
shrl
and
mov
es
xchg
out
push
adc
xchg
pop
outsb
rcrl
xchg
jo
jno
xchg
imul
xchg
call
sub
js
add
sbb
xchg
dec
add
and
or
push
rcll
out
sub
mov
xor
or
and
lahf
in
mov
cmp
das
mov
add
or
fmuls
jbe
cmp
add
xlat
sub
xchg
mov
cmpsl
lock
mov
movsb
nop
add
ret
popf
inc
addl
leave
add
insl
in
sbb
pop
jge
jp
rcll
pop
pop
es
add
in
in
inc
cs
fdivr
mov
orb
lods
out
cmpsb
add
lods
dec
lock
nop
or
jmp
sub
sbb
and
sbb
pop
inc
pop
and
mov
addb
addb
sbbb
or
fisttps
in
call
adc
inc
xchg
cwtl
jnp
or
cmp
nop
or
or
cmp
nop
inc
or
or
xchg
inc
push
or
mov
add
mov
jl
xor
inc
in
aaa
call
loopne
pop
jb
pop
pop
jge
pop
aam
cmp
arpl
or
in
bound
ja
in
pop
or
xchg
mov
jle
movsl
mov
test
enter
xchg
xchg
xchg
sub
fcomi
sub
mov
sub
in
push
scas
data16
sarb
pop
mov
jle
jne
dec
fsubl
xchg
jl
xor
insl
mov
addl
mov
test
adc
or
insb
push
cwtl
add
rolb
movsb
xchg
lods
nop
push
xchg
dec
or
popf
test
lock
and
inc
xchg
call
imul
push
aad
aam
call
and
pop
push
add
inc
cld
xchg
rorb
or
cmp
xor
and
test
fadds
jns
nop
or
arpl
or
adc
inc
sbb
mov
fisttpll
xor
fs
inc
inc
movsb
movsl
and
xchg
rorl
xlat
lods
daa
mov
push
lods
mov
int3
enter
daa
sarb
mov
cwtl
push
sub
daa
mov
mov
nop
dec
outsl
movsb
inc
movsl
addb
adc
mov
and
pop
push
test
jae
add
push
das
ret
mov
in
or
dec
ret
and
imul
outsb
stos
xchg
test
movsb
mov
nop
mov
mov
add
movsb
dec
test
xchg
sub
mov
mov
mov
mov
dec
mov
repz
jb
adc
jne
rcll
inc
jg
js
or
fadd
rolb
add
inc
pusha
push
xor
and
cmpsb
in
sub
xchg
movsb
push
subl
adc
enter
xor
xor
jmp
nop
add
cmp
nop
lock
pop
inc
sub
adc
mov
push
inc
movsb
mov
dec
mov
adcb
test
adc
add
mov
jmp
movsb
mov
ja
mov
aas
cmovge
aam
shlb
rcl
mov
rolb
out
mov
inc
cmpsl
pop
xlat
pop
mov
faddl
xor
fdivl
push
je
fldenv
fcoms
mov
test
insb
lock
xchg
addl
and
mov
adc
sub
and
fsubs
loope
add
xchg
ret
jae
aaa
in
add
sti
movsl
or
push
or
loopne
enter
inc
hlt
push
pop
adc
call
icebp
push
add
paddsb
add
or
out
mov
iret
int3
lahf
mov
inc
mov
fdivl
out
ret
mov
mov
sbb
in
int
cmp
adc
loope
cmpl
lds
pop
aas
fmuls
push
sub
data16
das
inc
lock
inc
lock
mov
cmp
lret
shll
inc
sub
aam
popl
adc
test
pop
popa
xlat
sbb
les
jns
xchg
and
add
fwait
mov
mov
or
pop
shll
add
rcr
sti
or
mov
in
sti
lods
jg
repnz
out
cmp
in
fmuls
insb
mov
aas
test
adc
out
cmp
rclb
ret
enter
pop
jle
je
rorb
fsubs
and
cmp
pushf
fisubrs
mov
jmp
das
fcoms
jne
lds
xor
jb
in
int3
enter
inc
add
mov
cmpsl
fidivs
dec
xchg
fists
mov
sbb
mov
xor
test
pop
out
loopne
mov
xchg
and
add
sub
adc
sub
cwtl
mov
movsb
repnz
aad
js
add
and
rorl
add
xor
or
sbb
push
out
jg
pop
sub
mov
or
xchg
inc
pop
and
in
inc
adc
mov
pop
adc
dec
or
push
psubsb
and
mov
scas
sbb
mov
lcall
push
xor
enter
inc
lahf
pusha
xchg
pop
adc
daa
sbb
push
mov
push
lds
lock
xchg
faddl
inc
in
test
xor
adc
sbb
lock
add
pop
push
mov
and
inc
dec
sub
mov
or
mov
xor
add
in
test
in
xor
cwtl
pop
pop
push
adc
enter
imul
rorb
or
hlt
adc
push
pop
dec
mov
xor
and
mov
fbstp
aad
daa
ret
xor
and
enter
test
shlb
mov
add
pusha
jmp
sub
cwtl
mov
adc
jo
xchg
mov
test
aas
call
mov
dec
inc
pushf
ds
xchg
pushf
inc
insb
pushf
mov
shlb
outsb
in
and
pop
xchg
sub
or
or
or
and
bound
push
jo
push
and
imul
xorb
mov
adc
cmp
jo
iret
fs
mov
push
push
stc
jl
pusha
out
out
push
inc
loopne
add
mov
fcoms
push
pop
lcall
imul
scas
rorb
loopne
sub
sahf
stc
test
sbb
xor
adc
enter
ret
mov
add
sti
rorb
mov
leave
add
test
popa
test
dec
xor
adc
addl
sbb
cmp
test
add
sub
mov
stc
pmulhw
mov
mov
add
outsb
sbb
int3
shlb
rcr
nop
sbb
mov
xchg
das
enter
or
gs
lds
daa
jne
aad
mov
or
in
xchg
sbb
jns
xchg
sbb
dec
fstpl
mov
mov
inc
jg
mov
int3
movsl
jmp
push
pushf
mov
je
rolb
fcompl
int3
mov
mov
inc
add
pushf
dec
movsb
ljmp
sub
push
sbb
inc
jg
jg
movsb
ljmp
adc
cld
mov
ja
sub
mov
sub
mov
adc
or
adc
mov
imul
je
xchg
shlb
fdivrl
cmp
ss
sub
adc
lods
insb
js
mov
push
fwait
lea
nop
out
inc
xchg
add
movsb
imul
nop
int
nop
or
fisttps
sbbb
ret
inc
faddl
fcmovb
mov
jnp
lret
or
cmpl
inc
pop
add
mov
add
enter
dec
add
xchg
push
fdivrl
nop
lret
iret
or
cwtl
and
cmpb
jl
and
es
cmp
cli
pop
push
add
push
aad
das
adc
pop
cmpsl
aas
gs
subl
mov
ffree
pop
xchg
les
in
shlb
aam
mov
adc
add
xor
add
or
imulb
in
scas
sub
insl
adc
aad
int
inc
insl
and
push
andl
dec
arpl
dec
test
movsl
les
mov
xchg
push
lods
jno
dec
test
fxch
lahf
push
rolb
test
adc
pushf
movsb
lods
es
pop
mov
js
xlat
push
andb
mov
dec
dec
es
pusha
jmp
and
dec
pop
xor
pop
or
fdivr
and
les
or
add
inc
xor
and
testl
xchg
mov
lock
data16
inc
mov
in
xor
std
inc
es
add
or
cltd
nop
notl
out
cmpl
fs
rcrl
inc
mov
ret
xor
fisttpll
insl
lock
inc
sub
popa
loope
les
sub
mov
inc
cmpsb
pop
add
add
add
dec
gs
in
add
jbe
gs
add
ja
inc
dec
add
sub
fsubrs
in
pusha
sbb
mov
add
inc
andl
or
faddl
xor
setbe
cmpb
mov
adc
jbe
fdivrl
std
xchg
mov
pop
das
in
nop
pop
fildl
or
lock
leave
fsubrs
adc
mov
add
add
fnstsw
add
inc
jg
es
add
mov
mov
call
mov
inc
movsl
fildll
inc
mov
adcb
test
mov
sbb
lahf
lea
cld
incb
dec
mov
xor
insb
add
xor
push
fsubr
adcl
dec
adc
cltd
mov
inc
inc
or
xor
sub
xchg
fidivs
adc
dec
or
add
mov
rcll
push
arpl
sbb
imul
sbb
nop
lock
pusha
jne
call
lds
loopne
inc
pop
leave
fsubs
pop
mov
scas
add
stos
lods
dec
mov
test
bound
fwait
xorb
cltd
push
mov
mov
and
test
insb
mov
call
inc
sub
or
inc
dec
or
andb
inc
or
pop
cmp
fwait
sbb
mov
lds
xchg
xchg
dec
sub
and
inc
xor
mov
add
sbb
sbb
pop
adc
insl
mov
adc
mov
mov
shlb
pop
call
insb
sti
lods
or
adc
push
sub
pushf
sbb
out
orb
xor
mov
jb
test
mov
roll
adc
stos
and
mov
pop
or
mov
jmp
push
nop
aaa
mov
rolb
jecxz
cmpsl
pushf
mov
leave
and
adc
xchg
dec
es
js
pop
dec
es
fs
pusha
push
mov
fs
dec
inc
jo
rorb
mov
call
dec
dec
fcoms
or
shrb
les
loopne
sbb
push
cmp
mov
and
adc
test
sbbb
cmp
dec
test
xchg
dec
je
aam
xchg
dec
xor
enter
mov
icebp
sbbb
xor
pop
dec
mov
jno
scas
lea
je
mov
xor
jecxz
push
ljmp
mov
dec
adc
push
pop
cmp
pop
dec
xor
mov
xor
filds
inc
mov
mov
mov
pop
mov
lcall
and
cwtl
cmpsl
fbstp
lret
jl
test
mov
add
jae
mov
sub
dec
dec
jb
mov
aam
mov
ret
mov
or
outsl
mov
dec
and
push
adc
pop
pop
out
addb
iret
movsb
mov
test
lods
inc
mov
pop
and
rclb
mov
int
add
mov
mov
movsl
cmp
nop
jmp
push
rol
add
bound
mov
add
sbb
mov
pop
cmpb
imul
shlb
les
push
dec
mov
sub
mov
lret
lods
test
sarl
loopne
pop
xor
sbb
jbe
popf
enter
les
lret
mov
and
cmp
lods
std
fs
repnz
add
dec
pop
sub
rcrb
and
and
or
enter
cs
and
mov
jb
aas
mov
fsubrl
add
les
insl
sbb
cltd
nop
push
adc
lcall
add
or
out
and
aas
adc
add
jns
mov
sbb
sub
jae
scas
push
insb
push
adc
or
xchg
sbbl
lock
inc
pop
dec
les
pop
push
imul
in
decl
arpl
mov
xlat
push
push
adc
pop
fldl
adc
jno
sbb
in
cld
popa
mov
cmp
aam
xchg
je
xor
aas
add
scas
lods
mov
jb
insb
inc
add
dec
in
aas
add
jbe
push
fisubrl
adc
pop
or
sbb
pushf
fs
cli
mov
sti
xor
mov
cld
cli
scas
fs
enter
cmp
dec
cmp
and
cmp
add
adc
js
lods
inc
mov
lcall
sti
fwait
ss
inc
and
adc
test
pop
and
sbb
sub
inc
inc
dec
rorl
cs
adc
and
leave
stos
je
cli
call
or
test
lcall
push
and
les
xchg
ror
adc
xchg
dec
xor
test
adc
mov
lcall
orb
sbb
in
pop
push
pushf
sbbb
add
mov
xchg
and
or
add
push
inc
mov
cmp
adc
in
pop
orb
xchg
lret
aas
loopne
sub
add
nop
mov
and
adc
das
sub
mov
dec
popf
push
repnz
lcall
xchg
add
lcall
pop
mov
ds
pop
add
adc
out
jb
push
mov
push
and
add
jle
pop
outsb
fdivr
adc
add
aaa
int
mov
jg
aam
push
dec
push
mov
jno
push
mov
icebp
xor
inc
jne
xor
xor
nop
mov
mov
jmp
cs
sub
jne
gs
sbb
adc
push
mov
mov
xchg
fimull
and
dec
push
roll
mov
repz
dec
sbb
pop
adc
into
push
jno
ss
clc
ret
lahf
out
jns
scas
mov
fldenv
loopne
negb
leave
add
add
test
lods
mov
ds
gs
push
ljmp
pause
mov
rolb
cs
cmp
inc
push
push
addr16
xlat
sahf
js
aas
in
inc
add
xchg
push
das
in
scas
cmp
push
mov
push
loopne
aas
les
mov
mov
ljmp
add
fistpl
or
jnp
jbe
or
mov
add
and
vmwrite
insb
sarb
cmpb
out
insb
pusha
pop
movsb
call
sub
inc
dec
dec
dec
dec
dec
dec
dec
dec
fwait
or
ficompl
lcall
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
jg
std
xor
sub
pop
das
mov
rcll
xchg
adc
clc
push
or
cmp
rclb
cmpl
inc
int
jns
out
mov
ficoml
repz
pop
insb
outsl
dec
outsb
je
mov
insb
outsl
arpl
fs
out
sbb
push
dec
imul
shll
jae
cmp
jb
gs
xor
push
fs
insb
push
bound
and
pop
popa
je
outsl
outsb
push
mov
in
clc
mov
in
xchg
xor
incl
mov
jnp
sub
add
scas
push
mov
outsl
jb
js
je
jb
gs
cmp
or
daa
clc
mov
add
add
add
je
subl
loopne
jb
xor
popa
mov
popa
jb
mov
inc
imul
dec
xor
xor
std
push
aam
cmp
cmp
jnp
sub
dec
and
jns
add
das
lock
gs
jbe
pop
push
insl
bound
daa
dec
outsl
jbe
dec
arpl
jo
push
jo
sub
addr16
out
popa
mov
dec
jne
xchg
mov
insb
jo
lahf
insb
dec
popa
jb
push
inc
into
mov
into
mov
pushf
jae
popl
fcompl
into
ja
inc
push
jne
xor
mov
daa
push
cmpsl
cwtl
mov
push
jne
dec
js
out
mov
push
jne
xchg
pop
dec
rcrl
push
popa
das
jo
or
mov
lock
cmp
inc
ud0
pop
xor
aaa
and
or
or
test
leave
lahf
cmpsb
jmp
sub
sub
cmp
ds
inc
das
pop
pop
rcrl
cmp
jge
jg
cmp
pushf
lcall
addr16
out
mov
pop
or
adc
divb
pop
push
inc
insb
jae
scas
jmp
fs
mov
test
jmp
out
es
xor
insl
and
jb
jbe
aaa
cmp
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
aas
aad
sbb
push
jo
imul
mov
pop
mov
je,pn
jo
mov
and
mov
and
push
popl
ds
int3
mov
je
or
xorb
mov
int
inc
popa
and
daa
mov
jne
loopne
data16
xor
and
insl
push
sbb
mov
inc
cs
xor
and
jne
dec
mov
rol
lcallw
out
es
or
add
xchg
push
and
or
imul
sub
or
fs
cli
jb
bound
inc
jo
inc
push
and
push
ds
fidivrl
int
push
mov
loope
push
daa
sub
test
das
arpl
cmp
roll
arpl
jge
das
andl
inc
in
inc
xchg
xchg
insb
imul
imul
int3
or
push
addb
mov
shll
xchg
shl
jns
push
fbld
ss
cs
lock
adc
jbe
shll
hlt
nop
or
es
dec
add
add
cltd
mov
in
ja
outsl
outsl
ss
stc
or
fs
jo
cli
jbe
add
inc
test
xchg
push
mov
jbe
push
gs
loopne
lds
mov
xlat
outsl
push
or
pop
scas
xor
lcall
bound
cmp
idivb
ljmp
imul
push
jo
imul
mov
jno
rol
pusha
aad
push
push
leave
nop
fs
sbb
call
data16
adc
jns
add
pop
fsubs
push
and
pop
push
pusha
test
sub
addr16
jmp
jae
xor
fcompl
roll
pusha
jo
sub
cmpb
adc
push
sub
lret
inc
pop
add
sub
pop
dec
jmp
lods
jge
cmp
push
and
cmp
lods
vmovd
pop
inc
inc
and
fisttpll
and
jg
jmp
xchg
ss
pop
loopne
add
test
push
rol
das
lret
repz
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
rcrl
xorl
push
adc
mov
imul
out
ret
add
add
xor
fldl
jg
js
jae
sbb
jae
je
pop
dec
pop
add
add
mov
xchg
sub
stos
mov
jb
xchg
adc
pop
movsl
jge
adc
add
add
add
add
pop
icebp
lcall
cmp
pop
or
aaa
ds
push
pop
hlt
and
divl
push
js
or
sub
add
sbb
addb
fiadds
xchg
test
add
aaa
mov
pop
daa
push
cmpb
addr16
push
push
and
sub
jb
int3
push
xor
ja
mov
call
push
stos
fwait
push
inc
inc
int3
js
jo
jmp
in
jge
rorb
sbb
in
lea
mov
nop
xchg
xchg
fiadds
ret
es
faddl
push
inc
or
or
test
sahf
pop
pop
pop
add
dec
cmp
adc
cs
cmp
test
pop
cmp
adc
lret
andl
push
pop
lahf
int3
fisubrs
sbb
push
cmp
add
xor
and
adc
push
jb
test
pop
sbbb
adc
add
add
mov
and
xchg
ss
push
mov
push
and
add
ja
push
mov
mov
imul
mov
mov
pop
rcl
inc
pop
inc
out
and
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
movsb
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivrp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
push
and
dec
mov
or
add
je
push
xor
roll
adc
aas
lcall
fists
shrl
test
mov
gs
bound
dec
stos
movsb
sbb
ss
popa
mov
pop
divb
repnz
lea
dec
mov
outsl
js
push
push
inc
push
mov
mov
dec
and
insb
gs
cltd
out
mov
dec
mov
daa
add
insb
std
sub
dec
in
dec
imul
insb
mov
jb
jo
ds
and
sub
inc
jns
daa
pop
testb
enter
jns
mov
loopne
xchg
aad
lcall
addr16
cmp
pop
dec
pusha
subl
mov
or
jbe
push
pusha
inc
jbe
push
aaa
dec
mov
push
lahf
fs
dec
xchg
dec
add
sbb
popl
loopne
sar
cmp
push
adcb
and
sbb
dec
dec
push
dec
xor
lock
or
jecxz
xchg
mov
dec
movsl
jae
cmp
cmp
dec
add
pusha
insb
call
test
das
outsb
gs
mov
add
jp
xchg
sbb
push
push
push
dec
testl
push
jne
repnz
mov
out
cmp
push
scas
dec
jge
mov
sbb
jae
call
jo
fistps
stos
or
outsl
jae
nop
shll
xor
jg
popa
jl
insb
dec
xor
jg
fadd
push
jns
pusha
push
or
push
addr16
das
je
sub
outsl
xchg
daa
xchg
mov
imul
es
cmp
push
das
push
sub
inc
jl
push
jle
sub
cmp
ds
sub
sub
xor
int3
pop
push
cmp
cmp
cmp
jbe
and
dec
pop
pop
cwtl
shl
mov
jb
sbb
push
jb
imul
jo
ss
lret
or
xchg
push
lods
sbb
int3
lods
mov
and
es
cltd
or
mov
jl
jge
ret
push
lahf
sub
or
inc
add
clc
loopne
repz
in
loopne
enter
addr16
cmp
mov
dec
adc
fildl
in
lcall
cwtl
iret
jnp
and
ds
repz
xorb
loop
iret
rcrl
push
mov
fs
outsb
push
hlt
or
pusha
add
pop
jbe
push
jns
cmp
push
dec
push
dec
push
inc
out
sahf
out
cmp
xor
sahf
out
sahf
sub
and
adc
repz
out
push
hlt
sarb
jl
cmp
clc
repz
mov
cwtl
jo
iret
repz
inc
inc
cmp
add
sahf
out
lcall
xor
out
push
sub
in
rcrb
iret
repz
jo
sub
cmpsl
lds
or
ds
shrl
outsb
push
xor
sbb
jb
add
lods
lock
outsl
pop
cmpsb
bound
push
outsb
sti
insb
fs
sbb
je
out
out
or
mov
movsl
fisubs
shrd
sub
add
test
or
insb
cmp
inc
inc
dec
jae
xchg
sub
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
xchg
xchg
mov
and
inc
dec
add
dec
dec
inc
add
adc
jg
adc
sub
adc
outsl
andb
rclb
mov
testb
scas
xor
jnp
inc
loop
mov
ds
pop
adc
fpatan
psubb
or
cli
jb
xchg
jge
arpl
mov
add
pop
pop
dec
scas
jp
adc
fisubrs
jg
mov
and
cmp
dec
imul
incl
lret
add
inc
mov
mov
sub
sarb
sahf
fwait
ss
sbb
pop
jns
ds
xor
jg
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
idivl
cld
push
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lcall
dec
xchg
icebp
mov
cld
or
cmp
jle
inc
mov
xchg
push
pop
push
pop
jge
mov
ds
dec
je
lods
testb
bound
push
xor
sbbb
or
icebp
pop
or
and
pop
repnz
adc
mov
and
es
mov
jle
add
push
and
xchg
sub
push
out
dec
mov
out
leave
ljmp
jg
test
push
les
mov
or
outsb
jbe
and
add
push
push
shrb
inc
xorl
jge
push
gs
push
jmp
jo
test
lahf
out
out
hlt
inc
dec
push
dec
push
sub
out
dec
mov
sub
pop
cmp
push
sub
cs
add
xor
pop
push
std
out
decl
cmp
inc
or
cmp
inc
inc
pop
push
cmp
pop
cmp
or
push
inc
sub
cmp
inc
push
pop
jno
jb
cmpsl
sbb
popa
mov
sub
out
jbe
pusha
sub
sub
sub
add
inc
cmp
sub
push
cmp
pop
dec
aas
pop
push
into
das
and
mov
dec
push
and
lods
pop
and
or
sbb
idivb
ljmp
pop
sbb
wrmsr
sub
daa
cmp
jge
dec
lock
ss
cmp
xor
push
and
jg
std
incl
or
or
push
aas
push
push
lar
add
sub
cmp
aas
ss
add
mov
aas
aas
sub
jge
inc
mov
add
dec
push
sbb
pop
dec
mov
mov
pop
aad
cmp
cld
dec
sbb
inc
dec
cmp
xchg
adc
sub
sub
add
cmp
ja
dec
sbb
push
pop
sbb
das
sbb
inc
insb
jns
mov
sbb
sbb
andl
sbb
adc
and
mov
xor
cmp
xor
movsl
lods
mov
jle
xor
sub
cmp
fisttps
add
add
push
cmp
push
push
mov
jb
fnsave
cli
push
push
pop
push
gs
decl
ds
add
lldt
or
sub
nop
cld
sbb
and
and
sub
or
sub
xchg
and
add
pop
mov
sub
clc
cmp
push
sub
movsl
or
sbb
cld
call
adc
dec
nop
dec
cwtl
in
push
cmp
imul
nop
push
mov
dec
repz
push
rclb
jns
adc
push
push
xor
outsl
cmpsl
cmp
je
push
pusha
pop
mov
sahf
mov
scas
push
push
xor
and
addb
imull
hlt
pop
scas
dec
inc
rol
es
dec
mov
mov
add
cmp
outsl
insl
mov
pop
and
outsb
insb
scas
and
or
push
popa
and
int3
dec
and
pop
cld
into
insl
dec
bound
xor
and
rcl
push
jbe
push
and
jns
out
nop
mov
pushf
out
push
push
xorb
mov
andb
ds
jns
push
push
push
push
mov
add
cmp
sarl
outsb
ss
ds
lock
push
add
xor
push
call
sbb
scas
cs
test
xlat
add
cmp
pop
fisubrl
dec
js
inc
jbe
mov
or
or
cmp
sahf
push
imul
sub
pop
nop
es
jmp
add
push
adc
cmp
push
cmp
sbb
mov
es
push
jmp
xor
inc
sub
mov
push
pop
jb
and
pop
add
insb
push
push
sub
inc
and
xor
mov
xchg
cmp
xor
sub
inc
imull
xor
or
dec
addps
daa
inc
shll
jp
push
pop
add
sbb
mov
push
iret
cmp
rclb
pop
ja
ja
push
clc
jae
xchg
push
push
cld
sbb
fs
xor
out
pop
cmp
cmp
mov
scas
jge
or
mov
fs
cmp
outsb
scas
push
dec
pop
push
sbb
jo
pop
test
push
xor
and
sub
int
rclb
mov
sbb
jl
push
cmp
cmp
inc
sub
cs
lret
cmpsb
out
and
push
push
inc
adc
push
fadds
fdivrs
push
daa
loopne
and
pop
and
sbb
inc
mov
cltd
push
mov
out
pop
or
push
sub
cmp
and
mov
push
stos
pop
or
mov
adc
push
sub
jle
jge
sbb
pop
scas
cmp
sbb
sbb
adc
cmp
and
mov
mov
mov
popa
jb
mov
or
adc
stc
and
jle
or
pop
xchg
cmp
dec
xor
shr
or
pop
xor
ja
push
mov
test
xor
pusha
arpl
push
es
mov
outsl
xor
sub
jle
loop
lret
popa
push
cltd
into
scas
daa
aad
ret
sbb
push
notl
push
mov
mov
popa
push
sbb
xor
mov
pop
xor
mov
es
lcall
loope
pop
sbb
jg
push
cmp
pop
cmpsl
pop
loopne
xchg
sar
hlt
or
cmp
ret
hlt
mov
or
cmp
pop
outsl
or
icebp
sub
aas
push
jg
insb
cmp
add
scas
jle
mov
js
jl
cmp
sbb
mov
stos
sbb
dec
daa
shrl
push
mov
mov
push
xchg
push
mov
xchg
cs
lcall
cmpsb
or
push
or
rcrb
popa
and
pop
push
pop
and
and
lea
add
daa
mov
add
in
sub
push
adc
or
or
sbb
subb
test
subl
xor
psllw
ja
pushf
dec
adc
dec
add
lods
sub
mov
daa
xor
and
mov
adc
mov
movhps
add
dec
and
inc
sbbb
push
fwait
incb
pop
aaa
decb
mov
push
inc
jp
cmpsl
stc
pop
jae
inc
or
xor
and
movsb
out
cs
inc
push
mov
mov
jns
popa
jne
push
int3
lcall
daa
imul
das
daa
or
inc
addl
push
pop
push
and
or
fimull
fsubrl
dec
push
push
push
pop
or
xor
or
xor
sub
add
roll
push
push
xlat
ss
push
mov
push
scas
arpl
cmp
or
push
ret
dec
mov
pop
daa
dec
push
push
mov
push
inc
inc
sub
add
cmp
adc
je
jae
loop
add
ret
movsl
sbb
sbb
call
or
mov
mov
xchg
xchg
das
mov
dec
cmp
pop
bound
inc
push
jnp
xor
push
push
je
sbb
pop
daa
jae
popa
jbe
adc
sub
inc
jbe
jbe
cs
and
xor
call
pop
add
push
add
jae
adc
ret
lea
push
mov
outsb
ret
mov
js
out
and
push
inc
call
pusha
arpl
sti
aas
pop
rol
call
or
js
pop
xchg
dec
inc
pop
fdivl
icebp
daa
jae
or
dec
push
and
mov
movaps
adc
or
outsb
dec
sbb
das
call
sbb
rolb
sub
ds
pop
clc
je
adcb
mov
xor
mov
lret
jbe
mov
pop
mov
dec
sbb
sahf
int3
jle
xor
cmp
pop
sub
fildl
stos
cmp
mov
test
xchg
xor
cmp
ficoml
xor
xor
or
push
pusha
sub
and
subl
jbe
sbb
cwtl
push
es
cmp
xor
jle
inc
push
mov
mov
push
adc
lcall
ja
hlt
inc
mov
dec
aas
sbb
xchg
adc
xor
cmp
push
cmp
mov
dec
ds
adc
js
and
mov
jl
pop
adc
pop
int
out
adc
adc
cmp
sbb
es
cmp
sub
xor
daa
add
push
and
xchg
sbb
inc
add
or
inc
push
arpl
ficoms
lock
push
jg
mov
cs
repz
cmc
fstps
xor
daa
loopne
push
mov
mov
add
cmp
lods
lret
ljmp
fs
ret
mov
stos
jo
pop
cmp
cmp
cmp
pop
sbb
mov
outsb
pop
jo
sbb
sbb
sbb
dec
jle
mov
sbb
add
mov
xchg
js
cmp
je
xor
dec
mov
sub
push
ss
js
pop
and
jl
dec
sub
push
lock
adc
xchg
pop
pop
xchg
mov
and
enter
bound
push
ja
sub
rolb
loopne
inc
adc
sbb
xchg
or
sbb
es
or
and
inc
cmp
nop
pop
cltd
push
and
and
mov
push
enter
sbb
pop
or
movsl
push
stc
cmp
pop
or
and
xchg
mov
cmp
pop
xor
mov
cmp
pop
push
dec
sub
pop
pop
inc
sbb
js
popa
mov
inc
fisubrl
push
xchg
aaa
mov
xor
push
outsl
mov
lods
or
pop
aaa
adc
mov
iret
xor
movb
fdivrl
sbb
push
and
lods
inc
push
ljmp
push
scas
pushf
cmp
pop
add
and
cmc
sub
pop
cs
in
push
pop
es
sub
dec
jle
adc
cmp
add
and
shrl
pop
insl
push
xchg
inc
js
jns
xchg
adc
movb
mov
sbb
pop
push
aas
push
add
add
push
es
dec
cs
jmp
es
sub
mov
push
push
pop
sub
sti
xor
or
or
es
pop
inc
pop
cs
or
pop
sbb
cmp
add
dec
shlb
in
add
lods
add
sbb
dec
filds
outsb
cmpsb
push
ficoms
hlt
lds
push
jns
into
or
inc
cmp
outsl
in
jge
cmp
xor
sti
mov
and
and
and
push
push
cmp
into
inc
xor
cmp
push
adcl
cs
jae
pop
push
imul
sahf
lods
xchg
sbb
inc
push
addl
sbb
adcl
jnp
adc
add
cmp
push
pop
out
dec
outsb
sub
jmp
out
dec
frstor
adc
mov
das
sbb
mov
sbb
pop
inc
sub
mov
movsl
movsl
cmp
or
aaa
adc
fstpl
jge
sbbl
adc
and
jne
mov
dec
sbb
cmp
mov
push
push
stos
cmp
and
jo
aad
sub
xchg
push
inc
adc
and
jns,pn
mov
call
and
dec
pop
or
repz
cwtl
or
jle
xchg
push
push
pop
aaa
xorl
cwtl
es
fs
mov
mov
pop
lcall
adc
jmp
pop
aas
loope
loop,pn
push
push
push
push
sbb
cli
push
sub
pop
push
xor
add
push
pushf
or
dec
jg
pop
lock
sbb
or
fidivrl
sub
xor
pop
ret
nop
xchg
mov
cmpsl
and
daa
aaa
sub
pop
push
sub
mov
js
pop
sub
inc
rolb
pop
movsl
push
cmp
loope
icebp
ja
xor
inc
and
sub
and
sbb
aam
test
ret
pop
daa
add
push
cmpsl
hlt
sbb
cmp
loop
pop
sbb
or
fwait
xor
movsb
xor
cmp
inc
add
xchg
cmp
xor
cs
jg
clc
inc
cmp
push
cvttps2pi
popa
jp
aaa
sub
or
xor
xor
pusha
pop
rorl
sbb
insb
pop
add
mov
aaa
mov
ja
and
add
aaa
aaa
dec
test
jno
and
sub
outsl
jo
insb
gs
ja
fs
or
or
gs
clc
pop
push
push
shrb
sti
sub
add
sbb
sub
jo
cmp
xor
or
pop
inc
jb
outsl
insl
sbb
outsb
sbb
repz
sub
mov
push
nop
mov
add
leave
mov
ds
inc
loopne
lret
push
into
push
jo
data16
inc
or
aad
fadd
fidivrl
lock
filds
loopne
mov
push
adc
push
in
icebp
push
sarb
push
mov
or
inc
inc
inc
lds
testb
aam
icebp
mov
push
dec
dec
pop
add
das
es
aaa
shlb
mov
mov
fwait
lcall
sbb
ljmp
mov
ja
mov
lods
jg
decl
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
addl
fsubs
lods
cs
pop
sbb
mov
pop
repnz
dec
xchg
pop
shl
dec
push
adc
incb
push
and
xor
aaa
xor
sub
outsl
inc
push
dec
cmp
and
dec
leave
mov
pop
mov
mov
ss
xor
jb
or
fcmovnb
outsl
push
dec
imul
xchg
out
adcb
sub
in
dec
dec
push
inc
mov
xor
and
jns
sahf
adc
add
add
pop
jb
dec
loopne
dec
clc
add
jae
inc
mov
insb
inc
js
pop
sub
scas
cmp
push
pop
add
call
dec
pop
int3
add
ret
sbb
or
xchg
push
dec
mov
ss
cmp
xor
sub
sti
xor
inc
sbb
sub
xor
inc
push
xor
push
or
cld
pop
xchg
jp
cmp
insb
push
outsb
add
inc
cmp
jb
sub
jne
xchg
das
js
incb
cld
inc
shrb
insl
cmp
imul
fisttpll
push
jb
jo
notb
rclb
jne
cmp
popa
outsb
mov
cmpps
push
pop
subl
shll
adc
inc
iret
and
xlat
addr16
int
imulb
inc
pop
loop
xor
mov
xlat
das
mov
xchg
cmp
out
sub
lods
add
xorb
xor
cmpsl
sbb
or
iret
mov
add
mov
xchg
inc
rolb
pop
loopne
insl
shrb
mov
sub
and
or
and
jge
je
orb
or
out
sahf
push
sub
sbb
cmp
pop
cmp
and
or
and
add
add
mov
adc
mov
sbb
sub
adc
dec
pop
add
pop
pop
push
dec
shrl
dec
leave
push
xor
mov
fistps
inc
cs
outsb
inc
add
dec
jo
mull
stc
insb
push
insl
pop
popf
cs
test
call
xor
jbe
jns
jno
sub
sub
repz
and
push
xor
scas
shll
lock
outsl
xchg
jo
xchg
addr16
pop
cmp
fucom
mov
inc
fbld
push
subb
push
inc
es
out
pop
cs
mov
jnp
inc
mov
pop
outsb
daa
int
push
cmc
inc
or
ds
repz
mov
mov
mov
pop
js
mov
inc
and
dec
dec
pop
adc
and
mov
jmp
push
mov
data16
push
daa
cmpsb
jns
fwait
in
shlb
jbe
lcall
push
sub
cmp
cmp
repz
sbbl
mov
sub
pop
cwtl
sub
fldt
repz
ds
push
sahf
or
daa
outsb
iret
jnp
test
pop
push
test
jns
repz
sbb
push
xchg
lahf
push
lods
fs
pushf
cmp
rcrb
pop
lds
jecxz
cmc
push
pop
cs
popa
xchg
out
mov
iret
repz
push
jo
test
insb
xchg
jle
clc
aaa
clc
das
push
fistps
xor
pop
cmpsl
stc
mov
push
or
fdivp
sahf
in
dec
ss
mov
jnp
cmp
cltd
xor
mov
push
push
out
ds
les
and
insl
mov
fnstenv
xor
cmp
lahf
pop
or
aas
cmp
mov
or
into
push
mov
jnp
iret
repz
adc
xor
out
sub
adc
push
hlt
inc
and
popf
sti
add
xor
mov
cmp
pop
ljmp
out
sahf
cmpsl
push
dec
ja
call
or
rorb
cmp
sbb
or
xor
cmp
repz
sbbl
inc
sub
dec
jbe
cmpsb
or
cmp
add
mov
pop
and
dec
sbb
scas
sub
or
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
bound
pop
mov
scas
int
mov
mov
loop
and
push
pop
mov
add
idivb
aas
in
mov
push
and
pop
sbb
enter
cld
mov
repnz
iret
pusha
or
inc
or
test
pop
jb
push
sub
cltd
into
subb
outsl
pop
scas
or
or
jp
outsb
push
outsb
lods
xchg
pop
add
femms
pop
or
aas
inc
push
jp
jge
jmp
xchg
or
cmp
ja
aaa
push
stos
gs
and
insl
aas
jae
fisubl
out
rcl
push
inc
das
push
idivl
cmp
dec
cmp
sahf
ss
push
ljmp
cmpsb
dec
add
pop
arpl
push
inc
mov
ja
push
dec
pop
je
jns
mov
fisttps
jp
das
pop
repnz
push
adc
jge
push
inc
imul
or
adc
jnp
dec
or
scas
sbb
jae
dec
mov
ja
push
pop
mov
mov
out
js
add
les
outsb
fs
inc
sbb
push
dec
cmp
xor
out
incb
ds
int
or
jo
popa
insl
jo
es
daa
out
jbe
insb
je
push
addr16
jo
jae
es
pop
in
jne
and
aas
cmpb
sub
fnstcw
or
cmpsb
mov
outsl
jle
jo
inc
xor
xor
xor
mov
aad
cmp
push
xor
xor
cmp
fistl
add
pop
dec
es
dec
or
std
ficompl
or
push
adc
and
pop
and
add
or
pop
sub
or
test
push
push
mov
jne
dec
add
push
push
int
jb
adc
mov
sbb
sub
dec
mov
cmp
inc
rcrl
adc
cmc
dec
sub
mov
xchg
sub
sbb
adc
adc
adc
adc
jmp
dec
adc
sub
ljmp
or
push
pop
push
cmp
sbb
xor
mov
add
push
pushf
cmpsb
xor
stos
sbb
sub
or
pop
mov
ret
xor
test
out
mov
sbb
cmpb
out
push
sub
scas
test
iret
loope
mov
inc
xor
xchg
push
sbb
addb
btcl
fidivl
push
test
inc
xor
inc
int3
test
pop
sbb
xorl
or
mov
daa
test
in
clc
imul
adc
or
outsl
sbb
repz
inc
push
adc
push
jmp
popa
mov
shlb
add
das
mov
aaa
in
inc
and
xor
aaa
mov
push
lahf
incl
mov
and
das
stos
push
or
add
cs
lods
daa
jge
sub
sub
testb
add
sub
mov
daa
pop
inc
push
test
dec
jno
punpckldq
adc
insb
push
insb
andl
xchg
das
dec
mov
ds
mov
pop
and
inc
repnz
adc
or
dec
and
dec
or
sub
pop
xor
mov
lock
add
mov
pop
xchg
outsb
lods
dec
shrl
pop
xor
push
andb
pop
addr16
pop
sbb
or
lock
xchg
cmp
sbb
push
pop
mov
cmp
xor
or
add
outsl
lret
add
dec
mov
loop
jl
pop
push
or
mov
dec
sbb
jae
js
jl
sbb
cmpsb
outsb
jl
sub
mov
iret
imul
mov
es
mov
out
and
pop
and
lods
and
xchg
add
daa
popa
mov
adc
outsb
add
sbb
push
lahf
clc
cmpsl
stc
adc
sbb
lret
in
inc
mov
sub
adcl
sbb
pusha
test
and
push
into
adc
das
xchg
dec
test
and
popa
or
sarb
add
clts
es
adc
xor
pop
fsubl
daa
aaa
ret
cs
push
adc
jp
loop
nop
cmp
addr16
je
rcrb
fs
data16
inc
je
ja
jb
notb
and
dec
jns
mov
and
sbb
adc
stos
sbb
or
repz
inc
or
add
pop
int3
sbb
push
loope
or
test
nop
sbb
cmp
jbe
adc
mov
ret
add
and
movsb
pop
push
pop
and
filds
xchg
movsb
xor
pop
cmp
into
clc
mov
testb
inc
mov
xor
xor
data16
jle
or
mov
arpl
rcrl
xchg
sbb
adc
push
je
pop
xorb
jg
js
dec
sbb
adc
cmp
gs
sbb
mov
repz
push
cmp
push
mov
cmp
cmp
adc
cmp
jbe
adc
jnp
mov
out
xor
cmp
add
sub
adc
mov
pusha
cli
fcoms
push
pop
sub
sbb
data16
js
les
shr
adc
cltd
ret
cmp
mov
and
push
adc
adc
adc
orl
sbb
xchg
or
inc
dec
adc
adc
mov
or
xlat
xorb
or
or
adc
or
daa
jg
or
inc
add
mov
cmp
daa
pop
imul
and
pop
add
pusha
pop
cmp
rorl
cli
sbb
je
adcl
lock
push
sub
adc
push
sub
xorl
cmpsl
arpl
daa
pop
pop
cs
and
dec
mov
loop
nop
adc
sbb
cld
push
shll
sub
adc
inc
sbb
dec
ljmp
je
scas
add
jo
hlt
je
imul
xor
xor
add
cld
add
inc
fisubrl
sti
jl
xor
inc
pop
adc
mov
js
push
cmp
cmp
xor
pop
stos
pop
rorb
pop
or
pop
rdmsr
or
push
add
push
ds
incl
sbb
and
inc
add
and
push
or
aas
pop
sub
call
push
cmp
inc
pop
pop
add
sub
push
xor
dec
xor
and
dec
dec
pop
inc
and
adc
push
aam
inc
dec
inc
adc
dec
jg
adc
enter
cs
pop
mov
mov
xor
inc
push
sub
push
push
mov
pop
dec
inc
sub
cmp
xor
out
mov
cmp
sbb
inc
push
push
pop
inc
inc
cmp
ds
decl
aas
sub
push
add
push
sub
inc
push
inc
pop
pop
sub
sub
push
adc
push
inc
pop
mov
or
or
shll
xchg
lock
rorb
dec
push
in
aam
and
cli
pop
push
pusha
cmpb
xor
push
xor
or
push
xor
sbb
subb
or
add
scas
or
push
inc
and
push
pop
and
dec
loopne
es
inc
jo
out
xor
adc
mov
movb
add
sub
lods
mov
dec
clc
sub
xchg
xchg
push
push
dec
or
sbb
icebp
adc
mov
loope
insb
jne
sbbl
les
add
dec
lret
add
pop
sbb
pop
mov
popl
push
push
push
jns
inc
inc
dec
rolb
andl
push
inc
push
dec
inc
dec
push
dec
lidtl
add
mov
fiadds
push
das
mov
inc
aaa
jno
sti
shlb
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivrs
pop
dec
mov
mov
jge
je
mov
adc
incl
je
fwait
rol
fwait
in
inc
mov
ud0
pushl
and
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
incl
mov
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
ljmp
push
jae
gs
leave
ret
sub
xchg
mov
data16
decl
mov
call
cltd
test
push
push
shll
ja
decl
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
jmp
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
pushl
scas
addr16
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
out
cli
decl
inc
dec
pop
and
or
into
inc
jnp
push
inc
dec
jl
cmp
jno
pushl
cmp
inc
push
push
das
cmp
fs
push
push
ss
cmp
push
add
ljmp
imul
xor
pop
jge
push
ja
sub
cs
arpl
push
filds
push
pop
inc
into
adc
pushl
xor
or
push
and
xor
add
pushf
and
leave
aaa
sbb
dec
sub
inc
in
aas
add
andb
push
arpl
ljmp
jne
xor
pop
daa
sub
sub
wrmsr
paddd
outsl
cs
xor
decl
sub
dec
and
xor
xor
getsec
push
xor
inc
add
xor
xor
mov
dec
cmp
inc
add
push
cmp
jmp
inc
inc
xor
and
aaa
inc
push
inc
repnz
insb
or
cmovb
pop
mov
cli
fidivl
pop
cmpsl
ss
add
and
divb
mov
push
mov
addr16
add
nop
mov
pusha
xor
and
pop
clc
lock
cmp
cmp
xor
sub
dec
push
jle
or
lds
cmp
adc
mov
sbb
sbb
popf
sbb
shlb
decl
mov
dec
or
sub
js
push
jnp
popa
mov
int3
push
or
inc
pushf
sub
dec
cmp
adc
js
push
loopne
int
pop
push
sub
fs
push
addr16
cmpsl
dec
mov
int3
lods
or
jle
push
xchg
cmpsb
test
jp
inc
inc
push
sbb
mov
mov
movsl
loop
sub
subb
mov
daa
mov
cmp
or
sbb
pop
cmp
scas
out
xor
rolb
mov
neg
push
mov
cmp
jge
cmp
sbbb
pop
sbb
cmp
pop
jns
xchg
push
jne
add
daa
ret
adc
xlat
movsb
lds
jbe
fcompl
add
xlat
or
inc
into
pop
aaa
in
aaa
mov
jecxz
mov
fs
sbb
pop
xor
icebp
adc
or
cmp
adc
mov
pop
pushf
enter
and
xchg
movsl
ljmp
aad
ret
mov
test
and
fmuls
dec
add
and
negl
xor
js
cmp
repnz
jbe
jae
popa
insl
gs
cmp
mov
cmp
mov
add
cmp
adc
and
inc
aad
mov
push
ljmp
cmp
push
inc
out
push
xor
lret
decb
inc
rclb
outsl
insb
push
push
popa
je
push
icebp
test
push
xchg
insl
aaa
sub
js
and
sub
adc
clc
dec
testl
push
gs
dec
sarb
pop
pop
pop
out
rolb
pop
cmp
jo
in
xor
inc
add
aad
pop
add
fisttpll
test
inc
int
or
ds
test
push
xor
sbb
add
push
fbstp
mov
and
fmull
push
cmp
fidivrl
xor
xor
and
insb
mov
cli
inc
lock
lock
or
jae
sbb
lret
pop
sbb
or
mov
lahf
and
adc
adc
xor
adcl
inc
lgdtl
adc
into
dec
or
pop
push
fidivs
pinsrw
jb
pop
sti
pop
std
dec
outsb
inc
lock
inc
jne
outsb
fs
xor
cmp
and
xchg
mov
and
cmp
inc
sti
test
jl
or
xor
inc
std
dec
push
dec
add
adc
jns
sbb
and
call
or
sbb
or
popa
pop
daa
cmp
or
daa
push
fs
jo
pop
or
and
or
push
dec
xor
outsl
imul
ds
fwait
lods
ss
test
das
inc
bsr
dec
das
aaa
pop
das
cmp
lods
in
sbb
addr16
push
xor
scas
sub
push
push
lea
and
cmc
sub
cmp
push
push
and
insb
xchg
out
push
sbb
mov
push
cmp
xchg
and
dec
call
cmp
xor
sub
xchg
test
or
or
xchg
push
cmp
sbb
out
call
cmpsl
sbb
xchg
ds
cmpsb
ja
jg
xor
inc
iret
scas
pop
xchg
xchg
pop
sbb
sbb
pop
cli
push
dec
pop
push
imul
rorb
mov
int
cmp
xchg
inc
fldl
jge
punpckhwd
mov
dec
xchg
xchg
gs
mov
pusha
sbbb
mov
scas
mov
in
imul
and
mov
pop
inc
dec
adc
sbb
sub
insl
das
dec
pop
movsl
sbbl
fcmovnu
dec
pop
repz
cs
je
insb
daa
stos
add
push
rorl
stos
imul
xor
pop
std
lods
and
add
dec
jno
pop
inc
or
fadds
dec
push
rorb
rorl
aas
adc
sub
sub
inc
dec
in
jbe
xor
or
dec
and
xchg
jns
or
add
cmp
andb
push
adcl
gs
outsl
add
push
pop
xchg
mov
jg
mov
jae
push
popa
push
dec
dec
mov
sbb
jmp
outsl
and
ficompl
rclb
inc
cmpsb
punpckhwd
ficomps
int
outsb
push
je
scas
lret
add
cmp
or
push
push
inc
jmp
loop
push
inc
inc
dec
inc
push
pop
dec
dec
xlat
ss
xchg
cmp
gs
jno
scas
ret
ljmp
addb
dec
jb
roll
mov
popa
mov
daa
or
jb
rcrb
add
loop
lahf
pop
inc
call
pop
and
mov
jno
and
xchg
push
xorl
jns
jb
cmp
add
push
adc
add
mov
cmpsb
dec
pusha
test
push
push
add
mov
sbb
jae
mov
addr16
cmpb
sub
add
push
fiadds
sub
push
mov
cs
mov
mov
movsb
int3
add
lds
add
idivl
outsb
clc
sbb
stos
mov
or
push
sub
and
push
add
in
sbb
cmp
inc
bound
push
out
sub
add
and
pop
pop
xor
lds
dec
inc
cmp
and
ss
and
shlb
ss
or
jge
push
sbb
ss
ss
ret
add
xor
xchg
mov
ds
out
or
push
rol
pop
aam
lea
popf
or
cmp
push
lahf
mov
inc
lods
in
lcall
ret
push
pop
dec
test
dec
push
or
cmp
in
sub
mov
ret
jg
sub
js
into
pop
mov
outsl
int
sbb
inc
test
ret
push
sbb
xchg
imul
imul
out
ja
mov
pop
sbb
and
addr16
out
andl
roll
dec
cltd
or
xchg
flds
add
add
pop
fldt
or
adc
sbb
data16
fisubs
sub
xor
inc
mov
neg
jnp
mov
mov
mov
insb
ss
int
xchg
sbb
sub
add
data16
das
or
adc
mov
insb
ds
add
add
fwait
int
push
push
dec
str
mov
insb
or
and
das
incl
and
stos
icebp
or
cs
dec
sbb
outsb
push
fstp
clc
pop
sbb
rclb
icebp
inc
out
add
jge
mov
sbb
or
mov
xor
dec
or
mov
das
push
mov
dec
dec
dec
inc
shrb
mov
data16
loopne
lret
xchg
adc
loopne
push
fs
subl
cmp
sbbb
sahf
sahf
sub
push
jo
mov
pop
and
adc
leave
jl
xchg
dec
dec
add
std
test
xadd
sbb
inc
repz
xchg
inc
cmovo
push
lock
adc
fdivr
cmpb
aas
mov
pop
dec
sub
pop
inc
dec
add
in
and
rorb
pushf
xchg
out
enter
lods
xor
out
loopne
jae
add
test
jae
stc
addr16
movsb
in
add
imul
sbb
add
outsl
ror
xor
es
lahf
add
out
out
daa
test
js
stos
shrb
inc
daa
inc
mov
mov
inc
add
sub
out
fdivrl
jg
repz
fsubs
outsl
mov
sub
mov
xor
sub
mov
add
push
daa
fldt
jecxz
call
aaa
push
mov
xor
cmpb
sbb
xor
ja
push
push
lods
ds
je
imul
cmp
in
dec
aam
fs
dec
cmp
jnp
cmp
mov
out
ds
cmp
push
mov
jl
cmpsl
test
jo
cmp
aaa
repnz
lcall
push
adc
mov
js
adc
dec
dec
fisttpl
sbb
rclb
add
stc
pop
inc
lods
dec
fmuls
add
cmp
add
or
mov
ficomps
xchg
push
test
push
dec
xchg
sbb
fists
mov
mov
xor
ja
pop
jb
jg
mov
and
add
and
dec
outsl
pop
leave
and
in
inc
lock
lock
inc
inc
adc
das
xchg
sub
dec
outsl
add
inc
or
pop
jb
and
nop
scas
notb
xorb
dec
cmp
cmp
mov
dec
cmp
dec
add
mull
mov
dec
sbb
fs
sub
pop
adcb
leave
mov
push
pop
outsl
out
mov
xor
daa
int
cmp
cmp
xor
pop
jb
aam
pop
xchg
popa
sub
hlt
pop
scas
add
mov
outsl
out
sub
add
xor
scas
enter
es
cmp
enter
sbb
sub
adc
push
inc
call
fwait
push
enter
add
xchg
cmp
mov
add
cmp
push
push
call
inc
push
xor
add
jg
or
out
push
xor
ja
add
scas
sub
push
or
mov
ds
push
pop
ds
and
add
inc
outsb
push
xor
outsl
and
or
add
nop
or
and
or
sbb
jbe
call
pop
scas
add
adc
out
in
and
mov
mov
push
pop
cmpsl
adc
push
aaa
repz
faddl
mov
fmuls
in
leave
mov
push
in
daa
add
lods
in
movl
dec
cmp
pop
lcall
xor
pop
inc
push
push
jg
xchg
xor
jnp
mov
mov
out
test
in
leave
xor
push
add
sahf
or
pop
cmp
adc
divl
or
inc
inc
push
inc
outsl
bts
mov
push
outsl
jg
add
out
mov
or
push
test
shrl
push
in
hlt
inc
fadds
fnstsw
test
mov
push
or
call
popa
or
or
mov
jb
pop
pop
inc
insb
inc
lahf
scas
xchg
dec
xlat
or
inc
fisubrl
enter
add
or
xchg
adc
xchg
inc
les
mov
add
xchg
adc
sub
pop
add
daa
cmp
mov
add
and
scas
in
fdivs
add
cld
addl
in
loopne
scas
ss
mov
add
aaa
mov
dec
sub
add
xor
add
ja
add
push
sbb
adc
fs
adc
nop
inc
rolb
jns
outsl
xchg
hlt
repnz
mov
movl
inc
mov
pop
leave
xor
jo
inc
dec
scas
or
or
in
mov
nop
sbb
and
and
xor
push
sub
lock
outsl
add
jns
mov
push
insb
push
pop
adc
pop
mov
loope
stc
ss
mov
xor
pop
jnp
inc
xchg
and
lock
add
sbb
xor
mov
add
iret
daa
dec
leave
aad
push
out
lods
or
add
adcl
cmpsl
jge
sbbl
push
in
push
push
iret
sarl
sbb
dec
lods
pop
cmp
movsl
cmpsl
cmp
inc
cmp
add
or
dec
cmpsl
cmpsl
in
movsb
or
adc
enter
je
sbb
nop
dec
outsl
add
mov
faddl
in
pop
enter
testl
adcb
call
jo
ret
rcrl
push
xor
and
outsl
out
rorl
pusha
popl
out
mov
add
dec
lahf
addr16
jns
xor
lods
inc
fidivl
or
or
scas
nop
sub
loopne
sbb
mov
pinsrw
dec
roll
outsb
rclb
xlat
and
dec
addr16
das
jbe
insl
xlat
mov
daa
sub
jge
adc
dec
dec
iret
pop
push
xor
dec
mov
insb
dec
test
aas
add
inc
dec
enter
mov
dec
fiaddl
inc
les
hlt
fnsave
xchg
outsb
cld
dec
dec
data16
sbb
push
xlat
data16
lods
add
push
das
in
fsubs
pusha
dec
jo
popa
mov
fdivrl
roll
aas
pop
out
fldcw
mov
push
xor
repz
adc
add
pushl
dec
lahf
out
sahf
push
lods
enter
cmp
repz
mov
cmpsl
stc
or
dec
fs
fdivrp
cmp
lods
iret
repnz
cmp
repz
adc
jp
jl
cmpsl
stc
push
dec
popa
mov
daa
dec
repz
rcll
mov
sahf
out
push
cmp
cmpsl
stc
cmp
or
xor
push
in
repz
sbb
insb
cmpsl
xlat
pop
lahf
out
lcall
push
ds
repz
inc
jnp
sbb
sahf
out
pop
mov
dec
repz
lcallw
sahf
out
pop
ja
mov
iret
repz
ss
popa
mov
jns
pop
fs
pop
dec
repz
pop
xchg
stos
fdivp
jns
out
pop
lea
jns
dec
mov
pusha
cmpsb
sahf
out
mov
push
push
xchg
bound
ds
sarl
js
out
fs
out
jo
divb
gs
frstor
and
iret
sarl
ficompl
pop
dec
out
ds
imul
mov
adc
push
mov
and
push
mov
push
outsb
sar
outsl
rcrl
jo
mov
dec
xor
out
jge
mov
lahf
cmpsl
stc
sub
loop
je
cmp
cmpsl
stc
add
adc
pop
imul
sti
cmp
imul
js
sub
stc
cmp
repz
cwtl
lock
repz
cmpsl
loope
jl
mov
out
jge
add
js
jns
iret
mov
mov
idivb
xorl
sbb
mov
rcrl
test
test
daa
xchg
test
xor
lcall
or
ja
ds
das
pop
out
mov
push
jns
jge
mov
mov
mov
out
push
pop
jle
inc
xchg
iret
mov
insl
xchg
mov
ds
mov
stc
lds
iret
shrl
loope
cmp
repz
jg
in
sub
mov
adc
repz
sub
push
mov
jns
rcrb
mov
stc
sahf
div
cmpsb
push
shl
andb
insb
ss
test
cmc
pushw
ds
scas
mov
add
adc
xchg
nop
dec
inc
fisttps
add
orb
outsb
mov
cs
out
mov
pop
and
fdivrl
inc
lahf
fldz
jl
and
sub
add
mov
bound
fnsave
in
add
pop
paddq
mov
sub
aas
push
out
and
fs
sarb
xor
in
ss
lock
jae
dec
repz
clc
sub
add
push
inc
dec
sbb
daa
das
jl
xchg
ja
pop
fwait
shlb
scas
inc
and
adc
enter
jbe
pop
jb
sub
ss
push
pop
icebp
or
adc
imul
out
orb
jg
in
inc
repnz
push
mov
out
rclb
fdivs
ret
push
stos
dec
push
bound
popf
xorb
adcb
bound
in
icebp
sbbb
inc
cmp
mov
pop
lods
mov
lcall
cmp
insl
mov
out
ss
xchg
dec
mov
sub
test
enter
jbe
outsl
leave
aas
cmp
aaa
shrb
lret
push
push
loop
inc
hlt
push
mov
leave
int
mov
addr16
getsec
pop
test
shlb
cmp
in
xor
and
arpl
dec
call
rclb
sarl
test
lahf
lret
sub
leave
xchg
push
pusha
push
test
mov
pop
arpl
mov
jb
mov
repz
mov
test
std
and
aas
mulb
cmp
aas
int3
popf
cs
and
xchg
in
inc
jb
iret
gs
inc
xor
and
adc
inc
pop
add
and
pop
xchg
divb
pop
nop
or
push
sbb
in
inc
clc
inc
push
das
adc
hlt
inc
xor
inc
outsl
xchg
mov
push
dec
cmp
sub
dec
pop
and
outsl
add
test
in
leave
add
sub
push
out
and
inc
mov
pop
cld
sbb
jno
add
ret
and
divps
dec
je
cmp
sti
mov
add
cs
out
dec
xchg
insb
dec
dec
dec
dec
je
test
or
xchg
in
sub
mov
xchg
mov
push
pushf
xchg
inc
adc
sub
nop
pop
les
xchg
adcb
mov
push
mov
call
cmp
dec
movb
in
pop
xor
and
pushf
ds
mov
leave
push
jo
add
les
scas
in
inc
in
dec
push
sbb
or
sub
jl
ja
iret
lcall
addr16
inc
pop
add
inc
dec
sahf
xchg
test
xchg
lock
push
mov
xchg
add
fistl
mov
stos
mov
pop
in
lock
cli
inc
xchg
push
pushf
pop
pop
js
xchg
aaa
jb
enter
dec
push
dec
pop
push
sahf
out
sahf
add
jb
jge
sahf
out
push
mov
xchg
or
dec
lock
dec
xchg
or
add
pop
and
jns
jbe
daa
inc
scas
adc
and
or
inc
add
pop
in
aam
mov
dec
push
pushf
dec
dec
or
dec
pop
pop
sahf
fcmovne
xchg
dec
fs
outsl
xchg
cmp
mov
repnz
cmp
shlb
leave
jae
js
out
xchg
daa
daa
daa
idiv
push
dec
in
xor
push
dec
int3
xor
sbb
jb
dec
inc
dec
dec
dec
push
es
xchg
pushf
pop
and
outsb
mov
ja
test
pushf
leave
jae
frstor
pop
je
jns
pop
iret
push
add
adc
dec
cmovg
xchg
dec
pop
dec
out
add
mov
lahf
inc
push
or
iret
test
pop
leave
lret
je
xchg
bound
sarb
in
add
bound
inc
jb
or
jae
fisubs
rclb
and
add
mov
inc
adc
pop
movsb
arpl
mov
and
nop
arpl
push
in
push
shrl
push
sbb
or
jp
rcrb
in
pop
fs
fs
iret
and
or
push
scas
daa
cmp
push
dec
mov
mov
mov
hlt
cld
dec
ds
cmp
push
aas
add
fs
gs
xor
dec
push
test
leave
dec
mov
push
mov
mov
push
sahf
push
test
mov
lret
push
repz
mov
or
sahf
out
fisttpll
iret
push
push
or
or
jns
and
sub
out
adc
dec
sahf
out
sahf
adc
adc
jns
test
xchg
sbb
inc
mov
mov
sbb
insl
pop
leave
mov
dec
es
push
add
xlat
xchg
mov
pop
inc
hlt
sbb
lret
add
fdivrl
pop
pop
add
inc
mov
or
push
push
push
and
sbb
jg
mov
dec
xchg
nop
iret
push
aas
add
or
addb
das
cld
rolb
addr16
inc
out
dec
push
jb
inc
push
mov
sub
repnz
add
cmp
dec
jbe
outsb
add
rorb
repnz
das
cmp
outsl
in
cmpsb
in
inc
insb
jl
scas
and
xor
scas
leave
and
aam
jb
pop
enter
aas
push
jae
dec
dec
sbb
jo
add
outsb
pop
leave
push
mov
mov
mov
daa
iret
inc
enter
pop
jl
es
add
push
cltd
dec
pop
jb
add
orb
dec
xor
cmp
pop
enter
xlat
je
orl
test
enter
mov
int3
imul
in
mov
add
out
mov
daa
iret
add
xor
add
insb
adc
xchg
and
push
fcomp
insl
in
push
es
cs
push
lcall
add
sti
cwtl
inc
inc
inc
repnz
lods
decl
mov
insl
xchg
mov
decl
xchg
dec
pop
adcl
xlat
push
and
xchg
dec
pop
and
pop
fcomps
pop
iret
outsl
pop
add
inc
mov
cmp
leave
and
outsb
add
outsb
mov
dec
fnstsw
sahf
jl
es
filds
fisubl
adc
call
push
mov
pop
fildl
sub
add
outsl
pop
in
xchg
xchg
sbb
outsl
shrb
add
loopne
add
jo
repnz
pop
and
in
repnz
pop
pop
xchg
add
pop
xchg
mov
xchg
pop
jb
nop
loopne
addb
fbld
xchg
jno
push
daa
and
or
lahf
cmp
andl
pushl
xor
insb
pop
mov
repnz
test
pop
xchg
pop
repnz
pop
movsb
pop
lods
pop
mov
in
xor
les
pop
in
in
aam
fcompl
pop
in
pop
pushf
pushf
je
hlt
pop
pi2fd
pushf
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
or
push
add
add
add
repnz
je
hlt
and
jb
xchg
pop
xchg
jae
cmp
pop
cmp
xchg
dec
pop
in
adc
insl
pop
jb
inc
fwait
jae
xchg
push
jbe
roll
into
ja
cs
out
cmp
pop
ret
mov
sbb
pop
daa
inc
mov
cmp
pop
push
daa
iret
mov
gs
push
insl
jne
mov
jge
testb
lock
add
out
dec
and
dec
pop
and
in
fdivs
cwtl
sti
xor
pop
pop
frstor
pop
cmp
daa
fstpl
cmovo
dec
xchg
cmp
mov
pop
or
xor
add
jne
xchg
testl
movl
inc
pop
andl
lea
aas
mov
dec
sahf
pop
or
scas
push
jnp
loope
test
daa
adc
pop
out
jmp
leave
stos
mov
inc
pmulhuw
out
add
enter
or
pop
or
xchg
and
xchg
jbe
pop
sub
jb
enter
pop
inc
pop
mov
in
mov
out
fsubrp
cltd
pop
mov
jo
mov
pop
rorl
leave
inc
jb
fdiv
clc
cmp
jb
add
pusha
sbb
and
inc
repnz
sbb
inc
ja
xor
pusha
pusha
push
ja
jb
xchg
lahf
push
push
stos
jns
out
pop
mov
rorb
jns
out
or
or
mov
jp
or
or
cmp
stc
mov
popa
cmp
addr16
in
test
das
jo
pop
shrb
pushf
loope
popa
psraw
pop
icebp
pcmpgtd
jb
add
or
adc
in
in
or
and
sub
bound
xorl
jb
bound
bound
fisubl
int
pusha
xchg
add
das
xchg
imul
movsb
add
xchg
arpl
jle
inc
out
popf
fstpt
pop
testl
pusha
leave
xchg
arpl
das
dec
push
mov
call
arpl
and
and
and
mov
iret
insl
in
pop
fs
fs
pushf
pop
and
fwait
cmpsb
leave
inc
repnz
loopne
dec
sahf
fucomi
add
push
or
out
gs
sbb
adc
enter
pushl
pop
outsl
mov
test
daa
les
fnsave
test
mov
mov
cmpsb
gs
gs
mov
stos
cwtl
pop
scas
in
and
fdivr
clc
add
sbb
enter
data16
data16
lea
inc
push
pop
push
or
xor
push
data16
mov
leave
enter
data16
stos
leave
leave
leave
leave
mov
lret
leave
fcmovne
loope
out
or
jge
leave
xchg
adc
addr16
cmp
mov
add
arpl
pop
xchg
jae
popf
mov
xchg
ja
or
xchg
xchg
mov
mov
dec
out
xchg
push
cmp
push
xor
js
cmp
add
add
fwait
in
pop
push
push
sbb
jbe
scas
das
xchg
iret
in
in
mov
pop
mov
es
push
imul
pop
push
or
out
dec
cwtl
cmpsb
inc
push
daa
push
pop
mov
jb
popa
out
push
add
loopne
and
leave
mov
fmulp
insl
fxch
loope
push
add
cmpsl
dec
aaa
jg
imul
adc
or
cmp
rorl
or
or
dec
push
and
xor
iret
cmp
push
add
pop
leave
jae
in
mov
test
adcl
dec
repnz
neg
decb
imul
imul
enter
add
adc
out
jo
add
andb
add
cmp
xlat
psubb
cs
add
pop
push
dec
or
cmp
xchg
insb
adc
insb
jo
in
repnz
scas
cmp
repz
add
push
insb
pop
add
leave
leave
leave
arpl
jnp
das
das
das
aas
jg
insb
mov
fwait
insb
lods
fldt
das
mov
or
leave
leave
leave
leave
or
or
leave
leave
leave
leave
push
add
iret
leave
add
mov
mov
sbb
sbb
sbb
cmp
fistpl
jecxz
in
jmp
sti
iret
repz
and
insl
and
xchg
mov
sub
ss
mov
and
inc
test
jae
popf
jb
jp
outsl
fwait
cmp
stc
lock
add
mov
dec
sahf
aaa
pop
mov
js
add
and
lahf
insl
jbe
mov
imul
cmpsl
cltd
dec
ss
mov
sbb
sbb
outsb
aas
outsb
popf
jae
pop
pop
imul
push
or
ds
jns
out
or
mov
push
test
ret
adc
push
and
adc
test
outsb
outsb
test
inc
inc
outsb
cld
test
sahf
pop
cltd
outsl
push
add
add
jns
out
add
push
mov
jle
outsl
or
sub
cmp
fsubrl
test
iret
mov
pushf
leave
lahf
push
daa
inc
push
adc
ja
incl
fdivl
push
xchg
mov
movsl
xorl
outsl
jecxz
sub
xchg
in
mov
mov
add
jo
pop
cmp
js
pushl
mov
aam
iret
repz
lock
pushf
pop
in
pop
cmp
in
daa
jno
das
jno
jno
jno
inc
or
adc
orb
cmpb
insl
pushl
jns
ljmp
xchg
mov
mov
ret
mov
jns
mov
loope
lcall
dec
icebp
jbe
pmuludq
cld
jno
jb
dec
outsb
and
adc
and
sahf
out
or
xor
cmp
repz
inc
or
iret
repz
push
adc
push
jne
sahf
insb
jb
mov
or
jb
jb
dec
sahf
cmpl
mov
insl
push
mov
stc
int3
lock
or
sbb
cmp
jae
jmp
add
push
dec
and
stc
aaa
and
mov
mov
mov
iret
outsb
jo
loope
pcmpeqd
das
test
leave
leave
jae
add
leave
nop
adc
in
mov
je
pop
xchg
dec
rcrb
pop
adc
negl
push
push
jae
cmp
or
dec
or
pop
dec
add
inc
inc
add
mov
mov
push
cmp
nop
aas
push
add
mov
sbb
je
add
cs
cmp
out
or
or
rorb
sbb
jbe
mov
je
and
mov
in
in
push
add
pop
cmp
mov
add
iret
cmp
pop
push
or
sahf
out
or
or
test
jne
lahf
sub
pop
lea
jne
push
call
jns
add
cmp
mov
or
mov
sub
push
pop
xor
jns
pop
leave
jo
push
add
jbe
xorl
jbe
stos
popl
inc
pop
adc
fisubs
sbb
adc
lods
mov
inc
ds
pushf
pop
mov
shrl
cltd
dec
lock
sbb
push
pusha
push
aas
push
mov
dec
add
in
push
mov
nop
xchg
lock
iret
imul
xchg
out
add
add
mov
xchg
ja
ja
and
push
pop
or
nop
in
push
jb
ret
mov
nop
mov
lods
mov
mov
mov
js
lea
pop
jno
mov
xchg
push
xchg
cmp
aad
push
popf
js
js
js
sbb
call
dec
jb
stc
movsb
xchg
and
das
pushw
push
jns
jb
or
pop
jns
jns
jns
inc
mov
jns
jns
jns
add
xchg
mov
std
sbb
push
xchg
iret
fwait
inc
into
loope
fbld
mov
leave
leave
dec
subl
aam
leave
leave
leave
loop
repnz
pop
inc
mov
pop
add
jp
jp
adc
and
mov
pop
sub
xchg
int
sets
inc
punpcklbw
mov
outsb
mov
push
add
pusha
sub
out
xchg
jp
iret
jae
cmp
jp
psubusb
jl
mov
call
inc
ds
nop
loopne
mov
push
add
inc
mov
push
pop
es
jnp
enter
jnp
jnp
setnp
ficompl
pop
or
xchg
sahf
ja
and
leave
push
add
inc
repnz
xchg
fnsave
jb
add
adc
push
repnz
jbe
aas
jg
loopne
leave
leave
inc
inc
dec
push
xor
lret
leave
push
push
mov
mov
jae
mov
xor
mov
xchg
xchg
orl
jb
cmp
mov
jb
lsl
out
fists
in
or
aam
adc
bndldx
sub
sub
outsl
jge
pusha
jge
mov
insb
int
out
mov
jb
xchg
xchg
jge
jge
jge
loop
add
bnd
jge
and
cmp
or
mov
xchg
addr16
mov
pop
jle
ficoml
out
pop
push
aaa
jo
pop
ja
cs
fwait
daa
mov
xchg
stos
mov
add
jb
fsubp
out
cmovbe
lock
jle
push
jg
enter
push
add
jg
daa
xchg
iret
or
cwtl
cmp
xchg
cmp
xchg
jg
ja
mov
xchg
out
insb
iret
add
dec
xchg
cmpxchg
hlt
mov
fldl
jp
cltd
adc
sbb
mov
xchg
xchg
jns
jb
xchg
cmp
mov
pop
in
pand
pop
lcall
sbbl
jne
scas
push
add
fimuls
push
push
dec
xchg
ja
dec
lsl
mov
pop
jle
pop
sbb
je
xor
or
addps
addl
xorl
aas
xor
jmp
call
das
lock
andb
repz
or
popf
cmp
adc
sub
push
sahf
out
sahf
xor
cmp
inc
sbb
iret
cmp
push
push
sbb
lods
nop
xchg
clc
xchg
jl
and
lea
inc
aam
cs
pushf
push
daa
sub
dec
repnz
mov
pushf
xlat
cmp
mov
xor
mov
addb
or
add
adc
sbb
and
push
or
or
js
jns
cmp
dec
rcpps
das
pop
andl
adc
pushf
nop
sbbl
or
or
fs
push
add
test
jbe
dec
sahf
or
fcmovne
leave
in
xchg
iret
lcall
jo
mov
ficompl
clts
pop
add
jns
or
jns
out
ljmp
out
add
adc
iret
jae
push
and
rdmsr
test
sbb
sahf
out
xor
test
push
pop
setno
push
add
into
lock
test
test
push
add
mov
dec
mov
int3
jns
out
or
or
or
es
in
or
inc
mov
adc
pop
xchg
xchg
xchg
xchg
inc
dec
push
xchg
pop
xchg
pop
enter
push
or
jb
pusha
pop
es
or
test
pop
mov
mov
lods
jne
fildll
push
out
shll
jmp
into
leave
inc
rcr
pop
push
inc
ret
push
or
mov
in
xchg
xchg
xchg
xchg
mov
push
addps
leave
mov
pusha
xchg
mov
daa
cwtl
addr16
addr16
jb
ror
psubusb
add
add
into
mov
pop
into
mov
jns
pop
push
or
add
xchg
add
or
dec
dec
inc
dec
mov
adc
test
mov
pop
paddd
in
mov
add
dec
es
mov
enter
mov
mov
daa
push
add
push
lods
mov
leave
mov
add
test
stos
xchg
xchg
xchg
xchg
mov
mov
jmp
pop
fcmovnbe
jecxz
cmp
fsubs
xchg
sbb
mov
fmulp
sub
pop
xchg
add
add
mov
lcall
fsubrs
pop
and
das
and
add
leave
leave
sub
dec
push
push
sahf
out
out
push
or
or
fsub
jns
bound
push
cltd
loopne
adc
mov
dec
adc
enter
mov
in
fs
ret
rcrl
in
in
sti
lsl
ud2
mov
nopl
daa
daa
daa
daa
inc
andl
leave
call
xchg
lea
push
js
andb
repz
mov
nop
cwtl
fmulp
rep
bsf
push
loopne
push
and
push
and
mov
mov
and
iret
push
dec
daa
clc
movsl
leave
inc
repnz
sbbb
stos
mov
mov
das
int3
xchg
add
lods
incl
das
das
pop
jmp
lahf
sbb
jns
das
and
clc
jb
repnz
jp
jbe
jb
nop
sahf
lods
mov
out
pop
test
nop
mov
xchg
xchg
fucom
in
cmc
paddw
imull
push
pop
push
push
es
cs
sahf
out
or
or
or
push
or
mov
xchg
dec
outsb
nop
push
repnz
jmp
mov
in
nop
cltd
lahf
mov
sahf
out
test
das
scas
and
nop
in
das
das
das
das
lock
clc
nop
add
das
das
adc
cs
das
das
das
das
ss
ds
inc
xchg
dec
xchg
jns
inc
das
push
xchg
out
pop
xchg
imul
xchg
mov
xchg
xchg
popf
xchg
movsl
xchg
mov
sahf
out
sahf
pop
mov
jns
out
and
and
and
jns
out
and
repz
daa
add
sub
or
sbb
cvttps2pi
cs
pushf
xor
fidivrs
xchg
xor
out
sub
pusha
pop
punpckhbw
push
rclb
xchg
fistps
jmp
mov
mov
sbb
outsb
iret
aam
iret
in
leave
dec
mov
sgdtl
leave
dec
stos
iret
repz
push
add
add
leave
repz
add
dec
leave
leave
leave
leave
bound
lods
in
leave
leave
into
out
xchg
jns
out
or
popf
cmp
in
sub
ja
out
cmovne
daa
mov
imul
setno
out
sbb
sbb
pushf
fmull
lock
add
enter
comiss
inc
dec
ds
cs
ds
out
cmp
mov
sub
out
jns
pop
mov
mov
sahf
xor
pushl
pop
xchg
pushf
cmp
movhps
xor
leave
repz
das
aaa
push
cmp
mov
inc
dec
xchg
cmp
lock
mov
xor
cwtl
xchg
lods
dec
inc
fwait
in
xchg
scas
iret
clc
in
into
in
leave
lock
xchg
fimull
fs
xchg
out
rorb
pop
leave
jae
shld
shr
and
sbb
iret
and
out
dec
dec
inc
dec
add
pushf
fmull
add
cmpl
repz
mov
out
movsb
scas
pop
mov
cmp
rcr
adc
js
cmp
hlt
adc
or
iret
adc
sub
out
sub
sbb
xchg
out
dec
sbb
out
jns
js
and
add
cltd
cltd
movsb
cltd
insb
ds
cltd
mov
movsl
xor
lcall
push
and
mov
add
shrl
lcall
in
pop
punpcklbw
add
push
push
jo
js
push
xchg
dec
cmp
ds
mov
cmp
out
mov
mov
daa
iret
adc
rcrb
adc
into
repz
lar
pop
call
sbb
lock
inc
jbe
jb
mov
das
mov
add
adc
rorb
iret
fwait
rdpmc
mov
aas
inc
fwait
aas
dec
fwait
jg
dec
and
or
iret
add
mov
setbe
push
movsb
mov
rorl
rcll
and
cld
add
cmpxchg
in
or
sbb
in
jbe
dec
mov
addr16
cmp
dec
push
add
addr16
iret
jae
push
ja
nop
pushf
pop
jo
lcall
pushf
add
int
fcmovne
leave
aad
in
add
mov
adc
or
mov
xchg
cmp
add
lods
cmp
arpl
repnz
pushf
cmp
orl
leave
leave
leave
inc
cmpsb
scas
mov
fcmovne
leave
mov
and
sahf
pushf
dec
and
stc
add
or
xchg
fcmovne
sub
xor
cmp
xchg
add
leave
jae
dec
add
cmp
ja
jg
dec
sahf
out
pop
xchg
add
pushf
in
lahf
scas
sahf
or
mov
pminsw
jnp
fstp
repnz
cli
filds
lahf
pop
or
adc
sbb
ss
inc
or
inc
lahf
cmp
jbe
xchg
pop
xchg
add
inc
repnz
add
mov
nop
sets
inc
mov
cmp
cltd
mov
in
fisttpll
pavgw
mov
mov
pop
sub
cmp
imul
sahf
fcmovne
leave
fs
je
jl
xchg
and
test
and
outsb
pushf
or
cs
movsb
addr16
inc
js
lock
mov
daa
cmp
or
mov
pop
mov
call
mov
mov
fcmovne
mov
pop
seta
mov
call
mov
or
xchg
mov
pop
xor
jl
inc
mov
popa
mov
insb
mov
lea
cwtl
mov
mov
mov
fisubl
xchg
outsb
nopl
xchg
xchg
xchg
xchg
sbb
sbb
sahf
xchg
xchg
xchg
push
adc
mov
sub
jns
ja
push
sub
daa
jae
in
loop
jg
fsts
clc
add
xor
cmp
cmp
repz
repz
cmp
cmp
je
jg
mov
iret
repz
inc
mov
iret
repz
mov
roll
cmp
xlat
push
movsb
push
dec
fwait
cmp
enter
dec
das
pcmpeqd
cmp
dec
cmp
push
movntq
out
push
push
jno
in
sahf
push
jl
xchg
leave
popf
test
mov
cmp
subps
cmpsl
xchg
xchg
xchg
fucomip
cmc
adc
or
scas
xchg
scas
add
and
pop
movsl
cmp
out
add
add
cmp
iret
pop
nop
cwtl
cmp
fcmovne
mov
cmpsb
jg
cmpsb
xchg
and
sbb
cmpsb
push
cmpsb
into
hlt
in
push
adc
mov
jg
movsl
rep
and
movsl
enter
push
out
fmulp
fsub
ds
sbb
cmp
lock
add
cmpsb
daa
inc
cmpsb
jg
cmpsb
push
cmpsb
test
and
jns
add
mov
mov
out
pop
mov
pop
mov
pop
mov
vmwrite
mov
movsb
inc
pop
and
out
pop
cmpsl
push
add
add
jns
and
clts
xor
daa
daa
daa
cmp
inc
das
jb
cmp
or
pop
push
cmpsl
and
lahf
adc
dec
pop
test
fs
mov
sbb
cmpsw
cmpsl
scas
cmpsl
mov
mov
or
mov
cmp
xchg
adc
mov
test
test
pop
lods
lea
pop
test
in
in
mov
mov
test
in
por
cmpsb
test
mov
in
test
pop
rcr
cmp
daa
daa
call
in
stc
or
adc
sub
xor
sahf
out
dec
sbb
popa
pushf
je
out
insb
nopl
daa
iret
jae
ja
and
jns
and
repnz
push
daa
das
sub
int3
icebp
lock
jns
aaa
jb
stos
xor
add
repz
sahf
out
add
push
add
jno
stos
jg
ror
cmp
cltd
mov
stos
aad
xchg
out
fldl
repz
push
stc
xchg
iret
repz
push
stos
syscall
fstl
inc
ds
stos
push
stos
es
mov
stos
xor
movups
sahf
out
sahf
adc
dec
adc
dec
sahf
out
adc
iret
repz
fcompl
je
sbb
mov
push
xchg
push
out
es
pop
pushf
mov
leave
repz
sahf
and
cmp
rol
es
daa
aam
divl
fsubrl
push
in
inc
popf
out
out
sub
stc
orl
das
lods
inc
inc
add
ss
xchg
cmpsb
sub
ret
das
lock
inc
ret
inc
lods
jg
in
mov
lods
push
pop
popa
push
add
out
ja
push
dec
lods
jae
outsl
mov
cmpsb
cmpxchg
and
fidivrl
fisttps
ljmp
adc
sbb
lods
lods
push
add
add
popa
add
insb
ja
orb
xchg
out
lea
cwtl
sysret
sahf
out
xchg
mov
mov
icebp
in
movsbl
lods
call
lods
enter
fsubrl
ss
lods
or
sbb
cltd
dec
scas
scas
scas
mov
push
cs
orl
fisttpll
fwait
out
cmpsl
daa
daa
push
ror
loope
leave
insl
xchg
add
fimuls
and
iret
repz
or
or
or
daa
iret
repz
dec
push
pop
gs
jae
insl
pop
invd
adc
ljmp
pop
push
leave
repz
sahf
pop
cmpsl
mov
sbb
lret
aas
sbb
sbb
in
push
testl
and
and
pop
cmp
cmp
aas
cs
iret
repz
adc
outsb
jb
daa
iret
sub
mov
mov
jns
cmp
das
repnz
shlb
iret
mov
cs
add
xchg
push
test
mov
repnz
adc
sbb
and
bswap
leave
leave
in
xor
cmp
iret
repz
adc
pusha
jb
mov
mov
mov
fucomi
ss
orb
mov
sbb
jae
nop
nop
sbb
repnz
repz
repz
and
and
and
and
call
es
mov
add
or
and
sub
outsb
daa
iret
cmp
push
sub
leave
repz
fcompl
and
push
in
vaddsd
pusha
mov
ss
leave
mov
push
jne
add
or
adc
es
xchg
adc
sub
cmp
add
insb
push
add
aas
inc
push
mov
pop
adc
insl
or
inc
pop
inc
pop
stos
xor
scas
pop
inc
and
mov
xchg
dec
aaa
inc
ret
dec
aaa
inc
xor
stos
add
iret
repz
inc
cmp
xor
sub
iret
repz
sbb
clc
enter
imul
out
sahf
out
aam
int3
enter
sahf
rcrb
test
jns
ja
cwtl
nop
push
mov
out
pusha
push
push
dec
push
lock
inc
sub
or
add
movsb
adc
out
iret
adc
mov
inc
scas
push
add
jns
daa
add
add
add
or
or
or
or
in
jbe
scas
or
daa
adc
adc
jbe
dec
das
and
in
in
push
addr16
das
push
xorps
mov
imull
push
and
dec
sahf
out
sbb
push
pop
sbbb
cmpb
test
cmp
pop
xchg
sub
jbe
fbld
insl
pop
fidivs
pop
sbb
cmp
mov
adc
xchg
test
jb
and
mov
cmpsb
push
inc
std
dec
inc
inc
adc
stos
cmp
adc
cmp
add
add
movsb
add
cmpsb
xchg
pushf
pop
movsl
sbbl
mov
fisubl
daa
pop
mov
inc
mov
inc
mov
or
aas
iret
mov
jle
cwtl
pop
xor
jle
adc
jle
mov
fidivrl
xor
fcomp
loopne
scas
inc
sbb
jb
jle
movl
and
andb
jne
stos
pusha
add
cld
inc
xor
test
add
fmuls
inc
lods
lds
pop
pmovmskb
add
mov
into
subb
aam
aas
lods
addb
add
lea
jns
outsl
aam
push
adc
jns
out
adc
iret
repz
sbb
int
mov
repz
pop
push
cmp
jp
fldcw
fmul
mov
mov
js
lret
lcall
push
cld
sub
lcall
push
sub
call
aas
mov
incb
cmp
pop
nop
test
jb
and
fwait
sbb
push
jae
xorb
mov
push
push
push
pop
cmp
jg
inc
lea
pop
roll
xchg
aas
pop
push
arpl
pop
xlat
jle
lds
cs
cmp
inc
cmpsl
aad
aam
jg
out
push
cmc
mov
and
inc
sub
dec
mov
roll
add
and
xchg
xor
cs
xchg
es
inc
roll
cmp
mov
sbb
rorl
jecxz
add
mov
loop
push
xor
iret
repz
adc
lock
pop
call
jns
jnp
push
and
push
or
add
push
cld
sahf
out
out
adc
hlt
sbb
repz
jnp
push
rcrb
enter
cmp
rclb
and
mov
lods
and
repz
pop
test
jg
movups
xor
dec
stos
incl
outsl
in
scas
inc
cmp
xorl
jg
cmp
pop
cmp
repz
xchg
mov
repz
addr16
repz
xchg
mov
repz
dec
das
push
dec
insb
jo
adc
cmp
arpl
mov
add
nop
cmovo
hlt
in
jl
adc
mov
sub
mov
mov
ret
inc
and
sahf
mov
sub
lcall
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
outsl
incl
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
incl
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
call
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
call
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
and
ss
int
add
sti
aas
jno
or
mov
lcall
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
inc
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
xchg
hlt
fisubs
xchg
cmp
push
mov
xchg
aas
or
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
lcall
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
and
gs
std
orl
pop
ficomps
frstor
testl
inc
je
inc
inc
push
dec
jnp
sub
add
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
mov
pushl
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
ljmp
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
std
int
mov
insb
cwtl
mov
leave
mov
insb
fdivs
jne
mov
or
shrl
jg
push
adcb
push
popa
sarb
and
mov
cltd
xchg
mov
mov
or
decl
or
and
or
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
cmpsb
mov
test
push
loope
or
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
call
cmc
inc
movsl
fisttps
fadd
shll
jmp
outsb
xor
decl
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
call
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
lcall
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
jmp
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
ljmp
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
push
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
cli
ret
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
jmp
mov
rclb
or
add
mov
das
es
push
mov
or
add
mov
cmpsl
call
ret
sar
lcall
mov
fldcw
ret
es
pushf
mov
insl
incl
test
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
jecxz
lcall
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
incl
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
lcall
dec
aaa
pusha
mov
fidivrs
mov
jmp
movsb
sbb
mov
lret
mov
cmpsb
mov
sar
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
pushl
filds
sub
push
push
pop
repnz
xchg
shrb
push
pop
js
cs
ja
push
mov
xchg
inc
cmp
repz
fcomi
cmp
repz
fsubp
jecxz
iret
jae
in
call
iret
repz
in
repz
iret
repz
cmc
div
clc
stc
cli
gs
daa
adc
mov
inc
mov
cmpsl
popf
scas
inc
sub
sbbb
xchg
iret
jnp
daa
cltd
fadds
push
dec
bound
and
inc
mov
jecxz
insl
bound
jle
test
arpl
inc
inc
fcoms
lret
sub
cltd
out
and
inc
sub
push
sub
xchg
jg
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
jg
fistpl
adc
xor
jnp
push
pop
xor
popa
push
call
jbe
pop
insb
imul
imulb
xor
mov
add
inc
out
add
push
adc
dec
push
rclb
xor
or
fs
insb
and
gs
je
scas
xor
gs
xchg
fsubr
xor
aas
jnp
cli
adc
mov
fs
inc
inc
adc
push
push
adc
shlb
aaa
je
orl
jns
push
mov
pop
pop
dec
insb
pusha
add
and
popa
xchg
cmp
mov
insb
aaa
aas
sbbb
aas
add
notb
or
cltd
and
jae
cmp
int
pop
mov
and
les
inc
movl
sbb
inc
pop
fnstcw
jae
inc
inc
inc
add
mov
push
scas
add
stos
cmp
in
inc
int
push
dec
cmp
inc
subb
loop
xor
fs
ja
sbb
pop
inc
outsb
jne
push
pop
in
dec
jge
iret
mov
add
add
mov
arpl
add
addr16
out
push
clc
xchg
into
pop
jo
sti
push
in
insl
mov
cmp
and
aas
jmp
mov
cmp
add
add
push
sbb
sub
sbb
rcll
dec
aam
mov
xchg
lret
mov
rcr
lahf
xchg
out
addb
inc
jb
addr16
pusha
xor
jo
sahf
xchg
lahf
push
outsl
outsl
mov
outsl
pop
in
or
lods
push
jno
push
mov
mov
in
pop
cwtl
sbb
sbb
nop
test
pop
cmp
rcll
arpl
cmp
pop
pop
inc
mov
jo
test
xchg
xchg
lea
lock
outsl
insb
jns
das
push
add
push
xchg
fcoml
gs
inc
outsl
arpl
mov
pmovmskb
dec
mov
inc
push
bound
ja
inc
jbe
stos
jmp
cmp
dec
xor
les
jecxz
shlb
cmp
xor
inc
fs
or
add
fisubl
movsb
sbb
iret
rcll
sahf
adc
js
je
mov
mov
pushf
adcb
addr16
daa
stos
mov
jo
outsb
rclb
sbb
push
inc
dec
pop
je
jmp
bound
outsb
arpl
je
xor
pop
pusha
in
or
andb
pop
push
fisubrl
xchg
fistl
sub
push
daa
sub
lods
and
xor
test
mov
add
jp
pop
mov
adc
add
xchg
inc
aas
in
pushl
into
outsl
out
out
pop
hlt
loop
inc
dec
popa
repnz
inc
add
lods
ficoms
mov
pop
mov
ljmp
mov
push
sub
fisttpll
cmc
outsl
push
xor
sarb
outsl
addb
mov
jno
ljmp
sub
sub
jmp
icebp
jl
add
cmp
jmp
jg
ss
cmovle
idiv
cmp
lods
dec
andl
cmp
fstpl
sahf
test
lcall
inc
ret
jns
fcoms
les
push
dec
inc
jbe
xor
decl
push
push
or
sub
inc
xor
ss
sub
jl
cmovb
jmp
rol
inc
sbb
sbb
add
out
daa
out
fwait
jl
xor
sbb
or
jmp
dec
insb
arpl
imul
ljmp
std
dec
xor
push
jmp
add
jmp
pop
adc
scas
cmpl
push
hlt
icebp
mov
adc
adc
cmp
xchg
push
imul
call
inc
mov
mov
lods
inc
inc
out
aaa
mov
pop
or
fistl
sub
movl
decl
rcrb
mov
inc
fisubl
pop
arpl
daa
add
js
xlat
cmpsl
dec
stos
mov
int3
jle
push
aaa
sbb
negb
mov
inc
cmp
ljmp
xor
insl
and
aam
roll
popf
sub
xor
pop
fisubs
pushl
xor
into
ljmp
pop
in
xchg
movsl
and
imul
pop
jmp
jno
loopne
imul
pop
pop
dec
leave
hlt
adc
push
adc
or
jle
push
push
sub
lcall
pop
aam
cwtl
or
mov
iret
std
ds
dec
inc
mov
sbb
mov
cmpsb
js
cmp
outsl
clc
aas
fstl
aad
and
push
fcmovu
test
shl
sub
incl
push
test
dec
in
int
jecxz
ja
jmp
sbbl
imul
pushf
mov
imul
repnz
push
negb
daa
repnz
inc
adc
mov
and
in
sub
subb
bound
dec
xchg
ja
pushl
mov
jbe
fwait
movsb
xchg
lret
test
insb
lods
pop
in
mov
cmp
sbb
pushl
icebp
sub
call
jae
cli
xchg
add
mov
jge
mov
jns
divb
xor
pop
mov
xchg
stos
pop
lcall
push
jb
fcoms
sub
lcall
xorl
sub
incl
adc
xchg
xor
sbb
shrb
or
adc
ret
mov
ljmp
aas
mov
sbb
mov
test
jb
and
mov
out
loopne
pop
mov
mov
in
add
pop
xor
push
or
and
push
movsl
mov
jmp
lods
xchg
mov
pop
xor
dec
adc
sub
dec
dec
dec
jnp
xor
inc
les
dec
icebp
repz
rolb
int
fdivs
stos
mov
cmp
xchg
das
cli
decl
adc
mov
repnz
icebp
addr16
pop
mov
xchg
add
sub
dec
sbb
scas
mov
gs
inc
fstpl
xor
mov
cmp
xor
dec
mov
jmp
cmpsb
arpl
xor
or
and
xor
int
push
push
mov
add
ret
daa
test
aad
jne
out
pop
mov
pop
mov
add
fisubrs
jecxz
jae
outsb
dec
inc
sub
xchg
daa
cmp
call
shrl
in
or
adc
nop
enter
mov
pushl
loope
popa
negl
pop
dec
fmuls
sahf
adc
mov
fmull
mov
arpl
push
lahf
loope
in
std
and
js
insb
xchg
loop
mov
ljmp
jp
xchg
dec
push
fsubrs
sub
mov
jnp
cmp
mov
pushl
pop
sub
mov
inc
adc
sub
sub
cmp
jmp
aaa
xchg
loop
fcomps
and
cli
push
fld
enter
int3
cmp
pop
jecxz
add
jmp
insb
dec
je
sbb
push
dec
mov
js
xor
ja
lret
mov
jg
push
insb
insl
push
bound
mov
add
mov
dec
out
add
bound
stos
fists
jg
imul
sbb
ret
scas
and
int3
lea
mov
call
xchg
mov
mov
decl
sti
inc
ss
bound
cmp
adc
outsb
adc
sub
std
mov
lret
aam
jg
cltd
mov
popa
stos
test
adc
jg
and
cld
int3
movsb
sbb
ret
xlat
call
mov
mov
inc
push
jle
or
inc
or
push
fsubl
das
clc
call
arpl
sbb
fs
add
call
int3
inc
ss
jns
mov
jle
or
pop
jmp
dec
push
mov
pushf
std
mov
inc
loope
mov
ljmp
xor
xorb
sbb
std
cmp
loope
or
ljmp
add
jle
dec
adc
or
inc
mov
je
jecxz
dec
xchg
mov
lds
or
sahf
and
lea
adc
jg
cmp
sub
mov
pop
aaa
xlat
jo
fsts
lcall
and
mov
loop
int3
jmp
jge
push
sub
mov
sub
decl
cmc
cs
out
and
mov
xchg
dec
rolb
xorl
stc
mov
fs
sbb
adc
xchg
inc
jno
pushf
bound
loope
arpl
push
ret
push
sti
ljmp
shl
or
ret
cmp
cmpsb
sarl
adc
dec
add
mov
ljmp
cs
push
sub
test
and
insl
mov
mov
sahf
pop
sub
jmp
pop
inc
cltd
push
fstl
xor
xchg
mov
cmp
shr
movsb
ja
les
shl
das
cli
scas
add
and
dec
sti
dec
fsubrs
dec
mov
mov
mov
in
arpl
shrb
jp
xor
or
div
cmpsl
into
mov
aas
adc
add
pop
test
mov
add
mov
enter
xorb
fmull
daa
out
cmp
les
and
daa
sub
cwtl
shlb
fidivs
sub
ret
in
inc
std
roll
sbb
fs
repnz
xchg
std
aaa
cld
ljmp
and
push
adc
std
lret
xchg
push
ds
scas
test
mov
and
cmp
repz
mov
xor
add
sbb
add
incl
popa
mov
dec
jl
xor
xor
push
mov
imul
mov
and
pushl
dec
aas
inc
ret
ds
sbb
push
dec
ficoms
aas
cmp
popa
sbb
fcomps
push
shrb
jb
push
xchg
inc
jp
sub
int3
mov
loop
imul
pop
and
pop
dec
and
aam
movsb
mov
add
popa
xchg
jmp
lds
into
mov
jl
jecxz
push
sbb
xor
sub
jb
outsl
lcall
mov
popf
jecxz
cmp
xchg
out
push
adc
sbb
xchg
inc
enter
pushl
adc
jns
jae
lret
dec
fidivl
fbld
scas
insb
es
inc
fistpl
ret
repnz
cmp
dec
mov
cld
call
lahf
scas
out
mov
or
in
dec
mov
dec
mov
stc
es
jg
xchg
cmc
inc
ret
rorb
test
outsl
clc
pushl
push
jae
popa
hlt
pop
cmp
adc
mov
out
jno
mov
call
ret
xlat
js
or
dec
addr16
clc
jg
decl
fildl
pop
sub
adc
insb
inc
or
lcall
int
xchg
dec
pusha
xchg
loopne
sti
mov
test
add
or
xor
push
push
flds
mov
clc
adcl
mov
push
adc
jno
decl
in
inc
ja
outsl
enter
sub
push
dec
in
inc
rcrb
push
and
out
call
xlat
iret
inc
shr
dec
leave
sbb
repz
fwait
mov
cmp
mov
daa
sbb
out
divb
inc
fcompl
mov
lds
and
leave
fildll
das
cmp
xchg
lea
inc
ljmp
adc
ljmp
cli
lcall
int3
sbb
pop
cmp
mov
lods
pop
insl
inc
mov
mov
lret
xchg
jns
cli
dec
add
in
test
push
and
lret
sar
mov
in
js
pcmpgtb
dec
or
cs
push
pop
and
push
stc
aas
sub
dec
je
add
sub
std
out
cmc
lcall
xchg
lahf
jmp
xor
sub
sbb
or
cmp
nop
add
pushl
push
jbe
pop
dec
pushf
adc
jg
fadds
mov
aas
inc
test
sub
cmpsl
nop
sbb
pop
fnsave
add
jl
out
call
nop
jl
mov
fcomip
je
xchg
inc
jmp
pop
and
or
outsb
fisubs
icebp
mov
decl
inc
popf
in
lcall
jno
xchg
divb
or
nop
mov
rolb
nop
mov
add
inc
dec
xor
mov
addb
aad
add
mov
jbe
and
inc
xchg
test
dec
push
pop
imul
sar
pushl
loope
sbb
das
cmp
add
out
pop
scas
cmp
push
push
negb
jg
imul
pusha
push
les
gs
incl
dec
mov
xor
loop
mov
xlat
sbb
mov
icebp
push
std
mov
or
jle
rcrb
push
jl
lock
mov
adc
loope
mov
xchg
jge
pushl
stos
rcr
mov
loop
imul
or
xorb
outsl
cli
lcall
xchg
mov
jg
dec
inc
pop
cwtl
aaa
jns
adc
adc
ljmp
lahf
enter
insl
orl
and
jle
cmp
jmp
lcall
and
xor
aam
test
push
mov
or
inc
xor
jmp
cmp
fstl
adc
pop
sbb
mov
pusha
sbb
xor
cwtl
adc
cli
jmp
lcall
mov
pop
and
repz
leave
nop
mov
decl
inc
lret
mov
insl
and
lds
cmp
mov
jg
pop
cmp
hlt
aas
data16
push
mov
or
inc
arpl
xor
or
cmp
fldcw
lret
jo
cmp
inc
jp
adc
cmp
incl
push
jo
scas
or
out
sbb
push
jne
sbb
cld
jnp
syscall
pusha
scas
fcmovb
cmp
xchg
call
mov
scas
push
inc
ret
cmp
loopne
jg
inc
lds
ljmp
clc
into
and
cwtl
inc
and
or
dec
push
out
ret
cmp
pop
insl
push
out
lock
aam
sbb
dec
xlat
lods
xchg
test
mov
imul
add
call
js
hlt
dec
add
jbe
xrelease
mov
jmp
das
lret
xchg
out
sub
ss
out
push
inc
sbb
xor
pop
popl
jg
jmp
out
cltd
lahf
push
and
mov
push
pop
and
jmp
je
cli
push
jbe
pop
xchg
je
mov
mov
push
out
lret
incl
jecxz
mov
mov
jbe
rolb
add
pop
push
push
pop
ficoml
mov
test
cmp
jg
test
popa
mov
incl
insl
sbb
xor
dec
sub
ss
mov
and
outsb
mov
in
xchg
push
pop
sbb
mov
sub
mov
xor
xchg
testl
arpl
bts
icebp
pusha
cs
orb
outsl
cli
pushl
push
inc
xor
mov
mov
push
xlat
imulb
add
mov
sbb
sub
add
mov
or
xchg
and
das
xchg
push
inc
dec
jmp
loope
in
mov
insb
jae
mov
xchg
les
push
or
push
inc
push
ret
ss
in
in
ds
pop
aas
gs
jmp
mov
jne
shll
xchg
inc
adc
sbb
call
mov
dec
push
mov
stc
les
inc
fmull
mov
sub
mov
xor
pop
add
push
xor
insb
fst
pop
mov
rolb
jmp
xor
xlat
sti
and
iret
mov
mov
mov
xor
adc
sar
incl
int
lea
out
sbb
in
mov
xor
mov
xlat
xlat
aaa
rcrb
incl
xor
dec
push
pushf
arpl
jae
gs
jo
sbb
add
mov
add
and
into
mov
das
clc
incl
add
neg
sub
push
push
sub
push
icebp
icebp
push
orb
jmp
shr
mov
dec
sti
mov
inc
dec
jb
cwtl
push
in
fisubrl
xchg
ror
pushf
push
fwait
jg
push
std
sbb
and
mov
push
pop
rol
and
jg
sub
sbb
incl
dec
pop
mov
mov
and
sbb
pushf
rcrl
push
lea
jmp
int
in
insb
scas
pusha
and
mov
cmp
sub
sub
pop
sar
movsl
sub
mov
push
jmp
mov
push
push
dec
or
outsl
or
add
gs
jl
push
jno
inc
popf
xchg
push
into
daa
lods
pop
ds
mov
add
fs
in
mov
sub
pop
out
cli
lcall
lods
pop
cltd
push
in
enter
pop
or
push
mov
jb
dec
sar
decl
dec
or
ljmp
and
ljmp
xor
out
sbbl
pop
sbb
cltd
add
ljmp
pop
xchg
mov
cld
sub
ja
cmc
lret
sarb
sti
or
incl
lods
dec
push
cltd
movsb
les
xor
push
push
or
outsb
xlat
scas
cmp
mov
mov
lds
or
add
dec
push
mov
jg
js
aaa
mov
sbb
and
dec
adc
lret
pop
mov
push
xchg
bound
ds
jnp
jo
clc
das
push
mov
mov
aaa
ja
pusha
mov
sub
pop
xchg
pop
fs
mov
pop
jg
push
jb
call
xchg
push
mov
pop
fstpt
in
push
add
ds
sub
pop
xchg
loopne
dec
js
outsb
fildll
xorb
mov
cmpsb
nop
pop
cwtl
mov
rcll
lods
loop
add
decl
lret
xor
shll
out
push
dec
mov
hlt
pop
cmpsl
mov
cs
jnp
adc
popa
divps
cmp
cli
sti
gs
inc
mov
gs
pop
popa
sbb
lcall
add
mov
lret
xchg
pop
rcrb
pushl
sbb
int
jmp
xchg
xchg
sub
sub
ds
fnstsw
icebp
adc
lcall
push
jl
adc
cmp
div
pop
or
fwait
call
dec
inc
movsb
scas
cmovg
lods
or
rolb
pop
fwait
outsl
mov
xor
or
or
sbb
mov
hlt
push
fmuls
mov
je
fidivrl
mov
or
decl
push
movsb
push
gs
ljmp
aaa
mov
and
mov
jmp
pop
ss
lcall
mov
imul
pop
fwait
sub
aaa
icebp
add
pop
cmpsl
insl
pop
jo
push
sbb
jecxz
popf
pushl
xchg
xchg
mov
test
adc
cli
cmp
movb
adc
inc
out
aam
sbb
movsb
sbb
and
and
fcomip
iret
mov
shr
sbb
dec
out
jp
sub
dec
mov
cwtl
rclb
mov
ljmp
stc
outsb
and
push
jmp
out
sbb
inc
aad
jns
mov
cmpsb
incl
jno
sbb
insl
adc
scas
add
fwait
das
mov
mov
in
inc
stc
stos
ret
xor
xor
fcomip
aam
push
lods
lods
imul
push
dec
mov
incl
or
adc
push
add
cmp
ljmp
push
jg
decl
js
out
test
mov
xor
gs
cmp
mov
push
sahf
loopne
dec
add
or
lret
jnp
arpl
add
arpl
xchg
sub
or
mov
fdivs
loop
and
rcrb
and
xchg
xchg
add
jle
dec
insb
push
mov
hlt
addb
add
jl
sbb
and
repnz
xor
or
and
adc
out
arpl
dec
fisubl
decl
mov
stc
adc
mov
and
jbe
lret
arpl
pop
pushl
jle
push
mov
leave
scas
rorb
repnz
dec
lds
nop
decl
add
add
pop
cwtl
dec
or
cmp
cmp
jle
mov
jle
lea
or
adc
outsl
pusha
mov
dec
jecxz
mov
cmc
daa
mov
jb
out
dec
mov
test
mov
decl
inc
pushf
jnp,pt
xchg
icebp
sbb
jb
mov
lock
mov
xor
xchg
jg
lods
or
mov
sbb
jmp
decl
jle
ljmp
shrb
or
mov
sbb
sbb
lcall
dec
out
mov
test
stc
out
mov
xor
pop
outsb
in
mov
fmuls
push
aad
mov
xchg
outsl
inc
or
stos
cmp
xchg
fidivrl
mov
decl
outsl
movsl
daa
lahf
inc
sub
mov
fs
data16
mov
pop
fidivl
pop
sbb
ljmp
mov
negl
fdivrl
decl
add
sbb
call
shrl
add
nop
push
data16
out
cmc
pop
loopne
outsb
cs
stos
add
decl
aam
call
lret
ja
push
cmp
mov
pop
ficompl
cmpb
clc
out
pop
mov
fwait
call
lret
cli
mov
loopne
dec
xor
xor
shlb
insl
call
lods
jne
js
lret
lcall
clc
sub
je
jns
xor
incl
mov
inc
xor
sbb
cmpsb
xlat
ficoml
adc
push
jb
data16
dec
sbb
std
mov
mov
dec
arpl
add
pop
lret
dec
xchg
push
sub
jg
outsb
ret
addr16
inc
inc
mov
cmpsb
push
xor
mov
push
out
hlt
call
nop
jge
push
jbe
jne
icebp
jne
gs
dec
das
sbb
ficoml
repnz
lahf
ljmp
lgdtl
add
and
shr
outsb
mov
sub
push
or
mov
cld
jg
adc
lds
enter
mov
in
mov
and
out
cli
jbe
dec
ss
dec
lahf
clc
frstor
pushl
fnstenv
mov
pop
insl
lds
test
mov
sub
test
push
int
mov
jmp
inc
lahf
cltd
std
push
mov
fsincos
and
cwtl
dec
jl
mov
and
stc
push
inc
cltd
add
ret
xchg
pop
adc
pop
es
jl
outsb
mov
leave
int
jns
fnsave
incl
lret
int3
loope
in
push
lahf
aaa
repnz
xchg
pop
pop
int
sahf
jle
mov
daa
ljmp
jge
push
or
push
push
cmp
xchg
xchg
aas
into
or
in
add
inc
movsl
inc
addr16
dec
jne
cltd
lret
leave
lcall
jbe
imul
aaa
push
mov
pop
sbb
sbb
lds
jae
jmp
xchg
arpl
rclb
das
sbb
xor
mov
mov
in
ret
mov
ljmp
adc
daa
shl
cmpsl
mov
sahf
out
lret
push
leave
fnstsw
cmp
cs
incl
xor
sub
jmp
push
jl
pop
mov
jle
jb
jmp
or
lahf
test
mov
outsb
xor
jmp
imul
lcall
decl
lcall
push
imul
add
pop
test
cltd
pop
mov
mov
sub
mov
mov
push
cmp
jbe
xchg
int3
sar
adc
out
scas
push
enter
dec
stos
jne
inc
dec
jl
lret
out
jb
popf
jmp
jecxz
mov
loop
pop
into
rorl
leave
scas
cmc
movntq
out
mov
icebp
outsb
sbb
pushf
lods
clc
pusha
adc
lods
repnz
pushl
lcall
xor
push
mov
lahf
les
dec
add
test
pushl
je
outsl
pop
xlat
push
fwait
das
decl
in
shll
sbb
and
push
decl
clc
dec
rcll
movsb
rclb
or
xchg
lret
push
insb
cmp
mov
mov
rol
lock
ljmp
pop
dec
xchg
stos
scas
cmpsl
lea
or
shl
jo
scas
jp
cmpsl
out
clc
decl
and
lcall
outsl
aad
xor
pop
das
lret
push
xor
inc
jmp
leave
jge
pop
lods
insl
aaa
sbb
dec
push
pop
in
mov
adc
fcos
pushl
hlt
cmp
sbb
add
jb
dec
test
insl
push
push
repz
jbe
icebp
call
ret
aad
loopne
aam
lds
out
xor
test
shlb
cltd
ds
enter
loopne
pop
mov
jg
incl
ret
pop
pop
or
rcrb
and
jo
rclb
mov
jecxz
mov
mov
jl
push
pop
addr16
cmp
scas
icebp
sbb
test
pushl
adc
adc
jnp
aad
dec
pop
push
dec
push
fldcw
adc
and
and
mov
lcall
jle
incb
faddl
ffreep
fisubrl
or
loope
push
roll
jecxz
cmp
and
and
mov
push
pop
mov
rolb
mov
sub
insl
mov
jo
dec
shl
jbe
or
xor
call
mov
push
cld
xor
into
sbb
fsubrs
icebp
cld
mov
outsb
in
add
mov
jns
mov
lods
test
das
mov
call
xchg
test
aad
jno
cmp
sub
add
jg
jbe
imul
pop
pop
and
push
cs
sarl
scas
fwait
iret
mov
add
inc
insb
cwtl
dec
in
pop
xor
jmp
jmp
fcomip
jmp
mov
or
testl
adcl
decl
and
add
mov
or
test
or
mov
push
cmp
movsl
inc
xchg
or
adc
xchg
xchg
cmpsb
lock
jmp
enter
aam
and
stos
adc
lret
adcb
insb
filds
ja
inc
mov
popf
lds
jle
push
push
imul
ret
jnp
adc
lods
cmp
imul
enter
lods
mov
dec
lcall
mov
mov
add
fcmovu
inc
xchg
fisttps
mov
inc
and
ljmp
sub
sub
int3
pop
loop
movsb
or
les
cs
lret
push
and
push
push
lcall
ficompl
mov
data16
add
ljmp
pop
out
stos
icebp
jge
lahf
bsf
cltd
mov
pop
pushl
jns
aad
mov
mov
test
or
adc
data16
cmc
pop
in
mov
ljmp
jbe
inc
mov
jo
jnp
stos
push
or
push
dec
lock
ljmp
out
roll
xchg
push
and
sub
jne
sbb
call
ljmp
dec
sbb
iret
mov
xchg
push
lods
jge
inc
mov
jmp
repnz
scas
or
adc
scas
clc
stos
xchg
test
pop
imul
pop
jl
sbb
inc
mov
hlt
dec
add
bound
sub
cmp
pop
and
pop
icebp
fstl
fisubs
es
adc
test
sub
lret
stc
mov
inc
sbb
jmp
cmp
mov
or
adc
jecxz
jg
adc
shll
lret
push
xchg
pop
mov
mov
out
cmp
cltd
ret
negb
into
cmpsl
dec
or
jmp
addr16
xor
cmp
imul
inc
in
and
push
mov
mov
loope
dec
dec
push
cld
or
mov
aam
lock
xlat
stos
xchg
ljmp
xchg
dec
movsb
pusha
nop
data16
xor
inc
xor
popf
into
jns
dec
cmp
jnp
inc
adc
xchg
in
adcb
call
cmp
push
or
and
push
and
pop
add
or
insb
inc
ss
repz
jbe
mov
or
mov
lret
mov
sbbb
cmp
decl
and
xchg
outsl
push
mov
jae
sub
and
out
lcall
push
pop
ret
mov
and
jecxz
mov
mov
rcll
jmp
shll
jmp
cmp
pop
imul
sub
in
mov
lret
incl
enter
mov
xor
insb
dec
mov
movsl
in
xchg
jl
ljmp
adc
cwtl
into
mov
mov
stc
inc
in
pop
adc
pop
movsb
jo
dec
fs
xor
mov
push
imul
cmp
aad
fldl
pusha
leave
xchg
nop
sbb
jmp
xchg
xchg
push
mov
lahf
ljmp
jle
mov
mov
pop
adc
loopne
sub
xcrypt-cfb
cmpsl
jmp
or
xor
rolb
lcall
add
in
xchg
test
stos
jmp
or
fwait
mov
mov
mov
int
in
mov
mov
aas
mov
adc
and
cmp
fmuls
lahf
pop
imulb
xor
dec
lret
out
clc
mov
push
dec
sbb
ret
dec
mov
or
fiaddl
outsl
lcall
and
xor
pop
bound
pop
enter
lods
cmp
sti
pop
dec
sbb
decl
mov
push
loop
xlat
sub
or
push
sahf
daa
insl
in
jp
into
sahf
test
lcall
pop
xorl
lret
bswap
ficoml
xor
lea
lods
sub
xor
out
std
jg
call
sti
js
fucomi
mov
adc
lcall
repz
mov
test
outsb
lcall
cmp
mov
dec
mov
fbstp
jl
leave
fs
int
jns
arpl
sahf
pop
xchg
jecxz
cmp
bsr
sbb
gs
xchg
mov
in
insl
out
sub
test
mov
mov
and
jne
lret
sarw
inc
inc
rcrb
dec
push
sbb
scas
jne
call
adcl
dec
xchg
fildll
ljmp
jg
cld
ljmp
push
call
pop
lcall
mov
or
inc
cs
add
or
je
dec
mov
sahf
cmp
mov
leave
jo
lcall
pop
sti
enter
shl
cmp
cmp
mov
ja
outsl
test
cmp
test
jnp
mov
cmpsl
fistps
pop
lcall
repnz
fldl
xchg
jmp
dec
lcall
in
or
shrl
pushl
in
pusha
push
xor
orl
dec
testb
fsts
fnstcw
cmp
cmc
aam
bound
push
xchg
lea
jmp
pop
cmp
gs
test
mov
imul
pop
cmp
jmp
scas
xor
pop
das
xor
inc
ljmp
das
in
mulb
xchg
cld
lcall
pop
pop
pop
std
movsl
int
mov
sub
mov
mov
mov
ja
ljmp
xor
xchg
shrb
stos
dec
or
out
adc
jmp
sbb
sbb
jbe
lahf
jns
lret
aaa
sbb
mov
mov
in
mov
jns
leave
fmuls
lret
lods
loope
adc
stos
in
pop
inc
lahf
call
inc
ljmp
test
mov
cld
fbstp
push
cmp
incl
pushf
insl
lock
fwait
mov
popa
xor
mov
jg
and
out
inc
scas
or
stos
movsb
shl
fiadds
out
or
lock
or
arpl
call
sahf
adc
scas
dec
inc
mov
loop
test
les
xchg
popf
insb
in
fildll
xor
cmpsl
add
divl
rcrb
xor
push
das
pop
pop
shrb
mov
dec
in
mov
cmp
mov
testb
pushl
incl
fs
ds
xchg
mov
andl
add
mov
shrl
cli
ret
and
jno
aaa
pop
push
xchg
xchg
aam
subl
call
cli
and
dec
shrl
or
sub
clc
stos
sub
push
adc
push
int3
das
dec
adc
dec
inc
out
fcoml
push
or
insb
arpl
pop
cmp
adc
push
adc
int
jl
ret
pop
pop
pop
mov
cs
xor
int3
mov
mov
frstor
decl
enter
insb
clc
movl
inc
filds
cli
push
or
int3
jmp
xor
pusha
arpl
adcb
mov
nop
mov
out
mov
jmp
adc
ljmp
insl
std
aam
es
in
or
sub
fisttpl
sub
insl
xlat
pushf
lods
or
push
sub
pop
mov
das
mov
jge
jns
std
inc
lahf
push
sti
lcall
push
mov
rorb
xor
jmp
incl
insl
repz
sbb
mov
call
mov
pop
push
loopne
outsb
pop
cld
push
cmp
movsl
mov
mov
idiv
fdivl
xor
push
popa
hlt
xchg
adc
xchg
dec
pop
shl
decl
pushf
cmp
imul
jge
and
lods
add
mov
addr16
and
ret
mov
movsl
xchg
push
cld
adc
das
fmull
sarl
decl
rcrb
sub
push
and
mov
add
mov
cmp
sub
call
jp
mov
call
and
das
add
jae
and
xchg
incl
pop
fmuls
jb
mov
jg
add
xchg
cmp
mov
mov
ja
sbb
lret
ret
pop
std
inc
sbb
cwtl
aaa
jmp
idiv
incl
enter
lods
lods
lret
and
cmc
mov
loop
adc
push
adc
push
dec
fcomip
push
pop
jge
test
sbbb
pop
int3
shlb
cmp
pushl
jmp
sbb
scas
inc
loopne
sbb
or
scas
fadds
mov
enter
fs
jmp
sub
jns
dec
ja
push
cwtl
imulb
ljmp
popf
pop
push
inc
xchg
adc
sbb
inc
or
inc
orb
dec
shl
aas
pop
pushf
hlt
and
lock
js
mov
or
jge
dec
lret
in
pop
aam
mov
outsl
mov
pushl
clc
subl
icebp
jmp
out
cmp
es
test
lahf
mov
fs
jne
mov
jg
lcall
out
mov
jmp
mov
int
adc
testb
sbb
in
and
mov
inc
mov
mov
pop
sub
mov
icebp
mov
js
sbb
xchg
rclb
dec
jbe
stc
dec
mov
cmp
ljmp
call
divps
inc
inc
fsubrs
inc
addr16
xchg
lods
icebp
jmp
lock
inc
mov
xchg
adc
or
xor
sub
lcall
or
push
jo
adc
testb
mov
lods
out
cmp
test
sti
mov
mov
pushl
imul
add
out
push
leave
cltd
repz
fs
push
cld
mov
xorl
jnp
jns
mov
fwait
outsb
rcrl
jmp
mov
and
dec
stc
scas
ja
or
inc
fsubrp
pop
cltd
into
orl
jmp
addr16
cmpb
and
mov
mov
push
adc
lods
jns
push
cmp
pop
adc
decl
pop
jmp
mov
loop
jmp
jne
fnstenv
xchg
or
fists
sbb
mov
mov
sar
call
repnz
and
cmpsb
jno
iret
cmp
push
out
sbb
scas
mov
bound
push
xchg
pop
cmp
mov
push
jge
dec
rol
xor
cmp
mov
incl
lds
inc
repz
push
mov
dec
in
cmp
sbb
push
xchg
jle
outsb
jmp
mov
pop
int
add
sahf
int3
stc
stos
cmp
movsb
inc
mov
pop
int
mov
call
cmp
jmp
lret
lods
clc
xor
dec
xlat
cmpsb
leave
repnz
jle
lock
jmp
jae
cmp
add
cwtl
mov
push
sub
in
jno
enter
jns
add
decl
adc
sub
adc
dec
sub
add
xchg
jmp
adc
cmp
cli
pop
mov
cmp
push
test
lods
pushl
shll
pop
adcb
test
fidivrl
in
sbb
push
sbb
pushl
hlt
loopne
out
pop
push
jp
fs
pushf
sbb
andb
jl
gs
cld
out
imul
clc
scas
in
inc
int3
aad
inc
dec
xchg
scas
dec
lcall
jg
neg
aaa
pop
cmpsb
mov
mov
jmp
xlat
mov
sub
ljmp
ljmp
adc
ja
jnp
pop
inc
push
js
cmp
movsb
or
inc
loopne
jns
addr16
add
cltd
xchg
jns
jnp
add
scas
jg
add
jns
mov
mov
and
and
insl
jle
adc
decl
xor
ret
int3
pop
sbb
add
xor
push
xor
pushf
mov
jmp
out
sub
push
dec
mov
rorl
clc
je
jl,pn
push
pushf
adc
incl
pushl
dec
add
mov
test
xor
jg
into
sbb
mov
call
std
mov
fbld
sub
sbbl
scas
enter
push
loopne
inc
cmp
aaa
mov
hlt
dec
mov
int
pop
hlt
dec
or
adc
nop
xor
cli
in
mov
out
sbb
stos
decl
jbe
sbb
sbb
jge
into
pop
mov
push
inc
and
jno
jnp
fdivrl
adc
lcall
mov
or
nop
in
mov
shl
mov
imul
mov
popa
push
mov
fcmovnb
or
call
sub
inc
or
or
fs
sbb
cs
xchg
and
call
fs
outsb
sub
adc
push
sub
shl
xchg
cmp
add
call
aas
sbb
pop
stos
jmp
xor
sbb
mov
pop
jne
out
push
cmp
mov
cmc
hlt
cmpsl
pop
stc
test
sub
ljmp
fistpl
jecxz
gs
out
imul
subb
into
xchg
pop
xor
xor
in
add
incl
scas
jb
sarb
scas
cld
loopne
sub
pop
cltd
dec
fidivl
inc
loope
xchg
dec
mov
jg
push
clc
pushl
lds
pop
sbb
mov
mov
fcomp
dec
out
push
jge
cmp
leave
cmp
ljmp
shrb
dec
daa
dec
cwtl
sbb
sarb
or
inc
popa
adc
mov
out
aam
je
call
dec
and
push
sbb
int
cmpsb
dec
fs
and
xor
ljmp
push
xchg
enter
xchg
mov
decl
fcoml
inc
push
or
stos
xchg
clc
das
and
xor
jle
jg
jg
call
mov
outsb
adc
ret
jg
jo
sub
push
aam
lcall
outsl
ss
sub
sahf
ja
insb
push
inc
into
push
lret
mov
shl
call
jmp
pop
or
mov
xlat
inc
mov
int
adc
in
incl
and
rcll
jl
mov
xchg
fcos
incl
into
mov
ds
push
mov
xor
lods
mov
andl
decl
fstpt
mov
cld
xchg
jbe
lods
in
jp
or
jbe
dec
mov
ret
or
popf
stos
cmp
jae
sub
pusha
dec
fwait
mov
daa
test
xor
decl
xchg
and
xchg
sbb
add
cs
push
sub
push
data16
adc
xor
xlat
sbb
scas
xchg
clc
xchg
pop
mov
or
cmpsl
mov
add
jg
decl
testl
jle
xlat
lea
fsubrs
lret
incl
js
sub
mov
mov
dec
mov
sub
std
call
loope
int3
cmp
rolb
pop
pop
xor
mov
sbb
or
mov
loopne
push
out
pop
inc
mov
roll
testb
or
sub
ja,pt
dec
jnp
push
jno
cwtl
or
and
mov
lcall
scas
mov
lods
sub
cmp
out
and
push
jl
in
js
cmp
pushl
mov
enter
fists
jno
xlat
pushf
ss
mov
call
faddl
outsl
ja
xor
xlat
mov
jnp
mov
stos
adc
pushl
jno
mov
pusha
xchg
ss
push
sub
mov
jae
inc
cld
repz
in
mov
jle
out
push
sub
clc
fsubs
iret
mov
mov
iret
stos
inc
out
fmull
cmc
xchg
jg
aaa
rorb
jg
lds
smsw
push
int
insl
lock
mov
lcall
divl
call
or
mov
push
arpl
xor
push
cli
outsl
pusha
xchg
cmp
xchg
cmp
push
jmp
xchg
minps
mov
cmc
cwtl
decl
xor
cmpsb
push
mov
ret
jecxz
mov
adc
jbe
dec
or
into
in
fistpll
sti
sub
inc
jno
pop
fildll
jb
daa
outsl
dec
jecxz
jae
jg
mov
and
mov
std
mov
lahf
repz
aas
add
mov
jmp
scas
jp
lea
arpl
jecxz
outsb
push
out
xchg
add
fcomps
cmp
loope
test
adc
stos
push
scas
jp
push
pop
insb
inc
mov
loope
stc
pop
pop
add
call
mov
daa
lods
call
and
fisttps
sbb
adc
cmp
ljmp
sub
dec
mov
in
cmp
clc
push
loop
or
cmp
loopne
pop
pushf
lret
ja
xor
sub
cmpsb
xchg
mov
ljmp
xchg
inc
sti
inc
addr16
xor
repnz
std
dec
stos
dec
out
fstps
mov
pushl
inc
cs
outsl
cmpsl
dec
mov
mov
and
cmpsb
shl
xor
ljmp
shlb
int3
mov
dec
pushf
daa
xor
popa
pop
mov
addr16
mov
jmp
les
out
loopne
sub
fistps
push
jp
push
xchg
stos
incl
fildl
ljmp
pop
addr16
popa
inc
ret
mov
inc
dec
sub
out
inc
ret
lcall
out
aaa
repz
cmp
sbb
clc
fstpt
jmp
mov
insl
out
addr16
dec
jo
mov
aas
rcr
jmp
incl
push
mov
lods
dec
xchg
xor
in
add
adcb
cmp
insb
push
cmp
hlt
adc
cld
mov
cmc
pop
mov
decl
and
in
mov
push
icebp
and
cwtl
mov
insl
adc
lods
iret
popa
sub
inc
cwtl
xchg
add
stos
mov
mov
mov
dec
push
pop
cltd
sar
jmp
es
mov
popf
xchg
fisttpll
jb
seta
or
mov
stos
and
cmp
call
sbb
das
clc
in
jmp
jmp
xor
sub
in
sbb
cmp
decl
xor
enter
cmp
loopne
decl
divb
mov
mov
fs
scas
xchg
scas
les
push
and
stc
outsb
ljmp
cmp
mov
or
fmul
imul
mov
decl
or
insb
jl
sub
xor
cltd
jmp
icebp
insl
dec
jg
pushl
jmp
sbb
xchg
ljmp
push
nop
mov
inc
iret
int3
scas
sarl
ss
sbb
push
ja
mov
xchg
test
pop
movsb
ljmp
jecxz
adc
cltd
test
mov
decl
or
mov
test
xchg
mov
pop
cmp
dec
lds
decl
mov
mov
nop
in
adc
push
leave
xchg
into
inc
imull
push
mov
dec
inc
pop
push
cli
incl
cmp
in
cmp
hlt
adc
out
cmp
cs
call
push
sub
bound
cltd
aam
fsubr
bound
sahf
cmp
fdivr
ljmp
ret
bound
xchg
mov
lret
clc
mov
sbb
lods
push
xor
push
es
in
xor
fdivr
jmp
addb
lods
xor
dec
lahf
inc
xor
mov
or
lcall
dec
mov
sbb
pop
xchg
push
add
lea
and
stos
aam
fadds
sub
add
outsl
imul
add
cmp
sub
pushl
std
pop
shl
out
xchg
mov
ljmp
push
cwtl
aas
fsubr
xchg
sub
call
xor
stc
mov
test
and
insb
je
sbb
cmp
lds
push
inc
ficompl
push
push
xor
sub
adc
dec
cld
cltd
addb
xor
call
mov
out
push
push
in
in
dec
mov
cs
push
pop
lds
inc
cs
int
aas
sbb
xor
aas
fstps
js
mov
call
mov
in
rorl
addr16
shlb
je
test
push
inc
out
orb
aas
aaa
or
push
adc
hlt
out
es
push
aad
and
icebp
mov
mov
dec
scas
push
xchg
pop
enter
lods
pop
jnp
mov
scas
push
cmp
jle
jmp
ret
sub
lea
adc
rolb
sub
cmc
jo
dec
mov
pop
dec
mov
jge
jg
out
nop
dec
bound
or
ret
mov
out
clc
mov
push
inc
adc
push
dec
xor
inc
xchg
ret
sbbb
mov
incl
loopne
aam
pop
cmp
fmuls
push
repz
popa
repz
lret
shrl
jecxz
mov
and
fidivs
out
cwtl
cli
xchg
jno
aad
jmp
insl
xchg
ljmp
negl
inc
xorl
jg
mov
mov
aam
push
pop
pushf
inc
gs
and
stos
lods
inc
xchg
aas
es
lcall
cld
lret
jo
fdivr
pop
pop
repnz
leave
mov
mov
xor
idiv
pushl
cwtl
nop
add
cli
or
iret
push
cmp
xchg
ljmp
lea
loope
jmp
mov
test
testb
fisubs
je
rolb
gs
js
mov
adcl
xchg
add
dec
or
js
xchg
cmp
ret
shlb
dec
incl
fistpll
loope
push
insl
ftst
xorl
lea
adc
adc
mov
push
int
cmc
cmc
or
dec
data16
lds
lds
mov
clc
mov
mov
jae
xchg
popa
add
mov
in
test
dec
pop
add
movsl
fidivrl
fstpt
rcrl
lea
fimuls
dec
xlat
call
cmp
lcall
test
push
mov
push
mov
test
xchg
cli
sbb
push
ds
test
stc
xchg
inc
cmc
data16
xchg
push
inc
movsl
fcompl
cli
insl
push
cwtl
out
mov
add
lcall
cmpsl
shrl
pop
js
adcb
out
dec
inc
sub
pop
mov
decl
rcrb
jnp
fisubl
add
mov
aaa
dec
sbb
jle
mov
flds
dec
mov
push
jns
in
roll
cmpsl
sub
mov
ss
repnz
insb
xor
int
cld
insb
xchg
idivb
mov
dec
dec
push
addr16
xor
fwait
pushf
in
sbb
js
insb
cmp
lret
ljmp
les
insb
jge
addl
fldt
inc
data16
repz
pop
inc
pusha
repz
ljmp
shr
add
mov
test
data16
subb
movsl
push
outsb
je
mov
clc
call
test
ljmp
xchg
std
cmpsb
push
int
ss
aam
frstor
outsl
in
pushl
fsubrl
and
lds
mov
sub
lret
mov
add
xorb
mov
enter
sarb
lea
push
sti
fisubs
sbb
fistps
call
movsl
icebp
cmp
leave
les
outsl
cmp
and
adc
decl
hlt
repz
lahf
jg
fidivs
arpl
popa
inc
cmp
into
push
inc
jge
xchg
push
ds
stos
roll
pop
mov
outsl
mov
cltd
das
in
scas
test
rcrl
dec
scas
incl
add
xchg
xchg
inc
inc
nop
pop
mov
jmp
and
and
pusha
mov
push
fldcw
cmpsb
insl
push
lds
push
test
incl
cmp
add
aam
movb
daa
pop
testb
mov
jp
test
jmp
mov
mov
push
xchg
neg
jmp
std
mov
movsb
leave
insb
insb
xchg
pop
pushl
jmp
adcb
test
xchg
jae
inc
call
decl
jb
leave
js
xchg
jns
fdivrs
push
cli
shlb
sar
roll
add
stos
jmp
in
mov
jl
leave
mov
cmpsl
fcoms
shll
xor
dec
xor
std
mov
xchg
fcomps
loope
mov
scas
dec
pop
push
pop
loopne
fwait
js
push
in
jecxz
ljmp
les
mov
mov
shlb
in
clc
fs
shrb
mov
cld
repz
push
cli
add
sbb
xchg
fdivs
scas
cli
jmp
xchg
pop
inc
add
sub
sub
push
or
push
jmp
in
rcr
dec
pop
cmp
jns
dec
mov
lods
cmp
dec
sub
sub
lcall
push
ljmp
cmpsl
dec
insl
dec
inc
test
popa
test
ficoml
movl
movsl
scas
dec
cld
int3
xchg
mov
mov
push
imull
pop
mov
iret
pushl
mov
dec
int3
daa
ss
mov
jnp
sbb
leave
pop
jmp
cmpsb
fdivrs
add
jmp
mov
loope
cmp
enter
xlat
jae
sbb
hlt
jg
in
push
sbb
shlb
inc
add
stos
or
cld
inc
or
cld
mov
cmpsl
mov
aas
xchg
push
mov
call
adc
ret
out
aad
mov
jnp
repnz
xchg
push
or
addr16
sar
cli
xor
aad
jmp
mov
mov
push
test
xor
pop
mov
incl
fs
pop
cmp
pop
jns
int3
cmp
and
mov
lock
jns
cs
orb
imul
mov
inc
faddl
or
mov
mov
jmp
add
incl
adc
mov
xor
mov
xchg
je
aas
adc
cmpsl
das
pop
cmp
cmp
pushf
push
mov
xor
pushf
inc
mov
decl
movsb
mov
icebp
jmp
movsb
popa
pop
aaa
call
repz
fildl
dec
int3
mov
fsubs
js
dec
push
and
mov
jecxz
ret
mov
add
xchg
xchg
in
ljmp
dec
push
cmp
mov
into
and
cmp
imul
lahf
je
xor
jmp
push
push
mov
sub
adc
xor
fsubrp
imul
repz
sbbl
or
sbb
subl
mov
nop
mov
scas
xor
push
sub
loopne
gs
in
push
enter
sbbl
sub
pop
decl
or
popa
mov
and
hlt
push
fisubl
fcmovb
arpl
pop
shrl
clc
sub
mov
in
lods
sbbl
jle
imul
sub
popf
stc
push
cmp
test
sbb
pusha
adc
pop
push
cltd
rcll
push
jecxz
ds
lret
aas
lods
fidivl
cmp
or
sbb
imul
movsb
jo
movsb
syscall
insb
out
clc
jmp
lods
movsb
mov
push
es
aaa
ljmp
mov
jl
cmp
mov
lods
mov
iret
push
jno
arpl
popf
push
repz
pushl
sub
sahf
out
je
xrelease
xchg
jecxz
pop
std
push
mov
adc
mov
idiv
movsl
cmp
aad
inc
push
mov
ss
pop
and
pushf
add
movsb
pop
cmp
lret
mov
pushl
sub
popf
sti
decl
mov
push
fsubr
mov
ljmp
mov
bnd
mov
pop
pop
arpl
jecxz
mov
jge
pop
outsl
nop
cwtl
pop
cmp
pushf
cmp
xchg
mov
sbb
jge
outsw
dec
xchg
xchg
mov
lods
test
out
cli
das
push
pop
push
push
push
mov
adc
push
mov
iret
xor
mov
call
out
lock
ljmp
cmp
cwtl
push
pop
in
mov
inc
ss
std
jmp
pop
and
cmp
pop
mov
and
shl
add
add
loope
bound
int3
cmp
call
mov
fldcw
mov
mov
mov
imull
decl
aaa
in
rcll
ret
fdivs
hlt
in
inc
xchg
inc
mov
int
idiv
ljmp
cmp
mov
test
xchg
xchg
adc
dec
aaa
imul
xchg
xor
pop
ja
push
out
xchg
push
or
mov
std
xor
pop
and
test
out
mov
cmpsb
pushf
stc
xchg
inc
sub
xor
mov
mov
call
push
js
sub
cmp
inc
fisttpll
out
flds
push
lahf
jg
mov
pushl
xor
sub
adc
jne
push
sbb
ds
mov
lret
xlat
mov
dec
imul
sbb
adc
cmp
ja
push
add
cmc
out
and
in
call
rol
mov
out
repnz
int3
mov
movsl
push
lds
and
push
jmp
mov
pop
mov
push
cld
ficompl
into
lods
into
xchg
pusha
outsb
sub
lahf
in
push
pop
dec
jae
movsb
xorl
std
repnz
mov
adc
loop
in
cmp
stc
add
shl
ljmp
loopne
xchg
pop
and
pusha
loopne
leave
icebp
sub
and
pop
in
decl
lret
roll
or
sbb
shrb
sbb
pop
into
sbb
push
mov
cs
repz
inc
pushl
loopne
nop
adc
or
out
dec
pop
std
jg
cltd
lcall
jno
and
popf
mov
jmp
and
xchg
int
xchg
xchg
mov
fcoml
hlt
mov
add
hlt
inc
sub
sub
int3
iret
pop
fwait
push
repz
in
xor
jmp
shr
mov
in
mov
cmp
int3
rcll
mov
sbb
pop
and
test
cld
sbb
mov
jmp
inc
mov
dec
jno
sbb
cmc
add
cmp
inc
xor
test
cmp
out
cmp
movsl
fsub
fnsave
jl
cmp
pop
lret
dec
pop
sub
cmc
dec
or
imul
lea
cli
mov
fwait
mov
mov
dec
and
lods
out
xor
cmp
pushl
cmp
or
aam
or
bound
dec
mov
nop
fiaddl
cli
clc
outsb
inc
shl
stos
pushf
and
xchg
xchg
shlb
lods
daa
xchg
cmc
sbb
jmp
out
aaa
js
pop
sub
xchg
outsb
push
pop
push
rcrl
jl
jo
jmp
inc
lds
popa
insl
arpl
cs
sbb
or
sub
sub
incl
xchg
lahf
mov
enter
clc
mov
test
cli
lods
add
out
enter
repnz
jg
cwtl
push
test
mov
inc
cs
movsl
lret
int3
ficomps
cmp
xchg
mov
outsl
inc
insb
adc
jns
jo
inc
inc
enter
into
in
and
pop
xchg
ljmp
xchg
scas
lock
loopne
or
repz
subl
push
ljmp
pop
mov
mov
daa
and
mov
add
sub
inc
sub
jmp
xlat
dec
jae
push
into
pop
les
aaa
or
xor
add
aam
cmc
ljmp
ds
xor
fiaddl
cmp
push
pop
adc
inc
pop
insb
and
sub
sbb
lcall
ss
cmp
mov
int3
sbb
mov
shrl
daa
out
sbb
pushl
cmp
and
cmc
inc
int
mov
or
add
decl
sub
adc
mov
sub
pop
mov
lea
dec
push
hlt
or
outsb
mov
andb
icebp
jg
scas
ljmp
out
or
repz
inc
loopne
das
loopne
add
and
int3
xor
test
sub
push
lret
dec
decl
lods
lods
pushf
leave
and
dec
jne
inc
adc
decl
dec
fdivl
outsl
insb
loope
xchg
out
or
stos
in
repz
cli
sahf
cmp
fnstcw
ljmp
xlat
cmp
addr16
sub
push
in
hlt
out
inc
cld
cmp
test
mov
outsl
ret
ljmp
lds
popa
rorl
pop
test
xchg
mov
sbb
mov
inc
sub
cmp
mov
jo
cli
lods
add
loop
dec
inc
add
movsb
push
push
mov
insl
dec
incl
mov
pop
leave
inc
aam
fldl
mov
insb
jmp
lret
sbb
jg
decl
loopne
jno
and
imul
push
pushf
xor
push
icebp
jmp
movsb
das
push
pop
mov
push
pushf
cmpsl
fistpll
ja
xchg
jbe
fildll
jnp
or
lds
xlat
idivb
inc
mov
cmp
cmpsl
aad
rol
dec
popa
xor
pop
cmp
int
xor
cwtl
jecxz
js
pushf
cmp
mov
mov
call
sahf
cs
dec
add
out
cli
mov
sbb
xchg
ss
mov
icebp
cltd
mov
decb
lcall
sahf
jne
pop
push
push
arpl
cmpsb
jge
iret
push
add
les
mov
push
fnstenv
mov
adc
gs
leave
sbb
pop
and
jno
xor
lds
pop
xchg
leave
mov
decl
xchg
fistl
push
xor
icebp
mov
test
in
not
out
ret
jmp
jnp
addr16
out
or
adc
and
mov
ja
mov
lret
ljmp
test
xchg
jno
pushl
out
and
dec
ja
mov
fwait
icebp
pop
icebp
cmp
sub
aam
jl
stos
mov
in
outsl
mov
push
shrb
jmp
cld
pop
adc
inc
pop
cli
xor
fidivrs
outsl
mov
add
dec
cmc
or
cmpsb
adc
xchg
pop
arpl
adc
gs
mov
push
addr16
mov
lds
cltd
adc
out
adc
xor
sbb
fcomps
jmp
scas
pop
shl
sub
das
lahf
enter
aam
fistpll
mov
das
cld
inc
leave
dec
push
repz
cmp
xor
das
jae
push
lret
imul
sahf
pop
mov
orl
dec
dec
xor
loopne
pop
repnz
int3
jle
ja
mov
addb
in
jo
mov
mov
xchg
fdivl
or
repnz
mov
mov
enter
jnp
in
fwait
mov
xor
mov
hlt
bound
mov
pop
lock
jmp
jmp
leave
loope
inc
out
int3
inc
xor
lock
das
repz
stc
and
push
aas
push
xchg
decl
fidivl
mov
mov
inc
or
add
push
and
pop
cmc
mov
call
cld
pusha
sbbb
shr
les
repnz
push
mov
inc
mov
stos
lcall
data16
popf
stos
cwtl
subl
mov
lea
in
insl
push
call
int
and
xchg
or
and
int3
xchg
popf
dec
xchg
shrb
mov
decl
mov
adc
pop
xchg
gs
imul
jmp
negb
xor
cmp
cmp
sbb
cmc
mov
push
sbb
mov
pop
out
jmp
popf
pop
lcall
popf
xchg
stos
inc
mov
mov
das
out
lods
sub
cwtl
das
pushl
jl
sti
sbb
jp
imul
test
push
add
push
es
jnp
lock
mov
dec
ljmp
jl
test
push
scas
adc
fstps
cmp
push
xchg
sbb
in
gs
jmp
and
sbb
fs
sbb
ds
jecxz
xor
sbb
ljmp
arpl
decl
mov
outsb
or
dec
test
and
pop
xor
mov
sub
lcall
lea
jg
repz
lock
insb
movsl
iret
in
pop
xchg
aas
test
push
enter
push
cwtl
incl
lahf
push
scas
or
fwait
mov
bound
or
arpl
adc
call
sahf
mov
push
xchg
jne
or
test
lods
loop
push
jae
nop
cli
out
fists
lahf
cmc
fiadds
or
cli
out
mov
pop
push
adcb
mov
stos
mov
lcall
sub
mov
out
mov
sub
hlt
sbb
xchg
xchg
or
jecxz
out
sbb
std
lcall
jecxz
jno
sbb
fidivl
lods
jl
adc
add
mov
adc
mov
inc
xor
cwtl
sbb
xlat
int
mov
dec
or
incl
adc
xlat
lock
movb
sbb
add
sub
push
add
cs
lea
inc
call
std
mov
mov
or
data16
pop
push
fstl
and
pop
push
jp
pop
out
repz
jb
gs
dec
notb
gs
inc
bound
pop
adc
clc
add
int
int3
sub
sahf
push
jl
ljmp
mov
data16
mov
lock
bound
mov
dec
roll
lret
lds
loopne
rol
icebp
fdiv
lret
and
ljmp
mov
and
lock
sbb
fidivs
das
clc
mov
or
repnz
mov
pop
int3
adc
ljmp
adc
pop
and
lods
cmpsl
shlb
push
aas
dec
sbb
dec
ja
ror
loopne
scas
dec
pop
pushf
out
inc
ja
aad
push
incl
adc
sub
mov
or
fcmovbe
mov
stos
cmp
sbb
std
mov
into
cwtl
jb
rclb
jmp
call
in
push
pusha
sbb
cmp
lcall
cmp
adc
inc
into
inc
fldt
sub
nop
loope
test
cmp
mov
pop
clc
push
fistps
decl
sbb
and
and
dec
jg
adc
bound
scas
insb
mov
cmpsb
inc
cmp
ss
cwtl
rorl
adc
std
lds
push
sub
push
out
imul
incl
inc
jp
and
inc
shll
dec
stc
lds
shrb
repnz
xor
bound
push
test
stos
cmpsb
rcrb
ljmp
shr
mov
js
ret
adc
sbb
push
cld
decl
out
dec
mov
pop
cltd
xchg
test
jg
repnz
mov
out
es
xchg
pop
mov
mov
orl
cmp
es
jbe
test
or
pop
fistpll
repnz
inc
test
cmp
stos
cltd
stc
push
xchg
adc
pushf
shrb
xchg
les
arpl
jmp
jecxz
or
aad
mov
mov
vandnpd
test
sub
adc
mov
pushl
xchg
incb
in
outsl
sub
add
push
push
fimuls
shrl
fsubrp
ret
sbb
dec
rclb
insb
out
sahf
insl
mov
lcall
int3
inc
cmp
movsl
jecxz
insl
ror
in
inc
sub
enter
movsb
sbb
bound
pop
inc
cmpsl
lahf
lcall
stos
pop
mul
add
adc
sub
xchg
mov
movsb
cmp
adc
stos
fstl
mov
xor
dec
xlat
cmp
mov
jmp
add
decl
test
ljmp
movd
hlt
decl
jne
scas
push
pusha
cmp
notb
dec
out
fadds
inc
mov
jg
lods
adc
aad
sub
outsl
cmp
pop
cld
leave
sbb
lcall
push
and
dec
mov
loop
xchg
mov
sub
test
sbb
popf
sti
lret
adc
or
xchg
stos
fs
cmp
jae
addr16
lcall
fbstp
mov
in
push
dec
or
push
mov
mov
xchg
push
sub
or
aam
sub
int3
test
cmp
out
out
std
data16
scas
inc
jg
dec
ljmp
xchg
pop
jbe
je
repnz
cmpl
mov
aam
xchg
jmp
jbe
mov
cltd
sbb
aad
ljmp
dec
js
pop
lcall
test
sar
adc
dec
std
sub
cmp
adcb
jae
xorb
incw
xlat
call
jecxz
mull
cmp
adc
jne
sub
push
pop
lock
shll
push
loop
outsl
add
subb
pushl
out
hlt
mov
rcll
and
pop
icebp
fists
and
mov
pop
jb
push
push
mov
dec
xchg
and
call
in
out
or
mov
int3
cmp
nop
and
mov
dec
cmp
lcall
mov
or
out
mov
and
pop
ficomps
daa
cmpsb
fmull
fcom
test
xchg
je
ljmp
jmp
lret
jg
out
test
pop
sarb
mov
out
mov
mov
outsl
adc
and
iret
sbb
or
fs
sbb
mov
repz
ret
mov
lret
popf
or
jnp
add
int
call
out
test
in
movsl
aaa
adc
lret
cld
mov
jge
mulb
sbb
call
jnp
sbb
cmp
dec
mov
mov
rcrb
cmc
int
movsb
add
decl
xchg
inc
and
lcall
xchg
fmull
xchg
sub
lahf
lods
iret
nop
aad
jmp
inc
jbe
fldcw
ds
sti
dec
rorb
mov
dec
cs
lahf
mov
fisubrs
xchg
pop
ds
gs
xchg
lcall
lahf
sub
dec
adc
push
jns
decl
push
andl
jno
inc
das
mov
xlat
loope
jns
call
sub
incl
xchg
jmp
inc
adc
mov
xor
jae
inc
push
add
adc
cli
mov
roll
and
jo
mov
push
shll
loop
ffreep
gs
decl
dec
dec
jbe
or
es
clc
int3
add
mov
sub
add
sub
int3
add
or
xchg
add
stos
or
jecxz
lahf
data16
push
enter
xor
cli
hlt
ljmp
adc
fimuls
inc
ret
cmp
sbb
out
jbe
fisttps
cmp
jle
inc
fistpl
fs
cmp
cli
inc
fwait
clc
ds
mov
adc
call
adc
aad
sub
pop
and
lahf
aam
addr16
lock
stos
sub
call
lock
xchg
sub
inc
dec
daa
in
pop
or
ret
adc
das
dec
adc
inc
add
adc
incl
mov
push
pop
popa
add
test
movsl
sbb
lcall
jmp
sub
mov
lods
movsb
test
out
sti
mov
jae
loopne
decl
adc
sahf
add
arpl
pop
pop
sar
push
ja
cmc
data16
mov
call
mov
push
jbe
lock
jp
sahf
lods
mov
decl
scas
into
ror
fcmovbe
dec
push
cmp
or
sbb
mov
test
adc
mov
mov
lcall
dec
mov
lret
mov
lret
mov
xor
int3
add
push
add
lods
jns
mov
lcall
pop
test
js
jno
cmpl
pop
xor
test
or
sub
jg
cmp
aas
mov
ja
outsl
cmpsb
jl
fldenv
dec
das
xchg
mov
sbb
cmp
mov
rolb
sub
pop
cwtl
jno
lea
fisttps
lret
adc
pop
jg
sub
jb
les
fwait
sbb
mov
xchg
int3
push
mov
sbb
inc
pusha
mov
movsb
ret
jge
adc
sbb
sub
mov
push
out
xlat
mov
iret
mov
mov
push
jns
clc
lret
rep
pop
scas
lcall
aaa
fsubp
mov
add
clc
incl
pop
inc
dec
enter
add
fists
lret
add
ljmp
jne
add
inc
inc
clc
dec
clc
xchg
scas
clc
cmpsb
ja
gs
insl
lock
sbb
daa
fs
ljmp
xor
mov
inc
mov
data16
sub
test
sub
scas
cld
insl
mov
xchg
adc
dec
or
icebp
ret
mov
decl
mov
pop
ret
inc
outsb
mov
pop
jo
push
movsb
mov
aaa
cld
ljmp
dec
push
sti
lods
xchg
pop
or
mov
outsb
pop
pop
xchg
sbb
xor
mov
in
push
or
jmp
push
sbb
push
lret
sar
ljmp
movsb
pop
js
mov
shrb
xor
rclb
std
ljmp
mov
cwtl
xchg
xchg
popw
clc
mov
dec
sbb
call
push
mov
jecxz
xor
add
jp
mov
pop
fcomip
lcall
stos
test
push
ret
outsb
xchg
fistpl
mov
mov
adc
outsl
adc
push
hlt
jl
lds
pop
mov
es
decl
or
hlt
fnsave
push
ds
insl
cwtl
dec
punpckhwd
add
decl
loope
ss
xor
xor
and
addl
shlb
sbb
loopne
outsl
inc
lds
sub
and
push
leave
cli
test
inc
mov
sbb
lret
ja
decl
inc
mov
fst
cmpsl
lods
mov
add
inc
jnp
fdiv
inc
lret
leave
dec
sub
cmpsb
sti
inc
in
sub
cltd
test
stos
pushf
jg
nop
fsubl
inc
mov
sub
pop
jbe
lcall
dec
addr16
and
mov
add
mov
sbb
mov
enter
cmc
mov
push
dec
sbb
jb
sub
mov
pop
or
loop
notl
pop
cmc
ljmp
cmpl
xor
xor
add
inc
xor
xchg
push
inc
adc
adc
push
fdivp
rcrb
test
fildll
mov
fidivs
and
notl
xor
jne
lcall
notb
jo
add
and
ljmp
sbbb
push
mov
mov
xlat
jns
cmpsb
enter
sub
stc
cmp
test
push
lcall
jle
loop
arpl
insb
outsl
sbb
inc
std
das
cmp
dec
mov
cwtl
add
decl
mov
outsb
or
jle
jp
or
jmp
push
mov
clc
jmp
aas
test
pop
shrb
repnz
pop
dec
pop
incl
in
dec
push
dec
movsb
inc
stos
test
je
pop
or
out
pop
push
xchg
sbb
dec
sar
sahf
xchg
outsb
jnp
push
addr16
in
cmp
mov
lcall
push
xchg
mov
mov
pop
mov
enter
test
cld
jo
dec
pusha
sbbl
lahf
ja
xchg
jmp
pop
subl
pop
mov
pop
repz
fldenv
xor
push
in
movsb
or
mov
jae
dec
push
imul
lret
xor
mov
push
mov
mov
fmulp
mov
jg
dec
xor
add
mov
decl
dec
sbbb
out
cmp
add
push
mov
les
fwait
adc
jno,pt
add
popf
and
loopne
orb
push
arpl
movsl
cmpsb
inc
pushl
icebp
sbb
dec
in
scas
hlt
cwtl
push
mov
mov
add
dec
mov
lcall
jl
mov
ds
shlb
or
leave
gs
and
mov
sub
mov
jg
in
pushf
scas
jb
adc
shll
pop
jge
adc
push
mov
stc
arpl
jp
ret
push
jne
iret
adc
incl
nop
je
inc
leave
push
rclb
orb
addr16
adc
divb
cmpl
jmp
mov
and
xlat
mov
dec
and
popf
ljmp
pop
cwtl
pop
pop
orb
inc
push
mov
or
lcall
std
cmp
daa
sbb
sub
push
loopne
pop
imul
incl
mov
xchg
inc
stc
dec
enter
pushf
sub
daa
pushf
addr16
sbb
cli
into
push
rorb
incl
mov
and
clc
fdivr
xchg
ljmp
xchg
fisubs
jbe
and
and
mov
jo
and
rorb
out
aad
data16
cli
loope
roll
or
ljmp
cwtl
out
jp
xlat
cmp
jo
popf
mov
out
repz
mov
add
cmpsl
subl
lea
adc
and
xor
jnp
movl
mov
add
lcall
jecxz
cld
pushf
in
les
mov
ds
ljmp
insl
jl
jle
sub
call
test
adc
inc
in
scas
test
fucomip
cli
sahf
jle
test
dec
data16
call
mov
jmp
stos
mov
in
mov
jb
iret
sar
xor
lret
ljmp
pushl
out
rolb
pop
fwait
jb
in
movsb
stos
add
mov
sbb
adc
decl
idiv
cmp
aad
pop
iret
jne
loope
sub
fst
add
subl
call
stos
adcb
mov
stos
push
adc
imul
stc
push
inc
pop
mov
mov
adc
pop
push
jg
mov
lcall
dec
push
call
mov
mov
fadd
dec
lret
loopne,pn
mov
test
stos
sbb
push
lret
imul
xchg
decl
mov
or
mov
add
sbbb
int
xchg
incl
xlat
pop
sub
cmp
arpl
mov
mov
cmp
adc
cmc
test
cmpsb
call
call
loope
cli
pusha
subl
rclb
mov
mov
rorl
pop
xor
xchg
sbb
pusha
gs
insl
addr16
inc
mov
mov
scas
sar
jg
sti
lods
loope
jbe
sti
sbb
cwtl
and
div
fs
aam
dec
xchg
xchg
daa
cmpsl
fs
decl
xchg
test
xchg
in
test
jb
fldcw
or
xchg
cwtl
lret
ljmp
ljmp
push
insl
mov
aas
adc
je
fdivr
xor
cmp
lods
stos
inc
mov
pushl
inc
cld
shrl
lods
fistpll
pop
dec
adc
mulb
popf
lret
and
xor
jg
call
es
jecxz
mov
scas
dec
ljmp
fwait
cmp
cmp
jg
je,pt
mov
cmpsb
nop
test
jl
inc
push
and
or
xchg
imul
outsl
adc
mov
decl
je
mov
enter
pop
cmp
cli
ljmp
stos
xlat
push
jns
cmpsb
cs
lock
dec
and
roll
push
call
jb
xor
dec
das
les
sti
xor
orl
jne
mov
mov
aas
ja
mov
ljmp
mov
sbb
movsl
out
ja
fs
loop
shlb
sub
nop
incl
call
inc
push
push
mov
cmp
xor
adc
call
sbb
sbb
adc
mov
inc
gs
icebp
cld
inc
movsb
ret
loopne
shll
jecxz,pn
dec
sbb
outsl
or
mov
in
insl
or
add
mov
dec
pop
aaa
clc
popf
sub
arpl
loopne
loope
pop
shr
jg
jb
sarb
inc
jbe
mov
fimull
insb
or
adc
fsubl
add
test
lcall
cmp
loop
adc
mov
jo
push
out
mov
jp
dec
mov
jne
inc
mov
jle
cmp
push
les
std
call
pop
sbb
lea
fs
jl
repz
rorb
fcoml
clc
jmp
mov
jo
ds
xchg
mov
scas
mov
adc
je
sub
cltd
push
cmp
fxch
cli
lcall
iret
neg
out
mov
mov
fbld
jne
mov
mov
iret
test
adc
xor
jge
ljmp
ss
fs
xchg
rorb
mov
fmul
sbb
movsl
pop
mov
jmp
mov
cmp
lcall
cs
sub
les
sub
lds
sbb
xor
xchg
mov
cmp
hlt
mov
xchg
adc
mov
and
imull
test
call
out
push
arpl
push
movsl
and
sbb
ljmp
inc
cli
mov
adc
jbe
jnp
cld
test
sbb
mov
cmpsl
aad
add
mov
imul
test
add
das
jle
pusha
and
cmp
cmp
ja
mov
repnz
mov
lock
decl
pop
add
faddl
ret
mov
inc
pop
lods
mov
pop
mov
decl
fidivrs
sub
outsl
aas
pop
in
inc
call
and
fcomip
sub
pop
mov
sub
jecxz
mov
arpl
xchg
and
js
popf
fwait
xor
pop
iret
out
scas
dec
aas
iret
add
pop
and
jb
sub
test
ja
imul
push
push
in
popa
les
loope
mov
mov
bnd
incl
cmp
std
cmp
lcall
lods
cmp
call
mov
cmp
push
dec
xlat
loope
iret
leave
addl
loope
ja
stos
iret
mov
call
jmp
xor
push
push
mov
sbb
mov
or
cmp
decl
int
arpl
call
jge
pop
das
xor
mov
adc
mov
xchg
js
xchg
dec
jne
adc
dec
stos
iret
mov
ljmp
rcr
mov
pop
popf
xchg
int
jnp
in
mov
jecxz
aaa
sti
call
fimuls
jg
clc
add
mov
dec
jnp
rcrb
lcall
pop
icebp
fldl
mov
ljmp
in
rcr
sbb
lea
dec
or
mov
add
cmp
mov
shrb
ljmp
adc
fidivrl
mov
cltd
mov
les
jmp
addr16
addr16
add
repnz
enter
jp
rclb
sbb
rcrb
decl
push
mov
pusha
jo
dec
int
adc
fdivrl
jno
add
andb
fadds
pushl
cld
dec
loope
mov
loop
sbbb
outsb
mov
mov
nop
or
dec
or
lcall
or
addr16
sti
call
inc
loope
jle
mov
sub
subb
mov
jg
adc
incl
stos
cmpsl
cmp
out
xor
push
sub
shrb
scas
adc
inc
gs
decl
push
adc
add
frstor
pop
cmp
mov
jp
or
std
push
ljmp
call
or
dec
mov
fidivs
xor
cltd
aaa
jmp
adc
ficomps
jge
pusha
adc
sub
adc
cmp
jbe
call
outsb
inc
sbb
scas
jl
jmp
dec
cld
sub
or
xchg
popf
faddl
xor
mov
jmp
and
ret
int
add
xchg
lcall
mov
push
mov
mov
call
incl
jne
lcall
sarb
dec
repz
les
loope
ss
pop
std
call
aas
pop
lahf
in
jns
es
outsl
mov
dec
rcl
ss
sbb
call
in
loope
gs
popa
mov
jo
dec
inc
or
add
loopne
mov
mov
or
pushl
mov
repz
lds
mov
jmp
pop
mov
mov
imul
decl
mov
in
or
mov
inc
jp
scas
mov
cmp
xor
shrl
incl
xchg
xchg
pop
push
xchg
add
popl
dec
dec
adcb
std
cli
cmpsb
ja
decl
rcl
sbb
mov
ret
dec
and
icebp
popa
loop
into
jmp
lcall
adc
arpl
loope
dec
inc
push
adc
pop
lods
mov
add
pop
popf
int3
push
in
in
mov
ljmp
ficoml
pop
clc
adc
sbb
dec
add
sub
pushl
dec
jb
xor
sbb
jbe
xchg
ljmp
jmp
jnp
fdivp
mov
cs
mov
jle
rcl
and
movsb
mov
int
in
xchg
adc
ret
sbbb
pop
aam
sar
ljmp
mov
xor
bound
push
test
jge
repnz
in
idiv
mov
adc
jge
xor
icebp
aaa
mov
mov
jns
mov
cmpsl
xor
rcrb
lcall
mov
push
sbb
mov
push
add
mov
sub
mov
ljmp
cli
fs
cmp
pop
xchg
push
in
dec
xchg
mov
dec
ret
call
dec
dec
popf
lcall
aaa
cld
int3
jbe
scas
mov
adc
dec
xor
cmp
mov
arpl
or
pop
shll
cs
add
push
push
into
sbb
mov
mov
into
rclb
inc
shll
lcall
and
xor
fstps
push
insl
pop
or
out
decl
cmp
mov
into
jne
gs
mov
mov
flds
jno
dec
push
shll
nop
pop
xor
jo
nop
inc
imul
loop
loope
testb
ljmp
js
sub
mov
ljmp
push
push
jmp
loopne
add
test
scas
cmp
pop
into
test
inc
jmp
leave
clc
dec
xchg
dec
fwait
test
repnz
jo
cli
test
call
enter
sbb
xor
aaa
inc
jmp
add
sub
test
fistps
or
enter
cmp
cmp
mov
jl
xchg
lret
cli
incl
arpl
shrb
test
sti
outsl
fnstsw
dec
xlat
sti
lcall
mov
call
xchg
cmp
dec
sbb
mov
cld
mov
out
mov
ret
pop
pop
mov
jnp
and
jg
xchg
or
hlt
rcrl
pushf
mov
ss
dec
mov
popf
and
cmp
call
in
jnp
sbb
lcall
in
mov
andb
test
ljmp
pop
lret
mov
flds
insb
or
add
bound
jg
mov
es
jns
push
fld
add
or
sbbb
cmpsb
pop
add
add
fcomps
push
push
xchg
in
dec
setb
mov
xor
outsl
cld
daa
loop
jg
cmp
shrl
stos
imul
cld
arpl
mov
add
push
fisttpll
movsb
pop
shl
mov
push
icebp
fsubs
cmp
andl
and
push
xchg
sbb
jg
dec
fisttpl
inc
lods
and
inc
lcall
fdivrl
xor
orb
jp
mov
ss
hlt
rcrb
sub
dec
call
ljmp
cmp
push
ja
les
mov
adc
loopne
neg
jae
mov
mov
dec
sub
jmp
js
rcrl
stos
jge
popa
push
cmp
push
bound
pushl
push
insb
hlt
test
ficoms
fmuls
scas
in
sub
and
call
cmp
jl
jo
jmp
adc
or
add
dec
cmp
fdivl
adc
jbe
mov
xchg
sub
jbe
mov
fistpll
jae
dec
pop
in
cltd
jnp
push
loopne
les
lret
popl
cltd
sbb
in
loope
sbb
call
leave
and
push
repnz
mov
mov
mov
lds
jle
xchg
testl
sub
mov
dec
mov
jae
xchg
mov
pop
rorl
decl
mov
hlt
cmp
adc
push
dec
fnstsw
and
fwait
insl
pushf
idivl
bound
sub
lcall
loope
shl
iret
enter
mov
xor
cmpsb
mov
adc
fdivr
loopne
or
adc
les
pusha
add
fcomi
add
add
add
add
or
pop
pop
push
or
or
or
or
adc
adc
push
adc
mov
add
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
int
or
inc
add
addb
xchg
ss
add
add
adc
add
xor
add
sub
ret
jb
mov
sahf
subl
lcall
dec
in
xor
fsubs
and
xor
inc
mov
and
inc
adc
xor
cmpb
jecxz
xchg
xor
dec
dec
arpl
mov
push
movl
test
add
jae
or
add
test
adc
dec
inc
or
and
test
xor
into
add
adc
mov
ja
adc
cld
out
incl
adc
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
inc
roll
xorb
scas
fiaddl
or
and
inc
stos
js
nop
jg
jg
sub
rcr
push
ret
xchg
jae
sub
jnp
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
push
inc
dec
add
add
mov
cmp
ja
out
cmp
xor
and
jmp
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
repnz
roll
mov
add
call
les
pop
add
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
mov
lods
jmp
jg
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
cmp
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
add
sbb
int3
lcall
fs
scas
mov
pop
pop
mov
pop
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
incl
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
call
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
jg
push
pop
lock
std
or
pop
mov
daa
test
dec
pop
push
call
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
in
outsl
insb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
mov
mov
stc
xor
hlt
and
xchg
jmp
sbb
lret
mov
mov
out
pop
pop
and
aaa
jb
mov
mov
mov
fwait
addb
arpl
dec
jp
push
gs
jg
mov
push
add
stc
loope
mov
sar
andl
aas
icebp
aas
stos
push
testb
mov
scas
fdivr
incl
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jne
subl
jb
adc
push
lock
lods
jp
testb
call
gs
sbb
into
fcomps
sbb
sbbl
into
andl
aas
outsb
jmp
pop
cli
adc
aaa
xchg
in
add
inc
adc
loope
fstp
cmp
leave
or
icebp
aas
std
cli
push
push
push
idivl
or
push
inc
cmp
sub
fistpll
inc
mov
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
pushl
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
fistpll
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
call
addr16
adc
ret
das
pop
pop
pop
shlb
ljmp
cmp
lock
or
sarb
std
pop
les
cli
mov
lcall
xchg
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
call
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
incl
jmp
out
test
jae
push
iret
in
adc
aam
lcall
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
pushl
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
mov
dec
lods
xor
jg,pn
ljmp
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
jmp
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
ret
mov
mov
jb
and
jae
shrb
mov
and
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
dec
adc
pop
cld
addl
adc
and
mov
or
fmull
enter
jecxz
scas
sub
clc
jg
jg
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
mov
pop
iret
mov
jg
mov
aad
test
lds
inc
mov
mov
iret
push
pop
cmp
jg
push
push
sbb
stos
icebp
pop
incb
jno
adc
push
ljmp
jl
jecxz
sbb
sarl
adc
loopne
shll
mov
stos
pushw
xor
dec
ret
imull
mov
mov
aas
mov
fsubrl
cmpxchg
and
decl
mov
clc
xchg
pushf
mov
repnz
and
mov
mov
lahf
or
push
rcrl
in
xor
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
outsl
lcall
mov
inc
sti
arpl
daa
std
or
sbb
mov
lcall
incl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
push
cld
lds
fidivrl
jg
stos
pop
or
cld
incl
jbe
dec
mov
sub
jge
xor
pop
xchg
ds
sbb
cld
addl
sbb
mov
in
stc
mov
lahf
outsl
int3
push
sbb
idiv
pop
imul
arpl
out
out
outsl
xchg
jg
incb
jge
popa
push
test
jbe
outsb
hlt
sti
fwait
std
pushl
cld
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
and
shl
cld
mov
adc
jmp
stos
pop
jg
pop
shrb
rcl
jg
adc
xor
pop
mov
call
fisttpl
sub
jmp
lea
jp
jnp
jecxz
call
inc
lds
push
pop
adc
imul
or
inc
pop
xor
sar
decl
sbb
xor
subb
iret
mov
lock
inc
cmpsl
enter
mov
fwait
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
add
insb
test
aas
repz
outsl
mov
mov
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
adc
pop
add
aad
ljmp
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
std
insl
and
mov
or
dec
ss
bound
or
repnz
clc
dec
cmc
mov
jl
call
mov
lret
pop
in
cmp
int
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
inc
mov
sbb
xlat
inc
aas
mov
jg
add
clc
out
cmp
or
addr16
sbb
cld
daa
jp
inc
clc
in
idiv
adc
cltd
or
mov
ret
nop
cmp
icebp
scas
cli
icebp
das
incb
lock
pop
pop
div
cld
idivl
jmp
add
fs
loope
or
jmp
sti
pop
lds
out
xchg
add
out
or
mov
loope
mov
cmpsl
popf
or
ret
das
sti
mov
fbstp
push
daa
outsl
das
aaa
fwait
pop
aam
add
cmpsb
cmp
call
fiadds
dec
push
adc
mov
dec
adc
call
in
xor
or
pop
in
mov
inc
add
cltd
mov
or
aaa
std
fucomip
or
inc
sbb
xchg
rcrl
jle
icebp
ret
ror
sbb
cmp
jmp
jg
idiv
stos
cmp
aas
pop
clc
loope
loope
mov
sub
lahf
jp
dec
add
xlat
mov
xchg
fldenv
sbb
pop
inc
iret
fdivrl
xchg
lcall
decb
dec
mov
dec
or
sarl
pop
out
jg
jno
sub
jno
cmp
sub
arpl
out
iret
push
decl
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
xchg
add
test
pushl
add
pop
stc
push
dec
out
fstpt
mov
enter
jbe
pop
add
lahf
mov
jl
icebp
push
lahf
sti
inc
pop
imul
pushl
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
inc
aam
lcall
repnz
add
push
sti
pop
inc
leave
dec
lods
or
mov
push
mov
mov
int3
pop
iret
and
mov
or
add
inc
adcb
pop
stc
dec
or
cs
fwait
shlb
jbe
push
push
dec
insb
push
inc
or
test
add
mov
jno
lret
addb
inc
inc
mov
or
mov
adc
and
in
pop
es
jo
imul
sbb
imul
jp
ds
add
adc
push
inc
add
test
mov
add
in
test
add
add
inc
mov
or
adc
sbbb
cmp
mov
in
jbe
sbb
mov
inc
loope
sbb
int
mov
insb
push
push
xchg
jo
push
dec
sbb
and
gs
push
movzbl
jo
inc
push
shl
adc
jb
je
into
je
test
push
in
sub
dec
jne
js
pusha
ret
mov
stos
pop
inc
fists
insl
and
dec
shrb
inc
jns
push
imul
popa
jb
icebp
mov
or
es
inc
push
sub
push
or
dec
sbbb
inc
dec
sbbl
inc
jb
sub
jbe
dec
outsb
inc
and
pop
mov
push
outsb
dec
xor
out
jbe
inc
insb
sbb
xorl
imul
mov
outsl
jp
push
adc
jl
jae
icebp
inc
loopne
or
bound
pop
push
in
js
sbb
push
pop
mov
inc
insb
jne
mov
jne
data16
mov
xor
lock
js
mov
add
dec
adc
call
fildl
cmp
mov
outsb
mov
push
pop
push
out
popa
addr16
sub
push
arpl
pop
das
dec
mov
das
or
push
rcll
cmpb
jae
addl
adc
pusha
js
movb
sbb
or
xchg
adc
cmp
sbb
lods
sub
push
inc
insb
shll
jbe
sub
push
jo
cvtps2pi
and
dec
push
pop
in
xchg
test
mov
jo
push
dec
inc
dec
sbb
vmovaps
stc
mov
xchg
insb
jae
arpl
subb
stos
lret
jg
xchg
mov
pop
pop
pop
loopne
test
repnz
push
xor
iret
xor
inc
in
add
roll
pop
clc
shrl
pop
push
add
out
sbb
imul
inc
xchg
push
jne
sti
and
push
push
adc
hlt
jbe
push
sbb
jl
jnp
inc
dec
jae
enter
jnp
aas
js
xchg
dec
jmp
inc
cmovno
cmp
or
pop
pop
sub
dec
jb
push
push
sub
lret
and
in
jecxz
scas
outsl
xchg
lods
xor
push
push
je
ja
mov
pop
xchg
jg
pop
inc
inc
mov
rclb
fcompl
mov
and
inc
popa
es
lds
dec
loope
pop
xorl
insb
or
jge
mov
adc
sbb
aam
or
adc
outsl
jns
ss
dec
mov
dec
push
pop
sahf
sti
jmp
add
jmp
pop
xlat
mov
or
push
jns
inc
je
push
dec
mov
mov
inc
iret
sti
adc
mov
sbb
enter
mov
pop
mull
jno
sbb
adc
ret
loope
or
push
es
push
subb
push
pop
and
outsl
pop
or
pop
stos
fld
xor
loope
xor
rorl
push
xchg
cmp
adc
push
xor
sbb
les
mov
adc
dec
outsb
pop
inc
sub
pop
mov
jo
gs
in
int
ret
negl
jne
inc
in
inc
out
or
xlat
stos
jno
inc
leave
jo
mov
xor
jl
mov
add
and
sbb
mov
bound
mov
mov
cmp
dec
popa
pop
filds
cs
rcll
inc
lods
rep
sub
mov
or
add
push
outsl
fsqrt
icebp
cs
dec
sbb
cmp
inc
jbe
test
dec
popa
dec
add
fwait
popa
cmc
jmp
rolb
and
jns
push
scas
sbb
lock
mov
aad
xchg
mov
inc
ret
inc
jne
int3
loopne
sbb
xchg
shlb
sub
arpl
or
andb
add
inc
cmp
insl
cmp
jg
out
xlat
loop
dec
and
inc
mov
inc
mov
mov
adc
push
sbb
sub
out
sbb
rcrb
fsubrs
mov
push
sbb
sub
or
loopne
push
mov
xlat
sbb
push
mov
outsb
fisttps
insb
cmp
cs
popa
fbld
adc
fs
fs
inc
or
push
xlat
xor
push
outsl
repnz
inc
fsubrs
jb
and
lods
inc
aam
in
inc
push
into
jo
lods
dec
inc
inc
lds
arpl
loope
std
inc
imul
xchg
push
loop
fs
xor
mov
mov
arpl
insb
out
lock
insb
jle
inc
xorl
testl
stos
mov
push
xor
mov
lea
jbe
lea
cmp
pop
adc
leave
jl
popa
pop
add
enter
and
dec
inc
cmp
sbb
insb
xchg
dec
jle
scas
push
loopne
inc
loopne
ret
sar
sbb
cwtl
loop
xorb
sub
push
push
pop
xor
shlb
andb
add
fldenv
outsb
inc
push
push
adc
cmpsl
adc
and
push
pop
sbb
and
je
insl
dec
outsb
dec
adc
movsb
loopne
xchg
sub
fwait
dec
ret
mov
lcall
dec
add
mov
add
mov
xchg
movsb
imul
dec
rcrl
push
xchg
mov
inc
add
add
pop
adc
cmp
mov
loopne
shlb
inc
xchg
pop
outsl
inc
fs
fcomps
mov
bound
jl
adc
jmp
inc
push
push
jb
inc
jae
jo
mov
inc
and
insl
insl
push
and
int3
rolb
test
jne
mov
push
das
imul
or
lock
push
js
rorl
and
dec
daa
test
cmp
testb
pop
push
test
jbe
cmpb
pop
lock
mov
test
push
arpl
mov
aaa
pop
insl
mov
mov
addr16
jo
rcrb
arpl
lods
cmp
xchg
arpl
push
jns
lcall
icebp
mov
push
cld
ja
imul
fldt
nop
fsts
ljmp
inc
jno
jmp
sub
call
cli
sub
dec
and
jns
insb
jns
imul
xchg
cld
popa
imul
mov
xor
movsb
dec
cmp
dec
loopne
xchg
hlt
and
jmp
or
leave
add
mov
fs
dec
sub
outsb
pusha
pusha
jno
ja
push
imul
incl
push
mov
xchg
adcb
ret
xchg
dec
adc
std
imul
xorl
insl
add
or
cmp
mov
xor
cmp
fcoms
or
sbbl
outsb
aas
adc
pop
sub
sub
das
xor
mov
iret
pop
or
test
inc
outsb
xor
pop
scas
fistl
mov
lods
lds
pusha
shll
dec
popw
imul
into
insb
inc
movsb
pusha
sub
ret
xchg
jo
pop
aad
xor
or
add
scas
shrl
data16
fs
lods
call
movsl
sbb
call
dec
xor
mov
pop
mov
and
loopne
add
add
int
inc
xor
sbb
mov
pop
mov
push
push
inc
out
adc
insb
es
adc
incl
xchg
in
stc
pop
fdivrl
js
cmp
or
push
push
clc
xchg
jne
data16
pop
xchg
in
jo
add
fs
out
sub
mov
mov
es
imul
dec
xor
sub
or
int
fs
add
or
or
shrb
mov
in
inc
or
leave
inc
mov
jp
sub
popa
dec
pop
cmp
add
or
push
add
or
add
adc
xchg
fcoml
xchg
add
pop
imul
dec
addb
fists
jnp
lock
movsl
add
and
fsubrl
jb
popa
adc
sub
stos
mov
inc
cs
out
nop
insb
mov
pop
push
dec
sub
rolb
fiaddl
fcmovnb
sahf
jae
arpl
xchg
out
xchg
outsb
imul
cli
add
mov
xchg
lock
hlt
pop
add
add
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
dec
inc
add
add
