divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
movl
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
mov
push
adc
and
lds
imulb
push
rol
jo
xor
mov
fstpt
add
push
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
addl
in
xchg
pop
mov
rcrb
add
pop
inc
mov
or
test
pop
addb
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
add
insl
xlat
or
pop
insl
loopne
std
mov
ret
add
in
sbb
into
xchg
sub
clc
nop
pop
dec
ror
inc
mov
push
jbe
ret
ja
jb
fs
mov
xchg
push
or
cs
adc
mov
push
inc
inc
jp
addb
das
adc
je
and
add
dec
inc
pop
xlat
push
sbb
fistpl
dec
test
or
sbb
push
inc
push
scas
bound
sahf
add
stos
lcall
push
fst
popf
jp
fdivrs
fs
mov
jge
jl
add
pop
add
mov
jge
push
push
sub
jnp
push
dec
pop
push
insl
sbb
add
loopne
lds
iret
bound
das
pop
mov
pop
pop
ljmp
mov
mov
cmp
or
jge
lcall
add
mov
mov
xor
mov
inc
sub
pop
ret
arpl
sarl
dec
lock
sar
pop
jo
popf
pop
inc
sub
inc
clc
sub
enter
inc
add
in
orb
jmp
fs
pop
sbb
adc
stos
mov
jecxz
leave
mov
add
jnp
add
fdivr
or
cli
js
mov
cmp
jg
mov
adc
adc
ret
pop
dec
out
add
cs
movsl
pop
pop
and
dec
test
push
sub
xchg
das
mov
sub
push
mov
sar
imul
cld
idiv
push
adc
pop
dec
clc
add
push
push
sti
sub
adc
lock
pop
in
sub
cmpsb
adc
leave
call
ficompl
int3
stc
clc
icebp
loop
lds
iret
jle
mov
sbbl
jecxz
js
jle
push
adc
cmp
fistpl
pusha
lds
dec
cmp
add
aaa
lods
std
jmp
cltd
sub
shr
enter
mov
mov
imul
cwtl
and
mov
add
push
jne
mov
cmc
sbb
adc
jbe
mov
out
xchg
rol
inc
add
inc
add
lea
push
add
adcl
inc
adc
js
notb
xor
into
mov
cld
aam
sbb
xchg
fistpll
pop
push
cmp
cmp
cmpsl
mov
jb
xlat
xor
fsubrs
mov
pop
leave
jmp
or
test
jle
mov
xchg
cmp
mov
inc
sahf
mov
xchg
rol
pop
test
sbb
jo
and
sbbl
sbb
aas
lds
into
je
or
addr16
push
mov
lea
inc
sub
or
xchg
xchg
or
lret
ret
and
addb
hlt
adcb
jbe
cmpsb
mov
or
hlt
jg
pusha
cmp
or
push
or
cmp
xchg
cmp
push
rcr
out
mov
adc
cmp
jle
mov
sbb
int3
out
add
sbb
cmp
or
pop
or
and
cmp
mov
xchg
pop
lret
filds
addr16
add
jb,pt
pop
add
mov
adc
rcll
std
fcoms
jnp
ljmp
add
cmp
clc
mov
push
push
push
rcrb
or
adc
xchg
call
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
jo
xor
xor
inc
sub
aad
pushf
pop
js
aaa
loope
mov
cmc
pop
pop
pop
or
cmp
push
mov
lea
pop
jno
cmp
jne
push
int3
sbb
lock
push
add
adc
jp
jge
pusha
js
push
mov
mov
or
add
push
xchg
pop
pop
pop
inc
cmp
daa
inc
test
mov
jne
int
sahf
mov
mov
and
sub
js
fcoml
jo
dec
sub
clc
mov
cmc
xchg
push
lret
repnz
sbb
mov
ja
fistpl
cwtl
mov
sbb
insb
ds
test
filds
mov
in
xchg
push
or
lret
jne
inc
andb
mov
mov
sub
lret
rol
popa
xchg
add
mov
stos
or
pop
push
or
pop
push
push
movl
repz
inc
in
test
out
lret
sub
sbb
inc
lcall
xchg
insb
sahf
scas
push
pop
jmp
add
add
imul
push
add
xchg
imul
lea
push
dec
add
fadds
push
xchg
aad
jl
lea
lret
pusha
push
add
push
outsb
fsubs
xor
sub
mov
mov
cs
mov
enter
scas
dec
sbb
int3
ss
xor
jb
call
stos
xchg
cmp
je
xchg
adc
in
jne
imul
arpl
ret
mov
pop
mov
xchg
stos
insl
fadds
mov
into
mov
cmp
adc
ljmp
sti
stc
mov
stos
push
in
mov
aam
daa
cmp
js
or
movsl
mov
fs
std
jl
mov
or
adc
out
and
idivl
cs
jno
add
or
jp
inc
or
dec
mov
jae
sbbl
dec
mov
add
or
add
mov
mov
add
ret
mov
jle
imul
add
movsb
dec
or
cmp
out
mov
fmul
jo
or
lahf
push
insl
add
loopne
or
ret
jno
or
jle
out
out
decb
adc
xor
loop
ljmp
fmuls
xchg
sub
lds
loopne
xor
enter
dec
lahf
add
ja
or
ret
je
dec
je
or
adc
or
adc
inc
xchg
js
inc
shll
loop
rorb
mov
loope
adc
sub
rcll
pop
popa
xor
mov
clc
push
cmpsl
rcrb
fs
push
sub
xor
sbb
mov
mov
inc
and
mov
pushl
and
jl
cmc
andl
add
adc
aam
test
js
gs
add
jae
mov
mov
mov
rcl
add
xchg
mov
push
mov
add
clc
loope
dec
mov
ljmp
rorl
addl
dec
or
scas
in
insl
movsl
sub
js
and
adc
pop
enter
add
adc
je
fcoml
or
ret
add
add
je
and
sbb
inc
loope
les
inc
pop
xlat
andb
stos
mov
cmpb
lea
out
fnstcw
std
xchg
cmpb
adc
pop
je
filds
jbe
and
adcl
mov
xchg
scas
xlat
pop
js
jecxz
or
jo
lock
lahf
cmp
sbb
adc
shl
mov
aaa
pop
sbb
adc
pop
push
aas
cmp
cli
js
jl
inc
mov
mov
ja
out
adc
test
clc
mov
push
aas
pop
mov
sub
fnstsw
stos
or
dec
jbe
mov
push
pop
pushf
dec
lock
popa
movsl
cmp
movsb
movsb
repnz
repnz
and
loopne
push
in
or
mov
shll
mov
xor
into
scas
mov
orl
and
out
lret
mov
xchg
nop
out
addb
fsubrs
inc
adc
pop
inc
and
adc
mov
xor
jae
adc
leave
cmpl
adc
je
scas
adc
lahf
inc
cmpsb
xchg
das
jno
lahf
nop
jl
outsb
insb
adc
push
push
or
mov
xor
add
mov
call
dec
adc
xor
out
jne
bnd
mov
add
dec
add
mov
mov
or
out
cmpsb
mov
sub
jo
ljmp
fnsave
dec
lea
mov
bound
inc
call
push
xor
xor
sbb
pop
pop
ss
in
loope
mov
in
shrb
lea
loopne
out
xor
push
jp
add
push
mov
dec
pop
in
jne
ret
mov
ret
xlat
into
push
pop
repnz
je
or
inc
mov
or
sbb
xchg
xor
lahf
lock
cmp
lahf
in
movsb
test
mov
jne
xchg
outsl
jmp
cmp
cmp
mov
pusha
movd
mov
decl
inc
adc
and
fidivrl
xor
fsubr
out
add
nop
dec
push
xor
lock
insb
xchg
lock
out
jle
push
loopne
aam
je
imul
push
cmpsl
mov
push
cmpl
mov
call
add
popf
add
pusha
fstl
push
mov
decl
jmp
xor
push
pop
jbe
inc
pop
je
push
repz
ret
test
adc
push
adc
mov
je
or
enter
fnstsw
push
dec
test
dec
sarl
and
pop
push
sbb
pop
xor
fistpl
fistpl
cmp
je
arpl
or
mov
fcmovnb
mov
inc
mov
enter
cwtl
enter
or
jae
mov
mov
test
dec
mov
dec
call
push
nop
jle
shlb
push
rcrl
nop
punpckhwd
lock
enter
or
sbbb
pop
cltd
xchg
lret
push
mov
cmc
xchg
cmp
xor
icebp
pop
in
lods
loopne
add
lcall
test
cmp
popf
mov
cmp
lock
xor
aad
sub
jl
add
mov
fcoml
dec
out
outsb
cmp
mov
cmp
shlb
scas
js
aaa
out
clc
sub
cmp
or
fsubl
stos
dec
movsl
test
nop
out
or
nop
rclb
rclb
mov
and
push
imul
movsb
cmp
dec
pushf
fmuls
mov
int3
sbb
ficomps
mov
xchg
pop
enter
enter
enter
inc
push
imul
cmp
shl
sbb
mov
and
xor
jle
pusha
sbb
push
sbb
jmp
ja
sub
mov
xor
add
and
shr
adc
push
mov
jle
pop
mov
mov
ss
stos
jo
aaa
fidivs
clc
adc
insb
rorl
dec
test
mov
and
xchg
notb
sbb
mov
sub
pop
push
xor
lret
aam
and
push
inc
loope
sbb
cmp
add
dec
xchg
dec
ds
loopne
stc
add
mov
loopne
push
or
roll
sbb
test
and
sbb
notb
jg
mov
jno
and
xchg
adc
inc
mov
orl
test
clc
out
mov
movl
mov
xchg
sbb
test
mov
cwtl
sub
iret
mov
and
mov
shlb
addr16
adc
mov
xorl
leave
sbb
fdivl
push
adc
in
cmpl
adc
leave
in
adc
mov
fcmovne
pop
and
push
pop
push
jmp
xchg
cmpsl
sbb
adc
or
pop
inc
sbb
shll
std
adc
pop
mov
add
adc
pop
movsb
jae
xor
sub
dec
or
shlb
push
sbb
out
sub
jl
xchg
add
movsb
xor
push
mov
in
repnz
xchg
btc
lret
or
in
mov
outsb
aaa
adc
dec
xchg
sbb
mov
jne
push
lret
jp
movsl
jno
mov
adc
stc
or
sbb
jne
fsubr
into
adc
mov
xor
pop
leave
adc
mov
push
adc
movl
mov
or
adc
and
sub
sub
and
sbb
sbb
loop
loope
fdiv
fistpl
xchg
pop
bswap
push
inc
test
daa
sbb
jmp
sbb
rolb
cmp
clc
popf
scas
sbb
sbb
loopne
jge
je
mov
sahf
les
and
and
roll
je
stc
or
aas
dec
pop
push
cmp
add
imul
clc
add
add
rclb
sbb
push
test
subb
or
cld
jge
push
movsb
pop
cmp
in
sbb
scas
pushf
xchg
adc
and
dec
movsl
and
jecxz
or
scas
mov
add
sbb
rcrl
xor
pop
jns
sub
cmp
adc
xorb
and
fisttpl
mov
mov
negl
je
push
push
pop
in
mov
sbb
test
adc
cwtl
pusha
mov
dec
add
call
jb
int3
and
pusha
cld
cli
adc
and
std
push
pop
mov
add
jmp
add
adcl
ret
pavgb
shlb
mov
and
test
push
inc
je
and
and
mov
orb
in
in
push
mov
jo
aad
les
cmpsl
and
sahf
fldt
cvtps2pi
outsb
mov
incb
mov
push
mov
daa
push
loope
and
test
adc
out
xlat
std
mov
scas
sub
pop
repnz
sub
ljmp
sub
add
sub
adc
ret
and
xchg
ret
adc
inc
push
xchg
lret
or
xor
mov
add
add
add
add
loopne
inc
pop
xor
jae
insb
push
daa
mov
push
notl
pusha
insb
adc
mov
lods
sub
inc
and
aaa
sub
stos
mov
inc
shrb
leave
pop
int
nop
imul
arpl
sub
or
jge
xchg
sbb
mov
sub
xchg
push
add
add
push
jg
mov
in
call
dec
cmp
mov
push
push
sbb
mov
fcom
and
cmp
cmpsl
movsl
loopne
xchg
mov
push
mov
popf
add
and
xchg
stos
and
lahf
xchg
mov
enter
sub
sub
cvttps2pi
push
mov
cmp
dec
sbb
sbb
das
push
movzbl
push
pop
xchg
testl
xor
xor
fcmovnbe
mov
xor
cmp
adc
je
mov
push
cmp
outsl
inc
push
mov
cmp
jmp
leave
fldt
inc
cmp
enter
and
and
nop
push
orl
stc
pop
or
xor
xor
xchg
ficoml
sbb
and
cmp
mov
call
adc
xchg
sbbl
xor
pop
mov
mov
or
pop
and
xor
movsb
adc
xor
and
or
sbb
jae
movsl
inc
sub
je
js
popa
adc
jne
add
inc
or
movsl
popf
mov
push
mov
mov
mov
bound
mov
and
lahf
scas
cmc
add
push
pushl
jne
mov
and
dec
lahf
faddl
dec
fcmovne
jge
adc
je
in
jge
push
mov
sub
nop
jbe
xor
add
les
fists
call
cmp
jne
mov
push
cs
adc
dec
loope
pop
call
loope
adc
jne
push
sub
mov
or
xchg
mov
test
mov
clc
inc
mov
sbb
xor
or
pop
inc
inc
sahf
add
jge
or
xchg
add
add
mov
jge
pop
pop
adc
mov
and
inc
ljmp
das
push
shll
pop
xor
loopne
add
sbb
notl
push
mov
pop
add
cmpb
push
mov
ret
scas
loope
mov
fstl
pushf
add
js
xorb
outsl
sub
cmpsb
call
xorl
lahf
sub
daa
sbb
mov
and
and
ret
lds
cmp
jle
xchg
inc
out
or
xor
or
mov
pop
into
add
fisttps
pop
out
jne
or
je
loopne
cld
push
out
jb
mov
mov
inc
aaa
xchg
insb
jg
fcoms
mov
sub
nop
cmpl
inc
faddl
xchg
xor
pop
add
test
mov
lods
cmpsl
sbb
test
fsubrp
call
push
jne
or
xchg
cmp
mov
push
add
and
std
mov
adc
not
add
repz
je
mov
jp
test
mov
or
pop
push
jnp
cmp
inc
insb
movmskps
inc
out
add
cmp
aad
or
ja
add
mov
and
test
pusha
jo
ret
andl
pushf
lret
lcall
mov
inc
inc
mov
jg
jg
push
dec
sub
insl
shlb
add
or
sub
push
inc
int3
add
mov
or
adc
es
fisubl
pop
sarb
cmp
push
in
rorb
jg
sub
mov
push
lock
dec
icebp
jg
cmc
je
sub
jmp
jge
imul
push
jmp
adc
add
or
xchg
rclb
das
mov
jmp
pop
enter
push
add
mov
ss
inc
pop
push
or
outsl
xor
push
das
out
js
insl
pusha
inc
lods
roll
je
lock
cmp
mov
xor
inc
mov
je
lock
jle
push
lret
push
jbe
pop
cmpb
icebp
adc
ret
jle
and
sbb
xor
push
push
roll
ds
sub
aad
in
por
sbb
mov
mov
hlt
pop
or
out
mov
push
xlat
pop
punpcklbw
add
add
and
xor
adc
push
movsb
xchg
and
sarb
ret
dec
leave
add
int
scas
psubd
or
lods
loopne,pt
sub
push
jo
add
or
jne
adc
push
fisttps
adc
inc
add
into
in
jbe
out
insl
inc
add
call
mov
mov
dec
movsl
or
xchg
or
test
loope
fisttpl
ss
add
mov
jp
pop
popa
mov
add
scas
xorl
ds
jmp
cmp
mov
mov
cmp
inc
nop
es
inc
sub
call
xor
fmull
push
push
adc
shll
aas
rcrb
cli
stos
add
in
loopne
pop
cld
loopne
dec
xchg
lock
orb
add
or
jno
je
fcomps
scas
mov
lcall
and
sbb
ret
push
cmove
or
jbe
and
imul
or
rolb
lods
or
mov
or
mov
inc
inc
rorb
mov
rcl
and
scas
dec
sbb
mov
leave
push
in
sbb
lods
mov
scas
sbb
mov
mov
inc
mov
popa
pop
sahf
pop
cmp
xor
pushf
paddb
add
repnz
push
call
inc
pusha
mov
rcll
xor
pop
dec
cmpb
push
fs
adc
mov
push
repnz
fcomps
call
push
inc
inc
add
loope
icebp
or
push
xchg
xor
or
loopne
clc
subb
xchg
fnsave
or
adc
cmp
xchg
pop
or
in
xorb
dec
mov
adc
inc
sub
sub
stc
mov
push
and
outsl
es
shrl
pop
out
add
xor
mov
push
cmp
push
mov
mov
ss
cmp
rclb
sbb
inc
fcoms
iret
gs
fsubl
in
add
popa
xchg
push
rolb
je
pushl
push
js
loop
loope
push
cmp
ret
sarl
movzbl
push
adc
push
ret
push
push
inc
xor
sbb
add
scas
lret
mov
sbb
jl
ret
push
sub
arpl
add
addl
rolb
push
gs
mov
test
xor
int3
cmc
jle
add
pop
or
add
mov
or
repz
inc
jmp
jge
scas
xor
sti
jle
cld
aaa
mov
adc
push
cmp
jg
mov
mov
sbb
jmp
xchg
cwtl
enter
sbb
pop
aaa
sbb
leave
jae
sbb
mov
or
insb
xor
enter
repnz
cmp
test
cmpsl
mov
das
push
cmp
add
cwtl
js
outsb
sub
in
sub
sbb
subl
sbb
jmp
push
pop
cmp
scas
mov
jmp
mov
push
cmp
mov
int
and
gs
shlb
sub
or
add
sub
jne
push
imul
fmul
test
lock
add
mov
xor
inc
cmp
jae
jg
jmp
mov
hlt
lea
ja
xor
mov
pop
dec
je
call
push
mov
rcr
xchg
je
add
fiaddl
or
mov
pop
add
inc
fnsave
std
imul
add
jo
in
cmp
movb
push
push
jnp
lods
ljmp
roll
jecxz
xor
clc
shll
mov
loop
into
popa
nop
add
mov
sub
jp
fwait
bound
rcll
add
lea
ljmp
clc
add
cmp
into
adc
sbb
xchg
add
fcmove
test
mov
mov
inc
xchg
or
mov
into
push
pusha
orl
jbe
test
adc
cli
out
fidivrl
hlt
pop
pop
std
cmp
je
test
js
js
mov
inc
dec
hlt
jg
hlt
or
push
je
sub
pop
movb
xchg
inc
mov
xchg
add
inc
mov
js
push
push
adc
jl
or
test
call
insl
outsb
cltd
sbb
pop
call
addb
cld
cmp
jl
mov
jmp
xor
sbb
in
mov
cmp
and
and
in
sbb
xor
pop
jbe
push
inc
hlt
jae
mov
push
mov
xchg
insb
daa
push
call
popf
inc
mov
or
out
adc
xor
unpcklps
push
inc
sub
push
fisubrl
add
mov
ret
je
mov
fcomps
xlat
out
jp
mov
lea
shl
mov
push
inc
orl
xor
cmp
sub
cmp
mov
clc
pop
subl
pop
int3
or
subl
add
add
add
inc
pop
mov
mov
mov
dec
mov
jp
adc
aaa
mov
insb
add
inc
outsb
mov
push
pop
ja
pop
and
adc
lods
xchg
test
pop
insb
xlat
lret
jae
or
sub
mov
out
std
xor
ret
add
adcb
xchg
fsub
pop
lcall
pop
mov
fs
jne
cmp
movsl
jle
cmp
pop
jbe
movb
sbb
push
push
push
and
popa
ret
xorb
int3
cmpsb
sbb
xchg
repnz
sub
lods
ret
mov
adc
sub
sbb
setne
rcrb
ret
aad
pop
data16
rolb
test
addb
call
adc
rolb
push
popl
js,pt
jo
mov
lods
jo
sets
call
or
inc
add
iret
push
jne
or
push
call
jmp
and
data16
ret
incb
jle
mov
or
pop
mov
add
inc
add
cmpsb
dec
lock
data16
push
push
pop
sbb
fdivrl
jmp
mov
xlat
subb
ret
adc
add
insb
dec
push
lcall
outsb
repnz
mov
leave
xor
sbb
sbb
sub
add
es
sahf
push
push
les
push
inc
inc
clc
sub
in
imul
add
or
sbb
jns
flds
sti
aas
loopne
xchg
insb
cmp
mov
pop
pushf
shlb
mov
jge
sar
or
cs
pop
pop
inc
or
enter
mov
add
insb
cld
cmp
lea
jbe
mov
push
inc
mov
push
ret
push
mov
and
sarb
fmull
xor
dec
hlt
xor
sub
dec
add
adc
addr16
mov
cmp
cmp
dec
aaa
jno
mov
and
sub
adc
bound
int
aad
xor
aaa
loopne
cmp
icebp
adc
scas
cmpsl
dec
dec
or
push
mov
scas
mov
mov
jo
js
shr
das
push
inc
lcall
pop
rcrl
cmp
inc
lods
pusha
push
push
lcall
roll
xchg
xorb
incl
pusha
ret
out
test
push
or
push
lock
fldt
inc
leave
xor
add
imul
aad
adc
xchg
pop
mov
mov
cmpsl
mov
jbe
and
call
cmp
and
cmp
xchg
cmpsl
inc
mov
loop
test
lret
cmpsl
nop
push
xor
fnstcw
lds
and
adc
inc
enter
je
or
sbb
dec
add
sbb
jo
and
nop
xchg
jo
std
clc
inc
addl
jg
loopne
jo
mov
xchg
cmp
inc
mov
adc
bound
jmp
inc
mov
cmpsl
add
mov
inc
enter
or
and
aam
dec
sbb
jle
stc
sub
mov
cmp
push
jno
movsl
and
pop
mov
sbb
push
rcrb
je
push
push
and
cs
mov
add
fldl
mov
or
adc
mov
dec
pop
push
leave
hlt
aaa
xor
sbb
xor
push
fwait
jns
dec
test
add
inc
lcall
sbb
imul
inc
pusha
add
xchg
inc
and
and
mov
repnz
lret
cmp
test
pop
mov
cmpsb
fildl
lock
cmc
or
inc
add
inc
cmp
and
cmp
push
dec
scas
dec
sahf
sbb
adc
sbb
ret
inc
push
inc
out
jg
sti
test
lea
mov
add
or
and
cmp
lret
xor
fistpll
fstp
pop
sub
sbb
pop
testl
and
jmp
insb
cltd
sbb
adc
xorl
adc
out
lea
addr16
gs
outsb
scas
nop
adc
mov
push
mov
xchg
popa
pop
ret
push
and
sub
and
xchg
sbb
sbb
nop
or
sbb
lock
mov
ljmp
cwtl
pop
gs
or
xchg
push
dec
cmp
cmpsb
add
xor
prefetchw
ja
stc
mov
sbb
and
stc
adc
cmp
popf
xor
inc
pop
sbb
cmp
push
fdivrl
inc
mov
push
cltd
pop
negl
rcr
orb
roll
jle
push
add
jmp
push
test
ja
pop
mov
lcall
pop
dec
add
popa
jbe
inc
pusha
sbb
fcmovnu
mul
pop
pop
cmp
pop
pusha
jmp
sub
mov
je
adc
in
jge
adc
push
push
testl
add
dec
push
jmp
mov
rorb
or
sub
add
jecxz
jne
sti
popa
xchg
sbb
jmp
push
add
push
mov
xor
cmp
or
mov
mov
sbb
bound
or
pop
push
mov
fdivr
cmp
mov
jnp
xchg
mov
mov
lret
add
add
ret
or
xor
push
push
daa
pop
pushl
inc
pop
mov
lea
sbb
pop
sbb
movl
jp
xlat
loopne
cmp
je
cmp
pop
inc
jmp
inc
xchg
cmpsb
push
lcall
mov
fldz
andl
and
jmp
sbb
sbb
and
xchg
test
jmp
and
push
jmp
xchg
sbb
pop
scas
xor
jns
mov
dec
stos
push
jno
out
dec
adc
out
push
push
pop
data16
cwtl
and
out
aas
push
pusha
aad
mov
mov
mov
add
pushw
and
inc
stos
ja
sub
stc
insb
fstl
lea
or
add
sub
pop
or
movb
add
sbb
push
or
xchg
xchg
jl
stc
icebp
pop
jge
pop
push
jmp
dec
das
push
dec
push
into
clc
scas
clc
out
repnz
push
pop
push
lea
push
push
push
push
add
push
lea
leave
add
dec
cmp
pop
pusha
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
ret
xor
loop
ja
jne
push
sub
push
hlt
mov
arpl
xor
add
stos
push
insb
sbb
xorb
push
sbb
xchg
out
int3
push
aam
push
imul
push
inc
xor
add
icebp
and
xchg
imul
bound
notb
es
dec
adc
aad
jecxz
dec
adc
int3
or
fwait
in
lock
dec
xchg
adc
fisttps
outsb
jno
jle
ss
mov
push
ret
or
jp
pop
add
insb
mov
lods
ss
mov
jns
xorb
rolb
insb
inc
push
inc
add
ret
jae
xchg
dec
xchg
mov
mov
mov
lcall
inc
sbb
cmp
scas
cwtl
mov
mov
in
das
mov
shl
call
xchg
xchg
fidivrs
shrb
lea
testb
loopne
movsl
data16
test
xor
jne
push
inc
add
push
cmp
add
pop
add
mov
pushf
jl
jnp
cld
mov
pop
fmull
js
adc
jl
sbb
add
jecxz
mov
xchg
mov
pop
cmp
rol
sbb
andb
xchg
fbld
popa
aam
push
sbb
js
aam
das
in
cmp
adc
jne
and
inc
jl
push
lret
add
xchg
sub
aam
xchg
push
or
mov
dec
fildl
cmp
int3
fcmovnb
ret
popl
sti
mov
lea
push
mov
sub
mov
roll
rorb
push
mov
les
mov
cmp
jne
push
sub
into
in
push
in
pop
fcoms
or
shl
iret
or
lea
push
loopne
add
mov
mov
mov
mov
sbb
out
inc
mov
pushl
call
push
or
aad
data16
adc
or
lcall
shrb
les
inc
push
mov
lock
icebp
subl
push
push
lea
daa
int
cmp
fisubrs
inc
dec
sub
in
dec
jmp
sub
in
leave
adc
jle
shlb
in
cmp
push
mov
add
mov
imul
inc
leave
bound
pop
xor
lods
push
adc
push
mov
inc
in
add
call
xchg
sub
xchg
fistps
or
push
neg
sbb
adc
js
movsb
and
ret
insb
add
inc
leave
mov
lock
fisubl
mov
in
and
dec
out
mov
cmp
or
add
js
push
insb
mov
mov
mov
push
fimull
leave
mov
push
clc
and
push
push
out
cmp
popa
pop
jns
adcb
pushf
mov
mov
popa
mov
pusha
enter
xchg
jge
mov
loope
mov
add
jae
dec
push
adc
add
je
push
inc
call
mov
jmp
pushl
and
pop
push
repz
or
jno
testb
icebp
jo
pop
jne
les
mov
loope
or
mov
mov
aaa
jge
adc
adc
adc
ja
roll
jmp
sbbl
adc
je
cmp
arpl
adc
mov
scas
rcll
add
dec
mov
mov
mov
bound
or
or
mov
sti
je
cmp
mov
pop
sbb
repz
movsl
push
xor
add
mov
pop
inc
lret
jo
add
ja
popa
sbbl
sbb
imul
xor
sbb
push
jne
movb
add
cmp
jne
popf
adc
mov
fldz
xor
push
push
loop
jo
movb
jle
addr16
dec
aas
mov
xor
xchg
outsb
jmp
test
scas
xor
push
sub
inc
or
jg
add
emms
mov
or
lcall
sub
mov
sbb
cmpsl
or
push
sbb
mov
adc
jge
ror
push
adc
mov
mov
push
sub
push
adc
enter
dec
adc
add
push
xchg
call
lods
test
pop
lahf
test
add
sti
test
add
ja
mov
ret
dec
inc
or
mov
sbb
shll
add
push
sbb
sub
push
lea
and
test
cmpsb
adc
clc
mov
pop
sbb
xor
in
push
ret
inc
add
dec
into
shr
mov
rcll
enter
xor
mov
jge
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
adc
jle
inc
pusha
fsubrl
xchg
dec
pop
mov
adc
adc
xchg
and
out
push
push
push
aaa
movsl
roll
mov
push
stos
mov
jp
dec
sbb
cli
neg
add
jle
out
andl
imul
add
rorb
pop
into
popa
inc
or
in
ja,pt
lea
fistps
jge
into
xchg
adc
pop
xor
adc
fmuls
or
mov
call
iret
adc
dec
or
nop
test
cmc
fs
mov
adc
dec
es
fadds
xchg
xlat
push
adc
xchg
push
mov
add
xrstors
cmpb
xor
je
push
pop
test
cmp
add
pop
jnp
jbe
jmp
inc
shlb
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
or
imul
mov
addb
push
xchg
cmp
adc
pop
pop
cltd
scas
xchg
push
popa
push
sbb
mov
mov
jecxz
add
cli
sbb
shlb
out
add
insl
lea
or
mov
repnz
mov
shrb
or
dec
cmpsl
movl
jl
jl
mov
cltd
mov
lea
mov
push
rol
or
movsb
add
inc
les
ret
add
cmp
jge
out
mov
outsb
mov
idiv
push
mov
push
push
mov
jno
aam
ret
xor
idiv
outsl
imul
ret
jp
test
jg
pop
dec
mov
push
add
mov
adc
std
test
mov
inc
dec
cmp
sti
add
jge
add
xlat
sub
in
mulb
loop
fldz
pop
fstpl
push
pop
clc
arpl
jge
mov
sub
clc
je
popf
hlt
pop
add
sbb
mov
fistl
jp
xor
mov
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movsl
fisubrl
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outsb
sti
pop
xchg
sub
cmp
or
or
js
decl
out
insb
mov
hlt
fists
sti
fildl
mov
test
jns
faddl
or
test
fdivrp
mov
sub
mov
lea
test
mov
inc
fidivrs
cmp
add
pop
sbb
push
insl
pop
in
cmpb
or
clc
fidivl
jmp
add
dec
subl
cli
outsb
lods
iret
xor
ret
pop
jne
into
shr
pop
pop
movb
push
xor
test
jmp
imul
push
or
mov
ret
mov
aam
pop
mov
orb
fsubs
add
pop
push
jbe
pusha
push
gs
fadd
lcall
inc
pop
movsl
fs
and
andb
sbb
test
dec
push
cmp
push
push
push
dec
aad
pop
into
pop
leave
out
cmp
cs
int
sub
inc
aam
aam
mov
add
daa
cmp
sbb
and
cltd
add
stos
inc
sub
repnz
enter
cmpsb
adc
int
fcompl
gs
loope
pop
xor
fmul
addr16
sarl
xor
mov
fbstp
ret
inc
jne
sti
mov
add
push
inc
popf
movsb
xchg
adc
push
leave
pusha
pop
leave
pop
rolb
xor
sbbb
scas
xchg
ljmp
lea
push
push
rorb
testl
pop
adc
push
lods
jo
outsl
and
shr
jg
lods
mov
lea
push
push
test
xchg
dec
adc
adc
cmp
andl
pop
adc
sub
or
xor
sub
ss
mov
imul
mov
pusha
pop
jae
in
push
mov
fwait
mov
pop
and
nop
dec
outsb
adcl
push
pop
push
xchg
add
mov
add
push
push
sahf
adc
fs
sbb
lods
jmp
pop
int3
out
shll
pop
popf
dec
inc
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
dec
dec
or
add
xchg
shll
cmc
dec
cmp
data16
aas
outsl
add
xor
inc
inc
push
add
inc
jae
inc
sub
clc
push
sub
clc
setb
test
and
jg
mov
cmp
test
clc
je
xor
dec
adc
data16
push
lea
push
lods
lds
xor
aaa
andb
jle
je
push
fstps
addb
pop
out
sbb
outsb
and
cltd
loop
sahf
sub
xor
dec
mov
inc
test
daa
dec
push
mov
hlt
adc
or
out
in
loopne
incl
lret
mov
arpl
shrl
inc
hlt
xlat
das
or
push
scas
push
pop
int
pop
xchg
pop
add
add
loop
je
loopnew
or
sbb
sti
or
mov
out
dec
sub
iret
popa
sub
pusha
sbb
xchg
ljmp
pusha
enter
aaa
mov
adc
pop
int
jmp
test
mov
loop
pop
mov
jle
sti
lods
dec
cld
xor
js
and
xor
dec
and
add
push
or
mov
pop
jle
and
sub
int3
das
inc
xor
or
scas
adc
into
xchg
mov
jle
daa
addr16
add
jmp
xchg
mov
cld
pop
js
inc
sub
add
cmp
test
ja
push
and
js
jno
jmp
gs
dec
ss
call
add
sub
add
sub
lret
push
add
mov
add
dec
cwtl
jecxz
xor
ret
pop
nop
lret
in
enter
xchg
fmuls
sbb
sub
add
mov
pop
sub
shrb
dec
inc
xlat
cld
aam
out
aaa
pushl
dec
add
xchg
lods
int3
add
into
adc
add
pop
shl
popf
pusha
dec
ret
fistpl
sbb
sbb
stos
int
xchg
flds
push
sti
test
jle
add
jns
pop
in
or
in
iret
mov
pop
xlat
pop
insb
sbb
adc
sbb
pop
in
imul
pop
test
mov
pusha
das
jmp
shlb
pop
roll
or
gs
ds
outsb
add
popa
imul
mov
lods
jnp
adc
push
mov
add
fimull
negb
sbb
add
and
mov
mov
push
jae
fisttps
mov
and
push
jns
adc
xor
jne
mov
cmpsl
imul
loope
clc
push
xchg
pop
pushl
outsl
in
sub
pop
aaa
or
mov
jle
arpl
dec
clc
push
sti
cmp
mov
sbb
sub
test
je
iret
mov
xor
sbb
xchg
stc
loop
dec
mov
jmp
dec
test
jmp
mov
sub
and
mov
lods
pushf
jge
add
add
aam
pusha
inc
xor
ficoml
pop
mov
js
jg
fwait
ds
sub
leave
js
cmp
jge
mov
mov
mov
subb
cmp
sbbb
cmp
jle
mov
adc
inc
mov
orl
mov
or
std
fsubr
sbb
lcall
fadd
out
fs
fidivrl
xchg
mov
inc
lcall
scas
mov
mov
xor
or
je
dec
mov
cmp
in
mov
ds
pop
jo
sub
inc
sete
or
sahf
ficoml
sbb
loope
and
je
sbb
xor
push
push
fsubs
or
popf
mov
mov
add
lret
adc
ficoml
out
mov
pop
add
scas
sbb
and
mov
xorb
int3
mov
ret
cwtl
movsb
push
loopne
mov
fcompl
add
mov
shll
lock
pop
push
and
insb
sbb
js
and
pop
js
pop
pop
mov
sti
push
dec
lock
insl
xor
pop
jo
or
push
flds
jge
lahf
push
lock
add
jne
or
mov
jg
sbb
mov
push
jge
out
cmp
fcoms
ss
std
mov
or
xor
jle
push
xchg
push
or
sub
test
loopne
xchg
add
jmp
mov
cmpsl
xor
inc
push
jnp
cmp
pop
lods
enter
adc
push
pop
pop
les
sbb
mov
mov
in
adc
ret
and
outsb
xchg
or
in
repz
in
push
lret
adc
dec
xor
fdiv
in
and
mov
jns
pop
xchg
fdivrs
pop
arpl
xchg
cmpsb
sub
adc
add
and
lock
loop
dec
and
mov
popf
cmp
mov
add
xchg
jle
jge
in
add
dec
push
int
inc
xor
je
sub
test
dec
jb
sbb
xchg
or
cmp
in
add
ret
test
scas
ret
mov
xchg
sbb
push
aam
push
clc
clc
sub
dec
cs
rorb
cmp
inc
lock
hlt
add
jge
mov
shlb
dec
pop
dec
clc
pushl
xor
mov
xor
xchg
das
xchg
push
add
add
mov
and
repnz
sub
lock
pop
inc
lahf
aaa
mov
clc
test
cmp
jmp
loopne
fstpl
hlt
mov
out
mov
fistpl
stc
add
into
push
push
add
push
outsl
or
mov
or
push
lret
jp
clc
adc
call
divb
or
mov
inc
inc
hlt
insl
inc
inc
in
jb
out
fstpt
das
sub
jg
push
call
cwtl
add
jb
repnz
aaa
or
mov
or
movsb
pop
push
loopne
clc
aas
add
push
push
fisubl
or
sub
clc
aad
pop
jae
fisttpl
pop
inc
pop
push
mov
js
mov
adc
mov
xor
xor
sub
clc
inc
push
lahf
jbe
movzwl
push
test
push
push
mov
insb
push
add
adc
push
lea
push
mov
push
cld
push
push
rcll
or
inc
setnp
pop
push
mov
mov
jo
mov
add
add
and
push
dec
xor
add
inc
and
arpl
push
fisttps
xor
ret
shl
mov
sbb
aaa
loop
and
and
mov
sbb
or
push
ds
mov
ret
mull
test
movsl
int3
mov
pop
mov
sbb
inc
push
testl
outsb
aaa
repnz
fnsave
sub
sub
xchg
xchg
adc
jge
sub
mov
xor
fxch
ret
xchg
push
pop
cld
rclb
ss
loope
mov
add
cmpsb
add
cmp
adc
movl
mov
sub
xchg
mov
add
add
lock
fisttpll
das
mov
dec
sub
adc
pop
cli
pop
dec
sub
mov
rorl
arpl
dec
xor
xchg
mov
push
cmp
fisubl
adc
outsb
roll
addl
and
pop
lcall
adcb
out
pop
cmc
xor
aaa
out
mov
je
addr16
movsb
or
js
jbe
xchg
or
xchg
cmpsb
mov
and
nop
jne
or
lock
push
or
sahf
int3
jmp
mov
je
add
jb
jbe
lods
add
sar
mov
fildl
js
push
addl
test
push
insb
pushf
mov
ljmp
pop
add
shl
push
nop
sbb
adc
sbb
mov
iret
sub
add
jl
fldt
pop
sbb
les
bndstx
nop
negb
mov
aaa
adc
xchg
pop
push
inc
enter
jne
xor
les
xor
cmpsl
jle
cltd
add
daa
das
nop
dec
pop
push
adc
fs
mov
ret
push
jnp
mov
adc
mov
cmp
xor
iret
rclb
push
pop
add
cltd
add
sbbb
xlat
mov
orb
xor
mov
ret
inc
test
stos
mov
fwait
cmp
mov
mov
cmpsl
lock
test
jg
sbb
mov
ret
push
sub
movl
shlb
mov
inc
xor
adc
push
inc
adc
push
repnz
mov
add
nop
sbb
je
iret
inc
loopne
push
pop
or
add
mov
mov
jo
push
mov
out
shlb
enter
sbb
fstps
pop
fstpt
and
adc
sbb
mov
sbb
pop
mov
out
inc
or
lcall
or
pop
dec
mov
aam
addb
sub
dec
popf
outsl
fmulp
mov
mov
fwait
or
mov
test
xchg
add
xchg
xchg
pop
mov
mov
add
aaa
lock
jno
sub
lea
xor
test
popf
ljmp
mov
or
xchg
test
and
mov
mov
lock
sub
dec
shll
das
cmp
aad
lea
or
mov
lods
sti
lea
push
or
push
cmpsl
adc
or
nop
xchg
orb
jo
and
imull
cmp
ret
je
ret
or
dec
or
jge
sbb
out
or
inc
ss
or
push
push
or
cmpsl
pop
mov
jge
in
enter
rcrb
cli
add
jl
aad
mov
adc
and
push
or
mov
cmp
mov
je
jnp
or
push
es
data16
mov
adc
jo
cmp
mov
jnp
out
daa
sbb
push
hlt
mov
or
cmp
rcrl
fwait
mov
jo
adc
loop
jne
movsl
dec
fstpt
ja
stos
cli
xor
ret
push
or
pcmpgtw
mov
add
fcoms
pop
fdivrl
push
in
test
add
push
pop
rorb
enter
mov
jbe
xlat
jb
cmp
xchg
sub
lret
popa
repz
addr16
add
lea
fnsave
test
adc
in
mov
stc
fs
cmp
sbb
add
adc
cld
xchg
jmp
jmp
push
sti
nop
cmp
push
xor
call
add
imul
inc
push
and
push
andb
sbb
pop
pushl
rorb
js
xchg
adc
pop
loope
xor
add
test
test
push
int3
dec
cmc
cmp
daa
shlb
push
sub
add
aad
mov
stos
data16
xor
add
mov
jle
add
adc
rorb
mov
push
mov
in
mov
pop
pop
mov
sbb
mov
fwait
lods
les
pop
inc
cmp
cwtl
ja
sbb
jge
mov
negl
push
jecxz
shrl
roll
xor
mov
rorl
or
mov
fsts
mov
lods
sti
repnz
mov
mov
cwtl
add
test
movb
arpl
pop
lcallw
test
fs
lock
or
add
mov
ret
sub
lods
or
nop
cld
in
mov
pushf
mov
cmp
in
add
lahf
cmp
adc
adc
xchg
lock
pop
aaa
ret
ret
jne
and
mov
sbb
mov
pushfw
loopne
dec
popa
mov
inc
adc
cld
adc
inc
add
enter
fdivl
in
incb
into
jbe
jl
sahf
sbb
aaa
mov
cmp
fistl
clc
xor
nop
out
mov
sub
pop
inc
cmp
fistpl
sub
cli
insl
sub
insb
or
sbb
push
hlt
roll
ret
push
and
icebp
adc
push
loop
lcall
js
jo
push
sbb
or
or
adcb
lea
stos
dec
jbe
mov
jg
js
or
mov
and
popl
xchg
inc
out
cmp
ss
mov
call
add
dec
mov
imul
sarb
or
stos
repnz
xchg
fadds
and
add
ja
verw
iret
aas
adc
add
repz
mov
ror
out
lret
test
gs
insl
outsl
mov
or
xchg
add
pop
enter
adc
sbb
cmpsb
loop
andl
sbb
aad
das
add
sbb
movsl
add
or
movq
push
repnz
push
fbstp
xchg
push
gs
mov
jp
and
imul
std
jno
les
xor
mov
sldt
xchg
pushf
lea
jle
jo
add
loopne
cmovg
mov
dec
sahf
clc
insl
sbb
adc
and
adc
xchg
push
jae
loope
in
add
adc
hlt
sub
in
insl
and
jne
or
inc
cmpsl
xchg
push
movsb
mov
inc
loopne
pop
cmp
ss
push
lds
into
adc
jp
loop
in
icebp
aaa
fcmovnu
xor
fs
add
dec
pop
rcrl
mov
xchg
aaa
push
cmpsl
aaa
in
push
jmp
loopne
mov
fstpl
or
adc
or
xchg
and
or
add
add
jne
pop
shlb
loope
pop
mov
inc
je
rol
cmp
aam
leave
clc
daa
dec
repnz
dec
fdiv
add
cmpsb
pop
div
mov
cmp
leave
cmp
idivb
dec
faddl
and
or
pop
test
shrb
pop
push
cmp
push
imul
adc
inc
push
movsb
cwtl
sbb
add
push
xor
lods
xlat
sbb
cmpsb
and
inc
jb
adc
sbb
xor
or
stc
pop
pop
jnp
sahf
xor
or
shlb
sub
mov
jno
lcall
jp
cmpl
push
push
pop
cmp
je
aad
daa
add
or
jle
adc
ss
shll
sbb
fadds
dec
dec
push
shll
or
test
in
rcl
loopne
add
clc
adc
and
ja
ret
inc
lea
and
and
andb
das
cmp
mov
ret
mov
xor
andl
jne
add
stos
ja
sub
nop
xor
test
pop
pop
enter
or
dec
adc
sub
push
movsl
mov
mov
mov
jbe
sar
sarb
jnp
loopne
imul
cs
aam
lods
daa
cmp
lret
das
dec
test
xor
das
jns,pn
shrl
or
push
sub
pop
pusha
sahf
jbe
adc
insl
into
int3
xor
rcl
dec
push
rorb
mov
xor
paddusb
mov
mov
push
xor
sub
adc
adc
addb
xor
xor
sbb
fsubrl
enter
xchg
pop
popf
call
fucomp
jne
xchg
jns
adc
dec
call
adc
pop
mov
jo
loopne
push
or
loopne
or
mov
insb
pop
fldl
mov
out
ljmp
in
add
mov
shlb
pop
scas
lods
pop
xchg
push
mov
mov
gs
add
les
ret
dec
in
out
sbb
push
leave
mov
xor
jp
pop
push
addl
pusha
pop
pushf
les
jle
testb
fadds
incl
lock
push
or
js
shll
rolb
push
jl
push
cwtl
lock
xchg
push
mov
xchg
fst
xor
push
jecxz
and
in
pop
leave
mov
sub
jbe
les
arpl
hlt
jge
cmp
outsl
add
ret
ljmp
cmp
sub
lock
and
or
jae
mov
and
jae
fisttpl
rclb
fldl
sbb
adc
int3
pop
push
or
ja
lcall
insl
jns
sete
push
jae
fldl
mov
and
in
out
es
data16
add
mov
das
add
mov
adc
cmp
inc
les
jb
and
je
cld
leave
ret
mov
inc
loope
or
push
mov
mov
jmp
bound
xorb
imul
xchg
mov
jp
sub
in
mov
sub
mov
jo
icebp
or
dec
sub
daa
pushf
sbb
in
xor
add
scas
push
insb
add
sub
and
push
test
sub
push
dec
xorl
jo
add
add
in
push
iret
dec
push
cmp
add
mov
lds
dec
gs
cmpsl
rclb
dec
sbbb
jns
cmp
adc
cmp
ja
add
dec
fcoms
xor
cmc
add
in
and
rolb
stos
into
or
mov
jbe
adc
shl
clc
out
or
xor
lds
cmp
or
adc
push
fcmovnu
outsb
add
inc
add
sbb
jbe,pn
push
pop
in
jg
add
movzwl
mov
adcb
cmp
push
inc
add
add
fmuls
lds
mov
lret
enter
sub
and
adc
mov
loop
ljmp
inc
jp
lock
imul
xchg
pusha
xchg
mov
loope
push
lret
xor
push
mov
xor
faddl
add
mov
cmp
leave
add
incb
fiadds
adc
pusha
add
push
data16
push
je
cmpb
addr16
jmp
shrl
jnp
ja
push
arpl
mov
dec
loope
clc
je
ljmp
ds
push
push
ret
loopne
stc
sub
lea
push
lea
push
inc
push
movsl
and
enter
cmovs
je
inc
ret
loop
hlt
or
push
sbb
sbb
fstpt
dec
lret
cmp
jl
cmp
dec
hlt
int3
or
jge
cmp
jle
pop
sub
push
jle
roll
shlb
cmp
jne
inc
outsl
testl
cmc
add
push
ss
test
fwait
add
shr
test
out
out
mov
lock
je
sub
push
push
repz
sbb
mov
jmp
fmull
push
fstps
fs
sar
xchg
xchg
jmp
push
push
sahf
bound
in
pop
adc
dec
fwait
or
sbb
int
fldcw
fisttps
xor
push
out
push
dec
or
in
out
or
sub
pop
push
jmp
inc
or
sub
jae
mov
dec
orb
jnp
or
bound
xchg
ret
xchg
and
xor
pop
cmp
ja
pop
add
stos
into
cmpsl
roll
dec
jnp
mov
call
out
cld
inc
mov
inc
add
mov
sub
xchg
test
in
insb
add
mov
jbe
ret
and
cmp
jmp
or
ret
or
neg
mov
les
lods
sub
cmpl
hlt
dec
or
or
inc
push
stos
shr
ljmp
push
push
jb
xchg
add
pusha
push
mov
pushf
aaa
nop
ret
add
dec
add
pop
xchg
popa
sub
jnp
addr16
out
or
out
add
add
add
push
fadds
sbb
lods
pop
repnz
scas
add
adc
inc
and
aaa
loope
add
lcall
movsl
add
test
je
rcll
addl
sbb
push
inc
cmp
popf
inc
pop
repz
hlt
out
pop
daa
popa
xchg
and
adc
imul
mov
shr
push
lock
leave
add
add
or
in
jno
ret
mov
mov
mov
jo
subl
sub
jp
or
cmp
je
or
mov
add
ds
cmp
and
xchg
mov
push
js
loop
add
outsb
jmp
es
dec
jo
jnp
sub
push
dec
add
icebp
mov
addr16
faddp
jmp
jl
ret
lods
push
test
je
shll
mov
pop
jno
cmp
push
push
clc
push
jae
add
sub
orb
outsb
cmp
movsb
icebp
and
push
jl
push
cmp
ja
lea
cs
je
inc
nop
aaa
sub
jo
loopne
mov
inc
shl
jmp
push
sub
ljmp
aaa
inc
dec
jns
pop
sub
pop
sub
lret
xchg
xchg
shlb
or
fcoml
jae
add
mov
lret
adc
mov
sub
mov
inc
add
mov
div
or
dec
or
mov
mov
inc
sbb
cmp
test
das
xchg
fsts
cld
sbb
sarl
adc
lret
push
or
dec
sub
jle
mov
sub
addr16
fwait
or
setae
adc
test
add
cmp
pusha
shlb
or
jns
lods
add
mov
and
adc
xchg
xchg
or
in
ret
aaa
cmp
add
mov
cmp
je
push
push
mov
cltd
add
idivb
lods
nop
sbb
xor
je
pushf
xchg
cwtl
test
test
dec
cmp
repnz
pop
movsb
inc
push
out
mov
sub
sub
sarl
mov
add
fisubrs
clc
pop
in
lods
xchg
test
sbb
das
call
sub
test
add
pop
ret
out
xor
pop
jbe
lcall
and
push
mov
js
cmp
jmp
bound
insl
or
add
test
add
fmull
icebp
mov
sub
pop
or
pop
lret
jp
cli
movl
faddl
jge
mov
push
push
je
inc
insb
fcompl
jno
add
mov
int
inc
pop
icebp
cmc
xor
clc
sub
xor
mov
jbe
jmp
pusha
aam
adc
push
sub
sub
call
std
push
inc
mov
jl
movb
addr16
pop
mov
cmp
test
adc
or
jns
jbe
jne
roll
jnp
jno
dec
mov
fdivs
jle
rcr
sub
or
call
jecxz
sub
or
and
pop
dec
lock
ds
add
in
mov
lods
dec
adc
add
pusha
add
adc
popf
bound
add
into
mov
sub
cmp
fidivl
add
fs
sbb
mov
rcrl
push
mov
sbb
jnp
push
mov
dec
js
jl
sbbl
stos
and
addl
add
ja
fstps
mov
mov
loop
aad
icebp
dec
pop
andl
sbb
mov
inc
movl
add
pop
popf
dec
pop
mov
push
mov
push
pusha
or
sub
cmp
rcll
adc
dec
in
nop
inc
push
and
push
dec
lahf
cmp
sub
add
jmp
sub
clc
mov
sub
ret
push
push
push
sar
repnz
dec
and
xchg
daa
out
push
lahf
test
and
dec
addb
popa
pusha
cmpsl
outsb
test
sub
ljmp
adc
sub
lret
pop
out
test
or
push
jmp
and
mov
add
or
lods
add
pop
movsb
into
loopne
or
inc
or
gs
test
into
repnz
popf
dec
and
cmpsl
add
mov
cmpsl
cmp
sub
adc
andb
cmp
out
pause
xor
fwait
ret
mov
mov
lods
or
rolb
lods
sub
sub
outsl
cld
lea
movsl
sahf
and
jno
sub
jmp
mov
inc
je
and
sub
in
push
and
dec
dec
xor
subl
jns
and
adc
movsl
sub
adc
das
scas
mov
lcall
lds
add
mov
popf
xchg
pop
mov
cmp
iret
mov
insl
imul
pop
shll
out
out
ret
cmc
mov
repz
push
cltd
loop
sbb
or
sbb
ljmp
xor
aad
test
lock
sub
das
test
mov
and
leave
lea
lret
loopne
pop
shl
push
hlt
enter
lret
mov
adc
nop
fmuls
aad
dec
xor
js
dec
pop
or
fadds
inc
adcl
xchg
cmp
cmp
adc
and
pushl
mov
popl
mov
and
sub
jle
dec
and
sub
jecxz
adc
sbb
jge
rolb
dec
push
imul
mov
int3
mov
mov
mov
add
pushf
shll
movsb
pop
mov
sub
cltd
sbb
insl
ss
mov
movsl
pop
mov
loop
mov
cmp
pop
jns
rolb
dec
stos
in
daa
cld
and
inc
or
mov
repnz
fs
mov
or
adc
inc
cld
add
xchg
cmp
bt
leave
mov
test
fs
push
pop
xchg
in
pop
andl
mov
push
sub
stc
mov
inc
lcall
xor
sbb
mov
push
cmp
dec
and
popa
jmp
sti
faddp
call
cmpb
fs
ret
fistl
inc
inc
das
pop
dec
popa
jno
sub
inc
mov
shll
and
xor
mov
in
adc
sub
clc
loopne
or
xor
daa
std
lcall
and
cmp
ret
add
ret
dec
adc
jns
addb
mov
das
mov
loopne
xor
leave
jmp
mov
jle
and
and
jp
aas
dec
das
pushl
xchg
and
test
hlt
mov
adc
adc
adc
add
js
loope
jne
adc
and
daa
sub
sbb
adc
inc
fnstenv
pop
ja
or
or
fisubrs
nop
in
or
cmp
inc
xchg
push
repz
test
add
dec
daa
imul
sub
test
cmp
ja
mov
lcall
mov
call
sbbl
call
into
sarl
in
cmpsl
icebp
pop
fwait
add
fwait
pop
mov
sub
mov
jb
clc
js
sub
jge
je
push
cmpsl
pop
repnz
in
pop
hlt
lea
pushl
pop
lods
mov
pop
mov
sahf
or
jmp
push
scas
cs
mov
rcll
mov
data16
shrl
pop
mov
or
push
xchg
pop
or
push
lcall
xchg
push
cli
or
mov
cmp
xor
push
xlat
enter
push
testl
lods
pusha
sub
mov
pusha
jo
inc
insb
pop
inc
jp
add
mov
mov
test
movb
jge
mov
mov
inc
pop
cmp
cltd
mov
lds
addl
inc
popf
idivb
outsb
push
jbe
sti
sbb
xor
jl
xlat
add
mov
in
dec
mov
es
add
mov
mov
imul
or
cs
notl
je
arpl
int3
push
inc
adc
push
adc
stos
jg
adc
shl
hlt
push
out
sahf
and
loope
push
pop
rolb
ljmp
aam
xor
or
push
ss
add
enter
fmuls
dec
lea
or
rorb
pop
cmp
inc
mov
gs
pop
test
mov
mov
clc
dec
or
inc
jl
test
dec
in
aaa
jne
and
inc
cwtl
cmp
adc
mov
decb
dec
xchg
cmpsb
add
dec
inc
pop
mov
fbstp
out
cld
inc
lock
nop
popf
jb
jo
fwait
aaa
or
call
or
pusha
xlat
hlt
pop
popa
mov
xlat
cwtl
mov
dec
lret
rorl
jnp
rorl
add
xchg
mov
push
andl
xchg
push
xchg
fstp
daa
and
jb
inc
jbe
ror
mov
dec
xor
hlt
sub
leave
in
sbbb
mov
sbb
dec
jl
lock
push
imul
pushf
popa
push
js
push
call
dec
xor
fs
popa
and
rorb
adc
adc
xchg
nop
cmpl
push
adc
enter
adc
mov
adc
mov
sbb
insl
mov
es
jl
icebp
and
fdivs
test
ret
push
dec
imul
sub
dec
mov
cmpb
jge
sahf
adc
mov
decl
insb
mov
jnp
orl
push
push
mov
inc
je
scas
mov
add
mov
ss
inc
pop
cmp
xor
cmp
jne
push
ljmp
cmp
mov
movsl
adc
or
mov
fimull
xor
add
aad
cld
and
jne
cmp
lea
and
nop
pop
add
icebp
add
dec
lock
or
mov
andl
push
add
movsl
lds
adc
test
sbb
inc
lret
or
adc
stc
xchg
fdivrs
gs
cmp
pushf
adc
jle
cmp
call
adc
rorl
out
rclb
xor
in
pop
stos
hlt
mov
enter
std
cmc
movsb
push
or
sub
push
push
clc
loope
xchg
out
add
test
cwtl
inc
jl
jmp
fdivr
jge
or
aas
xlat
outsl
fiaddl
rclb
dec
insb
push
push
rcl
jmp
mov
insb
mov
cmova
add
push
roll
je
xchg
adc
push
das
or
leave
push
mov
or
and
jmp
in
insl
mov
movsl
jge
aam
lock
push
pushl
imul
push
sub
mov
je
adc
add
add
pop
insl
fdivl
incl
push
lods
lods
or
xor
xchg
adc
mov
inc
ljmp
and
in
pop
adc
adc
enter
jmp
orl
mov
mov
and
je
enter
test
dec
and
xor
orb
faddl
cmpsl
push
inc
dec
cmp
ss
and
mov
add
insb
movsl
arpl
push
mov
es
pop
inc
popf
sbb
in
sbb
leave
jb
ret
adc
sbb
sbb
push
add
cmp
push
je
adc
inc
inc
xor
mov
mov
stos
cmp
dec
pusha
fnsave
lea
pop
mov
push
test
lret
mov
js
mov
dec
add
inc
add
add
dec
sub
push
xchg
popa
das
jns
adc
fcompl
das
push
or
cmp
hlt
inc
push
int
scas
into
incb
pop
xlat
dec
in
jno
lea
lea
xor
mov
and
xor
and
imul
mov
imul
andl
fimuls
mov
push
mov
mov
pop
mov
sarb
stos
pop
push
add
mov
push
fucom
sbb
js
movsl
mov
daa
or
push
cmp
xlat
xchg
cmpsl
imul
xorl
mov
imul
add
adc
subb
adc
outsb
sbb
scas
mov
std
or
or
xlat
jle
paddusw
mov
push
jo
repz
cmp
or
call
jmp
inc
or
std
mov
shlb
pop
jo
stc
int
xor
fcomps
mov
dec
and
and
xchg
out
das
leave
inc
popa
xchg
call
cmpl
je
adc
aam
lds
cmpsl
loope
xchg
cmpsl
jmp
and
pop
push
or
pop
loopne
dec
pop
lcall
shll
cmp
rcr
rolb
dec
xlat
scas
sub
popf
jb
adc
sbb
ret
mov
test
sbb
fwait
sbb
push
movl
dec
rolb
int3
inc
sbb
sbb
cmp
push
cmp
sbb
mov
imul
and
add
fwait
mov
sbb
fiadds
xor
fldt
aaa
mov
jno
aad
adc
xchg
cmp
add
shl
jno
shlb
decb
je
dec
jne
pusha
mov
mov
clc
adc
pushf
xchg
shr
and
jmp
adc
dec
push
sbb
push
dec
roll
leave
nop
ficoml
int3
pop
outsb
loopne
movsl
aam
cmp
je
iret
testb
inc
sbb
push
das
xchg
sub
mov
xchg
jge
xorl
mov
jle
or
inc
sub
xchg
daa
xor
sti
pop
push
mov
mov
lea
cli
jb
dec
inc
pop
or
or
sbb
push
test
mov
icebp
jge
cmp
mov
push
pushl
cmpsb
aas
sub
orl
push
sub
pop
and
mov
pop
pop
sub
or
test
jge
jmp
pop
push
repnz
mov
pop
adc
pop
fs
sbb
push
mov
adc
jg
dec
adcl
lock
and
push
incl
inc
push
and
lahf
loopne
mov
ds
je
add
dec
push
in
mov
jge
dec
inc
and
and
push
adc
cmp
push
aam
sub
outsb
lock
and
jl
pushf
add
sub
inc
lea
push
enter
push
cmp
mov
or
lods
xor
push
in
scas
sub
test
movsb
push
cmp
popa
pop
adc
push
xchg
into
cmc
jecxz
inc
cld
stos
shr
and
mov
je
aaa
jns
rcrl
test
jmp
and
xchg
push
sub
push
rolb
sbb
mov
fs
xor
cwtl
test
pop
sbb
dec
jmp
add
lcall
ffree
pusha
xor
bound
add
jle
xlat
rcr
incb
or
mov
mov
ja
mov
adc
iret
cmc
ljmp
sarb
aad
or
jne
sbb
push
sub
jbe
cmp
push
sbb
sqrtps
mov
mov
int
imul
jl
jmp
cmpsb
ss
stos
lods
movsb
adc
xchg
imul
push
bound
in
jbe
les
pop
pop
test
or
sub
fisubl
mov
inc
xor
int
faddl
push
push
and
sub
jbe
imul
test
roll
push
imul
imul
push
push
mov
pop
mov
mov
movsb
and
dec
aas
bound
push
dec
pusha
xchg
adc
mov
nop
sbb
and
ret
test
cmp
jge
mov
adc
mov
jno
inc
cmp
jl
xchg
movl
nop
out
dec
add
jno
lods
inc
ja
xor
addr16
lods
pushf
sub
mov
aam
mov
test
dec
jo
enter
insb
mov
xor
xchg
mov
jo
rorb
adc
mov
mov
std
xchg
sbb
cmp
push
or
sub
xchg
xchg
sub
fs
mov
xor
mov
or
pop
jae
inc
bound
fistpll
mov
lock
lea
sbb
repz
add
popf
mov
call
cmp
cmpb
je
imul
popf
int
cmp
inc
movsl
jo
andl
lcall
lods
or
or
cmp
mov
arpl
xchg
adc
or
or
cmc
addl
xchg
jbe
push
pop
or
mov
movl
adc
sbb
xor
or
outsb
lahf
rorb
lret
mov
and
shlb
cli
pushf
loop
push
daa
inc
call
rol
xchg
push
add
add
push
jae
stos
add
and
addr16
and
aam
inc
dec
aaa
sbbb
xchg
fmull
inc
inc
mov
cmp
fistpl
sub
push
mov
sbb
mov
mov
subl
int
pop
out
addl
adc
push
in
je
mov
test
cmp
sbb
outsb
sub
dec
inc
push
jns
push
cmp
cs
jecxz
lcall
xor
movsl
arpl
sub
cli
dec
inc
jbe
pop
jne
dec
cwtl
sbb
js
xchg
cli
popf
xor
mov
add
sub
and
aas
cli
sbb
mov
movsl
cmp
jae
cld
pop
cltd
lods
sbb
shrb
push
cmp
sub
outsl
pop
xor
lock
repnz
xlat
sub
mov
xchg
and
out
sarb
cmp
lods
loope
adcl
mov
test
push
notl
sbb
scas
pop
insb
xor
loopne
sub
inc
xor
fstpt
rclb
repnz
add
aas
dec
cwtl
stos
adc
jno
ds
jg
sub
out
jne
or
inc
lods
shrb
filds
mov
fstl
fs
and
push
imul
cltd
ss
mov
ds
in
addl
mov
pop
mov
push
out
cmp
jge
fstps
movsb
sbb
sub
jo
outsb
xchg
cmp
stc
add
test
add
inc
cmp
out
sbb
add
in
and
sarl
lcall
inc
mov
sbb
test
mov
dec
jl
dec
push
loop
xchg
mov
leave
insl
sub
jecxz
jmp
add
imul
pop
rcll
sbb
mov
xchg
cmc
add
adc
pop
loopne
inc
subl
pop
add
loopne
pop
orl
sub
xor
shr
sbb
and
pop
xchg
int
inc
clc
and
or
xchg
in
cmp
cmp
adc
cmp
or
push
test
add
sti
dec
in
dec
pop
add
shll
aas
movl
repnz
inc
pop
mov
xchg
add
mov
inc
push
scas
popf
push
dec
push
xchg
adcb
andl
and
dec
sbb
in
lret
pop
push
imul
dec
ss
push
sub
sbb
and
dec
mov
lods
stos
xor
push
fcmove
mov
or
inc
cld
or
loopne
pusha
mov
imul
sub
xor
inc
cmp
jmp
or
jnp
dec
sub
sub
fcoml
mov
cld
fstps
rorb
fwait
cltd
adcl
pop
and
pop
or
mov
jo
insl
cwtl
subl
mov
out
enter
adc
nop
out
xchg
dec
sub
das
adc
nop
subb
xor
lods
movsb
cltd
xor
xchg
dec
mov
jb
xor
xor
xor
and
shll
xchg
or
popf
pop
nop
add
push
in
stos
sbb
or
dec
pushf
inc
aaa
ss
test
mov
cmp
je
mov
mov
xchg
adc
cmp
stos
adc
test
mov
mov
cwtl
xlat
dec
xchg
push
cmp
inc
sub
mov
cwtl
movsb
outsl
dec
inc
cmp
jne
lea
dec
or
stc
push
roll
or
gs
inc
divl
sti
xor
adc
adc
xchg
outsl
mov
rorb
sub
or
sub
mov
jmp
pop
roll
xchg
testb
leave
dec
repz
sbb
sub
mov
fisttpll
add
push
xor
shrb
sbb
repnz
xor
push
iret
jmp
cmp
mov
or
pop
pop
inc
push
and
or
sub
cltd
xor
imul
mov
sbb
or
mov
cmp
popf
or
testl
mov
sti
sub
fwait
adc
adc
sbb
cmp
push
mov
inc
frstor
sahf
mov
shll
pop
mov
cmp
cmp
ljmp
scas
cmpl
daa
xchg
popa
xor
fcoml
lea
dec
xchg
jnp
repz
repnz
dec
jno
sahf
xlat
add
scas
lock
fildl
divb
pop
or
sbb
cmp
push
add
jnp
sub
mov
out
cmp
iret
xor
mov
dec
push
dec
push
addr16
mov
mov
jp
adc
inc
je
and
in
mov
mov
jne,pn
lock
or
add
orl
xlat
nop
xor
mov
sub
add
mov
lea
push
icebp
jb
enter
xchg
lods
cwtl
cmpsl
movsl
xchg
and
imul
lret
in
fadds
or
jne
push
popf
in
xchg
out
orl
cmp
xchg
add
scas
sahf
aam
lret
xor
cmp
adc
adc
outsl
push
cmp
pop
aam
int
mov
pop
jge
lods
cmp
ds
in
out
leave
mov
pop
cs
push
cmpsb
aas
popa
adc
ss
adc
mov
jae
mov
xorps
dec
scas
mov
mov
push
and
push
xor
mov
mov
adcl
sub
inc
dec
aam
cmp
pop
icebp
push
cmp
adc
insl
cmp
stos
push
addr16
xchg
jo
ret
das
jno
lds
cmpsl
jle
enter
and
in
sub
cmp
or
inc
out
lea
and
test
int
and
testb
and
leave
sbb
xchg
push
sub
hlt
pop
inc
push
sbb
pop
cltd
fs
push
mov
and
and
pop
inc
pop
lods
push
iret
das
or
sbb
and
mov
dec
push
jne
and
inc
cmp
and
js
mov
dec
rcll
daa
test
movsl
xchg
xchg
sub
add
sub
push
stos
sub
sub
jb
cmp
sub
sub
mov
sub
enter
jo
das
ret
lcall
pop
pop
mov
mov
xchg
stos
mov
punpckhwd
push
sbb
inc
dec
mov
push
leave
and
xor
lods
mov
xor
push
addl
loopne
pop
and
outsl
les
dec
mov
movsl
xor
punpckldq
push
push
mov
pop
rorb
pop
or
or
inc
or
notl
pusha
lea
jnp
push
adc
and
add
rorb
add
adc
xchg
xor
mov
inc
inc
loopne
out
fprem1
adc
imul
add
push
inc
ret
rolb
loope
or
or
nop
sbb
std
dec
fsubs
add
add
mov
inc
jp
pop
repz
jnp
or
and
popf
out
cmp
cmp
mov
in
push
jne
icebp
xor
push
test
mov
test
pop
mov
fistpl
call
loope
mov
xchg
mov
aaa
ror
loop
inc
sbb
into
or
push
fcomps
jl
sbbb
xor
in
adc
xor
cmp
cli
jne
test
push
out
add
mov
outsb
lock
out
mov
push
ja
imul
sub
mov
aaa
mov
out
test
push
pop
push
xor
jo
inc
pop
or
sub
incb
push
data16
inc
jnp
rorb
out
aam
aas
dec
clc
sbb
sbb
lods
rcll
or
fabs
adc
ret
sbb
es
mov
jo
ret
mov
ret
adcl
test
inc
fistpll
cmp
sub
fnsave
xlat
adc
hlt
add
mov
je
push
and
pop
aaa
fwait
das
add
int3
mov
pop
pop
xchg
jo
fisttpl
das
cmp
testb
add
cmp
add
ja
fisttps
test
je
cmp
cmc
int3
stc
xor
adc
popa
call
pop
adcl
lods
jp
insb
mov
cmp
addr16
es
pop
aad
push
xchg
movsb
jb
stos
andl
inc
inc
sub
or
xchg
pop
mov
rol
mov
inc
mov
sbb
les
daa
xlat
into
call
mov
bound
adc
push
pushl
inc
pop
orl
cmp
xorl
mov
inc
notl
pushl
and
jg
cmpb
fmuls
push
inc
faddp
cmpsl
adc
sbb
sub
cmp
repz
mov
imul
sub
ret
add
add
frstor
test
sub
daa
stc
or
and
es
aas
sbb
cmpl
jne
push
loopne
sti
mov
dec
mov
jge
mov
mov
jle
les
jne
or
mov
add
aaa
add
aaa
add
adc
popa
inc
push
inc
sbb
fstpt
andl
add
cli
pop
movl
add
fbld
mov
xchg
sahf
and
jge
adc
dec
jne
roll
jns
addl
pop
aad
adc
nop
or
jns
rorl
loop
add
or
int3
adc
flds
hlt
xor
add
sub
imul
pop
xor
pop
loope
cmp
jle
cs
jmp
jne
movlps
push
xor
subb
lea
mov
rolb
xchg
iret
and
gs
int
out
in
les
push
dec
in
and
insb
pop
cmpsb
or
pop
inc
in
je
mov
dec
or
jns
push
mov
push
inc
inc
dec
push
inc
jmp
mov
pushf
shrb
bound
popa
dec
xor
aaa
xor
adc
and
dec
mov
neg
adc
adcl
jmp
sub
xor
push
enter
mov
jg
adc
or
add
and
pop
movsb
sbb
stos
mov
push
lcall
std
and
in
mov
mov
or
mov
pop
sbb
mov
pop
sub
mov
mov
adc
mov
nop
les
rcr
cwtl
or
and
xor
call
dec
xor
xchg
ret
push
mov
loope
mov
sbb
jge
das
jmp
orb
xor
faddp
or
push
jle
clc
test
pop
or
or
gs
mov
jnp
jnp
mov
cmpsl
jle
inc
and
clc
jg
adc
cmp
jle
cld
jae
inc
add
outsb
mov
pop
outsb
loope
fcomps
xor
add
sarb
js
push
cmp
or
xor
loope
sub
and
cwtl
js
loopne
dec
add
call
push
add
or
mov
jmp
add
ret
loope
and
xadd
cmc
icebp
dec
sub
sub
stc
add
or
in
shrb
dec
sbb
sub
add
mov
push
xor
rcrb
mov
stos
xor
add
pop
push
ja
pop
jbe
adc
sbb
pop
stos
lret
lar
xor
mov
sub
push
adc
add
lea
popf
arpl
shrb
sbb
ret
movsl
push
sbbb
test
aam
movsb
cmpsb
add
jp
pop
mov
push
mov
mov
dec
xchg
xchg
fistl
cmp
or
inc
push
xchg
or
mov
or
add
loopne
pop
inc
adcb
sti
in
push
fldl
push
xchg
lea
xor
or
movsl
wrmsr
imul
gs
push
push
adc
andl
add
sbb
mov
and
lahf
sbb
xor
mov
inc
inc
jo
loopne
dec
out
adc
add
or
or
cmp
int3
add
not
cmp
pushf
xor
push
add
push
sbb
pop
inc
mov
jbe
add
jne
inc
popl
and
push
pop
in
and
adc
in
in
lock
addl
ret
sbb
divl
inc
test
mov
stos
inc
inc
mov
inc
mov
enter
cmp
add
cmp
mov
inc
lea
inc
dec
pop
jo
mov
inc
xor
ja
es
movsl
aas
popf
adc
adc
push
mov
mov
xor
notl
sub
add
and
add
xchg
jo
add
add
popa
sbb
lds
in
popf
pop
push
hlt
mov
les
pusha
mov
dec
hlt
mov
fisubrl
push
fs
cmp
jae
push
mov
push
xor
mov
mov
mov
mov
sbb
pop
or
je
cmp
sub
sahf
incl
das
inc
loopne
sub
jo
sbb
push
fdivr
push
inc
addr16
js
push
stc
push
cmp
rorl
inc
cmp
addb
or
loope
mov
pop
or
scas
and
lea
or
xor
leave
dec
adc
push
sub
inc
repnz
or
movsb
cltd
nop
add
test
sub
dec
sbb
jecxz
jne
adc
xor
xchg
add
das
hlt
out
push
jmp
jmp
sub
inc
loop
hlt
imul
in
cmp
ds
mov
sbb
lods
add
mov
dec
sbbl
das
jmp
cmp
jge
das
pop
dec
sbb
bound
mov
or
int
pop
inc
or
orb
hlt
sbb
or
lea
add
pop
cmpsb
xchg
pop
or
in
xor
push
mov
test
clc
push
xchg
mov
cmp
cli
cmp
adc
in
sti
push
pop
xor
push
inc
or
adc
mov
push
or
push
push
add
inc
xchg
lcall
mov
push
xchg
dec
xor
int3
add
adc
iret
and
cli
pop
dec
and
add
inc
add
pop
add
mov
ret
aad
xor
inc
shll
cli
dec
rcr
lret
pop
xorl
fs
loopne
movsb
push
out
push
push
addr16
sbb
jle
sti
mov
lea
push
mov
add
ja
dec
cmp
add
inc
icebp
imul
dec
add
mov
insb
push
add
insb
push
xorl
in
xchg
popf
enter
insb
jo
fwait
mov
sub
orl
sub
sub
adc
pop
imul
xchg
or
mov
sarb
sbbl
add
lods
sbb
js
pop
outsb
mov
cmp
add
loopne
push
shll
xorl
add
insb
push
sbb
aas
sbb
mov
mov
pop
ret
add
jmp
xchg
mov
insl
sbb
push
fldt
mov
push
add
cmp
test
call
mov
cmp
nop
cmpsb
sti
mov
push
sbb
xor
cmp
fisttps
and
push
leave
sbb
jns
pop
call
cmp
repz
movsb
fisttpll
dec
fs
add
dec
movsb
sbb
nop
sbb
loopne
dec
push
es
nop
adc
jge
sbb
popa
and
stc
mov
pop
aam
mov
and
daa
ljmp
jge
lods
pop
daa
adc
add
mov
add
inc
inc
repz
je
in
add
js
add
jae
test
popf
xorb
jno
rorl
or
push
sub
pmulhuw
ss
mov
jl
es
imul
inc
xchg
push
mov
pop
pop
add
xchg
adc
and
lock
add
or
addb
roll
mov
andb
add
movb
sahf
subl
mov
adc
mov
inc
ds
adc
jmp
scas
loopne
lods
iret
push
fsincos
sub
push
jecxz
out
sub
adc
cmpb
and
xchg
jecxz
popa
cltd
mov
push
enter
ja
in
push
lods
dec
out
lods
imul
cmp
cmpsb
add
ret
movsb
sbb
mov
pushf
js
dec
cmp
test
mov
cmp
orl
dec
frstor
rorl
jo
mov
pop
ret
sbb
inc
jmp
mov
and
push
push
xor
jo
sbb
pop
jno
pop
rolb
sbb
mov
cmp
add
rorb
xor
cmp
xor
xchg
rorb
add
mov
cmpsb
fists
sbb
push
enter
lea
xchg
arpl
jne
movsbw
sbb
cmp
mov
shlb
stos
or
je
adc
dec
in
or
fwait
dec
inc
push
arpl
mov
xor
mov
hlt
push
inc
xchg
sub
mov
add
pop
dec
cmp
adc
and
fmull
sbb
cs
mov
aam
pop
insl
movl
jns
or
imul
and
jns
std
jbe
aas
ljmp
inc
shl
add
bound
fwait
ja
lea
repz
add
leave
sbb
xor
add
adc
add
cmp
inc
mov
push
popf
or
mov
iret
cmp
gs
fwait
jmp
push
sub
jbe
jnp
dec
sbb
push
and
lock
into
dec
cmp
push
je
inc
and
and
push
or
push
pop
mov
push
and
insl
push
faddl
loope
lods
mov
xchg
inc
inc
loope
insb
outsl
jecxz
xchg
pushl
push
pop
or
imul
ret
gs
or
das
ret
mov
imul
or
inc
mov
lea
in
push
sbb
imul
push
and
or
sbbb
sbb
test
inc
cwtl
push
in
and
test
insb
ficoms
jl
fldt
adc
pop
call
jno
xchg
das
push
fcmovnbe
hlt
mov
icebp
outsb
loope
mov
ret
mov
adc
dec
notl
add
icebp
mov
cmpsb
arpl
movsb
sbb
xlat
inc
test
js
inc
in
xchg
lea
or
xor
or
push
inc
cmc
mov
sub
leave
sbbl
cmpsb
daa
or
cmp
popa
or
lea
add
or
or
push
sub
leave
cld
cmp
xor
xor
add
test
les
push
push
loope
sarl
fnstenv
lods
lock
mov
xor
pop
sarb
shll
psrad
nop
nop
aam
in
lret
jb
rolb
cmp
or
dec
or
push
mov
movl
sbb
gs
pop
mov
mov
mov
pop
pop
gs
ret
ja
xor
nop
cmp
dec
adcb
and
push
bswap
in
testb
test
jbe
test
inc
cmp
adc
and
push
imul
jae
insb
add
jno
std
adc
clc
adc
cmpsb
cmovno
jne
add
orb
fisubs
loope
fs
inc
sub
test
out
nop
sub
inc
pop
inc
dec
rolb
sbb
push
int3
sarb
jg
addl
add
sub
popw
and
lock
loopne
clc
add
jne
jbe
addr16
fisubrs
sti
gs
loopne
in
in
adc
movsl
jo
xor
jne
movsl
add
mov
shll
and
mov
or
add
and
nop
movl
adc
pop
mov
hlt
jo
mov
mov
sub
xchg
mov
es
clc
sub
mov
cmpsl
mov
push
add
push
push
push
push
popa
in
xor
or
ret
xor
ljmp
imul
xchg
mov
shl
cmp
cmp
inc
cwtl
imul
cmp
jne
addl
adc
test
xor
xchg
inc
bound
leave
es
xor
add
and
adc
mov
mov
scas
jo
xor
xor
jnp
dec
xor
inc
mov
mov
xor
fcomps
nop
push
ds
ds
scas
test
pop
sbb
pop
test
xchg
pop
and
mov
cmp
movsl
mov
xor
pushf
lahf
pushf
jmp
push
inc
cwtl
cmpsl
popf
add
lcall
adc
xchg
pushf
negb
incl
divl
cwtl
cld
mov
lods
fnstsw
mov
adc
mov
stc
or
addl
js
add
xor
jo
jp
xchg
xchg
jbe
icebp
mov
mov
cmpb
dec
cli
and
inc
mov
xor
add
loopne
dec
sbb
adc
xchg
ss
iret
rol
and
cmp
push
ret
mov
xchg
popa
add
push
dec
clc
or
inc
and
add
testb
add
movsb
ret
add
enter
xor
stos
xor
mov
scas
jo
xchg
adc
pop
enter
mov
div
jbe
mov
xchg
push
shll
cmpsb
jnp
or
popa
pushf
out
sbb
pop
movsb
adc
les
data16
sub
sbb
mov
cmp
jb
cmp
clc
jbe
cmp
fwait
cmp
insl
test
outsb
inc
jne
inc
sti
add
clc
jo
or
jnp
add
in
popa
loopne
std
push
push
push
xchg
sbb
mov
xchg
add
mov
fs
dec
mov
mov
mov
jle
sbb
xor
jg
xor
mov
push
push
jo
add
lods
cmp
xor
insb
sub
je
fmull
sub
inc
lods
dec
lahf
lahf
or
or
adc
xor
dec
fcomps
push
jg
xlat
les
xchg
jno
cld
in
sti
pop
and
enter
and
inc
pop
out
jmp
and
stos
lods
test
push
jge
mov
pop
dec
add
jnp
cmp
push
dec
push
ss
push
sub
fstpl
pop
lods
pop
dec
add
sbbl
cmpsl
sub
mov
adc
subb
int3
je
enter
push
bound
push
cmp
adc
mov
cld
gs
jne
dec
sub
xor
jo
push
testl
or
or
or
inc
push
data16
dec
cmpsl
push
push
cmp
insb
xor
cmpsl
mov
or
jge
movsl
add
adc
lcall
lea
xchg
xchg
lcall
push
test
and
pusha
ret
inc
mov
and
rorl
mov
mov
or
inc
nop
lret
mov
mov
mov
sbb
xor
and
dec
mov
in
pop
mov
sub
xchg
into
out
mov
push
jnp
scas
adc
push
jno
push
shll
adc
bound
cmp
loopne
cmp
mov
pop
push
loopne
or
lea
int
pop
test
or
rcrl
mov
insb
lea
lret
mov
jo
test
or
dec
loopne
sarb
jle
xchg
and
adc
mov
push
insl
sar
leave
cmpw
sbb
cmpb
fcmovnbe
cmp
push
add
leave
sar
ss
push
pop
mov
add
sar
popf
test
scas
nop
push
je
nop
mov
mov
jns
adc
xor
pop
jns
add
push
xor
in
shlb
add
iret
inc
lcall
jne
dec
dec
push
add
add
sub
jl
sub
jmp
jnp
fistpl
aad
lcall
dec
movzwl
cmpl
push
adc
adc
pushf
rorl
and
add
add
sbb
pop
fiaddl
jmp
sbb
add
or
add
fimull
and
fnsave
sbb
jo
ret
inc
addl
jo
and
aad
push
pcmpgtw
sbb
sub
fstps
mov
fs
pop
add
mov
cmp
jne
jb
fs
sbb
add
aam
mov
add
pop
push
pop
insb
inc
push
in
dec
xor
jo
addl
cmp
lock
adc
ret
jmp
cmp
out
pusha
pop
adc
sub
mov
add
je
pop
rclb
push
imul
ffree
jo
add
pop
jge
sbb
or
add
inc
push
test
xor
jmp
adc
xlat
or
push
xchg
sub
push
mov
scas
enter
push
pop
jne
or
stc
cmp
push
or
adc
call
dec
xor
add
xor
and
test
sbb
out
push
ror
and
xor
and
ffree
mov
mov
sbb
add
xchg
jecxz
inc
iret
loope
movsb
mov
shll
insl
sub
cmpl
mov
mov
sub
push
add
mov
jb
enter
sbb
and
and
mov
faddp
sub
sbb
dec
mov
sti
enter
dec
push
test
push
sbb
or
add
loop
add
cld
dec
cmp
insl
add
sar
pop
inc
or
cwtl
push
pop
dec
jl
es
testb
jns
lret
jne
das
inc
mov
jmp
and
movsb
das
add
sub
jmp
stos
ret
test
int
xchg
stos
das
mov
jb
mov
subl
sbb
or
hlt
mov
popf
push
inc
lea
hlt
mov
mov
lret
mov
dec
mov
jne
imul
push
sub
fwait
add
fnstsw
xchg
add
je
push
and
jne
jge
mov
adc
and
icebp
or
pop
push
pop
inc
cmpsb
adc
in
aaa
adc
fldl
xor
out
push
std
dec
fdivrs
pusha
loopne
aaa
mov
jge
out
inc
icebp
jmp
mov
jge
mov
popa
rolb
add
jbe
roll
dec
lods
inc
mov
insb
mov
lock
mov
and
or
iret
adc
lods
or
and
stos
and
and
jne
xor
xor
adc
lahf
in
repnz
cltd
std
enter
jecxz
jmp
scas
xor
push
sub
pop
inc
push
sbb
lret
or
and
ja
das
mov
fst
jae
push
mov
jecxz
push
mov
js
jb
rclb
aaa
out
fs
push
outsb
lret
lea
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
lahf
adc
pop
adc
cltd
stos
dec
fbstp
mov
pop
and
mov
in
inc
xlat
push
dec
jge
inc
push
or
and
inc
scas
mov
pusha
adcl
mov
add
aad
adc
xchg
xor
inc
add
xchg
icebp
ss
add
pop
in
daa
add
or
in
sub
xchg
adc
mov
aaa
loop
dec
fisubs
adc
mov
inc
push
out
cmp
pop
or
pop
test
mov
dec
aas
mov
test
push
dec
sub
push
or
ret
inc
add
lcall
out
sbb
jbe
frstor
jmp
mov
out
jl
sub
pop
dec
mov
inc
shlb
dec
inc
push
enter
dec
cmp
test
divl
sub
movsb
fwait
repz
call
inc
add
sbb
popa
sub
scas
mov
subl
push
sahf
mov
test
lds
and
adc
push
pop
fwait
hlt
dec
xchg
fidivs
test
jbe
dec
mov
lea
mov
dec
fdivrp
push
sbbb
push
pop
pop
movsb
xor
inc
ss
ret
xor
pop
sbb
cmp
insl
loopne
add
pop
cmp
dec
sbb
jp
cmp
aaa
lret
sub
cmp
adc
lods
dec
add
test
lods
adc
and
inc
add
inc
xchg
lahf
movsl
pop
pusha
sbb
adc
lret
or
clc
repnz
pcmpgtw
fwait
add
inc
mov
pop
add
call
aaa
aam
jbe
ljmp
adc
jle
movl
sbb
loopne
jmp
enter
mov
movsl
cmp
outsb
mov
movsl
sbb
add
xor
sub
ja
adc
subl
add
enter
xchg
or
inc
inc
add
jecxz
stos
xor
sbb
ret
jg
icebp
jmp
add
pop
clc
and
or
lea
xchg
je
lcall
add
dec
or
add
push
push
ja
or
jne
cmp
sbb
push
and
sbb
es
or
clc
push
xor
cmp
mov
lahf
xor
jecxz
clc
cmpsb
cld
hlt
adc
add
xor
jmp
gs
adc
mov
mov
nop
pushf
push
push
mov
push
push
pop
repz
mov
addr16
and
pop
add
lods
popf
and
sbb
vprotq
inc
cld
push
or
cmp
jbe
pop
outsl
jnp
adc
cmp
jmp
push
jg
lods
les
insl
mov
xor
out
pop
test
xchg
icebp
mov
push
in
pop
popa
test
ds
lock
push
out
test
test
xor
inc
xchg
icebp
dec
sbb
dec
and
orb
add
idivl
xchg
mov
push
mov
nop
xor
and
jmp
cmp
jne
xor
test
out
scas
jmp
ret
mov
clc
mov
and
inc
lcall
xchg
push
sbb
pop
inc
cwtl
int
jg
call
seto
neg
or
push
inc
cmp
push
jae
rcrb
adc
adc
ret
mov
ror
sub
test
popf
mov
loope
movsb
sbb
add
xchg
shrl
shrl
pusha
in
pop
xor
jmp
add
jne
push
movsb
das
pushf
sub
shlb
je
loopne
xchg
into
jne
push
push
push
jmp
and
fisubrl
fisubl
aam
cmp
or
ret
mov
mov
arpl
lcall
or
clc
aaa
add
mov
lret
je
mov
sbb
mull
mov
xchg
adc
lret
out
rorb
jecxz
inc
xor
ljmp
push
insl
add
mov
pop
sub
cmp
push
and
add
jno
ja
push
jno
test
sysret
ja
jo
and
shrb
in
push
clc
pushf
inc
lods
js
popf
and
lock
and
adc
inc
or
gs
cmp
add
adc
dec
sbb
and
adc
cmp
sub
pushf
pop
add
add
insb
or
rorl
dec
add
dec
jp
fwait
les
cli
and
sarb
cwtl
sbb
adc
lret
dec
push
push
and
sahf
mov
sub
outsl
pop
sbb
mov
sbb
add
cld
fildl
fstps
dec
mov
flds
fcomp
filds
add
sbb
push
sbb
xlat
mov
in
jae
xchg
and
xchg
pop
test
dec
inc
pop
addr16
xchg
les
or
pop
mull
push
xchg
insb
test
dec
daa
dec
mov
test
push
xor
or
and
sub
pop
sub
insl
addb
add
push
dec
mov
add
xor
push
stos
test
fs
add
jne
loop
les
sbb
mov
loope
lea
mov
mov
add
inc
mov
cmp
jg
add
lea
add
test
and
pop
inc
add
sbb
lea
jae
leave
rorl
or
xor
or
dec
mov
xchg
sbb
mov
xchg
pop
mov
push
and
mov
sbb
and
or
fs
idivb
push
or
xchg
adc
or
xchg
mov
popf
jg
dec
add
adc
or
insl
and
lret
or
jo
xchg
gs
faddl
popa
adc
fsubl
pusha
mov
xor
push
sub
jb
mov
test
add
sub
mov
lldt
pop
pop
mov
lret
pop
mov
or
jno
loopne
cmp
and
or
inc
dec
sbb
add
dec
and
xchg
jo
inc
or
dec
dec
xchg
jg
cmpsb
xorb
adc
addr16
push
push
nop
adc
popf
es
sbb
inc
nop
and
mov
xor
sbb
mov
stos
mov
addr16
pop
lahf
mov
cltd
push
loope
sbb
sub
adc
xorl
aad
sarl
inc
pop
rcr
jmp
call
dec
cmp
adc
sbb
push
movsb
jmp
mov
sub
sub
clc
imull
or
and
movsl
mov
int
daa
sbb
shrl
pop
mov
mov
pop
mov
fists
icebp
push
dec
xchg
pop
fcoml
cmp
movsl
pop
cmpsl
daa
xchg
xchg
or
movsb
mov
or
pop
xor
push
ret
loope
mov
dec
jmp
scas
add
movsl
sbb
ret
pop
das
mov
push
dec
scas
lret
and
loop
or
ja
inc
psubw
and
ret
xorl
in
lsl
lea
push
movl
and
mov
cmp
cs
mov
xchg
test
and
sub
sbb
add
xchg
jge
and
jp
popf
cld
icebp
mov
sub
and
and
stos
in
repz
cmp
sub
mov
scas
and
mov
mov
xor
pusha
xchg
and
push
sub
or
aas
fs
shr
cmp
adc
test
adc
insl
popa
clc
add
sbb
and
adc
mov
xchg
dec
test
cmp
std
nop
xorl
scas
rorl
mov
in
lea
pushf
addl
add
pop
xchg
ficoms
adc
icebp
push
xchg
mov
mov
das
lret
jne
add
daa
xor
or
dec
or
lret
adc
test
cmp
and
add
add
xor
sub
pop
cmp
pusha
add
sbb
mov
insb
decl
adc
mov
sub
or
stos
mov
dec
push
mov
jbe
fcoml
mov
push
loopne
loopne
xchg
xor
and
xor
test
sbb
test
or
pop
mov
and
push
pop
dec
mov
mov
and
push
push
aaa
movsb
add
push
adc
sbb
pop
xchg
das
aaa
jb
add
in
and
pop
movsb
dec
popl
nop
fdivr
stos
cmpsl
movsb
leave
cmp
fwait
test
and
jnp
dec
inc
jbe
lods
outsl
mov
or
jno
cmp
shll
xor
dec
mov
push
faddl
sahf
push
lods
addr16
fcoms
lods
add
fldl
sbb
push
inc
mov
lods
sub
lods
adc
dec
imul
fisubrl
add
xchg
mov
adc
pop
roll
shll
mov
xor
push
js
push
iret
pop
hlt
push
or
push
inc
sbb
mov
xchg
inc
sbb
inc
or
and
mov
inc
inc
sbb
lods
add
lods
xchg
mov
daa
jne
mov
push
mov
in
inc
cmp
adc
cli
or
sbb
jo
cltd
loopne
shlb
push
faddp
push
xchg
sub
or
lods
add
ja
mov
fisttpl
mov
lock
or
bound
sub
and
insb
test
xor
xchg
outsb
lods
cmp
push
test
inc
or
movsl
imul
rorl
dec
push
jns
adc
push
xor
rclb
jmp
aad
push
fiadds
and
sbb
shll
repnz
cmpsb
and
adc
ja
cltd
jle
add
or
mov
adc
inc
xchg
inc
or
insl
pop
push
jns
adc
push
adc
add
les
xor
clc
pop
mov
inc
inc
jno
push
mov
les
adc
ret
ds
mov
mov
push
adc
mov
scas
or
and
pop
jmp
bound
pushf
pop
add
adc
sbb
or
mov
adc
das
pop
lock
les
sub
jae
addl
pop
sbbb
mov
mov
jae
and
adc
and
adc
sbb
rclb
inc
lcall
mov
mov
sbb
aam
shlb
mov
mov
pop
push
mov
jp
andl
popa
jae
aaa
jno
inc
jne
add
adc
jp
dec
mov
dec
add
cmp
xchg
sub
dec
mov
je
sub
scas
jns
das
and
cmp
adcb
and
cmc
ret
sbb
dec
inc
es
imul
clc
enter
xchg
xor
mov
pop
mov
mov
pop
push
jge
pop
test
cmp
adc
and
in
sbb
aaa
mov
outsl
adc
cmpsb
aaa
or
xchg
push
sbb
dec
sub
dec
adc
movlps
adc
or
and
or
push
aaa
add
inc
push
dec
lock
pop
inc
jge
pop
push
add
mov
sbb
push
cmp
mov
iret
or
aam
or
ja
imul
xadd
in
int3
jmp
mov
insl
sbb
adc
cmp
xchg
xorb
adc
js
mov
push
or
sahf
inc
pop
cmp
add
inc
repz
sahf
orl
push
sbb
mov
test
je
test
or
inc
lret
cli
push
and
imulb
pop
mov
cs
cmpsl
fldenv
pop
add
das
shll
dec
pop
cld
push
sub
std
add
jns
push
push
mov
mov
icebp
sub
ffreep
add
pop
jp
cmp
dec
outsb
or
ja
lds
xor
xchg
dec
mov
insb
enter
sbb
sbb
push
dec
jmp
movsl
pop
cli
push
and
jne
mov
aas
jmp
enter
cmc
add
inc
mov
sbb
sbb
lds
mov
and
cmp
or
test
and
mov
push
push
es
add
ret
xchg
add
mov
adc
test
dec
test
or
cmpsb
sbb
rorl
xlat
adc
cs
or
mov
rcr
push
sbb
sub
xor
cwtl
or
or
adc
jl
sbb
pop
and
stc
pop
add
jecxz
call
fidivrl
sbb
in
shlb
adc
mov
push
adc
xorl
mov
in
add
or
dec
dec
push
sub
mov
cld
adc
jp
mov
push
loope
aam
jl
jmp
movsl
mov
xor
sub
sbb
pusha
sbb
loope
movsb
filds
sbb
inc
insl
sbb
add
xor
push
push
fidivrs
pop
mov
xor
bswap
adc
sti
outsb
sub
inc
je
icebp
fisttpll
xor
mov
adc
cmp
mov
lods
mov
in
adc
mov
dec
cmp
mov
sbb
popa
sub
or
insb
jge
fs
or
adc
mov
out
lret
dec
loope
int3
sub
into
insl
jge
push
push
jecxz
lods
adc
sub
or
test
rorl
pushf
push
int
adc
sub
cmp
xorb
int
adc
stos
lods
pop
add
push
jle
jno
mov
jne
das
fcomps
mov
and
push
adc
sbb
add
jg
push
fsubl
pop
adc
mov
pop
pop
enter
aaa
dec
or
je
or
mov
add
in
fcmove
sub
mov
je
or
or
sahf
test
jle
ret
loopne
ret
inc
add
mov
movsb
imul
mov
lods
mov
mov
cmp
sub
or
loopne
add
add
push
insl
popf
push
pop
push
push
or
subl
push
mov
lods
mov
sub
push
push
fxch
jo
and
pop
xchg
lea
jecxz
mov
stos
xchg
dec
adc
xchg
addr16
js
jecxz
imul
or
jmp
es
dec
arpl
sub
daa
cmp
loop
push
out
xor
inc
nop
mov
or
sub
setp
jecxz
repz
mov
sbb
sbb
mov
add
mov
call
dec
push
roll
mov
fdivs
leave
inc
sbb
mov
and
popa
mov
pop
dec
sub
mov
pop
ja
in
pop
xor
iret
push
sub
lea
insl
addb
push
mov
pop
mov
popa
or
je
adc
push
sbb
and
sbb
leave
cs
hlt
jbe
movl
in
push
xchg
mov
test
adc
and
xor
and
sub
jno
cmp
pop
fdivl
fcom
xor
pop
sbb
xchg
ret
outsl
and
or
mov
mov
jne
imul
mov
int
dec
sbb
and
ffree
and
imul
fstpl
rclb
push
repnz
push
test
or
mov
sahf
push
test
jnp
bound
dec
push
pop
sub
and
push
jno
pop
stos
pop
xor
add
lds
idivl
stos
add
cli
dec
loop
leave
call
jae
inc
adc
aaa
sub
loop
push
pop
in
adc
sub
pop
loop
mov
xchg
or
sbb
clc
jne
xchg
dec
sub
or
mov
leave
jbe
dec
test
pusha
push
or
sbb
sbbb
ljmp
je
mov
mov
sub
ret
mov
inc
lahf
mov
les
inc
xor
and
add
and
cmp
and
jle
sub
pop
xor
cmp
fiadds
cmp
fidivl
pop
push
sbb
push
mov
mov
or
ja
mov
dec
adc
inc
sub
imul
and
xchg
adc
nop
xchg
pop
dec
push
mov
cld
push
mov
pop
inc
xlat
add
stos
add
incb
rorb
frstor
movsb
das
rorb
xor
push
shrb
negb
lea
fsubs
inc
mov
push
sbb
call
adc
push
jnp
xor
movsl
insb
test
and
sbb
jle
mov
xor
mov
sub
je
push
xchg
mov
cmp
fstps
aaa
and
adc
cmp
push
cmp
jle
cmp
loop
lahf
popa
jp
push
cmp
cmp
inc
add
fisttps
inc
jmp
add
movl
mov
jae
leave
push
push
nop
repnz
xor
push
mov
cltd
pop
idiv
fwait
aam
xor
fidivl
imul
lock
dec
or
mov
lods
or
inc
repnz
dec
jbe
sub
xorl
popf
add
fnstcw
push
cmp
push
hlt
jno
loope
vcvttsd2si
mov
outsl
xor
dec
mov
ret
sub
imul
insl
xor
inc
outsl
ret
outsl
je
mov
sbb
mov
xor
add
test
add
and
cmp
cltd
and
dec
sbb
daa
int
cmp
xor
test
push
loopne
jl
ds
cmp
in
and
xor
cmpsl
add
xchg
xchg
fidivl
cmpsb
into
inc
or
xchg
inc
scas
iret
xor
sbb
xchg
jl
stc
rcll
stc
mov
aas
or
sbb
pop
pop
pop
pop
push
sahf
push
dec
jo
mov
or
js
ss
adc
aam
add
or
add
ss
cwtl
std
xlat
push
push
rol
insl
or
sub
and
ja
test
pop
add
loopne
lcall
mov
adc
mov
add
push
data16
movsb
lods
fcomps
push
sub
inc
enter
cwtl
and
adc
adc
sbb
sbb
inc
enter
dec
pop
and
pop
lcall
pop
nop
or
mov
sub
push
xor
cwtl
std
mov
mov
add
or
cmp
inc
jo
sub
lods
xchg
bnd
mov
mov
pusha
aaa
sbb
cltd
imul
inc
stos
insl
mov
mov
sub
in
cmpsb
add
test
ljmp
jbe
fwait
aas
cmp
subb
dec
xor
popa
outsb
and
scas
loopne
pop
xor
push
xorb
fstl
adcl
ljmp
movsl
adc
adc
sbb
push
push
xor
cmp
inc
sbb
xchg
xchg
mov
cmp
inc
add
push
rolb
nop
and
or
pusha
cmp
inc
adcb
sbb
jb
pop
jmp
cltd
sub
pop
add
jb
adc
adc
fs
aas
pop
add
xor
nop
xor
inc
add
adc
mov
dec
gs
or
push
adc
shlb
inc
nop
in
push
mov
mov
xor
cmp
add
fdivl
dec
repz
aas
pusha
or
push
test
lods
push
loope
cs
fwait
loope
mov
xchg
mov
fnstenv
pop
out
rorb
push
vpunpckhdq
sub
xor
rcrb
and
inc
inc
add
xchg
in
mov
icebp
or
add
sbb
aaa
je
mov
xchg
lea
adc
or
jns
xor
push
scas
arpl
test
lock
movb
add
mov
cmpsl
cmpsl
in
sbbl
int
or
in
cltd
xchg
add
movsb
pusha
mov
inc
add
fadd
push
pop
aaa
lock
jp
adc
xchg
sbb
and
pop
or
lds
scas
push
enter
xchg
or
ret
add
jg
mov
outsl
inc
sbb
movsl
gs
sbb
data16
sub
ret
xor
pop
xchg
fcomps
inc
and
adc
sbb
jbe
and
and
std
mov
pop
and
aaa
insl
orb
cmp
adc
stos
imul
test
add
pop
adc
pop
dec
cmpsb
add
sbb
pop
mov
addr16
popa
pop
fcoms
stos
cmp
jne
stc
mov
mov
mov
xchg
mov
pop
mov
cmpsb
sbb
push
add
xlat
in
pop
fistl
fildl
in
js
cmpsb
fildl
nop
dec
cmp
cld
xchg
xor
add
push
mov
dec
xorl
adc
adc
stc
add
xor
add
jl
mov
cmpsb
add
test
leave
test
scas
jg
adc
sbbl
and
test
pop
pusha
xor
pop
push
mov
push
and
inc
pop
and
dec
insl
xchg
add
add
lea
mov
and
or
lea
insb
add
and
mov
cmp
xor
je
cmp
jle
push
fcomps
shl
add
fildl
adc
inc
jp
loopne
pop
pushl
xchg
les
and
movl
ss
scas
lds
inc
inc
push
out
and
push
mov
mov
mov
xor
in
orb
or
out
mov
dec
dec
pop
dec
loop
movsb
pop
inc
push
bound
add
mov
pushl
cwtl
fcompl
fnstsw
test
je
sbb
nop
push
mov
lock
loope
fmulp
or
fldl
push
sbb
dec
push
es
neg
dec
sbb
and
cli
pop
jg
mov
fstpl
out
mov
jge
incb
pop
or
adc
xor
fsub
pop
fsubrp
and
jbe
push
or
lcall
jl
scas
dec
jp
inc
aaa
dec
inc
sbb
stos
shlb
sahf
divb
aaa
add
es
inc
mov
mov
fsubs
adc
sub
hlt
or
shll
ljmp
loopne
jns
stc
jge
xchg
out
and
jne
rcr
es
sahf
testl
cmpsl
pop
xor
push
mov
xorl
out
dec
xor
or
iret
mov
dec
cmp
in
ret
ja
push
mov
or
mov
push
pop
sbb
and
idivl
mov
pop
mov
add
mov
cmpsb
hlt
andl
jne
xchg
ret
and
add
or
mov
mov
lcall
enter
push
inc
cli
cmp
or
lock
stos
xor
shld
add
pop
inc
push
xchg
ja
jb
ja
lea
push
push
mov
sub
mov
push
push
je
cmpsl
mov
mov
jge
add
push
leave
adc
mov
push
adc
push
push
sub
cmp
in
rorl
push
or
cli
test
push
push
lcall
pop
pop
inc
leave
test
push
sub
arpl
adcl
adc
bound
xor
adcl
adc
push
ja
push
jne
add
pop
ja
push
adc
inc
arpl
fstl
fwait
xor
mov
add
sub
inc
jle
push
cmpw
jne
sub
and
jge
pop
outsl
cmp
dec
push
push
out
mov
stc
jge
mov
lea
mov
sti
jg
stc
std
mov
or
push
mov
out
data16
push
sbb
dec
push
nop
push
dec
inc
out
or
movsl
cmp
dec
add
rcll
xchg
sub
add
icebp
sbb
push
mov
adc
push
sbb
mov
gs
and
sbb
ss
xor
mov
sub
mov
lods
shlb
mov
outsl
adc
inc
pop
hlt
inc
dec
pusha
rclb
dec
jnp
cmp
imul
movsl
jge
mov
dec
push
push
pop
add
inc
pop
movsl
test
xor
mov
mov
xor
push
lods
mov
or
dec
ljmp
inc
shlb
scas
add
std
and
mov
xor
or
pop
shl
xorl
inc
push
adc
add
mov
or
in
and
mov
inc
nop
xchg
test
jl
lds
shll
lret
stos
xchg
cld
or
sti
add
mov
pop
xlat
orl
xchg
xor
dec
sub
xchg
lods
je
xlat
and
sbb
ss
je
jbe
mov
shll
stc
push
pop
ret
pop
push
xchg
sub
add
jno
lods
push
rcll
in
adc
pop
pop
icebp
xchg
sub
outsb
push
cwtl
and
or
sbb
inc
aaa
scas
inc
loop
dec
cmp
xlat
xchg
and
adc
add
mov
int3
xchg
push
lret
and
or
inc
call
inc
or
fidivrs
loope
jge
or
push
adc
and
outsb
pop
sbb
ret
or
daa
dec
dec
sub
je
ret
add
sbb
dec
movsl
aam
add
xor
push
in
in
ljmp
sub
adc
xor
or
sbb
clc
lock
jp
adc
sub
mov
push
sbb
and
pop
mov
movsl
psrad
dec
aaa
and
mov
sub
and
shll
or
test
aaa
cmc
dec
cli
sub
xor
push
mov
mov
fisttpl
cs
jge
add
scas
xchg
lea
icebp
and
xor
rclb
inc
jg
je
inc
add
xor
fildll
dec
je
add
sbb
dec
jne
push
and
jmp
or
aas
lods
pop
sub
adc
xchg
jmp
or
and
rclb
add
push
lods
jmp
test
out
sub
in
and
jmp
or
jmp
outsl
mov
jmp
or
jmp
aaa
nop
jmp
lea
mov
lret
mov
add
jnp
mov
in
jb
inc
dec
add
dec
jb
and
nop
sbbl
add
inc
push
cmp
les
and
push
pop
push
pop
mov
je
mov
hlt
dec
sbb
xchg
enter
mov
shr
dec
or
in
inc
xor
nop
inc
push
nop
mov
enter
hlt
dec
adc
and
mov
mov
arpl
test
sub
push
js
adc
xchg
inc
gs
mov
jns
xlat
cmp
push
cmpsb
mov
les
fsub
in
notb
cmp
repz
adc
dec
push
repz
repz
data16
test
repz
mov
cmp
repz
aam
call
repz
push
push
adc
and
jns
out
cmp
pusha
dec
pop
push
mov
gs
mov
cli
test
daa
fstpl
add
subl
call
lds
addr16
imul
sbb
nop
adc
add
sub
adc
sbb
sub
inc
int
shll
xchg
dec
cld
xorl
insb
or
test
mov
pusha
sar
mov
jmp
jl
mov
lcall
mov
inc
mov
push
enter
xchg
jmp
popf
cmp
inc
push
psraw
jmp
pminsw
leave
mov
xor
loope
sub
xor
fsubl
jmp
lods
mov
sub
sbb
std
xchg
and
xor
sub
push
loope
sti
sahf
bound
dec
test
adcb
pop
adc
jl
xchg
popa
out
pop
out
add
leave
sbb
les
inc
ret
jle
xor
push
cmpb
jge
xor
and
dec
pop
sbb
shl
lods
hlt
mov
cmpsl
and
push
xchg
mov
add
pop
cmpsl
or
mov
jg
inc
add
rorb
or
ror
rorb
push
mov
pusha
mov
mov
popf
sub
jnp
ficoms
push
push
pop
clc
dec
xor
sub
ret
push
enter
adc
jo
sahf
lret
dec
roll
adc
shrb
sbb
sub
and
ljmp
ret
adc
or
inc
daa
mov
fbld
inc
mov
mov
adc
pop
cmp
test
fdivrl
pop
mov
mov
xor
jl
push
or
daa
add
pop
mov
or
xor
pop
pusha
mov
lret
scas
cmpsb
mov
inc
pop
adc
das
shr
push
or
cmpl
bound
sbb
imul
popa
dec
les
add
jne
mov
movsb
lea
mov
addr16
mov
xchg
xchg
sub
js
xchg
push
cmc
cld
push
dec
adc
outsb
add
mov
push
pop
dec
sub
jl
loop
int3
xor
mov
ja
ds
and
push
xor
inc
mov
lods
cmpsl
sub
pop
out
lea
xor
mov
mov
mov
jo
push
das
mov
mov
mov
inc
sub
test
ret
xor
mov
jns
dec
fidivs
xorb
dec
dec
push
xor
xor
jle
xchg
cmp
icebp
xor
mov
mov
imul
cs
insb
jo,pn
imul
imul
sub
push
int3
add
ja
sub
xor
popf
push
aaa
mov
mov
mov
stos
cmc
sub
adc
jle
push
xchg
aaa
lret
pusha
in
lock
dec
sti
add
inc
add
and
push
xchg
arpl
adc
pop
insb
mov
adc
inc
movsb
or
push
nop
push
test
jae
or
shlb
inc
imul
imul
gs
add
int3
xor
and
sbb
sbb
xchg
push
mov
movsb
add
mov
lea
dec
jns
rcll
pop
and
and
sbb
and
pop
pushf
pop
xchg
or
test
lds
jo
or
sub
add
in
mov
pop
xchg
xor
push
cmp
les
cmp
adc
sbb
push
jnp
cmp
pop
lock
or
sub
push
jmp
jl
adc
popf
mov
cld
test
cmp
inc
push
push
rorl
pop
push
hlt
ja
int3
xor
int3
cmp
adc
ds
dec
xchg
mov
inc
xlat
cmc
aam
mov
dec
xchg
dec
testb
mov
adc
ds
adc
in
aaa
movsb
rolb
fisttpll
and
sbb
push
adc
pushf
cmp
add
inc
and
mov
push
jmp
int
aaa
out
lahf
sub
xchg
jo
pushf
push
add
add
jno
pusha
and
lahf
xor
scas
inc
arpl
adc
sbbl
adc
mov
pop
fstpt
jmp
push
sub
aam
fwait
adc
outsb
sub
xchg
pop
sub
sbb
pop
dec
inc
adc
int
inc
add
shlb
add
jns
and
push
push
sub
cmp
out
lahf
mov
push
mov
and
push
push
ds
jl
pop
stos
lret
sbb
inc
fsubs
sbb
jbe
cmp
dec
inc
ja
add
push
mov
adc
pop
add
es
adcl
and
mov
sbb
jecxz
cmpsb
fcmovb
filds
sbb
xor
outsl
loopne
test
or
cmp
cld
xchg
ficompl
test
inc
imul
jo
arpl
jecxz
and
xchg
sub
cs
fcomps
sahf
push
pop
cmp
repz
cmp
ret
fnclex
je
rcrb
dec
js
jbe
xchg
mov
pop
mov
pop
mov
in
push
cwtl
jns
jns
int3
paddusb
and
pop
push
adc
xchg
lds
loop
lods
inc
jl
in
jns
add
popa
push
or
adc
push
cmp
rcrb
push
lcall
rcrb
adc
add
pop
cmp
xchg
nop
mov
fcoms
je
xchg
dec
sti
push
sbb
insl
inc
lcall
or
dec
sbb
jl
xchg
push
lcall
adc
sub
push
pop
pop
mov
sub
jo
mov
addb
clc
jno
test
or
nop
out
rorl
inc
daa
nop
shlb
testl
aam
sbb
sbb
dec
nop
lds
addl
adc
orl
adc
adc
xor
adc
mov
cwtl
nop
iret
jno
enter
sbbb
and
or
or
pop
pusha
push
pop
leave
das
add
fdiv
dec
sub
in
in
mov
test
or
pushl
and
or
pop
push
outsl
ret
sub
xor
pop
lret
push
mov
inc
xchg
jno
adc
or
sub
jne
dec
aas
loopne
enter
sbb
outsb
mov
xchg
mov
arpl
push
iret
mov
inc
xlat
cltd
add
or
and
or
cmp
andl
daa
mov
sub
mov
push
xchg
call
cmp
mov
add
push
jbe
sbb
inc
sbb
or
inc
push
test
das
or
mov
cmp
mov
add
decl
ficoml
mov
dec
pop
and
scas
inc
rorl
scas
mov
and
hlt
and
stos
mov
or
cltd
adc
push
rol
pop
adc
int
or
xchg
loope
in
popa
pop
fimuls
das
adc
jbe
movsl
pusha
sbb
sub
jge,pn
stos
pushl
jl
andb
fists
jne
xchg
sbb
lcall
mov
pop
sub
adc
js
mov
pusha
or
lahf
in
scas
sbb
imul
imul
inc
scas
push
push
cmp
rolb
adc
int3
xor
add
push
xchg
and
call
and
repnz
mov
or
pop
pop
pusha
xchg
pushf
xor
es
add
inc
mov
push
sub
dec
pop
sub
fildl
enter
sub
sub
push
cmp
mov
ret
push
jbe
push
and
scas
insl
pop
push
cmp
cmpl
mov
clc
dec
aam
imull
das
dec
pop
cmp
sbb
in
inc
cmp
jbe
mov
push
or
sbb
add
inc
jno
and
inc
and
add
nop
pop
push
sbb
sbb
sbb
cmp
insb
add
and
nop
push
adc
sbb
adc
ja
sub
xor
and
loopne,pn
sub
ljmp
movb
mov
cmpsb
xchg
or
add
xchg
imul
cs
add
inc
pop
ja
fcom
inc
or
repz
or
imul
fcmovu
adc
add
and
or
jo
in
lock
jmp
decb
lea
jmp
push
ret
adc
push
cmp
add
mov
adc
shrl
push
push
clc
xchg
nop
or
insb
lret
xchg
dec
sbb
aam
cmpsb
mov
popa
add
popf
lea
hlt
jmp
fiadds
cmp
jbe
outsb
mov
testb
push
push
xchg
inc
add
and
xor
cwtl
inc
jmp
imul
dec
cmp
aad
inc
mov
lret
mov
pop
jl
jnp
fwait
movsl
xchg
daa
cmpsb
push
adc
inc
inc
movsl
push
xchg
or
and
xchg
inc
cmp
adc
push
cmpb
sbb
ret
mov
push
clc
dec
inc
faddl
js
lret
lret
sub
jb
mov
push
sub
js
mov
lahf
pushf
je
nop
push
in
lods
push
addl
ss
ljmp
cmp
dec
pop
js
cmp
jle
pushf
push
sbb
xlat
jbe
mov
lahf
or
cmp
inc
push
jb
add
jo
jl
or
inc
push
mov
hlt
subl
or
iret
jne
pop
outsl
inc
add
enter
jae
inc
outsl
push
inc
add
nop
cmp
cwtl
inc
movsl
fidivs
jmp
rorl
outsl
in
cld
dec
jp
sub
xchg
sbb
cwtl
imul
or
mov
movzbl
mov
adc
sbbl
lret
je
inc
cmpl
jo
and
ret
dec
mov
data16
pop
xlat
aad
dec
or
lods
aam
inc
add
insb
mov
sub
mov
call
push
loopne
test
fcmovbe
mov
in
int
dec
js
xlat
fdivs
rorl
sbb
push
pop
das
add
outsb
cmpsb
popf
jo
add
inc
call
imul
in
sbb
jns
push
pop
push
cmp
mov
mov
movsl
arpl
mov
shrb
ret
popl
imul
xchg
int
call
ds
jl
or
clc
dec
je
cmp
or
and
mov
movb
movsbl
shr
mov
cld
push
mov
and
mov
nop
inc
mov
xchg
pop
repnz
jmp
lock
pop
dec
push
inc
push
bound
xchg
jo
and
sbb
or
mov
dec
mov
inc
loop
lcall
rorb
push
fimull
jns
jnp
add
xor
adc
lods
lret
mov
roll
test
add
inc
pop
or
sti
pop
or
shll
cs
adc
inc
lock
xor
inc
mov
fdivr
pop
cmp
je
dec
and
add
jb
sahf
adc
push
addl
shrb
jmp
add
sub
cltd
jb
movl
aaa
cltd
aaa
xor
dec
adcb
test
sub
and
stc
popa
adc
and
ret
and
push
adc
mov
loopne
fsubs
pop
dec
dec
enter
je
mov
jb
lds
mov
add
sub
in
add
push
mov
mov
shlb
imul
js
mov
sub
dec
dec
jo
bound
push
sub
push
or
push
add
push
add
sbb
les
jecxz
sub
sbb
mov
mov
push
cmp
push
pop
jg
xchg
cmpsb
rcll
push
or
shlb
lret
outsl
pop
sub
mov
test
pop
icebp
inc
insb
push
xor
sbb
xchg
adc
inc
mov
push
xor
xchg
test
pop
add
in
push
jne
or
add
lods
imul
cmp
dec
ret
and
dec
test
and
fadds
cmp
popa
xchg
daa
add
xchg
sub
pop
and
lea
into
ss
flds
popf
jg
pop
jmp
and
sbb
push
pop
add
stos
fldcw
arpl
addb
inc
adc
mov
or
jmp
pop
or
and
xchg
rorb
fdivl
or
hlt
push
inc
sbb
mov
xchg
xchg
data16
icebp
stos
ret
add
mov
popa
and
jnp
mov
xor
jno
inc
enter
sar
lods
fcmovnbe
lods
aam
inc
aas
add
pop
enter
rclb
xor
ret
aad
pop
js
cld
ret
test
inc
fisubs
test
add
xor
nop
popa
sub
push
fiadds
or
push
sarb
cmp
sbb
sbb
cmp
push
xor
xor
or
jl
aaa
and
jmp
pop
sbb
xor
mov
pop
sbb
cltd
test
xchg
lret
fs
test
cmpsl
je
push
lret
js
stos
mov
push
dec
lock
push
dec
pop
jmp
fidivs
push
sub
inc
ret
add
inc
stos
inc
xchg
lahf
arpl
cmp
je
jno
mov
xor
mov
les
sub
dec
sbb
jmp
in
cmp
mov
ret
cwtl
fadds
jmp
mov
insb
test
sub
ret
add
add
add
mov
jmp
jp
ret
sbb
mov
test
or
jl
adc
mov
in
fisttps
cmp
pop
pop
mov
mov
xor
jne
je
inc
jecxz
test
xchg
cmp
jl
sbb
in
loope
cmp
hlt
add
sub
loop
mov
shlb
das
push
push
fcoms
shlb
or
in
cmp
cmp
ret
push
nop
adcl
nop
rolb
xor
lock
inc
mov
xor
xor
pop
and
pusha
divl
cmp
ret
lea
mov
mov
sbb
inc
jne
sub
push
lcall
lock
xchg
add
cmp
orb
xor
jne
fdivs
out
cmp
mov
xchg
rcrb
jl
call
rdtsc
xor
enter
push
add
in
mov
xor
enter
nop
xchg
in
push
dec
clc
inc
das
je
jge
test
xchg
jmp
mov
bound
lods
xor
fstpt
dec
es
outsl
das
mov
inc
sahf
fsub
mov
cs
in
cmp
test
jne
es
sub
mov
xchg
jno
lods
call
mov
sbb
or
mov
push
and
inc
and
xchg
sbb
dec
inc
daa
dec
sub
pop
sub
or
lret
or
mov
or
cmp
addr16
cwtl
sub
je
cli
cmp
fmuls
jbe
inc
fwait
out
jne
push
mov
push
aaa
adc
mov
imul
add
cmp
outsl
cmp
cmp
dec
xor
xorl
push
idivl
test
adc
popa
and
mov
add
adc
push
lahf
inc
add
inc
or
mov
push
lcall
pop
add
mov
fidivrl
and
push
add
call
jl
jle
fwait
add
pop
ret
ret
ja
inc
dec
add
loope
pop
loopne
push
push
popl
sbb
stos
loopne
pop
repz
push
fldl
hlt
or
loopne
xchg
inc
data16
cmp
jle
adc
jne
daa
bnd
adc
hlt
jne
xchg
stc
jns
divb
or
push
addb
add
lods
pusha
sub
xor
idivl
adc
inc
pop
mov
aad
insb
and
push
adc
call
ds
in
dec
adc
out
inc
jl
pop
sub
push
jl
mov
lea
repnz
lea
les
jne
ds
mov
adc
lods
mov
rorl
cmp
movq
jnp
xchg
or
add
ret
mov
xor
mov
sbb
les
pop
ret
movsb
push
dec
mov
sbb
or
cmc
int3
orl
cmpsl
jae
aas
jne
xor
fnstenv
clc
adc
jmp
lods
push
add
fstl
lods
or
sub
loopne
shlb
lea
jb
adc
pop
push
xchg
xor
rol
sbbl
push
lahf
push
ss
outsb
ret
cmp
inc
loopne
mov
sbbl
dec
xchg
insl
mov
push
add
call
std
jmp
orl
mov
sets
xchg
lea
mov
lcall
sbb
inc
push
jne
imulb
enter
and
enter
inc
adc
pushl
mov
ret
fwait
mov
mov
mov
cld
shr
fimuls
push
dec
arpl
sbb
int3
pop
jg
adc
or
data16
pop
sub
adc
mov
call
or
sarb
int3
or
into
inc
andl
and
shlb
sub
loop,pn
mov
mov
in
std
inc
hlt
xchg
xor
nop
xchg
cmp
adc
cmp
fs
push
ds
adc
xor
push
mov
push
inc
imul
loopne
add
pop
fisubrl
dec
push
pushl
and
jge
mov
mov
clc
lea
cmp
or
lret
mov
mov
fidivl
mov
mov
pop
cmc
imul
addl
testl
push
xorl
popa
movsl
mov
je
ret
hlt
push
mov
and
and
push
xchg
pusha
sbb
jb
pop
and
or
xor
mov
adc
push
out
sub
test
or
xorl
sbb
xor
mov
or
cli
cmp
enter
nopl
daa
xchg
and
int3
pop
adc
sbb
jb
and
adc
push
cmp
sub
and
inc
sbb
push
sub
xor
cmp
pop
xor
push
sbb
sbb
jno
inc
push
adc
cmp
inc
mov
nop
bound
xor
and
adc
cwtl
and
cmp
and
and
push
rcrb
mov
es
daa
inc
mov
shlb
mov
xor
adcb
lea
test
xchg
popf
add
je
and
sarb
push
or
cmpsb
push
cltd
mov
rcl
push
je
insb
and
xor
movsb
push
add
dec
push
mov
ret
daa
sbb
loopne
inc
sti
xor
mov
jo
notb
test
adc
lahf
dec
jo
movsl
or
xor
or
xchg
cmp
js
fdivs
and
js
pop
adc
jg
je
push
or
xchg
pop
testb
sub
xchg
inc
sbb
mov
and
xchg
adc
sub
sbb
stc
lock
std
rolb
jne
movsb
push
xlat
test
out
xchg
test
leave
mov
lea
push
inc
add
cmp
test
sub
mov
enter
xchg
aad
or
fsubrl
push
les
fcmovu
mov
call
je
lods
xor
or
xchg
fldpi
jno
in
call
cwtl
add
xchg
mov
sub
and
add
mov
inc
pusha
add
adc
stos
jb
pop
in
aam
pusha
pop
lea
jge
pop
lods
mov
in
pop
shlb
sub
dec
pop
inc
std
xor
pop
mov
add
test
jecxz
sub
sub
inc
add
mov
test
push
call
inc
and
and
mov
pop
pop
stos
add
mov
jbe
push
xchg
mov
push
mov
jnp
sbb
loopne
imul
outsl
and
add
mov
sub
push
dec
pop
xor
add
sbb
and
cmpsl
or
sahf
inc
cld
sub
push
push
jne
pop
stos
or
mov
es
jne
sub
test
adc
clc
jmp
mov
xor
adc
sub
push
xor
bound
xor
mov
pop
aaa
add
adc
lret
sub
add
daa
faddl
sub
and
sub
mov
inc
inc
pop
loope
movsl
outsb
pusha
add
dec
ret
xchg
rolb
add
mov
out
ret
cmp
les
cmp
pop
push
push
push
push
in
cmp
and
rorb
jle
cmc
popf
add
stc
cmp
sarb
inc
add
ret
aaa
jge
lea
push
add
cwtl
pop
gs
xchg
and
ljmp
push
cmp
and
sbb
stos
jbe
stos
loopne
jge
pop
sbb
call
jmp
add
mov
mov
sbb
call
or
push
xchg
add
xchg
fdivrl
lret
mov
inc
imul
inc
sti
out
add
inc
push
inc
ret
aad
repnz
in
rcr
repz
orl
test
sub
je
decl
dec
jo
cmpb
xchg
stc
imul
fwait
push
xor
test
pop
push
jp
push
or
rcr
push
mov
lea
or
push
cmp
mov
imul
mov
aam
ljmp
mov
and
mov
mov
xchg
adc
popa
inc
inc
xchg
inc
mov
inc
adc
test
in
orl
aas
push
lahf
or
mov
ret
test
pop
or
or
ljmp
lret
out
jno
outsb
jo
adc
outsl
push
je
jae
insl
in
ja
or
inc
pop
and
cmp
je
lahf
mov
dec
or
jb
rolb
sbb
nop
rorb
ret
push
clc
aas
push
xchg
cmpb
mov
adc
ret
loope
sarb
hlt
jae
movsbl
sbb
dec
repz
mov
sbb
or
jmp
cmp
idivb
pop
jmp
mov
push
das
add
lea
and
dec
inc
or
add
or
jecxz
or
add
inc
cmp
mov
cmpl
cli
adc
inc
cltd
and
add
sar
add
xlat
sub
mov
clc
xor
mov
xor
ss
cmp
jecxz
sbb
aas
loope
add
or
adc
dec
xchg
loopne
or
jne
xchg
shlb
or
xchg
mov
mov
lret
push
sbb
mov
push
imul
outsl
jo
shld
lea
mov
out
ret
add
mov
ret
roll
mov
and
dec
std
sbb
jl
xchg
jle
movsl
mov
mov
ss
test
pop
cmp
js
inc
mov
add
dec
jne
enter
aas
loope
or
stc
xor
test
mov
aam
repnz
add
aaa
lahf
push
ret
or
pop
adc
adc
adc
jmp
push
add
negl
add
enter
or
imul
sbb
and
xchg
dec
add
or
loopne
xor
cmc
in
push
xor
cs
mov
int3
lret
pop
sbb
sub
mov
xchg
loope
loope
repnz
sub
notb
shlb
add
mov
xchg
ret
bound
xor
add
sub
pop
cmp
add
fistl
push
jmp
mov
push
pop
mov
movsb
mov
cmc
push
push
outsb
rcrl
sbb
xchg
out
fcomps
jbe
data16
pop
pop
rorb
add
jnp
sbb
sub
xchg
in
jl
dec
sbb
add
add
out
nop
aad
pop
dec
dec
mov
in
inc
or
dec
or
sbb
dec
loopne
add
idivb
dec
es
aam
push
or
mov
hlt
pop
ss
jns
push
push
es
xchg
sahf
out
int3
iret
inc
push
shl
push
xor
xor
sub
pop
xchg
mov
lahf
adc
pop
adc
in
popa
test
pop
std
and
rorl
mov
adc
mov
iret
push
xchg
nop
add
mov
sub
lds
add
push
fbstp
popf
fcmovnu
sbb
mov
and
adc
scas
leave
rcl
cmp
sbb
or
lcall
and
adc
fs
call
inc
rol
pop
xchg
sub
ja
dec
push
lret
add
sbb
mov
je
call
xchg
xchg
ss
add
int3
xchg
pop
lcall
das
notl
je
dec
add
mov
mov
add
adc
mov
repnz
dec
imul
cs
imul
jno
leave
and
rclb
pop
aam
cmc
stos
rorb
mov
orb
or
aaa
push
push
aaa
jne
pop
mov
jmp
mov
inc
adc
adc
roll
inc
pop
adc
push
cmp
fcompl
xchg
mov
or
aad
loope
cmp
pop
mov
int3
add
mov
loope
sbb
sbb
cmpsb
pop
bound
mov
sub
mov
je
sbb
ljmp
hlt
xorb
call
out
push
pop
dec
mov
and
jno
loope
add
jo
or
cmp
adc
push
mov
cmp
mov
push
and
mov
jno
sub
jl
mov
or
xchg
or
dec
lret
rclb
add
push
cmp
leave
rorb
push
rclb
push
xchg
push
bound
sarl
clc
jl
cwtl
loopne
call
loopne
inc
sub
xor
sbb
push
sbb
pop
lock
cmp
daa
movsbl
shl
aad
test
call
cli
ljmp
fdivrl
add
mov
test
add
inc
clc
mov
test
insb
lock
movb
jo
bound
movsb
xor
rolb
pop
add
stc
add
or
movsl
push
mov
leave
cmp
add
movsl
pop
cmp
pusha
inc
leave
int3
inc
xchg
scas
dec
push
roll
pushf
popa
jb
adc
jb
sbb
insl
popa
push
filds
outsb
hlt
stc
mov
cld
les
xchg
shlb
add
andb
add
js
jge
mov
es
add
iret
add
enter
sub
sub
pop
andl
jp
push
out
or
pop
cmpsl
sbb
into
push
xor
add
jmp
push
mov
stc
mov
aas
cld
jnp
mov
clc
pop
mov
js
clc
sbb
xchg
sub
adc
das
jns
pop
movsl
aad
ret
pop
and
cmp
addb
rcrb
bnd
hlt
mov
adc
push
fmull
sbb
xor
decl
mov
out
mov
jbe
js
jl
ds
xor
dec
clc
addl
pop
and
out
lods
icebp
pop
sub
push
icebp
or
orb
or
mov
add
add
push
mov
mov
pusha
add
and
or
jg
pop
cld
push
leave
push
xor
mov
inc
jg
sarl
lea
and
fwait
jb
jne,pn
mov
mov
frstor
sub
call
jle
xchg
jb
add
ss
or
push
adc
add
add
cmp
fstpt
test
in
jg
es
insb
ret
push
fs
cpuid
stc
les
xor
jo,pt
push
ret
adc
mov
cmp
inc
sahf
mov
cmp
testb
and
ja
xor
cmp
movb
adc
mov
push
mov
popa
adc
les
and
stc
imul
pushf
jo
loopne
cli
ret
xor
call
xor
and
adc
sub
movsb
in
add
xchg
adcb
push
xor
mov
or
sbb
push
sub
mov
hlt
test
mov
mov
mov
adc
clc
jns
add
rclb
xchg
or
adc
pop
ja
cli
inc
adc
in
es
mov
stc
sub
ss
aam
cld
decl
enter
iret
jbe
mov
sbb
pushf
mov
push
and
ret
pop
popa
imulb
aas
insl
mov
mov
adc
lods
xchg
sbb
adc
xchg
fcmovnu
add
cmp
or
inc
icebp
cmp
push
push
push
mov
mov
push
fldcw
lods
mov
gs
call
push
push
push
cmp
sahf
shll
push
inc
call
xchg
and
mov
sbb
test
dec
adc
pop
ret
and
or
sbbl
mov
jmp
mov
test
cli
sub
jne
push
rorl
mov
call
bound
cmp
cmpsl
js
sti
lea
ss
add
xchg
push
push
xchg
xor
verr
fwait
add
mov
inc
push
mov
imul
sbb
in
mov
into
pop
and
int
mov
xchg
subl
stos
mov
or
sbb
add
insl
sub
movsl
sub
pushf
jmp
cmp
movsb
pop
add
mov
dec
repz
mov
cmpsb
sbb
adc
adc
scas
push
xchg
aam
cmp
add
mov
jp
mov
adc
push
loopne
mov
cmc
icebp
jmp
je
xchg
cmpl
pop
and
mov
pop
shrl
test
jp
push
leave
push
out
rclb
xor
xlat
mov
add
sbb
inc
or
jle
stos
or
pop
xor
xor
add
fs
jo
dec
xor
fstl
adc
cmp
xchg
jo
aam
enter
ss
ficoml
loopne
mov
nop
push
int3
dec
sti
dec
test
in
lock
cmpl
pop
sbb
test
xlat
push
jle
add
sbb
repz
scas
add
push
lock
clc
push
aam
xchg
xchg
shrb
or
adcl
sub
inc
dec
and
xchg
pop
xchg
aam
jae
mov
je
loope
mov
aad
dec
pop
call
sarb
xor
cld
sbb
cmp
pop
stos
push
xchg
add
popa
mov
mov
push
sub
and
test
or
mov
jge
push
push
xchg
ret
mov
sbbl
inc
fidivrl
xchg
sub
pop
or
xchg
rolb
jbe
jge
cmp
dec
lods
ss
sbb
rcr
outsl
pop
fdivl
in
lock
stc
adc
inc
add
add
inc
in
aaa
push
insb
or
sub
add
daa
mov
mulb
xor
cmp
subb
mov
test
je
lea
and
in
rcl
int3
pop
xchg
aam
push
pop
imul
inc
push
sbb
push
mov
outsl
mov
pop
add
loopne
aad
dec
aaa
jae
addr16
xchg
pop
rolb
mov
sbb
cmp
jmp
out
mov
sbb
jle
incl
popf
sub
push
cmp
mov
jg
pop
sbb
fadds
and
callw
xchg
jmp
push
mov
push
adc
or
hlt
imul
andb
xor
gs
mov
sbb
mov
mov
testb
insl
ret
adcb
jne
lea
rdtsc
int3
into
stos
or
ja
mov
mov
das
jle
pop
cmp
jbe
outsb
hlt
cli
adc
ljmp
jmp
push
pop
push
sbb
lahf
test
lret
jge
std
cmp
cmp
add
nop
cmpsl
or
cmp
cmp
xor
or
sbb
pop
clc
jne
mov
andl
gs
sbb
outsl
iret
loopne
pop
mov
leave
xchg
add
dec
out
lock
sub
je
dec
mov
or
jmp
or
push
mov
ss
adc
push
push
call
mov
jge
popa
cwtl
lea
mov
aaa
jecxz
push
mov
jmp
jg
stc
adc
sbb
stos
popf
pop
or
popa
stc
add
pushf
inc
and
test
inc
jmp
add
int3
shl
mov
and
dec
jbe
divl
sbb
xchg
mov
mov
cmpsl
sbbl
lock
add
addr16
repz
in
shrl
test
dec
sbb
hlt
cmp
dec
dec
jbe
test
mov
or
jns
inc
jg
dec
shlb
and
fdivrs
add
add
leave
cmpsl
addl
dec
adc
daa
jle
into
xor
ret
jns
testl
jae
cmp
sub
shlb
xchg
push
fildll
push
pop
push
insb
cmp
cmp
xchg
ret
into
adc
and
sbb
in
fidivl
mov
and
ss
loope
push
insb
push
xor
test
shrb
faddl
adc
inc
fstpl
xor
and
fwait
das
push
cwtl
ret
jle
or
mov
mov
lea
rorb
push
or
or
sub
pop
stc
xchg
adc
andb
ret
dec
subl
sbb
cmpsb
dec
xor
rcll
nop
cmpsl
pop
adc
pusha
enter
and
xchg
pop
and
push
inc
dec
or
ret
lods
mov
ret
incl
int
cmp
int
ja
add
or
test
xor
sbbb
stos
adcb
sub
loop
outsl
jne
jle
mov
jg
bound
and
in
divb
inc
mov
aam
push
add
aam
pop
insb
push
mov
daa
push
dec
sbb
ds
mov
and
mov
pop
adc
push
sub
test
subb
jo
cwtl
mov
and
fnstcw
mov
jb
mov
adc
cmc
push
fstps
rorb
popf
mov
sub
cmp
in
sahf
xor
dec
push
cmp
push
fcompl
dec
jnp
ds
adc
bound
aam
movsb
push
push
xor
inc
loope
inc
xor
mov
or
ret
or
cmp
fcoms
inc
orl
mov
mov
ja
pusha
mov
cmp
cmp
sub
ficoms
pop
or
cmpl
leave
movsl
xchg
inc
das
cs
inc
sbb
lock
or
data16
sbb
arpl
aaa
pop
sbb
roll
cld
push
ret
int3
add
shlb
sbb
cmp
loopne
pushl
test
inc
test
sbb
dec
out
aaa
mov
clc
js
pop
fwait
pop
ret
mov
and
mov
cltd
faddl
psubsw
loopne
mov
jmp
pop
add
jmp
mov
in
add
leave
cmp
xor
and
mov
cwtl
add
mov
clc
dec
dec
pop
subb
lea
xchg
or
int3
iret
mov
nop
lock
inc
pop
push
add
das
jl
mov
push
stos
or
adc
jl
xor
jo
pusha
adc
and
xor
popf
pop
jb
roll
mov
push
push
cmp
jb
cmp
cmp
je
inc
mov
inc
inc
jecxz
rcrl
fisubrl
mov
add
lock
push
sbb
adc
loopne
mov
xor
shlb
arpl
add
mov
dec
dec
dec
je
jp
imul
in
xor
xor
das
je
or
mov
fildl
cmp
addr16
je
cmp
jne
mov
sbb
add
xchg
lock
push
push
mov
xchg
xor
push
cmpsb
mov
sub
inc
adc
je
or
adc
ret
mov
shlb
push
lea
popa
sti
incl
inc
cmp
je
sub
inc
jmp
inc
and
xchg
cmp
ficompl
insl
ficomps
mov
pop
mov
or
mov
mov
mov
je
aam
mov
sbb
dec
pusha
mov
inc
adc
adc
loop
lcall
sub
pop
cli
xchg
sub
cld
inc
xchg
cmp
shll
add
insb
outsb
hlt
cmpb
cmpb
cli
mov
push
enter
rcl
ss
hlt
jb
fdivs
lods
cmp
enter
inc
dec
test
nop
imul
push
popa
and
xlat
push
mov
testb
stos
cld
stos
loop
push
test
arpl
and
outsl
sbb
add
das
adc
fsubs
jnp
sub
mov
add
jae
mov
add
shrb
ret
mov
aas
shl
add
jmp
pushf
aas
insb
sti
and
xor
sub
push
fsubrs
cmp
js
fs
jne
xor
aaa
push
cmp
adc
incl
or
push
mov
jmp
outsb
jecxz
popa
dec
shlb
fsub
js
cli
sub
in
or
mov
push
lea
mov
add
and
lret
mov
outsb
push
int3
inc
jg
or
jge
int
int
pushf
xor
and
es
sub
sub
int
idivb
jmp
or
jl
or
adc
decl
test
loopne
pop
jbe
mov
hlt
pop
arpl
pop
and
daa
add
je,pn
test
jne
pop
and
ss
std
sub
jb
loopne
sub
clc
add
xor
clc
pop
inc
and
jae
movb
inc
hlt
xchg
sub
imul
fsubl
add
xchg
data16
mov
shlb
inc
and
push
movsb
adc
mov
mov
adc
ja
out
jae
add
hlt
xor
and
dec
inc
xor
in
bound
cmp
lock
and
jecxz
push
xor
in
add
mov
sbb
push
mov
jae
mov
xor
mov
mov
push
push
mov
dec
xor
sarl
int3
xchg
dec
addr16
popf
push
subb
lea
data16
je
add
lret
jne
sar
nop
and
or
loop
push
adc
inc
sahf
mov
imul
test
jo
add
shlb
sbb
leave
fistpll
in
cmp
stos
lret
push
dec
inc
sbb
enter
ret
xor
or
int
jp
pop
loope
sbb
cmp
mov
cmp
cmp
lods
out
push
or
dec
pop
push
mov
push
xor
pop
xlat
out
inc
and
mov
sbb
cmpsb
loopne
mov
addl
jne
xor
pop
xchg
cmp
jb
sub
jecxz
push
andl
sub
nop
and
jno
ret
nop
pushf
inc
mov
xlat
cmp
sbb
sbb
xor
cwtl
mov
jbe
iret
ret
push
lods
mov
movl
mov
or
xor
push
push
push
fsub
lahf
jbe
or
insb
cli
std
push
mov
xchg
push
mov
movsb
scas
push
loope
mov
ljmp
xchg
jo
add
add
ds
push
aas
rorl
cmpl
aaa
pusha
test
je
decl
mov
xorl
jle
pop
xchg
mov
mov
cmp
outsb
ss
mov
xchg
jo
cmp
pop
xor
cld
mov
mov
mov
cmp
pop
unpcklps
lods
cli
push
dec
lea
addb
jb
pop
sub
sub
pop
push
inc
jae
negl
fbld
jbe
sbb
dec
pusha
mov
ret
sahf
filds
sti
inc
inc
fwait
inc
ficoml
pop
inc
xchg
push
sbb
push
mov
out
loope
cmp
rolb
int3
cmc
adc
notl
movsl
xchg
xlat
loopne
sbb
xchg
jnp
dec
les
scas
cmp
pop
je
test
sbb
inc
inc
jmp
nop
subb
cmp
fisttpl
shll
adc
inc
pop
dec
sbb
popf
or
or
popl
and
cld
pop
arpl
push
xchg
icebp
in
clc
mov
add
imul
add
pusha
cmpl
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
lcall
movl
push
int3
test
ja
add
mov
pusha
adc
push
ret
or
sti
pusha
jb
jb
andl
decl
push
cltd
out
roll
dec
xchg
xorb
push
push
rorb
popl
mov
hlt
sti
dec
cmp
xchg
sarb
test
jecxz
das
push
and
gs
enter
or
or
ljmp
pop
add
xchg
sti
mov
mov
sub
lret
loope
jbe
jbe
push
push
popf
test
add
jb
xchg
xchg
pop
and
std
xor
push
or
push
sub
push
frstor
pop
insb
mov
frstor
cmpsb
sbb
or
xchg
or
pusha
pop
xchg
fs
in
mov
xchg
push
adc
inc
mov
lcall
xchg
out
and
cmp
movb
movsl
fldl
inc
aam
or
pop
add
jecxz
dec
sbb
xchg
push
cli
and
sbb
clc
add
xchg
shlb
testl
jne
or
pop
cwtl
cmpl
dec
push
xor
xor
imul
lret
add
dec
mov
ds
aad
outsl
xor
insl
jnp
das
in
imul
lret
sbb
loopne
add
dec
scas
into
cmpl
movsb
fimull
sti
mov
cmc
push
add
add
test
inc
fs
xchg
fcmovu
nop
dec
orl
jg
or
out
jmp
push
aaa
rolb
inc
je
fstps
cmp
out
jge
mov
mov
or
jne
dec
mov
jne
push
push
lret
scas
cmp
mov
add
imul
mov
push
andl
std
test
dec
cmpsl
or
adc
push
adc
ficoml
repnz
out
add
adc
mov
xchg
jne
or
mov
cmpsl
incb
fwait
push
loopne
push
fiaddl
mull
push
aas
je
cmp
dec
movsl
loope
push
pop
jne
aam
xor
jne
push
imul
in
clc
inc
pop
jne
pop
call
pop
lret
test
scas
add
insl
in
xor
repnz
push
jle
pop
jne
jmp
sbb
pusha
cltd
lret
sub
mov
mov
sbb
mov
xchg
jg
inc
pop
jmp
jnp
or
fst
or
in
or
and
in
roll
sub
mov
popf
jbe
je
sti
mov
insl
mov
imul
adc
int
sub
sbb
sub
jg
sbb
aam
mov
xlat
fstpt
inc
es
mov
sub
decb
pop
dec
push
mov
add
cmpl
lock
xchg
bound
and
rcr
pop
sbb
pop
cs
lret
pop
fs
push
lods
or
inc
decb
out
cmpb
or
or
jmp
mov
push
add
push
adc
adc
or
push
cmp
std
rolb
std
push
mov
adc
mov
repz
push
popa
fildll
movsl
aas
add
inc
arpl
mov
pop
xchg
sub
mov
push
pop
push
push
lock
xchg
jb
pop
push
push
pop
pop
pop
cs
lret
pop
pop
pusha
pusha
fs
pop
or
adc
fmuls
push
cmp
ret
push
add
dec
push
inc
and
xchg
pop
lods
add
push
insb
add
dec
and
in
out
cwtl
insl
mov
and
jg
cwtl
sbb
jmp
push
inc
mov
adc
push
adc
insl
inc
sbb
adc
popa
cmc
lds
sbb
or
inc
adc
sub
jns
xchg
int3
adc
sub
xorb
mov
je
insb
or
or
mov
out
mov
or
xor
cmpsb
inc
loope
es
jmp
and
ljmp
push
sbb
sub
loopne
inc
push
lret
cli
jp
push
push
jecxz
out
pop
jmp
shr
mov
je
ja
popa
inc
into
or
sti
and
and
imul
add
xchg
and
adc
or
push
fwait
sbb
sub
jl
and
aam
repz
mov
mov
and
cmpsb
insb
xor
sti
es
sti
cmp
addr16
pop
push
mov
pop
movsl
mov
mov
mov
out
pop
mov
mov
inc
paddd
push
xor
xlat
cmpsl
xchg
inc
cmp
cmp
data16
je
daa
pushf
test
lret
cmp
dec
cld
outsl
add
dec
add
dec
add
ss
sbb
add
in
lret
mov
pop
sbb
ljmp
add
adc
adc
lret
je
jbe
add
test
nop
mov
aaa
sbb
and
pop
sbb
pop
mov
mov
mov
add
pop
mov
test
and
pop
insb
loope
out
sbb
dec
add
es
xchg
adc
into
sbb
jbe
push
adc
ds
roll
jae
or
loopne
je
pop
pavgb
and
add
in
cmp
lock
cmp
jne
add
mov
or
insl
fdivl
xchg
scas
pop
jbe
jo
cmp
adc
mov
test
bnd
sbb
ret
add
es
imul
cmp
sub
xor
bound
addl
or
incl
cmp
adc
push
adc
xor
sub
mov
mov
push
xor
mov
imul
in
sub
or
mov
and
mov
cmp
in
je
divb
xchg
movsl
push
mov
jle
mov
or
inc
cs
data16
jo
jns
mov
sbb
jmp
and
jne
xor
inc
cmp
lea
adc
pop
loope
inc
hlt
mov
lock
hlt
push
je
mov
mov
aaa
add
adc
pminub
test
add
push
rcl
xor
in
pop
enter
movsl
out
pop
jb
les
push
sbb
mov
jecxz
mov
jecxz
mov
fmuls
call
or
jg
outsl
mov
and
add
clc
orb
fadds
clc
fimull
gs
mov
mov
orl
int
cmpsl
cmp
and
xchg
mov
cmpl
adc
into
cmpsb
pop
and
pop
inc
cmp
das
je
add
call
mov
out
adc
adc
add
pusha
scas
mov
flds
cmpb
jns
add
adc
and
add
lods
and
mov
movsl
movsw
jecxz
adc
xchg
and
test
add
or
subb
sub
out
inc
push
push
lds
fsub
push
adc
stos
mov
push
pop
sbb
push
adc
aaa
add
pop
push
test
pusha
es
adc
je
adc
push
popa
mov
adc
inc
jmp
jnp
or
jmp
sub
test
dec
js
pop
orl
push
mov
add
test
loopne
arpl
or
js
out
test
test
xchg
sbb
and
add
jo
insb
lock
xchg
add
clc
mov
loop
and
sbb
inc
pop
push
lret
orb
mov
inc
xor
xor
or
rcll
dec
jne
jns
cmc
rorb
js
enter
sbb
and
adc
lds
in
mov
jle
shr
mov
add
adc
lock
pop
rorb
adc
lret
rolb
dec
xor
leave
ja
fsubrs
call
and
pusha
out
inc
loopne
cmp
push
sub
loop
aam
addl
ficomps
addb
nop
rorl
or
push
cmp
dec
pop
pushf
cmp
jbe
fsubrp
push
mov
push
xchg
mov
daa
inc
mov
xchg
test
test
das
xchg
inc
cmp
jl
jmp
stos
test
mov
dec
add
cmpsb
stos
cmp
sbb
ss
ret
mov
mov
stos
and
int3
insb
jmp
cmp
fmull
inc
xor
fidivl
cmc
jno
lret
into
jne
lret
mov
sub
shl
push
insb
xor
lea
mov
pusha
lahf
adc
pop
sbb
dec
loop
push
and
adc
or
push
rep
lcall
aam
adc
or
cmp
movb
mov
jmp
aaa
loop
lea
inc
push
cmc
cmp
jns
and
inc
out
cs
test
push
push
xor
aaa
lods
or
mov
or
inc
add
imul
sub
lods
pop
fisubrl
push
dec
gs
int3
or
mov
or
jl
and
sbb
xor
test
mov
add
hlt
push
insb
push
out
pop
cmpsl
into
mov
popf
fs
loope
aas
in
sbbb
pusha
aam
pop
xor
out
cmp
adcl
jecxz
inc
mov
and
dec
je
inc
aad
es
add
mov
xlat
mov
sbb
or
or
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
fs
fdivs
cmp
inc
ljmp
cmp
push
daa
inc
and
mov
sub
fimuls
clc
add
fcoml
ret
hlt
xor
subl
lods
inc
shlb
inc
dec
nop
push
jl
adc
loopne
mov
mov
loop
pop
xchg
sarb
jns
ret
pushl
sub
mov
push
iret
out
ja
jae
sbb
cmpsl
jo
movb
cltd
jo
clc
mov
jo
repz
pop
into
lcall
jne
jg
inc
cltd
and
push
les
lcall
push
inc
inc
xor
aam
push
in
ljmp
iret
mov
mov
outsb
jno
lods
dec
xor
movsb
js
ret
call
dec
loopne
popa
outsl
lock
or
and
adc
sub
sbb
adc
sub
add
pop
sbb
sub
or
push
xchg
inc
and
cmp
jo
repz
or
sbb
xchg
jbe
sub
ja
pop
push
pop
cs
mov
insb
lock
jo
mov
inc
jmp
fs
or
andl
push
cmpsl
mov
stos
cmp
sahf
cmpsb
add
dec
or
ret
ret
add
sub
push
pop
loopne
jns
loopne
popa
jle
push
lds
xor
data16
or
ds
push
leave
faddl
push
xchg
rcrb
adcb
add
inc
cmpsb
iret
or
adc
fisubl
push
mov
dec
xor
test
and
jne
xchg
cmpsl
or
dec
sahf
out
sbb
incl
adc
ja
aad
sbbb
and
xlat
mov
push
pop
push
adc
or
fwait
add
pop
inc
sbb
sbb
add
or
dec
cmp
inc
push
lock
arpl
pop
movl
fimull
push
mov
add
push
stos
test
dec
sbb
xor
xchg
shll
popl
test
je
pop
pop
cmp
add
loopew
add
sbb
and
or
ljmp
arpl
add
cmp
inc
loope
cmpl
dec
jo
xchg
dec
jnp
jns
lcall
jno
loope
jnp
lds
pop
dec
mov
sub
inc
js
daa
mov
push
xor
fstps
fidivrl
movsb
stos
ret
rorl
or
or
xchg
adc
mov
or
rolb
or
inc
and
xchg
mov
xlat
mov
xor
loopne
fadds
cmp
repnz
mov
mov
loope
movl
sub
mov
shrl
mov
pushf
jge
add
nop
popf
insb
pop
retw
fstpl
idiv
or
sarb
or
lds
push
and
in
sarb
subl
sbb
sub
cmc
adc
cmp
or
mov
cmp
and
inc
sbb
inc
and
call
lock
xor
icebp
and
adc
shl
fistpl
or
adc
jnp
cs
and
out
mov
jae
xchg
popa
das
jecxz
mov
leave
pop
sbbb
je
ficoml
popf
add
and
and
add
jns
sub
xor
adc
cs
or
xchg
jb
test
push
xchg
fcmovnu
push
pop
mov
fisttpl
adc
pop
ds
inc
ret
push
push
fdivl
sti
inc
or
and
inc
aad
cmp
xchg
ficoml
mov
lcall
sub
imul
mov
and
push
ss
iret
pop
adc
fs
jne
inc
std
fidivrs
adc
subl
jno
mov
mov
pop
or
push
sbb
fnstcw
movsl
adc
xchg
add
mov
mov
push
xorb
adc
sbb
mov
or
jmp
and
leave
add
std
and
pop
popa
dec
fld
mov
daa
movsb
pop
das
push
shrl
jl
add
and
popf
xchg
jp
adc
cld
shll
cmpl
add
adc
and
add
in
push
dec
adc
sub
push
rcrl
adc
jne
adc
dec
jnp
shll
dec
push
int3
mov
and
xor
imul
mov
pushf
js
cmpsl
lods
or
ljmp
arpl
dec
cwtl
dec
lods
or
inc
mov
out
inc
addr16
lds
loope
sbb
dec
adc
xor
insb
stc
mov
push
jmp
sbb
rolb
inc
fsubrl
push
sub
mov
lock
push
loop
nop
sub
jmp
dec
xor
mov
jmp
adc
push
lret
jbe
sbb
negl
movsl
rep
scas
jge
bound
mov
mov
movsb
cmpsb
jo
adcb
sub
clc
addl
fildll
fcoms
rcrb
sbb
cli
cmp
adc
inc
jbe
adc
pushf
jmp
divl
jle
pop
add
push
enter
push
sahf
inc
loopne
or
mov
add
fbld
sub
addl
sti
push
pop
sahf
pop
jbe,pn
fdivl
ret
dec
insb
ret
push
mov
xchg
insb
sbb
mov
je
mov
jo
sub
ficoml
mov
insl
and
mov
enter
mov
push
jg
cmp
jne
cmp
push
fsubr
adc
std
nop
outsb
and
mov
mov
jo
sbb
into
rcrl
add
jo
and
imul
pusha
xchg
mov
insb
mov
cmp
add
adc
adc
fstps
mov
hlt
dec
pop
incl
cmp
and
loopne
cmp
pop
cmp
ret
cmp
jmp
mov
fs
inc
mov
push
nop
addr16
and
push
mov
and
adc
aam
push
push
pop
arpl
xchg
cmc
test
or
lods
stos
movnti
lds
push
xor
cltd
cltd
push
or
mov
jmp
inc
cs
fwait
arpl
cld
mov
or
bound
mulb
pop
mov
mov
mov
and
mov
xchg
ljmp
add
lock
push
add
xor
lods
adc
xor
aam
mov
mov
xchg
jne
aad
fnsave
popf
cmp
xchg
sbbb
and
pop
mov
or
xor
cmc
mov
add
cmp
mov
hlt
notb
push
leave
sub
cmp
mov
sbb
sub
add
or
das
movsb
push
pop
pop
mov
fmull
push
push
mov
adc
push
scas
inc
mov
jle
sbb
jb
jnp
mov
ja
testl
orb
inc
pop
push
jbe
jo
mov
es
movsl
aas
xor
or
jp
cmp
inc
jbe
jb
pop
addr16
jmp
push
loopne
hlt
jp
ds
enter
hlt
jne
je
jb
sub
sub
add
out
xor
ljmp
stos
mov
inc
shlb
ljmp
cltd
jne
loopne
fadds
pop
sbb
cmp
lods
sub
mov
fildl
jmp
and
cmc
test
out
ret
xor
pop
xorb
je
push
sub
andl
add
adc
push
adc
xchg
pop
adc
mov
dec
sbb
push
and
mov
imul
or
adc
test
adc
adc
dec
xor
sub
and
stc
enter
arpl
or
out
test
xchg
cmc
shll
lret
sub
neg
lods
cld
out
push
pushl
push
add
inc
sub
data16
add
neg
sbb
inc
push
imul
icebp
jp
cmp
cld
mov
mov
jnp
xchg
push
clc
mov
lret
ss
sar
aas
mov
jp
add
dec
fisttps
adc
loop
or
pushf
loope
push
hlt
shl
sub
jge
or
push
adc
xchg
or
xlat
arpl
mov
mov
inc
mov
jo
lods
negb
imul
inc
cs
popf
adc
xor
adc
xchg
dec
cs
jb
in
adc
adc
adc
pop
das
add
mov
push
push
cli
cmpw
je
cmp
push
fwait
sub
push
lods
out
mov
mov
xor
imul
xchg
add
test
add
outsl
xor
or
in
jo
mov
sarb
lret
les
pop
add
test
sti
pop
ljmp
in
cmp
jl
inc
and
lahf
cmp
das
jmp
cmp
jle
add
xor
jecxz
cmp
bound
cmpsb
adc
cwtl
insl
adc
enter
out
movsl
pusha
es
lods
push
mov
in
mov
mov
andb
mov
pop
data16
iret
xor
stos
sbb
xchg
dec
movsl
ret
pusha
insb
in
pop
sbb
daa
lret
imul
mov
mov
or
xor
sbb
mov
sbb
mov
xor
xor
pushf
adc
out
jo
adc
pop
mov
cmp
inc
in
aas
lods
mov
jb
inc
rcrl
dec
invlpg
popa
lea
addb
mov
push
sub
xchg
xchg
xchg
fcoms
push
mov
mov
sbb
add
je
iret
pop
mov
inc
pusha
outsl
popa
mov
rcr
stos
cmp
mov
and
mov
inc
or
and
adc
ret
lods
pop
test
fnsave
testb
or
outsb
je
lea
mov
dec
test
inc
jo
cmpb
lea
ret
xchg
mov
mov
sbb
cltd
pop
jne
out
sbb
mov
sub
inc
mov
mov
fidivrl
rclb
dec
lahf
mov
scas
hlt
iret
push
mov
lret
mov
mov
mov
test
ljmp
cmp
mov
or
pop
add
ja
push
loop
mov
pop
xchg
jmp
jmp
cmp
sub
sbb
call
movsb
sub
or
test
push
mov
repz
lcall
out
mov
cmpb
push
and
jo
mov
into
leave
cmp
ret
pop
lock
xchg
pop
mov
in
adc
test
mov
xor
pop
dec
add
dec
pop
add
es
out
test
or
push
cmpsl
iret
push
inc
test
pop
mov
inc
adc
xor
add
fidivl
mov
mov
pop
push
lods
cmpb
mov
and
sbb
mov
adc
fstps
xor
cmp
movsb
adc
stos
add
xor
or
jle
push
test
sub
test
pop
or
out
stc
daa
popf
and
gs
or
push
and
xchg
push
outsl
jp
xor
mov
test
fcoms
clc
pop
xchg
or
sub
rorb
xchg
shrb
adc
or
dec
jno
mov
nop
mov
or
in
xor
dec
adc
pop
cmpsb
lcall
adc
inc
aam
aaa
or
repnz
test
aad
js
xchg
inc
pop
push
sbb
xor
add
or
xchg
or
movsb
pop
out
pop
popa
lea
add
push
out
jb
loope
pop
push
xchg
lock
jno
mov
inc
test
data16
push
cmc
pop
dec
fs
repz
add
inc
jg
inc
inc
dec
adc
roll
push
push
mov
cmpl
mov
xor
push
mov
sbb
adc
or
dec
xchg
mov
add
cld
ljmp
push
jo
or
and
rorl
mov
cmp
or
int
pop
sarl
jmp
clc
lods
mov
xor
lock
jp
xor
adc
pop
inc
out
test
jno
lcall
in
psubw
mov
and
xor
sbb
sbb
cmc
add
dec
jmp
add
sbbl
sub
push
ja
and
sbb
and
aam
dec
fs
mov
rol
inc
pop
xchg
pop
push
rcll
sbb
in
mov
jl
fs
iret
pop
xchg
bound
or
jo
push
pop
xor
bound
xor
std
dec
jmp
dec
stos
xchg
jb
int
mov
stos
mov
shufps
call
repnz
mov
add
sub
loop
or
fadd
lea
dec
loope
inc
mov
insl
or
test
insb
or
or
outsb
adc
dec
sarl
cltd
push
mov
pushf
mov
data16
test
jecxz
in
push
arpl
lret
cmpsl
movsl
hlt
cmpsb
lea
add
loop
mov
addr16
xchg
jns
es
xor
inc
addr16
pushf
roll
js
xor
adc
inc
nop
push
dec
clc
test
add
mov
roll
dec
xchg
push
jmp
ds
leave
pop
lcall
cmp
mov
in
imul
or
std
adc
push
aad
mov
adc
imul
into
loop
add
mov
inc
adc
pop
je
incl
rorb
xor
cmp
add
push
jecxz
or
xor
lds
dec
bound
and
mov
mov
add
add
fcoml
or
inc
and
adc
cwtl
xchg
mov
adc
and
and
cld
sbb
or
add
add
or
pop
xor
push
sub
shlb
popf
add
jne
inc
adc
fcmovne
xchg
ljmp
or
mulb
xchg
enter
push
sbb
clc
mov
mov
or
insb
rol
sub
and
dec
icebp
cmc
or
push
jmp
repnz
fnstenv
pop
cld
inc
rclb
and
cltd
fisttpll
in
mov
add
into
jae
lea
jmp
cmpl
or
inc
cmp
jbe
mov
cmp
pusha
std
mov
xor
jnp
in
cltd
pusha
mov
or
mov
pushf
sub
sbb
and
push
mov
mov
pop
xor
dec
or
sub
adc
add
lock
mov
push
jnp
add
pop
jo
stos
pop
hlt
jb
imul
sbb
pusha
adc
push
js
pusha
add
lods
push
xchg
xchg
icebp
xchg
fs
add
pop
sub
mov
mov
jb
testl
adc
xor
sub
cmp
js
xchg
add
ljmp
pop
pop
add
adc
push
ret
jb
insb
movsb
dec
push
pushf
lods
cmp
inc
test
test
gs
mov
or
mov
cmp
mov
jo
jcxz
ljmp
nop
and
test
sub
add
loop
test
nop
dec
orl
pop
xchg
xchg
add
in
add
mov
mov
arpl
out
js
add
stc
je
dec
mov
or
sarb
pushl
movsb
mov
xchg
adc
bswap
inc
fadd
pusha
pop
fisubrl
jecxz
nop
cld
dec
adc
xchg
add
pop
jp
int3
jmp
xor
mov
add
mov
test
sbb
shr
mov
push
addl
pop
and
and
mov
cmp
mov
cmc
push
jl
inc
std
cmp
pop
adc
inc
xor
add
dec
enter
add
inc
pop
adc
je
test
ret
mov
push
push
and
or
in
rcll
fldl
pushf
mov
pushl
push
xchg
add
inc
test
outsl
dec
lock
mov
jmp
inc
mov
in
mov
xchg
push
and
mov
or
push
test
jb
sar
add
add
lahf
and
inc
mov
push
adc
jnp
pop
add
or
jnp
cmp
fadds
cmp
push
cmp
mov
jno
add
or
outsb
mov
push
or
je
test
scas
xchg
data16
xchg
clc
jne
mov
pop
negb
cmp
dec
or
sub
imul
sub
cld
cmp
adc
test
stos
testb
and
pusha
mov
mov
pop
push
clc
hlt
hlt
loop
mov
or
es
cli
xchg
pop
add
jbe
pop
xor
cmp
call
add
sbb
fxtract
jne
in
inc
pop
push
js
fistl
add
clc
sar
sub
jne
mov
pop
lods
push
mov
sbb
fsubs
popa
dec
test
mov
scas
out
or
ja
push
cmp
adc
inc
scas
push
jo
mov
xchg
lahf
ja
addl
test
pop
xchg
dec
sbb
inc
mov
pop
pop
pusha
lods
lock
cs
xchg
mov
and
mov
push
hlt
neg
sbb
and
bnd
inc
sti
mov
push
sub
push
adc
push
les
ret
and
jge
test
orb
js
decb
addb
rolb
and
mov
fistpl
adc
je
or
into
cmpsl
dec
popf
fnsaves
adc
call
pop
sub
jge
add
mov
jno
cmp
jbe
or
jne
add
mov
sarb
hlt
add
movsb
add
push
xchg
ficompl
xchg
popa
inc
add
xchg
jmp
pop
jl
popa
shrb
add
cld
mov
inc
leave
fs
out
jns
jp
sbb
or
pop
pop
inc
stos
xor
mov
aad
sub
push
jne
mov
loope
mov
in
js
dec
inc
cmp
out
pop
imul
mov
xchg
push
jmp
or
in
mov
sub
add
data16
xor
and
adcb
mov
rclb
clc
repz
shlb
or
mov
jnp
add
mov
jnp
sti
push
ret
popa
and
xor
mov
popf
test
out
stos
std
adc
inc
in
push
jb
or
pop
push
or
es
mov
jl
roll
mov
lcall
mov
dec
stos
dec
out
jbe
add
pusha
sub
sti
loope
ja
jg
sub
sbb
add
hlt
inc
shr
add
push
or
testl
jbe
andl
mov
push
outsl
mov
subl
inc
xchg
mov
stc
into
ds
fs
inc
cmovs
or
movsl
clc
js
pop
push
add
jmp
add
js
ljmp
daa
lods
rcll
xor
popf
aas
adc
movsb
cmp
push
adc
jbe
idivb
sbb
pop
xor
or
cmpl
add
lret
xchg
je
push
jno
vmread
xor
call
sbb
test
mov
push
cmp
push
mov
addr16
dec
sub
add
cmpsb
xor
xchg
lock
dec
fimull
sbb
jmp
mov
xchg
ljmp
xchg
push
dec
lahf
mov
fisttpll
cmp
addr16
je
mov
sbb
sub
pop
loopne
xor
outsl
xor
or
or
and
out
jb
and
cmp
adc
cmpsb
jl
jb
push
jae
add
or
enter
inc
add
sub
and
inc
and
sbbl
mov
out
cmp
dec
adc
inc
cmp
cmpb
test
fcmovbe
cs
and
push
stos
test
jne
add
sbb
cs
ss
movsb
mov
std
cmp
xchg
mov
repz
cltd
push
adc
sub
mov
push
lcall
ljmp
call
jo
cld
cmp
inc
sbb
and
nop
and
shrl
push
mov
data16
dec
pop
sbb
sbb
shlb
add
xor
imul
mov
call
sub
lea
es
sbb
loopnew
mov
movsl
mov
pop
xchg
and
cmpsl
roll
je
fldenv
sbb
cmpsb
push
ucomiss
test
dec
ja
or
xor
inc
scas
xor
lods
rol
and
mov
xchg
es
xlat
mov
in
addr16
and
rcr
test
mov
gs
pop
xor
and
mov
inc
jae
push
and
and
mov
inc
cli
xor
or
sub
lock
test
and
fcoms
leave
and
pusha
cmp
sbb
xchg
mov
jno
or
adc
mov
inc
test
clc
jge
popf
xchg
mov
in
popf
or
cmp
aam
mov
fcomps
add
and
adcb
sbb
jle
jnp
xchg
sub
xchg
sub
add
repnz
mov
inc
loop
add
cmp
aas
mov
sbb
cmp
jge
mov
ret
orb
jle
cmp
push
cli
and
ja
xor
ds
out
jbe
lods
mov
std
mov
adcl
cmpsl
sbb
sarb
mov
pop
lods
ret
mov
xor
pop
sub
pop
addr16
out
mov
mov
inc
and
mov
enter
sbb
pop
scas
pop
lea
filds
adc
add
fldl
fistpl
cmp
popf
pushf
jnp
sbbl
or
imulb
cmp
test
jns
and
test
dec
adc
rorb
repz
jae
lea
ja
cmpb
mov
loopne
jne
fidivl
cmc
mov
lea
lret
addl
into
es
dec
std
pop
outsb
test
cs
or
scas
add
std
cld
cmp
mov
push
dec
or
pop
push
xchg
mov
je
dec
and
jno
xor
je
shll
aam
xor
jae
add
ret
jmp
push
inc
sub
dec
and
mov
mov
push
xchg
lods
push
inc
push
sbb
push
adc
add
out
ret
mov
mov
xor
addb
test
mov
jnp
cmpsb
pop
push
sbb
adc
sbb
out
mov
or
je
mov
rorb
outsb
mov
pushl
adc
adc
adc
fisubrs
imulb
add
inc
mov
sub
adc
xor
dec
and
sub
inc
push
lods
dec
insb
and
cmp
mov
out
aas
jne
lret
sbb
pop
push
lea
cmp
pop
movsl
sub
popf
cli
stos
add
cmp
dec
in
or
mov
fisttps
cmp
or
fsub
add
dec
or
add
xor
fistl
inc
pop
insb
xor
xchg
inc
dec
lahf
xor
popf
shl
test
roll
mov
scas
imul
add
cmp
mov
and
ret
adc
insl
dec
inc
cmpl
adc
pop
push
in
dec
xrelease
inc
and
jb
das
or
mov
xor
insb
add
add
jnp
fnstsw
adc
pop
fsts
push
je
dec
add
adc
xor
cmp
les
adc
adc
add
shl
std
incl
stos
push
add
sbb
pusha
xchg
mov
xor
addl
orb
pop
add
cmp
cs
mov
xor
jae
mov
inc
adc
and
dec
ret
push
jae
addb
sub
sbb
je
add
inc
push
bound
sbb
stos
je
cmp
jg
ja
pop
dec
pop
ret
inc
je
adc
or
and
fdiv
loopne
pop
out
adc
fisttps
leave
mov
fdivl
cmpb
pop
sar
add
add
out
push
cmp
cmp
jbe
push
aam
clc
cmp
lea
sub
adcl
pop
inc
and
cmp
mov
ljmp
fdivs
sub
adcb
xchg
out
push
sti
mov
pushl
out
insb
neg
jne
test
call
out
dec
mov
add
cmc
dec
in
add
jbe
sti
sbb
xor
dec
push
adc
rcrb
dec
mov
pop
repnz
push
xchg
call
lahf
addb
cs
adc
cmp
cmc
push
lea
enter
cmc
sub
lret
and
push
mov
xor
push
adc
fs
aad
xor
mov
sub
inc
pop
insb
into
push
pop
insb
adc
leave
sbb
imul
cld
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
js
add
lds
add
div
aaa
loop
mov
lret
ja
mov
ds
mov
jo
sahf
pop
pop
and
push
mov
cmp
sub
push
fdivrs
shr
inc
or
add
es
jb
adc
mov
scas
pop
and
xchg
inc
sbb
and
clc
mov
xor
cmc
imul
push
cmpb
mov
nop
test
push
or
cmp
arpl
addr16
cmpsb
and
imul
imul
cwtl
adc
test
inc
pop
loop
ret
jp
xor
dec
push
or
jbe
dec
xor
repnz
push
mov
add
call
lea
or
fdivr
or
xchg
xor
mov
dec
subl
push
cmp
call
pop
and
imul
cmp
sub
movb
or
pop
cmp
sbb
loop
adc
cmpsl
cmp
push
addr16
mov
push
push
sti
orb
dec
js
add
inc
pop
xchg
pop
andl
pop
mov
nop
xor
jbe
cmp
js
push
ret
sar
sub
sbb
or
dec
cld
test
pop
pushl
mov
scas
jg
cmp
sbb
sbbl
ret
daa
and
pop
dec
add
hlt
addl
sbb
mov
mov
pcmpgtb
unpcklps
and
mov
add
xchg
lods
mov
orb
xchg
gs
xor
mov
inc
scas
call
cmp
rolb
mov
adc
addl
dec
call
sub
es
mov
push
in
or
and
xor
dec
icebp
mov
pop
sub
mov
mov
inc
push
xchg
or
cli
int
fistpl
or
or
loopne
push
push
mov
stos
or
mov
and
mov
pushf
pop
sub
mov
sub
inc
hlt
push
pop
imul
cmp
jl
xchg
mov
push
lret
jo
push
mov
mov
mov
rcl
push
add
leave
add
lcall
bound
jne
les
in
ja
push
push
rcll
jne
push
push
hlt
push
ret
mov
adc
movsl
jge
clc
movb
mov
add
adc
mov
cmpsb
mov
cmp
imul
mov
mov
pusha
insl
jg
or
in
push
mov
and
inc
sti
and
addb
cli
add
adc
or
aam
mov
dec
jg
or
push
aam
push
stos
push
mov
fmuls
gs
fimuls
cmpl
pop
jo
and
adc
adc
sub
mov
mov
push
or
xchg
or
dec
or
lock
popa
lock
mov
call
push
mov
cmp
cmp
leave
push
outsb
sub
xlat
cmpsb
xchg
fcoms
or
imul
inc
testl
push
xchg
pop
fldenv
mov
cmp
mov
outsl
xchg
jnp
sub
xchg
adc
cs
test
push
cmp
sub
pop
mov
aam
in
xchg
mov
and
inc
jnp
cmp
fwait
ret
mov
pop
test
rorb
daa
out
jnp
xor
test
mov
push
pop
call
dec
js
inc
movzwl
xchg
incb
test
je
test
xchg
or
jo
mov
cmp
push
pop
push
mov
rorb
and
popa
xor
push
lds
jmp
js
push
or
rcll
sbb
mov
push
popa
cmp
and
cld
or
push
clc
sbb
push
mov
adc
daa
fdivrl
sbb
daa
push
adc
loop
cmp
in
fimuls
adc
mov
psrlq
mov
jmp
pop
and
dec
fbld
push
jecxz
sbb
adc
xor
pusha
or
mov
js
fistpl
jb
and
push
inc
lahf
add
push
mov
adc
mov
sbb
orb
xchg
rcrb
pop
adc
cmp
int
sub
sub
roll
add
pop
fstpl
mov
sub
dec
notl
jp
outsb
jo
or
pop
sbb
add
fcomps
rcr
push
cmp
or
push
mov
lret
lcall
popf
shrl
nop
add
movl
pop
mov
or
or
adc
jl
sbb
mov
fs
inc
mov
xor
pop
jle
es
dec
ffreep
and
lahf
gs
mov
add
iret
dec
sbb
repz
pushf
in
repz
add
sarl
cmp
mov
xchg
xchg
int
lock
dec
clc
test
xor
xor
add
sbb
testb
add
fadds
sbb
sub
fidivs
mov
push
and
xor
dec
inc
push
ss
mov
cli
jp
js
lock
pop
das
dec
daa
jge
adc
pop
ret
js
cmp
mov
mov
addl
mov
sub
jecxz
sti
xor
add
jl
subl
popf
cmp
or
ss
mov
ljmp
add
add
sub
pop
and
jne
movsl
ljmp
mov
arpl
dec
movsb
or
or
lock
sub
push
movl
pop
dec
add
inc
or
mov
dec
mov
jmp
inc
rcll
ja
loope
sbbb
out
add
js
repnz
fstp
push
aad
sub
fldl2t
push
dec
push
push
dec
push
cmp
sub
inc
inc
pop
hlt
je
js
push
sbb
mov
fs
cmp
pop
push
and
mov
int3
into
jmp
into
out
push
loope
xchg
add
xor
add
xor
cli
mov
mov
push
mov
je
adc
sbb
das
outsl
push
xor
pop
test
dec
inc
decb
test
sub
in
jl
mov
inc
mov
imul
push
jne
or
test
lea
dec
or
stos
ss
stos
inc
sub
dec
dec
jns
adc
rolb
jae
iret
push
shrb
scas
mov
andb
adc
rcl
cmp
fsubs
inc
add
jmp
push
orl
add
xor
lcall
faddl
dec
in
xor
cmp
cmp
cltd
test
jle
sub
xchg
test
dec
ret
or
push
addr16
mov
movsl
xchg
cmp
add
insb
xlat
sbb
jle
add
aam
mov
add
test
xor
or
sbb
add
loopne
adc
and
push
sub
sub
dec
enter
jne
and
mov
imul
xorb
gs
add
gs
dec
push
xchg
sbb
inc
push
xor
ret
lcall
xchg
mov
pushl
loopne
test
pop
mov
sarl
sbb
pop
push
xchg
test
sbb
sarl
push
cmp
rorl
ficoms
jnp
sub
sarl
push
lods
xlat
ret
aaa
gs
sarl
inc
adc
xchg
js
push
push
dec
enter
push
jecxz
xchg
sub
add
add
daa
dec
sbb
pop
cmp
push
pop
push
clc
mov
add
rorb
popf
les
ffreep
test
add
jmp
xchg
xor
rcll
shl
inc
or
rcll
dec
cmp
mov
cmp
sbb
push
jne
push
push
leave
lret
int
leave
js
jne
adc
jge
fcomps
mov
push
mov
into
jne
rcll
mov
mov
popa
sarb
loop
or
add
dec
pop
push
pop
push
pop
lahf
cmp
jmp
lea
mov
push
or
shlb
fmul
sbb
in
xchg
or
xor
cld
negb
popa
inc
add
rol
mov
mov
pop
fisttpll
push
push
xchg
sar
jbe
ja
movsb
inc
mov
and
jne
jo
xor
cmp
sub
or
sub
xor
push
jge
sti
ret
mov
or
mov
lea
xlat
adc
push
or
or
mov
sbb
sahf
inc
push
imul
jae
scas
lcall
mov
fbstp
fmul
pop
mov
jg
ds
icebp
mov
pop
pushf
pop
push
push
mov
insl
icebp
push
push
rcll
cmp
test
and
jmp
adc
adc
mov
or
inc
addr16
and
les
pop
xchg
xchg
jo
nop
push
dec
aam
or
cld
push
push
ror
dec
xchg
test
add
inc
sbb
fs
rolb
push
jne
mov
cli
or
pop
sub
sbb
imul
inc
mov
dec
repz
push
je
xor
outsl
adc
fisubs
sbb
dec
insb
jne
pushw
mov
or
outsb
or
adc
adc
cmp
inc
xor
add
jo
std
and
mov
or
in
push
cmp
sbb
sub
popf
and
aam
mov
xor
outsl
movsl
mov
insl
loopne
adc
add
sub
sub
xchg
cmp
jmp
xchg
or
jnp
icebp
sbb
push
cmp
cmp
mov
cmp
jl
mov
or
out
lret
les
mov
push
xor
ds
push
sbb
push
hlt
push
jno
testl
clc
and
sbb
adc
dec
outsl
push
push
adc
test
vpsubb
push
out
stc
mov
imul
adc
lea
sbb
sub
loopne
pop
gs
icebp
mov
push
mov
mov
lea
aam
pop
dec
test
cmp
or
mov
mov
sbb
inc
mov
add
mov
or
nop
pop
leave
add
mov
push
push
daa
sbb
outsb
push
in
pop
sub
or
add
add
xchg
nop
outsb
cmpsb
stos
movb
xchg
add
test
gs
xor
mov
mov
add
mov
adc
xor
sub
or
cmp
push
pusha
shll
jo
xor
mov
and
xchg
mov
xchg
cwtl
or
mov
enter
dec
inc
in
sub
movsl
js
imul
mov
scas
sub
dec
xor
stc
push
adc
mov
adc
and
nop
in
jle
movb
sbb
dec
pushl
cltd
std
xchg
jae
nop
sbbl
add
je
insb
add
nop
add
xchg
add
nop
pusha
push
cmp
movsl
mov
jp
mov
in
mov
adc
fldcw
fimull
stc
add
je
push
sbb
dec
cmp
sbb
pop
sbb
ja
add
dec
adc
push
mov
mov
jo
or
stos
sub
mov
push
xor
pop
adc
pop
pop
add
adcl
outsl
push
jne
mov
scas
mov
aas
sbb
cli
add
adc
push
ret
inc
or
add
add
movswl
pop
jo
mov
jecxz
push
push
ret
pushl
daa
mov
je
push
nop
jo
js
sbb
rolb
xchg
js
xor
das
clc
adc
faddl
loope
cmp
push
mov
push
fcoms
insl
inc
sub
lock
jo
and
test
and
xchg
add
add
pusha
and
inc
push
mov
xor
sbb
pusha
insl
mov
sbb
xorl
aad
pop
sbb
inc
pop
jne
orl
negl
inc
dec
in
imul
lcall
xchg
cmpb
and
xchg
add
mov
add
adc
push
test
stc
fldl
jb
sbb
das
add
lods
cmp
int3
fmulp
jo
sub
std
mov
inc
outsb
dec
testl
jge
xchg
scas
add
xchg
dec
fimull
adc
xchg
lock
cmp
jo
data16
cmp
dec
jo
jne
xor
jb
inc
xchg
ja
fwait
xchg
pop
imul
lahf
jo
cld
jmp
fs
dec
sbb
add
xchg
pop
sub
cmp
loope
sub
or
dec
sub
mov
sub
inc
xor
and
dec
push
push
dec
jge
pop
push
inc
xchg
or
mov
scas
scas
fistpl
mov
aas
push
or
mov
out
fidivrs
je
adc
or
inc
iret
xchg
mov
arpl
xchg
xor
pop
outsb
aaa
inc
pusha
cmc
add
push
dec
dec
adc
mov
inc
or
mov
test
push
es
xchg
dec
push
pop
sarb
inc
fmuls
loopne
ljmpw
test
push
push
dec
fisubrs
ror
call
and
lods
or
mov
sub
test
je
dec
faddl
mov
xor
js
adc
lahf
fldl
pushf
and
sbb
jno
orb
mov
and
lock
inc
add
lock
push
loopne
sti
and
or
out
mov
sbb
pop
fs
pusha
pusha
insb
cmp
xor
insb
push
inc
test
out
movsb
xor
dec
cmp
in
loop
sbb
push
xchg
inc
push
cmp
cli
je
ss
insl
popf
add
or
push
arpl
dec
sbb
sbb
adc
push
mov
hlt
sti
push
sub
cmpsl
js
fwait
inc
and
ret
jne
cmpsl
addb
cs
push
outsb
dec
adc
dec
or
sub
inc
cs
lock
lock
push
enter
enter
fcompl
push
pop
xor
ret
mov
clc
push
sbb
pop
loopw
cmp
movsl
movswl
in
push
mov
inc
dec
add
add
push
and
rorb
sbb
icebp
sub
sub
xor
test
jbe
pop
xor
cld
sub
or
pop
pop
mov
lock
push
sbb
jo
sbb
or
cmc
sbb
add
push
mov
outsl
cmpl
mov
jbe
pop
jle
jno
and
and
jne
sbbb
pushf
dec
inc
sahf
mov
pusha
and
fidivrl
in
insb
out
sahf
dec
fucom
push
test
popa
scas
test
mov
popf
jecxz
mov
mov
and
push
inc
xor
loopne
xchg
es
xchg
je
push
pop
mov
mov
mov
js
sub
or
mov
mov
loopne
cwtl
fidivrs
push
mov
jne
ds
sub
cmpb
fwait
sbb
or
cmp
in
cmpsl
add
cwtl
dec
push
lea
push
pop
cwtl
push
out
push
or
sbb
loop
sub
lret
push
or
or
daa
std
sbb
imul
fcoms
push
negl
add
popa
jb
add
add
int3
inc
and
setbe
add
push
enter
sub
and
arpl
ja
jmp
sbb
and
mov
or
cmp
ret
nop
or
sbb
inc
add
test
push
pop
add
xchg
pop
pusha
inc
dec
rcrl
cltd
push
cmp
push
fdivs
mov
test
jge
jmp
sahf
dec
ret
jge
int3
mov
mov
push
sbb
mov
pop
leave
jbe
xor
and
sub
xchg
adc
or
push
sbb
mov
insb
inc
push
push
or
xchg
out
mov
jo
jmp
std
loop
test
push
insl
dec
sbb
inc
repz
xchg
adc
and
mov
out
xor
push
add
dec
adc
fistl
out
ret
xor
lea
and
mov
cli
sub
inc
cmp
or
test
gs
push
push
jbe
cs
push
or
ja
adc
fiadds
loopne
sbb
add
aas
push
push
push
inc
mov
mov
xor
fmuls
in
addr16
movsl
push
imul
sti
je
push
and
add
add
xchg
mov
pop
sbb
push
out
xor
pop
jb
mov
xorb
or
ret
sbb
pusha
mov
sti
data16
mov
movsl
add
mov
or
dec
jae
sbb
and
and
adc
jmp
daa
sub
adc
cld
inc
cmp
jne
mov
push
lods
mov
add
orl
xor
inc
pusha
mov
cwtl
imul
xchg
cmp
and
sub
js
mov
dec
sbb
fdivp
inc
sub
in
pop
fdivp
sub
mov
xchg
mov
aas
fisubrl
and
mov
and
sarb
or
xor
divl
dec
int
cmpsl
jns
insb
in
adc
call
lea
cmp
test
xor
insl
push
push
inc
sub
sub
inc
popa
mov
popf
sub
inc
sbb
push
and
add
sbb
xchg
and
push
aas
push
test
and
imul
stos
sbb
or
push
and
pop
add
adc
mov
sub
jg
adc
imul
pop
lret
adc
mov
adc
xchg
popf
or
cmp
push
or
stos
cmpl
sub
andb
sar
push
fs
mov
push
cs
jl
pop
or
pusha
mov
jb
and
loopne
lock
insb
arpl
inc
xchg
pop
pop
mov
jge,pn
cmp
push
add
imul
and
adcb
push
add
add
sahf
push
mov
push
mov
daa
pusha
pop
dec
xor
sub
push
shll
xchg
test
sub
xor
push
or
or
dec
orb
fcoms
push
pop
fs
push
mov
xor
adc
add
push
cltd
xchg
or
sbb
lods
add
inc
add
aam
fldt
sbb
xchg
jnp
push
nop
sub
add
xchg
push
bound
sbb
int
loopne
inc
xor
xor
push
xor
imul
movq
lock
add
fwait
xchg
cmp
cmpl
add
adc
add
sbb
dec
cwtl
push
push
push
inc
push
hlt
sub
xor
aad
jle
loopne
shll
jecxz
aaa
js
ljmp
jmp
add
push
incb
jno
pop
rol
cmp
test
add
addb
inc
in
and
das
push
push
sbb
pop
xor
je
mov
cmc
js
aas
fimuls
dec
in
clc
jmp
pushl
mov
stos
fucomip
mov
pop
add
ret
sub
rol
fmull
fdivs
loope
sub
pop
inc
add
gs
xchg
dec
cwtl
lahf
or
add
pop
mov
popa
mov
mov
sub
mov
jl
andl
mov
mov
mov
jns
pop
js
dec
add
cltd
jmp
sub
dec
cmpsb
cmp
or
mov
repnz
jo
push
dec
jo
sbb
adc
fmuls
xor
push
ret
push
fcoml
dec
aaa
mov
xor
push
inc
inc
or
roll
adc
jle
add
faddp
test
dec
adc
or
fcoml
xor
out
push
or
ds
and
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
jp
sbb
sbb
cltd
add
sub
dec
rol
xor
hlt
movsb
add
pop
das
cs
xor
mov
xor
push
pop
lock
add
push
mov
and
sahf
sbb
pop
jle
cmp
or
sub
dec
jo
xor
imul
pop
testb
je
fdivl
cmp
or
cmp
jl
loope
addb
add
or
dec
adc
xlat
adc
mov
or
jne
dec
mov
std
or
inc
push
push
leave
in
arpl
xchg
cmc
mov
lcall
sub
in
cmp
inc
add
xor
mov
or
add
cwtl
add
inc
push
jo
out
push
pop
fisttpl
popa
popa
add
sarl
aaa
add
sbb
add
icebp
and
jo
ja
movsl
push
push
pop
pop
js
andb
or
les
aaa
and
adc
and
cld
push
test
mov
xchg
mov
out
or
or
ss
xchg
push
mov
aam
or
in
xchg
sub
push
mov
mov
rcrl
push
xchg
int
mov
addb
pop
and
ret
fcoms
mov
clc
mov
fsub
daa
ljmp
or
mov
aad
call
dec
fwait
dec
mov
pop
push
sti
add
jbe
imul
test
push
sbb
cld
push
sbb
mov
lea
xor
rclb
sti
push
ret
push
mov
mov
jmp
or
pushf
and
mov
push
cmp
pop
push
shlb
out
addr16
addl
aas
movsl
cmpsb
test
and
xor
mov
push
rolb
sbb
add
testb
rep
sbb
xor
adc
mov
dec
mov
les
insl
push
sbb
adc
xor
push
insl
and
push
xor
iret
pop
mov
jmp
adc
orl
stos
loope
mov
ret
sub
sti
inc
adc
mov
push
addb
pop
jns
js
adc
adc
sbb
or
jmp
push
xorl
sub
and
push
inc
mov
in
dec
pop
push
xor
push
mov
loope
or
jae
inc
dec
sbb
test
xchg
pop
xchg
mov
mov
insb
add
adc
cwtl
jg
cli
bound
js
andl
nop
fidivs
and
fs
hlt
cmp
xor
add
addb
mov
adc
sbb
adc
push
dec
leave
inc
cmp
adc
mov
out
inc
mov
cmp
loope
xlat
mov
mov
xor
add
lock
mov
imul
push
jnp
jbe
ret
mov
push
mov
xchg
sbb
imul
mov
xor
aad
cmp
mov
outsl
stos
out
cmpl
cli
push
cld
imul
push
mov
and
jge
movl
jg
inc
insb
shr
inc
add
out
ficoms
dec
adc
cmp
sbb
add
push
inc
sbb
mov
pusha
insb
std
jg
sbb
cli
jmp
mov
adc
repz
es
rorb
stc
pop
xchg
es
out
in
sbb
loop
xchg
jae
movsl
mov
xorb
es
sbb
push
mov
jne
push
sbb
mov
push
push
pop
lock
popf
adc
inc
lock
inc
inc
jmpw
jns,pt
mov
add
push
int
out
jno
testb
sbb
xor
sub
jle
push
xor
adc
mov
or
aad
xchg
push
sbb
push
and
imul
xorb
bound
sahf
pop
andl
shll
adc
test
rorb
jmp
ss
xor
jl
out
mov
test
and
pop
sub
mov
adc
test
push
pop
inc
xchg
cmpb
add
pushl
fcom
out
inc
test
jg
inc
xor
or
mov
movsb
xor
je
sahf
jbe
dec
ss
adc
insb
adc
jne
aaa
xorb
lock
cmp
pop
shrb
cmp
into
je
push
push
imul
jo
dec
push
push
pop
mov
and
push
lea
inc
jmp
cmp
test
add
or
add
inc
xor
add
cmp
jbe
loop
mov
mov
sub
pop
push
mov
xchg
lock
mov
movsb
sbb
ret
sbb
xor
push
or
adc
or
adc
inc
jo
sti
dec
sbb
jl
addr16
dec
inc
and
push
xchg
or
cmp
adc
mov
push
insl
add
je
add
roll
lahf
inc
js
cmp
or
xchg
cmp
inc
pop
jp
cld
jno
inc
cmp
xor
ss
sub
addr16
jmp
sub
mov
xchg
add
imul
test
cmp
push
jl
popa
addr16
and
mov
mov
pop
cmpsl
ss
xchg
xchg
cmp
sbb
inc
cmp
cli
dec
dec
or
pop
dec
js
cmp
sub
ja
ss
cmp
test
xchg
ret
inc
cmc
pop
cmp
adc
mov
in
repnz
or
push
in
testl
ret
loope
push
inc
sahf
orl
hlt
ror
mov
push
ja
dec
or
add
or
cli
dec
jle
xor
xchg
adc
test
inc
aas
aaa
sbb
push
xor
dec
or
mov
jmp
or
lods
add
mov
call
lret
add
jbe
push
pushf
out
add
jl
je
test
sub
lods
add
jge
sub
add
mov
das
xor
pop
pop
jle
xor
loopne
xchg
or
ret
sbb
dec
sarl
mov
ja
and
xchg
movsb
jne
imul
invlpg
xchg
pop
cmpsb
pop
mov
jo
push
fldl
push
cwtl
insb
and
fs
sti
and
movl
sub
push
je
fiadds
out
pop
rorl
xor
mov
mov
mov
mov
cmp
push
mov
push
imul
cmp
insl
dec
jmp
andl
jb
xorl
pushf
orb
lret
mov
sub
and
or
add
sub
adc
je
inc
lea
jg
mov
adc
push
loopne
outsb
push
sbb
mov
lret
mov
rol
femms
aad
adc
pop
add
sbb
mov
mov
mov
push
jle
arpl
mov
icebp
adc
sbb
das
in
daa
dec
loop
shlb
xchg
loopne
dec
mov
mov
inc
sub
push
push
sbb
xor
fcomps
or
lea
inc
out
cmp
movsb
mov
sbb
pop
cmp
ret
enter
sub
cld
push
sbb
mov
inc
inc
shl
lahf
ret
cmpsl
adc
adc
lahf
push
insl
adc
adc
inc
jo
sbb
lcall
sbbb
inc
pop
nop
push
mov
andl
mov
addl
std
sti
dec
ja
je
or
je
or
sub
nop
insb
xchg
scas
or
stos
dec
aad
idivb
stc
push
or
add
adc
jne
sahf
and
mov
push
jecxz
sub
jmp
cmp
adc
bound
or
cmp
inc
add
mov
sub
push
lret
ja
mov
inc
dec
cld
jbe
push
or
mov
push
lea
lds
test
inc
loop
rclb
js
and
add
es
inc
or
repz
or
pusha
pop
std
dec
cmp
jmp
ret
andl
test
dec
test
test
xor
pushf
cmp
aad
mov
cmpsb
push
or
dec
cmpsl
mov
pop
ret
push
daa
mov
dec
dec
je
sub
test
out
or
add
and
sbb
adc
fcmovnb
fs
ljmp
enter
inc
shll
or
push
adc
and
clc
adc
stos
rcrl
sub
aas
in
lods
popa
lahf
inc
test
push
insl
inc
and
cmc
xor
or
ja
cmp
dec
sbb
add
int3
cltd
ja
cmp
and
push
ljmp
and
inc
movl
fldenv
cmp
add
xchg
xor
outsb
loopne
mov
add
pop
int
pushf
js
negl
pop
fsubl
jg
stos
ret
out
je
push
add
inc
das
pop
dec
dec
insl
inc
stos
or
add
xchg
xchg
or
mov
dec
call
in
push
pop
out
test
or
push
push
rcll
or
cmc
push
dec
jbe
push
sbb
mov
lcall
dec
js
ljmp
adc
inc
mov
popa
aam
add
rorb
dec
adc
inc
pusha
lea
push
cmp
pop
or
inc
enter
add
add
dec
and
nop
add
ds
mov
inc
push
and
jb
in
in
shll
and
es
in
add
or
and
mov
mov
mov
cmp
test
aam
cld
leave
mov
adc
out
push
inc
sahf
push
mov
pusha
das
jno
xor
int
pop
jp
cmp
pop
cmc
fmuls
rorb
shrb
or
aaa
aam
and
mov
rolb
rclb
out
pop
adc
jb
cmpsb
jo
or
jl
mov
cmp
dec
sahf
out
aas
mov
sbb
or
inc
aam
nop
lcall
push
jnp
int3
fucomp
xchg
push
xchg
mov
adc
inc
sbb
add
test
mov
jmp
jmp
leave
das
orl
push
cmp
sti
scas
std
decl
or
rclb
push
cmp
inc
or
xchg
dec
inc
sub
nop
push
mov
cmp
jl
je
je
mov
pop
adc
ss
ds
mov
outsb
pop
dec
push
clc
xchg
cld
sub
jns
mov
xor
ret
jbe
mov
add
dec
pushf
fcoml
lods
dec
sbb
ds
sub
hlt
or
test
mov
je
icebp
jo
inc
pop
mov
arpl
push
jb
or
pop
test
test
nop
subl
dec
int3
outsb
or
inc
je
daa
dec
cmpsb
rorl
add
push
adc
mov
insb
jb
clc
or
aam
repz
les
and
pop
adc
adc
mov
ja
mov
mov
imul
mov
sub
dec
cmp
cmp
pop
int
xor
xor
mov
xchg
xchg
xchg
inc
inc
inc
xorb
jne
movsl
sub
mov
sbbl
mov
ds
pop
xchg
or
cltd
adc
daa
subb
int3
push
sahf
nop
jo
aaa
pop
dec
shrl
lret
in
scas
push
lds
sbb
inc
mov
inc
sub
push
inc
leave
je
rolb
push
fwait
lret
aam
fsubs
lahf
and
adc
idivl
adc
push
xchg
push
sub
sahf
int3
mov
subb
add
call
inc
xor
scas
shr
xor
aaa
invd
addl
aaa
in
mov
mov
hlt
xchg
test
insb
mov
mov
popa
push
and
incb
orb
push
pop
adc
inc
sti
fcompl
nop
cmp
sbb
out
push
scas
add
mov
test
out
push
call
lds
out
sbb
outsl
push
or
fildll
mov
mov
adcl
or
sbb
loope
push
scas
data16
scas
mov
out
scas
nop
pop
cmc
pop
lock
enter
scas
iret
and
or
push
or
ja
dec
dec
jno
push
mov
jo
loop
mov
add
lock
nop
or
inc
nop
pop
jl
outsb
sbb
sub
pop
test
and
inc
cmp
inc
cmp
or
jno
mov
fsubs
xor
dec
or
js
xchg
stos
or
sub
add
xchg
or
add
dec
movsl
or
outsl
test
pop
jne
xor
adc
movsl
pop
les
fstps
push
mov
rclb
and
xchg
sbb
repnz
imul
adc
sbb
adc
ret
cmp
je
adc
pop
push
add
lock
fldl
arpl
sti
sbb
outsl
sarb
sbb
mov
das
push
sbb
dec
orl
and
adc
scas
fwait
cwtl
mov
inc
xor
addb
sbb
ret
mov
popf
sbbl
fldcw
movsl
pop
jecxz
mov
mov
pop
or
cmp
xchg
imul
mov
lea
inc
adc
sub
fistl
and
notb
add
pop
jno
sub
dec
clc
or
into
jle
movsb
or
jb
mov
adc
inc
cmpb
mov
sbb
lcall
sbb
adc
daa
push
mov
mov
xchg
mov
in
adc
or
std
cmp
lcall
clc
inc
pop
or
sbb
push
das
sbb
xor
xchg
dec
jns
ds
push
adc
or
mov
and
sub
stos
mov
dec
add
or
bndstx
push
cmpsl
int3
sub
push
jle
out
mov
adc
loop
pop
cmp
xchg
int
in
addr16
cmp
mov
roll
or
mov
sub
addl
adc
mov
ds
or
or
in
push
cmp
push
es
je
nop
adc
aaa
test
jns
leave
nop
dec
dec
or
aas
inc
and
orl
daa
inc
out
or
push
lock
push
es
cmp
je
divb
push
jge
push
mov
popf
ret
int3
jnp
push
loop
xchg
dec
movsb
mov
mov
repz
dec
adc
push
or
sti
and
inc
in
inc
rcll
mov
hlt
das
mov
sub
push
repnz
jmp
shrb
je
cmp
call
sub
imul
inc
sub
cld
jnp
mov
popf
mov
adcl
sbbb
sbb
sub
add
call
add
adc
sbb
movsb
push
mov
dec
jo
mov
sub
ja
cmpb
adc
push
sub
test
movb
sub
fdivl
and
mov
inc
adc
and
push
call
sub
push
cld
xor
or
popf
add
std
iret
jl
scas
pop
nop
shl
adc
stos
cltd
push
das
pop
adcl
loopne
or
mov
mov
xor
inc
cs
enter
cmp
or
dec
jl
insl
movsl
or
je
adc
cmp
add
sbb
mov
and
xor
cld
mov
nop
lret
and
and
inc
cs
call
sub
inc
outsl
pop
sub
ficompl
shrb
sub
movsb
je
jo,pt
dec
add
dec
call
out
nop
sub
push
adc
inc
push
inc
arpl
sbb
pop
sahf
les
test
add
in
sub
mov
sbb
push
sahf
arpl
and
xor
inc
jne
test
dec
int
sahf
inc
push
fadd
stos
gs
push
push
imul
jmp
outsl
test
inc
push
push
dec
push
insb
cs
jmp
jo
mov
xchg
int
mov
scas
sti
cltd
rclb
fadds
pop
xchg
push
xchg
insb
sahf
int
pop
pop
inc
pop
fistpl
fidivrs
jnp
icebp
push
cs
popfw
cwtl
add
andl
call
and
movsb
and
and
add
call
adc
dec
or
add
sub
pop
adc
sub
cmc
and
lea
xchg
pop
pop
push
insb
imul
sub
dec
dec
data16
mov
sub
dec
add
fsubl
xor
xlat
mov
push
movsl
je
andl
push
pop
jb
sbb
or
add
push
mov
int3
xchg
lea
test
jl
les
sub
inc
ss
sub
push
dec
in
or
scas
and
adc
mov
dec
je
nop
iret
js
cltd
fdivl
jp
into
loope
ljmp
jl
in
xchg
mov
push
push
xchg
call
mov
shll
push
testb
sub
push
sbb
or
xor
xchg
cli
dec
sub
or
pop
push
push
xchg
inc
mov
lcall
mov
in
xchg
loopne
xchg
cmp
loop
sbb
mov
push
mov
jne
cmc
js
cmpsl
xor
rolb
insl
mov
icebp
cltd
pop
popf
std
lcall
and
sbb
popf
nop
mov
in
jne
mov
add
xchg
sbb
popf
loop
add
pop
pusha
xchg
inc
or
and
dec
jne
rorb
sub
dec
pop
inc
or
push
inc
xlat
cmp
sti
lret
loopne
and
loop
and
dec
pop
in
cwtl
dec
xchg
add
jns
or
aam
inc
pushf
int3
add
dec
jl
imul
movsb
bound
scas
shl
pop
push
lock
js
mov
ffreep
push
sbb
jmp
pop
or
dec
int
shl
push
push
jo
test
fistpll
inc
adc
mov
push
cmpsb
add
rorb
jb
mov
scas
sbb
aaa
push
lahf
pusha
in
adc
hlt
and
jl
lcall
dec
or
incb
sub
add
clc
jne
xor
mov
add
add
jne
clc
or
shlb
mov
ficoml
mov
add
push
sbb
pop
shr
lahf
xchg
sbb
adc
push
dec
test
sub
data16
sahf
add
call
in
orl
test
xchg
lahf
ja
sahf
nop
mov
lret
or
xchg
jp
dec
sub
push
and
or
rorb
mov
or
shr
inc
pop
dec
jae
aam
or
jne
or
xchg
sbb
imul
shl
ja
les
cmp
faddl
pop
push
ret
sub
jns
sbb
add
xchg
jbe
sub
jge
adc
jo
sub
cmpsl
dec
push
push
jb
mov
push
in
adc
loope
xlat
inc
cld
cwtl
mov
add
cltd
ret
call
cs
sbb
cs
dec
jmp
ja
add
mov
and
mov
inc
lods
or
push
cmpsb
adc
push
sub
ss
add
repnz
or
ds
xchg
jge
push
xor
das
push
dec
insl
rcll
repz
push
faddl
xchg
leave
out
mov
mov
cli
add
shll
push
leave
push
xor
sbb
push
inc
xchg
add
and
or
adc
rcr
add
sbb
or
sub
nop
add
lds
fs
sbb
dec
pop
repnz
mov
mov
push
sbb
push
or
imul
or
je
pop
jne
dec
stc
add
pop
gs
mov
or
sub
inc
lcall
push
lea
add
mov
cmp
push
pusha
xor
lock
pop
pop
nop
data16
mov
push
pop
xchg
add
aas
xor
test
jge
mov
negl
xchg
or
shrl
enter
push
xchg
stos
push
or
adc
aad
repnz
arpl
rcrb
repz
int3
sbb
inc
cmpsb
push
inc
xor
cs
aas
ja
push
pop
cmpb
xchg
inc
into
mov
xor
mov
fldl
xor
add
xchg
push
mov
add
fidivrs
dec
jp
jne
andl
movb
push
mov
pop
mov
add
imul
sbb
mov
adc
orl
mov
jnp
adc
out
je
mov
sbb
jb
pop
aaa
loopne
dec
sbb
jecxz
push
ss
xor
cmp
cmp
addr16
mov
or
or
sarl
xchg
cmc
dec
jbe
mov
shlb
icebp
push
sbbb
mov
iret
pop
imul
push
shrb
push
inc
les
add
ss
loope
mov
mov
insb
dec
inc
inc
push
lock
nop
push
cmp
cmpsb
enter
cld
insl
iret
jo
das
test
xchg
mov
lea
mov
cmp
mov
mov
and
dec
arpl
or
ss
xchg
cmp
mov
or
cmp
push
sub
sub
xchg
cs
xor
sbb
sbb
or
rcrb
xchg
inc
aad
push
mov
jbe
into
dec
stos
adc
dec
stos
push
dec
dec
adc
sbb
mov
repnz
dec
rcrb
jae
rorb
cld
movsl
ret
push
mov
or
sbb
shlb
scas
mov
aam
adc
and
jae
sub
push
xchg
int3
mov
sub
cmp
push
rcrl
xchg
insb
pop
aaa
and
in
dec
sub
outsl
add
dec
faddl
es
and
push
adc
mov
lods
rclb
push
adc
add
or
imul
sbb
add
mov
movsl
fdivs
nop
pop
ret
pop
sbb
mov
and
mov
cmp
or
pusha
pop
cmpl
shll
jb
push
xchg
xor
adc
xor
pushl
and
adc
repnz
push
mov
test
or
push
hlt
test
cmp
push
jecxz
in
rcrl
push
cs
fs
jb,pt
je
add
jecxz
cli
adc
add
push
mov
push
jle
loopne
mov
sbb
xor
adc
xor
pop
lods
mov
adc
and
push
dec
movsl
push
add
jae
subb
adc
test
adc
jne
xchg
mov
lcall
push
clc
cmp
in
sarl
ficoml
enter
icebp
scas
out
fsubr
data16
sub
pop
push
mov
inc
inc
pop
add
fildl
lret
fdivl
shlb
clc
lea
fwait
aam
mov
subb
movsl
mov
fildl
cmp
pop
or
jo
mov
and
test
jno
test
imul
repnz
test
adc
and
stc
or
lsl
sub
pop
add
mov
fidivrs
inc
push
mov
test
inc
sti
jl
test
sahf
fstps
xchg
jg
cmp
arpl
enter
decb
or
es
pop
mov
jo
or
pushl
xor
jle
dec
add
jmp
add
rolb
sub
sbb
imul
fucomp
lock
es
xor
push
dec
sbb
je
and
pushf
in
add
add
insb
sub
jae
nop
and
sarl
or
inc
sub
cmpsb
cmp
ss
cmp
xor
repz
inc
dec
inc
pusha
mov
xor
dec
test
push
movl
popa
add
outsb
jno
dec
incb
add
jg
or
inc
add
cmp
ja
and
cmp
mov
mov
xchg
dec
cmpsb
add
and
jno
jne
out
or
jecxz
cmp
xor
jmp
xchg
dec
inc
xor
pushf
push
mov
sti
mov
adc
push
add
movl
in
and
cmp
cwtl
sarl
push
pop
data16
iret
inc
adc
fcoml
sub
icebp
fs
sub
or
cltd
jae
cmp
xchg
xchg
jle
rclb
rorl
mov
hlt
and
dec
loopne
mov
movsl
arpl
outsb
sbb
push
and
in
mov
pop
xor
and
pop
dec
das
dec
stos
jl
cmp
push
aas
adc
mov
mov
xchg
movb
adc
pop
cmc
push
xor
xor
jle
dec
sub
adc
or
cmp
fstps
not
lods
push
xor
jge
je
pop
cmp
mov
and
cmp
mov
cld
inc
dec
sti
rep
inc
inc
xor
dec
pop
adc
sub
or
sbb
inc
inc
outsl
sub
jae
mov
push
inc
sti
test
sbb
test
add
mov
adc
int3
mov
clc
imul
out
int3
push
mov
cmpsb
xlat
push
and
push
mov
scas
movsl
scas
fwait
sub
dec
adc
cld
movsb
rorb
nop
data16
nop
sub
rorb
inc
test
in
adc
push
fadd
pusha
aas
mov
mov
mov
insb
xor
andb
adc
dec
fistl
fistl
pop
inc
std
and
sarb
adc
loope
lock
out
addb
or
xchg
mov
push
hlt
push
fndisi(8087
das
sbb
or
add
loopne
jl
jnp
pop
adc
push
push
jne
ret
xor
pop
je
adcb
mov
xchg
xor
dec
ds
xor
push
and
push
push
push
xor
lock
dec
mov
cmp
or
dec
push
push
addb
lods
push
enter
pop
adc
ss
rol
pop
dec
mov
stos
mov
pop
popf
dec
xchg
push
aam
pop
lea
xor
pop
arpl
xchg
shlb
cmp
mov
inc
rolb
loop
test
orl
imul
and
sarb
dec
jne
lock
pop
lcall
wrmsr
sub
push
and
sub
mov
adcb
sub
rolb
cmp
dec
ss
mov
cwtl
sbb
enter
add
movups
das
sbb
jnp
ret
xchg
sub
xor
xlat
js
fimuls
clc
adc
pop
adc
or
push
adcl
and
inc
xchg
mov
add
pop
les
xor
add
mov
mov
lea
cmpsb
nop
pop
lods
or
and
and
xchg
adc
push
sbb
lret
icebp
or
or
test
shll
jnp
xor
sti
xorb
test
push
mov
pop
ljmp
sbb
imulb
rol
adcb
add
repnz
mov
ret
jb
ret
cmp
enter
cmpb
shl
and
js
ret
sub
dec
mov
in
xchg
sbb
es
lods
xlat
movb
in
cltd
add
push
or
mov
cmpl
ret
sub
add
sahf
ja
test
xchg
push
rolb
cmp
out
fs
mov
push
daa
cmp
cmp
dec
es
adc
popf
lea
sub
ret
adc
popa
loopne
shr
xor
mov
sbb
cmp
sbb
lods
ss
andb
inc
andb
jle
notb
je
std
push
sub
or
out
and
mov
and
sbb
push
mov
mov
jle
or
inc
lods
sbb
sub
pop
add
cmp
mov
pushf
sbb
jg
jno
or
dec
xchg
add
cs
mov
add
adc
mov
unpckhps
sbb
push
pop
outsl
inc
jg
inc
jmp
dec
ss
loope
fisubrl
add
jne
sub
sar
and
mov
cmp
xchg
mov
jb
jae
ror
andl
pusha
iret
dec
hlt
jae
mov
pushf
inc
adcb
push
movsb
stos
sub
outsb
add
xchg
jnp
mov
or
and
pop
pop
xchg
and
push
loop
lret
push
movsl
inc
das
in
cli
sub
loop
or
or
rcrl
add
adc
dec
cmp
test
pop
cltd
push
xor
push
mov
jg
mov
sbb
mov
xchg
add
mov
add
and
add
subl
jmp
popf
adc
daa
cmp
or
cmp
dec
cmp
nop
out
mov
or
and
enter
and
or
insb
jb
ja
stos
mov
ja
or
or
ss
mov
mov
arpl
or
sbb
mov
lock
inc
fwait
fs
or
and
adc
xor
add
subb
das
sbb
stc
ja
dec
repz
xchg
or
or
sub
js
push
jmp
icebp
jle
push
inc
cmp
jne
shlb
sub
imul
pop
je
and
call
cmp
xor
push
or
and
adc
mov
sbb
mov
cltd
xor
mull
add
mov
pushl
xor
fwait
or
pop
mov
and
roll
or
aas
and
cltd
xchg
add
xor
cmp
fs
and
fs
sub
fs
push
push
fs
sub
leave
xchg
mov
cs
jl
jb
or
das
jmp
cmp
cmpsb
movsb
fdivl
pop
test
cmp
inc
test
xchg
sub
and
add
pop
jne
cmp
pop
mov
mov
mov
sbb
call
cmp
xchg
fs
or
in
pusha
sbb
scas
pop
add
stc
push
dec
mov
or
push
adc
or
pop
sbb
or
inc
call
test
push
fisubrs
mov
nopl
pop
and
add
inc
adc
xchg
test
xor
mov
xor
mov
adcl
jge
iret
push
push
in
ja
xchg
or
dec
loopne
lea
out
fldl
xchg
sti
fisubs
insl
loop
mov
pop
mov
push
dec
xchg
out
fmulp
jmp
mov
lahf
imulb
shl
fimuls
enter
cmpsl
mov
shlb
inc
out
jns
aam
divb
mov
dec
rorl
outsl
push
es
pop
jo
pop
xor
decb
mov
pop
mov
cmp
push
sub
jne
inc
push
or
xor
or
pop
push
sbb
jb
jg
or
mov
mov
pop
add
add
imulb
jmp
insl
sub
test
pop
lock
push
daa
push
add
inc
adc
addb
push
sahf
scas
test
in
test
mov
sbb
aaa
ret
add
shrb
jge
ret
or
movsb
mov
mov
out
andb
pushf
push
test
push
mov
push
sub
jbe
out
mov
add
push
cmpsl
mov
out
or
jo
add
push
add
lcall
addb
jbe
or
je
js
jmp
repnz
bound
popf
in
jne
sbb
mov
jmp
out
out
out
xchg
sbb
lods
jmp
dec
xchg
jmp
int3
dec
jbe
jne
cmp
jmp
pop
or
push
jbe
jmp
or
xor
and
push
bound
fists
push
movl
jb
add
xchg
jb
bound
add
adc
sub
fadds
mov
adc
cltd
cmp
push
jne
orb
scas
add
je
or
push
in
xchg
movsb
mov
jns
push
cmp
add
inc
pop
into
cmpsb
dec
cmpsb
insb
mov
mov
adc
jg
cmp
mov
inc
dec
xchg
js
rolb
pusha
xchg
bound
les
mov
nop
mov
xchg
cmpb
jmp
or
out
push
pop
mov
push
sarb
xor
stos
popf
add
in
adc
dec
add
add
sarl
fcoms
outsl
push
rcrb
loopne
and
sbb
cmc
sbb
jmp
ja
arpl
adc
pop
or
jbe
jae
sbb
add
jmp
adc
push
sub
lret
icebp
pop
xchg
push
sbb
jns
dec
xor
or
mov
adc
inc
arpl
push
adc
aam
add
fcomps
mov
and
or
pop
mov
mov
push
or
cmp
push
jge
adc
or
loop
je
or
pop
nop
in
jb
inc
dec
sub
or
push
nop
sbb
and
pop
hlt
adc
pop
lods
ret
pop
adc
mov
lahf
cld
jae
dec
push
or
mov
add
add
pop
mov
leave
cmp
mov
scas
mov
push
outsl
aaa
mov
scas
ja
popf
sub
lock
add
push
ret
adc
adc
mov
pusha
push
add
mov
test
dec
mov
xchg
lods
sub
and
push
aas
rorb
push
aaa
add
jg
and
sub
fsubl
xor
in
jecxz
in
pop
push
push
xchg
loop
call
call
rorl
cmp
add
adc
dec
jl
sbb
je
scas
add
push
mov
jns
ss
mov
cmpsl
adcb
push
into
xor
loop
rolb
jo
aam
jne
icebp
sub
mov
xchg
mov
or
jbe
adc
dec
in
lock
xchg
cmp
movsl
lods
push
inc
std
adc
dec
test
int
dec
into
fstpt
inc
dec
fistps
mov
test
pop
or
lock
or
ljmp
insb
dec
test
sbb
pop
sub
sbb
push
push
sbb
shll
sub
imul
xchg
repnz
sbb
xchg
add
add
fsubrs
movsl
aam
xchg
movsb
cmp
push
add
or
mov
sbb
push
lea
xchg
scas
mov
mov
leave
pop
movsb
pop
shll
dec
es
popa
push
cmpsl
add
dec
int3
sub
aam
stos
mov
add
shlb
add
fmull
pop
icebp
mov
or
xor
out
or
or
and
loope
sub
test
sbb
sbbl
and
inc
cmc
inc
push
pop
push
adc
roll
add
inc
adc
xor
xor
jno
fsubs
clc
aas
sti
movsl
loopne
mov
cmp
xor
js
mov
mov
xor
jmp
jbe
add
sub
mov
mov
mov
outsl
loopne
sbb
xor
push
cwtl
pop
add
faddl
pusha
inc
outsl
mov
jns
das
hlt
and
and
sub
push
lds
xchg
shlb
jmp
push
arpl
nop
jb
add
pop
pop
adc
ret
cwtl
pushf
popa
adc
mov
sbb
pop
lahf
push
mov
jo
jne
xchg
inc
nop
imul
lds
lds
lahf
and
enter
int3
sbb
test
sbb
mov
ret
xor
and
dec
mov
cmp
cmpsl
sahf
ret
mov
or
pusha
jp
fisttpl
cmpsl
lret
mov
jns
adc
cmp
xchg
push
add
inc
sbb
inc
push
shlb
pop
stos
enter
test
mov
in
adc
jnp
mov
xor
arpl
sbb
jo
add
rorb
or
adc
sub
mov
pop
xor
scas
enter
add
or
por
dec
cmpsb
inc
add
xchg
or
pusha
adc
inc
dec
call
push
jg
fwait
mov
xchg
fiadds
int3
cmp
sub
xor
mov
mov
lldt
aas
and
push
hlt
jo
inc
roll
arpl
xor
sbb
iret
bound
pop
dec
fcomps
xor
jnp
add
mov
mov
pop
ss
les
add
jb
xlat
jne
lods
cmp
rcrb
inc
pushf
sub
and
adc
inc
jmp
js
xchg
adc
xchg
int
test
add
pop
xor
xchg
xchg
fmuls
push
sub
mov
push
sub
mov
mov
sub
jp
adc
add
leave
lea
cmp
dec
mov
movsl
jo
mov
mov
push
sahf
pop
or
call
or
insl
push
aaa
pop
sub
les
in
inc
or
and
xorb
cld
push
mov
ror
cmpsb
das
shlb
mov
addr16
xor
cmp
or
and
xor
hlt
inc
or
sbb
fisubl
push
sbb
or
jnp
fcoms
cli
enter
or
cmp
pop
add
add
mov
inc
notb
imul
sub
cmp
sub
das
mov
aam
add
mov
dec
ficompl
adc
je
adc
je
sub
loop
mov
scas
inc
pop
sub
ret
dec
lock
test
lret
xlat
adc
mov
nop
xchg
cwtl
lcall
or
ds
add
pusha
cld
mov
inc
cmp
xor
sarl
ret
inc
adc
mov
leave
jns
and
gs
enter
pushf
mov
xor
fstl
mov
mov
jp
movsb
ror
dec
xchg
ds
sub
std
jo
mov
mov
mov
outsb
jb
jmp
sarb
pop
inc
dec
mov
mov
movsb
cltd
into
in
jmp
cmp
add
pop
in
mov
testl
mov
js
sbb
fld
or
lea
icebp
push
xor
stc
push
push
pop
mov
cmp
mov
ljmp
scas
outsl
push
iret
sbb
cmp
xor
fnstcw
push
pop
pop
cmp
test
mov
inc
xchg
pop
shl
mov
cmp
and
mov
mov
or
xor
movsl
sbb
push
mov
or
shl
fwait
adc
xchg
xor
ret
sbb
sbb
pushf
or
lea
sbb
lea
sbb
pop
lock
dec
in
cmp
aaa
jnp
imul
sbb
mov
lods
mov
mov
sub
adc
mov
je
orl
outsl
or
inc
stos
pop
cmp
or
push
pop
cmpsb
pop
jo
ret
push
push
push
jns
fildl
cmpsb
outsl
xlat
push
push
repz
arpl
sbb
aad
je
rorl
ficomps
sbb
push
xchg
ret
js
rcr
movsl
and
adc
daa
and
repnz
adc
cwtl
icebp
test
sbb
cmp
lock
icebp
add
icebp
push
ret
push
xor
subb
add
pushf
ljmp
loope
and
pushf
mov
pop
jbe
mov
dec
add
jo
lds
fisttps
rol
pop
xor
mov
test
or
mov
mov
jp
test
pop
test
fstpl
in
addb
lea
pop
sub
sbb
mov
adc
inc
dec
sub
testb
push
jl
pop
insb
vpsrlq
in
inc
out
cmp
out
pushf
cmpsl
pop
sub
xor
pop
sub
lods
insb
push
in
mov
sub
xor
sahf
mov
repz
movsl
push
pop
inc
repnz
xor
push
leave
sub
fsubr
pusha
lret
fxch
and
push
mov
and
mov
in
or
fs
push
es
pop
pusha
stos
add
fwait
jo
dec
jns
or
add
and
insb
decb
lds
pop
movl
push
sbb
enter
add
scas
mov
sahf
ror
dec
rclb
mov
and
cmpsb
aaa
or
mov
loope
xor
sbb
jae
or
dec
mov
test
sbb
lock
add
cmp
dec
loop
ja
push
aas
sbb
decb
or
test
mov
jl
sbb
jns
outsb
lock
cmp
or
in
cmp
fs
nop
sbb
mov
sbb
pop
add
pusha
and
inc
cltd
andl
cmp
fs
hlt
lret
add
push
js
mov
and
mov
adc
push
cmpsl
adc
aas
movsb
adc
mov
les
push
ret
clc
cmp
je
xor
outsb
popf
jl
adc
je
imul
bound
mov
mov
sarl
add
jl
cmp
jg
outsb
adc
or
imul
outsb
add
push
jge
or
jle
xchg
clc
push
dec
loopne
or
subb
outsb
and
pop
fnsave
call
xor
in
sub
push
lock
sti
sub
or
jge
cmpsb
ret
popf
cmpsl
xor
cmp
push
movsb
shlb
jp
sbb
fidivrs
cmp
inc
inc
jmp
inc
jo
xlat
inc
sahf
push
add
addr16
and
add
dec
jmp
and
ljmp
or
sbb
jae
push
lea
adc
out
cmp
lret
jmp
pop
cmpsb
dec
imul
and
add
test
scas
push
push
mov
inc
sti
roll
mov
lds
adc
lret
mov
repnz
and
dec
call
pushf
pusha
sub
push
add
sbb
pop
adc
push
mov
es
mov
aaa
cmc
mov
xchg
add
push
cli
fdivl
cmpsl
lret
cmc
je
loop
aam
lret
lods
pop
lods
sub
imul
sbb
mov
add
mov
movsb
push
rolb
sub
fstps
shlb
in
jns
or
add
push
cmp
jp
js
fcomp
sbb
jecxz
xchg
daa
xor
insb
push
stc
sarb
les
enter
iret
andl
in
test
push
or
ret
cmp
pop
adcl
cmp
sbb
lds
idivl
movb
or
into
dec
pusha
insb
or
xchg
mov
das
mov
xchg
xchg
push
xorb
sbb
xchg
fcoms
int
xchg
fcmovne
cmp
scas
or
dec
push
cwtl
sub
pop
sbb
pop
subb
lret
sbb
xor
lcall
and
mov
mov
pop
outsl
mov
flds
jmp
xor
adc
jl
xor
int3
mov
push
fsubs
mov
push
adc
pusha
push
repz
cmpsl
ss
inc
aaa
mov
cwtl
lock
cli
insb
mov
and
xchg
adc
adc
insb
mov
fnstsw
adc
add
jo
dec
add
mov
pop
sub
repz
repz
inc
addb
cmpsl
fldt
lret
repz
stos
addb
repz
outsb
push
mov
inc
bound
int
mov
jo
mov
pop
mov
mov
push
or
popa
insb
dec
inc
nop
push
cmpsb
and
or
lock
inc
cmp
xorl
repnz
fsubrl
cld
hlt
adc
daa
dec
push
xor
xchg
mov
into
xor
test
pusha
and
gs
pop
cmp
pop
push
jo
shrb
insl
or
dec
inc
daa
dec
andb
arpl
mov
mov
add
xchg
add
sbb
jl
inc
mov
push
ret
mov
lds
cmp
pop
add
sub
imul
sahf
push
pusha
and
inc
mov
cmp
xchg
dec
arpl
pop
sub
sub
jmp
movsb
outsl
in
fcomps
arpl
in
adc
lret
xchg
add
inc
outsl
sbb
adc
mov
call
or
test
jae
mov
testl
fdivrs
lea
add
imulb
divb
rolb
fwait
aaa
xchg
xor
shr
xchg
sbb
mov
xchg
adc
not
dec
cmp
add
mov
ret
shr
cmp
jbe
add
jmp
les
rcr
aam
mov
mov
lock
dec
xor
mov
mov
mov
adcl
sub
xchg
sbb
sub
mov
test
movsl
icebp
and
pop
pop
popa
jo
or
movl
fs
incb
add
dec
xorb
adc
mov
xchg
out
xchg
mov
aad
mov
and
or
cmp
push
mov
imul
lea
dec
pop
or
adc
test
movsl
int
or
sbb
in
movsl
add
dec
adc
stos
fwait
jl
sub
dec
dec
inc
add
mov
gs
xchg
les
dec
stos
data16
add
into
or
jmp
dec
dec
mov
into
aam
push
jo
mov
pop
mov
testl
dec
aam
or
std
ret
push
pop
and
or
cmp
sub
pop
xor
stos
mov
arpl
or
ljmp
stos
jle
push
cmpsb
pusha
sbb
jnp
sbb
mov
inc
repnz
pop
dec
into
add
jo
push
add
mov
add
les
mov
jg
lcall
imul
and
push
aas
mov
add
or
test
cwtl
mov
mov
and
dec
cmp
adc
inc
push
mov
add
add
add
or
int3
loopne
xchg
jb
jno
mov
sahf
mov
popf
add
call
call
repnz
push
pop
or
popa
sub
add
movsl
test
pop
scas
loopne
dec
loopne
ret
es
push
add
movsb
xor
fnsave
call
or
pop
jmp
add
or
jne
and
jle
or
cmc
xor
inc
stos
mov
sub
dec
lret
push
je
outsb
inc
jne
addr16
std
ljmp
push
ljmp
loop
push
lcall
dec
jo
mov
jle
push
minps
test
or
dec
sarl
loopne
lds
adc
jmp
pop
push
mov
xor
pop
outsl
pusha
aam
sub
lods
repnz
push
dec
xor
ss
in
scas
mov
adc
mov
or
repz
repnz
repz
pop
fcoms
sub
les
xor
inc
push
cld
in
inc
xor
push
xchg
test
mov
lret
mov
and
dec
repnz
daa
mov
lret
rcrb
mov
push
cmp
push
and
imul
arpl
inc
fsubrs
aam
pop
cwtl
mov
jl
jbe
adc
pop
and
js
cld
scas
xor
adc
xor
xchg
pop
fsubl
andb
mov
incl
fsubs
dec
push
push
xor
repnz
hlt
mov
push
pop
jle
mov
xchg
rep
sbb
loopne
loope
je
cmpb
adc
mov
mov
cmp
rcll
out
fcmovnb
adc
jg
shl
divl
je
push
mov
pop
rcr
lock
loopne
mov
insb
jmp
jno
push
lret
cltd
ret
pop
loope
push
pop
adc
jnp
mov
and
dec
repz
fs
add
mov
out
add
push
and
jnp
xchg
loopne
stc
push
into
push
mov
mov
mov
dec
ds
xchg
in
faddl
into
push
sti
xchg
sar
add
xor
sub
or
jne
inc
adc
sbb
lret
push
add
lds
jmp
pop
clc
dec
jl
dec
in
test
mov
nop
lret
loop
fs
scas
mov
pop
dec
push
xchg
add
sub
lods
dec
rcrl
add
and
mov
mov
pop
add
ficoml
rclb
test
pushf
mov
mov
cmpsl
jns
int3
mov
in
jne
les
sarb
cmp
leave
add
xchg
push
sub
lock
jmp
push
popf
jl
test
clc
test
add
fcomps
adc
or
mov
inc
push
jge
add
sbb
cmc
pushl
orb
xor
mov
mov
mov
stos
xor
mov
insl
pusha
adc
jb
jle
or
inc
sahf
cwtl
addl
into
xchg
dec
test
mov
xchg
jl
es
add
cs
push
in
inc
add
fisubl
es
sub
nop
add
adc
push
add
add
pop
push
push
mov
xor
aaa
popa
repz
mov
fistpl
inc
cmp
push
addr16
push
add
adcb
dec
hlt
mov
inc
jl
lea
inc
nop
mov
std
loop
pop
sub
and
ret
xorb
cmp
sbb
sub
lret
rcll
divb
shr
sub
inc
pushf
je
push
imul
add
imul
or
bound
xor
dec
push
jmp
cmpb
dec
adc
jecxz
les
icebp
mov
add
push
or
and
cmp
push
gs
inc
arpl
mov
jl
mov
inc
ljmp
pop
fwait
lcall
lods
xchg
jo
es
push
or
out
movsl
cmp
xor
insb
mov
adc
cmpl
mov
and
pop
mov
or
add
dec
push
sbb
mov
pmaxsw
push
clc
loopne
sahf
push
xchg
lock
push
mov
sub
js
jno
daa
dec
cmp
test
ret
imul
and
ds
mov
mov
jmp
xlat
dec
outsb
jge
call
scas
outsl
push
mov
fidivrs
inc
jbe
jmp
pop
adc
fwait
push
orl
push
adc
adc
les
dec
lods
sbb
arpl
push
pop
loop
pop
cwtl
clc
xchg
xchg
jl
sbb
dec
pop
cltd
sub
push
mov
sarb
gs
jge
fisttpll
shl
mov
push
xchg
jo
imul
xlat
lcall
add
push
and
mov
add
insb
cmp
loopne
in
fisttps
xchg
jmp
pop
andl
pushf
add
pop
pop
insl
or
or
cmp
or
pop
mov
or
pusha
or
mov
jne
in
pop
leave
xor
sub
orb
loop
jb
add
add
xor
aam
cmpl
xor
and
loope
xor
shll
rcll
movsb
test
adc
dec
popf
out
testl
rclb
add
cld
call
roll
aaa
cmp
pop
xchg
push
aad
jae
xor
ret
sbb
test
inc
or
adc
int3
add
and
or
inc
cmp
mov
cmp
jp
jmp
xor
dec
lods
sub
push
push
xchg
into
xchg
les
gs
movsl
push
push
movsl
fistpll
inc
hlt
fstl
mov
lock
fnstsw
dec
jp
and
pop
fsubr
pop
faddp
andl
sbb
cmp
loopne
popf
fwait
push
mov
cs
add
jmp
ret
mov
out
xchg
jne
add
lods
rcrb
and
xorb
adc
jo
js
inc
js
or
jge
push
mov
pop
ja
adc
or
fdivrs
sub
aam
imul
ljmp
mov
mov
gs
sbb
lea
push
or
nop
jno
mov
mov
es
and
push
flds
dec
rorb
out
mov
and
mov
dec
mov
int3
dec
sbb
sti
sub
jae
push
sub
sub
mov
inc
inc
mov
icebp
clc
out
in
sub
mov
dec
loope
mov
lcall
dec
mov
cmp
jge
and
dec
and
cmp
mov
add
pop
push
lock
push
pop
or
or
movsb
aas
movsl
pop
jmp
push
adc
inc
add
popf
jne
mov
inc
cwtl
mov
push
jno
movl
or
pusha
inc
jmp
dec
pushl
pop
push
pop
mov
pop
dec
pop
shrl
into
nop
test
clc
xchg
add
or
jns
mov
mov
es
adc
dec
xor
add
dec
fwait
bound
pop
dec
mov
mov
or
fisubl
mov
mov
sub
push
pop
stc
add
adc
push
adc
xor
ret
sar
inc
add
shlb
jnp
xor
test
decl
inc
adc
or
inc
loop
jmp
insb
jecxz
inc
pop
mov
xchg
sbb
push
dec
gs
clc
mov
and
lret
adc
stc
fs
push
js
mov
loop
fisubl
dec
insl
pop
xor
or
fsubl
ja
jmp
cmc
sbb
andb
sbb
fisttps
mov
rcll
inc
sub
cmp
rorb
lret
mov
sbb
or
add
mov
jmp
dec
fldenv
hlt
xchg
xor
stos
out
sbb
pop
stos
xor
insl
and
fs
xor
fcoms
js
mov
push
push
pop
sub
mov
popa
adc
js
mov
or
add
nop
out
push
and
push
adc
cs
daa
sub
jns
and
mov
pop
dec
arpl
lds
xorl
inc
or
push
ret
in
add
push
mov
invd
sub
mov
add
and
mov
rcrb
cmpsb
push
add
jno
add
adc
or
out
mov
cmp
mov
and
fistps
push
lea
xchg
loopne
pusha
or
loope
fs
sub
pop
and
lock
inc
lock
clc
mov
mov
jge
gs
push
in
push
hlt
mov
mov
shrl
and
jne
add
or
push
sbb
mov
or
cmc
js
push
les
and
leave
cmpsl
lods
gs
arpl
push
jno
imul
xchg
add
lret
xor
push
xlat
je
and
or
enter
test
nop
xchg
sbbl
xchg
xchg
xorl
imul
dec
in
in
inc
inc
subb
cmp
lods
jmp
xor
push
jg
ret
in
fstp
mov
add
mov
arpl
test
int3
mov
jnp
in
add
test
sbb
cli
and
add
int
mov
dec
add
insb
dec
in
in
or
pushl
fisttpl
pop
sbb
xchg
mov
push
jno
pop
push
mov
xchg
xor
loopne
jecxz
or
or
shlb
jne
lods
in
xor
cmpsl
daa
add
dec
pop
and
mov
mov
sub
jg
arpl
adc
xor
pop
cmpsb
dec
cmp
sub
pop
or
xor
push
lods
push
adcb
or
aad
push
pop
xor
xor
push
and
insl
loopne
adc
les
les
popf
xchg
inc
es
out
add
and
mov
mov
jmp
cmpl
lret
pop
pop
xor
hlt
fstl
sub
test
xor
and
push
dec
push
jecxz
pop
test
jmp
aad
in
adcl
jmp
outsb
shll
pop
adc
mov
xchg
dec
jb
bound
jecxz
js
sub
inc
daa
push
adc
pop
das
sub
enter
cmpsb
cmp
adc
test
mov
mov
fwait
ljmp
cmp
call
popa
jne
das
ds
add
or
sub
mov
aaa
mov
xchg
fs
jnp
test
inc
push
inc
ds
stc
xor
rclb
add
test
xor
push
sub
mov
xchg
dec
xchg
mov
mov
shlb
aaa
push
popa
pop
pop
lcall
or
push
sarl
aas
and
jne
inc
or
mov
adc
xchg
mov
adc
ret
xor
adcb
lds
xorl
and
mov
add
nop
push
and
xchg
lret
jnp
add
arpl
outsl
js
cmc
es
leave
lock
shrb
mov
push
rorb
lcall
pop
js
xchg
call
ffreep
ljmp
loopne
sbb
jnp
cmp
adcl
pop
pusha
inc
fistps
out
aam
mov
add
les
cmp
push
stc
inc
inc
clc
popa
jp
sbb
mov
mov
gs
in
loope
nop
mov
push
ja
fmuls
xchg
jne
int3
jo
loopne
mov
add
aas
dec
imul
push
test
pop
icebp
add
add
inc
lcall
sbbl
ret
and
enter
add
lods
xor
mov
test
push
dec
or
movsb
add
shll
enter
push
stos
mov
rolb
jmp
or
movsl
cmp
cmp
pop
clc
jl
add
inc
ret
dec
sbb
rorl
rcrb
shll
add
dec
leave
loopne
push
sbb
sbb
cmp
add
add
add
mov
and
or
testl
add
sbb
dec
pushf
xor
or
loope
std
lcall
aam
xchg
movsl
dec
aaa
sarb
add
movsb
mov
inc
fisttpll
scas
cmp
rorb
sbb
inc
xor
data16
pop
pushf
cmp
push
pop
push
pop
push
stos
sahf
sub
pusha
add
je
lea
dec
ficoms
or
jne
loop
enter
sub
or
cltd
jne
les
idivl
push
sbb
inc
pop
enter
lahf
jp
sub
sub
cmp
push
inc
test
push
sbb
add
push
push
add
push
hlt
jge
inc
mov
loopne
sarl
aam
or
inc
pusha
rorl
lods
push
lods
or
stc
pop
or
or
jo
fmulp
xorl
adc
or
in
sbb
jno
rclb
loope
push
fdiv
jne
jmp
sbb
jecxz
mov
shrl
pop
add
add
dec
orl
movsl
pop
iret
push
push
mov
sbb
jae
add
mov
rol
aad
xchg
nop
daa
xchg
pop
imul
pop
lret
adc
scas
push
cmp
rol
pusha
or
shr
and
sbb
int3
sub
xchg
adc
dec
sbb
dec
or
inc
and
arpl
icebp
fwait
enter
mov
xor
or
es
jne
xchg
or
sub
or
lret
incl
loopne
dec
je
sub
test
add
pusha
push
sbb
mov
inc
mov
subb
push
xor
cmp
push
and
jg
lds
or
adc
pop
adc
js
sub
pop
push
dec
sbb
add
mov
lods
dec
inc
test
es
sbb
and
push
adc
pop
xchg
push
lods
imul
sbb
jo
push
sbb
mov
push
enter
mov
test
pop
mov
xchg
rcrb
adc
je
mov
inc
cmp
sbb
push
sahf
inc
rol
ret
xchg
mov
leave
rorb
add
cmp
lods
push
sti
jae
pop
and
push
xor
inc
nop
ja
pusha
sbb
xchg
jge
loop
jo
mov
data16
out
add
and
ss
dec
xor
or
pop
cmp
lea
sti
arpl
test
cmp
mov
sub
push
xor
filds
add
xchg
mov
add
out
jl
push
inc
inc
dec
push
out
xchg
sub
sub
mov
mov
xor
add
aas
lahf
loop
sbb
jbe
jl
sbb
inc
andl
dec
xchg
dec
inc
arpl
jmp
pop
lea
sub
out
add
mov
jl
es
loope
sub
mov
orl
mov
or
sbb
subl
xchg
cmp
and
push
fstps
insl
add
jnp
jecxz
aas
xorb
push
addl
and
sub
cmp
push
icebp
sbb
adc
or
loope
adc
xor
pmulhuw
in
cli
std
inc
scas
rcrl
push
or
sub
xchg
xor
or
sbb
xor
push
sbb
fdivs
sahf
adc
or
sub
push
add
mov
mov
push
add
and
cmp
and
sbb
and
cmp
jmp
push
int
lds
mov
movsl
or
xchg
adc
ret
iret
jo
xchg
lock
arpl
cmp
pop
test
inc
ss
dec
and
inc
sub
outsl
dec
aaa
pushf
inc
sar
add
movsb
sub
cmp
ja
inc
pop
adc
cmp
push
sbb
arpl
test
cltd
outsl
movsb
sbb
je
test
mov
inc
lods
sbbb
popa
dec
or
fs
mov
mov
cmpb
jno
push
shrb
xor
add
cmpsl
rclb
inc
add
xor
jo,pt
mov
push
pop
rolb
pop
adc
push
push
cltd
inc
arpl
lea
mov
mov
add
data16
je
jl
mov
sub
sbbl
adc
and
pop
adc
sti
pop
cmp
jl
xor
lret
into
push
mov
repnz
dec
fmuls
xchg
pop
pop
cmp
pop
pop
push
fidivs
sub
dec
push
cmpb
es
loopne
push
jl
shrl
pop
enterw
and
aad
dec
jns
icebp
mov
std
dec
mov
stc
jnp
xor
pop
je
push
mov
cmp
movsb
test
js
cmp
or
push
xor
or
push
xor
cltd
inc
and
pop
jne
jns
push
jo
jge
sbb
movsb
std
push
jmp
push
sbb
jnp
inc
je
sub
dec
int
xor
xor
cmp
into
jl
insb
push
inc
ljmp
gs
pop
pop
lret
xor
insb
jne
push
lea
shl
cs
sbb
sub
movsl
mov
sahf
and
faddl
popa
push
inc
mov
push
inc
fs
pop
sbb
pop
sarb
inc
or
stc
outsl
iret
add
xor
or
sbb
fwait
testb
jns
je
lods
pop
push
sbbb
ss
out
sbb
test
mov
fimuls
jg
cmpsb
lock
push
add
inc
fs
stos
sub
adc
movsb
push
clc
mov
and
dec
jne
test
or
push
mov
stos
push
and
xor
imulb
mov
inc
dec
push
in
das
add
or
or
arpl
adc
pusha
push
stos
adc
mov
mov
mov
jle
bound
pop
shll
pushw
iret
aas
mov
das
sub
adc
and
stc
mov
push
ret
pushf
adc
lods
pop
sub
in
mov
and
das
cmpl
push
push
jmp
push
or
jae
sarb
xor
insl
popa
push
bound
aam
leave
cmpsl
mov
aaa
jge
cmp
lods
orb
adc
test
sbb
adc
cmp
xchg
bound
add
xor
insb
pop
xlat
push
or
push
xor
push
cmp
adc
mov
insw
add
aas
jne
xor
ret
and
les
pop
mov
test
mov
inc
mov
or
in
mov
add
out
xor
push
add
cmpsl
inc
or
inc
lcall
mov
xchg
les
js
push
pop
fdiv
je
push
test
sbb
sbbl
sbb
mov
jmp
push
sub
jl
pop
in
jnp
leave
jne
push
jmp
cmp
pop
dec
push
xchg
mov
rorb
adc
mov
popa
add
loopne,pn
stos
adc
sub
and
xor
push
push
imul
and
inc
mov
jns
or
lods
xchg
stos
mov
ja
mov
jns
cmc
adc
sbb
jmp
fisttps
adc
mov
addb
mov
jp
add
inc
test
outsb
xchg
sbbb
dec
xor
fiaddl
mov
mov
nop
jns
insb
in
xchg
mov
pop
add
fimull
shlb
jne
xor
jle
lods
testb
xor
dec
lea
fcoms
sub
xchg
inc
ret
and
jae
jnp
and
inc
nop
ret
mov
mov
aad
fs
nop
and
or
mov
or
add
push
sub
pop
and
push
sbb
dec
or
dec
icebp
lea
adc
lahf
popf
push
cmpb
ss
fsubrp
adc
cmp
add
adc
and
scas
rcrb
aad
sbb
and
mov
aam
push
insl
push
mov
mov
cmpsb
cmp
dec
mov
dec
sbb
ja
inc
adc
pop
jp
pop
mov
test
mov
add
and
jle
iret
add
and
ljmp
cmp
xlat
shl
push
sarb
stos
loopne
inc
mov
inc
adc
cmp
dec
add
sub
or
and
and
insb
mov
xchg
jmp
pop
and
adc
jbe
ficoml
xchg
sbb
xchg
ret
lahf
sub
test
call
push
data16
mov
cmp
inc
adc
je
sbb
xchg
andb
sar
jmp
jge
xor
jle
push
pusha
xchg
call
add
ret
mov
popa
adc
test
xor
xchg
cmpsl
sub
imul
sbb
add
jns
loopne
jg,pn
jmp
inc
notb
mov
movsl
jg
cmpl
push
loop
setge
outsb
loope
aam
adc
cld
pop
arpl
imul
orb
mov
inc
push
inc
popa
ret
cmpl
xchg
xor
addb
repz
in
xlat
and
dec
fs
sub
scas
ds
iret
xor
cmc
outsl
or
sti
fmul
lret
adc
jg
jmp
inc
lahf
mov
xchg
insb
add
call
cmp
jl
push
push
push
js
adc
add
or
push
pop
push
sub
loope
mov
sbb
push
hlt
stos
cli
pusha
jne
mov
mov
inc
ss
movsb
and
shl
dec
xchg
rol
in
lahf
and
outsb
cmc
dec
add
hlt
mov
imul
loop
jmp
jecxz
shrb
push
pop
push
adcb
dec
jmp
mov
xor
and
or
jmp
lret
or
call
enter
inc
or
inc
inc
dec
add
test
xchg
loopne
sbb
xchg
cwtl
outsb
orb
ret
sbb
in
push
pop
and
je
inc
test
fs
arpl
push
or
pusha
push
insb
je
sbb
dec
add
adc
movb
adc
sub
sbb
enter
jae
cmp
std
mov
inc
add
faddl
nop
or
or
outsl
inc
xchg
icebp
lods
and
addr16
in
jge
test
push
and
mov
sub
aas
add
sub
popf
mov
mov
jmp
and
xor
cmpsl
pop
add
jo
or
mov
in
test
aam
arpl
aaa
out
mov
fwait
lea
jmp
call
add
mov
test
adc
and
add
add
dec
nop
out
or
add
nop
add
push
out
xchg
cmp
mov
adc
push
and
mov
test
jno
cmpsl
lret
test
sarb
or
or
push
mov
scas
cmp
mov
pusha
push
push
xor
or
jo
inc
push
jb
adc
dec
insl
pushl
jo
or
mov
out
add
in
and
xchg
inc
xor
add
outsl
lret
je
xor
js
loopne
add
push
cli
sbbl
adc
bswap
or
sbb
js
xor
movsl
rcr
daa
in
punpcklbw
stos
loopne
inc
testl
pavgb
mov
sbb
cld
fs
add
jae
add
dec
std
adc
adc
mov
sub
inc
or
mov
add
je
adc
rcrl
push
mov
pop
scas
ret
push
inc
jg
and
adc
fcoms
and
adc
xchg
icebp
jmp
push
and
popf
inc
inc
js
repz
mov
test
xchg
inc
mov
adc
pop
cmp
fsubrl
daa
sbb
in
xor
imul
test
lods
xchg
inc
rclb
pusha
and
dec
out
push
inc
mov
sbb
dec
push
sub
pop
in
inc
push
les
dec
sbb
insb
jne
notl
in
fwait
gs
gs
loopne
xor
add
and
mov
cmp
insb
inc
stos
add
push
cmp
movsb
lock
jo
sub
add
ret
cltd
jbe
push
adc
ret
popa
jmp
in
push
lea
mov
or
inc
dec
in
or
xchg
pop
jo
sub
push
xchg
jmp
jo
test
lods
push
mov
sbb
jne
mov
fdivrl
scas
fmul
xchg
mov
xor
push
inc
jecxz
xlat
sbb
sub
jne
mov
ret
xchg
lret
pop
lret
and
pop
pop
fcoml
popa
jg
adc
xchg
fdivrs
mov
push
dec
call
aaa
fistpll
lds
adc
push
shr
dec
ret
out
xchg
out
mov
adcb
scas
pop
stos
in
les
hlt
mov
or
cmpsb
je
lea
adc
adc
mov
add
xor
fsts
imul
push
jecxz
loopne
lea
sbb
inc
add
addb
sub
out
pop
xor
mov
pop
mov
sub
insl
push
cld
ja
or
dec
xchg
jbe
push
xor
or
mov
notb
or
adc
pop
push
roll
pop
and
or
adc
mov
xor
sbb
pusha
xchg
sbb
mov
pushf
stc
nop
mov
sub
call
jp
jecxz
fstp
adc
xor
ja
and
sahf
sti
pushl
inc
sbb
cmp
lea
push
stc
jnp
outsl
lea
push
mov
dec
out
test
shrb
into
test
sbb
test
mov
push
pop
push
data16
cmp
stos
ds
test
sbb
and
or
inc
addb
das
jbe
testl
cmpsl
push
out
xchg
ds
sbb
push
shr
push
pop
mov
xchg
cmpsb
and
add
mov
int
adc
mov
test
mov
scas
mov
sti
enter
push
push
mov
push
enter
fdivr
push
dec
push
out
cmpsb
popf
std
push
and
shl
mov
loopne
loop
push
mov
sbb
les
movzwl
mov
cwtl
cmp
jmp
jo
sbb
add
sbb
cmp
ja
sahf
es
inc
jecxz
pop
mov
or
jl
and
lret
cmp
fsubl
int3
jg
jbe
test
iret
iret
mov
sbb
shrb
cmpsl
mov
imul
pop
lret
sbb
adc
icebp
pushf
jge
adc
add
arpl
jo
ret
cmpsb
scas
jp
js
rolb
mov
fsubr
movb
inc
and
lock
cmpb
rorb
and
enter
xchg
adc
mov
mov
nop
pop
and
add
or
into
and
pop
inc
ljmp
ss
addr16
clc
sbb
sbb
movsb
sbb
ret
mov
rol
mov
shr
mov
pushf
int3
ljmp
std
test
jmp
cmpb
mov
adcb
adc
push
adc
add
add
mov
sbb
shrb
dec
movsbl
cmp
mov
push
nop
xchg
cmp
jb
jbe
push
paddb
mov
push
mov
add
push
adc
add
lret
fadds
loopne
xchg
mov
hlt
adc
cmp
and
inc
movb
pop
pop
inc
lea
add
loopne
in
in
sbb
fbld
icebp
inc
pop
shll
movsb
push
loope
adc
fcoms
insl
fldenv
ret
cs
cmp
imul
divl
push
push
pusha
push
cmp
mov
lret
insb
cmp
xlat
pop
in
xchg
inc
adc
xor
jns
xorb
fidivrl
ret
bound
mov
shrl
dec
call
add
pop
sub
add
lods
cmpsb
mov
mov
xor
push
ror
xchg
pusha
push
dec
ja
les
xor
loope
std
enter
xchg
xchg
xchg
idivb
cld
push
add
add
xchg
xchg
xchg
add
int
xchg
or
jmp
or
jmp
or
jno
int
int
jmp
push
jmp
por
jmp
adc
int
int
pop
adc
push
adc
dec
adc
dec
adc
jmp
push
jmp
pop
jmp
sbb
xor
int
xor
jmp
sbb
es
and
jmp
push
jmp
pop
jmp
and
or
movsb
jmp
and
and
pop
dec
push
sub
push
add
and
rolb
lock
into
sub
push
cmp
testb
push
repnz
push
iret
repz
pop
pusha
push
iret
repz
mov
iret
repz
mov
repz
mov
rol
sarb
repz
fcmovu
in
pop
cmp
repz
repz
std
pop
add
jmp
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
add
push
sbb
push
pop
and
and
aas
push
enter
dec
cmp
cmp
icebp
dec
add
outsb
xchg
mov
rcr
jmp
int3
inc
dec
cltd
add
xor
add
jbe
in
ret
cmp
cmp
xor
pushf
les
rorl
add
stos
andl
push
andl
movsb
push
mov
movsb
lea
mov
mov
mov
cmp
jb
inc
sub
test
sub
or
bound
sar
movsb
into
xor
lret
mov
hlt
ljmp
lret
lods
sbb
sbb
jge
or
jbe
cmp
pop
ss
xchg
fldt
adc
je
faddl
rolb
sbb
or
out
or
sbb
lds
pusha
dec
insb
adc
loop
flds
subl
push
cmp
mov
fcompl
pushf
rolb
add
jae
pushf
push
icebp
je
dec
rclb
jl
jae
sbb
ljmp
and
mov
cmpb
rclb
fidivrl
mov
je
push
fdivs
hlt
lea
and
cmp
push
test
sbb
pop
shrl
push
adc
inc
inc
cmpsb
ret
or
lods
pop
jge
cmp
mov
cmpb
sbb
mov
daa
add
rorb
mov
movb
push
jno
sub
jnp
mov
stc
ja
lea
imul
lret
clc
stos
outsb
aaa
push
sbbb
es
aaa
mov
dec
sbb
lock
add
xchg
xchg
and
xor
and
fcoml
in
dec
inc
adc
push
add
or
mov
scas
dec
pop
push
and
xchg
xor
rcrb
add
pop
mov
push
and
add
shrl
cs
push
andl
push
or
popa
out
test
inc
fucom
nop
inc
pop
stos
xchg
jbe
inc
cwtl
roll
jns
sar
in
mov
jmp
clc
add
nop
mov
mov
dec
pop
scas
mov
lock
test
rolb
push
adc
fdivs
add
scas
mov
add
xlat
sbb
add
sbb
test
pop
lret
out
push
shlb
add
stc
xor
enter
stos
xchg
scas
sbb
fsub
movsl
mov
push
and
mov
rorl
cmp
sti
clc
pop
cltd
jb
cmp
add
mov
movl
shlb
out
push
sub
mov
xchg
popf
push
pop
mov
push
inc
jnp
inc
pop
nop
inc
adcl
ss
sbb
adc
loope
cmp
jl
stc
mov
sub
mov
sar
add
mov
aaa
cmp
add
cmp
jbe
cli
es
lea
cmp
or
popa
push
jg
and
or
js
mov
movsl
jl
js
sbb
cmp
add
mov
inc
mov
or
adc
lods
outsl
or
icebp
jl
dec
movsb
std
jge
xchg
sahf
cmp
push
insl
mov
test
jae
ds
dec
repz
nop
jmp
and
pushf
jmp
daa
lods
test
cmp
shlb
ret
mov
mov
sbb
mov
jecxz
js
mov
jmp
mov
inc
mov
sbb
pop
push
inc
in
ss
sbb
je
push
sub
mov
inc
lahf
cltd
movl
mov
sub
jp
inc
pusha
sbb
cltd
ja
jmp
nop
inc
popf
mov
jbe
xchg
mov
fwait
xor
sub
ret
inc
pop
add
push
add
daa
jbe
sarl
add
insb
or
or
movb
movsb
and
add
pop
mov
push
xor
js
jne
test
clc
mov
in
mov
push
push
sbb
or
push
adc
adc
push
mov
mov
add
inc
jmp
sbb
pop
and
push
cmp
aam
in
mov
sbb
jne
test
inc
adc
adc
daa
pop
jo
add
sub
sub
jno
add
add
lret
mov
mov
add
and
or
mov
inc
movl
in
fimull
mov
and
pop
enter
and
pop
cmc
mov
incb
pop
mov
cmp
jno
addr16
sbb
add
jge
lock
xor
cld
jns
pop
ja
sub
sbb
adc
xlat
ljmp
cltd
or
int
jge
movsb
test
jle
pop
jl
adc
cmp
pop
pop
shlb
flds
repz
sub
icebp
es
fdivr
je
jmp
xor
mov
pop
neg
push
push
rolb
nop
inc
rorl
xor
push
pushf
sub
fwait
orb
or
adc
dec
fistpl
mov
and
mov
jmp
cmp
jmp
push
jns
inc
cltd
sub
or
or
pop
inc
push
push
lock
add
inc
enter
mov
outsb
push
cltd
sbb
mov
imul
cli
inc
int3
jo
mov
dec
inc
call
and
lret
lea
push
repz
and
out
ficoml
mov
imul
sub
lret
out
fisubl
dec
cli
push
mov
ret
int
mov
xchg
push
dec
mov
push
test
lar
pop
jnp
pop
mov
jno
je
push
scas
pop
jmp
cmpsb
test
jmp
lea
daa
shrb
mov
mov
loope
dec
lods
xchg
xchg
mov
sbb
inc
adc
and
in
inc
jg
mov
mov
mov
jo
jmp
or
jo
and
ljmp
nop
xchg
mov
or
mov
mov
mov
mov
call
imul
cmp
push
pop
inc
inc
rorl
or
imul
inc
nop
sbb
rolb
or
pop
fs
push
cld
sbb
xchg
add
add
dec
xchg
push
xor
fnstenv
das
inc
mov
sar
jae
and
jno
ret
sub
and
call
aaa
or
jae
loope
and
xchg
icebp
cld
cmpl
push
adc
mov
mov
out
or
outsl
jge
sbb
pusha
dec
rclb
shlb
xor
jne
test
jl
pop
lahf
push
dec
mov
rcrb
adc
test
cmpsb
jmp
hlt
je
inc
mov
inc
inc
inc
mov
mov
pusha
loopne
push
pop
in
je
push
inc
nop
push
sub
movsb
mov
adc
ss
push
pop
hlt
sbb
insb
dec
push
and
pop
dec
sub
pop
jmp
mov
ret
mov
ss
mov
mov
and
push
ret
cmp
sbb
aaa
or
add
jbe
scas
dec
jl
out
shlb
sub
xlat
ja
adc
dec
pop
xchg
stc
jnp
sub
pop
pop
sahf
pushf
push
jo
lcall
mov
pop
mov
xchg
mov
das
inc
loop
clc
cmpb
inc
xchg
lret
add
xchg
inc
dec
inc
lock
and
mov
mov
stc
push
inc
popa
fdivl
xchg
xchg
leave
adc
ds
imul
mov
xor
arpl
mov
or
in
pop
add
mov
test
je
push
xor
pop
mov
cli
mov
insb
add
aas
mov
je
imul
fstpl
call
imul
sbb
cmp
sbb
xchg
pop
leave
add
test
mov
cmp
mov
mov
dec
push
lock
dec
hlt
push
out
push
addb
or
cmp
add
out
sub
sub
and
pop
xor
jg
mov
xor
inc
hlt
mov
push
mov
and
scas
add
rcrb
pcmpgtb
mov
test
je
push
das
push
dec
lea
dec
adc
test
and
inc
and
xor
sub
or
jle
xor
xchg
out
jo
sbb
cs
and
and
das
or
sbb
pusha
pusha
sbb
and
push
xchg
sbb
nop
aaa
int
sbb
pop
add
pop
fistpl
leave
sbb
ret
sub
adc
dec
and
add
sbb
push
cltd
or
je
in
mul
dec
mov
out
sbb
or
jle
push
cmp
sbb
or
cmp
pop
popf
and
ja
jns
lea
push
mov
nop
and
jo
sub
movsb
loop
and
cld
insl
sbb
fildl
daa
je
rorl
fstl
sti
les
jo
mov
or
dec
dec
sbb
or
mov
dec
sbb
and
xor
jmp
pop
push
adc
movsb
dec
pop
cmp
cwtl
or
je
cmp
xor
xchg
cmp
inc
push
xchg
inc
mov
fisttpll
xchg
leave
xor
and
xchg
mov
adc
mov
mov
in
mov
or
jle
mov
jo
sub
rolb
test
pop
or
outsl
jmp
fstpl
shl
or
fisubl
jns
xor
mov
rorb
mov
pop
ficoms
inc
mov
stos
xor
push
sub
inc
lods
sub
push
lods
addr16
or
ret
cmp
push
xchg
jl
adc
mov
jo
pop
mov
add
xchg
sub
mov
add
mov
and
aaa
outsl
add
cmpb
mov
ja
jecxz
xchg
push
xorb
dec
xor
or
xor
or
cmp
enter
cmp
mov
rolb
in
xchg
pushf
les
push
jb
js
mov
lea
aas
mov
cs
xorb
add
jmp
shrl
push
cmp
jge
mov
fisubs
push
inc
inc
inc
hlt
mov
add
lret
xchg
fcmovnb
adc
push
add
inc
stos
shlb
lods
dec
push
jne
pop
mov
lock
clc
clc
cld
sub
jae
movl
mov
or
push
add
popa
lcall
aaa
in
notl
dec
je
add
adc
xor
fiaddl
orb
popa
jmp
mov
or
mov
sub
or
mov
xchg
call
dec
or
rol
inc
jg
cli
or
mov
sub
xor
fsubs
std
or
je
push
add
sbb
pop
dec
pop
sub
loope
adc
repz
inc
add
jmp
sub
in
add
push
add
push
icebp
cmp
jne
sbb
adc
mov
pushf
cmp
cmp
xchg
roll
xor
add
jo
in
lea
lock
inc
cmp
inc
jmp
sbb
mov
or
cltd
idiv
inc
inc
imul
pop
mov
mov
lock
arpl
mov
mov
jp
xchg
sbb
je
mov
add
or
cmp
pop
push
lock
cmp
or
data16
and
adc
push
push
lock
push
pop
gs
dec
add
ss
jbe
cltd
imul
sbb
jne
jmp
daa
pop
out
cmp
cmp
push
cmp
sarb
in
clc
jae
sub
mov
outsb
gs
and
cmp
jae
mov
shrl
add
xchg
scas
lret
testl
mov
pop
je
cmp
push
cmp
jne
inc
dec
je
les
and
sub
pop
cmpl
adc
fadds
jb
mov
lock
ss
je
ret
test
cmp
dec
add
loop
sbbl
push
ret
sbb
sub
shufps
sbb
in
add
mov
mov
mov
jp
jl
or
jg
push
ficompl
mov
jmp
and
push
jmp
sub
aaa
aaa
inc
jl
inc
jg
aaa
jp
add
int
fld
out
dec
mov
sub
mov
inc
je
sahf
mov
jle
test
jg
imul
daa
inc
xchg
or
and
xchg
mov
mov
mov
fcom
push
leave
pop
nop
or
loop
mov
movsl
ret
or
push
push
out
movsl
js
jmp
push
pushl
push
pusha
fs
push
push
inc
cmp
inc
mov
fbld
add
push
dec
xlat
cmc
ret
fs
imul
mov
or
andb
inc
lods
jbe
pop
test
aaa
lcall
sub
js
sub
inc
inc
mov
or
in
lods
inc
sub
push
pop
das
lock
dec
movsb
xor
xor
fsubs
inc
cmpb
mov
push
pop
add
adc
add
cmp
cmp
or
push
out
jmp
xor
inc
nop
or
inc
dec
fisttpl
xor
xchg
loopne
push
scas
xlat
mov
pop
cmovbe
in
pop
testb
inc
cmp
cmp
or
setbe
inc
mov
push
or
xchg
ret
cmp
out
je
mov
jne
cmpsb
pcmpeqb
or
cmc
inc
push
ja
mov
push
clc
mov
out
pop
cmp
add
jne
push
adc
cld
cmp
jmp
bound
inc
mov
add
imul
cs
jne
into
sub
or
xchg
sahf
shll
mov
addb
adc
inc
ret
ret
pop
jg
cmp
lds
subl
loop
ret
push
mov
sbb
test
mov
hlt
jp
lods
or
dec
clc
xor
dec
cmp
test
sub
inc
pop
or
sub
push
lock
sub
jge
jne
das
shrl
subb
xor
sbb
pop
push
add
andb
and
xor
cmp
inc
inc
pusha
adc
les
pusha
push
adc
dec
inc
dec
and
mov
add
xchg
jp
ja
lcallw
xchg
fimull
mov
cmp
inc
cli
in
inc
shr
push
adc
insb
mov
icebp
jmp
push
rolb
sbbl
add
fldl
test
sbb
inc
and
lods
push
sbb
and
js
mov
addl
orb
or
dec
scas
xchg
xor
fadds
je
or
mov
dec
and
mov
pop
fadd
out
les
pop
jne
push
movb
add
mov
test
cmp
dec
fiaddl
adc
inc
incl
cmp
add
fs
xor
sbb
sbb
adc
and
sub
andl
in
test
or
cmp
sbb
mov
inc
nop
add
inc
ds
cmp
outsb
sbb
pop
add
cmp
push
popf
mov
inc
or
or
push
dec
sub
cs
sbb
sbb
dec
xor
or
flds
jmp
and
lcall
dec
add
push
cmpb
jne
mov
xchg
fincstp
mov
cmp
jns
je
add
inc
sub
and
jne
dec
ret
sbb
pop
lea
mov
or
add
lods
sub
inc
adc
ret
sbb
dec
mov
dec
cmp
in
and
test
into
push
jb
adc
add
lock
and
in
call
rolb
cmp
mov
idiv
sub
mov
push
sub
pop
mov
rcl
add
jp
into
shlb
arpl
pop
iret
imulb
das
push
addb
bound
shll
sbb
jnp
in
out
es
adc
xchg
dec
dec
and
push
leave
push
cmp
les
movsb
or
pop
call
cwtl
or
pop
ljmp
and
xor
and
push
loopne
xchg
shrb
lcall
pop
jmp
rorb
sbbl
daa
cmpsb
xor
push
cmpb
or
inc
and
pusha
fs
repz
sub
add
mov
push
clc
add
and
mull
add
adc
shrb
xchg
ds
sbb
fistl
cmp
push
sbb
outsl
add
push
jnp
cmp
push
or
push
push
push
lret
add
xchg
pop
xchg
gs
jb
push
test
loopne
sub
pop
lret
xchg
sub
call
notl
call
xor
sbb
stos
push
addr16
loop
mov
mov
outsb
jmp
sbbb
xor
mov
mov
push
movd
push
test
jmp
aam
push
inc
push
insl
test
leave
or
sub
dec
ret
adc
lods
jle
xchg
or
adcl
js
or
sbb
in
lcall
inc
xor
cmp
jb
addr16
push
sbb
test
test
shlb
ret
push
sbb
adc
xor
push
or
fsubrl
push
mov
inc
movsl
xchg
hlt
das
mov
pop
mov
xchg
stos
xchg
jmp
mov
mov
or
arpl
fwait
aam
add
dec
jne
adc
pop
and
mov
je
dec
adc
test
or
or
push
rol
push
dec
cld
minps
or
adc
cmp
lods
or
shlb
inc
inc
adc
xlat
push
scas
push
inc
adcl
jg
sbbl
fdivl
dec
sbb
in
pusha
call
mov
or
inc
outsl
mov
add
add
cmp
or
jmp
push
fists
adc
adc
mov
and
xchg
jo
push
push
jl
inc
call
hlt
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
mov
jbe
sbb
add
sub
aaa
sbbb
mov
mov
inc
test
jb
fsts
mov
xor
add
sti
or
and
sbb
push
bound
fldenv
movsl
sbb
sbb
loop
jno
jl
xor
dec
sbb
data16
cmp
iret
add
fildl
mov
into
je
mov
lea
mov
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
push
test
mov
xchg
jo
xchg
pop
mov
outsb
mov
pop
push
nop
push
ja
push
add
fdivl
or
push
dec
pop
js
rorb
mov
je
inc
xchg
mov
add
outsl
cmp
pop
push
loopne
mov
jle
dec
inc
sbb
arpl
cmc
in
fnsave
dec
sbb
cmc
jno
or
cmp
xor
fists
dec
movsl
ljmp
dec
add
xorl
jecxz
sbb
and
add
and
roll
jecxz
jnp
cmpsl
inc
push
add
mov
push
rclb
sub
popa
pushf
cmp
push
push
dec
pop
inc
dec
xor
pop
pop
daa
scas
lea
rolb
jns
in
sub
into
xor
pop
test
sbb
mov
push
loop
push
cmc
hlt
test
bound
mov
sub
mov
adcl
sahf
push
roll
dec
mov
ret
or
xchg
mov
test
ds
loopne
fadds
stos
pop
aaa
cltd
or
dec
pushf
imul
aaa
movsb
jb
loopne
xchg
movsb
push
out
mov
test
rorb
cmp
adcb
gs
popf
cwtl
rolb
nop
lock
push
inc
cmc
mov
cmp
sbb
push
aad
test
push
and
inc
loop
movl
xchg
or
push
or
bound
jmp
clc
xchg
dec
ret
mov
push
or
or
xchg
mov
out
ja
push
cltd
in
add
nop
mov
fwait
or
bound
add
jns
loopne
or
push
ret
xchg
aas
sub
shll
data16
inc
mov
xchg
add
fcoml
add
ret
js
in
rol
sbb
and
stc
outsb
movsl
add
pop
pop
and
lods
add
loopne
testb
sub
add
rorb
lods
jb
fadds
pop
pop
cli
mov
sub
arpl
jne
imul
inc
mov
adc
out
arpl
mov
rcl
dec
sarl
push
xor
or
faddl
fldenv
es
jecxz
mov
ss
imul
add
jg
sbb
call
je
fs
and
push
xor
jmp
rcr
inc
pop
dec
cmp
aam
mov
mov
dec
xchg
lods
daa
sbb
add
or
inc
adc
push
and
mov
roll
imul
inc
cmpl
push
ret
sbb
outsl
test
add
cwtl
jecxz
xor
shrb
loopne
xchg
rcrb
cmp
and
or
dec
imul
adc
jmp
xchg
loop
dec
mov
push
adc
cwtl
les
add
sbb
inc
sar
sbbb
pop
jmp
rorb
sbb
push
or
popf
adc
mov
adc
lods
add
xlat
lock
and
mov
push
ss
adc
dec
sub
xchg
loope,pt
push
xor
dec
mulb
icebp
xchg
in
cmp
inc
or
jo
repz
or
cmp
enter
and
sub
sbb
int
adc
lods
or
mov
push
xor
mov
pop
ss
fdivr
and
ss
nop
test
ficompl
or
cmp
lods
sbb
orl
sub
cwtl
adc
int3
adc
push
dec
cld
sub
ret
add
or
mov
addr16
mov
je
mov
mov
sbb
cwtl
jge
shll
jns
add
je
cmp
insl
inc
cmp
lahf
mov
cltd
aam
test
rorl
cmpl
pop
cs
jle
mov
outsl
pop
push
jae
movsb
lock
cmp
jmp
out
and
add
mov
loop
jae
push
mov
mov
xor
mov
imul
jo
sbb
sbb
mov
test
js
mov
gs
jl
pop
dec
and
cs
or
cmpl
sub
insl
push
fisubl
push
movsb
mov
adc
mov
mov
mov
xchg
lods
dec
and
push
dec
dec
mov
lcall
in
ds
and
inc
cmp
add
jge
loopne
mov
js
icebp
jge
outsl
in
inc
sub
loopne
adc
fmuls
adc
stos
ss
jecxz
dec
push
stc
clc
or
push
mov
aaa
jp
pop
jmp
sbb
add
inc
push
popa
leave
rcl
adc
mov
push
cli
ja
adc
pop
xor
or
sub
out
aam
pop
in
jae
cmp
pop
mov
jmp
sbb
mov
adc
ffreep
adc
outsl
pop
mov
insb
aaa
nop
stos
lods
add
or
mov
out
add
pop
or
shr
rep
adc
data16
ficoml
cmp
adc
inc
add
sub
sbb
shll
insb
in
adc
daa
mov
sub
jmp
pop
and
cltd
pop
mov
mov
stos
pop
jg
sub
mov
push
imul
in
and
hlt
popf
test
cmp
ja
out
iret
fmulp
xor
jb
fs
xorb
push
or
adc
push
adc
lcall
sub
es
cmp
js
jns
sbb
and
test
jge
inc
rorl
movl
mov
push
pushl
sbbl
inc
cld
addb
rclb
lret
cmpl
cmpsb
pop
xchg
call
pop
outsl
sahf
adc
in
mov
mov
or
loopne
cmp
insl
adcb
xchg
add
pop
mov
clc
out
cmpl
mov
sub
xchg
scas
cld
pushw
sbb
call
aad
in
mov
add
sub
xchg
adc
sub
adc
or
out
and
cwtl
pop
mov
cmp
test
adc
mov
out
repz
les
sbb
repz
push
in
inc
or
adc
cmp
enter
jg
loopne
leave
testb
adc
pop
sbb
mov
add
push
sub
adc
in
loope
js
data16
add
xchg
and
out
pop
aas
pop
cmp
mov
jmp
and
mov
cmp
mov
add
test
sti
mov
ja
inc
jmp
mov
subl
scas
or
xchg
rcrb
xchg
dec
fcmovnbe
lcall
scas
and
jmp
mov
pop
test
cmc
pop
movsl
add
call
xor
xchg
movsb
out
lea
loope
call
pshufw
add
push
andb
jne
cmp
cmp
sub
inc
push
pop
cmpsb
push
add
inc
cmpsb
ss
jp
add
jnp
jl
adc
nop
divl
je
sar
pop
lods
pushw
xor
loope
mov
les
push
push
push
push
mov
sbb
int
pusha
mov
xor
push
jg
subl
xchg
ret
clc
je
loope
aad
mov
mov
sub
clc
inc
sub
and
ret
push
mov
out
sub
inc
pop
adcb
insb
jae
test
or
bound
dec
push
and
add
adc
dec
ds
mov
in
jne
cmp
sub
sbb
or
xor
add
add
enter
push
je
cmp
jbe
push
add
popa
adc
testb
pop
mov
push
and
ret
xchg
inc
dec
xor
cs
adc
lods
or
nop
pushf
lock
pop
inc
daa
fwait
mov
lods
xchg
xchg
inc
inc
push
loop
call
call
insb
test
or
hlt
push
outsb
js
adc
xchg
xchg
jo
fs
add
jbe
mov
and
jg
in
nop
scas
xchg
inc
push
sub
inc
jo
mov
ljmp
xor
enter
adc
cmp
jo
pusha
ficoml
adc
cli
mov
cmp
adc
inc
jmp
jb
data16
sub
dec
push
sub
add
pop
in
xor
fwait
or
dec
shll
mov
sbb
hlt
addb
xchg
arpl
push
mov
pusha
mov
outsb
cwtl
mov
out
cli
mov
jne
mov
adc
fisttps
cmp
das
sub
sar
outsl
pusha
jle
push
xor
pop
div
add
lea
or
inc
mov
rcr
nop
ljmp
roll
shl
mov
je
cmp
or
loopne
mov
sub
mov
lea
imul
shr
pop
jp
adc
jle
cmp
xchg
push
or
fsubl
andl
gs
sub
jne
and
push
pushf
mov
imul
sub
push
aam
add
rorb
jne
or
sbb
sbb
push
inc
xchg
cmp
shrl
ret
jo
shlb
adc
sub
cmp
insb
hlt
sub
jne
bound
adc
mov
rorl
cmpsl
sub
lret
fidivrl
adc
insb
clc
int3
add
add
jge
stos
add
imul
or
les
in
enter
pop
js
js
cmp
jb
neg
and
bound
mov
rorl
jmp
neg
dec
mul
or
rorl
jmp
stos
mov
imull
mov
dec
ljmp
jns
pop
sbb
hlt
push
add
shrb
push
xchg
xchg
sbb
sbb
push
jae
push
out
mov
xchg
mov
ljmp
js
adc
xor
mov
cld
push
sub
mov
movb
or
js
or
mov
mov
sub
cwtl
scas
pop
push
icebp
in
jbe
pop
and
sbbb
jne
fnstcw
dec
lock
ds
and
clc
jg
fs
int3
jno
add
movd
movaps
out
push
enter
shlb
jle
or
add
lret
sub
cmp
and
lret
or
ret
inc
mov
jg
ljmp
cmp
cli
jnp
mov
and
je
jne
add
adc
push
add
and
movsl
fisubrs
add
outsb
ret
mov
add
mov
mov
int
sub
fcmovb
sbb
adc
push
dec
adc
mov
rcrl
jbe
inc
clc
dec
and
orb
dec
mov
mov
rolb
pop
add
std
incb
je
mov
jb
test
mov
bound
adc
int3
jmp
movsb
fstpl
rol
push
dec
push
cmp
cld
add
flds
inc
hlt
jns
ret
push
stos
mov
movsl
ljmp
fsubl
push
pusha
inc
dec
pusha
mov
nop
or
repnz
xor
adc
lods
adc
push
mov
add
push
push
mov
push
sub
ja
xorb
lods
ds
inc
sub
clc
ja
imul
cli
jo
std
cmp
adc
jne
inc
cmpb
out
adcb
adc
ss
mov
adc
add
out
or
push
shll
jne
arpl
ret
daa
cmpsb
ljmp
divl
int3
and
xor
jno
push
jmp
mov
or
mov
xor
jp
arpl
mov
xor
xor
cwtl
icebp
mov
sbb
or
das
mov
xor
das
loopne
add
xlat
cwtl
inc
adc
or
enter
add
adc
add
test
mov
jge
cs
jecxz
imul
pop
lock
inc
negl
mov
inc
push
or
inc
jne
inc
push
adc
lods
bound
mov
push
sbb
movb
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mull
ss
enter
sbb
push
or
inc
push
pop
jno
add
call
mov
fldenv
xlat
je
jp
leave
add
jnp
in
insb
lret
fidivrs
call
sbb
pop
jge
inc
leave
pop
cmp
loopne
adc
nop
loopne
add
out
jnp
std
add
or
jne
orl
add
inc
cs
push
nop
imul
add
mov
out
push
ret
and
int3
fs
adc
or
adc
fildl
cmp
inc
pop
sub
test
cmp
sub
cmp
xor
fs
int3
out
mov
sbb
imul
cld
repz
jl
push
jo
mov
stos
insb
ja
loope
sub
xchg
cmp
inc
jb
or
pushf
xchg
pusha
mov
movsl
shrb
clc
mov
sub
in
ror
rolb
xchg
shlb
ret
pop
cltd
mov
jmp
inc
push
fs
pop
pop
push
ret
pop
movsl
sti
mov
insl
jle
or
enter
push
rolb
sbb
adc
jo
inc
xchg
loopne
mov
pop
test
invd
shr
arpl
out
push
outsb
push
push
rolb
add
test
add
rcl
mov
in
mov
adc
cmp
cwtl
pusha
jle
cmpl
sub
lea
movsb
pop
inc
inc
js
dec
lods
or
mov
push
lock
and
pop
cld
xor
jne
aad
jo
hlt
mov
jne
out
jmp
clc
jg
or
sbb
mov
cmp
lock
pop
lret
rol
loope
or
cmp
jne
dec
jmp
shl
scas
mov
mov
jne
inc
aaa
push
lds
testb
rorb
inc
push
lds
or
mov
lock
dec
push
lds
inc
stos
std
outsl
inc
and
int3
mov
aas
rol
jge
roll
cmp
jo
xchg
inc
movsb
daa
pop
add
stc
repz
ret
in
adc
out
push
dec
xor
jno
pop
jne
shlb
mov
cmp
jb
rep
jmp
ss
cmp
jb
push
add
test
mov
lea
aam
or
inc
xor
mov
pop
push
int
pop
cmp
inc
add
add
in
xor
push
and
cltd
dec
cmpsb
test
inc
xor
xchg
mov
jnp
or
push
and
adc
lahf
int
or
cmp
hlt
mov
mov
repz
repz
call
cmp
cmp
lock
dec
clc
push
clc
cld
jle
inc
loopne
lea
cmp
pusha
sbb
jmp
test
icebp
js
mov
nop
inc
subl
pop
sti
and
jbe
or
sbb
lea
mov
test
and
std
aas
insb
jle
cld
out
ds
mov
and
xchg
daa
stc
sub
loopne
fcoml
push
cmp
add
insl
data16
mov
add
sahf
inc
push
out
push
outsb
in
xchg
lret
nop
dec
dec
xor
insl
sub
mov
cwtl
sub
push
mov
nop
push
cwtl
repz
repz
repz
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
mov
iret
and
in
push
hlt
aas
add
test
push
add
andl
adc
pop
push
sbb
sbb
jge
aam
jbe
psubq
inc
imul
out
and
or
or
gs
scas
movsl
pop
sub
adc
adc
fidivs
sub
cld
add
push
movsl
mov
jns
pop
cmp
xlat
mov
dec
movsb
sub
cmp
lcall
sbb
mov
mov
mov
adc
faddl
add
es
inc
jl
push
popf
inc
fists
cmp
test
daa
fistpl
adc
cmp
ret
push
pop
cmp
xor
xor
les
and
mov
rolb
inc
mov
or
adc
enter
adcl
aas
fbstp
mov
rolb
mov
xchg
inc
and
cmpb
addl
ss
shrl
loop
mov
inc
fs
push
lcall
pop
ret
les
xchg
xchg
arpl
insb
jl
cmp
and
aaa
loope
jg
jmp
mov
mov
xchg
cmp
sbb
outsl
pushf
mov
cmp
into
lea
cmp
das
push
popa
pop
adc
jmp
sub
cmp
jne
out
ds
jnp
adc
or
add
inc
and
jne
pop
in
sbb
xor
aad
jns
in
add
je
jne
orb
jnp
pop
dec
or
mov
lock
rcll
in
mov
test
inc
and
xchg
cli
loope
mov
push
fwait
andb
sub
mov
push
cmp
and
xor
mov
shr
mov
xorl
push
jbe
inc
les
adc
call
push
cld
stc
push
mov
push
inc
mov
xchg
mov
daa
orl
jns
ja
pop
adc
je
rclb
lret
test
or
les
ret
mov
sbb
aad
inc
ret
enter
dec
pop
add
dec
mov
es
push
sub
cld
sub
fstpl
jne
jge
imul
fimull
push
mov
les
arpl
xor
adcl
nop
or
das
sub
adc
leave
sti
mov
inc
call
push
mov
rcrb
jne
push
cld
cld
cmp
cltd
or
add
jg
addb
add
js
mov
aaa
push
ljmp
sbb
jne
adc
jmp
xchg
rcrb
mov
mov
sub
mov
jecxz
bound
ds
je
or
into
sti
imul
fisubrs
pop
pop
gs
mov
mov
std
pop
sbb
add
push
test
shl
fdivrp
mov
push
adc
push
fnstsw
pop
add
pop
jbe
lea
xchg
mov
adc
sbb
jp
pcmpeqb
out
test
shlb
sbbl
xchg
cld
jb
sahf
fwait
lcall
shlb
mov
and
pop
inc
push
es
add
adcb
inc
jmp
js
es
cpuid
lods
adc
lret
jmp
test
jne
test
pop
add
loopne
rolb
adcl
push
jnp
divb
dec
out
add
pushf
pop
xchg
xor
lret
hlt
imull
cld
out
inc
outsb
inc
pop
inc
xor
mov
fs
mov
sarl
push
jo
mov
xor
addl
pop
jp
push
jmp
jle
cmpl
scas
xchg
sub
inc
nop
jmp
test
lods
adc
add
inc
js
push
add
or
cli
scas
or
leave
inc
dec
push
rolb
push
test
inc
push
rol
sub
adc
sbb
lods
cmp
jp
mov
mov
dec
ret
out
mov
jmp
inc
mov
cmp
and
push
push
mov
jbe
rcrl
and
xor
pop
inc
xchg
inc
rclb
loop
mov
fcomip
mov
test
addb
xchg
lcall
jne
jmp
dec
repnz
adc
cs
pop
add
out
mov
jne
mov
or
stos
sahf
xor
jo
mov
push
int3
lcall
xor
enter
sbb
daa
aad
in
jns
pop
sub
jno
dec
cmp
rorb
jae
outsb
into
out
push
pusha
sub
mov
aaa
out
mov
push
cld
jne
mov
push
cmp
jne
dec
jae
xor
es
jne
call
dec
bound
aam
sbbl
jb
mov
add
push
inc
incl
dec
or
repz
mov
jmp
std
push
int
std
mov
jmp
fldt
jmp
nop
adc
adc
inc
inc
inc
mov
out
cmpsl
inc
add
mov
fdiv
mov
mov
inc
add
push
xor
int3
adc
loopne
in
loopne
inc
movsb
mov
dec
and
stos
repz
add
adc
inc
lock
es
dec
dec
filds
sub
add
addl
std
iret
or
inc
push
or
xchg
sub
dec
dec
pop
pop
shlb
sub
int
xor
rcrl
ror
insl
add
rcl
inc
sbb
push
sub
push
xor
rol
repz
or
popa
loop
dec
std
rclb
out
inc
call
jmp
xchg
fadds
rorb
pop
or
mov
adc
add
cmp
jg
push
or
add
mov
decl
clc
push
les
jae
push
push
push
push
pushf
rol
mov
iret
and
mov
push
and
ja
movsb
inc
and
jae
out
dec
mov
and
sub
inc
adc
inc
xchg
push
mov
in
xchg
movsb
pop
pop
pop
and
mov
lods
jmp
inc
cwtl
inc
dec
and
xorb
xor
pop
mov
fisubrl
push
insb
inc
mov
movsb
xor
aaa
call
stc
mov
cmp
inc
dec
adc
xor
mov
hlt
push
aad
jo
xlat
loope
inc
cmp
imul
mov
mov
popf
das
in
mov
imulb
divb
push
or
add
out
cmp
and
push
push
push
mov
shlb
dec
shll
or
adc
or
mov
sbbb
mov
je
add
loop
xchg
repz
lock
and
sub
and
add
js
xor
pop
jno
mov
xor
mov
loope
movsb
and
or
add
adc
sub
push
test
in
ja
int
fs
jne
pop
mov
push
adc
rcrl
inc
or
sti
mov
stc
and
mov
inc
je
mov
lea
neg
mov
mov
mov
sbb
or
add
jmp
or
mov
out
sbb
pusha
loope
dec
pop
insb
sahf
sbb
scas
mov
pop
add
mov
inc
cmp
jb
subl
cwtl
cmc
cld
dec
inc
mov
pusha
pop
ret
and
push
mov
push
scas
adc
adc
gs
ret
iret
sub
hlt
pop
push
sub
or
mov
jecxz
push
adc
xor
mov
divl
lret
scas
add
inc
dec
stc
addl
xor
xor
mov
jo
sub
jne
and
adc
das
shrl
or
dec
cwtl
pop
inc
cld
add
xor
ss
or
push
repnz
and
lcall
jmp
pop
addr16
dec
sbb
aam
or
xchg
dec
sbb
pop
aaa
adc
xor
mov
ja
add
sub
jle
mov
cli
mov
or
jl
and
lret
int
out
mov
sbbl
mov
or
mov
pop
flds
xchg
mov
loop
pop
mov
inc
jmp
and
outsl
sti
fwait
sbb
jmp
adc
jne
sub
pop
pop
xor
inc
stc
xlat
hlt
cmp
inc
adc
cmp
movsb
push
xor
push
mov
js
or
scas
repnz
in
repz
adc
pop
mov
pop
add
mov
adc
mov
and
sbbb
clc
icebp
je
jg
mov
and
je
lret
sbb
loopne
xor
sub
sbb
test
and
lock
adc
test
or
sub
outsl
jbe
push
add
and
jo
call
sbb
rclb
shll
add
loopne
std
mov
sbb
inc
mov
lea
xchg
sbb
movsb
sbb
or
and
mov
leave
xchg
inc
outsl
cmc
inc
mov
mov
test
add
insl
or
sarb
pop
push
sbb
ss
lcall
xor
jne
mov
inc
lock
mov
inc
cld
insl
cmpsl
inc
mov
jne
fs
add
add
rcl
fisttps
mov
addb
movsb
aas
sub
add
push
mov
mov
add
sbb
push
sub
movsb
adc
orl
cmp
add
add
cmpsb
sbb
dec
pop
mov
call
icebp
sbb
adcb
notl
mov
insb
sbb
xor
jb
ljmp
jne
cmp
add
imul
jno
add
bound
je
inc
clc
jb
lea
push
adc
fidivl
js
pop
dec
aaa
xchg
adc
push
pop
cmp
data16
cmp
pushf
js
fcomp
sahf
jp
inc
cmp
adc
sub
pop
test
mov
adc
mov
jne
nop
adc
or
add
sti
or
adc
outsb
jmp
roll
mov
popa
pop
or
mov
add
es
in
in
and
sbb
mov
testb
call
add
mov
push
and
push
cwtl
outsl
mov
jg
adc
add
jmp
mov
faddl
mov
xchg
mov
jmp
jo
insb
pop
jp
test
pop
add
lea
dec
adc
movsl
inc
jecxz
pop
xor
inc
sub
or
or
ret
inc
push
inc
fdiv
lret
repnz
mov
inc
test
add
incl
jbe
pusha
leave
mov
pop
adc
lock
mov
gs
add
filds
adc
sbbl
push
push
push
into
and
or
lock
sbb
scas
xor
dec
decb
out
mov
fisubrl
pop
sbb
jne
ja
rdpmc
inc
pusha
aas
hlt
mov
xor
test
adc
stos
cmc
subb
rcrl
dec
jp
jp
inc
cld
pop
xor
pusha
lea
out
jae
or
or
rcr
sub
in
pusha
fsub
movl
cmp
adc
mov
add
add
mov
insb
push
mov
cmp
pop
addl
movsl
test
out
decl
cmp
pop
jnp
adc
mov
jbe
xor
pop
notl
ds
sti
decl
mov
scas
lcall
pop
cmp
popa
cmpsb
push
cmc
stos
push
mov
pusha
adc
imul
jmp
and
adc
enter
mov
loopne
dec
sub
dec
fstpl
push
pop
push
jmp
aam
mov
xchg
fsubrs
mov
out
dec
or
sarb
cli
scas
add
repz
push
in
sbb
inc
adc
mov
jns
or
repnz
add
or
xorb
es
cmp
cli
xchg
loopne
mov
cld
xor
inc
aam
xchg
xor
jae
test
js
stos
sbb
xchg
inc
push
push
jno
mov
fwait
mov
lock
in
mov
adc
and
lods
add
addl
hlt
mov
stc
or
jg
js
cmp
cmp
addb
mov
pop
iret
xchg
je
mov
scas
mov
idiv
adc
push
fs
cmpsl
add
sbb
adc
and
inc
call
jo
rolb
call
xchg
push
or
push
movsl
jmp
dec
je
fimuls
or
pop
pop
mov
mov
cs
sbb
add
jp
in
jmp
sub
and
push
mov
add
sub
push
stos
push
icebp
movsb
push
jmp
cmp
test
add
xchg
push
imul
addl
inc
xchg
loopne
lahf
sbbl
addr16
jne
mov
addr16
add
dec
mov
xchg
inc
mov
dec
es
jmp
dec
repz
xchg
test
je
dec
mov
and
cmovp
lret
enter
pop
jns
pop
in
imul
mov
mov
or
orb
cwtl
add
push
iret
or
js
in
movsl
lds
leave
add
ja
pop
push
mov
out
pop
rorb
add
dec
pop
cmc
pop
pop
in
push
jmp
sub
pop
sbb
pop
xor
or
adc
fcoml
xchg
pop
inc
cmp
push
fs
cmp
pop
sahf
jae
adc
add
add
inc
aas
cmp
jae
stos
arpl
pushf
aam
sub
adc
push
sub
subb
mov
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
sbb
rolb
cmpsb
dec
dec
adc
test
sbb
dec
fst
fsubrl
dec
gs
je
or
or
dec
and
rcll
clc
mov
sarb
mov
adc
jb
movsl
cmp
xchg
cli
or
lea
mov
xchg
and
dec
pop
mov
push
jo
addr16
add
and
mov
or
scas
pushl
adc
dec
sub
mov
je
push
pop
sti
sbb
pop
mov
outsb
dec
subl
add
sub
xorb
push
push
dec
mov
movsl
xchg
and
movsl
ror
rcrb
add
psadbw
into
cmp
lret
adc
add
sbb
push
push
jo
cmpsb
inc
lods
movsl
stos
sbb
fldl
lcall
cmp
sarl
ret
bound
jl
inc
inc
push
jns
jb
rcrl
data16
cli
out
jnp
push
inc
cmp
pop
test
xchg
clc
push
mov
stc
mov
cli
pop
cltd
rorl
imul
add
pop
lcall
insl
inc
sub
shlb
push
pop
push
mov
or
je
ret
add
mov
cmp
pop
int3
les
mov
jmp
dec
in
add
call
cltd
pop
inc
mov
inc
add
push
adc
out
orl
cmp
je
clc
sbb
sarb
xlat
je
xor
push
arpl
clc
popa
jb
jne
or
ficompl
push
push
inc
fcmovne
nop
mov
mov
push
js
in
push
add
pop
das
js
aam
rol
int3
push
pop
mov
mov
lods
fdivrs
mov
lret
inc
dec
mov
loopne
roll
adc
and
popa
test
pushf
cmc
push
xor
xchg
xchg
rorl
xchg
mov
orb
pushl
sub
testb
jb
inc
imul
cwtl
dec
lock
add
popa
mov
cmc
rol
adcl
jmp
jno
in
inc
pop
and
repnz
hlt
mov
inc
aam
xchg
mov
add
addr16
jge
cli
mov
sahf
pushf
push
ljmp
mov
add
in
xor
movsb
sbb
mov
xchg
xchg
sub
leave
pop
test
mov
in
and
mov
popa
test
jo
in
lcall
dec
call
rorb
and
dec
pop
popa
scas
addb
cmp
mov
or
mov
xchg
idivb
lcall
sbb
stc
and
popf
insb
sub
dec
loopne
jnp
cld
jmp
adcb
jo
lods
dec
arpl
in
push
lcall
inc
mov
mov
mov
sub
fsubrp
pop
ja,pt
or
cmpb
rorl
rcl
cmpsl
dec
inc
pop
movsl
in
rclb
push
push
lock
dec
push
lods
jmp
xchg
push
sbb
sub
mov
dec
sub
or
cmp
xlat
xor
loopne
repnz
jle
jno
fnsave
lock
push
js
call
clc
mov
aam
fidivl
movsl
and
in
adc
mov
adc
fcmovne
lea
pop
jne
mov
xor
repz
popa
jp
arpl
lea
add
dec
pop
lds
push
repnz
arpl
scas
fs
dec
lret
xchg
and
sbb
push
inc
mov
push
xorb
aad
mov
dec
notb
cmp
push
and
mov
aam
jnp
push
rclb
in
adc
xor
and
cs
decl
jns
jnp
xchg
push
movsb
pushf
loop
sahf
out
mov
lcall
jmp
sbb
clc
cmp
stos
loop
addr16
addr16
ja
or
inc
pop
nop
push
jo
xchg
mov
pop
icebp
mov
orb
jno
mov
adc
sbb
cmp
repz
xor
inc
popa
add
decl
sahf
insb
push
je
cwtl
adc
or
pop
jns
adc
mov
test
jb
dec
adc
or
sbb
sub
std
jge
or
je
mov
fcomps
cli
adc
testb
jne
pop
stc
and
jle
ffree
sbb
loope
pop
sub
inc
add
loopne
jmp
dec
imul
mov
mov
jne
push
sbb
mov
mulb
rcll
add
mov
inc
sbb
push
sbb
jne
out
mov
adc
lods
shlb
push
fistpl
and
jecxz
add
sub
mov
sbb
push
cld
aad
sbb
or
jmp
imulb
sub
je
movsl
dec
jbe
paddd
push
lcall
jns
cmpb
sbb
movsl
and
fimull
data16
or
rorl
popf
icebp
pop
add
pop
xchg
mov
mov
xchg
add
or
and
adc
icebp
pop
jle
or
push
aam
add
lods
push
roll
mov
jns
inc
aam
sar
adc
xor
lock
push
std
call
cmp
rcrl
mov
popa
mov
loopne
rcrb
int3
mov
jge
push
bound
dec
dec
lock
pop
cmp
mov
mov
rcrl
adc
mov
and
lods
test
test
inc
add
pop
cmp
jmp
insl
inc
mov
sub
std
add
inc
aam
rolb
mov
push
sub
push
sbb
rcrb
mov
mov
aam
or
repnz
adc
push
loopne
repnz
cmp
and
and
test
and
imul
popf
fistps
or
mull
je
mov
pop
idivl
cwtl
or
mov
push
sub
xchg
negb
pop
pushf
nop
clc
lods
test
add
fldl
adc
xchg
lea
push
add
jo
adc
cmp
test
js
push
adc
cmpsl
jmp
adc
pop
or
int3
imul
shl
dec
pop
mov
add
adc
lret
or
mov
push
sbb
cmp
aaa
mov
pushf
sub
ss
xor
sti
mov
jo
movsl
xchg
or
dec
ss
mov
sub
iret
xchg
rolb
or
std
lea
xchg
fcomps
mov
jle
clc
or
loope
mov
shrb
les
add
hlt
insl
xlat
sbb
fbld
cld
xor
faddp
xchg
cmp
adc
mov
lock
pop
in
xchg
data16
clc
jno
insl
push
jne
pushf
push
stos
insb
repnz
jmp
cli
and
add
add
add
push
dec
sub
mov
add
lea
ja
and
int3
inc
int3
int3
add
sbb
test
cwtl
scas
add
dec
sbb
pop
test
add
fimuls
pop
mov
outsb
repnz
cltd
inc
bound
enter
xchg
adcb
test
jge
or
push
mov
ja
mov
jbe
push
inc
dec
fisttps
fisubrs
xlat
inc
pusha
and
or
inc
rolb
fmuls
jp
movsb
notb
loope
xchg
pop
divl
bound
cs
aaa
push
inc
lods
mov
dec
inc
adc
push
sbb
xchg
in
ret
pop
pushf
call
jns
stc
adcb
mov
shr
pop
jbe
mov
mov
lods
add
rcr
sbbl
push
pop
cwtl
adc
mov
shlb
push
mov
fstp
jo
test
or
jmp
lea
add
rcrb
stos
xorb
sbb
out
xor
dec
addb
cs
pop
mov
fcoml
clc
pop
mov
lods
jg
sarl
push
jmp
andl
mov
ljmp
rcrb
cmc
in
decl
cmpl
dec
test
das
pop
pop
jg
push
into
test
sub
dec
xchg
call
cmp
popa
cmp
fucomp
lret
or
cs
mov
ret
add
jb
aam
lods
jl
push
jle
mov
popf
jne
add
movsl
je
into
icebp
rolb
adc
jnp
mov
call
xor
lods
fsubrp
jl
call
or
lods
xlat
mov
pop
add
cmpl
sub
sti
test
mov
inc
loopne
pop
ja
orl
pushf
loopne
jg
add
xor
sar
pop
lret
add
dec
xchg
xchg
push
jnp
dec
test
cwtl
sti
or
rcr
clc
jp
lret
dec
or
je
ret
xor
outsb
sub
jbe
sub
pop
or
jb
in
push
pop
add
xor
sbb
dec
push
sbb
test
xor
rcrb
pop
mov
push
add
sub
loopne
les
push
imul
xchg
lea
cltd
pusha
xchg
ja
movsl
mov
mov
in
xchg
xchg
or
adc
movsl
or
jb
hlt
stc
pusha
mov
push
or
inc
insb
pusha
adc
lods
pop
lock
xor
fisttpl
test
rolb
adc
sbb
mov
push
ss
js
insl
add
add
movb
inc
xor
movsl
sbb
incl
insb
aaa
lcall
outsl
and
jne
js
pop
in
test
or
push
lock
daa
sub
sarl
or
ror
cmp
sbb
sbb
sbb
pop
push
xor
fists
pusha
test
add
cwtl
pop
mov
dec
mov
inc
movsb
dec
fdivrs
and
or
test
lock
lea
and
arpl
imull
cmpsl
loope
xorl
call
pop
fstpl
lcall
dec
lods
add
dec
inc
shrb
sub
lret
dec
push
pusha
or
dec
xorl
hlt
sub
in
add
sbb
mov
add
in
adc
aad
push
mov
add
push
insl
cmp
push
jl
jl
xor
divb
int3
cmc
add
jno
les
mov
xchg
inc
ss
xlat
sub
and
movsb
test
inc
mov
sti
fwait
add
leave
or
add
mov
push
dec
xor
jmp
mov
inc
jge
jl
lods
xlat
mov
mov
jmp
mov
dec
loop
xchg
xor
cmpsl
mov
jl
je
cmpb
cmp
jns
push
sbb
dec
xlat
test
sub
push
jo
add
mov
call
pusha
je
or
sub
xchg
arpl
fsubrs
ss
xor
pop
aaa
gs
fsubs
shlb
insl
xchg
xchg
mov
xchg
dec
andl
jb
push
cwtl
sub
lds
push
xor
shl
cmpsl
add
sbb
mov
push
add
mov
mov
dec
ficompl
push
addr16
xchg
hlt
jmp
cmp
jle
sbb
out
pop
imul
ret
pop
push
ljmp
cmp
orl
ljmp
inc
fstpt
pop
ret
mov
movsbl
leave
pop
arpl
neg
xor
scas
nop
ror
dec
rorb
out
fucomip
push
sbb
adc
push
push
push
cmpsl
and
sub
bound
cmpb
jne
and
inc
jg
cmc
clc
movsb
loop
adc
mov
push
xor
cld
cli
mov
fprem1
shlb
push
inc
daa
add
push
les
mov
xchg
cmp
outsb
roll
bound
dec
mov
lock
and
inc
inc
pop
adc
jle
jmp
loope
adc
or
add
mov
mov
sub
jbe
ficoms
jl
jae
add
lret
cli
movsb
outsb
dec
shl
mov
xchg
xchg
data16
jnp
or
xchg
cmp
sbb
jge
jl
cmp
popf
jno
mov
popa
lea
loopne
das
sbb
pusha
push
inc
jecxz
inc
and
stc
cltd
push
push
push
xchg
aas
jo
dec
add
je
icebp
sbb
stc
cmp
push
dec
jmp
sbb
xchg
sub
inc
cmp
adc
push
pop
xorl
cmp
je
jge
or
add
dec
jmp
push
lcall
fmuls
sub
dec
sub
cmp
fsubl
xchg
std
aas
sar
int
and
mov
xor
sub
push
adc
ror
push
sub
push
inc
adc
jne
dec
cmp
int3
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
jle
adc
jns
test
fimuls
lret
pop
mov
ret
gs
outsl
and
negl
xor
add
es
insb
icebp
sbb
pusha
mov
cmp
mov
loop
aam
mov
shl
inc
in
or
adc
test
mov
movsb
mov
adc
mov
dec
loope
dec
and
xor
cltd
fst
add
push
and
mov
adc
jp
jmp
mov
mov
jge
push
lock
jo
or
xchg
and
xor
je
gs
lea
fcmovb
out
movsl
pushf
mov
pop
mov
sbb
ret
mov
or
or
pop
push
addr16
or
adc
mov
aaa
sbb
jmp
es
addr16
add
movsb
jb
push
jo
fdivp
cmp
in
inc
mov
lods
test
movsb
xor
enter
adc
shlb
pop
jecxz
cmp
inc
cs
out
movsl
mov
jle
jnp
pop
adc
int3
std
repz
ret
adc
sub
ret
cli
fwait
inc
mov
sbb
imul
gs
rolb
bound
es
xchg
mov
jb
daa
dec
cmpsb
add
mov
pop
mov
mov
testb
lock
pop
and
push
mov
in
or
jnp
push
pusha
add
fld
sti
pop
dec
cmp
mov
ljmp
xor
sub
shll
jl
mov
shll
aam
adc
jnp
xchg
lea
add
sbbb
js
rcrb
jge
and
ljmp
xchg
outsb
ret
rolb
push
mov
push
add
lods
dec
call
js
scas
jnp
cs
and
xor
sub
push
lock
popa
add
dec
mov
push
in
sbb
pushl
insl
and
mov
call
lahf
and
add
testl
hlt
stos
mov
addl
push
faddl
mov
call
adc
je
jns
jmp
inc
loopne
or
outsb
sub
fisttps
mov
lds
jmp
aaa
jno
cmp
imul
dec
jecxz
sbbl
repz
mov
jl
add
pop
or
and
push
int3
rol
jmp
in
jle
int3
fbstp
or
addb
or
mov
cs
push
jb
icebp
add
faddl
add
idiv
add
mov
push
pop
jbe
mov
rolb
pop
xchg
insb
add
add
sbb
lods
cmc
xor
pop
and
xchg
addb
call
mov
mov
jo
rclb
pop
pop
fcoms
push
fstp
mov
xor
or
rclb
and
insb
and
subb
lcall
js
add
das
daa
inc
in
jp
sub
sub
lea
into
fmuls
push
inc
sar
imul
lret
sbb
adc
mov
aam
sub
jne
lock
in
xchg
push
mov
popa
mov
mov
pop
push
add
push
arpl
fcoms
pop
push
loop
je
xchg
jne
shrb
inc
mov
daa
popa
inc
inc
sbb
and
jo
pushf
lcall
je
loop
out
and
or
imul
or
dec
inc
xchg
pop
fsubr
mov
leave
jecxz
sub
fucom
les
dec
lea
sbb
jns
cmp
inc
cwtl
jp
sahf
aaa
sarb
add
pop
push
ret
mov
pop
es
inc
lret
pop
jl
flds
mov
ss
cmc
or
or
xor
movsl
jns
insb
and
nop
dec
jl
cmp
mov
sub
subb
pushf
push
mov
push
test
sbb
adc
lock
fsubs
cmp
outsl
push
mov
xlat
sti
xchg
loopne
dec
fdivl
xor
add
sbb
daa
or
or
and
sbb
or
iret
xor
pop
stos
xchg
pop
dec
sbb
or
jecxz
lcall
fs
dec
ljmp
pop
or
xor
sti
sbbb
inc
ds
cld
dec
xchg
test
dec
xchg
mov
rclb
xorb
call
icebp
ss
rol
les
cmpsb
into
inc
and
addb
push
cmp
fcmovb
hlt
sub
add
fcmovu
jmp
cmpl
add
xchg
mov
mov
push
repz
insl
dec
add
cmp
out
and
outsb
pop
cs
and
push
or
popf
jmp
rol
sub
cmp
and
addl
test
shll
mov
adc
or
addb
jl
xor
xchg
xchg
dec
arpl
clc
hlt
pop
dec
mov
xchg
test
test
and
push
test
sbb
mov
inc
dec
insb
xor
call
pop
xchg
les
adc
pop
sub
pop
imul
push
xor
bound
out
sahf
js
ret
jo
add
mov
test
inc
iret
adc
cs
push
pop
push
gs
das
cmp
jno
pop
ja
inc
repnz
mov
fsubrs
je
rcrl
jae
dec
xor
and
rorl
in
mov
or
lods
push
arpl
add
sbb
lea
adc
add
pusha
cmp
aaa
in
stos
jne
popaw
fsubs
aas
imul
lret
and
hlt
and
stos
jne
pop
mov
jo
icebp
pop
push
inc
mov
fistpll
insb
jne
scas
popa
aam
jp
or
fidivl
mov
push
sbb
inc
mov
adc
jno
aam
inc
fidivrl
xor
inc
jb
lods
insl
cmp
inc
cmp
xor
and
and
aam
shrb
aad
rcrl
xor
sbb
add
or
jb
xor
cmp
aam
mov
dec
mov
das
lea
aad
sbb
mov
mov
sub
and
test
mov
dec
cmc
mov
adc
stc
fildl
sub
aas
pop
pop
mov
mov
ffreep
push
xchg
pop
gs
hlt
inc
shll
push
loopne
inc
shrb
inc
scas
inc
cs
mov
mov
dec
adc
daa
or
add
aas
jb
xor
rolb
xchg
push
pop
jmp
sub
in
and
enter
and
mov
popa
sbb
je
cmp
pop
mov
nop
mov
push
cmp
in
stos
arpl
mov
xlat
lret
loopne
aaa
gs
fwait
cltd
add
mov
mov
mov
adc
jne
pop
dec
dec
push
scas
inc
cmp
xor
and
lods
mov
clc
jb
xor
add
inc
loopne
xchg
or
ret
in
cld
sbb
push
and
jecxz
push
sbb
fildl
aad
pop
sbb
inc
pop
adc
cld
add
mov
mov
fcomps
jnp
or
into
lods
inc
es
loopne
lods
push
hlt
sbb
lea
cmpsb
mov
push
mov
sbb
sub
lret
aas
xor
lods
popa
imul
mov
adc
in
dec
sub
or
loopne
sbbb
pop
push
jb
imul
inc
rolb
dec
push
add
mov
inc
mov
dec
xor
add
push
pop
inc
aam
dec
xor
lea
test
imul
sub
mov
in
push
leave
add
loopne
xchg
inc
push
and
fists
sbb
and
sahf
sub
ljmp
mov
in
mov
mov
add
sbb
cmc
fstp
push
inc
subb
xchg
test
repz
dec
xchg
xchg
gs
mov
hlt
hlt
mov
ja
loope
mov
pop
fistpll
xchg
sub
mov
enter
push
out
jp
or
mov
xchg
ret
mov
das
jne
pop
mov
push
fildl
cmp
movsb
fwait
cmp
sub
and
ret
fcom
jge
ret
popf
and
stos
push
cmp
rol
mov
pop
add
cmp
rclb
les
adc
adc
rclb
add
daa
sbb
jmp
mov
sbb
mov
filds
or
add
add
or
cmp
pop
movsl
outsl
adc
or
jne
sub
pop
in
fs
mov
and
sbb
nop
sbb
ror
add
imul
test
mov
jp
push
mov
push
mov
mov
jns
lds
test
mov
bound
or
je
dec
jae
popf
testb
cmpsb
pusha
dec
adc
or
mov
jne
lock
push
push
sbb
gs
adc
incl
push
scas
cmpsb
loopne
or
fbld
add
sub
and
hlt
mov
add
xor
lods
sbb
or
fwait
movsl
xor
add
xor
in
in
mov
outsl
insb
add
pop
add
lret
adc
mov
loopne
sbb
popf
out
cli
lcall
jne
insl
mov
shrl
or
jne
push
aaa
mov
daa
inc
dec
push
xor
stos
mov
loopne
ficoms
push
push
mov
lods
jae
cli
aas
or
sub
mov
and
mov
test
inc
inc
cld
les
and
pop
out
pop
mov
mov
push
sbb
lods
jmp
and
jge
addr16
ret
or
mov
lea
mov
insb
leave
sub
mov
cmp
and
mov
and
lea
cli
rorb
and
cld
jmp
movb
das
shrb
dec
push
clc
dec
clc
mov
adc
insb
fidivs
ja
push
adc
sbb
push
pop
mov
or
xor
lahf
icebp
push
rol
sbb
jno
loopne
out
mov
mov
pop
insb
push
insb
ret
insl
popf
sahf
std
xchg
loop
mov
dec
sub
mov
in
jne
movl
pop
pop
xchg
add
cmp
std
jne
adc
sti
inc
mov
outsb
jmp
sahf
cmp
jmp
xchg
test
mov
inc
shlb
xor
adc
pop
xchg
jmp
add
xor
push
inc
arpl
fwait
xchg
inc
mov
mov
movb
pop
shrb
xor
cmp
inc
shl
into
std
mov
inc
sbb
mov
lock
and
xor
movsl
mov
push
subps
shlb
js
aaa
and
inc
cmpsl
mov
cmp
or
push
call
jge
or
rcl
fiaddl
sbb
lds
cmp
pop
inc
push
leave
inc
xchg
jmp
dec
inc
push
int
lock
sub
enter
cli
std
push
mov
fs
cmpb
or
lcall
loopne
faddp
add
shlb
inc
pop
clc
sti
rcrb
jmp
xor
inc
and
push
out
fnstenv
inc
mov
adc
dec
sbbb
shll
leave
inc
fimuls
dec
jne
loopne
pop
pop
repz
mov
xchg
cltd
jle
sbb
dec
jo
mov
jecxz
xor
push
mov
inc
dec
jne
sahf
adc
xor
jmp
rclb
insb
addr16
add
jmp
cmp
js
push
cmp
punpckhdq
mov
aam
loopne
sbb
add
enter
cmpsb
add
out
mov
call
adc
subl
leave
mov
test
add
mov
mov
jp
inc
or
cli
out
scas
and
adc
cmpsb
scas
inc
sbb
inc
movsb
xor
cmp
inc
sub
aam
aad
cmpsl
cmp
inc
jo
insb
ljmp
add
add
in
les
push
or
xor
lock
jge
into
dec
divl
inc
sub
inc
jmp
xor
mov
sbb
mov
test
jmp
mov
test
stos
and
insl
adc
jno
daa
ljmp
xchg
mov
xor
xor
sub
cmp
sbb
add
insl
pop
pop
test
push
das
push
mov
and
int
popa
sbb
add
outsl
fiaddl
jmp
js
sbb
mov
lea
test
adc
clc
fistpll
repnz
cmpl
xor
adc
pop
shrb
add
movsl
sub
imul
adc
sub
xchg
adc
add
add
add
sar
daa
dec
ret
je
mov
xorb
xor
pop
and
mov
pop
adc
out
ror
pop
inc
mov
not
mov
das
adc
fidivl
inc
inc
sbb
sub
and
dec
pop
sbb
ds
and
bound
and
cmpl
test
cwtl
daa
sbb
xchg
jbe
jg
aam
jle
jg
push
lcall
test
inc
imul
cld
inc
add
inc
and
jns
mov
cmp
mov
pop
or
call
sub
mov
add
xchg
lock
cmpsb
pop
or
sbb
inc
pop
in
sub
aam
lock
or
add
jo
or
mov
insb
leave
lcall
pop
fwait
xor
dec
or
dec
xor
clc
ret
or
pop
dec
test
in
pop
push
sbb
les
hlt
inc
dec
jp
sbb
stc
push
sbb
je
test
or
push
lds
das
subb
aam
adc
addb
inc
pop
rcrl
inc
xor
pop
cmp
dec
jmp
and
inc
inc
or
clc
inc
add
add
test
je
xchg
pushf
inc
shl
movsl
sub
rclb
push
bound
add
mov
jo
sbb
jae
inc
cmp
sbb
adc
mov
dec
inc
ret
push
and
sbb
xor
cmp
addl
jl
or
jb
fwait
les
sub
jbe
pop
adc
fcompp
xor
shr
pop
cmc
shl
or
pop
iret
push
adc
sbb
lea
scas
clc
mov
sbbb
nop
add
nop
xor
inc
cmp
add
inc
dec
pop
cmp
dec
and
jle
add
mov
sbb
decl
repnz
dec
sahf
and
jecxz
insb
and
dec
push
incb
adc
dec
out
popa
cmp
or
mov
mov
insl
jg
jno
mov
jge
adcl
push
flds
dec
adc
sbb
add
mov
lret
enter
xor
movsb
cmp
and
daa
pop
cmpsl
sahf
test
or
xchg
test
push
and
mov
arpl
xchg
jo
dec
mov
push
out
cmp
mov
sub
or
daa
or
in
jb
enter
inc
pop
fcmovnu
adcb
pop
rorl
pop
sbb
les
add
add
popf
setnp
push
sub
shlb
push
dec
enter
sbb
mov
pop
pop
pushf
aam
or
mov
adc
jl
add
sub
test
mov
test
mov
cmp
sub
mov
push
jle
push
fstpl
and
hlt
popa
fs
mov
or
inc
lsl
sbb
or
inc
rcrb
pop
push
xchg
pop
pxor
push
push
lock
pop
add
clc
jg
loop
shr
je
jmp
jg,pt
push
inc
adc
and
inc
push
pusha
jo
xor
enter
shlb
mov
nop
subb
imul
or
xor
mov
je
xor
fisttpl
push
inc
xchg
enter
mov
sub
jne
push
je
sbb
sbb
cli
pop
pop
ret
cs
fnsave
push
mov
bound
add
cli
shr
inc
repz
add
cmp
push
adc
cmp
daa
in
sti
mov
mov
xchg
outsb
adc
push
test
push
ret
in
push
adc
mov
mov
or
shll
push
inc
mov
mov
loope
mov
bound
dec
mov
dec
je
shl
idiv
adc
pop
add
push
mov
fwait
inc
pop
mov
sub
int
sbb
push
add
or
sub
test
jg
orl
pushf
or
push
or
cld
mov
popa
arpl
ds
mov
dec
enter
sbb
mov
dec
dec
adc
push
call
lcall
rcl
xor
nop
add
or
in
mov
arpl
popf
in
or
xchg
sub
cmpl
sahf
jge
fadds
mov
into
das
add
add
jns
sbb
add
pop
dec
add
and
sbb
mov
jbe
adc
jmp
adc
jmp
add
jmp
lahf
sarl
pusha
iret
xor
call
jo
sbb
add
mov
stc
cmpsl
xor
or
push
jae
inc
imul
mov
jmp
mov
das
mov
pop
les
mov
adc
bound
cld
fmull
fstl
mov
cmp
push
mov
push
mov
and
adc
jns
mov
popf
push
cmpsb
scas
mov
sahf
int
fnstenv
sub
lea
jge
or
push
fdiv
push
mov
add
in
sbbb
int3
hlt
es
cmp
xchg
or
insb
dec
inc
outsl
jne
inc
push
jnp
sub
mov
clc
or
pop
into
and
inc
inc
add
adcb
inc
faddl
test
add
out
fisttps
or
inc
test
xor
jmp
sub
xchg
and
ret
and
sbb
xchg
push
push
test
jmp
xchg
push
nop
xor
fistpll
mov
adc
outsl
mov
test
cld
movsb
jg
pop
divl
adc
mov
ret
pop
in
xchg
sub
lahf
sbb
xor
jle
mov
out
fists
shrb
add
les
mov
push
icebp
fstps
mov
shll
fucomip
stos
bound
adcb
out
xor
sbb
or
cmp
or
inc
iret
jns
xchg
push
and
mov
adc
add
test
or
int3
addr16
or
loop
es
inc
loope
pop
sbb
xchg
mov
mov
movsl
loop
sbb
jne
inc
rcr
mov
mov
sub
les
xchg
aad
add
or
movsb
xchg
lret
outsb
cmp
or
mov
mov
sbbl
std
mov
jp
xchg
std
lods
std
mov
and
and
add
push
lcall
push
mov
add
movsl
mov
mov
or
mov
stc
test
lea
push
scas
jno
pop
fadds
or
fldcw
mov
iret
movsl
cmp
mov
into
xchg
out
lret
lahf
mov
popf
push
cmp
push
push
jns
or
and
xchg
mov
mov
shll
insl
cmpsl
xchg
out
inc
xchg
mov
mov
jo
cs
pop
adc
mov
lret
pop
cmpsl
pop
or
add
xlat
push
pop
sbbl
das
cmp
enter
add
pop
addr16
mov
cs
mov
mov
xor
daa
adc
call
ds
test
pop
xor
aad
data16
inc
adcl
sub
dec
cmp
inc
sub
jno
sbbb
inc
call
add
jne
cmpb
sbb
ja
cmp
inc
testb
dec
cmp
push
cmpsb
rclb
ss
js
loop
xchg
es
push
mov
cmpsb
movsb
xor
adc
adc
mov
push
popl
rolb
subb
in
test
inc
jns
push
jbe
popf
mov
pop
xchg
push
xor
pushf
dec
pop
and
je,pt
push
or
pushf
adcb
cli
and
lods
repz
xor
cmp
jne
xor
dec
adc
push
adc
scas
jecxz
loopne
cmp
push
dec
xchg
movsb
pop
mov
lret
push
and
fsubrs
push
or
out
xor
jg
orb
shll
ret
add
push
cmpsl
aam
and
ljmp
xchg
test
pop
aam
jmp
mov
mov
jnp
sub
jno
inc
imul
push
mov
cmpsl
call
cmp
inc
add
and
pop
add
or
popa
imul
mov
cmpsl
sub
add
jl
add
cmpsl
mov
cmpsb
jl
enter
out
adc
jns
insb
xor
mov
pop
mov
add
or
cmp
sbbl
inc
dec
or
adc
cmc
jecxz
add
outsl
mov
fisttpl
and
loopne
stc
mov
lea
and
mov
hlt
jge
clts
sub
mov
scas
jne
addr16
and
loope
cmp
jno
imul
xorl
mov
fbstp
push
out
jge
jge
std
roll
xor
mov
int
sub
call
jo
or
loopne
add
pop
pushf
jne
mov
dec
jae
fldl
loopne
mov
lret
xchg
mov
add
idivb
dec
cmpsb
outsb
dec
or
pop
cmp
jae
dec
pop
mov
pop
repz
mov
push
xor
rcl
cmpsl
xor
aad
leave
dec
rcrb
adc
push
outsb
mov
or
sbb
neg
adc
neg
es
jnp
mov
dec
sbb
pop
jmp
das
rcrb
jne
orb
in
xchg
jno
bound
jae
es
xor
dec
shlb
rep
stos
movsl
and
fcomp
adc
ret
into
xor
xorb
ficoms
inc
ja
push
aas
dec
cs
leave
shrb
push
fdivl
ss
and
nop
and
mov
mov
cmc
shll
pusha
add
pop
fldl
cmpsb
mov
sub
test
insl
pop
sbb
jmp
dec
adc
mov
int3
mov
dec
mov
sub
mov
rcrb
dec
in
sub
mov
decl
fdivs
mov
xchg
or
imulw
cmpsb
adc
sub
iret
push
sub
jmp
mov
xor
add
jne
cltd
inc
aad
jno
adc
xchg
adc
or
nop
sbb
add
cmp
hlt
push
nop
rcr
cs
ficoml
fdivl
jmp
sbbl
lds
cmp
lods
pop
dec
push
add
je
push
or
push
out
pop
sbb
push
adc
push
clc
lods
push
daa
pop
mov
mov
fidivrl
adc
pop
mov
test
add
fstps
push
test
test
out
iret
mov
loope
daa
stos
push
fs
loopne,pn
lods
test
push
nop
andl
arpl
rorl
fsubrs
mov
leave
rcll
addr16
loope
lea
or
sub
outsb
mov
mov
xchg
mov
mov
lock
xor
or
lods
lret
aaa
ret
imul
push
aas
jmp
xor
add
add
xchg
arpl
pushf
movsl
sbb
pop
loop
pusha
aas
scas
movsl
push
fcoml
xor
inc
scas
adc
imulb
mov
mov
fidivs
aaa
outsb
dec
inc
xlat
mov
pop
and
call
inc
fs
sbb
cmp
fs
add
mov
adc
lods
inc
xchg
sub
mov
or
cltd
dec
test
stos
xchg
add
mov
lret
sti
mov
fs
movsb
cs
jb
mov
adc
cmc
push
outsl
fsubr
xchg
inc
enter
ss
add
js
jecxz
add
aas
dec
add
nop
mov
incl
mov
mov
push
push
mov
outsb
dec
cwtl
inc
mov
cwtl
lods
mov
cmp
jb
lods
mov
lea
pop
lea
enter
test
pushf
pushf
dec
sub
pop
sbb
sbb
addr16
adc
test
stos
cwtl
test
dec
push
sbb
inc
dec
xchg
jl
mov
ds
test
cwtl
and
cwtl
enter
nop
nop
mov
and
mov
cmp
fs
mov
cmp
int
insl
outsl
aaa
mov
js
or
popa
ss
hlt
mov
arpl
repz
mov
dec
stos
divb
mov
loopne
add
int
div
mov
arpl
das
dec
stos
add
jbe
ret
mov
clc
stc
js
mov
mov
sbb
inc
andb
shl
pop
test
inc
mov
and
mov
inc
or
pop
pop
call
ret
or
addb
and
push
jns
adc
inc
push
sbb
inc
test
icebp
mov
sti
stos
and
sbb
or
pop
mov
mov
push
jmp
inc
jae
mov
popf
cwtl
add
push
jg
adc
jbe
mov
or
sbb
dec
push
ss
les
or
testl
jo
sub
mov
loopne
rolb
dec
push
inc
cltd
add
mov
in
lock
fwait
mov
or
scas
and
adc
sbb
pop
and
mov
enter
inc
mov
shrb
sub
and
in
mov
dec
push
sbb
nop
fldcw
loope
rorl
icebp
ljmp
lahf
out
sti
pop
outsl
push
push
dec
adc
push
and
aaa
iret
shll
dec
push
pop
outsl
inc
xchg
lock
jl
outsb
push
jbe
jle
cmpsb
push
std
cmp
outsl
ja
jo
jle
dec
test
jge
jne
scas
sub
xor
mov
sub
jbe
lea
inc
out
xchg
test
dec
in
shrl
daa
mov
add
dec
loopne
inc
add
lock
or
negl
ret
mov
mov
shrb
lret
ret
mov
shr
adc
pusha
test
shlb
xor
or
lods
call
pop
into
sbb
sub
xor
rcl
sbb
mov
dec
inc
pusha
sbb
sub
sub
cmp
dec
or
ror
or
add
push
add
outsl
xor
push
or
stos
add
jmp
mov
cmp
imul
mov
pusha
movsl
xchg
les
mov
or
cltd
scas
shll
cmpl
mov
cmp
adc
and
cmp
and
lock
pop
cmp
or
imul
jae
sbb
cli
mov
push
cmp
rol
lret
sub
mov
sti
mov
adc
jae
xor
shlb
and
cmp
mov
ret
call
test
or
and
arpl
cwtl
icebp
mov
mov
pusha
es
adc
mov
jbe
cld
jle
andl
or
stc
mov
pop
and
sub
adc
inc
addl
nop
pop
subl
nop
sub
xchg
test
lea
ds
mov
enter
push
cmp
cltd
pop
lea
test
xor
test
jmp
rcll
stos
rcrb
pop
cwtl
hlt
clc
and
xor
adc
cmp
jns
and
mov
mov
mov
adc
pop
rcrb
call
jmp
inc
or
addb
mov
push
xor
cs
lcall
sub
mov
push
movsb
add
add
push
cmc
fcomps
mov
or
jb
gs
jmp
fwait
shll
js
fwait
mov
pusha
push
dec
dec
call
std
pop
or
xor
pop
add
inc
call
and
push
xchg
pop
pop
pop
mov
cltd
fs
out
dec
adc
rclb
int3
call
inc
adc
jo
call
hlt
adc
shrb
fidivs
sub
push
ljmp
add
cmpb
mov
inc
cmp
gs
jl
sarl
cld
enter
or
jne
test
stc
dec
decb
outsb
or
cmp
dec
add
xlat
outsb
add
sub
fidivrl
movsl
adc
mov
mov
inc
cs
lock
je
cmp
stos
add
js
and
xchg
or
push
ss
popa
push
pop
jle
in
or
or
and
cld
add
test
sbb
sbb
or
jne
push
insl
push
mov
pusha
jl
ret
adc
popa
sbb
sub
cmpsb
jbe
mov
ds
and
ret
les
inc
lret
dec
aam
fcmovne
pop
cmp
rolb
mov
dec
clc
nop
shl
push
test
and
push
cmpsl
lea
int3
adc
ret
push
dec
shrb
ficompl
in
and
jae
lea
add
add
imul
dec
lock
daa
orl
or
dec
pop
cmp
pop
loope
sbb
xor
sti
mov
negl
jo,pn
xor
js
push
je
jg
subb
clc
push
sub
sti
add
push
fstps
stos
xor
push
xor
xchg
jno
pop
dec
hlt
jg
test
dec
in
push
push
pop
push
jmp
int
sarl
push
das
loope
xchg
cs
push
jae
lock
repz
lock
mov
adc
movb
xchg
shr
hlt
xor
dec
inc
ss
cmpl
push
jp
call
push
xchg
call
lret
sbb
fiadds
ret
or
push
push
fidivrs
or
fnstsw
sbb
or
inc
aas
add
fstl
push
addl
pop
mov
mov
lret
faddl
add
xor
rcrb
and
das
rorb
cltd
push
aas
js
add
sub
shll
xor
iret
shlb
les
adc
add
sub
add
das
loopne
aam
decb
mov
pushw
or
or
or
lock
push
add
xor
pop
jo
or
out
add
add
jo
sbb
dec
sbb
mov
jne
xor
push
orb
jmp
push
incb
push
negb
or
mov
xchg
cmc
cmpsl
loop
and
hlt
add
inc
sub
push
aaa
lret
xorb
mov
mov
jne
mov
or
adc
daa
es
js
sub
mov
movl
cld
sub
loope
js
enter
lods
push
mov
pop
idivb
push
stos
mov
mov
fildl
add
dec
inc
inc
or
add
add
adc
pop
insb
pushf
dec
out
mov
les
or
nop
subb
in
add
gs
dec
arpl
iret
aam
xor
pop
sbb
lock
aam
xor
dec
mov
push
out
xor
and
testl
mov
test
mov
adc
mov
and
inc
ja
sub
test
jb
mov
jae
add
pop
sub
pop
ret
mov
pop
dec
mov
push
pusha
push
sbb
leave
mov
orb
sub
inc
xchg
inc
jb
mov
mov
lea
daa
pop
pop
cltd
fs
mov
sbb
enter
push
popf
mov
add
rorb
pop
sbb
xor
test
imul
jb
mov
sbb
addr16
add
push
add
jnp
incb
xchg
frstor
and
fwait
dec
in
daa
jg
xor
xor
pop
inc
out
loope
mov
in
inc
stos
or
enter
mov
clc
xor
xor
mov
pop
adc
jnp
iret
mov
fisubl
cmp
inc
jl
jnp
fwait
scas
inc
xor
test
cwtl
adc
adc
mov
loope
int3
cmp
inc
pusha
loope
pop
fimuls
loop
sbb
sbb
ja
or
jb
or
push
addr16
fs
mov
or
leave
push
clc
stc
and
bound
push
scas
roll
xchg
mov
lea
and
cmp
aas
aas
in
imul
lock
lahf
xor
and
push
mov
js
cmp
mov
adc
aam
adc
push
sbb
mov
push
ja
outsl
add
out
and
cmp
pop
add
add
adc
jne
rolb
ret
xchg
pusha
inc
jns
pop
and
add
sti
sbb
pop
adc
sarl
push
jmp
or
popa
inc
lea
not
and
hlt
jge
inc
push
sbb
adc
cmp
jne
aad
pop
sbb
subl
int3
sbb
mov
add
ljmp
mov
cld
sti
std
iret
les
adc
jb
aas
ljmp
add
lods
jo
mov
out
fcmovnbe
push
xor
shl
lea
sbb
inc
pop
les
pop
mov
xchg
fs
and
ret
and
mov
and
fwait
xchg
sub
stos
inc
jns
dec
ja
fiadds
je
movl
test
jmp
xor
mov
or
jnp
mov
lock
mov
add
jb
pusha
lods
and
or
push
movzbl
mov
jo
or
and
outsb
adc
adc
pop
lea
mov
nop
or
adc
rcll
xchg
fldenv
aam
out
sbb
jb
sub
clc
or
pop
aaa
enter
add
jb
mov
pop
xchg
sub
add
ret
sub
call
push
xchg
or
rolb
push
or
out
jne
jecxz
adc
push
lock
mull
out
mov
add
jmp
push
pop
push
push
inc
cmp
mov
shr
rcr
or
mov
repz
dec
mov
xchg
xchg
test
push
cmp
ja
jb
cmp
or
xor
and
jle
rorl
or
fisubrl
lret
iret
inc
inc
pop
ljmp
xchg
mov
je
ret
xchg
lret
jp
aas
jbe
xchg
adc
imull
xor
inc
inc
sub
cmc
inc
in
cmp
testl
cwtl
jbe
outsl
daa
or
xchg
or
inc
inc
cmp
inc
pusha
cmpsl
bts
jb
mov
cmp
add
or
pusha
push
mov
test
inc
imul
add
and
and
pop
outsl
adc
xlat
mov
dec
popf
insl
cmp
mov
push
movsb
sbb
mov
sarb
and
xor
xor
test
or
xor
sbb
hlt
shlb
insl
and
in
cltd
add
loop
jmp
dec
and
in
pop
sbb
push
ret
mov
add
nop
in
and
add
or
sarl
mov
mov
fists
xor
aaa
push
pop
lret
xor
mov
mull
inc
adc
shl
pop
jne
lock
inc
cs
outsl
xor
jmp
dec
rcl
inc
cmp
mov
or
cld
shll
dec
xor
scas
and
insl
push
nop
push
fadds
inc
decb
dec
test
add
dec
and
fs
daa
or
mov
add
xchg
fistps
ds
xor
add
cmpl
inc
jbe
cmp
test
add
push
xchg
sahf
sub
or
pop
outsb
je
add
and
add
popf
pop
cs
testb
inc
lods
fsub
cmp
jo
jp
pop
xor
js
int3
rol
jp
cli
adc
sub
pushl
shlb
push
test
fwait
mov
or
mov
test
adcb
add
xor
addr16
or
dec
mov
mov
inc
push
mov
adc
sbb
testl
adc
movsl
inc
lret
and
pusha
loop
inc
arpl
cwtl
ret
repnz
in
inc
mov
sarb
pop
cmp
jo
cmpsb
pop
jmp
push
mov
sarb
ret
je
mov
loope
outsb
sub
sub
ret
jmp
push
mov
out
push
push
jmp
inc
orps
mov
jne
jecxz
mov
sti
mov
jmp
adc
outsl
push
cmpsl
repnz
adc
adc
or
imul
nop
mov
adc
shrb
mov
adc
lret
inc
add
gs
aam
mov
test
mov
fidivl
adc
push
mov
movb
sub
push
enter
inc
sar
lods
pop
imul
popf
xor
sub
sbb
pushl
jl
cmp
jg
inc
jmp
jo
ret
call
jne
imul
bound
dec
mov
bound
cmc
aas
sbb
sbb
sub
cmp
cwtl
in
or
add
lea
pusha
cmpl
or
lock
icebp
xor
icebp
xor
push
xchg
xchg
rcl
enter
filds
adc
shl
out
outsb
and
add
cmpsl
add
stos
iret
mov
es
jl
loopne
push
adc
mov
aam
adc
push
cmp
jge
mov
xor
xchg
sbb
xor
push
and
mov
cmpsb
cltd
inc
bound
es
jo
inc
outsb
scas
add
sub
push
mov
mov
sbb
mov
inc
jmp
mov
cli
and
push
rorl
shl
sbb
pushf
sbb
jnp
sbb
jns
mov
jl
pop
cmpsb
ljmp
daa
lock
mov
pop
push
cmpsb
xor
nop
sub
mov
loopne
cli
lea
ja
mov
sub
rcll
xor
les
orl
add
enter
fs
adc
stos
push
je
jge
fs
pop
add
mov
int3
orl
jnp
and
arpl
push
sbb
push
add
cmp
or
sub
in
mov
rclb
pop
aaa
or
movsl
stc
loopne
add
pop
inc
xor
mov
and
mov
xor
add
mov
push
push
fs
or
push
fld
mov
mov
cmp
sub
sbb
cmp
xor
cli
adc
lea
lea
mov
or
add
lahf
cld
and
mov
push
and
std
popa
sbb
jmp
popl
inc
adc
jne
cld
sahf
inc
add
mov
scas
xor
dec
xor
add
cmp
shrb
add
cmp
andb
inc
mov
in
out
and
pushl
add
jno
push
js,pn
sbb
dec
mov
fwait
call
stos
ljmp
push
inc
cmp
ds
sti
loope
xor
push
push
sub
push
orb
dec
push
out
insb
enter
xchg
inc
adc
insb
dec
pop
testl
pinsrw
jl
sbb
insb
popa
rorl
cmp
sub
add
add
push
jns
mov
cmp
and
pop
ror
mov
inc
sbb
lcall
mov
xor
pop
pop
push
or
aas
push
loop,pt
xchg
add
bound
pusha
jno
pop
ds
les
mov
xor
jb
call
and
cmp
jo
lahf
movsb
rcrb
loope
xor
pop
outsb
add
dec
mov
test
insb
je
sub
sub
in
push
pop
pusha
pusha
outsb
mov
js
clc
movd
push
push
mov
adc
pop
jg
lcall
sub
push
stos
jl
cwtl
sub
imul
adc
xor
sbb
pop
gs
adc
xor
arpl
cmp
pop
call
add
push
lods
rcll
clc
add
lea
adc
rol
xor
add
subb
mov
mov
adc
addb
xor
fisubrl
call
push
or
mov
mov
sbb
adc
mov
xor
push
mov
inc
jmp
sarb
jp
popf
pushl
leave
lret
push
sub
fmul
cmp
stos
jo
xor
fnstenv
add
sub
push
pusha
xor
movsl
pop
imul
mov
push
inc
push
push
adc
bound
fcomps
or
mov
and
and
lea
jmp
jl
push
lods
mov
cmp
pop
xor
xchg
cli
or
or
test
xor
inc
push
or
xchg
dec
test
xchg
lea
and
adc
and
add
es
add
push
cmp
movsb
test
leave
sub
adc
sub
or
das
jl
incb
push
mov
movsb
andl
jmp
xor
test
stos
popf
add
push
sub
xchg
mov
das
gs
lcall
sub
cmp
xor
jmp
xchg
mov
mov
or
cmp
xchg
xchg
cmpl
jae
out
or
add
fisttps
jmp
inc
sbb
or
adc
sbb
mov
sub
ret
or
mov
pop
jge
mov
mov
xchg
outsb
divl
nop
add
jne
out
dec
jae
and
sbb
ret
fldenv
fs
mov
jnp
dec
bound
pop
push
sub
movsl
mov
orl
mov
pop
pop
push
and
inc
ret
daa
pop
stc
sub
cmp
mov
or
sub
mov
lock
mov
popaw
loop
pusha
jge
nop
mov
add
mov
pop
sbb
add
testl
mov
jecxz
fldl
push
adcl
push
dec
dec
or
sub
cmp
inc
cmp
and
subb
dec
xor
cmpl
inc
xlat
add
jecxz
push
push
inc
jmp
cmpsb
lret
or
pop
xor
sub
into
dec
mov
hlt
loopne
sub
pushf
rol
xchg
push
fsubrs
cwtl
jge
dec
aam
jb
dec
adc
loop
out
sub
cmp
cmp
mov
and
loopne
jmp
pusha
lods
adc
jge
mov
sub
inc
xor
jne
rcll
dec
cmp
add
neg
call
add
ret
pop
mov
sbbl
roll
mov
jb
es
mov
fdivrs
lea
enter
cmpsb
mov
mov
dec
mov
or
xlat
std
aaa
hlt
jne
mov
roll
push
dec
arpl
in
dec
pop
add
adc
xlat
sar
xor
mov
push
or
stos
inc
ja
mov
or
mov
and
pop
inc
testl
out
jne
test
mov
ss
xor
dec
into
sbb
jne
inc
or
xchg
test
cmp
pushf
and
repz
push
test
adc
nop
rol
jb
cwtl
xchg
test
fistl
lret
ret
fcoms
inc
add
sub
fsubl
or
adc
jle
add
sub
das
sbb
jb
jl
imul
out
add
js
subl
and
inc
xchg
pushf
add
cmp
sbb
sti
jg
add
clc
nop
add
aaa
mov
xor
loop
sub
mov
shll
shr
mov
add
or
shr
sbb
push
aas
or
push
mov
pop
mov
dec
sub
xchg
cmpb
inc
mov
mov
xchg
add
into
negb
aaa
or
jl
fcom
insl
fadd
loopne
rcll
mov
out
out
or
mov
sahf
dec
mov
jne
mov
mov
mov
aam
sub
push
movsl
data16
dec
cmp
jo
push
insb
fisubrl
lock
rcr
js
xchg
xchg
fiaddl
mov
pushf
add
ljmp
in
aad
or
or
fisubrl
sbb
inc
mov
and
mov
or
lds
and
push
push
jmp
xchg
or
daa
mov
inc
hlt
test
or
dec
into
jmp
jecxz
and
lods
or
int
pusha
cmp
jae
jno
les
and
push
inc
sbb
cmpsl
mov
xorb
lret
js
test
test
push
sahf
sarb
add
jo
cltd
lds
imul
jo
mov
or
call
xchg
lods
nop
adc
xchg
add
repz
inc
repz
ficoms
iret
out
sahf
inc
mov
aam
sub
cmp
mov
mov
jno
push
push
ds
push
mov
or
xorb
das
in
adc
sbb
mov
jecxz
subb
add
dec
pusha
xchg
addr16
int3
sbb
adc
data16
jo
daa
pop
cmp
mov
push
inc
int
inc
or
or
aaa
cmp
xor
hlt
ret
cmp
in
sub
sub
shll
popa
iret
jne
dec
sub
xchg
inc
inc
mov
in
or
jb
rorl
dec
in
pop
bound
ret
add
shl
adc
ret
mov
push
shlb
ret
sti
mov
imulb
es
jecxz
mov
mov
pusha
xchg
in
or
shll
add
add
jbe
mov
idivl
xchg
sarl
mov
jecxz
clc
xchg
xor
mov
xor
ret
loope
mov
cmp
test
orb
xor
jne
sbb
xlat
jmp
sar
push
or
ja
add
cmp
push
adc
xor
inc
jmp
cmpsb
mov
sbb
mov
jb
adc
push
dec
sub
push
popa
mov
sbb
pop
sbb
mov
push
out
shlb
loope
mov
leave
in
enter
cmovl
push
sbb
sbb
and
in
enter
repnz
sbb
push
xchg
loopne
jmp
dec
xor
test
in
fldcw
pop
push
pop
cld
add
loopne
cmovbe
sbb
or
cli
cmp
mov
pop
jmp
dec
sbb
push
lea
jmp
xchg
iret
add
leave
sar
mov
xor
or
testb
rorb
and
adc
aaa
mov
jp
sbb
adc
mov
xchg
push
lret
pop
iret
jp
push
sbb
cltd
lods
adc
pop
ret
and
sbb
push
call
pop
dec
mov
inc
pushl
jns
cmpsl
mov
pusha
cmp
or
ja
inc
cmp
mull
sahf
and
les
sub
xchg
sbb
mov
inc
mov
dec
mov
add
mov
mov
mov
mov
add
in
lcall
push
xor
push
hlt
mov
andl
clc
inc
or
rcrl
or
pop
aas
fimull
sbb
out
lret
add
mov
enter
sub
mov
sub
or
popa
xchg
and
mov
movb
jmp
jo
xchg
mov
popa
shll
hlt
jo
add
enter
lods
jnp
sub
jecxz
jnp
pusha
push
xorl
stos
push
xchg
lea
je
add
loopne
test
push
cmpb
cmp
inc
and
aam
incl
scas
or
add
test
push
or
add
jo
mov
push
cmp
dec
fmuls
or
test
dec
jecxz
scas
sbb
add
mul
pop
imul
add
daa
inc
outsb
dec
pusha
adc
clc
pop
dec
iret
test
push
pop
or
push
pop
add
mov
add
icebp
mov
orl
shr
xor
mov
sbb
fimuls
cmp
dec
xor
push
add
mov
out
mov
test
shlb
xlat
lock
dec
xor
jae
mov
cmp
mov
shll
movb
mov
xor
aad
addl
xchg
push
mov
sub
lea
dec
add
mov
xchg
cmp
ret
sub
or
pop
sub
insb
pushl
movsb
pusha
add
dec
dec
xor
shlb
shll
in
pop
jns
lahf
or
add
jg
sbb
mov
add
loopne
pushw
sub
gs
test
sub
and
nop
push
mov
imul
popa
add
daa
xor
movsl
jne
jb
or
adc
xchg
inc
cmp
jmp
adc
shlb
cmp
test
rclb
mov
or
push
and
or
push
xchg
dec
pop
call
add
push
fimuls
push
mov
fisttpl
xor
aaa
mov
add
jmp
inc
xchg
loope
dec
mov
pop
mov
adc
in
dec
outsl
sbb
ja
outsb
push
jae
adc
push
ja
add
addr16
sub
lcall
push
mov
negb
add
mulb
mov
add
js
xor
dec
push
cmp
lret
and
popf
cmp
or
jmp
dec
sub
jns
repnz
test
sub
push
adc
test
icebp
out
mov
xchg
and
xchg
push
ss
sbb
jmp
sbb
xor
and
ss
adc
add
adc
push
inc
and
adc
mov
xchg
add
outsl
enter
push
push
daa
pop
mov
insb
daa
jae
mov
inc
idivb
xchg
movsb
das
ljmp
adc
ret
mov
and
cmp
adc
jns
add
addb
hlt
loop
add
pop
rorb
pop
xor
enter
dec
das
and
lea
cmp
testb
mov
rorl
ret
jmp
test
push
jecxz
std
das
mov
enter
jl
jmp
addl
js
mov
shr
or
scas
popa
add
xchg
loopne
and
or
mov
or
xchg
push
ljmp
jb
vpmadcsswd
ret
dec
fwait
and
andb
test
add
adc
pop
adc
push
and
push
push
cwtl
andb
cmp
icebp
push
push
xor
cmp
dec
adc
dec
out
inc
add
inc
jmp
xor
test
popa
jge
mov
cltd
push
add
add
xor
ret
stos
adc
movsb
push
pop
pop
pop
icebp
fisttps
les
cmp
and
pop
add
jmp
or
sub
mov
push
or
add
sub
push
bound
add
push
jg
and
mov
movsb
pop
pop
shll
cld
loope
mov
cmc
les
xchg
fisttpll
cmp
or
mov
jl
sbb
andl
ss
out
and
loopne
mov
sbb
jo
mov
cmpl
fwait
and
or
mov
js
fcoml
cwtl
dec
xor
push
jne
push
aas
out
out
mov
xor
pop
fs
add
mov
or
pusha
inc
mov
jmp
mov
push
mov
xor
jle
xlat
subb
std
aam
pop
push
mov
mov
or
push
push
jnp
jne
add
or
pop
push
pcmpeqw
fidivl
push
inc
imul
mov
jmp
repz
pop
mov
sbb
mov
lea
ficoms
add
pop
add
call
xor
lcall
push
sub
test
int3
push
cmp
icebp
imul
add
mov
jb
imul
dec
or
lret
std
or
cmp
pushl
dec
sar
aad
jo
pop
pop
imul
or
stos
xor
pop
pop
and
not
clc
into
or
jne
jge
push
andl
push
mov
cmc
sarl
pop
mov
cmp
jne
sub
mov
xchg
pop
jmp
nop
std
sbb
outsb
call
dec
je
scas
je
push
jae
mov
push
push
test
jl
or
and
pop
mov
jge
add
sbb
pop
and
icebp
and
push
and
adc
test
dec
pusha
imul
pusha
jne,pn
sbb
out
mov
mov
fmull
jbe
std
adc
add
or
test
fsubr
fstpl
push
icebp
cmc
fwait
clc
cs
pop
add
sbb
jne
int3
loopne
scas
and
aaa
add
or
insl
cwtl
ss
adc
xorl
fadd
push
popa
inc
outsl
sub
xchg
sarl
cmp
rorl
fadd
cmpl
les
inc
pusha
adc
mov
add
leave
test
leave
push
jno
pop
mov
sbb
mov
dec
mov
jb
ljmp
pop
or
sub
mov
int3
add
cltd
mov
out
and
xchg
test
or
clc
pop
loope
and
xor
jbe
xor
jg
cmc
in
sbb
sbb
daa
push
xor
add
sbb
or
inc
and
outsl
adc
out
popf
out
lods
add
out
es
sub
nop
addl
aad
jmp
jmp
push
ret
inc
jl
push
test
mov
push
nop
dec
iret
ret
jne
or
iret
mov
rolb
or
cli
mov
xor
and
xchg
push
fstl
xchg
cwtl
adc
or
mov
daa
pushf
mov
jge
ret
mov
jne
or
rcll
push
sub
sbb
jp
mov
ds
imulb
mov
fsubrs
and
mov
cmp
or
mov
sti
adc
mov
ja
cwtl
cmpsl
insl
inc
sub
adc
idivl
push
mov
cmp
add
iret
fnsave
add
mov
sub
lcall
hlt
stos
out
shll
add
fisttpl
add
pop
call
add
add
mov
jne
cmp
mov
add
inc
cs
cmp
adc
jge
dec
aas
jg
cmp
mov
lock
outsl
sbb
imul
and
aad
cmpsl
cmp
push
in
mov
and
lahf
pop
sbb
les
int3
push
xor
jne
and
stc
pop
adc
mov
int3
rclb
iret
pushf
pushf
pushf
mov
or
adc
mov
sbb
jb
jb
sub
xor
jo
jb
cmp
jbe
sbb
inc
inc
cmovs
in
in
push
push
pop
cmp
cmp
push
insb
jo
js
or
cmp
leave
and
mov
test
xor
xor
pushf
mov
jns
mov
xchg
enter
xchg
dec
sarb
cltd
fs
in
cltd
fs
call
fs
dec
hlt
clc
cld
cmp
and
add
add
add
or
adc
sbb
xchg
dec
es
and
sub
es
xor
dec
cmpsb
pusha
xchg
cmp
gs
xchg
dec
cmp
push
dec
xor
and
pop
pusha
adc
test
dec
add
popl
pop
add
test
mov
mov
aas
add
mov
and
bound
xchg
pop
fiaddl
push
xchg
or
adc
xchg
jl
nop
adc
xchg
lret
and
pushf
in
leave
in
mov
jb
cmp
and
inc
jb
in
les
dec
jg
add
int3
dec
enter
add
adc
pop
notb
mov
sub
loope
enter
ljmp
leave
movsb
icebp
or
or
test
push
mov
cmp
xor
add
cmpsl
cmp
pop
push
or
cld
or
pop
and
pop
add
or
pop
rorb
push
fiadds
add
test
and
xor
rorb
add
or
or
out
adc
addr16
dec
not
xor
loope
xor
and
cmp
enter
add
jmp
add
and
subl
repnz
in
test
adc
push
adc
adc
jo
fcmovbe
adc
sbb
loop
mulb
shll
inc
dec
pop
xchg
or
or
sub
and
mov
aad
clc
outsl
or
leave
add
sbb
fucomp
lret
jmp
inc
and
mov
and
out
ja
aaa
jecxz
sbb
add
or
xor
inc
ret
popa
adc
and
mov
and
jge
aaa
jge
je
sti
sub
ljmp
aas
inc
cli
sti
out
pusha
mov
pusha
loope
pop
sub
xor
dec
sub
inc
jecxz
pop
fnstsw
mov
fnstsw
pusha
pusha
fldl
cmp
insl
es
pop
dec
push
mov
inc
testb
leave
add
push
adc
lret
sub
add
add
out
out
test
loopne
sub
ret
mov
push
mov
dec
jne
orl
inc
jmp
push
and
movsl
cmp
ret
dec
sbb
and
xorb
divb
sbb
mov
les
sub
and
or
in
fisttps
inc
push
fstps
jmp
fisttpll
pop
xchg
adc
jp
lods
fndisi(8087
inc
add
adc
jbe
ds
or
pop
sub
jmp
push
xchg
dec
push
jnp
push
xor
pop
and
test
js
adc
or
push
inc
inc
xchg
push
aaa
loope
jle
sbb
out
cmp
push
iret
xor
xchg
nop
lock
aaa
mulb
pop
dec
jmp
sub
sub
sbbl
mov
lret
or
jmp
fldcw
sarb
imul
bound
mov
enter
xor
mov
dec
pop
and
jno
push
and
test
mov
cli
cli
adc
push
adc
fucomp
sub
add
jmp
scas
in
and
in
inc
movsl
andb
shll
bnd
sbb
repnz
mov
test
jle
ret
cli
shrl
push
pop
orl
scas
dec
stos
nop
loopne
or
push
push
pop
jmp
pop
mov
pusha
ret
push
icebp
inc
roll
adc
mov
inc
outsb
mov
cwtl
ja
xor
jle
push
xor
sub
add
jns
mov
out
or
cmpsb
lret
js
bound
pop
xchg
or
repnz
test
add
push
pushf
mov
and
enter
outsl
loop
jne
ret
clc
cmp
xchg
mov
je
rcrb
add
sbbl
call
cld
sbb
add
sbb
and
adcb
pop
cwtl
ret
aaa
leave
addr16
pop
inc
arpl
mov
pop
pop
fcomp
add
jmp
jno
and
inc
and
xchg
add
popa
orb
or
fisttpll
stc
and
or
sbb
mov
or
mov
pop
loope
dec
pop
sub
in
push
mov
adc
dec
add
loope
cwtl
push
pushl
mov
lea
or
add
mov
jbe
push
das
adc
or
inc
cltd
jns
test
mov
adc
add
mov
pusha
ficoms
adc
aaa
jl
push
jnp
loopne
mov
pop
jbe
data16
je
fwait
xor
mov
xor
xchg
lret
into
sbb
push
loope
cs
mov
shr
sub
sub
xor
xor
mov
shufps
movsl
mov
shll
cmp
jle
lock
or
sbb
mov
and
ljmp
decb
mov
dec
data16
into
pop
add
add
in
or
arpl
sbb
test
xor
or
enter
sti
adc
cmc
fld
fucomp
pop
add
mov
leave
test
xchg
orl
xchg
lret
mov
or
sbb
or
insl
shl
or
push
or
and
xor
push
out
mov
push
flds
bound
or
push
and
sar
push
or
scas
sbb
sub
push
push
push
mov
push
pop
dec
ljmp
adc
fnstsw
or
xor
sbb
loop
arpl
insl
inc
sbb
not
dec
xor
fmull
in
popf
dec
testl
mov
loop
leave
dec
cwtl
or
sub
rorl
aam
test
fsubs
ja
out
and
sbb
adc
adc
lock
fdivp
jle
ret
xchg
pop
test
rol
cmp
aad
std
cmc
sub
inc
je
sbb
mov
ss
xchg
pop
mov
pushf
mov
mov
sub
popf
mov
andl
fmull
mov
and
jno
iret
test
inc
mov
adc
or
mov
or
xor
mov
jnp
jo
push
icebp
adc
jg
fisttpl
js
inc
lods
clc
cmp
subl
mov
cmpsb
es
mov
xor
imul
adc
mov
and
add
test
cld
sub
jne
push
pushf
xlat
int3
pop
inc
add
add
test
adc
es
add
jo
jmp
lods
xchg
push
nop
lret
je
or
push
popa
ds
push
dec
push
jge
sti
xchg
out
xchg
rcr
ret
push
and
mov
ljmp
mov
enter
jle
or
or
add
loope
push
or
or
int
add
or
jge
add
pop
std
cmp
cmp
jmp
or
inc
cltd
mov
push
test
push
or
xchg
jle
pop
outsb
add
aas
cld
mov
xor
sti
add
icebp
inc
push
and
daa
mul
pop
test
pusha
adc
jbe
jl
insl
jecxz
jp
pmulhuw
lock
stos
cmp
hlt
jbe
stos
pop
pop
jb
push
inc
push
pop
js
in
nop
jle
inc
cmp
mov
or
mov
add
sub
sti
aas
es
ret
dec
or
inc
lea
icebp
xchg
inc
push
pop
sub
inc
shrl
mov
xorb
push
fisttps
jnp
pop
jo
call
loop
rolb
cmpl
add
outsb
out
xchg
pop
pop
and
mov
out
mov
inc
fistl
adc
iret
jbe,pt
dec
imul
mov
add
lods
or
or
and
clc
sbb
mov
cmp
inc
add
bound
pop
mov
dec
addb
repnz
sahf
jns
or
adc
lock
mov
mov
sqrtps
out
mov
sub
data16
fildl
inc
in
xchg
xor
rcl
mov
pop
or
cmpb
push
xchg
cmp
jbe
or
movsl
cmp
mov
rolb
rcrl
iret
fmul
shl
sub
jecxz
and
push
fdiv
lea
sub
or
mov
and
push
ds
ret
cmp
scas
and
aam
out
inc
rorl
mov
ret
in
aaa
leave
push
shrb
pop
sub
mov
sbb
mov
inc
ret
or
leave
pop
push
pop
dec
lea
mov
movsb
bound
faddl
jge
or
sbb
test
push
lods
sub
push
aas
xor
out
or
inc
shl
inc
pusha
lcall
cmp
xchg
add
aaa
push
cli
sbb
jno
mov
lods
fsubr
pop
pop
push
push
jb
mov
repnz
incb
mov
xor
cmp
and
jo
jo
cmc
hlt
push
arpl
sub
cmp
inc
mov
cmp
fstpl
movsb
jcxz
mov
adc
mov
arpl
ss
shll
stos
rolb
sbb
pop
xchg
add
je
mov
gs
into
pop
add
imul
lea
out
and
inc
mov
jge
mov
mov
adc
xchg
shl
xor
pop
add
pop
jle
or
fildl
pop
lock
mov
cwtl
cmp
push
and
xor
lret
clc
pop
push
lock
and
adc
mov
adc
cmpsb
mov
adc
push
add
and
inc
sub
dec
add
in
pop
dec
je
or
or
inc
pop
adc
hlt
stos
imul
add
mov
prefetch
or
pop
jne
cmp
les
xchg
jb
adc
mov
mov
test
adc
or
repz
inc
rclb
adc
push
mov
shlb
mov
xchg
xchg
adc
inc
mov
cs
or
ss
cmp
je
or
dec
loope
xor
mov
dec
adc
mov
add
sbb
sbb
add
or
mov
lods
inc
lock
movsb
int
call
pushf
lret
in
add
aaa
sub
adc
dec
pop
xor
and
sub
jmp
xor
rorl
adc
and
cwtl
cmp
push
xchg
icebp
outsl
negl
add
adc
mov
jbe
jno
adc
add
xor
xchg
sbb
or
insb
mov
sbbl
inc
xlat
push
push
mov
jbe
and
or
add
adc
fistps
add
cmp
push
pop
sbb
inc
mov
xchg
rorb
jg
in
adc
sub
mov
popf
test
mov
and
mov
pop
mov
sub
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
add
cli
jmp
sub
add
pop
inc
lret
ljmp
push
adc
inc
loop
lea
mov
mov
fadd
inc
add
clc
int
loop
jl
cltd
push
xor
add
enter
or
xor
test
aaa
add
lahf
push
enter
into
fimull
add
push
andl
push
stc
daa
mov
pop
jo
adc
push
push
and
add
xor
pop
and
mov
pusha
sub
cmc
daa
sbb
iret
ret
jmp
or
jmp
adcl
jge
xchg
sub
adc
mov
xchg
mov
mov
movsb
push
push
adc
shlb
repnz
lea
imul
push
or
push
arpl
push
jmp
mov
sbb
cmovp
add
xor
jg
and
push
fadd
xor
daa
sbb
add
sub
arpl
into
jge
adc
je
movsb
inc
and
in
xchg
sbb
mov
cld
adc
je
cli
mov
enter
sub
xchg
sahf
mov
adc
cld
push
and
xchg
or
jne
lret
push
imul
add
jl
push
push
fcompl
pop
ret
mov
enter
mov
out
adc
add
sub
jmp
inc
xor
add
mov
add
sub
push
js
jmp
loope
sub
leave
and
add
insb
movb
ror
push
xchg
fbld
mov
addb
and
jge
fistpl
fstpt
mov
lock
ret
adc
mov
jne
bound
xor
xor
ljmp
inc
xor
pop
and
pop
neg
arpl
jmp
inc
xor
mov
sub
nop
jb
add
shll
mov
fisubs
mov
jge
sbb
pop
push
hlt
cmpsb
lret
nop
or
adc
je
orl
sub
inc
mov
bound
cs
inc
xor
ss
lds
jbe
loop
cmc
movsl
fs
cld
add
hlt
shrd
dec
data16
xchg
add
imull
sbb
clc
push
jb
pop
cwtl
xor
cmc
insl
jl
data16
inc
and
xor
out
push
cld
sub
mov
cmc
loopne
sar
mov
adc
xor
cmpsl
rcr
xor
lock
je
xchg
adcl
and
sub
pop
sbb
js
jg
js
xchg
fdivl
xor
xor
adc
jl
neg
mov
cmp
sarl
mov
mov
push
shll
adc
insb
add
mov
push
lock
jmp
stos
lcall
push
jg
mov
push
xor
inc
dec
inc
repnz
mov
or
xchg
clc
sbb
push
adc
test
in
or
ja
orl
es
xor
pop
addb
or
sbb
mov
jle
data16
and
fcmovu
add
imul
je
xlat
rcrl
mov
jmp
lock
inc
sahf
nop
popa
xor
fwait
adc
cmpl
xchg
loopne
js
inc
or
or
ret
jo
sub
push
lods
lds
mov
mov
push
mov
push
add
out
rcl
cs
das
push
repnz
je
jo
loopne
aad
flds
or
adc
cmpsl
jl
into
add
sub
lds
fisttps
stos
cmp
adc
shr
andl
sbbb
enter
jne
push
cmp
nop
movsl
roll
xchg
inc
out
sub
dec
sub
mov
fcom
cmp
leave
xor
enter
mov
push
inc
scas
push
out
dec
aaa
fisttpll
out
mov
adc
sub
and
inc
mov
mov
adc
rolb
add
popf
jmp
xor
rolb
testb
sahf
clc
gs
or
pop
add
and
cmpsl
imul
sbb
push
inc
je
mov
insb
sbb
push
mov
xor
sbb
ret
xchg
pop
pop
add
mov
mov
mov
aaa
inc
or
push
jo
mov
popa
imul
add
mov
loope
and
mov
unpcklps
ret
arpl
cmp
mov
adc
aaa
lock
test
and
imul
inc
add
fldenv
push
adc
inc
data16
jne
adc
jnp
cmpl
paddsb
pop
cld
push
xchg
sarl
push
mov
or
mov
or
lock
lcall
inc
fnsave
loopne
cmp
mull
cmp
je
mov
hlt
ja
cmp
sub
mov
mov
sub
loopne
test
int
sub
mov
cmp
and
adc
ret
test
dec
push
pop
push
inc
adc
mov
sbb
movsb
insl
mov
sub
and
addb
adc
sub
inc
jmp
les
push
leave
jle
xchg
or
and
movsb
xchg
sub
fidivrs
push
or
test
out
cmp
mov
push
push
sub
mov
nop
jp
mov
inc
mov
adc
dec
sbb
jmp
insl
fwait
cmpl
mov
cmpl
or
sbb
or
push
sbb
push
or
mov
add
xor
dec
loopne
out
imul
pop
lret
or
push
rorb
dec
imul
pop
mov
scas
and
icebp
je
in
jb
pop
stos
andl
adc
or
mov
lret
je
dec
je
dec
push
push
jmp
or
jmp
xorb
add
or
lcall
ss
dec
push
xchg
out
repz
pop
ret
enter
rcl
js
adc
bts
test
int
or
add
inc
lcall
cmp
inc
push
es
cmp
iret
xor
sbb
sbb
jne
adc
aas
and
cmp
je
mov
mov
and
cmp
add
and
jbe
mov
xor
jnp
movsb
dec
mov
cmp
fiaddl
into
sub
push
repz
add
push
add
loope
add
mov
sbb
mov
adc
push
cmp
js
cbtw
or
imul
out
dec
add
mov
jae
inc
add
call
add
or
or
or
les
movsl
push
test
cli
jge
shr
add
adc
pop
jae
scas
test
out
pop
or
mov
push
push
adc
inc
mov
lret
add
fldenv
mov
lock
repnz
or
sbb
jp
pop
mov
xchg
sarb
leave
inc
jbe
add
inc
loopne
jbe
dec
in
sbb
cmp
or
push
pop
mov
jg
cmp
mov
mov
and
cmp
es
push
out
bound
xor
mov
mov
or
xorb
inc
inc
shll
cli
mov
hlt
adc
fimull
lock
notb
push
or
adc
pusha
cmpsb
andb
and
xchg
or
add
inc
addl
sbb
jo
adc
fists
pusha
loop
stos
imul
add
cli
jne
into
mov
mov
push
addb
test
add
push
or
pop
inc
mov
shll
adc
or
divb
mov
je
sub
fidivrl
lret
xorb
dec
sbb
je
repnz
jmp
xchg
nop
sub
fwait
push
test
out
loope
icebp
cmpsb
mov
pop
dec
pusha
je
mov
cmp
sub
add
subl
test
nop
addl
lret
pop
lret
xchg
lods
testb
adc
push
dec
xchg
xor
stc
sub
or
push
inc
adc
dec
sbb
cmp
stos
or
sbb
or
ret
nop
jge
mov
sbb
stos
and
or
sbb
inc
imul
popa
pop
cli
add
add
loope
sahf
and
shlb
adc
cs
sbb
fmul
leave
lahf
outsl
xor
inc
add
sub
std
inc
inc
push
inc
xor
xchg
imul
and
clc
push
push
test
sbb
ret
aas
sti
and
scas
cmp
andb
std
mov
adc
sbb
add
pop
je
add
push
xchg
sbb
sub
shlb
lret
xor
pop
rolb
cs
dec
and
mov
push
popa
rolb
loope
shrb
xchg
jno
loopne
sub
push
add
adc
fldl
and
sub
ds
push
sbb
movsb
pop
mov
pusha
push
ljmp
push
xor
push
enter
adc
or
push
je
leave
cmp
push
sbb
sub
pop
sbb
in
int
add
mov
cmp
jle
inc
and
je
dec
mov
je
jp
int3
push
test
test
mov
and
outsl
mov
fcoml
mov
jl
xor
fidivl
push
incl
adc
or
sbb
push
cmovg
dec
jns
cmp
jp
push
add
mov
imul
cs
orb
and
mov
cld
cmpsb
jo
jp
add
cmp
sub
push
fcomps
or
sbb
jne
cmp
jne
lret
cmp
mov
dec
add
lahf
or
loopne
or
or
add
mov
ljmp
out
roll
leave
add
or
je
mov
iret
sbb
cltd
push
adc
cmc
inc
iret
es
sbb
cli
insb
sub
sbb
pop
bound
fs
sahf
jne
test
test
fmull
pushf
ret
mov
lret
das
or
dec
and
inc
das
inc
inc
adc
add
pop
outsl
sub
or
add
push
out
in
xor
adc
fdiv
fiaddl
or
sbb
inc
sbb
add
and
sbb
sbb
inc
push
sbb
fcoms
adc
and
inc
and
fnstenv
movsl
icebp
sbb
adc
push
in
adc
sbb
mov
adc
or
mov
dec
jne
pop
pop
pop
aam
inc
fldt
inc
jae
or
jae
lods
sbb
shr
sbb
dec
and
shr
sub
push
jl
cmpsl
jg
idiv
and
maskmovq
cld
lock
je
bound
push
cmp
mov
ficomps
sbb
dec
or
push
jmp
add
adc
adc
mov
inc
enter
jmp
and
pop
add
je
push
jmp
xchg
cmp
jbe
aas
rorb
push
xor
dec
test
in
or
sbb
daa
push
adc
ret
inc
mov
outsb
inc
xor
pop
cmpl
or
mov
adc
pop
pop
popf
mov
aaa
mov
inc
inc
lds
cmp
cmp
loopne
xchg
fidivl
jo
cs
ljmp
cld
inc
ss
inc
mov
sub
add
shlb
sti
inc
jns
cmp
ret
into
and
leave
jne
pop
inc
cmp
jmp
jo
subb
add
clc
or
or
pop
out
mov
xor
cmp
test
ret
orb
or
pop
mov
clc
or
adc
es
mov
je
mov
and
jb
cmp
dec
cli
out
ja
add
cmp
adc
cmp
jne
adc
shll
leave
adc
mov
hlt
jb
idivl
pop
je
push
dec
or
adc
push
inc
mov
adc
mov
inc
call
rcrb
adc
pushf
movl
aas
dec
push
pop
push
movb
jmp
or
imul
sti
add
aaa
mov
ret
test
mov
or
and
movl
add
inc
aas
or
cmp
push
pop
mov
into
testb
pop
xchg
subl
aaa
add
sti
test
push
insl
loope
mov
or
fstpl
js
push
andb
dec
bound
sbb
jnp
je
add
sbb
daa
jo
movsb
push
mov
aas
test
test
adc
shr
shr
ljmp
fadds
rorb
or
lcall
movswl
cltd
lods
ja
xchg
fildl
cmpsl
aad
mov
push
ljmp
cwtl
sbb
mov
mov
mov
inc
orl
push
adc
jmp
mov
addr16
xor
and
mov
push
loope
stos
or
jb
jl
pop
mov
decl
jle
repnz
mov
adc
adc
mov
mov
mov
and
adc
lea
inc
xor
out
andl
mov
mov
cmp
arpl
mov
and
cmpsl
mov
inc
call
fcompl
ljmp
or
cmp
loopne,pn
mov
and
lea
rolb
lods
xor
inc
mov
push
lea
pop
test
dec
push
sbb
dec
or
push
nop
inc
push
lcall
ret
xchg
cmpsl
lods
shll
ret
insl
pusha
data16
xchg
and
mov
jl
fnsave
and
rorb
imul
shll
add
bound
in
or
mov
add
shr
or
and
frstor
lock
sbb
push
lret
out
imul
or
mov
xor
test
inc
mov
std
mov
shrl
loope
shr
or
mov
push
testb
dec
mov
jp
out
inc
jp
jnp
lock
dec
subl
jnp
repnz
mov
add
nop
xchg
out
cli
div
mov
push
mov
cmp
test
and
xor
and
mov
sahf
test
sbb
adc
and
push
jnp
pop
fisubrl
xchg
xchg
in
cli
fidivl
fldenv
enter
jg
or
lret
enter
xchg
dec
rolb
lock
mov
dec
cmp
aaa
fiadds
or
test
push
sbb
loop
out
xchg
pop
cmp
mov
ds
ret
inc
fmul
and
aam
daa
sbb
fdivs
cli
or
aaa
loope
shlb
fdivrs
pop
xchg
add
jbe
sbb
dec
sub
sbb
fstpt
push
mov
add
int
push
adc
add
or
fmull
or
cmpsl
add
mov
sbb
pusha
mov
fnstcw
dec
add
pop
popa
cmp
mov
sbb
add
pusha
inc
je
jge
inc
xchg
adc
jg
or
orl
mov
in
sub
or
jge
add
mov
and
movsb
loopne
cld
icebp
jmp
add
jne
pop
push
jns
fnsetpm(287
loopne
orb
pushf
pusha
mov
ljmp
xor
xchg
insb
sbb
psubq
shl
inc
add
inc
mov
insl
push
aad
xor
add
pop
outsb
call
add
add
inc
sbb
rcrb
jb
cli
pop
inc
sarl
fsubrl
fdivs
mov
and
imul
mov
imul
cs
dec
loopnew
fadds
outsb
pusha
lea
push
and
mov
push
in
out
add
xchg
fisubs
les
add
lock
sar
sub
ja
into
inc
les
enter
xor
jb
cmp
mov
sbb
ss
or
sti
je
clc
rolb
lods
add
pop
push
outsl
dec
enter
sahf
mov
add
cmpsl
outsb
and
dec
int3
sub
test
cli
pop
add
sbb
testb
sbb
or
mov
inc
ljmp
jmp
add
cwtl
dec
inc
pop
cmc
cmpsl
mov
cmp
jge
sub
cmpb
or
add
dec
ja
fiaddl
aam
inc
dec
add
add
fadds
add
adc
rorl
mov
lock
jmp
add
or
or
push
adc
test
jbe
subb
and
add
push
add
inc
mov
mov
or
or
dec
push
imul
ret
lcall
add
push
mov
mull
or
push
push
mov
test
or
adc
or
repz
add
pop
jne
xchg
rcl
or
push
pop
scas
in
inc
xor
je,pt
push
ret
sbb
adc
mov
je
mov
rcrb
xchg
adc
and
jae
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
pusha
or
fs
and
sub
and
pop
pop
mov
testb
or
prefetchwt1
mov
inc
ret
or
adc
push
loopne
add
mov
rolb
cmp
or
or
adc
and
pop
jo
fsubl
fisubl
test
mov
je
aaa
jecxz
or
pop
or
inc
call
insl
add
mov
adc
jne
and
and
jl
add
test
pop
loop
jge
out
and
push
dec
std
add
or
ret
and
and
cmp
adc
or
loop
clc
mov
adc
xchg
test
sbb
sbb
or
push
scas
inc
jo
push
orl
mov
shll
xchg
add
sub
daa
mov
loopne
mov
rorb
cld
lock
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
adc
lret
or
xor
sarb
push
pop
loopne
ficoms
mov
sub
aam
clc
insb
test
or
sbb
stos
sbb
or
cmp
mov
or
add
leave
out
jecxz
push
cltd
adc
lock
and
xchg
fwait
stos
mov
sbb
pop
test
mov
and
cmp
mov
popf
ret
cwtl
cmp
inc
sub
jmp
mov
mov
pushf
jb
xchg
lret
ljmp
mov
out
dec
jo
ljmp
mov
adc
fnstenv
scas
add
xchg
add
add
clc
xchg
add
mov
into
lret
dec
gs
mov
scas
push
or
inc
xchg
in
hlt
inc
push
fcom
add
adc
jns
je
adc
cmp
jo,pn
cmpsl
or
pop
repz
sbb
ficompl
insb
lahf
or
or
sbb
lock
adc
je
dec
sub
icebp
call
cmp
je
mov
scas
push
sub
shl
mov
cmp
pop
adc
mov
lret
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
cmc
fisttpll
or
inc
leave
mov
cmpsb
push
or
hlt
cmc
aam
sbb
or
lret
jle
mov
add
and
sbbl
push
dec
adc
ret
js
in
cmp
adc
adc
inc
sub
cmp
or
fidivrl
xor
mov
ljmp
jns
adcb
loope
xchg
rcrb
fmul
sub
mov
pop
adc
mov
xchg
out
xor
xchg
dec
push
addl
cwtl
dec
outsl
adc
push
jnp
lods
mov
sub
out
push
ja
sub
add
pop
sbb
ret
ret
push
xlat
or
ret
cmp
add
sub
mov
in
stos
gs
mov
cmp
xchg
pop
jmp
ljmp
xchg
add
or
sub
rcrl
inc
lret
dec
loopne
push
scas
movsb
adc
sbb
and
outsl
jo
sub
lahf
inc
ret
mov
loope
aaa
jne
adc
jne
adc
dec
sub
mov
add
mov
shlb
sbb
push
ret
loop
mov
pop
cmp
xor
inc
mov
cmp
mov
cmpl
lea
mov
jo
pusha
gs
sbb
mov
je
in
cmp
xor
xchg
std
mulb
test
sbb
repz
jp
mov
xchg
push
lock
mov
or
push
sub
stos
iret
pop
out
mov
and
push
lods
dec
lea
mov
or
enter
addps
js
popf
cmp
inc
pop
add
sbbl
ja
push
test
xor
mov
dec
loopne
jmp
dec
mov
inc
add
in
adc
mov
sub
js
or
out
sbb
test
mov
sub
inc
insl
push
test
pushf
iret
shll
pop
pushf
xor
sub
jg
push
mov
sub
add
leave
fadds
add
shlb
sbb
hlt
decl
or
je
jg
loopne
inc
adc
inc
pop
stos
les
jnp
pop
push
clc
mov
xorl
sub
and
push
push
shll
pop
xor
pop
rorb
mov
sub
and
inc
pop
push
sbb
pop
and
xor
repnz
and
adc
call
inc
jbe
test
js
xlat
add
add
push
sahf
sti
push
fcomps
sbb
push
push
push
and
xchg
loope
les
jge
pop
cmp
or
iret
les
pop
xor
pusha
sub
loope
sub
addr16
or
pop
dec
sbb
push
push
push
das
dec
sub
cmp
jmp
cmp
xor
clc
sub
ret
xor
sub
enter
sub
dec
in
mov
push
add
and
pop
adc
sub
js
ret
add
call
ret
or
jnp
mov
clc
xor
sbb
dec
pop
push
pop
xor
jns
mov
cwtl
pop
outsb
je
and
push
ret
pop
sarl
imul
adc
jbe
daa
adc
rorb
pop
or
loopne
flds
out
xor
cmp
lods
add
les
mov
roll
cltd
sub
push
inc
loope
stc
fs
cmp
dec
sbb
pushf
ret
dec
lods
inc
dec
icebp
test
int
add
rolb
pop
int
jmp
add
imul
and
sbb
xor
add
mov
sbb
arpl
cmpsl
test
pop
pop
xchg
loopne
add
sbb
and
in
daa
outsb
adc
clc
pop
mov
add
inc
add
push
rcl
idivb
lea
jge
xor
imul
mov
cltd
addl
call
inc
inc
imul
outsl
daa
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
jb
cmp
mov
dec
add
add
mov
sub
fwait
mov
repnz
add
xor
push
and
dec
sub
inc
fisubrl
clc
pop
fs
mov
test
aas
test
addb
dec
push
popa
ficompl
mov
pop
pop
pushf
enter
int
sub
mov
mov
dec
imul
dec
or
mov
sbb
std
data16
xor
inc
and
mov
insb
jmp
push
movsl
sbb
lret
mov
or
cmp
inc
push
pop
mov
sub
sub
adc
dec
push
jo
push
jo
lods
arpl
imul
fidivrl
dec
inc
les
mov
cld
mov
jb
in
fisubrs
imul
add
pop
in
cs
jge
cmp
pop
call
rcrb
pop
movsl
jge
adc
mov
sbb
sbb
pop
or
xorb
mov
test
movsb
outsb
mov
cwtl
cmp
mov
mov
xchg
push
inc
or
rcl
mov
push
repnz
mov
dec
test
jg
adc
sbb
sub
lcall
stos
add
sti
icebp
cmp
push
pop
push
mov
scas
shlb
lahf
sub
int3
into
fwait
mov
fadds
in
dec
and
cmp
jecxz
gs
push
push
fadds
pusha
cmp
fists
add
movsl
pop
and
cmc
add
dec
jb
rcll
sahf
orb
inc
clc
adc
push
push
aam
test
sub
push
lods
or
in
add
pop
repnz
add
or
test
or
xlat
xchg
rcrl
aaa
sub
jl
inc
inc
loopne
pop
cmp
cmp
pop
jns
mov
lret
int3
sub
mov
mov
inc
ret
adc
adc
cmpl
mov
add
cmp
lret
cmp
imul
cmp
bound
mov
mov
jp
adc
cmp
add
addb
sarl
mov
hlt
jge
in
sbb
and
add
cltd
adc
loop
rcrl
or
mov
cmpsb
inc
cmp
lods
xor
adc
and
and
inc
sbb
sub
test
xor
jl
lea
xlat
and
sub
and
stos
cltd
aam
test
out
sbb
jae
ret
pusha
inc
push
xchg
hlt
pusha
loope
push
or
add
scas
jl
nop
in
sub
test
push
add
add
inc
push
or
ja
mov
jg
jp
cmp
jle
push
ror
push
pusha
mov
sbb
mov
mov
or
add
push
push
aas
icebp
pop
je
add
push
add
dec
dec
mov
mov
push
xchg
add
inc
hlt
addl
stos
cli
adc
pop
jl
in
mov
sub
cmp
pop
mov
call
adc
add
mov
xor
loope
sub
mov
sarb
fxch
leave
push
adc
repnz
test
adc
mov
push
inc
mov
dec
cmp
lret
insl
cltd
add
fstp
scas
shr
aaa
loope
fdivs
shll
jmp
adc
das
dec
or
lods
cmp
sbbb
outsl
sub
adc
adc
popa
aam
cmpl
dec
pushf
pop
adc
scas
mov
or
sbb
mov
lret
cmp
lock
dec
sbb
jg
dec
dec
rclb
test
mov
out
das
sbb
and
movsb
sbb
jmp
and
inc
outsb
fcomps
cmpl
stc
push
mov
ds
cmpl
ror
sbb
in
pop
cmp
loope
in
lcall
sbb
lods
rcrl
mov
inc
xor
xlat
sarb
inc
mov
sbb
dec
or
test
sbb
mov
stos
sub
mov
and
and
xchg
pop
jb
xor
push
out
repnz
loope
rclb
add
test
or
dec
xchg
adc
pop
outsb
push
jns
dec
cmpsb
into
nop
pop
jnp
pop
je
sub
or
jg
xor
dec
jne
fwait
jl
jmp
mov
push
sbb
ja
popa
xchg
je
cs
xchg
sbb
jmp
or
mov
outsl
sub
mov
testb
cmp
inc
dec
dec
jo
push
mull
imul
sub
repnz
xor
adc
outsl
loope
xchg
adc
xor
leave
push
sbb
pop
dec
jne
push
pop
mov
fcoms
adc
jmp
xor
or
mov
call
adcl
jmp
jne
push
sub
mov
aaa
mov
cmp
shlb
add
cli
inc
cs
arpl
mov
loop,pn
jle
mov
pushf
call
lea
stos
add
in
loope
inc
sbb
dec
xor
jecxz
jmp
jmp
pop
xchg
inc
mov
xchg
lods
rolb
popa
xchg
testl
add
push
mov
add
sbb
clc
push
lea
aaa
jl
mov
insb
xor
mov
lock
or
push
cmpb
sub
add
and
add
xchg
pop
mov
mov
clc
hlt
popf
jbe
mov
les
sub
xor
mov
js
cmpsb
or
sbb
push
adc
jl
enter
or
mov
stos
xlat
add
mov
sbb
xor
scas
xchg
enter
rcll
dec
adc
sbb
adc
shll
adc
sahf
jecxz
add
sbb
add
stc
dec
mov
sbb
and
pop
add
fisttpl
or
push
seto
orl
pop
mov
ret
mov
pushf
pop
out
jle
ja
cld
icebp
xchg
dec
add
xor
test
or
jne
nop
or
cmpsl
scas
push
inc
je
pop
dec
push
and
jp
dec
pop
cmp
cld
or
loop
mov
jne
jg
xor
push
movsl
add
loopne
cmp
fmul
inc
adc
cmpsl
outsl
loopne
xchg
jmp
lock
in
xorl
lock
or
imul
inc
sar
scas
jle
out
daa
mov
js
lea
fcoms
push
add
faddl
insl
mov
dec
jg
adc
orl
jg
jmp
adc
add
sub
mov
and
jo
xchg
andb
adc
cmp
add
sahf
jb
ss
jb
or
cmpsl
push
ret
jnp
inc
and
aaa
xchg
call
jg
sbb
icebp
pop
jne
jae
sub
mov
jb
adc
jns
inc
inc
pusha
jmp
jbe
pop
or
data16
call
mov
push
add
es
lret
push
mov
sti
test
insb
and
and
push
lods
sbb
movsb
das
insb
jns
inc
jo
pusha
mov
mov
adc
xlat
je
cmp
adc
shrl
jecxz
mov
testb
xchg
mov
add
cmp
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
aam
push
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
shll
pop
das
aaa
out
pop
shlb
push
mov
fisubrl
lds
push
pop
xor
and
push
test
shr
aam
pop
mov
pop
es
jmp
scas
add
lock
adc
dec
pop
pop
sbb
pusha
aas
and
lods
sub
push
incb
xchg
push
push
stos
ret
sbb
inc
adcb
in
fnsave
adc
test
sbb
dec
mov
sbb
sub
nop
inc
pop
jg
add
add
jo
xor
nop
inc
lcall
xchg
in
add
and
mov
cmc
ficompl
subps
int
out
sub
cmp
push
mov
push
fstl
xchg
jne
test
sub
mov
or
mov
add
test
adc
xchg
sbb
fistps
fbstp
and
fld
flds
fbstp
fildll
xchg
fwait
ds
fsubrp
xchg
fstps
icebp
arpl
pop
pop
xchg
rolb
fildl
cpuid
or
sub
cmpsl
nop
inc
data16
fcomp
js
jo
punpckldq
ret
fstps
lods
pusha
push
and
pop
mov
dec
inc
gs
sub
mov
mov
mov
sbb
pop
test
or
xchg
or
dec
in
push
mov
adc
mov
jmp
shlb
pop
or
mov
nop
sbbb
inc
sbb
fwait
or
dec
inc
ret
push
fnstcw
inc
add
nop
mov
shlb
insb
sti
clc
dec
mov
mov
test
cmp
add
mov
pusha
dec
mov
fimull
mov
lock
les
jne
dec
fidivl
shlb
mov
pop
cmp
inc
movsb
fsubrs
xchg
mov
int3
pop
cld
mov
push
and
fcmovu
sbb
gs
add
sahf
jae
ret
dec
bound
inc
mov
xchg
mov
movsl
imul
sub
movsl
arpl
and
rcrl
shll
rolb
loopne
sti
lds
popf
add
inc
pop
fadd
out
xchg
fdiv
dec
in
punpcklwd
fnstsw
fstl
mov
push
sbb
add
inc
pop
in
dec
cmp
addr16
movsl
mov
ss
fiadds
lock
push
mov
push
insb
mov
ficomps
mov
adc
sub
in
inc
in
ss
mov
inc
adc
orb
in
rcll
popa
mov
add
adc
pop
fbld
popa
inc
enter
mov
cmp
pop
push
out
pop
and
mov
add
jecxz
fbstp
movsb
arpl
or
push
mov
dec
rorl
cmp
push
adc
xchg
push
xchg
mov
mov
xlat
cmpsb
xchg
push
and
fsubr
pop
push
jb
es
loope
xor
sub
les
jb
aam
mov
pusha
aam
mov
test
sbb
lods
sbb
and
in
cmpsb
lahf
cmp
outsl
adc
jno
dec
es
adc
es
fs
jo
adc
fs
js
add
mov
fsubr
and
cltd
sbb
mov
lea
jecxz
add
fbld
adc
cmpl
and
pop
mov
daa
and
in
sti
gs
in
mov
mov
js
rcr
lock
or
shr
xchg
enter
or
sub
mov
mov
jno
ret
mov
push
icebp
sbb
sub
and
insb
adc
shl
fwait
adc
xchg
iret
es
js
lods
add
out
cmp
out
push
xchg
cmp
jb
leave
in
xchg
or
lock
in
push
in
outsl
add
in
add
ss
iret
or
insb
cwtl
lods
adc
add
enter
adc
or
cmp
leave
or
or
dec
in
sub
xor
sti
adc
push
popf
lock
mov
lds
xchg
or
popf
enter
cmp
adc
in
push
sbb
loopne
popf
out
and
es
mov
dec
fisubrl
fsubs
loopne
and
xor
imul
jnp
negl
pop
insl
and
mov
or
fdivs
push
lock
aam
aad
insb
add
shlb
imul
xor
adc
inc
out
in
pop
and
mov
and
jae
pop
nop
pop
mov
jmp
add
in
add
xorb
pushf
jne
mov
stc
jmp
es
jno
call
out
add
andb
in
or
aad
mov
aaa
and
test
lahf
in
mov
cmp
clc
add
add
xchg
jbe
sbb
in
sub
push
adc
jl
lahf
xor
lds
gs
lea
repz
jmp
dec
and
aaa
adc
mov
adc
es
mov
dec
dec
dec
fs
subps
enter
sbb
in
shrb
mov
imul
cmc
or
ret
add
cmp
fwait
addr16
sub
fistps
xor
jmp
xor
in
push
xor
pop
push
aas
inc
mov
add
mov
std
add
mov
mov
int3
mov
pop
xchg
ret
cmp
lahf
addr16
fsubs
xchg
pop
push
pop
out
adc
or
adc
adc
inc
mov
scas
inc
insb
aad
fwait
or
popf
or
or
and
sub
sbb
lock
xor
fldcw
outsl
jo
outsl
je
adc
jno
lock
cmp
inc
sub
pop
in
in
leave
mov
jns
call
and
loopne
faddl
out
jp
pop
lock
inc
xlat
icebp
sbb
es
push
mov
enter
sbb
xor
and
clc
cmpl
nop
repnz
ds
mov
push
jmp
ss
insl
add
cmc
leave
adc
repnz
mov
inc
mov
xchg
mov
loopne
fdivrl
test
test
xchg
jl
add
leave
or
movsb
sti
repnz
aam
xchg
mov
rorb
aaa
subl
and
mov
mov
adc
sbb
mov
loope
xchg
fistps
xchg
nop
xchg
in
cmp
sub
bswap
sbbb
sub
movsl
jmp
jo
add
cmp
aam
or
or
or
dec
push
cmp
or
or
cmp
xchg
or
or
pushf
stos
lock
cmc
adc
xor
xor
cmc
cmp
or
and
or
push
rclb
cmp
mov
cmc
lods
pop
add
nop
xchg
or
or
add
xchg
or
and
cmpsb
fsubs
pop
mov
negb
and
adc
push
negb
testb
iret
popa
scas
and
popf
daa
or
adc
insb
rcll
push
add
aaa
adc
xchg
xchg
mov
testl
pop
ret
push
sbb
xlat
mov
roll
mov
fs
jo
add
mov
inc
loopne
ret
imul
mov
add
xchg
test
mov
imul
clc
je
jno
rclb
mov
imul
lods
fs
xor
fadds
add
stc
sbb
xor
dec
insb
pop
mov
sysexit
pop
aad
stos
mov
insl
aam
fs
rolb
dec
enter
add
ret
adc
or
pop
dec
push
stc
int3
ret
fmuls
scas
popa
insl
fsubrs
rcrb
add
cli
and
mov
adc
cs
cli
jl
shlb
stc
fs
adc
ret
imul
lds
sub
nop
or
mov
sti
sbb
pop
fbld
sti
adc
call
jmp
mov
mov
shll
in
shl
mov
rorl
loopne
cld
push
xchg
inc
jl
bound
mov
push
mov
cmp
outsb
cmp
mov
test
push
push
pop
std
adc
js
cmp
enter
test
loop
inc
std
dec
sbb
pop
arpl
pop
ret
push
cmp
dec
add
and
imul
fdivs
mov
add
jge
inc
jmp
mov
call
add
jp
in
mov
int3
addb
mov
frstor
mov
ds
add
pop
push
inc
icebp
xor
js
or
jne
cwtl
xor
addr16
sbbl
stc
push
add
sbb
div
loopne
inc
sbb
inc
push
add
call
f2xm1
jno
mov
mov
test
outsb
in
iret
or
and
sbb
flds
adc
jo
mov
mov
lea
sbb
and
pop
push
add
sbb
jne
mov
and
adc
stos
xlat
nop
push
lret
inc
and
pop
btr
je
outsl
dec
add
dec
jno
adc
cmp
dec
pop
fwait
inc
ss
add
call
pop
cmp
or
es
pop
xor
subb
lahf
hlt
mov
pinsrw
in
imul
movsl
dec
pop
push
or
pop
fisubrl
jno
aam
enter
or
mov
enter
push
add
mov
mov
pop
int3
pop
rorl
adc
test
pop
lcall
xchg
push
sub
mov
les
mov
sbb
lods
dec
push
sub
xlat
mov
outsb
popf
add
in
pop
mov
xchg
sbbl
fdivrs
loopne
sbb
sub
psubsw
lock
stos
add
mov
mov
inc
adc
xchg
and
inc
pop
es
dec
rorl
pushf
pcmpgtb
int3
das
cpuid
in
dec
adc
aam
fcoms
xchg
adc
aas
stos
dec
sbb
std
pop
shld
add
jp
imulb
in
sub
xor
in
cmp
mov
and
pushf
or
in
mov
out
iret
inc
adc
sarb
pop
ds
sub
cmpb
or
dec
outsb
arpl
sbb
mov
pop
inc
mov
aaa
inc
imul
and
mov
dec
pop
push
ja
fldt
out
dec
inc
and
movsb
fdivr
push
stos
push
sbb
int
adc
or
mov
rorb
out
insl
inc
and
in
push
xchg
mov
enter
adc
dec
mov
push
cmp
mov
ret
xchg
nop
aaa
mov
adc
xchg
pop
in
inc
lea
or
sbb
jne
pop
nop/reserved
fs
inc
xchg
xchg
shlb
fcmove
or
mov
adc
or
or
jno
xlat
fs
lods
mov
or
aas
or
cmp
dec
sbb
push
adc
ret
cmp
add
mov
jmp
mov
cmp
mov
inc
orl
lock
inc
dec
fisubl
cmp
notb
daa
nop
testb
sub
pop
hlt
mov
das
adc
cmp
ficoml
fs
test
cmp
dec
add
aam
jmp
inc
loop
sbb
imul
or
in
mov
jno
dec
jno
mov
mov
jne
or
iret
and
cmp
scas
xorb
mov
mov
push
in
and
adc
pop
pushfw
xor
inc
dec
rorb
sbb
and
fisttps
orl
sti
or
aad
xchg
pop
shll
lock
dec
and
cmp
fsts
add
sub
leave
xor
aad
ds
xor
add
repz
cwtl
jg
pop
enter
call
and
in
add
fldcw
add
adc
adc
mov
nop
inc
jl
sub
inc
and
insb
test
outsl
jne
test
xor
pminub
mov
int3
inc
mov
add
mov
imulb
gs
fldt
js
xorl
sbb
sub
in
mov
adc
adc
das
dec
xorl
jmp
adc
jmp
fldl
push
xlat
jge
in
ss
fsub
adc
add
nop
cwtl
xor
pop
icebp
jno
lods
shlb
aad
lods
test
ficoml
rclb
lods
mov
pop
int3
gs
push
in
not
adc
fisttps
xor
outsl
ret
cltd
addr16
cmp
aam
dec
lcall
jb
imul
inc
enter
data16
or
adc
les
mov
cmpsl
loopne
sbb
dec
call
and
insl
adc
pop
movb
andl
lock
push
push
mov
xchg
mov
push
sbb
mov
pop
jbe
int3
mov
push
adc
ret
scas
push
sbb
push
shll
lret
leave
mov
or
mov
inc
leave
lock
movups
fnstenv
test
je
push
dec
test
push
fwait
sub
pop
aas
inc
mov
cmpb
mov
pop
nop
in
ds
jo
or
xor
sub
inc
pusha
mov
insb
jmp
add
jno
adc
xor
add
xor
sbb
insl
pop
push
or
fs
or
fsubrl
add
das
mov
and
lods
lods
test
inc
stos
lock
clc
sbb
jle
inc
in
sub
ret
sub
adc
sbbl
sarl
and
in
test
popf
and
mov
stos
pushf
mov
mov
fidivl
ja
mov
imul
inc
xchg
lock
repnz
pusha
jmp
dec
mov
mov
sbb
addr16
pop
fcoms
call
inc
and
add
mov
xor
xchg
pop
push
insb
dec
lcall
es
out
inc
inc
addb
mov
push
out
xchg
sbb
jl
mov
movsb
and
mov
mov
nop
adc
bound
push
popa
and
and
and
out
imul
jo
mov
leave
mov
pcmpgtw
push
cmp
sbb
or
stc
or
adc
pop
mov
jmp
sbb
jb
dec
mov
jno
dec
pop
test
jb
and
push
and
mov
nop
stc
dec
or
mov
mov
or
test
pop
push
xor
and
inc
pop
shr
aas
dec
jb
sbb
loopne
rcr
xchg
int3
notl
mov
and
xchg
mov
fadd
adc
pushf
les
and
jbe
mov
jbe
sbb
orb
sub
cwtl
shlb
mov
aad
and
sbb
adc
dec
movl
sub
xchg
in
stos
push
add
sbb
lods
lds
mov
popa
cmp
sbb
push
sbb
sbb
cwtl
sbb
shll
clc
xor
fisubl
cwtl
rcrb
pop
sbb
es
jp
testl
lea
cmp
std
movsl
sti
lea
adc
fs
push
js
mov
sbbl
pusha
adc
xor
and
dec
xor
cmp
sbb
dec
xor
and
cmp
shll
sub
xor
jne
pop
cmpsl
fdivr
dec
cmp
daa
ja
inc
and
xor
ljmp
push
sub
test
push
pop
jmp
push
inc
enter
pop
add
hlt
sbb
mov
lea
sub
cmp
iret
dec
and
sub
fs
in
sub
mov
adc
or
aad
sub
xor
cmpsl
jbe
add
or
movsl
repnz
jne
xor
insl
lds
movsb
push
sbb
adc
fcomp
cmp
test
pop
leave
test
or
xchg
test
test
test
sub
test
inc
ret
adc
rolb
imulb
ret
sbb
xchg
andb
pop
push
fs
cmp
out
in
add
mov
in
enter
xor
das
inc
cmp
cmpb
enter
int3
rcl
addr16
adc
aam
xor
sub
xorl
sub
adc
pop
pop
adc
nop
xor
pop
enter
sub
lcall
push
bound
lcall
xchg
xor
xor
inc
mov
xor
int
sbb
in
pop
lds
cltd
mov
je
mov
mov
mov
or
lods
je
cmp
push
sub
inc
int
xchg
pop
add
and
imul
arpl
xor
and
adc
dec
mov
xor
mov
xchg
adc
cwtl
lea
push
mov
mov
push
adc
inc
pop
jo
subl
xchg
xchg
mov
xor
xchg
inc
retw
mov
bound
sbb
sub
xor
jmp
mov
fiaddl
or
sbb
test
xor
std
aam
add
test
sarl
mov
xchg
fdivl
loopne
in
popf
jb
adc
cwtl
mov
fisubl
jbe
dec
rcl
or
xor
scas
or
gs
daa
in
xor
push
add
fcoms
jb
pop
dec
sub
enter
push
adc
mov
nop
loope
test
mov
sbb
push
insl
in
push
xchg
leave
ret
int3
addr16
push
xchg
cmp
data16
xor
cmpsl
hlt
adc
sbb
dec
cmpsb
fsts
xchg
push
ss
or
pop
pop
daa
xchg
pop
add
fiaddl
or
xor
add
orl
inc
cmpsb
push
es
arpl
int3
sbb
in
and
orb
dec
stos
shrb
inc
lods
test
icebp
inc
and
mov
and
fstpt
jg
lahf
ret
dec
cmp
call
cmp
sbb
or
sbb
out
xchg
jae
pop
push
or
adc
push
aam
add
cmp
das
pop
aam
add
aam
loopne
addr16
fcmovu
out
filds
aam
dec
xor
dec
mov
pop
sbb
add
push
add
test
pop
xor
lret
cmp
cmp
cs
mov
push
or
inc
test
or
sarl
cmp
jns
mov
dec
jb
cs
dec
and
push
pop
adc
sub
rol
inc
ficoml
and
inc
lea
test
loopne
es
jae
mov
lcall
or
jo
mov
inc
mov
sbb
mov
jo
mov
add
in
inc
mov
shlb
lods
test
movsb
sub
sbb
test
lods
mov
and
pop
cmp
mov
enter
cmp
mov
bound
jb
nop
add
leave
int
adc
es
mov
or
mov
adc
ds
and
sub
push
das
in
add
pop
lret
inc
mov
push
shll
pop
jmp
aad
cmp
aam
out
push
jae
aam
sbb
sbb
and
mov
and
or
add
mov
sub
or
adc
sub
inc
push
popa
pop
push
inc
lret
orl
push
nop
mov
rcrl
enter
nop
sub
dec
pop
lods
aam
mov
es
ret
mov
movsl
mov
iret
xlat
cwtl
mov
and
adc
cmp
mov
test
movsb
sbb
orb
jmp
sbb
mov
mov
adc
dec
inc
rolb
pop
and
mov
add
xor
or
loope
in
cmp
leave
imul
in
mov
lods
loopne
jmp
sbb
sub
pop
aam
clc
addl
movsb
pop
cmp
inc
xor
pop
fisubl
cmp
cmp
dec
adc
imul
fs
and
push
pusha
mull
or
push
dec
jb
movsb
cmpsl
or
adc
aad
jmp
xchg
and
inc
fisubrl
and
and
enter
xchg
pop
scas
sub
push
sub
jbe
lods
sub
inc
and
add
mov
ss
xchg
and
inc
mov
push
stc
push
rolb
dec
sbb
in
or
outsl
pop
fwait
or
fsubrs
and
or
inc
adc
mov
mov
stc
les
or
rclb
sbb
lock
mov
fs
cwtl
pop
mov
dec
adc
fnsave
mov
mov
lods
sbb
push
ss
sbb
xor
or
orb
mov
es
jbe
adc
and
rclb
fmul
les
mov
stc
les
or
mov
enter
test
add
and
fs
imul
ja
and
rolb
aas
xchg
xor
aas
mov
orb
inc
mov
scas
sub
dec
mov
or
pop
mov
ja
jle
fwait
sbb
stos
sub
and
movsb
pop
inc
imul
xor
push
add
push
loopne
inc
sahf
mov
adcb
arpl
repz
sub
jno
adc
mov
insb
mov
shrb
sbb
and
pushf
mov
nop
fcoms
pop
xchg
ds
push
add
pop
push
xchg
adc
and
stos
push
mov
std
jo
jnp
sub
xor
mov
je
jo
rorl
cmp
aam
repnz
dec
test
inc
xchg
mov
call
mov
in
or
or
dec
mov
adc
fisubrl
push
and
adc
insl
hlt
cltd
inc
mov
add
mov
jg
insl
xchg
sti
leave
leave
add
xor
jbe
dec
xor
sbb
sub
adcb
les
sbb
push
clc
mov
lea
pushf
in
cld
icebp
sar
or
mov
push
clc
icebp
ret
cmp
test
mov
sbb
jno
mov
in
inc
adc
outsb
push
or
inc
xchg
arpl
sbb
xchg
adc
and
and
adc
add
mov
rcl
das
scas
ret
xchg
dec
push
hlt
inc
adc
mov
sub
jg
cmp
mov
mov
push
push
mov
sub
in
aas
out
sub
jmp
mov
sarl
call
inc
sub
pop
sahf
and
mov
lea
test
cmpsl
adc
test
jecxz
mov
lcall
inc
cmp
inc
pop
or
mov
adc
sbbl
lods
inc
sub
jno
pop
sbb
popa
xchg
push
pop
inc
andb
fsubrs
test
add
test
pop
jecxz
fimull
push
sub
adc
notl
pushf
inc
sub
shlb
adc
pop
inc
jns
add
add
add
or
adc
add
lods
negl
test
into
dec
movsl
cmp
bound
inc
cmp
adc
push
test
adc
test
push
sbb
scas
insl
xor
cltd
adc
or
pushf
sub
or
dec
and
cmp
and
mov
xor
cltd
fistpl
push
mov
sub
cmp
repnz
nop
mov
xor
mov
add
sub
aas
ret
in
sbb
xorl
cmp
pop
cmp
arpl
lods
lods
push
jecxz
stc
sub
xchg
xchg
and
and
add
call
inc
mov
popf
fnstsw
mov
mov
sbb
imul
movsl
ja
inc
adc
jg
mov
rcll
rclb
scas
and
scas
test
and
xchg
cltd
cwtl
and
xor
lods
cmp
inc
gs
je
xchg
fsts
cmp
or
cs
imul
add
and
cmp
or
sbb
add
xor
push
roll
pusha
cmp
leave
and
jo
xchg
movl
pop
lcall
shlb
subb
arpl
pop
popf
inc
xchg
mov
jo
movb
xchg
movsb
in
xor
jo
jl
fdivr
mov
sbb
inc
int
mov
movsl
test
xchg
dec
push
and
sbb
shrl
jno
xchg
sbb
mov
dec
jno
mov
mov
add
lds
nop
inc
test
mov
insl
ret
inc
mov
sbb
pop
or
dec
test
pusha
stos
mov
test
stos
dec
push
lds
xchg
imul
lods
cltd
fs
imul
icebp
movsb
mov
xchg
push
push
jge
adc
pushf
nop
test
decl
in
cwtl
test
pop
sub
sub
pop
les
pop
jno
add
inc
ret
pop
push
or
or
pop
inc
sbb
frstor
jge
fbstp
inc
fmul
rcrb
dec
out
inc
add
jb
mull
xor
push
dec
cmp
scas
shll
and
inc
in
lret
in
insl
cwtl
rcrb
dec
call
dec
push
fildl
mov
cmp
adc
fildl
mov
lahf
insl
or
mov
mov
mov
xchg
xchg
out
jae
sub
xor
es
xchg
es
add
pusha
sub
xor
in
xchg
sub
fcomp
shrb
push
pop
inc
call
popf
leave
mov
nop
xor
sub
sahf
icebp
pop
adc
inc
lret
cmc
add
add
fcomp
and
xor
aam
push
or
adc
mov
jnp
shlb
mov
add
jnp
jnp
sbbb
pop
push
or
or
jb
push
pop
es
or
mov
pop
in
daa
pop
aaa
mov
and
push
xchg
mov
add
addl
lods
pop
jns
dec
repz
mov
add
repz
out
fadds
out
cmp
push
adc
sub
xchg
iret
repz
mov
insb
mov
push
xchg
out
mov
dec
push
loop
insb
ret
add
jl
decl
jmp
mov
and
push
rolb
clc
jnp
mov
decl
xor
adc
mov
rcll
xchg
adc
or
cmp
sti
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
out
cmp
and
or
mov
fs
jb
add
jbe
push
faddl
add
and
aas
mov
sbb
add
pop
sub
mov
cmp
push
mov
and
popa
insb
insb
outsl
arpl
imul
jg
adc
sub
popa
arpl
jne
jb
outsb
je
add
das
add
or
insl
adc
mov
push
rolb
jb
js
je
jb
gs
add
or
add
cwtl
add
add
fisttpll
push
and
je
imul
jl
ja
dec
push
add
add
add
xor
mov
or
clc
es
add
push
sbb
out
dec
add
aas
push
add
in
mov
and
push
loopne
mov
push
je
and
jae
sbb
imull
dec
fisttpl
fs
cmpsw
out
mov
push
or
iret
inc
mov
and
lret
into
xorl
popa
ja
aas
imul
outsl
cs
imull
or
mov
gs
cmpsl
insl
out
bound
and
outsl
jmp
dec
ja
aaa
jo
mov
jnp
orl
insl
sub
push
imul
jo
ja
cmp
pop
ja
out
jne
inc
push
data16
add
sub
xchg
ds
jp
sub
add
push
pop
insb
lcall
xchg
in
cmp
push
cmpl
or
daa
dec
jbe
fisubs
inc
inc
fbstp
outsb
bound
loope
aaa
adc
sbb
jo
sub
outsl
lds
mov
xor
insl
mov
xchg
fistpll
filds
push
das
jb
jecxz
gs
fidivrl
xor
mov
xor
cmp
pusha
daa
outsl
subl
cmp
clc
aam
or
outsl
xchg
lahf
pop
pop
push
jno
jg
dec
enter
iret
fbstp
or
push
dec
fbstp
rcll
xchg
mov
xchg
xorl
jae
mov
inc
pop
jbe
xor
mov
bnd
das
popa
vpand
sbb
push
adc
cmp
insb
push
cmc
aam
jo
lahf
outsl
aas
pop
mov
pop
or
arpl
sbb
in
mov
xlat
add
leave
rorl
mov
stos
fs
imul
xor
pop
rcl
orb
fbld
movd
xor
subl
pushf
mov
pop
xchg
pop
cmp
stos
pop
cmpsb
mov
lret
je
scas
cmp
lock
inc
popa
mov
mov
subb
pop
pop
jecxz
or
sbb
push
push
sub
sub
ret
shlb
dec
addr16
pop
add
out
js
sbb
repnz
or
enter
sub
xchg
and
in
enter
sub
in
cmp
in
mov
clc
sbb
sbb
push
ljmp
jb
enter
fdivrs
jns
jp
pop
ret
cld
push
jl
cmp
pop
pusha
dec
aaa
add
shrb
sub
inc
mov
sub
push
push
mov
repz
fcmovne
or
xlat
sbb
mov
xchg
gs
xchg
ja
ds
cwtl
xchg
pop
mov
shll
cmpsl
jnp
jno
push
fwait
cmp
jo
mov
add
sbb
and
jns
add
aad
frstpm(287
das
das
and
test
jbe
sti
ret
dec
inc
and
push
jbe
push
decb
jmp
ljmp
idivl
mov
ret
xlat
aas
dec
inc
xor
daa
mov
jne
ds
daa
outsl
mov
pusha
insl
dec
and
insb
rorl
das
pop
pop
imull
mov
out
iret
jns
out
add
and
arpl
pop
sahf
scas
jne
jp
jae
push
and
sub
pop
dec
insl
in
cmpsb
pop
fbld
ds
negl
fcmovnb
mov
iret
mov
jle
imul
insl
insl
cmp
cld
mov
sub
fs
dec
and
fisubrl
pop
jns
add
das
das
jns
push
dec
push
inc
std
loop
inc
arpl
bound
dec
outsl
jbe
dec
arpl
add
je
adc
jo
sub
addr16
mov
jne
xchg
outsb
xchg
inc
jo
imul
jb
jg
bound
pushf
jae
into
inc
popa
outsb
adc
jae
cmp
xchg
popl
ja
ja
pushf
addr16
popa
je
jb
xor
mov
push
push
gs
sbb
mov
sahf
adc
outsb
and
jbe
out
pop
dec
inc
aas
add
pop
icebp
lcall
mov
ja
fildll
push
push
call
push
popa
insb
jne
inc
inc
arpl
aas
lds
or
and
ljmp
sub
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
push
imul
dec
dec
les
and
pop
or
pop
pop
pop
pop
pop
mov
ret
jmp
bound
gs
imul
jo
add
mov
ja
jns
jnp
jge
jg
adc
lcall
inc
cmp
add
mov
cmp
push
sar
lret
jno
icebp
idiv
cld
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
or
std
cwtl
hlt
iret
mov
add
jo
xor
popa
js
addl
popa
aad
dec
pop
sbb
out
jo
dec
mov
ret
sub
mov
int3
adc
mov
mov
add
push
add
add
add
scas
adcb
cmp
push
add
xor
flds
mov
hlt
and
add
pusha
push
in
adc
js
or
cmp
add
in
out
xor
sbb
addb
add
mov
addb
add
orb
daa
push
cmpb
push
and
lods
fnstcw
mov
xor
int3
push
jo
lods
adc
xchg
and
adc
push
push
outsb
imul
clc
movsl
push
push
or
sbb
add
fldcw
pop
and
mov
add
lea
mov
nop
mov
xchg
xchg
ja
and
mov
mov
sahf
jmp
and
mov
sarl
pop
jge
add
lods
mov
enter
add
cmc
jp
push
sbb
cmp
mov
sbb
push
push
inc
sub
cmpsl
mov
pop
dec
dec
inc
dec
inc
adc
xor
notl
fs
add
mov
push
jae
dec
ja
rcr
bound
je
outsb
data16
push
jbe
push
add
mov
inc
xor
push
xchg
xchg
outsl
jne
daa
pop
lea
mov
sti
addr16
outsl
js
push
inc
cs
push
fstpt
and
insl
jo
jo
and
and
sti
ficoml
jae
dec
imul
or
inc
mov
ds
cmp
dec
inc
jb
jns
daa
fcomps
movsb
stos
ss
jns
mov
je
and
arpl
je
imul
jne
addr16
cmpsb
sbb
xor
fidivs
or
jb
and
xor
pusha
inc
jbe
push
push
fldenv
jns
insl
and
cmp
inc
adc
push
mov
inc
faddl
or
jp
cmp
push
adc
pop
mov
jo
daa
mov
and
pusha
lock
mov
or
push
outsb
mov
insl
mov
lods
push
jae
or
cmp
shlb
call
scas
add
addr16
subl
pop
lds
fsubl
adc
cmp
insb
adc
fnstenv
dec
testl
dec
stos
pop
mov
enter
aaa
loop
or
loope
or
and
sub
imul
call
test
scas
pusha
jg
enter
jae
inc
in
mov
xor
sub
je
inc
fadd
mov
sub
push
lea
jmp
mov
outsl
xchg
daa
xchg
in
mov
test
cmp
sti
cmp
cmp
or
ds
and
sarl
inc
jl
push
imul
jle
jle
stc
cmp
sahf
add
add
sub
mov
or
sbb
das
push
lea
cmp
aaa
aaa
and
in
mov
mov
xchg
ds
out
mov
jg
pop
pop
jne
stos
addr16
xchg
fs
jbe
sbb
add
adc
xor
gs
imul
mov
dec
sbb
sbb
fcoml
sahf
inc
pop
mov
cmp
jo
sub
int3
push
jl
out
sub
cmp
sti
iret
cmp
xor
sbb
out
sahf
int
std
clc
lock
test
push
enter
imull
mov
out
sahf
out
test
cwtl
xchg
cmp
mov
test
adc
out
jl
push
push
into
popf
xlat
popf
je
jo
insb
pop
dec
repz
jae
aas
pop
push
push
push
dec
iret
repz
dec
inc
inc
cmp
xor
iret
repz
sub
adc
jns
addr16
call
jns
out
push
repz
sti
call
push
cmp
repz
inc
xor
or
out
cli
cld
in
shlb
out
cmp
stc
lock
int3
mov
stc
xchg
stc
mov
xor
stc
and
fisubrs
inc
clc
jle
mov
nop
or
push
nop
adc
insl
bound
cmp
add
jg
xchg
ja
add
mov
sub
inc
or
jbe
addl
imul
push
adc
movl
add
add
mov
jnp
or
jnp
push
pop
fildll
or
jnp
add
test
mov
nop
xchg
call
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
rcl
call
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
test
std
push
repz
cmc
div
clc
stc
cli
sti
cld
std
jmp
or
sub
call
sub
push
test
push
adc
js
popa
data16
add
cmc
pusha
pop
shlb
cmc
out
xor
add
fiaddl
data16
daa
fidivs
add
push
arpl
jecxz
sti
sub
fs
sbb
jns
je
xor
jp
mov
jne
iret
decb
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
ud0
aaa
repnz
dec
inc
add
adc
sub
adc
adc
inc
cmp
mov
mov
jnp
inc
loop
mov
inc
push
imul
pop
clc
lret
sbb
mov
xchg
jge
arpl
cmp
stc
lds
adc
fisubrs
and
repnz
or
push
cmpsb
iret
lret
add
jmp
inc
inc
mov
mov
sub
fwait
fwait
testl
int
jns
ds
xor
incb
int3
decl
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
decl
pop
and
xchg
lret
sahf
icebp
mov
cld
ss
decl
or
cmp
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
jg
mov
jns
mov
dec
test
shrl
or
mov
leave
hlt
mov
sahf
neg
call
lods
dec
lock
xor
pop
mov
pop
or
and
pop
repnz
add
mov
and
es
mov
fwait
popa
dec
inc
mov
pop
mov
mov
ffreep
xchg
loopne
daa
or
xor
jmp
fstpt
push
inc
add
push
into
mov
xchg
and
lahf
getsec
mov
add
dec
xchg
push
mov
and
lds
fwait
imul
outsb
addr16
es
jae
mov
mov
syscall
movsl
and
xlat
adc
mov
cmpl
sub
xchg
mov
inc
xlat
bound
subb
pop
jg
aas
fs
lock
pcmpeqw
sti
loope
cmp
mov
jmp
daa
push
or
push
fildl
push
lods
push
call
jae
mov
add
or
pop
jmp
xchg
lret
xchg
enter
ret
fistl
ficomps
testb
add
add
pop
and
push
nop
push
adcl
xchg
nop
imul
lret
testl
insl
jle
cmp
push
pop
cmpsl
sbb
push
push
mov
mov
pop
jmp
test
loope
rep
mov
fbstp
sbb
inc
mov
push
sub
pop
push
mov
lock
sbb
mov
rcll
jnp
cmpsl
or
push
mov
add
add
clc
adc
jecxz
jg
faddl
bound
sbb
sbb
jns
outsb
cmp
xlat
jg,pn
jg
inc
push
shll
xchg
adc
pushf
stos
xchg
sub
mov
xchg
jne
aas
rcr
push
sub
jo
subl
sub
cmp
pop
pop
in
jo
xchg
mov
adc
and
mov
scas
sti
scas
call
es
fiaddl
cmp
and
lods
push
out
cmpsl
sbb
adc
inc
sub
mov
insl
ret
dec
dec
incl
aas
mov
gs
dec
loopne
loope
jp
xchg
ja
ret
aaa
pop
jecxz
jnp
loop
shrl
dec
imul
lret
out
scas
rorl
inc
mov
pop
xlat
addr16
je
and
lcall
or
pop
arpl
add
push
jp
xchg
jne
xor
and
push
lret
call
push
and
jo
pop
stos
pop
inc
mov
je
in
inc
add
outsl
mov
jnp
add
dec
add
arpl
adcl
xchg
lret
mov
mov
out
ret
stos
daa
ss
fbstp
into
scas
or
jo
add
push
inc
aas
into
pop
aaa
sbb
mov
mov
addr16
push
add
jae
push
arpl
inc
xorl
dec
mov
push
cmovg
jnp
pop
daa
loope
out
or
adc
xor
pop
mov
outsb
out
out
div
sub
push
adc
jbe
add
aaa
pop
xchg
pop
or
sub
add
scas
mov
outsl
bound
stos
push
sub
or
adc
mov
adc
inc
pop
divl
cs
aam
testl
aas
loope
dec
imul
shrd
pop
inc
call
sub
pop
out
js
adc
jno
dec
jnp
adc
push
push
cmp
add
test
mov
or
jg
xchg
fdivrl
sbb
xor
add
push
jle
pop
push
stos
inc
xchg
hlt
jle
bound
jae
push
pop
mov
addr16
lret
and
jno
mov
xor
bound
or
aaa
outsl
mov
out
mov
inc
cmp
jmp
outsl
jbe
testb
les
aas
ja
es
push
jge
xlat
pop
roll
mov
es
cmpl
inc
push
inc
mul
jno
jnp
sbb
arpl
ret
or
xchg
inc
inc
rclb
add
aas
imul
mov
insl
or
inc
ss
mov
dec
loop
inc
xor
xchg
jmp
out
push
pop
je
pop
mov
out
pop
por
insb
aas
js
sub
pop
sbbl
bound
push
in
das
outsl
mov
lds
xchg
inc
arpl
pop
ret
mov
negl
maskmovq
mull
pop
adc
inc
inc
negb
adc
mov
mov
inc
jl
adc
fisttps
pop
aam
pop
jl
imul
push
arpl
call
and
addr16
bound
das
repz
orl
jl
adc
out
out
cmp
bnd
jecxz
xchg
es
out
xor
ss
pop
jl
scas
loopne
mov
jnp
sbb
jmp
es
inc
mov
add
ja
fnstsw
outsb
sbb
add
add
xor
jno
push
adc
cmp
loopne,pt
dec
outsl
lret
jl
jo
cmp
cmp
aaa
push
lock
adc
lock
lock
scas
sub
popa
lock
mov
imul
lea
jl
and
popa
ret
ret
jo
out
adc
pop
cmp
es
addr16
and
and
xchg
push
sub
push
push
push
in
sub
fistl
fildl
push
mov
lods
jge
aaa
sbb
xor
or
dec
jp
or
push
jns
jae
mov
mov
and
fadds
scas
dec
ljmp
pop
mov
negl
jo
jl
arpl
mov
sub
out
pop
iret
scas
stos
pop
xorl
pop
data16
pusha
xchg
aaa
push
shrb
dec
inc
insb
inc
adcl
popl
je
aaa
or
mov
jnp
outsl
loop
lock
das
addr16
mov
bound
dec
fldt
gs
push
les
or
cmp
les
test
mov
inc
jg
imul
or
add
inc
fwait
pop
fbstp
cwtl
insl
insl
rclb
xor
pop
ss
inc
inc
popa
add
mov
push
mov
cmpsb
inc
loopne
cmp
or
shlb
inc
add
xor
out
stc
fisubrl
pop
push
outsl
ds
int3
inc
and
insb
addr16
aam
dec
jnp
fmull
addr16
dec
jbe
push
dec
cmp
test
pop
jnp
sbb
push
ss
mov
inc
pop
push
push
dec
push
sahf
idivl
push
inc
pop
ss
jns
mov
lahf
xorb
jg
push
mov
shl
hlt
out
pop
cmp
shrl
out
jnp
or
pop
aaa
dec
and
xor
imul
add
pop
jae
ss
or
and
shufps
inc
aaa
test
jbe
ret
mov
cmpsb
push
and
arpl
or
pop
test
sti
stos
pop
pop
push
jae
imul
and
fmull
mov
jae
insl
pusha
push
popa
jne
or
hlt
sbb
push
dec
bound
xor
pop
sub
and
jle
ljmp
repz
push
out
repz
dec
jle
lahf
out
sahf
ja
sbb
pop
sahf
out
mov
push
loopne
stos
dec
insb
push
lods
push
loop
dec
adc
cmp
loopne
pop
xor
xor
xor
jb
jno
je
cmp
push
fimuls
outsl
jb
imul
lods
sahf
jb
jb
and
inc
pop
fcmovnu
cmp
inc
xor
and
and
div
std
arpl
arpl
xor
cmp
fs
adc
inc
sbb
inc
jo
cmpsb
mov
imul
outsb
je
ss
cmp
fnsave
fdivr
imul
sbb
jae
data16
aam
imul
andl
movsl
mov
insb
xor
inc
pop
pusha
cs
popf
pop
jne
pusha
sub
imull
push
cmpsl
bound
pop
push
dec
fmull
inc
push
call
dec
push
cmp
inc
sub
xchg
scas
inc
adc
mov
and
mov
je
mov
push
and
lea
aaa
cmpsl
add
bound
sbb
cmp
add
fildl
adc
cmpsb
pop
repnz
negb
add
int3
pop
fcoms
ss
mov
ja
hlt
movsb
scas
test
push
les
sbb
or
mov
adc
imul
cmc
lods
sub
out
sbb
mov
add
inc
ja
icebp
and
fs
bound
sahf
call
movsl
and
inc
add
or
fiaddl
das
xchg
add
imul
aaa
mov
imul
popl
arpl
movl
adc
dec
mov
test
push
or
insb
or
adc
adc
test
push
pushf
mov
loope
dec
cli
push
inc
pop
dec
jg
mov
aas
iret
dec
stos
sti
push
lods
test
sub
aaa
pop
pop
outsb
subb
sbb
and
imul
loop
inc
fs
arpl
or
shll
adc
inc
outsl
lods
push
add
fisubrl
xchg
add
outsl
pop
orb
pop
pop
sbb
mov
sbb
je
mov
xchg
and
jnp
or
sub
aaa
and
paddusw
jbe
imul
stos
testb
jae,pn
inc
stos
jno
inc
jp
arpl
pop
xchg
divb
dec
test
or
pop
bound
cmpxchg
xor
arpl
xorl
ret
xchg
jb
bound
push
jb
js
jbe
imul
iret
repz
adc
pop
sbb
and
addr16
repz
mov
sti
ljmp
xor
cmp
add
js
add
sub
push
inc
int
add
das
adc
jns
mov
insb
out
and
sub
xor
inc
mov
sti
out
mov
mov
mov
xor
add
shrb
ret
sub
mov
insb
shrb
xchg
pop
adc
aaa
fwait
dec
and
add
xchg
int
mov
rclb
lret
str
ss
cwtl
or
and
das
incl
rolb
adc
xchg
fmuls
push
push
mov
sub
fdivrl
mov
inc
clc
lock
out
pop
js
in
cmpsl
inc
fidivl
in
push
call
str
push
test
dec
fidivs
sub
mov
movsb
and
sti
jl
pop
or
mov
or
addr16
cmc
push
inc
outsl
inc
push
and
mov
imul
data16
xchg
push
faddl
xchg
dec
inc
pop
daa
nop
inc
cmp
or
sub
dec
inc
mov
scas
mov
jg
aaa
sbb
sub
fwait
jge
or
mov
push
and
movsb
scas
dec
popf
push
sbb
ret
xchg
arpl
movsl
aaa
adc
popl
jno
push
xchg
push
aas
shrb
jmp
inc
je
scas
xchg
add
pop
icebp
movsb
cli
jb
or
push
xchg
jo
out
jnp
ss
xlat
das
add
loope
and
cmpsl
push
or
orb
jp
push
pushf
test
aaa
outsb
jmp
mov
cmp
gs
imul
outsb
jae
sbb
sub
scas
inc
or
adc
pop
inc
repz
xor
push
mov
imul
inc
push
imul
push
or
inc
arpl
xor
jae
mov
aaa
mov
push
add
pop
pop
shlb
ret
and
popa
int
cmp
xorl
test
rclb
ret
das
pop
ret
shlb
icebp
push
push
in
xchg
cmp
sub
scas
je
add
fistl
and
or
fistpll
ja
add
out
dec
mov
mov
lahf
arpl
movsl
insl
and
scas
jp
jmp
xchg
mov
xor
pop
mov
inc
outsb
cmp
loop
mov
ficomps
fimuls
addb
cmp
add
mov
mov
loopne
lahf
sti
pop
rcll
cmp
mov
sub
cmp
pop
dec
add
outsl
ret
add
jb
xlat
and
cmc
pop
push
ficoms
inc
out
jmp
dec
cmp
dec
xor
push
and
cmp
mov
pop
addr16
aas
je
adc
aas
xor
shlb
push
sub
es
faddl
pop
and
jmp
inc
outsl
daa
sub
ja
push
cmpsl
clc
icebp
mov
or
pop
xlat
inc
cwtl
cmp
sbb
imul
jmp
adc
inc
jg
lea
insl
out
dec
les
adc
adc
or
add
out
mov
mov
push
push
mov
stos
xchg
test
fs
push
or
cli
aam
scas
adc
arpl
fs
pop
daa
mov
push
jo
pop
pop
mov
push
inc
mov
add
xor
sub
scas
nop
add
xor
stos
fisubs
pop
das
adc
inc
dec
les
insl
loop
add
pusha
aaa
ss
add
test
add
xor
lcall
cmp
scas
push
or
push
jp
pop
push
ljmp
mov
push
or
andb
das
add
inc
ret
imul
dec
mov
sbb
pop
pop
popa
xchg
mov
or
decl
shll
push
jmp
stos
punpcklbw
mov
dec
mov
movsb
sbb
popa
mov
adc
jne
sub
addr16
ljmp
mov
call
and
dec
mov
jae
adc
xchg
xor
add
dec
inc
lcall
shrb
push
dec
cmp
dec
scas
mov
mov
xor
sub
sub
es
mov
mov
sahf
es
movlps
or
test
cmpsb
inc
das
fisubrs
push
pop
jo
clc
minps
mov
adc
jle
dec
sub
push
pop
mov
mov
inc
repz
push
mov
stos
push
scas
lods
mov
outsl
push
or
ret
sub
gs
mov
iret
jp
pop
call
dec
jmp
jae
insb
je
mov
jnp
push
sbb
mov
mov
xchg
aas
nop
inc
push
mov
mov
fbld
push
stos
shlb
smsw
movsb
jge
pop
pop
rep
cmp
jmp
push
divb
js
cltd
xchg
inc
cli
subb
test
push
push
testb
inc
inc
pop
push
fnstcw
data16
or
repz
out
lds
fwait
int
pop
mov
or
ret
lods
jmp
and
push
inc
insb
fwait
and
hlt
test
mov
push
es
fsubrs
mov
stos
mov
xor
cmp
pop
dec
or
cs
das
mov
cmp
inc
and
or
jmp
xor
push
xlat
jo
push
sub
aas
lods
push
mov
wrmsr
sub
imul
adc
xchg
adc
cmp
or
add
sbb
fimull
aas
xchg
sub
insb
arpl
cmp
fsubl
adc
sarb
mov
incl
mov
stos
rcll
mov
pop
sarl
sbb
or
dec
jo
imul
pop
aas
sti
out
sbb
cwtl
jno
xchg
mov
outsl
cmpsl
iret
aas
les
adc
xchg
xor
std
stos
and
xor
and
pusha
out
iret
mov
or
xlat
mov
popa
dec
shrl
adc
xlat
and
dec
sub
xchg
adc
and
xor
stos
or
bound
jae
add
mov
mov
jno
mov
push
adc
push
fisttps
popa
popa
cmpsb
out
jnp
jge
test
add
js
add
push
and
fs
icebp
pop
jno
roll
das
outsb
sbb
aad
xor
aaa
cmp
sbb
push
insl
xor
add
sbb
dec
sbb
xchg
jae
pop
popa
mov
jmp
mov
pusha
addr16
push
insl
arpl
notl
bound
or
pop
pop
mov
or
mov
xchg
mov
dec
inc
push
pop
xor
adc
inc
mov
sub
xchg
scas
in
pushf
and
scas
cld
push
jb
pop
lods
pop
scas
xchg
push
leave
or
mov
and
sbb
mov
js
leave
test
xorb
push
jb
das
test
scas
xchg
push
test
xchg
push
jb
mov
stos
push
leave
mov
xchg
pushf
push
cmpsb
movsb
push
leave
push
aad
add
movsl
aad
and
inc
stos
in
cmp
push
fbld
cmp
inc
mov
stos
stos
push
fbld
mov
push
xor
jne
mov
dec
mov
leave
mov
fcom
sub
push
leave
push
sahf
sahf
cwtl
fbld
dec
popf
mov
dec
pop
popf
test
daa
loope
sbb
mov
mov
cmp
jg
lods
or
push
das
inc
push
and
pop
xor
pop
sbb
mov
pop
rorl
xchg
ret
mov
or
test
nop
mov
push
insl
sub
inc
jb
aad
inc
xchg
dec
lcall
pop
dec
sub
xlat
inc
xor
jo
dec
xlat
push
aas
lods
fwait
pop
pop
pop
inc
inc
mov
outsb
xchg
nop
or
adc
mov
dec
inc
lods
aam
inc
repz
dec
inc
aam
sub
push
cmp
inc
aaa
mov
or
dec
les
or
xchg
adcl
arpl
push
sbb
xlat
push
movsl
mov
out
mov
push
or
xor
shlb
inc
add
xor
addr16
adc
xchg
and
fildll
xor
jg
rcrl
scas
cmpsl
lahf
mov
pop
inc
sub
test
inc
mov
cmp
adc
mov
nop
cmp
jmp
sbb
and
in
nop
pusha
stos
ljmp
out
aaa
xchg
iret
mov
jp
aaa
outsl
movl
movl
das
imul
ss
outsl
jecxz
xchg
mov
ret
lahf
sti
dec
lods
xor
gs
mov
cmc
add
add
pushl
or
lods
addr16
test
or
inc
mov
bound
daa
scas
pop
mov
imul
push
sbb
xor
cli
cmp
push
clc
icebp
sub
outsl
outsl
jbe
mov
xchg
xor
jg
add
pop
arpl
lret
add
xlat
pop
add
idivb
pop
push
sbb
mov
dec
pop
inc
inc
add
xchg
pop
sbb
sub
pop
or
lods
inc
in
or
add
into
push
xor
push
xchg
bound
dec
sbb
popl
nop
inc
or
xchg
xor
imul
cmp
ja
add
jo
daa
mov
adc
je
or
je
push
cs
xlat
les
sub
mov
movsb
mov
shrl
pop
sbb
iret
mov
add
push
pop
or
mov
jae
ss
or
pusha
cmp
imul
jcxz
outsl
dec
js
xor
xchg
lret
arpl
dec
and
add
inc
loope
stos
push
addb
push
insb
or
rorl
test
loop
shlb
dec
adc
clc
andb
pop
jae
push
add
outsl
or
cmp
repz
dec
xchg
push
mov
lds
int
neg
push
and
dec
mov
inc
outsb
xchg
dec
les
aad
cmp
testb
push
insb
das
cmpsb
fstpt
sbb
dec
cmp
call
sti
pop
or
jl
and
adcb
andb
jb
lods
adc
push
push
inc
or
imul
push
or
xchg
mov
pop
rolb
xlat
push
pop
adc
lahf
pop
push
and
cmp
adc
sub
push
inc
mov
or
push
cmp
xor
mov
cs
pop
ljmp
xchg
mov
dec
mov
das
or
fwait
or
xlat
cmp
adc
out
xor
mov
arpl
add
sub
push
jns
cs
push
mov
lock
fiadds
pop
pop
movsb
adc
jg
inc
mov
fwait
push
xor
xchg
push
jae
push
add
cmp
aaa
arpl
cmp
xor
test
push
pop
xor
cmpsl
aas
fwait
mov
push
inc
loopne
ss
cltd
xchg
xorl
adc
push
ja
sub
xchg
hlt
sub
push
inc
mov
push
sahf
push
cs
cmp
xor
out
mov
aaa
out
es
add
inc
cmp
adc
insl
xchg
jmp
sbb
loop
xchg
inc
xchg
pop
mov
jns
xor
jae
fs
paddsw
dec
sub
into
xor
jbe
jmp
jecxz
pop
out
shrb
out
lds
or
inc
or
or
jle
js
xor
inc
inc
js
stc
cmp
xchg
mov
into
dec
or
inc
push
jbe
fdivrp
bnd
ss
push
dec
mov
icebp
mov
xor
xor
js
daa
ret
xor
cs
lret
jno
xchg
outsb
jb
loop
push
faddp
loop
cmpsb
xchg
ja
retw
xlat
dec
pop
sbbl
data16
cmp
fidivs
jp
sarb
adc
mov
arpl
fs
addw
cmp
xchg
dec
dec
daa
jns
mov
push
mov
cs
fucomip
xchg
shlb
packssdw
inc
pop
pop
out
fidivrs
mov
push
es
ss
outsb
pop
clc
push
mov
daa
dec
jb
das
inc
insb
or
es
das
add
jge
sarl
jns
inc
pop
push
sysexit
loopne
jge
mov
cs
sahf
push
out
loope
mov
push
neg
imul
mov
push
scas
push
insl
mov
out
mov
ja
xor
push
jp,pt
ficomps
push
jp
ds
shl
jnp
inc
scas
jg
dec
das
xor
loop
xchg
jp
pop
outsl
js
push
out
pop
outsl
dec
xor
push
xor
into
xor
mov
imul
add
shll
jo
sub
aaa
push
test
popa
mov
sbb
inc
mov
xchg
fimull
lahf
pop
fldl
fwait
jg
movsl
push
pop
sub
jnp
orl
sub
add
xor
xor
push
nop
add
fistl
push
xor
mov
and
add
imul
pop
imul
xchg
or
or
roll
xchg
mov
dec
fcomps
adc
popf
sti
mov
pop
fsubs
je
lret
dec
pushf
les
xchg
xchg
and
rcl
aam
sti
test
cmp
arpl
sbbl
pop
and
adc
scas
repz
popw
fstpt
inc
insb
add
push
push
mov
daa
push
sub
inc
inc
mov
fwait
jmp
adc
push
dec
insl
mov
pop
sbb
mov
add
pop
adc
mov
or
push
addr16
xorl
mov
mov
rolb
cli
xchg
into
insb
outsl
popa
fs
outsl
jl
sub
addb
adc
add
fwait
out
mov
sub
cmpsl
addb
xchg
inc
shrb
movsb
sbb
lds
mov
add
add
dec
dec
pop
sub
addr16
imul
mov
shlb
mov
pop
pop
pop
ja
repz
outsl
in
cwtl
ja
pop
mov
push
xor
idivb
mov
mov
or
pop
xchg
out
jae
push
inc
xchg
add
repnz
mov
pop
jo
mov
push
pop
cmp
jne
jo
push
cli
cmpsb
repnz
xor
pop
push
or
pop
ja
xor
xor
push
adc
movsl
or
inc
into
adc
inc
pop
mov
xor
or
jg
adc
je
jae
sbb
dec
adc
xor
push
pop
mov
lods
add
fcoms
cs
iret
das
push
sub
pop
inc
sbb
outsl
add
cltd
js
lock
lahf
jmp
xlat
jmp
fildll
pop
inc
jl
outsl
cmpsl
add
addl
adc
sbb
sbbl
dec
movsl
es
scas
lods
push
and
cmp
mov
insl
das
push
inc
stos
or
and
and
sti
dec
cmp
outsl
popa
fldt
shl
or
iret
mov
and
cmp
xchg
pop
out
loop
inc
pop
and
adc
mov
iret
jecxz
fst
inc
mov
dec
stos
push
xchg
push
scas
add
lock
inc
push
insb
inc
iret
fbld
dec
insb
push
xchg
dec
push
dec
arpl
jae
daa
jbe
shrb
dec
imul
outsl
andps
cmp
das
repz
lods
add
xlat
aaa
mov
push
fs
cmp
inc
push
mov
add
sub
dec
mov
dec
cmp
adcb
push
xlat
popl
fiadds
dec
pop
sbb
add
das
mov
mov
mov
inc
aas
addb
push
not
outsb
imul
sbb
imul
in
stos
lock
mov
add
int3
fldl
loopne
jecxz
in
sbb
mov
inc
fmuls
mov
dec
mov
or
jne
adc
jg
mov
testl
mov
clc
aam
adc
and
mov
add
adc
mov
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
insb
out
adc
cli
mov
sub
sub
out
inc
mov
mov
sbb
mov
ds
pop
sbb
iret
imulb
subb
mov
dec
fsubs
jg
sbbl
xor
dec
xchg
adcb
lret
dec
push
pop
add
pop
adc
adc
enter
andl
dec
sub
adc
imul
cltd
or
xchg
pusha
lods
imul
inc
push
sbb
addl
or
xchg
sub
in
orb
jns
mov
pop
dec
cmp
sub
pop
jb
and
or
daa
cmp
xchg
push
xor
xor
cmp
inc
mov
in
pushf
dec
mov
or
repnz
jo
dec
xor
lahf
pop
push
xor
inc
push
fisttpl
aaa
lea
add
arpl
jp
sbb
jmp
add
sbbb
lcall
shr
mov
or
sub
jo
mov
push
mov
xor
inc
addr16
mov
inc
ss
cmp
jo
dec
imul
rolb
bound
add
aaa
pop
es
inc
dec
xchg
loopne
add
jne
cmp
popa
outsb
imul
inc
repz
dec
mov
je
js
sti
and
aas
pop
insb
push
lock
daa
jnp
add
aaa
push
leave
pusha
mov
jnp
xchg
das
xlat
ret
inc
xchg
push
orb
xchg
xor
push
jnp
imul
scas
scas
cmc
test
fidivs
sub
pand
lods
iret
aaa
xor
outsb
das
addr16
push
mov
sbb
mov
ret
lock
xlat
aas
mov
jne
inc
call
add
add
mov
and
int
inc
iret
or
movl
lods
xorb
push
pop
jb
addr16
stos
pop
iret
test
arpl
daa
cmpsb
cmp
fstpt
adc
xchg
dec
adc
aaa
bound
push
xor
fbstp
fcom
and
outsl
dec
inc
ljmp
bound
add
add
dec
inc
arpl
jle
cmpsl
jl
cs
xchg
mov
add
dec
push
scas
cmp
fistl
es
hlt
sbbl
addr16
stos
lret
pop
adc
loopne
out
sbb
push
jo
pop
test
pusha
out
mov
and
pushw
dec
cmpsl
or
adc
int3
inc
sahf
mov
lock
mov
sahf
mov
push
add
push
adc
shlb
mov
insb
outsl
ret
mov
daa
xchg
insb
fwait
ja
adc
push
jno
push
inc
loopne
popf
mov
jno
in
daa
aaa
movsl
pop
sar
jecxz
mov
xchg
call
out
fildl
add
push
int
loope
in
jge
jl
push
jge
sub
cmp
testl
push
int3
cs
out
sbb
mov
mov
sahf
out
cs
stos
das
sbb
notl
or
add
flds
jle,pt
into
es
and
notb
mov
sub
adc
int
jle
aaa
mov
dec
push
jl
inc
sahf
das
jnp
int
in
pop
push
scas
cmp
sbb
inc
cmp
dec
push
bound
cmpsl
ret
and
ds
out
lock
loopne
popw
aaa
test
iret
jmp
loopne
mov
pop
faddl
mov
fdivp
mov
push
inc
test
mov
dec
mov
pop
cmp
shlb
mov
out
push
push
mov
dec
pop
nop
push
push
or
mov
mov
pop
jnp
push
out
aas
inc
jl
dec
int
insb
iret
or
push
xor
lock
out
sahf
sub
pop
jg
sarl
jns
xor
cmpsl
jge
cmp
aaa
lahf
sahf
push
test
push
outsl
mov
insb
cmp
jne
sahf
out
xchg
mov
out
cmp
repz
je
enter
iret
repz
mov
out
jns
out
cmp
lea
out
shr
inc
cwtl
jno
inc
ret
iret
out
clc
mov
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
fcomps
imul
pop
mov
and
push
mov
add
idivb
imul
int3
push
and
pop
sbb
enter
cld
cmp
adc
or
adc
repnz
or
inc
sub
jno
add
mov
push
test
insb
pop
dec
orl
sub
stc
xorb
leave
cld
mov
add
orb
call
or
lock
leave
shl
clc
adc
jp
xor
repnz
xor
imul
inc
stos
lods
xchg
cmp
rolb
add
aam
mov
xchg
aam
outsb
lods
fildll
adc
jo
add
adc
add
push
dec
subl
les
popa
je
push
sbb
and
adc
xchg
jbe
or
cmp
fmulp
mov
ficoml
imul
mov
lret
es
movsb
sub
stos
push
sub
dec
lea
inc
or
push
add
xor
lahf
pop
sub
rorl
out
frstor
movsl
call
in
adc
ret
adc
or
rcrb
pop
outsl
dec
cli
and
fwait
insb
cmp
jo
inc
adc
xor
jl
cmp
pusha
jno
outsb
insl
xchg
pop
sbb
stos
lret
in
iret
dec
pop
mov
push
sbb
aaa
fs
out
mov
ret
xchg
idivl
mov
and
jbe
add
xchg
push
in
sub
push
imul
dec
mov
les
insl
outsl
dec
std
aas
jno
filds
inc
fs
jo
xor
fcoml
inc
push
mov
imul
jnp
test
inc
xchg
fisttps
subb
and
xor
dec
and
inc
das
jb
lock
pop
pop
or
pop
pop
sub
push
or
xor
jns
pop
lahf
pop
xlat
aam
loope
sbb
or
insl
cs
sbb
ds
mov
push
loopne
pop
out
iret
inc
add
inc
adc
sbb
outsb
xor
or
add
cmpsl
mov
xchg
inc
xor
cwtl
add
out
inc
insb
pop
pop
addr16
mov
mov
aam
jae
fs
adc
inc
dec
mov
popa
lods
or
cmp
jnp
dec
pop
emms
pshufw
shlb
xchg
rolb
sahf
jnp
test
sub
pop
pop
mov
jbe
pandn
sub
push
aaa
imul
mov
aam
add
xchg
das
testl
iret
xchg
and
popa
das
push
xor
push
pop
sbb
mov
push
jg
das
lods
sub
xchg
lds
or
xchg
inc
dec
add
hlt
rclb
inc
jecxz
push
sub
pop
jecxz
cmp
push
add
add
mov
push
inc
mov
and
and
xor
dec
aas
add
or
nopl
add
loopne
pusha
jo
xrelease
stos
ret
incl
cs
aas
cwtl
sub
push
push
arpl
loope
add
jge
adc
pop
or
or
outsl
xlat
inc
lds
add
pop
loop
nop
ss
outsl
jmp
rcl
ja
add
mov
loope
cli
jg
pop
stos
mov
push
inc
xchg
jo
insl
mov
or
fwait
mov
cmp
xlat
jb
sbb
cmp
pop
mov
add
into
psrld
xor
sbb
scas
and
addr16
pop
adc
loop
xchg
inc
pop
lahf
out
fs
insb
inc
dec
inc
xor
or
add
pop
aad
inc
cmpsl
push
call
add
pop
mov
loopnew
add
inc
iret
pop
pop
mov
xchg
cmp
inc
or
xor
test
lods
nop
es
inc
jecxz
xchg
adc
popa
sbb
xor
lret
je
xlat
or
es
insl
jo
je
add
addr16
ds
jo
jae
daa
pop
jno
outsl
xor
push
loopne
cwtl
test
rcll
les
pop
call
sbb
sub
cmpsb
jns
je
jne
test
pusha
or
jmp
push
add
mov
das
dec
out
push
push
mov
addr16
mov
mov
dec
pop
inc
addl
les
adc
imul
push
and
lea
gs
mov
jp
pop
inc
sti
inc
dec
pop
test
jecxz
das
shlb
into
push
neg
bound
sub
outsl
popa
adcb
sbb
subb
push
movsl
inc
push
mov
adc
pop
push
mov
sbb
push
xchg
push
xchg
pop
lock
jmp
dec
lods
and
push
das
cmpsl
adc
adc
pop
pop
jmp
fwait
add
lds
adc
pmuludq
inc
fsubl
aam
jns
jb
rclb
jo
mov
arpl
dec
and
or
xlat
insb
sti
mov
fsubr
inc
outsl
outsb
or
aaa
push
dec
push
call
pop
stos
aad
das
daa
lahf
lret
ret
sbbl
cmpsb
jb
popa
dec
or
ds
mov
push
pop
add
push
iret
popf
jp
outsl
inc
push
dec
inc
dec
push
xchg
add
inc
sbb
and
pop
imul
jge
mov
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
incl
pop
ja
popf
and
and
mov
xor
fidivl
and
ds
das
sbb
lcall
pop
daa
daa
jg
imulb
push
and
push
pop
inc
inc
inc
loopne
out
in
push
inc
pop
and
or
aas
js
insb
cwtl
cs
fs
sbb
push
and
add
and
les
lods
insl
inc
pop
xchg
imul
nop
insb
pop
gs
shll
push
sbbl
popw
push
sbb
cmp
dec
aaa
push
insb
add
out
jp
or
es
and
mov
mov
adcb
movsb
push
sbb
sbbb
add
insb
out
mov
loope
sbb
inc
mov
lock
mov
lock
loopne
add
aas
push
pop
sub
mov
pop
push
push
push
sbb
subb
or
sbb
in
xor
xchg
add
daa
clc
fwait
aaa
mov
fwait
ja
es
sti
fnstsw
pop
outsl
pop
cmp
test
or
cmpsl
push
mov
push
daa
cmp
pop
int3
pop
xchg
mov
test
test
rorl
pop
hlt
fidivs
cmp
or
or
or
insl
add
fidivl
out
sub
imul
gs
jg
and
out
je
and
and
arpl
bound
sub
xchg
outsb
xorl
sbb
imul
jo
stos
movsb
cmp
cs
out
scas
inc
fsubs
sub
sub
push
iret
lea
loop
dec
inc
negb
adc
jo
movsb
mov
js
outsl
fs
mov
fisttpll
gs
jo
jns
iret
inc
mov
adc
rcr
outsl
insl
jne
dec
sbbl
les
addr16
cmp
and
push
inc
je
bound
icebp
or
test
jbe
push
adc
insb
mov
inc
inc
into
aaa
lds
outsl
jo
mov
or
xor
test
movsb
mov
mov
or
orb
inc
or
inc
push
stc
std
fisttpll
shrl
cmc
inc
cmovo
out
imul
cmpb
aas
in
nop
jo
maxps
loopne
test
xor
mov
mov
inc
xor
incl
adc
dec
out
fucomp
push
xorb
add
push
sbbb
pop
fcoms
push
mov
mov
pop
mov
mov
out
bound
inc
add
divb
xchg
sbb
add
in
pop
xchg
cmp
ss
insl
sahf
dec
lcall
shl
daa
xchg
les
xchg
add
fwait
mov
daa
xchg
iret
arpl
mov
mov
outsl
call
jns
addr16
and
aam
addr16
scas
fists
inc
or
test
pop
xchg
cmp
add
into
inc
fwait
pop
dec
mov
dec
fimull
xor
mov
ret
add
xor
mov
shrb
mov
outsl
lock
xchg
pop
or
jo
shlb
cmpsl
add
pop
fcomps
xchg
pushf
fsubl
daa
xchg
and
mov
mov
fwait
movsb
cwtl
rolb
xchg
mov
iret
test
enter
lock
aam
dec
in
pop
js
and
xchg
pop
pop
add
out
sahf
movsb
insb
jl
mov
insb
shrb
out
mov
pushf
nop
stos
loopne
daa
mov
or
cltd
add
inc
ficoml
xchg
movsb
or
daa
mov
pusha
mov
dec
daa
leave
mov
movsb
xchg
mov
add
add
loopne
cltd
push
lcall
into
lcall
adc
aam
xor
and
mov
imul
outsl
das
scas
jbe
or
enter
int
mov
in
cld
fwait
test
add
in
xlat
dec
add
cwtl
inc
data16
fwait
daa
mov
mov
inc
sbb
fwait
insb
fs
sahf
ss
add
shrl
ja
xchg
shl
and
insb
in
call
daa
fs
pushf
sbb
notb
addr16
mov
ja
js
push
pushf
jo
jl
pop
and
mov
daa
negb
aam
mov
inc
xor
lods
cltd
sahf
ja
sahf
and
popf
add
inc
adc
cmp
sub
dec
mov
shlb
scas
add
hlt
out
fiadds
mov
mov
aas
divl
popf
test
cwtl
mov
fmull
iret
mov
inc
dec
add
test
sahf
or
sbb
sbbl
jae
iret
imul
pusha
outsl
leave
jl
lahf
pop
out
sahf
or
mov
int3
xor
mov
cld
lahf
mov
lds
mov
mov
lahf
pop
insb
rclb
or
xlat
ja
pop
repnz
and
enter
mulb
pop
lahf
cld
cmpsb
cmpl
aaa
xor
pop
fwait
data16
repz
mov
out
xchg
pusha
cmpsl
jg
cmp
out
nop
xchg
movsb
mov
sbbl
cmp
clc
xchg
mov
nop
mov
out
mov
cmpsl
mov
add
and
mov
mov
mov
lods
push
cmpsl
mov
jae
iret
test
in
add
hlt
in
adc
in
pushf
and
cmpsl
mov
dec
fisubrs
mov
add
cmpsl
dec
mov
iret
test
or
dec
mov
insb
cs
lock
and
js
in
popf
test
mov
inc
push
push
lahf
dec
dec
push
pop
mov
pop
enter
xchg
movsb
test
enter
and
clc
aam
hlt
adc
pop
clc
aam
fidivrl
and
xor
inc
lahf
sub
lahf
ja
enter
push
je
xchg
push
jb
pop
push
je
cmp
das
movsb
les
or
push
push
add
mov
sub
cmp
shrl
and
sub
pop
int3
push
rcll
cs
and
pop
push
in
push
cmpsl
test
rolb
xor
out
cmpsb
and
cmp
cmpsl
lds
insl
dec
jg
insb
push
adc
insb
out
add
movsb
mov
enter
nop
or
push
add
adc
push
xor
imul
sub
cmpsl
jg
adc
jg
cmpsl
jo
aas
test
push
cmpsl
pusha
lds
iret
pop
mov
fdivrs
and
int3
push
push
cmpsl
mov
or
nop
ds
test
push
sub
aas
ja
test
lahf
rcrb
enter
rcrb
lock
lock
test
push
int3
add
mov
cmpsl
sub
enter
incl
test
dec
add
cld
dec
jbe
inc
fsubrs
rcrl
xor
adc
cmpsl
js
push
shll
inc
pop
addb
mov
lock
pop
adc
and
add
push
inc
lock
mov
ja
jbe
inc
lahf
push
insl
dec
adc
ja
cmp
shll
xchg
inc
movsb
mov
push
mov
loopne
inc
mov
xchg
lahf
dec
add
test
ljmp
jp
pop
call
shll
dec
jg
jo
inc
add
rolb
sahf
pushf
jo
sahf
or
adc
cwtl
fcoml
out
inc
push
pushf
jb
pusha
mov
sub
int3
jbe
sahf
outsl
inc
mov
inc
xlat
ja
or
addb
fidivrl
lcall
inc
pushf
or
scas
movsb
or
enter
aam
lods
and
cmp
dec
lods
xor
dec
das
push
fcom
adc
jg
dec
sbb
out
inc
sahf
mov
adc
fbstp
inc
sahf
or
enter
roll
adc
enter
adc
cmp
adc
mov
adc
fisubrl
ret
jl
nop
outsl
push
add
pop
xor
cmpsl
insb
inc
inc
shlb
jbe
rcrb
test
scas
adc
and
xor
sub
sbbl
cmp
jb
mov
iret
rcl
mov
pop
enter
lahf
or
out
mov
push
and
imul
pusha
pop
in
sub
push
pop
enter
mov
repnz
iret
test
push
aam
fdivs
aad
not
outsl
aas
data16
inc
push
xor
mov
arpl
pop
mov
sahf
or
mov
push
pop
xor
xchg
xchg
mov
jnp
add
mov
push
and
push
xchg
outsl
add
jmp
add
iret
xchg
add
inc
sahf
adc
jo
test
and
aam
inc
add
cs
mov
inc
mov
push
sbb
popl
daa
fsubr
jns
mov
push
pushf
push
fcmovb
cs
xchg
addr16
pop
pop
orb
push
mov
mov
jns
mov
enter
js
sub
xchg
mov
enter
xor
or
outsb
insb
push
dec
dec
dec
xchg
pop
push
nop
cmpsl
or
dec
jo
scas
xchg
ss
or
imul
clc
sub
fidivs
and
test
aas
and
test
out
lahf
repz
ja
daa
scas
clc
xchg
pop
dec
gs
dec
inc
leave
xchg
pop
leave
inc
cmp
leave
xchg
pop
xor
xchg
pop
leave
xchg
and
out
or
push
pop
aaa
iret
out
out
mov
push
or
lock
jnp
jns
les
ss
les
sbb
sahf
int
mov
nop
je
cwtl
jl
jge
jns
inc
xchg
jns
jae
sahf
mov
sahf
out
fidivrs
dec
sub
pushf
rep
mov
loopne
and
or
fsubs
xchg
testl
mov
mov
jmp
inc
add
jb
jb
sbb
dec
add
adc
out
aam
add
inc
xchg
fisubs
hlt
js
out
and
add
mov
sbb
pop
in
ja
pushl
cmp
in
ja
cmp
and
aaa
and
push
inc
push
leave
add
lods
pusha
inc
inc
mov
inc
mov
outsl
inc
outsb
add
inc
inc
movsb
movsb
fwait
jl
inc
incl
pop
or
jl
orl
add
push
dec
cmp
repz
aam
mov
fs
ljmp
adc
adc
adc
xor
jmp
xor
lods
mov
jns
aaa
jl
js
mov
pop
scas
add
lods
and
scas
xchg
and
and
lods
cmp
xor
mov
mov
aad
outsl
sub
dec
testl
ret
int3
enter
cmpsb
pop
add
mov
pop
popf
pop
mov
jnp
scas
mov
mov
fcompl
jl
js
mov
mov
sub
jle
inc
mov
pop
ja
out
loopne
in
mov
add
rolb
out
inc
jno
out
ja
mov
jl
fildll
fists
loopne
and
fidivl
loope
je
xlat
aaa
and
mov
pop
push
adc
scas
add
outsb
test
outsl
cmp
xor
enter
dec
mov
mov
scas
push
xchg
jl
mov
fcomps
outsl
mov
incl
pop
push
push
pop
xchg
outsl
and
clc
es
xor
mov
out
test
adc
sahf
ror
fdivrs
loope
pop
push
xchg
jg
cmp
and
daa
xor
hlt
aaa
sbb
leave
pop
mov
aam
push
nop
sbb
cwtl
out
lds
mov
mov
ja
cmp
outsb
rclb
pop
xchg
push
push
out
movsl
lcall
jnp
nop
fisubl
aaa
or
and
jnp
iret
hlt
push
lds
mov
iret
imulb
xchg
sbb
ret
xchg
fmuls
xor
pop
add
sub
xorb
jb
int3
rcr
xor
xchg
or
dec
movsl
ss
ret
fists
mov
push
xorb
add
push
push
pushf
and
mov
pop
ret
adc
lods
mov
xor
and
xor
nop
insb
add
roll
push
call
je
mov
leave
pop
push
add
jbe
dec
push
cmp
ja
aaa
cmp
sbb
outsl
daa
nop
sbb
pop
les
aaa
mov
scas
mov
cld
xchg
mov
jle
mov
dec
mov
pop
jg
mov
jbe
daa
and
jg
lock
pop
xchg
les
in
cmp
add
test
orb
jnp
dec
dec
nop
push
pushf
push
adc
mov
bsf
pop
int3
pop
call
pop
xabort
push
test
sub
or
add
adc
inc
xchg
push
push
add
fcmovb
xchg
xchg
or
or
subl
adc
shlb
sbb
add
inc
push
jb
add
in
adc
lock
sub
movsb
push
push
push
push
enter
sahf
les
enter
push
push
mov
or
je
fmul
jnp
push
or
aaa
or
and
inc
jnp
mov
imul
add
aaa
imul
enter
mov
jo
add
popl
mov
push
mov
aaa
enter
xchg
dec
lock
cmp
inc
add
and
pop
outsb
sub
add
loopne
mov
outsl
inc
out
andb
push
popa
dec
inc
rorb
jno
dec
sbb
xchg
mov
push
add
ja
push
cmp
sbb
and
xor
imul
das
stos
xor
daa
ljmp
mov
mov
xchg
addr16
sbb
mov
not
cltd
mov
ja
fs
mov
hlt
lret
add
pop
xor
mov
inc
push
push
aaa
mov
add
test
mov
adcb
mov
pop
repnz
lock
pop
enter
inc
insl
je
int3
dec
xor
cmp
xor
or
incl
jl
mov
sub
xchg
shr
xor
pop
push
repz
int
pop
mov
outsb
iret
repz
xor
in
sub
dec
outsb
xchg
mov
jl
jo
pop
je
jns
out
out
jno
pop
jg
jl
out
shl
jb
cmpsl
stc
cmp
mov
inc
dec
repz
imul
out
lcall
xor
sbb
pop
jl
dec
repz
sbb
jns
iret
repz
dec
sarl
je
or
cmpsl
stc
cmp
je
out
push
jnp
int
jns
inc
jno
fimuls
repz
sbbb
push
mov
repz
sub
cltd
mov
loope
jg
push
jge
ja
out
ljmp
repz
jge
xorl
cmpsl
stc
cmp
adc
pop
xorl
sarl
aad
test
jns
test
in
and
cmp
stc
and
inc
jnp
int
jns
in
mov
sahf
out
sti
and
pop
lahf
cmpsl
xor
mov
cmp
cmp
outsb
sahf
shl
jns
out
lea
sahf
fnstenv
out
cmp
sub
repz
nop
dec
int3
test
xchg
movb
loope
xchg
aaa
imul
xchg
fs
out
in
push
xchg
dec
int3
repz
iret
out
xchg
xchg
mov
cwtd
cwtl
fistl
cltd
push
mov
fcompl
lcall
int
fwait
push
dec
repz
pushf
ja
adc
repz
out
aaa
sahf
pop
icebp
sahf
ds
cmp
push
lahf
push
xchg
fbstp
mov
xchg
xchg
mov
iret
sarl
xor
int
imul
repz
cmp
repz
test
jns
cmpsl
pop
xchg
stc
and
cmpsl
stc
cmp
push
stos
std
cmp
mov
subl
outsl
lods
cmpsl
lret
scas
out
xor
aad
scas
shl
dec
mov
sarl
fistps
mov
cltd
int3
sahf
out
ds
mov
xchg
mov
jl
mov
repnz
jns
cld
cmp
sahf
ja
fisttpl
mov
push
jl
push
mov
in
mov
mov
jb
cmp
stc
cmp
cmp
out
cmp
shlb
test
lcall
in
shlb
jns
test
roll
mov
xor
in
jo
mov
imulb
dec
mov
ds
fwait
int
lret
add
into
rcl
push
cwtl
aad
xlat
int
repz
insb
fsave
clc
loopne
loope
cltd
shlb
shl
insl
push
loopne
icebp
outsl
int3
setbe
std
pop
add
gs
mov
aam
daa
xchg
divb
jmp
pabsd
shlb
mov
or
push
aaa
xor
in
mov
adc
pop
shrb
xchg
inc
push
shrl
aas
push
leave
sbbb
andl
aas
add
leave
daa
fidivrl
lds
adcl
push
jg
loopne
repnz
mov
cmp
cmpsl
fdivs
pop
jae
sahf
es
leave
mov
pop
xor
mov
fs
adc
dec
xlat
aas
lahf
jbe
testb
lahf
out
in
jecxz
mov
mov
inc
jb
das
repz
testl
or
nop
jl
mov
or
aas
add
xchg
je
xchg
sub
pop
jmp
inc
out
sbbl
flds
pop
daa
daa
mov
inc
insb
frstor
adc
mov
add
fiadds
xor
movsb
mov
xor
daa
sbb
in
dec
loopne
mov
mov
js
xchg
lahf
dec
push
mov
xlat
pop
mov
add
mov
testl
push
mov
lea
add
fisubrs
push
and
es
dec
inc
scas
dec
push
repnz
sbb
add
sbb
lock
jo
subb
pop
idivb
inc
or
outsl
addr16
in
in
push
test
add
out
fsubrs
pushf
daa
mov
icebp
lea
push
stc
ja
pop
add
hlt
push
fidivrs
ffreep
ja
sub
fnstenv
push
lods
mov
push
add
adcb
add
cs
nop
mov
jb
mov
add
ffreep
inc
pop
insl
push
adc
sbb
mov
add
in
pop
mov
mov
mov
mov
aam
outsb
out
add
mov
adc
fcoml
inc
int
flds
xchg
pop
and
insb
mov
cwtl
out
test
dec
fcmovnb
push
nop
subl
add
jno
jbe
fmull
scas
clc
daa
sbb
pusha
pusha
xchg
pusha
mov
pusha
lods
fcoml
imul
aad
loope
es
sbb
mov
push
mov
xchg
daa
les
push
mov
push
cmpsl
in
lcall
push
les
movl
fldt
ret
pop
daa
jl
xor
fmull
popa
inc
push
inc
mov
aam
dec
sbb
loopne
mov
xor
adc
ficomps
or
divl
or
mov
fs
fiaddl
push
nop
sbb
jnp
decb
or
unpcklps
and
sbb
inc
mov
aaa
cmpsl
push
mov
bound
mov
mov
mov
rolb
dec
jmp
shll
pop
js
aaa
fists
stos
lods
mov
inc
cmpsl
cmpsb
adc
mov
and
cmp
fsub
out
xor
mov
arpl
pushf
andb
insb
mov
xchg
pushf
movl
pushf
jecxz
in
xlat
fistpll
arpl
adc
dec
mov
loopne
fs
xchg
mov
cmpsl
sbb
sub
cmp
xor
xor
jbe
pop
pop
pcmpgtw
mov
jge
test
lea
sbb
pop
mov
cmp
into
ftst
add
pxor
cli
pop
gs
enter
or
or
or
sbb
inc
daa
push
loopne
movsb
jge
gs
push
jae
add
xchg
cmpsl
add
cmp
cmpsl
add
out
inc
mov
in
loop
jecxz
scas
jb
push
jb
fiaddl
cld
test
lods
pushf
mov
outsl
dec
sbb
push
add
jb
arpl
outsb
add
test
popl
pushf
pop
test
mov
pushl
in
out
in
add
push
test
addr16
in
scas
adc
jns
xor
mov
or
in
sbb
loope
add
addr16
enter
mull
movsb
test
scas
mov
nop
clc
add
addr16
and
ret
push
sub
pop
cmpsl
loop
or
pop
mov
adc
add
fs
mov
lea
lret
mov
dec
cs
xchg
add
xchg
mov
and
mov
pusha
ret
imul
pop
arpl
pop
daa
pop
pushf
mov
push
pop
aaa
out
addb
out
daa
mov
in
out
push
imul
add
jecxz
pushf
mov
xor
imul
jl
fs
mov
imul
xchg
xchg
mov
push
call
daa
push
xchg
push
push
or
movsl
xlat
push
filds
adc
inc
push
jmp
aas
jmp
fisttpll
sbb
lcall
mov
addr16
dec
dec
nop
mov
jb
sbb
or
sub
pop
imul
xchg
pushf
sub
jbe
imul
js
les
mov
daa
mov
in
xchg
stos
loopne
int
rol
scas
cmpsl
in
enter
jmp
add
in
and
sbb
cmp
imul
addr16
rclb
cltd
xchg
add
inc
aad
mov
out
fld1
xlat
and
add
in
sbb
in
adc
push
sub
cmp
dec
add
sub
pop
in
push
daa
call
sbb
in
repnz
and
mov
cmp
xlat
in
pop
enter
stos
sbb
mov
mov
in
add
add
add
pop
mov
pop
insl
add
out
or
inc
sbb
cmp
xor
mov
outsl
cmp
lock
test
out
sbb
divl
jmp
movd
mov
nopl
cmpsl
push
in
adc
inc
mov
lods
adcb
movsb
add
mov
insl
push
jo
or
push
xlat
leave
and
mov
outsl
pop
add
jbe
dec
mov
out
insl
and
daa
mov
loop
pushf
dec
cs
jo
jl
mov
adc
test
xchg
imul
push
aam
addb
fwait
daa
ss
and
xchg
cmpsb
add
add
jbe
push
xchg
icebp
out
jno
minps
imul
pop
fbstp
fwait
dec
adc
jno
mov
rclb
mov
cmp
jg
les
push
repnz
shrl
or
xor
pop
push
in
push
aaa
inc
insb
outsl
jb
xlat
inc
mov
test
leave
iret
cwtl
push
cmp
xchg
xorb
in
shr
and
aam
hlt
iret
jb
add
jnp
fcomip
dec
adc
dec
repz
dec
xlat
jae
test
pop
pop
push
sub
jl
xchg
ss
jg
pop
add
dec
inc
mov
insl
jnp
adcl
cltd
or
mov
and
stos
add
pop
dec
sbb
pop
nop
jg
push
add
mov
hlt
sub
sbb
paddw
insb
femms
adc
add
enter
add
inc
xchg
pushf
popa
pop
pcmpeqb
adc
imul
and
je
cmpsb
pop
insb
aam
aas
fadds
in
lock
mov
add
cmc
mov
pusha
daa
pop
pop
mov
jb
or
jne
jne
cmp
mov
jne
jbe
push
xchg
fisttps
ljmp
cs
jl,pn
jbe
test
in
push
and
xchg
enter
dec
add
or
push
je
daa
or
and
fsubrs
push
mov
popa
leave
dec
fucomip
jge
adc
sbb
inc
sub
fists
add
and
mov
adc
sbb
sahf
test
pusha
leave
inc
cmp
xor
lret
jbe
sbb
lcall
mov
sbb
add
pop
mov
daa
les
push
mov
leave
xchg
popf
ja
add
sbb
rorb
rcr
outsl
stc
das
xchg
mov
push
push
add
cmp
inc
dec
addr16
mov
shll
and
jg
xchg
movsl
jge
mov
insl
rorb
int3
dec
mov
in
mov
inc
in
add
add
dec
in
pop
pop
cli
jp
and
xor
pop
inc
add
leave
enter
addr16
jge
jno
jg
sahf
repnz
cs
lret
sbb
aad
adc
notb
dec
pop
sub
aas
jnp
adc
mov
jnp
mov
fs
push
leave
jecxz
outsb
addps
nop
in
sub
mov
dec
xchg
out
xchg
xchg
mov
pusha
shlb
push
push
xlat
add
addr16
inc
add
out
add
daa
incl
xchg
aaa
cmp
cld
or
and
dec
je
jl
mov
xlat
cld
out
mov
xchg
fdivrl
dec
std
jg
push
xor
add
pop
add
push
mov
std
pusha
insb
mov
xor
xchg
jl,pn
xchg
adc
cmpsl
std
int3
filds
pop
and
daa
add
lahf
mov
and
adc
xor
pusha
pop
int
add
and
iret
jb
in
add
mov
pop
and
je
jge
mov
out
cld
jle
add
or
dec
jnp
and
pop
push
es
jecxz
xor
or
push
add
loop
jbe
fistpll
leave
in
leave
or
mov
xchg
mov
aam
jle
out
dec
jb
out
jg
idiv
enter
sbb
jg
jg
inc
push
add
loopne
xchg
mov
jb
jbe
scas
jg
outsl
lea
sets
sub
add
movsb
xor
or
jg
push
add
fwait
jb
subb
add
or
xchg
add
add
scas
mov
imul
daa
scas
adcb
mov
add
out
xor
mov
sbbl
inc
dec
cmpl
fimull
cmp
mov
nop
shll
ja
popl
pushf
mov
inc
lret
addr16
add
ja
add
in
xchg
and
daa
xchg
inc
subl
push
jmp
pop
iret
bound
push
in
push
leave
add
lea
cmp
in
popf
pop
movsl
add
sahf
mov
aad
daa
and
or
in
or
in
enter
push
addl
cmp
adc
sub
sub
adc
dec
xchg
sbb
test
sub
push
mov
mulb
xchg
push
fldenv
pop
leave
add
jmp
dec
inc
mov
add
in
xor
pushf
test
add
daa
pop
mov
mov
pop
aam
fsub
aaa
movsb
cmp
jno
xchg
filds
mov
shlb
pop
push
sbb
cld
ja
daa
in
jbe
je
add
jl
test
dec
or
pushf
or
lods
pinsrw
les
mov
xchg
add
jecxz
add
dec
out
in
les
aas
mov
dec
addr16
ss
fwait
mov
shlb
or
push
orl
adc
outsl
push
ret
adc
cmp
daa
adc
mov
push
xchg
addr16
jo
nop
iret
and
xchg
add
or
negl
xor
testl
cmpsl
imul
lds
mov
push
sbb
pop
jno
jl
mov
adcb
xlat
fildll
outsb
xlat
js
push
inc
daa
outsb
insl
inc
or
mov
iret
vaddsubps
pusha
jmp
ss
xor
or
dec
push
sbb
sub
cmp
enter
dec
add
add
jb
je
test
xchg
or
mov
aas
cmp
mov
add
incl
and
jl
or
add
xchg
push
inc
pop
push
or
sbb
or
inc
enter
add
mov
mov
add
das
jns
lahf
ja
push
or
jbe
push
push
daa
mov
in
sbb
testb
and
les
sub
sysexit
add
mov
add
inc
pushf
insb
sub
in
and
xor
jl
leave
leave
leave
in
mov
or
js
or
movsb
pusha
rorb
ret
mov
out
or
decl
xor
cmp
mov
lsl
cmpsl
xchg
ss
or
jbe
dec
fidivl
gs
inc
mov
aaa
push
jnp
orl
setae
mov
mov
or
rclb
mov
in
lods
hlt
add
or
add
xchg
in
loope
fisttps
imul
sub
xor
mov
adc
pop
pusha
nop
and
adc
cwtl
cmp
add
fisttpl
or
daa
push
leave
pop
adc
add
rcl
pop
sub
decl
sahf
addr16
ja
rorl
ja
push
lds
mov
daa
in
popf
cmp
and
push
sub
je
xchg
xchg
add
inc
cmovl
or
cwtl
mov
mov
ds
xlat
push
subps
mov
mov
lret
insb
push
lods
add
mov
push
mov
in
sbb
dec
out
ja
fcoml
sub
adc
cs
sbb
jo
xchg
jae
das
js
lea
mov
xchg
stos
mov
inc
xor
mov
outsl
mov
or
iret
jbe
jbe
cs
or
adc
xchg
xchg
mov
test
enter
cs
mov
movswl
fadds
jo
or
fisubl
imulb
xchg
clc
jb
push
push
ror
leave
enter
push
aaa
jb
rorl
and
scas
leave
dec
in
mov
mov
xchg
adc
nop
add
adc
outsl
mov
jbe
cmpsl
dec
ja
xchg
outsl
add
dec
inc
outsb
lsl
cmpsl
adc
rsm
mov
in
pushf
rcl
fs
in
xor
sti
setno
adc
pop
divb
jb
add
daa
aas
daa
pop
das
cmp
or
mov
pop
push
je
and
adc
pushf
stos
adc
xchg
add
daa
mov
pextrw
add
enter
fucom
pop
in
das
sbb
std
ja
adc
dec
pop
dec
and
push
push
cmp
add
xchg
add
in
xchg
addr16
mov
int3
add
aam
pop
pop
out
lock
cli
lahf
adc
xchg
aaa
push
inc
shr
and
mov
imulb
insl
add
xchg
xchg
lret
call
mov
fimuls
outsl
mov
pmuludq
incl
sete
adc
and
and
in
inc
dec
push
testl
xchg
adc
testb
outsl
push
xchg
or
into
out
pmaxub
out
xchg
out
and
out
xlat
or
xchg
aaa
push
insb
insb
pop
pop
and
push
dec
add
jbe
mov
aas
push
dec
inc
sub
cmpsb
pop
push
cwtl
xor
mov
add
xchg
mov
cmpsl
cmpsl
aas
pushf
pushf
mov
cmpsb
lret
loop,pn
pushf
loop
sbb
xchg
je
adcl
jbe
iret
xchg
xor
cmp
daa
and
dec
push
add
adcl
mov
and
mov
sbb
enter
mov
add
xchg
into
add
sarb
xchg
xchg
add
mov
ret
or
mov
xor
inc
add
in
or
pop
fcoms
daa
ja
xchg
mov
sbb
dec
jnp
cmp
gs
leave
rcr
loop
ljmp
cwtl
sbb
sahf
mov
add
dec
faddp
and
inc
cmp
or
jae
jae
pop
leave
dec
scas
ja
mov
add
jns
add
int3
fldt
cltd
data16
aas
cmova
leave
and
cltd
dec
sbb
bnd
fidivs
pop
jp
cmpb
inc
mov
mov
xchg
rdmsr
push
sbb
lcall
leave
inc
in
dec
popf
test
xchg
lcall
and
xor
out
sub
jg
xchg
xchg
xchg
xchg
pop
addr16
mov
cmpsl
push
cmpsb
cmp
cltd
cmp
loope
sub
cmp
flds
out
dec
xor
cmp
enter
add
add
push
mov
add
daa
cmp
fwait
jb
pop
fwait
pushf
lcall
sahf
mov
push
fiaddl
loop
add
add
pushf
add
mov
leave
dec
pop
mov
and
xchg
das
pushf
aaa
dec
pop
in
jbe
rcrl
pushf
pop
punpckhbw
vmwrite
jb
jle
mov
lahf
add
stos
mov
pop
ror
mov
or
loope
pmaxsw
xchg
daa
inc
inc
sti
popf
or
xchg
and
adc
dec
pop
pop
pop
xlat
sbb
shrl
out
popf
xchg
subps
xor
ret
in
and
in
popa
fisubrl
in
pop
pmaddwd
add
sahf
sbb
and
or
outsl
inc
xchg
adc
into
negl
sahf
push
mov
fstps
pop
add
arpl
imul
xchg
and
or
adcl
xchg
or
lods
lds
test
ficoms
and
enter
lock
lahf
adc
dec
movapd
jno,pt
pop
loopne
add
jno
jg
clc
xlat
and
xchg
adc
lahf
mov
adc
jns
addl
fsts
cltd
or
fs
insb
dec
jb
mov
in
and
divl
push
jmp
dec
fiadds
and
pop
push
xor
add
inc
jg
pcmpeqb
out
add
addr16
pop
cmpsl
in
in
leave
scas
mov
movswl
add
in
in
iret
xlat
out
mov
cli
mov
leave
mov
pop
inc
dec
psrlq
jb
pop
outsw
and
leave
mov
xchg
in
in
cmp
mov
cmovne
les
iret
fildl
outsl
out
scas
testl
jmp
shufps
iret
mov
add
out
inc
xlat
pusha
add
push
dec
add
fwait
movsl
and
ljmp
jne
insb
daa
movsb
dec
call
mov
faddl
movsl
test
mov
ror
fsubl
jmp
xlat
inc
cmp
repnz
out
es
cmp
add
xchg
and
inc
pop
dec
add
add
gs
jo
or
xchg
cmp
cmp
or
and
mov
adc
jb
enter
adc
adc
adc
inc
mov
adc
sub
enter
sbb
dec
sbb
jb
sbb
push
adc
adc
adc
jb
jb
adc
push
or
outsb
sub
mov
movsb
jg
ja
loopne
popw
movsb
popl
xchg
xchg
pop
in
add
add
cmp
cmpsl
sub
dec
mull
das
movsb
lret
fiaddl
xor
adc
or
scas
inc
fldt
sub
push
jmp
mov
sbb
and
and
insl
push
scas
xchg
stos
lods
sub
sub
test
mov
inc
movsl
stos
outsl
iret
movsl
int3
pop
cs
das
movsl
aam
fsubl
ss
push
hlt
or
daa
cmp
cmpsb
pop
cmpsb
xor
sub
cmp
pusha
sub
mov
insl
push
inc
mov
mov
and
xchg
add
push
add
outsb
daa
inc
dec
cmpsl
sub
xchg
mov
aas
sub
xchg
imul
mov
daa
lahf
cmpsl
add
scas
mov
jne
je
add
sahf
pushf
fcompl
push
or
or
inc
sbb
xor
inc
sub
jmp
inc
into
push
test
fildll
dec
outsb
mov
test
mov
lods
or
mov
mov
les
int3
or
xchg
outsb
daa
fdivrl
fmull
xchg
sub
xchg
test
test
jecxz
testb
cmp
pop
jle
test
push
add
push
ja
outsb
mov
stos
mov
sub
mov
test
mov
add
add
int3
cmovg
scas
push
pop
fsub
or
je
in
testl
flds
imull
push
xchg
fsts
mov
daa
pushf
push
stos
xor
mov
fisubl
mov
xlat
push
dec
push
pushf
mov
dec
outsl
push
bound
dec
shlb
outsl
push
jo
rol
lea
pushf
pop
mov
ja
fsubp
loop
lea
das
js
mov
inc
stos
stos
sbb
movsb
or
pop
leave
inc
mov
cltd
dec
ror
in
xchg
add
mov
pushl
and
sub
and
test
xor
xchg
mov
testb
add
roll
out
xor
jnp
add
shll
xor
shlb
or
xor
iret
rorl
daa
adc
dec
mov
push
push
cmpsb
loop
in
jne
xchg
xor
data16
xchg
daa
mov
mov
mov
add
fs
aam
faddl
in
add
xor
add
in
hlt
or
scas
lea
out
shrd
xchg
push
mov
adc
mov
jno
lods
das
ja
xor
xchg
pushf
pop
pop
bound
test
in
in
sbb
cmp
add
adc
dec
push
sbb
dec
dec
aaa
inc
dec
or
or
arpl
mov
scas
nop
scas
inc
aad
sahf
scas
mov
popf
pushf
mov
ret
lret
rcrl
fucom
push
shrl
add
fs
imull
push
push
add
jb
and
add
inc
sahf
mov
or
and
or
outsb
rolb
dec
in
sysenter
push
mov
add
jo
jb
mov
int3
aam
or
rcrl
xor
pop
jg
outsb
jmp
lahf
cltd
cmp
pop
push
movhlps
adcb
pop
cs
aas
scas
aas
xlat
xchg
pushf
lcall
test
loopne
xchg
jno
dec
xor
mov
push
rolb
adc
ss
xchg
leave
dec
cmp
and
and
cltd
cmpsl
push
aas
sub
aad
out
pop
out
jmp
int
sbb
imul
ja
mov
mov
and
mov
push
pushf
push
add
mov
jnp
lea
or
mov
push
sbb
and
cmp
enter
add
cmp
cmp
add
add
inc
mov
or
or
xchg
and
daa
or
pusha
adc
movsl
dec
subl
pushl
mov
out
add
push
pop
cmp
jbe
in
leave
dec
mov
add
jb
in
add
add
testl
pop
xchg
xchg
pop
pop
or
shlb
add
mov
nopl
addr16
xchg
add
rsm
pushl
or
push
mov
jbe
dec
lret
push
das
jb
daa
in
loop
femms
jp
adc
in
mov
xchg
adc
adc
rcr
loop
xchg
daa
daa
ljmp
in
sbb
pop
adc
cltd
cmp
and
pop
sub
jnp
xor
es
inc
inc
sub
mov
dec
sub
pop
sub
in
xchg
and
jb
jp
cmp
in
orb
cmp
pop
cmp
mov
inc
das
mov
or
mov
es
sub
subps
push
xor
daa
mov
push
loopne
inc
xor
xchg
and
ret
mov
push
or
adc
mov
xchg
push
jo
jb
pop
punpckhwd
shrl
aas
mov
daa
mov
arpl
xchg
push
mov
pushf
sbb
jb
mov
fisttpll
mov
or
loopne
call
dec
lock
bswap
xchg
and
adc
adc
sbb
jb
dec
adc
push
and
adcb
sbb
sahf
sbb
sbb
push
rcrb
fisubl
in
in
xchg
and
and
and
sbb
sbb
and
xor
leave
enter
sub
fistpl
fs
insb
jg
lahf
jg
cmp
mov
seta
mov
mov
sbb
ret
sbb
sbb
sbb
inc
mov
sbb
push
repnz
xchg
adc
add
or
add
scas
mov
dec
inc
js
outsw
pop
cmp
xchg
popl
inc
mov
add
mov
in
xchg
or
or
or
or
sbb
call
push
mov
xchg
and
adc
adc
mov
jb
adc
adc
adc
and
pop
arpl
insl
sbb
jb
jp
test
xchg
sbb
sbb
test
mov
mov
xchg
leave
shrl
fisttpl
outsl
out
mov
mov
sbb
enter
sbb
daa
push
das
adc
cmp
adc
push
adc
adc
push
cmp
enter
or
or
sbb
or
jb
enter
add
cmp
xor
fistl
push
scas
jo
mov
xor
mov
mov
and
xchg
push
xor
daa
mov
pop
dec
dec
or
enter
pop
pop
push
arpl
imul
adc
mov
mov
lods
pop
mov
sbb
pushf
mov
xlat
jle
test
mov
movl
add
data16
mov
fimull
inc
pop
add
mov
jns
orl
pcmpgtd
mov
aad
pushf
fmull
pmulhw
cmc
dec
dec
mov
and
fsubrl
sbb
cmp
xchg
daa
inc
and
and
push
jns
dec
mov
mov
jl
test
sahf
pushf
add
xchg
and
mov
add
fimuls
pop
out
add
adc
mov
push
femms
push
scas
push
inc
daa
mov
xchg
cmpb
in
xchg
mov
divps
imul
jb
push
mov
xchg
mov
mov
pop
cli
xchg
and
ret
push
bswap
psubusw
mulb
in
mov
adc
enter
xor
cmp
inc
sbb
repnz
sbb
sbb
cmp
jns
sbb
and
sahf
stos
and
xchg
xchg
daa
and
leave
in
enter
prefetch
jb
leave
leave
and
cmp
inc
das
jns
jno
dec
pop
outsl
xor
and
shlb
and
add
cmp
mov
pop
xlat
mov
push
outsb
mov
or
or
pushf
pushf
cld
sahf
std
or
roll
pushf
sbb
inc
fimuls
cmp
push
jb
pop
dec
dec
push
adc
mov
sbb
and
and
xor
push
shrl
pushf
pushf
aam
in
mov
add
cmp
stc
ret
comiss
iret
call
cmp
cmp
addr16
aaa
add
insb
pop
fmull
jns
fists
lret
dec
iret
ret
or
fisttpll
sahf
lds
divb
mov
mov
adc
cmp
cmp
adc
bswap
mov
dec
les
xor
pop
ds
xchg
and
sbb
fcmovne
enter
jge
mov
jb
sahf
mov
addr16
mov
jb
jge
mov
xchg
sub
enter
sub
mov
jb
xor
xor
xor
xor
and
xor
incl
ss
aaa
enter
sbb
mov
aas
mov
leave
lret
psrad
jl
clc
aas
lds
aaa
push
adc
dec
and
das
inc
cmp
in
fs
inc
push
popa
das
insb
dec
add
enter
jb
cmpsl
test
popa
fdivrs
push
jns
mov
inc
lea
dec
inc
mov
cmp
pop
lret
add
loope
in
add
stc
push
movb
pop
sbb
outsl
daa
and
daa
or
aas
pop
dec
or
push
push
fs
adc
sbb
jb
adc
fstps
scas
push
scas
adc
cltd
cmp
in
lock
or
in
xor
and
cmp
dec
xchg
outsl
loopne
pop
fs
es
mov
popf
inc
movsl
or
scas
dec
fs
movsb
jbe
fucomip
add
cmc
add
and
xor
or
pop
and
sub
xchg
xchg
daa
aaa
or
or
enter
dec
arpl
outsb
pmulhuw
in
fs
setno
pop
pushf
adc
repnz
cmpsl
adc
addr16
inc
mov
sbb
ficomps
das
jmp
and
lcall
enter
mov
and
and
jb
and
dec
pop
push
daa
xchg
xchg
and
bound
insl
sub
enter
setns
daa
scas
test
xor
test
out
jb
in
in
lret
lsl
pop
add
add
sub
xor
aas
inc
jg
jno
in
dec
lahf
lret
dec
mov
mov
mov
daa
pop
pushf
int3
pop
mov
daa
daa
mov
bswap
or
or
or
in
pop
movsb
fwait
sub
testl
iret
lret
sbb
and
push
cmp
fnstcw
inc
pop
add
aas
push
pop
repnz
sbb
and
pushf
cmp
jg
mov
xchg
pop
dec
fisubl
mov
and
and
and
call
int3
mov
sbb
push
int3
dec
push
pop
xor
push
pop
hlt
cmp
push
push
testb
lahf
clts
dec
sub
dec
cmp
mov
scas
insl
jns
xchg
mov
leave
enter
add
lret
sbb
jb
pop
jecxz
lock
or
or
jg
and
sub
cmovno
dec
fs
xchg
adc
adc
in
idivb
xchg
leave
enter
das
mov
ror
push
leave
dec
mov
call
pop
popf
push
into
adc
sbb
mov
into
pop
dec
mov
push
inc
push
dec
pop
push
push
or
dec
inc
pop
bound
aas
push
inc
mov
out
push
jp
orb
cwtl
push
adc
test
adc
popf
mov
pop
sbb
sbb
sbb
sbb
enter
dec
or
movups
xor
and
sub
jns
jg
push
add
push
outsb
daa
insl
cmp
pop
push
push
sbb
ds
dec
mov
and
inc
lods
mov
pop
ret
xchg
xchg
mov
fmuls
jecxz
push
xor
in
out
psubw
rolb
cmp
jns
adc
jbe
jb
push
sbb
inc
sbb
sbb
push
sbb
imul
mov
in
xchg
and
and
int3
xlat
loop
in
inc
bnd
sahf
sub
push
inc
rcl
cmp
das
cmc
pop
push
scas
pop
mov
mov
inc
jne
lret
or
cmp
inc
pop
dec
movsb
sub
push
shrl
nop
cmp
jecxz
push
or
daa
daa
sub
xlat
daa
and
add
enter
or
or
or
cmp
add
in
jbe
cmp
inc
packuswb
jb
cmp
jb
adc
push
fiadds
sbb
pop
roll
sbb
pop
sbb
addr16
inc
and
inc
leave
enter
pop
jo
xchg
fs
in
mov
pop
mov
cmp
loopne
por
imulb
aam
daa
sbb
popf
pushf
es
das
sub
sub
pop
and
pop
sub
fimuls
aas
cmp
das
inc
xor
fmull
dec
pop
ss
outsl
setno
test
mov
lret
aad
aas
jmp
dec
sub
inc
push
aam
add
dec
mov
jg
lock
in
fscale
das
aad
push
movlps
das
enter
sub
or
or
mov
leave
push
fs
outsl
adc
test
nop
fwait
adc
cmpsb
and
mov
das
mov
aam
fbld
inc
outsb
daa
ljmp
daa
and
sbb
and
mov
xchg
and
xchg
mov
xchg
xchg
and
sub
in
shrl
sub
xlat
cmp
cmp
inc
pop
push
cs
pop
das
lea
cltd
cmp
mov
xchg
jbe
cltd
mov
in
stc
dec
add
in
in
bndldx
aam
push
test
add
inc
push
push
jnp
shlb
loop
fsubs
add
jge
or
sub
or
push
cmp
push
pop
or
mov
das
pcmpeqd
int
fmuls
xchg
xchg
pop
push
aas
or
filds
in
pop
or
pop
cmp
or
lods
sub
mov
daa
fld
xchg
jnp
js
xor
daa
test
adc
add
pop
rolb
mov
jno
dec
mov
push
add
jnp
andb
cmpsb
dec
nop
add
cs
inc
mov
adcb
push
dec
pusha
pop
mov
movsl
adc
pop
inc
rcrb
shll
xlat
xor
cs
out
sahf
outsb
sbb
sahf
push
or
or
mov
or
or
fisttpll
imul
daa
fmull
push
xchg
adc
and
popf
pushf
inc
push
addr16
das
push
sysret
mov
in
push
mov
insl
push
and
leave
repz
sbb
push
pop
xchg
fucomi
addb
orl
addb
pushf
fmull
fbld
dec
dec
outsb
aas
xlat
orb
mov
mov
xor
adc
xchg
adcb
jmp
add
add
mov
and
push
test
aaa
test
adc
inc
test
jbe
mov
add
add
movsb
add
in
addr16
cmpsb
fisttps
mov
cld
mov
out
jb
jle
test
shll
fs
decb
inc
mov
nop
inc
mov
iret
mov
in
call
jle
jle
adc
push
ficompl
push
pop
fisubrl
fisttpl
fidivl
rcr
fsubp
stc
jb
jle
nop
fisubs
cmpsl
hlt
jl
cmp
repz
js
jo
push
fs
push
dec
inc
xor
iret
repz
and
adc
cmp
repz
add
repz
repz
lock
repz
pop
repz
mov
out
mov
idivb
xorb
mov
iret
jmp
aas
mov
xor
cmp
repz
sbb
repnz
push
in
cmp
repz
les
pause
mov
out
sahf
push
inc
inc
sahf
out
xor
add
clc
jns
out
push
in
fmul
mov
jmp
dec
push
mov
ret
push
dec
add
inc
xchg
and
xchg
rcrl
les
cmpsl
vphaddudq
rolb
add
cmp
mov
mov
add
out
push
insb
add
aas
sbb
and
sbb
add
daa
orb
inc
sub
mov
inc
stos
jae
xorb
icebp
incl
in
push
push
push
mov
push
adc
pop
sbb
push
out
rolb
add
pusha
loope
add
sahf
pop
je
movl
test
addb
cmp
pop
mov
leave
imul
pop
divb
das
outsl
push
pop
ror
iret
lds
adcl
leave
ss
enter
sbb
mov
pop
jl
pop
out
pusha
mov
add
out
fnstcw
movsb
enter
testb
adc
add
add
add
nop
inc
mov
cmp
clc
or
paddq
aas
xor
mov
push
das
mov
mov
jb
jbe
int3
or
adc
mov
cmp
adc
adc
or
add
cmp
push
pop
pmuludq
and
sbb
and
and
jb
add
clc
or
out
pop
imul
daa
xor
testb
xchg
scas
shrl
inc
cmp
xorl
fistpl
cmp
pop
js
mov
int3
test
fidivs
dec
insl
add
push
pop
js
out
ja
mov
repnz
xor
das
push
dec
insb
dec
mov
or
pop
pop
enter
mov
cli
or
jl
pushf
or
ret
mov
adc
pop
in
adcb
sbb
lcall
mov
mov
ret
inc
and
sahf
mov
sub
inc
call
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
addl
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
ljmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
ljmp
inc
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
jmp
pop
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
xchg
clc
repz
mov
subb
fwait
xchg
and
dec
insb
das
add
int
add
aas
jno
or
mov
jo
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
call
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
pushl
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
jmp
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
fildll
in
inc
inc
pop
mov
jne
fldt
cmp
jno
lcall
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
call
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
add
out
or
or
adcb
loopne
shrl
psubw
inc
inc
je
inc
inc
push
dec
in
cmp
and
dec
dec
inc
push
dec
inc
aaa
xor
pop
sub
dec
jg
sbb
popf
pop
insb
mov
insl
mov
lcall
dec
inc
jo
inc
popa
push
outsb
jbe
imul
sub
gs
outsl
sahf
pop
sub
mov
inc
in
enter
push
or
cmp
iret
xor
adcl
push
inc
dec
push
mov
and
testb
jb
push
mov
inc
inc
test
imul
inc
gs
gs
fmuls
adc
daa
inc
ds
arpl
mov
lea
adc
bound
outsl
push
dec
pop
mov
push
push
xchg
xchg
inc
je
adc
xorb
push
sub
push
cld
cmpsb
das
pop
inc
orb
add
aas
xor
add
dec
imul
popa
inc
dec
daa
daa
adc
sti
jbe
jae
imul
xor
inc
jg
testb
inc
jns
dec
lahf
int
sbb
push
push
les
push
cmp
cmc
jbe
insl
data16
jns
andb
mov
data16
mov
out
dec
push
mov
mov
dec
dec
add
jbe
adc
adcl
xchg
movsl
sub
mov
push
mov
and
xor
int
cmpsb
dec
and
dec
jg
imul
arpl
inc
or
push
cmp
rol
push
jns
pop
xchg
add
mov
add
add
stos
sbb
push
lock
idivl
cli
dec
sub
push
jo
mov
sbb
push
lahf
addr16
push
push
test
push
mull
rol
inc
push
push
imul
add
outsl
rolb
ret
push
jb
lds
or
ret
xlat
push
push
jp
lock
push
xor
jg
push
adc
push
xacquire
or
aad
lods
ficoms
arpl
push
push
mov
push
sub
popa
fimuls
pop
jg
sub
sbb
bound
inc
mov
pop
js
xor
and
mov
data16
test
push
loope
outsl
fs
mov
ja
adc
pop
ja
shll
lret
fs
test
adc
mov
nop
fcomps
push
mov
andb
lahf
insb
aam
psllw
push
shrl
std
cmpsl
add
stos
lret
scas
fisubrl
push
xlat
dec
lahf
subb
inc
dec
add
push
mov
and
dec
pop
add
mov
push
jg
cmp
sbbb
jo
pop
push
iret
aas
call
into
add
lahf
add
push
mov
sbb
cmp
out
imul
dec
dec
fbld
dec
in
addl
mov
popf
insl
les
dec
outsl
add
imul
mov
jo
gs
cmp
js
loopne
push
dec
add
dec
outsl
shll
cmpsb
iret
dec
push
and
pop
push
jo
mov
insl
pop
shll
sbb
dec
das
xlat
add
jg
jns
testl
repz
xchg
lock
test
js
int
cmp
inc
or
hlt
cwtl
ret
rclb
js
and
mov
push
push
add
pusha
ds
cmp
js
and
jmp
pop
ja
popa
push
out
mov
les
hlt
ljmp
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
pushl
out
sbb
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
decl
add
cmp
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
ljmp
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
push
mov
and
mov
cltd
xchg
mov
mov
or
or
call
shrb
or
adc
stos
sbb
data16
incl
jbe
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
sar
leave
pop
js
stc
mov
or
mov
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
call
add
shl
adcb
cmc
fnstenv
adc
mov
mov
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
outsl
fildll
mov
aam
movsl
fisttps
xchg
fadd
shll
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
jl
fnstsw
add
daa
adc
or
and
test
or
mov
jmp
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
ljmp
and
mov
add
inc
aad
scas
ja
popf
adc
call
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
lcall
shlb
add
inc
push
imul
xorb
sbb
jg
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
incl
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
mov
es
lds
or
sub
mov
cmpsl
call
ret
shlb
mov
ficomps
ret
es
pushf
mov
call
mov
ss
jmp
addr16
jb
mov
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
fcomip
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
mov
mov
loop
mov
push
addl
mov
cmp
cmpsl
push
push
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
inc
sahf
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
sarb
xchg
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
and
mov
fnstsw
out
add
cs
dec
push
mov
shl
mov
jmp
ljmp
push
mov
ja
imul
je
push
insb
imul
aas
les
push
jns
arpl
arpl
fsubrs
push
ja
push
inc
insl
in
inc
mov
jns
inc
jne
outsl
xchg
pusha
test
xchg
adc
lcall
and
dec
mov
nop
push
cmp
dec
cmp
insb
cmovns
cltd
inc
ja
clc
inc
insl
bound
xor
or
inc
add
popa
adc
inc
js
push
dec
subl
jbe
dec
sbb
and
in
in
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
in
mov
sub
xor
xor
xor
mov
xor
popa
push
inc
jbe
pop
mov
cmpsb
fs
mov
push
jnp
sbb
inc
or
ror
fwait
cmp
and
sub
test
outsb
imul
ss
jbe
arpl
bound
inc
aas
in
gs
xor
leave
and
jp
sub
sbb
aaa
movsb
out
and
lcall
sbb
dec
insb
push
dec
pusha
lods
and
cmp
xchg
aaa
aas
inc
add
adcl
inc
add
imul
mov
dec
sbb
push
aad
dec
dec
push
inc
aaa
outsl
ss
enter
sbb
inc
add
es
jbe
jae
inc
inc
inc
add
cmpb
add
stos
pop
shlb
iret
pop
je
inc
int
push
dec
dec
lea
xchg
sbb
mov
inc
aam
inc
outsb
jne
push
sti
fisubrl
mov
mov
pop
aad
xor
xor
or
aad
arpl
add
addr16
pusha
repz
push
push
jns
ds
or
imull
aaa
or
dec
out
imul
add
mov
or
pop
sbb
adc
mov
xor
jo
and
mov
jmp
pop
addr16
push
scas
xlat
mov
add
inc
xchg
daa
and
cmp
inc
jb
addr16
loope
popa
adc
jo
or
xchg
and
js
outsl
outsl
test
dec
sub
push
jno
adcb
xchg
pop
xor
loop
in
jb
and
pop
in
nop
pusha
lds
jne
leave
cmp
pop
arpl
sbb
push
cmp
movsb
lcall
je
jo
push
adc
push
outsl
insb
jns
sbb
mov
inc
sub
fstpt
sahf
addr16
or
mov
stos
inc
clc
insb
cld
add
iret
inc
push
bound
inc
ret
arpl
addr16
testl
or
xchg
orb
jnp
jne
sub
jecxz
jg
imull
lock
daa
push
dec
push
ret
mov
add
add
imul
jecxz
push
testb
and
aam
adc
mov
pop
movsb
adc
aas
push
sub
movsb
and
cmp
aaa
add
and
orb
aaa
mov
mov
jb
add
or
inc
adc
inc
xchg
and
inc
add
push
or
add
add
adc
dec
inc
or
mov
insl
push
icebp
nop
xor
jg
aad
cmp
push
add
int
dec
or
mov
sahf
and
popa
insl
add
mov
sub
je
push
adc
jb
mov
inc
dec
push
push
test
and
cs
cmpsb
dec
shrd
repnz
jo
popa
incl
lea
in
bswap
mov
into
jmp
jmp
jmp
repnz
in
push
pusha
call
xchg
iret
mov
dec
cli
push
cld
or
sar
imul
cld
fistl
es
add
dec
mov
mov
add
sbb
insb
daa
aam
pop
mov
cmp
adc
adc
add
xor
verr
aas
mov
add
sbb
add
addr16
push
test
mov
jo
stos
and
push
mov
subb
mov
cltd
mov
push
loop
and
push
pusha
push
add
pop
pusha
add
add
test
les
lods
add
xchg
or
enter
mulb
inc
mov
sbb
cs
mov
in
dec
or
rcrb
jo
push
xlat
out
add
xorb
gs
sbb
repz
push
inc
jl
les
cmp
popa
bound
arpl
sub
pop
adc
and
jmp
add
clc
or
sahf
mov
lea
pusha
test
pop
fwait
movb
cld
or
lea
bound
js
mov
mov
xor
or
cs
cmp
insl
ljmp
pop
add
call
add
mov
hlt
ja
jne
jmp
mov
jmp
sbb
jecxz
pop
lea
xor
mov
add
loope
pusha
je
dec
pop
mov
and
outsb
mov
hlt
mov
mov
sub
or
dec
shrb
hlt
jl
les
rcrb
sub
jg
inc
push
push
pop
aas
popa
mov
mov
pminub
jo
xor
pusha
cmc
scas
popf
add
mov
ja
rcll
sbb
mov
call
nop
fcomp
ss
lock
lea
insl
popa
pop
fcmovnb
adc
mov
sub
or
cmp
push
push
mov
fstl
xor
pop
popa
inc
sbb
mov
inc
nop
sbb
in
push
mov
ret
loope
or
adc
loopne
scas
subl
xor
jmp
mov
loopne
stos
sub
pop
xor
add
inc
push
sbbl
or
mov
xchg
jbe
clc
pushf
and
aad
or
aam
es
jne
push
inc
imul
add
sub
mov
sub
test
sbb
outsb
fcoms
inc
dec
and
arpl
fs
lock
cmpsl
movsl
pop
fidivrl
push
inc
adc
ret
and
sbbb
cltd
inc
loopne
rolb
pop
mov
or
cld
mov
add
cld
add
addb
out
dec
add
jbe
leave
fs
and
adc
push
push
popf
testb
sti
push
or
mov
xor
mov
leave
push
fistps
cltd
cmp
mov
add
cmp
mov
or
push
aam
sub
xor
shll
push
mov
dec
pop
push
jecxz
push
sbb
pop
stos
orb
rorb
add
stos
pop
cltd
test
jbe
cmp
lea
es
or
movsl
inc
dec
xor
add
lret
subb
and
es
push
aam
je
outsl
pop
incl
test
movb
dec
adc
add
outsb
jnp
or
jae
aam
lea
scas
out
or
lds
dec
shl
sub
push
add
and
imul
roll
in
push
pop
inc
aam
je
shll
add
pushf
jbe
add
and
or
rclb
add
movsb
rcr
loop
insl
sub
hlt
or
cmp
stc
mov
movsl
mulb
cmpsl
sbb
jmp
mov
dec
jge
xchg
fildl
mov
jae
aas
adc
xchg
arpl
cmp
scas
fcoml
and
mov
adc
imul
pop
je
call
in
mov
push
push
insb
fdiv
sub
xor
and
cmp
add
dec
dec
jns
sub
std
loope
sbb
fcoml
xor
hlt
add
or
add
mov
add
sbb
add
add
push
inc
mov
push
setge
push
lea
jne
pusha
adc
mov
jp
push
or
or
inc
or
shlb
pop
jecxz
clc
in
mov
xchg
sbb
test
sbb
and
rolb
inc
adc
das
or
out
outsb
push
jnp
int
push
or
pop
jg
ret
sbb
jl
subl
cmp
pop
pop
call
adc
cmc
fdivl
jnp
out
add
and
add
mov
adc
push
dec
pop
xchg
and
movsl
add
scas
add
lret
clc
xor
jp
lret
adc
mov
call
or
sbb
cmpsl
jecxz
inc
fdivs
mov
sbb
sub
call
ds
std
or
pop
jle
call
jne
xchg
and
xor
mov
push
xor
push
xor
xor
adc
mov
clc
mov
ss
hlt
jmp
shlb
outsb
dec
in
add
fadds
lock
stos
inc
fstpt
in
dec
rolb
and
call
mov
mov
push
fdivrl
lods
or
ja
pop
add
xchg
xchg
sbb
call
call
dec
pop
xorb
dec
dec
shll
loopne
add
rcr
adcl
mov
cs
xchg
mov
adc
in
sbb
out
cmp
adc
mov
rorl
inc
push
jbe
or
pusha
jp
je
xchg
push
push
cmpsb
xlat
rolb
xor
clc
sbb
es
or
adc
or
es
ret
sub
mov
pop
or
out
shll
jecxz
inc
pmullw
aam
sti
inc
imull
fcmovb
daa
lcall
rol
dec
xchg
sbb
mov
ret
aas
call
rorb
pop
lds
and
push
pop
lahf
mov
movsl
popa
ret
gs
sbbl
adc
bound
or
cmc
aaa
sub
push
hlt
push
add
adc
sub
xchg
jns
push
adc
pop
loop
test
xchg
jne
push
cmp
jmp
add
xchg
cmc
xor
lods
push
stos
lcall
in
in
push
aas
and
jne
ds
xlat
lock
sbb
push
sbb
sbb
sbb
pusha
loop
fdivr
mov
cmp
sarb
cmpsb
and
cltd
imul
push
push
dec
fdiv
mov
loopne
popa
xchg
mov
inc
pop
pop
lods
xor
sbb
int3
call
mov
push
pop
cmp
aam
mov
cmp
pop
jp
dec
addr16
inc
jb
adc
data16
stc
cmc
insl
inc
or
out
inc
mov
fcompl
jb
call
dec
les
ds
mov
notl
je
xchg
xchg
push
xchg
test
in
adc
mov
push
adc
add
into
mov
nop
add
xor
and
push
xchg
test
mov
mov
mov
rcr
mov
add
cmp
xchg
add
out
out
repnz
lcall
mov
fwait
inc
pop
jbe
hlt
fdivrp
xor
stos
cmp
lcall
fstps
add
and
xor
loopne
outsl
jne
mov
jecxz
pop
mov
xchg
psubsw
push
int3
push
repnz
xchg
aas
addb
xor
call
addr16
mov
int3
or
sub
adc
and
and
or
dec
sbb
lock
adc
pop
mov
pop
mov
lea
or
rol
ja
mov
mov
rep
sti
add
rep
push
and
cltd
xchg
int3
adc
in
sahf
mov
push
ss
mov
pop
aad
nop
aas
mov
testb
and
adc
xchg
jg
cmp
jne
or
jmp
stos
dec
mov
cmpsl
ss
outsl
mov
push
pop
lahf
cmp
femms
inc
shrb
cmpl
or
loope
cld
mov
inc
mov
push
push
das
xor
sub
dec
outsl
push
jb
test
push
dec
je
ljmp
ljmp
mov
stos
je
popa
pop
add
inc
dec
fiaddl
mov
call
sbb
je
mov
sub
lock
call
pop
inc
pop
pop
insb
or
xchg
mov
mov
repnz
pushf
mov
adc
xchg
push
push
cmc
pop
pushf
data16
cmpsb
test
sbb
and
into
imul
lcall
mov
addr16
lret
push
loopne
push
push
das
adc
pop
cmpsl
cmp
pop
xor
sbb
enter
in
repz
loop
jp
mov
std
sub
dec
neg
adc
or
imul
push
or
and
insb
jge
jo
dec
adc
adc
cwtl
push
push
dec
jo
inc
xchg
sbb
adc
call
adc
cmp
jle
adc
pop
jmp
adc
or
dec
pushl
push
scas
inc
loopne
gs
data16
enter
dec
in
push
add
jmp
xchg
push
and
pop
jmp
xchg
lret
add
sbb
push
ficomps
and
in
xor
xlat
or
xchg
stos
ficoms
or
leave
xchg
xorl
in
or
dec
in
in
pop
jno
sub
inc
imul
xchg
loope
jbe
insb
cmp
sbb
or
addr16
jmp
mov
pop
or
adc
lods
inc
rcr
in
or
mul
jmp
mov
pop
mov
cmp
add
sub
xchg
mov
mov
popl
mov
repnz
shl
aam
fsub
push
mov
jne
jle
mov
call
arpl
mov
mov
fs
imul
pop
lds
imul
es
cmpsl
data16
fidivrl
adc
push
fists
add
dec
jecxz
mov
pop
or
jmp
sbb
jne
lods
lods
push
mov
mov
fidivs
pushf
arpl
xor
fs
sub
ds
pop
mov
xchg
rolb
cmpsl
into
mov
xor
lock
popa
xchg
cmpsb
adc
jmp
add
push
mov
call
push
cmp
or
inc
outsl
mov
js
data16
ja
test
or
test
or
fstpt
in
push
mov
mov
lods
dec
xlat
push
push
mov
jecxz
push
lods
loop
lea
mov
push
jg
sbb
call
test
ficomps
dec
adc
or
and
cmpsl
or
inc
mov
js
add
and
addb
lahf
rclb
jl
addr16
cld
push
test
push
in
jne
cld
jb
add
or
jae
pop
in
lods
and
shr
sahf
in
cmc
les
cmp
xorb
mov
scas
jns
inc
and
add
mov
ss
push
xchg
out
gs
ljmp
push
add
add
out
enter
shr
insb
pop
icebp
xchg
push
test
aam
xchg
movsb
push
xorl
xor
mov
es
into
fsubs
cli
xchg
sbb
and
gs
inc
add
in
popa
inc
dec
pop
out
dec
lock
and
je
or
or
je
mov
movsl
test
xor
dec
or
loopne
outsb
or
cld
inc
mov
add
adc
xor
bound
jmp
push
ss
loopne
mov
aad
mov
adc
xor
movsb
movsl
iret
or
xchg
cli
dec
cltd
sbb
pop
cmpsl
inc
iret
xlat
cltd
insb
cld
adc
test
add
or
mov
clc
push
mov
add
adc
rorb
scas
push
movsl
jns
lods
jbe
adcl
xlat
nop
ja
push
add
outsb
orb
adc
into
jae
test
sub
push
sbb
daa
cmp
adc
mov
mov
mov
push
loopne
int
rolb
hlt
repnz
insl
jns
push
rcll
dec
dec
sbb
inc
inc
xor
fstp
mov
or
shr
pushl
icebp
mov
jnp
mov
fbstp
call
cmp
imul
add
cld
cmp
cli
ret
push
inc
shll
sub
cmp
call
xchg
pusha
mov
aas
mov
jmp
mov
dec
xor
mov
add
inc
adc
xchg
xchg
adc
dec
mov
mov
pop
push
fdivrl
addl
std
lahf
incb
push
adc
push
push
ds
push
shll
cmp
or
adc
sti
nop
test
bound
pop
addl
dec
add
mov
and
jnp
movsl
and
add
imul
push
sarb
dec
sbb
fcoms
jae
subl
push
pop
sbb
loopne
jmp
mov
add
orb
jmp
insl
test
fcmovnb
push
xor
mov
adc
or
rclb
inc
and
loopne
aam
inc
xor
mov
std
add
cmp
cmp
fmull
cmp
push
orl
mov
or
mov
sub
ja
icebp
rclb
fldt
mov
mov
push
call
inc
pop
ds
test
ret
lea
sub
inc
jbe
xor
jne
xor
sub
sbb
dec
sub
xchg
sarb
add
enter
cmpsl
stos
insb
and
jne
xor
je
std
jmp
and
insl
mov
xor
add
mov
cwtl
dec
in
or
jle
js
lcall
xchg
pop
add
add
sbb
mov
xor
lcall
rclb
push
or
mov
test
cmpsl
dec
cmp
loopne
repz
add
fs
pop
sub
in
sbb
adc
rorb
adc
adc
sbb
sbb
dec
or
data16
pop
sbb
call
enter
mov
shlb
jl
pop
jne
mov
jmp
or
shll
xor
or
or
or
pop
imul
lahf
dec
cwtl
add
dec
js
adc
or
sbb
fistpll
push
cmp
and
mov
addb
lods
lret
xchg
sbb
lock
es
jne
lea
dec
fst
dec
xchg
ljmp
sbb
shll
and
mov
cmp
ss
mov
test
jp
cmp
jge
hlt
mov
mov
adc
mov
mov
je
push
mov
lea
stos
inc
imul
repz
stos
sti
jnp
test
aaa
push
fucomip
cmp
je
cmp
pop
adc
push
jbe
movsb
xchg
jne
push
shrb
je
xorb
adc
nop
clc
push
and
std
jo
in
push
pop
jbe
xlat
push
or
sbb
add
or
in
out
add
xchg
push
mov
dec
push
jo
push
and
xor
pushf
loop
loope
ret
cmp
shr
inc
add
lds
scas
push
sbb
fwait
add
xchg
test
loope
mov
aas
and
mov
and
add
xor
test
paddb
test
jmp
push
mov
and
in
fsubr
jo
test
cmpb
cltd
adc
pop
mov
push
fld
pusha
into
call
or
sti
inc
adc
call
add
and
lods
stos
loopne
sti
push
push
or
or
xor
xchg
out
inc
addb
insb
in
push
sub
data16
cmp
sub
adc
cmp
pop
push
lea
mov
aas
cs
jl
cmp
dec
fmul
into
xchg
aam
xor
mov
push
mov
cmpsb
aam
in
imul
pop
aas
mov
call
dec
adc
fmul
mov
mov
shr
and
sbb
inc
ss
scas
or
je
jae
js
push
sub
lret
sarl
mov
imul
or
push
pop
dec
mov
sub
aam
cs
popa
sbb
mov
dec
inc
dec
shll
daa
xchg
ret
push
insb
push
mulb
mov
jmp
xorl
xchg
sub
and
sbb
mov
icebp
jmp
rcrb
addps
jmp
add
fidivl
hlt
into
push
adc
ss
jo
adc
jne
sub
mov
cmp
push
sbb
iret
cld
push
fmull
mov
or
mov
jmp
adc
and
pop
adc
sub
sbb
mov
or
push
dec
test
daa
dec
inc
clc
adc
into
call
push
pop
mov
fimull
inc
call
mov
jmp
push
imul
pop
lea
jmp
sbb
mov
cld
jne
into
cmp
js
xchg
jmp
ss
fcoms
jne
push
or
and
or
je
int3
jecxz
inc
push
sahf
dec
decb
adc
xorl
jmp
inc
es
jo
xor
add
add
fucom
js
sarl
icebp
call
sbb
lds
cmp
fldl
ljmp
enter
jmp
dec
psrlw
mov
push
mov
jmp
repnz
sbb
call
leave
sub
inc
ljmp
dec
jl
lods
or
push
js
negb
imul
shrb
dec
xorl
dec
mov
fxtract
jmp
sarl
and
xorb
movsb
inc
or
mov
outsb
mov
push
sbb
pusha
movl
loope
mov
or
xor
fcompl
or
scas
testl
jne
add
jb
mov
repnz
in
movsb
jmp
js
xchg
lret
sbb
fists
into
test
or
dec
push
call
sbbw
cmp
adc
inc
int3
jbe
icebp
mov
loopne
jge
mov
sub
bound
call
add
xchg
fcompl
sbb
push
inc
sbb
dec
or
jo
out
cmp
or
mov
cwtl
or
popf
pushf
or
cmp
test
fidivrs
mov
test
inc
mov
inc
loopne
cli
dec
mov
mov
mov
inc
mov
aad
addl
jmp
add
lock
push
dec
lea
mov
mov
sbb
cmp
sbb
mov
mov
and
fsubl
mov
nop
push
decl
or
inc
fdivrs
jne
movzbl
add
je
fsubs
scas
sbb
movsb
nop
jno
sub
sbb
push
jge
xor
stos
incl
nop
sbb
add
xchg
xchg
jno
and
ljmp
or
or
je
mov
jo
sbb
cli
sub
sbb
adc
cmp
loopne
sar
mov
lea
inc
xor
inc
pop
rcrb
adc
sub
inc
shlb
out
add
imul
jne
aaa
call
stos
loopne
sub
inc
aas
popa
add
js
sub
inc
xchg
dec
mov
ret
push
call
mov
dec
mov
sub
pop
test
dec
dec
nop
in
add
test
mov
push
rcll
push
jle
movsb
sti
jmp
aas
dec
jmp
xor
cmp
aas
enter
in
mov
push
mov
xor
mov
ss
mov
sbb
sbb
xchg
adc
pop
inc
pop
or
xor
ret
ror
ss
cli
xor
stos
insb
jecxz
xor
xor
jbe
inc
push
xor
fistpl
or
xorb
mov
ss
xchg
xor
mov
fcmovne
xor
xor
ret
mov
mov
leave
inc
adc
jo
sbb
lds
insl
or
xor
sub
js
xor
mov
xor
sub
mov
mov
and
xor
inc
lret
adc
rorb
jmp
cli
xchg
addr16
popa
pusha
rclb
dec
mov
loopne
addr16
pusha
xchg
cli
or
or
xor
out
call
mov
call
xorl
jmp
jmp
mov
dec
aam
inc
out
iret
cmpsb
sti
adc
cmp
call
je
sti
js
call
int3
pop
cmpsl
outsl
sub
xchg
mov
movsb
dec
pop
leave
adc
test
das
jle
decl
inc
ljmp
push
neg
pop
psubsb
add
call
repz
pop
jmp
jle
sbb
cld
xchg
pushl
cmp
jmp
ljmp
sbb
xchg
ret
mov
cmpsl
mov
xchg
addr16
jne
out
xor
loopne
pop
mov
fmull
push
sub
aam
fistl
dec
jmp
sub
inc
jmp
mov
sbb
add
sbb
in
and
sbb
out
sbbb
sbb
push
mov
insb
add
cmp
xor
mov
mov
push
ret
pushf
add
sarb
call
and
mov
dec
incb
sti
cmp
es
cmpsb
add
jbe
int3
add
aad
shrb
repz
es
sti
pop
pop
shll
push
nop
cmpsb
fnstenv
cmpsb
mov
push
es
add
bound
movb
add
cmpsl
mov
jo
es
push
or
in
ficomps
jo
sbb
xchg
or
cs
pop
xchg
js
sbb
js
lods
inc
dec
add
inc
lea
imull
push
rorl
and
nop
dec
sbb
jp
inc
dec
cmp
pop
adc
insl
arpl
and
lea
xchg
pop
aaa
and
add
stos
push
xor
or
mov
adc
nop
rolb
and
push
push
xchg
and
push
xchg
pop
shlb
loope
adc
push
in
orb
push
push
les
pop
add
das
xchg
adc
sbb
push
xchg
adc
adc
xchg
or
mov
pop
orb
inc
inc
jbe
xchg
pop
jb
fbstp
call
inc
or
inc
inc
sbb
xchg
inc
sbb
push
inc
dec
inc
mov
inc
cs
pusha
nop
push
in
nop
je
or
push
les
inc
add
inc
dec
repz
inc
xchg
xor
sub
repz
and
adc
add
addb
ds
jmp
inc
inc
inc
inc
inc
fwait
addb
adc
and
je
fistpl
pop
nop
add
and
dec
in
add
add
inc
push
insl
adc
or
repz
mov
into
repz
jge
or
inc
inc
cld
or
add
sub
mov
pop
les
call
or
cmpsl
pusha
mov
and
mov
loop
or
insb
and
cmpb
adc
dec
pushf
push
pop
fstl
loopne
jmp
cmp
je
mov
add
sub
fs
ret
lea
adc
add
pop
add
or
add
add
add
adc
pop
sub
out
jg
jo
cmp
je
xchg
add
in
fmulp
mov
inc
scas
in
push
push
push
gs
int
add
inc
or
and
or
lret
sub
or
add
or
or
sysenter
xchg
subl
or
mov
or
or
or
push
or
xor
push
cvtdq2ps
pop
xor
adc
pop
in
sbb
adc
cmp
in
add
adc
pop
and
and
push
adc
push
adc
adc
adc
jb
jb
adc
xchg
cmp
push
push
inc
mov
pop
and
aam
fisubs
sub
inc
mov
sbb
dec
sahf
xchg
fcompl
sbb
sbb
sbb
fwait
sbb
je
push
sbb
sub
xor
xor
sbb
pop
push
push
inc
negb
lods
incl
repnz
jne
add
add
sub
and
outsb
add
decl
movl
xchg
and
lods
pop
cld
popf
pop
add
cwtl
xchg
push
in
push
in
imul
adc
repnz
ret
leave
jnp
xlat
in
in
repz
leave
repz
mov
enter
in
call
call
adc
in
das
mov
jmp
inc
scas
cmp
adcl
adc
jno
push
or
in
mov
xchg
aad
in
cmp
and
out
out
add
out
or
mov
lcall
mov
icebp
cmp
das
and
pop
jnp
or
cmpl
in
cltd
push
hlt
imul
std
inc
scas
negb
cmp
sub
mov
sbb
sub
nop
mull
clc
clc
sbb
aas
stc
jns
scas
in
and
cli
inc
sahf
xchg
sub
sti
sti
sbb
cld
cld
je
cld
push
xchg
idivl
push
nop
shlb
mov
xor
mov
iret
fwait
sbb
xor
mov
inc
imull
sub
jb
push
dec
jp
lahf
rcrl
jg
sbb
pop
jmp
pusha
nop
xchg
adc
jecxz
enter
xor
push
ljmp
cmp
or
aam
or
fisubl
dec
out
out
scas
nop
mov
sti
and
bound
or
dec
jmp
jmp
das
test
scas
daa
in
cltd
or
add
push
and
cli
or
cli
out
out
out
subb
xchg
mov
inc
repnz
xor
aas
repz
xchg
sbb
add
stc
push
cmp
mov
mov
stos
dec
div
mov
xchg
and
xor
pushf
pusha
pop
repnz
stc
sbb
movsb
test
or
sub
cld
cmp
jmp
push
in
push
mov
filds
dec
mov
stos
xchg
cmpb
clc
mov
jmp
loop
subb
shll
loope
in
repnz
clc
and
inc
dec
add
or
stos
or
out
xchg
pop
leave
or
in
rorl
mov
push
jmp
nop
mov
pop
notl
sub
hlt
imul
pushf
mov
into
mulb
jns
mov
scas
negb
testb
repnz
inc
and
test
repz
notb
push
dec
push
or
mov
xchg
cmc
div
testb
jbe
jne
mov
sbb
cmp
jmp
cmp
movsl
cli
xchg
cmp
inc
repnz
cmc
aaa
inc
mov
cli
hlt
or
push
inc
lock
push
out
add
dec
sbb
shl
and
clc
sti
mov
loope
enter
loope
jp
bswap
and
pop
hlt
cmp
cmpsb
jb
popa
mov
hlt
in
add
xchg
in
repz
leave
or
in
rcll
push
dec
jmp
add
insb
repz
repz
andb
repz
int
in
mov
in
repnz
andb
repnz
movsl
jmp
das
xchg
cmp
adc
repnz
pop
repnz
repnz
cld
icebp
cmc
cmc
insb
and
inc
mov
xchg
push
push
test
push
cwtl
icebp
lcall
stc
xchg
adc
pop
mov
pop
pop
xor
movups
lods
jmp
rorl
xchg
pop
mov
test
jp
jmp
sbb
bnd
int
push
push
sub
ffreep
push
inc
jmp
sub
insb
loope
inc
cmp
mov
add
mov
push
mov
jmp
jge
xchg
push
mov
in
pop
ret
jne
sti
in
bound
xor
jmp
xchg
cmc
enter
add
ss
mov
nop
out
das
aad
addr16
push
inc
mov
dec
push
nop
push
jns
rcrl
test
dec
push
aaa
or
cmpsl
fnstcw
add
fldcw
jp
sub
push
jecxz
repz
repz
mov
dec
jae
insb
sbb
xor
push
aad
in
xchg
gs
dec
je
repz
or
mov
mov
inc
sarb
sbb
mov
add
pop
push
pop
stc
pop
and
lea
inc
cmp
and
ficompl
pop
movsb
cmc
sub
inc
sbb
notl
in
xchg
xchg
lods
jle
push
lds
arpl
push
orb
push
push
or
fcoms
add
ficoms
or
xchg
cmp
xchg
sub
jno
lea
xlat
pop
mov
insb
test
call
pusha
mov
jl
pop
call
mov
or
add
nop
add
sbb
in
jmp
and
mov
aaa
mov
push
and
inc
ds
call
test
jmp
push
sbb
insl
lret
adc
jmp
adc
xchg
movsb
ret
inc
or
push
mov
push
dec
push
movsl
cmp
adc
mov
push
sub
pop
xor
stos
adc
inc
mov
or
adc
cmp
psubsw
jle
cmp
out
dec
sbb
pusha
push
movsl
adcl
icebp
add
ret
shr
inc
add
mov
movsb
hlt
jb
and
dec
inc
ds
es
add
es
pop
jb
push
and
sub
inc
adc
rcrb
adcb
and
sbb
and
popa
push
and
adc
bound
decb
add
sub
outsb
cltd
sbb
inc
adc
and
adc
inc
test
jbe
call
mov
xor
adc
mov
push
or
inc
adc
sbb
adc
dec
and
jmp
je
addl
push
and
ds
stos
push
add
or
push
mov
pop
movsl
xchg
add
sarl
call
ret
cmp
or
movb
jg
nop
into
sub
stos
or
in
pop
xor
xlat
shrl
sti
iret
in
push
mov
in
adc
xor
and
or
nop
adc
rcll
ja
lea
ds
pop
fisubrs
inc
aas
movsb
sti
and
xchg
push
shr
dec
inc
leave
mov
cs
pop
repnz
pop
add
mov
jmp
sbb
sbb
loopne
add
adc
cli
mov
in
das
inc
mov
jl
xchg
mov
or
jno
mov
cltd
or
fstl
jmp
stc
mov
aam
or
test
jl
add
jg
pop
and
nop
cmpsb
mov
cs
inc
daa
pop
xor
sarb
daa
daa
daa
daa
sub
sbb
sbb
inc
sub
pop
ds
out
rorl
push
cs
xor
pop
mov
mov
cs
mov
inc
outsl
inc
sbb
nop
or
les
pop
push
sbb
rcll
and
and
add
rcr
mov
mov
sarl
pushf
pop
and
jo
roll
xor
push
inc
inc
inc
sbb
or
jmp
insb
pop
ret
imul
pop
add
ja
fs
pop
andb
or
jmp
ret
mov
pop
and
cmp
pop
andb
push
stc
aaa
dec
push
nop
out
loopne
add
mov
femms
inc
lcall
cmp
and
pop
int
dec
ljmp
add
push
bound
pop
cli
out
xor
dec
inc
mov
inc
push
enter
cwtl
test
lea
xor
fidivl
push
push
cmp
add
pop
leave
add
cmp
or
xchg
xchg
dec
cmpsb
in
pusha
adcl
arpl
dec
in
sub
nop
inc
in
add
and
test
or
xor
gs
and
aas
mov
nop
clc
mov
add
and
inc
inc
cmp
or
cmp
aam
dec
out
fistpl
sbb
shlb
dec
fucomi
push
push
or
or
rcll
fisttps
nop
jbe
sbb
hlt
jle
inc
sub
xor
jno
sar
in
inc
shrb
mov
xor
xchg
or
mov
scas
xor
out
add
pusha
jnp
jle
movb
jmp
mov
add
ljmp
loopne
and
push
lock
sti
jmp
mov
mov
fsubs
sbb
push
mov
mov
fldl
xchg
cmpl
xor
push
xor
loopne
movsb
or
mov
data16
data16
loope
cs
pop
mov
or
imulb
iret
dec
push
in
gs
sub
pusha
stc
cmp
roll
cmp
xchg
scas
aas
fnstenv
fs
xchg
je
sub
je
test
cmp
cltd
add
je
cltd
inc
dec
or
mov
inc
adc
cmp
cltd
sbb
adc
add
mov
cltd
lds
test
dec
mov
mov
dec
and
cltd
test
jmp
movsl
and
imul
push
pop
and
push
xchg
out
adcb
ss
and
adcb
imul
or
mov
dec
sub
loop
adc
xchg
lods
mov
sub
mov
int3
xchg
rclb
sbb
push
inc
xchg
push
push
inc
inc
mov
test
addb
xor
dec
mov
adc
mov
rcl
or
jo
push
repz
cmp
cmpsl
cmp
loopne
addb
pop
dec
stos
mov
jl
pop
add
scas
test
sub
mov
imul
jle
je
sbb
mov
nop
mov
dec
or
sub
add
cmp
push
add
sbb
scas
mov
nop
mov
inc
pop
cs
rorb
inc
mov
xor
pop
mov
push
nop
test
mov
mov
jp
mov
mov
sbb
xor
inc
leave
loopne
stos
or
test
enter
mov
xor
shrb
add
cmp
imul
mov
nop
hlt
clc
rclb
ss
fstl
add
mov
mov
or
mov
push
adc
shrb
mov
mov
addb
xor
lcall
bound
aaa
push
mov
mov
sub
sbb
fdivrs
and
lods
push
add
addb
roll
or
das
or
dec
mov
je
cmp
add
mov
mov
xor
out
imul
mov
cmp
daa
mov
inc
nop
cmp
insb
xchg
add
mov
ds
call
mov
rolb
sbb
mov
enter
pusha
and
mov
mov
jo
add
mov
inc
or
push
add
xor
add
adc
ljmp
popa
cs
into
mov
dec
cmp
mov
inc
sbb
mov
das
sbb
add
inc
mov
and
outsb
sbb
inc
sbb
or
mov
pop
mov
inc
inc
cmpsl
rclb
cmpsl
mov
mov
orb
mov
mov
mov
mov
aad
inc
inc
testl
adc
jae
ss
jo
mov
add
int3
sbb
or
imul
arpl
fildll
or
addr16
or
bound
add
ss
pop
or
mov
fucom
pop
push
pop
and
call
dec
xor
or
shrl
push
xor
mov
or
inc
jo
lods
mov
xor
imul
push
aas
mov
cs
and
cld
add
sti
lret
cmpsl
rcrb
outsb
sbb
mov
inc
mov
or
shlb
pusha
push
loopne
jg
cmp
mov
cmp
popf
and
mov
push
ret
push
lcall
inc
inc
inc
xorl
jne
cmp
out
dec
push
orb
das
inc
push
addb
inc
inc
mov
nop
push
mov
mov
js
adcb
rorb
fimuls
rorb
jg
mov
mov
stos
addb
movsb
mov
xchg
xor
fs
inc
fs
pop
dec
dec
addr16
dec
pop
cmp
or
mov
xor
call
or
dec
push
popa
jo
cmp
mov
mov
adc
xchg
sub
mov
mov
pusha
ret
ds
jbe
cmpsl
jo
jge
aaa
imul
adc
les
das
push
sbb
adc
adc
or
das
mov
push
lds
mov
or
add
push
mov
cmp
dec
pop
ret
in
test
sub
dec
bt
mov
sbb
cmp
into
inc
cmp
jbe
lods
ret
ja
and
nop
jae
and
cli
or
shlb
test
test
adc
std
mov
shlb
cmp
jnp
gs
add
jl
dec
nop
popa
inc
mov
pop
and
push
in
pop
adc
push
mov
gs
imul
xchg
add
xlat
push
dec
push
jae,pt
mov
shlb
xchg
and
inc
sbb
push
lcall
mov
sbb
ret
mov
insb
or
or
pop
xchg
pop
xor
mov
xchg
xchg
xchg
pop
add
dec
and
xor
orb
fbstp
test
mov
sbb
push
mov
mov
je
sbb
push
mov
dec
jge
test
push
scas
pop
cmpsl
push
jae
mov
push
frstor
jb
test
push
xchg
jb
push
leave
ret
test
push
push
xchg
shlb
or
call
pop
mov
pop
jp
stos
inc
cmp
cvttps2pi
stc
movsl
dec
xchg
dec
mov
mov
jo
and
jg
sub
mov
dec
jo
test
test
push
and
leave
xchg
adc
push
popa
or
add
add
or
add
jmp
hlt
out
or
mov
dec
adc
cmpb
pop
loopne
xor
adc
xor
daa
lcall
stos
ljmp
dec
or
sub
or
sbb
call
cmp
jnp
jge
pop
jp
call
fimuls
call
pop
cmpsl
jnp
mov
inc
cmp
mov
mov
cwtl
and
shll
cmpl
testb
jnp
inc
xchg
ret
testb
jb
mov
cmp
push
jnp
and
andl
mov
dec
iret
rorb
jnp
sub
and
jo
cmpl
xchg
test
and
rcll
nop
into
out
cmpb
loopne
or
sarl
sbb
loopne
jmp
lcall
dec
imul
mov
fidivrs
cs
call
je
orl
lds
or
call
xor
inc
call
dec
and
adc
rcr
andb
and
adc
inc
adc
or
mov
adc
fstl
or
nop
adc
inc
call
enter
adc
lea
adc
nop
fs
jmp
inc
mov
fsubl
in
adcl
cmpsb
adc
aaa
and
adc
fstl
loop
mov
adc
jne
adc
daa
stos
imul
lea
dec
sub
cwtl
push
rcr
outsb
adc
add
dec
inc
push
xor
fwait
stc
dec
daa
inc
mov
cmp
je
mov
fs
call
dec
and
int
add
das
dec
leave
mov
adc
aad
sub
lds
mov
cmp
adcl
and
mov
pusha
addl
cmp
xchg
pop
push
imul
xor
jmp
sub
repz
lahf
sbb
in
clc
pop
and
test
push
arpl
loopne
cmp
mov
out
or
xor
push
xor
addl
ljmp
sub
pop
adc
outsb
xchg
cs
mov
nop
inc
and
arpl
cli
jmp
incl
sarb
add
jb
xor
push
inc
call
xchg
adc
lret
mov
inc
rcr
and
mov
cmp
outsb
dec
adc
add
movb
fsubrs
sbb
or
cmp
add
cmp
inc
jmp
lock
dec
jmp
xor
push
addb
shr
outsl
inc
jmp
inc
inc
inc
pop
je
pop
adc
mov
add
adc
xchg
cmp
or
orl
mov
add
push
mov
xorb
and
je
rcrl
pop
and
cmp
leave
or
push
mov
jbe
fcmovne
call
xor
inc
jmp
fidivs
add
adc
push
push
cli
enter
sbb
and
jp
dec
outsl
sbb
cmp
adc
pop
enter
push
mov
add
loop
pusha
popa
push
mov
dec
xorl
inc
mov
shlb
dec
das
or
lea
pusha
xchg
xlat
push
and
hlt
sbb
mov
shl
cmp
jne
addps
cmp
repz
mov
mov
add
push
push
adc
std
dec
mov
mov
jo
push
jne
es
push
stc
dec
adc
cmp
xor
imulb
adc
push
add
add
cld
sub
push
sar
inc
push
adc
xlat
push
dec
das
xor
xor
dec
fnstenv
sub
imul
dec
sub
pop
lret
cmc
inc
adc
sub
cmp
or
in
cmc
sbb
mov
je
pop
and
sbb
mov
sub
outsb
sbb
fwait
or
push
mov
inc
and
mov
popa
es
push
cmc
add
ja
popa
in
movb
shll
mov
and
ret
add
sahf
in
rclb
xchg
ja
mov
jb
push
xchg
rolb
lods
and
lds
out
dec
pop
add
lock
adc
adc
adc
loope
and
lret
rcrb
je
nop
adc
notl
add
xor
mov
les
movsl
dec
call
mov
or
loopne
cmp
scas
stc
fmulp
mov
mov
xchg
js
sbb
xchg
xchg
fisttpll
int
or
jb
pop
cs
call
call
stos
cmpsl
mov
or
fists
or
sbb
cltd
test
sbb
or
push
mov
push
dec
and
cmpsl
pop
mov
stos
loopne
dec
dec
sbb
or
and
les
daa
ja
push
sbb
mov
xchg
push
lea
nop
mov
in
shl
jge
sub
sbb
jl
xchg
jbe
pop
add
pop
add
push
ja
push
xchg
xor
inc
mov
mov
lods
xchg
or
sbb
imull
int3
push
int3
mov
xor
and
fs
lods
es
repz
pop
push
mov
mov
xor
push
in
jne
jae
aas
inc
xchg
dec
sbb
std
xchg
mov
jne
popa
inc
lahf
pop
and
inc
mov
sbb
pop
jmp
ja
sbb
cmp
mov
cli
pop
rclb
pop
repnz
ljmp
jne
js
add
popa
xor
xchg
mov
roll
leave
enter
jmp
cmovb
push
sbb
mov
mov
pop
or
cmp
orl
sti
and
ja
shlb
jns
jo
dec
repnz
in
dec
sbb
mov
or
cwtl
push
push
jb
mov
movsl
rol
push
jmp
and
mov
enter
sbb
and
test
push
pusha
nop
add
js
fsubp
sub
orb
xchg
and
shll
loop
push
shl
and
cmp
test
push
sbb
cs
or
push
fs
sbb
xor
push
test
rcl
xor
add
xchg
into
in
xor
mov
xor
clc
loopne
and
push
jmp
fidivs
hlt
add
mov
jno
rclb
inc
subb
or
xor
fs
sbb
xor
enter
mov
aas
push
add
jbe
adc
ss
mov
fs
sbb
mov
pushf
clc
or
inc
repnz
xor
xchg
out
mov
xchg
lea
shlb
sbb
sbb
ja
jecxz
xchg
mov
sbb
sbb
loope
pop
sbb
sbb
xchg
dec
push
and
nop
lret
aaa
sbb
jb
inc
loopne
mov
rorb
push
xchg
addr16
ret
sbb
std
inc
inc
inc
pushf
xor
dec
inc
inc
sbb
sub
dec
sbb
xor
lock
mov
in
fwait
pop
xchg
sbb
je
adc
inc
loopne
in
movsb
sbb
rcl
and
and
jne
cmp
xchg
push
sbb
orb
and
or
jg
shr
mov
test
or
jnp
add
jbe
sub
cmp
sarb
sarb
shrb
test
push
jge
insl
jb
jl
les
mov
in
mov
fcmovne
call
push
sbb
insl
pop
mov
aam
dec
call
sbbl
cmp
xor
scas
cmp
dec
push
or
xchg
mov
dec
sub
jne
cmp
or
hlt
call
rorl
in
ja
lds
and
call
out
mov
cs
adc
inc
mov
hlt
xchg
lock
jo
lds
call
pop
and
into
pop
call
out
ja
inc
subl
fcmovnb
cltd
js
popa
adc
cli
xlat
inc
rolb
je
push
mov
xor
outsl
mov
adc
adc
sti
mov
mov
test
adc
xchg
nop
or
jo
ds
mov
push
cs
add
pop
cmp
rolb
dec
enter
push
call
sbb
mov
dec
and
push
push
push
adc
adc
inc
sub
pop
or
ret
outsl
les
push
adc
sub
daa
push
jno
rcrb
xchg
mov
push
mov
sbbl
sub
sbb
sbb
xchg
sbb
or
sbb
test
pop
les
sbbb
sbbl
jl
ss
push
inc
sub
lods
sub
mov
push
jmp
push
or
push
jbe
test
ret
jno
pop
push
fcoms
sub
pop
mov
pavgb
dec
pop
adc
addr16
fcoms
mov
sub
add
test
mov
push
sbb
ja
mov
aam
sbb
lea
pop
call
pop
fdivs
push
test
adc
int3
inc
testb
push
sbb
sub
mov
sbb
inc
adc
adc
mov
adc
fldenv
fxch
loope
push
test
loopne
cltd
movsb
pop
stos
cmp
add
lea
je
cld
cs
fldcw
sbb
aad
inc
adc
xchg
fsubrs
loop
mov
dec
push
call
sub
add
adcb
rorl
rclb
sub
push
lcall
int
lods
adc
xor
xorl
xchg
ja
and
xor
inc
enter
inc
enter
mov
aaa
call
ret
lods
int
shlb
and
mov
inc
enter
sbb
ret
mov
int3
mov
int
sbb
daa
mov
push
test
lds
inc
jbe
fadds
sbb
xor
scas
mov
jbe
hlt
enter
fsts
call
cs
add
inc
adc
ret
mov
popa
movsb
xor
mov
sub
jnp
mov
mov
jmp
mov
movsb
rcr
and
or
test
add
lcall
sbb
sub
and
adc
pusha
adc
adc
mov
fs
xchg
and
add
adc
flds
and
adc
push
mov
or
adc
ffreep
mov
adc
rorb
fldpi
sbb
repnz
sbb
cmp
sub
rclb
add
add
push
popf
sbb
xchg
call
or
sub
dec
sub
cwtl
test
int3
lds
aam
mov
test
xor
push
pop
outsb
out
in
lea
fxch
lds
mov
into
add
ficomps
inc
sub
mov
and
sbb
push
flds
loopne
les
int
call
cmpsl
dec
lret
mov
fnop
ret
mov
xor
mov
inc
insb
inc
sbb
mov
aaa
call
pop
sbb
fnstsw
popa
dec
add
lds
mov
pop
xor
sarb
popa
call
ret
cmp
cmp
cmp
sub
dec
and
sbb
btc
cmp
adc
or
mov
aaa
sarb
aad
gs
xchg
adc
stos
adc
xchg
bndldx
mov
mov
pop
mov
cmp
or
call
mov
jae
push
loope
cwtl
mov
mov
icebp
cs
aas
fidivs
xchg
push
push
push
lcall
mov
pop
dec
jb
cs
cmp
lahf
sbb
pop
lsl
xor
adc
push
inc
push
pop
cmp
add
mov
xor
sti
mov
cmc
or
xchg
adc
mov
imul
push
adc
xor
jle
call
and
shlb
adc
bound
pop
inc
mov
or
shrb
cmp
das
les
fistpl
je
sub
aad
add
or
imul
andl
int3
adc
insb
mov
pop
push
add
mov
inc
inc
jnp
and
sbb
jnp
xor
sbbb
push
add
add
nop
mov
rolb
mov
jnp
sbb
loop
add
call
inc
or
pop
xor
sbb
mov
movups
loope
jnp
jl
in
rolb
int
sub
inc
mov
rcl
xor
dec
test
push
sub
mov
add
cwtl
inc
call
push
add
mov
imul
or
loop
pop
in
mov
mov
shl
xchg
jmp
dec
sbb
rorb
fs
adc
mov
in
adc
adc
xorl
push
mov
loopne
mov
daa
mov
mov
mov
cmp
push
fcoml
dec
and
push
aas
mov
lods
sbbb
and
lahf
push
push
and
dec
xchg
test
das
bound
sbbl
bound
call
mov
outsl
pop
adc
nop
mov
or
dec
sub
jnp
or
outsb
pusha
and
mov
jge
mov
int3
je
fnstenv
push
xor
repz
xchg
stos
sub
and
sub
mov
and
je
adc
mov
rcrb
test
mov
out
lret
xchg
fistpl
call
adc
aaa
unpcklps
das
shlb
in
cmc
fisttpll
ss
mov
adc
stc
repnz
or
add
call
lock
xchg
das
sbb
call
call
inc
pop
int
inc
call
cld
cmovs
mov
lods
maxps
movsl
pop
call
pusha
call
das
fs
insb
call
bnd
insl
je
gs
pop
jl
push
ja
and
sbb
push
imul
push
cs
mov
nop
sbb
cwtl
add
sub
in
movsb
movsl
jb
dec
in
stc
adc
or
xchg
enter
lret
rcrb
shlb
xchg
mov
cs
dec
jle
jae
push
in
call
xchg
in
inc
aam
lock
dec
in
xor
es
sbb
mov
add
add
add
leave
or
leave
gs
mov
loope
adc
jb
lret
sbb
sbb
pop
sub
lahf
xchg
lret
sub
pop
sub
jae
sub
pop
inc
push
test
gs
dec
cmp
ja
push
dec
xor
push
adc
xchg
push
sbb
pop
adc
in
add
jo
adcb
test
aam
data16
push
pop
insb
and
or
xchg
xchg
jo
xor
pop
pop
pushf
and
adc
pushf
mov
adc
js
xor
mov
inc
sbb
int
dec
xorb
test
mov
and
jae
rorb
daa
int
call
rorb
lods
jns
xor
dec
cli
mov
push
in
jae
mov
je
jo
mov
add
or
adcb
sub
sub
je
dec
ja
xchg
les
movsl
or
test
dec
inc
dec
inc
pop
pop
and
mov
add
aaa
or
pop
mov
inc
shll
push
sarb
inc
lea
mov
adc
or
mov
add
test
or
dec
or
and
inc
xor
or
and
fmuls
sub
add
sub
xor
sub
sbbb
adcb
inc
cld
movsb
fnsave
call
lret
stos
mov
jne
or
pop
sbb
jb
movntps
sbb
sub
push
shlb
call
sub
add
jp
std
mov
push
mov
mov
mov
sbb
jmp
sbb
cs
jo
jge
mov
or
or
test
shlb
cmp
inc
mov
inc
xor
sub
xor
shlb
mov
movsl
stos
xor
xor
pop
push
lret
jb
mov
dec
mov
jno
or
orb
push
and
cs
mov
mov
mov
add
or
jmp
pop
push
es
xor
fs
or
and
nop
mov
fs
ret
inc
push
orb
insl
xchg
popf
adc
cmpsl
inc
jne
inc
xchg
sbb
or
pop
outsb
adc
sub
fld1
inc
cmp
sbb
cmp
aam
mov
cmc
rcrb
xchg
mov
popf
adc
mov
jne
cmp
cli
inc
mov
mov
nop
scas
ljmp
push
daa
inc
cltd
jecxz
mov
mov
cmp
aaa
adc
and
inc
dec
dec
dec
sub
inc
dec
dec
dec
or
and
dec
dec
outsb
and
and
sub
and
cmp
movsb
je
cmp
jo
push
call
or
hlt
insl
rcrl
stos
dec
push
ret
add
test
dec
lahf
add
dec
or
xor
movsb
dec
mov
inc
dec
dec
testl
orb
rcrb
dec
dec
xor
movsb
je
xchg
dec
adc
test
daa
or
jo
dec
call
sbb
jns
popf
mov
jne
and
dec
cmp
and
mov
dec
xchg
js
cwtl
mov
js
shlb
mov
data16
or
sub
test
sbb
not
jbe
test
lcall
out
je
rcrb
mov
fwait
loopne
mov
mov
jns
call
out
fwait
xchg
adc
jmp
jmp
adc
fwait
lods
ja
and
imul
inc
fwait
and
adc
ss
je
rorb
push
fwait
adc
xchg
jmp
scas
cs
xchg
leave
sbb
call
je
jecxz
testb
sbb
dec
ret
ja
mov
nop
cmpsl
inc
or
adcl
ret
add
sub
jl
pop
cmpsl
inc
or
test
cmpsl
push
cwtl
jmp
adc
sub
pop
dec
xchg
jecxz
or
pusha
sub
jecxz
push
test
inc
jecxz
leave
push
dec
stos
cwtl
jecxz
cmp
lea
xchg
mov
add
jne
mov
loopne
add
mov
xor
pop
sbb
pop
call
sub
add
mov
repz
adc
pop
sbb
in
mov
mov
mov
ja
xchg
push
outsb
adc
addr16
mov
pop
add
lods
mov
enter
jnp
dec
push
mov
jne
mov
imul
cmp
sarb
mov
or
pushf
push
cmp
and
xchg
shlb
je
aam
xchg
add
dec
cmp
adc
nop
cmpsb
test
call
xchg
pop
or
jl
popa
pop
orl
pop
inc
cmp
inc
push
mov
xor
xchg
mov
aad
fs
xchg
imul
xor
cmpsb
and
dec
xchg
movsl
push
mov
test
addb
sbb
je
push
xor
imul
arpl
stos
test
push
or
xchg
stc
push
cld
jecxz
inc
data16
sbb
and
cmpb
bound
sub
shr
push
pop
rorb
das
dec
nop
sub
jp
das
mov
das
push
pop
nop
dec
test
gs
dec
imul
test
and
hlt
push
cmp
mov
mov
femms
cs
mov
call
lods
pop
add
sbb
fisttpll
mov
add
sub
push
add
inc
mov
lea
fcom
into
jle
inc
pop
add
jp
jmp
incb
xchg
inc
sub
fwait
add
adc
inc
adc
lea
movl
dec
xor
movsb
aaa
inc
das
xor
mov
adc
xchg
add
sbb
cmpsl
cmp
and
push
add
loopne
sub
test
data16
push
jnp
add
sahf
cmp
push
xor
mov
rcrb
dec
push
xor
pop
jmp
dec
lcall
adc
mov
and
and
pusha
popa
and
add
call
sbb
roll
sub
mov
fistl
xor
pop
cli
push
test
addr16
pop
in
and
fldcw
inc
adc
mov
in
pop
add
push
out
cmp
adc
jmp
cmc
sbb
sahf
jg
push
mov
or
sub
stos
nop
push
incb
movsb
xchg
cmpsl
sti
inc
xchg
add
pop
mov
and
push
enter
dec
xor
outsb
imul
mov
and
or
lods
mov
xor
mov
mov
xor
fwait
and
inc
push
push
push
enter
adc
adc
enter
push
sub
xor
push
push
lahf
and
mov
xchg
mov
lahf
pop
push
enter
xor
push
add
dec
out
addr16
xor
aam
dec
stos
sbb
sbb
mov
xor
xchg
inc
dec
sbb
jmp
hlt
or
enter
fistpl
add
mov
jmp
sub
jns
iret
sbb
arpl
push
xchg
adc
mov
or
pop
je
push
call
pop
pop
pop
popf
mov
jno
cs
popf
out
pop
mov
fstl
popf
inc
dec
ja
or
ficomps
js
adc
insb
movsl
hlt
mov
xchg
sbb
test
sub
mov
dec
mov
mov
sbb
dec
and
rcl
pop
cmc
mov
call
sub
jae
mov
jb
aam
call
movsb
mov
xchg
sub
push
xchg
sub
push
mov
repnz
xlat
fwait
push
xchg
int3
xor
jnp
fwait
lret
mov
dec
mov
xor
call
in
jge
adc
jb
and
ficoml
add
sub
push
cmp
lock
or
rcr
and
ret
lds
lcall
ljmp
test
push
cltd
add
out
ja
add
out
push
movsb
jmp
dec
out
adc
or
add
movsb
repz
mov
lret
mov
add
repz
xlat
add
out
ss
mov
nop
out
adc
jb
add
cltd
mov
fildl
mov
cmp
cltd
inc
pop
dec
xorb
xor
rorb
enter
adcl
mov
add
out
push
adc
test
roll
mov
mov
jb
inc
incb
mov
push
mov
ljmp
push
push
xor
orb
fisubl
sbb
repz
or
sbb
ret
cmp
repz
jbe
push
imul
or
sbb
sahf
out
push
mov
pushf
pop
push
lods
idivl
repz
mov
inc
jge
repz
push
nop
movsb
push
out
sahf
cmpsl
push
xchg
jl
push
inc
jns
negl
push
push
sahf
out
sbb
repnz
iret
repz
fmulp
mov
ja
jnp
ret
into
sbb
incb
add
sarl
es
loop
sbb
iret
aam
mov
out
ds
sbb
pushf
scas
xor
out
lret
or
and
cmp
repz
pop
data16
repz
test
jnp
repz
in
decb
ss
or
iret
inc
push
shr
xor
mov
push
sahf
mov
daa
rcr
negl
clc
adc
sub
cmp
aaa
iret
repz
push
push
cmp
adc
repz
push
jbe
int
ljmp
jle
cwtl
cmpsl
insl
xorb
das
out
iret
dec
test
dec
jecxz
repz
jns
jbe
push
scas
test
push
mov
imul
adc
adc
push
jg
pop
pop
mov
dec
sub
sub
and
or
dec
push
dec
ja
jb
lret
mov
les
pusha
outsl
push
push
ja
aaa
sub
pop
loop
cmp
es
mov
inc
js
pop
leave
aad
xor
xor
insb
xchg
or
mov
ss
xor
add
fisubs
test
add
push
push
inc
out
insb
adc
push
xor
sahf
ja
decl
push
dec
cmp
das
or
push
dec
or
das
jmp
bound
imul
mov
ret
clc
dec
adc
filds
mov
pop
mov
nop
scas
rcrl
adc
pcmpeqd
mov
imul
test
and
sub
subl
outsl
out
lods
xor
es
push
pop
clc
fsubp
cmp
mov
jg
mov
sbb
aas
ret
je
push
sbb
das
test
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
add
xor
or
pop
inc
fwait
adcb
and
dec
jns
sbb
mov
dec
and
push
dec
imul
insl
or
inc
jne
outsb
je
sbb
repz
inc
js
add
mov
jnp
inc
xor
sub
sub
sub
filds
sub
xor
xor
jge
xor
sti
mov
inc
xor
xor
ss
xor
cmp
fdivl
cmp
inc
xchg
xor
clc
inc
inc
xor
mov
or
lahf
add
pop
fs
psllw
jo
mov
data16
or
cs
sbb
cmp
push
xor
fdivrp
aaa
fmuls
inc
inc
push
and
inc
aaa
adc
xor
inc
inc
and
nopl
roll
jl
push
arpl
xor
jle
scas
sahf
inc
push
inc
push
dec
and
cmp
ss
add
fistpl
and
dec
dec
mov
outsl
mov
dec
loopne
and
mov
orl
push
push
fadds
imul
pop
adc
jae
inc
push
outsl
jle
push
add
xor
sub
out
into
repz
cmp
in
xchg
jne
sti
mov
lods
sahf
add
movd
and
hlt
mov
cmp
xor
adc
sub
and
jp
mov
xor
imul
movsb
mov
mov
je
push
push
mov
sbb
inc
cmp
cmp
jo
cmp
sbb
xchg
ret
add
sbb
lea
add
cs
sub
inc
or
dec
insb
insb
mov
xchg
and
popa
adc
data16
ret
or
inc
pop
cltd
dec
lods
and
xor
or
pop
mov
xor
insb
fcomps
push
sbb
pop
inc
pop
sbb
int3
pop
rcrl
jp
insl
enter
stos
inc
pop
ja
sbb
pusha
push
and
mov
jnp
inc
inc
inc
sub
imul
bound
js
daa
jmp
scas
je
dec
shll
push
imul
push
jo
es
popa
jmp
add
push
out
or
aaa
dec
movsb
push
mov
jae
outsl
pop
pushl
push
pop
arpl
inc
cs
push
push
push
add
dec
sub
pusha
ja
and
je
outsb
outsl
fld
or
sbb
popa
lea
sbbb
sbb
int3
add
pop
sub
add
add
and
inc
inc
aas
and
sub
pop
stos
inc
or
pushw
or
repnz
rorb
or
push
lahf
or
add
pusha
test
mov
ret
jle
and
xchg
pushf
add
sbb
push
xchg
adcb
bound
add
stos
mov
pop
xlat
ret
dec
insl
or
mov
inc
out
add
jns
or
orb
sarl
or
add
mov
xchg
add
jae
push
adc
xchg
adc
cmp
jae
push
sbb
sbb
sarl
sbb
call
jae
cwtl
push
das
push
pop
nop
cld
and
mov
mov
cli
js
jns
sahf
imul
stc
jp
push
cld
fsubs
mov
add
inc
testl
pop
aad
mov
and
test
arpl
xchg
les
aaa
push
adc
push
cmp
jbe
test
es
push
dec
sbb
xor
pop
test
adc
push
cld
or
repz
repz
int3
les
movsb
xor
xchg
call
mov
cmpb
repz
pop
mov
cmp
push
dec
dec
inc
inc
cmp
sahf
out
push
xor
sub
out
sahf
out
and
adc
out
sahf
adc
add
cld
or
repz
hlt
call
iret
repz
jo
stc
cmp
push
xor
lock
int3
sahf
out
sahf
mov
insb
inc
sub
cmp
out
adc
cld
push
fcom
repz
repz
ds
sub
aam
mov
sahf
jo
sbb
add
call
push
int3
push
mov
push
cwtl
iret
inc
or
mov
pop
sbb
addl
inc
mov
aaa
dec
push
cmp
inc
xor
loop
xor
sub
mov
inc
add
adc
inc
dec
cmp
xor
xor
sbb
dec
or
mov
sub
pop
adc
push
xor
push
xor
movsb
loopne
sahf
gs
shl
sub
cmpsb
mov
mov
jno
cli
out
dec
and
pop
lods
shlb
mov
mov
lds
push
jmp
push
sbb
xlat
mov
dec
mov
xchg
lret
ss
and
sbb
adc
les
xchg
outsl
mov
dec
add
pop
js
shrb
mov
pushf
andb
rolb
ret
jns
pop
rorl
adc
xor
adc
add
decl
movl
fwait
out
les
loope
mov
out
push
jg
pop
jne
pop
or
sub
stc
sbb
nop
cmc
pushl
push
je
imul
call
and
push
arpl
imul
pop
jb
pop
pop
int3
or
push
or
jo,pn
push
pop
adc
jnp
sbb
push
push
dec
push
jo
insb
das
inc
dec
mov
jl
add
pop
ja
lahf
add
add
mov
loopne
xchg
mov
ds
and
mov
add
enter
mov
sub
aas
in
dec
enter
push
cmp
dec
es
cmp
ret
test
sete
int3
addl
ljmp
add
lds
jecxz
rcr
fldt
in
cmp
ss
lcall
setl
lret
filds
mov
mov
or
push
popf
jo
push
jl
in
push
dec
push
sbb
aas
sbb
and
sbb
mov
and
aaa
mov
and
mov
jecxz
rorl
jg
enter
jb,pn
leave
pop
outsl
setno
rol
out
cmp
adc
jp
insb
adc
scas
fisttpll
fs
loopne
dec
mov
movsb
dec
adc
jnp
xor
loopne
daa
lock
enter
imul
leave
sbbb
mov
xor
popa
fs
xorb
movsb
addb
imul
fadds
xchg
sub
fmulp
les
lcall
scas
pop
push
and
gs
dec
dec
add
push
pop
test
dec
jae
outsl
ja
xor
jle
mov
xchg
push
sub
inc
xor
push
add
push
out
arpl
and
and
add
ja
push
inc
lods
push
mov
ljmp
mov
mov
inc
sbb
add
loopne
xor
mov
outsl
in
inc
add
insl
jo
dec
pop
fs
mov
push
imul
add
push
mov
cli
add
jae
push
inc
or
in
add
adc
jae
hlt
push
xchg
push
mov
adc
jb
inc
mov
aam
test
out
adc
cmp
and
and
sarl
repz
add
popa
orb
dec
add
int
dec
mov
test
dec
inc
push
mov
pop
das
xor
push
cmp
push
jo
jb
jns
imul
test
movsb
sbb
mov
adc
lods
clc
mov
add
sbb
dec
xchg
imul
sbb
dec
jnp
ja
inc
popa
jge
pop
pop
ja
and
pusha
inc
dec
enter
cmp
das
dec
cmp
push
inc
imul
inc
or
mov
mov
pop
add
cmp
push
inc
rorl
push
fbld
in
cmp
gs
cmp
add
subb
addr16
sbb
pop
lea
aaa
cs
scas
xchg
xchg
fs
and
leave
or
pop
movsb
inc
cmp
sub
fs
iret
mov
lahf
xor
nop
mov
mov
pushf
cltd
or
push
inc
cs
out
dec
push
adc
jle
xor
mov
and
push
call
pop
adc
sub
xor
ret
mov
sub
inc
dec
push
jnp
adc
jne
aas
das
faddl
or
shrb
sbb
push
push
mov
jbe
xor
orb
fiaddl
xorl
cmc
rorl
pop
add
sub
and
arpl
and
ja
mov
xor
inc
push
outsl
xchg
mov
mov
dec
xchg
pop
or
roll
push
andb
xor
cmp
mov
les
mov
push
sub
push
rolb
insl
imul
jb
mov
fs
mov
mov
int3
sub
shlb
xor
push
aaa
aaa
movsl
mov
dec
inc
dec
pop
or
aas
inc
cmc
popa
push
and
aaa
inc
xchg
mov
inc
inc
jmp
sbb
push
pop
pop
sub
add
inc
xchg
ds
iret
add
push
jo
add
add
or
pop
outsl
inc
pop
sub
cmp
cs
sub
add
jo
clc
dec
cmp
xor
jo
jno
cmp
das
pop
and
arpl
or
roll
in
loope
adc
or
ljmp
imul
add
iret
pop
mov
pop
pop
add
lret
xchg
into
mov
add
cmpsl
add
cmpsl
das
jnp
push
push
mov
imul
push
push
and
pop
push
fsub
jns
insb
cld
inc
mov
test
add
je
mov
adc
outsw
xor
add
add
cmc
xorb
mov
or
loope
pop
cmp
into
insb
sbb
cmp
dec
jle
or
lcall
popa
xor
sbb
xlat
fwait
jecxz
and
fbld
pop
fmulp
push
add
out
pop
test
std
fwait
xchg
and
imul
ja
cwtl
aam
push
sub
divl
push
jo
cmp
in
aam
add
or
lret
jae
fisttpl
or
mov
add
sub
jns
pop
push
insb
push
sbbb
mov
punpcklbw
ja
out
iret
icebp
pop
and
add
xor
mov
test
or
jns
sub
and
mov
push
shrb
inc
dec
add
mov
mov
inc
cmp
inc
xor
sti
adc
insb
dec
jns
lods
sub
fs
pusha
inc
stos
ljmp
inc
pop
hlt
fadd
jns
mov
and
add
mov
adc
daa
fs
and
inc
sub
fs
mov
out
or
sbb
out
sahf
or
add
clc
out
lock
repz
enter
iret
repz
sahf
out
fisubs
nop
jns
out
mov
iret
cmp
pop
push
inc
cmp
repz
xor
sbb
cld
test
jo
in
lock
iret
repz
push
fcom
enter
repz
test
mov
iret
repz
push
cmp
sub
repz
and
adc
add
sahf
out
lcall
mov
lods
mov
mov
jns
out
js
push
inc
sub
and
out
cmp
or
jmp
and
adc
dec
pusha
arpl
adc
add
push
add
mov
jmp
mov
push
mov
ja
lcall
pmuludq
outsb
jno
cs
lock
push
xchg
add
add
data16
sarb
and
xorps
dec
imull
add
pusha
mov
and
xchg
negb
inc
dec
pop
jg
add
dec
pop
mov
push
push
addl
mull
add
and
pushl
inc
inc
xchg
iret
jae
inc
mov
addl
sub
cmpb
dec
sahf
add
mov
push
add
out
jo
add
in
cmp
cs
sub
push
mov
mov
addb
cmpsl
jbe
cmp
insl
xor
aaa
sub
jbe,pn
and
or
sbb
lahf
xor
xor
ds
je
in
add
mov
xchg
or
xor
jae
pop
xor
gs
push
imul
imul
adc
js
and
fmull
or
pop
mov
adc
or
adc
jne
fadds
movups
jae
popaw
insb
into
pop
mov
popa
mov
mov
sti
ss
push
mov
push
sbb
ds
inc
add
inc
pop
pop
adc
fistps
and
aam
add
xor
xor
pushl
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
pushl
shlb
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pushl
test
enter
ljmp
ss
es
dec
aaa
push
mov
aaa
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
lea
clc
ffreep
sarb
aas
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
incl
inc
xor
push
xor
xor
xor
xor
decl
jae
xor
out
xor
xor
xor
xor
xor
xor
decl
push
fidivl
scas
xor
shlb
jecxz
call
mov
mov
ss
ss
ss
lods
pop
cld
pushl
push
aaa
sbb
jno
mov
aaa
loopne
add
or
ljmp
xchg
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
ud0
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
push
adc
cmp
insb
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
lcall
dec
incb
jo,pt
test
mov
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
jmp
andl
xor
pushl
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
pop
xor
outsl
clc
pushl
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
lcall
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
bound
push
sub
ss
clc
loop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fcomip
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
mov
or
pop
push
or
cmp
aas
clc
lcall
arpl
push
xor
xor
xor
xor
xor
xor
xor
call
cmp
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
cli
pop
cld
xor
xor
xor
scas
clc
xor
cmp
jmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
mov
cmp
jp
cmp
cmp
std
cmp
cmp
sub
xchg
adc
sbb
push
das
cmp
ds
fidivrl
jmp
jg
movd
and
cmp
ss
ss
xchg
cmp
cmp
cmp
iret
cmp
mov
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
mov
cli
js
cmpb
aas
sarl
aas
in
out
out
jo
loop
call
movsb
xor
add
jmp
incl
jg
mov
scas
xor
xor
xor
loop
xor
xor
xor
push
xor
mov
xor
xor
scas
std
xor
cmpsb
push
xorb
ss
add
or
aaa
and
fnstsw
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
xchg
sbb
cmp
push
stos
cmp
cmp
call
fstpt
loopne
in
jmp
out
cmp
bnd
mov
cmp
cmp
cmp
adc
inc
cmp
push
cmp
call
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmc
cmp
cmp
cmp
sbb
cmp
dec
cmp
cld
cmp
jae
mov
cltd
cmp
jp
jg
cwtl
ds
jg
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
aas
or
push
xor
insl
aas
sbb
push
sahf
xchg
les
pop
pop
xor
sub
xor
xor
xor
xor
xor
decl
mov
xor
xor
xor
xor
xor
xor
filds
jl
cmpsl
xor
xor
scas
jno
xchg
xor
mov
scas
xor
cmpsb
pushl
xor
xor
xlat
xlat
pushl
xorb
aaa
fwait
sahf
cmpsb
mov
inc
cmp
bound
scas
cmp
pushf
mov
sub
cmp
cmp
mov
mov
data16
dec
cmp
cmp
cmp
lea
pop
nop
sbb
add
or
xor
cmp
bound
pushw
sar
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
xchg
inc
cmp
cmp
cmp
cmp
cmp
jle
mov
call
adc
sbb
ds
xor
xchg
aas
or
ljmp
xor
mov
ja
xor
xor
xor
xor
jl
fdivp
sbb
cltd
aaa
mov
ret
aaa
jmp
repnz
lcall
dec
or
cmp
pop
cmp
jge
mov
cmp
call
cmp
jbe
xchg
cmp
cmp
cmp
mov
and
cmp
cmp
fdivrs
push
aas
jne
mov
cmc
call
popf
or
mov
fwait
xor
xor
rclb
dec
or
repnz
aas
xor
hlt
or
pop
xor
fsub
adc
es
lcall
std
ss
ss
outsb
notb
ss
in
and
cmp
ljmp
cmp
mov
cvtpi2ps
sbb
cmp
pop
cmc
add
mov
cmp
jne
test
mov
ret
call
dec
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
cmp
cmp
cmp
cmp
pop
sarb
inc
cmp
incl
addl
and
push
cmpb
ds
ds
ds
ret
idivl
add
sbb
addr16
loope
pop
pop
add
add
pop
fcoml
xor
aad
out
cmp
or
xor
xor
call
xor
xor
xor
mov
xor
push
lcall
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
cmp
mov
cmp
fstpt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
lcall
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rclb
adc
jne
adc
xor
sub
jg
xor
xor
jg
xchg
xor
xor
xor
jne
inc
cld
xor
xor
ljmp
inc
rcrb
xor
xor
sub
sub
nop
cmp
lcall
test
enter
sarb
aam
in
ljmp
push
out
xor
aaa
test
das
and
cmp
inc
xor
xor
or
lcall
inc
clc
lcall
mov
mov
mov
xor
xor
mov
int3
xor
cmp
sub
sub
xor
decl
push
sarb
inc
cmp
cmp
cmp
or
pop
xor
add
js
jl
cmpb
cmp
inc
add
jl
cs
rcr
cmp
mov
cmp
cmp
mov
in
call
dec
cld
pop
lods
ds
cmp
pop
stos
sbb
and
add
cmp
sub
sub
xor
cmp
inc
cmp
pop
xchg
dec
cmp
pop
cmp
cmp
insb
ja
cmp
je
jl
cmpb
push
mov
nop
mov
cwtl
mov
sub
xor
ljmp
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
rolb
aas
fdivrs
loopne
clc
jbe
pop
clc
cmpsl
fists
xor
xchg
xor
cld
pushl
sbb
and
inc
xor
xor
cwtl
xor
xor
xor
xor
ret
cmpsb
cmp
sbb
fadds
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
jg
dec
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
clc
jmp
lock
ss
ss
add
add
or
or
adc
adc
mov
sbb
and
and
sub
sub
xor
cmp
cmp
inc
aaa
call
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
cmp
inc
clc
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
mov
loopne
aaa
test
mov
mov
mov
aaa
bound
enter
shlb
aam
fdivs
fcompl
in
pop
sub
inc
out
aaa
hlt
xor
aaa
hlt
add
or
mov
adc
sbb
cmp
into
ret
fdivrl
call
das
ret
cmp
pop
sahf
jl
cwtl
cmp
cmp
loopne
lcall
cmp
cmp
cmp
cmp
push
cmp
jne
jl
test
mov
mov
jmp
mov
mov
mov
cmp
and
mov
add
ljmp
pusha
cltd
mov
sti
popa
jmp
idivb
or
or
cld
sti
mov
mov
ljmp
mov
or
mov
pop
shr
xor
leave
sub
mov
lcall
roll
add
add
pusha
mov
mov
add
out
adc
fsubs
lods
inc
daa
out
sbb
or
loop
leave
or
addb
and
test
push
sub
lods
or
sub
outsb
out
das
sbb
sbb
or
xorb
cmp
rcrb
cmp
add
pop
mov
pusha
dec
out
xchg
jo
and
jb
lods
aas
shrl
inc
and
inc
lret
and
push
sub
mov
clc
inc
xchg
add
sub
les
xchg
lea
or
and
test
or
out
dec
or
lock
dec
fs
mov
push
push
lock
pop
in
push
mov
pop
sbb
jne
push
mov
push
lods
push
xor
mov
in
lret
fstpt
and
xchg
fisubl
xor
xchg
mov
jae
loopne
adc
cmp
je
xor
jb
xor
dec
ror
mov
ret
jge
push
fadds
mov
mov
sbb
pop
inc
sbb
xchg
and
push
movsb
mov
insl
movsl
push
add
adc
andl
and
and
mov
mov
sbb
dec
subl
pop
push
je
cmp
outsb
int3
test
lcall
inc
jp
add
mov
or
xor
bound
insb
idiv
idivb
or
jb
lea
call
pusha
or
adc
mov
cmp
pop
inc
lahf
xchg
fildl
add
sbb
jnp
push
lahf
mov
mov
outsb
push
push
mov
or
std
inc
rcll
lea
push
push
pop
jb
rorl
jl
insl
fsts
sbb
cmpsb
add
or
add
rolb
fcoml
mov
add
outsb
movsl
xor
add
mov
sub
push
mov
mov
pop
inc
lahf
fidivs
int3
cmp
andb
call
jmp
cmp
inc
sbb
nop
js
mov
nop
push
add
in
in
cmp
mov
mov
cltd
jo
xor
lcall
push
xchg
mov
cmpsb
cld
inc
jge
mov
and
push
inc
jmp
mov
push
fucomi
mov
sti
mov
inc
in
mov
rorl
mov
pop
and
xor
movsl
imul
loop
and
clc
add
adc
movsb
out
mov
ret
pop
add
and
fmuls
push
adc
test
jl
test
push
jnp
outsl
insb
inc
and
cld
sub
sar
or
jge
fnstsw
and
rorb
xchg
xor
aaa
daa
add
push
adc
or
cmp
push
push
aad
push
xchg
and
or
jmp
pop
mov
lea
out
fildl
popa
or
and
clc
inc
sbb
add
lret
clc
insb
rolb
das
add
pop
add
xor
leave
inc
or
leave
cmp
mov
mov
add
leave
into
mov
popf
jnp
push
inc
test
sbb
and
lock
sbb
loope
pop
filds
xlat
or
jge
out
lret
fucomp
inc
sub
cmp
adc
mov
push
dec
push
rorb
push
mov
push
jbe
clc
push
sbb
inc
mov
nop
mov
and
imul
xchg
sub
push
jno
loop
sbb
and
sub
sub
pop
pusha
cwtl
adc
pop
pop
hlt
sub
das
dec
push
fs
sbb
push
push
inc
or
push
jl
adc
mov
adc
push
lea
pop
call
or
add
push
outsb
fs
fisttps
push
mov
fwait
mov
or
or
mov
jl
mov
test
adc
mov
inc
or
in
daa
addb
push
ja
out
mov
inc
push
idiv
dec
nop
xchg
repz
daa
stc
jbe
mul
mov
pop
xor
push
repnz
push
jge
and
push
pop
mov
pop
or
jbe
push
add
jge
fnsave
xchg
mov
mov
shll
call
add
ret
pop
add
cmpb
add
add
mov
fnstsw
push
ja
and
sti
imul
and
add
movsl
adc
adc
push
dec
add
pop
cmpsb
or
roll
in
imull
add
imul
add
push
add
pop
push
lea
lea
cltd
adc
sub
in
pop
mov
lods
aad
jge
call
adc
je
sub
push
bound
sbb
mov
and
jbe
sbb
sbb
mov
cmpb
int3
mov
push
cmp
add
jmp
ror
sbb
mov
cmp
xor
out
loop
lods
cmp
outsb
mov
mov
cmp
cmp
jae
dec
testb
fildl
and
or
imul
cmp
roll
lret
in
pop
enter
lods
sbb
and
dec
outsb
call
sub
bnd
lea
lea
mov
adc
pmaxsw
or
push
arpl
fsubs
push
mov
push
jmp
lea
aam
lock
mov
sbb
pop
ret
inc
popf
in
cmp
ds
cmp
sub
dec
sbb
mov
test
lret
mov
lea
sub
mov
and
xchg
push
push
lret
mov
outsb
add
daa
mov
adc
sub
mov
daa
clc
push
les
daa
pop
or
pop
xchg
or
push
xchg
xor
sbb
addl
daa
notb
jnp
es
lock
out
scas
popa
or
outsb
addb
or
pop
movsb
xchg
adc
gs
sbb
sbb
xchg
nop
cmovl
sub
jmp
pop
or
cmp
andl
lods
mov
sub
jmp
psubsb
and
inc
sbb
lret
mov
sbb
or
nop
jne
and
mov
adcl
dec
mov
pop
ss
mov
pop
mov
dec
mov
or
lret
sub
adc
xchg
out
cmpsb
test
mov
nop
orb
cmpsl
popf
mov
push
sub
jmp
or
call
or
sahf
stos
test
add
and
pop
inc
or
loope
dec
dec
pop
ret
call
es
inc
pusha
pop
daa
fsub
arpl
mov
and
jge
add
push
pop
xor
mov
cmpsl
push
add
cmpb
xlat
inc
adc
jbe
inc
shrl
icebp
sub
inc
push
mov
aaa
inc
sbb
adc
sub
mov
ss
sbb
or
inc
adc
loop
lahf
sbb
adc
inc
addl
jbe
mov
or
or
xor
push
pop
pop
pop
jle
or
sbb
sbb
adc
dec
or
fbld
add
inc
add
xchg
cmpb
scas
mov
cmp
out
cmp
es
inc
negb
xor
add
call
adc
mov
andb
jo,pn
add
fs
dec
inc
into
gs
inc
mov
pop
inc
mov
insl
push
add
ret
cwtl
or
dec
ss
movsl
pop
pop
ss
jo
mov
fcoml
insb
lret
mov
xor
enter
mov
out
add
push
xchg
pop
andb
int
pop
mov
cmp
jns
repnz
nop
nop
push
adc
rolb
hlt
pop
orb
pop
mov
pop
dec
mov
xchg
sahf
out
fisubs
push
dec
inc
cmp
or
jns
pop
jns
ds
jmp
cs
out
pop
sti
or
cmp
int3
and
fldl
sub
xor
out
fldl
nop
xor
push
push
jl
jb
cs
pop
add
push
jo
push
cmp
rolb
fadds
fdivp
cmp
loopne
lock
add
push
rolb
mov
xor
inc
pop
dec
add
cmpsl
xlat
or
in
out
mov
jns
sbb
or
and
rolb
xor
add
sbb
push
jns
into
mov
nop
jns
sbb
hlt
addr16
push
sbb
shll
adc
push
xchg
push
mov
movsb
dec
ja
pop
xor
pusha
mov
sub
mov
hlt
push
out
dec
mov
test
pusha
stos
lds
xchg
adc
adcl
adc
sbb
sub
sub
sub
nop
or
push
xchg
sub
sub
dec
shll
sub
lcall
sbb
sub
inc
push
sub
sub
xor
sub
sub
xor
add
sub
sub
sub
xchg
imul
sub
sub
push
and
sub
jp
loop
sbb
push
and
xchg
sbb
mov
movsb
test
repz
or
pop
loopne
pop
out
adc
jo
sub
fs
js
ss
mov
push
push
pop
jmp
push
lret
andb
or
insb
push
sahf
sbb
mov
jle
addr16
mov
nop
sub
outsb
sub
psubsb
push
mov
and
inc
shrb
inc
cmpsl
or
push
movaps
and
rolb
mov
call
adc
mov
mov
es
inc
jo
ds
push
in
inc
iret
push
fwait
pop
shl
xchg
in
nop
adc
fnsave
ds
mov
iret
jns
lds
mov
adc
xchg
mov
xchg
test
push
inc
xor
mov
sub
inc
xor
inc
add
inc
loopne
inc
push
or
jae
inc
out
shrl
adcb
mov
call
movl
jae
mov
arpl
add
fsubrp
outsb
jmp
lea
rcr
mov
inc
enter
jns
mov
adc
or
leave
push
and
xor
jns
mov
inc
ret
cwtl
pop
cmp
js
xchg
mov
rol
xor
jns
mov
cmpsb
lcall
mov
xor
dec
pushf
data16
sbb
adc
cmpb
xchg
mov
sbb
sub
jns
sbb
daa
mov
xor
jns
pusha
sub
sbb
inc
jb
js
movl
mov
xchg
sub
inc
jns
ljmp
icebp
sbb
pop
dec
jns
scas
test
sub
pop
aam
dec
aam
test
xor
popf
shlb
popa
fbstp
mov
aad
movl
dec
outsb
cmpsl
mov
fs
mov
sbbb
call
les
sbbb
jb
mov
inc
cmp
adc
mov
add
mov
and
rol
fistpll
lock
sbb
pop
mov
xor
ljmp
add
push
pusha
push
ja
sbb
mov
sbb
mov
arpl
cmp
jbe
push
in
ja
pop
xchg
faddp
cwtl
dec
test
inc
mov
jl
xchg
mov
add
push
in
movl
adc
fnsave
fisttpl
test
mov
xchg
stos
xchg
nop
mov
test
and
mov
mov
xchg
test
and
mov
push
movl
mov
adc
test
rcll
movl
mov
sarb
dec
or
add
ret
or
dec
nop
dec
pushf
mov
mov
fstpl
rol
and
mov
je
cmp
fmul
sbb
mov
pop
mov
xor
iret
clc
mov
sub
nop
xchg
repnz
add
push
loope
mov
into
add
push
xor
test
inc
and
fnstenv
adc
mov
xorb
mov
pop
adc
dec
nop
push
sbb
adc
hlt
sahf
sbbl
or
nop
or
jl
and
xor
dec
mov
pop
push
add
dec
ret
ds
and
lds
je
idivl
shlb
mov
js
dec
nop
scas
repnz
and
pop
jno
sbb
xor
and
and
inc
inc
and
and
cmp
cmp
cmp
jl
je
mov
dec
mov
and
mov
dec
dec
nop
pop
lock
mov
ficoms
cmp
enter
lds
pop
jno
jmp
scas
call
cwtl
ret
mov
or
call
adc
movsb
repz
jo
inc
jns
fstl
aam
bt
jo
mov
lds
jb
test
aam
scas
sub
mov
jb
nop
aad
jno
pushf
push
aad
test
or
cmp
mov
imul
scas
or
test
push
ja
dec
jl
xor
pop
nop
arpl
fistpl
push
movsb
xor
push
out
outsb
je
aam
push
sbb
and
stos
inc
adc
and
cmp
aad
cld
xchg
push
repnz
xlat
les
add
cmp
push
sub
inc
or
pop
or
inc
fidivrs
ficoms
cmpsl
and
icebp
sub
fnsave
ret
sarb
xor
repz
in
sbb
and
jne
mov
imulb
sbbl
fstl
add
xorb
lret
call
mov
pop
or
jo
pop
enter
jo
pop
les
lock
mov
jns
jb
dec
lock
pop
add
and
and
lret
push
pop
adc
cmpsb
cmc
mov
fmull
xchg
cmpsl
dec
and
add
jnp
fisttpl
loop
dec
pop
mov
rolb
jnp
dec
xchg
pop
xor
pop
hlt
push
and
ds
loope
and
call
or
jnp
in
xchg
leave
sti
loopne
out
adc
xchg
xor
xchg
jp
sbb
fcoml
xchg
xchg
fildl
jb
stos
or
jns
xchg
xchg
cs
jmp
xchg
inc
andl
sub
arpl
mov
loopne
mov
adc
stc
adc
jmp
jno
stc
mov
stc
push
lahf
les
cmp
push
push
fmuls
mov
fcoml
icebp
push
pop
stc
aas
mov
fucom
stc
pop
inc
and
lea
xor
push
stc
stc
jge
xor
mov
in
das
sbb
dec
push
call
pop
or
mov
push
leave
inc
dec
adc
fstp
iret
das
sbb
psubb
pushf
xchg
frstor
mov
sbb
or
stc
mov
and
sub
fnsave
loop
fmull
es
lret
cwtl
gs
ret
mov
pop
jmp
jmp
jne
out
pop
cmp
jne
sbb
fidivs
mov
fcmovnu
call
mov
jne
cmp
and
mov
aaa
inc
popf
adc
pop
sbb
add
cld
add
pop
sbb
pop
adc
outsl
adc
xchg
push
inc
adc
call
xor
ds
mov
add
pop
jb
jecxz
mov
xor
add
cmc
mov
inc
bnd
mov
outsl
inc
sbb
ret
call
mov
xchg
and
sbb
inc
fdiv
je
andl
push
push
ret
ret
push
jmp
mov
add
mov
lods
pusha
or
roll
xor
and
leave
and
sub
mov
push
rol
aad
sbbb
out
or
jl
jl
loope
sub
mov
adc
nop
adc
ljmp
pushf
rcrl
sbb
add
inc
enter
stc
push
dec
jecxz
mov
mov
cmp
lcall
sbb
les
xchg
mov
pop
hlt
shr
stos
pusha
or
xchg
adc
cmp
cmp
push
test
pop
cmp
jo
push
adc
cmp
dec
xchg
pop
adc
sbb
fcoms
xorb
xorl
adc
repz
cwtl
ja
lret
xchg
pushf
mov
prefetcht1
fdivl
daa
mov
xchg
or
xchg
and
adc
or
add
adc
inc
pop
add
pusha
rclb
add
pusha
rclb
repnz
aam
pop
into
jp
and
add
fldcw
aam
leave
xchg
inc
in
roll
fstps
rcrl
and
popf
add
shrb
shlb
shrb
dec
dec
adc
add
dec
dec
push
dec
adc
addb
bound
mov
cmp
lock
test
incl
cs
xchg
movsl
movsl
roll
push
adc
sub
mov
jmp
int3
outsb
filds
stc
sbb
and
adcb
pop
adc
icebp
add
inc
inc
mov
mov
and
aaa
push
pop
adc
sub
mov
dec
adc
lods
test
adc
imul
test
int3
mov
mov
inc
push
pop
adc
adc
sub
rcr
insl
fstpl
jl
xchg
xchg
mov
sub
icebp
push
aad
jbe
jne
dec
cmc
add
leave
sbb
adc
xlat
rcll
jb
fcoml
push
lret
or
cmpsl
inc
pop
adc
ss
sbbb
jmp
mov
aaa
and
aad
and
dec
in
dec
sbb
mov
fisubrl
or
dec
test
xchg
sbb
jb
sbb
mov
mov
mov
in
mov
xor
lods
mov
out
mov
lds
imul
les
out
fcmovnbe
dec
sbb
lds
xlat
xor
scas
movsb
loope
pop
gs
test
sbb
cmpsl
pusha
and
in
scas
lods
outsb
pop
inc
loopne
pop
loop
pop
cmp
xor
inc
fstpl
fmuls
call
sbbl
pop
xrelease
and
pop
aam
xchg
adc
loop
dec
frstor
push
xchg
dec
push
test
gs
pop
outsb
ret
jae
fisubrl
xchg
in
mov
sbbl
pop
push
push
mov
dec
xchg
sub
push
sub
or
pop
pop
cmp
ret
aaa
sub
push
dec
sbbl
test
adc
outsb
pop
sahf
insl
xor
mov
or
out
mov
pop
rorb
add
test
enter
sbb
mov
adc
jno
sbb
inc
pop
hlt
aam
sub
mov
aaa
test
inc
roll
enter
xchg
inc
dec
jecxz
loopne
mov
inc
dec
push
mov
movsl
adc
mov
js
pop
test
jle
pop
inc
cs
dec
or
iret
rclb
xchg
arpl
pop
add
xor
inc
fs
pop
int
adc
pop
cs
inc
ss
adc
sub
dec
leave
in
loopne
rolb
dec
xchg
leave
or
adc
stc
xlat
add
xchg
in
xchg
mov
in
in
push
bound
in
gs
mov
xor
sub
adc
or
lock
call
mov
mov
mov
mov
mov
nop
mov
mov
push
push
jb
mov
and
cmp
dec
mov
nop
sbbl
mov
enter
pop
mov
in
pop
cmp
mov
jb
xchg
sbb
mov
cmp
inc
push
mov
mov
cmpb
jb
sbbl
mov
enter
xor
in
sbb
inc
push
jb
mov
and
cmp
jecxz
fdivrs
in
mov
enter
mov
mov
cmpb
xchg
sbb
mov
cmp
inc
push
cmp
or
pop
sbb
or
mov
pushf
xor
or
shll
mov
or
sarl
and
scas
mov
cld
xchg
mov
pushf
xor
xchg
add
adc
xor
mov
or
daa
int
dec
or
and
das
mov
cmp
jb
sub
cmp
and
int
stc
mov
adc
pushf
xor
aad
cli
cmp
pop
sahf
ret
mov
xchg
lret
adcl
inc
lock
add
or
into
aad
push
dec
dec
rol
in
add
push
and
add
sbb
or
dec
inc
sahf
cmp
stc
sub
dec
dec
leave
and
mov
push
lret
dec
inc
push
mov
sbb
mov
mov
mov
hlt
imul
mov
dec
test
xor
sbb
scas
aas
push
or
inc
sub
mov
add
add
aam
adc
dec
and
mov
aam
mov
push
mov
sbb
cmp
push
out
test
lea
and
fs
lods
sub
inc
adc
or
test
add
out
out
adc
shlb
in
pusha
subl
adc
or
mov
mov
add
js
mov
out
add
adc
out
imul
mov
xchg
cmp
fbstp
adc
add
cmp
or
sarb
out
mov
sbb
cmpsb
sub
and
jle
jb
and
outsb
pop
movsl
mov
and
and
or
add
loope
inc
xchg
out
out
and
out
sbb
loop
js
jmp
xchg
enter
inc
movsl
xor
fldcw
iret
scas
lea
sub
mov
fdivl
sbb
inc
and
andb
shrl
out
nop
and
nop
movsl
cmp
out
mov
and
subb
sub
out
mov
pop
mov
fcmovbe
cmp
push
mov
out
xor
and
adc
push
push
out
in
jbe
jne
or
test
fwait
and
add
pop
out
pop
pop
mov
stos
push
and
add
sub
fists
add
call
add
out
enter
loopw
movsb
add
out
and
fsubs
call
ss
clc
push
call
in
adc
sbb
call
and
jnp
dec
out
and
and
out
mov
test
pop
out
bound
cmp
inc
fisttpll
je
jge
adc
push
subl
subl
xchg
adc
add
add
adc
inc
jae
inc
xchg
inc
pop
loop
inc
out
fdivl
and
xor
mov
sbb
mov
outsb
pop
lods
out
sub
subl
ret
ror
aam
xor
ss
out
das
and
icebp
int
mov
fwait
and
lret
xor
jp
ret
push
clc
or
cmpsb
add
ds
fwait
sub
inc
xchg
into
jnp
popa
nop
sahf
aaa
fiaddl
push
inc
in
push
xchg
outsl
sub
mov
jns
out
push
subl
add
or
sbb
in
scas
xor
push
jbe
jmp
std
inc
sbb
sub
out
inc
test
sahf
cmpsb
add
stos
jg
and
inc
mov
in
sbbb
xchg
jge
xor
adc
dec
adc
xor
dec
out
push
push
fstl
out
cmp
out
push
and
inc
out
add
or
lds
pusha
int3
pusha
jns
and
push
sbb
dec
inc
mov
mov
pop
mov
add
clc
aad
movsb
xchg
xchg
out
sahf
out
adc
sub
fs
shl
xor
out
inc
xchg
push
push
negl
out
in
out
adc
sbb
add
add
push
and
enter
call
cmp
fdivrl
and
mov
mov
xor
mov
push
add
fdivl
add
rcll
or
add
andb
lret
test
movsb
push
dec
and
jne
mov
adc
out
pop
mov
out
adc
mov
inc
pop
ret
push
adc
xor
mov
popl
out
xchg
repnz
rorb
les
adc
or
enter
or
out
pop
je
fs
xlat
add
loope
inc
sub
dec
adc
inc
xchg
pushf
push
mov
inc
mov
movl
or
nop
movsl
out
push
enter
and
xchg
out
push
and
out
and
push
inc
out
push
aaa
adc
mov
pop
lea
int
into
popa
jmp
add
pop
xchg
mov
pop
xorb
pop
and
xor
and
jmp
push
scas
push
mov
pop
scas
dec
or
pop
mov
pusha
mov
jnp
popf
xchg
jmp
orl
mov
sbbl
out
ss
in
sub
daa
lcall
jns
popa
mov
adc
mov
pop
lods
in
mov
xor
jg
cmp
mov
xor
mov
pop
add
mov
xchg
and
add
jle
lods
mov
and
dec
add
ja
push
jbe
mulb
call
in
js
mov
jbe
sbb
cmpsl
push
sahf
out
sahf
cs
pusha
jo
cmp
out
aam
add
adc
repz
repz
bound
mov
repz
xchg
cmpsb
mov
out
add
jns
out
jb
cwtl
cmpsb
mov
jl
out
fdiv
or
push
iret
repz
sub
dec
pop
data16
iret
repz
cwtl
scas
loopne
sahf
out
lock
stos
and
out
sahf
out
pusha
insb
jbe
push
fnstsw
xchg
movsb
mov
jns
ret
add
adc
jge
add
adc
push
int
xor
inc
and
aam
mov
repz
out
push
fcoms
sbb
aad
outsb
out
sahf
out
sbb
clc
mov
insl
sbb
mov
aam
fiaddl
add
sahf
daa
xor
push
mov
cmp
or
add
test
adc
adc
push
adc
xchg
sbb
sarl
sbb
xchg
js
sub
idivl
sbb
mov
lcall
and
and
out
lcall
cmp
sarl
cld
hlt
call
inc
lds
jecxz
mov
add
push
add
mov
sub
pop
add
int3
adc
repz
repz
xor
sbb
add
jns
out
xchg
hlt
call
jns
aam
enter
jns
out
mov
out
sahf
out
cwtl
xchg
nop
mov
test
sahf
out
jo
push
sahf
out
pop
push
push
dec
sahf
out
sahf
dec
inc
inc
cmp
xor
sahf
out
xor
sbb
repz
out
cld
nop
in
iret
repz
movsb
test
add
cmpsl
jne
popl
shlb
out
dec
inc
xor
repz
add
mov
int3
lods
test
xor
in
enter
jns
js
xor
ficomps
add
in
mov
mov
mov
sub
pop
pop
inc
adc
xlat
inc
test
test
add
push
aaa
xor
push
push
add
rcrb
jbe
inc
pop
xor
sub
fs
mov
ja
repnz
dec
ja
ss
js
lea
imull
add
pop
shl
mov
or
sbb
daa
add
in
sub
and
aas
mov
add
inc
xor
push
neg
fs
jo
mov
inc
add
outsl
mov
iret
test
fdivs
add
das
xor
cmp
adc
shlb
enter
arpl
pushf
add
rcrb
jl
jnp
sbb
push
ja
aas
inc
es
jb
sarb
repnz
fsubrs
inc
leave
and
pop
jge
xor
mov
add
cmp
pop
pop
inc
fists
adc
leave
inc
out
aas
in
inc
shl
dec
sbb
jg
or
mov
inc
dec
mov
aas
cmp
mov
jo
icebp
sub
ja
mov
push
dec
sar
push
fwait
movups
insl
div
js
cli
ud0
xchg
mov
aaa
jnp
das
les
xchg
nop
imul
fst
add
xchg
jne
mov
dec
insl
sbb
pop
iret
fwait
loopne
movsb
aaa
add
aam
inc
in
or
and
loopne
xchg
insl
iret
cmp
mov
insl
jo
jno
clts
jno
dec
jae
or
push
xchg
movsl
add
mov
cs
fs
jne
mov
push
adc
sub
pop
sub
daa
scas
cld
subb
jo
daa
add
stos
pop
mov
mov
outsl
jne
push
push
arpl
push
dec
mov
mov
and
loop
arpl
mov
sbb
rorl
xor
inc
mov
bound
test
cwtl
gs
push
add
and
or
or
sbb
sbb
xor
dec
shrb
es
lea
and
and
rcrl
sub
mov
mov
test
mov
or
sbb
fwait
mov
sbb
mov
sub
sbb
addr16
cmp
cmp
cmpsl
adc
adc
mov
mov
insb
sub
mov
and
or
insb
movsb
imul
push
mov
sbb
xchg
mov
sbb
cmp
and
xchg
js
add
xchg
mov
aaa
add
cmp
mov
or
aad
nop
test
sbb
inc
pop
sub
add
sbb
inc
mov
jb
push
pushf
repz
repz
xchg
nop
mov
je
pop
push
pop
dec
jns
out
inc
inc
cmp
xor
jns
out
sub
and
int
jns
sbb
adc
xchg
hlt
sahf
out
xchg
xchg
in
push
in
enter
jns
mov
test
or
out
jl
sahf
out
out
je
insb
push
fs
push
dec
out
jns
repnz
push
and
add
in
jns
out
xchg
push
enter
out
sahf
out
mov
iret
repz
cmpb
push
leave
repz
push
adc
repz
repz
loopne
mov
iret
test
insb
pop
inc
mov
mov
adc
in
push
sub
dec
lock
cmp
sahf
push
mov
adc
test
push
test
push
adc
or
add
gs
mov
mov
adc
call
test
leave
pop
jg
in
mov
mov
enter
jno
or
outsb
stos
lcall
xchg
cmpsl
mov
popa
popa
daa
aas
or
ret
dec
cs
pop
iret
and
add
mov
incl
and
and
verr
pop
xor
mov
mov
mov
dec
jnp
iret
xor
xor
sahf
xor
pusha
cld
scas
nop
rclb
xchg
xor
xor
aaa
fbstp
jg
mov
arpl
cmp
cmp
ret
sbb
push
cmp
xorb
popa
je
lahf
cmp
or
mov
cmp
sahf
fdivrs
jg
mov
bound
cmp
xchg
lahf
cmp
mov
cmp
and
pop
ds
ds
pop
and
aas
imul
aas
jecxz
call
arpl
xchg
mov
and
sub
xor
xor
push
xor
xor
out
mov
out
xor
repnz
xor
xor
clc
push
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
shll
jecxz
push
test
mov
xchg
xor
jg
xor
xor
and
sub
sub
idivb
mov
ljmp
mov
repnz
outsl
nop
icebp
pushl
xor
xor
xor
xor
xor
push
mov
mov
mov
xor
xor
xor
xor
xor
and
sub
insb
ss
xorl
jl
mov
out
push
and
cmp
insb
cmp
scas
xchg
leave
jbe
cmp
sbb
sbb
and
and
lock
xchg
xor
jp
test
mov
mov
repnz
cmp
pop
dec
cmp
sbb
mov
push
arpl
cmp
dec
cmp
cmp
pop
or
pop
cmp
inc
idivb
cmp
cmp
inc
xor
cmp
push
jbe
cmp
cmp
ret
push
add
dec
ds
ds
cmp
dec
mov
cmpsl
aas
mov
aas
repnz
shlb
inc
xor
xchg
outsb
js
mov
jle
xor
mov
xchg
jle
xor
repnz
xor
sbb
or
xor
dec
in
dec
xor
cmpsl
xchg
popf
xor
repz
mov
test
lret
push
add
ss
pop
aaa
mov
aaa
in
ret
incl
outsb
pop
xchg
sub
cmp
inc
sub
jg
js
jle
xchg
jl
ret
cmp
into
in
mov
pop
adc
ss
cmp
xor
clc
mov
dec
idivb
xchg
test
sbb
sti
cmp
icebp
aaa
ret
push
cmp
jne
jnp
andb
cmp
cmp
adc
adc
mov
loopne
in
jmp
lock
ljmp
and
rol
inc
jp
insb
cmp
fbld
cmp
cmp
cmp
cmp
sub
ds
ds
ds
loopne
xor
aas
adc
and
dec
aas
push
aas
ss
push
inc
or
xor
popf
xor
jno
test
ret
js
out
xor
inc
daa
loop
incb
fistpll
mov
xor
xor
xor
shrl
sub
xor
mov
lcall
xor
cli
xor
cmp
adc
xor
dec
aaa
jnp
sbb
inc
xchg
mov
clc
aaa
add
or
cmp
inc
xor
pop
adcb
bound
prefetchwt1
sub
xor
push
mov
mov
clc
or
imul
scas
call
pop
cmp
ja
or
cmp
cmp
imul
scas
push
addr16
sbb
cmpb
cltd
cmp
cmp
cmp
ret
sbbb
sub
cmp
mov
inc
outsl
or
js
lock
test
xor
xor
adc
xor
sub
cmpsb
xor
xor
add
xor
sbb
xor
jns
mov
out
push
adc
sbb
das
scas
test
pushl
push
mov
mov
aaa
pop
dec
pop
cmp
adc
fnsave
push
mov
lret
mov
cmp
cmp
mov
mov
imul
cmp
cmpsb
cmp
cmp
cmp
test
mov
jmp
lahf
cmp
aas
iret
aas
loope
ljmp
ljmp
xor
xor
pop
sub
test
xchg
mov
fbstp
icebp
fsubs
mov
mov
sub
pop
mov
xor
ss
aaa
gs
ljmp
xchg
fcmovbe
cmp
cmp
cmp
cmp
cmp
das
rorb
jo
test
fsubp
xor
xor
ja
clc
clc
xor
ss
jle
cmp
fiaddl
cmp
cmp
inc
cmp
push
inc
data16
pop
pusha
dec
ljmp
mov
daa
dec
pusha
or
or
adc
and
loope
popa
mov
xor
je
jl
cmpb
fwait
mov
nop
sbb
popf
popa
cmpsl
test
pop
xchg
or
jl
jo
call
movsb
pop
pop
jne
jle
lret
aam
xor
hlt
mov
add
stc
int3
fs
cmp
stos
pusha
inc
movb
scas
push
lret
mov
mov
nop
into
test
mov
xor
fs
mov
icebp
aad
les
xor
out
or
ljmp
xor
sub
cld
xor
xor
adc
xor
push
pop
dec
cmp
inc
xor
xor
xor
xor
xor
insb
popf
xor
jl
cli
xchg
pop
nop
xor
movsb
xor
rcrl
fs
mov
mov
mov
shlb
xor
lock
lods
sbb
int
divb
je
xor
lcall
mov
push
cmp
xor
cmp
push
std
hlt
bound
loopne
loopne
xor
mov
mov
fsubr
roll
daa
cwtl
out
fdivrs
dec
stos
cld
stos
xor
xor
inc
xor
xor
push
clc
mov
fs
xor
xor
jnp
push
add
icebp
aaa
pop
rcll
xor
cwtl
ja
push
shlb
xor
sbb
enter
daa
hlt
pop
pop
aam
fmull
xor
xor
xor
xchg
jno
inc
dec
out
data16
in
outsb
sub
xor
jb
xor
push
push
push
stos
cld
cmp
inc
xchg
dec
xchg
push
cli
orl
pop
xor
mov
jo
js
jl
pop
add
test
xor
xor
xchg
rcrb
test
lods
and
xor
push
sbb
jo
test
xchg
xlat
mov
lods
and
and
aas
xchg
xor
jo
nop
dec
inc
pop
test
cli
and
call
push
xchg
add
inc
dec
inc
rolb
or
insb
jo
sahf
mov
add
or
ljmp
or
pop
push
or
or
or
or
or
adc
adc
mov
adc
add
or
pop
sbb
adc
ficompl
adc
adc
add
data16
or
pop
adc
inc
add
or
xchg
add
les
add
dec
xor
add
imul
aaa
and
add
push
adc
call
pop
and
xor
inc
mov
adc
xor
cmpb
mov
hlt
jne
mov
sub
inc
aaa
adc
inc
pop
sub
icebp
movsb
xor
shl
sub
adc
test
ret
inc
or
xor
lahf
xchg
xor
into
add
adc
mov
ja
adc
add
adc
pop
popa
jno
and
adc
mov
or
mov
lock
loope
icebp
mov
or
push
mov
xorb
scas
inc
addb
js
das
mov
or
or
add
lcall
inc
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
add
mov
movsl
jecxz
cli
pop
mov
pushl
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
call
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
mov
incl
or
xor
lcall
fucomi
mov
js
pop
mov
popl
movb
pushl
dec
adc
adc
mov
xor
lods
scas
xchg
test
aam
jmp
outsb
iret
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
imull
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
call
jp
push
out
or
cld
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
add
mov
out
pop
jb
mov
or
push
mov
incl
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
aas
add
add
stc
loope
mov
sar
andl
outsb
outsl
adc
icebp
testb
mov
jg
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
das
ljmp
dec
subl
jb
adc
push
lock
ljmp
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmpl
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
jp
fisttpll
dec
fisttpll
out
aas
std
cli
push
push
mov
jg
cmp
sub
inc
scas
inc
mov
jg
ljmp
je
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
sub
cmp
cmp
js
jmp
clc
pop
hlt
lret
movsb
add
ljmp
rorb
gs
std
xorb
jg
pop
loopne
call
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
cmp
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
jmp
pop
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
call
push
mov
adc
and
sbb
xchg
jo
and
out
test
ljmp
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
jmp
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
cs
mov
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
decl
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
incl
imul
add
mov
cmp
xchg
mov
cwtl
sbb
jg
xchg
ftst
jbe
xchg
and
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
clc
repnz
cmp
fmull
enter
jecxz
scas
inc
stc
sub
in
pop
mov
sub
mov
dec
incb
fidivl
std
loop
aas
mov
or
cld
inc
or
mov
cmpsb
push
pop
jg
add
jg
mov
pop
mov
test
mov
mov
iret
push
mov
push
push
sbb
stos
icebp
pop
incb
jno
mov
jg
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
clc
xorl
paddsw
push
or
add
mov
aas
fsubrl
lock
or
sbbb
mov
add
push
sbb
or
jne
push
and
mov
adc
inc
aas
loope
pop
in
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
fbld
data16
pop
nop
mov
inc
sti
arpl
daa
lock
jg
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
fsubr
fistps
lds
fidivrl
jg
stos
pop
or
jnp
jg
mov
sub
jge
xor
lahf
les
sbb
sbb
clc
incl
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
sub
incb
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
cld
jg
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
aad
loop
lahf
mov
or
out
lcall
outsl
ljmp
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
jg
sti
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
in
xor
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
clc
jmp
and
xchg
fidivrs
clc
clc
fistps
insb
test
aas
repz
sbb
lock
in
jmp
ret
out
sbb
aaa
clc
push
std
mov
je
icebp
or
mov
lcall
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
outsl
pop
bound
dec
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
mov
xchg
imul
pop
in
cmp
cld
int
mov
fidivs
clc
adc
jmp
pop
inc
clc
jg
dec
mov
xlat
inc
incl
out
clc
aas
aas
mov
jg
mov
sub
addr16
in
idivb
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
icebp
scas
cli
inc
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
sbb
scas
or
loope
jae
jmp
adc
je
jge
fbstp
out
incl
jg
stc
add
out
icebp
mov
loope
mov
cmpsl
jb
das
xchg
popf
sti
mov
fbstp
enter
push
pop
aam
jge
out
cmp
or
test
call
xor
decb
adc
outsl
decb
dec
adc
call
movsb
out
cltd
add
sbb
mov
cmp
int
add
push
pop
aaa
std
sbb
inc
sbb
mov
mov
aas
icebp
ret
rol
enter
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
add
and
dec
add
sub
fidivl
xlat
rcrl
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
cmp
mov
adc
jo
sarl
pop
rclb
cld
jno
ret
fs
add
inc
sbb
call
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
shlb
xchg
imul
add
scas
mov
std
mov
daa
jmp
faddl
push
adc
mov
int
popa
lds
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
pop
mov
add
fsts
andb
cmp
cs
pop
inc
add
or
insl
inc
mov
mov
iret
ljmp
cmc
cli
in
stos
or
adc
jns
insb
dec
int
inc
je
jmp
mov
clc
movsl
xchg
add
lock
jp
sbb
in
cwtl
hlt
lret
xchg
inc
test
je
sub
cmp
inc
lcall
xchg
mov
jg
dec
std
inc
lcall
jg
jecxz
inc
sti
pushl
out
jns
lea
sub
push
mov
sub
lock
cs
sub
mov
call
xor
insb
xor
je
in
and
subl
jne
xor
ffreep
pushl
cld
fistpl
sbb
mov
cmpsb
xor
shrb
push
insb
sub
mov
jmp
outsl
sub
mov
inc
test
sahf
lock
inc
cmpsl
mov
enter
lcall
hlt
inc
insl
out
ret
sbb
jnp
sbb
xchg
call
or
outsb
cmp
ljmp
mov
push
xchg
jne
sub
or
fistl
mov
incl
jg
mov
fistl
movsb
mov
pop
nop
jmp
jge
lret
mov
sbb
jcxz
call
loopne
and
cli
pop
enter
pusha
mov
pop
lret
inc
scas
mov
ffreep
push
mov
pushl
popl
push
fdivs
cltd
mov
and
dec
daa
push
or
stos
mov
jmp
je
or
dec
sub
lret
and
dec
les
pop
pop
mov
add
inc
int3
in
lret
fstps
cmp
sub
addl
cs
clc
add
loop
inc
daa
pop
clc
jo
decl
or
pop
sti
rol
cmp
push
inc
cmp
mov
mov
jmp
shrl
mov
xchg
lea
inc
cs
test
inc
out
enter
xchg
cmp
inc
ds
ret
cld
pop
inc
std
sub
lock
in
std
or
cmpsb
push
and
jp
or
mov
cwtl
and
andb
mov
movsb
fwait
call
aas
shrl
ret
add
push
push
loopne
jo
lods
hlt
popa
fcoms
fsubl
loopne
push
call
stos
fistpll
int3
and
rcr
pop
lret
cmp
js
movsb
mov
clc
sti
fstl
dec
inc
shr
mov
push
mov
imul
outsl
test
inc
dec
test
scas
inc
fsubrs
loope
sub
jnp
sbb
sbb
adc
mov
pop
dec
nop
push
pop
xor
and
push
mul
jecxz
mov
stos
out
adc
movsb
mov
mov
xchg
cmp
icebp
pop
jo
mov
cs
sti
test
cmp
aad
push
in
divb
mov
lods
fcmovnbe
cltd
in
and
leave
pop
inc
mov
add
sub
jp
sbb
add
ret
sub
xchg
dec
ds
call
mov
lock
adc
movsl
enter
push
in
loope
addr16
cli
push
and
add
decl
push
push
sbb
sbb
fs
les
jno
xchg
xor
sbb
orl
mov
mov
out
dec
fsts
out
mull
es
pop
outsb
les
inc
decl
insb
mov
sti
pop
mov
int
addr16
jmp
roll
leave
imul
jmp
inc
in
call
stos
and
cmp
es
push
push
inc
push
imul
mov
dec
xlat
fistl
das
xchg
sub
xchg
out
xchg
ret
fsts
lods
shr
jae
call
movsl
ljmp
mov
iret
mov
aad
movsl
or
pop
jg
mov
popf
push
or
mov
aad
pop
out
clc
mov
test
lds
mov
aad
cwtl
pop
pop
and
inc
cmp
cwtl
inc
repnz
call
movsb
xor
shrb
js
std
adc
mov
push
cmpsb
mov
mov
sbb
std
jmp
add
nop
mov
fiadds
in
aas
mov
shr
push
lcall
int
inc
data16
sbb
loopne
and
push
rcl
dec
jno
lods
or
js
lds
inc
orb
loop
push
mov
out
and
scas
add
xchg
inc
addr16
incl
repz
cmpsl
in
mov
imul
shlb
adc
inc
fcomip
jmp
mov
inc
in
lock
imul
or
outsb
ljmp
xor
fisttpl
lods
cmp
nop
pop
mov
fisubs
adc
icebp
lock
cmp
jno
fwait
outsb
pop
inc
cwtl
or
xchg
cmp
xchg
sub
pushf
aaa
and
sar
fisubs
mov
mov
popf
pop
cmpsb
or
add
out
adc
add
adc
pop
arpl
lcall
les
lea
and
dec
dec
movsl
daa
adc
mov
mov
rcr
inc
push
stos
xor
pusha
adc
jp
mov
pop
mov
stc
les
sahf
add
sub
pop
test
dec
lcall
jmp
es
jle
sbb
push
push
xchg
add
xor
call
dec
lock
es
sbb
mov
jecxz
lods
push
in
sub
call
push
cmc
jge
pusha
arpl
jno
adc
cmpsl
cmp
jmp
xchg
call
std
lcall
ret
push
lret
adc
leave
dec
or
fwait
mov
dec
jg
call
dec
pop
dec
scas
mov
sub
mov
sub
or
lcall
hlt
sbbb
dec
push
add
dec
cmpsb
bound
cltd
stos
xor
in
pop
push
in
fists
xor
lods
fisubrl
dec
enter
push
insb
sbb
loop
or
addb
mov
scas
andl
int3
sbb
push
pop
adc
sahf
dec
jae
pop
dec
insb
call
and
sbb
xor
cmpsb
orl
jne
mov
add
decl
je
jb
daa
or
out
faddl
test
xchg
cli
out
decl
inc
xlat
pop
icebp
ja
repnz
dec
ret
js
mov
fdivrs
inc
pop
clc
ljmp
cmp
das
xchg
fcomp
cmp
sti
movl
das
or
rcll
mov
inc
cwtl
sub
mov
dec
loop
xchg
add
jmp
mov
xor
aas
nop
cmc
add
xor
jne
cmp
loop
fmull
stos
jmp
cmpsl
mov
pop
sbb
and
cld
rcr
jp
pop
adc
pop
cmc
movsb
popf
dec
push
push
mov
mov
jl
jl
dec
subb
cmc
and
add
and
xlat
sub
dec
push
sbbb
jecxz
fidivl
in
xchg
lret
scas
or
popf
xor
out
repnz
das
sub
int3
clc
movsb
popa
jge
jmp
cmpl
cmp
or
lock
push
jno
das
jle
gs
das
and
inc
xchg
jg
sti
adc
cmp
or
sbbl
rcr
sbb
lock
pushl
xchg
inc
jg
jae
mov
loope
push
clc
mov
mov
jg
decl
loopne
push
jge
push
dec
stos
xor
in
add
mov
mov
fcomip
dec
pop
in
mov
les
in
pop
mov
jnp
call
sbb
outsl
or
pop
je
add
jae
repnz
in
xor
cmp
jl
adc
mov
dec
stos
sub
add
add
andb
xor
mov
ss
lcall
lods
ds
sbb
orb
mov
aad
fcompl
les
jbe
xchg
or
lcall
pop
xchg
rolb
lods
or
fistpl
and
mov
lret
push
cmp
push
jbe
pop
out
push
shll
dec
jge
mov
test
pop
push
adc
nop
pop
mov
ja
dec
and
ljmp
out
cltd
movsb
int3
sub
dec
incb
in
mov
mov
cltd
repz
add
je
fnstsw
fwait
cmp
cmc
ret
or
mov
les
enter
ljmp
insl
aaa
inc
hlt
dec
jecxz
add
lahf
loope
and
mov
inc
adc
scas
addb
hlt
jecxz
dec
ffreep
cwtl
rcrb
mov
jns
std
mov
inc
decl
pop
loope
scas
add
pop
stos
stos
and
xor
out
xchg
jbe
enter
push
inc
loopne
pushl
int3
stos
cmc
mov
xor
adc
sbb
mov
inc
and
incl
cmc
out
fucomi
icebp
cmc
xchg
push
xor
ret
ds
mov
dec
or
clc
fwait
xor
lcall
movsb
aam
and
dec
mov
movsb
push
adc
iret
push
add
loope
mov
ja
in
fcomip
cltd
dec
movsb
sub
push
pop
cmpsb
icebp
dec
lcall
cmp
in
shll
jle
outsl
test
mov
and
xchg
adcb
xor
mov
mov
fbld
out
mov
cwtl
ss
xchg
stos
sub
popa
sbb
or
jp
test
and
pushl
xor
ss
pop
sbb
scas
rcl
add
add
shl
jp
xchg
filds
stos
push
xchg
xor
mov
push
es
push
aas
adc
mov
mov
lcall
das
das
jmp
fidivl
lods
xchg
test
fdiv
pusha
pop
cmp
lcall
push
fs
sbb
pop
aaa
mov
xor
mov
stc
movaps
pop
cmc
in
in
mulb
mov
mov
aaa
ret
outsb
hlt
std
cmp
pushl
cmp
xor
adc
mov
pop
stc
int
sub
lcall
ljmp
jl
js
push
mov
and
fcomip
call
in
aam
jnp
fldt
pop
es
test
cmpsl
inc
mov
repz
pop
cld
ljmp
mov
sbb
mov
test
push
dec
test
mov
stc
jecxz
repz
imul
mov
jmp
mov
mov
push
fnstsw
scas
cmp
xor
rorl
ret
into
and
sar
decl
xor
lods
mov
stos
xchg
xchg
mov
movsb
xchg
xor
mov
aad
insl
jle
rol
and
add
pop
enter
ss
bound
sub
sar
inc
pop
push
mov
push
xchg
and
call
stos
jmp
iret
push
or
push
add
add
pop
mov
je
js
jmp
jno
roll
push
loope
scas
ficoml
cwtl
cmpsb
out
mov
adc
int3
or
in
mov
incl
fmull
testb
add
gs
add
insb
loopne
enter
mov
mulb
loope
jns
pop
inc
insb
mov
stos
jmp
fimull
ds
inc
iret
xor
subb
icebp
cmc
lock
in
sub
iret
sbb
jbe
dec
fisubrl
xchg
mov
jmp
lcall
das
clc
stos
sbb
xchg
xor
mov
stos
xchg
push
push
movsl
adc
std
rclb
mov
sarl
lret
mov
sbb
arpl
aam
xchg
in
in
mov
cmp
jg
inc
mov
call
shll
jns
addb
dec
xchg
popa
flds
push
repz
push
mov
cmp
sub
decl
fidivrs
sub
sbb
sbb
ficomps
mov
pop
add
add
ljmp
inc
ljmp
xchg
mov
pop
inc
lock
ljmp
pop
ljmp
dec
cs
mov
testl
push
inc
and
call
popf
stc
pop
repnz
push
dec
in
aas
adc
ljmp
clc
ljmp
ss
push
jns
mov
andb
aas
loope
daa
sub
mov
mov
dec
mov
jmp
fwait
push
adc
and
scas
push
xor
inc
xchg
clc
cmpsl
rcll
mov
filds
call
sub
push
cmp
cwtl
jo
sbb
xor
mov
pushl
leave
cmp
push
mov
xchg
jne
mov
ret
je
cli
lcall
in
lret
mov
pusha
sbb
lods
mov
aad
jne
add
jp
or
fsubr
inc
mov
decl
fimull
sbb
sti
mov
fistpll
xlat
inc
inc
push
push
loopne
aaa
cld
jmp
setno
or
jge
sub
mov
icebp
pusha
cmp
aad
decl
lahf
test
in
repz
ret
iret
add
into
pop
int
daa
xchg
lcall
cmp
add
sub
shlb
imul
loop
or
incl
and
fistps
inc
add
rolb
jmp
push
repnz
std
enter
jb
sub
scas
loopne
pop
or
test
pop
dec
pop
mov
pushl
adc
and
add
adc
pop
shrl
mov
add
mov
les
mov
enter
cmp
je
sub
sti
adc
shlb
and
lahf
bound
sbb
out
lret
jge
test
mov
jecxz
cmc
cmpsb
pop
popf
add
jle
cltd
add
lods
jbe
lcall
dec
jne
fyl2x
sub
inc
push
sti
ja
subl
pop
pop
call
repnz
icebp
mov
pop
mov
adc
lods
fwait
lahf
adc
fldt
sarb
mov
sbb
stos
mov
adc
int3
popf
pop
ss
pop
fs
imul
sbb
push
sahf
inc
and
cld
pop
rolb
push
mov
mov
clc
dec
jle
lea
out
testl
arpl
cs
sbb
pushl
imul
inc
mov
sub
clc
or
enter
iret
lahf
sub
jmp
stos
stc
cmpl
shr
out
popf
sub
xchg
mov
nop
call
xchg
aad
std
or
dec
cmp
repz
dec
stos
pop
out
jbe
stos
push
out
outsb
mov
mov
jmp
dec
stos
jb
jo
gs
movl
xchg
jecxz
dec
mov
loop
adc
xor
sar
push
shlb
repnz
jno
mov
ljmp
cld
push
lahf
pop
imul
in
push
pop
loop
insb
dec
out
or
loop
out
push
insb
movsb
pop
jb
xchg
fstps
mov
mov
movsl
pop
dec
sbb
loopne
gs
mov
push
in
lahf
or
push
cmc
fcomip
incl
add
and
insb
xor
pop
pop
mov
stos
sbb
in
or
mov
repz
aaa
and
sbb
loope
mov
inc
jae
lcall
push
ljmp
mov
js
fsts
scas
jp
divl
fdivrl
imul
outsb
dec
dec
mov
pushf
incl
aad
jns
sbb
or
mov
and
leave
std
xchg
adc
call
popf
loopne
gs
loope
sbb
lcall
mov
stos
mov
pop
mov
test
mov
clc
scas
fincstp
xor
jmp
std
cmp
pop
or
call
popa
xchg
jbe
call
sbb
movsb
or
out
mov
xor
xlat
adc
cmc
movsb
lcall
sarb
pop
cmpsl
xchg
lret
lahf
loope
movsb
push
ja
mov
add
xor
mov
call
lret
rcrl
out
xor
cmp
adc
pop
mov
clc
shlb
mov
incl
repnz
cmp
pop
ss
adc
jecxz
xlat
ljmp
decb
push
int
call
scas
mov
pop
jmp
add
lods
mov
das
xchg
cli
mov
data16
pushf
fimull
lea
jle
test
push
sbb
add
jecxz
sbb
ds
decl
push
add
inc
inc
rorb
test
subb
hlt
iret
mov
adc
fsubs
jo
mov
xchg
adc
sub
pop
dec
mov
pusha
sti
repz
cmp
add
xchg
clc
jbe
jg
sub
pop
repnz
out
mov
jmp
adc
mov
adc
inc
jnp
stos
or
js
ss
push
call
jmp
cmp
pop
pop
or
fnstsw
movsb
sbb
scas
mov
push
std
es
adc
andb
pop
int
pushf
sub
lahf
clc
mov
inc
xchg
adcb
pushl
cmp
inc
pop
pop
jle
jo
test
out
in
dec
imul
xor
jmp
xlat
xor
push
and
jmp
add
lods
andl
mov
incl
add
or
mov
mov
shll
jg
mov
popa
in
shlb
ljmp
daa
imul
cmp
pop
jns
test
das
pop
mov
jae
lods
call
cld
call
xor
sub
mov
inc
mov
pop
fs
mov
repnz
ljmp
fdiv
push
jmp
sbb
sbb
mov
or
call
push
mov
shrb
ror
inc
push
and
movsl
inc
lods
jmp
mov
push
out
push
jb
push
int
pop
mov
jp
es
xchg
outsl
outsb
sub
into
das
and
mov
lret
shrl
lcall
add
movsb
add
xor
pop
xchg
test
add
and
repz
filds
mov
pop
lcall
xchg
lds
push
lahf
xchg
inc
sbb
ret
imul
xor
lods
jno
incl
and
dec
mov
sub
cmpl
pop
bound
ficoml
iret
mov
sahf
bound
xchg
mov
push
stos
dec
push
lahf
inc
and
sub
inc
mov
js
loope
leave
scas
cld
jo
shll
data16
insb
out
xchg
fisubs
incl
sub
jo
jnp
dec
sbb
or
sub
mov
jbe
fcoml
sti
mov
pusha
inc
scas
jo
outsb
orl
sar
jbe
ljmp
and
addr16
mov
enter
pop
push
cmp
dec
outsb
es
adc
push
test
je
mov
push
in
call
dec
lods
cmp
xchg
les
inc
nop
aam
add
arpl
adc
cld
test
lods
jecxz
mov
add
xlat
jnp
imul
outsb
int
fsubl
call
jmp
mov
dec
push
xchg
add
imul
shr
adc
push
scas
pushl
inc
fists
lret
in
gs
jecxz
xlat
inc
and
pop
fstps
pushf
incl
cltd
dec
xorl
lahf
mov
or
shr
sti
cld
pop
lods
je
popf
add
cld
jb
cmpsb
out
dec
jbe
push
sbb
or
push
lret
call
sbb
in
cwtl
jnp
sbb
cmp
pop
cmp
xchg
sub
popa
int3
lret
jmp
inc
ja
fdivrl
fwait
xchg
sbb
dec
mov
fldl
push
and
hlt
lcall
xchg
aas
push
cmp
ja
stc
sbb
jnp
call
cmp
hlt
icebp
pop
and
cmp
mov
out
mov
push
cmp
fisubl
pop
push
loop
fdivr
decl
mov
lock
push
pop
add
dec
mov
pop
pop
and
mov
dec
inc
cmp
adc
scas
jp
xlat
dec
or
ficompl
fstl
inc
fs
ljmp
xor
leave
and
clc
jp
popa
cmp
rorl
xor
xchg
mov
mov
jecxz
data16
mov
push
sbbb
adc
pop
xchg
and
mov
cld
adc
std
out
push
jl
inc
in
mov
sbb
in
call
xchg
stos
cmc
neg
cwtl
jmp
arpl
faddl
nop
pushf
adc
xorb
jmp
call
out
push
push
lods
imul
inc
lods
mov
pop
fsubrs
out
pop
jg
jbe
pop
fimuls
sbb
test
mov
arpl
or
add
cwtl
xor
lock
das
sarb
into
xchg
jae
sbb
mov
sub
fistpll
bound
xchg
int
xchg
ljmp
mov
scas
incl
imul
mov
push
mov
inc
mov
and
lret
jbe
arpl
aam
mov
and
xchg
xchg
mov
xchg
jp
sbb
lret
jge
in
jecxz
iret
outsl
imul
js
outsb
stc
pushf
jns
and
loope
sub
fsubrl
jg
arpl
out
sbb
mov
aaa
sbb
repz
push
push
icebp
movsb
rcrl
gs
lds
sub
out
xchg
jp
pop
stc
decb
fcmovne
stos
adc
xchg
pop
dec
xchg
in
insl
lret
loope
cmp
ret
xor
and
pushl
inc
in
jbe
push
test
inc
loop
in
fldt
lods
inc
push
fadds
mov
adc
jmp
jb
or
push
data16
stos
inc
push
out
ret
xchg
sar
decl
mov
sbb
sub
cli
fnsave
dec
sub
mov
ljmp
in
loopne
and
pop
sub
icebp
rorl
mov
mov
xchg
and
sbb
les
mov
jmp
stos
repz
or
aaa
inc
aas
jg
sbb
divb
imul
jmp
mov
test
inc
add
mov
jmp
out
scas
pushl
js
insb
leave
ss
xchg
out
cld
addb
addl
jmp
and
loope
loop
rclb
cmp
xchg
push
popf
popa
or
jg
pop
pusha
and
popf
movsb
ficompl
lods
add
or
jnp
rcrb
xchg
mov
push
mov
pop
adc
fisttps
sub
push
sub
push
fnstenv
add
mov
push
ljmp
subb
or
and
call
rcrl
inc
pop
addr16
push
gs
incl
lcall
mov
sbb
and
imulb
push
movsl
mov
aam
xchg
mov
jp
xor
add
cmp
dec
loop
inc
pop
pop
pushl
and
jne
mov
xor
insb
mov
pop
insl
adc
insb
cmp
jecxz
lret
cli
pop
in
push
roll
ljmp
adc
out
call
ljmp
push
lock
cmpsb
mov
call
cld
fidivrs
jne
and
loope
sub
fistl
or
ja
incl
idivl
dec
std
in
jbe
inc
jns
and
sub
fldcw
jle
add
pop
pop
fadds
xor
cmp
out
inc
fisubs
int3
bound
xor
inc
add
sbb
pop
push
mov
fstpl
pop
xchg
pop
adc
jg
leave
pop
fcompl
aad
dec
mov
out
xchg
add
mov
cltd
jg
mov
test
sbb
call
aam
int3
icebp
pop
mov
inc
cmp
stos
lds
shr
lods
pushf
jae
fs
incb
incl
stos
ret
arpl
es
lret
ljmp
xchg
and
adc
lcall
ds
lahf
ja
sarb
jg
test
mov
lret
mov
mov
xchg
jo,pt
xor
cli
stos
mov
pop
push
pop
mov
aaa
xchg
cs
test
xchg
mov
jmp
mov
pop
out
push
daa
sbb
in
dec
and
mov
es
mov
ljmp
and
mov
je
adc
scas
sbb
mov
cli
push
cld
push
call
jg
add
cmpsb
jp
jne
mov
inc
pushl
adc
jo
jnp
dec
pop
lret
jecxz
push
jns
scas
inc
and
stos
call
jmp
ret
xor
sub
test
scas
lahf
cmpsl
mov
cltd
rolb
pusha
rcrb
hlt
jg
inc
cld
rcll
push
or
daa
mov
or
sub
dec
jp
repz
repz
loopne
lret
or
sarb
sub
sub
enter
mov
js
popl
in
fsubrl
inc
pop
or
les
inc
cld
rcrl
jmp
mov
aaa
sub
mov
shrl
cmp
pop
sarl
lcall
xchg
leave
adc
sub
negb
lcall
sub
mov
in
jmp
mov
xchg
xchg
sbb
rcrl
push
mov
incl
fwait
out
inc
xor
mov
ja
inc
sets
xlat
jl
push
xor
stos
inc
enter
repz
inc
xor
add
int3
arpl
and
cltd
icebp
mov
incl
add
inc
addr16
xchg
fs
pop
cmp
jmp
cs
mov
mov
sbb
jne
fadds
jecxz
dec
mov
jmp
xor
xor
dec
xchg
push
into
fcmove
rol
adc
decl
xor
nop
aaa
enter
decl
mov
xor
sbb
or
stos
gs
push
insl
test
push
xchg
lcall
decl
pop
pop
push
lahf
out
sbb
icebp
sub
push
dec
pushf
push
imul
std
add
xchg
fidivrl
aam
jmp
aam
ficompl
sub
pop
stos
add
mov
loope
sub
pushl
cmpsl
sub
sub
aad
inc
popf
test
inc
cltd
jne
adc
mov
lcall
or
dec
xchg
push
mov
ret
pushf
imul
stc
dec
push
outsl
jg
jp
test
sbb
int
pusha
inc
out
scas
fstps
jae
mov
inc
int
popf
and
jg
dec
mov
mov
jae
lcall
jmp
adc
pop
cmc
dec
inc
repnz
mov
xchg
jecxz
xchg
push
jmp
inc
aas
insb
pop
insb
add
jmp
ss
sbb
sbb
pop
fwait
mov
out
and
dec
xchg
sti
push
div
push
sub
in
lcall
cmc
push
inc
popa
test
in
leave
cmp
pop
and
lods
push
loop
stc
cmp
sti
lcall
ffree
push
jns
pop
adc
mov
xor
inc
cltd
push
icebp
ss
push
icebp
pop
cld
aaa
cs
lahf
mov
aaa
jecxz
cmc
cmp
movsl
pop
lcall
js
sub
jb
ret
xchg
fmul
fcomip
pushl
movsl
xchg
xor
pop
loopne
ss
test
xor
sbb
add
add
decl
arpl
lods
lret
push
xchg
cmp
and
adc
sub
test
decl
jle
adc
cmp
add
outsb
pop
mov
shll
aam
decl
cmp
sbb
push
jl
mov
sub
xor
mov
aas
ss
dec
jbe
out
cmp
xchg
cmp
pop
and
push
cmp
jo
ret
decl
xor
in
adc
adc
sub
mov
dec
int
jbe
lods
dec
and
and
jl
hlt
pushf
adc
jge
dec
push
and
sub
pop
add
add
xchg
ds
pop
iret
cmp
daa
loop
out
nop
inc
or
sub
mov
mov
fsubs
xorl
fstl
insb
lods
push
mov
push
nop
push
add
fcmovbe
add
sbb
sbb
push
in
decl
pop
cmpl
insl
scas
aaa
push
cmpsb
jle
sbb
cmp
loope
sub
incl
test
lret
mov
push
fwait
jl
in
js
dec
js
inc
add
mov
sbb
mov
icebp
jmp
sub
jp
insb
test
les
xor
lcall
sbb
lcall
dec
or
add
pop
cmpsb
arpl
pop
or
dec
into
int3
pop
imul
leave
hlt
stos
jno
sbbl
lcall
lret
pop
and
sbb
mov
popa
xchg
inc
addr16
iret
pushf
sub
call
pop
mov
loopne
clc
cmp
mov
push
test
data16
test
jg
push
cmc
xchg
mov
lahf
rclb
jmp
mov
sbb
out
jnp
pop
mov
pop
repnz
ljmp
push
cld
mov
mov
sbb
ss
lock
popa
sub
ficoms
lock
lods
xchg
in
mov
roll
sbbb
popa
sbb
or
push
sbb
decl
lock
mov
dec
sub
into
jbe
pushl
std
incl
xor
push
lret
hlt
out
out
cmp
shlb
xchg
xor
ret
adc
dec
insb
xor
mov
xchg
mov
pop
into
ret
add
sub
out
xor
movsb
mov
lock
jae
jno
hlt
cmp
sbb
das
test
and
mov
scas
dec
fisubrl
mov
das
jns
inc
pop
les
aas
mov
arpl
cmpsb
jp
aad
lods
imul
inc
push
in
adc
dec
lods
add
stos
clc
stos
pop
xor
cmpsl
pop
push
cmp
jle
add
mov
cmc
mov
jl
jmp
lret
mov
repnz
and
jns
ds
ljmp
fisubrl
pop
cmc
pop
cld
pushf
es
jg
popa
fdecstp
cmp
es
sub
decl
push
lcall
mov
int
rcrl
std
xchg
std
in
ljmp
lret
mov
lret
or
or
sahf
sbb
or
jmp
aaa
int3
xchg
mov
xchg
xor
shlb
scas
add
call
mov
outsb
and
xor
cmpsb
jmp
pop
lock
pop
sub
stc
dec
sub
cmp
mov
push
rcrb
jns
jb
aaa
xchg
sbb
or
inc
stos
xchg
loopne
dec
or
testl
sahf
sti
into
cmpsb
icebp
repnz
dec
jns
and
bound
mov
mov
notl
insb
sub
ljmp
xchg
inc
push
mov
cmp
xchg
lods
mov
mov
aas
add
lcall
outsb
cli
cmp
fwait
clc
stos
and
jns
stos
push
in
push
xlat
mov
dec
loopne
xor
enter
mov
xor
adc
inc
shll
inc
cwtl
ret
call
sub
mov
pop
and
adcb
bound
or
cwtl
jmp
mov
jnp
jge
pop
mov
sub
or
dec
add
in
ud0
incl
dec
cwtl
push
sub
jmp
adc
jnp
add
sub
call
stos
fmuls
lcall
js
decb
push
pop
xorl
inc
aam
and
add
add
decl
pop
adc
es
pop
cltd
orl
ss
fwait
jge
xchg
pop
jne
scas
cmp
ljmp
adc
dec
jb
dec
mov
jo
dec
mov
divb
inc
mov
dec
outsl
xchg
mov
add
push
in
rcr
add
sbb
pushl
fisubrs
dec
jae
aam
dec
cwtl
sbb
pop
pop
js
jns
sahf
stos
xor
imul
jmp
inc
jl
jecxz
pop
mov
add
jg
jnp
push
test
sub
jae
out
clc
lcall
sbb
ficomps
xor
or
dec
in
nop
xchg
sahf
adc
cmc
pushl
mov
ret
dec
add
aaa
pusha
push
pop
repnz
mov
jo
adc
mov
mov
mov
xchg
push
mov
xchg
inc
push
int
mov
add
ret
and
std
jo
pushf
test
cmp
das
repnz
mov
icebp
out
shrb
lods
add
mov
inc
out
dec
into
jg
dec
inc
fldcw
push
lret
stos
sti
pushf
adc
insl
subl
dec
push
je
xchg
inc
pop
xchg
jecxz
dec
fwait
push
jno
out
jle
xor
pop
or
lret
decl
orb
lods
cwtl
adc
mov
stc
gs
rorb
cmp
lock
incl
andl
sti
mov
mov
test
xchg
adcl
rclb
decl
call
lahf
sub
mov
out
xor
and
and
lods
repz
pushf
mov
pop
sti
scas
xlat
pop
pop
push
jle,pn
iret
loope
and
in
cli
fcomps
mov
lods
out
shll
mov
in
mov
mov
cmp
xor
call
fwait
and
cld
push
dec
mov
inc
mov
or
xlat
adcb
inc
enter
fcomp
hlt
incl
pushf
jge
adc
xchg
sub
fldenv
in
dec
getsec
sub
cmp
out
cmc
ss
mov
push
sbb
xor
mov
jmp
push
rclb
cmp
jmp
loopne
and
stc
and
cwtl
sahf
lods
xchg
add
push
das
pop
jl
mov
js
pop
seto
popa
dec
sarb
push
addr16
mov
push
popa
add
pop
scas
divb
adc
fsubp
mov
add
sbb
mov
dec
jno
adc
insb
aam
jl
push
clc
fisubs
sbb
pop
dec
jle
movsb
xor
mov
ljmp
mov
int
nop
adc
decl
inc
jmp
xchg
mov
push
icebp
mov
mov
es
dec
sbb
jp
jo
mov
nop
mov
loop
nop
adc
incl
or
ret
sub
mov
lods
adc
xor
add
stc
loop
ljmp
sahf
mov
hlt
jg
out
jne
mov
fwait
dec
xor
sub
mov
xchg
pop
mov
js
lcall
fisttpl
xchg
daa
mov
hlt
negl
lds
jno
iret
add
imul
lcall
loope
nop
xor
jno
lods
jg
lods
pop
jle
mov
ficoms
int3
lahf
popf
rcll
sar
dec
aam
pop
add
iret
adc
int3
adc
out
cli
pop
sub
mov
ljmp
pop
daa
bound
flds
ja
mov
pop
jmp
dec
xchg
das
ror
lock
jmp
decl
lock
cmpsl
add
dec
and
mov
mov
xor
and
ljmp
int
mov
mov
mov
cwtl
jne
xchg
icebp
pop
xchg
fbld
mov
jg
call
gs
sub
loop
mov
fbld
clc
xor
outsl
call
out
cmp
jae
xchg
xor
xchg
out
jp
xchg
out
inc
pop
push
pop
dec
in
inc
shll
push
jmp
inc
cmp
or
orb
repz
and
push
mov
mov
pushl
cmpsl
loop
out
xor
loopne
imul
cmp
call
pop
imul
cmpsl
fmuls
pop
sub
push
test
inc
lods
test
dec
and
xor
lods
inc
lock
or
out
dec
adc
push
pop
icebp
fcomp
xchg
jno
insl
sbb
jb
sub
call
mov
jle
je
call
fcomps
mov
mov
pop
out
cmp
loope
jmp
push
filds
cld
pushf
adc
movsl
fmul
sbb
mov
xlat
loope
and
loope
ss
mov
adc
rcr
sbb
sbb
repz
push
xchg
mov
adc
ret
and
mov
aas
clc
popa
bnd
jb
pushl
cld
sub
call
jae
lret
popa
sub
loopne
mov
test
xlat
cmpsl
cli
or
clc
hlt
leave
add
test
sub
cwtl
xor
ljmp
push
testl
pop
pop
ffreep
shrl
call
mov
dec
fbld
add
fdivs
sar
call
std
mov
je
push
lahf
jns
rclb
pop
lahf
mov
cs
decl
adc
insb
imul
jno
sbb
insb
mov
dec
popa
rol
lea
mov
push
xor
mov
insb
inc
mov
loope
add
icebp
out
sbb
bnd
lcall
decl
mov
mov
mov
dec
test
push
cwtl
popa
gs
incl
test
outsb
stos
push
mov
push
xchg
lcall
leave
in
sub
insb
std
jmp
das
push
test
mov
mov
fstpl
mov
hlt
sbb
jg
and
jge
jl
and
cmpsb
jp
stos
jle
inc
aam
cmp
cmp
xchg
xchg
cmp
cmpl
lcall
or
mov
leave
fmul
imul
jmp
sub
dec
mov
xchg
loopne
out
add
jge
jb
push
pushl
std
outsb
xchg
sti
lods
mov
sub
lea
test
mov
lret
mov
jg
call
sti
cmpsl
fistl
cld
mov
dec
mov
mov
sbb
lahf
scas
mov
jg
push
inc
jg
sarl
jg
mov
stos
ret
xchg
push
loope
adc
fildl
mov
repz
or
push
sarl
xor
push
icebp
inc
dec
out
jle
mov
push
and
jno
mov
lahf
leave
mov
into
push
stos
dec
and
jp
subl
push
jnp
jo
mov
call
mov
jg
movsb
test
aas
pop
es
and
incl
call
jae
movsl
add
data16
xchg
cmpsb
xchg
sbb
xor
shll
inc
outsb
or
rolb
dec
pop
or
jnp
js
and
lock
jg
jmp
insb
adc
in
adc
lock
pop
call
addr16
jmp
mov
jl
mov
pusha
jns
sbb
aad
pushf
incl
push
sbbl
mov
lods
and
inc
or
lahf
loope
pushl
jbe
ljmp
sub
lea
mov
bound
sub
push
std
pushl
inc
std
std
mov
push
faddl
cmpsb
mov
sub
add
push
push
inc
popf
loope
push
jnp
scas
pop
repz
aaa
fdivrs
push
fwait
sub
out
and
dec
or
add
adc
js
sbb
insb
and
sbb
movsl
push
push
inc
loope
jmp
fidivrs
xlat
push
dec
cmp
fidivs
decl
out
int3
xor
push
int
ss
fiaddl
dec
jg
lcall
xor
fldlg2
mov
or
sarl
fwait
imul
ss
std
stos
jbe
aaa
cli
ret
arpl
inc
jg
add
imul
and
mov
sub
xchg
add
sub
sbb
mov
movsl
xchg
fdivrp
ljmp
and
xchg
push
mov
rclb
pop
sar
pop
push
jb
mov
and
and
fadds
loopne
clc
mov
scas
xchg
mov
das
sarb
dec
dec
decl
push
imul
ds
mov
popa
in
cmp
jmp
movsb
push
jecxz
push
add
dec
popa
cmp
or
sti
pop
pop
lahf
push
cmp
pop
mov
in
out
adc
ret
dec
mov
dec
xor
pop
mov
hlt
or
test
inc
ds
dec
cmpsl
call
pushl
incl
rcrb
mov
dec
add
aam
mov
inc
aaa
ljmp
jg
test
mov
dec
jl
or
sbb
dec
fsubrs
imul
syscall
and
rolb
rcrl
xchg
mov
mov
mov
out
cmp
lcall
in
xlat
dec
and
xor
mov
jmp
ret
or
ljmp
mov
aas
rcrb
pop
dec
aaa
lock
pop
mov
call
in
insb
pop
lahf
inc
call
shlb
xorl
scas
dec
push
sub
xor
decl
add
or
enter
lds
jbe
fisttpl
inc
cld
cld
mov
add
pop
or
add
add
andb
add
repz
jne
pop
fsubl
cwtl
and
push
imulb
lcall
dec
sub
xlat
jp
popa
xor
arpl
je
cwtl
mov
pop
push
bound
incl
shl
test
inc
lcall
or
mov
scas
rcl
or
jmp
in
lcall
sbb
cvtpi2pd
popa
mov
call
and
cs
mov
xchg
les
loopne
andl
scas
cli
xor
or
jge
add
pushf
pop
sarl
pop
cmp
jg
addr16
fcmovne
sub
out
fidivrl
or
xor
loopne
xchg
pop
lcall
inc
xorl
ja
pop
mov
mov
inc
ret
jg
pusha
adc
cmp
or
add
jae
dec
inc
add
addl
je
mov
call
rorb
cmc
jge
insl
aad
fadds
scas
aaa
addr16
lcall
cmp
incl
cmp
push
aad
loop
sub
push
cmp
jg
sub
pop
imul
out
mov
lcall
and
lahf
add
ss
push
loopne
je
xor
adc
pusha
or
or
pop
dec
dec
xchg
adc
push
outsb
pusha
out
repnz
jp
pop
cwtl
testl
nop
pop
pop
fistps
mov
pushf
xchg
cmc
fldt
fisubs
adc
bound
jmp
cltd
addb
addl
or
ds
cltd
jae
sbb
and
aas
lcall
std
lcall
sbb
sub
shlb
cld
sahf
movsl
or
pop
cmp
fnsave
inc
scas
out
stos
pop
lret
mov
cwtl
fnsetpm(287
cmp
loopne
pop
je
and
mov
xchg
inc
pop
je
roll
jge
mov
decl
das
mov
in
test
aad
mov
je
into
sub
pushl
sbb
and
and
enter
pop
adcl
mov
dec
loopne
repz
gs
incl
mov
push
outsl
sbb
jl
add
mov
lret
sbb
and
lret
pushl
and
incl
jmp
mov
inc
je
sbb
rcll
enter
add
call
rcrb
int3
incb
add
dec
aam
notl
fmuls
and
je
mov
push
xchg
cwtl
and
mov
cmp
ds
int
scas
test
je
pop
leave
shl
cmp
add
xchg
scas
push
mov
pop
jg
sub
fs
out
aad
push
cmp
mov
fdivl
pop
call
pop
and
push
xor
mov
incl
js
mov
xchg
push
adc
add
dec
cwtl
clc
mov
jecxz
decl
jl
push
or
stos
cmpsb
ja
xorl
mov
scas
xlat
mov
pop
loopne
movsl
and
mov
jo
test
or
je
in
sbb
outsb
mov
es
push
cmp
clc
sbb
jg
lcall
jb
and
mov
in
push
gs
inc
rcl
idiv
sti
push
pop
ja
sbb
and
shl
in
gs
stos
sub
sbb
clc
call
mov
sub
fdivl
mov
push
sub
lret
ja
mov
addr16
js
push
adc
xchg
js
clc
dec
dec
cltd
xchg
add
mov
std
jno
clc
dec
jne
lods
mov
call
imul
ljmp
push
xchg
aam
adc
test
test
xchg
inc
pop
insb
mov
mov
in
in
inc
lods
sbb
inc
mov
push
addr16
int
adc
clc
pop
mov
push
adc
mov
mov
pop
cld
inc
sub
leave
push
nop
ret
insb
fs
and
push
mov
rcrb
cmp
loope
imul
mov
push
mov
cmpsb
cmp
mov
test
incl
out
fdivrl
mov
fs
call
loopne
nop
fldl
fs
int3
ret
sub
fsubs
arpl
incl
test
jmp
jl
mov
cmp
aam
in
les
mov
sti
xor
ror
adc
je
loope
mov
inc
push
push
push
inc
stos
fdivr
decl
xor
gs
adc
pushf
rorl
xor
mov
je
fcmove
clc
loope
sub
jge
mov
leave
xchg
out
adc
ret
ljmp
jmp
stc
jle
pop
mov
dec
dec
xchg
inc
stc
lods
adc
dec
call
mov
mov
sbb
call
lret
popa
add
stos
mov
adc
negl
aam
sbb
jmp
xchg
loope
sbb
dec
movsb
sbb
lret
pop
jge
jg
dec
jmp
lods
fstpl
jnp
sti
lods
cltd
cmp
add
add
mov
subb
stc
cmp
jne
out
pushl
sub
xchg
outsl
xchg
adc
aam
sbb
sub
test
outsb
cmp
idiv
push
pop
inc
adc
cli
test
in
loopne,pt
sti
sti
push
mov
pop
cmp
jae
es
cmp
fistps
jae
xor
xor
cmp
add
push
cltd
pushf
mov
clc
push
dec
out
dec
mov
test
mov
mov
mov
aaa
add
mov
sarl
adc
fdivs
insb
xchg
sbb
lcall
sub
mov
or
xor
mov
jg
popa
js
sarl
daa
jno
and
ja
mov
icebp
ljmp
jnp
sbbb
cmpsl
push
call
movsb
and
outsl
push
test
movl
sub
lcall
and
cli
fcomps
pusha
js
push
xchg
sub
xchg
or
outsb
ror
push
addb
adc
ljmp
daa
jbe
outsb
mov
imul
adc
ss
lds
mov
sbb
sbb
fistps
jne
adc
dec
and
mov
sub
insb
lret
jno
xor
ret
push
outsb
cli
decl
mov
inc
mov
pop
dec
scas
cmc
les
lcall
sbb
push
out
inc
ss
mov
arpl
mov
mov
popf
jle
mov
cli
sbb
add
cwtl
aaa
in
or
pop
loop
sub
xchg
pop
pop
jge
pop
jmp
jne
sbb
ljmp
loop
sbb
imul
cld
outsb
jp
clc
adc
pop
lods
add
cmc
out
cmp
in
dec
das
push
dec
orl
pop
mov
sbb
jnp
ljmp
pop
or
shl
push
lret
std
das
sub
or
call
ret
dec
pop
or
dec
or
mov
lret
pop
mov
sub
pop
lea
daa
lahf
das
loopne
jb
mov
mov
leave
dec
and
ds
xor
adc
sub
mov
sarb
xchg
fbld
clc
pushl
xor
xor
call
daa
xchg
hlt
or
call
inc
outsl
adcl
ss
stos
xchg
lds
mov
mov
aam
scas
push
ds
push
ljmp
pusha
lock
xchg
adc
rclb
mov
testl
fists
popl
in
repnz
inc
negb
push
and
jnp
xor
pop
or
test
mov
movsl
shlb
cltd
dec
sbb
jl
das
enter
sarb
xor
pushl
clc
out
stos
les
mov
mov
es
lods
xor
dec
stos
sub
cmc
mov
int3
dec
call
clc
ds
clc
das
jo
filds
cmp
divb
lcall
dec
mov
jmp
lods
mov
out
mov
cmp
jmp
sbb
js
cmp
fimull
sbb
call
jns
cmp
dec
lds
rclb
jg
mov
and
push
push
lock
push
jg
pop
mov
sub
xor
push
push
xchg
and
xor
add
jmp
out
dec
add
cmp
inc
popa
adc
in
cmp
lods
xchg
loop
cmp
mov
pop
xchg
dec
pusha
into
divb
out
jmp
cmpsl
jmp
jmp
jge
jae
mov
mov
mov
push
rorl
mov
mov
jg
loopne
push
lret
cmpsb
push
mov
leave
lods
js
inc
out
ljmp
lcall
stos
cmp
mov
inc
inc
mov
xor
pop
daa
dec
mov
jo
out
lahf
mov
stc
fbld
or
imul
mov
outsb
add
and
inc
mov
outsl
mov
push
pop
pop
enter
fdivr
mov
sub
popa
negl
lret
push
cs
frstor
and
jp
push
cmp
clc
call
sub
mov
out
sbb
jb
fldenv
test
jl
hlt
decl
incb
pop
addl
push
out
ljmp
sbb
jmp
fsubrs
sahf
adc
cmp
imul
jl
repz
pop
mov
jmp
call
loopne
mov
cmpsb
xlat
adc
mov
pusha
out
mov
pushl
dec
ds
ljmp
cmp
repnz
push
xchg
aad
xor
hlt
lea
inc
jmp
popa
dec
fdiv
lret
xchg
fisubrl
sub
cmp
fstps
xor
fs
inc
into
add
vmread
xchg
pop
ds
mov
lods
nop
xor
lods
mov
aaa
call
xor
fcmovnbe
das
xor
adc
ret
mov
fmulp
mov
mov
mov
adc
call
adc
fidivrl
cli
jmp
mov
repnz
mov
xchg
jmp
das
addr16
jnp
cmc
mov
decl
mov
mov
aad
stc
mov
push
sbb
loopne
decl
jo
adc
pop
push
test
push
cld
mulb
add
jle
mov
pop
mov
decl
dec
out
mov
xchg
in
mov
popf
mov
jne
mov
cmc
adc
ljmp
out
push
sarb
jecxz
mov
cltd
cltd
fwait
and
jle
xlat
addb
sbb
ljmp
dec
adc
enter
aad
adcl
jmp
dec
xor
in
push
sahf
scas
std
or
pushl
push
loopne
push
adc
test
jp
sbb
fwait
cmp
push
push
and
and
jo
mov
jbe
pop
jle
pop
and
daa
sarb
call
mov
rcr
xor
push
gs
cwtl
push
imul
pushl
cmpsb
sub
hlt
nop
push
fsts
jne
arpl
lret
lcall
and
decl
and
add
out
in
jmp
cmp
jp
xchg
jbe
push
cwtl
or
out
movl
mov
rolb
ja
jg
jae
xor
mov
pop
call
sub
fwait
dec
sbb
subb
inc
lahf
fucomip
xchg
mov
call
jg
popf
loop
in
inc
bound
mov
cmp
out
test
test
pushl
push
test
mov
loop
stos
or
push
jp
fldt
movsb
adc
lds
aaa
sbb
lcall
daa
add
shl
lock
push
mov
jg
or
pushl
adc
cmp
adc
pop
shrx
or
add
sub
xlat
push
mov
mov
mov
stos
cmp
test
pop
xchg
mov
decl
dec
fsincos
decb
sub
fld
rcrl
icebp
lret
mov
adc
outsl
cli
fdivrl
or
xchg
negl
dec
in
icebp
lcall
cs
cld
ljmp
idivl
adc
adc
dec
into
dec
sbb
pop
popf
mov
add
xor
cmp
subb
das
xchg
xor
call
mov
adc
repz
jnp
sbb
mov
or
sbb
test
inc
jbe
jmp
inc
ficoml
insl
jmp
int3
jg
cmp
sub
data16
dec
fcmovu
cmp
decl
push
sub
mov
xor
gs
jno
shll
push
les
sbb
lcall
in
mov
and
adc
cld
enter
test
cmp
pushl
movsl
leave
loopne
ja
loopne,pt
mov
mov
sub
in
imul
mov
pop
inc
jmp
or
jge
and
fidivs
loop
pusha
sbb
orl
jmp
add
fbstp
pop
dec
stc
jg
cmp
xor
loope
negl
ret
hlt
fildll
lcall
js
mov
clc
jge
fs
imul
xchg
pop
leave
and
cmp
pop
add
mov
dec
arpl
sbb
or
idiv
mov
push
sti
call
inc
mov
sub
sub
pop
in
js
clc
stos
popa
cld
stos
inc
or
or
fnstsw
push
dec
movsb
nop
adc
cmpsb
aam
xor
mov
mov
sub
loope
fiadds
stc
dec
xchg
fs
incl
arpl
int
and
cmp
mov
push
int3
movsb
es
in
jg
adc
fsubs
inc
sub
or
mov
mov
xor
mov
cmpsb
scas
cltd
cld
fnstcw
call
pop
je
pop
mov
in
cmp
push
shrb
ljmp
jecxz
xchg
lcall
je
lcall
or
cmp
sar
pop
push
movsl
ljmp
stc
andb
test
sub
xchg
mov
sub
out
clc
dec
bound
xorb
sub
call
and
test
mov
fldcw
jno
mov
test
fs
pop
fwait
clc
pop
mov
xor
loop
pop
pop
out
or
call
lods
xor
dec
sbb
mov
fst
in
clc
sub
gs
mov
ljmp
inc
bound
mov
leave
jge
pop
dec
sar
sti
jmp
and
aam
fst
cmp
faddl
ss
push
push
pop
dec
mov
stos
mov
stos
sub
out
mov
test
jge
and
mov
jg
sbb
ss
mov
movsb
cli
xchg
sub
aas
outsb
js
loope
gs
cmp
aas
sub
cmp
incl
cmpsb
test
add
and
sarl
push
inc
stos
mov
sahf
dec
adc
call
or
xchg
mov
cmpsl
ss
pop
daa
and
mov
loopne
and
sbb
fadd
dec
jg
pushl
xchg
pushf
mov
cmc
test
mov
sub
xlat
inc
call
test
adc
hlt
push
mov
mull
pop
cmp
mov
ss
pop
inc
cmpsl
dec
xor
adc
scas
mov
iret
jb
cmp
fst
or
inc
lods
mov
lret
xchg
sbb
cmp
push
sub
push
dec
mov
jl
mov
fisubrl
mov
fidivrl
in
jmp
js
and
loop
adc
cmp
ljmp
jg
or
cmc
inc
cmp
pushf
lods
xlat
jp
pop
mov
pop
add
cmp
push
es
mov
lret
pop
sub
divb
and
fstpt
das
cmpsl
mov
fs
dec
jl
sbb
sub
mov
sbb
push
std
fwait
inc
sub
sub
rcll
incl
ret
out
sub
dec
jle
inc
xor
js
mov
adc
jge
inc
mov
iret
sti
push
test
enter
xor
scas
sahf
out
add
fs
jp
push
xor
fwait
or
lcall
mov
sbb
jo
jecxz
imul
jmp
xor
pop
test
xchg
push
enter
lds
push
mov
call
lods
nop
inc
adc
cltd
fcomps
cmp
decl
lock
lds
out
lcall
pushf
test
sub
test
aam
mov
nop
lret
xor
fildll
clc
subb
das
jo
and
push
cs
xchg
mov
mov
std
ljmp
stc
pop
sbbl
lock
jae
in
imul
icebp
icebp
popa
std
jne
push
insb
insl
jmp
ds
xor
or
add
jle
and
subb
mov
pushf
decl
lock
or
xchg
aam
jno
adc
add
sarb
out
sti
sub
incl
shlb
jnp
loopne
and
lock
movsl
lret
push
clc
jb
xlat
sarl
mov
lods
or
xlat
xchg
std
jp
repz
mov
aad
push
or
pushl
push
mov
xchg
pushf
or
jmp
enter
sub
mov
mov
pushl
aaa
xlat
nopl
mov
aaa
add
mov
xor
mov
dec
or
pop
and
fwait
push
push
mov
loopne
enter
es
xlat
test
xchg
jnp
data16
jbe
incl
in
decl
insl
or
inc
and
test
sahf
jp
mov
jae
jo
push
cmp
popa
fnstenv
sahf
ds
scas
push
add
xchg
loop
fmulp
in
add
sbb
dec
push
xchg
and
lret
xchg
xchg
jmp
jbe
or
rolb
decl
mov
ss
and
rcrl
or
sub
call
les
add
imul
movsb
lret
pushf
std
mov
xchg
push
test
sbb
popf
call
movsb
in
out
idiv
adc
sub
arpl
jns
push
test
and
inc
cltd
movsb
test
push
sub
push
xor
imul
sbb
dec
std
inc
add
int
add
cmpsb
insb
or
xchg
xchg
cmp
sub
aad
repnz
cmp
mov
shll
push
ja
lahf
jg
inc
sub
push
push
rorl
faddl
outsb
test
loopne
sar
incl
push
mov
inc
mov
negl
dec
cmp
sbb
leave
mov
das
clc
jmp
dec
adc
rcll
je
lock
cmp
push
pop
push
mov
inc
faddl
and
add
icebp
adc
in
call
cmp
lea
test
mov
adc
and
add
sbbb
xchg
imul
sbb
or
shl
xor
lcall
shrb
jge
call
test
lock
popa
movsl
xor
jg
ljmp
cmp
mov
into
mov
jb
adc
roll
insl
push
pop
sbb
lcall
push
stc
pop
test
jg
xchg
cmp
mov
mov
dec
in
adc
pop
and
ljmp
jbe
arpl
out
jle
es
adc
add
pushf
xor
data16
lcall
daa
dec
mov
inc
xchg
pop
lret
and
mov
insl
cmp
ss
inc
data16
jmp
inc
rcll
lock
call
cwtl
push
jo
lods
cmp
insl
aad
ret
lahf
and
xor
call
dec
jmp
jp
and
pop
mov
fcoml
sar
jg
sbb
inc
or
ss
scas
xor
mov
in
jp
xor
jmp
imul
lods
add
jle
jmp
push
outsl
push
jg
sub
addr16
or
mov
aaa
or
dec
push
mov
mov
lret
xor
ljmp
lds
sbb
inc
sbb
or
xchg
sbb
arpl
std
icebp
pop
lods
movsb
adc
fists
xchg
call
pop
pop
push
adc
cltd
cmp
dec
push
cli
or
mov
push
and
push
fwait
cli
fldt
test
scas
adc
loopne
leave
mov
call
lea
dec
jo
in
jecxz
imul
and
adc
decl
in
movl
add
xchg
into
sar
sbb
scas
imul
leave
loop
mov
pop
cmp
imul
bound
mov
lcall
leave
fchs
loop
mov
shll
push
cld
call
popa
in
or
add
and
std
jecxz
sbb
xor
clc
inc
add
test
sahf
mov
mov
sahf
mov
pop
hlt
cmpsb
call
ret
push
daa
xchg
in
add
mov
push
xor
or
jge
outsl
ret
pop
pop
jle
sbb
jmp
nop
cmp
nop
outsl
shrb
push
xchg
insl
jge
inc
insb
xchg
mov
addr16
call
mov
xchg
inc
aaa
cmc
add
cmp
adc
ljmp
sar
mov
pop
mov
fldenv
adc
jbe
hlt
jmp
stc
adc
frstor
mov
cld
push
js
mov
cld
pop
xor
push
iret
scas
mulb
fmulp
adc
mov
sarl
gs
lret
out
testb
sbb
mov
xchg
aam
int
pop
push
cmc
and
pop
pop
cltd
imul
inc
cmp
xchg
sbb
popf
ja
mov
fwait
lods
inc
js
sar
mov
cmc
in
cmp
push
sbb
dec
xchg
mov
aaa
sahf
mov
in
rol
mov
jbe
mov
hlt
loopne
mov
divl
hlt
or
les
add
int
inc
dec
push
imull
xor
outsb
lds
and
xchg
xor
sub
lods
div
xor
mov
mov
repnz
inc
insl
pop
mov
ret
mov
inc
pushf
mov
inc
movsl
and
cmpsl
pusha
scas
repnz
inc
hlt
ret
xor
lcall
incl
and
daa
add
or
xor
push
sbb
add
stos
clc
sbb
js
dec
mov
ja
adcl
dec
push
mov
jmp
inc
inc
sub
enter
out
dec
rorl
lret
arpl
mov
hlt
js
call
in
aas
xor
in
add
ds
icebp
bound
ret
cwtl
sub
gs
xchg
and
ljmp
dec
sbb
pop
and
and
xchg
cmp
test
and
sub
xor
jge
mov
mov
decl
lcall
bnd
or
cwtl
hlt
hlt
nop
daa
xlat
mov
cmp
and
decl
xor
mov
fmull
xor
std
mov
sub
add
mov
int3
mov
sub
dec
mov
push
int
popa
lds
mov
cmp
sub
inc
cmp
inc
lock
cwtl
inc
inc
mov
pusha
cli
sbb
in
les
push
fildl
in
shl
cmp
cli
and
mov
inc
jl
pop
or
in
mov
call
jo
pop
lock
jle
adc
and
add
push
decl
sbb
cmp
aad
shrl
in
adc
repz
add
out
lcall
or
mov
push
into
js
sbb
pop
dec
jo
ret
out
sti
icebp
and
inc
cmc
outsb
mov
ret
ds
xchg
inc
loop
or
pop
aas
pop
mov
cmp
stos
out
outsl
push
cltd
jno
jg
push
mov
jb
xor
jmp
nop
mov
add
sbb
decl
cmp
loopne
and
or
dec
pop
mov
inc
mov
sub
xor
imul
push
mov
jp
sahf
adc
jo
ror
inc
push
loope
mov
adc
pop
xchg
aas
bound
scas
pop
hlt
jmp
xor
push
xor
pop
mov
dec
jo
sub
jno
lods
push
mov
ret
cmp
faddl
bound
repz
jecxz
cld
jns
rclb
ja
add
and
test
scas
cmp
dec
xchg
pop
push
sub
and
fldt
cs
daa
loop
movsl
ret
nop
nopl
fnstsw
aam
psubsb
mov
cld
aaa
add
fiaddl
pop
mov
cmp
movsl
lea
lret
je
mov
dec
cmp
js
inc
cmpsb
icebp
mov
jns
movsl
ret
push
push
mov
incl
sbb
cltd
xchg
int
push
je
sub
jmp
ja
add
call
pushl
js
repz
mov
lods
fdivrl
cmp
adc
cmp
jecxz
jle
mov
mov
lea
and
xor
and
add
nop
je
jmp
mov
hlt
pop
loopne
cmp
dec
cmp
mov
push
fbstp
out
imul
movsb
mov
hlt
js
jo
aad
xchg
in
push
jmp
sbb
mov
push
lock
pop
dec
sahf
mov
mov
inc
inc
jge
pushf
test
incl
test
xchg
adc
jle
loope
mov
pushf
push
aam
xchg
aaa
insl
cli
jmp
mov
js
add
out
lods
cld
ret
dec
mov
jnp
sbb
aaa
je
outsl
lods
cs
adcl
push
lock
int3
ljmp
jg
inc
pop
andb
xchg
movsl
insb
xchg
push
xor
cld
push
ss
push
push
std
popa
lods
in
incl
adc
scas
rcr
add
jbe
std
shl
call
insb
aas
rorb
fwait
add
pushl
cmpsl
out
cmp
fldt
adc
push
mov
or
mov
test
jmp
mov
mov
lcall
test
mov
lahf
cmp
pop
repnz
mov
pop
mov
call
out
clc
push
rol
je
mov
mov
das
repz
cltd
push
mov
pop
das
pushl
adc
mov
popf
add
dec
jnp
pop
cwtl
in
and
mov
and
inc
cmp
call
and
push
movsb
std
shlb
shrb
sbb
imull
cmp
pop
shrl
sti
bound
push
xchg
iret
seto
mov
sub
pushl
jae
xor
xor
scas
mov
test
fadd
scas
or
push
adc
and
mov
add
hlt
insb
inc
xchg
rcl
pop
jg
cmp
sbb
iret
sub
jmp
inc
testl
mov
mov
jge
shl
adc
cmp
ja
decl
enter
lret
fwait
loope
cli
pop
sub
fiaddl
les
call
repz
xlat
jg
mov
aam
ret
lcall
cmpl
jecxz
sbb
pusha
xor
xor
data16
insb
lahf
lahf
outsb
inc
adc
ds
call
addr16
dec
cmp
push
pusha
push
test
lret
negb
sbb
and
incl
out
les
test
lcall
and
mov
adc
jge
jge
dec
xor
or
cmp
lret
mov
or
inc
push
cmp
ljmp
mov
loopne
int3
std
cs
loope
dec
mov
cmp
mov
mov
lcall
cli
mov
cmpsb
xchg
mov
add
xchg
repz
mov
lcall
loopne
mov
lcall
clc
push
leave
xor
pop
fnstcw
jbe
xchg
add
and
cmp
mov
stos
lods
cmp
arpl
cmp
mov
xor
or
lods
cmpsl
push
out
lcall
sbb
test
or
lods
movsb
jge
xor
mov
lea
lock
inc
jo
shrb
mov
js
adc
ljmp
mov
fwait
inc
mov
lcall
cmpsb
mov
outsl
adc
clc
pop
les
movsl
movb
sub
cmp
xor
hlt
xchg
push
sbb
xlat
cmpl
mov
in
loope
mov
int
repnz
test
cmp
scas
xchg
das
gs
incl
mov
xor
inc
sbb
subl
jne
sbb
arpl
aaa
mov
les
sub
inc
or
ret
jecxz
add
jmp
sarl
ror
and
cmp
in
pop
pop
test
flds
call
adc
jmp
ja
test
into
dec
lahf
dec
jle
subb
incl
aad
push
and
out
mov
decb
imul
jp
std
cmp
sar
pop
jmp
inc
or
mov
cmp
push
push
stos
add
mov
xor
incl
fwait
mov
ffreep
mov
cmp
ds
lret
scas
pop
mov
and
sar
cmp
cwtl
push
in
ss
xchg
test
push
mov
push
in
clc
sub
fildl
fimull
loope
ljmp
jecxz
aaa
cmp
movd
cmpsb
pop
adc
cmp
xchg
pop
daa
bound
leave
jo
push
pushl
fisttpl
pop
or
pop
fdivrs
into
nop
inc
cmpl
push
xchg
loopne
push
push
stos
xor
js
repz
dec
and
fisubrl
lcall
mov
aas
andb
ljmp
jl
fdivr
pop
xor
jle
sub
add
sbb
data16
je
pushl
out
aas
fcoml
sbbb
insb
outsb
pop
add
in
pop
into
jecxz
dec
jmp
mov
pop
cmp
das
add
add
aad
popf
test
dec
mov
in
pop
test
incl
sub
mov
inc
push
test
jl
or
repz
int3
cmp
call
shl
out
inc
pop
jle
xchg
cwtl
insl
inc
outsb
dec
loop
pop
sub
fwait
scas
repnz
sbb
out
mov
push
lret
dec
dec
sbbb
mov
scas
push
mov
sti
fwait
pop
sbb
inc
out
xor
pop
mov
fcmovu
fidivs
test
add
cld
pushl
mov
xchg
or
std
lea
enter
rclb
loop
mov
jmp
rcl
mov
pop
mov
sbb
jmp
jecxz
pop
mov
lods
cmp
push
lret
inc
adc
pop
inc
mov
mov
ss
test
mov
cs
jmp
push
ljmp
and
adc
mov
pop
cmpb
popf
jg
lret
fldt
cli
push
fisttps
es
orb
out
call
mov
push
xor
sar
lcall
popf
addb
adc
aam
pusha
mov
arpl
adc
xor
clc
jg
movsl
push
mov
or
inc
adc
out
dec
stos
aaa
and
pop
sbb
mov
jb
or
cli
pop
icebp
out
icebp
cld
ljmp
mov
or
jno
cmpsl
pop
rorb
pushf
or
sub
or
push
into
dec
jne
and
je
jnp
nop
cmpb
fisubs
orb
jle
mov
icebp
push
incl
add
mov
adc
call
test
mov
les
loop
ljmp
xor
mov
mov
repz
jmp
shlb
push
add
and
dec
push
test
fldt
jnp
mov
pop
out
fistpll
mov
lcall
xor
push
inc
fbstp
jnp
mov
mov
call
push
and
cs
fldl
ljmp
jg
cmpsb
stos
mov
add
shll
dec
subl
aam
pop
sbb
xchg
lahf
or
sti
add
jae
dec
sub
mov
and
xor
sub
push
stos
push
clc
mov
or
mov
add
push
and
bound
xor
jno
loopne
popa
push
dec
les
mov
sahf
mov
xor
outsl
ljmp
dec
push
mov
and
pusha
outsb
jb
xlat
leave
inc
cltd
loopne
ja
push
sar
fsub
xchg
pop
mov
fcoms
ljmp
in
lds
std
jg
in
pop
gs
cli
push
inc
scas
scas
cld
mov
out
add
jg
imul
and
fcos
lcall
incb
dec
call
lods
scas
adc
jnp
loope
push
lea
push
in
in
insl
xchg
and
jp
movsl
add
jo
addr16
xchg
push
sbb
mov
hlt
test
sbb
pushl
mov
adc
pop
cmpsb
xor
add
xchg
lcall
adc
in
and
sar
insl
add
lret
or
xor
ss
jmp
cwtl
jbe
and
xchg
pusha
lret
adc
add
jge
add
call
call
pushf
mov
inc
scas
jl
shl
mov
sbb
rclb
hlt
cmpsl
insb
pop
jmp
incl
xchg
mov
add
scas
fdivl
rcl
xor
incl
outsb
xchg
test
push
out
lret
into
sbb
enter
ss
shll
lock
dec
loop
pop
xchg
int3
pusha
xchg
xorl
mov
mov
or
outsl
pop
add
iret
push
cmp
ficoms
icebp
pop
jne
test
lock
ljmp
xchg
pop
hlt
clc
idivl
std
insl
xchg
sar
fwait
push
push
push
insl
lods
or
add
jmp
sbb
lret
dec
mov
inc
int
daa
rep
cmp
cmpsl
pop
in
enter
jl
call
cmpsb
pushl
adc
sbb
mov
and
jbe
popa
and
mov
push
int
test
lcall
repz
inc
mov
cmp
xorb
xchg
mov
roll
ljmp
lret
repz
jne
call
adc
sub
xchg
mov
inc
xor
and
sbb
mov
jmp
fsubl
add
cmp
in
loopne
xchg
inc
icebp
call
jmp
cmp
jecxz
movsl
mov
repz
call
lcall
jmp
sub
icebp
mov
dec
fisttpl
aas
mov
or
orb
mov
shll
lock
call
movsl
pop
out
jecxz
and
out
add
sbb
iret
aas
arpl
jmp
ljmp
jns
push
fstpl
cmp
loope
data16
cmp
fwait
xor
push
ds
sar
decl
stc
pushf
xchg
add
rcr
sub
js
sahf
test
mov
mov
pop
jmp
mov
push
cld
roll
test
add
mov
rcl
mov
xchg
mov
mov
or
sbb
add
mov
fcmovne
in
ljmp
push
inc
cltd
pop
jne
addr16
dec
adc
mov
mov
aaa
les
call
pop
ljmp
mov
jno
fs
pop
push
sti
or
decl
xlat
lret
mov
mov
lret
fmuls
subl
or
and
int3
pop
cmp
jno
dec
insl
pop
ds
push
mov
ss
outsl
add
fs
xor
js
rcll
andl
jmp
aaa
xchg
xchg
mov
cmpsl
push
mov
ret
xchg
inc
or
pushf
fistps
lds
mov
stos
test
pop
mov
mov
mov
sub
or
lcall
mov
pop
mov
in
or
outsb
dec
cmp
in
inc
jnp,pt
mov
std
xchg
or
ljmp
cli
ret
jge
ja
xor
fcomp
mov
inc
cmp
fcmovnbe
or
aaa
test
jg
inc
push
add
cmc
test
stc
mov
push
xor
mov
es
cmp
ljmp
xor
xchg
hlt
cmp
repz
inc
scas
cmpsb
adc
sub
xorb
mov
lret
mov
mov
in
sarl
pop
and
lcall
movsb
ficomps
xchg
test
shrl
push
jg
insl
xor
clc
out
pop
rolb
ljmp
jbe
sbb
fidivrs
mov
dec
mov
inc
jb
popa
cwtl
or
cmp
negb
mov
decl
jb
lret
repnz
aaa
bound
nop
cmp
add
or
push
or
dec
dec
je
and
sbb
cmpsb
nop
adc
jae
stos
incl
mov
ss
xchg
pop
push
mov
aam
jae
rolb
scas
and
lret
out
lcall
jmp
cmp
mov
add
cmp
lcall
pop
lret
mov
adc
cli
push
ss
mov
rcll
call
push
stos
and
sub
popf
testb
sahf
cmc
jo
jae
mov
decl
jmp
push
lret
outsb
daa
xchg
mov
mov
xchg
or
loopne
lcall
sub
adc
fbld
repz
xor
xor
xchg
xor
inc
cmp
js
rolb
dec
ret
add
lods
inc
stos
cwtl
jae
sbb
jg
cmp
push
push
data16
dec
inc
cli
jp
pop
out
mov
decl
insl
xchg
add
xchg
jg
mov
sub
lds
lcall
add
push
dec
xchg
stc
repnz
out
bound
xchg
inc
loope
faddl
fwait
jg
decl
out
jno
or
xor
insb
jb
out
xorb
and
sub
call
sbb
shll
stos
lret
imul
gs
mov
rorb
mov
jg
into
clc
ficoml
pop
incl
and
pop
pop
lods
hlt
pop
adc
jecxz
push
aas
cmp
cmp
fsubrs
out
jbe
sbb
xchg
jle,pn
imul
fs
lods
mov
ja
or
mov
mov
filds
ljmp
xchg
movsl
xchg
sahf
nop
pop
xor
gs
loope
inc
rcr
incl
adc
or
pop
cmpsl
sub
adc
mov
pop
jmp
decl
pop
loop
aam
in
inc
loopne
ret
loopne
js
mov
lods
inc
inc
jno
sti
loop
or
cltd
fiadds
add
movnti
inc
pushf
dec
int3
cmp
xor
sbb
into
lcall
sub
jmp
xchg
sarb
add
imul
js
and
adc
push
sub
mov
ja
and
decl
or
adc
addr16
adc
pop
xor
fldl2e
lock
lcall
mov
push
inc
mov
lods
std
dec
iret
es
mov
dec
adc
push
clc
incl
fnsave
shrb
movsl
ud0
decl
clc
or
imul
popf
cmp
loopne
mov
cmp
aad
int
jbe
outsl
daa
ret
lods
icebp
mov
xchg
sub
mov
es
jmp
xchg
jle
out
sarb
or
fsub
shlb
push
and
cwtl
call
xchg
leave
jnp
ret
jns
xlat
cmpsb
push
das
jbe
mov
mov
outsb
popf
sub
cmp
xchg
ljmp
xor
mov
or
sbb
or
mov
mov
shlb
fwait
in
les
incl
pop
jbe
mov
inc
pop
movsb
enter
adc
mov
mov
jg
fnsave
cmp
mov
cmp
fldenv
inc
and
call
and
idiv
pop
dec
dec
add
fwait
and
lds
mov
mov
out
mov
pushl
fmulp
pop
mov
shll
and
mov
test
movsl
bound
loopne
jmp
push
cmp
dec
mov
mov
adc
fwait
call
xor
imul
xor
cld
incl
data16
fstpl
xchg
dec
test
movsl
cmp
lcall
cltd
loop
xchg
jne
add
fsubrp
stc
push
orb
jae
push
stos
out
xor
push
cmp
adc
jne
jg
ficomps
xor
setnp
addr16
test
mov
mov
out
in
mov
mov
add
jne
xchg
mov
add
pop
pop
xlat
push
call
cld
ljmp
push
mov
sub
loop
push
or
jge
loope
arpl
mov
iret
add
mov
cli
ja
int3
enter
addl
test
mov
jecxz
or
je
cmp
dec
sbb
jo
push
dec
xor
test
dec
mov
xor
mov
movsb
cmc
ss
xor
lret
dec
js
test
jecxz
pushl
ret
jg
sbb
jb
mov
sbb
divl
mov
push
filds
pop
xor
aas
lds
lret
mov
mov
xor
jae
push
ss
decl
mov
lcall
mov
out
adc
jp
and
pushl
fs
inc
adc
test
mov
in
and
mov
gs
mov
jns
mov
xchg
or
or
mov
lret
popa
cmp
mov
fildll
movsb
xchg
add
or
jo
xchg
dec
push
jecxz
jecxz
imul
sub
push
repnz
rcll
pop
fstps
sbb
repz
sub
shrl
lcall
xchg
and
push
cmp
mov
inc
test
rcl
adc
and
lcall
dec
lret
pusha
ret
out
enter
sub
pop
repnz
push
pop
filds
int
pushl
jmp
sarb
cmpsl
push
mov
mov
in
mov
es
decl
js
xchg
cmc
stos
fcomps
pop
push
out
pop
rolb
inc
pushf
cmp
dec
decl
filds
testl
repnz
xchg
subl
test
push
call
mov
ja
out
shr
jne
outsl
test
shll
cmp
lcall
mov
mov
sbb
mov
cmpsl
mov
mov
incl
dec
jl
ret
sarl
mov
cmp
mov
xchg
jbe
ds
ljmp
mov
push
mov
mov
mov
add
ljmp
xchg
sbb
fwait
rcrl
lahf
out
jecxz
or
call
lods
push
jne
shll
and
mov
inc
idivl
and
icebp
xchg
add
add
pop
dec
xchg
in
stos
test
dec
mov
xchg
push
popa
idiv
int
adc
mov
je
jge
or
incl
jmp
sbb
shrl
das
adc
cmp
jb
inc
push
ficoml
pushl
out
stos
std
cs
cmp
pop
mov
dec
cmp
sub
lahf
rcrb
inc
incl
pushf
cs
imul
pop
xchg
mov
xor
push
movsb
xor
test
and
jl
jmp
adc
pop
in
add
pusha
negb
xor
push
jg
mov
ds
test
mov
mov
or
jg
out
clc
xor
xor
mov
push
xlat
shlb
mov
out
pushl
js
adc
push
insb
add
imul
inc
popf
mov
addb
jmp
push
sti
and
lods
gs
sub
jmp
dec
nop
sbb
mov
dec
or
push
and
mov
test
push
or
mov
jns
inc
repz
or
lock
sbb
sbb
adc
cwtl
call
in
shlb
mov
cs
pop
movsl
scas
mov
pop
rcrl
pushl
inc
ret
popf
push
enter
lcall
add
adc
push
pusha
cmp
and
mov
adc
es
jmp
and
scas
sahf
lods
push
orb
add
or
and
loope
jmp
jne
or
hlt
cli
xchg
leave
xchg
adc
push
mov
clc
inc
jmp
ljmp
sbb
mov
test
inc
pop
mov
movsb
xchg
cmpsb
test
add
shl
stos
shll
cmpsb
call
imul
aad
push
adc
fs
jno
jecxz
loope
cmpb
fmulp
inc
inc
fcomps
cmp
pop
imul
out
dec
popf
jmp
push
or
into
pop
test
in
cli
call
pop
lret
fwait
sbb
sbb
sahf
pop
xor
adc
movl
pop
sbb
dec
pop
pop
push
push
gs
scas
test
addr16
orl
dec
test
mov
xchg
clc
mov
xor
pop
pop
sbbl
stos
mov
xlat
pop
leave
mov
mov
jo
pop
stos
enter
cmp
or
inc
mov
js
push
jmp
push
jl
loop
add
call
decl
add
in
and
mov
leave
push
in
mov
shrl
popf
fidivrl
pop
gs
jg
dec
xchg
jno
or
fidivl
ret
clc
xor
les
ret
movsb
insl
jp
fwait
imul
clc
roll
sbb
cs
add
mov
jne
cltd
decl
rcrl
inc
cmpsb
outsl
mov
in
mov
xchg
lret
dec
mov
jnp
jb
decl
nop
imul
or
mov
ret
test
add
fidivl
sub
mov
mov
dec
xchg
adcl
adc
adc
push
xchg
in
xor
ljmp
mov
push
cli
test
test
jbe
inc
adc
aaa
jl
rcll
mov
inc
repnz
or
loope
dec
andl
adc
mov
pop
and
faddl
cmp
mov
lret
jne
push
and
sbb
lcall
rolb
xor
lcall
test
pop
cmp
sub
decl
scas
xchg
es
out
push
shlb
xor
gs
and
fsts
hlt
jo
jmp
add
lret
es
orb
gs
adc
lcall
ss
sbb
jbe
loopne
cmp
dec
pop
jbe
mov
jne
pop
clc
movsb
lcall
addr16
fsts
aaa
pop
repnz
imul
push
pop
mov
jbe
lcall
sbbl
and
mov
cmp
outsb
sahf
loop
dec
lock
push
and
leave
lods
fdivs
mov
ss
incl
idivb
pop
out
popf
inc
push
fcom
xor
sti
inc
aad
dec
xor
decl
popa
aaa
mov
lock
push
pop
cmc
js
stos
mov
push
scas
clc
decl
aam
pop
or
mov
repnz
dec
ret
stos
test
mov
or
jmp
and
mov
pop
cli
mov
in
cmc
mov
std
ljmp
int3
xor
andl
jle
and
jo
fsubrp
xchg
pop
mov
jecxz
cmpsl
idiv
push
cmp
add
sub
stc
loope
push
mov
cmp
lea
bound
mov
out
ret
xchg
icebp
loope
adc
ret
dec
mov
push
jmp
sbbb
ret
ret
test
or
jle
jmp
xorb
pop
decl
in
loopne
jae
inc
or
pop
dec
and
ja
push
jg
loop
jmp
lcall
sub
mov
mov
cltd
xor
xorl
sbb
das
xchg
xor
repnz
stos
aaa
icebp
pop
jns
mov
dec
jl
cmp
inc
cli
addr16
inc
fldt
xchg
mov
pop
mov
jne
adc
dec
cltd
add
mov
lcall
push
inc
test
jl
and
fdiv
insl
pushl
xchg
jge
cmp
outsb
ja
int3
ja
xor
mov
jl
hlt
mov
pushl
add
jecxz
shrl
enter
or
jmp
cmp
adc
aam
mov
mov
push
in
inc
sarb
mov
test
jo
dec
loope
lods
jl
mov
mov
loope
pop
push
push
out
inc
enter
xlat
jmp
pushl
mov
xor
aam
test
enter
data16
cwtl
adc
or
call
xor
add
mov
pop
dec
cmp
mov
xchg
inc
ret
inc
out
repnz
jne
pop
jle
pushl
jecxz
add
popf
jns
aas
mov
ss
icebp
bound
and
cmp
ljmp
cltd
inc
pusha
repnz
push
jae
cmp
xlat
jge
add
xchg
call
popf
jg
stos
push
roll
imul
jmp
sbb
adc
ljmp
ret
sub
bound
out
xchg
and
int
vmaxpd
push
mov
dec
or
out
pop
lods
sbbl
in
ffree
scas
pop
sub
repz
mov
jg
inc
std
clc
pop
sub
jl
scas
xchg
mov
ljmp
sub
push
into
mov
inc
test
xchg
inc
je
mov
inc
jo
sbb
inc
les
mov
hlt
mov
negl
sub
dec
fs
cmpsb
out
sti
mov
jno
sub
lock
or
pushl
add
popf
ret
fmuls
mov
inc
in
sub
mov
call
ret
mov
add
repnz
movsb
and
xorb
rorb
mov
mov
push
push
or
test
sub
leave
or
dec
inc
mov
inc
pop
test
inc
xor
or
sub
sub
rcr
incl
sbb
sbb
and
pop
pop
gs
mov
gs
jmp
call
jb
inc
movsl
std
scas
push
gs
outsb
sub
ljmp
jg
push
into
mov
stos
sub
jecxz
and
mov
cmp
call
sbb
popa
imul
scas
punpckhbw
filds
jno
in
sti
flds
sub
push
das
or
jp
adc
xor
test
jp
pushl
jl
xchg
bnd
xor
cmpl
lret
lods
out
in
mov
fs
pushl
out
aad
bt
mov
xorl
mov
jle
adc
sub
icebp
popa
push
push
lea
cld
fs
lcall
pushf
mov
add
pop
sbb
dec
mov
icebp
add
sbb
cmp
jb
xchg
ds
dec
test
aam
rol
scas
pop
sbb
mov
repz
outsl
lds
sar
lcall
and
shl
insb
xchg
mov
xor
std
test
pushl
mov
jp
pop
push
xchg
mov
jp
adc
aas
fidivrl
shlb
sbb
push
add
inc
jl
cmpsl
cmp
cld
aad
aaa
push
sbb
push
inc
xchg
mov
into
xchg
movsb
ret
stos
decl
outsb
ret
mov
push
arpl
xor
pop
sarl
pop
andb
pop
orb
mov
cmp
sub
out
mul
bnd
call
lock
loop
sbb
repz
mov
cmp
out
adc
fs
ljmp
scas
rol
add
push
xchg
inc
nop
add
sub
cmpsl
jb
andb
ljmp
lds
pop
and
je
mov
sbb
jmp
stos
ljmp
pop
push
aaa
push
push
mov
add
push
pop
insl
mov
decl
fwait
rclb
stc
stc
mov
js
pop
leave
push
lea
cmpsb
out
notl
scas
cmp
or
dec
loope
in
inc
popa
xchg
mov
cmp
movsl
imul
jp
sbb
xorb
push
inc
orb
loop
sub
out
insb
ljmp
outsl
push
iret
dec
cmp
scas
fistpl
imul
xlat
dec
into
inc
adc
lea
lods
jns
lea
mov
xchg
jmp
ret
mov
dec
aaa
cld
lcall
inc
stos
xor
pop
inc
fwait
sbb
pushl
out
add
out
in
adc
test
jle
push
cmc
add
pop
add
pop
in
mov
mov
lcall
stos
aad
jg
mov
dec
rcrb
rorb
or
xchg
or
jbe
push
fsubs
aam
xchg
jmp
dec
bound
in
jle
movsl
xchg
lret
idiv
jg
je
imul
adc
pop
pop
mov
dec
jae
pop
testb
mov
clc
incl
adc
cmpsl
cmp
xor
dec
xchg
pushl
insb
outsb
lret
gs
pop
std
add
sub
xchg
movsl
mov
popl
icebp
stos
dec
outsl
push
xchg
sbb
jno
cli
inc
jo
shll
jge
mov
push
lock
dec
in
dec
mov
sti
mov
icebp
dec
xchg
add
pushf
les
in
push
add
lahf
pop
std
mov
daa
xchg
add
loop
enter
jg
mov
nop
ret
cwtl
push
loope
dec
jo
adc
into
and
push
cmpsb
sub
sub
lret
xchg
js
mov
adc
mov
mov
xchg
sbb
idiv
jmp
jne
pop
mov
or
aad
mov
mov
or
test
mov
loop
push
add
mov
xchg
mov
pop
xor
ljmp
movsb
jne
pop
fwait
int3
adc
mov
inc
ds
sbb
test
pushl
test
or
cmp
daa
mov
imul
add
sti
int3
push
cmpsb
xchg
push
call
aaa
mov
into
scas
xchg
mov
orl
pop
mov
filds
lock
dec
jno
mov
inc
xor
xchg
or
ss
jmp
sarb
adc
iret
lret
xchg
pop
or
lods
imul
mov
push
mov
push
jmp
cmpsl
adcl
sub
gs
roll
jp
and
loope
mov
std
out
sbb
xchg
jne
test
outsl
ret
push
lods
xchg
inc
cld
cmp
repnz
mov
test
add
ret
and
cwtl
mov
leavew
push
or
addb
inc
pop
clc
mov
or
jnp
filds
inc
mov
mov
push
and
in
sub
sahf
pop
push
pusha
jae
repnz
leave
int3
pop
dec
incl
pop
pop
or
stc
out
fiadds
aaa
xchg
jmp
nop
cmp
and
cmp
decl
lock
fldt
inc
mov
cmp
add
pushl
cwtl
lahf
flds
jg,pt
mov
mov
ja
sbb
daa
nop
push
jno
sbb
pop
sti
incl
adc
adc
lods
push
aad
pop
es
cmpsl
ret
dec
mov
fsubs
icebp
and
push
mov
fdivl
in
insb
cmp
inc
lods
or
sub
xchg
adc
loope
scas
out
jp
test
adcl
push
lcall
add
inc
cmp
subb
push
cld
dec
packsswb
icebp
decl
icebp
sbb
inc
clc
ljmp
sbb
out
and
imul
dec
lods
push
test
xchg
or
dec
xchg
pop
scas
repnz
in
aaa
mov
cmp
jmp
xor
scas
mov
pop
xchg
adc
mov
sbb
or
arpl
ljmp
pop
or
and
fsubl
test
pop
pop
xchg
movb
cmp
cmpl
add
lock
or
stc
push
sub
mov
gs
push
adc
loop,pn
and
mov
xchg
cmc
jo
imulb
sub
mov
rcr
mov
push
and
or
sbb
pop
inc
ljmp
loop
in
add
mov
xlat
pop
mov
sub
imul
cmp
mov
cld
call
test
adc
add
aas
mov
mov
or
repz
pushl
fiadds
mov
xchg
imul
xor
shlb
mov
decl
fs
inc
cmp
fwait
incl
into
cmp
loop
or
out
push
cld
fdivrp
lock
in
jecxz
imul
flds
mov
xchg
sub
les
jg
hlt
mov
cmc
cmp
scas
xchg
pusha
inc
push
add
fdivr
pushl
cmp
imul
push
insl
filds
add
out
iret
add
jecxz
sbb
jmp
cmp
push
leave
cmpsb
mov
inc
pop
inc
stc
jbe
pop
aaa
mov
pop
push
or
xor
call
clc
stos
adc
arpl
add
xchg
mov
mov
cmc
stos
mulb
sbb
jg
test
xlat
lret
fidivrl
loope
or
mov
mov
in
stos
xchg
hlt
sbb
mov
cmpsb
dec
jmp
pop
test
add
decl
stos
call
iret
and
loope
mov
gs
jne
sbb
jg
ret
mov
mov
das
mov
negb
daa
or
pushl
push
inc
sbb
dec
lds
aaa
rcrb
push
sbb
sbb
dec
and
push
movsl
nop
sub
cmpsl
dec
sbb
aas
lcall
out
pushl
data16
cmpl
test
stos
pushf
mov
mov
and
ss
call
in
das
jge
inc
cld
fstps
ja
jle
adc
push
sub
inc
rcl
sub
incl
mov
loop
sti
outsl
add
stos
insb
fadds
and
nop
insl
add
push
cwtl
icebp
call
push
sbb
mov
jns
or
dec
sub
incl
mov
cmp
insb
dec
push
ret
xlat
int3
jb
jg
inc
adc
push
mov
and
xchg
testl
push
push
test
xor
jo
dec
jecxz
cmc
sub
dec
imul
dec
sbb
aas
mov
icebp
pop
ret
pop
ljmp
decl
pop
outsl
xor
rcl
pop
popa
jg
push
test
ret
xchg
push
mov
jge
stc
mov
add
shll
jl
imul
jnp
mov
aaa
loopne
xlat
inc
push
jbe
mov
decl
add
xor
fwait
rclb
iret
daa
les
jnp
es
push
pop
in
xchg
lods
and
xor
push
outsb
push
test
push
inc
fidivrs
ljmp
jp
gs
fisubl
mov
jne
fs
push
sbb
test
call
pop
push
hlt
dec
cmpb
ja
mov
or
test
pop
mov
data16
adc
aas
popf
mov
loope
xorb
mov
and
pop
mov
nop
dec
pop
cli
iret
negb
leave
and
inc
cli
mov
xor
ficomps
or
sub
xchg
out
repnz
xorl
jge
ficoms
pop
loopne
add
sbb
or
lods
mov
and
stos
in
fwait
mov
incl
bound
rorb
into
out
cmp
repz
cmp
rcrl
pusha
xchg
push
int
lcall
inc
or
lcall
idivb
push
into
test
pop
std
jge
pshufw
and
push
sub
test
push
add
stc
jns
xchg
loope
push
jns
aam
sbb
cmp
and
inc
xchg
pushl
cld
adc
and
jne
repnz
or
push
xor
jle
popf
sbb
xchg
or
jmp
jp
scas
ds
std
adc
add
rcl
push
jle
pavgb
push
aad
ljmp
cmp
jmp
cltd
adc
stos
into
shl
cli
cltd
and
mov
cli
jg
xor
in
adc
sbb
out
adc
popa
sbb
cmp
test
bound
mov
lcall
lcall
inc
out
xchg
mov
cltd
popa
jecxz
pop
div
cmp
mov
jmp
aam
jmp
mov
adc
jle
push
lea
iret
xor
xor
lcall
imul
and
test
sub
loopne
xchg
mov
mov
jmp
loope
fldt
pop
insb
mov
lods
or
daa
sub
inc
pop
rorl
adc
js
jg
lods
stos
lock
mov
inc
sub
or
in
inc
int
mov
push
stos
out
ret
inc
ds
call
inc
mov
pop
ja
les
push
sbb
roll
aad
movb
adc
mov
add
xor
test
push
and
lret
andnps
decl
push
in
mov
pop
repz
push
and
shl
imul
jp
int3
std
jno
cmp
rolb
sbb
outsb
jmp
fisttpll
cmc
neg
cmp
sbbb
nop
sub
jb
dec
mov
xlat
mov
pop
fcomi
mov
mov
decl
mov
fistps
and
jb
xchg
mov
mov
inc
mov
mov
or
cmp
in
ret
jae
cwtl
inc
cmpsb
jmp
mov
push
int3
sbb
fcomi
lock
sar
aaa
fcmovb
fstp
jbe
lcall
mov
incl
inc
jmp
jle
sbb
jg
divb
add
push
jne
popf
iret
mov
test
fisubrs
lcall
sbb
jecxz
mov
jg
jae
incl
dec
or
xor
xacquire
call
mov
cwtl
lcall
ds
mov
insb
inc
sti
in
inc
push
rcl
or
jno
sti
cli
data16
push
andb
pop
fsubrs
test
dec
dec
rolb
cmp
mov
jbe
movsb
addr16
mov
mov
test
adc
pop
jae
das
cltd
add
incl
stos
cmp
in
movsb
out
fldenv
aaa
test
jle
test
repz
mov
xchg
stos
lea
cwtl
push
cmp
call
mov
dec
and
xor
out
lods
cmp
fcoml
xchg
jmp
mov
pop
jge
mov
out
or
sub
daa
mov
jecxz
dec
rol
lcall
ljmp
add
enter
or
sti
sahf
xchg
pusha
outsb
adc
cmp
sub
cmpl
lods
cmpsb
mov
loope
jle
clc
cltd
clc
push
sti
cli
sar
jnp
cwtl
mov
ljmp
outsb
cmp
dec
mov
shr
jg
gs
adc
sbb
cmp
lods
iret
outsl
ljmp
pushl
add
or
in
nop
sti
pusha
inc
lcall
call
enter
dec
or
cwtl
xchg
in
call
pop
mov
aaa
lret
loopne
pop
sub
mov
push
loopne
push
sbb
sti
fmuls
inc
and
jae
fidivl
inc
incl
cmp
add
cmp
push
fists
cmpsl
mov
push
sbb
cmp
sub
jl
stos
test
scas
inc
es
adc
clc
inc
jo
mov
into
dec
inc
pushf
adc
daa
dec
mov
ljmp
call
jbe
das
or
sub
mov
sub
sub
xchg
inc
xor
push
or
or
lcall
push
cmp
rorb
xor
cld
lods
push
add
gs
cld
decl
mov
push
jp
mov
int
daa
dec
ds
sbb
xchg
mov
dec
sub
jbe
xchg
mov
insb
push
inc
or
push
push
ja
fstpt
sub
sbb
inc
push
sbb
les
btc
cmp
dec
mov
pop
push
or
fbstp
ss
in
xchg
shrl
add
or
inc
aam
insb
cmc
sti
inc
xchg
xor
jmp
push
cmc
incl
mov
push
cmpsb
repz
jle
sbb
mov
movsl
cmc
dec
inc
test
sarl
cs
pushl
rorb
jp
mov
jmp
cmp
jae
out
sub
lcall
shr
xchg
je
mov
push
leave
jl
cmpsb
pop
hlt
cmpl
call
sbb
sub
sbb
stc
pushf
cld
sarb
cli
movsb
sub
movb
std
jge
and
mov
push
hlt
dec
das
repnz
int
mov
stos
inc
cmpsl
mov
call
or
es
daa
dec
pop
xchg
lods
pushf
or
bound
adcl
lcall
enter
pop
decb
in
test
mov
cmp
cmp
xchg
mov
or
hlt
inc
inc
fidivl
jns
dec
and
std
repz
testl
cltd
xchg
mov
popl
xor
xor
mov
stos
int3
xchg
sub
bound
xchg
pop
call
cmp
sti
pop
subb
cmp
add
lcall
inc
inc
xorl
and
stc
inc
cmpsb
xchg
data16
gs
pop
mov
js
cltd
jno
fsubr
lret
xor
dec
adc
aaa
loope
jb
es
fucomip
test
and
jl
adc
ja
mov
push
call
or
add
and
lods
popf
jno
rorl
loope
lcall
bound
cli
pushf
iret
mov
ret
jl
scas
fmuls
mov
cmpsb
xchg
ret
and
roll
sbb
and
jb
dec
gs
add
mov
scas
call
add
jns
test
cwtl
jbe
jns
orb
idiv
fbld
fs
push
sbb
sbbb
jno
inc
outsb
mov
dec
mov
in
mov
ss
jl
push
iret
sahf
repnz
sub
ret
ja
repz
sub
jbe
adc
fcomip
mov
ljmp
cmp
mov
test
lcall
movsb
pushf
add
xlat
pushl
sbb
movsl
out
adc
push
mov
or
pushf
das
sub
clc
jl
dec
dec
xchg
xchg
xchg
jecxz
mull
xor
fcomip
call
add
cmovns
and
adc
adc
jmp
test
dec
push
jl
cmp
xchg
xchg
or
sub
add
sub
clc
cs
fcomip
cmp
mov
jae
add
outsb
dec
dec
sub
push
out
pop
fdivr
jmp
mov
ror
pop
lea
stc
jmp
jbe
pop
dec
jnp
mov
addr16
push
mov
jbe
js
incl
lret
sbb
jecxz
push
xor
inc
mov
xor
sub
dec
add
pushf
adcl
movsl
sbb
dec
divb
xchg
jmp
inc
repnz
pushl
add
sub
daa
xchg
jg
mov
mov
mov
mov
call
ljmp
cmpsb
adc
and
les
ret
shrl
ret
xor
pushl
lret
inc
out
dec
lods
xor
jge
push
insl
aas
or
sbb
pushl
dec
mov
stc
stos
pop
stos
mov
and
test
dec
inc
call
xchg
mov
mov
in
sbb
inc
movsb
sbb
jbe
popf
incl
insb
out
jge
add
jns
lret
mov
fildl
push
stos
and
lcall
sub
into
rcrl
lds
jmp
fcomps
incl
pop
and
out
jb
and
ds
jmp
mov
lcall
mov
addb
xchg
stc
fsts
ja
clc
adcb
je
sub
mov
jl
jmp
push
jge
or
mov
cmp
bound
fwait
call
outsb
jge
test
call
out
scas
bound
fwait
mov
les
fsubrs
cmc
sbb
adc
lcall
sub
pmuludq
and
fdivr
jp
mov
hlt
sbb
decl
mov
out
jl
ficoml
cmp
jecxz
push
push
lds
test
cmp
lcall
ljmp
les
cld
mov
scas
dec
in
stos
sahf
stos
das
jle
mov
adc
mov
lcall
fnstcw
std
lea
ljmp
push
inc
xchg
das
sar
push
inc
test
dec
pop
pop
jbe
xchg
xor
imul
incl
jl
mov
out
pop
xchg
and
sbb
in
dec
ss
jg
pushl
inc
sbb
sbb
dec
mov
nop
sub
xchg
lods
jmp
call
fcmovbe
cmc
jnp
aad
push
das
sbb
sub
pop
mov
mov
jle
enter
mov
je
xor
pop
pushl
dec
call
loope
lret
cmp
into
pop
jae
int
mov
inc
into
jl
or
xorl
data16
add
pop
mov
mov
sbb
shlb
cld
mov
hlt
testl
mov
push
and
push
call
push
xor
mov
test
adc
lcall
or
jae
imul
rorl
jg
scas
xchg
pop
or
aas
jnp
clc
insl
xlat
ljmp
xor
jno
push
mov
mov
sbb
decl
add
inc
xor
adc
cmp
repnz
pop
outsb
or
fsubl
lds
mov
test
out
cmp
jmp
sar
mov
out
xor
sbb
pop
jle
inc
dec
ss
lcall
dec
jno
jnp
or
int
decl
add
ja
push
aad
call
jne
fs
iret
add
jecxz
imul
repnz
adc
incl
sbb
adc
sbb
sbb
pop
cmp
pop
cmp
imul
sub
rclb
pusha
enter
loopne
dec
dec
jp
stos
pop
addr16
mov
movsl
dec
lret
xor
in
cmp
fcmovne
cmpsl
add
cmp
jle
adc
fstps
mov
push
xor
scas
jle
push
insl
xor
ss
dec
sub
out
stos
inc
xchg
imulb
arpl
push
je
out
sub
mov
mov
out
repz
imulb
sub
cmpsb
and
mov
pop
lods
xchg
aam
js
sahf
mov
int3
js
xor
dec
ljmp
mov
call
cmp
dec
or
pop
add
test
decl
sbb
cmp
xor
mov
xor
add
push
aam
mov
ret
xchg
jb
mov
pop
std
pushl
pop
mov
sub
sbb
enter
jae
mov
faddl
ljmp
jne
dec
sub
es
push
inc
inc
xchg
dec
enter
aaa
mov
cld
push
inc
cld
adc
notl
int
dec
je
cltd
out
dec
lea
decl
lock
jmp
scas
xchg
jle
popf
mov
sarl
and
decl
movsl
lret
or
mov
and
jmp
mov
dec
subb
mov
pop
cld
call
call
cs
fcomps
adc
add
xlat
cltd
mov
pusha
jmp
ficompl
fwait
cmp
xchg
iret
shll
mov
xor
cmpsl
add
pushl
pop
loopne
mov
jno
sarb
cmpsb
pop
push
jb
cs
sbb
mov
jg
sub
xchg
pop
mov
daa
fmul
cwtl
push
sub
pushl
incl
pop
scas
loopne
xchg
jnp
orb
fdivrl
inc
pop
outsb
into
xor
inc
call
mov
pop
mov
ljmp
jg
outsl
ljmp
xchg
cmp
dec
xor
es
scas
inc
pop
push
xor
movsb
or
ljmp
aas
mov
aam
mov
fistl
adc
enter
in
roll
pushl
scas
mov
lret
fs
add
and
mov
fadds
ds
pushl
test
or
push
sbb
loop
push
pop
das
gs
cmpsl
repnz
jge
push
fisubl
lock
fdivrp
lock
cmp
out
cmp
cmpsb
stos
xchg
popl
cmc
fcompl
jo
repnz
or
or
mov
roll
mov
scas
xchg
lock
add
pop
sahf
cmovae
inc
push
cld
sub
or
call
sbb
add
add
mov
loop
inc
aas
push
fldt
ljmp
xlat
jns
outsl
dec
out
leave
pop
stos
inc
lea
sub
pop
sbb
mov
test
daa
fstpt
xor
cmpsl
jecxz
in
xchg
cmpsb
cmpsb
push
adc
add
or
decl
sub
outsl
in
sub
in
mov
arpl
or
test
pushl
jno
gs
inc
add
xor
pop
sbb
push
sbb
push
mov
add
call
sbb
push
gs
pop
inc
jge
inc
mov
pop
imul
pop
into
dec
lret
subl
push
ja
in
adc
and
call
jne
jne
pop
divb
xorb
test
mov
cmpb
jg
popf
test
inc
mov
mov
stos
add
daa
jl
push
divl
dec
mov
scas
dec
mov
jl
pushf
jl
cwtl
leave
test
push
cmp
les
dec
xchg
mov
mov
fcomip
push
cmp
jl
sub
bound
add
xchg
xchg
ja
decl
leave
mov
bound
daa
xchg
imul
incl
int3
popf
jns
inc
lods
xor
xor
dec
sbb
js
sahf
dec
sar
mov
lcall
dec
push
xor
xchg
test
mov
and
int3
lds
idiv
jg
out
xchg
cmovge
test
sub
bound
in
xor
pop
cmp
data16
mov
fucom
jp
cli
nop
jb
push
sti
aaa
testl
in
outsl
popa
adc
sti
xor
xchg
es
cmp
sub
add
mov
xlat
xchg
je
push
push
jns
testb
pop
rorl
jmp
aas
leave
inc
cmc
and
pop
out
mov
sarb
inc
and
cmp
cmp
testl
jl
mov
sub
cs
jecxz
cltd
leave
jecxz
cmp
js
ret
sbb
add
add
mov
pop
lcall
jo
jg
outsb
dec
pop
cli
popf
mov
sub
enter
pop
js
xor
inc
jae
xchg
in
mov
decl
jmp
nop
sub
dec
pop
jnp
ss
push
int3
subl
adc
xor
pop
jecxz
dec
mov
xlat
xlat
subb
ficoml
aaa
mov
jg
push
ljmp
adc
rep
aas
loop
push
and
nop
je
popf
adc
add
xchg
lock
shl
movsl
fmuls
jge
cmp
sar
mov
pop
pushf
mov
ds
mov
cmp
xor
cmp
loopne
xchg
sbb
in
ss
mov
rcll
popf
push
dec
repz
mov
mov
and
mov
mov
lret
add
and
xchg
cmpsl
test
pusha
loop
xor
add
es
mov
hlt
push
ja
cmp
shr
je
dec
mov
rclb
repnz
jg
ss
loop
sub
ds
test
popf
xchg
orl
inc
mov
outsl
add
add
jg
mov
in
je
enter
push
cs
cmp
add
mov
xorb
mov
iret
and
sar
jg
adc
push
loope
or
mov
cmp
adc
aad
add
lock
notrack
mov
stc
mov
fiadds
sbb
cmpsb
stc
pop
sub
push
cld
mov
pop
rcll
stc
push
or
ret
decl
fsts
mov
dec
xchg
sahf
pop
dec
fidivrs
movsl
jbe
std
decl
lock
pop
shrb
pushf
adc
push
mov
jge
sahf
mov
pop
cs
mov
mov
out
sarl
cmp
jp
mov
dec
jbe
daa
push
fstpl
insl
js
clc
adc
jecxz
ret
scas
xor
jg
fiaddl
jmp
jle
sahf
mov
mov
dec
mov
lret
int
jecxz
iret
shlb
mov
in
aad
lods
sbbb
rolb
imul
test
mov
and
jmp
xor
pushf
and
pop
popa
add
mov
fstl
push
pushf
popf
dec
add
pushl
add
fists
jge,pn
pop
stos
jmp
mov
out
inc
lea
add
lcall
mov
sub
lods
or
in
stos
sub
lcall
ret
lods
inc
call
xor
sub
lds
subb
push
rclb
push
pushl
std
jg
pop
xor
inc
fstpl
icebp
jecxz
and
ja
nop
sahf
dec
das
clc
call
rorl
xor
cld
pop
mov
cwtl
sub
cs
popa
int3
sbb
lcall
dec
std
mov
mov
inc
lahf
enter
push
das
pop
dec
mov
cmp
incl
mov
or
pop
inc
pop
cs
push
jl
scas
in
fs
jg
aam
add
or
cwtl
mov
pop
xchg
push
ret
and
sbb
arpl
inc
ljmp
pop
test
lea
lret
and
mov
leave
push
ds
incl
mov
mov
mov
sub
orl
sbb
in
adc
lds
jp
mov
or
pop
sub
cmpsl
mov
xchg
xor
test
xor
jmp
sbbb
jge
mov
sti
test
add
mov
jno
mov
pop
cmp
mov
jbe
push
sbb
cwtl
pop
mov
or
cwtl
cmp
fdivl
incl
in
jno
jmp
stc
sbb
xchg
add
imul
stc
cmp
fcomip
fstps
scas
adc
push
data16
inc
and
mov
in
sbb
lret
or
xchg
aas
cmc
insl
mov
mov
push
inc
out
pop
bound
sub
outsb
sti
loopne
ret
call
scas
xchg
dec
cmp
push
cmp
mov
push
mov
sar
loopne
repnz
push
fstpl
pop
dec
adc
dec
jns
xor
fbstp
sbb
pop
rol
pop
sub
xchg
pop
fcmovnbe
in
ljmp
ljmp
sbb
cli
mov
hlt
jne
cli
mov
cltd
pushl
dec
xchg
popf
pop
pop
adc
mov
out
call
push
xchg
out
pop
or
les
ljmp
pop
sub
jp
das
lret
stos
and
or
call
push
inc
adc
or
call
inc
mov
xchg
lcall
out
push
cs
sti
fidivrs
test
mov
call
aas
popf
push
data16
inc
adc
in
faddp
test
fimuls
ljmp
lock
cmp
dec
sbb
xor
sti
push
ret
out
movlps
cmp
lods
call
push
dec
daa
mov
mov
cmpb
iret
xchg
push
gs
js
loope
jl
in
shr
mov
pop
inc
push
dec
jns
sarl
cli
cs
cmpl
rorl
subb
je
mov
and
inc
pop
mov
ret
cltd
mov
iret
inc
push
mov
sahf
xor
cmp
adc
xor
xor
sub
pop
icebp
call
lret
mov
mov
add
inc
push
or
jo
scas
mov
rcl
push
mov
inc
int
adc
push
push
xor
jmp
hlt
cmp
ja
push
rcrl
bound
cmp
loope
movsb
sub
or
ss
pusha
jmp
sub
mov
decb
jg
call
addl
xchg
rcl
push
test
cmp
sarl
and
call
std
mull
cmpsl
mov
out
into
dec
std
ja
mov
sbb
js
arpl
icebp
loop
sub
cmp
hlt
inc
xchg
add
sahf
add
inc
shr
inc
jns
pop
sub
call
cmpsb
inc
sbb
mov
divb
adc
addr16
jp
lcall
cli
js
mov
adc
jle
scas
icebp
adc
push
je
cmp
jg
scas
movl
int
xor
call
mov
lcall
xchg
jne
push
add
and
push
inc
rcr
test
incl
xchg
call
xchg
jge
out
or
xor
jp
push
nop
clc
xchg
dec
out
sbb
jg
ljmp
jmp
loop
ljmp
jmp
xor
movl
jmp
hlt
sbb
adc
jae
pop
push
pushl
jne
jae
adc
push
ljmp
dec
cmp
negb
add
sbb
bound
sub
mov
int3
in
rcrl
mov
sbb
movsb
movsb
aas
sbb
ds
gs
out
ljmp
popa
jmp
shlb
xchg
inc
dec
add
sub
pop
lods
rorl
dec
pop
aad
ret
xchg
jg
mov
push
push
in
jecxz
jbe,pn
xchg
cli
add
or
jae
ljmp
inc
and
psubb
jns
jne
jl
clc
sbb
xchg
jmp
jmp
pop
mov
lret
inc
lret
outsb
mov
rcll
cmpsl
jg
mov
push
cmp
pop
insb
xchg
xchg
imul
jbe
inc
sbb
or
dec
lahf
and
jecxz
fdivrp
xchg
aad
fs
mov
mov
mov
arpl
test
jmp
cltd
int3
es
lcall
in
test
fisttpll
dec
or
jmp
clc
or
shlb
jmp
lcall
sahf
shll
and
jg
mov
mov
push
ret
and
cmp
fmulp
jb
movl
mov
and
dec
jmp
xchg
adc
or
outsl
out
mov
push
incl
sub
push
lods
cmpl
push
and
adc
int
sbb
lods
jg
lcall
pop
adc
ror
jmp
daa
test
ljmp
inc
fsubrl
aam
dec
add
lcall
xor
mull
stos
jmp
fcoml
mov
dec
sub
movsl
fdecstp
in
stos
cld
hlt
clc
xor
push
aad
or
call
mov
mov
ljmp
xchg
dec
pushf
xchg
jnp
pop
in
fisttpl
popa
xor
push
daa
jle
lods
das
neg
mov
cld
sbb
push
pop
cwtl
jmp
cmp
pushl
add
imul
push
lods
adc
or
inc
movsb
hlt
or
out
mov
pop
push
popf
jns
mov
add
das
add
nop
adc
dec
and
scas
mov
rcll
jmp
adc
sbb
jecxz
push
mov
fwait
cwtl
sub
sbb
pop
mov
and
dec
test
lcall
loope
xor
icebp
scas
cmp
push
rolb
push
fmul
pop
movq
ljmp
clc
stos
out
sub
add
ds
subb
in
push
mov
dec
lret
or
jo
data16
add
mov
push
aaa
mov
sbb
loop
test
dec
stc
fs
incl
das
jbe
insb
jns
fistpl
jbe
pop
ljmp
pop
sar
je
mov
cmp
xchg
sbb
mov
pop
leave
adc
mov
lock
jmp
pop
push
les
xchg
jnp
sub
pop
jecxz
pop
bound
jle
add
sbb
xchg
rcrb
popa
aas
cmpsb
xchg
inc
pop
clc
ljmp
fisttps
int3
or
pushf
ja
clc
sub
incl
test
outsl
pusha
add
pop
adc
clc
pushf
in
rol
test
mov
dec
add
mov
outsl
test
dec
fisttpl
jp
stos
pop
xchg
ds
inc
fdivrp
fcomip
in
or
xor
mov
add
inc
mov
dec
xchg
xor
es
test
es
aas
push
dec
xor
xlat
mov
add
decl
mov
lahf
dec
mov
and
jno
lret
dec
in
cmp
into
jg
scas
fwait
int
mov
jl
sub
imul
fidivs
shlb
push
pushl
cld
sti
int3
add
sbb
lds
dec
push
inc
inc
adc
imul
lcall
stc
clc
adc
cmpsb
mov
cwtl
nop
sbb
xchg
fs
cmp
jmp
ret
iret
ds
outsb
mov
and
pop
mov
stos
call
loopne
or
setl
jne
icebp
lea
jmp
pop
fs
jmp
test
xor
and
add
xor
pop
int
jne
add
call
cld
sub
or
lahf
nop
mov
xor
sbb
mov
test
out
test
mov
fsubr
repz
dec
mov
adc
insl
loopne
outsl
mov
jae
sub
cli
push
lock
sbb
pop
mov
mov
in
ret
test
pushl
and
mov
fidivrs
idivb
xchg
push
dec
jae
decl
dec
push
movsl
mov
cmc
push
add
jp
jmp
dec
push
pop
adc
add
sbb
fdivs
mov
and
popl
sub
ljmp
inc
pop
adc
cltd
mov
inc
sub
cmp
fmul
inc
enter
ds
sbb
and
xchg
xlat
sub
call
xchg
add
jg
jmp
push
mov
pop
inc
repnz
and
fdivrl
pushf
movsl
xor
mov
mov
mov
mov
ret
mov
fidivrs
pushf
cs
ret
dec
xchg
clc
push
push
inc
mov
sub
sbb
lcall
ja
rorb
mov
xchg
popf
jnp
aas
mov
jb
adcb
aad
lcall
or
sbb
xlat
sub
xor
outsb
sub
inc
fdivrs
mov
lds
pushl
mov
outsl
into
or
shrb
cltd
cmp
add
xchg
lcall
aam
incb
inc
lcall
sub
jg
scas
or
stos
and
jo
fbld
and
out
rcrl
out
xor
adc
sbb
hlt
inc
call
stc
push
cwtl
int
enter
mov
loop
jo
gs
jg
ja
adc
sub
bound
xchg
fs
loop
mov
iret
mov
clc
or
jb
sarb
adc
shll
lret
cmp
pushl
lcall
aaa
test
and
test
add
sub
cmc
dec
xchg
lcall
lahf
mov
and
ljmp
maxps
push
ljmp
iret
sbb
cmp
imul
std
xchg
xchg
pushl
adc
push
pop
int3
adc
ss
outsb
and
int
jecxz
ret
push
push
mov
imul
je
scas
push
and
xchg
mov
push
vcvttss2si
push
push
ljmp
leave
fdivrl
test
adc
sbb
pushl
cmp
and
xchg
fstps
cli
and
add
fwait
movsl
xor
outsl
xchg
subb
test
incb
or
jge
enter
movsb
jp
pop
jg
aas
sub
clc
loopne
imul
es
lret
and
or
or
push
repnz
movsl
xchg
ds
push
mov
add
test
jge
int
xor
dec
std
stc
xor
cmpsb
ljmp
rcll
outsl
mov
out
xorl
pop
aad
and
and
ljmp
xor
icebp
sbb
pushf
jb
jae
das
dec
rcr
add
fiadds
les
jo
add
sub
mov
outsl
xchg
push
call
lods
cmp
subb
sub
fdivrl
fcmovnb
incl
cld
jns
jmp
clc
ficoms
xlat
fs
inc
nop
loopne
jg
pop
shrb
pop
ja
sub
jo
pop
sub
movsb
shr
jle
mov
sarb
sub
pop
cltd
adc
mov
pop
rep
cmpsl
data16
ljmp
decl
sbb
cwtl
insb
insb
cmp
and
dec
inc
jae
add
sbb
jns
outsl
jmp
xor
sbb
mov
hlt
cmp
xchg
mov
mov
mov
jo
jmp
incl
push
stos
mov
idivb
xchg
imul
jmp
jmp
out
cmp
sub
sub
cmp
fstps
cmpsb
sub
decl
into
mov
cmc
incl
jl
cmc
call
sub
pop
lock
jns
push
inc
repnz
loop
fstpt
inc
jne
je
xchg
dec
cmp
inc
syscall
fisubl
mov
cmpsb
cli
sar
pop
inc
loope
and
push
jno
dec
ja
sahf
cs
mov
cwtl
fsubrl
sub
pop
push
fstpl
ret
cmp
decl
mov
pop
outsb
pop
adc
test
pop
mov
push
sbb
xor
sti
outsl
incl
push
mov
icebp
cld
lea
adc
inc
add
jg
xchg
rcrb
lods
push
outsb
mov
mov
xchg
aad
xchg
mov
cmp
out
add
fimull
pop
inc
ja
fmull
push
xchg
adc
test
decl
scas
pop
cmc
mov
xchg
xor
dec
in
leave
out
aaa
fisubrl
xor
xchg
ljmp
aam
push
xor
dec
ret
loop
es
push
dec
push
mov
repnz
scas
push
decl
xchg
lds
sbb
inc
xor
lea
jno
stos
inc
xchg
inc
lcall
dec
ja
sahf
daa
js
push
fsubp
cmp
daa
jno
push
jns
lahf
xor
and
imul
mov
and
sbb
xchg
dec
inc
mov
add
xchg
fisttps
inc
xchg
lret
lods
dec
inc
lcall
push
fwait
cmp
mov
or
in
push
hlt
sub
mov
add
mov
cltd
jl
cmp
imul
decl
fstpt
cmpsb
sub
enter
sbb
push
dec
lock
adc
push
fdivrl
fcomip
and
xor
jno
and
das
xor
cmp
das
cmpb
loopne
cmp
dec
mov
ljmp
and
inc
pop
add
iret
out
adc
out
out
or
lds
lcall
ss
or
xchg
mov
rcrb
in
test
xor
leave
push
mov
xchg
push
jno
popa
mov
and
sbb
subl
std
cmpsl
roll
or
pusha
add
mov
icebp
adc
data16
mov
decl
sub
push
mov
lock
or
imul
mov
add
jmp
aam
jns
pop
push
lods
jecxz
cmp
in
mov
fildl
or
cld
testb
add
xchg
ds
roll
jge
and
cli
pop
pop
lcall
pusha
jmp
scas
lret
inc
enter
and
xchg
cmpsb
inc
jmp
jnp
out
push
in
adc
popf
outsb
push
dec
add
mov
and
pop
xlat
xlat
or
decl
faddl
into
filds
lcall
aas
movsl
push
mov
mov
xchg
frstpm(287
sbb
out
xor
test
mov
out
movsl
push
jns
jno
jg
jnp,pn
mov
hlt
push
js
div
inc
ljmp
jbe
je
mov
add
inc
pop
in
call
std
xor
cmp
test
sahf
push
popf
popf
jg
dec
xchg
outsb
sub
mov
inc
fstps
movsb
out
rcll
mov
rolb
pusha
fists
sub
cmpsl
xor
add
fistl
int3
lcall
jb
push
nop
fistl
subl
fidivl
pop
jns
js
push
arpl
pushf
adc
call
lret
pushf
cmp
popa
mov
lods
and
jo
insl
jmp
mov
inc
into
push
mov
jl
push
add
add
jecxz
insb
inc
popf
jmp
call
or
sub
pop
pop
mov
mov
mov
pusha
xchg
int3
je
lock
pushl
inc
or
stos
repnz
stc
cmp
pop
sar
data16
sbb
dec
daa
jg
sbb
mov
or
jp
sub
add
push
aas
outsb
sbb
or
incl
or
cmp
mov
in
inc
or
pushl
cmp
or
dec
leave
or
jp
les
shlb
outsl
ret
dec
in
cmc
enter
mov
push
std
cmp
xchg
addr16
rcl
mov
cmp
fiaddl
adc
not
dec
fnstenv
lahf
jecxz
mov
inc
sbb
mov
adc
pop
jnp
roll
xchg
imulb
cmpsl
jno
ds
pop
adc
pop
cmp
cmp
mov
push
orl
or
loope
popl
add
dec
jl
or
cld
inc
dec
ds
dec
bound
xchg
int
cli
or
adc
jl
jbe
cmc
mov
and
xchg
push
lcall
roll
jne
mov
insl
popf
ss
pop
and
push
fcomps
enter
cld
ljmp
xchg
push
jb
inc
push
dec
jmp
nop
push
dec
repnz
pop
sub
pushf
pop
aaa
ja
incl
cli
mov
jecxz
sub
jge
pushf
pop
cmp
mov
les
decl
fcmovnb
mov
jb
sub
sub
ret
push
daa
lret
sbb
int3
pop
xchg
xchg
aam
cmc
inc
pop
dec
sub
mov
hlt
push
add
fldcw
dec
cmp
decl
mov
pop
xchg
out
xchg
push
idivl
test
or
xor
sbb
cs
rcl
or
icebp
mov
ret
cld
lcall
lds
in
sub
pop
shrb
mov
xlat
lcall
arpl
add
or
popf
scas
add
dec
loopne
cmpsl
push
mov
mov
call
jmp
push
cmp
data16
xchg
dec
addr16
mov
jmp
add
add
inc
out
xchg
pusha
fsubrl
push
xor
xlat
ljmp
lcall
lods
vmovq
out
mov
in
inc
add
sbb
loopne
call
pop
subb
adc
in
adc
lret
ja
xchg
sar
mov
cmpsb
jmp
pop
popf
pop
aad
mov
pop
mov
jle
adc
or
and
mov
rorb
call
decl
or
jecxz
mov
sti
lock
inc
sub
enter
insl
sbb
int3
mov
outsb
inc
aam
jo
dec
jb
inc
push
sahf
test
xchg
mov
aas
lret
mov
xor
aas
push
push
popa
ljmp
jae
adc
je
sub
sti
aaa
fdivs
outsb
dec
sbb
je
inc
call
lods
xor
lods
pushf
loop
mov
rcr
icebp
push
xor
push
xor
pop
sbb
lahf
pop
out
push
or
jg
nop
call
ss
cmp
adc
push
cs
movsb
fisubl
inc
xchg
pop
push
push
dec
cwtl
std
push
jg
call
cs
orl
nop
cmp
inc
fisubrs
add
adc
lcall
jge
push
mov
mov
scas
mov
inc
push
push
pop
stos
jmp
or
jmp
mov
xchg
into
rclb
and
incl
aas
fbld
loope
icebp
dec
ret
clc
pushl
test
adc
arpl
ret
pop
clc
sbb
adc
adc
out
pop
mov
mov
arpl
mov
jmp
shl
push
xor
test
push
push
or
cmpsb
mov
lcall
imul
cmp
arpl
add
popf
or
mov
mov
pop
or
cli
out
cli
incl
lret
cmp
mov
mov
stos
push
je
add
aas
inc
mov
pop
jecxz
push
cs
sbb
xor
outsl
fistps
push
std
fdivr
lods
push
sub
mov
repz
jbe
dec
mov
push
sti
decl
xchg
scas
rolb
mov
fcmovu
shlb
incl
jp
add
movhps
jb
cmp
add
mov
mov
push
sti
cmp
call
sbb
ljmp
sub
xor
and
ja
test
insl
jmp
jns
add
jns
and
xor
fnstsw
lcall
sub
push
cli
inc
jne
cli
mov
fwait
std
sbb
rclb
cmp
ss
jmp
stos
mov
jno
fidivl
dec
pop
mov
fsts
lods
flds
call
xchg
push
cmp
mov
cmp
sti
mov
shrb
and
mov
sub
stos
and
iret
cmp
cmc
test
std
call
mov
pop
das
clc
jne
js
pop
insb
mov
out
es
xor
call
fld
xchg
jo
adc
and
ss
sub
in
mov
pop
push
mov
pushl
shlb
das
sbb
in
lods
sub
stos
jnp
pop
jae
data16
sahf
adc
lahf
mov
sub
dec
lret
sbb
and
adc
xchg
mov
movsl
jns
cwtl
repnz
movsl
push
xor
jl
ljmp
push
xchg
outsb
shl
ljmp
bound
xor
push
mov
add
sub
decl
daa
mov
lods
fsubr
xchg
push
add
sub
dec
insb
sub
jbe
movsb
lcall
add
test
jns
out
in
xor
xor
lcall
out
cmpsl
mov
push
ja
popf
aas
xchg
dec
sbb
lcall
xchg
ds
mov
stos
push
mov
mov
rclb
pusha
inc
sarl
lcall
push
inc
fmuls
push
or
aas
imul
sub
push
enter
mov
xchg
add
jge
jo
pop
adc
mov
pop
mov
pop
push
add
and
add
loope
iret
dec
in
lcall
mov
ds
in
fwait
cmp
xor
jmp
or
outsb
out
pop
out
and
ljmp
sub
hlt
fistps
aaa
cwtl
dec
mov
pop
and
push
xor
add
pop
bound
and
shlb
repz
xor
dec
inc
lea
cmp
decl
xchg
int3
xor
cmc
dec
jmp
andb
mov
cmpsb
mov
mov
push
mov
add
mov
xchg
inc
mov
roll
lcall
push
inc
ds
cltd
push
loopne
mov
out
inc
cld
stos
test
mov
xor
add
outsb
mov
in
pushl
int3
sbbb
call
sub
mov
sbb
fwait
jo
popl
or
xor
mov
pop
data16
mov
mov
add
clc
fbstp
mov
jnp
and
loop
dec
and
sbb
aad
push
pop
lret
ds
sbb
repnz
cmp
incl
xlat
ja
or
or
lods
into
cld
sbb
pop
iret
std
out
add
pushl
xchg
filds
mov
sar
out
mov
push
pop
shll
jb
mov
or
jmp
arpl
jmp
mov
sbb
adc
negl
xlat
mov
inc
dec
pop
in
jmp
mov
cld
cmp
adc
fcoms
lods
mov
bound
mov
cmp
incl
aaa
pop
inc
data16
mov
lods
bound
out
mov
insl
sbbb
lcall
ds
popl
inc
lods
pop
pop
pop
insl
dec
mov
loope
cmp
les
decl
pop
jo
loope
add
gs
icebp
lret
daa
and
dec
mov
inc
push
shrb
push
mov
sub
pop
fucomip
cmp
and
jns
scas
ret
mov
cmpl
call
sbb
jg
mov
loop
cmpsb
cmp
sub
or
loop
inc
push
aaa
mov
ffreep
in
les
and
mov
inc
xor
mov
lock
pop
push
cltd
cmpsl
pushl
stos
sub
and
cmpsl
xor
roll
loop
sti
dec
mov
mov
mov
jmp
sti
xor
sub
jg
sbb
jl
mov
push
cwtl
jmp
in
test
jge
iret
push
and
lcall
ds
jmp
inc
cs
and
jne
aaa
imull
or
sub
inc
mov
outsl
adc
jns
and
dec
loop
push
and
jg
call
push
nop
sbb
sub
inc
xor
cld
movsb
mov
add
cmp
xor
mov
xchg
push
jo
fdivr
cmpsb
in
ja
adc
insl
dec
jnp
cltd
jb
mov
push
mov
push
repz
frstor
or
cwtl
lahf
js
dec
pop
cmp
mov
mov
dec
cmp
popa
xor
xlat
sbb
mov
decl
sub
pusha
jecxz
xlat
inc
dec
pop
jbe
jnp
test
add
in
into
mov
fmuls
push
dec
lods
lods
shll
sarb
shl
sbb
pusha
mov
rcrb
nop
lock
lcall
and
jg
daa
fdiv
dec
xchg
lea
call
cmp
stos
add
sbb
data16
les
shlb
sti
lcall
pop
mov
pop
cltd
scas
and
pop
adc
mov
or
and
adcl
call
inc
incl
xor
icebp
std
add
jge
sub
xchg
mov
insb
pop
sarb
xchg
int3
cmp
lret
lods
fistpl
inc
xchg
jo
js
pusha
push
push
cltd
sahf
bound
mov
mov
cmpsl
mov
adc
aad
fs
ljmp
push
add
out
jne
cltd
dec
icebp
aas
fwait
pop
in
call
inc
in
scas
xor
add
xchg
fwait
sar
movsb
jbe
cmp
push
jbe
jecxz
xor
push
mov
addr16
aas
sbb
ret
xchg
pop
mov
xchg
cmp
mov
pop
mov
cli
in
adc
mov
pop
mov
lcall
int
aaa
mov
aaa
add
inc
push
xchg
or
push
xor
fdivrl
incl
enter
sbb
cld
out
xor
jle
adcb
ljmp
fwait
mov
es
sub
fldcw
and
sbb
decl
test
xchg
insb
mov
dec
xchg
into
popa
dec
sbb
sahf
mov
jmp
enter
mov
mov
lahf
out
sti
mov
or
fs
decl
movsl
inc
es
mov
jecxz
loop
adc
lods
test
pusha
ljmp
sub
inc
in
addl
addr16
loopne
cmp
decl
sbb
push
xor
push
pusha
and
xchg
shll
dec
movsl
stos
sub
push
pop
and
ljmp
jb
gs
mov
and
mov
sub
ljmp
dec
jo
mov
pop
test
pop
jg
pushf
test
xchg
lahf
addr16
popa
inc
inc
mov
call
cwtl
adc
and
mov
fdivs
jge
decb
pushf
adcb
cmp
mov
outsb
jle
sbb
mov
jno
in
int
xor
sti
call
lcall
mov
add
leave
outsl
addr16
movb
ljmp
xchg
push
inc
sbb
out
jb
mov
ljmp
cwtl
adc
rclb
dec
xlat
ret
rorb
sbb
cmc
jbe
int3
lds
into
cmpsb
shrb
fdivrs
scas
add
sbb
add
ficoms
mov
adc
add
cmp
xor
pop
shlb
jmp
scas
int
fildll
sub
adc
cwtl
lcall
pusha
cmp
cmp
sti
mov
xor
lcall
dec
add
pop
jmp
add
pop
xor
fmull
sahf
push
lret
inc
fcmove
xchg
shll
jg
mov
loope
aas
dec
cmp
pushf
push
pop
data16
call
mov
lcall
inc
jp
mov
das
jns
mov
lcall
lock
and
push
pop
mov
add
add
or
outsl
jl
insl
and
mov
dec
mov
decl
enter
sub
fdivs
xor
aad
push
insb
lods
jmp
push
sub
insb
dec
call
jnp
cmpsb
xchg
inc
addb
nop
mov
mov
cltd
jge
mov
lret
mov
iret
rcrl
into
sub
andb
scas
push
dec
sub
iret
jg
aam
fidivrl
shrb
hlt
add
push
es
hlt
pushl
andb
aas
hlt
dec
adc
cltd
mov
or
xor
incl
imul
repnz
push
jge
push
movhps
out
mov
add
ljmp
xchg
enter
push
lods
cld
lods
rol
and
shrb
imul
adc
ret
push
sbb
cmp
push
ret
mov
cmc
lds
adc
adc
pushf
out
and
cmp
mov
orb
dec
and
das
xor
jnp
mov
ljmp
pop
cmc
inc
sti
sbb
inc
xor
sahf
js
cwtl
data16
out
shlb
cli
lock
jg
nop
clc
and
mov
inc
test
mov
xchg
jmp
xor
pop
xor
fildll
loope
jno
jbe
ss
insl
push
add
scas
lcall
popa
and
add
push
test
or
loopne
addr16
shrl
add
sahf
icebp
leave
mov
dec
xchg
aad
andb
push
addb
icebp
lcall
sarl
dec
in
stos
jno
jns
fwait
gs
jns
test
lcall
mov
jg
mov
pop
lods
stos
dec
popf
into
test
arpl
mov
add
pop
add
jmp
rcr
sub
in
jl
lret
fcomip
cli
and
daa
cli
inc
rcrl
out
popf
loopne
sahf
push
daa
inc
scas
cltd
mov
fs
mov
mov
cld
mov
ljmp
fists
mov
xchg
jmp
push
pusha
int3
lret
mov
or
mov
shrb
lcall
inc
fldl
mov
xchg
adc
sub
sub
mov
int
cs
inc
mov
adc
stos
jo
fwait
lds
outsb
mov
fsubs
adc
inc
jo
push
jmp
mov
pop
test
mov
cli
or
mov
cmc
cwtl
stos
mov
mov
and
std
pop
cld
call
mov
inc
stos
rclb
push
and
call
es
je
in
push
mov
adc
inc
dec
pop
lock
addr16
fdivr
out
cli
mov
data16
popa
jmp
mov
cmp
mov
dec
push
mov
xlat
pop
mov
orl
and
loop
push
ds
cli
mov
insb
jne
ja
int3
outsl
xlat
test
jno
cld
ds
movsb
aam
pushl
add
test
sahf
ret
jecxz
in
mov
add
cmp
jge
mov
xchg
repz
cmp
outsl
insb
loop
jle
ret
mov
lods
jmp
sbbl
aad
jmp
sbb
mov
push
and
sbb
mov
add
xor
jg
sub
div
sub
mov
pop
pop
testb
pop
fdiv
mov
add
cld
jae
mov
rcll
in
imul
scas
add
cmp
incl
nop
enter
pop
movsl
shll
int
mov
push
add
int
and
jl
mov
mov
and
jle
jg
addl
jae
nop
jmp
ljmp
push
repnz
out
mov
ret
rcll
or
js
stos
mov
ret
or
inc
ljmp
cwtl
in
cmc
inc
dec
rcrb
frstor
fwait
ljmp
insb
stos
adc
incl
pop
repz
jbe
mov
icebp
pop
into
imulb
xchg
lds
cmp
pop
pop
pushl
decl
repnz
add
add
xchg
push
stos
jnp
in
dec
xor
jb
cmpsl
jmp
xchg
fidivrl
incl
cmp
outsb
in
fcoml
lock
push
inc
rcrb
jb
jle
cmpb
mov
ficoms
jbe
test
fistl
repz
jmp
xor
push
cmpsl
inc
xchg
insb
cli
jae
push
arpl
push
jg
rolb
xor
daa
xchg
rolb
pushf
or
xchg
adc
sahf
adc
lcall
out
cli
inc
test
popf
lock
call
imul
and
andb
leave
mov
mov
xor
out
sub
ljmp
xor
dec
repz
mov
mov
fdivs
jne
jo
jnp
imul
fwait
insl
cld
decl
aad
mov
sub
inc
into
std
pushf
das
pop
orb
ret
fadd
xchg
stc
add
xor
and
jns
cmp
dec
lret
shrl
jmp
push
sbb
mov
lret
dec
jge
mov
adc
jp
xor
cli
add
jg
pop
add
push
enter
and
mov
pushl
fsincos
adc
popf
ljmp
bound
aad
push
cmp
pop
pushl
bound
mov
les
inc
rorb
movsl
xchg
pushl
xor
lcall
mov
add
fstl
jae
pop
cmp
xlat
jg
call
add
push
push
outsl
ljmp
inc
test
repz
in
mov
hlt
xchg
ljmpw
dec
or
jns
mov
in
sub
mov
and
pop
pushl
or
or
cmpsb
in
mov
rcll
or
push
clc
out
call
jg
mov
push
jno
int3
adc
aaa
ret
pop
xor
jp
lock
incl
imull
jbe
push
loopne
jbe
dec
xor
xor
loope
fwait
jg
dec
imul
movsb
clc
pop
sbb
push
aam
mov
iret
jns
pop
mov
dec
orb
pop
repnz
cmp
adc
mov
and
pusha
pop
stos
push
nop
push
clc
jg
sar
jmp
mov
xchg
das
movsl
and
cmp
xor
pushl
adc
jae
sbb
sahf
arpl
out
mov
aad
cmp
in
es
xlat
mov
fstps
orl
rorl
in
ljmp
jbe
or
push
call
sahf
sub
insl
push
lret
dec
pop
adc
das
xchg
pop
adc
inc
lods
ret
cs
xor
lods
sub
decl
jbe
pop
inc
cmp
dec
or
pop
sar
jge
imul
decl
push
cmpsb
rcr
lahf
xor
movsb
mov
and
fsubs
cltd
push
mov
incl
mov
std
lock
js
sub
mov
mov
lcall
add
mov
push
or
cld
cmp
push
iret
loop
sub
enter
les
addb
add
pop
outsl
and
sbb
aad
clc
lcall
xor
xor
idiv
not
inc
fwait
and
jg
test
mov
mov
jb
sub
inc
in
jb
aad
stos
stos
rcll
decl
sbb
orb
adc
mov
cmpsl
cs
arpl
cmc
popa
or
leave
int
inc
inc
and
and
addr16
inc
inc
cmpsl
pop
inc
mov
add
lcall
push
push
pusha
push
xchg
pop
xchg
xor
sbb
call
shrb
dec
test
jbe
mov
mov
mov
icebp
adc
ret
adc
js
mov
cs
cmp
push
xor
mov
inc
push
xor
lods
mov
lcall
xor
add
inc
add
mov
imul
cmp
movsl
cmp
pop
fcmovnb
push
mov
jno
add
addr16
jmp
adc
std
jmp
dec
add
insb
mov
imul
mov
scas
and
rorb
sbb
jg
or
movsl
stos
call
jne
clc
ds
fisubrs
mov
dec
add
in
pop
sbb
pop
cmpsb
inc
push
push
xor
cld
cmpsb
bnd
pushl
loope
imul
ficoms
xchg
ficomps
pushl
add
push
xchg
in
mov
adc
xchg
jmp
cmp
call
daa
bound
xchg
adc
xchg
movsl
xchg
mov
cltd
jb
xor
int
jg
ljmp
push
sbb
pop
imul
pop
push
ret
xor
and
cmp
pop
pop
adc
mov
pop
jmp
sbb
xchg
test
inc
dec
imul
mov
pop
cmc
bound
adc
xchg
dec
and
mov
pushf
pop
dec
jl
and
mov
arpl
xor
fcompl
push
and
cmpsb
cwtl
leave
xlat
mov
jmp
push
xchg
add
adc
sbb
push
enter
mov
ror
inc
xchg
add
mov
scas
sub
pusha
lock
sbb
sub
xchg
jl
incb
jns
filds
sub
sbb
mov
repz
insb
repz
cmp
or
mov
mov
inc
enter
push
sub
loopne
inc
pop
fadds
jmp
adc
or
or
jmp
jge
repnz
icebp
not
jbe
jno
mov
push
sub
negb
jmp
jb
and
mov
inc
in
pushl
and
loop
sub
xchg
stos
dec
lea
ret
pop
scas
jle
test
outsl
leave
in
loope
jno
jo
rorl
dec
xchg
push
sub
jno
adc
add
popf
dec
sub
sbb
in
clc
inc
jo
fistl
ret
popa
lahf
mov
test
sub
cmp
add
int3
push
sbb
pop
fidivs
imul
movl
xor
pop
mov
mov
dec
cmc
sbb
fstps
mov
faddl
mov
dec
loop
mov
mov
adc
shrl
sti
jb
xchg
dec
into
popl
loope
lock
adc
ljmp
sahf
inc
add
or
popf
jns
andnps
push
js
pushf
sub
aad
js
inc
push
sub
or
ljmp
ret
lcall
into
pop
pop
icebp
arpl
addb
fwait
mov
fst
aad
cmp
decl
sub
ss
loopne
sbb
shll
pop
sbb
out
push
stos
test
daa
pop
xor
cmp
outsb
addb
cli
ja
push
aaa
push
xor
add
fdivl
stos
hlt
push
mov
sti
incl
push
add
call
cmpsl
xchg
mov
pop
nop
mov
xor
mov
cli
xor
jecxz
ljmp
lret
imulb
fs
push
pusha
jnp
jg
incl
fbld
mov
iret
fnstsw
repnz
fsub
js
fs
dec
or
test
ljmp
test
pop
xchg
sahf
and
jle
jns
outsb
mov
jne
out
mov
jg
xchg
mov
jmp
push
jbe
mov
jmp
sub
rorl
das
fimuls
popa
mov
jo
inc
jne
pop
jns
mov
sti
push
jae
les
sub
and
and
dec
pop
add
fnstenv
push
mov
jg
sub
sbb
cmp
fwait
mov
rolb
adc
cmp
mov
inc
in
ljmp
pop
xchg
bound
push
packuswb
incl
iret
or
lods
stc
mov
cmpl
insl
cmc
aaa
xlat
xor
sbb
js
aaa
scas
xor
sbb
pop
cld
flds
xchg
cmp
sbb
jno
sub
push
incl
out
push
push
push
mov
push
xor
jecxz
ffree
push
or
xchg
push
sbb
lock
js
jmp
into
subl
into
cmp
nop
jns
ljmp
push
test
repz
lret
scas
popf
push
inc
pop
call
imul
enter
adc
jns
mov
jae
fs
test
xchg
lcall
enter
rolb
lcall
es
dec
je
std
mov
dec
xchg
push
sbb
jmp
push
call
ss
scas
sbb
and
out
ljmp
push
push
dec
mov
dec
pushl
jns
test
mov
leave
add
jns
cmc
cmp
pop
in
mov
sbb
mov
sar
fsubr
cmp
arpl
cmpsl
movsl
cwtl
ds
inc
movsl
test
cwtl
mov
mov
adcb
ret
in
sbb
cwtl
jg
fiaddl
inc
jno
jae
test
jae
cmc
mov
cltd
push
mov
push
outsb
sbb
inc
sarb
arpl
outsb
stos
in
aas
call
xor
xchg
jmp
cli
dec
ret
sbb
orb
xchg
out
mov
lcall
jmp
decl
and
mov
dec
inc
fldl
repz
cmp
pop
hlt
jle
dec
pop
test
adc
sub
jb
jl
faddl
cmp
push
loopne
mov
gs
or
adc
ljmp
pop
js
push
push
filds
inc
mov
bound
mov
not
nop
incl
gs
mov
outsb
test
insl
add
mov
push
pandn
and
mov
fcos
mov
lahf
and
xchg
add
mov
push
pushf
scas
cmc
pushl
fcmovu
out
pushf
pop
jp
push
inc
bound
pop
aas
in
ret
jne
mov
aaa
loopne
lcall
push
sub
add
lock
rcr
mov
loop
mov
inc
ljmp
inc
adc
rorb
pop
mov
das
cli
aaa
std
mov
jno
in
shlb
jp
sbb
ret
lock
decl
sbb
bound
cmpsb
jmp
pop
adc
pop
out
mulb
jle
in
call
outsb
mov
jne
lcall
pop
mov
cwtl
loop
xor
mov
push
outsb
cmp
jno
pop
mov
cmc
outsb
xchg
pop
in
ret
insb
in
aad
stc
adc
sub
test
dec
jne
jb
in
xor
sbb
push
jae
iret
hlt
cmp
cmp
loope
cmp
call
aad
push
pop
std
xchg
jo
dec
subb
xchg
stos
adc
xor
mov
std
jg
adc
jecxz
fildll
push
sarb
iret
ret
shrb
or
imul
aaa
sbb
pop
adc
data16
mov
jne
outsl
mov
test
jge
lcall
pop
sub
pop
pop
pop
sbb
jb
xor
lcall
cmp
sub
call
lds
sarb
out
ljmp
mov
push
xor
adc
sbbb
push
and
aam
filds
xor
repnz
xchg
roll
jg
mov
cmpsb
int
cwtl
sbb
or
call
xor
mov
ljmp
repz
mov
cmp
mov
mov
mov
or
hlt
dec
lcall
lcall
dec
lret
xchg
jl
sbb
pop
lds
xchg
pop
andb
leave
sbb
sub
mov
jecxz
jecxz
jg
fdivl
outsb
add
lods
call
mov
mov
pop
fildl
in
xor
int
mov
mov
mov
xor
addr16
fwait
and
fcomip
cmp
js
out
mov
rcrb
rolb
xlat
sti
jmp
jmp
dec
cmc
jnp
aam
cmpsl
mov
fcmovb
push
jbe
shll
movl
decl
in
and
loopne
int
aad
and
fidivl
and
out
and
push
ret
inc
lock
or
jnp
lock
sar
incl
movsb
in
lods
xchg
lock
sbb
sbb
fwait
dec
jge
lock
pop
cmc
ljmp
xor
gs
add
ss
mov
data16
push
and
jmp
and
push
pop
and
mov
imul
or
imul
arpl
pop
andb
lea
add
inc
bound
insb
and
jg
mov
aad
in
sub
stos
std
mov
push
xor
push
mov
cmpl
ljmp
mov
xlat
add
filds
out
std
ja
andl
icebp
pop
mov
std
in
movsb
cmpb
and
pop
iret
pushf
pushf
mov
jl
cs
pop
cmp
loopne
int3
vpsraw
cltd
jns
xor
adc
pushl
js
jae
xchg
mov
out
fsubrp
fcmove
dec
xlat
adc
ret
mov
call
push
jmp
in
mov
inc
rcrl
inc
hlt
mov
xchg
loope
push
cwtl
add
jmp
testl
xchg
inc
imul
lock
mov
je
mov
es
ljmp
and
or
insl
pop
mov
rcll
sbb
mov
stos
mov
jg
shll
xor
jo
cs
and
rcrb
loopne
sub
lcall
xchg
mov
lock
or
out
mov
cli
fbld
and
mov
call
loopne
ljmp
fld
mov
sbb
scas
ret
dec
mov
sbb
push
mov
ds
adc
test
mov
mov
cmp
jmp
ficomps
clc
mov
inc
mov
out
test
inc
pop
test
mov
fbld
push
idiv
xchg
stos
insb
lret
data16
ljmp
sub
pop
aam
xor
fmull
clc
mov
jp
arpl
scas
cmp
ljmp
ds
mov
into
sub
push
adc
ljmp
cmc
pop
cltd
and
in
les
and
loop
sbbl
jecxz
sub
mov
jg
jmp
xchg
into
and
add
and
xor
xchg
jne
pop
or
cmp
dec
testb
sub
pop
loop
adc
cmp
mov
sbb
fwait
xor
leave
sub
das
jb
pop
jmp
hlt
pop
adc
add
shlb
loope
pop
inc
mov
jae
jmp
inc
cld
add
and
lret
repz
pop
cmp
cmp
mov
or
inc
incl
outsb
and
mov
loop
push
ret
repnz
push
jcxz
andb
lcall
push
cli
xor
std
adc
jnp
testb
xchg
mov
mov
and
jmp
xlat
insl
sbb
push
cmpsb
add
jae
leave
stos
add
ficoms
or
xor
mov
dec
ret
incl
cld
ret
lahf
push
cmp
push
pop
push
in
inc
mov
add
cmp
ret
insb
cmc
fidivs
push
std
sub
fst
jmp
jmp
xor
test
mov
les
call
pop
adc
jmp
and
loope
pop
lcall
xor
mov
pushf
sti
mov
fidivrl
pop
jg
sar
pushl
ret
int3
frstor
jb
test
cmp
and
fists
jmp
mov
lcall
and
xchg
and
fs
add
lock
push
and
mov
xchg
dec
addl
push
xchg
inc
xchg
mov
jecxz
add
mov
push
sbbb
mov
scas
leave
push
adc
dec
pop
outsl
cli
lcall
out
mov
add
mov
and
mov
scas
xchg
test
addr16
jg
xchg
cmp
cmp
imul
mov
push
inc
cwtl
mov
lret
test
cmp
mov
adc
pop
popf
mov
arpl
dec
sub
mov
cmp
jmp
mov
add
icebp
in
lock
in
in
test
mov
mov
fdivs
loopne
incl
repnz
inc
je
mov
les
sahf
pop
jmp
and
call
add
in
repnz
mov
mov
ds
insl
dec
xchg
sbb
dec
adc
push
jno
scas
pushl
cld
mov
cmp
hlt
cmp
inc
xchg
ret
push
xchg
leave
cmpsl
in
leave
push
sub
call
or
imulb
cmpsb
aaa
daa
mov
cmp
inc
out
stc
mov
adc
incl
les
in
test
aad
inc
pop
dec
outsb
push
cmp
and
nop
xchg
decl
mov
in
jo
dec
inc
or
mov
neg
xorb
scas
sbbb
jle
mov
ret
fisubs
mov
ljmp
push
faddp
fcomip
stos
test
lcall
push
jo
xor
jno
mov
push
ret
ud0
jmp
lret
inc
pop
push
out
shrl
popa
data16
mull
sar
jmp
jp
out
ss
imul
loop
jp
and
xor
aaa
cld
jg
int3
jne
iret
sub
xor
pop
fisubs
mov
stc
sub
ret
push
inc
test
mov
mov
jo
inc
jno
lods
pusha
sub
and
imul
dec
jg
cmp
nop
and
cli
jecxz
mov
std
lahf
call
in
sub
hlt
mov
int
outsl
xchg
mov
or
into
cmp
lcall
xor
cmp
add
in
and
cmp
xchg
mov
dec
es
push
mov
add
repnz
out
sti
call
dec
jle
xchg
popa
lock
aas
push
movsb
and
mov
dec
mov
fs
mov
pop
test
jg
push
jbe
push
mov
push
mov
inc
lcall
repz
setg
mov
adc
test
pop
cmpsl
push
outsb
cwtl
lock
addr16
or
xchg
inc
es
ljmp
mov
das
push
dec
jl
stos
inc
stc
rcll
pop
mov
pushl
mov
jge
aam
push
data16
adcl
dec
leave
hlt
jg
push
mov
lcall
pop
scas
mov
cmp
mov
xor
ficoml
and
mov
dec
mov
daa
pushl
sub
in
pop
jne
inc
rorb
push
or
arpl
ss
and
mov
ljmp
scas
dec
mov
dec
xchg
pop
dec
pop
or
loopne
les
ret
fsubs
adc
mov
arpl
cltd
out
aas
loop
scas
jo
iret
sar
add
add
pop
lahf
lcall
pusha
call
push
sub
imul
lret
and
mov
push
adc
dec
sbb
jmp
xchg
repnz
jne
push
test
test
push
mov
pop
xchg
mov
jnp
add
sahf
add
ss
fnstsw
jge
mov
js
jg
push
fwait
jl
sub
sub
mov
jno
mov
int3
nop
mov
pop
push
mov
ljmp
clc
sbb
or
fidivrs
arpl
mov
and
dec
jecxz
and
jmp
lcall
ret
idivl
ss
mov
sub
push
mov
or
push
call
pushl
pop
and
movsl
xchg
add
pop
es
pop
fcompl
add
sub
scas
shl
popf
sub
stos
mov
lock
fchs
pusha
fcoml
pop
push
iret
mov
std
ret
mov
add
pop
fnsave
scas
clc
fildl
aam
pop
push
xchg
cmpsb
push
mov
mov
sub
aam
nop
jmp
aaa
movsl
call
lods
movl
xor
or
jg
int3
adc
push
in
dec
sbb
out
cwtl
mulb
push
and
test
filds
addr16
mov
xlat
in
stc
scas
xor
mov
mov
inc
dec
mov
les
dec
pushf
push
inc
add
sbb
mov
test
mov
cwtl
cmpsl
test
pop
sar
push
xor
pop
fdivl
mov
icebp
inc
inc
jbe
sub
push
adc
icebp
push
xor
cli
lcall
mov
jg
aad
stos
push
xor
xchg
ja
das
fisttpll
stc
rclb
ljmp
mov
jmp
mov
sub
sti
push
clc
ret
data16
cmp
cmp
test
jg
loope
mov
inc
xchg
fwait
add
xor
testl
xchg
cmp
and
shlb
fisttpl
sub
xchg
add
cwtl
ret
dec
cmp
add
adcb
hlt
leave
cwtl
mov
pop
inc
out
icebp
mov
pushl
stc
out
ret
aam
sbb
addr16
or
add
test
jg
push
lret
push
or
lcall
sahf
ret
jmp
clc
popf
movsb
shrl
fdivr
inc
mov
jmp
test
fmuls
mov
mov
fstpl
inc
cwtl
xchg
mov
inc
jg
dec
ds
pop
movsb
loop
scas
test
jae
add
mov
sti
arpl
shlb
mov
jmp
rol
xchg
jge
loope
mov
push
dec
pop
add
dec
lods
fists
push
insb
out
ljmp
ljmp
and
mov
pop
idivb
xchg
or
out
into
sbb
dec
mov
and
aaa
fdivr
xchg
mov
lods
xchg
jmp
pusha
aaa
lret
and
call
add
bound
pop
dec
mov
mov
mov
subl
pop
inc
mov
xor
push
cli
lret
jecxz
clc
call
call
cmpb
stos
aam
popa
stos
jns
jbe
je
cli
daa
jae
jle
add
mov
jb
incl
fbstp
in
add
leave
into
rol
mov
outsb
mov
jmp
out
hlt
dec
xchg
out
test
repnz
mov
enter
add
jne
sahf
test
sahf
mov
pushl
cmp
pusha
mov
out
ja
insb
sahf
rcl
xor
fs
nop
shll
test
cld
inc
std
jg
ret
or
or
mov
loopne
inc
pushf
lods
jp
push
outsl
and
call
lcall
lea
jg
xchg
push
dec
xchg
push
rcrb
push
repnz
push
fcomip
jmp
jg
sbb
mov
not
pop
movsl
inc
loop
adc
and
aaa
lcall
das
cmp
inc
aas
adc
sub
ja
test
rclb
push
sahf
cmp
mov
sub
jge
out
fstpl
mov
mov
test
les
cld
and
cld
in
push
push
int
inc
inc
lcall
lea
sub
xchg
xor
jmp
test
mov
pop
aas
sub
imul
push
lcall
adc
lahf
mov
mov
pop
mov
pop
cwtl
hlt
sbb
sub
roll
push
sbb
xchg
jge
adc
pop
mov
stc
aam
fs
pushl
repnz
cmc
sti
dec
leave
test
adc
cwtl
ds
xchg
or
js
test
decl
incb
mov
mov
fwait
les
std
cmp
movsb
xchg
cmp
jmp
mov
nop
arpl
movsb
mov
imull
mov
lcall
xchg
lcall
ret
pop
lret
das
adc
ja
pushl
dec
push
jecxz
rcrb
push
jle
adc
subb
addb
incl
push
sbb
pop
icebp
mov
and
and
ljmp
jmp
or
mov
sbb
movsb
xchg
jge
add
mov
sbb
mov
int3
clc
fisubrs
push
inc
sbb
std
repnz
xchg
adc
cmp
lea
inc
fistl
mov
sar
pushl
ret
inc
addr16
inc
inc
jno
mov
aaa
jmp
inc
push
test
xor
push
dec
arpl
lret
imul
cmp
and
sub
add
std
jp
aam
xchg
addb
push
dec
ret
out
and
push
cmpsb
bound
call
jnp
dec
jnp
pop
rcll
mov
and
fs
stos
xchg
add
cmp
js
lcall
rcrl
lahf
shrl
out
sbb
fildll
movsl
mov
mov
stos
iret
lret
rcr
mov
decl
push
mov
mov
lahf
and
out
in
pop
mov
inc
mov
je
pop
or
sti
mov
sub
pushf
mov
dec
test
cld
int3
add
sbb
leave
flds
dec
sbb
ljmp
into
hlt
pop
insl
push
and
imul
shlb
lods
lcall
adc
sbb
inc
or
push
adc
ficompl
mov
cmp
push
out
push
icebp
out
bound
mov
pop
mov
sbb
pushl
jbe
sub
jnp
pop
mov
inc
push
loopne
sbbl
mov
int3
ljmp
push
xchg
pushl
jle
ja
popa
push
std
xor
aas
mov
mov
call
lock
lret
jb
cmpsb
mov
mov
in
jg
pop
icebp
incl
scas
std
fwait
cli
push
nopl
scas
and
hlt
jle
incl
lret
mov
push
ret
shl
aad
cwtl
sbb
std
mov
incl
xor
push
pop
lds
lret
or
imul
jmp
lret
pop
mov
fstpl
test
mov
add
insb
pop
jns
mov
mov
cs
inc
xorb
sbb
lock
stos
mov
rcl
dec
aaa
and
mov
pushl
pop
jnp
xchg
je,pn
pop
and
leave
xchg
or
cld
xor
jle
das
es
jae
pusha
sbb
call
out
int
or
or
out
add
insl
les
dec
mov
sti
aam
mov
lcall
movb
lea
push
iret
sahf
hlt
or
mov
mov
or
jb
jae
mov
call
mov
xchg
cmp
mov
out
mov
or
ljmp
fistl
stos
out
nop
push
rcr
rol
mov
sbb
sbb
mov
sbb
pop
xchg
mov
dec
adc
xchg
addr16
stos
je
jmp
mov
test
ljmp
cs
push
loop
sbb
push
push
call
push
mov
pusha
mov
mov
or
mov
hlt
inc
bound
cmc
or
decl
sub
loop
xchg
repnz
notl
scas
and
clc
cmp
pusha
jp
ret
inc
popa
jbe
ljmp
test
incl
test
xor
filds
ficompl
mov
and
imul
subb
mov
pop
mov
dec
mov
aam
les
cmp
push
dec
out
stos
cld
pop
outsb
jbe
mov
jl
xchg
test
insl
nop
cs
setg
je
push
mov
scas
add
mov
ror
xor
scas
lcall
jne
xchg
inc
and
sbb
test
adc
inc
adc
pop
lret
cmp
call
jle
fnstcw
nop
shlb
lcall
call
push
mov
push
cmp
xchg
cmp
mov
fsubrl
hlt
cmp
ljmp
mov
mov
sbb
pushl
ja
xor
and
sbb
or
lock
in
cmp
pushl
cli
or
addr16
xchg
mov
dec
pop
push
xchg
gs
or
mov
add
sbbl
ljmp
stos
sbb
lcall
mov
stos
mov
and
push
jae
xchg
sbb
out
fldt
rcrb
dec
inc
outsl
mov
ds
push
rcll
movsl
mov
clc
pop
xchg
lods
cmpsl
jbe
jnp
inc
rorl
push
push
ror
jl
dec
fstpl
dec
jo
add
sar
fmull
inc
and
jbe
add
add
inc
mov
xor
fnstsw
fmuls
or
mov
dec
xchg
lods
mov
xlat
jns
fwait
adc
sub
jp
inc
ja
daa
sub
inc
cltd
fsts
and
aam
fiaddl
mov
ljmp
push
fcmovb
jp
dec
sub
fadds
mov
pop
fcompl
fs
mov
dec
cmp
fwait
adc
push
or
pop
iret
repz
jmp
push
dec
daa
mov
call
leave
cmpsb
sbb
repnz
jo
call
cmpsl
jmp
jb
shlb
fadd
inc
lret
jno
push
adc
xchg
mov
data16
xchg
pop
dec
jg
jg
out
out
inc
xchg
xchg
mov
sti
sbb
push
cmc
test
jle
jmp
jl
adc
pop
push
mov
in
clc
adc
dec
mov
jecxz
push
or
mov
push
hlt
jnp
arpl
test
mov
std
jmp
push
pop
xor
inc
xor
xchg
shlb
jg
cwtl
cli
fistpll
outsb
imul
subl
xor
in
rclb
cmc
loop
fs
ljmp
cli
cwtl
in
mov
and
out
shrl
mov
js
push
into
out
sarb
icebp
mov
je
adc
xchg
out
mov
jmp
arpl
cmp
push
shrb
cwtl
lea
sub
aad
popf
mov
ljmp
dec
bnd
lret
cmp
call
insl
rolb
pop
decl
xor
xor
outsb
cmp
fucomi
pusha
dec
xor
andb
ss
xor
shl
sbb
cmpsl
jns
mov
pop
mov
lret
pop
mov
inc
or
mov
popf
mov
call
lret
loopne
add
pusha
int
into
movsl
or
mov
insb
fs
cltd
orl
icebp
stc
push
lds
cltd
push
stos
xchg
adc
hlt
jb
jmp
push
scas
inc
outsb
in
push
adc
imul
dec
or
mov
rcl
aaa
js
push
scas
xchg
pushf
outsl
cli
decl
sbb
mov
jle
push
push
lods
cli
cs
adc
out
call
dec
fistps
mov
lahf
mov
push
sbb
pushf
das
popa
fs
sub
or
dec
jg
outsl
pop
adc
test
and
in
mov
jns
pop
clc
aam
call
jae
jge
loop
jg
daa
mov
ficoms
mov
fisubrs
pop
jl
sti
mov
push
call
fmull
incb
pop
loop
sbb
jl
adc
or
xchg
jle
jo
incl
out
scas
adc
xchg
mov
out
hlt
pop
ret
adcl
arpl
mov
repnz
push
arpl
out
popf
loope
stos
add
test
repz
cmp
decl
outsl
mov
push
inc
or
out
filds
sti
loope
cmc
xor
xlat
enter
lcall
pop
pop
test
sbb
je
bound
xor
push
into
rcll
jl
mov
incl
sub
xor
roll
sub
movsb
imul
and
loopne
lahf
adc
pop
jmp
pop
xchg
push
lea
fists
aad
rcrb
jg
mov
sub
cmpsl
ja
loop
mov
sub
dec
lds
aas
jnp
push
xor
pushf
push
and
cmp
stos
sub
dec
pusha
cld
or
andb
ds
lock
xchg
clc
lret
scas
dec
jmp
mov
and
sub
push
cmpl
ljmp
into
xchg
cmpsl
sub
cmp
sbb
sub
in
push
pop
loopne
js
pop
cmpsb
sbb
mov
pop
push
test
jecxz
mov
les
jb
ret
daa
cmp
ljmp
dec
scas
and
fnstenv
pop
in
mov
lret
das
mov
xchg
shll
pop
mov
jge
cltd
xor
adc
aaa
sbb
leave
test
cmp
std
incl
fldcw
addl
pop
fnstenv
mov
ljmp
jae
dec
fs
pop
cmp
jae
cmp
mov
jae
xchg
sti
dec
gs
call
outsb
jno
push
lret
fbstp
fistps
test
cmp
sub
imul
scas
cmpsb
cs
lds
div
out
mov
cmp
mov
subb
icebp
pop
je
incl
add
repnz
add
ret
dec
push
xchg
mov
sbb
xchg
xchg
imul
jne
or
inc
mov
movsb
inc
mov
decl
imul
and
mov
jle
adc
pop
movb
decl
hlt
sbb
mov
adc
gs
pushl
xor
add
dec
xor
ss
xchg
add
jge
lcall
ljmp
sbb
sbb
je
fcmovnbe
mov
cli
add
jae
jge
dec
xor
popa
jl
movsb
dec
mov
push
dec
ret
mov
loopne
repz
decl
out
cmp
jae
inc
sub
push
mov
nop
jnp
xchg
push
enter
pop
jle
insb
js
insl
adc
jmp
pop
sbb
sbb
int3
outsl
clc
fnstsw
fiadds
repz
push
mov
mov
fcmovnbe
stos
ljmp
mov
jl
mov
hlt
dec
clc
sbb
mov
sub
or
or
jmp
mov
jno
sti
or
call
leave
sbb
ficoml
push
or
sub
ljmp
xor
jg
js
cwtl
dec
inc
bound
adc
push
pushl
mov
xor
add
sub
loop
jbe
or
jbe
data16
decl
cmpl
test
mov
lret
data16
xor
dec
pop
pusha
lock
mov
in
pop
in
fs
pop
add
pushf
fs
dec
adc
mov
into
data16
xlat
incl
sbb
lret
aas
add
mov
lahf
aam
out
mov
clc
clc
mov
std
add
mov
mov
stc
push
mov
adc
mov
mov
pop
in
fisubrs
scas
std
mov
push
sti
lret
dec
jno
data16
lcall
out
subb
xchg
xchg
sub
inc
cli
popa
filds
outsl
ficoml
or
clc
mov
lret
dec
hlt
add
ljmp
cmp
mov
push
popf
daa
hlt
je
inc
cmpb
jg
inc
inc
idivl
cmp
sub
cli
jae
cwtl
lock
mov
in
cmp
cmp
loope
lods
dec
cltd
jns
popf
into
push
jmp
mov
test
adc
icebp
fbld
roll
mov
ljmp
nop
in
int3
incl
jl
cwtl
jmp
repnz
imul
cmp
movsl
mov
and
inc
or
cli
push
lods
mulb
xchg
iret
xor
int
fsubs
rolb
daa
imul
dec
xchg
lock
xor
call
lea
inc
xor
filds
call
sbb
les
ret
jge
out
fadd
cmp
add
incl
lods
sti
cmp
fwait
mov
and
mov
jbe
mov
sub
in
sbb
ljmp
stc
test
push
sbb
xor
or
inc
sbb
pop
cmp
jmp
sbb
jne
das
out
sub
push
bound
in
xchg
frstor
or
xchg
pushf
xchg
and
movsb
out
sbb
ljmp
hlt
xor
mov
mov
sbb
lret
out
adc
or
pop
mov
jmp
repz
xlat
sbb
add
jge
mov
das
xchg
repnz
or
inc
imul
inc
popa
jle
jl
or
test
jle
mov
clc
pusha
lret
pop
insl
icebp
dec
popa
push
sbb
outsl
cld
sub
orl
fidivs
aam
out
xchg
xor
mov
sub
ljmp
mov
or
rorb
shlb
sbb
pop
mov
mov
sub
nop
jo
pop
rolb
call
adc
lcall
iret
int
sbb
and
cmc
and
je
add
add
xchg
addr16
xor
mov
jnp
shll
pop
cwtl
cwtl
mov
jg
mov
test
push
imul
addr16
pop
cwtl
push
fstpl
xchg
in
mov
jmp
push
sbb
popa
jae
out
jl
outsb
lea
mov
adc
push
nop
scas
mov
pushl
dec
aam
pop
pop
sbb
fldt
jne
stos
jbe
mov
inc
adc
inc
sbb
inc
aam
in
push
pop
mov
call
pusha
pusha
ljmp
push
or
cmp
pop
sti
loop
pop
addr16
sub
decl
loopne
xorl
sarl
inc
jecxz
mov
popa
sub
jl
xlat
lcall
and
or
out
mov
inc
xchg
dec
stc
sbb
icebp
mov
sti
inc
stc
adc
mov
jmp
cwtl
xchg
mov
pop
dec
sbb
xchg
inc
sbb
out
inc
inc
test
inc
lea
and
jbe
fwait
out
mov
out
ret
inc
mov
mov
lods
insb
sub
rcll
ljmp
cmp
decl
subl
aad
daa
pop
xchg
sbb
or
push
mov
dec
aad
out
xor
cmpsb
pop
inc
clc
adc
pushl
jb
dec
pop
mov
lahf
jg
aaa
fwait
not
decl
xchg
jno
stos
mov
icebp
or
jo
andb
cmpsb
cmpsl
enter
pop
lock
jmp
or
dec
pop
inc
mov
xor
cmp
add
out
in
scas
stos
inc
add
popa
xchg
pushf
inc
mov
in
inc
jl
sub
pop
sahf
dec
or
icebp
inc
rorb
test
lds
push
ret
ljmp
pop
push
js
xchg
imul
mov
xchg
inc
aam
ljmp
and
pop
push
mov
bound
cmp
fmull
or
ffree
lcall
test
push
int
aad
rcll
pop
mov
cmp
test
inc
outsl
sub
mov
push
scas
decl
add
sbb
mov
shr
jns
cmp
jg
or
push
mov
mov
cli
outsb
adc
sub
adc
fildll
cmpl
call
lods
jg
je
out
arpl
int
lods
mov
shlb
push
jne
and
incl
fdivl
in
leave
push
cltd
jl
aad
test
movsb
push
mov
stos
lcall
ljmp
negl
adcl
jbe
outsl
push
orl
mov
hlt
sbb
add
out
mov
out
bound
out
sub
xor
dec
sbb
mov
mov
cmp
xor
jmp
add
arpl
lea
jns
mov
dec
mov
xlat
imul
and
loope
sbb
push
inc
daa
push
mov
lea
mov
leave
cmp
sarb
sti
mull
js
int
rcr
mov
mov
sbbb
lock
lods
cmp
and
mov
sar
push
sti
adc
adcl
arpl
out
mov
jnp
lods
xor
jge
fst
std
mov
stos
cmp
inc
mov
sub
ja
pop
sbb
and
popa
das
cltd
sahf
inc
movsl
mov
test
call
lods
in
jp
lods
popf
dec
loope
push
sbb
fidivl
mov
jg
pop
dec
add
fldl
repz
sub
popa
bound
in
filds
xlat
in
pushf
imul
mov
ret
decl
pop
divl
add
pop
ss
iret
repnz
xchg
fmuls
sti
mov
je
lcall
jle
int3
jb
out
inc
loopne
icebp
pop
sub
push
adc
mov
loopne
add
or
fs
js
jecxz
in
je
and
ss
mov
cmp
dec
insl
cld
outsl
std
fwait
ss
mov
sbb
mov
mov
call
pushw
ss
fs
mov
dec
mov
and
mov
cmpsb
add
sbb
pop
js
xor
cmp
push
out
xchg
lret
out
adc
pop
imul
cmc
ret
xlat
cmp
dec
lret
mov
jne
shll
mov
mov
std
aad
sti
lcall
adc
and
mov
adc
mov
push
sub
cld
clc
mov
and
pop
inc
jl
sbb
sub
fdiv
in
mov
out
test
jge
mov
rep
mov
push
jnp
and
sub
mov
mov
shll
inc
aas
mov
push
out
leave
jg
cmpsl
outsl
rcrb
mov
xor
in
push
loopne
sub
push
mov
mov
lret
scas
cmc
jb
jl
decl
lock
sub
sub
jp
sub
push
incb
std
and
incl
jnp
pop
ficoms
cli
insb
mov
xchg
inc
push
xchg
cld
fs
fsts
mov
cld
jg
mov
xchg
loopne
lahf
xchg
test
xor
hlt
out
dec
add
ljmp
flds
xchg
sbb
aaa
jle
jae
cwtl
scas
movsl
jle
pop
push
imul
inc
fildl
jo
xor
cs
cmpsb
or
lods
stos
loopne
dec
xor
decl
shll
mov
xchg
jecxz
popa
cwtl
stc
stos
jb
shrl
add
adc
decl
rcll
fsub
jae
ret
cmp
mov
inc
call
daa
mov
jg
inc
shrb
lahf
xchg
int
mov
pushf
sbb
stos
pop
js
lcall
pushl
ja
dec
push
jbe
mov
xor
in
test
insb
or
call
ja
cmc
mov
cwtl
out
frstor
push
push
fwait
pop
cmp
daa
insb
ds
mov
leave
xchg
clc
lcall
shlb
or
inc
mov
cmpsb
or
pop
cld
xor
push
incl
dec
add
test
jno
leave
ds
or
dec
pop
mov
incl
aaa
adc
xor
sbbl
or
xchg
call
push
xor
mov
mov
sub
cs
in
call
les
bswap
arpl
add
dec
jg
in
mov
es
in
jecxz
dec
call
xchg
pusha
jne,pt
ljmp
out
push
and
mov
aad
pop
mov
ret
lods
cmc
aaa
or
pop
test
and
xchg
cld
fcomip
scas
fistps
add
or
xchg
scas
xor
sub
pushl
into
cld
adc
sarl
xchg
inc
movsb
mov
sub
lahf
popf
fsubs
xlat
adc
std
pushl
push
pop
xchg
pop
xor
sub
mov
movsb
mov
mov
mov
inc
xchg
mov
popf
mov
fcomps
cmp
frstor
je
mov
movsb
sub
jmp
mov
inc
dec
andb
sbb
adc
mov
or
pop
pop
icebp
lcall
push
and
int
cmp
aas
loopne
icebp
mov
aaa
mov
xchg
pop
cmp
iret
adc
xchg
aas
xchg
jbe
mov
test
out
xor
push
sbb
xchg
add
push
cmp
pop
push
xchg
pushf
jno
mov
cmc
rcrb
fcomip
pop
push
jnp
xchg
pop
shl
out
dec
mull
sbb
sub
fmul
cltd
cwtl
decl
test
inc
leave
testb
add
scas
xor
in
ret
pushf
test
pop
xchg
lock
mov
repz
lret
sub
inc
mov
sti
and
sbb
decl
inc
cmp
js
xchg
mov
loop
lea
loope
mov
jne
aas
mov
adc
mov
clc
dec
incl
add
sub
or
ficoms
std
lea
sub
aas
or
and
sub
add
stos
mov
inc
in
cwtl
lock
add
clc
sub
sbb
push
fisubl
rcr
sar
cmp
repz
je
rcrb
mov
sar
ja
and
rcll
dec
fistpll
xchg
mov
ljmp
lcall
xchg
lea
cmp
jg
inc
dec
jmp
or
push
pop
jno
jbe
hlt
dec
scas
les
call
inc
push
lods
xchg
or
seto
lcall
pop
inc
fldt
jb
aad
test
pushl
add
test
subl
pop
cmc
cmp
mov
outsl
push
popa
iret
sti
mov
xchg
movsb
iret
stc
cmp
push
movsb
sbb
mov
sub
pop
fmul
pop
mov
and
jp
jmp
or
insb
dec
dec
ja
fcoms
outsb
jo
xor
cs
std
pop
icebp
jmp
pop
aad
in
and
mov
fwait
jmp
pushl
push
lods
fs
popa
adc
adc
pop
jge
rep
notb
adc
and
incl
repz
int3
xor
in
and
int3
movsl
pop
pop
ficomps
shrl
in
adc
inc
mov
and
fiaddl
das
push
in
mov
push
pop
lds
mov
comiss
push
inc
push
cld
cmp
cmp
stos
imul
add
in
mov
inc
ret
mov
inc
jg
xchg
push
xchg
sub
pop
shr
out
cltd
xchg
mov
jb
shlb
mov
cmp
loopne
mov
sarl
outsl
test
mov
outsl
inc
cmp
jae
fistps
sub
ret
jg
daa
mov
dec
popa
jbe
ds
fs
mov
fidivs
pusha
pop
out
call
out
dec
dec
cmp
fcmovnu
jecxz
jb
in
mov
mov
jp
test
push
adc
inc
mov
push
dec
imul
jecxz
sub
xor
cli
mov
lock
mov
jo
in
inc
pop
les
test
xlat
xchg
enter
sub
jns
or
mov
dec
cmp
hlt
push
iret
inc
and
jge
push
push
ljmp
fdivp
outsl
add
les
pop
inc
insl
fidivs
dec
scas
adcb
decl
andb
add
fdivrp
mov
fwait
jne
push
lcall
pop
sub
icebp
fcom
jae
loop
push
fcoml
sbb
pop
cli
pushl
and
icebp
js
jo
hlt
fnstenv
stc
sbb
add
jne
xor
dec
cli
idivl
and
add
icebp
lcall
lds
les
xor
lea
push
in
inc
inc
push
xchg
mov
icebp
cli
call
fcom
cmp
push
out
pop
adc
push
inc
and
lcall
pop
pop
leave
adc
and
decl
addb
jg
test
jo
icebp
jg
push
mov
sbb
ljmp
jg
mov
mov
sub
push
xchg
scas
mov
jne
ds
jg
sub
pop
stos
push
jle
rorl
sahf
pushf
jmp
sub
rcrl
jp
sbb
push
jne
cmp
hlt
lods
push
sub
cmc
xchg
popf
jno
sub
arpl
rorb
pop
call
add
add
dec
xor
push
cmp
xchg
lea
dec
pop
jmp
push
or
incl
sbb
sub
sub
iret
add
decl
push
fidivs
mov
mov
fdivs
adc
scas
fimuls
jae
call
inc
movb
push
hlt
in
and
mov
mov
nop
mov
cmpsl
add
or
ret
in
ljmp
fwait
sbb
shl
shll
mov
adc
aas
xor
push
dec
push
es
out
pushf
insb
fs
lds
inc
in
and
scas
pop
mov
addb
pop
cld
cmp
inc
mov
mov
xchg
in
in
push
dec
iret
mov
inc
sub
dec
movsl
addr16
hlt
push
mov
gs
xchg
fwait
lock
jg
cld
add
sbb
fiaddl
jg
mov
dec
dec
xor
fbld
push
fs
lcall
into
cmpsl
movsb
cmp
daa
sbb
in
xchg
es
mov
jno
sbb
push
je
mov
into
sub
lcall
sbb
js
imul
lock
fsubrs
lcall
into
lfs
shll
lret
mov
xchg
adc
cmpsl
and
mov
cmp
push
cmpsb
mov
cmp
push
aas
add
mov
sbb
les
decl
daa
roll
mov
arpl
mov
mov
ljmp
out
xor
mov
push
mov
xchg
mov
mov
push
idiv
mov
mov
dec
push
enter
data16
mov
pop
shr
test
pop
or
shlb
call
mov
or
incl
mull
sbb
out
pushf
dec
jg
sub
xor
jbe
cs
insb
inc
xchg
je
fsubs
repnz
int
mov
out
sti
test
out
jl
lcall
fsubl
movsb
out
adc
scas
rcr
jne
stc
lea
loope
test
lock
jg
decl
mov
inc
lock
add
jno
mov
ret
add
ret
pushl
dec
ret
xorl
pop
xchg
or
shlb
call
xor
pop
jno
ljmp
xor
inc
sbb
adc
sbb
lods
push
out
clc
mov
lods
test
clc
shrl
test
and
orb
lcall
fcmove
rol
xor
cmp
out
mov
decl
cmp
mov
std
inc
stos
test
jbe
into
cmpsb
jecxz
divl
and
xorb
ja
mov
mov
sub
ljmp
or
sbb
add
xchg
repz
pusha
jo
push
and
ss
inc
test
es
and
mov
jecxz
incb
scas
out
idivb
cli
mov
lcall
enter
sbb
adc
sub
xchg
inc
xor
sbb
daa
out
das
rol
outsl
loope
jns
call
lret
jmp
out
jg
add
nop
sub
loop
test
jmp
sub
jp
out
xchg
xorl
pop
push
jecxz
sub
pusha
mov
fisttps
cmpsl
dec
or
loope
push
cmp
jae
xchg
ret
jle
mov
jmp
js
ljmp
push
sub
gs
jg
inc
loop
orb
xchg
imul
bnd
and
sbb
aas
adc
fldl
ljmp
cmpb
andb
cmc
pop
dec
sbb
inc
inc
pop
fwait
pop
ja
call
dec
dec
lret
aaa
ss
or
data16
leave
icebp
movsl
call
mov
aam
xchg
cmp
sbb
jae
jmp
loop
adc
nop
push
out
negl
add
mov
ja
xor
inc
icebp
cwtl
rolb
stc
mov
inc
add
pop
popf
mov
sbb
out
sahf
ficomps
fmul
test
in
inc
fists
sub
pop
imul
ljmp
jnp
xchg
cwtl
clc
js
sbb
cli
shll
lcall
outsb
jmp
push
sub
ljmp
pop
cmc
es
mov
mov
cmp
cmp
push
sbb
es
call
loopne
in
fsub
lock
jl
dec
aas
pop
negl
lret
xchg
cld
decl
add
into
lods
inc
and
sarl
adc
cmc
cli
stos
lcall
ja
push
mov
xor
hlt
lds
or
jmp
adc
not
fimuls
xchg
popf
pop
ja
cmp
inc
andb
sub
pushl
test
es
and
mov
popa
pop
test
outsl
mov
push
pushf
sbb
mov
sbb
imul
sar
cmp
out
sbbl
xor
mov
clc
sbb
cmp
and
jnp
mov
stc
pushl
mov
ficomps
xchg
std
nop
icebp
xor
mov
sub
in
call
mov
cmp
xlat
mov
pop
scas
movsb
dec
push
push
insl
dec
mov
test
pop
icebp
call
sbb
jae
fcomp
inc
mov
cmp
mov
xor
xchg
dec
fs
ljmp
push
add
leave
or
pop
jns
inc
mov
js
sub
out
pop
sub
call
mov
adc
enter
xor
repz
cmp
pop
inc
fcoml
push
sti
sub
add
or
cld
jns
inc
pushl
cli
lods
sbb
fsubl
nop
fisttpl
adc
add
pushf
clc
or
inc
jae
subb
iret
pop
sbb
fmull
or
insl
into
mov
insb
xorl
or
and
xor
push
dec
push
in
jmp
pop
daa
adc
stos
cld
les
and
incl
push
jg
fistpll
mov
shrb
inc
sbb
push
incl
and
or
clc
nop
pop
inc
sbb
xor
mov
push
sbb
lods
mov
sti
rcrl
adc
icebp
pushf
or
hlt
pushf
jle
hlt
loopne
iret
push
aas
lahf
das
xchg
decl
fisubrl
add
fwait
dec
iret
inc
incl
fsts
in
int3
cmpsb
jns
mov
mov
mov
lock
push
pop
cmovp
sar
mov
add
mov
xchg
or
adc
cmp
pop
jge
negb
xchg
jp
adc
and
stos
pushl
outsb
xchg
mov
out
dec
fidivrs
push
add
arpl
add
imul
push
repnz
mov
decl
out
jae
dec
aaa
aas
mov
xor
aas
sti
in
mov
xchg
das
pop
imul
ljmp
fidivrs
pop
lea
or
lahf
test
ret
pop
mov
mov
or
in
mov
incb
inc
mov
cmp
in
adc
dec
mov
mov
or
lcall
leave
pop
jno
jmp
out
clc
fimull
jo
call
jno
adc
aad
xchg
xlat
aaa
int3
add
insb
push
jge
jne
cmp
ljmp
decl
xchg
jl
loop
pop
mov
xor
push
testl
sbb
sbb
ljmp
cli
jae
mov
out
jecxz
mov
inc
sbb
fiadds
in
cmpsb
push
dec
decl
cli
andl
mov
mov
add
mov
lcall
xchg
mov
sahf
nop
outsl
push
popf
inc
add
addr16
mov
jmp
push
insl
int
outsb
hlt
xchg
xor
push
imull
shlb
xchg
repnz
xor
lret
insl
out
movsl
adc
incl
cmp
pop
out
mov
es
cld
sbb
data16
loopne
into
addb
aad
lds
ret
cmp
incl
lock
pop
add
fldt
insb
and
xchg
jecxz
lods
or
rcrl
jae
jmp
xlat
mov
lret
xor
rclb
enter
dec
jae
push
and
clc
les
decl
insb
daa
pop
mov
jne
cmp
xor
sbb
stc
dec
fsubl
mov
fildl
adc
sub
stos
mov
daa
mov
push
jne
jns
in
aam
ret
in
push
jo
imul
cmp
fistps
aas
cmpsl
jle
push
cmp
mov
cwtl
fdivrl
or
inc
lret
fdivrs
dec
pop
int3
test
incl
dec
and
mov
xor
pop
or
mov
cmp
xchg
js
pop
lock
jg
sbb
je
mov
push
dec
scas
push
int3
jmp
iret
jg
add
loopne
nop
lods
mov
fsub
idiv
jge
movsl
push
sbb
inc
add
loopne
cs
sbb
mov
lret
aad
lret
add
mov
pextrw
push
or
fwait
pop
jmp
mov
push
lods
std
in
xor
loopne
dec
loopne
mov
ret
jp
jmp
mov
arpl
mov
popf
xchg
jne
sbb
jge
nop
inc
push
mov
adc
pop
icebp
call
mov
adcb
sub
cmp
inc
push
je
mov
pop
push
in
orb
dec
in
mov
fdecstp
sub
ss
ret
rol
outsl
cltd
mov
pop
pop
pop
push
cwtl
and
rorl
inc
cmpsb
cmpl
push
ffree
rclb
inc
out
std
lcall
outsl
xchg
aam
sarb
inc
push
in
sub
pop
cmpsl
sub
mov
shl
mov
cltd
lods
or
and
jecxz
or
cld
les
push
xchg
add
inc
push
aam
test
mov
int
aas
movsb
xchg
xor
or
shll
add
sub
or
int
data16
pushl
sub
mov
fnstenv
cmp
std
mov
pop
mov
sbb
subl
mov
sbb
fcoml
inc
mull
pop
repz
int3
sbb
cmp
repz
rcll
and
mov
mov
pop
hlt
pushl
dec
and
cmpsb
outsl
enter
xor
adc
push
pop
mov
xchg
das
clc
inc
roll
divl
stos
out
mov
or
mov
movsl
popf
mov
xor
pop
jo
pop
scas
cmpsl
hlt
jb
push
test
dec
pop
mov
std
cmc
jmp
push
lods
push
xchg
pop
iret
dec
dec
arpl
imul
xchg
dec
mov
ja
sar
aam
sbb
in
sbb
fidivl
adc
jmp
pop
in
xor
leave
xlat
sbb
fs
push
scas
dec
cmpsl
lea
inc
jmp
xor
inc
test
inc
mov
arpl
orl
jg
mov
cmp
pop
mov
enter
sub
sub
adc
cmc
incl
and
xor
loop
xchg
pop
jg
push
sti
ljmp
jae
xchg
pop
push
mov
mov
add
fistpl
add
add
xchg
mov
cmp
rorl
and
lret
hlt
rorl
mov
or
out
add
cmp
repz
lret
sub
mov
dec
popa
mov
lea
fcomp
shr
movsl
add
nop
mov
adc
sbb
int3
inc
ds
bound
mov
imul
cmp
pop
add
mov
jbe
aad
insb
mov
fcmovbe
inc
jl
jno
enter
mov
fwait
addr16
push
ljmp
mov
jmp
es
ja
leave
cmovno
loopne
pop
mov
jl
xor
lock
xor
loopne
xchg
add
sub
push
in
dec
loope
jo
test
in
mov
ret
mov
ss
loope
push
fdivrp
ljmp
test
test
mov
test
inc
inc
addr16
or
jg
mov
add
dec
out
cli
push
lods
inc
jnp
std
mov
imulb
inc
ficoml
or
adc
out
pop
inc
jecxz
push
sbb
xchg
sub
mov
sti
jle
call
loopne
mov
add
mov
mov
push
jl
daa
shll
jne
loope
decl
aam
push
cld
dec
mov
popf
cmpsb
and
mov
sarb
jb
popa
decl
jg
xor
mov
js
cmp
outsb
inc
je
pop
js
mov
dec
ret
ljmp
xor
pop
mov
ja
adc
jg
adc
and
mov
sub
scas
int
pushf
mov
cmp
nop
fiadds
pop
add
out
mov
mov
mov
aas
mov
sbb
cmpsb
cmp
cmpsl
inc
inc
mov
jl
mov
lcall
xor
add
cld
cmc
adc
jbe
sbb
ret
rcrb
inc
loop
inc
arpl
push
std
call
pop
inc
lds
cmp
je
icebp
fcmovb
cmp
lret
movsb
inc
nop
xchg
lcall
dec
ljmp
inc
and
mov
lods
daa
idivb
pop
insb
sar
dec
aam
pop
jo
ret
and
sbbb
das
xchg
or
lcall
jge
ja
adc
aam
sbb
stos
push
cs
stos
mov
mov
std
jno
enter
mov
inc
jb
mull
xchg
shl
fnstenv
lcall
decl
aad
dec
shl
and
cld
xchg
mov
mov
lcall
pop
nop
and
push
daa
repnz
shlb
or
sbb
cmp
inc
ljmp
adc
icebp
pop
sbb
push
rep
and
mov
pushl
jns
test
roll
mull
sbb
call
ljmp
jo
rorb
das
test
xlat
test
sbb
or
fidivs
pop
mov
pop
lods
inc
jmp
and
lahf
xor
test
xlat
dec
sbb
mov
jl
inc
imul
call
dec
sti
and
fsts
xor
sbb
psubusw
pop
pushl
sbb
call
xchg
loop
pop
mov
fcmovnb
pushl
outsl
xchg
xchg
pop
jnp,pn
scas
fildll
adc
sub
loope
push
cld
clc
addb
jmp
std
fcomip
mov
push
mov
inc
push
pop
sahf
mov
adc
ljmp
xor
int
test
mov
lods
push
inc
rcll
jmp
dec
mov
movsl
inc
lods
cmp
xor
imul
jne
cwtl
push
out
push
mov
pop
sub
mov
sbb
mov
mov
popf
adc
fisubl
decl
and
push
adc
cwtl
dec
push
outsb
jmp
mov
sub
mov
ljmp
dec
xlat
add
mov
mov
lret
or
js
icebp
idivb
push
jp
push
and
fdivrs
xor
fstl
lcall
je
in
mov
insb
sbb
dec
das
inc
jl
jo
in
jp
jns
addr16
cli
xchg
loope
fdivrp
pushl
sub
stos
test
xlat
std
fisubrl
cmp
outsb
gs
lahf
shl
outsl
xor
pop
fmuls
js
jl
sub
aad
loopne
cmpsb
cld
push
call
cld
lcall
popf
push
les
inc
test
cmp
pop
imul
jne
xlat
add
pop
inc
xchg
enter
int3
pop
call
xor
or
ljmp
mov
call
mov
add
test
mov
lods
push
or
sub
fcomip
call
jge
adc
popa
int3
shlb
lcall
or
call
test
and
and
repz
into
sahf
cmp
rcrb
ljmp
lea
repnz
sbb
push
dec
sub
push
stos
cmp
loopne
lcall
dec
mov
orb
lods
rolb
lock
cmp
cld
sub
je
leave
jge
enter
call
mov
sbb
ljmp
mov
ds
jecxz
adc
push
in
sub
outsb
dec
jns
mov
xchg
adc
xchg
in
xchg
js
add
and
cwtl
in
cmp
push
decl
jp
ss
and
imul
pop
pop
imul
or
decl
div
mov
jno
pushf
mov
dec
adc
adc
sub
out
cmp
lds
cmp
sbb
or
sbb
movsb
jbe
jmp
incl
mov
xchg
daa
xchg
inc
mov
lods
push
or
arpl
jmp
ljmp
incl
fistl
loop
and
mov
jne
lock
gs
inc
in
lods
or
inc
popf
ja
or
cmp
pop
popf
outsb
inc
lret
inc
pop
mov
fistpll
mov
decl
iret
sbb
aad
int3
into
inc
dec
dec
in
xchg
in
andl
pop
sub
out
aad
xchg
jne
mov
pop
push
in
daa
sub
dec
add
cltd
mov
or
pop
cltd
jmp
jnp
ss
cli
jecxz
shll
xchg
sbb
in
sti
sarb
mov
pop
jg
jmp
mov
inc
sub
je
loop
rcr
cmpsl
jge
subl
mov
inc
test
mov
mov
pusha
sbb
fnstsw
xchg
fimull
xor
roll
ljmp
sbb
mov
jp
xor
add
xchg
jmp
lcall
push
adc
xor
call
mov
cmpsb
or
mul
or
test
sbb
aas
std
cld
int
testb
push
out
aam
cli
xchg
mov
sbb
fsubs
out
pushf
lcall
out
pop
stc
mov
sbb
daa
inc
mov
xchg
fwait
cmp
cmp
push
std
call
mov
jl
sbb
pusha
sbb
and
pushl
fcoms
mov
cmp
xorl
and
mov
lds
push
mov
fisttps
or
incl
popf
lret
fimull
sbb
mov
test
cmp
xchg
sbb
fdivs
push
ljmp
xchg
test
imul
mov
daa
and
lods
inc
xchg
adc
call
stc
add
xchg
f2xm1
outsb
xchg
pop
lea
js
cmp
pop
ret
xor
jge
enter
xchg
mov
sub
pop
push
int3
adc
cmp
dec
xchg
addl
xchg
pop
call
mov
cmp
add
mov
fwait
jb
sbb
and
push
cmp
call
jne
push
mov
adc
mov
xchg
add
jl
mov
adc
decl
outsb
rcrl
icebp
cmpsl
push
call
sbb
push
ljmp
or
jmp
lods
in
push
mov
addr16
incl
xor
cmpsl
inc
filds
pop
inc
out
ficomps
dec
pop
mov
int3
pop
jmp
scas
incl
fs
sbb
sub
call
jae
mov
pushl
mov
jne
aas
xor
aam
add
cmp
add
jns
xchg
xchg
in
loope
js
or
mov
mov
imulb
les
pushf
dec
loopne
aam
and
jb
decl
xchg
sahf
hlt
inc
gs
inc
jns
sbb
dec
nop
dec
div
fstpl
out
add
das
shrb
in
adc
pop
dec
mov
repnz
int3
repz
cli
pushl
lods
mov
push
mov
test
pop
push
inc
add
mov
cs
add
pushl
test
loopne
pop
xor
mov
cwtl
shrl
cli
mov
sbb
xchg
mov
mov
cmp
lret
or
xchg
push
pop
aam
ja
jle
or
cmpl
imul
enter
pushf
cmp
clc
cltd
inc
jp
repnz
and
ret
jg
mov
out
push
sbb
cmp
sub
push
stos
add
decl
lods
out
cmp
rcr
fwait
mov
jno
mov
mov
dec
stos
sub
mov
xor
ja
mov
sub
fldcw
lock
repnz
jle
cmpsl
scas
sar
inc
mov
mov
icebp
shrl
mov
outsl
ja
fs
hlt
mov
stos
sub
fldenv
movups
aad
in
aad
cli
arpl
lret
adc
mov
push
mov
in
ja
push
mov
cmp
push
xchg
daa
loopne
out
addr16
decl
stos
or
mov
outsl
mov
pop
or
popa
loope
bound
sbbb
fcos
jmp
mov
jb
sub
cmp
xlat
ja
aad
push
inc
xor
decl
add
mov
xchg
xchg
adc
into
dec
popf
jbe
addr16
imul
decl
and
xchg
dec
push
test
jle
fidivl
ficoms
icebp
imull
hlt
loopne
movsb
dec
into
mov
push
nop
fnstenv
xchg
loop
pop
pop
data16
in
cmp
js
push
loop
call
mov
and
mov
in
lods
lahf
lock
pop
lret
jg
out
sub
push
imul
sbb
movsl
push
lock
inc
pushf
ljmp
mov
dec
rcrl
fsubr
jae
sub
mov
mov
cld
outsl
out
int
rcll
das
mov
pop
gs
adc
adc
es
mov
stos
mov
xchg
jmp
jb
ret
cmp
mov
xchg
add
rcll
mov
arpl
push
jl
xchg
ljmp
cli
pop
loop
and
scas
xchg
dec
cli
xor
jns
pop
rcr
xchg
ret
inc
call
cli
enter
sbb
mov
lds
mov
in
push
push
test
in
and
dec
add
fisubrs
mov
sbb
xor
in
push
or
fildl
mov
or
xlat
rcr
or
xor
popf
mov
call
jl
pop
movsl
call
lret
sbb
push
adc
imul
dec
inc
decb
sub
pop
data16
lcall
pop
imul
lods
cmpsl
int
shlb
cli
clc
mov
out
les
inc
mov
lcall
xor
xor
xchg
cmp
jo
push
mov
arpl
shlb
dec
cld
jmp
mov
cmp
les
divl
cltd
cmp
sub
jecxz
out
xor
decl
and
push
mov
xchg
adc
jmp
dec
push
fadds
cli
fidivl
jmp
xorl
loopne
jo
mov
stos
aam
pop
movsb
mov
or
xchg
outsb
or
add
mov
mov
jmp
xchg
lcall
cmpb
mov
adc
aas
push
pop
fwait
add
decl
mov
fstpt
push
cld
xchg
dec
push
call
and
imul
mov
mov
sub
call
stc
out
dec
adc
and
incl
into
mov
jmp
ljmp
mov
mov
test
jecxz
pop
or
bound
movsb
xchg
js
out
jmp
push
dec
loope
xor
jmp
sti
pop
test
push
mov
push
call
and
cwtl
lcall
sbb
mov
xchg
std
push
cmp
adc
pushl
cli
mov
inc
inc
pop
xor
lods
out
jns
cs
mov
ss
lcall
mov
mov
in
jno
fstpl
das
push
sbb
jg
fidivl
repz
enter
mov
sahf
imul
jb
add
and
loop
and
cmpsl
or
ret
jmp
push
sbb
xor
test
mov
sub
decl
mov
pop
popa
push
fbld
jp
push
adcb
negl
sar
jmp
mov
sub
std
push
xlat
xchg
mov
mov
jns
ret
push
mov
orb
push
fisttpl
pushl
lock
ja
mov
cmp
add
daa
or
sbb
add
adc
cld
dec
rcrb
mov
sub
arpl
jnp
andb
jmp
fimuls
and
dec
fs
jae
sub
test
push
imull
dec
ficompl
cmp
gs
fdivr
ljmp
aad
clc
sub
dec
mov
dec
lock
in
xor
sbb
sahf
xor
mov
sbb
lods
xor
insb
jb
xor
test
lods
outsb
in
loopne,pt
mov
cmpsb
cmp
dec
test
jb
sub
mov
fists
out
lret
adc
push
xchg
push
cld
sub
adc
out
data16
incl
mov
mov
test
subl
mov
mov
xor
test
adc
mov
pop
adc
incl
jno
fistpl
pop
mov
add
mov
inc
je
adc
jp
and
mov
pop
cmpsl
push
popa
inc
add
adc
test
push
addr16
mov
loopne
add
shlb
insl
ret
ljmp
popa
adc
insl
jecxz
inc
lcall
frstor
fistl
inc
inc
aam
mov
js
movsl
imul
cmp
lcall
xor
aad
pop
lock
lods
stos
mov
clc
sbb
pushf
dec
add
test
movsl
and
cmp
cmp
loope
xlat
pushl
inc
cs
scas
lret
xchg
mov
jp
fcompl
iret
inc
mov
jo
scas
cmp
cld
decl
xchg
cld
push
pop
add
repz
stc
cmp
inc
mov
add
mov
adc
test
or
aam
pop
xchg
sbb
pushl
rcll
in
mov
imul
inc
lea
int
add
test
add
lock
fldl
sbb
roll
mov
je
ss
dec
ret
pop
fwait
call
dec
mov
popf
jg
mov
pop
xor
adc
jmp
pushl
cmp
outsb
and
pop
xor
movsb
arpl
xchg
iret
repz
jb
mov
mov
rcrl
mov
fcomip
call
mov
lahf
rclb
push
ss
mov
aas
inc
cmp
decl
push
xor
push
or
lahf
jnp
xchg
mov
outsl
sub
cltd
repnz
in
cs
jmp
mov
jecxz
ljmp
repnz
iret
inc
sub
outsl
add
arpl
jb
rolb
jnp
lcall
popf
out
and
ja
in
mov
add
dec
mov
mov
inc
sarb
lret
and
xchg
sub
test
mov
push
jle
adc
incl
jl
insb
jo
clc
jg
pop
pusha
dec
or
pushf
rorb
in
popa
cmp
ljmp
imul
push
cwtl
cmp
leave
aaa
rolb
lcall
mov
cmp
pop
call
loopne
cmpsl
cmp
mov
sbb
sub
pushl
mov
int3
and
pusha
mov
aaa
iret
push
and
jo
sar
pushl
and
mov
les
fwait
iret
fistpl
andb
push
pop
dec
or
aaa
mov
sub
adc
mov
mov
jg
xchg
xor
sbb
addr16
cs
pop
jae
nop
rolb
mov
lcall
sub
sbb
xor
and
incl
scas
mov
movsb
adc
nop
mov
adc
add
lea
add
test
into
loop
push
bound
cmpsb
idivb
adc
leave
push
jbe
ret
decl
ds
addr16
cli
arpl
sbb
or
pop
jne
push
enter
addr16
stos
push
fs
push
in
repnz
cmpsl
inc
adcl
push
shll
jmp
xor
mov
decb
icebp
mov
add
xor
mov
jbe
in
enter
sarl
aam
repz
rcrl
rcl
jb
jb
jmp
call
je
sub
jnp
js
mov
les
fisubs
out
dec
imul
sbb
mov
xor
or
dec
cmc
aam
stc
add
ja
dec
or
loopne
loopne
inc
ja
mov
fimull
loop
or
ret
out
scas
and
dec
out
std
mov
das
rcrl
and
es
jg
aam
cmp
call
sti
lcall
lea
mov
movsl
dec
scas
xchg
pop
movsl
pushf
xor
mov
cs
push
xchg
lcall
mov
fcmovne
jl
sub
and
mov
xchg
push
pop
jge
pop
pop
sbb
lcall
or
out
add
roll
mov
jmp
call
outsb
ds
scas
pop
mov
into
into
or
or
push
or
sbb
call
mov
mov
pop
jl
mov
or
sbb
add
xor
out
add
lcall
lock
lock
mov
jo
sbb
rclb
cli
movsb
xlat
inc
pop
sbb
notl
or
pushl
mov
adc
jmp
cwtl
add
fidivrs
xor
cmp
inc
sub
add
rcrl
or
jne
les
movsb
fdivl
mov
xor
add
or
mov
push
sub
pushl
adc
nop
int3
cmp
push
sbb
jbe
xor
mov
scas
fidivs
stos
add
sar
mov
mov
mov
lods
mov
pop
push
incl
push
cltd
outsl
fs
dec
out
fcomip
xchg
jno
cs
popa
scas
sbb
fcom
pop
adc
shll
mov
jmp
mov
aam
lcall
stos
ljmp
bound
adc
jae
push
cld
popa
decl
jle
push
mov
or
imul
es
enter
pushl
mov
sbb
or
sub
lods
test
xchg
mov
test
pop
in
pushl
das
ret
mov
gs
mov
push
pop
inc
imul
jno
fwait
ss
fcoms
ljmp
mov
pop
pop
das
imulb
cmp
scas
movb
jp
xor
decl
sbb
pop
mov
sub
int
lea
sarb
fcmovne
lock
xchg
sti
jg
decl
cs
test
add
repz
dec
adc
sub
repnz
mov
cmp
rorb
jge
sbbb
dec
scas
mov
adc
jns
fsub
subl
call
cmp
xchg
fwait
es
jl
lret
or
and
lods
sahf
jg
sahf
add
decl
sbb
sar
xor
mov
push
std
jb
mov
lcall
push
mov
inc
nop
push
pop
push
dec
add
sub
arpl
es
jl
jns
repz
lcall
dec
aaa
add
push
aam
ja
jl
jp
mov
fs
call
jae
incb
adc
inc
in
and
cmp
enter
pop
ljmp
mov
mov
xchg
push
inc
cwtl
cmp
xor
xchg
mov
sub
ljmp
sbb
dec
movsb
jbe
dec
scas
jnp
mov
adc
data16
lcall
repnz
out
xchg
test
xchg
pop
ljmp
inc
add
decl
mov
pusha
mov
adc
ds
stos
pop
adc
jle
ficomps
jmp
mov
mov
fsubl
lea
jmp
fwait
pushl
div
sahf
mov
sbb
xchg
in
dec
cld
mov
frstor
xchg
and
lods
fcomps
or
fnstsw
mov
aam
push
dec
push
iret
adc
test
std
arpl
pusha
mov
cmc
pop
cwtl
mull
push
hlt
scas
mov
pop
pusha
xor
sbb
mov
ds
lds
push
mov
fstpl
mov
pop
mov
xchg
cmp
lock
incl
bound
ret
pushf
push
out
pop
pop
jbe
adcl
nop
into
mov
inc
fsubl
mov
dec
inc
dec
outsb
ret
pop
xchg
movsl
lods
ljmp
adc
cmpsl
cld
mov
lcall
test
in
mov
adc
icebp
sub
or
pop
mov
or
mov
and
rorb
pushf
decb
lods
add
ljmp
jp
mov
fists
push
hlt
insb
rcrb
cmc
sub
jmp
pop
cmp
and
outsb
icebp
test
cmpsl
cwtl
fisttps
push
cmpb
in
imul
mov
sub
jge
sarl
lret
cmpl
mov
or
sub
dec
xor
les
cmp
call
sub
pop
sub
xchg
pmulhw
cli
mov
lret
mov
in
fistl
into
push
out
mov
cld
out
mov
inc
and
or
incl
jecxz
ret
sarb
rcrb
lds
and
and
lds
jg
pushl
adc
mov
out
les
js
hlt
fstpl
sbbb
je
clc
mov
decl
sub
lock
jb
jnp
xor
sbb
divb
mov
cmpsl
and
sbb
or
mov
rcrb
arpl
mov
jecxz
pushf
js
into
movsb
push
xchg
fiaddl
and
jmp
push
cli
stc
shrb
dec
sbb
test
mov
xor
mov
fcomi
mov
insb
iret
call
xchg
mov
jne
xor
push
pushf
pusha
test
loop
loop
ljmp
mov
ds
xchg
xchg
push
out
test
outsl
lods
icebp
jecxz
jge
xchg
and
xchg
add
jns
daa
hlt
jb
add
seto
add
hlt
mov
or
pop
imul
fldenv
movsb
xchg
adc
dec
inc
push
daa
scas
fldl
ret
xor
sbb
nop
sub
nop
jae
hlt
add
xor
xlat
mov
insl
out
iret
aam
testl
mov
negb
mov
lea
add
jb
pop
out
leave
incl
mov
or
or
jmp
out
es
packsswb
and
in
xlat
cmpsl
sbb
rcll
or
mov
adc
xor
mov
repnz
cmp
sub
cmp
push
mov
push
and
xchg
sahf
cwtl
popf
ss
mov
fs
jmp
mov
iret
insb
repz
lahf
push
xchg
inc
xchg
mov
push
in
fs
push
inc
push
and
cli
jmp
add
push
mov
stos
xchg
pop
jbe
pushl
test
rorb
cmp
sub
les
pop
test
cltd
cltd
pop
lcall
aam
xchg
shrl
arpl
int3
mov
mov
subb
stos
mov
mov
incl
sub
inc
dec
cli
mov
xorl
fnsave
jb
and
pushl
cld
dec
cmp
adc
adc
dec
mov
clc
mov
push
mov
imul
xor
push
cwtl
push
dec
imul
add
jae
outsb
mov
daa
adc
pushl
mov
in
imul
je
js
and
out
jbe
stos
fisttps
dec
add
cmp
mov
or
sti
inc
mov
add
cmp
movsb
inc
inc
repz
pop
rorl
jle
dec
hlt
adc
mov
cmp
lds
sub
mov
jecxz
add
popa
xor
push
xor
rorl
mov
int
xor
decl
imul
jae
sub
shll
jl
hlt
cmp
adc
jmp
incl
fiadds
test
add
inc
dec
push
pushl
dec
nop
out
idivl
lahf
pop
sub
xchg
ucomiss
jecxz
adc
pop
sar
xchg
icebp
fs
xor
fmul
inc
stos
loop
dec
and
sar
mov
push
pushf
push
ret
test
xor
cmp
mov
jne
movsl
xor
leave
in
sbb
inc
jle
and
mov
jmp
adc
pop
test
cmp
mov
sahf
inc
decl
dec
push
dec
dec
fucom
icebp
movsl
or
sets
cli
sbb
jp
sahf
pop
std
jmp
mov
fisubrl
aas
and
xorl
adc
dec
dec
rcl
dec
lock
movsl
stos
arpl
add
fistps
stos
incl
loope
rcrl
out
pop
mov
mov
mov
sub
ret
sahf
loope
imul
addl
cmc
popa
push
push
mov
out
outsl
icebp
sub
jae
cmp
pop
jns
rolb
cwtl
mov
inc
jecxz
cmp
jmp
sbbb
sbb
lock
lock
xor
lcall
cmp
adcl
lahf
pop
mov
shrb
add
pushl
pop
mov
dec
ljmp
cld
adc
in
mov
mov
pop
mov
call
cmp
mov
imul
mov
xchg
inc
xchg
and
mov
movsb
and
lahf
out
push
out
mov
stos
and
inc
adc
inc
add
add
adc
std
xor
sbb
mov
mov
lcall
shl
or
ljmp
stos
mov
test
es
jb
pop
pushf
add
shrl
jnp
aam
fs
incl
mov
mov
ret
push
daa
mov
xor
pop
mov
cmpsb
sub
clc
lcall
loop
rcrb
cmp
jle
aam
int3
lret
sbb
call
movsl
sub
loop
ret
sbb
mov
jno
mov
xor
aaa
movsl
jno
cmc
fwait
jmp
lds
aam
pop
xor
xchg
pop
div
scas
xor
lcall
sbb
lret
rolb
xchg
push
sti
dec
mov
mov
leave
mov
or
push
inc
or
cmp
scas
add
test
fldl
leave
adc
mov
sarl
lds
call
das
cld
sub
clc
lret
sti
idivb
ret
in
dec
incl
dec
mov
add
stc
lret
orb
jae
adc
addr16
aad
mov
fildll
pop
rcr
sbb
cmp
das
and
add
xchg
and
incl
test
add
jbe
and
gs
mov
dec
leave
aad
push
lcall
jecxz
andb
inc
subl
fcmovbe
mov
out
or
repnz
rcl
jnp
divl
pushf
lcall
inc
aam
test
cmp
dec
mov
inc
mov
imul
dec
jge
add
filds
mov
scas
movsl
mov
and
mov
das
pop
mov
cli
cwtl
push
mov
fs
jo
iret
movsl
jle
push
mull
and
sbb
decl
cmpsl
test
or
fildl
dec
mov
xor
add
std
test
loop
testl
and
shrb
repnz
into
loopne
call
mov
sbb
lea
push
jg
push
cli
push
mov
cmp
inc
or
lcall
add
imul
adcb
mov
lret
cld
iret
rcrb
pushl
add
xchg
popf
cwtl
xchg
add
or
mov
addl
std
pop
outsb
jno
xor
in
cli
sar
ljmp
pop
or
add
loop
lock
fwait
xchg
fisubl
incl
xchg
sbb
push
ficoms
mov
lcall
into
push
rcr
sarl
inc
push
mov
loope
out
xchg
neg
das
jne
fadds
shlb
dec
lcall
fstpl
sbb
inc
adcl
incl
repnz
or
imul
adc
push
xor
mov
jg
decl
lret
pusha
mov
cld
pushl
pusha
ljmp
in
jmp
xlat
xor
xor
jo
mov
sub
xor
daa
out
icebp
cmp
aas
cli
jmp
add
ss
mov
mov
ret
xor
fldenv
callw
std
ds
sbb
xchg
pop
mov
out
push
mov
push
cmp
add
jne
push
outsl
add
mov
testl
xor
mov
jg
mov
pop
in
mov
sbb
dec
push
mov
fbstp
loop
mov
dec
lods
inc
es
aaa
jb
or
lcall
ja
xor
push
jnp
jp
movsl
js
sar
das
cli
cmp
cli
xor
push
pushf
jns
fiaddl
jne
xchg
loop
or
fstpt
cmc
inc
jae
cmpsb
sbb
push
and
loop
les
push
sti
and
mov
call
mov
push
test
xchg
xor
inc
sbb
jg
pusha
loopne
or
lahf
inc
sbb
xor
iret
fbstp
decl
loope
enter
sub
icebp
es
inc
and
loop
pop
cmp
outsl
clc
cmpb
fwait
js
pop
adc
xchg
in
popf
and
or
mov
inc
adc
pop
test
call
call
outsb
or
fwait
mov
test
in
lcall
mov
pop
repnz
insb
call
xor
jnp
imul
mov
scas
aad
mov
ljmp
incl
inc
scas
push
mov
mov
mov
push
and
loopne
push
adc
lods
int
jge
inc
icebp
iret
push
imul
cmp
lods
jmp
jne
dec
aas
lcall
add
decl
popf
fldenv
mov
aam
cld
pushl
and
ret
nop
rorl
fimuls
repz
and
jg
ss
div
dec
xchg
xchg
rolb
adc
mov
or
jmp
xlat
arpl
xchg
sarb
dec
mov
and
xorb
pushl
jge
cmp
pop
cmc
and
test
lds
jle
xchg
in
mov
call
repnz
and
movsb
mov
test
mov
jno
sub
jmp
xchg
jae,pn
xchg
and
ja
add
notl
mov
lahf
lcall
adc
lock
call
mov
xlat
cmpsb
push
jb
pop
sub
push
xchg
jne
mov
ljmp
jbe
repz
add
into
lods
jno
movb
into
sub
mov
adc
nop
push
xchg
xor
mov
pop
push
clc
jmp
pop
cmovge
adc
lcall
xor
subl
repnz
and
mov
outsl
mov
into
rcrb
decl
adcl
xchg
cwtl
pusha
ds
dec
jb
sub
pop
testb
incl
mov
add
sub
std
mov
push
mov
lods
inc
jno
xor
decl
cld
push
dec
aas
xchg
mov
sub
aam
mov
adc
cli
adc
adc
jg
xor
fmuls
leave
lahf
sub
or
mov
into
mov
and
mov
xchg
mov
xor
mov
lahf
push
adc
push
xor
in
lods
lahf
or
fcmovnbe
imul
mov
cmc
cmp
mov
xchg
mov
dec
pop
pop
lcall
jecxz
pop
jb
aad
cmpsb
fldcw
add
std
push
and
xchg
xorb
imul
mov
out
xor
mov
cmp
pusha
adc
divl
loope
jge
pusha
xor
icebp
cmp
lods
pushf
lcall
push
inc
adc
sbb
data16
adc
mov
xor
es
jb
imul
sahf
mov
sub
mov
push
fucomip
jge
fbstp
inc
imul
mov
into
lcall
mov
hlt
pop
and
ret
pop
popf
dec
ljmp
imul
icebp
mov
sbb
jmp
lahf
test
or
daa
popf
ret
push
pop
dec
test
ds
pop
push
inc
push
mov
cltd
incl
xchg
dec
jge
ret
test
xorl
adc
cmc
cmp
lds
lds
dec
incl
mov
push
out
xor
sbb
mov
dec
or
addr16
pusha
or
lret
cwtl
rcrl
pushfw
mov
adc
jno
imul
stc
jge
sub
xchg
adc
decl
into
or
pop
or
rorb
clc
decl
enter
je
push
fsts
mov
xchg
ret
fisttpll
add
inc
incl
rclb
mov
repnz
push
cltd
add
ljmp
pop
mov
xor
or
ret
stos
xchg
sbb
xor
dec
jo
sbb
std
mov
daa
mov
ficoml
out
push
rorb
std
sbb
daa
dec
cmp
xor
ret
cmp
cltd
add
imul
jg
dec
data16
or
lods
sbb
push
xor
mov
inc
push
decl
loop
dec
add
pop
cmp
imul
cmp
loop
inc
mov
lock
inc
mov
aad
gs
fsts
call
pop
adc
dec
jne
mov
xchg
push
push
les
outsl
xchg
das
mov
xor
cld
lcall
jl
inc
fsubs
pop
sub
cmpsb
inc
ljmp
imul
cli
fisubs
add
pop
aaa
xchg
test
daa
int3
pop
int
js
out
flds
jmp
sub
mov
pushf
adc
pop
sub
adc
push
sahf
fwait
sti
dec
add
cmpsl
mov
jno
stos
mov
xchg
xlat
lahf
shll
mov
out
gs
out
xor
outsl
lods
adc
loop
out
and
sbb
jmp
test
notl
or
mov
push
in
mov
xchg
loop
lods
adc
jae
cmp
push
push
idiv
mov
xlat
daa
fldl
and
add
pop
decl
shll
dec
or
pop
testb
cmp
sub
xchg
inc
pop
ja
pushl
ljmp
sbb
movsb
fs
push
adc
xchg
icebp
pop
sbb
lods
mov
mov
mov
xchg
shll
pushl
hlt
stos
outsl
xor
sahf
repnz
mov
lcall
jmp
cltd
cmp
inc
ds
inc
cli
fsubs
add
xor
mov
or
jo
fiaddl
push
repnz
imulb
incl
ret
cmpb
aam
inc
mov
adc
stc
jb
add
lret
repnz
pop
aad
jge
jl
stc
hlt
mov
jge
jno
insl
jo
inc
fcompl
in
daa
adc
sahf
lret
ret
cmc
or
es
jle
in
decl
lret
addr16
cmc
mov
pushf
out
cmp
xor
inc
test
call
jle
mov
sbb
out
dec
dec
rorl
dec
mov
mov
lcall
call
cs
cld
pop
mov
call
xchg
lahf
add
xor
adc
xor
decl
rorl
in
test
adc
adc
and
popa
mov
sbb
cmp
mov
mov
in
fnstsw
roll
pop
insb
lock
adc
data16
push
int
dec
incl
mov
call
fsts
xor
or
sbb
mov
cmp
mov
push
pop
mov
add
lcall
sub
pop
mov
icebp
in
cltd
incl
bnd
xchg
mov
movb
or
addl
mov
jl
insl
cli
cmp
inc
sub
test
insl
mov
nop
aaa
push
pop
add
loopne
cltd
cmp
mov
push
fdiv
jle
mov
pop
or
insl
repz
inc
jle
mov
stos
adc
adc
addr16
fbld
sbb
jae
add
es
hlt
pop
lahf
movsl
sub
pusha
jle
sub
pushl
cmpb
pop
mov
xchg
jle
fstps
mov
push
xor
ret
ja
or
arpl
sbb
clc
inc
adc
mov
in
mov
fdivl
push
movsb
sbbb
adc
ljmp
mov
in
pop
lret
int3
aam
push
push
dec
jmp
cs
das
sahf
add
inc
call
xor
mov
or
sbb
mov
int
pusha
leave
inc
add
fmull
repz
stos
mov
das
iret
mov
or
dec
xchg
int3
je
dec
and
mov
mov
hlt
enter
rorl
jns
cmp
fisubs
adc
movsl
mov
cmp
dec
nop
ljmp
mov
dec
mov
pop
cmp
add
inc
lea
mov
pop
mov
es
fildll
cmpsl
xchg
add
bswap
pushf
mov
mov
pushl
stos
pop
cmc
ss
into
adc
xlat
int
daa
jmp
cmp
call
jno
repz
popa
and
cwtl
cli
sub
pop
mov
out
pop
xchg
or
inc
jp
popf
outsb
lret
loop
lret
inc
sub
sarl
sahf
aad
adc
fisttps
insl
xchg
adc
mov
push
jbe
lods
add
dec
aad
jb
in
pop
int3
adc
mov
gs
jg
xor
movsl
out
pop
add
mov
mov
dec
xchg
xor
jmp
pop
out
inc
fwait
mov
mov
cli
push
or
and
pop
or
jbe
and
mov
mov
in
pushl
int3
jge
lret
sub
lods
jne
dec
int3
arpl
adc
ds
cmp
inc
push
xchg
popf
cmp
pop
cs
jle
xchg
lods
add
enter
jmp
je
insb
jp
and
inc
and
loopne
mov
jmp
pop
mov
xchg
out
out
add
inc
cmp
aas
push
push
dec
fcoms
adc
push
je
push
xor
test
lcall
frstor
fcompl
add
aas
pop
adc
movsl
dec
or
dec
lret
mov
les
daa
mov
sub
cmpsl
bound
or
fimuls
xchg
cmp
cmp
xchg
push
cld
mov
cld
and
test
jg
out
pop
jb
xor
jo
sahf
and
xchg
jg
lcall
mov
cmpsb
sub
out
cmpb
inc
int3
movzwl
sar
pop
lcall
lret
push
inc
jo
push
sbbl
cmp
adc
sub
mov
mov
mov
icebp
rcrl
sarl
and
mov
les
xchg
mov
cmp
jecxz
icebp
adc
mov
shll
fbstp
lea
mov
lret
inc
jno
push
jl
jo
into
and
jg
adc
cmc
sti
in
mov
loop
pop
loop
scas
cmp
and
cwtl
in
dec
add
mov
incl
jne
lds
mov
mov
and
dec
push
int
dec
fistl
dec
aas
push
add
lcall
pop
jb
push
out
xchg
pop
fwait
xchg
lret
fdivl
mov
cmp
in
jg
push
dec
xor
jb
lods
xor
dec
stos
pop
cmp
cmovno
imul
cmpsb
cmc
jmp
inc
vmwrite
jecxz
outsb
dec
std
add
or
adc
add
jle
es
push
add
pop
aam
cltd
out
mov
xchg
movsl
fisubrs
mov
std
push
inc
gs
cltd
lahf
mov
cld
or
cmp
mov
dec
leave
into
sbb
sbb
pop
call
stos
daa
sarl
aad
dec
shl
stos
push
or
lock
sub
loopne
pop
mov
ljmp
es
sub
andb
imul
mull
in
test
xor
fucomi
fldcw
repz
sub
pop
daa
or
pop
test
xchg
out
jo
lcall
bound
incb
insl
lock
movsl
mov
mov
push
das
and
incl
xor
clc
ret
sbb
mov
mov
out
or
call
push
imul
xchg
xchg
imul
xor
mov
push
xor
push
or
push
out
andl
cwtl
mov
add
xchg
nop
sub
sarb
and
cmp
jmp
inc
outsb
das
in
mov
or
imul
ds
outsb
stc
mov
js
les
movsb
lcall
cmp
pop
adc
lret
lahf
stos
dec
sbb
ljmp
js
inc
decl
jb
test
adc
andb
icebp
and
dec
jg
repnz
popl
decl
cld
into
mov
mov
sbb
xlat
mov
mov
insl
popf
outsl
mov
jne
inc
int
rcrl
movsl
adc
cwtl
xor
push
in
jno
or
adc
repz
call
push
ret
xor
cmp
push
mov
mov
sbb
cld
xor
xor
push
sahf
sbbb
jl
pop
ss
decl
ljmp
cli
loope
and
cwtl
notb
sbb
out
outsb
out
aad
int
test
insb
hlt
jbe
and
incl
aam
rcr
popa
popf
or
pop
iret
pop
add
loopnew
or
push
push
and
push
xlat
sub
shr
add
jge
icebp
xchg
pushl
cmp
sti
pushf
out
cmc
sub
jle
inc
stc
addr16
cmp
out
popa
sbb
lcall
outsl
clc
test
and
jb
jecxz
fs
cmpsb
push
mov
pop
cmp
and
jns
addr16
sbb
inc
push
jp
dec
inc
xchg
push
imul
daa
add
or
sub
fisttps
mov
inc
imul
call
mov
pop
stc
arpl
xchg
aaa
xor
push
cs
ja
std
jecxz
sub
add
insl
sbb
jno
pop
sub
decl
inc
fwait
xor
xchg
fisubrs
popf
xor
pop
sub
adc
and
andb
call
mov
mov
mov
je
inc
mov
inc
data16
pop
xor
cmp
push
stc
pusha
je
cld
push
add
or
xchg
adc
rep
mov
jg
andb
or
inc
jl
pop
add
clc
fcomip
inc
push
cmp
dec
repz
push
add
mov
mov
out
push
mov
rorl
jno
mov
push
aaa
outsb
test
stos
xchg
fdivr
dec
fmuls
ljmp
xchg
fidivrl
pop
inc
ficoml
push
test
add
inc
test
call
stos
ds
push
ds
fwait
iret
add
les
mov
inc
xchg
pop
cmp
enterw
push
dec
clc
mov
or
std
test
in
sbb
push
dec
mov
sbb
sbb
sbb
test
xorl
adc
lcall
dec
lods
adc
in
fwait
les
outsb
clc
jb
mov
aas
pop
lea
pop
cmp
fadds
das
and
dec
mov
mov
cmpsb
jg
and
dec
sbb
adc
mov
cli
or
cmp
dec
push
mov
push
pop
inc
ljmp
sbb
xor
je
sub
xor
xlat
sub
xchg
or
imul
pop
adc
and
aaa
into
push
push
loope
sahf
and
mov
into
jl
les
add
leave
loopne
ljmp
lods
mov
mov
pop
dec
lret
in
lods
or
pushl
and
loop
inc
xor
mov
mov
or
mov
cs
adc
decl
or
pop
out
sub
jg
fists
cli
in
lods
cmpsb
negl
push
mov
aaa
push
movsl
test
sub
mov
sbb
dec
mov
add
sub
das
clc
call
mov
push
mov
cmc
call
jl
mov
inc
ds
test
inc
sub
lods
fcmovbe
push
and
xor
stos
jmp
lret
sub
jp
jmp
fisubs
orl
ror
rep
test
fs
fistps
out
fidivl
enter
andb
cmpsl
inc
push
pop
lret
mov
iret
add
xlat
push
or
jno
push
xchg
inc
popa
scas
adc
mov
sti
pop
repz
lock
jnp
or
push
adcb
cmp
mov
imul
and
call
cmp
mov
push
loopne
fs
fsts
add
or
mov
jmp
aas
icebp
in
pop
in
and
mov
pop
push
daa
sahf
xor
call
int3
in
or
push
and
ds
fisubs
or
mov
xor
ljmp
sar
mov
push
insb
jle
cmp
insl
in
shl
inc
mov
inc
insb
pop
scas
push
dec
stc
ss
mov
insb
mov
fwait
in
push
loopne
mov
decb
xchg
decl
shrb
popf
fwait
cmpsb
lret
xchg
jecxz
or
or
jnp
stos
call
rcrb
pop
jno
dec
adcl
call
mov
call
or
pop
pop
pushf
or
lock
in
xchg
pop
inc
mov
dec
cs
xor
ljmp
or
roll
and
sarb
sti
xchg
sub
cmp
mov
sub
and
dec
inc
out
jl
jno
jle
or
or
call
xor
lcall
pop
je
bound
fs
xlat
or
daa
inc
xchg
pop
stc
inc
mov
mov
aaa
and
mov
sti
mov
cmp
in
lods
xor
incl
leave
xor
inc
loop
xor
sahf
in
out
gs
int
test
push
push
xor
adc
cs
push
push
lcall
imul
fwait
jecxz
loopne
push
je
cltd
jecxz
ret
pop
out
cmp
icebp
xchg
popf
cmp
jmp
aaa
in
outsl
pop
adc
cld
mov
test
mov
outsl
cmp
mov
pushl
shlb
cmpsb
iret
nop
mov
aaa
lret
inc
add
dec
pop
inc
and
sub
std
push
lods
xchg
lcall
mov
mov
push
out
add
outsb
cwtl
ja
incl
mov
cld
inc
repz
jnp
fcoml
mov
or
std
rolb
aam
aaa
push
jb
mov
push
xchg
insl
sbb
jg
arpl
inc
adc
cld
addr16
pop
jl
std
sahf
sub
js
inc
imul
jb
fcomip
lcall
sbb
mov
or
aam
xor
xchg
sub
aaa
mov
stc
flds
mov
and
adcl
arpl
sub
test
pushl
cmp
jnp
adc
sub
or
sub
push
adc
ret
in
imul
jmp
gs
xchg
cli
sbb
aad
aad
inc
mov
sub
sbbl
xor
pushl
mov
outsl
les
mov
movsb
sub
dec
inc
insl
jb
add
mov
out
aas
inc
lret
xchg
jmp
xorl
mov
inc
push
gs
idiv
test
cmp
adc
ljmp
pop
in
pop
test
cmp
xor
cmp
pop
addr16
stos
pop
int
pushl
mov
mov
sub
arpl
out
bound
fisubrl
push
scas
mov
aas
imul
insb
xchg
pushf
inc
inc
jecxz
jmp
jno
xchg
add
daa
repz
movsb
ljmp
adc
imul
mov
jg
test
es
lock
loop
shll
jecxz
mov
push
mov
push
fs
mov
xor
fdiv
add
loop
clc
pop
ja
call
loop
lret
push
mov
adc
lcall
fwait
mov
push
lcall
dec
cmpsb
popa
in
jo
jno
movsl
jns
in
push
inc
dec
fmuls
dec
xchg
dec
sbb
push
int
aaa
std
dec
lcall
shrl
cmp
decl
mov
mov
out
sbb
cmp
jg
pop
clc
nop
and
xchg
cltd
les
adc
jg
enter
out
or
fiadds
or
das
sub
cmp
and
mov
iret
faddl
stos
dec
jge
pop
hlt
das
and
add
jecxz
pop
mov
je
cmpsl
loop
aas
cmp
cmp
push
push
out
in
fisubs
aad
and
sarb
push
push
in
psrlq
fildll
mov
ret
adc
test
xor
aaa
mov
es
into
cmp
jnp
scas
cli
insl
sub
ds
jg
jmp
lcall
aaa
push
outsb
idivb
fwait
psubusb
test
jmp
xchg
jb
in
sarb
imul
int
cmp
or
jg
shlb
movsl
sub
aaa
jle
in
sti
add
out
sbb
ljmp
lock
dec
sbb
jge
push
out
decl
ss
scas
mov
or
imul
dec
dec
loop
ja
pop
jae
cmp
pop
mov
mov
iret
cwtl
jne
push
xor
popa
jo
lock
or
xlat
xchg
xchg
outsl
fldl
xor
arpl
lods
cli
loope
mov
shll
mov
jmp
adc
call
lock
lods
cmp
mov
push
inc
jbe
dec
pop
cmp
inc
dec
popa
and
add
es
mov
cmpsb
mov
aad
push
xchg
pop
xor
out
ret
mov
adc
xor
cmp
xchg
jge
mov
inc
and
ljmp
rorl
mov
mov
xor
cli
jg
mov
dec
mov
daa
adc
clc
subl
push
popa
sbb
cmp
inc
call
insb
mov
pop
lahf
mov
add
pop
ja
and
mov
fisubs
call
test
cmp
jl
and
cmp
test
mov
mov
inc
xor
pushl
xor
and
loopne
inc
push
jmp
movsl
adcl
out
jae
aad
jge
push
push
rolb
jg
das
mov
pushf
adc
add
cmp
cmp
xchg
dec
push
dec
outsb
adc
push
mov
mov
fiaddl
into
orb
push
or
jae
incl
xchg
adc
aas
sbb
and
mov
iret
jecxz
bound
in
pop
ljmp
hlt
int
stos
sub
pop
in
mov
xor
scas
cli
dec
int3
enter
push
stos
rcrb
push
fnstcw
mov
jg
in
or
push
sub
jg
push
decl
inc
jle
sbb
ljmp
cmp
inc
fisubrs
out
repz
lret
mov
push
icebp
imul
add
xchg
addl
in
scas
mov
inc
push
mov
cwtl
mov
loop
pop
pop
scas
lcall
add
push
mov
shrb
loope
ret
dec
mov
mov
jmp
jle
sbb
scas
and
or
and
leave
mov
inc
sub
cmp
ljmp
stos
icebp
repz
inc
mov
in
aad
out
dec
dec
mov
add
jl
incl
pop
cmp
adc
xor
fimuls
mov
sbb
dec
sti
inc
pop
push
imul
pop
lret
arpl
repz
cmpsl
push
idiv
sub
inc
popf
xchg
mov
popf
xchg
dec
xlat
pusha
sar
xor
iret
mov
push
jmp
inc
lret
adc
sti
movsl
ret
mov
or
adc
js
mov
jl
jmp
icebp
loope
xor
stos
sub
arpl
adc
fiadds
fdivrp
call
daa
and
add
sbb
or
aas
xchg
add
ficomps
imul
call
push
cmp
jbe
popa
test
inc
icebp
scas
add
and
push
fnsave
sub
push
stos
out
cli
mulb
and
push
mov
xor
test
push
sub
sub
dec
mov
mov
inc
es
cmc
insb
xchg
dec
scas
xor
popf
gs
dec
lods
add
cmpsb
testb
clc
call
loopne
push
lahf
cmpsb
dec
cld
push
jnp
into
push
icebp
mov
gs
ss
lcall
sbb
xchg
test
dec
arpl
sti
sub
jbe
xchg
call
incl
or
mov
xchg
pop
ror
sub
push
data16
adc
adc
lcall
inc
lods
ret
xor
or
sbb
movsb
enter
clc
cmp
lock
data16
adc
insb
cmp
clc
adc
lock
push
pushl
add
jnp
cmp
cmp
dec
test
lds
push
in
mov
aas
gs
add
xor
shlb
push
jne
outsl
mov
cmpsb
cs
test
daa
je
arpl
pushf
call
inc
out
inc
rclb
dec
loope
sub
dec
addl
decl
dec
dec
in
pop
dec
fimuls
outsl
test
stc
daa
mov
stos
outsl
scas
xlat
test
mov
mov
pop
xor
dec
pusha
sti
sarb
orl
sbb
hlt
in
ljmp
std
jle
int3
mov
sbb
lods
sub
stos
cmp
test
incl
cld
pop
jle
scas
les
insl
sbb
in
repnz
int3
es
push
lret
mov
imul
je
popf
leave
fstl
fisubl
mov
call
scas
daa
jns
cmp
das
rorl
cld
push
cmp
or
leave
std
int3
popf
xchg
pop
ja
xchg
jmp
mov
mov
popf
push
shrl
pop
not
fisttpl
call
insl
push
xchg
push
lret
fcompl
incl
cld
push
add
insl
jp
in
loop
pop
sbb
mov
mov
pushl
mov
or
call
jae
sub
jno
or
cs
sub
div
xchg
leave
mov
lcall
fs
add
pop
cmp
out
xor
push
cmp
insb
and
add
decl
push
push
test
insl
add
movsl
jno
fisttps
cs
dec
add
aaa
and
ljmp
push
notl
mov
cmpsl
cmp
and
loop
mov
xchg
jmp
mov
jo
sbb
int3
fbld
popf
call
dec
repnz
inc
add
push
sub
and
cltd
stc
lods
mov
inc
mulb
aad
movb
jge
mov
jp
sbb
cwtl
push
daa
mov
xchg
push
mov
pop
lock
in
iret
jne
fcomps
xchg
test
repnz
fdivrl
decl
in
out
clc
push
pop
sbb
or
loop
xchg
js
mov
mov
call
ljmp
cmpsb
push
ds
gs
out
pminsw
jno
push
nop
xchg
sar
scas
call
ficoml
lock
hlt
dec
mov
cmp
ljmp
lcall
push
cmp
cmc
adc
std
std
cmpsl
inc
inc
out
in
push
sbb
lcall
push
sub
sbb
pop
or
mov
jmp
mov
ds
jae
xchg
rorb
loop
ljmp
cmp
sub
adc
not
scas
pushl
and
in
cltd
popa
pop
mov
xchg
test
push
fisttps
aad
scas
movsb
adc
aaa
push
sub
sbb
decl
cmp
clc
arpl
out
push
cmc
inc
pop
adc
mov
mov
xor
clc
push
pushf
or
sub
and
roll
packssdw
sbb
mov
cmp
clc
andb
out
shll
cs
pop
cmc
xlat
call
cld
cmpl
rcll
dec
pop
mov
cwtl
insl
loop
jg
js
mov
inc
mov
iret
fimuls
cmp
negl
ret
sub
push
ud0
ljmp
pusha
int
ja
push
push
lods
ja
mov
or
push
jnp
daa
sbb
jmp
daa
loopne
cwtl
cmp
fwait
xchg
mov
nop
sbbb
mov
jp
dec
mov
loopne
pushl
lcall
mov
pop
sahf
push
addr16
incl
mov
jno
xchg
inc
xor
adc
xchg
je
adc
sbb
rol
and
mov
mov
dec
pop
add
movsb
xchg
mov
lcall
sbb
cltd
adc
add
dec
fs
aad
nop
inc
test
mov
nop
sbb
in
mov
popa
ss
jmp
add
add
incl
push
push
sbbb
cmp
cmp
addb
lcall
mov
fsubs
and
mov
jl
dec
pop
sbb
cmp
insl
sub
mov
in
xor
fsubr
add
pop
mov
out
fsqrt
fmulp
dec
arpl
xchg
mov
adc
out
test
xchg
cltd
cmp
jmp
jne
xchg
lea
inc
pop
mov
ljmp
lds
stos
leave
push
jecxz
lods
pusha
or
popa
pop
addr16
ljmp
and
sti
jl
mov
arpl
mov
mov
rcr
aam
outsb
loopne
sub
rorl
sbb
push
imul
rorb
pushl
std
pop
adc
mov
shr
out
jle
dec
cmp
aas
cmpl
dec
cli
pusha
add
add
or
out
test
movsb
push
jb
test
inc
push
mov
jbe
test
inc
dec
test
andb
leave
movsl
mov
sbb
out
fnstsw
add
push
shlb
sub
fs
ss
pushl
in
sub
fcmovu
pop
push
cmp
jle
out
inc
lea
xchg
mov
pushl
adc
push
pop
jmp
stc
bound
mov
jbe
outsl
add
negb
sub
jmp
jle
and
mov
jnp
jp
push
jne
rcr
nop
push
cmp
fwait
adc
mov
adc
push
lds
in
push
int3
add
mov
pushl
lret
push
fnstenv
cwtl
xor
pop
int
loope
dec
mov
stos
or
ljmp
incl
ret
imul
and
dec
inc
push
sub
and
cld
adc
adc
cmp
pop
add
mov
mov
push
xlat
xor
cli
insl
push
inc
shrl
out
lcall
cli
mov
adc
jmp
push
dec
inc
and
enter
into
mov
cwtl
dec
xor
and
sbb
movsb
cmp
add
les
fisttpll
sbb
ret
aad
jg
mov
xor
sarl
scas
pop
shll
sti
enter
xchg
sbb
pushl
push
clc
inc
scas
fmul
mov
pop
cmpsb
push
cmp
lock
dec
fcomip
jmp
push
andl
rcl
lahf
outsb
xchg
cmovp
cld
sub
ljmp
fxtract
icebp
stos
mov
in
dec
dec
cmp
or
stos
jge
cmp
push
pushl
jge
shrl
inc
push
pop
mov
iret
mov
movsb
movsl
adc
or
fildll
mov
iret
mov
cmc
or
test
out
pushf
das
xchg
lcall
and
stos
jmp
pop
push
cltd
out
jmp
xor
push
or
data16
and
in
stos
jae
cmp
shrl
mov
inc
pop
pop
cmpsb
into
jae
and
es
filds
addb
addb
or
add
dec
mov
incl
and
fisubl
mov
add
insl
sbb
js
push
jg
add
pop
sbb
test
inc
fcoms
fimuls
stc
inc
dec
orb
mov
lahf
pop
mov
add
push
or
and
jle
roll
inc
add
imul
xchg
push
or
call
mov
jno
mov
jnp
xchg
cld
int
das
movsl
push
daa
add
xchg
dec
and
cmpsl
push
and
xlat
mov
and
movsb
push
movsb
inc
scas
push
incl
lods
push
and
stos
push
and
push
test
and
push
icebp
in
std
imul
push
inc
pop
pop
add
fistps
sbb
mov
sbb
add
mov
xlat
mov
add
adc
xchg
jg
adc
mov
insb
or
lret
imul
sti
dec
mov
clts
imul
ja
bound
push
add
fnstenv
mov
pop
stos
pop
stos
mov
dec
jb
ss
add
jo
insb
jge
push
mov
push
shll
add
mov
jo
outsb
pop
shrl
mov
push
ret
in
xorb
and
jge
fisttps
sub
test
fiadds
mov
jbe
inc
jge
movsb
push
add
inc
stc
mov
fdivs
push
mov
push
divb
add
jne
push
aam
push
loopne
ret
add
mov
sub
fidivs
push
pop
dec
add
ja
jo
popf
push
data16
inc
xchg
jge
pop
add
push
push
shlb
lret
mov
int
stos
aas
add
ja
push
push
cmpb
add
ja
push
jge
fcmovnbe
jbe
xlat
ja
js
push
jns
sub
in
cmpsb
push
jp
jp
inc
push
fidivrl
sarl
push
lods
fmul
ja
fldl
ret
in
adcb
nop
sub
xchg
sub
xchg
mov
fstp
in
xchg
sub
xchg
xor
xchg
fcmovnbe
je
push
setbe
xor
mov
ss
aaa
push
lcall
push
cmp
in
flds
pushf
cmp
popf
xchg
popf
aas
fimull
inc
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imulb
movl
cmp
repz
lock
hlt
clc
stc
cli
cmp
repz
cld
std
incb
jecxz
arpl
xor
jae
add
imul
push
add
pop
add
xor
pop
add
test
add
mov
jb
mov
out
out
pop
push
add
or
add
add
mov
push
or
or
test
test
and
or
or
pop
cmp
pop
pop
adc
int
cmpsb
pop
adc
lods
add
pop
and
femms
lods
lods
pop
push
fcmovne
mov
add
scas
insl
shrl
lods
pop
push
push
scas
lods
push
and
pop
cmp
lods
adc
sbb
jbe
scas
sbb
scas
scas
scas
scas
int
enter
mov
mov
and
mov
pop
push
mov
and
and
dec
and
notb
enter
mov
mov
and
mov
sub
push
and
mov
pop
sub
pop
sub
mov
mov
incb
sub
lret
and
mov
repnz
push
es
xor
pop
aas
cmp
jbe
cmp
pop
in
ljmp
fdivs
cmpsb
add
mov
pop
xor
xor
push
or
add
jg
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
sub
das
pop
push
push
xor
adc
test
dec
inc
das
inc
inc
bound
sub
incl
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
pushl
cmpsl
sub
xor
pushw
dec
dec
cmpb
jo
mov
xchg
incl
mov
insb
andb
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
ja
jns
dec
xchg
pop
push
bound
js
imul
cmp
je
and
sarl
bound
add
imul
mov
pop
pop
scas
and
dec
mov
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
mov
mov
ja
jb
cs
xor
mov
add
mov
mov
and
push
imulb
out
mov
xchg
jo
push
inc
shrl
lods
mov
mov
inc
add
push
add
xchg
jp
inc
push
popf
inc
mov
aaa
add
fcmovnu
iret
cld
xchg
jno
lret
push
bound
mov
mov
popf
addr16
inc
inc
push
sahf
mov
insb
add
gs
pushf
data16
xchg
outsb
add
xchg
xchg
pop
push
data16
cmpsl
mov
push
dec
push
movsb
jae
add
jb
das
pop
mov
shll
outsl
pop
xlat
pushf
push
rorb
add
xchg
insl
cs
sti
fwait
imull
pop
into
dec
mov
add
ja
sahf
jbe
notb
fdivrs
sahf
push
add
add
ds
push
add
mov
int
and
es
js
mov
es
test
shrl
insb
pop
outsb
push
outsl
or
mov
push
ds
mov
fsubl
jge
push
jg
fiadds
fcmovnu
mov
call
mulb
mov
in
mov
add
bound
out
arpl
loopne
jnp
testl
add
jb
push
std
jbe
out
in
push
jle
or
jecxz
or
insb
push
fnstcw
aad
push
divb
fildl
push
imul
adcl
mov
sbb
sbb
sbbl
test
test
sbb
mov
test
in
mov
push
xchg
nop
and
push
out
xchg
in
xchg
lock
sub
sub
sarl
xor
imulb
push
xchg
lods
insl
mov
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
push
imul
cmpsl
push
cmpsb
scas
jo
sbb
movsb
sahf
add
rolb
into
shll
lgs
int
mov
rcl
cmpsb
sarb
sarl
push
aad
jle
data16
add
loopne
adc
addr16
dec
movsb
xchg
lods
add
je
dec
add
inc
daa
add
mov
das
in
cld
femms
or
or
or
es
stc
jnp
pop
push
adc
push
add
add
sti
test
fstpt
sbb
add
mov
adc
test
push
mov
and
sbb
sbb
scas
mov
push
add
and
outsl
mov
pop
loopne
ds
mov
aas
pop
lods
xor
scas
add
adc
or
aas
aas
and
adc
add
repnz
cmp
xchg
mov
sbb
inc
jbe
subl
inc
jle
cmp
scas
xor
dec
mov
jns
dec
aas
adc
ds
ja
dec
xor
dec
inc
test
pusha
out
add
mov
lcall
pop
mov
ds
lods
stos
test
cmpsl
cmpsl
pop
mov
cmpsb
cmpsl
add
test
mov
sahf
add
fistpll
dec
xor
sub
sub
sub
sub
fildl
lods
add
dec
and
inc
mov
cmpsb
cmp
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
nop
cltd
jg
decl
xchg
mov
nop
test
insl
popf
mov
sar
idiv
jge
jns
jns
jle
addl
jo
outsb
pushf
sti
addl
jmp
imul
rolb
shlb
add
add
out
or
outsl
jl
push
add
cmc
repz
dec
xor
aas
add
jg
xchg
pop
cmp
test
add
mov
add
mov
push
mov
cmp
lahf
add
cmc
repnz
outsl
fldt
add
pushf
add
mov
push
in
lcall
bound
push
arpl
mov
push
jg
rolw
lret
js
into
xchg
add
idiv
add
mov
mov
test
scas
xchg
js
insb
mov
out
loopne
divb
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
fcmove
xor
es
push
lret
loopne
push
inc
adc
into
fdivrp
mov
ret
out
xchg
add
test
cwtl
int
add
jle
jge
subb
add
in
sbb
dec
dec
dec
dec
dec
add
or
pop
or
add
push
dec
or
adc
cmp
adc
outsb
outsl
jg
dec
or
add
push
adc
add
nop
psadbw
dec
pop
pop
cmovg
inc
push
dec
sbb
xor
dec
and
adc
sbb
dec
out
dec
dec
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
jmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
sub
push
add
xchg
dec
push
lods
mov
insb
cmpsb
out
xchg
mov
mov
push
add
outsb
mov
or
mov
outsl
add
pop
mov
nop
jae
les
sbb
sbb
cmpsl
pusha
add
adc
xchg
into
incl
xchg
jmp
imul
mov
incl
adc
mov
pop
mov
es
mov
jmp
pop
stc
sysret
in
lock
or
add
push
jg
or
ret
pop
sub
loopne
aaa
outsl
sbbl
push
sbbl
lahf
sub
pop
sub
out
cli
mov
cli
filds
add
or
jg
bound
packuswb
and
adc
or
adc
pop
add
fildll
sti
mov
loopne
xchg
sbb
scas
inc
popa
mov
inc
dec
sti
jg
or
mov
xchg
ja
xor
push
cmpsl
idivb
or
push
cld
jg
mov
mov
mov
jg
std
push
adc
add
inc
and
jg
or
out
jg
and
push
dec
pop
jg
xor
jle
xor
add
inc
jg
and
sub
ljmp
incl
xor
push
inc
incb
lret
sbb
data16
enter
mov
dec
add
or
adc
jg,pt
add
pop
and
fsts
add
shrb
and
decb
mov
sbb
lret
sub
jl
sub
in
jle
lret
imul
inc
addb
addr16
inc
push
pop
test
sbb
dec
call
addr16
add
inc
sbb
jbe
xor
inc
pusha
scas
data16
or
pop
push
jg
adc
pop
adc
incl
sbb
adc
jg
bound
test
ss
pop
lods
pop
shlb
dec
jg
inc
pop
rolb
jle
pushl
jmp
stos
pop
testb
stos
pop
pop
pop
add
daa
push
aaa
pop
pop
jbe
sub
aaa
cltd
roll
add
adc
mov
jle
sbb
jmp
xor
test
push
dec
xchg
push
out
mov
add
mov
mov
comiss
daa
push
arpl
pop
fldt
pop
push
mov
arpl
out
jp
test
mov
jp
adc
lcall
mov
ljmp
dec
dec
test
test
inc
test
push
lcall
dec
out
mov
fnstenv
add
push
jne
cmpsb
ja
ja
push
jbe
test
insl
adc
push
jnp
push
jp
cmp
decb
js
dec
jbe
pop
add
mov
fdivrs
cmp
je
push
outsb
adc
test
ljmp
call
ljmp
inc
int
popf
inc
outsb
ss
pushl
adc
call
adc
mov
mov
and
neg
xchg
adc
mov
aaa
and
pop
jbe
sahf
inc
out
inc
enter
push
xchg
cs
aas
popf
inc
push
pushf
cmp
cmpsb
test
mov
xchg
xor
xchg
xor
sub
call
push
nop
daa
ss
cs
fs
dec
mov
xor
int
xor
call
call
inc
or
mov
daa
aam
std
pop
fnsave
xor
inc
out
push
add
sahf
movb
xor
jbe
ss
bound
mov
push
add
inc
jb
pop
ja
dec
push
mov
movb
and
pop
ja
testb
pop
aaa
mov
add
add
and
mov
push
inc
adc
xor
mov
pop
and
add
adc
pop
pop
pop
nop
cmp
or
cmpb
adc
jns
xlat
negl
orl
lea
push
xchg
inc
and
cmp
lock
jne
lcall
pop
and
icebp
imul
add
sub
decl
inc
dec
out
pop
dec
mov
mov
fstp
inc
and
pop
hlt
fimuls
push
push
sbb
xor
inc
and
mov
push
dec
add
std
hlt
mov
and
add
fdivs
adc
or
push
incb
xchg
adc
mov
or
mov
sub
daa
cld
pop
das
pop
push
shlb
cld
jmp
inc
iret
dec
dec
pop
cmp
in
push
pop
daa
std
out
or
orb
or
lcall
or
push
lds
mov
test
ds
ljmp
or
push
les
jmp
xor
test
lcall
sub
decl
inc
inc
pop
decb
lea
and
lcall
sub
ljmp
mov
add
mov
dec
inc
xchg
or
mov
xor
push
iret
jle
adc
aad
cltd
mov
mov
call
push
movsb
test
add
decl
pop
pop
add
cwtl
sbb
incl
inc
shrb
sbb
ljmp
lret
sub
popf
mov
push
std
ficoml
dec
mov
out
adc
test
test
call
adc
and
mov
lgdtl
popa
repnz
push
call
jg
outsb
mov
incl
adc
xchg
loop
jae
mov
push
test
push
addr16
sbb
gs
in
rcll
pop
inc
movsb
mov
mov
push
pop
aaa
mov
sub
push
shll
js
mov
roll
dec
mov
ret
incl
fwait
in
es
dec
push
mov
in
in
inc
push
inc
inc
pop
inc
pop
ja
pop
fwait
mov
imull
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
xor
cltd
inc
cs
dec
mov
out
add
and
fwait
dec
fistl
rcl
outsb
shrb
xchg
je
shll
push
push
jb
jl
dec
pop
imulb
push
iret
insl
popf
cltd
dec
mov
outsl
xchg
lcall
push
and
push
decl
push
xchg
cs
pushl
decl
pop
add
pop
int
repnz
jmp
popf
cmp
aas
jmp
leave
lcall
push
inc
testb
xchg
push
push
aaa
push
int
mov
ss
xchg
push
xchg
dec
xchg
jmp
es
xchg
xchg
movsb
notl
sub
call
ljmp
dec
outsb
data16
ds
mov
sbb
add
jmp
pop
or
std
faddl
push
fstpt
push
jnp
jp
or
movsl
fnsave
jl
or
jl
push
jge
add
es
jbe
adc
fidivrl
cmp
push
dec
push
push
repnz
in
out
xlat
jae
pop
fidivrl
push
mov
jnp
mov
add
in
add
int3
outsb
nop
negl
adc
mov
stc
sbbb
push
add
push
adc
int
push
or
add
addl
es
addl
orb
ja
lcall
xchg
out
push
sub
iret
out
mov
jbe
int
cli
pushl
clc
push
imul
ret
push
enter
inc
sub
jg
je
hlt
fnstenv
cld
fdivrp
outsb
popa
daa
jno
sub
jg
mov
icebp
pop
popa
add
and
mov
jg
mov
ja
aas
inc
and
jp
addb
in
xchg
aaa
inc
ds
incb
out
xchg
xchg
fisttpll
jg
dec
imul
pop
hlt
or
push
ja
dec
and
jge
dec
adc
push
call
fmuls
push
push
fsub
pop
push
or
push
dec
inc
push
int3
decl
jle
mov
fidivrl
arpl
clc
sbb
jbe
mov
push
pop
out
sbb
sbb
pop
push
pop
jne
sbb
mov
and
dec
lcall
inc
or
jle
jns
mov
push
xor
jmp
xchg
jmp
mov
push
xchg
mov
mov
adcb
xchg
out
sbb
loope
and
lret
jg
out
mov
jb
jo
or
cmp
jns
add
inc
or
xchg
xlat
push
cmovno
ret
push
leave
jp
and
test
push
add
push
pop
push
sbb
cmp
shr
inc
andb
or
push
inc
lahf
orb
push
lret
adc
call
pop
mov
sbb
xchg
push
jbe
jp
push
inc
test
pop
push
sbb
fstp
add
push
sbb
push
or
and
add
mov
sbb
outsb
or
test
dec
andb
add
push
inc
add
and
cmc
sub
sub
cwtl
sbb
adc
into
sarb
or
and
fsubl
adc
add
add
push
gs
jo
cmp
add
inc
sbb
test
pop
push
fimull
and
xor
add
inc
fdivl
xor
les
push
divl
or
dec
test
add
movsb
xchg
inc
jmp
lahf
jo
das
lea
test
sbb
add
imul
sbb
cmp
inc
and
add
add
jno
add
and
add
sarb
sbb
test
cmpl
adc
cmpl
add
and
insl
cmp
push
and
and
in
insl
scas
dec
jne
popa
shlb
xor
inc
fcomps
jb
inc
arpl
sarb
add
xor
add
and
cmp
filds
mov
mov
and
and
pop
or
movsb
mov
add
adc
orb
fimuls
jno
lcall
lahf
push
movb
test
pusha
mov
jno
outsl
scas
sarl
xor
push
outsb
dec
push
outsl
loop
movsb
popa
sbb
and
push
add
imul
and
dec
sbb
fwait
push
dec
mov
pop
mov
fcoms
dec
insb
out
inc
imul
sbbl
cmpsl
inc
mov
inc
xor
in
insb
jne
addr16
cmpl
inc
popf
and
mov
xorb
inc
or
add
dec
and
sbb
jb
push
and
arpl
dec
jecxz
xchg
sub
cmp
add
add
fiaddl
mov
cli
popf
xchg
push
mov
aad
pusha
dec
mov
cmp
sbb
mov
push
push
add
push
sbbl
sbb
lret
es
ret
cwtl
sub
in
push
dec
in
xchg
or
sbb
lods
push
sbb
lahf
xchg
andl
sub
and
mov
jbe
dec
outsl
inc
or
inc
pavgw
adc
pop
adcl
sbb
push
xor
dec
sub
cmp
sbbb
dec
and
and
add
lcall
cmp
inc
sti
pop
xchg
mov
jg
mov
rcrl
pusha
aad
push
mov
arpl
jbe
mov
ret
dec
mov
sbb
add
add
aad
inc
sub
inc
fdivrs
mov
push
jmp
loopne
in
jae
xor
fists
push
pop
push
push
cmp
sbb
leave
sub
outsb
mov
imul
cmpsl
adc
push
jo
fdivrs
adc
ss
jg
inc
sub
loop
and
and
adc
ds
je
jne
inc
xchg
gs
or
ret
gs
push
test
cmp
out
fxch
js
or
and
jno
dec
add
sub
aam
shll
xchg
xchg
loopne
pop
sub
push
add
pop
mov
out
xor
outsl
lea
test
cmc
sbb
push
inc
imul
imul
mov
dec
or
jno
fiadds
push
insl
sti
dec
sbb
popf
cmpsb
mov
mov
inc
and
nop
sbb
bound
lea
cmp
pop
inc
dec
inc
insb
cs
sub
cwtl
rcpps
jb
jb
adc
test
inc
inc
jno
clc
adc
add
inc
imul
gs
mov
pop
mov
movsb
mov
sbb
lcall
push
fs
pop
test
das
push
outsl
jo
jb
mov
push
or
push
fwait
push
mov
lock
lcall
in
cmpsb
xor
add
add
cltd
pop
sub
sarl
add
into
sub
sbb
push
les
std
jge
xchg
shl
bound
cltd
cmp
rolb
xor
jnp
and
and
outsb
inc
sbb
mov
sbb
pop
fwait
popa
mov
and
je
sub
dec
outsb
dec
add
arpl
rcrl
sub
xor
int3
loop
imul
lcall
dec
add
sbb
mov
movsb
addr16
or
xor
shll
mov
rcll
mov
mov
push
es
cmp
pop
and
or
movsb
outsl
xchg
add
mov
pop
fisubl
inc
pop
imul
and
sub
sbb
sbb
mov
bound
daa
add
insl
ret
imul
cmp
cwtl
data16
pop
sarb
pop
test
push
insb
mov
inc
insb
scas
cmp
nop
sub
test
inc
test
jecxz
addl
inc
sbb
dec
mov
mov
mov
xchg
les
xor
sbb
add
movsb
sbb
jl
cmp
inc
cwtl
and
jno
scas
mov
test
add
jne
out
inc
mull
dec
dec
mov
jbe
in
sbb
dec
mov
imul
sub
push
pop
adc
ret
and
sbb
mov
jle
sbb
scas
cmp
ja
pop
jo
mov
lock
sub
repnz
mov
push
and
js
pop
stos
adc
xor
adc
or
sbb
ss
jg
mov
mov
adc
insb
movaps
js
gs
outsl
and
jno
in
loopne
push
cmpsl
inc
ret
sbb
pop
lea
jle
lods
cmpsl
adc
fadds
push
push
insb
mov
push
mov
pop
outsb
aad
insl
dec
adc
fs
adc
je
sub
xchg
or
push
jo
cld
addr16
loope
push
arpl
test
cwtl
inc
push
pop
xor
push
sbb
xchg
push
add
push
mov
inc
addr16
xor
mov
nop
fs
mov
js
jns
sbb
stos
sbb
cwtl
dec
and
inc
cmp
push
mov
movl
mov
daa
outsb
pop
test
addr16
shll
movsb
sub
and
inc
sub
lds
mov
bound
jbe
orb
into
test
jnp
mov
push
and
mov
xchg
jb
push
inc
sbb
add
sub
insl
xchg
sbb
sbb
pop
push
or
arpl
xor
pop
xor
jbe
mov
out
inc
test
sub
cmpsl
dec
dec
ja
imul
shll
add
aaa
or
movsb
pop
sub
sub
leave
add
out
rcl
sub
movsl
dec
decl
adc
adc
inc
and
neg
cmp
or
sbb
add
add
and
push
xchg
rcll
cmp
push
and
adc
add
push
add
push
or
or
jmp
lcall
mov
sbb
sub
mov
mov
push
or
push
or
adc
mov
xor
pop
push
adc
push
inc
pop
adc
sbb
mov
sub
push
push
inc
sbb
sbb
cs
or
xor
and
sti
idiv
fisttpl
add
add
xor
sbb
push
lock
pushl
add
adc
cmp
or
cmpsl
add
and
xor
cmp
jle
fcomp
add
or
push
or
or
add
fbld
push
sbb
subps
inc
pop
sbb
push
sub
nop
cmp
or
and
sbb
or
push
rcrb
add
sub
sbb
lods
add
sbb
adc
and
mov
and
and
xor
test
push
adc
sbb
push
or
fildll
sbb
or
or
add
dec
mov
out
or
push
cmp
and
sub
pop
mov
out
sub
aas
and
pop
pusha
mov
ss
or
fmull
xchg
lcall
fnstenv
push
nopl
xchg
mov
subb
jecxz
push
lcall
daa
add
push
xor
xor
or
cmp
mov
xchg
daa
aas
sub
and
sub
or
cmp
fildll
add
xor
dec
sbb
incl
bswap
add
or
das
adc
adc
decl
or
push
push
lods
adc
adc
or
push
or
pop
aaa
adc
push
dec
adc
adc
daa
adc
or
xor
push
decl
es
mov
xchg
daa
cmp
xor
and
or
mov
jg
and
or
add
mov
and
or
cmp
pushl
or
or
pop
adc
pop
and
or
or
jb
adc
rol
lock
jbe
sub
cmp
jg
lock
ds
shll
hlt
ss
incb
xor
das
test
add
mov
lock
or
fstpt
jl
sub
sbb
les
push
push
push
adc
add
das
clc
adc
or
cmp
sub
push
or
bound
pop
push
popa
clc
jo
or
or
sbb
dec
rdpmc
pop
and
mov
aas
push
sbb
xchg
jb
xor
cmp
adc
sub
xor
ljmp
cmp
cmp
adc
sub
lock
add
cmp
incl
adc
lock
sbb
mov
push
jge
cmp
lcall
add
clc
sarl
or
push
or
adc
mov
unpckhps
sbb
fcomip
lods
out
inc
or
push
aaa
mov
or
xor
mov
outsl
dec
adc
sbb
add
sub
fisttpl
stos
fcomip
or
movsl
push
jnp,pn
outsb
add
push
nop
xchg
outsl
cli
jnp
pop
adc
adc
inc
dec
outsl
and
xor
loope
push
jae
testb
add
push
push
and
inc
sbb
adc
roll
and
inc
mov
add
jg
lcall
xor
sub
and
cmpsl
or
dec
inc
outsb
fadd
shll
ljmp
sahf
popa
adc
cmpsl
bound
adc
outsl
ret
pop
hlt
mov
or
add
insl
fmull
and
xor
out
ds
jg
or
cmp
adc
adc
push
and
idivb
lods
lock
fcoms
psubsb
sub
adc
scas
les
sbb
xor
adc
and
loopne
mov
xor
or
or
mov
pop
inc
addr16
aas
dec
pop
pop
imul
lods
xor
sub
and
or
loope
lock
je
pop
adc
stos
push
scas
adc
andb
jno
sub
add
cmc
ljmp
aaa
insb
pop
pusha
dec
arpl
sbb
sbb
mov
stos
ja
jg
inc
pop
sbb
adc
xor
xor
daa
inc
sbb
pushl
sbb
push
push
sbb
sbb
adc
aaa
and
or
aaa
push
sbb
lock
jb
xor
adc
lock
or
adc
cmp
dec
jnp
jne
push
sub
adc
arpl
sub
insl
cmpsb
xor
inc
and
sbb
pop
call
das
adc
lock
add
scas
dec
dec
push
push
cmp
ret
adc
or
and
adc
xor
imul
inc
push
pop
pop
and
inc
lock
add
sub
add
inc
jg
aad
jle
adc
inc
push
mov
cmpsb
fcomp
jb
rolb
jg
mov
pop
jno
and
and
add
add
jl
jl
sub
sub
pop
cmp
inc
and
xlat
sub
xchg
sbb
xchg
mov
or
adc
inc
cmp
inc
daa
insb
and
xor
addb
and
add
push
or
xchg
jmp
add
or
push
push
fsubl
dec
xor
add
fcmovu
mov
xor
and
push
pop
mov
stos
out
inc
and
and
lods
sar
sbb
and
pop
ud2
adc
lret
fildll
lds
pop
sub
aaa
push
cmp
adc
sub
int3
sbb
sbb
push
xor
movsb
mov
push
je
cmc
pushl
dec
sbb
daa
inc
adc
push
or
es
adc
ja
add
fldl
add
add
xchg
hlt
mov
or
sub
cld
fildll
cmp
daa
lock
lock
lock
add
sbb
sbb
dec
add
loopne
jae
and
insl
ja
stos
adc
adc
fsubl
sub
sub
rclb
pop
and
sub
sub
and
loopne
jp
add
sbb
adc
daa
pop
adc
cld
lret
adc
mov
or
dec
or
inc
push
and
dec
pop
cmpb
push
adc
xchg
daa
sbbb
jmp
nop
inc
or
push
adc
jg
popf
and
fistpl
imul
jo
call
or
dec
pop
cmp
test
or
add
in
sbb
and
sbb
add
adc
pop
sbb
add
lock
add
outsl
pop
cmp
sbb
addr16
pushf
sbb
nopl
sbb
xchg
cmp
add
sbb
sub
or
cmp
pop
xor
or
or
or
or
dec
sub
sub
xor
push
or
mov
inc
adc
cmp
inc
inc
push
sbb
add
pusha
data16
add
lock
mov
or
jg
and
and
and
in
mov
cs
sbb
pop
add
push
push
pop
push
sbb
lock
sub
push
push
adc
pop
aaa
sbb
add
add
enter
inc
cs
pop
sbb
sbb
sub
call
lock
lock
add
lock
add
add
pop
or
add
lock
xor
sbbb
sbb
inc
idivb
aaa
cmp
adc
pop
or
and
lcall
adc
or
push
sbb
unpcklps
cmp
cmp
pop
pusha
push
sub
or
and
inc
or
ret
sbb
dec
call
adc
or
or
sbb
push
or
sbb
xor
aas
adc
push
push
sub
adc
pop
sbb
enter
pop
xor
and
mov
fidivl
dec
test
out
imul
outsb
push
jl
sub
call
lret
xchg
das
rorb
add
movlps
pop
sbb
add
sbb
dec
lock
add
jb
pop
sub
fucomi
loopne
outsl
and
push
dec
push
cs
fs
lahf
dec
call
decb
push
push
mov
xor
add
es
call
adc
push
and
add
insb
xchg
jg
call
sbb
or
or
movntps
push
pop
adc
adc
push
cld
mov
sbb
or
xchg
jne
sub
push
or
ljmp
cmp
movsb
adc
pop
int3
pop
sub
sbb
inc
push
push
inc
or
pusha
fbld
dec
cmp
and
das
adc
sub
push
loop
pop
test
invd
or
daa
push
cs
sub
or
ljmp
sbb
or
adc
daa
or
dec
prefetch
lock
dec
aas
std
jmp
cmp
push
xchg
movsl
adc
pop
sub
fs
sbb
or
and
adc
mov
pop
xor
loop
loop
adc
push
or
adc
cld
push
sbb
lock
or
adc
push
subb
lock
add
and
sar
loop
or
xor
pushf
push
dec
xor
inc
adc
cs
and
sub
sbb
nop
pop
or
std
outsl
shlb
sbb
sub
inc
inc
inc
cmp
test
adc
cmp
mov
xor
pop
lret
popa
pusha
cmpsb
xchg
arpl
incl
sti
adc
adc
xor
and
sbb
inc
cmp
pusha
mov
pop
cwtl
out
dec
pop
adc
loop
push
or
push
movb
and
adc
inc
dec
or
pop
ss
mov
test
enter
adcb
cli
cmovno
movsl
or
sbb
decl
push
xor
test
or
xor
inc
mov
inc
cmpb
or
and
das
mov
adc
ds
aas
push
mov
inc
pusha
das
js
mov
mov
or
loopne
inc
push
pop
dec
or
decl
cmp
cmp
fdivrp
data16
pop
pop
mov
jb
sbb
add
or
sbb
das
es
mov
adc
es
and
or
ljmp
out
xor
or
push
sub
or
adc
sbb
pop
sub
data16
push
pop
add
sbb
add
adc
add
jle
add
pop
and
push
push
sub
aaa
cld
in
inc
dec
dec
add
repnz
sub
xchg
sbb
and
mov
add
add
pop
icebp
adc
push
inc
inc
sub
das
sbb
dec
jle
mov
add
and
xor
bswap
test
cmp
adc
clc
mov
femms
aaa
dec
adc
cwtl
pop
jp
jg
dec
or
push
mov
ds
cmp
and
dec
subb
xchg
pop
inc
sub
or
dec
pop
sub
or
adc
lret
cmp
push
dec
fcomps
and
push
or
adc
ds
adc
pop
adc
outsl
scas
and
test
adc
sub
or
push
adc
sub
sbb
sbb
adc
pop
xor
add
inc
dec
adc
sbb
imul
sbb
add
and
insl
lods
jbe
out
js
and
add
xchg
std
or
push
inc
or
add
xor
cmp
adc
nop
and
cmp
cmp
jp
mov
or
inc
or
arpl
inc
push
pusha
adc
clc
pop
mov
dec
loopne
sbb
call
push
fdiv
test
insb
idivb
mov
mov
push
sbb
arpl
lods
daa
push
arpl
loopne
cmp
sbb
sbb
insb
add
mov
dec
cmp
adc
or
bndldx
adc
adc
iret
adc
andl
xchg
sbb
ds
sbb
and
cmovp
dec
fmuls
pop
ds
rorb
xchg
or
std
pop
mov
add
lock
xchg
scas
mov
or
adc
mov
xor
cmp
xor
scas
call
sbb
inc
or
adc
push
push
adc
pop
pusha
movsb
lock
add
xchg
aaa
popa
push
sub
add
mov
lcall
push
inc
adc
adc
das
sub
pop
popa
lahf
pop
sub
mov
adc
sbb
and
pop
inc
adc
js
test
cmp
ljmp
or
fildl
cmp
jo
cmp
orb
call
add
sti
push
mov
add
data16
xor
adc
dec
pop
into
and
adc
out
push
aaa
cmpsb
add
call
bound
cmp
daa
inc
add
pop
adc
sbb
pop
and
out
imul
das
cli
decl
sub
and
inc
pop
adc
sbb
pop
cmp
adc
sti
mov
add
push
cmp
jb
sub
push
sbb
add
jecxz
jg
lcall
sbb
dec
nop
push
and
or
fcomip
lcall
outsl
dec
dec
sub
push
sub
sbb
cmp
add
outsb
xor
xchg
lock
mov
pop
cli
dec
and
sysexit
cmp
pop
test
je
dec
mov
add
hlt
es
nop
sbb
mov
pop
sbb
ja
mov
xchg
mov
adc
or
push
push
pop
adc
pop
or
xor
mov
and
outsb
les
das
push
pcmpgtw
or
lahf
add
fwait
lcall
add
xchg
cmp
adc
add
dec
aam
mov
mov
sub
adc
xor
or
xor
das
jl
add
fsubp
shlb
rcl
sub
push
pop
fldl
inc
iret
dec
push
les
sub
sub
add
add
fldl
mov
or
movsb
mov
rorb
or
lods
add
das
enter
data16
sbb
dec
pop
add
stos
test
add
adc
xchg
sbb
sti
stos
jno
mov
push
lock
lock
add
into
hlt
aas
adc
pop
and
aad
lea
xchg
add
je
dec
jg
or
add
sbb
movsb
pop
dec
xor
jmp
pop
adc
or
pop
dec
cld
stos
dec
imul
fdivp
sbb
lret
fisttpl
adc
cltd
dec
or
outsb
lods
jne
adc
adc
scas
aaa
sub
sub
adc
or
add
inc
sbb
sbb
or
cs
pop
push
dec
or
mov
sbb
push
sbb
xlat
sbb
mov
jmp
imul
push
add
aas
cli
adc
rolb
cmp
cmp
out
rorb
xor
or
or
and
xor
outsl
pop
js
sbb
or
push
or
add
dec
push
or
dec
dec
push
ret
js,pn
push
lcall
xor
or
jle
or
pop
mov
sub
sbb
jp
or
or
mov
add
pop
adc
push
xlat
lcall
add
mov
sbb
adc
sbb
lcall
and
sub
fdivr
sbb
inc
ret
jg
dec
jmp
sbb
mov
mov
dec
sbb
jecxz
add
xchg
fisubl
mov
pop
fistl
ds
and
movsl
imul
loope
clc
lcall
je
adc
and
sbb
aas
cmp
fdivs
add
push
rcrl
rcr
cmpsb
inc
push
shrb
sbb
ret
push
je
and
cmp
and
fdivs
fdivs
sub
lods
add
inc
jmp
shll
or
cltd
shl
les
enter
cmc
pop
add
sbb
fwait
ss
sbb
sbb
adc
or
and
xor
xor
in
or
mov
adc
fidivs
femms
das
dec
or
bound
lock
lret
dec
dec
xor
add
add
sbb
lcall
xchg
pop
mov
push
pop
sub
fcmovbe
xor
push
decl
out
jp
and
adc
dec
mov
adc
movsb
outsb
das
pop
or
pop
push
adc
clc
push
and
sbb
faddl
and
ds
push
push
adc
cmp
add
popa
xor
or
movsb
add
inc
outsb
out
push
adc
shrb
or
cmp
sbb
lock
adc
adc
loope
ret
sbb
addl
adc
es
cli
jo
insb
dec
lock
dec
or
pop
aam
add
xchg
mov
add
mov
cwtl
push
mov
lahf
fcoms
cmp
inc
lock
add
sbb
or
adc
or
push
ss
and
push
mov
or
adc
and
sbb
decb
pop
pop
sub
ss
cmp
or
add
das
fsubrp
clc
add
mov
jl
sub
sbb
mov
add
movsl
add
adc
decl
xor
or
cmp
pop
mov
sbb
push
adc
loopne
jmp
aas
and
xor
push
mov
and
adc
lock
mov
mul
xor
lock
das
add
lock
ret
add
pop
add
ss
jbe
ret
fistpll
dec
arpl
cmp
cmp
cmp
jecxz
pop
sub
sbb
sbb
sbb
in
mov
sub
dec
dec
push
mov
ret
popa
outsl
fistl
dec
sub
and
dec
mov
decb
sbb
and
sub
sbb
mov
arpl
mov
fbstp
adc
dec
cmp
inc
inc
sub
or
push
and
dec
dec
add
xor
xor
ds
xor
and
mov
fwait
mov
cmp
shlb
dec
pusha
cmp
je
cmp
xor
fucomi
cmp
sub
cmp
sub
subl
sbbl
pop
pop
shl
xor
outsl
decl
inc
sub
sub
and
xor
sub
xchg
sbbb
mov
lret
xchg
cmp
movsl
xor
mov
arpl
inc
cmp
mov
cmp
sbb
aas
dec
jne
sbb
cld
and
add
and
rcll
cli
push
xor
dec
mov
lock
add
or
insb
mov
xchg
xchg
cmp
jle
xor
cmp
push
test
fwait
xor
mov
cmpsb
cmp
cmp
add
incl
fdivrs
push
add
push
push
sbb
xchg
lock
cmpsb
mov
int3
aaa
rclb
jbe
stos
sub
add
aam
lock
push
add
mov
shl
sbb
pop
jae
add
dec
aam
lods
dec
rclb
insb
xchg
add
pushf
test
test
inc
fisttpll
or
or
jl
stos
lcall
or
mov
push
push
jno
add
sub
or
inc
push
stc
mov
test
adc
pop
in
add
xor
insb
add
leave
fs
mov
add
pop
sub
test
mov
xor
or
jo
addr16
lret
push
mov
lock
adcb
subl
add
push
and
andb
dec
cmp
push
cmp
test
mov
dec
sbbb
and
xor
adc
or
adc
or
adc
fistpll
dec
xor
shlb
or
push
or
sbb
test
push
lret
adc
movups
andb
icebp
and
shll
sbb
mov
adc
mov
test
dec
or
push
insb
dec
jae
jno
shrb
in
pop
fidivrl
add
jno
cmp
adc
and
xchg
push
adc
jae
xchg
and
dec
mov
cmc
cmp
pop
insl
insl
sbb
bound
fdivs
pop
adc
stc
leave
xchg
add
mov
std
testl
loope
adc
sbb
sbb
and
jo
add
imul
add
mov
addr16
sub
adc
mov
pusha
adc
data16
xor
cmp
fs
and
int3
pop
and
adc
and
mov
sub
adc
or
aaa
ja
fwait
insl
insl
fcmovnu
sub
insl
aaa
inc
or
insl
add
cmp
sbb
adc
divl
das
pop
sbb
pop
and
int
insb
addr16
lahf
sub
cltd
lods
loopne
loopne
pop
aad
fcom
mov
popa
adc
pop
imul
jge
jmp
adc
scas
mov
sbb
xchg
and
pop
fisubrl
cmp
pop
imul
outsl
imul
out
xor
sbbl
fisubs
cmp
fidivl
xchg
xorb
xchg
addb
or
mov
fcompl
jno
movsl
adc
frstor
insl
add
fadds
or
cmc
adc
andw
sbb
dec
pop
rcr
mov
pop
sub
mov
cmovge
and
adc
pop
roll
pop
insl
dec
xor
leave
adc
or
lods
pusha
test
test
push
stos
fstpt
adc
adc
mov
push
jnp
mov
xor
mov
mov
sbb
add
cmp
cmpsl
ja
lahf
dec
imul
fisubl
or
inc
push
mov
xchg
push
mov
pop
addb
and
shll
fisubl
popa
push
mov
test
aaa
sbb
xor
pop
rcll
in
sub
mov
mov
mov
mov
inc
sbb
push
push
add
mov
adc
add
sbb
shrl
cmpsb
sub
outsl
adc
adc
dec
adc
inc
or
add
jnp
inc
mov
nop
or
mov
or
and
sbb
faddl
test
sub
adcb
inc
pusha
xor
outsl
jo
add
lods
mov
aam
add
sub
mov
add
in
ficompl
cmp
sub
sub
xor
mov
lcall
add
sub
cmp
fcmovu
xor
xor
sbb
or
insb
fdivrs
xor
push
xor
fwait
popf
sbb
or
sbb
adc
test
xchg
lea
addr16
and
jge
stos
cmp
sbb
pop
inc
and
add
pop
rcr
push
sbb
sbb
sub
pop
push
xchg
sub
sbb
fdivrs
test
cs
dec
push
push
arpl
cmp
in
add
push
fdivrs
arpl
or
inc
mov
or
lcall
mov
pop
aam
movb
push
add
scas
pop
lods
adc
movsb
add
les
sbb
dec
push
stc
fs
add
add
jno
arpl
add
orb
push
call
mov
nop
cmp
push
fsubs
push
imulb
xor
out
mov
insb
mov
jns
and
push
or
inc
dec
ficoms
jle
xor
adc
ss
xchg
and
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
