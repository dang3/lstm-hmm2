divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcr
mov
mov
ds
pop
inc
lcall
push
push
push
xor
mov
push
mov
scas
and
inc
cld
add
push
fcmovu
inc
add
cmp
pushf
or
push
mov
pop
pop
movsb
adc
push
xchg
mov
xchg
pop
cwtl
pop
jnp
sbb
test
jne
incl
pop
leave
ret
mov
jmp
pushl
ja
xor
inc
adc
decl
push
xadd
dec
test
jg
add
xlat
lcall
xchg
add
mov
imul
adc
and
movsl
push
les
pushl
cltd
push
mov
xor
cmp
add
push
add
aaa
mov
cwtl
cmp
int
push
or
data16
cmpl
xor
movsb
mov
lahf
add
andl
sbb
outsl
in
scas
loope
mov
hlt
cs
addl
idivb
pusha
cmp
sbb
sub
dec
rcrb
in
int
cs
or
das
mov
or
or
sarl
jae
pop
cmpsl
lret
mov
int
add
cmpsb
cmp
lea
push
call
push
push
add
add
push
enter
loopne
pop
inc
add
in
sbb
into
adc
sub
pop
pop
repnz
enter
dec
or
or
add
jae
add
ja
add
dec
xchg
or
xor
test
jl
inc
add
test
pop
addb
das
and
and
dec
inc
fidivl
movsl
pop
xlat
push
sbb
xor
and
dec
push
or
js
sahf
add
push
aad
cmp
je
out
push
jmp
out
aam
fdivrs
fs
jl
add
pop
add
push
scas
xchg
jmp
push
sub
xlat
insl
sbb
add
push
jne
pop
sub
mov
aaa
mov
loop
loopne
pop
pop
ljmp
push
mov
insl
sarl
cmp
or
jge
gs
fildll
js
sti
mov
mov
xor
mov
pop
ret
das
push
cltd
arpl
roll
pop
int3
popa
adcb
cmp
cli
fadds
sub
inc
clc
sub
enter
sbb
in
jmp
sbb
or
cvtps2pd
insl
jo
das
movsl
push
xorl
sbb
pusha
ljmp
jo
cli
js
mov
cmp
jg
mov
adc
mov
inc
ret
pop
dec
mov
push
mov
pop
movsl
jmp
pusha
add
test
push
sub
pop
mov
clc
push
mov
sar
imul
cld
ja
mov
js
pop
dec
clc
add
push
fisubl
scas
jmp
shl
jbe
pop
in
sub
cmpsb
adc
leave
call
ficompl
int3
stc
clc
icebp
loop
lds
iret
jle
mov
sbbl
jecxz
js
jle
push
adc
cmp
fistpl
pusha
lds
dec
cmp
add
aaa
lods
std
jmp
cltd
sub
shr
enter
mov
mov
imul
cwtl
and
mov
add
push
jne
mov
cmc
sbb
adc
jbe
mov
out
xchg
rol
inc
add
inc
add
lea
push
add
adcl
inc
adc
js
notb
xor
into
mov
cld
aam
sbb
xchg
fistpll
pop
push
cmp
cmp
cmpsl
mov
jb
xlat
xor
fsubrs
mov
pop
leave
jmp
or
test
jle
mov
xchg
cmp
mov
inc
sahf
mov
xchg
rol
pop
test
sbb
jo
and
sbbl
sbb
aas
lds
into
je
or
addr16
push
mov
lea
inc
sub
or
xchg
xchg
or
lret
ret
and
addb
hlt
adcb
jbe
cmpsb
mov
or
hlt
jg
pusha
cmp
or
push
or
cmp
xchg
cmp
push
rcr
out
mov
adc
cmp
jle
mov
sbb
int3
out
add
sbb
cmp
or
pop
or
and
cmp
mov
xchg
pop
lret
filds
addr16
add
jb,pt
pop
add
mov
adc
rcll
std
fcoms
jnp
ljmp
add
cmp
clc
mov
push
push
push
rcrb
or
adc
xchg
call
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
cmpsb
cmp
mov
dec
out
ret
aad
add
sarl
sbbb
push
xor
cmp
push
mov
sar
push
lea
cmp
jne
push
int3
sbb
lock
push
add
pop
fucom
adc
pusha
js
push
mov
mov
or
pusha
test
xchg
pop
pop
pop
js
in
inc
subb
push
leave
xor
test
mov
and
sub
test
fcoml
jo
dec
mov
clc
mov
adcb
cmpb
sbb
mov
repnz
sbb
fistpl
cwtl
mov
fmuls
in
gs
pop
lret
pusha
mov
cmp
mov
out
testl
jl
or
jb
mov
mov
lret
rol
dec
out
outsl
cli
sub
or
pop
push
or
sbb
pop
push
movl
pop
jns
sub
mov
sbb
mov
fdivs
pop
in
loope
push
add
sbb
add
jg
and
test
push
lea
push
dec
lea
lock
outsb
inc
xchg
ret
push
imul
insb
lds
sub
mov
scas
nop
mov
enter
scas
push
movsl
cmp
lock
push
xor
add
pop
cmp
je
js
hlt
test
adc
jne
sbb
xor
arpl
ret
xlat
jecxz
mov
adc
xchg
ss
jbe
insl
into
mov
inc
fdivs
cmp
ljmp
ret
push
scas
push
sti
push
in
mov
aam
in
loope
cmp
dec
or
movsl
div
xor
mov
or
fucomip
call
arpl
cs
jno
bnd
mov
jp
lods
or
outsb
int3
pop
or
es
cmp
sub
add
or
lock
pop
mov
mov
fmuls
ret
mov
movsl
dec
roll
push
mov
mov
push
xchg
lock
ret
cmpsb
mov
lock
aaa
ret
jne
xor
mov
insl
add
pusha
xchg
faddp
jno
or
stc
lcall
loopne
push
sbb
pop
test
adc
xor
mov
sbb
adc
sub
and
mov
inc
xor
aaa
push
lock
lods
dec
lahf
fistpll
inc
add
ret
je
dec
pushf
test
adc
or
adc
movsl
sbb
call
inc
pop
ret
or
mov
loope
or
repz
adc
jle
int
pop
divl
jg
add
mov
push
sub
jbe
rcrb
fadds
mov
jle
or
popaw
jl
mov
call
and
sub
add
test
add
js
or
pop
fsubs
mov
rcl
add
ljmp
insl
xchg
add
sub
lret
ljmp
rorl
or
dec
or
sub
js
and
adc
fbld
ret
add
push
in
dec
fcoml
or
pushl
ljmp
sar
inc
pop
xlat
cmp
pandn
or
cmpb
je
in
rorb
in
scas
int3
mov
cmpb
ret
pop
movsl
stos
mov
dec
pop
je
pop
and
movsb
in
push
adcl
jbe
cmpsl
call
js
jecxz
add
call
movsb
lahf
cmp
add
adcb
test
aaa
pop
sbb
nop
push
and
jb
or
in
insl
mov
xchg
ret
pop
adc
add
xorb
clc
mov
jbe
js
xor
pop
mov
in
cld
cmp
js
or
dec
jns
xchg
fimuls
movsl
cmp
xchg
addb
movsb
sub
jo
daa
xchg
and
into
or
or
mov
je
mov
or
sbb
or
add
fs
push
xor
data16
mov
pop
add
sub
aas
ret
fadds
inc
roll
jo
aam
mov
jae
in
sub
adc
adc
bound
and
cmp
xorl
xor
jno
jne
adc
nop
adc
push
push
bound
mov
xor
ret
mov
lea
xchg
cmp
sub
adc
push
push
push
xchg
xor
ss
data16
jne
sbb
pop
sahf
out
sbb
dec
jmp
mov
loopne
jl,pt
dec
in
or
bound
cmpsb
mov
ljmp
sbbb
lea
xor
mov
push
fadds
jg
call
push
xor
xor
sbb
pop
mov
mov
in
shll
push
add
in
push
mov
push
xchg
loopne
jp
mov
lcall
cmp
sbbl
adc
mov
ret
jmp
repnz
je
or
inc
mov
or
sbb
add
xchg
xor
loop
xlat
les
lahf
in
xorl
mov
mov
push
xor
mov
mov
sti
sbb
rorl
adc
xor
ret
inc
in
fsubr
out
add
add
jb
loopne
movl
insb
xchg
lock
data16
out
loopne
aam
xchg
lods
scas
outsb
cltd
sahf
mov
shl
xor
cmpl
mov
or
mov
in
push
and
push
push
and
mov
jmp
xor
push
pop
jbe
inc
pop
je
sbb
repz
adc
push
js
test
adc
mov
pop
lcall
sub
sbb
test
sbb
imul
fldcw
fistpl
fistpl
jae
ret
pop
xchg
mov
jmp
and
rcr
ret
mov
inc
mov
add
cmp
mov
jns
imul
call
or
push
push
sbb
nop
maskmovq
imull
rcrl
test
enter
or
sbbb
pop
cltd
xchg
lret
push
mov
cmc
xchg
cmp
xor
icebp
pop
in
lods
loopne
add
lcall
test
cmp
popf
mov
cmp
lock
xor
aad
sub
jl
add
mov
fcoml
dec
out
outsb
cmp
mov
cmp
shlb
scas
js
aaa
out
clc
sub
cmp
or
fsubl
stos
dec
movsl
test
nop
out
or
nop
rclb
rclb
mov
and
push
imul
movsb
cmp
dec
pushf
fmuls
mov
int3
sbb
ficomps
mov
xchg
pop
enter
enter
enter
inc
push
imul
cmp
shl
sbb
mov
and
xor
jle
pusha
sbb
push
sbb
jmp
ja
sub
mov
xor
add
and
shr
adc
push
mov
jle
pop
mov
xchg
push
ss
stos
jo
aaa
fidivs
clc
adc
insb
rorl
dec
test
mov
and
xchg
notb
sbb
mov
sub
pop
push
xor
shrb
aam
and
push
inc
adc
add
mov
jnp
dec
xchg
dec
ds
loopne
stc
add
mov
loopne
push
or
pusha
sub
sbb
test
and
sbb
notb
jg
mov
jno
and
xchg
adc
inc
mov
orl
test
clc
out
mov
movl
mov
xchg
sbb
test
mov
cwtl
sub
iret
mov
and
mov
shlb
addr16
adc
mov
xorl
leave
sbb
fdivl
push
adc
in
cmpl
adc
leave
in
adc
mov
fcmovne
pop
and
push
pop
push
jmp
xchg
cmpsl
sbb
adc
or
pop
inc
sbb
shll
std
adc
pop
mov
add
adc
pop
movsb
jae
xor
sub
dec
or
shlb
push
sbb
out
sub
jl
mov
popf
or
push
mov
in
repnz
xchg
btc
lret
or
in
mov
outsb
aaa
adc
dec
xchg
sbb
mov
jne
push
lret
jl
movsl
jno
mov
adc
stc
or
sbb
jne
fsubr
into
adc
mov
aaa
addb
pop
leave
adc
mov
push
adc
movl
mov
or
adc
and
sub
sub
and
sbb
sbb
loop
leave
mov
neg
pop
dec
xchg
pop
bswap
push
inc
test
daa
sbb
jmp
sbb
test
pushf
sbb
clc
popf
cmp
sbb
or
jge
je
shll
les
shlb
pushf
pop
mov
pop
pop
stc
or
aas
cmpsb
sub
testl
mov
clc
add
add
rclb
addr16
mov
or
je
adcb
pop
cmp
dec
mov
xlat
in
xchg
adc
and
movsl
push
adc
jecxz
add
add
cmpsb
ret
or
push
in
push
add
fs
lods
cmp
adc
cmp
push
xorb
and
sbb
or
test
cmp
je
push
push
pop
in
sub
cmp
cmp
test
adc
cwtl
pop
mov
sub
xchg
and
mov
and
xor
cli
adc
and
std
push
pop
mov
scas
push
jne
xor
rorb
sahf
sub
mov
mov
loope
lock
and
and
and
test
push
and
sahf
inc
bound
stos
add
jbe
pop
add
push
add
pop
push
jo
fcomps
les
xorl
cmpsb
std
add
faddl
cmp
mulb
add
incb
mov
or
or
and
cltd
test
add
adc
data16
js
cmp
scas
sub
pop
nop
mov
add
xor
ljmp
sub
xchg
sbb
adc
adc
das
mov
scas
ret
inc
lret
ret
and
pushf
test
lret
or
xor
mov
add
push
pushf
add
add
push
in
pop
xor
cmp
xor
push
mull
adc
mov
lods
mov
int
lret
and
xchg
sub
mov
and
mov
adc
nop
out
imul
sub
lret
movsb
or
xchg
sbb
movsb
sub
das
sub
add
jg
or
test
adc
inc
in
call
inc
push
push
push
sbb
out
mov
push
pop
fdivrs
cmpsl
xchg
and
movsl
loopne
xchg
out
xchg
push
mov
popf
clc
stos
add
and
xchg
das
lahf
xchg
mov
sbb
dec
sub
or
stos
dec
mov
add
mov
dec
notl
sbb
lods
push
movzbl
xchg
cmp
sub
pushl
jnp
lret
fcmovnbe
sbb
xor
inc
mov
gs
ficompl
push
pop
xor
xor
fistl
fisubrs
dec
or
and
push
jae
mulb
add
sbb
pop
adcb
ficoml
add
les
js
push
adc
mov
inc
jb
sbb
pop
cmp
cmp
mov
bound
and
and
in
and
test
mov
data16
mov
inc
and
jae
xchg
aaa
pop
sub
ret
mov
push
icebp
jne
mov
inc
ja
ds
sbb
movsl
popf
fneni(8087
dec
cmp
mov
mov
in
and
pop
cmpsb
rolb
lahf
add
pushl
adc
cwtl
mov
lahf
faddl
jo
add
adc
mov
xchg
jbe
ret
push
je
mov
jo
adc
pop
dec
mov
jge
adc
je
cmp
push
push
fists
call
inc
jl
push
mov
fistl
dec
add
pop
call
dec
clc
jne
push
sub
jp
mov
mov
push
mov
lods
push
in
movsl
xchg
loopne
pop
jmp
cmp
push
mov
in
push
add
jg
and
jge
mov
add
add
or
mov
pop
inc
in
inc
pop
adc
mov
ljmp
fstl
xchg
xor
add
test
imul
test
push
mov
pop
jmp
pop
inc
xlat
rorb
nop
loope
or
lret
sbb
add
push
pushf
in
pop
pop
xor
loope
jne
xorb
adc
call
lcall
or
lock
mov
jl
and
ja
and
mov
sub
aam
pop
jle
xchg
inc
out
or
sub
or
mov
jl
into
add
scas
jbe
int
adc
pop
out
jne
or
je
sub
sbb
scas
shrl
mov
sbb
sub
adc
mov
and
push
and
inc
lret
clc
push
or
inc
pop
mov
lods
outsl
jae
popa
hlt
fsubrp
call
add
cmp
rcll
dec
xchg
push
add
and
std
mov
not
add
xchg
lahf
je
test
add
push
jge
cmp
pop
fsub
push
out
inc
and
test
call
addl
loope
jo
mov
and
lds
inc
sub
pop
add
push
or
jl
xor
jg
adc
sub
jg
push
mov
in
test
or
les
or
das
push
std
push
lods
inc
int3
add
mov
or
adc
push
fsubrl
or
mov
push
in
shrb
pop
mov
mov
adc
adc
dec
je
sub
pop
addl
pusha
cmpw
je
fcomps
adc
xchg
pusha
jmp
adc
add
or
xchg
rorb
mov
stos
test
adc
push
cmpb
in
xorb
aam
xor
jecxz
out
ja
rcl
push
push
les
je
lock
fbstp
test
hlt
xor
inc
mov
sbb
jle
push
jbe
fadd
jecxz
pop
cmpb
jp
fistpll
cmp
jle
and
je
in
sbb
mov
push
cld
push
cmp
insb
pop
add
xchg
ds
js
stc
popf
decb
fiadds
jle
pop
mov
add
push
push
out
shrb
mov
add
or
xor
out
pop
pop
adc
shlb
mov
xchg
adc
aam
sbb
leave
add
jge
scas
fcmovnb
cmpl
loopne,pt
sub
xorl
clc
cmpw
jne
fildll
rorb
outsb
sbb
inc
roll
inc
sbbb
ret
call
aam
das
test
mov
loopne
dec
test
or
ret
push
insb
mov
jbe
pusha
ss
add
push
sar
dec
mov
add
xchg
jmp
test
add
or
outsl
jns
flds
sub
stos
and
mov
scas
ret
roll
nop
or
or
adc
and
jb
and
or
sub
rolb
mov
jg
in
loopne
pop
cld
loopne
sbbb
pop
fisubs
cmpsb
add
fcomps
add
loopne
inc
ja
dec
add
nop
or
cwtl
push
dec
test
cmove
or
imul
loopne
ljmp
mov
cmp
cli
in
mov
sbb
shlb
ret
mov
jp
nop
xchg
cs
jbe
sbb
mov
mov
scas
jecxz
les
in
add
inc
mov
and
and
add
add
push
jecxz
repnz
push
call
ficoml
mov
rcll
addl
test
iret
cmp
decb
rcll
call
push
pop
nop
out
inc
dec
insl
or
mov
jbe
aaa
xor
or
push
loopne
add
test
xor
je
cmp
or
mov
js
pop
lods
dec
cmovns
mov
adc
sub
add
adc
iret
dec
fs
push
pop
call
add
xor
mov
or
push
mov
rorl
insb
and
rclb
pop
ss
cmp
aam
fcoms
faddl
loopne
in
mov
mov
xor
loope
test
je
pushl
push
js
std
cmp
mov
cmp
ret
shr
movzbl
push
fdivrs
push
ret
push
push
inc
add
movsb
mov
lret
dec
sub
jmp
sbb
jl
cmp
ret
push
andl
mov
addl
dec
push
gs
pop
xor
fcoms
out
xchg
icebp
test
add
int3
cmc
jle
pop
or
add
mov
or
add
sti
jle
cld
aaa
mov
push
push
mov
push
cmp
jg
mov
mov
jmp
into
mov
dec
arpl
jae
sbb
insb
sbb
leave
sbb
mov
repnz
xor
enter
push
ret
or
cmpsl
mov
cmp
pop
xor
js
outsb
sub
in
sub
cmp
subl
sbb
mov
sbb
jge
pop
sbb
jg
ret
push
pop
jmp
mov
push
cmp
inc
fs
int
and
ss
sub
shlb
cmp
add
sub
jne
xor
cmp
inc
adc
rorl
lock
ja
xor
inc
cmp
jae
stos
daa
clc
orl
dec
ja
xor
je
fs
divb
mov
add
cs
je
add
fiaddl
push
or
lock
imul
ljmp
call
jg
ss
add
push
push
jnp
shll
daa
adc
shr
scas
mov
into
popa
fwait
adc
fisttpl
pop
xor
rorb
cli
lea
ljmp
roll
or
push
test
adc
fiaddl
xchg
add
fcmove
add
mov
mov
xor
dec
push
mov
mov
add
sub
inc
test
mov
adcb
out
aam
int
jmp
call
mov
js
ret
push
cmpsb
std
inc
dec
hlt
jg
hlt
or
jle
push
sub
pop
movb
xchg
inc
lahf
xchg
imul
out
add
inc
pusha
mov
adc
sbb
sub
push
push
mov
inc
pop
inc
mov
in
sbb
pop
xchg
fdivp
add
jns
idiv
cmp
jl
cld
inc
in
mov
fldpi
push
xor
push
rcl
dec
pop
cmp
xor
push
ja
addr16
cmp
jae
lock
mov
pop
or
xchg
dec
pusha
cmp
popf
sbb
mov
jge
or
imul
jns
unpcklps
push
mov
inc
roll
je
dec
sti
adc
hlt
ret
je
mov
inc
cltd
mov
jbe
mov
lock
mov
xor
jne
sbb
cmp
into
cmp
outsl
loope
or
mov
clc
pop
pop
pop
inc
mov
int3
or
enter
hlt
add
add
seto
pop
mov
out
mov
jae
dec
mov
adc
mov
insb
add
inc
outsb
mov
push
inc
std
mov
add
adcl
ljmp
mov
pop
dec
dec
sbb
jb
xor
ret
add
adcb
xchg
fsub
pop
lcall
pop
mov
fs
jne
cmp
je
sub
xor
inc
cmp
or
in
sbbb
and
mov
popa
adc
lea
je
pop
sbb
lcall
adc
jo
sbb
lea
or
setne
rcrb
ret
push
arpl
jne
rolb
mov
call
adc
inc
sbb
popl
js,pt
jo
jg
stos
mov
lods
jo
sets
xor
push
or
add
aad
mov
jne
or
sbb
jmp
mov
test
ret
js
push
and
jle
mov
or
cmp
mov
add
add
cmpl
pop
cmpsb
dec
lock
data16
js
rorl
add
jmp
mov
in
jne
clc
add
adc
inc
and
lcall
outsb
repnz
mov
leave
xor
sbb
add
jle
ret
add
es
sahf
sbb
push
incb
imul
add
mov
mov
and
sti
pop
cmp
push
insb
cmp
adcb
hlt
mov
sub
jmp
cmp
lcall
je
jmp
sub
mov
negl
incb
ret
insb
cld
cmp
lea
jbe
mov
dec
or
push
push
test
push
mov
inc
popa
and
push
xchg
add
add
inc
das
cmp
xor
mov
xchg
push
in
add
and
jmp
sbb
loop
mov
xchg
imul
es
inc
loopne
and
int
aad
cmpsb
pusha
inc
ret
xlat
jecxz
and
add
jle,pt
push
scas
cmpsb
bound
lea
sbb
or
mov
scas
mov
je
aad
sub
cmp
das
push
dec
shll
mulb
xlat
or
andl
lods
sub
inc
mov
xchg
imul
shufps
fdivr
movsb
and
inc
fdivs
in
sub
jl
loop
fldt
dec
leave
xor
cmp
add
fs
add
jb
enter
test
dec
jecxz
adc
cmpsb
movsl
or
scas
xchg
call
cltd
mov
cmpsl
jb
fsubrs
imul
test
mov
lret
cmpsl
enter
fnstenv
test
xchg
push
inc
or
adc
and
inc
jl
test
fiaddl
add
xchg
sbb
enter
mov
call
pop
mov
add
xor
xchg
sarl
add
in
cmp
jb
leave
mov
and
inc
add
mov
and
nop
mov
add
outsl
and
mov
imul
movsl
and
push
imul
inc
rcrb
dec
push
push
les
aad
and
fldl
or
adc
mov
mov
arpl
or
jns
jg
add
out
push
push
loopne
imul
inc
push
push
and
push
clc
loope
lret
lea
leave
enter
icebp
inc
enter
lods
movsl
hlt
stos
lock
enter
stos
cmc
or
pop
adc
dec
inc
inc
leave
stos
or
and
clc
loop
cmp
rcll
dec
scas
adc
xchg
inc
imul
test
out
int3
push
lea
mov
add
adc
lcall
sbb
xor
mov
ret
pop
sub
sbb
pop
cltd
add
inc
testl
and
sbb
adc
adc
push
push
in
push
js
lret
mov
jmp
mov
dec
adc
push
mov
push
mov
xchg
popa
pop
ret
push
and
sub
and
xchg
sbb
sbb
nop
or
sbb
mov
dec
push
lods
sub
mov
pop
daa
push
or
push
push
sub
sbb
push
prefetchw
ja
stc
pop
fistpll
sbb
and
stc
fnsave
pop
sbb
popf
cmpl
cmp
cmp
scas
push
mov
sub
jle
push
cltd
pop
negl
mov
add
popf
movb
roll
jle
push
jmp
ja
add
mov
pop
dec
ja
test
sbb
mov
xor
punpcklwd
insb
push
jbe
or
in
push
pusha
fsubl
pop
add
sahf
nop
lret
fcmovnu
je
pop
inc
jmp
sub
dec
je
push
loope
std
adc
in
jge
adc
adc
popa
dec
ss
aad
cli
decb
jmp
mov
mov
mov
rcr
dec
icebp
adc
leave
add
jle
jmp
jl
jecxz
jne
ret
lcall
xchg
jmp
push
add
push
mov
xor
push
xchg
and
or
mov
mov
lret
add
xchg
xchg
or
pop
lahf
pop
notl
mov
icebp
xchg
mov
pop
dec
jne
mov
mov
jg
jle
and
push
or
xor
push
push
daa
dec
lret
divl
pop
pushl
js
scas
out
inc
mov
mov
pop
nop
int3
sub
mov
rcrb
cld
fisttpl
jmp
cmp
je
cmp
dec
sar
push
pop
and
fs
sbb
leave
adc
mov
mov
sbb
fstpl
inc
jae
jge
mov
je
xchg
push
push
cmp
movsl
and
jmp
and
jmp
dec
icebp
shlb
sbb
repz
adc
push
push
mov
cmp
hlt
ss
cmp
inc
shl
iret
jo
adc
aaa
xchg
inc
sbb
mov
mov
add
cmc
scas
ficoml
pushw
and
sub
mov
insb
fstl
lea
adc
sti
jecxz
add
sub
or
mov
popa
mov
xchg
sbb
cwtl
inc
xor
mov
sub
fsubp
sbb
std
sub
push
dec
push
adc
repnz
push
pop
push
lea
push
push
push
lret
sbb
call
shll
lea
cmp
xchg
and
add
xor
mov
add
xchg
add
imul
and
jo
movl
pusha
push
hlt
mov
jnp
addb
cmp
cmp
imul
insb
sbb
add
sub
mov
pop
rcrb
aam
or
mov
mov
or
mov
out
add
push
popf
push
mov
test
mov
lods
in
test
push
fcomps
ret
shll
pop
jp
rorb
dec
adc
inc
movsl
testl
in
add
sub
or
jle
ss
pop
loope
cmpsb
push
lahf
and
pop
push
lret
push
and
daa
lret
dec
aam
dec
outsl
add
inc
rolb
pusha
mov
out
das
push
add
dec
sbb
imul
mov
aam
and
adc
sub
cmp
daa
or
adc
shl
in
mov
leave
daa
call
in
and
nop
push
fldl
loop
sarb
xchg
test
lea
test
or
cwtl
sub
out
movsb
scas
aam
cmp
push
or
push
aas
push
mov
enter
pushf
jl
pop
testb
pop
fmull
rolb
mov
lea
adc
out
pushf
inc
jl
sbb
add
sbb
jbe
pop
cmp
lods
push
xor
popa
adc
clc
js
push
xchg
pop
mov
popa
aam
push
aam
das
in
sbb
and
add
mov
jne
int3
push
lea
movsl
cmp
add
fcoml
adc
dec
fildl
cmp
mov
mov
inc
add
mov
lods
fdivl
movsb
popa
dec
or
std
ret
push
imul
pop
or
je
adc
xor
mov
mov
jne
push
sub
xor
pop
pop
inc
adc
fdivrs
pop
xor
mov
iret
je
lea
push
loopne
add
push
mov
mov
inc
jo
out
enter
add
sbb
cmp
pushl
call
push
cli
into
dec
ret
adc
or
mov
or
sub
jl
repz
les
pop
jo
out
mov
dec
lock
div
push
dec
je
jmp
push
dec
push
push
in
jge
fisubrs
sub
sub
in
sbb
jmp
sub
cwtl
push
sub
in
cmp
push
mov
insl
fstpt
add
mov
inc
adc
dec
cmp
dec
and
inc
loope
bound
cs
stos
icebp
loope
push
mov
push
in
fistpl
push
or
lock
sbb
mov
pop
int
mov
jecxz
icebp
jno
fistps
cmp
out
mov
sbb
add
xlat
push
fs
mov
mov
into
in
and
add
dec
cmp
dec
inc
sub
xor
test
adc
iret
js
push
mov
outsl
mov
decl
dec
popf
dec
push
fimull
leave
and
jbe
loope
push
push
out
cmp
xchg
in
mov
test
inc
test
mov
fsubs
jge
push
push
inc
fidivs
push
or
cld
dec
pop
inc
jl
adc
punpckhdq
add
mov
imul
or
pop
push
mov
xor
testb
jo
adcb
pop
aaa
and
mov
sbb
jl
mov
test
das
and
mov
fcomip
pop
adc
adc
adc
ja
pop
pop
es
dec
sbb
push
cs
rorb
xchg
lds
ret
mov
adc
mov
scas
inc
xor
push
add
fmuls
cmpsb
push
inc
cmp
scas
sarb
out
ret
xor
and
inc
movsb
loope
in
pop
loopne
sti
je
cmp
mov
jo
pushf
sbb
repz
or
xchg
mov
mov
pop
inc
lret
ja
arpl
or
test
cmp
xor
clc
xor
sbb
push
jne
movb
clc
mov
cmp
jne
popf
movsl
cmpsl
adc
fldz
xor
push
mov
movb
notb
addr16
dec
aas
mov
xor
xchg
dec
ja
push
lea
fcoml
lods
push
sub
xor
and
jge
and
test
xor
std
or
popf
sub
mov
sbb
mov
insl
nop
or
push
sbb
push
popf
les
aam
leave
mov
adc
mov
in
lods
nop
pop
cmp
iret
push
adc
enter
dec
xchg
loopne
cltd
add
push
inc
stos
inc
aam
lods
test
jbe
cli
dec
mov
or
or
mov
scas
mov
std
int3
ja
push
and
pop
mov
pop
sbb
push
cmp
mov
sbb
or
jo
push
push
push
lea
add
adc
test
mov
cmpsl
mov
sbb
sbb
enter
push
lret
ja
jbe
jl
xchg
andb
jbe
or
sbb
mov
and
xchg
push
or
inc
shlb
movsl
sbb
test
add
sub
popf
cwtl
imul
fldl
fsubrl
xchg
adc
mov
pop
inc
movsb
out
rcrb
xchg
push
add
mov
movsl
or
cmp
or
ja
jl
cltd
cli
jno
cwtl
mov
idivl
out
andl
pop
pop
mov
sbb
negl
popa
in
sbb
ja,pt
lea
mov
ss
lds
and
leave
xor
adc
fmuls
inc
jo
xor
add
pop
sarl
dec
or
xchg
pop
jo
dec
mov
adc
adcb
ret
mov
push
adc
adc
mov
add
jg
push
jle
add
loopne
aaa
push
pop
cmp
cmp
les
sbb
fistps
mov
jmp
inc
fdivs
cs
sub
push
push
out
out
fstps
add
jmp
adc
sbb
and
jp
jbe
repz
mov
or
fisubrs
add
mov
loopne
fidivrl
push
cli
or
push
das
ret
pop
pusha
mov
adc
insb
push
push
in
mov
jmp
jl
popa
push
sbb
adcl
jecxz
and
test
je
sbb
pop
add
out
mov
insl
lea
pop
sbb
mov
jle
fidivrl
sub
jo
mov
xor
jbe
mov
cltd
mov
lea
mov
jle,pt
decl
orl
nop
arpl
mov
add
cmp
jge
inc
jne
notl
sbb
idiv
push
mov
push
push
mov
mov
dec
ret
xor
idiv
shl
jge
add
test
jg
into
les
adc
dec
or
push
lods
cwtl
jp
test
sub
dec
dec
or
adc
idivb
lock
push
lock
in
or
out
outsl
mov
adc
fstpl
push
pop
jge
pop
add
aam
sti
sub
clc
je
out
movsb
mov
inc
lcall
test
test
into
jp
xor
movsl
out
test
dec
daa
pusha
js
xlat
pop
loopne
out
sbb
dec
fs
or
xchg
daa
cld
xchg
scas
arpl
mov
test
mov
lahf
xor
mov
movb
sbb
dec
lea
addr16
aaa
inc
cld
jl
xlat
je
fists
mov
dec
nop
or
jmp
jge
jmp
mov
hlt
fildl
mov
or
add
or
out
addl
fdivrp
mov
sub
mov
lea
test
mov
inc
lock
mov
les
xchg
pop
jl
jmp
mov
push
insl
cmp
or
clc
fidivl
jmp
push
jo
sbb
xchg
cli
stos
ja
jge
push
pop
mov
pop
jne
pop
xor
jle
pop
movb
push
repnz
mov
xor
pop
or
in
movsb
outsb
jp
pop
add
mov
les
pop
add
aam
clc
test
inc
lea
ret
push
jmp
cmpsl
je
addr16
push
mov
je
xchg
ret
cs
in
je
or
and
mov
rcll
shrb
dec
out
push
pop
pop
into
pop
leave
cld
mov
leave
sub
cmp
sbb
mov
add
imul
in
add
into
and
mov
repnz
inc
cmpsb
adc
int
ret
xchg
loope
sbb
loope
pop
iret
or
mov
xor
jne
xor
mov
inc
jne
cli
xchg
pushl
clc
popf
movsb
xchg
adc
push
cs
mov
leave
pusha
pop
leave
pop
xor
and
es
jo
test
push
mov
pushf
lea
push
mov
push
xchg
jle
arpl
hlt
pop
in
adc
lods
or
shrl
fs
out
decb
add
cmp
sahf
enter
inc
movl
andl
lock
sub
pop
cmpsb
jle
imul
mov
add
dec
inc
cmp
cmpsb
pop
mov
or
jb
or
adc
dec
push
sbb
xchg
cli
jb
mov
pusha
adc
mov
sbb
lods
jmp
andl
pop
int3
out
pop
popf
jo
jbe
mov
xor
arpl
dec
dec
or
xchg
pop
or
pop
dec
and
cmp
clc
dec
adc
nop
out
fisubl
mov
pop
mov
bound
or
jo
out
mov
mov
xchg
or
call
test
inc
lcall
inc
sub
clc
clc
or
das
push
sub
clc
setb
test
mov
cmp
call
push
add
xor
sub
andl
push
lea
jno
or
aaa
and
sbb
jle
jle
je
push
fstps
out
je
jmp
add
push
or
push
xor
adc
dec
dec
mov
or
mov
in
and
in
hlt
or
fidivs
xchg
iret
push
fs
sbb
mov
add
shrl
inc
push
inc
scas
jge
xlat
das
push
scas
jp
jp
push
pop
xchg
pop
add
adc
sbb
and
rcrb
and
sbb
sbb
xor
mov
mov
loopne
or
pop
jmp
mov
dec
cld
outsb
jmp
fisubs
movsl
push
mov
sub
mov
push
add
in
aas
jmp
cltd
shlb
inc
sub
push
jl
pop
sti
xor
inc
and
xor
sub
sbb
dec
and
neg
or
add
push
pop
jle
mov
jl
pop
stc
mov
popl
and
das
inc
xor
adc
sbb
adc
xchg
out
push
jb
dec
fiaddl
jmp
or
js
inc
sub
add
pop
imull
into
fdivl
sbb
and
mov
cli
push
pop
pop
add
adc
lds
sub
sbb
adc
mov
cli
pop
dec
in
sbb
cwtl
loop
and
pop
push
push
mov
enter
repnz
or
dec
js
push
rclb
dec
in
mov
or
cmp
pushl
add
add
lods
lret
je
and
adc
jae
shl
popf
sbb
mov
sbb
sbb
test
test
add
sub
outsb
icebp
fsubr
mov
mov
in
mov
mov
bound
test
movlps
fwait
ret
ret
sbb
push
cmp
lahf
dec
cld
pop
test
and
and
cs
mov
pop
insl
test
mov
movaps
or
cmp
jne
popa
imul
sahf
lods
xor
cmp
mov
mov
push
or
cmpsl
pop
push
add
rcrb
mov
adc
fcmovnu
mov
push
xchg
mov
push
testl
gs
and
jge
and
test
sbb
shll
outsb
call
sub
push
inc
bound
je
clc
mov
xchg
pop
pushl
loopne
mov
scas
mov
in
ja
sub
andl
dec
cmp
mov
sbb
jecxz,pt
inc
out
ret
je
sbb
sub
cmp
cmp
dec
mov
jmp
dec
mov
sub
scas
dec
insb
js
push
mov
cmpsb
out
jge
add
xchg
inc
jmp
inc
xor
shlb
je
js
mov
sub
add
int
leave
js
cmp
jge
mov
rorl
mov
or
cmp
jle
sarb
xor
addl
std
mov
cmp
sub
fsubr
sbb
popf
cmp
mov
xchg
jb
push
aaa
fidivrl
xchg
mov
add
xchg
mov
shlb
sub
int
push
dec
mov
cmp
in
mov
stc
dec
pop
jo
sub
inc
sete
pusha
jnp
adc
loope
and
je
sbb
in
sbb
out
push
or
sub
xor
data16
add
xlat
and
sbb
sbb
lods
add
adc
enter
shrb
mov
ret
add
jae
shl
dec
push
fcompl
add
mov
imul
pop
jecxz
push
hlt
js
sbb
negb
into
lods
pop
pop
jmp
sti
sbb
add
lock
test
push
iret
sub
sbb
mov
push
das
jmp
in
aaa
push
sub
mov
inc
std
or
insb
or
push
or
sbb
sub
push
iret
ss
add
jl
call
sub
daa
push
pop
nop
pop
inc
xchg
push
or
cs
xchg
push
jle
sti
add
cmp
sbb
mov
sub
mov
push
sbb
mov
inc
lcall
cwtl
push
in
sbb
pop
pop
adc
adc
loop
clc
mov
sbb
lcall
mov
or
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
xor
insb
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
out
testb
insl
enter
or
jbe
sbb
inc
adc
imul
or
jp
xor
je
inc
out
or
dec
daa
cmp
jno
popf
jno
push
or
aaa
inc
popa
and
popa
rorb
inc
xchg
test
mov
adc
adc
clc
sub
movsl
adc
add
cs
das
mov
push
lock
add
hlt
add
in
and
mov
clc
pushl
push
push
xor
pop
push
push
add
and
rorl
pop
clc
lock
aaa
mov
clc
outsl
lods
hlt
das
inc
jge
cmp
jmp
das
hlt
mov
loopne
out
out
or
jbe
into
sbb
add
push
outsl
or
sbb
or
out
mov
mov
adc
sub
cmp
or
insl
inc
pop
add
ds
in
jb
add
aaa
cmpsl
sbb
sub
jg
mov
test
aam
cmpsl
mov
mov
jb
dec
pop
push
mov
push
push
push
movsb
clc
add
or
mov
fildl
xchg
sbb
pop
imul
mov
addb
xor
xor
mov
popa
pop
sbb
mov
sbb
mov
push
adc
insb
push
cmp
ds
cld
add
push
lea
push
mov
mov
js
rcll
fwait
sbb
pop
pop
push
mov
inc
test
mov
jo
mov
pop
mov
loopne
loope
jmp
aam
sub
add
push
add
and
inc
push
push
ffreep
repz
jp
sbb
xchg
subb
add
loop
pop
inc
pop
add
push
xlat
ss
xchg
mov
inc
push
inc
sbb
cltd
mov
adc
pop
mov
push
add
xor
inc
inc
inc
addr16
push
neg
cld
mov
pusha
scas
xchg
add
xor
push
sub
mov
jb
and
sub
mov
mov
push
test
add
mov
sbb
push
ss
movsb
lea
add
jl
andl
mov
or
jle
movl
ja
pop
loop
sub
addr16
div
lock
mov
inc
jle
gs
sub
imul
sbb
inc
incl
mov
sub
lea
mov
xor
cmp
cmpsl
jle
enter
push
push
inc
xchg
sub
pop
mov
shlb
jns
mov
pop
push
cmc
jb
mov
test
out
outsb
call
sub
adc
popa
xchg
push
xchg
jo
adc
leave
jne
or
or
and
push
sahf
add
lock
int3
jmp
mov
jb
loopne
mov
jbe
fs
shlb
subb
fstpt
shlb
add
mov
adc
mov
mov
inc
insl
ljmp
add
aam
inc
sbb
adc
and
sub
sbb
and
mov
bound
jns
aaa
sbb
shufps
aaa
adc
or
dec
or
mov
xor
aas
xor
sbb
add
mov
loop
ljmp
daa
push
adc
ja
fists
fs
mov
push
jnp
mov
adc
mov
sbb
outsl
add
push
sbb
lods
imul
sbb
fdivs
mov
mov
addb
jl
and
jbe
in
out
xchg
mov
sub
or
jbe
mov
dec
cmp
sub
movl
movsl
gs
push
push
mov
adc
cmc
in
bndldx
popf
dec
stc
inc
imul
pop
adc
fisttpl
rclb
or
insl
lret
jo
add
repz
fadds
enter
xchg
xchg
bound
cmp
or
rclb
sti
sti
sbb
fstps
pop
int3
xor
adc
sbb
mov
sbb
inc
or
lcall
scas
add
or
sub
xor
adc
xchg
xchg
push
cwtl
lods
mov
fimull
mov
fwait
or
xchg
dec
sub
test
loopne
outsb
cmp
test
or
sub
gs
add
xchg
repz
iret
nop
lea
cmp
mov
imull
or
push
jmp
adc
push
setne
cmpb
cmp
test
lcall
rorl
cmpb
aad
push
or
add
stc
negl
roll
scas
lea
lods
aad
push
or
push
pop
or
and
out
lcall
or
pusha
push
ret
je
fcompl
pusha
enter
xor
add
cmp
or
push
dec
or
adc
mov
ficoms
mov
jb
jge
inc
cli
xchg
and
inc
mov
in
adc
cmp
nop
subl
mov
je
data16
xchg
mov
jle
jns
dec
xchg
mov
js
adc
jnp
movsb
fwait
orb
hlt
mov
mov
js
adc
sub
adc
pop
rcll
loop
jne
jmp
movsl
loopne
ja
popf
pop
dec
ja
in
add
sti
sti
mov
jno
addr16
fwait
add
fcoms
jb
div
pop
fsub
push
in
inc
mov
push
pop
jns
pushl
stos
leave
ljmp
and
cmp
cltd
mov
sahf
fildl
repz
addr16
add
sub
or
pop
sti
add
push
dec
dec
xchg
nop
adc
push
cld
pop
adcb
push
sti
nop
inc
sub
and
adc
pop
xor
push
adc
int
or
orb
jo
xchg
or
pop
pop
inc
ficoml
add
addb
xor
xchg
js
fwait
dec
ljmp
aaa
adcb
lock
dec
push
daa
loope
shlb
in
lock
data16
aad
mov
inc
sub
xor
add
cli
jle
add
jecxz
jp
adc
rorb
mov
push
and
pushw
mov
pop
pop
mov
and
inc
cld
mov
pop
in
ja
lods
les
inc
or
aad
call
test
jle
inc
roll
rorl
push
pop
mov
adc
push
aam
jmp
bound
mov
sahf
addl
iret
test
scas
push
arpl
pop
pop
outsl
popa
add
push
lock
loopne
rolb
mov
daa
mov
ret
subb
mov
pushf
mov
cmp
lret
addr16
in
add
adcb
loopne
test
lock
ret
pop
pop
push
mov
loop
imul
mov
or
push
jg
clc
inc
adc
sub
add
in
mov
es
in
fisttpll
lahf
roll
mov
lea
sbb
lahf
mov
mov
imul
cmc
mov
inc
mov
addr16
inc
inc
fsubrl
fdivr
lods
and
insl
sub
xchg
bound
add
and
add
add
shrl
loop
ficomps
fs
dec
out
sub
mov
xchg
dec
lea
push
jne
in
std
dec
jbe
inc
adcl
loope
inc
inc
add
inc
out
cmpl
ss
iret
aam
add
xchg
mov
add
jecxz
imul
rolb
bound
sbb
and
push
outsb
lock
sbb
aas
add
mov
aam
dec
mov
jns
push
mov
enter
sahf
out
lret
test
mov
nop
pop
pop
xchg
or
enter
and
add
scas
add
sbb
scas
loop
andl
sbb
jo
loope
xchg
adc
or
cmc
and
jg
and
push
fwait
enter
scas
push
push
gs
xor
jns
fisttpl
xchg
sub
std
jno
or
or
outsl
dec
sbb
xor
movl
jl
out
rorb
adc
or
roll
dec
sahf
adc
xchg
arpl
mov
test
jae
sbb
dec
mov
or
add
das
and
stos
adcb
and
popf
movsb
mov
clc
or
push
or
mov
mov
pusha
imul
loop
fwait
insl
or
lahf
xor
and
pop
mov
sbb
inc
push
pusha
ja
cmpsl
aaa
push
mov
shl
mov
push
jmp
adc
daa
fadds
fisttpll
loopne
or
stc
fisttpll
orb
and
add
test
sub
jne
pop
loope
xchg
shlb
dec
push
cmp
jnp
je
jge
orb
ror
and
dec
fsubs
cmpsb
clc
daa
testl
repz
xchg
fldenv
mov
inc
cmp
test
enter
je
enter
sub
aad
pop
inc
pop
push
test
jo
cmp
scas
xchg
adcl
movsb
jnp
scas
jmp
test
inc
add
popa
xchg
cmpsb
and
sbb
inc
jb
mov
inc
adc
or
inc
icebp
sbb
sbb
stc
sahf
xor
mov
pop
pop
or
rcrb
jno
jge
sub
cmpl
lcall
add
push
pop
cmp
je
mov
mov
movsb
shll
mov
or
sbb
loopnew
movsb
fcomps
inc
dec
dec
rorb
jns
test
into
and
push
lds
inc
push
in
aam
jge
pusha
inc
ja
and
and
mov
loopne
das
cmp
mov
and
and
push
xchg
stos
enter
mov
es
pop
sub
add
nop
jge
pop
enter
fsubrl
or
dec
pop
inc
sub
jnp
adc
mov
or
push
jge
sub
dec
loopne
insl
fs
imul
lods
rcl
lods
daa
das
sbb
jae
test
xor
es
rorb
push
shl
sub
mov
or
sbb
dec
sahf
jbe
into
int3
xor
loop
sbb
dec
or
sqrtps
xchg
cmpsl
adcb
push
pop
fsubl
pop
insl
faddl
fiadds
rorb
push
out
mov
mov
fsubrl
add
pop
ror
pop
movsl
je
lcall
jno
in
stos
fwait
mov
mov
add
sahf
mov
lock
add
push
or
loopne
popa
dec
add
sbb
fldl
mov
pop
pop
dec
fldl
add
or
add
pop
xor
mov
push
jbe
add
iret
mov
ljmp
outsl
or
or
mov
inc
adc
push
decb
mov
punpckldq
and
fsubrs
shrl
lret
rorb
push
mov
call
shr
or
pusha
bound
lock
nop
jb
mov
fstl
xor
movsl
or
nop
addb
adc
or
shl
fadd
mov
pusha
inc
test
dec
pop
or
stos
jo
mov
xchg
mov
loope
ljmp
cmp
mov
mov
jbe
mov
inc
xorl
push
push
and
jae
fisttpl
rclb
mov
adc
jbe
sbb
int3
lods
push
dec
pusha
pop
xor
ja
xor
fs
xchg
js
fcomi
pop
push
xchg
int3
push
jae
mov
push
adc
and
lret
dec
push
data16
add
mov
das
add
mov
xlat
addl
test
les
in
inc
xchg
je
clc
xchg
test
jae
cmp
cmp
push
mov
mov
rcll
rolb
add
xorb
scas
xchg
mov
jp
cmp
push
lock
mov
sub
push
sbb
dec
and
add
mov
jbe
push
inc
and
push
dec
lods
int3
sub
mov
scas
mov
pop
or
ds
dec
hlt
sub
push
arpl
sub
adc
jo
xorb
rolb
pop
add
mov
lds
dec
daa
sub
adc
and
and
in
outsl
cmp
iret
std
dec
and
cmp
ja
add
or
push
adc
add
cmp
orl
and
mov
jbe
adc
fdivrs
dec
clc
out
or
mov
cmpb
bound
mov
pushf
mov
xchg
outsb
cmp
in
pop
jbe
iret
add
pop
push
pop
push
idivb
sbb
mov
or
dec
in
sbbb
sub
dec
push
int3
push
inc
inc
ret
add
fists
in
test
fiadds
or
int3
out
sbb
or
mov
addl
fbld
imul
xchg
xor
pop
push
lret
mov
mov
in
call
add
shrb
and
insl
add
sbb
addl
add
add
adc
add
fadds
mov
mov
ds
jnp
dec
loop
xor
xorps
add
pop
dec
loope
clc
je
xor
cmc
sbb
clc
ds
push
loopne
stc
sub
lea
push
lea
push
inc
push
movsl
push
push
nop
fs
rdtsc
sbb
add
je
sbb
sti
mov
mov
cmp
jl
mov
hlt
int3
xor
sarl
pop
out
adc
jle
mov
cmp
jne
cmpsb
add
sbb
push
add
or
ret
cmc
add
push
ss
pop
test
lock
add
out
out
cmp
je
scas
mov
pushw
push
mov
repz
sbb
insl
fcmovnu
xor
pop
cs
add
fstps
sti
push
pop
enter
sahf
xchg
add
jmp
sbbw
adc
pop
pop
ds
in
xor
in
sub
lea
out
sub
dec
or
in
out
orl
xor
or
push
rolb
inc
aas
mov
jae
xchg
orb
int
inc
pop
sti
call
ret
or
arpl
adcl
rorl
jge
pop
call
out
lock
mov
push
sub
push
push
jns
or
dec
and
jl
popa
adc
or
add
cmp
jmp
mov
ds
lock
or
neg
lcall
jne
js
outsb
xchg
incl
cmp
je
sbb
incl
testb
sub
mov
fbstp
or
aad
pop
mov
push
test
outsl
outsl
scas
add
inc
or
pop
pushl
and
mov
mov
je
les
pop
aaa
mov
mov
dec
or
repnz
sub
jne
push
sub
dec
and
sbb
loope
js
in
out
dec
or
xchg
push
or
add
shlb
inc
mov
xchg
add
dec
stos
test
test
push
add
in
imul
lea
sahf
orl
clc
dec
mov
and
push
mov
cmc
enter
outsl
cmp
ret
dec
popa
adc
rcll
or
leave
clc
pop
leave
push
cmp
je
xor
adc
mul
seto
stos
shll
or
and
int
dec
push
jmp
cmpsl
mov
mov
push
xor
test
jbe
sub
roll
cmp
test
add
jo
bound
fildl
jns
fcomp
ljmp
jo
pop
ret
rclb
cs
inc
mov
inc
cmp
mov
or
or
jl
push
cmp
inc
add
or
and
mov
or
jno
fmull
jge
sbb
adc
lods
cmpsl
das
cs
cwtl
jecxz
jp
mov
orb
shlb
and
mov
and
xchg
rcrb
or
xor
sbb
sub
xabort
add
or
cmp
adc
lcall
shr
push
xor
sbb
leave
add
and
or
in
mov
push
mov
cmp
test
or
addr16
add
aas
xor
mov
mov
sarb
lock
xor
xchg
dec
push
jbe
add
adc
dec
pop
gs
sub
bnd
push
mov
inc
mov
adc
mov
lods
add
clc
adc
aam
stos
movsl
or
lods
sub
fisubrs
shl
jmp
jl
ret
out
push
test
je
cli
jmp
mov
aam
or
negb
inc
cmp
jae
dec
pop
xor
sub
cmp
inc
rorb
ret
push
pop
shll
adc
sub
pop
cmp
jne
and
adc
and
lcall
dec
sub
adc
ss
push
fucomi
jb
addb
inc
xor
adc
shll
das
inc
cltd
push
cmp
xchg
push
mov
in
lcall
cli
adc
or
pop
push
xor
xor
out
sub
push
lret
je
add
movsl
int3
pop
or
mov
mov
insb
or
inc
cmpsl
fistl
imul
jns
push
and
or
xchg
outsl
ss
cmpl
cmp
and
ja
roll
lret
jno
push
out
mov
dec
mov
inc
shl
jmp
push
jle
test
dec
jns
mov
mov
fistpl
fcomps
or
or
inc
and
jae
push
add
sbb
push
xor
adc
inc
or
pusha
or
push
lcall
dec
or
mov
xchg
inc
sbb
jg
mov
push
push
push
icebp
sub
or
adc
push
sub
int3
and
dec
sub
cmc
cmpb
sbb
or
dec
jl
or
push
dec
add
sub
add
add
mov
pusha
add
addl
sbb
add
decb
push
mov
jl
dec
or
xchg
mov
inc
cmpsb
int3
rcrl
and
xchg
push
and
pushf
xchg
ret
and
jecxz
dec
popa
mov
outsb
pop
pop
repz
call
mov
nop
out
cmp
test
dec
sub
push
clc
mov
int
pop
in
or
push
sbb
je
out
and
sub
inc
scas
flds
imul
rclb
arpl
cmpsl
mov
inc
jp
push
bound
push
in
ljmp
add
push
push
jbe
insb
mov
neg
push
mov
ret
mov
adc
pop
out
jne
rclb
testl
mov
jmp
js
or
int
in
mov
pushf
fnstcw
dec
add
xor
or
inc
and
jbe
xorl
es
add
outsl
aaa
pop
mov
inc
push
shlb
loope
ret
dec
mulb
aad
jnp
inc
pop
ds
mov
xchg
lods
cmc
adc
or
push
ficomps
xchg
dec
xchg
cmp
mov
mov
jno
das
jp
jb
insl
icebp
push
pop
arpl
aam
or
movsl
jmp
adc
pop
cmp
lock
add
pop
mov
mov
loopne
cmpsl
inc
add
mov
loopne
pop
nopl
jno
fcmovnu
dec
cmc
inc
adc
in
mov
mov
es
jnp
inc
cmp
sub
sbbl
push
inc
adc
sbb
es
shrl
mov
iret
sbb
dec
js
mov
outsb
add
mov
mov
lahf
jb
sbb
fwait
inc
pop
lcall
pop
adc
shlb
mov
dec
push
cli
push
inc
sbb
add
sbb
dec
pop
mov
push
or
mov
pop
push
je
jo
jb
and
pop
fs
lahf
cmp
sub
add
jmp
lock
aaa
or
leave
ret
push
mov
cltd
iret
xchg
repnz
lret
jbe
mov
frstor
cs
bound
cmp
xchg
addb
add
push
test
sub
push
iret
cli
adc
dec
je
orl
stos
shll
dec
cmp
insl
dec
add
jmp
test
lea
mov
shrb
test
les
aam
faddl
inc
xchg
mov
movsl
test
sbb
aam
mov
popf
add
add
dec
movl
lods
cmp
pop
int3
adc
andb
mov
sahf
aaa
nop
xor
insl
jae
mov
mov
cmpsl
mov
icebp
and
xor
push
lea
mov
sub
push
data16
imul
sub
and
fs
movsb
sbb
sbb
or
add
sub
lds
out
cmp
adc
mov
into
and
adc
lds
aam
inc
jne
jno
insb
push
shr
ja
pop
repz
popf
jo
push
push
xchg
mov
pop
cmp
iret
mov
or
lea
push
xchg
mov
rcll
xchg
arpl
shl
outsb
cmc
hlt
xchg
xor
and
adc
test
push
push
lea
inc
rclb
xor
out
mov
fcom
mov
notb
cmp
enter
daa
pop
push
cltd
sub
leave
lea
jg
cmpsl
mov
pop
ljmp
adc
jno
lcall
and
push
dec
xor
js
xorb
sub
movsb
jo
push
cmp
or
loopne
cmp
outsl
sbb
jae
rcrb
movsb
mov
lods
stos
mov
xlat
divb
dec
fisubrl
fsubrs
and
sub
push
dec
insl
sbb
xor
lods
jmp
gs
dec
push
sbb
testl
cltd
pop
lea
pop
mov
cs
push
hlt
lea
push
add
xchg
jnp
cmpsb
call
dec
jo
dec
insl
ss
sub
lds
mov
loop
mov
inc
mov
rolb
aas
loope
or
loopne
inc
or
cmpsb
aaa
push
xchg
and
sub
ja
popa
nop
pop
and
and
inc
inc
add
sbb
jne
mov
ret
xchg
enter
mov
test
push
pop
and
push
pop
sbb
cmp
sub
fistpl
and
shl
mov
and
sbb
loope
xor
loopne
stc
addr16
subl
loope
xchg
movsl
cmpb
add
pop
ret
mov
inc
in
inc
test
shrb
sbb
mov
mov
xchg
pop
aad
rclb
sub
and
xchg
inc
mov
jnp
es
clc
xor
daa
std
cmp
outsb
subb
loopne
test
inc
add
ret
in
add
and
std
sbbb
std
leave
stos
xchg
out
jmp
mov
push
testl
jle
add
jbe
and
sbb
and
and
jg
sahf
test
dec
adc
add
js
push
insb
and
adc
arpl
adc
inc
popa
pop
sbb
mov
ret
jge
and
imul
test
adc
cmp
inc
fst
jmp
loope
loope
stos
add
cmp
imul
or
aad
push
xor
test
rcl
push
mov
push
mov
in
test
push
fcoml
shll
sbb
push
sub
add
sbb
outsl
push
pop
notb
sub
clc
js
ljmp
mov
insb
pop
adc
cli
inc
xchg
add
mov
cmp
mov
jp
jne
mov
or
adc
pop
push
mov
inc
test
dec
hlt
add
push
imul
aaa
nop
jo
sarl
ss
pop
and
push
mov
jno
mov
ja
stos
nop
test
or
pop
cli
dec
xor
enter
dec
jmp
rclb
fnsave
aaa
xchg
imul
sub
mov
push
pusha
jo
inc
insb
pop
mov
ljmp
and
scas
movb
stos
push
and
xchg
cmp
push
mov
or
loopne
pop
idivb
lea
mov
popa
sub
add
pop
aas
sbb
mov
ret
in
dec
sbb
movsl
leave
add
jae
mov
sub
inc
loopne
or
mov
or
xchg
xchg
inc
or
arpl
int3
push
or
lods
mov
mov
cmp
cwtl
lock
add
or
cmp
loop
or
inc
pop
int3
xorl
movsb
sahf
lock
dec
sbb
pop
push
ss
lods
test
xchg
clc
lea
enter
cmp
inc
sub
xchg
jbe
aam
fisttpll
mov
pop
push
ud1
sub
sub
or
pop
scas
out
inc
in
xor
std
jnp
cltd
mov
popf
sbb
mov
inc
loope
and
ss
lock
pop
mov
andb
mov
mov
sbb
pop
push
sbb
mov
out
adc
mov
lods
add
nop
xchg
xor
xor
xlat
cwtl
mov
pop
shlb
adc
in
fs
roll
sti
add
mov
movsl
jmp
pop
testl
and
or
loope
xchg
pusha
pop
jnp
or
repz
cmp
lea
and
xor
stc
cmp
push
push
mov
add
dec
mov
js
xor
insl
fs
popa
and
or
cmp
xchg
rorl
inc
mov
and
rcl
sub
pop
movsl
adc
enter
jecxz
ret
sbb
imul
push
jl
fwait
es
adc
xor
add
shll
test
mov
adc
dec
in
cmpb
nop
pop
add
xchg
sub
outsl
lcall
ud0
shlb
cmpsl
test
and
or
mov
shll
cmp
jg
mov
jne
pop
mov
push
das
lahf
jp
sub
mov
dec
out
xchg
push
dec
dec
xor
dec
insb
in
test
aaa
sbb
cmp
lea
sub
mov
add
movsl
dec
xor
push
subl
mull
jle
push
xchg
push
lcall
sub
add
loop
sarb
out
incl
aas
fsubrs
mov
cmp
sbb
sbb
cmp
jae
outsb
cmp
push
jno
fsubr
aam
inc
inc
or
out
shlb
ja
insb
add
in
pop
mov
adc
dec
ds
movsl
pop
std
cmc
sub
lods
and
inc
push
push
rol
movswl
out
add
test
jmp
cwtl
inc
or
fdivr
aas
movsb
jmp
loopne
jg
ds
rclb
dec
insb
push
push
push
mov
stos
mov
add
addr16
cmova
adc
cmp
or
sbb
cmpsb
arpl
push
das
or
sbb
mov
mov
flds
and
xor
in
insl
mov
inc
pop
imul
pop
push
pushl
cmc
sub
dec
and
pop
test
pusha
in
adc
xchg
adc
das
pop
clc
xchg
pusha
es
or
inc
mov
in
inc
push
scas
ljmp
add
mov
addb
and
mov
sbb
pop
adc
pusha
imul
sbb
pop
test
dec
pop
mov
mov
imul
mov
sub
dec
sbb
jns
call
ror
inc
dec
cmp
mov
mov
cmpsl
mov
popf
mov
add
mov
or
push
mov
inc
or
inc
xor
fistps
cmp
sbb
xchg
dec
sbb
fcompl
inc
mov
out
push
cmp
fdivrl
xor
mov
xor
in
jp
push
aam
pusha
and
lea
js
mov
add
mov
mov
pop
fidivs
lret
inc
add
dec
pop
inc
adcb
lret
or
popa
fcoms
pop
and
enter
push
jb
js
int
scas
pop
je
incb
dec
in
jno
lea
lea
sbb
jb
mov
and
or
xor
pop
imul
int3
les
jl
xchg
cltd
add
mov
xchg
dec
cmp
hlt
inc
icebp
mov
test
hlt
push
push
js
movsl
mov
rclb
pop
cmp
add
xor
rolb
int3
sbb
mov
mov
lods
orb
jmp
mov
scas
mov
loope
incb
jle
inc
inc
ret
fnsave
scas
jbe
into
mov
mov
cmp
lods
call
pop
xor
daa
push
or
push
push
mov
adc
fwait
sbb
mov
into
mov
cs
test
dec
mov
and
cltd
out
popa
mov
clc
lret
fdivr
roll
ret
mov
push
loopne
call
lds
rorl
pusha
cmp
in
pop
mov
es
jl
jmp
add
mov
rolb
dec
xlat
scas
nopl
jb
adc
shl
pusha
sbb
das
sbb
test
bound
sbb
push
movl
jmp
inc
inc
adc
mov
in
aad
imul
pop
aam
mov
mov
adc
mov
jge
and
cwtl
add
pop
adc
mov
addr16
scas
jmp
aam
or
sbb
imull
and
pusha
and
arpl
push
mov
rorb
push
dec
jne
sbb
lea
pusha
mov
pop
scas
mov
loopne
shr
jo
mov
and
jmp
sbb
test
push
pop
ja
adcl
mov
leave
mov
fwait
imul
sbb
out
sub
cmp
je
iret
mov
lods
lods
xchg
pushl
lock
add
inc
test
mov
test
xchg
sbb
xor
fcmovnu
jb
mov
mov
lea
cli
jb
sbb
adc
adc
or
sbb
movsb
mov
je
jmp
lea
adc
mov
dec
das
xor
ja
sbb
add
lods
adc
cmp
je
mov
mov
add
jo
dec
mov
scas
loop
cmp
jge
insl
push
test
push
arpl
orl
aaa
cmpl
push
enter
push
push
cmp
nop
lds
jge
xchg
push
mov
frstor
popf
aam
push
incb
rorl
int
ret
jp,pt
and
out
je
jp
dec
push
dec
loope
or
jge
data16
push
loopne
xchg
jne
mov
outsb
lock
or
fs
int3
or
call
inc
jmp
xchg
push
inc
nop
ja
pop
lea
push
cltd
cmp
or
ret
lods
pop
mov
push
jge
outsb
dec
sbb
push
cmp
aaa
push
inc
or
int3
fwait
into
cld
out
shl
lods
mov
jmp
cmp
je
aaa
jns
or
jo
das
andl
pop
call
add
insl
mov
out
mov
ret
jmp
adcb
mov
shr
add
and
lcall
enter
xor
popa
add
in
pusha
incb
andl
mov
push
xor
iret
sti
mov
ljmp
sbb
aad
jge
daa
arpl
jne
sbb
push
xchg
push
cmp
icebp
adc
or
and
adc
les
xor
push
inc
in
cmp
and
popa
pop
or
lock
dec
lcall
shll
jne
xchg
jo
test
jg
jge
test
xorb
adc
faddl
push
sbb
lods
push
and
sub
mov
mulb
lret
ja
mov
adc
pop
in
fsubl
jns
ret
push
mov
pop
mov
or
rcrb
sub
jb
dec
movsl
mov
outsb
loop
and
mov
cmp
jge
mov
mov
ljmp
inc
cmp
jl
bound
flds
lret
test
inc
pop
cs
dec
add
sbb
inc
ret
adc
xor
pop
or
lret
sarl
mov
sarl
adc
xor
push
mov
lea
rorb
popf
mov
shl
adc
fiaddl
sarl
adc
or
ss
sahf
adc
xor
xor
mov
push
fistpl
or
jo
jbe
mov
popf
inc
xor
adc
test
and
sbb
jbe
mov
fistpll
mov
inc
cmp
pop
jbe
cmpsl
cmpb
je
imul
popf
aam
add
leave
xor
xor
or
andl
push
movsl
sub
loop
sub
add
mov
and
nop
inc
data16
cli
pop
or
or
pause
sub
mov
pop
pop
cwtl
jmp
cmpsl
loop
or
mov
mov
jbe
and
jo
mov
test
loopne
pop
fcmove
cmpsl
aas
shrb
dec
jno
push
daa
inc
jmp
repz
pusha
or
add
push
jae
inc
add
roll
sbb
add
aaa
rorl
mov
fmull
and
das
inc
int3
sbb
aam
fistpl
xchg
in
push
mov
or
inc
test
cmpsb
mov
fmull
subl
int
add
roll
adc
or
dec
je
mov
aam
sbb
sbb
cmpsb
pop
lock
incl
inc
sub
jns
push
test
cmp
jns
adc
xor
aam
lods
push
cmp
dec
and
dec
inc
or
sbb
cwtl
sbb
popa
addl
push
test
fcomps
sub
mov
lea
sbb
sbb
arpl
negb
pop
push
lea
cli
sbb
cmp
pop
jp
or
cld
pop
adc
or
or
add
outsl
mov
xchg
mov
loope
imul
cmp
push
and
mov
fiadds
daa
and
mov
adc
addr16
test
push
fcoms
sbb
scas
pop
fsub
dec
pop
std
cmpsl
in
ret
push
push
mov
lea
loopne
cmp
mov
aad
popf
add
dec
cwtl
stos
and
push
jg
popf
xor
jmp
or
inc
mov
pop
repnz
test
inc
xchg
hlt
adc
leave
and
filds
test
cli
insb
cmp
pop
mov
js
or
movsb
sub
add
mov
imull
push
pop
jl
push
out
cmp
jge
jp
or
arpl
mov
cmp
xchg
pop
pop
mov
cmp
stc
xchg
and
incb
dec
and
dec
dec
dec
sbb
add
pop
xchg
fdivl
jl
leave
dec
shl
or
sbb
xor
mov
lds
sbb
add
dec
cmp
mov
fsts
or
sbb
addr16
sbb
and
push
pop
fldcw
mov
sbb
je
rcll
mov
cmpl
inc
xor
sub
adc
loopne
add
add
add
xor
sub
dec
add
xchg
sub
fwait
sub
adc
nop
pop
fs
adc
nop
or
testl
add
sti
push
test
pop
std
ret
sbb
movl
pop
fiadds
mov
xchg
mov
pop
icebp
inc
push
nop
popf
push
mov
sbb
out
push
jo
pushf
andl
ret
sbb
xchg
fsubl
sbbb
fcoms
push
sub
and
arpl
orb
cmp
push
xchg
add
shlb
sbb
add
add
icebp
push
int3
js
insl
pop
ret
es
sub
xor
leave
jmp
dec
sub
or
das
les
aaa
sub
sbbl
jno
fstps
dec
sbb
adcl
mov
rorl
or
mov
addl
and
cmpsl
sub
add
ror
add
inc
nop
out
nop
out
imul
inc
add
mov
xor
sub
je
mov
fbld
xor
enter
xor
cmp
fmull
or
popf
pop
popf
sub
adc
sbb
push
sub
sbb
inc
aaa
ss
xor
jl
dec
cmp
je
jae
push
cmp
inc
pop
gs
int3
jno
jno
push
stos
scas
push
stos
adc
out
je
cwtl
adc
arpl
dec
xchg
xchg
pop
iret
subl
loop
add
rolb
clc
rclb
pcmpeqw
stc
std
inc
cmp
ret
mov
mov
mov
jecxz
jnp
or
icebp
adc
add
push
jmp
and
lods
je
pop
sub
xchg
inc
out
test
divl
pop
mov
sub
pushf
xor
add
sub
jbe
cwtl
xor
jne
inc
push
popf
sub
add
xchg
sarb
push
pushf
fidivs
adc
cmp
pushf
addb
scas
mov
add
and
rcrb
imul
shr
xorl
out
sbb
adc
mov
sti
jbe
pop
and
lret
popf
dec
notl
lea
loopne
mov
sti
sub
sub
roll
mov
clc
pop
enter
add
or
add
mov
fcomip
mov
or
mov
outsl
daa
stos
xor
ret
fs
cmpl
jbe
jl
xor
mov
jle
fistpll
xchg
sub
inc
repz
sarl
lahf
sahf
xlat
add
shlb
fildl
aad
adc
xchg
xchg
sarb
or
popf
xor
and
jmp
cld
scas
movsl
mov
xor
mov
in
dec
push
dec
lret
push
or
inc
pop
or
mov
inc
je
ret
mov
push
test
and
jb
add
inc
ret
pusha
cs
or
shll
jo
cmp
pop
rclb
and
lea
pop
addr16
testl
sahf
icebp
mov
bound
daa
add
sbb
in
fsubs
cmp
push
push
popf
push
sub
repz
sub
xor
divb
mov
cmp
aaa
shrl
mov
xor
outsl
pop
xlat
push
insl
cmp
pop
pop
push
pop
jge
cli
xorl
lret
outsb
mov
xchg
in
pop
cs
push
cmpsb
or
popa
cmp
pop
mov
mov
cmpsl
cmpsb
jae
mov
pop
call
sub
lret
mov
and
push
xor
ret
add
test
fnstcw
inc
loop
cmp
sub
xchg
inc
loope
push
mov
push
mov
mov
aas
xor
das
mov
and
jl
lcall
sub
insb
mov
out
fcompl
int
or
xchg
sbb
test
pop
in
xchg
pushf
fmul
cs
or
sbb
fs
hlt
pop
sbb
sbb
mov
cld
and
mov
cltd
in
jle
lods
push
iret
das
or
sub
and
sbb
mov
jne
pop
sbbl
orl
pop
sub
xor
daa
adc
sub
nop
push
sub
and
sub
xchg
push
enter
and
xchg
inc
push
sub
sub
mov
sub
dec
and
sub
or
jb
sbb
les
movsb
jmp
mov
scas
mov
push
push
sbb
dec
sbb
add
inc
jnp
subl
lods
jae
mov
enter
pop
jb
outsb
test
or
dec
sub
outsl
jle
dec
xor
cmp
xor
test
lods
dec
repz
xor
fcoms
mov
andb
or
mov
imul
lea
flds
fadds
adc
int
mov
and
sbb
dec
dec
xor
sbb
adc
les
loopne
sbb
and
loope
inc
inc
inc
std
or
dec
add
sub
push
inc
rorb
or
or
sbb
fwait
xor
test
adc
mov
adc
sub
movsl
pop
push
inc
in
movups
je
dec
and
or
mov
adc
call
push
imul
icebp
sahf
lock
xor
sub
pop
push
and
mov
jns
jo
jmp
cmp
push
js
add
mov
adc
push
ficompl
ss
fdivl
pop
sbb
bound
pop
lret
cmp
jnp
cmc
adc
xor
or
cmp
test
outsb
push
or
lods
sub
mov
add
mov
pusha
push
ja
hlt
dec
sub
stos
aaa
xor
mov
ret
test
inc
or
pop
mov
out
loop
inc
pop
push
xor
jbe
push
dec
jle
pop
or
data16
decl
dec
sar
cmp
xor
mov
push
push
push
icebp
ret
inc
ret
or
fistps
ds
loope
les
ss
jo
les
cwtl
add
in
out
sbbl
mov
test
fdivrl
cmp
xlat
mov
push
imul
mov
push
add
decl
lcall
inc
inc
inc
pop
mov
ret
mov
jmp
add
cmpl
lea
sub
inc
fisubrl
sti
int3
mov
dec
and
xor
call
loop
popa
push
stc
fmull
jp
insb
mov
jmp
icebp
cmp
push
rcl
popa
fadds
or
jno
xchg
mov
xchg
dec
xchg
or
or
rol
mov
and
pop
dec
pop
inc
pop
je
push
les
leave
sbb
jno
fisubrs
mov
sbb
mov
push
pushl
aad
orl
cmp
inc
test
cld
sbb
dec
push
pushl
and
icebp
lahf
pop
pop
push
inc
fmuls
push
sbb
test
cmp
popf
add
mov
sbb
jno
mov
js
push
or
repnz
rorb
and
pop
es
es
pushf
in
in
and
lcall
adc
punpckhdq
loopne
sarb
pop
in
xor
mov
jge
mov
mov
ret
dec
imul
xor
aaa
add
add
adc
cmp
sbb
es
aaa
xor
push
andl
xchg
and
in
and
inc
jecxz
mov
adc
shlb
lds
sbb
mov
out
xor
movsb
mov
aad
adc
ret
sbb
push
cmp
adc
sub
popa
mov
imul
sub
test
adc
jge
mov
jecxz
cwtl
lock
cmp
jle
cmp
int3
sbb
pop
les
js
lea
adc
mov
mov
pop
mov
pop
pusha
repnz
rcrl
xor
popf
sbb
in
and
sub
cmpsb
push
dec
scas
xor
adc
fcomps
add
inc
dec
add
mov
push
inc
jmp
mov
xchg
push
pop
mov
bound
aaa
xor
adc
cld
pop
fdivrl
mov
les
bnd
mov
sbb
push
sub
movl
xchg
inc
sbb
or
jg
mov
bound
xor
movsb
xchg
in
movsb
inc
dec
pusha
adc
mov
repnz
xor
std
xorb
mov
int
mov
nop
mov
mov
sbb
mov
mov
aam
nop
sub
xchg
sbbl
jp
nop
pop
add
or
adcl
out
add
pop
mov
adc
out
into
xchg
adc
dec
mov
cmp
jp
sti
sahf
add
clc
test
pop
xchg
sbb
jbe
xor
pop
adc
in
inc
push
inc
jl
dec
fsub
cmp
jle
cld
jae
inc
add
mov
mov
ficomps
ss
adc
add
gs
sbb
sub
or
test
loopne
sub
fs
loope
loopne
mov
dec
lods
call
jo
jp
cltd
add
add
lock
pop
add
andb
and
mov
dec
sub
stc
test
push
inc
or
repnz
pop
inc
push
inc
and
push
dec
sub
test
aas
push
les
pop
mov
test
xor
cmp
dec
popf
ret
cmp
xchg
mov
lret
xchg
mov
sub
nop
add
xchg
adcb
mov
repnz
inc
popl
inc
fs
push
inc
test
or
divb
pop
push
fiaddl
jp
pop
add
add
add
mov
outsb
orb
dec
cmp
push
xchg
xchg
xchg
or
pop
or
sbb
inc
inc
or
cs
adcb
mov
or
sti
push
xchg
repnz
add
add
xor
push
sbb
es
push
movl
adc
pop
inc
push
andl
sub
rcl
cmp
rorl
mov
loopne
sbb
inc
dec
dec
jmp
jo
stc
or
add
add
inc
addl
xlat
cld
add
pushf
xor
addb
push
inc
mov
lock
scas
jne
and
call
add
xor
lock
in
inc
movl
sub
repnz
movsb
xor
out
xor
cmp
pop
adc
pop
xor
cmp
adc
add
mov
inc
lea
sub
push
or
setbe
xor
pop
movsl
jo
ja
inc
cmp
es
adc
dec
dec
push
imul
mov
notl
or
inc
movsb
add
or
lret
movsl
add
and
xchg
lods
mov
add
insl
cmp
adc
adc
add
lds
out
dec
lret
xchg
enter
xchg
les
hlt
mov
mov
scas
jne
enter
and
push
push
mov
in
xchg
or
push
lea
pop
push
push
xor
divl
dec
sbb
jbe
push
daa
mov
aam
aas
sbb
ret
je
sahf
incl
movsl
add
lds
add
mov
leave
push
iret
movb
fdivr
pop
das
test
adc
cmp
mov
dec
cmp
movsb
fld
inc
shrl
sub
pop
or
test
or
or
or
rcrl
mov
loopne
push
sub
mov
add
dec
or
cmp
add
dec
lcall
xchg
dec
pop
jmp
ret
fwait
je
add
xor
incb
adc
fcoms
leave
dec
pushf
xchg
adc
mov
aas
loop
inc
bound
xor
mov
mov
inc
aas
das
xor
inc
cmp
sarb
cmp
sbb
add
fldl
mov
pop
mov
add
insl
adc
jmp
js
std
xor
jge
mov
pop
sub
hlt
rolb
les
loope
mov
and
mov
pop
in
adc
xchg
sahf
inc
or
or
xchg
sarb
add
or
jb
mov
mov
das
lea
xor
push
push
inc
cmpb
add
nop
mov
mov
sbb
enter
ljmp
pop
enter
mov
mov
or
add
int
les
lods
adc
lods
add
leave
js
rcrl
push
inc
cmp
adc
or
jo
loope
pop
and
shl
cmpsb
or
sahf
pushf
dec
fsts
pusha
xor
pop
push
add
cmpl
sbb
sub
cli
cmp
and
adc
cmpsl
stos
sub
sbb
dec
scas
movsb
dec
sbb
test
push
lcall
push
mov
add
cmp
xlat
out
push
das
add
inc
icebp
push
add
or
dec
add
add
fs
insb
add
pop
dec
add
inc
aaa
out
jno
fcmovbe
and
insb
jo
fwait
add
lea
mov
and
insb
pop
pop
divb
je
enter
lret
mov
mov
mov
aaa
or
push
movl
cwtl
xor
cmc
sti
and
and
movsb
arpl
jp
mov
test
outsl
or
das
rolb
push
movb
add
and
enter
jae
sbb
fiadds
jp
xor
cmp
insb
mov
int
jo
adc
movl
push
or
pop
inc
or
push
pop
test
stos
jge
mov
xlat
mov
cmp
and
punpckhwd
jo
negl
push
and
add
xchg
mov
xchg
jns
sub
mov
adc
dec
fs
dec
add
inc
lcall
or
jnp
popa
js
cwtl
nop
adc
or
dec
lret
xlat
push
stc
mov
aam
mov
adc
testl
cld
bound
add
in
cmpl
mov
dec
xor
or
sbb
nop
dec
rorb
enter
add
call
sbb
dec
movsl
jns
jg
xlat
inc
sbb
cld
push
mov
pusha
inc
test
mov
add
scas
or
add
enter
rorl
xchg
or
pusha
bound
jae
fnstsw
lock
jo
rorb
ljmp
orb
add
push
jo
sbb
mov
test
mov
xor
mov
inc
popa
sub
mov
adc
shlb
jmp
pusha
int3
xor
sub
xor
mov
iret
push
add
out
sub
add
push
in
sbb
xorl
mov
ficoms
mov
cltd
movsb
cld
scas
cmp
or
pushl
pusha
cmp
lret
add
jno
xor
inc
push
cs
mov
leave
push
dec
adc
mov
xor
sbb
push
jne
pop
scas
jnp
jmp
sbb
arpl
or
cmpsl
call
and
cli
or
adc
dec
pop
shlb
push
inc
and
mov
sub
adc
rol
ret
ss
mov
pop
xor
mov
mov
xchg
push
adc
decl
shlb
cmp
fsubrp
imul
gs
push
push
and
hlt
jne
ss
je
or
je
adc
push
mov
inc
push
arpl
xor
js
sub
cld
shrb
cmp
mov
hlt
push
inc
push
jle
mov
mov
pop
dec
cmp
adc
jle
js
je
lret
mov
adc
sbb
inc
int
xor
sub
lods
sub
xor
xchg
push
jg
xchg
aas
lea
in
add
push
jecxz
add
inc
dec
sahf
das
fwait
push
dec
dec
lods
repnz
mov
push
xor
and
cmp
add
or
cmp
push
sub
addr16
or
inc
xchg
dec
adc
inc
popa
cmp
mov
ficompl
or
xchg
mov
mov
dec
sub
ret
sbb
movsl
xor
push
xchg
pop
push
xor
xor
add
fs
or
fwait
dec
add
shlb
neg
pop
adc
loope
sti
test
inc
imul
ret
pop
cmpl
jmp
pop
mov
add
mov
mov
push
das
ret
mov
and
push
jne
lock
dec
int
ljmp
sbb
push
mov
sbb
or
decl
std
repz
ss
popa
push
and
shll
dec
and
fwait
jge
xor
sbb
mov
mov
sbb
xchg
das
push
fwait
lcall
add
and
repz
mov
loop
inc
addr16
aam
xor
je
push
dec
and
cmp
mov
loop
mov
and
or
ret
div
xchg
sub
repz
test
sbb
cmp
adc
loop
ret
sbb
cmp
sub
pop
and
stos
push
frndint
jae
mov
jne
movsl
cmp
sub
sbb
test
stos
imul
insb
push
in
test
add
mov
pop
test
mov
jle
mov
or
cmp
xor
icebp
mov
pop
mov
mov
gs
or
pop
dec
mov
pushf
inc
das
xor
in
dec
or
rcrb
incb
pusha
push
inc
inc
addr16
inc
mov
or
test
inc
cmp
adc
and
xor
and
gs
add
adc
adc
ret
out
xor
jne
or
inc
pusha
push
jp
movl
scas
xchg
jge
sti
inc
rcrb
js
inc
adc
jp
pusha
je
cmp
pop
andb
add
cmp
add
push
mov
sub
xchg
adc
mov
jo
inc
jmp
push
mov
and
mov
add
sub
cld
shrl
jne
movsl
add
add
rorl
adc
das
mov
inc
aas
jecxz
das
add
adc
push
or
dec
enter
fmuls
inc
adc
sub
jne
or
aam
clc
sub
incl
lret
clc
push
add
push
jl
sub
push
push
popa
in
pop
xor
mov
add
lcall
xchg
icebp
adc
cli
mov
xchg
mov
push
lock
dec
cwtl
hlt
inc
fs
add
inc
push
jne
aas
mov
ret
mov
mov
sub
movsl
mov
xor
sbb
fdivrl
fisubrl
pusha
cmpsb
or
dec
bound
push
mov
and
out
xor
dec
xchg
nop
sbb
repz
mov
nop
pop
xchg
ss
jmp
and
sub
insb
pop
sbb
add
adc
pop
dec
xchg
das
adc
inc
js
cmp
ficoml
pushf
lahf
pushf
jmp
push
inc
cwtl
ror
cmp
push
mov
dec
shr
gs
enter
incl
cli
sbb
fs
mov
lods
fnstsw
mov
mov
mov
jb
pushf
cmp
jle
rcrb
cmp
js
add
xor
out
sbb
jbe
jo
cwtl
fchs
popf
enter
jle
jne
adc
inc
je
cmpl
dec
lods
cmpsb
cld
push
push
xor
jo
mov
inc
adc
arpl
cli
addr16
jae
mov
jno
leave
mov
jecxz
nop
jo
popa
xor
and
gs
fsubs
dec
xor
add
jnp
xor
pop
add
sub
push
aad
mov
ljmp
add
sbb
rolb
xor
or
outsl
xchg
inc
enter
les
ret
cmp
push
jge
cltd
xchg
push
shll
xor
mov
popa
pushf
mov
mov
push
pop
jo
and
pop
mov
add
xchg
incb
lret
mov
push
shll
frstor
jl
lret
cmp
or
or
fistl
inc
jne
sbb
or
idiv
jo
or
jnp
add
fcom
rorb
dec
aam
push
and
movsbl
add
loopne
ljmp
jno
dec
in
add
nop
mov
jo
push
or
mov
cld
adc
js
push
out
jg
xor
fs
push
jo
adc
xor
sarb
push
xchg
insb
rorb
push
fmull
orb
ja
pop
xchg
pop
mov
roll
pop
add
pop
dec
sub
mov
xchg
mov
das
push
aam
in
les
inc
inc
pop
jge,pt
jecxz
into
in
std
test
pop
ret
cmp
dec
sti
inc
stc
pop
inc
jmp
and
dec
movsb
je
push
pop
push
daa
jge
mov
int3
mov
jb
repnz
adc
xor
mov
jae
in
rclb
fdivrs
pop
dec
pop
adc
pop
mov
add
les
push
mov
or
pop
int3
je
mov
clc
xchg
ficoms
pop
push
fcoml
mov
mov
ret
mov
dec
aaa
or
fcmovnb
je
test
roll
jb
or
jo
enter
ret
xchg
movsl
mov
or
dec
push
cmp
dec
dec
add
pop
push
add
cmp
je
and
jp
xor
ljmp
push
xor
movsb
xchg
arpl
mov
xchg
mov
xchg
push
test
and
add
fcoms
fs
cmp
and
mov
push
mov
sbb
lret
test
pop
test
xchg
push
pop
sub
sbb
jne
les
dec
add
ret
por
jl
mov
rcll
loope
hlt
fsubrl
dec
nop
shlb
cmp
push
mov
cmp
fchs
jmp
test
pop
lods
pusha
bound
push
loopne
or
pop
mov
int
xchg
and
ja
cmp
cltd
cltd
mov
fldcw
adc
lea
lret
mov
or
cmp
inc
dec
cmpb
mov
inc
push
mov
push
repnz
xor
jle
add
cmpw
adc
sbb
cmpb
jbe
shl
sbb
push
pop
add
lock
pop
mov
add
sar
cmpsb
push
jo
mov
mov
pop
enter
mov
cmp
sbb
and
sbb
lock
push
add
iret
inc
jb
clc
sub
dec
dec
push
sub
aaa
shrb
push
sub
jmp
mov
or
lcall
dec
movzwl
cmpl
push
adc
rorl
push
xchg
cli
jecxz
and
repz
add
sbb
xchg
xchg
imul
cmp
out
add
sub
subb
scas
and
daa
mov
cmp
xchg
mov
jne
lret
add
nop
andl
dec
es
or
sysret
mov
stos
fs
add
and
subb
bound
hlt
jne
jb
fs
mov
push
ljmp
add
pop
push
pop
push
dec
int
xorl
or
shl
and
jb
push
insb
js
or
insl
xchg
sbb
pop
int3
mov
icebp
push
in
and
pop
or
push
imul
sbbl
push
sub
sbb
add
push
clc
mov
add
outsl
xlat
pop
roll
gs
movsl
push
rcl
add
mov
scas
enter
mov
jne
or
pop
or
add
sub
add
inc
and
jbe
rorl
sub
rcrl
bound
or
mov
sub
and
and
je
cmpl
mov
scas
insb
lods
add
xchg
stc
dec
inc
iret
mov
mov
mov
repnz
popf
in
add
insl
pop
and
mov
sub
or
add
adc
jb
xchg
adc
mov
pop
add
xor
cmp
enter
dec
and
movsb
xor
sbb
sub
push
in
sbb
or
xorl
push
sub
or
sbb
push
sbb
jl
sub
testb
jns
loopne
je
or
in
aaa
cmpsl
adc
jmp
and
xchg
hlt
imul
mov
movsl
push
xchg
cwtl
mov
push
cmc
mov
xor
mov
int
jl
mov
orb
push
iret
xchg
pop
and
ss
hlt
xchg
insl
mov
inc
mov
lods
xchg
data16
mov
mov
inc
dec
pop
jne
imul
xchg
dec
xchg
leave
dec
pusha
xchg
orb
jnp
divb
and
lods
push
mov
cld
inc
inc
and
pushl
mov
enter
xlat
aas
int
or
in
aaa
adc
jo
sub
add
xor
inc
sbb
dec
aaa
pusha
mov
jg
mov
push
mov
and
and
pushf
xor
movsl
scas
push
inc
sbb
inc
mov
aas
rorl
sahf
test
lea
psubw
mov
repnz
mov
cli
dec
and
xchg
into
pop
mov
mov
xchg
push
lahf
in
adc
or
cltd
sub
or
arpl
sub
lret
mov
inc
mov
dec
mov
daa
aas
movsb
rcll
and
mov
test
mov
push
cld
stos
sbb
jecxz
push
mov
rclb
or
test
cmp
xor
jmp
push
push
das
or
sbbl
inc
testl
bound
pop
ljmp
rorl
pop
push
sub
inc
sti
pop
iret
test
jno
mov
fimull
push
or
push
test
xchg
pusha
movsl
push
hlt
adc
loop
pop
cmp
or
cmpsb
lcall
rol
inc
add
cmp
mov
mov
add
xchg
mov
or
and
sbb
jnp
push
loop
add
push
pushf
and
adc
lret
mulb
dec
cmp
jl
pop
or
inc
push
mov
dec
clc
loope
push
add
dec
sub
push
or
dec
mov
clc
push
or
enter
dec
inc
inc
shrb
movsb
fucomi
sub
mov
add
mov
sbb
inc
movb
in
cmp
test
call
aaa
repz
cld
xorb
sbb
call
sbb
sub
jne
xor
sbb
fcmovb
inc
test
mov
mov
loop
push
pop
fisubs
push
leave
jo
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
leave
add
inc
inc
insl
loopne
nop
mov
sarl
cmc
push
add
in
push
in
or
int3
and
into
rolb
add
enter
loope
orb
pop
xchg
pusha
and
lds
or
and
repnz
jge
pop
movsl
aaa
add
sahf
mov
call
rcl
repz
sbb
xchg
aam
fdivrs
outsl
dec
xorb
push
push
or
pop
cmpsl
or
dec
rclb
xor
scas
mov
pop
inc
movsl
cmp
pop
and
cmp
and
arpl
adc
lods
or
add
fldcw
inc
xchg
add
enter
or
int3
icebp
sbb
addl
push
add
or
adc
add
inc
test
jmp
add
xor
testl
js
dec
test
les
adcl
adc
jne
cmp
das
jae
mov
adc
sbb
pop
fmull
fildl
clc
push
xor
pop
jae
push
adc
xor
clc
cmpsb
cld
hlt
mull
jp
pop
xor
leave
loope
xor
scas
and
adc
mov
mov
mov
mov
jo
adc
push
push
pop
repz
mov
pop
stos
insl
cmp
mov
adc
jg
jmp
adc
push
jne
sbb
and
xchg
push
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
or
ret
or
jmp
push
xchg
sbb
push
pop
sub
lea
aaa
add
pop
adc
idivl
or
pop
cmp
sbb
ljmp
or
xor
and
jmp
cmp
jne
xor
enter
scas
insb
or
ss
stos
pusha
dec
push
fsubrs
xchg
inc
cwtl
call
inc
pop
outsl
mov
adc
imul
repz
popa
xchg
cmp
stos
push
in
incb
push
push
lods
sub
sbb
push
jmp
cmp
pusha
fisubrl
adc
dec
mov
pop
or
test
stos
rcrl
sar
shl
push
xor
jne
andb
inc
rcrl
lea
adc
cld
jmp
dec
mov
inc
mov
psubusw
xchg
or
xor
je
fld
clc
pushf
inc
mov
jo
lods
roll
pop
loope
pop
xor
mov
mov
es
and
stos
test
adc
roll
add
out
dec
sub
sub
push
mov
stc
pushf
push
lcall
nop
mov
mov
or
sbb
cld
fisttpl
mov
add
fld
flds
cmp
fcoms
fdivrl
adc
mov
sbb
sbb
les
mov
xchg
and
insl
inc
aam
ret
addr16
dec
loop
mov
jo
repnz
adc
dec
mov
sbb
and
mov
sbb
xchg
add
clc
fcomp
push
push
xchg
add
lahf
cmp
subb
push
add
in
add
dec
lods
and
adc
mov
inc
sub
cmp
mov
jmp
and
xchg
lea
mov
sub
or
inc
xchg
sarb
aad
rorb
lea
or
negl
xor
jge
mov
push
pop
sub
ja
sub
xchg
xor
fsts
es
mov
leave
cmp
les
add
xor
addb
xchg
xchg
mov
mov
pusha
testb
xor
imulb
or
or
mov
insl
mov
or
mov
adc
clc
or
outsb
add
xor
aaa
and
or
in
outsl
cmp
mov
cmp
inc
inc
mov
mov
call
in
sbb
jno
add
add
xor
adc
sbb
xor
mov
ss
imul
and
popa
cmc
or
imul
inc
push
and
mov
or
xlat
xchg
nop
adc
xor
in
push
push
nop
cmp
adc
outsl
orl
sub
xor
fistl
out
adc
mov
mov
pop
insl
icebp
addr16
pop
popf
dec
leave
pop
pop
pop
mov
adc
inc
pop
sahf
push
jge
shll
inc
int3
mov
adc
inc
cmp
jae
adc
mov
and
sbb
leave
test
clc
imull
mulb
ss
sbb
imul
pop
lods
rolb
nop
rcll
adc
push
pop
je
pop
mov
xor
int3
cmp
loopne
push
repz
movsl
dec
adc
xorl
fiaddl
or
sub
lahf
les
adc
mov
lods
push
sub
sub
sahf
jl
lods
andl
mov
and
lods
ss
push
fwait
mov
or
insl
cmp
mov
sub
lock
ss
or
outsl
pop
push
movl
das
pop
sub
movsb
inc
sub
test
es
xlat
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
jmp
popf
cld
icebp
mov
push
jo
add
stos
in
xor
pop
xchg
clc
or
inc
sub
movsl
aam
and
in
mov
insb
fnstsw
mov
shr
inc
add
addr16
jns
lock
inc
pop
iret
daa
aas
mov
lock
push
cmp
insl
jg
mov
sbb
andl
jp
add
jb
ret
mov
gs
push
mov
xorb
or
sub
movsl
ds
sbb
and
rcrl
mov
push
dec
xchg
sub
dec
jno
dec
mov
ds
and
sti
out
push
out
xchg
sbb
or
or
push
push
xchg
aad
scas
lea
mov
lea
jno
je
fstl
daa
push
nop
sbb
xchg
push
inc
and
jge
mov
inc
and
pop
add
or
inc
jne
mov
in
cmp
push
mov
arpl
bound
adc
aaa
mov
xor
sub
push
pop
ret
imul
mov
jae
cmp
add
push
loopne
loopne
adc
dec
mov
ret
sbb
add
nop
sbb
and
or
fbld
push
gs
pop
dec
lret
cmp
adc
mov
mov
adc
add
test
or
in
push
pop
xchg
test
out
and
aaa
jb
and
pop
xor
inc
adc
addr16
lcall
mov
sbb
mov
inc
xchg
out
or
or
jno
insl
sbb
cli
cmp
push
fs
jp
in
sub
lds
int
add
push
insl
nop
loope
and
rcl
flds
or
jnp
xor
int
push
std
sbb
mov
mov
add
adc
roll
and
add
movzwl
add
movsl
loopne
sbbl
inc
shrl
dec
mov
aad
or
movsb
pop
inc
sbb
mov
or
inc
or
pushl
sarb
inc
sbb
push
dec
fwait
mov
pop
jns
sub
daa
jne
and
push
leave
xor
aaa
adc
fstpt
inc
jo
add
push
jb
lea
mov
es
mov
xor
insl
add
add
out
dec
xor
push
loopne
dec
mov
cmp
jg
or
xor
iret
fmull
lods
cmp
push
test
pusha
sub
movsl
imul
or
repnz
enter
push
xor
loopne
or
jmp
sbb
mov
xor
add
adc
cli
adc
in
dec
andb
cmpsb
mov
dec
xor
jle
ds
dec
cmp
push
pushf
pop
mov
stos
dec
jl
sub
in
mov
and
sub
adc
sbb
push
add
les
scas
and
lcall
add
add
cmp
pop
adc
pop
mov
or
scas
xor
dec
xchg
or
sub
cs
add
push
movsb
pop
and
pushf
pop
add
ficomps
fsubl
les
or
adc
addb
imul
pop
jae
movsb
rcrl
pop
sub
shll
ss
push
xor
nop
dec
adc
sub
adc
mov
adc
fdivl
and
sbb
cltd
les
ljmp
mov
push
mov
ret
out
mov
stos
aaa
jno
jmp
rcrb
test
repnz
idiv
adc
add
sub
mov
mov
shlb
mov
icebp
icebp
add
xor
sbb
inc
sbb
and
mov
mov
movl
in
xchg
in
leave
leave
xor
jno
sahf
dec
fsub
gs
out
sbb
mov
dec
xchg
call
inc
es
sub
lea
xorb
sbb
jp
out
sub
dec
adc
adc
pusha
inc
pop
sbb
add
pop
jl
jns
lock
mov
pop
push
add
mov
sbb
push
pop
rcl
outsl
stos
add
int
cmp
or
ja
imul
xadd
in
aam
sbb
insl
sbb
adc
cmp
rcrb
mov
sbb
mov
or
sahf
inc
pop
cmp
add
inc
repz
sahf
orl
push
sbb
mov
test
je
test
or
dec
lret
rclb
jmp
lock
cmpsl
fprem
pop
or
das
rorl
pop
cld
push
sub
std
add
jns
push
push
mov
mull
icebp
sub
and
add
out
and
loope
ja
lds
cmp
mov
mov
or
sbb
sbb
cli
dec
jmp
bts
enter
jmp
xor
jl
fildl
fwait
jno
add
mov
pushf
add
adc
cmp
xchg
jo
leave
add
inc
pop
mov
and
dec
sahf
popa
push
pop
sub
xchg
add
adc
imul
sub
dec
test
fisttpl
stos
orl
rcll
js
mov
adc
mov
cmp
add
inc
sub
mov
shl
push
sbb
sub
icebp
jmp
xor
sbb
ljmp
leave
out
mov
jne
daa
ds
fs
mov
je
sbb
adc
cwtl
cmpb
push
add
push
adc
mov
aaa
jne
mov
cmp
jns
add
jne
lea
pusha
lea
test
push
sub
push
adc
mov
ljmp
movsb
movsl
mov
sub
sbb
pusha
sbb
sub
xchg
mov
jmp
sbb
insl
sbb
sbb
push
xchg
sarl
sarb
sub
or
xor
stos
mov
orl
mov
cvttps2pi
inc
cmp
pop
ljmp
es
mov
ror
insl
or
popa
mov
sub
rclb
cmp
imul
lock
pop
stos
in
int3
sub
into
push
jnp
ds
scas
add
sub
push
add
pop
test
pop
push
pushf
lods
fs
xchg
adcb
aad
push
xor
pop
add
lahf
or
and
push
xchg
pop
add
push
jle
jne
insb
loop
pop
das
fcomps
gs
adc
rcrb
add
add
cmp
rol
mov
mov
pop
pop
sub
popf
rorb
sub
push
adc
jne
mov
push
sbbb
sub
cmp
arpl
push
je
mov
or
jle
or
mulb
bound
add
inc
add
cmp
fsubrs
inc
mov
mov
lods
in
mov
pop
mov
mov
sub
mov
or
sbb
roll
push
outsl
push
pop
push
push
mov
ret
inc
mov
or
adc
push
xor
sbbb
les
xchg
test
xchg
dec
mov
and
fs
lret
add
xor
push
push
mov
icebp
mov
jp
cmp
daa
push
and
push
leave
jo
push
inc
aas
pop
dec
pop
mov
mov
lcall
adc
lea
mov
les
push
cmp
mov
sub
jecxz
xor
mov
push
and
int
lods
mov
insb
iret
sub
fcoml
pop
xor
adc
pop
jb
iret
push
sub
lea
push
mov
mov
mov
sub
insb
xchg
and
mov
cmp
cs
hlt
loop
pop
add
mov
sti
cmp
or
popa
jl
inc
ret
lods
jo
roll
lods
dec
shrb
mov
adc
decb
pop
or
fcom
adc
xor
cmpsl
cmp
test
xchg
subl
add
inc
mov
stos
ror
mov
movsl
cmp
es
mov
popf
and
bound
sub
pop
adc
mov
repnz
addl
jo
test
add
push
xchg
xchg
mov
cmp
lds
pop
xor
mov
mov
pop
cmpsb
sub
arpl
das
bound
add
add
dec
out
fucomip
xor
inc
adc
jns
adc
dec
add
pop
in
inc
loope
push
adc
jne
adc
aad
iret
dec
enter
cld
clc
test
loope
pop
imul
in
mov
leave
pop
mov
mov
or
and
sbb
cld
push
bswap
daa
cwtl
jb
shlb
loop
adcb
int3
push
jbe
and
or
ja
inc
popa
roll
mov
pop
sti
push
aas
stos
inc
adc
fldz
and
add
jge
pop
imul
cmp
and
sub
add
inc
pop
movsb
push
cmp
ss
enter
cmp
push
sbb
or
dec
dec
push
lea
push
mov
dec
adc
mov
addr16
inc
sub
mov
push
mov
xor
mov
loop
jnp
nop
pusha
or
mov
rorb
fisttpll
mov
mov
lret
sub
mov
or
lea
fsubs
adc
push
movsl
mov
sbb
call
adc
ret
pop
jecxz
pop
mov
int3
sbb
jge
bound
loopne
mov
testb
faddl
cmpl
push
sub
fstps
and
adc
cmp
push
cmp
jle
clc
stc
out
cmp
jp
push
cmp
cmp
inc
add
clc
divl
add
inc
jmp
into
push
data16
fadd
sub
mov
repnz
mov
bound
inc
or
fs
pop
divl
jne
mov
lock
inc
mov
dec
mov
clc
xchg
adc
or
mov
sub
dec
mov
jnp
inc
xchg
fcmovb
stos
orb
add
fnstcw
push
sbb
jbe
push
hlt
mov
cltd
push
push
repz
mov
popa
jmp
push
data16
xchg
mov
xor
xorl
shll
dec
cli
fwait
outsl
mov
add
sbb
pushf
push
dec
sahf
and
adc
xchg
sub
sets
and
daa
int
cmp
sbb
push
sbb
lock
ds
out
adcb
mov
xchg
lret
add
adc
enter
iret
cmp
xchg
xor
jmp
addb
popf
adc
bound
orl
pop
pop
pop
xlat
les
pop
adc
nop
or
rorb
or
sbb
movsb
or
adc
adc
cmp
add
inc
scas
push
push
ror
dec
push
enter
dec
or
inc
adc
je
pop
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
inc
mov
xchg
out
mov
mov
enter
add
xchg
sbb
daa
mov
cmp
or
and
je
add
adcb
leave
popa
push
and
xor
add
enter
jns
xchg
push
add
insl
movswl
loop
test
sub
jg
sbb
and
aaa
leave
enter
sbb
adc
pop
and
sbb
sub
dec
popa
mov
std
cmpsl
sbb
adcl
mov
es
aas
inc
inc
and
add
subb
arpl
sub
dec
scas
loopne
pop
sub
fnsave
pop
adcl
ljmp
movsb
test
aad
mov
jbe
pop
in
cmc
push
cmp
subb
xor
call
movl
pop
push
and
sbb
cmp
xor
popf
adc
or
sbb
mov
sbb
xchg
adc
jb
cltd
sub
adc
adc
pop
add
adc
adc
nop
and
add
pop
xor
hlt
inc
add
mov
loope
mov
xchg
sbb
push
push
and
or
in
pusha
adc
dec
sbb
call
add
gs
dec
or
push
or
lods
aad
sbb
dec
fwait
loope
inc
adcb
xchg
mov
out
cs
xor
in
jo
roll
mov
and
sti
xchg
incl
or
inc
dec
cmp
add
and
or
add
nop
stos
bound
aaa
jl
inc
icebp
fidivs
lea
add
xor
xchg
popf
xor
push
out
jmp
insb
cmpsl
inc
insb
xchg
cltd
test
lock
aas
nop
les
cmpsl
mov
in
cmp
outsl
mov
sahf
sub
orl
enter
or
or
pop
dec
aaa
nop
pop
fadds
lock
push
scas
adc
xchg
sbb
in
dec
fiadds
or
mov
icebp
in
lea
mov
xchg
ss
and
push
loopne
fcoms
dec
fdivrl
mov
jle
push
sbb
add
push
sbb
fmuls
push
jg
inc
and
inc
clc
sbb
xor
jbe
and
enter
std
inc
outsl
jb
test
pop
nop
mov
push
fdivs
cmp
stos
imul
push
mov
mov
pop
add
insb
xchg
dec
add
sbb
loop
mov
push
popa
stos
cmp
mov
lea
rol
popa
dec
jno
insb
xchg
mov
sbb
mov
add
mov
pop
fildl
fildl
add
and
add
rol
adc
rcrb
pushf
jecxz
sbb
jne
dec
sbb
jg
fadds
dec
xor
enter
add
repz
fsubs
imul
pop
pop
xor
cmpsl
lods
dec
cmp
dec
pop
adc
lods
and
lods
popa
incl
adcl
arpl
inc
add
rcrb
inc
inc
push
add
pop
pusha
push
mov
xchg
add
notl
adc
adc
or
inc
out
hlt
jno
mov
jl
sbb
or
jo
ret
outsb
adc
in
aam
iret
jle
ffreep
jecxz
add
sbb
adc
inc
mov
dec
adc
xchg
or
cmp
int
pushf
and
jle
inc
pop
int
arpl
push
inc
inc
or
test
cmp
push
mov
xor
in
popl
stos
or
out
mov
jo
push
push
sub
adc
loop
mov
jmp
stc
aas
inc
jo
fcompl
fnstsw
test
je
sbb
pop
add
adc
push
fldl
push
sbb
std
jbe
test
dec
sbb
and
fstpl
fstpl
pop
jns
mov
das
dec
lods
mov
fcompl
mov
jo
add
adc
pop
fsub
pop
fsubrp
mov
xchg
or
dec
pop
and
lock
cmp
bound
pop
add
ds
fdivs
inc
imulb
xor
leave
push
xor
std
scas
sub
in
imul
add
imul
roll
ljmp
xor
pop
mov
jge
mov
leave
fidivs
loopne
rolb
out
sar
pop
xorl
insl
pusha
inc
es
mov
aad
or
mov
adc
divb
sub
jnp
ja
or
mov
addr16
push
jo
es
and
js
xor
sbb
mov
inc
add
andl
or
push
xchg
or
fld
dec
insb
mov
jne
add
lods
or
or
arpl
xor
mov
cmp
clc
scas
cmp
enter
lock
stos
xor
inc
ja
cli
shld
add
ja
jb
sub
sub
ss
push
and
mov
push
je
clc
jge
cmpsl
mov
pop
add
push
leave
or
push
mov
push
adc
push
push
mov
or
mov
in
or
cli
adc
test
add
pop
popf
xchg
lcall
and
adc
inc
imul
orl
mov
push
xor
and
inc
fsubs
add
push
and
ja
imul
adc
push
jl
dec
rcr
stos
xor
cmp
add
xor
ss
inc
cmpw
jne
fbstp
and
cmp
jne
mov
push
jge
mov
or
push
aas
mov
sti
jg
stc
std
lock
insl
mov
or
cld
leave
rclb
in
or
in
jo
pop
insb
dec
jo
push
push
sets
dec
inc
aad
xchg
push
pushf
ret
movsb
push
add
and
push
cwtl
aas
add
pop
sub
loopne
and
sub
iret
xorb
adc
push
sbb
xchg
adc
add
xor
icebp
rclb
mov
loopne
or
arpl
fcmovbe
mov
jnp
or
inc
dec
pusha
loopne
imul
add
outsb
push
add
xchg
movsl
or
xchg
mov
xor
mov
or
add
scas
mov
inc
pop
pop
mov
mov
inc
sub
roll
pushf
sarb
adc
mov
ja
fmuls
imul
xor
xor
das
pop
dec
cltd
out
xorl
dec
push
adc
add
mov
or
in
and
dec
scas
or
test
jl
lds
xor
pop
xchg
and
int3
push
push
sti
pop
xlat
test
leave
vmovaps
movsl
sbb
cmp
ret
lods
addl
je
cwtl
and
push
pop
push
xchg
sti
into
push
rcr
pop
je
jmp
fldt
pop
add
or
pop
dec
mov
sbb
pusha
push
push
pusha
mov
mov
cmp
mov
lods
inc
jmp
jno
xor
inc
movsl
add
aaa
cmp
jbe
mov
or
inc
push
push
sub
loopne
mov
push
inc
inc
jmp
or
arpl
adcb
or
pop
and
xor
add
ljmp
stos
test
push
sbb
adc
cmp
pop
rcrl
sbb
sub
cltd
fwait
sbb
in
cmp
loopne
popf
popa
cs
push
or
outsb
push
push
sbb
nop
add
add
dec
adc
pop
mov
cmp
push
movsl
sbb
add
push
jmp
mov
subb
add
mov
or
push
sub
popa
in
adc
cs
ja
xor
sub
jno
adc
jmp
jno
outsb
xor
add
loopne
ss
and
xor
incb
aad
rclb
inc
jg
je
add
or
push
mov
jg
je
dec
je
add
sbb
dec
jne
dec
cmp
jmp
or
mov
xor
adc
xchg
jmp
or
xchg
adc
push
testb
or
in
lret
mov
out
sub
xchg
mov
les
jmp
out
out
out
add
scas
jge
jmp
or
cwtl
jmp
lea
stos
addb
lret
fst
lods
stos
test
push
push
cmp
hlt
push
cmpsl
adc
push
cmp
and
sub
in
inc
je
mov
loopne
or
and
lcall
push
pop
fadds
inc
ds
cld
dec
and
inc
push
cmp
dec
jo
pop
cmp
nop
fdiv
dec
adc
enter
jl
enter
mov
sbb
dec
sbb
nop
inc
push
cmp
nop
inc
push
cmp
mov
jb
push
or
lahf
push
addb
pop
push
adc
mov
add
repz
repz
xor
inc
dec
pop
iret
repz
arpl
orl
fucom
jns
int
icebp
sti
push
add
sahf
out
sub
out
sahf
push
pop
imul
jns
fwait
movsl
scas
mov
ret
int
jmp
and
xchg
shll
rcll
stos
push
sbb
push
test
push
push
out
push
out
rol
inc
xlat
mov
add
add
adc
rcl
push
adc
push
mov
cmpb
sub
out
mov
add
sbb
push
xorl
sub
mov
loope
lahf
fwait
jmp
or
pop
mov
pusha
lods
inc
adc
lock
in
inc
mov
jno
mov
push
push
lahf
call
add
out
fcompl
lock
das
jmp
nop
movsl
nop
test
push
scas
imul
xchg
mov
dec
ljmp
cmp
mov
sbb
loope
dec
push
xchg
mov
pushl
dec
push
and
and
mov
pop
or
sub
adc
lock
pop
pop
cltd
out
or
sbb
les
inc
push
jg
sti
ja
rorb
cmp
jge
adc
pop
push
cmp
push
stos
sub
imul
xchg
inc
shlb
add
ds
inc
push
cmpsl
jg
pop
nop
mov
or
orb
sub
push
jp
mov
sub
and
push
shll
push
and
or
rcll
pop
dec
sbb
mov
sub
xor
or
adc
mov
and
decl
jp
out
and
aaa
sbb
iret
jmp
lds
inc
sti
add
add
mov
nop
add
test
pop
xchg
mov
jae
adc
hlt
mov
scas
sub
mov
add
daa
add
xor
popf
jae
rcll
subl
loopne
movb
movhps
popa
xlat
inc
push
enter
das
adc
les
cmpl
cmpl
cli
or
lds
pop
movsb
loop
test
jmp
ss
xchg
divl
sub
int3
cmc
inc
outsb
js
cmp
add
mov
pop
adc
sub
cs
inc
out
and
sarb
je
icebp
push
jge
movsb
ja
push
mov
xor
lods
and
in
or
fs
fwait
mov
out
shlb
mov
and
lods
push
pop
mov
cs
push
pop
add
test
and
mov
xor
dec
xchg
inc
mov
cmp
pop
rorb
push
jle
icebp
xor
and
and
mov
fnsave
xor
imul
das
insb
imul
sub
cs
sub
sub
fs
int3
in
int3
xor
ss
mov
cmp
pusha
push
popf
mov
repnz
and
mov
jno
aad
or
shlb
and
or
lret
mov
add
nop
insl
xlat
movsb
inc
and
mov
inc
test
sbb
sbbl
pusha
testl
shl
das
push
js
stos
push
adc
in
nop
repnz
and
ljmp
fmuls
mov
imul
mov
sbb
jb
clc
push
inc
add
int3
pop
sbb
and
xor
sbb
mov
lret
sbb
das
movsl
mov
popa
dec
lcall
cli
xchg
xor
sbb
and
popf
pushf
pop
es
test
andl
jmp
pop
or
pop
aad
stos
push
cmp
mov
push
push
mov
icebp
xchg
push
push
mov
mov
fnstcw
mov
xchg
sahf
xor
cwtl
arpl
addl
mov
inc
adc
aaa
rorl
imul
fmul
jo
mov
push
push
push
int3
cmp
ljmp
dec
fldl
test
imul
dec
inc
inc
in
xor
aas
mov
xor
adc
ds
pop
adc
aaa
or
or
and
mov
sarb
andl
ret
mov
pop
icebp
push
lcall
and
rcrb
ljmp
scas
ret
ret
xor
sub
xchg
jo
in
shr
cmp
sbb
inc
jno
es
push
dec
add
arpl
pop
lods
xchg
xor
js
dec
pop
inc
add
nop
mov
push
loope
sub
jmp
push
ret
fsubrs
or
inc
ljmp
xchg
scas
adc
cmp
adc
dec
lcall
add
pop
sarb
adc
and
cli
push
sar
daa
ret
add
pop
push
mov
popf
rorl
mov
add
lret
and
push
test
es
sbb
mov
jo
sarl
scas
xchg
or
adc
pushf
adc
and
mov
add
inc
sahf
out
inc
add
and
adc
mov
ss
test
xchg
fimull
mov
pop
push
or
inc
and
mov
pop
enter
mov
cmp
mov
cmp
dec
mov
mov
sarb
test
ss
scas
pop
sbb
sbb
rcrl
sahf
inc
sahf
mov
dec
lcall
dec
sahf
fsubl
push
movsl
mov
add
adc
jl
imul
popa
mov
andl
repz
cmc
adc
enter
adc
shlb
dec
int3
add
xchg
movsb
insl
xchg
push
cwtl
sbb
fcoms
je
imul
aam
dec
dec
rcrl
sbb
dec
movsl
push
movsb
mov
jl
dec
xor
sbb
test
push
mov
xchg
popw
mov
rolb
lock
dec
adc
cmpsl
jno
mov
mov
leave
pop
cmp
and
lods
inc
sbb
add
sarb
ret
lret
out
shrl
inc
sbb
cltd
nop
je
xchg
mov
daa
xlat
enter
rclb
adc
cwtl
add
test
and
orl
movb
mov
cmp
lcall
or
nop
inc
pop
pusha
push
cld
and
pop
mov
xchg
in
in
sbb
leave
and
sbb
fcos
xor
mov
aas
or
xor
xor
aam
ja
mov
add
mov
es
inc
leave
mov
fdivs
push
push
aam
inc
movsl
xchg
add
mov
adc
pusha
dec
subb
dec
sbb
faddl
loopne
mov
add
xchg
add
call
adc
pop
rcll
jo
jbe
sbb
sbb
pop
fcoms
lcall
or
stos
or
inc
jecxz
add
sbb
xlat
stos
xorb
mov
loope
lods
rcl
or
xchg
jo
lar
adc
arpl
or
adc
adc
rol
inc
mov
or
xchg
in
popa
popa
pop
fisubrs
adc
jbe
movsl
jge
sbb
insl
sub
cs
pushl
and
mov
cli
inc
pushf
jne
xchg
movsb
dec
stc
clc
lcall
adc
or
pop
sub
mov
pusha
sbb
scas
sbb
sbb
rolb
add
mov
mov
push
inc
pop
ficoml
push
mov
and
adcl
call
mov
xchg
and
push
and
pushf
pusha
repnz
and
adc
xor
pop
xchg
cltd
push
pushf
xor
or
daa
pop
inc
mov
jl
addr16
xchg
cmp
stos
enter
add
sub
cmpsb
je
ret
cmp
add
push
cwtl
in
pop
outsl
push
cmp
sub
jo
pop
enter
add
mov
sub
xchg
pop
pop
push
movsb
repnz
mov
sbbl
and
and
and
jne
dec
cmpsb
jno
and
out
int3
xchg
pop
jb
pop
push
sbb
and
sbb
pop
jb
sbb
rolb
push
inc
xor
adc
xor
adc
push
cmp
adc
loopne,pn
aas
das
jo
pop
add
repz
and
or
fldcw
push
dec
out
sbb
aam
push
mov
and
mov
mov
and
mov
in
add
roll
insb
insl
lods
xchg
addr16
add
push
mov
inc
sub
xor
cmp
mov
cmp
mov
sti
push
jmp
push
ret
adc
mov
pop
inc
test
dec
inc
mov
mov
addb
xor
or
in
mov
nop
ljmp
dec
jo
movsb
and
dec
mov
lea
out
out
test
cmp
lds
push
cli
sub
testb
and
cs
push
pop
push
jmp
jp
and
and
cmc
add
push
rclb
vmovaps
into
sub
and
jmp
leave
adc
xchg
xor
jl
mov
cltd
cmp
dec
sub
test
inc
pushf
ret
add
cmp
mov
sub
inc
je
push
push
out
and
jo
sbb
pop
movsl
movsb
and
lret
sub
push
mov
jb
mov
jg
xchg
mov
mov
jbe
or
push
addl
sub
dec
loopne
ljmp
inc
js
hlt
xor
out
movsb
outsb
into
cmp
ficoml
cmp
jbe
mov
mov
cmp
jne
inc
add
fs
sarl
cli
das
addb
cmp
inc
push
push
hlt
ljmp
or
or
iret
jne
pop
mov
inc
adc
enter
jae
add
add
cmp
stos
or
iret
je
mov
dec
sarl
mov
jmp
shrl
push
mov
mov
stc
inc
loopne
inc
xor
xchg
or
cmpps
rcrl
add
jg
movsl
sbbb
popa
jae
testl
rcr
rcrl
aad
inc
adc
lods
dec
or
rcl
add
insb
mov
imul
jb
adc
dec
mov
test
and
mov
xchg
adc
rorl
mov
ret
sbb
cmp
pushl
mov
jb
xchg
push
rorl
sbb
add
pusha
adc
push
cmc
je
add
add
cmp
in
dec
ds
dec
pusha
adc
add
aas
or
xchg
getsec
mov
ds
jl
fmull
jg
je
cmp
or
and
mov
movb
stos
test
and
ljmp
push
add
shrl
pop
dec
add
leave
jne
pop
add
int3
dec
cld
movsl
nop
enter
adc
adc
pop
adc
bound
bound
pop
test
mov
add
or
sbb
cmp
dec
sub
mov
out
insb
inc
inc
daa
push
mov
fs
inc
push
push
testl
dec
jnp
sub
dec
iret
adc
push
mov
add
test
or
mov
or
sti
jb
cmpsb
mov
ja
fldl
xor
mov
rorb
add
push
ret
xor
sti
pop
ret
adc
es
dec
and
movsb
popa
jg
add
push
push
pop
gs
cmc
add
jmp
imul
or
mov
mov
loop
mov
adc
or
inc
cmp
dec
ja
sub
cmpb
fs
ja
sub
push
add
fsubs
or
imul
add
add
mov
add
in
mov
scas
adc
neg
xchg
sub
mov
test
pop
or
rorl
dec
xchg
sub
pop
dec
sub
dec
cwtl
add
inc
and
scas
and
xchg
sbb
outsl
adc
pusha
mov
xor
fldcw
or
push
sbb
leave
mov
loopne
sbb
push
mov
andl
imul
pop
sbb
aam
dec
add
jae
bound
cmp
xorl
pop
xor
adc
sbb
iret
or
add
incb
dec
xor
insl
mov
pop
mov
mov
jne
popa
add
or
es
or
add
or
mov
sbb
or
fsubs
adc
mov
mov
test
xchg
in
call
sbb
aam
call
popa
into
rolb
rclb
mov
jle
xor
repz
xor
filds
fistps
jnp
rolb
push
cmp
add
or
sti
dec
push
inc
or
xchg
adc
rolb
jnp
dec
in
cmp
hlt
push
inc
sbb
dec
ret
adc
or
pop
imul
pop
jne
call
mov
mov
or
or
xor
jmp
lock
add
pop
nop
and
inc
int3
ret
and
or
ret
test
adcl
jns
lea
inc
xchg
iret
sub
add
sub
add
js
enter
imull
or
xchg
sbb
xor
fdivrl
int3
and
jne
pusha
inc
test
inc
jb
imul
sub
xorl
jp
mov
test
adc
cmpsl
je
stos
mov
test
lock
sub
adc
pop
cmp
and
mov
pop
test
push
sub
inc
sbb
or
arpl
and
je
push
les
push
les
iret
ljmp
call
adc
shl
les
pop
in
mov
jnp
test
add
ss
push
pop
or
jecxz
sbb
lock
ret
sbb
push
sub
mov
rcrb
jle
adc
in
lret
popa
test
repz
dec
pop
ret
jnp
ljmp
xor
jne
je
inc
and
or
cmp
jl
flds
scas
insb
test
js
pop
fwait
pop
hlt
add
sub
and
gs
and
push
adc
or
push
insb
hlt
adc
insl
roll
les
adc
sub
sbbl
nop
rolb
cltd
int3
push
enter
dec
or
fstpt
js
pop
adc
push
pop
mov
lea
or
inc
jnp
dec
mov
movsl
pop
jmp
or
xchg
and
inc
and
cmp
inc
xor
daa
inc
xlat
and
shrb
xor
or
dec
popf
shll
xchg
call
rdtsc
xor
enter
push
xchg
out
xchg
or
mov
add
jns
fcmove
aad
or
pop
in
clc
inc
das
je
jge
ljmp
dec
mov
sbb
inc
xchg
and
shrl
dec
in
cmp
fdivl
mov
es
adc
cmp
ljmp
inc
sbb
mov
nop
loope
push
push
add
adc
lds
dec
mov
inc
movsb
mov
cmp
push
sub
push
jecxz
inc
sbb
cmp
addr16
sbb
jle
pushf
xchg
or
cmp
mov
aas
les
les
clc
imul
add
outsb
mov
jge
push
cmp
dec
sbb
cmp
jle
test
adc
mov
add
mov
sub
inc
add
inc
or
pop
and
cmp
push
dec
jl
jne
sub
inc
pop
sub
sbb
sbb
jl
jle
mov
cltd
xchg
pop
xchg
pop
ret
ret
mov
or
inc
cmp
cmp
movsl
xchg
push
push
push
popl
popa
push
loopne
add
aaa
scas
push
fldl
hlt
or
inc
sbb
inc
data16
cmp
mov
out
jne
daa
bnd
adc
hlt
lock
iret
jne
or
jne
or
rolb
ljmp
int
js
inc
push
adc
mov
mov
lea
add
lea
jle
lock
outsb
aas
cmp
loop
lea
inc
pop
xor
push
jl
mov
lea
repnz
mov
dec
hlt
sti
lea
adc
cmp
ds
mov
mov
add
add
jnp
sbb
xchg
loope
sub
sub
pop
shrb
xor
sbb
mov
and
mov
dec
sub
int3
cmpsl
orl
pop
adc
jne
fnstenv
clc
adc
ds
sub
std
lods
or
jne
fstl
dec
mov
neg
loopne
shrb
lea
jb
adc
mov
add
push
jl
cmp
or
sbbl
out
add
jl
popa
outsb
ret
xchg
xor
inc
loopne
nop
dec
mov
lahf
sbb
xchg
push
ss
or
mov
push
pop
jmp
orl
incl
pusha
inc
mov
or
xor
pop
mov
inc
dec
lcall
les
jne
ror
xor
xor
fs
aaa
inc
lods
sbb
ficoml
mov
add
fwait
mov
mov
mov
mov
jne
insl
cmp
and
and
xor
arpl
or
mov
cwtl
mov
push
xchg
adc
loopne
or
fldl
rorb
int3
or
mov
or
into
inc
or
sbb
sub
inc
dec
pop
mov
mov
loopne
mov
add
adc
lcall
addr16
mov
repnz
and
fs
push
or
mov
pop
xor
mov
push
mov
rcr
lcallw
loopne
leave
push
loop
or
pop
push
jmp
fwait
and
or
adc
pop
orb
add
insb
add
xchg
add
mov
dec
inc
fisttpl
jge
outsl
mov
mov
orl
negl
sub
je
mov
mov
xor
push
test
pop
mov
and
jns
lds
ret
or
pop
inc
xchg
dec
addl
mov
push
movb
sbb
add
aaa
dec
das
and
pop
add
xor
sahf
inc
js
cli
cmp
repnz
nop
lds
sbb
or
adc
nop
fldln2
in
and
dec
push
cltd
inc
adc
and
jbe
and
lds
enter
sub
fsubl
es
sub
pop
xor
pop
or
dec
es
push
adc
dec
xor
leave
cmp
in
inc
sub
rorb
and
or
inc
test
adc
out
sbb
and
ret
shlb
inc
lret
or
sub
xor
nop
cmpsb
pop
in
xor
rolb
push
lea
sub
xchg
or
and
lcall
arpl
pusha
jno
mov
je
test
cmp
push
pop
orl
pop
rorb
pushf
cmp
rcll
sti
sbb
xor
pop
adc
sub
scas
mov
adc
mov
or
adc
mov
js
cwtl
sbb
jg
adc
jae
je
push
xchg
pop
lea
push
xchg
arpl
in
inc
sbb
faddl
outsl
xchg
sbb
clc
and
shlb
sti
addl
or
add
cmpsw
test
leave
mov
imul
push
lret
ret
mov
movsb
push
int
push
pop
push
or
loopne
jg
sahf
push
roll
ljmp
xor
fsubrl
push
les
jbe
ffree
mov
xchg
call
es
movsl
jne
mov
idivb
jno
in
call
cwtl
add
and
out
mov
int
inc
mov
inc
add
popf
cmp
js
mov
call
out
add
add
in
sbb
dec
pop
inc
std
xor
fldcw
push
sub
sub
inc
rcrb
mov
cwtl
dec
or
xchg
xor
adc
lahf
cmc
icebp
mov
fwait
pop
punpcklbw
cltd
xchg
cmc
clts
insl
dec
add
sub
xchg
inc
xchg
pusha
xorl
sbb
fadd
loopne
movsb
mov
mov
addr16
push
jmpw
fsts
xchg
xor
aaa
pop
loopne
popf
je
cs
dec
rclb
ror
push
jne
pop
stos
mov
inc
fdivrs
mov
and
sub
notl
push
sub
test
incl
bound
aas
sub
aaa
cld
or
and
sbb
mov
mov
cpuid
cmp
xor
jnp
xor
frstor
adc
lret
mov
dec
ret
daa
fsubl
and
repz
movsl
push
pop
movsl
insb
ss
mov
cmpsl
test
or
dec
pop
rorb
mov
sbb
and
clc
xchg
pop
dec
rcr
add
js
cld
pop
jge
sbb
je
adc
clc
rorb
stos
stos
cmp
mov
rcrb
js
push
sarb
dec
shlb
stc
rolb
mov
sub
or
popa
adc
and
push
inc
jecxz
mov
insb
into
in
loope
movsl
fsts
inc
les
lds
push
mov
sbb
cli
loop
call
jmp
out
push
push
add
je
mov
jmp
push
add
add
inc
loopne
cmpb
fdivrl
cmpl
mov
and
add
add
and
jmp
mov
repz
or
pusha
outsl
mov
adc
or
push
je
cmp
mov
sub
and
leave
push
push
pop
dec
jb
mov
add
orb
xchg
ret
jmp
push
nop
imul
push
rolb
ss
shll
sbb
addr16
mov
inc
imul
add
jecxz
lret
imul
cmp
jne
shlb
xchg
andb
dec
and
or
sub
cmp
out
sub
test
lods
add
pop
push
and
xchg
in
or
xor
hlt
aas
mul
pop
ja
ljmp
test
pop
lock
jnp
pop
adc
lahf
daa
or
jno
stos
movsb
ret
jo
and
mov
mov
lock
push
je
movsl
ja
jne
nop
int3
or
or
je
or
aas
inc
mov
jb
rolb
sbb
sete
cmp
mov
aam
pop
dec
cld
inc
and
ds
add
jge
pop
js
hlt
jae
movsbl
in
xchg
cli
sbb
inc
mov
mov
jmp
rorb
add
sbb
mov
jmp
enter
ret
xchg
loopne
dec
inc
fadds
dec
jmp
shl
or
and
inc
cmp
mov
ljmp
and
add
sar
add
mov
fcomip
pop
cmpsl
xor
ss
cmp
jecxz
iret
push
add
add
or
enter
adc
or
jne
add
pop
pop
dec
ret
sahf
inc
sbb
push
mov
lahf
pop
push
cwtl
fcmovbe
and
mov
stc
jb
aaa
add
test
adc
cli
scas
jo
shld
lea
mov
ret
add
sbbl
or
idivb
stos
arpl
or
jecxz
and
mov
ss
shrb
mov
mov
adc
add
dec
jne
and
add
cltd
aas
arpl
rolb
shl
dec
sahf
xchg
out
mov
jl
hlt
push
ret
or
out
adc
or
imul
pop
mov
pop
pop
sarb
add
loope
jnp
and
nop
arpl
aad
mov
pop
push
pop
in
movsl
sbb
mov
push
xor
push
add
mov
sbb
or
cmpsb
sbb
cltd
pop
sbb
mov
xchg
ret
mov
sbb
in
mov
and
push
and
bound
enter
jge
pop
inc
add
or
pop
push
jmp
mov
cld
push
and
nop
cld
or
push
push
push
xor
mov
pop
outsb
pop
pop
and
fbld
aas
pop
add
in
cmpsb
jnp
jnp
and
add
jl
in
push
pop
cmp
mov
push
inc
nop
aad
and
pop
dec
out
mov
push
pop
xchg
outsb
or
inc
sbb
mov
js
idivb
es
push
pusha
xor
push
jne
or
dec
es
ss
jns
sbb
icebp
push
push
xchg
mov
stos
xor
roll
dec
dec
xor
leave
pop
enter
lahf
adc
lea
das
sub
lret
jge
cmp
lret
mov
bnd
push
pushl
daa
nopl
sbb
add
lds
sarb
mov
mov
jmp
fadds
mov
in
dec
leave
rcl
jbe
cmp
movl
push
pushf
cli
aad
mov
test
popf
ljmp
test
push
sbbb
call
dec
add
sbb
push
lahf
je
call
shl
mov
test
mov
inc
lcall
movsl
stos
sti
aad
push
push
daa
js
scas
and
or
adcb
sbb
dec
mov
insl
adc
push
in
aam
imul
jno
sbb
pop
aam
jle
lcall
sarl
mov
jne
push
dec
leave
or
push
jmp
mov
daa
adc
add
mov
sub
call
cmp
lret
ret
xchg
pop
mov
lcall
int3
mov
jb
add
mov
adc
xchg
les
aas
incb
adc
mov
rorl
xor
repz
je
jecxz
push
pop
dec
fcomps
adc
cmpsl
call
out
rcl
loop
or
lds
and
roll
xor
fsubs
mov
inc
enter
repnz
xor
mov
mov
inc
and
pop
xchg
or
or
xchg
or
lret
rclb
adc
dec
aam
mov
xchg
stos
shlb
mov
clc
jl
cwtl
loopne
inc
xchg
mov
sub
movsl
cltd
lret
push
push
sbb
sub
daa
movsbl
shl
call
enter
call
adc
jmp
mov
out
test
subl
clc
sbb
cmp
nop
lret
movb
in
push
test
adc
xchg
inc
add
xor
pop
push
jne
pushf
mov
cmp
stos
inc
jl
xchg
mov
int
mov
addb
dec
push
popa
push
xchg
je
add
rcrb
xchg
xchg
or
fld
movlps
stc
pop
lret
mov
cld
les
add
xchg
xor
push
sub
pop
leave
jno
sbb
jge
mov
es
sbb
cltd
pusha
add
xchg
or
lahf
mov
xor
xor
sub
xchg
subl
or
rorb
cli
xor
std
and
cmp
imul
mov
lcall
fucomip
ret
xchg
mov
mov
clc
pop
mov
add
add
mov
inc
push
adc
int
push
sbb
xorb
cmp
xor
mov
add
push
fmull
add
clc
add
mov
add
orb
mov
inc
mov
mov
cmp
jl
jge
push
inc
mov
ja
cmc
mov
jle
xlat
fcompl
sub
push
icebp
or
orb
or
mov
add
add
push
mov
imul
or
lcall
cld
push
leave
push
xor
mov
inc
call
out
xchg
scas
pop
add
inc
stc
fwait
jb
pop
ljmp
push
adc
mov
insb
into
push
cmp
and
jb
add
loopne
or
push
adc
add
add
jns
mov
in
or
xor
nop
dec
in
test
jb
pop
sbb
pusha
cli
sub
test
adc
inc
sahf
mov
cmp
in
pop
adc
push
enter
ja
addr16
mov
lahf
lret
push
jnp
or
scas
and
adc
mov
fs
in
pop
movsl
imul
adc
mov
adc
loopne
xor
jmp
arpl
inc
xor
fisubs
jmp
in
add
jo
adc
mov
or
and
enter
sub
or
mov
and
mov
pop
mov
loop
mov
inc
or
sbb
inc
xchg
dec
xor
pop
jb
test
or
call
mov
daa
mov
pushf
stc
sub
ss
lea
cmp
jbe
cmp
es
outsl
lock
mov
sbb
sub
mov
pushf
mov
pop
or
add
rep
and
insl
push
xchg
lods
xor
les
insl
outsl
inc
push
mov
mov
insl
leave
xor
test
rolb
push
ljmp
xchg
push
xchg
push
fmuls
push
fsqrt
mov
fsts
push
push
push
cmp
pusha
mov
sub
jmp
push
pop
sarb
push
mov
sbb
test
pop
ret
and
movsl
xor
enter
pop
addb
shll
mov
es
nop
jae
jecxz
sbb
push
aad
call
mov
and
sti
lea
pushf
movsb
mov
loop
push
imul
cwtl
or
sub
pushf
adcb
lods
int
repnz
cmpsl
movsl
loope
gs
fcoml
sbb
add
andl
in
adc
add
mov
lods
test
inc
and
lds
sbb
sbb
jp
push
mov
xor
into
hlt
xorb
iret
add
in
add
adc
call
lds
adc
mov
je
movsb
xor
xchg
adc
and
loope
pop
cmp
lods
add
xor
and
add
in
loopne
clc
adc
enter
mov
pop
pop
and
cmp
shrl
test
mov
push
leave
xor
stos
loope
inc
enter
sbb
cmp
xchg
jle
xor
dec
int
faddl
in
mov
ror
push
mov
mov
mov
push
adcl
ljmp
enter
sub
dec
adc
loopne
mov
fwait
outsl
dec
sti
dec
stos
xchg
xor
sub
cmpl
sbb
shrb
stos
jle
add
pusha
xor
scas
add
sub
jno
push
aam
lret
inc
inc
es
add
lea
pusha
pop
stc
add
cmp
adc
xor
sub
lea
mov
je
mov
punpcklwd
lea
sbb
fistpll
mov
in
mov
hlt
xchg
imul
pop
lods
cltd
mov
pop
or
int3
mov
sub
sbb
out
cmpl
mov
lea
push
push
dec
fsts
out
fwait
movl
aas
pushf
pop
adc
nop
mov
or
push
fnstcw
cmp
dec
aas
mov
xchg
add
jecxz
pop
fdivl
adc
inc
add
leave
push
insb
or
fistpl
adc
cmpsl
mov
and
insb
popa
ds
je
xor
push
sub
xor
mov
add
rcl
test
sarl
gs
add
test
nop
dec
xchg
inc
or
pop
insb
fwait
add
dec
cs
lcall
sbb
pop
aam
cmpsl
out
fmul
mov
adc
rol
pop
or
scas
gs
adc
inc
incl
mov
inc
xchg
sar
mov
clc
add
fcmove
inc
aad
push
inc
xor
shll
inc
xchg
jmp
push
push
mov
lods
adc
or
adc
lret
dec
xor
push
shrb
dec
outsl
outsb
lods
dec
push
push
mov
pop
mov
movsl
int3
jne
jne
stos
sbb
ret
mov
lahf
imul
jo
lods
xchg
push
adc
insb
loop
ja
adc
jg
cmp
pop
cmp
jbe
sar
sarb
sub
cmp
pop
push
sbb
add
cmpsl
in
lahf
test
cmp
add
fisubl
and
ds
cmpsl
int
or
cmp
bound
jns
aas
add
sbb
pop
clc
jne
mov
jo
outsb
adc
or
loopne
pop
mov
leave
adc
jge
xchg
shlb
push
cld
out
sub
jne
sti
mov
in
or
pusha
jo
cmp
call
imul
push
push
adc
push
push
call
cmp
sbb
dec
jecxz
jmp
add
mov
jmp
rcrl
lods
sub
adc
aaa
dec
and
popa
add
add
lret
inc
sarl
jae
inc
jmp
or
push
shl
mov
dec
jbe
adc
or
or
or
popa
in
pop
add
and
in
nop
dec
or
xor
and
repz
in
bound
aaa
test
cmp
ret
in
dec
test
cmp
xorl
jns
dec
or
inc
pop
adc
mov
and
and
sbb
addl
cs
cmpsl
shrb
add
jns
fisttpll
mov
xor
sbb
and
sub
push
jge
jae
rclb
cmp
fildll
sbb
pop
jmp
cmp
test
cmp
into
adc
adc
xchg
ret
sub
mov
sbb
mov
push
and
ss
or
insb
in
movsl
inc
xchg
xchg
push
xor
sub
mov
mov
dec
or
inc
inc
ja
outsl
aas
stc
das
sub
test
push
sbb
mov
or
sbb
lea
adcb
pop
adc
jae
push
or
inc
sub
inc
mov
add
xchg
sub
addr16
push
sahf
cmpsb
dec
xor
lahf
andb
pop
and
sbb
rcll
ss
or
test
test
xchg
adc
and
cmp
adc
cmp
add
imul
jae
push
outsb
cwtl
outsb
fsts
push
shlb
jne
mov
sub
push
ljmp
jmp
cltd
aam
cmpsl
inc
push
test
xchg
mov
lret
insb
push
pushf
iret
mov
daa
dec
cmp
mov
or
lahf
ret
and
pop
adc
sub
mov
adc
jo
cwtl
sarb
test
sub
shlb
xor
pushf
mov
pop
sub
or
cmp
xor
cwtl
push
mov
push
add
gs
jnp
call
xor
aam
sbb
inc
xor
loope
ret
in
ret
fimuls
sbb
fdivs
inc
inc
rcl
inc
mov
pop
popf
mov
mov
mov
in
cwtl
push
cmp
pusha
sub
and
adc
addl
test
cs
inc
daa
push
pop
inc
xchg
lock
or
cwtl
test
popf
add
mov
push
jbe
push
sbb
add
lock
sbb
add
shlb
es
out
and
stc
pushl
dec
adc
adc
or
hlt
fwait
shl
add
fsubrl
and
cli
popa
jbe
fcompl
loopne
mov
jmp
pop
add
data16
lahf
mov
and
std
bound
js
mov
xlat
push
loop
cwtl
add
faddl
call
int3
iret
test
nop
subb
push
lock
push
push
stos
or
adc
inc
movlps
or
movsl
das
add
rolb
leave
mov
fsts
inc
push
push
mov
and
cmp
jb
cmp
inc
mov
inc
daa
dec
jae
inc
aaa
popa
push
scas
orb
and
test
imul
insb
popa
aad
sarb
add
push
inc
adc
inc
das
stc
hlt
es
je
scas
add
jmp
aaa
std
mov
js
mov
mov
mov
cli
das
je
jns
outsl
mov
mov
cmp
addr16
je
cmp
jne
mov
sbb
inc
ret
add
pop
dec
lea
negb
jmp
dec
mov
dec
xor
push
cmpsb
mov
and
popa
ljmp
testb
je
testl
scas
sub
in
cmp
jbe
push
lea
in
call
or
inc
cmp
je
sub
inc
jmp
inc
and
xchg
cmp
imul
sbb
pop
adcb
insl
pop
loop
mov
and
out
clc
mov
in
dec
cmpsb
repnz
je
aam
mov
aaa
xchg
lods
pop
testb
add
sbb
loop
inc
inc
push
cmp
in
adc
add
inc
add
cmp
add
insb
outsb
hlt
lcall
cmp
adc
je
sub
sub
sub
mov
ljmp
sub
jo
push
mov
dec
lds
jge
adc
jo
xchg
jo
scas
push
push
sarb
xor
push
pop
test
mov
inc
cld
jmp
loopne
jne
mov
mov
pop
push
in
push
mov
mov
mov
push
mov
mov
aaa
jae
movl
pop
inc
shrb
shl
loope
sti
add
fsubr
adc
aas
insb
sti
and
cmpsb
and
les
sub
aaa
js
fs
jne
xor
or
lock
mov
mov
inc
rorl
call
cmp
dec
jge
jno
shlb
fsubrl
dec
jo
add
push
addl
call
addl
mov
or
int3
push
cmp
sarb
testb
and
cmp
lock
sti
out
out
jle
es
sub
sub
and
pop
or
mov
jbe
jl
or
adc
cwtl
inc
test
jbe
lea
cmp
jbe
push
adc
loopne
hlt
pop
arpl
pop
add
sbb
cmp
je,pn
test
jne
pop
push
adc
pop
add
sub
jb
clc
add
push
xor
fwait
dec
cld
lods
xor
adc
movb
inc
call
rol
rclb
test
pop
rorb
xchg
data16
mov
inc
and
dec
sub
sbb
push
adc
mov
js
inc
inc
mov
adc
sbb
add
sbb
jp
adc
inc
push
je
mov
cmp
lock
icebp
xchg
lea
xor
adc
and
mov
fdivl
js
rcrl
dec
push
scas
aaa
push
mov
mov
xchg
mov
push
push
shll
das
cmp
jnp
pop
inc
add
leave
les
in
ret
add
rclb
jne
js
jecxz
xor
or
inc
js
mov
sahf
mov
imul
dec
test
xchg
mov
xchg
subl
push
fists
out
fidivrs
in
cmp
push
add
test
push
int
lock
test
int
xorb
mov
jno
ret
push
mov
mov
push
push
popa
sbb
lcall
movsb
mov
xchg
js
scas
mov
sbb
out
jge
repz
and
in
ficoml
lds
in
push
jecxz
push
andl
dec
mov
and
and
aaa
jp
mov
mov
hlt
xor
jne
cmp
add
insl
or
push
pop
push
movl
push
adc
dec
roll
jb
push
push
lahf
xchg
test
mov
pop
movsl
or
insb
cli
loopne
sbb
xchg
push
mov
mov
inc
fmul
add
push
aam
add
mov
mov
pavgb
enter
add
hlt
popf
int
cmpl
loopne
pop
popa
xchg
outsb
je
pushl
cmp
pop
mov
mov
cmp
outsb
fsubr
jae
jle
push
pop
push
cmpl
push
or
add
cmp
pop
inc
sbb
dec
lea
pusha
rorb
sub
mov
pop
push
inc
fdiv
jge
adc
pop
xor
and
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
ss
cmp
cld
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
and
mov
push
movsl
xchg
scas
rorl
add
xchg
imull
mov
scas
cmp
pop
je
test
aaa
push
ret
jae
push
inc
inc
jmp
and
push
fs
mov
shll
adc
xorb
loopne
sbb
push
push
lea
cmp
or
adc
inc
test
icebp
in
clc
mov
or
sar
dec
lea
sbb
add
xor
stc
push
sbb
inc
push
add
mov
loop
hlt
xor
mov
and
je
push
dec
mov
je
les
add
push
add
pop
add
and
call
scas
lret
in
inc
add
inc
imul
jp
and
sti
pusha
jb
in
push
iret
push
mov
adc
xor
rol
add
scas
setnp
daa
push
adcl
push
mov
mov
cmp
and
xchg
pop
test
jecxz
das
push
and
gs
enter
or
and
inc
js
adc
and
pop
mov
orl
sub
fndisi(8087
mov
xchg
jbe
push
push
popf
test
add
jb
xchg
xchg
pop
and
std
xor
push
or
push
sub
push
frstor
pop
insb
mov
frstor
cmpsb
sbb
or
xchg
or
pusha
pop
xchg
fs
in
mov
xchg
push
push
out
jae
cmc
call
push
and
cmp
jne
movsl
fldl
adc
or
pop
add
jecxz
dec
sbb
xchg
push
jp
jecxz
or
add
xchg
shlb
testl
jne
or
pop
cwtl
cmpl
dec
push
xor
xor
imul
lret
add
dec
mov
ds
aad
cli
xor
insl
jnp
das
in
imul
lret
sbb
loopne
add
dec
scas
into
cmpl
movsb
fiaddl
in
andl
aas
sub
add
test
inc
fs
pop
fcmovu
nop
dec
orl
aas
leave
or
inc
jmp
push
aaa
rolb
inc
je
fstps
cmp
out
jge
out
inc
mov
or
jne
dec
mov
jne
push
push
lret
scas
cmp
mov
add
mov
or
mov
push
andl
std
test
dec
cmpsl
or
adc
push
adc
insl
leave
lret
mov
dec
jae
add
ficomps
jnp
ffree
inc
xchg
mov
xchg
jne
fcmovnb
mov
mov
icebp
cmpsl
incb
inc
lods
fwait
pop
loopne
sub
in
cmpsl
mov
jnp
insb
rorb
push
aas
je
cmp
cmpsb
shlb
push
pop
jne
aam
sbb
flds
cmpsl
jne
push
imul
jbe
inc
pop
jne
pop
call
pmulhw
test
xorb
insl
in
xor
stc
jbe
jg
jne
jmp
sbb
sub
mov
mov
sbb
mov
push
sub
cmovne
sbb
xchg
push
mov
sbb
shlb
je
pop
in
jo
and
sub
mov
pop
pusha
pop
je
imul
repz
jmp
pusha
mov
movsl
jb
mov
sub
sarl
dec
sub
leave
pusha
mov
inc
test
xlat
xchg
mov
sub
pusha
repnz
adc
cmpl
mov
adcl
orl
sbb
jo
pop
cs
fs
push
scas
or
inc
decb
pop
faddl
scas
or
or
jle
or
push
push
ret
mov
les
mov
je
push
pop
push
clc
adc
push
mov
dec
in
push
dec
adc
or
jbe
push
movsl
aas
add
inc
sub
xchg
arpl
xchg
test
push
add
mov
aas
push
xor
xchg
rclb
push
push
push
pop
pop
jb
pop
cs
pop
pusha
pusha
in
inc
mov
sub
ret
call
shrb
xchg
loopne
inc
movsl
push
add
rolb
clc
push
inc
aad
movsl
push
les
mov
lods
fisttpll
outsb
sti
jnp
mov
and
lock
sbb
jmp
push
rcrl
adc
push
mov
sbb
add
push
xor
push
or
inc
adc
fs
jns
ror
adc
pusha
sbb
pop
popa
dec
popa
inc
dec
je
cld
scas
stos
add
cs
add
daa
mov
or
leave
sbb
xor
lock
ljmp
sbb
sti
pop
dec
cmp
push
dec
cli
jp
push
pop
jmp
rcl
mov
stc
sub
enter
std
pop
imul
sti
and
add
or
or
xchg
dec
enter
or
call
sbb
fimull
sub
je
lock
mov
cld
lods
test
lock
testl
xchg
or
imul
dec
pop
push
mov
xchg
mov
jae
sub
mov
fmul
push
fstpt
lock
fadds
sbb
testl
jno
dec
cmp
in
and
push
pushf
clc
filds
sub
dec
add
dec
add
ss
inc
xchg
adc
mov
loopne
stos
add
or
je
jg
mov
andb
lret
je
push
in
push
add
nop
mov
outsl
sbb
and
pop
sbb
aas
mov
push
nop
xlat
mov
add
pop
push
imul
pop
add
icebp
jno
push
sub
jo
fs
or
call
push
adc
ds
push
cmp
jne
mov
cltd
add
add
call
fcmovnu
adc
shlb
or
lock
jne
adc
sbb
or
cmp
ficoml
xchg
mov
adc
xchg
xchg
sbb
scas
and
je
or
daa
cs
push
adc
jae
push
add
sbb
mov
or
incl
cmp
push
popa
jo
jl
adc
pop
sbbl
int3
adc
imul
sarb
cmp
mov
sub
in
clc
mov
pop
scas
hlt
cmpsb
lret
mov
add
in
je
divb
pop
pop
ljmp
mov
fisubrs
inc
or
add
inc
in
data16
popf
add
test
push
fisubl
jb
xor
outsb
out
pop
pop
inc
cmp
lea
adc
inc
hlt
subb
mov
lock
hlt
andl
arpl
add
inc
inc
mov
mov
cmp
ljmp
add
pop
enter
pop
push
pop
jb
les
enter
or
xor
orl
call
push
jge
call
mov
and
add
xchg
call
jnp
sbb
popa
lea
test
call
orl
int
pop
je
adc
xchg
mov
mov
insb
ficoml
hlt
test
aam
rorb
das
je
or
movsb
call
mov
out
inc
push
push
mov
add
pusha
scas
xchg
rorb
gs
jns
xor
adc
or
lcall
jnp
inc
mov
movsl
movsw
lret
sub
sbb
scas
addb
pop
xchg
or
fsubs
mov
in
adc
push
imul
push
adc
outsb
outsl
or
push
test
pusha
es
sub
mov
inc
je
adc
cmp
jo
bound
adc
xchg
in
push
dec
clc
jmp
sub
lods
push
loopw
inc
adc
and
mov
jmp
adc
inc
add
ret
loopne
xor
add
in
aam
ficoml
adc
jbe
or
push
jmp
mov
test
add
and
sbb
inc
pop
push
gs
adc
dec
dec
lods
dec
pop
pop
or
mov
sbb
add
dec
dec
jne
jns
jp
les
add
jmp
gs
jl
sbb
adc
adc
jbe
push
aas
in
add
mov
jmp
xchg
cmp
test
or
lock
mov
pop
imul
rclb
aam
add
sub
pop
lcall
push
cltd
mov
cmp
js
lods
push
sub
js
aam
ds
mov
and
fdivp
pop
and
sbb
nop
rclb
mov
cltd
sbb
add
dec
mov
lret
pushf
fsubrp
push
mov
jb
test
push
je
push
mov
daa
das
or
cmc
das
xchg
inc
adcl
sti
incb
jl
jmp
pop
mov
ss
inc
mov
add
ljmp
sbb
add
imul
add
aas
push
dec
pop
test
in
adcl
fmull
push
xor
fidivl
cmc
jno
lret
into
jne
int
mov
sub
shl
push
insb
xor
lea
mov
pusha
lahf
adc
pop
sbb
dec
loop
push
and
adc
or
push
rep
lcall
aam
adc
or
cmp
movb
mov
jmp
aaa
loop
lea
inc
push
fiadds
xorb
xchg
sarb
ds
fldl
lret
push
push
aaa
lock
mov
stos
mov
cmpb
inc
add
adc
push
lcall
in
std
adc
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
dec
sbb
cmp
push
sbb
pop
nop
push
hlt
push
jbe
fs
jne
out
mov
dec
adc
cwtl
mov
sbb
mov
sbb
xor
ss
fadds
int3
inc
push
cmp
mov
inc
aad
es
or
aad
fsubp
xchg
push
or
push
jmp
sbb
sbb
popa
pop
jg
inc
cmpsb
leave
sub
pop
mov
cmp
das
loope
dec
fstps
or
fs
add
icebp
dec
fdivs
add
add
notb
jnp
adcb
jnp
jmp
push
cld
inc
inc
adcb
or
cmp
mov
fcoml
stos
xor
mov
pop
mov
popa
and
cwtl
jle
jne
popa
inc
jmp
test
dec
nop
push
add
pop
jl
repnz
push
push
loopne
out
sbb
add
fnsave
clc
xchg
aam
test
adc
inc
nop
mov
jno
ja
call
jo
movb
cltd
jo
add
scas
or
jo
repz
adc
xorl
pop
fucomip
and
sub
sbb
push
in
jecxz
and
inc
inc
addr16
or
jne
in
cmp
pop
iret
stos
mov
mov
dec
mov
sbb
pop
movsb
mov
add
sti
xor
dec
loopne
inc
fcomps
mov
stos
or
je
mull
or
mov
adc
sub
scas
inc
jle
xchg
movb
enter
sbb
mov
sbb
add
enter
mov
xchg
movl
or
dec
cli
xor
mov
or
lock
fsubrs
aam
sahf
cmpsb
add
mov
xchg
add
mov
add
xchg
cmc
lret
pop
loopne
popa
inc
sahf
and
add
push
dec
addl
jl
push
leave
fsubr
push
mov
sub
push
outsl
adcb
iret
or
cmpsb
inc
xor
pop
xor
mov
in
adc
add
popa
adc
pop
cmp
jne
test
bswap
incl
sub
fists
aaa
ja
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
and
xchg
adc
add
dec
push
push
pop
inc
sub
adc
add
pop
movl
add
jbe
dec
jnp
mov
add
push
adc
enter
xchg
mov
add
xor
cmp
out
lcall
pusha
lods
pop
mov
add
hlt
jae
js
push
inc
sbb
mov
add
ljmp
arpl
add
cmp
inc
xor
addr16
pop
xor
jo
jns
popf
push
pop
test
push
pop
lea
popa
jge
lds
pop
into
xchg
xchg
stos
jge
push
orb
mov
flds
push
sub
stos
or
xorps
or
mov
or
mov
fadd
add
push
xor
mov
ss
cs
divb
mov
cmp
loopne
inc
pop
push
mov
and
xor
data16
xchg
sbb
xor
stos
or
xchg
cmpsl
mov
dec
sub
sub
movsl
sub
jge
leave
or
jge
add
dec
psubusw
ja
pop
leave
mov
cmpl
clc
mov
jnp
and
adc
inc
jne
cmp
push
and
xor
adc
dec
jnp
test
xorb
cmp
or
les
dec
and
inc
sbb
movb
out
dec
shlb
pop
add
fs
je
aam
pop
inc
fcomi
fisubs
rorl
and
add
int
inc
and
inc
mov
mov
clc
lret
cmp
test
repz
cmp
and
and
nop
mov
test
shll
cs
cli
xchg
xchg
mov
test
fsts
mov
pushl
inc
into
sub
jl
in
ret
js
sbb
lods
or
fcompl
adc
mov
mov
or
and
xorl
sbb
divb
leave
inc
and
dec
imul
push
sub
dec
aam
lahf
movsl
out
dec
mov
and
push
pop
adc
insb
call
js
rolb
jae
in
push
call
in
mov
sbb
dec
mov
enter
sbb
dec
ret
out
insb
pushf
fwait
jl
add
push
mov
inc
cmp
sbb
mov
xorl
nop
jmp
in
push
jge
adc
arpl
add
or
bound
mov
xor
repz
push
mov
add
mov
mov
test
repnz
adc
loopne
push
mov
xor
mov
mov
adc
or
pop
and
in
mov
pushf
lods
jmp
cmpl
jne
adc
xchg
lea
repnz
dec
test
movsb
cmp
pop
pusha
sahf
ss
inc
pushf
adc
lret
mov
inc
lods
add
cmp
lods
or
mov
shlb
lds
movsb
mov
inc
loope
push
xor
mov
stc
mov
test
jmp
sbb
and
aas
fs
dec
add
popa
push
sub
push
in
hlt
mov
outsb
mov
dec
fsubl
pop
jmp
adc
mov
xchg
and
lods
xchg
push
rep
fnsave
in
lahf
xchg
mov
push
sub
adcb
jle
outsb
and
cmp
xchg
adc
dec
mov
and
push
fmull
push
or
loope
fxch
and
jmp
mov
jle
pop
jl
loop
add
dec
cmp
enter
inc
loopne
test
or
rcrb
repnz
gs
idivb
cmc
sub
pop
sahf
pop
jbe,pn
fdivl
ret
and
popa
add
push
inc
mov
add
jp
xchg
mov
shll
mov
mov
adc
push
dec
insl
popf
jecxz
mov
enter
mov
cmpl
sbb
fsubr
add
imul
rorb
adc
jo
sub
rorl
rorl
mov
mov
sbb
popa
and
or
insl
shll
arpl
stos
mov
js
es
rorb
push
daa
call
test
push
cmp
pusha
rclb
sbb
test
add
bound
jle
iret
jmp
mov
hlt
adc
inc
or
mov
lea
add
and
xchg
push
cltd
pop
sub
xchg
ret
inc
pop
pop
push
inc
dec
add
es
dec
loop
cltd
lock
in
sub
mov
cmp
mov
or
loopne
adc
icebp
mov
int3
pushf
mov
nop
or
dec
fisubl
inc
sub
mov
lock
sbb
fstpl
test
mov
stc
and
imul
inc
and
jne
mov
popf
cmp
arpl
stos
sub
outsb
popl
xor
and
cmp
js
mov
push
mov
pop
or
sarl
loop
sub
cmp
rcrb
add
roll
cmp
mov
das
inc
jno
movsl
movsb
push
pop
or
add
fstl
ljmp
aaa
push
inc
push
shlb
xchg
mov
jb
mov
mov
inc
push
rcrb
fstl
adc
aad
add
sahf
jbe
xchg
jb
cmp
pushf
push
test
fldcw
mov
inc
addr16
xchg
orb
call
sbb
push
jp
fildl
je
hlt
sub
add
sub
xor
addr16
dec
add
mov
aam
jecxz
push
pop
divl
pop
into
aam
mov
insb
in
xor
sbb
xchg
mov
leave
sbb
lret
adc
fists
lods
jmp
ret
add
push
cld
jne
ret
pusha
push
dec
cmc
in
cmp
dec
or
adc
sub
subb
pop
adc
leave
mov
mov
insb
inc
mov
shrb
test
or
adc
adc
sbb
mov
adc
sub
inc
dec
sbb
mov
ret
sub
loope
aaa
jmp
ds
clc
sub
loopne
cmp
cld
ljmp
dec
movsb
cs
xchg
ja
shlb
mov
ficomps
testb
mov
cmp
dec
fdivrl
enter
loope
sahf
mov
mov
mov
nop
pop
mov
mov
add
adc
fidivl
shlb
add
jge
jmp
xchg
in
adc
or
xlat
arpl
fstpl
imul
xchg
dec
or
jb
jo
adc
in
push
nop
xchg
inc
adc
adc
gs
adc
adc
inc
es
insl
sbb
insb
or
push
mov
test
cltd
mov
loopne
pusha
faddl
clc
push
ret
ljmp
cmpw
je
cmp
push
inc
std
push
aas
mov
out
rdpmc
xor
mov
dec
insl
sub
push
xor
rolb
dec
cmp
add
push
add
or
xchg
pop
and
push
or
lret
out
and
fidivrl
outsb
add
popf
mov
imul
cmp
jl
mov
cltd
mov
and
das
jmp
cmp
notl
loopne
subb
cld
cmp
or
in
je
xchg
mov
dec
jnp
dec
adc
mov
nop
push
jnp
rorb
pop
daa
fdivrs
cmc
cwtl
and
jnp
push
and
dec
jae
stos
sbb
xchg
dec
cmp
into
and
add
cmpsl
lods
push
gs
test
mov
xchg
mov
into
xor
roll
subb
xor
loope
dec
cmp
jne
lods
popf
notl
jle
movb
push
mov
addl
lret
andl
sbb
dec
pushf
out
pop
add
adc
lea
jne
in
add
popf
push
imul
push
jne
arpl
roll
psrad
movsb
aam
fadd
push
mov
repnz
mov
xchg
mov
mov
insb
aam
mov
and
mov
cmp
add
pushf
sub
dec
mov
test
jmp
xor
dec
cmp
orb
mov
adc
mov
loopne
sbb
aam
jnp
adc
jnp
lret
adc
outsl
sbb
rolb
and
xlat
pop
sub
fdivs
call
std
nop
loopne
test
out
mov
push
sbb
aad
movsl
adc
push
sbb
inc
dec
loope
pop
push
push
push
in
fldl
jmp
clc
lea
xor
icebp
sti
sub
cmp
cmp
into
or
pop
add
xabort
ja
sub
div
pop
xchg
in
scas
jmp
cmp
sub
ds
or
or
inc
stos
jb
dec
push
pop
pop
mov
jno
cmp
jl
sbb
fdiv
push
out
bound
xor
cmpb
push
and
mov
into
pop
ds
pop
xorl
dec
jnp
cmc
out
fsub
mov
cmp
add
push
push
imulb
add
xorb
cmp
fidivl
xor
scas
jge
and
leave
mov
lock
mov
xlat
ret
adc
or
movsb
fiaddl
cli
aaa
pusha
pop
mov
pop
push
and
nop
and
les
idiv
addl
adc
mov
push
pop
lahf
mov
cs
rorb
lea
push
orb
hlt
add
addr16
jno
lcall
dec
leave
pop
stc
shll
mov
jmp
push
sbb
jnp
arpl
push
cmp
popa
xchg
push
inc
fildl
arpl
xor
jo
aad
or
mov
push
cmp
sahf
popa
lea
mov
in
pop
or
dec
pop
adc
add
sbb
into
test
popf
sbb
pop
repz
add
xchg
inc
dec
lcall
add
or
mov
cmpl
push
loopne
pusha
xlat
mov
sbb
sbb
or
sub
sbb
pop
add
rorl
xchg
add
popf
dec
or
lret
fildl
outsl
pop
rorl
test
or
push
mov
stc
fdivrl
lea
cmp
cmpsb
jle
add
inc
jmp
xor
std
ss
aad
call
add
jb
arpl
sub
xor
fs
scas
aaa
rorl
mov
mov
std
rolb
add
push
jmp
repz
sbb
movsb
mov
jne
shl
bound
pop
pop
cmp
ret
sbb
adc
mov
test
pop
repnz
and
mov
sub
sub
add
pop
lea
sbb
test
shlb
inc
push
adc
mov
pop
add
cmp
inc
inc
and
scas
repnz
jge
mov
pusha
or
adc
stos
mov
mov
add
andl
lea
insl
push
or
pop
int3
jge
insb
adc
cmp
push
sub
adc
pop
xorb
dec
add
lods
fstpl
mov
lods
aaa
mov
into
mov
xlat
in
push
cmpsl
pop
pop
ds
adc
clc
push
dec
popf
push
mov
mov
cmp
es
out
adc
arpl
cmp
ss
cmp
mov
add
xchg
dec
xchg
xchg
push
iret
dec
pop
pop
repnz
lcall
nop
sbb
push
mov
mov
adc
inc
add
stos
mov
sti
sub
shr
sti
fucomp
std
ret
add
xlat
adc
push
inc
jmp
inc
paddd
fists
add
jmp
lret
xchg
rolb
pop
addl
mov
lret
lar
dec
repz
dec
xlat
sbb
test
lea
xor
xchg
xchg
adc
shlb
pop
bound
shlb
aam
mov
jl
jmp
push
or
adc
leave
lods
xchg
cmp
into
inc
add
mov
add
cmpsl
dec
add
insb
and
ss
je
dec
or
ficoms
dec
or
or
je
jmp
inc
orl
jl
pop
push
sbb
rcrb
xlat
push
divl
jae
sar
lea
jmp
cmpl
sub
shll
or
in
and
std
dec
push
jnp
cmc
lcall
scas
lcall
ficomps
in
push
push
nop
cwtl
mov
pop
popa
and
sub
fisubrl
inc
cmp
adc
loopne
push
sub
jbe
push
adc
push
push
cmpsl
gs
jl
jne
jl
imul
mov
adc
daa
rcrb
add
sub
push
push
and
pop
xchg
lock
sub
loopne
jo
pop
decb
push
jnp
xchg
jb
adc
sbb
add
xor
popf
sbb
pusha
add
cmp
sti
add
or
in
inc
ljmp
mov
mov
popa
or
push
jp
lea
pushf
mov
popa
xor
cmp
and
mov
lret
lret
cmp
pop
add
mov
daa
aam
push
sub
shrl
stc
push
mov
and
fistpl
mov
push
push
push
inc
icebp
sub
movsl
push
je
test
rcrb
jmp
pop
dec
sub
jmp
cmp
xchg
sahf
sub
mov
cwtl
iret
xchg
js
add
push
stc
xchg
test
and
outsb
or
fcoms
pushl
xchg
dec
test
pop
add
fiadds
stc
push
test
fisubrl
dec
imul
test
fldl
dec
sbb
cmp
fistps
cmp
je
cmp
sbb
leave
lods
packuswb
add
xsaveopt
push
sub
addl
insl
dec
adc
into
lea
cmp
and
add
cmp
pop
or
enter
add
and
enter
add
inc
sub
pop
push
pop
cmpl
int3
push
or
xchg
inc
iret
movsb
out
add
xor
pushf
jae
push
adc
adc
xchg
or
lret
lock
adc
and
sub
jmp
in
clc
sbb
dec
inc
lea
stos
push
push
test
inc
sti
adc
jb
testb
adc
subl
in
jge
mov
pop
or
jb
pusha
add
je
ds
cmp
data16
mov
or
cmp
cld
je
test
jns
fdivr
jne
mov
push
test
cmp
dec
rcrl
shrl
cld
cmp
addb
stos
add
pop
test
cmc
dec
xor
pop
daa
call
mov
dec
mov
hlt
hlt
iret
popa
in
jns
or
adc
or
pop
cmp
add
add
mov
cmp
call
or
inc
sbb
fsts
mov
push
js
fistl
dec
rorl
cld
loopne
fnstenv
mov
sbb
rcr
jbe
repz
adc
adc
fmuls
xor
mov
out
fcoml
xchg
or
ja
push
cmp
and
inc
out
mov
in
fstpl
or
jne
lea
ret
pop
inc
mov
pop
lock
cs
pop
pusha
push
mov
xchg
insb
push
mov
hlt
neg
sbb
and
bnd
sti
mov
nop
push
sub
push
adc
insb
les
jo
repnz
test
test
js
dec
or
inc
daa
cmp
xor
pslld
jg
add
sbbb
sbb
xchg
fmuls
into
out
insb
fcmovnu
arpl
aad
mov
cmpl
jne
cmp
jbe
or
jne
add
loopne
fisttpl
dec
sti
cmp
mov
rcrb
ds
data16
insl
push
add
fldenv
inc
mov
mov
cmpb
cmp
xchg
and
lods
insl
or
adc
sbb
or
xchg
mov
pop
cwtl
sbb
sub
loope
test
scas
jne
loope
pop
sub
push
adc
lea
push
mov
mov
mov
and
js
mov
js
mov
notb
xor
push
sarb
jle
pop
les
inc
repz
sarb
test
and
dec
jno
jnp
ret
jnp
cmovs
call
or
movsl
clc
add
inc
and
add
dec
into
or
rcrb
popf
fdivl
inc
sub
mov
adcb
cmp
cs
push
daa
xor
outsb
inc
sbb
mov
jg
xor
or
cmpl
xor
stos
jmp
insb
xor
adc
dec
mov
aad
pushf
out
push
xor
pop
xlat
adc
xlat
fdivr
push
adcb
mov
mov
addr16
or
sub
push
adc
or
inc
mov
insb
lock
or
clc
jmp
pop
dec
pusha
movsb
and
lock
rolb
jno
pop
in
insb
ja
cmc
inc
cmp
jae
cmp
je
mov
dec
daa
in
push
cmp
pop
sbb
cld
inc
xor
or
andl
cmp
and
mov
add
pop
test
testb
add
lods
xchg
outsl
mov
pop
cli
and
dec
addr16
sbb
or
inc
and
cld
clc
daa
sbb
je
cmp
adc
xchg
aam
mov
push
sbb
pop
or
push
push
push
lds
sub
lea
add
sub
cmp
mov
push
sbbb
add
jb
lock
pop
pop
outsl
mov
ficoms
fucom
add
and
aas
mov
lea
popf
pop
mov
jbe
pop
lcall
aaa
mov
cmp
cmp
sahf
loop
negb
xchg
cmp
cmp
add
leave
xor
dec
mov
jne
rorl
js
mov
xor
hlt
adc
adc
lock
pop
inc
jle
clc
add
test
nop
rol
xchg
and
sarb
cmp
jge
jb
pop
adc
fucomip
cmp
cmp
fbstp
packsswb
test
pop
je
or
xor
inc
scas
int3
mov
and
add
add
bound
repnz
xlat
ja
jl
rcrb
push
je
xchg
jl
leave
enter
and
mov
int
cmp
xchg
mov
xor
xchg
sbb
test
push
pop
lods
sub
mov
mov
push
mov
push
ds
and
fsin
mov
xchg
insl
je
mov
inc
iret
push
arpl
rolb
clc
fwait
addr16
in
aam
ret
mov
jno
int3
out
add
push
aam
iret
xor
aaa
fcomps
cmp
and
daa
cwtl
push
or
jle
cs
mov
movsl
test
xor
and
or
rcrb
mov
adcb
jge
mov
lea
mov
dec
jae
mov
jle
cmp
inc
jle
push
push
cmc
js
adc
push
pushl
dec
fadds
mov
in
lea
std
mov
inc
jo
popa
std
add
or
rcl
ret
mov
xchg
or
xchg
pusha
push
mulb
sub
sti
jb
mov
out
mov
mov
sub
test
push
ret
test
dec
jge
scas
lea
fistps
insl
addr16
xchg
add
xor
mov
popf
pushf
xor
je
or
cmp
xchg
and
or
je
dec
adc
pop
loopne
adc
jae
lea
xorl
aas
or
or
testl
sbb
test
fcomip
xor
stc
push
jb
and
imul
add
enter
lea
push
lcall
popf
sub
ret
out
out
pop
push
das
mov
je
xor
jno
sub
dec
mov
scas
or
shr
jae
leave
jmp
push
inc
sub
dec
mov
xchg
add
enter
push
xchg
or
xchg
and
pop
dec
insb
lsl
mov
adc
fisttps
xchg
mov
movsb
add
sub
cmpsb
pop
push
sbb
adc
mov
and
push
dec
lock
mov
je
mov
jo
xchg
sbb
adc
or
adc
fldl
testb
cli
adc
mov
das
dec
and
sub
dec
gs
inc
push
lods
pop
xchg
dec
lods
push
pop
jne
nop
sbb
lret
push
rorl
jge
inc
add
in
jle
movsl
sub
mov
mov
imul
adc
mov
ja
fisttps
aaa
dec
jo
imul
adc
add
add
add
xor
push
lds
cmc
ret
gs
lahf
ret
and
sbb
jo
pop
mov
mov
mov
cmp
sbb
mov
incl
push
dec
or
dec
sti
jge
out
inc
cmpl
adc
inc
xchg
ss
sub
xor
je
inc
and
pop
and
or
out
test
or
pop
jg
cmpsl
add
xor
adc
sbb
sub
je
dec
add
inc
sub
gs
jmp
inc
outsb
orl
shl
ljmp
scas
jbe
enter
arpl
add
lret
push
out
xor
nop
fists
fnsave
jbe
out
addb
or
xchg
pop
sahf
mov
push
push
mov
clc
bnd
mov
bound
cmp
mov
js
dec
ret
push
jae
lea
rcrl
cmp
push
sub
sbb
mov
loop
inc
push
push
cld
mov
ja
shlb
ds
sbb
ret
test
lea
fdiv
loopne
jge
cmpsb
jge
sbb
leave
pusha
pop
cld
imul
xor
fnstenv
ja
testl
cmp
cmp
sub
mov
and
pop
pop
lea
mov
jo
xor
jns
cmovbe
movb
adc
cltd
mov
lcall
fdivs
sub
sub
out
lea
push
jns
sti
ret
cmp
push
pop
out
insb
idiv
call
adc
idiv
sub
push
cmc
dec
in
sti
fisttpll
or
sbb
inc
mov
push
jae
push
sub
pop
dec
xchg
jne
mov
push
sbb
push
xchg
jns
jg
add
test
jbe
stos
or
push
lea
cli
mov
jae
mov
pushw
inc
cmp
push
mov
fnstenv
xrelease
push
aad
xor
dec
enter
sub
inc
xor
rol
insb
adc
xchg
imul
insb
sub
jnp
xchg
int
or
je
xor
jge
cmp
cmp
adc
test
lahf
mov
sub
lret
inc
outsb
cmpb
dec
insl
xor
movzbl
jge
or
push
mov
cmp
sub
push
inc
or
add
stos
adc
es
lock
fs
int
or
sahf
dec
sub
or
adc
pop
call
jae
cmc
imul
addl
push
xor
jb
pop
push
xchg
arpl
addr16
xchg
cmp
push
imul
fdivs
adc
aaa
test
mov
in
rolb
adc
stos
push
inc
mov
sbb
adc
sub
mov
push
fdivl
xchg
add
inc
inc
mov
mov
sar
adcl
add
das
cmp
std
jmp
dec
dec
push
cmp
mov
sbb
mov
and
cmp
xlat
xor
loopne
pop
sbb
and
fidivl
jecxz
pop
lock
lea
or
daa
push
loopne
dec
aas
push
sahf
js
push
or
push
or
jge
not
jbe
cmp
mov
popf
or
push
dec
cmpl
pushl
xchg
shrl
test
or
dec
fldenv
inc
adcl
cmp
and
call
sbb
inc
es
sbb
pop
adc
shrl
popl
lock
lahf
add
push
dec
adc
repnz
sbb
fisttpl
fs
dec
inc
add
push
adc
push
push
mov
push
mov
sub
or
push
ror
adc
adc
mov
test
sbb
sub
pop
arpl
add
add
adc
dec
inc
fisttpl
jo
pop
adc
push
pop
or
or
push
sbb
cmp
sbb
push
mov
fistl
ja
and
outsl
sarl
push
fmuls
pop
pop
sbb
dec
xchg
leave
sbb
push
xchg
in
leave
xchg
mov
fmuls
sbbl
xchg
fists
push
mov
add
push
pop
rolb
push
mov
adc
push
dec
popf
and
stos
cmp
test
or
xor
adc
push
push
loope
inc
add
pop
push
inc
inc
push
rcrl
xor
mov
and
clc
rcr
push
xchg
add
xor
subb
in
mov
cmpsb
xchg
xchg
imul
xchg
pop
scas
cwtl
or
push
int3
adc
inc
rorb
lock
subb
add
sub
add
in
test
ss
or
mov
adc
cltd
or
pusha
movsb
cltd
inc
mov
pop
leave
adcl
push
sub
adc
outsb
movsb
push
clc
or
mov
inc
addl
push
adc
or
ret
sar
jle
cmp
jne
mov
add
stos
dec
pop
push
idivb
lahf
inc
xchg
lcall
lea
add
sub
pushf
sub
sub
pushf
popa
lcall
testl
or
adc
add
loop
xchg
sub
iret
mov
aad
or
mov
gs
mov
mov
xor
xor
loop
and
mov
cmp
fwait
cmp
xchg
cmp
mov
es
push
out
jge
dec
fimuls
aam
lock
sahf
fnstcw
or
pop
and
dec
mov
mov
add
adc
mov
push
xchg
popf
or
jo
push
xchg
dec
rorl
xor
mov
jle
pop
out
and
stos
push
cmpl
rcll
or
std
mov
push
shlb
das
jmp
cmp
inc
imul
aad
js
jmp
clc
xor
lock
stos
pop
js
fdivrl
sub
push
fidivs
push
jge
adc
mov
mov
mov
pusha
in
push
loope
shll
leave
lds
mov
enter
or
jecxz
lea
imul
mov
ret
cmc
jb
shll
jl
cld
adc
push
push
xlat
xchg
pusha
inc
push
add
iret
xchg
and
mov
add
ret
rcll
out
pusha
pop
adc
outsb
int
push
lahf
lret
mov
sbb
xchg
rcrb
add
jle
mov
rcl
add
jo
pop
sbb
dec
and
pop
pop
sbb
mov
mov
jmp
outsb
adc
xchg
pop
lods
sbb
mov
sub
inc
into
push
mov
lea
popa
xchg
movsl
push
test
clc
inc
std
sbb
mov
fs
jb
imul
daa
leave
test
mov
ds
mov
add
mov
cwtl
outsb
hlt
ret
scas
fcompl
cmp
pop
cmp
out
push
cld
push
adc
cld
cmp
jne
adc
fwait
add
sti
dec
clc
add
and
adc
mov
add
movsb
jne
insb
add
pop
lahf
pop
xorb
and
andb
xchg
fs
adc
mov
popa
in
adc
add
mov
and
add
and
loope
hlt
daa
jge
mov
add
mov
mov
mov
sarl
scas
cmp
inc
adc
mov
add
add
out
ds
lods
sbb
inc
addr16
cmp
mov
pop
dec
pop
push
lea
mov
adc
scas
mov
and
rorb
mov
pusha
jg
xor
dec
and
cli
decl
lock
sub
push
movl
hlt
fiaddl
inc
imul
clc
or
mov
dec
mov
rol
rolb
push
ja
adc
and
pop
call
repnz
push
push
outsb
cmpsb
jno
dec
jp
mov
push
push
loop
jo
dec
push
cmp
aad
jo
nop
inc
pusha
mov
push
jae
mov
inc
fwait
xorl
push
sub
adc
mov
push
mov
add
in
loope
rcrl
and
orl
xor
outsl
add
cmp
mov
je
sub
movupd
mov
das
outsl
push
xor
add
add
orl
dec
ret
adc
jl
mov
leave
xor
pop
pop
push
jne
sahf
jb
inc
mov
add
ss
cmpsb
fsubrs
mov
add
sarl
or
dec
jns
adc
or
push
shrb
cmp
mov
imul
inc
add
cmc
push
xchg
jmp
push
mov
adc
enter
xor
inc
out
fs
sbb
and
mov
xor
jg
dec
jo
jo
adc
xchg
mov
add
setb
push
les
insb
xlat
in
dec
mov
add
jle
add
daa
mov
aam
push
pop
rolb
imul
mov
ret
sbb
adc
sbb
pop
jp
and
push
adcl
mov
sbb
inc
call
ljmp
sub
loop
lret
in
and
fnstsw
adc
sbbb
push
pop
add
xchg
imul
loope
or
xor
dec
sbb
lcall
xor
sahf
ret
cmp
cmp
sbb
jbe
push
dec
or
push
cmp
daa
bound
xchg
rol
in
mov
push
sub
jp
cs
adc
cmp
xchg
add
push
push
jecxz
xchg
enter
sub
sbb
adc
movsl
cmp
inc
daa
xchg
btc
sbb
out
shrd
push
push
mov
enter
imul
or
cld
or
add
pop
ffreep
test
add
lea
jne
cld
or
cmp
sbb
ret
jle
sub
or
sbb
fstl
push
jne
push
push
leave
js
jne
jnp
mov
jne
or
mov
or
jne
or
jne
testl
dec
cwtl
inc
loop
mov
ljmp
fisubl
mov
mov
inc
jmp
jmp
lea
cmp
push
es
push
lret
fsubrs
sbb
imul
insl
insl
repnz
cld
dec
jnp
test
push
popa
inc
add
arpl
lret
in
dec
add
pop
ficompl
xchg
rorb
push
int3
fcompl
je
xchg
clc
ja
lahf
add
movsb
inc
mov
jge
mov
xor
sarb
sub
addr16
orl
pop
push
jge
mov
mov
mov
lea
sub
jp
or
mov
out
insb
push
sbb
push
fdivl
pop
mov
dec
scas
lcall
inc
pop
jnp
loopne
fbstp
cmp
js
jg
sbb
daa
pop
adc
bound
or
in
shll
pop
push
cmp
push
cmp
test
push
fisttpl
loope
and
adc
cmp
sbb
mov
sarl
pop
sub
nop
js
cmp
popa
mov
dec
aam
push
sarb
mov
mov
adc
mov
sbb
rolb
push
jne
dec
cli
jae
insl
aaa
or
pop
sub
sbb
jne
imul
push
int
negb
xor
outsl
sbb
dec
aaa
adc
sub
push
cmp
lea
sub
add
fstl
lods
jmp
adc
mov
cmp
lcall
push
or
cwtl
inc
or
cmp
je
add
push
or
add
push
pop
jne
andb
sbb
sti
addl
add
add
dec
jno
add
xchg
cmp
cmpsb
mov
cmp
in
cli
cmp
jl
mov
mov
out
pusha
shl
lret
int3
push
ficomps
mov
xor
hlt
jno
aaa
sbb
push
hlt
push
mov
pop
xor
and
sbb
jns
aam
fmull
faddl
sub
vpsubb
stc
mov
loopne
adc
sahf
push
inc
mov
insb
mov
addr16
mov
mov
add
lods
addr16
push
and
aam
pop
dec
dec
or
push
ror
lods
or
fmuls
jo
dec
and
add
rolb
cmp
adc
rorl
jge
imul
in
mov
xchg
sbb
dec
or
pop
xchg
loopne
popf
sub
js
ds
xchg
nop
or
inc
sbb
jno
jb
popa
fs
mulb
add
sbb
or
cmpsb
xor
pusha
fs
insb
jo
js
mov
sahf
xor
fsubr
jg
pop
mov
xchg
cwtl
add
or
inc
in
xor
int3
cmp
js
mov
scas
inc
xor
imul
loope
scas
add
int
adc
xchg
std
out
gs
pop
movb
sbb
dec
cmc
xchg
popa
pushl
sbb
xchg
jae
popf
nop
xchg
push
fadds
sbb
je
sbb
add
nop
add
movsl
mov
mov
jp
movsl
in
mov
or
jo
movsb
pmaxub
sbb
dec
add
test
out
dec
mov
sbb
mov
inc
cmp
cmp
stos
push
lods
mov
daa
arpl
pop
adc
out
sub
add
addl
movsb
ffree
xchg
inc
add
or
lea
inc
mov
pusha
nop
push
ds
sbb
test
push
or
sbb
dec
cmp
ret
adcb
dec
sbb
sti
sbb
xchg
and
ret
pushl
sbb
or
test
lds
jl
jl
push
movsl
les
bound
addl
in
push
jne
addl
inc
inc
sub
mov
push
add
and
test
and
dec
mov
es
ret
imul
add
push
je
sub
mov
and
das
xorl
sub
inc
xchg
pop
jne
orl
sarb
pop
jmp
or
iret
xor
std
enter
mov
xchg
mov
adc
test
test
movsl
repnz
das
call
out
nop
mov
pop
sar
lds
add
out
addr16
mov
xor
enter
subl
mov
pop
mov
les
mov
cmp
roll
movsb
or
push
jne
mov
sub
or
pop
scas
mov
cmp
mov
data16
cmp
add
xor
sarl
jb
inc
xchg
ja
fwait
stc
mov
push
push
lahf
jo
cld
scas
adc
push
fs
dec
xchg
sub
lahf
mov
fiaddl
adc
ficoms
push
mov
or
insl
in
push
and
andl
and
dec
aad
adc
adc
mov
jne
sub
ljmp
jbe
js
push
or
cli
pop
cmp
cmp
mov
dec
addr16
das
adc
inc
dec
add
inc
pusha
pop
cmovo
call
inc
sbb
inc
or
mov
push
es
push
ljmp
scas
adc
add
addl
mov
lock
aad
inc
xchg
enter
loopne
and
add
dec
xchg
or
push
js
mov
nop
outsb
shlb
lea
add
mov
bound
and
mov
and
mov
jno
orb
push
or
lock
inc
mov
inc
lock
or
and
or
or
nop
pop
sub
jnp
je
je
pop
sbb
fs
pusha
insb
pop
inc
push
sbb
scas
add
jo
out
movsb
xor
jecxz
cmp
in
jnp
mov
testl
je
cmp
je
popf
add
or
mov
mov
add
mov
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
sbb
dec
roll
sub
inc
adc
dec
shll
lock
enter
cld
lock
les
jecxz
push
push
pop
xor
neg
mov
sbb
push
sbb
mov
out
sarb
in
push
mov
jg
leave
add
add
push
and
xchg
aam
sarb
sub
xor
stos
dec
movsb
cmp
xor
pop
add
push
flds
push
push
aam
pop
mov
and
test
or
sahf
and
add
and
add
shlb
pop
pop
mov
push
loopne
jle
jno
add
inc
fnstenv
in
jne
mov
adc
pushf
leave
enter
push
sbb
mov
inc
pop
jns
in
insb
gs
test
jo
popa
xor
jecxz
mov
je
mov
jmp
lock
cmp
ret
jl
adc
sbb
mov
push
xor
fdivs
in
stos
or
ss
cwtl
fidivrs
inc
fsubrs
flds
mov
jne
sub
cmpb
fwait
sbb
roll
js
std
mov
lock
and
dec
push
lea
push
pop
cwtl
push
out
or
adc
adc
add
rcrb
lret
push
or
add
in
push
in
shrb
pushf
pop
fcoms
push
mov
shl
popa
outsb
cmp
add
int3
sub
add
mov
sub
vmaxsd
push
sbb
test
arpl
and
push
adc
or
sbb
or
sub
cmp
loopne
add
es
pusha
cs
insb
pop
sub
inc
dec
hlt
push
push
cmpb
cmpsb
fdivs
dec
loopne
inc
jbe
xor
ljmp
inc
repz
ret
jge
int3
mov
movsl
loopne
sbb
dec
pusha
add
pop
mov
ret
or
or
adc
or
je
fistpl
addb
sbb
pop
mov
sbb
push
ret
xchg
loopne
out
jmp
std
loop
int3
mov
aas
cmp
mov
push
fwait
pushf
cmp
rclb
sub
sbb
push
adc
xor
pusha
inc
cmp
jo
push
xchg
sbb
stos
push
lea
arpl
and
test
mov
dec
mov
mov
inc
xor
sub
jbe
sub
or
ja
adc
lock
sub
lock
cmpl
pop
mov
mov
push
dec
fsts
xor
jnp
pop
push
inc
mov
incb
sub
pop
idivb
push
in
xor
push
popa
pusha
pusha
mov
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
test
add
jl
ret
add
sbb
and
sbb
sbb
push
adc
adc
jmp
daa
aaa
dec
loopne
sbb
clc
pop
push
int3
call
cmc
outsb
leave
add
mov
scas
ret
xor
xor
sbb
icebp
vsubsd
and
dec
sbb
fisubrs
pop
fdivp
sub
fnstsw
xor
fisubl
and
xor
imul
shll
divl
cmp
pop
test
addr16
xchg
push
adc
ja
jl
addb
repnz
sub
or
inc
shrl
nop
push
aam
mov
test
add
sub
inc
sbb
push
push
call
jnp
sub
and
stc
shlb
fstpt
mov
push
aas
adc
fsubl
sub
adc
pop
mov
sbbb
inc
sub
rcr
ss
adc
cmp
test
arpl
test
int
rcrl
call
adc
jl
mov
jp
jo
or
cmp
adc
jnp
adc
out
mull
pop
loope
xchg
add
jp
push
add
mov
push
cs
or
push
and
pop
stos
std
adc
shll
add
push
xchg
push
push
adc
pop
cmp
sbb
cmp
push
imul
rolb
shlb
ss
loope
pop
dec
xor
call
or
push
mov
adc
dec
mov
add
push
sub
cmpsl
scas
lea
and
xor
aam
test
or
or
mov
loopne
push
jbe
pop
clc
xchg
xor
sub
pushf
adc
push
cltd
xchg
add
push
sbb
add
push
sbb
fldt
pop
add
sbb
xchg
push
nop
ss
sub
add
int3
and
push
divb
and
jnp
sub
inc
xor
push
xor
subb
adc
lock
jg
add
fwait
pop
js
lock
cmp
nop
lock
jbe
mov
dec
adc
or
leave
js
js
sub
push
push
mov
lcall
lds
roll
lret
std
js
ljmp
sar
or
jno
pop
dec
adc
pop
rol
xlat
or
and
in
push
inc
in
jmp
test
push
add
pusha
or
lods
stc
inc
mov
js
aas
addb
js
outsb
jmp
pushl
popa
and
mov
pop
add
dec
pop
mov
cmp
dec
push
inc
sub
dec
dec
lret
roll
and
lahf
or
dec
adc
into
push
pop
pop
test
push
mov
fbld
xor
mov
repnz
jle
inc
andl
adc
jb
mov
js
adc
lds
cltd
pop
addr16
add
outsb
inc
jae
mov
xor
jecxz
call
dec
xor
pop
jo
jle
xor
push
call
fcomi
xchg
inc
xor
sub
push
fcoml
fbstp
push
insb
mov
mov
or
xchg
cmp
pop
adc
or
fwait
cmp
sub
andl
inc
rcll
shlb
leave
adc
xor
je
push
mov
or
shl
push
loopne
xor
pop
jmp
mov
ljmp
mov
push
fdiv
bound
xor
inc
inc
addr16
inc
push
adc
cwtl
add
call
dec
pop
or
movsb
add
pop
pop
sub
xor
xor
movsl
push
inc
push
push
pop
lock
cmpsl
test
add
sbb
add
mov
and
cld
adc
cmp
add
cs
cmp
aaa
ret
add
pop
testb
push
mov
add
mov
andl
jecxz
and
dec
or
dec
jl
loope
xor
pop
pop
add
push
fistl
fdivrs
push
xor
push
orl
xchg
lahf
rolb
push
leave
pop
adc
xchg
test
mov
mov
cmpsl
sub
and
cwtl
jl
rolb
push
es
test
or
bnd
jge
fs
add
inc
push
sub
dec
add
popa
je
pop
leave
add
sub
rolb
xor
push
out
mov
es
iret
packsswb
or
xchg
sbb
mov
mov
pop
pop
xchg
cld
push
test
dec
jl
dec
mov
jmp
push
cmovle
sub
mov
pusha
xchg
mov
sub
popf
push
mov
mov
lret
jns
repz
xchg
fcomp
lcall
and
adc
mov
jle
fdivrs
inc
cld
adc
fmul
sub
popf
dec
fnsave
inc
pushf
jmp
sub
fiaddl
dec
fwait
mov
imul
push
push
inc
push
std
pop
mov
cmp
add
lea
sbb
lds
adc
mov
add
js
push
ret
sub
push
daa
jb
pop
adc
add
or
je
or
adc
cmp
jecxz
and
addr16
addl
repnz
and
inc
rcll
push
mov
xchg
dec
and
pusha
sbb
add
mov
mov
lea
vpmaxuq
jge
shrl
adc
outsb
jbe
js
sbb
xor
adc
add
aam
cmp
pop
mov
out
andl
call
xor
pop
sbb
mov
mov
pop
jns
jo
inc
or
sub
hlt
and
mov
jbe
inc
sub
lds
scas
sbb
sbb
inc
mov
je
xchg
jb
pop
push
or
jae
mov
mov
test
lock
jmp
orl
cwtl
jge
xor
andl
fchs
roll
nop
dec
mov
pop
fs
outsb
out
mov
xor
add
jp
push
mov
gs
add
mov
push
adc
sbb
sub
inc
cmp
jecxz
jae
adc
sbb
pop
arpl
or
jne
imul
push
loope
sub
loope
dec
shll
pop
loope
shlb
movsb
or
push
cmp
push
mov
or
pop
add
imul
and
push
xor
jecxz
aad
cmp
mov
mov
cli
jae
ja
ds
outsl
inc
cli
push
cld
sub
push
lahf
or
popa
fbld
jmp
and
shr
inc
add
xchg
cmp
rorb
or
es
cmp
jge
fiadds
pop
aad
jo
mov
insb
std
jg
or
add
mov
repz
rolb
add
stc
push
cmp
es
insl
out
in
pop
loop
xchg
or
movsl
mov
movsl
push
or
hlt
sbb
jne
push
mov
mov
push
js
popf
repnz
pop
adc
inc
lock
add
repnz
inc
jmp
jns
mov
push
out
jno
ror
dec
add
xor
lcall
push
cmp
adc
or
or
inc
mov
das
push
and
in
arpl
imul
dec
xorb
pop
sahf
pop
mov
andl
inc
imul
adc
add
or
test
jmp
xor
pop
mov
push
adc
mov
insb
insb
inc
sub
mov
mov
pop
sub
rcrb
add
pushl
fadds
cmp
jg
inc
xor
mov
mov
je
jbe
and
mov
adc
sahf
adc
jno
pop
lock
pop
adc
xor
in
cmp
add
je
push
push
jo
dec
int
push
and
pop
mov
mov
jecxz
inc
jmp
xchg
aaa
cmp
clc
add
sbb
jle
add
inc
xor
cmp
idivb
addr16
xor
lea
ret
jbe
daa
pop
push
mov
enter
push
xor
repz
mov
fisubrl
mov
ret
sbb
xor
sub
gs
adc
adc
hlt
sti
dec
sbb
or
dec
inc
loopne
pop
and
cmp
or
mov
push
popa
mov
inc
mov
pusha
pop
int3
cwtl
cmp
shll
mov
pop
cld
sub
sti
xor
cmp
call
jo
inc
adc
mov
jge
notb
push
mov
push
xor
dec
int3
add
cmp
jb
cmp
push
test
in
les
push
and
je
cmpsl
sbb
or
lcall
movsb
loopne
cmpsb
fistl
pop
js
arpl
adc
dec
dec
fcomps
mov
xor
jbe
dec
xchg
mov
xchg
jnp
call
dec
cmc
dec
push
xchg
xchg
ficoml
fs
in
dec
loope
xor
in
testl
sbb
dec
enter
es
hlt
call
dec
mov
test
dec
or
jp
sbb
faddl
imul
pop
or
pusha
mov
std
ret
loop
jle
add
and
mull
sub
push
inc
xorb
into
pusha
lock
jbe
push
pushf
add
mov
jl
test
sbb
fstl
outsb
arpl
xchg
lock
shl
test
pop
pop
div
jle
jle
xor
or
ret
add
and
ret
dec
xchg
out
ret
ror
adc
mov
or
insl
jne
pop
xchg
lock
xlat
scas
shll
jno
xchg
pop
ret
add
jae
test
shl
pop
cwtl
insb
and
movsb
cmp
insb
js
movl
pop
pop
push
push
jl
lock
or
dec
or
fcomps
mov
sub
mov
lea
adc
mov
cmp
addr16
push
imul
push
addb
push
jmp
andl
jb
xorl
lret
pop
roll
xchg
push
mov
and
sub
xchg
add
sbb
sti
mov
ret
adc
cmp
lock
add
push
mov
rclb
cmp
rcll
pop
bsf
popa
out
mov
and
mov
push
stos
sti
jle
and
lock
movb
dec
adc
and
push
or
pop
orb
xchg
rolb
sbb
stos
pushf
sbb
popa
imul
adcb
lea
add
rolb
push
push
or
sbb
mov
loope
mov
cld
push
mov
cmp
je
in
inc
enter
inc
shl
sub
cmpsl
adc
adc
aad
sar
adc
inc
jo
lods
leave
xor
push
xchg
jno
les
nop
push
dec
popf
or
addb
sbb
mov
aas
cmp
ja
je
or
je
or
sub
sub
xchg
scas
add
pop
cmp
push
jge
lahf
jle
dec
push
or
add
adc
jne
sahf
jb
ret
or
xor
outsb
cmp
adc
imul
xor
cmp
jo
rol
inc
shl
int3
ret
lret
ja
mov
aam
cld
jbe
into
lock
cmp
cmp
movsb
push
mov
lret
adc
test
inc
cs
push
mov
sub
lock
inc
mov
ds
sub
or
pusha
lahf
test
dec
pop
sbb
or
push
aaa
fsubr
adc
mov
stos
and
and
leave
inc
imul
imul
xchg
mov
or
lcall
mov
js
push
dec
imul
sbbl
out
push
dec
add
bound
outsb
fcmovnb
inc
scas
fidivrs
in
sarl
inc
inc
shll
or
push
adc
ret
adc
add
xorb
in
sbb
sub
ret
rol
or
xchg
movl
rolb
and
push
test
inc
test
mov
adcb
loopne
add
cmp
or
and
ret
out
push
push
rcll
inc
push
adc
inc
ja
pushf
addr16
and
push
fsubl
mov
add
xor
out
je
push
push
or
idiv
inc
das
mov
sbb
cld
push
xchg
shlb
out
call
in
push
pop
orl
add
int
pop
rcll
and
outsl
imul
daa
push
or
flds
xchg
dec
int
cs
adc
ret
test
add
dec
mov
dec
test
inc
pusha
lea
cld
and
test
js
pop
push
nop
daa
xor
pop
add
xchg
sub
sbb
dec
cs
in
in
mov
fdivrl
jp
lret
in
add
popa
jge
pop
xchg
rol
aad
inc
push
sbb
inc
jns
std
js
lods
into
xchg
sbb
out
push
cmpl
xor
pop
loop
pop
mov
mov
cmc
fcoms
movsb
sbb
movsb
push
or
outsl
test
inc
cmc
mov
xchg
cmp
es
mov
jno
dec
loope
push
in
push
mov
jno
sahf
sub
aas
mov
lods
dec
jno
push
adc
nop
xor
jo
fisttpll
adc
xchg
jne
inc
mov
sbb
add
or
mov
rorb
lods
or
sbb
pop
add
insb
divb
imul
cmp
adc
movsb
sub
push
cmp
push
adc
push
stos
fidivl
in
rcl
mov
jp
xor
pusha
jl
jl
call
pop
xor
adc
mov
mov
sub
sarl
jne
mov
popf
inc
push
xor
test
push
adc
testb
jge
in
dec
icebp
fcoml
out
sub
testb
and
dec
pop
inc
sub
mov
shll
pop
mov
ja
imul
push
jb
pop
pop
dec
ds
sub
cmp
and
adc
push
daa
dec
xor
fs
xor
jmp
clc
or
lods
xchg
scas
sbb
and
sub
mov
jno
das
sub
and
mov
je
popf
jp
and
sbbl
push
sub
add
dec
cmp
push
leave
push
jnp
pop
dec
add
mov
push
xchg
xchg
xchg
inc
inc
inc
ss
enter
jne
mov
mov
add
pop
ret
and
fstpt
push
pop
orl
pop
mov
xchg
adcb
int3
push
xchg
nop
jo
pop
pop
dec
shrl
lret
in
scas
push
lds
sbb
xchg
mov
inc
sub
push
inc
leave
je
rolb
push
fwait
lret
aam
fcomps
lahf
pop
inc
sets
jb
cwtl
ljmp
adc
sub
sahf
sub
int3
mov
imulb
repz
inc
xor
hlt
jo
scas
xor
aaa
divps
in
mov
sbb
dec
cmp
hlt
jl
xchg
xchg
test
mov
dec
mov
pop
or
popf
and
scas
sbb
cmp
sbb
fists
mov
push
call
jo
dec
out
aam
mov
sbb
jl
orl
pop
scas
or
pop
adc
or
push
and
or
mov
scas
ja
ret
sub
adc
and
out
pop
lock
pop
and
adc
pop
scas
mov
scas
push
stos
cmp
push
xchg
sbbl
push
add
and
add
mov
or
inc
nop
cmp
enter
push
test
mov
adc
cmp
or
jno
mov
fsubs
xor
dec
or
js
xchg
stos
or
sub
add
xchg
add
add
dec
movsl
or
outsl
test
pop
jne
xor
adc
movsb
pop
les
jbe
adc
pop
clc
jmp
and
xchg
sbb
repnz
imul
adc
sbb
adc
ret
cmp
je
adc
pop
push
add
lock
fldl
arpl
sti
sbb
outsl
sarb
sbb
mov
das
push
sbb
dec
orl
and
adc
scas
fwait
cwtl
mov
inc
xor
rolb
sbb
cmpsb
sbb
ljmp
sbbl
jne,pn
cmp
mov
push
add
popa
cmp
cmc
add
push
and
xchg
dec
fs
add
adc
or
xchg
pusha
popa
and
divb
adc
sbbb
lahf
pop
inc
clc
sahf
into
jle
cmp
jb
sub
pop
adc
inc
jbe
cmp
lcall
ss
adc
lock
test
pop
fsub
dec
mov
rcrb
mov
xor
sbb
adc
adc
das
xchg
lods
push
test
leave
jecxz
cmp
adc
dec
rcrl
add
mov
nop
sub
add
pop
arpl
cmp
lods
sti
cmpsl
jbe
cmp
std
xchg
xchg
jnp
mov
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdivr
jg
inc
mov
jnp
popf
xchg
arpl
icebp
pushf
pop
add
sbb
adc
into
test
jns
or
enter
and
pop
repnz
addb
cmpsb
push
or
fwait
es
cmp
je
notb
push
mov
and
push
sub
arpl
dec
ret
in
dec
or
dec
adc
add
fdivrp
and
movsl
mov
mov
xchg
pop
ljmp
adc
sbb
jmp
je
cmp
rol
sub
les
rcr
mov
std
mov
push
push
fsubs
cld
sarl
test
inc
bound
pop
and
inc
and
leave
call
pop
mov
adc
sbb
sub
push
cmp
cs
outsb
sti
xor
mov
aaa
dec
jbe
cmpb
adc
push
data16
clc
pop
push
test
mov
gs
ja
pop
xchg
cld
inc
adc
and
jo
outsb
mov
lods
mov
push
cld
add
dec
out
test
popf
std
and
jb
shl
jb
in
adc
stos
cltd
push
and
adc
dec
mov
gs
sbb
pop
es
adc
pop
mov
mov
xor
dec
or
je
push
sahf
out
mov
test
sbb
stc
cmpsl
pop
es
sbb
xchg
dec
and
sbbb
ljmp
and
lock
jmp
je
clc
add
sub
out
cmp
mov
xchg
lret
push
imul
in
mov
add
xor
and
cmp
sub
and
xor
cmp
inc
out
pop
and
jo
fadds
xchg
inc
xchg
cmp
add
xchg
out
inc
out
xchg
out
inc
jne
dec
push
enter
add
gs
add
lret
dec
imul
jmp
outsl
mov
dec
lret
add
int
push
lcall
sub
lea
and
jns
mov
push
pop
and
iret
mov
leave
pop
das
pop
iret
pop
or
les
icebp
cmp
icebp
movsl
das
dec
adc
pop
incl
or
dec
sub
jne
push
or
inc
inc
mov
add
pop
adc
pop
mov
js
or
sbb
into
mov
adc
and
mov
push
in
sbb
sub
jl
lcall
js
inc
enter
test
ljmp
movsl
movsl
push
sbb
lods
pusha
push
movsl
jb
inc
ret
add
xchg
or
push
iret
push
orb
jo
int3
outsb
mov
sbb
clc
scas
data16
sbb
cmp
push
dec
fdivrl
jg
imul
std
iret
icebp
xchg
dec
je
cltd
fdivl
inc
in
xor
mov
add
xchg
sub
cs
jmp
dec
pop
in
test
orl
add
sbb
push
out
call
cmp
adc
fwait
or
loopne
add
rol
xor
add
sbb
jb
mov
mov
incl
jne
cmc
add
cmp
mov
imul
xchg
push
sahf
std
lcall
loop
sbb
popf
add
sub
pop
sub
adc
or
jne
pop
out
int3
mov
or
lods
add
adc
test
xlat
aaa
add
or
loopne
and
scas
pop
mov
push
pop
in
int3
inc
dec
movsb
inc
add
add
or
shrb
mov
xchg
fimull
call
cmpsb
imul
cmovb
jno
add
cmc
mov
fst
xchg
and
iret
jae
pop
jmp
loopne
int3
mov
ja
add
mov
frstor
push
xchg
add
mov
arpl
lods
sub
sbb
cmp
add
mov
aaa
push
lahf
push
xchg
out
push
jl
lcall
dec
or
das
mov
add
push
mov
add
add
inc
sbb
add
cs
aaa
and
das
pop
add
lods
sbb
movb
outsb
mov
inc
or
jmp
push
inc
add
sbb
pusha
call
inc
xor
stos
pop
in
sbb
orl
mov
add
nop
jle
inc
ja
call
pop
xchg
js
dec
sub
push
and
jmp
or
xor
cmp
movsb
mov
aam
pop
lods
add
and
cmp
xor
mov
lods
test
repz
mov
les
les
outsb
dec
sub
lds
stos
and
jb
push
shrb
push
xor
inc
jecxz
outsb
inc
cmpsl
add
loope
scas
pop
clc
sub
jge
adc
jo
xor
cmpsl
xchg
adcl
inc
sbb
jne
das
test
mov
add
dec
in
cmp
call
outsb
orl
pop
sub
ja
lcall
inc
or
xor
mov
imul
imul
aas
lods
adc
sub
cwtl
push
push
xor
sub
repnz
xchg
idivl
movsb
mov
jge
push
xor
das
out
insl
rcll
repz
push
faddl
xchg
in
mov
mov
cli
add
shll
push
leave
push
xor
sbb
push
in
xchg
add
and
mov
popa
adc
rcr
insl
lods
jno
jno
sbb
or
and
nop
add
lds
fs
sbb
dec
pop
repnz
pop
xchg
mov
push
sbb
push
or
pop
xchg
push
imul
stc
mov
jne
dec
stc
add
test
fcomp
cmp
mov
push
sub
inc
lcall
push
lea
add
mov
cmp
push
js
insb
mov
lock
pop
pop
jmp
rclb
pop
xchg
xor
mov
test
xchg
insl
cmp
push
or
add
or
inc
shr
xchg
fldenv
std
xchg
pusha
repnz
push
adc
adc
and
roll
cmp
andb
and
lock
or
pop
jno
cs
cmpsb
inc
ficoms
enter
das
push
pop
inc
xchg
cmpb
int3
mov
pop
xor
and
inc
fildl
inc
xor
add
adc
adc
pop
add
aas
js
jne
andl
ljmp
pop
fisttpll
scas
les
jnp
sar
jp
movl
jnp
cld
je
mov
jecxz
clc
fnsave
mov
aaa
loopne
sbb
and
pop
xor
mov
cmpl
cmp
push
lods
mov
or
xchg
jl
dec
adc
fsubrl
xchg
popa
mov
sub
push
inc
cwtl
shlb
nop
rclb
aam
iret
pop
insb
insb
jno
sbb
es
add
int3
ss
sbbl
xchg
add
jns
jo
sub
sub
add
cmp
enter
lea
push
lcall
mov
rclb
xchg
pop
les
xorl
imul
cmp
inc
push
xor
mov
or
cmp
and
adc
sub
nop
or
pusha
or
jp
lret
lret
adc
and
inc
or
sarb
cs
sbb
fstps
lds
stos
imul
sbb
rolb
push
lock
jae
pop
int
or
or
sub
je
rorb
dec
add
das
xlat
cli
adc
imul
adc
and
adc
mov
test
fcoml
sbb
subl
fs
mov
mov
xchg
insb
pop
xor
add
inc
sub
mov
jo
iret
push
fsubl
add
push
pop
add
or
dec
dec
push
insb
sub
mov
xchg
mov
popa
push
mov
adc
adc
sbb
addl
mov
movsl
loopne
dec
lods
mov
and
movsl
and
push
sarb
cltd
sbb
test
sbb
or
add
push
jge
jp
js
or
sbb
dec
loope
arpl
xorl
aam
and
jb
xchg
call
hlt
into
adc
filds
imul
xor
sbb
je
inc
jmp
je
inc
pop
inc
data16
xchg
xor
lods
push
jne
or
and
mov
mov
and
pop
cmpsb
sbb
rcll
dec
jl
add
and
loop
or
ljmp
daa
sub
test
mov
pop
add
mov
lcall
cmpsl
lods
shl
fidivrl
clc
rcl
subl
std
ljmp
cld
mov
outsl
push
fsubr
data16
sub
pop
rcrl
stos
mov
pop
add
fdivl
scas
das
inc
and
lea
aam
adc
push
add
lahf
add
pop
inc
inc
cmp
jb
adc
movsl
mov
pop
push
pop
leave
and
test
jo
dec
push
cwtl
dec
cli
rcrb
add
or
leave
nop
sbb
cmp
js
jne
lock
pop
dec
add
popa
loopne
fmull
sar
dec
inc
in
xor
mov
fwait
pop
gs
movsl
push
add
inc
push
inc
inc
cmp
jbe
jl
test
xchg
mov
cmp
jecxz
push
mov
sub
mov
and
aam
pop
cltd
pop
mov
dec
inc
add
or
push
shrl
jle
dec
add
jmp
xchg
mov
cmp
imul
int
sbb
out
lock
es
xor
das
xor
push
lock
rorb
addr16
mov
push
inc
jae
jns
add
scas
aas
je
or
scas
jns
cmpsl
sub
xor
lock
cmp
inc
out
sahf
out
inc
push
mov
dec
fdivl
dec
ljmp
or
push
rcl
jg
add
or
inc
add
push
movsb
add
iret
jae
imulb
incl
add
and
movsl
test
dec
bound
adc
add
or
or
push
sub
pusha
jl
push
push
or
xchg
inc
xor
jecxz
ret
pushf
push
mov
stc
jo
xchg
mov
push
cmp
xchg
pop
mov
inc
cwtl
sub
sarl
push
pop
lcall
iret
inc
adc
mov
mov
mov
fs
and
jg
imul
sbb
push
or
repnz
cmp
ds
jge
or
aaa
and
sti
cmpl
mov
pop
or
push
and
xlat
xchg
sbb
jmp
xchg
cmc
and
cmp
push
mov
push
mov
xchg
mov
popa
and
lods
inc
pusha
jbe
dec
and
mov
dec
sub
sahf
or
jecxz
push
inc
xchg
test
je
pop
cmp
sub
mov
pop
das
adc
cmp
or
cmp
clc
orl
movsl
rolb
outsb
sahf
mov
pop
or
sbb
jmp
testl
decl
shlb
add
scas
enter
sbb
lcall
mov
or
adc
pop
push
mov
lea
push
push
cld
into
insb
lds
push
and
push
mov
pop
cli
or
pop
loopne
adc
or
je
pusha
dec
les
sub
and
pop
mov
rcrl
popa
and
xchg
mov
cmpb
adc
movsl
mov
push
popa
lea
xor
sti
and
sub
inc
mov
into
and
fs
repnz
js
dec
rolb
push
pop
push
iret
test
fildll
mov
xor
int3
jae
add
lret
xchg
sbb
mov
push
push
push
sub
inc
cmpsl
adc
adc
out
xchg
xor
sbb
negb
lcall
hlt
lock
xchg
cltd
test
dec
mov
push
or
sbb
dec
push
push
shrl
jbe
loope
sbb
cs
adc
ljmp
xor
rclb
mov
in
scas
lods
inc
pop
call
adc
mov
push
pop
arpl
pop
pop
dec
pusha
cmp
ret
sahf
clc
pop
cmp
inc
addr16
add
rol
dec
sbb
sbb
mov
inc
inc
and
sarb
dec
jne
lcall
mov
jge
add
scas
pop
sbb
jmp
loope
sbb
xchg
leave
les
unpcklps
mov
and
adc
cmpl
sub
in
jnp
inc
cmp
mov
ret
xchg
orl
sbb
add
inc
mov
and
clc
adc
out
adc
test
add
push
inc
sub
enter
or
pop
into
inc
and
icebp
push
xchg
testb
mov
subl
mov
add
mov
and
inc
insl
push
push
xchg
mov
sbb
sbb
mov
loope
add
xor
dec
adc
sahf
add
jae
inc
cmp
orb
test
mov
dec
mov
pop
mov
icebp
hlt
sub
sar
pusha
mov
or
add
rcrb
mov
sub
and
dec
jg
mov
and
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
cmp
mov
adc
mov
out
dec
call
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
sub
adc
xor
and
shr
loop
jo
sbb
cmp
jecxz
xchg
adc
lret
aas
sbb
lods
jge
notb
outsb
int3
aam
je
push
lods
sub
or
lcall
fwait
dec
jl
jno
inc
andl
push
mov
inc
or
add
jge
jbe
dec
cmp
sub
in
dec
jl
and
add
fwait
adc
add
in
inc
pop
hlt
pop
int3
xchg
lds
sbb
inc
or
insl
jge
adc
mov
adc
fiadds
inc
jmp
dec
ss
sbb
dec
add
jne
sub
inc
loopne
fsubrs
incb
mov
jp
cmp
fnstcw
jae
jb
jae
ror
xlat
inc
inc
addl
jmp
dec
rolb
sahf
hlt
jae
mov
cmp
push
dec
push
pop
push
ret
faddl
push
add
xchg
inc
bound
or
pop
inc
inc
push
dec
test
inc
cli
sub
loop
adc
pop
inc
add
adc
cmp
add
adc
pop
dec
mov
dec
or
add
mov
js
jle
xor
xchg
adcb
sub
imul
jno
daa
in
jb
jo
jg
orb
xor
lods
push
xor
push
hlt
lret
insl
cli
paddsw
aad
lret
jecxz
jne
fdivs
inc
add
xchg
pop
pop
out
jmp
push
sbb
jo
out
call
ret
rorl
mov
and
jbe
repnz
mov
cmp
imul
pop
cmp
or
ret
pop
adcb
ds
lock
subl
ret
jne,pn
adc
dec
mov
cmp
xchg
popf
dec
jbe
cmp
and
in
arpl
adc
mov
dec
push
sub
xchg
adc
sbb
adc
arpl
dec
in
nop
inc
or
sub
sbb
mov
cmp
cmp
inc
ret
sub
rcll
cmp
and
add
add
adc
xor
pop
pop
pop
xor
movsb
inc
das
jne
cmp
push
les
sub
neg
lret
je
and
call
popf
mov
cli
xchg
sub
adc
nop
cmpsb
adc
sbbl
loope
and
inc
xchg
icebp
mov
pop
dec
movsl
or
push
xchg
es
add
and
roll
lods
aas
and
dec
cmpsb
in
lock
cltd
fiaddl
and
cltd
xchg
add
xchg
add
cltd
xchg
add
cltd
xchg
add
xchg
int3
sub
filds
or
das
xchg
sub
ds
cmp
xor
test
xor
gs
sub
xchg
mov
xor
or
xor
mov
jne
cmp
dec
sbb
jmp
cmp
cld
or
insb
cmp
in
pusha
adc
rcll
add
ss
out
movsl
adc
dec
es
or
pop
sbb
sbb
cwtl
incb
test
test
add
mov
rclb
xor
xor
fmull
jne
inc
xchg
cmp
cmp
jnp
mov
sbb
daa
or
or
ds
inc
inc
sub
fldl
bound
add
daa
arpl
mov
pop
mov
outsb
jno
movsl
inc
mov
or
mov
cli
imul
sahf
cmpsl
jns
je
int3
loopne
in
aam
xor
hlt
stos
sbb
mov
adc
int3
test
cmp
loopne
mov
fs
pop
cs
mov
push
jle
inc
addl
dec
inc
pusha
stos
mov
and
mov
or
xor
loope
cmp
shlb
stos
jno
adc
lock
cltd
dec
push
mov
pop
mov
and
add
add
pop
add
sub
jne
pop
lock
adcb
push
mov
lock
jecxz
inc
outsl
sub
pop
or
jo
or
adc
mov
cmpsl
and
and
cmpsl
xor
jecxz
pop
dec
adc
fcom
aaa
push
repz
outsb
stos
lock
pop
push
js
cld
inc
arpl
mov
arpl
jno
popa
push
adc
shrb
or
push
fisubs
inc
js
push
cmc
mov
fdivr
sub
or
aas
or
add
and
mov
adc
add
jbe
out
mov
je
push
jne
adc
jmp
cmp
popf
in
pop
sbb
mov
jmp
sbb
fnsave
pop
mov
xor
pushf
jmp
lds
push
cltd
std
popf
cmp
jmp
pop
or
jmp
mov
aam
mov
les
add
test
test
or
mov
mov
or
xor
mov
xchg
fwait
jge
pop
mov
pop
pop
sub
test
push
xorb
xlat
and
jns
sti
bound
pop
inc
shll
jle
hlt
je
push
in
ret
xchg
inc
stos
add
mov
or
int3
insb
xchg
test
insb
mov
pop
rorb
dec
cmp
or
ds
js
rclb
das
and
into
dec
xor
add
cs
repz
int
inc
nop
mov
jl
orl
push
ficomps
or
mov
push
pop
mov
lock
adc
stos
popf
cmp
icebp
in
lea
inc
mov
adc
push
mov
pushf
or
popf
or
call
adc
pop
mov
xor
imul
xchg
mov
movsl
hlt
test
push
lret
shl
pusha
mov
pop
jnp
out
es
loope
inc
jns
mov
imul
xor
sub
add
fdivr
aam
add
stos
rclb
fcomp
fwait
cmc
addl
xor
icebp
aad
bound
out
xlat
mov
push
sub
cmpsl
and
jge
sbb
test
push
push
pushf
cwtl
or
into
cmp
cli
jb
or
push
fcomps
sub
clc
jl
mov
adc
adc
clc
mov
jbe
jmp
lahf
and
pop
pop
subb
fnstsw
mov
pop
mov
push
sbb
add
add
pop
loopne
scas
cmc
xchg
cmc
jge
push
outsb
mov
int3
xor
jo
add
mov
mov
ret
jg
add
adc
inc
dec
adc
or
js
test
movb
rcr
pushaw
testl
push
xchg
sub
sub
and
loop
adc
in
xor
lea
loop
or
cwtl
jge
or
andl
stos
mov
add
imul
lods
arpl
dec
push
loopne
mov
repnz
pop
sub
pop
pusha
jb
jl
pusha
inc
fldl
jl
adc
inc
popa
push
or
or
shrb
rol
sbb
lds
cs
das
clc
nop
mov
mov
popa
and
or
lcall
ljmp
push
cmpsl
and
stc
push
mov
inc
push
decl
ret
jns
inc
int
pop
sbb
sbb
xchg
pop
cmp
dec
sub
inc
pop
inc
outsl
lock
mov
nop
loopne
jmp
sub
mov
xchg
xor
mov
xchg
daa
movsb
shl
rcll
leave
imul
pop
push
outsl
mov
xchg
xor
nop
mov
stos
ss
ss
lcall
shlb
imul
push
insl
push
push
lea
mov
push
test
sbb
sbb
lea
mov
roll
into
and
mov
mov
add
sub
fwait
or
pop
fwait
mov
add
shlb
enter
mulb
fsubrl
and
test
mov
or
out
or
loopne
lea
jno
loope
sub
negl
xchg
dec
or
or
arpl
inc
loope
data16
out
loope
push
sub
rol
les
mov
lret
push
or
mov
sti
movsl
in
push
xchg
and
adc
ret
orb
popf
inc
popf
pop
mov
sub
pushf
cmp
bound
outsl
loopne
sbb
adc
push
add
sbb
sarl
fdivl
pusha
pop
mov
subb
lahf
push
das
cld
and
xchg
in
xchg
cmp
adc
adc
add
xchg
jmp
push
add
arpl
cmp
add
sahf
jp
daa
stos
mov
sbb
or
push
adc
sbb
enter
pop
adc
or
out
or
mov
jecxz
lahf
and
push
xor
inc
int3
dec
aam
or
xchg
adcl
imul
sbb
jmp
mov
pop
rorb
add
ss
sbb
adc
mov
shlb
bound
icebp
int3
scas
scas
sub
jp
mov
mov
push
or
enter
or
inc
mov
popa
adc
cmp
lods
sub
cli
mov
test
sbb
sub
or
rclb
mov
sbb
imul
ljmp
xchg
or
pop
ss
clc
rclb
push
sub
jp
push
and
inc
add
mov
out
dec
lret
cmpsl
mov
push
xor
mov
add
add
add
sub
push
cld
rcrl
fs
jle
dec
sbb
xlat
push
jnp
inc
es
mov
push
dec
test
add
inc
cwtl
cwtl
pusha
addl
test
bound
add
and
ret
mov
sbb
notb
rcl
mov
jne
orl
xor
xchg
mov
shl
ja
mov
push
push
sub
mov
and
data16
ret
fs
imul
xchg
fadds
sbb
xchg
lea
cmp
inc
xchg
lret
sub
adc
dec
outsl
shlb
lret
or
call
ret
insl
loop
mov
in
sub
inc
les
add
jmp
and
ljmp
lcall
call
cmp
xor
xchg
enter
push
addl
or
mov
faddp
xor
cld
mov
shr
or
mov
add
push
mov
push
mov
imul
pop
mov
pop
push
das
cld
loop
mov
push
mov
dec
je
adc
testb
imul
xchg
lock
faddl
sub
pop
mov
nop
xchg
cwtl
andl
dec
loop
cld
mov
push
pop
push
sub
lret
lea
int
jo
lea
jo
outsl
add
xlat
jns
lea
push
mov
mov
jne
or
mov
and
dec
and
movsb
rclb
pop
out
std
mov
dec
push
jnp
ret
cmp
rcrb
jmp
mov
inc
nop
push
icebp
fidivl
and
ds
lea
or
pop
rolb
pop
jge
mov
jne
push
js
or
pop
loopne
mov
pop
or
jp
dec
mov
mov
mov
lods
xchg
sub
ljmp
call
xchg
fst
jg
sbb
mov
cwtl
jp
jge
mov
dec
add
add
sub
cmp
mov
flds
xor
cmp
and
mov
or
pusha
mov
and
jne
std
fnstsw
mov
or
shl
lcall
ret
pushf
or
inc
aad
add
push
lahf
sub
xor
adc
insl
lock
test
xor
sub
pop
imul
or
mov
mov
adc
movsb
pop
adc
fdivrl
stos
adc
pushl
mov
cmpsb
lret
dec
mov
outsb
adc
cmpsb
outsl
adc
push
push
repz
add
mov
mov
sti
loopne
je
rcrl
mov
mov
ret
push
movsl
dec
lock
and
dec
mov
in
and
push
mov
jno
fcomi
subl
loop
insb
xlat
sub
fisttps
lods
pusha
sbb
xlat
add
add
cmp
movsb
mov
cmp
ret
out
pushf
mov
ss
mov
mov
sbb
inc
add
mov
movsb
rolb
xchg
out
ljmp
dec
xchg
mov
xchg
rorb
lahf
push
mov
or
xor
mov
dec
cli
test
addr16
or
add
aaa
hlt
lea
pop
call
incl
in
lret
fidivs
lods
pop
inc
inc
inc
inc
push
cmpsl
xchg
dec
les
cwtl
xchg
dec
cmp
lret
loope
cmpl
enter
enter
inc
lock
fldenv
cmpsb
cltd
push
or
idivb
or
or
in
repz
or
or
xchg
push
add
fsubr
and
rclb
pop
jecxz
enter
mov
sahf
jnp
add
pop
repnz
push
dec
mov
inc
lahf
or
xchg
sub
in
inc
rorb
inc
push
add
test
mov
adc
mov
jle
sahf
mov
inc
sbb
icebp
add
es
lods
icebp
test
sbb
jae
sbb
add
push
loopne
mov
inc
scas
sbb
add
js
enter
xchg
adc
loop
mov
test
decb
pop
push
test
aam
inc
loope
pop
xchg
pop
jl
or
repnz
outsb
lock
cmp
xchg
and
xor
pop
mov
sbb
jo
add
mov
sti
or
dec
dec
cltd
xor
xor
leave
pop
in
sarl
fs
hlt
lret
add
ss
mov
and
popa
or
mov
push
cmpsl
daa
add
dec
pop
cmp
pusha
mov
test
les
fs
fisttpll
je
imul
cli
add
jmp
sbb
mov
inc
mov
mov
fdivrs
jg
outsb
adc
ret
out
mov
jbe
or
inc
sub
jge
iret
sbb
jle
xchg
lock
rclb
jp
add
out
push
outsb
and
pop
bound
jne
jge
mov
fildl
lock
divb
inc
inc
jmp
or
jge
cmpsb
xchg
dec
imul
push
sbb
sbb
mov
fs
inc
jmp
inc
jo
scas
mov
add
addr16
and
jne
je
bound
bound
add
add
and
and
sbb
out
rolb
push
out
mov
push
add
or
iret
daa
js
lret
jmp
pop
cmpsb
mov
or
dec
ret
mov
adc
jnp
movl
sub
loopne
adc
sbb
cmp
sbb
dec
lcall
hlt
loope
cmp
push
jbe
push
add
sbb
pop
adc
push
mov
es
mov
mov
jmp
in
in
shlb
sub
push
cli
fdivl
dec
lret
cmc
jl
loop
aam
xchg
pop
mov
sub
inc
rorb
jne
jae
ljmp
xor
xor
xchg
push
imul
shrb
add
or
add
xor
adc
jp
jnp
in
js
fcomp
sbb
jecxz
xchg
mov
in
add
and
add
sbb
les
fwait
mov
and
adc
adc
jae
or
loop
cmp
popa
push
pop
adc
adc
mov
jmp
dec
imul
ror
mov
test
mul
push
xchg
into
pusha
insb
add
loop
sarb
das
xchg
push
jae
std
xorb
push
push
loope
xlat
xchg
fcoms
adc
xchg
fcmovne
scas
add
or
dec
push
cwtl
sub
xlat
subb
pop
imul
add
fstpt
push
and
pop
outsl
cmp
fstpt
fs
imul
fldenv
movnti
js
rolb
push
test
cmp
jmp
lods
mov
mov
mov
push
inc
xchg
inc
loopne
out
int
lock
out
push
adc
or
mov
xchg
fwait
mov
test
ss
nop
enter
cs
jns
mov
cmpsb
or
cmpsl
fcmovnbe
or
cmp
test
movsb
rcll
mov
insb
and
dec
nop
dec
das
or
cmc
adc
mov
adc
jle
cmp
or
and
ds
add
mov
lods
inc
dec
mov
daa
dec
push
out
int3
std
mov
xor
test
inc
gs
pop
cmp
sbb
mov
shrb
mov
test
aas
and
popf
sub
mov
testl
or
xlat
fiadds
jmp
mov
xor
shll
lret
pusha
lret
inc
jecxz
push
xor
jp
add
sub
push
xlat
and
lds
inc
push
xchg
dec
arpl
push
sub
movb
add
dec
mov
out
test
cmp
ret
and
mov
pop
sbb
test
mov
xorl
sbb
mov
push
dec
xor
cmpsb
mov
xchg
add
divb
rolb
loop
xchg
xor
shr
xchg
push
push
filds
adc
mov
test
test
lods
test
mov
pop
cmp
call
add
aaa
and
xchg
cmc
jmp
add
dec
mov
mov
and
dec
loopne
xor
insb
lock
inc
movsb
adc
mov
inc
cmp
outsl
inc
or
push
push
sub
xchg
loopne
pop
mov
nop
les
in
ljmp
movsl
mov
mov
jle
mov
mov
add
and
mov
imul
lea
fists
or
xchg
sub
xor
cmpsl
mov
mov
idivl
dec
lea
add
es
cmp
faddl
cmc
and
push
push
add
cli
and
loope
pop
sub
jp
test
fisubs
imul
xchg
mov
jo
jb
testl
jns
xor
out
lods
mov
enter
cwtl
arpl
add
orl
adc
cmp
add
cmc
jg
je
stos
xchg
add
pop
inc
in
jmp
mov
andb
into
add
xchg
lds
cmp
xchg
aas
cmpb
add
shld
or
xor
jge
inc
je
mov
aas
cltd
inc
pop
dec
inc
cld
jge
xlat
jne
jb
or
out
andb
cmp
dec
xchg
movsb
inc
mov
adc
sbb
jnp
roll
jbe
pusha
les
dec
push
int3
cli
faddl
mov
adc
add
sbb
cmp
arpl
or
shr
dec
repz
popa
repz
rcrb
jne
jne
mov
nop
ds
jle
adc
push
push
data16
add
fnsave
add
adcb
repz
push
adc
insl
add
jnp
les
xorb
xor
jle
or
xorl
stos
addr16
cmpb
pushf
out
dec
sbb
push
std
ljmp
cmp
pop
ss
dec
xor
dec
push
push
mov
push
jp
incb
cmp
js
inc
push
fs
femms
pushf
test
mov
xchg
loope
popa
sub
nop
outsb
dec
lds
adc
jmp
mov
rol
push
stos
sub
imul
ret
jns
inc
sub
push
mov
cwtl
xor
jno
mov
pop
cmp
adc
push
mov
push
xor
inc
in
inc
or
leave
xor
les
cmp
jb
imul
shlb
enter
mov
lret
enter
mov
cmpsb
repnz
jg
sti
adc
lods
bound
fcom
test
mov
aam
mov
cmovo
hlt
clc
jo
pop
and
icebp
roll
in
add
xor
shlb
cs
or
inc
dec
xchg
scas
lds
mov
dec
inc
js
sbb
jo
and
xor
pusha
mov
es
push
test
rep
add
divl
inc
cmp
sub
cwtl
es
xchg
cmc
adc
adc
sub
filds
push
shll
test
adc
jno
je
push
dec
outsl
xor
inc
lock
loopne
jp
sbb
mov
or
mov
ret
pop
insb
inc
sub
push
loope
out
jmp
dec
add
or
adc
adc
add
fcoms
ja
add
dec
lock
outsl
push
push
into
idivb
jp
sub
push
or
sbb
jge
pop
pop
add
jbe
mov
push
sti
push
add
xor
pusha
dec
imul
inc
test
jne,pn
inc
mov
push
insb
or
jb
movsb
fisttpl
add
aam
jmp
sub
dec
xchg
sub
popa
hlt
push
xor
xchg
mov
imul
test
mov
enter
stc
mov
lock
and
push
cltd
aam
add
nop
lods
int
cmp
sub
movsb
mov
cmp
mov
mov
xlat
rclb
xor
dec
repz
dec
fdivrl
adc
imul
cmp
orl
mov
loope
sub
add
push
adc
mov
mov
sub
add
inc
std
or
pushl
adcb
rcll
lods
mov
dec
shrb
mov
or
mov
sbb
adc
orl
push
or
add
xchg
jl
cmp
nop
xchg
dec
mov
cwtl
xchg
or
and
mov
mov
cli
test
cs
add
add
sbb
mov
inc
dec
pop
call
adc
js
lods
adc
aam
push
aad
push
lods
push
lds
lahf
and
lea
mov
je
sbb
dec
std
dec
dec
pushl
push
mov
repz
lock
jp
sbbl
test
xor
dec
clc
divb
aad
sub
loopne
inc
lret
lret
sarl
bound
mov
test
and
add
add
add
sbb
out
les
xorb
addb
mov
mov
mov
cmp
inc
sub
sub
add
into
mov
dec
inc
out
mov
cmp
mov
movsl
cmp
loopne
mov
push
push
adc
aaa
mov
sbb
and
mov
sub
jl
pop
or
add
mov
in
push
fnsetpm(287
push
sbb
mov
out
clc
lock
dec
loopne
jge
push
jl
nop
adc
sbb
xchg
sub
or
test
imul
addl
mov
push
pop
and
mov
mov
jmp
test
cmp
cli
lods
xor
mov
pop
adc
fnstenv
les
push
adc
lock
rcrb
mov
das
lods
and
jb
lods
xor
pop
arpl
pop
jb
adc
rol
lds
dec
xchg
in
sbb
push
loop
sub
cmpb
loop
xor
mov
sahf
cmc
mov
jge
call
imul
adc
push
xchg
adcb
rorl
ret
dec
aad
and
push
and
or
gs
inc
jecxz
and
sub
and
mov
jmp
pop
orl
mov
jge
js
push
scas
or
ffreep
sub
mov
and
sub
fs
add
push
pop
daa
sub
sbbl
or
jl
jae
rclb
jne
pop
imul
sar
mov
mov
push
cs
pop
inc
cmp
test
push
add
test
test
rolb
push
testl
add
pop
jno
inc
adc
aaa
xchg
and
sbb
push
aad
push
int
dec
or
inc
sbb
repz
pop
adc
adc
or
mov
inc
int3
nop
sbb
ljmp
mov
jmp
mov
out
insl
jge
jmp
rcll
mov
mov
aad
lock
movsb
push
into
push
leave
gs
add
andl
movsl
sarb
out
faddl
fstl
mov
loopne
mov
sbb
clc
pop
fsubr
pop
faddp
andl
mov
arpl
sub
xchg
outsl
dec
or
push
test
das
adc
add
faddl
lods
add
add
and
data16
arpl
sub
orb
or
shll
jge
aas
or
enter
jle
and
add
outsb
push
mull
xor
nop
inc
add
out
inc
or
sub
sub
test
rolb
pop
jmp
lock
push
dec
loope
dec
inc
pop
sbb
js
mov
arpl
inc
out
or
call
jne
mov
dec
mov
aas
sbb
push
dec
sbb
call
push
test
pusha
leave
sub
fistps
nop
rclb
jne
pop
in
sub
mov
add
sbb
add
cltd
cmp
dec
mov
cmp
jge
leave
jp
gs
ret
mov
and
movsb
dec
xor
push
insl
dec
or
mov
jmp
mov
frstor
mov
adc
popf
sub
and
mov
fcoms
test
loop
ret
add
cmp
push
adc
add
mov
int
ss
cmp
fldl
mov
shrl
into
inc
add
xchg
pop
nop
test
dec
jns
mov
lds
adc
adc
and
nop
mov
fwait
mov
pop
sub
add
jbe
pop
fs
xorl
push
mov
fcomps
adc
fwait
les
cli
sub
xor
ja
fdivs
aad
lcall
hlt
or
and
adcl
or
jne
fwait
mov
jecxz
adc
jae
mov
es
xchg
mov
dec
adc
mov
add
daa
cs
andl
push
daa
jecxz
inc
mov
and
mov
sub
add
jle
pop
xchg
lods
outsl
adc
push
add
mov
pop
loope
lods
fcmovnu
in
out
call
fstpl
test
push
es
and
add
and
or
ret
jp
test
pop
push
cmc
out
push
dec
push
add
pop
stos
xor
and
xor
fcoms
cld
add
mov
push
pushf
push
push
mov
sub
dec
lods
inc
inc
cwtl
xor
cmpb
add
in
push
inc
insb
add
nop
enter
add
adc
adc
pop
subl
cmp
or
ljmp
arpl
pop
mov
insl
and
adc
in
push
mov
addb
sub
push
inc
jno
daa
and
adc
arpl
movsl
test
pop
pop
push
add
lea
dec
sub
and
xor
inc
jb
inc
sub
inc
scas
push
lret
sub
mov
lea
add
or
ror
shl
pop
cmp
fisubrl
pop
and
lock
ret
clc
mov
loop
bound
repz
gs
shr
push
hlt
dec
dec
bound
aas
lock
rcrb
sub
ret
dec
fwait
stos
and
stos
fmul
push
sbb
jp
stos
push
pop
jmp
jne
mov
out
jae
aam
enter
adc
xor
cmp
stc
shrb
pop
outsl
sbb
insl
xor
sbb
mov
test
ja
push
sbb
sub
rorb
mov
cmp
fmul
jl
mov
sbb
adcl
pop
xchg
push
scas
jne
hlt
inc
inc
mov
mov
jp
mov
sbb
lods
jmp
jg
scas
cmp
sbb
add
add
add
or
mov
jge
xor
les
das
push
jns
ret
stos
mov
stos
outsl
xchg
lock
mov
pop
popf
das
leave
ret
test
pushf
jmp
jecxz
lods
std
dec
ret
adc
sbb
mov
inc
sub
lret
pop
adc
call
xchg
cli
jecxz
orb
inc
lahf
aam
lods
in
xor
push
jo
dec
pop
dec
andb
cmpsl
scas
cmpsl
pop
adc
arpl
inc
enter
addr16
fisubrl
ds
sub
pop
or
mov
adc
inc
or
js
push
fistpll
jl
mov
pop
lods
xor
dec
cmp
dec
fsubrs
xchg
xor
mov
add
fbld
je
mov
lock
movb
outsb
cwtl
mov
and
mov
inc
sti
push
add
jmp
cmpl
pop
mov
xor
inc
add
shlb
mov
enter
pop
mov
call
test
arpl
push
xchg
lods
mov
pushf
jnp
inc
pop
cltd
pop
xlat
jmp
xor
mov
inc
xor
add
inc
pop
sub
bnd
sbb
cmpl
mov
adc
jo
mov
and
inc
or
inc
inc
push
cmp
ljmp
cmp
call
xchg
test
in
cmp
or
iret
sub
daa
shlb
mov
mov
sbb
inc
mov
ds
test
lea
add
test
push
push
dec
mov
hlt
ret
xchg
cmp
mov
subl
ret
inc
cmp
push
in
xchg
inc
push
sbb
aas
test
adcb
cmp
or
lock
orb
clc
sub
xchg
xlat
jmp
add
ret
push
jge
int
add
and
jnp
push
mov
inc
sbb
xchg
js
adcl
rclb
mov
call
xchg
adc
push
mov
aad
lock
jle
into
dec
cmp
mov
movsl
xor
rcl
in
xchg
add
imul
add
les
test
push
lock
xor
add
mov
cwtl
push
in
dec
add
in
adc
ret
push
sbb
jbe
push
or
rcll
add
pushl
pop
icebp
jne
lcall
inc
or
sbb
push
and
jo
sti
nop
dec
enter
adc
repnz
cwtl
rcr
cwtl
xor
pop
push
add
std
sbb
inc
add
jbe
enter
push
stos
lock
push
je
add
pop
cmp
adc
pop
clc
jl
or
inc
sbb
sbb
cmp
dec
xor
sbb
loopne
lock
ret
push
in
dec
leave
loopne
inc
add
dec
gs
fwait
sbb
repnz
cmp
add
push
xchg
add
or
or
testl
sti
sbb
shl
lahf
jo
dec
cmpsb
ss
lcall
movsl
mov
aaa
sarb
lods
xchg
inc
lahf
or
add
or
stos
sbb
inc
pop
stc
cmp
sbb
test
pop
push
cmp
push
push
sub
push
cmc
bound
jbe
loopne
dec
dec
fidivs
xchg
push
adc
or
sub
push
jne
dec
ret
leave
or
jp
testl
cmp
setg
and
ret
and
mov
or
sbb
push
add
push
hlt
jge
loopne
rolb
sarl
and
rcl
sti
popa
pop
lods
or
jo
push
stc
pop
or
push
push
or
fs
sbb
movsb
in
and
mov
mov
mov
faddl
or
dec
repz
loopne
popf
pop
jb
jle
add
add
dec
sbb
pop
adc
mov
mov
enter
push
add
sti
add
rol
add
sub
xchg
enter
sbb
cmpsb
push
push
mov
je
rcrl
rol
arpl
cmp
shrl
jb
enter
add
lods
daa
sbb
mov
outsb
das
lret
clc
imul
adc
inc
and
stos
mov
cmpsb
cwtl
and
pop
mov
or
es
ljmp
mov
ret
pop
lahf
movsb
lret
mov
pop
loopne
dec
je
pop
dec
gs
fisubrl
adc
les
or
negb
leave
mov
add
cs
or
sti
push
push
xor
and
movb
lahf
push
jg
enter
lds
fwait
mov
push
addb
adc
push
cwtl
cmp
gs
add
pop
mov
pop
dec
xor
in
sti
cmpsl
imul
dec
pushf
stos
push
mov
imul
popa
mov
insb
nop
loope
mov
add
sub
push
dec
jmp
jmp
adc
data16
mov
cmp
sbb
xchg
mov
sbb
xchg
fidivrl
adc
mov
mov
xchg
out
xor
inc
sbb
xchg
and
fdivrs
loop
data16
out
jmp
loopne
add
and
aas
hlt
and
xor
adc
pop
adc
cmp
add
notl
lret
sub
push
xor
add
mov
xor
mov
jnp
inc
in
fidivrl
inc
inc
push
and
add
xchg
push
push
or
push
lahf
dec
push
pop
sbb
jbe
lds
cmp
xchg
and
pop
or
lock
adc
gs
lret
loopne
push
sbb
xchg
cltd
clc
mov
sub
loope
addl
cs
pop
or
adc
js
mov
ja
inc
add
dec
dec
mov
daa
and
jne
mov
sbb
add
aas
push
in
xchg
lea
xchg
add
push
xor
pop
mov
mov
or
loop
and
arpl
les
data16
mov
xlat
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
sub
mov
and
push
inc
add
sub
sahf
dec
pop
sbb
addb
into
jne
rol
test
dec
ss
pop
adc
push
pop
subl
and
iret
outsb
out
repz
imul
and
inc
ss
sub
bnd
lock
addl
pop
and
sar
add
jecxz
xchg
or
cmc
mov
xchg
mov
jne
sbb
mov
push
push
inc
fcom
add
mov
inc
sbb
mov
add
sub
or
clc
ss
shrb
xor
add
add
add
xor
fnstcw
jo
mov
push
pop
rolb
pop
adc
or
mov
pusha
lea
mov
inc
cmpsl
add
dec
mov
and
and
je
sbbl
adc
and
xchg
sti
pop
cmp
jl
xor
lret
into
or
dec
fdivrs
push
pop
in
push
fidivs
sub
dec
push
cmpb
es
loopne
push
jl
shrl
pop
enterw
and
sahf
aam
sub
fldt
std
dec
mov
stc
jnp
xor
pop
je
push
mov
cmp
mov
and
ret
jmp
or
xor
or
gs
push
shl
mov
mov
and
pop
jne
jns
push
jo
jge
sbb
movsb
std
push
jmp
push
sbb
jnp
shll
jmp
int
xor
xor
cmp
into
jl
insb
push
inc
ljmp
gs
pop
pop
lret
xor
insb
jne
push
lea
shl
cs
sbb
sub
movsl
test
test
loop
faddl
popa
push
mov
push
inc
les
pop
sbb
pop
lret
mov
inc
or
stc
outsl
iret
add
rcrl
pop
aam
nop
xor
fwait
testb
das
js
add
cmpb
ss
lahf
push
sub
test
insl
cld
fimuls
jg
ss
push
add
sub
adc
pop
push
clc
mov
and
dec
jne
test
adc
stos
push
and
dec
mov
push
xor
ret
dec
and
sbb
sbb
dec
push
in
das
add
or
or
arpl
push
fnstsw
pusha
push
stos
adc
mov
mov
mov
jle
inc
inc
pop
pop
arpl
bound
or
aas
mov
sub
xor
mov
int3
and
lea
push
ret
pushf
adc
lods
pop
sub
in
mov
shr
das
cmpl
push
push
jmp
push
or
jae
enter
insl
popa
push
bound
aam
leave
cmpsl
mov
cmpl
mov
dec
inc
adc
sbb
cmp
xchg
add
add
mov
adc
or
push
xor
push
cmp
adc
mov
insw
add
mov
adc
jne
jp
add
fimull
ret
je
pop
mov
into
stos
movsl
imul
cmp
aas
push
or
xor
push
add
cmpsl
inc
mov
lcall
test
adc
es
push
pop
fdiv
je
push
or
outsl
cld
lret
pop
cmp
sbb
mov
jmp
push
sub
or
pop
in
jnp
leave
jne
push
jmp
cmp
sbb
xchg
mov
shrb
adc
mov
dec
add
loopne,pn
xor
add
sub
and
xor
push
push
imul
and
add
xchg
add
mov
pop
lods
xchg
stos
mov
ja
mov
jns
cmc
adc
pop
lcall
pop
and
mov
loop
je
bound
lcall
mov
or
sbb
cmp
shlb
fiaddl
mov
mov
and
adc
mov
add
add
das
xlat
fld
jne
add
jne
int
sbb
push
pop
and
or
and
ss
ficoml
add
test
scas
rolb
test
adc
mov
mov
sub
cmp
sub
push
stos
fstpl
push
and
or
mov
or
shlb
sbb
pop
inc
inc
or
xchg
insl
push
je
dec
icebp
lea
popf
inc
adc
fsubp
add
aad
jno
roll
adc
add
or
daa
jp
movaps
mov
mov
xor
adc
sub
push
inc
xor
or
out
movsb
cmp
fisttpll
pop
push
inc
adc
pop
sbb
xchg
sbb
inc
mov
mov
je
stos
sub
jle
iret
shlb
jmp
add
dec
mov
pop
lret
pop
orl
and
inc
adc
add
add
loope
fiadds
push
fwait
jo
or
and
pop
sub
xchg
jmp
jns
or
je
loope
fcmovu
out
test
xchg
cltd
jp
jae
aas
and
xchg
int
stc
or
outsb
data16
add
sbb
pop
xchg
bound
mov
ret
sub
shr
dec
add
mov
xchg
xor
pop
out
fldl2t
adc
gs
rcll
sarl
imul
fadds
add
push
or
jl
mov
push
js
dec
and
stos
ret
mov
pop
add
push
es
fnstenv
add
nop
or
jns
pop
in
cmpb
adc
outsl
mov
rcl
or
jg
cmpl
push
outsb
xor
popf
shrb
lea
loope
cld
pop
jmp
lahf
xchg
je
imul
cmp
lret
dec
cmpsl
pop
in
push
inc
popa
ret
adc
ds
hlt
fs
fisttpll
xlat
and
inc
push
or
ds
sbb
mov
popfw
and
sti
dec
icebp
icebp
neg
jge
jmp
inc
lahf
mov
imul
adc
dec
hlt
jl
push
push
push
push
inc
add
adc
mov
dec
pop
xorb
test
sti
fsubs
push
hlt
stos
cli
push
and
roll
mov
mov
ret
mov
stos
sahf
jmp
pop
pop
sub
in
add
enter
fisubl
movb
lock
push
cmpsb
add
in
in
fbld
test
push
and
dec
pop
popa
nop
or
gs
sbb
or
mov
mov
add
leave
or
sub
sbb
or
push
arpl
add
xchg
mov
mov
push
repnz
insb
mov
mov
pop
or
push
jo
jl
andl
dec
mov
sbb
xorb
mov
xor
mov
sub
call
outsb
jns
rorb
sub
mov
in
sub
sbb
sub
push
and
sti
inc
add
mov
jnp
sbbl
lcall
fildl
pop
test
into
dec
and
mov
in
nop
shlb
pop
movsb
xchg
fsubr
or
push
loop
fsub
xchg
popa
mov
sbb
lea
jmp
lock
xor
add
lock
xchg
inc
mov
jb
scas
in
add
push
jge
inc
add
cwtl
lods
inc
scas
in
sub
pop
inc
xchg
mov
xchg
cmp
adc
loop
iret
dec
fsubs
mov
test
das
leave
add
sbb
out
pop
mov
rclb
push
push
add
in
mov
aas
pusha
push
push
xor
or
add
push
and
jb
adc
or
aaa
jo
adc
add
inc
dec
or
sbb
push
out
andl
sub
je
xor
js
and
push
dec
push
in
jo
cli
ss
adc
jns
push
or
sbb
nop
and
push
daa
in
arpl
hlt
add
push
testl
jg
pop
call
add
add
jae
mov
dec
std
adc
adc
mov
add
adc
xor
sbb
or
sub
loopne
xchg
adc
lea
mov
lds
jae
push
inc
jb
mov
adc
xor
loopne
adc
sbb
and
ljmp
lock
and
addb
pusha
pop
or
lock
mov
xor
mov
stos
popa
iret
pop
lock
popa
in
xchg
es
or
xor
js
in
and
xor
sbbb
add
inc
add
stos
or
push
in
inc
push
sahf
loope
dec
xchg
iret
dec
ret
dec
stos
mov
lahf
push
cmp
and
xchg
add
addl
push
add
lods
adc
ror
cmp
add
push
xchg
call
fisubl
sub
test
jbe
js
lods
ljmp
lea
in
insl
add
push
and
test
in
inc
loopne
imul
movsl
imul
xchg
pop
sbb
mov
xor
ret
repnz
jne
ljmp
scas
fcom
rolb
adc
fsubs
jg
sub
ds
stc
rorb
push
jns
dec
fdivr
les
jmp
fcoml
push
out
xchg
aas
fdivrs
dec
inc
int
data16
mov
imul
add
rclb
mov
aam
mov
dec
ret
out
xchg
out
mov
push
lods
xchg
into
inc
test
cmp
jno,pn
sub
lods
loopne
jns
mov
xchg
in
mov
fsubs
dec
test
mov
or
or
or
xorl
cmp
rcrb
fdivl
ja
rolb
add
and
ja
mov
inc
cmp
sub
mov
cmp
scas
nop
loop
shll
push
outsb
mov
or
xor
xor
or
mov
or
adc
pop
push
sar
add
and
sbb
cld
jo
adc
add
test
out
test
jecxz
sub
sub
adc
je
push
inc
int3
xor
addb
mov
xchg
cmp
push
cmp
lea
arpl
jne
jnp
mov
inc
and
shll
sbb
shl
add
test
pop
adc
inc
pusha
shl
std
sbb
push
pop
push
cwtl
movsb
cmp
stos
ds
lret
nop
push
adc
sahf
cmpsl
mov
rolb
test
pop
and
push
xchg
xchg
mov
or
shrb
or
mov
and
push
and
add
and
cmp
les
mov
movb
addr16
mov
push
mov
push
enter
cmp
push
test
or
orl
or
push
lods
shl
mov
lds
loop
push
sub
adc
movl
dec
int3
in
movzwl
push
cwtl
cmp
xchg
test
fucomp
mov
sbb
add
in
sub
out
pushf
jl
cmp
jecxz
addr16
mov
adc
mov
mov
sbb
sbb
cmp
adc
add
iret
mov
pop
aad
mov
stos
test
lret
cmpsl
stos
cmp
pop
adc
adc
pushf
pop
pop
jl
js
fsubs
add
sbb
inc
ret
cmpsb
adc
les
loop
jo
rolb
movb
ret
lock
inc
cmpb
xor
and
ror
mov
inc
cmp
adc
mov
ljmp
dec
and
add
nop
jecxz
push
sub
sub
cmp
ss
das
pop
std
clc
sbb
sbb
add
or
xlat
or
std
fwait
insl
loope
ret
adc
ljmp
mov
mov
test
jmp
cmpb
mov
adcb
adc
push
adc
add
dec
push
add
and
sar
dec
movsbl
cmp
dec
sub
call
adc
jbe
push
paddb
mov
push
mov
add
or
pop
add
lret
fsubrs
mov
lods
sub
loopne
and
pop
add
je
dec
insb
cmpsb
movb
mulb
shlb
loop
mov
rcrl
add
ret
outsl
jle
fdivr
add
inc
dec
insl
cs
sub
cmpl
out
mov
mov
push
cmp
jl
cmp
das
enter
lcall
pop
scas
inc
adc
and
push
mov
jp
ljmp
cvtps2pd
jbe
inc
hlt
out
add
adc
xor
push
rorb
push
dec
ja
pushf
sub
xchg
ret
lahf
mov
scas
movsl
inc
push
std
repnz
daa
in
movsl
repnz
add
daa
daa
daa
add
daa
or
jmp
or
jmp
or
fwait
fwait
fwait
fwait
jno
jmp
push
jmp
por
jmp
fwait
fwait
fwait
pop
adc
pop
adc
push
adc
dec
adc
fwait
fwait
fwait
fwait
dec
adc
aas
pop
jmp
sbb
fwait
fwait
fwait
fwait
xor
jmp
sbb
es
fwait
fwait
fwait
fwait
and
pop
pop
jmp
and
add
dec
fwait
or
inc
cmpsb
push
fcompl
and
test
push
sbb
ss
mov
xchg
movsl
rorb
jns
in
loope
add
int3
out
sahf
out
fsub
in
hlt
jns
out
cld
dec
add
or
adc
out
sahf
out
and
sub
sahf
out
sahf
cmp
dec
dec
jns
out
push
pop
pop
arpl
jns
out
jb
jl
aas
sti
lcall
add
add
and
or
or
push
movups
adc
adc
push
lock
sti
call
sbb
sbb
sbb
push
pop
and
and
aas
push
testb
jb
push
std
icebp
sbb
push
adc
mov
into
es
sbb
sub
or
int3
aam
scas
add
cwtl
adc
add
pop
scas
push
loope
stc
mov
test
dec
ljmp
mov
pushf
andl
add
xor
pop
add
and
scas
sar
pop
or
xor
pusha
inc
stos
mov
mov
fstpl
imul
inc
roll
or
jb
jo
bound
mov
mov
in
popa
hlt
ljmp
lret
sbb
sub
xchg
lock
js
lods
pop
and
cmp
or
setnp
xchg
shll
push
sub
stos
faddl
rolb
inc
or
add
std
cmp
and
push
mov
and
fstps
or
enter
pushf
mov
sub
sub
out
lock
adc
sbb
mov
aam
ljmp
and
mov
pop
add
adc
mov
divl
shlb
add
inc
inc
or
xorb
push
mov
shr
adc
xchg
cmc
aaa
in
mov
ljmp
incl
mov
mov
ret
movl
in
ret
or
mov
and
mov
clc
add
fistpl
jmp
ret
pop
iret
bnd
es
xchg
rorb
out
push
pop
inc
mov
mov
push
incl
push
mov
ja
lea
imul
testb
mov
add
inc
imul
xor
inc
rclb
dec
sbb
lock
or
pop
adc
or
pop
and
in
jb
add
inc
push
sub
mov
push
push
scas
xor
fadds
add
add
pop
mov
push
and
pop
in
sbbl
lods
sub
push
rcrl
adc
inc
pop
stos
xchg
orl
fadd
outsb
pop
mov
jg
popf
nop
mov
insl
adc
and
mov
leave
and
lock
or
adc
cmp
push
cmp
fcmovnbe
ror
mov
add
sbb
sub
jno
loopne
test
out
push
mov
mov
mov
cmp
push
xchg
fcoms
cmp
sbb
and
pcmpgtb
mov
rorl
daa
lret
and
nop
insb
ljmp
xor
movl
mov
and
loopne
xor
xchg
inc
jne
pushf
push
inc
jnp
outsl
stc
aaa
mov
adc
add
data16
xor
or
loope
cmp
jl
inc
push
push
sub
cs
mov
xchg
jle
add
sar
jbe
cli
es
lea
cmp
pop
ret
inc
jg
and
or
js
cs
loopne
mov
sbb
fldcw
aad
or
xor
cmpb
lods
sti
sbb
dec
cmp
jl
dec
push
sahf
cmp
imul
or
stc
jb
jl
jmp
and
repz
daa
lods
test
cmp
jae
movzbl
adc
insb
fdivrl
out
outsl
jns
sahf
adc
js
or
les
fucomp
push
inc
inc
lock
pop
movb
ss
andl
ret
mov
lcall
dec
lcall
imul
lcall
arpl
ja
jmp
nop
jbe
xor
and
mov
fwait
and
mov
inc
test
ret
sub
and
mov
subl
add
arpl
add
fsubr
push
add
and
add
pop
pop
js
adc
js
jne
ret
push
lahf
mov
negb
push
push
sbb
test
ficoml
mov
rorb
sub
dec
inc
orl
jo
test
add
pop
and
cmp
jo
cmp
jl
mov
xchg
add
add
push
mov
or
mov
inc
add
and
das
inc
loop
push
adc
cmp
inc
inc
repnz
decb
xor
mov
xchg
push
rolb
fstpl
movl
in
pop
mov
add
fisttpl
push
sbb
sub
add
insb
adc
pop
pop
xchg
and
std
xchg
fistpl
sbb
sbb
cwtl
lds
sub
mov
std
add
ja
sbb
sbb
push
or
out
imul
rolb
push
jmp
js
jmp
adc
add
adc
cmp
addr16
dec
pop
pop
or
insb
and
jns
sub
clc
test
test
je
jmp
xor
mov
pop
neg
pop
or
push
xor
jne
push
movsb
adc
pop
pop
push
out
pop
fiadds
inc
push
out
push
addl
insl
sub
or
addl
mov
sbb
sub
sub
or
mov
pop
inc
push
push
lock
push
inc
mov
and
jo
test
and
outsb
push
dec
es
or
repz
iret
lea
lock
inc
rolb
mov
adc
jne
pushf
jl
rorb
call
sbb
and
cmp
push
cmp
ljmp
xor
and
or
lods
cmp
and
sbb
dec
movsl
fisubl
xchg
sub
dec
mov
adc
scas
push
xchg
push
loop
scas
psubsw
sub
roll
pop
adc
add
push
scas
pop
pop
in
jmp
iret
xor
adc
ret
sub
adc
xchg
es
pop
and
insl
push
in
adc
jg
cmpsb
aaa
dec
mov
fistpll
cmp
stos
mov
incb
cmp
and
jp
mov
ljmp
jno
dec
inc
aam
xor
push
mov
adc
xor
or
imul
or
pop
shll
inc
inc
pop
inc
imul
int
pop
or
in
sub
stc
push
add
xchg
lock
dec
adc
jns
add
add
jno
das
inc
mov
lret
test
adc
sbb
sub
and
cmpsb
push
jmp
cltd
jae
test
pop
push
pop
icebp
loope
and
add
mov
sub
mov
lds
pop
or
rclb
jp
pop
adc
mov
adc
push
fadd
leave
icebp
pop
push
xchg
loop
lock
sbb
push
mov
dec
mov
data16
loopne
xchg
rolb
or
pop
push
pop
in
je
add
shl
mov
mov
dec
inc
push
pushf
cmpsb
fldl
hlt
ss
push
imul
jae
push
mov
lea
les
hlt
test
ljmp
mov
add
flds
sub
ret
mov
cmp
sbb
ja
fnsave
pusha
dec
adc
test
mov
ja
dec
mov
mov
sbb
push
scas
push
sbb
add
inc
mov
adc
test
pop
mov
out
and
cmpb
inc
or
mov
sbb
mov
or
pop
mov
push
pop
and
xchg
inc
popa
in
outsb
mov
ds
je
rorl
mov
xchg
jne
std
xchg
cmp
insl
xchg
or
mov
pop
and
sbb
add
mov
adc
push
xor
insb
lds
mov
insb
adc
incb
imul
jge
leave
lock
popl
imul
xchg
sub
mov
fcoms
popa
mov
sub
inc
xchg
dec
dec
mov
push
in
mov
inc
movsb
inc
xchg
adcb
out
push
mov
xor
push
or
fldenv
pop
push
out
sub
sub
and
jg
mov
xor
and
and
popa
mov
add
popf
cmp
and
mov
test
inc
outsl
das
add
nop
mov
push
adc
add
dec
nop
adc
xor
adc
mov
inc
or
test
sbbb
lods
and
hlt
jmp
sbb
outsb
lcall
and
andl
pop
xchg
xchg
lds
adc
cmp
dec
jae
fistpl
cmp
leave
leave
arpl
int3
movb
and
mov
adc
inc
data16
push
jnp
daa
mov
or
and
sbb
or
jle
and
mov
dec
adc
xchg
mov
js
sbb
mov
in
and
push
push
push
and
movsb
inc
sbb
and
adc
mov
rcr
jg
add
mov
adc
sti
push
mov
xchg
adc
cld
mov
addr16
mov
arpl
sbb
jle
cmp
fisubs
cmpb
mov
push
lock
pop
std
mov
inc
add
cmp
je
cmp
jae
xorb
or
push
inc
pop
xchg
inc
mov
fnstsw
push
sub
adc
sub
pusha
inc
fimull
inc
ds
repnz
mov
cmpb
xchg
or
add
xor
dec
mov
mov
xchg
cs
fstpl
test
insl
xor
into
xorb
test
cmp
mov
pop
fidivrs
sbb
adc
stos
stc
inc
lea
sbb
popa
adc
cmp
lods
and
pop
or
or
pop
js
arpl
mov
pop
lods
xchg
sahf
add
adc
sarb
call
mov
sbb
mov
or
test
inc
pop
repnz
push
inc
pusha
cmp
mov
inc
add
xor
inc
pop
pusha
xchg
push
mov
pushf
les
push
jb
cld
cmp
fsubrs
cli
mov
lea
daa
fidivs
jmp
daa
movsl
adc
shrl
push
cmp
jge
mov
xchg
pop
imul
jmp
push
jp
lea
outsl
fcmovnbe
mov
and
cltd
pop
add
or
xor
ret
mov
xor
jns
scas
or
lock
clc
clc
cld
add
xchg
cmpsl
jae
movl
push
cs
add
add
imul
add
and
fistps
shll
add
dec
je
add
inc
sti
fists
dec
jne
mov
and
dec
or
mov
shr
sbb
or
lret
ljmp
xor
jmp
lds
loopne
fnstsw
cmpsb
test
cmpsb
adc
xor
sub
sarb
je
dec
je
push
add
out
loop
xchg
loope
dec
mov
add
call
sub
in
add
push
add
clc
push
cmp
jne
sbb
adc
mov
pushf
cmp
inc
mov
xor
add
test
testb
js
fildl
ljmp
lds
or
cltd
idiv
inc
inc
imul
lods
inc
dec
add
clc
jb
push
cld
mov
sbb
movsb
or
icebp
fcoml
mov
add
or
cmp
lods
sub
add
stc
push
or
out
and
adc
push
push
lock
test
dec
add
mov
divl
inc
test
jmp
daa
pop
out
sahf
ds
inc
push
cmp
sarb
in
clc
jae
adc
mov
pop
outsb
cmp
clc
gs
jae
repnz
dec
pusha
ret
push
mov
aas
pop
jns
push
gs
testl
fisttps
adc
cmp
je
cmp
push
cmp
jne
and
dec
loop
jne
push
sar
flds
lods
or
or
jecxz
loopne
add
or
pop
cmp
jne
push
dec
add
loop
std
fbstp
outsl
mov
incb
or
jnp
cmovp
push
add
mov
pop
add
mov
inc
mov
std
adc
jl
or
jg
mov
jmp
jae
dec
movsl
and
push
jmp
inc
jl
in
mov
mov
jp
add
shl
dec
mov
sub
cltd
movsb
fstp
mov
mov
and
sub
je
lret
out
jg
imul
and
js
addb
inc
cltd
clc
xchg
push
rcrl
jecxz
sbb
or
sbb
jle
out
and
sahf
movsl
js
and
push
pushl
push
push
push
inc
cmp
pusha
mov
cli
popa
mov
jg
push
fs
imul
mov
inc
mov
ret
add
aaa
jbe
cmp
lcall
sub
incb
inc
xor
aaa
mov
jge
es
shrl
pop
das
movsb
xor
xor
add
and
cmp
sbb
or
push
pop
cmp
add
in
inc
inc
push
or
sahf
clc
out
jmp
xor
inc
ret
and
mov
xchg
and
push
adc
cmc
cmp
scas
fadds
mov
pop
emms
stc
pop
push
sub
les
push
cmp
mov
int3
or
pcmpeqb
jl
leave
sub
je
fmuls
je
and
cmpsb
inc
popf
xor
inc
adc
pop
loopne
and
mov
lahf
cmpsb
push
clc
mov
lods
arpl
icebp
fists
jl
push
loop
adc
mov
cld
cmp
fisubrl
inc
mov
add
sbb
adc
ret
dec
add
xor
leave
or
popf
pop
sub
xchg
mov
icebp
cmp
inc
addb
mov
push
lret
ret
sbb
sbb
das
inc
sbb
push
mov
shll
pop
lahf
or
jmp
add
dec
cwtl
movsl
icebp
sub
add
push
orb
inc
out
das
adc
inc
nop
push
lock
push
inc
dec
fildll
cmp
jne
add
je
movsb
push
add
lcall
sub
loope
add
and
cwtl
jo
push
inc
mov
jo
push
mov
adc
add
and
rclb
push
pop
jno
cmp
imul
push
add
ljmp
imul
andb
icebp
jmp
mov
shl
rolb
sub
adc
xorb
mov
out
xchg
iret
cmp
sbb
cmp
cmp
mov
fcoms
out
pop
or
jle
cmp
ss
fsts
xor
or
mov
inc
cmp
dec
pushf
adc
pop
jne
push
movb
rorl
sbb
cmp
and
inc
std
dec
roll
cmpsb
jge
inc
incl
cmp
pop
inc
xor
loop
jbe
ja
dec
dec
enter
addr16
leave
push
ret
sbb
inc
imulb
push
cmp
inc
nop
push
sub
add
inc
ds
cmp
rolb
xor
and
push
movl
or
je
imul
xor
add
mov
lea
sub
mov
or
cmp
lock
movb
jbe
xchg
sub
inc
xchg
add
push
popa
and
por
mov
push
cmpb
jne
mov
or
idivl
ret
add
sbb
push
aam
add
scas
jecxz
ja
dec
ret
stos
xchg
add
sbb
mov
sbb
arpl
sub
pop
cmp
mov
sbb
pop
mov
dec
push
sbb
dec
cmp
mov
push
xchg
test
cwtl
mov
add
or
sbb
adc
inc
add
adc
push
mov
stos
divl
xor
shll
aad
push
int3
pop
repnz
shlb
mov
arpl
pop
adc
ss
push
addb
sarl
lahf
ljmp
mov
and
mov
mov
dec
dec
ret
push
xchg
and
or
push
sub
in
test
dec
imul
movsl
xchg
pop
jle
cwtl
or
ret
gs
xchg
and
xor
add
push
scas
fistps
add
shlb
es
jmp
mov
inc
daa
cmpsb
push
cmp
mov
pop
lods
imul
mov
adcl
mull
push
adc
cmp
xlat
ret
push
mov
fistpl
cmp
jnp
jo
push
push
or
jnp
sbb
fnstcw
push
push
dec
shl
jmp
xchg
je
add
cmp
jno
xchg
gs
adc
sub
xchg
sub
call
adc
xchg
loop
pop
notl
inc
push
sub
push
pop
mov
sbb
aad
xchg
add
mov
xor
add
mov
insl
push
test
add
jmp
cltd
sbb
aam
test
mov
push
leave
and
lret
sahf
mov
bound
xchg
jle
sub
or
xchg
dec
js
xor
in
lcall
inc
xor
cmp
jb
test
aas
push
lds
sbb
aad
mov
fsts
dec
test
dec
ret
mov
sbb
test
push
outsb
loopne
xchg
or
inc
movsl
fdivrl
push
or
movl
pop
fistl
xchg
inc
ljmp
or
or
mov
cld
sbb
mov
add
notl
inc
je
dec
xor
or
adc
addr16
mov
shlb
rcrl
je
or
cmp
test
or
xchg
mov
push
scas
push
inc
addl
cmpl
fdivl
dec
sbb
in
adc
js
and
subps
pusha
push
mov
adc
ds
adc
cmp
push
filds
les
or
jbe
pop
cwtl
je
and
xchg
js
or
xor
inc
mov
push
push
or
mov
pop
sub
pop
adc
xchg
pop
dec
aas
add
add
iret
mov
out
add
and
test
xorl
sbb
aaa
mov
mov
inc
repnz
pop
add
nop
dec
pop
xchg
sub
mov
in
divl
jmp
cmp
jne
sbb
xchg
push
js
ret
sbb
and
xrelease
gs
sbb
and
icebp
and
data16
iret
insl
pop
sub
sbb
cltd
xchg
sarb
inc
ja
jmp
mov
xchg
loop
sub
sbb
push
jmp
sbb
mov
pop
mov
enter
orl
stos
andb
cmp
pop
stos
push
pop
sbb
cmp
sub
jmp
push
dec
dec
inc
pop
inc
mov
jne
jnp
ret
fidivrs
and
ret
stos
rol
add
mov
and
xor
sbb
imul
cmc
in
sbb
cmc
shlb
loope
into
or
into
sub
insb
fists
mov
or
imul
pusha
lods
pushf
add
jecxz
idivb
inc
test
gs
dec
mov
xor
je
js
mov
xchg
clc
leave
push
sub
and
mov
sub
mov
stos
mov
pop
daa
scas
dec
push
mov
mov
pop
into
xor
cmpsl
add
pop
xor
pushf
mov
lock
loop
mov
jmp
mov
mov
push
push
push
sub
add
je
mov
xchg
and
sbb
sbb
or
sbb
sbb
adc
jl
adc
dec
rolb
mov
xor
push
pushf
sub
movsb
push
out
adc
outsb
fwait
mov
cltd
mov
xorb
int
cwtl
or
jb
lock
jbe
sbb
cmp
sbb
or
and
add
movl
lods
or
loopne
or
sahf
sbb
inc
sbb
push
or
mov
xor
mov
pop
jae
dec
push
adc
filds
adc
sub
sbb
jo
xchg
fbstp
leave
add
aaa
push
data16
cmp
fsubl
adc
jecxz
sbb
mov
fisubl
adcl
mov
js
loopne
in
fsubs
mov
mov
loopne
dec
xchg
and
cmp
dec
dec
add
sub
call
cmpl
ret
jbe
pop
js
movsb
imul
push
mov
adc
orb
or
lret
or
out
push
jno
or
xor
sbb
cmpsl
popf
push
popf
pop
cmp
mov
inc
push
adc
mov
jge
and
jle
xchg
pusha
pop
dec
xor
rorl
sarb
sub
adc
sub
and
je
sub
sbb
dec
cli
loopne
push
cltd
jmp
or
and
xor
jge
jp
js
xor
enter
data16
fildl
jp
bound
cmp
inc
adc
inc
stos
pop
push
ret
sbb
pop
mov
add
int3
push
or
cwtl
jecxz
pusha
cmp
inc
push
loopne
daa
mov
in
insl
jne
inc
inc
xchg
adcb
loop
xorb
outsb
lods
xchg
loop
adc
lcall
insb
aam
adc
inc
or
adc
rorb
inc
adc
mov
push
or
sbb
lret
popf
adc
pop
inc
push
mov
and
push
or
push
xchg
sbb
mov
hlt
adc
adcl
and
out
les
cli
xor
dec
inc
mov
movl
dec
jo
or
or
mov
or
or
ja
popl
and
sub
add
outsb
sbb
int
sbb
dec
mov
ja
mov
adc
loope
mov
adc
test
jecxz
or
or
mov
dec
rcrl
stos
sub
dec
cmp
cmp
push
push
and
adc
push
adc
mov
mov
adc
xor
mov
jg
cmp
clc
mov
data16
xorl
xchg
sub
push
lahf
mov
dec
iret
jl
fisubs
mov
cmp
daa
jb
outsb
cmpl
push
mov
hlt
inc
jne
pop
test
jae
cmp
jmp
das
sub
pop
cld
adc
or
add
arpl
push
loop
call
fidivs
ss
adc
fwait
mov
jmp
lea
int
dec
daa
mov
inc
mov
ret
push
and
xchg
or
inc
clc
inc
lods
adc
out
lea
adc
add
xchg
push
add
push
xchg
and
idiv
fldenv
xor
inc
push
in
std
test
cmp
cmp
js
mov
jge
loopne
mov
js
loop
and
push
inc
sub
loopne
and
addr16
fcoms
push
xor
jae
mov
dec
jecxz
rcll
icebp
adc
and
lock
cmp
mov
or
cwtl
jne
repz
push
adc
movsl
inc
pop
mov
hlt
cmpsb
hlt
scas
adc
pop
insl
pop
sbb
add
sub
push
cmp
pop
mov
addb
ja
int3
rcrb
js
push
fldcw
and
in
mov
loopne
push
ja
ja
adc
pop
mov
or
xchg
loopne
ss
popa
push
inc
scas
sub
clc
je
jp
ja
shlb
icebp
sub
outsb
test
daa
add
add
ss
dec
jmp
push
mov
shl
add
ret
add
leave
data16
mov
pop
xchg
out
jecxz
cmc
dec
sbb
gs
shl
jb
add
fbstp
or
or
les
and
jns
inc
mov
scas
stos
pop
aaa
cmp
sub
jp
xor
dec
sbb
adc
sbb
jae
shll
loopne
outsl
in
clc
sti
push
jo
data16
push
or
xchg
push
lods
jp
shlb
mov
push
roll
popa
je
or
sbbb
dec
pop
jbe
add
xchg
loop
jmp
add
or
cli
jmp
inc
ja
cmp
arpl
fwait
mov
push
adc
lds
inc
orb
mov
loope
jmp
and
pop
pop
pop
js
icebp
popa
mov
adc
in
mov
or
mov
cmpl
pusha
add
mov
mov
mov
xchg
popf
xchg
dec
daa
popf
xchg
movsl
mov
pusha
lds
imul
fisttpl
sub
xchg
inc
lods
mov
xchg
add
xchg
sbb
cmp
or
mov
clc
cmp
sbb
shrl
roll
cmpsl
pop
je
outsb
insb
sbb
repz
shr
or
ret
cmp
arpl
daa
pop
add
ret
pop
lcall
xor
cs
jno
push
inc
inc
ret
or
int3
push
data16
fiadds
loopne
pushf
mov
adc
cmpsb
mov
push
or
pop
cmp
push
jmp
fcomps
mov
mov
call
push
or
adc
mov
lcall
jmp
ret
stos
shrb
mov
mov
sub
je
push
clc
mull
inc
dec
fisubrl
mov
lret
shll
sar
dec
xor
pop
std
hlt
push
or
je
pshufw
push
xchg
adc
sbb
sbb
cmp
sub
mov
test
insb
jb
fimull
jmp
push
or
dec
mov
sbb
add
add
fcmovb
jb
cmp
adc
adc
mov
inc
je
sar
xor
out
push
mov
loope
mov
sub
shl
mov
push
mov
ud1
ficomps
jmp
jg
subl
outsl
inc
mov
loope
jecxz
mov
inc
sub
js
sub
movsb
mov
ret
push
shlb
xor
add
push
pusha
dec
clc
push
cs
popa
dec
push
adc
xchg
dec
or
push
nop
and
addb
pop
or
jne
leave
sub
mov
shr
add
roll
lds
jmp
je
cmp
jbe
push
popf
add
lods
test
inc
and
jmp
das
or
pop
int
imul
cltd
pop
ret
mov
sub
mov
cltd
nop
or
sbbl
fisttps
loop
loop
push
ljmpw
arpl
and
push
icebp
in
lret
mov
and
jp
jge
pushf
popa
enter
or
and
mov
mov
xchg
xchg
jo
mov
mov
inc
fcmove
cli
loopne
cmp
scas
push
cld
or
inc
jo
ljmp
add
mov
fdivrl
lea
push
fucom
cmp
adc
push
mov
call
xor
add
jb
movsl
xchg
outsb
data16
in
add
mov
mov
ficompl
pop
ja
std
xchg
insl
dec
shll
mov
sbb
push
add
jb
mov
xchg
jae
mov
jmp
ljmp
cmp
xchg
mov
adc
in
jmp
jge
das
or
inc
push
xor
pop
div
adc
aaa
lea
pop
inc
add
mov
test
pop
jmp
lods
push
dec
dec
addl
push
cmpsl
aaa
pop
sub
adc
dec
dec
test
sub
jo
mov
in
sbbb
roll
xchg
pop
sub
sbb
in
idivb
fsubl
andl
gs
shr
xor
mov
add
imul
aam
add
or
es
push
fwait
lea
inc
in
jle
dec
stos
cmp
push
rolb
jmp
adc
sub
sub
jne
ret
mov
fadds
sbb
pop
lods
lret
les
mov
clc
int3
add
rclb
fiadds
imul
add
jb
das
dec
xorb
js
call
pop
cmp
jb
neg
and
je
sub
mov
lret
and
sub
jne
sub
or
rorl
lret
or
add
stos
mov
dec
ljmp
ret
or
jns
dec
loop
or
call
push
ds
cmp
xor
je
mov
popa
loop
or
lea
adcl
adc
test
xor
call
jle
addb
rorb
pusha
insb
inc
pop
or
mov
pop
fildll
adc
pop
and
sbbb
jne
fnstcw
mov
add
and
clc
jg
fs
fistpll
add
movd
movaps
jbe
fsubp
mov
enter
shlb
jle
xor
loope
cmp
cli
push
ror
test
mov
int
decl
nop
jge
repz
or
jg
jg
js
ljmp
and
in
add
mov
aam
ret
adc
add
je
adc
ljmp
js
addr16
ret
mov
add
pop
ja
das
pop
mov
int
sub
fcmovb
sbb
adc
push
dec
adc
fsub
pop
pop
test
sarw
cmp
mov
and
orb
and
aam
xor
xor
pop
int3
jle
addb
add
cld
jb
test
mov
mov
scas
cltd
and
adc
int3
jmp
shr
int3
ss
adc
test
xchg
add
inc
hlt
and
fs
arpl
movsb
int3
or
test
outsb
xor
pusha
inc
dec
pusha
pop
js
test
js
sbb
stos
adc
or
mov
add
push
decb
mov
push
sub
jno
fwait
mov
je
sub
clc
ja
push
call
mov
push
je
cmp
jne
inc
cmpb
out
adcb
or
pusha
jae
cmp
dec
adc
add
cmpsb
or
mov
push
or
mov
sub
ret
daa
cmpsb
ljmp
xlat
jno
out
add
jecxz
stc
jmp
mov
add
xchg
cltd
xor
mov
sbb
xor
int3
js
pop
lcall
xor
fwait
pop
mov
xor
test
nop
imul
test
fsts
add
arpl
adc
sub
pop
push
cmpb
mov
xor
sbb
cmp
test
inc
aaa
icebp
mov
pushf
fsubs
push
sbb
movb
dec
cmp
sbb
pushf
pop
addr16
sbb
sbb
sbb
sub
xor
daa
jnp
call
jbe
sbb
rcrb
movsl
std
add
adcl
dec
mov
lret
and
arpl
cmp
mov
mov
jmp
sub
loopne
lret
pop
std
add
mov
les
or
jne
orl
adc
jne
fcompl
adcb
xor
sbb
push
loope
hlt
mov
jg
mov
cltd
or
sbb
decb
add
adc
lds
inc
inc
cmp
lea
arpl
sub
cmp
xchg
push
and
int3
dec
fists
clc
sbb
push
adcb
fists
adc
adc
pusha
add
in
jbe
cmp
jb
or
test
lret
mov
clc
cs
sub
mov
sub
std
sub
out
data16
add
or
ret
xchg
xor
mov
adc
jmp
and
push
ret
add
rcrb
inc
jae
enter
push
adc
add
sbb
les
xor
sahf
adc
loopne,pt
or
test
por
mov
sub
lcall
rolb
xchg
and
shrl
shr
test
add
das
mov
adc
cmp
pop
arpl
paddsb
inc
dec
sub
inc
shl
adc
add
lea
lock
lock
insl
cmp
sbb
jmp
ret
jne
mov
jne
cmp
cli
testb
je
inc
mov
cmp
pop
lock
leave
es
loope
or
cmp
jne
dec
jmp
mov
cmp
shlb
xchg
mov
jne
inc
aaa
push
lds
adc
push
loope
adc
mov
adc
ljmp
dec
iret
fnstcw
rolb
inc
ret
dec
stos
inc
xchg
es
mov
mov
roll
cmp
cmp
or
dec
jp
cmp
and
adc
xor
pop
pop
jne
inc
das
cld
dec
mov
adc
stos
pop
cmp
cmp
jb
rep
jmp
pusha
adc
mov
mov
pop
fs
add
test
aam
cld
fidivrs
sti
rclb
in
adc
xor
shrl
pop
xor
inc
add
add
arpl
repnz
push
dec
add
nop
into
enter
nop
inc
adcb
inc
xchg
mov
cmp
mov
push
pushf
xchg
mov
cld
aas
iret
test
inc
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
xchg
mov
lock
sbb
xor
jmp
sbb
nop
fcoms
lods
sbb
sti
and
shll
and
dec
jb
in
lea
jl
cld
pop
and
std
jle
cld
or
cld
out
ds
neg
sarl
or
inc
xchg
xchg
daa
stc
sub
addr16
pop
nop
push
jo
xchg
mov
insl
data16
mov
add
sahf
inc
push
out
push
outsb
in
xchg
lret
nop
dec
dec
xor
insl
sub
mov
cwtl
sub
push
mov
adc
sbb
cmp
repz
xor
inc
repz
lds
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
out
iret
and
insb
push
je
dec
push
adc
add
dec
adc
pop
mov
cltd
push
xor
jmp
sbb
shrb
jmp
imul
mov
ret
es
jmp
dec
out
movsl
pop
sub
fidivs
ljmp
add
push
in
inc
push
adc
jp
ret
jb
lock
sub
sbb
adc
sbb
pop
iret
sbbb
push
movsl
or
rcrb
faddl
lds
cmp
pop
popa
xchg
inc
pop
push
shll
or
push
pop
popa
adc
mov
iret
add
lods
sbb
cmp
xor
lds
pop
daa
sub
inc
or
int
xor
imul
pop
add
sub
aas
pop
xchg
js
xchg
push
sub
lods
and
push
shlb
inc
and
push
mov
jb
insl
xchg
sbb
and
dec
dec
and
dec
lods
jecxz
sbb
push
push
rcll
lcall
test
push
jle
mov
pop
xor
fstpt
pop
sbb
jbe
sub
inc
aaa
push
hlt
fisttpl
pop
cmp
pushf
mov
cmp
into
lea
inc
fadds
lret
sub
rcr
cmp
push
adc
or
add
inc
mov
jne
pop
sub
jns
popa
ret
add
insb
sub
or
mov
adc
xchg
sarb
add
xchg
xchg
dec
shll
orb
leave
fidivl
or
and
into
les
cwtl
test
lock
and
or
and
adc
push
adc
mov
push
inc
add
ljmp
fsubrl
xor
shll
call
ss
xchg
pusha
jne
push
stc
jle
inc
aas
pop
and
push
sub
jns
sbb
push
pop
adc
mull
vmovsldup
aas
inc
in
and
repnz
rcr
or
lods
testb
fs
jmp
add
dec
ret
rcrb
push
xchg
cmp
push
jne
inc
cld
mov
jmp
icebp
mov
test
mov
add
push
shll
cmp
cwtl
pop
fcomps
xor
xchg
pop
inc
insl
aas
push
adc
arpl
mov
xor
add
xchg
adc
lret
pushf
pusha
pop
lea
adc
or
jl
and
roll
js
sub
pop
aaa
push
ljmp
or
sub
jmp
loopne
mov
inc
repz
push
sub
ficompl
lds
or
pop
je
std
xor
sub
adc
xor
pop
pop
gs
inc
pop
fisubl
popf
pop
sbb
add
xor
not
pop
push
fdivrs
sub
outsl
lock
ja,pt
pop
jbe
lea
lahf
adc
sbb
jp
pop
cmp
and
pusha
adc
cld
jb
iret
dec
dec
push
push
clc
jbe
add
adc
and
mov
add
mov
mov
mov
add
jmp
test
jne
test
scas
adcb
cmp
xorl
orb
lods
cld
jbe
jle
mov
xor
fdiv
mov
pushf
pop
inc
inc
push
xchg
xchg
repnz
cmp
pop
test
cld
out
and
cmp
add
rcrb
jo
mov
and
mov
ds
add
shlb
out
out
loopne
cmp
mov
pop
rolb
push
cmpsl
or
adc
add
inc
js
push
imul
sbb
or
dec
pop
orl
push
rolb
int
cmp
push
test
shl
ret
mov
sub
movsb
sbb
pop
aaa
mov
add
mov
addr16
adc
dec
ret
out
xor
outsb
push
out
inc
jae
mov
andb
adc
sbb
push
adc
mov
or
jns
xor
mov
aam
ret
push
fptan
js
and
inc
addb
add
dec
insb
fstl
jne
jmp
dec
repnz
pop
pop
lret
mov
test
jne
mov
xchg
inc
clc
dec
test
push
or
pop
outsb
xor
enter
push
or
mov
jno
sbb
push
ror
jae
andb
push
outsb
into
out
add
fwait
negl
push
cmp
jne
mov
push
cmp
jne
cltd
cmpsl
mov
and
adc
daa
pop
mov
or
pop
push
pop
and
dec
or
adc
pop
lds
jmp
std
push
xor
cld
mov
enter
sub
scas
adc
in
push
aaa
call
cmp
jne
inc
inc
inc
clc
out
adc
cmp
or
js
stos
inc
repnz
mov
jo
jle
dec
ljmp
jne
imul
push
repnz
and
mov
mov
pop
inc
mov
adc
mov
or
add
and
pop
add
and
add
jb
or
dec
dec
enter
or
push
jb
inc
or
nop
mov
pop
pop
cwtl
cmp
mov
dec
dec
mov
pop
roll
sub
push
sbb
pop
inc
sbb
inc
mov
test
or
invd
dec
mov
cmp
pop
dec
jge
push
mov
jno
faddl
movsb
dec
fcomip
movb
jmp
xchg
adc
iret
je
mov
and
mov
pop
jg
add
mov
pop
add
scas
test
sbb
add
dec
imul
addr16
lock
push
push
push
pop
into
xchg
and
sbb
cmpsl
mov
test
out
jae
out
push
dec
push
dec
ss
adc
lock
push
add
lea
mov
and
in
scas
and
cmp
dec
scas
mov
inc
pop
jmp
xor
xorb
clc
pop
insb
or
pop
shrb
sub
jae
sbb
jo
ja
dec
popa
cltd
mov
add
dec
xchg
pop
jb
xchg
push
xchg
out
inc
inc
pusha
cmp
mov
push
pusha
inc
adc
shl
lods
inc
pop
add
insb
popf
das
in
mov
in
push
pop
add
insl
es
insl
push
push
mov
rorb
shlb
cmpsb
clc
or
lea
adc
add
fistpll
shrl
fmuls
lock
and
sub
or
jo
sbb
xchg
orb
sbb
call
nop
push
inc
call
push
adc
sub
xor
ret
jne
push
mov
push
lcall
xchg
jmp
rol
incb
mov
pop
loop
testb
mov
lea
neg
mov
sbb
loopne
jg
or
add
jmp
or
mov
inc
inc
push
ss
testl
scas
icebp
outsl
cmpsb
or
cmp
mov
inc
cmp
jb
pop
cmp
mov
jae
int3
cli
add
dec
mov
mov
push
inc
pop
ret
sub
aaa
or
sbb
testb
ret
cmp
xlat
adc
add
lods
or
iret
and
jne
or
sbb
jecxz
push
adc
scas
into
and
xor
dec
stc
addl
iret
xor
jo
and
ljmp
add
out
jne
sahf
and
mov
inc
xchg
ss
cmp
je
sahf
adcb
out
and
or
out
faddl
aam
xchg
pop
addr16
xchg
dec
lods
inc
mov
popa
test
sbb
les
jae
inc
aaa
adc
push
mov
loopne
push
or
mov
lahf
fwait
sbb
inc
or
jl
and
add
cmp
lret
push
mov
sbb
subl
fsts
cltd
jo
pop
mov
sbbb
cwtl
or
xor
inc
pop
mov
out
not
clc
inc
jmp
cmp
sbb
jmp
adc
jne
sub
jg
scas
and
mov
adc
mov
sub
cmp
dec
xchg
imul
xchg
sub
cmp
and
xor
jne
pop
mov
imul
adc
mov
or
mov
clc
dec
mov
and
je
lret
sbb
clc
adc
loopne
xor
dec
in
sub
loope
or
test
sub
push
jbe
push
add
or
sbb
and
shll
rclb
or
adc
shl
cld
std
mov
sbb
adc
aad
adc
add
inc
sbb
add
dec
inc
and
fwait
in
pop
imul
push
mov
sub
icebp
jl
add
dec
push
inc
pop
mov
les
arpl
rcll
add
std
lds
inc
mov
mov
mov
inc
push
loop
cmp
adc
add
adc
pop
pop
inc
and
push
and
xor
pop
js
and
add
add
sub
add
lcall
adc
cmp
cwtl
cmpsb
sbb
dec
or
adc
xor
mov
adc
adc
fisubrl
xor
or
cmpsl
test
push
cmp
faddl
and
imul
fdivr
mov
dec
jno
aaa
or
es
pop
nop
je
inc
pop
mov
mov
jb
lea
push
adc
or
sarl
push
push
pop
cmp
or
mulb
jb
inc
fs
out
cmp
or
add
push
push
pushf
fs
sbb
lods
mov
daa
jne
nop
addl
or
xchg
or
shll
cmp
jns
sub
mov
test
xorb
in
jns
cmp
push
int3
mov
cld
or
call
lods
js
and
add
mov
pop
pop
pusha
clc
add
shrb
mov
loopne
add
stos
mov
mov
or
sub
or
and
stos
xabort
hlt
mov
and
test
dec
and
adc
inc
pop
mov
add
pop
add
test
add
adc
lock
inc
sar
add
xchg
dec
mov
popa
fidivrs
push
pop
pop
push
or
sti
es
gs
icebp
cmp
cmp
adc
sub
pusha
data16
sub
push
push
into
and
jmp
xor
and
testb
mov
pop
sbb
jne
ja
testb
mov
xor
test
add
pop
pop
subb
sub
inc
dec
dec
popf
cld
lahf
push
add
sbb
rcl
cmp
or
sub
in
inc
or
cmp
cmpsl
mov
and
cli
mov
xor
insb
push
data16
fwait
cmp
add
or
jne
pop
jae
add
mov
mov
jbe
sub
loop
cmc
cltd
pop
idiv
decl
mov
dec
add
add
pop
xor
test
push
mov
pusha
adc
loopne
push
rol
pop
adcb
cmp
psraw
push
cmc
lret
push
fimull
cmp
cmpsb
out
adc
mov
ret
xchg
pop
push
pop
aam
mov
aam
je
mov
jae
dec
adc
dec
or
sbb
cmp
push
add
push
in
sbb
inc
repz
jns
out
or
repnz
addr16
add
or
dec
mov
push
and
xchg
jle
pop
loope
pushl
push
inc
adc
push
pop
and
stos
dec
and
mov
movl
push
in
mov
addb
adc
cmp
sbb
or
jg
pushf
mov
fadds
pop
iret
inc
jecxz
inc
push
je
lret
faddl
idiv
mov
add
adc
fs
sub
jmp
daa
adc
inc
je
ds
insl
pusha
mov
popa
mov
or
dec
cmp
jbe
inc
mov
jmp
dec
je
add
or
pop
pop
fidivrs
pop
out
cmp
bound
insl
sbb
repnz
inc
add
sub
push
in
mov
push
jno
mov
fucomp
adc
sbb
push
push
mov
ss
test
mov
cmpl
push
add
jbe
arpl
iret
rol
xchg
lcall
push
push
addr16
jne
mov
addr16
fs
pop
add
dec
out
stc
and
pop
xchg
inc
jne
pop
imul
repnz
shrl
je
cmp
and
jl
dec
xchg
cmovp
cmp
ret
or
inc
pusha
mov
mov
mov
addb
pop
or
or
imul
jbe
leave
add
pop
lods
pop
jns
add
jmp
rorb
add
dec
pop
ret
inc
sti
xchg
jne
punpckhdq
sub
and
and
sub
push
pop
shl
or
and
sub
sbb
mov
cmp
push
data16
jae
out
jne
or
aas
cmp
or
loopne
jae
jbe
mov
push
mov
cmp
add
jl
or
push
mov
inc
sub
pushl
loop
pop
lea
add
sub
add
pop
iret
dec
xchg
sbb
call
test
rcrb
test
adc
int
pop
sbb
sbb
dec
and
sbb
shl
inc
jo
push
mov
pop
jle
mov
aaa
push
pusha
ss
scas
and
cli
or
lea
xchg
xchg
and
jae
pop
jle
pop
and
jo
imul
pop
mov
add
push
decl
jl
dec
jmp
pushl
dec
call
add
adc
sbb
push
sbb
outsb
dec
dec
dec
call
imul
sub
xor
cmp
and
push
push
dec
js
sub
out
enter
pop
ja
imul
cmp
lret
push
push
add
cltd
testb
dec
jmp
inc
lods
movsl
jne
lcall
jbe
sub
cmp
xor
inc
ret
add
je
or
inc
fsub
inc
mov
mov
push
jnp
fcomip
inc
cmp
pop
sub
adc
stc
xchg
clc
push
mov
sbbl
mov
cs
cmc
fwait
cmc
mov
imul
add
cwtl
jmp
pop
mov
inc
sub
pop
adc
movsl
dec
push
pop
dec
dec
or
cmp
pop
je
ret
add
adc
cmp
aaa
les
mov
jmp
dec
or
fiaddl
cmp
mov
xor
add
out
add
pop
push
mov
push
js
call
sarb
movb
push
adc
ret
xchg
insl
ljmp
lea
cwtl
push
push
mov
inc
push
mov
sbb
and
jg
add
add
add
mov
pop
fdivrs
mov
lret
inc
dec
aaa
rol
leave
cmpsb
xorb
stos
sub
dec
test
pushf
aad
scas
pusha
xchg
sub
jle
rcrb
cwtl
jge
xor
xor
pushl
mov
ss
push
pop
jb
add
sbb
xchg
sarb
cwtl
adc
inc
pop
enter
mov
jp
loopne
push
insb
scas
and
jbe
push
and
stc
mov
mov
and
inc
xchg
mov
sub
mov
jl
jge
cli
pop
jno
inc
xchg
icebp
adc
lcall
dec
add
movsb
sbb
ret
movsb
mov
pop
rclb
fcmove
push
gs
sub
fs
add
push
sbb
in
cltd
or
and
dec
pop
imul
and
dec
pop
pusha
scas
xorb
cmpsl
cld
jmp
cmp
mov
or
mov
xchg
idivb
lcall
inc
addl
cmpb
sarl
sub
dec
loopne
jnp
cld
jmp
adcb
jo
or
inc
push
nop
add
push
push
pop
inc
mov
mov
test
dec
lods
fucomp
outsb
ja
or
mov
add
lods
or
dec
call
cmpsl
dec
inc
pop
inc
test
lock
fiaddl
in
jmp
pop
and
lea
sub
xor
in
leave
cmp
xlat
es
sbb
jle
cmp
lock
fsubrl
push
or
jmp
jbe
loopne
jnp
adc
rcll
les
ja
fstpt
jne
mov
bound
popa
jp
bound
pushw
add
stos
loope
jns
push
adc
sbb
aad
iret
xchg
or
dec
lret
mov
adc
xlat
or
aad
mov
ds
mov
and
inc
ljmp
je
out
arpl
dec
add
add
inc
fs
inc
ja
lret
gs
fs
or
mov
mov
pop
mov
decl
cmp
jnp
xchg
push
and
adc
sahf
int
or
fs
hlt
push
ud2
loopne
sbb
jmp
push
pop
fs
inc
push
repnz
data16
js
popf
sbb
nop
push
lock
cmp
pop
mov
or
call
jns
jnp
mov
nop
push
cwtl
mov
test
mov
add
incl
loop,pn
mov
add
lcall
add
xchg
add
mov
dec
add
push
outsb
jmp
cmp
in
xchg
or
jnp
aas
push
or
fs
je
mov
fisttpl
jmp
testb
jne
pop
xlat
mov
rcrl
mov
js
sar
push
loope
or
xchg
add
loopne
jmp
push
jmp
mov
inc
and
jne
push
sbb
add
xchg
stc
adc
sarb
inc
and
cmp
add
adc
and
fnstcw
sbb
pop
dec
rclb
pop
movsl
stc
and
mov
xor
push
addr16
test
push
push
or
lods
pop
popf
push
or
jg
sbb
negb
je
movsl
fimull
mov
outsl
push
out
rcr
fstl
mov
adc
mov
rorb
data16
dec
inc
xor
addb
cwtl
or
fs
sbb
loopne
or
xchg
test
icebp
add
jns
adc
add
jmp
lods
push
rorl
mov
adc
ret
mov
add
sbb
call
cmp
rcrl
sbb
and
aas
xchg
out
sbb
xor
jge
rcrb
push
lock
fisubs
xor
rcrl
cmpsb
and
enter
add
add
shll
insb
clc
pop
std
movb
jmp
insl
xor
sbb
leave
sub
std
add
add
push
push
add
adc
push
sub
rcrb
loopne
xor
or
inc
and
push
repnz
test
cmp
adc
sub
and
imul
mov
xorb
or
mov
mull
mov
insb
jne
pop
daa
xor
inc
push
sub
xchg
negb
pop
pushf
nop
clc
lods
test
add
inc
pop
orl
lea
in
mov
mov
adc
mov
stos
test
js
rclb
or
test
jmp
add
fisttpll
imul
imull
int3
xor
aam
inc
xchg
insb
lret
or
xchg
push
sbb
xor
dec
or
rorb
mov
or
inc
inc
adc
shrb
iret
xchg
shlb
fcoml
fcomps
int3
mov
xchg
clc
or
test
mov
mov
mov
cmp
mov
add
hlt
fistpll
insl
xlat
sbb
aam
aaa
dec
cld
xor
loopne
rclb
test
lock
in
xchg
jno
insl
push
jne
sub
pushf
push
repnz
jmp
cli
ja
mov
mov
mov
cmp
or
xchg
mov
xor
pop
decl
data16
int3
int3
aam
xchg
jae
sbb
adc
inc
add
xlat
add
test
add
daa
or
fimuls
and
inc
scas
test
cltd
jecxz
dec
inc
mov
ret
xor
mov
test
jge
fmul
xchg
push
mov
adc
jbe
push
cmpl
sbb
jne
or
out
lcall
mov
jp
in
pop
jp
in
push
pop
divl
mov
dec
xor
xor
cmpsb
movsb
mov
dec
movsb
xor
lods
sbb
js
sbbb
dec
ljmp
jns
in
shl
mov
rcrl
add
add
mov
sbb
pop
sbb
pop
adc
lds
pop
fwait
and
cmp
icebp
and
and
push
pop
in
xor
lock
fnstsw
lock
or
or
mov
push
add
inc
xor
mov
in
cmc
inc
jge
fmull
orl
or
je
push
cmp
mov
cs
dec
ret
hlt
dec
or
test
outsb
out
or
shlb
pop
cs
fdivrs
orl
fisttpl
icebp
je
popf
bound
jp
imul
lcall
lret
or
xchg
loopne
sar
pop
xchg
mov
or
pop
add
cmpl
js
sti
les
ja
mov
loopne
pop
ja
add
mov
loopne
pushl
outsl
lahf
sbb
sar
pop
lods
mov
and
adcl
mov
or
shll
pusha
jns
lret
lods
push
sbb
dec
or
je
or
inc
mov
scas
mov
into
lods
pushf
pop
or
add
sub
dec
add
lock
addr16
adc
jg
pop
xor
sub
mov
mov
mov
scas
mov
imul
pusha
lea
ja
mov
mov
movsl
mov
mov
arpl
sbb
hlt
hlt
stc
cmp
int
je
or
inc
insb
add
test
push
test
fsubp
ds
fdivl
sub
fcmovne
in
ficoml
pop
and
js
add
push
scas
xor
data16
xor
rolb
inc
xor
movsl
mov
inc
fs
out
mov
cmp
outsl
movsl
mov
and
mov
adc
or
jmp
xchg
pop
cs
xchg
outsb
jne
xor
add
pop
das
add
into
or
jns
sbb
inc
je
pop
push
or
ds
mov
mov
inc
movsb
fdivrs
xchg
jo
adc
push
js
xor
adc
shll
jbe
je
push
arpl
imull
pop
fadd
loopne
pusha
and
xchg
aaa
aam
loope
jno
mov
add
ret
push
or
dec
and
in
inc
push
add
jl
dec
mov
sub
in
mov
mov
ja
addb
and
add
pusha
lock
addr16
insl
cmp
lock
adc
int3
pushf
inc
cwtl
jbe
sub
push
shll
jle
mov
pusha
bound
pop
cmp
mov
adc
test
dec
push
push
out
mov
inc
adc
inc
aas
mov
cmp
xchg
out
mov
pmaxsw
pop
mov
inc
lods
dec
pop
sub
xlat
mov
mov
dec
sar
dec
push
clc
call
mov
jmp
adc
sbb
divl
jle
pop
add
push
xor
loopne
add
jne
mov
ret
addr16
bnd
fstl
pusha
je
or
sub
cmpsb
filds
fsubrs
je
add
mov
dec
xor
inc
aaa
fistps
fsubrs
insl
cwtl
gs
xchg
xchg
dec
xchg
add
adc
adc
jns
sbb
std
dec
cwtl
lds
and
test
or
add
push
add
xlat
sbb
shlb
movsb
addr16
mov
xlat
out
xchg
hlt
jmp
cmp
jle
popa
mov
jl
and
pop
push
sub
mov
bound
pop
dec
push
orl
push
loopne
nop
std
shr
push
push
insb
push
dec
jb
mov
ret
inc
cmp
inc
cld
adc
xor
push
xchg
sub
mov
movsb
and
insb
jbe
mov
mov
fldt
jecxz
stos
sbb
add
push
mov
data16
in
cmpsb
add
sbb
inc
push
dec
pop
sub
aas
sub
inc
stos
movsb
loop
sbbb
js
test
inc
shrl
mov
sbb
pop
dec
xchg
mov
pusha
cld
or
mov
mov
push
inc
daa
add
inc
pushf
mulb
or
ret
sbb
lds
pop
jno
push
into
xor
jbe
mov
je
in
adc
dec
adc
adc
jb
nop
inc
cld
jmp
or
or
add
push
sbb
rorb
pop
jl
jae
add
sahf
neg
sub
pop
fidivs
test
jnp
or
xchg
cmp
sbb
or
cmp
lea
adc
and
lea
loopne
das
sbb
mov
inc
orb
and
inc
cld
adc
iret
mov
mov
dec
mov
stc
cmp
aas
mov
mov
inc
cmp
ljmp
popf
and
or
dec
shlb
xor
sahf
sbb
inc
jmp
movsb
xor
push
jmp
dec
dec
andb
pop
push
repnz
sar
ret
cmp
pop
mov
scas
sub
test
and
add
sub
jns
cmp
and
push
cmp
sub
or
pusha
inc
fmuls
mov
cmp
aas
dec
sub
std
mov
jg
inc
rcrl
sti
pop
mov
test
mov
adc
xor
inc
aam
adc
sub
sub
aam
pop
addl
add
sahf
mov
test
sub
jp
loope
lret
lcall
jg
sub
jns
jmp
pop
int
jae
or
fldenv
test
xorb
jo
arpl
js
pusha
outsb
push
jns
movsl
into
push
aam
add
adc
notl
movsl
daa
pop
mov
mov
sub
mov
rcrb
loope
mov
mov
cmp
add
mov
pop
pusha
testl
iret
neg
jno
push
outsl
shl
dec
pushf
popf
or
testl
enter
jb
cld
mov
jne
xchg
add
les
out
jmp
xchg
arpl
int3
sbb
insl
add
outsl
ljmp
xchg
pop
pop
jmp
mov
cmpl
ja
adcl
cmp
add
mov
lcall
mov
addb
lea
dec
loop
lea
jecxz
xlat
insb
sub
aam
jo
rcll
or
and
gs
call
fmuls
mov
std
dec
mov
cltd
bound
out
jmp
mov
mov
add
and
cmc
inc
sahf
inc
lret
mov
mov
icebp
push
jl
ss
out
dec
ss
or
loope
sub
fwait
sub
push
sahf
data16
mov
test
add
ljmp
shlb
call
mov
mov
clc
mov
cmp
pop
call
loop
push
arpl
sbb
jge
push
jo
and
fadds
add
or
jg
push
xchg
sbb
pushl
insl
and
lahf
ja
sbb
and
add
push
mov
stos
mov
stos
pop
ja
cmp
faddl
adc
adc
jmp
inc
loopne
dec
xlat
cltd
in
or
pop
adc
out
sub
test
add
jmp
and
jp
ja
mov
or
sbb
or
or
leave
sub
rolb
pop
sbb
pop
addr16
or
jge
int3
mov
sbb
or
outsb
orl
jb
aad
sbb
shlb
add
pop
pusha
add
pop
mov
ret
insb
add
add
test
neg
pop
push
pop
and
xchg
addb
hlt
cmp
cmp
push
lcall
mov
pop
cmp
lods
mov
icebp
rclb
loope
inc
jge
sti
cmp
pop
xor
xor
ss
or
cld
jnp
roll
jbe
sbb
mov
sub
fadds
push
inc
sar
sub
lret
sbb
adc
mov
aam
sub
jne
lock
in
xchg
push
mov
popa
mov
cmp
pop
push
add
arpl
lods
cmp
ret
gs
or
mov
mov
lock
sbb
dec
jb
mov
shl
fdivs
sub
sti
std
and
xchg
inc
sbb
xor
jo
loopne
mov
pop
and
das
sub
outsb
pinsrw
add
mov
test
inc
test
ja
imul
add
lcall
je
je
fbld
outsl
cltd
jge
jne
jg
xchg
enter
push
int3
push
fnstsw
push
and
ret
xchg
insb
push
lea
mov
out
adcb
mov
push
add
sbb
dec
adc
imul
or
outsb
mov
dec
adc
cmpsl
dec
enter
xchg
inc
loope,pn
iret
add
adc
add
fld
pop
adc
iret
xor
inc
sbb
test
xchg
data16
xor
push
mov
xchg
push
cld
mov
int
les
sti
sbbb
or
add
xchg
lret
push
sbb
add
jno
lods
jg
xor
dec
or
push
into
cltd
and
xor
and
add
jb
hlt
jmp
mov
jmp
and
cmp
xchg
das
jbe
insb
add
or
add
add
scas
enter
aam
and
sbbl
xchg
orb
je
rcl
mov
add
add
enter
shl
mov
cmp
dec
adc
lret
test
js
test
jo
cld
shlb
xchg
dec
jb
jmp
imul
sub
push
mov
dec
xchg
and
lcall
sti
out
inc
cmpl
jne
push
cmp
sub
mov
or
nop
inc
ljmp
pop
and
jb
mov
and
es
lods
clc
hlt
lods
dec
movsl
mov
fdivl
pop
jl
cmp
and
mov
lock
ret
pop
fiaddl
test
sbb
fbld
pop
bound
mov
stc
data16
cli
pop
ja
fnstsw
stos
movzbl
jo
xchg
les
add
or
adc
nop
push
fnstenv
mov
push
push
pop
ja
outsb
inc
mov
fsubr
pop
out
mov
outsl
inc
dec
xor
and
pop
test
jl
mov
shrb
adc
push
aas
pop
in
pop
mov
add
sbb
mov
push
adc
sub
and
fnsave
pusha
cmp
leave
jecxz
scas
leave
orl
jmp
mov
cmp
pop
cmp
rorb
outsb
and
cmp
jbe
mov
adc
and
push
mov
insb
jnp
jmp
das
pop
lret
dec
jnp
cmp
xor
mov
and
push
dec
inc
dec
dec
dec
dec
cmp
es
sti
cltd
add
test
sbb
movsb
imul
cltd
add
add
or
scas
xchg
xchg
pop
dec
ljmp
je
xor
in
clc
adc
add
push
mov
adc
test
push
xchg
fcoms
and
add
fsubr
int3
mov
cs
sub
dec
xchg
and
fmuls
mov
and
sub
std
add
push
sahf
xchg
xchg
mov
fdivr
add
and
sbb
and
xchg
mov
ljmp
cli
mov
mov
mov
cmp
and
pop
mov
in
pop
or
sbb
call
jb
xchg
mov
xchg
mov
mov
sub
add
lcall
sbb
xchg
out
mov
lahf
inc
sub
lods
lret
xchg
sbb
das
mov
call
call
pop
cwtl
lods
and
enter
lods
mov
dec
fmuls
loopne
inc
and
rcrb
repz
sbb
cwtl
and
imul
in
or
mov
fdivrl
push
enter
nop
je
test
fadds
sbb
movsb
jb
in
xchg
dec
jb
sbb
in
xor
outsb
push
inc
out
push
dec
jbe
sbb
daa
pop
lods
icebp
call
and
outsb
mov
or
mov
fistps
mov
push
out
jns
dec
addl
orb
xchg
lods
mov
pop
pop
add
push
aas
jmp
or
pop
scas
js
and
test
cli
insb
pop
mov
ret
test
dec
subb
lret
jp
cltd
ret
xchg
in
and
scas
sub
dec
fwait
adc
add
and
in
lods
mov
adc
push
jmp
add
adc
adc
or
pop
cmp
rclb
add
add
andl
sahf
cmp
pop
rcrb
in
jmp
mov
inc
test
dec
scas
in
aaa
sbb
mov
or
fstpt
popa
adc
ljmp
cmp
cltd
adc
insb
inc
leave
or
mov
push
push
nop
sbb
rorl
push
push
add
sbb
scas
mov
push
add
add
hlt
push
sahf
into
mov
inc
scas
add
jnp
mov
sub
loopne
adc
or
jns
cmp
push
or
in
mov
inc
fs
push
jo
inc
fsts
mov
xlat
add
cmpl
sub
mov
dec
or
mov
mov
inc
in
repz
or
repnz
sub
filds
sarb
mov
ret
add
out
mov
jg
hlt
mov
jle
xor
insb
xor
out
and
mov
stos
or
add
ja
sub
stos
add
and
adc
bound
mov
xor
inc
xchg
adc
jbe
loopne
in
ja
ficoms
push
push
cmc
cmp
xor
sub
cmp
mov
cld
inc
pop
jae
mov
in
xchg
int
push
xorb
adc
adc
movsl
xor
and
push
loope
out
addr16
pop
mov
push
out
sub
mov
dec
leave
sub
mov
cmp
and
adc
sti
cmp
ja
mov
cmp
dec
stos
mov
sbb
and
jmp
pop
mov
mov
psrlq
add
xorl
jo
insb
pop
add
insb
add
xchg
xchg
lods
jmp
xchg
inc
xchg
mov
pop
mov
mov
lcall
js
jno
jnp
sahf
test
mov
push
insb
cmpsl
addr16
dec
lods
xchg
push
jmp
mov
shll
xor
xor
sbb
or
fsubrl
add
jne
movl
inc
and
mov
std
jne
mov
cmp
cmp
les
rolb
and
adc
add
testb
or
pushw
push
testl
cmp
push
or
mov
jg
scas
or
jb
subl
aam
push
jmp
lock
inc
add
test
xchg
outsl
push
and
stos
inc
dec
lret
rolb
jg
pop
push
jnp
jae
cmp
jbe
sbb
shl
jne
mov
mov
inc
inc
push
leave
inc
pop
lea
sbbb
lahf
ror
loopne
mov
push
bound
push
enter
std
sti
mov
loopne
cmpb
or
lret
cmc
lcall
mov
shlb
inc
lock
add
jb
mov
frstor
mov
inc
xchg
push
mov
mov
nop
sbb
add
mov
pop
xchg
push
and
out
dec
pop
jge
cmc
jne
mov
xor
sbb
add
idivb
shrd
jbe
mov
notl
lock
dec
jne
mov
nop
icebp
mov
jmp
lds
adc
jnp
cmpsl
cmp
lcall
fs
adc
aam
loopne
adc
ficompl
pop
arpl
inc
mov
in
test
adc
and
or
mov
mov
mov
or
and
and
cltd
xor
xlat
sbb
pop
xor
push
mov
cmpsl
mov
mov
push
adc
call
testb
insb
ljmp
add
add
and
sub
or
or
xor
or
lock
pop
into
dec
icebp
std
insl
xor
rorb
call
imul
or
mov
mov
add
scas
add
pusha
sbb
aaa
test
ljmp
insl
adc
jno
daa
ljmp
xchg
and
xor
int3
adc
cmp
sub
add
mov
loope
push
and
ljmp
or
pop
xor
loopne
jl
and
xor
xor
sbb
mov
lea
pop
push
pusha
jbe
sahf
cmpl
test
add
cmpl
sbb
pop
jb
pop
ret
adc
or
add
jo
dec
pop
jo
sbb
jo
adcb
sub
xchg
push
test
add
lock
je
mov
xorb
and
movsb
xor
mov
mov
lods
pushl
addr16
rolb
cld
mov
lahf
xor
mov
rolb
fiaddl
les
outsl
mov
imul
shl
sbb
and
cmpl
cmp
cwtl
daa
sbb
aas
ljmp
jle
jg
je
lcall
js
test
pop
cld
mov
add
add
inc
and
mov
sbb
or
mov
push
mov
fnstsw
inc
and
cwtl
pop
es
or
mov
test
add
stos
gs
dec
lock
pushf
push
mov
sub
aad
add
mov
insb
std
pusha
xor
leave
cltd
jmp
lcall
cmpsb
shr
push
dec
jb
add
sti
pop
clc
ret
or
or
fisttps
and
add
xor
add
dec
outsl
les
test
push
push
inc
lcall
aas
mov
scas
push
mov
vcvttsd2usi
icebp
das
aam
mov
hlt
addb
ret
movl
sbb
adc
jmp
imul
ja
or
lock
dec
add
jg
dec
pop
ss
lahf
xchg
fwait
pop
flds
inc
cmp
or
push
bound
imul
arpl
mov
test
sbb
imul
and
test
lcall
loop
add
popa
mov
add
nop
push
aas
cmp
addr16
adc
test
cwtl
ret
push
or
or
fnstenv
not
call
icebp
mov
adc
xchg
adc
sbb
cwtl
jns
fwait
and
orl
cmp
inc
pop
cmp
add
cmp
mov
and
ds
add
mov
jmp
push
dec
dec
dec
lds
xchg
hlt
imul
cmp
test
cmp
nop
mov
jg
push
fsubrl
jge
adcl
jp
pop
or
dec
pushf
lock
inc
mov
nop
and
cmp
and
daa
jle
jp
inc
push
daa
xor
roll
and
mov
in
inc
call
clc
mov
push
mov
jo
aad
imul
or
in
enter
push
inc
pop
fstpt
push
sub
jl
jp
loop
in
arpl
push
and
pushf
jg
push
mov
mov
adc
mov
inc
outsl
js
into
pop
mov
mov
adc
push
psubsw
mov
sub
shlb
add
mov
int3
js
or
leave
jp
jmp
vmovd
nop
lret
rol
std
mov
cmp
adc
ds
fs
ja
and
add
sbb
or
add
adc
pop
popw
sar
pxor
push
push
shrb
add
loop
shr
je
sub
mov
mov
inc
adc
and
mov
push
pusha
jo
mov
mov
inc
enter
shlb
lods
mov
add
xor
push
fsubrs
pcmpeqb
xor
lret
or
sbb
add
jne
jecxz
push
xor
je
sbb
cli
pop
pop
ret
sbb
bound
sub
sbb
sahf
out
mov
shll
add
cli
shr
add
aas
sbb
jb
push
adc
cmp
jb
xchg
aad
out
notb
in
daa
mov
xchg
outsb
adc
mov
pop
movsb
adc
adc
push
mov
push
pop
and
not
and
or
mov
test
dec
xor
mov
jl
dec
je
mov
add
bound
xor
push
cmp
xchg
cli
sbb
insl
sub
aaa
sub
test
cmp
push
lods
or
rcrb
les
xchg
cltd
cmpsl
icebp
ret
xchg
cmpsl
fdivl
dec
mov
xor
and
loopne
into
adc
jnp
dec
push
push
call
lock
rcl
adc
jle
movsb
jnp
pop
arpl
or
xchg
jnp
addw
cmpl
pushf
jp
loop
fadds
mov
sbb
add
into
das
add
pop
jmp
sbb
dec
add
and
sbb
je
or
add
cmc
clc
jmp
cmp
or
adc
jmp
add
push
sahf
ja
pushf
in
xor
xorb
movsb
fld1
or
sbb
loopne
fmull
stc
sbbb
mov
das
sbb
mov
pop
aaa
jnp
jmp
adc
loope
pop
les
mov
adc
mov
adc
lock
xor
fstl
mov
shl
adc
rcll
jl
jne
lea
xor
fimuls
inc
pop
leave
mov
pop
out
cmp
sub
cmp
sahf
idivl
pop
addr16
test
sbb
out
cmpxchg
std
dec
adc
push
neg
stos
or
cmp
mov
ss
mov
pusha
jne
inc
add
mov
sbb
loope
das
add
pusha
push
inc
inc
add
dec
cmp
inc
adc
push
push
cltd
jmp
inc
inc
sbb
faddl
std
mov
push
jmp
test
push
repnz
jb
fucompp
jg
jge
test
jp
xchg
and
ret
and
fst
fidivs
push
push
test
jmp
rol
push
xor
sub
or
mov
lret
aaa
sbbb
add
fdiv
xor
push
ret
lret
cwtl
mov
sbb
pushl
pop
xor
jle
mov
std
mov
and
mov
sti
jmp
push
mov
shll
fucomip
stos
bound
sub
dec
add
pop
jo
mov
testb
push
scas
jns
lret
outsb
enter
cmpsl
shll
push
add
mov
ret
add
push
or
sub
ret
dec
ret
subl
iret
push
pop
fcmovne
mov
lods
or
push
mov
or
xchg
xor
aam
add
rolb
fsub
jb
lods
test
test
std
mov
xchg
and
mov
lods
std
mov
call
jne
repz
mov
add
imul
dec
daa
add
mov
hlt
stc
xor
lea
hlt
mov
add
mov
sub
push
push
or
mov
xchg
out
sar
or
cli
cmp
or
cmp
shl
push
sbb
dec
mov
mov
ja
jnp
cmpsl
jae
xchg
mov
sub
shl
jl
xor
push
rol
popa
dec
dec
jne
scas
push
pop
or
add
sub
add
inc
xchg
add
push
lahf
adc
mov
imul
lea
or
mov
mov
and
push
sbb
sti
popa
ss
test
mov
xlat
mov
or
inc
dec
mov
push
or
cmp
sbb
jne
inc
rol
fisubrl
push
pop
aad
pop
scas
pop
adc
and
sub
pop
add
jne
cmpb
movl
nop
cmpb
xor
dec
inc
xchg
mov
test
icebp
cld
cmp
push
jmp
xor
jne
js
dec
lds
pop
leave
mov
sub
adc
movsl
lods
scas
push
push
pop
sbb
dec
cmc
clc
mov
push
xor
lea
pop
or
jecxz
dec
jbe
push
clc
movsl
aad
inc
idivl
push
mov
nop
sar
popf
jle
push
or
mov
call
inc
lea
hlt
std
test
mov
js
inc
lcall
fwait
lods
lock
jnp
jl
fwait
cwtl
add
cmc
cmp
sbb
nop
xchg
stc
mov
jo
cmpsb
test
adc
add
adc
loope
mov
sub
mov
mov
scas
push
rcl
jns
xlat
loopne
push
daa
mov
cwtl
add
cmp
pushl
mov
cld
sbb
sbb
fs
push
sub
test
inc
mov
hlt
fisubl
jmp
mov
or
jno
or
mov
or
or
testl
pop
pop
pop
mov
adc
jp
std
sub
repnz
fdivl
push
sarb
std
and
sub
pop
mov
ret
sub
or
xlat
add
sbb
adc
sub
inc
outsl
lds
and
insb
loope
and
push
mov
shlb
push
jne
sub
nop
mov
push
cmp
aaa
loope
pop
fmull
cmpl
mov
sbb
sbb
loop
add
pop
mov
ret
sbb
mov
in
out
push
mov
cmp
sbb
mov
sub
je
or
or
mov
or
push
inc
outsb
push
pop
cmpsl
pop
and
push
stos
mov
sub
jo
pop
add
test
scas
test
xchg
mov
daa
add
sbb
sub
jo
inc
add
stos
dec
push
daa
push
xor
fwait
test
ret
mov
add
push
inc
inc
dec
dec
sub
add
stos
mov
jb
add
add
and
sub
xchg
les
ljmp
or
std
sub
jecxz
incl
addb
sub
cli
sub
fldl
or
add
popf
fnstsw
dec
data16
in
add
xor
add
mov
xchg
testl
shrl
or
or
cmp
aas
lds
push
sub
sbb
jmp
test
movsb
cwtl
mov
sbb
jg
mov
cmp
test
inc
loopew
jne
repz
mov
dec
mov
sbb
sub
fisttps
ds
rcrb
aas
mov
add
pop
jmp
fwait
sarl
lahf
fstpt
sbb
orl
icebp
mov
je
push
push
mov
inc
push
ficoml
xchg
add
add
jmp
test
mov
movsl
scas
jmp
int
xor
in
sub
mov
inc
pop
sub
xor
ljmp
adc
mov
xchg
adc
mov
xchg
daa
pop
mov
mov
push
adc
test
mov
lea
add
and
cltd
or
ret
push
cwtl
test
mov
cmp
ss
push
xchg
dec
sub
mov
mov
movsb
mov
add
push
push
rcrb
and
pop
xor
es
pop
pop
xchg
push
stc
movsl
or
lcall
fcoms
pop
xchg
mov
popa
arpl
int3
cmp
jns
hlt
repnz
mov
pop
jecxz
xor
push
jecxz
xchg
add
mov
xchg
push
xchg
xchg
stos
xchg
aad
cmp
scas
movsl
cmp
mov
stos
jno
scas
mov
aad
stos
sbb
test
mov
or
xlat
adc
and
ss
mov
push
mov
xchg
xchg
xchg
xchg
in
aad
push
xor
mov
or
mov
lea
push
movsb
jb
jns
ljmp
cltd
pop
xchg
push
test
pop
dec
inc
mov
gs
xchg
movsl
xor
dec
sub
stos
lea
xchg
xchg
es
movsb
sub
sub
sbb
dec
stos
sbb
jbe
push
vprotq
in
fdivs
xor
xchg
sbb
xchg
nop
mov
fsubrs
inc
sahf
add
mov
mov
mov
subb
mov
test
and
jb
pop
pop
jg
xchg
xchg
and
inc
dec
dec
and
sub
adc
mov
arpl
ds
aaa
leave
jne
adcl
push
andl
inc
lods
lods
lods
jbe
movb
jne
sarl
leave
js
rorb
rorb
movsl
sbb
imul
mov
sbb
add
adc
dec
div
mov
test
xchg
sub
sub
xchg
mov
fwait
ret
jle
sub
jnp
icebp
rol
or
imul
popa
add
divb
addl
aaa
and
pop
inc
or
pop
pop
pop
add
sbb
push
fcmovb
inc
and
cmp
inc
push
sbb
icebp
push
mov
pop
and
fildll
sti
mov
push
jmp
mov
jns
add
push
mov
lret
outsb
jg
mov
mov
and
leave
cwtl
pop
mov
jp
cmc
adc
shl
lock
xchg
rep
dec
pop
flds
push
testb
shlb
and
rolb
mov
lcall
leave
jno
or
outsb
adc
hlt
mov
mov
jne
sbb
adc
inc
and
mov
add
adc
sbbl
inc
dec
ret
repz
std
inc
add
shr
je
dec
fwait
clc
jl
dec
std
outsl
push
push
dec
adc
push
and
jns
cmpsb
dec
and
dec
push
pop
test
out
outsl
inc
or
jbe
jle
call
outsl
ja
jo
aaa
and
int3
in
and
mov
pop
dec
in
mov
pop
ffreep
lea
lea
inc
out
sub
dec
mov
imul
mov
xor
push
sbb
pusha
or
ljmp
ret
jns
jg
mov
lret
ret
mov
xchg
pop
jnp
call
push
add
dec
or
add
insb
clc
push
add
push
sbb
dec
into
mov
mov
jmp
dec
or
xchg
lea
in
cwtl
rcr
and
push
push
dec
or
shr
xchg
cmp
add
sbb
or
mov
dec
and
hlt
add
jmp
mov
lcall
mov
jae
les
xorl
outsl
clc
pop
xchg
jne
cmpl
jne
inc
adc
and
cmp
out
or
cmp
inc
divl
lds
rcll
rcrb
mov
popf
ret
pop
rcl
adc
rclb
fisttps
sub
add
xor
mov
iret
mov
sub
and
test
cli
add
or
cld
and
mov
inc
loopne
rorb
xchg
clc
sub
mov
loopne
jns
ret
andl
or
stc
mov
jl
mov
adc
mov
pop
pop
inc
cmpl
pop
addl
cmp
nop
sub
lea
inc
scas
or
cs
push
in
cmp
mov
pop
adc
pop
jp
inc
fs
addl
xor
pop
shll
sahf
pop
loop
xchg
test
mov
loope
rorb
cmp
out
stc
and
mov
mov
sbb
mov
or
rcll
or
adc
aad
and
lods
andnps
cmp
popf
ret
cmpsl
xchg
adcl
andl
test
mov
out
mov
mov
mov
xor
xchg
jmp
outsl
mov
jbe
add
imul
gs
push
inc
icebp
sbb
adc
and
jle
add
incl
frstor
mov
rcrb
pop
pop
add
out
push
stos
jmp
dec
adc
sbb
add
add
pop
adcl
movsl
mov
xor
sbb
sbb
and
pop
dec
xor
or
lret
or
cld
or
outsl
xchg
xchg
je
or
jne
dec
mov
dec
inc
shrb
sub
dec
jbe
fisubrl
add
sub
fisubl
icebp
sub
aas
movsl
adc
jl
ss
add
inc
cs
je
cmp
pusha
mov
pop
fistpl
mov
and
and
push
leave
shl
cmp
push
jb
add
push
pop
fiaddl
jle
in
loope
aam
popf
addl
sbb
push
int3
mov
push
mov
andl
adc
mov
aad
inc
cli
mov
ds
and
es
and
pop
pop
sbb
cmp
adc
add
scas
inc
xchg
fst
adc
dec
xor
rol
xchg
shlb
inc
pop
jae
jmp
in
and
jae
lea
add
add
imul
lret
mov
outsb
daa
orl
or
dec
pop
xchg
test
loope
adc
daa
mov
sti
mov
negl
jo,pn
xor
into
js
push
je
jg
subb
clc
push
sub
lea
mov
fstps
or
xor
push
xor
xchg
xor
pop
dec
hlt
jg
test
in
push
push
pop
push
jmp
int
sarl
push
daa
loope
pop
mov
es
mov
jae
lock
repz
lock
mov
adc
movb
xchg
shr
hlt
xor
dec
inc
xor
mov
cmpl
push
pop
adc
call
pop
call
lret
sbb
dec
lret
xor
fidivrs
out
outsb
cmp
or
inc
clc
out
mov
addl
pop
std
scas
add
faddl
add
cmp
mov
xor
aas
cmp
or
rcrb
cli
roll
cmp
jb
scas
daa
les
out
nop
push
test
ljmp
pop
add
jp
push
or
or
testb
or
sbb
cmp
pop
ret
add
xor
jmp
jns
shll
inc
adc
mov
pop
push
push
mov
xchg
inc
jo
sbb
dec
rcll
xchg
mov
mov
xor
push
orb
ret
in
jmp
mov
jmp
lea
adc
cmc
cmpsl
loop
add
shrb
fnstenv
mov
mov
jne
ja
pop
inc
jmp
aam
adc
daa
into
push
je
push
mov
movl
pushf
mov
add
lods
push
aam
mov
test
push
pusha
cmp
mov
and
aam
push
loope
sub
arpl
loop
sub
dec
out
mov
pop
jne
call
and
sbb
xor
clc
dec
dec
cld
cltd
mov
sbb
lock
jbe
paddq
shlb
xorb
mov
mov
test
push
and
sub
adc
bound
and
add
loopne
arpl
inc
jge
ja
xor
orb
cmovo
add
ret
mov
sbb
mov
repnz
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
sarl
fbstp
jmp
mov
or
push
push
lock
or
xor
xor
mov
adc
in
cmp
cmp
inc
cmp
fistpll
jbe
xor
iret
repz
mov
call
addb
pop
pand
sub
adc
adc
xchg
sbb
sbb
out
adc
cwtl
out
orb
rolb
dec
add
push
xor
xchg
ficomps
out
xor
push
clc
stc
inc
and
or
mov
lea
push
dec
bound
imul
lahf
hlt
xor
dec
add
arpl
and
roll
adc
pop
xor
and
push
inc
and
rcr
sub
popa
push
xchg
fisubrs
out
ret
xor
inc
and
jne
xchg
add
cs
pop
mov
sbb
cmp
jle
adc
sbb
dec
cmp
pushf
roll
sbb
loop
dec
hlt
jge
inc
push
sbb
cmp
jne
jge
je
cmp
insl
hlt
add
cs
in
sbb
outsl
or
push
cmp
and
and
int3
test
sti
std
into
test
mov
aas
ljmp
add
lods
fsub
scas
mov
hlt
in
out
int3
add
test
adc
inc
sti
rcl
jno
ret
scas
sahf
inc
enter
cmp
and
inc
pusha
adc
jno
and
scas
sub
sub
ss
ja
test
lahf
adc
movsb
je
loopne
mov
dec
or
push
jmp
fistps
push
aas
clc
lock
or
lret
jb
pusha
lods
and
insb
xchg
add
push
xchg
dec
loopne
adc
mov
push
out
adc
sub
adc
and
lea
or
adc
test
mov
lock
push
je
scas
sbbb
sub
pop
fdivs
bswap
mov
and
jb
lret
lock
pop
xchg
fadds
ret
sub
xor
jmp
pop
push
outsl
and
testb
rcl
push
or
imul
dec
fcoms
or
out
ficompl
lret
fs
lsl
jmp
cld
out
int3
jnp
pop
push
push
inc
shr
rcr
shr
rcr
or
and
div
pop
dec
push
out
fucomip
xchg
adc
out
jb
cmp
or
cmp
out
pusha
out
or
xor
and
adc
sbb
fimull
hlt
lret
stos
mov
fxch
pop
ret
jecxz
rcl
adc
je
add
sar
jbe
mov
add
testl
add
cmpb
fwait
mov
jl
sbb
cwtl
jbe
xchg
or
dec
scas
fs
jbe
or
mov
cli
popa
shr
cmp
and
xlat
sahf
stos
sbb
sbb
xchg
jb
xorb
loopne
mov
clc
or
push
inc
les
inc
push
jmp
outsl
xlat
mov
mov
dec
fs
js
add
mov
push
jae
cmp
xor
push
into
jmp
insl
rorl
push
out
push
push
sbb
mov
pusha
test
cs
shlb
clc
loop
and
test
jmp
dec
and
push
pop
ret
mov
nop
or
orb
inc
and
add
xor
sar
pop
push
dec
inc
aaa
sub
push
pop
lret
jne
xor
jo
add
or
cmpsb
mov
fiaddl
add
iret
mov
xchg
jne
xor
nop
out
mov
rcl
inc
jmp
inc
cmp
mov
sub
push
xor
shll
es
fidivs
mov
pop
dec
or
add
imul
imul
mov
add
and
or
and
mov
add
mov
subl
mov
sub
xchg
loopnew
push
pop
shrb
pop
outsb
call
xchg
in
adc
push
jns
pop
mov
and
add
jb
sub
sbb
dec
rol
cli
add
cmp
or
popa
clc
adc
aaa
push
jne
dec
je
mov
xor
xorb
add
xchg
adcb
mov
or
addr16
sbb
mov
push
sbb
dec
cs
jb
add
out
ljmp
push
dec
subl
mov
popa
inc
adc
in
nop
jo
sti
inc
mov
sarb
sysenter
inc
jo
cmpsb
aam
jge
mov
sarb
ret
je
mov
ret
sub
cmp
xchg
or
imul
push
aad
shlb
shrd
in
adc
jne
cmp
pop
aas
jmp
adc
outsl
push
pusha
dec
in
cmp
adc
and
imul
and
xor
inc
rclb
fmull
fcoms
in
aad
nop
aam
add
inc
inc
fidivl
roll
cmp
jae
add
mov
sub
mov
sub
and
pop
sub
cmc
mov
adc
inc
jmp
fisttpl
cli
cmp
cmp
mov
mov
imul
shrb
sbb
push
adc
inc
or
cmp
inc
or
fistps
in
inc
jecxz
arpl
pop
cmpsl
rol
je
mov
cmpsb
mov
pusha
pop
fdivr
lock
xor
icebp
xor
and
jae
push
loopne
add
push
mov
jne
and
add
xor
stos
iret
adc
ds
mov
loopne
push
adc
loop
or
pop
push
cmp
jge
repnz
xor
jae
shlb
xchg
pop
sub
inc
xor
test
enter
scas
add
sub
ret
fdivr
sbb
mov
in
push
pop
inc
pop
ret
sti
aas
imul
push
sbb
xchg
push
xor
sbb
add
jl
jns
and
jecxz
les
ljmp
jmp
jp
xor
mov
andb
lea
ja
mov
sub
xchg
sbb
adc
orl
test
or
add
adc
mov
push
pop
enter
lret
push
inc
mov
arpl
add
cmp
sbbl
pusha
or
sub
rclb
lock
ja
or
stc
loopne
addr16
xor
shrb
and
adc
mov
pop
dec
adc
mov
inc
inc
mov
mov
or
dec
add
mov
or
xor
mov
inc
sti
sub
xchg
cli
adc
lea
lea
or
lods
and
aas
jg
jge
pushf
and
jno
push
sbb
add
lods
or
dec
pop
dec
pop
inc
add
jmp
jge
mov
dec
jl
and
enter
sbb
push
pmaxub
add
pop
inc
mov
ret
iret
dec
and
pushl
and
pop
jno
push
adc
pop
jmp
loop
mov
push
xchg
push
test
push
xor
mov
add
add
jle
mov
out
push
push
mov
pop
sub
es
ds
push
andl
sbb
rclb
or
mov
jge
or
popf
movsl
lcall
js
add
sub
mov
stc
dec
mov
in
xchg
cmp
and
mov
sub
sub
rcrl
hlt
add
inc
scas
test
pop
xchg
add
call
scas
outsl
adc
adc
dec
adc
inc
pop
cmp
mov
aam
call
out
andl
loope
sbb
pusha
pop
pop
fistpl
shld
ss
fisubrl
test
loopne
jbe
push
ds
push
sbb
ret
push
imul
add
clc
movd
cmp
jmp
lods
cmpl
dec
or
jl
dec
femms
push
jmp
and
xchg
jnp
pop
cld
sbb
mov
push
or
add
sti
clc
adc
lods
inc
daa
sbb
xor
inc
jge
adc
test
adc
sbbl
lea
iret
dec
inc
inc
and
inc
push
or
sarl
push
jle
outsb
adc
fiaddl
push
or
in
xchg
jp
mov
push
mov
fsubr
das
jg
mov
pusha
inc
jmp
lcall
sub
jl
mov
pand
cmp
xor
add
xor
push
sub
jl
or
lods
test
inc
aam
int3
inc
push
push
nop
lods
adc
mov
cwtl
or
xor
mov
dec
jmp
adc
cmp
lea
and
mov
cmp
jb
pop
xor
or
or
push
mov
cs
test
or
xchg
dec
loop
pop
dec
test
and
lcall
and
mov
insb
add
cmp
hlt
mov
test
sub
sub
adc
cmpsl
jl
and
cmc
and
fsubl
inc
mov
movsb
andl
jmp
mov
jb
test
stos
popf
add
mov
and
fildll
push
test
fdivrl
das
cwtl
cmp
lods
or
cld
jle
sub
cmp
xor
add
arpl
push
in
jbe
bound
punpckhbw
cmp
rcll
jnp
fimuls
lock
inc
fs
pop
loop
sbb
mov
sub
shll
add
mov
pop
jge
negl
cmpb
shr
scas
jbe
nop
add
jne
out
dec
jae
in
je,pt
jmp
mov
or
pusha
cmp
push
jmp
and
out
add
xchg
rclb
bound
pop
push
sub
xchg
adc
dec
cwtl
xor
sbb
push
push
and
push
sub
cmp
mov
pusha
popa
cmp
sub
mov
cmpsl
gs
loopne
je
mov
dec
faddl
data16
nop
mov
mov
js
cld
mov
jo
repnz
cmpl
pop
orb
or
xchg
call
mov
dec
loop
repnz
and
lea
cmp
mov
push
jg
cmc
jecxz
sub
pop
pop
push
push
inc
jmp
cmp
mov
xor
dec
loop
dec
mov
dec
xchg
hlt
xchg
mov
dec
or
add
and
fsubrs
cwtl
jge
shll
mov
dec
adc
mov
lcall
test
cmp
loope
or
sub
sbb
subb
pop
jle
sub
inc
xor
mov
push
stos
adc
pusha
ljmp
loopne
dec
push
fsubrp
lods
sarl
add
mov
mov
sbbl
and
lea
push
inc
jge
movsl
and
rolb
mov
into
xchg
clc
xor
xorb
xor
or
jne
mov
or
shll
roll
or
test
js
inc
dec
pop
push
aaa
add
jae
stc
jne
aas
mov
push
or
mov
rcrb
ja
mov
xlat
call
mov
inc
testl
out
jne
mov
xchg
jo
test
into
fiaddl
jne
inc
or
test
and
sbb
push
cmc
int3
sbb
add
adc
jbe
ret
rcrl
test
push
pushf
data16
leave
inc
push
lea
lcall
xor
mov
adc
sub
sbb
xor
cmp
jb
pushf
add
lods
push
add
and
incl
cmpl
insl
mov
xorb
jg
loopne
push
test
jg
add
add
rolb
ret
push
sub
pop
aam
gs
call
testb
shr
and
jbe
or
push
sahf
pop
cli
gs
mov
dec
sub
inc
mov
mov
or
addb
divb
shrb
mov
push
shrl
shl
shr
or
mov
fcom
adc
sahf
dec
mov
jne
outsb
mov
lcall
jge
outsb
pop
sub
push
cmp
sub
jne
cli
push
ret
sub
rcr
and
adc
sbb
jg
lcall
or
or
lds
push
fisubrl
push
and
out
and
mov
xor
mov
push
jl
dec
int3
int3
jmp
shll
or
daa
mov
adc
lret
into
jmp
lods
lea
xorb
xor
cmp
add
xlat
xorb
mov
xorb
mov
jmp
sub
test
sbb
push
push
jns
add
adc
les
ret
adc
mov
inc
mov
inc
push
js
test
push
push
jnp
mov
mov
sahf
divb
iret
xchg
cmp
dec
cmpb
fcomp
push
dec
xor
outsb
loope
stc
mov
pusha
daa
jl
and
rcll
mov
adc
add
testb
ret
incb
pop
daa
lea
clc
addr16
sub
mov
movsb
xor
daa
add
cmp
push
or
push
xor
ds
mov
xor
add
mov
xchg
movhps
aad
cwtl
or
jne
add
adc
push
push
xchg
shl
int3
or
loopne
aad
sbb
dec
in
xor
shrb
add
repz
js
mov
push
fnstcw
xor
imulb
es
insl
imul
sbb
lcall
jecxz
jecxz
lahf
adc
mov
pop
lea
and
pop
ret
fwait
mov
mov
sbb
sahf
adc
mov
cld
dec
sbb
mov
xor
ret
and
mov
push
fdivs
test
mov
jne
sbb
xchg
pop
mov
cltd
add
sar
push
or
cmp
push
cmp
and
adc
pop
pop
push
lds
iret
jmp
sbb
nop
shlb
std
xchg
xor
xchg
adc
aad
xchg
sbb
adc
mov
xchg
pop
fsub
jne
push
add
nop
dec
push
lock
cmp
out
dec
xor
push
rorb
push
adc
aad
and
jmp
ret
xlat
test
dec
in
stc
inc
sbb
pop
imul
pop
dec
mov
test
lods
sub
push
sbb
pop
jo
outsl
cld
cmp
xor
push
std
push
push
in
je
pop
jmp
lahf
loope
inc
loope
push
lea
sti
push
iret
add
leave
sar
mov
aas
or
sbbb
testb
or
adc
fwait
sbb
mov
add
psubsb
adc
scas
addr16
loop
mov
imul
pusha
dec
icebp
lods
add
adc
ljmp
mov
jge
dec
clc
jns
mov
js
sbb
push
push
aas
js
sub
dec
pushf
pushw
push
sub
xchg
enter
push
inc
mov
add
addr16
mov
cmp
js
mov
mov
add
ffreep
adc
adc
push
hlt
mov
andl
test
sbb
push
dec
ss
test
imul
jne
out
lret
add
mov
push
pusha
inc
mov
fsubs
dec
mov
push
push
lock
cmp
ret
or
jmp
bound
dec
inc
outsb
push
push
pop
or
pop
jo
in
inc
xor
or
jnp
movsl
sbb
pop
jnp
pusha
enter
or
lret
cmp
or
rorl
jns
pop
add
lea
cmp
sbb
mov
add
push
or
sbb
mov
inc
mov
cmp
adc
add
xor
rol
sbb
jle
lea
push
push
jmp
push
es
mov
dec
iret
or
pop
lock
outsb
rcl
mov
pop
sbb
or
or
pop
sbb
fisttps
cmp
mov
push
mov
inc
mov
sbb
movsl
xchg
loopne
dec
xor
jecxz
scas
mov
add
ja
inc
push
std
xchg
lret
jns
pop
push
push
adc
cmp
mov
es
cmp
jne
insl
mov
add
push
cmpl
adc
aad
gs
add
mov
cmp
faddl
dec
add
pop
mov
ret
sub
es
sub
sub
insb
pushl
push
push
inc
or
push
andl
jbe
sbb
jl
pop
jns
adc
lret
scas
fdivp
jg
sbb
mov
mov
or
sub
xor
test
sub
and
cmp
mov
and
scas
imul
push
lea
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
cli
adc
sahf
push
rol
push
or
inc
lock
je
xor
jne
es
or
sub
lds
daa
stos
insl
es
xor
js
mov
jp
fwait
jo
lret
jmp
inc
mov
lret
and
adc
clc
jb
sbb
jae
lcall
lods
cmp
cmpsl
sub
mov
add
adc
sub
negb
add
ret
mov
fidivrs
adcl
rdtsc
andb
cmp
lret
and
sbb
into
push
xchg
cmpsb
or
jmp
les
test
in
inc
xor
xor
test
test
test
icebp
in
dec
lds
shr
jg
push
inc
call
dec
or
xlat
add
jmp
sbb
ja
sbb
and
nop
xor
adc
fs
mov
push
out
mov
int
int
fwait
test
adc
xor
mov
sbb
inc
mov
xor
push
test
mov
sti
and
mov
je
pushf
push
xchg
pop
or
adc
fcompl
pop
in
or
call
and
cmp
xchg
jns
xor
mov
add
loop
fs
xor
pop
hlt
loop
mov
pop
mov
inc
fdivl
jmp
xor
fs
dec
add
cmp
ja
cli
cmp
outsb
add
push
jmp
imulb
push
xorl
pop
sbb
pop
les
jmp
sbbl
into
push
ss
pop
sbb
out
inc
jmp
stos
popa
add
inc
rolb
cmpsl
push
add
mov
test
mov
jb
adc
es
add
push
jp
dec
fwait
and
in
nop
cmp
rolb
pusha
pop
adc
push
and
rcrb
orb
add
adc
pop
and
xchg
push
dec
sbb
sbb
inc
jmp
xor
xor
popa
jge
mov
push
roll
jle
add
push
adc
ret
push
movsb
push
pop
pop
jnp
loope
inc
adc
gs
cmp
mov
xor
sbbb
xchg
add
jbe
mov
out
fbld
mov
cmp
jae
pop
mov
add
dec
loop
add
jmp
mov
pop
pop
mov
mov
cmc
les
mov
adc
cmp
icebp
ljmp
cmp
rcrl
push
andl
xchg
cmp
jle
add
jae
in
mov
mov
cmp
fsubrs
push
and
testl
js
fcoml
cwtl
imul
jne
push
aas
sarb
out
int
xor
pop
insb
mov
aad
add
mov
adc
lea
sarl
rorl
cli
fwait
xchg
clc
insl
push
std
bound
push
sub
test
push
push
jnp
jne
add
popa
clc
pop
push
pcmpeqw
pop
xchg
mov
out
cmp
loopne
add
mov
jmp
repnz
jb
cmp
mov
enter
ret
lea
ficoms
std
popf
pop
add
cltd
push
xor
lcall
push
sub
test
int3
push
cmp
icebp
imul
add
xor
mov
jnp
in
imul
dec
or
lret
std
or
cmp
pushl
dec
jae
aad
jo
pop
pop
imul
or
jns
mov
pop
sub
int3
push
or
pop
sbb
push
jne
jge
push
or
xor
xchg
mov
xorb
push
jle
or
pop
movsl
repnz
jb
add
push
nop
rolb
shlb
je
jae
push
mov
addb
test
scas
jl
or
jecxz
jno
jnp
faddl
loopne
aas
cmp
pop
bound
pop
lds
in
mov
sub
cwtl
pop
add
and
or
dec
pusha
fbstp
jne,pn
sbb
inc
mov
inc
ja
and
les
aam
mov
sbb
or
stos
andl
xchg
jmp
call
push
icebp
hlt
pop
xchg
cmp
add
cwtl
adc
lock
add
sub
mov
push
adc
les
dec
shrb
cmp
mov
inc
inc
loop
push
fdivrl
inc
cmp
roll
das
out
sub
dec
sbb
or
ja
mov
popa
ret
inc
loop
fs
or
pop
push
rcrb
inc
sbb
mov
mov
stc
jb
ljmp
mov
inc
stos
sub
cmpsb
adc
call
adc
push
cltd
shl
or
xchg
leave
or
xchg
cmpb
mov
adc
pop
pushl
sbb
push
cs
add
enter
and
ret
adc
mov
mov
add
subl
add
aad
je
jl
xor
push
ret
push
dec
pop
inc
test
imul
enter
pop
js
jne
or
outsl
shlb
jp
push
xor
leave
and
jp
cli
xor
test
push
mov
cmp
jb
xchg
push
cwtl
mov
or
adc
daa
lret
cmp
ja
movsl
dec
xorl
dec
mov
outsb
je
inc
rol
xchg
sahf
adc
sub
lds
jp
mov
xchg
xor
pop
popa
orb
cld
mov
sub
orl
pushf
xor
dec
mov
popf
mov
xor
inc
mov
mov
nop
daa
sub
iret
sub
xor
fisttpll
fs
push
push
jle
clc
loopne
jne
stos
out
rcrl
enter
mov
pop
stos
pop
inc
call
jle
add
mov
add
jne
sbb
pushf
mov
enter
jmp
adc
cmp
adc
popa
jg
cmp
mov
lock
outsl
daa
sbb
and
xor
push
in
mov
rcll
sbb
addr16
les
int3
push
xor
and
xor
sbb
adc
mov
arpl
push
or
adc
jb
mov
sub
jb
sub
xor
out
jo
cmp
inc
in
jbe
and
inc
cmovs
in
push
push
pop
add
cmp
push
cmp
js
mov
or
xor
and
mov
xchg
cwtl
pushf
es
dec
xor
es
rol
xor
shlb
xchg
mov
dec
es
loopne
call
in
aam
daa
cltd
fs
hlt
clc
cld
add
and
leave
and
add
cltd
ss
or
adc
xchg
dec
sbb
and
xchg
dec
sub
xchg
dec
es
xor
cmp
dec
cmpsb
pusha
inc
gs
dec
and
dec
cmp
push
xchg
dec
xor
pop
pop
pusha
sbb
adc
test
adc
dec
fldl
xchg
dec
mov
test
mov
lret
and
add
add
mov
stc
jl
pop
ficoml
nop
xchg
dec
cs
adc
sbb
sbb
and
and
cmp
pop
jb
cmp
mov
inc
rolb
leave
in
enter
jg
add
enter
pop
add
adc
adc
push
rclb
loope
cmp
ret
leave
nop
mov
movsb
andl
or
or
push
mov
push
loopne
pop
mov
jns
push
or
fdivr
or
and
pop
imul
xor
scas
pop
rorb
add
test
and
nop
lret
xor
add
or
addr16
pop
or
shll
enter
dec
xor
adc
or
mov
cmp
shr
add
jmp
fmul
and
and
and
cmc
orl
test
or
mov
adc
xchg
jae
adc
stos
nop
jo
je
mulb
cmp
xor
shll
or
xor
dec
or
sub
and
clc
incb
lea
call
lret
jmp
inc
ja
frstor
cld
mov
and
aaa
int3
in
out
jecxz
sbb
add
or
jmp
xor
inc
ret
or
or
and
jge
aaa
jge
je
inc
loope
sti
sub
and
pop
adc
pusha
mov
inc
cli
sti
pusha
pusha
loope
pop
sub
xor
movsb
repnz
sub
adc
fucom
jnp
mov
pusha
pusha
fldl
cmp
xor
or
pop
dec
jnp
testb
sub
adc
sti
out
lret
add
add
test
inc
inc
and
xchg
sub
push
sub
ret
mov
xchg
lcall
push
scas
jmp
nop
inc
xorl
lcall
or
adc
pop
testl
sbb
pop
imul
pop
jb
sbb
jmp
push
and
into
or
fisttps
fstps
jmp
fisttpll
cmpsl
adc
add
inc
push
sti
pop
xchg
jp
adc
jbe
je
and
xchg
orl
cmp
push
xor
test
or
add
inc
cltd
push
inc
call
loope
push
aaa
sbb
adc
out
cmp
std
inc
jmp
fstl
jmp
pop
jbe
lea
pop
sub
jmp
sub
divb
daa
push
or
jmp
xor
add
inc
test
into
mov
leave
xor
scas
sbb
pop
subb
add
mov
or
loope
mov
mov
adc
cmp
xor
or
mov
adc
imul
xor
dec
add
enter
nop
mov
aam
pop
test
stos
xchg
dec
cld
cli
shrl
inc
pop
orl
sbbb
loopne
stos
cmp
pop
or
push
rolb
adc
adcl
lcall
cmpsb
mov
inc
adc
or
push
pop
push
sbb
in
push
shr
mov
jle
push
add
fistps
data16
sbb
and
pop
mov
push
jg
cmpsb
lret
add
ret
push
xlat
mov
push
mov
xor
add
sbb
or
lods
mov
cmp
je
fildl
jl
xor
mov
or
call
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
push
and
pushf
sub
stos
push
testl
addr16
or
or
adc
pop
xor
jmp
addr16
leave
dec
inc
jnp
inc
pop
and
lock
int
js
or
fisttpll
ret
pusha
cmp
or
jne
icebp
jo
sbb
lods
sub
daa
mov
cmp
xchg
cmc
lods
in
or
lock
mov
mov
cmp
jae
adc
scas
cwtl
pusha
add
jbe
push
adc
pushf
out
adc
inc
push
and
mov
jns
jne
mov
mov
mov
jl
push
jnp
pop
daa
sub
push
in
rolb
inc
nop
loopne
je
shrb
ss
jecxz
into
and
cld
in
push
shrb
mov
add
inc
jp
shll
dec
lret
lock
or
divb
sbb
ljmp
outsb
dec
add
push
mov
xlat
out
and
pop
mov
add
mov
jmp
mov
lods
and
ret
fidivrl
xchg
sub
enter
test
dec
out
fld
fucomp
pop
flds
pop
out
mov
fisttpll
test
cmovge
or
or
shll
daa
pop
jo
push
or
lcall
push
or
push
out
mov
pop
pop
and
pop
je
shl
jp
aad
xor
push
and
pop
cld
es
sub
push
movsl
and
push
movsb
push
and
ljmp
adc
fnstsw
movswl
mov
test
sbb
loop
inc
fnstenv
and
rolb
or
dec
xor
fcoml
xchg
fs
testb
or
push
mov
mov
fldt
fwait
ja
or
adc
sbb
cmpb
inc
adc
repnz
call
movsb
fldpi
push
pop
cli
adc
loopne
loope
je
loop
jmp
lret
dec
sbb
scas
inc
call
shrl
pop
mov
dec
inc
loope
xor
loope
add
mov
popf
out
jmp
and
insl
mov
sub
lock
cld
add
jnp
clc
add
lcall
and
add
test
jl
push
lock
or
es
mov
mov
sbb
mov
cmp
and
adc
lds
jmp
or
and
mov
mov
adc
je
adc
add
dec
lock
push
das
adc
adc
push
add
mov
mov
pop
cmp
adc
push
sti
jbe
push
mov
rorb
and
pop
movsb
sbb
mov
jg
shr
notl
mov
enter
or
add
loope
daa
fs
push
or
xchg
shlb
add
loope
rcrl
dec
or
jo
mov
mov
cld
cmpsb
dec
or
fldcw
cmp
dec
push
or
push
les
jecxz
orl
adc
ret
cmp
testb
adc
loopne
test
jbe
sbb
dec
lock
stos
jp
pop
mov
dec
call
mov
in
cmp
cmp
inc
imul
pop
add
push
add
adcl
dec
ret
dec
or
inc
lea
pop
jecxz
jecxz
mov
lret
rolb
add
lret
loop
adc
div
rolb
cmpl
and
pop
pop
repz
mov
mov
and
iret
loopne
adc
lock
mov
jbe,pt
dec
mov
add
loop
mov
test
or
cmp
cmp
dec
cmp
adc
loopne
leave
adc
fidivs
or
dec
repnz
add
rcl
enter
sarb
pop
add
mov
pop
jge
lea
sub
fiadds
inc
roll
sub
stos
cmp
stos
inc
or
add
or
xchg
cli
add
xchg
dec
xor
pop
or
xor
pop
rorl
mov
lahf
cmpl
loopne
fmul
shl
sub
sub
mov
pop
loopne
pop
popf
jb
mov
jno
push
shlb
push
ds
push
or
test
xor
out
adc
mov
xor
test
nop
mov
into
jne
xchg
and
mov
fs
mov
sub
in
das
pop
dec
lea
push
sbb
dec
rcr
inc
lods
jl
cli
push
sbb
test
repz
push
pop
push
dec
or
jle
mov
into
loopne
shl
test
lcall
cmp
wbinvd
cwtl
outsb
push
cli
mov
cmpb
fsubr
pop
pop
push
push
jb
inc
jae
and
jno
clc
enter
dec
jns
cmp
and
pop
mov
push
pop
jo
test
lea
or
daa
xchg
bound
dec
and
mov
pushf
and
and
add
xorl
roll
sbb
in
add
sub
inc
andl
orb
out
fiadds
cmpb
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fildl
pop
lock
int3
xchg
ret
push
test
adc
jne
and
fdivl
sbb
jns
cmc
push
mov
push
dec
inc
sbbl
push
nop
dec
in
adc
push
dec
rcll
pop
dec
je
add
add
nop
push
pop
adc
mov
or
jo
dec
lret
out
cs
jmp
inc
lahf
dec
outsb
and
scas
mov
jne
cmp
cld
jb
add
push
ss
inc
mov
mov
sbb
inc
mov
or
repz
push
xchg
mov
xchg
out
xchg
add
pop
imul
or
adc
lret
cs
scas
cmp
ss
cmp
je
or
decl
pop
out
mov
dec
cmpb
je
mov
cmp
pop
jne
mov
mov
inc
inc
mov
imul
and
and
fcompl
shrb
inc
xor
jp
nop
sbb
arpl
sub
or
sub
push
sub
dec
into
leave
dec
sub
push
push
dec
add
adc
or
addl
add
adc
aam
adc
push
add
adc
adcl
inc
add
adc
js
dec
sbb
fadds
loopne
jne
xlat
rolb
movsl
push
push
mov
or
add
push
xor
inc
and
test
sbb
xorb
rorb
and
adc
sub
mov
loope
sub
cmpl
mov
or
mov
lea
sbb
push
jp
jle
clc
pushf
lret
sub
mov
inc
or
lods
or
sbb
add
add
push
loopne
jmp
and
add
push
sub
cmp
mov
es
or
aaa
dec
sub
mov
pop
sbb
neg
movb
fs
cltd
push
pop
push
dec
or
mov
rcrb
or
add
add
or
andb
mov
mov
xchg
xor
jno
push
pop
or
mov
push
xchg
popa
push
inc
xchg
or
sub
call
enter
sbb
pusha
sub
movsl
mov
iret
ret
jmp
add
daa
cmp
or
sub
jo
mov
adc
adc
and
push
adc
shlb
push
xor
sub
aaa
sbb
sbb
add
cmp
push
jmp
adc
mov
dec
into
mov
dec
outsl
pop
pop
push
push
js
cmp
movl
add
jl
into
jecxz
push
mov
adc
and
and
xchg
sbb
mov
fcom
loope
sarl
or
adc
pushf
inc
dec
enter
inc
xor
mov
push
and
or
xchg
nop
into
sub
call
cmp
imul
incb
pop
or
ret
push
dec
fcompl
sbb
ret
cmc
sbb
cmc
xchg
xchg
or
scas
cmpb
xor
pop
fdiv
aas
test
enter
js
subb
push
ja
test
lahf
lods
fists
dec
xchg
or
leave
and
add
insb
movb
jg
jbe
lahf
and
mov
push
inc
popf
negl
out
fistpl
fstpt
ret
rol
or
lock
ret
cltd
loopne
mov
and
add
xor
xor
adc
subb
jmp
adcb
in
les
pop
inc
xor
mov
jb
push
cmp
or
or
inc
mov
mov
or
addr16
add
nop
xor
adc
sub
adc
mov
push
clc
sub
jo
sbb
sbb
rol
bound
add
sub
mov
lods
in
jbe
adc
insl
cld
add
hlt
shrd
sbb
xor
lea
dec
cmp
push
jge
sbb
clc
lcall
cli
scas
outsl
jecxz
data16
inc
and
xor
out
inc
cmp
cmp
mov
sbb
inc
lods
pop
push
or
adc
movsl
push
insb
xor
sub
xchg
lock
mov
in
and
imul
sbb
js
jg
imul
ja
idivl
adc
neg
mov
lahf
test
cmp
sarl
push
shll
nop
test
sbb
push
test
xchg
sarl
or
add
mov
sub
inc
dec
pop
xchg
xor
out
jb
or
sbb
cmp
sarl
mov
in
ja
cmp
mov
fldl
or
cmpb
cmp
mov
adc
pop
mov
push
mov
aaa
fisubl
sbb
jle
xlat
roll
in
push
sbb
mov
or
jmp
lock
sahf
fwait
pop
push
nop
popa
adc
in
add
neg
js
jl
or
adc
ret
aaa
push
lods
inc
add
pusha
xorb
enter
push
add
add
je
das
push
repnz
je
add
and
jbe
rolb
jl
into
shll
rorb
stos
mov
push
sbb
idivb
sbb
jmp
daa
add
xor
shll
cmp
nop
push
push
fs
push
mov
rorb
cmp
mov
add
leave
xor
enter
shrl
push
push
push
push
out
dec
out
les
addl
adc
sub
cltd
adc
inc
or
inc
stos
and
push
add
or
add
jmp
xor
ds
fldcw
mov
je
or
pop
data16
xor
imul
in
mov
popa
je
inc
je
stc
add
lds
ja
xor
sbb
or
pop
popf
daa
lock
sbb
push
fs
inc
call
pop
outsb
ret
je
clc
push
popa
add
stos
or
add
shl
insb
and
fdivs
mov
imull
cmp
mov
or
inc
jne
test
and
out
nop
aam
ds
push
xor
push
nop
adc
or
cmpb
jne
sub
mov
add
testl
pushw
xchg
sarl
push
cmp
punpcklbw
jmp
ja
add
cs
push
sahf
xchg
adc
popf
mov
cmc
add
loopne
cmp
notl
add
mov
inc
mov
test
push
ret
mov
jge
sub
push
pop
inc
mov
sub
inc
jmp
cmc
pop
push
push
jns
and
mov
fwait
push
cwtl
js
xor
push
pop
movsb
mov
ljmp
ss
je
bound
push
leave
rcl
sub
and
ret
out
pop
push
push
push
leave
xchg
dec
std
gs
add
mov
xchg
sub
push
cmp
rorb
sub
mov
push
dec
cmp
mov
js
and
inc
mov
adc
cltd
xor
xchg
ret
loopne
lds
mov
cmpl
inc
clc
xchg
push
or
push
pop
jo
push
sbb
mov
jmp
adc
daa
shrb
push
mov
pop
pop
pop
pop
pop
push
rcrb
fdivl
dec
test
add
pop
cmp
and
je
in
test
data16
and
dec
adc
mov
sbb
dec
enter
je
dec
push
push
jmp
or
jmp
and
add
push
adc
push
dec
insl
repz
cmp
ret
add
or
rcl
movaps
xchg
sub
lcall
rorb
cmp
xor
das
int3
add
arpl
dec
xor
shll
adc
sahf
and
xor
and
cmp
je
mov
mov
mov
pusha
and
loop
or
roll
test
lahf
into
and
fs
inc
mov
dec
add
dec
adc
jnp
sub
sarb
mov
inc
sub
xor
sub
sbb
add
lods
mov
stos
or
mov
mov
mov
cmp
ret
and
pushf
and
sbb
ret
sbb
xor
or
pusha
xchg
call
dec
mov
rorl
or
sbb
lret
aam
adc
fs
scas
jb
clc
shr
add
or
cld
inc
mov
or
mov
push
and
dec
call
and
add
mov
insb
xchg
push
movsl
notb
lock
stc
xchg
mov
mov
xchg
jp
fcmovu
fimull
cmp
leave
inc
jbe
add
lock
mov
sbb
cmp
or
xor
pop
fimuls
rcrb
sti
sbb
mov
and
and
mov
repnz
bound
xor
ficoms
into
clc
sbbl
lea
inc
movsl
add
pushfw
xchg
mov
fxch
stos
lods
mov
mov
out
nop
mov
ja
lods
cs
cmpsb
and
xchg
xchg
lret
mov
es
mov
cli
ficomps
adc
push
loopne
xor
adc
add
gs
mov
icebp
insl
loop
sub
dec
stos
mov
dec
push
lret
mov
adc
add
pop
call
mov
shll
pushw
shrl
or
sbb
xchg
outsb
xchg
das
sbb
sahf
mov
jb
cmp
loop
leave
test
imul
xor
mov
outsl
aaa
push
sub
loope
pop
dec
sbb
and
add
fmull
sbbb
and
add
cmpsb
and
sbb
pop
jo
jno
test
ret
push
nop
dec
bound
or
and
loopne
adc
and
ret
insl
adc
insl
mov
ret
and
in
mov
and
shrl
sbb
and
cmp
loope
jo
pop
test
clc
ret
mov
ss
or
adc
push
pop
xor
pop
divb
mov
mov
outsl
das
pop
das
add
outsl
inc
mov
xchg
mov
les
rcr
sub
and
or
sbb
js
imul
sbb
fistpll
gs
dec
inc
pusha
repnz
andb
add
add
pop
je
xor
adc
add
ret
sub
bound
jge
andb
and
arpl
or
mov
mov
or
movsl
fisttpl
les
negb
add
leave
or
adc
cmp
and
pop
in
push
shr
push
sbb
add
call
pusha
push
ljmp
leave
imul
push
push
icebp
dec
and
lcall
call
clc
xor
fcoms
in
mov
cmp
jle
inc
and
or
pusha
jge
push
jge
movsl
jo
pop
cmpsb
sbb
fwait
fwait
or
mov
push
dec
leave
add
xchg
and
xchg
adc
cmpb
jl
ss
mov
pushl
cmpb
je
push
xor
xchg
sub
incl
adc
push
xor
stc
add
adc
push
stc
inc
push
test
jmp
mov
out
imul
mov
ds
mov
inc
and
inc
and
cmpsb
sahf
push
or
ljmp
mov
jne
cmp
jne
outsb
xorl
mov
add
outsl
ret
into
adc
rorb
push
cltd
pop
rcrl
fprem
out
roll
leave
mov
or
je
mov
iret
add
add
cmpsl
or
dec
je
mov
fcompl
bound
enter
rolb
cmpsl
movsl
sti
mov
shll
jo
subb
or
sbb
rorl
push
sbb
add
shlb
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
pop
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
inc
or
mov
notl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
sahf
xor
adc
inc
cli
xor
cs
pop
add
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
cwtl
xchg
mov
push
mov
rcll
xor
dec
inc
arpl
inc
and
cmp
cmovae
test
jg
popa
add
arpl
in
inc
adc
mov
push
add
xor
inc
jmp
rorl
orb
cs
ljmp
cld
inc
ss
ret
nop
aaa
dec
sub
add
add
cmpsb
jnp
inc
fstl
adc
cmpsb
je
cld
mov
rcl
and
leave
jne
pop
inc
cmp
jmp
lock
and
jmp
enter
inc
mov
xor
cmp
test
cs
or
add
lock
mov
mov
cs
mov
cwtl
inc
jecxz
je
adc
jl
lahf
idiv
cmp
jb
cmp
ja
add
cmp
adc
cmp
jne
inc
xchg
and
xor
adc
mov
sbb
add
jl
pop
pop
movl
sbb
xchg
mov
mov
push
jb
dec
lea
push
and
lods
adcb
mov
int
xor
cmp
jg
test
push
movb
jmp
mov
and
out
or
mov
cmp
or
in
test
mov
or
cmp
movw
or
and
add
cmp
mov
xor
ljmp
testb
push
cmpsb
mov
sbb
mov
mov
aaa
subl
inc
jb
mov
pop
xchg
out
fisttpll
jmp
andb
sbb
dec
in
into
push
add
push
add
fwait
mov
daa
jo
aas
mov
cs
dec
push
imul
mov
sbb
jmp
inc
imul
pop
pop
xchg
lea
sar
dec
ja
ja
dec
movswl
xchg
fidivs
es
ljmp
shlb
hlt
std
mov
jb
mov
cwtl
rcrb
xor
adc
movsl
test
sub
jmp
cwtl
mov
mov
sbb
les
mov
dec
jle
repnz
mov
loopne
inc
xor
mov
mov
std
insl
orl
and
lea
inc
xor
adc
cmpsl
add
into
xor
popf
push
sahf
cmpb
pusha
cmp
and
add
out
ds
loopne
xor
mov
jnp
iret
leave
inc
call
lods
cli
shrl
fs
inc
mov
cmp
pop
mov
and
lea
mov
add
sub
sbb
xor
sub
lea
pushf
add
rcr
xchg
les
or
xchg
adc
push
lods
shll
inc
insl
pusha
push
cmpsl
gs
xchg
mov
mov
push
lcall
cmpsl
jne
mov
and
rorb
inc
data16
push
popa
add
popf
loope
shll
mov
add
shr
or
and
sti
sub
jle
rorb
sbb
push
lret
pop
cmp
cmc
xchg
mov
inc
mov
sahf
inc
mov
fldt
shrl
loope
shr
or
mov
jp
or
dec
mov
pop
jmp
jnp
lock
hlt
mov
adc
loope
stc
repnz
test
mov
cmpsl
mov
inc
cli
div
sbb
inc
mov
roll
test
and
add
sbb
cli
rcr
sahf
les
mov
sub
pop
fisubrl
adc
jmp
mov
and
and
push
aad
or
mov
rcrl
dec
rolb
adc
jo
lock
rcrb
pushw
stos
ss
lcall
jge
pushw
sbb
loop
push
jmp
shlb
test
add
dec
mov
inc
push
notl
mov
lods
in
aam
imul
mulb
mov
adc
xchg
fdivrs
aam
int3
or
jbe
dec
sub
pop
cmpsl
or
mov
sbb
adc
cmpsb
xor
adc
test
fmull
or
mov
xchg
lret
sbb
fcmovu
mov
mov
insl
test
dec
movl
jg
add
add
add
xchg
add
idiv
adc
xchg
adc
jg
mov
dec
and
dec
gs
lock
out
or
add
enter
pop
jge
dec
inc
lock
or
cmp
jne
sub
add
mov
out
loopne
sbb
mov
pushf
pusha
mov
pusha
add
popa
mov
push
sbb
sub
aas
and
lock
sbb
movb
jmp
xor
call
pop
outsb
call
xchg
sub
dec
cltd
and
or
mov
shl
rorb
shrl
cli
pop
xchg
pop
adc
mov
xchg
fcoms
xor
fiadds
fsubrp
jle
inc
imul
jmp
xlat
pop
je
loopne
call
mov
or
pop
add
and
mov
push
in
loopne
adc
fisubs
out
pop
sti
cmpsb
fwait
aad
add
mov
pop
orl
inc
les
enter
cli
into
or
cli
or
pop
jb
mov
lahf
ljmp
aad
add
enter
sahf
mov
test
add
sub
test
mov
es
add
sarl
sbb
or
mov
inc
ljmp
jmp
add
push
std
jmp
add
inc
cmpb
or
add
dec
cmp
add
dec
add
add
fadds
add
inc
jp
push
call
jnp
dec
jp
jne
dec
mov
jb
int
xorb
push
loope
in
jbe
pusha
sub
cs
lret
or
rcll
jp
ret
adc
inc
or
mov
add
add
test
or
adc
stc
lret
xchg
push
mov
push
lods
push
test
adc
adc
or
repz
add
pop
push
movsl
es
jne
or
rorb
ret
sbb
adc
xor
test
mov
and
mov
xor
or
xchg
adc
inc
bound
sbb
sbb
inc
pop
mov
mov
pop
and
cmp
xor
into
pusha
pop
xor
sbb
mov
add
pop
pop
add
test
mov
pop
cmpps
lds
scas
prefetchw
inc
adc
push
loopne
push
pop
stos
push
data16
loopne
orb
xor
cmpsb
rorb
or
add
pop
push
ja
add
fmuls
stos
push
je
rol
mov
je
lret
pop
or
cmp
int
adc
xlat
push
pop
out
push
jo
sub
pop
xchg
adc
jne
fbstp
and
mov
ret
enter
add
aas
shrb
and
push
or
ret
mov
inc
add
mov
add
xor
loop
clc
or
add
sub
iret
enter
or
push
fsubl
adc
scas
orl
push
lock
mov
xchg
and
lods
rcl
or
loopne
xlat
add
mov
lock
repnz
test
ds
into
or
add
or
adc
xchg
mov
mov
mov
repnz
out
sbb
xor
inc
jg
into
shll
mov
push
test
pop
sub
push
js
aaa
js
nop
pop
sahf
pop
add
add
shlb
or
sbb
mov
dec
pop
stos
cmp
pop
inc
push
mov
js
mov
hlt
dec
lea
sub
leave
lahf
pop
xchg
out
xor
ds
adc
add
arpl
movsb
pop
stos
ret
mov
mov
cmp
popf
imul
or
mov
inc
sub
jmp
mov
sbb
jmp
stos
shrl
push
xor
xchg
pop
mov
test
sarb
dec
dec
or
aas
mov
int
cmp
add
clc
jbe
sbb
xchg
sbb
push
xchg
sbb
ds
rcr
xchg
sarl
push
test
hlt
add
in
cmpl
enter
cmp
cs
inc
jo
andl
lods
and
icebp
enter
je
inc
adc
dec
sub
loope
mov
out
je
mov
repnz
ljmp
mov
cmp
jb
cmp
jbe
dec
enter
sub
jmp
push
dec
xor
pushf
xchg
loopne
bound
insb
mov
mov
leave
mov
push
push
or
cli
sub
ret
pop
push
divb
aam
inc
popf
repz
and
or
loopne
in
or
jb
popf
test
mov
popa
and
mov
loopne
test
cmp
pushl
pop
jl
pop
push
and
push
push
jne
inc
insl
mov
pop
and
or
and
in
xor
push
fmul
push
jo
or
pop
mov
pop
jne
cmpsl
push
cmpb
jae
push
push
rcl
test
inc
mov
xchg
jmp
inc
push
add
pushf
mov
les
push
popf
sub
push
mov
popf
mov
mov
dec
mov
out
xlat
xor
xchg
sub
out
inc
pop
cmp
add
xchg
sbbl
add
popa
sar
test
cmp
xchg
pop
jmp
mov
aaa
mov
dec
add
dec
xor
push
scas
js
sub
sub
inc
xchg
push
jl
mov
adc
orl
loope
aaa
cmc
and
pop
shl
push
pop
mov
hlt
call
imull
pop
inc
xlat
push
ret
push
push
addb
cmpsl
loopne
out
xor
inc
or
ret
mov
pop
adc
sbb
mov
inc
jnp
jb
loope
and
push
mov
sbb
dec
in
jbe
pop
adc
mov
insl
sbb
das
out
jle
add
jg
xor
mov
inc
dec
push
push
pop
push
cmp
pop
test
popf
call
xor
sub
insl
movsl
enter
addl
add
inc
xlat
int3
fimull
add
pop
nop
cltd
rcrb
jae
cld
push
fistpll
sarb
loopne
jmp
push
pusha
outsl
sbb
fs
movsb
mov
ss
subl
push
addr16
lcall
add
lcall
test
inc
push
push
sub
bound
lcall
jg
je
push
cmp
movb
pop
sub
sbb
inc
cltd
rclb
push
pop
jo
jb
insb
sbb
hlt
jp
push
or
push
pcmpeqb
inc
adc
scas
sbb
loopne
aam
inc
xlat
jnp
mov
les
pop
cmp
icebp
and
jbe
lahf
push
add
imul
movsl
pop
pop
push
pop
rorb
mov
fs
aas
inc
fs
cmp
dec
add
in
repnz
pop
cmp
cmp
inc
ss
test
js
in
loopne
add
out
rol
push
fcomps
and
gs
add
loope
fcoms
sbb
cmp
sbb
inc
out
les
pop
xor
sub
dec
and
daa
xor
mov
addl
jmp
push
push
insb
and
jmp
jl
push
mov
fwait
add
mov
fs
sub
enter
mov
mov
push
add
push
pop
jo
loope
and
and
movsb
test
adc
push
xor
cltd
mov
push
add
inc
cmp
pop
fwait
call
sar
xor
cmp
push
sbb
adc
stos
sbb
mov
mov
xchg
pop
sub
pop
mov
rclb
roll
mov
cmpsl
ret
add
xor
subl
in
jecxz
sbb
aam
addr16
pop
fldcw
dec
xchg
push
sbb
es
inc
fsubs
mov
out
mov
fs
add
add
push
pushf
ret
pop
xchg
enter
aam
xchg
push
add
rol
aad
push
leave
int3
jmp
nop
push
sub
dec
sbb
and
stos
mov
loop
push
loopne
call
pop
xchg
loopne
mov
ret
push
in
les
test
adc
jae
pop
mov
adc
ret
add
cmp
inc
cmp
cmc
add
adc
cwtl
mov
cmp
push
imul
js
xor
xchg
or
push
imul
in
or
into
inc
mov
adc
or
adc
adc
mov
and
push
mov
and
sub
dec
sarl
scas
sahf
adc
jecxz
out
lock
mov
mov
fwait
mov
repnz
aam
mov
in
add
pop
xchg
sbb
in
hlt
mov
mov
inc
fisubrl
clc
xchg
lret
popf
xor
fiaddl
sti
xchg
stos
mov
int3
sar
addb
ret
adc
aam
pop
pushf
enter
loop
pop
sub
dec
inc
insl
imul
xchg
or
push
pop
or
or
adc
clc
std
popa
std
data16
xor
inc
and
cltd
add
pop
jo
jmp
push
mov
sbb
adc
adc
imul
inc
loop
jp
or
sub
je
popf
test
dec
adc
adc
arpl
pop
fidivrl
roll
loope
dec
mov
sub
adcb
add
inc
imul
add
push
pop
in
xchg
jge
cmp
sbb
rcrb
sub
jge
adc
mov
sbb
insl
adc
or
pop
jbe
add
mov
or
outsb
mov
jns
cmp
mov
daa
push
inc
pop
jp
mov
cmp
or
repnz
mov
cmp
adc
fdivrs
xor
lcall
sub
add
stos
mov
shl
cmp
add
shlb
popa
mov
call
mov
fadds
in
jecxz
fwait
ss
dec
mov
clc
mov
add
cwtl
inc
clc
cmp
in
pop
enter
add
inc
mov
ret
dec
aad
add
inc
lea
mov
aas
leave
jp
loope
and
aaa
push
ret
and
push
jbe
aam
add
pop
repnz
out
or
test
or
pop
dec
inc
jmp
sub
cmp
pop
cmp
cmp
jg
andl
das
xor
mov
mov
mov
sbb
jg
mov
adc
or
sbb
imul
xor
bound
jp
adc
ja
xor
cmc
inc
fsubrl
cmpl
pusha
fwait
or
faddl
and
mov
jmp
dec
xchg
jns
mov
insb
add
cltd
and
jae
testl
loopne
or
mov
dec
inc
cmp
pop
imul
jge
adc
and
push
or
jne
inc
sbb
pop
cld
or
xor
push
imul
cmpsl
cmpsb
icebp
push
mov
or
mov
shll
lds
jl
sbb
dec
jae
cmp
addl
rolb
xor
fidivrl
xchg
fwait
sub
test
push
cld
adcb
add
add
stc
jg
aas
stos
pusha
popa
dec
pusha
loop
add
sbb
pushf
sbb
aam
movsb
aaa
lods
arpl
push
shll
push
push
add
mov
mov
xor
xor
add
stos
cli
mov
fs
pop
jl
testb
mov
shlb
imul
or
sbb
test
iret
loopne
jmp
xchg
jmp
sub
test
fcomps
fyl2x
inc
fs
mov
or
shll
adc
and
fs
sti
fcom
in
dec
scas
mov
mov
repz
outsb
outsb
aaa
loope
fdivs
sub
pop
bound
je
xchg
push
or
jmp
outsl
andb
pushf
pop
xchg
jb
sbb
cmpl
add
cmp
jae
and
stos
outsb
inc
mov
lret
cmp
jg
in
mov
push
dec
rol
add
dec
loopne
ret
push
and
dec
test
mov
es
aas
adc
imul
ret
jmp
and
xor
insb
jo
fcomps
pop
mov
pop
mov
ds
cmpl
cmpb
and
pop
cmp
lods
mov
movsb
push
mov
hlt
ljmp
pop
or
dec
add
mov
mov
inc
sbb
adc
inc
xor
or
add
cmp
inc
mov
outsl
ret
or
inc
add
mov
add
fldl
and
inc
stc
repnz
mov
loope
mov
add
es
mov
addr16
push
js
adcb
test
je
fstps
cltd
aam
mov
or
jg
mov
movsl
jl
jae
cmpsl
push
jmp
cmp
or
je
add
je
mov
sbb
cltd
neg
push
mov
hlt
movsl
xor
pop
add
arpl
dec
scas
rcrl
sbb
push
add
adc
lea
sub
mov
push
cli
and
pushf
jecxz
inc
pop
adc
adc
jmp
adc
nop
dec
je
dec
jne
push
loopne
add
adc
or
bound
or
sbb
cmp
inc
xor
xchg
hlt
cmp
push
mov
fcoml
or
push
sub
mov
aaa
lds
push
hlt
cmp
enter
jnp
cli
inc
cs
arpl
mov
inc
loop
inc
add
xchg
jns
mov
or
pop
mov
inc
sbb
test
adc
loope
or
repz
test
lahf
addb
in
xchg
lods
mov
pop
sbb
hlt
push
cli
push
jb
dec
cmpb
mov
push
inc
mov
inc
pushf
jae
cmpsl
clc
push
lea
aaa
jl
jp
mov
inc
mov
add
aaa
add
cmpb
sub
add
and
add
xchg
and
add
popf
cmp
lret
dec
or
arpl
pop
pop
or
push
push
mov
add
dec
or
jl
enter
mov
ret
imul
and
or
xor
xor
cwtl
dec
das
or
add
imul
rorl
mov
jecxz
rcl
daa
xchg
mov
mov
add
pop
fdivs
hlt
jne
adc
fcmovnb
out
add
or
push
mov
inc
jmp
mov
mull
adc
out
ss
fs
js
pop
test
lock
jle
sahf
dec
add
cmp
mov
push
xor
inc
call
cmp
jne
pop
dec
add
and
adc
or
or
fmuls
ret
xchg
js
int3
jg
jg
push
and
addb
adc
cmp
cmp
or
or
fcomps
mov
push
jecxz
jge
push
test
mov
or
xorl
cld
pop
shll
nop
lea
dec
and
fcmovu
pop
mov
xchg
and
jbe
add
fsubrl
add
sbb
adc
add
push
xor
fisttpl
fstl
orl
jg
jmp
adc
pop
roll
ss
and
push
and
call
sahf
jb
push
jge
jb
nop
mov
mov
call
push
jl
scas
gs
xchg
and
pushf
and
adc
push
cld
pop
push
jae
scas
add
jno
and
sbb
test
jns
inc
bound
and
ss
xorb
cmpsl
cmpsb
inc
rcrb
add
push
lcall
js
push
test
push
adcl
mov
adc
or
xor
sub
aas
into
pop
mov
mov
xlat
je
sbbl
es
mov
and
cmp
jb
testb
rcrb
add
cmp
cs
or
sub
jge
push
jmp
inc
push
mov
cwtl
and
jb
mov
push
cmp
sbb
mov
sub
pop
adc
daa
clc
push
push
or
or
push
cwtl
es
js
push
sti
rcr
xchg
xchg
cmp
xor
push
gs
xchg
lgdtl
stos
sbb
mov
and
dec
mov
mov
mov
mov
adc
mov
dec
pop
mov
push
inc
pop
pop
test
mov
iret
cli
cmpl
xchg
mov
mov
jb
test
mov
adc
ret
andb
imul
pop
insl
in
hlt
jno
inc
dec
jmp
notb
jle
pop
in
sbb
mov
cmp
fstps
daa
inc
push
sub
stc
add
cmpb
imul
add
and
inc
in
add
pop
xchg
sbb
incb
subps
int
out
outsb
imul
add
push
push
mov
xchg
ljmp
inc
dec
das
sub
xlat
insb
push
mov
add
lcall
add
popa
mov
rcrl
lock
fldcw
lods
adc
fcomip
fildll
xor
cmp
jmp
cwtl
mov
xor
aaa
aad
add
push
cwtl
js
xor
sub
das
cmp
cwtl
adc
ret
jnp
lods
mov
add
and
sub
in
pop
in
adc
mov
leave
test
push
leave
inc
enter
pop
dec
enter
inc
or
pusha
push
mov
sarl
mov
inc
test
adc
push
fsub
pop
bound
mov
push
add
xchg
sbb
adc
insl
push
loope
lret
inc
mov
clc
dec
dec
add
adc
rclb
jl
jl
xchg
sub
sub
dec
and
xchg
or
in
sbb
fbstp
loopne
ficompl
leave
dec
jnp
mov
lock
cltd
fmuls
jne
pop
xor
xchg
mov
imul
int3
ja
xchg
ss
cld
mov
sbb
add
add
fcmovu
sub
jmp
lods
in
pop
or
test
dec
ret
dec
fildl
mov
xor
jle
mov
cmc
movsl
in
pop
jnp
cmp
cmp
adcb
insl
sub
roll
js
pushf
fs
rcr
mov
xchg
cs
ss
add
inc
pop
fsubr
in
ds
dec
in
arpl
pushf
fisttpll
or
rcl
push
movsl
lock
add
ret
andb
mov
je
sbb
xchg
add
frstor
test
add
jnp
ficoms
ja
sub
mov
and
in
inc
fwait
in
lcall
adc
and
rcr
loope
cld
pop
adc
and
adc
xor
xchg
mov
jb
xor
xchg
cwtl
mov
sbb
les
ret
xor
loopne
or
xorl
jnp
les
rorl
jl
push
js
inc
repnz
faddl
adc
xchg
sbb
shrb
int3
and
enter
sbb
jge
les
fsubr
pop
aam
inc
fiaddl
loope
les
out
dec
test
aam
loopne
shll
inc
nop
lcall
addl
in
fsubs
int3
adc
cmp
outsb
push
dec
es
fs
xchg
jo
js
mov
addl
or
fsubr
adc
lock
sbb
clc
loope
jge
jle
loop
xchg
adc
imul
add
and
mov
adc
dec
in
sti
fsubrs
adc
movsl
jecxz
jecxz
mov
inc
adc
dec
shll
sub
testl
jno
mov
fcmovnb
sbb
or
push
pop
mov
repnz
addl
sub
popa
js
dec
fidivrs
cmp
ja
cmp
mov
testl
stos
dec
pop
and
js
or
or
shl
sub
and
cmp
push
test
xor
leave
cmpl
inc
mov
addr16
and
leave
aas
lods
int3
dec
add
dec
or
mov
jb
inc
lret
in
mov
ret
push
js
lock
imul
pusha
aas
and
xor
popf
fdivs
or
pop
pop
xor
loopne
xlat
mov
insb
popf
in
les
fsubs
dec
and
jecxz
dec
fimull
or
imul
and
jnp
negl
pop
rcll
mov
in
dec
mov
add
fdivs
fdivrl
add
pop
sub
shrb
cld
adc
mov
mov
in
aam
sbb
and
inc
xchg
jmp
inc
out
sub
mov
pop
shll
pop
mov
adc
or
pop
sub
hlt
lock
and
in
jmp
aad
mov
pushf
les
cmp
rolb
fwait
mov
jmp
xor
xchg
pop
push
or
pop
and
lea
leave
sub
add
mov
lahf
add
sbb
sbb
dec
push
call
push
rcrl
cwtl
or
lea
pop
mov
in
fsubs
lock
adc
adc
jnp
es
fiadds
adc
gs
dec
fs
loopne
xchg
jg
dec
lods
add
mov
outsb
imul
rclb
fidivl
cs
lods
fcompl
cmp
je
out
or
xchg
mov
inc
inc
in
and
mov
mov
add
aaa
sbb
cmp
rclb
out
cwtl
pop
pushf
pop
or
dec
xchg
jbe
add
ret
cmp
inc
cmpsb
or
fwait
jmp
xchg
out
and
dec
and
mov
out
push
mov
loopne
jl
in
leave
rolb
or
nop
mov
popa
loopne
and
lock
xor
xchg
lcall
sub
cmp
pop
hlt
subb
push
cmp
in
or
lods
jbe
call
faddl
mov
rcrb
in
nop
or
xlat
add
xlat
push
leave
pop
aaa
sbb
xlat
sahf
pushf
xchg
cltd
icebp
and
inc
sbb
jno
jns
icebp
dec
orl
mov
rcrl
in
in
xchg
sub
nop
sbbl
or
mov
mov
or
jmp
or
stc
loopne
repnz
sbb
adc
and
cltd
nop
aam
fcom
mov
jno
sub
inc
inc
pop
push
xchg
mov
adc
xor
and
and
adc
imul
mov
lock
dec
xchg
std
mov
stos
push
fxtract
or
push
sbb
or
cmp
cmp
and
or
or
or
enter
lock
cmp
cmc
adc
xor
xchg
cmc
aaa
inc
cwtl
cwtl
add
mov
xor
test
popf
inc
push
mov
cmc
lods
gs
push
fs
or
inc
mov
or
or
jnp
pop
nop
arpl
cltd
test
pop
mov
testl
pop
shl
adc
and
lods
iret
in
adc
or
adc
imul
or
in
aaa
adc
imul
mov
mov
mov
add
sbb
lds
push
add
shll
mov
inc
or
add
loopne
mov
fadds
clc
or
stos
adc
pop
call
pop
dec
imul
rclb
inc
cltd
movsb
in
ret
adc
add
jae
adc
leave
mov
fsubrl
and
popa
jle
stc
sbb
mov
das
jno
mov
hlt
mov
scas
cmp
sub
jae
aam
fildl
or
cmc
nop
dec
movsb
jge
or
ret
adc
or
cmp
stc
int3
ret
fadds
das
rcrb
add
mov
mov
sub
call
nop
call
fwait
in
jl
fs
adc
sub
sub
lods
lods
lds
inc
sub
adc
or
inc
and
push
lcall
xchg
sub
int
test
push
inc
jmp
in
push
pop
enter
loopne
and
dec
sbb
loopne
loop
add
cld
push
stc
call
das
pop
add
sbb
xor
pop
add
cld
mov
xlat
inc
in
std
adc
adc
test
jnp
inc
mov
aam
jg
mov
adc
test
cmp
dec
jmp
sbb
movl
ficoml
fdivs
jge
lods
loop
inc
or
movsl
cs
sub
mov
insl
mov
and
loopne
dec
jns
out
cmpsl
mov
xchg
call
roll
sbb
shll
fs
mov
push
inc
or
mov
xor
fiaddl
xor
pop
into
mov
repnz
push
sbb
mov
arpl
fsts
js
xor
js
mov
adc
cmp
or
fs
push
or
or
and
add
xor
daa
add
add
push
cmpsl
cmp
ret
sbb
dec
cmp
sbb
push
add
sbb
lret
lods
out
sbb
cmp
add
cmp
cmp
xor
pop
sti
cwtl
stc
sub
imul
outsb
andb
add
sub
lods
cmp
inc
and
je
jb
add
xchg
cwtl
and
add
mov
daa
cmp
xlat
sbb
pop
inc
mov
insl
mov
pinsrw
mov
in
shlb
inc
int3
mov
mul
out
rorb
pop
aam
enter
adc
fistpll
mov
mov
lret
orl
rclb
pop
or
jp
adc
leave
adcl
paddusb
xlat
inc
lods
jno
push
fldcw
pop
xlat
aad
jno
dec
out
sub
fcoms
sbb
pop
mov
rcr
pop
fsub
push
jnp
dec
mov
mov
pop
pop
std
rsqrtps
lock
or
cmp
lcall
adc
stos
inc
push
push
lods
adc
loopne
or
pushf
push
mov
mov
aam
adc
dec
sub
add
pop
mov
xor
std
cmc
fnstenv
fsts
call
cmc
movsb
fs
and
push
and
mov
dec
es
xchg
nop
pushf
les
out
fmul
int3
int
or
dec
mov
ds
sub
enter
jnp
cmp
mov
aaa
test
or
sbb
stos
mov
mov
aaa
inc
mov
dec
and
sub
das
ja
lods
mov
xor
ficomps
fdivr
or
jg
loopne
and
inc
add
mov
adc
pop
in
inc
dec
push
imul
cmp
call
cmp
push
aam
leave
add
insl
imul
add
aaa
iret
imul
sbb
leave
or
dec
or
push
or
pop
push
addb
mov
ret
nop/reserved
xchg
pushf
mov
add
leave
fcomi
jge
jns
and
adc
jne
inc
sub
or
jecxz
lods
cltd
mov
test
or
repnz
add
dec
shll
mov
mov
add
jmp
loopne
sbb
push
dec
cmp
dec
sbb
mov
aaa
push
mov
nop
pop
push
aam
push
xchg
mov
mulb
popa
jnp
fdivr
notb
es
and
adc
inc
inc
stos
dec
xor
mov
sbb
inc
or
in
int3
test
dec
js
mov
lds
mov
adc
add
cmp
xor
pusha
or
dec
daa
mov
loopne
sub
aad
iret
adc
fucomp
ja
mov
push
adc
fimull
adc
es
pop
inc
mov
and
xor
jmp
sub
add
add
or
aad
dec
scas
addb
jae
adc
sub
pusha
inc
in
or
cmc
test
fdivl
fdivl
aaa
jno
jle
push
or
in
movsl
nop
mov
rclb
dec
cmpsb
sbb
lret
push
pusha
in
adc
add
loopne
and
fs
mov
jl
adc
sub
rcr
and
rcll
cltd
imulb
adc
es
inc
aam
mov
mov
fistpl
test
shrl
rorb
adc
fwait
jno
in
addl
inc
xchg
and
scas
add
adc
cmp
leave
rclb
cwtl
or
bound
xlat
jge
in
ss
fmul
adc
lret
rorb
int
sti
xor
add
jge
sbb
dec
or
push
xor
scas
int3
gs
add
repnz
adc
mov
adc
xchg
lcall
rorb
cmp
aam
inc
mov
int
mov
xorb
fs
mov
add
lahf
int3
test
in
sub
mov
mov
pop
mov
call
jns
pop
add
mov
shlb
jecxz
mov
psubusb
sbb
lock
pop
xchg
stos
adc
sub
mov
push
mov
pop
stos
pop
mov
xchg
or
insl
shll
sbb
popa
inc
fs
sub
dec
cmpsl
sbb
or
add
sbb
sbb
gs
push
cmpl
jne
mov
adc
bound
test
test
enter
mov
loop
shrl
sbb
lock
and
fs
xchg
adc
shlb
test
xchg
inc
jns
pusha
shlb
sub
adc
pop
insl
fisubl
cwtl
shl
sbb
dec
int3
fs
fildl
dec
cwtl
xor
adc
lods
lods
test
and
hlt
test
xchg
movsl
xor
lock
orl
aad
in
push
lods
mov
fildll
jge
cwtl
sbb
add
dec
xor
je
in
stos
pushf
mov
and
mov
mov
test
and
adc
push
push
cmp
push
js
or
pop
test
aaa
push
andb
insl
jno
fcoms
xor
xor
push
push
add
or
cmp
sahf
add
std
out
shrb
jbe
js
leave
xor
pusha
inc
inc
addb
push
xor
or
out
mov
xor
jl
and
mov
jo
fdivs
adc
shrl
inc
jo
mov
xlat
enter
and
cmpb
mov
push
mov
lods
cwtl
pusha
sub
test
in
idiv
leave
add
in
sbb
xchg
stos
int3
pop
and
pop
sbb
loop
pop
test
or
and
lods
test
nop
xorb
sub
fadd
inc
mov
enter
fs
sub
and
or
add
cs
call
fcmovbe
xlat
fnstenv
subl
add
fadd
mov
add
fsubs
es
test
fadds
std
call
sub
rolb
lea
dec
pop
and
sbb
cmpsl
mov
push
cmpsb
shrb
int
mov
and
mov
pop
adc
dec
push
push
push
lea
arpl
test
stc
dec
adc
es
cwtl
adc
cmp
cmp
push
inc
dec
cmp
dec
es
jp
idivl
es
std
movsl
adc
pop
leave
add
imul
push
push
insl
sbbl
push
adc
xor
mov
adc
leave
and
and
sbb
and
dec
sbb
inc
and
dec
xor
inc
sub
dec
shrl
pop
jno
sbb
xchg
cli
sub
imul
mov
out
shlb
cmp
cmp
call
jnp
sbb
movsb
sub
dec
enter
jle
outsb
mov
dec
and
adc
in
pusha
add
and
rolb
cltd
or
aam
and
xor
sub
and
push
stos
jbe
xchg
leave
add
test
or
repnz
ret
xor
std
adc
or
cwtl
fsubrl
adc
test
lods
test
test
dec
jne
jb
aad
nop
cmpsl
test
movsb
fmull
sub
test
enter
cmpsb
rcrb
or
les
shlb
mov
shrb
inc
jle
mov
rclb
cmpsl
mov
sub
add
pop
pop
adc
and
fs
push
leave
push
xchg
xor
aad
fwait
rorb
mov
pop
aas
inc
mov
es
or
inc
js
in
xor
fmull
cmp
push
fdivs
fdivs
mov
adc
mov
pushf
pusha
add
das
sbb
adc
pop
adc
push
lds
popa
jae
or
adc
mov
add
pop
push
xor
sbb
add
jo
or
mov
xor
sub
addl
or
push
hlt
ljmp
mov
stos
inc
dec
xor
pop
mov
mov
pop
roll
outsl
int3
jmp
pop
xor
jmp
push
push
xor
jno
and
mov
test
mov
add
and
add
inc
pop
jo
test
mov
cmp
jno
arpl
in
jns
stos
sub
cwtl
and
rorb
jbe
popf
sub
pop
xor
jge
insb
pop
sbb
gs
ljmp
in
push
or
or
stos
xor
jb
dec
fwait
adc
sub
pop
pop
leave
add
adc
fists
inc
xchg
add
test
mov
call
sbb
xor
xor
fwait
testl
push
xor
dec
je
mov
jns
and
mov
cmp
sti
js
add
inc
pop
cltd
test
push
bound
xor
dec
sbb
in
mov
sub
rolb
in
xor
or
adc
and
ja
pop
xchg
adc
pusha
getsec
cwtl
das
lods
add
add
add
lods
or
push
mov
xchg
pop
cmp
cmp
loopne
add
mov
or
test
jne
lahf
adc
push
aam
or
or
outsb
mov
pop
aam
mov
aam
loopne
fdivrs
xchg
insl
shr
fildll
pop
mov
stos
adc
mov
jg
sbb
and
rcrb
sarl
add
sub
push
cmp
inc
push
movsl
mov
add
xlat
cs
hlt
xchg
adc
xchg
pushf
mov
or
and
pop
mov
fnstsw
push
test
mov
xorb
ret
enter
mov
syscall
cmp
loopne
add
icebp
imul
xchg
sbb
and
xor
mov
orb
xchg
test
aam
sbb
mov
in
int3
adc
sbb
shlb
lods
test
dec
pop
xchg
mov
sbb
fisttpl
mov
jbe
inc
rcrb
xchg
bswap
enter
jb
mov
in
nop
orb
inc
xchg
fwait
adc
mov
paddusb
sbb
sub
cwtl
and
movsl
adc
in
enter
xchg
xor
bound
pop
sbb
mov
lret
inc
mov
add
test
nop
stos
jecxz
jmp
loopne
out
jl
mov
sbb
fnsave
fs
aam
adcl
sub
das
push
loope
movsb
sub
jmp
in
adc
nop
or
lock
inc
push
pop
test
dec
mov
ds
sub
pop
enter
lods
adc
lods
rcl
xchg
jmp
popf
mov
sub
cmc
outsl
bound
mov
std
inc
adc
sub
mov
cs
imul
outsb
mov
mov
and
inc
mov
or
insb
rolb
xchg
push
pushf
mov
inc
jno
rolb
imul
jo
cmpsl
xor
repz
repnz
inc
dec
pop
sub
outsl
shrd
les
inc
popa
dec
cmpl
enter
daa
inc
and
cmp
add
sbb
dec
es
movsb
adc
sbb
popf
fs
adc
pusha
imull
xchg
dec
sbb
push
xor
gs
sbb
nop
es
dec
dec
in
mov
pop
xchg
imul
xchg
scas
mov
pop
ficoml
mov
push
insl
push
sbb
add
mov
leave
xchg
xchg
js
add
inc
mov
dec
stc
dec
xor
xchg
and
or
invd
rolb
sub
and
fsubrs
test
sub
inc
add
or
bound
stc
les
and
test
sarb
sbb
rol
mov
nop
or
pop
mov
adc
fldt
mov
pop
ss
push
scas
sbb
rolb
sbb
xor
and
nop
add
mov
adc
inc
xor
dec
cmpsb
xchg
mov
ss
stc
les
xchg
pusha
das
mov
mov
cmp
mov
in
cwtl
jl
xchg
dec
xor
adc
popa
enter
movsb
and
shlb
aas
xchg
xor
aas
mov
nop
dec
push
int3
pushf
or
xor
outsb
adc
jo
shlb
adc
stos
sub
mov
insl
adc
mov
mov
jbe
xchg
inc
mov
adcb
adc
repz
sub
jno
adc
rorb
mov
mov
mov
das
sbb
fs
pushf
mov
pop
xor
nop
movsb
cmp
lods
or
sub
pop
inc
push
mov
roll
stos
push
fidivl
jo
sbb
sarl
sbbb
lock
dec
movsl
repnz
dec
cwtl
in
call
adc
and
lods
insl
pop
or
or
fsubrs
xor
in
adc
fwait
sub
push
and
imul
cltd
inc
mov
add
repz
insl
mov
popa
or
and
and
push
nop
dec
and
sub
mov
sub
movsb
les
shll
sub
jae
cltd
scas
cltd
fadds
roll
push
xor
xor
repz
nop
ret
mov
mov
pop
and
jmp
leave
fcompl
inc
push
int3
in
mov
in
aaa
xor
cmp
add
add
ret
shll
sbb
mov
sub
add
repnz
enter
movsl
imul
int3
pop
sub
sbb
inc
adc
dec
sub
movl
imul
mov
xchg
mul
and
sub
sbb
inc
add
jnp
pop
test
sub
sbb
lds
add
inc
jnp
repnz
in
mov
pop
cmp
lods
push
dec
xor
inc
xorb
cmp
and
xchg
xchg
or
xor
xor
adc
push
xor
ljmp
xchg
mov
rcrb
test
cmp
pop
adc
addb
sub
rclb
adc
ljmp
jnp,pn
mov
bound
test
test
jge
adcl
fiaddl
in
call
or
cmp
pop
dec
push
xorb
push
pop
add
mov
inc
lods
imull
scas
pop
and
aam
or
cltd
dec
aad
pusha
adc
or
inc
sub
lds
push
or
and
or
pop
and
add
push
jo
inc
xor
and
push
sbb
icebp
jp
sbb
pop
repnz
js
fadds
inc
xorl
push
add
sbb
xchg
std
xorl
push
sti
pop
mov
bound
push
push
imul
sub
in
dec
pop
dec
pop
enter
insl
mov
nop
cli
mov
xchg
fstpl
incb
bound
jmp
push
and
enter
dec
scas
push
imul
fcoms
scas
push
leave
rep
test
cwtl
enter
lds
test
adc
ret
cmpsb
lret
ja
inc
add
dec
xor
sti
mov
scas
loope
add
push
int
dec
cmpsb
arpl
sbb
jo
jbe
push
push
nop
cmp
es
mov
or
add
and
inc
adc
lds
fs
xchg
cmp
or
push
pop
add
sub
pop
sub
enter
clc
fdivr
mov
or
inc
int
sub
xorb
pop
stc
bound
sbb
sbb
nop
add
in
mov
and
int3
hlt
mov
adc
rclb
test
lods
insl
ret
inc
add
ret
pop
or
roll
fcomps
and
mov
pop
dec
mov
xlat
push
push
pop
test
jbe
inc
lods
adc
es
mov
icebp
add
mov
or
jl
lea
dec
push
test
or
pop
orb
inc
outsb
pop
dec
shrb
test
pmulhw
push
jne
sub
add
fsub
pusha
sarb
lock
mull
cmp
or
dec
mov
sub
in
in
push
xor
int3
inc
pop
push
stc
mov
add
sub
push
jb
pop
xor
dec
sbb
inc
imul
movsb
jb
sbb
dec
xor
aam
inc
push
in
insl
mov
xchg
jne
xor
jge
mov
mov
sahf
dec
ret
and
fmuls
pusha
mov
idivl
dec
mov
xchg
enter
cli
sub
jae
shll
es
fstl
mov
ficoml
add
mov
mov
rcr
sub
and
push
and
push
ja
scas
push
or
js
or
and
dec
inc
lret
jmp
sub
sbb
add
or
sub
jp
pushl
sbb
add
es
mov
push
xchg
ja
clc
lcall
push
lcall
mov
push
and
sub
iret
lret
mov
mov
jmp
test
out
add
pop
outsl
xchg
mov
mov
cmp
repz
dec
pop
adcb
cmp
and
push
data16
push
add
push
xchg
pop
mov
divl
pop
aas
add
cmp
mov
mov
add
inc
orb
clc
jnp
mov
add
adc
mov
rcll
xchg
adc
or
jmp
cmp
rclb
cmpl
test
add
nop
add
into
pop
sahf
out
in
adc
test
and
push
xor
lret
insb
and
call
add
fs
aaa
test
cwtl
push
add
popa
cmpsl
lock
rdpmc
add
smsw
sbb
sub
std
lods
push
mov
and
insb
outsl
arpl
imul
mov
xor
jb
sub
popa
arpl
jne
jb
outsb
jo
mov
add
das
add
push
insl
adc
sti
ficoms
dec
push
rolb
jb
js
je
jb
mov
jae
add
or
mov
add
add
jge
add
jne
les
inc
and
jb
dec
push
add
add
addb
jbe
aaa
or
fs
add
add
in
std
push
add
aas
fdivs
in
mov
add
sub
mov
insl
xchg
je
je
and
fdiv
loopne
jae
dec
fisttpl
fs
cmpsw
insl
push
push
inc
mov
mov
jns
push
jne
into
xorl
sbb
popa
xchg
aas
imul
imull
ja
or
mov
cmpsl
insl
xchg
arpl
lret
aas
and
fnstsw
outsl
jmp
jo
mov
ja
xor
stos
insl
sub
xor
fstl
scas
ja
ja
out
jnp
jb
jne
inc
push
data16
xchg
testl
insb
jp
sub
sub
jnp
arpl
lahf
popa
push
cmp
arpl
jo
in
inc
or
daa
dec
jbe
inc
inc
subl
fbstp
mul
fisubrs
je
adc
sbb
lds
jo
arpl
fcoml
fistl
insl
mov
scas
xor
pop
ret
push
fbld
inc
mov
sbb
fidivrl
adc
mov
cs
cmp
pusha
xor
daa
outsl
popa
xor
fs
bound
sub
call
outsl
xchg
pop
push
jno
lahf
aaa
jg
add
pop
dec
iret
fistps
push
enter
filds
nop
or
xchg
xorl
jb
jne
mov
inc
mov
jbe
mov
pop
stos
bnd
push
das
rcrl
jae
adc
ljmp
push
jo
lahf
outsl
mov
pop
insb
aas
or
arpl
sbb
push
mov
xlat
pop
leave
rcll
insl
cmc
jge
add
imul
xor
pop
imul
shll
jnp
pop
xor
rdtsc
cmpsl
outsl
subl
pushf
jo
bound
rcll
cmp
stos
mov
insl
lret
je
lock
inc
cmpsb
scas
cmp
addr16
in
fisubs
stos
mov
popw
pop
and
push
sub
sub
ret
or
xor
fstps
addr16
add
out
cmp
in
js
and
out
enter
and
sbb
adc
enter
sub
in
xchg
sbb
mov
clc
sbb
sbb
mov
push
ljmp
xchg
das
jmp
js
jns
ret
pushf
jp
cld
pop
cmp
jge
lcall
pusha
dec
aaa
add
data16
jp
inc
mov
sarb
add
push
mov
dec
jb
fcmovne
xlat
sbb
cmp
mov
gs
imul
fdivl
popf
mov
mov
cmpsl
push
fwait
cmp
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
icebp
add
insl
insl
cmp
add
mov
and
jns
add
das
das
jns
call
jle
push
dec
push
inc
inc
arpl
bound
push
call
jbe
dec
arpl
inc
jo
in
jge
ret
sub
addr16
xor
insb
xchg
outsb
das
jle
pop
xchg
inc
jo
imul
shlb
cwtl
inc
popa
outsb
adc
out
scas
cmpsl
xchg
popl
pushf
jae
jg
addr16
popa
je
jb
xor
mov
jae
push
gs
imul
int
sbb
dec
outsl
outsb
and
out
mov
ja
pop
dec
inc
mov
je
aas
add
out
dec
or
sti
push
add
insb
jae
jl
shrb
push
push
inc
push
popa
insb
jne
inc
and
inc
xchg
inc
mov
sbb
ljmp
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
jecxz
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
clc
outsb
push
mov
pop
pop
pop
pop
pushl
xor
popa
bound
gs
imul
jo
xchg
aaa
sbb
xor
js
jp
jl
jle
dec
ror
in
insl
adc
lcall
loopne
jge
fldcw
pop
add
orb
sar
out
xchg
lret
jno
icebp
pusha
inc
mov
clc
ret
movsl
ret
mov
jno
shrb
push
imul
jg
je
cmp
dec
add
jo
out
ffree
movsb
xor
stos
out
mov
pop
dec
pop
sbb
jnp
xchg
or
ret
ret
movsl
cmp
int3
adc
cmpsb
sub
adc
add
and
push
pop
push
push
lcall
pop
hlt
and
add
pusha
push
add
outsl
ja
in
inc
add
or
xor
sbb
addb
addb
addb
add
and
adcb
pop
daa
push
cmpb
cmp
and
sub
jb
int3
push
add
mov
dec
pop
add
mov
imul
xor
or
dec
ljmp
shlb
mov
rorb
add
jb
leave
jae
or
pop
nop
xchg
xchg
xchg
dec
pop
jb
mov
mov
movsl
sub
and
pusha
popf
dec
cmpsl
shrl
mov
mov
hlt
add
lods
push
stos
aad
mov
jmp
jp
add
sbb
jle
ror
cmp
push
push
inc
sub
ja
xor
dec
inc
pop
dec
dec
inc
dec
inc
adc
cwtl
push
sub
notl
fs
mov
push
jae
mov
bound
je
outsb
data16
push
add
out
je
xor
sub
fisubs
daa
pop
lea
negb
gs
outsl
js
push
inc
cs
into
mov
and
inc
outsl
insl
jo
jo
and
and
mov
xchg
shlb
aaa
insb
les
dec
imul
jns
inc
mov
insb
jnp
insl
ds
cmp
dec
inc
jb
jns
daa
aaa
xchg
pop
and
cmpl
mov
mov
insb
and
cmpb
and
cmp
push
outsb
jle
jbe
mov
mov
dec
fdivl
or
jb
and
inc
mov
pusha
inc
jbe
push
inc
cmp
mov
imulb
dec
andb
push
jp
pusha
xchg
xor
inc
faddl
aas
jbe
imul
and
push
lds
daa
mov
dec
adc
jnp
insb
inc
popa
push
outsb
mov
cmpsl
pop
popa
push
push
jae
or
xor
insb
call
aam
clc
addr16
orl
gs
mov
mov
and
inc
mov
notl
dec
testl
dec
mov
aam
enter
les
ret
add
ds
add
push
jle
jb
push
xor
jae
call
pop
adc
je
stos
outsl
jae
inc
pop
lods
loopne
in
xchg
das
gs
sub
popaw
sbb
xchg
sub
push
pop
aaa
pusha
push
or
jnp
lods
pop
das
je
outsl
xchg
or
aaa
daa
xchg
mov
popw
jns
pop
cmp
cmp
ds
and
push
das
push
sub
test
sahf
mov
jle
jns
cmp
add
add
cmp
sub
pop
or
sbb
das
sbb
aaa
flds
sbb
and
push
mov
ficomps
xchg
pop
pop
jne
sbb
xlat
scas
stos
addr16
push
jbe
or
sbb
jo
ss
gs
imul
hlt
cmp
addr16
sbb
sahf
inc
cltd
jnp
test
sub
popa
sub
adc
jl
out
sub
notl
iret
cmp
xor
sbb
cmp
out
add
clc
lock
notb
enter
cmp
push
mov
cmp
repz
test
cwtl
sahf
out
iret
xchg
nop
mov
test
iret
jnp
push
jl
jae
cmp
push
push
je
pop
aas
mov
out
popf
das
pusha
push
pop
pop
push
push
jns
out
dec
dec
inc
inc
cmp
jns
out
xor
sub
iret
mov
sahf
adc
add
call
repz
mov
sub
addr16
call
jns
out
push
dec
inc
xor
rep
sahf
adc
cli
cld
in
shlb
mov
out
lock
sbb
stc
xchg
stc
mov
xor
sub
stc
and
fdivrp
inc
clc
jle
mov
fcoml
jns
add
and
adc
test
addl
pop
jg
add
stos
mov
ja
add
xchg
lods
push
add
mov
add
add
dec
add
dec
pop
dec
adc
adc
andl
mov
xor
xchg
das
jle
lcall
addl
mov
call
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
sar
call
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
xchg
hlt
push
repnz
cmc
div
clc
stc
cli
sti
cld
mov
and
addb
sbb
call
loop
test
and
or
jg
outsb
gs
popa
data16
pop
sar
jle
cmpsb
pop
jns
push
xor
add
out
cmp
xchg
fiaddl
data16
aaa
push
xchg
jecxz
dec
arpl
inc
insb
fs
jno
aas
sbb
mov
fidivrs
repz
push
addr16
mov
sub
add
add
cmp
push
dec
sbb
pop
and
xor
push
dec
inc
dec
cmovns
add
loope
in
adc
sub
adc
add
mov
mov
mov
out
xor
jnp
inc
loop
mov
ds
pop
adc
cmp
pusha
pop
clc
lret
sbb
jb
jge
jmp
arpl
cmp
jg
adc
incb
mov
mov
and
cmp
dec
imul
pop
jns
iret
lret
add
inc
mov
mov
add
dec
mov
pop
sahf
fwait
ss
sbb
pop
jns
dec
sti
jnp
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
pushl
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jmp
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
aas
sbb
pop
xchg
sub
pop
mov
out
leave
ljmp
add
dec
test
shrl
leave
jmp
or
mov
sahf
xchg
dec
add
scas
lods
dec
lock
xor
out
iret
adc
push
pop
pop
repnz
test
xor
es
lods
flds
sbb
add
add
lsl
lods
int
mov
aaa
jo
cmp
daa
or
push
fisttpl
sub
mov
xchg
and
lahf
bswap
sub
or
add
dec
mov
ja
pop
and
mov
inc
fwait
imul
outsb
addr16
es
jae
in
add
outsb
lret
fildl
jmp
xlat
test
sub
ficomps
mov
adc
bound
pusha
dec
loopne
jg
aas
fs
pcmpeqw
sti
cmp
mov
popa
daa
inc
fildl
pop
imul
je
jmp
loope,pn
jae
insb
add
je
fstpt
out
shr
xchg
lret
xchg
jb
fists
ret
fildl
inc
jb
add
inc
stos
jae
fs
or
ret
push
movsb
pop
jo
pop
xchg
clc
and
imul
mov
jae
insl
jle
pxor
cmpsl
xchg
sub
sub
jecxz
loope
js
jg
repz
fbstp
pop
out
push
push
push
or
adc
mov
xchg
adc
ret
insb
push
in
cmp
ret
or
stos
jg
mov
sbb
xchg
outsb
icebp
mov
fs
lcall
loope
mov
jmp
add
mov
pusha
js
sub
mov
aad
cmpsl
out
add
out
mov
cmp
pop
pop
cmp
mull
jne
adc
dec
cmp
out
jo
push
scas
sti
sub
pop
mov
es
cmp
mov
cmp
adc
pop
dec
out
jmp
xchg
out
clc
cmc
sub
insl
ret
dec
dec
loopne
adc
mov
push
xchg
gs
mov
jp
xchg
ja
jo
add
jnp
mov
pop
dec
pop
popa
xor
ja
out
imul
out
xchg
out
xlat
inc
xlat
addr16
je
and
pop
aas
arpl
add
mov
pop
arpl
add
sbbl
gs
jne
xor
inc
in
mov
sub
sbb
arpl
fbstp
sbb
pop
stos
pop
inc
mov
sbb
add
outsl
mov
mov
adc
aas
arpl
pusha
aad
ja
xchg
lret
bound
sub
inc
sub
jo
ret
ss
ja
xchg
sub
fiaddl
fiadds
aas
mov
inc
loope
mov
test
icebp
jecxz
addr16
push
add
arpl
arpl
shll
push
pop
call
push
push
push
push
dec
popa
jae
rol
js
out
or
inc
mov
xor
pop
out
pop
mov
ja
out
out
cmp
push
adc
cmp
dec
aaa
pop
xchg
ret
mov
add
stos
jecxz
aad
mov
pop
aad
stos
outsl
push
sub
or
inc
xchg
test
and
divl
xor
add
cmp
imul
inc
sub
call
or
xchg
js
test
pop
icebp
pop
xor
dec
arpl
push
cmp
inc
outsb
mov
stos
push
dec
shll
sub
pop
push
sub
outsb
sti
xor
add
fildll
push
stos
inc
mov
bound
jae
push
pop
insb
call
addr16
lret
and
fcompl
insl
sbb
jg
bound
ret
dec
outsl
and
lods
sti
mov
adc
push
inc
jmp
outsl
sbb
addr16
pop
add
or
xlat
pop
shrb
shll
es
outsb
fwait
lods
loope
out
inc
push
mov
jnp
sbb
arpl
jo
testl
pop
inc
xor
mov
sbb
imul
mov
cmpb
ss
mov
dec
cmp
adc
xchg
cli
lock
loop
test
pop
por
insb
mov
scas
inc
bound
mov
cmp
outsl
mov
ja
fstpt
xchg
inc
arpl
pop
xor
sarb
mov
inc
jge
sub
mov
inc
jl
insb
sarb
cmc
les
jl
imul
push
arpl
cmp
ja
and
addr16
bound
das
repz
loopne
push
mov
mov
jl
inc
mov
bnd
mov
gs
jl
push
cmp
mov
mov
jnp
sbb
pop
addr16
jmp
es
inc
scas
mov
popf
mov
ja
imull
outsb
testl
xorb
pop
shlb
jno
les
jno
xchg
imul
insb
sub
lret
jl
jo
bswap
add
bound
jns
lea
arpl
sbb
cmp
adc
jl
aaa
mov
sbb
adc
or
mov
insb
pop
ret
ja
sbb
ret
out
adc
mov
addr16
enter
imul
sub
mov
push
addl
les
cmpl
lahf
cmpsl
aaa
sbb
clc
ret
movl
pop
push
jns
jae
jecxz
cs
lahf
dec
xor
or
dec
adc
out
mov
pop
lret
sbb
sbb
mov
or
out
pop
iret
icebp
jmp
xlat
xorl
pop
test
fsubs
inc
insb
sub
mov
pusha
aam
aas
popa
popl
je
aaa
ret
lods
es
fwait
mov
addr16
mov
in
push
pandn
dec
jge
dec
pop
daa
push
aam
or
push
cmp
mov
pop
add
ss
shlb
rolb
fbstp
sbb
xor
fildl
int
mov
inc
shr
cmpsb
inc
loopne
cmp
insb
or
xchg
push
inc
add
push
mov
pop
push
outsl
ds
shlb
and
lahf
jbe
jg
aam
dec
jnp
repz
stc
test
dec
xlat
fstps
cmp
loopne
cltd
dec
aaa
pop
mov
out
mov
push
add
push
dec
stos
out
fxch
lock
push
dec
pop
push
xor
sub
insl
fstpt
jae
addb
fnstcw
push
cltd
mov
aad
int
cmp
cmpsb
mov
xchg
shll
test
pushf
outsb
dec
iret
je
idivl
inc
ja
xorl
jae
outsl
jo
inc
fwait
cmc
and
idivl
mov
arpl
dec
cli
ret
cmpsb
push
and
arpl
out
or
insb
fwait
subl
sti
aas
out
jl
aad
push
jae
xchg
mov
outsb
arpl
push
gs
insl
push
pop
out
pop
pusha
push
popa
jne
or
and
ss
push
dec
bound
xor
ficompl
and
mov
pop
mov
mov
sarb
addr16
add
das
pop
iret
jbe
out
mov
incb
movhps
repz
cmp
fldcw
sarl
mov
push
ret
add
shlb
dec
jl
mov
or
jb
jno
and
fisubrs
cmp
out
add
outsl
jb
sahf
jb
jbe
fidivl
jb
and
inc
sbb
jge
shll
cmp
and
arpl
xor
loop
std
adc
fs
adc
mov
or
loop
mov
aaa
or
jne
je
ss
cmp
imul
or
sub
aam
pop
in
lods
adc
cmp
fcompl
movsl
xchg
aas
cwtl
or
push
push
mov
popf
dec
je
pop
pop
jne
imul
cmpsl
xchg
pop
push
scas
ja
fists
mov
inc
push
ja
push
rorb
mov
js
ret
xchg
outsl
inc
orl
mov
stos
pop
pop
add
or
jmp
push
inc
mov
pop
cmp
add
in
cmpsb
ss
adc
cmpsb
mov
lods
loopne
repnz
pop
outsb
adc
jbe
fcompl
push
add
mov
ja
add
push
lahf
jne
hlt
dec
push
push
xchg
or
aam
sbb
imul
inc
jg
sbbl
ljmp
rep
xor
and
inc
fs
sbb
mov
cmpsb
call
add
cmp
jecxz
das
xchg
dec
add
arpl
sbb
data16
sahf
mov
aam
data16
or
or
dec
jnp
and
pusha
inc
iret
mov
call
mov
inc
mov
sbb
or
lods
push
push
adc
pop
mov
pop
arpl
push
call
dec
mov
mov
push
outsl
sub
jne
gs
repz
iret
inc
fs
and
push
mov
xor
and
es
rcrb
inc
outsl
mov
adc
add
and
add
inc
xchg
movsl
mov
push
mov
lods
dec
xor
or
adc
sub
dec
sub
xor
imul
sbb
jp
out
jb
inc
jp
arpl
popa
fildl
or
insl
xchg
aaa
pop
bound
pop
push
icebp
adc
arpl
inc
jl
adc
dec
movsb
cmp
fs
es
int3
js
jbe
jae
or
sahf
iret
mov
cmp
fwait
add
push
pop
sbb
cmp
xor
mov
shr
dec
push
cltd
fadds
xchg
in
xor
lret
push
sub
int
or
mov
add
sahf
insl
adc
jns
and
sub
ss
int
xor
inc
mov
mov
mov
fisubs
mov
popa
xchg
add
xor
ret
sub
shrb
stc
xor
int
pop
adc
pop
add
sub
sbb
lret
mov
insb
str
add
int
and
das
incl
inc
fwait
sbb
jbe
xchg
call
ljmp
mov
mov
push
mov
adc
repz
pop
add
mov
xchg
jbe
and
roll
inc
cmp
add
loop
das
das
push
repnz
loope
mov
fsubrp
test
sub
push
add
arpl
push
scas
add
idivl
pop
or
push
inc
rcrb
outsl
inc
push
and
aas
sbb
add
dec
inc
xor
fbstp
ret
fsubrl
jg
fs
xchg
adc
jmp
sbb
sub
push
rcll
pop
pop
cmp
addr16
cmpsl
push
or
jmp
xchg
dec
xchg
mov
arpl
inc
jmp
xchg
push
dec
fdivrl
mov
cli
dec
imul
pop
loopne
scas
xchg
imul
cli
jb
push
mov
out
aad
pushf
mov
push
arpl
das
and
sarb
cmpsl
push
cs
sahf
inc
push
cmp
stos
cmpsl
inc
enter
lahf
sub
sub
mov
cld
dec
jecxz
enter
imul
outsb
jae
sbb
mov
push
scas
inc
or
sbb
mov
push
or
stos
sub
add
imul
inc
push
imul
aas
loope
stos
push
roll
xorl
add
push
das
imul
outsl
pop
das
call
adc
fdivs
push
popa
das
ret
das
pop
jbe
popa
push
mov
push
push
rcrl
adc
movsl
adc
aam
dec
xchg
fbld
out
push
movsb
push
fsubrs
fistl
fisttpll
push
lahf
arpl
icebp
shlb
jmp
hlt
adc
adc
mov
xor
mov
shll
push
fiadds
sbb
pop
push
xchg
cmpsl
jo
push
out
add
push
jecxz
mov
dec
pop
mov
jbe
cmp
sti
pop
xchg
pusha
sub
mov
cmp
pop
popa
sub
add
mov
push
jb
xlat
pop
push
cmpsb
adc
cmpsb
ficoms
inc
cmp
divl
jg
dec
xor
add
sub
mov
inc
lods
and
xor
je
testb
lahf
aas
xor
outsl
pusha
mov
push
sub
fildll
pop
out
sar
pop
inc
rcll
cmc
outsl
daa
sub
mov
push
cld
js
sub
or
mov
sbb
imul
jmp
mov
out
ss
movb
rorl
fbld
add
sub
push
arpl
rclb
scas
mov
stos
je
stos
pop
xchg
pop
add
inc
and
cmpsl
push
mov
push
arpl
imul
fs
pop
fistl
pop
pop
mov
or
cmpsl
pop
push
inc
mov
add
aaa
xor
es
xor
ucomiss
outsl
push
ss
movl
xor
cmp
push
scas
popa
ss
add
or
popa
mov
out
outsb
adc
cmp
imul
pop
rclb
mov
mov
pop
pop
mov
add
sahf
xor
das
frstor
lret
cmp
pop
pop
push
lahf
fsubrs
popa
xchg
decl
adc
les
lcall
inc
aad
adc
add
mov
sbb
mov
push
and
push
out
cmpsl
adc
xchg
push
ret
cmp
adcl
mov
aas
ja
les
fsubs
decl
mov
rorl
xchg
pop
and
pusha
pop
addr16
xchg
outsb
and
sub
es
pop
dec
cmp
ret
lods
mov
pop
sbb
lret
sub
jno
les
dec
adc
mov
push
mov
add
inc
das
jb
pop
out
test
mov
dec
push
pop
minps
aas
push
andl
xorl
jle
dec
mov
jmp
pop
mov
dec
push
mov
stos
adc
push
pop
outsl
push
mull
test
cs
inc
dec
pop
lods
inc
inc
fildll
jp
mov
cs
dec
dec
add
les
insb
jnp
push
subb
lret
pop
scas
pop
addb
fcoms
fistpll
cmp
fbld
imul
pop
jns
lods
adc
or
lds
stc
pop
cmp
into
out
cli
add
out
jmp
popa
and
inc
std
int
mov
cmp
fiaddl
ja
adc
aad
pop
xor
mov
mov
jle
mov
insb
push
xchg
jmp
add
fwait
popf
icebp
outsb
push
and
and
inc
dec
fwait
icebp
fisubrs
push
push
mov
outsb
bound
adc
pushl
sahf
mov
inc
das
mov
sbb
cmpsl
loop
loop
arpl
lret
mov
xchg
dec
sub
inc
lods
aas
movntq
add
sti
push
out
xchg
orb
dec
sub
adcl
sub
pop
xor
xchg
mov
sbb
pop
add
dec
add
lcall
pop
pushf
ret
jge
int3
jbe
mov
sbb
ret
adc
or
rcll
fcoml
out
sbb
pop
or
test
dec
lds
jnp
aaa
add
das
sbb
adc
enter
iret
dec
inc
lods
push
adc
scas
aas
scas
push
fildl
and
push
filds
test
psrlq
fisttpl
push
fs
pop
push
rcr
xlat
and
xchg
push
addl
mov
daa
movb
pop
addb
repz
addr16
mov
je
cmpsl
fisubrs
xor
std
adc
mov
jnp
jge
mov
sbb
das
jl
xor
and
fs
sub
add
sbb
push
jge
push
scas
add
push
insl
pop
mov
cwtl
or
add
add
scas
mov
sti
ja
test
lds
push
insl
arpl
bound
mov
lock
sahf
out
test
mov
out
xor
inc
pushf
stos
in
jb
scas
cld
mov
pop
or
push
jb
scas
mov
push
sbb
mov
push
leave
lods
sarb
sub
xchg
stos
fmuls
xor
in
jb
pop
nop
inc
push
leave
push
shrl
dec
dec
mov
inc
test
movsb
xchg
stos
in
push
add
pop
and
push
jb
mov
mov
push
push
leave
fs
movsl
jnp
pop
and
xchg
stos
in
movsb
shlb
push
lods
fbld
mov
scas
stos
push
leave
mov
stos
mov
mov
push
cmp
push
mov
in
cmp
push
pop
mov
sahf
test
sub
aad
sahf
pop
fistps
in
popf
mov
leave
cltd
sbb
adc
out
pop
and
stos
add
aas
inc
xor
xor
pop
loope
les
pop
pop
rcrl
dec
mov
inc
inc
fwait
mov
or
dec
cmp
imul
jmp
out
pop
pop
or
iret
dec
or
add
push
mov
add
stos
test
push
mov
pop
push
or
dec
fwait
test
jae
nop
cwtl
je
imul
popa
aam
aas
pop
movsl
xchg
ss
repz
dec
inc
data16
add
add
mov
inc
aaa
mov
aas
mov
push
xchg
push
adc
xchg
mov
and
shlb
push
pop
inc
jmp
mov
push
xor
nop
push
or
ss
push
cltd
leave
in
push
scas
sbb
aas
xchg
rcrl
neg
scas
add
scas
jg
fimuls
mov
pop
inc
and
add
movsb
cmovp
sub
loopne
and
jp
les
sti
mov
sbb
pop
or
les
bound
filds
xlat
pop
xor
aaa
outsl
and
mov
addl
xor
adc
add
arpl
lahf
or
aas
pop
gs
add
push
fwait
aas
jmp
push
or
jbe
adc
addr16
rcll
ja
mov
xorl
scas
pop
sbb
inc
enter
daa
push
sbb
pusha
mov
push
icebp
jecxz
pop
push
jg
jbe
inc
dec
orl
aam
jg
add
aas
insb
jae
and
add
sub
pop
add
popa
xor
sbb
and
inc
inc
add
sub
out
jnp
sub
pop
or
pop
sbb
pop
sub
sbb
or
loopnew
cmp
jb
test
popl
and
xchg
cmp
out
xor
pop
jne
addr16
bound
adc
je
or
mov
je
push
cs
sub
lcall
dec
adc
dec
imul
mov
push
fbld
mov
push
into
jns
pop
sbb
jnp
les
in
ss
pop
int3
faddp
dec
dec
bound
jae
js
outsl
icebp
into
imul
and
mov
dec
jnp
add
mov
mov
ljmp
and
adc
pop
ret
rolb
stos
outsl
lock
jae
push
add
fimuls
add
out
daa
call
push
adc
push
call
push
insb
sahf
out
push
andl
iret
not
outsb
mov
dec
push
pusha
jl
add
fwait
lea
mov
arpl
dec
les
and
rolb
and
bound
mov
pop
jb
add
push
inc
xchg
mov
in
xor
add
add
movsl
pushl
test
xchg
outsl
xlat
cs
mov
loope
sub
mov
nop
dec
inc
scas
imul
mov
gs
xor
xor
pop
and
orl
adc
jnp
dec
cmovno
xor
or
cmpsb
lea
xlat
cmp
adc
mov
cmp
out
xor
out
test
jns
and
stos
lret
mov
fiadds
pop
js
pop
pop
add
sub
ja
or
ffree
je
mov
push
jae
and
sbb
push
mov
and
xlat
rcrl
add
sbb
pop
adc
ss
mov
lock
push
test
cmc
icebp
rcrl
and
sbb
dec
loop
sub
out
xorl
ret
push
cs
cmp
xor
fisubrs
aaa
out
es
add
mov
and
insl
xchg
xlat
adc
xchg
push
xchg
inc
xchg
mov
mov
push
xor
jae
fs
jnp
fisubrl
dec
sub
into
xor
xlat
dec
in
loopne
jecxz
pop
out
rcl
repnz
inc
or
cmc
adc
mov
repz
xchg
outsb
repnz
xchg
lea
dec
jbe
dec
or
inc
push
in
fidivrl
ss
push
dec
mov
jns
pop
adc
xor
pop
dec
shll
cs
lret
loop
xchg
outsb
jb
loop
sbb
add
cmpsb
xchg
ja
retw
scas
xchg
sbbl
data16
jo
out
fidivs
mov
fidivrs
sub
arpl
fs
data16
adc
iret
cmp
xchg
dec
dec
daa
repz
push
push
mov
cs
mov
packssdw
inc
pop
pop
fdivrl
sbb
dec
ss
outsb
pop
lock
xor
dec
jb
das
inc
fcomps
fdivrp
pop
dec
es
das
add
sti
mov
jns
inc
pop
push
sysexit
mov
iret
jns
dec
cs
sahf
push
outsl
faddp
push
sbb
cli
push
push
insl
out
mov
xor
push
scas
push
insl
mov
neg
jnp
inc
ja,pn
xor
push
jp,pt
mov
add
ds
sub
neg
inc
scas
jg
dec
das
xor
lds
jp
pop
outsl
lock
or
xor
mov
outsl
jb
sbb
outsl
imul
pop
and
push
sbb
add
movsl
jno
cmp
icebp
shl
inc
movsl
or
jbe
and
inc
mov
sub
mov
outsl
scas
mov
popl
or
dec
push
sbb
outsl
push
test
test
sub
out
cmp
push
inc
inc
fldt
pop
xor
or
inc
jnp
inc
insb
mov
ja
add
testl
iret
mov
xchg
pop
dec
pop
inc
mov
xchg
mov
mov
mov
mov
sbb
pop
mov
call
lcall
adcl
rcl
test
testb
inc
inc
add
adc
jmp
or
aaa
mov
andb
pusha
scas
repz
fstpt
sbb
lahf
push
mov
add
nop
das
dec
daa
push
sub
mov
dec
fwait
jmp
and
lret
dec
and
outsl
ficompl
sbb
dec
outsb
mov
pop
jp
mov
push
mov
sbb
push
cmpsl
lret
imul
sbb
or
lret
mov
add
sub
insb
outsl
popa
fs
outsl
mov
das
aas
add
sub
add
add
out
fs
jnp
xchg
sub
cmpsl
add
inc
sub
sbbl
aam
movsl
popa
cs
dec
loopne
loopne
jbe
mov
jb
addr16
scas
xlat
fdivrs
arpl
popl
arpl
mov
movsb
xor
pop
mov
mov
xor
xchg
cmc
sub
repz
cmc
daa
adc
pushf
add
in
in
nop
add
mov
pop
js
push
pop
pop
cmpl
arpl
xor
ret
mov
xor
xor
push
test
inc
rolb
pop
or
pop
repz
je
jae
push
test
or
xor
sbb
divl
stos
add
adcl
add
adc
add
push
sub
test
mov
adc
sub
shlb
jp
cmp
sub
aam
sub
jg
mov
xchg
popa
inc
test
push
mov
addr16
imul
sti
and
jp
mov
push
fistl
ret
arpl
aam
iret
inc
adc
dec
pop
outsl
popa
xor
clc
fldt
repz
push
iret
push
mov
ret
mov
xchg
mov
daa
inc
mov
push
pop
mov
iret
inc
movl
pop
scas
push
jl
stos
addl
das
adc
shlb
pop
iret
fists
pop
push
bound
or
outsb
dec
arpl
lea
xchg
jae
daa
jbe
les
mov
ficompl
xor
dec
outsl
stos
into
clc
lcall
mov
jmp
fisubrl
outsl
out
test
push
in
xlat
aaa
sub
mov
push
mov
xor
movsl
mov
sub
jbe
addr16
mull
dec
xlat
jle
xorb
out
push
cmovbe
fisubs
jmp
mov
ja
mov
inc
adc
pop
lcall
add
imul
icebp
loope
imul
fcoms
xlat
cli
mov
fsubrp
push
out
mov
fiadds
outsb
push
enter
mov
push
frstor
jbe
push
jnp
mov
dec
mov
add
xor
xlat
pop
insb
and
nop
and
mov
mov
in
lcall
negl
push
and
mov
add
adc
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
pusha
or
mov
sub
sub
or
sti
jg
mov
mov
mov
ds
pop
sbb
mov
subb
mov
dec
fsubs
mov
pop
insb
sbb
mov
pop
dec
xchg
mov
pop
pop
jecxz
dec
push
pop
add
pop
jb
mov
push
arpl
pop
and
mov
dec
sub
xor
lds
imul
pop
xchg
test
fists
lods
jne
inc
xchg
jo
ret
lods
inc
and
sbb
xchg
jbe
add
dec
fs
in
das
cltd
push
inc
sub
xchg
dec
cs
and
test
and
repnz
push
xor
cmp
pushf
aam
les
xchg
inc
outsl
or
cmp
repnz
rcrb
xorb
lahf
adc
stos
mov
out
inc
shrb
pop
dec
xchg
aaa
mov
arpl
jge
dec
sub
xchg
xor
test
into
pop
fwait
ret
test
pop
add
mov
mov
cmp
sub
adc
or
push
mov
inc
mov
inc
mov
sahf
mov
cmp
jo
imul
xor
add
lock
inc
dec
movsl
pop
add
loopne
add
bound
je
bound
imul
outsl
cmp
dec
mov
mov
and
add
push
lock
mov
aaa
push
mov
cmp
jae
jnp
xchg
xlat
or
pop
xor
subb
xor
adc
xor
add
mov
scas
mov
scas
cmc
test
je
aaa
lods
shrb
fistl
aaa
xor
and
and
dec
lock
mov
movzwl
pop
ret
xlat
aas
addr16
out
inc
call
and
mov
sub
inc
movl
or
xlat
out
add
lods
adcb
stos
arpl
cmpsb
test
lahf
outsb
repz
popa
daa
jmp
sarb
pop
adc
shll
push
dec
adc
mov
pusha
mov
jbe
pusha
fcom
daa
outsl
dec
roll
and
add
xchg
shlb
pop
dec
jle
test
cs
fstpt
xchg
push
pusha
es
addb
adc
movsb
inc
add
mov
repnz
pop
outsl
lock
jnp
iret
mov
sbb
xchg
and
push
cmp
jae
dec
xor
dec
sbb
mov
mov
push
add
push
data16
mov
jbe
jbe
ret
or
pop
jle
jnp
add
and
iret
mov
cmc
push
jo
jb
xchg
cli
fcmovb
jae
into
cmc
daa
aaa
ud1
or
aaa
add
mov
and
add
pop
dec
jno
push
and
fldcw
jle
cmpsb
push
mov
fidivrs
mov
dec
push
push
and
sub
or
jne
cmc
sub
sub
mov
ljmp
das
dec
insl
lods
ss
out
pop
sbb
sub
inc
pop
mov
insb
inc
cmp
jbe
dec
mov
out
xchg
bound
mov
out
mov
popf
push
shl
and
sub
fnstcw
xchg
pop
arpl
insb
pop
int
cmp
inc
lea
mov
xchg
inc
js
xchg
nop
jns
in
inc
mov
mov
xchg
dec
loopne
mov
fsts
inc
or
out
cmp
push
jbe
inc
sub
xor
mov
enter
inc
push
mov
lea
test
mov
push
out
out
sahf
in
sbbl
loopne
into
xchg
pop
mov
inc
mov
cmp
push
xchg
out
sahf
in
xor
push
xor
inc
sbbl
push
dec
filds
xor
aaa
fnstsw
add
push
sbb
addr16
out
xchg
outsb
dec
outsb
cld
inc
outsl
dec
jecxz
cmp
out
sahf
outsb
cwtl
lret
rdtsc
cmp
repz
jbe
leave
repz
cmp
into
clc
iret
repz
cmp
and
jp
pushf
int
cmp
loop
cmp
cmp
das
iretw
and
jg
dec
sbb
scas
sub
aas
push
jecxz
adc
stc
add
adc
cld
ljmp
adc
push
mov
xor
adc
mov
lds
pop
mov
jg
or
mov
dec
mov
int3
push
and
jg
jg
pop
sbb
enter
adc
fadds
adc
daa
or
mov
push
loope
adc
mov
pusha
pop
rcrb
lret
shl
xor
adc
loopne
sbbb
in
shlb
outsb
outsb
jp
in
loop
xor
push
js
fstps
imul
cmp
xor
pusha
pop
ja
les
sbb
cmp
push
mov
fildll
inc
imul
nop
mov
add
push
dec
shlb
pop
cli
inc
outsl
aam
push
popa
je
or
fisttpl
roll
jg
mov
cmp
out
data16
pop
push
ficoml
mov
mov
stos
fmull
mov
es
push
xchg
adc
cmp
fisubrs
rorl
pop
sub
or
mov
lahf
pop
sub
pusha
pop
mov
pop
addr16
xchg
push
hlt
jg
push
testb
or
outsb
loopne
add
outsl
daa
std
adc
xlat
xchg
mov
pop
pop
push
jo
inc
mov
sbb
pop
dec
dec
jno,pt
push
aas
inc
jecxz
push
mov
mov
xchg
sub
in
iret
dec
lods
frstor
push
xchg
push
sbb
inc
fs
arpl
sub
jb
mov
dec
xor
jmp
movntps
xor
push
add
pop
cmp
xor
les
fisttpl
out
push
bound
lahf
cmp
add
jbe
jo
xor
outsb
or
mov
movsl
xchg
mov
outsl
imul
jnp
ret
hlt
fwait
add
movsl
pop
shlb
mov
scas
jl
adc
inc
das
jb
js
sub
test
aaa
imul
stos
add
xor
cmp
lods
scas
pop
xlat
inc
ljmp
xorl
iret
inc
xchg
add
add
dec
inc
or
jmp
dec
push
sbb
incl
inc
push
xor
mov
xchg
hlt
es
xchg
inc
cltd
or
add
and
addr16
ja
aam
mov
mov
push
jae
fs
mov
pop
mov
xor
push
es
mov
pop
les
push
lods
sti
emms
pshufw
xlat
das
aas
dec
pusha
mov
aad
jmp
xlat
sub
cmp
flds
cmp
push
jbe
xchg
adc
mov
outsl
aaa
imul
pop
ja
add
xchg
jbe
mov
xchg
das
testl
iret
xchg
shlb
xchg
das
sub
insl
or
mov
add
fildl
mov
xchg
bound
add
jp
dec
push
incl
push
pop
push
aad
jecxz
sbb
add
pop
jp
add
jmp
xor
lock
mov
jbe
inc
mov
adc
push
push
mull
fildl
imul
inc
sub
sub
aas
jo
xor
cmpsl
adcl
add
push
and
test
lds
add
test
aas
lods
add
inc
adc
sbb
outsl
xlat
mov
pop
jno
dec
sbb
xor
jmp
ja
add
ficoml
pop
cs
cmpsb
inc
inc
push
inc
xchg
mov
pop
cli
cmp
dec
push
dec
pop
mov
pop
or
add
sub
pop
pop
imul
inc
cmpl
into
psrld
sbb
data16
mov
lea
push
pop
addr16
sub
xchg
inc
pop
ja
cs
inc
dec
inc
xor
mov
dec
add
lods
ljmp
add
lods
and
mov
xor
fldl
testl
dec
sbb
lret
push
add
jns
je
ret
dec
es
and
jno
xchg
adc
xor
in
and
mov
or
movsb
fucomi
jle
popa
insl
jo
je
add
addr16
out
outsl
ds
jo
jae
daa
pop
jno
outsl
xor
jo
dec
ret
stos
pusha
or
bound
pop
decl
cmpsb
jns
je
jne
cmp
dec
pushl
adc
je
test
dec
out
ud2
pop
insb
mov
jae
push
bound
adc
mov
dec
pop
inc
rolb
je
ja
popf
mov
imul
push
adc
iret
pop
ja
add
inc
sti
inc
movsb
or
jo
data16
imul
imull
inc
or
xchg
and
pop
mov
rorb
bound
dec
or
dec
rclb
and
push
push
and
or
dec
mov
adc
push
mov
js
jmp
dec
push
nop
and
push
das
cmpsl
or
hlt
mov
add
mov
ficoml
addr16
or
add
or
out
adc
fidivrl
jb
loopne
add
iret
mov
arpl
dec
adc
xchg
mov
inc
add
out
inc
outsl
outsb
or
aaa
stos
daa
pop
je
insb
fmuls
pop
ss
lret
ret
xor
cmpsb
jb
ret
or
ds
mov
push
pop
add
push
sahf
std
cmp
pop
outsl
inc
push
dec
inc
dec
push
xchg
add
mov
cmp
pop
in
loopne
fiadds
jg
ret
mov
add
pop
inc
leave
mov
xchg
xor
add
and
and
jnp
and
adc
fidivl
pusha
inc
pop
mov
das
sbb
xor
jne
and
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
inc
adc
fsubs
outsb
inc
les
or
inc
pop
xchg
ss
mov
insb
pop
gs
subb
xlat
ds
push
push
mov
inc
popw
push
sbb
aaa
push
addr16
pop
icebp
jbe
es
insb
push
adc
adc
sbb
adc
push
pushl
sbb
mov
xchg
sub
sbb
out
mov
int3
lahf
outsb
ja
mov
mov
cmp
push
je
mov
lcall
xor
ret
mov
mov
imull
bound
push
sbb
xor
cmp
cmpsb
sub
sbb
pop
and
scas
pop
aaa
add
push
sti
popa
mov
cmp
icebp
mov
or
cmpsl
push
or
lds
daa
incl
repnz
aaa
push
sub
adc
es
pop
fdivl
or
out
or
insl
add
ljmp
mov
adc
outsl
arpl
popa
jg
and
pushl
and
bound
fldenv
add
push
xchg
outsb
xorl
sbb
imul
jo
stos
movsb
cmp
cs
out
scas
inc
call
and
iret
lea
loop
dec
inc
negb
adc
jo
movsb
mov
js
outsl
fs
mov
fisttpll
gs
jo
jns
iret
inc
mov
adc
rcr
outsl
insl
jne
pop
sbbl
les
addr16
cmp
and
push
inc
je
bound
icebp
or
test
jbe
push
adc
insb
mov
inc
inc
into
aaa
lds
outsl
jo
mov
or
xor
test
movsb
mov
iret
mov
icebp
orb
inc
or
inc
push
stc
std
fisttpll
shrl
cmc
inc
cmovo
out
imul
cmpb
aas
adc
in
nop
jo
maxps
loopne
cs
add
mov
adc
inc
inc
cvtps2pi
fisttps
shrl
mov
push
addb
mov
pop
push
sbbb
sbb
scas
push
mov
sahf
faddp
cmovne
popl
hlt
in
jns
inc
add
add
adc
cmpl
and
xchg
dec
aaa
sahf
pop
subl
lcall
xchg
out
and
mov
cwtl
xchg
daa
outsl
pop
push
pop
cmp
push
xchg
xchg
call
jmp
push
outsl
clc
push
xchg
xor
xor
mov
jns
in
fsubrl
notl
test
pop
enter
xchg
and
add
jbe
ficompl
push
add
rcrb
mov
sbb
nop
add
jg
xchg
mov
nop
fcoms
outsl
add
jnp
in
add
xlat
or
add
mov
lahf
pusha
push
pop
push
pop
xchg
and
cwtl
ret
ss
inc
lahf
xchg
test
mov
loopne
add
cwtl
dec
in
imul
hlt
mov
xchg
dec
out
inc
cs
data16
cwtl
inc
dec
js
cmp
mov
xchg
movsb
jl
enter
cwtl
movsb
jl
ret
jae
ror
out
or
pop
rorb
fstps
adc
or
cltd
and
sub
inc
daa
andb
outsl
xchg
xor
mov
or
nop
out
cwtl
pop
daa
push
movsb
add
mov
add
cs
mov
or
pop
adc
dec
add
cs
orb
cs
int3
mov
or
stos
sbb
scas
and
aam
outsb
sub
dec
lock
orb
adc
and
fs
cwtl
inc
inc
jo
sahf
ja
push
push
mov
inc
sbb
inc
faddp
dec
fwait
jl
mov
add
fs
lahf
nop
ja
inc
ja
insb
in
mov
loopne
fs
mov
sbb
inc
aas
addr16
ja
js
mov
push
pushf
adcb
mov
outsl
pop
enter
aam
int3
orb
not
aas
mov
xlat
cltd
popf
add
adc
and
xchg
cld
popf
cmp
fwait
mov
jmp
scas
jns
mov
xlat
dec
jo
test
sahf
or
pop
xor
int
popf
faddl
in
mov
push
dec
add
int3
rcrb
and
rcrb
lahf
lcall
jl
dec
cmp
jb
lahf
insb
xor
jb
iret
test
fdivl
pop
enter
lahf
or
lds
sub
pusha
repnz
adc
mov
cmp
insb
jl
enter
pop
mov
pop
mov
test
cld
dec
or
sbbl
push
and
test
loopne
pop
sahf
out
fstpl
je
mov
jnp
push
cmpsl
jg
test
cmpsl
cmp
ss
je
daa
in
nop
movsb
pusha
clc
mov
ja
xchg
stos
sbb
in
mov
cmpsl
pop
inc
cs
jo
mov
cmpsl
mov
pop
enter
les
andl
push
sbb
pop
enter
and
out
fmuls
pop
insb
test
sub
jg
int
and
dec
pushf
lods
shrb
dec
pushf
mov
lock
pop
repnz
lock
pop
stos
fiadds
cmpsl
push
or
mov
imul
inc
sahf
movsb
mov
cs
nop
xchg
clc
in
push
enter
add
mov
and
xor
cmpb
dec
lahf
inc
sahf
pop
pop
ja
push
test
mov
push
inc
pop
sub
test
movsb
aam
movsl
stos
ja
in
clc
orps
cmpsl
fs
adc
test
sub
jp
movsl
cmp
dec
addr16
sahf
pop
pop
andb
cmpsb
out
mov
cwtl
push
cmpsl
jl
adc
iret
hlt
addr16
cmpsl
rolb
mov
cmpsb
xor
dec
addr16
shrl
jg
testb
insb
js
cmpsb
mov
cwtl
lahf
movsb
and
ja
test
inc
movsb
enter
pop
dec
adc
enter
inc
loopne
sbb
sub
mov
icebp
push
inc
aas
push
cmpsl
imul
sahf
cmpsb
jo
sub
push
sahf
or
les
call
cwtl
push
cmpsl
les
ds
test
push
cmp
nop
aas
ja
rolb
jns
js
mov
push
loopne
out
enter
nop
or
inc
push
add
xchg
out
ljmp
sbb
dec
inc
mov
cltd
mov
lahf
dec
pop
inc
rolb
test
push
jae
pop
addb
js
stos
pop
enter
js
mov
nop
or
inc
mov
and
shll
jg
int3
and
inc
sahf
and
ja
cs
inc
lock
mov
or
sbb
adc
mov
dec
dec
clc
stos
or
sbbb
mov
insb
decl
adc
inc
jg
jbe
jl
outsb
pushf
inc
lods
lahf
movsb
and
ja
test
inc
cwtl
in
cld
add
popf
call
inc
test
int3
jbe
xchg
mov
lcall
jnp
ja
mov
out
inc
lods
mov
aad
mov
and
sahf
hlt
pop
jb
jo
inc
in
mov
xor
lods
inc
push
pop
cmpsb
test
rorl
subb
add
imul
mov
pop
call
and
add
fsubr
jbe
push
subb
cmp
in
xor
pop
addb
out
ja
test
scas
mov
mov
outsl
push
add
cs
inc
shl
lahf
or
rcr
cmp
fwait
fs
and
pop
pop
add
out
sahf
mov
nop
cs
mov
sahf
or
shl
mov
shl
mov
mov
push
xor
in
lahf
movsb
adc
jo
jae
pop
in
dec
lahf
pusha
inc
pop
repnz
enter
inc
test
imul
sbb
je
fiaddl
or
jbe
mov
ja
cmp
mov
sbb
pop
cwtl
aas
popl
pop
fmul
daa
cltd
pusha
ret
pop
sahf
mov
inc
add
or
data16
mov
push
xor
xchg
outsl
add
fcmove
add
sbb
addr16
cmpsl
pop
enter
xchg
add
inc
mov
incb
js
movsb
enterw
es
mov
inc
add
loopne
mov
aas
push
sbb
sahf
ja
js
daa
mov
push
lods
js
in
sbb
adc
xchg
jmp
cmp
xlat
gs
lea
cmpsl
fwait
or
mov
fcoms
dec
jo
jnp
push
mov
fstpl
add
popa
add
jl
sbb
dec
repnz
xor
add
movsb
ss
in
sub
or
xchg
in
popf
nop
or
popl
rolb
addr16
add
add
out
fldl
dec
xchg
push
ss
daa
scas
clc
mov
dec
leave
xchg
pop
leave
inc
inc
cmp
pop
xor
sub
pop
leave
xchg
sub
jo
leave
add
mov
fidivs
ja
cmp
sbb
mov
cwtl
repz
aam
sub
adc
sahf
mov
jo
sahf
cmp
cmp
pop
sahf
mov
mov
in
enter
iret
je
cmp
mov
sahf
sub
lock
fsubs
mov
xchg
das
push
lock
jl
xchg
inc
leave
or
test
add
stos
and
mov
add
dec
movsb
cwtl
add
pop
mov
xchg
mov
mov
push
fistpll
dec
addr16
pop
or
rorl
pushl
jg
jb
fidivl
xchg
dec
in
fimuls
and
aaa
outsl
enter
add
inc
lods
pusha
inc
inc
mov
nop
mov
and
fbld
outsl
inc
in
popf
or
mov
mov
add
cmp
outsl
cmp
ss
or
in
add
into
cmp
scas
fadds
xchg
add
xorb
es
xor
fbstp
repz
lods
aas
aaa
lock
fs
lods
je
add
push
pop
scas
add
outsb
mov
push
pop
push
pushl
lods
pop
jb
xchg
cmp
mov
cmp
outsl
add
sub
sub
sub
fdiv
dec
ret
fsubl
dec
aad
inc
js,pt
or
jno
fidivl
mov
pop
pop
sarl
push
in
sub
rcrb
add
jle
push
cmp
ja
dec
scas
aad
adc
mov
sub
or
sub
jnp
rolb
out
ja
mov
dec
mov
outsl
add
sbb
outsl
cmp
mov
pop
add
aaa
mov
pop
bnd
push
outsl
add
adc
ja
outsl
dec
sub
mov
add
sbb
mov
mulb
nop
out
mov
mov
push
testb
mov
push
pop
leave
in
adc
add
lods
in
es
nop
or
mov
out
jns
sahf
rcr
call
or
stos
imul
push
in
scas
clc
jmp
push
and
add
xor
jns
adc
sbb
out
lds
ja
dec
cmp
dec
rclb
nop
adc
shrb
and
push
push
fistpll
xchg
mov
pop
daa
xchg
cs
push
aaa
or
push
mov
insb
outsl
ret
fs
lds
sarb
push
xchg
sub
or
lock
fmuls
xchg
inc
fisubrs
movsbl
mov
mov
pop
rcrl
pushf
nop
fadd
in
push
xchg
or
dec
cs
aad
sub
ret
ret
sti
mov
push
nop
dec
test
adc
push
mov
add
mov
pop
ret
test
mov
inc
test
and
and
mov
push
dec
pusha
scas
ret
jo
clc
enter
test
mov
dec
ficomps
pusha
mov
fdivl
fcmovb
inc
fisubrl
outsl
cmp
mov
les
mov
inc
scas
add
add
je
sub
add
jle
mov
xchg
mull
fnstsw
mov
and
xchg
mov
lods
add
pop
repnz
lds
push
cmp
aaa
pusha
and
adc
and
lds
loopne
mov
lds
lods
aad
mov
fists
out
stos
pop
pop
int3
pop
clc
pop
js
jecxz
or
aaa
push
cmp
sbb
adc
dec
aaa
add
pop
out
inc
jo
xchg
fs
movsb
xchg
add
scas
notb
addr16
adc
or
iret
xchg
in
sbb
daa
pop
shlb
sub
and
add
das
and
push
cmp
mov
jno
push
fs
enter
fnstsw
pushf
dec
sub
fadds
push
mov
xchg
or
test
orb
pop
sbb
add
fbstp
arpl
enter
xchg
pop
lcall
fwait
pop
or
mov
cltd
fcomp
je
inc
dec
and
pop
push
nop
sub
mov
enter
or
pop
scas
add
outsl
cmp
push
inc
xchg
out
lock
sahf
nop
sub
push
lcall
out
aad
jecxz
mov
js
pop
add
add
out
test
inc
push
dec
aas
das
in
xor
push
addr16
lods
xor
fbld
lahf
mov
jmp
fimuls
les
xchg
pusha
jo
divl
negb
addr16
add
adc
fs
test
call
andb
ja
nop
out
lahf
mov
mov
nop
fwait
or
mov
enter
mov
pop
fdivs
int3
inc
add
fdiv
push
dec
xchg
inc
ja
cmp
mov
xchg
hlt
cwtl
sub
mov
sub
andb
mov
xchg
sub
xor
sahf
cmpsl
fldcw
pop
jo
mov
jl
insl
xor
mov
clc
sbb
popa
mov
jl
out
stc
sub
cmpsl
stc
cmp
mov
int
jns
dec
jne
notl
jno
ds
repz
mov
xor
out
cmp
jae
jns
cmpsl
stc
sbb
in
ds
repz
int
push
jbe
push
dec
sahf
out
cmp
in
adc
push
mov
sti
cmp
roll
ficompl
jns
ds
repz
stc
es
sahf
out
outsb
xchg
ret
jnp
lcall
and
repz
out
stc
xor
stc
cmp
mov
jmp
jle
dec
repz
mov
lea
pop
sbbb
iret
sarl
mov
cmpsl
stc
imul
repz
sub
jb
cmp
repz
test
fiadds
xchg
jns
cmpsl
xor
xchg
mov
adc
lahf
iret
mov
sbb
sahf
leave
in
sub
mov
mov
jns
iret
repnz
lea
cmp
jbe
stos
in
mov
repz
sub
xchg
dec
repz
cmp
ljmp
aad
xchg
aas
jb
cmpsl
stc
cmp
adc
dec
mov
xor
ret
cwtl
cmp
cmpsl
stc
cmp
add
cmp
repz
imul
fwait
jge
lock
mov
sbb
out
sbb
jns
out
lahf
pop
mov
mov
inc
mov
lods
sarl
filds
out
ds
fcoms
movsl
ss
iret
sarl
pushl
cmpsb
insl
mov
lahf
out
ds
cmpsl
jns
out
and
dec
adc
test
jns
sbb
stos
iret
xor
imul
ds
imul
scas
xor
out
popa
popf
clc
xor
xchg
iret
repz
inc
mov
scas
jl
int
aam
mov
mov
or
jle
adc
sahf
out
cmp
hlt
daa
mov
movsl
lcall
cmpsb
add
jns
stc
xor
repz
repz
dec
mov
mov
fwait
icebp
push
mov
jns
mov
push
mov
push
mov
iret
sarl
pop
xchg
sbb
dec
cmp
repz
inc
ret
addr16
call
lret
imulb
add
enter
aaa
shlb
inc
aam
arpl
add
imul
sbb
fstp
push
mov
inc
loopne
jecxz
out
add
cmpsb
rolb
outsl
int3
nopl
sub
outsb
aas
aam
dec
and
jno
lret
sub
getsec
mov
add
push
in
insl
jbe
pop
xchg
pop
aam
or
pop
mov
and
inc
fwait
push
scas
pop
rcl
dec
and
push
push
push
add
imul
pop
roll
fimuls
ja
aas
subb
jmp
aas
xchg
push
lahf
rorl
lcall
aas
fwait
aam
jecxz
xchg
popa
xlat
dec
popf
xchg
pop
mov
xchg
cmp
and
lcall
fistl
mov
in
outsl
mov
inc
in
dec
das
repnz
loop
push
enter
lret
push
das
jl
lock
add
stos
push
aas
add
push
daa
xchg
sub
and
out
sbbl
ljmp
daa
aas
mov
test
aas
inc
ss
add
mov
cltd
cmp
adc
add
insb
inc
fidivs
neg
in
adc
loopne
dec
mov
and
sbb
lahf
pushf
in
jb
das
xlat
dec
xlat
pop
inc
adc
mov
insb
filds
lds
push
loopne
je
mov
add
dec
push
push
pop
aas
out
pop
jo
jmp
dec
add
fcomps
fildl
nop
sub
je
sbb
in
pop
add
pop
pusha
addr16
inc
cmp
or
addr16
or
jo
lahf
add
out
cmp
test
lods
daa
int3
jae
cmp
push
leave
ret
xchg
add
ja
dec
sbb
leave
add
push
add
in
inc
xor
sbb
dec
cs
xchg
add
mov
or
pop
pop
mov
xchg
test
mov
ficoml
aaa
fsubrs
in
popf
pushf
loopne
movl
pop
adc
push
lods
and
notl
mov
push
sbb
xchg
and
and
and
cs
dec
outsb
push
test
xchg
dec
jl
in
mov
pop
sbb
imul
inc
add
fcompl
dec
jo
dec
fmull
daa
sub
pop
leave
xchg
and
addr16
jb
jge
xor
cmp
pusha
imull
pop
movsl
mov
push
xlat
cmpsb
pusha
fcomps
cltd
testl
mov
aam
mov
bound
adc
mov
or
xor
cmc
mov
leave
test
sub
adcb
aas
das
daa
cmp
add
xorl
or
in
push
in
inc
jb
sbb
push
dec
cmp
push
mov
pop
mov
add
pop
cmpsb
in
and
dec
push
je
jb
js
or
dec
push
fmull
enter
popa
loopne
addr16
cmp
and
fisubl
cmp
cmpsb
push
jmp
xchg
imul
aad
mov
inc
cmpsl
cmpsb
adc
mov
je
cmp
call
mov
loopne
dec
dec
rorl
inc
fsts
add
leave
dec
movsl
jge
xchg
daa
daa
daa
pop
xchg
lahf
cmpsl
scas
lret
mov
setb
xchg
push
in
loop
ljmp
arpl
arpl
fisttpl
arpl
mov
inc
cmovge
push
pop
pop
mov
xchg
pop
pushf
mov
dec
arpl
mov
xchg
fsts
sahf
test
jb
enter
pop
aad
loopne
and
sbb
or
or
adc
xchg
xchg
push
daa
push
lock
jnp
scas
push
inc
dec
add
xor
add
loop
adc
and
shl
jb
jp
adc
fmull
cld
daa
sbb
xchg
or
testb
scas
fs
adc
cmp
jnp
push
or
sbb
and
and
sbb
add
add
xchg
pop
pop
or
or
dec
out
lcall
pop
lds
in
push
repnz
in
dec
or
in
addl
dec
in
daa
daa
push
sti
mov
dec
scas
in
ret
in
xchg
add
daa
adc
sbb
inc
push
inc
dec
cmpsl
xchg
and
test
je
jg
and
enter
add
add
pop
jg
aas
mov
adc
filds
pop
xchg
cmpsl
enter
daa
daa
loop
pop
test
mov
or
xchg
xchg
lret
addr16
push
push
pop
pushf
daa
pop
in
xchg
mov
ret
mov
packuswb
mov
repnz
out
daa
pop
aaa
dec
dec
leave
pop
add
out
jb
mov
mov
push
out
push
lea
xchg
cmp
adc
jno
dec
mov
inc
lahf
in
ret
add
xchg
shr
cmpsl
call
pushf
daa
in
leave
add
ret
or
jb
add
pop
call
inc
xchg
ljmp
imul
imul
repnz
cmp
inc
cmpsl
jmp
dec
jmp
imul
push
pop
jge
test
jmp
mov
mov
inc
imul
ljmp
mov
ja
xchg
dec
sbb
leave
mov
cmp
xchg
pop
loopne
lock
adc
nopl
sub
mov
inc
push
push
dec
mov
pop
dec
inc
sub
data16
xchg
pop
jb
mov
mov
pop
jb
push
data16
mov
xchg
fsts
push
fildll
add
loop
ret
in
call
mov
lcall
scas
in
or
sub
vmovsd
in
in
js
cwtl
incl
sub
gs
lods
pop
aas
imul
inc
mov
jge
mov
add
sahf
push
test
xchg
xor
in
out
call
scas
in
mov
and
mov
shll
push
insb
aas
pop
out
outsl
in
rolb
push
addb
inc
cmpsl
push
fucomip
sub
in
mov
shlb
mov
das
pop
and
leave
cmpsl
push
aas
pop
jnp
inc
insl
decl
adc
add
push
ffreep
dec
cs
push
test
sbb
and
mov
push
cmpsl
dec
pop
and
pop
int3
je
inc
xor
mov
inc
mov
push
cmp
cmp
sub
mov
push
xor
cs
mov
outsl
or
or
xchg
pushf
loope
pop
outsl
pusha
icebp
leave
dec
fisubl
inc
ficoml
popw
decl
jo
push
mov
cs
lahf
fbstp
mov
dec
jo
mov
mov
leave
sub
aaa
nop
jl
and
lcall
repnz
repnz
push
rolb
inc
dec
cmp
out
jno
push
bound
xorb
in
add
push
add
shr
and
daa
hlt
jb
cpuid
scas
jnp
scas
repz
adc
dec
repz
dec
xlat
fsubl
sbb
aas
jb
jge
pop
in
push
jg
pop
add
add
xor
and
inc
push
or
push
and
outsl
repz
pop
push
lds
add
mul
sub
and
sub
push
add
xor
hlt
sub
push
xor
mov
mov
ret
add
add
add
xchg
and
add
pop
and
cmp
adc
rclb
push
sbb
xchg
sub
add
in
addr16
in
pop
cmc
mov
pusha
daa
in
dec
mov
ffreep
int
cmovge
ljmp
adc
adc
dec
sahf
mov
pop
push
inc
push
mov
stos
dec
cld
iret
lea
mov
shrl
je
outsl
decb
jnp
cltd
cmp
adc
das
and
nopl
xor
ss
or
dec
dec
jne
jne
outsl
jne
movsb
or
cwtd
in
and
pmaxsw
movsb
aaa
stc
push
and
xchg
xchg
add
jbe
sbb
add
push
pop
xor
orl
mov
and
in
in
xchg
daa
clc
add
les
xchg
push
dec
xchg
mov
mov
ja
add
out
xorb
mov
outsl
stc
das
push
rcr
inc
xor
mov
pminub
or
ja
pop
jnp
js
and
cmp
inc
add
leave
dec
push
add
int
dec
cmpsb
xchg
push
cmpsl
scas
add
push
dec
inc
mov
pop
pop
jb
mov
ljmp
jg
or
xor
fs
add
sub
aaa
out
loopne
inc
cmovge
pop
cmp
cmp
or
jns
push
dec
inc
sahf
mov
adc
aas
adc
mov
jns
mov
fs
sbb
in
jp
movhlps
sti
nop
inc
in
sub
cmp
out
dec
xchg
inc
ja,pt
data16
scas
push
xchg
add
mov
mov
pop
sub
or
or
imul
sub
jnp
adc
in
inc
ret
adc
cld
out
jnp
iret
dec
roll
jae
std
or
add
cmpsb
add
ljmp
fbld
rcll
and
and
jno
enter
js
mov
and
dec
std
clc
mov
in
std
call
cmp
sub
inc
push
incb
popf
mov
push
addps
and
jl
jl
cwtl
dec
jnp
mov
mov
fwait
mov
fbstp
mov
cmpxchg8b
iret
or
iret
daa
fimull
jl
incl
or
jo
jge
daa
and
jb
push
push
pop
add
stos
xchg
xchg
mov
das
jne
jge
das
jb
dec
jb
jmp
jno
jg
add
stos
loopne
xchg
fcomi
inc
scas
inc
ds
bound
push
and
das
add
enter
add
push
add
pusha
push
outsb
iret
or
adc
xchg
add
movsb
and
push
vpmulhuw
pushf
fistpll
jle
push
add
inc
pop
adc
jb
and
scas
jg
jg
and
mov
cmp
jg
cmp
in
add
jle
addr16
mov
mov
xchg
subb
daa
cs
enter
decl
jecxz
icebp
add
incl
orb
sbb
or
addb
dec
jo
pop
out
subb
jae
xchg
dec
pop
jbe
add
pop
mov
mov
leave
mov
movsb
add
in
push
sub
ja
mov
sub
xor
pop
sbbl
sbb
jae
mov
fists
cs
pop
into
add
xchg
and
add
add
in
out
testb
addb
nopl
repnz
pop
push
or
or
sahf
mov
adc
inc
adc
xchg
xchg
and
push
push
adc
pop
push
data16
lcall
xlat
les
lahf
fisubl
adcl
dec
mov
cmpsl
mov
mov
push
xor
mov
pop
add
mov
add
cs
insb
mov
dec
into
cs
mov
or
das
add
lods
test
xor
mov
cmova
ja
daa
pop
or
mov
xchg
popf
pop
add
jb
pop
movsl
shrd
xor
or
lds
int
outsl
and
add
add
and
xlat
sbb
dec
and
cmp
push
mull
push
and
xchg
pop
outsl
repnz
into
push
and
popf
adc
adc
outsl
adc
and
daa
push
aas
push
pop
dec
push
or
scas
shr
push
loop
mov
rorb
pop
test
add
add
mov
push
or
in
add
or
cs
sbb
fisttpll
test
jne
pop
int3
das
clc
das
testl
mov
fisttpll
push
test
jmp
iret
out
pusha
addr16
add
stc
jbe
dec
sahf
call
or
roll
push
inc
enter
add
jno
jb
enter
push
popf
pop
lods
or
or
or
pop
or
test
and
repnz
xchg
xchg
xchg
gs
xchg
jo
orb
enter
or
lahf
or
fimuls
pop
mov
hlt
daa
iret
addl
mov
mov
mov
in
jbe
call
movaps
push
jb
dec
mov
lahf
mov
xchg
sub
add
cmp
push
nop
xchg
fsts
data16
js
fs
fmuls
loopne
or
orb
popf
pushf
pushf
pushf
mov
mov
push
or
out
in
leave
inc
mov
push
or
cmp
push
sub
xor
in
cmp
inc
cmpsl
or
sbb
jbe
es
in
fisubrl
enter
and
mov
lods
mov
dec
addb
push
cld
jmp
ljmp
decl
insl
daa
and
add
out
jb
push
fisttps
out
xchg
outsb
in
dec
or
pop
decl
fildl
mov
adc
orb
jnp
js
add
and
push
add
cmp
xor
jg
xchg
shrd
fbstp
loope
pop
insb
daa
mov
mov
cmovle
in
iret
fisttps
fstl
or
clc
sarb
cmovne
mov
dec
out
push
push
pop
add
pop
pop
fmull
pcmpeqw
or
cmp
xchg
ss
push
cwtl
add
mov
in
mov
mov
fucomp
jb
loope
xchg
bswap
inc
mov
mov
sbb
mov
mov
adc
xchg
pushf
pushf
pop
push
pop
pop
popf
pushf
pop
and
xchg
cltd
and
mov
test
inc
fists
push
shll
adc
dec
dec
jb
adc
adc
xor
cmp
add
and
inc
jnp
add
cmpsb
scas
aas
pop
dec
lock
cs
loopne
psubsb
mov
mov
adc
pop
cmp
mov
jnp
add
and
jb
xchg
mov
test
jbe
xchg
add
xor
mov
in
fs
sub
das
xor
shrl
cmpsl
ja
jb
jb
cwtl
add
add
test
adc
sqrtps
in
rcr
jmp
leave
adc
cltd
xor
mov
pusha
rcrb
push
daa
push
pop
das
pop
in
leave
enter
or
or
jb
in
xchg
push
push
jo
test
into
adc
call
xchg
cs
add
out
xchg
xchg
xchg
daa
testb
xchg
jbe
leave
xchg
push
outsl
push
push
pop
cmp
add
ja
adc
xchg
mov
dec
xchg
jp
bound
enter
xchg
xchg
add
pop
and
xchg
add
and
sahf
jecxz
paddsw
enter
pop
invd
cmpsl
xor
and
mov
xchg
pop
push
xchg
je
sbbb
hlt
mov
push
xor
xchg
add
push
xor
pop
push
sub
je
push
out
xchg
jb
leave
cmp
sub
cmp
ds
ja
cltd
pop
arpl
jns
or
add
dec
pop
adc
fsubrp
and
movntq
out
ss
jbe
out
decl
xchg
pop
add
aaa
repnz
pop
xlat
or
sbb
aaa
push
enter
lods
insl
sbb
jne
outsb
imull
mov
shlb
mov
xchg
test
add
ror
mov
cmpsl
rcrb
das
jecxz
movsb
or
xchg
add
pushf
scas
xchg
or
das
xchg
xchg
dec
sbb
add
daa
in
push
iret
pop
pop
push
popa
imul
jno
add
sbb
pop
xchg
or
and
leave
inc
mov
pop
cwtl
int3
lock
filds
movntq
xchg
testl
and
sub
pushf
pop
and
aam
push
fisubrl
gs
sbb
xchg
in
sub
push
nop
cwtl
xchg
dec
cmp
notl
cs
push
lret
rorl
fisttpl
pushf
jecxz
xchg
adc
xchg
sub
push
push
push
add
es
ss
inc
iret
or
sub
imul
add
push
xchg
dec
cmp
jbe
movhps
xchg
add
iret
xlat
dec
scas
popf
fmull
xchg
cmp
lcall
sub
jmp
mov
dec
lods
and
jo
fistpll
jbe
push
outsl
cwtl
fwait
out
pop
mov
and
in
and
push
ret
lahf
cwtl
lret
pusha
jb
popf
sbb
xlat
cltd
or
push
cltd
add
leave
in
inc
cmovnp
xchg
pop
and
push
leave
leave
mov
and
lods
cmpsl
push
lods
jnp
in
addr16
xlat
add
or
mov
aas
clc
pop
add
div
sub
add
jle
add
insl
add
add
cmpl
mov
lcall
mov
lcall
add
ud2
adc
sub
sbb
sbb
sub
xchg
fisttpl
dec
mov
mov
dec
pop
setnp
setno
xstore-rng
cmpsl
add
sbb
inc
sahf
int3
sahf
fimuls
pop
jmp
xchg
mov
pushf
or
in
leave
enter
adc
adc
insl
in
popa
insb
adc
nop
cmp
pusha
lea
nop
mov
jne
pushf
rorb
pop
and
rclb
and
jnp
adc
ucomiss
add
inc
jne
adc
cmovns
and
adc
divl
popf
cmp
fsts
mov
xchg
pop
pushf
or
lods
mov
mov
leave
dec
stos
xchg
push
idivb
adc
pop
nop
jl
sahf
cmp
add
push
pop
xchg
outsl
add
cmc
add
clc
loop
push
and
and
dec
xor
sbb
stos
enter
lcall
mov
lret
push
fisttps
fisttpl
call
out
mov
lahf
push
and
lahf
push
push
xor
sbb
mov
cmp
inc
add
add
pop
pop
and
push
add
mov
test
cmp
psubusb
add
call
sbb
mov
dec
mov
jae
insl
dec
push
daa
push
pop
xchg
outsl
ja
outsl
pushf
pop
adc
and
pop
mov
xchg
mov
popa
mov
and
add
jbe
mov
mov
sbb
and
in
and
cmp
or
out
enter
xlat
push
add
and
dec
lahf
add
sub
int3
ffreep
shrb
movsb
daa
fdivrl
invd
test
mov
std
cmp
push
es
add
bound
pop
adc
decl
aas
inc
je
pushf
in
mov
mov
aas
mov
rsqrtps
mov
add
add
daa
and
or
fs
stos
or
inc
mov
push
loope
in
adc
adc
enter
add
or
sbb
jb
adc
inc
sbb
xchg
and
sbb
gs
leave
leave
leave
sbb
push
adc
adc
adc
leave
leave
leave
leave
adc
push
or
pop
sub
fdivs
or
ja
jg
dec
cwtl
jge
test
cmpxchg
sbb
out
jge
add
je
cwtl
pushf
push
inc
daa
test
mov
fcomp
mov
add
psubq
jl
popl
jnp
add
or
mov
push
sub
daa
sbb
xchg
and
xchg
add
mov
dec
fiaddl
cmp
inc
iret
cwtd
mov
enter
outsl
cmp
in
fldl
pmulhw
in
add
add
cmp
add
dec
in
dec
or
movsl
mov
push
or
daa
pop
dec
fs
je
daa
pop
leave
cwtl
mov
pushf
mov
ret
int3
xlat
data16
dec
pop
add
gs
lea
add
ja
xor
leave
leave
inc
inc
dec
push
pop
mov
xchg
jge
cltd
cmp
pop
xchg
popf
xchg
xchg
mov
mov
ljmp
xchg
sub
jg
xor
jg
mull
or
adc
add
mov
pop
xor
or
sahf
mov
or
push
or
daa
and
aas
arpl
and
xchg
adc
cmpsl
xchg
jb
repnz
mov
jb
add
out
roll
xlat
add
loop
in
clc
aam
orb
lock
js
sub
repnz
test
cmp
mov
cmp
dec
push
add
inc
dec
pop
arpl
jae
inc
mov
shrb
mov
pop
mov
dec
cs
cs
and
fisubl
pop
mov
iretw
test
leave
add
jo
repnz
loope
jmp
roll
xchg
pop
jle
pop
test
pushf
pop
mov
ja
gs
xor
mov
jge
inc
sub
leave
inc
test
pop
jb
push
leave
das
mov
fmull
lds
stos
dec
fidivl
in
jg
push
push
cmp
and
jmp
mov
das
xor
insl
shl
inc
out
out
add
adc
mov
stos
mov
idiv
mov
inc
repnz
aaa
add
xor
cwtl
jbe
daa
enter
dec
or
jg
xlat
jecxz
push
dec
mov
paddb
xchg
mov
in
in
in
cmp
inc
add
dec
push
add
sbb
jb
add
add
mov
or
jo
into
jae
xchg
in
sbb
push
xor
loope
and
cmp
push
not
sbb
lods
lods
ja,pt
fcmovne
inc
xor
jae
jg
scas
push
xchg
leave
enter
pushf
add
movsb
leave
leave
leave
leave
lods
mov
enter
in
or
loop
adc
loope
lahf
xor
iret
lods
xor
xchg
xchg
pop
lods
lods
daa
xor
push
dec
add
in
and
test
iret
jne
pushf
stos
fstpt
xchg
mov
pop
mov
push
enter
rolb
push
add
push
femms
or
in
in
testl
jns
jo
or
sbb
shll
scas
dec
pop
xor
xor
mov
pop
jle
pushf
xchg
loopne
int3
or
decl
test
scas
test
cltd
popf
das
mov
bsf
es
rcrb
pop
and
xchg
mov
je
fcom
imul
aam
scas
or
or
in
xor
aaa
scas
in
es
imulb
or
sub
movsb
cmp
imul
push
adc
dec
push
dec
scas
jbe
mov
pop
scas
jg
cwtl
pop
cwtl
ja
mov
mov
sub
pop
incl
sbb
dec
pop
aaa
adc
cmp
ja
add
adc
ja
js
outsb
lcall
ret
into
sahf
lret
rolb
add
xchg
push
ljmp
leave
add
or
or
cli
push
mov
or
mov
adc
pop
adc
inc
mov
mov
inc
add
fcompl
orl
add
add
mov
test
sub
aam
fimuls
shrb
lock
pop
in
pmuludq
cld
xchg
mov
xor
push
dec
popf
mov
mov
pushl
insb
in
in
in
jg
je
unpcklps
dec
fcmovb
leave
sbb
femms
and
adc
enter
adc
inc
adc
es
adc
jl
test
pushf
pushf
mov
and
sbb
mov
push
and
int3
and
xchg
mov
xchg
aam
dec
in
paddsb
repnz
xchg
sub
sub
sub
sbb
or
adc
sbb
and
add
dec
dec
sub
mov
adcl
pop
rorb
mov
pop
sbb
iret
cmp
imul
pop
add
cmovl
daa
mov
push
mov
xchg
xchg
dec
cmpsb
add
cmp
scas
xchg
xchg
int
mov
mov
dec
cmp
mov
loopne
in
push
or
sbb
xchg
cmp
aas
mov
outsl
dec
enter
add
push
add
add
jb
in
add
or
jbe
sbb
lcall
or
loopne
xchg
and
call
adc
add
push
sub
and
sbb
sbb
sbb
push
jb
enter
sbb
sbb
sbb
jp
test
mov
cwtl
and
enter
and
sbb
jb
es
fisubrl
in
enter
out
sub
mov
sub
jb
push
daa
push
es
and
inc
mov
and
and
cmp
enter
pop
pop
push
fs
insb
sbb
sbb
jb
enter
sbb
sbb
movsb
adc
adc
mov
scas
mov
mov
mov
fistl
inc
mov
mov
mov
push
xor
in
xchg
and
add
add
cmp
pop
pop
or
inc
mov
push
js
test
xchg
or
or
cmpsb
push
mov
mov
jb
adc
adc
adc
adc
xchg
and
adc
pop
sbb
jb
or
sbb
sbb
sbb
sbb
in
pop
pop
imul
outsb
mov
test
outsl
cwtl
mov
jnp
iret
mov
mov
rcll
xchg
and
fsts
cmp
in
hlt
adc
adc
and
sbb
push
sbb
and
sub
in
xchg
or
cmp
inc
or
sbb
push
pop
pop
push
push
xchg
xchg
and
aas
test
xchg
mov
das
xchg
add
test
outsl
int
aad
jnp
es
inc
mov
fldl
in
xchg
xchg
add
add
in
or
or
cmovle
sbb
adc
dec
inc
fimuls
inc
adc
push
pop
pop
dec
inc
sahf
pushf
addr16
jns
or
sbb
out
inc
or
fwait
repnz
enter
loop
ljmp
or
adc
sbb
das
xchg
xchg
xchg
xchg
sub
cmp
in
xchg
dec
push
divps
imul
adc
jg
jg
xchg
das
lahf
cmpsl
scas
enter
mov
iret
sbb
ficompl
in
and
jnp
push
mov
and
mov
fisttps
add
ss
ds
daa
and
add
xchg
mov
pusha
push
add
in
leave
enter
push
pop
nop
mov
cwtl
dec
mov
stc
sbb
daa
rorb
inc
sahf
pop
jo
mov
add
mov
push
add
sub
xor
aas
dec
or
or
or
movsb
and
cmp
push
js
adcl
mov
xchg
xchg
adc
pop
rolb
outsb
daa
fisttpl
out
icebp
sbb
sbb
enter
pop
mov
repnz
sbb
mov
jns
and
and
dec
inc
sahf
andb
dec
outsb
daa
lods
movzwl
int
and
fsub
cs
das
pop
jns
xchg
stc
mov
dec
mov
call
aas
add
xchg
and
add
pop
add
and
arpl
enter
subl
fs
cmpsl
or
scas
mov
in
in
iret
xlat
bnd
repnz
out
pop
notl
leave
ja
xor
rorb
adc
in
sbb
sbb
sbb
daa
push
das
mov
sarb
jb
jb
je
xchg
xchg
sahf
dec
shlb
sub
mov
leave
inc
sub
out
bnd
cmp
add
rorl
lea
jb
cs
cmp
dec
xor
sub
bound
outsl
jbe
sbb
or
jg
mov
in
popf
lahf
test
mov
mov
leave
enter
push
loope
jb
xchg
stc
ret
fistpl
call
sbb
sbb
pop
mov
into
dec
inc
sbb
pop
ret
xor
cmp
lahf
ret
dec
iret
ret
push
add
adc
sub
sub
sub
jb
enter
sub
and
sbb
xor
xor
xor
xchg
xor
stos
ss
repnz
mov
pop
cmp
into
mov
je
ret
jg
mov
daa
and
aas
lods
mov
enter
inc
flds
mov
jb
inc
inc
or
inc
adcb
add
dec
or
or
arpl
shr
adc
dec
lahf
dec
and
outsl
jne
ss
xor
mov
add
jne
subb
sbb
push
mov
add
xchg
mov
and
or
lret
xchg
xchg
fsubr
hlt
or
cmp
push
nopl
adc
adc
adc
mov
push
pop
adc
arpl
sbb
jns
mov
pop
cmpsl
mov
xor
sbb
pop
loop
jb
jbe
psubb
add
pop
leave
lret
es
push
sub
push
movsb
or
jbe
jb
mul
mov
jns
sbb
stos
add
or
loope
in
testl
push
or
xchg
xchg
and
pop
jb
leave
enter
push
adc
sbb
addr16
jb
jge
sbb
inc
into
das
xchg
sbb
addr16
into
dec
mov
and
aad
dec
enter
and
and
int3
mov
or
pop
sub
and
mov
sub
daa
and
into
xor
int3
gs
enter
sbb
mov
push
scas
add
xchg
and
add
fsubrl
jecxz
jmp
repz
sti
lret
test
dec
leave
jne
mov
push
push
sub
xor
add
xchg
and
add
enter
seta
mov
xor
or
or
inc
mov
adc
adc
lcall
lret
add
push
cltd
popf
nopl
aas
sub
loop
enter
rdpmc
sbb
dec
sbb
pop
push
arpl
jo
inc
mov
mov
xchg
and
outsb
daa
and
clc
loop
mov
test
mov
sbb
push
dec
add
dec
sub
sub
mov
sub
cmp
add
push
add
mov
cmp
jne
orb
or
xchg
and
or
jmp
in
or
stc
jb
pop
push
jmp
clc
adc
add
cmp
sbb
mov
sbb
push
sbb
mov
push
cwtl
stos
push
nop
pop
iret
int3
imul
push
mov
ret
int3
flds
insb
inc
dec
push
loope
jmp
and
daa
or
int
or
cmp
or
adc
divb
sub
aaa
adc
inc
jbe
jb
dec
adc
push
adc
fs
jg
jge
test
sahf
mov
lea
xchg
sbb
test
xchg
and
cmpxchg
mov
push
movsb
enter
mov
cmp
icebp
jg
cld
into
sub
push
adc
add
add
and
inc
pop
dec
push
or
popa
leave
fsts
or
orb
jb
enter
cwtl
adc
sbb
cmp
mov
femms
sbb
inc
mov
sbb
or
enter
adc
pop
push
pop
sub
mov
in
and
sbb
jb
and
and
sbb
sub
nop
cld
push
push
sub
das
cmc
push
pop
aaa
cmp
push
pop
pushf
daa
cmp
sbb
push
pop
pop
mov
pusha
out
repnz
or
je
and
sarb
mov
shrb
xchg
fcmovnu
in
imul
add
mov
xchg
imulb
push
mov
outsb
daa
in
add
push
into
fldcw
in
addr16
into
psrlw
adc
pop
sbb
daa
in
xchg
daa
xor
sbb
jb
sbb
mov
sbb
jnp
cmpl
pop
push
and
imul
and
daa
xchg
sub
mov
sub
sub
mov
das
pop
int3
xor
leave
enter
aas
xlat
xor
loop
in
loope
in
clc
psrlq
pop
push
xor
dec
cmp
push
or
imul
mov
push
push
cmp
inc
push
shll
outsb
addr16
jns
push
cmpsl
push
cmpsl
outsl
mov
xchg
push
mov
das
lret
or
jmp
divb
fs
add
push
sbb
pop
and
jbe
jnp
das
cmp
cmovne
fs
in
pop
punpckhbw
pop
jae
jle
xchg
fucomi
mov
xchg
pop
mov
enter
iret
pminub
jb
in
in
aad
aas
and
lock
adc
push
sub
int3
sahf
mov
sub
sub
in
das
inc
sahf
lock
das
push
fcmovne
xchg
fsts
xor
sbb
xor
outsl
outsb
mov
flds
das
mov
jb
mov
ficoml
test
push
mov
mov
mov
add
inc
mov
pop
xchg
inc
outsb
dec
dec
fwait
movsl
pop
or
movzwl
setg
fmull
ds
mov
testl
pushf
out
mov
in
pop
or
mov
cmp
ja
cmp
push
ja
pusha
or
insb
dec
lret
xor
popa
pop
aaa
mov
mov
add
mov
inc
add
rolb
enter
clts
xorb
dec
sarb
inc
push
mov
inc
cmp
or
stos
and
mov
outsb
cmp
pusha
int
aaa
pop
mov
xlat
add
cs
dec
mov
lcall
repz
or
enter
or
add
aaa
outsb
mov
leave
or
adc
inc
fsubs
pop
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
insl
push
and
in
sbb
jb
pop
andb
out
xchg
fildl
xchg
fmull
sahf
sub
dec
outsb
pop
pushf
mov
into
aas
xlat
sbb
test
add
push
mov
mov
and
and
and
nop
add
and
adc
add
addl
adc
cmp
add
add
movsb
add
cmpsb
xchg
pushf
pop
movsl
sbbl
sbb
shll
xchg
flds
pop
inc
inc
jg
mov
iret
mov
in
call
sti
popf
jle
adc
push
ficompl
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
inc
jp
cs
hlt
jl
iret
repz
js
jo
push
cmp
push
dec
inc
xor
cmp
repz
sbb
adc
repz
adc
add
repz
repz
repz
clc
hlt
lock
iret
aam
pop
repz
mov
sahf
test
xchg
mov
je
push
or
pop
mov
xor
out
cmp
sub
sbb
repnz
push
in
repz
repz
mov
cwtl
fdivp
cmp
nop
mov
jns
out
pusha
pop
push
dec
inc
sbb
sbb
add
clc
out
sahf
out
in
fmul
mov
lods
nop
ss
icebp
jl
rorb
out
push
dec
add
xor
inc
mov
mov
adc
cmpsl
mov
into
rolb
add
cmp
mov
mov
add
mov
aas
sbb
and
push
adc
pop
orb
and
daa
clc
cmp
push
xorb
icebp
call
adc
push
inc
jg
cmpsb
jo
push
mov
push
out
or
or
inc
smsw
cmp
add
sub
jg
add
push
push
rolb
sbb
mov
add
mov
add
mov
adc
pop
das
outsl
test
pusha
data16
iret
bound
loop
xchg
pop
mov
fs
cld
push
enter
push
movsb
fdiv
pop
jl
pop
out
mov
add
add
add
out
in
pop
push
in
es
testb
adc
add
add
add
dec
and
and
jg
clc
xchg
mov
paddq
aas
xor
fldcw
push
das
mov
mov
cmp
cmp
or
adc
mov
sbb
sbb
push
add
in
xchg
das
pop
clc
and
and
and
sbb
jb
and
test
out
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
subb
inc
xor
lea
add
loopne
rcr
fistl
cmp
into
repz
pop
js
mov
popa
fnstsw
xor
sahf
out
jnp
insl
add
push
pop
ja
cmp
shl
jae
das
and
insb
dec
and
pop
les
mov
pushf
in
add
or
enter
ret
mov
adc
aas
repnz
and
sbb
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
pushl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
pushl
loopne
jmp
xchg
test
mov
cmp
inc
mov
decl
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
cmp
jne
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
jmp
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
push
ljmp
ljmp
dec
leave
fwait
xchg
and
test
int3
add
fnstsw
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
jmp
loop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
xchg
xchg
out
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
jmp
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
ljmp
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
out
push
test
mov
sbb
cmp
pushl
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
ljmp
adc
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
in
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficoms
into
ror
add
cmpsb
fmuls
into
into
push
jb
or
inc
mov
pop
xlat
xchg
mov
add
inc
je
inc
inc
lcall
add
push
dec
addr16
pop
and
dec
dec
inc
push
xchg
cmc
movsl
testb
aas
jg
xor
sub
mov
decl
inc
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
stos
adc
sub
cs
fcmovu
outsl
mov
add
imul
and
cmp
iret
xor
leave
add
xchg
adcl
push
inc
dec
push
xor
out
push
jo
jb
push
xor
adc
inc
test
out
dec
inc
gs
gs
xchg
js
daa
inc
ds
mov
imul
mov
bound
outsl
push
dec
pop
fisubl
mov
mov
add
mov
adc
aaa
xchg
sub
cmpsb
das
and
inc
and
sbb
fs
pop
add
xchg
xor
daa
jge
shll
dec
jae
imul
xor
inc
jnp
js
loopne
lahf
or
push
les
push
cmp
data16
sarb
je
dec
ljmp
cltd
dec
in
inc
inc
inc
adcl
jb
cmovne
inc
dec
push
dec
dec
add
fisubl
dec
jbe
dec
test
push
adc
shlb
mov
inc
cmpsb
dec
iret
movsl
aas
xor
imul
arpl
add
pop
or
and
push
sub
rcrl
pop
mov
mov
mov
push
fstps
jnp
push
js
cli
dec
fsubrs
cmp
sub
sub
movsb
or
scas
push
or
jg
popa
mov
push
imul
mov
loope
outsl
push
jb
addb
push
add
das
push
xlat
pop
addl
push
clc
jp
lock
or
dec
adc
stos
or
push
xchg
sub
xacquire
push
outsl
mov
arpl
push
or
xor
lds
pop
adc
outsl
xchg
popl
xchg
adc
outsb
data16
add
or
cmpsl
lea
sub
gs
pop
pusha
pop
xchg
lea
mov
fildl
arpl
dec
insb
aam
pop
pop
jo
adc
stc
lahf
push
pop
inc
icebp
ja
xor
ss
std
pop
push
gs
mov
pop
add
dec
inc
adc
push
push
sbb
pop
cs
orb
dec
mov
sub
or
sbbl
xchg
iret
aas
out
sub
stos
or
adcb
call
hlt
pusha
mov
test
shll
inc
mov
test
xchg
jae
aam
adc
movsb
ss
imul
dec
push
pop
push
jne
les
adc
mov
outsl
loopne
push
mov
rolb
pop
dec
outsl
addr16
test
mov
iret
inc
iret
cmp
cmpsb
pop
les
ret
lea
sub
dec
adc
xlat
out
cmp
jnp
jg
xchg
push
jns
repz
enter
sahf
out
andb
sub
iret
xchg
cld
mov
popa
cmpsl
push
pop
add
inc
sahf
and
and
add
xchg
xor
ja
popa
push
out
mov
push
or
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
incl
test
ficompl
jmp
mov
hlt
movl
imul
std
in
dec
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
stc
mov
xor
filds
or
shrl
cmp
ficoms
push
xlat
enter
jmp
mov
and
mov
cltd
xchg
mov
mov
or
or
jg
sub
jl
das
adc
stos
sbb
ljmp
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
stc
ljmp
xchg
sbb
push
sub
insb
fs
add
arpl
hlt
push
imul
insb
sbb
xor
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
push
jmp
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
decl
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
call
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
lcall
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
jmp
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
ljmp
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
std
push
add
inc
push
imul
xorb
sbb
push
imul
aam
jmp
sub
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
lcall
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
ljmp
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
sar
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pop
jg
dec
mov
loop
sub
or
mov
xchg
or
out
fdivrl
decl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
mov
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
or
jg
imul
push
js
or
lcall
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fcos
jmp
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sar
incl
sbb
xchg
sub
aaa
mov
or
sbb
jne
add
sub
sub
cs
inc
dec
pop
mov
sub
orb
pop
xchg
jne
mov
hlt
push
dec
je
push
insb
imul
xchg
xlat
incl
dec
lahf
pop
inc
jbe
push
jns
arpl
bound
in
outsl
arpl
ja
add
sbbb
xchg
sub
pop
inc
jne
outsl
insl
addr16
lods
pop
bound
xchg
fildl
lods
xor
cmpsb
xlat
repz
and
jp
inc
jne
lods
addr16
add
fstpl
inc
js
inc
insl
bound
add
or
lock
jo
add
js
fadd
mov
push
dec
orl
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mulb
mov
push
dec
inc
or
in
or
add
ror
rcl
flds
push
popa
insb
ljmp
es
fs
test
ss
jbe
divb
aad
arpl
or
inc
test
test
xor
inc
loopne
and
push
lock
aaa
addl
mov
test
nop
mov
push
xorl
sub
pop
sub
roll
fidivrs
inc
push
bound
add
ljmp
mov
and
jae
and
and
xor
scas
pop
inc
aas
dec
push
inc
mov
pop
push
aaa
inc
adc
xor
mov
es
inc
inc
inc
add
insl
test
adc
ds
imulb
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outsb
jne
fsubrl
add
mov
stos
jge
xor
outsl
fucomi
pop
xor
or
add
sbb
push
addr16
push
or
pop
inc
cmp
and
aas
jmp
mov
add
imul
add
outsl
inc
add
adc
dec
xor
sub
movsb
jo
ljmp
nop
pop
mov
push
sbb
mov
or
pusha
pop
xchg
lock
inc
jb
out
addl
inc
test
lahf
shl
inc
aas
push
outsl
outsl
test
mov
and
adcl
in
addl
pop
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
jo
inc
ret
mov
push
pop
push
and
loopne
insb
jns
das
insb
jmp
pusha
inc
and
xor
test
test
aad
nop
adc
insb
adc
or
bound
cmp
addr16
imul
mov
adc
xor
popf
xor
add
in
movsl
aad
sub
mov
jg
divl
sbb
stos
rcl
pop
rolb
imul
testb
and
push
stos
dec
pop
mov
insl
xchg
add
sahf
aas
pop
mov
nop
adc
loopne
aaa
inc
push
movsb
push
sub
adc
or
les
push
loop
aaa
into
adc
jb
or
test
daa
sub
inc
push
add
inc
and
and
push
and
xor
add
jp
adc
dec
sbb
call
imul
cmp
mov
int
mov
lcall
add
adc
popa
insl
sbb
outsl
je
jb
test
jg
jl
inc
dec
push
and
jo,pn
push
or
cmpsb
dec
shrd
popa
incl
lea
stc
repnz
or
bswap
mov
out
ud0
iret
mov
repnz
in
push
pusha
ljmp
lret
sar
xchg
cli
push
cld
push
imul
push
addr16
inc
es
add
dec
mov
and
add
mov
mov
sbb
insb
daa
aam
cmp
add
push
pop
adc
add
verr
add
imul
sbb
add
xor
push
divb
rolb
adc
sub
inc
inc
ret
pop
push
loop
mov
stc
and
push
add
pop
add
pop
add
in
lock
les
lods
add
xorb
negb
fmulp
and
dec
lret
jbe,pn
sub
dec
mov
cmpl
sahf
jae
arpl
xlat
push
repnz
adc
andb
dec
sahf
sbb
inc
pop
or
sti
push
and
mov
sub
enter
jmp
add
cmpsl
movsb
arpl
mov
mov
clc
inc
jecxz
ss
add
or
or
or
push
and
add
loop
jp
or
xchg
xor
out
push
scas
stos
mov
popa
push
inc
mov
jbe
xchg
les
movsl
mov
jo
push
cmp
cli
negl
mov
int3
fucomi
gs
add
add
outsl
mov
jne
test
mov
pop
daa
roll
xor
call
or
or
ror
mov
sbb
loope
add
jnp
popf
pop
adc
sub
mov
xchg
jne
or
ds
mov
pushf
jbe
jb
inc
and
fmull
xor
mulb
push
push
pop
repz
jp
clc
sbb
pop
mov
fsubr
mov
ficompl
cmc
push
mov
js
mov
sbb
push
movzbl
or
rcll
ficompl
cmp
adc
mov
mov
lds
fldt
cmp
jbe
mov
clc
je
mov
push
sub
or
and
faddl
dec
inc
mov
push
or
mov
mov
test
add
push
movsl
mov
adc
mov
loopne
call
inc
or
pop
outsb
pop
sub
nop
test
mov
fidivl
clc
aad
mov
mov
or
xor
push
mov
imul
add
adc
fmuls
rclb
dec
aam
mov
arpl
subb
jp
lret
in
inc
dec
mov
jne
push
xchg
mulb
insb
push
inc
or
add
loopne
shlb
push
outsl
mov
ret
mov
mov
xor
add
les
cmpb
imul
or
in
pop
or
adc
push
push
fisubrl
fmul
fwait
push
or
mov
ret
and
ja
push
data16
enter
mov
add
int3
xchg
dec
iret
mov
push
das
sub
inc
push
pop
cmpsl
sbb
test
je
push
xor
sahf
jp
dec
or
cmp
push
ret
ret
adc
xchg
mov
dec
push
sub
sbb
std
loop
lcall
mov
mov
dec
pop
mov
and
inc
jo
push
dec
test
push
mov
pop
sub
es
push
aam
div
pop
hlt
je
inc
test
movb
dec
adc
inc
fdiv
mov
jb
push
mov
aam
lea
push
out
or
lds
sbb
xlat
loop
xor
adcl
mov
mul
loop
push
andb
add
popf
adc
push
sarl
inc
add
and
or
pop
jl
inc
rclb
add
cmp
vpdpbusds
or
mov
pop
pop
cmp
cmpsl
sbb
jmp
xor
add
jne
add
in
push
pop
data16
or
aas
adc
sbb
and
cmp
fcoml
and
jmp
loopne
ljmp
imul
bound
dec
call
andl
insb
fmull
add
jns
sub
shrb
pop
paddd
rclb
pop
aam
mov
scas
inc
popa
mov
test
mov
xor
imul
jno
lds
cmpsl
jl
sbb
xchg
or
popf
orl
sbb
jp
inc
out
xchg
push
fnstsw
cmp
imul
xlat
pop
sbb
je
or
inc
or
or
jnp
rcr
and
pop
xchg
sbb
scas
dec
mov
stos
mov
or
pop
rolb
cmpl
data16
ret
or
mov
xchg
jl
subl
in
inc
pop
lea
push
cmc
sahf
movsb
mov
add
mov
call
int
add
les
xchg
and
sbb
sti
scas
add
dec
enter
xor
lret
xor
xchg
shrl
push
sub
sub
jecxz
enter
js
push
xchg
clc
or
cmp
shr
mov
bnd
jle
pop
push
call
pop
sub
clc
call
xchg
lea
lea
xor
mov
ljmp
mov
nop
lods
push
sbb
jmp
mov
add
loopne
divl
enter
dec
call
enter
adc
call
shrb
sbb
or
lock
ja
pop
mov
xchg
xchg
jge
add
xchg
sbb
jle
jl
dec
call
in
dec
adc
and
inc
imul
or
or
push
pushf
stos
sub
in
push
fs
xchg
je
xchg
sbb
sbb
mov
out
movsl
call
or
or
jnp
shl
or
hlt
ficoml
hlt
xor
xor
clc
cld
dec
adc
sbb
rorb
lea
aad
or
add
mov
cmp
push
std
js
mov
push
jecxz
cmpsb
sbb
sti
cltd
movl
inc
out
or
push
or
xchg
sbb
fstps
aas
push
rorb
pop
push
mov
sbb
pop
lahf
mov
adc
push
insb
movsl
gs
in
dec
or
or
xchg
ljmp
bound
lods
cmovl
hlt
push
fmuls
xchg
cld
push
ja
mov
add
add
pop
loop
jo
test
enter
icebp
orl
sbb
mov
jne
aam
andl
lahf
add
pusha
testl
cmp
ds
xchg
push
sub
push
push
sbb
sbb
ret
push
mov
loop
fadds
push
sbb
fistpl
push
push
push
dec
mov
movsb
dec
fdiv
add
push
mov
pushf
loopne
inc
pop
movsl
sub
loopne
pusha
push
int3
call
push
push
shlb
add
mov
sar
je
cmp
jmp
addr16
cmp
ret
jp
adcl
bound
stc
and
or
fcompl
pop
testl
pop
sti
jge
mov
rolb
addr16
xchg
js
into
adc
test
sbb
out
lea
xor
adc
cmp
cmp
mov
or
sbb
pop
adc
mov
lea
sub
daa
rclb
add
xor
imul
push
faddl
ljmp
notb
fbstp
xchg
bnd
hlt
fdivrp
cmpsl
lea
xor
xor
mov
loop
ret
add
sbb
xor
inc
outsb
adc
decb
mov
add
jmp
enter
pop
dec
xchg
aas
xor
dec
jo
call
mov
std
pop
sub
xchg
mov
fldt
push
add
mov
mov
push
adc
pop
mov
xchg
mov
add
enter
cwtl
xor
or
pminub
add
add
jg
sub
movsb
push
test
push
mov
push
dec
mov
je
ss
rcll
idivl
and
adc
hlt
iret
cs
xchg
add
and
sub
mov
pop
daa
pop
pop
cmpsl
sub
mov
inc
test
push
pop
lahf
rorb
addr16
shlb
jnp
js
hlt
mov
andb
inc
mov
aam
sbb
ret
loope
outsl
push
jb
je
push
popf
jo
ljmp
inc
push
stos
je
sub
or
popa
pop
add
sbb
cld
int3
notl
je
cmpb
adc
add
add
call
enter
insb
or
or
leave
mov
and
push
xor
or
sub
mov
pushf
data16
fistpl
aad
imul
jnp
shll
rcl
fiaddl
mov
dec
mov
mov
loopne
mov
adc
pop
sub
inc
mov
and
push
aas
js
mov
mov
lret
mov
std
scas
jmp
adc
or
push
adc
push
lods
outsl
imul
scas
dec
adc
stos
xchg
push
push
push
ss
push
add
or
and
cmp
xor
dec
jle
jmp
ljmp
pushl
or
mov
sbb
mov
dec
in
in
pop
cmp
add
and
jb
and
jmp
inc
and
and
ficomps
mov
loopne
or
rcrl
cmp
stc
jo
pop
or
sub
mov
shrl
add
add
imul
pushf
mov
jbe
insb
mov
pop
into
and
ret
leave
sub
mov
xor
in
pushf
in
xchg
lods
inc
shll
in
mov
loopne
jmp
mov
add
adc
mov
jo
das
cltd
je
inc
sub
mov
sbb
mov
in
mov
mov
je
in
in
in
enter
mov
icebp
mov
fwait
ret
mov
lcall
mov
sub
cmp
es
and
mov
fildl
cmpsl
adc
mov
fists
pop
test
sbb
jne
add
or
sbb
jne
lods
jb
stos
add
jae
xor
fidivrs
pusha
and
xor
ds
jb
mov
dec
mov
jae
xlat
mov
xor
jmp
aaa
push
mov
out
fcomp
inc
test
push
out
push
sub
push
das
insb
js
pushw
adc
sahf
les
movswl
pushf
adc
mov
fldl
mov
lods
lods
dec
xlat
push
push
cwtl
stos
xchg
pop
mov
jecxz
repz
pop
into
inc
call
xchg
mov
lea
jb
rcr
insl
mov
add
rcrb
inc
inc
into
invlpg
in
rolb
rorl
int3
aaa
inc
daa
and
and
addb
lds
push
jne
jl
xor
loop
test
add
mov
arpl
ljmp
in
push
adc
jp
adc
jne
sbbb
pop
sub
sbb
scas
jns
mov
pushf
sbb
xchg
xchg
icebp
or
and
ljmp
push
add
add
out
enter
loop
and
pop
test
mov
or
addl
mov
es
test
in
into
mov
outsl
fsts
and
dec
in
pusha
push
into
inc
xchg
popa
inc
dec
pop
incb
or
add
add
or
je
mov
into
test
loope
sub
jmp
loopne
outsb
adc
dec
mov
aam
movb
add
insl
push
jmp
mov
fs
loopne
or
popa
adc
xor
pop
cli
gs
jge
insl
cwtl
imul
outsl
xchg
mov
xor
popf
rorl
pop
cltd
insb
cld
adc
fnsave
jp
nop
add
or
jmp
clc
push
mov
add
push
mov
les
ljmp
jbe
sbb
or
jne
xor
outsl
jge
sbb
push
add
inc
jnp
outsb
orb
gs
test
leave
mov
cmp
ds
mov
daa
cmp
adc
sti
inc
or
adc
push
add
lods
inc
rolb
in
add
xchg
ja
push
rcll
dec
mov
cmpsb
inc
inc
xor
jbe
add
pushl
mov
fisubl
leave
jnp
mov
sbb
std
xchg
inc
mov
add
cld
cmp
add
lock
mull
mov
or
and
dec
in
sbb
jmp
mov
dec
xor
sub
testb
push
and
test
adc
sub
push
cmp
pop
dec
adc
cmovo
lock
adc
dec
xchg
add
push
push
add
dec
insb
ret
and
adc
cli
ljmp
bound
pop
mov
jns
add
mov
and
jne
sbb
mov
mov
rcrb
js
aam
sbb
ja
xlat
sub
subl
push
pop
clc
mov
int
mov
add
movsl
or
add
rorb
inc
xchg
mov
les
xor
mov
mov
add
sbb
xchg
mov
add
sbb
jae
cmpsl
add
shr
add
xor
daa
jl
adc
xchg
adc
cmp
pop
pop
cmp
sbb
hlt
popf
mov
scas
mov
shrb
pop
xor
cmpl
cwtl
inc
jecxz
push
mov
lcall
inc
pop
ds
scas
emms
lret
in
jbe
inc
fs
lea
mov
mov
xchg
pop
xor
in
sbb
xchg
sarb
xor
push
or
mov
popf
jbe
stos
insb
and
jne
xor
xchg
in
std
jmp
insl
mov
push
and
xor
add
and
jmp
in
or
cmp
sub
js
xor
push
addr16
sarb
or
clc
dec
mov
sbb
cmp
fcmovnb
ss
inc
loopne
dec
add
les
sarl
aam
icebp
mov
fsubl
or
rclb
cmp
xor
mov
sbb
add
dec
mov
rcrb
cli
mov
inc
mov
dec
sahf
push
adc
fwait
and
jne
mov
jmp
or
add
movsb
cmp
int
aam
or
push
or
addr16
lahf
add
sbb
std
cmp
or
xor
dec
or
mov
sub
push
jo
sbb
push
adcl
out
and
loop
addb
add
call
mov
pop
loope
test
ljmp
add
pop
jo
cmpsb
and
mov
dec
icebp
push
push
mov
test
loopne
cmp
add
hlt
mov
mov
adc
mov
mov
test
hlt
push
push
mov
arpl
or
das
insb
add
inc
xchg
stos
jg
mov
push
fucomip
cmp
je
cmp
jbe
movsb
xchg
sub
insb
mov
subb
clc
push
and
mov
pop
jbe
sbb
sbb
or
daa
loopne
loope
inc
push
in
std
insb
arpl
add
lock
or
pushf
cli
adc
sbb
xchg
and
xor
pushf
loop
fmull
test
inc
jmp
sbb
scas
into
or
xor
fwait
add
movsb
adc
xchg
test
xor
mov
data16
mov
and
mov
push
push
inc
mov
imulb
enter
jmp
push
push
mov
popf
in
fsubr
jo
cmpsb
clc
icebp
mov
sbb
lock
cltd
adc
pop
mov
sub
sbb
lods
stos
lods
dec
jecxz
jnp
adc
movsl
rolb
loopne
into
gs
adc
push
and
and
push
rorl
dec
jle
test
rcll
dec
movsl
jp
loop
cmpsl
roll
loop
pop
jl
pop
push
lea
mov
movsl
sbbl
ljmp
xchg
aam
xor
mull
push
sub
push
push
cmpsb
aam
aaa
aad
push
in
mov
clc
jecxz
pop
popa
fsubrl
call
test
je
lods
mov
faddl
push
adc
mov
js
test
xchg
dec
je
jae
js
push
push
pop
adc
insb
cmp
in
add
or
int
or
push
lret
add
sub
pop
mov
push
and
or
and
fistl
jb
popa
psadbw
mov
jmp
lods
int3
rcrb
dec
dec
stos
push
ja
dec
mov
xchg
les
call
pop
fdivrp
jne
mov
hlt
push
in
shlb
add
mov
sbb
adc
jne
clc
and
push
add
cmpb
push
sbb
adc
jl
mov
pop
add
jmp
adc
and
or
adc
fsts
push
sub
xchg
mov
push
or
or
add
rcrb
or
call
lods
mov
call
movsb
call
lea
test
sbb
mov
or
add
or
pop
addr16
shll
pop
sbb
sbb
ret
cmp
cld
jne
into
cmp
mov
addr16
ss
cmp
push
in
dec
js
es
pop
test
and
iret
leave
je
int3
jecxz
decb
or
jns
outsl
cmp
mov
xorl
jmp
nop
xor
and
jl
push
sahf
jae
enter
sarl
jno
cmp
icebp
call
out
test
mov
je
subl
inc
jmp
mov
setb
push
fildll
xchg
arpl
jmp
repnz
sbb
call
push
xchg
pop
enter
jl
xor
negb
divl
push
dec
xor
sbb
call
xlat
jmp
jne
push
sub
imul
je
mov
movl
shlb
jo
adc
add
or
inc
fcompl
sti
xlat
jnp
out
xchg
jne
add
push
call
cmp
fisubs
in
movsb
jmp
js
lret
dec
in
sbb
test
mov
stos
jae
mov
dec
push
call
pusha
cmpsb
sub
call
int3
lock
adc
mov
push
mov
and
or
or
test
je
push
stc
sub
fcompl
inc
and
xlat
out
push
jo
push
sbb
movsb
insb
sbb
jo
or
mov
cwtl
or
popf
fadds
mov
cld
test
outsl
jl
test
stos
sbb
mov
push
fs
cmp
and
mov
jg
add
andl
cmp
pop
mov
push
dec
lea
shrb
pop
mov
orb
insl
xchg
popf
jbe
test
aas
mov
call
mov
or
mov
xchg
fcoms
mov
cmp
fadds
dec
jne
or
mov
add
je
jno
adc
movsb
nop
lcall
test
je
lods
ret
stos
and
adc
incl
nop
sbb
sub
xchg
shr
mov
or
je
mov
push
cli
sub
or
xor
or
lcall
ja
stos
mov
lea
dec
fs
jmp
and
cmp
inc
inc
xor
pop
jo
ss
fnstenv
add
xor
aam
mov
mov
loopne
movsb
aam
mov
and
sti
jnp
sub
pop
sbb
dec
push
inc
push
push
add
loope
popa
es
mov
sarb
das
dec
aam
fisttpll
rclb
dec
imul
je
push
jecxz
sub
cmp
jge
dec
mov
push
sub
je
sbb
dec
sub
xchg
xchg
aas
enter
or
sub
fcmovb
sbb
adc
arpl
mov
xor
xchg
adc
pop
pop
or
inc
mov
push
fcmovb
inc
sbb
mov
sub
mov
xchg
push
out
insl
ret
push
adc
sbb
adcb
mov
mov
popa
sbb
xchg
adc
jnp
sbb
adc
arpl
add
lds
push
pop
sbb
sbb
and
sbb
adc
xor
sbb
mov
daa
and
mov
dec
sbb
jmp
rcrb
mov
and
loop
nop
cmpsb
nop
dec
mov
sbb
push
pusha
xchg
cli
or
cli
mov
and
jp
jle
mov
mulb
mov
xor
sbb
adc
cmp
dec
fnstenv
aam
inc
adc
cmp
jl
std
iret
call
and
pop
dec
adc
int3
insl
inc
or
pop
xchg
hlt
jmpw
movsb
dec
pop
leave
adc
fstpl
das
jle
decl
fwait
mov
mov
or
pop
psubsb
mov
enter
scas
pop
inc
jb
fucompp
andb
fldt
pushl
cmp
jmp
dec
cmc
or
push
xchg
sbb
addb
ret
fdivr
test
xchg
addr16
shl
xor
je
push
mov
fcmovnb
into
cmp
xor
dec
xchg
cli
insb
fwait
dec
jmp
sub
inc
jmp
add
sbb
shlb
ljmp
push
sub
xchg
sbb
repnz
dec
or
insb
or
adc
leave
test
or
cmc
lock
mov
enter
push
add
cmp
mov
pop
ja
push
and
inc
fiadds
pop
push
shrl
and
push
push
pop
aad
es
cmpsb
add
add
push
and
add
cmp
repz
aad
les
shll
jae
shlb
push
push
lret
xchg
dec
addb
out
movb
mov
das
insb
loop
dec
push
in
or
push
mov
xor
adc
mov
xchg
js
pusha
aam
and
das
js
xorl
movsb
xchg
xchg
mov
push
imull
push
imul
or
adc
jp
lock
dec
dec
push
adc
cmpsl
insl
mov
js
mov
aaa
movl
leave
cmp
movsl
adc
add
addl
mov
adc
add
sub
mov
inc
and
xchg
rclb
loope
inc
inc
aaa
inc
rcrl
jo
addr16
aaa
and
mov
insb
les
pop
and
and
inc
xorl
ja
inc
sbb
data16
inc
inc
inc
addr16
inc
inc
lret
inc
sub
mov
dec
addr16
addr16
out
xchg
lods
lret
call
push
dec
inc
popa
inc
rolb
or
push
inc
pop
or
fs
fdivp
sahf
int
cmp
pusha
nop
push
in
nop
je
mov
push
les
push
sbb
lea
jns
mov
xor
sub
sarb
out
adc
add
add
rolb
call
jmp
xlat
test
push
rcl
adc
adc
adc
inc
lock
daa
xchg
jnp
pop
nop
add
and
dec
xchg
inc
pop
and
addb
mov
sahf
out
fisubrs
enter
sarb
inc
mov
xchg
inc
cld
or
push
adc
mov
add
mov
int3
add
mov
pop
ljmp
lahf
and
and
insl
adc
mov
pop
dec
or
insb
and
jo
dec
pushf
push
pop
jmp
add
sbb
cmp
je
mov
add
sub
test
or
lahf
ret
lea
mov
adc
add
pop
add
or
add
add
add
cmovb
and
mov
cmp
je
xchg
add
mov
add
iret
enter
push
gs
pop
movsl
mov
or
dec
fimuls
xchg
or
or
leave
jae
and
inc
lock
or
xchg
cmpsb
jb
mov
adcl
or
xchg
or
jns
scas
push
sub
in
adc
pop
adc
stos
cmp
adc
in
add
adc
lret
popa
adc
adc
lcall
in
push
inc
adc
mov
inc
pop
xor
or
pop
and
sbb
leave
mov
and
sbb
fmull
mov
sbb
sbb
sahf
ja
je
push
sbb
xor
xor
sbb
iret
push
push
inc
negb
pop
es
aas
inc
jne
add
add
sub
mov
add
movl
dec
mov
pop
xchg
and
lods
pop
lcall
xchg
push
in
push
in
imul
add
sub
rcl
ret
sub
xlat
in
in
out
sahf
sub
mov
add
call
pop
repnz
call
mov
jmp
iret
enter
push
cs
jb
jmp
jmp
inc
lcall
xchg
ja
mov
xchg
aad
in
cmp
scas
in
mov
mov
or
je
ss
jae
lock
dec
and
inc
icebp
cmp
das
addr16
call
repz
das
nop
repz
std
hlt
hlt
lret
stos
cmp
hlt
xchg
std
iret
enter
cmc
cmp
xor
mov
sbb
and
add
cmp
push
sar
aas
stc
stc
and
cli
cli
pop
enter
sti
sti
fisubs
aaa
xchg
cld
cld
cld
je
cld
push
push
repnz
nop
shlb
mov
xor
sbb
in
cld
xor
and
jmp
popa
call
jb
lahf
roll
dec
cwtl
std
shr
out
dec
jb
pop
jmp
jns
or
adc
jecxz
xor
ja
cmp
push
push
mov
idivl
mov
mov
inc
or
and
movsb
out
xchg
scas
call
cltd
sti
adc
push
adc
or
cs
jmp
in
aad
daa
in
cltd
or
andb
jmp
cmpsb
jb
cli
out
out
out
xchg
pop
push
lea
cltd
cmp
cli
or
aas
repz
stos
xchg
sbb
push
cli
stc
imul
stc
div
inc
scas
data16
mov
xchg
clc
push
and
test
jb
push
stc
xchg
adc
sbb
push
xor
sti
xchg
or
and
jmp
mov
cmp
mov
dec
mov
push
jne
adc
clc
mov
shrl
dec
loop
loop
pop
push
lea
loope
clc
or
dec
inc
lcall
out
jne
mov
xchg
fdiv
out
pop
repnz
negl
and
push
and
ljmp
xchg
pop
notl
negl
hlt
imul
out
xchg
adc
into
negb
and
test
scas
notb
dec
or
push
imul
in
aad
loope
divb
push
or
mov
xchg
cmpsb
div
testb
int3
scas
test
mov
clc
push
and
clc
cmp
or
pop
cmc
cli
cli
sub
cmp
cmp
pop
push
loope
cmc
cli
hlt
call
xlat
inc
mov
lock
push
add
mov
push
mov
jae
cmp
clc
sti
mov
loope
loopne
mov
loop
sub
nop
mov
rclb
mov
hlt
in
mov
loopne
pop
repz
paddq
mov
test
xchg
repz
jmp
shlb
dec
repz
or
cmp
movsl
in
mov
jne
repnz
repnz
test
cmp
push
repz
xchg
pop
and
mov
adc
push
pop
repnz
xchg
icebp
cmc
cmc
mov
icebp
mov
pop
repnz
stos
lock
cwtl
icebp
dec
jae
and
jb
sbb
mov
adc
stos
jne
and
jecxz
cmp
adc
jmp
dec
sub
pushf
out
mov
ret
push
inc
jge
push
and
cmp
dec
sahf
xchg
stos
cmp
lods
push
in
adc
mov
pop
mov
in
sbbl
push
dec
icebp
dec
add
movsb
xchg
push
cltd
and
jmp
nop
pushl
sarb
jmp
mov
sub
nop
push
jns
repz
adcl
push
aaa
or
push
stc
xor
dec
add
jp
ss
int
sub
push
jecxz
repz
mov
imul
out
data16
aad
in
xchg
gs
dec
nop
into
jnp
outsb
or
mov
add
or
pushf
dec
mov
adc
sbb
jg
lea
inc
cmp
and
xchg
aam
nop
lret
test
mov
orl
bound
jmp
jg
cmp
rcr
adc
sarb
dec
daa
jmp
lea
loope
aaa
or
lea
test
ficoms
jo
mov
sub
or
sbb
push
add
pop
mov
ret
inc
sub
je
mov
popa
dec
shr
sbb
ret
nop
loopne
aam
in
jmp
ror
pop
jne
ror
add
sbb
or
push
push
and
xchg
cmp
andl
clc
adc
out
jmp
mov
xchg
pop
insl
adc
jmp
adc
outsb
dec
cmp
push
and
insb
and
mov
movsl
addb
lahf
loop
movsb
cmp
mov
js
pop
xor
sub
push
ss
push
je
or
adc
hlt
psubsw
sub
cmp
daa
sub
inc
jmp
xchg
pcmpgtd
cmp
dec
adc
jbe
lret
add
call
dec
das
dec
xor
xchg
loop
inc
add
outsb
adc
add
pusha
xchg
pop
and
jo
movsl
sub
add
data16
mov
or
push
shlb
xor
adc
inc
inc
adc
rorl
dec
dec
mov
xorb
adc
add
dec
pop
das
bound
adc
inc
mov
inc
push
add
xorb
lea
inc
xor
xor
shlb
adc
sbb
lret
std
inc
jmp
add
xor
add
lods
clc
js
movsl
mov
fimuls
push
movsl
jno
or
mov
mov
push
mov
push
push
sbb
iret
inc
or
adc
je
mov
shll
sbb
sti
pusha
add
movsl
fidivs
stc
push
dec
and
xor
repnz
mov
divb
add
sbb
in
sub
cmp
xchg
int
pop
add
mov
cmpsb
addl
jmp
xchg
sub
mov
pusha
add
sbb
mov
mov
jns
scas
sbb
jmp
je
push
outsb
or
adc
mov
inc
inc
mov
bound
cmp
or
test
xchg
and
nop
adc
dec
or
mov
jb
shlb
loopne
jb
sbb
xor
or
loop
out
xchg
add
mov
rcrb
add
xor
mov
push
mov
nop
rclb
pop
add
imul
push
xor
inc
rcll
xorb
movsb
mov
add
xchg
dec
in
jmp
mov
icebp
push
call
sub
dec
adc
mov
inc
push
add
mov
and
or
popf
arpl
and
mov
inc
jp
sub
icebp
mov
xor
mov
cmp
mov
cmp
addl
std
inc
and
cltd
push
mov
dec
bound
mov
shlb
adc
and
inc
xor
enter
inc
xor
push
cmpsb
rolb
outsb
cs
lods
mov
adc
or
mov
or
enter
sub
in
mov
and
sti
mov
je
frstor
gs
loopne
mov
or
movsl
mov
nop
sbb
push
xorb
add
inc
lea
pusha
inc
add
bound
rcll
stos
or
cmp
scas
stc
aaa
popa
aas
ss
xchg
xchg
je
pop
test
and
je
cltd
pop
test
loopne
dec
or
loopne
movsb
sti
inc
cltd
inc
adc
inc
mov
cltd
pop
and
mov
into
dec
cltd
mov
sti
push
daa
xchg
cltd
xor
and
or
xor
cltd
scas
jb
cmp
mov
and
xchg
out
adcb
ss
adcb
lods
insl
sub
mov
inc
ret
or
test
loop
xlat
inc
sbb
adc
xor
sub
xchg
push
or
nop
loopne
subl
xchg
loopne
rolb
push
addb
xor
sbb
dec
test
aad
rcl
or
jo
push
xor
shlb
je
xchg
mov
shrl
lahf
call
mov
pop
xchg
push
sbb
nop
test
and
dec
je
enter
sbb
mov
sbb
push
loope
into
xchg
mov
subl
aam
sbb
addl
nop
test
inc
pop
mov
cmp
pop
mov
test
push
test
sbb
test
enter
test
rol
add
test
sub
inc
leave
loopne
fs
in
push
test
sbb
xor
shrb
and
sbb
push
sbb
xor
test
mov
sbb
ss
test
adc
inc
test
iret
sub
xor
ljmp
shll
test
addl
test
shlb
test
cli
test
mov
test
dec
test
dec
sbb
fsubs
cmpsl
or
test
mov
xor
test
ss
push
or
repz
dec
test
cmp
roll
mov
xor
mov
imul
jb
push
fwait
jno
sbb
inc
test
xchg
pop
movsl
test
popf
int
inc
test
call
push
pop
test
daa
rcl
cmpl
inc
test
aad
pusha
and
push
or
mov
jo
add
test
and
test
add
test
popa
cs
or
test
inc
inc
inc
sbb
sub
sbb
shrb
or
push
or
mov
jno
xor
adc
mov
pop
test
or
test
mov
sbb
test
imul
addl
push
test
out
adc
and
inc
inc
mov
fnstcw
test
mov
or
or
or
bound
add
ss
jae
sbb
add
in
mov
pop
and
mov
dec
xor
or
dec
stos
popa
mov
int
addl
inc
jo
mov
push
test
cmp
rorb
or
xchg
mov
outsb
test
jmp
cltd
adc
add
sti
lret
popf
dec
imul
sub
add
rolb
test
jg
cmp
sarb
xor
push
in
test
push
test
mov
mov
add
cmp
out
dec
push
or
nop
mov
mov
test
lods
fisubrl
test
test
movb
cmp
test
shrb
jg
test
pushf
mov
scas
push
sbb
test
out
sbb
xor
xchg
xchg
xchg
xchg
inc
xchg
xchg
xchg
xchg
push
pop
dec
sub
cmp
xor
cmp
lcall
call
adc
aaa
xor
push
popa
jo
loope
inc
test
cmp
daa
adc
xchg
mov
push
fsqrt
orl
pushf
ret
xor
imul
and
adc
and
mov
repz
sub
data16
inc
pop
adc
jmp
inc
xor
mov
cmpsb
test
test
dec
pop
ret
mov
add
sub
dec
bt
fbstp
jb
sbb
cmp
cmp
in
jbe
lods
ret
mov
jmp
addb
inc
test
loopne
test
addl
mov
inc
test
jo
push
test
add
jl
dec
inc
xchg
pop
rcrb
adc
mov
mov
test
sarb
cmpsb
loope
mov
xor
xchg
add
xlat
inc
and
jae
mov
inc
test
dec
xchg
add
inc
inc
dec
cmpb
pop
mov
add
jo
pushf
or
push
push
jbe
sbb
pop
pop
jle
nop
test
or
je
pop
pop
add
dec
nop
je
nop
test
or
cmp
test
mov
addr16
push
test
shlb
cmp
ds
shrb
push
mov
cmp
data16
int
sbb
faddl
pushf
mov
add
push
jne
and
inc
test
cmp
mov
leave
ret
movsl
push
sub
push
out
dec
dec
ret
or
call
pop
icebp
rolb
jmp
jnp
add
in
cli
stc
mov
fs
iret
jg
mov
mov
jne
and
test
ss
sub
push
iret
leave
xchg
es
inc
dec
rcll
add
xchg
or
sbb
fwait
shll
or
xchg
out
or
jmp
dec
adc
xchg
adcb
xchg
outsl
xorl
lcall
push
jl
sbb
lcall
sub
loop
movsb
push
push
and
notb
call
jmp
cmc
sbb
sub
fimuls
call
je
push
jmp
and
jmp
mov
jmp
cwtl
xchg
push
push
shll
sbb
das
int3
push
push
inc
xchg
ret
idivb
or
dec
mov
jecxz
push
push
pop
xchg
sbb
dec
popa
sbb
xchg
fnsave
inc
sub
and
jo
xchg
and
xchg
mov
test
and
ret
nop
scas
ret
push
xor
into
out
adcb
loopne
or
ret
push
or
sbb
loopne
jmp
lcall
dec
imul
mov
ficoms
cs
call
je
xchg
jbe
and
jne
test
sub
add
cwtl
sbb
rorb
or
add
xchg
inc
pusha
mov
or
je
xchg
push
add
mov
inc
fstl
push
inc
call
mov
inc
inc
cs
lea
and
xchg
adc
nop
fs
addl
push
test
mov
mov
nop
nop
shll
test
inc
xor
adcl
push
mov
pop
adc
subl
and
inc
jle
push
cmp
adc
add
jmp
loop
call
sub
cmpsl
pop
movsb
add
incl
jl
je
xchg
dec
call
sbb
sbb
cmp
icebp
xor
dec
mov
adc
xor
or
test
loope
add
mov
test
pusha
addl
pop
sub
jo
jns
push
cmp
xor
cmp
sub
repz
mov
sub
sub
adc
add
arpl
loopne
movb
or
sbbl
sub
push
ljmp
and
or
and
pop
adc
repnz
cs
mov
nop
inc
ljmp
incl
push
ja
in
push
mov
inc
mov
xor
push
inc
add
pushf
inc
pop
imul
inc
int3
ss
lcall
fwait
inc
sbb
inc
rcr
add
je
xor
int
inc
or
jne
mov
movb
mov
repz
jmp
cmp
das
or
incb
inc
jmp
dec
jmp
xor
push
or
and
inc
inc
adc
fidivs
add
inc
pop
je
popa
mov
rcrl
pusha
add
pop
add
or
mov
mov
cmp
pop
cld
pop
rorl
adc
push
inc
subb
je
cld
sbb
loopne
movsbl
and
cmp
leave
or
push
mov
ja
sub
add
xor
inc
jmp
lea
add
adc
lods
mov
popf
pop
pop
push
push
adc
jno
fbld
sbb
and
adc
mov
mov
add
loop
pusha
popa
push
mov
cmp
dec
push
inc
cmpsb
insb
jecxz
inc
jnp
lock
roll
stos
popa
fsubrp
or
xlat
push
cmp
sbb
shl
mov
fsub
addps
cmp
mov
pop
fisubrs
jge
push
push
dec
testl
mov
add
jne
dec
popf
cmpsl
aam
sbb
aas
xchg
shl
jmp
cmp
push
add
clc
adc
pop
cwtl
loopne
push
add
ret
push
sar
inc
push
adc
xlat
dec
jp
sbb
xchg
xor
pop
pop
push
hlt
dec
sub
fcomip
inc
adc
fistl
or
xlat
test
adc
and
lret
sbb
dec
andl
sbb
mov
adc
jecxz
xor
inc
and
jne
sbb
test
cmpsl
mov
adc
and
sub
inc
loope
mov
andl
ds
in
ret
xchg
push
ja
xor
nop
cmpl
out
xor
sub
cmovg
or
xor
xorl
lock
add
and
add
and
lret
push
xchg
or
xchg
sbb
or
mov
ss
adc
flds
adc
rol
mov
mov
dec
js
jbe
mov
stos
loopne
push
push
mov
cmp
nop
fwait
cwtl
and
in
roll
sbb
mov
mov
xor
leave
xchg
or
int
je
cmp
xor
and
lcall
out
pop
xchg
push
xchg
nop
leave
xchg
or
leave
ds
adc
push
add
pop
sub
out
add
push
inc
out
roll
xor
xor
leave
sbb
adc
xor
jmp
jmp
call
adc
leave
shll
out
pop
push
mov
sbb
xchg
inc
scas
xorb
outsl
sbbb
sarl
pop
sti
sub
dec
pop
and
inc
mov
sbb
mov
enter
sahf
enter
enter
fcmovbe
mov
xchg
cmovb
aad
enter
leave
mov
jae
mov
and
dec
cmpsb
sub
nop
mov
nop
cmp
or
fnop
mov
loop
add
jns
imul
sub
sbb
leave
fnop
cltd
push
cmp
push
adc
inc
rcrl
in
dec
mov
fbld
ljmp
mov
add
leave
ret
loop
and
into
sbb
lret
inc
adc
fsts
mov
inc
sub
enter
mov
sbbl
mov
adcl
or
pop
test
add
push
arpl
adcl
cwtl
gs
fwait
adc
leave
mov
jne
push
insl
add
leave
dec
sbb
push
xlat
mov
and
aaa
push
fs
push
pushf
xor
inc
push
addb
sub
jne
cmp
add
push
adc
mov
mov
out
in
add
dec
call
or
outsb
push
rcrb
out
orl
mov
ss
dec
cmp
mov
adc
push
je
push
mov
outsl
mov
adc
cwtl
daa
and
imul
add
push
sbb
or
inc
and
test
nop
test
pop
ds
inc
aaa
addb
add
cmp
push
or
mov
push
call
push
mov
inc
mov
mov
ret
mov
rolb
add
clc
lea
xchg
adc
sub
daa
push
xor
push
or
xchg
mov
push
cmp
sbb
mov
bound
pop
scas
scas
leave
aad
sbb
inc
sbb
push
sbb
sbb
mov
out
lods
sub
cwtl
sbb
xchg
mov
pop
sbb
or
push
jecxz
or
int3
push
pushf
fisttpll
mov
out
pop
sbb
mov
pop
stos
imul
adc
addr16
lods
pop
mov
stos
loopne
dec
out
fnstsw
add
shll
out
stos
and
aad
or
mov
aam
mov
push
jbe
call
mov
push
ja
stos
xchg
and
sahf
mov
xor
pop
test
inc
les
movsb
out
sub
and
pop
pop
and
and
pop
xchg
bound
mov
mov
sbb
cmpps
cmp
call
dec
mov
push
or
pop
xor
pop
aad
in
pop
lret
xchg
les
lds
dec
push
call
push
mov
add
and
mov
test
cmpsb
xchg
lcall
int
lods
je
mov
pop
or
add
les
pop
scas
movsb
ljmp
lds
nop
add
xor
inc
adc
adc
pop
arpl
pop
aaa
call
nop
sbb
pop
mov
ss
mov
dec
mov
jecxz
jo
bound
int3
mov
mov
ret
mov
mov
and
and
nop
popf
fadds
bound
jp
pushf
pop
pop
bound
mov
mov
hlt
jb
pop
adc
jp
mov
pop
cs
inc
and
pop
sbbb
ret
and
xor
inc
cs
mov
dec
push
pop
xchg
enter
pop
sbb
inc
pop
jmp
mov
test
inc
imul
push
mov
lcall
cmp
adc
pop
sub
and
rol
sbb
push
push
adc
enter
sub
lidtl
inc
call
adc
lods
pop
bound
jb
mov
stos
ffreep
mov
adc
fwait
bound
pop
jmp
in
sub
pop
lahf
jg
mov
pop
and
jbe
xchg
sbb
add
or
popf
sbb
imul
pushf
ja
push
sbb
imul
cltd
push
imul
sub
adc
loop
sub
test
or
bound
fmuls
iret
lds
xlat
pop
nop
popf
or
or
ficomps
ret
sub
and
cs
pop
in
dec
inc
cmp
andb
push
mov
and
call
adc
les
mov
mov
and
aaa
and
mov
insb
xor
or
rcr
les
aaa
call
adc
cmp
cmp
ret
nop
add
je
cmp
mov
ret
sarb
pop
lea
jno
and
cmp
xchg
addb
sbb
cmp
xor
cmp
add
xchg
xor
cwtl
cmp
sub
gs
sbb
arpl
cmp
mov
or
jge
ret
rcrb
push
pop
mov
ret
or
sbb
or
call
dec
jae
and
inc
lss
mov
cs
aas
jmp
xchg
push
push
mov
leave
xchg
or
dec
rcrb
cmp
lahf
inc
cs
adc
shld
fs
push
addps
push
and
mov
fs
mov
and
sti
mov
jb
sbb
jns
add
cmovae
call
and
jle
call
inc
add
psrld
and
fs
mov
in
add
and
pop
inc
mov
or
addb
mov
mov
sbb
cmp
ret
andl
and
pop
mov
dec
pop
add
dec
inc
sti
adcb
xor
sbb
sti
data16
popa
xor
adc
jle
mov
nop
adcb
or
sti
xor
les
dec
sti
push
mov
xor
sti
inc
sbb
sbb
inc
xlat
xchg
xchg
movups
ret
sti
jmp
fldenv
xchg
mov
or
and
or
aam
push
and
adc
xchg
testl
adcl
loope
xchg
or
xchg
imul
pop
in
mov
and
sub
jmp
dec
sbb
and
lea
lock
test
inc
je
dec
enter
adc
arpl
sub
aaa
push
dec
mov
nop
jnp
push
mov
sub
adc
js
cmp
call
pop
add
ret
enter
push
and
dec
xchg
test
les
dec
aaa
add
or
adc
adc
shlb
push
sbb
outsl
nop
dec
enter
mov
dec
sub
mov
aaa
push
mov
call
inc
adc
mov
adc
inc
int3
je
fnstenv
loope
inc
aaa
mov
int3
xchg
or
xchg
stos
sub
inc
or
aaa
mov
rorb
aaa
and
imul
xor
fstl
inc
fisttpll
xlat
mov
mov
or
aas
xor
pandn
repnz
das
shlb
call
pop
push
adc
and
adc
call
jb
xchg
add
call
lock
call
cmp
loopne
call
xchg
and
dec
call
in
call
push
call
in
call
pusha
call
das
pop
mov
insb
call
je
inc
out
xchg
gs
pop
jl
push
xchg
jbe
sub
inc
sbb
cmp
mov
mov
cs
dec
in
sbb
push
add
sub
in
fsts
adc
push
les
pusha
in
mov
xchg
mov
adc
xchg
dec
in
jae
push
push
cs
xchg
dec
in
cmp
xor
in
mov
cld
push
cs
dec
adc
add
pop
lods
push
or
leave
gs
loope
lret
adc
jb
pop
sub
sbb
and
xchg
lret
and
sub
mov
jle
sub
push
test
outsb
nop
lret
dec
cmp
xor
je
cs
adc
xchg
dec
in
or
dec
add
jo
sub
inc
call
inc
outsb
and
or
mov
cwtl
sahf
sar
mov
push
call
mov
je
data16
dec
sbb
and
adc
pushf
xor
daa
inc
sbb
mov
push
and
int
dec
mov
mov
mov
call
shlb
int
les
dec
xor
daa
add
dec
mov
and
mov
inc
and
push
jmp
xchg
and
pop
sbb
inc
adc
shlb
mov
enter
push
xchg
or
and
bound
cmpsl
pushf
mov
or
dec
loop
adc
pop
mov
inc
aam
adc
mov
or
mov
mov
rclb
add
cmc
inc
adc
mov
adc
adc
and
es
pop
adc
sub
push
add
dec
lea
inc
mov
fadds
or
lea
cmp
cmpsl
es
imul
cmp
push
imul
call
sbb
imul
xchg
dec
mov
inc
scas
sbb
xor
mov
pop
pusha
pop
and
sbb
das
cmp
in
push
sbb
push
movsb
inc
shlb
pop
xchg
push
shr
addb
pop
adc
adc
dec
mov
cmpsl
sarb
push
dec
sbb
sbb
inc
mov
or
xor
pop
xchg
lcall
mov
push
or
adc
inc
adc
cmpl
xor
mov
mov
pop
push
mov
stc
mov
inc
into
fldl
mov
cmp
dec
push
mov
pop
push
or
mov
adc
adc
push
mov
push
push
inc
adc
dec
mov
mov
adc
mov
add
ret
mov
fldl
mov
and
fbld
fs
and
rorl
pusha
jmp
fs
ret
add
sub
or
jecxz
orl
stos
cmpsl
sub
pop
aam
call
mov
and
sub
flds
jnp
call
test
je
sbb
mov
mov
jg
sub
mov
cli
push
push
cmp
sbbl
jecxz
push
in
and
push
pop
mov
and
and
add
pop
cmp
dec
jmp
xchg
xchg
push
sub
or
loopne
xchg
pop
lods
pushf
faddl
dec
pop
fwait
and
sub
jbe
and
pop
je
cs
jo
push
call
jmp
cmpb
push
sub
fcmovnb
pop
ds
xor
roll
cmp
dec
jmp
xchg
out
addr16
sub
dec
jmp
adcb
xor
xor
pop
pop
xchg
movsb
je
pop
add
dec
jmp
xchg
xchg
or
jnp
repnz
jns
push
and
pop
and
cmpsb
js
stos
and
cwtl
js
xchg
mov
cmp
sub
in
pop
pop
add
or
test
sbb
fwait
shlb
or
rorl
push
mov
or
rcrb
push
out
rorl
mov
and
push
adc
adc
cmpsb
adc
call
scas
sub
adc
jno
mov
adc
sbb
sbb
inc
adc
imul
rorb
and
push
femms
push
mov
dec
js
jmp
pop
push
sbb
leave
lods
je
mov
daa
clc
shll
inc
ret
adc
scas
int
nop
daa
or
orl
mov
ja
les
daa
sub
jl
dec
sahf
adc
sbb
add
rcrb
mov
push
and
or
inc
inc
arpl
add
inc
xor
add
test
rcll
je
lods
nop
stos
xor
test
subb
mov
xor
mov
and
xor
inc
mov
dec
repz
or
test
or
dec
xchg
imul
out
jge
jecxz
inc
faddl
gs
sub
in
and
xchg
insl
nop
mov
call
fsubs
push
mov
lea
lcall
jb
inc
push
sbb
dec
sarb
je
push
adc
push
pop
and
pop
rolb
rclb
sbb
adc
scas
add
pop
rorb
sub
xor
jl
popa
and
shrl
adc
movsl
loopne
pusha
inc
mov
orb
mov
mov
xchg
sbb
imul
jmp
add
dec
push
je
adcl
jbe
nop
dec
or
add
pop
aam
mov
addl
push
or
arpl
push
sub
pop
or
stos
stc
push
cld
add
outsb
add
xchg
pushf
mov
dec
inc
popf
cld
jb
fmuls
popf
mov
rcl
int
out
push
push
hlt
subb
dec
push
inc
sub
test
push
and
subb
or
cmp
mov
mov
cmp
push
sbb
ret
add
call
inc
icebp
sbb
and
xor
or
inc
jp
inc
addb
or
inc
sub
adc
ror
cs
sbb
loopne
sbb
xchg
jp
cwtl
incb
fwait
cmp
inc
adc
lea
inc
inc
push
inc
adc
inc
dec
xor
or
roll
inc
or
xchg
bound
adc
movsb
xor
xchg
ret
add
dec
jno
add
jp
push
ja
pop
scas
push
jne
rorb
adc
sarb
pop
cmp
test
or
pop
cmpl
dec
sbbl
rorb
xchg
adc
movsb
and
xchg
nop
mov
fcoml
dec
mov
imulb
pop
sti
pop
shll
rorb
sbb
jo
shr
sti
pop
sub
pop
les
add
cli
push
adc
and
in
push
mov
or
mov
dec
inc
jecxz
mov
aaa
mov
out
cmp
adc
imul
mov
cmp
stc
cld
sahf
jg
pop
cmp
push
mov
and
rclb
inc
sar
cmc
dec
xchg
movsb
notl
push
add
lods
dec
xchg
rcll
dec
xor
cmp
shrl
pop
cmp
xor
mov
test
inc
xchg
lods
mov
push
sbb
mov
leave
push
fwait
xchg
xchg
or
push
xchg
and
sbb
rcll
and
xor
xchg
rcrl
shll
and
sarl
lahf
xchg
mov
xor
push
xchg
and
out
mov
stos
dec
test
add
stos
sahf
sbb
and
sbbl
dec
sbb
fwait
mov
nop
inc
ret
mov
mov
xchg
outsb
jg
or
nop
cmp
add
repnz
std
or
arpl
cmp
push
mov
int
mov
out
call
cs
push
cmpsl
mov
test
dec
leave
cmp
adc
or
nop
cmpsl
inc
loope
icebp
push
movsb
xchg
add
and
sbb
sub
adc
mov
cmp
jne
fistpl
adc
adcb
xchg
mov
call
ljmp
add
and
ret
push
push
cmpsl
inc
pop
xor
mov
mov
mulb
stos
xlat
fwait
push
cltd
imul
aaa
mov
pop
bound
mov
lea
call
adc
call
mov
xchg
test
sub
push
pop
sbb
pop
dec
mov
shl
adc
inc
call
ret
mov
pop
sti
lcall
adc
xlat
ret
push
sub
int
icebp
in
add
adc
adc
mov
sbb
dec
movsb
repz
shlb
xchg
mov
add
cmp
scas
adc
and
sbb
and
mov
cmp
or
cmpsb
dec
mov
jb
mov
add
inc
push
addr16
adc
daa
cmp
jo
adc
inc
inc
push
loope
dec
addr16
mov
movsl
jb
es
and
rolb
or
or
and
mov
fwait
sbbb
or
inc
xor
cmp
jns
xor
and
sbb
iret
repz
out
sbb
ret
mov
repz
bound
sub
lcall
call
out
push
mov
pushf
pop
push
lods
push
mov
int3
loop
push
inc
push
push
sub
fcomip
cmp
push
nop
movsb
push
push
xchg
out
sahf
out
fs
inc
ss
out
cmpb
push
push
jl
out
sbb
repnz
repz
into
mov
ret
push
pop
into
sbb
incb
add
es
xor
out
loop
sbb
cmp
mov
sahf
out
lcall
cmp
out
call
sub
cmp
repz
pop
data16
iret
repz
nop
sahf
lods
mov
fdivp
fdivp
cmp
decb
ss
inc
pusha
inc
sbb
push
shr
jb
int3
ds
outsb
jle
sahf
mov
daa
rol
loop
idivb
imulb
push
cmp
aaa
je
repz
out
push
push
cmp
adc
mov
mov
push
jbe
add
lods
cmp
push
cwtl
cmpsl
insl
mov
pusha
insl
push
out
iret
dec
test
fidivs
sarl
jbe
les
test
mov
pop
js
cmpb
pop
adc
jo
lret
xor
pop
sub
inc
sub
lea
or
or
dec
push
dec
ja
jb
pop
cwtl
repnz
adc
icebp
push
push
push
ja
add
or
mov
xchg
cmp
push
jb
xor
xor
add
jae
in
test
mov
ss
mov
cmpsl
add
bound
add
push
xor
ss
les
mov
push
jl
push
dec
cmp
pop
or
das
sub
rol
mov
imul
lcall
xchg
filds
push
lods
subb
scas
pusha
mov
mull
pcmpeqd
movsl
jecxz
lds
or
and
push
mov
xchg
sub
jae
stos
outsl
fidivrl
or
pop
data16
add
mov
das
cmp
mov
jg
adc
clc
xchg
ret
je
pop
push
inc
add
arpl
push
dec
inc
aaa
mov
inc
push
inc
pop
inc
outsl
outsl
add
cltd
push
xchg
jb
inc
fisubs
das
fadds
push
sbb
jmp
ljmp
pop
aas
pop
jp
dec
imul
mov
jg
ret
jne
outsb
je
jecxz
inc
mov
xor
je
ss
outsl
jg
inc
inc
xor
sub
sub
sub
inc
inc
call
xor
xor
jge
xor
xor
inc
xor
iret
outsl
stos
xor
ss
xor
cmp
fdivl
cmp
xor
clc
adcl
inc
mov
insl
adc
lret
sets
cmp
mov
jo
adc
or
fidivrs
cmp
push
xor
or
xorl
cmp
aaa
adc
xor
inc
pop
and
enter
jl
inc
jo
pop
push
arpl
xor
fcomip
inc
push
dec
and
cmp
ss
pushf
xor
or
and
dec
dec
outsl
or
push
xchg
gs
add
insb
clc
mov
push
pop
inc
dec
hlt
push
mov
arpl
adc
push
sub
jae
inc
push
stc
mov
add
xor
sub
out
fldenv
sahf
cmp
in
mov
lods
insb
mov
movd
pushf
xlat
cmpsb
push
hlt
outsl
loope
aam
dec
jb
sub
icebp
sahf
adc
pop
pop
and
and
jo
outsl
xor
aam
lock
fsubrl
inc
je
push
push
ficompl
push
inc
mov
pop
int3
cmp
add
sbb
cmp
outsb
add
sub
mov
jmp
imul
arpl
insb
fwait
js
lock
xchg
and
outsb
ret
bound
or
or
bound
inc
xor
cmp
add
mov
inc
push
insb
rcrl
xor
pop
add
or
mov
and
arpl
stos
jnp
push
push
and
dec
popa
jae
and
push
shrl
imul
xsha256
cmpsb
push
imul
pusha
int
js
daa
scas
scas
je
dec
outsl
das
dec
fs
imul
push
pusha
or
and
fadds
movsl
xor
push
sbb
dec
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
rolb
in
roll
repz
ja
mov
push
shlb
outsb
mov
push
popa
imul
add
lret
bound
sbb
fdivl
mov
add
mov
and
push
push
or
pop
and
dec
loopne
push
repnz
inc
sbb
rolb
and
rcrb
add
push
jg
and
negb
push
and
xchg
pushf
add
sbb
push
add
les
push
or
add
sub
sbb
sub
add
add
out
adc
orb
or
cmp
adc
iret
push
adc
xchg
adc
push
sbb
sbb
sbb
dec
repz
call
sahf
imul
das
push
pop
nop
cld
and
movsl
stc
mov
cli
js
jns
stc
sahf
out
scas
jp
push
cld
fdivr
mov
out
sbb
stos
push
add
push
mov
mov
lcall
lds
xchg
bound
mov
inc
mov
jns
push
ds
cmp
popa
fcoms
adc
iret
sarl
or
cld
or
in
cmp
repz
les
jecxz
pushf
push
xchg
call
xor
mov
mov
jl
insb
push
sahf
pusha
pop
mov
cmpsl
cmp
repz
inc
inc
cmp
sahf
out
sahf
xor
sub
and
jns
out
sbb
adc
or
jl
out
add
cld
or
iret
repz
hlt
call
cmp
repz
nop
jo
xor
out
adc
pop
int3
mov
out
sahf
out
inc
sub
adc
repz
or
push
fcom
les
js
sub
jns
cmpsl
stc
aam
mov
aaa
ret
out
cld
add
call
pusha
and
repz
jl
cwtl
dec
cwtl
cmp
pop
and
and
lods
add
repz
movlps
mov
stos
faddl
add
adc
lret
sub
adc
add
adc
fidivrs
pop
push
inc
dec
cmp
les
and
mulb
add
pop
or
mov
xorb
push
jecxz
add
nop
gs
les
andl
cli
out
js
mov
mov
dec
les
ja
adc
jae
inc
push
jmp
sbbb
arpl
loop
stos
and
xor
lret
adc
adc
push
shll
add
mov
js
shrb
mov
iret
out
mov
andb
rolb
ret
jns
inc
push
pushl
rorl
add
movl
inc
mov
jnp
out
jnp
je
jae
insb
add
pop
stc
sbb
xor
int3
mov
push
je
imul
dec
pop
push
push
arpl
decl
outsl
mov
jo
push
adc
xor
jp
jo,pn
bound
pop
jne
scas
pusha
cmp
xor
mov
ja
filds
push
insb
das
inc
fucomp
adc
das
outsl
jl
mov
jns
add
mov
jg
das
cmp
sbb
loopne
xchg
loopne
sbb
push
test
rorb
add
in
test
mov
insb
test
jg
fs
pop
enter
aam
sub
ret
sete
pop
enter
data16
dec
and
cmpb
jbe
js
fcomps
popw
and
xlat
jns
in
fisubl
pop
rcr
xorb
inc
sti
cltd
ss
lcall
xor
push
test
adc
or
or
push
popf
push
xchg
push
aas
loope
lds
sbb
adc
mov
pop
xor
mov
daa
xchg
mov
daa
cmp
jg
enter
adc
jmp
adc
mov
iret
fcmovnbe
mov
insb
dec
mov
aas
jbe
in
cmpsb
insl
mov
jp
insb
adc
fs
fisubrl
xchg
dec
mov
jns,pn
adc
loopne
testl
enter
popf
push
dec
mov
xchg
or
lea
cmpsl
inc
test
jmp
add
inc
or
iret
je
dec
imul
xchg
sub
fmulp
les
lcall
scas
pop
push
and
gs
dec
dec
add
push
pop
test
dec
jae
outsl
ja
xor
jle
mov
xchg
push
sub
inc
xor
push
add
push
out
arpl
and
and
add
ja
push
inc
lods
push
mov
ljmp
mov
mov
inc
sbb
add
loopne
xor
mov
outsl
in
inc
add
insl
jo
dec
pop
fs
mov
push
imul
add
push
mov
cli
add
jae
push
inc
or
in
add
adc
jae
hlt
push
xchg
push
mov
dec
push
mov
aam
test
out
adc
cmp
and
and
sarl
repz
add
popa
orb
dec
add
int
dec
mov
test
dec
inc
push
mov
pop
das
xor
push
cmp
push
jo
jb
jns
imul
test
movsb
sbb
mov
adc
lods
clc
mov
add
sbb
dec
xchg
imul
sbb
dec
jnp
ja
inc
popa
jge
pop
pop
ja
and
pusha
inc
dec
enter
cmp
das
dec
cmp
push
inc
imul
inc
or
mov
mov
pop
add
cmp
push
inc
rorl
push
fbld
in
cmp
gs
cmp
add
subb
addr16
sbb
pop
lea
aaa
cs
scas
xchg
xchg
fs
and
leave
or
pop
movsb
inc
cmp
sub
fs
iret
mov
lahf
xor
nop
mov
mov
pushf
cltd
or
testb
gs
ds
dec
push
adc
jle
xor
mov
and
push
call
pop
adc
sub
xor
ret
mov
sub
inc
dec
push
jnp
adc
jne
aas
das
faddl
or
shrb
sbb
push
push
mov
jbe
xor
orb
fiaddl
xorl
cmc
rorl
pop
add
sub
and
arpl
and
ja
mov
xor
inc
push
outsl
xchg
mov
mov
dec
xchg
pop
or
roll
push
andb
xor
cmp
mov
les
mov
push
sub
push
rolb
insl
imul
jb
mov
fs
mov
mov
or
enter
inc
js
aaa
dec
inc
dec
pop
sub
add
inc
cmc
xchg
popa
push
and
sbb
inc
sbb
inc
mov
je
jmp
sbb
lcall
inc
jp
mov
sarb
jne
stos
iret
add
jo
add
dec
add
add
cmp
or
inc
pop
mov
sub
cs
sub
je
addb
adc
or
dec
pusha
push
jo
cmp
xor
jno
cmp
add
scas
rcrb
roll
in
xchg
cmpsl
ljmp
dec
imul
pop
cwtl
jnp
arpl
fcmove
pop
add
mov
dec
pop
lret
xchg
into
out
mov
add
outsl
inc
cmpsl
add
push
pop
pop
cmpsl
das
mov
imul
in
addb
push
and
jns
pop
push
fdivrs
cld
inc
jae
adc
sbb
je
ja
out
add
add
xor
xor
jl
and
adc
xor
pop
push
lods
mov
lods
pop
sarb
add
insb
sbb
lcall
das
sub
mov
xor
cmp
and
xor
fwait
jecxz
rclb
ficomps
mov
enter
push
popa
out
std
fwait
adc
xchg
and
icebp
jmp
or
aam
push
jecxz
adc
popf
divl
push
pop
add
cmp
aam
pop
add
or
jae
mov
add
fisttpl
or
pop
pop
push
insb
fsubrs
hlt
jns
sbbb
push
movntq
popf
cs
ja
icebp
pop
and
add
dec
pop
xor
jecxz
imull
test
push
mov
lods
pop
pop
add
in
shrb
dec
add
inc
les
imul
sti
imul
lods
sub
addr16
pusha
inc
inc
stos
ljmp
pop
hlt
mov
push
jo
or
and
mov
mov
sbb
fs
and
leave
mov
add
add
sbb
adc
adc
cmp
out
add
clc
out
lock
enter
repz
mov
lods
test
pop
mov
pushf
cwtl
xchg
nop
mov
jns
out
js
push
cmp
pop
push
inc
cmp
and
iret
repz
sbb
cld
in
lock
adc
call
mov
enter
cmp
repz
mov
repz
push
cmp
sub
sbb
iret
repz
or
cld
in
hlt
jns
out
in
in
int3
mov
lods
mov
mov
js
out
jns
fs
inc
sub
and
adc
repz
jmp
adc
inc
test
push
dec
pusha
arpl
pop
adc
push
roll
push
jmp
push
mov
daa
adc
or
cmp
out
testl
lock
push
leave
xchg
add
nop
dec
or
aaa
addr16
sarb
push
aaa
cpuid
push
push
push
imull
lret
jbe
add
pusha
pop
testb
push
mov
add
add
dec
add
push
addl
daa
inc
add
mov
dec
inc
aaa
inc
inc
jae
jecxz
mov
sahf
inc
xorb
add
out
les
dec
push
pop
jo
add
pop
add
in
cmp
adc
inc
pushf
push
and
outsb
jbe
xchg
dec
cmp
push
pop
cmpsl
lret
sub
mov
and
jbe
and
xchg
or
scas
lahf
fs
loop
xor
xor
ds
je
flds
xor
xchg
or
jae
pop
and
xor
rcrb
mov
sbb
cmp
inc
js
and
sub
or
and
pop
or
adc
pop
jne
popa
fadds
jae
popaw
insb
into
dec
pop
mov
mov
adc
push
sbb
jmp
push
inc
push
fcmovnu
aad
inc
add
inc
pop
pop
adc
fistps
and
aam
add
xor
xor
sbb
bound
loopne
sbb
pushl
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
pushl
sub
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
mov
adc
dec
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
lock
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lea
clc
aas
lock
idivl
or
add
and
dec
xor
xor
outsb
xor
popf
xor
xor
xor
jmp
xor
xor
xor
mov
xor
xor
xor
xor
push
decl
out
xor
xor
xor
xor
xor
xor
fidivl
decl
mov
les
fnsave
out
xor
mov
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
lods
aaa
mov
cmp
ljmp
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
ud0
cmp
cmp
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
filds
jle
cmp
jo
test
mov
aas
adc
xor
inc
shr
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
ljmp
pushl
aam
jmp
hlt
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
push
aaa
inc
aaa
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
hlt
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
adc
sbb
aas
inc
aas
pop
aas
ja
pusha
pop
decl
xor
pop
xor
push
aas
clc
jo
cltd
xor
xor
xor
xor
xor
xor
ret
call
cmpsb
push
xor
xor
lcall
clc
xor
cld
push
xor
test
mov
mov
nop
xor
out
in
xor
out
cli
pop
scas
clc
xor
cmp
pop
clc
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cs
das
mov
cmp
std
cmp
cmp
call
pop
sub
sbb
cmp
cmp
punpckhbw
cld
ds
fidivrl
jmp
xor
jg
and
cmp
ss
ss
xchg
cmp
cmp
lcall
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
ljmp
cmp
adc
dec
aas
push
mov
cmpb
aas
sarl
shlb
lret
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
incl
jg
xor
xor
xor
loop
xor
xor
xor
mov
xor
xor
scas
std
xor
cmpsb
data16
ss
std
pushl
cli
add
or
aaa
and
aaa
dec
aaa
dec
loope
pushl
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
mov
cmp
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
mov
cmp
cmp
inc
cmp
dec
cmp
popa
cmp
xchg
xchg
cmpb
cmp
push
stos
cmp
cmp
or
call
cmp
cmp
cmp
cmp
repnz
jg
mov
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
and
xor
cmp
pop
cmp
aas
mov
xchg
cmp
mov
jp
jg
cwtl
ds
ds
loope
jg
jecxz
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
jns
into
or
push
xor
insl
stos
aas
sbb
sahf
xchg
les
fidivl
in
pushl
pop
and
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
mov
jl
lock
xor
xor
xor
scas
jno
xchg
xor
xor
xor
mov
xor
xor
xor
mov
ret
aaa
xchg
call
xlat
xlat
aaa
fwait
sahf
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivl
mov
out
cmp
cmp
mov
shl
pop
fimull
nop
cmp
cmp
cmp
xchg
movsb
push
nop
sbb
xor
ljmp
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
pushl
shlb
ja
js
jge
cmp
cmp
cmp
cmp
cmp
pop
cmp
outsb
cmp
mov
call
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
xor
ja
xor
push
ss
fiadds
clc
cltd
aaa
mov
ret
aaa
jmp
repnz
or
lcall
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
jbe
xchg
cmp
pop
cmp
cmp
cmp
cld
cmp
mov
and
cmp
popf
mov
cmp
fdivrs
push
aas
jne
mov
or
pop
ss
mov
fwait
xor
xor
dec
or
repnz
aas
xor
divl
pop
xor
jg
or
xor
es
dec
ss
outsb
fcomip
lcall
notb
ss
in
and
cmp
cmp
jo
ljmp
cmp
orl
inc
pop
push
imul
cmc
add
jo
jne
test
mov
ret
cmp
dec
cmp
call
cmp
jae
aam
fnstsw
jecxz
imul
mov
cmp
cmpl
inc
cmp
cmp
inc
pop
mov
pop
and
push
cmpb
cmpsl
ds
ds
ret
ds
ds
sbb
addr16
loope
rcr
pop
pop
lds
xor
xor
incl
cld
xor
aad
out
cmp
or
xor
xor
xor
xor
xor
incl
xor
inc
ss
lcall
ds
add
xchg
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
mov
cmp
cmp
cmp
cmp
lock
pop
cmp
cmp
cmp
cmp
cmp
adc
clc
pushl
cmpl
cmp
cmp
adc
and
pusha
aas
cmpb
inc
mov
test
fdivrl
loop
out
out
pop
rclb
jg
mov
push
adc
xor
jae
cmp
jne
jg
sub
pushl
xchg
xor
xor
xor
pop
cld
xor
xor
shlb
ljmp
inc
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
test
enter
sarb
aam
in
ljmp
out
scas
xor
aaa
dec
test
das
into
cmp
inc
xor
xor
lcall
decb
lods
xor
mov
mov
xor
xor
cld
mov
xor
cmp
sub
sub
xor
icebp
decl
cmp
inc
cmp
cmp
cmp
mov
cmp
fidivs
cmp
add
mov
inc
aad
inc
lahf
push
mov
jl
cs
cmp
mov
cmp
cmp
mov
mov
call
dec
cld
push
add
pop
lods
ds
or
adc
sbb
and
and
sub
sub
jg
add
xor
cmp
inc
cmp
lock
cmp
pop
cmp
cmp
insb
cmp
je
ja
psubd
cmp
mov
mov
sub
xor
inc
pop
ljmp
dec
aas
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
xchg
jg
aas
fdivrs
loopne
clc
jbe
push
or
xor
pop
clc
cmpsl
pop
bound
clc
xor
xor
inc
xor
pushl
push
xor
xor
enter
outsb
ret
cmp
mov
sbb
inc
xor
andb
adc
cmpsb
and
fimuls
xor
ss
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
aaa
call
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
clc
pushl
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
cmp
inc
push
nop
aaa
xchg
aaa
cwtl
into
mov
mov
aaa
mov
mov
aaa
enter
shlb
aam
inc
bound
aaa
fcompl
in
out
adc
sub
aaa
hlt
xor
aaa
hlt
add
or
arpl
mov
cmp
out
mov
ret
jbe
mov
mov
cmp
das
ret
sahf
jl
cwtl
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
cmp
incl
pop
lcall
pushf
cmp
test
lods
cmp
ret
cmp
sarb
and
mov
add
stos
and
and
out
xchg
xchg
mov
jne
call
sahf
repnz
paddd
repnz
es
add
jmp
xorb
push
insl
es
icebp
addb
fistps
sub
add
dec
lret
push
sbbb
int
add
fisubrs
fsubs
pusha
cmp
inc
pmaxub
jae
xor
xor
inc
dec
add
or
int3
sub
sub
inc
sub
outsb
xchg
cmp
jnp
sbb
or
jns
add
add
pusha
lods
in
fisttps
adc
sub
dec
fists
inc
inc
and
mov
add
pop
sbb
push
sub
ja
xchg
cmpsl
mov
inc
xchg
pusha
invd
cmp
dec
into
stos
mov
les
or
push
nop
dec
cmp
and
xchg
sub
jae
dec
lods
ljmp
shl
jb
int
movb
in
push
test
and
sbb
jne
push
mov
int
cmc
or
mov
pop
sbbb
cmpsb
test
adc
fildl
mov
push
loopne
push
imul
aaa
adc
push
cmp
xor
push
pop
das
inc
xor
dec
pop
cltd
push
inc
mov
inc
mov
xchg
adc
cld
push
and
pop
adc
cmp
sbb
gs
orl
push
mov
push
in
fmuls
mov
sbb
sub
and
and
push
pop
sub
xor
jl
sbb
sbb
jg
nop
xor
sahf
je
cmp
outsb
imul
cpuid
imul
cmp
mov
xchg
add
inc
push
sub
or
xor
es
insb
outsb
and
or
jb
xor
inc
xchg
call
cmp
add
jne
in
cmp
cmp
sub
nop
add
add
jbe
xchg
xchg
add
adc
pusha
sbb
mov
inc
decb
sbbl
lret
mov
push
mov
out
or
nop
fisubs
inc
lea
push
push
pop
jb
cmpb
sbb
lcall
rclb
inc
push
add
rolb
inc
jp
push
push
call
or
movsw
xor
xor
or
aam
xor
mov
push
mov
adc
fisubrl
lahf
into
cmp
mov
mov
cmp
addb
xchg
frstor
push
call
or
xchg
push
aas
cmp
js
xor
sub
test
cmp
mov
add
out
push
or
ud0
das
loope
xchg
or
lock
mov
mov
cltd
mov
inc
and
shl
insl
lock
inc
jmp
lret
push
push
add
xor
movl
mov
mov
call
lods
jle
lock
cs
push
jl
push
lcall
xor
clc
add
pop
add
pop
dec
inc
push
jg
pop
add
dec
ja
fmuls
push
adc
add
push
xchg
mov
pop
push
lods
inc
es
dec
cld
sub
or
jge
mov
cmp
xchg
or
add
push
xchg
xor
xchg
mov
push
test
dec
mov
inc
pop
mov
loope
call
aad
mov
push
add
clc
mov
lea
push
xorb
addb
mov
pop
or
and
clc
xchg
test
cmp
ret
mov
das
add
pop
pop
or
sbb
dec
test
mov
or
mov
lret
pop
add
fwait
and
lods
popf
jnp
mov
adc
and
jmp
or
fisubs
mov
lock
jge
out
call
mov
sub
xor
xor
push
dec
push
rorb
push
mov
push
sbb
jmp
xor
mov
je
or
xchg
adc
imul
dec
adc
dec
or
mov
xchg
pop
incl
adc
push
gs
pop
pop
hlt
sub
rolb
sbb
push
push
adc
push
test
jl
adc
adc
xor
lea
je
rorl
call
push
push
fmuls
or
dec
in
push
mov
cmpsl
or
mov
or
or
mov
dec
ret
test
lret
lods
pop
lcall
cmp
or
in
cmp
sbb
out
idiv
add
js
dec
inc
stc
jbe
cmp
sub
popa
mov
pop
xor
aaa
fdivl
xchg
pop
mov
adc
and
pop
or
add
push
jno
fsts
jo
xlat
call
js
cwtl
add
mov
mov
add
add
mov
aas
adc
push
mov
and
adc
dec
and
int
es
lods
or
dec
or
adc
push
cmp
jmp
dec
add
pop
push
in
divl
lcall
sub
bound
push
movsl
test
push
pop
aam
jle
xchg
sub
mov
rcll
and
push
and
pop
xor
inc
adc
shlb
adc
sub
xor
adc
add
aaa
sbb
xor
pop
ja
xor
push
dec
xor
mov
or
pusha
orl
jmp
xor
leave
sbb
fwait
and
xor
sarb
ret
and
xor
inc
jmp
mov
cmp
bound
jae
add
je
mov
inc
or
xchg
inc
mov
orb
sarl
mov
cmp
test
stos
popf
test
pop
rorb
inc
jmp
and
or
xchg
rolb
mov
jp
inc
or
push
insl
lods
pop
andl
lcall
sub
lock
add
inc
mov
lahf
and
outsb
add
out
dec
mov
pushf
lods
fwait
cmp
mov
inc
call
shrb
xchg
bound
ljmp
lods
sbb
outsb
inc
aam
pop
pop
push
sbbl
jmp
sub
or
push
adc
dec
or
movl
ja
push
xchg
jnp
add
fsubrl
add
cmp
outsb
mov
out
scas
outsb
or
xchg
mov
or
pop
xchg
inc
jp
das
adc
pop
testb
mov
ret
cmovl
in
movlps
andl
outsb
dec
enter
psubsb
cwtl
adc
pop
cmp
sbb
call
adc
or
clc
or
push
mov
jnp
sub
bound
dec
mov
ss
mov
adc
mov
fcoml
dec
and
mov
adc
or
lret
xchg
jb
ja
sub
outsb
mov
nop
orb
dec
jo
sahf
jle
or
jmp
shrd
adc
inc
pop
call
loop
or
enter
inc
aam
inc
or
test
scas
push
call
je
and
sub
faddl
mov
test
adc
jno
xchg
call
push
add
sahf
sub
and
shll
insb
sub
jo
adc
mov
adcl
sbb
sub
sbb
ljmp
sbbl
pop
adc
jo
inc
lahf
sbb
add
sub
outsb
cmpsl
add
mov
or
in
or
sub
call
inc
out
in
sbb
sbb
inc
mov
cld
pop
mov
inc
call
dec
push
mov
shl
mov
and
mov
sub
add
ficoms
mov
adc
andb
ds
out
aaa
push
pop
sarb
pop
inc
rcll
mov
or
mov
xchg
dec
ret
xor
xchg
dec
ss
sbbb
popa
jae
mov
mov
enter
mov
cmp
mov
add
add
pop
add
and
out
fldlg2
aam
xchg
and
cmp
nop
nop
push
adc
popf
imull
movsb
rolb
hlt
xorl
xchg
sbb
dec
out
fisttpl
fs
pop
popf
out
sahf
push
dec
inc
cmp
ret
add
sahf
xlat
loopne
jmp
frstor
and
inc
pop
int3
and
fcmovnu
dec
jo
and
pop
nop
xor
call
push
jl
add
sub
pop
pop
and
push
outsb
push
pop
repz
push
fadds
loopne
mov
clc
add
push
fwait
popa
add
sub
push
jns
xor
inc
pop
cmpsl
scas
adc
cmpsl
in
out
jbe
add
mov
jns
sbb
sbb
xor
add
or
pusha
mov
pushf
or
sbb
hlt
xchg
adcb
jns
and
popa
add
or
mov
dec
out
mov
pusha
mov
cmp
mov
hlt
sub
xchg
sbb
hlt
test
lret
sub
cmpsl
ficoml
adcl
xor
sbb
jns
adc
sub
sub
sub
pop
push
xchg
add
sub
shll
sub
lret
dec
sub
sub
sub
sub
inc
push
sbb
sub
xchg
xor
jae
sub
sub
add
sub
imul
imul
xchg
sub
sub
and
lods
xchg
push
dec
neg
jp
loop
add
jo
xor
or
dec
sbb
push
aam
jp
xchg
adc
ret
sbb
jns
mov
and
subl
cmp
je
inc
fistl
push
jge
stc
push
scas
or
push
lret
rolb
ret
insb
push
sahf
sbb
mov
jle
or
adc
inc
adc
inc
psubsb
push
push
movsb
fwait
mov
rolb
call
xchg
sbb
out
inc
inc
sub
and
rolb
mov
inc
adc
ja
call
pop
and
je
inc
sub
rol
inc
jo
ds
lds
push
adc
pop
pop
xchg
in
nop
mov
inc
mov
xchg
pop
mov
cmp
shrd
inc
rol
add
outsb
and
and
inc
aas
and
ja
addb
test
inc
lds
je
addb
mov
cmp
cmp
and
mov
jmp
jb
sub
out
rcl
pop
mov
rclb
cltd
nop
sbbl
mov
sub
nop
add
pop
fisttpll
hlt
dec
sbb
fists
pop
mov
xchg
cmp
jns
mov
and
jns
pop
and
cmp
stos
mov
jge
xor
jns
lahf
dec
fcoms
daa
adc
mov
push
js
adc
and
xor
adc
test
mov
cmp
lcall
mov
or
data16
lock
mov
sbb
and
xchg
jns
andb
jbe
outsl
sbb
in
jns
sbb
daa
mov
adc
pusha
sub
sbb
dec
and
cmpb
sbb
imul
dec
jns
xchg
in
fwait
dec
jns
ljmp
icebp
sbb
mov
push
add
jp
lods
dec
aam
jne
and
shrb
xor
xor
mov
mov
clc
pop
aam
inc
inc
fcmovbe
imul
ja
pop
inc
push
fs
jne
fs
mov
inc
inc
test
call
les
inc
sbb
inc
outsb
imul
sub
push
push
dec
dec
mov
and
and
inc
fs
xchg
rol
pop
lidtl
enter
sbb
adc
loop
mov
inc
and
inc
mov
bound
aam
sub
scas
and
add
add
mov
and
inc
adc
pusha
mov
inc
inc
push
jne
fadds
fs
ja
jbe
push
scas
and
cwtl
ror
dec
call
call
add
daa
loopne
enter
inc
test
inc
xchg
pop
mov
lea
inc
sbb
mov
mov
xor
nop
jnp
in
mov
je
adcb
push
mov
inc
ret
mov
pop
test
mov
sbb
mov
adcl
or
mov
ret
mov
inc
push
jne
push
nop
inc
or
mov
sbb
dec
or
pop
ret
mov
pushf
mov
mov
adc
and
inc
movsb
dec
nop
out
inc
pop
sbb
sbb
aam
fcoms
ja
and
push
mov
sbb
icebp
addr16
nop
inc
pop
dec
ret
push
xorb
es
mov
mov
mov
dec
or
mov
inc
nop
outsb
bound
mov
dec
mov
shl
pusha
xorb
or
dec
nop
fimuls
adc
xchg
inc
xor
xchg
jae
pop
push
ds
cwtl
and
push
adc
not
pop
dec
nop
into
mov
cld
push
push
fcompl
xor
shl
mov
cltd
fs
sbb
xor
fs
inc
cmp
fs
sub
nop
dec
addr16
cmp
dec
xchg
dec
mov
or
movsb
mov
rorb
lock
mov
jo
aas
xor
fisubs
cmp
or
fnstcw
mov
pop
outsb
es
stos
jno
xchg
call
or
call
shlb
adc
std
jo
xorb
aam
cmovbe
outsl
mov
int3
jo
mov
test
inc
mov
jb
movsb
nop
scas
sub
sbb
push
shll
dec
into
aad
aad
cmp
dec
lahf
test
cmp
mov
mov
jae
addr16
jmp
inc
aad
lock
jl
enter
xor
pop
adcb
pop
xor
ffreep
call
jmp
sbb
xor
cmp
aad
inc
lahf
enter
inc
push
xor
inc
cmpsl
aad
cld
xchg
inc
push
aad
add
cmp
dec
lahf
sbb
or
add
cmpsb
daa
fisubs
fiadds
inc
push
push
mov
and
frstor
push
jo
ret
xor
add
je
or
jns
mov
das
mov
xchg
inc
add
out
mov
jne
cmp
fisttpll
pop
and
mov
mov
inc
roll
push
pop
xor
dec
inc
or
pop
out
and
sbb
lcall
and
push
mov
dec
jo
cmp
mov
add
push
and
in
push
shr
mov
fmull
shl
arpl
add
jnp
jecxz
sbb
mov
movb
jnp
enter
jp
pop
hlt
push
dec
loope
add
dec
cmp
lahf
call
enter
shl
data16
nop
jnp
rcll
out
pop
movsb
and
xchg
cmp
pop
jbe
fcoml
and
dec
xchg
push
jne
jb
xchg
xchg
dec
cs
adc
xor
adc
xchg
enter
roll
pop
dec
jge
rcrl
stc
loopne
mov
adc
xor
pop
or
pop
arpl
ret
pop
or
stc
or
push
mov
pop
stc
push
fdivs
mov
mov
push
stc
pop
pop
xor
aas
stc
pop
sub
xchg
mov
inc
jmp
icebp
push
stc
stc
xchg
lods
xor
call
inc
ret
or
xchg
call
mov
adc
and
jns
fisttpll
push
repnz
inc
clc
adc
frstor
sbbl
stc
sub
xor
and
fnstsw
dec
pop
xchg
inc
icebp
fmull
sub
mov
rol
xchg
jno
xchg
jmp
jmp
shrb
mov
shrb
mov
xchg
add
fcmovnu
fisttpl
enter
add
push
adc
aas
mov
mov
and
movsb
addb
sbb
cmp
add
iret
aam
sub
scas
outsl
adc
inc
adc
sbb
jp
call
xor
ret
xor
mov
mov
mov
add
cmc
sub
out
mov
pop
jmp
sbb
ret
call
inc
pop
add
dec
mov
hlt
je
adc
adc
ret
lahf
and
imul
js
jl
subb
fs
sarl
xor
aam
ss
and
shl
lods
in
lock
mov
xchg
rol
aad
xchg
fldl
xchg
scas
sarb
mov
push
lret
shll
or
imul
sbb
pop
pushf
mov
divl
or
in
imul
stc
cmpsb
jecxz
add
add
sub
sbb
ja
adc
fld
jne
xchg
adc
and
push
pusha
or
adc
xchg
nop
lods
test
pop
cmp
pusha
xor
push
push
test
pusha
sub
cmp
xor
daa
pop
dec
in
xchg
pop
mov
loop
adc
push
fdivrs
xorl
adc
repz
in
xchg
adc
pop
mov
mov
xor
mov
jo
adc
ret
push
adc
adc
popa
xor
adcb
popa
xor
adcb
test
adcb
into
pop
cmpb
aam
fldcw
in
and
pushf
stos
pop
rcrl
dec
xor
fst
add
mov
or
movsl
shrb
mov
rolb
push
adc
dec
adc
add
bound
adc
ss
pop
push
pop
adc
mov
hlt
cwtl
add
adc
shrb
fiadds
push
xchg
outsb
fcmove
adc
das
mov
xchg
adc
mov
sbb
xchg
cmp
outsb
sub
pop
adc
js
shrb
xor
cmp
jmp
sub
or
dec
movsl
movsl
adc
pop
cmp
mov
adc
int3
mov
sub
mov
out
sub
shrb
out
int3
or
fcoml
bound
fidivs
dec
inc
mov
push
mov
jne
dec
add
inc
sarl
stos
push
jne
jb
sbbb
imul
and
or
ss
in
ds
push
inc
dec
inc
aaa
push
xchg
out
and
dec
in
ljmp
sub
je
dec
xor
push
aam
dec
sarb
or
out
sti
fs
lcall
jnp
dec
pop
insb
push
add
dec
dec
out
fldcw
mov
mov
jne
mov
xor
jmp
lds
lea
les
test
vpshufhw
mov
sbb
nop
lret
pop
adc
push
aaa
test
inc
loopne
jno
cmp
dec
mov
pop
addr16
mov
loop
xor
frstor
pop
aam
ljmp
in
lods
adc
test
call
inc
fst
cmp
push
ja
loop
fcoml
cmpsb
push
mov
je
mov
iret
pop
inc
insl
xor
xchg
in
lods
cmpb
and
pop
push
xchg
sub
push
je
pop
pop
test
outsl
push
pop
pop
ljmp
pop
cmpsl
rorl
sbb
mov
sbb
pop
mov
repz
mov
pop
loopne
jne
lods
sub
sbbb
sbb
mov
imul
aaa
out
jns
adc
in
mov
daa
push
frstor
xchg
outsb
push
pop
imul
or
enter
mov
loopne
fdivrl
and
fcompl
sbb
rorb
and
pop
jle
add
pop
pop
dec
or
iret
rorb
shrb
inc
addb
pop
data16
insb
pop
sub
sbb
jmp
adc
ret
inc
jecxz
in
dec
leave
in
loopne
loopne
jno
dec
xchg
leave
add
or
int3
stc
imul
out
dec
repnz
or
repnz
bound
repnz
dec
mov
xor
sub
adc
or
lock
call
mov
pop
pop
enter
mov
pop
pop
pop
test
mov
mov
mov
and
cmp
push
pop
mov
sbb
dec
mov
enter
sub
in
pop
cmp
mov
jb
sbbl
fstpt
dec
push
lds
sbb
and
mov
mov
cmpb
cmp
inc
pop
mov
sbbl
ds
push
jb
mov
and
cmp
add
stc
mov
sbb
jecxz
fdivrs
jb
mov
in
pop
cmp
mov
cmpb
dec
push
pop
mov
sbb
and
cmp
test
fcmovne
das
inc
or
mov
lcall
pop
orb
or
jle
mov
or
inc
cld
xchg
mov
dec
lcall
add
sbb
imul
data16
or
and
inc
dec
lcall
movsb
sbb
imul
xchg
out
stc
mov
inc
dec
lcall
cmp
cs
ret
mov
dec
in
xchg
subl
add
add
mov
or
aad
test
movsb
rol
in
add
or
adc
add
sbb
add
es
sbb
xchg
rcrb
stc
and
mov
cmp
and
and
push
ret
jns
dec
enter
mov
hlt
imul
pop
sti
testl
insb
or
pop
scas
aas
call
sub
adc
sub
add
mov
jg
add
dec
mov
add
add
inc
inc
adcb
add
add
sub
test
cmp
outsl
jo
rcr
into
outsl
mov
adc
inc
xor
pop
sbb
add
pop
outsl
jmp
cmp
outsl
in
mov
xchg
push
mov
out
movsl
pop
hlt
outsl
adc
mov
lea
outsl
sub
xor
leave
push
adc
lods
mov
outsl
mov
xchg
test
mov
add
dec
and
jbe
leave
push
shrb
fbstp
mov
out
adc
sub
leave
sarb
jmp
mov
outsl
cmpsb
sub
jle
sub
jmp
outsl
outsb
pop
enter
outsl
pop
and
sbb
outsl
xor
push
outsl
int3
dec
mov
inc
fs
shll
outsl
inc
xchg
inc
mov
jmp
pop
addr16
and
and
inc
cs
or
outsl
mov
outsl
and
scas
xor
mov
xor
shlb
mov
sbb
andb
shrl
outsl
inc
xchg
adc
lret
fiaddl
out
mov
int3
xchg
test
subb
fs
mov
sub
cmp
in
enter
cmp
lock
pop
sbb
into
xchg
outsl
nop
and
jbe
aam
call
and
add
outsl
pop
fs
stos
push
cmpl
outsl
sub
jl
je
outsl
cmp
fs
add
push
dec
pop
hlt
push
xchg
nop
outsl
xor
lock
or
ss
int3
fdiv
loopne
pusha
divl
add
cld
sub
cmpsl
dec
xchg
cmp
outsl
mov
jle
xchg
push
outsb
and
fs
shrb
xchg
xchg
fidivs
outsl
dec
sbb
inc
sbb
fs
outsl
cmp
fldcw
loope
sbb
xchg
add
inc
xchg
sbb
lods
adc
bound
sbb
enter
xlat
mov
clc
inc
inc
call
ja
outsl
dec
sbb
rorb
outsl
pop
lods
nop
movsl
ret
jno
and
cld
outsl
dec
aaa
mov
xchg
in
cmp
outsl
cmp
jecxz
nop
movsl
outsl
in
fs
jmp
cmp
outsl
add
jmp
xchg
add
cmp
cmp
insl
mov
popa
nop
test
outsl
pop
sbb
movsl
xchg
gs
cmp
jns
std
outsl
jle
sub
mov
sbb
or
outsl
popl
scas
push
pop
outsl
sub
push
cmp
sbb
jbe
push
fs
pop
mov
lock
xchg
sahf
jg
xchg
xor
andl
sbb
js
cmp
out
xor
shrb
xchg
outsl
and
sbb
jne
outsl
cmc
or
outsl
shrb
pop
jns
and
dec
sbb
dec
push
xor
addb
inc
test
ljmp
cltd
loopne
and
dec
xchg
push
shrl
je
stos
inc
outsl
repnz
rcrb
and
rcrb
xchg
outsl
jb
std
mov
sub
fidivs
adcb
aad
out
inc
outsl
jne
and
jne
shrb
sahf
je
nop
movsl
outsl
nop
mov
pop
int
outsl
or
and
dec
jne
xchg
add
outsl
popf
sahf
callw
and
test
pop
and
loopne
and
dec
mov
inc
add
outsl
lahf
mov
outsl
pop
ret
inc
xchg
outsl
stc
adc
mov
xor
je
mov
sbb
xchg
repnz
mov
inc
xchg
outsb
test
jge
dec
add
outsl
fimuls
pop
jmp
outsl
addr16
mov
loope
in
adc
clc
jb
or
out
lds
dec
xlat
lods
outsl
inc
xchg
adc
shl
sub
push
mov
data16
outsl
xchg
and
outsb
dec
cmp
je
xchg
out
inc
test
rolb
and
sahf
orl
int
into
dec
jb
cmp
and
xchg
out
push
dec
mov
add
test
jmp
or
mov
dec
and
inc
mov
and
xor
orb
xchg
inc
dec
mov
psubusw
jmp
dec
fwait
enter
call
movsb
mov
dec
shlb
pop
outsb
mov
lcall
cmp
push
sahf
data16
cwtl
adc
repnz
lods
popf
in
mov
xor
clc
pop
add
andb
sub
cltd
push
pusha
sub
jp
and
add
movl
sbb
movb
push
stc
mov
xor
shrb
js
mov
cmp
adc
pop
sbb
cmp
repz
pusha
jo
aam
jns
iret
in
add
adc
push
sahf
out
sahf
bound
mov
mov
test
push
xor
jb
repz
test
sahf
cmpsl
stc
cmp
or
push
sub
jns
out
dec
pop
data16
out
sahf
out
scas
loopne
iret
repz
push
stos
and
push
pusha
cmp
repz
jbe
xchg
movsb
xchg
nop
mov
dec
out
repz
repnz
lea
adc
addl
adc
push
int
xor
add
iret
xor
movsb
sbb
push
fcoms
lcall
push
outsb
cmp
jl
fwait
iret
jnp
push
clc
mov
push
fwait
shrb
unpcklps
push
pop
sarb
add
mov
mov
add
xchg
out
adc
das
jns
cmp
push
sbb
sbb
cmp
repz
or
cs
sahf
mov
imul
and
js
jns
out
jns
jp
orl
adc
add
xor
inc
push
pushf
addr16
mov
mov
aas
iret
xor
push
push
xchg
or
xor
lcall
cld
xchg
hlt
jns
out
call
out
sahf
out
sarb
mov
mov
out
xchg
nop
mov
out
jl
je
sahf
out
sahf
insb
push
jns
out
push
push
dec
dec
inc
out
sahf
out
cmp
xor
lahf
out
sahf
sub
sbb
or
nop
cmp
repz
fadd
movsb
test
cmp
and
inc
popl
sahf
out
sahf
shlb
sahf
out
inc
xor
clc
mov
cmp
shr
int3
lods
test
ds
xor
in
enter
jl
js
xor
push
andb
out
in
mov
mov
inc
subl
mov
test
dec
push
mov
adc
sub
cltd
shl
push
aaa
xor
push
push
add
sub
fadds
xor
aam
sub
push
xor
cltd
nop
fstps
adc
js,pn
test
xor
out
fisubs
or
cmpsl
or
iret
sbb
daa
add
insb
cmpsb
loope
and
aas
xchg
add
jnp
ret
daa
and
push
jbe
jne
mov
inc
add
inc
xor
iret
test
mov
fiaddl
jg
das
xor
inc
push
pop
pop
addr16
or
adc
ficompl
sbb
mov
xor
test
adc
lea
jl
push
ja
aas
pop
enter
daa
shlb
fsubrs
inc
pop
es
into
jge
xor
cmp
jbe
loopne
pop
pop
inc
fistps
out
aas
sbb
popf
sub
sbb
jg
mov
mov
aas
test
cmp
test
jo
fwait
cmp
push
fsubl
inc
pushf
mov
fs
ljmp
cmp
or
unpcklps
lods
pop
xchg
xchg
cmp
clc
data16
cwtl
das
les
xchg
nop
imul
xchg
jne
mov
push
insl
sbb
loopne
adc
aam
adc
in
in
sbb
in
push
mov
sti
fiadds
iret
cmpsl
cmp
jbe
ud2
jno
into
mov
jno
push
xchg
movsl
add
dec
xlat
out
mov
das
pop
mov
jbe
mov
push
adc
jbe
cltd
mov
daa
add
icebp
cltd
scas
cld
andb
mov
xchg
cmp
cmp
jno
or
outsl
jne
gs
in
push
push
arpl
add
shrb
mov
and
xor
inc
fsub
pop
or
xor
xor
xor
gs
cmp
inc
pop
sub
mov
scas
adc
mov
mov
and
push
pop
sub
mov
or
rcr
mov
sub
xchg
bound
sbb
popa
sub
mov
push
mov
sbb
imul
and
mov
sbb
sbbb
mov
mov
mov
sub
jae
movb
mov
sbb
rolb
jecxz
mov
subb
mov
mov
xlat
push
imul
inc
sbb
and
adcb
sub
dec
mov
mov
in
mov
add
jbe
aad
push
jno
dec
mov
sbb
roll
pop
push
or
xchg
idivb
out
push
pushf
cwtl
xchg
nop
mov
jns
out
jl
push
mov
inc
cmp
repz
repz
sub
and
repz
and
adc
iret
jnp
fwait
xchg
hlt
xchg
in
push
in
cmp
repz
mov
cmp
repz
mov
ficoms
push
fs
push
repz
cmp
and
cmp
cmp
add
in
xchg
push
enter
cmp
repz
mov
cmp
pop
jo
pop
mov
cmp
push
adc
sahf
out
add
xchg
loopne
mov
mov
xchg
insb
pop
adc
inc
sbb
mov
orb
push
inc
test
loope
jo
lock
xor
and
enter
rcrl
das
or
fs
rol
add
push
cmp
adc
adc
call
outsb
pop
call
jg
adc
outsb
add
pop
enter
pop
pop
push
xchg
outsb
stos
lcall
cs
ret
daa
mov
mov
aas
iret
push
or
xchg
mov
incl
adc
add
add
pop
xor
mov
mov
ljmp
dec
jnp
iret
xor
xor
sahf
xor
jecxz
xor
xor
xor
aaa
fbstp
inc
sbb
shlb
icebp
popf
xor
fistpll
sti
cmp
cmp
notb
cmp
bound
stos
mov
cmp
data16
pop
sahf
fdivrs
bound
cmp
xchg
jg
mov
lahf
cmp
mov
and
pop
ds
mov
mov
aas
fs
imul
aas
jecxz
call
push
xor
sub
jecxz
inc
inc
xor
mov
pop
push
xor
push
shl
loope
mov
fs
out
xor
repnz
in
jg
xor
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
jecxz
xchg
xor
cli
xor
xor
inc
filds
xor
jmp
or
xor
incl
jg
xor
xor
xor
xorb
xor
jecxz
in
repnz
ss
xor
xor
xor
xor
xor
fists
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
and
pushl
xorl
out
push
sbb
aaa
enter
cmp
insb
cmp
or
jbe
cmp
sbb
stos
popa
cld
cmp
and
and
sub
xor
jp
mov
incl
mov
repnz
cmp
pop
xchg
sbb
dec
cmp
test
pop
xor
cmp
adc
filds
dec
cmp
cmp
cmp
inc
idivb
cmp
cmp
sbb
xor
cmp
xchg
cmp
icebp
ljmp
cmp
ds
ds
ds
cmp
dec
xchg
mov
movsl
imul
and
inc
xor
xchg
lock
sbb
jle
xor
adc
and
lret
dec
xor
aam
fimull
xor
jecxz
popa
cld
xor
cmpsl
repz
maxps
outsl
test
lret
push
add
clc
sub
mov
aaa
in
decl
xchg
sub
cmp
xor
clc
xchg
js
jle
xchg
test
push
push
mov
mov
ret
adc
js
into
in
adc
push
xchg
cmp
not
cmp
cmp
cmp
pop
jle
push
xor
jnp
subb
cmp
cmp
adc
cmp
mov
cmp
cmp
ja
clc
jmp
lock
ljmp
sub
outsl
or
jp
insb
cmp
cmp
cmp
cmp
cmp
sbb
mov
and
cmp
push
ds
ds
clc
xchg
ljmp
or
adc
and
dec
aas
push
aas
or
mov
xor
aaa
mov
fidivl
test
clc
xor
mov
daa
loop
jg
mov
test
es
cmc
xor
xor
sar
cmpsb
pop
popa
data16
xor
mov
test
inc
mov
cli
xor
adc
ja
loope
xor
aaa
jnp
test
or
add
or
cmp
mov
sbb
inc
sbbb
cld
jo
cmp
xchg
cmp
xor
sub
dec
sahf
inc
cmp
mov
mov
pop
shll
nop
icebp
cmp
outsl
ss
sub
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
jl
push
ret
scas
push
addr16
cmpb
clc
cmp
cmp
cmp
cmp
call
sbb
aas
sub
pushf
cmp
jo
xchg
inc
jecxz
ret
shrl
xor
lock
xor
mov
loop
pop
push
cmpsb
xor
pop
and
mov
icebp
add
xor
xor
jno
jns
mov
out
push
adc
sbb
das
ss
mov
mov
pop
or
inc
aaa
pop
dec
pop
cmp
jg
mov
fdivp
cmp
cmp
cmp
and
jg
cmp
jo
jg
cmpsb
cmp
cmp
cmp
test
lahf
cmp
ljmp
aas
loope
pusha
add
filds
lahf
sbb
sub
cmp
xor
test
xchg
xchg
mov
int
fbstp
icebp
push
push
mov
inc
push
push
mov
jecxz
jge
hlt
xor
ss
aaa
and
lcall
sarl
icebp
cmp
cmp
cmp
scas
in
cli
and
xor
jo
mov
adc
outsb
and
lock
xchg
into
sub
cmp
jb
lret
sub
cmp
cmp
or
fwait
popa
sbb
or
adc
and
clc
loope
xor
xor
popa
jl
nop
sbb
or
pop
mov
rcrl
ret
sub
movsb
jle
mov
in
sbb
xor
push
enter
add
stc
int3
out
or
pusha
scas
push
jo
js
jl
nop
xor
mov
adc
shlb
add
les
xor
adc
sub
int
or
pop
push
cld
adc
xor
xor
adc
push
pop
xor
inc
mov
cmp
push
xor
pop
mov
xor
insb
push
je
add
nop
xor
fs
xchg
xor
xor
shll
mov
ret
shl
adc
int
xor
clc
lods
divb
je
sub
nop
call
add
jle
jp
sarb
xor
push
mov
mov
int3
xor
loopne
inc
xchg
xor
mov
mov
fmull
out
rcrl
out
fsubrs
push
mov
xor
xor
xchg
mov
clc
cwtl
xor
xor
jnp
loop
sarl
cmp
pusha
push
xor
cwtl
movsb
orl
push
enter
pop
stos
sbb
pop
aam
sbb
pop
faddl
in
in
xor
dec
xor
data16
and
add
sub
xor
jb
push
fstps
repz
cld
cmp
inc
pop
pop
sbb
xchg
dec
xchg
push
lcall
push
xor
xor
jp
xor
xor
xor
xor
xor
xor
xchg
sub
rcrb
loopne
loopne
and
test
xchg
pop
inc
xor
xlat
mov
and
adc
and
jo
nop
ljmp
scas
and
adc
fdivr
add
inc
dec
inc
adc
dec
cmp
movsb
add
add
add
add
add
or
pop
pop
push
or
or
or
or
sbb
fcomi
or
adc
adc
push
adc
or
pop
sbb
adc
adc
adc
add
push
lods
fnsave
pop
adc
xor
pop
cld
inc
add
or
xchg
add
adc
add
cmc
add
inc
mov
jb
dec
mov
jge
decl
add
xor
adc
pop
and
xor
inc
mov
adc
shl
and
bound
js
or
pop
sub
sbb
or
bound
push
cmpsl
xchg
adc
lea
popa
jecxz
and
inc
or
adcb
rcrl
xchg
scas
pushf
pop
add
add
add
cmp
cmp
incl
lods
push
adc
pop
popa
jno
and
adc
inc
repz
lods
or
xor
adc
sbb
loope
icebp
mov
mov
add
or
push
xor
js
adc
std
or
aaa
cld
pop
adc
adc
sbb
cli
and
mov
inc
jnp
ljmp
sbb
and
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
inc
adc
push
stc
or
xchg
jg
or
push
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
call
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
sbb
add
mov
pop
pop
mov
popl
movb
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
ljmp
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
cmpsb
jp
push
out
or
cld
push
pushl
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
call
mov
jmp
sbb
add
xchg
lods
mov
out
pop
jb
mov
or
push
mov
lcall
int
inc
fwait
sbbb
mov
dec
jp
push
gs
idivb
jg
hlt
push
add
stc
loope
mov
sar
andl
fstp
adc
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
lcall
icebp
paddb
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
cmpl
fbld
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
hlt
es
or
icebp
aas
std
cli
push
push
jg
je
idivl
cmp
sub
inc
scas
inc
mov
jg
cs
pushl
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
mov
lcall
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
push
xor
jmp
lcall
pop
hlt
lret
movsb
add
filds
lea
jg
gs
std
xorb
jg
das
sar
aad
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
das
test
mov
jb
and
insl
add
jmp
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
ljmp
sbb
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
mov
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
jg
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
adc
xchg
and
push
push
jo
pusha
imul
add
mov
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
pushl
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
lock
cmp
fmull
enter
jecxz
scas
incl
in
pop
mov
sub
mov
dec
incb
fisubrl
loopne
sti
lds
mov
or
cld
inc
or
bound
repnz
jg
mov
aad
jbe
test
mov
mov
iret
push
out
jbe
push
sbb
stos
icebp
pop
incb
jno
outsl
sti
ljmp
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
mov
sar
xorl
push
fisubrl
imul
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
ret
das
clc
push
sub
push
and
mov
adc
inc
aas
push
ret
mov
pop
pop
inc
jb
fistpl
adc
call
mov
pop
nop
mov
inc
sti
arpl
daa
std
loope
jmp
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
insb
icebp
decl
fsubr
fistps
lds
fidivrl
jg
stos
cld
lcall
pop
add
dec
mov
sub
jge
xor
lahf
les
paddsw
jl
xor
inc
and
mov
icebp
call
in
stc
mov
lahf
outsl
int3
push
sbb
in
decl
pop
test
bound
pop
outsl
xchg
incl
cld
cmovbe
popa
push
test
jbe
outsb
hlt
sti
fdiv
ljmp
daa
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
jmp
stos
pop
jg
pop
shrb
rcl
jg
adc
xor
pop
mov
call
fisttpl
sub
jmp
lea
jp
jnp
jecxz
call
inc
lds
push
pop
adc
imul
or
inc
pop
xor
sar
decl
sbb
xor
subb
iret
mov
lock
inc
cmpsl
enter
mov
fwait
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
add
insb
test
aas
repz
or
mov
mov
in
jmp
out
sbb
aaa
clc
push
std
call
jl
icebp
fs
mov
out
jne
or
cmc
mov
push
mov
fimuls
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
outsb
cli
fucomi
pop
or
or
dec
ss
fidivrs
leave
inc
lods
movsb
or
repnz
mov
aad
pop
and
imul
cmpsl
lret
pop
in
cmp
jmp
lock
adc
jmp
hlt
dec
mov
jg
mov
aas
mov
jg
mov
incl
fmull
addr16
sbb
cld
daa
jp
std
adc
mov
fildl
or
mov
ret
nop
cmp
das
incb
add
lock
pop
pop
div
cld
idivl
fs
xlat
and
loope
jae
jmp
shrl
je
jge
idivb
mov
add
out
icebp
pop
and
mov
loope
mov
cmpsl
popf
sti
mov
test
ja
push
xchg
outsl
das
jge
outsl
ss
call
cmc
pop
mov
dec
push
adc
mov
and
ret
or
out
cltd
cmp
add
incl
cmp
inc
add
fs
cmpsb
loop
pop
aaa
std
fisttps
jnp
cmp
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
into
icebp
mov
jg
mov
fidivrl
mov
pop
clc
loope
loope
mov
lahf
xor
add
xlat
rcll
je
xchg
fldenv
iret
fdivrl
and
lcall
decb
jo
pop
gs
adc
jg
pop
out
jg
jno
ret
cmpsb
stos
movsb
and
arpl
mov
out
inc
push
dec
jge
pop
clc
xchg
cmpsb
std
ljmp
ds
inc
mov
in
sbb
xchg
imul
pop
inc
test
outsl
jmp
std
mov
inc
add
faddl
mov
or
lcall
imul
pop
stc
push
dec
out
fstpt
mov
add
popf
pop
stos
adcb
fsts
dec
jne
and
orb
pop
add
push
sti
pop
inc
add
or
push
push
nop
mov
aas
fiaddl
add
xlat
fcompl
imul
pushl
push
in
sbb
and
inc
pusha
jo
pop
xchg
inc
scas
pop
xchg
js
push
cmp
decl
cmp
pop
rorl
rorl
or
adc
sbb
sub
mov
jmp
call
or
and
mov
pop
xchg
mov
cld
and
scas
cld
mov
out
icebp
daa
test
cs
sbb
push
outsl
loopne
jne
cld
test
jg
pusha
and
xor
xchg
mov
xchg
decl
in
pop
mov
dec
movsl
push
lds
xchg
cld
repz
adc
int3
push
fs
push
jb
aad
xor
call
mov
push
dec
or
adc
pop
dec
lcall
add
mov
jl
inc
jbe
popf
es
dec
or
stos
mov
xchg
sbb
xorb
push
and
test
outsl
fwait
roll
test
mov
ret
xor
mov
dec
pop
jecxz
xchg
incl
push
sub
mov
addr16
in
xchg
xor
loopne
test
mov
andb
push
pushl
jp
pop
cmp
sbb
cmpsb
jo
adc
sub
in
std
cmp
inc
adc
or
pushl
outsb
pushf
dec
lret
cmp
xchg
subl
cmp
cmp
dec
repnz
adc
dec
int3
fcomip
lcall
xchg
or
xor
sbb
aas
sar
push
mov
mov
aam
mov
int
fildl
outsb
sub
decl
push
daa
inc
lahf
pop
ret
xchg
shl
xorl
nop
pop
jo
lea
repz
lock
and
incl
or
nop
loopne
test
xor
int3
cs
sarb
pop
repnz
std
mov
insb
pop
ret
inc
movb
das
cmc
aam
sub
adc
xor
jecxz
inc
push
push
xchg
aaa
push
jo
bound
bound
jmp
jecxz
mov
jmp
mov
add
aas
mov
add
pop
inc
lcall
call
jmp
mov
test
lea
cmpsl
dec
sbbb
insl
filds
movl
rorl
je
pushf
arpl
loopne
sbb
mov
sti
mov
sbb
mov
xor
cmp
pop
lock
and
aam
mov
pusha
cmp
sub
lret
jo
mov
incl
daa
cli
rorl
cmp
out
xor
into
lret
ja
mov
or
or
clc
adc
mov
imull
jnp
and
jo
and
int3
loop
mov
in
add
and
inc
xchg
incl
fisubl
sub
add
lret
adc
xchg
push
pop
repz
mov
jns
das
add
call
outsl
nop
or
add
fs
psubq
and
pop
nop
xor
mov
into
jmp
leave
mov
dec
fsubl
jle
mov
add
shll
dec
or
or
scas
adc
decl
add
iret
inc
fnstcw
sub
mov
pop
jle
mov
test
dec
jbe
icebp
nop
repnz
imul
push
int3
jns
lcall
daa
jl
das
xor
cmp
cld
jge
in
push
ds
fadds
mov
cld
xor
call
fisubs
xlat
push
sbb
sahf
data16
add
lcall
out
add
fidivrl
xchg
mov
lds
data16
mov
xor
dec
movsl
lea
inc
mov
dec
cwtl
hlt
outsb
rcr
pop
test
and
inc
ret
popl
lods
mov
add
call
mov
sar
call
arpl
pop
sbbb
jmp
inc
sub
sub
push
and
dec
lret
jnp
pop
pusha
or
inc
mov
push
mov
insb
rcr
xchg
sub
lcall
sbb
iret
jp
and
fwait
inc
repnz
mov
out
ds
movsb
mov
add
jb
sbb
int3
aaa
cmp
ljmp
cmp
sahf
dec
sub
cli
mov
in
aas
mov
call
cmpb
movsb
stc
mov
les
cmp
lret
adc
sub
repnz
pop
adc
mov
stos
xor
fsubp
mov
sti
or
inc
push
inc
push
cmp
sbb
filds
out
dec
xor
ss
jle
in
jno
cli
cmp
dec
jmp
int
pop
fwait
mov
mov
jg
sbb
xchg
jl
lea
or
mov
adc
outsb
xor
decl
add
repz
test
pop
bound
ja
adc
imull
fisttps
xchg
push
dec
adc
jmp
sbb
test
push
sub
adcb
movsb
decl
jg
mov
push
hlt
aas
enter
rcrl
mov
push
jl
mov
xchg
test
push
mov
xorb
push
sahf
adc
lcall
insl
lods
clc
jo
cmp
push
push
add
call
mov
and
xchg
out
push
dec
push
add
xchg
ljmp
xchg
jnp
xchg
outsb
fmull
pop
adc
xorl
scas
ljmp
gs
and
andb
add
add
jne
push
push
nop
incl
and
leave
fdivs
sub
add
jmp
das
mov
cmp
inc
mov
incl
dec
imul
inc
idiv
sub
mov
cmp
addr16
sub
lret
sar
lcall
lea
imul
add
xchg
inc
and
movsb
ljmp
in
addl
out
pop
jl
sbb
mov
mov
sub
mov
iret
test
stc
sete
xchg
rolb
xchg
inc
out
lahf
add
jo
pop
or
dec
iret
sub
xor
sub
mov
mov
pop
inc
xchg
mov
clc
ja
or
fwait
insb
ja
cmc
pop
cmp
push
sar
lcall
add
cmpsl
cli
fs
insl
inc
aam
ret
pop
or
ds
or
push
ljmp
clc
cltd
and
mov
lcall
outsb
and
dec
repnz
les
fadds
push
pop
ret
jae
call
inc
es
in
sahf
mov
ljmp
clc
frstor
adc
push
sbb
mov
jecxz
pop
cld
push
lahf
mov
jne
arpl
pop
lcall
int3
lock
pusha
sub
mulb
push
mov
pop
inc
out
loopne
std
cmp
add
decl
push
dec
mov
xor
sbb
sbb
push
xchg
xchg
push
mov
xchg
pop
repnz
push
dec
and
call
pop
add
ljmp
add
call
icebp
arpl
and
movsb
mov
sahf
mov
xlat
pop
pop
cmp
out
cmpsb
add
stos
jmp
inc
repnz
mov
jno
iret
push
mov
mov
push
mov
data16
out
push
incl
outsb
lods
outsl
dec
ds
ljmp
add
push
sub
mov
lcall
out
bnd
jmp
ja
mov
and
loop
mov
jmp
out
sbb
sub
mov
cmpb
call
or
outsl
iret
mov
mov
mov
aad
lock
xor
out
ss
test
decl
std
adc
dec
pop
in
bound
lods
cwtl
mov
mov
push
pop
test
ja
xchg
adc
push
cmc
incl
cmc
sbb
les
cltd
mov
imull
sbb
call
cmp
mov
and
fidivrl
adc
mov
xchg
sbb
pop
add
in
inc
repnz
jno
dec
ljmp
int
pop
das
or
das
adc
xor
xchg
pop
sub
out
mov
sbbl
sbb
mov
jnp
je
push
fldl
sbb
xor
andb
adc
mov
inc
cmp
sbb
cmp
mov
popa
mov
push
subb
out
punpckhwd
push
out
in
fcmovb
sub
into
fnstsw
add
lcall
std
dec
shll
in
stos
insb
push
xchg
add
mov
xor
testb
push
mov
cmp
lcall
test
adc
fwait
les
insl
and
inc
push
lret
nop
sbb
mov
out
ja
push
push
test
ds
adc
mov
xchg
outsl
dec
int3
or
xor
inc
push
fmulp
mov
scas
jbe
out
cli
dec
lcall
pop
ds
mov
jle
loope
lret
imul
incl
mov
push
xchg
test
in
movsl
jp
sub
adc
fs
andl
popa
scas
pop
jmp
or
pop
push
and
dec
outsb
test
push
test
outsl
rorb
shll
mov
pushl
out
jb
cmpsb
jl
cmp
lock
mov
and
std
shlb
pop
incl
push
jmp
and
sbb
lcall
in
insl
mov
les
pop
iret
decl
mulps
or
cmp
push
cld
mov
xor
stos
fstp
xor
pop
lods
mov
aam
addr16
ljmp
jecxz
cwtl
addr16
pop
jle
ror
roll
dec
lcall
loop
fcoml
shrl
sub
lcall
hlt
and
adc
sbb
out
dec
pop
xor
loop
leave
int3
fidivrl
xlat
jb
pop
hlt
jmp
push
movq
and
dec
pop
add
pop
insl
mov
out
cmp
cmp
jl
insl
insb
jno
push
shlb
inc
mov
adc
cmp
sbb
pushl
push
jno
sbb
jns
test
push
inc
jge
mov
test
test
mov
pop
jge
push
hlt
mov
in
pop
ja
adc
arpl
and
cmp
pushl
cmc
int3
call
lods
bound
outsb
bound
jae
js
mov
popa
xchg
xorl
call
mov
mov
cmp
lahf
xchg
xor
xor
jp
xlat
hlt
mov
jnp
xor
jl
ljmp
repz
push
mov
push
pop
sbb
cli
shlb
lcall
adc
scas
sahf
lret
pop
add
mov
jecxz
fnstcw
fisubrl
fmull
sbb
inc
fucomi
aaa
jl
xchg
or
xchg
push
mov
lcall
ds
mov
pop
mov
mov
movl
ljmp
movsb
outsb
jle
lea
push
into
loopne
lea
je
mov
mov
pop
mov
xor
outsl
mov
pusha
fmull
pop
mov
frstor
mov
imul
inc
hlt
mov
ljmp
es
or
sbb
mov
xchg
ret
mov
nop
movsb
cs
lock
loop
push
fwait
jae
imulb
push
movsb
sarl
push
push
pop
xchg
ljmp
repz
icebp
mov
or
fisttps
push
push
adc
mov
xor
scas
clc
movsb
dec
ret
scas
cmp
insl
rcr
pop
lea
loope
jmp
sti
cwtl
push
jmp
je
sar
incl
mov
and
pop
xchg
popf
fs
sub
movsb
iret
jmp
das
loope
or
cmp
rcr
and
mov
aas
loopne
ljmp
dec
enter
jbe
cmpsb
push
jo
adc
js
xor
test
aad
pop
xchg
cld
sbb
ljmp
jnp
lock
mov
cmp
popa
dec
inc
fdivrl
out
mov
sbb
fimuls
outsb
out
push
xchg
jbe
mov
lret
jg
cmp
lcall
cmp
leave
jns
mov
pop
aaa
clc
in
mov
adc
sub
sbb
push
call
loop
adc
ret
sahf
xchg
inc
dec
adc
push
cltd
gs
test
call
ja
dec
insl
gs
sti
xor
add
inc
or
cmc
les
xchg
neg
cmpl
lcall
leave
shl
mov
adc
sahf
mov
ss
dec
xor
inc
sbb
dec
xchg
jne
sbb
negb
jmp
xchg
test
test
jp
insb
aas
movsb
sub
adc
out
sti
add
push
jae
mov
mov
mov
jg
sub
dec
popf
roll
jg
aas
fdivrl
sar
and
cmp
dec
sub
cmp
dec
xchg
and
leave
inc
mov
std
lods
dec
xor
mov
dec
mov
fimull
pop
outsb
movsb
sbb
aaa
pop
hlt
and
cs
mov
mov
lahf
pop
shrb
out
mov
decl
lock
sbb
je
lret
mov
es
xor
int
mov
inc
xor
jmp
fildl
daa
dec
notl
push
loopne
xor
mov
dec
adc
cmp
fildll
pop
inc
fwait
scas
enter
arpl
stc
sbb
add
add
call
cli
mov
jl
cwtl
pop
mov
shll
call
and
ja
xchg
xchg
fstpl
push
jmp
mov
stos
adc
shll
xor
call
les
out
inc
xor
mov
enter
mov
pushl
std
mov
mov
insl
jne
lgs
insb
fstpl
loopne
es
adc
inc
sbb
arpl
imul
ljmp
sbb
icebp
jno
outsb
push
outsl
cmpsb
push
xchg
or
repnz
pop
int3
loopne
outsl
insb
loope
push
add
pushl
inc
xchg
out
inc
popa
fmulp
mov
push
mov
dec
fisubs
insl
adc
cmp
lcall
sti
cmpsb
push
insl
sahf
jl
mov
pusha
sbb
rorb
cmp
es
mov
pop
stos
pop
mov
pushl
jle
inc
jb
add
lahf
cmpl
mov
es
adc
jns
idiv
lcall
xor
je
cmp
hlt
pushf
imul
sbb
lock
and
lret
mov
ljmp
clc
sub
jae
enter
into
sarb
xchg
and
fwait
mov
dec
push
mov
std
xchg
push
inc
call
out
sbb
fucomip
jns
lcall
ret
mov
and
or
sbb
cmp
leave
xor
movsl
in
and
sbb
je
leave
dec
repz
pop
mov
test
push
xchg
pop
enter
loopne
ljmp
mov
dec
test
cmp
mov
cmpsb
gs
dec
pop
pop
xchg
xor
out
bound
js
and
jno
call
pop
lret
xchg
fnstenv
aam
xor
ret
pop
outsl
pushl
mov
ds
loope
mov
inc
out
xchg
out
rcr
out
in
jp
fldcw
inc
mov
incl
std
xor
test
xchg
cmp
bnd
outsb
icebp
mov
mov
jmp
mov
cmp
jno
sbb
mov
push
push
scas
leave
das
popa
rcl
xchg
addr16
std
call
pop
cli
repz
and
int
jle
pusha
mov
mov
fisubrs
cmp
and
cmp
cmpsb
ret
xchg
sub
adc
jae
lret
mov
aam
jae
das
cli
adc
popa
push
roll
mov
and
jecxz
sub
mov
inc
xor
ja
leave
jb
mov
lcall
pop
ljmp
mov
shl
aam
or
mov
movsb
imul
xor
sub
out
clc
incl
and
xchg
cmc
or
jl
mov
test
xchg
shr
cmpsl
call
out
mov
shl
es
xchg
stos
jb
iret
push
xchg
pusha
lahf
xchg
jle
add
xchg
mov
decl
test
daa
inc
push
or
enter
dec
cwtl
fbld
mov
pushf
sti
inc
lods
movsl
pop
repz
call
inc
mov
dec
mov
loopne
aad
push
pminsw
mov
imul
fdivr
fsubrp
pop
jo
mov
mov
pop
fsts
and
mov
push
insb
or
mov
jnp
dec
jle
pop
repz
into
jbe
cmp
inc
push
fldt
loopne
xchg
scas
or
and
idivl
rcr
decl
imul
lds
pop
andl
pop
mov
jbe
pop
xchg
lcall
mov
or
jmp
cs
je
push
ljmp
jp
mov
adc
mov
decl
sub
push
scas
dec
pop
and
or
push
iret
cmp
or
lahf
cmp
icebp
int
and
or
cli
ret
pushl
pushf
jo
pop
cwtl
pop
shrl
clc
adc
int
adc
jmp
pop
pop
adc
fcmove
push
jbe
and
imul
sbb
pop
sub
fcomip
decl
loope
cltd
inc
xlat
xchg
in
ret
out
mov
shrw
lret
decl
mov
jo
sahf
inc
mov
dec
jbe
inc
mov
nop
sbb
lcall
inc
insb
sbb
dec
std
daa
jg
ret
jo
imul
pop
dec
mov
lock
fstl
test
ret
je
add
daa
cmp
mov
and
sar
decl
cmpsb
out
mov
daa
xlat
mov
addr16
dec
jge
and
sarb
mov
mov
cmp
rclb
call
aam
and
daa
ret
pushl
cmp
jne
out
cwtl
jnp
mov
xchg
dec
inc
fwait
shll
aam
repnz
mov
fwait
push
test
fnstenv
divl
sub
dec
or
call
scas
in
xor
add
cmp
orl
mov
mov
shr
movsl
pushl
arpl
stos
sbb
es
add
and
sub
test
jp
lahf
mov
jmp
mov
mov
pushf
mov
add
test
dec
clc
jbe
adc
xor
ljmp
fldt
pop
pusha
aad
ret
popf
adc
sahf
fwait
add
nop
mov
xchg
fwait
inc
fdivs
hlt
cli
incl
jecxz
cld
test
jbe
stos
and
sbb
loopne
mov
push
inc
or
ds
out
clc
enter
test
call
or
dec
out
adc
or
call
decl
lea
ret
pushf
mov
xor
std
pop
movsl
push
sbb
test
mov
lcall
mov
push
push
mov
mov
inc
call
mov
incl
mov
push
adc
ja
stos
repnz
xchg
arpl
xor
iret
jne
mov
pop
add
lcall
add
je
xor
out
xchg
inc
adc
out
jnp
inc
push
das
loopne
rcll
pushl
adc
fsubrl
inc
cs
pushf
adc
insl
sub
loope
incl
or
mov
rcrl
adc
shlb
sbb
xlat
dec
ja
int3
mov
dec
dec
ljmp
in
movsb
xchg
and
clc
add
sub
pop
lds
jg
aad
fcomip
pushl
aad
dec
push
sbb
sbb
sbb
test
cmpsb
fldl
decl
cltd
outsb
arpl
movsl
cmp
xor
in
jmp
inc
mov
jmp
pop
faddl
pop
sbb
pushl
nop
or
inc
xorb
xor
outsb
xor
ret
sahf
mov
ljmp
popa
xlat
daa
enter
jmp
or
cmp
leave
push
mov
push
inc
loopne
cli
ja
cmp
outsb
cltd
lea
ljmp
out
add
adc
and
dec
out
ret
outsl
clc
decl
vpcmpeqd
fdivrl
sbb
inc
mov
ret
pop
push
idiv
push
adc
int3
sbb
push
push
imul
test
add
add
sahf
out
cld
rcr
int
mov
cmpsl
push
bound
incl
push
leave
dec
test
test
clc
je
push
xchg
pop
jp
push
sti
cld
ffreep
jmp
repz
xor
leave
loop
adc
inc
push
test
push
pop
adc
mov
call
addr16
dec
rdtsc
jle
sbb
cltd
fdivs
push
push
stc
and
cli
xchg
inc
sub
and
outsl
clc
ljmp
lds
adc
sub
testl
stos
mov
mov
jno
adc
or
or
test
insl
faddl
jle
cli
pop
mov
mov
dec
pop
sbb
cltd
aas
jmp
bound
or
jg
je
jg
xchg
mov
xorl
popf
add
das
stc
stos
mov
cmc
lods
pop
cmp
jmp
call
js
movl
mov
int
ja
cmp
push
stc
xor
addr16
dec
sahf
lods
xchg
cmc
jl
cli
mov
ljmp
leave
outsb
xchg
xor
dec
dec
ss
aas
fdivl
shrl
iret
shlb
dec
inc
pop
inc
rcll
or
data16
add
repz
cs
xor
pop
mov
or
sbb
inc
adc
pop
je
outsb
orl
cmp
lock
pushl
cmpsl
inc
negl
loope
add
iret
idivb
addr16
decl
shl
into
xor
lea
push
jno
ds
mov
pusha
in
adc
sub
inc
outsl
mov
jne
aaa
mov
sub
xor
dec
adc
aaa
imul
shrl
test
sbb
sbb
sub
in
mov
sbb
fildl
fdiv
dec
mov
sbb
push
add
in
incl
sti
pop
adc
call
fidivs
or
roll
ljmp
test
rcr
mov
popf
fildl
ret
dec
inc
push
inc
insb
jmp
mov
push
mov
inc
mov
popl
jge
mov
sub
decl
sbb
jae
jmp
lds
add
scas
cmp
fidivrl
call
out
hlt
ds
or
into
dec
notb
cmp
jae
cmpsb
data16
in
cld
mov
sub
pushl
bound
push
ret
leave
adc
lock
sub
imul
ljmp
lods
mov
push
adc
lods
sub
out
rclb
push
and
pushl
push
js
pop
and
test
jecxz
js
or
shll
loope
dec
sub
call
rcrw
pop
adc
int
xchg
pop
xchg
leave
push
mov
and
rcll
pop
or
mov
call
rorl
mov
mov
aas
scas
push
sbb
ljmp
add
lcall
mov
add
int3
jle
mov
dec
inc
test
jbe
imul
pop
sti
jmp
jg
outsb
inc
dec
and
leave
pop
push
out
aad
nop
xchg
sbb
je
ljmp
pop
cmp
incl
xor
nop
lret
leave
mov
cmp
jmp
decb
jmp
mov
jae
call
shlb
dec
mov
or
mov
jmp
dec
lds
cld
sahf
popf
popf
jmp
inc
movl
shlb
mov
rol
jmp
aad
mov
repz
pop
repz
lock
ja
and
dec
pop
andb
and
pushl
pop
pop
shrb
aas
xchg
pushf
xchg
ljmp
ret
xchg
in
dec
jmp
dec
or
stos
insl
pop
mov
dec
cmp
mov
add
fwait
pop
outsb
pop
xor
sbb
mov
push
adc
call
or
aas
lret
mov
or
shlb
js
sub
or
mov
adc
out
add
cli
insl
scas
jne
mov
pop
jo
dec
shlb
out
jbe
add
mov
and
jmp
hlt
or
xchg
pushf
mov
jne
ss
or
and
add
inc
ret
dec
gs
add
int
inc
cmp
lods
xchg
xor
xor
jg
sbb
scas
push
and
pushl
jmp
adc
imul
push
sti
add
fiaddl
xchg
cltd
and
in
call
lret
and
mov
jge
dec
mov
push
jo
mov
ss
sub
decl
cmp
iret
xor
cmpb
jg
sbb
sub
rcrb
push
es
sub
mov
fidivl
mov
in
push
lcall
ds
out
std
and
jne
xor
push
sub
add
incl
fadds
pop
dec
lcall
or
mov
inc
xchg
adc
mov
cltd
cld
lcall
cmpsb
fidivl
fbstp
out
sub
xor
clc
std
lods
mov
cmp
pushl
and
xchg
xchg
into
jmp
mov
xlat
adc
ret
inc
adc
jmp
sbb
lret
lods
cmc
std
cltd
or
or
icebp
xchg
cmp
jmp
scas
stos
test
jmp
sub
or
jo
das
loope
push
sbb
jg
sbb
mov
sub
dec
dec
or
rcl
inc
fucom
push
xchg
pop
adc
outsl
xchg
sarb
or
dec
hlt
mov
push
fnstcw
sub
mov
dec
repnz
cmpsl
cmp
cmp
sbb
xchg
scas
lods
push
pop
lds
cmpsb
lods
loope
mov
out
shrl
incl
push
mov
cmpsl
pop
mov
dec
fcmovu
cli
push
das
lret
clc
mov
cmp
nop
mov
inc
push
ljmp
xlat
loop
bnd
fsubp
shll
or
pop
loopne
stos
imul
lcall
shll
mov
shll
jl
xchg
push
mov
jmp
aas
inc
insl
lock
jmp
loope
adc
sub
mov
or
cmpsb
push
jecxz
imul
lcall
scas
imul
pop
movsb
cmp
mov
mov
cmpsl
testl
or
arpl
xor
mov
lods
jmp
fdivrl
pop
les
sub
sti
int
inc
push
sti
add
aas
outsb
mov
inc
pusha
in
cmpsl
xchg
push
fiaddl
jbe
mov
incl
mov
ja
mov
clc
out
aad
cmc
mov
mov
cmp
xor
jae
dec
aas
and
cmp
fiadds
dec
add
decl
inc
adc
into
fcoms
xchg
push
adc
and
ljmp
std
stos
cmp
test
xor
pop
xlat
xchg
mov
pop
outsl
sub
loop
and
ljmp
sbb
frstor
inc
push
orl
pop
or
mov
mov
js
insl
push
xchg
xor
scas
mov
out
cli
incl
dec
iret
add
into
sub
lcall
push
push
xor
daa
js
loopne
jns
hlt
mov
push
insb
adc
imul
fwait
push
sub
sbb
jg
inc
cli
mov
inc
or
loopne
fdivrl
lret
sub
inc
aam
cmp
rcrb
aam
dec
fldl2e
adc
push
mov
dec
xor
lea
int
addl
ljmp
mov
cmp
clc
pusha
pushf
popf
in
adc
cmp
cmp
sub
lret
daa
movsb
cmp
push
das
mov
pop
test
imulb
mov
leave
or
inc
mov
push
gs
fstpt
pushl
mov
and
push
leave
sub
imul
movsl
ds
cwtl
ljmp
in
pop
sub
inc
les
dec
sti
pop
mov
rolb
pop
imul
dec
inc
cmp
fisttpll
push
or
adc
sbb
pop
and
hlt
add
inc
loop
or
jle
jle
pushl
mov
xchg
into
sbb
mov
cld
add
cmp
call
cld
cld
sub
xor
xor
ja
and
shll
jge
jb
in
push
jge
xchg
jae
clc
dec
add
or
dec
add
dec
je
inc
jle
jl,pn
insl
jge
mov
ss
aaa
popa
xchg
inc
jno
cmp
les
adc
pushl
sbb
sub
adc
or
sub
cmc
shll
fldt
stc
pop
and
mov
repz
push
mov
js
cmpsb
in
adc
sub
decl
loopne
and
in
shrl
xchg
add
mov
in
call
xor
jb
jg
pop
push
jnp
mov
dec
repz
or
jg
or
add
gs
sti
sbb
lcall
stos
mov
inc
aad
sbb
adc
scas
xor
std
mov
test
add
mov
pop
sbb
imul
jecxz
add
iret
inc
xor
int3
mov
add
lret
fadds
adc
outsl
push
hlt
and
lds
lret
inc
movsl
daa
cltd
hlt
arpl
jae
ljmp
xchg
mov
pushf
stos
int3
mov
xlat
or
out
lea
outsl
jge
decl
mov
xor
sbb
orb
xchg
adc
popf
push
xchg
mov
pop
cmc
cmp
ss
or
mov
cmp
push
adc
cmp
lock
ret
mov
cmp
je
xor
jnp
jmp
pop
pop
cmc
sbb
pop
mov
or
bound
sub
loope
jl
mov
xor
ljmp
jmpw
xor
push
jo
das
fnstcw
scas
pop
int3
mov
ljmp
sahf
push
mov
imul
xchg
ret
loope
daa
pusha
stc
push
pushl
or
mov
add
sbb
lret
dec
jge
ficomps
mov
movsl
jl
lea
les
lcall
mov
pushl
faddp
adc
mov
sub
lcall
pop
mov
ret
or
decl
jbe
in
dec
in
scas
imul
mov
xchg
xchg
adc
dec
sub
call
enter
mov
xchg
cmpsb
scas
pop
xchg
imul
push
jno
adc
pop
incl
shlb
inc
inc
dec
mov
nop
adc
loope
cld
xor
icebp
inc
mov
call
adc
mov
jle
into
lcall
lret
push
mov
add
out
mov
out
inc
dec
add
fdivrs
enter
call
sbb
mov
inc
loopne
push
cld
stos
jns
lods
jecxz
pop
out
xchg
outsl
cmp
push
lcall
dec
shrl
jecxz
adc
or
loopne
jno
and
push
orl
mov
jge
pop
sbb
add
out
and
ljmp
call
outsb
bnd
dec
xchg
cmp
push
mov
dec
test
cmp
aaa
xchg
adc
add
xchg
pop
push
or
jmp
cld
or
adc
fucomi
cmp
xor
mov
addps
mov
push
xchg
lret
dec
je
test
popf
mov
orl
mov
roll
or
jbe
test
cltd
es
leave
loope,pt
add
sar
mov
xor
push
mov
popf
xchg
test
std
mov
push
inc
mov
pop
fadd
fiadds
adcl
push
mov
dec
sahf
xchg
popf
mov
mov
les
decl
jg
lods
fwait
cmp
add
add
imull
push
pop
arpl
pop
insb
mov
pop
call
mov
ljmp
mov
push
inc
xor
sub
xlat
js
outsb
jg
and
jg
call
std
gs
mov
mov
sbb
jno
mov
or
loop
idiv
jmp
add
or
jb
dec
arpl
shlb
mov
jmp
or
out
imul
cmp
leave
push
shll
adc
mov
call
js
or
lcall
das
iret
jno
aaa
xor
ret
mov
loope
mov
fdivrl
test
mov
notl
nop
sarl
lret
repnz
into
loope
push
add
enter
add
mov
aad
test
repz
sub
test
lret
in
cmpsl
mov
cmp
aaa
mov
sbb
mov
push
std
adc
into
mov
xchg
ret
ljmp
adc
jp
sbb
int3
mov
cmpsl
scas
outsl
jp
lea
bound
inc
lret
cmp
int3
cmp
mov
movsl
ja
or
dec
xor
jb
xchg
cmp
imul
dec
inc
outsl
adc
arpl
xor
je
incl
xor
dec
jle
cmpsl
dec
ljmp
cmpsb
inc
cs
inc
pop
ficomps
adc
inc
xchg
xchg
aam
cmpl
and
jge
shl
movsb
ja
inc
jmp
outsl
cmpsb
mov
movsl
out
sar
ljmp
sahf
add
hlt
data16
jp
fildl
lds
xor
push
sbb
decl
pop
xor
ja
shll
cmp
xor
mov
add
mov
inc
xchg
repz
sahf
mov
xor
aas
out
sarb
mov
jmp
pop
inc
add
and
push
push
ss
dec
mov
dec
ds
jp
sbb
mov
mov
stc
and
pushf
pop
je
not
mull
das
lahf
push
xchg
incl
pop
int3
or
push
mov
sbb
mov
and
mov
dec
lcall
cmc
jmp
sbb
cmp
cmc
mov
mov
sub
sbb
leave
jmp
test
orb
je
decl
add
push
outsb
mov
jae
jle
das
adc
jmp
popa
mov
push
inc
push
adc
insb
inc
stos
mov
pop
adc
ljmp
clc
addr16
cs
in
cwtl
leave
inc
inc
pop
shr
out
sti
pop
mov
mov
inc
adc
sub
xor
test
enter
sub
inc
inc
nop
jbe
pop
mov
lcall
aas
movsl
sbb
jo,pn
pushl
sbb
dec
mov
dec
adc
cmc
xchg
xor
pop
loop
mov
enter
jmp
mov
in
xchg
imul
das
jecxz
or
loope
test
mov
movsb
xchg
cmp
inc
adc
rclb
pop
xchg
icebp
mov
addr16
push
lea
nop
mov
ljmp
sbb
int
add
xchg
out
sbb
sbb
decl
test
roll
outsb
lret
or
out
xorb
arpl
inc
std
mov
cltd
push
insb
pushl
mov
mov
fcoms
cmpsb
xchg
xchg
push
cmc
ret
in
mov
in
and
cmp
nop
test
outsl
popf
sbb
dec
mov
adc
loopne
mov
in
cmc
fmull
xor
rcr
lret
jmp
mov
fs
lret
scas
shll
push
mov
rcr
xlat
je
mov
lcall
sub
dec
fwait
je
sbb
adc
pusha
imul
push
out
xchg
cmc
incl
jmp
push
jbe
cmpsb
cmp
or
jo
push
jnp
push
insb
push
sub
decl
xchg
aad
mov
and
imulb
sbb
xchg
pushf
and
call
divl
lods
adc
jp
bound
in
cltd
mov
xorl
mov
pusha
test
push
iret
or
imul
mov
adc
mov
ljmp
cmpb
add
dec
sti
sub
sbb
pop
fiaddl
jmp
pop
repz
call
rol
jge
dec
and
in
jno
xchg
pop
xchg
mov
mov
fs
andb
shl
sar
jmp
mov
mov
ljmp
ja
imul
lret
mov
aas
push
pushl
inc
daa
dec
sbb
aas
cmp
dec
ret
xor
hlt
aaa
pop
mov
mov
push
pop
xchg
inc
sahf
and
cli
pop
sbb
fiaddl
jmp
mov
push
or
mulb
incl
push
int3
jg
pop
push
or
shrl
inc
push
inc
call
loope
rorb
inc
xor
stos
sbb
pop
and
add
arpl
in
inc
jp
sbb
inc
mov
add
aam
push
inc
je
adc
jecxz
test
sbb
call
out
ss
sbb
and
jbe
push
testl
je
mov
cmc
push
and
adc
loop
pop
jno
xchg
mov
test
aaa
cwtl
dec
lea
fbstp
and
pop
loopne
out
pop
sbb
mov
repnz
mov
inc
push
or
icebp
cmp
pushl
out
cli
sub
cmp
pop
jne
rcrb
popf
or
jo
ljmp
mov
inc
pop
cltd
push
jmp
js
xchg
adc
int3
stc
cmp
mov
push
mov
nop
out
lret
scas
xchg
push
inc
xchg
dec
fisttps
cld
jmp
js
div
int3
dec
inc
into
outsb
or
mov
insl
imul
adc
ret
fldcw
out
call
movb
lret
rclb
rep
jmp
inc
mov
mov
mov
jmp
and
loope
je
mov
jl
cmp
adc
xor
sbb
jmp
call
test
inc
cmc
out
addr16
and
adc
sarb
and
out
mov
inc
rol
popf
lods
cmp
dec
in
int
cbtw
mov
lods
dec
or
aas
jmp
jg
pop
loopne
call
xchg
aam
xchg
jp
daa
lods
pop
xchg
mov
stos
scas
jae
cli
ljmp
adc
lods
xor
and
inc
mov
sub
inc
xchg
out
sahf
pop
xchg
xor
add
inc
enter
pop
jne
xchg
jecxz
dec
dec
mov
pushl
ret
insb
push
rcrl
xor
out
rorb
cmpsb
jbe
sbbl
in
mov
in
mov
aas
fwait
dec
sti
xor
into
sbb
enter
mov
inc
inc
xor
sbb
iret
loop
sbbb
cs
movsl
loop
push
mov
popa
sub
push
sub
jmp
popf
jg
pop
sub
cmp
mov
jp
push
mov
fbstp
sar
pop
cld
pushl
mov
loope
orb
ljmp
fchs
std
and
mov
push
inc
adc
lods
jne
inc
cmp
fadds
push
lcall
loopne
dec
fwait
pop
js
rorb
pop
cltd
mov
clc
in
sti
jns
push
mov
lds
int
and
lea
scas
lcall
cmpb
xchg
or
pop
pusha
fsubp
test
loopne
int3
pop
mov
test
jmp
shl
fwait
pop
out
jno
mov
dec
into
adc
lock
hlt
cmp
jmp
inc
cli
push
mov
addb
cltd
pusha
inc
xchg
loope
push
pop
or
pop
xorl
jg
dec
loope
push
movb
push
adc
sarl
cmc
lahf
in
sub
aaa
lcall
loope
jmp
insl
out
sub
outsl
lock
mov
mov
mov
bound
je
stos
push
adc
xchg
jne
mov
js
popa
add
shl
fldl
mov
subl
out
mov
hlt
sub
lret
xor
mov
rcrl
arpl
push
xchg
loopne
lds
inc
xor
insb
into
push
repz
addb
mov
cmp
aaa
cld
mov
jno
push
addl
mov
pusha
clc
movb
decl
clc
stos
jecxz
stos
les
pusha
mov
lret
xlat
mov
xlat
in
clc
xchg
push
jmp
push
mov
pushl
add
add
hlt
cltd
inc
xor
cmpsb
adc
sti
xchg
xchg
test
fs
lcall
into
and
out
pop
sub
adc
ljmp
pop
mov
icebp
rol
sahf
scas
enter
jecxz
aas
jg
sbbl
shlb
cmp
ljmp
and
jmp
lock
int3
iret
shlb
xchg
js
jbe
add
in
insl
ja
ljmp
cmp
sub
fidivs
mov
jb
cmp
mov
jae
push
cmpsb
mov
or
or
flds
call
data16
cli
push
lcall
insl
xchg
sbb
adc
ds
stos
push
mul
cmp
xchg
sbb
dec
pushf
shll
sbb
lret
int
fisttps
pop
xor
adc
or
rorl
mov
dec
lret
imul
push
test
add
push
push
cmp
pushl
or
rorl
mov
xor
daa
jl
iret
inc
dec
dec
dec
pop
mov
lcall
test
xchg
and
dec
lret
jbe
mov
sbb
lods
imul
dec
mov
dec
in
dec
dec
and
cs
sbb
cmp
add
imul
ljmp
push
mov
div
movsb
mov
lods
std
sti
cmc
les
mov
ljmp
pop
js
frstor
into
cmp
cli
mov
jge
or
jp
sub
fdivr
lcall
or
mov
stc
inc
outsb
mov
imul
xchg
sbb
adc
and
mov
pop
mov
fsts
fwait
in
adc
sbb
mov
divb
inc
add
loopne
jns
mov
xor
arpl
and
ljmp
mov
jmp
add
aad
adc
ja
stos
lds
lock
mov
dec
adc
fs
sbb
adc
decl
pop
sub
fcoms
adc
imull
popl
aas
fistpll
pop
cld
shll
adc
xorb
incb
or
mov
ret
mov
ljmp
sbb
aad
or
xchg
sahf
xchg
mov
or
popf
imul
incl
mov
jb
pop
mov
imul
ss
outsl
pushl
test
stos
sahf
pop
movsb
jnp
push
sbb
shll
lods
in
jg
lret
ja
mov
push
jnp
fcmovb
fst
fistpl
cmp
fcomps
mov
mov
imul
jp
lea
cmp
shr
test
mov
scas
hlt
and
call
outsb
xchg
js
lcall
inc
shll
mov
xchg
sbb
mov
sbb
dec
jg
cmp
xchg
and
out
cmp
loop
xstore-rng
cmpsl
xchg
inc
mov
dec
pop
js
fsub
sbb
mov
adcb
push
xchg
test
cmpsb
call
addl
lahf
cwtl
push
mov
or
inc
cmp
mov
jg
cwtl
sbb
adc
lds
clc
and
xchg
adc
decl
test
addr16
aas
jecxz
cmpsb
dec
shl
fmul
xor
popa
adc
sbb
mov
lret
pop
mov
lds
mov
iret
push
jns
lcall
outsb
jne
sbb
movsb
mov
pop
in
mov
jns
push
xchg
shl
cmpsl
adc
enter
mov
cmp
int3
cmc
cmpsl
dec
imul
mov
fsubrs
inc
jl
test
add
adc
cmc
and
ret
ljmp
or
sub
loopne
fisubrs
loopne
lea
push
jg
sbb
inc
lds
push
push
push
sub
fucompp
leave
sti
popf
or
cltd
pusha
orl
dec
repz
push
lds
ljmp
incb
jns
pop
dec
imul
in
dec
sub
dec
pop
notl
fs
lret
aam
cs
jnp
inc
insb
xchg
das
lods
ljmp
cli
xchg
das
dec
add
mov
in
sbb
cmp
push
mov
jnp
or
xchg
das
cwtl
jno
xchg
es
call
mov
ror
test
rclb
arpl
jg
mov
in
mov
call
sarb
mov
out
mov
dec
sbb
jo
daa
pusha
pop
ret
movsl
cwtl
mov
cwtl
mov
fstps
imul
cmp
inc
xor
jg
pushl
inc
xor
gs
pop
shlb
div
lds
addr16
pop
push
sti
jle
push
mov
stc
push
jge
push
lahf
inc
loop
std
ja
jbe
filds
fcos
ljmp
mov
xchg
mov
cli
mov
inc
lahf
mov
jbe
add
push
jmp
je
jns,pn
test
jae
imul
cltd
sub
inc
hlt
and
xlat
push
adc
mov
popf
ss
add
out
xor
outsl
add
mov
mov
pushl
inc
filds
mov
dec
popf
mov
in
sub
cmpsb
sbb
call
std
call
cmc
xor
cltd
cmc
mov
cmp
mov
orl
decl
mov
lods
shll
adc
dec
push
popa
fnsave
xchg
mov
mov
decl
mov
pop
push
sub
sbb
sbbl
lds
mov
test
insb
and
and
movsb
mov
sbb
jmp
out
fcomps
lods
sbb
shlb
jo
dec
pop
lcall
ret
mov
adc
push
push
or
sub
out
and
test
push
idiv
sti
mov
movsb
scas
jno
adc
fbld
sub
sub
adc
enter
out
dec
push
sub
adc
sbb
fistps
mov
sbb
clc
and
aaa
ds
cmp
cltd
mov
mov
cmp
jns
mov
pop
sbb
xchg
sti
ljmp
xor
aad
xchg
shr
pop
arpl
xchg
pushf
mov
mov
or
mov
or
lcall
shrl
sahf
sub
aaa
jp
xchg
cld
fs
data16
scas
jge
adc
mov
sti
imul
dec
iret
sbb
cmp
jg
push
or
push
fldcw
sahf
lret
fdivp
fnsave
out
leave
dec
mov
mov
imulb
lcall
push
iret
xlat
add
iret
loopne
and
notl
pushl
mov
add
cmp
cmpsl
sub
push
dec
xchg
jne
jp
adc
andl
push
pop
cmc
mov
in
stos
ficomps
jecxz
out
or
mov
push
push
adc
or
outsb
test
out
add
sub
cli
inc
lea
mov
cs
and
mov
and
xchg
xchg
inc
push
mov
out
incl
push
dec
mov
add
jno
xlat
out
aam
mov
decl
inc
je
andb
es
insl
in
jecxz
and
das
xor
iret
in
jmp
idivl
ja
add
jae
loopne
inc
and
lock
or
cld
and
or
mov
xchg
mov
mov
dec
nop
or
mov
pusha
jmp
push
dec
movsb
sub
icebp
jnp
pop
daa
movq
xor
dec
movsl
jns
iret
jl
outsl
and
lcall
mov
lret
cmp
or
jp
mov
and
pusha
push
fs
insl
push
jecxz
or
lret
cmpsl
call
lcall
adc
pop
arpl
andl
pop
pusha
mov
cmc
in
fisubrl
push
fisubl
inc
fucom
or
push
ss
cld
ljmp
cwtl
cmp
or
add
inc
adc
add
mov
fdivr
jmp
movsb
adc
mov
push
cld
data16
fucomi
xchg
ds
das
arpl
and
in
jo
mov
jp
mov
into
out
adc
outsb
sub
jp
mov
clc
decl
xor
mov
mov
pop
lock
mov
call
pop
fldenv
sbb
sbb
xor
ljmp
sbb
clc
ja
sbbb
in
pop
dec
push
dec
pop
push
jmp
xchg
iret
mov
ds
andb
pop
testb
jno
orl
inc
incl
sbb
fbstp
and
sbb
sub
mov
sbb
in
cmp
sub
mov
pop
sub
inc
add
jmp
out
mov
incl
aad
ljmp
incl
dec
inc
xor
in
and
ljmp
mov
fldcw
inc
leave
xchg
push
incl
mov
mov
in
divb
test
xor
ret
cmpsb
mov
out
in
sahf
fcompl
lock
mov
adc
add
sub
pushf
aaa
in
movups
jbe
fidivrs
insb
push
inc
cmp
call
fiaddl
or
xchg
mov
popa
cmp
aad
sbb
xor
call
sub
iret
mov
pop
insb
mov
lods
jl
and
adc
lcall
pushl
cmpsl
addr16
jbe
movsb
and
and
cli
subl
push
xlat
inc
jnp
test
ljmp
xchg
xchg
fcompl
mov
jae
xor
inc
jge
in
outsb
xor
sub
cmp
or
jmp
adcb
mov
jmp
std
xor
xchg
ds
movsl
dec
cmp
jecxz
rorl
pop
ret
jns
ljmp
cwtl
insb
fs
stos
pop
add
movsl
mov
in
adc
sbb
push
shll
jmp
push
lods
push
jne
jg
aas
push
dec
rcl
jnp
into
push
xor
daa
jbe
int3
cmp
lds
inc
repnz
ljmp
fidivl
sub
push
pop
iret
push
adc
je
out
xchg
rcr
push
call
aam
sub
sub
insb
cmp
leave
push
imul
lcall
push
add
jmp
jg
inc
push
sbb
pop
iret
out
mov
aas
mov
arpl
incl
js
or
insb
loop
fs
lcall
scas
dec
int
mov
mov
mov
xlat
stos
in
and
push
inc
pusha
fwait
jns
js
popa
push
negb
mov
xchg
jp
dec
sbb
push
dec
mov
fcomip
fidivl
xorb
cmp
xchg
dec
fstpl
inc
xchg
popf
lock
call
push
inc
dec
xor
xchg
addr16
cmp
out
ret
pop
movsl
rcll
pushl
xchg
vzeroupper
xchg
pop
add
test
push
sbb
and
outsl
lcall
decl
rcrl
mov
and
mov
xchg
outsl
xchg
xor
push
cli
pop
dec
ficoml
mov
call
popf
leave
pop
mov
dec
stos
js
push
sub
cmp
xor
dec
dec
test
fstl
incl
sub
push
push
xlat
mov
mov
adc
xchg
scas
sti
inc
xchg
ret
adc
popf
jl
jno
xor
sar
sub
cmp
sub
arpl
bound
incl
inc
in
push
subb
faddl
in
jge
add
and
in
adc
mov
add
sub
sahf
cmc
add
movsb
pop
push
fsubs
dec
xor
pushf
pop
xor
fwait
mov
xlat
lea
mov
fdivl
in
in
xorps
or
sub
inc
push
cmp
data16
jl
sub
push
mov
dec
test
jne
dec
icebp
lcall
or
mov
mov
mov
sub
mov
push
daa
std
sub
mov
adc
sub
cli
xchg
add
pop
xchg
jle
add
out
lods
fst
shrl
in
jle
add
jns
jg
lret
add
xor
lods
aad
add
push
pop
stos
bound
jp
out
cmp
cwtl
lret
xchg
and
pop
push
push
or
mov
scas
mov
call
and
and
enter
lcall
jle
ret
inc
out
xor
sub
jne
cli
pop
sbb
stos
fcmove
sbb
fldl
bound
inc
adc
decl
pop
xchg
lcall
andb
dec
sub
adc
xchg
popa
incl
add
add
mov
lcall
jmp
add
rolb
into
sbb
repnz
scas
sbb
cmp
in
scas
push
pushf
jno
pop
int3
aaa
xor
inc
fidivl
call
clc
pop
cmp
or
das
int
or
outsl
pop
leave
mov
adc
xchg
push
sbb
ds
cli
jmp
inc
outsl
jnp
sub
xchg
sub
adc
push
nop
or
call
pushl
insb
xor
sub
or
iret
lods
insb
mov
jecxz
test
ljmp
mov
es
imul
cmc
out
jl
rorb
jo
icebp
repz
xchg
decl
dec
mov
jp
je
pushw
ljmp
push
lcall
cmp
cmp
pop
sub
mov
addr16
and
je
bound
lods
inc
cmp
adc
and
ror
adcb
ljmp
lea
add
fidivl
mov
jg
les
fmuls
mulb
mov
pop
mov
inc
mov
mov
incl
push
outsb
mov
mov
push
jbe
xchg
pop
xchg
xchg
cld
pop
enter
mov
add
loop
enter
push
ds
hlt
pop
hlt
mov
dec
pop
out
lcall
cmp
idivb
fistps
out
sbb
ficoml
in
mov
cmp
ja
adc
push
popf
push
icebp
roll
movsb
fs
mov
push
mov
xchg
inc
sbb
test
jno
jl
mov
fwait
leave
cmp
imul
repz
les
scas
push
jmp
mov
fstpt
sar
pop
std
ljmp
mov
call
inc
daa
sub
sahf
pop
or
adc
jmp
adc
frstor
xchg
mov
mov
lods
push
mov
push
mov
sub
mov
icebp
incl
jle
adc
div
push
or
add
insl
dec
in
mov
sar
decl
sbb
adc
out
aam
inc
mov
shll
in
fcomip
das
pusha
sub
rcrb
pop
das
mov
jno
pusha
in
stc
lea
sbb
inc
scas
cli
sub
push
inc
jbe
cmp
push
daa
fldenv
pusha
push
or
dec
sti
push
outsl
mov
fdivs
lods
mov
cltd
inc
sbb
jl
in
sbb
and
out
rolb
call
xlat
shr
cli
lahf
push
aas
loopne
push
pop
fs
cld
test
call
scas
rclb
pushf
movsb
in
xchg
push
ror
dec
test
sbb
sbb
jmp
mov
or
out
add
adcb
lock
filds
pop
cmp
cs
sbb
and
mov
xor
shr
sub
inc
cmp
xor
cmp
jmp
adc
mov
je
add
fistl
arpl
sub
pop
add
mov
pop
in
push
xchg
add
loope
mov
sbb
int3
cmpsb
sub
and
xchg
insl
and
or
call
sub
push
ljmp
sbb
loope
jp
xor
inc
sar
rorl
lahf
pop
pop
cmc
mov
ror
jno
clc
or
or
xor
jns
cmpsb
sbb
xchg
iret
push
mov
sbb
pushl
push
fsubs
aaa
dec
pop
xor
ljmp
cwtl
es
and
cmp
inc
sbb
mov
push
icebp
hlt
enter
cmp
mov
mov
in
mov
sbb
ficomps
and
test
xchg
loopne
mov
fwait
adc
call
dec
add
xchg
jb
ljmp
and
cmp
jno
mov
incl
in
and
in
hlt
insl
int
sub
adc
clc
ret
xchg
sbbl
and
jmp
fstpt
cmp
push
dec
pop
jnp,pn
enter
nop
ret
ljmp
xchg
loope
push
adc
pop
mov
or
subl
push
and
jno
sub
call
into
pop
lods
inc
les
adcb
xorl
mov
mov
mov
fidivrs
fdivr
lcall
adc
test
adc
push
xor
add
lods
xchg
pop
ja
fnsave
or
ljmp
lcall
stos
mov
iret
lret
mov
jb
loope
push
andb
push
in
mov
push
cld
add
mov
dec
ss
inc
sub
lcall
cli
decl
sub
in
stos
repz
mov
and
fisttpll
mov
dec
and
lcall
out
int3
movsb
push
or
dec
fwait
mov
adc
xchg
dec
hlt
dec
jne
or
ljmp
fsts
lds
gs
inc
push
jg
jne
gs
push
dec
mov
xor
imul
mov
push
xor
in
ja
xchg
das
jnp
movsb
cmpsb
nop
mov
mov
xor
push
fwait
clc
and
fbld
sub
sahf
lock
sub
mov
mov
je
int3
or
cmp
addr16
es
push
call
andl
jb
push
adc
imulb
cli
adc
push
cmpsl
and
dec
mov
sbb
adc
fsubrs
or
lods
jp
mov
lds
orl
incl
pop
cmpsb
adc
jg
dec
ss
fwait
mov
daa
xor
adc
lcall
xchg
mov
stos
cmc
ss
sub
pushf
jno
jmp
ret
pop
mov
jg
int
push
outsl
mov
xor
or
mov
mov
jmp
das
fbstp
loopne
pop
sbb
pushl
dec
shlb
fiadds
bound
lods
movsb
bound
cs
movsb
test
lcall
test
dec
pop
push
js
xchg
clc
jo
xor
pop
sub
aaa
jns
jecxz
mov
movsb
in
fildl
scas
and
mov
push
mov
jo
sub
cs
movsl
lret
jp
push
shll
int
call
or
or
mov
jp
sarb
pop
mov
jecxz
mov
loopne
xor
incl
xchg
leave
lahf
lret
and
mov
pop
jmp
test
xor
sbb
push
mov
push
adc
lahf
add
outsl
repz
dec
movsl
mov
cli
jmp
loopne
pop
loope
clc
pop
jb
pop
mov
mov
mov
cltd
mov
jae
test
or
dec
mov
cmp
sbb
mov
test
popf
mov
cltd
cld
fildll
ljmp
das
add
pushf
jne
jge
mov
jmp
sub
adc
movsb
cs
out
std
cwtl
enter
shll
mov
aaa
cmc
and
cmc
decl
push
xor
xchg
xlat
pop
jbe
jmp
push
jae
and
adc
cld
cmpsb
fnstsw
adc
daa
xor
sbb
faddl
js
push
in
cmp
dec
leave
cli
ja
and
bswap
stos
in
cs
lods
test
fwait
outsl
push
je
fbstp
mov
mov
out
add
and
add
lcall
insb
xchg
xchg
jae
or
cltd
icebp
sbb
push
pop
mov
filds
mov
data16
inc
ja
sti
sbb
stos
daa
sub
and
push
lcall
mov
mov
jecxz
popa
fbstp
mov
mov
leave
sub
adc
xor
add
lock
dec
mov
or
adcb
add
repz
ret
mov
fwait
pushf
sbb
add
jmp
ljmp
mov
xchg
pushl
dec
or
ljmp
sbb
jnp
jo
sbb
xchg
in
hlt
rclb
dec
rorb
mov
dec
cltd
push
xor
mov
xchg
push
mov
outsl
xor
fs
or
mov
push
ss
and
push
jg
sbb
push
fs
and
insl
popa
int3
mov
cmp
orl
xchg
jp
pop
lcall
cmp
rorl
sti
lods
pop
adc
clc
or
mov
in
and
lcall
adc
das
pop
mov
rcr
inc
inc
mov
decl
xor
ret
scas
jns
mulb
push
enter
jmp
imulb
nop
push
mov
ret
jnp
dec
xchg
adc
xchg
js
mov
fiaddl
inc
lcall
add
add
push
lretw
xor
xchg
mov
dec
sbb
lcall
popf
lahf
or
dec
leave
outsl
ss
mov
inc
fs
out
mov
jae
stos
inc
gs
xchg
mov
pushl
cmpsl
push
shll
mov
inc
fwait
insb
test
push
cmp
lods
mov
in
stos
xlat
lds
or
jne
mov
push
sti
or
mov
mov
mov
push
add
jb
sar
out
hlt
sar
jg
pop
gs
jmp
pusha
push
sub
mov
pop
sub
xchg
ret
or
outsl
xchg
or
popf
mov
mov
push
in
shr
sbb
imul
incl
decl
shrl
adc
fdivl
mov
imulb
dec
gs
lods
decl
cli
mov
cmpsb
pushl
jno
je
sbb
ret
insb
lock
inc
gs
es
in
fs
cmpsl
call
pop
xchg
loop
in
push
pop
sahf
cmpsb
jns
sub
jmp
sbb
mov
in
push
push
jbe
imul
add
adc
std
cmpsb
imull
dec
cli
mov
lcall
xor
mov
not
out
xor
jl
mov
mov
cwtl
xchg
lods
fwait
and
out
and
lret
dec
in
push
jp
jb
xchg
nop
mov
mov
inc
pushl
hlt
in
test
bnd
lods
xchg
adc
arpl
or
lds
ffreep
decl
daa
ss
pop
enter
cmp
cs
mov
roll
xchg
cld
xchg
lcall
lods
pop
out
and
sarl
ret
stos
dec
jle
subb
mov
pop
xchg
jmp
clc
into
mov
xchg
insl
adc
leave
cld
sbb
lret
add
push
mov
lcall
fwait
mov
sub
jg
fs
roll
scas
add
test
ljmp
out
adc
adc
repz
sub
loope
fwait
out
ljmp
ljmp
cmpb
fidivl
dec
orl
mov
cmpsb
add
dec
decl
xchg
scas
xchg
mov
xor
aas
xchg
mov
ja
fwait
test
incl
push
fucompp
test
frstor
add
sub
sub
xor
dec
incl
sub
rorl
pop
mov
out
popf
dec
aam
pusha
sub
rcrb
cmp
call
std
cmp
int3
into
pop
and
mov
fmul
pop
test
sar
pushl
aam
cmp
jmp
stos
add
mov
jge
xor
add
add
lcall
iret
mov
ja
xor
into
pop
cmp
in
adc
pop
idivl
cld
jmp
sub
das
xchg
pop
stos
add
jb
add
jmp
pop
daa
dec
decl
xorb
sti
cmp
mov
mov
inc
jno
xchg
es
xor
cmc
jb
sub
mov
ljmp
mov
test
arpl
jo
lock
cmp
testb
jb
mov
adc
mov
fwait
cwtl
lcall
imul
outsb
in
push
jns
test
pusha
gs
mov
pusha
enter
in
movsb
stc
xor
xor
adc
in
push
xorl
push
push
cmp
add
ja
pop
jmp
rorl
sti
loope
cmpsl
popf
pop
mov
mov
push
or
jmp
cli
pushl
gs
sub
fsubl
gs
dec
adc
add
insl
add
out
cmp
rol
cmp
push
and
fnstsw
xchg
inc
loope
clc
test
sahf
call
cmp
push
xchg
dec
push
lcall
lret
imul
jmp
fadds
repz
stc
stos
cmp
and
push
dec
test
shlb
decl
shrb
mov
inc
cli
arpl
mov
imul
lods
jnp
pushl
mov
xchg
and
mov
add
sub
je
cli
clc
das
mov
xor
scas
fs
sbb
or
add
movb
lods
add
ja
shrd
lcall
pop
fsub
adc
mov
jno
push
or
xchg
jecxz
xlat
jg
enter
out
cld
ja
push
mov
xor
xchg
xor
lods
loope
sbb
adc
dec
ljmp
xchg
ljmp
inc
ret
mov
xor
and
cld
xchg
cmc
mov
fcomip
icebp
mov
sub
fistl
popf
ror
call
lcall
dec
aaa
or
in
mov
cmp
dec
nop
adc
add
jne
jp
jmp
add
int3
xabort
push
add
push
mov
repz
dec
call
test
pushl
pusha
lock
scas
xchg
xchg
fisubl
xchg
sub
daa
rsqrtps
xchg
lret
mov
sbb
out
icebp
rcrl
fmul
test
ss
addr16
jmp
push
xor
or
sub
out
add
mov
rorl
lods
jmp
mov
jb
loop
lds
push
icebp
inc
or
mov
mov
mov
call
or
or
stc
mov
je
insl
inc
pop
ret
dec
sub
mov
cli
scas
or
dec
enter
test
in
rcrl
adc
stos
or
int
adc
jo
outsb
jecxz
bnd
cmp
test
loope
add
in
call
stc
mov
mov
es
addl
jg
incb
orl
incl
jge
call
inc
imul
std
mov
add
andl
sub
xchg
pop
cmp
pop
jbe
inc
cs
adc
sbb
loopne
outsl
lahf
push
pushl
out
dec
xor
mov
dec
shl
gs
sub
xchg
jg
mov
in
xchg
loop
cmc
call
sub
jp
ret
and
call
mov
push
ja
mov
loopne
push
shl
xor
fnstenv
cmp
mov
mov
sbb
sahf
repnz
call
cmp
call
or
cli
loopne
mov
movsl
ret
sbb
lods
or
mov
dec
inc
inc
sbb
mov
pop
push
mov
stc
push
and
mov
std
ret
scas
mov
inc
aas
push
inc
shrl
jmp
xchg
push
push
in
mov
xchg
pop
add
xor
nop
pop
sahf
and
insl
enter
push
aas
pop
cs
test
and
cmp
cmp
lcall
dec
dec
pusha
push
mov
es
stc
nop
ret
push
jns
scas
nop
sbb
loop
inc
xor
ret
sti
decl
pop
lods
inc
cwtl
cmpsb
xlat
push
inc
in
leave
cmp
cmp
and
xor
dec
decl
std
test
movsl
decl
cmp
fstl
adc
cmp
cmp
test
pusha
imul
dec
jmp
xor
dec
mov
js
incb
nop
mov
add
insb
dec
jge
mov
jecxz
loopne
mov
lcall
and
addl
xchg
xor
mov
fnstcw
xchg
pop
jmp
es
stos
ljmp
pop
test
scas
mov
addl
adc
or
push
ds
pop
test
jmp
inc
xchg
sub
inc
cmp
call
out
les
xor
inc
movsb
jbe
shll
imul
test
js
in
mov
pop
dec
xchg
jge
or
test
xchg
pop
adcl
jg
into
fbstp
cli
insl
jg
fisubs
sbb
rcrb
mov
and
add
xor
mov
mov
mov
add
pop
xor
int
cmp
ljmp
clc
inc
cs
mov
add
shlb
jl
es
jne
adcl
add
movsb
insl
iret
cmp
movsb
insb
adc
ficompl
or
mov
pop
pop
xchg
stos
jle
call
add
shll
lret
test
xchg
shlb
and
xchg
mov
ljmp
add
push
clc
jno
cmpsb
bound
mov
dec
push
pop
movsl
lods
xchg
mov
sbb
pushl
lret
sahf
push
dec
test
addr16
in
mov
pop
add
mov
add
mov
test
jmp
jne
fadd
and
hlt
mov
and
sub
jge
push
int3
pop
addr16
sbb
xchg
pushl
stos
mov
or
shrl
jmp
notb
sar
mov
out
sbb
mov
sbb
xchg
sbb
sbb
stos
jle
mov
stc
pop
cs
jge
pusha
rorl
push
mov
jnp
insb
scas
call
mov
packuswb
sbbl
cmp
orb
mov
into
adc
mov
add
xchg
and
mov
or
mov
lods
jno
loopne
cmp
push
orb
mov
mov
xor
pop
jg
mov
mov
scas
mov
jmp
cmp
mov
jmp
pop
push
xchg
int3
stc
lds
xor
sub
call
into
repnz
mov
js
popf
ljmp
jmp
ud0
decl
into
jecxz
insl
fidivrl
mov
mov
xchg
mov
ficoml
repz
and
enter
call
mov
incl
in
mov
dec
cmp
lods
dec
rolb
cs
adc
mov
leave
mov
rcr
cmp
fdivs
inc
int
jns
sub
or
pop
mov
xchg
mov
lods
in
mov
icebp
int3
mov
xchg
xor
sbb
jecxz
inc
jg
sbb
push
cld
push
scas
out
cmp
xchg
cmp
mov
lahf
cs
push
mov
mov
lret
xor
fmull
lcall
dec
ret
cmc
mov
repnz
ret
dec
cs
mov
std
ja
stc
das
dec
jmp
pop
imul
hlt
add
aam
cmp
adc
mov
lcall
in
out
cs
cmp
in
shrl
int
jbe
or
repnz
imul
les
into
ljmp
test
mov
fwait
jmp
fnclex
mov
popa
test
pop
pop
dec
out
adc
outsb
incl
sub
aaa
out
imul
sub
push
xorl
movlps
mov
fisubl
data16
fsubs
jl
dec
push
mov
cmp
clc
cmp
xor
mov
fnstenv
or
cmp
fisttpl
jmp
jae
fdivs
lock
lods
pushl
cld
ljmp
call
cli
je
scas
push
mov
adc
lret
aaa
pop
pop
lcall
pop
mov
cmp
out
fildll
icebp
data16
sti
addr16
push
incl
push
xchg
pop
pop
jp
loopne
in
lock
lcall
es
dec
adc
fisttpl
pop
xchg
inc
jns
mov
push
pop
fidivrl
jne
xchg
and
mul
sub
rcll
add
jmp
dec
push
xchg
mov
addr16
add
dec
jb
jne
add
ja,pn
out
cli
pushl
addr16
hlt
aad
cmpl
inc
nop
xchg
dec
mov
push
loopne
or
call
pop
fwait
call
pop
or
xchg
mov
lods
outsl
call
daa
pushl
scas
rcrl
fsubr
pop
cmovne
and
pop
pusha
or
jae
jl
in
outsl
sub
sub
cmpsl
xchg
shlb
jmp
cmpb
das
hlt
jmp
xor
aas
call
mov
sub
cmp
rcr
lods
fistpll
adc
cmpl
or
ret
push
add
xchg
arpl
clc
aaa
xchg
mov
aaa
inc
sbb
mov
fdivs
incl
incb
sbb
xor
push
outsb
push
and
stos
pushl
cmc
add
mov
call
xor
movsl
inc
fsubr
ds
mov
incl
lods
enter
pop
pushf
pop
cmc
mulps
xchg
xchg
dec
mov
int
or
push
rorb
pop
inc
addr16
ss
dec
call
int
pop
mov
inc
mov
or
ljmp
push
or
in
adc
es
ss
pop
mov
mov
xor
ret
lcall
shrb
adc
add
mov
push
movsb
lcall
add
dec
sub
cmp
dec
stos
adc
mov
push
aaa
mov
lcall
sbb
inc
cmpb
or
xchg
mov
jmp
sub
shrb
pop
bound
mov
sub
xchg
sbb
ret
mov
jno
lods
jecxz
mov
pop
movsb
xchg
lcall
bound
adc
lock
sub
rcrb
in
test
and
jl
fcompl
das
scas
ja
mov
xor
lock
in
mov
mov
inc
dec
xor
xchg
fstpt
mov
std
scas
aas
popf
mov
dec
xchg
xlat
jbe
jb
or
sbb
lods
and
dec
jno
pop
lds
ds
fisttpll
aaa
or
jecxz
jg
imul
cmp
mov
enter
or
js
add
xor
dec
scas
shrb
xchg
inc
std
ljmp
dec
leave
add
and
push
xchg
cmc
fidivs
xchg
xor
lock
push
push
es
fcomps
pop
daa
xor
push
jmp
call
lods
mov
xlat
xor
mov
ret
orl
push
or
xor
jp
fnsave
decl
dec
jns
dec
popf
or
pushf
pop
push
data16
sbb
movsl
cmp
mov
lcall
xchg
mov
push
into
fcomi
cmpl
push
rcrb
inc
rcrb
mov
xchg
pop
arpl
jnp
out
sub
ljmp
fcmovnbe
sbb
test
sub
jnp
cmp
sub
cltd
jmp
icebp
imul
out
adc
dec
js
sarb
loope
adc
and
mov
pandn
sbb
iret
sub
mov
in
mov
adc
decl
out
pop
sbb
ljmp
mov
or
push
add
in
jge
add
jae
and
and
mov
sbb
xchg
repz
lds
nop
fs
adcw
mov
mov
fcoml
jb
inc
clc
xchg
nop
jns
and
push
lret
sahf
jne
pop
jle
lcall
leave
adc
fmull
test
sbb
incl
lret
nop
out
mov
push
push
xchg
or
adc
push
cmp
jno
lcall
rcr
pop
mov
jo
scas
ljmp
mov
xor
lods
ljmp
clc
pushl
mov
test
lret
inc
jecxz
je
push
incl
dec
out
das
jge
lea
ljmp
sbb
outsb
mov
or
lock
lods
sub
xchg
mov
inc
rorl
pop
lcall
ljmp
jae
aad
je
out
xorb
insl
mov
push
sbb
movsl
sub
lcall
fwait
js
sub
or
jle
lea
sub
dec
mov
mov
stc
mov
fadd
testb
ficomps
jb
xchg
mov
shr
sahf
cmpsl
sbb
jle
or
mov
sub
rcrb
adc
pop
pop
sub
popa
xchg
shll
mov
lret
call
clc
stc
mov
scas
lods
sar
mov
pusha
addl
mov
dec
outsl
mov
stos
shll
sarb
ljmp
call
add
pusha
pop
mov
adc
hlt
cs
mov
xor
inc
jge
fst
mov
mov
mov
cmpsb
cltd
js
adc
cmp
inc
cmpsl
outsb
mov
decl
js
adcb
adc
popa
mov
cld
incl
and
outsb
fisubs
pop
cmp
dec
loope
or
out
ret
lret
mov
jno
pop
push
out
clc
sbb
pop
ret
fcompl
fwait
ds
icebp
push
xchg
roll
push
sar
out
pop
xchg
scas
jle
out
push
add
dec
jge
mov
sub
mov
or
sarl
adc
or
popf
fucomi
pop
push
xchg
popf
cmpsb
push
aaa
loopne
pop
mov
mov
mov
pop
fwait
mov
xchg
xorb
push
int
fcomi
push
adc
fdivs
pop
das
mov
call
scas
push
pop
fildll
adc
jo
or
sub
sub
sub
decl
jnp
rorb
shrl
mov
dec
cmp
pop
cmpl
cmp
out
cmp
sub
xchg
out
cmpsl
mov
xor
scas
cmpsb
and
addr16
call
cltd
mov
loopne
mov
loop
sbb
dec
pushf
dec
cmp
pop
jae
cmp
ja
gs
fidivs
pop
les
out
shll
mov
push
adc
ja
decl
aaa
add
stos
inc
in
lds
xor
and
in
into
aam
rolb
jp
xor
jle
incl
aad
pop
push
adc
das
xchg
iret
cmp
xor
or
ljmp
pop
inc
dec
imul
mov
pop
cmp
bound
adc
mov
decl
je
xchg
js
push
sbb
xlat
mov
and
cmpsb
arpl
sub
fprem1
std
lcall
adc
int3
pusha
dec
shll
lahf
out
mov
xchg
ja
imul
xor
or
fcmovnbe
cs
call
mov
sbb
mov
jmp
fisubl
mov
add
out
mov
pushl
mull
mov
cmc
mov
lret
out
mov
out
int3
or
incl
jge
lods
lahf
dec
push
jecxz
xchg
sub
cltd
add
movsl
and
inc
pop
xor
dec
xor
insl
insl
inc
sahf
mov
aaa
push
mov
out
ficomps
stc
xchg
sbb
lcall
mov
sub
repnz
push
sbb
inc
mov
push
dec
mov
adc
fnstsw
incl
rcrl
lahf
jb
dec
ss
decl
adc
dec
mov
mov
leave
call
adc
subl
jmp
jmp
out
je
push
and
push
or
pop
pushf
repnz
loopne
dec
ficomps
adc
inc
mov
shll
ss
xlat
inc
int
jbe
dec
inc
inc
inc
cmc
pusha
sbb
lcall
fwait
pushl
popf
lret
mov
in
stos
mov
ret
pop
sub
dec
in
mov
sub
cmp
pop
push
sbb
push
jnp
fcomip
enter
mov
out
movsl
ljmp
ljmp
fnsave
fldt
push
xchg
mov
pop
jmp
outsb
fisttps
in
outsl
dec
push
scas
inc
repz
and
fwait
pop
xor
pop
sbb
call
dec
pop
data16
cltd
adc
cwtl
bound
cmpl
sub
call
popl
stos
pop
inc
xor
sub
pop
mov
filds
sahf
scas
in
jg
scas
pop
jb
and
jp
xor
inc
incl
scas
loope
addl
cwtl
imul
mov
lcall
inc
in
jbe
push
in
andl
scas
jp
xchg
dec
mov
push
lcall
add
mov
fmuls
ret
loopne
enter
push
jecxz
inc
pusha
add
call
outsl
cmp
decb
xor
movsb
or
sbbl
pusha
xchg
aad
pop
lret
sub
cld
enter
mov
je
mov
pop
or
jg
rclb
jnp
mov
loope
pushl
fmulp
jmp
lds
cld
mov
or
add
andb
ljmp
clc
dec
mov
les
repz
inc
and
pop
sub
cs
pop
mov
jae
incl
sub
movsl
sbb
pusha
mov
fidivl
scas
das
sarl
arpl
std
in
inc
or
pop
lea
mov
sar
js
cmc
xlat
or
mov
jmp
mov
cmpsb
imulb
xchg
pop
jmp
lcall
fnstsw
stos
ljmp
xchg
int
rcrl
mov
bound
mov
test
or
outsb
cmpsb
fcomip
or
push
pop
add
xchg
jg
test
nop
psrad
lret
lret
adc
jmp
loope
sbb
mov
fimuls
flds
sti
pop
lea
jge
mov
jmp
clc
pop
cmp
mov
ljmp
out
pop
outsb
mov
fwait
in
push
adc
sbb
rorl
cmp
lcall
movsb
sbb
jge
stos
jnp
gs
adc
pop
call
outsl
clc
in
lock
inc
add
xor
add
call
pop
adc
push
xchg
shlb
js
data16
and
jmp
hlt
cmp
outsl
mov
jmp
imul
inc
cmpsl
mov
subb
hlt
cwtl
mov
cmc
lods
lods
mov
icebp
frstor
or
gs
int
fdivrs
xor
ljmp
jne
jo
out
jl
cmp
sar
jg
ror
outsl
sub
cwtl
sub
jae
jp
or
xchg
std
jg
aas
lcall
test
mov
sbb
sbb
movsb
cmp
push
loop
test
adc
mov
dec
test
pop
add
jnp
pop
nop
mov
xor
sbb
push
dec
mov
add
xchg
call
dec
loop
hlt
push
repnz
popa
jecxz
mov
call
ljmp
das
fs
hlt
pushl
std
inc
into
mul
leave
outsb
cli
fiadds
hlt
dec
cltd
cmp
lahf
mov
or
call
test
dec
lret
mov
addr16
jmp
outsb
pop
jns
mov
lret
rolb
mov
ljmp
std
dec
loopne
mov
lock
dec
outsl
xor
out
sbb
leave
mov
daa
adc
das
cli
call
mov
jecxz
push
in
dec
push
lahf
or
call
mov
stos
jb
dec
sbb
out
push
shll
inc
arpl
scas
int3
mov
hlt
popa
lret
push
cmc
and
iret
in
push
inc
into
loope
bound
sub
push
ss
pushl
adcl
mov
roll
call
pop
out
sbb
mov
call
cmp
jo
adc
out
repnz
dec
sub
data16
shlb
sbb
std
lods
cmp
shrl
inc
jle
sbb
test
sub
jno
pop
adc
ret
neg
sub
out
enter
ljmp
cmc
push
adc
das
xchg
adc
xor
push
adc
testl
movsb
sub
decl
orb
mov
data16
fstps
fmull
lock
dec
push
shrb
cs
out
ja
and
mov
ljmp
imul
sbb
jbe
xchg
mov
pop
mov
scas
jbe
leave
push
arpl
sub
call
and
fistps
jge
stos
test
pop
pop
insb
js
cmp
jo
pop
movsl
xor
xchg
outsl
xor
jecxz
addr16
js
ret
mov
pop
add
clc
repnz
xor
pop
and
ljmp
popf
cmc
mov
cmp
sbb
ret
jmp
inc
push
clc
sub
push
xchg
xchg
aam
fstpl
lret
push
sbb
out
hlt
inc
rep
ret
insl
dec
subl
sti
add
pop
inc
ss
movsb
jmp
insl
and
cmp
push
call
inc
dec
es
pop
inc
orb
inc
inc
mov
lock
pushl
sbb
jecxz
in
dec
sbb
xchg
fbld
sub
decl
dec
dec
ja
cli
scas
cmp
cmc
cmc
push
loopne
and
or
cmp
jno
ljmp
aaa
das
inc
pop
sahf
xchg
mov
ds
testl
inc
xor
dec
std
xchg
popa
mov
fnstsw
jmp
pop
or
dec
jbe
jl
jns
cmp
insl
or
pushl
dec
jns
sahf
pop
in
mov
xchg
insb
out
test
dec
repnz
mov
ljmp
cli
push
std
xchg
jl
xchg
xorb
test
jp
call
nop
fidivrl
mov
cmp
push
arpl
xor
add
jns
icebp
sbb
out
add
and
mov
addl
jne
dec
outsb
insl
test
loope
add
stos
lock
das
ljmp
and
cmp
fidivrs
ficoml
ja
cli
jmp
cmp
add
bound
shrl
outsb
mov
or
outsb
sub
dec
push
dec
push
inc
adc
xor
lcall
adc
js
insl
cmp
dec
fsubl
fmuls
push
movsl
push
pushl
xchg
mov
orb
adc
dec
and
mov
dec
dec
iret
call
mov
movsl
popa
scas
sub
fildl
dec
pminub
cmpsb
pop
decl
xchg
mov
jg
pop
add
inc
fcoml
sbb
push
cld
pushl
repnz
inc
js
add
fisubs
sub
bound
mov
pushl
jbe
mov
loope
sub
or
icebp
xor
ljmp
jmp
mov
arpl
fs
cli
fucom
fwait
addb
int3
sbb
add
out
clc
lcall
or
int
das
xor
ljmp
ds
pop
jp
xor
lcall
or
subl
fdivrp
adc
cmp
mov
jae
dec
scas
ljmp
incl
xor
lcall
popl
inc
imul
inc
mov
jo
inc
aad
mov
xor
icebp
sub
xor
arpl
nop
fs
cmp
lods
stc
jmp
imul
cmp
xor
mov
decl
stos
popf
cs
xchg
cmp
je
mov
ret
sar
mov
mov
fwait
rclb
mov
pop
int
xchg
fists
stc
faddl
dec
adc
lock
es
call
lcall
ror
mov
or
mov
ret
adc
call
loope
jecxz
jmp
sub
push
sbb
fmul
pop
int3
push
sbb
pop
ljmp
mov
inc
or
add
mov
decl
sub
or
test
nop
xor
xor
adc
or
lret
add
ljmp
push
fidivl
mov
movsl
and
add
inc
mov
lret
add
mov
lcall
adcl
stc
push
adc
jbe
push
pop
dec
mov
pushl
lret
mov
xor
mov
inc
add
sar
ret
sub
mov
out
enter
sbb
cs
pop
inc
push
push
push
dec
or
leave
ljmp
push
clc
imul
jle
adc
sbb
ja
mov
aam
into
sbb
push
push
outsb
xor
pusha
mov
fistps
rcrb
inc
pop
cltd
cmp
push
sub
imul
rcrl
pop
xchg
dec
or
decl
cmp
ds
jnp
cli
mov
xchg
and
out
xchg
outsl
xchg
jmp
mov
fcoml
and
add
pop
lods
and
adcl
mov
inc
jmp
sub
xchg
test
inc
push
jae
pop
mov
lcall
inc
sbb
shll
dec
js
adc
pop
push
and
ljmp
sar
jbe
jl
fsubrl
mov
push
inc
fsubl
incl
inc
leave
outsb
in
fimuls
cmpsb
ja
xchg
frstor
popa
into
rolb
jmp
insb
fmull
bound
cwtl
push
scas
cld
scas
push
xor
decl
push
jecxz
movsl
add
out
ljmp
and
adc
pop
pop
lret
jmp
dec
sub
arpl
scas
popa
data16
sarb
decl
les
jg
loop
jae
les
dec
adc
shl
push
je
pop
lcall
and
sbb
mov
mov
int
add
cmp
insl
jno
arpl
inc
jge
lods
mov
cmp
push
mov
cmp
inc
inc
or
adc
xchg
pop
add
shlb
mov
mov
out
cmpsb
sub
jp
or
pop
inc
pop
js
addr16
jmp
movsb
jns
add
test
movsb
lea
push
out
xlat
jge
pop
dec
xor
je
incl
pop
dec
fsubp
test
mov
dec
fimull
push
mov
jl
outsl
in
loope
fwait
sbb
fcomip
ret
leave
je
mov
or
popf
in
lods
mov
outsb
imul
pop
jae
mov
out
pushf
and
jo
xchg
adc
dec
pop
dec
mov
xchg
cmpsb
mov
int3
in
fdiv
les
stos
xchg
mov
mov
pusha
orl
add
hlt
pop
push
pop
jp
and
xor
aaa
fcomps
pushl
xlat
and
inc
or
adc
push
fidivrs
mov
mov
cmp
das
inc
mov
jno
ljmp
sti
in
insb
sbb
divb
out
add
mov
add
pusha
stos
xchg
mov
test
mov
add
pop
inc
int3
imul
pop
xchg
mov
and
sbb
icebp
popa
pop
xor
xor
std
sbb
inc
add
sub
mov
in
loopne
popa
pushl
dec
fsubrs
xchg
adc
push
jae
leave
es
ja
decl
das
pop
popf
repnz
and
push
push
int3
mov
jle
mov
stos
call
lcall
xor
int3
data16
shl
gs
lret
dec
sub
jp
movsb
test
ficompl
lock
and
pushl
hlt
xchg
jb
scas
sbb
ds
mov
dec
ret
js
and
cmpsb
scas
in
mov
xchg
into
test
sbb
daa
cmp
test
aam
inc
pop
xchg
shll
sahf
and
sbb
fimuls
fsubs
lcall
mov
add
rclb
mov
ja
dec
push
push
pop
cmp
lahf
hlt
rclb
add
dec
imul
add
decl
stos
in
or
xor
fwait
mov
clc
iret
sub
jg
and
subb
add
cmp
lahf
xor
hlt
or
call
xor
sbb
mov
es
inc
jb
leave
mov
mov
jg
dec
or
mov
mov
pop
push
clc
mov
shlb
sbb
es
int
imul
int3
sbb
test
ja
jecxz
pop
inc
inc
pop
ljmp
inc
inc
sbb
fsubrl
xor
push
adc
je
repnz
lret
add
std
call
loope
ja
pop
out
orb
fadd
mov
or
cmp
mov
incl
push
inc
mov
fwait
rolb
ret
iret
pop
dec
mov
jl
gs
fcomip
les
call
aas
outsl
dec
sub
in
mov
iret
mov
jnp
sub
jns
jmp
lods
or
sbb
js
in
popf
and
je
cmc
push
in
mov
out
aaa
lcall
cmpsl
lea
pop
scas
ss
movsl
push
push
xchg
inc
pop
jg
inc
push
movsl
adc
sti
stos
push
sbb
mov
sub
cld
jmp
cmp
lcall
or
jbe
repz
jb
loopw
call
mov
jp
or
scas
out
add
or
stos
add
fst
hlt
sbb
cmp
out
cltd
movsl
mov
dec
mov
fisubl
aam
sub
jp
inc
inc
out
hlt
inc
jl
cmpsb
in
js
pop
push
pop
into
mov
inc
push
and
int
cs
ds
test
mov
xlat
ret
or
push
mov
adc
or
cmp
jmp
hlt
test
aam
or
dec
xchg
into
push
repnz
loop
dec
shll
xchg
decl
incl
mov
cli
pop
mov
test
cwtl
cmp
add
cmpsl
cmp
out
mov
xchg
or
lret
fstl
sahf
mov
in
inc
push
mov
dec
mov
xor
aaa
insl
and
dec
aad
mov
lds
pop
pusha
sbb
pop
push
add
loopne
ja
jbe
and
incl
rcrl
mov
cs
push
adc
mov
lcall
cmp
lret
inc
cld
push
or
push
cmp
aad
lcall
out
xchg
inc
inc
insb
cmp
fcmovnb
ret
nop
fldt
aad
cltd
adc
xorl
inc
xchg
xor
cmc
pop
dec
push
mov
jle
aad
outsb
addl
and
push
push
incl
mov
aas
into
pusha
sahf
mov
rcrb
call
mov
push
mov
into
test
in
jae,pn
mov
ljmp
outsb
insl
add
xchg
mov
pop
movsb
inc
xchg
mov
shrl
test
outsl
decl
mov
cmp
js
int3
add
push
dec
adc
in
jmp
scas
inc
cmpb
cli
push
nop
idivb
fisubs
sub
in
icebp
out
fistpl
mov
pushf
cli
call
dec
jne
fisttpl
jecxz
ror
fsubrl
int3
shrb
mov
mov
sahf
fucomi
nop
push
jnp
mov
cmp
outsl
loopne
adc
iret
cmp
es
int3
push
push
and
aad
clc
cmp
jmp
sub
xchg
insb
push
pushf
or
out
subl
xor
add
sbb
cli
ljmp
jbe
fs
sub
dec
mov
inc
test
cli
dec
divb
movsl
pushl
rclb
fisttpl
aam
das
fdiv
stos
pop
rolb
lods
gs
ljmp
sub
adc
daa
ja
xor
ret
popa
mov
xchg
daa
lcall
das
mov
dec
dec
insb
fstpl
cli
sbb
iret
aaa
mov
cmp
fnstenv
std
adc
rorb
fisubl
cmpsl
mov
or
lock
inc
or
lds
cs
loop
decl
imul
fwait
add
pop
dec
iret
jo
adc
arpl
xlat
cmp
xor
ljmp
add
xor
mov
pop
mulb
mov
bound
ds
ljmp
jae
or
jmp
and
out
cli
cmp
stc
out
xor
mov
and
incl
cltd
lock
jge
dec
popf
lds
daa
mov
ljmp
mov
xor
adc
incl
lahf
pushf
jge
cmp
hlt
or
addr16
pop
imull
sbb
mov
test
sub
nop
cmp
inc
dec
inc
add
test
daa
and
sbb
pushf
cwtl
jg
decl
push
fnsave
loope
sub
push
out
sbb
sarb
lcall
repnz
ret
fsubs
fldenv
daa
add
jle
cld
cmp
lcall
inc
fwait
mov
push
lahf
in
jo
xchg
inc
add
add
in
dec
mov
and
push
fiaddl
xchg
out
std
aaa
es
rorl
in
and
push
ud1
decl
leave
or
movsl
loopne
pop
sbb
mov
sub
xor
pushl
sub
ret
sbb
dec
push
jecxz
xor
addl
add
decl
adc
dec
bound
cmp
fisttpll
mov
arpl
sbb
sub
in
and
jp
imul
sub
inc
push
jge
cmc
mov
and
xchg
cmc
jg
cmpsb
pusha
jle
js
ss
in
cmpsl
nop
lret
push
xor
ss
sar
call
adc
push
and
hlt
mov
pop
out
push
xlat
mov
xchg
fisttps
inc
xor
mov
push
sub
sbb
cmp
pushf
or
loope
call
dec
jg
insl
andb
sbb
jle
arpl
push
xchg
add
aas
divl
int3
lahf
inc
dec
call
out
or
cmp
and
push
push
ret
mov
out
push
sti
fs
call
and
inc
sub
int3
xchg
hlt
sub
lret
mov
or
scas
sti
lods
push
fcmovu
jmp
jne
push
xchg
jb
into
pop
popf
mov
xchg
add
insl
or
and
mov
pop
icebp
jmp
cmpsb
push
push
sub
pop
icebp
insl
mov
mov
cmp
add
insl
pop
decl
cld
pop
sub
popf
fs
adc
lods
ja
mov
test
les
and
push
ljmp
pop
cmp
nop
dec
mov
push
and
imulb
sub
enter
jmp
lret
insb
iret
jp
decb
imul
mov
out
push
jecxz
dec
jo
popa
call
mov
in
cli
or
xor
push
pop
fldcw
xchg
movsl
int3
imul
jmp
xchg
ss
adc
mov
dec
mov
daa
and
jbe
or
lcall
cltd
sbb
subl
aad
inc
xchg
jl
pop
outsb
les
mov
les
lcall
pop
xor
push
push
mov
out
clc
addr16
ret
sti
cmp
int3
dec
inc
mov
call
bound
inc
mov
dec
inc
pop
xchg
shll
cmp
out
inc
out
ja
mov
pushl
clc
push
sbb
adc
repz
test
imul
dec
jmp
push
xchg
ret
jns
inc
mov
rclb
jo
jmp
ja
mov
mov
in
mov
jl
fucom
add
sub
pop
cmp
outsb
xchg
dec
jno
dec
dec
adc
mul
nop
xor
and
sahf
ds
cmc
call
mov
fbstp
jb
shrl
cmp
daa
movsb
inc
pushf
xor
xor
rcrl
sahf
jno
push
popa
mov
jmp
cli
mov
sbb
add
inc
clc
ljmp
fs
inc
ja
ljmp
mov
push
adc
sub
and
xchg
adc
roll
jmp
fbstp
jp
fbstp
mov
push
lahf
cmp
or
into
incl
imul
fwait
divl
fsubl
and
inc
add
imul
decl
sub
shrb
test
test
push
pop
clc
int
cmpb
decl
xor
mov
pop
pop
das
mov
pop
add
ja
fsubrl
jmp
ljmp
mov
in
rolb
leave
jb
jbe
mov
add
ljmp
mov
push
mov
jno
cmc
xchg
jg
jp
into
repz
cmp
call
jecxz
loopne
lcall
jmp
lods
fs
push
out
pop
and
mov
jns
inc
in
cld
dec
incl
sub
lahf
sbb
mov
sbb
ss
inc
dec
sub
aaa
inc
jl
dec
decl
add
movsb
test
cmp
cmp
xor
add
xor
push
cmp
dec
scas
cmc
jnp
and
cmc
xorb
clc
push
jae
out
ljmp
pop
inc
pop
daa
das
xlat
pop
lcall
std
adc
adc
lea
cli
sbb
jmp
ds
leave
xchg
test
insb
mov
xchg
pop
or
in
dec
xchg
filds
pop
pushl
cld
add
mov
xchg
icebp
pop
es
ds
mov
rorb
lcall
add
inc
mov
fmull
insb
mov
sbb
cmp
pusha
decl
fimull
mov
fsubrl
sub
lret
mov
mov
imul
rolb
cmp
jle
cmpsl
and
in
jno
insb
jae
xor
pop
mov
imul
jp
iret
mov
sbb
and
mov
fldenv
jg
ja
shlb
pop
cmp
jmp
mov
adc
movsb
sarb
pop
aas
adc
scas
clc
fdivs
rorl
or
fisubs
adc
mov
lret
cld
jg
jmp
fildl
and
es
ret
cli
dec
call
cmp
into
ljmp
or
inc
stos
decl
dec
std
cmp
add
adc
lods
iret
adc
sbb
push
cwtl
mov
and
scas
xorb
lcall
popf
push
iret
and
adc
idiv
stc
stc
mov
icebp
mov
mov
subl
pushl
mov
arpl
scas
mov
out
pop
lahf
fildll
cwtl
push
int3
fstl
pushl
outsl
out
sbb
inc
mov
mov
inc
add
sbbl
sbb
push
mov
in
add
cmp
cltd
xchg
scas
xor
stos
pop
jne
jne
cmpsb
cmp
arpl
pop
movsb
cmpsl
mov
js
into
sbb
pusha
fcomip
dec
pop
adc
dec
dec
sub
mov
hlt
xor
or
fidivl
sub
pushl
filds
imulb
cmpsb
scas
iret
sti
scas
cmp
jmp
dec
sbb
xchg
mov
call
add
xor
xchg
xor
xchg
cmp
sub
nop
enter
mov
jg
inc
popf
fadds
cmp
jecxz
xchg
adc
add
xor
or
mov
jae
js
push
xor
popf
stos
push
lret
out
push
pushl
xchg
imul
in
adc
das
dec
fisttpl
lods
inc
jnp
fcom
lods
into
aaa
jecxz
jns
dec
jmp
cmp
jne
mov
xor
lock
sbb
std
mov
popa
dec
mov
scas
pop
mov
sar
adc
jns
into
xchg
lds
movsb
sub
dec
js
mov
mov
hlt
sub
jl
test
aam
pop
popf
push
movsl
cmpsb
sub
in
pop
cmc
ds
lock
mov
outsb
mov
int3
nop
int3
xor
pop
test
ljmp
cmp
push
das
rcrb
or
jg
dec
int3
mov
out
pusha
sbb
int
stos
fld
sub
into
push
jnp
or
in
dec
stos
mov
call
in
jle
addl
sbb
mov
push
lret
loope
mov
or
mov
mov
and
adc
adc
lcall
mov
fistpll
or
jmp
adc
push
scas
in
out
pushf
in
adc
incl
push
sbb
cmp
xchg
inc
loope
sarl
in
jo
jl
or
test
dec
sarl
in
cmpsb
mov
out
ljmp
mov
imul
xchg
ret
scas
adc
call
adc
sub
and
ret
enter
jae
and
call
adc
call
stc
dec
lret
mov
clc
ss
xor
mov
xchg
xor
xchg
pop
cwtl
imul
pop
mov
fistps
jmp
cltd
push
sbb
pop
rcrb
pushl
cld
std
sbb
pop
incl
sub
inc
push
pop
cwtl
int3
mov
icebp
out
xor
stc
out
mov
fisubrl
push
rol
ficomps
push
cld
ljmp
clc
jmp
jmp
dec
in
pushf
sbb
fildl
ss
clc
decl
outsl
xor
ret
cld
cli
push
sub
nop
push
xchg
ljmp
test
and
dec
leave
dec
mov
lret
adc
mov
out
fmull
xchg
mov
xor
mov
or
sub
push
pushf
sarl
xor
dec
inc
cmp
movsb
ljmp
fldl
jbe
mov
adc
cli
and
xor
xchg
test
repz
sarb
lcall
add
push
pop
pop
movsb
shrl
lea
ja
jg
push
jge
pop
xchg
in
jl
jl
popf
lahf
inc
pop
jb
mov
sarl
fxam
lods
jp
sbb
or
pop
movb
xchg
and
cmp
decl
sub
mov
mov
fprem1
leave
jp
loopne
cmp
adc
arpl
js
sti
loopne
mov
gs
dec
xor
aas
jl
rol
push
push
xchg
xchg
cwtl
test
xor
pop
push
mov
ret
pushf
inc
incl
stc
pop
shl
mov
andnps
stc
jle
mov
push
gs
addr16
and
nop
sub
push
adc
pushf
add
fcoml
adc
xor
xchg
adc
mov
pop
and
sbb
jno
add
jecxz
clc
rol
mov
mov
ljmp
inc
xlat
mov
test
pop
pusha
pop
insb
cld
lcall
mov
subb
pop
or
lock
jg
inc
adc
pop
popf
out
mov
decb
popf
ss
inc
imul
inc
push
cltd
lds
leave
scas
sbb
inc
mov
adc
xchg
shl
lea
dec
xorb
jg
jns
xchg
test
scas
fbld
jb
jno
addr16
xchg
rep
pop
leave
sti
mov
push
fldcw
mov
subb
mov
loop
push
add
xchg
scas
add
outsb
or
and
pop
pop
mov
xor
mov
mov
pop
test
pop
jo
pop
jl
mov
cmp
ljmp
cwtl
bnd
scas
shll
pop
mov
fiaddl
cmp
negb
cmpb
sub
lcall
push
not
shll
mov
lcall
pusha
pushf
sbb
jae
xchg
push
push
or
add
inc
and
mov
xchg
cmp
dec
rcrb
and
ja
clc
lcall
sub
or
jbe
xchg
pop
xor
add
hlt
inc
data16
ljmp
ljmp
inc
mov
push
testl
ljmp
mov
push
out
or
cmpsl
rorb
dec
add
lahf
popf
imul
mov
pushl
lcall
xchg
mov
xchg
imull
loop
xchg
dec
jnp
xchg
cmp
call
pop
scas
scas
test
lcall
dec
movsl
lret
into
lods
test
inc
pusha
sub
popa
xchg
mov
dec
jne
into
loop
daa
es
sbb
inc
test
dec
ljmp
stos
xchg
pop
test
add
lock
mov
rclb
cmp
add
lock
decl
hlt
cli
add
out
scas
rorl
jl
sar
outsb
in
inc
jecxz
mov
hlt
decl
jns
mov
mov
mov
fiaddl
cmp
add
sbb
pop
cmp
jo
leave
cs
insb
sub
imul
in
in
xor
outsl
data16
jmp
or
repnz
out
pushf
insb
xor
xchg
mov
inc
ficoms
add
jl
dec
dec
sbb
sub
fs
and
int
std
pop
xchg
jmp
ljmp
pop
in
cs
mov
jge
cli
js
xchg
inc
mov
xor
or
imul
inc
cmp
scas
jp
push
mov
jp
stos
cwtl
std
and
sti
inc
push
and
lcall
jae
push
or
or
insb
clc
pop
mov
cmpb
stos
les
inc
xchg
test
mov
jecxz
xchg
jg
sub
xor
inc
aad
mov
ffree
xor
lods
pusha
pop
imul
scas
sti
mov
in
xchg
mov
decl
enter
mov
loop
xor
aaa
push
lods
xchg
cltd
cmp
sub
pop
pop
adc
adc
lds
inc
and
mov
decl
jne
sub
push
mov
data16
sub
data16
push
mov
mov
mov
inc
adc
gs
cwtl
mov
adc
or
mov
out
mov
mov
push
push
in
pusha
out
insl
adc
mov
lods
sub
call
mov
push
insl
loopne
cmp
mov
jp
adc
adc
std
call
or
movsb
inc
and
outsb
dec
data16
adc
pop
xchg
mov
cli
sub
faddl
scas
xor
mov
mov
movsb
cmpsl
pusha
testb
sbb
inc
mov
lret
or
or
or
fcoms
push
and
nop
or
push
decl
xchg
jl
sahf
pop
mov
stc
mov
push
add
hlt
ljmp
cmp
sbb
push
pop
cmc
nop
nop
inc
add
push
xchg
ljmp
cmpl
test
push
inc
imul
jmp
daa
adc
jg
popf
push
sahf
cld
jb
and
mov
in
sbb
xchg
decl
lock
mov
loop
adc
popa
mov
sub
xlat
pop
aas
fcoml
incl
inc
push
jae
pop
jp
push
rcr
movsb
push
decb
rorl
sbb
cli
mov
incl
int
js
add
rcrl
popf
push
push
outsl
dec
hlt
decl
js
std
mov
cmp
jecxz
sahf
fildll
inc
sub
lcall
aam
push
ja
mov
lock
jecxz
int
sub
ret
cmp
cld
mov
loop
inc
andl
mov
push
xor
out
mov
cmpsl
xor
sahf
lcall
lock
mov
ja
call
fcmovbe
push
jne
call
iret
cmp
outsb
cltd
mov
test
ljmp
push
xor
nop
sbb
test
lock
or
aam
push
xchg
ret
dec
mov
sub
fcomip
jg
jmp
aas
test
pusha
stc
xlat
push
xchg
mov
xlat
sub
iret
push
lcall
iret
xlat
sub
or
cmova
xchg
push
in
test
push
ja
dec
fdivrl
pushf
sub
lcall
sbb
sub
xlat
call
jmp
xchg
mov
incl
fcompl
ds
std
pop
roll
out
cmpsb
push
movsb
mov
xchg
shll
jmp
or
faddl
popa
lock
cmp
push
aad
lret
out
push
cmp
lock
scas
pop
xchg
out
xchg
jbe
aas
ret
lds
sub
mov
pop
jmp
shll
sub
outsb
sbb
jmp
fstpt
loopne
jb
push
cmpsl
lret
ds
cmp
jmp
xlat
sbb
mov
or
in
jle
mov
cmp
lret
cli
pushl
add
repz
ffree
inc
pop
inc
adc
loopne
jno
add
test
popf
pop
fisttps
aas
sbb
test
dec
mov
dec
pop
pop
sub
push
dec
daa
imul
push
popa
inc
push
jno
pop
fmulp
dec
testl
imul
xchg
pop
ffree
mov
xchg
fdivl
mov
pop
cld
call
sbb
sbb
sbb
jg
cltd
jg
xor
in
mov
lret
mov
push
mov
dec
sbb
arpl
fdivl
test
decl
enter
cmpsb
mov
inc
fwait
xlat
inc
xchg
mov
ljmp
ret
adc
ljmp
fcmovne
je
je
cmpsl
or
mov
data16
xchg
push
sbb
or
jae
push
push
pop
std
inc
insb
xchg
and
xchg
das
jecxz
imul
inc
push
sbb
pushl
stos
mov
hlt
xchg
in
pusha
lods
inc
rorl
je
inc
xchg
jae
lret
jbe
stc
negb
js
stos
decl
je
je
paddb
sbb
push
insl
inc
and
dec
cmp
push
testb
xor
sub
test
mov
pop
adc
rcrb
add
outsb
adc
push
std
incl
outsl
fs
das
jl
cli
out
add
aad
dec
lock
push
adc
call
pop
push
fcomps
movsl
mov
ret
stos
jl
and
lcall
mov
lods
add
sub
xor
jle
push
push
mov
pop
inc
cs
incl
mov
inc
ss
mov
and
sbb
pop
mov
mov
mov
cmp
ret
dec
jne
and
dec
inc
fs
int3
dec
push
cmp
out
xchg
test
fstpt
repz
adc
dec
pop
mov
adc
out
js
les
insl
jns
mov
xchg
scas
loop
popa
pusha
lcall
push
xor
fdivrl
inc
loopne
jns
jne
daa
sahf
and
xor
dec
iret
inc
call
cld
arpl
sbb
push
sub
call
push
das
in
mov
and
cmp
sub
pop
xor
lcall
outsb
pusha
ss
sbbl
cmp
xchg
push
popf
jmp
fisttpl
add
sti
stc
inc
push
push
nop
iret
push
push
outsl
es
push
imul
mov
movsl
decl
inc
xchg
std
adc
mov
aaa
jmp
test
mov
fldcw
lcall
xor
scas
or
imul
sbbl
arpl
in
inc
in
mov
out
clc
jnp
jns
cmp
ds
sub
stos
gs
test
pushf
aas
pop
jbe
cmp
incl
ljmp
and
fdiv
rolb
pop
leave
fnstsw
cld
sar
lcall
mov
mov
sahf
mov
test
aad
ss
hlt
shrl
sbb
fwait
xchg
fimull
daa
adc
int3
rolb
mov
inc
int
clc
jg
decl
int3
loop
mov
jmp
mov
add
and
data16
mov
fucomi
lods
push
sub
and
mov
hlt
cwtl
gs
into
lds
les
xor
scas
pop
add
xchg
mov
cmc
mov
in
out
clc
int3
pushf
inc
pop
pop
rorb
testb
fidivrs
decl
cmp
mov
cli
or
cmp
mov
xchg
cmpsl
add
incl
cmp
fistpll
sub
test
js
and
call
sub
add
ds
aad
xor
jg
adc
push
insb
hlt
insl
aad
dec
cmpsl
addl
inc
mov
adcl
jo
data16
mov
ljmp
test
pop
test
pop
xchg
xchg
je
pusha
mov
pop
pop
es
jmp
sahf
pop
je
clc
in
movsl
ficomps
out
fdivrs
lcall
jb
fdivrl
sub
loop
ja
cli
xlat
or
dec
mov
adc
dec
imul
call
cmp
cld
nop
adc
mov
and
push
incl
hlt
insb
sbb
mov
lea
into
adc
mov
call
rol
icebp
clc
mov
sub
enter
out
dec
mov
mov
lcall
jno
cmp
addb
cmp
or
js
xchg
fadd
orl
push
fsub
mov
out
sub
movsb
ss
mov
mov
and
jmp
pop
shlb
fdivr
jno
xchg
daa
stos
pushf
leave
xchg
int
arpl
pop
mov
jo
adc
pushl
push
cmp
xchg
addr16
ljmp
push
adc
out
push
das
sbb
push
lock
inc
sbb
jb
jno
jae
bound
fldcw
incl
fmul
dec
mov
xchg
or
mov
ljmp
pop
xchg
aam
outsl
call
fldl
push
std
lods
sub
pushf
pop
popa
sbb
popf
push
jno
cmp
movsb
pushl
or
in
loop
loopne
xor
mov
dec
sbb
fdivrl
fcmovnb
decl
bound
cmc
fists
ss
mov
mov
xchg
je
and
cmp
ljmp
mov
cmp
push
out
and
or
sub
pop
call
mov
mov
sar
incl
inc
clc
and
clc
loop
call
pop
daa
mov
outsl
outsb
cld
jg
out
push
mov
inc
sti
or
in
fmul
mov
daa
movsl
pop
cmpsb
jmp
jl
mov
pushl
pusha
xor
dec
data16
mov
mov
mov
mov
js
aad
xor
adcb
jbe
enter
cmpsl
push
mov
lcall
inc
sub
push
outsb
loope
and
jle
cwtl
xchg
xchg
mov
push
pop
into
mov
pushl
jo
fprem
xchg
ja
dec
inc
aam
xchg
loope
jle
test
sub
mov
fcos
lcall
mov
and
xchg
and
push
mov
cmpsb
jmp
outsb
xor
lret
je
lcall
xchg
push
xchg
and
int
cmpsl
call
out
je
and
jns
mov
daa
push
push
xchg
ds
mov
xchg
lods
pop
idivl
xchg
stos
imul
daa
push
ss
daa
ljmp
fiadds
cmpl
cmpl
pop
cmp
mov
das
adc
fldcw
ljmp
imul
cwtl
mov
frstor
jns
mov
cs
data16
dec
incl
aam
jae
sbb
daa
shlb
xor
das
xchg
call
mov
rorb
aam
mov
fadd
out
outsl
and
sbb
jg
fdivrs
or
sub
addr16
cli
int
push
lcall
or
jle
adc
test
hlt
mov
dec
jecxz,pt
call
and
xor
lds
repz
mov
jmp
call
pop
fidivrl
movsb
cmp
pop
push
cs
hlt
mov
dec
jno
or
sahf
rcrl
insb
dec
shl
bound
fbstp
lods
iret
insl
dec
xlat
lret
clc
jns
xor
gs
lahf
and
push
cmpsl
lahf
pop
decl
fwait
jp
movsl
mov
stos
imul
inc
mov
ss
adc
repnz
ljmp
xor
pop
aas
adc
dec
and
pop
ljmp
fistl
xor
lcall
jl
out
hlt
cmp
pusha
fisttps
aam
lret
cltd
add
jb
mov
ja
cmp
dec
and
add
jle
mov
jg
bound
rol
clc
notl
mov
jge
and
or
cld
jmp
dec
or
xchg
fdivs
test
gs
or
or
mov
std
pushl
push
in
mov
xchg
or
cmp
pushl
call
mov
lock
push
jle
mov
add
negb
insb
jne
pop
push
pop
das
xor
je
nop
scas
lea
cmc
pop
cmp
cmpsb
nop
or
mov
loopne
icebp
popa
push
cwtl
inc
xchg
cwtl
js
mov
mov
add
push
test
sarl
sbb
sahf
add
pop
mov
jg
dec
sbb
ret
mov
pop
fbld
rclb
sbb
incl
test
xchg
mov
mov
movl
mov
in
or
pop
scas
xor
jmp
in
pop
and
ss
insl
push
movl
cli
popf
mov
jecxz
mov
outsl
rcrl
or
push
sub
imul
and
add
jo
ljmp
pop
insb
fisttps
pop
mov
lret
and
icebp
in
jp
mov
test
insl
bound
sbb
pop
pop
or
cmp
mov
in
inc
in
movsb
or
pop
outsl
aaa
jno
test
mov
xchg
inc
push
add
inc
call
cmp
out
pop
fsubs
lret
jb
aam
and
jnp
dec
sub
movsb
mov
aas
je
call
test
insl
jno
xchg
lret
ds
push
mov
ljmp
hlt
jl
scas
lds
push
in
lods
mov
cli
mov
jmp
xchg
das
sar
cmc
pop
xor
pop
loopne
sub
mov
bound
loopne
stos
cli
sub
sub
mov
xchg
pop
arpl
idiv
mov
fmull
jmp
stos
pop
gs
cld
sub
push
jo
outsl
mov
inc
pop
iret
clc
add
pop
or
mov
mov
mov
cli
inc
incl
sbb
or
mov
testb
lret
sahf
or
pushf
ljmp
jecxz
mov
cmp
add
dec
add
test
cmpsl
add
sbb
sbb
xor
mov
and
xchg
add
aam
xchg
pop
icebp
inc
ja
sahf
jmp
cmpb
adc
gs
int
cmp
stc
enter
dec
sbb
cli
aam
mov
jmp
push
or
inc
inc
dec
cwtl
mov
clc
andb
lds
dec
cli
jmp
xor
adc
xchg
pushl
int3
adc
adc
pop
lret
test
xor
arpl
push
adc
vmaxsd
es
rorl
or
in
pop
inc
cmp
loop
lcall
pop
repnz
int
sahf
frstor
leave
outsb
setb
mov
lock
add
es
call
clc
cs
dec
sbb
leave
stc
sti
das
bound
pushl
inc
dec
stos
outsb
cmc
sarb
out
xchg
mov
enter
xor
mov
aam
leave
dec
pop
aad
lahf
xchg
les
es
xrelease
aad
lcall
cmp
and
sahf
aas
jecxz
mov
lahf
testl
daa
sub
ds
lods
pop
pushf
pushl
fadd
addb
and
daa
shll
mov
lods
fs
xor
bound
adc
cmp
mov
enter
cwtl
out
aam
sbb
rorl
decl
movb
xorb
xchg
mov
push
ret
es
clc
fdivs
stc
decl
dec
ss
pusha
or
leave
mov
add
loope
mov
mov
test
call
dec
xlat
dec
dec
inc
fadds
cmpsl
jae
pop
outsl
mov
ss
aas
dec
xor
xor
shll
loope
inc
cli
and
outsb
pop
dec
sub
push
loope
jo
jecxz
lcall
cmp
lret
jmp
fidivrl
mov
sahf
daa
aaa
add
aad
add
call
sub
lcall
inc
add
sbb
imul
jecxz
rcl
mov
out
pop
and
ret
mov
aam
pushf
and
int
pusha
add
inc
fwait
or
pop
ja
dec
movsb
ljmp
and
push
cld
jb
clc
ljmp
jbe
add
pushl
out
imul
dec
aad
xor
pop
cmpsb
out
xor
mov
jns
call
or
mov
xor
jb
loopne
mov
out
push
jnp
incl
sub
rcrl
pop
sahf
lret
lret
outsb
xor
lahf
mov
out
sub
lahf
enter
xchg
sub
test
jns
and
clc
scas
dec
xchg
mov
repz
imul
pushl
add
mulb
and
push
jmp
fistps
adc
lock
ret
push
gs
decl
imul
stos
add
add
decl
xor
je
lret
lret
icebp
outsl
push
ja
cmp
jns
cmp
gs
arpl
in
dec
push
ret
adc
aad
sub
add
mov
push
jnp
fchs
push
inc
jle
ljmp
clc
cmp
gs
in
push
cwtl
dec
mov
pop
popl
cld
pushl
mov
mov
in
loopne
jae
mov
lret
out
les
inc
imul
ljmp
or
lock
mov
mull
pop
xor
dec
pop
push
scas
out
add
div
inc
xor
fisttpll
push
adcb
call
popa
subb
sti
sahf
mov
adc
jmp
mov
adc
sbb
test
cld
push
xor
outsb
mov
mov
lret
mov
sar
mov
cmpsb
outsb
jge
fldt
divl
cld
call
lods
or
cmc
std
inc
pop
lods
jg
lahf
repz
sbb
aad
dec
cmc
fwait
ja
out
test
sbb
jnp
aas
rcll
vmaxsd
movsb
mov
xorl
imul
nop
mov
dec
cmc
mov
mov
pushl
clc
jo
test
sbb
repnz
cmp
push
xchg
mov
mov
jmp
pop
scas
inc
mov
cmp
repz
cli
jg
adc
pusha
jns
fisubs
lods
jle
xchg
adc
clc
incl
rcrb
pop
and
out
outsb
dec
pushf
std
imul
pop
inc
fmuls
outsb
and
shll
daa
imul
cmp
and
or
mov
dec
bound
lds
pushl
xchg
push
adc
push
or
dec
ficoms
out
add
mov
mov
cmp
ja
xor
sbb
in
mov
add
sub
aad
icebp
jl
add
rolb
add
and
mov
and
ror
out
and
inc
sub
lcall
mov
imul
es
je
mov
aam
pop
jle
inc
dec
push
jbe,pn
mov
ljmp
push
sbb
mov
mov
jl
jns
test
ljmp
lods
mov
cld
xchg
mov
push
jbe
notl
ljmp
je
iret
xchg
cmp
loop
decl
sub
mov
lods
add
mov
into
call
sbb
add
add
mov
lea
mov
mov
jecxz
mov
pop
rorl
add
sub
mov
shl
xchg
fwait
rorl
clc
adc
cmpsl
adcl
daa
mov
adc
ret
adc
jmp
ret
call
adc
fmull
flds
dec
lds
add
push
and
div
ljmp
in
notl
xchg
and
sbb
mov
xor
dec
xchg
ja
ret
push
xor
sbb
enter
std
jg
xor
inc
in
sti
in
and
fisttpll
lcall
push
cmp
test
or
sbb
mov
ret
xchg
mov
jo
stos
dec
iret
push
sub
and
addl
decl
pop
out
movl
xchg
test
xor
in
sub
out
gs
cwtl
jg
or
loopne
mov
lock
rorl
cmp
sbb
jne
sub
push
decl
cmp
mov
int
cmp
stc
xlat
gs
jmp
mov
jg
sti
je
je
clc
fisttps
mov
lahf
in
xlat
pop
pop
test
jg
lcall
insb
xchg
xchg
fld
lcall
dec
xchg
orb
mov
and
fnstcw
mov
cmpsl
add
and
lods
in
mov
pop
fsubr
mov
lcall
push
popa
shlb
sahf
mov
or
mov
loopne
sub
adc
xchg
add
decl
sub
add
lcall
xchg
sub
ja
lods
jb
mov
or
lret
inc
loope
hlt
mov
and
mov
aam
call
frstor
dec
xor
cld
pop
mov
fisubrl
out
dec
pop
sbb
shlb
mov
inc
xor
push
fisubs
out
pushf
add
xor
test
and
pop
pushf
push
xlat
jg
jns
inc
cmp
ja
pop
push
cltd
cmp
sub
pushl
cld
loope
mov
lret
add
jg
scas
mov
push
loop
jp
mov
adc
adc
mov
push
dec
or
xchg
clc
dec
cli
pop
int
in
inc
inc
push
mov
je
movsl
into
dec
mov
dec
push
movsb
or
cld
call
orb
test
scas
push
push
mov
add
pushl
repz
add
inc
adc
cmp
incl
icebp
add
mov
ljmp
repz
push
pop
sbb
add
lret
lcall
cmpsl
int3
add
push
sbb
cli
jne
clc
aas
and
xchg
out
jp
adcl
ficompl
xchg
fmul
pop
cld
repz
decl
mov
mov
cmp
xor
adc
push
mov
cld
jg
jg
mov
mov
mov
jg
insb
jbe
cmpsb
sbb
clc
sar
pop
loopne
sarb
loop
inc
mov
mov
sub
test
jge
xchg
out
mov
sub
lret
jmp
ljmp
adc
into
adc
cmc
iret
xlat
inc
scas
push
ds
push
mov
call
pop
and
fistpl
xlat
out
jl
pop
int
stos
cld
inc
in
pushf
out
xorl
cld
ljmp
dec
add
adc
fs
mov
stos
pop
cmp
xchg
xchg
mov
lods
dec
test
imul
incl
or
push
pop
cmp
sub
or
adc
ljmp
push
sbb
sbb
mov
pop
mov
ret
or
xchg
add
sbb
pop
and
mov
inc
pop
cmp
ret
jle
mov
mov
idiv
lcall
ud1
pusha
sbb
pop
mov
push
fsubl
shrl
jmp
jnp
cld
sar
filds
push
xchg
into
push
loope
cs
inc
sbb
mov
in
adcl
aad
cmp
pop
mov
jo
inc
out
mov
sub
cwtl
mov
xchg
mov
pop
pop
sub
pushl
mov
dec
lock
xchg
inc
arpl
inc
push
xchg
adc
add
stc
cmp
ds
jmp
lods
lods
bound
or
ss
jp
clc
push
gs
repz
int3
sub
adc
lcall
push
cmp
test
in
popa
push
pop
add
fbld
add
lock
js
dec
xchg
dec
cltd
xor
lods
int
jecxz
aaa
push
mov
push
mov
cld
aaa
hlt
in
hlt
mov
inc
push
lcall
inc
iret
lods
es
popa
imul
pop
add
inc
sub
aaa
pop
data16
jmp
stos
ret
inc
xor
aam
sbb
xchg
in
pop
pop
dec
ss
pop
sub
sbb
jmp
or
or
lods
cld
in
cld
sbb
gs
xor
and
leave
hlt
inc
int3
add
fcomp
or
je
and
mov
xchg
popl
jge
sub
push
lret
rolb
add
mov
lea
icebp
jo
clc
or
dec
idivl
icebp
ljmp
ljmp
repz
sbb
dec
pop
icebp
sbb
sub
inc
jge
jp
mov
push
aas
adc
jo
cmpb
in
aas
cmpsb
or
negb
in
repz
repnz
dec
leave
data16
call
pop
mov
in
jnp
popf
jmp
cli
ss
dec
dec
aas
sub
incl
lods
mov
dec
js
loop
mul
and
cli
xchg
pop
sub
push
cmp
and
decl
xchg
sbb
daa
push
pop
mov
call
mov
and
incl
popa
js
scas
aad
adc
repnz
mov
jge
jne
rcll
mov
aad
jmp
aaa
fcomps
push
in
popf
push
test
mov
lock
cmpb
adc
or
cs
jg
hlt
fists
and
dec
test
push
or
push
and
push
xor
enter
call
loope
adcl
add
jle
cmc
fisttpll
scas
pop
mov
mov
jge
les
mov
cmp
mov
aaa
sub
cs
imul
jb
leave
jb
add
pop
test
mov
pushf
jmp
sti
mov
sahf
or
inc
inc
inc
push
ljmp
adc
push
xor
jb
inc
dec
sbb
jnp
inc
push
sbb
pop
and
adc
in
cli
jmp
jp
loopne
in
mov
iret
fwait
pushf
xchg
xchg
add
xchg
sahf
pop
pop
fnstenv
push
push
rclb
jo
shll
scas
and
outsl
loop
rcrl
scas
inc
cmp
lcall
aam
and
dec
out
std
adc
bound
subb
jg
sbb
push
mov
adc
in
or
call
adc
inc
pop
inc
or
ljmp
mov
les
pop
xchg
or
mov
cs
incl
mov
in
dec
mov
inc
pop
pop
cltd
sub
rorb
jge
pop
aaa
fwait
divb
fisttpll
int3
push
inc
ror
add
stos
jbe
mov
icebp
sub
loope
out
xchg
paddsw
ss
das
push
mov
decl
push
outsb
ja
clc
push
into
imul
cld
out
clc
mov
pop
xchg
add
inc
sbb
push
call
pushf
lods
fnstsw
imul
jo
shlb
js
mov
jb
cmp
dec
add
call
adc
addr16
enter
pop
int
test
outsb
jae
stc
sub
lods
mov
pushl
jno
cwtl
push
enter
xor
cwtl
xchg
xor
repz
cs
cmp
dec
inc
adc
incl
cmp
adc
sub
adc
push
jg
inc
cli
repnz
incl
add
sahf
scas
ja
test
lods
pop
daa
out
enter
mov
in
cmp
out
fsubrs
stos
push
cmp
leave
in
dec
mov
cmc
divb
outsb
inc
decl
pushl
test
daa
push
stc
dec
push
cltd
pop
add
jg
in
incl
lds
pop
sbb
inc
cmp
pop
int
or
pop
aad
fdivs
inc
int
xchg
pop
icebp
shll
aaa
cmpsb
cmpb
arpl
movsb
nop
in
xchg
lcall
aam
fbld
xchg
mov
jmp
mov
pop
fimuls
subb
hlt
sub
sbb
pop
cld
pushl
dec
xchg
into
dec
loop
fisubrl
out
inc
push
dec
out
sbb
push
mov
push
lret
cmp
jnp
imul
jg
mov
cmp
fisubrl
pushf
xor
cmp
ret
cmp
xchg
cmp
jmp
cmp
scas
xor
scas
inc
inc
adc
inc
arpl
das
aad
out
loop
inc
testl
push
nop
mov
out
not
aas
sub
push
pop
jecxz
incl
and
stos
int3
test
test
stc
rcrl
jbe
js
fwait
jmp
push
shlb
push
ret
js
ficoms
xchg
push
es
call
or
sub
mov
mov
js
ljmp
jmp
test
bound
mov
adc
idiv
sub
hlt
pushl
stos
notl
add
into
xchg
and
cltd
insb
popa
mov
lcall
mov
pushf
or
push
inc
mov
out
bound
push
jbe
out
repnz
daa
fdivr
mov
lods
scas
les
fimuls
mov
mov
pop
pop
adc
jp
call
sbbb
cmp
pop
xor
mov
pop
add
jmp
xchg
jmp
mov
or
ret
ret
pop
ret
pop
mov
loope
ja
jne
enter
decl
or
aaa
push
stos
lds
and
stos
pusha
xlat
loope
sarb
fistpll
icebp
lcall
into
mov
or
cmpsl
cld
push
outsl
xchg
mov
decl
fucomi
fiadds
mov
jbe
sub
nop
jmp
cmpsl
ljmp
sbb
mov
cltd
andb
mov
cmp
xor
enter
mov
or
jmp
pop
mov
out
jne
pop
test
sbb
cmp
loope
decl
ret
or
sbbb
jno
sub
cmp
jo
nop
mov
dec
mov
ljmp
ret
cmp
or
cmp
insl
xor
or
jmp
mov
pop
jg
test
pusha
cmpsl
push
add
insb
pop
add
mov
sar
decl
add
cmp
and
sub
enter
outsl
xchg
xchg
or
adc
xor
jmp
pop
jle
movsb
loopne
add
fcmovb
stos
or
sbb
sub
sahf
or
inc
das
clc
lcall
adc
rorb
or
rcl
pop
sub
popf
in
sbb
dec
dec
in
or
incl
decb
clc
incb
in
jno
das
mov
xor
mov
mov
fs
jmp
sub
dec
and
xchg
outsb
lcall
sbbl
push
push
mov
ljmp
insb
cli
push
aam
inc
rcll
imul
adc
adc
lcall
pop
sbb
insb
cld
mov
mov
inc
xor
int3
repnz
icebp
jmp
ret
adc
jp
outsb
sub
lret
jns
mov
pop
bound
call
out
mov
jbe
ja
fdivrs
push
mov
jnp
pop
or
push
mov
inc
imul
sarb
insb
repz
inc
and
add
mov
mov
push
xchg
mov
push
jg
xchg
or
dec
or
ljmp
test
xchg
jo
jge
cs
leave
loop
cld
ljmp
adcb
jb
aad
cmp
jno
adc
push
out
jl
out
jg
mov
cmp
pop
shrl
sahf
push
add
out
mov
sbb
mov
incl
sbb
in
xchg
cmpsl
mov
or
mov
pop
cmp
ljmp
pop
jb
in
xlat
jnp
and
shlb
xor
jge
outsl
mov
ds
dec
adc
or
mov
sub
fldenv
outsl
outsl
add
sbbl
daa
xor
ds
incl
pop
pushf
imul
gs
or
dec
inc
and
xchg
movsb
int3
cli
adc
mov
ljmp
adc
popw
fstl
mov
loope
fisubrl
punpckhdq
dec
sbb
cwtl
flds
test
sub
inc
addr16
jp
iret
jae
imul
fisubrl
mov
jl
dec
jecxz
sub
xor
inc
icebp
aam
dec
fstp
arpl
std
movsb
sub
fmull
and
insb
clc
mov
mov
xchg
inc
xchg
sbb
aad
ja
fisttps
pop
jo
mov
inc
gs
ret
mov
fmul
int
push
test
xchg
negb
incl
out
aas
out
loope
xchg
xchg
inc
std
bound
or
jno
scas
lock
loope
or
call
xor
mov
inc
in
sahf
fisubs
sub
mov
ja
ffree
mov
sbb
xchg
cld
sub
pop
sub
sub
sti
jb
mov
add
mov
mov
cltd
push
xchg
pop
lcall
shl
lea
mov
adc
inc
or
add
rcll
jmp
andb
lods
imul
xorb
shlb
jb
mov
pushl
jg
fists
shll
lods
subb
cs
xlat
pushl
fs
mov
push
or
dec
fldcw
loope
xor
jmp
pop
inc
cmp
int3
jmp
dec
push
jg
sbb
enter
call
popa
cmpsb
loop
andb
lock
adc
dec
cmp
out
scas
cli
lcall
daa
cmp
dec
dec
pushaw
and
xor
push
out
out
xchg
add
scas
inc
xor
or
ljmp
int3
shlb
shl
xchg
push
js
orb
cld
ja
fidivrs
add
movsl
arpl
jmp
rol
mov
push
arpl
popf
jle
jnp
mov
popa
sbb
cld
jg
cld
mov
push
popf
sbb
in
ljmp
ljmp
and
out
insb
xor
sub
mov
clc
aad
pop
popf
adc
std
jae
xor
call
cmpsb
test
or
push
mov
sub
xchg
mov
scas
lods
jg
aam
in
addr16
pop
jns
xor
sarl
js
push
and
in
ret
mov
inc
insb
notl
aad
mov
and
sahf
or
add
ficomps
xchg
mov
scas
sbb
into
sbb
rclb
enter
lock
mov
cld
mov
jmp
push
ror
and
dec
gs
fdivl
adc
mov
sbb
dec
xchg
cmp
inc
ljmp
stos
sbb
mov
mov
ja
pop
fdivrl
pop
je
mov
decl
pop
mov
sbb
sbb
clc
insb
sub
outsb
adc
scas
imul
ljmp
ljmp
and
sub
cltd
cmp
and
fisubs
pop
sar
jmp
out
cli
lods
and
xchg
shll
inc
mov
jg
ss
xor
std
ja
cwtl
mov
loopne
test
mov
call
icebp
mov
xchg
pop
mov
lret
mov
pushw
and
je
jl
fsubrs
in
adc
call
xor
pop
pop
cltd
mov
adc
repnz
dec
shlb
adc
je
cmpsb
outsb
das
add
fwait
pop
inc
inc
sbb
xor
popa
pop
call
push
pop
xchg
pushf
icebp
les
decl
lock
in
loopne
adc
idiv
xchg
fnstcw
mov
aaa
push
test
stos
xchg
sub
pushf
jge
or
mov
xchg
hlt
mov
mov
push
cs
sbb
shll
es
call
push
add
call
idivb
mov
inc
pop
stos
push
mov
ret
inc
mov
dec
xor
inc
mov
in
lods
xchg
jno
addr16
push
jle
pop
adc
call
lods
jns
rolb
sub
sbb
mov
or
mov
ljmp
leave
rorl
dec
outsl
add
jbe
sbb
jmp
int3
adc
pextrw
jmp
in
std
jmp
xchg
cmp
mov
test
cmpsb
call
hlt
sbb
pop
ja
push
stos
mov
int
jmp
and
pop
sub
mov
jp
decl
jge
out
mulb
bnd
add
inc
lods
xchg
jae
mov
xchg
cmp
incl
sub
mov
xor
jae
pop
loope
addr16
pushl
jo
stos
pop
adc
push
ss
psubusb
jne
lcall
sub
push
or
or
jno
das
cli
jmp
sub
repnz
mov
out
fcomip
adc
and
movsb
dec
pushl
mov
jg
jae
push
fdivrs
sahf
jge
and
repz
decl
in
mov
out
daa
jns
and
pop
call
pop
or
cmpsl
mov
sbb
aas
cmc
aas
or
push
inc
xlat
js
mov
jo
xchg
adc
pop
push
test
add
push
movsb
jae
push
mov
ljmp
jmp
aam
jge
sub
sub
adc
cld
pop
lcall
mov
ljmp
cmp
mov
pop
les
mov
faddl
popf
in
cmp
and
js
or
sub
add
sub
shlb
fiaddl
adc
jb
rorl
mov
nop
jecxz
popa
jg
cmpsb
addl
cmp
lods
cmpsb
dec
loop
mov
push
mov
call
push
jno
rcr
mov
loope
jp
data16
lea
mov
pushl
sub
arpl
js
push
lock
xor
or
mov
call
jmp
xor
mov
adc
cmp
pop
loopne
adc
into
mov
mulb
cltd
add
push
pop
dec
or
test
mov
lods
xor
mov
mov
dec
pop
mov
call
aad
out
pop
inc
xchg
scas
mov
in
push
in
adc
jg
or
repz
shlb
jns
dec
aad
fsub
insl
call
sub
mov
scas
out
mov
call
into
iret
std
lcall
adc
push
mov
mov
xor
mov
imulb
mov
mov
push
adc
out
iret
cmp
loope
mul
test
mov
popf
mov
pop
int3
lods
jns
pop
out
ds
shll
mov
push
int
inc
sarb
mov
xchg
adc
jns
ficompl
pop
gs
inc
pop
pop
call
out
aad
pop
xchg
addr16
fisttpl
add
lret
mov
pop
push
std
call
xor
idivl
lock
mov
testb
pop
lods
insl
or
dec
loopne
mov
push
fmulp
je
or
std
clc
test
pop
mov
hlt
lcall
dec
jns
mov
aam
pop
clc
sbb
xlat
test
lret
ret
hlt
fldcw
in
subb
loope
dec
dec
cltd
ljmp
add
int
dec
loopne
daa
pop
outsb
jnp
lahf
pop
daa
xchg
add
xor
inc
mov
mov
lret
call
leave
dec
lcall
cmp
jmp
bnd
in
ds
jae
xchg
lret
pop
inc
daa
adc
out
push
icebp
jg
bound
sub
sbb
sbb
ljmp
aad
out
or
sub
xchg
test
jae
push
ljmp
sbb
jnp
sar
incl
loopne
mov
inc
mov
mov
scas
es
push
xchg
pop
test
inc
adc
ljmp
out
sahf
enter
dec
in
aaa
aam
loop
call
inc
mov
inc
pop
leave
fsubrp
xor
addr16
stos
push
dec
sub
push
call
sbb
sbb
jle
jmp
les
mov
ror
jp
sub
loope
jg
pushl
cmp
mov
or
sbb
repnz
popa
xchg
aam
cmp
cmc
fidivrl
ficoms
add
or
aam
or
mov
jne
call
rclb
cmp
push
js
pushf
dec
sbb
loopne
fdivrs
pushf
jecxz
scas
dec
lahf
sbb
call
lcall
pop
mov
aad
cmp
lock
pop
add
sub
mov
ljmp
dec
lcall
les
inc
cmp
outsl
lahf
repnz
or
inc
insl
cpuid
xor
into
sub
in
mov
fsubp
xchg
bound
out
jmp
push
mov
sahf
test
addr16
repz
mov
incl
mov
fisttpl
iret
and
cmpsb
imul
push
pop
inc
mov
cmp
std
in
lds
adc
dec
sbb
push
and
inc
sahf
ret
orl
sti
add
popa
loope
bound
adc
sub
js
mov
push
in
addl
dec
testl
push
fldt
loope
dec
or
into
fsubrl
incl
test
and
pop
stos
inc
pusha
mov
sti
nop
adc
pop
xchg
into
pusha
cmp
scas
jae
ljmp
push
push
hlt
out
mov
stos
jg
call
xchg
pop
icebp
jl
jmp
js
out
daa
rorl
ljmp
mov
lret
ret
imul
mov
dec
out
in
stos
int3
shrb
decl
lcall
imul
pop
cmpsb
lods
in
push
xor
test
xchg
clc
inc
add
inc
push
stc
jno
jns
jle
mov
jmp
xchg
lret
outsl
cmc
jle
push
pop
cs
dec
std
sbb
sub
gs
incl
movsl
add
js
sbb
xor
lret
mov
enter
cs
dec
add
negb
sbb
scas
push
clc
andl
out
lret
xchg
mov
xchg
divl
lret
lahf
dec
ljmp
add
cmpsl
mov
or
push
mov
fbld
loop
mov
decl
sbb
mov
fbld
insb
push
lods
dec
sub
fsubrl
fistps
sub
xchg
xchg
and
add
mov
push
ss
shlb
idiv
out
xchg
ss
sub
inc
clc
jne
inc
and
or
incl
in
fsubp
jp
xor
mov
negb
into
leave
inc
pop
mov
pop
insb
dec
aad
call
aaa
test
sti
insl
popa
js
push
push
fwait
inc
ja
sub
pushf
pop
jp
push
jg
mov
ret
mov
and
rcrl
sbb
dec
sbb
sbb
enter
mov
movsb
stos
aam
cld
mov
mov
mov
js
or
mov
add
push
arpl
out
sbbb
addl
inc
call
cmc
jl
das
xchg
adc
dec
call
push
clc
inc
xchg
xchg
sbb
mov
cwtl
jg
xchg
inc
xchg
xor
cwtl
cmc
mov
xor
jmp
fld
scas
xchg
xlat
call
mov
cmp
inc
cmp
cmpsl
loopne
push
mov
mov
sbb
lcall
lahf
ds
jmp
and
mull
stos
shrb
sbb
icebp
pop
enter
or
out
xlat
out
loope
les
adc
push
ss
decl
sbb
into
in
pop
cmp
adc
add
push
jmp
push
xchg
loop
je
cli
push
cmpsb
aad
cmp
movsl
jecxz
ds
sub
decl
data16
pop
loop
cs
aaa
lods
loope
fisubrl
neg
adc
decl
std
mov
jg
pop
popf
leave
hlt
addr16
movsb
and
push
or
xchg
sbb
jecxz
lcall
test
rclb
pusha
cltd
dec
or
mov
in
xorb
jmp
dec
mov
int3
leave
jmp
mov
push
outsl
es
add
bound
or
dec
jle
std
jmp
sbb
imul
mov
pop
mov
in
out
ja
out
movsb
mov
mov
sub
lcall
rclb
sub
sti
ljmp
clc
mov
sbb
sahf
pop
fst
add
stos
jl
cwtl
mov
loop
loop
decl
lock
mov
lahf
ja
xor
push
pop
stos
add
pop
adc
sub
sti
xor
aaa
cld
incl
mov
pop
xchg
stc
call
adc
in
cld
loope
sbb
lcall
lcall
pop
clc
jae
mov
scas
dec
inc
aam
sub
mov
test
pop
lock
decl
sbb
lahf
ret
sbb
lret
sub
and
cld
xchg
test
ljmp
xlat
sub
cmp
imul
scas
stos
or
ljmp
lret
mov
aad
test
mov
dec
xchg
inc
inc
pop
sub
test
jnp
mov
cmp
lahf
lcall
movsl
clc
mov
adc
aam
out
fs
mov
mov
test
mov
int3
jl
nop
pop
pop
cmp
or
clc
icebp
xor
mov
add
pushl
inc
stos
jle
mov
pushf
cmp
push
xchg
loope
out
addl
inc
mov
mov
insl
push
and
fxam
jno
jge
ret
jg
in
xchg
pop
xchg
xchg
lods
jg
or
jo
lret
pop
xchg
mov
scas
fists
jo
loope
mov
shll
inc
pop
std
imulb
sar
pushl
mov
or
push
in
lea
fmull
jle
in
jbe
jg
add
xchg
sbb
sub
loopne
test
pop
add
sub
int
fdivrl
out
xlat
jle
fcomi
data16
insl
out
pop
dec
xor
daa
mov
out
or
je
fldcw
push
test
mov
add
enter
call
mov
mov
ret
sti
jmp
cs
dec
divl
sub
mov
cmp
xchg
ja
ljmp
test
inc
cwtl
outsl
add
add
xor
or
push
addr16
and
cmpsl
ss
ja
xchg
mov
int
sbb
push
in
xor
stos
aad
add
pushl
imul
sub
dec
mov
cwtl
icebp
rolb
pushf
sti
iret
xor
insl
insl
repz
mov
cld
inc
ret
add
push
aam
lock
sbb
cmp
jg
imul
movsl
cld
test
fisubrl
adc
out
outsl
sub
inc
int
out
xchg
mov
dec
and
mov
push
daa
fcompl
xchg
cmp
shrb
fbld
sub
pop
adc
repnz
js
lcall
clc
je
push
adc
push
jmp
je
leave
cltd
cmp
test
cmpl
jb
scas
jmp
xlat
mov
faddl
incl
cmp
adc
xchg
mov
hlt
jg
or
test
cmp
int
lcall
xchg
cmpl
lret
aad
ljmp
push
into
sub
fldenv
repnz
stc
jg
das
loope
cmp
call
xlat
mov
add
rorl
mov
ds
lahf
add
out
icebp
xchg
push
and
out
dec
add
add
ret
dec
dec
pusha
stc
xchg
int
mov
loopne
sbb
or
outsb
cmpsb
gs
out
adc
mov
out
cli
adc
fwait
fs
push
jmp
insb
fstl
cmp
sar
idivb
xor
stos
add
push
test
pushl
cmpsb
sti
leave
fstl
idivb
inc
lret
dec
or
pop
stc
push
stos
int3
int
ds
mov
fldl
push
mov
pop
mov
sbbl
sbb
pop
push
pop
cli
xor
push
shlb
dec
fdivl
mov
push
push
add
jae
jno
sbb
mov
arpl
ljmp
sbbl
icebp
fsubrl
mov
movsl
adc
lock
xlat
sbb
insl
mov
pushl
test
test
inc
fistl
fucomi
sub
pop
inc
ret
inc
pop
jbe
mov
dec
jg
insl
test
pop
cmp
sarw
add
ljmp
mov
push
mov
add
sub
loop
into
stc
inc
mov
dec
adc
ret
cmp
cmpsl
pop
inc
cmpsl
data16
pop
int
inc
sar
mov
dec
addl
lcall
sti
lods
insl
sbb
repnz
mov
and
ljmp
jmp
aad
ja
or
pop
fs
aas
into
mov
adc
testl
gs
scas
sub
ljmp
pushf
stos
xor
incl
lods
cmpb
mov
das
in
stos
adc
lcall
adc
and
out
mov
addb
jne
jo
xor
add
insb
cld
out
sub
pushf
gs
mov
into
mov
xor
mov
mov
sbb
into
push
jno
push
jp
sbb
inc
fidivrs
movsb
push
out
pop
xchg
inc
insb
sbb
test
mov
dec
push
pop
cmp
pusha
rcrl
subl
jmp
cld
ljmp
inc
push
jo
rol
mov
jle
je
repnz
popa
sbb
jo
jge
xor
gs
cltd
xchg
jnp
sbb
cmp
int3
xchg
imul
hlt
pop
pop
xchg
sar
pop
cmp
mov
dec
mov
push
stos
sbb
out
dec
and
lock
mov
sbb
and
aaa
cli
adc
imul
jg
mov
lret
mov
or
fcoms
daa
mov
xor
fisubs
fadd
cmp
aam
inc
inc
in
add
sbb
sub
ljmp
insb
mov
bound
adc
cmp
cmpsb
xchg
inc
fdivs
push
push
push
aas
push
lcall
mov
out
fistpl
ss
xchg
cmp
cmp
aad
adc
decl
xor
fisubs
or
mov
addr16
cmpsb
test
lret
mov
or
or
incl
test
loop
adc
test
push
outsl
inc
je
and
stos
cltd
outsb
xchg
test
call
aam
lds
or
mov
cwtl
jl
in
sbb
sbb
and
jmp
jo
mov
lahf
outsb
adc
std
pop
dec
sarb
pop
sbb
cmp
pop
or
imul
ljmp
decl
jp
and
mov
test
pop
push
lea
jmp
cmc
stos
lcall
mov
sub
pop
subb
test
mov
incl
lods
loopne
sub
out
mov
push
mov
sbb
mov
or
popa
mov
fwait
inc
movsb
clc
cmp
leave
cs
test
inc
pop
xchg
ja
push
enter
jg
xor
scas
push
adcl
xlat
cli
mov
or
inc
add
pusha
mov
movl
pop
sub
stos
pop
shl
dec
mov
cmpsl
jle
pushl
in
out
sbb
adc
adc
mov
cmp
ret
xor
lcall
jl
xchg
jb
loopne
cmc
test
ljmp
inc
lret
cmp
repz
inc
or
xchg
in
dec
in
cltd
jns
movsb
mov
insl
decl
aam
mov
scas
mov
xchg
out
sub
mov
push
daa
dec
divl
cmp
cli
ljmp
adc
mulb
dec
insb
mov
or
and
or
mov
je
add
or
lcall
xor
inc
dec
fiadds
mov
cmp
jns
pop
shll
pop
mov
pop
iret
aam
xchg
pushl
and
or
aam
pop
cmp
push
leave
aam
pop
xchg
shlb
mov
sbb
jbe
inc
cmp
scas
popa
sub
orb
ret
cltd
mov
mov
xor
inc
mov
movsl
out
aam
mov
aam
stos
idiv
jmp
mov
push
push
xorb
sbb
jle
pop
adcl
mov
xor
decl
pusha
dec
pushf
inc
pop
cmp
mov
sti
test
incl
add
add
xchg
les
das
ds
repz
iret
enter
ljmp
cltd
negl
test
rorb
lods
orl
push
lock
ljmp
and
shrb
cmpsl
cmp
mov
out
in
scas
xlat
adc
test
loopne
imul
incl
pop
cmpb
mov
dec
adc
xchg
std
mov
fsub
fiaddl
jp
cmp
mov
dec
into
mov
add
icebp
push
data16
dec
pop
addr16
stos
rclb
mov
add
lcall
fwait
pop
cld
hlt
aaa
push
add
add
push
mov
mov
popf
pop
jg
inc
aam
adcl
or
sbb
fstpl
das
idiv
call
inc
xor
cmp
cmp
push
imul
dec
xor
arpl
hlt
scas
cli
lcall
sbb
repnz
and
insb
adc
shlb
adc
pop
call
push
and
lret
add
negb
mov
dec
nop
adc
mov
lcall
pop
out
fadds
push
mov
mov
int
test
pop
lea
call
jb,pn
mov
sbb
daa
sub
inc
loop
mov
xchg
fwait
mov
jp
leave
xchg
scas
mov
dec
mov
sub
por
sbb
iret
push
cmp
pop
pop
incl
scas
movsl
aas
mov
fdivl
dec
fdivl
jnp
test
or
in
mov
popf
loop
sbb
mov
pushl
bound
lret
mov
imull
ret
mov
mov
movsl
mov
ss
jg
cld
loope
add
adc
stos
mov
ficoml
das
out
mov
cld
xor
imul
lcall
sub
mov
push
call
sub
fstl
add
push
add
stos
xchg
fistl
adc
loop
call
cltd
mov
lods
fsts
cli
mov
pop
cli
push
lods
sub
mov
xchg
icebp
add
loopne
mov
cmp
decl
in
adc
fwait
loopne
repz
mov
dec
mov
xchg
sbbb
dec
jle
adc
repz
int
shlb
pop
jnp
sahf
mov
xchg
mov
iret
in
pushl
pop
hlt
mov
cli
inc
inc
movsb
and
sub
pop
or
sub
pushl
mov
lret
fwait
stos
lea
fsubrs
ret
xor
out
aam
pop
dec
push
mov
in
out
and
xchg
gs
imulb
jno
pop
scas
sbb
pop
push
cmp
push
divl
mov
ror
pushl
fists
add
out
ljmp
pop
xor
fbld
add
or
outsl
adc
xorb
insl
mov
jmp
mov
lods
xchg
fwait
sub
loop
add
hlt
jl
cmp
cmp
push
in
or
arpl
mov
mov
clc
push
jl
push
mov
hlt
jg
mov
pop
je
jl
sbb
je
fmull
in
cmp
ljmp
movsb
and
push
mov
lcall
leave
cmp
pop
data16
call
sub
jmp
fidivrs
adc
clc
jno
pop
xchg
shlb
pop
cmpb
xor
pop
lock
decl
cmpsb
inc
sbb
sub
sbb
xor
fbld
cs
xor
mov
clc
jne
cmc
push
dec
cmc
popa
lea
cmpsl
idivb
and
outsl
inc
mov
inc
pmullw
xchg
insb
mov
ret
mov
sub
inc
jnp
jb
decb
pushl
insb
aaa
jae
adc
loope
rcll
xlat
push
push
push
sahf
sub
cld
js
sub
pop
pop
inc
mov
add
mov
inc
and
inc
cld
pushl
cld
aas
sbb
add
aas
decb
jl
jmp
out
mov
dec
in
jnp
lret
loop
stos
mov
popa
push
sarb
es
roll
mov
xor
xchg
mov
ja
jp
shrl
or
stos
sbb
je
push
ud0
lcall
mov
dec
seto
and
repz
rcr
and
loopne
or
mov
call
and
mov
outsl
lea
repz
jns
and
je
jne
inc
or
aas
out
sahf
test
push
aam
sbb
lds
or
pop
inc
loop
mov
cmp
inc
mov
sti
inc
mov
dec
mov
fisubrs
xor
jg
add
inc
push
es
pop
mov
jecxz
arpl
pop
cmp
incl
mov
loope
je
cmp
or
mov
cmc
lods
adc
and
xchg
in
adc
hlt
in
dec
ljmp
mov
iret
xlat
in
sub
inc
ljmp
cli
push
int
mov
aam
mov
pop
mov
dec
icebp
idiv
xchg
cmp
cmp
incb
imul
jg
jae
movsb
mov
les
xchg
add
xchg
shl
call
pushf
out
das
loope
in
stos
push
repz
mov
cmp
xor
xor
adc
int
jmp
iret
leave
aaa
in
cwtl
xchg
popl
xlat
inc
mov
xchg
xchg
icebp
mov
mov
mov
fdivrs
bound
mov
lcall
push
add
and
ret
lret
clc
mov
cmp
mov
xor
cli
push
xchg
push
lcall
sub
push
leave
mov
test
xor
xor
jmp
roll
xor
mov
ljmp
lds
sub
imul
popf
adc
ljmp
arpl
jb
das
pop
inc
js
push
push
add
cmpsb
lret
pop
mov
xlat
push
std
ss
jno
decl
ss
aas
xlat
cs
decb
popf
aam
xor
mov
shr
jae
add
mov
pop
lcall
out
xor
and
jl
and
mov
mov
sahf
faddl
loopne
sub
leave
adc
cmp
mov
fwait
lock
and
cmp
fldl
shrl
pushf
pop
inc
jb
stos
mov
jno
std
jae
dec
and
icebp
loope
cmovbe
mov
cli
pop
mov
add
aad
cmpb
movsl
call
ja
cld
sti
inc
std
test
jmp
movsb
cmc
pusha
shl
lret
or
mov
xor
ljmp
dec
out
pop
sbb
pop
pop
fdivl
loop
pop
outsl
jl
mov
add
pushf
jnp
pusha
dec
lret
scas
test
sub
pop
add
lret
sub
dec
jp
jg
insb
pop
ret
sub
mov
rcrb
push
xlat
stc
adc
popa
xor
add
lock
fcmovne
shlb
cmp
ja
sahf
dec
aad
adc
pusha
add
xchg
pop
push
and
std
call
mov
dec
dec
xlat
and
nop
add
mov
aaa
push
jge
mov
cwtl
fmul
inc
aam
in
dec
mov
jne
incl
mov
or
and
in
sahf
pusha
rcr
imul
lret
or
cwtl
push
aad
in
jle
jb
adc
fildl
mov
mov
xchg
ljmp
push
incl
mov
mov
shll
sub
idivb
test
sbb
cmc
test
test
shll
pushl
inc
or
das
nop
fmul
and
push
std
dec
sub
cmp
clc
pushf
cld
mov
stos
leave
pop
xor
inc
outsl
mov
fcoml
mov
xor
dec
stos
jg
icebp
shrb
mov
fisubl
mov
mov
nop
cmpl
cmp
pop
sbbl
pop
in
daa
into
mov
cwtl
addr16
mov
js
add
sar
jmp
sub
jbe
out
idiv
cs
sbb
iret
pop
pushl
out
push
aaa
push
mov
mov
jae
mov
iret
lods
int3
mov
jg
push
mov
jg
movsb
cli
stos
adc
push
xchg
and
cwtl
jb
sub
mov
xchg
or
test
es
xchg
sahf
test
push
mov
call
mov
fwait
xchg
add
sub
sub
shrb
jbe
push
fldcw
dec
loop
xchg
ja
cmp
out
idiv
pop
ss
lods
sbb
mov
mov
jo
loopne
incl
ja
lret
xchg
push
adc
test
or
xlat
loope
lret
mov
jmp
scas
add
push
fld
cmp
enter
pop
aas
jae
test
pop
cmc
negb
push
cli
incl
je
test
mov
pop
sti
cmp
addr16
ljmp
cmp
popa
add
push
test
clc
iret
pop
test
xchg
out
aaa
leave
lfs
out
nop
mov
dec
pusha
dec
jecxz
lret
dec
mov
ljmp
mov
and
insb
movl
push
mov
jl
movsb
mov
cli
cmp
mov
mov
or
dec
adc
and
jmp
dec
stc
out
scas
jg
out
jne
mov
fwait
mov
sbbl
testl
sub
adc
xchg
push
dec
sbb
arpl
pop
and
lcall
rorb
adc
pop
call
mov
adc
and
jge
les
xor
ja
mov
or
sub
sub
aad
push
jge
and
jle
andb
decl
out
hlt
dec
mov
daa
js
fstpl
ds
stos
les
nop
push
and
add
mov
cmp
inc
lock
movsl
lret
gs
arpl
jb
xchg
and
push
fcmovb
pop
pop
leave
push
outsl
mov
jne
cmpsl
outsl
dec
add
lahf
icebp
mov
jnp
mov
call
loopne
cmp
pop
jge
lret
rolb
mov
add
pop
add
scas
out
incl
cmp
mov
cltd
fsts
pushf
jle
sete
dec
mov
pop
or
mov
filds
lds
pop
popf
jle
xchg
push
pop
sub
pop
test
fwait
jecxz
mov
lock
call
jno
repnz
fcomp
mov
cltd
pop
adc
cs
mov
outsl
addb
fbld
shl
push
in
xchg
je
mov
dec
popf
mov
fld
je
in
cwtl
pop
and
or
add
push
ret
mov
jnp
aaa
clc
fnstenv
pop
or
loope
das
fdivrs
lcall
fistl
pop
scas
imul
ret
pop
jb
mov
xor
mov
or
pushl
xor
xorb
cli
insb
pop
push
mov
lcall
ds
ss
gs
cmc
cmp
sti
in
push
int3
xor
push
cli
test
jb
out
repnz
call
cli
and
push
cmpsb
or
inc
out
push
sub
mov
mov
cmp
xlat
dec
dec
loopne
lcall
push
ss
cmpsb
jecxz
xchg
hlt
jbe
mov
dec
add
fdiv
mov
add
cmp
dec
push
mov
fs
decl
cs
insb
add
jl
stos
adc
test
popa
pop
movsb
inc
daa
sbb
cld
pop
dec
das
add
inc
movl
ljmp
call
push
dec
mov
xchg
js
lahf
or
stos
andb
sbb
shlb
cmp
jb
sahf
push
inc
sahf
pop
pop
dec
lds
stos
idiv
iret
call
push
mov
mov
addb
repz
mov
add
mov
sbb
push
add
clc
gs
les
push
xor
icebp
jl
or
cld
decl
clc
mov
pop
cld
stc
sti
mov
call
mov
test
enter
fwait
ror
cmp
dec
mov
ljmp
test
repz
xor
ret
popf
scas
dec
or
adc
mov
mov
hlt
jl
cmp
addr16
es
sub
jg
stos
clc
mov
mov
ljmp
add
dec
push
xchg
inc
jae
into
icebp
fdivr
lcall
das
ljmp
push
mov
or
nop
adc
clc
push
iret
and
mov
incl
fbstp
int
rol
repz
mov
fmul
sub
jmp
adc
fiadds
xchg
dec
les
scas
pop
insl
xchg
push
inc
mov
loop
rclb
data16
ljmp
lods
out
fwait
or
cmp
hlt
sbb
mov
loope
ljmp
push
add
and
jle
movsl
mov
scas
fs
test
cmc
imul
jle
clc
push
test
loop
decb
mov
mov
inc
push
ds
xchg
or
pushl
hlt
into
pop
mov
lret
pop
es
jno
inc
adc
fidivs
icebp
and
lods
nop
ds
dec
pop
xor
fisubs
pusha
addr16
mov
dec
add
dec
jnp
xchg
bound
lock
xor
and
add
jmp
mov
mov
sub
mov
push
bound
addr16
mov
sbb
pushl
inc
sub
push
das
xchg
xor
add
jl
cltd
xchg
lods
in
mov
adc
mov
sub
lcall
cmp
sbb
xchg
jmp
and
arpl
imul
dec
jnp
test
push
inc
nop
frstor
pop
adc
push
or
mul
cmp
cmp
mov
insb
rcll
sub
popa
jmp
mov
jnp
xchg
mov
cmc
ret
pop
jle
adc
cmp
pop
cmpsb
aad
push
xchg
push
add
lcall
scas
jo
adc
ss
and
xchg
cmp
ljmp
imul
lock
sub
jae
mov
jae
fildll
mov
mov
add
loopne
dec
mov
jnp
lret
dec
addr16
stos
dec
popf
pop
cmp
sbb
test
cmp
fmull
decl
scas
mov
fimull
test
pusha
dec
std
add
imul
sti
jmp
int
cltd
and
mov
out
push
mov
pop
stos
adc
scas
inc
adc
inc
adc
out
cwtl
cli
push
sahf
inc
xor
sbb
pop
mov
push
lahf
or
adcb
pop
and
decl
jno
adc
push
mov
or
pushl
pop
int3
inc
call
jo
add
push
add
push
mov
xlat
dec
mov
pushl
loope
push
sub
xchg
test
lret
pusha
ret
insl
std
lock
fwait
subl
pop
sbb
xor
nop
ret
aas
arpl
loopne
push
xchg
adc
std
enter
mov
incl
cld
inc
cmpsl
sbb
mov
xchg
push
push
dec
xchg
xor
ljmp
jno
cmp
push
pop
scas
cli
pop
int
xchg
mov
sbb
ret
cmp
jmp
insl
sub
scas
addr16
loope
cmc
sbb
gs
push
roll
push
leave
fdivl
outsb
pusha
jg
in
push
out
out
mov
xchg
jns
mov
sub
out
mov
lock
js
jg
imul
rol
pusha
or
mov
aad
les
mov
sar
push
mov
leave
xor
cmp
hlt
and
push
add
adc
jbe
int3
scas
shlb
push
inc
pop
xchg
fwait
pushl
jp
loope
cmp
and
cmp
pop
push
push
xchg
incl
pop
cmp
jmp
or
cs
shrb
shl
xchg
push
inc
xchg
loope
in
dec
push
cmpsl
adcl
lea
sub
movb
lcall
xchg
inc
pusha
repnz
mov
aam
int
mov
incl
jp
cltd
test
sarb
fldcw
jmp
mov
and
in
mov
test
fcomps
stos
je
xor
inc
push
push
popf
xchg
aam
lret
int3
cwtl
in
cld
fcomip
xlat
sbb
mov
outsb
rcl
xchg
aas
dec
push
ljmp
lret
test
dec
and
incl
jae
sbb
fwait
adc
cmp
stos
idivb
xor
xor
popa
cld
ljmp
push
decl
jle
lds
inc
out
dec
adc
cmpsb
cwtl
xor
jmp
xor
mov
dec
je
sbb
fs
lods
pop
mov
fwait
insl
out
jp
mov
adc
call
mov
pop
dec
shll
and
ljmp
mov
pop
or
lods
sbb
adc
jmp
loop
inc
sti
cmp
enter
inc
jns
sbb
or
adc
jmp
cwtl
es
jge
and
aad
into
inc
lcall
ret
out
inc
adc
or
jb
jae
das
clc
push
jl
inc
jne
mov
rcl
fwait
ljmp
or
jmp
pop
cmp
sbb
in
add
rcl
xor
cmp
mov
jmp
and
add
ss
sbb
sub
xchg
inc
xchg
jmp
dec
push
mov
hlt
sbb
ds
xchg
ljmp
aam
sbb
outsb
inc
jl
cltd
pop
pusha
pop
in
mov
fcomip
jno
sub
adc
scas
iret
xchg
cs
rclb
and
decl
and
mov
mov
or
cmp
push
std
clc
in
notb
fistpll
sahf
arpl
cmc
xchg
shll
pushf
cwtl
jb
clc
divb
adc
add
jl
arpl
outsb
loop
inc
jo
imul
and
inc
sbb
pop
push
inc
fdivrp
push
dec
jns
adc
test
int
int
cmc
mov
ljmp
mov
jp
test
sar
incl
nop
int3
dec
pushl
mov
cmp
sti
mov
mov
mov
cmpl
and
cwtl
xchg
or
inc
pusha
push
lret
ret
dec
xchg
pushl
jb
add
xchg
cmp
fs
out
xchg
pusha
inc
jns
lret
mov
incl
adc
ds
mov
push
scas
xor
lock
add
in
repnz
rcll
adc
loopne
das
lahf
adc
fisttpll
shr
mov
dec
out
and
scas
int3
or
adc
push
test
lret
leave
ljmp
in
xor
addl
mov
pushl
stc
mov
add
stos
push
dec
mov
cmpsb
negb
js
or
jmp
cmc
sahf
sub
into
rorl
out
sbbl
add
jmp
mov
out
mov
out
adc
jbe
ds
push
cmp
xchg
cs
scas
ret
lret
mov
mov
call
addr16
je
inc
test
nop
movlps
mov
scas
push
cmpl
test
add
add
rcll
inc
mov
shlb
ljmp
test
jno
repz
lock
ret
pop
in
sub
inc
pop
jmp
ljmp
pop
mov
mov
daa
or
jo
inc
imulb
pop
xor
dec
mov
ja
push
icebp
call
xchg
mov
out
bound
mov
and
inc
out
and
shll
jle
enter
cmpsl
popa
inc
xor
decl
es
sub
mov
xabort
jns
inc
pop
fwait
jo
and
and
cmp
in
mov
fcomip
cmp
jnp
arpl
push
and
nop
xchg
sub
shrb
cli
ljmp
divb
nop
push
xor
sar
incl
sub
mov
inc
fisubs
cs
dec
aad
sar
out
mov
imul
lods
cwtl
sub
sub
hlt
in
cwtl
mov
ljmp
mov
mov
ja
js
xchg
push
dec
mov
add
add
incl
and
and
push
pop
mov
adc
fisttps
mov
cli
xor
jmp
lcall
outsb
cli
imul
mov
jb
cltd
sub
pushl
leave
dec
sub
fisubrl
pop
xchg
lret
out
cmp
mov
jg
cmp
jns
mov
dec
and
adc
ret
cld
xchg
into
push
stos
das
shrl
lcall
sub
lcall
sbb
or
inc
mov
mov
dec
dec
mov
ljmp
shr
add
inc
fs
push
xor
mov
sti
inc
jne
cmpsl
ret
pop
push
xchg
inc
cld
or
movsb
popf
push
fdivrl
enter
aaa
lds
ss
cmp
pop
cld
mov
sbb
push
bound
push
jae
add
pushl
cmp
js
mov
mov
rclb
cmp
cmpsl
sub
jns
dec
mov
xor
xorl
lret
je
lret
inc
cmp
test
mov
add
fdivs
les
es
outsl
mov
adcl
idivb
sbb
jmp
push
ss
mov
pusha
adc
dec
sbb
mov
adcl
inc
subl
lcall
push
adc
stos
pusha
sar
mov
mov
mov
nop
cmp
outsl
divl
loopne
push
popf
sbb
lcall
jp
lock
movsb
out
pusha
jnp
cmp
pop
cmp
jl
stos
lahf
ficompl
adc
and
nop
fcomip
jmp
aam
mov
cmc
mov
xor
mov
or
pop
aaa
adc
pushl
pop
pop
loop
dec
jp
adcb
mov
jmp
loop
ret
in
and
sub
sub
cmp
jge
add
loope
pusha
adc
jg
lock
and
add
scas
insl
outsb
aas
xor
insl
pushf
xchg
popf
lods
imul
lods
ret
or
and
test
cmpsl
add
jae
or
mov
push
ret
pop
decl
fisubl
loope
sub
lock
outsb
jnp
jae
pushw
shll
out
jno
add
in
ljmp
fisubrs
lret
sub
xor
cmpsb
insl
or
mov
test
mov
mov
std
lret
data16
popa
pavgb
test
test
mov
cld
rcrb
lock
outsb
mov
adc
and
adc
scas
lcall
mov
push
in
mov
mov
inc
rcrl
ret
inc
inc
or
jmp
push
sub
pop
adc
sahf
rcrl
jns
sub
sub
in
in
add
ret
jp
sbb
sti
sahf
cmp
in
and
fstps
sti
mov
xor
mov
sti
inc
rcl
push
pop
inc
inc
push
mov
ja
in
lock
fldl
in
xchg
or
or
les
bound
or
addr16
pop
push
cld
xchg
sub
test
and
repz
ret
fcoml
mov
call
je
push
xor
rcrl
popl
fs
es
xor
bound
fstpl
fistl
jb
mov
jmp
push
jno
rcr
ja
cmp
and
rorl
cmp
inc
cwtl
fwait
jl
out
mov
pop
maxps
arpl
loopew
push
in
cld
call
repz
lock
cmpsb
das
add
in
popa
pop
lods
push
cmp
popa
clc
incl
lock
arpl
mov
cwtl
je
das
fadd
pop
adc
movsl
sbb
mov
and
ljmp
lods
mov
inc
popf
movsb
jg
rorl
test
xor
mov
xor
jae
add
mov
loope
hlt
sti
call
lods
push
push
jp
rcll
xor
adc
out
in
clc
xchg
adc
arpl
decl
repnz
lret
inc
cmpsl
fsubrl
fst
pop
push
mov
push
xchg
mov
jno
pushl
push
leave
sti
push
mov
xchg
pusha
sbb
cmp
aam
cmp
jle
pop
and
pushl
xchg
mov
testb
das
pop
lds
leave
jge
shrl
jg
mov
push
and
inc
clc
test
xor
jnp
mov
add
jo
testb
into
and
ljmp
bnd
lods
lods
adc
sbb
xchg
inc
hlt
dec
pusha
jmp
xchg
xchg
push
or
lcall
mov
movsl
test
fs
jmp
fs
and
test
sbb
sbb
pop
inc
jo
test
sbb
les
mov
int
std
push
int3
jl
incl
cltd
xchg
or
popa
and
repz
test
rcrb
incl
clc
insb
pop
seta
push
and
jp
adc
or
scas
cli
lock
mov
jle
dec
mov
lcall
add
inc
push
imul
sub
jne
jle
popf
xor
xchg
adc
cwtl
sbb
in
aam
incl
dec
out
sbb
mov
pop
dec
or
cmp
shll
lret
jg
or
mov
and
sub
xchg
out
nop
lods
scas
sub
arpl
mov
push
mov
mov
xchg
dec
shrl
sbb
lods
mov
sti
subb
aam
nop
repz
cmpsb
pop
push
ret
rorb
xchg
mov
push
xor
mov
push
jmp
add
jns
cmpsb
pop
sbb
aaa
pop
xor
lret
ja
or
stc
jbe
mov
xchg
call
call
dec
cmpsl
leave
sbb
cmp
jne
sbb
fs
mov
lret
pop
dec
test
incl
add
jl
lea
add
hlt
push
mov
inc
inc
fwait
pop
cmp
and
jg
lcall
cmc
ret
lret
aaa
ljmp
xor
imul
sbb
xor
clc
cmpsb
push
add
fildll
dec
push
jg
add
lcall
pop
mov
repz
xor
dec
ret
fiaddl
add
outsb
pop
in
adc
xor
adc
ljmp
fistpll
int3
test
xchg
dec
bnd
pushl
or
mov
insl
test
out
iret
push
add
adc
jmp
out
cli
incl
dec
pop
mov
test
pop
lds
lret
mov
dec
push
inc
dec
mov
aad
stos
or
sahf
lret
mov
insl
dec
test
popf
xor
ljmp
jnp
outsb
jbe
xchg
mov
pop
outsb
into
xchg
popa
add
ljmp
cmp
push
push
xor
xchg
enter
jle
lret
cmp
cmp
rcrl
cmp
incl
mov
mov
or
adc
test
pop
mov
test
jne
mul
inc
insl
cli
mov
add
int3
push
int3
iret
pop
ror
movsb
sub
call
xlat
packuswb
xchg
push
adc
inc
nop
lahf
aas
stos
jge
xor
fildl
std
mov
lcall
arpl
clc
adc
dec
mov
inc
data16
jne
stc
sub
push
lods
vpminsw
jmp
lret
xchg
out
sbb
sbb
xor
inc
ljmp
pushf
cs
push
cld
jbe
scas
lods
popf
mov
push
xchg
mov
sbb
icebp
cs
mov
xlat
mov
mov
adc
jmp
xchg
jle
xor
xabort
call
lods
leave
jo
inc
imul
xor
insb
test
mov
stc
aam
pop
jl
pop
mov
jbe
pop
jns
xor
mov
scas
cmp
jg
push
xor
mov
mov
jae
mov
pusha
cmp
sahf
fwait
das
cli
jmp
or
adc
adc
iret
insl
mov
out
xor
sub
std
push
into
int3
js
xchg
ljmp
cld
out
inc
fwait
cmc
xchg
clc
mov
xor
incl
mov
adcb
jmp
stos
inc
out
dec
sbb
jge
fsub
mov
call
addl
inc
fs
fs
mov
pushf
addr16
sub
mov
and
sbb
cmp
jno
pop
loopne
sub
pushf
mov
cmp
or
lcall
mov
pop
xor
or
jae
push
jno
rcr
jge
or
movl
lcall
bound
or
addb
lods
lcall
or
dec
mov
adc
incl
mov
or
inc
insl
or
test
jb
clc
loopne
cmp
scas
shlb
lcall
inc
jbe
push
outsb
push
out
or
fs
shl
fs
xchg
xor
mov
popf
sub
xor
and
es
test
ja
sub
xlat
fprem1
jb
jle
call
dec
mov
jo
mov
int
leave
cmp
mov
rcrl
cmp
imul
adc
int
aad
mov
call
icebp
jl
xor
std
lcall
out
xchg
hlt
dec
cmp
lods
int3
orl
imul
ja
pop
sti
xchg
mov
inc
xchg
push
jmp
outsl
mov
sub
xchg
xor
jb
clc
jmp
shll
inc
les
inc
out
add
xorb
outsl
popa
mov
ljmp
xchg
xlat
push
mov
xor
jl
hlt
icebp
jmp
cltd
insl
lret
mov
push
jg
cvtpi2ps
inc
in
insl
mov
cmpb
cmp
jno
repz
cmp
adc
push
cld
call
stc
add
rcrb
sub
xchg
data16
and
jb
fldcw
mov
clc
fsin
loop
mov
icebp
rep
ljmp
jno
jno
andb
push
inc
ficompl
sbb
lods
popf
push
test
sbb
inc
hlt
jo
mov
xor
inc
jo
ret
push
lcall
and
pop
adc
rolb
ss
into
scas
cmp
add
xor
cmp
pushl
fs
add
inc
sbbb
xchg
lea
fidivrs
jb
nop
pusha
dec
or
loopne
mov
lret
mov
int3
sarl
dec
pop
mov
in
and
std
ljmp
stc
fwait
out
xchg
xchg
lds
mov
outsb
cmp
loopne
push
adc
mov
incl
mov
movsb
or
fnstcw
sub
in
jbe
sub
push
ret
out
in
stos
dec
mov
ja
pop
clc
sar
arpl
enter
push
add
movsb
or
js
mov
jne
mov
jbe
test
and
imul
ret
stos
and
inc
jae
cli
and
daa
xor
jg
pushf
mov
rorb
fildll
xchg
shll
dec
xchg
pop
adc
fcomip
pushl
lret
idivl
ret
std
outsb
pop
stos
and
or
push
data16
sub
or
out
cli
xchg
push
imull
fs
lcall
mov
adc
pop
or
sbb
push
das
aaa
mov
cwtl
xor
ljmp
dec
xor
cpuid
incl
call
cmp
xor
push
push
outsb
sub
out
clc
clc
add
or
outsl
test
lahf
mov
je
push
xchg
pushl
adc
push
addr16
mov
test
pusha
insb
xor
or
jg
divl
ljmp
mov
dec
shll
aad
push
cltd
cmpsb
std
add
mov
movhps
push
les
test
rcr
mov
enter
test
lea
ljmp
mov
jns
fisttpll
insb
push
pop
push
and
pop
ljmp
lahf
addr16
xor
cmpsb
mov
jns
sbb
xchg
or
ljmp
stos
cmp
icebp
pop
adc
popa
or
jae
frstor
out
xchg
scas
jmp
int
mov
pusha
or
mov
push
and
jl
lds
add
es
call
lock
jge
sbb
shl
adc
inc
fsts
in
aaa
fcmovnb
pushl
out
cmpsb
add
imul
and
lods
mov
xor
std
fdiv
aad
arpl
imul
or
dec
mov
push
daa
mov
cmc
mov
mov
das
xchg
mov
mov
jmp
int
pop
test
into
pop
out
jo
xor
xor
jp
lds
addr16
xchg
mov
adc
cmpsl
mov
mov
fldcw
addr16
orl
fidivrl
xchg
ds
fstl
test
xchg
xchg
jg
call
orl
shlb
dec
insl
lcall
shll
cmp
imul
lcall
pop
mov
fdivrp
stos
popf
inc
adc
adc
xor
and
mov
decl
call
int3
test
shlb
sbb
xor
decl
add
aas
in
clc
xchg
repz
pop
out
sub
shrd
jnp
lcall
sub
fistps
outsl
cli
arpl
sbb
cwtl
mov
sahf
lcall
sub
loop
cmp
jno
jp
cwtl
xchg
xchg
pop
pop
int3
sbb
and
hlt
decl
fsubrs
ds
ljmp
mov
pop
adc
jg
push
ja
or
jo
loopne
xor
ss
les
lcall
in
jp
popf
stos
push
mov
pop
jl
or
push
aam
jp
loop
lds
pusha
pushl
mov
fldt
cmp
mov
add
mov
jmp
or
cmp
jmp
sub
push
and
or
inc
stc
int3
in
jae
push
out
push
push
push
jle
cld
ljmp
out
jmp
mov
lahf
adc
cmp
aad
cltd
cmp
or
mov
pushl
or
push
add
xor
repz
ficoml
scas
inc
in
jl
jmp
push
call
rclb
mov
dec
xor
aas
dec
clc
jg
add
aad
xlat
jo
test
rcll
cli
scas
inc
lock
decl
sbb
add
jge
repnz
mov
jne
or
mov
mov
ret
aas
icebp
stos
jo
mov
jns
xchg
push
in
std
pushl
in
cmp
pop
cmp
adc
shrb
adc
mov
sarb
sbb
in
or
cmp
adc
sti
insb
cmc
into
cmp
or
sub
cmp
ret
mov
adc
sti
mov
jmp
and
xchg
push
mov
ja
adc
cmc
mov
pop
jb
push
repz
xchg
jg
cmp
and
into
sbb
sbb
mov
xorb
stos
pushl
push
push
arpl
loopne
add
out
icebp
cli
xorb
movsb
ds
rolb
aas
pop
out
pop
add
mov
stos
xchg
fldl
aaa
sbb
mov
daa
mov
out
push
fstps
cmp
sarl
lcall
lahf
adc
xchg
or
in
fs
call
shll
xor
lds
out
cmp
aad
jb
and
xor
insl
mov
aam
lcall
rclb
add
xchg
jbe
jg
movsl
mov
dec
add
push
adc
sti
and
ljmp
mov
insl
es
inc
push
movsb
insl
mov
mov
mov
fwait
dec
jl
inc
pop
lret
sub
mov
subl
mov
das
inc
push
enter
call
mov
jle
mov
adc
sahf
push
fcomps
jmp
loope
add
clc
or
out
mov
lcall
and
movl
mov
add
push
xchg
sti
sub
incl
push
push
lret
add
out
cmpsl
sbb
inc
sti
inc
sub
adc
data16
sbb
jmp
push
ret
sub
insl
fwait
and
or
test
stos
mov
and
inc
sub
add
movsb
push
mov
cld
imul
int
aas
test
mov
fstpl
fsubp
sahf
dec
jg
clc
ja
cmp
jmp
pop
js
adc
shlb
cmc
mov
das
ss
call
iret
add
xor
outsb
pop
loop
fisttpl
cmp
lcall
fidivl
daa
lret
cmpsl
or
pushf
jp
shl
aad
mov
ds
jmp
mov
sbb
inc
enter
jle
outsb
imul
insl
inc
or
jns
jnp,pt
inc
into
push
jnp
and
sub
jne
outsl
inc
sub
cmp
inc
pop
mov
push
pop
aaa
outsb
push
aad
ljmp
mov
xor
mul
sar
ljmp
jae
sub
lcall
xor
adc
cmpsl
push
push
decl
mov
out
or
pop
fdivrl
mov
stos
lcall
xchg
ljmp
decl
inc
push
jno
push
mov
into
clc
add
push
cli
inc
hlt
imul
popa
jne
pushl
test
into
cmc
ror
jmp
lock
movsl
into
and
data16
call
rclb
xchg
adc
daa
movsb
hlt
mov
in
movsl
pause
les
sub
jns
inc
jge
lea
sub
xor
jbe
xchg
push
aaa
repnz
add
repnz
lcall
inc
ss
or
jbe
pop
out
mov
jb
lahf
rcl
sahf
adc
add
cmp
out
xor
jmp
sarl
sbb
cmc
les
inc
hlt
inc
shlb
repnz
fcmovnbe
adc
hlt
decl
fs
cmp
and
xor
mov
sti
outsb
test
stos
ds
adc
mov
lcall
das
pop
dec
mov
and
popf
pop
movsb
sbb
dec
or
and
sub
enter
lcall
roll
adc
sub
cmpsb
lret
int3
push
loope
lret
xchg
or
jo
movsb
shrl
inc
push
xor
lea
dec
mov
ret
add
sbb
leave
sub
int
lea
jg
ret
pop
sbb
ss
aas
mul
rol
dec
xchg
mov
pop
aaa
cmp
rcr
cmp
mov
nop
and
repnz
out
dec
mov
jg
arpl
xchg
sbb
push
test
jnp
subb
sbb
call
clc
shll
and
fisubl
lock
loop
jnp
ss
insb
popa
imul
bound
fidivrl
and
into
adc
in
call
add
int3
shlb
lock
mov
js
push
dec
push
rcl
fcomps
sarb
clc
sbb
int
je
ret
fisttpl
mov
cmp
loope
in
ds
stos
push
jo
cmpsb
mov
jb
jl
test
aam
ficoms
jge
inc
mov
sub
lret
repz
in
dec
das
sbb
adc
cmp
jp
add
loope
fimuls
push
jl
fstps
inc
cli
dec
and
decl
mov
insb
mov
jmp
dec
mov
lcall
mov
fcomp
aam
imul
fdiv
cli
ljmp
or
cmp
add
mov
xchg
mov
decl
out
insb
cmp
ljmp
movsl
fdivr
daa
inc
insl
fs
ret
push
pushl
and
sti
daa
add
loopne
cmpsl
aaa
pop
int3
fildll
frstor
push
jns
pop
sbb
push
hlt
mov
cmc
mov
push
pop
pop
pop
and
push
xor
pop
sub
xor
push
ljmp
loope
iret
mov
jge
jmpw
cmp
nop
enter
mov
jmp
jmp
adc
cltd
insb
and
fs
add
cs
out
xchg
arpl
dec
lcall
ljmp
fbstp
or
test
jp
push
test
xchg
add
sbb
loopne
or
xchg
icebp
jg
jg
sbb
mov
mov
ds
lods
aaa
jl
out
mov
lcall
inc
and
mov
inc
mov
and
mov
popf
jbe
in
mov
inc
das
decl
faddl
xorl
dec
cmpsl
in
and
inc
and
dec
popa
and
and
and
push
mov
loope
orl
jo
adc
out
push
fistpll
inc
fsubl
rcl
scas
clc
fmul
add
lods
push
push
xlat
xor
push
test
lock
shl
jno
push
bound
dec
xchg
xor
movsl
inc
adc
or
sbb
jbe
fistl
add
stc
inc
lcall
pcmpgtw
sub
push
adc
mov
sarl
decl
lock
mov
sarl
sub
inc
iret
mov
cli
pop
cmc
incl
and
inc
hlt
push
dec
lcall
clc
aaa
cld
out
and
xchg
xchg
push
ss
js
icebp
mov
xchg
sbb
stc
call
hlt
jb
ljmp
fcomps
adc
or
jge
out
dec
inc
jmp
mov
test
adc
cwtl
inc
push
jne
xchg
xchg
cmp
mov
lods
lods
inc
imul
jbe
sbb
stc
pop
push
test
jne
mov
out
in
dec
jo
fwait
jmp
mov
call
loope
cmp
mov
inc
cli
loope
push
mov
add
fcomip
decl
mov
ror
popf
cs
fidivrs
mov
vmaxsd
in
rolb
xor
xor
cmpsb
mov
jnp
into
ret
and
lcall
rolb
mov
loopne
add
mov
imul
mov
jg
mov
fiaddl
add
fbstp
cmp
cwtl
pop
cld
pop
dec
mov
call
aaa
movsl
ret
push
enter
sub
mov
stc
sbb
bound
fsub
ljmp
jbe
sub
or
movsb
mov
or
cmp
sub
test
mov
cmp
and
dec
dec
test
leave
dec
popf
aaa
jne
divb
stos
xor
jne
lock
push
ljmp
cmp
push
xor
dec
insb
push
sbb
push
repz
fcomip
daa
enter
or
pop
mov
into
lcall
ljmp
cwtl
cmp
ljmp
push
push
loopne
mov
test
ja
xlat
or
jnp
rclb
pop
bound
ret
test
or
ss
jne
dec
push
loopne
pop
dec
mov
sbb
cmc
dec
sub
lret
xorb
inc
addb
shlb
fstpt
data16
lcall
jae
fsubrl
jl
cmpsl
scas
or
maskmovq
jo
inc
lret
xor
fidivrs
lods
sbb
push
int3
mov
arpl
lret
clc
add
mov
and
clc
das
lcall
pop
add
cli
adc
aad
inc
cmp
lcall
mov
repnz
clc
xlat
pop
sub
pop
je
mov
jle
sub
add
fs
push
and
jbe
in
out
cld
pop
sbb
xor
cmpsb
ljmp
cmpsb
lcall
into
mov
mov
popa
inc
adc
cmpsl
enter
lcall
adc
jg
mov
sbb
loop
xchg
dec
mov
stos
add
lret
cwtl
mov
addl
popf
pop
adcb
inc
jecxz
mov
test
jo
and
cld
sbb
sbb
push
in
sti
mov
mov
notb
pop
std
and
ljmp
cld
cltd
nop
les
loopne
xor
sbb
or
cmc
incl
js
mov
ret
dec
cwtl
jle
cld
and
addr16
mov
fbld
test
sub
xor
mov
adc
lcall
mul
pop
jns
pop
add
pop
icebp
icebp
mov
mov
into
loopne
pop
loopne
aam
adc
mov
inc
adc
repz
sbb
icebp
xchg
aaa
inc
lahf
jne
sti
mov
test
adc
sbb
aam
adc
cmp
xchg
lcall
or
jmp
aam
jnp
mov
mov
lret
hlt
js
jae
cld
sar
ljmp
repz
adc
insl
xchg
mov
dec
or
adc
jmp
and
pushl
cmp
jae
push
mov
fadds
sbb
stos
outsl
insb
pop
inc
cli
scas
incl
clc
cld
inc
popa
stos
insb
mov
sbb
pop
ficompl
jmp
ljmp
scas
jo
mov
sbb
roll
lea
aam
shll
addl
or
xor
repnz
in
and
insb
lret
pop
sbb
pop
into
das
decl
mov
xchg
pop
mov
cmpsb
xchg
push
arpl
inc
push
jb
inc
outsb
imul
jmp
bnd
push
mov
inc
mov
push
adc
imul
ja
out
adcl
lcall
inc
inc
cmp
notl
sbb
xchg
inc
mov
inc
roll
or
pop
js
mov
in
rol
mov
mov
in
gs
jmp
xlat
lds
or
jne
or
dec
adc
imul
ljmp
pop
cmp
cmp
incl
lcall
sbb
sub
add
aam
inc
or
into
ljmp
adc
in
cmp
add
pop
xchg
inc
adc
push
repnz
fbstp
call
pop
mov
insl
mov
nop
xor
xchg
movsb
mov
mov
ljmp
pshufw
ljmp
sub
dec
push
sti
sar
or
lods
test
inc
fmulp
rcll
or
add
fnstenv
sbb
out
xchg
or
and
push
add
push
ljmp
aad
cwtl
jae
iret
mov
shll
add
loop
aad
push
sar
cmp
sarl
pop
test
sbb
adc
push
sub
or
pop
inc
and
rorl
lds
outsb
mov
lods
test
jg
push
sbb
inc
cmp
sarl
fsts
pushl
mov
adc
je
mov
mov
movd
jg
cmpsl
loope
dec
mull
call
aad
jo
arpl
or
push
mov
sbb
pop
jp
movsb
ret
inc
in
icebp
mov
pop
test
mov
mov
inc
cmpsl
cs
jg
adc
xchg
jnp
mov
iret
xor
lret
in
leave
imul
adc
pop
shll
push
into
decl
lock
pusha
les
xorb
jns
and
inc
mov
or
ja
push
add
pusha
scas
fcomip
mov
push
mov
xchg
outsl
cld
or
gs
out
pop
in
jmp
cmpsb
xchg
jmp
out
add
sub
add
clc
movsl
in
ja
scas
imul
lds
pushl
addr16
mov
jp
lea
fnstcw
je
and
add
mov
jmp
decl
lock
test
icebp
inc
fsubs
adc
dec
ja
sbb
mov
insb
inc
fidivrl
dec
rcl
shl
push
mov
add
test
ja
pop
insl
push
jb
call
jbe
jb
gs
outsl
sub
dec
inc
sbb
sub
fwait
sub
lcall
mov
add
xchg
js
and
and
or
push
sub
clc
popf
fcompl
xor
jl
loopne
jb
lret
cmp
dec
xor
push
stc
jns
out
adc
or
dec
dec
ljmp
lods
add
inc
dec
cmp
fsubp
pop
xlat
xchg
mov
aas
aam
mov
mov
call
xor
dec
cwtl
popa
gs
cmp
cmp
int3
testb
out
push
stos
cmp
push
add
fiadds
sarb
cmpsl
lret
into
js
mov
es
pushf
dec
sti
cld
jmp
lods
out
mov
insb
cmc
xor
mov
push
ret
adc
cmp
add
lcall
add
scas
jne
roll
cmp
xor
std
lret
inc
aaa
test
dec
mov
hlt
pop
jle
gs
in
mov
or
out
out
jnp
jbe
call
mov
adc
mov
int
mov
sub
lea
jmp
addr16
mov
jp
adc
add
aas
lods
push
into
or
mov
dec
std
incl
adc
mov
inc
call
inc
and
rorl
sbb
dec
ret
jmp
inc
clc
mov
sbb
shlb
add
push
push
mov
es
incl
shrb
jg
add
xchg
std
sbb
stos
das
lcall
sub
pop
sub
inc
fs
pop
xor
add
lcall
jg
popf
xlat
or
fisttpll
fldl
fcompl
lods
imul
or
cmp
leave
test
push
ret
sbb
fdecstp
aas
sbb
insl
inc
dec
cli
popa
and
ljmp
fsts
mov
pop
leave
push
stc
out
outsl
iret
inc
xchg
xchg
dec
pop
fcmovnb
daa
ljmp
add
shl
mov
xor
sbb
xchg
pop
test
inc
sbb
out
gs
jecxz
addl
call
sbb
fstpl
faddl
cld
insb
jno
inc
pop
rcrl
icebp
call
push
fsubrp
ret
sbb
inc
ljmp
mov
ds
js
jb
jns
and
pop
mov
mov
dec
add
cmp
addl
roll
push
cmpsl
xlat
inc
gs
jo
mov
mov
adcb
fldenv
or
dec
and
call
scas
push
clc
or
out
jbe
jmp
inc
dec
or
lock
ljmp
fcom
stc
jp
into
mov
adc
sub
aam
and
lcall
fdivrl
iret
roll
lock
and
push
insl
xchg
cmp
pop
f2xm1
or
ljmp
dec
pushf
jl
movsl
ffree
test
ficoml
push
sub
jo
je
adc
sub
sub
mov
pop
andb
or
jbe
cmp
xchg
pusha
push
inc
notl
cld
call
rol
aaa
dec
loopne
adc
fidivs
fcompl
adc
fcomip
lcall
fsubrl
pop
aas
lods
mov
adc
imulb
push
mov
mov
out
push
incl
dec
xchg
insl
sub
ret
enter
mov
mov
ds
mov
popa
xchg
mov
iret
lea
or
pop
mov
inc
in
xchg
lahf
arpl
test
adc
mov
xchg
push
cmpl
xor
das
clc
call
cmp
mov
clc
out
mov
int
fnsave
stos
shlb
pop
ljmp
clc
dec
or
mov
gs
test
inc
fwait
push
mov
and
imul
adc
lcall
call
cmpsb
into
mov
aaa
mov
aam
jo
sti
cmp
repnz
xchg
pop
es
add
mov
cmp
hlt
loope
ljmp
into
incl
mov
cmpsl
movsb
ljmp
movsl
imul
mov
int
pushl
pop
fcmovne
pop
clc
jmp
rorb
call
call
or
push
testl
jb
adc
sbb
pop
loopne
cmp
ljmp
push
and
sub
inc
mov
xor
call
rorl
sbb
incl
cld
jp
inc
mov
sbb
arpl
adc
dec
aaa
cld
lcall
ss
push
pop
stos
and
sbbb
push
jnp
pop
nop
repnz
in
mov
jmp
mov
mov
dec
cmpsb
loope
loope
sbb
pop
cmp
lahf
add
mov
js
sbb
inc
push
cmp
hlt
xchg
mov
in
xorl
jo
shll
push
cmp
sub
lcall
fimuls
adc
jp
pusha
inc
dec
sbb
jne
roll
inc
fildll
rcrb
mov
repnz
repz
clc
pop
mov
sub
icebp
in
push
jecxz
ret
nop
mov
jmp
test
shll
pop
xchg
mov
int
xor
cmp
clc
or
in
jne
cmpsb
subl
repz
inc
andb
xlat
pop
push
movsl
subl
cld
cltd
cmp
inc
pushf
es
neg
test
aaa
loope
mov
lret
decl
sti
into
push
push
adc
movsb
add
fwait
mov
pop
sub
js
das
aas
insl
sbb
jno
and
scas
lcall
mov
je
mov
push
nop
mov
jne
or
or
stc
or
pop
push
sahf
inc
ret
clc
es
int3
adcw
call
mov
pop
push
lock
ret
lcall
iret
xchg
inc
mov
pop
mov
or
mov
inc
std
fimull
mov
sbb
hlt
stos
cmp
iret
push
shr
and
mov
pop
xor
leave
pop
ret
stc
rcrb
mov
lcall
enter
insb
in
jmp
das
sub
and
ret
inc
es
push
pusha
mov
in
pop
jg
jge
lock
sbb
cmp
push
mov
cmc
cwtl
fnstsw
shl
fs
cli
cli
mov
idiv
pushl
test
aaa
adc
pop
andl
mov
leave
mov
pop
int
sahf
pop
in
cmp
lret
mov
xor
push
pushf
lods
dec
sbb
popf
inc
jg
lock
sbb
xor
insl
or
aam
mov
jmp
fidivrs
outsb
push
imul
mov
ret
mov
jl
adc
xor
mov
imul
mov
std
cmp
jb
stos
and
xor
pushf
adc
rorl
loope
cmc
lahf
lods
lret
xor
in
subl
mov
mov
add
fisubrs
repnz
jl
mov
mov
jno
decl
je
adc
jne
and
lcall
sbb
push
jmp
sbb
push
js
call
xor
dec
mov
jns
in
jo
adc
decb
rorl
push
push
fidivrl
push
mov
hlt
sahf
xor
pop
inc
push
xor
incb
mov
cmp
add
xchg
mov
cmpsl
sub
fcos
mov
adc
add
and
pop
test
call
in
or
shl
inc
and
popf
jbe
in
dec
sbb
fdivl
ret
or
adc
decl
mov
add
adc
jge
movsb
pop
dec
pop
sbb
std
or
leave
sub
leave
mov
push
sbbl
adc
dec
test
push
add
aas
jle
jge
lea
testb
incl
das
and
inc
cmpsb
das
js
and
xchg
neg
mov
xchg
in
mov
xlat
ljmp
sbb
pop
test
jbe
out
push
int3
or
int
push
mov
fisubl
iret
cld
andb
lcall
and
fistps
call
call
inc
fbld
and
push
ljmp
adc
rclb
xchg
push
out
lds
insb
push
jecxz
sub
aas
xchg
mov
sbb
jg
sbb
jmp
inc
cmp
scas
or
push
pop
inc
push
xchg
adc
out
push
jl
call
in
int3
cwtl
enter
stc
std
cmp
pop
xlat
insb
in
ja
and
int
xchg
mov
stc
xchg
mov
pop
ja
lock
lahf
xchg
jle
adc
in
cld
icebp
sbbb
outsl
and
push
stos
stos
in
mov
je
mov
mov
dec
test
ljmp
cld
push
and
mov
imul
inc
lret
inc
mov
ss
mov
pushl
pop
and
inc
sub
fbstp
xor
or
notl
jnp
inc
stc
mov
incl
cld
ljmp
ret
adc
mov
imul
das
std
add
lcall
sub
lcall
test
into
xor
cmp
or
bound
pop
jmp
add
ret
jo
cmpl
adc
xchg
jb
in
int
sahf
aam
ret
scas
hlt
jg
inc
ret
int3
mov
leave
or
push
sbb
or
inc
stc
fsubrs
adc
sub
rclb
push
jg
add
dec
outsb
mov
xor
sbb
jp
cld
cli
mov
sbb
divb
outsb
mov
sbb
iret
and
mov
fistl
insb
lds
cld
jmp
jb
pushl
cmc
lock
jbe
xor
movsl
cmp
push
xchg
stos
mov
pushl
add
xchg
ljmp
les
es
icebp
scas
ljmp
fucomp
push
insb
push
or
mov
mov
add
stos
sahf
inc
fdiv
cmc
add
jg
mov
call
cld
ljmp
outsb
xor
into
sbb
insb
cmp
ljmp
arpl
ljmp
inc
cwtl
push
push
mov
test
add
jmp
aam
arpl
add
jnp
std
fisttps
sbb
aas
and
cmp
inc
pop
out
mov
adc
icebp
outsl
test
push
pop
push
andb
or
and
lea
gs
incl
pop
inc
mov
pop
or
cs
test
jns
pop
dec
and
push
pop
incl
loope
aas
push
in
jp
lods
xor
dec
mov
sub
inc
and
call
dec
testl
shlb
adc
mov
fst
mov
and
dec
jg
mov
fnstcw
mov
cmp
adc
das
jne
enter
xor
jo
pop
fsubl
mov
add
cld
decl
push
les
add
imulb
xor
lret
and
shl
jae
dec
pop
mov
mov
pop
sbb
inc
fsubrs
int3
and
mov
cltd
sub
js
daa
incl
ret
clc
push
pop
push
repnz
cmpsb
popl
mov
call
and
jo
jnp
cmpsb
punpcklbw
out
rcrb
jmp
cmp
in
into
lea
outsb
and
sbb
shlb
inc
inc
pop
inc
rorb
scas
lds
push
push
push
out
jge
jp
xchg
stc
adc
add
lcall
fistps
xor
jl
aas
loope
adc
sbb
ds
xor
loope
incl
xor
aam
bnd
add
and
mov
outsl
scas
sarl
or
adc
cmp
repz
lcall
mov
inc
push
xor
rolb
mov
mov
fsts
insl
jle
hlt
jmp
scas
xlat
mov
pop
loope
inc
add
and
mov
fucomp
in
mov
jae
insl
sar
in
in
pop
adc
rclb
dec
pushf
pop
aaa
cmp
xor
popa
add
push
mov
cs
call
loopne
pop
pop
pop
xchg
enter
dec
cmpsb
push
mov
pushf
cmpsb
loopne
fsubrl
dec
out
mov
or
gs
mov
adc
pop
adc
fcoml
or
das
pop
sbb
add
popa
mov
mov
push
mov
dec
cmp
adc
movsb
es
mov
cmp
sub
sbb
mov
fcomip
call
xchg
and
xchg
arpl
rorb
pushf
mov
push
dec
push
dec
dec
popa
inc
das
inc
pop
dec
insb
add
xorb
inc
mov
fmul
fwait
dec
movsl
add
cs
push
insb
iret
sar
call
add
or
cmpsl
xchg
sbb
in
mov
cltd
scas
ja
sub
jg
fs
repnz
or
mov
push
outsb
test
notb
in
lods
pop
shlb
or
scas
gs
pushl
loop
cmp
sbb
and
mov
loop
into
xor
lcall
jmp
push
into
dec
xchg
push
or
movsl
adc
mov
fcompl
jl
cmp
inc
jns
ljmp
sub
dec
in
adc
in
hlt
xchg
pop
movsl
inc
andb
pop
ja
imul
inc
pop
inc
loope
fs
or
repz
xchg
gs
fwait
jbe
ss
fcomps
dec
movsb
fmulp
pop
jp
jmp
or
stos
fsubrs
call
ljmp
cld
and
jg
jo
lret
push
hlt
mov
test
in
dec
dec
sub
sahf
call
jnp
call
cli
lret
aad
adc
pop
test
xchg
or
repz
std
call
outsb
dec
arpl
inc
pop
add
sbb
mov
cmp
cmp
lods
push
xchg
aam
iret
iret
pusha
ret
jmp
cmp
or
fwait
mov
xchg
inc
out
lds
ljmp
jg
xor
push
mov
mov
mov
mov
push
mov
arpl
or
dec
cld
fistpll
test
pop
in
daa
addl
bound
sbb
lcall
or
sub
mov
xor
sub
push
addl
arpl
insb
pushl
insl
sub
fldl
out
fcomps
xchg
hlt
out
movsl
mov
lahf
inc
cld
fcos
lcall
es
jae
jbe
mov
cli
ret
dec
popf
les
into
je
push
jbe
sbb
popl
jbe
cli
jg
aad
leave
fucom
lea
xchg
int3
shr
sub
call
in
pushl
xchg
sub
push
rcr
pusha
sbb
mov
and
dec
fimuls
ljmp
and
lret
outsl
pop
push
adc
hlt
call
es
inc
cs
fs
xchg
sbb
xor
jns
jmp
and
daa
pop
js
cmp
dec
shrb
sti
into
movsl
sahf
mov
pushl
loop
xchg
fidivs
xor
imul
pcmpeqb
adc
lock
xchg
mov
cs
scas
pushl
fwait
sub
adc
push
and
push
inc
bound
decl
js
xchg
loop
sbb
xchg
lret
cmp
jno
scas
or
mov
into
clc
stos
jmp
fsubrl
test
inc
pop
inc
call
aaa
fcmove
sahf
mov
adc
xchg
fisubrl
fucomi
sti
aad
icebp
ds
pop
inc
cli
mov
jno
jg
dec
repz
stos
sarl
stc
xor
out
push
inc
mov
lds
mov
push
pop
mov
push
cmp
cmp
jmp
xor
adc
sarb
aas
adcb
mov
jl
aaa
stc
add
dec
movsb
pusha
xchg
cmpsl
pop
cmp
xor
int3
sub
inc
mov
jno
call
push
dec
jmp
fdivl
in
mov
rcrl
cwtl
loopne
push
xchg
mov
and
fcomip
decl
stos
lods
lahf
pop
dec
xor
js
sbb
inc
cltd
ss
outsb
push
out
ljmp
push
inc
mov
icebp
jne
xlat
xchg
insb
rcll
inc
adc
sti
sub
ss
cli
incl
inc
divl
rcrb
xchg
je
sbb
fwait
mov
shr
mov
mov
call
rol
lods
jo
sub
add
mov
jle
shlb
cld
scas
decl
mov
push
ja
repz
mov
xor
pop
pop
roll
mov
cs
sub
das
cli
add
daa
fstl
rol
test
mov
add
mov
sub
cli
inc
ljmp
adc
inc
mov
cmp
movsl
xchg
pop
mov
cmp
mov
ds
xor
or
or
dec
fiaddl
ret
jo
inc
push
dec
sahf
lret
jg
push
pop
xchg
mov
push
sti
push
sbb
jne
outsl
mov
fs
xchg
decl
nop
inc
test
push
sbb
sub
icebp
mov
in
mov
aam
call
decl
mov
jp
dec
clc
pop
inc
popf
out
int3
or
roll
add
inc
call
inc
cmp
pop
stos
sbb
outsb
enter
xchg
sbb
int3
cld
dec
incl
pushf
inc
pop
jecxz
repnz
add
ljmp
jbe
in
or
into
mov
xchg
aad
shlb
jl
push
fstpt
dec
loop
pop
cmc
jmp
cs
adc
test
xor
imul
adc
and
movsb
or
pop
in
mov
sbb
or
push
es
fbstp
xchg
sbb
push
mov
adc
xchg
xchg
aas
sbb
sub
cmc
out
push
dec
negb
xchg
decl
mov
ljmp
dec
adc
cmp
add
stos
cmp
loop
push
repnz
mov
es
xor
pop
sub
dec
sarl
or
cmp
ljmp
push
xor
pushl
push
add
sbb
and
mov
sbb
and
lock
incl
enter
push
repnz
shrl
pusha
mov
mov
incl
inc
mov
jno
idivb
scas
xor
lcall
push
lret
push
int3
pusha
mov
fsubrl
jae
sti
test
out
insl
int3
das
jmp
sti
sbb
incl
sbb
jbe
fmull
jmp
mov
fidivl
stos
or
fld
data16
sbb
and
jmp
cmp
or
cmp
in
enter
lcall
rcll
jae
enter
into
dec
gs
ja
mov
cmp
mov
cltd
inc
add
dec
dec
add
fidivrl
mov
pslld
nop
sar
ljmp
iret
ret
xchg
mov
xor
sbb
mov
cmp
jae
xchg
decb
aas
in
andb
lahf
xorl
jmp
jecxz
std
mov
mov
call
outsl
cmpsl
cmp
mov
jbe
stos
movl
push
loop
ret
mov
xor
call
sahf
movsl
inc
add
or
test
mov
jmp
imulb
cli
mov
jo,pn
lret
cmpb
mov
ljmp
pop
jmp
pop
mov
mov
adc
sub
or
pop
insl
fadd
call
loopne
adc
movsl
sbb
or
lock
outsl
mov
insb
xchg
and
aam
jno
or
mov
fsubl
lcall
iret
xchg
cmp
lock
sub
jo
add
orl
cmp
call
push
add
pextrw
and
sub
in
xchg
mov
pop
push
shr
lods
imul
call
inc
popf
adc
xchg
mov
inc
out
adc
ljmp
sub
push
lret
jbe
pop
ja
inc
pop
scas
and
sub
fidivrs
jp
fwait
out
pop
mov
jmp
leave
stos
jg
add
adc
jg
push
fs
pop
ljmp
aaa
push
adc
iret
or
pop
fdivs
scas
jne
fs
mov
decl
push
xchg
ret
insl
and
dec
cmp
shrb
icebp
dec
stc
call
leave
push
scas
jp
push
scas
inc
and
imul
iret
jecxz
sub
pop
shll
mov
inc
aad
call
pop
jns
loop
pop
mov
sub
pop
xor
push
sbb
adc
out
loop
arpl
ljmp
dec
inc
and
aad
adc
and
add
cmpsl
adc
rolb
cmp
pop
mov
fisttpll
adc
cmpl
hlt
sti
fcmovne
xchg
jg
out
aad
lcall
sbb
and
mov
sti
xlat
imul
inc
jg
rcr
loope
pop
imul
push
inc
in
pop
mulb
mov
shlb
pop
sbb
mov
mov
sti
xor
cld
mov
xchg
call
push
mov
and
loop
les
cli
inc
mov
inc
aas
or
sti
cmp
mov
dec
incl
xor
sub
inc
lahf
cmp
mov
js
stos
inc
fcos
jg
call
jae
mov
sub
add
pop
mov
mov
mov
pop
jbe
mov
fildll
and
pushf
les
add
pop
adc
decl
filds
pusha
sbb
mov
sbb
shl
movsl
lcall
cmovne
call
dec
and
fnstenv
and
and
pushl
adc
jg
mov
jge
inc
and
cmpsb
mov
enter
dec
mov
sbb
adcl
inc
push
subb
xor
adc
hlt
mov
es
incl
icebp
imul
pop
jae
xchg
jl
mov
inc
pop
xchg
insb
jns
dec
pop
adcb
bound
lds
sbbb
pop
mov
ljmp
popa
or
adc
cmp
call
inc
jns
jp
jle
xchg
jnp
lcall
stos
jle
xor
xchg
jo
mov
xor
jle
dec
add
cmp
je
in
mov
test
xor
inc
test
mov
ljmp
xor
je
int
outsl
nop
sub
sti
inc
inc
xchg
mov
inc
mov
ficoml
bound
xchg
pop
xchg
cmp
call
mov
pop
outsl
fwait
mov
test
jne
xchg
xchg
push
push
inc
add
dec
fsubl
call
insb
data16
or
test
xchg
mov
mov
into
push
loope
notb
sub
pop
cli
call
sub
dec
or
mov
adc
dec
into
test
lods
movsl
xor
pop
pushl
test
out
das
mov
xchg
mov
rcrb
dec
push
adc
vmwrite
call
and
loop
ljmp
and
xchg
aad
push
inc
movsl
push
fs
pop
xchg
hlt
in
inc
xor
jbe
mov
mov
dec
aas
imul
fidivs
mov
aad
loope
ja
xchg
sar
call
adc
jge
adc
fbld
or
sbb
repnz
mov
pushl
fsubr
push
add
punpckhdq
lods
fs
inc
in
jmp
push
insb
push
mov
ret
dec
gs
out
cmp
addl
aaa
jle
incl
js
cmpsl
sbbl
xchg
mov
movsl
jne
clc
push
inc
in
pop
mov
inc
mov
ljmp
call
add
pop
pop
adc
xor
int
mov
outsl
in
mov
jmp
xor
push
popf
mov
push
mov
inc
lods
jp
aam
ja
in
ljmp
aam
xchg
subb
leave
outsl
dec
mov
lods
int
mull
out
jmp
call
divl
adc
add
lcall
roll
mov
or
inc
in
sahf
pushl
pop
pop
xchg
adc
mov
andb
cld
fmull
pop
pop
cmc
mov
imul
jne
outsl
popf
ds
jmp
sub
add
fstps
mov
call
out
mov
push
ds
xchg
test
mov
mov
in
lods
shlb
push
sub
xchg
adc
mov
mov
inc
inc
jae
lock
cli
repnz
outsl
and
xchg
clc
and
mov
into
cmp
mov
incb
xchg
pop
insl
xchg
mov
jae
xchg
test
lcall
call
dec
jecxz
out
loopne
and
mov
mov
outsl
call
mov
xlat
and
xor
out
stos
add
mov
sti
mov
pop
pop
cmp
ljmp
out
dec
mov
and
mov
cmp
cmp
scas
out
sti
call
adc
jae
into
and
push
pop
xchg
decl
pop
fdivl
fwait
add
pushf
xor
mov
test
mov
cmp
add
ret
mov
in
push
jno
faddl
pop
pop
sub
jb
incl
mov
fsubl
fs
popf
fstps
mov
decl
pop
sahf
jb
pop
and
imul
aas
inc
mov
mov
cmp
idiv
xlat
test
inc
scas
push
add
or
pop
addl
add
sub
mov
xor
ljmp
sbb
sbb
push
xchg
aas
and
or
dec
repnz
lret
mov
lcall
sub
test
sbb
xor
jns
push
jmp
dec
sub
in
ret
fiadds
aad
scas
xchg
xlat
push
pusha
and
mov
jnp
pushf
clc
lods
roll
adc
cmp
or
mov
mov
dec
loopne
ja
dec
pusha
ss
call
mov
lahf
sub
push
mov
mov
xorb
dec
xchg
popf
mov
ljmp
sbb
lods
pop
xchg
push
add
fbstp
addr16
fidivl
jmp
xchg
cwtl
mov
dec
adc
pop
add
mov
push
cmp
mov
fdivl
pop
aaa
mov
outsl
fisubrs
data16
push
repz
cmc
or
jbe
xchg
out
jle
stos
push
xchg
daa
sbb
inc
pop
push
pcmpgtd
lea
dec
push
mov
sbb
mov
decb
lahf
dec
jbe
adc
cmp
sub
cmp
sti
fwait
loope
decl
mov
mov
call
clc
cmp
jl
cmp
iret
jb
adc
daa
lret
jge
jp
mov
add
push
scas
sbbl
push
add
and
pop
push
or
lea
roll
pop
add
and
xor
decl
test
fisubrl
cmp
lcall
dec
add
pushl
push
bound
pusha
loop
pop
adc
mov
js
enter
divb
lcall
cmp
movsb
and
cmp
sbb
and
fdivl
inc
cmp
cmp
fisubrs
jne
dec
and
in
add
test
in
or
sbb
je
in
xchg
xor
push
dec
mov
inc
or
icebp
icebp
lcall
jb
enter
pop
sbb
shr
push
scas
sub
ljmp
je
jne
daa
jg
in
loop
insl
in
inc
mov
adc
vunpcklpd
lret
mov
and
xchg
imulb
cmp
call
enter
jle
xor
inc
sbb
scas
fsub
test
cli
frstor
lahf
imull
add
xchg
loopne
shl
inc
xchg
ja
pop
adc
and
ljmp
cmp
sub
add
pop
in
inc
pop
adc
ret
test
lahf
mov
fsts
sbb
ljmp
pop
cmp
pop
ret
hlt
xchg
sahf
jae
fs
aaa
jecxz
lcall
jno
fisubl
pop
pop
adc
pop
push
daa
or
add
cli
or
cmp
iret
es
clc
out
mov
mov
jne
push
inc
mov
fdivrp
int
hlt
ljmp
pushl
clc
mov
fisttpll
cmp
xor
push
sbb
push
xchg
shrl
call
movsb
jbe
or
adc
pop
dec
lahf
jnp
bound
xor
xchg
pop
ret
lods
jmp
flds
or
and
call
ja
inc
push
dec
mov
scas
sbb
leave
ds
nop
jo
sbb
sbb
decl
mov
out
das
jmp
add
jp
cli
xchg
or
cmp
mov
mov
add
sub
in
pop
les
fiaddl
sub
jl
std
or
int3
aaa
jge
mov
ds
fidivs
popa
stc
orb
sarl
or
xchg
call
popa
fdivr
sub
arpl
push
jg
ja
test
pop
sti
and
adcb
call
popf
pop
iret
xor
out
mov
cmp
pop
and
hlt
out
test
loopne
pop
into
sarl
xlat
cmp
filds
rol
fimuls
mov
lods
hlt
inc
leave
adc
jecxz
cvtdq2ps
stc
pop
js
adc
xor
roll
jb
dec
jmp
ffreep
pop
cltd
push
sbb
lret
cld
idivb
adc
test
not
fbld
outsl
dec
jb
sbb
sbb
push
jne
jg
inc
add
dec
mov
mov
or
mov
xor
xor
ljmp
pop
mulb
xchg
mov
mov
or
insl
mov
test
je
out
push
enter
pop
pop
shll
inc
mov
or
pop
loopne
sbb
push
loope
ds
mov
add
rcrb
mov
shrb
scas
decl
js
pop
inc
cmp
and
sub
cmp
movsb
js
rcl
pop
mov
pushl
lods
int3
add
mov
outsl
jle
ficompl
cli
jg
lods
lods
xchg
mov
add
mov
in
fdivr
mov
xchg
ffreep
mov
jbe
out
sti
test
ficomps
or
mov
mov
push
movsb
fistl
jle
add
test
inc
lret
jb
xor
push
dec
out
lret
test
fcom
push
push
fstp
xchg
push
mov
mov
dec
jne
jnp
sub
loop
or
push
sub
nop
test
cmc
ljmp
in
add
adc
test
jmp
jo
leave
push
and
sub
xchg
dec
push
jle
leave
add
ljmp
daa
sti
mov
add
adcl
ljmp
pop
sub
and
sub
sahf
inc
xchg
ja
jp
fidivs
leave
mov
iretw
fs
mov
sub
popf
mov
mov
xor
mov
xorl
pop
mov
decl
cmp
or
mov
leave
stos
bswap
pushf
or
add
jg
incl
je
popa
or
clc
lods
sub
fdivs
pop
xchg
lret
push
jmp
add
pop
push
fsubrs
mov
decl
push
sbb
rcr
out
jno
outsb
jo
ljmp
jae
adc
incl
mov
imul
mov
dec
nop
test
jl
sbb
out
add
cwtl
les
lcall
or
call
push
aaa
mov
xchg
mov
adc
fsubs
pop
dec
mov
add
sbb
mov
jno
cld
push
sbb
inc
mov
sub
mov
sbb
cld
push
inc
jl
loope
xchg
mov
test
sahf
call
mov
in
push
push
ds
int
push
std
ljmp
fstpl
mov
inc
mov
or
out
out
es
or
add
sbb
out
xchg
call
dec
subb
das
mov
fcmovu
push
mov
pop
xor
pop
aas
adc
insl
sbb
insl
popa
sub
or
jno
adc
leave
cmc
inc
xchg
lea
movsl
xor
decl
dec
push
add
sti
inc
fldt
add
sti
call
call
decl
mov
pop
rclb
mov
adc
sub
call
jp
inc
mov
inc
and
pusha
push
add
and
fcompl
or
cmp
std
sub
mov
popa
cs
fstp
orb
mov
cmc
loopne
and
lcall
lcall
xchg
xchg
dec
and
adc
icebp
popa
pop
add
pusha
pop
or
mulb
and
lcall
ffree
ja
jnp
in
lods
repnz
roll
ret
or
xor
insb
pop
adc
ljmp
js
stc
aas
inc
scas
xor
rorb
push
out
add
dec
cld
lock
pop
jecxz
or
dec
leave
dec
aad
sub
mov
inc
push
aas
pop
ss
fcoml
xor
cmc
daa
call
inc
push
cs
xor
fstpt
push
call
clc
repz
decb
loop
and
repnz
xor
loopne
loope
fisubl
mov
inc
cmp
inc
icebp
lods
sub
sub
lods
or
aaa
ljmp
mov
inc
popa
add
cwtl
repz
jecxz
fidivrl
mov
xchg
cmp
loope
ljmp
scas
xchg
cmp
andl
cmpl
addr16
dec
cltd
pop
and
mov
popf
mov
push
mov
aas
cltd
xor
mov
pop
cltd
popf
push
or
and
in
jb
and
dec
inc
and
dec
lods
insb
jg
insl
mov
cmp
lret
out
cli
jmp
pusha
mov
pusha
fs
xor
adc
adc
cmpsl
inc
decl
xor
loope
cli
sbb
fs
stos
xchg
ja
and
inc
xor
mov
pushl
cli
and
les
xchg
mov
mov
push
addr16
or
xor
decl
sbb
push
inc
test
ja
stc
scas
mov
or
pop
jp
add
ret
ficoml
das
adc
mov
ja
out
pop
out
pop
sub
pop
push
or
ljmp
jle
daa
cltd
dec
adc
dec
repnz
pushf
xchg
jmp
shll
icebp
and
daa
jg
cmc
jmp
mov
mov
outsb
dec
les
in
movsb
cli
mov
xchg
xor
decl
push
mov
add
repz
mov
jmp
dec
pavgw
ret
mov
sub
and
mov
ljmp
lret
xchg
insl
sbb
lods
xchg
xorl
mov
push
std
or
inc
ret
out
xchg
test
repnz
stos
ret
mov
mov
icebp
outsb
in
adc
inc
imul
lds
test
jg
jp
sarb
and
and
jle
add
jno
dec
or
dec
or
in
or
int
stos
ljmp
shll
iret
std
pushf
out
dec
xchg
aad
mov
pop
jecxz
inc
mov
pop
test
into
daa
adc
in
out
ljmp
stos
inc
sub
and
sahf
ret
cs
jge
xor
ret
imul
imul
sbb
or
jns
std
and
insl
test
aaa
cmpsb
es
ret
jb
inc
out
decl
lock
fidivl
aas
and
mov
addl
decl
cs
fnstsw
loop
jecxz
je
cli
ljmp
xchg
gs
sbb
jg
test
sub
xor
jg
xchg
test
xor
sub
and
jbe
xor
mov
scas
js
push
pop
inc
call
push
add
stc
adc
cs
das
sbb
xor
icebp
out
imul
call
ljmp
xchg
inc
scas
xor
mov
xor
xchg
out
pop
dec
sbb
cwtl
daa
call
mov
push
lock
jnp
jo
jb
or
shufps
call
cmp
fldenv
push
sbb
push
in
jmp
incl
cld
inc
xchg
mov
mov
leave
in
adc
icebp
jg
cld
divl
mov
andl
dec
stos
or
outsl
int3
movsl
js
iret
mov
or
pusha
sub
jle
pop
icebp
cld
jg
mov
xchg
push
in
hlt
mov
push
push
push
mov
les
andb
loop
rcr
pushl
mov
dec
pop
stos
fisttpl
sar
inc
mov
lret
cmp
xchg
xor
fmull
mov
fbld
ficoml
enter
mov
adc
cmc
ss
imul
fldt
in
adc
ljmp
ficomps
leave
fwait
jns
outsl
ja
ret
sub
incl
pop
in
dec
test
icebp
cld
sar
adc
adc
lret
cmc
inc
and
pushf
icebp
cmp
mov
and
insl
mov
push
push
test
jne
decl
push
jne
mov
imul
xor
sbb
jb
sbb
negb
cmp
in
icebp
mov
inc
cmp
call
push
mov
add
jg
dec
filds
in
and
inc
jecxz
mov
fwait
data16
test
pop
sub
les
int3
adcb
popa
stos
adc
cld
ljmp
jns
mov
in
sti
mov
xchg
mov
aaa
xor
lcall
insl
and
test
stos
lds
aas
push
mov
cmp
stos
inc
gs
xor
push
mov
inc
dec
mov
dec
lods
add
pushl
mov
pop
aas
addr16
je
cmc
loopne
adc
push
cmp
dec
cmp
daa
cwtl
in
jmp
in
mov
ss
xchg
fsin
xor
sbbl
xchg
push
jp
retw
jmp
adc
arpl
adc
add
sahf
shrb
or
das
fisubrl
and
cld
mov
dec
cld
mov
scas
sti
and
pushl
in
movsl
xor
jns
cs
xchg
loop
es
and
xor
mov
and
fidivs
xor
and
mov
and
jnp
add
cwtl
enter
pop
nop
mov
int3
into
mov
fistpl
pop
ret
cld
mov
call
sbb
xchg
pop
dec
and
adc
stos
sysenter
mov
adc
cmp
ljmp
insl
movsl
fdivs
or
pop
pop
je
fucomi
cmc
push
adc
fwait
sub
les
mov
and
lret
in
loop
mov
insb
xchg
lcall
out
and
jae
into
in
clc
sahf
mov
cmp
xchg
sahf
loopne
into
stos
cmpb
adc
xor
mov
push
pop
sar
pop
xchg
jecxz
loop
mov
push
push
lea
outsb
aas
lcall
mov
mov
or
cltd
sbb
cmp
test
adc
mov
imul
sar
sbb
xor
orl
adc
inc
lds
cld
mov
aam
bound
andb
pop
aaa
lods
mov
cmp
mov
jg
xchg
mov
pusha
shlb
dec
xchg
xchg
push
lcall
or
cwtl
and
xor
stc
and
inc
mov
push
add
pop
cmp
out
lods
add
incl
push
pop
or
push
push
xor
mov
les
pusha
sarl
xor
sbb
stos
and
xchg
adc
cld
cmp
xor
jae
mov
pop
sub
dec
in
dec
gs
incl
add
push
bt
cmp
mov
lea
cmp
xor
loope
movsl
loop
mov
adc
jmp
push
add
lods
cmp
mov
dec
lods
lds
pop
ss
fcomip
push
bound
mov
stos
dec
cmp
pop
lods
outsb
insl
sub
ret
icebp
jmp
xchg
mov
aas
sahf
add
inc
ja
lods
or
mov
in
pusha
and
popa
sbb
loopne
neg
mov
xchg
push
adc
jne
jb
push
xor
push
ja
adc
orb
lods
dec
fwait
mov
jl
lock
push
mov
int
jno
push
decl
pop
cwtl
add
out
pop
push
inc
ret
lret
test
push
test
jmp
xchg
dec
lret
rcrb
mov
push
popf
jmp
in
mov
mov
pop
loopne
in
mov
and
nop
pusha
icebp
sbb
movsl
pcmpgtd
add
lcall
add
stc
jp
add
fbstp
rcrb
pop
fildl
ds
push
mov
incl
mov
mov
sub
sub
pop
cltd
insb
les
pushf
les
jmp
pushl
movsl
ret
loope
cmp
cmp
mov
aam
push
cmpsb
adc
jmp
pop
push
xchg
test
aas
nop
adc
mov
movq
loopne
decl
gs
out
inc
nop
aaa
out
lock
mov
jle
pushf
enter
loope
test
lods
lcall
jecxz
sbb
sarl
hlt
mov
jnp
adc
push
add
jnp
stos
dec
sbb
fcmovnb
mov
xor
mov
in
mov
cmpsb
repz
jge
push
jmp
in
gs
mov
jmp
jg
test
or
shll
cmpb
rol
test
shrb
cmc
cld
jg
sbb
mov
and
pop
daa
sub
push
lds
xor
hlt
xlat
mov
rcl
adc
xchg
xor
jle
ror
jg
lcall
mov
js
sub
jl
insb
imul
std
mov
mov
pop
pop
sbb
std
sbb
inc
dec
sub
call
push
sub
push
push
mov
sub
rcrl
gs
fwait
es
das
adc
subb
xchg
sub
loopne
clc
call
inc
pop
xor
out
add
rolb
xchg
pusha
imul
ljmp
fidivl
imul
jns
popf
data16
sub
push
dec
add
pushl
xor
jge
pop
pop
pop
adc
cmpsl
jns
jns
inc
arpl
div
fmull
inc
mov
pop
lret
lahf
xchg
push
pop
jns
rcrl
pop
dec
push
in
add
imul
pop
imul
push
bound
in
push
dec
clc
movsl
mov
fs
sahf
mov
fistpll
incl
sbb
dec
mov
jns
dec
nop
adc
xchg
sbb
mov
xchg
mov
decl
dec
mov
xchg
test
adc
hlt
dec
cmpsb
jo
adc
popf
mov
and
jg
sahf
rcll
scas
ret
xor
pop
xor
dec
into
inc
cwtl
decl
cmp
cmpsl
ja
sub
jge
imul
and
pop
pop
jmp
cmc
sub
or
add
mov
jae
or
dec
push
iret
push
mov
push
clc
dec
pushf
test
iret
jns
aas
popa
int
je
inc
lods
loop
clc
loope
iret
stc
sub
insb
and
inc
xor
dec
imul
or
out
push
cmpsl
scas
call
leave
pinsrw
pusha
and
decl
sbb
scas
add
mov
pop
or
loop
es
push
loope
decl
hlt
mov
rolb
dec
arpl
xlat
pusha
and
leave
aaa
mov
decl
in
xchg
shl
push
adcl
aas
fldl2e
fs
xor
mov
call
das
push
mov
test
loopne
fsubr
mov
lods
out
lret
lcall
icebp
xchg
dec
mov
pushf
xchg
fbstp
fld
mov
mov
lcall
or
insl
repz
or
arpl
mov
gs
fdivrs
scas
movsb
ljmp
pushf
sbb
arpl
pop
std
adc
mov
into
pop
cwtl
cs
xor
xchg
das
push
add
lret
imul
fs
jg
bnd
lds
bound
sahf
scas
cmp
dec
arpl
inc
or
xor
sbb
test
incl
jp
push
pop
cwtl
adc
mov
mov
mov
push
push
das
mov
jno
and
xlat
push
out
pop
mov
lods
mov
decl
aad
mov
xor
and
push
jmp
inc
dec
cmpsl
xchg
xchg
pop
std
jg
mov
aas
add
mov
aad
or
sub
and
incl
lods
enter
pop
addr16
mov
movsl
into
jg
push
ds
mov
add
xor
sbb
roll
in
fmul
aas
call
add
mov
fwait
pop
add
adc
jb
out
jmp
fisubrl
imul
cmp
inc
test
mov
popf
pop
out
stos
xchg
inc
les
xor
push
loop
incl
das
jp
xor
and
pop
divb
ljmp
cld
mov
sar
popa
cmp
sub
ror
cmp
inc
jmp
pushl
das
or
inc
inc
outsl
lahf
dec
loopne
inc
fmuls
xor
add
cmc
inc
dec
sbb
decl
fcmovne
lds
orb
sbb
lcall
in
pop
sub
cmp
jbe
lcall
pop
repnz
insl
call
push
or
pop
xchg
jmp
outsb
push
xchg
mov
xlat
dec
xor
roll
ljmp
xchg
add
push
jae
adc
dec
sub
mov
aad
ljmp
adc
lea
jecxz
xor
mov
cwtl
jbe
inc
pop
fs
notb
lods
test
sub
mov
shrb
or
ret
fcomip
call
mov
es
push
sti
sub
mov
mov
dec
dec
addr16
call
std
pushl
dec
test
loop
pop
shl
insb
sbb
inc
and
jmp
decl
imul
unpcklps
xchg
out
pushf
dec
dec
sbb
mov
push
mov
jmp
outsl
out
pop
aam
out
cld
push
cmpsb
mov
add
or
lret
mov
cwtl
jae
push
into
lahf
mov
adc
mov
sbb
mov
pop
iret
cmp
jns
xor
cli
test
mov
mov
movsl
movsl
xchg
loop
inc
pop
adc
cmp
adc
and
ljmp
xchg
sbb
xchg
jb
in
popf
lcall
pop
push
pop
or
test
sbb
push
cwtl
mov
cld
mov
sub
imul
jmp
fidivl
daa
jno
popf
mov
jmp
imul
or
dec
fisttps
daa
cmp
sbb
decl
push
cmp
clc
or
cmp
mov
add
in
test
lcall
movsl
in
mov
outsl
rcrl
orl
jae
aaa
mov
cld
jp
dec
pop
aad
sbb
jnp
lock
jnp
or
lods
fnstsw
dec
push
push
mov
adc
dec
lds
hlt
lock
cmc
mov
mov
push
out
cli
pushl
mov
out
push
xchg
inc
xor
pusha
out
xchg
data16
cmpsl
hlt
sarb
ljmp
repnz
js
jo
out
jg
sbbl
mov
arpl
incl
loope
or
push
popf
mov
pop
shlb
or
nop
sub
loopne
fiadds
sbb
je
xchg
jns
pusha
and
pop
cmp
test
mov
add
mov
cld
mov
call
ss
jge
sahf
sbb
xchg
insb
cld
andb
je
mov
mov
fcoml
aam
or
pushl
mov
in
lahf
or
jmp
mov
sub
sub
std
jge,pt
fildll
dec
ljmp
push
jge
pusha
cltd
add
fwait
cwtl
jmp
orl
pop
push
xor
outsl
pop
int3
add
fildll
in
icebp
sahf
cmp
jmp
cmc
dec
sahf
jecxz
int
add
mov
mulb
mov
mov
les
inc
xchg
std
or
add
pop
std
popf
imul
std
jmp
jo
std
std
ret
jne
jg
push
xchg
in
insb
sub
mov
outsl
into
push
push
inc
adc
repz
pushl
inc
inc
hlt
adc
shrl
gs
and
in
xchg
das
mov
lret
adc
lahf
push
pop
pushf
lock
lcall
pop
dec
dec
inc
fmull
xadd
or
outsl
inc
ror
data16
xor
leave
pop
fcomip
push
xchg
jb
sbb
adcl
popa
out
pop
mov
dec
jnp
imul
xlat
sub
sarl
enter
incl
je
sub
add
sub
sbb
insl
mov
mov
pushl
mov
pop
in
mov
add
mov
mov
xor
and
daa
je
mov
scas
not
mov
sbb
cmpsb
rclb
push
cmp
pusha
in
jo
movl
test
xor
dec
mov
xchg
outsl
testb
cltd
out
enter
mov
test
dec
xchg
or
sar
pushl
in
pop
and
cmp
outsb
inc
cmp
lds
out
icebp
add
fldenv
call
arpl
sbb
push
xchg
jecxz
xchg
dec
xchg
sbb
or
in
push
sub
out
and
stc
lock
dec
scas
push
jno
pop
adc
xor
std
lcall
out
sbb
pop
lock
shrb
mov
imul
mov
aam
pop
adc
add
mov
loope
add
cltd
or
fsts
pop
or
and
inc
xor
in
lods
rcr
xchg
inc
out
clc
lcall
cmp
in
or
aam
imul
cmp
and
push
push
dec
stc
daa
lods
mov
bnd
clc
pushl
enter
sub
repnz
lods
pop
mov
mov
mov
add
add
inc
sahf
xchg
jp
pop
leave
lea
add
cmc
fmull
add
div
inc
inc
fdivs
jg
mov
mov
xchg
push
xchg
cmpsl
mov
bound
mull
lcall
jp
int3
mov
cmpsb
jnp
mov
xlat
sbb
jmp
mov
icebp
decl
scas
mov
fistpl
les
leave
sbb
decl
fwait
inc
push
cli
mov
push
mov
mov
ljmp
mov
xlat
es
pop
test
jg
fisubrl
testl
jle
pop
adc
jge
pop
xchg
mov
fbld
sbb
stos
ja
or
xchg
lds
lcall
clc
pop
fidivrl
pop
cmp
jmp
arpl
out
orb
jl
test
lcall
sbb
cs
and
sub
push
sub
push
imul
jecxz
decl
popf
or
lea
outsl
es
mov
arpl
fxch
xchg
push
sti
mov
shlb
sahf
add
pop
xor
cmp
loope
frstor
loope
mov
mov
cmpsb
xchg
hlt
and
fstpl
mov
in
mov
lret
lret
push
xchg
cmc
dec
daa
mov
leave
mov
push
push
lcall
int3
pusha
divb
or
cli
pusha
pop
outsb
push
ds
decl
jmp
cmp
mov
in
lods
andl
leave
xchg
push
das
je
fdiv
push
or
call
lods
xchg
adc
dec
mov
repz
inc
push
lds
daa
jmp
stc
jnp
sbb
lcall
aad
out
adc
dec
xchg
jae
sarb
sbb
adc
sbb
inc
cmp
call
verw
sub
dec
es
xchg
in
inc
ljmp
or
mov
and
mov
inc
aaa
xor
mov
shlb
push
jle
or
mov
push
cld
iret
pop
pop
ja
inc
ljmp
pop
push
xchg
sbb
mov
xchg
cld
jp
jb
lea
ljmp
dec
dec
and
mov
shl
xor
dec
aam
decl
adc
sub
xchg
nop
mov
sbb
rol
sbb
bound
insl
push
mov
test
and
inc
outsb
repnz
cmc
into
cld
sti
decl
lods
int
es
iret
data16
inc
hlt
inc
mov
adc
incl
jne
dec
pop
stc
nop
sub
loope
pop
ret
sbb
sub
fdivp
mov
imul
mov
jle
xor
pop
mov
andb
ljmp
pop
hlt
lcall
imul
mov
cmp
xchg
push
es
inc
out
pushl
pop
lock
push
jno
dec
xchg
fdivrs
inc
xchg
in
mov
rcrl
inc
mov
add
rcrb
cs
xchg
roll
cmp
lcall
cmp
sbb
data16
mov
bound
sbb
cs
imul
push
inc
push
addl
pop
test
cmp
inc
lret
dec
mov
push
js
jb
movsl
test
out
cmp
jnp
imul
pushl
sub
out
test
popf
lods
mov
and
fcomps
inc
aaa
je
imul
into
sub
xor
pop
mov
cld
enter
test
call
xchg
xchg
jecxz
dec
fdivrl
mov
fwait
sub
scas
inc
cmp
ficoml
negb
mov
ljmp
adc
jnp
dec
les
xchg
fabs
outsb
or
dec
decl
xor
mov
je
fidivrs
ljmp
mov
ja
imul
add
xchg
test
xor
mov
xchg
aas
pushl
lcall
push
push
mov
cs
scas
sub
in
stos
in
je
mov
movsl
sbb
inc
stos
arpl
cwtl
jns
je
push
pop
ljmp
rcl
jge
cmc
data16
fdivr
ljmp
xor
push
int3
lods
add
lods
pop
jge
inc
or
mov
jg
decl
loopne
jae
outsb
pushf
test
mov
and
pop
addl
jmp
das
sub
dec
repz
mov
mov
hlt
into
and
incl
fstpt
outsb
mov
sbb
jne
and
xchg
das
add
mov
inc
mov
sub
or
dec
stos
insb
cmp
scas
ljmp
mov
popf
and
xchg
rclb
popf
xchg
add
mov
in
jmp
sar
dec
jle
dec
js
aad
pop
adc
and
push
imul
and
cs
aad
adc
das
clc
sub
jp
add
je
sbb
inc
test
dec
pushl
or
and
sub
clc
das
movsb
aad
mov
push
inc
idiv
ljmp
lret
fldt
movsb
mov
std
stc
dec
inc
fwait
push
outsb
scas
cmp
or
push
scas
mov
inc
fidivrs
lret
jo
mov
sub
adcl
or
cmp
inc
in
lock
imul
ss
mov
lock
fstps
scas
hlt
xlat
int3
adc
dec
por
mov
pushf
cmpsb
add
push
cmp
cmp
push
mov
pushf
repnz
lcall
jnp
adc
and
mov
lea
adc
inc
sbb
popf
ljmp
subl
jns
adc
or
jp
ja
test
or
call
xchg
lcall
je
fdivp
push
faddl
lret
push
repnz
call
mov
mov
std
dec
fcmovnbe
push
test
movsb
inc
dec
mov
dec
pop
or
mov
xor
lea
pusha
jle
in
seta
stos
mov
mov
mov
xlat
ucomiss
push
jg
and
stos
jge
sub
decl
mov
sbb
xor
xchg
jl
push
sub
in
xchg
xorl
jge
fstps
repnz
add
imul
imul
in
mov
sbb
in
popf
fsubs
notl
and
xor
div
push
mov
fistpl
ja
cltd
or
out
lret
add
mov
fistpll
mov
pop
scas
addr16
or
out
cmp
xchg
jl
or
sbb
xchg
mov
mov
lcall
arpl
ret
mov
pop
test
ljmp
divb
fs
in
fistpll
cmc
je
adc
jae
jns
xchg
adc
lahf
add
and
imul
push
in
mov
repz
test
cmpsl
pop
data16
and
addr16
cmpl
cmc
repz
xchg
fs
int
test
sti
fsubrs
stc
xchg
sub
movsl
jnp
incl
mov
or
push
jbe
mov
mov
call
incl
addl
int3
or
ss
jb
mov
pop
jo
out
lahf
sub
or
inc
xchg
imul
out
pop
ja
decl
and
add
testl
jl
add
adc
adc
mov
mov
cltd
add
aaa
subb
pushf
aas
in
ret
inc
xor
jg
ljmp
int
mov
out
ret
js
jl
out
in
lahf
jmp
rolb
dec
cmpl
mov
jp
dec
push
or
rol
xchg
pop
and
cmp
data16
rcrl
mov
out
or
cmc
jmp
and
mov
inc
cmp
scas
cld
add
adc
call
adc
hlt
and
outsl
adc
pushl
pop
and
xlat
mov
int
jecxz
mov
js
pop
sub
mov
outsl
loopne
pop
xor
mov
fldl
dec
add
call
pop
push
add
mov
test
and
jg
jb
es
and
out
hlt
sub
jecxz
jp
cmp
add
or
inc
mov
or
push
inc
cmc
iret
cltd
pushl
lock
call
jo
mov
and
pop
push
dec
clc
mov
incl
loop
pop
leave
cmp
loop
mov
cwtl
cmp
inc
adcb
jg
or
sbb
push
xorl
es
notb
jmp
cs
dec
mov
pop
mov
mov
xchg
out
int3
dec
mov
outsl
mov
cmc
movsb
mov
cli
mov
leave
lods
sub
shrl
leave
push
negb
pop
call
cmp
push
add
mov
lahf
jo
jmp
lcall
out
mov
ficomps
mov
call
mov
out
call
push
loopne
pop
sbb
jg
xchg
or
cmp
lret
xchg
and
sti
enter
mov
cld
lock
sbb
mov
sub
inc
fisubs
movsb
or
sbb
jg
loope
push
stos
pop
movsl
bt
mov
shrb
mov
push
mov
mov
test
cmp
cmc
add
push
daa
clc
loopne
xchg
lret
mov
lret
mov
pop
inc
loop
ret
lds
les
lret
nop
mov
lods
pop
cli
dec
in
and
dec
das
mov
lcall
aad
test
lret
xchg
add
sub
ret
popf
mov
or
inc
push
icebp
test
ret
call
insl
aam
cmp
rorl
pop
fimuls
push
mov
inc
lcall
es
sub
scas
cwtl
clc
and
in
in
push
dec
mov
ljmp
jae
mov
adc
dec
cltd
cld
fimull
push
loop
xor
incl
movsl
insb
mov
test
ds
pusha
aad
fnstenv
push
and
sbb
or
jmp
pop
incl
loop
pop
movb
jne
nop
imul
outsl
mov
hlt
ljmp
sub
xchg
andl
push
sbb
sbb
lret
ret
daa
test
clc
dec
fcoml
rcrb
cmp
das
add
pushl
loopne
push
push
scas
jmp
ss
push
mov
xor
mov
call
movsb
es
aaa
mov
rolb
test
inc
inc
mov
push
hlt
or
or
ret
push
scas
mov
add
in
ds
cwtl
cmpsb
loope
jnp
das
lods
mov
jmp
test
mov
arpl
jle
nop
fdivl
ljmp
shlb
sub
subl
xchg
mov
rcrl
clc
jmp
inc
mov
enter
mov
fsubrl
or
sbb
mov
mov
and
add
jae
xchg
or
fsubl
ljmp
push
mov
add
or
cwtl
xlat
pusha
inc
dec
jge
mov
add
cmp
dec
push
cmp
cmpsl
jae
cmp
std
xchg
pop
pop
push
cli
icebp
cli
out
add
leave
out
lret
push
and
aas
jmp
rorl
jbe
push
inc
mov
mov
jl
or
call
mov
sahf
scas
stos
shll
xchg
out
sub
outsl
subb
incl
adc
inc
test
push
repz
jns
jle
inc
shrl
mov
adc
jecxz
incl
push
xchg
xchg
aam
clc
jecxz
movsb
lret
push
int
out
int
call
ds
lret
aaa
cmp
and
insl
out
mov
insb
xchg
incb
jg
xchg
push
ret
xchg
xchg
dec
mov
aas
cwtl
loope
orb
cmp
xchg
cmp
pushl
or
shlb
scas
mov
enter
filds
cmp
pushl
std
push
mov
sahf
mov
mov
scas
or
inc
lret
int
cmp
rorb
push
fisttpll
sbb
sbb
sbb
movsb
jle
mov
in
comiss
mov
sub
sub
in
pop
jg
mov
test
mov
in
sti
mov
inc
add
scas
cli
call
adc
popf
notl
lods
mov
pop
add
sahf
adc
push
jmp
mov
and
inc
adc
icebp
jo
pop
pop
fsubl
into
sub
push
pop
ljmp
mov
add
adc
lret
enter
mov
pop
in
jg
xor
push
sbb
mov
xor
push
cltd
inc
lcall
lea
lea
xchg
pop
pop
sar
jo
cmp
fimuls
addr16
decl
push
xor
jmp
ljmp
push
sarl
pop
test
ljmp
lret
or
ret
add
push
pop
jg
inc
xlat
inc
and
stc
sub
xchg
in
mov
and
ljmp
cli
aas
sbb
xchg
mov
cld
das
and
cltd
inc
ljmp
push
mov
stos
mov
out
sub
pop
aad
test
and
outsb
mov
mov
leave
adc
stc
loope
data16
sahf
inc
inc
push
cmp
fcomip
cmp
lock
pop
add
xchg
mov
test
mov
mov
clc
jbe
xchg
push
mov
insb
mov
cmp
push
hlt
lcall
out
mov
popa
or
pop
push
ror
mov
std
ljmp
aas
in
leave
pusha
adc
add
cmpsb
cld
dec
arpl
in
push
xchg
cmp
aad
xor
mov
call
stos
xor
lcall
lahf
lcall
jl
push
sub
sarl
loopne
add
push
movsb
sbb
arpl
ja
test
push
ret
pushf
sbb
fucomip
sub
pop
jb
or
cmpsb
aam
int3
mov
call
dec
sbb
cmc
and
pop
loope
cmp
fbld
fs
inc
sbb
in
and
clc
mov
decl
mov
into
cmp
shrl
lods
data16
xchg
adcl
clc
mov
decl
jle
dec
cmpl
jp
jecxz
xchg
mov
mov
dec
dec
outsb
pop
mov
mov
scas
or
or
sti
aas
outsb
lcall
sbb
and
xchg
es
lock
pop
or
pushl
or
bound
mov
mov
imul
stos
stos
rcl
test
or
dec
loopne
dec
sbb
cmc
pinsrw
xchg
pop
adc
jp
pop
loop
push
mov
sahf
incl
mov
mov
xor
push
out
lods
mov
sub
pusha
fstl
jmp
or
xchg
mov
pop
aam
and
and
lret
clc
sub
in
jno
fs
or
outsl
fldl
sar
ljmp
pop
ret
sti
xor
mov
xor
cld
pop
sub
negb
adc
lcall
mov
add
cmp
mov
dec
mov
fwait
xchg
or
lcall
pop
or
mov
pop
jg
xor
ss
xchg
in
andb
lcall
lret
dec
jg
cmpl
ret
out
adc
pusha
cmp
sub
sbb
fdivrl
adc
mov
sbb
rcrl
pop
movsb
jns
cmp
in
xchg
out
call
fmull
outsb
idivl
mov
push
mov
or
lds
incl
loop
cmpsl
testb
ret
push
cmp
jmp
out
sti
cmp
jecxz
pop
dec
push
repz
loopne
dec
jge
fsubp
inc
xor
nop
fisubrs
imul
jg
ja
jnp
jg
jl
xchg
rolb
in
into
popf
sub
and
movsl
and
jle
adc
sub
lcall
add
stos
hlt
lods
xlat
out
insb
test
inc
insl
mov
cmp
mov
xchg
xchg
xchg
lcall
nop
jle
sahf
nop
dec
jae
ss
mov
incl
fwait
mov
out
mov
rolb
scas
cmp
xchg
fsts
fistl
sub
into
adc
cmp
xchg
inc
lret
sbb
lcall
mov
and
sub
jecxz
mov
hlt
mov
testb
cmc
or
addr16
cmpsl
fisubrl
mov
add
test
xchg
sub
dec
call
dec
adc
lcall
mov
call
jge
idivb
insb
dec
in
pop
popf
xchg
nop
xlat
test
dec
test
pop
mov
test
jmp
mov
cld
push
out
ret
popl
and
push
js
xor
xchg
scas
ret
out
cld
iret
popa
into
xlat
mov
add
mov
pop
adc
test
push
in
inc
dec
jnp
adc
xchg
xor
adc
stos
push
stos
cmp
loop
xchg
lcall
or
pusha
pushf
sbbb
ljmp
cmpsb
sub
gs
adc
push
sub
xchg
inc
cmp
cmp
decl
ljmp
mov
inc
rcl
movsl
mov
xchg
cmp
jns
ljmp
mov
sbb
jns
xchg
xchg
mov
xchg
inc
aad
or
push
pushf
iret
js
call
arpl
mov
lods
rclb
xchg
sbb
jecxz
test
std
sti
inc
mov
pushl
push
adc
sbb
rcrb
mov
popa
negl
dec
push
push
dec
fstpl
stos
cld
dec
pop
std
cs
jmp
mov
pop
xor
pop
mov
js
incl
pushf
rorb
mov
jbe
lds
lds
stos
or
addr16
inc
movsw
mov
outsb
cmc
inc
mov
inc
mov
sbb
out
sub
dec
dec
dec
shrb
loopne
ss
test
cs
das
and
nop
or
jmp
in
aad
fs
push
mov
cmp
jns
lea
jmp
push
call
lock
pop
and
aam
jnp
lcall
ds
mov
and
push
jl
sub
jb
xor
inc
pop
ret
cmp
cltd
mov
sbb
add
push
adc
mov
mov
cmp
sub
mov
dec
inc
std
decl
xchg
dec
sub
add
push
inc
stc
addl
andl
iret
and
sub
cld
movsb
dec
xor
fimuls
push
push
pop
xor
inc
sub
mov
sub
insb
and
sub
icebp
aam
jle
xor
mov
in
cmp
ficomps
push
ficomps
hlt
ror
addr16
or
inc
xor
lock
das
sub
push
cmp
dec
and
inc
inc
xchg
mov
jg
in
sbb
nop
jo
sub
jle
inc
repz
jnp
bound
jmp
dec
and
push
mov
scas
in
mov
loopne
mov
and
add
xlat
or
repnz
lods
sti
aam
jmp
mov
ret
adc
dec
test
movsl
jl
mov
int
mov
hlt
decl
xchg
scas
dec
loopne
aam
nop
mov
lock
pop
nop
jmp
push
pop
xchg
xchg
and
cli
sbb
xor
cmp
inc
adc
call
movsb
loope
mov
in
ds
and
lea
jp
mov
test
mov
cmpsb
cvtps2pd
or
cltd
mov
push
clc
out
call
cltd
js
and
sbb
mov
jg
or
aaa
movsb
sub
leave
or
mov
adcl
lcall
push
nop
dec
xor
jne
or
xchg
fistpl
out
inc
sti
shrl
call
lret
fstpt
dec
js
mov
cltd
rolb
jl
ljmp
pop
std
jg
in
iret
mov
jbe
jle
fidivl
add
jo
enter
out
mov
mov
inc
or
es
xor
cwtl
xchg
or
rorl
lcall
push
push
jmp
add
rclb
xor
mov
sbb
mov
pop
xor
stos
leave
lods
mov
test
cs
jl
cwtl
adcl
pop
dec
add
and
icebp
pusha
and
js
cmp
or
mov
cmp
scas
sub
ret
sbb
cmpsb
imul
das
in
scas
or
sbb
and
jle
jmp
dec
add
xchg
jmp
xchg
jecxz
in
cs
push
xor
scas
call
sbb
pushf
pop
sahf
xchg
xchg
aad
daa
sarl
movsb
test
inc
outsl
mov
jns
adc
inc
push
add
cmp
incl
jb
pop
dec
leave
test
mov
push
dec
xchg
xchg
jge
lds
add
add
adc
aad
inc
mov
mov
sar
lcall
cmp
sbb
dec
andl
in
sbb
mov
push
fwait
push
stos
add
jmp
nop
fnsave
jg
je
ret
fsubrl
sub
ljmp
cltd
popf
mov
stos
nopl
ja
call
or
fbld
add
adc
pop
call
gs
mov
lock
out
hlt
in
sbb
cld
xor
ret
fstl
test
pushl
cmp
cmpsb
fwait
test
test
dec
sub
lods
push
xchg
or
stos
incb
cmpsl
or
jno
cmp
pavgb
inc
pop
pop
test
jns
mov
int3
fists
sub
rol
dec
popf
test
lahf
push
jo
rorl
lcall
jmp
or
cs
imul
add
adc
mov
push
lock
decl
scas
xchg
xchg
imul
adc
div
cmpsb
sbb
ljmp
jle
pop
adc
dec
mov
mov
je
int
arpl
into
addr16
lcall
popf
cs
clc
inc
and
sub
mov
shl
rcll
dec
pop
mov
jnp
jp
adc
pop
sbb
cli
jno
push
or
test
mov
inc
or
insb
inc
loopne
mov
mov
push
jo
test
xor
je
mov
and
adc
lods
iret
imul
icebp
decl
jb
mov
or
rcll
jmp
jns
data16
js
and
sbb
rolb
pop
fdivl
mov
jno
je
push
les
and
pushl
sbb
ja
jp
adc
rclb
inc
fiaddl
cmp
stos
and
lcall
xor
rorl
pop
movsl
flds
jo
inc
sbb
dec
ljmp
sbb
scas
shll
in
mov
fldenv
repnz
stc
test
jecxz
and
mov
iret
dec
test
out
cli
std
mov
and
outsb
mov
popa
std
shrl
test
xchg
in
jmp
or
add
sub
xchg
add
lods
add
ja
ds
insb
or
cmp
mov
cmp
pusha
enter
pop
mov
mov
dec
test
rclb
int3
cmp
test
addr16
in
push
cmpsb
sub
nop
cmp
popf
je
mov
fimull
mov
mov
adc
rcr
add
dec
xlat
pop
cmpsb
push
xor
xchg
dec
fildll
or
dec
sub
leave
pusha
iret
push
std
rcrb
dec
adc
xor
and
inc
sub
add
jns
in
push
mov
std
jle
mov
jmp
mov
pushf
js
push
adc
push
dec
cli
loope
test
cmpb
mov
pushl
xchg
dec
pop
jmp
aam
ffreep
jle
ss
inc
xor
aaa
sub
lods
xchg
inc
lea
mov
aaa
mov
mov
mov
adc
lahf
fs
ljmp
jg
adc
loopne
mov
aam
jnp
adc
mov
ficompl
sbb
cwtl
fwait
shlb
rolb
test
inc
jg
ljmp
jns
sbb
nop
jp
fldenv
jnp
js
and
fldenv
push
mov
jmp
xor
pop
test
cmpl
lret
js
scas
decl
mov
lcall
push
notb
outsl
fmull
inc
add
ret
dec
or
jmp
lds
mov
cli
ret
cmpsb
xchg
movb
fildll
enter
push
movb
or
data16
and
xchg
or
adc
push
add
mov
and
decl
test
imul
les
cmc
addr16
xor
mov
mov
sbb
pop
divl
mov
jge
pcmpgtw
mov
test
mov
in
mov
lock
push
pop
and
out
loope
jae
or
sti
pusha
dec
imul
clc
cmp
je
fcoml
xor
mov
adc
stc
fcomi
jg
ljmp
pop
sbb
inc
outsb
lcall
ret
imul
inc
mov
cli
pop
paddd
sub
jecxz
adc
rolb
xor
je
movsb
add
lcall
ret
and
dec
inc
aas
jmp
mov
inc
out
lcall
decl
cli
pushf
jle
imul
andl
mov
mov
dec
sbb
daa
pop
incl
std
dec
cmpsb
xchg
stos
or
adc
push
mov
sbb
loopne
clc
divl
popf
das
sar
dec
rorl
int
mov
mov
pop
jbe
add
jge
ljmp
jg
fsubrp
inc
or
js
outsb
push
inc
xchg
push
mov
rorb
out
pusha
hlt
jae
sub
fldl
xchg
popf
jp
xchg
imul
incl
sbb
lds
add
xchg
mov
add
and
scas
xchg
movl
fisttpl
and
mov
jo
adc
fwait
sub
incl
and
mov
mov
jmp
lea
xchg
in
fcomp
xor
ljmp
daa
xchg
jbe
rorb
leave
imul
shrb
std
aad
ret
insl
sub
fiadds
insb
cli
push
setb
ret
pop
mul
jb
test
jmp
imul
test
xchg
int
inc
jae
idiv
imul
dec
mov
dec
imul
adc
sahf
mov
push
cs
cmp
js
stos
mov
jmp
pushf
out
gs
cmp
adc
imul
sahf
or
mov
jg
mov
cmp
lcall
jecxz
icebp
add
subl
loop
push
dec
aas
test
stos
adc
mov
int
sub
inc
sub
mov
xchg
push
fisubrs
paddd
outsl
clc
test
mov
xor
pop
shll
into
rep
test
xor
sti
repz
xchg
push
push
das
cwtl
fs
jmp
mov
insb
pop
xchg
sarl
push
pop
xor
xor
cmp
jp
pop
rcll
ljmp
iret
test
xchg
jbe
popf
aam
ja
inc
xor
js
stos
jl
mov
push
call
fnstcw
push
sub
jbe
cli
mov
pushl
or
mov
pop
outsl
cmp
add
pop
dec
pop
adc
mov
cmpsb
insl
mov
sahf
adc
push
mov
sbb
sbb
call
lds
inc
jl
mov
jae
add
andb
test
call
adc
push
mov
cmp
cmp
aaa
mov
in
cmpsl
jno
mov
imul
popa
call
add
xchg
lret
sarl
std
sbbb
fldcw
mov
out
jecxz
ljmp
cmp
mov
in
popa
mov
loopne
sbb
cmc
push
xchg
fidivrs
mov
out
les
xor
ss
decl
add
leave
cmp
jnp
out
push
xchg
ljmp
adc
test
lods
incl
and
dec
ja
mov
cmp
ljmp
pop
out
sub
ljmp
adcl
add
incl
dec
fdivp
adc
dec
push
mov
mov
mov
in
movsb
or
movsl
jnp
cmpl
inc
inc
xchg
fcomps
les
cld
xchg
pop
cwtl
clc
jo
shl
incl
push
push
cli
pop
cmp
jb
mov
repz
pop
add
xchg
jb
or
decl
aas
push
vmwrite
popa
push
cwtl
lahf
dec
cmpl
mov
aaa
inc
test
cld
cmp
dec
pop
and
test
mov
orb
sub
outsl
in
dec
je
add
addb
and
and
lcall
or
add
mov
add
in
fidivl
nop
mov
jg
add
pop
cmp
push
add
pop
mov
add
mov
inc
decb
mov
addb
or
inc
push
adc
pop
inc
repnz
adc
pop
and
and
mov
test
vmwrite
pop
pop
imul
push
ret
dec
xor
jg
or
jnp
xchg
cmp
push
daa
add
xchg
dec
and
cmpsl
push
and
out
xor
push
movsb
push
movsb
inc
scas
push
and
stos
jg
aas
xlat
push
and
push
test
and
imul
push
jl
push
push
inc
pop
pop
add
mov
pop
std
mov
lahf
sbb
add
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
mov
stos
int
or
lret
imul
mov
push
add
push
sub
lret
mov
js
push
add
flds
imul
mov
stos
pop
stos
mov
call
jbe
add
jo
mov
ret
add
push
rcrl
shrb
insl
add
push
fidivrl
iret
outsb
or
push
fidivl
adc
jns
out
jge
fisttps
sub
xorb
ljmp
movsb
push
add
mov
pusha
fcmovnu
mov
shlb
mov
xlat
mov
mov
push
jne
push
lahf
jbe
fcmovnbe
jb
ret
add
mov
jnp
add
push
pop
dec
add
sarl
add
inc
xchg
jns
fstpl
cs
push
shlb
into
divb
stos
aas
add
ja
out
mov
jne
add
ja
push
subl
push
xlat
ja
js
push
fsubp
mov
neg
jns
push
jp
jp
inc
push
fidivrl
mov
mov
sarl
ja
fldl
or
push
ret
jmp
ljmp
popf
inc
roll
xchg
in
cmpsb
jmp
shll
ss
xchg
xor
xchg
push
setbe
xor
mov
inc
xchg
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
fcomi
loope
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
outsl
mov
mov
push
jecxz
push
imulb
jmp
std
fadd
add
cld
out
out
push
hlt
clc
cmp
repz
cli
sti
cld
std
or
repz
jecxz
arpl
inc
jae
data16
imul
ss
int
pop
add
pop
add
pop
add
sub
sbb
cmp
add
mov
add
outsb
add
testl
outsl
or
or
flds
lods
stos
test
test
or
or
or
pop
rcll
pop
adc
adc
lods
fwait
pop
mov
add
pop
stos
femms
lods
addr16
mov
pop
mov
mov
stos
insl
add
scas
insl
lods
pop
pop
adc
sbb
lods
adc
sbb
add
scas
scas
scas
or
int
scas
sbb
mov
mov
or
out
and
inc
and
mov
push
adc
or
xchg
mov
and
mov
pop
and
pop
push
and
mov
xor
inc
pop
pop
sub
mov
pop
sub
pop
and
mov
pop
push
sbb
nop
aas
pop
pop
aas
cmp
int
and
cmp
pop
roll
pop
aaa
cmpsb
add
insb
sti
incl
mov
pop
xor
pop
or
or
std
int3
in
push
add
pop
pop
xor
or
mov
pop
das
push
cs
xor
add
xor
aaa
in
std
xor
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
incl
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
jmp
xor
xor
pushw
dec
dec
cmpb
jo
mov
inc
and
incl
movsb
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
decl
xchg
nop
xchg
xchg
sub
dec
ja
jns
dec
mov
sub
js
imul
cmp
je
pop
shrb
jg
sub
push
xchg
clts
and
add
add
xor
scas
aas
adc
or
out
jg
jle
xchg
pop
push
dec
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
ja
les
cs
xor
mov
add
sti
jne
pop
jbe
dec
sbb
and
mov
xchg
jo
push
inc
mov
cmp
or
add
sub
xchg
jae
xchg
jp
inc
push
jle
jmp
inc
mov
aaa
add
xchg
jno
lret
push
bound
out
cmp
mov
mov
inc
push
sahf
aas
mov
insb
add
outsb
add
xchg
xchg
pop
push
data16
cmpsl
mov
cmpsb
dec
push
dec
push
movsb
jae
add
jb
das
pop
mov
shll
outsl
pop
xlat
pushf
push
rorb
add
lcall
outsb
mov
dec
fdivrs
sti
push
add
ja
sahf
jbe
fistpl
imul
notb
outsb
ds
push
add
and
es
js
outsb
testb
mov
shrl
insb
mov
outsb
push
outsl
ror
push
fsubrl
or
lret
mov
fiadds
call
pop
mov
data16
add
add
fs
mov
add
test
xchg
or
loopne
iret
sahf
mov
jnp
add
jb
out
in
push
jle
insb
push
std
orl
jecxz
or
push
aad
fidivrl
divb
fildl
adc
push
xorl
sbb
sbbl
mov
faddl
in
mov
push
sub
into
data16
nop
and
out
xchg
in
xchg
xor
in
xchg
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
cmp
pushf
cmp
aam
lock
jle
push
cmpsb
scas
jo
test
sahf
out
mov
pop
mov
into
shll
insl
roll
int
mov
mov
sarb
jl
sarl
xchg
pop
push
jle
data16
add
lods
add
hlt
cs
dec
out
je
add
xchg
dec
daa
push
and
sub
mov
mov
femms
or
or
jnp
das
sbb
es
push
adc
push
add
incb
adc
adc
ds
add
dec
sti
test
sbb
mov
sbb
mov
testb
mov
add
and
pop
sbb
mov
mov
loopne
ds
xor
cmpl
and
pop
lods
add
cmp
aas
cmp
pop
and
cmp
roll
cmp
ds
jbe
sbb
inc
jle
loopne
test
xor
dec
fidivrl
cmpb
aas
ja
neg
adc
ds
xor
dec
inc
out
mov
test
mov
ds
bound
pusha
add
mov
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
pop
dec
test
mov
mov
ds
xor
sub
sub
sub
sub
nop
add
dec
add
cli
pushl
xor
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
orl
nop
pop
dec
js
outsl
or
popa
das
pop
imul
nop
cltd
mov
call
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
mov
jl
js
jg
test
jb
jae
jo
outsb
pushf
sti
or
stos
lds
jns
xlat
imul
rolb
add
sti
add
adc
loopne
or
push
push
sti
jg
incl
cli
cmc
repz
dec
xor
aas
add
call
inc
add
mov
add
mov
push
mov
and
mov
repnz
cmpsb
cwtl
fistpll
addr16
add
pushf
add
mov
fwait
inc
push
in
lcall
or
mov
pop
jo
or
jae
js
jge
pop
into
xchg
add
mov
mov
test
scas
xchg
fldt
add
js
in
and
out
mov
sub
sub
cltd
in
imul
push
sub
nop
sub
insl
xchg
xor
xchg
outsb
lcall
insl
mov
mov
jbe
negl
fcmove
fst
sbb
out
es
push
lret
loopne
push
adc
or
outsb
into
fdivrp
pop
and
add
jg
jle
jge
push
and
incl
inc
push
xchg
and
dec
dec
enter
dec
dec
dec
add
pop
add
push
dec
or
adc
cmp
in
div
mov
or
dec
dec
dec
inc
add
push
adc
add
stc
pusha
jg
inc
or
pop
pop
cmovg
cmpsl
std
pop
repz
push
dec
sbb
inc
adc
inc
in
in
incb
dec
sbb
dec
add
dec
adc
inc
ds
cmp
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
test
rol
sub
push
lcall
push
mov
inc
mov
add
mov
push
addl
push
outsl
add
mov
pop
xor
add
or
and
push
cmpsl
jbe
mov
ror
pop
sub
and
lret
dec
add
push
es
sub
outsb
cmovbe
shll
test
adc
es
cmp
lcall
in
cltd
fadds
in
lock
sbb
mov
xorps
inc
sub
jg
push
pop
aaa
add
orb
pop
test
cwtl
test
cwtl
pop
lahf
xchg
aam
mov
aad
out
cli
mov
or
cli
fists
inc
and
inc
pop
jg
jns
and
cli
orl
sbbl
sti
and
mov
jg
das
sti
mov
in
and
jle
sub
dec
sti
jg
add
mov
xchg
jg
addb
pop
mov
sbb
sbb
cld
nop
push
sbbb
rolb
jg
fadds
std
ja
jg
and
add
xor
jg
xchg
xor
dec
adcl
nop
xchg
incb
or
pusha
xchg
xor
decl
and
add
arpl
or
inc
or
or
jg
mov
pop
and
jg
add
jg
bound
sbb
jbe
mov
cmp
test
mov
jle
fs
and
sbb
pusha
incl
pop
push
jmp
and
jle
lret
imul
addr16
add
rorl
and
jg
pop
add
xor
jg
jg
add
add
adc
jg
gs
push
add
jg
inc
or
mov
and
decl
pop
sbb
jg
jle
pop
aam
mov
xor
push
cmpsb
ljmp
stos
pop
insl
arpl
mov
pop
add
daa
aas
xchg
xorl
ficompl
jle
add
pop
inc
push
incl
inc
test
cli
mov
jle
jnp
mov
push
dec
xchg
push
bound
add
into
imul
push
mov
insl
outsl
jnp
daa
push
arpl
pop
fwait
or
and
arpl
sbb
mov
test
dec
incl
jmp
sub
ljmp
mov
jle,pt
inc
push
call
push
sbb
dec
jmp
repz
mov
push
jne
push
push
jne
pop
and
jbe
out
push
jnp
insl
inc
sub
push
jp
push
js
inc
in
mov
pop
add
inc
ja
jmp
fdivrs
test
mov
push
outsb
ds
call
jle
fnstcw
mov
outsb
ss
and
or
ljmp
call
dec
ja
xchg
dec
ja
xchg
adc
mov
fwait
adc
xchg
inc
outsl
mov
push
push
mov
mov
jns
jbe
sahf
inc
out
mov
data16
push
xchg
or
pushf
cmp
ss
mov
xchg
xor
push
xchg
xor
sub
sub
nop
daa
ss
cmpsl
test
cmp
in
mov
xor
cwtl
aaa
outsb
call
aam
push
mov
les
jg
pop
fnsave
xor
jo
int
inc
andb
sahf
movb
xor
and
ss
xchg
push
pop
push
or
mov
pushw
xchg
movb
sbb
pop
ja
divb
push
aam
cld
mov
add
add
inc
bound
and
and
shll
push
subb
sub
xor
pop
mov
frstor
adc
pop
sub
mov
lea
stc
aas
outsl
popf
push
imul
mov
sbb
test
push
lock
mov
movsb
cmp
cmp
icebp
out
jg
jb
xor
in
add
mov
push
inc
fdivrp
ds
adc
pop
dec
out
pop
repnz
mov
push
mov
inc
xchg
inc
push
push
sbb
xor
adc
mov
cli
add
std
mov
jmp
syscall
mov
sub
xchg
fsubrs
jp
aam
pop
lcall
or
sub
xchg
daa
cld
pop
fisubrl
mov
das
pop
cld
ljmp
add
or
push
lcall
std
out
adc
ja
mov
or
sbb
sti
je
xor
xchg
sbb
sbbb
lods
das
inc
test
call
decl
sub
inc
sub
lcall
and
decb
cmpsb
jmp
mov
ljmp
xor
cmpsb
test
daa
outsb
decb
mov
sbb
inc
clts
add
mov
mov
lfs
fmul
jle
adc
mov
sti
out
punpckhdq
pop
sub
push
add
dec
incl
pop
xchg
lods
iret
sub
xor
incl
call
adc
sub
xorl
add
mov
daa
outsl
mov
push
std
call
call
decl
stos
inc
popa
push
call
push
add
shll
fsubl
add
incl
cwtl
cmp
jg
movsb
fwait
test
cli
idiv
loop
add
sbb
sub
ljmp
decl
stc
sbb
fcmovbe
insl
fnstenv
jmp
aaa
mov
sbb
mov
mov
or
cmp
roll
dec
jp
nop
jbe
ret
incl
dec
mov
ljmp
lahf
inc
inc
cmpsb
pop
cmp
inc
inc
pop
inc
pop
mov
aaa
push
pop
sahf
movsb
dec
push
out
fwait
int
push
popf
inc
cmpsb
dec
dec
inc
jnp
push
dec
cs
dec
mov
pusha
xchg
cmp
and
out
enter
push
shrb
rcl
outsb
shrb
int
fst
es
push
jb
and
xchg
imulb
push
iret
insl
je
cmpsb
xchg
pop
daa
outsl
pop
imul
dec
cmpsb
push
push
lcall
inc
lcall
dec
dec
dec
pop
add
movsb
es
cmpsb
adc
mov
popf
cmp
aas
decb
lcall
push
inc
push
xchg
mov
xchg
fs
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
cmp
xchg
xchg
notb
sub
pushl
xchg
scas
incl
mov
data16
fimuls
add
add
push
dec
cli
aaa
aad
or
faddl
jge
jns
addr16
jnp
jp
or
jl
or
in
cmpsb
jns
jl
push
jge
jg
int3
in
pop
cwtl
es
jbe
adc
fidivrl
push
dec
push
fucomi
out
fisttps
fnstcw
repnz
jae
pop
fidivrl
push
mov
xchg
out
jnp
jge
hlt
in
add
int3
outsb
nop
notl
and
sub
or
pop
mov
push
stos
add
push
adc
add
adc
int
add
mov
subb
lahf
dec
es
addl
orb
clc
lahf
bound
jg
and
xchg
out
push
push
sbb
mov
jo
mov
cli
incl
mov
jbe
clc
push
idiv
mov
jb
sub
jg
mov
icebp
or
cld
mov
out
ja
jno
sub
jg
mov
icebp
fucomip
or
jg
je
daa
jg
jns
add
mov
ja
loope
xchg
jl
cmp
cld
jp
es
xchg
rcll
aaa
incb
jge
and
or
orb
jg
dec
stos
dec
pop
ja
movsb
addr16
orl
mov
icebp
idiv
lcall
push
faddl
rolb
push
and
lahf
inc
push
int3
decl
pop
jle
mov
fidivrl
arpl
clc
jbe
fidivs
jmp
mov
push
pop
push
pop
nop
jbe
nop
push
pop
or
and
mov
mov
push
int
push
jns
or
pop
nop
mov
push
mov
jmp
xchg
jmp
mov
sti
popf
fldcw
sbb
jmp
adcb
add
lcall
cs
sbb
loope
and
lret
jg
out
mov
inc
push
test
or
iret
sbb
push
mov
add
lahf
aam
jp
stc
inc
or
xlat
mov
push
cmovno
arpl
adc
sbb
add
adc
rolb
push
fiadds
in
add
add
nop
or
add
add
or
inc
lahf
aaa
orb
lret
adc
call
sub
pop
pop
xchg
push
loop
fnstenv
jp
into
pop
push
sbb
push
sbb
push
or
and
or
inc
or
arpl
dec
shrl
or
stos
test
add
push
add
xchg
mov
cmpsl
dec
adc
pop
and
pusha
jecxz
mov
inc
ret
add
lock
xchg
icebp
inc
push
gs
jo
push
icebp
or
pop
push
insb
dec
add
popa
test
adc
add
lret
push
push
jno
sub
loopne
iret
adc
aaa
xchg
adc
scas
add
dec
test
fiaddl
add
movsb
xchg
inc
jmp
lahf
jo
das
fidivl
sbb
sbb
testb
movsb
outsl
jb
aaa
inc
jge
cmp
insb
insl
lret
push
iret
add
or
subb
fidivs
sub
mov
sbb
add
add
add
lcall
jbe
adc
cs
add
add
and
jo
ljmp
js
popf
in
sarl
shlb
xor
adc
jb
jecxz
lea
mov
or
push
fcomps
inc
xchg
fists
xor
or
pop
gs
mov
add
ss
push
xor
roll
repz
les
or
lcall
lahf
push
add
add
xchg
push
sti
jo
xor
dec
push
outsl
loop
lods
jge
xchg
push
pop
cmp
les
pop
xor
xchg
popa
jnp
lea
pop
arpl
loop
insb
out
inc
imul
sbbl
inc
pusha
pop
pushf
push
mov
shll
in
push
adc
dec
aam
fwait
lods
adc
xchg
popa
sbb
add
sbb
ret
or
add
xor
arpl
jnp
mov
adc
push
test
lea
popa
add
add
fiaddl
popa
add
xchg
cmp
push
mov
scas
subl
loop
test
add
cwtl
stos
push
add
and
cmp
sbb
lret
es
je
push
mov
arpl
sbb
sub
push
add
mov
xor
add
push
add
das
sub
outsl
and
and
adc
or
cmp
pop
adcl
pop
mov
jbe
lret
cmp
xor
and
sarl
xchg
lea
mov
pusha
lcall
mov
arpl
pop
xchg
arpl
push
and
pop
lds
gs
adcb
arpl
btc
dec
insb
fmuls
movb
aad
mov
or
xor
inc
popa
pop
push
sub
ret
sbb
and
jns
in
mov
xorb
mov
fists
fdivs
pusha
push
lods
pop
fwait
mov
in
mov
out
jbe
add
sub
popf
mov
mov
ret
jge
push
cmc
add
add
decl
cmp
inc
jg
inc
and
test
mov
or
and
cmp
clc
lock
jne
inc
xchg
gs
cmp
xor
add
and
mov
int3
push
adc
js
shrb
shlb
arpl
dec
or
sub
test
mov
xor
pop
sub
movsb
popf
add
push
aad
push
loopne
out
xor
inc
sbb
outsl
neg
push
push
adc
inc
imul
mov
sbb
add
pop
arpl
lea
popf
rcrl
mov
xchg
cmp
sbb
cmp
pop
add
inc
cmp
insb
cs
rcpps
inc
shll
inc
inc
sub
test
jno
add
xchg
outsl
dec
inc
imul
pop
mov
ja
out
xchg
sbb
xor
push
fs
push
outsl
pop
add
jo
jb
adc
fnsave
iret
cmpsl
inc
test
dec
inc
mov
ss
and
jae
stos
xchg
lea
ret
sub
fmul
push
sarl
cwtl
imul
and
je
push
sbb
push
les
cmpsb
push
popa
std
std
divb
out
fwait
mov
lret
faddl
inc
pop
xor
mov
and
adc
jne
outsb
add
sbb
notb
pop
pop
and
fisttps
pop
inc
je
insl
dec
outsb
dec
and
sti
add
mov
xor
sub
pop
push
js
loop
pop
add
add
sbb
mov
movsb
dec
cmpsb
cmp
sub
or
lcall
or
in
lcall
jl
push
mov
adc
insb
mov
add
inc
fisttps
jo
xchg
add
and
lods
in
cmp
imul
and
shlb
sbb
test
sbb
and
jns
and
out
dec
jae
sub
into
loope
inc
cwtl
data16
pop
mov
jmp
inc
insb
scas
cmp
push
and
sbb
mov
dec
xorl
dec
popa
addb
xchg
les
inc
loopne
or
sbb
add
ret
adc
and
jns
ss
scas
dec
mov
gs
sub
adc
mov
in
divb
push
jge
pusha
inc
sub
ret
dec
js
cmp
sub
push
ss
lcall
push
dec
gs
imul
in
popa
adc
inc
fcmovnu
shlb
xor
mov
jmp
addl
sub
mov
xchg
lea
popw
xlat
push
push
movsl
loopne
xor
mov
sbb
push
mov
and
jg
pusha
insl
les
xor
sbb
adc
sbb
pop
inc
arpl
adc
mov
bound
lds
into
outsb
jbe
cmpsl
or
repnz
adc
inc
shrl
push
insb
cmp
lds
push
mov
xchg
sub
dec
insl
dec
inc
push
and
enter
push
xor
shll
cld
push
inc
xchg
push
xor
push
arpl
test
pop
mov
ret
cmp
pop
push
add
aas
outsb
ficomps
adc
inc
sbb
sub
sbb
mov
insl
jnp
mov
sbb
sub
sbb
aad
in
inc
cmp
mov
mov
sub
inc
cmp
cmp
daa
outsb
pop
addl
shll
inc
sub
push
jne
xor
push
ret
xchg
lods
mov
xchg
jbe
test
sbb
pop
mov
add
les
push
mov
mov
inc
les
mov
sub
push
outsb
mov
cmp
dec
or
cmp
mov
pop
dec
mov
jmp
pop
mov
outsb
inc
test
pop
inc
ja
imul
and
lcall
sbb
sub
inc
cmpsb
dec
push
ss
sub
outsl
test
dec
movsl
dec
sub
aas
sbb
push
or
inc
and
cmp
or
sbb
add
mov
adc
and
mov
cmp
push
and
adc
in
mov
add
push
add
push
or
or
add
adc
mov
std
jg
or
push
sub
xor
add
or
out
lods
mov
sub
or
pop
push
adc
push
inc
pop
adc
std
in
mov
push
inc
push
sub
push
push
inc
sbb
sbb
cs
or
mov
das
and
lea
bndldx
add
xor
gs
jmp
add
add
adc
cmp
in
incl
add
and
xor
fwait
shl
cmp
add
or
push
or
or
push
pop
add
adc
ss
sbb
subps
inc
pop
sbb
push
sub
filds
and
sbb
or
sbb
add
loope
sti
xor
dec
adc
and
adc
adc
sbb
inc
andl
push
in
pop
xor
test
push
adc
sbb
push
or
xor
or
or
shl
daa
or
add
dec
mov
enter
cmp
pop
lock
sub
pop
mov
in
sbb
inc
sti
adc
dec
pop
pusha
mov
outsl
dec
push
fmull
xchg
push
adc
jbe
xchg
mov
subb
mov
add
or
daa
add
push
xor
xor
or
cmp
mov
aas
sub
and
sub
push
std
mov
xor
aas
xor
dec
sbb
das
push
bswap
add
decl
or
das
adc
adc
or
push
push
lods
adc
adc
pushl
fs
sub
push
push
or
pop
aaa
adc
adc
daa
adc
or
xor
push
sbb
and
es
pushl
sub
and
or
inc
and
or
add
push
cld
incl
mov
and
or
cmp
pop
dec
adc
or
pop
adc
and
and
or
or
jb
adc
pop
sarl
sub
sub
jg
lock
lock
ds
shll
hlt
ss
inc
sbb
xor
das
loop
test
add
mov
lock
or
dec
sub
sbb
rcr
mov
push
push
adc
add
adc
ret
push
jg
pop
cmp
sub
push
or
bound
jo
or
or
incl
rdpmc
pop
and
or
push
sbb
xchg
jb
xor
dec
sbb
cmp
adc
sub
xor
jp
cmp
adc
subl
sub
lock
add
cmp
incl
adc
lock
sbb
add
cmp
pop
lock
lcall
pop
fdiv
mov
push
cmp
xor
push
or
adc
mov
unpckhps
sbb
inc
mov
mov
mov
or
xor
mov
outsl
dec
adc
popa
lds
push
lea
sub
fisttpl
pop
cmc
fwait
mov
movsl
push
cmp
outsb
add
push
pushf
jnp
pop
adc
fdiv
decl
dec
mov
adc
xor
fidivrl
aaa
testb
add
push
push
and
inc
sbb
adc
call
stos
cs
inc
mov
add
lcall
or
cmp
or
mov
add
cmpsl
or
dec
inc
outsb
fadd
shrl
adc
cmpsl
bound
adc
outsl
jg
outsl
clc
mov
clc
add
insl
fmull
and
xor
push
or
lcall
mov
sahf
adc
adc
push
and
push
adc
adc
call
adc
stos
mov
ds
adc
and
mov
fists
xchg
mov
or
or
jb
call
mov
inc
addr16
aas
dec
pop
pop
imul
lods
xor
sub
and
lock
add
add
push
adc
inc
dec
push
mov
adc
andb
jno
sub
outsl
stos
aaa
insb
pop
pusha
dec
arpl
sbb
sbb
adc
and
sbb
adc
xor
xor
daa
push
icebp
lcall
sbb
femms
push
sbb
sbb
adc
aaa
and
or
aaa
sbb
cmpb
add
cs
or
pushl
adc
cmp
dec
jnp
jne
and
adc
arpl
sub
or
xor
inc
and
sbb
mov
pushf
pop
adc
adc
lock
add
scas
dec
dec
in
ret
pop
pop
in
sub
inc
adc
or
ljmp
and
adc
xor
push
pop
pop
and
stos
jle
jg
lock
add
sub
add
inc
jg
adc
push
push
mov
cmpsb
in
jb
rolb
push
pop
fs
and
and
add
add
jl
jl
sub
sub
pop
cmp
inc
and
xlat
sub
xchg
sbb
xchg
mov
or
push
push
inc
cmp
inc
daa
insb
and
xor
addb
and
add
push
or
xchg
jmp
add
or
sub
and
dec
xor
add
fcmovu
mov
xor
and
push
pop
mov
stos
repnz
inc
and
and
lods
sar
sbb
and
pop
ud2
adc
lret
fildll
in
mulps
pop
cs
push
cmp
adc
sub
adc
push
xor
movsb
mov
push
jne
dec
sbb
daa
inc
adc
push
or
cld
xor
adc
ja
add
dec
pop
add
add
sbbl
fildll
pop
inc
and
movsl
pushl
cld
or
lock
sti
add
sbb
sbb
dec
add
loopne
je
call
mov
adc
adc
insl
add
dec
call
sub
push
add
inc
push
out
jp
mov
es
add
es
adc
daa
outsl
cli
mov
pop
adc
cld
lret
adc
adc
aaa
dec
or
inc
cmpb
or
lock
push
adc
dec
pop
je
xchg
daa
sbbb
ds
data16
lcall
push
adc
jg
popf
and
fistpl
imul
or
dec
pop
cmp
test
or
fwait
jo
add
lock
xor
push
dec
ss
add
cmp
dec
adc
sbb
add
lock
add
sbb
addr16
pushf
sbb
ljmp
cwtl
nopl
sbb
push
movhps
sbb
sub
fst
push
jbe
sbb
and
lock
or
and
dec
sub
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
push
sbb
ljmp
mov
data16
js
mov
or
pop
jno
cmp
and
aas
pop
inc
and
in
mov
cs
sbb
pop
add
push
push
pop
push
sbb
lock
sub
push
push
adc
pop
aaa
sbb
add
add
enter
inc
cs
pop
sbb
sbb
sub
call
lock
lock
add
lock
add
add
pop
or
add
lock
xor
sbbb
sbb
inc
idivb
aaa
cmp
adc
pop
or
and
lcall
adc
or
push
sbb
cmp
unpcklps
cmp
push
sub
or
and
inc
or
outsl
in
xchg
ret
sbb
adc
daa
adc
mov
jae
or
sbb
adc
xor
stos
pushl
aas
adc
push
push
sub
adc
pop
sbb
pop
xor
add
pop
mov
mov
dec
test
in
sub
mov
imul
outsb
jo
call
push
jl
cmp
push
xchg
pop
sbb
leave
add
maskmovq
idivl
rclb
or
sbb
add
and
outsl
mov
push
jb
pop
sub
aaa
outsl
and
push
dec
push
cs
fs
mov
cld
lock
lahf
dec
in
movswl
scas
inc
add
pop
xor
fsts
add
and
add
decl
add
pop
or
or
movntps
push
pop
adc
inc
in
push
adc
push
and
sbb
jne
sub
fdivrp
pop
movsb
push
sub
movsb
adc
pop
int3
pop
sub
sbb
inc
push
push
inc
or
mov
cmp
and
das
adc
mov
or
pop
pop
cwtl
pop
invd
or
daa
push
cs
sub
cld
scas
outsb
mov
or
or
ljmp
adc
pop
daa
or
dec
prefetch
lock
and
pop
push
xchg
movsl
adc
pop
pop
fwait
jle
sub
push
push
sbb
or
out
cli
xchg
js
or
xor
adc
push
or
adc
jl
xchg
or
adc
inc
inc
add
adc
push
subb
cli
jg
push
scas
add
and
wbinvd
push
and
lock
push
dec
xor
inc
adc
out
and
sub
sbb
nop
pop
or
std
outsl
shlb
sbb
sub
inc
inc
inc
cmp
test
adc
cmp
mov
xor
pop
mov
sbb
out
cmpl
arpl
dec
adc
jne
jmp
sbb
inc
cmp
pusha
insb
pop
mov
imul
sbb
adc
mov
add
or
fnstcw
ss
push
xor
and
inc
push
std
lea
mov
inc
xor
idivb
or
sbb
push
xor
test
or
xor
rcr
in
inc
mov
or
or
jp
and
cmp
ds
aas
pusha
inc
lds
pusha
push
nop
adc
call
mov
mov
sbb
pop
dec
sbb
cmp
fsubrp
aas
add
aam
pop
mov
jb
pop
adc
ret
or
sbb
jo
mov
adc
xor
sub
es
and
or
xor
or
push
sub
das
push
sbb
or
adc
sbb
pop
sub
data16
pop
ret
adcb
pop
push
sbb
es
add
insl
adc
add
adc
notb
sub
dec
dec
add
repnz
sub
stos
fidivrs
and
dec
add
clc
iret
mov
add
xor
push
push
inc
inc
sub
das
sbb
dec
jle
les
add
and
xor
cld
inc
jg
bswap
test
cmp
adc
femms
aaa
dec
adc
insl
ljmp
outsl
adc
push
aaa
mov
ds
cmp
and
sbb
cmpb
dec
pop
sub
xor
adc
fisubl
mov
sbb
push
sbb
adc
mov
aaa
xlat
jg
adc
adc
ds
adc
pop
adc
test
adc
scas
das
sar
sub
push
adc
sub
sbb
pop
and
mov
inc
add
inc
dec
adc
sbb
push
adc
mov
hlt
xor
and
out
js
and
cmpsb
fisttps
add
push
inc
or
das
or
dec
mov
add
adc
outsb
and
cmp
cmp
sbb
aas
jp
or
or
inc
or
push
mov
fs
inc
push
pusha
adc
dec
rorb
lock
pop
or
add
dec
insb
ret
mov
jnp
cmpsb
pop
inc
push
sbb
arpl
jg
imulb
inc
cmp
sbb
sbb
pop
lock
add
dec
outsl
shll
xor
sbb
adc
adc
lahf
adc
andl
xchg
sbb
ds
sbb
and
decl
adc
dec
fmuls
pop
ds
rorb
xchg
or
mov
add
add
out
pop
jge
xchg
lock
xchg
xor
adc
mov
lock
pop
cmp
aam
inc
or
or
push
adc
adc
lock
add
xchg
aaa
popa
push
das
or
fists
or
sbb
inc
adc
adc
ljmp
pop
popa
lahf
pop
sub
mov
adc
and
and
pop
inc
adc
les
cld
cmp
mov
sbb
add
cmp
data16
cmp
sbb
orb
out
add
cmp
stos
jmp
add
data16
xor
sbb
adc
dec
pop
int3
and
aas
lds
inc
push
aaa
movsb
add
bound
cmp
daa
inc
add
incl
and
jae
sbb
pop
and
out
imul
mov
or
sub
and
decl
cmp
inc
pop
adc
sbb
pop
cmp
adc
add
push
cmp
in
das
xchg
pusha
and
daa
push
sbb
add
lcall
sbb
pop
mov
and
or
outsl
dec
dec
sub
sar
xlat
push
sub
sbb
cmp
add
outsb
xor
pop
mov
cs
push
pop
clc
dec
and
sysexit
cmp
je
dec
mov
add
add
loop
push
nop
sbb
xor
mov
pop
sbb
ja
in
or
ljmp
sbb
push
push
pop
pop
push
and
adc
pop
or
xor
mov
les
and
push
pcmpgtw
or
lahf
add
jo
outsb
insb
push
pmaxsw
mov
xchg
or
add
dec
sbb
lock
add
xor
add
mov
lock
jl
add
sbb
shrb
es
pop
fisttpll
sbb
adc
sub
push
add
mov
mov
or
or
adc
or
lods
add
or
push
mov
sbb
dec
pop
push
add
adc
xchg
sbb
cmpsb
fimull
add
push
lock
sar
inc
int3
shl
bound
pop
aad
lea
xchg
rcl
cmp
jge
or
push
pop
mov
adc
adc
or
xor
pop
xchg
fisubrs
lock
pop
add
lock
pop
mov
js
xchg
dec
or
inc
jne
testb
sbb
sahf
or
loopne
loope
push
adc
or
adc
or
push
jl
push
dec
xor
adc
daa
pop
push
dec
or
and
jecxz
push
fcmove
sbb
loop
lock
inc
sub
xor
push
or
lds
cmpsb
add
cmp
add
jle
add
cmp
or
sbb
adc
xor
outsl
pop
or
aam
pop
sbb
sub
daa
sub
dec
dec
dec
push
ret
js,pn
push
xchg
shrb
or
adc
pop
das
and
es
push
sub
sbb
jp
or
or
ds
sahf
sub
or
adc
dec
cmp
out
xchg
push
and
add
nop
and
sbb
inc
add
sbb
cmp
pop
add
inc
mov
xor
stc
filds
push
cmp
or
jbe
arpl
mov
lock
push
es
lcall
sub
lock
js
adc
and
ds
push
xchg
cmpsb
ds
inc
fnsave
sbb
dec
adc
and
sbb
aas
cmp
jmp
adc
sbb
or
push
dec
ja
inc
cmpsb
inc
push
lret
push
mov
shrl
and
add
into
arpl
pusha
sub
add
jg
lock
cltd
shl
les
lock
add
mov
negb
sbb
sbb
adc
jecxz
fwait
push
add
or
and
xor
cwtl
in
push
sbb
cmpsb
sahf
add
adc
adc
ret
xor
push
das
dec
or
bound
push
and
and
xor
lock
adc
call
pop
sub
sub
cmp
xchg
pop
mov
xlat
pop
xlat
stos
sbb
xor
popfw
ss
and
adc
lcall
dec
dec
mov
adc
movsb
outsb
das
pop
or
pop
push
push
and
sbb
stos
lcall
dec
add
push
lcall
push
mov
push
inc
outsb
out
push
mov
shlb
sbb
mov
and
adc
test
fsubs
add
hlt
jo
insb
dec
lock
add
push
aam
add
xchg
mov
add
mov
cwtl
jmp
jbe
push
mov
sbb
inc
lock
add
inc
mov
pop
and
les
ss
pop
cmp
adc
and
sbb
cs
sub
notb
cld
or
cmp
or
add
sarl
clc
add
mov
jl
sub
sbb
movsl
add
jae
cmpsb
dec
adc
push
lcall
fisttpl
xor
or
cmp
pop
mov
sbb
push
adc
inc
push
adc
clc
dec
aas
and
xor
push
mov
and
adc
mov
add
dec
cmp
jg
das
add
lock
pop
add
ss
jb
mov
mov
dec
arpl
cmp
jno,pn
lock
cmp
sbb
xor
sbb
fcmovu
dec
pop
sbb
sub
dec
in
fldt
dec
push
mov
push
sbb
jle
sub
and
and
push
sbb
pop
and
sub
sbb
mov
xor
arpl
fstpt
testb
push
dec
cmp
inc
inc
sub
sub
stos
push
and
fcomi
pop
jbe
dec
xor
xor
ds
xor
and
fcmovnu
adc
push
sarb
pop
cmp
je
fildll
sub
xor
jle
xchg
sub
cmp
sub
subl
sbbl
pop
pop
sti
jg
call
loopne
xor
sub
sub
and
xor
sub
xchg
adcb
push
push
push
lret
xchg
cmp
movsl
xor
add
push
inc
inc
pop
enter
jg
adc
aas
dec
jne
and
add
and
subl
jbe
cmpsb
dec
mov
lock
add
mov
dec
sub
xchg
add
push
and
cmp
cmp
push
test
jo
and
arpl
fcmovnu
mov
push
inc
sub
xorl
lock
xchg
dec
inc
sub
pusha
addl
mov
das
scas
jle
lds
push
sbb
xchg
lock
aaa
rclb
mov
and
aam
lock
addb
jle
add
jno
xor
and
or
lret
rclb
jbe
mov
add
cltd
stos
fstl
sbb
test
inc
push
andl
push
int
outsb
or
inc
lock
adc
mov
add
push
push
add
xchg
sbb
or
add
insb
push
imul
adc
mov
div
mov
add
add
sub
push
or
mov
push
add
mov
xchg
cmc
lock
mov
push
mov
add
mov
adc
pusha
xor
or
or
add
fisubrl
andb
pop
cmp
xchg
fsubr
adc
mov
xor
push
or
sbb
out
jnp
out
or
adc
sbb
adc
fdivp
insl
xor
adc
or
push
pop
mov
mov
push
test
sbb
push
pop
and
adc
mov
sbb
and
les
add
add
inc
push
lods
or
mov
dec
adc
add
push
insb
add
pop
shrb
add
cmp
jns
or
mov
adc
and
jae
xchg
push
sbbl
lods
insl
das
dec
and
dec
cmp
outsl
movsl
push
sbb
inc
pop
insl
push
push
mov
bound
sub
jnp
pop
cmc
stc
leave
xchg
ret
add
mov
std
testl
add
push
sbb
jecxz
lock
adc
repz
subb
or
ds
or
and
insb
pusha
adc
or
fst
data16
xor
cmp
pop
adc
and
adc
xchg
gs
and
xor
out
pushf
fucomp
pop
sub
adc
pop
xor
mov
fldt
or
fwait
sub
pop
jbe
sub
invd
sbb
mov
push
sbb
sbb
add
ja
sbb
arpl
fimuls
sbb
mov
push
pop
inc
xchg
sub
cmp
xchg
and
imull
sub
mov
xchg
cmp
mov
add
mov
xchg
and
add
mov
pop
imul
mov
lods
bound
stos
lods
pusha
rol
xor
adc
mov
stos
and
xchg
fadds
movsl
or
xchg
loop
adc
sbb
sbb
jge
adc
mov
in
in
andb
add
fcmovnu
arpl
adc
sbb
sbb
jecxz
push
inc
fidivl
push
fistl
mov
mov
hlt
push
rcl
and
inc
sub
mov
inc
or
inc
xchg
loope
mov
mov
jg
shll
aaa
or
adc
adc
mov
divl
adc
sbb
add
mov
ja
fwait
imul
insl
add
sbb
dec
ret
pop
push
inc
sbb
adc
int3
adc
aad
imul
fidivs
sbb
inc
ficompl
sbb
and
shlb
pop
push
xchg
aaa
adc
cmp
mov
test
inc
pop
adc
jbe
push
sbbl
push
cwtl
leave
outsl
adc
xchg
adc
adc
adc
add
push
mov
andl
pop
jg
in
popa
and
es
mov
push
call
sbb
faddl
add
lcall
data16
sbb
outsl
jo
add
inc
test
call
out
sub
movsb
pop
add
jle
sub
xor
and
add
xor
sbb
push
and
sub
sub
xor
xor
sbb
or
push
push
cmp
or
repnz
xor
pop
add
xor
sbb
lods
popa
lahf
cltd
xor
sub
push
and
ficoml
and
inc
sbb
pop
inc
and
cmpb
sbb
sbb
sub
aaa
addb
and
sub
sbb
pop
sub
add
test
add
cmp
pop
dec
sub
lret
fsubl
push
fsts
mov
lock
mov
push
inc
mov
test
push
enter
pushl
add
das
jne
cmp
or
movsb
add
dec
push
add
jl
fiaddl
outsl
subb
notl
inc
bound
inc
sbb
fisttpll
or
or
pop
jbe
xlat
insl
mov
lcall
sbb
pop
pop
sbb
jp
or
inc
add
fidivrs
jo
cmpsb
inc
or
adc
jb
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
