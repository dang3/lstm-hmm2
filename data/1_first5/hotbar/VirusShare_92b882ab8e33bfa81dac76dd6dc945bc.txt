divl
in
mov
mov
test
inc
add
add
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
movsl
push
mov
andl
push
pop
add
enter
add
mov
punpckhwd
add
ss
mov
mov
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
je
ds
incl
sti
inc
add
add
call
jle
add
mov
mov
jmp
push
mov
lock
add
sahf
or
sbb
pop
dec
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
sub
outsb
sub
cs
push
push
cwtl
in
add
mov
add
in
mov
fchs
fsubrs
cmp
cld
mov
sbb
push
push
lods
pop
inc
add
fdiv
fistpl
fldt
inc
add
test
mov
ds
je
pop
add
pop
mov
push
cmp
loopne
cmp
rcrb
cmp
pop
add
add
push
loop
icebp
cmp
add
push
add
sbb
pusha
les
xchg
dec
sarl
mov
add
sub
in
mull
pop
pop
sub
xorl
pop
sahf
or
add
mov
lcall
call
clc
push
lods
repz
or
add
in
inc
inc
mov
xchg
pusha
xor
pop
sbb
mov
repz
add
push
or
cmp
inc
cmpsb
push
mov
jae
jno
out
loopne
js
fs
sahf
cmp
fsubs
pop
inc
mov
ficompl
and
aaa
jb
mov
mov
adc
adc
rolb
and
jnp
mul
inc
cmp
jae
xchg
cmp
fdivs
adc
mov
add
and
push
ja
scas
sbb
add
lcall
push
mov
and
insb
xor
lock
adc
pop
cwtl
mov
pop
push
jle
in
and
cmc
mov
add
pusha
push
sub
pop
mov
test
mov
cmp
scas
jnp
lock
add
call
mov
clc
add
cld
jb
xor
popf
sbb
fwait
loopne
cmp
jno
mov
cmp
dec
outsb
and
xchg
sbbl
sbb
push
sbb
jo
push
fdivrl
rolb
push
stc
stc
add
add
and
and
rclb
loope
xor
addl
in
jl
push
or
enter
or
and
shlb
cmp
push
fwait
je
gs
lods
movsl
punpckhdq
mov
mov
push
xchg
push
daa
mov
int3
push
xchg
sbb
jge
or
cmp
pusha
out
fildll
pop
xor
sbb
fnstsw
scas
sbb
push
xchg
loop
filds
sub
lret
shlb
in
in
adc
sbb
push
shrb
mov
or
and
xor
inc
dec
movsl
push
sub
adc
jns
inc
rcpps
sbb
repz
nop
and
xchg
out
test
push
and
mov
outsb
sub
or
add
repz
sbb
cmp
pop
and
movhps
push
xlat
xor
aaa
in
outsb
mov
pop
sbb
sarl
adc
mov
sti
add
mov
or
pop
adc
jmp
idivb
xchg
mov
sbb
leave
outsl
push
lods
mov
jae
push
loope
sbb
mov
in
js
inc
sbb
sbb
add
cmp
lds
popa
adc
test
add
jle
jo
loopne
fnstsw
mov
inc
or
push
push
push
adc
fimull
je,pt
ret
fiaddl
jl
sbb
or
notl
jmp
clc
out
mov
mov
add
xor
ret
xor
mov
sub
xor
fwait
cmpsb
pop
jecxz
xchg
mov
shrb
ret
outsl
or
mov
movsl
cltd
fmull
or
or
sbb
fs
out
mov
or
pusha
rclb
negl
push
mov
or
mov
mov
int3
cmp
je
or
mov
lea
pop
xor
fdivs
je
xlat
stos
enter
cmp
cli
mov
lods
or
js
jno
xchg
mov
xchg
andb
js
shr
clc
xor
add
jmp
mov
stos
mov
hlt
cmp
mov
mov
lret
insl
inc
test
lret
ss
xor
xchg
cmp
push
cs
or
lret
out
stos
jp
cmp
clc
clc
dec
or
mov
mov
add
iret
mov
sbb
gs
jg
bound
xor
or
leave
ret
push
mov
icebp
js
fcomps
jbe
fisubrl
dec
insl
icebp
sbb
mov
cmp
mov
cmp
jne
pop
mov
or
sub
js
or
pop
cmc
fwait
push
je
sub
dec
pushl
pop
in
push
or
adc
sbb
xchg
push
pop
xchg
sbb
shlb
mov
cmp
lahf
or
push
push
mov
cmp
push
scas
sub
pop
jo
sub
pop
rorl
sub
call
mov
test
jne
cli
das
es
inc
cmp
jl
jmp
pop
and
ljmp
push
push
pop
add
sahf
mov
pop
jmp
sub
add
mov
ret
scas
mov
test
mov
mov
or
enter
scas
or
sbb
pop
bound
and
jg
iret
sbb
mov
mov
adc
stos
pop
sbb
push
fiadds
jns
add
or
jmp
sub
dec
push
andl
push
mov
jge
nop
mov
cmp
jl
push
mov
push
xchg
jmp
adc
adc
pop
xchg
loopne
rol
data16
sub
mov
jmp
and
push
dec
dec
outsl
addr16
pop
mov
and
or
pop
ja
cmp
push
cs
out
imul
jo
inc
aam
push
mov
sub
pop
cli
adc
js
sub
pop
cmp
mov
jge
jecxz
out
mov
cmp
je
movb
mov
pop
jg
ret
adc
push
pop
sbb
add
push
mov
imul
add
jmp
mov
addr16
adc
or
mov
pop
ja
adc
inc
leave
ret
icebp
cmp
dec
out
idivb
cmp
je
or
std
cwtl
call
push
hlt
dec
mov
jmp
inc
pop
push
mov
and
or
lock
jge
pop
stc
jne
mov
jmp
xchg
jl
mov
out
push
repnz
jg
sbb
adc
sub
icebp
ud0
cmp
lock
popaw
fsubl
pop
pop
jae
lock
arpl
adc
pop
xor
andl
push
jo
fcoml
add
adcl
or
ret
insl
mov
adc
push
movsb
mov
or
lock
je
ljmp
dec
mov
cmpsl
mov
pusha
ja
sbb
ss
push
push
popl
adc
push
and
pop
xchg
push
call
shlb
shlb
ret
cld
mov
ret
mov
sbb
ss
or
add
lea
popa
js
popl
jmp
sbb
adc
adc
cmp
cmp
mov
fs
cmp
std
das
clc
into
je
cmpl
pop
mov
cmp
jne
push
push
imul
jo
ret
jl
pop
jmp
inc
jg
xor
mov
cmp
int
dec
dec
cmp
leave
push
hlt
bound
inc
sub
inc
or
sbb
enter
or
aaa
fidivl
clc
pusha
jl
push
inc
clc
jg
inc
fimuls
movb
or
in
int3
mov
and
sub
dec
lods
add
lods
dec
in
int3
adc
cmp
or
push
inc
xor
mov
ret
outsl
or
out
inc
lcall
mov
ret
das
inc
pop
and
dec
push
cmp
adc
or
cmpsb
mov
adc
test
outsl
icebp
and
in
dec
push
push
call
outsl
inc
ror
or
adc
rcll
xor
or
pop
pop
sbb
jmp
pushf
mov
fs
mov
mov
mov
stos
pop
mov
mov
dec
test
mov
push
jbe
ret
inc
or
push
or
jae
pushf
cli
xchg
inc
loop
add
clc
cmp
lret
mov
addb
xchg
mov
cmpl
jle
push
cmp
fstpt
daa
jmp
mov
mov
ret
mov
xor
shlb
push
out
cmp
push
sbb
sbb
sub
or
cmp
mov
xchg
xsave
jbe
inc
add
repz
or
adc
adc
js
ja
pop
push
ljmp
pusha
mov
cmpsb
fwait
fimuls
jge
bound
hlt
mov
shrl
push
pop
push
or
lock
push
sub
cmp
mov
iret
ret
push
lds
lods
jge
sarb
cs
cld
sarb
xlat
xlat
sahf
and
in
xor
xor
enter
add
leave
push
inc
lea
daa
or
mov
cmp
push
call
rolb
pop
cltd
jmp
pop
js
dec
jb
clc
ret
cmp
adc
lea
push
mov
adc
mov
pop
pop
jmp
mov
je
pop
mov
jecxz
sub
movl
inc
lock
dec
dec
adc
sbb
setae
pop
sbb
pop
in
cli
jmp
stc
test
je
or
std
push
mov
pop
jno
andb
shlb
movsl
push
xor
inc
jns
divb
enter
add
mov
or
test
push
cmp
sbb
arpl
pop
or
sbb
mov
inc
pop
aad
and
ret
sbb
jmp
insb
or
or
shrl
ret
push
push
repnz
cmp
sarb
sahf
sahf
fldcw
push
and
outsb
xchg
iret
fstp
and
aas
sbb
das
sbb
out
sti
sbb
cmc
add
push
stc
fcmovnbe
add
cmp
adc
pop
pop
xor
or
ss
outsl
jo
push
adc
imul
add
jnp
push
imul
mull
cmc
das
push
hlt
dec
or
xchg
add
xor
cmp
ja
cmp
test
adc
jg
mov
cmp
popf
cmpl
mov
cmp
mov
push
cltd
pop
insb
jp
notl
add
inc
mov
inc
cmp
or
sbb
push
sbb
adcb
jmp
pop
mov
dec
sbb
adc
mov
sub
add
push
push
jbe
call
pop
sbb
pusha
push
sahf
std
mov
and
jmp
sub
dec
je
add
out
aaa
push
adc
in
jge
adc
xor
dec
ss
iret
icebp
sub
jmp
or
dec
pushf
movsb
sbb
cltd
ret
rcr
mov
int
jp
jecxz
pop
jne
jp
jecxz
mov
rolb
pop
addb
xor
and
ljmp
push
add
mov
scas
adc
or
inc
movsb
sub
mov
push
mov
xchg
xchg
mov
loope
fidivrs
add
shlb
add
ud2
movsb
push
xor
push
push
sub
push
pop
pushl
js
inc
push
in
in
outsb
cmp
daa
adc
jge
popl
inc
sbb
adc
jmp
in
scas
sarl
jae
mov
shr
fs
sbb
dec
stos
xor
leave
adc
adc
sti
out
andl
or
cmp
jmp
mov
sbb
and
push
jmp
pop
fisubl
and
jge
or
sbb
mov
mov
repnz
and
repz
shrl
inc
pop
push
iret
mov
loop
mov
push
fs
pop
pop
cld
sbb
cld
cmpsb
pop
lock
cld
mov
fstl
lcall
adc
and
xchg
outsl
cmp
in
or
clc
movb
add
or
xchg
xchg
lret
adc
scas
add
cmp
fdivp
push
dec
mov
pop
push
lea
push
addl
cs
pop
inc
xor
xchg
xlat
dec
cmp
mov
cmp
inc
addr16
scas
pop
or
dec
push
inc
add
or
cld
xchg
mov
pop
cmp
sbb
push
in
imul
push
pop
ja
push
sbb
lea
adc
cmp
insl
ret
testb
adc
sbb
push
call
dec
lock
adc
ljmp
cwtl
movl
lods
jo
pushf
lret
stos
xor
xchg
pop
leave
addl
sbb
pop
push
inc
jmp
inc
cmpsb
sub
mov
pop
cltd
adcl
sub
sahf
mov
mov
iret
arpl
in
cmp
xchg
mov
adc
xlat
movsb
insl
sub
aas
adc
push
cmp
adc
jae
aad
movsb
push
loop
adc
stos
dec
rclb
mov
and
or
xor
and
add
xor
mov
imul
dec
mov
jmp
inc
cmp
loope
add
nop
jnp
push
push
push
stos
push
out
mov
loope
pushf
jp
js
jmp
push
xchg
push
push
ja
mov
lods
adcb
and
sahf
insb
rcrb
clc
add
push
pop
pop
scas
jb
daa
lea
je
mov
xchg
insl
and
in
roll
or
and
cmpl
add
mov
sbb
clc
push
push
cmp
push
sub
hlt
dec
pusha
adc
sub
or
inc
sub
sbb
clc
push
xor
pop
call
leave
mov
pushl
mov
adc
dec
push
dec
push
mov
dec
lea
or
dec
daa
sarb
je
dec
call
in
mov
ret
ret
add
bound
in
dec
insl
mov
cmp
push
mov
add
mov
xor
mov
add
inc
cmp
cmp
pop
leave
cmp
mov
xor
sub
scas
sbb
leave
push
insl
and
pop
sub
lea
mov
push
mov
pop
add
inc
or
dec
outsl
icebp
push
and
push
sti
sub
mov
push
cmp
dec
mov
mov
dec
test
jle
neg
sbb
and
and
mov
push
data16
pop
andl
lcall
xor
inc
jno
mov
cmp
dec
or
xor
mov
adc
push
clc
aas
ret
push
lea
sbb
and
test
cmpb
sbb
and
or
push
call
pusha
rcrb
in
test
andb
mov
mov
dec
mov
je
or
jmp
test
jmp
pushl
and
test
js
repnz
push
shll
popa
hlt
and
mov
gs
cmp
jnp
jmp
cmpl
je
cmpl
cmpsl
lea
adc
xchg
sbb
cwtl
pop
push
add
into
jg
outsl
hlt
loopne
jmp
mov
add
cmpsl
andl
jl
mov
sub
lret
jbe
pop
insb
adc
lds
sahf
adc
aas
js
push
push
sbb
gs
lods
dec
lret
in
into
mov
hlt
movb
cltd
lock
jne
mull
sbb
enter
push
popf
cwtl
jo
movb
cmpsl
mov
ret
dec
aas
mov
and
xchg
mov
push
jo
pushf
cwtl
mov
add
sbb
cmp
je
incl
test
xchg
sbb
sub
loopne
mov
and
popf
pop
testl
ret
fnstcw
pop
xor
pusha
mov
test
cmp
or
mov
push
push
mov
es
pop
jbe
adc
cmp
jg
push
mov
fldcw
push
shlb
push
sub
push
and
push
movl
or
movl
leave
lret
jb
add
shll
push
pop
insb
je
inc
or
fs
enter
ret
daa
cmp
test
mov
push
adc
add
add
push
insb
lock
in
sbb
pop
scas
and
sub
ficomps
call
xor
addb
cli
or
jns
cwtl
cmpl
cmpsl
data16
mov
push
cmpb
lock
sbb
test
nop
lret
out
icebp
mov
pop
lcall
or
xor
inc
dec
fldl
fmull
cmpsl
std
ljmp
push
sahf
sbb
add
and
pop
push
cmp
ret
rcrl
cmpb
xchg
leave
lock
adc
or
les
rcrb
pop
ds
rorb
pushf
in
push
adc
or
jne
test
loop
pushf
and
sub
loop
mov
rorl
mov
ds
add
push
addl
pop
pop
popa
dec
sub
mov
hlt
mov
xlat
stos
fcoms
sbb
or
sbb
or
xor
testl
ret
cmp
sub
mov
in
push
mov
adc
or
in
or
mov
mov
sbb
addb
push
adc
pop
xchg
or
cld
je
cli
cmp
insl
cmpb
mov
je
cwtl
pop
sub
cmp
inc
or
xchg
mov
jmp
stc
dec
cs
sbbl
push
push
cmp
cmp
xchg
enter
cmp
and
orl
nop
push
mov
xchg
mov
pop
inc
sarb
mov
push
push
cmpb
loopne
push
inc
push
out
fcoms
call
xor
push
dec
imul
and
sbb
cmp
xchg
xor
pop
cmp
out
jo
mov
fsub
nop
arpl
andb
sbb
push
sbb
loopne
inc
mov
mov
mov
das
out
add
scas
fwait
sbb
cmp
ljmp
mov
jmp
ret
or
js
or
fsubrs
adc
jl
dec
inc
sbb
out
in
cmpsb
lock
adc
outsl
mov
mov
fcomip
sti
push
pop
push
mov
dec
jmp
xor
idivl
mov
stc
jle
mov
fwait
aaa
jp
mov
add
mov
cmp
push
jbe
xor
pop
jmp
fstl
icebp
or
dec
insb
cmpsl
int
jp
jne
shrl
inc
lods
xchg
jge
sbbl
mov
sbb
or
out
call
adc
pop
pusha
push
ljmp
hlt
std
xchg
sub
mov
je
test
pop
lea
cltd
idivl
mov
inc
mov
xor
dec
push
mull
pusha
jl
out
mov
jg
fs
xchg
scas
jnp
or
xchg
arpl
mov
test
or
fldt
jbe
lahf
xor
xchg
fptan
jl
sbb
and
lods
lea
clc
add
pop
inc
lahf
negl
imul
cmp
or
jmp
jge
sub
lods
sti
jmp
mov
pop
hlt
fildl
pusha
clc
not
fisttps
test
jge
faddl
and
sub
xor
mov
pop
or
or
stc
mov
mov
out
pop
mov
sbb
pop
add
faddp
mov
cmp
add
xor
push
addl
mov
loope
insl
cmpb
or
clc
fidivl
jmp
outsb
mov
gs
sahf
lods
sti
mov
push
mov
add
jl
xor
jo
dec
call
xor
aaa
push
aad
mov
mov
and
push
lea
mov
jmp
lock
or
stos
cld
push
adc
and
sbb
mov
ret
pop
mov
pop
push
lahf
je
push
mov
shlb
imul
push
inc
pop
and
lock
push
jmp
sbb
or
cmc
imul
push
pop
push
cld
nop
xor
adc
stc
pushf
or
pop
addr16
test
test
aam
mov
xor
and
test
or
push
arpl
push
std
pushf
sbbb
adc
gs
mov
or
dec
enter
push
jne
mov
xchg
pop
jne
rcll
jo
push
cs
loopne
pop
jl
arpl
adc
push
leave
xchg
pop
ja
pusha
add
add
pop
and
xor
lcall
lea
push
mov
push
dec
cld
jae
mov
pop
mov
and
les
push
scas
push
sbbl
push
imul
dec
add
push
or
cmpsb
xchg
sbb
or
aas
sahf
mov
in
pop
adc
jl
xchg
and
adc
push
jg
or
push
jg
popa
push
movsl
pop
out
xchg
sbb
enter
push
adcb
aas
pushf
or
mov
insb
adc
lock
push
fs
cmp
add
push
pop
add
mov
and
loope
icebp
and
mov
xchg
cmp
adc
inc
adc
add
push
xor
mov
or
ja
xchg
mov
pop
xchg
and
lahf
rolb
cmpsb
adc
mov
jo
cmp
jno
xor
dec
xchg
ret
pop
pop
mov
pop
adc
movsl
loope
mov
add
push
leave
add
lods
sub
clc
setb
test
jne
mov
sarb
hlt
data16
dec
sub
sar
xchg
dec
dec
adc
ds
lea
push
pop
adc
and
fwait
and
mov
je
sub
pop
mov
pop
jmp
mov
mov
push
or
push
nop
lock
hlt
mov
and
add
arpl
xor
inc
sbb
shrl
add
pop
lcall
out
jge
lcall
imull
jo
inc
mov
or
adc
movsb
add
mov
dec
daa
inc
daa
popa
adc
push
fdivrs
scas
call
in
cs
add
mov
insl
xor
push
ljmp
int3
outsb
outsb
outsb
pushl
sub
clc
or
and
push
je
and
je
mov
mov
shr
hlt
pop
and
ret
aam
sub
das
fisttps
test
rolb
shlb
xchg
addl
jo
movl
addr16
push
mov
jmp
into
pop
jb
outsb
mov
mov
or
mov
rclb
xor
adc
aam
mov
arpl
and
xor
add
sub
or
ret
push
rcll
push
pop
inc
lretw
in
int
aas
xchg
subb
xchg
ret
test
je
cld
sub
adc
mov
ljmp
ret
jne
push
adc
gs
inc
add
mov
jmp
or
fsubs
sub
mulb
inc
or
mov
mov
sbb
pop
pusha
or
push
sbb
pop
mov
inc
or
ja
mov
femms
js
shll
test
lahf
test
mov
add
sbb
add
lock
adc
push
add
lock
cmp
pop
insb
daa
repnz
add
test
dec
jl
sub
push
sub
xor
and
lock
mov
aam
int
xor
jno
loop
mov
inc
insl
lcall
mov
push
mov
decl
les
or
mov
nop
cmp
enter
ret
or
dec
lea
ret
sbb
pop
shl
sbb
or
push
imul
xchg
fmuls
push
xor
mov
xor
mov
push
fnsave
adc
stos
inc
rep
and
sahf
or
cld
insl
orb
or
add
sub
push
enter
test
mov
xor
cmp
fidivl
gs
and
push
pop
mov
jg
push
scas
mov
or
nop
cmp
sbb
add
add
push
dec
aaa
or
test
es
mov
add
test
pop
ds
dec
orl
iret
out
push
pusha
scas
add
push
fstpl
mov
cmpsb
sbb
popf
inc
popa
inc
adc
inc
aad
mov
call
loopne
nop
add
or
iret
scas
testb
cmp
sub
push
sub
enter
sub
mov
lock
ret
or
pop
aam
call
add
enter
or
or
pop
sbb
inc
mov
popa
leave
mov
jge
mov
sbb
mov
mov
adc
and
and
shl
daa
add
adc
pushl
fdiv
push
loopne
mov
in
fadd
lahf
les
adc
adc
jge
jl
bound
cmp
xor
in
adc
sbb
aam
in
mov
mov
xchg
call
mov
test
sbb
jmp
push
aam
fidivrl
and
push
scas
adc
fdivrl
or
mov
fdivl
adc
fs
sti
rclb
stos
pop
addr16
or
incl
mov
add
push
xchg
imul
cltd
sub
sub
fidivl
mov
mov
lods
cmpsb
adc
das
int
add
add
or
pop
into
shrl
mov
sbb
insb
in
arpl
sbb
push
neg
sbb
rorl
adc
movl
jo
leave
mov
cmp
wbinvd
aas
shl
add
in
sub
je
xor
aam
push
lods
inc
push
sbb
lahf
rolb
mov
in
fidivl
gs
lds
push
mov
inc
add
add
xchg
addr16
adc
shrb
sbb
mov
mov
mov
add
dec
push
xor
lahf
jne
pop
push
pop
jo
dec
add
es
or
aas
fsubr
and
add
cmp
jo
jmp
loope
fldl
jmp
add
lds
mov
shr
sub
adc
mov
mov
sbb
jo
ror
push
lcall
loope
pushl
inc
adc
cmp
repnz
test
cmp
jne
pushf
xor
imul
fiaddl
adc
cmp
into
push
lcall
push
loope
mov
mov
adc
mov
xchg
mov
jo
shrb
lcall
pop
cmpb
pop
push
mov
push
mov
ds
lea
push
rcrb
movsb
adc
add
inc
push
push
adc
dec
xor
mov
inc
test
jecxz
mov
in
mov
scas
cmp
push
stos
sub
push
cmp
and
shl
loopne
pusha
push
movsb
dec
xor
push
cmp
loopne
sub
and
mov
adc
adc
cmp
or
sbb
test
rcrb
pop
pop
icebp
lret
in
loopne
ja
and
sub
arpl
in
cmpsb
fdivrl
push
or
and
adc
testl
sahf
or
out
xor
sti
add
test
in
repz
adc
adc
add
out
sub
iret
lret
add
cld
xchg
xor
iret
repz
push
sub
xchg
or
sub
sbb
add
or
test
dec
xor
sbb
repnz
sbb
jns
cmp
clc
sub
ret
mov
and
push
cld
adc
mov
xor
jno
jbe
mov
push
add
imul
and
add
dec
xor
or
push
or
sbb
adc
push
or
adcl
sbb
or
pop
or
push
jg
xchg
pop
addl
add
add
lods
sub
int
xor
in
mov
popf
jle
adc
dec
fnclex
adc
push
insl
movsl
in
xor
test
loope
push
outsl
adc
in
insb
push
mov
dec
fisttpl
fnsetpm(287
mov
adc
pop
push
nop
sbb
pop
inc
js
jo
movb
sub
inc
push
xor
adc
pushf
dec
xor
pop
popa
punpckhwd
pop
jl
and
jo
pop
or
loop
lock
sbb
int3
mov
push
fnstsw
test
ret
cmp
push
dec
nop
mov
inc
and
idivb
lahf
test
jo
jle
daa
call
test
cmp
je
ja
and
mov
dec
jmp
mov
mov
mov
lret
sub
clc
mov
inc
mov
into
in
dec
adc
enter
in
fstps
jnp
or
adc
int
and
push
fnsave
orl
or
test
jno
in
dec
movsl
or
outsl
outsl
testb
in
aaa
dec
mov
dec
jo
test
fs
sub
mov
jmp
out
mov
cmp
test
or
or
dec
or
int
and
dec
inc
cmp
lret
imul
orl
add
repz
std
mov
fwait
repnz
nop
push
lock
or
imul
jmp
lock
std
xchg
dec
jns,pn
push
sub
sub
jbe
das
mov
cli
ja
push
sub
pop
push
rorl
lods
sbb
mull
fsubl
call
sahf
lret
sbb
call
inc
mov
xchg
xchg
xchg
inc
inc
or
cmp
inc
fildll
pop
adc
je
loop
inc
adc
test
orb
cwtl
sbb
add
out
cmp
push
outsb
mov
cmpsl
rcll
sbb
int
pop
enter
in
sub
add
cmp
rcll
adc
add
xorb
sub
sub
test
iret
and
adc
xchg
cmp
push
xchg
or
fnsetpm(287
rcr
push
test
in
inc
ss
add
and
iret
jae
add
add
dec
sub
add
or
out
or
cmp
je
mov
or
mov
sub
cmp
jge
inc
dec
jae
mov
pop
adc
adc
inc
notl
adc
adc
pop
inc
aam
fwait
and
gs
push
xchg
push
dec
imul
hlt
xchg
and
in
push
scas
loopne
test
cwtl
and
pop
test
jb
mov
jmp
fsubrl
and
xchg
mov
and
adc
and
push
gs
adc
cmp
cmpsl
xchg
push
data16
push
jne
cmp
testl
jnp
div
pop
add
lea
andl
mov
cmp
xor
xor
dec
testl
icebp
dec
dec
sub
pop
adc
out
or
ljmp
in
lahf
je
mov
jge
pop
add
pop
roll
ds
cmp
cmpsb
repnz
inc
pusha
sub
sbb
leave
ret
insl
pop
push
cld
xchg
bound
outsb
das
add
jbe
jne
push
mov
shlb
push
aam
pop
sbb
cmp
shrb
and
pop
test
incb
sbb
cmp
jne
push
ljmp
imul
pusha
int3
cmp
test
jge
push
dec
cld
fistl
movl
fstps
sub
xchg
stc
sub
test
out
push
orb
pusha
subb
dec
test
cwtl
or
add
mov
sbb
push
push
jl
bound
mov
push
pop
xor
neg
test
lcall
push
js
lcall
adc
adc
dec
mov
dec
mov
lds
sbb
xchg
ret
jns
mov
inc
div
xchg
aam
mov
xor
rcll
jp
jecxz
cmp
jns
movsl
xor
xor
push
mov
cmp
inc
push
mull
pop
cld
inc
movsl
mov
pop
push
into
inc
ret
sbb
mov
idiv
jp
push
fs
add
jns
nop
pop
mov
into
mov
test
pop
out
add
ficoml
sbb
cmpsb
xor
rorb
test
or
add
dec
shrb
pop
or
in
xchg
icebp
in
scas
add
fiaddl
and
data16
pop
pop
out
sbb
dec
fldl
push
and
xchg
ljmp
push
jp
flds
dec
add
lret
repnz
add
inc
ljmp
push
test
mov
lock
aam
sub
testb
popa
xchg
test
push
out
notl
cwtl
lds
or
jl
sahf
push
fs
sub
sub
jp
pusha
mov
aaa
sbb
add
sub
outsl
xor
or
mov
test
movsl
xor
sub
bound
mov
xor
xor
leave
repz
cmp
jno
dec
clc
xchg
xor
mov
inc
test
and
push
push
mov
mov
repnz
and
pusha
mov
les
sbb
pop
gs
sub
fs
inc
mov
push
daa
pop
repz
loop
pop
hlt
fnstcw
xorb
pop
repz
sti
jg
sti
aas
push
push
push
and
adc
hlt
jne
push
inc
mov
sub
push
scas
mov
jmp
push
jp
cmp
int
mov
adc
push
jno
outsb
cmp
and
push
push
mov
gs
imul
mov
xor
and
fs
push
and
stc
sahf
mov
pop
push
sbb
imul
dec
aaa
sub
inc
add
and
xchg
jb
jne
in
icebp
inc
push
or
arpl
or
sbb
movsb
jne
ss
loop
xchg
xlat
push
add
sbbl
xchg
push
movsl
test
push
mov
mov
jmp
xor
dec
mov
mov
shll
sbb
add
and
jmp
xchg
xor
sbb
dec
or
loopne
jmp
mov
push
je
xor
sbb
jmp
gs
pop
iret
push
push
sub
jmp
xor
imul
jnp
je
loope
lret
sahf
sbb
inc
adc
pop
or
bswap
sbb
and
push
xchg
add
mov
int3
pop
sbb
pop
or
test
inc
ss
cmp
lahf
xchg
jo
cmp
add
mov
mov
xor
push
es
mov
or
or
test
insl
mov
xchg
hlt
call
ret
xor
scas
in
in
ficomps
ja
repnz
scas
popf
sbb
cs
xor
add
cmp
sub
push
rolb
pop
je
push
jmp
iret
mov
mov
mov
push
mov
mov
lock
sahf
mov
mov
mov
cmp
adc
mov
rclb
lcall
lahf
mov
mov
pop
outsb
loope
push
push
or
ljmp
fisubrl
sbb
mov
adc
cmp
or
and
push
pop
shl
cmc
push
cmp
leave
jb
mov
ret
loope
adc
sub
cld
movb
push
add
or
sbb
in
mov
cwtl
mov
xchg
add
sbb
mov
push
pop
lods
ja
dec
push
shlb
adc
xchg
add
push
push
push
cmp
loopne
je
repz
push
fists
xor
loope
aam
cmp
add
sarb
mov
add
and
dec
test
push
mov
adc
xchg
pop
stc
ret
pop
out
jno
mov
inc
dec
popa
lds
add
mov
pop
in
rorb
cmp
in
add
xchg
push
popf
xchg
mov
and
mov
jecxz
sub
xchg
mov
mov
aam
xchg
ret
adcl
mov
xchg
popa
add
test
lds
or
repnz
and
mov
xchg
push
or
lret
into
lock
push
adc
shll
sbb
or
lea
add
cmp
jae
push
xor
add
sub
fcomps
es
sub
ficomps
sub
push
add
cmp
fucomp
dec
cmp
dec
hlt
jge
mov
test
loope
lock
or
sti
add
lahf
jmp
cmp
ljmp
pusha
cmpps
sbb
and
push
cmp
jg
loope
shl
cs
ljmp
jmp
call
popw
mov
hlt
mov
push
dec
lahf
and
adc
imul
push
pop
jbe
inc
sbb
xchg
rcrb
xor
or
loope
xchg
sub
push
ret
clc
nop
mov
inc
sbb
sahf
nop
jmp
aas
pop
jns
imul
jge
xorb
orl
jg
xor
xlat
mov
mov
jns
addl
jle
cmpsb
mov
mov
xor
sub
into
clc
cmp
loope
sub
jne
popa
sbb
cmpsb
cmp
mov
dec
lcall
sbb
data16
cli
cmp
xor
add
push
sbb
add
sub
fimuls
and
mov
jo
dec
adc
inc
pop
pop
pcmpgtd
sahf
push
sti
jecxz
loopne
lret
ret
lods
adc
dec
stos
aam
fistpll
testl
xor
sub
sbb
mov
lret
mov
pop
push
push
sbbl
into
push
outsl
pop
sbb
pop
add
and
ficomps
push
cli
or
sahf
test
sub
andl
or
aam
insb
ss
movsb
jb
lea
jl
popf
int
pop
pop
mov
push
mov
push
mov
sbb
mov
ljmp
int
mov
ja
es
push
sbb
jne
inc
mov
les
shlb
cli
jbe
cmpl
or
pop
xchg
push
and
fs
inc
lods
fiadds
jne
jmp
mov
pop
sub
sbb
inc
call
jle
test
add
mov
add
xor
add
xchg
ds
in
lcall
imul
push
cwtl
ss
xchg
mov
or
les
mov
pop
pop
sub
ljmp
adc
mov
add
aad
cmp
test
loop
stos
xor
mov
pop
push
or
sub
outsb
push
xchg
mov
mov
add
inc
xor
or
xor
cli
in
inc
and
je
push
lcall
jecxz
xchg
popf
adc
orb
lret
mov
adc
sbb
scas
mov
fs
shll
cmp
cmpsb
inc
cli
jbe
or
in
rolb
fcomps
ja
push
jecxz
lods
add
pop
xor
test
jp
stos
lea
mov
sbb
mov
sub
push
data16
jmp
or
shr
into
sub
push
scas
test
push
sbb
imul
repnz
add
mov
jo
xor
popa
test
test
ss
sbb
adc
mov
and
push
push
push
pop
cmpsl
sar
jmp
push
push
call
pop
adc
loope
and
pop
jae
ss
or
lcall
add
lret
push
sti
adc
repz
fwait
jp
test
lods
push
sbb
sahf
cli
lret
loop
push
mov
mov
mov
adc
je
shl
popf
inc
xor
movb
or
ficomps
push
or
adcb
jl
cmp
enter
insl
sub
popa
mov
sbb
adc
inc
push
sub
mov
adc
mov
pop
jecxz
jmp
xlat
test
pop
mov
or
lock
xor
aas
cwtl
adc
mov
push
int
mov
cmp
ret
dec
add
mov
add
add
mov
lock
aad
leave
jne
cmp
loop
adc
into
ja
in
mov
or
sbb
hlt
push
inc
es
fists
add
inc
push
stc
loope
add
out
push
pusha
in
dec
mov
imul
and
inc
and
mov
sbb
inc
fmul
jne
loop
shrb
in
lea
in
loope
sahf
lods
or
leave
mov
pop
orb
mov
jmp
fldt
pusha
sbb
jne
sub
or
adc
mov
in
nop
push
pushf
cmp
sbb
or
dec
add
ss
nop
push
test
ja
mov
push
push
jbe
dec
jnp
pop
jmp
jl
push
int3
dec
outsl
addb
pop
ja
sub
jns
push
jns
or
rclb
add
pop
xor
pushf
jno
or
sub
or
loopne
or
pause
cmp
add
test
add
arpl
aaa
mov
mov
jle
cmp
ds
call
sti
add
and
test
enter
adc
add
and
add
sahf
icebp
sbb
inc
jbe
pop
mov
jns
pop
jmp
dec
enter
rorb
movsl
push
lock
loopne
push
mov
and
jl
adc
push
push
jo
push
dec
adc
mov
and
or
loopne
mov
inc
subb
shr
rcrl
movsb
add
pop
pop
sbb
xchg
add
xor
sub
cltd
mov
scas
or
mov
sub
pop
daa
aam
or
stos
sub
sbb
push
insb
sub
xor
sbbl
addl
or
mov
enter
and
push
stos
pop
sbb
repz
xor
movsb
cwtl
loope
shrl
cmp
loopne
fisttpll
pusha
adc
sbb
mov
shl
js
scas
in
fmulp
data16
or
xor
dec
lcall
and
adc
test
cwtl
jb
shl
pushf
mov
movsb
les
shlb
test
adc
adc
pop
fsubs
pop
orl
jecxz
add
pop
leave
pop
out
lea
adc
rorb
and
jmp
or
pop
mov
push
mov
inc
xor
loope
sahf
and
fisubl
addr16
push
xor
ss
ffree
clc
addps
adc
and
arpl
mov
gs
mov
mov
pusha
adc
inc
dec
aam
dec
out
in
pop
ja
ret
sbb
adc
or
mov
mov
push
cmp
jmp
in
sti
testb
jne
sub
jne
xor
push
imul
inc
xchg
inc
cld
cld
sub
push
insl
push
inc
lock
pop
inc
fidivs
pusha
sar
clc
mov
mov
xlat
push
and
lcall
clc
testb
fiaddl
push
mov
cld
sub
mov
imul
jo
fimuls
inc
jg
xor
lock
aaa
adc
in
loop
pop
inc
lods
lods
pop
hlt
shr
sbb
push
sub
sub
add
iret
mov
cmp
sbb
jne
scas
xor
or
sbb
outsb
out
mov
add
sub
add
call
cmc
cmp
lods
hlt
addl
enter
dec
sbb
mov
pop
pop
pop
cmp
xor
xchg
imul
pusha
push
jne
or
add
or
sbb
ja
xchg
or
mov
mov
push
insb
into
mov
imul
push
es
mov
and
test
inc
popa
imul
sub
push
add
push
mov
push
lcall
xor
pop
push
mov
cmp
je
addl
loop
pusha
movzwl
xor
mov
repz
cmp
mov
in
dec
lcall
out
sahf
in
clc
insb
fnstcw
and
adc
push
sub
jp
mov
cwtl
jnp
or
add
mov
sub
fs
push
push
movsl
out
popa
sub
jecxz
imul
push
jbe
add
cs
push
dec
cmc
cmp
lcall
bound
leave
mov
mov
cmp
je
push
lea
push
sti
pushf
nop
adc
arpl
cmp
xchg
outsb
mov
sub
push
sbb
sbb
call
pop
or
cld
xor
or
mov
mov
movlps
call
push
aas
push
adc
inc
xchg
fcomps
push
and
inc
arpl
xchg
xor
bound
in
insl
push
clc
add
hlt
push
in
inc
mov
mov
jbe
in
mov
neg
push
mov
lea
cli
fldl
test
or
push
loope
in
orl
push
je
sub
dec
lods
push
test
and
test
ja
in
test
movsl
push
push
xor
push
push
cmp
je
ficompl
sbb
aam
push
xchg
jle
mov
rcr
inc
ss
mov
mov
push
aas
dec
mov
int3
sub
sub
mov
mov
inc
stos
mov
outsb
xor
in
xchg
mov
cmp
data16
into
push
test
loopne
in
adc
out
cli
int3
cmp
into
rorb
mov
imul
incb
addr16
dec
sbb
push
ss
mov
imul
adc
test
je
and
xchg
dec
cli
je
ret
pop
jne
stos
jecxz
jae
inc
cmp
adc
mov
add
jb
pop
aam
js
pop
cmp
pusha
sbb
xor
jp
jmp
xchg
pop
stc
push
and
pushf
mov
mov
jb
clc
lcall
jnp
in
cmp
je
cmp
je
cmp
jne
push
add
cmpsb
mov
pop
add
or
je
in
call
outsb
ja
sbb
jmp
outsl
ds
outsb
pop
mov
cmp
xor
adc
shl
or
mov
pop
clc
sub
jo
jo
xlat
test
mov
fdiv
pop
inc
enter
sub
jne,pt
xchg
adc
add
and
aad
pop
icebp
sbb
mov
mov
or
lea
push
push
cld
mov
and
sub
sub
add
fcoml
pop
cmp
aam
leave
ret
inc
iret
adc
sbb
add
icebp
cmpb
mov
xor
cmp
ja
ljmp
cmp
leave
inc
aaa
popa
push
ret
cmp
call
adc
pop
push
sbb
int
cmp
mov
push
inc
clc
sub
pop
dec
and
xchg
add
sti
daa
shl
ret
jmp
jge
cmpsb
in
xor
mov
or
add
cmp
push
cmp
gs
je
cmp
jne
mov
sbb
add
cmc
push
ficoml
inc
lock
mov
pop
dec
stos
clc
mov
xor
push
movsb
jne
jmp
testb
lcall
mov
test
cmp
jbe
mov
pop
add
fldt
mov
cmp
fs
dec
inc
jmp
inc
and
or
sbb
mov
dec
rorb
imul
xchg
nop
cmp
cmp
je
test
pop
lea
add
sahf
clc
mov
clc
inc
xchg
or
pop
in
inc
xor
insb
out
lds
jge
pop
sahf
jne
cmp
or
jne
notb
cmp
push
lods
loop
or
dec
sub
ret
cmp
or
ja
shrb
hlt
aam
ror
jg
test
scas
cld
add
push
cmp
push
rclb
mov
sub
cmpsb
inc
sub
popa
xchg
mov
jne
mov
add
cmp
mov
outsb
fs
or
lods
cmp
jb
aaa
jb
sti
lahf
cmpsb
mov
shl
add
jmp
cwtl
push
cmp
inc
aas
les
inc
orl
mov
je
fs
jne
xor
and
lock
test
sub
dec
or
add
sub
aas
push
jae
mov
jmp
dec
shlb
cld
bound
test
sub
lea
into
popa
pop
sar
call
ret
int
sub
rolb
cmp
jg
or
jge
bound
or
jle
es
sub
lcall
jmp
cmp
jl
pop
jle
pusha
rorl
or
test
jp
add
and
jbe
mov
test
aas
mov
jne
or
je,pn
test
jne
je
addb
pop
outsb
and
xchg
je
or
insb
push
je
xor
jmp
movb
inc
mov
push
sub
push
sbb
gs
test
add
sar
inc
add
push
mov
inc
shll
je
adc
outsl
loop
jmp
mov
loop
jae
add
inc
es
inc
jbe
sub
adc
fwait
jp
insb
add
push
movl
sub
clc
std
adc
mov
or
xor
push
cmpsb
or
insb
xor
mov
push
fsubl
pusha
shlb
add
data16
mov
mov
ja
jb
pusha
sub
outsb
pop
dec
mov
xchg
shl
mov
fldt
pop
sub
sub
cmpsb
shll
movb
push
inc
lea
sub
xor
mov
add
pop
jmp
sbbl
cmp
mov
test
mov
out
out
lret
adc
xor
mov
or
xchg
lods
cmp
pop
cwtl
xor
lock
lahf
inc
mov
xchg
mov
mov
add
inc
arpl
cs
fstl
dec
fadds
inc
and
js
xchg
cmpsb
jae
mov
fisttps
aaa
cmp
xchg
cmp
je
test
adc
icebp
das
jbe
mov
sti
mov
popa
inc
loopne
or
or
pop
mov
dec
in
and
push
and
or
add
sbb
stos
jg
add
movb
aam
xor
pop
add
sbb
mov
push
mov
clc
lods
dec
dec
pop
add
inc
inc
dec
sbb
push
add
scas
jl
add
cmp
les
mov
roll
stc
scas
push
or
cmp
mov
inc
inc
sahf
push
cmp
dec
rorl
ret
popa
hlt
sub
pop
add
adc
scas
imul
test
pop
adc
pusha
sbbb
rcl
add
out
pop
push
sbbl
mov
sbb
xor
sti
pusha
jb
cs
rcll
or
int
add
inc
fisttpl
lea
mov
adc
mov
cwtl
outsb
cltd
jno
shrb
cltd
add
fadds
dec
mov
lods
pop
jo
into
push
mov
lds
and
mov
cwtl
adc
sbb
xchg
imul
xchg
jne
lahf
jne
and
addl
sbb
push
xchg
xchg
push
test
popa
pop
imul
or
jne
inc
sbb
iret
push
leave
mov
cmp
or
in
or
inc
repnz
or
leave
cli
in
mov
test
mov
mov
jle
setne
inc
xchg
mov
rorb
aam
sbb
push
inc
lea
loope
mov
xor
loop
ret
dec
push
in
cli
add
xor
jne
push
rol
mov
pop
out
and
jne
sbb
inc
adc
roll
mov
cmpsb
jne
sbb
aas
push
icebp
pop
mov
inc
fdivrl
sbb
das
bound
pop
mov
into
cmpl
pushf
adc
mov
inc
cmpl
stos
jge
adc
mov
jb
fsubs
inc
lret
xchg
jle
sbb
je
aam
cli
lds
sti
sarl
inc
inc
xchg
in
loope
jge
pop
and
ret
jne
sbb
movsl
inc
lock
scas
cwtl
mov
dec
imul
iret
adc
mov
pop
ret
push
aam
fsubr
cmp
in
test
ret
dec
mov
push
push
cmpsl
repnz
and
inc
fsubp
insl
mov
sub
call
xor
jbe
jo
or
or
mov
je
inc
call
incl
jmp
pop
inc
cmp
je
lea
cmpb
mov
cmp
jne
les
aam
adc
inc
jo
jmp
cmp
push
mov
inc
incl
aaa
pusha
sub
mov
sub
push
jmp
test
movsb
fstpl
sahf
push
adc
xor
lods
cmp
pop
dec
fnstcw
je
jmp
add
jae
fidivrl
dec
rclb
push
and
add
jo
enter
popa
cmp
popa
lahf
jbe
das
ret
push
fcoml
sbb
cltd
mov
adc
pop
sbb
ffree
pop
push
sub
xor
or
insb
cmp
orl
adc
add
int
dec
rcll
add
test
add
or
cmpsl
in
xchg
mov
leave
test
cs
lret
xor
cmp
or
fmuls
mov
or
and
mov
cmp
ret
push
push
push
sbb
or
andb
push
push
clc
or
pop
push
das
mov
testb
adcl
dec
lcall
shr
imul
pop
pop
cmpsb
sbb
or
xor
push
fadds
mov
sub
cs
lret
in
xor
cmp
jb
pop
cmp
filds
cmpsb
add
sbb
pop
ret
xchg
push
enter
push
ss
test
in
add
in
sbb
data16
inc
insl
mov
out
clc
int
sub
mov
push
inc
or
push
test
jp
mov
jge
mov
jb
jl
xchg
push
pushf
es
enter
ljmp
or
cmp
push
dec
lock
push
cmp
popf
and
lock
mov
push
dec
mov
or
sbb
and
sbb
cmp
xor
add
and
loopne
cmc
out
add
mov
dec
movl
scas
cmp
js
loopne
mov
mov
add
gs
or
inc
cmpsl
flds
movb
hlt
xorl
cmp
cmp
or
pop
notl
add
lcall
insl
js
sub
jp
movsb
or
dec
xor
ja
mov
loopne
in
add
or
dec
lret
push
mov
test
test
pop
mov
je
mov
jmp
lcall
hlt
cmp
push
out
pusha
roll
push
cmpl
inc
rolb
adc
jo
xchg
jbe
add
mov
decb
mov
lea
mov
push
add
je
pusha
lods
ret
addr16
imul
sarl
bound
lea
in
inc
insl
cmp
push
mov
xor
dec
add
mov
icebp
rcrl
push
xchg
rclb
fwait
jbe
mov
inc
fsub
and
in
jo
push
mov
mov
out
sbb
lret
cmp
xchg
out
xchg
mov
xchg
orb
jg
mov
push
push
xchg
lret
push
cmp
je
xor
or
mov
dec
mov
jnp
clc
idiv
push
adc
es
dec
pop
daa
shlb
dec
in
xor
lcall
or
bound
lret
mov
call
dec
and
inc
bound
cmp
addb
adc
in
cmpsl
cmpb
adcb
push
cmpsb
sub
or
xor
jo
jmp
imul
jb
or
loopne
mov
daa
adc
das
push
repnz
xorl
imul
and
cld
or
xor
cltd
inc
lret
pop
mov
popa
adc
pop
pop
cmpsl
sbb
dec
cld
mov
inc
notb
aaa
sub
aad
into
lcall
int
insb
pop
pop
sbb
dec
or
loop
jg
js
outsb
sbb
and
std
sbb
push
pop
mov
mov
or
pushw
add
adc
sahf
imul
add
push
adc
lcall
sbb
xor
cmp
jmp
out
pushf
add
or
sbb
ja
xchg
clc
inc
adc
fistpll
cmp
idivl
negl
sbb
adc
sbb
xchg
pusha
mov
dec
pushf
add
or
cmpb
stos
xchg
aas
push
push
mov
adc
imul
aas
rclb
mov
mov
int3
add
or
in
dec
cmp
hlt
repz
jbe
xchg
stos
movl
or
cli
popf
inc
imul
pop
faddl
and
jp
rol
sub
lock
movsl
sar
xor
stos
xor
sbb
out
xor
loope
stc
cmp
pop
or
inc
clc
inc
inc
or
testl
ja
or
dec
cmp
jecxz
add
inc
add
xchg
push
xlat
ret
add
into
mov
rolb
int
ja
fbstp
add
in
into
mov
out
or
push
pop
cmp
sbb
fcoms
sti
orl
les
jno
sbb
clc
and
inc
sbb
jl
nop
insl
imul
hlt
and
xorb
andl
subb
add
jo
scas
int3
cli
mov
mov
pop
orl
lret
xchg
xchg
lret
sbb
imul
inc
sub
xchg
fdivrp
xchg
cmp
lret
xchg
rorl
inc
cwtl
push
push
cmp
insl
mov
add
inc
mov
sub
push
xor
int3
jecxz
or
je
dec
pusha
adc
cmp
dec
jb
and
jo
add
adc
mov
pop
out
xchg
add
push
and
fstpl
pushf
repz
dec
inc
push
ja
xchg
arpl
pop
inc
push
or
out
mov
rorb
xchg
add
ds
xor
jecxz
pop
cmp
fildl
inc
or
mov
fimuls
pop
pop
mov
or
xchg
mov
pop
add
iret
adc
push
mov
or
xchg
ss
fdivp
sarl
pushf
cs
lods
or
pop
cmp
jns,pn
push
inc
dec
lods
rcrl
push
jmp
clc
insb
call
xor
je
icebp
mov
int3
mov
add
add
xor
push
imul
pop
pop
push
inc
cltd
subl
xor
pop
es
test
fld1
fsub
test
movd
jb
adc
or
lods
cmp
and
mov
pop
neg
pop
or
pusha
aad
fwait
jb
jo
mov
push
mov
sub
pushf
mov
dec
mov
or
mov
add
sub
adc
mov
pusha
mov
clc
jne
push
je
adc
repz
jmp
inc
outsb
lahf
ret
call
or
push
cmpsb
inc
add
inc
jnp,pn
cld
data16
cmpsl
inc
pop
das
popf
pop
push
out
or
inc
xor
or
ja
adc
hlt
dec
pop
pushl
lock
rorb
jo
jle
and
cmp
rorl
xchg
push
shlb
testl
aas
dec
pop
and
mov
sbb
inc
fisubl
sahf
aam
test
add
scas
jecxz
adc
out
cmc
subl
movsl
adc
mov
add
nop
push
icebp
adc
xchg
add
lret
and
icebp
push
jb
cmp
jne
fistl
inc
adc
xor
cmc
pop
in
mov
lods
pusha
adc
or
int
in
test
and
xor
cmp
push
hlt
mov
pop
loope
test
inc
insl
jo
pop
mov
xor
mov
rclb
sub
adc
xchg
inc
mov
or
push
cmp
fisttpl
iret
lcall
or
es
mov
adc
adc
pop
push
test
sbb
and
sbb
mov
or
sbb
rcll
sub
addl
inc
sub
adc
sbb
or
fwait
out
jge
lea
sub
int3
push
cmpsb
adc
cmc
pop
cmp
test
pop
cld
movb
dec
push
mov
iret
xchg
mov
aam
xchg
shll
pop
movsb
sbbb
in
repnz
shll
testb
pop
add
jo
int
iret
pop
cmp
fadds
and
push
jbe
xor
xchg
jne
nop
push
sub
jmp
sbb
test
push
xchg
and
sbb
loope
leave
mov
xor
cltd
addl
xchg
addl
adc
mov
inc
ljmp
and
push
mov
xor
xor
jbe
and
dec
and
jo
outsb
inc
sub
iret
xor
sbb
and
mov
lcall
fldt
rorb
test
add
sub
sub
jne
sarb
lea
rorb
sub
lret
leave
sub
movsb
sbb
cs
outsb
ljmp
push
add
mov
jne
push
scas
add
sub
cs
cmc
andl
jmp
ror
cli
bound
sub
pop
xor
sub
adc
leave
xchg
adc
leave
insb
popf
shr
sub
adc
and
adc
push
mov
rcrl
aas
sub
cld
pop
push
pop
jno
and
mov
stos
subb
das
aad
jb
jae
mov
loopne
sbb
adc
add
pushf
push
stos
add
add
orl
jne
incl
and
xchg
in
in
clc
add
sub
je
imul
cmp
aas
in
mov
pop
xchg
jnp
sbb
add
js
xchg
and
sbb
movsb
and
popf
sbbl
or
push
fcomps
dec
dec
cmp
leave
enter
add
addr16
xor
dec
loopne
pop
sahf
xlat
inc
jb
mov
mov
mov
stos
mov
loopne
xor
lret
xor
decl
or
repnz
cmp
jne
mov
jmp
filds
enter
lock
rclb
xor
jmp
sahf
adc
imul
push
mov
xor
pop
or
dec
push
fldenv
addb
test
mov
enter
jp
push
push
push
cltd
bound
cmpsb
push
clc
sbb
sahf
push
push
aas
push
popa
push
push
push
mov
jle
adc
push
push
push
adc
cmp
insl
aaa
pop
xor
mov
shl
std
sub
fisttpl
cmp
jne
push
inc
js
mov
add
stos
std
add
or
scas
jl
sub
mov
imul
dec
mov
aam
xchg
scas
dec
push
mov
in
lea
pop
inc
sahf
cmp
repnz
cmp
and
xchg
xor
adc
pop
dec
enter
add
pop
ret
push
mov
sbb
cmp
daa
andl
das
add
xchg
shlb
mov
in
cmc
mov
out
jge
pushf
xchg
jbe
lret
sbb
adc
jns
lret
movsl
xor
jae
sub
test
in
sahf
in
xor
jbe
scas
aam
imul
jae
inc
and
and
aam
sub
test
xorb
add
pusha
outsb
add
call
mov
mov
mov
nop
movsl
mov
mov
neg
or
mov
aaa
sbb
repnz
fisttpl
ds
add
inc
fnstenv
punpckhwd
lea
sub
fisubl
lods
add
sarb
inc
enter
sbb
lea
jo
dec
or
mov
or
nop
jp
fsubrl
inc
mov
insb
decl
mov
sbb
add
aaa
sub
push
push
or
cld
aad
and
rolb
lds
mov
adc
fcomps
insb
push
or
sbb
mov
jge
xchg
add
add
xchg
adc
test
cmpsl
inc
or
sub
jecxz
sar
sbb
pop
fisttpll
and
or
aad
pop
insb
mov
lea
enter
add
jae
loopne
sbb
push
ret
rclb
mov
shll
sbb
inc
sub
push
pop
lcall
outsl
pop
mov
xor
stos
add
pop
jecxz
or
sub
xchg
add
pusha
or
repnz
adc
cmp
sub
add
lea
out
mov
mov
gs
add
pusha
jns
adc
dec
sti
fbld
adc
into
pop
scas
and
pop
jae
or
push
ret
mov
cli
je
push
dec
in
or
mov
or
mov
inc
aad
push
movsl
test
call
sub
notb
xchg
cmp
flds
fisubs
jne
push
int
xchg
jp
inc
sub
and
divl
insb
mov
cmc
sbb
stos
ds
aas
or
pop
adc
out
bound
push
jo
pop
imul
pop
les
cld
push
ret
cld
inc
pop
add
jl
add
xchg
and
popf
push
mov
shlb
lea
lock
pxor
jmp
push
sti
push
mov
inc
push
test
fwait
insb
out
add
ret
mov
push
xor
add
and
add
push
push
test
nop
or
and
out
inc
pushf
loopne
xchg
adc
scas
subb
cmpsb
pop
add
jge
push
sahf
les
or
sub
test
mov
or
pop
andb
insb
je
aam
and
dec
or
enter
mov
lahf
in
mov
inc
cmpsl
fmul
dec
sbb
push
xor
push
daa
je
aam
and
fistpll
jl
dec
sarb
iret
and
mov
or
mov
int
sbb
cmp
add
xor
jmp
jb
push
movsl
stos
mov
and
stc
lods
stos
jge
movzbl
push
xor
andl
push
xchg
std
leave
je
xor
mov
inc
or
roll
pushf
ficomps
fdivs
mov
movsb
mov
xor
pop
iret
popf
xor
in
dec
push
jmp
push
and
test
xor
popa
dec
push
dec
sub
iret
movsb
idiv
jmp
psubb
push
add
adc
push
inc
push
aad
dec
das
lret
mov
ljmp
inc
mov
imul
cmp
sbb
add
sbb
inc
pop
or
pop
jae
cmovbe
mov
add
inc
into
imul
test
mov
and
sbb
cmpsl
jb
test
inc
mov
lcall
push
or
add
or
add
jmp
push
push
mov
movsb
cmpsb
aaa
cmc
dec
mov
push
aas
fwait
adc
fidivl
cmp
aam
or
inc
in
jge
cmp
jne
movb
ret
mov
int
push
or
arpl
scas
insl
and
sbb
or
aas
imul
jle
rclb
dec
inc
and
lock
lock
jmp
and
or
inc
cmp
jno
xchg
push
push
push
and
pusha
mov
into
xlat
mov
pop
pop
sahf
pushf
cmp
add
and
adc
inc
mov
setae
call
outsl
popa
ret
jmp
mov
cmc
cmpsb
add
ret
repnz
cltd
push
fldl
call
adc
mov
clc
mov
je
cs
dec
in
push
dec
popa
fisubrl
cs
in
add
jle
lahf
push
movb
mov
pop
popl
sahf
je
test
xchg
sub
xchg
mov
cmp
jbe
cmp
jbe
mov
sbb
sub
mov
in
and
push
mov
mov
mov
mov
sub
push
sbb
adc
divb
jge
mov
and
dec
int3
or
js
mov
ds
push
pop
enter
inc
movsb
es
mov
ss
xchg
adc
cmp
popl
stc
lea
push
adc
lea
jge
mov
sahf
fdivr
xlat
jo
jo
sti
ret
js
repz
mov
dec
mov
loopne
cmp
cs
fadds
cmpsb
js
sarb
ss
bound
push
add
adc
push
xlat
loope
mov
sub
sbb
or
adc
in
mov
push
pop
stc
fdivrs
cmp
je
or
jne
arpl
mov
loop
js
pop
jl
push
pop
movl
push
and
mul
dec
sub
and
jmp
out
leave
jb
ret
push
sub
and
lods
rorb
push
cmp
sbb
stos
or
or
jl
loop
adc
test
mov
loopne
cmp
das
inc
pop
test
or
adc
inc
lock
addb
adc
ljmp
lcall
jb
pushl
fxch
push
sbb
xor
call
sbb
dec
inc
push
aas
in
cmp
add
push
jae
pop
or
cmp
dec
sbb
ds
imul
adc
mov
adc
push
inc
push
add
movl
fnstenv
sub
or
mov
sbbl
call
lea
lahf
imul
cvtpi2ps
xchg
jb
add
mov
add
inc
mov
lock
pushf
lea
mov
les
sub
push
pop
dec
cmc
xchg
les
inc
lea
fsubs
loop
test
fsubl
lea
or
mov
mov
cmp
ja
xor
loop
pop
mov
roll
xor
add
pusha
insb
fwait
inc
and
xchg
test
flds
pop
fdivrl
mov
sub
adc
lock
or
jmp
inc
test
cs
aam
pusha
insb
pop
ja
cmp
push
xor
inc
out
mov
scas
push
sbbl
push
sbb
movsl
imul
dec
dec
mov
add
imul
cmpsl
bound
push
shl
repz
jo
push
es
cmp
mov
sti
xchg
pop
cmp
jne
imul
sbb
add
mov
addr16
cld
and
notb
jb
pop
fcomps
mov
xor
pop
dec
movsb
insl
mov
mov
and
leave
mov
mov
gs
je
or
scas
and
mov
or
sbb
rclb
outsl
xchg
inc
sub
xchg
or
shlb
mov
and
outsl
pop
mov
loope
inc
das
stos
aam
add
cmpb
xchg
adc
dec
jo
add
sbb
inc
ret
or
fsub
mov
and
rclb
mov
out
insb
and
jmp
imul
mov
mov
inc
lahf
stc
mov
xchg
pushf
test
and
xor
in
push
int
cmp
in
add
mov
pop
test
jmp
mov
dec
jg
push
jns
mov
ljmp
cmp
cmp
into
clc
lar
or
pop
add
ja
testb
jg
pop
pop
pushf
lods
and
pop
mov
sub
jno
mov
or
cmp
es
add
jno
ret
add
popa
fldenv
je
in
std
ret
lock
test
cs
loope
aam
fincstp
dec
sub
into
pop
mov
test
jmp
pop
lock
and
jmp
fildl
test
jl
xor
int
jp
fistpll
adc
testl
out
or
push
xor
dec
fwait
pop
inc
repz
les
jmp
movsl
mov
and
mov
jp
and
movzwl
jge
add
sbb
jge
sbb
adc
xchg
add
mov
sub
push
push
or
inc
xchg
or
idiv
jle
mov
clc
jle
cmc
push
push
pop
ja
idivb
les
mov
sub
sbb
pop
push
inc
popf
push
xor
and
inc
imull
cmp
xlat
dec
push
cmp
push
mov
push
xchg
ss
rorb
ljmp
shlb
inc
add
pop
and
push
popf
push
mov
and
test
fsin
inc
pop
pop
rorb
cmp
lea
fcoms
pop
scas
test
lods
pop
cmp
add
add
pop
loop
aaa
dec
or
xor
and
cmp
je
les
xor
or
push
xor
je
sti
mov
aaa
push
or
dec
inc
cmp
inc
lock
or
stos
scas
or
xchg
sarl
data16
push
loope
mov
pop
pop
inc
xor
xor
insb
add
cltd
sub
dec
and
push
in
xchg
ja
jge
in
scas
push
dec
andb
jnp
adc
push
mov
adc
sbb
mov
jb
add
adc
cmp
jae
jne
lods
mov
hlt
cs
insb
dec
insl
shrl
jne
cmp
cltd
or
pop
jnp
add
mov
and
add
ljmp
mov
mov
orb
jmp
jge
inc
push
movsb
push
adcl
jp
push
mov
scas
cwtl
pusha
mov
adc
dec
lock
sbb
dec
in
xor
mov
les
out
enter
sub
mov
pop
ds
in
push
mov
and
push
loope
loop
loopne
loope
inc
mov
ret
xchg
fimull
xchg
adc
adc
test
fbstp
int
aad
mov
dec
jno
jnp
clc
fwait
les
add
push
test
lods
push
mov
inc
jns
lahf
divb
imul
or
ret
pop
daa
cmp
pop
lahf
sub
leave
scas
rcrl
xchg
adc
jo
gs
cli
push
int3
outsb
or
enter
lea
je
pop
adc
orl
sub
fdivrs
hlt
lcall
hlt
call
sub
mov
cmp
push
pop
add
shr
xor
sub
pop
ljmp
xor
lods
es
decl
ret
push
outsl
or
xor
in
push
call
xchg
outsl
and
loop
xchg
or
sbb
mov
out
outsb
insb
dec
lea
jl
mov
mov
lea
js
and
lock
or
lret
bound
add
push
mov
push
pushf
xor
andl
loopne
mov
or
sbb
pushl
inc
inc
sub
jmp
or
hlt
add
pop
add
cmp
push
mov
int3
fiadds
sbb
add
sarl
mov
imulb
idiv
ret
cmp
mov
push
push
shrb
sbb
scas
add
push
in
call
ss
jne
mov
cmp
hlt
push
pushf
sbb
js
shrb
clc
mov
daa
mov
add
adc
xchg
cli
std
ss
add
inc
pop
out
push
loopne
jp
nop
xchg
mov
fs
mov
pop
cmp
je
mov
xchg
xor
xchg
and
mov
mov
loop
sbb
add
mov
test
pop
jo
adc
or
js
fs
mov
aas
jl
jmp
ret
or
mov
inc
add
nop
push
push
mov
fistl
call
fadds
jge
mov
cmpb
scas
fidivl
leave
adc
jbe
inc
cmp
cmpb
testb
sbb
dec
or
push
fdivrp
xchg
push
adc
mov
cld
test
fidivl
add
in
hlt
lods
mov
pop
or
inc
jp
pop
shrl
out
je
dec
inc
scas
pop
or
fs
and
xorl
movsl
cmp
and
jl
sub
jae
mov
ds
js
mov
adc
stc
mov
cmp
jae
lea
jmp
cmpl
inc
xchg
push
lods
outsb
cwtl
repz
mov
mov
lea
ret
addr16
sub
aad
mov
sahf
jmp
sub
ss
scas
jo
in
shrb
cmpl
xor
mov
test
push
fs
cmc
or
scas
jg
cmp
sbb
hlt
dec
mov
add
rorb
add
rclb
push
sub
sbb
push
and
mov
sub
rolb
mov
add
shll
or
add
xor
xchg
cmp
mov
out
dec
push
jae
in
add
add
addb
xchg
jb
sbb
or
movsl
or
xor
out
inc
mov
les
pop
add
adc
adc
test
xchg
jo
mov
pop
fcompl
xor
cmp
mov
roll
loopne
popf
inc
push
lds
pop
and
jae
xor
inc
hlt
adc
sub
rcl
push
dec
mov
mov
xor
lock
xchg
adc
loope
add
add
std
add
enter
je
adc
pop
lock
push
fisubl
in
xchg
lods
pop
loopne
jae
push
xchg
cmp
jbe
cmp
adc
lock
or
pop
mov
cmp
fwait
cld
sub
adc
sub
fwait
fwait
or
movsb
add
mov
cmp
and
inc
sbb
adc
lods
cld
or
sbb
shll
std
push
adcl
sbbl
mov
and
xchg
pushf
xchg
mov
daa
cmp
cmpb
adc
xor
shl
add
push
pop
cmp
sbb
xchg
dec
xor
aad
adc
adc
xlat
mov
push
inc
push
jbe
nop
les
or
and
shrl
push
adc
sar
jl
test
aam
jns
sbb
xor
pop
rorb
arpl
xchg
or
push
and
add
pop
xor
test
enter
pop
push
inc
lret
or
sub
xchg
or
jnp
cmp
aam
fdivs
xor
inc
cmp
test
cmp
jbe
outsl
mov
jl
dec
inc
jns
dec
dec
clc
jne
sti
int
imul
aaa
js
mov
sub
lea
out
cmp
stos
es
inc
and
xor
dec
xor
lahf
rcrb
xchg
cmp
hlt
negb
scas
jns
or
add
call
add
dec
pusha
push
test
lods
cmp
call
inc
pusha
sbb
inc
sbb
fxtract
jne
mov
js
fistl
inc
or
cld
loopne
fnstenv
mov
shrl
es
inc
push
in
add
nop
data16
jb
fcmovbe
cld
clc
pushl
cmp
mov
inc
loope
push
jmp
xchg
test
notl
into
orl
data16
or
xor
sbb
xchg
pop
add
mov
push
mov
xor
mov
iret
je
mov
cmpsl
pop
xchg
or
lds
ds
inc
push
jb
fldl
dec
insb
lea
adc
fcmovb
insl
sbb
dec
adc
inc
adc
and
loope
fisttps
push
call
adc
jae
push
sbb
pop
inc
rcll
mov
cmp
pop
fistl
xor
arpl
xor
insw
pusha
sub
mov
rorl
mov
shll
cmp
add
push
cmp
adc
lock
xlat
aad
cmpsl
jbe
push
cmp
fprem
and
mov
xor
shlb
dec
add
lret
fstp
add
inc
test
inc
jne
sub
das
push
jmp
pusha
ret
and
jmp
and
int
in
push
push
insb
xor
pushf
mov
dec
jnp
fstpt
adc
mov
mov
xor
lock
mov
dec
iret
pop
add
adc
pop
cltd
bound
add
mov
adc
loope
popa
leave
mov
inc
adc
sbb
sbb
leave
aaa
mov
jl
xchg
or
push
xchg
push
adc
jge
stos
pop
ret
dec
in
je
dec
clc
xchg
dec
xchg
jge
xchg
mov
jle
mov
push
inc
test
mov
adc
mul
seto
or
test
adc
enter
mov
jmp
adc
mov
rol
clgi
jp
inc
enter
pop
inc
mov
xor
inc
xor
ss
insl
data16
sub
jmp
test
jns
lea
mov
mov
mov
in
call
xor
xchg
jo
xchg
mov
scas
subl
and
mov
and
ret
pop
push
movl
push
mov
mov
test
mov
mov
mov
cmp
jne
sbb
dec
and
test
sarl
mov
stos
loop
jge
je
test
adc
fwait
loop
push
addb
jl
jmp
mov
and
mov
mov
mov
mov
ljmp
jo
inc
xchg
adcl
pop
mov
jecxz
xchg
cli
dec
sub
in
jo
xchg
gs
add
repz
adc
inc
dec
sbb
xchg
enter
mov
lret
xchg
rcrl
popf
in
fisubs
sbb
inc
cmp
jae
movsl
cmp
cmp
dec
test
pop
inc
cmp
or
xchg
push
pusha
push
jb
lahf
cltd
mov
enter
and
jle,pn
mov
pop
push
mov
cmp
rol
jb
ret
outsl
mov
pop
add
sbb
clc
and
andl
or
jle
je
cld
push
std
stos
shlb
pop
lock
add
push
mov
mov
dec
loopne
or
sub
fidivrl
push
hlt
iret
and
xchg
test
inc
idiv
in
mov
lea
sahf
mov
fst
mov
add
pop
xorl
add
cmpb
ret
test
dec
ficoml
pop
mov
out
add
pop
das
test
pusha
ret
inc
sbb
push
sub
sbb
pushf
xor
or
mov
xchg
push
cld
inc
sahf
xchg
dec
pop
arpl
sbb
shl
andl
push
lcall
mov
pop
fsqrt
mov
mov
adc
mov
lds
stos
add
inc
sahf
jbe
inc
popa
or
hlt
je
js
xor
sbb
sahf
mov
call
insb
lcall
in
jl
shll
fidivrl
out
pop
clc
mov
adc
test
je
mov
inc
lret
popa
dec
loope
mov
sub
dec
lods
bound
mov
or
filds
clc
add
clc
jno
push
lods
loopne
repnz
mov
add
icebp
or
and
jne
sbb
pop
push
cmpsl
sahf
or
sbbl
sti
and
and
pop
add
or
in
cmp
cwtl
clc
dec
inc
xorl
lea
jle
mov
movl
sti
and
ficoml
aam
test
sub
dec
fsubrl
adc
pushl
cmpsl
faddp
push
xchg
and
cltd
cmp
cltd
or
rclb
pop
adc
ret
subl
push
and
xchg
jle
sahf
rorl
rcll
shrb
sarl
rcrb
imul
int3
in
aad
ljmp
xor
test
xor
dec
popf
xor
push
mov
mov
addr16
lea
adc
cmc
fadds
jge
mov
mov
lcall
xchg
mov
rcrl
jae
inc
fcompl
int
dec
add
dec
push
test
mov
jle
js
es
jmp
out
mov
cmp
add
add
movsl
or
dec
push
inc
mov
xor
sub
mov
add
ds
fcomps
outsb
mov
test
pop
lea
lods
mov
enter
das
push
lds
add
icebp
imul
shrl
pop
sti
loope
adc
and
imul
xchg
sbb
xchg
pusha
inc
mov
clc
loope
out
test
mov
cmp
movb
cmp
jae
sub
mov
icebp
adc
mov
lock
cs
adc
ljmp
dec
push
push
cmc
xchg
shlb
cmc
push
inc
jge
inc
nop
or
add
fstpt
add
xchg
cwtl
loop
dec
dec
mov
inc
movsl
lock
pop
xor
fwait
test
fdivr
mull
pop
or
jo
xor
xor
dec
jg
push
add
xchg
jle
sub
xor
int
cltd
std
xchg
push
push
ds
int3
add
lods
mov
add
push
test
ja
or
ret
sarl
push
mov
sub
lea
add
add
cmp
add
xor
and
sbb
add
popa
rcrb
lea
lret
lds
add
popf
xchg
dec
aaa
pop
mov
inc
mov
insl
rcrb
fidivl
jle
dec
inc
cmpl
adc
pop
mov
jp
dec
jae
xor
je
lea
es
ss
or
or
and
add
xchg
pop
xor
add
cld
leave
adc
or
push
bound
cmp
js
add
fisubrs
loopne
add
popf
clc
push
pop
pushl
jmp
inc
add
pop
lods
add
out
push
leave
and
mov
push
cld
mov
fcoml
mov
fidivl
js
jge
ud2
testb
sbb
xchg
clc
push
push
mov
mov
jbe
cld
push
stos
adc
cmpb
ret
push
pusha
mov
lea
push
sub
sbb
xchg
hlt
add
cmpsb
add
mull
xor
push
daa
fs
mov
or
or
je,pt
aaa
adc
daa
lods
mov
adc
sbb
je
popf
jbe
in
leave
push
shrb
cmp
push
cmp
jae
inc
jmp
push
or
sub
add
and
ret
add
test
add
inc
shlb
push
jmp
mov
ja
push
add
add
xchg
lods
loope
into
or
int
mov
and
mov
push
cmpsl
divb
sbb
push
roll
mov
lcall
in
mov
cmp
cmp
es
movsb
push
loopne
pop
mov
or
add
lds
push
insl
mov
sbb
addb
mov
lgs
sbb
adc
inc
xchg
gs
pop
leave
dec
adc
imul
or
mov
xchg
add
std
arpl
lret
xor
dec
jb
or
cmp
push
or
jb
std
pushl
push
or
rolb
cld
je
mov
xor
sbb
adc
ja
cmpb
fwait
outsb
inc
mov
push
or
or
xor
sbb
add
mov
pop
add
lret
inc
roll
fildl
ds
fadds
cli
mov
jl
data16
sub
push
mov
xlat
inc
or
add
es
and
mov
dec
sbb
or
mov
movb
aaa
jmp
mov
adc
shlb
lea
test
jge
ja
cmpb
out
ret
add
and
push
xor
pop
cmp
push
jb
dec
idiv
ss
loop
push
into
xchg
sbb
xor
push
and
mov
sbb
jmp
xchg
push
cmpb
xor
push
mov
jb
cmpb
xor
dec
rolb
jno
push
mov
jne
je
sbb
mov
adc
js
push
sbb
sbb
sub
cmp
movsl
pop
repz
add
sub
dec
add
mull
push
xchg
xor
aam
repz
inc
rolb
sbb
or
es
inc
adc
int3
movsb
cld
dec
push
adc
movsb
jle
inc
xor
push
mov
and
scas
push
push
mov
add
dec
enter
addb
ljmp
add
xor
push
outsl
mov
pop
ljmp
ret
movsl
inc
in
push
inc
aam
sbb
mov
lock
clc
fstpt
or
in
lock
xchg
shrl
add
cmpsb
pop
out
dec
enter
or
out
insl
or
mov
dec
sub
or
xor
sub
add
fadd
add
rorl
cmpsl
sbb
cs
mov
xor
push
jg
or
xor
inc
fwait
xor
adc
popa
lock
push
jne
push
dec
inc
dec
icebp
call
sar
inc
js
sarb
sbbb
lret
sub
add
sub
ja
outsb
psubw
arpl
jp
mov
push
sbb
jne
jns
and
adc
movsb
pop
dec
notb
sbb
xor
push
jbe
fiadds
pop
and
das
sbb
jne
and
push
out
sar
adc
in
jmp
mov
push
aam
fcomp
test
jo
mov
mov
mov
int
stc
rcrl
fadd
lahf
mov
repz
cmp
dec
mov
and
loopne
mov
mov
push
cld
shrb
adc
add
loope
inc
push
adc
iret
into
call
scas
cmp
inc
dec
lea
scas
add
pusha
out
repnz
and
sbb
xchg
jl
xor
int3
push
nop
addr16
test
aaa
test
inc
ds
and
je
push
in
aas
xlat
add
inc
push
iret
cmc
and
and
loopne
and
ss
repnz
pop
fnstsw
dec
xor
pusha
jecxz
pop
hlt
sub
fsubr
or
loopne
add
sub
insl
xchg
inc
fdivs
js
push
ja
push
dec
dec
inc
add
pop
or
jmp
filds
test
add
addb
add
push
popf
movsl
mov
cli
stc
xor
fwait
sub
mov
add
pop
mov
jg
mov
pop
mov
mov
stos
incb
lret
mov
sbb
cmp
imul
and
stc
sub
cld
xlat
pop
mov
jmp
outsb
adc
jb
in
pushl
pusha
aaa
frstor
pop
jmp
or
inc
rcll
ja
and
mov
pop
outsl
adc
iret
stc
push
push
jmp
scas
push
sti
pop
pop
ret
push
mov
jg
adc
test
imul
and
or
scas
pushf
jg
es
test
pop
call
or
mov
les
bound
add
mov
mov
sub
es
fcomp
add
adc
sarb
ja
push
xchg
xlat
jg
sbb
sub
les
in
lock
xchg
mov
jp
ret
scas
rcl
mov
xchg
mov
mov
das
push
add
xor
or
add
bnd
sub
cmpsl
lret
rclb
or
pop
xchg
mov
jg
pop
fs
xchg
and
ljmp
clc
push
add
out
lock
or
movsb
mov
inc
inc
lahf
fs
xor
xchg
mov
shrl
repnz
mov
or
xchg
push
mov
sbb
push
or
jl
fstpl
and
push
jp
cmp
and
dec
call
and
and
cmp
jne
sbb
push
cmp
sbb
in
mov
lock
std
cmp
sbb
mov
adc
repnz
add
push
rcrl
and
mov
or
lock
leave
inc
inc
add
sub
insl
out
shlb
jmp
out
sub
adc
sbb
lret
or
aaa
pusha
or
cld
adc
mov
sbb
scas
or
andb
pop
adc
addl
leave
ljmp
mov
xchg
xchg
movsb
xchg
outsb
fwait
add
sbb
stos
push
leave
mov
mov
xor
pop
mov
in
and
inc
in
pop
add
mov
push
mov
loope
lock
xchg
sub
imul
addr16
push
mov
sbb
push
and
push
adc
sbb
and
add
mov
add
push
out
push
cmp
inc
pop
cmpb
mov
xchg
sbb
mov
iret
shl
inc
cwtl
divb
lea
shlb
xchg
push
cmp
cmp
xor
enter
fs
test
sbb
sarl
sbb
adc
insl
js
movb
jp
add
jle
leave
cmp
movsb
dec
add
xchg
jae
inc
notl
scas
lea
mov
dec
call
loopne
mov
add
ret
ds
js
or
fldcw
sbb
mov
or
add
sbb
test
add
pop
cwtl
dec
push
dec
xor
jbe
mov
push
outsl
sbb
jle
and
daa
or
inc
call
pop
add
mov
or
and
mov
push
adc
lock
xor
je
nop
mov
lock
cmp
leave
es
mov
sub
sbb
pop
call
cmp
jl
pushf
test
jl
aaa
bound
ret
fcomps
mov
add
inc
push
cmp
add
movsb
inc
jo
addr16
xor
sub
mov
mov
imul
pop
xchg
clc
daa
xchg
outsl
dec
jne
xor
enter
jle
jle
jo
fnstsw
sbb
pusha
xor
jbe
mov
pop
rorb
inc
inc
push
xchg
mov
jnp
mov
add
pop
xchg
push
dec
cmp
inc
sub
cmp
aas
jne
sbb
loopne
or
sbb
je
loop
and
jbe
xchg
ljmp
adc
aad
add
or
and
cmpl
daa
sbb
jae
push
push
inc
lcall
ficoml
mov
or
xor
mov
xor
test
iret
pop
add
cmp
xor
sbb
push
loop
out
or
mov
dec
add
adc
add
shlb
lret
mov
ja
insb
stos
into
leave
add
out
adc
stos
xchg
dec
add
sbb
sbb
sti
jp
sbb
push
lods
adc
and
dec
addb
jge
lahf
insl
clc
adc
xor
into
je
imul
inc
rclb
jmp
call
push
and
and
and
dec
sbbl
mov
or
dec
xchg
push
jo
call
insl
cmp
fimuls
das
aad
and
and
inc
sub
push
jne
test
in
mov
pop
stos
cmp
push
mov
mov
orb
sbb
cmp
add
and
push
cmp
jb
sub
test
add
jl
jne
into
mov
and
sbb
cmp
cld
push
or
in
cmp
dec
rclb
adc
shrb
je
push
insb
vpunpckhdq
inc
add
rolb
das
test
mov
lea
push
pop
mov
mov
lea
and
imul
scas
lea
xor
add
sbb
fwait
je
pop
dec
add
js
cmp
add
jmp
add
cs
mov
pop
cmc
movsl
outsl
jns
scas
mov
mov
es
dec
or
push
add
imul
icebp
adc
ja
mov
mov
push
fiadds
add
mov
es
test
sbb
add
mov
or
dec
test
jl
add
or
push
sbb
sub
jg
aaa
enter
incl
adc
xor
in
pop
push
repz
jne
sub
out
lea
push
in
call
sahf
imul
lret
push
out
cwtl
push
scas
adc
insb
nop
sub
addr16
add
aaa
lods
mov
rorl
cs
ret
test
loopne
je
repnz
loopne
push
addr16
jns
gs
movsl
mov
lock
push
adc
jb
jp
faddl
popf
push
loopne
ud0
mov
mov
xor
xlat
add
xchg
pop
jg
adc
or
hlt
test
jb
mov
subl
aas
and
fistl
aad
aam
ljmp
and
add
aas
mov
jecxz
push
into
insl
mov
enter
test
jnp
cld
inc
andb
movsb
sub
xchg
mov
js
loope
mov
jnp
mov
xchg
je
js
mov
ds
adc
sbb
jb
sub
ja
les
out
jno
ljmp
sbb
int
fsub
or
or
dec
pushf
pop
cli
roll
xor
jae
and
in
nop
dec
mov
fwait
jg
scas
lods
pop
push
jmp
sbbb
inc
add
push
sbb
dec
enter
sbb
cmp
sbb
mov
sti
sub
xor
jb
or
sub
sub
push
faddl
clc
insb
pusha
inc
es
dec
sub
je
and
fisubrs
lods
fcmovnb
sbb
pop
xor
clc
cld
and
dec
pop
dec
mov
xchg
cmp
inc
push
cs
and
andl
fwait
xchg
into
sbb
or
cmp
adc
adc
movsb
jb
add
add
xchg
xchg
lret
and
sub
push
dec
sub
xor
xor
push
cmp
or
movsb
jb
or
or
dec
push
fs
mov
insb
push
pop
clc
cmc
movsb
jnp
xor
adc
pop
mov
jnp
fildll
into
pop
int3
or
leave
rcr
mov
dec
mov
or
sahf
fsubrs
dec
pop
jmp
push
movl
add
sbb
sahf
loopne
popa
mov
shrl
in
xchg
out
push
add
cmp
and
pop
or
sbb
mov
cmp
mov
or
mov
mov
sbb
enter
add
mov
jnp
pop
push
xchg
enter
movsb
sbb
jae
cmp
push
in
inc
push
inc
inc
cmp
inc
push
cmp
xor
inc
push
cmp
sub
and
cmp
nop
sbb
or
insl
nop
inc
or
adc
jno
pop
push
push
rorl
pop
xchg
loope
mov
xor
sub
xchg
fldl
fistpll
push
js
call
pop
out
push
adc
or
mov
jo
cs
and
jmp
push
loopne
movsl
movsb
mov
add
xchg
orb
add
mov
dec
sarb
jecxz
pop
cld
addb
adc
andl
fmuls
pop
fsubr
dec
xor
and
nop
add
and
add
rorb
into
jo
adc
out
mov
xchg
cld
ja
nop
adc
xchg
or
out
xor
mov
pop
jb
dec
push
sbb
push
clc
fwait
adc
pushl
dec
push
pushl
and
sub
sbb
out
addb
mov
pop
cmp
pop
scas
inc
mov
mov
mov
pop
jge
add
dec
and
inc
or
jmp
lea
enter
adc
adc
mov
add
dec
shrb
popf
mov
shll
or
mov
inc
pop
in
add
xchg
pop
add
pop
or
xchg
or
lods
xchg
push
inc
mov
ljmp
cwtl
push
adc
cmp
mov
sub
mov
roll
int3
rorl
les
or
push
loopne
hlt
jne
sub
adc
add
cmp
pop
cmp
mov
sbb
mov
int
mov
orl
xor
push
shlb
add
mov
push
add
adc
add
loope
sbb
ss
inc
cmp
inc
add
inc
adc
xchg
sbb
lods
orb
mov
aas
jmp
sbb
pop
fwait
pop
addb
fwait
sbb
adc
or
pop
add
xchg
js
inc
or
cld
or
xchg
add
sub
bnd
data16
inc
mov
pop
sbb
test
jbe
es
in
out
loopne
aad
sbb
jno
push
push
cmp
adc
dec
js
and
js
sbb
push
shrl
cmpsb
cmp
adc
jnp
je
or
lret
iret
xor
push
push
sub
adc
cmp
aad
adc
sub
or
std
or
lods
mov
add
rcrl
stos
push
outsb
bnd
mov
or
pop
jmp
movb
ret
push
test
lock
sub
adc
cmovp
out
test
nop
adc
addr16
add
push
cmp
jae
push
imul
bound
xor
jmp
mov
test
stos
sbb
dec
loop
sbb
pop
mov
mov
or
outsb
add
sub
iret
sbb
test
aaa
mov
sub
jae
enter
andnps
add
jp
jb
addb
fstl
loop
clc
push
xchg
incl
pop
xchg
mov
push
inc
inc
and
je
adc
test
adc
or
orl
jmp
in
mov
fwait
test
and
clc
pop
lea
inc
or
std
mov
movb
adcl
xchg
mov
cmc
jns,pn
mov
sub
insl
js
xor
sub
xchg
jl
inc
testl
push
pop
shl
dec
add
add
cmp
pusha
lods
cli
lods
or
movsb
xchg
sbb
lea
ja
cld
arpl
inc
xchg
or
mov
xor
inc
movsb
popa
shll
lds
psubsw
mov
adc
xor
or
out
rcrl
cmc
jne
mov
push
ret
test
ljmp
adc
sub
push
sub
bound
ja
dec
cmpb
movsl
sub
pop
xor
in
inc
dec
lea
push
mov
leave
into
stc
push
pushf
or
arpl
sub
mov
cmp
into
and
sbb
mov
mov
mov
adc
arpl
fcomp
add
and
xchg
imul
xchg
arpl
insl
sbb
repz
mov
and
incl
sub
call
jnp
add
push
dec
adc
cli
enter
xchg
xor
jne
push
aad
push
dec
xchg
mov
or
imul
xchg
xchg
jle
jg
sahf
inc
lea
mov
pushl
clc
inc
rorb
add
pop
pop
or
pop
inc
icebp
or
in
adc
das
mov
add
lret
sbb
sar
scas
repz
ret
push
loopne
mov
ja
pop
inc
dec
push
mov
mov
mov
es
leave
or
bound
ds
push
jl
dec
xor
dec
cmp
cmovae
jae
xchg
ficomps
sahf
xor
add
add
add
sbb
add
sub
xchg
mov
or
repnz
cwtl
mov
mov
inc
push
mov
mov
pop
orl
mov
inc
cmp
js
or
pop
mov
jp
mov
nop
nop
and
push
lods
push
jae
cmc
stos
inc
subb
and
shll
or
sub
jg
lret
mov
je
add
aam
iret
out
adc
cmc
inc
add
mov
ss
jo
cmp
addl
sub
pop
leave
cmp
movsb
mov
sbb
and
inc
sub
vmovlps
nop
lock
neg
sub
adc
loope
mov
dec
lds
icebp
das
jecxz
add
leave
add
mov
addr16
ljmp
inc
or
lock
mov
sbb
mov
push
xor
add
rolb
inc
ret
xchg
push
jo
ror
mov
sub
inc
push
dec
scas
dec
xor
nop
and
or
inc
xor
inc
inc
sub
xor
hlt
cltd
mov
mov
mov
push
push
mov
xlat
lods
repnz
cli
xchg
lock
and
popa
sub
xor
lock
xchg
ja
orl
dec
ret
mov
out
jmp
das
or
test
into
mov
ret
pusha
insb
xor
ljmp
jl
andb
xor
call
sbb
jecxz
mov
call
or
xchg
addb
rol
push
add
xor
popa
and
jbe
adcb
xor
jae
jmp
jne
xorl
sbb
insl
and
imul
mov
jne
int3
test
mov
stos
push
sub
adc
mov
pop
enter
test
jl
sbb
jo
mov
bound
leave
in
call
dec
movzbl
jmp
test
jnp
dec
repz
mov
sahf
xchg
scas
mov
sub
sub
mov
or
sub
cmp
mov
and
lret
sub
jne
sbb
loope
add
jle
sub
push
arpl
mov
mov
add
mov
adcb
add
scas
test
mov
adc
pop
xchg
dec
cmpsb
int
adc
or
sub
inc
js
push
jns
ljmp
popf
sbb
or
pusha
adc
rcll
adc
mov
sbb
or
clc
aad
in
cwtl
les
and
cwtl
les
xchg
nop
mov
iret
into
adc
jmp
sub
mov
je
cmp
jle
push
cmp
loopne
push
xchg
rcr
in
push
mov
jo
rolb
popa
inc
cmp
sbb
rol
popa
push
xlat
jecxz
ds
or
jge
cltd
or
es
out
jne
rcrb
decl
sbb
lock
sub
add
mov
aaa
jecxz
mov
subb
in
jecxz
cwtl
dec
insl
xchg
push
movl
adc
adc
popa
daa
xor
test
sub
mov
mov
orl
pop
arpl
nop
rcrb
xorl
dec
xchg
mov
mov
inc
pusha
adc
mov
or
jmp
mov
ret
imul
xor
dec
push
je
dec
jne
aad
adc
or
xor
adc
jp
enter
fisubl
adc
inc
lahf
cwtl
cmp
mov
mov
add
inc
sti
cmp
xchg
push
sub
xchg
pop
and
push
push
jmp
cmp
pop
test
data16
lea
sbb
xchg
xor
dec
dec
jg
xchg
ret
push
dec
dec
jns
lods
bound
jp
jle
sub
ret
stos
sbb
mov
add
in
das
cmp
xchg
push
add
out
push
daa
call
pop
js
xor
push
pusha
add
adc
sub
sub
pop
sbb
or
addr16
xchg
frstor
or
push
cltd
add
insl
dec
shrb
push
cmp
jb
pop
adc
sbb
rep
sti
xchg
adc
add
mov
add
decb
pop
jo
xor
in
push
mov
or
add
and
pop
das
test
sub
push
and
sub
sbb
ret
dec
pop
push
jle
dec
inc
mov
pushf
rol
add
xchg
pop
or
jmp
sub
mov
cld
orl
je
mov
inc
xor
sbb
or
iret
pop
and
dec
inc
pop
repnz
pop
js
fcmovbe
ret
ljmp
pop
aad
fwait
jns
or
mov
jecxz
mov
dec
sub
dec
nop
inc
inc
adc
imul
dec
sub
pusha
push
in
add
ja
fs
sbb
je
xor
jnp
adc
nop
dec
xchg
mov
mov
or
and
fstl
fwait
and
and
or
lret
sub
sub
inc
movb
cs
push
mov
mov
call
push
cmpsb
das
or
imul
xor
jl
mov
daa
and
test
sub
lea
out
outsb
lcall
mov
jmp
cmp
jae
add
icebp
cmp
xor
jecxz
pop
mov
inc
lret
andl
xorl
dec
jns
fisttpll
sub
sbbb
sti
sbb
pop
adc
scas
or
ss
shll
cltd
xor
inc
dec
mov
cwtl
mov
mov
test
sbb
pop
and
adc
sub
movups
pop
add
call
mov
cmp
push
stos
xor
xor
add
addl
loop
lods
call
and
loop
mov
push
mov
lcall
hlt
mov
or
ds
inc
mov
inc
mov
add
inc
inc
mov
or
pushf
lcall
jge
iret
xor
mov
aam
enter
sbb
mov
dec
daa
sbb
shrl
and
cwtl
push
mov
loop
nop
rolb
std
idivl
shrl
or
inc
xor
sbb
push
cmp
loopne
xor
xor
push
sub
add
sbb
imul
cli
cmp
pop
mov
loopne
add
sub
push
pop
add
adc
add
pop
xlat
add
adc
jg
outsb
inc
stc
clc
cmpb
fadd
sbb
in
in
or
rcrb
enter
push
cwtl
adc
cmpl
adc
inc
jl
pop
shr
fcompl
xchg
mov
push
shlb
jge
pop
push
push
add
xor
ss
cmpsl
arpl
add
ss
push
jmp
add
sub
dec
mov
dec
rolb
jae
lea
and
lret
push
cwtl
pop
pushf
or
push
outsb
xor
sbb
jmp
push
mov
jbe
and
sub
jp
mov
shlb
and
mov
and
push
lds
bound
jle
push
mov
add
jns
pop
jne
add
add
aas
movsb
jo
sub
cmpl
clc
jo
stos
bound
or
mov
lods
test
nop
sbb
and
xor
adc
shrb
add
adc
ja
jo
das
adc
aas
sbb
xor
mov
adc
and
inc
test
das
inc
outsl
add
lds
je
nop
xchg
mov
mov
push
push
sbb
and
push
sbb
movsb
leave
movsb
adc
xchg
add
pusha
mov
pop
repnz
xchg
xchg
add
in
in
lcall
xchg
mov
add
and
daa
adc
push
add
dec
cmp
add
and
insb
sbbb
push
mov
push
les
sub
inc
lcall
jb
dec
and
loopne
push
movsl
push
lods
dec
shlb
popa
loope
sahf
int
push
adc
or
pop
jne
add
out
jo
pop
in
inc
xor
push
xor
pop
or
insb
in
arpl
push
xchg
sbb
pop
add
ret
sahf
filds
fs
sbb
in
jns
lahf
add
iret
and
dec
pop
in
sbb
mov
dec
mov
adc
inc
mov
sbb
mov
enter
push
insl
cmp
sub
mov
lea
jno
push
sub
mov
aaa
lcall
or
addl
imul
cli
mov
xor
lea
mov
sahf
js
inc
stc
jnp
andl
insb
dec
add
insl
sbb
sub
icebp
inc
push
movsl
loopne
inc
aad
cld
add
cld
xor
sub
lea
test
mov
test
fs
or
cmp
fmull
lret
push
mov
push
adc
jmp
lods
adc
mov
enter
call
xchg
sbb
mov
insb
call
movsb
mov
fstpt
ja
inc
jmp
push
leave
mov
xor
or
add
daa
dec
jae
push
movsl
cmp
add
jg
sbb
mov
in
jo
add
cs
sbb
sub
mov
add
or
push
ja
sbb
cmp
ja
enter
or
int3
push
adc
repz
add
add
out
leave
fstpl
aad
and
loope
outsb
xchg
nop
imul
lock
addr16
cmp
ss
js
push
scas
rorb
loopne
sub
sbb
xchg
pop
insb
movups
addl
nop
inc
js
push
pop
push
test
xchg
jl
inc
mov
jp
inc
add
stos
dec
lock
test
in
and
bnd
jb
push
sbb
insb
test
cmp
lret
cltd
add
cmp
cmp
sub
cltd
add
xchg
and
sbb
pop
sub
or
sbb
icebp
inc
push
or
ja
jl
sbb
addr16
push
mov
xchg
or
push
gs
scas
loopne
adc
or
sbbl
pop
dec
mov
sbbb
add
rcrb
cmp
in
sbb
dec
aad
inc
cmp
inc
dec
cmp
push
sbb
pop
mov
mov
arpl
data16
inc
xchg
xlat
pop
scas
loopne
and
xor
xchg
lret
xor
fimull
insb
inc
push
cmp
fmull
jne
mov
fwait
sbb
lahf
sbb
xchg
rorb
dec
test
sub
lods
repnz
sbb
mov
and
pop
movsl
add
lea
sbb
xchg
imul
sbb
add
or
pusha
inc
call
push
mov
loopne
loop
jl
leave
lock
lea
mov
jl
mov
jmp
adc
loop
or
out
sub
adc
add
fwait
xchg
dec
test
sbb
xor
jmp
dec
popa
outsb
jge
add
add
test
push
and
jnp
jo
popa
ficomps
sbb
jo
pop
push
push
push
mov
mov
push
pop
cmp
dec
push
aaa
add
jns
mov
movsb
add
or
fcompl
int
and
adc
arpl
and
xor
aam
fcoml
movsl
mov
pop
js
aas
mov
mov
stos
push
xchg
movsb
sbb
pushf
and
dec
push
jecxz
push
push
test
push
fildll
pop
push
sub
push
add
mov
in
fisubrs
or
inc
push
in
inc
rcl
pop
es
scas
xchg
or
fmuls
or
iret
dec
or
add
sbb
push
dec
and
sbb
pop
or
push
test
and
inc
rorb
mov
pop
mov
xchg
lret
enter
xchg
cmp
outsl
jmp
fcomps
sub
cltd
insl
loopne
sahf
and
call
xchg
shlb
adc
movsb
fwait
ret
add
dec
gs
adc
iret
rclb
insl
enter
xchg
inc
mov
mov
jb
mov
sbb
mov
sbb
or
out
pop
cmpsl
js
pop
shll
sbb
sub
out
sbb
or
sub
cwtl
xchg
sbb
into
sti
mov
mov
jbe
pop
cwtl
adc
subb
push
jnp
add
icebp
lret
pop
push
jae
subb
pop
ret
fs
sub
into
pushf
sub
adc
shlb
push
dec
es
je
lods
jl
test
sbb
mov
pusha
pop
push
jo
jge
roll
adc
stos
and
mov
movsb
mov
call
xchg
and
repnz
rol
cltd
sbb
ret
dec
call
pop
dec
cwtl
sub
stos
daa
and
and
inc
mov
push
xor
or
add
aas
dec
andl
pop
jmp
insb
sbb
call
xor
in
xchg
das
push
inc
cmp
nop
imul
xorb
jmp
rcll
das
fcompl
test
popa
and
mov
sbb
sub
popf
stc
call
insl
xor
xchg
rol
jne
daa
idivb
cmp
or
or
cmp
enter
les
inc
or
mov
lea
xlat
adc
les
xor
and
jmp
ret
and
sbb
stos
pop
xchg
pop
cmp
fcom
dec
push
mov
orl
sub
xor
mov
cmpb
ss
jb
sub
loope
call
cmp
xor
je
data16
sub
out
cmpsb
inc
pop
dec
mov
adc
mov
sbb
xor
ret
imul
and
pop
xor
cwtl
push
faddl
test
xor
dec
das
jo
and
sbb
into
out
push
sub
lea
sub
movsl
adc
push
sub
enter
jbe
sub
sbb
adc
or
mov
test
xor
into
dec
jno
out
xor
adc
xor
xchg
adc
push
sbb
leave
add
jl
sbb
mov
sbb
xor
movsl
stos
les
or
xchg
push
insl
mov
int
icebp
dec
sahf
popl
shlb
add
add
dec
sbb
xor
sti
popf
movsl
mov
or
inc
xchg
outsl
inc
mov
xor
mov
sahf
add
lcall
jno
daa
les
xchg
mov
inc
cmp
nop
sub
xchg
fwait
cmp
xor
cmp
xor
push
leave
test
sbb
and
test
leave
test
aas
xor
mov
rorb
sbb
push
add
cmp
add
mov
sub
insb
les
popa
jbe
xchg
addr16
mov
mov
lock
xor
and
sbb
out
fnstcw
and
dec
sahf
fnstsw
cmc
pushf
xchg
push
adc
mov
sbb
mov
sub
pusha
mov
sbbb
rorl
mov
dec
jns
pop
inc
sbb
andb
sub
inc
loopne
mov
lds
stos
inc
push
inc
sbb
pop
lods
outsb
cmp
movsb
outsb
aas
push
cmp
mov
push
cmp
mov
jmp
xorb
pop
test
loopne
mov
sti
stc
jne
mov
sub
xor
jae
cmpsb
cmpb
lock
push
jns
loopne
pusha
inc
sub
sahf
inc
inc
inc
js
test
cwtl
pop
repnz
inc
in
lods
fadd
sbb
rol
pop
mov
cmpsb
cmp
add
pop
popf
sub
enter
xchg
mov
inc
pop
nop
add
inc
mov
std
cmc
sahf
adcb
inc
push
add
or
add
push
xchg
les
adc
rcrl
gs
mov
mov
cmpsb
inc
inc
mov
jge
push
sti
mov
test
es
lods
mov
mov
and
mov
sbb
loop
cmp
ret
jne
and
inc
jo
ret
aas
aaa
addl
cmp
add
pop
jle
and
pushl
aaa
pushl
orl
dec
call
stos
aam
pusha
jge
mov
ljmp
sbb
mov
sub
rorb
and
pop
cs
dec
inc
jns
in
add
xchg
out
push
sti
adc
xchg
dec
jmp
cmp
sub
adc
xchg
mov
cli
shlb
int3
out
and
or
add
repz
or
in
xchg
dec
or
pop
sub
adc
xchg
or
movsl
sbb
inc
or
roll
dec
dec
sbb
fstl
cltd
mov
pushl
or
and
sbb
adc
mov
enter
pusha
movsb
shll
enter
add
adc
insl
pop
xchg
imul
sub
add
and
fucom
popa
sbb
adc
inc
mov
adc
pop
call
xor
imul
ss
and
and
call
mov
cmp
push
popa
call
test
rorl
pop
xor
call
arpl
and
and
sbb
pop
andl
fcompl
xchg
mov
sbb
enter
subl
sbb
repz
pushf
sbb
aaa
lds
jb
xor
push
mov
cwtl
test
ret
rcrb
jns
xchg
pushf
mov
dec
imul
sub
lea
test
insl
ljmp
or
or
jnp
xchg
sarl
ss
es
and
or
xchg
dec
mov
sarl
push
rclb
fisubl
jecxz
add
movsl
ja
mov
sarb
aad
repnz
add
lret
push
xor
mov
inc
pusha
and
xor
mov
enter
and
xor
stos
mov
xor
sbb
add
inc
and
push
bound
cmc
sub
xor
inc
xor
jb
add
leave
mov
and
bound
ss
pop
sub
leave
leave
and
aaa
mov
lds
std
cmp
and
mov
pop
call
pusha
mov
sub
or
fdivrs
cmp
dec
xchg
arpl
sbb
add
jae
imul
sbb
ret
hlt
sarl
fcoms
shll
add
nop
add
mov
hlt
xor
rcrl
xor
mov
fcompl
push
or
lea
outsl
dec
mov
push
or
xchg
sbb
push
pop
in
fwait
mov
lcall
push
adc
dec
pop
dec
xor
pop
add
mov
or
dec
jb
cmc
push
mov
or
subl
movsl
and
mov
or
xor
xchg
lret
and
inc
xchg
movsb
and
and
dec
fwait
mov
lea
push
js
mov
inc
pop
push
xor
cmpsb
and
sub
add
outsb
loope
fldl2t
sbb
sbb
mov
rcrl
push
movsl
and
fsubrs
mov
pusha
pop
pop
jecxz
shlb
push
int3
mov
daa
mov
cmp
adc
inc
cltd
mov
lret
lret
in
dec
andl
pop
out
mov
mov
add
pop
push
inc
inc
sub
sbb
or
pop
sbb
or
mov
adc
hlt
push
lret
or
xchg
int
into
sub
sbb
jecxz
inc
mov
test
js
or
mov
popf
jne
jp
xchg
jns
fisubrl
xchg
mov
sbb
lods
dec
mov
cltd
mov
cmpsb
push
hlt
xchg
dec
test
nop
or
inc
lods
push
sub
lds
mov
and
pop
mov
push
pop
test
insb
pop
mov
ss
cmp
clc
jae
arpl
hlt
jle
test
pop
or
ljmp
adc
cs
add
sbb
push
mov
data16
push
push
adc
mov
test
js
outsb
rorl
stos
call
add
xorl
das
mov
add
rcrb
outsl
pop
nop
add
je
dec
jmp
sbb
push
js
dec
xor
std
cwtl
in
icebp
push
lea
xchg
mov
in
loope
int3
int
in
test
test
pop
mov
inc
mov
fists
xchg
mov
push
xor
and
test
jbe
imul
loope
push
adc
lods
adc
cltd
inc
lcall
sub
sbb
jle
dec
nop
cmp
sub
push
jae
sbb
sbb
mov
adc
ret
das
mov
idivb
pop
push
and
pop
add
jne
fldl
in
pop
dec
jle
xor
out
cmpsb
dec
push
lods
jecxz
ss
or
gs
adc
sbb
cmp
lea
in
fdivrp
roll
cmpb
outsb
movsb
inc
call
in
in
sbb
jno
add
or
cmc
jmp
sbb
push
or
inc
jg
jmp
adc
pop
lret
cmovae
push
add
jl
mov
mov
push
sub
sub
sbb
mov
mov
cmp
inc
mov
and
inc
adc
out
add
scas
inc
xchg
cli
in
mov
lret
inc
add
mov
movzbl
or
pop
mov
inc
mov
push
iret
sahf
loope
add
push
adc
jnp
cwtl
pop
inc
push
adc
sbb
sbb
mov
mov
push
mov
je
and
jno
lods
pop
xor
push
cmpsl
dec
inc
and
push
or
js
mov
push
rcrb
cmc
adc
leave
filds
dec
jne
popf
adc
stos
lock
dec
xor
xor
xchg
add
adcb
movl
imul
add
sarb
sub
dec
mov
test
adc
xor
ja
xchg
or
dec
and
je
mov
inc
mov
stos
outsl
adc
sarl
adc
fdivl
fs
jmp
movsb
add
cmpl
add
vmwrite
les
loope
xor
movl
lcall
xchg
mov
add
cmp
push
xorb
cmp
dec
inc
fisubrl
cmp
mov
adc
jae
sbb
and
pop
add
imul
add
jo
pop
inc
push
pop
or
pop
adc
add
sbb
adc
and
rcrl
inc
cltd
or
xchg
insb
xchg
shrb
loop
mov
lock
or
jnp
add
lahf
xor
and
push
std
div
nop
pop
pop
mov
mov
in
inc
cmp
loop
jo
push
mov
mov
dec
sbb
nop
pop
add
into
inc
xor
push
sbb
mov
ret
movl
push
std
or
test
mov
punpckhwd
push
push
sbb
lea
repnz
add
add
adc
jmp
dec
pop
jo
dec
js
enter
lea
push
cld
or
fwait
mov
pop
add
and
jo
add
into
imul
movsl
cwtl
pop
int
mov
fistpl
sbb
xchg
sbb
rclb
push
and
mov
pop
inc
xor
ljmp
push
inc
jp
int
jge
cmp
mov
inc
inc
xchg
imul
dec
cmpsb
bound
add
cmpsl
pushf
mov
push
in
in
pop
adc
jp
jmp
mov
add
cmc
mov
subb
sub
mov
adc
jg
lock
aaa
pop
orl
movsl
ljmp
cmpsb
xor
incb
sbb
add
or
pop
or
rclb
fcompl
or
xor
inc
lods
and
fldl
mov
add
adcb
sbb
adc
inc
cmp
push
aam
add
cmp
mov
cld
mov
jne
mov
jecxz
mov
cmp
mov
std
pushl
or
or
je
push
inc
cmp
jns
enter
in
aas
sub
mov
inc
hlt
jne
push
ficoms
movsl
and
aas
test
pop
pop
xchg
popa
mov
xchg
je
daa
cmp
pop
xchg
sub
clc
adc
ret
mov
push
adc
popa
xchg
mov
add
pop
std
adc
enter
fadds
add
lock
pop
call
aas
addl
leave
cs
das
cld
pop
in
push
add
les
push
add
mov
xchg
aaa
dec
sub
sbbb
icebp
das
imul
mov
cmp
ret
jp
in
xchg
int3
sbb
add
or
insl
add
adcb
pop
inc
lcall
ss
adc
mov
inc
shlb
mov
push
mov
in
add
es
repnz
incb
add
rclb
xor
or
mov
sub
cld
rcrb
xor
xchg
sbb
ljmp
dec
popf
comiss
inc
xchg
pause
clc
ja
fs
and
sub
lock
inc
and
jns
adc
test
fcmovne
mov
inc
imul
andb
ret
cmp
mov
add
data16
dec
sub
sbbb
adc
push
jb
sub
add
outsb
cli
mov
mov
imul
or
int3
dec
loope
movsb
out
je
aas
xchg
add
sub
or
sub
fmull
leave
inc
repnz
sub
incb
and
push
mov
aas
pop
push
and
mov
shlb
xorb
in
pushf
movsb
push
je
test
pop
pop
mov
insb
lods
xor
imul
pop
push
mov
push
pop
das
jmp
outsl
std
pusha
mov
sub
mov
sbb
test
xchg
xchg
aas
jo
pop
cmc
mov
aaa
stos
and
adc
clc
subb
or
in
inc
ljmp
dec
mov
mov
sub
mov
les
test
and
stos
enter
inc
sub
sbb
push
lea
xor
pop
xchg
cmp
xor
cmp
ss
sub
push
inc
inc
adc
ljmp
inc
inc
adc
xchg
fcmove
loop
mov
add
sub
xchg
adcl
xor
jbe
sbb
mov
es
xor
es
push
push
mov
cmc
enter
int3
test
lret
and
mov
xor
and
xchg
or
cmp
pmaxsw
int
fisubrl
push
inc
or
mov
and
cmp
orl
pop
imul
mov
add
in
adc
daa
fimuls
add
pop
xlat
lahf
adc
cld
sub
adc
pop
lea
cmc
imul
and
insb
sub
inc
not
push
addb
inc
add
pusha
loopne
leave
xchg
cmpsl
jge
in
adc
mov
lea
movsl
add
movsl
out
sahf
loopne
xchg
push
push
inc
mov
or
pusha
xchg
dec
push
push
mov
test
xor
mov
sub
sub
dec
jne
add
mov
sar
push
stos
jg
imul
add
jo
add
frstor
jmp
sbb
insb
jbe
mov
mov
imul
orb
mov
add
cmp
jne
add
jnp
inc
dec
jp
ret
ret
add
pop
adc
and
and
scas
lret
mov
jo
inc
inc
xchg
cld
add
jb
stos
or
or
stc
or
in
loope
xchg
dec
mov
jle
cmp
jle
pushl
cmp
movsl
cwtl
pop
dec
test
mov
rorb
dec
mov
test
dec
mov
inc
ret
pushl
ret
add
add
push
mov
inc
push
dec
sbb
lds
icebp
and
add
push
or
test
jmp
fcmovnu
cmp
add
pushl
and
stc
mov
or
mov
mov
cli
lods
jb
cmp
jb
fbstp
adcb
push
inc
jne
pop
push
shrl
fidivl
or
jnp
rcr
mov
pushf
jecxz
dec
jmp
add
push
sub
jecxz
push
lahf
inc
sub
icebp
mov
mov
add
cmpb
in
jne
xchg
mov
out
pop
push
mov
xorb
dec
cltd
sub
mov
sub
mov
mov
cmp
sub
sub
in
dec
mov
xchg
push
icebp
lods
mov
es
aad
push
and
ret
mov
std
push
es
les
jnp
pushf
or
mov
push
mov
adcl
stos
jecxz
push
xchg
add
rcr
outsl
mov
add
push
je
je
js
xchg
add
xchg
mov
pop
and
and
fadd
in
test
dec
out
clc
add
or
aaa
dec
in
cmp
xor
sti
mov
fs
jmp
push
add
cmp
mov
and
leave
add
adc
mov
test
dec
cmp
push
sbb
xchg
mov
scas
sarb
mov
dec
shl
xchg
mov
xchg
aas
and
add
in
dec
mov
insb
cmp
fadds
sub
ret
add
test
cmp
mov
or
xor
lcall
pusha
and
sub
mov
fmull
es
outsb
adc
add
dec
mov
or
in
cmp
enter
das
add
cmpsb
cltd
and
popa
xchg
pushf
mov
data16
into
out
mov
push
sub
fcmovnu
mov
xchg
aaa
stc
mov
enter
sbbb
jmp
imulb
movzbw
mov
xchg
pop
adcb
or
add
cmpsb
stos
xor
sub
mov
mov
and
add
pop
sbb
iret
mov
jle
xchg
adc
add
add
mov
cmpsl
das
sub
or
call
push
rolb
ret
or
push
or
cmpsb
pushf
mov
ret
mov
test
inc
sub
aad
sub
sbb
adc
pushf
and
scas
jo
rclb
add
cs
push
xor
test
mov
sbb
les
pop
jo
dec
or
xchg
mov
popa
or
sub
fldl
jle
sub
inc
push
or
cmp
loope
inc
pushf
addl
out
cmp
jl
sub
or
pop
pop
mov
jns
cmp
test
imul
and
jbe
mov
je
xor
daa
mov
mov
loopne
in
pusha
inc
pushf
adc
mov
or
xchg
iret
and
add
xor
add
xor
movsl
adc
cmp
push
inc
mov
xorb
js
pushl
dec
sahf
add
nop
and
fsts
lock
adc
daa
ss
push
mov
add
add
inc
loope
lret
sbb
addr16
aas
sub
push
shlb
or
test
jo
icebp
add
orb
adc
jo
out
aam
lock
dec
add
cmp
sub
ror
mov
or
jne
jmp
pop
inc
divb
adc
pushf
repnz
and
inc
push
loopne
push
mov
sbb
jle
adc
jns
call
push
pop
mov
pop
push
lods
sbb
inc
xorl
clc
pusha
cmp
lods
inc
and
mov
incl
rorb
push
mov
pop
xor
pop
jmp
pop
pop
cmp
adc
sub
inc
testb
mov
sbb
stc
push
sbb
adc
pop
popf
cli
mov
cmpsl
and
loope
dec
loop
or
mov
popa
and
push
push
out
and
dec
pop
inc
lea
test
push
push
mov
push
lods
fsubrl
sub
xchg
cmp
into
add
sbb
iret
sub
sub
test
aas
xor
push
sbb
inc
pop
pop
pop
mov
push
enter
sbb
sub
xchg
addr16
cmp
and
lods
lret
in
push
mov
faddl
in
dec
inc
push
dec
loope
jge
dec
rol
fwait
mov
ja,pt
pop
das
subb
or
ss
push
aam
popa
xchg
stos
lods
mov
mov
jo
xor
add
adc
inc
nop
shl
call
rolb
pop
lcall
inc
pushf
adc
push
cld
dec
mov
or
and
and
jnp
lcall
sub
xchg
pusha
ljmp
lcall
les
lahf
orb
or
or
pusha
addb
jmp
sbb
call
aas
mov
dec
subl
roll
add
scas
xchg
xchg
pop
push
xor
mov
sbb
push
inc
push
cmp
mov
xor
movb
lea
movsl
test
jns
and
rcrb
cmpsb
add
arpl
sti
add
mov
dec
sub
add
cltd
jbe
fstpl
arpl
xchg
cltd
nop
out
and
rcrb
jo,pn
inc
sub
outsl
pop
add
in
mov
xor
sbb
sub
cwtl
jno
sub
dec
adc
aas
mov
xor
dec
pop
inc
dec
and
push
lea
push
or
pop
inc
or
add
sbb
xor
mov
cmp
mov
inc
adc
dec
cmpsb
dec
orb
in
popa
rclb
sbb
mov
push
loopne
aam
je
mov
and
push
movb
hlt
adc
mov
push
pop
cmpsb
xchg
dec
xchg
xchg
pop
inc
das
add
cwtl
mov
ficomps
push
cmpl
xchg
xchg
dec
jecxz
stos
in
push
pop
pop
sbb
scas
fldenv
ret
cwtl
mov
cmp
fiaddl
push
inc
fisubrs
cmp
fsubr
cmp
xchg
fistpl
xchg
push
add
mov
int
arpl
sbb
pushf
cmp
cmpb
aaa
mov
inc
mov
sbb
les
stc
pusha
inc
sbb
and
xor
jmp
fcmovne
xor
adc
mov
mov
mov
pop
test
sahf
jle
lea
cmpb
inc
mov
mov
mov
scas
push
cs
push
xor
pop
mov
movb
push
xchg
adc
clc
sub
cmp
pop
jl
pop
je
aam
push
push
jns
jnp
lock
mov
sbb
push
ficoml
cmp
mov
xor
int
aam
cmp
mov
ret
xchg
push
sbb
dec
or
mov
insb
pop
in
adc
jae
sub
add
lods
cltd
daa
xchg
stos
push
sti
or
jnp
add
push
xchg
pop
mov
out
popa
movsl
mov
test
hlt
sub
inc
ret
jge
mov
or
cmp
and
sbb
ss
and
or
repz
pop
inc
pop
pop
mov
cli
mov
test
cmp
push
imul
gs
fisubrs
js
or
mov
push
push
divl
iret
rolb
ljmp
pop
je
nop
xor
and
jmp
cmp
jne
xor
lods
inc
mov
inc
lret
out
stos
push
mov
stc
push
stc
jnp
or
sbb
orl
fwait
jbe
adc
adc
xor
cmp
aam
rcl
test
push
pop
sbb
mov
ret
xchg
lcall
push
or
lret
je
testl
ret
dec
nop
lret
mov
mov
enter
int3
dec
cld
test
cmpl
cmp
and
ja
or
inc
arpl
jg
and
rol
loop
lea
jmp
push
sub
push
into
inc
sub
test
mov
ja
lods
testb
into
mov
sbb
cli
data16
or
dec
gs
or
inc
add
xchg
btr
or
lcall
or
cltd
adc
sbb
sub
mov
cmp
mov
lods
cmpsl
das
and
jno
nop
repz
or
and
jbe
enter
and
add
lcall
lods
mov
mov
outsl
sbb
adc
inc
inc
mov
inc
xchg
mov
ljmp
cmpl
lods
xor
sbb
mov
push
adcb
inc
push
mov
push
or
jne
dec
dec
fcmovb
mov
mov
push
and
inc
mov
jl
cmp
scas
jae
inc
push
ja
movsb
push
push
int3
js
push
jecxz
repz
cltd
rol
negb
data16
xor
sar
mov
jmp
mov
add
dec
mov
jmp
call
std
cwtl
outsb
adc
fisubl
push
lea
test
inc
lock
imul
xchg
pop
and
rolb
mov
push
adc
add
inc
pop
xor
cmpsb
cmp
xor
xchg
lcall
jb
pop
push
push
xchg
nop
mov
xor
insb
shrd
adc
jmp
movsl
xchg
and
sub
pop
sbb
xchg
sub
dec
jl
addr16
xchg
mov
shll
jne
ja
or
push
dec
cmp
xadd
push
xchg
testb
aaa
xchg
sbb
push
dec
ljmp
or
sarb
mov
xor
leave
push
xchg
fimuls
push
cmp
mov
mov
dec
cld
movsb
cmp
loope
mov
cld
sbbw
clc
fucomip
adc
test
je
test
insl
cmp
mov
mov
mov
push
mov
add
push
xchg
mov
call
mov
or
or
adc
jecxz
dec
or
nop
popa
pop
iret
cmp
ss
or
cwtl
add
mov
push
and
mov
jo
movsl
hlt
rorb
ret
rorb
sbb
fidivrl
lret
int3
test
mov
add
sub
mov
sub
in
adc
or
into
jl
or
xor
int3
mov
icebp
lods
shrb
mov
jle
adc
sbb
test
sbb
and
pop
and
in
in
push
jecxz
sbb
fs
ljmp
sub
movl
outsl
pop
int
dec
jo
ret
sbb
xor
push
mov
sub
insb
mov
lahf
iret
into
iret
in
pusha
pop
pop
fistpl
cmp
je
jmp
cmpsl
and
xlat
sub
popa
fiaddl
adc
outsb
loop
pop
jle
inc
notl
push
mov
in
je
push
xchg
sub
inc
movsl
popa
or
dec
and
add
add
or
lret
inc
test
add
push
xor
add
jae
sbb
sub
hlt
and
jle
addl
arpl
ds
ja
or
push
mov
es
mov
mov
or
add
pop
adc
lods
icebp
in
loopne
inc
popa
pop
lea
dec
test
int
call
in
stos
push
or
pop
das
add
and
adc
sub
and
jbe
inc
es
lock
ret
filds
xor
xchg
add
push
lock
mov
test
jnp
xchg
ljmp
inc
jnp
jge
stos
push
loopne
push
mov
iret
add
into
mov
sbbb
loope
mov
jbe
inc
mov
or
insl
lock
es
roll
add
or
lcall
dec
push
or
mov
cwtl
call
xor
fsubl
call
mov
andb
xor
jmp
push
lahf
sbb
inc
xor
push
std
cmpl
inc
jb
jmp
loope
xchg
inc
xor
inc
rorl
test
decl
sub
push
sub
push
mov
dec
add
inc
test
dec
sti
or
mov
cwtl
xchg
cmpsb
pushf
mov
cwtl
cwtl
add
cli
leave
lock
sarb
sub
jg
cmp
pusha
mov
aad
pop
test
nop
sub
mov
adc
mov
outsb
mov
rcll
xor
add
adc
inc
xor
ret
shll
sub
and
int3
fst
push
jno
testl
loope
js
cld
pusha
inc
dec
shr
pop
add
dec
ret
fistpl
fdivs
arpl
add
xlat
fldcw
xor
add
cld
ds
jb
sbb
testl
add
mov
adc
or
ljmp
pop
jo
xchg
mov
xchg
out
push
idivb
add
mov
gs
sub
jo
imul
rorb
adc
jne
ljmp
dec
adc
inc
xor
fadds
xor
adc
shlb
out
cmp
les
fcompl
loop
cld
movb
add
xchg
xchg
or
push
nopl
out
pop
int3
test
sbb
xlat
data16
adc
jo
mov
je
shll
icebp
dec
pop
inc
push
xor
jns
mov
nop
pop
jmp
cmp
cwtl
jb
bnd
or
and
ret
loopne
sub
insb
arpl
mov
inc
dec
adc
xchg
jbe
add
pop
or
sahf
mov
inc
add
jmp
push
stos
cmp
inc
push
xor
push
dec
mov
pushf
enter
sbb
mov
loop
lahf
push
jecxz
mov
pop
mov
popa
rclb
mov
dec
inc
push
pusha
movsl
jp
sbb
push
dec
or
xor
ret
shrl
outsb
mov
test
or
cmpsb
adc
aas
mov
inc
adc
andl
lea
aaa
dec
popf
mov
mov
pop
inc
adc
addb
sbb
mulb
sbb
and
push
repnz
mov
sub
ljmp
nop
loopne
sbb
mov
test
sbbl
mov
inc
push
mov
popf
fs
test
cltd
jbe
cmp
jb
push
adc
push
call
push
cmp
and
inc
loop
data16
insb
mov
ret
sub
lahf
push
les
push
clc
inc
push
mov
cmp
add
sarl
push
jle
pusha
mov
mov
jle
add
pop
and
es
into
pusha
cmp
idivl
push
cmp
jbe
nop
test
rcrb
out
test
sbb
add
out
or
xchg
xchg
and
adcl
sub
lahf
pusha
jmp
lea
sbb
push
icebp
aad
test
sbb
imul
stos
push
in
push
sub
cmp
pushw
push
add
push
out
adc
popf
mov
addb
jl
out
add
insb
lock
push
test
or
adc
outsl
aam
ja
mov
mov
mov
in
push
and
aam
cmp
push
pop
lret
pusha
push
mov
mov
faddp
adc
insl
pop
inc
xchg
movsb
lret
and
fmuls
shlb
inc
and
cltd
ror
push
xor
jmp
cmp
adc
lock
shlb
push
mov
std
ja
loop
lahf
popa
xchg
in
repnz
pop
inc
lock
inc
inc
rcl
mov
fcoms
shrb
or
pop
push
imul
add
fdivp
xchg
push
mov
je
inc
xchg
xlat
or
jae
add
push
jae
mov
add
push
in
je
inc
or
push
or
fistpll
and
jle
cmp
push
push
aas
test
cmp
inc
sbb
inc
call
test
sahf
enter
add
fstpt
clc
sub
cmp
push
pop
mov
cmpsb
xchg
cmp
je
out
push
or
add
lret
test
cwtl
cmp
and
sub
adc
faddl
add
xor
in
enter
mov
ss
push
call
sub
jmp
xor
call
jl
inc
add
mov
xchg
je
or
xor
mov
push
jo
pop
add
and
icebp
and
adc
ja
xorb
loopne
mov
shlb
dec
sbb
js
or
call
mov
add
pop
int
stc
jl
or
pop
lcall
fucomip
imull
inc
out
mov
mov
mov
pop
outsb
test
orb
push
jns
xchg
leave
jnp
mov
movsb
add
xchg
add
and
fstps
mov
cmp
dec
push
sbb
addb
jbe
fstpl
pop
sub
pusha
sub
jo
je
mov
out
lods
push
cli
or
inc
and
add
shll
fs
insb
jo
js
mov
test
fsubr
mov
aas
andl
cmpsl
cmp
sub
pop
fwait
popf
dec
test
inc
mov
add
pop
scas
sub
and
mov
aaa
mov
or
gs
add
loopne
add
ficoms
loopne
pushf
pushl
pop
loope
sub
add
and
sbb
add
and
and
xor
add
and
pusha
push
cmp
dec
jae
and
ret
inc
out
add
xor
xor
adc
xor
in
sbb
pop
sbb
adc
push
clc
adc
and
and
jo
xchg
fadds
push
xor
shll
ljmp
dec
add
sbb
fbstp
xor
bound
add
xor
popa
add
jo
adc
fbstp
jmp
cmp
in
mov
sbb
scas
push
xor
pushf
jne
sbb
ds
outsl
ror
test
sub
jg
jbe
push
ja
arpl
inc
mov
inc
or
shll
mov
fldt
shr
mov
push
inc
xor
dec
jae
or
andb
lea
mov
out
adc
xchg
mov
int
jne
sbb
shl
mov
mov
jo
cli
insb
sbb
jb
outsb
inc
ret
pop
mov
inc
jo,pn
pop
decl
push
rol
ljmp
add
xchg
add
cmpl
pop
jne
lea
loope
and
add
jno
adc
jl
push
adc
imul
sub
xor
adc
ret
sbb
cmpsl
jg
mov
out
cmp
adc
imul
pop
or
add
push
sbb
in
stc
lock
ficomps
out
add
sub
stc
or
push
ljmp
clc
sub
or
out
inc
xchg
out
push
push
mov
ret
insl
ret
dec
test
push
adc
push
sub
mov
sahf
andb
stc
lock
sbb
clc
push
stc
je
icebp
sti
mov
adc
xor
imul
in
inc
lahf
sub
arpl
pushf
jne
jnp
or
push
add
cs
and
iret
js
xchg
cmp
xchg
je
ret
adc
mov
push
mov
ret
pop
popf
mov
test
jne
lret
clc
mov
push
movsl
cmp
or
mov
icebp
ljmp
add
repz
dec
xchg
sbb
mov
shr
and
pop
dec
or
inc
or
insb
jno
icebp
insb
and
add
dec
add
dec
add
inc
adc
inc
mov
adc
dec
mov
arpl
sub
mov
pop
jecxz
mov
test
or
enter
xorb
and
jp
adcb
add
sub
sub
push
pusha
push
adcl
cmpl
and
pop
loope
mov
adc
or
push
dec
sub
popa
or
pop
mov
inc
addr16
cmp
xchg
and
loope
add
sbb
lods
int3
push
pushf
add
nop
gs
je
fs
or
inc
push
sbb
insb
decb
xchg
xchg
push
mov
jae
jp
iret
movb
xorl
mov
ss
testl
je
cmp
je
mulb
aam
and
fsub
cmpl
cmp
je
xor
inc
inc
pop
dec
lcall
dec
sti
push
sub
inc
pop
xchg
or
lock
lea
add
or
push
add
add
lock
adc
leave
enter
cld
lock
cmp
addb
out
adcl
mov
adc
sbb
popf
add
dec
ss
mov
pop
push
movsl
push
jbe
pop
test
clc
test
into
add
push
mov
pop
push
mov
lods
cmpps
cld
adc
mov
cs
pusha
jne
inc
xchg
xchg
hlt
mov
inc
es
js
shlb
mov
cwtl
jl
testb
mov
inc
sub
add
adc
movsl
xor
fstpt
dec
out
orl
test
ljmp
sbb
mov
inc
std
jbe
add
test
add
adc
int3
xor
dec
in
ret
push
sbb
push
lods
lds
adc
and
clc
inc
push
jge
jne
pop
pop
xchg
dec
xchg
or
cmp
aaa
mov
cs
mov
xchg
popa
push
addr16
push
mov
mov
aas
jne
cmp
fs
or
xchg
fsubs
cltd
je
out
scas
lods
xchg
stos
or
xchg
mov
pop
mov
int
fidivrs
inc
movsb
das
clc
outsb
mov
mov
fwait
jns
and
pop
or
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
ret
sub
add
pop
cmp
nop
lea
lret
push
or
xor
aad
xor
lods
add
adc
pushf
lret
sub
fcmovu
xchg
or
and
jae
out
insb
pop
add
inc
add
shl
push
test
rolb
or
inc
aam
pop
dec
outsl
vmaxsd
and
sti
mov
imul
jbe
ss
push
adc
ja
test
std
mov
mov
out
push
pop
imul
test
je,pt
push
je
inc
xor
loope
hlt
pop
scas
dec
add
fwait
sbb
cmp
je
aaa
xor
into
les
cmp
adc
test
std
rorb
lret
push
mov
push
adc
test
pusha
xor
icebp
mov
test
inc
pusha
add
add
pop
pusha
pop
mov
inc
ljmp
sarb
xchg
adc
and
and
or
inc
or
leave
rorl
push
or
pop
ret
loope
or
push
pop
into
and
ret
xchg
enter
in
lds
in
cmp
fisttpll
daa
mov
jns
push
xchg
lret
bound
clc
aad
verw
sbb
push
movsb
and
lea
pop
cs
dec
mov
mov
pusha
cmp
add
or
test
xor
xor
or
fsubr
and
add
mov
sti
cmp
test
push
sbb
popa
mov
aaa
ret
mov
sub
mov
jo
lret
test
add
sbb
lsl
mov
pop
mov
sarl
scas
leave
rcr
fdivs
mov
sub
mov
xlat
aam
sbb
mov
loopne
push
lahf
shl
out
jo
push
cli
fisubl
xchg
sahf
cmp
push
xchg
mov
popa
cwtl
bound
fldt
mov
orl
sub
pop
add
mov
mov
jmp
push
rolb
and
aas
mov
cli
jmp
jne
imull
imul
mov
push
orl
repz
xchg
das
mov
ds
adc
cmp
push
pop
popa
jmp
add
push
push
fbld
push
sbb
lods
mov
jle
stc
push
add
rol
push
push
out
pop
adc
stc
js
rclb
inc
lods
or
xor
jp
jmp
adc
cmp
loope
inc
sub
add
fisubrl
cmp
add
cmp
test
pop
stos
imul
mov
inc
xor
jno
sbbb
push
mov
xchg
jmp
cmpsb
xorl
pop
xchg
push
sbb
add
push
js
add
xor
push
pop
data16
test
in
push
pop
sub
mov
sahf
imul
dec
inc
test
cld
ja
adc
inc
xchg
decl
inc
cmp
fnstenv
mov
sarb
mov
inc
scas
lods
pop
mov
ret
mov
ja
mov
shr
and
pop
leave
push
rolb
and
xor
fiadds
or
xor
mov
insl
cld
or
in
or
jo
push
and
jb,pn
and
dec
xchg
fimuls
add
push
mov
dec
or
push
add
add
repz
std
push
and
fbld
xchg
data16
sub
sbb
jb
sub
xchg
fildll
push
in
neg
sbb
push
cmp
ret
cltd
dec
push
xor
les
and
jb
shll
fstpl
ret
inc
or
inc
loope
add
lods
inc
cmp
push
xchg
mov
mov
mov
daa
and
inc
add
and
pop
mov
insb
xor
aas
or
sahf
pop
inc
xchg
dec
jl
andl
xor
add
xor
loop
scas
jno
int
jo
and
push
sbb
dec
or
int
push
pop
push
cwtl
loop
push
js
aad
sbb
and
mov
ss
push
inc
adc
fmull
jmp
mov
pop
add
pop
pop
pop
pop
popa
cmp
jge
push
inc
idivb
or
inc
and
inc
lock
push
sarb
jl
andl
pop
xchg
inc
pop
adc
in
je
jl
and
popf
xor
outsb
inc
or
pop
jle
mov
mov
sub
mov
mov
push
xchg
dec
outsb
mov
xchg
xor
rcll
cmp
rorb
xor
and
adc
aad
xchg
inc
cmp
mov
xchg
imul
inc
mov
add
add
push
mov
push
xor
lods
sub
lock
bnd
dec
cmp
adc
xor
jl
call
add
dec
cmpsl
adc
push
in
roll
push
outsl
shr
add
mov
inc
adc
mov
jecxz
inc
push
inc
adc
xchg
call
rolb
and
xchg
jp
jmp
pop
ret
jmp
pop
push
es
jecxz
mov
in
push
xchg
sbb
mov
lock
test
aas
sbb
add
repz
add
jne
mov
xor
aas
lock
lods
add
sbb
testb
mov
sbb
or
mov
jle
daa
rcll
push
sbb
xor
and
xor
xchg
push
sbb
popa
lods
push
dec
mov
js
loopne
and
std
ss
mov
mov
push
adc
dec
lret
int
mov
mov
cwtl
jl
fistps
pushf
mov
fldt
xor
adcb
xchg
mov
mov
and
cmp
popf
add
mov
popf
shll
sub
add
sbb
add
ja
sbb
mov
mov
ret
jp
sbbl
je
xor
mov
jne
rol
filds
fldl
lods
cmp
jne
shr
pop
mov
mov
mov
in
pop
mov
cmp
addr16
mov
and
mov
or
xor
ret
mov
pop
nop
jmp
and
inc
or
or
es
lods
ret
sbb
push
pushf
xchg
inc
xlat
adc
fcmovbe
or
aad
test
mov
mov
add
mov
inc
push
mov
fsubrl
mov
pop
dec
or
mov
or
js
std
mov
pop
andb
test
mov
ret
jmp
pop
dec
fistl
int3
popf
inc
sbb
dec
cmp
fwait
jmp
nop
push
push
rorb
push
out
push
mov
subb
lds
cwtl
inc
push
jp
sub
dec
clc
loop
je
mov
imul
and
xor
pop
push
lcall
sbbl
cs
xor
addr16
xor
mov
aad
add
into
add
add
cmp
add
out
and
lods
xor
inc
xchg
nop
add
imul
adcb
push
dec
fiaddl
cmp
gs
push
jns
movsb
adc
shlb
incb
daa
add
or
inc
mov
sub
pusha
mov
xchg
out
shrb
ss
push
or
jmp
xor
cmpsb
xchg
inc
jle
clc
sti
fists
inc
sbb
or
or
sbb
pop
hlt
inc
into
sti
cmpxchg
inc
xchg
or
inc
adc
mov
dec
mov
mov
add
inc
pop
ret
or
fdivrl
xor
cmp
in
add
in
cmp
je
mov
sbb
mov
push
jo
mov
or
jae
push
xor
add
or
dec
adc
ljmp
dec
jbe
lods
sarb
mov
data16
idivl
sub
loope
mov
test
pop
dec
insb
add
jo
xor
add
cmp
shlb
or
int
jge
jge
adc
sbb
mov
rcrb
sub
cmp
jne
inc
pop
dec
out
rorb
cli
mov
and
mov
js
and
jle
jb
loop
shlb
int3
jge
nop
andb
push
rcl
sahf
or
and
aas
loopne
adc
fdivrs
in
pop
adc
movsb
jae
fldt
cli
push
cld
add
movb
inc
in
jg
iret
add
movl
shr
inc
add
fsts
jno
das
push
clc
dec
or
cmp
inc
sbb
pop
rcll
push
dec
mov
outsl
shll
stos
pusha
insb
std
lret
sbb
mov
arpl
mov
hlt
or
mul
scas
leave
loopne
int
sub
mov
movb
xchg
mov
push
cmpsl
hlt
sbb
fnstcw
add
sbb
lock
cmp
sbb
pop
adc
push
icebp
mov
sub
adc
jns
mov
movl
push
push
lahf
jne
jge
lock
mov
jmp
lcall
cld
adc
lcall
pusha
and
push
sbb
pusha
shl
adc
mov
rclb
inc
dec
scas
in
bound
and
or
pop
cld
jecxz
adc
in
jbe
jmp
sbb
add
movsl
adc
push
insb
sbb
pop
xor
ud0
lret
inc
adc
pusha
testb
movb
cli
mov
lds
push
sub
je
add
es
rclb
pop
dec
sub
add
test
add
mov
cmp
rcrl
mov
pop
mov
add
push
lea
enter
mov
adc
push
xor
add
jbe
mov
ss
xor
cmp
add
jmp
cmp
jg
mov
and
dec
in
fidivs
cwtl
sbb
aas
daa
add
lea
add
jo
ja
add
lods
mov
loope
adc
cld
sbb
add
sbbl
into
cmpb
leave
adc
pop
orl
test
mov
add
mov
or
xchg
jne
ficoml
inc
cmp
mov
inc
popf
push
adc
leave
fwait
popa
jmp
lods
dec
sbb
popa
pop
xor
lea
mov
or
add
push
movsl
lret
arpl
jge
mov
dec
decl
push
push
adc
xchg
cmp
or
push
xor
or
cmp
mov
ret
jle
or
sub
nop
sub
inc
fcomps
xor
mov
aad
xchg
mov
inc
fsubrl
pop
and
lock
nop
bound
push
in
loopne
pop
testl
cmp
ret
inc
and
xor
adc
sub
dec
fsubs
inc
mov
dec
or
dec
or
dec
sbb
mov
xor
add
or
pop
sub
sub
sbb
cmp
xor
cmp
cmc
jle
jmp
or
nop
dec
sub
dec
sbb
mov
jp
into
addb
mov
into
rorl
or
ljmp
add
clc
jge
cltd
shl
inc
int3
xor
push
clc
testl
adcl
fbld
aaa
push
hlt
add
xor
inc
inc
xchg
dec
lcall
and
andb
insl
jne
ds
es
xchg
mov
enter
push
jae
push
push
inc
pop
jp
es
cltd
in
fsubrl
jl
movl
jb
push
push
or
or
add
dec
int3
xor
in
fsubl
inc
xchg
test
dec
imul
push
sbb
dec
or
inc
bound
gs
inc
filds
jb
idivl
pop
pinsrw
mov
jae
fcmove
xor
mov
push
shlb
mov
push
push
and
mov
sub
arpl
pop
lods
push
or
lods
xlat
add
imul
mov
adc
dec
sub
mov
in
mov
adc
test
pop
add
mov
sti
sub
ret
and
je
mov
jno
push
aad
xor
sub
dec
sub
test
and
cmc
add
sub
in
mov
dec
imul
fstps
pop
xchg
mov
or
scas
jo
inc
push
push
das
leave
ds
into
nop
pop
les
icebp
xchg
add
cld
push
xor
in
cmp
pop
add
add
jle
xor
loopne
add
and
cmp
sbb
into
pop
les
lods
sub
mov
mov
cmpsb
jne
ret
outsl
ja
hlt
fs
add
cmp
out
sti
dec
ja
je
or
je
or
sub
xchg
pop
adc
adc
and
hlt
xchg
popf
push
or
ds
dec
cmp
xchg
test
sbb
jo
orl
ss
cs
sti
push
lcall
adc
adc
shlb
push
cmp
cmp
and
add
scas
sub
mov
jbe
call
xchg
xchg
clc
push
in
mov
or
or
and
inc
cs
rorl
dec
movsl
mov
gs
add
je
cmp
ret
push
dec
rorl
adc
add
sbb
adcb
rcrb
xor
push
add
icebp
jbe
fimull
lret
add
les
push
and
or
lock
xor
test
sub
pop
icebp
sub
add
xlat
push
arpl
outsb
add
add
nop
adc
add
add
mov
pop
daa
or
fs
or
push
adc
inc
xchg
add
movsb
rolb
sbb
test
and
mov
push
xchg
mov
cmp
cmpb
dec
sbb
add
int3
sub
push
inc
out
fsubs
and
jo
lods
jp
or
sub
jno
mov
pop
rcrb
push
inc
push
and
cmp
shll
sbb
adc
fdivrl
notl
add
pop
fwait
and
testb
rorl
push
sbb
mov
inc
push
inc
push
push
push
lcall
push
pop
ret
fmuls
call
int3
mov
xor
aam
push
dec
inc
cmp
fcomp
repnz
notb
addr16
enter
testb
cwtl
inc
idivb
push
lret
daa
mov
jmp
loopne
icebp
addl
in
jge
jno
mov
xchg
sbb
shlb
push
mov
nop
xchg
mov
jmp
add
repz
lahf
aas
add
les
sbb
adc
or
push
inc
leave
jecxz
push
enter
mov
pop
xchg
and
fs
cmpsb
mov
ret
ret
add
xchg
mov
push
lret
leave
cwtl
cmp
cmp
ret
sahf
dec
xor
sbb
clc
fildl
push
imul
mov
xor
loopne
pop
subb
loope
pop
jge
xchg
push
outsb
loopne
ja
shlb
mov
xchg
xor
lcall
xchg
add
aam
jb
push
xchg
aam
fmull
sbb
jb
cmp
push
nop
cmpsl
leave
xor
adc
fidivrs
lods
mov
mov
and
imul
fs
pushf
lcall
mov
cmp
shll
add
clc
inc
shr
rorb
or
adc
ret
xor
sub
mov
push
adc
mov
sbb
xchg
jl,pt
push
leave
mov
fstpt
sbb
mov
mov
negl
dec
fisubl
mov
sbb
sbb
orb
add
sbbb
and
shlb
mov
ret
mov
sbb
jmp
xchg
mov
in
jle
sbb
mov
int
rcrb
sar
test
dec
hlt
enter
cmp
push
xor
pop
mov
insb
adc
pusha
mov
xor
cmp
les
inc
cs
lea
fildl
mov
daa
pop
inc
orb
movl
xor
int3
inc
mov
add
or
or
faddl
push
lahf
dec
in
sub
inc
leave
xor
add
pop
loope
pusha
xor
cwtl
mov
pop
mov
jo
xchg
or
daa
orb
pop
sub
and
cmpsl
je
and
test
mov
mov
loope
mov
insb
inc
add
aas
das
mov
or
mov
add
icebp
xor
pop
adc
sbb
out
and
popf
and
ljmp
pop
push
add
or
push
int3
cmc
lret
aam
fsubrs
mov
pushf
loope
imul
xorb
or
add
lcall
aas
xor
sbb
cld
aam
test
dec
in
pop
addl
inc
call
xor
cmp
incl
dec
ds
fwait
mov
or
and
mov
and
test
fbstp
push
pop
add
or
jmp
mov
jle
mov
lods
push
or
cmp
pop
ret
popa
mov
fs
jo
or
sbb
or
sbb
or
or
mov
push
and
ss
add
sbb
nopl
lock
inc
arpl
push
xor
jl
iret
shr
daa
test
icebp
push
icebp
or
add
mov
shrb
push
pop
mov
in
outsb
test
pop
js
and
cli
mov
movsb
dec
in
jae
in
nop
pusha
pop
push
xorb
call
jne
or
mov
adc
dec
cmp
pop
add
or
in
iret
imul
call
inc
out
or
adc
pop
mov
jg
sti
je
inc
or
daa
adc
push
bound
dec
add
dec
insl
add
cmpl
je
push
sbb
mov
shl
xchg
int3
insb
insl
mov
lock
sub
movsb
dec
sbb
inc
adc
lds
les
call
ljmp
mov
xor
sub
xor
sarb
adc
add
adc
fcomps
mov
or
rol
lock
mov
add
jl
ds
xchg
sbb
xchg
mov
mov
out
cmp
add
mov
xchg
jmp
inc
pop
mov
cwtl
and
adc
sbb
testb
xor
mov
inc
pop
in
xor
mov
dec
mov
lret
jnp
xor
nop
jecxz
sbb
push
cmpsb
push
lock
xchg
and
mov
outsb
lcall
fsubl
mov
mov
lret
inc
sub
ror
push
imul
aam
popf
xor
andb
out
es
mov
push
test
jb
xchg
mov
add
imulb
pop
loopne
push
dec
lock
test
xchg
cli
adc
sti
sarb
sbb
subb
and
xor
push
out
xor
rcl
ror
je
jnp
aaa
stos
xorl
xor
add
lods
out
cmp
je
inc
mov
cmp
hlt
je
je
pop
loop
aas
cltd
mov
pushf
out
add
add
push
or
pushw
push
fs
roll
imul
stos
stc
fs
lret
cmp
fwait
orl
push
mov
shrb
xchg
push
in
imul
adc
lds
add
fwait
add
sar
and
add
adcb
or
dec
out
outsb
jg
dec
dec
hlt
add
pop
je
or
push
cmp
inc
faddl
mov
add
mov
jmp
mov
pusha
adc
mov
mov
mov
pop
icebp
add
dec
sbb
leave
mov
rorl
mov
inc
out
fidivrs
or
sarb
mov
scas
xor
xor
adc
and
shlb
inc
push
add
xor
fildll
push
daa
or
lea
sbb
add
or
in
out
orb
popa
roll
mov
jmp
mov
add
test
or
dec
aaa
cmpb
addr16
lahf
sub
push
movsbl
xchg
adc
add
add
mov
cmp
push
adc
xor
adc
orb
push
sbb
sbb
enter
sbb
daa
and
mov
xor
mov
add
xchg
xor
push
or
xor
and
stc
mov
je
sbb
mov
add
frndint
fwait
outsl
jg
mov
ja
and
divl
jle
mov
dec
xor
cmp
xchg
xchg
and
ss
sbb
pop
fldenv
push
leave
rcll
xchg
aas
sub
adc
gs
cmp
popf
and
cmp
inc
ret
and
sub
pop
or
jno
fwait
inc
xchg
hlt
enter
testl
roll
inc
or
lret
out
daa
and
std
rorb
orb
sbb
jg
adc
mov
inc
push
bswap
rorb
add
push
sbb
loopne
scas
repz
add
push
lcall
mov
mov
rorb
jns
mov
pushf
enter
mov
ret
cwtl
sub
cmp
call
inc
js
adc
inc
outsb
je
jae
lds
adc
pop
lcall
push
loopne
lret
sub
push
and
rcl
inc
scas
push
rorl
sbb
lock
arpl
adc
dec
ret
mov
mov
orl
dec
lods
bound
imul
or
mov
iret
fbstp
fadds
cmp
cli
sahf
add
inc
int3
jle
ret
dec
aaa
nopl
or
test
lahf
dec
add
push
sarb
jge
jne
push
loope
mov
jo
cmp
fcompl
nop
or
push
inc
or
inc
or
add
js
add
and
pop
cmp
cmp
scas
les
cmc
scas
xchg
push
jl
cmp
jae
decl
and
or
imull
shl
pop
cmp
jne
fmuls
outsb
jg
stos
pop
dec
dec
sub
sub
lcall
dec
jp
lret
pop
mov
les
add
clc
bswap
inc
jmp
push
pusha
jo
cmc
push
test
outsb
push
xchg
pop
sbb
faddl
lds
jl
sub
shr
xor
add
call
sahf
imul
leave
or
lods
jge
out
jge
mov
or
mov
pop
jmp
push
pop
push
xchg
pcmpgtb
push
push
adc
hlt
xchg
leave
fstps
test
xor
or
sbbl
jecxz
imul
add
or
pop
mov
mov
clc
add
pop
add
int3
or
and
sbb
or
and
pop
mov
stos
mov
movsl
mov
push
and
fcompl
mov
cld
push
adc
call
addr16
push
lret
stc
faddl
push
outsb
dec
dec
jmp
push
xor
gs
jg
xchg
aad
shrl
dec
push
es
mov
and
pop
pop
or
mov
sti
xchg
xor
jo
jns
sarb
push
add
test
shlb
push
adc
aam
mov
pop
add
outsb
and
dec
idiv
add
shll
push
leave
push
xor
mov
add
lret
enter
push
adc
dec
nop
in
fcoml
cmp
add
arpl
sbb
cmp
les
or
sbbb
inc
inc
sbb
pop
dec
mov
repnz
pop
jg
movsb
call
push
and
jb
cmp
or
push
push
or
loope
outsl
or
inc
push
dec
stc
add
jge
push
roll
cmp
jo
jge
cmp
jbe
mov
cmp
push
inc
lock
jo
fcoms
and
push
jg
mov
leave
inc
and
cmp
mov
pop
sbb
or
mov
push
lea
jae
sub
in
push
inc
mov
out
push
in
sbb
jns
and
inc
or
pop
xchg
adc
cmpl
add
inc
sub
call
mov
dec
push
dec
inc
push
add
mov
call
dec
aaa
cmp
push
lods
leave
inc
add
dec
jg
mov
add
je
mov
dec
call
cmp
ljmp
adc
lahf
pop
mov
cmp
add
add
testl
inc
adc
mov
dec
in
cmpsb
lret
push
jmp
sbb
xor
mov
or
or
mov
cmp
adc
mov
andl
push
loopne
jo
dec
mov
pusha
mov
xchg
add
xor
mov
or
movsl
cmp
inc
or
lahf
or
enter
adc
add
icebp
dec
dec
push
jnp
jo
jecxz
popa
or
dec
leave
mov
jmp
inc
adc
xchg
aas
adc
push
adc
push
add
stos
pop
or
dec
lods
xor
mov
xor
add
ds
mov
sub
mov
in
pusha
sub
insb
fisttps
lea
addr16
into
add
or
dec
jo
jl
shr
ret
lea
mull
imul
sbb
lods
xchg
xor
mov
adc
adc
push
sete
shlb
xorl
add
pop
push
out
fnstenv
clc
add
mov
or
pop
or
fcoml
cld
dec
rolb
in
dec
scas
aam
xchg
mov
dec
sub
push
mov
dec
add
sarl
and
mov
mov
mov
rclb
inc
and
data16
rclb
test
and
push
push
cltd
bound
lcall
xchg
add
inc
sbb
adc
push
pop
mov
dec
mov
pop
nop
sub
sbb
popf
test
or
loopne
cmpl
cmp
dec
pusha
dec
cmp
cmp
ss
orb
mov
and
mov
into
and
push
sbb
mov
jo
sbb
rcr
mov
add
dec
xchg
sub
mov
add
lret
push
push
adc
js
jg
pop
sbb
push
xor
xor
xor
push
push
sbb
pop
add
ss
lock
dec
mov
or
je
enter
inc
mov
or
mov
ret
mov
jp
mov
divl
ja
and
outsb
push
clc
rorl
pop
cmp
pop
mov
ljmp
cld
mov
loop
call
jecxz
sub
mov
xlat
inc
jno
inc
xchg
repz
inc
and
jbe
sub
lea
ret
mov
push
movaps
cmp
cld
or
mov
dec
and
rorl
dec
pop
rcrl
test
or
adc
sbb
push
and
cmp
bound
fmuls
push
xchg
mov
push
mov
notb
dec
movsl
xor
aaa
lock
inc
je
jbe
jge
adc
inc
iret
and
mov
jp
jecxz
shrb
cltd
xor
lods
xor
push
and
xor
lods
mov
out
sub
test
push
insb
aaa
nop
sti
jl
test
mov
cmp
adc
enter
ret
mov
stos
or
or
push
mov
jge
and
shr
not
xchg
push
adc
sbb
pop
push
mov
out
add
push
shll
pushf
or
lret
pop
mov
in
dec
gs
xchg
or
inc
imul
cli
xchg
lods
or
lret
lret
lret
xor
addr16
lret
inc
in
clc
dec
sbb
dec
insb
jmp
and
test
dec
popf
add
bound
loope
add
jge
mov
inc
add
loope
push
sub
inc
movsl
sub
cmpsb
sub
lret
mov
fs
decl
push
cmp
jno
stos
or
imul
sub
and
xchg
adc
mov
pop
inc
jg
or
add
pop
inc
cwtl
rclb
js
or
nop
sbb
fidivrl
cmp
or
out
jbe
jns
adc
mov
inc
push
cmc
add
and
adc
cwtl
add
sbb
jae
subb
insl
movb
jns
and
adc
sbb
lret
xor
loopne
int3
cmp
shll
imul
call
inc
popa
cmp
imull
xchg
mov
push
ret
outsl
dec
mov
sar
ja
cmp
cmp
push
inc
add
cmp
add
adc
cmp
pop
ret
lods
mov
dec
cmpsb
sahf
testb
adc
adc
je
dec
jno
xor
loopne
sub
push
popf
out
pop
enter
pop
cmp
adcl
popa
test
mov
fisttps
sti
rep
bound
jbe
mov
sub
jmp
sub
jae
add
shlb
add
ret
inc
sbb
andl
mov
adc
out
movsb
mov
push
hlt
and
fistps
jae
xlat
push
and
push
mov
pop
adc
adc
push
or
mov
pop
data16
inc
sub
xchg
mov
aad
adc
inc
sbb
cmp
xorb
das
xor
cmp
fsts
testb
jbe
ret
in
add
mov
and
and
or
cmp
es
fdivs
scas
sub
rolb
loope
andl
xchg
push
nop
std
push
mov
lea
fs
add
mov
push
imul
inc
cmp
pop
enter
xchg
andb
mov
fildl
xor
xchg
ret
mov
jl
inc
lock
add
shlb
cld
sub
or
jmp
movsl
add
pop
repnz
xchg
lods
xor
pop
mov
push
fadds
test
add
xchg
shl
into
add
lret
loop
mov
add
lret
jnp
pop
adc
push
push
cmp
dec
rcll
dec
aam
or
push
rolb
call
rolb
adc
mov
orb
mov
pop
cmp
xchg
lods
das
ret
mov
aas
jl
data16
movsb
adc
jno
pushl
sub
push
mov
or
push
sbb
pop
push
xlat
mov
adc
arpl
jns
push
and
add
xchg
js
cmp
inc
cltd
adc
js
dec
push
lock
xor
cmp
inc
push
fcoms
loopne
mov
lods
xorl
add
clc
xor
rolb
inc
sbb
or
lods
inc
mov
popa
fs
push
ljmp
xor
inc
or
sbb
hlt
mov
jb
sub
xor
or
loope
and
pop
cltd
out
adc
jp
mov
aad
mov
dec
push
icebp
jl
ret
and
sbb
and
adcl
cmp
or
cmp
push
sub
bound
xor
call
in
mov
cltd
adc
mov
or
lea
add
test
xor
pop
clc
adc
scas
les
add
and
mov
call
and
out
add
es
in
sarl
mov
testb
push
jne
push
je
mov
fmull
test
or
orb
pushf
test
popa
insb
loope
fsubr
or
push
adc
fimull
push
pop
cmp
fs
xor
dec
adc
or
or
hlt
add
push
pop
outsb
cmp
je
je
xor
sbb
je
adc
push
pop
jg
sar
cmp
jbe
or
add
adcl
ret
push
ret
loopne
inc
pop
pusha
in
inc
ret
pop
mov
add
jecxz
pop
jb
adc
inc
xchg
push
and
sbb
jb
mov
imul
and
js
pop
lea
inc
and
pusha
add
divb
fiadds
add
lock
loopne
mov
orb
mov
pop
add
addb
push
inc
cmp
pop
jl
jl
pop
xchg
pop
pop
in
mov
cmp
lea
rclb
ja
popf
and
or
push
add
or
addl
inc
dec
fwait
and
aas
nop
mov
sub
iret
pop
and
add
imul
inc
add
stos
clc
mov
loopne
pusha
loopne
or
call
pusha
jge
inc
dec
and
shlb
in
adc
adc
pop
aad
xchg
push
les
jmp
dec
ss
jp
imulb
arpl
dec
add
jne
sub
cmpsl
cwtl
outsb
sar
push
jp
adcl
mov
add
dec
shrl
jae
jb
pushl
add
into
pop
or
push
js
jmp
xor
jae
dec
inc
test
adc
inc
andb
rorb
adc
mov
icebp
sbb
sbb
xchg
xorl
jns
mul
mov
mov
sub
insb
lods
cs
adc
inc
and
and
lcall
shrb
xchg
lods
dec
xchg
cmp
mov
popf
ret
xor
cmp
mov
aad
inc
loope
jb
subl
ss
adc
daa
or
insl
jb
ja
or
and
enter
cmp
and
shrl
daa
lcall
and
ja
and
in
adc
or
jb
rcll
sub
rcrb
sbb
cmp
sbb
adc
outsl
xchg
adc
and
dec
add
jle
jle
cmp
das
addb
or
inc
cmc
mov
call
cmpsb
popl
jne
mov
cmp
add
push
add
inc
repnz
test
pop
imul
leave
and
enter
fsts
or
add
lret
mov
xor
pop
push
mov
out
iret
mov
mov
mov
and
mov
inc
push
nop
mov
add
nop
and
in
and
add
nop
add
nop
es
sub
add
adc
daa
inc
add
add
jo
add
sub
jb
or
jmp
push
pusha
cmp
pop
push
jb
inc
push
lahf
sub
xor
or
xor
add
mov
jmp
dec
adc
sbb
cs
inc
repz
xor
mov
jmp
push
fcoms
lock
add
cmpsb
or
xchg
inc
mov
push
adc
adc
add
pop
adc
cli
mov
rorl
push
inc
or
or
mov
adc
inc
adc
sub
xchg
add
xchg
xchg
nop
adc
mov
and
pop
adc
xchg
add
add
aaa
adc
fmull
adc
or
adc
pop
mov
pop
pop
pop
inc
test
xor
mov
xchg
lea
and
push
int3
addl
pop
add
pop
sbb
push
out
lods
mov
sarb
or
clc
add
out
mov
pop
popa
xor
add
fldenv
test
inc
fnstsw
push
push
push
sbb
add
adc
mov
pushw
mov
mov
inc
push
js
ds
ja
je
pop
ret
in
ret
lods
mov
int3
fsubrl
add
push
and
jae
rorb
push
lock
dec
cli
pop
push
aad
test
pushf
inc
ret
push
pop
and
adcl
subb
add
push
xchg
adcl
es
daa
pop
fwait
add
dec
push
testl
xor
es
and
dec
imul
lods
subl
mov
xor
fisubrs
stc
subb
ja
jne
and
mov
add
je
or
jb
daa
add
pop
orb
add
aaa
xor
dec
shrl
push
push
je
sbb
jne
inc
or
js
adc
sti
and
and
cmp
mov
add
sti
fidivrl
jg
je
or
pop
lret
and
jmp
or
or
add
les
mov
cmc
outsb
shl
sarb
mov
sbb
add
int
rolb
lock
jecxz
mov
push
push
mov
cmp
jg
imul
dec
neg
shlb
fcom
jle
loope
sub
pop
fmuls
xor
sbb
scas
sub
shll
leave
sbb
or
imul
pop
js
xor
mov
fwait
push
mov
rep
mov
or
jnp
or
add
mov
mov
cwtl
push
mov
fsubrl
pandn
dec
cmp
jmp
add
sbbl
loop
push
mov
repnz
push
xor
push
inc
or
in
and
iret
xchg
fsubrl
xor
hlt
and
pop
xor
cmpl
loopne
or
add
sub
rcll
dec
pop
call
or
push
or
adc
fistpl
mov
adc
addr16
fsts
sbb
and
mov
enter
xor
and
push
mov
mov
cmpsb
jp
inc
and
or
scas
or
mov
adc
pop
repz
std
nop
movsb
jb
sub
cmpb
or
addb
fs
in
dec
aas
or
jge
jno
push
adc
or
sahf
mov
in
and
lock
arpl
add
ret
mov
jl
loopne
fadd
add
inc
lahf
sbb
mov
push
mov
cmp
jl
cmp
jle
cmp
fisttpl
add
push
jp
or
pop
pop
cmp
mov
fiaddl
divb
inc
inc
cmp
mov
pop
stc
iret
sti
in
sbb
xor
je
cmp
je
ljmp
pop
xor
sbb
lcall
iret
and
push
sub
test
cmp
sub
dec
fsubrs
testl
pusha
add
pop
sbb
addr16
aaa
mov
mov
jno
or
enter
sarb
or
add
adc
inc
or
in
ret
fimull
mov
fdivs
pushl
push
cmpsb
sbb
inc
mov
xchg
ror
adc
icebp
push
push
rorb
mov
inc
loopne
add
loopne
cli
rorb
dec
sbb
pop
cli
xor
insl
add
call
mov
xchg
rol
mov
movsb
and
rcr
xchg
or
inc
rol
cmp
mov
xchg
mov
ss
or
mov
rcrb
push
aam
in
clc
pop
pop
mov
push
sbb
push
sub
push
pop
popa
loopne
test
cs
punpcklwd
ss
adc
aaa
push
stos
les
or
cs
mov
ja
call
pop
xor
pusha
clc
loope
push
or
mov
mov
or
aad
push
cli
cmp
inc
sub
pop
pop
pop
adc
xor
jge
pop
push
in
inc
pusha
jo
scas
xchg
cmc
inc
out
push
test
push
or
sub
cmp
inc
leave
push
mov
adc
inc
inc
inc
dec
inc
popa
scas
and
das
sbb
in
add
mov
or
push
pop
push
add
repz
pusha
fs
push
addr16
js
and
cmp
mov
ret
scas
lods
mov
jge
jb
mov
sbb
pop
dec
pop
lods
shrb
lahf
push
push
and
sbb
jne
add
imul
test
and
xor
cs
or
and
rorb
add
mov
xchg
out
fimull
and
ret
rclb
push
add
std
inc
fnstenv
jmp
inc
pop
mov
inc
inc
popf
mov
lret
and
pop
sub
rolb
xor
sbb
in
pop
pop
or
nop
pop
rclb
ret
sbbb
xor
cmp
inc
int3
jle
and
cmpsb
inc
aam
fs
jno
inc
lock
call
pop
xchg
mov
push
sbb
popa
mov
mov
das
xor
xchg
xor
inc
rolb
pop
popf
jbe
jmp
outsl
por
pop
enter
and
add
inc
inc
mov
and
dec
add
xor
fwait
adc
sub
test
mov
jmp
inc
sbb
jmp
gs
lea
aas
lea
xchg
or
mov
mov
daa
xchg
daa
mulb
xor
stos
and
dec
pop
inc
sub
add
fcomps
je
dec
or
xchg
push
mov
dec
inc
jbe
sarl
sub
icebp
lahf
push
loopne
test
rcll
cmc
or
int
fadd
into
shrb
pop
pop
fsubl
ret
movsl
sub
outsb
mov
sbb
mov
or
mov
clc
and
jmp
bound
je
cmp
add
push
push
or
pop
mov
push
push
clc
dec
syscall
test
inc
adc
mov
bnd
xor
xor
mov
ret
cmp
dec
add
and
xor
sub
xor
sub
jle
xor
dec
insb
mov
jne
push
outsb
sub
push
repnz
jmp
and
mov
insb
jne
xrelease
cmpsb
fcmovu
and
test
jns
mov
inc
fstps
xor
jnp
add
ss
aaa
jmp
sub
pop
xor
xor
push
mov
cmpsb
push
repnz
mov
pop
inc
add
loope
jnp
mov
aaa
jnp
and
std
pop
mov
add
xchg
mov
mov
pushf
test
daa
add
and
push
fdivrs
cmp
scas
inc
popl
add
lock
jecxz
fildll
out
xor
push
mov
xor
repz
popa
insb
add
js
rcl
sbb
xchg
lods
lret
mov
push
nop
mov
and
lods
aam
push
add
das
dec
or
inc
pop
test
push
mov
jl
cmp
std
inc
inc
push
hlt
jg
mov
sub
mov
mov
adc
pop
or
sbb
lock
cld
push
idivl
push
mov
in
xchg
or
loope
xor
pop
leave
cli
push
lretw
sub
and
push
sub
lea
mov
cs
ret
cmpb
mov
push
sbb
in
addl
xor
outsl
pop
jno
and
sar
adc
shrl
or
add
adc
in
inc
adc
mov
mov
pop
or
sub
sbb
ficoml
mov
or
add
push
push
sbb
cli
inc
push
test
mov
icebp
bound
dec
sahf
call
lret
pop
mov
mov
mov
imul
or
add
outsl
and
pop
push
add
and
pop
or
jmp
push
sbb
jmp
xor
sub
ret
add
shl
pop
push
xorb
outsb
lret
xor
or
dec
sub
jmp
xchg
xchg
call
add
xchg
cmc
inc
dec
pushf
nop
and
sbb
js
push
mov
mov
push
adc
inc
sbb
add
shr
jmp
in
js
pop
in
jg
outsl
add
jnp
cmp
pushl
jns
inc
nop
jae
dec
and
sub
jae
call
or
div
je
and
nop
mov
loope
cmp
daa
sub
push
es
clc
sub
incl
xchg
sub
orb
or
stos
movl
pusha
test
mull
pusha
inc
cwtl
add
inc
inc
gs
mov
sub
aad
mov
xor
mov
stos
popa
fildl
pop
je
fldl
cmp
popf
inc
mov
dec
in
push
pop
leave
push
push
cmp
iret
outsl
inc
add
bnd
push
divb
or
repz
clc
jne
or
jne
or
pop
or
fnop
inc
lock
out
lret
andl
xor
repnz
cmp
hlt
movsb
dec
mov
ds
ret
mov
inc
inc
loopne
out
js
cmp
mov
lea
aam
arpl
test
mov
jnp
fstl
jecxz
fsubs
dec
sub
decl
push
shlb
and
shll
rolb
cmp
jnp
lcall
add
inc
jg
imul
push
sub
pop
daa
add
or
sub
push
add
loope
fsubl
and
out
jne
dec
cmp
sbb
adc
adc
movsb
cmp
push
mov
mov
movsl
pmaxub
hlt
cmp
test
fs
nop
data16
and
inc
addb
lock
cmp
cmc
push
loopne
or
mov
or
or
test
push
ss
sub
test
xchg
jle
pop
mov
jbe
movsb
loopne
imul
and
sbb
or
out
sub
xchg
nop
stos
shrb
push
add
mov
int3
mov
cmpxchg
or
cmp
and
loope
bound
fdivrp
adc
push
sahf
iret
mov
fdivs
call
addr16
mov
xor
stc
pushf
ss
push
pop
add
gs
inc
ds
in
adc
adc
imul
or
ret
iret
pop
lods
dec
sbb
rol
in
or
xor
mov
mov
push
int
pop
and
mov
test
pop
int3
test
bound
lods
movsb
xor
lods
cmp
push
push
and
jmp
or
push
or
jno
inc
and
add
int3
es
push
repnz
addl
add
lods
test
enter
sti
add
xor
dec
fmull
int3
shl
test
and
adc
imul
xor
cltd
fmuls
outsl
bound
sub
xor
push
dec
insb
fadd
stos
paddusw
imul
lret
adc
adc
push
pop
pop
pop
inc
pusha
ficoml
int3
and
cs
rclb
mov
xor
push
rorb
sbb
cmpsb
addr16
mov
and
mov
jl
pop
sbb
push
push
pushf
adc
jge
pop
cld
faddl
cmpsl
test
aas
add
and
push
jecxz
and
cli
or
mov
push
mov
adc
int
cmc
cltd
and
rorb
in
dec
mov
or
jmp
arpl
jnp
push
cmpsb
jmp
sbb
insl
sarl
push
add
or
cld
add
add
cmp
test
je
push
shlb
loopne
ss
pand
adc
lcall
jl
enter
addl
xor
in
sbb
loopne
into
fsts
lods
prefetch
or
mov
mov
outsl
or
lahf
test
push
push
movsl
add
cli
scas
pop
mov
lret
push
mov
add
push
out
dec
sahf
sub
adc
adc
rcl
pop
xlat
shlb
inc
in
shrb
subb
xorps
inc
push
das
cmpsb
push
jmp
test
add
fmull
add
dec
or
xchg
jmp
daa
and
adc
ljmp
mov
jb
dec
push
call
scas
xor
adc
int
mov
xor
fldcw
pusha
mov
lods
mulb
fdivs
jb
or
push
inc
or
scas
call
arpl
ss
data16
sub
cmp
xor
mov
aad
cmp
xor
in
shll
rcrl
shlb
cwtl
pop
and
in
or
xor
addl
clc
inc
adc
and
xor
fidivrl
xchg
and
in
pop
jbe
mov
cltd
mov
jle
pop
out
ja
dec
outsb
inc
or
cmp
xchg
sub
and
jne
lahf
adc
sub
push
xorb
and
adc
stos
add
rcl
imul
cs
sub
iret
loope
add
fcoml
fistl
xor
pop
mov
sbb
decb
mov
movsb
repz
fadds
cld
pop
adc
cmp
pop
outsb
cmp
mov
dec
sub
mov
xor
mov
inc
push
jb
insl
sub
lret
mov
repz
sti
or
xorl
arpl
jnp
fcoml
aad
outsb
dec
clc
sub
out
pop
inc
dec
int3
xor
adc
push
pop
fs
jo
mov
nop
ror
inc
popa
inc
loop
div
test
cmp
sbbb
adc
rcrl
xlat
jl
inc
cld
nop
add
mov
xor
shll
lds
mov
mov
and
xchg
dec
xlat
fstl
mov
into
cmp
cmpsb
push
jle
mov
jno
sbb
and
mov
fsubs
mov
insl
movsl
mov
mov
mov
stos
mov
popf
push
xchg
movsb
push
push
or
ljmp
add
xor
jnp
dec
and
sub
or
movsl
mov
and
test
push
rcrl
insl
push
movsl
popf
testl
jge
cwtl
and
dec
and
mov
xor
test
movsl
or
stos
shll
lods
test
mov
daa
test
mov
shll
mov
mov
add
push
insl
popf
cmp
int3
jnp
sbb
mov
inc
ret
jnp
imul
push
push
mov
loop
adc
cmp
cmp
mov
adc
lock
dec
inc
xor
repz
adc
stos
imul
insb
repz
inc
movsb
shlb
nop
sbb
ret
fisubrl
mov
pop
sbb
stos
enter
ret
idivb
lcall
dec
ret
inc
jns
add
cs
add
iret
push
popf
xchg
enter
mov
pop
inc
add
and
pop
pop
imul
jne
ss
js
mov
stc
add
sarb
add
add
dec
add
mov
xor
pop
mov
add
loop
pusha
rorl
lret
imul
hlt
and
mov
dec
mov
fsubrs
int3
inc
or
test
sti
lret
js
aaa
cmpsl
out
pop
and
out
sub
dec
addb
mov
push
aad
and
les
cmpsb
mov
call
int
xchg
add
mov
sbbb
mov
insl
scas
jl
or
or
push
xchg
orb
filds
mov
push
dec
add
ret
dec
dec
xchg
push
mov
pop
cmc
xchg
nop
push
outsb
sub
push
adc
and
fistpll
sub
xchg
cmc
add
fcom
push
cltd
cmp
pop
sub
xor
test
xchg
mov
xchg
add
dec
addr16
mov
add
adc
adc
add
hlt
jp
push
icebp
call
sbbb
aad
add
mov
addl
mov
sub
test
push
mov
or
aam
out
inc
mov
shrb
das
lret
divl
and
sar
or
jne
xor
mov
xor
xchg
xor
test
xchg
push
loopne
int3
sbb
out
movsb
cmp
push
adc
mov
push
mov
and
test
rcll
cwtl
fimull
daa
mov
add
rol
add
scas
jge
icebp
popa
cltd
pop
sbb
addl
mov
or
push
pop
daa
xchg
push
in
push
jmp
and
inc
add
add
test
movsb
test
ljmp
pop
xchg
daa
push
mov
sbb
mov
xchg
mov
push
sub
push
jmp
add
mov
xor
pushf
jmp
sbb
cmc
mov
jl
mov
in
xor
xchg
mov
lock
mov
push
or
mov
ud0
mov
aaa
popa
push
cltd
mov
xchg
and
push
add
rcrb
mov
sub
dec
inc
add
push
repz
dec
add
shlb
hlt
cmp
pop
test
add
sub
sahf
mov
aad
test
loopne
stos
test
pusha
inc
push
or
adc
dec
add
dec
pop
xchg
dec
add
push
or
test
repnz
mov
dec
nop
push
sahf
xorl
xchg
out
xchg
inc
pop
xor
pusha
pop
xchg
sbbb
es
or
sahf
xchg
pop
enter
nop
sub
fildll
and
sub
movsb
mov
add
xchg
mov
push
adc
cmp
bound
in
and
test
xchg
mov
mov
or
xor
sbb
pop
jnp
clc
lcall
sbbl
xchg
lcall
sub
add
jb
in
adc
inc
sbb
and
xchg
pop
cmc
sbb
enter
push
push
es
pop
xchg
add
push
and
xor
loopne
xor
gs
clc
and
hlt
fists
pop
andb
hlt
xor
xor
and
push
movsl
je
rorb
cmc
insl
and
test
xchg
pop
fiaddl
mov
and
inc
push
sbb
cmpl
imul
addr16
mov
fwait
insb
test
and
xchg
xchg
push
daa
and
or
dec
xchg
mov
outsl
inc
insl
pop
xchg
loopne
subl
push
mov
sub
mov
jae
subl
popa
push
insb
imul
cltd
sbb
push
xchg
sub
inc
lods
adcb
adc
gs
or
sub
cmp
adcb
jp
fdivrl
fdivrl
cwtl
pop
and
fcompl
scas
jne
jmp
cld
nop
pop
xchg
xor
scas
jge
or
mov
popf
mov
mul
inc
or
inc
add
dec
adc
fnstcw
cli
adc
pop
outsl
std
jnp
jae
out
push
cmpl
stc
xchg
add
dec
ret
xorb
lock
pop
std
inc
adc
add
nop
cmp
sbb
movsl
imul
es
jmp
sbb
inc
inc
aaa
xor
mov
or
lds
sub
inc
jge
jne
add
imul
add
mov
add
std
cli
add
pop
and
jmp
imul
and
adc
push
mov
in
inc
push
enter
mov
inc
pop
jge
sub
mov
aas
adcb
les
adc
popl
inc
pop
test
jns
or
sbb
push
jnp
lods
jne
ja
jbe
adc
add
cmp
inc
jle
add
inc
adc
inc
pop
adc
notl
arpl
push
hlt
ss
and
leave
jno
push
or
jmp
test
mov
dec
lods
movb
notl
pop
enter
std
ja
push
aad
std
or
push
push
stc
or
jp
popa
sbb
push
rcrb
or
and
and
or
add
dec
xor
push
xchg
jle
mov
adc
fistpl
jb
pop
add
or
rolb
inc
insb
inc
popa
add
and
jg
ret
xchg
repz
cmp
jae
insb
lret
push
xchg
fs
outsb
and
inc
fiaddl
jmp
jp
call
push
aaa
shr
fstl
ret
push
out
adc
jg
stc
mov
test
cmp
inc
or
xchg
stos
add
jmp
rcrl
xor
mov
sub
mov
xor
and
inc
mov
pop
orb
cmp
adc
je
adc
push
mov
nop
push
inc
incl
cltd
sbb
and
push
xchg
adcb
push
pop
mov
sti
punpcklwd
movd
or
mov
push
add
das
nop
insb
sti
jmp
imul
mov
das
lods
rolb
ret
pop
jbe
pop
ljmp
jno
xchg
cmp
push
or
push
or
addl
mov
cli
lods
xor
mov
and
fstl
jne
icebp
sbb
mov
pop
sub
cmp
inc
cmp
and
std
sub
gs
cmp
inc
jl
pop
es
imul
pop
dec
mov
sub
and
insl
sbb
adc
or
push
hlt
jne
mov
jae
add
movsb
cmp
int
loop
or
push
dec
cmp
and
andb
or
neg
inc
adc
in
sub
iret
or
add
jae
push
rorl
mov
loope
popa
test
sbb
add
dec
mov
fnstsw
test
je
and
push
add
sbb
xchg
shl
and
push
dec
or
add
mov
aas
sbb
sti
data16
insl
rcrb
insl
clc
push
add
adc
or
pusha
nop
popf
lret
mov
out
out
cmp
sbb
xchg
sbb
and
pop
fsub
pop
fsubrp
mov
mov
ret
cltd
adc
mov
jl
inc
push
popl
or
add
and
add
push
rorb
mov
and
add
mov
jge
int3
xor
je
scas
lea
adc
mov
dec
nop
mov
call
push
cmp
fstpl
or
jmp
push
pop
jmp
stc
addr16
push
jmp
push
test
or
pop
add
fidivl
pop
aad
push
jmp
pusha
ror
push
jmp
ds
shll
iret
out
out
xor
sbb
sub
shlb
enter
subl
call
push
out
xchg
cli
and
or
mov
pop
sbb
cwtl
xor
and
incb
xchg
sbb
or
in
push
pop
std
sbb
es
dec
pop
jns
xor
xchg
cmp
mov
movsb
dec
pop
ficoml
mov
iret
outsb
or
adc
pop
sbb
and
cld
adc
or
ja
adc
xor
inc
sbb
cld
in
pop
adc
mov
adc
inc
int3
ss
in
inc
fmulp
sbb
cwtl
and
repnz
xchg
int
repnz
push
lods
add
in
dec
pop
or
lcall
inc
ds
pushw
mov
test
sub
xchg
sbb
sbb
push
into
push
inc
jbe
iret
inc
xor
or
sahf
fnsave
mov
jne
or
js
inc
xchg
cmp
mov
xor
cmp
mov
enter
push
fisubs
pop
fmul
movsl
es
mov
xor
clc
enter
leave
imul
outsl
aaa
and
xor
sub
gs
add
cmp
int3
add
push
pop
xlat
adc
aas
push
xor
sbb
mov
inc
mov
adcb
icebp
ud1
call
lcall
rorb
mov
fiaddl
pop
test
repz
jno
repz
repz
mov
stc
cmp
fucompp
cli
xor
sahf
out
sahf
dec
pop
insb
jnp
fwait
jns
out
cmpsl
mov
loop
xor
out
std
or
sbb
iret
repz
cmp
push
mov
test
aad
sub
into
enter
cmc
aad
inc
pushf
pusha
mov
in
flds
xor
jecxz
jb
mov
pop
add
mov
into
pop
adcb
xor
insl
mov
mov
mov
pop
adc
inc
pop
cld
pop
ret
xchg
lret
int
pop
push
pop
add
and
push
mov
push
das
addr16
xchg
mov
jp
inc
jno
push
and
cmp
mov
add
icebp
or
shll
rcrb
xor
adc
push
cltd
xchg
pop
enter
pop
dec
xchg
xor
movsl
or
push
cmpsb
nop
and
cld
insb
sbb
cwtl
and
push
xor
sbb
or
push
mov
popa
dec
sbb
sub
push
jl
adc
sub
cmp
inc
sub
sub
pusha
sub
dec
roll
xchg
lds
jecxz
push
adc
adc
popa
enter
imul
add
add
or
aam
sub
aaa
jmp
dec
scas
in
add
jne
sbb
inc
and
cmp
cmp
add
or
push
or
into
test
mov
popa
lods
cmpb
inc
lcall
or
add
jl
and
iret
add
sub
jle
jnp
rcrb
pop
push
mov
rorl
loopne
or
popa
test
call
jb
jnp
lea
iret
push
aaa
lret
pop
push
adcl
xor
test
popl
add
rclb
push
or
push
int3
or
xchg
sub
out
andl
movsl
lock
adc
mov
sbb
push
or
or
or
add
pop
shll
ret
sub
cmp
or
out
out
mov
aaa
test
or
add
jb
iret
out
aaa
ljmp
dec
adc
or
pop
loopne
movsb
les
lods
cmp
loopne
insb
mov
inc
mov
mov
xor
aaa
push
mov
push
lock
xchg
dec
push
add
aaa
lods
fs
push
sub
jge
or
dec
call
sbb
mov
push
add
stos
in
mov
add
sub
fidivl
dec
add
or
dec
rcr
jnp
xchg
cmpsl
mov
rcrb
ret
cmpsl
inc
shlb
mov
xor
adc
leave
lock
sub
lcall
vpaddsb
leave
call
or
movl
aam
ret
adc
cmpsl
jo
and
lea
shlb
sbb
adc
cvtpi2ps
push
orb
sub
pushf
adc
lock
inc
pusha
push
test
mov
sub
and
inc
or
je
dec
aaa
and
add
fldcw
add
or
fidivl
or
std
or
les
addb
add
enter
mov
les
lea
xor
dec
fsts
pusha
lods
cmpsl
xchg
add
cmpsl
and
or
mov
adc
mov
and
add
js
add
xor
jecxz
add
mov
jb
lcall
stc
pop
xchg
add
int
inc
jbe
dec
cmpb
mov
pop
and
and
test
lods
and
cltd
test
std
in
sbb
imul
mov
test
inc
leave
sub
add
stos
or
rol
adcb
scas
sbb
orb
cmp
jge
ss
add
les
push
repnz
cs
mov
xchg
or
daa
add
leave
add
push
sbb
add
push
pop
xor
pop
sbb
pop
dec
inc
lea
pusha
push
lods
lea
mov
mov
xor
in
test
lcall
add
and
xor
add
rcll
xchg
pop
push
or
stc
shll
inc
add
push
jg
subb
sub
lcall
inc
sub
outsl
jo
dec
add
mov
dec
mov
jno
cmove
pop
inc
lds
imul
sbb
and
ret
inc
in
in
movsb
push
mov
test
add
das
add
add
and
add
add
mov
lcall
outsl
adc
xchg
adc
clc
sub
adc
adc
cmp
aaa
outsb
sub
cmp
and
xchg
pop
mov
cltd
sbb
push
cmp
jg
nop
push
add
jbe
xchg
push
pusha
inc
pop
mov
cmp
sub
and
test
mov
ret
adc
imul
aaa
mov
daa
adc
outsl
jns
jge
popa
sub
mov
adc
pop
inc
call
enter
or
and
mov
dec
fwait
dec
push
test
inc
sarl
popa
push
pusha
add
push
jp
push
and
aaa
mov
adc
imul
andb
lcall
pop
xor
je
test
fdivrs
adc
dec
pop
cmpsb
fsubrl
mov
cmp
fs
dec
and
sbb
ret
add
xchg
or
rcl
pop
mov
and
movsl
test
xor
jl
shlb
sub
int
movsl
test
add
insl
pop
mov
push
push
inc
faddl
arpl
and
imull
push
sbb
pop
mov
insb
push
mov
cmp
loopne
or
and
jp
add
lret
inc
adc
dec
js
cs
xor
and
lret
push
je
or
push
mov
sbb
adc
pop
push
pop
mov
push
lea
adc
or
push
test
vsqrtsd
mov
mov
pusha
sbb
xor
test
call
or
gs
sub
xchg
mov
or
sar
sbb
shlb
inc
sbb
mov
add
xor
inc
lea
test
cs
bound
xor
xor
jne
xor
orl
arpl
sbb
loopne
lcall
inc
lcall
push
push
sbb
add
adc
and
dec
inc
sbb
lock
jmp
or
push
cmpsb
inc
and
jecxz
ret
inc
pop
or
xor
dec
jns
clc
mov
push
sub
mov
lods
adc
mov
out
jno
mov
dec
pop
inc
xchg
xor
adc
inc
mov
addb
mov
mov
ret
or
adc
jl
xor
jmp
cmp
jl
or
sbb
call
jle
xor
jle
cmp
je
mov
sub
fisttps
inc
jmp
movb
mov
sbb
std
push
pop
cltd
idiv
std
mov
das
cs
xor
lods
jmp
scas
cld
aas
imul
fdivrs
inc
incb
mov
sbb
push
loopne
aam
mov
add
xor
nop
xchg
jbe
and
add
aam
or
mov
push
pop
lahf
cmpsb
lahf
movb
sub
sub
or
push
in
mov
hlt
es
je
call
or
insb
popf
and
bswap
cld
mov
dec
fdiv
ficomps
cmp
xchg
inc
mov
fdivrl
ret
dec
jg
push
and
or
jns
das
inc
mov
cmp
lcall
std
or
out
hlt
or
les
icebp
dec
add
cmpsb
add
push
sub
cwtl
push
pop
inc
mov
and
push
sti
pop
pushl
test
aam
push
pop
mov
arpl
clc
addr16
pop
daa
pop
je
pop
add
or
je
int
sub
jge
subl
push
lcall
mov
movsl
movsb
out
cmpsb
dec
movsl
xor
push
pushf
adc
pop
xchg
or
jo
rorl
and
add
cmpb
lcall
addr16
out
jns
mov
je
or
xchg
mov
lds
jmp
push
pop
fisubs
dec
dec
fnstsw
pop
lods
shll
pop
jns
inc
push
in
mov
cwtl
dec
enter
sub
stc
sbb
xchg
and
sarl
mov
sbb
jae
push
or
push
loope
jmp
inc
pop
fsub
nop
push
fsubrs
call
add
ja
dec
repnz
or
aam
pop
and
push
les
push
out
and
leave
dec
jae
pusha
shlb
repnz
arpl
push
rolb
xchg
mov
test
add
data16
or
cmp
inc
and
rcl
lret
in
mov
mov
sub
xchg
dec
and
or
sub
lret
push
pop
add
pop
shlb
push
xchg
sbb
pusha
cwtl
xor
orl
pop
mov
xor
mov
pop
adc
js
cmp
in
mov
movsb
leave
and
dec
pushf
xchg
mov
out
je
dec
dec
cmp
mov
mov
xor
xchg
fsubr
call
jo
sub
popa
outsb
and
push
mov
jge
fbstp
xchg
sub
dec
lret
imul
lea
xor
divb
xor
push
sbb
scas
icebp
xchg
push
xlat
lock
sbb
pop
int3
add
inc
cmpsb
jge
push
lcall
mov
daa
aas
push
mov
dec
and
pop
fldz
sub
inc
lea
roll
or
sbb
add
jne
movsb
push
filds
mov
sub
and
jg
adc
jo
ja
push
or
sbb
mov
lock
jne
rcrb
inc
fadds
imul
jl
imul
setp
roll
pop
int3
jo
rolb
mov
in
mov
mov
in
push
push
adc
mov
mov
data16
cmp
daa
or
loopne
loopne
or
sub
push
adc
or
mov
xchg
mov
pop
xchg
and
pop
movsb
mov
jle
xor
inc
dec
xor
psubsb
and
mov
adc
mov
or
in
rcrb
xchg
or
and
push
andl
cmp
sahf
test
jl
mov
imul
sub
insl
je
add
jo
xchg
rcrb
and
adc
lret
and
cmp
arpl
pop
xor
sahf
adc
fstl
dec
cmpsl
aaa
push
sahf
inc
out
neg
sub
push
dec
dec
and
sub
movsl
xor
js
xor
adc
sub
and
dec
xor
ss
pop
sub
jb
or
sbb
add
push
dec
std
sub
call
sub
insb
test
cmp
mov
mov
fdivs
jmp
push
sub
or
in
int
pop
jg
xchg
cmc
rcl
and
mov
dec
pop
rcrb
subl
popf
movsl
push
push
or
sub
aas
rcl
les
fldenv
add
inc
pop
fsubl
in
add
xchg
adc
jo
add
and
pop
shlb
jo
addr16
sub
jbe
add
pop
cmp
cmp
cmp
mov
lea
pop
add
into
je
fists
xchg
fsubrs
cmp
ja
bound
shlb
pop
mov
inc
fldt
adc
lcall
shlb
push
shl
mov
cs
js
add
decb
sub
test
std
inc
inc
hlt
mov
push
adc
aam
sub
add
and
pop
mov
int3
sub
add
pop
imulb
xlat
rolb
cmp
or
orb
call
rcrb
aam
xchg
inc
jl
lcall
jle
stos
or
clc
sub
test
loop
mov
xor
jle
add
or
inc
cmp
sbb
popl
shll
push
lds
ss
mov
pop
sbb
sbb
cmp
push
jne
mov
add
push
loopne
cmpsb
shrb
and
sbb
jl
xchg
xor
xor
es
add
insl
movsl
hlt
xchg
stos
and
and
mov
mov
dec
sub
xchg
and
adc
sub
mov
testb
int3
jo
add
jecxz
lahf
popa
dec
push
or
adc
clc
jb
inc
iret
adc
mov
dec
xor
fmull
mov
mov
lret
punpckhwd
xchg
inc
dec
fcoml
fsubs
popa
adc
or
jno
fdivs
popa
leave
sbb
pop
dec
and
adc
dec
test
add
stos
pop
je
mov
pop
add
cmp
pop
mov
xor
lret
rcrb
shl
fimull
adc
ss
lds
or
inc
sub
sbbl
adc
push
das
repnz
frstor
aas
gs
pop
movsb
push
shrb
sbb
stos
insl
andl
and
int3
sbb
mov
pop
or
sbb
movsb
in
dec
xor
push
jmp
add
call
xchg
sete
sbb
adc
push
adc
cmp
add
in
adc
add
mov
loope
dec
cmp
cmp
mov
aam
add
hlt
mov
push
inc
sub
addl
bound
adc
xchg
and
mov
rclb
ja
test
inc
or
pop
daa
out
mov
mov
xchg
cmp
cs
mov
adc
lret
rorl
cmp
scas
pop
mov
push
cmp
dec
cmp
push
inc
cmp
xor
ljmp
in
es
sbb
scas
adc
pop
add
gs
js
sub
cmp
and
nop
jge
sbb
jne
add
dec
cwtl
sbb
adc
out
jo
daa
or
and
sbb
test
and
insb
ficompl
push
xchg
lea
sbbb
inc
xor
push
sub
mov
clc
dec
xchg
fldenv
in
cmp
jne
mov
rcl
lea
dec
add
dec
add
mov
push
xlat
pop
sarb
mov
inc
rcrb
adc
add
push
xor
inc
and
in
addl
es
push
insb
adcl
orb
pop
sbb
pop
xor
dec
ret
in
mov
and
shrl
sbb
jo
or
adc
imul
push
dec
or
adc
or
or
xlat
mov
orb
lods
test
pop
add
in
push
pop
and
fcoml
pop
call
loopne
add
call
fcomp
push
inc
movsb
loop
pop
and
dec
or
test
inc
lahf
sti
xchg
add
fdivl
nop
dec
xchg
or
or
xlat
sbb
je
jbe
shlb
mov
rorb
aam
sub
es
add
sub
add
pushf
test
loopne
sbb
fsubs
pushf
test
int
xor
movsb
imul
xor
mov
addl
rcl
popa
cmp
xchg
pusha
adc
aam
push
fwait
adc
loopne
cmp
xchg
push
push
nop
nop
aam
adc
fstpl
adc
adc
test
inc
push
mov
sub
test
mov
sbb
daa
lahf
lret
xchg
sub
repnz
sbb
adc
xchg
test
push
add
jno
add
push
popf
pop
in
add
inc
lcall
fcoml
cmpsb
dec
es
sbb
xor
push
push
or
xchg
ret
loop
add
cmpl
jne
xchg
dec
or
add
inc
mov
aam
mov
pop
inc
cmp
xchg
cmp
sub
arpl
xor
push
pop
aam
insb
je
cmpsb
stc
je
jno
cld
push
pop
daa
dec
mov
pop
inc
and
or
jp
iret
in
push
push
sub
cmp
daa
push
movsb
adc
add
pop
mov
sub
divl
xchg
popa
mov
sahf
jl
imul
cmp
pusha
ljmp
test
jp
inc
shll
in
ds
xorl
loope
fnstsw
imul
addl
cltd
jb
or
rcrl
cli
jno
cs
mov
movsl
add
lcall
xchg
fisttps
jmp
push
adc
push
or
pusha
pop
push
lock
dec
lock
add
in
dec
push
pop
pop
andb
pop
add
sub
or
xor
sbb
xchg
sti
cmp
jae
mov
jp
inc
cmp
rcrl
push
std
add
add
stos
ret
in
std
dec
adc
fs
mov
imul
out
popa
out
daa
imul
gs
push
jp
adc
loope
or
mov
mov
rcl
bound
pop
hlt
repz
movl
add
cld
aaa
ficomps
cmc
adc
add
inc
addb
jo,pn
push
pushf
enter
loope
push
cmp
mov
mov
jne
push
sbb
mov
mov
xor
dec
outsb
or
imul
inc
dec
mov
fsubrl
and
sahf
jb
pusha
xor
pop
nopl
or
cmp
aam
ljmp
pop
scas
data16
add
add
add
lods
cs
insl
xchg
andb
loope
pop
push
sbb
dec
sub
out
xor
popf
inc
cmp
lods
mov
in
popf
ljmp
xchg
and
mov
cmp
push
mov
cmp
cmp
xor
pushf
insb
loope
sub
dec
call
sbb
andl
std
mov
out
mov
aas
add
sub
mov
aad
stc
into
or
jb
and
ds
pop
nop
mov
test
movsb
pusha
dec
inc
xor
test
cmp
or
pop
call
sbb
sub
test
filds
test
stos
test
jo
or
and
pusha
or
push
pop
xor
rcll
ret
repnz
pop
stos
xchg
adc
dec
inc
cmp
lods
xchg
addb
add
sub
dec
and
push
cmp
jmp
mov
push
xchg
outsl
add
dec
sbb
or
pop
or
inc
xchg
ret
push
fisubs
add
push
mov
xchg
ja
popa
andl
enter
mov
sar
cltd
add
dec
xchg
scas
rclb
je
arpl
add
xchg
movsb
or
cmp
rorl
clc
inc
add
enter
es
arpl
xchg
rcr
inc
jmp
pop
pop
add
push
mov
jmp
stos
inc
decb
mov
xor
iret
cmp
add
inc
test
sub
mov
and
and
test
inc
cs
push
and
into
and
or
inc
imul
je
add
xchg
inc
aad
pusha
add
lea
nop
mov
adc
add
je
jg
das
adc
sub
sbb
pop
sub
dec
das
xchg
add
inc
jmp
mov
jmp
pop
xchg
and
inc
inc
jmp
dec
xchg
cmovo
mov
sub
or
lock
loope
push
ss
fsubrl
mov
loop
out
shll
mov
pop
movsl
cmp
sahf
mov
mov
xchg
jp
shrl
jo
mov
jae
ret
sti
fistl
in
push
mov
mov
mov
pop
pop
loop
jmp
adc
pop
int
sbb
imul
or
out
lods
add
sbb
pushl
les
dec
or
cmp
xchg
ja
adc
daa
and
jns
or
sbb
dec
inc
daa
popf
ss
sub
adc
cmp
ss
in
jo
or
pop
sub
mov
xlat
rclb
lret
dec
fldt
cmp
dec
pop
aaa
adcb
in
inc
cs
subb
clc
xor
int
popf
push
sub
adc
cmp
or
xchg
push
cmp
shlb
add
cmpsb
lds
jo
clc
lock
imul
push
pop
add
xchg
rcll
and
popf
adc
das
daa
xchg
cmp
and
js
and
jmp
sub
adc
push
cmp
xchg
aad
data16
bndldx
test
fs
sub
scas
mov
and
sub
cmp
ljmp
movsl
inc
lcall
or
or
mov
and
adc
or
inc
nop
push
dec
dec
or
mov
mov
mov
and
pop
fisttpll
cwtl
in
ljmp
and
xor
les
adc
sub
mov
mov
adc
and
fadds
insl
in
aad
nop
ret
mov
jp
cmp
js
rsm
add
nop
sbb
daa
int
adc
xchg
push
jne
push
call
mov
test
dec
je
push
push
add
in
in
sub
mov
lret
xor
pop
push
mov
and
jnp
lods
das
sbb
imul
pop
push
add
popf
sub
sbb
or
fcomps
outsl
mov
mov
push
and
fistpl
inc
adc
dec
add
cmp
bound
mov
jne
pop
or
test
push
cmp
mov
mov
xchg
mov
testl
addb
xlat
sub
inc
add
cmp
inc
and
adc
jb
stos
push
inc
movsb
sbb
mov
add
test
movsb
dec
shlb
dec
cmp
in
dec
and
pop
mov
xor
push
in
les
add
ret
push
add
fldl
dec
repz
fidivs
or
push
loop
fmuls
popf
sbb
pop
sub
ret
inc
dec
jmp
jne
lahf
sub
xor
add
fidivl
or
popf
and
mov
adc
sti
addl
ror
bound
enter
push
dec
and
cmp
sbb
out
dec
test
mov
add
fnsave
inc
add
les
sub
imul
insb
push
in
push
int3
icebp
mov
jne
je
out
mov
inc
aaa
incl
fadds
xor
insb
cld
jbe
push
mov
out
mov
test
inc
cmp
inc
jb
pop
pop
rcrl
nopl
mov
mov
pop
or
inc
mov
push
sahf
xchg
movsl
add
dec
inc
mov
mov
xor
imul
sub
xor
mov
jp
outsl
fsubl
lods
ja
add
cmp
fisttps
daa
stc
mov
adc
add
push
adc
call
xchg
subb
jne
mov
shl
arpl
jo
mov
dec
pop
psubw
or
ja
dec
imul
testl
mov
cmpl
or
cltd
cmp
stos
xor
sub
push
pop
cmpl
xor
push
dec
orl
movsb
ds
into
in
in
outsb
clc
clc
lds
icebp
jb
jmp
sub
repz
aad
imul
or
add
test
mov
push
jne
push
ljmp
inc
and
dec
cwtl
ret
pop
xlat
test
icebp
push
adc
mov
mov
xchg
stos
xor
pop
add
dec
pop
gs
add
jp
xlat
sbb
xchg
xorb
sbbl
lea
add
jl
shlb
pop
jne
test
cmp
or
das
dec
enter
test
xchg
js
in
rolb
es
add
fildl
or
xor
in
or
sub
mov
inc
das
adc
or
adc
add
je
mov
xchg
pop
pop
pushf
adc
mov
and
mov
dec
std
cs
pop
mov
inc
xchg
adc
outsl
add
push
and
push
sbb
or
mov
push
insb
or
sub
push
imul
lret
mov
out
scas
xchg
or
xor
iret
xchg
mov
push
push
cmp
pop
fdivrs
dec
or
inc
lds
iret
sbb
inc
adc
fcom
jbe
add
xor
dec
pusha
sub
fdivr
dec
jl
dec
je
or
mov
add
cmp
aad
sar
add
in
loope
loopne
xchg
mov
std
add
int3
shlb
faddl
lea
xchg
sbb
stc
mov
pop
nop
lock
pop
jnp
pop
adc
add
pop
rclb
loope
mov
cld
lret
test
mov
cmp
lea
sub
inc
xlat
xor
mov
in
bound
rcrl
or
xchg
push
les
aaa
test
push
movsl
aas
push
or
jge
jb
mov
scas
cmpl
pushl
popl
frstor
adc
xchg
xor
fstpl
js
xchg
lea
adcl
add
push
loop
clc
or
dec
mov
mov
arpl
add
stc
fisubrl
sbb
and
lea
mov
add
inc
push
adc
or
das
ss
incl
fcomps
and
stos
xchg
fsubrl
or
fsubs
rcpps
xchg
ss
faddl
mov
and
or
add
aam
outsl
add
sbb
nop
rcr
ret
daa
rolb
jp
add
or
mov
movsb
xor
ret
push
das
gs
sbb
jno
daa
scas
in
mov
mov
imul
dec
inc
sub
jnp
scas
sbb
sbb
imul
imul
imul
or
dec
dec
mov
test
dec
lods
out
mov
hlt
call
or
push
mov
push
mov
mov
loope
pop
jle
fdivrs
shll
xchg
jb
inc
dec
out
dec
mov
adc
adc
sub
inc
dec
dec
adc
jo
or
cmpsb
imul
and
adc
and
rorb
dec
pop
psrld
insb
pushf
and
cmp
mov
repz
sub
dec
cwtl
inc
rclb
adc
shl
adc
insl
pop
imul
jl
pushl
lods
in
inc
adc
jbe
andb
shrb
push
sbb
xorb
insl
push
sub
cwtl
lcall
mov
push
push
out
push
push
inc
inc
xorb
or
aas
fs
jbe
popf
das
inc
or
dec
push
cs
sarb
sbb
js
sbb
sbb
sub
movsb
or
and
decl
shrb
add
aaa
ljmp
movsb
pop
or
xor
xchg
test
dec
adc
xor
arpl
sbb
cmpsl
adc
and
adc
lahf
test
mov
fcoml
cmpsb
adc
xchg
jns
adc
ss
lcall
or
jmp
mov
out
mov
movsl
inc
sbb
cld
cmp
pop
lcall
test
in
jmp
aaa
xchg
dec
ljmp
push
cmp
inc
or
faddl
pushf
add
dec
dec
and
test
sub
popa
push
xchg
push
imul
or
xor
adc
mov
sahf
jno
popf
adc
add
mov
cmpsb
clc
or
jge
rorb
pop
imul
lods
cmp
xchg
fwait
push
loopne
in
imul
sbb
pop
sbb
les
cmp
inc
fsubl
or
popa
movsl
pop
dec
push
hlt
subb
cmp
movl
in
inc
rorl
or
sahf
and
adc
cmp
cmp
mov
push
int3
add
add
mov
dec
das
mov
mov
push
add
cmp
or
or
movsb
and
cmp
ljmp
mov
clc
inc
pusha
and
mov
inc
lcall
imul
push
adc
fbstp
or
in
int3
mov
inc
in
mov
push
xor
push
push
adc
or
or
sbb
jge
adc
popa
lea
or
push
sbb
xor
add
pop
repnz
lock
filds
leave
js
and
lahf
das
adc
adc
out
enter
xchg
fcompl
sub
adc
dec
xorb
push
push
dec
loopne
sbb
insl
ljmp
sub
ret
hlt
inc
xor
push
fwait
shlb
push
add
or
cmp
sbb
sbb
add
out
les
jbe
loopne
push
push
int3
push
inc
imul
xchg
dec
decb
add
into
sarl
push
or
push
rol
mov
xor
lods
push
adc
aaa
cmpsb
sbb
andb
fcom
xchg
push
pop
or
dec
cmp
adc
pop
mov
std
ss
inc
cs
mov
enter
test
push
xor
mov
sbb
and
or
cmp
movb
test
cmpb
mov
push
das
lea
push
ret
js
jg
faddl
and
xchg
or
not
push
jmp
or
repz
in
inc
call
cmp
jge
mov
push
jb
iret
insl
cmp
jae
andl
out
je
pop
rcrl
dec
jns
mov
out
adc
jnp
inc
aaa
dec
ja
je
popa
add
pop
jo
mov
sub
mov
or
sbb
pop
mov
xor
loop
out
jne
mov
mov
test
mov
xchg
cmp
adc
movsl
push
mov
mov
add
dec
add
in
mov
roll
mov
orl
sub
jmp
xorb
or
rcrb
cld
adc
jl
add
sub
cmpb
xor
and
or
add
mov
mov
dec
dec
cmp
pop
inc
pushf
adc
xchg
jp
aam
leave
das
adc
inc
popf
add
push
neg
pop
sbb
into
inc
fld
movsl
and
stos
imul
cmp
test
and
cmp
lea
xchg
jmp
decl
pop
mov
stos
imul
xchg
in
ljmp
sbb
rcl
out
lret
dec
insb
sarb
sarb
sbb
jg
push
in
adc
add
sbb
push
mov
mov
ss
clc
and
loopne
dec
adc
jne
push
sbb
cmp
add
nop
lock
sahf
test
fisttps
jmp
adc
jb
lods
aaa
sarl
mov
jle
add
jp
scas
ret
xor
jmp
dec
push
sbb
add
jae
in
sub
loop
out
or
es
mov
jge
ljmp
dec
insl
and
cmp
test
xor
and
mov
scas
fldenv
sar
and
scas
sbb
or
sub
sub
pop
ret
pop
out
test
sarb
dec
pushf
or
in
inc
jne
ret
add
push
daa
mov
push
lods
jp
inc
push
daa
cmp
sbb
fistpll
mov
push
inc
xor
push
adc
push
push
push
adc
lret
sarb
and
pop
add
mov
imul
mov
nop
xor
jmp
das
and
call
mov
adc
cmp
jae
or
jmp
add
lods
ss
or
inc
xor
push
adc
and
gs
and
sti
xor
push
jno
push
push
movsb
idivl
mov
adc
or
sub
push
lret
sbb
mov
push
jb
xchg
scas
push
dec
cs
mov
add
or
stc
jmp
movsl
or
xchg
push
add
loopne
in
incb
stos
int
sub
sbb
cwtl
sub
sbb
mov
addl
mov
inc
mov
nop
push
repnz
dec
lods
xchg
int3
mov
leave
add
shr
push
push
and
pusha
and
add
mov
lret
sub
sub
xor
js
xchg
enter
sbb
mov
mov
or
insl
shl
push
aad
jnp
jbe
fmul
pop
dec
adc
rcl
sub
fcomps
cli
mov
adc
adc
fdecstp
inc
call
push
jl
cmp
jg
pop
jp
adc
sbb
cmp
xor
push
jnp
xchg
in
sub
cmp
gs
pop
mov
lret
mov
add
fidivrl
cmp
or
inc
and
cmp
stc
adc
in
add
add
sub
add
mov
sbb
cmp
mov
mov
test
aas
xchg
jo
loop
hlt
or
cmp
aam
inc
xor
mov
mov
jmp
in
sbb
adc
cmp
sbb
jmp
push
or
add
mov
outsl
outsb
lock
pop
mov
sti
rep
movsw
push
lret
xchg
sbb
movsb
mov
cwtl
cmp
mov
mov
adc
ljmp
ja
int3
mov
inc
mov
adc
movb
and
pop
cmpb
sahf
xor
loopne
cmpsb
mov
push
xchg
push
mov
dec
push
push
les
pop
movsbl
shr
xor
mov
push
push
fimull
es
and
repnz
cld
je
push
push
scas
lret
mov
and
mov
cmp
pop
inc
in
xchg
mov
jo
mov
lcall
sub
push
inc
add
and
mov
mov
or
mov
fsub
subl
jle
mov
and
or
outsl
xchg
pop
adc
sbb
ljmp
lahf
xor
push
dec
cmp
inc
cmp
and
adc
cld
cmc
adc
add
lock
lock
test
outsl
mov
ficompl
mov
adc
and
stos
adcl
sahf
sbbl
adcb
add
cmp
cmp
fdivrl
cmp
or
jnp
or
jbe
jmp
or
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
fcompl
pop
pop
jmp
and
or
and
or
jmp
and
movhps
adcb
push
mov
cmpl
stos
stos
jnp
test
push
xor
pop
cld
nop
xchg
push
iret
repz
cwtl
mov
cmp
repz
rcr
fucom
repz
repz
icebp
idiv
out
sahf
out
xchg
add
out
sahf
sbb
and
sub
jns
cmp
inc
dec
fbstp
out
push
pop
or
add
testb
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
dec
dec
mov
and
or
add
sbb
or
or
pop
insb
or
fdivs
cmp
jle
mov
xchg
pop
xor
add
adc
add
push
pop
jae
inc
and
and
inc
sbb
imul
jo
shll
mov
sub
clc
sub
sbb
std
adc
mov
inc
cmp
jbe
or
movsb
nop
ret
add
dec
js
add
mov
xchg
jge
mov
push
jmp
inc
push
push
mov
pop
pop
cmpsl
xchg
cmp
pop
jne
mov
ret
mov
rolb
pop
pop
movsl
ljmp
push
cmp
push
add
fcompl
add
dec
xor
push
test
inc
ss
and
sub
push
and
repz
inc
inc
or
repnz
mov
xor
lret
adc
jmp
push
dec
add
mov
je
push
add
push
dec
xor
cmpsb
push
push
mov
jmp
mov
aaa
lret
mov
add
add
pop
or
add
inc
pop
inc
cmpsl
jmp
cmp
inc
das
call
into
jo
or
xchg
or
or
adc
hlt
add
adc
mov
cmovno
xor
and
inc
jl
test
pop
push
js
adc
jecxz
xor
xor
inc
push
push
or
xor
add
cmp
fucomp
inc
xlat
cltd
mov
jecxz
pop
cmp
pop
test
jne
dec
or
andl
xor
mov
test
sahf
movsb
iret
jne
out
inc
pop
loopne
or
stos
or
mov
shlb
cmc
jl
push
xor
inc
cld
jmp
mov
jne
and
adc
mov
xchg
jno
adcb
jo
ss
or
jbe
movl
movsb
loopne
sbb
adc
or
pushf
cmpb
loopne
shlb
lcall
cmp
or
xor
and
ret
std
xchg
je
dec
sahf
or
lahf
cld
push
clc
xchg
xor
dec
je
xchg
clc
pusha
cmp
sbb
push
xor
jmp
clc
adc
cmp
cmp
pop
adc
pop
fsubrs
or
add
add
inc
dec
or
fldl
or
push
mov
inc
inc
or
out
xchg
jp
orl
fidivrl
es
mov
mov
lahf
js
mov
stos
repnz
inc
pop
mov
testl
imul
dec
ds
mov
shll
clc
mov
xchg
push
test
xchg
add
ret
or
fistps
sub
inc
or
push
faddp
and
dec
mov
mov
ret
mov
mov
push
pop
imul
test
mov
in
inc
jb
imul
inc
cmpl
push
sbb
add
and
rcr
push
in
jp
js
loopne
push
push
cwtl
or
ret
lret
cmp
push
subb
cwtl
nop
add
outsb
mov
pusha
clc
add
mov
mov
sub
and
push
adc
test
adc
in
ja
dec
dec
inc
enter
test
stos
push
rclb
push
push
xchg
sub
pusha
scas
cmc
mov
stos
push
push
adcb
push
lods
rcrl
add
sbb
cmp
fnstsw
fs
xor
mov
xchg
sub
fadd
adc
sbb
sbb
cmp
pop
adc
in
lahf
aas
jbe
push
shll
orb
xchg
addr16
inc
inc
jecxz
rol
movsl
dec
jp
daa
push
repz
xchg
jbe
jmp
or
mov
pop
cltd
and
or
jmp
nop
xor
push
pop
and
add
mov
pop
pop
iret
pushf
add
fwait
sub
inc
pusha
adc
fcoml
shlb
xor
dec
push
lock
add
push
orb
add
xchg
xor
test
pop
add
cmp
sbb
addb
xor
es
outsl
loopne
je
aas
pop
mov
pusha
fistl
inc
mov
sub
or
bound
leave
jle
dec
xchg
jp
cmp
incb
loopne
stc
add
push
push
dec
push
ret
sbb
inc
shlb
jb
in
jne
push
or
sahf
popa
int3
push
nop
push
mov
xchg
sub
test
cmp
pop
and
add
jae
or
jae
cmp
jmp
test
aad
rorb
ficoms
push
ss
push
movsb
sbb
imul
adc
je
jmp
sub
push
xchg
push
push
fs
popa
daa
cmp
mov
stos
add
xor
shr
adc
out
inc
add
sub
inc
jl
movsb
cmp
jo
mov
aas
fcoms
nop
xchg
push
es
mov
xchg
inc
movsb
mov
repnz
inc
jbe
je
mov
pop
xor
and
and
mov
movsb
shll
aam
push
pop
cltd
fcoms
fdivl
inc
les
addb
in
aaa
ret
test
add
rorl
rolb
add
jp
sub
sbb
lea
add
sub
sub
sub
jo
insb
sub
or
jbe
or
or
or
mov
xchg
jge
cmp
jl
sub
lea
cmp
mov
add
jecxz
add
push
or
ja
or
sbbl
push
fidivrs
xchg
sub
push
repnz
call
and
add
sti
adc
aaa
clc
dec
mov
jmp
out
popa
mov
xchg
jne
js
sbb
dec
mov
mov
pop
sti
cmp
je
push
and
fs
jge
inc
inc
dec
bnd
imul
add
sbb
js
shrl
add
loope
clc
mov
pop
das
sub
daa
insb
je
js
xor
mov
sbb
movsb
mov
jmp
fwait
adc
sub
sub
or
xchg
mov
je
or
jns
mov
push
daa
sbb
jg
cmpb
sarb
sti
jge
pop
push
clc
das
inc
push
hlt
cmp
jl
cmp
jle
inc
xor
push
ret
js
add
inc
sbb
add
or
sbb
jecxz
dec
hlt
mov
popf
popa
popa
add
rcrl
lock
sub
addb
iret
cmpb
pop
test
cmpb
jne
inc
clc
outsl
push
cli
js
add
pop
xchg
mov
es
inc
pop
inc
cmpsb
push
jbe
jecxz
rclb
xor
dec
test
pop
lret
mov
add
in
jge
sub
jb
pop
stos
mov
sahf
cmpsb
loopne
lods
adc
mov
add
std
jne
adc
inc
adc
pop
adc
fisttpl
mov
dec
adc
aam
loope
sub
popa
and
into
adc
aaa
call
lods
nop
xchg
dec
pop
add
lock
mov
lea
scas
pusha
mov
add
rorl
cld
cmp
fadds
jns
dec
clc
sbb
movsl
test
dec
xchg
pusha
push
xchg
and
mov
add
in
push
pop
pop
or
cmpsl
pop
xor
je
xor
xor
movsl
add
adc
and
pop
scas
popf
xchg
mov
push
fnstcw
jle
popf
lods
push
lcall
lds
push
inc
out
add
dec
mov
sub
jno
xor
les
adc
jno
jne
imul
test
xor
repz
and
outsb
test
inc
ljmp
xor
push
jmp
sbb
rolb
filds
testb
jne
xlat
jmp
inc
sbb
and
xor
test
add
mov
nop
fwait
dec
in
arpl
pushf
pop
or
ret
jnp
imul
ret
and
mov
add
xor
or
xor
xor
mov
push
jbe
jb
scas
cltd
or
test
mov
xchg
push
jge
or
ja
adc
jo
push
aas
push
push
inc
cwtl
arpl
jns
outsl
xchg
inc
add
cltd
icebp
xchg
and
inc
or
aaa
add
popa
pushf
lea
pushl
xchg
push
and
dec
jno
lcall
loope
dec
outsl
mov
inc
cmp
inc
adc
mov
rorb
push
mov
lcall
cmp
pop
add
movzbl
es
sub
dec
adc
pop
or
adc
test
leave
add
in
movsl
add
jl
jmp
pop
mov
mov
xchg
shll
inc
sbb
push
dec
jle
loopne
inc
or
xchg
xchg
into
cmp
sbb
push
fwait
jmp
jbe
add
ret
cmpsl
sbbl
notl
pushf
aam
jl
loope
hlt
pop
jbe
adc
jle
push
jbe
mov
mov
stc
pop
movsb
repz
mov
cld
popf
or
mov
mov
sti
adc
cs
push
cmp
pusha
add
adc
pop
fdivrs
pop
push
jg
xchg
rolb
sub
and
dec
inc
sub
popf
jge
inc
out
scas
pushf
inc
push
rol
or
in
jmp
stos
xor
rolb
repz
mov
dec
ss
jle
fwait
mov
div
push
in
arpl
ret
sahf
mov
ja
mov
sbb
inc
ret
sbb
imul
shl
adc
sbb
sbb
insb
add
sbb
leave
flds
mov
pop
adc
nop
out
orb
inc
pusha
cmpl
dec
add
fstps
repz
sub
and
sbb
mov
push
and
xchg
push
cmp
inc
push
push
subl
int3
adc
sbb
and
gs
push
popa
repnz
lock
add
lcall
and
push
mov
out
stos
popa
mov
mov
dec
and
test
movsb
lock
adc
mov
adc
int3
or
es
or
scas
add
or
jg
add
fstl
fldz
fcomp
loopne
add
fnstsw
sub
fucompp
push
sub
fsubr
pop
faddp
cmp
push
jle,pt
mov
adc
sbb
jmp
xor
inc
fs
or
inc
lea
adc
cld
inc
dec
xor
inc
push
mov
pop
hlt
nop
xchg
or
xchg
xchg
sti
sub
das
pop
fs
push
lea
jge
jmp
mov
or
loop
jne
and
sbb
add
mov
jo
arpl
xor
push
fcom
out
inc
test
pop
movl
mov
pushf
jne
mov
jnp
mov
fldl
cmp
out
mov
and
test
and
lea
mov
sarb
sbb
mov
pop
adc
loopne
adc
test
fldt
add
or
fadds
pop
or
push
adc
fisubrs
mov
popa
outsl
jmp
mov
fsubrl
inc
jmp
xlat
or
out
jge
cmpsl
jns
shl
fimuls
and
cmpsl
push
enter
out
int3
push
xchg
ds
loopne
shr
dec
shl
fsqrt
mov
mov
fsubrl
in
insl
and
ja
clc
push
push
pop
std
jmp
mov
jle
push
cltd
and
inc
push
jae
or
jb
lock
stos
mov
sarb
inc
pop
inc
jl
sbb
shlb
ss
sbb
xlat
dec
or
mov
cmp
and
dec
jae
test
push
add
je
or
daa
pop
inc
cmp
call
adc
enter
ja
test
push
add
dec
dec
pop
sbb
pop
scas
cwtl
fs
sbb
push
dec
addl
inc
jno
jno
inc
cmp
cmpl
and
test
or
nop
push
xchg
and
sbb
adc
in
enter
mov
jge
sti
adc
push
imulb
pop
sub
add
mov
int
xor
add
jb
or
aaa
add
je
push
jne
push
push
inc
push
or
pop
inc
stc
cmpsl
repnz
jb
push
pop
sub
pop
or
dec
pop
jb
in
xchg
test
sbb
mov
cmp
mov
lock
jno
xchg
add
adc
sub
fmuls
insb
or
mov
xchg
xchg
xchg
or
sub
stc
jno
les
inc
imul
mov
sbb
and
push
mov
pop
and
jne
inc
jmp
lods
push
xchg
add
or
mov
mov
mov
jmp
inc
adc
xchg
add
bound
sbb
and
sbb
loopne
pushf
dec
sub
sbb
mov
push
lcall
clc
add
dec
or
mov
pop
test
js
pop
push
pop
data16
ficomps
fnstcw
cmp
xchg
mov
rcrb
xchg
mov
dec
loopne
int3
adc
jo
pop
test
pop
aas
push
rolb
pop
add
sub
fimuls
add
hlt
mov
ret
mov
aam
sti
and
sbb
pop
sbb
pop
xor
fs
jmp
push
mov
jbe
mov
push
enter
sub
pop
sub
mov
pop
or
jne
add
dec
jge
imul
je
vmovsldup
fmuls
xor
xorb
movsl
sub
add
mov
sahf
push
inc
sbb
stc
cmp
jbe
add
jb
leave
out
loope
jg
and
adc
push
mov
jbe
sahf
push
mov
xor
fs
cmc
push
push
mov
jl
mov
add
cmpsb
movsl
cwtl
jnp
cs
pop
jne
cmp
iretw
addr16
push
push
dec
jo
hlt
nop
mov
ret
push
sub
mov
clc
mov
in
or
inc
pop
add
movsl
je
fimuls
pushf
xchg
mov
nop
xchg
cmp
xchg
and
push
aas
adc
loopne
mov
push
xor
adc
mov
inc
loop
pop
cmpsb
les
mov
mov
or
jo
dec
fldcw
inc
mov
gs
and
pop
push
push
test
enter
mov
shlb
dec
setge
shlb
jl
dec
cmp
mov
lds
ljmp
mov
push
add
cmpsl
cmp
and
std
push
call
test
push
daa
int
jo
and
lock
push
fcoml
push
or
xchg
and
or
xchg
pop
sbb
push
pop
sub
sub
pop
pop
fistpl
popf
ljmp
adc
push
sub
dec
or
sbb
js
mov
pop
push
jae
sbb
bound
push
mov
inc
pop
sbb
gs
add
push
push
mov
mov
int3
sub
xor
dec
test
pop
pop
xor
les
jo
popa
fadds
xchg
inc
push
es
stc
add
add
loope
and
loope
pushf
mov
inc
mov
faddl
and
addl
jp
jns
aam
push
or
and
or
bound
add
lahf
mov
add
pop
add
push
ss
rorb
mov
adc
in
cmp
fldcw
ret
or
jmp
lods
dec
push
imul
sarb
aam
jbe
or
dec
dec
rcpps
dec
cmpl
rolb
mov
mov
xadd
mov
push
mov
sub
or
inc
jbe
cmpsb
mov
jge
push
adc
loopne
inc
sub
sbb
push
add
shll
lods
pop
cmpl
dec
and
icebp
sub
xchg
pop
test
ficompl
and
inc
sub
into
sarl
inc
pop
push
adc
push
ret
fucomi
je
push
mov
jne
addb
mov
ret
movsb
lock
negl
push
push
rcrb
ret
aas
loopne
bound
rcl
or
lock
sbb
dec
and
push
rcl
pop
imul
sbb
js
das
add
lds
dec
test
or
adc
jnp
fsubr
and
push
loopne
push
test
pushf
mov
dec
lret
adc
test
xchg
pusha
enter
mov
mov
or
cmp
pop
lret
sbb
mov
scas
mov
push
mov
mov
js
test
xchg
jae
je
sahf
ret
in
lods
in
pop
jl
fdivrp
mov
insb
cmp
loop
cmpsl
inc
pop
sub
add
roll
repnz
std
and
sbb
xlat
mov
xchg
sub
jg
add
pushl
cmp
adc
nop
inc
test
or
jae
mov
ss
in
push
inc
shlb
incl
in
lret
or
pop
aas
sub
sbb
into
mov
fnsave
lock
pop
xchg
add
mov
mov
push
loope
lret
mov
lahf
mov
mov
les
movl
add
dec
je
inc
sahf
inc
insb
sub
lret
fadds
or
aad
ret
int3
push
or
push
ss
cmp
add
xchg
sub
sub
and
incb
adc
dec
push
and
das
mov
pop
sub
mov
js
inc
mov
call
mov
add
js
cmp
adc
add
lret
push
add
pop
fnstcw
push
imul
ret
cmp
mov
dec
push
add
lcall
aas
or
cmp
pusha
xchg
push
jo
int
push
inc
sub
cmpsl
inc
pop
and
add
cmpsl
inc
sub
adcb
sbb
push
mov
bound
xlat
xor
add
fadd
cmp
jmp
add
dec
push
inc
or
mov
inc
repnz
add
leave
orb
add
mov
imul
sub
aaa
and
xor
cmp
mov
add
push
pushf
inc
mov
jno
cmp
and
adc
push
lock
sbb
dec
lcall
loopne
es
dec
jo
sbb
xor
cwtl
addb
and
clc
dec
arpl
add
rcll
xor
xor
jo
xor
loop
leave
out
adc
pop
je
mov
lret
icebp
jmp
inc
imul
cmp
sub
add
sub
ret
stos
movsl
mov
popa
aad
sbb
les
jmp
pop
pop
mov
in
mov
xchg
dec
lret
fldt
out
aam
rcrl
push
adc
push
sub
jb
jge
movsl
test
mov
fisttps
dec
mov
fmuls
inc
mov
enter
sub
add
sbb
lahf
cli
lret
adc
int3
mov
cmp
push
fcomps
imul
cli
add
imul
sbb
push
idivl
mov
mov
stos
hlt
andb
mov
xor
dec
add
mov
outsb
dec
jo
sbb
xchg
cmp
cmc
cmp
sbb
dec
dec
jo
or
or
lcall
loopne
mov
push
push
sti
add
je
push
pusha
sbb
cmc
mov
jp
mov
ret
add
push
call
sbb
aad
aaa
test
add
test
addb
mov
push
insb
xorl
lcall
cmp
mov
call
loope
in
add
add
lahf
and
jl
test
popf
sub
enter
test
inc
decl
shll
ret
gs
pop
add
loop
cli
push
sub
cmpb
sub
mov
movzbl
xor
inc
pop
or
out
adc
and
scas
add
add
or
push
jl
mov
lods
pop
pop
mov
pop
test
sub
pop
pop
mov
sub
adc
pop
jnp
pop
add
jl
setge
or
xchg
add
loope
stos
scas
insb
add
shrb
push
dec
loope
or
push
or
in
ret
mov
lods
mov
mov
sbb
cmp
add
inc
or
sub
add
push
and
pushf
mov
push
dec
xlat
hlt
or
push
cmp
iret
cmpsb
cmc
adc
xchg
lods
bound
hlt
add
dec
std
aaa
mov
cmp
cmp
jle
mov
or
and
jne
fld
sti
fdivrs
mov
adc
mov
cmpsb
and
cmp
mov
lea
add
add
fisubrl
cltd
cmpsl
pushf
adc
or
daa
sbb
jle
mov
lods
movsb
or
aas
sarl
and
pop
lea
or
mov
lea
jl
movsl
mov
xchg
pop
icebp
jl
or
jno
add
add
test
adc
pop
inc
rcrl
or
or
push
mov
inc
adc
or
ret
rolb
sbb
lods
fs
stc
mov
movl
dec
mov
mov
idivl
mov
lea
stos
mov
and
mov
sbb
add
inc
out
mov
xchg
mov
push
sub
mov
mov
loop
fcmovnbe
cmp
popf
adc
and
pop
es
mov
int
out
jle
incl
sub
pushl
out
fldl
pop
cmpb
es
stos
loope
push
hlt
xchg
add
push
pop
sbb
enter
xchg
jb
outsb
and
loop
jns
insb
addr16
dec
jmp
std
repz
push
nop
nop
cmp
sti
or
jp
mov
xor
inc
ss
enter
stos
in
adc
add
push
push
push
cmp
or
cmp
jbe
jne
rcrl
fcoms
cwtl
xchg
clc
fistpl
mov
les
mov
or
add
push
movsb
ja
in
cld
clc
or
sbb
cmp
cmp
std
mov
es
xor
ds
hlt
out
nop
adc
mov
and
or
dec
or
push
add
push
mov
lea
call
jnp
adc
enter
call
out
pop
mov
mov
inc
inc
push
mov
lea
cmp
jbe
fcoms
mov
push
push
and
mov
jno
pop
inc
pop
cmp
rorb
mov
pop
sbb
lahf
sbb
orl
push
jmp
adc
jmp
push
mov
sti
push
dec
mov
push
mov
adc
pop
adc
pusha
or
inc
xor
js
test
mov
add
jnp
stc
cmc
int
nop
dec
and
shlb
add
test
mov
push
and
sub
dec
or
pop
sarb
dec
cwtl
pop
jb
mov
test
add
in
lret
xor
pop
push
add
jle
lods
push
rol
mov
and
sbb
sub
movsl
andb
stos
sub
filds
xor
fdivl
lock
or
sub
cld
gs
inc
sbb
and
and
mov
ljmp
inc
in
mov
dec
in
hlt
inc
xor
cmp
js
push
mov
enter
dec
push
lret
xchg
mov
in
add
inc
mov
shl
cwtl
cmp
jecxz
cmpsb
push
fsub
das
add
jg
aam
or
fldenv
hlt
or
fs
popa
in
mov
dec
cmp
into
enter
mov
xor
pop
add
jnp
jne
cli
shl
fwait
sar
sbb
xchg
andw
push
or
fnstcw
xor
or
add
xchg
aaa
or
add
xchg
cwtl
adc
inc
add
and
push
jo
push
mov
out
cmp
mov
das
xchg
sbb
and
mov
cmp
xor
mov
das
mov
sbb
mov
ss
out
dec
cmp
inc
scas
pusha
dec
cmp
and
push
mov
adcl
addr16
sub
mov
dec
movsb
pop
jb
push
data16
cmpsb
jmp
sub
js
xor
outsl
jl
mov
xchg
pushf
adc
push
mov
or
ja
xchg
pop
lea
cmp
push
push
sbb
fs
cld
or
or
xor
arpl
xchg
xor
scas
loope
jmp
cmp
pop
mov
or
xor
add
add
xchg
mov
mov
xorl
mov
xorl
xchg
dec
ret
sub
and
inc
and
xchg
add
mov
mov
icebp
aaa
lea
jne
xchg
or
iret
pop
push
ret
jecxz
cmp
sub
dec
sub
out
and
fsubr
fisttps
je
ret
jg
mov
mov
fisttpl
cmp
or
push
add
fst
jl
xchg
lea
out
cli
pop
cmpsl
mov
rcrb
es
jne
jecxz
and
test
jge
test
jge
mov
jb
sbb
adc
pop
pop
aad
adc
adc
movsl
cmp
ret
cmp
leave
sti
decb
pop
movsl
imul
bound
shll
inc
inc
jmp
inc
pop
in
repnz
sub
pop
inc
push
insb
sbb
cmp
jno
gs
sbb
mov
push
push
jmp
add
add
test
repnz
mov
or
sub
push
clc
or
fimull
adc
arpl
cli
mov
add
int3
jae
fidivl
test
or
fistl
add
ret
clc
mov
add
inc
int3
or
cs
cmp
lea
and
and
xchg
cmpsl
aam
xchg
mov
ljmp
mov
inc
and
and
mov
or
int
cmp
xchg
insl
fcoms
and
inc
in
aam
inc
je
xchg
and
dec
mov
inc
mov
push
jne
sub
cwtl
bound
dec
add
lcall
addr16
add
cmp
push
or
and
mov
dec
add
sbb
push
mov
fsubrs
jnp
in
aam
sbb
and
push
shlb
or
jo
or
nop
mov
lods
add
dec
clc
or
sub
cld
je
jae
jne
inc
je
outsl
cmp
sub
fisubrs
sbbb
or
inc
inc
ss
xchg
inc
loop
and
push
cltd
push
mov
orb
jle
xor
fistps
sbb
loopne
pop
push
dec
sahf
or
adc
add
dec
cmpsb
mov
shlb
mov
pop
scas
or
inc
push
or
mov
enter
es
or
xchg
adc
or
pop
add
adc
lock
cmp
clc
add
lahf
je
xchg
mov
or
inc
fldenv
inc
xor
xlat
fdivl
test
sti
dec
pop
cmp
add
mov
dec
loope
filds
mov
icebp
push
mov
xlat
xor
mov
test
cmp
pop
add
popa
hlt
lods
xor
imul
sbb
mov
imul
std
pop
mov
sub
push
addr16
jne
int
xchg
stos
jbe
inc
sahf
push
insb
inc
cmp
xor
jle
loope
sbb
lea
icebp
add
push
jge
aaa
and
incb
outsl
add
cmp
adc
cmp
jmp
adc
ret
psubsw
lock
or
rorb
pop
test
xor
shr
xor
adcb
adc
pushf
sahf
loopne
loope
push
not
loop
movsb
mov
ret
pop
cmp
push
movl
fmull
cmp
jbe
add
add
mov
or
or
out
and
or
inc
push
push
test
pusha
mov
inc
notl
stc
smsw
pop
xchg
mov
mov
sub
jb
pop
sbb
adc
mov
stos
test
add
adc
es
pop
adc
and
clc
adc
push
inc
push
pushf
xor
fs
hlt
push
mov
add
push
out
mov
loop
dec
cmp
sbb
iret
jne
push
or
jb
push
and
mov
xor
push
inc
rolb
and
addr16
sub
mov
cmp
sub
cmc
sbb
iret
out
push
and
dec
jmp
push
dec
ret
and
cmc
push
lret
stos
pop
pop
sub
add
sbb
cld
shr
int
mov
sbb
mov
in
popf
ja
adc
test
repnz
ja
and
xchg
inc
dec
inc
and
jmp
pop
cmpsb
xor
insb
push
imul
pop
lods
inc
lcall
adc
push
lods
fwait
pop
insb
rol
shlb
inc
add
adc
inc
add
add
add
add
repnz
sbb
and
mov
and
pop
pop
add
sub
mov
or
inc
mov
into
push
push
lret
lock
push
or
and
and
pop
xor
and
add
testl
xchg
adc
jle
and
mov
mov
and
inc
mov
jbe
xchg
push
add
mov
mov
push
scas
or
pop
jo
add
sbb
push
inc
add
push
xchg
push
mov
or
or
mov
jae
mov
repnz
cld
and
push
inc
push
jns
or
mov
or
and
int
push
and
sub
shll
sub
jle
cmp
cmpsb
mov
ljmp
enter
fsubs
lods
jecxz
or
xor
les
sub
sub
mov
test
xor
inc
ret
or
push
add
sbb
or
add
xchg
dec
adc
xor
push
fs
shl
cmp
fs
and
iret
push
fdivr
and
xor
clc
and
xor
adc
push
rcll
xor
cmp
inc
mov
mov
xor
and
adc
sub
cmp
push
push
in
les
add
fidivrl
popa
lods
stc
movsb
mov
bound
mov
je
and
ret
inc
xchg
and
cli
inc
push
movsb
ficompl
push
je
movsl
sub
lock
push
xor
iret
xor
dec
sbb
mov
lds
daa
push
adc
fistpll
add
inc
sub
mov
inc
pusha
xchg
adc
mov
xchg
fsts
xchg
push
cwtl
outsb
sbb
sub
dec
dec
xchg
out
mov
or
sti
movsb
test
insb
fs
pushf
push
push
xchg
xchg
fxch
mov
lods
dec
mov
mov
mov
xor
shlb
mov
mov
mov
mov
or
xchg
adc
sbb
enter
pop
fnop
test
ss
call
push
lea
loopne
mov
cmp
outsb
flds
test
jmp
aaa
sbb
mov
cmpsl
repnz
lcall
xchg
xor
icebp
cld
push
daa
cmp
inc
bound
movsb
mov
call
insb
rcl
ficoms
add
lahf
fisubrl
dec
mov
add
lods
xor
mov
and
mov
in
mov
ds
adc
and
loopne
loopne
push
and
sbb
movsb
into
or
scas
sti
sub
push
push
subl
mov
mov
cmp
das
pop
test
imul
adc
jmp
fwait
or
lret
sub
xchg
hlt
push
orb
or
sub
xchg
and
cmp
pop
scas
ret
lret
xchg
pushf
je
adc
lods
and
shrl
pop
cli
sahf
jmp
push
test
xorb
and
mov
add
xchg
iret
or
sub
and
and
push
rolb
int
shr
mov
notl
push
pushl
push
and
adc
or
mov
or
push
hlt
and
xlat
lcall
mov
mov
dec
cmp
pop
adc
fisubrl
mov
push
push
repnz
in
pop
dec
cmp
push
or
in
adc
nop
data16
mov
add
xchg
adc
xor
fstps
push
addb
push
pop
orl
xchg
cmp
je
jb
shrb
js
mov
mov
sti
stos
ja
dec
je
or
and
test
gs
jae
xlat
rol
jmp
adcl
add
pushf
daa
adcb
fcomps
nop
push
lods
dec
jecxz
in
push
icebp
cmpsb
push
cmpsl
jno
stc
sbb
lret
xor
leave
or
mov
pop
and
pop
push
mov
fsubl
fisubl
push
fstl
fdivr
in
and
enter
mov
xor
aaa
mov
inc
call
dec
rolb
in
inc
pop
cwtl
and
adc
and
dec
daa
popf
adc
push
icebp
inc
loop
add
mov
cmp
mov
cmp
addl
mov
mov
inc
xchg
rcll
or
push
insl
add
cli
pop
and
in
sbb
sub
pop
dec
push
or
push
mov
mov
dec
fstpt
push
push
in
lahf
inc
sub
mov
cmp
mov
jp
in
add
lea
xor
dec
ror
fwait
adc
test
jne
ffreep
sub
xor
hlt
imul
add
push
daa
nop
test
inc
popa
mov
scas
xchg
push
push
add
push
outsb
mov
fisttpll
xchg
push
sbb
les
add
int3
mov
sar
xchg
scas
loope
popa
shll
cld
lea
test
or
insb
mov
nop
shlb
or
or
and
mov
lea
enter
sbb
in
add
jmp
and
pop
pop
xor
vmovq
push
test
pop
test
and
js
decl
or
and
inc
adc
lret
mov
sbb
add
adc
rorb
scas
add
loop
dec
xchg
push
dec
lock
mov
clc
push
or
push
and
insl
add
add
ljmp
bound
adc
test
adc
dec
push
mov
pop
fwait
sub
cmp
test
cmp
push
and
or
mov
push
and
mov
sahf
popf
sbb
cwtl
push
xchg
das
loop
jp
push
xor
push
inc
cmp
push
push
add
in
or
add
adcl
dec
fdivs
mov
jne
mov
jmp
mov
xor
jns
cwtl
nop
addl
cmpb
push
xchg
orl
or
data16
repnz
pop
pop
jb
add
add
push
add
pop
loopne
xchg
hlt
sub
push
movb
xor
sbb
xor
imul
and
lock
bnd
sub
mov
pushf
sub
push
fistps
repz
add
mov
lea
mov
ss
int3
rcl
push
xor
std
inc
adc
arpl
dec
sub
dec
pop
xor
rcrl
xor
ss
scas
es
sbb
push
mov
sbb
out
das
push
jecxz
lret
loope
push
or
sbb
pop
jbe
cmp
pop
push
outsl
push
push
jmp
dec
adc
push
push
loopne
cmp
push
mov
xor
adc
add
or
jbe
push
test
mov
test
lods
lea
push
inc
adc
and
into
in
jl
push
in
adcl
push
rorb
test
or
dec
and
xchg
push
sti
je
push
inc
shl
pop
pop
push
adc
push
mov
add
and
xorb
jbe
cltd
jmp
sbb
push
xchg
mov
fsubrl
daa
jo
cmp
sbb
outsb
inc
add
mov
loope
jb
add
xor
lock
and
iret
cmp
xor
mov
xlat
jl
add
adc
or
dec
repnz
xchg
push
push
stc
pusha
or
pop
ret
or
pop
add
mov
mov
sub
mov
push
lods
lret
cmp
sahf
or
xor
push
pusha
sub
cmp
jns
push
push
cmp
jo
jae
push
jo
or
adc
jo
movl
call
mov
dec
inc
push
mov
mov
fs
add
enter
leave
shr
xchg
mov
sbb
subb
mov
push
hlt
movntps
hlt
jge
adc
movsb
xor
shr
mov
adc
pop
xchg
add
iret
mov
iret
xor
dec
movsl
or
popa
push
cmpsb
jo
addr16
mov
or
prefetch
or
fwait
pusha
loopne
andb
call
sub
and
add
mov
out
or
sbb
icebp
pop
enter
push
pushfw
test
int
mov
inc
jnp
pop
mov
clc
rcrl
mov
stos
mov
mov
fwait
int
stos
push
rolb
dec
cmc
ret
imul
movsb
mov
sbb
mov
xor
add
rol
lcall
mov
pop
ret
andb
cmpsl
pop
xlat
rcl
adc
cmpsl
fmuls
add
inc
cmc
cmp
fisttpl
mov
add
loopne
dec
js
sbb
and
mov
inc
or
mov
mov
arpl
lea
add
ret
push
in
xor
lcall
push
mov
ror
xor
shr
xor
idiv
ljmp
mov
rol
xor
shr
xor
add
add
add
mov
lahf
dec
orb
hlt
fs
or
mov
push
or
and
xor
add
add
aam
sub
jbe
or
push
mov
sar
imul
or
testl
cli
and
and
cwtl
mov
xchg
push
aam
xor
push
repnz
cmp
mov
repnz
imul
fdivrl
pop
push
or
xlat
cmp
push
rol
in
rcl
add
add
push
mov
xor
fsubr
sbb
call
call
dec
xor
int
cli
mov
rol
imul
push
xor
and
add
loopne
dec
lcall
aam
xor
inc
in
shl
or
cmp
ud2
and
bound
push
bound
andb
and
les
mov
adc
mov
call
and
cwtl
loopne
in
dec
push
sbb
imul
lods
movsb
aam
pop
xchg
jge
push
xor
or
int3
lcall
in
push
xor
in
mov
clc
and
and
out
iret
or
xor
and
roll
lock
and
mov
jb
mov
inc
jo
ret
push
jo
ficoms
add
mov
movsl
pusha
je
xor
mov
iret
push
loop
mov
imul
add
add
pop
jbe
sti
rcll
call
lretw
stc
loope
in
push
clc
jp
push
and
add
gs
fmul
add
push
cmp
enter
call
stc
xor
inc
mov
push
fmuls
loopne
pop
jo
cli
stos
adcb
aam
aaa
cmp
imul
in
in
pop
inc
sub
xor
out
rolb
inc
aaa
lret
loopne
xor
xor
dec
push
sbb
inc
xor
roll
add
loopne
or
jb
call
inc
bnd
add
push
inc
or
add
sahf
dec
pop
xchg
pop
mov
dec
xor
rorb
push
and
dec
xorb
and
nop
out
fs
push
pop
xchg
or
jo
test
lcall
push
xor
push
fimuls
rol
push
or
enter
je
add
jae
pop
fs
and
inc
pusha
js
push
pop
and
xchg
movsl
and
xchg
or
repnz
rolb
dec
sahf
and
dec
shr
and
add
cmpsl
jl
movsb
shlb
stc
test
addr16
stc
mov
adc
rorb
inc
dec
jb
test
mov
dec
shll
sbb
mov
or
and
add
and
loope
mov
add
orb
aas
pop
add
sub
fsubrl
mov
movb
inc
cld
sbb
xchg
push
pop
push
lea
or
add
sub
pop
pop
fiaddl
negb
and
adc
enter
adc
sarb
mov
rorb
or
or
mov
push
add
adc
cltd
in
loop
in
outsb
push
inc
jae
mov
sub
icebp
xor
loopne
lea
jmp
lea
push
sbb
jns
out
mov
add
outsb
fbstp
pop
dec
jne
pop
or
pop
add
mov
lock
ficomps
or
cmp
jbe
or
dec
cmp
dec
popa
sub
outsl
mov
jae
push
pop
fadds
rep
cli
popf
push
adc
mov
outsb
mov
scas
or
mov
push
pop
loopne
ror
add
xchg
or
xchg
ljmp
mov
cmp
leave
outsl
ret
adc
shlb
aaa
nop
push
mov
sbb
sbb
push
cli
push
fdivl
add
dec
lea
xchg
jo
xchg
lcall
or
es
cmpsb
or
in
xor
xchg
nop
mov
rcrb
aam
movsl
inc
dec
insl
or
cmp
pusha
je
mov
pop
ret
jo
rcll
cs
fsub
dec
and
inc
push
push
lock
adc
cmpsb
ljmp
adc
leave
xorl
jl
sub
or
xchg
cld
pusha
xchg
inc
pop
jae
mov
andl
inc
mov
cmpsl
test
nop
dec
or
ret
in
jge
dec
add
dec
add
xor
imul
iret
jo
or
push
jns
loope
inc
sub
add
pop
daa
or
push
xor
dec
adc
adc
or
imul
iret
ljmp
adc
dec
sub
and
xor
inc
sbb
mov
ret
push
sbb
dec
mov
adc
and
sub
orb
mov
loope
push
subl
test
inc
add
push
or
adc
push
sbb
mov
jno
pusha
push
mov
loopne
jnp
add
adc
cmc
sub
cmp
inc
cmp
sub
cmp
fidivs
sub
push
or
and
add
push
iret
mov
decb
xchg
loopne
add
sbb
outsb
and
jle
es
push
test
dec
mov
pop
mov
push
out
sarb
arpl
add
push
inc
add
sbb
imul
and
loope
mov
jmp
jl
pop
pop
dec
sbb
hlt
and
pop
ficoms
adc
loope
sbb
dec
xchg
int3
push
mov
xor
shlb
nop
adc
and
ja
sbb
and
and
icebp
pop
inc
sub
jns
cltd
fiaddl
inc
cmp
jno
test
popa
imul
fsubrl
mov
ja
mov
bound
sbb
xor
inc
dec
fcomps
add
lahf
push
popa
sub
jnp
add
mov
in
filds
scas
add
jae
push
jb
test
add
cli
sbb
inc
or
mov
jge
call
add
and
subl
cli
or
or
testb
or
mov
mov
enter
and
insb
loopne
or
adc
inc
mov
and
and
jmp
testl
jne
push
or
mov
add
and
fwait
add
pop
add
adcb
dec
mov
xchg
mov
inc
or
dec
js
xor
mov
rclb
and
inc
adc
bnd
sbb
xor
adc
add
jbe
cmp
addr16
ds
add
mov
push
daa
lcall
xchg
pusha
sub
adc
sub
jg
dec
ret
add
cmp
call
xchg
test
mov
sbbl
sub
xchg
ret
and
stc
in
inc
lods
and
xorl
mov
lea
fdivs
push
dec
out
jge
fdivs
popa
xorl
pop
hlt
out
adc
add
cmp
push
mov
mov
sbb
xchg
movsb
popa
jmp
filds
xor
push
pushf
mov
sub
jnp
add
outsb
xchg
adc
cmp
mov
js
cmp
mov
pop
or
push
lsl
and
or
adc
pcmpgtd
mov
xchg
mov
or
mov
and
xchg
push
nop
sbb
inc
add
mov
clc
aaa
add
lock
cli
sti
jge
or
test
jbe
push
push
cmc
mov
lods
movsb
mov
and
mov
push
mov
jmp
lcall
push
enter
push
cmp
or
stos
jecxz
pusha
mov
sbb
insl
cmp
xor
imul
mov
je
fldenv
mov
mov
daa
push
add
push
in
adc
ret
lcall
aaa
roll
loopne
je
ds
jo
pcmpeqb
xchg
mov
int3
sahf
lods
and
hlt
hlt
orb
push
rcrl
and
xchg
sub
push
cltd
sub
push
mov
add
lahf
push
inc
popf
inc
loopne
popf
xchg
push
lods
inc
lods
stos
add
stc
mov
call
imul
jle
adc
or
sbb
test
jg
setl
and
pushl
add
mov
insb
sub
cmp
addb
lret
jbe
sub
add
orb
pop
movsb
push
pop
cli
mov
out
add
adc
dec
sbb
repnz
adc
cmp
lcall
pop
mov
mov
testl
dec
bound
mov
movsl
sbb
inc
cmc
push
sub
sahf
xchg
jbe
push
push
ja
std
dec
mov
pop
pushl
lcall
fisubl
xor
lret
cs
jecxz
movsb
repnz
pop
xchg
xchg
cs
xchg
mov
and
sub
clc
push
xor
and
dec
js
sbb
insl
add
mov
add
and
and
or
test
inc
les
pop
or
cld
inc
add
scas
xor
decl
data16
clc
push
ja
imul
sub
mov
popf
xchg
xlat
add
test
jbe
filds
lea
test
aam
inc
jb
add
mov
mov
push
dec
mov
leave
or
jp
add
pop
scas
bound
dec
loop
sub
xor
inc
les
add
pop
inc
aaa
inc
and
or
bound
stc
ja
pop
lock
cmp
jb
jmp
push
mov
adc
shl
jns
inc
mov
in
outsb
adcb
mov
bound
inc
push
in
in
mov
push
jmp
mov
lods
in
jno
out
lds
push
stos
jae
mov
adc
and
test
adc
addl
in
ret
xlat
or
xor
and
enter
push
mov
dec
fnstenv
popf
mov
dec
xor
jg
pop
ret
int3
jmp
lods
xchg
mov
loopne
mov
hlt
xor
mov
adc
ss
bound
adc
jle
shrb
stc
icebp
out
jle
cmpsb
mov
mov
inc
cmp
frstor
fimuls
cmp
mov
jle
in
cmp
sub
mov
icebp
adc
or
sub
addr16
sbb
pop
cwtl
xor
dec
mov
jne
mov
mov
push
fimull
das
xor
incb
rorl
mov
or
popa
and
jo
out
dec
add
add
imul
call
test
fnstcw
jge
je
je
icebp
or
or
pop
push
and
add
pop
inc
lcall
push
inc
cmp
jl
pop
mov
dec
lahf
push
mov
adc
jle
shlb
push
xor
push
sub
dec
pop
arpl
or
pushf
adc
test
jecxz
push
push
xor
nop
insb
sbb
jle
dec
add
xor
push
cld
cmc
xor
pop
ret
push
das
sub
mov
adc
inc
insl
imul
inc
sub
jns
mov
xor
aaa
xor
adc
lea
add
adc
adc
dec
lea
jbe
test
out
mov
incl
inc
cmp
inc
sbb
and
comiss
in
inc
movsb
and
js
pop
pop
xor
in
pop
or
andb
add
or
mov
loopne
in
and
loope
and
add
gs
imul
jmp
add
xadd
add
lret
mov
push
adc
adc
movsb
mov
push
pop
push
mov
test
frstor
jmp
jp
jge
adc
iret
push
push
mov
mov
lcall
add
clc
sub
mov
push
xchg
add
sub
lahf
inc
xor
pop
sub
pushf
mov
fs
dec
js
inc
xor
cli
sub
jge
jno
add
add
mov
sar
popa
add
sbb
aas
cmp
lret
jmp
sahf
enter
jecxz
int
jp
jle
push
mov
xor
dec
std
jl
xchg
mov
test
jge
and
adc
add
mov
lock
je
or
adc
dec
cmp
push
jne
lea
cmp
stos
xlat
push
divb
add
xor
or
add
dec
push
loop
js
mov
pusha
aaa
adc
cmc
jns
adc
test
and
push
rcll
add
popf
mov
xchg
xchg
push
outsl
push
dec
add
insb
sbb
cltd
add
jae
mov
out
mov
add
ja
dec
adc
dec
and
or
sub
cmp
mov
ficoms
addb
sbb
or
dec
mov
adc
cmp
mov
out
push
jo
test
imul
inc
sub
push
loop
das
rcr
xor
or
jbe
jmp
dec
dec
sub
push
loope
mov
add
jle
loopne
fldt
push
mov
fldt
pop
push
pop
mov
or
jmp
push
js
cs
cmp
jmp
das
jnp
cmovns
sub
cmp
cwtl
mov
mov
xor
add
mov
or
out
and
pop
dec
jb
push
sbb
mov
pop
push
sub
loop
mov
gs
inc
and
jecxz
add
in
sbb
pusha
cmp
sub
and
test
and
or
xor
insl
popf
sbb
add
lcall
loop
icebp
testb
insb
adc
dec
and
or
xchg
xor
adc
in
dec
jnp
xor
pushw
sbb
mov
popa
xchg
mov
adc
insl
pusha
in
pop
ret
jae
add
bound
pusha
movb
adc
lock
sbb
repz
mov
in
or
mov
rol
mov
stc
mov
fsubrl
in
je
and
or
push
adc
add
cmp
sub
mov
in
in
or
or
out
inc
push
add
jecxz
sub
push
mov
fstpl
sub
push
jne
and
mov
mov
stos
call
push
mov
loope
or
push
cmp
int
and
addl
inc
mov
dec
cli
aam
adc
jnp
dec
jno
gs
adc
addb
dec
roll
ret
pop
cmp
and
bound
add
pusha
ret
mov
push
fnsave
mov
sbb
mov
sahf
adc
push
mov
pusha
adc
xor
inc
mov
mov
and
int3
clc
add
dec
loope
sub
sub
mov
dec
dec
rolb
in
push
das
aas
mov
xchg
cmc
mov
pop
mov
cmpl
outsb
lock
push
mov
out
add
fdivrp
loopne
pop
mov
pop
push
shll
fstl
push
adc
xchg
ret
adc
lret
xchg
pop
cltd
adc
pop
roll
incb
sbb
test
adc
in
leave
mov
or
mov
icebp
outsl
cmpsl
adc
sbb
mov
push
in
mov
orl
inc
add
fidivl
bndstx
mul
inc
addl
repnz
cmp
jle
dec
add
mov
mov
movzwl
inc
cmp
push
mov
cmp
in
push
test
mov
dec
mov
cmp
call
leave
or
xor
cwtl
push
or
push
das
sub
in
test
push
stos
xor
or
jo
jmp
jne
repz
jbe
imul
in
jg
shl
arpl
or
mov
or
sub
insb
inc
or
adc
cld
nop
or
jo
fidivrs
add
jne
push
cmp
lock
cmpsb
addb
outsb
push
jmp
sub
inc
jo
jne
addl
xlat
in
popa
stos
nop
or
add
test
lret
inc
clc
es
lods
pushf
ret
add
insb
cs
pop
ror
mov
add
clc
stos
lret
jne
and
mov
movl
xor
sub
mov
pop
inc
adc
sub
push
sarl
sbb
dec
push
pusha
sub
mov
testb
je
cmp
mov
push
add
push
add
cmp
rol
add
cmpsl
imul
jne
push
adc
add
add
fstp
add
mov
sub
cmpsb
cltd
jge
inc
xor
sbb
cltd
lret
outsl
mov
mov
adc
adc
cmp
sbb
xor
jg
sbbl
in
shlb
stos
pushf
sub
jmp
call
fdiv
jecxz
ret
adcl
and
jne
jg
xor
mov
shlb
sbb
dec
hlt
push
xchg
loope
sub
mov
pop
push
sub
popa
jo
and
push
inc
pusha
movsl
stc
pop
test
je
insb
inc
hlt
push
push
mov
insb
data16
sbb
or
add
ret
icebp
inc
mov
ljmp
xchg
jno
cmp
test
or
mov
dec
push
push
sbb
mov
xchg
pop
movsl
add
push
adc
fistpl
adc
add
pushl
xlat
mov
mov
rorl
lock
inc
sbb
sbb
pop
push
pop
add
repnz
roll
add
enter
cmpb
leave
jmp
lea
mov
sub
sahf
addb
adc
inc
lock
xchg
bswap
lret
into
jne
lds
sbbb
shrb
and
clc
mov
xor
lret
jmp
test
dec
pop
pop
xor
repnz
adc
fs
sbb
and
daa
into
cmp
call
std
cwtl
dec
ss
aaa
nop
inc
cli
or
int
xor
sub
cmp
out
mov
xchg
inc
xchg
bndstx
pop
and
pop
and
pop
jb
scas
aas
xor
jne
cmp
jne
push
mov
rcrl
adc
push
repnz
xor
lret
add
scas
ss
xchg
lahf
jne
dec
mov
pop
dec
iret
scas
jae
stc
iret
xor
subl
xchg
lcall
jb
mov
nop
push
or
cs
sbb
mov
push
add
sbb
dec
adc
movsl
pop
push
mov
sub
pushf
pusha
mov
sub
sub
adc
sub
mov
jo
addr16
lahf
lret
aaa
pop
add
hlt
cltd
push
and
or
rcll
push
pop
fwait
pusha
jo
lcall
je
inc
movsb
loopne
or
and
xlat
mov
cs
cmp
and
cld
sbb
or
lcall
loopne
inc
jmp
add
or
rolb
cmp
int3
add
sarl
xlat
push
je
mov
add
dec
decl
lahf
and
add
and
add
add
cmpsb
insl
ret
rolb
add
adc
add
inc
cld
jb
test
mov
or
in
lcall
add
int
imul
inc
push
cmp
andb
push
adc
inc
je
imul
mov
and
outsl
gs
push
nop
loope
outsl
push
mov
test
push
mov
popa
cld
mov
sub
jo
loopne
or
lds
popa
sbb
test
fiadds
adc
jnp
in
add
or
or
adc
mov
cld
pusha
dec
adc
mov
clc
push
mov
in
pop
mull
add
add
sbb
push
loopne
cmp
insl
loopne
ljmp
or
and
adc
push
js
adc
lods
add
cmp
aam
xchg
add
bound
lret
sub
aad
or
sub
adc
jae
mov
stos
push
pop
pusha
inc
test
icebp
jecxz
scas
mov
aam
adc
add
fidivl
pop
pop
mov
jbe
popf
jmp
bound
pop
pop
ss
sbb
push
push
sub
sub
subb
adcb
enter
push
fsubrs
cmp
jmp
push
popa
jns,pt
addb
sub
add
push
xchg
pop
in
test
cmp
pop
xchg
push
or
jne
push
pop
fiaddl
xchg
or
jne
pop
ja
in
jmp
jecxz
cld
stos
aas
push
push
sub
push
add
push
data16
icebp
push
ja
mov
ljmp
sub
xor
mov
sbb
xor
rcrb
stos
pop
cmp
cmp
sbbl
adc
xor
add
ja
adc
imul
clc
jae
lret
rorb
cmp
into
add
dec
or
xchg
push
rcpps
adc
shrb
inc
lea
jle
je
sar
xor
push
into
mov
mov
push
lods
repz
pop
add
xchg
int3
orl
and
mov
add
testl
ja
sbb
ret
decl
clc
jo
andb
jno
and
or
sbb
adc
mov
mov
mov
sub
sbb
jnp
js
sub
gs
inc
mov
dec
sub
pushf
jmp
in
dec
xchg
cmp
mov
lods
add
gs
add
adc
daa
add
sbb
jbe
repz
pop
rolb
or
icebp
call
sbb
push
pop
sub
mov
mov
sbbb
movsb
jbe
mov
cmp
pop
and
or
insb
pop
inc
inc
inc
test
stos
and
cmp
pop
out
ret
lahf
sub
cmp
and
xchg
aas
xchg
mov
fdivs
sahf
mov
je
add
je
mov
add
ja
push
pop
xor
and
cmp
push
jmp
push
mov
add
and
cmc
push
inc
ss
fisubrs
mov
out
in
mov
fidivs
mov
xor
or
xor
shll
insb
stos
inc
mov
sbb
mov
insb
or
out
iret
xchg
sub
jne
je
jmp
or
ret
jno
mov
dec
sub
sub
movsb
dec
out
jns,pt
shlb
inc
sbb
add
sbb
sub
cltd
jg
jmp
jmp
scas
xchg
cmp
xlat
nop
fcompl
xor
scas
les
aad
inc
jo
test
dec
mov
cltd
fsubrs
aaa
and
sbb
scas
pushf
es
test
leave
dec
inc
decb
je
cmp
pop
and
sbb
sbb
xor
xor
jae
adc
push
inc
arpl
sub
dec
jmp
ret
or
jbe
sub
sub
inc
sbb
or
or
outsl
je
dec
cmp
shlb
jmp
dec
inc
add
xchg
es
int3
cld
ss
jb
push
mov
lahf
pushf
push
push
and
mov
push
adc
xchg
divl
add
cmpsw
and
cmpsl
add
cltd
adc
sbb
divb
pop
test
adc
pushf
cmp
call
or
les
cltd
sub
and
scas
lods
xchg
sub
mov
and
insb
stos
adc
ja
dec
je
pop
sub
clc
stos
jmp
adc
pusha
jne
loope
fwait
adc
rorl
pop
popf
js
jbe
cmp
pusha
mov
fstpt
sbb
shlb
dec
sub
mov
mov
jge
push
bound
mov
ret
add
inc
js,pt
xor
jecxz
and
dec
add
shrb
cltd
into
mov
and
wrmsr
mov
jle
add
add
sbb
mov
outsb
ljmp
pop
and
cmp
mov
and
jg
mov
clc
jg
fs
test
movd
movaps
jo
push
enter
shlb
jle
adc
outsb
xor
cli
rcl
lret
mov
mov
or
xchg
or
jg
je
cmpl
jnp
mov
mov
jnp
add
adc
or
add
adc
mov
mov
pop
add
fadd
roll
add
ficompl
addps
int
add
jnp
fcmovb
sbb
sbb
sub
fistpl
xor
sbb
in
fs
imul
lret
stos
add
cmp
or
xor
xor
push
inc
mov
incl
loopne
xor
aam
adc
sbbb
pop
stc
push
push
ret
jge
mov
jge
sub
push
ret
jge
pop
ret
add
inc
aad
fldl
pushf
addr16
sub
xchg
or
sub
or
push
pop
add
sub
fmul
mov
jb
aaa
std
sbb
je
sub
mov
adcl
rol
idivb
loopne
add
or
icebp
lret
adc
stos
mov
dec
jb
lock
ljmp
push
daa
out
int3
add
pop
mov
pop
adc
push
mov
add
inc
repnz
sbb
jb
push
pop
fisttpl
mov
push
pop
and
cmovs
scas
jp
xor
mov
inc
adc
sub
stc
or
rep
jmp
ret
jne
mov
insb
out
shll
das
lea
cmp
es
push
sbb
and
mov
pop
jb
inc
mov
or
scas
adc
pop
fiaddl
dec
push
dec
add
add
and
fwait
or
sahf
out
mov
orb
jo
pusha
repz
out
mov
mov
call
iret
in
in
lock
hlt
and
clc
cld
adc
mov
lock
fldcw
sbb
mov
inc
mov
lods
sbb
nop
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
or
stc
or
std
cld
out
inc
xor
lock
stc
outsl
mov
mov
inc
xor
push
push
js
sbb
jns
mov
mov
push
jbe
out
add
cmpsb
and
push
add
nop
dec
dec
addr16
in
aad
lcall
dec
repz
push
add
or
repz
cmp
and
xor
sbb
repz
sbb
sbb
adc
repz
or
or
dec
enter
inc
push
and
push
push
ficoms
pop
jns
ja
andl
and
xchg
add
jbe
mov
and
mov
pushf
cltd
aas
icebp
and
daa
mov
in
or
jne
scas
nop
fbld
insb
add
lcall
lock
xchg
or
push
sbb
cmp
or
add
mov
adc
mov
push
push
inc
inc
add
fldt
and
mov
jmp
jp
je
mov
sub
rorl
sahf
mov
pop
dec
xor
xlat
fnstcw
cltd
bound
mov
jne
imul
add
and
mov
cmp
mov
cmp
je
arpl
adc
or
cmpl
sbb
call
add
or
popf
sarb
push
hlt
sbb
loopne
lock
mov
fucomi
add
dec
sub
in
iret
jne
movsb
test
push
mov
test
lret
add
push
xchg
inc
pop
mov
aas
mov
fists
decl
mov
or
mov
push
jne
inc
cmp
inc
xor
sub
mov
fsts
mov
inc
mov
xor
cmpsb
push
push
adc
xchg
or
and
pusha
jmp
dec
push
adc
and
or
rorl
inc
cmp
cmp
cmpsl
sub
sbb
mov
sbb
cs
fwait
dec
adc
cmp
lret
adc
pop
aam
adc
mov
xor
or
or
and
mov
cs
daa
push
and
scas
mov
imul
cmp
popf
xchg
xor
daa
pop
add
add
enter
lock
sbb
ret
jge
idivl
inc
shlb
dec
leave
sbb
or
push
mov
pop
cmp
mov
mov
push
movsb
push
rol
inc
inc
cmp
aam
lret
jne
sbb
jg
shl
shl
jmp
jnp
inc
cmp
push
in
inc
adc
movl
add
fwait
in
movb
rcrb
cmp
and
cmp
xchg
dec
aaa
xor
rolb
xchg
add
stc
ret
add
je
add
or
or
orl
or
jle
cmpsl
adc
test
daa
lret
push
dec
push
mov
aad
and
jne
dec
repnz
dec
fadds
les
fdivrs
pop
fs
mov
insl
push
push
xor
xor
sahf
insb
ja
test
push
ret
dec
mov
js
fnstcw
dec
pop
inc
and
shlb
incb
pop
into
and
movb
lea
neg
mov
sti
outsl
arpl
testb
jbe
add
jmp
or
mov
inc
ds
jbe
mov
cmp
jb
sar
neg
ss
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
icebp
outsb
loope
lret
ret
adc
out
ror
jp
jne
test
or
add
push
or
pop
mov
cmpsl
sbb
cmp
lods
push
push
xor
call
mov
lret
dec
fildll
cmp
jb
lea
cmpsl
inc
int3
lcall
lcall
addl
dec
mov
push
cmp
out
outsb
std
jne
es
jne
pop
les
call
in
xorl
mov
inc
incl
dec
jmp
repz
mov
jmp
std
std
jmp
iret
into
sbb
cld
cld
ret
pmaxub
or
adc
push
outsl
scas
popa
jb
push
push
movb
shr
push
adc
repnz
hlt
or
dec
add
adc
scas
jo
mov
push
or
or
testb
inc
les
add
pop
shrb
jo
scas
mov
xor
inc
cmpsl
into
jae
pop
inc
mov
aad
push
insl
cmp
dec
std
or
or
pusha
imul
and
mov
pop
adc
cmpsl
loopne
pop
or
pushf
pop
mov
inc
clc
mov
cmp
mov
cs
stos
add
add
js
add
add
into
and
cmc
cli
out
lahf
or
jg
add
mov
mov
dec
cs
pusha
insb
rclb
test
sahf
mov
push
popa
and
and
and
repz
jae
adc
stos
fidivrs
repz
jle
push
push
pop
testl
daa
push
push
add
or
pop
clc
pop
iret
push
push
jne
or
lods
insb
push
dec
pop
pop
sub
pop
adc
push
xchg
aam
mov
loopne
les
insb
push
sub
loope
add
arpl
fcomps
adc
adc
jg
sub
xchg
mov
sbb
sbb
cs
mov
jo
gs
stos
shlb
js
add
sahf
adc
loope
add
roll
add
loopne
popf
popf
or
movsb
leave
xor
outsb
push
or
jl
or
lods
push
mov
xor
push
add
xlat
pop
push
out
xchg
cltd
out
dec
lcall
out
xor
inc
push
ja
jmp
cmp
jne
orl
jmp
adc
jne
sub
cltd
adcb
mov
in
imul
fcoml
and
push
fmull
mov
sub
frstor
cmp
and
fnstsw
or
adc
dec
add
add
pop
push
popa
rol
mov
xchg
ljmp
adc
dec
rcll
or
test
jg
loope
pusha
mov
jmp
xchg
fidivs
lret
push
idiv
sub
cmp
ja,pn
xor
leave
cmp
jae
push
movsb
xchg
add
addr16
mov
sbb
add
je
push
lods
pop
xor
cwtl
xor
cld
inc
adc
insb
and
add
inc
cmc
mov
ljmp
add
push
or
clc
or
or
add
mov
scas
je
ret
dec
in
mov
add
push
stos
inc
movb
into
mov
imul
out
in
rolb
sbb
rorb
pop
aaa
pop
pop
and
jecxz
or
dec
dec
loop
add
add
repnz
fisubrl
mov
push
popa
popa
popa
push
sub
rorb
or
xor
icebp
jg
and
jge
stos
mov
shr
pop
xchg
hlt
mov
pop
sub
test
clc
mov
or
add
xor
addr16
push
inc
and
push
mov
jne
idivb
das
test
inc
push
inc
rcrb
sbb
or
xchg
ds
shlb
pusha
lea
or
data16
mov
xchg
xor
xabort
and
adc
jo
shll
lahf
call
and
inc
or
sub
dec
jl
testb
inc
mov
mov
and
shrb
jmp
andb
cltd
or
mov
dec
push
aas
push
xchg
fmul
xor
cmp
push
adc
push
push
subb
fnsave
stos
leave
jl
lret
push
fstps
sahf
pop
out
push
dec
push
movsb
ret
sbb
inc
lea
int3
decb
scas
adc
and
or
add
add
dec
adc
pusha
ret
pop
cmp
push
xor
in
arpl
mov
fldenv
or
jae
fwait
or
mov
scas
dec
adc
loop
mov
mov
sti
sbb
lock
dec
dec
adc
fidivs
sub
push
or
jo
fists
add
jne
add
pop
sub
je
je
sub
in
push
ficompl
push
inc
dec
ss
xor
or
js
mov
mov
lods
dec
ret
test
pop
cmp
icebp
mov
and
mov
dec
xor
sub
mov
or
popf
dec
ret
sti
jne
push
out
adc
ret
js
sub
test
sbb
dec
rcrl
sti
xor
arpl
lea
popa
jno
sbb
nop
adcl
mov
inc
mov
xchg
xor
xor
jb
loopne
iret
push
lret
jae
adc
xchg
pop
ss
call
push
xor
in
pop
mov
shlb
shl
add
mov
cltd
stos
cmp
mov
daa
cmpsb
ret
movsb
ss
jge
or
dec
and
jg
mov
es
mov
inc
incb
sub
insl
and
mov
sub
std
add
clc
lahf
jne
xchg
push
clc
push
push
push
push
insb
dec
pop
jge
and
adc
pop
pop
fisttpl
test
lret
push
mov
je
inc
stc
xlat
sarl
push
or
pop
adc
adc
ja
xor
jecxz
loopne
xor
stos
push
dec
jg
dec
mov
sub
insb
popl
xor
jg
testl
hlt
shll
add
mov
fwait
jle
push
and
push
and
jl
popf
aaa
cs
decl
int3
push
roll
ds
sbb
addb
ljmp
add
paddsb
add
in
xlat
dec
ret
ds
repnz
jnp
ds
mov
repz
fsub
aad
ror
mov
push
cli
lret
aaa
mov
inc
mov
stos
fdivrl
inc
adcl
push
pop
je
push
pop
push
jp
mov
xchg
mov
ss
sbb
or
add
ljmp
sbb
out
cmp
dec
xchg
mov
mov
lock
xorl
pop
or
addr16
pop
fadds
js
xor
ficoms
fmull
push
mov
cmp
push
xor
dec
push
in
sbb
ss
jp
int
push
and
xlat
test
inc
ret
add
push
cmpsb
fsubl
faddl
cmp
xor
pop
inc
cmp
sbb
adc
xchg
cmp
sub
lds
sbb
xlat
and
sub
enter
dec
mov
rolb
add
push
push
pushf
sbb
mov
in
or
lret
and
add
fsubrl
mov
vphaddubd
pushf
cwtl
sbb
fstpt
add
or
test
mov
add
or
mov
adc
mov
cmp
push
repz
fisubrl
adc
cmp
and
add
jne
cmp
mov
sub
rolb
xchg
mov
imul
add
mov
pop
rcr
xchg
imulb
add
pop
fstpl
dec
add
mov
push
ret
dec
or
sarl
dec
push
pop
push
dec
roll
adc
pop
sbb
xor
dec
pop
faddl
lods
jne
mov
push
push
cmp
or
cmp
push
mov
mov
adc
mov
adc
addb
pop
sbb
in
push
movsl
daa
jg
rorl
sub
inc
and
pop
js
adc
mov
push
xor
and
push
mov
mov
mov
pusha
enter
or
fucomip
or
pop
add
pop
push
inc
add
jo
adc
andb
ss
push
pop
sbb
fldl
cltd
pop
or
xlat
adc
mov
je
and
daa
push
stos
sarl
push
jle
dec
into
dec
mov
in
and
mov
popa
out
jmp
cmpsb
push
jne
add
out
mov
imulb
cmp
adc
enter
dec
mov
push
iret
push
push
pop
jle
pop
mov
cmp
je
movzbl
or
sbb
je
ficompl
scas
loopne
pop
sbb
adc
imul
sbb
dec
add
enter
daa
add
xchg
lea
insb
cmp
sahf
divl
je
lcall
enter
add
cmpb
pop
dec
in
jb
pop
jb
or
in
jns
or
dec
inc
push
nop
or
sub
addr16
jns
pop
or
nop
or
add
seto
lcall
add
inc
or
mov
ja
push
setne
jb
push
adc
pop
addr16
mov
sub
cmp
sbb
adc
adc
adc
jae
and
adc
mov
add
adc
jns
pop
enter
inc
adc
js
push
push
inc
sahf
xchg
add
pop
mov
sbb
sbb
orb
inc
sbb
jns
psubsb
sbb
and
pusha
in
sbb
sbb
mov
sbb
je
pop
sbb
iret
sub
inc
stos
jge
sbb
and
push
cmpl
pop
push
mov
jg
and
ret
sub
cmp
xchg
mov
inc
sbb
jmp
fidivl
adc
bound
repz
clc
mov
repz
push
in
push
in
jno
repnz
sub
shl
cmp
push
adc
aad
cmp
add
add
sahf
addr16
out
push
aaa
add
add
call
jns
call
enter
cwtl
jmp
sbb
iret
ljmp
sbb
jmp
in
lret
add
dec
in
in
cltd
mov
mov
out
pop
and
enter
sbb
movsb
mov
lock
sbb
xor
jns
push
nop
icebp
pslld
nop
out
add
std
repz
sub
rorl
addr16
cmp
cmc
repnz
cmc
inc
jg
test
enter
cmp
xorl
clc
enter
cltd
adc
inc
stc
cmpb
lock
cli
cli
adc
jb
sti
sbb
fmulp
dec
in
cld
cld
cld
je
cld
push
xorps
xor
mov
xchg
mov
ljmp
push
cmpsl
add
or
sbb
es
lahf
push
pop
shrw
rorl
scas
cmpsb
push
push
es
jecxz
xchg
pop
add
std
sti
in
in
push
in
fdiv
inc
bound
daa
push
sub
sbb
out
xor
call
jns
sti
sub
dec
jae
and
lret
add
jmp
in
add
cli
popf
cli
dec
in
rcrl
push
fsubs
out
cltd
push
lock
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
sar
add
stc
and
jns
lcall
pop
mov
sbbb
inc
repnz
out
clc
dec
push
cmp
cmp
mov
cltd
mov
sub
orl
xor
dec
and
sub
xchg
pusha
cld
sub
mov
les
rcr
mul
pop
pop
repnz
imull
bound
mul
sbb
xor
cltd
out
and
pop
inc
mull
imull
sti
imul
cmp
test
inc
repnz
mov
xor
xchg
negb
out
out
jno
and
and
adc
xchg
pop
add
sbb
repnz
pop
lret
and
and
cmc
pop
pop
lcall
negb
cmpb
and
pop
add
clc
clc
mov
jmp
jecxz
stc
popa
cmp
mov
and
pop
rcll
hlt
sbb
das
pushw
data16
test
idivl
jo
rolb
pusha
adc
ds
call
inc
cmc
pop
loope
push
inc
repnz
loop
scas
repz
mov
mov
test
dec
push
in
repz
xlat
jb
repz
mov
mov
repnz
jmp
in
mov
xchg
repnz
jo
sbb
dec
in
in
cmc
xlat
mov
adc
repnz
addl
loope
sbb
mov
inc
repnz
divb
icebp
pop
repnz
push
icebp
movsl
test
icebp
cmc
cmc
and
les
pop
pop
jb
lock
lock
pop
add
sbb
mov
jne
das
mov
xorl
xlat
and
mov
and
pop
and
test
and
dec
adc
mov
push
sub
out
cmp
or
ret
cmovno
enter
push
add
add
fmuls
add
push
jnp
xor
or
mov
dec
add
xchg
mov
sahf
and
ljmp
and
pop
and
cli
push
inc
add
pop
push
clc
pop
out
mov
push
pop
imul
push
fstps
pop
pop
fnstcw
ds
imul
scas
push
jns
data16
pop
fcompl
and
fwait
int
dec
mov
xchg
push
popf
pop
mov
imul
add
pop
or
push
fs
mov
push
add
idiv
loope
or
and
inc
mov
push
lock
cld
push
xor
mov
hlt
mov
add
rorb
push
push
rorb
dec
enter
sbb
adc
or
cmpsl
sub
mov
je
add
fcmovnu
and
fmuls
and
add
insb
sub
cs
cld
push
sahf
inc
adc
mov
add
xchg
sbb
jecxz
adc
shlb
and
lea
jge
pop
sahf
jge
test
pop
xor
push
out
rclb
sub
arpl
in
inc
stc
add
int
push
adc
dec
movsb
inc
jmp
dec
aam
mov
xchg
fidivs
pop
cld
add
xor
jne
insl
xor
add
dec
xchg
adc
cmp
inc
mov
or
shlb
mov
pop
inc
inc
inc
inc
adc
adcl
cmp
add
jmp
jb
call
imul
sbb
add
jle
mov
in
popa
push
push
sbb
adc
adc
dec
outsl
cmpsb
or
test
test
inc
mulb
je
pop
roll
sub
inc
inc
pop
cmp
enter
mov
shll
orps
cwtl
movsb
mov
push
push
push
subb
lret
stos
movsb
daa
imul
push
push
sub
xchg
hlt
and
jmp
mov
add
and
jnp
add
dec
jne
jo
sub
lcall
pusha
or
int
adc
mov
mov
adc
push
filds
lret
and
cmp
outsl
dec
scas
pushl
jne
mov
mov
inc
inc
cmp
cmp
or
dec
popa
out
loopne
outsb
out
jns
mov
dec
mov
in
aas
cmpb
mov
pop
pop
push
push
cwtl
mov
or
stos
push
loop
inc
adc
ret
clc
add
add
loopne
aas
add
pop
pop
test
ljmp
cmp
lods
add
mov
or
fwait
add
jmp
push
clc
iret
into
add
testb
movb
lret
data16
inc
das
push
jmp
push
or
stos
mov
push
leave
stos
push
or
mov
hlt
xchg
cmp
pop
jo
test
outsl
sbb
iret
sbb
sbb
sub
push
mov
or
aaa
sbb
mov
mov
mov
incl
inc
decl
pop
xchg
mov
loop
repnz
mov
bound
cmp
mov
jbe
push
cltd
pop
idiv
rclb
pusha
or
adc
ss
ja
aam
dec
mov
mov
jg
mov
xor
jo
jmp
cmp
jae
stos
xchg
icebp
push
jecxz
jae
pop
jbe
mov
dec
mov
jmp
loope
sbb
cmc
xor
pop
mov
rorl
jg
xor
test
sbb
add
mulb
add
call
sti
in
dec
push
or
sbb
dec
dec
je
push
test
or
lcall
or
in
clc
mov
cwtl
jbe
xor
xor
xchg
pop
decb
push
test
and
notl
inc
pop
cltd
sbb
push
imul
inc
test
arpl
add
fs
repnz
mov
mov
test
push
pop
add
das
cwtl
add
negb
push
adc
pop
ja
pushf
fisubrl
pop
push
mov
int
adc
stos
in
mov
adc
in
push
nop
jmp
cmp
inc
enter
ja
insl
or
xchg
icebp
or
push
mov
add
push
cltd
pop
idiv
orb
xor
xchg
inc
out
cmp
push
mov
pop
daa
push
jmp
or
xchg
fsubs
xor
sahf
enter
outsl
call
mov
adc
movsb
jbe
insl
xchg
mov
test
pop
adc
bound
or
je
lea
movsl
insb
sub
sbb
sbb
imul
mov
sbb
or
add
inc
sub
jg
pop
pop
mov
sub
sub
loopne
push
mov
inc
xor
dec
and
mov
xchg
mov
hlt
cmp
push
mov
mov
pop
xchg
push
cmp
loope
push
jmp
jge
pop
je
sbb
movl
add
ud2
add
lcall
adc
test
mov
outsl
mov
mov
in
pop
je
dec
inc
or
sti
fiadds
dec
jne
mov
fisttpl
jmp
data16
lret
test
loop
mov
adc
insb
lahf
pop
xchg
mov
or
call
push
pop
push
or
inc
mov
fnstenv
subl
inc
push
cmp
loopne
mov
stc
pop
push
adc
push
fldt
xchg
inc
jmp
push
pushf
or
adc
jp
or
sub
adcl
ss
xor
cmpb
sbb
enter
mov
pop
cli
and
or
mov
push
hlt
or
add
ficomps
sub
adc
adc
idivb
jnp
push
out
call
inc
or
lods
movsb
out
pop
pushl
gs
dec
ljmp
mov
xchg
rorb
inc
and
pop
andl
sbb
xchg
rolb
hlt
dec
cmp
sub
and
sbb
outsl
and
push
adc
mov
mov
xor
decl
inc
jg
loop
pop
cmp
pop
ret
cmp
inc
lret
mov
adc
jne
incl
clc
mov
inc
inc
cmp
je
xchg
pop
lcall
fs
orb
xchg
add
fidivrl
dec
xor
jle
dec
je
popa
aas
mov
and
mov
fcoms
adc
cmc
mov
in
data16
incl
fdivr
hlt
push
mov
push
inc
js
gs
sbb
jae
inc
pop
fmul
mov
pop
sbb
sbb
cmp
pusha
loopne
bound
aad
insl
sbb
or
shlb
xchg
dec
push
add
test
movl
lock
mov
addr16
test
jle
gs
test
adc
pop
cmp
je
mov
xchg
sarl
mov
mov
pop
addb
sbb
cltd
loopne
inc
push
pop
inc
int
push
adcb
and
mov
fdivl
pop
or
frstor
lret
dec
in
sbb
dec
movsb
jb
jns
or
inc
hlt
mov
adc
sbb
mov
add
adc
xchg
dec
mov
add
cmp
push
sar
lea
popa
bound
inc
shl
add
jmp
dec
or
jl
push
in
dec
push
jmp
das
dec
jmp
shr
je
dec
sbb
loopne
aas
pop
shrl
sahf
mov
imul
and
jecxz
and
dec
lods
sar
ret
jno
and
in
pop
in
cwtl
cmp
call
cmp
lcall
in
ret
js
int3
adc
add
jbe
clc
push
push
push
jns
and
ljmp
push
push
adc
push
mov
movsb
rorb
mov
sbb
popf
xchg
sarl
cmp
ja
xchg
incb
and
inc
inc
xor
pop
mov
xor
or
xor
mov
subl
movsb
cltd
pop
pop
xlat
xchg
xor
push
mov
xor
xchg
fdivl
loope
fucomp
xor
es
inc
jmp
les
lcall
sub
mov
in
enter
mov
mov
jmp
jne
add
ds
inc
and
jge
push
jmp
pop
fldz
mov
in
mov
add
push
jo
popa
inc
or
arpl
mov
cld
xor
push
or
mov
cmc
sub
add
and
sbb
loopne
pop
ret
xchg
ret
imul
outsb
mov
add
mov
push
arpl
jmp
pop
arpl
xchg
push
jno
mov
and
mov
inc
jge
movsb
pop
iret
or
add
cmp
sub
shrb
dec
mov
inc
add
xlat
or
out
cmp
sbb
pop
add
movsb
cld
adc
test
stc
shlb
adcl
into
ds
ja
sbbl
xor
testb
popa
aam
outsb
pop
repnz
jbe
push
push
push
or
rorl
out
jne
les
adcb
js,pn
push
mov
aas
dec
or
mov
shll
or
call
shr
and
pop
jmp
in
jns
pop
mov
xor
mov
fcomps
rcr
lea
or
rclb
scas
lret
inc
push
adcb
fs
pushf
enter
ds
pop
sub
or
jne
mov
test
adc
dec
lcall
std
data16
loop
out
cmpsb
inc
and
insb
mov
pusha
out
add
sbb
adc
adc
imul
test
loope
ss
adcb
stc
sbb
jmp
xchg
pop
gs
sbb
into
jl
jo
arpl
imul
cmp
mov
ljmp
sub
inc
inc
mov
or
fsubrl
adc
out
xor
adc
add
js
hlt
inc
or
cli
popa
cwtl
cmc
test
jge
shlb
xor
ja
mov
nop
dec
jbe
cmpl
out
mov
push
daa
insb
fistl
jle
mov
mov
dec
mov
cmp
inc
inc
addr16
push
sti
xor
jle
jne
pop
add
popf
lcall
add
test
movsl
push
fistpl
push
pop
xor
rcrb
mov
mov
shll
xchg
mov
fcomp
shl
je
lea
cmp
mov
call
sbb
sbb
inc
inc
cli
mov
xor
incl
notb
adc
push
push
mov
mov
sub
test
inc
and
gs
mov
lock
dec
nop
in
fstpl
jg
jp
orl
inc
pusha
lea
sbb
xchg
xor
jecxz
cmpsl
jne
lahf
insb
push
lea
loopne
insb
mov
mul
xor
push
dec
jnp
add
call
inc
jb
jg
and
test
inc
scas
push
xor
aad
test
sbb
jnp
pushl
adc
je
add
iret
xor
push
test
or
pop
jo
pushf
mov
sbb
scas
stos
push
repz
push
lods
cmp
sti
sbbb
add
ss
dec
xchg
xchg
pop
stos
xchg
or
dec
cwtl
adc
mov
add
inc
adc
aam
pop
fcomp
into
or
inc
inc
xchg
and
add
push
cmp
das
shrb
or
test
sub
mov
cmp
neg
js
push
les
jg
int
mov
call
cld
sub
icebp
dec
lock
or
add
and
dec
sub
shll
dec
or
lock
cld
adc
in
lcall
test
fsubrl
pop
sub
push
ret
fidivs
adc
pop
sbb
and
mov
stc
or
add
loopne
jns
adc
popl
outsb
and
mov
pop
mov
loopne
movl
cmp
xor
add
movsb
sarb
xor
dec
mov
jnp
fmul
adc
adcb
pop
jo
sub
loopne
cmpsl
test
inc
add
insb
popa
repnz
push
cmpsb
dec
pop
cld
sub
paddd
pop
or
je
dec
xor
push
jns
or
push
or
push
sbb
mov
inc
sbb
jmp
loope
loopne
or
insb
fldl
jle
shl
or
imulb
lahf
or
insb
pushf
pop
sub
mov
inc
add
testl
daa
or
es
add
rolb
sbb
outsl
shlb
outsb
test
mov
inc
idiv
rolb
push
movb
or
lea
roll
ja
je
or
sub
or
lcall
add
fcom
fnstsw
int
fdivr
ficoml
push
push
or
cmp
sarb
mov
push
push
sbb
inc
inc
cld
fs
and
push
add
popa
int
push
orb
popf
jecxz
adc
and
je
and
mov
adc
push
sarb
sbb
movsb
mov
test
pop
mov
cmp
lahf
jbe
pop
and
sbb
lret
add
jmp
cmp
mov
and
and
and
jmp
inc
add
mov
inc
nop
ret
loopne
std
pop
and
lock
xor
mov
mov
jo
jg
or
ja
ss
ja
cmp
fdivrl
jno
pop
add
pop
shlb
fcompl
sbb
cmpsb
or
push
lret
and
cmp
sahf
out
insb
push
hlt
call
outsb
out
jmp
sbb
jmp
add
shll
cmpsb
push
sub
cmp
xchg
aam
inc
cmp
sarl
add
jne
fsubr
fldt
je
or
stos
enter
mov
xchg
or
scas
popa
xor
clc
dec
mov
push
movsl
insb
pop
adc
in
cmp
mov
jb
nop
xchg
repz
xor
lock
out
into
std
fidivl
call
jmp
pop
push
xchg
sub
loope
add
push
out
and
xor
pop
push
fs
push
inc
rorb
cmp
sbb
sbb
movsb
jle
cwtl
cmp
jbe
jmp
mov
test
push
jnp
aam
cmp
leave
inc
jo
call
imul
popa
popf
loop
push
mov
aaa
jmp
xor
in
dec
loopne
sub
cld
jmp
mov
mov
cmp
mov
lea
inc
inc
adc
shrl
inc
lea
jg
loopne
loopne
xorb
xor
inc
inc
mov
cs
std
fistpll
inc
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
jno
daa
roll
cmpsb
jl
sbb
xor
mov
clc
daa
pop
adc
push
mov
aaa
rorl
inc
dec
jne
lret
shr
test
fdivp
lret
add
jnp
xchg
jmp
cmp
and
rcl
leave
and
fcoml
je
loopne
adc
mov
adc
daa
adc
mov
fstl
int3
movsl
mov
add
add
mov
inc
sbb
sbb
sbb
insl
add
fmuls
outsl
je
loopne
lret
mov
push
inc
fsubrs
fisttpl
insl
rorl
cmp
jo
insb
ljmp
xor
fnsave
pop
xor
mov
in
mov
ret
mov
popa
adc
dec
out
ja
loopne
or
pop
sub
jmp
xor
jg
or
mov
add
fwait
xlat
add
ret
ss
push
out
jo
add
arpl
xchg
push
sbb
es
jb
jmp
xchg
pop
and
mov
sti
imul
push
add
test
xlat
jecxz
lret
mov
jl
adc
jno
pop
and
add
mov
or
xor
add
outsl
cmp
es
and
pop
sbb
cmp
pop
push
dec
mov
test
inc
mov
in
pushf
cltd
clc
sbb
imul
sbb
sub
inc
xchg
int3
mov
mov
popa
and
je
xlat
xor
cmp
and
push
jne
cld
arpl
aaa
out
jle
or
push
jno
in
stc
cmpl
add
mov
rolb
pop
cld
rolb
sub
loopne
dec
or
push
add
in
lcall
and
andl
loopne
add
mov
lea
mov
mov
aaa
cmpl
insb
push
cmpsb
or
jo
aam
movsl
sub
or
shrl
sub
sbb
clc
adc
xor
adc
push
mov
pop
mov
stos
sub
push
adc
xor
sti
in
or
pop
jbe
and
je
lcall
sbb
add
into
sub
jo
sub
ds
and
addb
sub
rcll
stos
adc
jno
push
pop
and
mov
xchg
xchg
mov
push
and
push
cmp
sar
imul
sbb
daa
mov
orl
mov
pop
mov
push
pop
push
sub
cs
push
rorb
cmc
and
leave
add
je
fs
or
enter
in
test
sbb
cwtl
cmc
fmuls
mov
rcrb
rcll
mov
or
aas
js
in
fimuls
incb
mov
mov
mov
andb
cmp
adc
repnz
push
and
and
and
sbb
dec
xchg
lret
test
mov
push
jo
pop
xchg
mov
adc
rolb
pop
push
push
mov
and
movsb
xchg
js
imul
cmpsb
jbe
pop
xchg
insb
in
jae
bound
jg
jnp
sbb
shlb
outsl
mov
dec
cmp
sbb
ja
xchg
push
jle
inc
ret
dec
push
subl
xchg
xchg
cmp
movsb
pushf
xchg
pop
push
cmpsl
xchg
pop
jns
orb
mov
push
or
xor
shlb
stc
test
adc
js
jl
and
clc
sub
sbb
pop
jb
xor
jb
pop
jb
inc
dec
test
mov
pop
cmp
jmp
daa
jle
pop
sbb
test
jmp
sub
jp
sti
jbe
mov
cli
and
pop
cmp
je
jle
mov
cld
test
adc
insl
jg
jno
jo
jge
andl
or
inc
dec
rorl
movsb
ljmp
mov
mov
pushf
cmpl
jbe
mov
rcrl
movsb
shll
cmpsb
and
daa
test
into
jno,pt
xchg
dec
ja
mov
stos
xchg
mov
pop
jnp
sub
sbb
cmp
sub
inc
mov
test
xchg
mov
cli
mov
aaa
push
mov
push
xchg
stos
push
dec
mov
xor
cmp
fldl
cld
dec
jp
mov
mov
adc
mov
movsl
dec
inc
lock
fimuls
and
into
jbe
sbb
mov
push
sub
pop
pop
imul
fcomps
pop
mov
mov
clc
or
jns
popf
enter
shrb
pushf
popl
ljmp
enter
imul
pop
test
or
pop
xchg
mov
push
add
ret
cmp
lea
mov
xchg
test
mov
ret
pop
popa
dec
ret
mov
movsb
add
js
jmp
jge
jnp
rorb
add
adc
add
add
popa
cmp
mov
bts
jmp
mov
or
mov
pop
inc
js
nop
adc
and
in
or
lea
push
mov
or
pop
sbb
inc
push
push
xchg
adc
mov
mov
mov
or
push
ror
or
cmp
sarb
xchg
je
flds
jmp
popl
adc
in
xchg
inc
enter
pop
nop
movsb
inc
xchg
lock
lahf
adc
add
nop
nop
nop
nop
iret
repz
inc
or
push
push
pop
fs
repz
je
nop
mov
inc
mov
shl
mov
popa
and
cmpsb
pop
adc
sub
sbb
push
and
mov
mov
or
shll
out
mov
jmp
cmp
jne
and
data16
dec
push
dec
or
test
in
dec
inc
jo
ret
cmp
jge
or
mov
xchg
mov
mov
pop
pop
out
int3
inc
and
test
add
fmuls
or
andl
loopne
jge
icebp
add
add
pop
adc
and
stos
and
pop
jno
mov
nop
mov
dec
sbb
mov
hlt
mov
insb
push
hlt
call
popa
and
mov
push
inc
es
and
ljmp
lret
or
mov
or
je
pop
add
and
dec
adc
popa
cmc
jae
andl
cmp
jl
xor
push
push
push
push
add
dec
sbb
jmp
adcl
movsl
stos
je
xor
pop
mov
xchg
cs
data16
or
push
adc
dec
add
mov
jne
jnp
int3
add
pop
jbe
sbb
or
js
je
mov
lock
xchg
cmpsb
outsb
push
push
int3
mov
xchg
gs
outsb
add
mov
xor
cmp
outsl
push
scas
arpl
inc
and
sbb
pop
pushf
xchg
mov
pop
jns
inc
testl
loopne
cmp
sub
in
sub
je
movl
test
fcomps
xor
sbb
mov
ret
push
aam
pop
or
ljmp
rol
es
adc
cmp
ljmp
cmp
ret
inc
daa
xchg
adc
jg
or
inc
sbb
add
cmp
test
adc
jbe
push
sarl
pop
add
leave
jb
push
or
mov
inc
nop
into
push
in
sbb
lea
inc
cmp
dec
push
cmc
adc
ficompl
pop
ret
adc
inc
aad
imul
fs
rolb
mov
cmp
xor
or
push
inc
xchg
ss
add
incl
and
sub
mov
shrb
push
mov
test
inc
inc
mov
push
pusha
push
mov
inc
or
test
xor
or
lock
subb
inc
adc
js
mov
adc
adcb
push
mov
out
pop
jae
adc
jbe
push
inc
pop
add
sub
or
ret
push
in
or
inc
mov
pop
cmp
pop
divl
in
mov
popl
ds
inc
add
dec
xchg
xor
add
jle
push
push
jne
fidivl
dec
ljmp
jns
in
dec
xchg
and
inc
insl
adc
loopne
cmp
add
shl
add
mov
test
je
xlat
cmp
cltd
xchg
add
and
addb
inc
xchg
cmpl
pusha
xor
lock
lock
enter
dec
jmp
jecxz
mov
and
lock
into
mov
dec
pusha
pusha
pop
push
jg
stos
inc
add
jmp
fsubr
inc
hlt
ffreep
sti
add
lcall
or
cmp
les
xor
inc
mov
pop
inc
mov
xchg
test
shl
xor
out
mov
or
lret
mov
fsubr
mov
mov
fadd
shll
push
push
jmp
mov
mov
mov
popf
ret
call
cmc
inc
ja
or
leave
test
in
or
iret
lret
call
rorl
je
mov
dec
rorb
mov
lea
rcrb
lock
mov
movsbl
unpcklps
ja
pop
sbb
sar
pop
mov
jecxz
xchg
push
or
sub
inc
or
jb
je
cli
mov
fdivrl
in
fsubs
lret
mov
dec
or
je
or
sub
je
jmp
pop
rcrb
hlt
scas
pushf
pop
or
in
fsts
add
and
sbb
add
sub
mov
rcrl
adc
shl
jnp
aas
mov
mov
scas
xchg
imul
lret
or
ja
pop
sbbl
mov
mov
fsubrs
dec
es
out
sbb
hlt
hlt
stc
push
jae
fistl
je
insb
je
lock
test
mov
ds
xor
sub
or
pop
and
push
xchg
ss
or
xor
mov
in
in
dec
xor
mov
add
incb
gs
mov
or
imul
int
cmc
jne
js
dec
xor
loope
xlat
je
add
ds
mov
pop
ds
outsb
lret
mov
popf
and
mov
sbb
sbb
jle
inc
je
and
push
or
add
ds
mov
push
xor
mov
fdivr
popf
push
dec
mov
test
fsts
dec
nop
and
nop
push
xchg
iret
jae
pop
testl
mov
jne
jo
cmc
mov
adcl
pop
shrb
and
in
pop
and
xchg
or
or
xchg
push
mov
sub
in
sub
inc
mov
shlb
push
mov
jl
fsts
add
push
insl
cmp
dec
sbb
xchg
jb
negl
sub
ljmp
or
aam
addb
inc
cmp
lahf
push
xor
mov
ss
fucomi
push
mov
pushl
dec
aas
push
add
add
and
pushf
and
hlt
mov
inc
mov
dec
mov
pop
push
sub
mov
cmp
pop
imul
je
adc
cmp
imul
lret
pusha
adc
add
gs
into
add
pop
je
inc
addr16
push
push
outsb
popa
xor
lret
test
mov
push
enter
push
and
sbb
lds
xor
mov
add
movsb
orb
dec
andl
xorb
sub
subb
push
add
jmp
pusha
into
ret
jne
mov
jne
mov
jmp
cmp
jle
insl
cmpl
incl
dec
or
push
scas
cwtl
mov
or
aad
or
xchg
imul
push
mov
insb
add
arpl
mov
mov
popf
test
imul
lea
stc
lcall
pop
xchg
cwtl
inc
call
sbb
dec
nop
stos
out
aas
cmpb
jne
and
push
icebp
popa
push
push
lea
push
mov
mov
push
cmp
addr16
decb
test
mov
pushl
mov
or
pop
addr16
xchg
xchg
enter
push
scas
call
jecxz
jne
int3
dec
aad
push
sbb
inc
insl
test
xor
mov
ret
jbe
out
or
je
cltd
js
pop
mov
sbb
pop
jl
jae
pop
add
and
rolb
test
in
pop
fimull
lcall
sbb
mov
lret
pop
pop
ja
aas
mov
or
jne
and
lea
fisubrs
sbb
push
push
aas
mov
inc
sbb
cltd
push
rcl
push
inc
shrb
adc
stc
cmp
xchg
clc
sahf
add
cmp
jg
mov
dec
jmp
pop
xchg
sub
dec
icebp
add
je
lock
into
cmp
fnstsw
and
xor
ss
outsl
nop
push
mov
loope
aaa
dec
cmp
or
xchg
mov
ret
cmp
sub
insb
jb
adcl
gs
pop
mov
xchg
adc
int3
clc
add
sub
sub
push
test
inc
xchg
mov
sahf
and
pop
lds
jb
cltd
sub
sub
pop
and
inc
shl
push
jp
dec
out
pop
xor
cmp
lea
or
pop
aad
add
add
push
jbe
dec
xorl
jne
testl
aaa
cmp
sbb
push
clc
loop
add
xchg
nop
popa
jle
cmp
pushf
test
inc
or
pop
jg
cld
data16
mov
push
dec
mov
or
and
inc
enter
je
rcrl
clc
mov
and
daa
pop
mov
shrb
cmp
mov
sub
movsb
loope
sahf
pusha
cmp
mov
add
sub
push
mov
push
movsb
rcrb
jns
out
push
out
cltd
nop
pushf
jecxz
add
out
repz
mov
mov
bound
pop
rolb
js
loopne
sbbb
shlb
pop
shrb
mov
xor
mov
insb
or
adc
lea
mov
sbb
adc
cli
fcompp
loope
and
dec
xchg
and
rcr
ret
andl
jo
sbbl
ja
sub
push
mov
mov
addb
mov
inc
push
push
movsl
sbb
mov
or
jl
push
pop
ret
xlat
popf
or
add
out
xchg
lds
ret
leave
pop
sahf
mov
pushf
jge
push
andl
or
out
or
jge
cmp
add
jmp
push
adc
arpl
shlb
lock
pop
push
and
cmpsb
sbb
subb
inc
xchg
aam
test
lds
lret
fcoml
iret
or
lea
add
sub
or
adc
lds
scas
sbb
or
fmull
out
mov
adc
enter
sub
ss
mov
add
jb
rclb
ret
push
mov
jno
xchg
rcl
loopne
adc
or
sub
cld
shr
mov
imul
jne
add
dec
int3
xchg
mov
cld
outsb
dec
mov
xor
and
adc
pop
inc
add
je
cli
add
cmp
jbe
loopne
and
push
pop
cmp
jne
pushl
and
mov
shr
lea
not
and
decb
mov
clc
and
adc
notl
pushf
mov
add
jp
or
cltd
out
mov
add
pop
and
push
or
dec
add
mov
add
jecxz
notb
or
jnp
jne
and
sti
add
inc
imul
icebp
dec
pop
cmp
adc
mov
imul
mov
and
ret
iret
push
pop
jp
data16
mov
sti
adc
out
sub
lock
and
jne
ja
std
push
sub
jmp
lea
das
mov
xor
push
jle
pop
dec
add
gs
cmpsb
clc
mov
pushf
insl
loopne
add
jb
push
adc
addr16
cmp
rorl
dec
or
adc
or
dec
pusha
mov
mov
push
mov
fadd
mov
mov
and
out
add
pop
mov
jmp
dec
xchg
imul
push
mov
rorl
and
xor
mov
jb
or
and
icebp
or
and
jo
notb
rcrl
sti
loope
add
scas
jp
push
call
aas
outsb
ret
mov
push
or
cmp
flds
sub
dec
inc
adc
dec
adc
add
and
pushl
push
push
push
xor
iret
mov
clc
mov
int
mov
fildll
enter
and
jge
jl
lahf
outsb
call
push
jbe
insl
or
mov
sbb
shrb
cmp
add
push
xorb
imul
push
outsl
add
cmp
rorl
inc
mov
addl
sbb
negb
les
xor
inc
adc
sub
mov
push
push
outsl
and
inc
push
fucomi
fwait
orl
inc
xchg
mov
insl
and
adc
or
je
mov
add
inc
ljmp
clc
dec
stc
mov
rorl
or
hlt
or
cmpsl
bound
idivb
int
add
mov
xchg
add
xor
xchg
js
inc
sub
shr
inc
les
add
jnp
add
in
clc
inc
nop
cld
movups
jge
mov
movb
sbb
call
adc
add
je
clc
add
pushf
mov
hlt
adc
dec
or
adc
sub
inc
fs
pop
mov
jnp
mov
mov
lock
dec
jecxz
pop
decl
jne
or
lds
not
and
sbb
int3
les
repz
or
lcall
pop
shr
stos
and
shlb
push
popl
and
pushf
movq
add
mov
test
inc
mov
push
sub
or
stc
add
mov
add
pop
inc
pop
mov
pop
inc
stc
sbb
clc
and
nop
es
test
in
add
cmp
nop
inc
inc
jae
dec
or
push
jns
fs
ret
into
add
ljmp
adc
pushf
sar
dec
and
cs
fstpl
adc
sti
jbe
dec
push
xor
adc
jle
mov
cmp
shll
pop
push
pop
adc
test
iret
fildl
cmpb
jmp
aaa
sbb
dec
test
or
inc
or
int3
aad
xor
shrb
inc
and
loop
jmp
fldl
loopne
lea
pop
jnp
and
sub
pop
xor
push
sar
dec
jp
movsb
xor
dec
pop
inc
dec
imul
and
cmp
cmp
or
into
je
fisttps
mov
dec
push
add
je
ja
ja
dec
pop
lea
loope
push
fbstp
dec
lea
mov
adc
xchg
jbe
mov
and
test
into
mov
cmpsl
jb
rdmsr
cmp
pop
jb
lods
dec
adc
sbbb
ja
call
insb
stos
test
ret
lods
pop
and
inc
adc
push
cmp
push
push
push
jge
add
sbb
shr
adc
pusha
push
adc
in
or
stos
je
add
cs
add
ficoms
nop
cmp
and
decb
xlat
andb
mov
adc
add
call
sbb
jmp
pop
jmp
jnp
add
dec
mov
repnz
aaa
arpl
add
dec
add
cwtl
cmp
and
lahf
lds
push
add
sub
dec
mov
add
pushl
sbb
dec
sbb
and
mov
mov
dec
pop
iret
jne
shlb
xorl
mov
push
inc
dec
push
dec
xchg
stos
pop
aas
cmpsb
mov
jmp
fcomip
cs
into
jne
mov
push
xchg
sbbb
inc
test
inc
push
pushf
scas
jbe
loop
or
out
icebp
sbb
push
cmp
add
dec
add
xchg
sbb
push
aad
ror
push
xchg
cmp
aad
push
out
and
mov
pop
pusha
inc
jecxz
pcmpeqw
repnz
jmp
gs
cwtl
popf
jp
mov
adc
bound
dec
push
and
push
clc
into
xor
or
dec
rorl
jecxz
sahf
xchg
mov
or
das
pop
xor
sub
jge
testl
cmc
push
or
dec
cld
or
pop
add
push
push
push
mov
seto
or
sub
fimull
dec
adc
add
in
xchg
mov
and
lods
test
lea
ds
or
jne
cmp
jp
push
ds
xor
add
gs
imulb
cmp
loopne
or
in
jb
or
xorl
lret
rcrb
adc
pop
mov
mov
dec
and
pop
cmp
mov
sub
leave
add
jp
mov
sbb
jns
test
mulb
loop
faddl
xchg
jg
and
and
mov
das
adc
cld
jle
es
add
sysexit
test
add
inc
cmp
cmp
sub
add
push
mov
sbb
sahf
mov
je
push
xor
inc
and
loope
or
in
cmp
push
push
icebp
sbb
cmpsb
icebp
mov
jmp
ja
inc
or
jmp
push
pop
movsb
push
orb
fiadds
sti
into
fsubrs
pop
sub
cmp
adc
pop
ret
imul
pop
lods
inc
push
lahf
jne
push
adc
adc
mov
fldl
sbb
movsl
mov
mov
arpl
lcall
inc
js
push
or
adc
ss
jmp
movsl
inc
adc
cmpsl
pop
jl
bnd
sub
loopne
fists
dec
and
insb
int3
push
jo
adc
mov
je
xor
mov
sarb
iret
adc
add
mov
push
loopne
dec
adc
ret
xor
or
or
adcl
jle
mov
or
call
lods
aam
hlt
or
mov
je
xchg
pop
xor
data16
mov
scas
aas
sbb
call
jge
jmp
movzwl
or
int3
test
lea
jnp
xchg
in
je
cmp
mov
stos
dec
inc
rorl
sbbb
xchg
imul
test
mov
popf
cmpl
sub
mov
pop
pop
ja
push
sbb
jns
out
lods
cli
out
into
dec
xor
push
inc
cmpsl
gs
adc
add
xchg
or
rcll
add
add
sbb
sbb
xchg
arpl
ja
push
pop
rcrl
jge
lods
cli
leave
add
scas
and
hlt
faddp
mov
and
icebp
or
in
push
inc
pushf
xor
mov
aas
insb
jne
jp
mov
adc
and
sbb
xor
dec
data16
incb
jae
cmp
fistpl
cmp
mov
sbb
cmc
jmp
add
dec
xor
xor
cmpsb
mov
ret
in
and
in
xchg
mov
leave
add
call
add
xchg
pop
and
jge
test
je
pop
dec
cmpsl
pop
sub
xor
enter
inc
cs
xor
lods
pusha
call
lods
pop
lods
pop
lods
pop
cmp
test
call
insl
and
add
addb
into
shlb
cmp
mov
shrb
enter
mov
mov
stos
or
inc
repnz
push
icebp
test
cmp
shr
add
popf
or
hlt
pushw
into
xrelease
and
lods
in
and
xchg
nop
add
cmp
nop
add
in
mov
add
enter
mov
and
enter
js
push
leave
shl
xchg
in
sbb
in
mov
add
add
test
ljmp
lahf
call
test
cld
enter
cmp
inc
xlat
insb
mov
sysret
push
push
xor
insb
push
cli
and
ds
sarl
test
xor
lea
mov
mov
daa
cmp
push
xor
cmc
adc
sub
les
lret
sub
push
xor
adc
clc
xchg
or
push
ret
xchg
scas
xorb
je
xchg
pop
rcrb
dec
push
xor
mov
xor
orb
and
cmp
or
and
popa
jmp
mov
pop
push
mov
imul
jnp
dec
and
push
adc
popa
push
mov
jmp
ffree
xor
adc
xchg
add
shr
cmp
lods
or
fsubs
push
icebp
imul
add
sbb
mov
jne
rcrl
stc
add
mov
aaa
inc
cld
push
add
push
test
aaa
nop
pop
nop
lods
add
cltd
movsl
adc
sub
push
int3
ja
push
aaa
mull
or
imul
or
int3
push
lret
cmp
sub
rolb
imul
cli
sti
cmpsl
mov
mov
adc
add
dec
test
hlt
and
lret
adc
cmpsb
xor
jg
imul
mov
push
pop
sub
sbb
dec
mov
insl
ljmp
dec
je
scas
and
pop
inc
fsubs
lret
aas
insl
loopne
pop
cs
loopne
fldl
or
jno
mov
lock
in
dec
aaa
adc
out
lcall
mov
pop
jmp
jo
push
repnz
cmc
mov
pop
sub
das
sub
xchg
or
aas
add
and
sbb
pop
gs
push
sti
fldenv
lcall
adc
push
test
shr
je
ret
pop
dec
fnstcw
xor
sub
sbb
fwait
and
stc
fwait
add
or
inc
add
jno
mov
sbb
hlt
test
xor
xlat
cmp
in
mov
adc
faddl
push
fdiv
pop
shlb
push
push
shl
pop
and
adcb
jne
dec
mov
adc
lock
push
mov
cmp
out
sahf
scas
mov
ret
sub
add
dec
out
pop
push
cmp
adc
mov
ss
enter
sti
dec
daa
insb
dec
inc
sbb
inc
call
lock
insb
leave
fs
repz
hlt
sub
ds
xchg
xlat
and
inc
jle
fisubl
ret
jnp
push
inc
clc
add
xchg
ror
push
push
xchg
jmp
inc
fsubr
mov
ret
add
fstl
popa
push
jmp
test
add
or
in
jp
addl
cmp
and
ret
and
push
push
adcl
out
outsb
cmp
inc
lds
and
js
push
loopne
mov
adc
sub
stos
lods
or
aaa
xchg
pop
int
clc
push
mov
mov
mov
mov
cmp
pop
sub
and
jne
cmpsl
xchg
mov
hlt
mov
mov
cwtl
jne
add
or
nop
mov
xchg
lods
fs
xchg
fldl
test
or
jb
pop
cs
call
jne
shlb
add
std
lods
std
rorl
into
jne
mov
lea
pop
mov
cmp
clc
dec
loope
and
pop
add
incb
insb
add
repnz
movsl
jnp
jg
xchg
dec
sbb
pop
sar
clc
fldt
in
lea
testb
inc
cmpsl
test
fldcw
std
or
out
or
mov
rolb
mov
hlt
push
ss
sub
mov
mov
pop
ja
stos
xchg
arpl
inc
xchg
mov
lods
rorb
dec
das
pop
shll
pop
cs
rorl
ror
ja
daa
jp
jns
sbb
dec
push
cs
mov
pop
add
scas
sub
xor
pop
andb
cmp
cmpsl
iret
mov
cmp
mov
stc
jmp
mov
or
xchg
fcmovnb
mov
xor
sub
and
mov
mov
fsubl
push
or
out
je
xchg
cmp
imull
push
lahf
xchg
dec
cmp
inc
sub
bound
fwait
xchg
imul
outsb
cmp
jne
enter
sbb
xchg
jb
push
cmp
inc
xor
xchg
inc
sahf
aad
lcall
int
lds
xchg
cmpsb
sarb
sbb
movsb
fmuls
icebp
sub
push
leave
mov
test
mov
mov
mov
dec
outsb
ljmp
int
movsb
fs
push
ret
pop
clc
call
pop
lret
mov
addb
pop
enter
cmp
xchg
roll
inc
cmpsl
cmpsb
adcb
and
cmp
into
imul
std
cmc
int
in
inc
mov
lahf
cmc
inc
lcall
xor
imul
aad
stc
mov
jno
adc
testl
or
sub
cwtl
lret
mov
mov
daa
mov
sahf
add
push
sbb
inc
inc
cld
sub
push
hlt
std
loopne
rcrb
add
fstpl
enter
scas
jge
adc
loopne
xor
and
or
mov
mov
je
testl
pop
insb
adc
orl
adc
std
daa
xchg
lret
cmp
xchg
daa
xor
mov
sbb
lock
cmpsb
pop
or
aaa
addr16
in
dec
push
lock
fdivr
fdivr
lret
in
std
shl
jle
jo
and
shll
shrb
mov
shlb
dec
adc
push
add
pop
jb
mov
lods
rcll
std
aas
mov
mov
push
mov
push
dec
mov
std
push
mov
sbb
lcall
push
xor
std
inc
mov
ret
pop
xor
nop
std
lds
neg
sub
xchg
test
std
out
imul
lods
into
sbb
dec
mov
cmp
clc
xor
sbbb
push
push
mov
cmp
lret
inc
movb
mov
mov
imul
cmp
cli
imul
xor
shrb
into
pop
push
ror
sbb
add
xor
pop
inc
pop
ja
sub
mov
mov
dec
call
icebp
adc
and
sbb
xchg
adc
std
mov
jns
std
xor
jmp
xlat
popa
jl
mov
daa
xchg
mov
std
inc
sbb
cmp
jmp
mov
popa
cmp
jmp
decl
cmp
mov
test
cwtl
ds
sub
test
sub
je
xchg
mov
add
mov
dec
sar
sahf
loop
pop
lock
xor
push
sub
aaa
mov
sbb
jmp
pusha
adc
mov
jge
int3
cmp
jnp
sub
push
addl
adc
dec
test
enter
iret
lret
jns
lock
sub
js
inc
push
lea
fbstp
bound
in
je
mov
movsb
adc
js
xor
filds
jne
cmp
cmp
cwtl
cmovge
lahf
int
cmp
mov
fdivr
jl
add
das
push
dec
pop
push
xchg
jno
push
je
dec
cmp
adc
sbbb
adc
sahf
inc
enter
das
sbb
mov
xchg
and
nop
imul
pop
movl
dec
xchg
mov
das
mov
and
push
mov
sbb
mov
in
sbb
cmp
xor
aaa
push
mov
sbb
lahf
stos
icebp
push
cmp
and
inc
mov
pop
add
or
and
sub
in
dec
out
pop
pop
jo
cmc
ds
sbb
cs
lock
int3
mov
stos
adc
push
lock
pop
pop
xor
pop
xor
add
sbbb
push
test
mov
scas
movsl
call
fs
call
and
sbb
pop
int3
mov
int3
mov
xlat
adc
and
mov
xor
aam
les
out
bound
repz
ss
stos
mov
imul
dec
or
push
dec
ljmp
es
xchg
cmpsb
push
ret
pushf
and
xchg
xchg
int
leave
lcall
das
lret
sub
xchg
and
leave
lret
xor
cmp
jbe
sbbb
lret
cs
sub
test
pop
arpl
cs
mov
insl
jecxz
movsb
repnz
mov
pop
sbb
int3
popf
cmpsl
add
mov
mov
and
int
cld
leave
sti
pop
imul
pop
xor
cs
xor
mov
sbb
sbb
and
pop
mov
mov
pop
pop
stos
jno
orb
xchg
xchg
mov
and
or
inc
jb
inc
jns
aad
push
lret
es
add
bound
dec
xor
leave
adc
test
leave
adc
mov
mov
xchg
pop
nop
nop
nop
daa
push
orb
cwtl
and
and
dec
ret
rclb
mov
je
xor
xor
sti
and
inc
add
roll
out
cmp
dec
movsl
icebp
std
inc
aam
enter
ss
je
sub
xchg
shr
push
orb
mov
xor
nop
sbb
jg
adc
sub
inc
push
pusha
mov
lea
xchg
mov
jo
adc
cltd
xor
sub
lods
and
mov
or
sarb
jg
cmp
test
lret
dec
js
add
fildll
nop
or
adc
add
mov
aam
adc
xchg
dec
rep
shlb
jmp
neg
pop
mov
sub
cmc
lods
lock
push
lods
rcrl
dec
mov
add
add
repz
or
adc
fwait
int
pop
jl
outsl
outsl
push
push
dec
adc
push
and
icebp
dec
repz
push
sub
outsl
inc
or
xchg
lret
jbe
jle
sbb
ja
inc
imul
mov
xor
jo
or
or
xor
cmp
lods
lret
loopne
sbb
xchg
dec
test
inc
pusha
jae
and
call
fadds
xor
sub
fidivl
ss
sub
rcr
aam
mov
add
sub
adc
in
dec
sbb
pop
lock
rep
jge
xchg
cli
rcll
in
cmp
cld
and
inc
cmp
push
or
enter
mov
jmp
pop
jae
daa
and
repz
cld
sub
pop
fcmovnu
imul
or
mov
inc
cltd
inc
movb
jne
mov
adc
or
mov
add
pop
aam
clc
sub
loop,pn
jne
xchg
pop
inc
prefetcht1
sarb
add
jnp
lds
dec
dec
jl
xchg
mov
mov
mov
cmpl
mov
jnp
inc
pop
mov
sub
cltd
add
jb
cmp
adc
or
and
iretw
into
ds
push
rcr
or
roll
gs
xchg
test
cld
push
mov
inc
or
push
enter
cmp
outsl
mov
test
je
divl
adc
mov
jnp
loop
ret
aaa
mov
sbb
sbbb
xlat
iret
add
and
jle
popa
add
sub
mov
sbb
dec
mov
je
jmp
bound
add
out
dec
mov
pop
mov
jmp
sub
adc
das
das
mov
repnz
clc
push
jo
mov
mov
mov
inc
push
in
inc
dec
pop
sbb
pushl
fisttpl
cli
push
inc
and
mov
addr16
xor
mov
or
inc
mov
xchg
filds
cmp
jnp
aad
add
je
hlt
daa
clc
inc
push
xor
scas
or
sbb
jae
testl
es
ss
repz
add
jno
les
jmp
jne
jp
adc
nop
add
mov
lds
rorb
cmp
adc
or
sub
adc
push
daa
xchg
mull
psllq
sub
jnp
cmp
jmp
rcr
or
jne
div
pop
dec
adc
mov
mul
pop
jb
cmp
or
cmp
or
fwait
xchg
mov
cwtl
adc
inc
inc
and
neg
fcmovu
fmul
and
scas
nop
jle
iret
mov
inc
in
sub
add
movntps
dec
jle
pop
inc
and
pop
jmp
pop
clc
mov
inc
inc
repz
movb
inc
clc
movb
dec
adc
and
arpl
push
lahf
lret
lods
iret
add
mov
adc
cmp
and
sub
cmp
rcrl
or
clc
out
sub
nop
xor
pop
pusha
loopne
adc
andl
mov
and
dec
leave
mov
jne
mov
sbb
mov
and
or
push
movl
stos
fwait
cmpsb
xchg
test
cmova
dec
sub
sbb
and
sbb
shrl
test
add
lea
or
push
jno
jb
mov
clc
aas
push
cmc
aad
adc
lret
push
popf
test
test
ret
cmc
jne
aaa
mov
add
lea
xchg
dec
inc
sahf
adc
adc
cwtl
sbb
sbb
dec
mov
popf
and
sbb
sbb
adcb
push
inc
or
inc
cmp
loopne
jb
pusha
jl
mov
orl
push
pop
loop
pop
les
cmp
jo
xor
adc
pop
add
test
jo
mov
adcb
out
add
lret
jo
xor
push
xchg
xor
mov
mov
add
sub
enter
add
pop
sbb
adc
or
fwait
daa
stos
add
push
sbb
add
jb
out
jo
push
push
jo
test
jge
in
daa
ret
sar
insl
sub
jnp
sub
inc
lock
js
adc
add
pop
adcl
xor
aad
inc
cmp
push
pop
pop
push
ja
cltd
mov
mov
fisubrl
je
mov
jo
repz
gs
push
pop
and
stc
add
xchg
push
ret
adc
or
shll
pop
mov
mov
rolb
loopne
mov
fdivrp
iret
inc
pop
lahf
push
jle
sub
or
mov
shl
push
adc
add
loopne
xor
ret
icebp
ljmp
jle
in
xor
jo
and
ljmp
add
jo
mov
les
and
int3
pop
inc
clc
cs
lret
push
out
cmp
je
imul
shlb
faddl
aam
xchg
pop
addr16
adc
cld
pop
and
mov
cmp
ret
and
xchg
add
fiaddl
or
xor
ficoms
dec
push
mov
lcall
setl
hlt
add
lods
hlt
icebp
push
dec
in
repnz
dec
dec
adc
dec
add
mov
or
jbe
cmp
cmp
jb
in
xchg
nop
loope
fistps
pop
cltd
inc
sub
and
aaa
mov
cmp
roll
popa
loop
and
dec
sbb
mov
ds
pop
jne
or
fcoms
pop
bound
inc
inc
fistl
or
push
movsb
cs
sbb
hlt
adc
or
jp
sbb
jb
inc
sub
or
pop
ficompl
pushf
lahf
push
push
sub
jmp
or
clc
lcall
inc
and
or
adc
pop
mov
jno
cs
daa
push
xor
cmp
pop
test
dec
out
inc
and
pop
sbb
dec
or
pop
dec
adc
dec
cmp
test
dec
enter
adc
jbe
andl
or
push
pop
mov
adc
mov
push
and
dec
push
imul
inc
xchg
rorl
out
out
push
push
add
push
inc
movsb
inc
and
jne
movsb
addl
sar
add
sbb
outsb
and
cmp
int3
add
sub
and
js
test
repz
lock
sbb
or
imul
mov
mov
nop
loopne
sbb
xor
test
loop
sub
cmp
ss
sbbl
pop
pop
sbb
lret
cmp
xchg
gs
sub
adcb
push
cmp
xchg
pop
outsb
xor
cmc
mov
fwait
sbb
lock
leave
push
sbb
inc
daa
push
lret
sbb
xor
xchg
mov
movsl
xor
hlt
push
mov
movsb
push
cmp
or
pop
shl
divb
add
in
hlt
add
or
idivb
pusha
xlat
into
adcl
pusha
jne
mov
adc
sub
mov
or
lock
shll
fs
fs
xchg
fstps
arpl
loopne
adc
mov
sbb
and
mov
ret
xorb
push
insb
jmp
xchg
jp
cmp
loopne
mov
sub
sbb
stos
dec
mull
jmp
mov
in
push
scas
je
dec
or
cwtl
cwtl
push
xchg
pop
fidivrl
in
or
idivl
push
in
sub
push
in
mov
xorl
or
je
imul
dec
mov
mov
jne,pn
sbb
out
mov
mov
in
jbe
ret
adc
cmp
jge
mov
fsubs
inc
cmp
or
fildl
fidivrs
pop
sbb
rolb
lds
dec
jmp
push
dec
cmp
insb
rorb
add
xor
add
or
sub
adc
int
lcall
jmp
pop
add
add
lcall
cmp
xchg
insb
in
das
or
push
addr16
push
adc
sarb
pop
movsb
dec
sbb
fadds
mov
add
sub
lcall
xchg
sbb
and
adc
or
cmp
and
in
dec
insl
loopne
mov
and
dec
add
aaa
or
jb
add
and
and
out
push
lods
and
inc
test
sub
and
rclb
stc
sbbl
loope
rcll
or
aam
lods
cmc
sbb
insl
or
mov
and
push
sti
inc
dec
mov
cmp
jbe
or
mov
jge
push
jmp
mov
jnp
js
mov
jmp
out
sub
pop
je
or
sbb
mov
ljmp
sub
sub
repz
mov
and
or
adc
in
imul
dec
add
cmc
orb
in
add
push
out
mov
out
movsl
ljmp
in
mov
add
adc
fcom
jl
xor
mov
inc
and
adc
cmc
jmp
incl
dec
or
or
xorb
inc
mov
adc
sub
mov
dec
dec
push
jne
xor
test
and
jne
xchg
add
inc
call
fsubrs
ja
cmp
stc
pop
ss
jmp
xor
dec
pop
mov
inc
inc
adc
add
add
inc
pop
je
mov
test
jb
je
xchg
or
mov
and
push
cmp
mov
shr
outsb
adc
add
or
pop
push
lock
popf
push
cmp
cmp
leave
inc
sub
jp
inc
mov
add
xor
inc
pop
xlat
cmp
loope
pop
add
adc
inc
loope
inc
pop
ljmp
cwtl
mov
push
sbb
sub
xor
sbb
frstor
mov
adc
inc
mov
mov
xchg
dec
inc
push
mov
add
or
pop
aam
movb
aaa
movsb
push
aas
jae
mov
cs
dec
shl
lods
mov
mov
fimull
xchg
jge
mov
ss
orl
sbb
clc
or
add
js
daa
mov
dec
jns
bound
adc
js
jne
pop
and
inc
rolb
or
aaa
sahf
jb
xor
jbe
push
jne
in
sbb
cmp
dec
inc
inc
or
jne
repnz
jl
dec
mov
sar
or
xchg
nop
dec
inc
hlt
dec
arpl
mov
dec
or
cli
jae
pop
clc
inc
add
xor
add
push
cmpl
pop
sbb
xchg
push
imul
lock
ficompl
or
jo
xor
or
out
int
js
sbb
ljmp
cmp
fcmovnb
cld
pop
adc
mov
and
lea
pushf
in
cli
aaa
pusha
xchg
push
pop
push
dec
loop
add
add
add
xorl
mov
jmp
insl
mov
or
or
or
or
and
xor
inc
xor
or
in
js
loopne
lret
sub
xchg
jae
mov
subl
cmp
and
push
out
mov
add
pop
sbb
rcl
push
scas
rorl
addl
rorl
in
dec
andb
and
push
cmp
daa
adc
test
mov
dec
sar
sarb
jg
popf
or
adc
ret
scas
inc
xchg
jle
jo
push
mov
dec
push
and
push
push
ljmp
dec
mov
push
mov
add
clc
out
add
push
add
sub
rcr
and
jns
push
inc
or
inc
adcl
adc
fdivp
cmp
or
addl
pop
in
fnstenv
andl
testb
xor
shl
inc
and
mov
mov
cmc
adc
mov
shrl
push
push
cmpsl
adcb
adc
sub
sbb
push
add
filds
mov
jmp
shrl
pop
notb
jae
lcall
mov
aad
sbb
dec
dec
out
mov
pop
rcrl
mov
stos
inc
out
push
xlat
cs
lahf
dec
mov
xor
sahf
mov
push
xchg
movsb
loope
lock
add
xor
and
jg
pusha
mov
test
adc
loopne
or
sub
fisttpl
push
shll
sub
sbb
cld
sahf
ret
enter
add
adc
jb
rcrl
icebp
mov
cmp
sbb
cmpl
dec
loopne
xchg
sbb
das
mov
pop
clc
in
mov
shll
pop
mov
popa
push
mov
push
sub
jle
fldt
mov
and
mov
push
xor
dec
out
add
jmp
pushl
jae
sub
add
adcb
push
pop
jmp
orps
mov
loopne
add
iret
sti
or
inc
adc
jl
stc
cs
jae
mov
xor
dec
pop
sahf
lret
adc
inc
nop
aaa
xchg
js
add
les
bnd
cmp
cmp
pop
je
cmpsb
xor
push
cmp
fnclex
test
ret
lcall
or
pop
or
or
jno
add
sti
or
add
mov
and
push
dec
pusha
jb
jbe
push
or
add
jbe
add
push
adcl
insl
pop
mov
cld
shr
adc
sub
fsubr
lahf
fcom
jl
mov
int3
cmpl
mov
mov
lock
imul
inc
cmp
jle
ds
and
sbb
adcb
sbb
add
xchg
fiaddl
or
mov
sub
push
pop
cmp
fisttpll
das
jg
add
fsub
and
jmp
mov
add
xor
inc
stc
fimull
scas
mov
sub
mov
frstor
pop
and
sbb
out
fstl
add
sub
sub
adc
sub
push
and
push
loope
movsb
jne
test
test
jg
dec
idiv
xlat
call
or
data16
sub
adc
outsl
jo
pop
test
adc
test
adc
sbb
movsl
test
test
fsubl
mov
in
rorb
aam
push
push
and
aam
leave
popa
and
enter
dec
dec
ret
mov
imul
rclb
or
fwait
inc
lods
sub
jl
cmp
jg
inc
jmp
insl
mov
pop
jbe
cmp
inc
fdivs
imul
mov
jge
aas
sbb
adcl
test
in
add
loopne
rcr
fsubs
popa
sbb
adc
jle
sahf
loope
mov
mov
push
mov
adc
arpl
add
das
jle
mov
cmp
push
ja
ja
jnp
cld
and
add
mov
push
mov
test
in
or
xchg
cmc
or
stc
in
shlb
movl
sbb
xorb
in
test
cmp
xchg
adc
je
mov
jp
mov
xchg
add
and
push
add
pop
or
fcmovu
into
or
sbb
in
sub
mov
xchg
cmp
mov
inc
loopne
lods
sbb
stc
sub
mov
imul
mov
enter
sbb
pushf
inc
fs
cmp
jbe
and
pop
and
jg
sub
jae
das
mov
mov
mov
shrb
sbb
pop
adc
out
test
cmp
jl
fwait
sub
add
movsb
or
fimull
inc
add
mov
insl
hlt
imul
cltd
cli
mov
dec
and
scas
dec
and
into
in
and
adc
out
jmp
adc
mov
das
rcrl
xor
inc
test
sub
test
mov
and
jge
or
jne
inc
sbb
lea
fsubr
cmp
or
arpl
xor
dec
subl
add
movsl
dec
sub
add
lahf
arpl
mov
and
xor
and
sbb
push
fs
lret
rorb
mov
inc
or
lret
or
lea
adc
add
js
lock
push
jl
push
lock
xor
or
add
add
test
adc
sbb
add
cmpsb
in
insl
cwtl
sbbb
pushf
sbb
push
call
and
jecxz
adc
and
push
push
adc
xor
dec
inc
out
dec
dec
sahf
adc
sahf
push
out
pop
jg
int3
dec
xchg
inc
jg
push
pop
jl
push
or
mov
sub
outsb
cwtl
xor
push
leave
xchg
xchg
rcrl
lods
or
jo
cmp
fneni(8087
sbb
push
xor
and
lock
or
xor
mov
and
sbb
dec
dec
loope
sahf
addr16
lea
sbb
sbb
fdivs
aaa
inc
inc
pushf
mov
xor
clc
fwait
sbb
or
push
in
or
outsl
mov
fcomps
into
jmp
pop
cmpsb
sbb
add
cmpl
and
mov
ja
inc
or
sbb
je
fidivrl
pusha
xor
cmp
shlb
cmpsl
je
add
mov
adc
push
cwtl
cmc
repnz
inc
cmpsl
and
out
pop
rcrl
addr16
mov
into
cmp
rcl
cmpl
out
cmpl
inc
push
mov
movsl
and
jge
push
mov
push
ret
fnstenv
push
lock
or
mov
or
testl
sti
cmp
adc
or
pusha
ss
test
aas
push
mov
inc
mov
cld
sbb
nop
inc
xchg
call
and
les
xor
cmp
and
outsl
push
push
xor
mov
adc
xchg
jbe
pop
subb
mov
mov
fstps
xchg
stos
cltd
aam
push
or
pop
adc
cmpl
jg
adc
outsl
mull
or
pushf
cmp
fisubl
sbb
je
xchg
je
mov
mov
sbb
jmp
inc
xor
shrl
sbb
mov
testb
pop
inc
add
popa
jno
add
es
add
pop
sub
mov
xchg
pop
pop
call
adc
adc
xchg
adc
add
fld
imul
sti
pop
add
hlt
xorb
jb
mov
fcoms
add
inc
push
push
add
push
lret
test
or
dec
sub
sbb
add
and
cmp
pushl
mov
cli
adc
cmp
enter
test
inc
andb
pusha
dec
xor
mov
pop
sub
jno
popf
xchg
jns
popa
sub
add
ja,pn
cmpb
lea
sarl
pop
je
pop
cmc
and
xor
ss
dec
imul
adc
movsl
or
lcall
ja
inc
pop
mov
jb
mov
mov
inc
cmp
ret
jae
push
cmp
jl
mov
inc
and
loopne
jle
adc
leave
or
inc
ja
jg
pop
lock
jne
clc
push
mov
stc
push
add
or
cmc
or
and
lods
mov
jb
mov
repnz
push
inc
add
xorb
and
dec
and
jo
dec
xor
enter
icebp
stos
push
sarw
scas
mov
add
gs
add
mov
jae
fmuls
or
add
aaa
pushf
mov
add
cmc
lods
mov
inc
psrlq
jne
add
xor
add
scas
imull
es
frstpm(287
or
out
push
arpl
aam
mov
mov
and
outsl
pop
lock
push
dec
inc
jecxz
add
xchg
xor
outsb
or
xchg
lock
jmp
inc
jp
test
inc
mov
clc
subl
push
ss
ljmp
ja
xor
push
or
mov
push
jle
loope
test
push
add
mov
sbb
dec
inc
push
insl
jl
mov
add
adc
sbb
stos
rorl
aam
jo
jl
hlt
mov
and
outsb
jmp
insb
aam
and
and
inc
add
pusha
jbe
add
stos
lock
sbb
decl
icebp
fistl
cmp
fstl
orl
fcompl
mov
hlt
pop
sarb
int
aad
jecxz
out
or
shlb
sbb
das
nop
pop
popa
fadds
push
pop
jne
jo
scas
pop
and
mov
pushf
and
inc
popa
aam
xchg
or
faddp
pop
or
sub
add
push
ljmp
and
das
sbb
sub
nop
icebp
int
shll
jnp
es
lret
mov
clc
push
mov
ljmp
xor
sbb
movsb
sbb
sub
and
cmp
int3
push
mov
mov
aas
nop
adc
xlat
je
subl
adc
cmp
jb
testb
clc
mov
add
or
pop
orl
cmp
jge
push
daa
fidivrl
jmp
inc
movb
ret
pop
je
cmpsb
xor
dec
jl
sub
pop
adc
push
decb
cs
push
or
and
add
mov
ds
fdivl
and
imulb
xor
outsl
adc
sbb
jle
push
push
out
iret
les
insl
cld
jle
lods
or
ds
rcrb
fstpl
add
and
mov
push
inc
pop
pop
cltd
jo
mov
add
rol
aaa
cmpsb
push
push
pop
sub
mov
and
and
pop
sub
sbb
cmpsb
pusha
nop
or
cmp
pop
add
xchg
cli
adc
jbe
lea
lea
mov
mov
add
int3
out
dec
pushf
sub
repz
mov
mov
popl
test
sbb
dec
mov
xor
enter
push
icebp
cwtl
push
cmp
xorl
sti
or
mov
mov
add
dec
and
or
push
imul
mov
mov
mov
shrb
call
pop
rcl
pop
shll
aas
inc
mov
leave
xor
out
shrb
inc
add
lds
jnp
cmp
imul
mov
mov
dec
gs
test
test
andl
push
or
outsb
and
daa
adc
ss
fmull
and
sub
pushf
pushf
pushf
pushf
xor
cmp
inc
and
inc
cmp
cmp
push
dec
dec
cmp
pop
pusha
fs
dec
dec
dec
push
inc
dec
dec
js
leave
and
sbb
and
dec
xor
leave
cwtl
pushf
mov
and
imulb
push
sbb
lds
je
cs
mov
insl
add
lock
xor
jle
and
pop
or
clc
adc
cld
imul
or
lcall
pop
mov
or
and
or
ror
mov
pop
and
xchg
pop
sub
jo
add
pop
dec
inc
ret
push
jae
xchg
cmp
shlb
mov
dec
jne
out
xor
sub
jbe
pusha
lret
xor
xchg
mov
sbb
mov
inc
xorb
dec
sbb
scas
xor
and
or
sbb
shll
sub
push
lock
add
sarb
dec
int3
pop
aam
mov
pop
add
out
push
inc
pop
and
sbb
movsb
jno
fiaddl
jne
cltd
lret
lods
lret
mov
xor
inc
movsb
jno
mov
fcoms
pop
cli
jle
or
pop
cmp
lods
mov
or
das
mov
push
cmp
sub
push
add
ret
ret
adc
add
push
pop
rcrb
stos
or
cmp
fmuls
in
push
mov
scas
rcr
mov
int3
sbb
fcompl
inc
lcall
pusha
bound
jae
negb
add
pop
arpl
je
push
pushf
jnp
or
insl
in
sub
adc
loopne
mov
lods
jge
mov
or
add
or
insb
pop
push
gs
ret
lahf
push
and
dec
repz
nop
test
mov
mov
int3
add
data16
add
mov
pop
and
aam
fwait
mov
es
insl
push
jno
mov
clc
inc
mov
adc
testb
pusha
lods
xchg
xor
imul
test
dec
xor
bound
inc
jg
adc
and
and
xor
sbb
iret
int
add
jp
sbb
fildl
hlt
or
lret
and
mov
add
decl
loopne
or
mov
pop
mov
adc
cmp
jl
cmp
mov
push
outsl
insb
xchg
or
jmp
enter
sahf
inc
in
std
xor
mov
psrlw
and
andl
sub
pop
push
xor
push
sbb
test
sti
inc
insl
adc
jmp
fwait
lock
subl
mov
pop
xchg
aaa
clc
push
lret
pop
mov
inc
push
add
ljmp
cmp
and
cmp
xor
jge
mov
std
or
push
ja
add
pop
mov
xchg
cs
lea
push
and
in
outsl
addb
add
sar
mov
aas
mov
add
sahf
add
pusha
je
fsubs
cltd
mov
nop
rorb
fstps
xchg
and
push
adc
or
stc
popf
add
mov
sbb
mov
inc
sbb
jbe
rclb
ljmp
inc
cs
inc
pushl
mov
fucomp
dec
cmp
dec
sub
add
loope
dec
inc
cmp
pop
andl
cmp
cmp
dec
sub
xchg
sbb
mov
push
movsb
inc
adc
je
mov
mov
pop
cmp
in
lods
mov
fstpt
sub
adc
push
hlt
pop
add
loope
dec
cmc
cmp
stos
cmc
lret
or
add
data16
outsb
cmp
add
js
in
fidivrl
enter
push
mov
aam
cmpsl
notb
adc
inc
call
jmp
push
dec
inc
mov
add
push
add
and
es
inc
mov
mov
jnp
rorb
cltd
dec
pop
pusha
fcoms
push
inc
cmp
dec
sbb
or
add
mov
xor
sarl
jno
mov
mov
dec
mov
into
mov
add
imul
push
test
shlb
mov
push
add
sbb
pop
test
push
jbe
cli
jne
movzwl
push
cmp
rcrl
add
inc
jmp
push
push
jmp
push
or
roll
inc
dec
js
out
pusha
push
je
jae
adc
fcomp
pop
dec
mov
push
cmp
sbb
cld
cmp
into
fisttps
cmp
sub
testb
xor
xchg
mov
cmp
dec
add
roll
xchg
mov
lret
pop
fbstp
and
jmp
xchg
mov
cli
fsubr
sub
sub
mov
push
cmp
mov
adc
loopne
inc
cmp
cmpsb
aas
movb
inc
mov
in
adc
cmpl
fmuls
push
rcll
and
inc
pop
outsl
pop
pop
fldl
mov
xorb
cmp
jmp
fldenv
mov
dec
pushl
pop
pop
and
mov
inc
cmp
movsb
js
inc
cmp
fbstp
orl
pop
mov
xor
fiaddl
sbb
or
in
mov
sub
add
adc
jl
xchg
sbb
lods
dec
dec
stc
pop
xchg
cmp
in
push
inc
mov
mov
add
xchg
push
or
or
or
add
test
mov
ret
push
cmpsb
pop
lock
mov
mov
scas
sub
out
mov
insb
cs
std
jno
xor
and
xchg
fs
fisttpll
xor
jns
je
add
push
js
lret
jmp
or
and
stos
adc
inc
test
aas
lea
mov
vmptrld
pushl
lods
adc
and
fdivrs
or
ljmp
dec
cmp
adc
clc
test
xor
jnp
xor
fbstp
jle
into
inc
cmpb
mov
imul
dec
cmp
orb
xor
and
pusha
ja
push
xor
test
mov
inc
jbe
or
leave
pop
mov
cmp
mov
add
pop
mov
sub
and
pop
int3
xor
je
sbb
incl
mov
sub
loope
clc
or
sbb
inc
jmp
sbb
xor
mov
adc
movsb
test
jmp
unpckhps
or
aaa
mov
sbb
or
push
pop
adc
sbb
mov
pop
adc
mov
sub
xor
dec
jg
push
push
pop
cmp
jno
stos
and
mov
push
in
fldenv
aas
sbb
push
and
adc
xor
addr16
sbb
add
mov
repnz
and
leave
fdivl
pop
inc
inc
push
xchg
inc
in
les
test
inc
mov
mov
add
mov
dec
and
aam
mov
les
adcb
pushl
and
pop
rorb
cmp
xchg
cmp
sbb
sub
or
mov
mov
ficomps
jbe
sub
mov
jge
mov
mov
orl
inc
out
push
gs
mov
cmp
push
pop
cmp
out
insl
loopne
lods
jg
rclb
add
call
imulb
pop
leave
sub
or
rorb
adc
jae
pop
push
cld
rol
jne
daa
adc
mov
inc
testb
adcb
push
pop
sbb
lods
lods
pop
lods
pop
pop
or
sub
jg
add
mov
stc
jns
add
clc
je
xor
add
test
adc
lock
pop
insl
stos
xchg
cmp
mov
mov
inc
sub
dec
mov
cld
movsb
jmp
push
imulb
push
shlb
push
lea
cmp
inc
inc
jmp
test
add
js
pop
add
push
add
into
xchg
lods
jecxz
and
test
add
push
inc
filds
jle
popf
adc
adc
adc
push
fsubrp
pusha
test
dec
pusha
icebp
outsb
test
lret
jae
cmpsl
movsb
insb
pop
dec
lret
or
sub
inc
jmp
icebp
arpl
aam
push
jecxz
int3
dec
mov
loop
jle
mov
or
shlb
ret
push
add
sub
jmp
cmp
and
pop
add
sbbb
push
push
pushf
fcoms
sbb
add
stos
jnp
sbb
sub
cmp
rol
push
loope
or
fistpl
cmp
mov
sub
fsubrl
add
xchg
cmp
inc
mov
jae
mov
mov
psubw
arpl
scas
adc
loop
das
mov
cwtl
cmp
pop
dec
inc
xchg
mov
mov
pop
arpl
mov
test
aam
inc
dec
cmp
mov
xor
sbb
pop
clc
mov
mov
add
icebp
and
sbb
leave
lea
and
sbb
and
mov
sub
and
test
cmp
dec
cmp
dec
jnp
push
fdivrs
repnz
dec
outsl
or
das
adc
inc
cli
jb
or
rorl
jl
iret
add
xor
fucomip
and
or
and
mov
or
dec
in
inc
imul
mov
and
jne
or
inc
adc
inc
les
cli
adc
outsl
jmp
inc
and
popa
or
fistl
sbb
mov
icebp
jne
and
or
inc
stc
out
icebp
insl
mov
dec
or
ror
xorb
xor
xor
jmp
sub
xchg
lret
push
es
es
mov
adc
inc
add
hlt
push
mov
pushf
pop
mov
xor
pop
sub
je
push
popf
ds
cmp
call
or
data16
pop
divl
push
mov
add
push
lcall
adc
dec
repnz
add
rorb
adc
push
in
add
cmp
or
or
shll
or
repnz
dec
mov
popa
lahf
notl
mov
xchg
test
and
or
je
xchg
add
or
or
nop
addr16
sbb
not
xor
loope
xor
and
add
and
shr
add
and
pop
shr
and
inc
fsubl
lret
and
inc
cmp
cmp
test
adc
cmp
adc
test
xor
xchg
cmp
out
mov
mov
inc
lret
sbb
push
int
sahf
or
sub
inc
jmp
pop
clc
incb
dec
mov
fucomi
adc
lock
and
mov
sbb
popf
mov
jl
and
jecxz
dec
jae
cltd
jge
add
or
je
jns
call
or
or
ret
push
jge
je
sbb
loope
sarl
cli
add
pusha
mov
pusha
loope
pop
sub
movsl
pusha
xchg
ret
inc
jecxz
pop
inc
ficoml
pusha
cmp
frstor
imul
sbb
push
rcr
add
lret
std
inc
testb
push
es
adc
mov
add
add
test
ret
clc
fisttps
push
jg
mov
adc
or
sub
push
es
mov
or
push
mov
cmp
and
sbbb
xorb
sbb
jmp
push
and
inc
add
adc
pop
xchg
movb
push
fld
add
or
pop
push
adc
mov
mov
adc
inc
sub
std
adc
jbe
in
dec
or
sub
ficomps
jno
ret
adcb
adc
mov
sti
lret
sub
mov
inc
xchg
sahf
inc
aam
xchg
push
or
mov
pop
ret
fcompl
mov
in
mov
jl
add
sub
sub
jmp
cmp
mov
sub
push
xorb
or
inc
xor
xchg
test
int3
adc
mov
cmpsb
jg
hlt
add
mov
roll
pusha
jns
test
clc
mov
sbb
fstpl
xor
clc
loop
add
cmp
fnsave
ljmp
call
call
les
sarl
add
sub
bnd
enter
pop
mov
mov
jge
test
lcall
insl
in
adc
pop
orl
loopne
cmpl
mov
push
push
and
sahf
jmp
pop
movsb
add
in
aam
sbb
sub
cld
xchg
and
mov
decb
push
and
fadds
mov
pop
pop
sub
sbb
jle
push
add
int
add
sbb
pop
test
je
rolb
or
pop
pop
inc
out
out
gs
mov
mov
xchg
cmp
mov
enter
add
xchg
mov
lods
test
lds
adcb
out
push
or
or
adc
sahf
sub
jg
rorl
push
and
push
adc
and
pop
sbb
jns
and
mov
rcrl
xchg
pop
mov
imul
add
mov
loopne
sbb
inc
and
push
adc
cmp
or
fimull
or
mov
pushf
jns
sub
or
roll
idivb
scas
adc
mov
or
in
lcall
add
add
enter
addb
inc
sbb
or
pop
mov
jbe
sub
adc
sub
or
inc
popl
dec
or
sarb
out
jb
fnstsw
adc
push
jns
in
rorb
dec
xor
pop
std
movsl
mov
jecxz
jp
or
or
jecxz
popa
mov
js
and
cs
cmp
cmpps
sahf
push
icebp
stos
mov
xchg
shl
jne
in
ret
movsl
xchg
pop
gs
ljmp
xchg
mov
xchg
cmpsl
pushf
mov
mov
pop
sbb
xchg
push
pop
sub
fadds
into
aaa
sub
fdivs
cwtl
fstpt
test
test
cmpsl
push
dec
in
dec
pop
or
mov
sub
icebp
sbb
das
mov
or
or
stos
fidivs
or
push
out
mov
adc
jne
mov
mov
cld
push
add
sbb
jl
sbb
sub
call
ljmp
lock
jb
aad
push
fstpl
sbb
adc
mov
imul
loop
inc
flds
or
popa
and
dec
sbb
mov
or
cld
mov
adc
fldt
add
adc
int3
and
sbb
mov
and
jle
call
test
jb
mov
inc
dec
out
jo
push
cli
mov
je
mov
loopne
test
cli
call
push
mov
xchg
and
and
xchg
jo
test
and
clc
inc
outsl
ljmp
adc
add
push
mov
cmp
jle
add
sbb
or
std
sbb
fidivrs
push
popa
inc
shlb
xor
fsubrs
inc
pusha
lods
adc
push
cmp
insl
push
mov
and
data16
aaa
dec
and
ja
mov
jnp
iret
jl
enter
xchg
adc
lcall
add
xchg
in
add
adc
cli
dec
enter
es
test
xor
fnsave
je
xor
psubq
xchg
rcr
hlt
push
mov
push
mov
add
or
or
add
loope
imul
pop
add
adc
pop
xor
or
ljmp
mov
mov
dec
andw
movsb
cmp
inc
inc
mov
repz
ret
orl
stos
lret
int
add
aas
inc
orb
mov
loopne
test
push
or
jle
shrb
sub
mov
sub
push
data16
add
mov
push
daa
mov
mov
test
jne
or
jl
mov
and
or
stos
stos
test
call
lcall
jg
test
mov
cltd
and
add
cmp
pop
add
gs
dec
jns
dec
out
xchg
mov
xchg
loopne
lea
pop
subb
inc
rorl
cmp
or
in
pop
pop
inc
aam
loop
rolb
adcl
shlb
repz
push
cltd
shlb
idivl
mov
out
mov
inc
mov
dec
jl
sub
dec
jbe
dec
data16
daa
icebp
mov
add
test
cltd
js
xor
cmp
sbb
dec
outsb
das
lods
jg
adc
jb
incb
jae
mov
mov
adc
es
sub
jns
add
and
cmpsb
fiadds
lcall
push
add
hlt
ljmp
sti
cmp
dec
dec
stos
test
ds
and
pushf
packuswb
push
aam
xor
inc
inc
xchg
loop
or
rorl
mov
clc
out
ret
cli
out
and
push
cld
not
in
popf
inc
cmp
jle
iret
cmpsb
and
sahf
pop
ds
push
or
push
and
icebp
jne
shl
and
mov
or
inc
shl
clc
loope
inc
mov
jl
mov
movsb
data16
fs
aam
movsb
sbb
bound
popa
pop
lahf
cltd
inc
jno
dec
mov
hlt
test
inc
icebp
and
or
addb
mov
inc
sub
lea
dec
add
inc
sbb
dec
mov
fs
push
pop
xor
jg
xor
add
adc
dec
lds
inc
lock
or
jecxz
insb
inc
or
add
sbb
mov
mov
inc
mov
mov
leave
call
add
fcompl
gs
xchg
lret
mov
clc
pop
aam
mov
iret
and
cmp
mov
or
jno
shrb
cld
sbb
add
ret
jge
jmp
pop
scas
shl
pusha
sub
push
out
pusha
std
adc
xor
and
add
or
push
outsl
add
stc
and
scas
mov
pop
bound
pop
pop
xchg
test
or
sub
pop
inc
or
adc
xchg
pop
add
adc
sub
inc
cmpl
adc
cmp
sbb
test
inc
adc
sbb
inc
movsl
cmpl
sahf
mov
push
sti
xchg
repnz
push
adc
lcall
add
movsb
call
pushf
mov
xchg
ljmp
inc
nop
xor
or
lcall
push
or
or
jmp
xor
cs
lods
and
xchg
add
pop
int3
mov
sub
stc
or
push
dec
jmp
outsb
mov
adc
and
mov
push
cmp
rolb
outsb
or
call
adc
mov
test
jp
jmp
ljmp
jmp
andl
jmp
cmpsl
push
push
lods
jbe
mov
adc
mov
or
mov
lock
testb
cmp
jle
cmp
push
xor
lock
or
and
xchg
lods
in
adc
mov
sub
cmp
fs
xchg
adc
xchg
mov
mov
mov
shlb
dec
sbb
push
pop
jge
xorl
pop
cmp
test
in
add
jb
lahf
push
dec
dec
jae
imul
sbb
or
cmp
jo
mov
fisubrl
sti
sbb
dec
call
decb
push
sub
mov
or
xchg
rorb
orl
pop
dec
daa
adc
test
stc
sub
pop
inc
ret
xor
mov
stos
sub
mov
shr
mov
call
out
je
mov
test
nop
mov
mov
fs
pop
cmp
jbe
testl
testl
fisubrs
push
subl
inc
sbbb
aam
push
sbb
and
sub
or
cmp
lahf
mov
jmp
mov
jmp
push
pop
int3
push
adc
icebp
xor
mov
sbb
into
dec
clc
hlt
push
sub
pop
jne
xor
inc
mov
xor
or
inc
int
push
cwtl
jge
neg
add
mov
push
inc
sbb
xlat
test
cmp
jnp
mov
sbb
push
shl
ret
ja
jnp
jge
jle
add
sub
xor
jne
push
adc
inc
xadd
or
dec
test
loop
jge
cli
push
inc
lahf
lods
rcrl
and
inc
aad
test
jb
mov
dec
mov
cmp
andb
mov
fmulp
clc
sbb
push
push
in
mov
ret
and
adc
out
pop
dec
mov
fs
andl
out
dec
rcll
iret
sbb
ja
in
mov
mov
pop
mov
ja
push
sbb
movb
testl
jne
enter
les
outsb
fldl
pop
inc
into
jne
inc
or
int
mov
cmp
jne
hlt
int3
or
data16
jne
mov
inc
mov
rcrl
or
divb
cli
push
lea
xor
or
add
aaa
or
scas
sbb
cld
or
sub
icebp
dec
lock
inc
push
add
imul
insl
mov
pushf
sub
lcall
add
stos
add
pop
aaa
gs
push
and
and
shll
hlt
mov
rcr
add
or
shr
add
rcll
rcrl
mov
jg
nop
loop
jmp
dec
sub
stos
lret
mov
notb
aaa
pop
outsl
ret
ss
fcom
movsb
mov
loopne
shr
or
mov
sahf
dec
add
adc
mov
pop
data16
push
inc
loopne
xor
and
mov
dec
mov
jge
cmp
add
ficoml
negb
pop
adc
rorl
inc
jmp
call
push
jmp
fidivl
push
jb
push
jo
mov
push
add
mov
sbb
lea
stos
or
add
lret
lods
lret
into
jmp
scas
push
xchg
mov
inc
dec
and
add
test
les
add
add
jp
lret
das
mov
xchg
add
negb
lret
sub
movups
jnp
add
or
call
inc
sbb
adc
cmpsb
inc
iret
repz
nop
push
adc
mov
aam
out
ds
cmp
movsb
pop
sub
mov
adc
push
aad
ja
ret
jmp
inc
add
fwait
test
pop
jne
cmp
add
add
pop
cmp
push
mov
adc
and
mov
jo
andl
cmp
pop
push
in
popa
and
push
or
negb
push
xchg
xchg
adc
inc
cs
or
or
ss
cmp
je
or
loopne
popa
xor
mov
dec
cmpb
je
mov
cmp
push
sbb
add
or
mov
out
insb
insb
add
adc
add
xlat
push
sbb
dec
cmp
outsb
fisttps
adc
xchg
or
pop
adc
or
in
add
mov
xor
xchg
and
test
mov
jnp
add
push
das
pusha
xchg
notb
pop
jno
xor
jmp
shl
and
cmp
dec
sbbb
xchg
sub
pop
xchg
mov
cmc
jmp
xchg
and
inc
subb
jbe
or
add
pop
and
test
rorl
mov
shll
test
dec
setg
sub
out
clc
add
mov
and
sub
loop
aas
or
jne
movb
lea
shlb
lcall
hlt
lds
xor
mov
shll
sbb
loop
lock
pop
inc
shufps
lret
jmp
sub
add
add
pop
aam
xchg
pop
xor
lds
pop
or
lea
mov
mov
cs
pop
popa
adc
jns
les
sub
inc
fs
ficomps
xchg
lret
cld
xor
push
or
bound
addb
testb
addb
movnti
int
inc
add
pop
dec
dec
lods
adc
mov
sbbl
sub
adcb
add
pop
inc
cwtl
clc
ja
push
lods
and
aaa
test
loopne
push
cwtl
jmp
mov
ret
jbe
inc
shl
or
dec
adc
sub
fndisi(8087
jge
mov
rcll
popa
and
adc
outsl
xor
shlb
pop
data16
xchg
push
add
rcll
pop
lcall
mov
mov
jb
mov
add
loope
sbb
mov
jle
and
inc
test
rcrl
xor
call
jge
adc
testl
xchg
lret
cmp
cmc
pop
es
jge
add
dec
shlb
hlt
nop
jp
lea
add
add
mov
and
stos
lret
sar
aad
mov
xor
or
sar
lea
test
xchg
jns
xor
dec
es
dec
cmpsb
add
and
push
lds
aas
jb
popl
testb
xor
inc
cmp
push
mov
jmp
push
cmp
sarb
push
dec
inc
shrl
xor
leave
and
add
mov
xchg
xor
popf
dec
sbb
test
dec
fwait
rorb
fistpl
sub
loopne
sti
pop
cld
mov
jg
ret
daa
xor
or
jne
pop
cmp
mov
cmp
mov
or
mov
fwait
xor
inc
xor
and
or
jg
lea
xor
sub
testb
cmp
sub
sbb
and
adc
movswl
les
loop
pop
dec
insb
data16
or
cmp
add
loop
lock
mov
add
dec
shrd
xor
cmp
mov
enter
jl
cmpsl
mov
mov
or
cmp
inc
pushl
add
dec
jmp
adc
addr16
clc
sub
and
or
xchg
xchg
sbb
incb
push
and
push
shrb
mov
addb
xlat
adc
sbb
sbb
push
sbb
dec
and
add
sbb
js
jg
mov
in
push
sub
or
fidivrl
rorl
loopne
mov
lock
xchg
orl
jb
push
add
sub
nop
dec
mov
jbe
inc
and
or
push
jg
lods
jb
rclb
mov
dec
pop
or
mov
lcall
add
daa
rclb
mov
jae
stc
mov
cmp
sub
rol
ret
xchg
cmp
je
int
xchg
sbb
jae
les
add
loop
call
or
or
rorb
push
inc
sbbb
lea
dec
cwtl
or
rcl
sbb
sub
pop
add
shll
sbb
mov
push
mov
pop
xor
imul
into
mov
rol
adc
filds
test
mov
or
pop
je
xchg
xchg
add
push
rol
nop
dec
repz
cmp
dec
mov
lret
jbe
adc
cmp
lea
or
push
xchg
mov
stos
sub
icebp
adc
push
add
jmp
insl
cmp
mov
cld
jl
xchg
fimuls
or
add
or
mov
inc
shr
fsubs
sbb
sbb
call
jge,pt
fldt
nop
jle
gs
or
pop
data16
push
ds
out
lea
cmp
inc
popa
je
inc
je
in
in
mov
xor
inc
and
pop
cmp
mov
xchg
push
or
cmp
xor
repz
dec
dec
inc
add
adc
call
incb
fdivl
fmull
insl
push
pop
clc
fstps
or
mov
xchg
sub
fldcw
push
mov
call
dec
shrb
cmp
adc
shlb
adc
or
adc
xor
icebp
and
inc
mov
cmp
inc
and
add
xchg
cltd
sar
movsl
je
jmp
jbe
mov
cmpb
jne
jp
dec
in
mov
rcl
jae
xchg
rcrl
sub
add
hlt
sbb
xchg
cmp
das
movsl
cmp
in
rorb
mov
pop
cmp
ss
aad
cld
lahf
pop
dec
fisttpl
push
sub
and
hlt
sub
pop
popf
pusha
mov
lcall
dec
aaa
xchg
xor
shll
push
fwait
pop
movsl
sub
sub
push
cmp
imul
or
int
imul
cmp
xor
cld
jmp
mov
xorl
xor
mov
cmpl
xchg
lret
or
push
cmp
or
dec
push
mov
mov
arpl
pop
add
shrb
push
jp
pop
call
pop
rorb
mov
test
popa
movsb
ret
xor
das
jmp
aas
in
mov
je
mov
jge
mov
add
pusha
mov
sbb
pushf
xor
insb
testb
add
arpl
int
lock
shrb
out
pop
cmp
or
mov
sarb
jl
mov
xor
mov
sub
fisubs
das
loop
dec
xchg
jmp
mov
cmc
jmp
testb
and
sub
xorl
and
xor
negl
push
sbb
xchg
outsb
push
jne
test
xor
or
mov
add
or
add
rorl
fimuls
dec
cmp
ss
push
sbb
sbb
add
xor
inc
leave
icebp
inc
test
mov
cmpsl
mov
or
push
and
add
jecxz
pop
sub
jbe
fsubr
cmp
adc
pop
icebp
dec
dec
fs
add
mov
mov
add
jno
push
push
adc
mov
addr16
push
xchg
sbb
iret
mov
cwtl
push
hlt
pop
rcl
out
push
xor
mov
mov
mov
push
push
cmp
jae
dec
sbb
inc
add
movl
loopne
push
xor
xor
xlat
pop
call
cmp
scas
jge
notl
xchg
in
sbb
sbb
ss
fisttpll
ficomps
adc
adc
sub
cld
ss
push
arpl
call
daa
sbb
loope
icebp
push
inc
jmp
mov
adc
dec
sub
add
es
mov
or
std
adc
in
xor
stc
inc
inc
test
lea
sub
sub
push
push
cmp
pop
es
subb
mov
subps
adc
pop
test
cld
lcall
push
cmp
push
pop
inc
xchg
rcl
clc
mov
das
adc
cmp
fcomi
mov
inc
in
adc
iret
push
cmp
push
repnz
add
mov
push
loope
jmp
sbb
dec
push
mov
adc
and
fcoml
pop
mov
push
xchg
popa
adc
sub
and
dec
movsb
cmp
or
jbe
sub
jmp
pop
cmpsb
mov
cmp
xor
int3
ljmp
scas
mov
mov
andl
test
add
inc
lcall
nop
adc
xchg
mov
cmp
adc
xlat
pop
xchg
mov
loope
cmp
push
pop
incl
fmull
movsb
lea
pop
and
adc
mov
push
and
scas
adcl
lret
mov
and
mov
mov
jo
mov
mov
adcl
out
pop
xor
jmp
dec
push
sbbb
and
cmpsb
and
sbb
cs
sbb
adc
adc
adc
cmp
inc
or
vaddsubpd
testb
jbe
rolb
cltd
rolb
loopne
mov
mov
dec
lock
sbb
shll
repz
add
or
dec
or
push
idiv
add
shr
shr
or
mov
add
add
or
lods
add
scas
push
sti
test
or
stos
mov
cmp
sbb
mov
fildl
sub
bound
ret
push
idivl
shlb
adc
fnstcw
inc
jl
add
imulb
ds
ja
inc
dec
add
lea
mov
shr
push
mov
mov
adc
sub
cs
mov
xor
mov
sbb
cltd
repnz
dec
or
shrl
cmp
adc
ja
rorb
mov
sbb
dec
or
and
sub
test
mov
cmp
ficoms
mov
adc
iret
shl
andl
adc
dec
lret
aad
test
add
pushl
sbb
sub
or
int
loope
test
test
adc
lret
je
dec
call
sbb
rolb
sub
dec
cmpsl
cmp
xchg
cmp
fsubl
out
pop
je
shrb
in
push
cmp
sbb
push
add
and
dec
cmp
cmpsl
nop
fwait
add
push
cld
sub
jne
nop
jbe
ds
call
ss
xchg
and
and
pop
aam
or
and
add
adc
dec
fnop
adc
or
frstor
push
jle
cld
fsts
inc
push
ja
pop
mov
popf
les
or
jle
cmp
add
inc
xor
pushl
dec
cmp
lock
jl
cmpb
jl
xor
sbbl
push
add
inc
xchg
adc
scas
push
xlat
push
jo
push
mov
stos
push
cmpsl
and
dec
inc
push
push
mov
push
push
loopne
xlat
inc
and
mov
inc
adc
rol
push
and
adc
xchg
pop
or
sub
jmp
inc
adc
bound
clc
mov
call
fildll
stc
and
sub
ret
enter
out
or
test
scas
push
loopne
adc
push
fcmovu
add
or
mov
or
test
je
mov
xchg
push
scas
or
xchg
and
push
pop
pop
jl
ret
push
lock
mov
sub
push
sbb
jne
mov
and
cmp
aam
xchg
xor
subl
int3
cmpb
scas
xor
pop
mov
ret
enter
cmp
jge
inc
inc
div
fdiv
fiaddl
repz
sub
inc
sbb
or
sbb
xchg
sbb
xchg
adc
cmp
push
inc
sbb
push
push
inc
shlb
mov
rcr
xchg
fcomi
xor
dec
movsl
sbb
adc
or
inc
negb
sbb
adc
js
test
adc
dec
jne
pop
pop
pop
adc
mov
jae
or
jae
inc
pop
push
icebp
lods
rcl
ljmp
shr
push
aam
cwtl
test
stc
pop
shl
outsb
push
idiv
and
cld
je
ds
pop
push
divb
or
es
ljmp
add
push
popa
inc
arpl
hlt
push
adc
pop
pop
mov
adc
jno
inc
dec
dec
scas
in
jle
push
aaa
hlt
es
xchg
dec
loop
pop
mov
gs
int
les
negb
or
into
jbe
jns
aas
push
adc
adc
aam
aam
pop
bound
ss
daa
push
pop
in
push
ficoml
iret
das
bound
jp
pop
sbb
mov
add
setle
cmp
inc
mov
test
adc
and
les
add
jb
mov
mov
mov
cwtl
loopne
popf
cs
outsl
sbb
int3
push
cld
and
xor
dec
pushl
dec
push
ss
jg
hlt
rcrb
inc
jge
sahf
ret
cwtl
and
popf
in
leave
jne
sub
mulb
jmp
fists
rol
das
sub
leave
je
cmp
lock
mov
out
es
mov
je
pushl
push
or
cmp
jb
cmp
ja
add
xchg
test
adc
cmp
jne
es
sbb
adc
mov
test
rcrl
add
dec
add
lods
sub
or
mov
push
sbb
mov
popa
mov
add
pop
xchg
dec
aaa
pop
ficoml
mov
daa
incb
inc
neg
je
inc
lea
push
addr16
data16
rclb
xchg
add
cmpps
sbb
add
sub
nop
mov
cmp
jne
dec
test
sub
push
xor
xchg
test
sbb
dec
dec
out
pop
pop
in
jmp
mov
inc
push
push
mov
adc
add
scas
mov
sub
pop
xlat
pop
mov
cmp
sub
orl
cltd
lea
sub
inc
jp
xor
sub
xchg
push
aam
addl
adc
or
mov
test
or
cltd
push
adc
shll
cmp
inc
sbb
add
dec
inc
inc
or
jle
mov
add
dec
mov
out
sahf
cmpsl
push
rcl
rcl
aad
out
sahf
xlat
fcomp
fildl
mov
lock
data16
movb
jmp
or
dec
rcrl
dec
in
shlb
cmp
test
aaa
add
orb
mulb
adc
push
inc
push
sbb
pop
cmc
aas
test
sahf
rorb
test
call
divb
jnp
sub
in
pusha
call
jle
mov
or
push
sbb
sahf
fbstp
sbb
push
push
push
add
add
clc
and
add
xor
sbb
lcall
mov
imul
or
fbstp
call
rorb
or
adc
js
pusha
inc
js
mov
push
test
or
fisttpl
mov
loop
out
shll
test
mov
pushf
cmp
add
adc
sub
test
adc
mov
loope
roll
sti
add
es
call
jl
pop
les
inc
add
decl
adc
insl
imul
add
hlt
fucomp
loopne
sub
in
out
mov
mov
and
lea
pop
sbb
subl
pop
lcall
ja
gs
xor
add
add
mov
inc
lods
mov
inc
mull
in
je
in
ljmp
sub
sub
jmp
and
inc
jnp
sub
test
shl
ret
js
mov
push
lea
adc
in
mov
dec
xchg
mov
sub
or
andb
add
ret
movsb
sub
faddp
mov
push
addl
mov
cwtl
push
jl
ret
ffreep
dec
shll
rol
add
loopne
jle
jle
jne
adc
adc
enter
jecxz
inc
rolb
sar
loopne
movsl
fbstp
ret
add
push
push
lret
adc
jo
inc
xchg
dec
test
push
or
shlb
insl
clc
in
out
mov
xchg
mov
or
dec
inc
push
pop
inc
sub
add
lock
repnz
lock
or
imul
inc
xchg
out
cli
div
adc
or
push
sbb
pop
adc
mov
xchg
ret
mov
notb
mov
adc
mov
test
ret
push
repnz
mov
or
leave
inc
js
js
fnstenv
xchg
mov
push
dec
xor
inc
mov
nop
ret
sbb
pop
jnp
add
pop
sub
repnz
mov
sub
loop
out
int3
shll
mov
jb
inc
cmp
adc
pop
mov
repnz
mov
push
into
or
pop
sub
fdivrs
aam
mov
jo
inc
inc
test
dec
ss
ret
push
sub
addb
mov
xor
pop
mov
mov
xchg
cmpsl
call
fcmovu
mov
xor
pop
insl
aaa
dec
push
xchg
mov
lods
lods
rolb
inc
jl
and
xchg
push
inc
out
sbb
call
notb
negb
test
dec
gs
lock
out
or
add
enter
adc
or
lock
push
adc
add
inc
pushf
xchg
movsb
jne
sbb
das
inc
pop
push
in
inc
outsl
add
mov
adc
push
stos
aaa
add
sub
insb
sbb
movb
or
inc
inc
mov
push
add
push
nop
or
adc
adc
adc
mov
add
push
js
push
pop
shr
daa
and
pop
add
or
inc
test
mov
icebp
adc
fcomps
xor
fiadds
mov
imul
jmp
loopne
icebp
sub
xchg
fsub
leave
test
lea
push
and
js
mov
xor
jecxz
adc
sbb
rcr
sub
out
cltd
loop
xor
and
xchg
inc
aad
stos
mov
repnz
mov
add
sub
push
xchg
mov
into
out
enter
in
xor
sbb
or
stos
jbe
pop
sub
xabort
mov
adc
enter
cmp
push
sbb
push
shlb
add
notl
sahf
jne
cmp
sbb
testb
lock
inc
test
sbb
inc
in
jg
lret
dec
nop
dec
mov
dec
cmp
jge
pop
lock
incb
bound
movb
dec
cmp
popf
xchg
mov
add
add
fadds
dec
jb
pop
add
and
mov
cmp
add
or
pop
imul
inc
ret
and
mov
mov
sub
rcll
inc
or
sti
mov
add
add
add
ja
mov
ret
lcall
sarb
push
mov
andb
je
xchg
adc
or
adc
fisttps
jmp
jns
inc
out
xchg
push
or
add
or
pop
pop
test
add
adc
push
add
or
mov
add
xchg
adc
ret
rclb
or
jae
js
fdivrs
test
lret
push
jns
and
cmp
xor
into
pusha
mov
mov
and
in
inc
jecxz
pop
pop
dec
mov
nop
ret
or
pop
shll
or
das
mov
adc
addl
inc
push
pop
jae
or
or
adc
and
test
push
ja
push
or
or
or
mov
pop
pop
dec
dec
pop
or
adc
xlat
dec
pop
lahf
push
outsb
dec
pusha
test
ret
loope
mov
and
mov
inc
jge
cmp
mov
or
sub
popa
pop
addl
insl
cld
mov
movsb
dec
lcall
sahf
xchg
or
or
inc
sarl
sub
into
xchg
adc
dec
aam
add
mov
add
bound
imul
ss
or
add
cltd
xchg
data16
or
adc
push
add
into
jle
loopne
out
pusha
mov
xor
inc
lret
repz
into
into
into
lods
push
push
mov
pop
sub
sarb
push
pop
nop
pop
mov
push
out
cwtl
pop
mov
xchg
mov
or
pop
mov
pop
fs
ret
xor
dec
lods
pop
lcall
add
leave
lahf
pop
test
pop
or
add
push
add
add
add
imul
and
scas
push
imul
sub
dec
inc
sub
jmp
dec
in
jmp
ret
lods
xchg
lret
xor
sbb
cmp
scas
flds
adc
add
push
cltd
aad
dec
xchg
adc
push
sbb
nop
loope
decb
pop
fmul
cmp
das
xchg
push
mov
and
push
dec
and
cmp
test
addb
fidivs
jle
push
sbb
xor
jmp
push
and
daa
or
and
mov
jge
xor
popa
cli
mov
ljmp
xor
sarb
xor
clc
push
dec
push
mov
inc
push
inc
adc
cwtl
dec
sbb
xor
mov
out
push
adc
xchg
cmp
add
inc
shrl
iret
jmp
test
dec
sub
inc
aas
jo
loopne
ds
je
inc
push
aam
cmp
rorb
or
push
cmp
jbe
inc
inc
or
mov
int3
call
jle
adc
testb
fdivrs
jo
jbe
push
jns
jmp
lods
pusha
loop
or
push
push
inc
orl
lock
filds
mov
leave
rolb
repz
sbb
add
sub
mov
lods
test
pop
cvtps2pd
mov
jnp
push
pusha
test
xchg
mov
pop
in
push
pusha
add
cmpb
fbld
push
pushl
cmp
pop
test
push
xor
sbb
out
je
and
pop
addr16
popf
push
je
lret
push
loopne
pop
xchg
fs
push
out
mov
sbb
push
mov
es
adc
sbb
dec
xchg
shll
fcoml
mov
int3
out
dec
pop
mov
sbb
stos
dec
repnz
call
in
hlt
je
add
xor
jge
lea
xor
mov
push
imul
push
pop
push
imul
xchg
cmp
popa
add
and
or
lods
adcb
push
or
in
push
shll
sub
xchg
inc
arpl
push
mov
adc
adc
bound
notrack
cltd
js
in
sub
push
mov
lcall
mov
push
xlat
adc
mov
mov
pop
mov
sbb
mov
add
test
sbb
cmp
inc
dec
adc
iret
dec
inc
hlt
or
inc
push
jne
loopne
or
push
inc
das
lods
push
imul
movsb
nop
insb
insl
jo
dec
jmp
xchg
fnstcw
cmp
lock
fiaddl
and
inc
push
pop
add
mov
and
and
push
and
sbb
or
sub
inc
jle
ss
mov
pop
add
and
test
or
testl
enter
cmp
dec
sbb
dec
shrl
push
clc
add
push
sub
mov
mov
jg
enter
xor
add
sub
mov
jl
lea
and
pop
jl
or
cmp
lea
or
push
fmul
int3
orl
insl
cltd
mov
repnz
pop
nop
and
push
and
push
cld
dec
subl
dec
loop
inc
xchg
adc
jo
and
outsl
inc
mov
jmp
sub
js
jle
shll
and
mov
and
add
ret
inc
js
scas
mov
inc
sar
rorb
pusha
fcompl
xor
lea
rorb
add
mov
mov
mov
jb
loope
roll
lcall
subb
in
ret
xchg
xor
push
add
andb
add
xchg
incb
jbe
pop
testb
adc
inc
ds
push
mov
mov
pusha
mov
or
pop
dec
cmp
icebp
dec
and
inc
pusha
xor
nop
rorl
pop
shlb
inc
xlat
pop
jns
mov
int3
push
push
and
push
daa
add
or
data16
test
pop
and
add
sbb
cltd
sarb
or
cmpsl
add
or
pop
ret
mov
inc
cmp
test
mov
frstor
fnclex
das
loopne
and
loop
loopne
sub
loope
and
jne
mov
mov
clc
out
cvttps2pi
mov
aaa
xchg
aaa
push
push
pop
fbstp
scas
mov
pop
cs
fld
push
subl
insb
push
lahf
and
adc
jmp
test
jns
fstps
icebp
lahf
mov
add
jmp
cmp
fcomp
in
fidivl
adc
inc
and
ja
xchg
mov
push
jge
je
mov
lcall
stos
or
cltd
js
lea
mov
lock
pusha
jo
fs
int3
xor
or
mov
add
fsubl
sub
lock
in
leave
test
gs
loopne
mov
adc
cld
in
pushf
fsubrs
aad
xor
jbe
cwtl
jecxz
jbe
xor
xor
leave
fmuls
xchg
das
in
iret
mov
bound
in
test
or
jb
leave
sub
lock
roll
sub
mov
sbb
sbb
jp
jnp
inc
nop
test
sti
shll
ret
mov
and
and
mov
xchg
dec
mov
xor
or
sub
test
xchg
jl
adc
es
add
repnz
sub
xor
inc
jne
dec
and
mov
out
loopne
bound
clc
insl
or
dec
push
jle
dec
sbb
add
test
dec
mov
dec
push
insb
mov
cmpsb
out
and
sub
jle
xchg
push
mov
or
enter
sub
test
adcl
push
pop
adc
fwait
aam
pushf
addr16
test
pop
dec
in
xchg
in
pop
mov
push
jge
jg
pop
pop
dec
outsb
push
in
movups
pop
cmp
cmovl
cmpsb
in
imul
sbb
nop
cld
js
fcompl
pushf
pop
in
lock
adcb
stos
push
push
pop
hlt
add
in
shl
cmpb
andl
cmpl
xor
leave
sub
xorb
inc
sub
fstps
cmp
cmp
xchg
and
mov
pusha
jmp
dec
or
xor
in
call
testl
xor
mov
loopne
xchg
fmull
inc
pop
int3
or
cmpsb
cltd
aam
mov
ret
sub
cmpl
xchg
adc
out
inc
shrb
shrb
mov
pusha
test
adc
fs
adc
sub
and
int3
adc
xchg
dec
xor
cmp
xchg
dec
xor
inc
dec
fs
jge
insb
jecxz
add
sbb
adc
pusha
std
mov
push
in
mov
test
add
pop
test
xchg
test
adcb
xchg
push
inc
in
jmp
and
scas
adc
je
cltd
dec
mov
scas
rolb
sbb
lock
lock
sbb
in
icebp
push
xchg
push
in
lods
xor
mov
cmp
aaa
or
in
push
call
sub
xor
push
jo
add
sldt
push
lcall
mov
arpl
cmp
mov
aam
add
and
sbb
clc
jo
and
mov
pop
dec
and
or
mov
enter
aam
mov
cmpsb
sbb
test
call
or
in
adc
mov
mov
aam
loop
or
add
xor
insl
adc
dec
pop
adc
mov
shl
mov
dec
insb
adc
movq
hlt
loopne
in
ljmp
in
sbb
xchg
inc
add
iret
popa
dec
adc
jnp
ljmp
mov
call
adc
fnstcw
out
lahf
cmp
out
xor
xchg
ss
sbb
idivl
imul
dec
rclb
dec
stos
test
clc
out
mov
sbb
pop
and
repz
jb
daa
lods
mov
fcomp
dec
push
popa
repnz
fmuls
dec
inc
lea
add
add
out
daa
daa
mov
shrd
daa
mov
daa
daa
daa
int3
rcl
adc
xor
push
mov
adc
mov
adc
jmp
sbb
cwtl
push
cwtl
sub
dec
shl
pop
dec
sbb
mov
test
orl
fadds
lock
add
pusha
push
mov
lds
andps
das
mov
sub
dec
adc
leave
out
cwtl
sub
dec
push
lea
mov
aaa
int3
das
unpcklps
inc
adc
jbe
sbb
adc
push
mov
dec
and
sub
sbb
mov
ret
and
xchg
call
pop
loopne
aas
in
mov
insl
mov
or
fldl
pop
mov
mov
movsb
jmp
decl
xor
insl
sub
mov
push
loopne
daa
movsb
xor
fnstsw
push
inc
add
sbb
cmp
pop
xor
adc
dec
cs
cltd
fs
add
mov
adc
push
pop
sbb
cwtl
lock
xchg
xchg
les
sub
mov
sbb
ss
dec
in
adcl
lods
stos
pop
cmp
jnp
pop
xor
std
add
xchg
mov
call
pusha
leave
xchg
push
jo
mov
xchg
xchg
lcall
mov
cmc
in
ret
loopne
jb
dec
movsb
add
xchg
dec
adc
adc
inc
xchg
divl
inc
stos
mov
lods
daa
les
in
mov
cmpl
sub
in
cmp
xor
jmp
imul
mov
nop
loopne
addr16
and
inc
popa
jno
push
cmp
or
or
cmp
nop
or
or
xor
inc
or
or
daa
rcll
test
stos
or
rcrb
or
lcall
xor
test
or
ret
inc
xlat
imul
shll
adc
sub
sub
sbb
inc
add
fs
cmpsb
push
ljmp
scas
inc
jbe
adc
adc
cmp
and
repnz
aam
add
clc
add
and
sbb
adc
in
xchg
nop
decb
xchg
test
and
das
add
pop
jnp
and
pop
aam
shlb
sarl
lret
sbb
daa
mov
and
mov
enter
or
bound
sbbb
jbe
push
fcoml
daa
jo
push
jl
scas
test
adcb
xor
aad
mov
sbb
cld
popf
pop
jecxz
and
rcrl
pop
dec
inc
push
andl
xor
and
xlat
enter
jb
mov
mov
int3
enter
jb
sarb
mov
cwtl
dec
lds
mov
xchg
popa
mov
movsb
pop
rclb
sub
daa
pop
imul
or
mov
push
vpandn
fstl
das
xchg
adc
test
sahf
testb
jne
push
mov
jae
in
sbb
xor
nop
cld
mov
jbe
mov
mov
mov
aaa
push
mov
loopne
jnp
roll
xor
xor
sub
or
add
aam
dec
cmp
sti
adc
mov
xor
push
ret
xchg
test
sbb
lods
cmp
sbb
mov
lahf
adc
fldenv
sub
stos
fdivl
es
xchg
adc
fstpl
dec
mov
nop
pop
sbb
je
mov
sbb
and
mov
mov
and
and
push
shll
sub
rorb
aas
pop
add
emms
push
rclb
adc
dec
int3
pop
test
mov
sbb
mov
cmp
fsubrl
push
xchg
mov
mov
rcl
mov
or
pop
test
mov
cmpsb
fwait
mov
movsb
inc
dec
sbb
and
mov
pop
push
or
mov
in
push
pop
push
rclb
test
push
mov
aam
fsubrl
stos
dec
push
push
dec
mov
pop
xor
cmpsl
and
test
and
xchg
shrd
mov
fsubl
mov
not
mov
mov
fists
popf
aas
push
xor
add
test
fldt
mov
xchg
lock
pop
out
test
add
push
fiaddl
fwait
nop
ss
fcoml
adc
inc
inc
arpl
stos
mov
andl
inc
pop
mov
pop
insl
enter
aam
subb
sub
das
les
shl
stos
out
setns
fildl
lods
leave
mov
or
dec
pop
inc
popf
test
mov
shll
loope
lds
movsb
shrl
cmpb
shll
fstps
movsb
int
aaa
mov
mov
in
dec
mov
pop
push
sub
lods
sbb
add
fsubl
test
inc
clc
or
fcom
mov
rolb
ss
dec
dec
push
test
push
push
fdivs
test
sbb
or
mov
movsl
adc
or
mov
or
add
fcmovne
scas
test
adc
push
inc
mov
repnz
cmp
or
stos
cwtl
lods
mov
cmpsb
jl
or
dec
or
mov
sub
xchg
test
xchg
dec
xor
cwtl
mov
test
daa
and
loopne
and
sbb
in
enter
xor
faddl
fsubrs
je
sbb
iret
mov
lods
push
inc
addb
mov
or
cmp
popa
push
stos
lea
push
sub
nop
mov
lock
sub
xchg
inc
pop
scas
pop
pusha
mov
and
stc
sub
jecxz
test
and
icebp
lock
mov
pop
add
loopne
xchg
aaa
call
mov
xor
adc
shrb
fcoms
mov
xor
mov
sub
mov
xchg
stc
jo
sbb
push
scas
mov
loope
mov
andl
cmpsb
loopne
sub
inc
popa
xchg
pushf
sbb
sub
or
push
jb
test
jecxz
pop
imul
inc
sbb
insb
adc
inc
xchg
pusha
out
adc
stc
pop
loopne
int3
cs
mov
aas
aam
int
push
sbb
dec
outsl
mov
mov
pandn
test
cmp
mov
xchg
adc
sbb
jo
dec
mov
push
xchg
and
jne
or
in
loopne
inc
pop
dec
pop
xchg
cwtl
mov
in
les
or
inc
jb
lds
push
or
paddusw
and
insb
lock
js
sbb
scas
das
sbb
inc
rol
lahf
lahf
add
les
mov
pop
jne
lds
xchg
lret
and
mov
push
mov
test
and
lahf
add
xchg
les
mov
fwait
and
push
pop
in
call
dec
in
cmp
or
fadds
invd
jecxz
test
pop
or
mov
mov
adc
pop
rcr
cwtl
cmp
pushf
mov
loop
in
enter
roll
and
jge
pop
sbb
movsb
and
inc
sub
push
push
mov
std
xor
add
dec
lcall
xchg
out
sub
out
sbb
and
dec
or
inc
sub
test
cmpb
add
xor
leave
dec
pop
stc
cmp
add
sbbb
adc
push
in
lret
add
sbb
repz
nop
outsl
adc
sbbl
xor
sbb
sub
sbb
sbb
and
sub
jno
mov
inc
sti
inc
les
fdivrs
sub
sbb
out
mov
sbb
mov
cmpb
fcom
cltd
push
and
sbb
adc
sbb
mov
stos
ljmp
jo
shr
adc
in
pop
adcl
sbb
pop
lea
sub
pop
je
xchg
xor
jl
call
pushf
lods
adc
aad
stos
jo
fidivl
xlat
push
xorb
in
mov
nop
and
dec
cwtl
pusha
mov
inc
test
lods
and
fs
ja
pop
enter
enter
pcmpgtb
fdivr
xor
mov
sub
aas
lret
cwtl
lea
popa
movsl
mov
int
xor
jmp
adc
lds
les
ret
fadds
inc
gs
repnz
push
mov
adc
nop
push
jo
adc
lock
dec
mov
and
inc
and
lds
imul
adc
inc
push
sbb
dec
sbb
pushf
in
incb
mov
roll
dec
sbb
adc
les
or
cmp
pop
nop
popa
xor
pusha
shll
inc
loopne
imul
enter
xor
std
dec
enter
sti
or
and
jb
test
fists
add
in
jae
mov
or
jge
dec
inc
push
mov
cmpb
pop
aam
add
dec
push
fs
add
push
dec
push
fs
outsb
inc
movsb
mov
pop
push
sbb
push
fcoms
inc
mov
sbb
pop
mov
pop
xor
add
fisubl
das
jo
lds
std
xchg
invd
xlat
push
lea
mov
leave
xor
fcom
adc
in
insl
push
dec
xchg
inc
popf
inc
stc
mov
dec
das
or
insb
add
insl
int3
mov
inc
out
in
or
scas
add
cmp
pop
leave
insl
mov
les
mov
call
and
mov
inc
test
xor
pop
unpcklps
filds
orb
call
cmp
lret
xchg
or
insb
gs
mov
lret
cmc
add
shll
test
pop
nop
cmp
sub
lods
lock
dec
sub
nop
inc
mov
or
lods
adc
lds
push
call
leave
adc
into
stos
xor
shrl
pop
push
xor
loopne
iret
dec
and
call
add
xor
inc
sbb
rclb
call
sarb
or
sub
lea
in
or
in
fs
inc
dec
adc
or
mov
es
or
enter
xor
sbb
cld
cmpsb
jbe
aad
inc
sub
inc
sub
mov
rcrb
clc
scas
add
es
ss
fsub
adc
add
fs
dec
cmpsb
xor
insb
lods
jbe
nop
sbb
insl
mov
xor
cltd
orb
les
cmp
mov
jl
mov
adc
in
pusha
xchg
fistl
mov
adc
or
push
adc
push
sbb
in
dec
es
ss
adc
fs
js
fs
fs
dec
mov
dec
nop
push
je
mov
mov
lods
shlb
push
je
mov
dec
clc
adc
sbb
xor
xor
and
and
cld
stc
aad
popl
xchg
pop
jo
mov
cmp
push
xchg
add
pop
enter
adc
inc
add
adc
subb
push
inc
dec
pop
push
and
nop
pop
lock
lcall
jne
sub
mov
aam
cmp
dec
pop
movsb
fcmovne
sbb
mov
mov
add
fldt
cltd
dec
sbb
jno
test
xlat
mov
adc
mov
or
sbb
shrb
and
xchg
push
pop
lea
sbb
adc
rorb
les
ljmp
rolb
enter
add
fcomps
test
enter
jb
aam
nop
lods
rcr
lods
push
push
fcomps
push
test
add
lea
sub
stos
pushf
stos
inc
sbb
adc
dec
cwtl
stos
mov
loop
rcrl
repnz
cltd
mov
mov
and
and
cmpsl
and
sbb
inc
add
sbb
and
les
pushf
fisubrs
inc
mov
fcom
cmp
lock
xchg
cmp
arpl
cmp
fdivl
inc
shll
cld
pop
inc
push
dec
mov
inc
adc
xchg
pop
mov
cmp
nop
sub
roll
pusha
in
add
ja
scas
mov
jno
adc
test
pop
mov
lock
xchg
and
enter
ss
movsl
jne
xor
test
outsb
mov
stc
int3
sar
sub
lds
shll
cwtl
jmp
imul
enter
sti
test
ficomps
and
rorb
dec
adc
mov
lcall
orb
jo
mov
push
sbb
pop
pop
adc
mov
sbb
pop
pusha
dec
pusha
xlat
cltd
subb
sbbb
fs
imul
nop
imul
or
movsl
inc
jb
inc
inc
pop
and
push
and
cmpb
fists
fidivl
push
sbb
xor
sbbl
outsb
lret
dec
sarb
push
lock
jle
push
add
push
cmp
icebp
cmpsb
add
inc
sbb
call
loope
xor
aam
xchg
divb
mov
mov
je
jl
loopne
lahf
call
add
jle
cmp
pusha
or
mov
lahf
push
test
mov
mov
pop
mov
mov
mov
add
jge
sahf
and
into
mov
sbb
hlt
jmp
sbb
mov
sbb
sbb
and
ja
int
sarb
and
ret
xchg
out
fs
add
cmp
in
dec
mov
fs
push
insb
loopne
cmp
loop
andl
adc
jb
repz
mov
loope
pusha
out
lcall
negl
pop
cld
or
fwait
in
dec
sti
push
fnstcw
mov
push
push
les
sbb
ds
and
mov
cs
mov
mov
ljmp
add
pop
enter
pop
orb
jnp
mov
add
and
outsl
lahf
pop
shlb
leave
or
adc
les
leave
ljmp
cmpb
mov
cmp
sub
push
inc
cmp
sub
cmpl
bound
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
jg
mov
pop
popa
bound
gs
imul
ljmp
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
daa
jg
mov
sub
adc
or
outsl
cmp
adc
jbe
mov
push
push
daa
push
inc
jle
sahf
out
xchg
dec
pop
or
out
sub
je
jb
outsl
arpl
fs
out
sti
pusha
fistps
jb
push
dec
imul
push
push
es
gs
xor
cs
adc
sub
stc
popa
and
popa
je
outsl
outsb
push
test
xchg
sub
cmp
push
pop
lock
rdpmc
add
pandn
imulb
incl
sub
aaa
in
neg
ss
push
inc
outsl
jb
js
je
jb
gs
cmp
stc
divl
outsl
add
add
add
add
loopne
cs
je
push
je
mov
popa
jb
jbe
in
fisubl
outsb
dec
xor
xor
mov
insl
insl
cmp
lahf
fs
dec
and
jns
add
das
loopne
mov
push
dec
push
inc
inc
gs
into
mov
insl
bound
daa
dec
outsl
jbe
dec
arpl
pop
mul
adc
jo
sub
addr16
ffreep
pusha
out
dec
jne
xchg
mov
inc
jo
imul
jb
push
inc
pushf
jae
add
adc
jae
cmp
xchg
popl
ja
mov
push
jne
xor
mov
daa
push
scas
dec
xor
clc
sbb
dec
js
into
cmp
push
jne
xchg
pop
dec
mov
ds
popa
das
jo
or
inc
adc
mov
jb
inc
ud0
dec
push
pop
add
and
sbb
ds
mov
adc
inc
mov
aas
dec
decl
es
sub
sub
sub
cs
movsl
cmp
cmp
ds
loope
aad
inc
das
pop
pop
cmpsb
aas
inc
push
je
cmp
jge
jg
cmp
outsl
inc
test
cs
ficomps
push
pop
or
adc
in
jecxz
pop
push
inc
insb
jae
pop
rcl
lea
push
fs
mov
inc
or
out
dec
mul
xor
insl
and
jb
jbe
outsb
je
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
jg
push
insl
sbb
push
jo
imul
insl
inc
mov
popa
je,pn
jo
insb
jnp
inc
xchg
idivb
and
or
ds
cltd
jge
subl
xorb
imul
and
and
daa
mov
jne
shr
sbb
xor
and
insl
push
xor
jl
xchg
sub
jo
and
jne
dec
mov
addb
imul
dec
mov
addr16
push
frstor
outsb
xchg
or
imul
push
add
or
fs
hlt
jb
bound
test
in
adcl
ds
sbb
popf
jb
pusha
fwait
leave
push
mov
ret
fcoms
sub
push
addb
das
arpl
cmp
fwait
orb
arpl
mov
mov
fiadds
inc
xchg
lret
sub
out
xor
int3
or
push
loope
prefetch
test
andl
cmp
push
ffreep
shrb
push
loopne
and
xor
shll
hlt
and
or
pop
dec
add
add
xor
fdivs
outsl
outsl
ss
adc
fs
jo
cli
jbe
add
inc
or
sahf
inc
xchg
push
mov
in
pop
push
gs
sarl
mov
jle
outsl
push
or
mov
imul
push
cmp
sbb
bound
cmp
adc
jno
insl
in
ljmp
imul
scas
loopne
imul
inc
sbb
inc
jno
rolb
push
leave
nop
enter
inc
insl
imul
int3
fnstsw
adc
repnz
add
add
mov
push
and
pop
sub
cmp
addr16
push
cmp
push
jae
xor
fdivl
addb
pusha
jo
sub
add
adc
data16
lret
inc
sub
pop
dec
jmp
pop
sti
pop
cmp
push
and
cmp
pop
mov
fstpl
pop
inc
inc
and
mov
cmp
jg
lcall
iret
sub
add
fimull
sub
rol
das
lret
jmp
fisttps
push
icebp
pusha
inc
mov
clc
ret
movsl
add
addl
jae
push
loop
or
outsb
imul
into
in
test
add
add
xor
repnz
js
jae
aaa
mov
pop
dec
pop
add
add
clc
cmp
sub
push
imul
add
add
mov
sti
out
add
push
add
add
add
mov
cmp
pop
or
aaa
ds
push
pop
hlt
and
out
imul
pusha
push
js
or
sub
jg
cmp
add
sbb
addb
mov
push
xchg
test
add
outsl
mov
pop
daa
push
cmpb
into
in
fsts
and
sub
jb
int3
push
imul
jo
inc
add
daa
xlat
push
stos
int3
js
fbld
push
pop
dec
rorb
sbb
add
lea
xchg
dec
cmp
mov
inc
mov
cmp
shl
pop
push
or
xor
xchg
push
inc
ds
pop
pop
dec
cmp
test
and
loope
adc
cmp
loope
adc
data16
adc
adcb
repnz
sub
pop
rcrb
xlat
rorl
and
sub
and
adc
xchg
sbb
adc
add
insb
add
addb
jb
shlb
add
movsl
or
fs
adc
add
add
fildl
ja
in
je
or
add
mov
pop
sub
push
test
out
jg
push
addl
mov
decl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
ljmp
mov
mov
mov
mov
mov
ret
enter
dec
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
hlt
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
rorb
adc
lea
xchg
rol
bound
test
sbb
push
das
cwtl
mov
pop
outsl
ja
inc
xor
push
jae
jb
bound
dec
stos
mov
cmp
popa
mov
lret
fisubrs
repnz
lea
dec
mov
outsl
js
push
push
inc
push
mov
inc
dec
dec
and
insb
gs
cmp
mov
dec
mov
daa
add
lahf
gs
test
imul
aam
mov
mov
imul
and
jb
jns
daa
pop
lds
inc
enter
jns
mov
sbb
shlb
test
arpl
stos
jne
xchg
cmp
or
outsb
pushw
mov
arpl
xor
pusha
inc
jbe
push
test
fs
adc
fisubl
lea
popl
cld
pop
lcall
and
push
and
pop
es
dec
or
inc
sub
lock
popa
jnp
inc
xchg
fisubrl
cmp
cmp
loopne
pusha
insb
call
negl
mov
outsb
gs
add
scas
mov
xchg
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
mov
sbb
cmp
fildll
push
ret
adc
imul
call
adc
jae
xor
xor
jg
popa
jl
insl
or
fadd
jns
pusha
push
or
push
lea
test
mov
mov
daa
xchg
mov
in
mov
daa
popw
pop
cmp
negl
add
ds
sub
jnp
inc
jl
push
jle
sub
cmpsl
in
sub
addr16
sub
pop
push
xchg
inc
jmp
and
cmp
out
push
pop
pop
sbb
sbb
push
jb
imul
push
lret
loope
xchg
push
lods
sbb
cltd
adc
es
and
inc
jo
sub
call
sub
cld
iret
repz
push
hlt
push
call
mov
repz
movsb
cwtl
dec
add
jnp
cmpsl
xor
cwtl
nop
ss
repz
push
test
iret
repz
jo
pusha
adc
mov
pop
cmp
lcallw
xor
push
adc
in
das
push
out
iret
jnp
push
dec
dec
push
inc
inc
sahf
data16
int3
inc
les
xor
cmp
jnp
out
sub
mov
sbb
add
jmp
jns
xlat
mov
push
in
shrb
dec
sub
or
out
sahf
ja
test
pusha
inc
int
jns
xor
sub
hlt
std
in
cmp
repz
shlb
repz
sbb
cld
aam
ret
jns
out
pusha
xor
cmpsl
jno
push
stos
pop
aam
lcallw
shlb
jns
push
xor
sarl
loope
insb
movsb
cwtl
cmpsl
pop
push
negb
bound
fs
sbb
jns
jno
je
or
jg
mov
pcmpgtw
xor
adc
sarb
insb
cmp
inc
inc
dec
jae
pop
xchg
or
insb
inc
mov
lcall
push
sbb
dec
inc
dec
xor
stc
sti
sbb
dec
dec
dec
push
push
loop
and
inc
dec
add
dec
dec
inc
add
pushl
inc
push
das
adc
sub
adc
push
outsb
fdivr
incl
popa
into
mov
mov
adc
mov
sarb
popa
pop
push
pop
lcall
or
cli
jb
xchg
jge
arpl
cmp
adc
pop
dec
scas
jp
adc
fisubrs
pop
repnz
and
cmp
dec
imul
jg
lret
add
inc
mov
mov
sub
fwait
out
paddsb
ss
sbb
pop
jns
ds
xor
incb
pushl
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
call
sar
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
clc
push
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
stc
aas
sub
mov
pop
leave
loop
mov
xchg
dec
clc
mov
mov
lods
push
push
xor
inc
incb
mov
pop
and
es
sub
fnstcw
sbb
sbb
add
std
les
adc
or
outsb
jbe
subb
aam
and
jo
add
shrb
inc
sbb
push
adc
cmpsb
imul
outsb
sbb
push
dec
push
ja
jns
sub
mov
cs
push
or
sbb
xor
aas
loope
xor
dec
inc
pop
sbb
push
sbb
mov
mov
std
cmp
pop
and
sbb
or
push
pop
or
sub
sbb
insl
xlat
mov
xor
jb,pt
scas
add
ss
mov
or
xchg
add
sbb
sbb
das
pop
pop
mov
mov
dec
jl
push
adc
sub
push
add
mov
std
mov
sbb
add
es
lods
sub
jge,pt
mov
out
sbb
pop
push
dec
lock
push
dec
sbb
sub
or
pop
pop
add
sbb
sbb
inc
sub
inc
pop
pop
dec
pop
mov
pop
push
dec
inc
inc
cs
mov
add
pop
sub
sub
cs
dec
pop
dec
push
jge
inc
or
add
dec
inc
divb
or
or
fadds
add
mov
sub
sbb
fisttpl
sub
pop
and
dec
push
out
negb
mov
sbb
add
sbb
add
sbb
xor
sbb
xor
add
fisubrl
sub
xor
cmp
push
pop
dec
and
int3
ds
popa
pop
je
outsl
sbb
mov
pushf
sbb
dec
push
dec
and
push
xor
test
push
ss
aad
imul
ja
inc
xchg
mov
jb
push
fistps
es
pop
push
gs
out
mov
and
push
dec
cmp
push
or
pop
testb
fbstp
dec
sub
jbe
push
sub
negb
jg
pop
je
ja
dec
pop
xor
push
sub
and
movsl
sub
jnp
inc
pop
adc
clc
call
dec
nop
dec
cwtl
in
push
cmp
imul
lcall
push
jg
sub
lea
out
jns
xchg
push
lahf
daa
mov
out
int3
shl
jg
push
fcomps
cli
or
loop
andl
push
cmp
inc
imull
hlt
or
adc
cwtl
dec
mov
or
dec
jp
xor
cmp
outsl
insl
mov
je
fcompl
push
pushf
inc
fmuls
jmp
popa
ret
push
mov
es
bound
xor
sub
push
or
sarl
fimull
ds
movaps
out
ja
sahf
mov
out
cmp
aas
push
push
int
cmp
fisubs
test
repz
les
sub
lods
push
adc
pushf
fwait
push
pop
sub
xor
sbb
pop
push
pusha
add
mov
scas
cs
clc
fisubs
push
cmp
sbb
inc
or
push
popa
adc
js
inc
jbe
std
dec
shl
mov
pop
add
ds
inc
pop
and
nop
push
or
jmp
dec
negb
sti
fisttpll
or
ds
push
add
or
or
or
push
jmp
aad
packsswb
movsb
in
add
fistpl
or
xor
push
insb
push
xor
pop
mov
sbb
cmp
fildll
rcrl
sub
adc
inc
invd
or
add
xor
dec
or
jbe
mov
iret
faddp
cmp
dec
cmp
push
dec
inc
push
out
xor
leave
ja
ret
test
jecxz
mov
xor
xor
sub
sub
pop
or
inc
jecxz
push
ss
sub
mull
hlt
xchg
push
outsb
scas
inc
dec
pop
push
add
adc
xor
inc
jae
daa
sub
mov
sahf
push
pop
inc
adc
nop
fldcw
or
pusha
sub
pop
test
and
out
adc
mov
das
push
cmp
je
jbe,pn
daa
es
push
sub
out
pop
cld
jbe
inc
dec
pop
mov
or
cltd
jne
push
push
xchg
in
xor
sub
and
fwait
inc
xor
xlat
jle
sbb
mov
aaa
pop
lods
and
lahf
fwait
and
nop
pop
inc
pop
push
imul
data16
ret
fwait
cmp
or
mov
xchg
push
add
das
inc
or
das
mov
and
pop
shrl
pop
insl
addb
xor
out
sbb
insl
and
push
mov
es
push
icebp
sub
xor
das
outsl
jle
jb
adc
aaa
sbb
cmp
xor
mov
adc
xchg
pop
dec
sub
faddl
test
and
sbb
lods
push
and
dec
ds
xchg
xor
or
push
mov
push
sub
mov
jnp
xor
sub
pusha
loop
sub
sbb
cmp
cmp
aas
add
and
pop
inc
pop
sub
in
dec
and
xchg
fwait
sub
add
aaa
inc
push
or
clc
push
dec
push
gs
push
sahf
xor
jne
xchg
jbe
int
jp
mov
sub
xlat
mov
test
push
push
xor
ss
bound
inc
daa
dec
adc
or
mov
and
sub
push
or
add
push
add
or
loopne
add
out
push
fisttps
and
repz
in
into
dec
fldcw
ja
and
jbe
dec
push
mov
cs
pop
pop
xchg
into
aam
pop
imul
das
jg
fmuls
adcl
sub
pop
adc
xchg
inc
xor
sub
aaa
sbb
mov
pop
add
mov
dec
push
push
loopne
cmp
pop
popa
and
push
sbb
and
lock
insb
rorb
jns
sub
scas
adc
pop
adc
into
and
ja
push
sub
push
xor
xor
popa
imul
in
sbb
push
pop
outsl
jo
sub
sahf
data16
push
ja
pop
repz
adc
push
pop
iret
repz
push
inc
push
add
dec
xor
mov
out
in
lcall
jecxz
out
cmp
and
add
lods
and
jnp
xor
or
notl
je
xchg
mov
or
ret
mov
sub
sub
cmp
mov
sub
loopne
dec
push
and
icebp
scas
adc
sub
pop
sub
dec
or
push
jno
inc
jg
sub
adc
in
inc
cmp
ds
or
jnp
pop
fs
dec
adc
sub
orb
inc
scas
xchg
sub
xor
pusha
pop
jge
out
fisttpl
xor
push
add
es
pop
cmp
addb
mov
loope
or
push
add
dec
fs
add
adc
les
push
popf
add
push
clc
cs
testl
mov
sub
adc
or
push
out
mov
dec
dec
es
push
mov
sbb
xor
fwait
or
xor
sub
jecxz
jbe
inc
sbb
scas
es
fimull
add
jae
test
jo
idivl
imul
jl
and
dec
inc
pop
cld
push
push
das
xor
xor
dec
push
outsb
and
sbb
mov
fildll
inc
das
push
adc
adc
test
sub
addr16
daa
and
and
dec
sub
xor
je
in
fsubl
jae
push
add
test
shll
push
fldl2t
hlt
push
jb
add
insl
roll
into
mov
push
xchg
outsl
mov
dec
xchg
inc
and
pop
test
xor
addb
pop
pop
jp
lahf
cmp
sub
dec
sub
add
adc
pop
dec
das
call
sbb
or
test
cmp
and
cs
or
mov
xchg
aaa
mov
xchg
add
sbb
and
popw
int3
add
jle
push
push
add
sub
xor
popl
fildl
fsubrl
mov
and
xor
and
and
or
into
leave
fiaddl
and
add
xchg
mov
cwtl
cs
pusha
sbb
inc
or
push
push
test
daa
jae
mov
push
xor
sbb
xor
jmp
repnz
push
pop
sbb
ss
leave
ret
adc
mov
xor
test
pop
dec
push
cli
sbb
jbe
sbb
sub
imul
ret
es
push
das
dec
or
js
ds
or
xor
dec
adc
pop
out
mov
push
inc
daa
jge
and
pop
sbb
sbb
and
sbb
adc
add
dec
daa
int3
push
mov
or
dec
mov
or
pop
sub
push
push
ds
out
addr16
cmp
adc
pop
and
mov
fcompl
pop
xor
mov
and
mov
ds
dec
test
lods
push
mov
fbstp
jge
hlt
lret
ret
loop
or
imul
fs
in
jmp
xchg
adc
push
cmp
adc
sbb
in
push
jo
inc
pop
sti
adc
fstpt
clc
add
inc
cmp
push
sbb
add
pop
push
sub
mov
adc
push
mov
push
dec
shl
outsl
cwtl
xor
outsb
lret
xchg
mov
das
sbb
fs
dec
cmp
inc
pop
daa
pop
movsl
ficoml
mov
adc
dec
push
and
test
push
out
push
pop
add
pusha
in
mov
add
popa
xor
inc
jno
sub
mov
sub
adc
push
sub
xor
mov
mov
xor
and
add
fistpll
ret
add
sub
out
sahf
sbb
sbb
cmp
mov
pop
sub
mov
daa
mov
jns
and
fwait
dec
sub
sub
inc
push
sbb
mov
mov
mov
sub
push
jae
dec
sub
dec
and
pop
imul
pop
mov
push
lahf
push
adc
inc
sbbl
pop
dec
add
inc
xor
dec
mov
inc
lods
or
test
push
dec
std
loop
push
addb
add
inc
cmp
xor
andb
cmpsb
or
lahf
and
insb
enter
cmp
ret
dec
mov
add
or
movsl
incb
sbb
push
mov
inc
mov
lcall
pushl
pop
xor
pop
add
push
pop
ss
pop
aas
sub
dec
cmp
dec
aas
cmp
mov
push
xor
dec
dec
push
dec
dec
push
int3
sub
or
inc
push
xor
aas
push
inc
sub
inc
adc
fs
mov
loopne
adc
and
jnp
inc
aaa
sub
dec
lea
sbb
cmp
stos
adc
daa
add
ds
data16
jae
or
xor
sub
dec
jg
cmp
dec
sub
sub
jbe
test
dec
and
hlt
lods
pop
es
or
mov
sbb
sbb
xor
adc
and
push
stos
das
adc
add
add
shll
repnz
adc
loopne
addr16
mov
sbb
pop
or
add
push
lock
adc
jg,pt
or
cmp
adc
sbb
cmp
xor
dec
cltd
cmp
sub
sub
sbb
cmp
add
and
and
movsb
addr16
xchg
and
xchg
insl
push
andps
ret
or
mov
stos
push
or
orb
popf
adc
or
cs
cmpl
and
out
insl
pop
divb
adc
push
and
and
mov
pusha
ret
nop
dec
cltd
adc
rcrb
push
sub
mov
push
and
add
xlat
cmp
loope
sbb
and
sub
sbb
mov
jp
lds
sub
jnp
sub
pop
xor
das
add
stos
xchg
movsl
or
adc
insl
sbb
mov
mov
adc
mov
push
add
jae
imul
lea
jmp
and
dec
sub
scas
dec
insl
sbb
shrb
dec
mov
push
push
xor
js
int
iret
adc
inc
and
mov
mov
repz
mov
dec
dec
push
dec
sub
sub
sub
sub
test
push
pop
pop
inc
dec
lret
mov
cmp
mov
aas
cmp
sbb
jbe
sbb
sub
sub
rclb
dec
cmp
daa
out
cmpsb
adc
sbb
movsb
dec
pop
call
push
sub
jmp
pop
inc
or
add
adc
outsl
push
imul
dec
add
xor
pop
inc
mov
jp
orb
sbb
adc
inc
pop
cmp
or
adc
jge
daa
adc
sbb
push
dec
cmp
adc
add
dec
pop
sub
pop
lcall
push
flds
fdivl
push
jbe
inc
jge
sub
mov
mov
xor
mov
je
jo
insb
gs
std
stc
inc
inc
ja
fs
imul
mov
das
and
rolb
int
or
movl
mov
add
inc
and
cmpsl
std
mov
add
push
shl
pop
outsb
ds
enter
push
inc
add
dec
mov
int
pop
fstps
pop
push
push
pop
sbb
sahf
out
push
xchg
stos
ret
fsubrs
fnstenv
pop
bound
scas
lea
add
cmpsb
mov
xchg
push
mov
add
dec
int3
test
loop
dec
dec
mov
aaa
notl
pop
shlb
mov
mov
inc
sbb
pushl
ljmp
mov
ja
mov
lods
pop
dec
movsl
enter
push
push
mov
roll
ss
adc
cli
mov
sub
sub
decl
sbb
mov
sbb
mov
ds
lahf
in
pop
enter
lods
sub
and
jle
jo
pop
add
sti
fsubs
sbb
mov
cmp
dec
pop
dec
xchg
pop
shl
dec
push
adc
jg
pop
mov
xor
aaa
aaa
lods
inc
cltd
xor
and
sub
int3
pop
mov
add
insl
pop
sbb
mov
fcmovb
in
mov
subb
imul
out
and
mov
sahf
xchg
sub
in
in
pop
mov
xchg
out
xor
cmp
in
jns
or
cld
and
jae
dec
in
dec
faddl
cmp
inc
js
cmp
data16
and
add
jle
pop
aam
pop
inc
xchg
ret
pop
out
adc
push
push
dec
lds
inc
aaa
xlat
mov
sub
xor
inc
xor
sbb
sub
cld
xor
xor
inc
pop
xor
add
sub
xchg
cmp
inc
mov
outsb
add
mov
js
jbe
inc
scas
and
jmp
dec
jp
into
push
pop
mov
jo
add
neg
push
bound
je
bound
mov
pop
and
adc
adc
imul
pop
mov
inc
addr16
cmp
mov
pop
ja
pop
lods
adc
fistpl
adc
inc
das
jmp
das
cmp
adc
sbb
sbb
and
rcrb
add
dec
sbb
enter
iret
mov
lds
inc
fildll
addr16
and
sub
cmp
dec
sub
lock
sub
push
jg
andl
sub
rolb
es
push
sub
pop
add
das
dec
ds
mov
jbe
inc
push
xor
push
jns
sub
test
sub
and
xor
stos
addl
pop
mov
mov
mov
cmpsl
mov
inc
inc
dec
shr
or
das
add
xor
bnd
rcrl
jecxz
dec
fs
leave
push
xor
mov
xor
sahf
xlat
push
fadds
cltd
stos
movsb
imul
pop
xlat
pop
sbb
cwtl
xchg
sub
nop
mov
pop
mov
mov
iret
rcll
js
cmpsb
fidivrl
jns
lods
mov
outsl
idivb
jl
out
xlat
pop
ret
pop
mov
es
test
ret
push
movsb
ss
mov
dec
lret
es
inc
mov
out
rclb
pop
cs
les
jl
xor
push
inc
dec
js
orb
ss
mov
aas
sti
cs
insl
pop
lods
popa
scas
out
cwtl
es
lds
xchg
inc
pusha
dec
movb
int
cmp
push
cltd
rorb
and
enter
ret
lret
mov
jnp
jns
inc
int3
cs
js
repz
test
leave
pop
dec
sti
cmp
and
ds
jl
dec
nop
xchg
mov
mov
movsb
dec
fcoml
ds
repz
push
push
pop
mov
imull
in
xchg
outsl
pop
or
fcmovu
std
cwtl
pop
sbb
iret
sarl
cltd
push
lock
sti
out
or
testb
rcrb
cmp
mov
fwait
push
fists
jnp
out
xlat
jl
sub
mov
out
xor
jge
and
xlat
jnp
sti
sahf
enter
ret
push
sbb
es
sti
ficomps
push
push
push
cld
mov
xor
in
repz
fwait
pop
jb
setp
jnp
sub
mov
mov
sahf
out
mov
jnp
cs
push
jg
mov
daa
loope
lahf
icebp
ds
clc
pushl
idivl
lock
iret
sahf
data16
push
dec
je
lahf
out
movsb
in
nop
es
repz
insl
xchg
mov
out
xchg
inc
xchg
insb
xchg
mov
mov
sub
insb
xchg
xlat
test
aas
or
decl
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
jbe
pop
loop
test
mov
pop
enter
pop
push
mov
std
mov
loopne
mov
mov
pop
in
adc
and
pop
sbb
enter
cmp
adc
or
adc
stc
pusha
or
sbb
dec
cmp
add
add
pop
outsl
inc
add
xchg
es
stos
outsb
push
push
jae
popa
push
les
pop
aas
inc
push
ljmp
inc
sbb
or
aaa
push
pop
enter
cmp
jae
je
ja
fisubl
push
fisubrl
adc
jge
data16
dec
cmp
cmpsl
sub
je
push
ljmp
cmpsb
dec
add
sbb
xorps
push
insb
mov
stos
pop
push
dec
pop
je
jnp
jnp
aaa
push
fisttps
jp
and
mov
gs
scas
test
pop
jbe
iret
inc
lds
push
pop
retw
jmp
ret
inc
dec
or
dec
mov
filds
lods
push
push
cwtl
push
out
mov
inc
adc
add
dec
jo
adc
mov
push
ds
out
fisubrs
adc
push
es
out
jbe
loope
jo
inc
pop
insb
je
push
addr16
in
daa
popa
jo
jae
es
outsl
and
aas
fstp
data16
cmpb
sub
and
stos
jne
fisubl
or
mov
xor
aaa
cmp
cmp
movsb
stc
int
push
xor
xor
cmp
push
add
sub
push
dec
notb
push
and
cmp
sbb
xlat
or
push
push
add
cmp
out
or
stos
add
add
dec
sbb
and
inc
sub
mov
orb
shll
and
dec
and
dec
es
push
das
push
push
push
pop
scas
or
lock
mov
mov
ds
sbb
dec
pop
jmp
dec
inc
aas
and
in
and
push
js
pop
lret
imul
pop
xchg
push
incb
out
pop
sbb
pop
sub
sbb
add
push
adc
xor
ret
ss
imul
add
daa
and
fbstp
cld
and
cmp
outsl
aaa
and
fcoms
lock
xor
sub
xor
xor
nop
das
jbe
icebp
push
enter
cld
push
jo
cmp
push
cmp
fnsave
jge
mov
dec
sbb
pop
add
bound
das
inc
sbb
xchg
pop
xchg
xchg
das
sub
push
sbb
dec
push
sub
push
negl
sbb
sbb
cmp
jmp
bound
mov
nop
pop
fcoms
aaa
gs
and
mov
roll
out
add
repz
daa
inc
loope
push
mov
iret
sbb
test
insb
mov
inc
add
sbb
ljmp
daa
and
mov
rcrb
das
stos
daa
push
pop
pop
jno
inc
daa
pushf
ret
lods
daa
jge
push
les
das
das
rclb
shl
iret
mov
push
sub
pop
aas
mov
mov
gs
ret
mov
movsb
mov
sub
daa
add
lds
push
jl
sub
das
dec
lahf
rorl
fisubl
dec
xor
cmp
push
or
cmp
rorb
ja
aaa
adc
mov
or
mov
xorb
outsl
pop
cltd
daa
lahf
pop
mov
adc
pop
pop
int
stos
adc
sbbb
pop
jg
test
jno
or
or
popf
fwait
fisttpl
pop
adc
mov
shll
aaa
or
xchg
lret
jl
data16
insb
xor
aaa
add
dec
das
xor
pusha
inc
inc
and
je
inc
jmp
adc
or
sub
jg
sbb
orb
sub
push
ret
es
js
adc
fstpt
cmpsl
call
pop
push
rcr
or
push
addr16
pusha
dec
fildl
loop
imul
ds
cmc
cmp
sub
aaa
adc
xchg
lock
xor
lock
ds
cmp
das
fisubrs
repz
aaa
pop
add
or
sbb
adcb
adc
adc
adc
rorl
pop
rcr
adc
es
sbb
out
jge
adc
adc
cwtl
mov
pop
pop
and
inc
notb
test
sahf
das
and
xor
mov
jb
or
bound
xor
js
sub
sbb
adcb
ret
xchg
sub
or
pop
fcoms
inc
movsb
outsb
sub
sbb
and
loope
addr16
pop
sbb
pop
and
fisubl
popa
popa
bound
dec
pop
scas
inc
or
dec
xor
or
jno
xor
dec
cld
loope
and
adc
pop
fadds
or
or
aas
pop
xor
or
gs
pop
and
popf
mov
xor
sub
clc
mov
lods
repnz
pop
ds
push
sbb
push
stos
mov
push
inc
sahf
and
pop
inc
data16
es
movsb
lods
pushf
push
ds
arpl
pop
xor
add
fs
xor
cwtl
cmp
repnz
pop
ss
sti
dec
fistl
pop
invd
mov
movsb
fcmovu
movlps
jb
xor
rolb
int3
les
or
ficoml
add
dec
sarl
xor
popa
aad
or
xchg
fstp
shll
dec
rcrb
xor
xchg
lock
das
mov
pop
sbb
sub
sub
das
stos
xor
pop
xor
mov
fcompl
xor
and
loope
inc
inc
sub
cmpsb
adc
jmp
clc
push
xchg
roll
inc
push
adc
push
mov
fidivl
aam
inc
adc
icebp
sub
sub
out
xor
push
jb
push
loop
or
or
or
sub
mov
cmp
dec
xlat
imul
add
add
pusha
pop
pop
andb
sbb
mov
stos
xchg
pop
and
addr16
test
xor
in
sub
or
fcoml
sahf
out
ja
adc
pop
sbb
out
xor
repz
out
roll
add
insb
ss
out
add
or
pop
push
add
or
mov
ss
adc
adc
sbb
and
sub
xor
mov
insb
sbb
push
mov
data16
testl
sbb
int
test
sub
add
or
fsts
pop
add
ss
adc
push
push
dec
ss
int
str
add
inc
xchg
or
insb
stc
das
incl
pop
ffreep
mov
out
pop
cs
and
pushf
adc
pop
add
test
loopne
scas
movl
add
das
movsl
push
pop
push
mov
jmp
jo
shlb
cld
das
xchg
xchg
fs
xor
mov
inc
incb
jl
or
out
dec
pop
repnz
pop
push
sti
dec
dec
pop
adc
push
testb
add
inc
sub
cmp
outsl
popf
push
pop
pop
add
dec
sbb
sub
adc
and
jmp
or
sub
push
xor
dec
xor
adc
das
or
xor
push
cmp
push
sub
call
das
das
push
add
sbb
sub
and
add
dec
inc
xor
aas
or
cmovbe
mov
cmp
push
inc
lret
sti
incl
sub
sub
push
dec
xor
xor
es
jg
xor
xor
dec
and
add
inc
jg
mov
aas
xor
and
pop
das
push
push
adc
or
lcall
es
inc
dec
xor
das
sbb
push
pop
adc
xor
sbb
sub
mov
inc
add
int3
orb
cmp
sbb
add
push
mov
push
push
orb
dec
test
xor
sbb
sbb
add
push
dec
test
mov
and
sub
xchg
sbb
mov
test
xadd
cmp
aaa
push
cs
sbb
loope
inc
xor
mov
and
push
add
stos
pop
pop
mov
mov
cltd
dec
loop
lods
push
outsl
inc
and
les
pop
mov
test
dec
xorl
rclb
push
lret
push
sbb
push
pavgw
push
xchg
addb
jb
add
push
cld
push
push
aaa
pop
nop
mov
push
inc
push
dec
inc
dec
push
dec
add
xor
addb
outsl
xor
into
lock
das
mov
inc
aaa
jno
dec
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
inc
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
jo
dec
ret
insb
sbb
xchg
shll
cltd
test
push
push
shll
push
mov
daa
mov
mov
movsb
sbb
dec
stos
fmuls
lret
lcall
pop
rep
cs
arpl
test
add
mov
mov
call
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
incl
pop
sbb
loopne
insb
inc
das
jno
jge
and
popa
push
dec
push
imul
loop
jmp
push
cmp
and
pop
jne
bound
xor
insl
aaa
cmp
inc
jns
pop
mov
xor
dec
or
ss
aas
jae
xor
jbe
jp
sub
jo
cld
es
cmp
dec
cmp
xor
dec
loopne
xor
dec
jmp
push
dec
sbb
pop
sbb
inc
inc
sbb
cmp
inc
aaa
jl
call
xor
aas
dec
cltd
sub
inc
nop
dec
int
in
mov
pop
sbb
pop
daa
xor
push
dec
sbb
call
dec
sbb
pop
ucomiss
inc
sub
in
fimuls
push
aaa
push
xor
inc
add
xchg
fldt
xor
xor
push
inc
add
repz
inc
xor
and
aaa
inc
push
xor
cs
inc
ss
mov
inc
add
xor
push
and
mov
dec
and
shlb
xor
mov
js
scas
aas
inc
or
mov
pop
loopne
push
in
push
ret
stos
xchg
add
inc
xor
sti
fnstcw
bound
test
cmp
bound
outsl
neg
sarb
sbb
mov
and
paddsb
push
je
mov
pusha
rorl
leave
jle
ds
or
xor
cmpsb
js
mov
lds
mov
movsb
das
sub
dec
js
mov
in
push
inc
loopne
int
add
mov
xor
jb
jbe
pop
addr16
xor
neg
lret
mov
popa
add
inc
sbb
fiaddl
add
mov
sbb
mov
mov
inc
cltd
or
or
mov
mov
pop
add
mov
and
sbb
pop
cmp
hlt
popa
or
xor
negb
pop
lret
rcll
in
out
jmp
cmp
and
loop
inc
push
mov
jl
inc
xchg
inc
popf
call
aaa
xor
adc
mov
and
sub
cmp
les
scas
adc
push
mov
jmp
and
scas
popa
loopne
push
sahf
inc
shll
test
icebp
adc
or
lods
sub
dec
mov
mov
cwtl
enter
xchg
adc
or
adc
ds
sub
and
dec
or
inc
les
movsbl
in
xor
js
xor
jae
popa
cmp
addr16
insl
gs
cmp
mov
push
inc
add
and
or
aad
fistl
xor
insl
loop
xor
and
push
add
mov
out
or
insb
cmp
add
loop
je
inc
xchg
insl
fwait
inc
mov
push
inc
push
cs
sti
ds
pop
add
push
or
pop
and
in
and
inc
test
pop
pop
pop
or
and
int
aaa
sbb
shlb
testb
adc
xor
sbb
aaa
sbb
ret
sbb
and
jae
push
imul
jmp
cmp
stos
or
push
dec
sbb
sbb
mov
and
addr16
arpl
jle
push
push
faddp
or
sbb
and
faddl
mov
jle
and
shll
sbb
adc
push
nop
pop
dec
add
inc
xor
je
mov
cs
dec
sbb
ja
jb
jg
inc
mov
jae
sub
or
inc
jne
sbb
xor
or
pusha
and
das
mov
push
test
inc
or
mov
jg
pop
sbb
rolb
cmc
aaa
push
aaa
inc
pop
adc
fiadds
sbb
push
pop
daa
sub
mov
call
push
aaa
ret
sbb
daa
lret
cli
test
inc
jo
rclb
nop
ljmp
push
outsl
imul
cs
stos
push
add
negl
shld
js
rolb
in
cmp
mov
and
dec
pop
das
push
xor
or
ds
pop
ljmp
xor
sub
dec
aas
cs
mov
inc
inc
dec
cmp
int3
cmp
mov
pop
jnp
test
add
push
mov
insl
sub
data16
mov
cmpsb
sub
or
xor
cmc
inc
jge
fst
outsl
sbb
push
data16
xchg
xchg
scas
add
in
pop
dec
dec
imul
push
xchg
je
push
push
outsl
jne
ja
imul
or
fistpll
fwait
inc
sub
pop
pop
pop
mov
xor
sub
dec
aaa
pop
jnp
xchg
pop
pop
dec
pop
aad
mov
jnp
lcall
pop
fsubp
mov
dec
pop
inc
ffreep
pop
cs
push
push
push
sub
ret
dec
push
stos
cmp
jl
cs
cmp
xor
divps
cmpsb
pop
pop
inc
test
push
insl
push
cmp
sbbb
pop
sub
scas
dec
dec
cld
es
sub
sub
inc
dec
add
test
inc
and
inc
hlt
xchg
push
out
or
add
cmp
add
fucomip
mov
insl
sub
fsts
gs
or
mov
filds
mov
aad
sub
jb
dec
mov
das
mov
and
addr16
popa
fcmovu
mov
int
insb
popf
and
movzbl
into
addb
imul
dec
outsb
push
je
scas
pop
add
sar
into
rcll
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
xchg
pop
repnz
test
xlat
jb
gs
es
js
cmovae
fwait
roll
push
loopne
cmp
dec
jb
bound
xor
aas
dec
adc
xchg
clc
inc
subb
adc
les
xor
add
xor
addb
sub
add
cmp
cmpsl
orb
inc
jno
add
and
orl
push
push
pop
test
icebp
inc
add
or
or
into
inc
dec
ljmp
or
lcall
aaa
or
sub
sbb
sub
imul
inc
ljmp
pop
call
cmpsb
dec
push
enter
jg
pop
pop
or
mov
xor
inc
adc
push
shll
in
or
mov
cmc
or
call
call
insb
test
mov
iret
pop
adcb
mov
push
xor
xchg
xchg
adc
mov
mov
stos
dec
dec
and
xor
add
mov
mov
lock
push
mov
insl
les
xchg
dec
add
add
das
adc
in
or
xlat
outsl
push
lea
push
or
inc
add
cmp
inc
add
into
or
inc
inc
in
mov
repz
sub
enter
inc
das
mov
dec
sti
mov
dec
add
dec
inc
setno
and
dec
cmc
inc
jg
in
insb
ss
jnp
jae
jg
cmpb
aas
mov
mov
rorb
pop
inc
dec
add
fxsave
movsl
add
xchg
sbb
jbe
bound
test
mov
mov
test
aam
aas
add
push
into
incl
adc
movsb
add
daa
mov
out
push
and
cmp
inc
add
outsl
ror
cmpsl
ja
mov
lahf
add
cmp
sarb
or
test
mov
loopne
inc
daa
outsl
jae
xor
mov
insb
adc
jg
leave
lods
stc
jbe
outsl
nop
sbb
pop
leave
xchg
pop
inc
inc
cmp
xor
xchg
pop
leave
sub
and
iret
xchg
pop
add
daa
sti
sub
test
fcomps
sar
cmp
mov
sahf
out
scas
pop
gs
je
pop
mov
cmp
out
inc
and
pop
sub
pop
idivl
test
pop
sahf
pop
iret
cmp
jnp
ds
pop
push
test
cmpsl
stc
cmp
clc
pop
fadd
in
mov
repz
lods
nop
je
push
inc
pop
dec
jae
sbb
or
fcoms
adc
out
dec
xor
ret
addr16
and
and
pop
int3
imul
dec
lcall
inc
popa
out
sahf
xor
add
idivl
sub
out
xchg
arpl
cmp
mov
pusha
ffreep
push
jg
jg
jne
scas
test
xor
add
dec
mov
cltd
in
imul
inc
xor
inc
leave
mov
jl
dec
pop
dec
outsl
add
xchg
or
filds
sbb
inc
cs
mov
xchg
mov
outsb
push
jb
xor
cmp
dec
sahf
imulb
ss
add
and
filds
push
test
pop
and
mov
add
js
out
xchg
sub
orb
nop
xor
pop
mov
mov
add
dec
push
adc
lods
fs
or
scas
add
insb
push
ljmp
add
sbb
sbb
xchg
rcrb
and
and
in
mov
lock
push
shrb
pop
adc
test
push
repnz
add
pop
imul
or
int3
and
fs
mov
imul
pop
jg
pop
leave
adc
out
and
clc
ja
add
inc
mov
sub
dec
enter
pop
pop
insb
sub
xchg
negb
js
fildll
jb
xchg
popa
fbld
outsl
and
add
pop
and
cwtl
sbb
and
test
or
sbb
add
or
out
pusha
mov
js
or
fdivl
daa
mov
je
rolb
cmpsl
and
push
aaa
push
mov
addr16
mov
repz
sbb
idiv
fiadds
add
or
daa
add
and
bound
lahf
cmpsb
leave
or
mov
popa
mulb
mov
popa
jg
push
rclb
mov
mov
xchg
sarl
pusha
pop
sbb
xor
dec
pop
and
daa
nop
xor
jbe
and
out
pop
cmp
xor
divl
sbb
pusha
popa
jo
bts
push
push
outsl
jg
add
add
sub
sarl
push
movsb
bound
add
cmpsb
clc
gs
mov
pusha
enter
nop
imulb
js
xchg
jo
mov
mov
or
adc
in
test
bound
xlat
or
imul
popa
shlb
scas
add
shl
lods
xlat
or
xchg
loopne
pushf
xor
fs
loop
shrl
arpl
or
mov
pop
arpl
testl
push
loopne
add
and
and
addl
cmp
push
cwtl
push
and
aaa
shlb
inc
mov
push
ja
add
subl
dec
xchg
lock
shlb
out
movsl
mov
adc
xchg
and
jg
add
mov
popa
xchg
sub
nop
jg
enter
addr16
add
jb
iret
test
faddl
adc
add
sub
jmp
mov
adc
outsl
add
ss
jno
pop
test
popw
test
pusha
ret
fcoms
aaa
pusha
push
hlt
imul
inc
cmpsl
fcmovb
mov
add
cmp
sbb
arpl
loopne
daa
in
mov
push
out
int3
lahf
or
add
rorl
setg
jns
xchg
fcompl
or
add
imul
js
jp
repz
xchg
mov
and
or
push
or
bound
dec
xchg
dec
movsb
push
xchg
push
xor
pop
or
dec
leave
adc
jmp
or
add
and
lock
sbb
js
imul
fmul
loopne
jbe
fsubrl
lods
in
stos
nop
add
dec
cmp
out
push
addr16
push
mov
out
or
sub
or
mov
add
and
push
and
dec
and
outsb
lock
and
fwait
or
sbb
test
push
xlat
mov
xor
xor
push
sub
push
push
insb
xchg
enter
mov
add
or
test
das
mov
imul
in
aaa
pop
lods
pop
mov
outsl
lods
pop
add
nop
iret
and
push
roll
data16
pop
das
es
lds
cwtl
or
addr16
aas
pop
out
cld
pop
lock
sbb
mov
add
dec
jl
cmpsl
fldenv
xchg
ret
jp
cmp
rcll
mov
out
jnp
push
imul
fdivrp
adc
das
dec
sahf
out
cmp
icebp
pop
jge
mov
jns
jns
and
out
repz
ss
mov
imul
mov
lock
cmpb
imul
mov
shr
sbb
out
repz
cmp
ds
mov
xchg
push
sbbl
movsb
repz
out
out
dec
mov
out
mov
pop
adc
iret
mov
repz
mov
repz
int
mov
repz
pop
idivl
idivl
xchg
ret
dec
push
nop
repz
out
push
xchg
inc
mov
lahf
cmpsl
stc
out
add
mov
iret
repz
mov
add
jns
ret
xchg
mov
sahf
out
ljmp
lcall
cltd
xchg
cmc
jns
dec
repz
lcall
cmp
out
sbb
xor
cmpsl
ss
dec
sahf
mov
iret
out
lahf
cmp
dec
loopne
mov
repz
or
mov
movsb
aam
movsb
int3
shld
jns
pop
cwtl
fistl
cmpsb
push
int
stc
cmp
cltd
cmpsl
loope
test
repz
repz
frstor
test
iret
mov
into
push
call
int
jns
mov
lods
xor
out
jae
leave
add
pop
jns
iret
repz
scas
sub
repz
out
inc
mov
mov
stc
xor
out
mov
adc
xor
cmpsl
shl
cmp
repz
push
push
mov
stc
cmp
ss
dec
repz
rcrb
sub
out
push
stc
xor
sahf
ja
cmpsl
outsl
rolb
into
lcall
out
lds
dec
repz
add
imul
int
int
iret
sarl
mov
rorl
imul
aam
fisttps
fmuls
push
push
jns
pop
push
clc
adcb
enter
popf
je
sbb
add
mov
mov
mov
and
repnz
cmp
in
in
add
pushf
jbe
inc
sbb
and
mov
pop
paddq
xor
pop
call
and
in
dec
rcrb
int3
pop
fidivrl
notrack
and
movsb
sub
into
mov
push
mov
push
insb
jae
outsl
jl
xchg
ja
pop
iret
shlb
loop
inc
pop
enter
popa
dec
in
scas
mov
cmp
pop
cld
dec
shll
rcll
outsl
adc
out
mov
scas
jg
cmpb
aas
jo
inc
jns
dec
mov
jg
dec
xor
ds
movsb
cmpsb
fdiv
push
or
pop
rorl
jl
mov
push
sarb
out
cmp
das
jmp
or
adc
jge
pop
xor
out
aas
mov
insb
xchg
idivb
mov
and
movsl
nop
cld
iret
and
dec
mov
push
adc
sbb
fs
insl
push
lods
sub
jmp
dec
add
sbb
pop
inc
jbe
push
sbb
cmp
push
daa
fs
mov
sahf
out
or
cld
push
bound
add
outsb
push
cmp
pop
add
ja
jb
and
ja
or
dec
in
inc
rorl
inc
pop
cmp
rclb
in
dec
sbb
adc
dec
and
sub
andl
adc
push
xchg
inc
in
iret
xor
mov
adc
rorb
fwait
nop
mov
js
bound
mov
or
pop
inc
mov
mov
push
das
outsl
or
xchg
xchg
cmp
dec
cld
js
js
inc
dec
leave
or
scas
mov
cmp
inc
cmpsl
push
jns
inc
jns
shrl
imul
jl
popf
fwait
push
fsub
push
pop
cmpsb
jp
add
jns
iret
sbb
int3
xchg
push
pop
jl
dec
mov
or
dec
cmp
push
lds
mov
dec
pop
leave
adc
cmpsl
mov
scas
shll
xchg
cmp
inc
or
cld
sbb
or
nop
jnp
mov
jnp
stc
adcb
loopne
scas
mov
sub
add
mov
jnp
jnp
nop
cs
mov
xor
adc
add
test
jl
or
and
lahf
xchg
pop
add
push
push
lret
mov
rcrb
nop
daa
xchg
pushf
or
sbb
dec
leave
mov
mov
push
push
das
nop
xchg
jge
gs
sahf
aaa
jb
jo
jnp
xchg
add
add
add
sahf
out
pop
mov
in
out
test
daa
jns
ud0
jle
jle
daa
nop
and
or
adc
adc
jbe
addr16
pop
cmp
in
push
add
sbb
jge
jge
xchg
movsb
lods
sahf
out
pushf
mov
cmpsb
add
add
repnz
push
sbb
in
leave
cmc
std
add
xchg
sbb
adc
daa
and
inc
jle
jle
pop
leave
and
rcr
cmp
mov
xchg
cmpsl
fwait
pop
mov
bts
pop
inc
fildl
sbb
xlat
outsl
adc
push
nopl
jbe
add
es
jg
add
pushf
pop
jg
xor
sahf
mov
and
adc
push
daa
xor
js
or
in
inc
in
or
add
sub
xchg
int3
adc
out
push
ret
out
data16
cmp
push
daa
sbb
xor
and
cwtl
rorb
xchg
push
jo
pusha
adc
cmpb
inc
push
pop
add
jge
in
jns
fldenv
mov
je
leave
and
adcl
daa
cmp
fs
enter
dec
hlt
fadds
or
mov
jo
adc
stc
dec
jno
and
add
and
pushf
and
jo
fwait
add
daa
and
mov
sbbl
ret
andl
add
or
xor
push
sahf
out
lcall
jns
out
daa
or
jns
out
dec
adc
sahf
out
sahf
pop
adc
ja
jns
out
test
pop
sahf
out
scas
sbb
mov
dec
mov
mov
jl
add
into
inc
sub
jae
aam
push
rorl
stos
add
orl
fistpll
pop
jb
lahf
xchg
inc
xchg
fmuls
or
aad
xchg
scas
inc
in
je
js
cwtl
scas
xchg
dec
cmpsb
in
shl
shl
add
nop
lock
xchg
pushf
sub
mov
inc
dec
cmpsl
inc
test
test
pop
test
daa
mov
and
in
xchg
mov
in
add
mov
pop
jns
out
fldl
mov
daa
sbb
repz
daa
add
pushf
xchg
por
mov
iret
add
jmp
pop
cmp
mov
aas
add
aas
aam
push
mov
in
das
or
test
pop
leave
mov
xchg
test
je
fs
pop
leave
mov
cmp
mov
lahf
push
xchg
stos
pop
jb
mov
leave
mov
inc
punpckhbw
pop
mov
pop
fists
leave
and
prefetchwt1
xchg
fsub
and
js
xchg
inc
xchg
mov
iret
imul
xchg
fsubrl
mov
cltd
orb
in
les
mov
aam
out
sub
mov
in
in
mov
mov
pushf
pop
and
add
jb
popf
lcall
out
xchg
int
add
jne
inc
sub
or
cmp
inc
testl
and
sub
adc
pop
push
adc
je
lea
scas
xchg
adc
orl
jns
mov
mov
jns
mov
mov
mov
jns
rorl
jmp
jns
mov
mov
mov
push
xchg
xchg
xchg
xchg
adc
push
or
or
or
xchg
xchg
xchg
xchg
or
push
add
add
add
dec
sahf
push
xchg
add
jbe
sub
aaa
xchg
fwait
dec
ds
xchg
add
and
andb
fildl
mov
ja
fmuls
mov
daa
mov
addr16
popf
dec
rsqrtps
nop
out
jb
mov
jne
jge
xchg
test
lea
movsl
push
push
subl
cmp
mov
mov
sahf
or
or
call
add
xchg
adc
mov
pop
mov
sub
mov
dec
dec
or
imul
xchg
or
jae
jnp
out
das
pop
push
cmovle
mov
outsl
bswap
mov
lea
icebp
push
aas
andb
pop
scas
mov
cmp
pop
or
rolb
adc
cmp
xchg
inc
mov
shrb
mov
xchg
and
mov
xchg
fildl
cli
add
or
sbb
and
pop
xor
in
push
push
inc
dec
adc
addr16
das
js
orb
xchg
add
lods
mov
pop
xor
out
out
ja
rorb
pop
sbb
mov
mov
push
add
jns
out
add
out
sahf
pop
or
jge
sahf
out
or
enter
or
enter
and
push
xlat
cmp
mov
and
jbe
lea
xor
cmp
inc
pop
jnp
sahf
out
push
push
pop
or
jns
mov
pop
insb
pcmpeqb
inc
mov
xchg
inc
pop
cs
xchg
xchg
push
filds
in
adc
repnz
mov
add
jb
inc
jb
ljmp
cli
add
leave
xor
les
mov
sbb
jg
mov
inc
pop
fs
mov
scas
je
nop
in
xchg
jae
pop
nop
push
dec
dec
jb
nop
lods
xchg
stos
xchg
jbe
jb
mov
ret
lret
xlat
out
sahf
out
add
jns
sahf
pop
jmp
clc
dec
and
hlt
push
xchg
call
faddl
add
loopne
imul
xchg
mov
mov
leave
out
xchg
scas
mov
fisubl
inc
mov
push
xchg
pop
sub
and
xchg
dec
xchg
push
xchg
sbb
jb
pusha
xchg
imul
out
mov
cwtl
dec
dec
outsb
inc
mov
mov
dec
dec
fsubrp
hlt
jns
add
xchg
pop
adc
sub
sub
jb
enter
xchg
fs
outsl
xchg
and
sbb
xchg
test
mov
xchg
xchg
cmpsb
mov
or
xchg
and
xchg
cltd
ficoml
mov
xchg
frstor
adc
sub
mov
mov
jbe
imul
and
aam
mov
in
stc
addr16
in
pop
xchg
xor
cmc
adc
inc
movb
sbb
pusha
push
daa
push
pop
mov
lods
popa
out
push
add
and
clc
nop
es
outsl
mov
or
add
fcmovne
xchg
cmp
xchg
and
sahf
outsb
repnz
ud2
cmp
inc
dec
xchg
outsl
sbb
repnz
rcr
in
mov
jne
scas
iret
dec
cs
out
fcom
fiaddl
dec
loop
popf
jg
dec
jb
add
addr16
stos
cmc
xor
in
dec
insb
xchg
aaa
ja
mov
inc
popf
movsl
mov
add
cmp
jns
add
fdivl
in
fsubp
and
dec
sbb
jno
out
xor
add
push
inc
mov
scas
inc
cwtl
dec
cwtl
push
cwtl
fisttps
in
sub
jne
jns
sahf
out
add
in
popf
movsl
lods
mov
xchg
xchg
xchg
mov
cwtl
aad
insl
xchg
xchg
cwtl
fstpl
jb
jb
or
or
jb
jb
push
add
jae
add
in
sbb
imul
sbb
cltd
sbb
or
sbb
mov
sub
out
cmp
in
repnz
dec
cltd
sub
sahf
mov
cltd
mov
pushf
je
lods
int
dec
dec
ds
fstpl
out
pop
in
or
jae
dec
adc
xchg
fcmovne
and
jb
cmp
cmpsl
push
int3
pop
repnz
imul
lcall
cmp
xchg
lcall
mov
rcr
daa
iret
jae
xlat
loop
in
clc
lock
iret
or
les
push
xchg
and
fwait
dec
fwait
sub
mov
cli
inc
pop
mov
sbb
or
or
mov
push
mov
jb
inc
repnz
pop
jo
cmp
ja
or
mov
addl
out
or
and
mov
or
daa
dec
leave
insb
cmpb
out
push
and
loopne
pushf
inc
andb
xchg
lret
leave
in
and
aam
data16
out
hlt
pushf
pop
leave
inc
pop
add
and
push
add
mov
add
add
jns
xchg
xchg
test
xchg
out
movsb
lods
pop
mov
repnz
repz
repnz
jae
adc
adc
xchg
jl
jp
popf
scas
adc
movsb
cs
sub
pop
sahf
push
out
jge
fisttpl
xor
add
inc
das
in
push
push
cmp
movsl
inc
movl
daa
mov
sub
pop
mov
dec
mov
push
scas
cwtl
sahf
xchg
cmp
fsubs
dec
cs
push
and
mov
enter
mov
fdivp
xchg
pop
push
das
add
push
push
jne
mov
dec
cmpb
pop
xlat
test
mov
push
push
mov
add
cmpsl
or
cmp
call
jmp
pop
push
jmp
lahf
xchg
outsb
fwait
sbb
lahf
pop
lar
rcll
add
iret
or
ret
xchg
sub
in
or
cmp
punpckhbw
out
out
js
cmpsl
pop
sysret
outsb
pop
pushf
cmp
nop
pop
cwtl
pop
mov
pop
test
or
or
daa
sarb
and
int3
jno
mov
out
mov
mov
call
sub
out
mov
cmp
int3
mov
mov
addr16
paddd
and
test
out
mov
mov
mov
shl
mov
mov
mov
jo
mov
enter
xor
pushf
fsubl
addr16
rolb
addr16
repnz
cmp
rorl
pop
stos
inc
adc
or
inc
stos
inc
insb
stos
inc
insl
in
xchg
mov
gs
xchg
ret
insl
push
add
mov
stos
and
nop
fs
pop
daa
stc
stos
cmp
stos
mov
pop
ret
shr
mov
scas
out
repnz
xchg
push
lahf
or
or
out
sub
xor
aas
jmp
dec
push
push
setae
bnd
mov
push
stc
fsubl
xchg
stos
pushf
push
add
or
sbb
rclb
out
mov
enter
mov
add
lea
movsb
pop
push
pop
daa
dec
inc
push
enter
out
inc
jae,pt
mov
lods
enter
dec
and
movsb
das
in
in
pusha
movsb
outsb
movsb
jl
pop
mov
pop
push
out
sahf
out
xchg
movsb
push
or
pop
out
movsb
movsb
orb
cmpsb
ljmp
in
in
idiv
pop
movsl
mov
inc
mov
enter
push
daa
in
or
outsl
sub
xchg
out
lea
ret
mov
pop
pop
cmp
adc
jo
pop
pop
push
and
andb
inc
testl
dec
and
test
mov
mov
ret
ret
ret
lret
mov
cmp
iret
add
jns
jb
incb
cmpsb
push
cmpsb
in
repnz
xchg
scas
xor
dec
cmpsb
push
lsl
repnz
cmpsl
push
pushf
cmp
jmp
xchg
popf
dec
cs
sub
lock
lret
in
cmp
ja
cmpsb
pop
fildl
xchg
mov
and
lret
cmpsl
ss
str
pop
dec
inc
cmpsl
push
cmpsl
bound
in
cmpsl
js
andl
mov
jns
jae
leave
pop
push
cmpsl
xchg
iret
in
jbe
pop
fldenv
add
es
add
lahf
or
cmpsl
ss
jo
adc
sbb
jg
pop
mov
cltd
cmp
inc
dec
sahf
out
cmp
pop
pop
addr16
jns
ja
add
or
jns
jg
xchg
xor
stos
mov
jns
lea
test
in
mov
add
in
sbb
pop
packuswb
add
mov
or
mov
xchg
cmp
xchg
enter
push
mov
in
jp
stos
aaa
push
daa
push
stos
fbstp
fiaddl
out
fwait
cmp
push
add
jmp
pop
movl
jmp
jb
push
rol
mov
cwtl
addr16
in
test
mov
pop
invlpg
dec
dec
add
shrb
or
sysret
and
fsubrs
add
out
cmp
mov
xchg
inc
mov
add
adc
cmp
iret
movsb
mov
dec
mov
add
mov
repnz
mov
stos
push
push
dec
sahf
ja
das
pop
xlat
popa
push
add
jns
leave
repz
add
jne
push
cmp
stos
cwtl
mov
daa
cmp
mov
adc
js
pop
dec
xlat
dec
lock
lahf
cmp
mov
repz
dec
and
jmp
repz
add
dec
jns
fidivs
push
into
insl
or
mov
loope
xchg
xchg
mov
cmpsl
into
call
rcr
cwtl
je
push
scas
lods
xchg
xchg
xchg
scas
aas
fsubrs
in
outsb
xchg
lods
adc
sbb
and
sahf
out
adc
cmp
cltd
jmp
lods
pop
sbb
mov
or
pushf
in
mov
mov
mov
adc
lods
xchg
lods
cmp
ret
and
rcll
jae
divl
jo
ss
daa
in
lods
inc
hlt
lods
cld
xchg
das
xchg
out
lods
pop
scas
jns
das
pop
outsl
daa
scas
das
scas
aaa
scas
out
pop
mov
aas
das
cmova
or
dec
push
loop
and
pop
fiadds
xor
inc
scas
sbb
push
mov
out
or
or
or
pusha
ja
jo
xor
nop
scas
mov
jbe
jb
lods
mov
add
ja
xchg
call
and
ja
sub
sbb
stos
cmp
cmp
scas
push
ja
inc
outsl
dec
push
add
cmp
repz
js
addb
sidtl
nop
add
mov
fcmovne
add
lret
pop
leave
out
jne
add
mov
pfcmpeq
movaps
dec
jb
mov
mov
cltd
mov
ja
add
cs
mov
push
in
aad
xlat
mov
pop
outsb
mov
pop
push
dec
jl
mov
mov
pop
fxch
or
mov
cld
scas
push
sahf
pop
in
pop
mov
sbb
jns
out
and
sub
xor
leave
dec
aaa
add
into
mov
mov
maxps
add
add
xchg
mov
cmpsl
or
scas
or
xchg
mov
mov
or
repnz
add
decl
mov
sub
data16
add
fstl
outsb
push
push
jbe
leave
repz
jle
or
inc
decb
cmp
pushf
pushf
fmull
pand
cld
dec
dec
inc
sahf
add
or
ds
dec
dec
dec
push
jo
xchg
dec
dec
dec
dec
stos
enter
out
daa
and
sub
dec
sahf
push
cmp
pusha
jle
cmp
repz
aad
out
sbb
and
leave
mov
cmpb
inc
jb
inc
in
shl
in
call
mov
mov
inc
insb
pop
push
mov
jp
jb
pusha
push
xchg
and
mov
dec
and
rcrl
icebp
jns
inc
sahf
or
pop
movsb
sbb
repnz
mov
mov
mov
and
addr16
mov
jg
sahf
out
push
push
xchg
sahf
out
or
je
or
pushf
cmp
rorl
bswap
adc
test
sbb
xor
cli
add
add
in
xchg
or
pop
pmulhw
in
dec
cmp
in
in
push
mov
mov
mov
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
loope
in
mov
mov
mov
in
in
fidivs
stc
mov
idivl
or
push
adc
jns
out
pop
and
and
out
sahf
out
cmp
sahf
dec
es
daa
pusha
sub
out
imul
sub
daa
dec
aaa
cvttps2pi
inc
pop
dec
xchg
mov
jmp
les
fucom
jns
pop
aam
fmull
jbe
and
das
in
in
mov
push
shrb
mov
xor
add
cmp
add
fimuls
or
lods
nop
rcl
jae
xor
les
push
add
iret
inc
jb
jbe
pslld
xchg
xchg
addr16
adc
add
pushf
fmull
push
push
jb
out
fs
add
xchg
mov
pushf
cmp
mov
add
popf
cmp
int3
add
jl
out
clc
or
mov
iret
repz
or
and
das
out
jns
cmp
inc
push
in
dec
sahf
adc
adc
jns
sahf
out
push
mov
lahf
lahf
sbb
in
rcrb
jns
loope
and
int
add
mov
and
xchg
lds
mov
pusha
mov
lea
mov
cmp
cmp
ret
fdiv
push
mov
push
das
dec
push
cmp
repz
pop
pcmpgtw
insl
mov
out
jne
adc
jge
stos
leave
out
xchg
sub
mov
pushf
fsubrl
sbb
repz
pushf
pushf
imul
leave
xchg
mov
mov
repz
mov
fcmovne
repz
sbb
and
push
cmp
sub
mov
jbe
push
sub
inc
or
mov
enter
xcrypt-ofb
cmpsl
cs
repnz
jae
push
mov
mov
or
or
xlat
dec
sahf
ja
push
or
femms
ds
out
sahf
out
maskmovq
notl
cmp
lds
rorb
pop
jns
cmpsl
fwait
lar
pop
das
push
out
rorl
xchg
scas
mov
pop
inc
sbb
push
leave
add
pop
sbb
pusha
leave
test
add
popf
fsubrl
pop
shlb
adcb
sar
ror
mov
mov
fisubrs
int
aad
ffree
mov
mov
cmp
adc
rcrl
jmp
rcll
dec
rcpps
xchg
jb
xchg
pop
movsb
xchg
xchg
rcl
cmpsb
scas
iret
leave
repz
mov
mov
pop
and
jmp
sub
lret
scas
iret
sub
add
inc
jecxz
sub
xchg
mov
mov
maxps
mov
mov
mov
xchg
xchg
lcall
iret
lods
mov
mov
and
pushf
or
int3
in
and
leave
in
cmc
ja
add
ret
lahf
sub
ret
in
jmp
pop
inc
ret
decl
xchg
xchg
mov
ds
jnp
xchg
int
jb
cltd
cmpsb
scas
movzbl
daa
inc
ret
int
fidivrs
icebp
das
stc
pop
add
repz
es
scas
les
adc
sbb
les
sub
test
sarb
scas
les
frstor
pcmpgtb
insb
pop
je
jns
fucomi
jl
test
mov
xchg
decb
inc
shl
in
or
into
outsb
mov
fstpt
xlat
neg
pop
int
fcoms
in
xchg
lds
lds
lds
lds
in
in
cmp
push
xchg
pop
cmpsl
mov
ror
push
ds
and
xchg
xchg
nop
cwtl
mov
xor
iret
dec
ret
jg
push
imul
lds
or
out
add
mov
push
addr16
fs
mov
and
dec
leave
repz
push
xchg
popa
mov
pop
test
add
cmpsl
mov
cmp
daa
mov
rorl
gs
sahf
cmpsl
add
in
in
hlt
inc
or
adc
in
sub
movl
jmp
insl
das
das
das
das
js
add
cltd
das
das
das
das
movsb
scas
mov
das
das
das
rol
fcmovnb
out
icebp
in
fldt
cld
pop
nopl
in
in
sbb
sbb
in
in
push
adc
loop
cs
enter
sahf
out
cmp
xor
xor
out
dec
xor
out
sahf
out
push
jne
sahf
out
sahf
xorb
cmp
repz
in
daa
iret
cmp
int
ds
dec
sahf
out
inc
out
cmovb
mov
inc
add
nop
jns
out
and
cmp
cmp
push
pop
pop
iret
jae
jb
jb
dec
mov
in
sqrtps
in
mov
leave
call
pop
enter
fildl
pushf
iret
or
adc
push
pop
nopl
repnz
into
sub
xor
aas
lret
inc
mov
push
lret
cmp
enter
lret
mov
cmp
lret
iret
outsl
xchg
lret
iret
lods
lret
mov
lret
into
lret
sahf
out
push
adc
mov
cli
lret
movups
sbb
jns
out
sbb
es
sahf
out
sahf
sbb
push
cmp
in
and
push
and
cmp
repz
mov
das
stos
sub
mov
shrb
cmp
psraw
in
das
outsb
and
into
test
sbb
leave
repz
and
cmp
jae
cmp
inc
pop
dec
cmp
jae
cmp
cmp
jo
jbe
cmp
cmp
iret
leave
in
pushf
pop
cmpsl
mov
mov
inc
enter
fimuls
lahf
xchg
int3
dec
mov
pop
int
pop
cmpsb
movsb
mov
push
sbb
daa
iret
add
aas
cmova
iret
insl
sub
dec
int
int
fistpll
daa
push
jp
mov
add
out
xchg
xchg
add
add
mov
pop
push
or
adc
inc
mov
xlat
inc
dec
dec
mov
jg
lock
mull
dec
and
push
add
jb
je
adc
push
sbb
ret
jae
jb
xor
or
inc
into
or
mov
imul
into
pop
jnp
jns
daa
orl
shl
fwait
into
lahf
fcom
mov
mov
daa
into
fiadds
out
mov
push
mov
fcoms
iret
push
pop
fisttps
cmpsl
daa
add
push
mov
repz
xchg
iret
dec
rcpps
pop
iret
repz
or
je
jg
dec
outsb
daa
mov
xchg
mov
dec
mov
adc
jns
leave
mov
xlat
loop
adc
out
clc
add
push
sbb
iret
repz
sbb
sbb
and
das
in
jmp
cmp
dec
sahf
out
and
push
and
jno
jl
outsl
xchg
jecxz
in
push
daa
popf
test
mov
loope
repnz
jg
cwtl
fdiv
shr
pushf
bound
shlb
mov
rcl
push
add
daa
xor
iret
cmp
cmp
rcrl
pusha
mov
mov
es
repz
rorl
pop
push
popa
cmp
mov
shll
shr
sar
pop
vmwrite
add
add
push
rcrb
shl
jns
ja
push
adc
cmp
in
inc
pop
push
sbb
mov
movhps
push
jns
outsb
bnd
jg
and
popf
push
and
out
and
repnz
sahf
aam
fildll
ljmp
cs
sar
dec
inc
pop
mov
call
jns
sbb
fldt
shl
fldl
pop
xor
ds
dec
add
jns
push
add
push
jne
test
cmpsl
das
adc
push
add
dec
fisubs
outsl
xor
mov
shufps
fstps
out
push
add
in
mov
aam
pop
fmuls
sysret
pop
xor
bsf
lret
lret
cmp
inc
aam
aam
push
adc
iret
repz
shlb
aam
loopne
das
push
add
out
add
into
das
aam
and
fisttps
sbb
and
or
adc
sbb
add
sub
aaa
jns
out
push
cmp
inc
daa
iret
dec
add
dec
push
pop
daa
iret
repz
fs
outsl
ja
in
outsb
pop
jg
xchg
adc
scas
js,pn
cmp
pop
mov
mov
lret
imul
aad
aad
sbb
lock
or
mov
adc
push
add
xchg
inc
dec
aas
sahf
xchg
out
push
push
or
or
iret
cmp
sbbl
pushf
fsubrl
mov
iret
repz
pushf
into
fsts
adc
out
push
cli
push
jns
xchg
iret
lahf
xlat
xlat
push
sbb
dec
sahf
out
adc
repz
leave
inc
inc
and
cmp
leave
pop
mov
jae
iret
repz
and
xchg
jae
cmp
lahf
sub
iret
sub
lret
cs
sahf
loope,pn
push
xor
fdivrs
xor
sbb
aas
add
xchg
out
jns
fdivrs
aaa
inc
leave
mov
pop
fdivr
cmp
fbld
movsb
sub
inc
inc
stos
stos
mov
and
inc
mov
xor
cmpsl
pop
sub
sub
cmp
cmp
or
pop
aas
inc
push
in
mov
cmp
aas
sub
inc
or
push
xchg
mov
aaa
push
mov
pop
outsl
aaa
cmp
push
add
sbb
out
add
mov
xchg
out
or
or
or
or
daa
popf
je
ja
push
adc
and
pop
inc
inc
push
addr16
das
outsb
mov
in
push
xorps
insl
xchg
out
push
push
and
jb
fildl
orl
rep
daa
test
in
adc
mov
jb
loopne
aas
into
aas
xlat
sbb
pop
dec
sub
data16
jecxz
inc
add
add
jmp
es
xor
and
sahf
out
and
adc
cld
call
lock
repz
ror
enter
jns
out
mov
movsb
repz
sahf
out
nop
mov
cmp
jo
pop
push
inc
inc
ds
repz
xor
or
in
adc
push
aaa
and
and
lds
adc
enter
and
or
pop
and
mov
mov
or
pop
adc
mov
test
mov
pop
mov
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
movsl
sbbl
cmp
mov
decb
inc
out
in
jbe
pop
inc
mov
iret
mov
in
sbb
in
call
adc
aas
and
pop
fidivrl
xor
fcomp
loopne
pop
push
mov
jle
mulb
mov
or
cmp
pop
add
or
and
cmp
clc
jle
inc
aaa
push
jle
pmovmskb
add
mov
sub
inc
mov
aas
pop
add
pop
ja
dec
dec
add
out
mov
dec
repz
or
les
repz
xchg
adc
stc
cmp
repz
sbb
in
out
sahf
cmpsl
sbb
jns
dec
push
sub
enter
int
cmp
and
ljmp
jns
jp
sub
mov
push
cmp
rcrl
jecxz
lcall
mov
into
test
push
rorb
push
add
dec
in
ds
in
inc
pop
jno
sub
das
js
test
sti
scas
adcb
fldlg2
test
out
push
jae
xorb
adc
push
push
mov
lcall
push
push
sbb
mov
xchg
aas
pop
aad
movb
es
and
fucomip
scas
cmp
pop
lods
mov
jg
out
cs
ja
dec
loopne
inc
sub
sub
bound
mov
out
je
adc
fisubs
icebp
cmp
sbb
sbb
addb
icebp
clc
add
lock
out
iret
and
push
and
mov
icebp
cld
lock
add
sahf
fcomps
pop
adc
fsubl
das
cmp
or
or
adc
pop
rcrb
in
enter
out
push
rcrb
push
mov
jns
out
test
movsb
and
and
and
aam
mov
nop
xor
clc
mov
xor
inc
out
xor
leave
dec
pop
push
lea
inc
cmp
xorl
jg
cmp
out
push
pop
js
mov
sti
cmp
out
adc
xor
add
or
dec
cmp
xchg
cmpsb
xchg
mov
jae
das
stos
dec
popf
out
dec
insb
cmpsl
arpl
stos
jmp
das
dec
inc
pop
nop
leave
enter
inc
pushf
or
nop
psubw
mov
adc
jg
andl
mov
sbb
dec
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
add
inc
stc
mov
adc
mov
decl
js
ljmp
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
incl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
push
mov
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
or
clc
ljmp
leave
fwait
xchg
and
and
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
and
call
dec
inc
inc
pop
mov
lcall
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
push
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
into
ror
add
cmpsb
fmuls
pop
pop
cmp
pop
adc
insb
inc
inc
push
dec
push
dec
dec
xchg
jnp
cmpsl
lcall
xor
ja
popa
push
out
mov
les
decl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
aaa
incl
add
std
test
movsl
cli
test
xor
leave
mov
mov
fdivs
jne
filds
or
shrl
push
ficoms
push
xlat
enter
call
popa
sarb
and
mov
cltd
xchg
mov
ljmp
fiadds
sub
mov
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
pop
adc
pushl
aam
call
xor
int3
test
xchg
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
jg
cli
cmp
mov
inc
movsl
fisttps
fadd
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
decl
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
jmp
cmpl
or
mov
lcall
ljmp
fildl
push
fdivl
call
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
incl
lock
add
inc
push
imul
xorb
sbb
push
imul
pushl
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
pushl
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
sar
pushl
jns
imul
andl
shrb
rclb
or
add
sar
or
das
es
lds
or
add
ljmp
sar
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
call
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
call
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
scas
bound
test
jg
decl
jmp
mov
xor
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
ljmp
xchg
sub
aaa
mov
or
sbb
add
sub
inc
pop
out
ja
dec
xor
jo
pusha
push
test
push
fldl
aad
jns
xlat
cmp
push
xlat
fcomp
ficompl
fsubp
jecxz
jns
jns
in
jmp
ljmp
sahf
out
cmc
div
clc
stc
dec
aaa
sahf
out
sti
cld
pop
adc
add
adc
push
push
movsb
sub
xchg
push
jbe
sbb
scas
jae
inc
mov
dec
es
dec
bound
jbe
inc
jecxz
jecxz
insl
bound
inc
movsl
fisubrl
dec
popa
je
push
ret
ds
dec
fisttpl
and
jno
xor
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
dec
push
fstpt
xor
xor
xor
add
pop
jnp
push
inc
jbe
pop
insb
imul
ss
imul
push
dec
inc
pop
add
test
inc
or
xchg
test
and
dec
xor
popa
or
adc
mov
fs
push
je
xor
adc
ss
jbe
insl
adc
popf
inc
aas
fnstcw
stos
popa
cmp
jle
gs
inc
push
push
ret
push
add
sbb
sbb
pop
aaa
out
and
fidivl
insb
popa
jns
sub
xor
push
dec
insb
insb
pusha
lods
imul
mov
or
je
aaa
aas
mov
test
inc
push
push
aas
pusha
lds
add
aas
movl
jae
daa
xor
daa
pop
or
and
or
rcll
movsl
in
int
sbb
inc
pop
jecxz
inc
je
jo
inc
inc
add
test
mov
mov
mov
iret
int
push
dec
cmp
fsubrs
mov
sbb
mov
dec
jge
inc
outsb
jne
adcl
dec
jge
mov
xor
xor
mov
notb
or
add
outsl
in
cs
clc
xchg
into
pop
jo
mov
dec
mov
pop
inc
cmp
sub
add
xchg
sub
push
add
and
xorb
outsl
xchg
inc
mov
mov
dec
xchg
lahf
cmp
mov
push
nop
scas
pop
xlat
mov
xchg
out
and
inc
jb
addr16
sahf
andb
jo
loopne
dec
adc
lahf
push
outsl
outsl
lods
pop
or
mov
lds
sti
adcl
mov
mov
pop
or
sub
test
pop
cmp
arpl
cmp
mov
jo
lahf
pop
mov
push
xchg
insb
jns
shrl
lods
ss
xorb
mov
je
int
adc
test
dec
popa
mov
mov
bswap
dec
in
inc
sti
inc
push
bound
ja
inc
jbe
mov
mov
dec
dec
repnz
ja
dec
xor
je
mov
addr16
xor
sub
inc
repz
adc
push
xchg
mov
dec
jg
inc
loopne
movsb
outsb
lods
xor
or
or
or
xchg
sahf
dec
hlt
pushf
add
inc
adc
clc
xchg
sub
sbb
sbb
adc
inc
push
inc
dec
lods
pop
jno
pop
bound
outsb
arpl
adc
xchg
cmp
pop
mov
sub
pusha
in
insl
inc
fs
sub
inc
jne
push
lea
xchg
inc
mov
xchg
fcmovne
xlat
mov
test
push
daa
sub
stos
orb
add
inc
adc
adc
pop
movsb
mov
cmova
add
cmp
push
fdivr
loopne
adc
dec
add
or
add
pusha
add
fistl
fbstp
add
add
or
pop
pop
push
or
or
add
or
or
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
aaa
cmpsl
add
inc
add
nop
add
add
pop
add
in
add
adc
add
js
jno
mov
loopne
add
jb
adc
jge
in
jg
adc
xor
adc
pop
and
xor
inc
mov
adc
xor
addb
add
js
and
subl
and
adc
jno
or
xchg
rolb
pusha
orl
add
add
or
add
aas
adcl
shlb
or
add
pushf
into
add
adc
decb
lods
jnp
ja
adc
push
adc
pop
popa
jno
and
fwait
outsl
or
xchg
mov
lock
sbb
loope
icebp
mov
mov
add
or
push
xor
js
or
cli
sub
rcr
push
ret
decl
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
cmp
out
pop
les
fsts
dec
or
xchg
jecxz
pushf
ret
ja
fbld
and
cmp
xor
and
jmp
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
scas
or
xchg
pusha
add
std
or
mov
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
inc
fdiv
incl
mov
movsl
jecxz
pop
mov
sbbl
push
xchg
jg
or
insb
sub
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
in
dec
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
ljmp
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
xor
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
decl
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
cld
lock
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
idiv
pushl
jg
xor
hlt
and
xchg
jmp
sbb
decl
xchg
add
pop
jb
mov
mov
xor
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
dec
rcrl
stos
hlt
push
add
stc
loope
mov
sar
push
mov
fildl
icebp
testb
mov
lcall
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
decl
sbb
cld
andb
outsl
sbb
jb
adc
push
push
movsl
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
outsl
fcmovne
andl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
sahf
fisubs
or
dec
fisttpll
out
aas
std
cli
push
push
ljmp
outsb
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jl
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
incl
stos
arpl
add
cld
call
pushl
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
cmp
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
ljmp
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
call
imul
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
adc
test
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
scas
les
cli
adc
and
lahf
fdivrl
mov
push
enter
jecxz
scas
sub
in
pop
mov
hlt
sub
mov
dec
incb
fisubrl
aas
mov
in
pop
fsubrl
push
inc
or
pop
jg
add
mov
jae
cmp
sub
adc
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
lcall
cmp
pop
incb
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
sar
cmpl
sbbl
and
cmp
push
jle
dec
push
in
aas
mov
fsubrl
mov
js
lock
and
add
push
clc
xchg
pushf
mov
xchg
push
or
and
mov
adc
inc
aas
push
xchg
jg
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jg
jge
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
dec
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
fsub
pushl
fsubr
fistps
lds
fidivrl
jg
stos
clc
mov
cmp
out
fidivrl
xor
lahf
les
pop
stc
sbb
sbb
cld
addl
sbb
loop
in
stc
mov
lahf
outsl
int3
push
sbb
pop
lods
pop
test
bound
pop
outsl
xchg
incl
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
hlt
fcomip
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
shl
cld
mov
adc
stos
decl
loopne
shrb
rcl
jg
adc
xor
pop
rcr
cmp
decl
sub
jmp
lea
jp
jnp
jecxz
adc
incl
ds
pop
adc
imul
or
inc
pop
xor
rorb
ljmp
jmp
xor
subb
iret
mov
lock
inc
cmpsl
enter
mov
into
ret
incl
insb
or
and
xchg
fdivp
mov
insb
test
aas
repz
mov
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
pushl
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
mov
clc
incl
faddl
xchg
lcall
jne
jg
pop
cld
or
dec
ss
lods
movsb
incl
push
decb
pushf
imul
jl
fisttpl
subb
cmpsl
lret
dec
fistps
in
cmp
jmp
mov
std
push
test
pop
lock
jmp
hlt
dec
mov
xlat
inc
loopne
incl
jg
mov
sub
fildll
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
stos
pop
test
incb
lock
pop
pop
div
cld
mull
adc
and
sbb
stc
lahf
loope
jae
jmp
mov
mov
pushl
out
xchg
add
out
icebp
mov
loope
mov
cld
and
sbb
fbstp
pushf
dec
lds
push
inc
sub
loopne
js
cmpsb
cmp
call
xor
decb
shrb
decb
dec
adc
call
sbb
cltd
add
mov
mov
cmp
int
add
push
pop
aaa
std
lock
cltd
nop
fisttps
inc
sbb
mov
mov
aas
icebp
ret
arpl
ror
sbb
aaa
inc
mov
adc
mov
sub
mov
pop
clc
scas
xorb
ja
and
dec
xchg
stos
or
add
xlat
jmp
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
xchg
mov
repz
movsb
pusha
shlb
xchg
sarl
pop
out
jg
jno
ret
fs
cwtl
scas
xchg
cmp
inc
sbb
aas
mov
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
pushl
in
sbb
xchg
imul
jmp
outsl
jmp
test
lcall
std
mov
daa
jmp
faddl
mov
add
xor
push
imul
pop
stc
push
dec
out
fstpt
daa
std
mov
mov
enter
sub
addb
push
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
decl
fildll
fsubrl
dec
add
and
add
stos
rorb
sti
push
sti
pop
inc
dec
push
mov
jbe
int3
or
cmp
aas
pop
int3
pop
iret
and
add
mov
mov
cmp
in
shl
jmp
mov
xor
or
sbb
lds
and
shr
fwait
in
jle
cmc
and
push
or
outsl
pop
pop
inc
mov
jp
xchg
pop
mov
sti
dec
xchg
jmp
mov
inc
addr16
xor
cmp
mov
lea
decl
loop
push
adc
jle
sub
sbb
pusha
daa
sahf
shlb
cmp
sub
and
cmp
idiv
sahf
push
inc
fbstp
mull
int3
pop
adc
ljmp
mov
add
ds
sub
popf
cli
repnz
sub
inc
xor
jns
xchg
push
fnstcw
iret
push
loope
or
fimull
nop
orb
dec
jae
cli
dec
cwtl
or
cld
ljmp
xlat
xor
mov
daa
push
push
jmp
cmp
xor
push
sbb
pusha
mov
xor
mov
xchg
xchg
aam
lods
andb
lea
bound
std
xchg
and
and
decl
add
sub
enter
and
push
push
ffree
ficoml
loope
aad
push
mov
bound
cmp
mov
or
cmp
arpl
pop
incl
jno
or
fmuls
int
jmp
push
inc
mov
stos
fs
aaa
jae
shr
dec
jmp
stos
inc
or
mov
sbb
and
mov
nop
xchg
xchg
adc
shl
cmp
incl
mov
mov
sbb
fs
mull
dec
stos
mov
arpl
adc
lret
ljmp
outsl
scas
bound
cs
xchg
pop
scas
popa
add
jg
lret
lock
push
scas
fmull
jecxz
push
mov
push
cmpsl
dec
fisttpll
decl
jns
pop
pop
dec
pop
into
inc
pop
inc
lock
leave
mulb
sbb
xchg
js
sbb
xchg
cltd
inc
pop
cmp
mov
sbb
push
xor
sbb
nop
cs
cltd
int3
cmp
jae
js
lcall
cli
pop
pushf
push
sub
xchg
adc
push
insb
sub
inc
loop
bound
incl
mov
push
int3
or
sub
repz
mov
xchg
in
or
lcall
sahf
push
mov
out
mov
int
cmpsl
hlt
or
jg
sub
in
clc
dec
insb
js
push
out
mov
and
int
xor
sbb
shrl
xor
int
decl
sub
insb
push
push
sbb
cmpsb
popl
sahf
dec
stc
fnstcw
mov
xchg
mov
inc
js
inc
es
mov
test
mov
jo
sti
int3
sub
and
lcall
add
lcall
pop
enter
sub
sbbb
mov
jb
xchg
cli
ja
xchg
adc
ljmp
dec
dec
mov
in
into
mov
mov
push
stos
out
gs
outsb
and
ffree
jg
dec
cld
fists
clc
in
pop
test
mov
mov
jbe
mov
and
movsb
bound
push
sti
sub
push
mov
and
push
incl
inc
dec
pop
mov
cltd
insl
mov
add
sub
fwait
sahf
mov
outsl
ss
inc
jns
cmp
sti
fwait
fwait
jg
outsb
fisttpl
dec
stos
jnp
fcoml
lcall
insl
push
lcall
add
into
cmpsl
jb
nop
mov
lahf
push
movsl
nop
divl
ljmp
insb
dec
outsl
push
leave
sub
adc
jle
jns
mov
jmp
mov
jle
cld
dec
push
jo
xor
sbb
hlt
jno
adc
lahf
incl
decl
out
hlt
aaa
adc
lods
insl
and
jge
stc
into
jle
fsubp
mov
add
mov
ret
call
aaa
push
sub
jp
xchg
mov
jl
cmp
int
dec
in
dec
cmc
mov
ljmp
mov
adc
cmp
and
push
cmp
mov
adc
jns
cmpsb
shrl
mov
out
cwtl
xchg
adc
cld
test
push
loopne
dec
dec
xchg
mov
mov
ret
push
and
jg
or
neg
lcall
in
out
into
and
mov
sbb
lret
stc
inc
ss
jae
xor
adc
mov
call
mov
js
cs
div
enter
push
lahf
dec
or
fdivs
in
add
call
ret
jp
xchg
insb
add
movsl
dec
add
mov
sbb
outsb
mov
ret
inc
sub
and
incl
pop
add
out
fidivrl
dec
test
lods
mul
icebp
test
pushl
mov
cmp
jg
mov
mov
sbb
jp
icebp
out
clc
leave
es
cs
mov
call
lods
mov
and
push
push
mov
mov
shrb
sti
testl
clc
mov
pop
jae
and
jg
sbb
addb
lds
mov
xor
mov
lcall
sbb
jecxz
dec
dec
hlt
stos
shlb
add
xchg
jbe
ret
adc
rdtsc
dec
cmp
ljmp
shll
mov
push
insb
cld
sub
mov
in
cmp
arpl
pushf
mov
cmp
mov
hlt
xchg
push
in
fadd
cmp
xor
das
clc
cmp
pop
lcall
pop
pop
push
aam
mov
and
scas
cli
jmp
jmp
lock
pop
xchg
mov
shll
adc
add
mov
dec
mov
cmpsb
call
std
out
jno
out
cmpsb
xor
or
xchg
pop
jg
rcrl
add
pop
push
cmp
adc
rcrl
mov
aam
fcoms
jp
mov
dec
icebp
pop
fildll
xchg
sti
pop
into
inc
pushf
jnp
sbb
mov
dec
out
xchg
lret
lods
dec
mov
lcall
dec
pop
pop
orb
lods
adc
insl
in
push
pop
pop
cs
dec
or
js
imul
jnp
push
in
ret
pop
or
es
popf
jnp
lcall
out
stc
out
cmc
jo
ljmp
ss
push
mov
jmp
cmpsl
mov
fisubl
pushl
loop
sub
mov
hlt
lcall
adc
fiadds
testb
jg
loopne
icebp
and
filds
xchg
in
arpl
fidivs
adc
stos
adc
cmc
mov
lcall
jle
sbb
add
sarl
repz
adc
mov
or
in
push
add
add
jmp
cmc
fldenv
xchg
xchg
inc
xlat
out
push
cld
incl
cmpsb
pop
in
fistpll
jns
in
mov
inc
ds
out
cli
push
add
xchg
js
bound
das
xor
scas
clc
ljmp
lcall
sbb
mov
inc
inc
or
push
mov
lahf
imul
insl
pop
mov
test
js
inc
in
ljmp
jno
lret
dec
xor
lds
sub
ja
insb
mov
jmp
fists
jo
mov
xchg
pop
and
add
sbb
adc
mov
jbe
and
jl
xchg
mov
push
adc
sbb
jl,pt
adc
add
out
clc
out
mov
sbb
push
aas
jl
aas
loopne
dec
out
jbe
loopne
outsl
inc
cmpsb
inc
mov
std
push
jge
jb
dec
adc
je
repz
cmpsb
out
fs
mov
in
insb
pusha
pop
and
xchg
movsb
stos
pop
outsb
movsl
jecxz
shl
imul
test
loopne
lcall
lock
jmp
mov
mov
push
cmc
inc
test
inc
or
inc
scas
clc
call
out
mulb
cmp
xor
int3
lds
xchg
mov
sbb
lcall
les
sbb
cld
aad
adc
idivb
cmp
jmp
sub
outsl
xchg
inc
jns
incl
loopne
mov
ljmp
mov
test
adc
hlt
enter
call
or
sarb
and
fistpll
sahf
jge
sbb
cmc
mov
fidivs
incl
lret
mov
pop
inc
flds
mov
and
ljmp
pushl
xchg
in
mov
or
cmp
data16
test
testb
nop
cmpsl
aaa
and
incl
ret
ret
cmp
cmpb
push
subl
xchg
dec
adc
call
pop
mov
lcall
mov
leave
aam
push
inc
mov
mov
add
ret
incb
xlat
pop
incl
ljmp
xor
adc
iret
mov
sarl
popl
loop
pusha
test
hlt
shl
jmp
imull
fiadds
xchg
dec
ljmp
aad
ret
scas
mov
ffreep
push
sub
mov
pop
or
adc
sbb
in
push
ret
andl
ljmp
bound
insb
jg
idiv
cld
jecxz
call
outsb
lods
cmp
pusha
arpl
xor
fwait
cmp
gs
xchg
sub
push
sar
push
cmpsl
jns
dec
adc
xlat
mov
lock
call
jae
inc
pushf
test
and
sbb
jns
sub
cltd
pop
dec
ja
sbb
push
dec
in
or
xchg
mov
arpl
jmp
or
mov
sbb
or
fstps
sub
out
addb
call
xor
outsb
lds
jge
push
dec
nop
adc
mov
stos
outsl
loop
or
jns
jnp
shll
out
mov
out
ror
sbb
sub
sti
shrb
pop
lock
mov
icebp
jns
lock
out
add
cmpsl
push
ret
lcall
out
dec
cmpsb
pushf
jp
push
or
push
mov
incl
jae
aas
pop
and
or
insb
enter
pop
jo
mov
pop
or
das
shrb
pop
cmp
or
mov
adc
lock
dec
or
lcall
faddp
fwait
jmp
pop
loop
scas
add
aas
repz
mov
add
fsubp
iret
clc
fdivrs
in
mov
mov
sub
lcall
push
enter
lds
push
push
xor
stos
xchg
or
out
orl
jp
sub
sub
call
xor
and
call
pop
xchg
mov
dec
fdivr
pushl
inc
sub
aad
test
dec
sub
idiv
xchg
decl
or
jl
pop
fimuls
mov
sub
xor
out
sarb
or
ja
and
push
mov
cmp
call
and
shll
add
decb
jne
jmp
fcmove
stos
jno
jl
repnz
dec
js
mov
mov
aam
dec
decl
cmpsb
sbb
push
and
sarb
cmp
cmc
mov
sbb
mov
pop
mov
pushl
fidivrl
call
sub
movsb
xorb
inc
xchg
jbe
inc
repz
lods
lcall
pop
data16
mov
push
sbb
test
dec
cmp
lret
fbld
add
pushf
mov
adc
mov
push
cmp
addr16
sub
xchg
mov
lahf
jne
das
xchg
xor
mov
jnp
ss
mov
mov
mov
mov
cmpb
jb
pushl
pop
mov
mov
out
addb
mov
xchg
push
pop
inc
jmp
es
push
enter
ja
add
cmp
sub
push
cld
xor
js
mov
sub
cli
sub
mov
dec
je
sub
add
lahf
mov
insl
mov
stos
sti
dec
into
add
or
jmp
inc
sbb
sub
adc
mov
fcomps
inc
push
mov
in
es
popa
fs
mov
sub
adc
shll
pop
jl
fldl
pusha
xchg
outsb
jne
sbb
pop
and
or
aas
mov
repnz
jae
filds
cmpsl
dec
jmp
sbb
test
jae
clc
outsl
add
jmp
pusha
dec
hlt
mov
outsl
scas
dec
or
cmp
aas
xor
cwtl
aad
pop
in
dec
jo
lcall
xchg
jle
adc
fstpl
dec
je
mov
and
icebp
cli
mov
mov
in
dec
les
pushf
in
mov
push
and
xchg
mulb
pushf
adcb
scas
and
ljmp
lods
jb
mov
jne
decl
dec
push
xchg
dec
xchg
adc
pop
icebp
dec
jl
add
push
push
xlat
fs
les
or
pop
hlt
jmp
testb
cli
std
loopne
scas
mov
shll
or
movl
adc
insl
cmp
arpl
adc
push
push
jns
mov
cltd
enter
decl
icebp
mov
js
pop
shll
cld
sbb
dec
pop
icebp
cld
jg
pop
pop
sbb
imul
push
jnp
sbb
movsb
ret
jg
add
insl
in
jecxz
mov
inc
mov
xor
lds
das
mov
in
ficompl
mov
mov
mov
popf
jno
decl
and
push
cmp
mov
jb
xorl
scas
dec
or
mov
fwait
sti
cmc
mov
ljmp
dec
jae
pop
lret
sub
in
xor
cs
mov
in
jg
fcomip
ljmp
and
in
lcall
dec
jno
out
pop
push
pop
mov
pop
mov
das
imul
push
push
dec
adc
repnz
adc
push
nop
jecxz
pushf
adc
inc
mov
mov
ret
testl
inc
pop
fmull
sub
aad
ljmp
dec
xor
xor
test
and
jb
push
mov
sub
imul
mov
decl
push
mov
add
loop
out
je
sbb
jg
and
xchg
mov
std
call
push
xchg
jl
jae
dec
cmp
subl
sub
ja
sub
scas
mov
outsb
shrl
int
cmc
in
push
mov
push
imul
dec
push
jbe
add
cmpsl
rclb
test
adc
pushl
data16
cmp
movsl
add
jp
xchg
gs
dec
fdivl
push
mov
cmp
pushl
mov
test
dec
shrl
movsl
mov
mov
dec
push
in
sbb
jmp
mov
psrlq
js
cmp
cltd
cmp
dec
cs
pushf
add
cmp
mov
cld
adc
mov
je
nop
cwtl
loope
xor
insl
lds
cmp
xchg
hlt
call
in
mov
dec
add
imul
dec
insl
test
je
popf
pop
pop
xchg
inc
aam
xchg
shrb
add
pop
sti
call
test
movsb
lcall
cmp
jl
jne
movsl
jp
jno
in
mov
ds
pop
incl
lods
leave
int3
and
and
adc
dec
outsl
push
mov
in
jo
mov
cmp
jg
fists
subl
std
outsb
cmp
test
das
lret
sar
incl
jae
jg
aas
sahf
insl
xorl
or
mov
push
cmp
add
push
nop
lcall
incl
lcall
je
or
xchg
out
push
aad
adc
inc
dec
dec
inc
sub
call
pushl
mov
outsl
setbe
sub
es
loopne
movhps
jns
cmc
push
xchg
xchg
mov
jl
shll
xchg
clc
mov
push
fsts
mov
ret
outsl
imull
out
clc
mov
scas
enter
sub
bound
sub
adc
aam
pop
std
out
lahf
xchg
jmp
mov
xor
incl
xchg
and
inc
xchg
mov
cmc
mov
movsl
std
and
adc
mov
pop
or
cli
incl
fstpt
iret
xor
mov
repnz
std
decl
les
xchg
lcall
roll
stos
pop
cs
mov
mov
cmp
sbb
sbbb
pushl
push
xchg
xchg
hlt
mov
pop
cmp
dec
repz
popf
imul
jns
sbbl
mov
pop
mov
jmp
dec
loop
inc
dec
push
out
daa
icebp
inc
popa
enter
outsb
shll
xchg
mov
leave
xchg
lds
incl
cld
ret
ljmp
mov
cwtl
movsl
rcll
pop
jbe
jo
lcall
nop
push
divl
inc
test
mov
stc
int
shrl
mov
mov
sarl
sbb
rclb
pop
mov
call
or
addr16
and
mov
aas
xchg
sbb
adc
and
pop
ja
jns
cmp
call
out
xor
xor
divb
filds
add
adc
mov
jb
std
insb
pop
leave
inc
jae
jecxz
iret
cld
mov
jno
xor
mov
xor
add
push
out
andl
inc
xor
rcpps
sub
movsb
cmp
sbb
mov
dec
mov
out
adc
rcrl
pop
mov
jns
loope
loopne
ljmp
sbb
jne
js
xor
orl
push
into
lahf
xor
mov
xor
or
jl
mov
push
mov
push
sahf
loopne
push
mov
pop
fsubrs
imul
mov
movsl
pop
cmpsl
xchg
dec
rorl
in
inc
arpl
scas
scas
mov
std
ljmp
pop
lcall
push
in
jp
xchg
arpl
ljmp
out
test
std
pop
ljmp
fwait
lea
cld
decl
fs
pop
sub
rcll
movsb
dec
subb
in
lcall
mov
sub
lcall
fcoms
icebp
icebp
arpl
sar
lcall
in
sub
aas
xchg
xorb
iret
lea
mov
mov
xor
ljmp
cli
stos
add
adc
cld
imull
adc
in
jbe
xchg
pop
xchg
fstl
lcall
pop
outsl
push
mov
scas
insb
dec
loope
lcall
jecxz
lea
hlt
incl
sub
xchg
or
push
stc
mov
ljmp
xchg
andb
sarl
mov
aam
sahf
mov
ljmp
push
xor
adc
popa
movsl
mov
add
xor
push
popa
jbe
mov
test
jmp
jge
xchg
sbb
cmp
testb
jno
sbb
mov
jp
movsl
incl
adc
orb
dec
jno
mov
call
loopne
aaa
insl
sahf
xchg
nop
loop
or
and
mov
mov
or
mov
fldcw
push
or
movsl
mov
test
pop
pop
sbb
ds
lcall
test
rcrb
divb
push
out
pop
jnp
jl
and
sbb
pusha
icebp
ljmp
shlb
jl
cs
adc
ss
add
popf
sbb
lcall
jnp
out
popa
lods
imul
mov
loopne
ss
mov
sbb
popa
imul
rcll
rorl
decl
lret
jne
mov
mov
sbb
pop
xchg
and
jmp
ret
jno
mov
dec
mov
mov
inc
inc
and
xor
mov
mov
sbb
imul
ljmp
lcall
or
ret
mov
rclb
sub
out
mov
jg
add
movsb
inc
repnz
inc
aas
ret
inc
xlat
jg
push
mov
jmp
mov
fsts
xchg
imul
inc
mov
cmpsl
xor
lcall
jo
xlat
mov
sub
lds
imul
mov
cwtl
mov
aam
jmp
mov
cmc
xchg
clc
bound
jge
jno
arpl
stc
aam
adc
jb
cmp
pop
bound
sahf
lcall
inc
mov
push
lds
popa
scas
stos
mov
sbb
incl
stc
mov
nop
pop
mov
mov
rorb
push
in
shrl
add
cmp
popa
pop
in
and
dec
call
cmpl
test
call
cmp
push
jns
stos
sbb
leave
jmp
shlb
nop
push
repnz
rol
dec
jg
push
or
daa
ret
and
inc
leave
cmp
mov
pop
mov
inc
movsb
les
jg
push
jp
and
xor
loop
dec
mov
roll
loop
adc
xor
call
mov
lret
pop
lret
sbb
fdivs
push
adc
popf
cmp
pusha
decl
lret
cmc
icebp
jmp
fnstcw
iret
mov
je
push
pop
xchg
cli
ljmp
mov
jmp
jmp
ja
clc
outsb
push
cld
adc
and
ljmp
dec
arpl
xor
xchg
xor
push
stos
and
xchg
pushl
mov
divb
into
xchg
lret
cs
jge
xchg
call
push
lcall
out
mov
ja
ds
inc
sub
adc
pop
mov
mov
mov
outsl
adc
cs
sub
xchg
push
add
pushl
push
xor
orl
pop
out
xchg
shlb
enter
ljmp
and
xor
fldcw
loop
jnp
repz
lcall
mov
std
xchg
push
popf
repz
mov
call
and
and
cs
data16
ljmp
fmul
inc
loop
push
add
int3
adc
jge
daa
out
addr16
pop
mov
test
adc
or
pop
cld
pushl
pushf
xorl
and
xor
mov
call
mov
sti
adc
int
xor
pop
xchg
push
lret
outsl
dec
mov
push
aam
cld
outsl
adc
imul
jle
pop
pop
cmpsl
xor
call
xor
gs
cmp
dec
add
shr
dec
add
ljmp
xchg
addr16
jmp
or
jecxz
test
lds
aam
sub
dec
stos
jne
popa
sub
mov
inc
mov
cmp
out
add
scas
jno
or
out
push
lcall
fldl
xchg
cld
xchg
cmp
jp
icebp
xchg
outsb
loope
mov
fcoms
add
mov
push
cs
and
int
and
fs
jecxz
xor
enter
incl
xchg
sbb
scas
scas
cmp
or
and
sub
stos
sbb
jmp
mov
in
mov
cmp
xchg
jmp
dec
ret
rolb
dec
dec
test
mov
call
das
rclb
inc
and
push
inc
and
in
lahf
xor
push
add
in
sub
or
mov
ljmp
sbb
mov
clc
cmp
jl
mov
popa
loope
adc
sbb
je
pop
mov
aas
adcb
pop
ret
mov
push
ret
jnp
out
mov
add
loope
xchg
push
sahf
cmp
ljmp
push
jne
jns
jne
pusha
sub
lcall
int
out
scas
dec
mov
decl
xchg
scas
cmpsl
js
sbb
je
pop
repnz
pop
push
xor
adc
jge
inc
xchg
or
push
cmp
add
cmpsl
dec
dec
ficompl
xchg
popa
xchg
sbbb
fsubs
repnz
ljmp
movl
in
enter
mov
or
sub
jecxz
mov
push
lcall
xor
fcoml
aam
pop
mov
add
addl
int3
rcl
sub
call
stos
push
add
sub
aam
xor
mov
mov
push
test
call
xchg
aam
xor
ds
lods
jb
add
sbb
sbbl
outsl
loop
popa
ljmp
cli
fcmovnu
mov
stos
inc
orb
cmpsb
pop
shl
addb
mov
test
in
lcall
xchg
ljmp
xchg
lea
or
pop
stc
push
or
fsubrp
xor
add
mov
loopne
movsl
add
sbb
xchg
dec
pushf
or
lock
call
fstpl
xor
pop
div
cmp
dec
mov
jge,pn
jo
push
jge
fdivr
push
std
jmp
fidivrs
mov
aaa
jmp
cld
mov
cli
inc
repz
inc
dec
cmp
divl
test
incl
adc
push
mov
dec
out
stc
adc
and
incl
push
test
out
push
in
and
mov
mov
push
addb
xor
add
jle
out
out
arpl
or
cs
out
mov
xchg
and
push
inc
add
mov
lcall
aas
daa
scas
mov
mov
sub
daa
scas
xor
rcrl
mov
or
sub
out
in
add
pop
dec
jg
popw
sbb
lahf
aad
in
insl
mov
push
addl
sbb
sub
out
cmp
decl
cmc
mov
pop
inc
or
movb
js
insb
hlt
outsb
lcall
incl
cli
movsl
and
dec
dec
jns
jge
dec
jmp
sbb
jmp
dec
sbb
push
test
pushf
fucomi
rclb
or
fisttps
fs
outsl
inc
xor
xor
std
pop
dec
push
inc
dec
test
push
push
mov
lcall
repnz
and
xchg
inc
out
sbb
adcb
cmc
cli
pop
in
mov
cmpsb
inc
mov
push
sbb
mov
add
lcall
test
xor
xor
outsl
adcb
rcrl
and
decl
repnz
lret
fbld
imul
cltd
cmp
or
aad
loopne
ljmp
mov
push
js
adc
cmp
push
pop
test
popa
adc
jmp
dec
orb
dec
into
or
push
stos
movsl
and
mov
xchg
mov
std
call
pusha
cmp
out
adc
or
jbe
outsl
shlb
arpl
xchg
mov
lock
push
in
pop
mov
jo
cmp
xor
inc
push
push
loope
adc
pushl
stos
jecxz
mov
out
push
lret
pop
lock
mov
repz
push
jge
sub
lock
jmp
mov
mov
lret
mov
pop
leave
nop
mov
mov
incl
mov
bound
xor
test
gs
mov
dec
add
jecxz
dec
ss
jecxz
cmp
cmp
pop
xchg
rclb
test
outsl
jnp
dec
push
decl
das
jmp
sbb
cs
shlb
lret
or
mov
pushf
ret
iret
push
lock
fdivl
bound
test
and
call
xor
cltd
iret
popf
fbstp
xor
in
int3
xchg
sub
cmpsl
loope
or
pushl
jle
out
call
sub
popf
lea
fdivl
je
fldl
push
out
mov
mov
loop
mov
test
mov
scas
jmp
and
imul
xchg
test
jge
cmc
hlt
cli
out
add
jno
jge
xchg
inc
add
in
ret
sub
incl
lcall
ljmp
add
mov
xchg
or
popf
cmc
outsl
cmp
fistps
incb
or
rorb
repz
and
lea
lods
sub
jg
ds
std
fcmovnu
mov
fs
jbe
ljmp
dec
mov
sbb
inc
in
xchg
cmp
outsl
lret
scas
js
adc
and
hlt
mov
adc
push
push
fcmovnu
scas
inc
pop
sub
mov
sub
inc
dec
add
sbb
push
shrb
ret
in
xchg
add
jmp
aas
insl
xchg
fldcw
pushf
rorl
xor
scas
pop
xor
jne
call
out
jmp
xchg
cmpsb
in
and
mov
repnz
inc
adc
aas
push
inc
mov
push
arpl
mov
into
sub
lods
es
dec
sbb
lds
cli
jns
sbb
push
push
push
adc
add
jp
imul
int
test
out
jns
in
daa
xchg
lahf
call
sbb
ljmp
lock
fisubl
enter
xchg
imul
stos
sub
incl
mov
adc
jo
or
imul
mov
inc
aam
inc
and
jbe
add
mov
inc
std
mov
leave
sbb
loopne
or
jmp
xor
dec
popf
call
cmp
loop
test
sarb
ds
decb
rorb
divb
fdivrs
inc
jmp
cld
jns
aad
push
das
fcom
ret
push
lods
lds
test
fstl
std
ljmp
sbb
and
xchg
je
lock
pop
neg
add
mov
mov
cld
cltd
in
jmp
mov
js
sbb
or
leave
daa
pop
fs
cmp
add
in
jo
lahf
sub
out
and
jge
ljmp
lcall
xor
in
gs
decl
xchg
fsubl
lret
pop
inc
jns
insl
push
sub
sub
fstl
imul
cmp
dec
insb
xlat
icebp
xchg
cltd
inc
xor
xchg
and
jnp
mov
mov
pop
xor
decl
iret
push
pushf
dec
mov
mov
xchg
insl
jns
cmp
scas
movsb
pop
push
stos
xor
jns
pop
bound
sahf
enter
or
xchg
cmp
xchg
adc
inc
orl
inc
add
or
rcll
cmp
mov
cmp
scas
ds
lods
mov
in
jae
jno
cli
xchg
xchg
lea
ds
dec
ja
ja
cld
in
xchg
push
push
cltd
sub
iret
jge
xchg
in
jnp
insl
iret
lret
push
rcrb
inc
sub
jnp
stos
incb
ds
repnz
hlt
daa
rcr
push
mov
mov
xlat
xchg
inc
insb
call
aaa
std
int3
je
pop
push
lock
mov
repz
test
pushf
xchg
adc
decl
cmp
inc
mov
cltd
sahf
out
jo
jns
ret
std
adc
nop
gs
decl
in
outsl
stc
xchg
fiadds
mov
sar
push
xchg
inc
daa
aaa
pop
popl
sahf
or
xchg
cmc
jmp
insl
adc
cmpsb
or
minps
jmp
stc
incl
cli
xchg
sbb
les
fildll
cmp
mov
jmp
mov
pop
rcrl
mov
jno
mov
lcall
rcl
cmp
ljmp
shrb
sub
push
lock
push
mov
jecxz
cmp
sbb
mov
pop
push
xor
movsb
in
in
inc
xchg
add
arpl
and
push
add
std
lcall
mov
int
cmp
mov
jg
sbb
jg
leave
cmpsb
xchg
jnp
ret
mov
sbb
add
jl
repnz
insb
mov
xorb
fwait
jge
push
jo
mov
gs
push
lods
aas
ljmp
xchg
pop
mov
push
movsl
sub
add
mov
mov
iret
sub
std
shrb
aad
jge
decl
out
je
xchg
into
mov
cwtl
les
icebp
sub
xor
dec
xor
decl
adcl
sahf
inc
mov
lock
fwait
cmp
shrb
jge
arpl
iret
int3
or
dec
pop
lret
ljmp
sub
mov
push
sub
lods
sbb
jecxz
cmp
fdivrl
mov
jg
adc
popa
pop
lods
add
pop
xchg
nop
jb
in
cmc
lock
shlb
fsubrl
dec
decl
cmp
xor
imulb
add
iret
xchg
mov
add
dec
add
mov
leave
rorb
rcrb
insl
sbb
mov
lcall
pushl
aam
jge
ror
stos
ljmp
push
orb
loope
in
dec
aam
sub
jmp
hlt
outsb
ja
jmp
push
decl
sub
in
and
loop
pop
in
ret
push
dec
push
dec
leave
and
ret
dec
ljmp
mov
adc
lds
pop
add
stos
mov
xchg
enter
gs
popa
hlt
icebp
lcall
insb
aam
loope
stc
cli
xchg
dec
mov
dec
xor
insl
ljmp
jg
lock
stc
or
outsl
cmpb
cmp
fs
pop
out
adc
pop
jmp
add
int3
sahf
sub
vminps
dec
cmp
pop
mov
lods
arpl
pop
cltd
pop
leave
movb
xor
int
add
push
push
xor
negl
mov
jg
inc
pop
mov
xlat
fs
jge
xchg
lods
mov
arpl
lods
sbb
mov
leave
decl
lds
mov
imul
dec
sbb
incl
add
push
inc
scas
dec
pop
push
mov
les
dec
fmul
pop
mov
or
ljmp
push
mull
cwtl
dec
pop
and
bound
lods
insb
movsl
push
add
add
repz
and
pusha
sbb
and
data16
push
cmp
loope
jg
add
mov
pushf
js
dec
and
jg
pusha
ljmp
xchg
pop
and
xor
pop
jmp
jnp
out
mov
rcrb
sbb
fidivrl
and
sbb
dec
gs
and
cwtl
add
out
xchg
lds
mov
mov
inc
jecxz
add
xchg
int
jo
xor
in
into
adc
mov
sar
add
insb
mov
inc
fisubrl
mov
daa
jns
aaa
bound
clc
pop
lock
xchg
inc
mov
cmp
cwtl
std
decl
add
cs
aam
das
movsb
adc
xlat
lcall
inc
mov
push
jnp
nop
jecxz
inc
loop
push
pop
unpcklps
xor
or
outsb
xor
push
sbb
icebp
pop
aaa
cmpsl
ret
mov
lgs
fmuls
mov
dec
aad
adc
call
xor
ret
rcl
or
out
lahf
lea
lods
inc
test
insl
jns
cmp
or
cld
test
pop
and
ljmp
xor
fcmovb
movswl
pop
aad
jmp
in
fsubl
leave
mov
xchg
pushf
lods
xor
cmp
push
and
imul
fs
mov
or
mov
xchg
sub
ds
call
mov
mov
outsb
popa
add
js
es
in
fdivr
lcall
sbb
push
push
insl
lds
je
data16
lcall
ljmp
stos
fnstcw
pop
outsl
push
fiaddl
fwait
dec
sahf
in
add
mov
cltd
int
jmp
sar
test
sub
gs
xor
incl
fimull
dec
xchg
insb
mov
xor
lds
mov
sbb
mov
hlt
lret
add
mov
js
and
adc
jp
mov
and
fnsave
imul
jmp
and
popa
movsl
fadds
test
and
in
nop
incl
and
in
or
into
bound
ret
and
sub
mov
andb
clc
repnz
hlt
cmp
sti
and
out
xor
lret
mov
test
aam
call
lcall
pop
lret
xchg
xor
jecxz
cmc
mov
out
loop
cwtl
pop
mov
pop
call
mov
clc
loop
aaa
int
mov
popa
enter
mov
pop
call
push
mulb
aad
es
lahf
std
popa
leave
pop
pop
push
repz
fldenv
push
lock
inc
lds
xchg
add
mov
pop
mov
movl
sub
loopne
test
sub
dec
je
je
pop
bound
jnp
pop
fidivl
js
add
out
xlat
mov
filds
test
cmpxchg
add
cmp
gs
adc
pusha
mov
lahf
sbb
test
mov
ljmp
sbb
lods
inc
adc
ljmp
xchg
lahf
pop
sbb
daa
in
mov
jg
jmp
push
push
inc
lahf
adc
pop
mulb
push
scas
pop
cli
jns
xor
test
xchg
stc
pop
sub
pop
pushl
push
sub
lods
jle
nop
mov
push
sbb
fwait
inc
out
pop
sbb
in
mov
lcall
and
int
jle
imul
in
and
ffreep
mov
fldl
ljmp
dec
or
insl
push
jge
adc
pop
and
xor
mov
mov
push
mov
das
sar
xchg
and
push
dec
popa
xchg
fistl
jge
stos
cmp
addr16
sub
fwait
mov
push
xchg
and
adc
jnp
daa
imul
incb
pop
leave
mov
mov
rorb
xor
sbb
jg
enter
pop
shll
jbe
ljmp
cmp
ret
addl
xchg
scas
and
or
daa
cmpsb
pop
sub
jmp
inc
addr16
ss
lret
jae
push
sub
pop
mov
outsb
std
jg
call
add
lahf
push
aas
arpl
xor
cld
call
mov
scas
test
dec
lds
xchg
jl
pop
icebp
pushf
jmp
cmpsl
in
call
in
rcl
add
jne
out
mov
xchg
pop
enter
test
icebp
inc
sahf
mov
cmpl
std
mov
and
daa
sbb
cmp
fcom
cli
or
call
or
stos
dec
pop
das
fdivs
fnstsw
idiv
dec
ret
scas
call
cmc
bnd
dec
lods
mov
repnz
test
jg
fsubrp
ljmp
daa
adc
or
xchg
push
adc
lods
mov
clc
mov
inc
sbbl
lret
pop
jns
push
mov
or
test
cmpl
mov
jmp
push
fildll
mov
popf
dec
loop
adcb
pop
dec
cmp
push
sub
ljmp
xchg
inc
lret
fmulp
popf
mov
enter
xor
mov
mov
call
jnp
iret
inc
push
pusha
pop
xchg
mov
push
aad
dec
pusha
fmul
ret
xor
add
lock
in
testl
pop
aad
call
dec
or
addr16
jl
int
mov
inc
push
roll
popf
sbb
sbb
and
decl
mov
xor
jge
adc
pop
pop
sahf
xor
jp
cli
mov
insb
mov
mov
cmp
out
mov
jmp
out
ljmp
pop
out
leave
out
dec
sub
scas
lock
pop
out
pop
call
add
jae
inc
mov
out
cmp
cmp
xchg
lcall
ret
jo
fstps
fbld
leave
sub
movsl
in
pop
dec
outsl
lcall
sub
imul
bnd
dec
inc
in
pop
jbe
stc
andb
or
mov
inc
into
push
or
add
repnz
in
inc
out
push
inc
decl
push
shlb
push
xchg
cld
sub
sbb
sbb
repnz
mov
in
pop
inc
sub
dec
imul
decl
icebp
movsl
dec
mov
jne
arpl
xor
ljmp
inc
jo
outsl
fstl
push
int3
inc
fsub
leave
inc
mov
lret
or
mov
dec
arpl
jmp
jmp
pop
pop
xor
data16
and
mov
pop
inc
aas
add
push
out
xor
mov
movsl
push
inc
sbb
pop
in
popf
mov
inc
int3
aaa
cmp
mov
lret
jmp
addr16
ja
dec
test
and
jle
or
mov
inc
stc
fcmovnbe
pop
or
call
pop
xor
push
bound
xchg
scas
fidivl
cmp
jmp
push
shr
push
pop
push
out
mov
fimuls
jmp
movsl
sbbb
mov
sub
xchg
pop
ds
addl
pushl
push
test
filds
jbe
xor
pushf
or
cltd
pop
mov
xchg
sbb
mov
jmp
xchg
inc
jle
mov
and
dec
test
test
push
and
jle
add
dec
incb
or
sub
jecxz
fwait
lret
andl
jg
sti
adc
jle
js
push
jae
lret
xlat
push
pusha
in
mov
pop
xchg
jmp
or
arpl
mulb
push
push
testb
mov
or
fucomip
add
jle,pt
sub
push
inc
in
clc
out
adc
push
sbb
push
repz
xor
cmpsl
jp
or
ljmp
jg
lcall
sub
dec
aad
mov
dec
jno
out
jno
cmp
je
incl
xor
push
shl
inc
fdivp
or
cmpsb
sub
aaa
jnp
inc
cltd
mov
adc
ljmp
cmc
test
lret
jl
popf
loop
pop
movsb
mov
or
incl
or
add
scas
xlat
push
orb
lea
mov
dec
inc
mov
ljmp
testl
sub
push
mov
mov
mov
inc
inc
sti
icebp
ja
shlb
into
aam
adc
jae
call
dec
jle
aas
das
or
call
or
sbb
cld
adc
pusha
pop
mov
mov
nop
xchg
sahf
mov
push
ret
push
nop
rolb
sbb
js
adc
push
loope
pop
imul
shlb
push
daa
sbb
add
jno
decl
add
jge
fwait
ds
or
ficomps
xchg
lcall
push
mov
add
or
cmc
cmp
push
adc
dec
stos
mov
jl
fists
lret
push
das
push
adcb
mov
and
push
jge
popf
jmp
and
dec
dec
cmp
fiaddl
sub
icebp
xor
mov
aas
popf
inc
pop
lods
ljmp
loop
scas
js
mov
neg
push
fldl
pop
push
mov
pop
add
push
cld
incl
cmpsl
adc
sbb
test
call
inc
or
add
lods
ret
mov
sbb
or
test
jg
sub
lods
xor
lret
inc
loop
mov
insl
mov
outsl
adc
js
adc
in
lret
jp
out
in
popa
push
decl
rcl
push
cs
inc
mov
lods
pop
and
outsb
push
mov
decl
or
lds
mov
jge
bound
adc
lods
int
xor
cmp
incl
inc
pop
sbb
ss
imul
xchg
fisubl
stc
mov
push
dec
orl
pushl
mov
call
pop
xor
inc
push
xlat
pop
jecxz
pushf
add
inc
jne
decl
adc
xor
and
pop
scas
dec
add
sub
in
mov
sti
ljmp
jne
add
xchg
scas
out
and
mov
and
shr
test
rcrb
lcall
mov
adc
rcll
addr16
push
clc
call
pop
sarb
dec
xchg
mov
fldcw
xchg
cmp
jb
xor
decl
cld
sbb
add
cmp
push
mov
icebp
sub
in
lods
out
out
fidivrl
in
popa
jae
jno
popa
out
xchg
nop
and
dec
jge
stos
lcall
cmp
mov
cltd
cmp
mov
cmc
fldcw
xchg
lods
pop
lock
lcall
and
sub
hlt
adc
mov
outsl
inc
mov
mov
pushl
cld
dec
sbbl
dec
add
gs
loope
rcll
and
dec
jmp
mov
nop
popa
pop
mov
xchg
dec
sbb
orb
cmpsb
call
push
outsl
inc
lcall
rcr
adc
mov
cld
test
movsb
jb
mov
imul
push
call
sbb
pop
inc
popf
popf
stos
xor
xchg
lret
cmp
xchg
scas
or
out
ss
clc
mov
pushl
cmp
sti
mulb
out
cmp
jl
sub
xor
sbb
jno
in
dec
pop
add
shlb
sub
inc
in
inc
insl
pop
and
outsb
das
int3
pop
movsl
repnz
ljmp
dec
mov
or
add
jg
std
sbb
dec
addr16
xchg
mov
cmp
decl
testb
nop
mov
loope
es
out
xor
cmp
xor
fcomip
lahf
movsb
cltd
aam
xchg
int
mov
or
int3
push
imul
add
dec
sub
cs
dec
out
shlb
stos
inc
xchg
cmp
int3
jg
lcall
in
inc
mov
aad
adc
mov
mov
cmp
incl
inc
loopne
scas
div
dec
test
sysenter
fidivrs
xor
ljmp
out
cli
div
outsl
push
xlat
dec
or
insb
sub
leave
cmc
and
cmp
rcl
inc
inc
sbb
ljmp
mov
jns
insl
cmp
outsb
pop
scas
sbb
mov
sahf
fcomp
cmpsl
je
lcall
ds
xchg
test
add
stos
cs
lret
cmp
sub
dec
xchg
lods
loopne
xor
bound
lret
inc
and
cltd
orl
decl
jb
hlt
bswap
xchg
xor
loope
pop
ss
dec
into
dec
cld
leave
js
je
push
cmp
jl
cltd
rdtsc
int3
add
inc
imul
ficoml
pop
in
xchg
call
cmp
or
sbb
fistps
mov
int
incl
add
test
test
xor
mov
and
bnd
aad
push
jmp
pop
mov
dec
push
pop
cmp
scas
lock
ljmp
jg
test
out
call
in
xchg
sbb
gs
pop
mov
and
add
and
sbb
lcall
mov
push
incl
and
mov
mov
imul
sbb
in
stos
inc
lahf
call
ret
lret
push
mov
in
mov
es
fcomip
movsb
icebp
lea
repz
mov
mov
add
sbb
or
incl
jg
clc
insb
repz
push
or
clc
call
inc
cmp
not
xchg
lret
movsl
mov
call
sbb
ret
xchg
cmp
add
popl
push
push
das
dec
repnz
pop
popa
ljmp
insl
mov
cmp
fmull
shlb
lds
xlat
dec
loope
out
nop
dec
cmp
jmp
negb
das
xchg
jns
mov
fs
lcall
out
test
aaa
and
and
out
pop
fnstenv
cmpsb
iret
gs
mov
adcb
stc
mov
xchg
loop
or
sbb
int
dec
add
enter
call
repnz
jmp
add
into
push
rorl
into
repnz
sar
jg
mov
and
repz
call
dec
daa
mov
outsl
push
jg
mov
hlt
testl
pusha
in
mov
je
dec
fwait
mov
xor
gs
jmp
xchg
push
pop
aas
jbe
mov
test
mov
xor
das
mov
std
call
add
sbb
rcrl
lods
ja
cmp
add
jg
cmp
sbb
loopne
jmp
xor
xchg
jge
sbb
inc
je
sbb
mov
in
xor
jbe
xchg
sti
incl
stos
pop
sbbb
fcoml
dec
dec
push
jp
jnp
addr16
shrb
mov
or
mov
mov
ficoms
iret
push
loope
xchg
lcall
jp
mov
and
aaa
mov
xor
add
mov
js
xchg
stc
dec
adc
and
addl
jp
or
mov
hlt
das
adcb
jns
jns
out
int3
cli
adc
mov
aam
xchg
pushf
aaa
enter
cwtl
fcoml
push
mov
cmp
and
out
stos
mov
mov
lahf
mov
loop
insl
inc
decl
clc
fnstcw
push
jbe
idiv
xchg
sbb
cld
scas
aas
daa
adc
aam
xchg
in
fwait
or
sbb
mov
jle
cmp
ljmp
push
mov
sbb
xchg
cmpsl
add
sbbb
ret
xlat
nop
mov
decl
pop
fidivl
pop
out
movhps
jle
jp
scas
clc
pop
cs
cmp
jg
jmp
in
sbb
shrl
mov
lret
mov
push
mov
fcomip
adc
in
pop
lods
mov
cld
ljmp
ficompl
sub
mov
pop
jecxz
inc
pushl
sub
pusha
mov
cmp
lret
mov
loope
pop
sbb
test
shll
fidivrl
push
push
sub
pop
in
movsb
std
cld
xor
mov
mov
jae
adc
jne
sub
pusha
xchg
pop
flds
jl
test
mov
mov
mov
mov
subb
mov
mov
and
lock
mov
sbb
jg
decl
mov
fdivl
and
inc
dec
movsl
push
outsb
or
jmp
mov
add
stos
vpsubusw
mov
nop
sub
call
mov
sbb
cmp
xor
sub
jmp
notl
sbb
out
filds
out
inc
adc
jb
inc
popa
stos
ja
aad
push
mov
ljmp
rol
js
inc
outsl
or
push
popa
mov
sbb
jp
imul
sub
pop
jmp
ss
dec
push
outsl
dec
ficoml
dec
adc
int3
add
decl
xchg
fdivs
push
ret
xlat
jle
sub
sahf
mov
jg
push
dec
mov
int
xchg
jmp
nop
sbbb
jecxz
test
xor
negl
dec
push
popf
das
mov
out
cli
fisubrl
cwtl
hlt
std
mov
icebp
jae
scas
arpl
cs
sub
dec
jp
push
loopne
dec
outsl
xchg
test
aad
cmp
and
scas
dec
jne
out
sub
lcall
jno
scas
push
mov
cmp
sbb
push
sti
in
clc
stc
mov
das
in
loopne
sub
fs
jl
andl
add
fdivr
lock
mov
fsubrl
orb
call
add
loopne
xor
jg
push
or
push
test
das
pop
xchg
out
shr
adc
ljmp
insb
jns
adc
xchg
pop
notb
pop
push
testb
fs
jg
pop
hlt
cmp
in
mov
mov
fildl
jl
mov
insb
js
ljmp
sete
sbb
inc
test
cmc
or
and
inc
enter
arpl
call
test
jp
imulb
pop
mov
fimuls
insl
shlb
jo
stos
das
fistl
sti
xchg
stos
aad
pop
lods
or
call
fmul
or
movsl
das
dec
popf
dec
fidivl
jmp
je
lds
fcoms
push
int3
mov
push
enter
loopne
std
mov
cltd
sti
lahf
out
stos
mov
in
int
lret
inc
popa
cld
xchg
icebp
jmp
jns
cmp
jg
pop
in
dec
call
ds
sbb
mov
cli
lret
cmpsb
jmp
mov
incl
xor
jae
or
iret
shll
iret
jnp
js
mov
fwait
or
push
into
incl
mov
cmc
jnp
int3
imul
std
pop
mov
add
inc
xor
fadds
ljmp
or
add
adc
dec
mov
mov
jb
ja
test
mov
mov
push
add
das
or
popf
inc
xchg
xchg
stos
cwtl
dec
mov
cmp
fistl
iret
pusha
add
or
ret
ret
pop
push
daa
and
cli
cld
mov
in
mov
jne
pop
mulb
adc
xorl
shll
call
add
mov
adc
iret
push
das
cmc
sbb
mov
subb
out
cmp
int
jmp
lods
mov
pop
push
mov
jns
inc
push
aaa
jbe
sub
orl
call
filds
scas
and
sub
mov
xchg
in
xchg
mov
xchg
inc
cmp
pusha
call
and
out
cmpl
out
mov
negl
sub
sahf
pop
cmpsl
arpl
decl
sbb
sbb
frstor
out
xor
orb
mov
fs
icebp
fwait
je
rolb
ss
mov
ss
mov
jb
cmp
movsl
mov
mov
dec
imul
or
sbb
and
into
push
mov
jo
pusha
movsl
mov
sub
dec
inc
mov
mov
std
dec
push
jno
aas
call
and
ja
sarb
mov
add
mul
or
or
incl
fdiv
cld
shl
sarl
lret
stc
mov
or
sbb
ja
ljmp
xor
mov
sbb
loop
sahf
dec
or
adc
dec
loope
stos
sub
jg
push
pop
stos
mov
mov
mov
or
sub
add
incl
pusha
push
dec
push
push
rcrl
xchg
inc
test
incl
movsb
sub
jb
cmpsl
inc
jmp
push
outsl
stos
dec
insb
adc
jmp
dec
inc
mov
pop
incl
dec
ret
xchg
lret
xlat
lret
out
loope
or
sbb
lcall
inc
movsl
adcb
gs
adc
mov
pushf
int
sbb
rorl
and
sbb
sahf
cmc
or
cwtl
cltd
jecxz
cmpl
scas
jne
bound
movsb
dec
cmpl
sub
ss
mov
pop
sarl
sbb
sub
lcall
push
enter
std
mov
inc
xor
add
outsl
push
stos
jnp
jle
rcrb
xor
repnz
jae
sbb
rorl
incl
ds
mov
movsl
cmp
xor
and
adc
das
sar
pop
ret
xlat
add
mov
xor
mov
mov
and
sbb
hlt
repnz
decl
js
pop
rcrb
dec
out
int3
divl
jb
pop
test
jmp
mov
pushl
std
ds
repnz
cmp
push
jg
les
cmpsl
inc
shll
pop
lret
xchg
sbb
loopne
xchg
stos
je
dec
icebp
stos
or
sub
cs
push
icebp
add
sub
mov
xor
xor
movsb
hlt
js
out
xor
jo
jae
std
and
addr16
loopne
sub
jl
pop
fs
imul
pop
addr16
cmp
pop
clc
es
clc
lock
mov
test
push
mov
mov
pmaxsw
shrl
loop
cmp
sbb
and
cmp
in
mov
or
xor
and
push
mov
cmp
and
pop
and
mov
arpl
rorb
cmp
add
iret
in
mov
in
scas
jns
lock
lahf
das
outsl
jnp
push
popf
mov
sbb
mull
push
fstps
xlat
pop
add
outsb
lret
pushl
lods
arpl
mov
mov
cmp
adc
outsb
pop
jecxz
inc
cmp
into
sub
xor
ljmp
pusha
stos
aas
dec
js
xor
adc
call
std
push
and
sbb
mov
call
subb
lea
int3
mov
xchg
xchg
movsb
xchg
jle
into
adc
pop
daa
sub
inc
jmp
lock
adc
xchg
xchg
add
xchg
fistps
xchg
loopne
cmp
pop
adc
cli
and
lcall
stos
lods
mov
sub
jecxz
xchg
lcall
pop
cmp
lods
jbe
jbe
in
loop
mov
xchg
jb
arpl
dec
inc
cs
stc
sbb
fisttpl
bound
xor
sub
psrld
aaa
dec
data16
jmp
adc
inc
adc
outsl
push
in
lret
faddl
imul
push
inc
push
fwait
xchg
leave
dec
xchg
add
out
add
cwtl
dec
pushl
sub
dec
mov
cmpb
xchg
sbb
cmp
mov
inc
adc
cmp
shll
and
push
sbb
jnp
pop
lret
xor
xchg
xchg
dec
mov
stos
cmp
icebp
pop
add
mov
adc
or
outsl
scas
dec
sub
jmp
jb
ljmp
xchg
jae
fadd
jmp
shll
aaa
stos
cmp
mov
and
mov
jmp
dec
lahf
jecxz
fistpll
mov
in
inc
movsl
int
cmpsl
ret
mov
jmp
mov
or
lahf
push
movb
loope
xchg
mov
out
mov
incl
jns
pop
cld
js
jge
fmulp
cmp
bound
cld
stc
bound
fcoml
mov
inc
lea
mov
leave
pushw
ret
adc
adc
inc
lods
sahf
inc
dec
arpl
out
bound
sbb
sbb
mov
sbb
mov
pop
js
popf
mov
fiadds
cmp
decl
dec
push
jp
cmc
jnp
aaa
js
sbb
faddl
mov
inc
out
jnp
push
adc
mov
sbb
in
scas
ja
adc
mov
xlat
dec
mov
incl
movsl
filds
std
loop
jle
std
pusha
mov
or
pushl
std
ljmp
lcall
loope
repnz
add
rolb
sbb
sbb
mov
pop
jmp
cmp
push
and
jne
mov
loope
cmp
mov
arpl
sarb
dec
sti
out
sbb
ss
ljmp
add
outsb
or
sbb
xor
or
rcrb
popa
lcall
sbb
pop
or
mov
sbb
xor
imul
add
cmpsb
mov
sbb
cmp
adc
ljmp
icebp
add
cwtl
mov
daa
push
adcb
sahf
mov
or
pop
clc
sub
and
push
imul
mov
dec
decb
xchg
jg
fiaddl
scas
mov
inc
adc
jmp
stos
cltd
cld
aas
sbb
cmc
aad
cs
fadds
in
orl
add
add
pop
mov
lods
dec
popf
nop
out
cmc
add
incl
cmpsl
sub
dec
mov
test
cmp
cli
xchg
dec
ljmp
incl
sbb
push
aad
mov
stos
ss
icebp
and
call
push
jecxz
pop
aaa
int3
fwait
mov
lret
jae
fidivl
adc
pushf
scas
sub
jbe
adc
and
cmpsb
lcall
int3
das
mov
daa
in
add
std
call
out
push
cmp
cmpsl
lock
jmp
shl
dec
mov
jmp
arpl
aam
lret
mov
pop
xchg
xchg
jno
jbe
cmp
push
dec
imul
incl
xor
das
cmp
sub
dec
stos
sbb
mov
call
jge
add
jle
jns
test
dec
std
inc
mov
mov
jle
mov
std
ret
call
rcll
leave
mov
and
dec
cmp
repz
xor
outsb
ret
jg
xor
mov
mov
repnz
jo
inc
xor
cwtl
jge
push
jge
jo
incl
lock
inc
cmpsb
mov
mov
jecxz
nop
dec
hlt
xor
decl
cmp
fnstsw
inc
mov
cli
pop
xchg
ljmp
jecxz
in
push
pop
xchg
mov
pushl
jge
or
adc
adc
inc
mov
sahf
jmp
pop
and
and
sbb
pop
xorl
mov
cmpsb
es
cs
ljmp
call
clc
loopne
mov
or
out
xor
stos
outsl
sub
or
stos
cmpsb
loopne
movsl
add
jbe
sub
rcrl
push
cld
out
jb
lcall
pop
or
push
in
cmpsl
mov
notl
sbb
es
ret
jmp
popa
clc
xor
out
lret
add
sub
jnp
inc
fxch
out
inc
pop
or
pop
cli
pop
test
cli
jno
fmull
push
cs
xor
shlb
mov
stos
adc
in
rcr
inc
xor
ljmp
nop
add
stos
mov
rcrl
pushf
outsb
mov
jge
and
mov
cmp
mov
jae
add
dec
or
xor
mov
rorl
lcall
adc
popa
ljmp
lds
outsl
adc
ret
or
jmp
ljmp
dec
mov
movsb
push
jb
xor
pusha
shrl
push
cmp
mov
cld
arpl
enter
sub
lds
cmp
pusha
dec
cpuid
insb
incl
or
xor
jnp
dec
or
stc
pop
das
sub
jecxz
punpckhdq
mov
call
andb
xchg
jne
and
jns
loope
jp
mov
adc
jne
pushl
outsb
and
out
dec
pop
xchg
movsb
test
clc
ror
sbb
pushf
mov
mov
push
pop
push
movsl
sahf
notb
pop
bound
out
sub
pushl
loop
mov
jmp
mov
and
push
push
xchg
xchg
aam
dec
imul
and
sbb
mov
mov
pop
imul
jg
mov
loopne
lock
sub
mov
call
movsl
aas
ljmp
xchg
mov
pop
sub
or
fwait
popa
sbb
call
pop
repnz
jae
push
pop
sbb
loop
scas
sbb
stos
mov
cs
clc
ret
lcall
jge
in
bound
lods
cmpsl
gs
sub
push
jno
scas
xchg
ja
ss
cmp
popa
stos
scas
in
jo
iret
call
mov
in
in
int
mov
lahf
iret
adc
adc
fdivr
ljmp
adc
mov
cmp
pop
cmpsb
xchg
sub
enter
imul
add
out
call
mov
mov
push
push
bound
lds
stos
in
mov
pop
adc
test
pop
shl
dec
aam
in
in
and
pop
add
pop
out
orb
mov
mov
subl
stos
scas
xor
pop
mov
jmp
insl
add
cmp
inc
jmp
incb
cmpl
fdivp
notl
or
cld
xchg
cmp
jg
imul
pop
inc
xor
out
clc
test
mov
insb
mov
add
jo
lcall
or
out
jecxz
mov
or
adc
sti
dec
dec
cs
jle
adc
loopne
ljmp
stos
mov
and
test
fidivrl
cmpsb
mov
pushl
negl
mov
aas
insl
adc
sub
push
cmp
call
aaa
and
lods
aam
jmp
lea
enter
shll
hlt
ljmp
fisubs
sub
loop
ljmp
pop
mov
pushf
sbb
jecxz
sub
dec
lret
ret
fcmovb
cld
jns
cmp
ljmp
cmc
clc
jno
imul
in
aam
or
andb
mov
mov
lcall
repnz
jo
cltd
and
imul
nop
aad
mov
in
sub
call
out
test
fwait
mov
dec
adc
mov
pop
lock
and
dec
pusha
fisttps
sbb
cmpl
mov
mov
arpl
aaa
ret
insb
lret
sbbb
mov
xor
pushf
lods
jnp
pushl
in
cmp
xchg
js
sbb
sub
pushf
dec
sbb
ret
data16
std
ljmp
lock
repnz
out
cmp
gs
mov
push
dec
add
jns
xchg
imul
movsl
adc
pushl
jmp
ja
mov
add
inc
pop
into
loopne
pop
aaa
jmp
push
incl
pop
jle
sub
ljmp
ror
mov
adc
mov
xlat
ret
scas
xchg
movsb
mov
lea
jg
add
pop
rolb
lds
loopne
pop
std
cmp
das
lcall
test
fidivs
pop
fs
pop
decl
pushl
clc
lds
filds
sub
imulb
imul
call
je
add
xor
inc
rol
dec
movups
adc
pminub
xchg
dec
adc
fnsave
add
push
enter
pop
jne
dec
stc
or
cld
test
jae
into
out
stc
add
pop
push
in
test
popf
mov
mov
adc
clc
jmp
fdivl
inc
mov
fstp
cmpsb
pcmpeqd
inc
jns
dec
xchg
pop
lock
fwait
or
sbb
and
call
adc
dec
rol
cmp
mov
xlat
std
mov
push
imul
jne
call
cld
xchg
jne
mov
xchg
jbe
shrl
adc
jno
dec
jg
mov
cmp
jle
pushf
jnp
icebp
in
mov
jmp
sbb
add
daa
lcall
popa
enter
and
pop
ljmp
nop
push
and
push
rcl
out
bound
lcall
ljmp
sbb
xorps
mov
and
inc
sub
mov
jg
xchg
test
cld
pop
ja
inc
jnp
mov
out
fs
mov
add
aad
jge
pop
les
das
mov
movsb
cmpsl
sahf
jnp
hlt
lock
enter
lock
fcomip
cmp
mov
mov
lcall
test
push
stos
lods
addr16
sar
call
sub
push
lock
shrl
loopne
js
sub
loope
fcmovbe
call
mov
jl
xorl
mov
sbb
in
je
dec
pop
adc
or
in
jne
push
imul
stc
outsb
nop
out
mov
inc
aaa
adc
lcall
lds
sbb
mov
in
aad
fstps
pop
loopne
xchg
into
call
inc
or
adc
jle
mov
inc
and
arpl
inc
sub
nop
mov
movsl
out
push
orl
adc
sub
mov
jb
int
test
jmp
cmp
enter
jno
ss
pop
pop
repnz
push
mov
push
mov
clc
ljmp
or
scas
pop
mov
fdivrs
jg
pop
xchg
xchg
out
int3
sub
ja
loopew
fwait
push
xchg
sti
sbb
ljmp
mov
push
aas
iret
push
popf
loope
sub
dec
roll
lret
push
dec
decl
mov
jle
pop
hlt
fmul
fwait
dec
sbb
cli
imul
mov
icebp
decl
pop
jp
pusha
je
push
dec
int3
pop
sub
push
or
sub
roll
ljmp
adc
push
inc
add
shll
sub
dec
ljmp
sar
push
sub
into
lods
lods
xlat
inc
sahf
aas
ret
mov
out
mov
cmp
scas
lds
cli
mov
idivl
bound
dec
call
pop
std
jmp
sub
aaa
out
sbb
fists
popf
mov
popa
add
std
lcall
incl
sub
jle
pop
sub
clc
xchg
rcr
cmp
sub
jge
or
mov
sub
push
push
mov
mov
cmp
or
sbb
lcall
lret
outsl
stos
jl
xor
dec
push
lock
dec
sub
and
pop
jg
or
ret
imul
lods
sahf
push
or
fidivrs
bound
sub
decl
mov
sbb
lds
jnp
xchg
cli
sbb
arpl
dec
pop
xchg
and
mov
cmpb
mov
xorb
cwtl
loopne
lret
jnp
or
test
push
into
ficoms
pop
nop
fidivrs
mov
out
lock
repz
ret
adc
cmp
testb
into
gs
mov
pushf
in
out
movsl
push
inc
xchg
out
inc
int
call
mov
repnz
cmp
adc
sub
daa
insl
push
lods
mov
arpl
idiv
call
sub
inc
adc
mov
mov
in
or
xor
sarb
idivb
adc
jmp
cmpsl
jecxz
push
xor
mov
or
call
call
xor
ja
mov
fwait
and
sbb
fnstsw
mov
je
mov
fidivs
fldenv
jp
sbb
sub
add
add
iret
loope
mov
loope
cmpsl
jle
clc
pushl
insb
arpl
ret
enter
push
xchg
loop
insl
cli
stos
adc
xor
mov
pop
ljmp
xchg
sbb
mov
loop
gs
push
add
addl
lcall
dec
cmpb
test
jle
out
jmp
arpl
lock
dec
test
cmp
jmp
xchg
jnp
out
lods
shrb
cmp
pop
pop
adc
jmp
mov
mov
in
pop
icebp
lcall
sub
fmuls
inc
add
gs
inc
insl
out
lret
ljmp
dec
pop
mov
jne
pop
shlb
out
dec
enter
lcall
shl
pop
inc
adc
jb
push
xorl
adc
lock
lcall
pushf
insl
scas
adc
movsb
movsl
pushf
stos
gs
imul
xor
mov
push
mov
stos
jp
mov
loop
jg
cwtl
sbb
sbbb
frstor
jmp
rolb
mov
mov
mov
push
mov
rcr
add
out
sar
mov
in
stc
loopne
push
inc
push
add
icebp
dec
sbb
ljmp
pop
fstp
decl
lods
rcrb
ds
fsub
jl
pop
rcll
and
outsl
jp
push
pop
sbb
and
inc
mov
fs
sbb
add
inc
adc
out
inc
test
fistpll
cmp
sub
decl
or
xor
push
jg
mov
fsts
cwtl
add
add
gs
imul
fcoml
lea
push
pushl
mov
sbb
pop
in
mov
push
in
fcmovb
sub
sub
call
cmp
pusha
pushl
jmp
lods
push
and
jmp
dec
mov
in
cmp
sub
lret
mov
scas
sub
xor
adc
pop
es
jmp
sbb
jle
inc
and
loop
adc
add
pop
jns
cmp
lcall
decl
std
jo
dec
xchg
inc
ja
rorb
xchg
sub
lods
add
mov
orl
adc
fsubr
mov
mov
mov
cmp
negb
sbb
aas
in
xchg
fists
mov
lods
dec
shll
sbb
sub
xchg
pop
adc
shl
out
sbb
call
inc
mov
xchg
lock
lret
shlb
repnz
fistpl
iret
aas
xchg
out
in
add
push
jns
mov
mov
and
hlt
fisttpll
dec
dec
xchg
pop
lea
and
fwait
es
in
sbb
sub
xor
add
jae
adc
pop
mov
hlt
decl
ret
shrl
movsl
lods
aas
fbstp
in
mov
mov
sbb
adc
movsl
sar
movsl
outsl
mov
imul
add
mov
jp
repz
push
xchg
test
decl
inc
pop
push
daa
fsubrl
xchg
outsl
mov
and
sub
jecxz
cmp
mov
jnp
push
mov
adc
pushf
adc
sbb
lods
jne
mov
push
lcall
fsubr
pusha
fldt
inc
push
lods
inc
and
clc
popa
jb
xor
push
xorl
inc
push
pop
mov
xchg
outsl
xrelease
and
or
xchg
jle
inc
mov
mov
ficoml
bound
mov
inc
push
mov
dec
stos
incl
in
enter
cmp
push
or
scas
jne
push
jns
xor
jge
mov
fisttps
mov
mov
adc
adc
xchg
std
add
leave
stc
xchg
stos
in
pusha
jge
decl
loopne
mov
add
cli
pusha
and
push
mov
aaa
pop
mov
mov
movsb
js
or
shr
lods
subb
xor
push
adc
cmp
push
cmp
loopne
std
mov
jmp
mov
into
push
or
adc
pushl
mov
mov
sub
dec
push
sub
lds
inc
arpl
xor
leave
sub
call
loopne
xor
cmpsb
mov
push
dec
std
lcall
lcall
mov
dec
push
scas
or
out
cmpb
out
lcall
lahf
mov
fiadds
cmpsl
jns
pushl
add
xchg
call
into
and
xchg
mov
jmp
xchg
lret
xchg
sub
cmp
mov
rol
aaa
xchg
pop
mov
mov
sbb
mov
iret
dec
fnsave
cmc
ret
insb
xchg
pusha
mov
pushf
mov
mov
ljmp
or
mov
insl
sub
sbbb
clc
dec
popf
test
jp
push
subb
adc
scas
or
in
sbb
lcall
cli
mov
mov
addr16
push
fsubs
out
mov
ljmp
imul
outsb
sub
ret
pushf
mov
pop
pop
cwtl
jg
cltd
test
pop
into
aaa
xchg
push
outsl
jno
sub
out
inc
sbbl
lahf
arpl
cmpsl
xchg
jmp
pop
cmpsl
dec
sbb
imul
test
lods
mov
add
lret
enter
sar
loope
cltd
popf
push
pop
jle
outsl
nop
loop
test
in
mov
rolb
sbb
dec
hlt
rorl
out
shll
sbb
xor
pop
fbld
movl
incl
addr16
xchg
jo
out
adc
inc
repnz
pop
xchg
imul
enter
jns
fwait
mov
out
cli
jle
adc
or
sub
fadds
xchg
mov
sti
inc
pushf
jns
cmp
push
dec
adc
adc
pop
aaa
cmp
mov
popa
jo
dec
lods
jbe
inc
and
mov
lcall
sbb
sub
imul
jg
ds
mov
hlt
lock
das
mov
ja
pop
fsubp
ret
dec
repz
mov
mov
jns
pop
xchg
xor
cltd
xchg
pusha
nop
sbb
sbb
mov
lret
mov
mov
sahf
outsb
adc
out
dec
insb
lock
lret
cmp
repnz
out
cmp
int3
dec
rolb
jle
addr16
dec
decl
cmpsl
into
and
das
pusha
lods
xchg
mov
or
jge
test
inc
adc
scas
decl
and
push
mov
sbb
call
stos
pop
fnclex
pushf
mov
call
cld
or
pop
int
aas
ss
sti
cwtl
in
or
push
in
cs
daa
je
pop
ret
pop
lock
enter
ret
pop
and
xchg
or
out
xchg
or
xorb
and
sub
aad
dec
mov
pushf
into
inc
jmp
into
popa
std
sub
mov
inc
arpl
movsb
sub
add
jno
hlt
cld
pop
loope
sbb
dec
subb
push
stc
pushf
cmp
scas
cmp
sub
into
fdivp
xchg
lret
dec
dec
bound
jg
scas
jle
push
inc
xlat
cmpsl
and
ss
pop
pop
aaa
mov
add
add
mov
lock
lcall
ret
inc
das
jb
fidivl
fists
sbb
scas
pop
sbb
inc
cs
sbb
lcall
mov
das
or
in
lock
into
mov
movsl
leave
outsl
lret
mov
scas
dec
xchg
jae
xlat
sar
jmp
add
sub
dec
adc
stc
into
test
movb
mov
pop
jp
les
or
stc
inc
or
mov
lods
cli
ss
mov
xor
add
sbb
shll
out
bound
shl
out
dec
sarb
sub
jb
push
xchg
test
aad
pop
inc
xor
jmp
fisubs
xchg
rcl
sbb
sarl
xchg
cli
incl
lea
xor
push
xorl
shrl
mov
decl
and
leave
xchg
out
pop
sbbb
mov
push
mov
icebp
arpl
fucomi
sahf
call
jmp
jns
adc
add
push
inc
sub
mov
cld
mov
sbb
aad
call
movb
scas
incb
jmp
sti
push
jmp
dec
orb
movsl
mov
dec
pop
jb
mov
push
push
pop
pusha
out
ss
in
decl
cmp
ds
jl
rorb
jb
test
jo
call
filds
inc
fucomp
and
imull
pop
test
jg
std
ljmp
and
cltd
mov
pusha
mov
test
fbld
orb
insl
scas
daa
imul
and
push
fcmovbe
notl
cld
les
inc
add
dec
push
jl
dec
xor
adc
sub
ss
xor
ss
and
lcall
out
loop,pn
outsl
loopne
div
sbb
xchg
push
out
or
adcb
pushl
inc
lods
sub
mov
in
imul
fmull
jb
ljmp
xor
mov
mov
ja
adc
mov
inc
fsubr
sub
scas
stos
aad
mov
fnstenv
int
rcrl
loop
rorb
into
loop
js
hlt
insl
sbb
push
dec
aad
sti
ljmp
clc
jmp
arpl
sarl
jge
outsl
insb
fstp
jns
mov
jg
in
subl
and
out
test
and
rcrb
jns
mov
push
cmpsl
adc
imul
jl
mov
cld
lahf
movsb
cmp
adc
xor
push
add
jno
scas
pop
sbb
dec
into
and
in
rcrb
rclb
out
push
dec
pop
and
sub
and
cmpb
pushl
out
adc
ret
pop
adc
sbb
jnp
aas
ret
push
cmc
addr16
dec
das
dec
and
mov
mov
and
push
dec
mov
dec
icebp
call
mov
jb
pop
xchg
push
push
or
mov
jo
push
jae
cmp
pop
xor
sub
cmpsl
xchg
sub
xchg
cmp
mov
outsl
xor
nop
imul
int3
pop
or
sbb
cmp
lret
mov
add
daa
shlb
xor
sbb
int3
ljmp
jbe
stos
dec
jnp
ja
cltd
fmuls
mov
adc
sbb
gs
ljmp
adc
sahf
aas
push
jmp
push
xor
xchg
nop
adc
mov
ret
jb
stos
or
je
xlat
or
decl
xchg
ss
std
js
sbb
pop
inc
adc
gs
cmp
jg
and
loop
xor
xor
out
movsb
test
shll
ds
jmp
xlat
xchg
jmp
mov
sbb
or
cmp
aad
ljmp
cmpsl
mov
jg
testb
push
xor
add
xchg
out
fiadds
rolb
lcall
xor
jle
test
shlb
xchg
jmp
outsl
pop
sub
lcall
dec
push
and
fildll
xchg
cmp
add
adc
mov
or
insl
jbe
xchg
and
xchg
mov
jno
mov
rorb
mov
ljmp
shr
lcall
and
mov
cwtl
popa
mov
xor
pop
clc
les
mov
cs
fidivrl
mov
ret
outsl
dec
pusha
sbb
and
sub
aaa
es
sbb
stos
popa
movsb
xchg
jl
arpl
or
add
addb
stos
pushl
push
ja
mov
enter
cwtl
lock
jg
pushf
inc
xor
addr16
aad
xchg
dec
xchg
fdiv
lock
mov
out
scas
pop
mov
add
sbb
inc
shrb
mov
flds
pusha
ret
fidivs
call
pop
lods
lods
sbb
sarl
cs
push
movsb
xor
cmp
and
dec
icebp
shll
fcom
jge
mov
pop
lock
call
dec
cmpb
jo
aas
cmpsb
repnz
xor
out
test
cs
imul
mov
call
flds
shll
xor
int3
lea
push
xlat
lcall
sub
jnp
out
ret
pop
call
xchg
dec
lods
movsb
rcll
cwtl
and
sub
push
fistl
mov
pop
cmp
out
xchg
mov
sub
mov
aas
imul
pop
mov
test
rcr
xchg
pop
test
dec
push
cwtl
mov
aas
jle
dec
sbb
movsl
cli
jl
mulb
sti
xor
jno
iret
add
jbe
std
lcall
mov
in
dec
bound
sub
xchg
mov
aad
lret
mov
push
adc
movsl
jmp
pushf
pop
int3
inc
jg
and
xor
movsl
and
call
cmpsl
xchg
xchg
into
mov
xor
pop
sbb
jl
jmp
stos
jcxz
jnp
mov
sub
sbb
xchg
leave
mov
sbb
into
xchg
hlt
jmp
insl
andb
cmp
lret
lods
add
mov
stos
cld
jle
sbb
out
xchg
adc
dec
enter
ror
fs
mov
pop
mov
mov
aaa
std
inc
fwait
jg
repnz
xchg
mov
mov
push
sbb
inc
fdiv
into
data16
xchg
mov
mov
mov
hlt
loope
pop
xlat
das
lods
bswap
mov
sti
or
lcall
loop
sub
pop
inc
push
cmpb
sub
es
mov
jg
leave
pop
xchg
add
stos
pop
repnz
icebp
int
push
ja
xchg
jle
xchg
push
ljmp
repnz
sbb
outsb
in
leave
dec
cmp
test
dec
int3
js
mov
decl
rolb
push
xchg
or
repz
stos
je
xchg
pusha
adc
xchg
rol
cmp
or
call
adc
clc
sbb
enter
or
add
out
je
sahf
sbb
jecxz
mov
popa
imul
push
mov
scas
out
xlat
test
pop
popa
push
out
mov
ljmp
jb
push
and
push
outsb
push
xchg
pop
xlat
mov
out
dec
inc
cmp
jmp
aam
xchg
xor
les
stc
movsl
dec
lret
and
push
push
les
mov
in
lret
add
incl
add
jnp
aad
or
and
dec
mov
test
jle
push
push
inc
out
push
inc
or
dec
add
out
jbe
inc
ljmp
add
xlat
out
dec
push
mov
adc
into
in
add
and
jne
jnp
filds
jo
imul
or
scas
ds
add
pop
dec
xchg
push
inc
inc
inc
sbb
nop
sbb
nop
rcrb
inc
sbbb
loope
jb
mov
insb
push
addb
xchg
aas
add
mov
add
lds
insl
mov
insb
push
inc
cli
xor
inc
imul
roll
sbb
add
divl
push
clc
mov
jg
push
outsl
outsl
insb
push
outsb
popa
jo
push
add
daa
mov
mov
fistpl
push
sub
sub
push
or
dec
dec
jne
or
inc
or
adc
adc
popa
adc
inc
mov
cmp
jns
scas
and
aas
push
incb
popa
jb
inc
enter
jecxz
xor
es
ljmp
xchg
add
outsl
insl
insl
bound
mov
into
cmpsl
and
dec
xchg
jo
or
add
lds
inc
jl
loopne
sub
cmovns
movsb
cltd
loopne
pop
add
sub
fs
inc
inc
sub
mov
adc
flds
ja
mov
sub
inc
or
mov
or
out
mov
pop
sub
sub
sbb
fisubs
cmpsb
xor
cmp
sbb
ds
insb
jne
addl
xchg
jne
xchg
dec
push
xor
ret
outsl
dec
imul
cmp
mov
jo
inc
push
fistl
fs
pusha
inc
iret
inc
push
pop
cs
mov
pop
sub
sarl
jne
addr16
xchg
jo
subl
xchg
sub
jb
subl
cmp
mov
inc
jae
adc
adc
mov
and
ret
inc
jecxz
lock
test
std
dec
cmp
cmp
jae
pop
int
int3
adc
popa
pop
jno
mov
inc
flds
movsl
rclb
push
jo
packuswb
imul
pop
mov
inc
dec
sbb
stos
pop
insl
adc
push
add
leave
ljmp
arpl
fildl
mov
imul
mov
dec
ja
inc
or
add
adc
pusha
popl
mul
inc
or
outsl
popw
push
xchg
sub
shlb
sbb
inc
insb
cmp
jmp
popa
and
das
push
mov
dec
jae
pushf
inc
or
add
stos
pop
dec
inc
dec
or
push
into
ret
mov
mov
or
dec
jb
gs
test
push
jecxz
repz
xchg
lods
aaa
mov
je
ja
mov
inc
inc
jg
hlt
inc
or
pop
push
cmp
push
je
mov
cmp
or
arpl
es
bound
fildl
jg
sbb
test
xchg
fcoms
vpunpcklwd
rcl
or
jle
mov
pop
test
mov
xor
fmul
dec
push
or
fnsave
nop
cmp
sbb
mov
mov
inc
lock
xchg
inc
je
add
jp
push
inc
inc
out
sti
shrl
test
push
inc
sbb
lods
sub
mov
sub
shlb
dec
jnp
sbb
out
shl
or
clc
fidivrl
mov
add
insb
push
adc
jns
inc
xor
outsl
icebp
stos
or
addl
and
in
add
push
xchg
or
jnp,pn
and
inc
mov
push
cmp
xlat
adc
or
or
stc
pushf
push
jne
jo
push
inc
inc
fmuls
push
add
fists
or
stos
gs
jae
xor
mov
jo
sub
popa
add
test
cmp
jnp
push
inc
sbb
test
mov
aaa
sub
mov
cmp
dec
addb
push
outsl
shrb
add
add
cmp
cmp
add
test
cwtl
shll
xlat
xor
dec
gs
jne
cltd
ror
stos
xchg
or
mov
sub
mov
dec
sub
fs
pop
push
das
push
loop
inc
and
or
inc
mov
pop
pushf
push
jmp
pop
pop
pusha
mov
popa
push
add
mov
fcomps
or
jge
push
popa
sbb
xchg
outsb
adc
dec
shr
adc
popa
mov
jno
cmp
dec
ret
pusha
and
xchg
in
sub
dec
cli
pop
inc
cmc
pop
ja
je
and
push
adc
xor
jb
and
ret
jl
inc
in
xor
jo
inc
inc
and
arpl
insl
mov
inc
imul
dec
push
xor
fcomi
test
pop
mov
inc
insb
notl
jle
xor
mov
call
stos
mov
stc
xor
shld
jno
aad
xor
fcoms
aas
ljmp
js
inc
dec
loopne
inc
jle
and
shlb
mov
testl
pop
and
xchg
movsl
push
movsb
sti
push
or
push
push
xor
push
mov
xchg
cmp
xor
shlb
jne
inc
lock
lock
jo
inc
push
push
adc
push
pop
ja
pop
mov
jns
je
sub
outsb
dec
adc
jnp
ss
rorb
cld
insl
lcall
dec
add
mov
mov
imul
add
pop
shll
adc
mov
fisubrl
inc
push
addb
pop
pushf
dec
inc
rcll
in
inc
sarl
setl
inc
jb
push
js
shlb
out
inc
xchg
shrb
bound
mov
test
dec
roll
mulb
cmc
das
and
inc
jb
push
jb
inc
jae
pop
pop
inc
sahf
inc
leave
inc
rol
add
imul
iret
push
repz
jo
fs
push
sbb
add
rclb
push
icebp
mov
mov
adc
imul
push
nop
jo
mov
or
sub
mov
test
add
or
and
mov
in
mov
push
adc
mov
sbb
aad
adc
sahf
enter
outsl
test
push
or
or
sub
fisttps
inc
pop
pop
xchg
cs
mov
sub
rcr
push
jmp
sbb
and
jb
sub
je
fdiv
hlt
xchg
push
ss
add
push
pop
inc
mov
xchg
add
rcl
push
sbb
ret
lret
mov
add
and
dec
mov
xor
mov
or
shrl
push
mov
fs
dec
sub
cwtl
xor
adc
jne
push
cs
subb
fcompl
add
adc
sub
push
mov
enter
mov
push
xchg
push
sub
lods
add
mov
pop
and
sbb
push
test
mov
and
arpl
lret
inc
lds
test
inc
and
aam
adc
dec
or
inc
sbb
testl
push
sbb
lea
test
adc
out
mov
mov
add
jno
ljmp
pop
orl
sbb
cmp
adc
bound
jnp
push
lods
cmpsl
fs
int3
lret
xor
inc
add
cmpsl
js
mov
jp
stos
cmp
mov
outsb
sub
outsl
and
aam
sbb
push
lods
or
ret
push
cmpsl
call
add
sbb
add
andl
push
xchg
cld
add
in
or
cmovno
lcall
popa
or
jnp
push
imul
jbe
dec
dec
enter
ljmp
inc
sub
pop
pop
xchg
dec
push
movsl
cmp
sbb
xor
out
int3
ror
jno
add
data16
xchg
add
jmp
mov
negl
inc
mov
adc
icebp
pusha
push
mov
inc
mov
add
stc
dec
mov
jae
or
aas
mov
add
adc
fimull
adc
pop
lret
fdivl
add
filds
adcb
movsl
fldl
or
stc
addr16
pusha
push
add
pusha
push
mov
dec
pop
add
adc
cs
mov
mul
and
add
and
jb
es
xchg
sbb
negl
push
rclb
mov
cs
adc
insl
repz
dec
sarb
mov
push
xlat
pusha
dec
xchg
sbb
test
mov
cmp
jg
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
