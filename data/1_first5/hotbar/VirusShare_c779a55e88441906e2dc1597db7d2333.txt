divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
sbb
push
adc
es
aaa
add
mov
adc
dec
pop
nop
inc
movsb
xor
repnz
std
clc
or
pop
mov
int
inc
inc
repz
and
sbbb
add
lock
add
mov
jb
push
cli
pop
add
inc
dec
push
and
sti
fistpll
or
cmpsb
dec
shrd
popa
incl
lea
pop
decb
or
bswap
mov
out
psubusw
test
repnz
in
push
pusha
ljmp
lret
pop
dec
cli
push
cld
push
imul
add
in
test
rcl
mov
daa
ss
aas
loopne
add
or
or
push
daa
out
xchg
ja
cmp
adc
adc
add
mov
add
fdivrp
imul
adc
lods
jbe
pop
xor
adc
xchg
xor
jbe
pop
subb
or
loop
inc
mov
push
add
cmpsb
nop
insl
loopne
add
jns,pn
cld
cltd
popf
add
les
lods
add
add
inc
imul
aaa
nop
lret
cs
mov
sbb
add
aam
loopne
sahf
jae
arpl
xlat
out
cmpsl
test
add
jnp
test
push
dec
sbbb
inc
inc
rclb
pop
cmp
rcll
adc
jmp
xchg
jno
rolb
mov
or
rorb
add
rolb
mov
pop
or
dec
jne
sahf
mov
pop
or
mov
lret
sub
fsubl
imul
jbe
pusha
pop
ja
in
push
push
negl
xor
enter
xor
repz
gs
push
incb
add
or
sub
ja
cmp
or
call
pushf
xor
in
xchg
dec
cmp
into
int3
loope
pop
or
je
jnp
push
movsl
rcrl
outsb
hlt
mov
insl
adc
imul
jl
les
xor
rcrb
push
push
mov
xchg
clc
add
pcmpgtw
mov
in
inc
cmp
stos
out
out
mov
xorps
sbb
push
movzbl
mov
or
or
rcll
test
or
leave
mov
les
imul
push
mov
adc
cmp
jbe
mov
add
pop
dec
ljmp
pop
imull
mov
nop
mov
sahf
leave
roll
ret
or
adcb
loopne
into
scas
mov
and
mov
add
cltd
loopne
call
sbbb
push
add
outsb
and
sub
jbe
dec
or
adc
xchg
and
aad
or
mov
jne
push
inc
imul
add
adc
xchg
mov
mov
insb
sub
push
sti
push
xor
sbb
xchg
sub
dec
and
andb
jne
push
jecxz
mov
mov
and
and
cmp
test
sub
mov
mov
movsl
mov
push
lea
jl
hlt
cld
add
daa
shrl
cmpsb
xchg
push
sbb
in
imul
or
enter
out
adc
push
push
fstpt
add
dec
in
push
leave
push
xchg
es
pop
mov
cmp
pop
add
ja
and
sarl
movsl
outsl
mov
adc
cmpsl
loope
lock
outsl
push
mov
jp
dec
pop
push
ret
je
rolb
sbb
sbb
subl
pop
cltd
test
lea
mov
enter
xchg
mov
inc
or
test
push
mov
es
call
aam
je
inc
test
mov
in
jecxz
push
add
sbb
add
push
mov
jl
in
aam
lea
dec
out
or
lds
mov
scas
lds
push
jno
mov
in
shll
add
bound
popf
je
shrl
in
add
and
mov
push
or
ficompl
add
repnz
cs
xchg
addr16
hlt
or
mov
xchg
inc
repnz
mulb
aas
sbb
lcall
and
rorl
in
push
mov
jb
test
sub
popf
icebp
jne
or
and
xor
bound
inc
ljmp
dec
pushf
sbb
imul
pop
je
call
push
push
insb
add
cmp
fdiv
sub
adc
push
imul
mov
xor
and
adc
xchg
push
inc
or
pushf
out
ss
jl
sbb
lcall
or
stc
jp
popf
pop
es
push
cmc
loopne
pop
lds
jne
add
pusha
cmc
xlat
pop
jp
push
dec
jl
pusha
or
inc
or
add
sub
pop
mov
addr16
and
pop
xchg
sbb
test
ja
mov
add
pop
rolb
sub
mov
call
pop
out
outsb
push
jnp
int
push
adc
or
pop
inc
xchg
ret
sbb
jl
subl
pop
fchs
pop
call
or
cmc
mov
mov
add
in
add
add
pop
xchg
adc
and
add
scas
add
push
sar
ss
lcall
rcll
or
mov
enter
stos
lods
sbb
dec
cmpsl
jecxz
and
mov
ds
inc
sub
cmp
stos
push
call
call
sub
pop
jne
xchg
lea
and
mov
or
xlat
xorb
cld
mov
je
cs
mov
sbb
jmp
test
or
outsb
add
push
dec
inc
lock
xorb
dec
call
inc
add
dec
pop
sbb
shrb
mov
cmpb
or
ja
pop
mov
xor
jmp
xchg
xchg
sbb
dec
call
jnp
into
pop
in
dec
push
inc
inc
cmp
mov
loopne
aad
xor
in
dec
imul
push
fs
sbb
sbb
push
je
cmp
fdivrs
fsubr
shl
or
xchg
add
jmp
xchg
pop
sub
push
inc
push
xor
repz
sbb
cmpsb
sbb
mov
or
out
sbb
or
add
ret
sub
or
adc
push
xchg
mov
pop
mov
jecxz
inc
movzbl
sbb
add
mull
adc
clc
je
push
pop
or
pop
ret
aas
sub
movb
sub
lds
and
push
pop
pop
mov
lds
and
shll
pop
jbe
je
sub
push
loopne
adc
or
rcl
pop
ret
push
mov
sub
jnp
and
loop
jo
in
and
add
mov
sbb
shlb
push
pop
push
push
mov
mov
cmp
shll
or
ds
sbb
push
subps
jnp
aaa
sbb
sbb
test
popa
pusha
loop
fdivr
jecxz
sbbb
jb
xor
sub
mov
mov
push
push
dec
fdiv
es
cmp
pushf
sbb
jbe
xchg
pusha
push
fimull
mov
xchg
in
int3
call
or
pop
xor
or
cmp
jmp
mov
sub
fisttps
mov
adc
xchg
cwtl
sbb
insl
stc
shlb
xor
ja
add
push
jb
call
daa
les
aas
mov
pop
and
addr16
xchg
xchg
dec
xchg
test
in
mov
lea
adc
movsl
inc
jbe
mov
nop
add
add
lds
push
mov
mov
mov
mov
add
sub
daa
shlb
fildl
or
cmpsb
imul
fiadds
out
sub
push
out
repnz
sbb
call
cmp
hlt
fdivrp
xor
fdivr
andb
loop
ret
xchg
mov
xor
xor
decb
mov
add
push
sub
xor
ds
ss
aas
xor
mov
xor
call
mov
mov
idivl
or
mov
adc
sub
add
mov
push
jle
xchg
les
adc
pop
mov
pop
jb
andb
lea
push
repnz
enter
mov
repnz
xchg
push
pushf
imul
movsb
pushf
pop
sub
adc
or
push
cltd
arpl
stos
fstpt
jle
rcll
fisubs
nop
bound
adc
inc
in
lcall
add
pop
shl
sub
inc
and
push
repz
cmpsl
fisubs
mov
stos
push
pop
push
sbb
sbb
std
jo
shlb
push
mov
rolb
sbb
mov
pusha
ljmp
outsl
push
jb
je
ljmp
ljmp
pop
pop
stos
je
and
les
andl
or
sbb
cmp
push
clc
je
mov
sub
mov
sbb
inc
pop
adc
gs
push
push
xor
add
sub
pop
ficoml
or
fisubrs
and
fidivrl
cmpsb
into
rcl
fiaddl
mov
dec
imul
lret
sbb
inc
push
loopne
pop
aaa
sub
hlt
enter
sbb
in
or
mov
sbb
loop
std
sub
adc
sub
jnp
mov
adc
push
jnp
and
and
scas
dec
adc
imul
xchg
ss
mov
push
push
adc
call
mov
jle
jmp
mov
pop
dec
lcall
mov
loopne
fnstenv
in
in
sarb
push
push
add
and
and
or
jmp
fsubl
jb
inc
inc
ficomps
pop
and
and
in
xor
push
xor
loope
fdivl
jne
push
or
nop
dec
in
adc
sti
mov
or
enter
bound
pop
jno
cmpsl
imul
push
call
cmp
adc
dec
pop
xlat
jo
sub
mov
mov
cmp
inc
test
test
rcr
in
mov
insb
loope
pop
mov
roll
inc
cltd
bound
cmp
scas
cltd
je
inc
or
fdivl
lea
cmp
mov
sub
je
in
in
sbb
cmp
in
mov
adc
out
ret
mov
lcall
mov
adc
cmp
pop
imul
mov
shl
push
andl
jnp
pop
fists
push
ljmp
jne
clc
jne
movsb
mov
jne
mov
lods
push
cmp
arpl
push
or
xor
push
or
push
mov
mov
dec
mov
jae
xlat
mov
xor
jmp
or
add
faddl
call
inc
enter
push
lahf
insl
cwtl
adc
adc
sahf
les
movswl
pushf
adc
mov
fldl
mov
lods
lods
dec
xlat
push
push
cwtl
stos
xchg
pop
mov
jecxz
repz
pop
into
inc
call
xchg
mov
lea
jb
adc
add
cwtl
add
in
pop
pushf
in
dec
adc
or
mov
in
rorb
int3
dec
or
add
cmp
rcll
push
add
jne
jl
mov
add
push
fildl
adc
movl
dec
sarl
in
test
test
jne
cmp
add
fdivrs
mov
orb
push
pop
icebp
or
gs
jne
dec
dec
ljmp
push
add
add
out
enter
loopne
loop
shrb
mov
cmp
xchg
xorl
daa
cmp
or
and
inc
insl
jge
mov
mov
mov
in
inc
xchg
push
add
pop
and
je
push
mull
js
add
or
je
mov
lea
jmp
pop
dec
or
loopne
outsb
sbb
cld
inc
mov
adc
ficoml
xchg
xor
bound
jmp
mov
fs
imul
popa
adc
push
das
imul
or
lcall
sahf
scas
cmc
pop
pusha
popf
rorl
adc
inc
dec
or
nop
add
or
lods
cmp
mov
lods
pop
push
cltd
add
mov
mov
xor
lods
scas
add
inc
jne
xor
inc
add
inc
sbb
lods
push
add
popf
out
popa
inc
adc
mov
insb
add
mov
in
aaa
clc
mov
jne
push
loopne
cli
test
xchg
push
mov
mov
fists
push
inc
add
adc
ds
test
repnz
mov
inc
inc
xor
inc
call
rorb
or
shr
adc
mov
or
jnp
mov
ss
stos
std
std
enter
movhps
jb
cld
cmp
sarl
cmp
rorl
inc
rorl
push
mov
mov
and
aas
jmp
mov
dec
fisubrs
test
testb
and
gs
orl
inc
pop
push
xchg
jb
sub
dec
add
adc
std
adc
ds
nop
push
ds
jl
shrl
outsl
mov
jne
pop
fldl
jbe
test
add
sarb
sahf
lret
dec
add
mov
ljmp
cmp
or
jl
mov
adc
adc
sarb
add
inc
fcoms
or
sub
shlb
sbb
jmp
add
or
or
or
mov
jne
in
ret
dec
cmp
push
xor
fistl
fs
or
daa
jae
ret
inc
mov
inc
int3
lods
or
sbb
and
subl
out
mov
daa
pop
mov
adc
xchg
adc
cmp
and
hlt
jne
rclb
adc
popf
mov
or
mov
add
cmp
cwtl
inc
jecxz
aaa
imul
push
mov
push
call
lcall
ret
sub
inc
jbe
mov
mov
push
xchg
popf
push
dec
sbb
mov
xchg
xchg
sarb
jge
clc
push
or
enter
lret
and
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
ficoml
jle
or
insl
mov
xchg
js
in
mov
lahf
cwtl
xorl
fstl
or
mov
pop
inc
jb
cmp
popa
aaa
ret
xor
cmpb
fs
sub
sub
aam
sbb
sbb
rorb
je
dec
or
sbb
adc
xchg
and
data16
sbb
mov
cmp
xchg
jae
leave
push
mov
jl
imul
jg
jne
mov
jmp
or
xor
movsb
cmp
or
pusha
cwtl
mov
push
or
call
dec
cmpl
shr
test
add
mov
mov
and
pushf
push
insb
push
adcl
or
inc
sbb
addb
ja
inc
push
add
call
out
push
cmp
or
fisubrl
jne,pn
ljmp
and
test
shll
outsb
int
decb
ss
mov
test
inc
cltd
cmp
insb
inc
adc
dec
mov
adc
mov
mov
adc
push
mov
cwtl
or
popf
inc
bound
out
xchg
out
insl
push
out
push
fucomip
cmp
push
insl
pop
in
je
cmp
jbe
movsb
add
and
nop
cld
mov
subb
clc
push
inc
mov
fsubs
std
pop
jbe
sub
lock
fsubl
pop
cwtl
sbb
push
in
or
test
mov
hlt
pushf
cli
adc
push
popf
fadd
shlb
xor
pushf
loop
fwait
or
test
inc
jmp
xorl
mov
sbb
imul
sbb
mov
fmuls
rcl
dec
adc
or
fadd
pusha
mov
fimuls
fwait
jmp
push
mov
cmp
aas
fsubrp
jo
push
sbb
adc
adc
gs
adcl
or
sbb
adc
push
inc
adc
add
and
lods
stos
loopne
sti
push
and
je
test
inc
lea
aad
xchg
addb
dec
in
test
stc
xor
jo
jg
sub
icebp
sub
pop
push
lea
mov
mov
mov
push
jno
enter
jne
mov
sub
push
scas
dec
push
push
push
cmpsb
aam
cmpsb
inc
mov
in
sbb
cld
clc
loop
push
cli
call
push
jo
sbb
je
aad
filds
and
add
scas
fnsave
fwait
jae
js
push
push
lret
xchg
add
mov
or
push
jns
add
mov
adc
aam
lret
xlat
shrl
repnz
or
mov
pop
or
into
imul
mulb
mov
jmp
lret
and
leave
roll
enter
jo
sbb
jmp
in
xlat
adc
out
mov
loopne
pop
sub
lock
dec
push
hlt
ss
xor
mov
adc
jne
clc
and
cmp
jmp
rclb
cld
push
add
push
dec
mov
in
mov
cmp
mov
and
or
push
sub
xor
add
sub
mov
adc
ss
push
cs
push
add
sbb
xchg
or
inc
cmp
call
or
dec
ja
pop
movsb
call
inc
ficoml
mov
sbb
adc
push
stos
mov
or
jne
addr16
sbb
mov
push
int3
sbb
xchg
dec
cld
jne
into
cmp
xchg
or
jmp
ss
cmp
subl
jne
push
pop
and
or
je
push
sahf
jmp
decb
mov
mov
jo
adc
xor
es
jae
js
pop
add
sbb
loop
icebp
call
rolb
push
or
das
enter
and
push
mov
fisttpll
push
push
push
jmp
xlat
inc
mov
call
leave
test
inc
mov
lcall
dec
jl
js
negb
cmp
dec
push
nop
push
xor
out
imul
dec
mov
fxtract
jmp
and
insb
pop
xorb
movsb
mov
roll
outsb
mov
pop
dec
jl
movl
test
adc
add
movsl
popa
fdiv
add
and
xchg
jne
mov
imull
in
and
in
movsb
jmp
lret
in
js
sbb
out
xchg
and
insb
adc
dec
push
data16
sbbl
cmp
shll
jbe
imul
cmpl
insb
into
and
push
mov
push
stc
add
pop
sub
arpl
and
dec
sbb
mov
add
pop
test
fdivl
or
mov
dec
jl
out
cwtl
or
popf
pushf
or
cmp
fidivrs
lea
adc
stos
push
inc
dec
mov
fs
inc
mov
shll
mov
inc
mov
incl
cmp
jg
push
dec
lea
add
pop
mov
cmp
jbe
test
ret
fstpt
mov
add
jl
adc
pushf
ret
mov
push
decl
or
inc
inc
dec
jne
bndldx
fdivs
xor
adc
scas
aam
nop
mov
sub
test
xor
and
lea
incl
nop
sbb
sub
es
lods
jmp
decl
dec
lods
and
adc
cli
sub
sbb
test
xor
or
xchg
add
and
ja
xorb
xchg
enter
xor
inc
pop
rorb
pop
push
sbb
mov
fmuls
or
shlb
mov
xor
test
push
stos
aaa
and
loopne
dec
sbb
leave
js
dec
dec
fwait
adc
or
sahf
inc
cwtl
mov
fstl
call
popa
es
push
movsl
shrl
dec
aam
mov
test
and
jmp
or
je
test
mov
adc
or
lds
dec
jmp
mov
sahf
and
aas
enter
mov
or
add
aas
mov
mov
adc
xor
add
sbb
inc
or
sbb
mov
addb
cmp
call
cwtl
cmpb
test
shll
inc
push
sbb
add
and
add
pop
push
add
fildl
orb
out
xor
andl
enter
imul
je
loopne
or
sub
jp
add
mov
add
dec
shl
add
rorl
daa
and
inc
inc
mov
pop
push
rcrl
in
adc
rcl
xchg
push
or
scas
stos
and
cli
inc
pop
popa
push
push
nop
fs
inc
nop
dec
or
or
pusha
andb
or
popl
jp
jle
mov
cmc
xor
daa
callw
pop
call
xorl
jmp
cmp
sti
push
jmp
inc
adc
mov
iret
data16
call
inc
je
jmp
dec
adc
int3
pop
cmpsl
outsl
sub
xchg
mov
movsb
dec
pop
leave
rcrl
cmp
das
jle
decl
inc
neg
ljmp
pop
psubsb
add
shl
push
call
jmp
repz
cld
leave
mov
je
cmp
jmp
adc
stos
das
mov
sbb
into
ret
xchg
rol
xchg
out
out
xor
pop
test
fmull
pop
push
into
cmp
push
mov
sub
fimull
jmp
sub
inc
jmp
addl
sbb
ljmp
push
mov
repnz
loopne
inc
sbb
or
adc
out
sbb
lock
and
mov
mov
add
mov
xor
inc
fisubrs
sarb
arpl
dec
sti
mov
push
push
es
aaa
int3
adc
movsl
push
and
cld
aad
es
sti
cmp
shll
cmpsb
adc
inc
pop
sbb
jae
push
es
bound
add
fbld
outsb
iret
dec
push
es
insb
adc
mov
ficomps
cltd
or
fwait
pop
pop
add
xchg
int3
xchg
js
sbb
dec
add
movsb
sbb
inc
push
adc
jae
dec
rorl
dec
sbb
cmp
adc
push
adc
jge
push
xchg
jecxz
and
pop
aaa
push
mov
cmp
test
movsl
adc
mov
es
and
adc
adc
sarb
inc
push
push
cmp
inc
xchg
pop
rorb
loope
xor
add
mov
shr
sbbb
push
les
pop
mov
das
sbb
or
push
lret
adc
adc
sub
andb
inc
dec
sub
jbe
adc
lret
mov
pusha
inc
inc
lods
lret
inc
cmp
call
out
mov
or
inc
sbb
aad
out
inc
dec
insb
imulb
cmpsb
out
inc
cs
pusha
popf
idivl
sbb
je
mov
mov
out
outsb
aam
dec
out
insl
inc
dec
inc
out
cmp
repz
xor
sub
sbb
fsts
or
sbb
jmp
jns
je
xchg
adc
pushf
adc
pop
pushf
and
lock
daa
pop
nop
add
lds
fisubs
dec
out
xchg
add
mov
mov
fisubrs
mov
or
push
mov
repz
mov
or
cwtl
xchg
popf
cmpsl
jge
inc
cld
or
push
adc
or
mov
out
inc
sbbl
daa
lcall
cmp
lahf
sub
or
rcrb
cmpsl
jge
jne
and
mov
fs
or
insb
and
aam
dec
pushf
push
pop
jmp
cmp
mov
xchg
mov
add
sub
cs
add
setg
ficoml
pop
insl
fucomi
test
inc
xor
push
pop
add
mov
add
add
push
pop
repnz
ud0
mov
sbb
add
jno
xchg
sub
je
xchg
add
mov
add
push
repnz
gs
pop
pop
lcall
repnz
scas
in
or
or
xchg
cmp
push
cld
add
or
iret
enter
emms
imul
or
xchg
cmp
mov
push
or
je
push
cs
addr16
rdmsr
mov
rcrb
pop
adc
mov
adc
cmp
in
adc
int
test
adc
fisubs
addl
pusha
adc
sahf
xchg
sub
inc
pop
pop
dec
jae
inc
and
sbb
sbb
mov
push
repnz
sbb
enter
mov
aaa
xchg
pop
lcall
sbb
bound
sbb
ja
sbb
sbb
in
push
inc
negb
pop
adc
add
add
sub
cmp
mov
rcrl
add
cmp
xchg
jmp
cwtl
fldt
cmp
je
repnz
sub
shl
push
lcall
xor
out
xchg
in
out
mov
out
mov
cmpsb
pop
aas
sub
call
adc
adc
setno
cmp
cmp
repnz
bound
movsb
sub
in
in
xchg
aad
sub
in
cmp
mov
in
sahf
out
out
xchg
out
xor
or
or
je
lock
in
xor
dec
icebp
cmp
subb
and
add
scas
adc
repz
hlt
hlt
imul
xchg
std
cmc
cmc
cmp
cmpsl
div
mov
mov
sbb
gs
adc
clc
clc
or
aas
stc
stc
and
push
repnz
cli
add
push
jns
cmp
fdivrp
cld
std
push
ss
je
cld
push
push
nop
shlb
sahf
aaa
and
std
sbb
pop
insl
fs
xor
je
jmp
pop
sub
jb
hlt
push
xchg
lahf
rcrl
adc
or
jmp
adc
jns
push
shl
xor
push
xchg
sub
cmpl
inc
lcall
out
xor
scas
call
jns
sti
adc
out
inc
mov
dec
jmp
pop
insl
nop
jmp
xchg
daa
in
cmp
pop
push
cltd
or
jmp
xchg
or
aad
imul
in
aad
cltd
cmp
cli
or
int
repz
sbb
add
xchg
push
cli
stc
subb
imul
div
divl
xchg
xchg
clc
cltd
mov
inc
bnd
push
stc
dec
push
cmp
sbb
repnz
scas
ss
xchg
or
cmp
aad
xchg
push
jmp
mov
enter
add
inc
dec
mov
sbb
clc
mov
loop
aad
imul
in
aad
loope
clc
jo
pusha
leave
and
push
sbb
xchg
fcoml
out
mov
setle
or
jnp
ljmp
jb
jmp
mull
pop
repnz
testl
subb
xchg
into
mul
mov
inc
repnz
notb
inc
or
lea
xchg
inc
repz
cmp
pop
sub
or
imul
cmc
div
ljmp
mov
mov
mov
pusha
xor
sbb
pop
cmc
cli
cli
add
cmp
loope
leave
and
cmc
cli
hlt
test
xlat
inc
dec
repz
jo
push
push
stos
mov
fwait
xor
clc
sti
mov
loope
loope
leave
or
pop
hlt
add
xchg
pop
cmp
mov
sub
in
hlt
in
pop
pop
pop
lret
or
repz
andb
or
xchg
repz
aam
insb
repz
repz
or
or
in
pop
xchg
adc
mov
rcll
or
test
cmp
icebp
sub
scas
icebp
das
xchg
pop
in
jb
adc
repnz
repnz
cmp
mov
cld
icebp
cmc
jb
sbb
mov
flds
cmp
and
test
xor
jne
stc
mov
dec
icebp
xor
wbinvd
andb
mov
pop
mov
repnz
ret
jp
jmp
dec
lret
mov
push
sub
jmp
push
inc
insb
loope
fcmovbe
dec
aaa
inc
cmp
cmp
sbb
add
adc
mov
mov
add
push
enter
stc
xor
dec
icebp
dec
add
movsb
xchg
and
add
fstpl
xchg
hlt
pop
cmc
jmp
cmpsl
and
dec
xor
dec
push
nop
push
jns
adc
xor
cmpsl
push
aaa
or
push
add
mov
push
imul
cli
push
sahf
data16
jecxz
repz
mov
jns
sbb
push
push
aad
in
out
fisubrs
gs
dec
outsb
or
and
mov
mov
pop
or
inc
mov
repnz
sar
and
lea
inc
cmp
mov
lret
push
dec
dec
or
sbb
jmp
fnstsw
xchg
or
xchg
lods
test
push
xchg
push
jmp
repz
and
inc
scas
adc
or
fsubrs
mov
push
and
sub
push
rcll
or
cmp
adc
sbb
push
mov
pop
test
js
mov
mov
daa
adc
inc
inc
mov
or
adc
hlt
ret
sbb
daa
or
in
jmp
ret
add
pop
adc
enter
and
es
leave
inc
fwait
adc
mov
sub
pop
insl
adc
ret
sub
adc
inc
push
push
jno
insb
arpl
inc
dec
dec
cs
dec
dec
jb
movsl
jo
mov
and
adc
sub
jno
outsb
andl
stos
adc
loop
jecxz
sbb
xor
adc
movmskps
jmp
aas
cmp
cmp
insl
or
sub
jmp
xchg
push
inc
push
sub
push
sub
arpl
jns
call
xor
pop
cmpl
rcl
and
add
add
cwtl
test
pop
add
lds
js
adc
shl
data16
dec
arpl
arpl
inc
xorb
xor
nop
inc
xchg
push
mov
and
adc
mov
sbb
dec
aaa
xchg
mov
adc
leave
pop
inc
mov
dec
pop
or
mov
add
cmp
xchg
and
int3
ret
inc
xor
orb
sbb
jns
gs
inc
ret
rcrb
popf
fnstenv
dec
inc
push
cmp
xor
cmpsb
push
rcl
pop
xor
add
or
movsl
xchg
cmpsb
mov
call
xchg
jnp
mov
in
adc
xlat
xchg
jg
and
loop
inc
enter
in
lcall
or
sti
iret
leave
dec
sbb
lahf
stc
push
dec
leave
lahf
add
push
xor
inc
push
add
and
rcl
sahf
and
leave
fwait
dec
fidivrs
sbb
fiadds
movsb
sti
and
xchg
push
lahf
jmp
in
adc
dec
cs
add
int
pop
repnz
pop
add
mov
jmp
sbb
lcall
adc
cli
mov
in
daa
inc
mov
jl
cmpsb
mov
fwait
imul
pushf
dec
enter
sbb
rcl
jns
or
dec
nop
push
dec
out
or
movsb
cmp
or
test
into
outsb
cmpsb
adc
stos
dec
nop
lahf
imul
inc
jb
and
sahf
cmp
jb
jb
sub
sbb
ret
and
movsb
movsb
push
xor
push
pusha
adc
cltd
xchg
adc
lahf
fwait
inc
sahf
in
mov
adc
adc
sbb
test
leave
addb
nop
inc
es
lahf
adc
or
or
dec
xor
dec
cmp
and
xor
xchg
add
lahf
sbb
int3
xor
inc
and
cmp
cmc
add
push
les
xor
adc
fs
inc
shlb
xchg
or
jb
cmpsb
loopne
push
adcl
sar
sahf
push
stc
aaa
sahf
sbb
loopne
fcoml
das
push
pop
outsl
mov
inc
mov
jno
cltd
ds
test
les
inc
nop
mov
jmp
push
mov
mov
inc
mov
inc
pop
cmp
xchg
dec
cwtl
test
lea
xor
imul
push
push
cmp
lcall
rcrb
cmp
inc
pop
sbb
lods
mov
inc
es
lea
mov
push
cmp
arpl
movsb
mov
nop
stos
fs
in
and
mov
adc
mov
or
lret
cltd
xchg
inc
xor
imul
les
popf
add
in
mov
clc
mov
or
pop
and
dec
inc
or
cmp
aam
dec
out
cmpsl
sbb
orb
or
add
cmpsl
out
push
push
or
inc
rcll
filds
jbe
fdivr
hlt
jle
inc
sub
xor
xor
sar
mov
std
pop
sbb
and
push
xor
xchg
or
mov
scas
xor
outsb
adc
pusha
jnp
jle
movb
mov
mov
adc
ljmp
loopne
and
push
lock
sti
jmp
mov
mov
fsubs
sbb
push
cwtl
test
add
adc
cmpl
xor
push
xor
or
mov
data16
data16
loope
es
pop
mov
dec
nop
test
in
add
push
bound
pusha
stc
cmp
roll
cmp
xchg
scas
aas
ss
fs
xchg
je
sub
imul
imul
mov
push
pusha
and
and
inc
adc
jno
rorb
or
xor
int3
cmp
popa
dec
jbe
into
dec
cmp
dec
mov
daa
dec
xor
je
cmp
push
inc
or
sub
dec
ret
cmp
mov
push
xchg
je
push
mov
adc
push
mov
imul
lea
or
movsb
xor
mov
dec
mov
mov
push
lret
xchg
lods
mov
dec
mov
fs
int3
xchg
xchg
push
int3
sub
cltd
sub
sbb
xor
push
loopne
add
sub
adc
xor
test
cmpsb
mov
pop
mov
xchg
cltd
sub
cltd
sub
lret
ds
cmp
add
clc
mov
xor
sbb
lahf
xlat
xor
sub
shrb
mov
sub
outsl
sbb
push
dec
inc
scas
pop
test
mov
dec
sub
in
xor
dec
mov
je
cli
jmp
aam
sbb
mov
sub
int
popf
imul
adc
or
int
sub
xlat
dec
inc
sub
sbbl
or
insb
mov
sub
mov
fs
dec
imul
dec
sub
loopne
mov
add
cli
enter
inc
adc
sub
dec
inc
aaa
mov
sub
int
je
sub
nop
sub
das
dec
xlat
ss
rcrb
fs
xor
data16
ljmp
adc
shrb
sbb
jmp
cltd
imul
dec
inc
scas
jno
sub
xor
jnp
sub
xor
adc
pop
dec
sub
and
dec
sbb
fcoms
xor
push
shrl
cmp
cwtl
imul
sbb
dec
sub
or
stc
or
dec
sub
dec
inc
aaa
cmp
pusha
cmpsb
mov
sub
mov
aaa
out
imul
subb
daa
pop
imul
movsl
test
into
imul
xchg
ret
pop
nop
movsl
xlat
mov
daa
rcl
cmpsb
mov
pushf
push
jne
push
js
and
mov
rorb
sbbb
adc
movsb
pop
sub
and
aam
mov
cs
cwtl
mov
mov
inc
fwait
push
imul
das
sbb
mov
xchg
or
fdivrl
mov
sub
xor
cmp
movsl
jnp
cmp
aam
inc
jns
ffree
dec
sub
xor
imul
aaa
int
pop
sbb
pop
or
cltd
xchg
xor
out
adc
shll
mov
jae
pop
loope
cmpsb
sub
add
int3
rcl
shrb
lock
xor
add
insb
sbb
pop
dec
or
enter
push
mov
adc
xor
add
sar
push
stos
in
mov
inc
aaa
shrl
dec
xor
or
stos
aaa
rcl
sub
cmp
insb
sub
mov
jo
xchg
xor
pop
aad
int
sub
xlat
sbb
orl
outsb
cmpsb
sub
sub
sub
dec
imul
out
mov
adc
inc
sub
dec
or
cmp
mov
xor
push
into
and
pop
sbb
int3
sub
jnp
sub
or
sbb
xchg
loope
lock
out
dec
cmp
push
sbb
je
cmp
fisubrl
test
sub
js
dec
inc
or
xchg
adc
push
cltd
xchg
sub
repnz
xchg
mov
sbb
mov
sub
cltd
sbb
xchg
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
xchg
inc
push
pop
popf
lds
cmp
movsb
cmp
pop
lcall
pushl
xor
push
call
popa
jo
rorb
lods
cli
sahf
lods
mov
cmp
cmp
mov
sub
orl
pop
pushf
ret
jge
aaa
imul
aaa
popf
test
gs
aaa
dec
lds
mov
mov
repz
lods
cmc
push
imul
adc
xor
mov
mov
or
inc
out
push
mov
aam
add
fildl
das
cmpsb
sub
dec
rdmsr
jb
mov
push
mov
inc
push
cmp
in
fucomip
jbe
lods
lcall
into
lcall
xor
inc
add
fucomi
mov
jbe
or
std
mov
inc
add
roll
xchg
inc
pop
and
imul
pop
and
ja
mov
sarb
loope
cmpsb
mov
sbb
inc
jnp
add
and
xor
jae
mov
inc
add
or
add
out
dec
or
mov
sbb
cmp
inc
dec
jo
pushf
or
jbe
lcall
pop
jle
xchg
je
mov
pop
pop
sbb
push
sub
je
orb
xchg
dec
je
add
js
mov
push
scas
cmp
inc
dec
shlb
cmp
imul
mov
ds
insb
cmp
sub
int
dec
sbb
faddl
push
jae
xchg
jp
push
popf
push
scas
lret
inc
cmp
inc
dec
push
mov
leave
ret
push
pop
adc
inc
push
cmp
or
call
pop
mov
inc
mov
adcb
jnp
add
pop
pusha
in
cli
stc
dec
add
xor
es
pop
jg
pop
sbb
inc
pop
mov
cmp
xchg
jo
test
fwait
add
sub
mov
xchg
es
and
movsb
ret
add
add
rcrl
push
jl
add
xchg
add
jnp
hlt
out
or
je
sbb
dec
adc
cmp
lret
add
notb
and
insb
dec
mov
lcall
stos
ljmp
dec
or
sub
jno
rolb
adc
dec
sbb
call
je
inc
and
pop
call
fimuls
call
mov
and
cmp
or
push
cwtl
inc
cmp
mov
outsb
inc
sub
in
pop
out
push
inc
xchg
ret
neg
xchg
cmpsb
mov
jno
push
inc
outsl
inc
pop
push
rolb
outsb
inc
mov
mov
nop
sahf
adc
inc
inc
sub
inc
sbb
or
and
outsb
inc
mov
lahf
xchg
test
sbb
push
mov
pop
mov
xor
and
loopne
adc
sbb
movsb
inc
jmp
xor
mov
imul
inc
clc
cs
call
jmp
xchg
mov
pop
dec
call
imul
xchg
rolb
js
mov
push
mov
xchg
dec
enter
andb
xor
sub
jo
mov
pusha
mov
jb
sub
pop
pop
test
adc
test
and
test
iret
mov
dec
adc
mov
xchg
test
adc
inc
mov
lods
dec
adc
fs
and
inc
and
mov
and
inc
dec
inc
ja
cmpsb
mov
and
xorl
and
mov
xor
inc
das
push
test
push
mov
jp
ss
mov
mov
loop
pop
push
or
call
push
je
adc
add
push
loop
rcl
push
add
fwait
stc
dec
daa
movsb
add
incl
push
scas
dec
out
jl
je
add
sbb
xchg
xchg
insl
sbb
cmp
je
cmp
shl
imul
or
arpl
test
in
fld
jmp
sbb
adcl
pusha
or
or
scas
cwtl
xchg
enter
mov
lret
fidivrl
push
cmp
xor
inc
jp
inc
sub
rep
inc
ja
addr16
call
adc
push
stos
pusha
arpl
mov
adc
push
adc
out
add
ljmp
cmpsl
leave
test
mov
inc
popa
push
add
and
sbb
mov
nop
inc
and
cmp
pop
or
mov
mov
mov
xor
push
inc
call
jecxz
inc
pop
inc
rcl
adc
ss
call
add
fsubl
add
test
fwait
lret
or
push
movb
cmp
std
insl
imul
insb
cmp
add
cmp
inc
jmp
dec
jmp
push
pop
sbb
xor
push
inc
inc
and
aaa
mov
jmp
inc
inc
inc
pop
je
pop
es
inc
gs
jg
cmpb
push
mov
add
shll
xchg
jmp
fs
stc
add
mov
adcl
xchg
xorb
add
dec
push
int
je
cmp
clc
xor
and
cmp
leave
or
sarl
sbb
inc
add
xor
jae
fsubrp
inc
jmp
add
lret
cli
enter
push
popf
pop
pop
adc
inc
push
fstps
gs
sbb
add
sbb
mov
add
add
loop
pusha
popa
rcll
push
mov
loopne
xor
movsl
mov
lock
rol
pop
sub
call
xchg
or
mov
addl
out
dec
or
jb
cmp
repz
fisubrs
jge
sti
add
push
push
or
inc
jecxz
sbb
mull
sub
lret
test
pop
add
ja
cmp
sub
mov
xor
adc
add
mov
sub
push
sar
inc
push
adc
sub
mov
sarl
mov
pushf
push
xor
int
push
hlt
dec
fcoml
loope
mov
mov
cmp
pop
dec
cmp
adc
mov
and
sbb
nop
movsb
fwait
or
ret
arpl
ret
mov
pop
inc
scas
or
sbb
add
pop
add
popa
add
add
icebp
xchg
mov
jo
add
sahf
in
popa
mov
je
mov
das
out
dec
push
push
das
jp
lock
jnp
movups
adc
mov
xchg
or
add
lret
or
jmp
fs
xchg
les
xor
mov
les
mov
das
dec
cmp
loopne
cmp
mov
lret
shlb
and
aas
stc
testl
popf
fsubrs
xchg
lret
test
sbb
mov
scas
stos
xchg
ret
inc
push
push
xlat
addb
in
cmc
fists
dec
inc
es
in
push
inc
add
xlat
sbb
mov
nop
push
inc
add
xchg
inc
sbb
dec
inc
movsb
and
dec
pop
data16
aas
mov
lea
les
add
iret
loope
pushf
push
int3
or
push
lea
nop
in
stc
cs
add
xchg
insb
pop
fwait
mov
push
add
pop
movsb
mov
push
mov
inc
xor
cs
pop
ret
add
push
pop
sarb
mov
push
movsl
int3
push
int3
jae
leave
mov
xor
push
loopne
lods
es
sarl
mov
or
lcall
andb
adc
imul
pop
rcl
out
unpckhps
jmp
push
sbb
push
jg
add
add
xchg
into
fsts
cli
pop
xchg
cmpsb
imul
repnz
ljmp
jne
js
je
dec
sub
jmp
enter
add
inc
inc
push
add
shlb
aad
pop
or
int3
mov
inc
mov
test
push
and
sbb
xchg
lret
repnz
sbb
add
cmp
stos
mov
imul
imul
je
repnz
leave
add
xor
ret
adc
movsb
arpl
and
icebp
movsb
loopne
sub
jns
dec
jo
outsl
shll
imul
and
cmp
adcb
push
add
test
inc
loopne
hlt
xor
xor
add
push
pusha
leave
nop
in
ljmp
fbstp
sbb
ds
and
push
jmp
aaa
xor
add
mov
incb
outsb
adcl
or
xor
addr16
push
inc
xchg
cmpsb
cmp
cmp
rol
jb
fwait
loopne
add
outsl
pop
mov
inc
add
pop
into
sbb
add
cltd
xor
sbb
jns
orl
pushf
clc
dec
jbe
add
inc
repnz
mov
sti
out
popa
leave
nop
adc
xchg
lea
mov
mov
xor
enter
push
add
sbb
fldt
sbb
sbb
sbb
loope
pop
xchg
dec
in
lock
nop
xor
int3
or
sub
jo
push
jecxz
dec
rorb
xchg
cltd
push
ret
sbb
leave
inc
inc
inc
pop
or
push
push
and
pop
xor
jno
in
mov
sbb
mov
cmp
std
fwait
pop
xchg
add
pop
adcl
and
xchg
lret
in
and
jne
enter
push
dec
add
jne
in
add
mov
jle
inc
add
jo
test
jmp
test
popa
add
mov
cmp
mov
daa
xorb
xchg
inc
pop
sbb
jb
fildll
adc
test
jbe
call
add
out
les
inc
add
xor
push
xor
pusha
popf
fstpt
dec
mov
pop
and
scas
sbb
push
test
mov
ret
icebp
sahf
add
jne
cmp
inc
dec
adc
pop
or
mov
popf
dec
jno
and
call
mov
loopne
add
adc
xchg
insb
outsb
hlt
xchg
jl
fcompl
out
daa
pop
enter
sub
outsb
pop
cli
add
adc
loopne
sbb
es
jne
mov
mov
xlat
inc
rolb
je
inc
idivl
mov
popa
adc
scas
mov
lea
mov
cltd
mov
adc
movsb
add
sbb
addr16
outsb
add
addr16
ret
sbb
cwtl
nop
cmp
mov
jb
aas
sub
call
xchg
addr16
mov
dec
shll
adc
rorb
add
or
adc
pop
cmpsl
jne
shlb
pop
rcrb
push
movsb
mov
popa
mov
and
mov
sub
push
xchg
mov
xchg
mov
sub
mov
adc
push
xchg
pop
les
cmpb
mov
daa
jl
ss
push
lds
pop
sbb
or
icebp
jne
call
int3
mov
pop
and
sbb
pop
pop
mov
dec
fistl
pop
loopne
jo
dec
dec
pop
adc
mov
decb
xchg
fdivrl
aam
mov
fisttpl
ret
cmpsb
dec
inc
or
mov
aam
or
call
mov
push
outsb
pop
dec
xchg
and
and
inc
jns
sub
lea
adc
push
and
pop
jns
mov
mov
int3
cmp
inc
es
add
push
inc
jns
mov
cs
jns
or
dec
aad
mov
enter
dec
push
call
nop
mov
add
mov
push
push
and
adc
xchg
rcr
xchg
cmp
movsb
int
lods
test
and
xor
pushf
mov
movsb
ljmp
lds
sub
mov
xor
adc
imul
pop
sub
call
imul
or
inc
mov
adc
dec
jecxz
into
jo
fxch
mov
test
mov
pushf
rol
mov
std
xor
mov
jns
xchg
nop
popf
fadds
sub
jp
pushf
pop
jns
adc
xchg
nop
popf
sbb
hlt
jb
pop
push
jns
jp
mov
adc
inc
inc
and
adc
mov
je
movsb
xor
inc
cs
mov
dec
push
jns
enter
jns
and
dec
jns
add
or
or
jl
and
nop
ret
sub
push
xchg
jns
xchg
stos
orb
add
jns
sbb
and
pop
lea
sub
and
adc
dec
call
or
inc
das
lods
jns
inc
inc
outsb
mov
js
mov
adc
je
inc
jns
sbb
jl
push
jns
jg
cmpsl
push
push
xchg
sarb
xchg
fldt
sbb
add
push
popf
sbb
imul
mov
adcb
xchg
mov
fistpl
arpl
jae
lds
lcall
inc
sbb
test
test
jns
out
jnp
or
lds
call
xor
ficomps
jecxz
mov
les
in
or
pusha
inc
jo
adc
or
adc
call
sub
les
push
cmpl
jns
cwtl
mov
mov
push
xor
testb
add
add
in
inc
and
sub
xor
nop
push
leave
nop
pop
sub
pop
sbb
mov
inc
or
lods
xchg
pop
cmp
or
js
add
cmp
jp
sub
adcb
and
fs
clc
cmp
xor
pop
pop
dec
sbb
pop
push
pop
cwtl
cmp
mov
pop
nop
xchg
lods
sub
arpl
xor
loope
or
jge
test
mov
rolb
adc
push
pop
cmp
or
xor
sbb
pop
xchg
test
xchg
jae
inc
bound
inc
pop
sbb
push
aas
rol
dec
dec
das
xchg
push
push
mov
das
in
das
sbb
pop
dec
movsl
mov
lahf
test
sbb
add
hlt
das
dec
add
push
das
pop
cmp
dec
inc
das
shrb
dec
enter
inc
dec
inc
jbe
mov
in
ss
jns
xchg
and
inc
inc
scas
sub
call
dec
das
jle
jmp
rolb
das
dec
inc
add
pop
sbb
das
pop
inc
mov
or
add
mov
fcmovnbe
adc
xor
jp
fsubp
scas
test
andl
mov
lret
insb
into
mov
sub
add
enter
xchg
or
insb
call
addl
or
test
sub
inc
push
xchg
pop
nop
and
fs
or
inc
pop
enter
push
xchg
pop
push
and
ss
push
and
pop
repnz
sbb
shlb
adc
jmp
jbe
mov
pop
int
sub
push
fs
pop
mov
xor
inc
pop
sub
roll
or
sbbl
mull
adc
mov
adc
js
inc
inc
mov
popa
jnp
pop
loop
pop
in
and
pop
leave
mov
lock
or
jmp
dec
sbb
popa
inc
and
mov
push
inc
fisttpll
adc
in
push
inc
adc
pop
test
push
xchg
sub
push
push
adc
es
loopne
mov
dec
sbb
and
pusha
cmp
jp
ret
push
shrl
iret
sub
xchg
test
xor
adc
bound
adcb
cmc
enter
call
test
popf
nop
push
mov
push
popa
inc
push
dec
sub
push
mov
cwtl
push
pop
adc
xchg
push
monitorx
pop
cwtl
push
aad
je
fnstenv
push
cwtl
nop
jo
mov
or
or
xchg
stos
mov
adc
or
dec
mov
and
cmp
rcrb
and
pop
and
std
in
in
mov
push
or
inc
or
aas
or
unpcklps
das
shlb
repnz
cli
out
call
mov
adc
mov
or
add
call
repz
xchg
lock
call
call
mov
call
decb
dec
call
movsb
lods
das
pop
mov
movsl
pop
call
pusha
call
lea
push
jne
mov
insl
je
gs
pop
jl
push
cmp
adc
std
inc
sbb
test
xor
lret
nop
sbb
cwtl
add
lret
mov
rclb
test
shld
jl
rol
mov
enter
lret
jmp
xchg
mov
xchg
lret
fdivl
push
in
call
lret
aam
lock
test
jns
sub
add
add
leave
or
leave
frstor
loope
adc
mov
sbb
cs
dec
mov
stos
and
dec
in
mov
mov
jle
jae
xchg
dec
in
push
push
cs
dec
cmp
mov
cs
adc
lret
pop
or
test
sub
inc
std
inc
push
or
cs
xor
inc
std
insb
and
or
int
dec
jo
xor
sub
mov
std
dec
fcmove
in
je
data16
js
sbb
imul
data16
xorb
test
lcall
movsb
mov
cmp
call
inc
dec
lcall
sub
cmp
dec
out
movsb
mov
rorb
push
popa
jne
arpl
mov
arpl
add
mov
xor
mov
add
adc
test
xorb
push
adc
push
and
mov
and
dec
push
stos
pop
flds
dec
inc
pop
pop
mov
cmp
stos
mov
mov
dec
stos
mov
xchg
stos
and
dec
mov
inc
adc
pop
adc
fnstsw
push
adc
sub
test
sbb
push
or
aaa
scas
adc
sbb
aaa
dec
fcoms
arpl
adc
push
add
in
add
pop
adc
adc
imul
mov
mov
fnsave
mov
inc
inc
xor
addr16
inc
rclb
fsubrp
addb
pop
adc
call
push
mov
outsl
test
push
dec
sbb
pusha
call
inc
push
jecxz
mov
aad
pushl
sbb
pusha
push
mov
loope
or
aad
inc
add
rcl
nop
imul
mov
push
push
rcl
mov
aad
mov
enter
stc
mov
mov
pop
jmp
pop
push
or
cmpsl
or
addb
adc
add
pusha
nop
push
pusha
enter
dec
cs
xchg
sub
mov
inc
out
imul
mov
add
add
repz
jp
or
inc
add
addb
aad
lods
bound
or
or
adc
fs
movsl
and
outsb
pop
adc
fwait
mov
inc
xchg
inc
sbb
pop
adc
dec
xchg
pop
outsb
sbb
xchg
test
and
sbb
mov
cmp
mov
sbb
dec
pop
adc
mov
popl
pop
mov
push
xchg
sbb
bound
sbb
movsb
stos
mov
push
pop
les
fs
xor
rorb
cmpsb
adc
push
cltd
adc
sub
or
add
adc
fwait
and
xchg
sub
scas
dec
leave
dec
je
cs
pop
ljmp
cmpsb
je
mov
jge
mov
push
ret
add
sbb
xor
cltd
shlb
es
lods
cmp
cltd
std
or
xchg
adc
sub
push
cltd
rcrb
mov
xor
xor
xchg
sub
push
adc
push
jp
add
adc
call
dec
xchg
dec
addr16
pop
push
gs
dec
cmpsb
adc
cwtl
mov
or
adc
and
in
pop
jge
pop
gs
mov
fwait
shlb
xor
xchg
sub
xchg
xchg
ret
pop
loop
inc
cmp
stos
rorl
adc
and
mov
pop
cmp
ss
jns
call
mov
cmp
push
mov
adc
cmp
cmp
inc
sbb
xchg
cmp
ret
test
add
mov
cmp
test
cmpl
pop
push
les
leave
mov
inc
clc
push
adc
ret
sub
inc
int
nop
mov
mov
inc
addb
icebp
add
ja
es
dec
sahf
adc
add
mov
addl
add
jmp
adc
movsb
inc
xchg
inc
inc
dec
mov
mov
lds
rolb
and
lea
sub
jmp
pusha
dec
xor
aam
nop
test
push
lods
loopne
outsb
addb
mov
enter
push
mov
or
or
and
adc
dec
repz
mov
out
dec
mov
xchg
push
xchg
inc
push
add
int
and
scas
add
jge
les
or
gs
outsb
push
lods
and
and
pop
xlat
mov
push
add
jnp
dec
push
mov
lea
lcall
stos
xor
js
xor
mov
out
cmpsl
add
push
je
adc
adcb
popf
aaa
sub
shll
add
adc
cmpsl
shll
nop
cmpsb
sub
cwtl
adc
ret
loope
cmpsb
popa
pop
ss
adc
mov
mov
in
cmp
sub
gs
and
cmp
mov
jb
roll
dec
or
xor
popf
push
aaa
ja
pop
rorb
jbe
aam
inc
aaa
mov
and
shl
adc
mov
loopne
aaa
imul
arpl
addb
insb
mov
push
cld
add
jo
sub
mov
push
negb
mov
cld
jb
sbb
out
push
psubsb
adc
dec
push
adc
inc
iret
or
and
cmp
imul
xchg
dec
inc
and
inc
out
cmp
into
mov
mov
loopne
mov
call
addr16
leave
mov
or
sub
add
andb
fldl
aaa
and
rolb
rorb
aas
je
loopnew
mov
rcr
aaa
and
movsb
addr16
addr16
rol
adc
and
je
cmpsb
mov
inc
faddl
dec
xor
inc
jp
das
xor
xchg
les
adc
xchg
ret
aaa
and
mov
jp
push
and
loopne
push
addb
push
loopne
mov
sbb
pop
sahf
cmp
push
inc
push
sbb
or
add
outsb
add
jbe
fcompl
xchg
adc
movsb
rolb
jno
mov
push
mov
add
pop
sbb
jo
out
add
sbb
xor
mov
jo
rcrb
inc
or
push
pop
test
loope
in
push
in
cmp
mov
imul
out
cmp
adc
xchg
pop
xchg
js
mov
ffreep
cmpl
mov
mov
outsl
movsb
xchg
scas
push
incb
movsb
xchg
je
scas
gs
add
pop
dec
imul
repz
add
repz
xchg
push
mov
in
cltd
cmp
and
or
loopne
jb
mov
lock
cmp
mov
or
dec
inc
inc
fwait
aam
in
repz
repz
mov
mov
enter
mov
sbb
repz
and
sbb
repz
xchg
rorb
push
cmp
or
xor
sbb
sahf
stos
js
add
sahf
add
sbb
aam
or
rclb
inc
push
xchg
push
xor
cmp
mov
fcoml
mov
cltd
addl
or
xchg
inc
cmc
call
popf
push
bound
mov
or
cltd
xchg
std
insl
pop
je
push
call
sti
jno
xor
or
ja
xor
fs
out
pop
fstl
xor
pop
or
sbb
inc
loope
cmpsl
and
movsl
hlt
cld
xchg
pusha
mov
jb
jne
fs
stos
mov
add
jne
fldt
sub
mov
add
clc
push
inc
sub
call
adc
xchg
push
push
sub
sbbb
and
xchg
inc
sbb
movsb
sbb
sti
fwait
repz
aaa
adc
push
jo
mov
mov
repnz
xlat
fwait
push
jnp
lret
sbb
sub
dec
mov
cwtl
clc
adc
lea
call
inc
scas
jge
adc
jb
adc
lcall
xor
push
push
mov
enter
shl
jge
adcl
inc
ja
ret
lcall
adc
mov
out
pusha
xlat
ret
pop
adc
pop
or
in
in
inc
nop
xchg
je
adc
xchg
addb
or
inc
nop
push
mov
xor
lea
jmp
add
add
adc
dec
mov
mov
int
mov
sarb
test
pop
and
push
adc
or
out
cmp
adcl
mov
jmp
and
ret
shl
and
data16
or
mov
xchg
out
push
mov
fadds
mov
pop
and
add
and
or
cmp
repz
sbb
ret
iret
repz
mov
push
ds
out
cmp
or
sbb
aam
in
out
jns
push
mov
pushf
pop
push
lods
push
mov
int3
loop
push
inc
push
push
cmp
sub
push
nop
movsb
push
push
xchg
jns
out
jl
push
inc
ss
out
out
cmpb
push
push
lahf
out
sbb
repnz
fdivp
cmp
repz
mov
out
jns
mov
sbb
incb
add
es
int
jns
loop
sbb
iret
repz
mov
jns
out
sbb
pushf
scas
dec
repz
lret
or
and
iret
repz
pop
data16
repz
pause
sahf
lods
mov
mov
in
decb
ss
inc
cwtl
nop
repz
shr
jb
mov
cmp
push
sahf
mov
daa
rol
loop
jge
jns
clc
adc
sub
cmp
aaa
je
cmp
cmp
fs
push
cmp
adc
in
cmp
lods
daa
pop
mov
jbe
add
insb
stos
push
lahf
jae
jbe
push
cwtl
cmpsl
insl
mov
fwait
ret
das
out
iret
dec
test
aaa
int3
xor
add
insb
lahf
jbe
push
scas
test
bound
or
dec
push
push
fidivrs
push
push
rorl
pop
jo
xor
pop
dec
sbb
outsl
push
mov
fs
imul
stos
dec
push
je
rolb
push
and
add
push
push
ja
popa
roll
inc
and
lahf
pop
mov
fsubl
lret
dec
scas
ss
and
daa
xor
fistpl
xor
outsl
ss
xor
add
mov
dec
adc
mov
xchg
out
xor
mov
sub
mov
push
cs
fcomp
outsb
aas
das
dec
adc
fwait
test
mov
pop
mov
xchg
outsl
xchg
pop
mov
outsl
adcb
bound
rol
and
loopne
or
push
pcmpeqd
sbb
sbb
or
shll
mov
and
and
sub
shrl
stos
outsl
xchg
inc
cmp
and
push
xchg
inc
jnp
add
sbb
testl
mov
jg
add
xor
sarl
ret
je
ljmp
hlt
incl
push
push
inc
push
inc
pop
inc
outsl
outsl
xchg
repz
or
pushf
and
pop
inc
mov
pusha
lret
sbb
add
dec
and
out
dec
jnp
pop
dec
imul
push
mov
pop
inc
jne
outsb
je
push
pop
inc
js
in
outsl
push
les
jnp
inc
xor
sub
sub
std
push
xor
inc
inc
xor
xor
xor
jge
fcos
in
mov
inc
xor
xor
ss
xor
cmp
mov
fdivrp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
das
add
and
sysret
or
and
push
xorb
lea
or
rcrl
push
fidivrs
cmp
push
idivb
inc
or
push
and
inc
aaa
adc
js
cmp
xor
dec
or
inc
add
pop
push
arpl
negl
jle
xor
dec
and
cmp
ss
and
xor
add
ljmp
dec
sub
dec
popa
loopne
or
scas
push
push
jl
xchg
hlt
imul
sbb
rcrl
call
scas
fstpl
out
inc
out
adc
push
sub
out
into
repz
cmp
in
xchg
jne
sti
mov
lods
sahf
add
movd
and
hlt
mov
cmp
xor
adc
sub
and
jp
mov
xor
imul
fs
mov
je
push
push
jns
push
inc
cmp
add
cmp
cmp
sbb
xchg
lret
nop
stos
add
popf
mov
pop
add
lahf
sub
arpl
or
mov
xchg
and
outsb
ret
dec
popa
popa
adc
lods
mov
and
pop
cltd
dec
inc
xor
or
pop
bndldx
sbbl
pop
rcrl
jns
jo
inc
int3
pop
jg
jp
sbb
cmp
stos
inc
out
movsb
pop
ja
push
and
sub
imul
inc
cmpsb
push
imul
push
xchg
loopne
jns
fucompp
lods
shrb
push
imul
push
cmp
mov
fwait
add
popa
fs
jo
shlb
lods
imul
sbb
out
push
aaa
dec
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
pushl
inc
cs
push
push
push
add
push
shlb
neg
outsb
outsl
push
popa
imul
inc
outsb
popa
incb
sbb
fsub
push
int3
add
sub
add
add
adc
sbb
or
pop
adc
push
or
inc
rolb
or
inc
add
pusha
aas
ret
andl
jle
pushf
add
sbb
push
jg
xchg
adcb
cmpsl
sub
mov
popa
sub
xchg
movsb
mov
inc
pop
inc
add
test
fadds
adc
subb
repz
or
add
add
mov
push
adc
sahf
out
dec
xchg
adc
push
sbb
sbb
iret
sarl
sbb
call
imul
xor
jae
nop
cld
and
cli
js
xor
cld
stc
jp
push
cld
xor
repz
mov
cmpsl
sbb
pop
jbe
add
scas
push
pop
mov
and
pop
push
adc
ret
dec
int3
orb
stos
or
ds
cmp
cmp
xchg
es
es
addr16
popa
add
adc
push
iret
repz
cld
or
in
int3
les
into
repz
mov
dec
repz
xor
mov
out
push
mov
sahf
out
push
pop
cmp
repz
push
dec
dec
inc
out
lret
cmp
xor
sahf
out
sahf
sub
and
sbb
jns
out
adc
or
add
cmp
out
cld
or
hlt
call
enter
ds
repz
push
xor
lock
jns
out
int3
mov
insb
inc
repz
out
sbb
cld
push
iret
repz
fcom
les
cmp
sub
aam
mov
xchg
jo
sbb
add
iret
jnp
jg
push
int3
push
mov
es
inc
xor
sbb
mov
adc
repz
icebp
loop
sarb
add
js
xor
sub
mov
inc
inc
add
adc
adc
out
push
inc
dec
cmp
push
mov
mov
pop
and
or
adc
insl
adc
popl
sub
push
jecxz
add
cmp
loopne
mov
sub
cli
out
pop
adc
xchg
aas
adc
push
dec
sub
dec
push
jno
or
mov
push
jmp
or
data16
inc
pop
es
sub
adcl
sbbl
jecxz
js
fadds
jbe
and
ljmp
adc
stos
xchg
icebp
or
mov
loop
pushl
mov
shrb
inc
mov
dec
ret
jns
sbb
sub
sub
add
push
pop
push
inc
push
xor
mov
gs
inc
mov
jnp
out
psrad
jg
add
or
xchg
xchg
sbb
je
cli
pop
ret
jne
imul
or
dec
fidivs
arpl
pop
adc
outsl
mov
jo
push
gs
push
or
jo,pn
bound
dec
add
pusha
cmp
into
outsl
leave
popa
or
push
push
and
outsb
jnp
insb
das
inc
push
repnz
add
cmpsl
ja
lahf
add
rorb
cmp
jns
fsub
ds
inc
sbb
addr16
mov
mov
ret
test
xchg
inc
sub
aas
mov
das
fcoms
insb
jnp
test
mov
ss
nop
mov
push
sete
int3
push
jo
mov
jbe
mov
int3
jl
adc
fdivs
jecxz
rcr
cmp
cltd
ss
lcall
pushf
setl
lret
sbb
shl
les
mov
or
push
pop
insl
in
popf
jl
in
push
mov
lahf
jg
in
ret
call
bound
lods
xor
mov
and
and
sub
vmptrst
enter
inc
dec
mov
xchg
adc
and
iret
fcmovnbe
fcomps
jbe
in
fldt
jp
insb
adc
mov
imul
imul
adc
cltd
out
sahf
loopne
daa
lock
enter
imul
mov
jo
sbb
sub
mov
push
dec
add
dec
imul
inc
sbb
sahf
or
imul
dec
addb
add
sub
lcall
scas
pop
push
and
and
inc
push
push
adc
lods
push
push
add
push
outsl
ja
xor
mov
add
andl
fisubrs
jecxz
mov
daa
movsb
and
and
add
rolb
cwtl
inc
repnz
outsb
inc
jl
pop
out
lods
mov
ljmp
or
and
arpl
add
cmpsl
fs
push
jb
mov
push
in
inc
add
insl
jo
dec
les
js
pop
outsb
push
add
mov
sbb
out
insl
mov
jae
sbb
in
push
push
jae
push
adc
jmp
push
push
pusha
push
mov
inc
gs
addr16
out
adc
lock
cmp
push
inc
sbb
addb
add
sub
shll
add
ret
lcall
push
mov
inc
push
mov
pop
inc
dec
lods
loope
push
mov
imulb
cmp
push
jo
jb
jns
sarb
and
aad
inc
shll
add
lods
cmpsl
xor
push
sbb
lock
imulb
push
xchg
divb
aaa
adc
das
mov
or
inc
and
pusha
nop
shll
inc
and
jbe
cmpsl
and
inc
imul
jge
xchg
popa
mov
testl
mov
or
dec
inc
add
add
lods
gs
push
add
cmp
subb
mov
sub
outsb
es
pop
outsb
pop
add
push
scas
xchg
leave
push
dec
scas
xchg
adc
jmp
nop
pop
test
xor
sub
sbb
xor
sbb
xor
push
and
cs
gs
push
adc
imul
and
push
xchg
loopne
ret
adc
sbb
xor
shrl
ret
inc
dec
test
pop
add
sarl
mov
outsl
mov
out
scas
inc
add
jo
stos
xchg
stc
add
pusha
and
xor
add
push
scas
mov
pop
mov
push
xor
dec
dec
pop
add
inc
jecxz
jns
xchg
fs
mov
loope
lds
fistl
gs
lret
inc
push
outsl
arpl
pop
cmp
xchg
push
fsubrs
roll
push
frstor
dec
xlat
or
cmp
mov
xchg
and
or
push
jbe
xor
rolb
insl
imul
jb
mov
sbb
or
adc
push
pop
cmp
mov
inc
jmp
enter
arpl
push
aaa
outsb
dec
arpl
inc
dec
pop
or
aas
inc
cmc
ret
or
pop
lods
sbb
xor
sub
push
push
jmp
sbb
sub
add
inc
jno
mov
stos
iret
add
sar
imul
dec
add
add
sbb
jo
outsl
inc
pop
push
movsb
adc
mov
fs
sub
inc
addb
ds
ficompl
loopne
clc
dec
jbe
data16
pusha
push
jo
jno
cmp
mov
mov
add
scas
cmp
pop
roll
in
ret
xchg
add
push
es
or
sbb
fadds
add
sbb
arpl
fcmove
pop
imul
push
in
inc
cmpsl
add
dec
pop
notb
push
mov
imul
push
push
and
aas
mov
insb
cld
inc
jae
std
or
cmpsl
adc
add
je
popa
add
divb
add
xor
clc
cmp
and
ljmp
pop
imul
push
ret
cmp
insb
sbb
cltd
or
add
sub
inc
jae
pop
ret
xor
sbb
and
fbld
pop
ficoms
mov
push
popa
scas
std
mov
xchg
and
xlat
push
and
inc
cwtl
aam
push
jecxz
lcall
loopne
jo
pop
in
aam
or
mov
push
mov
add
pop
push
call
insb
push
sbbb
push
jnp
ret
pusha
sbbb
ds
iret
icebp
pop
and
add
std
or
adc
jns
sub
and
mov
rcl
pop
add
sbbl
cmpsl
data16
inc
cmp
inc
xor
sti
sub
or
cwtl
pop
push
shlb
fs
pusha
xchg
popa
jmp
mov
mov
mov
dec
shlb
push
or
adc
xor
inc
daa
dec
mov
and
and
adc
ficomps
sub
mov
repz
or
add
clc
out
sahf
out
sahf
lock
jns
out
mov
iret
repz
movsb
pop
mov
cmp
repz
test
push
pusha
push
pop
push
inc
cmp
jns
out
and
sbb
inc
or
int
in
lock
out
fidivrs
fcom
enter
sahf
sarb
sahf
out
pusha
push
cmp
sub
jns
out
sbb
or
iret
repz
cld
in
hlt
in
in
int3
fsubrp
repz
lods
mov
mov
cmp
repz
js
push
inc
sub
mov
sbb
loopne
push
adc
inc
or
and
xor
pusha
test
push
push
divl
mov
cmp
lcall
pmuludq
mov
push
xchg
not
lock
push
dec
add
nop
add
aaa
loopne
inc
daa
and
bts
test
testl
lret
jbe
add
mov
dec
mov
push
mov
add
mov
dec
pop
mov
add
cmpsl
mov
inc
add
imull
pop
mov
xchg
xchg
mov
scas
aaa
mov
xchg
mov
inc
addl
das
orb
mov
pop
jo
add
in
cmp
sbbb
push
dec
test
and
outsb
sub
cmp
insl
xor
movsb
sub
ret
xor
jbe,pn
and
xlat
ljmp
xor
ds
je
add
push
sub
xor
jae
inc
ret
mov
stos
dec
pusha
gs
imul
mov
js
and
mov
insb
and
inc
and
pop
or
adc
nopl
pusha
jne
es
popaw
pusha
dec
ret
mov
into
dec
jns
adc
mov
das
sti
ss
jo
push
sbb
stos
cmp
inc
add
inc
pop
pop
cmp
pop
fcmovbe
add
mov
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
call
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
xor
xchg
shll
inc
ss
ss
es
jg
decl
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
ret
add
push
lock
idivl
or
aas
sbb
xor
xor
push
xor
xor
js
popf
xor
decl
scas
xor
xor
xor
xor
xor
xor
xor
mov
lcall
cld
pushl
fnsave
xor
xor
xor
out
xor
xor
xor
lcall
sbb
xor
xor
xor
fidivl
scas
xor
shlb
xchg
mov
xor
out
xor
push
ss
cltd
ss
clc
mov
ss
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
fisttps
pop
cmp
outsb
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
lcall
push
adc
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
test
pushl
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
inc
adc
aas
andl
decl
xor
xor
xor
jl
mov
mov
xor
xor
xor
xor
decl
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cli
filds
xor
pop
xor
jo
xchg
xor
xor
ljmp
xor
xor
xor
xor
xor
xor
push
aaa
decl
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
call
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
and
mov
pop
aas
ja
pusha
pop
call
aas
adc
or
cmp
pop
xor
push
add
jg
xor
xor
xor
xor
xor
xor
xor
ret
das
cmpsb
push
xor
xor
lcall
clc
xor
xor
jmp
sbb
test
mov
mov
nop
xor
out
in
xor
int
cmc
aas
scas
clc
xor
cmp
pop
lods
icebp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cld
pop
jl
in
cmp
cmp
std
cmp
cmp
ljmp
mov
cmp
mov
cmpb
ds
clc
cld
fidivrl
jmp
xor
incl
xor
sbb
xchg
cmp
cmp
pushl
cld
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
outsl
xchg
test
cmp
cmp
dec
aas
push
imul
aas
js
cmpb
aas
sarl
aas
in
out
out
jo
shll
xor
xor
xor
paddd
fisubrl
xor
loop
xor
xor
xor
cmp
xor
mov
xor
xor
scas
std
xor
jmp
xorb
ss
add
or
aaa
and
mov
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
sarl
mov
aaa
xor
cmp
xchg
outsl
cmp
xor
clc
jg
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
inc
cmp
ud0
jg
cmp
popa
cmp
cmpb
cmp
push
stos
sar
ud0
mov
mov
or
cmp
cmp
cmp
cmp
cmp
xacquire
mov
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
ja
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
ds
push
cmp
jae
mov
cltd
cmp
decl
ds
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
test
aas
movsl
aas
stos
aas
mov
mov
sarb
jp
push
xor
insl
stos
lcall
jg
les
fidivl
in
or
adc
lcall
xor
xor
mov
xor
xor
xor
xor
out
cli
rdpmc
push
xor
mov
jl
cmpsl
xor
xor
xlat
aaa
loopne
scas
jno
xchg
xor
xor
xor
cmpsb
pushl
xor
jg
xchg
xor
mov
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
sbb
scas
cmp
ret
in
push
jp
cmp
fdivrl
aaa
cmp
mov
mov
data16
mov
mov
mov
push
cmp
pop
shl
sbb
xor
or
xor
cmp
pop
aaa
pop
aaa
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
das
and
cmp
sbb
ds
xor
xchg
aas
cld
aad
or
xor
inc
xor
icebp
out
clc
pop
mov
xor
xor
xor
jl
lock
in
scas
fiadds
aaa
ret
aaa
std
pushl
loopne
aaa
repnz
or
cmp
pop
cmp
jge
mov
aas
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
mov
cmp
cmp
fdivrs
push
aas
jne
mov
ljmp
cmp
or
mov
fwait
xor
sub
xor
dec
or
repnz
aas
xor
sbb
arpl
divl
pop
xor
fdivr
aas
cli
jmp
adc
es
dec
ss
outsb
notb
ss
in
ss
mov
cmp
cmp
mov
loopne
cmp
cmp
cld
pop
mov
cmp
jne
test
mov
sub
mov
cmp
dec
cmp
cmp
jae
lds
fnstsw
jecxz
imul
mov
cmp
cmp
pop
sarb
mov
dec
cmp
mov
and
ds
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
or
sahf
loope
rol
clc
mov
in
xor
pop
xor
xor
cmp
pushl
or
xor
xor
xor
xor
xor
mov
xor
push
ud0
push
lcall
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fcmovbe
jg
aaa
out
in
aaa
cli
aaa
mov
cmp
mov
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
push
cmp
adc
jbe
cmpl
cmp
cmp
push
pushl
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
jl
adc
jne
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
add
mov
add
ljmp
jmp
loopne
adc
adc
sbb
sbb
sub
sub
pushl
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
int
sahf
ljmp
cmp
lcall
cmp
into
cmp
inc
xor
xor
test
xchg
or
mov
call
xor
les
int3
mov
xor
add
in
test
lods
xor
xor
xor
cmp
lcall
sub
xor
cmp
inc
cmp
cmp
pop
loop
push
cmp
xor
or
jg
fidivs
cmp
cmp
add
mov
test
enter
cmc
aad
clc
aam
fdivrs
fdivl
lock
pop
jge
jne
cld
push
add
or
adc
pop
clc
das
stos
sbb
and
and
sub
sub
xor
aas
fidivrs
inc
cmp
cmp
pop
cmp
loopne
sahf
cmp
insb
cmp
je
jl
cmpb
jmp
adc
push
mov
nop
xchg
cwtl
mov
jg
mov
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
sbb
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jbe
dec
mov
cmp
pop
bound
mov
xor
inc
xor
xor
cwtl
xor
xor
sub
xor
xor
cmpsb
cmp
fldl
add
xor
and
pusha
xor
fdivrp
hlt
fwait
in
or
or
ss
sahf
int3
shlb
aam
call
pushl
fdivs
fdivl
loopne
in
call
ss
ss
add
add
or
or
decl
lock
adc
adc
aaa
sbb
and
and
sub
sub
xor
call
pushl
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
mov
pop
mov
aaa
test
mov
nop
aaa
xchg
aaa
cwtl
adc
ja
mov
dec
mov
mov
test
jg
aaa
shlb
aaa
enter
shlb
aam
fdivs
fcompl
in
mov
aaa
hlt
xor
aaa
add
hlt
add
or
adc
adc
sbb
in
clc
mov
cmp
fdivrl
call
test
cmp
pop
sahf
jl
cwtl
cmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
or
je
jl
test
mov
cmp
movsb
cmp
mov
mov
mov
cmp
and
movsl
mov
lods
inc
inc
inc
xor
in
incb
push
movsl
movsb
fs
lret
lods
jl
div
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
aaa
stos
mov
mov
lret
aaa
ljmp
gs
push
aaa
mov
mov
jne
repnz
add
daa
push
mov
push
and
add
jns
outsb
icebp
add
push
mov
push
push
shr
sub
gs
push
addl
sub
add
sahf
mov
push
xchg
sub
sub
xchg
adcl
and
mov
cwtl
lcall
or
sub
add
mov
pop
adc
push
jmp
cmpsb
dec
out
test
add
mov
sub
notb
add
push
sub
sub
push
add
ret
xor
aas
outsb
nop
das
es
inc
or
jbe
fsts
gs
sub
inc
movsb
add
or
push
movsb
or
jmp
sbb
call
test
dec
imul
xchg
sbb
std
std
xor
cmp
sub
je
jae
lods
nop
mov
xor
push
fs
cld
add
jl
or
mov
test
incl
jb
hlt
adc
pop
and
add
sub
xor
addr16
adc
add
xchg
mov
or
div
add
std
fs
jbe
roll
shr
aas
rolb
mov
jo
es
ja
xor
aaa
pop
shll
mov
scas
test
cmp
and
mov
pop
lret
jp
mov
sbb
fwait
aam
and
or
or
adc
loop
nop
mov
mov
xorb
leave
or
mov
andl
jbe
or
push
inc
pop
rol
imul
pop
ljmp
pop
pop
fsts
dec
sbb
and
or
pop
std
imul
lea
mov
jmp
call
xchg
and
testb
adc
adc
hlt
sti
sbb
adc
push
call
add
cs
mov
mov
pushl
mov
or
or
repnz
fistps
adc
mov
pop
push
add
dec
add
or
dec
jmp
clc
pop
add
mov
or
lret
out
or
clc
dec
inc
loop
test
popa
jl
lea
xor
movsl
movsb
into
sbb
jbe,pn
dec
cmp
cmp
adcl
and
or
push
iret
mov
jo
dec
cmp
lea
xor
popa
cmp
je
clc
push
mov
cmp
pop
fsubl
and
test
add
inc
aam
test
mov
sbb
jo
mov
lods
movsl
xchg
sahf
cmp
popa
lret
mov
xchg
and
sub
push
loope
add
jb
xchg
sub
ficomps
or
push
fs
js
shrb
add
or
sbb
stos
sbb
mov
cs
pop
push
jecxz
pushl
pop
add
fwait
dec
and
inc
push
xor
stos
add
sbb
push
pop
pusha
add
add
or
sti
mov
sub
adc
jne
mov
mov
sub
mov
push
and
sbb
mov
and
mov
sbb
adc
xchg
mov
push
push
mov
dec
cs
and
inc
jo
sub
cmp
adc
dec
sarb
dec
sarb
mov
inc
xchg
mov
mov
mov
test
sub
iret
pop
enter
mov
orl
pushf
adc
mov
sub
repnz
adc
dec
sarb
rcr
push
testl
push
pop
push
es
jge
mov
mov
cmp
movsb
jmp
lahf
pushf
cmpsl
daa
and
addl
inc
inc
mov
inc
adc
push
in
push
in
mov
aad
mov
mov
dec
in
mov
loope
mov
xchg
push
jmp
or
or
jne
lods
add
lds
jne
pop
push
mov
push
mov
add
mov
mov
loopne
xchg
jnp
xchg
lods
cmp
cmp
lcall
sahf
sub
mov
mov
cmp
pop
sub
mov
pushf
inc
mov
adc
popf
push
and
push
fs
sbb
inc
dec
adc
dec
xchg
sub
xlat
rol
adc
sbb
pop
cli
sbb
and
and
jmp
dec
xchg
push
std
pop
xor
das
and
jl
add
ss
or
push
dec
ret
call
sub
and
call
test
push
mov
addb
and
dec
inc
rol
xchg
jne
push
push
cmp
popa
or
dec
adc
cwtl
cs
push
and
pop
inc
mov
test
sbb
call
inc
lods
jmp
jb
add
sub
adc
loope
inc
and
pop
lret
mov
sbb
push
add
das
mov
ja
add
in
push
adc
and
mov
inc
add
inc
cmp
sub
fwait
stc
push
add
lea
dec
inc
and
sbb
movsl
sbb
jg
push
add
pop
xor
ret
sbb
xor
mov
fistps
adc
or
gs
jbe
push
fstpt
mov
or
je
push
xor
repnz
ficoml
or
sbb
mov
sub
add
or
cmp
add
inc
mov
dec
push
mov
mov
push
orb
es
add
mov
pop
pop
add
fistl
insb
add
sarl
sbbb
and
cltd
paddusb
push
testl
fistpl
inc
cmp
adc
mov
ret
inc
inc
mov
test
xor
mov
pop
jno
insb
mov
fdivrs
lret
adc
fstpt
sub
sbb
inc
cmp
inc
fisttpll
les
popf
cmp
and
cmp
mov
in
and
es
add
lods
sbb
addr16
addr16
jnp
adc
jg
xchg
push
iret
repz
insb
fs
push
dec
inc
add
xor
xor
jmp
and
std
add
dec
sub
lret
and
add
repz
inc
pop
nop
inc
push
fs
mov
mov
gs
add
push
shrl
push
xor
jns
call
push
or
int3
repz
jnp
and
addr16
cmp
inc
push
dec
lret
push
push
add
pop
push
xlat
mov
cltd
jle
add
cmp
enter
push
nop
add
sbb
enter
popa
hlt
sub
sbb
fs
mov
push
adc
cmp
cltd
faddl
stc
adc
cs
inc
pop
jnp
push
xor
pop
or
ret
xchg
repz
stos
dec
mov
lcall
add
cmpsl
sub
mov
incl
cltd
inc
sbb
xor
enter
daa
es
shlb
daa
lcall
daa
imul
sbb
movsb
daa
daa
daa
add
daa
sub
inc
enter
sub
xchg
cmpsb
jns
sub
sub
sub
sub
sub
and
sub
sub
sub
sub
and
or
jne
push
jb
testb
cmp
or
and
cmp
push
adc
and
icebp
add
jne
and
sub
dec
inc
mov
sub
js
lods
subl
repz
rolb
sbb
cmp
test
push
lock
jp
fldcw
or
clc
fs
dec
sbb
dec
in
sbb
addr16
rclb
nop
test
call
inc
xchg
outsb
and
testb
test
sbb
sub
push
jg
and
mov
out
adcb
addr16
pop
mov
rcrl
mov
mov
jo
jle
mov
movhps
addr16
adc
inc
ja
data16
addr16
mov
iret
inc
push
pop
mov
or
cwtl
sub
test
jp
push
addr16
xchg
test
test
adc
mov
addr16
sar
sbb
adc
nop
andb
or
daa
addr16
adc
jae
enter
addr16
sub
add
cltd
mov
push
movsb
cmp
push
mov
scas
and
mov
mov
cld
add
sub
sbb
and
dec
cltd
inc
mov
adc
push
xchg
mov
cltd
cmp
push
call
nop
mov
rol
xor
cltd
fdivrs
inc
fsubl
dec
outsl
shlb
mov
xor
dec
pushf
push
cltd
or
test
add
sbbb
sbb
sub
cltd
xchg
sbb
jbe
add
or
add
mov
rclb
scas
out
pusha
and
jmp
adcb
pop
ljmp
mov
xor
cltd
sub
and
movsl
inc
mov
add
cmp
mov
push
pop
aam
adc
test
dec
cmp
sub
mov
adc
push
imul
imul
movsl
inc
fisttpll
adc
outsl
push
pop
aam
adc
mov
rorl
add
sub
out
dec
mov
inc
sub
adc
push
in
adc
pop
jns
rclb
rol
enter
mov
pop
cmp
mov
dec
mov
adc
push
scas
pop
adc
inc
or
stos
movsl
inc
fstl
sbb
out
push
sub
nop
and
popa
fdivs
jbe
inc
fldenv
adc
xor
push
cmp
call
pop
jb
inc
cmp
loopne
inc
shlb
and
stos
adc
pop
inc
inc
pushf
pusha
add
inc
call
pop
adc
inc
outsb
push
lea
dec
mov
shl
cwtl
fs
and
inc
push
jmp
or
adc
inc
call
push
addl
push
xor
rcrl
xchg
adc
push
xchg
jecxz
mov
adc
push
sub
or
test
dec
aaa
or
dec
pop
or
popf
and
popf
out
adc
icebp
mov
pop
rol
and
inc
push
mov
pop
adc
mov
fcoms
sub
mov
mov
aas
mov
jmp
nop
cli
xchg
mov
and
add
enter
adc
mov
leave
inc
pop
inc
or
sbbb
je
add
movsb
xor
nop
push
add
and
adc
push
popa
mov
adc
movl
xchg
jae
pop
push
ds
sub
sub
push
add
sub
not
pop
adc
into
mov
mov
lret
hlt
inc
xor
push
inc
pop
xchg
cltd
sbb
mov
mov
inc
mov
pop
cmp
dec
and
je
leave
repnz
mov
outsl
mov
pop
bound
call
nop
pop
jg
pop
ret
pop
dec
adc
cmp
mov
adc
fdivs
lds
pop
stos
add
push
test
out
test
or
call
add
cmp
add
fdivrs
mov
sub
xchg
nop
rorb
and
cmp
mov
add
push
orl
mov
mov
adc
cmp
ja
mov
or
mov
hlt
aas
lock
jl
cmp
fs
xor
pop
fldt
stos
add
inc
out
jmp
pop
jb
hlt
out
push
addl
xor
push
sub
or
fsts
repnz
inc
or
inc
inc
and
add
cmpsb
cmpsl
pop
frstor
dec
cmpsb
sbb
pmulhuw
fmul
fdivrl
mov
mov
push
call
addr16
pop
das
mov
fs
insb
sub
sub
xor
fmull
dec
repnz
fsubrl
fwait
pop
mov
push
test
add
mov
lret
or
mov
mov
in
or
les
push
mov
dec
cltd
cmpsl
sub
pusha
add
out
inc
mov
mov
sub
dec
fcmovne
xor
lods
mov
or
jne
sbb
pop
add
in
sbb
sbb
bound
movb
sbb
enter
sbb
push
or
push
adc
dec
clc
pushf
dec
sbb
jecxz
loopne
loopne
dec
test
nop
loopne
dec
push
repnz
loopne
in
scas
mov
push
inc
daa
in
fdivl
or
add
sub
mov
push
test
jmp
sbb
xchg
xorb
jnp
inc
cs
sub
fwait
roll
fmul
sbb
push
inc
arpl
cltd
loopne
cwtl
and
cltd
and
jecxz
sub
push
inc
cltd
push
mov
push
cmp
push
adc
fcoml
and
xorl
lea
push
stc
cltd
sbb
xchg
xor
lods
push
xor
jmp
jo
mov
cmp
adc
cltd
adc
popf
frstor
leave
sub
cmp
test
popa
mov
dec
mov
daa
and
mov
sbb
fimuls
mov
nop
daa
scas
out
cld
loope
lret
mov
repz
shll
stos
jmp
xchg
jl
arpl
add
adcl
push
ds
xchg
add
sub
iret
je
sbb
test
pop
pop
daa
inc
cmpsl
shlb
shlb
push
nop
inc
push
adc
les
enter
sbb
mov
outsl
es
inc
enter
adc
call
mov
rolb
sbb
jp
jnp
sub
roll
mov
fcomi
fimuls
and
adc
push
pop
aaa
mov
ret
dec
cmp
and
inc
sub
pop
mov
imul
fucom
or
addb
sbb
adc
and
fsub
sbb
mov
inc
push
inc
inc
icebp
stos
push
xchg
mov
push
repnz
and
push
mov
pop
jl
mov
sub
inc
daa
sub
jno
mov
and
pop
push
pushf
inc
pop
adc
or
xor
out
in
enter
arpl
xor
mov
cmp
js
pop
movsb
jne
int
fmull
push
roll
or
je
xchg
fildll
xchg
push
inc
test
or
sbb
add
es
jecxz
jno
adc
xchg
lods
fcmovb
imul
das
push
xor
xchg
mov
popa
adc
scas
mov
cwtl
les
pushf
mov
xlat
ficoml
xchg
cmp
jo
xchg
mov
loope
dec
xchg
push
push
inc
aam
xchg
adc
aam
or
pop
xchg
aam
or
sub
sahf
xchg
push
adc
xchg
pop
cmpb
aam
fnstcw
leave
and
pushf
stos
scas
shrl
xchg
push
and
fsubrs
mov
push
call
mov
mov
xchg
movsl
in
fcoms
es
push
xchg
add
mov
sub
mov
sbb
test
inc
ss
je
push
xchg
jg
inc
xchg
movsl
fwait
je
xchg
fwait
cwtl
sub
push
inc
xchg
inc
and
rcrb
xor
mov
fs
jo
add
mov
push
ljmp
push
xchg
xchg
mov
rorb
xor
mov
xchg
sub
xchg
xor
add
or
jmp
call
xchg
mov
xchg
movsl
mov
loopne
add
enter
stos
lret
leave
rorb
test
movsb
icebp
jnp
in
sub
xchg
dec
push
sbb
sub
mov
add
xor
cmpsl
lret
int
cmp
pop
adc
ss
int
jb,pt
pusha
add
mov
enter
aaa
mov
loope
clc
pop
push
and
adc
repnz
leave
call
mov
mov
adc
pop
mov
push
in
mov
mov
pop
insb
push
fsts
pushf
push
push
cmpsl
lods
inc
ss
jb
popf
mov
cmp
cmp
inc
cmp
jne
inc
cmp
inc
ffree
xchg
rcll
xchg
lcall
push
adcb
sbb
adc
in
dec
sahf
in
mov
or
inc
loopne
dec
xchg
mov
push
add
add
xor
inc
pop
sub
add
call
aam
aaa
fisttpl
cmp
enter
and
cmp
fildl
cmp
loop
fucomi
nop
adc
push
sbb
xchg
inc
sub
cli
iret
stos
leave
mov
pop
lret
push
in
dec
loop
jmp
jns
fistl
push
push
adcb
fldt
dec
push
stos
pop
fistpl
cmpsb
ret
push
loopne
and
inc
fistl
sub
je
fucomi
adc
pusha
mov
cmpsb
dec
push
out
mov
inc
or
sub
fdivs
test
loopne
aaa
jl
xlat
xlat
out
jns
adc
jno
rcrl
fildl
fldt
call
test
sub
or
adc
fwait
inc
fistl
fldt
lea
add
xchg
daa
pop
and
cmp
dec
or
shrb
pop
outsb
orb
xchg
daa
loop
mov
fistpll
fisttps
mov
icebp
adc
fucomip
in
mov
leave
sar
lock
cmp
iret
loope
xor
bound
repnz
jns
xor
sub
dec
pop
jns
inc
and
jns
jns
sbb
add
cld
mov
in
jns
jns
fdivrl
les
mov
mov
das
das
cltd
mov
cmpl
imul
push
mov
in
das
das
cmp
jb
sbbl
or
enter
mov
sbb
and
mov
push
jb
xorl
pop
cmp
inc
xchg
mov
sbbl
jo
gs
nop
mov
and
cmp
cmp
nop
sbbl
mov
enter
idivl
and
lret
mov
sbbl
cmpsl
mov
inc
push
xchg
mov
sbb
and
jo
gs
nop
orl
mov
enter
and
and
hlt
inc
push
jb
mov
mov
mov
test
sahf
xor
daa
int
or
sahf
jp
mov
pop
and
add
push
sbb
adc
xor
daa
int
adc
sbb
jns
mov
int
dec
jae
and
and
pushf
xor
daa
cmp
les
jb
mov
mov
daa
int
dec
inc
mov
daa
add
jl
dec
or
xor
push
addb
push
arpl
and
adc
sub
add
dec
mov
rclb
xor
test
add
mov
js
or
adc
rol
inc
xor
sub
and
mov
cmp
push
popl
cwtl
sub
push
jmp
add
fmuls
inc
rol
push
repnz
mov
mov
inc
sti
testl
pop
icebp
fcomps
or
mov
ja
mov
pop
rolb
jg
rcl
mov
adc
push
and
inc
lds
xor
aam
jbe
add
pop
test
mov
cwtl
xchg
xchg
xchg
sbb
rorl
xchg
into
inc
or
dec
aaa
shrb
packsswb
les
dec
shld
mov
add
mov
shrl
mov
bswap
and
adc
xor
mov
bswap
rcrb
sub
xor
jl
rcl
sub
mov
mov
and
bswap
xchg
dec
cwtl
gs
sarl
push
xchg
outsb
sbb
push
sbb
mov
cmovbe
stos
adc
sysexit
lret
add
js
shlb
sysenter
lret
xor
shlb
int3
cmovbe
or
sub
xchg
adc
sbbb
movsl
insl
adc
andb
cmp
jecxz
mov
and
xchg
jne
jle
xchg
mov
xchg
or
arpl
int3
dec
xchg
mov
iret
scas
push
test
fdivl
dec
dec
sbb
push
push
xchg
mov
dec
movsb
lcall
or
sbb
in
push
xchg
out
mov
es
xchg
mov
orb
test
jmp
mov
sub
in
sub
insl
sarb
gs
inc
lock
pop
or
mov
cmp
or
int
or
aam
jo
scas
push
rorb
sub
xchg
push
lret
cmp
push
or
add
push
lret
add
rcr
or
push
fimuls
js
cld
fsubr
ja
mov
enter
push
xchg
fcoml
push
call
popf
testl
or
adc
push
out
inc
xchg
call
sbb
pop
lret
or
dec
out
sub
insl
sbb
rcrb
or
xchg
mov
push
xchg
push
adc
xchg
mov
inc
popa
lods
or
mov
adc
test
adc
pop
sbb
mov
lcall
pop
xchg
or
call
push
or
dec
ja
sbb
lret
dec
loope
rclb
push
or
pop
xchg
inc
int
mov
movsl
aad
ss
adcb
push
mov
or
gs
xor
cs
fwait
and
lret
xor
adcl
lds
xchg
xchg
fldcw
mov
repz
sub
js
je
nop
imul
xchg
movsl
or
mov
rcrb
sahf
popa
das
or
sub
xchg
out
movsl
sub
and
push
or
shrb
hlt
jp
sahf
repnz
lock
xor
gs
or
mov
push
xchg
sahf
cmpsb
stos
jg
inc
and
aad
xchg
xor
xor
xchg
into
adc
or
sbb
push
push
sbb
and
sbb
sub
mov
pop
or
or
or
add
ja
mov
or
and
or
inc
or
enter
leave
je
aad
lret
sbb
inc
movsl
ret
push
push
or
xchg
or
pushf
or
lret
mov
xchg
fcoml
lock
push
pop
scas
or
xchg
mov
or
call
repz
sbb
mov
stos
xchg
or
sahf
repz
mov
mov
pop
cmp
xchg
sub
xchg
and
cmp
shrb
mov
dec
or
stos
pop
inc
sub
fimuls
adc
push
or
js
adcb
cmpsl
sub
gs
xor
sub
dec
inc
sub
scas
or
repnz
or
sub
adc
xchg
mov
adc
or
jmp
scas
addr16
mov
dec
cs
lret
push
ja
push
or
out
mov
or
sub
jb
or
push
cmp
dec
sbb
mov
pop
pop
sub
pop
sub
andb
movsl
pop
xlat
inc
faddl
pop
loope
jns
adc
mov
shlb
int
int
sub
test
addb
mov
push
adcb
enter
cmpsb
push
mov
sbbb
lods
das
mov
jb
in
mov
push
das
das
je
test
jmp
ja
xor
ds
push
testb
in
xor
sbb
lock
xor
cltd
cmp
xchg
rcll
push
and
pushf
test
push
sbb
adc
or
push
fldcw
mov
jmp
mov
and
test
ds
adc
cmpsb
push
testb
push
out
sahf
out
cmp
jl
int3
faddl
sbb
ss
repz
push
pop
outsb
xor
iret
repz
test
enter
cmp
lock
or
push
ds
pop
repz
repz
mov
int3
out
push
stos
adc
cmp
jbe
sahf
out
mov
out
testl
xor
ja
out
dec
pop
insb
addb
shlb
call
pop
ret
push
cmp
xor
push
inc
ret
dec
adc
pop
lahf
out
negb
push
push
mov
repz
mov
add
xor
repz
clc
mov
mov
add
iret
inc
mov
xchg
aaa
add
les
iret
xor
pop
clc
mov
mov
cmp
or
add
test
mov
push
adc
push
adc
xchg
iret
rorl
sbb
sbb
xchg
out
sahf
out
sbb
sbb
mov
xchg
push
push
pop
sahf
mov
and
cmp
out
and
js
jns
imul
cmp
sahf
call
out
and
lcall
mov
mov
outsl
inc
enter
enter
add
dec
xchg
jns
out
push
push
cmp
adc
xor
out
add
xchg
in
loopne
repz
fstp
ror
enter
repz
mov
cmp
rep
mov
repz
nop
mov
iret
repz
je
insb
push
fs
pop
pop
push
iret
repz
push
dec
dec
inc
inc
cmp
iret
repz
xor
sub
imul
add
nop
fsub
jns
out
test
push
sahf
sub
pop
movsb
jl
iret
repz
push
dec
inc
xor
lcall
in
shl
jns
out
mov
or
repz
lock
int3
test
push
xor
jge
xchg
push
lock
mov
lds
fs
push
inc
sub
pop
or
push
xchg
xchg
xchg
xchg
and
xchg
mov
decl
xor
push
push
add
je
popf
or
pop
xor
pushw
test
aam
mov
inc
in
sbb
ss
jbe
test
or
and
out
jo
mov
jo
push
xchg
add
and
aas
imul
xchg
in
mov
mov
daa
testb
out
xlat
push
mov
mov
push
inc
add
mov
adc
mov
mov
jg
pop
cmpb
inc
int
mov
pop
shll
jbe
push
mov
cmp
sarl
sbb
mov
mov
add
push
xchg
aas
in
dec
enter
shrl
inc
es
aaa
inc
pop
shrl
inc
in
dec
xchg
xchg
push
pushf
bound
fisttps
dec
sarb
inc
cmp
or
inc
cmp
mov
dec
pop
xor
aas
repnz
es
push
int3
push
push
es
andb
fsubl
mov
incb
cwtl
daa
movsb
fisttps
mov
pop
fimuls
ret
imul
jno
test
sub
xchg
jl
imul
aas
inc
inc
push
sahf
pushf
add
int
xor
pop
xor
shl
cmp
pop
stos
outsb
cs
outsb
in
enter
inc
outsl
ds
outsl
gs
out
movsl
add
movsl
pop
mov
or
je
shl
or
jbe
fsubl
imul
jbe
subb
add
scas
inc
aaa
mov
jne
dec
mov
push
arpl
testb
add
outsl
and
insl
test
arpl
xchg
sub
movb
lret
add
inc
mov
sbb
sbb
mov
cs
fwait
or
and
or
sbb
out
xchg
xor
decl
dec
add
adc
jo
sub
shll
pop
sub
mov
add
push
pop
adc
cmp
inc
and
addr16
adc
orl
je
sbb
xlat
daa
arpl
xor
xchg
and
lahf
adc
adc
inc
add
sbbl
arpl
rcrl
rclb
inc
inc
arpl
daa
shll
roll
rorb
inc
jae
rcrb
jo
lahf
pop
jno
sbb
xor
shll
lds
adc
dec
adc
scas
pop
add
inc
rcrb
jo
pop
inc
push
imul
shll
or
cmp
xchg
popa
add
add
ja
stos
loop
mov
outsl
inc
int
xor
push
xor
mov
sbb
pusha
pop
inc
xchg
movsb
xchg
cmp
repz
push
pushf
cwtl
xchg
nop
repz
repz
jns
pop
push
pop
dec
inc
inc
cmp
sahf
out
cmp
sub
out
sahf
out
and
adc
inc
ss
add
xchg
hlt
xchg
in
push
in
sahf
out
sahf
enter
jno
out
test
mov
sub
push
fs
jnp
pop
push
dec
mov
push
and
ja
out
add
in
xchg
push
enter
out
mov
iret
jnp
out
mov
daa
iret
repz
inc
cmp
cmp
out
push
adc
lock
loopne
repz
repz
inc
inc
xor
pop
outsl
or
out
pop
sub
loope
jmp
inc
xor
mov
neg
mov
jne
pop
adc
push
roll
cs
adc
cmp
push
pop
cs
clc
mov
mov
jg
cld
pop
enter
or
lcall
xchg
sub
xor
inc
push
ret
aas
fildll
xchg
add
adcl
jns
add
cmp
call
fnstenv
fiaddl
sti
inc
xor
rcr
xor
xor
cmpsb
dec
sar
dec
cmp
ss
ss
nop
ss
test
icebp
aaa
sub
ss
jg
ja
sbb
cmp
cmp
aas
cmp
fstpt
push
ret
icebp
cmp
xchg
push
es
lret
cmp
cmp
cmp
int
dec
test
ret
mov
cmp
add
adc
xor
cmp
cmp
pushl
ljmp
enter
aad
fmull
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
into
ljmp
popa
push
data16
jbe
jnp
cmpl
loopne
xor
movsb
aas
mov
sarl
div
dec
add
inc
fistps
jl
xchg
cmpsb
mov
xor
add
xor
rcrb
xor
xor
mov
mov
xor
xor
into
das
xor
faddl
scas
cmp
xchg
mov
cmp
xor
inc
rcr
add
xor
xor
jmp
outsb
cmp
mov
pushf
xor
xor
xor
xor
xor
or
jmp
xor
xor
xor
dec
mov
ss
mov
ss
lods
ss
pushl
sbb
xchg
mov
pop
ret
loop
cmp
cmp
add
out
xchg
cmp
xchg
sarb
das
xorb
mov
sub
aaa
leave
clc
xor
xor
cmp
cmp
cmp
sarl
push
outsl
cmp
cmp
shlb
aaa
mov
cmp
cli
outsb
cmp
popa
cmp
cltd
idivb
adc
clc
fdivrl
in
cmp
dec
push
add
ja
jle
test
push
mov
inc
cmp
hlt
cmp
inc
ds
ds
ds
and
jg
cwtl
xchg
xor
xor
xor
xor
loope
xor
push
xor
pushl
std
xor
xor
xor
xor
inc
lds
xor
xor
sub
mov
repnz
dec
ss
bound
xorl
ss
es
or
ss
jecxz
cmp
ss
ss
aaa
or
push
add
fbld
push
xor
aaa
addr16
push
sarb
adc
push
cmp
push
out
xchg
jno
cmp
pop
cmpsb
test
mov
mov
dec
sarl
fdivrs
cmc
outsl
push
in
jmp
repz
cmp
cmp
cmp
jg
cmp
cmp
pop
push
jecxz
dec
sbb
jno
jns
jle
xchg
mov
xchg
outsb
sbb
dec
lahf
cmp
push
add
push
add
insb
outsb
sbb
cmp
cmp
cmp
cmp
cmp
cmp
push
push
jno
mov
push
mov
pop
shrl
jg
mov
inc
cmpl
aas
ret
aas
iret
arpl
sbb
ds
js
xor
into
xor
lcall
lea
xchg
xor
xor
xor
xor
xor
clc
or
xor
jo
in
pop
xor
xor
bound
fldl
or
cmp
insb
and
jmp
ret
xor
xor
adc
push
fs
aad
ss
ss
arpl
stos
add
ss
ss
add
sbb
outsb
adc
jne
jle
sbb
pop
decb
sbb
sub
ret
clc
in
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
aas
cs
dec
cmp
arpl
outsb
ret
gs
cmp
cmp
scas
in
inc
or
pop
adc
or
cmp
sub
mov
leave
clc
aas
push
fbstp
divb
data16
mov
ss
xor
xor
xor
xor
xor
fbld
sbb
xor
xor
xor
xor
xor
xor
pushl
xor
xlat
xor
ja
mov
pushf
ss
mov
push
add
into
and
xor
leave
test
pop
loop
cmp
pop
cmp
lcall
cmp
mov
jmp
std
cmp
mov
ds
imul
mov
lret
aas
inc
xor
jl
jecxz
or
xor
or
out
sub
jg
cmp
cmp
dec
cmp
pop
cmp
pop
jno
outsl
cmp
xor
xor
xor
xor
xor
xchg
negb
pop
ucomiss
or
pop
dec
es
xor
mov
dec
add
arpl
pop
popa
icebp
adc
pusha
out
xor
xor
mov
push
je
js
sbb
jae
ret
popa
cld
or
test
pop
sbb
jb
inc
daa
mov
mov
rorl
mov
mov
dec
int3
inc
fcompl
in
xor
add
cmp
push
int3
xchg
sbb
mov
mov
jb
out
ret
sbb
gs
mov
cmpsb
test
mov
sub
lds
loopne
inc
sub
fsubrp
xor
out
xor
or
or
adc
adc
sbb
sbb
adc
dec
jbe
xor
mov
adc
push
gs
inc
aaa
xchg
pop
xor
xor
xor
pop
sub
je
jl
or
xor
xor
rorb
xor
les
lret
xor
xchg
inc
add
xor
nop
push
jbe
xor
dec
call
jo
jbe
push
xor
outsb
jo
std
or
xor
cmp
cmp
cmp
mov
mov
fdivrl
pusha
xor
cwtl
out
push
loopne
or
adc
sbb
sub
orl
xor
xor
xor
xor
ss
jge
inc
add
sub
pop
cwtl
fs
hlt
xor
xorb
dec
xchg
sbb
adc
sbb
xor
clc
jmp
sbb
in
call
xor
xor
or
ds
add
loop
adc
pusha
jg
push
sbb
xor
aam
xor
mov
std
inc
xor
xor
xor
push
xor
pop
xor
mov
sar
fs
jo
je
js
jl
andb
jg
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
into
adc
jo
shlb
int3
fimull
sbb
sub
xor
xchg
add
sub
mov
fistpl
outsl
sbb
adcb
xor
sahf
and
or
fdivr
movsb
mov
add
inc
inc
pop
andb
out
xor
add
add
mov
add
pop
pop
push
or
or
or
or
or
inc
jp
push
adc
adc
push
adc
les
imulb
or
pop
sbb
adc
adc
adc
add
data16
mov
or
rolb
loop
adc
pusha
add
pop
mov
adc
add
cmc
add
inc
mov
jb
dec
mov
jge
incl
cmpsb
add
push
adc
pop
and
xor
inc
mov
adc
shl
and
bound
js
or
leave
nop
xor
and
les
aaa
mov
and
cmpsl
xchg
adc
dec
popa
mov
nop
xchg
inc
or
adcb
rcrl
add
add
add
cmp
cmp
incl
lods
push
adc
pop
popa
jno
and
adc
inc
repz
lods
or
xor
adc
sbb
loope
icebp
mov
mov
add
or
push
xor
js
aad
add
jo
or
aaa
cld
pop
adc
adc
sbb
cli
and
mov
inc
jnp
ljmp
sbb
and
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
cs
push
stc
or
xchg
jg
or
push
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
call
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
sbb
add
mov
pop
pop
mov
popl
movb
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
ljmp
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
cmpsb
jp
push
out
or
cld
push
pushl
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
call
mov
jmp
sbb
add
xchg
lods
mov
out
pop
jb
mov
or
push
mov
lcall
int
inc
fwait
sbbb
mov
dec
jp
push
gs
idivb
jg
hlt
push
add
stc
loope
mov
sar
andl
fstp
adc
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
lcall
icebp
paddb
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
cmpl
fbld
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
hlt
es
or
icebp
aas
std
cli
push
push
jg
je
idivl
cmp
sub
inc
scas
inc
mov
jg
cs
pushl
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
mov
lcall
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
push
xor
jmp
lcall
pop
hlt
lret
movsb
add
filds
lea
jg
gs
std
xorb
jg
das
sar
aad
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
lcall
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
idiv
call
or
adc
and
sbb
xchg
jo
and
out
test
pushl
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
and
xchg
sub
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
mov
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
jg
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
adc
xchg
and
push
push
jo
pusha
imul
add
mov
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
pushl
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
lock
cmp
fmull
enter
jecxz
scas
incl
in
pop
mov
sub
mov
dec
incb
fisubrl
loopne
sti
lds
mov
or
cld
inc
or
bound
repnz
jg
mov
aad
jbe
test
mov
mov
iret
push
out
jbe
push
sbb
stos
icebp
pop
incb
jno
outsl
sti
ljmp
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
mov
sar
xorl
push
fisubrl
imul
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
fistpll
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
decl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
fistpl
insl
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
mov
insb
sbb
cwtl
inc
mov
lock
jo
aas
repz
sbb
lock
in
jmp
test
or
out
sbb
aaa
clc
push
std
mov
jmp
test
mov
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
fisttpl
out
rolb
pop
or
or
fidivrs
les
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
mov
mov
hlt
dec
mov
xlat
inc
incl
fdiv
jg
mov
jg
mov
sub
addr16
fucomi
call
jp
std
adc
cltd
or
mov
ret
loop
cmc
mov
add
lock
pop
pop
div
cld
testl
sbb
scas
stc
adc
insl
xlat
lahf
loope
jae
jmp
sub
jg
mov
jg
incb
into
out
icebp
mov
loope
mov
cmpsl
popf
in
pop
and
mov
fbstp
nop
xchg
test
das
ss
out
cmp
pop
mov
js
data16
decb
adc
cmc
decb
dec
adc
call
imul
popf
dec
add
cmp
mov
cmp
int
add
push
pop
aaa
std
ffreep
cmp
dec
inc
sbb
jnp
jg
xchg
fimull
ret
rorb
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
or
cmp
or
jp
dec
add
push
xor
xor
outsl
adc
iret
fdivrl
xchg
lcall
jo
and
pop
gs
sub
jo
sarl
pop
movsb
and
jno
ret
fs
or
sbb
jmp
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
mov
int3
xchg
imul
in
add
jmp
std
mov
daa
jmp
faddl
or
inc
push
jae
mov
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
mov
fsts
mov
or
add
clc
or
push
sti
pop
inc
add
outsb
nop
cltd
push
push
nop
mov
hlt
incl
test
and
add
xor
out
push
test
and
data16
outsl
push
stc
jo
outsb
lods
rorb
ds
lcall
imul
pusha
lahf
push
ds
cmp
out
cmpb
dec
dec
pop
movsl
ret
sub
in
xchg
mov
sahf
daa
jnp
dec
js
jmp
in
mov
fnstcw
mov
ljmp
in
daa
xchg
sbb
push
push
or
sub
out
inc
movb
xorl
sub
test
scas
lock
add
pop
and
or
pop
inc
cmp
ljmp
clc
mov
daa
mov
ret
mov
pusha
jo
es
stos
leave
sub
or
jo
mov
call
mov
fs
mov
xlat
jp
mov
mov
mov
cmp
call
jg
int
mov
popf
inc
xchg
mov
and
pop
xchg
enter
int3
clc
sub
mov
and
scas
popa
lret
mov
sub
inc
imul
and
adc
in
mov
or
imul
xchg
call
incl
lcall
cmpsl
mov
movsb
inc
aaa
outsb
sbb
nop
rcr
fwait
fwait
lods
jmp
sub
add
mov
jne
fldt
out
loopne
and
pop
in
stos
fnstcw
dec
ljmp
or
add
mov
inc
push
movsl
clc
insb
insb
pop
dec
xchg
pushl
ret
fidivrs
lods
enter
mov
ss
fdivr
pushl
cli
or
and
dec
repnz
fcoms
ss
and
xor
mov
pop
fs
xchg
or
pusha
xor
pusha
push
mov
lcall
decl
mul
lret
xchg
dec
pop
push
rcr
push
lea
sub
cmp
shll
aad
adc
ljmp
ret
mov
flds
ss
in
or
dec
test
push
lahf
pop
cld
decl
xchg
out
pop
push
ret
sub
jne
dec
xchg
mov
jle
in
mov
lcall
lea
mov
out
push
add
lock
or
in
push
mov
loopne
scas
clc
inc
roll
inc
mov
lock
cmpsb
subl
jnp
sub
lcall
push
ss
push
cmp
pusha
dec
outsl
fdivrl
xchg
and
into
sub
cmp
daa
int3
inc
lahf
and
jmp
sub
mov
cmc
mov
pop
repz
push
call
lcall
push
cmp
mov
hlt
loopne
pop
jo
dec
or
jecxz
push
dec
enter
push
mov
inc
negl
pushf
in
jl
out
push
adc
decl
stc
dec
outsl
dec
pushf
pop
lcall
imul
inc
shrl
push
mov
pop
sub
ljmp
dec
lahf
fwait
pop
jo
inc
js
ljmp
add
fcoml
dec
stos
mov
inc
out
jnp
jne
cltd
lea
inc
cmc
loope
ret
fstpt
and
add
jne
icebp
movsl
sub
mov
rolb
in
leave
pop
leave
std
jnp
ror
fdivl
es
hlt
pop
dec
movsl
cmp
sarb
lods
mov
jg
pusha
sub
jbe
mov
pop
lret
push
adc
xchg
or
divb
mov
pushl
pusha
xchg
aas
or
fdivrs
pushf
fisttpll
add
xchg
cmpsl
jns
iret
mov
jmp
mov
fbstp
cmp
imul
out
xchg
imul
movsb
cli
pushl
leave
sbb
xchg
outsb
js
test
movsl
mov
scas
mov
je
jmp
ljmp
jmp
xlat
mov
call
adc
in
pop
popa
pop
cmc
pushl
popa
notl
jmp
jle
outsb
push
jl
adc
repnz
mov
cmpsl
inc
sbb
lahf
insl
clc
cmp
and
mov
rolb
in
mov
jg
arpl
xchg
jno
gs
mov
mov
jbe
mov
pop
and
dec
stc
ljmp
or
dec
add
mov
ljmp
xchg
cli
fs
testl
adcb
mov
int
js
sbb
mov
test
pusha
test
add
ja
cs
or
mov
push
jp
pop
imul
int
rcrb
push
xchg
pop
xchg
mov
push
jmp
push
push
xor
enter
xor
orb
fldcw
cmpsb
pushl
cs
add
jnp
cmpsb
outsl
in
jp
inc
hlt
and
sbb
jae
lcall
incl
scas
dec
insb
push
or
sahf
bound
test
mov
mov
jmp
je
mov
ret
cmpsb
loop
cli
xor
out
jecxz
sbb
add
jecxz
out
jns
fistl
data16
adc
or
cmc
int3
test
lds
inc
and
push
std
inc
xlat
sbb
jl
mov
insl
ds
inc
ljmp
stos
imul
call
xor
xchg
push
cmpsb
iret
push
jno
aaa
mov
pop
cmpsb
dec
and
push
popf
adc
std
sub
iret
daa
push
out
insb
arpl
cmpsl
and
add
jmp
jnp
clc
call
and
add
pop
dec
pop
xchg
add
dec
ja
or
pusha
cld
pop
fsubs
testl
mov
mov
add
pavgb
cmp
cmpsl
xor
push
mov
subl
xchg
arpl
imul
jo
mov
and
clc
ljmp
pop
push
rclb
jns
imul
adc
call
jg
pop
scas
and
pop
mov
outsl
out
mov
xor
xchg
repz
mov
dec
arpl
pushl
mov
lcall
ss
push
push
mov
sub
ljmp
or
mov
insb
sahf
loope
pop
push
sub
jbe
cmpsb
shrl
sahf
incb
dec
dec
notl
push
jmp
aad
test
add
cld
push
mov
lret
shll
sub
adc
aad
cs
xorb
ja
jmp
xor
cwtl
sbb
call
icebp
in
ljmp
adc
xchg
fwait
stos
stos
add
mov
dec
test
xchg
pushl
notl
fs
frstor
and
test
fiadds
rorb
jno
call
dec
fst
jno
inc
loop
dec
adc
loope
xchg
test
incl
sarb
call
add
in
xor
xor
in
pop
fdivr
fstpt
jp
bound
int
les
outsb
jo
ficoms
push
lret
out
pop
mov
decl
jne
cmpb
in
xlat
incb
xchg
icebp
andl
adc
clc
adc
clc
mov
sbb
mov
call
push
xchg
jle
mov
stos
or
aad
data16
cltd
add
adc
jne
push
fs
call
inc
out
insl
sub
mov
lcall
cmc
shr
testl
pushl
inc
pushf
sub
xchg
test
shl
jnp
clc
add
rorb
dec
je
lods
sbb
mov
ljmp
mov
std
jne
mov
push
xor
or
ljmp
jl
xchg
dec
mov
sti
aam
push
adc
daa
push
inc
enter
xchg
push
jns
movsb
mov
scas
test
rorb
test
cmpsl
mov
lcall
testb
cli
mov
jmp
jbe
jmp
add
insb
fwait
test
mov
mov
loopne
sti
add
dec
jge
and
push
outsb
cmp
push
shlb
pushl
ljmp
jnp
xor
out
inc
sti
setae
sub
lcall
jmp
fwait
dec
xlat
adc
adc
lea
fsubrs
jnp
lods
jnp
lods
jle
and
incl
cld
cld
daa
sbb
dec
and
shll
fcoml
inc
push
push
inc
sbb
hlt
mov
pop
clc
fwait
add
inc
mov
push
jg
incl
scas
jle
mov
cmp
and
fsubs
sbb
mov
aas
push
push
jae
add
dec
sub
orl
push
ret
sbb
lret
sub
dec
decl
repnz
cs
decb
push
dec
sbb
pop
sub
adc
mov
push
lds
jge
xchg
cwtl
jb
mov
repz
add
rclb
std
icebp
lahf
jg
pop
adc
mov
out
dec
sub
hlt
push
and
int3
mov
jg
incl
inc
mov
jmp
cli
test
mov
call
fs
mov
sub
gs
pop
test
push
add
mov
sub
das
pop
sub
incl
pop
add
dec
mov
dec
pop
lret
in
and
cmp
andl
ret
dec
cmp
aaa
jne
add
test
loopne
push
std
pxor
inc
hlt
icebp
js
les
and
iret
mov
leave
ljmp
cmc
sahf
pop
std
gs
nop
call
jb
cmp
call
xor
and
lods
add
xor
sbb
mov
std
and
lods
iret
aas
cmp
jmp
xchg
addr16
scas
jne
dec
dec
gs
leave
fnstsw
inc
pop
or
lret
mov
adc
call
mov
fsubp
sbb
sub
notb
mov
outsb
fs
xchg
aaa
stos
pusha
imul
fs
jae
or
aam
jo
dec
inc
outsb
push
ja
add
insl
cmpsb
jb
or
push
fsubrs
sub
sbb
jg
incl
adc
mov
jno
xlat
bound
mov
pop
test
incl
push
or
aam
repnz
nop
mov
data16
sub
push
xchg
std
add
mov
xchg
or
movsb
orl
pushf
imul
cmp
in
mov
mov
pushl
xor
adc
lea
repz
sbb
push
sarb
adc
pop
hlt
xchg
add
mov
pop
out
and
jp
and
divl
xor
xor
xor
imul
lods
and
daa
incl
jmp
and
xchg
or
mov
mov
test
cmpsb
push
fdivl
push
fsubr
cmp
incl
add
add
cmp
sub
ljmp
or
adc
fisttpll
add
mov
jns
mov
cld
or
xchg
es
sub
sub
xchg
sbb
lret
mov
and
enter
ja
and
inc
mov
and
fstl
add
xchg
rorb
cmpsb
and
jo
sub
fcomip
mov
pop
outsb
sub
aaa
sub
outsl
mov
jnp
popf
jmp
sar
jmp
cmp
popf
xor
xchg
dec
es
cmpsl
pop
pop
xchg
sbb
cmc
mov
add
sub
incl
arpl
mov
lahf
mov
or
fsubrl
pushl
push
and
iret
cs
sub
and
xchg
pop
inc
push
xchg
mov
push
imul
sub
lcall
mov
mov
cmp
in
mov
imul
sbb
jmp
jl
and
dec
fisubl
xor
or
jmp
sub
loope
mov
fcomip
notb
int3
rolb
cmp
ja
outsl
cmp
mov
imul
subl
cmpsl
mov
mov
ret
inc
filds
xor
mov
rclb
mov
cmpsl
lock
sbb
dec
mov
mov
add
jb
loope
jl
pusha
cmc
pop
sub
ljmp
lods
or
cmp
push
inc
cld
cmp
add
cmp
lds
pushl
sarl
in
es
imul
cmp
push
scas
testb
test
pushl
mov
repnz
out
movsb
fwait
and
xchg
inc
adc
push
cmp
xchg
popa
pop
int
fwait
incl
fwait
push
int3
aas
xchg
ljmp
push
push
pop
xchg
andb
mov
jmp
aam
outsl
xor
aad
sub
sbb
pop
movb
xor
jmp
inc
cld
jmp
jl,pn
pop
pop
inc
fldl
sbbb
hlt
push
jl
ja
push
test
jno
repnz
sar
jmp
dec
jb
cmpsl
lret
test
cmp
imul
adc
lock
aas
je
orl
and
jbe
pop
adc
rolb
push
pop
adc
push
call
out
mov
hlt
xrelease
sti
fildl
pushl
adc
fsub
sarb
loope
cmpsl
test
rolb
aaa
out
sub
inc
call
mov
pop
lea
push
ds
leave
xor
mov
test
push
jecxz
or
gs
call
cmp
movsl
mov
cmpsb
pop
sbb
and
repnz
icebp
roll
xchg
mov
sbbl
xchg
mov
in
or
sbb
outsl
pop
int3
xchg
repnz
call
in
negl
pop
daa
cmp
and
jb
sbb
shrl
fwait
test
mov
lock
pop
and
loop
pop
ret
dec
mov
jge
incl
arpl
shrl
fistpll
dec
dec
adc
inc
dec
add
dec
into
out
jge
xor
mov
or
push
add
push
repnz
mov
dec
mov
add
dec
dec
jo
std
lret
int
jle
mov
inc
jbe
xchg
jne
add
xchg
push
aam
cmp
or
add
cmp
jnp
cmp
xchg
decb
fidivrs
enter
mov
ss
jo
sub
dec
mov
stos
mov
jge
test
lcall
movsl
in
inc
into
mov
push
and
and
std
push
xchg
sbb
pop
push
imulb
test
aaa
mov
xor
push
pusha
jle
nop
into
shl
test
jle
decl
jo
jo
pop
loope
sti
out
sub
jo
push
loope
jnp
push
pop
mov
sub
ud0
pushl
lods
sbb
leave
cli
inc
push
add
fidivrl
enter
jl
in
jp
pushl
sti
popf
out
testl
mulb
push
repnz
inc
sbb
fwait
loopne
cld
add
mov
mov
das
sbb
int
iret
subb
mov
les
sbb
out
movsb
idivl
test
movsl
into
or
je
lcall
test
push
mul
sub
jecxz
cmp
data16
out
adc
dec
pop
mov
subb
ljmp
das
pop
fcmovne
aaa
rcrl
or
les
push
cmpsb
shrl
mov
add
mov
jge
arpl
mov
mov
sbb
jns
lcallw
mov
mov
in
mov
subb
xlat
rolb
jmp
jge
lcall
test
data16
test
and
adc
or
leave
pushl
test
cmpsb
jp
push
dec
pop
inc
mov
jb
paddsw
arpl
decl
sbb
jmp
cmp
ja
adc
inc
mov
pop
int3
and
lcall
icebp
lea
and
mov
cmp
mov
sbb
xlat
fcomip
jmp
repz
mov
add
addr16
push
stc
roll
sbb
push
out
pushl
and
inc
lret
dec
sbb
lds
mov
add
xor
lcall
xchg
hlt
insl
mov
mov
bound
cld
adc
xlat
xchg
inc
rep
jne
mov
fisubl
hlt
jne
mov
inc
fiaddl
xchg
cmp
mov
ss
add
jp
outsl
mov
les
in
mov
hlt
incl
adc
cmpsl
addr16
inc
mov
add
repz
xorl
pop
pop
pop
fdivrl
cmp
jb
push
mov
cld
dec
fstps
add
addb
push
pop
and
jb
dec
or
inc
imul
or
jo
test
inc
insl
xchg
xor
test
popa
mov
dec
jmp
xor
rcl
outsb
sbb
pushl
push
addr16
mov
aad
xchg
push
xchg
ja
mov
sbb
xor
xlat
decl
sub
test
mov
mov
jnp
int
xchg
icebp
ljmp
cs
push
inc
fsubr
jge
xchg
or
or
gs
jnp
lods
clc
daa
mov
dec
jp
jmp
xor
jecxz
nop
stos
ds
imul
xor
xor
cmp
push
cmp
add
add
push
data16
pop
out
pop
mov
sub
xchg
lcall
scas
cmp
cmp
adc
sbb
test
enter
cld
xlat
cmpsb
lods
cmp
in
mov
lds
pop
nop
sub
ljmp
sub
sub
ds
shl
test
dec
jns
stc
lods
dec
jns
mov
hlt
ljmp
and
push
jp
leave
pop
jmp
dec
pop
sti
mov
inc
mov
cmp
pop
fwait
sbb
call
cmp
subl
stos
mov
lcall
pop
mov
les
rclb
or
xlat
xchg
xchg
xor
in
cmp
call
ss
pop
in
push
mov
add
adc
mov
ss
out
jmp
adcl
jmp
mov
dec
stc
jge
inc
mov
sbb
jl
adc
mov
xchg
insl
jnp
cltd
repz
icebp
daa
rorb
mov
es
dec
movsl
repz
js
dec
call
cld
jmp
fidivrs
in
xchg
sub
arpl
or
sub
filds
in
jb
fcmovnbe
nop
jg
mov
movsl
dec
jg
call
cmpsb
nop
pop
push
enter
push
daa
mov
loop
in
cmp
jg
fsubrp
fcmovnu
dec
daa
mov
pop
cltd
fimull
lcall
call
adc
movsl
lods
ljmp
mov
or
movsl
les
inc
imul
inc
sub
decl
xor
or
pop
adc
xchg
push
xor
push
or
xchg
in
insl
mov
push
pop
cmpsl
cmc
pop
decb
jo
push
ss
and
pop
cmp
clc
nop
cmp
xor
call
std
stos
sub
repz
mov
add
jo
xchg
in
xor
testb
add
push
sbbb
sub
cld
es
outsb
lods
dec
xchg
pop
cmp
ljmp
in
cmp
sarb
addb
mov
cmp
popf
lods
scas
out
in
cmp
cmp
decl
push
jns
push
xchg
fsubr
faddl
push
pop
test
cli
jg
test
movsb
jbe
push
out
jmp
sub
inc
pop
jge
dec
adc
cmp
cmp
add
decb
and
xchg
addl
jmp
mov
jae
xlat
cmpsl
mov
fldcw
push
enter
mov
decl
jl
mov
subl
pushf
lds
mov
fadd
pop
xchg
jp
mov
inc
dec
jecxz
inc
inc
jb
aad
out
divb
mov
int
loope
pop
decl
jmp
pop
inc
sbb
outsl
or
stos
aaa
lock
xchg
out
incl
push
add
dec
repz
adc
inc
in
cwtl
out
mov
push
cmp
pop
add
ljmp
movl
ljmp
jns
iret
xchg
loopne
inc
add
mov
cmp
push
loope
iret
lret
shrb
outsl
adc
mov
xchg
mov
and
test
clc
jmp
imul
mov
xchg
add
mov
push
sub
cmp
mov
les
pop
push
aaa
sbb
fs
inc
js
inc
aas
popf
mov
out
ljmp
fs
repnz
dec
mov
aas
ret
mov
mov
push
addr16
add
stc
js
adc
inc
idivb
jb
ret
clc
incl
repnz
gs
cmp
ficoms
push
jecxz
decl
imul
repz
mov
stos
ja
loope
clc
in
or
cmp
xchg
lcall
jl
push
mov
xor
icebp
sbb
outsl
adc
call
test
divl
push
and
lret
aad
mov
dec
lret
arpl
sti
pop
dec
mov
rcll
data16
add
decl
jmp
cmpsl
insb
lods
popf
idivl
pop
rclb
and
lcall
loope
and
adc
rolb
fists
ljmp
inc
ficomps
or
sysexit
mov
add
pop
xor
dec
rolb
sbb
pushl
lods
lcallw
sub
dec
pop
fisubrl
sbb
dec
jo
or
xorl
call
leave
sti
xlat
mov
es
sbb
mov
aam
int
imul
daa
out
lahf
jle
stc
rorl
xlat
jp
roll
andl
lea
cmpsl
xor
lds
push
push
and
jmp
outsl
dec
mov
daa
mov
jp
call
jp
lahf
mov
dec
pop
adc
out
push
pop
add
aad
les
ret
gs
stos
push
js
mov
jne
add
and
cs
adc
stos
cltd
fstpl
ljmp
push
loop
lret
inc
push
notl
push
pop
and
jbe
ja
mov
jne
outsl
pushl
arpl
mov
push
cltd
adc
mov
adc
sbb
std
xlat
mov
sub
out
sbb
cmpsl
shl
adc
icebp
decl
and
xchg
mov
shrb
dec
add
nop
test
outsb
leave
ss
push
push
popf
xorl
out
xlat
add
dec
rcr
dec
and
adc
push
pop
lcall
aaa
lock
mov
push
and
iret
xor
mov
je
decl
lock
fstl
orb
push
jo
mov
jg
xchg
pushl
rcrb
push
xchg
aas
or
sub
sub
scas
iret
jmp
das
inc
je
mov
cmpsb
or
xchg
pop
cli
and
add
fstpl
pop
inc
mov
mov
sub
decl
adc
xor
movsl
stos
push
xchg
aas
inc
aam
jle
add
pop
xchg
int
add
incl
mov
cs
mov
pusha
pusha
clc
sbb
nop
fwait
lret
int
mov
mov
ljmp
addl
inc
movb
push
lahf
sub
jbe
clc
cmp
push
lcall
lret
add
fsubrl
dec
ficomps
push
fs
nop
mulb
outsl
add
push
test
pop
arpl
ss
mov
shlb
scas
aad
push
lock
jmp
cmp
lock
sub
ja
movsw
rolb
rcrl
and
outsl
jmp
push
gs
mov
fstpt
and
lret
test
cmp
lret
adc
sarb
lock
jne
icebp
pop
loop
test
jns
and
loopne
xor
ljmp
nop
mov
cs
jge
dec
test
out
stos
jle
xor
cmp
faddl
loop
xor
pop
test
mov
subl
lea
dec
decl
scas
inc
movsl
jbe
mov
sbb
in
sbb
lods
leave
dec
jecxz
dec
shl
cmp
or
std
test
faddp
fisubrl
sub
pop
ror
mov
loopne
es
insl
fsubrs
add
insb
data16
adc
jne
cmp
adc
sbb
ljmp
mov
pop
lock
pop
les
ljmp
shl
add
pop
mov
xor
pop
sub
mov
xor
popf
jecxz
push
ljmp
call
push
and
mov
xchg
pushf
test
push
and
call
sub
push
sub
mov
adc
out
lds
push
dec
es
subl
out
cld
sub
cmc
filds
cmpsb
mov
lcall
sti
pop
clc
xchg
out
iret
andl
cmp
lods
gs
fldenv
rcrb
xchg
rolb
xor
pop
test
or
inc
xor
mov
mov
xchg
push
xor
js
cmpsb
xor
sub
mov
mov
pusha
push
inc
loope
fsubr
mov
mov
insl
jae
jmp
lods
jmp
fimuls
andl
push
fistps
pop
ss
inc
mov
test
add
dec
pushl
push
pop
dec
aad
fwait
rclb
pop
pop
mov
cli
push
fistps
ja
outsl
aaa
cld
jmp
xor
push
mov
aaa
scas
jle
xor
push
adc
xchg
push
inc
xor
cli
ja
pop
sbb
push
cmpsb
cld
out
cmpsb
lds
xor
loope
add
rcll
sub
stc
pusha
cwtl
mov
push
lcall
dec
push
sbb
mov
adc
and
cltd
jo
jae
out
test
mov
mov
xor
and
add
int3
mov
shrl
hlt
decl
cmc
cmp
lcall
push
jmp
jb
xor
lcall
jmp
iret
repnz
in
nop
mov
mov
sub
ljmp
jmp
int
and
idivl
gs
and
xchg
or
ljmp
lcall
sbb
or
inc
push
mov
xlat
ret
jb
inc
in
fildll
pop
inc
shrl
or
mov
xchg
adcl
jns
pop
jae
fdivp
jg
mov
mov
mov
mov
xchg
int
cmpsb
pop
pop
and
xor
lcall
js
dec
jg
cmp
sub
push
mov
jns
pusha
daa
ficoml
ljmp
and
lods
fidivs
push
cld
xor
or
movb
clc
lcall
and
or
sqrtps
pop
cltd
dec
fldz
cmc
scas
scas
arpl
push
adc
ljmp
sbb
add
xchg
aaa
in
mov
test
je
dec
dec
fisubrs
add
decl
movsl
pop
mov
jecxz
sub
jmp
ja
icebp
pop
dec
and
fwait
pop
push
push
adc
or
call
clc
or
mov
call
pushf
ret
xchg
hlt
adc
pop
incl
js
nop
bound
push
lods
cmp
aam
or
std
or
lcall
das
pop
cmp
jmp
je
loopne
push
pushf
add
cmc
mov
add
xlat
jge
mov
cmp
jmp
out
arpl
aas
lods
in
out
lea
rol
add
sti
cld
push
ljmp
ss
mov
int
stos
dec
std
or
lock
push
push
or
jge
push
mov
ds
shrb
and
ret
mov
into
pop
repnz
or
jle
mov
xor
icebp
mov
or
arpl
and
add
fwait
ljmp
ljmp
pusha
xor
lret
xchg
dec
out
add
sub
jmp
jge
add
ljmp
jg
jl
pop
daa
mov
mov
push
ljmp
fldenv
push
subb
mov
je
add
popa
fsubs
decl
sub
test
pop
call
and
imul
mov
cmpsb
mov
ds
jb
cmp
ljmp
ss
cli
push
scas
aas
pop
pop
pop
test
push
xchg
push
stos
fnstsw
aam
in
int3
sbb
jge
into
mov
pushl
xchg
lods
popa
dec
adc
or
mov
stos
test
inc
xor
or
xor
pusha
jle
outsb
andps
popa
pusha
jmp
mov
push
rcll
sahf
lcall
decl
les
fs
sbb
stc
or
lret
sub
aas
lods
loopne
fsubs
fidivrl
dec
cmpsb
jmp
pop
cmp
outsl
gs
mov
fistpll
jno
cmc
movsb
call
jle
hlt
jo
fmuls
mov
sbb
outsb
sbb
mov
jg
push
push
arpl
loopne
jle
out
cmp
lcall
xchg
lret
cs
dec
pop
cld
push
lea
imul
test
cmp
cmp
push
push
inc
int
loop
pusha
inc
jne
ret
pop
xchg
ror
mov
ja
xlat
ljmp
mov
cwtl
dec
std
es
push
rcll
xchg
cld
mov
jle
call
or
xor
push
andl
pushl
std
jbe
in
xor
mov
fadds
into
popf
jo
mov
xchg
adc
pop
xor
or
and
pop
inc
ret
push
call
movsb
sub
push
jae
dec
in
lods
sti
out
cmp
adc
jns
mov
pop
mov
hlt
js
stos
or
fsubl
std
fwait
mov
stc
jbe
xchg
or
mov
pushl
inc
pop
jg
xchg
insb
gs
or
pop
dec
push
call
inc
inc
inc
decl
or
ja
cld
hlt
jge
int3
pop
sub
lret
jge
inc
incl
mov
xor
repnz
sbb
xorl
xbegin
pusha
fcmovne
add
sub
aam
in
test
mov
cmp
and
lret
cli
lcall
lea
mov
or
aaa
cld
ljmp
jo
and
or
add
cli
fnstsw
jnp
idivl
dec
cld
movsl
data16
push
and
sbb
add
jne
lcall
xchg
pop
sbb
cmp
mov
dec
test
fs
jae
xchg
lcall
sbb
xchg
adc
arpl
push
mov
aaa
jecxz
and
mov
and
mov
push
jbe
dec
xor
lea
sub
and
lock
add
cmp
mov
push
cmp
xor
push
cmpsb
adc
das
orb
jo
cli
mov
push
fcmovnb
cld
dec
push
jg
pop
das
add
pop
or
js
inc
mov
push
ret
mov
call
insl
sbb
test
mov
jo
jno
mov
push
cltd
mov
cmp
ljmp
dec
sar
and
movsb
shlb
test
mov
inc
sbb
xchg
es
mov
repnz
incl
lods
je
xchg
es
dec
sbb
aad
stos
cmp
jl
mov
stos
and
aas
or
das
loop
jno
adc
jl
push
lahf
cltd
xchg
test
sti
lcall
mov
lods
xlat
popf
int
and
dec
mov
fstpt
cmp
mov
call
pop
dec
sub
mov
imul
loope
mov
mov
sar
fwait
mov
mov
in
sbb
sbb
and
decl
xchg
test
into
fidivl
enter
int
lcall
mov
aad
orl
sarb
int3
insb
ljmp
jne
std
insb
mov
popa
mov
mov
mov
add
jnp
das
pop
int
test
xor
mov
mov
fsubl
jge
push
pop
shll
nop
mov
push
cmp
and
nop
test
in
lcall
out
enter
jp
push
pushf
movsb
mov
movsb
lahf
mov
cltd
mov
jl
mov
jbe
repz
fidivl
inc
mov
ja
push
adc
cli
ds
call
and
into
xchg
mov
mov
jge
and
jle
jp
rcrl
repnz
addl
inc
jmp
and
mov
cmpsb
repz
fisttpl
push
mov
out
push
lcall
in
pop
dec
scas
push
jp
call
aaa
iret
and
stos
idiv
mov
jecxz
sub
pop
divb
test
jg
cmp
lods
lock
stc
cmpsb
sbb
xchg
mov
shl
hlt
in
cwtl
xor
xor
jg
pushl
mov
jge
pop
or
ss
out
into
mov
mov
decl
lock
divb
push
ret
movsl
das
lret
sub
mov
lahf
add
or
outsl
dec
xchg
subl
iret
sbb
inc
or
dec
jb
mov
jg
mov
push
movsb
add
hlt
rcl
and
pop
test
sbb
scas
lock
ljmp
clc
movsl
mov
mov
int
fmuls
mov
pop
test
mov
or
decl
xchg
jno
aas
insl
xlat
js
das
es
lods
mov
fiaddl
ds
mov
and
mov
paddq
cld
jg
cmc
mov
push
call
jnp
add
loopne
data16
pushl
popf
rclb
out
and
jmp
scas
sub
in
sti
adc
sub
sub
incl
aam
scas
jo
fs
icebp
stos
add
lcall
mov
mov
and
jmp
test
mov
xor
icebp
lcall
movsl
adc
fisubrl
aas
lret
bnd
mov
cmpxchg8b
add
inc
xchg
pop
outsb
push
pushl
mov
ret
jecxz
loopne
repnz
scas
inc
repz
es
mov
lea
pushl
test
mov
mov
fistps
inc
aam
fcoml
jecxz
add
scas
pop
push
rclb
frstor
mov
or
pop
push
ret
fdiv
aam
mov
mov
mov
xor
push
push
or
push
pushl
pop
fmull
out
ja
fsubs
test
in
inc
xchg
push
add
lcall
jecxz
dec
ja
inc
mov
cmp
cltd
out
xchg
inc
xor
mov
cmp
add
das
cli
inc
dec
sbb
lret
cli
leave
xchg
cmp
xor
pop
lock
out
inc
in
int
rep
dec
stc
add
pop
adc
mov
jb
into
notb
pop
jb
sbb
js
into
stos
ljmp
and
ljmp
jle
mov
dec
sbb
test
xchg
inc
push
mov
cmpsb
pop
pop
inc
add
xor
fwait
out
sbb
mov
jns
bound
push
test
ljmp
sbb
jno
cmp
jge
int
mov
lret
jns
dec
push
sbb
scas
fstl
popa
push
mov
push
mov
push
sbbb
sbb
pushl
ljmp
jnp
sub
mov
sbb
popa
push
jge
cli
dec
enter
pop
and
or
fistpll
pop
aad
mov
mov
ljmp
inc
aas
mov
fidivl
jmp
ret
mov
imul
fs
pushl
lods
repnz
xchg
xor
or
sub
push
mov
leave
fistps
jnp
dec
mov
jb
jnp
jl
mov
add
mov
jmp
outsl
incl
call
stos
dec
jmp
hlt
notl
lock
dec
push
mov
fcos
pushl
ds
jae
fs
out
and
xchg
or
dec
js
out
loop
jl
rcrl
pop
lods
sbb
scas
mov
pop
or
ss
jbe
ret
in
stc
cmpb
xor
add
pop
mov
icebp
mov
pusha
inc
and
and
cmp
dec
dec
cmp
mov
mov
sub
in
sub
push
sub
sub
jmp
xor
or
hlt
mov
pop
das
test
cwtl
dec
insl
dec
mov
incl
cmp
pop
xor
popf
subl
mov
sub
pop
mov
incl
repnz
pop
jb
scas
das
sbb
inc
and
js
out
fistpll
xchg
mov
xor
bound
mov
push
push
push
repz
pop
fisttpl
out
outsl
enter
add
insl
mov
test
jmp
addr16
sbb
dec
push
xlat
jns
mov
push
scas
in
mov
das
ljmp
decb
inc
xor
popf
and
push
sbb
ficoml
pop
lock
insl
add
lcall
mov
out
xchg
jbe
xor
fisttpl
rorb
std
ficompl
loopne
cmpsb
decl
pop
ret
negl
decb
or
cmpsb
test
outsl
cli
mov
movsb
js
sbb
xor
jg
xchg
lods
cmp
popl
jmp
mov
sub
aas
test
ja
mov
inc
outsl
sbb
mov
push
mov
fmuls
xlat
push
mov
mov
clc
cmp
ljmp
shrl
add
adc
push
cmpsl
or
fptan
mov
mov
cwtl
lods
jl
imul
dec
icebp
dec
fisubl
movsb
in
sub
lcall
mov
imul
mov
fmulp
jno
add
decl
mov
and
jbe
nop
test
pop
sub
mov
dec
cld
inc
cmp
mov
in
les
inc
mov
sub
call
sub
test
test
xchg
movsb
test
pop
jg
ljmp
call
ret
icebp
in
adc
js
call
sbb
push
pop
notb
jmp
mov
adc
sub
or
push
hlt
aam
add
mov
inc
jmp
daa
mov
in
inc
sbb
shl
cmpsl
ljmp
fsub
jge
mov
jbe
xor
imul
xchg
fdivrs
add
aas
lock
ja
add
add
inc
push
incl
cmp
inc
imul
dec
repnz
insb
popa
mov
movsb
imulb
clc
jle
push
lcall
lahf
push
mull
jnp
imul
xor
aam
out
sub
call
test
mov
mov
daa
call
ss
mov
or
xchg
scas
jb
decl
nop
insb
inc
fsubrl
dec
push
fs
push
pop
ret
pop
push
jne
push
test
out
sub
inc
outsb
cmc
xchg
imul
cmpsb
jge
and
dec
sub
jmp
std
testl
or
cwtl
sub
jecxz
dec
or
test
fsubl
pushl
aad
cmc
cli
insl
cs
decl
mov
addr16
push
dec
or
cmp
icebp
incl
xchg
cmp
rcr
shrb
sti
cld
cmp
inc
cmp
pop
jg
jmp
leave
sarl
fnstenv
fcmovnbe
ror
push
mov
loop
std
ljmp
in
jne
push
pop
or
cwtl
cld
mov
xchg
add
stos
or
jo
les
mov
mov
push
mov
adc
or
je
fldenv
mov
jecxz
incl
ljmp
push
dec
pop
mov
out
popf
inc
sub
xor
stos
jge
sub
sbb
add
and
xor
sub
add
rclb
sbb
lock
ss
jmp
ret
addr16
or
add
test
sbb
outsb
mov
ret
add
xor
movsb
mov
sub
test
and
inc
mov
push
mov
add
stos
mov
dec
inc
pop
mov
xor
mov
dec
fxch
xor
gs
lahf
mov
call
mov
into
jp
push
jmp
lcall
xchg
and
jle
ljmp
lcall
and
cmp
fsts
jne
fmul
mov
xchg
sub
jge
fsubr
pop
adc
inc
pop
enter
jnp
jb
mov
jno
adc
sub
mov
pop
lret
mov
aaa
pop
mov
fwait
mov
fsin
lock
push
mov
jle
inc
sarb
mov
mov
jmp
sahf
inc
sbbb
ret
push
push
mov
adc
cmp
pop
inc
jb
bound
mov
mov
mov
into
mov
ljmp
cs
outsb
sbb
jnp
fiadds
xchg
fsubs
outsl
addb
sbb
idiv
fidivrs
sbb
mov
popa
push
push
jo
jecxz
push
xchg
push
gs
jg
cmp
inc
filds
sbb
mov
adc
loopne
sbb
and
push
inc
mov
jp
jecxz
and
std
cmpl
mov
dec
lahf
jne
scas
or
sbb
in
lcall
jg
ss
cmp
pop
pop
fcoms
ja
out
stos
mov
pop
nop
ja
lcall
or
inc
sti
xor
push
movsb
insb
lar
xlat
mov
jp
sub
call
xchg
inc
pusha
repz
in
lods
cmp
push
fsubrs
fwait
dec
js
sar
pop
pop
call
cmp
das
fsubr
mov
in
pop
mov
mov
mov
test
adc
push
jae
test
jns
mov
test
insl
sarl
shl
lds
in
gs
stc
sbb
icebp
xchg
in
int
add
cmp
cmpsl
dec
inc
outsl
cmc
adc
mov
sub
mov
stc
orl
addb
test
jecxz
in
inc
mov
call
xchg
cs
mov
fisttpl
iret
mov
rorl
jbe
xor
imul
fwait
movsb
mov
lret
jl
jle
inc
in
mov
out
shrb
addr16
jno
and
sbb
aaa
mov
mov
popf
push
inc
mov
outsb
push
push
push
xor
jecxz
and
out
jmp
out
jo
adc
pop
dec
jmp
gs
sub
cltd
mov
jns
clc
cmpsb
loop
cmpsl
dec
std
bound
cmpsb
mov
jge
lcall
push
or
push
dec
xor
pop
vmread
push
xor
pop
lock
xor
pop
sbb
inc
or
ljmp
es
movsb
xor
int3
cmp
sub
ss
cmc
mov
mov
mov
jmp
mov
addr16
dec
xchg
sub
push
std
insl
repnz
lods
cld
jg
jmp
in
lea
shrl
sbbb
andb
ss
jl
xor
je
lcall
mov
int3
and
loop
dec
popf
push
sbb
mov
cli
sarl
inc
ret
call
push
jg
lds
cmp
inc
sub
xchg
movsb
and
mov
jmp
outsb
popf
cmp
xchg
idivb
adc
xchg
rolb
aaa
mov
sub
lcall
mov
iret
leavew
test
push
mov
stos
sarl
sbb
aam
sbb
testl
push
pop
outsl
call
or
inc
outsl
outsl
imul
mov
dec
inc
les
mov
ret
ljmp
dec
aam
dec
pop
testl
inc
jae
or
insl
jno
ja
fldl
not
ret
inc
es
jmp
enter
cmp
push
fisttpl
ljmp
daa
fldt
daa
dec
cmpsb
lcall
push
and
xchg
aad
test
popa
jp
outsl
cmp
in
gs
pop
sbb
mov
mov
pop
jg
add
pop
sti
sbb
push
loop
cmp
loope
adc
jbe
ss
dec
pop
jle
sbb
out
clc
decl
pop
dec
fcmovnbe
mov
push
or
popa
outsl
ds
mov
or
jmp
ljmp
jp
sti
jno
inc
aaa
sbb
jmp
test
je
add
xor
call
into
pop
fcomp
dec
inc
aam
sub
xchg
jecxz
lcall
or
cmpsl
jb
call
or
mov
mov
push
dec
sub
sahf
daa
mov
xor
adc
incl
movsl
inc
push
popf
inc
out
fsubrs
clc
mov
movsb
fisubrs
mov
int
pop
dec
cmp
mov
js
jp
push
jge
movsb
pop
cmc
lcall
cmpsl
pop
mov
xor
mov
fcmovnbe
loope
cmp
pushl
and
xchg
sbb
arpl
fs
xor
aam
clc
sub
jbe
iret
fs
pusha
decl
xor
xor
push
pop
cmpsl
sub
adcb
call
push
aas
insl
jnp
add
pusha
and
push
pop
repnz
and
mov
and
xor
decl
fld
xor
cmpsb
js
jo
dec
dec
aad
fisttpl
pop
jmp
jecxz
incl
pcmpeqd
sbb
pop
mov
jmp
mov
lcall
push
aaa
pop
or
push
or
adcb
sbb
xchg
xchg
or
mov
mov
and
fwait
nop
push
mov
add
ljmp
xor
cmp
mov
sbb
in
test
push
inc
or
shlb
sbb
decl
pop
test
shl
fwait
push
sbb
int3
int
clc
mov
jmp
imul
cli
decb
lds
inc
es
fmulp
adc
adc
leave
push
icebp
aad
pop
in
xchg
xchg
sbb
mov
cltd
aam
xor
cmp
lcall
push
cmp
lods
shrl
inc
jb
cmp
push
xor
adc
adc
decl
lret
jmp
mov
mov
mov
mov
fdivr
pop
sbb
imul
cmpsb
inc
dec
xchg
push
mov
fcomi
popa
or
fwait
dec
cltd
int
int
fsub
int3
mov
int
cld
dec
test
shr
out
idiv
mov
dec
cli
push
les
ja
cmpl
mov
xor
call
jmp
movsb
jne
jl
sbb
movsb
mov
ficoms
lret
xchg
lds
fbld
cmpl
scas
loope
aam
adc
pop
rclb
sbb
fsub
out
addb
jmp
loopne
int
imul
fdivrl
ret
fistpl
sub
push
cmp
lcall
icebp
and
push
sub
es
paddb
fcompl
aad
jmp
adc
ljmp
cmp
dec
sub
jg
scas
lret
dec
lcall
add
test
push
mov
call
pop
dec
jecxz
aam
aas
mov
lcall
outsb
insb
bnd
fst
into
jbe
and
cmpsb
lods
xchg
je
sub
popa
sbb
ljmp
fsubr
test
pop
out
push
cmpsl
jecxz
and
inc
loope
mov
in
push
mov
stos
decl
lock
fiadds
add
mov
or
mov
int
dec
int
bound
fdivr
push
xor
das
or
arpl
inc
push
mov
ja
push
cmp
scas
push
jmp
and
arpl
mov
dec
mov
call
cmp
lret
xor
test
push
icebp
add
dec
test
pop
xchg
dec
inc
cmp
and
pop
lock
inc
sub
sbb
shll
in
stos
inc
sahf
pop
enter
or
js
ret
cmp
adc
dec
inc
mov
jmp
xchg
jecxz
pop
pop
out
mov
shr
push
mov
and
leave
iret
add
lods
adc
call
pop
sub
out
lods
das
xchg
imul
in
xchg
pop
call
loopne
test
lahf
inc
xor
popa
adc
sub
xor
mov
or
push
jne
xchg
bound
jmp
push
scas
inc
rcl
test
mov
lcall
adc
xor
push
cmp
inc
mov
sub
cltd
mov
pusha
lock
xchg
shrb
jl
mov
or
inc
lods
ljmp
pushf
inc
dec
jl
testl
lock
dec
jnp
iret
sbb
psrad
sub
nop
cmp
lcall
pop
and
stc
popf
ret
add
addr16
out
mov
mov
push
in
dec
call
in
aaa
test
add
stc
dec
add
fidivl
sahf
mov
push
push
mov
xor
jae
or
mov
adc
dec
xor
lods
xor
ljmp
and
jp
call
push
jno
jae
int3
xlat
je
sbb
in
push
repz
loope
cli
xor
mov
sbb
nop
sub
adc
sub
mov
mov
add
jmp
and
inc
sub
roll
clc
mov
mov
fcomip
ljmp
or
sbb
loopne
cmpsb
lds
subb
or
inc
mov
ffree
ret
popf
int
dec
push
push
xor
or
rcl
push
rcll
mov
lods
fdivl
int3
push
xchg
cwtl
idivl
mov
pop
dec
push
jns
inc
shll
sbb
inc
pop
insl
cmp
xchg
pushl
pop
mov
mov
sub
sub
sub
imul
testb
test
lcall
pop
xorb
sahf
mov
call
xorl
push
jmp
cmpsl
stc
add
das
jmp
xor
popf
outsb
shl
dec
cmpsb
std
push
mov
dec
dec
subl
add
mov
mov
xor
pop
jge
gs
cltd
cmp
fs
mov
xchg
jmp
pop
mov
pop
test
sbb
or
fs
verw
add
popa
nop
jle
or
ds
jne
inc
jnp
xor
jl
fsubrp
ud0
ljmp
or
mov
dec
setl
lea
pop
inc
movsb
testb
cmp
fnsave
dec
xchg
repz
iret
or
xlat
cmp
pushl
lods
sbb
dec
cmp
sub
jg
adcl
adc
push
dec
sarb
cmp
mov
mov
out
ffreep
sbb
sar
push
pop
and
pop
lret
lret
insl
pusha
inc
cmp
cmpsl
fsubrl
jl
jg
xor
pop
cmp
and
outsl
jmp
cmpb
push
add
ss
leave
fwait
scas
sbb
js
decl
dec
pop
and
add
lods
pop
jnp
push
rclb
adc
insb
std
add
hlt
adc
lock
pop
call
push
shlb
ds
pop
or
mov
sti
sbb
jl
jmp
std
test
add
sub
testb
leave
cwtl
or
aaa
cmpsl
dec
xchg
push
sub
decl
mov
imul
xchg
mov
sub
push
push
mov
shrl
inc
stos
inc
jmp
lcall
cmp
test
aaa
je
dec
lock
jmp
dec
aas
adc
cmp
xchg
dec
jo
push
sub
sbb
mov
addr16
and
push
aam
sbb
mov
adc
loop
gs
lock
lahf
jae
or
inc
sahf
lcall
add
ljmp
fnstcw
mov
mov
stc
pop
dec
add
xchg
xor
lcall
sub
je
imul
ret
mov
pop
and
cmpsl
mov
scas
jnp
mov
ljmp
dec
lods
fistpl
ret
aam
add
ds
pusha
push
incb
hlt
cmp
inc
cmpsb
jmp
push
iret
cwtl
scas
and
lcall
dec
stos
fisubl
xchg
or
mov
sti
xor
aam
ljmp
fidivl
sbb
in
jno
cmp
fists
mov
xchg
call
fdivr
test
pushl
mov
cmp
lret
xchg
mov
ds
jnp
aad
push
mov
cmp
rorl
jbe
jg
mov
ljmp
push
and
cli
or
cmp
jbe
movsl
out
std
ret
pop
mov
enter
xchg
adc
lock
out
inc
jb
hlt
sbb
dec
imul
orl
xchg
mov
adc
out
xchg
push
push
cltd
lea
pop
mov
xor
mull
inc
mov
pop
ss
push
or
xchg
xor
leave
stos
mov
jne
jb
sub
jnp
loopne
mov
pop
outsl
or
ljmp
sbb
fnstenv
mov
decb
mov
push
fwait
aad
das
mov
push
dec
lahf
mov
cltd
fdivs
pop
je
jmp
mov
push
mov
mov
mov
fdivrs
push
pop
mov
xor
ljmp
cmp
in
test
jns
and
sbb
xchg
sahf
das
fnstenv
incl
outsb
fwait
xchg
cmp
repnz
stos
cmp
sub
sti
fdivr
inc
jmp
or
jno
jae
lds
lds
pushf
sbb
push
inc
cmp
lret
push
adc
pop
inc
add
sbb
lret
repz
xchg
sbb
out
add
decl
xor
rolb
push
aaa
bound
aam
xor
jns
call
jle
cmp
mov
sbb
mov
cmpb
xor
mov
mov
gs
lret
insl
rorb
call
mov
sarb
adc
xchg
arpl
dec
mov
call
cmc
sbb
xlat
and
adc
cld
mov
push
and
mov
cmpsl
push
sarb
in
jmp
fcomp
sub
or
fmull
push
aad
ljmp
push
adc
inc
sub
xor
add
shll
bound
inc
popa
ljmp
out
jp
pop
repz
pop
sahf
mov
xchg
fcomps
push
out
sti
xor
pusha
cmp
cmp
rolb
outsl
mov
std
pop
push
ret
fwait
or
xor
cmp
pop
pushf
or
mov
test
push
xor
into
mov
shll
xor
xchg
sub
jmp
jno
sub
inc
fldt
in
sub
jo
nop
jl
push
mov
cmp
cli
mov
shll
and
jno
fcoml
jbe
jno
das
jmp
loop
xor
lret
in
mov
xchg
mov
mov
fdivl
jmp
fcomip
dec
xor
popa
xor
xor
dec
inc
cmpl
jbe
mulb
pushl
loope
stc
icebp
pusha
sbb
xor
lock
xchg
imulb
fnstsw
repz
dec
push
or
xor
xorb
adc
hlt
mov
mov
std
mov
adc
fsts
cltd
pop
lods
in
lcall
sub
cmc
pop
fstl
sub
lcall
mov
sbb
ds
jmp
jne
cmc
xchg
mov
data16
loope
mov
in
insl
ret
mov
hlt
das
mov
cmp
iret
movsb
sub
inc
icebp
pop
in
mov
inc
dec
aaa
jbe
lahf
mov
mov
std
ljmp
xor
dec
sbb
addr16
jl
add
pop
xchg
push
aaa
call
sbb
pop
popa
into
jmp
dec
stos
lret
cs
cli
mov
xchg
xchg
push
roll
push
std
pushl
pop
aad
js
aaa
adc
mov
loope
cmp
pop
xor
push
cld
fdivrs
repnz
stos
pop
mov
mov
dec
daa
in
ret
pushl
jmp
fs
xchg
test
xchg
xchg
fadds
test
shrl
xor
lcall
fcmovnu
insb
lds
cmpsl
movsb
scas
out
push
imul
dec
daa
push
sbb
sbb
bswap
push
sbb
mov
decl
dec
mov
sbbl
enter
sarl
adc
sub
jbe
pushl
push
and
daa
ds
push
mov
idivl
fiaddl
jmp
icebp
cld
rcrl
jb
lcall
pop
notl
mov
iret
loopne
add
pop
std
cmp
mov
inc
icebp
out
cli
inc
inc
add
out
movsb
sbb
mov
mov
das
mov
scas
dec
aas
in
fdivs
fsubl
outsb
cmp
jno
cmp
xchg
dec
hlt
enter
inc
mov
xchg
enter
imul
push
mov
add
in
fs
lods
arpl
mov
and
mov
and
sti
fldenv
push
mov
dec
lret
fisttps
shll
test
pop
stos
jge
jno
xchg
outsl
push
and
lret
mov
shlb
jg
das
inc
sbb
in
cmp
divb
aas
js
dec
pop
lcall
mov
mov
and
pop
dec
cs
sbb
mov
lods
out
clc
mov
enter
sbb
xor
cli
cwtl
dec
xchg
es
je
mov
pop
das
bound
dec
imul
mov
mov
negl
stos
lret
mov
cmp
outsl
popa
aam
cld
xor
dec
adc
into
or
js
mov
jecxz
fcomi
dec
mov
xchg
out
sbb
and
xlat
mov
int3
fcmovne
insb
dec
daa
sub
int3
inc
sbb
cmp
sbb
sub
cmp
ljmp
pop
xchg
ds
in
pop
pushf
scas
inc
cmp
push
inc
icebp
xchg
jns
dec
push
lahf
dec
sbb
cld
int3
idiv
ljmp
mov
iret
lock
jmp
test
fmulp
or
arpl
cmp
call
jl
cmp
sub
pop
fwait
inc
mov
cwtl
push
inc
and
arpl
out
iret
incl
cmpsb
pop
xor
sbb
rclb
addb
push
sbb
roll
lret
mov
int3
lods
dec
cwtl
sub
add
and
add
mov
cmp
cmpsb
lcall
jnp
lds
inc
sub
xor
mov
sahf
mov
mov
in
clts
xor
jmp
sbb
pop
dec
ja
pusha
add
xchg
pop
idiv
cli
adc
adc
and
in
lahf
dec
ret
lahf
mov
mov
xchg
sbb
nop
jmp
pop
cmp
clc
sub
push
aam
mov
popa
xchg
mov
mov
decl
fcmovne
jo
sahf
or
sbb
in
jae
mov
out
int
ret
incl
xor
push
sub
cwtl
addr16
insb
adc
xchg
repz
lcall
int
cmpb
mov
cs
lcall
mov
or
inc
std
out
fdivp
test
mov
sbb
sbb
pop
ficomps
ficoml
and
out
dec
cmc
lcall
adc
out
or
mov
push
or
pop
test
testb
lahf
jmp
add
mov
jae
sbbl
jmp
jmp
pusha
fsubrl
mov
cwtl
shlb
ljmp
gs
xchg
std
pop
ds
cmp
push
outsb
inc
lea
jnp
mov
xchg
in
mov
push
pusha
inc
xchg
aad
mov
call
or
arpl
inc
pushl
adc
das
push
loopew
fimull
test
addr16
ror
cmpb
sub
jns
outsl
pop
mov
add
dec
addr16
dec
clc
sbb
mov
sbb
xor
incl
xchg
mov
cmp
icebp
push
push
jg
push
push
cmp
jmp
nop
adc
and
fcomp
loopne
xchg
ret
and
loopne
fiadds
inc
jl
mov
pop
push
insb
and
jbe
sbb
push
jmp
adc
adc
aaa
and
incl
test
adc
jo
xchg
data16
ljmp
jl
iret
xchg
mov
jo
sbb
es
mov
cmc
repnz
xor
test
jmp
lahf
mov
mov
jnp
ret
in
pop
cltd
pusha
stos
pushf
mov
mov
hlt
jnp
test
adcl
jle
mov
int3
fildll
dec
pushf
adc
aaa
xchg
fisttps
cmp
jp
es
movb
call
push
mov
mov
fldcw
push
pop
ds
sbb
popa
in
xlat
pop
in
xchg
fisubs
push
pop
aam
jmp
int3
je
push
push
nop
scas
mul
fnstenv
dec
or
and
pop
dec
or
push
jns
adc
sbb
icebp
leave
call
and
cmp
outsl
loopne
decl
scas
dec
or
add
mov
xor
cmp
jb
pushf
fnsave
fnstsw
andl
fisubrl
ja
out
ljmp
adc
movb
lcall
xor
or
inc
pop
and
mov
sbb
push
rolb
mov
inc
xchg
rcrb
xchg
fyl2x
push
inc
mov
lret
jecxz
mov
jo
push
insl
negb
in
rcrb
mov
or
lods
lcall
rcrb
xor
adc
pop
loop
mov
cs
nop
mov
push
xchg
xchg
rorb
fstl
dec
cli
nop
xor
jle
call
mov
sub
jmp
das
mov
and
out
movsl
dec
pop
jmp
mov
sub
or
adc
mov
inc
push
inc
cmp
push
in
dec
adc
pop
dec
push
lock
orl
fadds
jl
pop
push
int3
andl
idiv
jmp
sbb
sbb
testl
cmp
add
and
push
rorl
call
sub
dec
lods
fcompl
jmp
mov
ljmp
or
lcall
pop
test
lea
jmp
pushf
and
aad
add
stos
movl
call
or
sarl
dec
xlat
inc
inc
test
gs
lods
jmp
in
xor
cld
fidivl
jle
jnp
xchg
jg
push
push
jl
sub
cmp
int
dec
lahf
lods
mov
incl
mov
scas
icebp
adc
insl
dec
sbb
sub
pop
xchg
pusha
mov
add
shlb
call
inc
and
sti
in
loop
add
imul
dec
daa
icebp
or
out
scas
mov
fucom
lcall
mov
mov
ficoms
or
xlat
std
sbb
mov
inc
mov
cmp
int
mov
push
push
dec
pop
dec
loopne
or
lds
mov
push
lcall
sub
and
lea
lret
outsl
or
fs
test
ds
mov
stos
xchg
xor
fs
and
addr16
mull
xchg
call
test
outsb
cmpsb
sti
sti
xchg
aaa
cmpsl
fdiv
xchg
mov
js
movsb
add
jae
cmp
lret
lcall
inc
ds
aas
sub
test
xchg
ljmp
scas
cmpsl
ljmp
mov
mov
and
or
xchg
call
jl
jno
jns
or
test
aam
jmp
addps
out
in
sbb
xchg
xlat
mov
sahf
jb
cmp
and
xchg
enter
add
loope
inc
insl
jp
call
sub
dec
mov
pavgw
or
mov
pop
mov
jbe
cmp
call
ret
mov
sbb
insb
outsb
xchg
or
mov
add
arpl
test
lcall
out
pop
sahf
fcmovnbe
inc
popa
aam
sub
xor
fisttps
pop
mov
mov
cmp
xchg
fisttps
decl
push
inc
push
jbe
iret
fadds
jmp
fstps
mov
sti
outsl
lock
push
xchg
cmovs
pop
push
call
lret
sub
pop
mov
pop
mov
jb
push
outsb
adc
rclb
push
pushl
or
insb
pop
cmovbe
push
push
xorb
cld
out
lods
adc
mov
insl
adc
xlat
push
sar
mov
xor
outsb
inc
mov
push
jno
xchg
and
pop
mov
rcll
xchg
jg
inc
imul
xchg
int3
xchg
jno
data16
int
ja
jmp
inc
lea
dec
movsl
adc
out
cld
sub
ret
mov
mov
call
shll
push
push
pop
hlt
adc
push
out
out
jns
inc
in
mov
pop
dec
inc
jns
push
sub
mov
jb
dec
push
lods
test
mov
jge
dec
xchg
or
pushf
mov
ljmp
in
repnz
data16
incl
fcomps
scas
imul
jecxz
ds
inc
xchg
dec
dec
sub
inc
repnz
pop
repnz
sbb
movsl
incl
pusha
mov
inc
insb
lds
in
add
enter
ret
inc
and
out
scas
cmp
incl
xchg
test
jne
inc
andl
mov
sub
push
lods
insl
sbb
or
fprem
xchg
nop
cli
dec
insl
xchg
pushl
xchg
sub
andb
das
push
pop
push
or
lock
cmovle
sbb
add
mov
sub
stc
imull
movsb
mov
stos
or
pop
lret
dec
push
push
int3
sbb
stc
movsb
dec
movsb
dec
sub
fs
sub
add
nop
adc
test
lret
movsl
movsb
cwtl
jle
je
insb
lock
call
jl
dec
xchg
stos
inc
fdivs
lret
sub
mov
insb
push
in
popa
decl
or
les
loopne
xlat
pop
inc
int
jmp
mov
scas
int
test
scas
clc
sbb
mov
pop
les
scas
loope
fs
pop
in
dec
xchg
std
pushl
xchg
mov
subb
xchg
outsb
bound
mov
inc
lods
mov
ja
cwtl
out
pop
xchg
pop
aad
pop
repz
lods
xchg
add
shlb
sub
push
call
mov
clc
sarl
pop
das
mov
mov
dec
in
xchg
aam
stos
inc
jne
mov
sar
sti
clc
mov
scas
mov
push
loopne
push
aam
add
popf
adcl
pop
cmc
xchg
jecxz
mov
pop
subb
fistl
decl
pushfw
xchg
sbb
pop
mov
or
aaa
mov
scas
aam
cli
std
ljmp
xor
xchg
pop
loop,pn
push
jp
repnz
nop
adc
in
fs
cmp
add
mov
cwtl
adc
ret
in
dec
push
sbb
aas
jb
lea
stc
jmp
and
pushl
jge,pn
out
insl
lret
sub
loop
hlt
inc
fisubs
push
addr16
test
sbb
and
popa
inc
out
hlt
decl
mov
xchg
xchg
mov
dec
dec
rolb
cmpsb
mov
lcall
inc
imull
adc
and
mov
fadds
jmp
cld
jg
test
lds
mov
cmp
mov
stos
clc
xor
mov
mov
jns
lea
ljmp
incl
orb
lcall
leave
fldt
or
loop
ljmp
loopne
ljmp
push
inc
jmp
hlt
sbbb
or
jnp
das
add
test
push
fucomi
jge
fcompp
dec
call
mov
mov
xor
incl
neg
and
xor
lds
stos
dec
insb
test
or
daa
dec
mov
jle
jl
rcrb
shll
jns
iret
aaa
stos
incl
rcrl
mov
cmpb
mov
ret
lret
pop
mov
xor
mov
fwait
loopne
call
pop
mull
mov
sub
lods
mov
mov
test
std
popa
decl
fsubrs
push
and
pushf
cmc
sahf
dec
sbb
out
cld
mov
push
and
incb
call
ds
jae
dec
sbb
imul
lret
pop
add
push
jle
fadd
jg
call
in
gs
shll
lock
incl
jle
jne
mov
popf
pusha
sub
adc
nop
out
jle
repz
icebp
push
ljmp
ljmp
mov
outsb
int3
mov
rol
fldl
mov
jmp
inc
loop
sbb
push
push
push
cmp
cmp
int
sub
in
dec
iret
popa
jb
mov
mov
in
mov
cli
jp
sahf
fwait
call
pop
dec
lock
test
pop
notb
inc
shl
pop
jmp
mov
pop
popa
sahf
jbe
sub
hlt
or
or
xchg
jns
mov
or
dec
sbb
and
rcl
mov
bound
lods
imul
or
cld
movsl
mov
mov
xor
loopne
sub
add
dec
mov
push
mov
in
cmp
push
mov
incl
mov
or
andb
and
lods
shl
add
sbb
jae
dec
call
mov
data16
mov
mov
pushl
outsl
aad
mov
jae
push
rolb
pop
out
add
mov
push
gs
mov
fs
adc
pop
jmp
push
xlat
loop
fwait
xchg
testl
leave
aam
mov
pushl
or
cs
aam
mov
jmp
mov
cmc
sbbl
das
clc
adc
add
fistl
dec
jno
pusha
cmpsl
andl
cmp
ja
xchg
pop
jmp
mov
enter
and
xchg
cmp
pushl
fwait
inc
mov
mov
mov
cmpsb
xor
xor
jp
fcomip
dec
sub
dec
fisttps
lods
icebp
sarl
shrb
ficompl
clc
ficompl
jg
add
cmp
rorl
lds
mov
out
inc
int
or
incl
and
jmp
das
lahf
and
aad
xor
call
mov
incl
push
addr16
dec
cmp
hlt
cltd
movsl
mov
daa
xchg
dec
sbbl
scas
test
mov
push
and
in
in
push
add
and
pop
pop
call
adc
add
dec
mov
loop
arpl
mov
mov
fldt
xlat
adc
decl
mov
mov
or
mov
pop
inc
or
jae
adc
mov
push
pop
jbe
xchg
jl
hlt
sahf
pop
shll
jns
nop
hlt
sub
outsb
mov
inc
mov
addl
adc
fildl
jg
daa
pop
xchg
sbb
inc
mov
jno
and
add
and
push
fcoms
movsl
inc
fldcw
add
movsl
lods
cmp
sar
es
pop
cs
popa
repnz
inc
dec
mov
roll
adc
pusha
sbb
jecxz
jae
push
xor
xor
push
into
stos
ret
dec
ss
inc
enter
icebp
push
cmp
push
and
ljmp
stc
jmp
adc
add
and
jb
ljmp
adc
sub
bound
jmp
and
ss
inc
jg
stos
pop
jbe
mov
jb
inc
or
sti
jle
icebp
call
mov
out
cmpsb
dec
xchg
pop
mov
cmp
push
xor
arpl
xchg
fildll
xchg
and
repnz
jg
sbb
test
data16
hlt
shlb
idivb
add
lret
ret
add
mov
imull
call
cwtl
subb
mov
inc
xchg
in
sbb
faddl
or
lret
sub
ljmp
lock
movsl
push
add
sub
inc
mov
loopne
pop
decl
xchg
pop
aaa
ret
scas
les
pop
loopne
sub
mov
addr16
sub
jl
aas
jle
lcall
fwait
addb
in
or
sbb
cmpb
jp
pushf
outsb
add
jo
mov
mov
push
test
xor
or
stos
arpl
aas
loopne
xor
test
in
cmpsl
in
sar
jg
pushl
gs
jle
xchg
jecxz
stos
int3
cmp
push
sub
ljmp
cmp
decl
ficoml
cmc
mov
hlt
push
les
mov
iret
adc
adc
scas
sub
je
test
mov
jg
pushf
sub
mov
decl
les
mov
cltd
subl
fimull
shl
dec
push
leave
es
ljmp
push
or
scas
fmulp
push
sahf
std
cli
leave
ja
fisubrs
or
loopne
imul
hlt
jb
mov
push
bound
sbb
adc
int3
push
out
out
jp
shlb
das
mov
decl
pop
cld
dec
mov
mov
ror
aas
mov
mov
ja
sub
inc
cmpsb
cwtl
add
push
push
inc
movl
jg
loop,pt
les
stos
notb
adc
ret
xchg
es
fmul
dec
push
decl
lock
enter
cmpsl
adc
cmp
fisubs
inc
loope
adc
inc
pop
ljmp
sbb
adc
jge
dec
addr16
cmpsb
enter
mov
outsb
xchg
pushf
out
cmp
add
mov
es
mov
icebp
mov
pop
inc
test
hlt
lcall
out
js
inc
fwait
push
into
adc
andb
out
mov
jns
adcl
mov
dec
xor
push
lock
push
sbb
lea
push
sub
mov
inc
ds
lret
aas
pop
fnstcw
insl
cwtl
sub
insb
daa
out
into
xor
jge
jbe
inc
sub
and
cmpsb
in
incl
xor
into
xchg
inc
adcb
jecxz
data16
mov
or
mov
daa
jge
ljmp
xchg
push
xor
popf
inc
adc
outsb
xchg
push
xlat
push
testl
rcr
insl
mov
jg
fcoml
dec
xchg
sbb
cs
xchg
pop
jecxz
int
jl
adc
adc
data16
inc
negl
and
or
jmp
fimuls
xchg
aas
hlt
arpl
repnz
mov
test
add
clc
adc
push
lret
xorb
sbb
cmp
movsb
mov
in
int3
fisttps
sub
sub
outsl
mov
xchg
pop
cmpl
jns
cwtl
sahf
cmp
push
and
mov
mull
inc
mov
lahf
jecxz
iret
adc
aaa
cld
es
or
dec
imul
adcb
sbb
fstpt
mov
or
inc
lea
insb
mov
fs
stos
jae
pop
test
adc
mov
pop
rcr
xlat
xor
rcrb
fadds
and
mov
pop
dec
jmp
xor
mov
jbe
jns
in
sub
mov
push
lret
ja
dec
loop
stc
push
xchg
jns
inc
mov
xchg
lret
push
pushf
pop
repz
push
daa
enter
aaa
verr
mov
adc
mov
mov
cmp
ss
je
mov
aas
rclb
aad
adc
jae
mov
and
cld
lcall
sbb
push
stos
add
std
xor
test
add
clc
inc
jg
incl
arpl
push
mov
dec
fsubl
lcall
fsubl
add
sbb
mov
jg
pop
mov
push
mov
sub
inc
and
push
sub
mov
imul
jge
inc
pop
xchg
decl
insb
cmc
lods
pop
fidivl
shlb
addb
hlt
fcoms
in
sbb
mov
pop
sub
test
dec
lret
fldenv
jae
jmp
repnz
cwtl
sub
das
jmp
outsl
pop
dec
es
jle,pn
jg
movsl
hlt
cli
out
xor
hlt
ljmp
push
repz
mov
ljmp
repz
fld1
and
or
jl
frstpm(287
push
int3
pop
sti
into
adc
call
cmp
inc
mov
jns
sti
jmp
in
pushf
xchg
or
mov
push
xchg
outsb
cli
pop
mov
lcall
out
out
ljmp
in
mov
mov
int3
into
mov
pop
cli
ss
cmc
mov
mov
mov
test
lock
lock
icebp
int3
pop
pop
jnp
xchg
mov
jmp
pop
jecxz
insl
xor
insl
icebp
pop
adc
shrb
add
test
push
lcall
sub
dec
ljmp
movsl
sub
push
lods
dec
mov
dec
push
add
mov
ret
pusha
cmp
es
pusha
dec
mov
pop
mull
fidivrs
cmc
mov
lcall
movsb
mov
in
adc
in
enter
sub
ret
into
rcrl
xor
mov
sub
or
sti
out
cmp
lcall
incl
scas
add
pop
ds
test
push
sahf
fdivl
xchg
outsl
fcomip
jmp
cltd
mov
sbb
cmp
sub
sar
clc
call
mov
jmp
mov
ljmp
scas
es
jmp
add
adc
out
ret
dec
orb
xor
or
jmp
int3
int
enter
cmpsl
sbb
jo
add
jmp
mov
leave
call
xchg
mov
jmp
or
imul
mov
stc
cmp
dec
mov
pushl
sbb
push
aad
outsb
test
sbb
es
lods
in
or
das
iret
call
decl
gs
xor
push
in
out
push
sbb
jecxz
test
notl
pop
bound
cmp
lcall
cmp
xchg
mov
mov
cld
xchg
jmp
xchg
cmp
pushf
mov
or
call
pop
lods
or
dec
daa
int
add
xor
mov
ss
repnz
jge
xor
inc
adc
mov
ja
outsb
and
ljmp
mov
sub
adc
fidivrl
dec
ja
mov
ror
mov
cld
sub
lods
add
call
clc
dec
inc
jno
pop
cli
shlb
fsubl
stos
xchg
xchg
ss
ja
mov
ss
mull
pop
mov
mov
clc
and
push
lahf
mov
call
fwait
xor
mov
mov
add
push
sti
mov
int
pop
in
or
lcall
push
xchg
xor
cmp
push
adc
adc
in
cwtl
fdivr
decl
push
sub
or
sbb
dec
pop
push
push
adc
fdivs
pop
push
loope
and
sub
fmul
jmp
or
inc
push
std
mov
and
test
and
scas
inc
dec
int3
in
mov
cltd
sti
pusha
jns
mov
pop
std
in
lahf
fstps
cmc
loopne
mov
push
mov
jl
sub
mov
sub
mov
mov
pushl
jb
mov
hlt
mov
jo
pop
test
lahf
fidivs
mov
ljmp
dec
mov
cli
jne
je
lret
int
out
cmp
mov
dec
js
and
pop
pop
fsubs
ficomps
mov
dec
xchg
xchg
pushf
rorl
fsubrs
and
xor
sbb
mov
push
inc
inc
pop
es
mov
cmc
popf
jno
scas
dec
cmpl
icebp
xchg
push
dec
add
cmp
mov
int3
inc
div
push
cmp
movsl
aaa
das
mov
cld
insb
aam
iret
call
cmp
mov
outsb
repnz
mov
push
xor
jle
and
out
add
add
sbb
add
or
or
cld
push
les
in
fdivrl
shl
fstpl
mov
call
push
out
testb
dec
fmull
add
inc
add
lcall
imul
sbb
mov
mov
mov
icebp
in
jmp
and
decl
cmp
xchg
lret
mov
xor
push
mov
lea
out
adc
sbb
inc
gs
out
cli
cmp
adc
es
ror
movsl
andb
inc
loop
fnstenv
mov
mov
lcall
xlat
aas
test
in
lock
insl
mov
sarb
sbb
arpl
push
mov
enter
in
leave
fldenv
xor
mov
jecxz
cld
dec
jle
and
adcl
xor
int
mov
iret
pushl
lret
pusha
pop
rol
inc
adc
daa
lret
mov
fldenv
jmp
push
loopne
call
inc
or
sub
jo
subl
sbb
cmp
ret
cmc
call
lret
popa
insl
push
dec
add
inc
sbb
jo
insb
fcmovnb
lret
jne
and
pushf
scas
pop
sbb
pop
lcall
pushf
rcll
cli
pop
pop
push
adc
ja
icebp
vpor
stc
div
call
xchg
mov
xchg
lcall
sub
mov
dec
lret
push
mov
sub
arpl
inc
rcrl
xor
jmp
xor
enter
jg
sbb
and
pop
into
out
inc
jmp
movsb
and
xchg
push
and
pop
xchg
std
insb
jle
lds
cltd
mov
xor
mov
pusha
mov
dec
mov
aad
ljmp
aad
cmp
aad
jmp
clc
imul
icebp
jbe
dec
cld
lcall
nop
mov
aam
lcall
aaa
jmp
mov
subl
call
into
xchg
test
push
jnp
dec
xchg
mov
xchg
xor
mov
mov
cltd
push
or
push
sarb
es
xchg
insl
out
pop
cmp
xchg
lds
jno
jno
jo
call
clc
notl
xchg
pop
xlat
stos
xlat
mov
in
out
ficoml
mov
inc
cmp
push
daa
adc
imul
xchg
mov
or
outsl
xor
pop
icebp
aaa
cld
add
sahf
xor
jbe
mov
cmpsb
push
shlb
xchg
aaa
mov
jmp
sbb
xlat
sbb
push
mov
lock
cmp
push
dec
jae
mov
adc
inc
add
out
stc
xor
ljmp
shrb
mov
in
mov
sbbb
decl
lock
dec
and
jle
sub
push
imul
push
test
fucomp
enter
std
cmp
pushf
mov
enter
lcall
setb
mov
jg
jmp
test
xor
cmp
sbb
dec
jle
shll
popa
inc
les
jnp
jmp
jne
imul
and
lret
dec
cmp
aas
addb
bound
fisubrl
push
and
or
jae
mov
jnp
xor
mov
test
add
push
mov
xor
nop
int
or
call
push
dec
pop
pop
push
push
inc
stc
into
push
fdivrl
sub
pop
inc
pop
lock
push
ficompl
mov
adc
adc
jle
pop
push
and
ss
or
pop
xchg
sbb
incl
push
cltd
inc
int3
out
sti
or
aas
jae
jno
and
jecxz
cmpsb
ljmp
lds
repnz
out
loop
mov
and
mov
mov
cmp
decl
and
scas
add
mov
loop
mov
or
leave
std
testb
std
inc
mov
les
push
pop
pop
fildl
cld
incl
fwait
push
in
aad
ss
mov
mov
cli
idivb
cmp
enter
hlt
sbb
mov
pusha
andl
lods
jle
into
mov
push
cwtl
stos
adc
xor
aaa
lret
hlt
push
inc
push
jne
movsl
fdiv
clc
sarl
inc
push
jbe
inc
cmpb
sub
mov
sbb
filds
lods
rcrb
arpl
test
clc
jg
pop
cmp
or
out
and
sahf
inc
jmp
adcb
mov
jecxz
stos
mov
pusha
push
xchg
jo
pushl
mov
insl
ret
xchg
or
pop
adc
stc
push
lods
sub
out
cmp
mov
dec
mov
aam
jnp
lret
xlat
jo
xchg
test
js
in
mov
out
inc
mov
jg
sbb
stos
ljmp
pop
jmp
jae
fsubrl
jnp
lock
decl
mov
adc
clc
fdiv
and
scas
mov
dec
cwtl
lcall
push
cld
xchg
mov
pop
dec
xorb
mov
pop
inc
out
mov
pushl
dec
jp
mov
imulb
inc
sub
cltd
in
push
int3
cmpsl
push
sub
call
xor
pop
fwait
jnp
mov
jl
mov
and
jecxz
inc
sti
jns
lahf
outsl
ss
ljmp
in
cmpsb
mov
xchg
aaa
mov
add
pushl
inc
mov
add
ficomps
js
insb
hlt
mov
sub
mov
cmp
std
fidivrl
ret
es
out
mov
or
movsb
in
add
jbe
out
loop
pushl
and
add
adc
and
mov
xlat
push
inc
mov
mov
pushl
test
add
mov
add
dec
lods
js
arpl
rcrb
jns
inc
inc
inc
push
lcall
sbb
xchg
add
jmp
sbb
insb
out
sbb
aad
push
adc
cmp
mov
mull
sahf
lcall
insl
sahf
and
hlt
sbb
pushl
std
pushl
cli
push
jae
push
stos
xchg
and
mov
adc
sbb
call
dec
shll
out
call
xor
mov
push
rclb
mov
pusha
inc
scas
clc
call
dec
mov
cmpsl
call
cmp
and
push
outsl
adc
mov
dec
cmp
push
cwtl
jecxz
pop
cwtl
cld
push
or
cltd
or
ljmp
data16
jns
mov
ds
dec
shrl
lcall
loopne
rcll
mov
aad
ja
call
ret
fstpt
icebp
pop
mov
imull
sub
aaa
pop
cs
outsb
outsl
xchg
sbb
repz
in
add
clc
jmp
dec
nop
inc
lahf
ret
mov
scas
scas
aam
xor
negl
cmp
popf
scas
sahf
out
pusha
call
test
gs
mov
dec
addr16
imul
jno
in
jg
stos
adc
jne
and
sub
xchg
jmp
adc
rcrl
cmp
cmp
and
out
ja
jecxz
push
xor
enter
adc
inc
mov
pop
inc
jmp
scas
aaa
lock
push
push
cli
xchg
inc
cmp
pushf
int
outsl
shll
add
lcall
insb
test
adc
into
bound
xchg
sub
fmull
test
rol
dec
ficoms
shll
cmp
bound
lock
aas
xchg
mov
movsl
mov
jns
push
ss
adc
mov
add
add
mov
jle
mov
mov
push
cld
fildll
or
mov
divb
call
add
cmp
std
cltd
jmp
outsl
mov
fldt
mov
jne
push
into
loop
sub
or
pop
sahf
sahf
pop
push
xor
pop
cmpsb
in
out
jmp
xchg
and
lret
and
sarb
mov
ret
adc
mov
sysexit
mov
cltd
outsb
jnp
xor
jl
ret
jns
dec
xlat
or
jns
insb
imul
push
lcall
mov
orl
cmp
fcmovnb
dec
pop
clc
pushl
pop
xlat
push
mov
scas
mov
movzbl
hlt
ljmp
lock
dec
xchg
sahf
test
and
cli
insb
call
insl
adc
inc
mov
int3
lods
lcall
dec
mov
pop
lret
jb
cmp
ja
mov
or
jge
cmpsb
popf
mov
hlt
pop
sub
decl
fisubrs
cmp
inc
mov
mov
cmpsb
xchg
mov
decl
xor
test
mov
das
jg
es
dec
mov
xor
mov
fdivrp
incl
cld
repz
or
mov
xor
outsl
imul
pushl
jno
mov
sub
jnp
scas
add
jmp
mov
pop
and
pushl
inc
pop
xor
dec
data16
fidivl
sub
xor
sub
or
lods
jg
decl
or
jo
xlat
dec
mov
sub
sbb
sbb
dec
outsb
lock
pushl
push
cmp
adc
and
or
lcall
icebp
mov
inc
inc
mov
decl
sahf
shl
pushf
enter
mov
and
mov
xchg
movsl
inc
negl
cmp
ficompl
ds
insb
adc
gs
fcmovu
or
mov
pushf
adc
cld
stos
stc
call
jbe
xchg
push
icebp
jb
mov
scas
mov
test
cmp
call
scas
test
repnz
filds
arpl
in
and
test
lods
sar
fidivl
dec
push
mov
js
hlt
fbld
fcmovbe
lret
dec
adc
mov
and
outsb
or
inc
adc
lea
js
outsl
clc
mov
lds
mov
push
std
pushf
cltd
push
xchg
stc
lods
fcmovnbe
mov
inc
add
repnz
push
push
aas
push
daa
mov
xorl
icebp
in
aam
inc
inc
and
mov
call
and
adc
addr16
sbb
mov
cmp
dec
pop
std
mov
mov
push
jae
pushf
mov
js
in
out
mov
out
and
ds
imul
js
and
repnz
insl
adc
test
ljmp
dec
fwait
inc
and
scas
mov
lret
addr16
push
sbb
shll
push
and
ud0
lcall
leave
inc
lahf
fs
inc
mov
sub
repz
adc
pusha
lahf
negl
loopne
lahf
jmp
ss
xchg
mov
imul
pusha
adc
mov
adc
adc
pushl
shrl
daa
ss
iret
stc
fwait
xorl
pop
jl
jae
out
or
incl
das
idivl
loope
sbb
shl
inc
xor
xchg
into
ja
ds
add
and
jae
addr16
cli
adc
outsl
adc
mov
xor
movhps
mov
stos
in
push
inc
sbb
add
mov
ret
jl
call
mov
pop
fildll
push
xor
xchg
fisttps
sub
repnz
loopne
testl
call
ljmp
or
push
mov
shr
data16
and
mov
jnp
je
inc
in
popa
sbb
mov
mov
pop
mov
int3
aad
les
ret
jg
mov
cwtl
push
push
mov
add
mov
sbb
push
jg
fisubl
mov
adc
mov
cmp
ret
jge
stos
mov
rcrl
jg
inc
in
repz
mov
dec
leave
mov
mov
jge
xlat
pop
inc
push
je
adc
sbb
loopne
dec
test
outsb
decl
push
insb
fcmove
jmp
dec
or
xchg
popa
andl
ficoms
pop
jbe
incl
xchg
popa
push
jmp
hlt
out
cli
or
pop
cmp
push
jb
mov
jnp
daa
jb,pt
lock
mov
sub
dec
call
add
or
dec
in
lcall
roll
pop
in
pop
mov
aas
enter
sahf
fwait
lcall
mov
rclb
sbb
cli
mov
repz
sub
jmp
push
push
jae
cltd
mov
sbb
jg
dec
jg
pop
dec
inc
xchg
cmpsb
cmp
outsb
adc
sti
sub
sarb
aam
jl
decl
inc
adc
pop
pusha
orb
mov
pop
lcall
call
mov
sbb
nop
xor
iret
or
mov
xchg
bound
sbb
sub
jp
dec
repnz
fxch
addr16
loope
adcl
fidivrs
pop
pop
movsl
lock
cmp
push
fadds
loope
mov
std
dec
shll
mov
sbb
mov
mov
addl
mov
outsl
add
cmc
testb
jle
push
xor
shll
push
daa
pop
dec
sbb
sub
sub
jmp
push
sub
fldt
scas
dec
pop
cmc
in
fisttps
mov
push
jbe
jge
xchg
adc
mov
sub
ljmp
push
mov
enter
jecxz
mov
ds
cs
and
jecxz
decb
adc
mov
adc
sbb
jbe
pop
mov
and
decl
dec
cmp
nop
or
sarl
lds
cmp
pushl
faddl
or
and
stos
iret
insb
push
lret
faddl
jge
pop
ret
push
movsl
repnz
lret
pusha
xor
adc
aas
loopne
xchg
or
stc
rclb
decl
out
or
xor
adc
sahf
popa
jne
cmpsb
jle
iret
or
lods
sbb
jg
insl
add
push
mov
stc
add
mov
pushf
insb
mov
lods
jl
sub
decl
int
insb
call
dec
inc
inc
sbb
cltd
shr
test
xchg
xchg
cwtl
ljmp
adc
popa
and
xorb
mov
xchg
jmp
adc
repz
mov
ljmp
in
sbb
fwait
jne
cmp
pop
push
dec
lret
jns
repnz
fstl
cmc
hlt
pushl
jp
aam
hlt
cmp
adc
or
and
pop
and
das
xchg
cmp
out
bound
mov
ror
call
adc
xchg
dec
movsl
std
push
icebp
lods
or
mov
aaa
rcll
xor
incl
cmp
shlb
inc
jg
pop
mov
mov
out
push
mov
lea
lods
cmp
call
inc
dec
ljmp
test
dec
or
jmp
lock
sub
decl
jne
repnz
into
mov
lods
fcomps
test
push
sbb
inc
scas
mov
inc
sbb
cli
sub
or
daa
decl
cmc
fnsave
mov
and
clc
ja
inc
pop
scas
rcrb
lcall
pushl
dec
test
fdivl
movsl
arpl
insb
push
fisubs
lcall
ljmp
stos
js
sbb
push
xchg
repnz
mov
mov
call
in
cmp
push
or
adc
add
jp
std
pushf
pop
loopne
push
das
aam
inc
loop
push
push
repz
mov
push
mov
push
outsb
push
mov
jmp
jge
adc
aas
jl
dec
sub
in
out
int3
fsubs
mov
pop
call
xor
loopne
push
cmp
push
and
mov
cmp
mulb
sbb
loope
ds
incl
jecxz
in
dec
fildl
inc
cmp
push
andb
pushl
push
xor
stc
push
and
add
addb
aas
scas
adc
leave
icebp
test
iret
jmp
or
add
mov
xchg
push
inc
decl
cwtl
outsb
or
sub
push
sbb
jmp
pop
sbb
sbb
out
add
dec
dec
imul
cwtl
mov
mov
into
jmp
fcmovnbe
loopne
or
call
or
pop
fwait
mov
push
pop
dec
clc
adc
shr
fsubr
sti
in
cmp
mov
inc
in
daa
into
addr16
in
push
sub
test
cmpl
fdivr
pushl
dec
cs
subl
add
add
outsb
push
aaa
cmp
scas
jg
cmp
push
push
fstl
jmp
mov
mov
fcmovnb
adc
sub
sbb
sbb
push
cmpl
sbb
fsubp
inc
and
hlt
fistps
mov
decl
pushl
jae
out
lods
mov
xchg
add
movsb
fimuls
fsubr
sbb
fistps
fiadds
mov
sarb
scas
aam
lock
ret
push
mov
adc
in
and
sbb
mov
pushl
popl
xchg
push
xchg
loopne
in
mov
cld
aam
and
repz
push
int3
test
or
push
loopne
mov
jne
clc
lcall
je
inc
sub
out
std
adc
jge
push
cmpsl
insb
call
shlb
sub
aaa
adc
sub
inc
fs
xchg
insb
xor
lods
add
mov
cmc
scas
iret
in
popa
and
shll
dec
and
jne
or
sub
decl
dec
loopne
mov
clc
fwait
aam
and
jl
mov
sbb
xor
push
adcl
sbb
mov
pushl
dec
je
pop
fmull
sub
in
decb
loopne
into
js
push
popl
repz
incl
jb
xor
psrld
sbb
push
push
cmovae
pushf
outsl
shlb
lods
mov
into
incl
dec
clc
enter
jg
cmp
cmp
jge
dec
mov
dec
ret
adc
arpl
cmp
test
imul
psubusw
xchg
decl
fs
in
hlt
int
sbb
sbb
scas
data16
mov
pop
int
test
shlb
gs
jmp
pop
test
call
jmp
sub
decl
adc
dec
jbe
arpl
aam
jmp
popa
imul
movsl
inc
cmp
incl
inc
jne
xchg
fs
pop
jle
or
xchg
sub
in
cmp
mov
movsl
insl
stc
xchg
enter
aam
movsl
xchg
lcall
jg
sub
adcb
push
xchg
ds
jae
rol
sbb
insb
sub
es
out
pushl
mov
fcmovnb
fldcw
or
cli
testb
pop
xor
and
ljmp
pop
mov
lahf
shr
movsl
enter
mov
pusha
xchg
mov
cmp
out
shlb
popf
daa
dec
es
pop
mov
pop
jecxz
out
cmpsb
push
aas
pushw
sbb
add
mov
das
stos
popf
std
cs
pop
jb
popf
pop
jb
mov
jo
mov
ljmp
or
ffree
aad
xchg
and
or
int
cmp
cmp
std
psubusb
pushl
jo
fadds
imul
cmp
stos
nop
mov
or
divl
scas
popf
cltd
repz
call
sub
mov
dec
mov
push
xor
movsb
push
das
je
xor
push
mov
pushl
cmp
xchg
cli
rclb
push
cli
push
cmp
or
dec
mov
lret
sbb
test
icebp
lock
xchg
insl
jg
loop
loope
js
jnp
nop
bnd
rorl
inc
push
sbb
mov
inc
addr16
aam
repnz
lret
mov
inc
jl
xchg
mov
pop
mov
hlt
mov
sbb
mov
xor
mov
pop
sub
jge
fsubrl
mov
aaa
je
cmp
mov
sar
ljmp
stc
push
dec
sub
cmpsb
shr
ja
push
lock
pop
hlt
aam
scas
clc
mov
add
mov
lret
int3
stos
pop
inc
lret
aaa
sub
jnp
xchg
inc
ljmp
mov
cmpsb
xor
lock
jp
lock
add
dec
xchg
sbb
mov
pushl
cld
ret
or
cmp
and
aas
movsb
cltd
jle
push
or
lock
mov
ror
mov
rolb
inc
aad
incl
fmull
add
fmul
in
add
add
std
js
lds
cmpsb
incl
imull
out
addr16
stc
jno
dec
cmpsb
nop
mov
mov
dec
inc
stos
or
xor
int3
dec
cmp
mov
and
sbb
in
ds
into
test
incl
sbb
jo
xorb
movsb
insl
sti
negl
or
fldl
test
cmpsb
pop
xor
and
mov
clc
ljmp
adc
jb
jae
jo
mov
lahf
ds
adc
stos
sub
ljmp
ret
push
add
sbb
and
dec
adc
mov
jg
mov
lret
sbb
es
mov
repnz
dec
popf
sub
cmp
decl
push
mov
leave
pop
push
jg
xchg
inc
jg
pop
pop
ret
aas
jne
jl
add
sub
and
movsb
incl
sub
xchg
jae
inc
mov
cli
sub
loope
mov
std
bound
jg
mov
push
add
lea
mov
mov
and
ljmp
and
xchg
jle
js
lcall
in
xor
xor
sub
ljmp
es
xor
push
aam
push
sbb
mov
pushf
push
movsl
push
orb
call
mov
sub
mov
mov
mov
jnp
mov
adcl
incl
scas
jbe
mov
jmp
sbb
lret
lcall
jno
or
cmpsb
dec
outsb
xor
mov
mov
jae
out
lret
xlat
xchg
call
push
movsb
push
call
xchg
ja
sub
cmp
add
adc
xor
sarl
ljmp
popa
dec
dec
xchg
pop
push
xor
add
jmp
fildll
lods
repnz
pop
ja
pop
sbbl
cli
cmc
mov
adc
decl
mov
xlat
outsb
in
fld
fistl
cmp
xor
push
mov
add
xchg
and
in
push
test
push
imul
xchg
and
dec
inc
lahf
pushf
jge
shrb
inc
lods
scas
clc
pushl
imul
mov
inc
cli
ja
xchg
aas
xchg
inc
adc
ljmp
mov
jl
cs
movsl
dec
sub
loopne
sub
insl
sbb
in
mov
mov
mov
into
aas
mov
mov
scas
adc
mov
cmp
fdivp
lcall
dec
aas
cmp
cmp
repnz
inc
xlat
inc
ja
clc
or
or
mov
loop
pop
movsb
decl
adc
push
imul
pop
pop
dec
lods
add
push
popf
cmp
mov
push
icebp
mov
fidivl
push
iret
bound
divb
push
adc
aas
in
aas
pushf
inc
mov
lcall
shll
or
push
in
fiadds
decl
jecxz
xchg
sbbl
fsubl
push
inc
aad
and
sbb
push
add
incl
and
flds
lds
inc
leave
push
sbb
jge
mov
test
jle
pop
pushf
decl
fs
sub
and
js
mov
stc
scas
xor
decl
in
xor
mov
mov
mov
cs
fnstcw
inc
scas
inc
jmp
xchg
push
daa
mov
adc
pusha
inc
mov
sub
xor
push
inc
sbb
addr16
mov
mov
je
roll
into
cltd
inc
jnp
cmp
sub
sbb
xor
cmpsl
sbb
sub
ret
and
pushl
lret
pop
scas
pop
lock
and
test
leave
imulb
das
in
lar
mov
cld
decl
cmpsl
xlat
pop
sub
push
dec
rcrl
mov
insb
sbb
call
fs
insl
daa
data16
xor
dec
mov
leave
pushf
add
jno
ljmp
pop
push
shll
popf
dec
and
inc
dec
xchg
push
sbb
or
inc
div
lret
jg
shrb
je
sbb
andl
push
xchg
mov
xor
mov
sbbl
pop
cmc
sub
incl
dec
sbb
sub
mov
movsl
repnz
pop
je
stos
inc
stos
adc
icebp
adc
test
aas
add
mov
xor
xchg
inc
bound
xchg
lods
lds
cld
ss
xor
or
lock
mov
xor
popa
das
mov
and
idivb
lcall
out
adcb
jns
notl
negb
cmc
pop
pop
lock
scas
sub
or
daa
insl
movsl
jmp
mov
rolb
scas
pop
or
decl
sub
inc
fyl2xp1
sahf
or
push
mov
in
scas
enter
inc
push
jne
mov
fnsetpm(287
jne
jmp
adc
imul
leave
inc
or
sub
jge
adc
inc
mov
lods
gs
mov
incl
imul
adc
fbstp
mov
mov
fcompl
add
sbb
movsl
lcall
loopne
add
lods
adc
mov
rep
out
aad
dec
push
or
int
decl
cmpsb
dec
enter
lea
xor
or
out
sub
out
push
fbld
inc
pop
insb
add
push
sub
xchg
jae
xchg
out
cmp
jne
mov
mov
cmpsl
test
subb
cld
add
inc
or
movsl
lret
pop
divb
pop
jbe
ljmp
dec
dec
mov
xchg
lods
adc
aad
cmp
scas
push
pusha
fwait
mov
cmp
hlt
out
sub
xor
jmp
aad
cmp
enter
and
jl
pop
jp
nop
pop
loopne
pop
inc
mov
mov
incl
in
cli
mov
addb
push
stos
cmp
sub
ja
push
cld
push
mov
add
push
sub
push
hlt
jmp
inc
mov
pop
pop
cld
dec
mov
push
repz
inc
push
jl
or
outsl
dec
pop
add
mov
es
xor
sti
mov
pushl
js
cmpsb
and
popa
mov
test
or
mov
jmp
cmp
rorb
enter
push
inc
mov
dec
ss
call
aad
mov
loope
iret
ljmp
xor
icebp
cwtl
inc
sub
rorb
xchg
fstpt
jp
cwtl
xor
dec
sub
andl
pop
sub
jle
cmp
dec
sub
imul
cmp
dec
mov
jl
mov
cmp
mov
add
sbb
or
mov
pop
jecxz
lret
pop
cli
pushl
cmc
push
xchg
int
iret
aaa
ss
xor
xor
mov
cmp
ljmp
pop
add
add
int3
pop
dec
sbb
lds
cmp
stos
add
sahf
inc
ljmp
dec
xchg
mov
jo
lea
stos
or
jnp
fucomip
movsb
pop
pop
mov
shlb
decl
enter
mov
jno
or
dec
jmp
mov
mov
inc
decl
add
inc
push
rol
int
pop
pusha
xchg
decl
jns
call
out
sub
push
push
sub
adc
clc
shlb
les
insl
ds
incl
lret
cmp
sub
mov
or
js
das
incl
or
int3
pop
add
sbb
pop
jae
ljmp
out
icebp
cmp
mov
add
stos
push
insl
loope
pop
adc
dec
pop
lcall
ret
mov
lcall
or
xorb
jg
ss
xor
add
jae
fistl
jecxz
mov
jmp
push
inc
jbe
insb
out
mov
dec
lret
shrl
jbe
nop
mov
inc
testl
mov
test
push
dec
inc
out
decb
adc
mov
mov
jmp
dec
mov
cltd
jl
mov
mov
sbb
sub
xchg
incl
mov
xchg
add
cwtl
out
adc
mov
mov
pop
es
xlat
pop
cmp
in
inc
cmp
sbb
test
sub
mov
xchg
stos
clc
test
ds
pushl
std
mov
xchg
rcl
fsubrl
xor
sbb
bound
loopne
ljmp
ja
inc
repnz
pusha
sti
mov
sarb
or
push
cltd
out
cmp
push
andl
jmp
insl
sub
sbb
push
fldt
inc
xorb
inc
sti
dec
scas
popf
pushf
inc
pop
fldcw
pushl
in
lcall
dec
or
aam
and
mov
frstor
push
lock
sahf
xchg
push
fildl
or
xchg
fstpl
mov
hlt
lods
mov
insl
add
mov
test
push
out
jno
jecxz
decl
lds
add
test
mov
or
ss
stos
das
ud0
out
xchg
mov
rorb
xlat
push
fadd
test
aas
xchg
dec
jg
jmp
mov
stc
sbb
push
jne
mov
xlat
enter
ficoml
cli
jnp
push
int3
cmpsl
mov
sbb
push
sbb
mov
or
loop
add
jns
adc
out
pop
pop
enter
decl
insl
jne
lods
xor
aas
nop
add
sub
push
mov
cmp
mov
cmpb
xchg
dec
insl
cmp
cld
inc
push
cmp
scas
pop
pusha
stos
lods
sarb
movb
rcrb
jmp
loopne
push
orl
sarl
movsl
mov
xchg
icebp
enter
sbb
js
decl
xchg
mov
test
xchg
aad
ja
imul
cltd
into
ljmp
cld
gs
into
ret
push
jne
enter
adc
dec
adc
jp
mov
mov
lock
or
faddl
adc
mov
mov
or
jg
inc
jns
mov
mov
leave
das
es
jp
mov
push
adc
adc
xchg
fistpl
mov
test
scas
lock
pop
aad
out
sbb
outsl
sbb
sbb
mov
or
jg
sub
inc
imul
addl
pop
jne
movsb
xor
mov
pusha
pop
subb
push
lods
sbb
int3
adc
pushl
lcall
pop
test
lea
mov
sbb
call
push
daa
pop
and
jmp
int3
and
das
std
stos
adc
pop
inc
jb
push
aad
int
scas
cltd
pop
or
mov
cwtl
xorl
jmp
add
outsb
jmp
push
fldl
sbb
add
jmp
cmp
stc
cmp
xchg
dec
int3
dec
rorb
sti
cmp
pop
fistpl
sti
or
mov
aad
inc
les
cmp
int
cmpsb
aaa
ljmp
jb
leave
addr16
mov
cmp
roll
movsb
push
call
fcoms
or
out
clc
jmp
lcall
mov
fwait
inc
cltd
dec
je
das
sbb
call
sub
mov
pop
mov
xchg
stos
jbe
js
push
bswap
push
ljmp
clc
ljmp
dec
out
mov
cwtl
jo
shll
aas
sahf
sbb
inc
fisubs
jg
mov
pop
pop
movsb
rorl
es
call
imul
and
and
adc
add
mov
ja
jmp
jp
xchg
leave
xor
inc
xor
decb
inc
les
and
decl
pop
stos
hlt
sbb
mov
lcall
fucom
enter
call
sbb
lcall
push
push
out
mov
ja
xchg
test
jmp
dec
outsl
cmp
mov
push
sti
jl
xchg
icebp
sarb
out
jmp
jl
push
inc
shl
push
inc
pop
mov
sbb
sbb
xlat
addr16
xchg
inc
fwait
int3
xchg
rcrb
fstps
mov
fsubp
mov
addb
fsts
js
mov
or
jecxz
jnp
xchg
lods
rorb
cmpsb
cmpsb
inc
jns
push
mov
mov
push
jbe
pop
push
loope
inc
cld
iret
inc
popf
sbb
outsb
push
push
dec
pop
sub
int
inc
jle
inc
xlat
pushw
ljmp
lcall
dec
push
int
test
jle
out
icebp
insb
mov
popa
mov
loop
xor
adc
lret
aam
jl
pushl
add
xchg
enter
sbb
in
sub
inc
movsl
aaa
inc
xor
pushf
out
fs
add
pop
ds
ljmp
aam
jg
mov
or
pop
jne
push
sub
insb
andl
enter
push
push
or
imul
fwait
add
shl
dec
roll
inc
pop
loop
pop
mov
out
ret
in
sub
arpl
fcomip
stc
pushf
adc
test
pop
daa
fisubrl
lods
inc
cmp
xor
push
mov
out
jo
xlat
in
bound
adc
pop
insb
in
pop
imul
and
inc
sbb
ljmp
psrld
mov
hlt
sub
mov
mov
mov
mov
loop
jl
jg
inc
popa
repz
and
mov
push
sbbb
sub
cmp
dec
mov
cli
sbb
cmp
leave
cmp
out
xor
sub
sub
call
pop
mov
jl
fidivs
ss
imul
les
fildll
pop
jmp
sub
sub
mov
scas
pusha
mov
mov
adc
and
xchg
xor
mov
daa
inc
inc
or
pushl
mov
pop
xor
mov
arpl
fildll
popf
sbb
icebp
inc
decl
xor
fs
mov
flds
ret
sahf
add
mov
pushw
add
pop
or
mov
int
jmp
push
mov
into
jp
mov
add
pushf
pop
loopne
pop
inc
cmpsb
ret
mov
movsl
mov
das
sar
xchg
stc
jmp
sarl
inc
mov
mov
xchg
sbb
lcall
cmp
cmp
mov
sub
fldcw
stc
std
ret
xchg
pop
popf
xchg
mov
add
in
ljmp
sub
fisubs
xor
popf
aas
fwait
cmc
into
mov
out
out
arpl
das
xchg
cmp
cvtps2pd
mov
push
pushl
push
std
and
insb
mov
push
mov
mov
fs
mov
jo
jmp
lea
das
fidivrs
jnp
mov
cmp
or
jmp
fnstenv
adc
stos
dec
pushf
pop
cmp
leave
or
ret
insb
mov
incl
push
mov
outsl
cmpsl
les
cmpsb
ja
push
stos
mov
inc
test
xor
roll
xor
int3
ret
stc
fwait
ljmp
add
out
js
inc
push
scas
and
or
js
dec
aam
pusha
fcomip
call
dec
pop
xchg
lahf
xchg
or
gs
fisubrs
js
pop
jmp
out
dec
sub
cmpsb
jg
and
cmp
shrl
out
pop
or
xor
mov
xchg
ljmp
lahf
daa
pop
adc
or
mov
push
inc
notb
rclb
fadds
cmpsl
inc
int3
int
push
shrl
pushl
xchg
addb
inc
mov
insl
jb
notb
into
nop
aas
pop
mov
iret
ljmp
cmpsl
lods
dec
pop
stos
in
btr
jno
rcrl
xchg
pop
stc
ror
pop
aam
sbb
aaa
jbe
pop
fidivl
negb
fildl
pushl
mov
mov
inc
or
mov
nop
inc
pop
les
xor
cmpsl
jl
or
ljmp
test
pop
and
dec
and
dec
xor
xchg
sahf
loopne
add
jb
lock
test
mov
fcmovu
xorl
and
js
mov
xchg
sbb
mov
lahf
imul
fdecstp
and
les
xchg
ja
push
out
xor
and
movsb
movsl
add
fcoml
mov
adc
or
mov
repnz
repnz
ja
mov
inc
in
jo
pushl
or
dec
xchg
add
out
inc
clc
lret
aam
adc
movhlps
popa
pop
mov
in
mulb
inc
ret
mov
test
push
mov
shlb
dec
add
add
cmc
stos
pop
xchg
insb
repnz
xchg
push
das
sar
mov
cli
cmp
lods
xchg
xchg
add
roll
or
xchg
fdivr
lcall
mov
sbb
call
sbb
loope
and
lds
cltd
fstp
std
insb
fdivrp
or
mov
mov
js
pop
repnz
js
inc
lcall
call
add
mov
scas
dec
hlt
dec
sub
loopne
cmp
and
sarb
lret
dec
in
aam
cmp
out
cld
in
outsb
sbb
mov
mov
arpl
cli
leave
out
bound
lods
or
pmuludq
pusha
mov
lea
jmp
fldcw
sub
insl
jecxz
sahf
xchg
int3
hlt
jmp
ljmp
jecxz
loop
mov
push
loopne
dec
sub
pop
sahf
enter
jnp
mov
or
and
xchg
stos
imulb
cli
xchg
and
jp
and
lods
mov
inc
popa
sti
stc
jge
ret
lret
call
pop
mov
loop
stos
jb
scas
imul
enter
mov
fisttpll
call
decl
lahf
or
fwait
in
fdivrl
aam
lret
ret
clc
cmpsb
mov
enter
adc
mov
scas
mov
decl
movsl
movsb
rcrb
test
jb
sub
data16
call
enter
pop
shlb
mov
loope
lahf
cltd
dec
cwtl
push
outsl
xor
pop
mov
fdivr
lcall
rorb
push
sbb
xchg
xor
jle
mov
into
adc
mull
mov
test
mov
adcl
mov
notb
and
xor
cmpb
jmp
int3
add
std
pop
aam
inc
out
out
push
cmp
decl
sar
dec
out
out
and
xchg
cmp
test
cmc
or
jl
push
ret
push
mov
jbe
jo
movsl
stos
or
mov
mov
ljmp
fidivl
push
push
mov
lret
pop
loop
ficoms
push
shll
or
dec
mov
lahf
fdivs
adc
dec
adc
call
daa
mov
aaa
and
jo
fdivrs
loope
shl
mov
xchg
das
lcall
sbb
dec
enter
ss
add
mov
jno
mov
and
lcall
pop
push
pop
mov
movsb
repz
cmpl
xor
lahf
push
add
pushf
pop
js
mov
pop
add
iret
jg
push
xor
xchg
adc
call
loopne
arpl
dec
sbb
jecxz
andps
jg
pop
or
dec
xlat
jp
inc
out
clc
adc
pop
pop
mov
sbb
testl
aad
push
xor
xchg
fstpt
mov
cmc
push
test
jle
mov
push
jmp
pushl
outsb
shrl
sbb
adc
push
push
loopne
insl
sbb
or
imul
mov
incl
mov
cmc
dec
inc
mov
lahf
sbb
mov
jae
out
fisubl
push
arpl
and
decl
mov
lahf
cli
and
test
adc
push
push
mov
idivb
cmp
add
in
lcall
lcall
cwtl
dec
subb
cli
or
popa
fstl
mov
lcall
xchg
xchg
stc
mov
push
test
adc
fdivr
pop
jl
sarb
les
inc
out
pop
xchg
call
add
sub
push
cltd
jno
xchg
adc
in
adc
lret
arpl
mov
decl
pop
enter
ret
xchg
pop
cmp
test
and
das
mov
int3
mov
pushl
sub
lock
inc
dec
mov
fimuls
subl
js
dec
aam
fdivrl
xor
push
iret
arpl
mov
cmp
lret
ficoms
decl
les
call
stos
cmp
dec
and
fs
divb
inc
inc
inc
or
dec
mov
or
sbb
jae
js
lret
addb
xor
loope,pt
loop
inc
mov
mov
leave
fcomip
aaa
leave
push
inc
pop
dec
dec
or
rcll
mov
cltd
jge
xchg
test
mov
sbb
rcrb
mov
xor
insb
flds
cmp
fs
inc
and
ja
lcall
push
xor
popf
nop
ss
jb
adc
ljmp
xchg
sbb
mov
add
and
add
das
shlb
pop
mov
or
dec
jle
xor
repnz
push
ret
aad
push
and
pop
mulb
push
mov
incl
push
or
sbb
add
sbb
cmp
lea
in
adc
incl
das
mov
lret
sahf
out
subb
repz
rcr
nop
lea
js
dec
insl
sbb
call
stos
add
icebp
jbe
xor
pop
inc
andl
adc
stos
xchg
call
call
rcll
adc
sar
push
or
mov
pop
ds
dec
out
add
test
jns
jg
push
pushf
xor
pop
fmull
adc
xchg
cmc
xchg
and
call
divb
push
lret
imul
cmp
out
dec
jns
dec
jg
lcall
pop
sub
in
pusha
data16
sarl
imull
popf
push
scas
ret
cmpsb
and
push
sub
jo
jmp
dec
stos
sarb
sahf
dec
or
insb
xchg
clc
outsb
pop
rcll
sahf
or
lcall
mov
and
mov
dec
xlat
push
icebp
sbb
addl
or
dec
lock
mov
mov
mov
lods
jo
out
lods
std
dec
ret
testl
test
mov
incl
inc
leave
adc
xor
loope
aas
dec
je
jnp
adc
lcall
ljmp
mov
sub
cmp
in
sbb
adc
insl
pop
lahf
fnstcw
push
dec
sub
push
test
lcall
popf
jecxz
xor
movsl
push
inc
mov
shlb
jnp
sahf
jo
mov
xchg
pop
push
jge
ljmp
xchg
sarl
adc
pop
cmp
jg
shrb
add
lock
std
pusha
xchg
push
jmp
mov
nop
mov
mov
test
cmpsb
mov
mov
mov
xlat
das
in
adc
dec
jl
addr16
sub
adc
push
jnp
je
xor
push
lahf
ror
aas
outsb
dec
mov
ficoml
jo
adcb
inc
cmpsb
pop
jle
sar
ljmp
sahf
daa
mov
xchg
push
jo
xor
dec
and
repnz
mov
call
sti
lahf
int
fisttps
pop
xor
mov
jns
popf
dec
add
jae
insb
push
cmp
ljmp
dec
sti
call
dec
lcall
mov
jecxz
ja
or
rolb
or
lcall
cs
cmp
push
xor
mov
pop
adc
std
dec
pop
stos
mov
fistpll
fsts
xor
test
lret
into
insb
or
decl
sbb
pshufw
cmovp
fidivrl
ret
push
scas
push
icebp
cmp
inc
jl
add
call
repz
enter
cmp
and
in
das
xchg
loopne
jp
fwait
or
pop
xchg
ljmp
sbb
ss
xor
aaa
sub
mov
xor
icebp
xlat
mov
nop
lcall
data16
pop
mov
cli
outsb
or
cltd
or
cltd
outsb
jg
or
dec
outsl
loop
jne
movsb
cmc
imul
adc
xchg
test
les
mov
ljmp
ror
sbb
enter
lret
push
jg
stos
pop
pop
lcall
xchg
popa
fmuls
sub
divb
jns
hlt
or
push
decl
lods
out
fsts
les
movsb
jg
or
fisttpl
ljmp
into
mov
sub
mov
add
je
addb
decl
mov
cmp
and
xchg
ja
ljmp
les
adc
jb
pop
notb
cmpsb
ja
mov
iret
inc
mov
cmp
mov
in
shlb
or
ljmp
gs
or
or
movsl
dec
xor
xchg
pop
xor
lahf
xchg
aad
lds
daa
loopne
fnstenv
rcrl
mov
repnz
mov
fistps
jge
das
rorl
jmp
mov
push
pushf
mov
scas
clc
call
xor
in
pop
push
jle
out
mov
clc
lret
decl
xor
repz
dec
push
push
jmp
shll
mov
call
adc
cld
pop
jnp
xchg
popa
cmp
mov
sub
imul
fcos
mov
mov
std
data16
test
adc
stos
fwait
jo
adc
call
mov
jnp
mov
mov
stos
mov
push
dec
jbe
inc
pop
jg
cmc
scas
nop
or
pushf
mov
jl
xlat
movsb
inc
scas
push
sbb
jns
fcomp
adc
outsb
stos
inc
lahf
adc
adc
int3
adc
js
inc
addb
jecxz
test
lods
in
cli
jle
or
cmp
aaa
add
std
pop
xchg
cmp
cli
cmp
decl
dec
inc
mov
ss
or
imul
sbb
xor
dec
and
lods
je
sbb
add
mov
sbb
aad
repnz
fs
popa
jno
jg
mov
popf
jbe
jg
int
cli
xor
jmp
jnp
aad
inc
jb
mov
mov
sbb
lock
push
jmp
push
notl
scas
imul
lahf
test
cmpsb
repz
loopne
loop
lret
lahf
cwtl
and
xchg
adc
mov
cmpsb
jns
decl
push
stc
add
dec
jl
push
movsb
outsb
push
jmp
inc
sub
pushl
xlat
push
out
out
js
dec
mov
xor
fisttps
mov
xchg
aad
cmpsl
fwait
push
pop
add
mov
xchg
ljmp
call
fcompl
daa
and
cmp
mov
popa
fwait
repz
rcll
add
inc
cmp
fmuls
xchg
xchg
and
imul
jmp
dec
popf
pop
pop
cld
mov
and
xor
add
lahf
movsb
js
repnz
popa
mov
nop
arpl
adc
es
dec
push
add
lea
cltd
cmp
lahf
or
pushl
and
outsb
out
stc
popa
sbb
mov
call
inc
jmp
fcom
pop
xchg
fs
jge
lods
xlat
in
push
pushl
aaa
inc
or
add
and
jg
sbb
xor
mov
iret
pop
mov
fildll
cwtl
pop
push
test
push
jns
jge
pusha
movl
jp
pop
cmc
mov
mov
ret
push
push
mov
mov
push
fists
sahf
jg
adc
adc
adc
fadds
push
into
push
ret
xchg
add
add
mov
inc
call
addl
xor
inc
pop
sub
dec
outsl
cli
xchg
sub
nop
xchg
dec
sbb
pushl
ds
arpl
jo
loopne
lods
xchg
stos
push
scas
push
mov
subl
sbb
hlt
add
mov
insl
aad
pushl
lcall
stos
ficoml
xor
adcb
dec
popl
sbb
cmp
test
std
push
inc
add
dec
dec
faddp
loop
mov
shrl
jmp
cmc
mov
stos
lock
inc
into
aad
pushf
aam
jns
push
loope
inc
inc
mov
aad
or
cmp
xchg
daa
scas
bound
push
pop
outsb
ljmp
xor
je
mov
cmc
std
cmpsl
xchg
je
pop
clc
jmp
and
addl
lret
fsub
push
cwtl
fbstp
ljmp
jb
cmpsl
inc
gs
adcb
and
ljmp
pop
cmp
ret
inc
sub
jbe
add
clc
pushl
dec
xlat
leave
xchg
and
das
cmp
and
push
dec
pusha
out
test
mov
mov
cltd
clc
out
sub
inc
aas
mov
adc
push
loop
filds
sarl
adc
ds
push
cmp
inc
jno
pop
jae
cmp
mov
pop
add
inc
cmpsl
sbb
ds
and
adcb
mov
aam
mov
mov
jns
jo
fsubrl
sbb
mov
xor
inc
or
cmp
dec
sahf
sub
stc
loop
mov
aaa
outsl
and
push
mov
incl
add
cld
sub
mov
add
test
decl
lock
mov
mov
testb
jnp
cmp
decl
pop
add
jecxz
pop
fldcw
xor
lret
ljmp
xchg
pop
mov
out
mov
sub
xchg
fsts
aad
dec
mov
testl
nopl
pop
mov
xor
mov
lea
add
lds
scas
loop
cltd
xchg
cld
ud0
jmp
adc
or
aad
mov
fimuls
dec
lret
sub
adc
cmp
mov
loope
sahf
xor
ja
mov
test
add
aam
mov
in
jmp
aaa
nop
mov
subl
push
inc
pop
iret
push
lret
test
or
cmpsb
iret
cmp
ret
rcr
jp
stos
cwtl
enter
je
sbb
jmp
xor
cmp
lcall
or
enter
stos
lock
mov
ret
jns
push
les
xor
xchg
jnp
and
or
fcmovnu
add
inc
xchg
add
incl
adc
pop
jne
xor
gs
push
mov
rorb
shl
popa
addr16
adc
mov
push
jl
ljmp
fsub
xchg
xor
out
xchg
or
pop
stc
lret
push
or
popa
test
mov
fildll
jecxz
sti
daa
sbb
incb
leave
nop
push
jmp
sub
ss
fwait
jge
xor
sub
je
bound
inc
pushf
fistpll
js
pop
ja
leave
and
push
push
clc
dec
cmp
test
lret
lods
or
into
imul
in
aam
jmp
xchg
sbb
int
sub
add
addr16
int3
cs
pop
into
inc
divl
ljmp
dec
jno
dec
pop
sbb
lods
mov
or
fistl
out
ficompl
mov
inc
or
loop
movsl
cmp
jg
pop
and
cltd
or
inc
loop
inc
xor
push
cmpsl
or
lret
xor
dec
sub
les
cs
push
call
mov
sub
shrb
dec
fdivl
mov
jns
push
mov
mov
out
in
out
ret
rcll
addb
sbb
clc
mov
and
push
repz
mov
mov
cmp
dec
pmaxub
loopne
or
sti
es
stos
out
mov
incl
rorb
stos
addl
mov
outsb
pop
das
cmp
decl
pop
mov
or
in
aaa
xchg
mov
mov
psrlw
pop
mov
orb
lods
xor
fcoml
fsubr
sbb
and
or
mov
and
lea
incb
in
sbb
lret
xlat
dec
xor
lcall
push
in
mov
lods
pop
xchg
aas
repnz
inc
daa
outsl
adc
leave
pop
mov
insl
mov
jbe
out
inc
andb
inc
push
add
mulb
adc
std
sahf
cmp
cmp
adc
cli
lret
fsincos
jbe
or
out
clc
sahf
fisttpl
or
inc
fcompl
aaa
pop
mov
int
cmp
call
add
dec
dec
int3
pop
lcall
loop
les
mov
dec
sbb
decl
mov
push
adc
into
mov
fsubs
jne
mov
and
ret
push
fs
mov
jmp
addb
push
xchg
jmp
es
push
jne
dec
adc
xchg
xor
adc
dec
cmp
iret
fmul
movzbl
push
xchg
cmp
cmp
add
xor
mov
pop
cmpsb
mov
mov
mov
mov
fcomip
decl
aaa
jmp
mov
jg
mov
and
decl
xchg
fnstsw
shll
add
testb
ror
push
outsl
pop
or
incl
pushf
loope
xlat
fwait
xchg
out
popf
xor
pop
outsl
mov
dec
ret
jp
and
adc
decl
mov
jns
add
fldln2
leave
dec
jl
pop
ja
lret
pop
call
and
sub
dec
mov
sub
imul
movsl
pushl
in
lcall
sub
arpl
int
neg
push
imul
sarb
jmp
mov
sub
pop
inc
fucom
mov
out
xor
mov
sub
jne
cli
test
outsl
fists
pop
pop
ret
out
sbb
mov
stos
fwait
aam
data16
sub
mov
mov
icebp
icebp
xchg
add
ljmp
and
in
insb
mov
dec
dec
dec
faddl
adc
fstp
roll
mov
add
subb
cmp
lods
lea
and
push
jmp
mov
popa
mov
jmp
pushl
sub
lahf
mov
fwait
cwtl
enter
cs
lret
inc
mov
adc
out
push
ficoml
mov
push
add
adc
ret
cltd
sub
xchg
mov
ret
into
jmp
shl
idiv
cld
inc
iret
cmp
cmp
pop
sbb
std
xor
jmp
call
clc
add
and
push
mov
out
push
or
mov
mul
fstpt
mov
outsl
pop
rcrb
sbb
pop
inc
push
and
scas
out
mov
filds
sbb
inc
pop
loopne
and
jno
pop
repz
hlt
cmpsl
aad
into
jnp
or
or
or
cmc
dec
xor
call
jle
int
iret
cmpsb
lods
cmp
int
or
push
fbstp
mov
dec
xlat
ljmp
and
fiadds
fdivrl
mov
aas
pushl
pop
push
push
clc
inc
aad
outsl
jns
scas
movsl
jle
jns
das
pusha
jle
cli
adc
mov
stc
mov
sbb
pop
cmpsb
cli
and
repnz
mov
push
enter
cld
iret
movsl
ljmp
fsubrs
inc
mov
mov
ds
dec
push
mov
pop
mov
mov
jg
out
test
movsb
scas
add
sbb
sub
add
out
enter
shll
in
jne
imul
iret
mov
or
pushf
ljmp
and
movsl
or
pop
inc
pop
jbe
arpl
clc
imul
lcall
mov
pop
lcall
out
imul
jb
add
dec
mov
jbe
cmp
or
decl
jmp
test
xchg
jg
cmp
pop
fldt
sbb
lahf
movsb
adcl
decl
adc
orb
mov
mov
negl
cmp
push
sbb
mov
jo
jg
xchg
xorb
mov
ljmp
shlb
mov
lahf
pop
mov
shld
push
mov
cld
call
popf
mov
sub
sbb
sub
mov
test
ljmp
cmp
stos
xor
xchg
jb
repz
mov
stc
xor
cltd
inc
nop
sahf
out
ds
push
sahf
xchg
ret
sub
push
jge
dec
es
decl
lcall
add
sub
inc
aaa
loopne
mov
mov
scas
stos
sbb
push
iret
jnp
dec
dec
ret
xchg
test
fldenv
xchg
pop
cmp
lcall
or
iret
xor
in
lds
arpl
xchg
pushf
lcall
pop
mov
xchg
jmp
notb
xlat
insb
sbb
add
mov
scas
aam
imul
fdivr
ds
pop
icebp
mov
out
and
enter
sbb
stos
jmp
sub
mov
push
aam
lahf
mov
sti
adc
sbb
outsb
inc
cmp
rolb
ds
xchg
cmp
lods
ljmp
adc
sbb
cmp
aad
cwtl
lret
adcl
idivb
push
xor
ja
jmp
fdivl
sub
es
int
lock
shrb
pop
inc
jmp
cmp
pushl
imulb
outsb
fsubrp
xor
sbb
cmp
push
movsb
xor
push
shll
adc
jmp
inc
je
cmpsl
fistpll
sub
pop
pop
pop
mov
and
movsb
into
dec
out
dec
cmp
add
fldenv
call
sub
outsl
cmp
dec
aas
lahf
mov
stos
and
mov
mov
shlb
movsb
popf
mov
dec
out
xor
movsb
mov
ja
or
mov
mov
adc
or
loopne
dec
clc
incl
test
sti
mov
dec
pop
adc
mov
adc
jbe
in
hlt
inc
pop
repnz
test
xor
das
cmp
jmp
cld
and
mov
test
lahf
mov
pop
addr16
adc
mov
je
inc
add
pushl
loope
lds
gs
jmp
mov
nop
mov
loopne
mov
iret
push
and
dec
mov
jge
pop
std
dec
xchg
xchg
mov
mov
jl
rolb
pop
inc
imul
gs
mov
loopne
ud0
pushl
sub
xor
pop
addr16
lahf
push
fcoml
rcll
add
incl
jo
xchg
rcl
push
pop
sahf
pushf
sbb
js
pop
in
adc
loope
outsl
repnz
jge
inc
jmp
pushf
mov
mov
xchg
test
or
inc
loop
rolb
lahf
repz
cli
push
sti
inc
or
data16
stos
pop
fsubs
push
mov
les
ja
repz
ljmp
ljmp
cmpl
dec
pop
jno
rclb
cmp
outsl
das
vpshufd
incl
les
cmp
inc
sti
imul
xor
sub
adc
cltd
fsub
adc
pop
filds
mov
mov
add
add
add
pop
ljmp
fmuls
aaa
pop
push
out
das
push
or
hlt
decl
push
movl
jb
pop
stos
xchg
sub
dec
aad
and
xor
xor
xor
add
sub
push
testl
pushl
sbb
sahf
sarl
daa
push
mov
test
mov
adc
push
js
pop
std
mov
leave
add
dec
loopne
in
pop
mov
lds
xor
lcall
setle
dec
adc
cld
mov
es
scas
dec
add
call
lods
addr16
mov
jno
out
jae
cld
jbe
repnz
lock
lods
imulb
ljmp
imul
adc
push
fidivrl
dec
push
call
push
shlb
iret
ret
fwait
push
call
insb
clc
pop
lret
xor
sahf
cli
or
sub
mov
fldl
fs
jo
decl
rolb
sbb
xor
sar
enter
sub
xor
test
fisubs
jno
ret
testb
cmp
pushf
sub
jle
lods
pop
cmc
lods
mov
ljmp
jae
and
in
cmp
int3
jno
adcl
ja
mov
decl
xor
ljmp
push
inc
ret
add
add
and
js
cmp
lcall
sub
cmpsb
test
fstpt
jp
imul
icebp
int3
ljmp
psubb
fs
add
cld
daa
pop
or
aas
xor
and
push
clc
pop
int3
js
in
fcomip
scas
call
push
pop
and
leave
je
xor
dec
dec
add
stc
outsl
fs
cwtl
ljmp
call
cmpsl
jg
sub
adc
sub
inc
fstp
lods
dec
push
ljmp
adc
jno
rcl
dec
cmp
push
testb
shrb
hlt
mov
std
add
lahf
ficompl
push
adcl
out
pop
inc
stos
int3
sbb
dec
xchg
mov
icebp
pop
nop
movsb
out
sbb
rcrl
adc
inc
lahf
dec
in
repz
push
push
sub
loopne
cltd
icebp
sub
ja
test
mov
fs
pushl
jmp
cmpsb
mov
outsb
rorl
xor
cmp
in
xor
incl
call
ljmp
cmp
push
cmpl
fwait
call
xchg
lds
jl
pop
popf
inc
and
push
inc
jmp
inc
test
pop
test
out
aaa
call
test
jbe
arpl
mov
sub
mov
cld
jp
gs
jg
jle
mov
shlb
imul
mov
les
dec
sti
out
repz
shlb
mov
jno
mov
mov
rcrb
and
call
push
adcb
or
jecxz
mov
inc
loope
int
mov
call
inc
aad
sbb
mov
adc
dec
mov
data16
push
xor
les
jg
dec
ret
mov
nop
add
scas
int3
fxch
jne
sbb
cmp
pop
pop
cmpsb
aad
or
jo
movsb
jg
lret
xchg
in
add
mov
ljmp
push
je
push
add
adc
mov
mov
int
rorb
add
ljmp
adc
hlt
xor
inc
pop
push
out
mov
and
mov
incl
sbb
mov
pop
xchg
daa
jno
lods
fcmovb
pop
aaa
aad
push
mov
cmp
pop
push
cltd
and
or
fsubr
sub
cmpsb
jmp
push
xor
das
cmp
pop
add
jo
sar
push
fs
subl
int3
dec
push
call
cli
test
mov
in
jecxz
dec
mov
in
repnz
sbb
jmp
dec
sbb
mov
loopne
adc
sarl
loop
lods
or
jg
mov
add
sbb
mov
clc
add
jp
lea
inc
jle
fcmovne
pushl
lds
mov
inc
js
push
adc
xor
inc
add
mov
push
jbe
int
gs
shlb
mov
mov
pop
push
jle
dec
stos
sub
sub
bound
lcall
sub
mov
pop
pop
shll
test
out
mov
push
mov
cld
or
jg
jp
mov
or
adc
loopne
iret
xchg
inc
mov
ja
dec
xchg
iret
push
jl
cmc
mov
mov
mov
pushf
arpl
ljmp
xchg
insl
lahf
ret
sub
xchg
jne
mov
in
mov
xchg
inc
scas
daa
ror
cmp
jmp
mov
clc
jge
mov
movsb
dec
pop
add
jno
out
lea
jmp
mov
cld
ljmp
dec
mov
jns
fidivrl
dec
mov
mov
cmpsl
adc
stos
pushl
cmpsl
xchg
cmp
shrb
pop
popa
lds
lret
sub
shlb
sbbb
filds
add
xchg
ds
and
sarl
out
lret
mov
mov
inc
sub
arpl
cmc
fsubr
adc
xchg
cmp
popa
incl
cld
cld
icebp
cmp
out
iret
movsl
jmp
roll
pop
xor
repz
call
pop
repnz
sub
enter
in
xor
mov
cmp
inc
fdivrs
cmp
push
xchg
arpl
lret
dec
js
push
cmpsl
mov
push
pop
ljmp
mov
addr16
mov
mov
repnz
cmpb
mov
dec
cmovle
mov
cmpsb
jnp
push
add
push
insl
call
shl
xchg
push
repz
push
xor
leave
imul
xchg
jbe
or
jg
cmpsl
xlat
shlb
xor
cmp
imul
pop
jne
fcomip
enter
push
iret
mov
in
mov
andb
ljmp
les
or
adc
iret
in
cld
in
shrb
jge
test
cmp
lods
nop
mov
jnp
pushl
mov
out
addl
icebp
adc
mov
decl
insl
sub
inc
shlb
addr16
mov
ds
jg
scas
pop
jle
xchg
pop
out
mov
push
dec
pop
jg
notb
dec
mov
add
idivl
insb
sbb
aaa
xchg
cmp
pop
icebp
incl
sub
mov
mov
sbb
dec
cltd
addr16
xchg
add
lock
ljmp
adc
jmp
outsl
lcall
mov
addr16
ret
dec
ret
lods
inc
cmp
pop
mov
mov
sbb
insl
adc
fbld
imul
add
out
xor
add
sahf
fcmovnb
and
cmc
mov
movsb
add
dec
stos
xchg
leave
and
push
pop
fnstsw
mov
call
out
jmp
mov
jl
jmp
idiv
lcall
sub
jno
call
xchg
bound
fsubl
push
repz
jle
push
cmpsb
dec
mov
xchg
testb
fsubrl
pop
pop
int
insl
movsb
rol
push
pusha
or
push
mov
or
insb
mov
aad
adc
ja
lahf
mov
jmp
call
and
xchg
movsl
insb
in
repnz
sbb
xor
cmpsl
fiaddl
outsb
rcl
popf
mov
lahf
jae
sub
pop
mov
and
push
sbb
or
stc
xchg
mov
pushl
cld
std
lock
stos
dec
lea
lea
insb
jmp
jmp
pcmpeqd
adc
and
sub
pop
adc
and
xor
xor
lahf
mov
clc
incl
inc
mov
mov
xchg
mov
jecxz
sar
inc
mov
cmpsl
js
call
mov
push
cmpsb
sub
adc
add
clc
int3
lcall
ljmp
imul
addr16
sarb
dec
adc
and
lcall
imul
sbb
sub
mov
in
cmp
mov
inc
popa
popa
sub
jg
sbb
pop
and
divps
sub
les
adc
ja
incl
xor
nop
sbbl
dec
xor
lds
lods
les
das
jo
lcall
fiadds
jno
xchg
mov
jp
jne
dec
inc
cmpl
sti
sub
lret
fdivrl
dec
scas
and
lcall
lods
mov
add
sub
mov
and
xchg
xchg
ja
inc
adc
std
pop
cmpsl
insb
push
pop
mov
adc
ljmp
fisubl
cmp
sarb
es
add
test
fcompl
mov
pop
inc
decl
int
lock
cmpl
mov
lcall
lahf
adc
int3
mov
jne
or
pop
inc
jno
test
cmp
inc
push
jg
adc
lret
int3
pop
mov
pop
mov
jle
cmp
inc
sub
lods
and
sbb
stos
enter
xor
bound
shlb
stos
in
lcall
xor
cmpsl
pushf
pop
lcall
mov
into
jne
jne
fucom
or
jmp
sti
insb
movsl
stos
cltd
insl
mov
clc
adc
sub
xchg
into
and
mov
iret
jo
xlat
dec
je
ret
xor
xlat
mov
stc
lahf
daa
mov
push
push
stos
jl
and
jge
add
dec
iret
inc
pop
pop
jbe
mov
loopne
fisubl
push
call
daa
add
fwait
pop
loopne
cli
adc
sub
incl
jb
cld
jp
and
inc
mov
jecxz
iret
je
fidivl
lcall
push
outsb
lret
cmp
fs
jg
cmp
cmc
pushl
insb
xor
jl
pusha
cmp
stos
leave
cli
cmp
pop
inc
push
cmpsl
sti
loop
fisttpl
mov
pop
mov
add
mov
xor
or
jge
xchg
popf
scas
mov
dec
loopne
mov
aad
pop
inc
shll
insb
cs
in
hlt
es
jno
pushf
lahf
loopne
xor
movsb
pop
gs
decl
ja
jno
sbb
insl
cmpsb
pop
xorb
stc
pop
xlat
lcall
pop
sbb
bound
push
mov
or
and
jg
dec
pop
and
cmpl
xchg
divb
cs
int3
insb
adc
in
adc
fisubl
call
lea
int3
xchg
fistpl
mov
incl
pusha
sbb
in
jle
in
dec
loop
das
mov
fwait
mov
aam
xor
sbb
push
cmp
incl
es
sahf
sub
fists
pop
sbb
xchg
enter
incl
sub
enter
and
or
rcl
pushl
repnz
cli
xchg
aad
sub
cmp
mov
hlt
xchg
fisttpl
fldenv
aam
fildll
mov
push
or
or
cmp
jne
ljmp
jmp
sbb
dec
mov
sub
sub
std
or
std
lods
fbld
adc
pusha
repnz
cli
stos
fsubs
mov
std
xchg
test
lret
push
xor
aad
outsl
loopne
das
leave
in
adc
out
xchg
lea
jg
pop
push
int
cmp
xorb
mul
adc
jns
mov
jo
daa
fucom
xor
mov
out
lds
dec
pop
stos
fwait
push
xlat
pushl
fdivrs
imul
cmpsl
cmp
jae
sub
imulb
test
lret
int
cmpsb
lcall
push
icebp
imul
enter
pop
loope
fs
jae
ror
pop
call
stos
lcall
pop
scas
lahf
and
test
mov
jl
stos
es
sbb
gs
aaa
sub
test
call
sbb
sub
pop
cmp
adc
inc
mov
popf
int
and
out
or
scas
clc
push
addr16
jae
sti
inc
mov
bound
push
je
subl
cmp
call
mov
testl
scas
push
lret
sub
xor
aad
pop
push
shrl
sbb
test
scas
in
pushl
rcl
push
cli
sarl
iret
out
sbb
inc
and
stos
popf
sbb
push
ljmp
icebp
cmc
cli
js
push
cs
insb
xor
xlat
jns
stc
dec
xor
inc
sub
mov
cmp
dec
push
lods
jl
aam
negb
push
fmuls
mov
std
lcall
lahf
dec
in
out
std
popf
loop
inc
xor
ret
xchg
mov
sbb
push
mov
push
sub
fisttpll
pop
out
ret
pushl
lcall
sbb
dec
dec
adc
mov
sbb
and
cli
lds
ror
jmp
fisttpll
scas
and
cmc
js
mov
daa
jnp
pop
dec
bound
pop
out
leave
leave
and
dec
cmc
xchg
das
in
ds
lcall
or
imul
sub
jmp
xlat
jmp
movsl
inc
and
lock
or
cmpsb
dec
jb
push
ret
fsts
jmp
sub
nop
lods
das
ljmp
ljmp
fsubp
sub
into
fsubs
xor
mov
sub
call
add
dec
call
jmp
cmpsb
sub
repz
dec
loop
repz
incl
idivl
loopne
incl
lods
mov
mov
mov
lea
addl
xchg
mov
movsl
test
or
js
mov
call
divb
cld
fstpt
mov
fs
jb
movsl
mov
jno
out
add
test
idivb
or
hlt
fisubl
fistpl
enter
cmc
rcrl
pusha
call
add
sbb
test
popf
pop
rolb
cmp
push
inc
mov
dec
bound
fcomip
inc
xor
rcll
pop
js
mov
movl
movl
pushl
mov
fwait
cwtl
dec
mov
out
mov
adc
fwait
icebp
push
pusha
xor
cmp
in
call
push
push
stos
xchg
call
outsl
sbb
mov
mov
jge
inc
jl
insb
imul
pushl
xor
cmp
sbb
mov
xchg
jl
aam
xchg
push
fsubrs
call
je
sub
jg
out
inc
jl
insl
rclb
andl
lret
push
hlt
mov
push
mov
lods
lcall
outsl
xchg
jmp
mov
popfw
jae
test
daa
push
mov
or
out
jmp
in
mov
ljmp
add
xorl
imul
pop
test
bound
mull
push
jl
imul
fcomip
decl
iret
sub
cs
mov
data16
mov
scas
clc
lcall
push
lock
cmp
mov
dec
push
jge
stc
popa
aas
add
popa
int3
add
pop
std
incl
int
push
or
add
iret
pop
inc
imul
and
dec
sar
pop
pusha
movsb
pushf
mov
inc
pop
sub
int3
xchg
jb
pop
jnp
ret
stos
mov
xor
mov
push
fcoml
lods
sbb
subl
cmpsl
sub
ja
int
enter
jnp
adc
movsl
aaa
mov
jmp
in
jb
out
std
das
mov
lea
fldt
test
into
xor
repnz
daa
jno
cmp
shll
call
loopne
xchg
inc
jle
xchg
ror
aam
lods
cmpsb
repz
jecxz
call
push
cmp
xor
xchg
ss
shr
sub
lock
mov
cmp
in
inc
movsb
cli
mov
sahf
out
mov
sub
data16
sub
cld
or
decl
aam
xchg
fidivrl
sub
scas
and
out
dec
in
popa
pushl
gs
pushl
outsl
dec
mov
out
lods
ds
mov
notl
cmp
std
out
insb
gs
daa
in
mov
cltd
jns
mov
fistpll
int
xor
sahf
mov
das
mov
xchg
mov
mull
cmpsb
testb
jmp
jge
std
jmp
push
test
ficomps
sub
std
insw
bound
scas
data16
ljmp
adcb
scas
test
pop
orb
push
repnz
cld
nop
dec
mov
mov
js
or
cs
cwtl
lds
aad
mov
inc
mov
insb
mov
mov
mov
dec
mov
leave
and
sbb
cmpsl
xchg
jp
xor
sbb
mov
scas
aam
int
aaa
mov
mov
pushf
cli
les
push
cltd
mov
jmp
dec
pop
sub
jg
xchg
in
mov
dec
fsubrl
into
loop
mov
ja
incl
push
or
rep
mov
or
into
jns
mov
jmp
stc
xchg
inc
pop
mov
mov
aas
negb
push
aas
dec
mov
mov
mov
jnp
cmpsl
dec
fmul
stos
mov
mov
jp
or
shl
add
add
lret
jo
jmp
fistpl
sub
fidivrs
js
pxor
inc
aam
xchg
push
hlt
sub
pushl
cli
jb
dec
stos
dec
add
xchg
call
cli
inc
test
xor
push
stos
lds
icebp
mov
sahf
fucomip
push
sbb
mov
js
jle
or
arpl
adc
xchg
fwait
enter
fsubrs
xchg
rclb
or
negl
push
push
cltd
pop
and
xor
push
xchg
movsl
daa
incl
aad
call
mov
jnp
aam
add
repnz
jg
or
stc
push
xchg
jae,pn
lods
lods
sub
clc
or
pop
mov
in
daa
enter
incl
xor
sub
sub
out
repz
pop
mov
mov
lods
or
mov
sbb
mov
popf
jle
push
test
pop
inc
out
mov
call
or
int
shrl
popa
and
and
and
mov
fistpll
loop
shll
xlat
push
mov
fs
xor
dec
test
jmp
insb
stc
push
push
and
fwait
loop
pop
ljmp
clc
repz
push
xor
sahf
add
lcall
imul
xor
test
jnp
decl
sub
iret
cmp
stos
pushf
or
test
repz
mov
leave
in
ds
push
adc
cmc
add
sbb
mov
ja
insl
jmp
call
mov
cld
mov
dec
negb
pusha
mov
in
icebp
filds
ds
pop
push
sub
mov
cmp
lcall
and
out
in
rol
add
add
xchg
pushf
negl
and
mov
xchg
sbb
mov
push
aam
push
enter
push
mov
stc
pushl
adc
mov
ljmp
pop
cmp
stos
jg
dec
mov
decb
popa
adc
cwtl
sbb
pop
inc
push
js
or
enter
mov
push
sahf
scas
int3
add
call
and
insl
aad
sub
faddl
sub
fadd
pop
loop
js
cs
sub
push
movsb
inc
es
test
pop
jmp
jle
inc
mov
orb
xchg
adc
lcall
cli
addl
adc
aas
mov
xorb
mov
mov
mov
loopne
lcall
add
hlt
dec
mov
mov
or
push
in
rcl
inc
orb
push
jno
dec
xchg
push
lcall
mov
jno
jae
mov
int3
mov
jg
xor
lea
mov
dec
mov
mov
adc
dec
popf
cld
call
or
das
iret
mov
rol
popa
jb
inc
push
cwtl
or
loope
mov
and
sbb
in
xor
mov
pop
xor
les
repz
lret
decl
arpl
pushf
mov
in
sub
jo
loope
sar
add
adc
sar
decl
cltd
jge
mov
pop
mov
pop
push
adc
pop
mov
ljmp
insl
or
aaa
je
nop
es
xor
dec
sbb
je
or
mov
mov
sti
xchg
icebp
or
lret
mov
push
and
fdivl
cwtl
shlb
sbb
ljmp
cli
mov
fdiv
push
je
jle
sbb
test
adc
pushf
cld
push
out
pop
loop
mov
dec
push
shrb
call
test
dec
mov
inc
push
imul
adc
mov
push
xor
jge
aaa
in
or
outsb
pop
mov
lcall
add
inc
inc
icebp
xorb
pop
mov
test
mov
rcl
scas
push
jns
mov
ljmp
or
ljmp
popa
sbb
sti
daa
mov
cmpsl
das
and
pushl
jae
imul
jg
adc
les
enter
cmp
mov
or
negl
sbb
lods
xchg
or
add
mov
jae
pop
loopne
ljmp
push
orb
mov
lahf
sbb
in
add
shrb
frstor
mov
jb
fwait
call
scas
lret
sub
cmp
dec
xchg
xor
out
ljmp
pop
lods
jg
aas
stos
push
dec
dec
stos
pop
add
out
daa
mov
push
ret
cwtl
shll
add
outsl
mov
jbe
loope
sub
out
sbb
mull
in
and
out
clc
and
icebp
inc
cmp
jg
test
out
inc
insl
cmp
cmp
inc
pushf
jg
mov
scas
test
xchg
push
cmpsl
into
mov
jne
or
adc
pop
jp
pop
imul
popf
bnd
fisttps
ja
loopne
outsb
nop
mov
mov
imul
in
xorl
incl
in
imul
or
stos
into
in
mov
pop
pushl
xor
add
cmp
aaa
jmp
outsb
push
inc
stos
lods
js
mov
mov
ljmp
sar
sbb
into
pop
test
jmp
mov
out
pusha
lods
add
decl
jae
aaa
popa
pushf
call
mov
ret
mov
sbbb
jg
sbb
pop
stc
mov
loope
les
loop
popf
notl
std
mov
inc
nop
ss
mov
xlat
out
and
lods
mov
and
mov
sub
daa
inc
std
rcrl
icebp
add
jnp
movsl
loope
das
cli
jmp
test
sarl
and
data16
adcb
in
xor
hlt
fidivs
sar
fsubl
mov
outsl
xlat
aad
mulb
mov
aas
imulb
incl
in
mov
inc
cltd
push
adc
sub
scas
in
cmpsl
scas
mov
cli
stos
in
inc
mov
out
mov
cli
cli
loop
int3
out
or
and
xchg
cmc
jmp
jno
sub
inc
sub
mov
inc
add
cmpsb
jl
out
or
call
lret
push
sbb
ret
fisubs
push
xchg
push
xlat
dec
fisttps
inc
xchg
fimuls
cs
pop
mov
sub
sub
mov
sbb
aam
sub
or
popf
or
sahf
stos
xchg
decl
cmp
ljmp
push
mov
mov
add
test
sbb
push
pop
inc
sub
out
int
sub
jmp
inc
sub
fisttpl
popf
lods
test
pop
xchg
adc
mov
stc
scas
cmpsb
xor
and
popf
xor
pop
sbb
xor
sarl
adc
stos
pop
clc
fistl
add
dec
inc
imul
daa
push
popa
and
fimull
push
push
xor
lcall
jl
sbb
sbb
xchg
scas
hlt
enter
cs
shr
ficoml
pop
cmp
lcall
adc
fidivrl
aad
cld
push
les
sahf
inc
adc
xor
loopne
cmp
cmpsb
insl
push
repnz
sbb
ret
loope
cmp
in
xchg
ljmp
jbe
inc
push
push
xorb
push
cs
fmull
loope
inc
cmp
mul
jg
push
pushf
js
xchg
ss
das
adc
push
cs
in
jmp
or
loop
inc
mov
push
dec
loop
xchg
push
xchg
pop
cld
daa
scas
shlb
add
or
xlat
and
decl
ret
sub
lahf
mov
fadds
add
push
lcall
or
out
or
jb
push
xor
push
ds
cltd
xor
fs
jb
mov
sbb
into
sub
hlt
andb
out
mov
lcall
xchg
ret
pop
jle
mov
test
lods
mov
push
pop
lret
nop
mov
leave
ja
add
mov
aad
aas
mov
xchg
jg
xor
xchg
mov
mov
push
test
push
lods
mov
mov
push
jg
mull
shll
fstl
mov
jl
popa
xor
xchg
xchg
loop
lcall
sub
jle
decl
xchg
jecxz
std
xor
mov
xorb
repnz
std
ljmp
add
call
cmp
hlt
mov
ljmp
jo
out
mov
push
dec
add
call
test
aaa
fildl
int3
adc
push
imul
ljmp
stos
ljmp
mov
in
mov
fstl
sbb
jae
mov
fiaddl
pushl
into
cld
sub
dec
cmp
fdivr
js
int3
clc
xor
pop
fs
sub
fisttpll
jg
das
lcall
movsb
jmp
jbe
fnstcw
repz
xor
in
loop
mov
fmull
sub
mov
rcll
xchg
xchg
jo
out
jno
xchg
loop
sbb
loope
mov
mov
shrl
arpl
rorl
push
mov
sbb
pop
xor
mov
outsl
adc
cmp
cmp
pop
scas
mov
lods
xor
incl
cld
mov
out
aas
mov
out
gs
xchg
cltd
lock
mov
ljmp
sub
xchg
lahf
cmpsb
movsb
jo
sub
cmc
jnp
decw
faddl
mov
mov
mov
lret
gs
movsb
adc
push
cltd
loope
mov
push
sar
push
pushf
outsb
inc
cmp
or
por
daa
mov
pop
mov
imul
loope
es
cmp
cli
and
sub
mov
lret
jle
or
aam
gs
push
test
outsl
inc
jg
call
repz
out
out
xor
push
mov
fs
mov
lcall
xchg
or
pop
bound
arpl
pushl
dec
popf
or
dec
out
fidivs
int3
xchg
paddusb
int3
pushl
stc
loop
push
xchg
adc
or
aad
push
push
xlat
add
adc
outsb
or
call
lods
xchg
xchg
testl
jle
push
mov
pop
mov
out
mov
jne
icebp
push
jmp
lcall
pop
pop
sbbl
adc
lcall
ds
xchg
sbb
vmovupd
iret
cli
cld
pop
mov
xchg
xlat
jecxz
ljmp
xor
fistpl
scas
std
pop
pushf
stc
mov
mov
or
sbb
sbb
pushl
adc
sub
mov
addr16
insb
push
cmp
adc
mov
ljmp
pushl
adc
xor
push
pop
xlat
pop
call
sahf
outsb
into
cltd
sub
xor
cmp
pop
enter
mov
xor
jmp
mov
int3
add
sub
dec
sbb
jae
mov
aam
push
adc
xchg
cmp
mov
jmp
adcb
ljmp
mov
leave
add
repnz
call
xlat
gs
shll
push
dec
test
jmp
or
in
jmp
aad
xor
and
test
mov
aas
int3
and
dec
ficomps
sar
pushl
mov
sub
push
out
xor
aaa
cmc
aas
push
or
add
into
jbe
cmp
clc
xchg
sbb
cmpsb
and
gs
fwait
jp
adcb
mov
push
xchg
push
ficompl
jnp
orb
mov
loop
mov
lcall
pop
xorb
mov
fcos
call
loopne
push
cltd
stos
dec
pop
mov
cmpsb
inc
dec
pushf
loopne
pushf
cmp
mov
sar
ljmp
mov
cmp
leavew
mov
push
nop
sub
sti
jl
jbe
jnp
mov
lcall
dec
loope
nop
mov
popa
inc
cld
movsb
push
xchg
dec
lret
addr16
xchg
sar
jp
inc
push
adc
nop
cmp
sub
pop
or
adc
sub
dec
add
call
js
xlat
mov
cwtl
jge
sub
push
and
mov
jle
jo
loop
jge
xor
jnp
push
in
std
xchg
push
rcrb
arpl
hlt
adc
call
pop
mov
mov
fsubs
push
sarb
push
call
jg
xchg
aaa
movsl
lods
das
cwtl
inc
daa
pop
inc
xor
sub
call
sub
inc
pop
push
xor
adc
cmpsb
dec
cmp
xchg
ret
jl
cwtl
sub
add
fisttpll
sbb
xlat
call
push
fcoms
aaa
xor
xchg
inc
push
fsubr
test
pop
jne
dec
nop
mov
incl
xchg
cs
dec
adcb
lds
mov
jbe
out
dec
scas
sbb
dec
lret
pushf
adc
call
push
sti
xchg
les
or
ret
cmp
lods
xor
mov
stos
ret
push
outsb
ret
adc
adc
imul
sbb
xor
in
cmp
fsubr
fidivrl
mov
mull
dec
dec
inc
popa
cwtl
lahf
je
inc
add
add
das
clc
push
jnp
or
adc
pop
enter
xchg
xor
sub
mov
lret
pop
mov
incl
push
inc
xchg
pop
mov
cwtl
xchg
and
mov
mov
or
repz
pushl
lahf
mov
push
mov
mov
add
loop
pop
jl
xchg
push
aaa
filds
xor
lcall
lea
jg
mov
cmp
imul
jge
stos
mov
sub
incl
push
jo
paddw
xchg
jl
xor
out
xchg
sub
sbb
sbb
test
leave
jg
jp
jecxz
xchg
add
or
xorb
mov
or
mov
rsqrtps
jnp
adc
popa
mov
gs
cld
fwait
int3
aas
inc
xchg
cs
cmpsb
sbb
fs
sbb
mov
ret
pusha
and
fwait
add
loop
add
dec
subb
push
xchg
incl
mov
adc
repz
mov
mov
clc
and
aas
adc
mov
int
addr16
add
in
jb
cmp
inc
pop
idivb
out
sub
leave
sbb
jmp
jp
sahf
lret
sti
stos
dec
dec
sbb
push
mov
inc
or
je
jge
mov
pushl
xchg
movsb
mov
arpl
push
sbb
jns
and
add
lea
jl
decl
cli
sbb
xchg
adc
push
xor
sub
jg
fistpll
mov
push
in
fsubl
dec
or
call
ds
jae
push
mov
popa
and
xchg
cwtl
mov
mov
lcall
cmp
iret
cs
enter
pop
lods
nop
mov
ljmp
incl
cli
rclb
clc
pop
inc
xchg
sub
cmc
lods
test
fisubs
dec
push
xchg
cltd
mov
inc
add
in
lcall
andl
push
arpl
enter
sbb
jle
dec
cltd
scas
loopne
dec
inc
imul
adc
fdivrp
decl
andl
sbb
into
fsubrs
inc
mov
test
test
out
test
mov
in
aad
dec
xor
mul
rcr
adc
lods
mov
cmp
decl
cmp
aam
iret
push
hlt
adc
mov
inc
cs
xlat
ja
cmp
cmpsb
jmp
lcall
sbb
sahf
lgs
mov
shll
pop
push
sbb
shll
bound
std
mov
cmp
xor
clc
push
mov
cmp
pop
in
pop
mov
aaa
dec
xchg
jno
stos
adc
pop
push
in
jge
aaa
pop
dec
pop
sub
jno
shl
push
sub
xchg
xrstors
mov
pop
fisttpl
xlat
lods
xchg
ret
cmp
jmp
sahf
pushf
mov
frndint
cmp
shrb
dec
mov
or
and
incb
xchg
ljmp
mov
ss
cli
cwtl
sub
loopne
jo
lea
incl
add
movsl
ret
sbb
shlb
mov
jmp
cli
dec
mov
push
dec
imul
stc
loope
int3
mov
pop
xor
loope
jmp
loope
imul
out
mov
loop
pop
fcos
dec
mov
sub
insb
mov
dec
jmp
pop
imul
int3
inc
adc
incl
mov
shrl
cmp
es
out
inc
sbb
push
leave
push
popf
arpl
cltd
jmp
jecxz
add
cltd
test
imul
rcll
ljmp
push
pop
xlat
and
jl
push
nop
lahf
nop
sub
jg
push
popf
pop
and
adc
and
inc
and
je
inc
pop
ljmp
rcll
sbb
mov
mov
pop
iret
ret
test
cmc
aam
testb
clc
incl
imul
or
out
cs
cmpsb
lret
mov
nop
test
icebp
incl
cmc
lock
insl
adc
clc
dec
mov
stc
in
or
es
cmp
or
stc
dec
int
mov
xor
jno
popa
cmpsb
data16
inc
mov
imul
fldenv
mov
xchg
cmpl
std
jg
pushl
pop
mov
fsub
fs
or
cmpsl
pop
cmp
imul
aaa
inc
jo
loop
loope
mull
push
incl
pop
xchg
hlt
mov
outsb
imull
arpl
add
inc
daa
mov
inc
xor
lcall
scas
sbb
jp
out
iret
jmp
out
test
mov
aaa
cltd
cmp
xlat
decl
lock
xchg
sub
les
sbb
cmc
out
mov
fdivp
dec
incl
adcb
xchg
sbb
mov
hlt
push
add
mov
mov
call
nop
add
sbb
push
dec
jmp
insb
cmpsl
mov
jecxz
enter
incl
insb
enter
sub
sti
int
test
xchg
call
es
pop
add
dec
std
mov
push
push
and
jmp
pop
pop
xor
outsl
push
mov
sbb
aad
dec
aam
lcall
pop
xor
xchg
pop
popa
lods
out
and
jmp
icebp
icebp
fwait
pop
aad
ficomps
add
cltd
jb
mov
cwtl
bound
mov
dec
rcr
xor
addr16
dec
cmp
xchg
movsb
lcall
incl
dec
fwait
pop
rorl
pushf
add
ret
push
pop
es
mov
aad
jmp
pop
arpl
mov
movups
cmc
add
sub
jae
sub
sbb
cli
inc
aam
aas
je
lcall
loope
push
int3
fs
mov
cmp
lret
cmc
incl
negb
pop
xchg
rolb
mov
or
scas
mov
es
and
ret
push
sub
xchg
fisubrl
mov
push
cmpb
ljmp
dec
push
outsl
loope
push
sub
push
jbe
pop
cmp
sub
popa
jne
cmp
mov
out
orl
orb
aaa
push
inc
fldt
lahf
mov
scas
clc
decl
mov
or
outsb
ret
repz
jo
adc
repnz
fbld
in
pop
hlt
inc
or
int3
decb
xor
faddp
xor
xor
push
test
je
push
clc
mov
aas
push
push
stos
int3
std
bound
add
out
mov
movsl
add
jle
aad
das
incb
out
pop
cmp
incl
lods
mov
fs
jge
movsb
pop
or
xchg
xor
cld
inc
sub
call
jb
int
pop
push
ss
ja
jl
enter
dec
sub
mov
pushl
and
xor
or
xchg
hlt
roll
xor
ds
in
jg
sbb
mov
mov
addr16
xor
push
push
mov
decl
add
and
adc
in
mov
jmp
xchg
pop
adc
mov
pop
xchg
sahf
lcall
icebp
ljmp
loopne
push
sbb
imul
jl
pop
loop
mov
test
idivl
hlt
mov
sar
loopne
jae
out
adcl
icebp
xor
mov
push
xchg
cwtl
insb
jo
stos
jmp
mov
jl
jecxz
call
mov
jmp
pop
and
in
addr16
sahf
jo
pop
enter
test
bnd
mov
data16
and
mov
inc
lret
aam
xchg
sub
adc
xor
fbld
and
sbb
scas
lds
xor
dec
dec
mov
xor
ljmp
pop
jp
out
or
add
test
lret
adc
lcall
or
insl
imul
aaa
pop
fisubl
mov
cmp
lcall
movsl
dec
jmp
sub
std
mulb
dec
shll
adc
ss
push
call
mov
push
stos
push
or
lock
dec
and
xor
std
jg
lcall
xlat
insb
xchg
lret
leave
aaa
dec
push
sub
popa
mov
aad
add
call
xor
xchg
shl
into
aaa
call
call
dec
cmp
loopne
or
xorl
sub
rol
xchg
mov
mov
cmpsb
or
jmp
call
cmpsb
pusha
add
lods
dec
movsb
xlat
xchg
aad
mov
in
inc
mov
cmp
out
mov
pop
push
xchg
movsb
test
cmp
loopne
add
jp
shll
push
popa
pop
stc
or
jl
adc
sub
test
decl
cmp
out
add
icebp
aaa
cmc
pop
testl
or
fs
cmp
decl
in
call
bound
lcall
leave
adc
int
inc
imul
add
dec
movsl
daa
cmp
les
enter
cmp
sbb
outsl
adc
pop
add
aad
aas
and
cs
jle
sbb
and
dec
or
scas
mov
call
in
add
pop
sarl
fadd
in
xor
inc
sbb
mov
jg
dec
sub
lock
jmp
push
shl
push
mov
rol
outsb
xor
mov
leave
iret
sbb
mov
xor
popa
push
add
and
cmpsb
nop
cmc
das
fnstenv
pop
and
sub
ret
jp
cmp
xchg
jge
pop
mov
dec
call
push
lock
adc
and
cwtl
inc
cltd
pop
push
mov
sahf
clc
nop
cwtl
jo
incl
and
mov
cmp
or
mov
mov
rorb
divl
fcoml
ja
push
add
pop
pushf
mov
popf
lds
mov
les
outsb
xchg
jecxz
loopne
push
cld
popa
jg
cltd
in
xor
lcall
sub
adc
imul
andl
lcall
hlt
xlat
push
mov
fstl
rcrl
pushl
xlat
mov
add
int3
cwtl
stos
sub
popa
leave
aam
inc
cs
inc
sub
mov
jp
dec
les
and
test
adc
das
outsl
push
mov
jo
ds
add
ljmp
cmp
outsl
imul
sti
std
push
pushf
push
xchg
sbb
push
mov
xchg
lods
mov
in
jbe
or
clc
sbb
cmpsb
jbe
fistps
aad
sbb
stos
repz
and
mov
jge
bound
sub
mov
shll
adc
ss
cli
call
rcrl
mov
dec
or
lcall
and
sahf
insl
sub
pop
mov
push
outsb
sbb
testb
ljmp
and
inc
hlt
sub
addr16
mov
fcoml
mov
icebp
iret
andb
inc
xchg
hlt
and
icebp
icebp
sub
aad
mov
ret
xchg
dec
dec
push
ds
sbb
cmpsb
inc
dec
insb
sub
mov
cld
jmp
cltd
mov
jo
sti
jae
cwtl
fdivrs
cmc
jecxz
cs
jg
lods
cltd
cmp
dec
xchg
add
jo
mov
and
pop
cmp
xchg
sub
fmuls
jl
cld
fcoml
aaa
fbstp
or
jmp
dec
int3
lret
jnp
cmp
jmp
mov
cmpsb
mov
pop
cld
call
xchg
out
out
adc
daa
xchg
pop
mov
dec
jge
ljmp
shrb
fidivrs
aad
enter
mov
adc
cmp
subl
cmc
dec
fadds
loop
arpl
xchg
dec
mov
decl
xchg
push
xor
cmp
pushf
fstpt
adc
lock
cmp
dec
insw
push
into
cmpsl
out
adc
popa
mov
jg
out
mov
cmpsl
adc
out
fistl
jns
xchg
je
cmpsl
inc
jecxz
cltd
ljmp
es
test
mov
mov
roll
cmp
je
xlat
push
ret
push
xchg
xor
or
das
sbb
rorl
pop
jg
lock
push
mov
cmp
push
and
or
cltd
xor
decl
outsl
rorl
xor
lds
xchg
push
or
notl
mov
xor
push
ret
mov
pop
xchg
add
bswap
cmp
adc
dec
dec
jge
inc
lcall
stos
sub
cltd
sti
popa
mov
imul
stos
loopne
xor
push
pushf
mov
dec
mov
pushl
cs
pop
push
xchg
xchg
add
lahf
nop
xor
and
add
or
lock
dec
mov
aaa
clc
outsl
jp
jno
cmpsb
fdivrs
sbb
mov
decl
fimuls
add
push
pop
lea
mov
pushl
fisubrs
dec
pop
xor
dec
push
pop
in
mov
imul
test
lcall
pop
shlb
cs
jo
jge
jmp
lcall
push
adc
call
std
cmp
loop
and
jle
xchg
les
pushl
sub
pusha
dec
xchg
cs
iret
mov
mov
mov
clc
jg
add
and
loope
add
push
mov
sti
add
adc
aaa
sbb
jo
cmp
addr16
push
xchg
sbb
clc
ljmp
cltd
enter
mov
out
push
cld
std
test
pushl
clc
and
sub
ds
xchg
lret
push
sub
ficomps
test
imul
scas
and
and
repz
sub
dec
pop
mov
iret
in
dec
into
dec
cmpsl
mov
ljmp
add
fistpll
xlat
inc
sub
aaa
out
scas
scas
fistps
dec
pop
js
pop
out
gs
arpl
xor
popf
add
jg
decl
int
mov
adc
loopne
mov
inc
or
push
sbb
call
jle
arpl
ljmp
mov
jp
ljmp
loope
call
push
cltd
fcomps
sub
fadds
mov
mov
jle
cld
call
in
lea
sub
test
std
mov
and
jg
mov
bound
sbb
inc
fisttpl
pop
dec
cmpsb
mov
icebp
inc
or
cwtl
test
and
lock
mov
xor
cs
leave
insl
jg
scas
add
adc
sbb
xchg
push
or
dec
inc
call
xor
in
stc
sub
js
jg
and
data16
mov
adc
adc
jbe
shrb
adc
cmc
das
mov
xor
xlat
sub
or
pop
cmp
jo
test
cmp
insb
jge
inc
sbb
pop
xor
loop
addr16
loop
cmp
call
inc
push
xor
je
mov
mov
sub
daa
sub
icebp
sub
push
ljmp
shrl
hlt
push
loop
xchg
sub
aas
cli
js
push
jp
icebp
jo
data16
das
mov
mov
mov
mov
data16
jne
test
ds
sub
pop
and
aad
ret
incl
cmp
bound
adc
or
incl
pop
arpl
mov
inc
lret
cmpsl
sub
stos
lds
addl
push
sub
movups
or
popf
test
pop
into
mov
mov
fcoml
cltd
adc
addr16
inc
push
lds
js
dec
fs
push
cli
jbe
pop
cltd
add
pop
xchg
aad
movsb
orb
decl
sub
mov
cwtl
cmpsl
push
push
aad
inc
fwait
jbe
popf
cmp
into
mov
mov
sbb
dec
inc
ds
inc
ficoml
jl
lock
and
adc
or
or
incl
in
jl
mov
adc
pop
inc
imul
aas
lret
cmpsl
inc
mov
fcmovu
lcall
popf
cmc
std
cmp
pop
test
push
inc
xchg
sti
ss
pusha
bound
mov
imul
in
sbb
cli
pop
add
pop
xchg
ret
inc
les
jo
push
out
scas
cmpsb
clc
mov
test
jmp
xchg
add
xor
clc
mov
enter
cmpsb
mov
dec
mov
pushf
inc
fimull
mov
call
stc
lret
sbb
jmp
sub
les
xchg
and
pop
enter
pop
fcomip
stos
scas
xor
dec
dec
andl
dec
add
inc
dec
out
add
decl
jge
lcall
mov
fwait
dec
int
pop
inc
lods
adc
jg
or
mov
adc
mov
dec
mov
xchg
sbb
fistpll
cmp
xor
xor
adc
and
lcall
jb
sbb
in
mov
in
jg
inc
rclb
stos
jns
test
sti
fld
sbb
in
inc
sbbb
fs
incl
int
mov
inc
pop
clc
inc
mov
xchg
dec
lods
add
add
inc
outsl
jecxz
loop
mov
xor
mov
pop
cmp
dec
lods
shl
xchg
mov
scas
pop
inc
mov
lcall
scas
dec
jmp
jo
dec
xchg
fstp
jnp
dec
jecxz
test
mov
push
pusha
add
mov
and
lcall
mov
ljmp
ss
pop
mov
pop
out
insl
in
and
xchg
icebp
xor
push
sbb
inc
clc
inc
rcr
pop
popf
js
vsubss
insl
fldt
fstl
mov
inc
shr
out
jecxz
xor
in
cmp
gs
push
inc
fwait
cmp
pop
daa
daa
push
movl
lods
in
stos
clc
call
adc
aam
fdivrl
nop
imul
outsl
clc
outsl
xor
cmp
in
xchg
fwait
shlb
xor
or
aaa
cld
incl
hlt
cmp
sti
push
push
lcall
jle
pusha
jo
lcall
push
jmp
jnp
loopne
ljmp
movsb
jl
adc
and
xchg
fst
int3
jg
test
outsb
xchg
cmpsl
scas
clc
mov
xor
pop
out
mov
mov
push
mov
cld
insb
ljmp
stos
and
lea
mov
ljmp
sbb
mov
int
jg
or
adcb
dec
loope
and
fists
jle
cmpsl
mov
out
xlat
mov
lcall
lods
rol
inc
out
or
fcoms
cmp
pushl
push
clc
mov
outsl
mov
adc
mov
pop
cmp
lcall
pushl
sub
lcall
xchg
ret
sub
xlat
cwtl
jo
adc
jg
jae
and
aaa
std
cs
lds
adc
out
push
mov
sbb
mov
lret
add
push
pop
or
or
call
push
dec
out
sti
mov
push
or
js
mov
xchg
xor
pushl
out
push
push
inc
andl
scas
pop
aaa
sahf
pusha
roll
inc
mov
in
pop
cwtl
fisubs
jg
xchg
out
shlb
cmp
and
mov
ljmp
das
arpl
jmp
mov
or
data16
mov
jl
cmp
pop
jbe
lcall
push
sub
or
sub
das
sar
fcmovnb
dec
repz
jge
scas
push
mov
add
sti
in
fsubrs
push
inc
and
fistpl
aad
push
pop
mov
out
pushl
aad
in
rorb
adc
xchg
das
cmpsb
push
xchg
mov
jle
add
incl
mov
mov
mov
adc
aas
enter
mov
mov
jl
xor
daa
pushf
decl
out
xor
push
cltd
cli
test
xchg
shl
push
pop
sub
sahf
mov
cmp
mov
xor
or
sarl
adc
xchg
aaa
adcb
imul
pop
push
es
fcos
cmp
in
adc
pop
jbe
mov
sahf
aas
jmp
fwait
pop
dec
pop
out
cli
sti
xchg
cmp
jle
cmp
sahf
gs
pop
mov
xor
cmpsl
mov
shrl
outsl
outsb
scas
cmp
fstl
jbe
sub
sbb
push
pop
sub
sub
mov
test
ret
or
pushf
jo
icebp
push
cmp
adc
pushf
sub
mov
lock
sub
decl
mov
rorl
sahf
repnz
dec
imul
sbb
outsl
pop
jbe
arpl
and
push
stos
mov
jo
mov
and
cmp
insl
push
shlb
lcall
int3
add
jmp
fcmove
xor
js
sub
push
cmp
sub
ljmp
ds
fst
pop
mov
fmulp
xchg
lods
xchg
daa
xchg
clc
inc
jo
mov
jg
decl
sub
mov
pop
pop
in
jno
mov
cmp
dec
sub
loopne
std
decl
mov
mov
sub
inc
into
outsb
call
fsubrp
in
je
inc
sbb
or
and
mov
fs
and
xchg
cmp
xchg
clc
jmp
inc
inc
lods
int
scas
fwait
outsb
and
dec
popa
jmp
jo
repnz
repz
adc
loope
adc
xorb
lret
cmp
mov
add
aas
pop
jmp
add
scas
sub
daa
ljmp
cmc
mov
fnsave
xor
add
aam
mov
pop
sbb
jne
pop
push
pushl
mov
pushf
aas
in
ret
xchg
push
jae
xchg
fadd
aaa
jecxz
aam
and
mov
mov
sahf
cmp
xor
in
mov
inc
test
push
fistl
dec
push
out
clc
sub
inc
add
mov
mov
into
outsl
mov
decl
inc
pusha
inc
xor
icebp
pop
in
js
xor
pop
movsb
clc
popa
jg
jmp
cmpsb
xorb
out
clc
jne
in
mov
push
addr16
in
test
or
insb
pop
or
pushf
inc
mov
scas
dec
adc
fiadds
popf
mov
jle
push
repz
movsb
imul
roll
icebp
addr16
cmpsb
dec
lds
out
jg
and
les
in
idivb
lds
gs
out
dec
dec
sbb
xor
push
cld
and
in
ficoml
sbb
add
add
pop
fnstcw
pushl
cs
rcr
xchg
popa
fucomp
mov
jb
iret
out
test
test
idivb
ljmp
bound
add
pop
jne
shlb
cs
or
push
lcall
or
add
pop
and
lcall
pop
mov
lcall
mov
movsl
cmc
dec
inc
push
jmp
adc
clc
out
push
push
fisubs
lret
repnz
movsl
dec
loopne
jmp
lods
push
dec
mov
ret
fwait
lods
sti
push
out
push
xor
call
in
hlt
call
ss
cmp
shll
and
add
sub
push
in
shll
jmp
orb
not
std
lcall
or
push
cmc
pop
in
pop
ja
add
sub
bound
decl
insl
and
cmp
sub
pop
pop
xchg
mov
les
cli
call
icebp
js
int
pop
pop
mov
and
and
push
mov
add
gs
adc
clc
imul
iret
push
out
movsl
ljmp
dec
aas
daa
rolb
fdivs
je
out
lret
daa
jmp
fstps
decl
decb
mov
mov
sub
xor
inc
push
lock
mull
jle
pushf
jg
movsb
int
add
shll
sarl
std
stos
mov
dec
add
add
call
sbb
mov
nop
and
xlat
mov
loope
jne
mov
call
ret
cmpsb
daa
mov
jno
int3
sbb
sti
jg
mov
dec
addr16
cmp
pushl
insb
dec
dec
or
das
insb
stos
ret
xchg
scas
mov
and
ljmp
jmp
mov
fdivp
push
mov
mov
push
test
and
cmc
and
leave
jg
in
scas
pop
inc
js
or
incl
enter
pop
lret
fnstsw
movsb
mov
je
xor
mov
push
mov
movsl
inc
jg
sbb
xchg
cmp
ja
test
jnp
adc
imul
dec
stos
sbb
mov
jmp
lods
fildll
inc
fstpt
dec
inc
push
sub
cmp
cwtl
lods
mov
fldl
pushl
addb
rcll
mov
mov
lret
cmp
cmp
and
pushl
es
push
test
inc
sbb
adc
aas
mov
xorl
std
loope
fists
cmc
push
cmp
or
cld
pop
add
fsubrs
xor
nop
hlt
incl
ljmp
hlt
mov
lock
push
es
sub
gs
hlt
mov
sbb
jae
ds
int
sbb
sbb
stos
xchg
sbb
sub
push
xchg
aad
aaa
mov
mov
pop
int
call
xor
test
in
pop
and
or
in
iret
cmpl
jnp
mov
jge
xor
int
sbb
add
mov
pusha
vaddpd
and
mov
mov
xchg
fcmovnu
push
mov
adc
andb
cmpl
mov
call
scas
into
or
sbb
ds
call
or
loope
pop
inc
adc
iret
test
inc
imul
fs
and
pop
mov
rcl
das
dec
jbe
dec
cmpsl
or
stc
pushf
xor
popf
sub
aaa
dec
fcompl
lret
mov
daa
popf
xchg
jmp
dec
add
negb
dec
mov
dec
insl
cwtl
jmp
shrb
out
push
hlt
xchg
cmc
leave
scas
mov
test
pushl
adc
addb
rcll
inc
mov
nop
ret
decl
inc
push
dec
and
popa
lret
sbb
pusha
stc
imul
mov
mov
or
cld
mov
nop
mov
add
pop
inc
or
cltd
pop
loop
and
mov
jg
jbe
jl
data16
or
pop
insb
add
lods
cmc
push
mov
pushl
sti
xchg
mov
jg
and
ficomps
cmpb
xor
test
std
divb
push
mul
fidivrl
sbb
lcall
mov
int
aas
jmp
sbb
jbe
pop
push
xchg
lcall
adc
ret
rcrl
ljmp
sarb
sbb
jg
call
mov
push
cmpsb
mov
int3
mov
icebp
es
lret
mov
cmp
in
jo
sub
mov
movsb
orl
sub
push
aad
std
incl
pop
bound
cmp
lods
xor
push
lods
mov
incb
mov
insl
dec
ds
sahf
pushf
js
jae
cli
aaa
pop
out
imul
mov
pusha
pop
cli
jmp
and
inc
repz
stc
xorb
and
mov
jns
add
call
mov
inc
or
decb
cld
adc
adc
jne
mov
ljmp
aas
rorl
cmpsl
dec
out
xchg
lea
insb
incl
data16
outsl
fcos
mov
loopne
jb
mov
jnp
jg
ja
pushf
add
outsl
mov
pop
subb
out
aas
je
js
insb
mov
pop
iret
in
ljmp
add
add
les
cmp
mov
sbb
shrl
decl
mov
mov
pop
int3
push
adc
mov
mov
incl
mov
out
out
cs
iret
movb
pushf
outsb
stos
ljmp
cltd
ljmp
jle
pushf
mov
xchg
mov
push
sbb
ret
cbtw
mov
pusha
jbe
xor
data16
lock
jmp
fwait
addl
aas
dec
jmp
jmp
decl
int3
dec
jae
jmp
add
mov
sbb
jnp
mov
loope
or
mov
xchg
iret
mov
push
pop
mov
das
add
pop
movsb
push
int3
dec
dec
adc
mov
test
into
sbb
mov
mov
cmc
ja
sbb
mov
bound
outsb
jg
and
loope
inc
cmp
and
jle
incl
push
mov
sbb
lret
cli
test
scas
push
flds
sub
int3
pop
lcall
lahf
cmp
pusha
gs
pop
pop
frstor
sbb
push
cmp
ficomps
hlt
sub
add
cmp
loopne
repz
popf
xor
pop
push
jb
enter
inc
add
sbb
or
subb
pop
sbb
mov
mov
push
loopne
cmp
inc
je
jbe
lods
cmp
mov
rolb
sbbb
std
jae
dec
sahf
fwait
pushl
xor
pop
les
and
cmpsl
sti
dec
test
sbb
inc
popa
iret
add
pushf
inc
jno
push
or
mov
scas
popa
add
aas
mov
orl
mov
jecxz
push
sahf
in
popa
mov
aaa
cld
cmp
je
jg
aam
mov
cmp
push
ljmp
jnp
push
call
call
pop
repnz
das
pop
pop
cmpsl
xchg
adc
loop
or
jae
mov
ret
inc
xor
test
aaa
decl
pop
shr
rorl
les
inc
je
xchg
and
fstp
add
cs
or
out
add
and
inc
fwait
jmp
adcl
cmp
aas
fiaddl
push
aaa
mov
and
lea
mov
adc
mov
lcall
ret
pop
mov
addr16
data16
or
sub
xchg
lcall
push
inc
xor
jle
jno
lock
pop
fldenv
call
inc
pop
scas
pushl
fndisi(8087
jae
ljmp
mov
into
xchg
push
cmpsb
cs
out
dec
aad
push
mov
add
hlt
and
cmpsb
test
cld
xchg
fimull
pop
insl
je
lcall
pushl
sbb
sub
in
push
pop
aas
call
sub
js
mov
incl
cmp
outsl
fisubrs
inc
insb
inc
sub
out
es
adc
call
jecxz
push
jge
cmp
call
and
mov
loop
push
sub
decl
in
flds
and
call
cwtl
ljmp
cmc
mov
push
mov
inc
adc
pop
mov
call
inc
pop
xor
jb
jge
in
jecxz
mov
push
push
dec
ds
in
lds
add
arpl
int
pop
inc
sahf
call
mov
daa
testl
outsl
movsl
or
jg
inc
dec
adc
sbbl
ljmp
aad
add
jge
mov
push
test
jns
ud0
lcall
or
push
mov
push
fcoml
cmp
int
fisubs
test
fucom
icebp
dec
insb
adc
mov
adc
pop
std
mov
mov
divb
mov
scas
test
adc
inc
jg
fwait
lret
nop
cmpsl
cmp
dec
insl
mov
sub
jae
cmp
jg
sahf
add
inc
cli
ljmp
je
negb
ret
jge
and
sarl
ss
fldenv
int3
adc
pop
inc
push
inc
xor
repnz
std
fwait
lcall
xchg
scas
scas
mov
jmp
lcall
push
pop
xchg
xchg
mov
cli
inc
gs
and
scas
mov
push
sub
into
inc
imul
mov
scas
cli
ja
cmp
loop
stos
stc
cmp
sub
pop
lods
mov
and
mov
jg
lock
push
xor
sarb
inc
out
call
lcall
ret
xchg
push
and
xor
cmp
dec
inc
lret
pop
repz
ja
pop
hlt
sub
xchg
push
adc
fs
pop
leave
decl
jmp
imul
aam
push
sar
push
sub
mov
mov
fildl
and
decl
shrl
or
add
in
incl
popf
das
sbb
inc
rorb
xchg
hlt
ficoms
or
ljmp
mov
fwait
into
je
pop
movsl
xor
hlt
xchg
rcl
mov
pop
cld
repz
int
pushl
mov
mov
jg
push
stc
inc
mov
jnp
inc
lret
popf
ret
scas
xor
push
shlb
add
cmpsl
push
stos
scas
pop
cmpsl
mov
subb
sbb
clc
popf
test
dec
dec
jp
and
shrl
adc
mov
dec
sub
and
mov
test
mov
inc
cmp
lcall
mov
xchg
and
fistpll
and
cmpsl
data16
push
or
repz
incl
popa
inc
mov
push
pop
fisttps
lcall
popa
sub
jge
inc
xchg
mov
adc
mov
in
push
push
fs
aas
iret
inc
jae
call
icebp
test
es
stos
bound
dec
inc
mov
sub
adc
negl
ljmp
aad
push
mov
pop
xor
lcall
push
cmp
add
filds
rcr
movsl
xchg
jbe
ret
push
inc
ss
mov
dec
outsb
jg
test
adc
mov
inc
xchg
pop
mov
incb
test
and
and
dec
enter
aam
pop
jl
frndint
mov
fistpl
das
mov
fistpll
or
into
mov
mov
lock
xchg
xchg
jns
dec
loop
xor
push
pop
or
cli
decl
xchg
sbb
jns
je
enter
pop
pop
inc
push
in
ljmp
cmp
cmp
popf
xlat
pop
add
xchg
mov
ljmp
adc
xlat
sub
jne
push
mov
sbb
test
outsb
scas
sub
enter
incl
xor
push
ss
lods
push
xorl
adc
lahf
inc
jns
ljmp
decl
dec
or
aam
push
movsb
xor
jl
pop
sub
add
fwait
sub
adc
cmc
mov
jmp
lock
es
adc
hlt
pop
adc
pop
jg
ja
inc
test
paddsw
pushl
popf
dec
dec
lds
je
mov
incl
dec
push
scas
cmp
out
enter
push
call
loopne
add
adc
push
jecxz
sub
push
cmp
push
mov
xchg
adc
out
adc
sbb
nop
insb
jp
lret
stc
dec
dec
add
les
add
push
aaa
mov
dec
inc
sub
inc
sub
repnz
pop
int
lret
mov
leave
fcmovbe
test
ss
lds
jmp
xchg
cwtl
add
dec
xchg
or
subl
xchg
test
mov
insl
pop
adc
sub
fst
mov
mov
pusha
lods
mov
fs
cmpsb
inc
hlt
sar
rcr
outsb
add
loope
lds
sub
jbe
out
addl
wbinvd
ljmp
pop
xor
inc
push
jg
mov
inc
pop
test
push
arpl
orb
dec
xlat
sbb
int
lds
repnz
in
push
xchg
fistps
call
and
cmp
outsb
iret
aam
pop
jbe
imulb
and
xor
inc
fdivrs
add
mov
dec
dec
shll
outsb
dec
out
sahf
test
lea
cmpsb
jae
sbb
cwtl
std
jae
inc
xlat
cmp
or
cld
push
cld
adc
in
sbb
lods
in
sbb
jno
je
das
cli
call
sbb
adc
cmp
sarl
pop
mov
iret
mov
call
cmp
pop
jae
icebp
adc
or
jp
push
lea
call
inc
push
insl
fsubs
fsubrl
push
jns
inc
jae
lods
push
sub
hlt
mov
sbb
cmp
xchg
xchg
mov
pop
lea
loope
add
lcall
mov
ret
push
xor
mov
cmc
jns
dec
fs
icebp
inc
test
ss
dec
and
stos
lahf
or
repz
sub
cmp
xchg
incl
cld
mov
adc
jecxz
mov
insl
xchg
fdivr
pusha
jmp
stos
jecxz
push
dec
repnz
mov
in
loopne
cltd
call
jmp
js
outsb
test
add
cmp
push
sub
fiaddl
lcall
imul
ss
pusha
test
or
xor
dec
pop
ja
icebp
xor
cmp
incl
bound
enter
sbb
pop
in
or
or
mov
loopne
mov
pop
aaa
fidivrs
and
aam
and
jle
or
add
push
dec
push
cltd
xchg
xor
es
push
pop
cli
or
mov
into
int3
fwait
add
pushl
rorl
sub
pop
fistl
into
stc
or
dec
push
mov
mov
aad
and
xor
mov
push
shll
lds
adc
fwait
jg
outsl
xor
mov
push
xchg
xchg
ficoml
fwait
mov
call
inc
jno
out
decl
dec
push
incb
popf
push
pop
and
or
cmpsb
out
mov
or
jmp
out
jge
sub
and
jecxz
stos
pusha
inc
ret
and
inc
xchg
add
daa
jmp
mov
bound
push
in
call
dec
xchg
mov
std
cltd
adc
jge
popf
bnd
xchg
push
test
iret
xchg
pushf
or
push
in
sbbl
and
iret
cltd
mov
stos
es
out
pop
lcall
loop
negb
idivb
and
arpl
rorb
out
lcall
inc
bound
pop
in
sbb
or
dec
xor
pop
iret
fisubrs
sahf
iret
adc
xor
jno
lods
lcall
rcrl
arpl
jnp
jno
ret
fadd
push
dec
repz
ljmp
mov
dec
shl
xor
pop
jae
jne
lods
adc
mov
lds
pop
mov
lcall
sbb
cmc
rcr
jl
lret
ja
mov
leave
pop
roll
dec
jnp
or
sub
sti
shrl
mov
cmp
mov
lret
adc
loop
mov
out
push
xchg
dec
pop
mov
int
in
mov
popf
jno
and
idivb
negl
sub
dec
loop
stos
jle
mov
cs
cmp
sub
or
pop
stos
sbb
add
add
fimull
sub
lcall
ljmp
add
test
pop
xchg
mov
push
clc
inc
test
cmp
call
sub
shlb
xor
mov
dec
or
and
fadds
add
scas
sub
stc
pop
cmp
push
cli
cmc
push
enter
aaa
jge
movaps
jns
mov
shrb
popa
ljmp
cltd
movsl
dec
repz
arpl
push
repnz
in
xchg
outsl
int3
psubusb
decl
push
pushf
or
lods
sbb
ss
inc
idiv
pop
in
pop
lcall
test
cli
test
push
dec
push
fs
aas
cmpsl
and
aaa
dec
jb
mov
xor
call
push
test
pushl
pop
mov
dec
jae
inc
sarl
dec
sub
push
stos
dec
push
mov
xchg
sar
pop
and
mov
sbb
insl
ljmp
jbe
lods
cmp
data16
jne
xor
dec
loopne
test
and
aam
movl
cmc
jne
repnz
or
shlb
ljmp
iret
mov
nop
cmp
in
dec
scas
clc
mov
cmp
push
mov
pop
punpcklbw
jcxz
inc
sbb
mov
cmpsb
lret
xchg
mov
mov
dec
aaa
lods
sub
push
dec
data16
jns
aaa
fwait
out
clc
lcall
gs
and
int
mov
mov
test
std
pop
jmp
loopne
lahf
scas
fisubl
outsl
out
and
dec
insb
testb
xor
jo
lcall
xchg
jbe
int3
icebp
dec
or
push
and
sti
pop
jg
mov
fsubrl
ret
pushl
jno
inc
cmp
sbb
and
sahf
repnz
je
jns
shrb
sub
int3
addr16
loope
xor
push
inc
cs
mov
dec
aaa
pushw
mov
ljmp
inc
data16
subl
in
inc
sub
int3
sbb
in
cmpsb
call
idiv
mov
int3
cmovbe
or
lcall
mov
je
cli
lahf
call
les
jp
div
arpl
mov
call
jae
and
push
jno
xchg
lds
stos
dec
icebp
mov
inc
mov
repz
inc
dec
pop
shrl
les
lds
push
pop
lret
int3
xchg
js
jns
fs
and
ljmp
in
sbb
in
inc
xchg
xor
aad
mov
xchg
movsl
pop
or
insl
decl
lcall
push
dec
push
imul
jmp
dec
jbe,pt
cmp
and
mov
pop
lods
test
adc
call
inc
xchg
int
loope
mov
sbb
push
gs
or
shlb
cmpsb
inc
or
psrld
jmp
jmp
nop
cmp
mov
fimuls
or
inc
push
fimuls
dec
mov
clc
hlt
and
or
xor
lret
fstps
clc
mov
cmp
out
cltd
mov
movq
inc
cmp
add
inc
cmpb
aam
ss
and
adc
loope
rolb
pop
xchg
test
push
and
inc
movhps
fdivr
call
push
inc
and
dec
loop
push
stc
je
mov
loope
dec
xchg
fldenv
icebp
inc
je
clc
dec
lock
stc
xchg
jnp
out
clc
ljmp
xor
bound
lret
dec
or
adc
mov
xchg
mov
enter
nop
jmp
jp
xchg
sub
push
test
pop
int
push
jmp
xor
enter
int
scas
xchg
ret
insl
std
pop
js
test
idiv
ja
jmp
mov
scas
jg
in
mov
dec
inc
inc
shll
cwtl
xor
adcb
mov
cmpsl
mov
aaa
fimull
fiaddl
fwait
cmpsb
lcall
insb
dec
call
mov
mov
push
lret
jb
inc
dec
dec
inc
test
cli
lods
int3
xchg
jle
subl
add
add
cmp
popa
push
inc
lea
mov
les
mov
stos
loope
add
add
rcll
movsl
out
cmp
fildll
push
outsb
in
xor
inc
pop
cwtl
test
cld
mov
out
mov
mov
fsubr
sub
clc
int3
pop
mov
mov
add
mov
and
lods
mov
popa
mov
imul
xor
lcall
mov
sbb
xchg
or
addr16
es
add
xchg
fcomip
into
push
pop
stc
push
pop
ret
imul
mov
aas
pop
enter
adcl
repz
cltd
inc
pop
inc
mov
and
or
mov
incl
popf
test
mov
dec
cmp
popl
xchg
inc
cmp
mov
mov
cmc
hlt
ds
add
arpl
mov
test
lcall
lahf
ds
lcall
push
cmp
mov
sbb
sbb
sahf
ljmp
sub
stc
es
lock
ds
jns
push
lods
mov
sub
jle
xchg
adc
loop
xorb
sub
mov
mov
ljmp
push
or
cwtl
add
and
dec
imul
push
lea
xlat
add
mov
stos
das
sbb
mov
push
mov
xchg
and
sub
andb
add
into
ljmp
mov
jmp
popf
lahf
cmp
mov
pop
jbe
fs
sub
fildl
jnp
popa
les
ljmp
in
aam
push
pop
stc
mov
jns
std
in
fistl
xor
stos
mov
call
adc
sti
icebp
or
mov
aam
popa
lcall
inc
bound
xor
bound
popf
std
add
push
decl
ret
outsb
or
cmpsb
mov
inc
fs
arpl
shrl
mov
lcall
loopne
repz
pusha
jle
adc
push
or
icebp
fadds
out
addr16
call
inc
pop
dec
into
sti
test
int
vpsubusb
cwtl
fwait
jge
fs
mov
jo
dec
lds
lods
insb
loope
incl
dec
push
sub
jb
mov
outsl
inc
jmp
jnp
lahf
pop
decl
gs
and
out
out
into
mov
popa
xor
out
jae
incl
adcb
xchg
push
and
in
cmp
add
mov
test
pusha
pop
adc
push
dec
iret
mov
movsl
jle
or
mov
incl
das
add
push
mov
mov
rcrb
adc
jno
mov
dec
test
mov
cli
loop
or
outsl
pushf
daa
xor
inc
lret
xchg
push
das
inc
mov
data16
push
lahf
insl
ljmp
mull
sub
repz
jns
jmp
push
cmp
adc
int
dec
or
mov
push
or
outsl
mov
mov
mov
pop
aas
jns
lcall
xchg
or
decl
insb
mov
push
jo
mov
call
cmp
je
pop
mov
cltd
mov
out
xlat
sti
mov
ja
cmp
jns
push
div
hlt
stos
arpl
xchg
jne
xchg
aam
iret
cmpl
dec
pop
dec
cli
pushl
jecxz
and
negl
jecxz
pop
inc
push
pop
imul
xchg
sub
out
xorb
or
cmpsb
or
loopne
sbb
filds
cmp
shll
stos
jmp
push
shll
jmp
lods
data16
inc
insb
loop
add
imulb
call
pushl
in
push
jne
pop
out
fmull
jae
dec
dec
lcall
fistps
loopne
test
pop
into
dec
mov
movsl
nop
je
dec
push
dec
or
ljmp
clc
dec
jecxz
icebp
les
les
xchg
frstor
mov
call
dec
bound
jg
sub
js
and
pop
or
movsb
mov
sbb
jl
scas
insb
stos
call
jno
roll
pop
or
out
popa
jae
push
xchg
out
pushf
mov
ficoms
out
test
dec
mov
jnp
push
fdivp
sarb
adc
scas
mov
xchg
jmp
lahf
mov
sub
test
adc
int
mov
jmp
ret
and
push
push
and
xchg
dec
dec
adcb
iret
jmp
push
sub
dec
jp
test
add
movsb
mov
mov
les
leave
add
loopne
jg
dec
gs
inc
incl
outsl
mov
inc
fidivl
je
sahf
jmp
add
in
mov
ret
jae
push
cwtl
inc
xchg
mov
lds
out
cmp
inc
cltd
jns
vpsadbw
add
call
cs
lea
jae
inc
mov
test
jne
test
push
lods
stos
pop
rolb
adc
inc
pop
jb
xchg
mov
dec
sub
jp
daa
adc
mov
stc
and
aas
pop
std
ret
inc
rorb
rcrl
stos
jg
aam
add
jle
jmp
or
cs
into
daa
ds
shll
jmp
incl
add
rcl
mov
push
inc
jns
lds
imul
pop
lock
ljmp
sub
jecxz
xchg
fs
xor
mov
jecxz
mov
lret
pushl
pop
push
aad
cld
add
dec
jb
xchg
out
inc
mov
cli
lcall
inc
push
ljmp
int3
add
adc
jmp
bound
xor
stos
repz
push
loope
ret
fs
sbb
and
pxor
cmp
mov
subl
jb
outsb
wrmsr
out
or
pop
xor
rclb
ja
jmp
push
nop
imul
hlt
inc
sbbl
imul
call
pop
mov
iret
add
pop
mov
pop
fisubs
jbe
call
sahf
rorl
mov
pop
clc
lods
pop
push
jl
clc
movl
jmp
xchg
mov
jecxz
testl
or
sbb
incl
sbb
xchg
ret
mov
js
add
and
xchg
lahf
sub
add
clc
aas
push
call
adc
and
insb
lret
popf
or
cs
inc
push
adc
cs
decl
shlb
xchg
and
inc
mov
int3
dec
cld
pop
movsl
les
ljmp
jg
lds
les
mov
lock
sbb
loopne
mov
cld
sub
mov
cld
in
inc
pushl
push
xor
dec
push
push
shll
test
dec
testb
inc
jbe
stos
adc
cld
incl
cmc
sbb
sbb
jbe
pop
push
add
mov
xchg
js
ljmp
lock
cld
push
aad
push
insl
in
jnp
mov
adc
mov
push
cmp
loopne
add
mov
mov
addr16
je
mov
xchg
arpl
incl
dec
nop
sub
rcr
mov
test
and
jnp
mov
imul
nop
push
out
pop
outsl
nop
in
mov
jmp
mov
into
hlt
sub
xchg
ljmp
lcall
shrb
cli
jg
push
inc
push
cmp
pop
pop
mov
nop
push
loope
adc
out
mulb
imul
sub
int
push
repz
and
add
iret
adc
ljmp
xchg
add
fadds
out
push
or
xor
jo
stos
mov
js
and
mov
jo
fimuls
xchg
loope
movsb
scas
add
out
pusha
mov
nop
cmp
mov
lcall
inc
pushl
int3
loope
dec
sbb
icebp
push
decl
call
iret
or
clc
sbbb
cli
jno
cli
xchg
test
sti
lret
mov
mov
addb
gs
mov
jmp
std
jl
ljmp
cmp
or
loope
mov
mov
adc
jg
lcall
add
scas
pop
cmp
mov
or
int
dec
mov
call
xchg
imulb
subb
andb
and
repz
je
mov
inc
add
ljmp
call
push
jae
add
sbb
pop
sbb
scas
adc
repz
nop
lcall
ss
fcoms
push
mov
xchg
sub
xchg
mov
sar
ljmp
roll
jo
cmp
sub
aad
ret
push
mov
mov
push
cmpsl
xor
push
shlb
fistps
mov
rcrb
repz
dec
jg
lcall
xor
pop
shrl
hlt
mov
xchg
push
pop
dec
jg
scas
sti
add
cli
jmp
stos
and
mov
cmp
stos
push
pop
adc
iret
stos
movsl
cmp
mov
lcall
cmp
mov
incl
cli
sub
jne
mov
adc
mov
sbb
sub
movsl
ret
scas
cli
jmp
lods
pusha
inc
in
or
aam
clc
rcrb
scas
pop
cmp
cmpsb
or
ljmp
out
out
xor
cmp
inc
xchg
inc
sub
js
dec
in
movsl
adc
pushl
lds
adc
test
aas
dec
cmp
mov
push
outsl
fwait
scas
ficoml
push
in
dec
pop
sub
jmp
sbb
push
push
inc
mov
add
insb
cmpl
sti
jne
push
lcall
pop
mov
xchg
sub
xor
jne
lret
push
repnz
inc
cmp
clc
jg
and
sbb
incl
lock
popa
dec
inc
sarb
jl
mov
add
lret
xor
jb
push
push
shll
cmpsb
fwait
xchg
or
and
iret
adc
dec
es
jmp
jmp
pop
or
fimull
xchg
inc
mov
iret
dec
je
cli
lea
adc
pop
xor
sarb
or
hlt
mov
cld
xchg
repnz
into
insl
aam
lret
add
xor
fwait
cmp
mov
pop
lcall
aaa
mov
mov
mov
into
or
jmp
adc
dec
sbb
pushf
leave
test
inc
jp
enter
in
cs
push
sti
jae
lcall
or
repz
aad
imul
sub
jge
ss
call
sub
cltd
cli
mov
stos
and
cmp
mov
mov
in
sbb
jmp
inc
push
fwait
mov
push
lret
scas
or
fiadds
push
mov
stos
or
push
lcall
xchg
jno
icebp
jp
xor
fwait
sbb
sub
mov
or
inc
jo
push
enter
pushl
mov
xor
inc
outsl
rcl
fwait
xchg
sub
in
ljmp
adc
cmp
dec
shlb
icebp
add
or
adc
loop
pop
cld
mov
jp
imul
adc
xor
imul
pop
je
imul
sub
lahf
or
lcall
decl
xor
cmp
sti
mov
push
xor
sbb
push
arpl
test
scas
mov
or
in
fimull
rcr
mov
stos
outsb
fcoml
or
inc
popa
mov
decl
loope
xchg
or
jns
loope
xor
lea
call
cli
int3
sbb
mov
dec
cmp
xchg
mov
add
xchg
fsubrs
sarb
mov
mov
mov
nop
pop
cmp
push
mov
aaa
cld
incl
cmp
push
push
mov
je
sti
jmp
les
test
jo
inc
decl
aas
fisttpll
je
push
leave
out
rcrl
xchg
push
in
je
jns
fnsave
inc
mov
dec
loop
insl
ds
cmc
adc
cmp
jmp
push
mov
mov
hlt
loope
inc
sub
dec
stos
sbb
pop
xchg
add
push
mov
jne
pushl
mov
leave
pop
mov
jle
cmp
je
shll
sbb
decl
push
ret
inc
sub
mov
pusha
rclb
js
push
inc
mov
jp
jp
in
push
aaa
dec
sbb
or
lock
in
orl
ficomps
sbb
addr16
incl
test
js
pop
jnp
and
sbb
ss
push
rorb
lcall
mov
push
and
and
fimull
popf
in
mov
outsb
add
js
pushl
push
push
or
sbb
fsubrs
test
repnz
sar
cmpsl
xchg
ret
ret
pop
incl
hlt
test
push
pop
cld
bound
push
or
inc
aad
gs
jg
popf
popf
xchg
sti
test
xor
mov
adc
lahf
add
push
stos
inc
mov
out
mov
loope
imul
stos
pop
lea
lods
imul
sbb
ljmp
cmp
leave
iret
repz
push
push
outsb
xorl
jg
adc
cmp
mov
stos
jg
in
jle
pop
cmpsb
movsb
test
mov
jns
outsb
and
jl
xchg
push
ljmp
cli
adc
mov
and
in
aam
pop
bound
jb
inc
dec
push
xchg
sti
iret
add
mov
xchg
aaa
aas
xchg
push
xchg
hlt
dec
iret
pop
xor
stos
stc
scas
mov
or
repnz
push
cld
jmp
loop
lret
loopne
mov
xor
adc
sub
cmpl
ljmp
adc
sub
jnp
iret
and
cmp
dec
xor
lcall
mov
aas
add
popf
dec
or
inc
and
out
sub
cmp
lcall
jnp
dec
in
scas
xchg
das
loop
add
push
test
mov
pop
aam
decl
daa
test
test
in
or
out
rorb
dec
jp
cmc
jo
jae
adc
js
inc
adc
cmpsl
shll
jl
stos
push
sti
aas
adc
and
call
scas
mov
sub
xchg
xchg
in
cmpsb
jb
cli
shl
mov
mov
dec
icebp
jno
filds
test
out
setle
inc
mov
in
ficompl
dec
mov
ljmp
std
pop
jmp
mov
andb
cs
incl
inc
cwtl
dec
cmp
mov
es
pop
jne
jecxz
xchg
call
dec
jmp
pop
pusha
je
nop
add
xchg
mov
pop
push
int
and
loopne
push
into
pop
add
inc
popf
jno
jmp
test
xor
dec
daa
jo
leave
stc
push
out
dec
lods
adc
mul
ret
xchg
int
stos
call
decl
inc
int3
cli
in
jnp
and
push
loopne
xor
std
bnd
xor
rclb
ljmp
lock
add
add
sub
jg
jle
dec
jbe
push
jmp
inc
mov
iret
push
out
shr
push
int3
mov
dec
xor
scas
ret
and
icebp
mov
jae
ja
xor
xchg
sub
clc
inc
aas
in
lock
jg
xor
imul
lret
push
dec
jae
stos
in
jl
js
jmp
sbb
call
add
incl
mov
jmp
loop
jnp
dec
jae
data16
mov
test
lds
in
xchg
ret
ljmp
decb
or
mov
fldl
loope
out
pop
add
jmp
ficoml
mov
out
test
xchg
popf
mov
mov
mov
call
cwtl
push
outsb
push
cmpsb
push
scas
mov
sub
in
add
test
cmp
pop
stos
out
incl
rcr
iret
enter
cmpsb
test
sub
sarl
and
ljmp
pop
pushf
jecxz
sub
sarb
sbb
adc
xchg
xchg
clc
rcll
rorl
ljmp
jmp
inc
ljmp
mov
inc
or
mov
cmp
notb
test
jmp
push
cld
out
ljmp
ret
pop
daa
jle
int
stos
xlat
mov
fsub
jns
ljmp
fcom
lcall
cwtl
shrb
pop
cmp
sbbl
mov
scas
clc
pushl
jbe
inc
rorb
jbe
ret
ja
add
xchg
jl
xchg
push
inc
rclb
xor
in
lods
dec
nop
jle
push
hlt
cmp
mov
or
lock
inc
adc
xchg
mov
xor
jo
or
aad
incl
xlat
cmp
xlat
xlat
subb
push
jmp
xchg
inc
mov
mov
sub
sub
cmp
repz
in
fildll
pop
mov
mov
add
jmp
adc
lods
repnz
push
daa
repnz
push
and
jne
iret
rcrl
or
cld
lahf
call
pavgb
and
cmp
stos
gs
in
stc
or
adc
iret
decl
out
clc
ljmp
pushf
movsl
dec
sbb
sub
loop
sbb
xor
sub
push
mov
scas
test
fdivp
and
cli
jmp
jns
inc
mov
or
mov
pop
xor
jnp
mov
xchg
and
jb
cmpsl
inc
sub
in
jmp
pop
daa
mov
insl
and
icebp
repz
leave
push
mov
lcall
jmp
sub
jecxz
dec
loope
popa
lods
clc
pusha
lea
int
xchg
xchg
mov
push
pop
daa
pop
push
push
push
loopne
insl
mov
sbb
adc
sbb
sub
fcomi
dec
fsub
mov
cmp
enter
mov
xchg
and
jg
ja
xor
lret
dec
xor
sub
mov
cmp
jge
add
movsb
ss
jg
int3
xchg
mov
sbb
aaa
xchg
out
adc
bound
lret
jge
cs
cmp
cld
adc
incl
xor
lock
hlt
daa
jg
pop
imul
mov
incl
aas
xchg
xor
mov
stc
je
sbb
push
and
jns
cmp
incl
jg
pop
lret
pop
jbe
jbe
inc
pop
sbb
sub
pop
repnz
lcall
cmp
inc
lods
rcrl
sarl
mov
dec
fisttpl
pop
xchg
imul
jae
fistl
mov
std
cmovnp
mov
or
cmc
int3
pop
jg
out
or
mov
or
aas
out
int
arpl
dec
stc
sub
mov
add
xchg
ret
sbbb
cmp
mov
pop
jl
in
icebp
jg
dec
mov
shrl
push
or
dec
das
push
or
sub
call
jbe
inc
fidivrs
pop
jns
jmp
xchg
sbb
call
rclb
loop
into
sbbl
push
loop
sbb
sub
scas
gs
call
stos
and
shll
call
cmp
dec
movl
in
push
call
aaa
je
and
in
inc
mov
add
mov
mov
pushl
cmpl
jno
push
mov
add
pop
ljmp
push
xchg
and
int3
insb
outsl
clc
add
jnp
inc
stos
lcall
xchg
int3
cmp
dec
je
add
bound
in
push
sarl
mov
jmp
popl
int
or
inc
movsl
sub
incl
pop
inc
scas
leave
xchg
or
sub
adc
lea
dec
inc
jnp
call
cld
decl
dec
enter
xchg
jb
dec
repz
popl
fsubrl
add
rcrl
and
cwtl
ljmp
xchg
addr16
aaa
ljmp
dec
scas
lcall
das
fnstenv
mov
nop
sub
add
jg
mov
pop
jae
rol
adc
pop
fbld
call
push
jno
xchg
test
inc
xor
fsubs
sar
push
inc
cwtl
ret
inc
sbb
incl
cld
jl
ret
fnsetpm(287
lret
jle
cmpsl
cwtl
xchg
das
aas
jo
mov
sahf
cs
sub
pop
cmpsl
xchg
dec
out
cmp
pop
jmp
push
aas
loope
sbb
inc
outsb
jmp
push
stc
popa
insl
sbb
xchg
mov
fidivl
add
int3
cld
fsubr
movsb
iret
loopne
sub
rcrb
sbb
out
jp
dec
fisttpll
in
pushl
cmp
xorl
std
dec
lret
push
sbb
ss
movsb
mov
xchg
pop
lock
nop
rclb
imul
dec
jecxz
pop
subb
adc
out
dec
jno
scas
lcall
mov
push
add
das
lret
out
scas
cld
and
jl
negl
jg
pop
test
sahf
xor
adc
add
mov
jl
lcall
adc
and
xlat
inc
adc
add
adc
int
inc
sar
inc
jg
out
fnstcw
hlt
call
mov
push
sub
lock
jle
ljmp
push
outsb
xchg
nop
in
pop
cmp
popa
mov
add
je
sti
pushl
xchg
andb
out
jmp
daa
daa
mov
xchg
inc
mov
push
lds
xchg
and
hlt
fsubl
and
add
jl
xchg
out
das
xor
decl
adc
jg
adc
dec
outsl
mov
cli
ljmp
xchg
lcall
jb
ret
fildl
push
repnz
jle
rcll
std
cs
pop
xchg
and
inc
out
push
ljmp
xor
or
out
inc
mov
scas
in
andl
and
xchg
mov
jg
jp
or
cmp
mov
or
mov
dec
pop
int3
decl
inc
inc
jl
inc
ja
je
mov
testl
fstps
jo
jbe
cwtl
fistpll
jmp
and
aam
dec
fsts
fldcw
inc
cmp
or
loopne
cltd
out
pushl
mov
out
cmp
jnp
dec
lea
jg
and
negl
test
jbe
add
call
roll
xchg
icebp
sub
idivl
fistpl
or
push
jle
sub
mov
xor
or
decl
daa
cwtl
push
and
test
sbb
data16
jbe
cmp
pop
scas
pshufw
xor
and
decl
out
sbb
inc
imul
mov
jb
mov
pusha
sbb
jmp
adc
xchg
ljmp
rolb
jle
mull
inc
test
ljmp
insb
adc
dec
lahf
inc
nop
push
add
dec
lcall
lcall
push
cwtl
xor
mov
cmpsb
bound
imul
mov
mov
in
cmp
push
dec
or
xchg
int3
hlt
call
test
adc
jo
rclb
mov
movsb
jmp
inc
jnp
out
jbe
xchg
loopne
in
call
std
ljmp
adc
cmp
push
cli
inc
rcrb
ds
decl
imul
inc
fdivr
fidivl
int3
gs
pop
mov
call
nop
outsl
jne
stos
test
cmc
loopne
push
clc
out
jbe
jp
dec
cmp
mov
mov
jg
mov
xchg
idivl
push
aas
mov
add
fstpl
xchg
mov
xlat
jmp
pop
scas
push
or
adc
imul
cmpsl
enter
jg
jne
mov
mov
add
pop
pop
pop
lods
mov
imul
adc
stc
in
ja
jg
insb
ljmp
and
pop
sti
sbb
jg
nop
pop
hlt
negb
adc
and
arpl
cmp
mov
fs
decl
loope
xchg
xor
inc
out
jae
outsl
shrb
cmp
jmp
fidivl
lods
push
lods
lcall
pushl
pop
adc
enter
sub
iret
pusha
into
clc
adc
test
addr16
call
fcomps
xchg
adc
lock
jno
xor
scas
push
ljmp
mov
xchg
xlat
popf
call
rclb
mov
or
les
insl
mov
fbld
stos
bound
lods
or
dec
into
mov
cmpsl
sub
inc
adc
push
add
mov
jbe
loopne
imul
lods
ss
mov
imul
jns
mov
adc
fst
add
pop
xchg
or
pop
cmp
xor
clc
scas
sub
incl
test
andb
mov
mov
loop
dec
xchg
fstpt
or
icebp
shl
sub
add
js
rcll
ja
adc
fwait
lcall
add
jecxz
mov
jno
add
dec
and
mov
lret
xor
pop
xchg
aam
jmp
push
xor
dec
mov
lret
in
mov
mov
cmc
inc
icebp
sbb
negb
sbb
enter
mov
mov
ret
ret
dec
or
cli
jb
je
cmp
cmp
jmp
filds
negb
mov
arpl
ret
stos
fdivs
or
ljmp
cld
cmc
xchg
cmp
add
inc
adc
mov
cmp
cmpsb
clc
and
aam
inc
xorb
xor
stos
or
jbe
stos
addl
cli
popf
xchg
adc
mov
sbb
mov
lcall
xor
loopne
lods
sub
je
sub
loopne
lret
out
out
or
push
mov
sub
adc
dec
pop
or
inc
sbb
cmp
int
loop
adc
cmp
rcl
rcrl
movsb
add
mov
or
repz
pushl
jge
out
insl
or
sub
add
in
mov
pop
inc
ljmp
add
mov
lds
aaa
adcl
fisubl
mov
lcall
fstl
scas
adc
scas
ja
clc
sub
loopne
and
mov
fstpl
pop
cmp
in
xchg
xor
leave
sbb
shll
icebp
outsl
sbb
inc
dec
pushl
fnstsw
push
inc
mov
insl
fnstsw
subl
std
pop
dec
push
in
adc
pop
dec
xlat
jae
jle
mov
fwait
push
cmp
cltd
sbb
sub
sbb
add
cmpsb
jne
jg
ljmp
push
and
and
mov
jbe
inc
and
xor
lcall
std
test
push
and
pop
mov
adc
dec
lahf
sbb
filds
sbb
mov
cmpsb
mov
ret
int
jp
mov
scas
xchg
add
jl
and
sbb
jl
pop
shlb
repnz
pop
push
test
mov
mov
add
cmp
clc
incl
adc
pop
cs
add
imul
adc
cmpsl
decl
mulb
xchg
loop
int
and
jl
cli
repnz
xchg
popa
and
daa
insl
inc
mov
jnp
inc
lds
call
pop
cmovp
icebp
xchg
mov
mov
cmp
fwait
xchg
dec
mov
pushf
psubusb
lahf
jp
pop
inc
ret
fiaddl
xchg
inc
cli
mov
sbb
ljmp
push
sub
dec
and
fnstcw
dec
lcall
adc
mov
mov
cli
in
dec
call
sahf
outsl
fwait
out
ss
mov
mov
test
int3
pop
data16
and
call
movsb
leave
ficomps
mov
sbb
sbb
les
jmp
repz
idiv
call
push
mov
shl
adc
sub
push
jne
sarl
push
mull
push
in
decl
mov
sti
into
xor
stos
mul
inc
and
inc
dec
cld
pop
and
in
adc
mov
adc
mov
sbbb
sbb
movsl
mov
jmp
testl
test
xchg
push
xor
jb
ljmp
dec
or
call
adc
jmp
or
bound
movsb
lds
cmpw
pop
xor
aad
out
das
sub
and
cmpsb
lods
jg
xchg
mov
sbb
inc
mov
mov
lret
nop
xchg
jecxz
call
push
mov
mov
ss
cli
xchg
loop
dec
int3
xchg
fstpl
pop
ds
pushl
js
lds
int3
push
fldcw
xchg
aam
ficompl
roll
pusha
das
inc
decl
sub
pop
jnp
sub
ret
inc
xchg
cwtl
xchg
inc
push
scas
xchg
ljmp
push
call
imul
add
mov
data16
xorb
mov
hlt
pusha
mov
lahf
fnstsw
loope
mov
jg
scas
or
xor
inc
insl
mov
testb
push
insb
insl
std
out
cmp
test
outsb
xchg
or
call
inc
popa
cmpsb
and
jo
addr16
in
sbb
cld
jmp
sub
popa
test
jmp
xchg
or
add
out
sub
mov
iret
inc
push
xchg
sub
outsl
mov
jnp
out
testl
inc
into
pop
subl
sar
jb
sti
sbb
stos
adc
add
adc
adc
fildll
push
test
popa
mov
pop
push
jae
scas
xor
in
cwtl
jmp
sbb
sub
bound
out
pop
dec
jae
icebp
and
addb
data16
push
dec
ljmp
xchg
mov
cmp
scas
mov
or
push
enter
leave
add
adc
xrelease
push
repz
sar
dec
or
mov
aad
jl
mov
add
stos
or
and
sbb
mov
jp
scas
pop
pop
pop
pop
rcr
cld
sbb
setle
fcmove
lcall
ret
je
ss
scas
xor
add
push
cmp
inc
xchg
fcomip
pop
das
icebp
mov
ljmp
fucomi
enter
daa
cmp
gs
jmp
lret
add
daa
jmp
out
mov
sbb
fstl
std
shlb
das
cmp
leave
loop
fsub
outsl
pushf
mov
enter
sbb
ja
out
cltd
sub
lcall
push
data16
mov
and
ljmp
fbstp
mov
fistpl
mov
mov
rcrb
jge
lahf
mov
xchg
lock
dec
std
mov
shlb
push
jmp
mov
outsb
inc
movb
int
adc
or
pop
fisubrs
int3
out
ret
or
fwait
in
add
rcrl
mov
rcll
mov
xor
jg
cs
inc
cmp
xchg
insl
int3
cld
movsb
enter
inc
cmc
subb
ja
es
lock
lcall
pop
sub
popa
arpl
mov
inc
mov
mov
mov
cmpsb
xchg
pop
mov
adc
sub
aad
sbb
call
cmc
rcrl
inc
stc
or
fbstp
jmpw
lods
cwtl
ljmp
call
mov
out
repnz
lock
pop
sub
mov
ljmp
in
cmp
ss
sub
push
jns
add
dec
mov
cmp
adc
dec
pop
incb
jl
outsl
movl
inc
call
ljmp
daa
pop
mov
or
fisttpl
lcall
jae
cmp
fdivr
in
inc
lea
xor
mov
mov
sub
fsubrl
lds
mov
in
fidivl
sbbl
pop
mov
call
cmc
mov
mov
icebp
aaa
popf
add
mov
daa
jne
popf
outsb
mov
mov
fisubrs
adc
jne
call
popa
insl
scas
cmp
js
ja
orl
clc
jge
popa
inc
jae
mov
mov
lcall
jl
lahf
ljmp
addl
lods
sahf
mov
sub
sarl
jmp
jg
js
mov
jle
dec
dec
movsb
cli
mov
in
call
call
lret
pop
or
and
add
loopne
mov
adc
mov
cmp
mov
imul
sbbb
or
cmp
push
movsb
cmpsb
adc
inc
mov
incl
cltd
js
lock
loope
sti
xchg
or
add
lcall
mov
mov
loopne
cli
pop
leave
inc
addr16
inc
jae
add
mov
xlat
jmp
divb
cltd
test
mov
ljmp
xlat
incb
leave
xor
or
clc
jmp
pop
sbb
adc
jbe
xchg
outsl
paddusb
stc
push
out
in
and
inc
xor
fdivr
dec
jo
out
jmp
xchg
out
dec
mov
js
or
push
add
call
enter
or
fcomi
imul
lods
pop
mov
pop
mov
testb
leave
pop
fbstp
pop
icebp
xchg
push
fwait
inc
aam
mov
jmp
add
fs
sbb
dec
push
dec
push
mov
fcomip
and
sahf
jle
outsb
inc
xchg
je
jnp
sahf
push
pop
fldenv
pop
iret
pop
loope
jmp
jno
loopne
mov
cmc
ljmp
push
rcl
mov
lret
jo
mov
icebp
mov
call
mov
dec
inc
add
gs
pop
mov
push
aad
jmp
xchg
lret
imul
call
clc
js
nop
rcrb
ffreep
jmp
addr16
roll
xor
add
lods
sbb
loope
inc
or
push
add
fisubrl
xchg
loop
adc
mov
dec
cmp
mov
push
mov
stc
push
and
jge
add
scas
lds
sub
jmp
and
andb
dec
push
adc
push
adc
lret
cmp
push
lcall
leave
push
or
leave
rclb
jecxz
push
in
pushf
jg
sbbl
mov
mov
mov
in
repnz
insb
mulb
orl
mov
jns
cli
ljmp
adc
add
arpl
mov
mov
sbb
sti
xor
pop
sti
out
and
mov
in
shlb
fnstenv
std
mov
cmp
icebp
pop
and
add
push
sar
filds
and
inc
mov
cmp
xor
push
xchg
push
pop
mov
gs
cld
sub
pop
repz
lds
cmp
int
sahf
inc
mov
pushl
add
sub
outsb
idivl
cmpsl
inc
xor
mov
fs
subb
stos
mov
jmp
sub
lcall
jo
daa
sub
push
pcmpgtb
fwait
incb
icebp
mov
sti
mov
ficoms
pop
dec
dec
fs
test
icebp
lcall
xchg
sbbl
xchg
xor
or
push
mov
or
push
cld
lea
movsl
popf
jmp
lods
pop
adc
sub
call
lock
ret
jno
sbb
fisttpl
or
mov
and
decl
lret
dec
fwait
sub
sbbb
xchg
lock
icebp
add
gs
mov
mov
out
sbbb
loope
arpl
sbb
jle
pop
jns
xor
xlat
movsl
ficoms
pop
dec
fwait
add
cmpsl
mov
cmp
mov
scas
cmp
xchg
jo
repz
stos
mov
filds
js
and
out
test
addl
jmp
stos
add
repnz
pop
aas
add
push
iret
sub
pop
ficompl
es
dec
imul
out
addr16
repz
nop
push
xchg
jmp
push
imul
stc
xor
cmp
inc
push
mov
insb
or
lock
mov
cs
pop
mov
insl
dec
inc
sbb
adc
sbb
in
sub
mov
fisubrl
insl
jp
in
sub
addr16
inc
daa
jg
adc
repnz
jle
pop
sbb
mov
sbb
addb
idiv
dec
into
sbb
xor
adc
push
xor
ret
jno
mov
stos
xchg
add
jae
inc
jle
aam
push
adc
scas
jmp
push
dec
fwait
adc
inc
jg
lret
or
inc
jne
cmp
xor
mov
xchg
loopne
mov
push
sub
inc
pop
adc
cwtl
xor
inc
pop
out
jecxz,pt
sub
inc
mov
xor
call
cmp
movsl
jno
jmp
xchg
orb
xor
jmp
and
inc
xor
adcb
aam
cmp
or
xor
insl
adc
push
lcall
mov
pop
mov
lods
sub
loop
stos
xchg
imul
dec
jbe
adc
xchg
insb
clc
mov
in
and
dec
in
scas
incl
rol
lock
sub
xchg
or
add
dec
popa
addb
mov
push
icebp
push
dec
mov
inc
ja
mov
sub
movsb
adc
pop
jmp
mov
cld
and
in
jmp
add
xor
xchg
out
jge
or
andps
popf
xorb
xchg
inc
adc
clc
call
stc
das
das
xor
mov
xorb
sti
adc
inc
sbb
test
pop
dec
sub
xor
shlb
jl
scas
cmp
out
clc
and
decl
mov
int3
xchg
sbb
push
mov
cmp
arpl
pop
mov
push
sub
fistps
mov
or
adc
stc
shl
scas
cmc
call
xchg
adc
mov
jne
mov
inc
push
out
lods
lahf
cmp
scas
or
push
add
sub
pop
push
mov
decl
mov
xlat
dec
push
cmp
int3
call
push
call
add
mov
adc
push
outsl
ds
push
test
inc
mov
in
mov
push
or
je
jg
xor
adc
insb
repnz
decl
loop
outsb
xchg
gs
fisubs
fcompl
fisubrs
push
jae
jns
push
scas
cmpsb
aam
jmp
jmp
sbb
dec
add
mov
aam
mov
aaa
lcall
and
aad
jbe
jo
jne
jg
push
outsb
and
xor
pop
xchg
fistpll
repz
test
xorb
add
fistps
sti
stos
or
test
incl
mov
push
in
add
js
mov
in
mov
and
xor
push
xchg
decb
mov
pushl
mov
scas
test
push
inc
cs
lods
imul
cmp
jl
movsl
or
xlat
push
mov
aam
call
js
fnsave
lods
sar
lcall
subl
jl
pop
cmc
out
xchg
les
cwtl
pop
push
sub
mov
out
pop
subb
jle
sbb
xor
mov
push
into
cmp
adc
sbb
data16
cmp
subl
pushf
cltd
cmp
sub
sub
xchg
ljmp
xor
iret
rcrb
out
mov
aas
xchg
xchg
push
incl
popa
dec
cmp
hlt
xchg
sahf
rcr
scas
fdivr
mov
jae,pn
gs
pop
cmp
cli
ljmp
bound
cmpsb
mov
adc
std
cmp
mov
push
rclb
test
inc
dec
or
movsb
addr16
aad
fwait
jb
std
mov
cltd
test
mov
xchg
jp
negb
ficoml
inc
add
fwait
xchg
push
cs
lods
sub
push
fs
rorb
imul
xchg
mov
adc
bound
mov
cwtl
mov
scas
inc
mov
sbb
cmpb
pushl
scas
dec
insl
dec
xor
ja
in
ja
mov
icebp
xchg
sahf
ret
mov
cmpsb
out
push
mov
add
add
pop
mov
mov
in
pop
inc
cmpsb
or
push
loopne
pop
xchg
add
lock
cmp
push
lods
xor
xchg
or
cmp
jmp
cmp
cmovne
cltd
xor
movb
sbb
rclb
mov
push
in
in
out
movsl
sar
adc
mov
lret
add
cmpsl
add
cmp
or
shll
cmp
lcall
rclb
jle
mov
repnz
push
pop
lcall
cwtl
aam
loop
popa
stos
xor
mov
outsl
icebp
push
adc
insl
decb
pop
mov
dec
jbe
cld
fbld
int
jnp
dec
scas
adcl
test
ret
addr16
repnz
and
mov
inc
scas
mov
aam
sbb
add
popf
ret
ret
mov
adc
mov
rcrb
inc
imul
pop
xchg
push
leave
in
call
pop
push
and
dec
cwtl
fisubl
aas
ja
movsl
pop
addr16
ds
sub
pushl
sahf
pop
adc
mov
cwtd
aaa
pop
xor
lret
aas
daa
pop
in
or
call
loop
mov
mov
idivl
cmp
jbe
xchg
out
dec
or
jge
dec
dec
sbb
mov
push
sub
imul
add
andl
ljmp
and
mov
incl
xor
fwait
mov
int
in
jmp
adc
enter
ss
jo
incl
sub
ss
add
out
je
add
cmc
out
inc
inc
or
xchg
ljmp
mov
lea
push
sub
insl
jle
cmovb
lahf
inc
repz
add
dec
loop
js
imul
jg
dec
out
mov
incl
adc
mov
cmp
in
clc
add
jle
loope
push
mov
jmp
notl
sbb
sbb
xor
pop
repnz
out
stos
jns
inc
sbb
in
incl
fisubrs
sahf
xor
jmp
addr16
mov
push
sti
pop
call
test
pop
xchg
ja,pn
jecxz
mov
xlat
mov
mov
pop
out
or
sbb
decl
xchg
repnz
dec
clc
js
popf
es
aaa
gs
mov
sar
ljmp
add
into
xchg
nop
xlat
push
es
jne
and
cmpsl
arpl
stos
pop
incl
imul
dec
ds
jmp
push
std
inc
std
cmpsb
ret
xor
push
cmp
mov
mov
mov
jmp
ljmp
sbb
push
jae
stos
jbe
roll
ds
push
das
ds
pop
inc
shll
je
lock
sub
es
rcl
fildll
fisubrs
dec
mov
fdivp
xchg
loopne
cmp
arpl
adc
test
ljmp
cli
movsb
mov
sarl
ret
push
add
jb
jns
in
outsl
sub
mov
ljmp
icebp
inc
or
sarl
xor
out
fwait
test
popf
imul
or
push
xchg
testb
xor
icebp
xchg
rcrb
decl
ss
fnsave
inc
aad
inc
or
cmc
xchg
popa
xor
jmp
jecxz
jno
mov
jmp
or
jmp
loop
xor
lahf
rolb
push
pslld
incl
mov
fcos
ljmp
nop
ds
repz
adc
cmp
scas
inc
or
jo
scas
push
mov
jae
ljmp
xlat
xchg
dec
imul
lcall
popf
sbb
loope
jns
fisttps
pop
hlt
loopne
jmp
imul
mov
inc
test
xor
dec
xor
mov
sub
incl
cmp
cmpsl
ja
test
sub
lret
subb
inc
inc
push
iret
test
mov
push
jnp
pop
pop
cltd
out
jae
inc
daa
imul
or
add
sub
repnz
jmp
jae
pop
scas
movsl
sub
filds
push
and
test
inc
pushf
out
sub
popf
or
into
inc
pop
rdpmc
incl
xchg
mov
add
aas
sbbl
jbe
xor
stc
fcmovb
das
mov
and
pop
scas
adc
mov
or
arpl
mov
ds
mov
fcmovnbe
cmp
les
xchg
inc
cmp
lret
pop
jo
ret
pusha
fsubs
pop
sub
je
push
loop
push
popa
stos
cli
sarl
mov
mov
jle
jae,pn
sbb
aam
adc
mov
mov
dec
je
js
ljmp
pop
sti
dec
popw
dec
jns
pop
mov
push
es
aaa
sbb
lcall
les
jg
jns
loop
jb
jl
fwait
pop
add
scas
in
dec
fmuls
pushl
push
adcb
shlb
leave
cmp
pop
ljmp
into
lret
mov
adc
fmull
jp
shr
push
push
test
pop
lret
into
inc
sub
jg
out
mov
adc
incl
mov
gs
jmp
cmpsl
adc
mov
ret
ljmp
mov
fsts
shll
xchg
fcmove
jbe
mov
clc
pushl
or
cwtl
or
rorb
sub
in
add
adc
inc
icebp
les
jnp
ret
or
nop
mov
fstps
pop
adc
adc
mov
pushl
push
arpl
pop
mov
out
inc
adc
mov
ret
jne
jge
dec
ljmp
or
sub
movsl
mov
cmp
decl
inc
mov
inc
and
jmp
mov
jns
outsl
cli
leave
mov
gs
das
mov
inc
ss
and
adc
lcall
ljmp
pop
nop
fists
test
shl
jl
add
ljmp
push
mov
imul
push
out
pop
dec
ret
xchg
ret
xchg
mov
outsb
notb
cmpsl
mov
jb
incl
insb
xchg
xor
lods
inc
dec
fsubl
mov
mov
xchg
fs
ds
call
inc
call
lret
icebp
add
in
lock
push
scas
xchg
sahf
repnz
stos
add
sub
mov
ljmp
shrl
test
inc
mov
jmp
outsb
jecxz
mov
lea
jbe
mov
sub
jge
adc
mov
cli
xlat
xchg
xor
jns
repnz
ret
mov
test
mov
les
sub
je
jecxz
pushf
push
test
jmp
cmpsl
or
out
test
daa
icebp
mov
leave
std
test
or
push
cmp
mov
add
sbb
sub
cmc
shr
xchg
ret
clc
or
lods
ficoms
hlt
sbb
dec
push
xchg
sub
gs
jp
mov
in
repnz
add
mov
hlt
add
jnp
inc
dec
mov
and
stos
mov
call
xchg
adc
xlat
or
sub
fnsave
push
std
call
mov
jg
outsl
nop
jne
pusha
xor
int3
orl
test
sbb
in
sbb
in
into
addr16
cmp
add
fwait
std
mov
mov
fadd
mov
imul
sub
xchg
push
out
aas
pop
cmp
decl
stos
push
mov
lea
pop
and
sbb
out
in
shlb
or
call
pop
and
cmc
icebp
xor
or
imul
orl
fidivrs
lcall
inc
jb
sbb
adc
push
add
inc
xlat
cli
sti
push
sbb
xchg
mov
repz
test
or
adc
insl
push
xchg
fsubrs
cs
inc
gs
cmp
jno
cmp
fmuls
jnp
clc
dec
sub
pop
pop
jbe
loop
adc
stos
sub
sub
cld
dec
lea
fisubl
je
aaa
insl
imul
push
loopne
loop
sbb
and
dec
jmp
lods
xchg
in
shrb
xorl
lcall
fptan
fidivrl
cmp
pusha
jmp
fwait
xchg
pop
dec
dec
jmp
popf
sbb
mov
add
hlt
or
data16
pop
mov
add
inc
push
arpl
add
dec
pop
les
test
push
pushf
ljmp
add
mov
adc
or
pop
fwait
nop
pop
icebp
and
sar
mov
imul
pop
aaa
idivb
mov
std
mov
pushl
fwait
cmc
out
and
xchg
leave
lret
mov
lret
outsl
cmp
cmp
outsb
call
dec
xor
in
jl
pop
stos
mov
mov
add
lcall
shrl
xchg
stc
bound
je
loope
adc
lds
jmp
cld
push
fwait
cmp
or
mov
adc
xlat
inc
cld
xor
adc
fcom
jge
loop
andb
sub
lods
cltd
fimuls
les
mov
scas
push
add
jl
negb
xchg
mov
in
push
dec
mov
mov
dec
arpl
mov
pop
mov
popa
ret
int3
and
insb
push
push
call
clc
shrl
sbb
in
mov
sub
test
inc
fists
loopne
and
cli
xchg
int3
aad
scas
dec
aam
cmp
sub
test
inc
xor
lods
or
push
lahf
xor
iret
sub
or
shlb
jl
movsl
in
lods
and
lcall
dec
rcll
and
inc
adc
push
les
cmp
out
iret
dec
inc
jns
gs
pusha
pop
xor
mov
sbb
jne
outsl
rol
push
mov
pop
push
decb
loop
cld
aaa
test
jecxz
lret
push
adc
out
icebp
cld
call
std
xor
mov
call
jmp
cvtps2pd
xlat
lods
jae
sbb
call
sub
repz
cmpl
and
loopne
in
or
adc
lcall
mov
xchg
ds
pushf
ljmp
cs
lea
aad
popf
push
and
jg
std
lret
push
fcmove
mov
sahf
js
sbb
adc
ljmp
inc
pop
out
in
int3
xchg
add
sbb
out
popf
movsb
xchg
inc
pop
push
lret
push
push
mov
push
out
sub
sbb
fisttps
mov
enter
sarb
int
das
in
cmpsb
cmp
lods
push
insb
sar
pushl
mov
or
or
dec
or
mov
adc
inc
push
out
or
xorl
cmp
cmp
cmp
lcall
popa
pusha
aad
rorl
repz
sub
pop
cs
add
mov
decl
push
cli
cmp
xchg
andl
jg
pop
hlt
int3
leave
push
push
xor
adc
test
inc
pushf
xor
xchg
imul
fwait
hlt
pop
ret
movsl
dec
pop
jge
xchg
mov
pop
popa
sbb
out
clc
rcrl
pop
sahf
mov
add
inc
movsb
jp
and
mov
jle
push
and
pushl
mov
dec
inc
sbb
fldenv
or
pushl
adc
loop
jno
outsl
mov
imull
lds
inc
fs
xlat
pushl
jb
pop
bound
mov
data16
adc
mov
in
pop
cmp
jg
jbe
outsl
or
out
xchg
cli
scas
cmp
jge
hlt
inc
stc
sub
cmpsl
pop
inc
int
cld
pushl
icebp
lea
pop
jno
sbb
insl
mov
pop
cmc
push
sahf
add
loope
cmp
sub
mov
fsubl
decl
sub
pop
sub
jmp
inc
xor
ftst
sbb
lcall
push
dec
dec
ret
pop
mov
fistpl
push
aam
dec
cmp
jl
jns
loop
pop
xchg
cli
sbb
movsb
fnstsw
add
addr16
sti
pop
int
ljmp
jecxz
push
pop
decb
fcoms
addb
hlt
push
lret
repz
je
clc
dec
jmp
iret
stos
shll
cmp
push
push
pop
mov
movsb
mov
add
test
stc
adc
repnz
lea
pop
sub
loop
mov
incl
inc
adcb
ja
mov
pop
lock
inc
jge
das
dec
lcall
pop
aam
jmp
inc
sahf
jl
out
sarb
xchg
jmp
push
ljmp
jns
sub
out
sbb
faddl
sahf
aam
test
ljmp
dec
mov
ja
je
adc
mov
dec
and
add
and
adc
aam
sbb
fcomip
jl
repnz
dec
nop
stos
pop
daa
cmp
test
sahf
ljmp
imul
dec
jnp
mov
outsl
jo
cmp
icebp
dec
stc
and
test
adc
or
lret
mov
popa
sbb
push
jmp
cmp
jmp
nop
nop
js
pop
xchg
mov
fildll
popa
shr
adc
sahf
or
push
xor
cwtl
pop
jg
out
xor
adc
adc
pop
fwait
cmp
int3
dec
or
int3
xchg
test
push
popa
xor
or
test
jae
dec
aas
or
jbe
dec
sub
mov
cli
dec
decl
adcb
repnz
mov
stos
insb
jns
or
scas
cmc
cmp
gs
push
lret
scas
add
ja
pop
movsb
cli
xchg
repnz
add
rorb
push
shll
and
ljmp
repz
jmp
out
add
int3
jp
xchg
adc
mov
add
ljmp
inc
sub
in
jmp
push
sbbb
push
cltd
loopne
fisubs
mov
mov
shrb
jo
into
inc
cwtl
dec
jecxz
inc
insl
inc
cmpsl
sti
adc
or
or
sbb
popf
pop
ret
sbb
ffree
mov
pop
loopne
inc
jbe,pt
add
mov
sbb
push
push
in
push
popf
outsl
mov
loope
popa
repnz
and
pop
inc
xlat
cs
outsl
push
fs
jmp
or
mov
xchg
mov
mov
adc
call
cmp
or
add
dec
sub
repnz
das
or
jg
inc
jp
pop
leave
push
cmp
test
adc
subb
or
ljmp
add
sbb
jge
pop
add
shlb
add
cmp
addb
int3
cltd
push
xchg
jg
xlat
push
pushf
nop
imul
or
ss
push
and
add
dec
jo
xchg
jnp
adc
ret
ljmp
jbe
dec
xchg
pop
mov
clc
add
faddl
std
aaa
sub
sti
fbstp
shlb
xchg
mov
mov
mov
sbb
xchg
imul
and
jg
stos
dec
test
cld
mov
jo
insb
imul
or
push
or
jmp
xchg
xor
shrb
mov
adc
repz
pop
jl
pushf
shlb
xchg
in
test
repnz
push
into
sbb
xchg
pop
mov
mov
inc
push
xor
cmp
fimull
in
movsl
popf
or
incl
sub
in
push
jbe
fs
jo
les
test
xchg
mov
int3
adc
dec
cld
pushl
rcll
sbb
rol
inc
jmp
jg
xor
pushf
pop
jecxz
or
sub
jl
sub
ljmp
mov
nop
inc
cmpsl
cmp
lock
aaa
add
adc
cmp
negb
fs
cwtl
lahf
int
xchg
adc
call
jge
mov
adc
sbb
mov
fcoml
int
sub
idivl
bound
jnp
jecxz
test
mov
cwtl
xchg
ficoml
je
fsubl
and
mov
pop
fwait
push
and
lret
pop
dec
adc
incl
push
mov
sub
lods
nop
add
jmp
ss
je
ja
jg
sub
cmp
inc
aam
xor
ljmp
jmp
add
mov
in
sbb
mov
cmp
mov
fsubrl
mov
xchg
push
fsubs
pop
xor
in
loope
es
jmp
jle
add
dec
in
xchg
in
add
mov
ja
or
js
ljmp
dec
dec
dec
mov
lods
jecxz
mov
push
stos
out
mov
mov
or
or
enter
mov
fwait
mulb
mov
daa
mov
call
imul
lea
or
jmp
xchg
push
push
mov
push
call
in
push
test
bound
stc
arpl
testb
mov
aas
mov
outsb
fiadds
mov
stc
cmp
lcall
inc
lods
inc
dec
das
push
out
sbb
push
ja
mov
pop
mov
dec
xor
inc
in
mov
add
imul
push
and
pop
lret
jg
lret
iret
insb
mov
jp
add
rcll
cmpsl
loope
push
pop
xorl
iret
stos
fs
outsl
movsl
xor
testl
cmpsb
and
fldt
add
lcall
out
and
movsl
iret
cmp
sbb
push
jmp
sbb
sbb
arpl
decl
push
jbe
and
sbb
push
push
mov
fbld
jno
imul
jg
pop
icebp
loope
popf
out
pop
pop
loope
jbe
mov
xor
sahf
stos
push
test
mov
jg
decl
fwait
push
and
out
jl
and
pop
push
daa
cmp
xlat
rcll
jmp
xchg
mov
fisttps
imul
loope
xor
stos
mov
mov
push
xchg
out
mov
xor
shr
push
inc
lret
icebp
clc
outsl
clc
dec
cmp
mov
int
sbb
push
or
jecxz
jmp
leave
or
cwtl
sbb
cmp
jno
xorl
rorb
loopne
or
cli
push
test
add
push
mov
mov
stos
cmp
out
pop
xchg
push
ja
jg
jg
adc
testb
push
or
mov
cmc
sub
xlat
pop
aam
cmpsl
dec
nop
mov
call
mov
or
jno
mov
ja
and
and
xchg
xor
aaa
les
lcall
xchg
mov
fbld
iret
iret
in
mov
cli
mov
mov
cmpsb
ds
call
jmp
add
flds
or
shll
stos
xor
xchg
call
pop
pop
mov
mov
repnz
mov
mov
adc
aas
push
movsb
mov
pop
fcoms
adc
fucom
push
adc
sub
ljmp
jmp
mov
int
jne
pop
adc
dec
sbbl
lcall
sub
pop
dec
sub
dec
call
cmpsb
fwait
mov
cmp
push
mov
dec
ficompl
cltd
adc
pop
cmp
dec
add
sub
mov
lahf
adc
dec
adc
mov
aas
mov
push
inc
add
jp
pop
pop
pushf
dec
pop
movlps
push
ja
sbb
incl
stos
mov
jle
ja
popa
inc
dec
adc
mov
imul
dec
xchg
dec
repz
or
out
hlt
mov
test
xor
loope
jns
adc
jns
sub
push
lcall
or
jle
pop
punpckldq
pusha
adc
inc
mov
jecxz
xchg
push
loop
test
cli
bound
jle
fldcw
mov
ret
jl
push
fsubl
xchg
or
movsl
ljmp
cs
adcl
lea
push
mov
sbb
push
dec
out
mov
adc
fnstenv
je
rcrb
push
mov
insb
out
stc
loope
imul
lods
xchg
insl
call
pop
int
mov
sub
push
test
mov
fsubs
sti
pop
je
js
adc
xchg
xchg
sub
cmpsl
cmp
ljmp
fdivr
outsl
cmp
pop
scas
pushl
aam
add
cmpsl
lods
pop
fdivrs
lcall
add
xchg
out
in
adc
loope
dec
mov
lods
pushf
mov
sub
sbb
fwait
incl
xchg
movsl
pop
outsl
sbb
or
cmp
dec
adc
pop
add
push
sub
test
lock
incl
int
cmp
sub
nop
daa
out
cwtl
dec
lds
jne
jge
xchg
sub
stos
hlt
jbe
jmp
adc
mov
sti
jno
out
fcmovbe
and
negl
incl
adc
xchg
test
cmpb
jp
clc
fcoml
push
arpl
andb
inc
or
xchg
xchg
dec
xchg
push
ficomps
inc
jg
jmp
pop
scas
adc
in
cs
jno
rcl
imul
ljmp
adc
pushl
mov
mov
pop
orl
nop
test
cmp
lcall
in
push
fmulp
xor
push
mov
lret
add
or
and
aaa
jno
ret
mov
jmp
in
jle
xchg
inc
and
mov
fsin
sub
out
jbe
xor
xchg
sarl
insl
ljmp
jmp
test
dec
loope
push
jne
jno
add
cli
rcrl
ds
and
cli
mov
mov
or
leave
jno
pushl
test
sub
pop
xor
imul
call
in
mov
mov
test
jmp
xchg
fs
xor
ljmp
icebp
mov
lea
or
mov
mov
aas
sar
push
sbb
pop
xor
lock
pop
pop
stos
and
and
das
movsb
movsb
pushl
or
mov
cs
imul
pop
mulps
dec
mov
hlt
jmp
cmp
push
lahf
push
movsl
dec
adc
xor
jg
jmp
shll
iret
ret
mov
and
adcl
mov
pushl
aas
adc
and
outsb
dec
imul
pop
adc
and
push
push
scas
push
lret
stos
lcall
push
jns
cmp
insb
or
sbb
rol
je
test
incl
adc
push
mov
or
mov
lret
jp
pop
test
mov
pop
imul
das
inc
ror
inc
mov
jnp
pop
push
cmp
std
in
jl
popa
inc
loope
aad
push
mov
call
ljmp
enter
mov
fninit
mov
out
int3
imul
jno
xchg
mov
popa
mov
ret
mov
jnp
push
mov
push
jne
aaa
xchg
call
pop
je
fs
das
or
ljmp
inc
pop
lods
push
add
lahf
lret
fcmovbe
inc
jp
mov
out
mov
les
jg
aam
pop
enter
gs
push
push
inc
push
mov
decl
mov
push
push
mov
mov
inc
movsb
bsr
mov
stc
mov
decl
fs
cmp
outsl
adc
shll
ror
decl
pusha
and
es
fs
fisubl
jno
cmpsb
mov
jle
xchg
pop
iret
aaa
xor
pushl
bound
hlt
pop
aaa
mov
into
in
pop
and
sub
xchg
add
ljmp
push
jo
pop
cmp
xchg
push
lods
inc
pop
ds
lods
mov
dec
mov
ja
ret
js
fcomps
test
inc
inc
dec
or
fsub
add
sub
cwtl
inc
cs
shl
cmpsl
repz
mov
push
add
ljmp
shr
mov
int
and
inc
test
xchg
jnp
scas
fildll
sbb
out
jns
sub
inc
mov
cli
decl
pop
inc
mov
push
inc
jbe
lea
fistpll
scas
repnz
sbb
ficoms
fcompl
roll
psraw
fwait
dec
test
call
xor
push
dec
lcall
mov
mov
idivb
insb
inc
pop
call
push
popf
adc
movsl
mov
cmp
mov
cltd
mov
adc
pop
lcall
les
sti
stos
mov
add
lret
sbb
shl
mov
ja
insl
aam
cmp
pop
inc
icebp
cli
imul
fwait
sbb
push
mov
mov
inc
out
mov
movsl
aam
movsl
sub
push
pop
pop
ljmp
stos
push
call
cmc
pushl
push
loopne
add
sti
ds
lret
jno
xchg
shl
mov
ljmp
inc
sub
and
cmp
clc
sbb
lds
cs
cmpsb
sti
insb
jecxz
idiv
incl
daa
es
addr16
push
mov
jns
mov
sbbl
mov
adc
inc
cld
dec
iret
or
or
xchg
ret
scas
push
inc
shrb
jae
pop
pop
decl
stos
lods
xchg
and
or
sbb
ret
pop
int3
xlat
mov
shlb
loop
incl
mov
lahf
and
push
pop
icebp
dec
addr16
je
sarl
xchg
pop
jmp
jae
xor
pusha
outsb
mov
dec
int3
xchg
lock
fdivrs
dec
dec
xchg
jb
cltd
inc
push
divl
push
lcall
jns
mov
mov
mov
mov
scas
mov
jle
cmp
gs
push
sti
or
inc
xor
jae
enter
je
jg
ljmp
push
adc
xchg
repz
sti
ljmp
out
adc
shrb
or
call
xor
add
stos
and
ds
and
mov
out
push
clc
jno
cmp
adc
push
ljmp
or
lcall
loopne
jo
mov
mov
dec
fcmovb
mov
jecxz
or
or
jnp
lcall
and
jns
punpckldq
cld
xchg
arpl
rorl
xor
jl
pop
lods
sub
popa
lret
jmp
pop
mov
push
ljmp
mov
mov
fwait
cwtl
adc
and
test
jg
xlat
cmp
clc
mov
hlt
or
dec
jbe
push
fmulp
loopne
inc
sti
aam
pop
cmp
pushl
jge
inc
or
jp
aam
jle
decb
test
lret
cmp
push
cmp
push
call
jp
ror
dec
inc
xchg
xor
ja
call
push
xor
jecxz
push
je
pushl
dec
das
test
push
mov
fsubl
scas
mov
push
or
repz
add
mov
jmp
stc
mov
push
repnz
ss
cmpsb
xor
dec
fsubl
jmp
pop
rcll
sarb
sbb
push
ds
mov
in
or
dec
xchg
add
in
jg
or
push
sub
mov
scas
in
pop
push
jle
icebp
pop
dec
ljmp
into
dec
dec
pop
push
sub
jl
pusha
aad
and
jp
gs
sbb
es
aam
push
or
mov
xor
or
cs
push
decl
out
lret
movsl
cmpsl
xchg
fistpll
adc
fdivrs
add
cmp
jo
lahf
pop
sub
ret
mov
out
push
adc
cld
incl
std
lret
mov
jge
daa
andb
dec
push
cwtl
push
jmp
and
push
ljmp
push
nop
adc
inc
pop
mov
mov
clc
dec
add
inc
in
outsb
and
rclb
xchg
add
pop
incl
or
es
push
sarb
mov
push
or
out
and
decl
sbb
in
clc
and
jns
jnp
std
in
xlat
mov
dec
cmp
pop
dec
arpl
and
filds
loop
push
or
aad
cmp
mov
pop
jmp
xabort
jg
push
arpl
sarb
pop
xor
pusha
into
sub
outsb
xchg
fwait
shr
xchg
sub
incl
add
dec
xchg
add
sar
rcr
inc
adc
flds
and
add
fmuls
jae
insb
cwtl
push
test
jg
mulb
shlb
mov
and
push
fbstp
sub
mov
js
incl
loop
enter
xor
int3
mov
lahf
xor
jmp
out
stc
lret
int3
sbb
pop
cltd
testl
mov
cmc
sti
sar
loop
push
sbb
testb
std
inc
gs
or
push
xorl
lcall
call
mulb
fcos
fs
sbb
incl
cli
ret
adc
jbe
inc
add
mov
push
addr16
das
or
jae
mov
and
mov
mov
xchg
cmc
or
xor
mov
aaa
cld
jmp
pop
test
pop
lds
ss
jl
inc
ffreep
lret
push
dec
icebp
and
sub
hlt
inc
cmpb
sub
jno
cmpsb
adc
shr
xchg
or
mov
xchg
sbb
leave
xchg
outsb
cmp
xchg
cmp
push
scas
pop
sti
popa
je
xchg
jecxz
fistpl
jae
fldcw
call
mov
mov
mov
cmp
sahf
pop
out
outsl
loopne
incl
dec
sbb
jbe
addr16
mov
cld
lock
scas
cld
push
insl
inc
push
scas
lock
into
test
pushl
lahf
pop
push
jnp
in
cmp
and
push
in
pop
js,pn
arpl
xchg
lret
ljmp
lea
les
lods
iret
lahf
lahf
xchg
subl
repnz
sub
call
test
out
jg
push
stc
cwtl
sbb
ljmp
adc
sub
xlat
inc
lock
pop
outsb
bnd
test
and
jmp
xchg
mov
mov
lds
dec
call
add
push
or
dec
pop
inc
mov
mov
pop
les
imul
aad
sbb
aaa
mov
xchg
dec
and
push
push
lret
push
fdivrp
sti
jl
lret
into
jo
pop
jo
popl
add
les
mov
jmp
xchg
xor
flds
ljmp
mov
mov
xlat
dec
cmp
and
jb
xchg
adc
mov
pushf
lret
fs
ljmp
ret
jp
sub
inc
sub
push
sub
fists
mov
push
inc
jo
call
in
fsin
mov
in
leave
aas
cltd
cltd
jmp
popf
lods
jg
popa
testb
push
testb
aaa
test
out
jmp
int
pushl
ljmp
jns
sbb
jns
test
sbb
or
in
nop
js
fdivrp
jmp
test
in
mov
dec
jbe
shlb
call
sbbb
xchg
cmpsl
pop
call
pushf
dec
adc
fwait
int
mov
xchg
sbb
add
decl
cld
mov
xor
xchg
incb
pop
mov
std
adc
cmc
jbe
stc
xor
test
mov
jbe
xor
dec
lock
decl
lahf
sbb
mov
test
lock
adc
add
rorl
mov
mov
adc
sub
mov
fs
jnp
push
int
jmp
jg
pushl
pop
sbb
xchg
lods
lret
filds
pop
jecxz
or
rcrb
pop
pusha
shlb
call
addr16
or
aaa
or
or
xor
cmp
push
movsl
ds
fcos
push
mov
xchg
add
dec
pop
testb
dec
inc
data16
in
cwtl
pop
xor
and
mov
iret
mov
jecxz
add
out
mov
dec
and
sub
bound
das
inc
xchg
mov
mov
sub
add
xchg
inc
inc
xchg
pop
lret
add
xchg
fmuls
add
test
fsubs
jl,pn
xor
icebp
xchg
shll
xchg
psubw
fcomip
stos
sbb
out
pop
out
decb
jne
mov
sbb
push
std
ljmp
xchg
stos
pop
xchg
cmc
pop
sbb
sbbl
stc
in
cmp
decl
push
adc
xchg
inc
push
pop
ja
mov
out
scas
in
dec
and
cmc
dec
das
xchg
sub
push
push
ret
jb
out
cmp
xorb
in
jmp
jnp
pop
xchg
dec
or
femms
push
aaa
add
jae
stos
incl
aas
inc
sub
xchg
pop
adc
cld
add
dec
fsubr
xor
xlat
insb
xchg
iret
mov
lcall
pop
xchg
out
mov
cvtps2pi
aam
cmp
ljmp
into
sub
call
das
xchg
fmull
in
mov
or
xlat
bound
into
xor
lds
decl
push
cmpsb
push
cmp
pop
mov
cmp
stos
sahf
ret
lds
call
cmp
or
enter
or
outsl
push
inc
and
or
dec
jecxz
fimull
lock
fcmove
lods
repnz
inc
vphadduwq
push
mov
lods
out
inc
jne
xchg
les
mov
call
jmp
sub
adc
pop
cmp
xor
repnz
or
dec
jmp
lock
negb
loop
pop
movl
push
push
mov
dec
roll
outsl
bound
pop
xor
mov
jnp
mov
loope
sub
iret
adc
pushl
scas
xchg
mov
jb
push
pusha
pop
dec
jmp
mov
lods
repz
pushf
rcr
repnz
push
cmpsb
lcall
nop
xchg
and
jp
xor
jg
loope
push
repnz
inc
and
pushl
out
xchg
jbe
xor
clc
mov
ret
ljmp
mov
mov
jmp
data16
in
push
jbe
jnp
lret
xor
ljmp
push
jle
push
xchg
fldt
and
leave
sub
xor
imul
or
add
cmp
cmp
mov
popl
and
mov
cld
dec
jl
rcrl
daa
jge
mov
lcall
popa
or
xchg
pop
movsb
mov
cmp
decl
add
incl
scas
xchg
add
ds
pop
sub
xchg
lea
xchg
sub
or
dec
pop
test
xchg
sub
bound
pop
sbb
test
hlt
jmp
out
inc
push
dec
lods
dec
fildl
sbb
adc
ljmp
mov
mov
aam
arpl
xchg
push
cmc
mov
insb
inc
iret
orl
add
pushl
jb
dec
pop
int
lret
gs
xchg
icebp
iret
add
mov
icebp
std
outsb
aam
sbb
inc
and
imul
in
lcall
lods
sti
push
mov
fdivrs
pushf
nop
loop
jmp
add
mov
ja
push
inc
sbb
stos
popf
jg
mov
pop
data16
mov
adc
fs
ljmp
xor
push
sbb
mov
icebp
lret
inc
rcrb
push
fmuls
jne
sbb
jno
add
clc
lock
lahf
pop
sti
and
frstor
hlt
aaa
fprem
cmp
inc
or
lds
ljmp
cmp
mov
pop
sbb
mov
incb
incl
jae
mov
push
xchg
les
dec
mov
loop
adc
lods
fs
pop
xchg
xchg
and
cld
jmp
adc
cmpsb
mov
cmpsb
into
fidivs
sti
pop
les
roll
addr16
pop
fs
lods
pop
mov
clc
push
call
mov
ror
jecxz
dec
and
test
mov
fsub
out
in
fsts
sub
ljmp
and
and
jb
jns
cmp
hlt
add
sub
mov
ljmp
popl
mov
fisttps
orps
repnz
dec
push
push
pop
lock
mov
push
sbb
xchg
push
jns
xchg
ja
ljmp
jle
pop
cmc
inc
add
and
mov
repnz
push
sbb
xlat
fbstp
push
pop
adc
inc
xor
cwtl
pop
sub
fildll
or
sbb
aaa
jecxz
popf
aam
mov
adc
ljmp
popl
aas
mov
mov
xor
pop
iret
roll
inc
sub
out
push
ret
jle
jno
or
cmp
es
je
adc
ror
jo
xchg
lods
call
icebp
inc
jns
filds
adc
lods
mov
mov
js
fidivrl
stos
addl
divl
and
xchg
fwait
test
xor
incb
and
add
sub
lret
fmuls
jecxz
add
aas
mov
jge
dec
repz
mov
mov
or
call
sub
test
mov
mov
stos
les
mov
inc
mov
test
mov
lret
cltd
cmp
sbb
int
mov
cmp
rcrb
dec
pop
mov
dec
xchg
shlb
mov
sbb
sub
mov
lock
and
aas
jle
lcall
sbb
es
mov
push
lahf
ljmp
inc
or
mov
iret
sti
test
or
rcrl
mov
cmp
cli
dec
les
mov
fs
fisubs
call
adc
cld
pop
lock
mov
mov
pop
adc
jg
xchg
cmpsl
out
dec
popf
out
repnz
les
jg
mov
lock
in
adc
call
stos
pop
cmp
daa
jmp
dec
cmp
out
nop
cmp
cmpsl
loopne
ss
xor
mov
sbb
pusha
inc
and
movsl
shrb
jl
int3
cmpsl
mov
sbb
and
cmp
aaa
mov
fidivs
stos
adc
push
pushl
mov
jge
in
jmp
testb
lock
loop
push
pop
push
cmp
cmp
outsl
or
test
cmpsl
decl
lcall
sti
add
mov
and
sub
sti
mov
pop
std
pop
hlt
jmp
repnz
aas
sub
idiv
xchg
incl
mov
push
jmp
test
out
pop
aas
push
ljmp
clc
out
xchg
cmp
and
out
out
test
je
ja
test
jmp
lret
and
xor
xchg
jno
test
fldenv
sub
jl
xor
xchg
cmpsl
mov
stc
incl
insl
mov
and
or
pop
dec
test
insb
in
divb
mov
sbb
pop
ret
rclb
stc
rorl
icebp
jg
loop
mov
andl
lock
decl
out
xor
sarb
mov
mov
mov
ret
push
pop
xchg
ljmp
inc
xor
popa
outsl
or
in
pop
mov
xlat
xorb
xchg
decl
test
sahf
sbb
jge
sub
add
or
jnp
pushl
mov
repz
fmuls
mov
xchg
lret
inc
das
lret
jp
jb
out
aad
sbb
lcall
jne
imul
mov
pop
mov
jp
gs
inc
negb
xor
incl
sub
outsl
mov
jb
lock
jecxz
adc
jg
jmp
insl
pop
mov
mov
pop
in
lahf
mov
int3
xor
pop
loopne
imull
push
sbb
rclb
in
push
lcall
clc
lcall
mov
pop
roll
xor
pop
imul
cltd
mov
pushl
call
mov
mov
jo
sbb
push
jl
cmp
cmp
fwait
dec
fs
shll
mov
add
out
dec
outsl
xchg
push
adc
add
ljmp
int
jns
mov
in
pop
or
mov
push
ret
imul
cmp
popf
pop
pushf
cmp
decb
cmp
shrl
out
sub
daa
inc
sti
push
xchg
xor
sbb
gs
repnz
decl
not
arpl
push
lret
std
imull
mov
cmp
mov
pop
jns
xchg
and
ljmp
cmc
adc
movsl
sbb
inc
lret
pop
cmpsb
rorl
rol
loop
test
stc
jb
hlt
lcall
sbb
imul
out
andl
mov
sub
icebp
dec
cs
cmp
arpl
cmc
xchg
scas
jg
movsb
xchg
mov
inc
jl
and
sarb
push
clc
outsl
jo
push
icebp
push
sbb
jmp
dec
sti
pusha
lret
notb
adc
leave
push
adc
pushf
mov
jno
and
fisttpl
fistpll
call
mov
xchg
out
into
xchg
push
xor
in
pop
xor
xor
add
mov
push
push
mov
mov
outsb
xor
push
xor
out
imul
mov
scas
ljmp
jbe
outsb
push
lods
fcmovnb
add
lahf
pop
in
arpl
inc
rep
popf
test
dec
dec
jl
insl
mov
les
mov
ja
pushl
aaa
push
sub
sub
mov
lret
jg
lock
mov
stc
mov
ss
fildl
push
jnp
cmp
stos
adcl
cltd
add
addr16
or
push
mov
xchg
adcb
rcrb
loopne
loope
rcrb
incl
mov
sbbl
in
lock
mov
dec
sub
shll
jp
sub
mov
aaa
rclb
cmp
mov
jg
pushl
adc
mov
js
hlt
dec
rcll
lcall
pushl
add
dec
push
mov
dec
subb
ljmp
fnstenv
imul
repz
rcrb
daa
mov
lock
cmp
loop
cmp
sub
jmp
arpl
divl
data16
out
scas
pop
shll
pop
mov
loope
xor
decl
fsub
and
test
aas
je
push
outsb
testb
push
mov
shr
icebp
and
add
cmpsl
mov
pusha
pop
cmp
ja
sbb
dec
add
in
mov
adc
jg
xchg
cmovl
stos
cli
and
les
mov
and
xor
jmp
insb
std
lret
lods
dec
push
sub
hlt
jmp
stc
cmovle
mov
cld
inc
cld
inc
lret
orb
and
stos
sbb
jnp
lret
and
shll
popa
pushf
dec
mov
ds
out
imul
lods
lock
loope
mov
sub
sbb
cmp
ficompl
xor
clc
jmp
mov
lods
pop
in
mov
popw
jge
mov
mov
ljmp
nop
lahf
gs
pushl
imul
in
rcrb
jb
pushf
lock
push
addr16
push
push
insb
jo,pt
ljmp
inc
push
cltd
mov
add
push
push
adcb
cs
or
cwtl
adc
jp
clc
in
inc
lret
adcb
stc
int3
mov
fwait
mov
pop
iret
cmp
jg
stc
aas
cltd
movd
cmpsb
daa
add
inc
lahf
mov
mov
lcall
and
cli
pop
add
adc
cmp
in
sub
fidivrs
cmp
push
imul
adc
inc
lods
rorb
mov
out
sub
xor
fsubl
jmp
lret
in
jp
fdivs
pop
or
sub
es
inc
jmp
lock
lahf
jno,pn
inc
jle
pop
jmp
sti
call
sbb
adc
movb
sarb
cmc
xchg
decl
mov
pop
fsub
mov
push
mov
aad
ja
repz
cmpsb
sub
jmp
test
je
es
and
cld
and
mov
mov
sub
repz
cmp
mov
xchg
dec
data16
aam
jge
cmovg
jno
mov
stos
pop
cmp
stos
sbb
jns
lcall
jp
push
dec
inc
mov
int3
cs
sub
out
dec
pop
sub
aam
hlt
clc
insb
mov
data16
stos
mov
fsubrp
out
sub
mov
sbb
add
push
cmpl
jg
dec
or
xlat
xchg
outsl
into
sbb
lcall
outsb
push
push
cmpsb
outsl
in
adc
test
push
add
jp
mov
dec
js
push
mov
in
stos
jb
jmp
leave
outsl
fdivrs
out
or
pop
dec
dec
ja
das
push
js
mov
std
loopne
mov
jge
lahf
nop
jbe
lahf
xchg
ljmp
shl
mov
out
push
aaa
lret
add
pop
jo
mov
xor
mov
call
cld
add
rcl
xor
add
into
push
in
pop
and
push
xlat
unpckhps
gs
ljmp
std
and
jg
push
dec
inc
mov
ret
movsl
aas
repnz
cmpsb
adc
int
lods
call
lds
xchg
in
fcmovnbe
pushf
mov
inc
scas
cltd
loopne
adcb
sbb
xchg
outsb
pushf
out
ljmp
test
sti
repnz
xor
out
pop
and
or
outsb
fdivp
push
adc
incl
in
in
adc
cmp
xchg
movsb
int
lock
call
mull
pushf
int3
xchg
mov
ror
xor
rcr
push
sbb
dec
jle
mov
lcall
loop
jg
pop
das
imull
inc
lods
int
aam
mov
pop
mov
add
pop
popf
dec
out
addr16
push
sub
xchg
push
push
out
inc
cmp
dec
mov
cmc
ljmp
pop
hlt
xor
ret
nop
adc
decl
lret
jmp
ret
mov
cwtl
sbb
je
pop
xchg
add
stos
movsl
fst
push
add
fdivrs
clc
xor
in
mov
and
fidivs
dec
call
inc
popf
sub
cmpsb
pop
xor
cmp
and
or
jg
mov
dec
lock
sub
outsb
xchg
and
push
xlat
pop
cmpsb
andl
push
test
test
dec
or
xorb
mov
aam
push
push
je
insb
ss
aam
test
incl
aas
lock
dec
enter
lds
insl
adc
and
jmp
push
ljmp
jge
pushf
sbb
jecxz
cltd
fildll
daa
jbe
mov
insb
xchg
adcl
inc
ljmp
mov
pop
pop
and
jmp
adc
dec
in
adc
mov
dec
xchg
loop
shll
pop
aam
jmp
repnz
iret
call
xchg
popf
mov
push
jnp
fs
push
jne
adc
jmp
pusha
xor
xchg
or
xchg
data16
in
faddl
sbb
add
mov
cli
outsl
cli
add
push
fiadds
jmp
call
call
icebp
adc
add
stos
lods
lods
jp
lock
and
mov
arpl
jmp
clc
push
add
and
mov
fst
pop
fwait
add
cmp
push
ljmp
scas
and
sbb
or
xor
xchg
clc
aas
nop
pop
pop
sti
test
lds
and
decl
sbb
movsl
mov
pop
ret
jne
aad
jmp
adc
ljmp
jb
mov
pop
add
jo
stos
int3
cmp
incl
ljmp
mov
imul
movsl
iret
int3
push
negb
push
inc
adc
test
mov
dec
imul
or
lods
mov
lcall
push
jp
mov
lcall
push
icebp
cmp
xchg
insl
stc
mov
mov
xchg
cmp
jo
sub
aaa
in
pop
jmp
ljmp
out
loope
cld
jbe
xlat
lret
cmp
test
jg
insb
mov
leave
cwtl
mov
movsb
mov
inc
iret
popa
xchg
mov
xchg
ror
out
les
and
lahf
es
mov
mov
fiaddl
incl
mulb
ljmp
dec
bound
cs
mov
std
daa
arpl
xlat
pop
xchg
fwait
and
adc
adc
jge
and
xor
gs
mov
es
or
fcomip
jo
pop
cmc
into
inc
clc
inc
sbb
insb
mov
mov
mov
rorl
fsts
sbb
icebp
adc
test
sbb
jns
push
fcmovnb
xchg
xchg
mov
mov
jg
sbb
add
cmpsl
mov
jne
test
mov
push
cmc
clc
mov
mov
ret
sbb
mov
shll
popf
test
lcall
rcr
and
sub
fldt
lods
push
cmp
shl
ja
ret
cmp
inc
xor
mov
sub
cmp
roll
add
ret
lods
lock
jmp
pop
pop
jb
mov
jle
into
xor
int
jbe
clc
aad
push
adc
inc
cld
add
repz
in
lret
lahf
stc
enter
push
ret
or
sub
popf
push
sub
in
mov
ficoml
loop
pop
lcall
ljmp
lcall
ret
push
into
scas
cltd
dec
and
lret
cmpsb
incl
xchg
pop
scas
lcall
fs
push
and
stos
outsl
jg
dec
popf
pop
fildll
dec
push
push
dec
into
lds
push
pop
hlt
jg
or
adc
lcall
push
insb
mov
repz
stos
hlt
call
cwtl
repnz
dec
fsubrs
sub
std
out
insb
js
mov
and
pop
out
xchg
jge
clc
out
lods
fstpl
rclb
jmp
mov
adc
sub
jmp
and
pop
jnp
pushl
or
ljmp
or
cmp
dec
std
test
test
jge
insb
incl
jo
idivb
push
pushf
adc
lods
mov
or
push
ljmp
lcall
jge
mov
int3
jecxz
mov
jnp
xor
jp
mov
jmp
fwait
scas
imul
mov
and
fdiv
and
or
and
xor
xor
out
cli
mov
sbb
mov
cli
xor
stos
push
enter
aam
sub
aad
or
adc
sbb
and
imul
fiaddl
movsl
ret
mov
mov
scas
fisubrs
decl
jbe
loope
out
push
mov
or
ljmp
mov
sub
ror
mov
cld
jmp
pop
push
hlt
xchg
and
adc
or
imulb
clc
mov
fwait
adc
xchg
scas
bound
push
mov
and
lcall
push
mov
pop
sub
add
out
mov
ja
fistps
test
and
fbld
jno
sarl
fdivrp
lcall
sub
ja
jne
int3
jecxz
mov
and
jne
mov
push
idiv
and
fdiv
fstps
and
out
sub
stc
insb
fstpl
jmp
mov
aad
push
dec
sbb
data16
push
sub
loop
shrl
loop
dec
insl
ljmp
lahf
pop
enter
fstpt
in
sub
push
shrl
pop
mov
incl
pop
cmc
xchg
in
and
movsl
mulb
cli
mov
lret
fstpt
loop
xor
fisubs
incl
inc
cwtl
or
jecxz
sbb
xchg
pop
cmp
dec
add
dec
adc
xchg
xor
mov
ja
fwait
or
movsb
fsubrs
decl
imul
fimuls
addr16
mov
test
mov
mov
cmp
ds
repnz
cli
and
xchg
mov
nop
in
push
shlb
dec
lahf
lods
fidivrl
fldcw
daa
fisubl
mov
add
cmp
mov
cmp
xchg
loopne
mov
mov
call
pop
pop
and
fmul
push
or
mov
cmp
rol
cli
icebp
push
cmpsb
cld
mov
and
ljmp
movsb
xchg
aaa
pusha
push
sahf
movsl
push
call
mov
clc
pop
lock
shlb
pop
push
bound
jl
es
sub
dec
jae
iret
add
cmp
decl
pop
fs
daa
cmp
cwtl
insb
cmp
push
rcll
jae
mov
scas
ljmp
pop
pop
jns
fdivrs
hlt
cmpsl
mov
pop
dec
jge
xchg
mov
dec
cli
jg
out
pop
push
fdivrs
adc
iret
imul
es
inc
jns
push
and
ljmp
mov
int
sti
ljmp
cmp
pushl
mov
and
sahf
cmovnp
popf
orb
and
ljmp
and
mov
imull
cs
out
ret
and
in
sbb
xchg
cld
sub
jg
bound
xor
bound
mov
aaa
sbb
and
call
outsb
push
ret
sbb
inc
test
out
clc
call
dec
clc
mov
or
lahf
repz
loop
mov
in
push
dec
decl
lcall
rcrl
cltd
sbb
sub
iret
aas
xor
push
dec
cltd
and
popf
ret
clc
pushl
sbb
jp
push
dec
xor
and
nop
xor
pop
incl
inc
jp
cmp
scas
push
sub
lret
in
pop
aam
inc
push
cwtl
dec
xchg
fildll
stc
jno
mov
icebp
test
fmuls
out
and
shl
sbb
pop
icebp
and
test
xchg
stc
xrelease
jmp
lds
call
mov
testb
mov
cmc
jnp
lds
fistpl
mov
mov
imul
mov
xor
pop
aaa
mov
adc
fnsave
ret
jmp
xor
push
mov
idivb
cltd
push
scas
dec
out
mov
in
sbb
adc
jb
call
push
pusha
in
lret
stos
cmp
sbb
jno
mov
inc
pop
mov
mov
push
std
ljmp
cli
movsb
mov
frstor
fnstcw
out
jle
or
xor
mov
lock
xor
sub
cmp
adc
or
cmc
test
out
add
hlt
outsl
cli
incl
decl
inc
aam
insb
aad
hlt
psllw
nop
scas
push
fprem1
and
lcall
push
sbb
push
mov
popf
hlt
in
bnd
xchg
sti
addl
pop
addr16
sub
fwait
xchg
ret
xor
push
sbb
or
mov
hlt
or
repz
cmpsl
fcoms
mov
imul
jg
lods
inc
lds
test
rcrb
incl
into
fstps
mov
dec
bound
cmp
or
xchg
and
int
lods
jmp
push
push
out
test
xchg
inc
in
les
in
or
mov
mov
sbb
jg
incl
ja
les
jp
cmc
xchg
dec
stos
cwtl
arpl
push
inc
sub
pushl
std
xor
mov
call
mov
adc
inc
xchg
mov
lret
decl
inc
icebp
inc
sub
mov
enter
xchg
cli
add
push
xor
mov
jg
ret
cmpsb
hlt
insl
xor
ljmp
adc
in
loopne
call
insb
inc
sbb
testb
dec
loopne
pop
sub
mov
push
mov
mov
adc
mov
icebp
xor
cli
jmp
into
push
mov
or
mov
aas
jle
inc
repz
xchg
andb
inc
sub
dec
lcall
sti
jl
adc
push
enter
out
jne
mov
add
pop
push
std
inc
mov
mov
pop
and
vmovntps
jbe
scas
xlat
setne
sbb
ds
in
mov
ret
inc
xor
jg
and
lods
aam
pop
xor
xchg
xchg
loop
or
push
xor
jmp
cs
in
fstl
or
xchg
test
fcompl
fnsave
inc
inc
out
clc
jo
mov
ja
xchg
or
inc
inc
test
pop
mov
daa
stc
add
loope
das
clc
pop
rorl
dec
xor
hlt
cwtl
daa
gs
mov
lcall
mov
in
mov
in
xor
xchg
fwait
sub
jecxz
das
jmp
xlat
jae
pusha
xor
cltd
fistps
xor
sub
jge
push
enter
or
in
adc
xorb
cltd
mov
mov
decl
jnp
testl
mov
xchg
js
test
dec
sahf
pushf
mov
pop
mov
leave
xor
dec
push
fsubrl
dec
mov
cmp
xchg
into
pop
xlat
call
aas
dec
jbe
push
cld
lods
xchg
inc
pop
das
fmull
xor
repnz
and
jg
xor
ret
iret
stc
fidivs
test
mov
sbb
adc
addr16
push
adc
jmp
enter
lea
mov
mov
adc
mov
and
sub
fmull
outsb
rcl
fidivrs
ds
aas
sbb
jg
cmc
sbb
push
adc
sbb
std
ds
sbb
js
loope
fwait
add
jl
add
decl
ficompl
sbb
xor
fwait
loopne
dec
andb
dec
mov
shlb
jne
cmpb
popa
and
mov
sbb
jmp
rol
add
pop
in
sub
mov
ret
inc
and
sbb
lcall
add
xchg
aam
arpl
outsb
add
sbb
hlt
dec
mov
add
aam
call
mov
addr16
jmp
mov
jg
outsl
add
jnp
ljmp
fmuls
lcall
add
xchg
pop
and
pop
xchg
cld
fbstp
nop
mov
xlat
aas
push
test
sbb
jg
add
insb
xorl
add
loop
mov
adc
pop
mov
push
sbb
in
lahf
push
jg
incl
sti
mov
cltd
pusha
xor
out
decl
jmp
das
pop
cli
arpl
insl
andb
sbb
inc
arpl
sbb
push
adc
mov
in
adc
rcll
cmp
mov
mov
fucomp
push
movl
mov
aas
ja
cmp
mov
lret
loop
orb
nop
mov
pushl
test
into
jno
push
sub
divb
sbb
int3
sahf
dec
clc
and
shll
test
add
push
das
aad
push
out
cmp
shl
inc
add
js
das
mov
mov
sub
dec
loope
shl
je
xchg
in
fisttps
cmp
xorl
mov
or
mov
fisubrl
arpl
gs
jae
nop
pop
mov
fadds
cmp
aam
lret
cmp
decl
adc
jge
sub
js
adc
sub
pop
xorb
pop
test
out
dec
aas
add
mov
ljmp
jae
notb
xor
ljmp
loope
inc
popf
mov
scas
in
cmp
orb
ss
mov
fs
xchg
adc
dec
or
pop
and
sbb
sbb
adc
sub
arpl
jg
mov
clc
arpl
les
cs
int3
addb
mov
test
add
lcall
sub
and
out
sub
in
outsb
fistpll
pop
and
or
fdivr
call
cmp
push
push
lahf
iret
test
hlt
aad
movb
adc
jo
add
lods
std
call
cld
sbb
mov
ja
mov
dec
cmpsb
mov
loopne
fsubs
shlb
dec
or
call
addr16
xor
and
aaa
xchg
loope
sbb
out
std
fsubs
decb
and
pop
adc
mov
push
fnsave
and
test
jno
sbb
aad
lcall
pop
cmpsl
int
add
dec
add
sub
shlb
in
mov
outsl
incl
cmp
les
push
roll
mov
ljmp
mov
ret
nop
pop
push
js
xor
add
sar
cmp
lahf
in
test
sbb
pusha
scas
mov
stos
inc
out
jno
mov
lock
inc
pop
sub
sti
test
xchg
sub
es
cmpsl
decl
cwtl
outsl
mov
fsubl
jle
fistl
in
push
dec
cmp
mov
jmp
jmp
sub
xor
xor
jmp
dec
repnz
stos
jmp
push
xchg
loop
gs
jg
cmp
repz
cmp
dec
add
lods
imul
fcmove
out
movsb
sub
ficoms
add
insb
mov
pushf
mov
sub
cwtl
jmp
pop
and
mov
push
inc
mov
ljmp
jnp
cmp
std
jle
mov
enter
sbb
mov
insb
jnp
movsl
ret
pop
inc
push
roll
add
dec
mov
fsubrs
std
push
faddp
je
push
shll
icebp
mov
adc
rcrb
icebp
cmp
sbb
ljmp
jmp
test
mov
orb
in
and
outsl
fildl
enter
fcomip
jnp
mov
enter
int3
mov
push
sub
inc
mov
mov
dec
dec
and
cltd
jne
mov
and
or
xchg
inc
shrb
inc
xlat
adc
jge
jecxz
ds
sar
pop
out
inc
decl
test
rcrl
jmp
sbb
cmp
mov
lods
adc
int
decl
mov
jp
sbb
mov
xor
movb
or
cltd
inc
outsb
out
clc
outsl
jle
bound
repz
pop
rcr
imul
mov
push
sbbl
arpl
frstor
xchg
sbb
leave
pop
cmpsb
dec
dec
xchg
jnp
mov
mov
rorl
push
xchg
mov
fwait
loope
outsb
rorl
decl
push
xor
iret
mov
jp
addl
sbb
cmpsb
sahf
jg
ljmp
stc
mov
outsb
mov
sub
mov
idiv
dec
sub
jnp
outsb
lcall
outsl
add
rcrb
or
adc
dec
outsb
call
sbb
in
enter
dec
jl
dec
mov
sub
sub
aad
xchg
sti
or
jl
decl
sub
cmp
or
jnp
jns
pushf
scas
mov
ja
repnz
bound
ljmp
push
cmp
mov
test
jg
jmp
push
mov
insb
lock
scas
sub
xchg
jle
adc
movb
std
inc
dec
dec
or
push
lcall
mov
lds
push
mov
movsl
popf
adc
ljmp
sub
roll
sub
jnp
jge
fwait
addr16
xchg
add
decl
lock
fnsave
es
sbb
fisttps
stc
jmp
xor
aad
les
push
and
popa
orb
pusha
add
jmp
leave
dec
dec
outsl
inc
enter
jge
mov
enter
mov
adc
or
sbb
push
sar
decl
mov
pause
movsb
jp
pop
rcll
insl
inc
jg
fnsave
cmc
jg
and
cmc
pop
push
xor
int3
fisttps
decl
xor
adc
hlt
sub
lcall
mov
and
mov
xor
fstl
fdivs
loop
xchg
jnp
or
cmp
lcall
mov
inc
mov
int
loopne
insb
pop
cmpsl
xchg
imul
ja
push
cmpsb
lcall
mov
adc
imul
mov
sahf
dec
jmp
dec
fidivrs
dec
es
sbb
sbb
mov
addl
cli
cmp
notl
ds
mov
sbb
int3
push
sbb
sbb
sbb
or
cmp
fwait
add
mov
fcomip
cmp
push
push
mov
inc
xchg
out
dec
orl
or
clc
ljmp
dec
add
adc
insb
test
sub
push
ja
jae
push
leave
mov
fs
mov
arpl
sbb
mov
scas
in
fsubl
adc
pusha
push
ljmp
rcrb
add
mov
xorl
out
lea
es
pop
mov
jae
aaa
pop
cltd
in
mov
push
std
adc
mov
cwtl
pusha
test
sahf
addr16
mov
loopne
jg
cmpsl
sbb
or
pushf
xchg
push
movsl
and
popa
inc
das
sbb
ljmp
mov
push
push
fldenv
mov
lret
xchg
or
lcall
push
iret
movsb
aad
mov
push
hlt
je
in
mov
push
pushl
ljmp
lret
test
jb
jne
sbb
sbb
mov
xchg
jmp
mov
loopne
push
pop
inc
stos
int
jp
jbe
cmc
das
cmp
fisubrs
mov
mov
push
cmp
sub
inc
xor
mov
and
call
scas
xlat
int
mov
push
ret
std
ljmp
sbb
cmp
aaa
cmp
mov
cmp
movsl
cmp
pushl
rep
call
mov
push
outsl
ds
push
xor
in
loopne
fstpl
xchg
in
inc
mov
test
mov
stos
enter
arpl
test
outsl
test
push
pop
decl
loopne
es
add
or
mov
div
xchg
test
ss
int3
rorl
cld
lcall
and
cwtl
jecxz
popa
jne
cmp
or
xchg
mov
lahf
cmp
ljmp
incl
pop
push
and
in
stos
sbbb
test
scas
lds
enter
cltd
pushl
xchg
std
mov
pop
stos
mov
jne
js
les
loope
adc
xor
lcall
repnz
in
push
mov
aam
add
sub
sbb
sti
dec
push
movsl
push
push
ss
push
mov
inc
pop
add
xlat
cmpsl
mov
decl
cli
cs
jp
decb
loope
mov
div
loope
mov
xchg
repnz
ljmp
lods
xchg
aas
jmp
push
mov
dec
pop
dec
loop
loop
int3
test
movsb
pop
jp
leave
mov
mov
or
call
out
popa
mov
cmp
mov
inc
scas
loopne
add
add
popl
jl
jge
sub
loop
pop
inc
cmp
add
inc
or
xorl
aas
adc
cli
ljmp
sbb
daa
pop
push
or
push
add
mov
pop
xchg
pushf
lock
or
or
daa
shr
dec
xchg
lcall
movsl
je
xchg
scas
cli
inc
lods
fildl
mov
sub
dec
inc
dec
test
sti
mov
or
icebp
in
ljmp
jbe
lods
mov
decl
fstl
mov
out
cmpsb
pop
xchg
adc
jo
stc
or
fs
jmp
cmp
sub
inc
xor
xchg
adc
add
andb
ljmp
push
cld
cwtl
cli
or
xor
cmc
iret
jno
sbbb
jae
pop
add
add
sbb
call
ds
push
xor
mov
push
push
push
inc
push
sub
daa
cmp
rcr
sbb
pop
out
imul
and
sub
cld
jg
nop
add
jae
xchg
std
xor
in
in
cmc
xor
lods
push
incl
in
jle
repnz
jo
xor
cmpsl
adc
jg
pushl
cld
es
xchg
mov
add
pop
push
lcall
enter
out
clc
mov
or
push
out
mov
or
dec
push
movsl
sbb
lret
sbb
mov
arpl
xchg
mov
pop
add
jmp
adc
or
in
inc
jecxz
loop
and
jo
add
aas
jbe
jns
ljmp
pushl
add
inc
imul
mov
pop
add
lcall
pusha
ja
scas
sbb
in
mov
in
xchg
lret
adc
pop
add
mov
xchg
push
dec
fiadds
cmp
adc
fildll
call
cmpsl
hlt
push
jbe
out
and
testl
xor
incl
xlat
push
add
inc
adc
cmpsl
mov
test
pop
aam
jb
or
insb
pop
call
pusha
gs
cld
mov
cmp
pop
adc
lods
out
inc
push
cmp
sbb
jbe
inc
pop
bound
mov
or
jle
imul
mov
sti
nop
pop
sub
pop
pop
jge
sbb
push
jecxz
call
jl
scas
cmpsl
inc
jl
outsl
repz
pop
pop
mov
cld
ljmp
and
mov
pop
jmp
mov
xchg
and
cmp
addr16
loopne
pushf
out
lock
test
mov
rorb
add
mov
fcoms
xchg
das
mulb
pusha
jmp
and
insl
cwtl
xchg
push
int3
ljmp
call
inc
icebp
mov
shlb
lret
and
mov
sar
push
pop
iret
loop
in
pushl
and
pop
push
js
test
xchg
sbb
ja
push
cmp
dec
mov
sub
cmp
incb
stos
jg
pushf
es
mov
mov
lcall
mov
fs
test
movsl
dec
xchg
sbb
mov
rcll
adc
fs
lcall
or
in
mov
stc
add
pushf
inc
bound
mov
cmc
scas
mov
add
inc
ljmp
sub
adc
cs
test
clc
lcall
sub
jns
gs
jb
inc
outsb
inc
dec
in
sahf
repz
test
lret
push
std
jle
mov
dec
cmp
xor
cmpsb
mov
loope
or
call
mov
push
fs
in
mov
mov
push
cmc
jp
add
pop
mov
das
mov
pop
add
mov
fwait
xor
jmp
das
pop
daa
jo
push
les
jmp
dec
and
insl
fldt
pop
mov
and
lds
arpl
adc
sbb
mov
lds
adc
es
jmp
xor
push
lea
cmp
loop
bound
mov
jge
push
xchg
fiadds
jmp
movaps
test
sub
in
les
and
add
cld
clc
std
int3
int
dec
decb
cltd
xchg
mov
in
enter
mov
xchg
out
pop
jmp
jecxz
jle
xor
fwait
inc
aas
out
xchg
je
lahf
fldcw
jne
pop
lahf
outsb
inc
mov
addr16
hlt
pop
fstpt
test
dec
jbe
add
and
push
gs
jmp
xor
xchg
inc
jb
std
pop
rcrb
fadds
mov
inc
pop
mov
cmpsb
and
movsb
call
mov
insl
xor
fadd
filds
shr
jg
xor
inc
enter
inc
add
adc
lock
rcrb
jecxz
aaa
cmp
dec
incl
adc
cmp
mov
cmpb
jns
ljmp
jecxz
test
je
cs
cmp
sub
mov
or
out
jns
lcall
cmp
fcompl
jg
dec
out
inc
dec
out
push
inc
and
clc
xlat
inc
pop
into
ljmp
dec
or
push
pushf
movsl
mov
add
adcb
or
int3
mov
stos
push
out
mul
ret
fdivrs
hlt
hlt
push
std
jmp
inc
pop
pop
push
dec
decb
stos
dec
jnp
mov
fs
mov
shrl
mov
call
inc
fadd
pop
roll
stos
adc
sbb
push
cmc
insb
inc
rolb
pushl
pop
sub
js
xor
dec
faddl
lcall
loopne
sbb
pop
cld
incl
mov
cmp
fsubr
jmp
out
fiaddl
sub
push
fdivr
mov
ds
int3
stos
xor
push
adcb
popf
push
test
pop
and
into
stos
incl
or
cmpl
stos
jg
xlat
cmp
and
je
dec
sbb
sarb
push
test
mov
int
sbb
ljmp
jmp
xor
out
fisttps
xor
lock
js
mov
and
fwait
ljmp
ret
jmp
in
arpl
loopne
dec
dec
nop
mov
sbbb
ljmp
stos
push
dec
jg
test
pop
ret
shrl
or
mov
sub
inc
add
mov
subb
stos
cld
mov
clc
addr16
decb
aaa
add
mov
pushl
inc
es
mov
or
das
test
jns
clc
cld
ret
push
add
fisubrs
mov
pop
cmp
jb
enter
les
push
dec
and
push
imul
sarb
flds
addl
or
pop
inc
inc
mov
dec
xchg
cmp
fcomip
ljmp
push
and
cmp
sahf
int3
xor
scas
scas
xlat
push
jmp
sbb
xor
jmp
movsb
scas
xor
cli
je
out
pmaxub
mov
xor
imul
push
insb
lcall
out
aas
js
mov
pop
imul
leave
mov
pop
pusha
lods
or
loop
jbe
lcall
inc
arpl
pop
dec
adc
enter
sar
movsb
call
jl
adc
call
sub
cmp
pop
data16
adc
les
dec
sbb
shrb
cli
lock
cmp
jl
cltd
sbb
aaa
roll
mov
xlat
pop
imul
std
lcall
or
loope
fcomi
je
cld
push
dec
or
jp
mov
test
push
mov
push
inc
jmp
cmpsl
fbstp
sti
or
adc
lcall
ljmp
adc
mov
adc
movsb
arpl
push
fmulp
pop
mov
ljmp
in
es
adc
or
mov
test
rcrb
cld
xchg
jae
or
and
inc
call
or
add
shlb
xchg
push
xlat
insb
lret
daa
lcall
xchg
lods
jno
out
cltd
xchg
lods
movsb
sub
pop
fldl
cmpsb
sbbl
push
dec
pop
inc
ja
lcall
push
test
mov
add
aaa
or
js
out
aas
movsb
into
add
decl
arpl
and
sub
loop
pop
subl
xor
sub
in
mov
fst
jnp
or
addr16
es
loopne
hlt
ljmp
pushl
sbb
dec
dec
sub
rcrb
sub
ret
xor
and
lcall
pop
xor
in
gs
inc
fs
mov
test
repnz
inc
lret
test
jmp
jae
ss
sar
enter
push
jnp
icebp
pop
and
cs
scas
test
nop
xchg
stos
scas
data16
inc
fcoml
and
ljmp
pushl
pop
popf
jae
clc
mov
adc
out
or
push
lahf
test
adc
inc
mov
rcrl
mov
add
mov
jle
and
lahf
arpl
mov
pop
pop
jmp
and
pop
call
dec
dec
adc
xor
or
leave
inc
adc
jle
dec
repnz
mov
stos
and
add
jg
sbb
mov
out
sbb
mov
jbe
mov
pusha
aas
scas
arpl
pop
and
pop
sti
xlat
inc
adc
mov
loopne
lret
les
sbb
aas
fsubs
enter
mov
lcall
ja
dec
xchg
in
push
and
adc
mov
sub
aad
sbb
sbb
popl
ret
dec
int3
adc
fwait
loop
into
or
or
ja
jnp
jae
arpl
mov
adc
jo
cmp
jmp
cmp
cmp
sarl
adcb
movsb
lahf
pop
xor
inc
lods
js
lahf
lds
idiv
test
pop
fs
sarl
aam
push
sbb
movsb
dec
sub
in
push
fsubl
outsb
fwait
clc
sub
scas
xor
xchg
lods
ss
insl
sub
pushl
sub
dec
sti
dec
pop
mov
imul
fistps
sub
ret
movsl
sbb
iret
int3
ret
cltd
std
mov
cmpsb
jl
in
mov
lcall
add
movsl
add
ret
mov
outsl
xchg
add
out
ljmp
clc
pushl
and
adc
jo
cltd
repnz
push
push
xor
fisttpl
imul
mov
scas
adc
mov
mov
shll
std
xchg
mov
clc
incl
ret
push
mov
aaa
inc
out
and
mov
fisubl
dec
mov
push
decl
jge
pop
addb
outsb
dec
fnstsw
jecxz
xchg
testl
sub
fadds
stos
sti
sbb
inc
mov
movsl
mov
rcrb
sti
pushl
xor
fiaddl
mov
and
xchg
cmpb
in
xorb
push
jg
hlt
fs
jmp
clc
icebp
out
stos
icebp
mov
ficoml
rorb
inc
pop
call
inc
ss
je
int
ja
pop
push
fs
bound
hlt
fsubrl
fisubrs
pushf
ror
or
std
push
push
jns
loope
icebp
insb
or
xchg
sbb
inc
cmc
movl
cli
lcall
pushf
adc
sub
jae
cltd
mov
inc
mov
and
add
int3
push
sub
imul
pop
sub
push
jl
jle
or
mov
mov
cmp
stc
jle
xchg
xor
sbb
int
imul
test
insb
mov
xchg
ljmp
fbld
push
pop
cwtl
inc
lds
mov
aaa
mov
mov
cmpsb
incl
jg
adc
jle
nop
pop
gs
cld
sbb
inc
shr
sbb
sub
cli
ss
ret
dec
dec
jnp
out
fistpll
aam
incl
outsl
xor
sub
fisttpll
add
adc
cmp
incl
fwait
in
dec
mov
aam
cmp
sahf
mov
mov
js
test
out
push
mov
out
inc
push
in
push
sbb
in
lret
jecxz
js
cli
rorb
jnp
cmpsl
or
pusha
push
nop
push
cli
cmp
push
dec
or
mov
and
cmp
adc
jae
ljmp
movsb
or
mov
adc
mov
mov
bound
mov
in
sub
sub
movsb
xchg
mov
ljmp
xor
jg
cmp
sbb
jno
push
push
js
xorl
sti
xchg
fs
pop
mov
dec
scas
lcall
inc
sub
jb
fisubrs
call
cmpsb
xor
mov
test
xor
ljmp
xchg
imul
rcll
xchg
outsb
cli
insb
and
int3
sub
dec
push
push
pop
loopne
sar
call
sbb
inc
cmp
lds
xchg
nop
cwtl
ret
mov
out
mov
mov
mov
repz
dec
dec
sub
cmp
stc
mov
rcll
inc
lret
pushf
xchg
std
in
sub
push
push
cmp
pop
jle
sti
mov
sbb
pushl
cmp
test
repnz
adc
pop
jae
scas
lret
adc
mov
inc
mov
fldenv
rcl
jae
lds
sub
mov
out
jg
cli
jbe
fiadds
ljmp
hlt
xlat
xchg
lcall
adc
lds
lock
decl
cmp
cltd
iret
data16
bound
arpl
push
mov
xchg
movsl
pushl
insl
jne
imul
dec
lahf
and
int3
pop
mov
mov
pop
pop
stos
add
cld
pop
cld
pushl
sbb
mov
loop
inc
push
add
sti
lods
xchg
dec
idiv
pushl
add
in
fnstsw
pop
or
jl
adc
pusha
setb
mov
push
test
imul
outsb
or
lods
jnp
fs
inc
pop
pop
mov
adc
and
adc
xchg
dec
fs
test
ds
stos
repz
dec
mov
push
pushl
imul
rorb
jmp
xchg
push
pop
push
jmp
add
repz
lcall
or
sahf
and
xor
test
jmp
add
xor
leave
dec
ret
add
aam
fisubl
and
stos
lock
call
or
out
jp
cmp
les
lea
jo
pop
xor
sbb
decl
push
pushl
inc
inc
arpl
loopne
js
jp
sar
lcall
cmpsl
insl
icebp
lret
cmp
popa
shr
add
pop
sub
out
sub
push
jbe
test
in
mov
cmpsl
jge,pn
mov
dec
inc
cmp
add
fisttpll
rcr
sub
lcall
jne
insb
shll
in
andb
subb
add
jle
mov
xor
jno
ljmp
leave
mov
sbb
inc
mov
cli
or
std
sbbl
ja
adc
mov
add
mov
pop
dec
pusha
mov
push
xlat
pusha
dec
mov
mov
test
in
xchg
aas
into
stos
xchg
mov
jbe
pop
popa
jno
in
fsubrs
pop
pushl
jge
int3
in
push
rcr
sar
popa
nop
xchg
imul
push
sub
pop
popf
incl
dec
movsl
inc
push
pop
mov
adc
mov
sub
push
decl
je
idiv
outsl
lea
test
sub
loopne
adc
sbb
ljmp
scas
jns
push
dec
sub
mov
scas
dec
sub
mov
decl
jnp
repnz
xchg
stos
xchg
pop
syscall
adc
das
cld
popa
sahf
mov
cltd
xor
push
sti
add
stos
and
dec
js
je
enter
add
pushl
mov
adc
push
add
mov
ljmp
sahf
sbb
and
add
aam
and
sbb
sbb
xchg
jl
xor
mov
cmp
lods
mov
add
aam
ret
popf
pusha
aad
sbb
call
lock
sbb
push
loope
outsb
push
jge
aad
test
decl
cmp
push
push
mov
iret
dec
popa
sbb
jge
lcall
jmp
pushf
gs
insb
shlb
iret
enter
jb
dec
addl
jmp
jmp
push
xchg
data16
nop
stos
fdivrs
out
ds
mov
mov
and
xor
dec
mov
or
push
mov
fcoms
cmpsl
out
in
dec
adc
je
jmp
adc
pop
loop
mov
sbb
pop
xchg
push
aad
or
mov
inc
mov
dec
lcall
or
imul
imul
fsubl
popf
jbe
xchg
pop
int3
call
test
repz
cmpsl
mov
mov
in
adc
cmp
addr16
push
icebp
fs
mov
or
mov
dec
jmp
sub
stc
aam
ja
pop
jecxz
sti
inc
cli
xor
cli
movsl
mov
rcr
fmul
testb
rcr
in
testb
push
popf
or
imul
mov
cli
cmp
andl
rolb
imul
pop
gs
xlat
mov
adc
pop
aaa
dec
push
and
outsl
mov
mov
pop
jg
sub
movsl
rolb
test
and
mov
push
mov
aad
jl
in
js
jl
clc
pop
sbbl
xchg
xor
mov
adc
fs
inc
cmpl
out
adc
pop
cs
addr16
sbb
dec
ret
adc
xchg
mov
sub
std
fists
or
add
dec
sbb
clc
and
and
cli
stos
xor
push
push
sbb
xchg
add
loope
cmp
mov
bound
mov
out
jge
inc
int3
push
sub
cmc
imul
jle
frstor
sub
es
cmp
cmpsb
mov
mov
loopne
or
sub
arpl
and
inc
pushl
jmp
aas
gs
or
andl
call
test
jnp
inc
out
jne
dec
add
adc
push
or
adc
add
pushl
rol
fidivrs
loopne
loop
pop
push
pop
dec
xor
loope
ret
out
pushf
int3
inc
or
call
popf
xchg
xchg
xchg
xor
ds
cwtl
jecxz
mov
das
push
adc
cmp
adc
call
pop
push
dec
jle
sub
push
mov
lods
fildll
in
int3
std
dec
jns
jl
imul
jg
out
repnz
or
jns
adc
or
and
sbb
pop
sub
xlat
lcall
mov
xor
out
inc
lock
ljmp
mov
sarb
js
jnp
incl
jle
sbb
jp
sti
xchg
out
fs
xchg
or
mov
fstl
nop
dec
mov
pop
loopne
jge
mov
andl
push
adc
and
mov
ljmp
push
pop
mov
pop
pop
mov
pop
pop
fcoms
cmp
jae
ds
push
enter
loop
mov
inc
repnz
mov
add
push
inc
mov
xchg
cli
lret
mov
jg
popa
loopne
pop
sbb
pop
iret
lods
in
lcall
dec
fwait
repnz
xor
inc
push
fildll
sahf
mov
inc
repz
cmp
jecxz
cmp
or
test
mov
sub
out
fcoml
mov
xor
sub
mov
push
and
fistps
inc
nop
decl
sub
push
out
jmp
outsl
lock
mov
mov
loopne
mov
jle
or
shl
lahf
ss
push
call
mov
inc
adc
cli
sub
mov
iret
addb
fsubs
sbb
fdivl
in
mov
push
orl
mov
xchg
iret
repnz
xor
notb
lret
jg
sub
sub
adc
into
xlat
imul
xchg
xor
or
pop
push
test
call
sbb
dec
mov
stc
mov
andb
sbb
data16
adc
xchg
ljmp
cmp
ds
lods
and
in
sbb
call
jne
or
bound
jl
jae
jns
mov
lcall
cmp
cmp
mov
lods
push
inc
std
icebp
out
xchg
add
mov
sbb
incl
pushf
stos
popf
xor
sbb
and
cmpsl
or
cmc
dec
testb
or
mov
pushf
fcomi
adc
push
cmovne
dec
test
lcall
jecxz
pop
nop
push
mov
xchg
daa
adc
andl
and
mov
xchg
ljmp
shlb
mov
ljmp
fimull
push
incl
mov
in
xchg
fcoml
int
xchg
or
je
adc
fildll
push
lcall
cmc
inc
jp
mov
decl
cmp
enter
repz
cmp
test
dec
mov
lods
aad
sub
jo
cmpsb
aam
jp
nop
outsb
cli
fs
loope
insl
out
cli
inc
pop
dec
xchg
inc
xchg
test
shll
in
pop
pop
jnp
jl
leave
hlt
jmp
pop
push
ja
dec
popf
xchg
lret
xchg
dec
mov
sbb
mov
mov
xchg
ffreep
mov
jno
push
in
fs
lds
loopne
lds
cmpb
mov
lcall
addr16
mov
pop
lods
cmp
cmp
jns
outsl
inc
pop
mov
xchg
outsb
sahf
push
out
clc
in
shl
cmp
push
sub
or
inc
shlb
aas
aam
inc
or
sub
adc
loopne
mov
jbe
adc
flds
xor
in
mov
and
hlt
fldl
and
imul
pushl
in
add
andl
cmp
and
mov
mov
xchg
fwait
cmc
decl
jbe
cmp
mov
nopl
sbb
addl
xor
fwait
cmp
mov
iret
sub
dec
xchg
pop
daa
push
push
cld
in
loope
xchg
cs
push
xor
inc
imul
in
pushl
mov
or
jl
cmpsl
xchg
sar
sbb
arpl
dec
shlb
lcall
outsb
push
loopne
cmp
les
sub
mov
cmpl
add
jg
push
bnd
test
shl
jg
or
jbe
and
mov
scas
nop
shlb
ljmp
bound
cli
popf
cmp
mov
andb
sbb
ljmp
and
test
fmul
cmp
xchg
je
iret
lea
sarl
decb
xchg
mov
xor
out
je
shll
mov
mov
movsl
jno
jne
ret
inc
loope
sbb
loope
inc
dec
fcmovbe
cmc
and
adc
push
add
decl
pop
sahf
cmpsl
add
cmp
fwait
inc
mov
rorl
sbb
std
jmp
daa
jle
fdivp
out
mov
mov
rcll
push
sti
insl
and
pop
cmp
ds
adc
push
mov
mov
fld
mov
aad
pop
pop
sar
call
arpl
mov
pusha
repz
orl
mov
push
dec
ljmp
adc
stos
shrl
loop
and
dec
adc
aam
xchg
mov
or
imul
clc
dec
jnp
lock
adc
arpl
scas
cwtl
sbb
mov
cmp
jmp
cmp
aaa
mov
lret
jns
and
rol
inc
xchg
ret
mov
call
inc
mov
popa
push
mov
sub
call
add
ljmp
inc
mov
jl
mov
sub
in
jb
pop
mov
pop
sti
incl
outsb
lret
add
scas
adc
push
xor
jg
jp
xchg
stos
shlb
sar
pop
cmc
cltd
push
pop
pop
mov
fwait
and
popa
fistpl
cmpsl
movsb
ljmp
dec
test
je
cwtl
dec
orl
jno
je
jne
mov
cwtl
or
pushl
nop
rorb
mov
aaa
aad
mov
jb
mov
inc
movsl
xorl
imull
and
jg
jle
pop
or
or
jnp
xor
out
scas
scas
sbb
cmp
sar
out
dec
addl
xorl
cmp
ljmp
lret
push
inc
rolb
mov
push
data16
iret
jg
call
sarl
sub
fistl
pop
mov
mov
ret
das
pushl
dec
hlt
in
daa
push
clc
cmp
jbe
mov
mov
xchg
pushf
jg
aad
shr
stc
cwtl
iret
incl
sahf
popa
jbe
out
je
push
divb
dec
sbb
sub
les
jmp
repz
cmc
gs
shlb
ss
pop
cmc
icebp
push
mov
pushf
adc
cld
ss
sub
ljmp
pop
sub
outsb
popa
or
std
pop
pop
lock
ljmp
cs
stos
cmc
and
cwtl
sbb
les
jg
jb
sub
movl
or
cwtl
jno
xor
jmp
push
les
fsts
in
inc
adc
xchg
mov
mov
add
pushl
cmp
pop
adc
inc
mov
or
push
push
out
insb
data16
pop
std
inc
push
dec
jmp
sub
ljmp
mov
sbb
ljmp
out
imul
sbb
pushl
std
fcomps
lea
xor
fidivs
pusha
cmp
mov
pop
dec
cld
incl
faddp
scas
loope
inc
jg
js
gs
imul
call
stos
sub
pop
scas
mov
add
stc
shlb
dec
sub
vpgatherdd
adc
adc
jns
out
push
xchg
fidivs
jmp
js
je
pop
sub
inc
fists
jmp
or
fstpl
lcall
ficoml
xchg
cmpsl
loop
shrl
ljmp
dec
and
sub
outsb
or
jne
cltd
aam
jbe
jg
sbb
lods
and
ret
faddp
insl
add
xor
xchg
or
fwait
mov
sbb
inc
xor
pushf
rol
shrl
int3
dec
mov
movsb
das
sti
jne
mov
push
sti
pop
sub
cmp
sub
in
jae
int
mov
mov
loop
outsb
stos
sti
pushl
roll
fisubrs
jl
sbb
imul
scas
xor
mov
loope
lcall
std
fnstcw
pop
loope
xchg
fwait
push
pop
and
data16
jo
lcall
insl
pop
fcomp
adc
pop
addr16
outsb
cmovno
lea
call
setbe
sub
or
rcrb
cmp
bound
xchg
pop
lock
int
or
xor
dec
outsb
xchg
cmp
fcmovbe
arpl
push
dec
jmp
add
scas
mov
fsubp
stc
enter
pop
mov
ljmp
pop
or
push
lods
jne
cwtl
shll
fldcw
sarl
es
push
dec
cltd
incl
pop
out
cmp
jae
bound
aas
dec
xor
ljmp
sbbl
mov
jl
inc
jmp
fnstsw
in
sbb
sbb
mov
in
adc
mov
lods
cmpb
ror
ds
call
pop
std
inc
out
mov
mov
sub
test
mov
xlat
mov
and
rcrb
fisubl
aas
cmp
pop
aam
je
sbb
movsb
pop
jb
int3
rclb
jno
dec
test
push
push
push
dec
mov
notl
out
std
rorl
xchg
sub
in
mov
out
fwait
in
aaa
leave
xor
pop
repnz
mov
std
iret
stos
lods
pop
jl
cs
cs
add
out
jg
mov
add
mov
ja
mov
xchg
cmpsb
in
push
cli
jns
jne
push
xchg
mov
xor
xor
push
mov
dec
push
aad
jnp
mov
jge
in
repz
or
ret
push
inc
ja
enter
shlb
arpl
mull
incl
mov
cs
je
leave
rcrb
mov
fcomp
add
sti
ljmp
adc
or
imull
mov
jge
jo
inc
xchg
sub
push
outsl
inc
jg
aaa
cld
call
cwtl
aaa
andb
push
test
push
mov
mov
out
pop
and
ljmp
jg
movb
notl
test
gs
sub
adc
or
pop
hlt
push
subl
ret
mov
sbb
pop
fcomip
mov
call
lret
and
jle
jp
cmp
in
dec
mov
add
shrl
dec
push
ljmp
push
add
or
stos
cmc
out
das
jae
mov
cmp
call
dec
adc
jg
cmp
xchg
pop
fwait
and
and
pop
lock
push
pop
pop
mov
cli
mov
std
aad
xor
mov
fildl
aam
mov
mov
sub
stc
popa
mov
inc
sbb
dec
inc
push
jg
push
shrl
ret
push
cmp
or
xchg
and
dec
stc
fisttpll
test
roll
daa
rcrb
movsb
dec
push
jns
scas
dec
jne
jae
inc
rol
push
lcall
rol
test
adc
cmc
outsl
cmc
mov
rorl
and
mov
movsl
push
fs
push
cmp
xchg
cwtl
je
jae
pusha
adc
sub
lahf
pop
add
inc
pop
or
and
repz
jb
dec
jg
inc
clc
add
sbb
push
cmpb
sbb
test
pop
sbb
jmp
fcmovu
pop
and
pop
xchg
and
sub
mov
xlat
icebp
jge
enter
jmp
ds
or
xor
mov
aad
push
jns
iret
repz
xchg
loope
repnz
jl
ficoms
daa
repnz
sahf
xchg
or
movsl
scas
adc
jmp
push
sub
pop
es
xchg
iret
out
pop
inc
cli
fdivr
pop
hlt
ljmp
add
in
mov
subb
xor
xchg
daa
cli
ljmp
sbb
outsb
jne
outsl
xlat
cltd
jbe
cmp
dec
push
push
push
jecxz
shlb
aam
xor
lahf
xchg
movsl
push
lcall
fs
call
push
rcll
jnp
cld
dec
in
loop
je
decl
fiaddl
cmp
sti
jle
and
pop
inc
cmp
sti
movsb
out
jmp
xor
dec
fs
bound
imul
cltd
pop
add
mov
lock
shll
add
inc
mov
xlat
ss
stc
xor
ja
or
dec
fnstsw
jl
pop
popa
add
xchg
pop
dec
mov
mov
push
gs
decl
jb
lcall
mov
ret
push
mov
sub
xor
jmp
cmp
mov
jmp
add
mov
cld
inc
aam
ficoms
sub
not
int
xor
or
fsubr
mov
and
add
and
lock
cmovl
xlat
jp
out
je
jl
movsb
cmp
cld
jmp
xchg
xlat
lcall
inc
sbb
into
mov
mov
fsubrl
xor
add
mov
xor
dec
pushf
push
mov
or
cmpsb
mov
sbb
fwait
leave
ss
mov
decl
push
jne
gs
mov
jge
mov
push
hlt
ljmp
repz
fdiv
int3
push
push
out
clc
cmp
rolb
push
das
out
ljmp
filds
adc
insb
frstor
inc
xchg
dec
jae
push
jnp
jbe
cmpsb
dec
jg
push
cmp
add
out
xchg
xchg
stos
pop
sti
mov
pushl
inc
ror
mov
adc
xor
pop
sbb
cmp
rorl
sbb
test
jle
dec
push
loop
fdivr
data16
ja
push
xchg
or
add
mov
shr
or
jb
xor
arpl
mov
outsb
sub
inc
sbb
jmp
incl
push
insb
and
or
push
inc
cmp
pop
ds
xor
xchg
xlat
fistpll
and
push
adc
loop
push
pop
test
pop
cli
repz
incl
and
aas
shll
dec
adc
mov
inc
lahf
ret
stos
adcl
xchg
push
add
into
xchg
add
jg
or
mov
and
or
adc
inc
or
fistl
fadds
jecxz
add
imul
pop
rolb
mov
mov
addb
adc
or
lcall
cmp
pop
jg
mov
std
add
scas
xor
dec
out
fcmovnbe
lea
frstor
fwait
fwait
cmpsl
or
idivl
mov
repz
inc
xor
inc
pushf
rcrb
lea
add
and
data16
xor
mov
sub
jno
push
test
loop
pop
mov
test
imul
in
test
cmp
pushf
mov
sbb
mov
leave
sub
aaa
xlat
inc
xchg
xlat
sbb
fisubrs
nop
ljmp
xor
addr16
jbe
popa
int3
push
stos
pandn
ret
jmp
jl
cmpsb
out
test
mov
xchg
loop
ljmp
xchg
add
decl
sub
jb
bound
cli
or
cmp
dec
ja
adc
dec
adc
ja
data16
loop
sub
pop
imul
shlb
in
les
jmp
push
in
imul
loope
repnz
xor
mov
add
cmp
add
jge,pt
pop
push
loope
mov
and
cmpsb
xchg
push
test
push
cmp
sbb
sbb
incl
stos
inc
mov
je
repnz
das
jns
pushf
cmpsb
push
int3
fisubs
adc
mov
sub
jmp
adc
xchg
push
add
stc
sbb
add
pushl
mov
lock
popf
pushf
add
sahf
sbb
adc
inc
stc
int3
testb
mov
test
mov
mov
push
lcall
adc
pop
std
push
inc
ja
and
xchg
push
les
pushf
mov
call
aas
add
and
decl
repnz
in
icebp
jmp
stos
inc
repz
ds
fisttps
scas
fwait
testl
xlat
int3
sbb
mov
push
call
call
mov
test
jp
pop
movsl
dec
jbe
dec
sbb
push
js
mov
pop
decl
adc
add
popf
subl
in
icebp
int3
xchg
incl
or
adc
cmp
int
inc
les
setns
hlt
ds
mov
push
xor
xchg
adc
sbb
es
incl
addb
addb
or
add
dec
mov
incl
and
fisubl
mov
add
insl
sbb
js
push
jg
add
pop
sbb
test
inc
fcoms
ficompl
jg
orb
mov
pop
mov
sub
and
popa
adc
fidivl
lock
sub
scas
cmpsl
adc
aas
bound
push
add
xchg
sahf
mov
daa
add
xchg
dec
and
cmpsl
push
and
negl
push
movsb
push
movsb
inc
scas
push
push
and
stos
push
and
push
test
mov
push
xchg
imul
push
inc
pop
pop
add
sub
push
mov
pop
sbb
add
pop
pop
inc
mov
pusha
sbb
mov
addr16
out
jp
adc
fs
mov
insb
or
lret
imul
fbstp
leave
imul
imul
xchg
add
push
flds
xor
insl
fdivs
mov
stos
pop
stos
mov
push
jbe
add
jo
mov
mov
mov
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
fcmovnu
mov
or
push
ret
je
fdivp
fildl
jge
fisttps
add
fwait
inc
ds
sub
cmpsb
mov
in
movsb
push
pop
jl
jns
insl
in
stc
mov
shlb
mov
imul
push
push
push
add
jne
push
dec
mov
push
ret
add
mov
rcrl
push
pop
dec
add
loopne
cmp
push
add
mov
aaa
add
push
push
shlb
addr16
lcall
add
ja
ja
fnsave
push
xlat
jne
add
ja
push
shlb
add
xlat
ja
js
push
lock
jns
push
jp
jp
inc
push
fidivrl
pop
mov
out
sarl
ja
fldl
add
je
jmp
ljmp
mov
in
xchg
sub
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
fnstenv
push
pushf
cmp
popf
sbb
aas
push
sahf
inc
push
lahf
inc
lahf
mov
fbstp
push
jecxz
push
imulb
jne
stos
pusha
sahf
out
out
out
sahf
out
hlt
clc
stc
cli
sti
test
jns
cld
std
incb
jecxz
arpl
cltd
int
imul
add
imul
xor
add
pop
add
pop
add
sbb
add
in
lds
mov
add
or
or
mov
add
add
inc
repnz
add
aam
pop
sti
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
adc
rcrb
pop
stos
shrd
outsb
push
lods
lods
pop
mov
stos
mov
scas
add
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
push
mov
push
pop
scas
sbb
scas
scas
scas
nop
aaa
xchg
sbb
mov
mov
nop
fwait
and
and
int
pop
push
mov
push
xor
and
sbb
and
cmp
and
sub
push
and
adcb
sub
pop
sub
mov
ret
sub
or
mov
xor
das
pop
daa
mov
adc
or
es
sarb
adc
cmp
mov
scas
pusha
add
mov
pop
xor
pop
iret
int3
into
int3
or
or
add
pop
xor
mov
pop
das
push
cs
xor
add
xor
ljmp
sti
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
and
call
test
mov
xor
jbe
cmp
jl
jge
jno
lcall
pusha
pop
pushw
dec
dec
cmpb
jo
mov
pushl
insb
andb
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
ja
jns
dec
insl
xchg
lret
bound
js
imul
cmp
je
xorb
mov
jae
addb
popf
add
mov
scas
xchg
push
lods
mov
outsl
dec
fdivrp
notl
pop
push
dec
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
xchg
fldt
inc
cs
xor
mov
dec
adc
pop
out
jbe
dec
cmp
mov
jle
and
push
mov
xchg
jg
xor
jo
push
inc
mov
cmp
mov
inc
add
enter
xchg
jp
inc
push
popf
sti
cltd
lcall
add
xchg
jno
lret
push
bound
mov
mov
inc
push
sahf
insl
sti
mov
insb
add
outsb
add
xchg
xchg
pop
push
test
divb
push
dec
push
movsb
jae
add
jb
mov
push
mov
push
rorb
add
lcall
rcrb
pop
into
dec
mov
add
pop
in
lret
ja
sahf
jbe
fistpl
imul
fisttpl
ds
push
add
and
es
js
mov
gs
mov
shrl
insb
out
ds
pop
outsb
push
outsl
ror
push
ds
subb
sub
test
fisttpll
lock
or
mulb
add
lcall
es
bound
out
arpl
pop
xor
push
loopne
iret
sahf
mov
outsb
push
insl
push
jb
out
in
push
jle
mov
orb
sti
popf
jp
aad
push
divb
fildl
adc
imull
int
adcl
mov
shll
push
test
test
sbb
test
fldcw
in
mov
push
xchg
nop
and
out
xchg
cmpb
lock
sub
sub
outsb
fiaddl
imulb
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
outsl
cmpsb
pop
cmp
jle
and
cmpsl
push
cmpsb
scas
jo
test
sahf
mov
adc
pop
jbe
stos
into
pop
lock
shll
lgs
int
mov
mov
iret
cmpsb
sub
rcr
rcl
mov
push
aad
jle
data16
add
add
std
dec
mov
jne
je
dec
daa
addb
cltd
sub
incl
sbb
es
push
adc
aas
and
push
add
add
ds
imul
mov
adc
sbb
xchg
push
mov
and
sbb
or
push
add
and
loopne
lods
pop
and
cs
mov
aas
and
sub
xor
or
aas
aas
cmp
in
inc
cmp
and
cmp
sbb
inc
jbe
cmp
mov
insl
inc
inc
jle
cmp
adc
ds
jle
sti
ds
cmp
adc
ds
xor
outsl
jbe
dec
dec
inc
test
mov
pop
in
mov
mov
addr16
jg
in
pop
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
decl
dec
test
mov
mov
ds
xor
sub
sub
sub
sub
idivb
or
sub
dec
and
inc
mov
push
push
push
push
push
or
insb
insb
pop
push
push
pop
push
push
push
imul
shlb
imul
nop
cltd
mov
dec
call
orl
cmp
insl
popf
mov
jge
jns
jns
das
xchg
js
jg
test
ja
jno
outsl
outsb
pushf
mov
stos
sti
pop
daa
imul
rolb
pop
in
fwait
and
mov
incl
push
addb
int
jg
push
push
add
cmc
repz
dec
xor
aas
add
xor
mov
xchg
pop
cmp
test
add
mov
add
mov
push
ljmp
bound
fnstsw
repnz
inc
add
fwait
adc
add
mov
push
in
lcall
bound
push
arpl
mov
push
jg
rolw
lret
js
into
xchg
add
idiv
add
mov
mov
test
scas
xchg
js
in
and
out
mov
add
ds
sub
xchg
mov
int3
testb
sub
nop
sub
xchg
xor
fnstenv
ficoms
es
jbe
ss
push
negl
fcmove
fst
es
push
mov
xor
std
into
inc
sub
fdivrp
test
xchg
add
test
jg
jle
and
and
subb
pop
stc
aas
in
dec
dec
dec
dec
dec
add
pop
add
push
dec
outsl
jg
cld
or
adc
cmp
adc
dec
or
add
psadbw
outsb
push
adc
add
or
pop
pop
cmovg
inc
push
dec
sbb
inc
adc
dec
and
adc
sbb
dec
add
dec
adc
sub
cmp
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
test
add
mov
pop
fldt
add
mov
mov
push
add
outsb
mov
push
ds
add
or
pop
add
jb
sbb
and
add
jmp
mov
jbe
incl
cs
add
ret
or
sbb
push
jo
push
incl
outsb
jl
mov
es
ja,pt
and
mov
bswap
leave
xor
xor
adc
sbb
rolb
ja,pn
aaa
add
or
xor
sahf
jg
add
pop
lahf
xchg
test
inc
into
jg
add
cli
mov
mov
pop
mov
test
add
inc
inc
jle
cli
add
sub
xchg
pusha
add
add
sti
inc
lock
mov
das
sti
mov
leave
roll
scas
pop
jo
push
inc
dec
sti
jg
pop
add
orl
xchg
loope
cmp
mulb
xor
jg
cld
and
sbb
adc
cmpsb
std
ja
jg
inc
bound
into
jg
pop
inc
out
jg
and
pop
add
jle
push
and
incb
add
data16
shlb
lcall
lods
inc
add
addr16
or
dec
dec
adc
decb
jg
inc
or
inc
orb
adc
adc
push
jbe
insl
adc
int
bound
jle
enter
and
sbb
sar
add
jmp
lods
dec
add
pop
jle
lret
imul
push
loop
add
push
add
scas
jle
mov
test
dec
lods
inc
pop
test
addr16
add
popa
orb
jbe
sbb
add
and
jg
lret
fisubrl
adc
cmpsb
xor
push
inc
inc
pusha
jg
lcall
inc
dec
add
pop
cmp
lods
jle
cs
mov
imul
stos
pop
fcmovnb
fisubrs
pop
add
daa
aas
aaa
and
pop
add
shrl
pop
jle
add
and
js
pop
inc
push
decl
sbb
test
hlt
mov
jle
dec
testl
bound
add
ficompl
mov
fcmovnu
negb
daa
push
arpl
pop
ss
inc
push
mov
shr
mov
or
dec
decl
fidivl
daa
push
ljmp
inc
out
jle,pt
inc
rclb
jle
jmp
dec
push
into
out
ja
fnstenv
add
push
jne
pop
insl
inc
enter
dec
out
push
jnp
fildl
push
js
dec
fdivrs
jbe
pop
add
test
pop
xlat
mov
mov
push
daa
fs
push
outsb
notrack
xor
cs
jle
mov
inc
popf
dec
incl
ss
jmp
dec
ja
xchg
and
push
inc
mov
ss
xchg
test
xor
push
mov
sbb
sahf
inc
out
mov
int
flds
xchg
inc
adc
insb
push
pushf
cmp
insl
dec
enter
mov
xchg
xor
mov
mov
xchg
xor
sub
sub
nop
daa
ss
dec
or
dec
xor
in
ss
aaa
outsb
jmp
mov
mov
jg
pop
fnsave
xor
test
enter
sahf
movb
es
xchg
pusha
ss
cs
add
or
push
pop
ja
int3
rclb
xchg
push
xchg
movb
ja
add
movsb
divb
mov
add
stos
test
ja
add
xchg
push
in
subb
mov
mov
push
mov
pop
or
adc
repz
negl
cmpl
iret
mov
push
faddl
dec
repz
jg
xchg
inc
and
cmp
lock
cmp
sbb
outsb
pop
cmp
icebp
sbb
and
push
in
add
mov
add
dec
inc
subl
out
pop
mov
imul
mov
pop
xchg
push
sbb
xor
cmp
jle
sti
mov
adc
cmp
jmp
syscall
mov
sub
mov
pop
fwait
mov
lcall
in
xor
or
mov
sub
les
push
add
ds
pop
daa
std
mov
inc
fsub
xchg
btc
lcall
mov
mov
or
call
lret
ds
decl
cwtl
push
ljmp
incl
insb
inc
call
sub
inc
arpl
sahf
sub
adc
insb
inc
call
mov
pop
decb
xchg
shrb
lcall
inc
mov
ljmp
scas
lcall
decb
mov
sbb
and
push
add
test
inc
outsb
inc
iret
jle
adc
sbb
incl
out
adc
adc
mov
or
orl
inc
pop
iret
sbb
jae
decl
sbb
jae
mov
fdivrp
add
sub
xchg
aaa
inc
sbbb
std
fildl
imul
xor
call
addb
dec
outsb
mov
stc
smsw
dec
push
xor
call
jg
dec
push
cwtl
and
testb
xchg
sub
dec
arpl
xchg
decl
adc
jmp
incl
pop
fwait
cld
pop
fcmovbe
pop
pop
inc
je
divb
mov
test
push
shll
mov
mov
roll
dec
push
dec
cmp
sahf
ret
incl
frstor
test
scas
popf
mov
push
inc
inc
pop
inc
outsb
arpl
pop
mov
sahf
int
sti
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
cmpsb
test
cs
dec
xor
mov
jmp
repz
outsb
xchg
outsb
shrb
es
push
das
xor
jb
imulb
push
iret
xor
xchg
insl
pop
daa
outsl
push
xchg
fs
stos
and
dec
notb
push
ljmp
inc
push
sbb
dec
pop
add
aam
movsl
pop
int
repnz
jmp
popf
cmp
aas
jmp
mov
decb
cwtl
xor
int
push
xchg
push
push
aaa
cltd
movsb
mov
push
lcall
jb
mov
xchg
es
xchg
xchg
sahf
notb
sub
jmp
ljmp
aam
jmp
mov
mov
push
add
std
fwait
fcmovbe
js
std
faddl
pop
fstpt
push
jnp
jp
or
jl
xchg
jbe
cmp
jns
jl
push
jge
testb
ss
es
jbe
adc
fidivrl
push
div
outsl
dec
push
dec
repnz
repnz
jae
pop
fidivrl
push
ret
jg
insl
mov
jnp
jge
hlt
in
add
int3
outsb
push
inc
xchg
pop
nop
negl
adc
xorb
outsl
aad
and
mov
adc
jns
lods
or
imul
cmp
jnp
lahf
dec
es
addl
decl
push
orb
jg
and
xchg
out
push
sub
mov
out
mov
cli
ljmp
in
mov
idiv
or
jb
sub
jg
mov
icebp
dec
mov
dec
mov
or
jle
inc
sub
jg
mov
icebp
cld
inc
daa
jg
mov
nop
inc
push
nop
ja
loope
xchg
enter
cld
jp
es
xchg
pop
dec
shll
and
jmp
mov
enter
dec
in
sarb
mov
pop
ja
dec
test
jg
jge
idiv
movsb
sub
fsubrl
movsb
or
push
inc
adc
int3
decl
inc
jp
mov
fidivrl
arpl
clc
jbe
jmp
decl
pop
push
pop
push
imul
ljmp
mov
std
mov
jp
int
push
jns
mov
sub
mov
jmp
xchg
jmp
mov
push
mov
cltd
int
sbb
jmp
adcb
xchg
sar
cs
sbb
loope
and
lret
jg
out
mov
or
push
test
push
in
mov
add
ja
dec
jge
stc
inc
or
and
inc
and
mov
add
movsl
add
push
pop
mov
movb
mov
es
sbb
add
and
mov
lahf
fiadds
ds
lret
adc
call
sub
jmp
jae
inc
push
add
xor
out
into
mov
add
push
sbb
push
or
movsb
imul
or
sbb
outsb
or
push
sbb
nop
inc
push
push
and
or
test
nop
mov
testb
cltd
les
add
add
push
gs
jo
mov
add
xchg
stos
add
cwtl
fimull
and
add
add
xor
xchg
jo
dec
faddl
xor
les
pop
divl
lcall
pusha
inc
add
lock
inc
jmp
lahf
jo
das
mov
sbb
add
imul
inc
ja
pusha
insl
mov
xchg
cmp
xor
add
jno
dec
bound
ss
push
or
stos
dec
loop
add
inc
xchg
mov
sbb
inc
xchg
mov
push
push
cmp
lods
add
and
insl
mov
jo
and
insl
scas
rol
push
popa
shlb
xor
dec
fcomp
adc
mov
jae
add
cmp
or
andb
dec
bound
add
xchg
push
pop
pop
gs
xchg
mov
loopne
mov
pushf
es
add
cmpsl
dec
aas
lcall
or
lcall
lahf
push
rolb
adc
add
push
inc
jno
outsl
scas
sarl
xor
push
outsb
dec
push
outsl
loop
adc
and
push
es
imul
and
or
xchg
dec
fwait
push
and
call
mov
fcoms
dec
insb
out
inc
imul
sbbl
add
inc
adc
mov
jne
addr16
cwtl
js
push
adc
dec
or
or
addb
or
add
and
mov
cmp
imul
lods
push
xchg
sub
cmp
add
add
fiaddl
mov
cli
popf
xchg
push
mov
aad
pusha
dec
mov
cmp
sub
mov
or
addl
negb
cmp
jo
ret
cwtl
sub
in
push
dec
in
xchg
fwait
inc
mov
ljmp
lahf
xchg
andl
sub
xchg
add
aam
lcall
or
ror
jecxz
ret
add
or
pop
adcl
sbb
push
xor
dec
sub
sbb
xchg
jb
dec
push
add
jmp
add
jo
jo
jne
shl
inc
je
lods
jmp
adc
inc
iret
add
add
cmp
sbb
pop
and
lcall
icebp
popa
and
pop
test
add
sbb
xor
push
cmp
enter
bound
or
mov
sub
or
sub
push
or
xchg
fbld
adc
test
jae
xor
call
push
enter
scas
mov
adc
nop
arpl
mov
inc
imul
xchg
ja
sbb
sbb
pop
test
push
sub
dec
pop
sub
pop
inc
lahf
mov
xchg
ja
push
jne
inc
mov
sub
outsl
jae
inc
jle
insl
loop
outsl
ret
xchg
mov
mov
dec
and
add
push
add
xchg
mov
and
jl
mov
inc
arpl
mov
das
adc
das
sub
aas
sub
xchg
pop
sub
rorl
mov
mov
adc
xor
push
sti
cmpl
push
inc
mov
sub
push
pop
imul
xchg
jne
arpl
mov
lea
lods
in
or
pusha
xchg
and
add
aad
sub
lea
inc
sbb
lods
pop
or
add
or
inc
or
shrl
push
and
push
test
outsl
inc
jb
inc
inc
xchg
cmpsl
cmp
pop
or
fs
cmp
lds
mov
sbb
stos
push
test
push
and
fisubl
das
push
cld
sub
fs
push
or
fcompl
add
dec
sar
adc
dec
inc
add
xchg
add
add
cltd
pop
sub
jg
jns
add
into
sub
imul
push
jo
cmpsb
into
push
cltd
and
push
les
std
addr16
jb
xor
push
xor
jnp
and
pop
xchg
addr16
outsb
inc
sbb
sub
outsb
sbb
orl
xchg
cmp
fbstp
dec
outsb
dec
std
lea
ds
push
add
das
xor
sub
push
push
js
pop
imul
lcall
dec
add
sbb
mov
shll
add
or
shll
adc
or
mov
roll
add
es
and
nop
inc
mov
pop
add
add
fiaddl
and
lret
sbb
mov
mov
jo
sbb
out
test
ret
popf
stos
dec
test
subb
popf
cmpsl
and
cwtl
adc
xchg
mov
mov
inc
insb
scas
push
and
push
fadds
xchg
enter
sbb
push
nop
add
out
xchg
enter
les
inc
sbb
stos
es
add
sarb
mov
mov
ja
mov
call
jne
nop
push
cmp
lods
dec
in
add
or
subps
push
jge
iret
xor
pushf
xor
adc
add
xor
and
xor
imul
inc
sbb
inc
insb
sub
pusha
push
mov
jbe
xor
ja
dec
pop
lret
inc
xor
outsb
sub
mov
xchg
mov
out
or
popw
xlat
adc
or
mov
sbb
dec
push
shrb
adc
and
sbb
inc
xor
push
fs
enter
pop
lret
mov
out
inc
aaa
outsl
fadd
shl
and
mov
jecxz
inc
ret
lods
outsb
jbe
pop
xor
cmp
into
adc
pop
js
mov
outsb
xchg
cmp
push
rorl
dec
inc
push
movsl
and
sub
inc
jns
shrb
sbb
daa
dec
cld
addr16
fs
and
test
pop
test
and
xor
jmp
arpl
mov
xor
pusha
push
int3
inc
push
mov
imul
jns
aam
inc
scas
sbb
and
inc
cmp
nop
movsl
or
out
push
sub
sbb
pop
sbb
sbb
or
sub
shll
xor
mov
xchg
lods
mov
xchg
jbe
enter
and
inc
cmc
push
mov
fdivr
push
inc
inc
mov
cmp
xor
sub
enter
push
or
arpl
cmp
dec
mov
jne
lods
inc
out
inc
test
mov
xchg
jae
xor
adc
add
aaa
sub
or
mov
push
arpl
push
inc
mov
movsl
dec
sub
add
jnp
xchg
add
add
push
daa
adc
jg
push
add
add
mov
jg
sub
mov
fildll
pop
add
movb
sahf
jo
push
lock
icebp
add
inc
dec
pop
add
dec
mov
adc
clc
add
jl
add
add
sahf
push
push
jp
scas
or
or
add
push
idivb
xor
out
cld
dec
push
pop
add
sub
pop
and
or
mov
add
cmp
dec
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
