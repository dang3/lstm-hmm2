fcomp
decl
nop
inc
add
mov
or
push
add
jecxz
add
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
test
movl
push
add
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
jle
in
fstpl
mov
in
adc
push
mov
les
fdivr
cmpl
or
push
out
sarb
push
jg
mov
adc
mov
mov
pushf
push
push
sbb
cld
inc
cs
and
push
mov
adc
jno
and
push
add
xlat
and
clc
sbb
add
push
lock
dec
add
mov
or
hlt
add
push
mov
jb
add
add
or
icebp
loopne
push
fcomip
fbstp
add
inc
hlt
push
push
adc
push
push
pop
shrl
int
sbb
sbb
dec
adcl
adc
sub
push
leave
or
leave
mov
lea
xor
pop
sbb
mov
sub
sub
adc
loopne
testl
mov
clc
enter
push
push
cmp
and
in
adc
ficomps
imul
pushf
push
push
sbb
dec
add
ss
stos
notb
push
push
call
cmpsb
xor
ss
aaa
sub
sete
into
mov
mov
push
in
inc
test
lcall
mov
mov
push
push
push
sbb
test
nop
inc
pop
leave
les
and
orl
push
inc
add
sbb
add
in
js
jle
in
int3
xor
xor
pop
repz
inc
les
pushf
sbb
xchg
dec
push
mov
lea
or
mov
dec
sub
in
push
dec
or
cmp
les
mov
add
or
pop
in
inc
xor
testb
push
stc
nop
sub
sub
push
push
and
mov
dec
push
incb
xchg
jmp
pop
jae
clc
pop
jge
mov
ret
mov
pop
xchg
mov
pop
ret
xor
mov
aad
cmp
dec
dec
push
inc
fsubl
push
icebp
push
insb
sbb
add
push
ds
pop
cmp
jl
xor
je
call
sbb
out
mov
ja
ret
mov
or
test
in
sti
out
pop
repnz
push
push
or
sbbb
cwtl
sbb
inc
hlt
movsb
jne
mov
pop
into
sub
lock
out
pop
rorl
int3
cmp
cmp
cltd
mov
addb
out
adc
add
test
or
adc
push
jne
mov
mov
mov
push
adc
sbb
ja
rorb
test
inc
add
inc
add
inc
repnz
adc
loopne
fdivrs
nop
ss
repnz
adc
jl
rorb
push
cmp
sbb
jecxz
add
push
and
jo
sub
sub
xchg
jl
and
add
push
mov
inc
jb
sub
add
sub
xlat
push
pusha
mov
js
jmp
xor
xacquire
hlt
mov
mov
dec
lods
cmp
dec
inc
jnp
dec
push
add
aam
popa
addb
jle
pop
addb
push
call
and
dec
push
or
xor
sbb
loope
push
pop
imul
in
xor
inc
xchg
je
adcl
call
add
xor
xor
add
inc
loope
and
ret
cwtl
lret
test
xor
lea
push
mov
arpl
jne
loope
ds
push
push
and
shlb
mov
pop
pushf
hlt
dec
pop
mov
mov
fdivp
push
sbb
int3
mov
sbb
add
add
push
add
add
lahf
cltd
adc
pop
popf
push
sub
imulb
and
or
and
push
mov
setg
jb
and
insl
test
jl
or
jne
bound
dec
and
mov
je
mov
mov
and
push
or
push
add
add
push
jno
into
pop
xchg
cmp
in
and
ja
test
xchg
sub
fldt
sub
sete
test
test
fs
push
sbb
jns
or
cmp
in
or
add
stos
adc
jno
ficoms
mov
out
adc
scas
sub
insb
xor
xor
repnz
push
xchg
dec
sub
cmp
ds
push
test
and
mov
divb
push
mov
or
adc
jns,pn
adc
dec
cs
push
sbb
adc
adc
or
push
push
add
test
loopne
or
negb
inc
xchg
sbb
push
mov
fucom
punpckhbw
mov
test
pop
push
push
add
add
fdivrl
push
or
sub
andb
dec
fiaddl
sub
push
cmp
or
and
lea
jb
data16
or
xor
enter
add
add
cmpl
imul
pop
sahf
push
sbb
das
sbb
cmp
outsb
or
xchg
add
ja
mov
sbb
sbb
add
pop
cmp
push
pop
cmp
icebp
js
cmp
icebp
sbb
jge
jmp
pop
call
bound
inc
sbb
sub
push
cmp
imul
mov
aad
leave
mov
movb
lods
mov
add
or
out
orl
and
imul
stos
into
mov
xor
pusha
mov
in
lahf
mov
shrb
adc
mov
cmp
mov
adc
pop
jno
xor
mov
lea
add
loopne
stos
or
sti
imul
loopne
lea
data16
test
sub
mov
pop
test
push
rolb
test
xchg
cmpl
push
dec
adc
mov
lds
adc
call
lods
dec
data16
cmp
cld
rolb
mov
lods
sub
adc
add
adc
sbb
test
dec
mov
add
cli
sbb
mov
adc
loop
pushf
das
add
sbb
adc
das
mov
das
je
outsb
sub
mov
cmp
and
mov
mov
add
mov
dec
in
sub
adcb
pop
fstps
test
aas
push
or
jle,pt
sbb
lea
xor
sbb
adcb
sub
xor
and
mov
dec
add
pop
fsubs
mov
push
mov
push
and
mov
loope
sub
in
jg
test
mov
jmp
cmc
lea
mov
outsl
mov
xor
in
pop
sarb
mov
hlt
and
and
push
fnstcw
iret
cmp
jb
inc
jmp
dec
idivl
xor
push
push
jne
insb
xor
cmp
inc
je
icebp
xchg
cmp
add
xchg
inc
add
mov
ljmp
outsb
hlt
jne
mov
xor
sub
test
loope
adcl
dec
lods
push
add
push
fnstcw
je
sub
cmp
je
xchg
or
cwtl
sbb
dec
or
shl
mov
lret
loopne
test
mov
push
aaa
test
std
pop
adc
add
pop
jg
push
mov
int3
add
sbb
sub
add
lods
push
push
xchg
mov
std
call
daa
loopne
pop
push
adc
call
inc
cmp
jl
inc
out
push
shl
add
outsb
lea
jnp
xchg
pop
enter
js
jne
cmp
jbe
in
arpl
sbb
cmp
xchg
push
fsubs
fs
sahf
rolb
xchg
xchg
rcr
sbb
and
cmpsb
pushl
movzwl
push
loopne
int3
push
lods
mov
sub
push
cmp
int
jl
sbb
jmp
sbb
clc
decl
inc
test
jne
sub
mov
push
mov
hlt
sbb
and
inc
mov
sub
or
jne
ljmp
push
pop
xchg
ret
jo
bound
dec
add
pop
inc
shrl
xor
mov
cwtl
ret
enter
xor
mov
cmp
jl
mov
sbb
xchg
fldl
mov
sub
mov
das
or
call
getsec
adc
pop
or
pop
adc
add
loopne
adcb
mov
mov
sbb
fcoms
lahf
push
mov
ljmp
jmp
test
push
mov
pop
imul
adc
cmp
jle
xor
inc
jb
cmp
pop
out
out
movsb
test
dec
clc
lea
sub
or
jge
mov
into
imull
add
jmp
add
call
gs
mov
ret
push
push
daa
mov
jl
pop
inc
add
test
xchg
js
outsb
adc
add
add
lret
mov
add
mov
ret
fldt
ret
aas
out
je
cmpl
jge
sub
add
mov
in
inc
hlt
cmc
push
cmp
pop
mov
rorb
push
mov
bound
add
test
mov
rorl
jge
add
push
push
fisubl
or
sbb
jne
dec
fiadds
mov
sub
push
xchg
ss
stos
jb
hlt
mov
sub
or
fimuls
ja
push
push
sbb
sbb
sbb
or
clc
push
cmp
ss
add
jl
push
cmp
fwait
mov
adc
imul
stos
add
lahf
loop
in
ss
std
rclb
jmp
inc
pusha
addr16
or
sbb
test
ffree
mov
aam
scas
stos
popa
or
pop
push
rcr
outsl
xor
add
das
xchg
pusha
xchg
rcl
out
movb
mov
mov
dec
jl
out
arpl
jo
ss
push
jbe
add
cmp
cwtl
push
mov
adc
nopl
rcr
test
outsl
and
mov
ret
pop
insb
imul
add
mov
mov
shl
push
xchg
mov
mov
push
jbe
pop
mov
mov
je
cmpl
lea
jl
mov
push
jne
cmp
jle
push
int
or
pop
dec
test
push
pop
aaa
inc
iret
jp
xor
sub
fcompl
mov
push
sti
pop
push
in
dec
mov
cmp
outsb
mov
roll
add
cmp
cmp
loope
fcoms
repnz
and
or
shlb
adc
pop
xor
jg
pop
bound
push
push
js
jl
jg
push
loope
adc
push
scas
add
add
push
pop
gs
pop
push
push
mov
mov
and
int
jmp
fsubp
adc
fsubr
loope
jnp
sahf
mov
sub
jb
push
adc
pop
andb
ret
jge
jmp
inc
add
popa
mov
enter
or
push
scas
mov
lea
enter
mov
shll
sub
add
sub
hlt
stos
cmp
loop
sbb
jnp
les
jle
push
imul
out
test
jnp
jle
mov
cli
add
or
cmpsb
mov
pop
jge
dec
and
test
add
push
into
adc
rcl
xchg
ljmp
xor
into
ret
or
lahf
lds
push
or
lock
jge
sub
push
inc
cmp
cmp
push
cmp
or
imul
dec
cmpb
pop
inc
mov
add
push
push
jl
sub
cwtl
inc
push
add
or
or
xchg
in
pop
mov
mov
mov
pop
je
pop
jg
fwait
mov
out
xor
or
jmp
decl
add
inc
cmp
jb
mov
aas
adc
call
pop
out
or
std
fucom
mov
xorb
mov
jb
lahf
sub
push
pop
pop
adc
or
imul
addps
or
lea
mov
cmp
pop
insb
cmc
adc
xor
mov
fdivl
out
fwait
lahf
push
and
jns
jo
or
icebp
push
inc
sbb
push
clc
xchg
inc
adc
adc
xor
and
adc
lock
and
jp
pop
and
cwtl
adc
test
addl
iret
fdivr
lock
add
int3
in
fimull
push
mov
mov
pop
clc
cmp
jge
mov
repz
push
lcall
sbb
mov
andl
xor
es
push
sub
mov
jne
xor
mov
lea
mov
inc
cmp
imul
iret
push
cmpsb
or
jecxz
out
sbb
call
and
lods
enter
push
inc
fisttps
inc
add
push
aas
or
or
mov
jo
pop
adc
leave
add
cmp
push
mov
outsl
fimull
xchg
popa
nop
sub
ss
adc
jb
add
lcall
sbb
mov
pop
and
pop
and
push
jl
sbb
pop
sbb
pop
ret
shll
jg
pop
js
pop
lock
dec
data16
xchg
daa
sub
pop
pop
pop
cwtl
push
xor
test
inc
call
jg
inc
or
inc
cmp
pop
scas
ja
outsl
stos
imulb
push
je
or
push
or
jne
or
push
fnstsw
aam
rcrb
ret
adc
push
xor
pop
and
stos
pop
testb
adc
sub
or
test
ret
cmpl
and
jle
in
pop
mov
dec
or
jmp
ret
or
inc
clc
pop
add
jne
test
cmp
fidivrs
sbb
sbb
jecxz
pop
jl
cmp
pop
and
xor
or
adc
inc
pop
call
cli
je
sub
jne
cmp
iret
addb
mov
call
mov
mov
mov
js
jnp
movb
mov
popa
sbb
or
out
xor
mov
daa
pushf
jne
lock
push
jg
add
repnz
mov
push
js
jmp
dec
std
dec
jo
mov
mov
rorb
sbb
mov
mov
in
jo
clc
jmp
loopne
movsb
push
fstps
leave
and
mov
loopne
inc
int3
fsubrs
out
jge
or
cmpb
test
sahf
in
out
flds
call
push
nop
push
mov
push
xor
push
addr16
shlb
sub
dec
sbb
jmp
jmp
inc
push
mov
aas
rorl
in
mov
out
movl
mov
mov
in
in
in
push
xor
mov
sub
int3
aaa
xchg
mov
mov
je
cld
orl
push
adc
cmc
aaa
clc
mov
sahf
out
aaa
dec
outsl
jle
imul
cmp
cmp
lret
lods
jns
sbb
sbb
add
mov
or
and
fmulp
add
cmp
mov
push
imul
in
popf
push
adc
mov
mov
or
clc
rcrl
movb
test
or
adc
mov
popf
outsb
adc
stc
lock
mov
icebp
jg
push
dec
push
dec
mov
pop
push
lea
push
gs
push
add
push
lea
repz
ret
icebp
dec
and
pop
leave
aam
les
push
and
popf
imul
cmpsl
pop
or
test
sbb
fadds
repnz
sbb
add
adc
stos
fiaddl
js
jle
add
cli
cmpb
inc
sbb
mov
pop
xchg
adc
push
nop
fildl
add
lock
push
andl
cwtl
movl
js
cmc
pushf
fwait
test
push
pusha
mov
mov
test
insb
xor
insb
les
and
pop
dec
sub
shll
push
mov
dec
es
or
fsubrs
mov
pop
stos
cmp
fs
add
imul
sbb
movsb
rcll
mov
call
in
out
or
xchg
mov
shll
xchg
js
cmp
inc
jbe
out
dec
fs
jb
xor
mov
les
mov
inc
add
sbbl
add
push
icebp
push
and
xor
cmp
xchg
xchg
pop
pop
dec
in
cmpsl
loop
or
push
push
cmp
inc
pushf
cmp
je
add
std
push
push
inc
xchg
mov
xchg
pushf
mov
mov
nop
daa
negb
sahf
mov
push
mov
add
sub
bound
add
jmp
xor
adc
and
scas
jl
and
test
xor
fcmovnb
mov
mov
sub
roll
ja
push
push
lea
test
sub
pop
cli
push
push
mov
mov
insb
push
dec
dec
mov
add
mov
notb
lea
sbbb
incb
sub
insb
sbb
rcrl
rcrl
mov
lcall
cmp
push
mov
aaa
mov
sahf
inc
add
mov
cmp
mov
mov
in
es
stos
test
xor
and
leave
push
push
inc
jp
test
or
or
sub
repz
sbb
sbb
push
adc
jnp
out
xor
cmp
inc
adc
jle
cmp
loop
jne
sub
push
push
insb
inc
mov
add
test
pop
icebp
ret
fistps
ljmp
and
add
sbb
push
sbb
dec
cmp
mov
insb
orl
adc
push
xor
outsb
or
adcb
jno
cmpsl
popa
push
shlb
xor
add
addb
mov
add
jmp
mov
mov
inc
or
adcb
cmp
lret
push
lods
shlb
or
cwtl
push
jae
pop
insl
clc
pusha
lock
or
sbb
mov
dec
mov
adc
data16
aad
mov
mov
cwtl
add
jmp
into
mov
jne
pop
push
push
push
and
jbe
push
inc
mov
aas
cs
jo
lret
push
cmp
loop
ss
fcompl
in
xchg
mov
daa
mov
icebp
sbbl
jle
sub
aam
sarl
sbb
mov
cmp
jl
aad
fmul
adc
iret
call
or
sbb
imul
lea
jmp
pop
stos
adc
movl
xchg
stos
cwtl
jbe
pop
stos
aaa
adc
cmp
xor
sbb
incl
inc
pop
js
push
popa
adc
adc
out
fimuls
test
cmc
jb
imul
xchg
push
and
dec
jo
jno
es
pop
jns
xchg
flds
mov
gs
jg
mov
xor
mov
mov
mov
rcll
push
push
xchg
ljmp
sub
incl
jne
ds
or
mov
sahf
sub
add
cmp
or
stos
pop
sub
ret
push
aaa
mov
push
pop
ret
mov
push
pop
push
fstpl
mov
and
xorb
pop
test
push
push
enter
cmp
loope
pushf
ret
in
rorb
enter
jo
and
xabort
movsb
sub
lods
and
test
dec
and
xchg
jp
pushf
and
xchg
fidivs
movb
mov
fcmovne
mov
rclb
fcmove
mov
push
sub
fidivrs
push
addb
inc
inc
scas
loope
sbb
test
push
pusha
popa
adc
push
test
push
xchg
and
dec
push
push
cmp
pop
sub
push
push
lea
aam
fcoms
mov
ret
mov
test
loopne
mov
xchg
cmp
or
fstpl
xor
jg
cmp
addl
loopne
push
lock
push
test
sarb
push
in
inc
mov
push
pop
lods
xchg
enter
xor
adc
jl
dec
add
js
adc
mov
and
stos
inc
cmp
push
push
push
and
enter
jo
sbb
or
push
je
push
lcall
cwtl
shll
test
xor
add
rcrl
in
imul
xor
inc
pusha
fmull
add
mov
xchg
add
adc
mov
pop
mov
push
lahf
push
mov
ja
xchg
cmp
movsb
lock
mov
sub
mov
addl
fwait
add
out
roll
ds
dec
lock
sbb
xlat
aaa
adc
inc
sub
jo
xchg
mov
fstl
mov
loop
and
mov
std
cmp
dec
push
add
push
mov
roll
movsb
dec
js
mov
movsb
pop
jl
mov
inc
lock
xchg
or
adc
enter
insl
aam
xchg
sbb
pop
add
pop
mov
dec
gs
xchg
lods
add
mov
adcb
push
inc
lds
jo
test
sbb
sbb
adc
push
push
loope
xor
push
scas
pop
ss
xchg
add
mov
je
mov
jge
call
lock
push
call
cs
sub
push
pop
inc
test
add
cmp
fs
mov
push
push
and
mov
dec
push
dec
mov
pop
loope
ret
xor
movsl
or
insb
push
push
mov
pushf
shrb
dec
sbb
xchg
mov
addr16
push
push
loope
divl
fcoml
sbb
cmp
inc
sbb
dec
push
data16
inc
neg
shll
or
push
mov
ja
adc
sub
les
adc
push
fsts
add
popf
xor
add
sahf
mov
dec
adc
mov
pop
xor
insl
mov
arpl
push
inc
sbb
or
jl
mov
ja
lcall
mov
jl
mov
cltd
and
sar
movsb
roll
in
and
adc
jl
push
mov
and
adc
add
iret
mov
push
mov
imul
sar
mov
fcmovb
jmp
add
imul
push
std
mov
pop
fisttpl
mov
mov
imul
test
imul
icebp
mov
divl
inc
testl
add
bound
mov
sub
sub
jo
cld
daa
mov
je
cmpl
clc
pop
pop
outsl
or
xor
jne
jae
imul
inc
lea
pop
mov
hlt
push
arpl
into
sbb
mov
stos
ja
and
jmp
or
mov
cs
xor
add
inc
lock
inc
inc
pop
mov
inc
repnz
rcll
adc
test
sbb
or
hlt
pop
je
fldz
inc
fstpl
push
int3
je
jo
fisubrl
sahf
hlt
sbb
inc
roll
data16
int3
jl
cmp
int
lcall
add
sbb
aas
sbb
jo
xchg
sub
cmp
push
add
jl
insl
sti
or
mov
push
jle
cmp
nop
add
xchg
sbb
and
adc
ljmp
lods
pop
lea
cmp
or
out
or
idivl
jge
jmp
mov
pop
nop
sbb
dec
nopl
faddl
add
mov
sub
xor
mov
stc
sti
and
fdivrp
shll
mov
test
sbb
icebp
push
decl
add
jns
inc
js
ret
adc
fsubrs
xchg
imul
js
bound
mov
mov
je
xor
out
fidivl
shll
mov
ds
dec
xchg
sahf
add
mov
enter
sar
push
pop
movb
imul
leave
jge
and
enter
add
subl
sbb
ljmp
mov
push
roll
mov
xchg
mov
call
add
or
xchg
xchg
add
and
ret
xor
ret
cmp
shrd
add
lock
pop
xchg
xor
daa
lds
or
addb
mov
shll
les
pop
imul
sub
int3
pop
cmp
dec
inc
jg
orl
sbb
add
xor
xor
and
xchg
jne
mov
fisttpl
sbb
mov
mov
or
jmp
rcrl
pop
xchg
pop
add
or
and
inc
mov
jns
rolb
xor
or
add
iret
pop
clc
ret
push
sahf
nop
sbb
or
xchg
adc
push
mov
add
push
push
add
mov
pop
andb
push
push
test
push
enter
popa
inc
xchg
fisttps
jg
push
add
push
or
nop
mov
mov
dec
or
lods
outsb
cmpsb
xchg
fstpl
inc
data16
cmc
cmp
dec
test
dec
sahf
adc
roll
push
fiaddl
or
inc
push
in
push
mov
sbb
push
pop
push
adc
inc
pop
inc
test
aam
pmulhuw
shrb
adc
push
xchg
sbb
fadds
push
cmp
dec
sub
jb
mov
mov
inc
push
jle
inc
leave
add
pop
adc
cmp
pop
and
inc
xchg
push
add
pop
ret
scas
inc
cs
lahf
or
or
aad
dec
and
fisttpll
clc
add
xchg
pop
and
dec
and
jle
dec
aad
and
cmp
setb
push
das
out
push
mov
sub
cmp
setae
pushf
sub
fiaddl
inc
add
add
addr16
push
movl
hlt
mov
nop
or
insb
lret
jno
jno
pop
cmpsb
and
call
jl
pop
iret
sub
cmp
mov
xchg
enter
sub
push
push
cltd
add
push
aad
push
or
es
pop
pop
icebp
shlb
je
pop
je
sar
cmp
bound
mov
sub
push
push
loopne
cmc
stos
sbb
lods
push
fimull
push
sbb
sbb
pop
add
loop
mov
mov
std
sub
adc
daa
int
dec
push
push
inc
push
push
or
push
inc
and
inc
mov
lahf
sub
add
dec
push
pop
insb
in
cmp
in
adc
leave
sub
fwait
int
mov
cmp
ja
movzbl
js
pushf
fldcw
outsl
xchg
cmp
xchg
jge
testl
add
add
jbe
adc
sub
add
movsb
loopne
aas
sahf
outsb
ret
adc
or
or
cmp
or
cmp
pop
inc
and
and
jae
pop
ret
aas
or
test
adc
pop
mov
lea
mov
add
jg
mov
xor
xchg
dec
pusha
jmp
scas
insl
mov
cmp
nop
lret
inc
xor
rorb
xor
in
adc
sub
push
sahf
sub
jo
or
outsb
add
popa
push
out
pop
je
imul
xor
je
jo
pop
push
xchg
mov
shlb
cmp
xchg
rolb
movsb
pop
in
nop
add
xchg
xor
fwait
pop
pop
jg
ds
dec
add
mov
sbb
bound
push
nop
mov
out
test
jne
push
inc
pop
movsb
add
sbb
stc
mov
ds
lea
xor
push
and
pusha
js
mov
test
xor
mov
sbb
sbb
cmpb
and
or
adc
or
adc
add
mov
jmp
push
adc
and
ja
subps
xchg
mov
dec
shll
mov
sbb
xor
add
movsl
push
push
movsb
and
inc
movsb
sbb
sub
jl
pop
lret
push
xorb
sbb
pop
sub
lods
hlt
adc
cwtl
daa
adc
pop
xor
sub
mov
xchg
mov
je
cld
push
mov
pop
push
push
push
dec
mov
and
movsb
pop
aad
pop
iret
movsl
lea
out
cli
sbb
shrb
sbb
dec
and
sbbb
fsubrs
mov
and
mov
dec
push
mov
dec
pop
xchg
dec
mov
add
push
push
and
inc
rcrl
xor
scas
scas
mov
push
xchg
push
xor
mov
iret
lock
or
sbb
movsb
push
or
cmp
xor
cmp
cs
add
mov
addr16
add
ret
cltd
movsl
pop
mov
xchg
jl
mov
mov
push
ljmp
push
ror
sub
outsb
add
clc
or
je
les
add
add
fistl
lcall
xor
fs
inc
aad
add
sbb
fadds
stc
cs
pop
or
xlat
push
and
xor
test
add
sbb
lret
push
sbb
dec
sub
or
cmp
or
scas
ret
add
mov
mov
and
pop
mov
lods
push
or
movsb
mov
cs
sub
fcomps
mov
js
mov
and
int3
cltd
pop
cltd
or
jg
pop
add
push
push
mov
xchg
inc
lcall
pop
rcl
lds
aam
dec
add
insb
in
sti
mov
je
cmpb
mov
inc
es
cmpsl
lcall
mov
test
add
enter
adc
push
and
daa
sbb
and
mov
push
pusha
sub
xchg
sub
add
and
sbb
testl
mov
pop
and
pop
push
lret
or
fsubrs
push
clc
dec
cmp
add
inc
outsb
rorb
movsl
movsl
jmp
loopne
inc
sub
and
rolb
mov
push
dec
adc
cmpl
lods
pop
jl
sub
adc
jae
dec
ljmp
xor
adc
pop
sub
popf
push
lcall
mov
sbb
icebp
dec
sbb
jo
dec
cli
and
and
mov
nop
imul
jge
or
enter
popf
dec
cmp
ja
xor
push
adc
test
push
mov
or
lea
push
sbb
add
aas
adc
push
lods
lcall
sub
scas
mov
inc
pop
push
push
push
push
ljmp
test
dec
adc
hlt
mov
add
and
jl
or
xchg
ret
arpl
pop
or
cmc
outsb
pop
jno
in
push
rorb
cvtps2pd
xor
inc
and
adc
setnp
sbb
imul
sub
push
fnstcw
cmp
shlb
and
mov
push
sub
jge
adc
and
pushf
mov
push
mov
adc
xorl
cwtl
jns
cmp
arpl
sbb
inc
mov
stc
out
cmp
or
or
mov
fldenv
jp
clc
std
je
test
mov
mov
pop
ss
adc
mov
hlt
xor
push
dec
cmp
dec
mov
les
inc
mov
mov
pop
ret
cmp
sbb
adc
push
pop
dec
mov
xor
popa
mov
xlat
rorb
adc
sbb
lods
cmp
int3
fdivs
negb
mov
xchg
sbb
test
xchg
sbb
pop
sub
cs
push
pop
push
push
or
pop
ret
push
into
js
js
mov
pop
dec
mov
insb
fdivrp
xor
ret
fldl2t
add
std
inc
sub
sbb
addl
jmp
pop
in
je
or
add
pop
add
cld
bound
add
sti
mov
stos
add
inc
inc
adc
inc
shl
pop
sub
xor
leave
mov
adc
pop
jne
repnz
xor
adc
mov
jne
push
rcl
xchg
xchg
imul
push
push
pusha
xor
add
push
and
push
adc
xor
pop
add
mov
or
in
jbe
jbe
pop
mov
fwait
lods
jo
in
push
push
inc
push
lcall
add
sub
das
mov
ds
fsubrl
push
daa
iret
or
dec
push
daa
add
pop
xor
push
adc
add
mov
mov
rcrb
push
sbb
insl
int3
push
or
adc
adc
xchg
cmc
or
sti
xchg
push
or
sbb
add
or
xorl
popf
ds
pop
cli
cmp
aam
pusha
enter
nop
or
test
pop
adc
mov
popa
push
jle
sub
add
pusha
in
das
nop
ss
push
cs
or
or
rorb
dec
sbb
shlb
pop
pop
mov
add
xor
lds
sbb
js
pop
and
pop
cmp
int3
pop
add
repnz
xchg
push
adcl
push
jle
xor
add
xchg
sbb
and
or
cld
xor
cmp
xor
or
cs
sub
jb
cld
shlb
xor
inc
sub
fs
hlt
rolb
inc
xor
and
jmp
add
shlb
cli
pop
mov
es
in
mov
inc
add
ret
sbb
sbb
cld
cmp
add
and
shlb
jg
pop
push
test
pop
fnsave
xor
dec
add
xor
das
lods
mov
sub
push
insb
sub
mov
movsl
bndstx
mov
leave
fadds
dec
sbb
sbbb
pop
lds
sbb
insl
pop
jge
je
or
or
movl
jo
sbb
dec
scas
adcb
xchg
mov
cltd
dec
cmp
call
mov
or
cmp
arpl
lcall
lods
mov
mov
xchg
mov
stos
enter
inc
mov
cmp
sub
sub
sub
mov
or
mov
mov
add
mov
or
inc
inc
movb
cmp
xor
cli
pushf
mov
fldt
cmp
ljmp
enter
sbb
aam
movsb
or
inc
ja
mov
jo
mov
dec
outsb
xchg
outsl
add
adc
and
mov
mov
repz
add
jg
push
clc
or
pop
mov
in
push
lods
sbb
mov
cmp
pop
mov
cltd
push
push
outsl
add
jne
mov
dec
sbb
sub
mov
test
mov
test
or
or
jnp
adc
sarb
add
push
sbb
add
mov
lock
lret
add
lock
lretw
sbb
mov
xchg
loop
inc
xor
and
or
into
lods
mov
cmpsb
loop
xchg
jle
adc
dec
loop
enter
push
cwtl
loope
popa
fwait
xchg
stos
pop
sbb
add
popa
sub
pop
lds
aam
rorl
sub
call
subb
and
rcrb
dec
adc
incb
pop
sahf
nop
pop
push
mov
addb
fimuls
adc
push
xor
fsts
data16
push
jg
pop
movsl
mov
inc
mov
xor
dec
jmp
into
mov
inc
nop
or
rclb
jbe
xchg
nopl
aas
pop
sub
es
sub
iret
sbb
sahf
mov
orl
shlb
sbb
xchg
cmpsl
pop
pop
pop
push
mov
int3
jp
cld
test
je
mov
push
enter
ret
insb
sbb
dec
dec
inc
mov
gs
je
dec
dec
push
sbb
ret
cmp
pop
icebp
andb
shlb
and
cmp
jl
or
test
lret
push
mov
or
jl
pop
push
adc
inc
sbb
jno
xchg
iret
adc
or
je
insl
dec
addb
or
cs
or
push
scas
sub
cld
xor
nop
inc
test
mov
and
add
mov
psubsb
add
es
and
fdivl
push
sub
and
inc
cmp
out
or
cmp
or
mov
movsl
lret
or
enter
adcb
sbb
xor
pop
dec
adc
sbb
in
adc
dec
out
inc
ss
ja
lcall
and
sbb
imul
or
fimull
xchg
aad
add
jecxz
imul
fiadds
inc
and
cmp
jo
adc
and
rep
mov
adc
jns
in
add
adc
adc
cmp
test
jns
mov
mov
push
in
add
nop
push
je
and
movsb
mov
push
add
inc
push
or
ja
ret
test
incb
push
pop
xor
roll
pushf
addl
xorb
adc
xchg
xchg
sbb
and
dec
dec
sbb
movsb
leave
sbb
add
popa
xor
leave
inc
pop
add
and
adc
fnsave
mov
inc
sbb
pop
and
ja
add
std
lea
push
mov
mov
jns
outsl
pop
clc
mov
daa
jo
addr16
popa
cmp
xor
into
lea
dec
js,pn
xor
fcomps
cmp
in
nop
inc
jl
test
jns
mov
movsb
pop
mov
cltd
add
leave
push
mov
mov
jp
fistl
jno
mov
fiadds
into
inc
push
adc
loopne
add
jb
or
xchg
dec
xchg
sub
push
outsl
sbb
fnsave
adc
inc
push
imul
cmp
inc
test
idivl
bound
cmpsl
rcrb
mov
lock
or
shld
enter
mov
pop
adc
sbb
fsubs
jae
push
js
cmp
addr16
mov
or
jg
pop
push
mov
mov
outsb
add
xor
sbb
pop
push
inc
xchg
sahf
mov
sub
cld
out
jnp
in
adc
adc
test
push
shll
pop
lods
sbb
and
and
and
les
test
push
add
dec
mov
inc
pop
or
les
fs
pusha
rorb
scas
adc
xchg
movsb
addr16
jmp
lds
imulb
or
push
andl
lds
test
add
push
sbb
xchg
popa
inc
dec
adc
ja
je
aam
test
jle
dec
clc
aas
sub
and
lea
test
jge
mov
divl
fimuls
pop
insb
pop
push
add
adc
popf
insb
test
orb
aam
fcompl
jg
push
ficompl
push
pop
add
cmpsb
add
aas
je
iret
sbb
aas
psubd
xorl
cli
xor
jne
jle
insb
push
stc
imul
subl
jmp
push
imul
ds
jbe
jp
negb
cs
push
inc
mov
test
cltd
push
test
mov
aad
dec
je
testl
jle
jb
push
adc
fsub
xchg
stos
loop
out
cmp
lea
jl
mov
js
lods
aam
aaa
lock
cld
loopne
push
orl
push
popl
insb
std
push
fs
push
pop
or
sub
adc
aas
popa
push
ret
cmp
and
xchg
or
aad
lcall
adc
shlb
adc
push
leave
xor
sub
js
leave
jae
add
dec
out
and
mov
lods
add
dec
ret
outsb
and
xchg
pop
fdivrl
and
push
add
das
ss
cmp
push
push
add
test
pop
push
ds
iret
pusha
add
sbb
dec
add
add
pop
das
mov
dec
cs
rclb
ds
sbb
sbb
lds
mov
sbb
cmp
add
movsl
inc
jb
mov
loop
aas
adc
mov
add
xor
xchg
dec
leave
push
shll
fs
xchg
in
jo
fsubrl
add
or
add
dec
loope
jecxz
in
xor
xchg
sbb
incb
jle
mov
aas
popf
pop
mov
jl
sbb
or
daa
mov
dec
scas
testb
aas
inc
movl
mov
add
fs
mov
dec
mov
das
jl
mov
mov
ds
push
outsl
xchg
lock
lahf
orb
push
push
xchg
inc
enter
ja
push
or
sbb
stos
sub
les
jp
jle
aas
addb
clc
out
jge
sbb
imul
icebp
pop
lcall
sbb
add
dec
or
jo
lock
push
sbb
or
gs
push
xchg
lds
rorb
outsb
xor
sub
add
scas
or
or
xchg
push
cld
sbb
sbb
out
andl
adc
add
adc
xor
or
nop
sub
das
push
out
imul
jmp
mov
xchg
and
or
in
xorb
jecxz
cmp
push
add
push
aas
sub
rclb
or
stos
xor
test
sub
pop
and
ds
inc
leave
shrb
shlb
sub
xchg
mov
mov
xchg
call
push
mov
sub
inc
xor
sbb
rcrb
sub
cmp
cmp
stos
popf
push
mov
cmp
or
pop
adc
mov
popa
mov
or
pop
hlt
data16
je
jg
jo
nopl
push
add
sti
mov
push
add
sbb
lea
sbb
push
push
push
inc
jg
xchg
push
jg
insl
adc
sbb
out
fdivrl
push
xrelease
std
and
push
int
push
xor
push
jb
push
mov
lods
push
movsb
dec
in
mov
mov
push
add
cmp
lods
xor
shll
push
jge
inc
inc
into
push
adc
and
and
daa
and
mov
push
adc
mov
rclb
mov
fwait
cmpsl
jo
push
inc
add
outsl
sbb
mov
add
lea
cmp
insb
lret
aam
add
sar
rclb
lahf
and
sahf
jl
dec
add
clc
mov
es
out
cmp
aaa
push
sub
xor
smsw
push
mov
pop
mov
ret
cmpl
mov
stos
dec
ret
xchg
push
inc
push
adc
dec
sbb
es
push
pop
mov
jb
xchg
dec
pop
and
xchg
xor
adc
dec
push
or
cs
push
add
sbb
or
mov
jmp
mov
setge
add
sub
xor
mov
lcall
push
jne
lret
sub
sub
pop
lcall
in
jge
add
loope
arpl
add
xor
aam
jge
dec
and
dec
and
je
and
subl
stc
add
enter
sbb
sub
pop
inc
cmp
push
scas
dec
decl
xchg
sbb
push
scas
insb
xor
jmp
arpl
mov
jnp
or
add
push
push
cmp
add
inc
adc
outsb
pop
je
sbb
jecxz
mov
les
sub
insb
or
fs
pop
rclb
jge
icebp
fst
test
mov
jbe
cmc
adc
push
dec
fidivs
and
mov
dec
dec
mov
pop
or
test
into
mov
and
sbb
and
inc
lds
adcl
test
stc
mov
cli
add
and
or
pop
mov
leave
and
pop
or
add
add
sbb
sub
leave
or
addr16
push
scas
push
push
mov
mov
dec
outsl
loopne
push
mov
scas
test
rcrl
inc
mov
cmp
sti
and
out
or
mov
and
mov
insl
sbb
mov
push
orb
loopne
int3
xor
fcmovbe
push
lret
push
out
jp
adc
fsubrl
mov
dec
inc
jbe
dec
rcrb
movl
cld
adc
orb
mov
ret
dec
pop
mov
dec
call
add
adc
leave
or
sub
jnp
dec
sbb
xor
pop
call
cmp
mov
add
add
xor
xchg
mov
ja
add
shl
jae
rcrb
xor
aaa
add
aaa
mov
mov
out
lods
adc
clc
lods
inc
or
decb
mov
mov
cld
pop
cmp
pop
mov
lea
mov
mov
loop
mov
cld
lea
ret
adc
mov
aad
push
push
push
sub
fdivrs
dec
sbb
pop
add
xlat
sbb
jne
xchg
mov
cmp
jne
mov
push
cmp
mov
or
jns
push
adc
add
cmp
push
sub
xor
add
fs
nop
and
or
imul
cmpsb
stc
lock
mov
push
mov
cmp
pop
mov
mov
sub
add
aas
push
add
cltd
dec
mov
pushl
add
ss
mov
pop
jp
jmp
sbb
xor
jle
out
sub
dec
and
push
cmc
add
cmpb
pop
sahf
cmp
inc
cltd
adc
lea
add
cmp
scas
cltd
jecxz
and
jo
mov
sub
insl
sub
add
ljmp
mov
cmp
xchg
push
push
popa
dec
xor
or
mov
mov
dec
hlt
jge
sbbb
lcall
das
je
inc
push
push
das
mov
mov
cltd
push
cmp
nop
es
je
cmpsb
test
repnz
push
or
or
or
ficomps
jbe
adc
sahf
jl
mov
push
jg
mov
lock
add
push
push
add
push
ret
ret
push
pop
cmp
push
adc
xor
out
push
ficoml
pop
cmp
mov
ret
xorl
mov
test
rcrb
test
push
push
les
ss
jnp
dec
adcb
ljmp
jb
sub
addl
adc
pushf
push
or
cmp
adc
cld
loopne
lock
inc
movsb
and
imul
cs
mov
adc
dec
mov
lods
inc
sub
pusha
fiaddl
pop
dec
sbb
lds
cmp
mov
outsb
push
cmp
in
in
push
in
out
jno
add
inc
cmp
inc
adcb
loopne
dec
mov
sbb
add
or
mov
or
add
repnz
add
xor
cmp
and
pusha
add
adc
add
inc
inc
mov
xchg
pop
cltd
addr16
jge
aaa
xor
jae
jge
fwait
lock
mov
or
adc
cmp
jle
pusha
sub
cmp
jle
pop
lock
and
lock
push
mov
jno
jo
jl
jne
dec
int
add
or
jg
mov
push
lea
rorb
aas
push
popa
add
pop
add
xchg
xor
push
push
push
push
sbb
push
mov
add
and
test
scas
js
add
rorl
lahf
push
cmp
cmp
scas
lock
push
xchg
fidivrl
sbb
jbe
sbb
shrb
jno
dec
rolb
rcrb
shr
repnz
mov
push
xlat
inc
add
add
loop
call
mov
sub
jge
fdivs
mov
pop
jp
cmp
jb
fists
xchg
insb
shll
test
rolb
imul
int
pop
shrl
dec
lods
pop
inc
xchg
mov
add
jno
mov
orb
lcall
inc
mov
add
inc
mov
ret
pop
inc
mov
stos
xchg
cmp
cmp
adc
mov
dec
mov
xchg
mov
add
adc
adc
cld
stos
sub
sar
pop
mov
test
mov
jle
es
pop
push
push
xchg
stos
dec
fsubrs
ljmp
test
cs
int3
push
cmpsl
xor
mov
add
add
add
into
xlat
pop
ljmp
or
cmp
pop
movb
imul
push
push
push
push
cmpsl
sbb
aam
fcoms
stc
dec
push
mov
icebp
fidivs
ds
xchg
sub
push
fbld
cmp
nop
xor
xor
xchg
xchg
les
ds
jl
int3
add
pushf
mov
cmp
cmc
test
and
xor
sbb
push
mov
push
sub
movsl
repz
cmp
mov
fcmovnb
add
add
lret
shl
push
inc
mov
mov
daa
movsb
je
jmp
cmp
les
add
lret
adc
sarl
enter
test
add
cmp
sbb
mov
inc
add
fst
push
pop
mov
rcll
int
add
xchg
aas
mov
xchg
adc
and
fisttpll
push
xchg
or
pop
xor
ljmp
or
adc
fsub
daa
ret
je
or
sbbb
movsb
out
int
push
add
sub
cs
sbb
jle
and
xchg
sbb
xor
or
incl
add
ret
pop
adc
mov
xchg
rclb
add
sub
sub
es
sub
cmp
daa
xchg
adc
pop
mov
add
or
in
or
xor
sbb
or
cmp
cltd
pop
dec
loopne
fimull
adc
cmp
es
test
jecxz
lds
xor
mov
add
adc
sub
das
pop
dec
push
es
pop
xchg
rolb
sbb
shrb
add
rorb
inc
stos
push
sbb
cmpl
mov
xor
loopne
add
sbb
fisubs
int3
sub
add
mov
jle
fwait
pop
adc
test
add
shlb
mov
xor
push
mov
scas
fildl
cwtl
ret
ja
les
inc
scas
push
mov
arpl
lds
push
rorb
pop
add
mov
xchg
mov
hlt
and
sbb
es
sub
xlat
add
fists
pop
icebp
ret
adc
push
push
or
movsb
cmp
sub
fnstsw
mov
pusha
in
insb
jne
mov
sbb
repnz
push
lock
leave
pop
add
outsb
test
and
daa
nop/reserved
subb
jecxz
or
pop
or
or
pop
xor
pop
adc
adc
push
add
pop
add
jns
ret
cmpsb
cwtl
fnstenv
and
add
add
je
mov
adc
push
add
or
lds
or
test
pop
and
push
adc
and
call
outsb
out
je
mov
leave
mov
inc
dec
inc
push
ja
outsb
pusha
push
inc
inc
add
mov
xchg
sub
push
fimuls
stos
mov
push
and
add
sbbb
jmp
fsubrs
daa
int
xchg
lock
sub
es
pop
adc
fadd
loop
insl
or
inc
rorl
cmc
push
aam
push
adc
daa
xor
fadds
adc
dec
pop
cmp
insl
sbb
test
test
shll
cmpsb
sbb
inc
mov
inc
or
push
arpl
push
sub
xchg
js
fildll
outsb
push
inc
lea
popa
inc
xlat
add
inc
push
fldcw
add
pop
cmp
loop
inc
mov
jns
inc
lcall
or
sub
movsb
push
push
adc
mov
sub
or
or
mov
outsl
and
mov
add
rol
push
insb
repnz
stc
or
xchg
orb
xchg
add
into
and
or
dec
and
lahf
jae
stos
js
and
and
icebp
jne
or
add
pop
dec
rcll
add
pop
popf
adc
loop
add
sbb
es
xchg
add
jns
push
adc
mov
mov
es
test
add
mov
sbb
jbe
clc
mov
cmp
les
jne
xchg
cmp
cmp
add
jg
sti
mov
add
pushl
ret
push
loopne
clc
or
inc
aas
shrb
popf
cmp
or
inc
push
jne
fistl
mov
pop
and
sar
lock
cwtl
add
mov
loopne
pushl
cmp
rcrl
and
add
mov
mov
jg
test
orps
pop
add
mov
add
mov
sbb
add
sbb
lcall
mov
xor
repnz
inc
sbb
rcll
xor
outsb
int
dec
or
push
push
outsb
adc
cmpsb
cmp
sub
push
sub
stc
jbe
hlt
ljmp
fists
xchg
xchg
andl
clc
dec
add
pop
dec
rcll
add
adcl
adc
add
jmp
add
test
add
imul
add
jo
and
bound
mov
adc
or
js
add
out
aam
add
push
push
mov
ret
rcrb
mov
inc
mov
lcall
test
push
mov
and
lea
dec
int
incl
inc
test
fnop
dec
sarl
xor
pop
incb
adc
mov
adc
clc
jg
mov
loopne
or
add
cmp
push
push
inc
sub
or
push
push
push
js
clc
sub
pop
add
je
add
loop
mov
mov
sar
adc
imul
add
in
jle
daa
shrb
push
mov
sub
sub
insl
adc
sbb
or
cli
sbb
lea
pop
out
add
leave
sbb
pop
xor
cmp
aaa
push
es
test
sub
sub
loopne
push
shrb
pop
push
out
add
mov
push
push
push
push
faddl
mov
sub
imul
les
into
notl
add
add
lods
mov
adc
mov
std
insb
or
push
cwtl
sub
and
andb
push
rcrb
dec
filds
sbb
or
out
shll
inc
jb
push
push
scas
dec
imul
jmp
out
filds
dec
mov
mov
ret
sub
push
ret
adc
adc
jb
adc
mov
ret
cmova
push
mov
xlat
mov
push
lea
ret
pop
jp
cltd
push
fiadds
fs
push
pop
inc
push
lret
dec
push
arpl
push
aas
out
sub
mov
adc
test
push
adc
jo
jmp
sbb
xor
or
add
jg
pusha
outsl
or
add
pop
movl
pop
dec
add
popa
xchg
cmc
sub
cmpl
mov
add
sub
add
daa
orl
xchg
addb
int3
mov
cmc
call
ljmp
hlt
and
test
push
or
in
repz
or
push
adc
xor
and
add
inc
aad
cld
add
xor
pop
push
push
pop
or
jns
mov
jge
lock
add
pop
das
pop
loop
pop
xchg
lcall
adc
inc
enter
rolb
jg
push
je
xchg
mov
dec
add
shll
dec
mov
or
cltd
sbb
dec
inc
push
add
or
sbb
cwtl
pop
loop
lods
std
pop
push
call
push
nop
fmuls
push
dec
loopne
or
sti
ja
sahf
push
shr
sub
mov
sbb
adc
add
js
pop
cmpb
neg
add
inc
cld
xor
negb
cmp
add
sbb
sbb
lds
pushf
or
or
lea
ret
sbb
push
cld
dec
jmp
xor
mov
pop
loop
cmp
push
mov
inc
jp
dec
std
loope
data16
fimull
mov
pop
or
in
xor
adc
sbbl
fs
fnstcw
shlb
pusha
loope
cmp
lea
sub
push
rcll
push
es
xchg
dec
cmp
pop
push
lock
mov
sbb
aas
bound
push
mov
sub
mov
add
sbbl
adc
mov
push
push
inc
clc
push
arpl
mov
lds
mov
mov
inc
cld
xor
and
sub
mov
popl
test
clc
in
and
xor
cmp
jle
cwtl
ret
push
adc
push
mov
pusha
decb
lock
add
ja
mov
scas
lock
aas
pop
or
sar
std
hlt
lods
in
int3
push
mov
or
pushf
mov
pop
fsts
inc
inc
sub
ss
jnp
cmp
jae
mov
loop
or
sahf
fistps
mov
or
fcompl
inc
insb
stos
push
mov
pop
mov
jl
mov
clc
or
xor
and
and
or
push
ds
mov
in
xor
cmpsl
push
test
add
sbb
shl
inc
int
mov
sbb
add
dec
imul
rorl
es
xor
ret
fisttps
and
inc
inc
mov
decb
mov
jmp
test
jno
jne
push
push
add
push
aam
ds
dec
add
mov
mov
lock
fcoms
roll
out
dec
cmp
lds
repnz
in
mov
les
push
and
pop
mov
outsl
mov
xchg
rorl
and
out
movl
sbb
pushf
mov
fstps
mov
mov
and
fistl
mov
push
lahf
cltd
loop
adc
xchg
cmp
jbe
add
cmp
mov
adc
cmp
sbbl
shlb
out
pop
push
dec
div
in
shll
loopne
xor
pop
inc
add
mov
adcl
or
dec
imul
pop
mov
or
int3
jno
pop
jae
test
pop
xor
pop
mov
lods
scas
aam
mov
sub
xor
fidivrl
push
pop
sub
in
pop
pop
mov
popa
lock
outsb
mov
movl
jecxz
add
inc
inc
test
sub
sub
sbb
lods
mov
xchg
add
int3
pop
mov
sti
lret
hlt
jle
inc
int3
lea
push
les
jg
inc
js
stos
pop
call
notl
mov
xor
sub
xrelease
inc
sbb
add
testl
out
xor
add
notb
cmp
jp
sbb
pop
mov
cmp
fwait
xor
xor
inc
loopne
jmp
enter
dec
dec
cwtl
push
mulb
jne
jp
sbb
adc
push
test
jb
mov
xchg
sub
jo
cmp
popf
inc
movsb
fsub
add
mov
das
add
pusha
imul
pop
movsb
cmp
sub
jb
adc
cmp
shlb
daa
jle
lods
mov
dec
xchg
sub
out
dec
pop
testl
add
movsb
inc
jmp
cmp
jne
scas
aad
push
jl
mov
stos
or
sbb
cs
dec
add
movsb
stos
in
add
cmp
cmp
mov
xor
jne
push
mov
mov
push
test
push
into
mov
xchg
rorl
xchg
mov
iret
fcompl
jae
add
push
loope
fsub
dec
xor
fldl
xor
fwait
mov
rorl
pop
mov
mov
pop
add
rcl
popa
popf
in
insb
push
jp
outsb
dec
lret
jl
mov
sub
pop
xchg
sti
push
sub
lds
sahf
out
mov
push
mov
sbb
mov
enter
add
push
insb
lret
jp
sub
push
pop
fdivr
gs
insb
loope
leave
test
xor
push
xlat
dec
or
sbb
xchg
xchg
inc
adc
cld
push
push
nop
pop
loopne
push
cs
mov
pop
enter
dec
xor
mov
mov
shll
pop
ret
mov
xchg
test
or
inc
outsl
and
sub
adcb
jns
cltd
dec
xor
and
lock
shrl
leave
inc
pop
push
jnp
push
out
nop
or
sub
outsb
cmp
or
mov
hlt
jmp
rolb
push
es
and
jl
adc
subb
pop
xchg
dec
outsl
pushf
add
push
andl
xor
add
sub
and
adc
xor
mov
mov
cmp
add
fdivrs
jne
push
adcl
cltd
sub
inc
lock
cmp
adc
cmp
lret
nop
sbb
xor
sbb
in
push
inc
push
add
push
lock
ds
adc
or
pushf
repz
or
rorb
test
imul
je
loope
inc
and
jle
add
daa
add
ss
test
pop
mov
push
cwtl
inc
push
sub
test
sub
fcoml
push
inc
out
test
dec
incl
les
dec
std
fadds
ret
or
ret
lods
jp
xor
cmpsl
xor
mov
push
inc
and
mov
adcb
push
xor
jnp
jno
adc
mov
inc
sbb
roll
scas
push
pop
fcoms
push
mov
in
push
int3
jns
sub
mov
pop
jns
sbb
adc
jne
dec
adcl
dec
sbb
mov
dec
mov
mov
in
push
add
loop
movl
hlt
mov
add
inc
push
jns
cmp
cmp
rorl
lcall
cmp
cmp
xor
inc
and
cmp
mov
lods
or
mov
cmp
mov
lret
scas
enter
fstpl
pop
or
addl
sub
mov
push
aam
lea
mov
jp
sub
push
jne
jmp
xor
bound
pushf
mov
pop
imul
je
mov
add
scas
mov
cmc
mov
add
movsb
rclb
xchg
rclb
daa
sahf
cmpsb
pushf
push
inc
xor
xor
jne
outsl
mov
push
imull
test
imul
pop
mov
dec
call
mov
pop
jno
mov
xor
cmpsb
aad
test
push
sub
cmp
push
bound
jb
popa
and
xor
pop
inc
xor
arpl
mov
jno
leave
xor
and
xchg
nop
jmp
cwtl
shll
and
mov
jb
jb
jmp
daa
ds
mov
push
jle
mov
and
insb
sub
jmp
and
pop
or
mov
enter
sub
push
adc
mov
ret
sub
rcl
push
into
add
fildll
test
push
dec
clc
xchg
jmp
pop
mov
inc
add
js
rolb
js
insb
xor
pop
jbe
sub
int
adc
or
jne,pn
mov
mov
sub
mov
lock
xchg
sbb
lods
fmuls
cmp
adc
das
js
sub
sub
xchg
and
jle
insl
in
xor
xor
js
stos
pop
roll
xor
xchg
pusha
inc
xor
sbbl
das
ret
xchg
xor
pop
ret
and
lret
fldt
movsb
sbb
bswap
insb
push
adc
ret
jb
xor
xchg
push
in
loope
xor
mov
loopne
adc
xor
mov
fiaddl
into
ja
dec
push
push
cltd
inc
add
push
push
push
ja
dec
fsts
pop
mov
pusha
insb
pop
xor
jo
aaa
ret
inc
xor
flds
cld
dec
sbb
jo
mov
cwtl
jo
mov
xor
pop
push
cmp
aaa
arpl
mov
sub
inc
jnp
lods
xchg
jg
inc
sbb
add
test
mov
or
pushf
sub
and
pop
or
lea
cli
fsubr
mov
xchg
sbb
push
cmpl
jnp
cwtl
push
dec
or
mov
push
mov
add
jne
pop
shrl
clc
jbe
jno
sbb
mov
jmp
xor
scas
repz
push
pop
or
sbb
mov
nop
je
inc
jl
cmp
sbb
popa
xor
and
push
mov
sbb
cmp
xchg
cmp
xor
xchg
popa
rorb
push
lret
sub
push
inc
or
test
adc
add
push
add
jne
xor
adc
adc
sub
mov
push
call
mov
mov
dec
insb
push
sub
sub
out
and
push
fdivrp
aaa
mov
dec
pop
push
jb
repnz
add
mov
in
pop
sub
sarl
fs
shrb
cmc
and
mov
xchg
sbb
ds
lods
lcall
movsb
sub
jns
cwtl
ret
adc
jb
jl
inc
push
js
loop
mov
mov
jnp
dec
dec
xchg
cmc
mov
mov
jmp
or
pop
push
push
pop
mov
dec
fsub
aaa
inc
cmp
jno
sbb
and
cmp
xor
inc
add
add
cmp
add
cltd
sub
pop
adc
test
and
push
mov
lret
xchg
aaa
loopne
shll
das
push
add
and
jecxz
flds
mov
mov
push
and
push
add
popa
lods
nop
add
add
push
xlat
pop
cmp
outsl
cwtl
dec
and
jge
fcmovbe
adc
add
addb
xor
and
lods
test
lock
sbb
mov
push
adc
mov
push
add
lret
mov
imul
andl
or
sub
mov
push
sarb
movsl
cmp
mov
inc
cmp
jl
mov
jne
mov
lds
pop
sbb
in
movsl
xor
jmp
movb
ss
movsb
sbb
fs
or
mov
or
inc
push
and
push
in
dec
sbb
test
nop
push
add
and
xor
shll
enter
push
or
ljmp
jne
jge
js
jl
mov
sub
js
dec
and
lock
insb
mov
mov
outsb
outsl
push
sbb
xor
pop
mov
push
or
mov
sub
push
xchg
ret
xchg
je
test
ljmp
and
dec
or
pop
loop
sbbl
and
push
jo
pop
dec
aad
or
pop
add
xor
adc
hlt
andnps
dec
adc
sub
add
mov
mov
cmpsb
sarl
cmpsb
and
adc
rcll
pop
popa
adc
dec
lret
and
nop
xchg
cmp
adc
and
aam
jmp
popf
fs
mov
rorl
adc
pop
mov
shll
or
repz
cmp
dec
ret
je
inc
stc
cmp
inc
pop
aam
adc
mov
cmp
mov
xchg
addr16
push
hlt
lock
mov
sbb
add
push
icebp
sub
dec
adc
stos
test
lea
sbb
imul
mov
add
pop
mov
push
add
add
in
jbe
ret
orl
cltd
and
cmpsb
mov
inc
xchg
mov
in
push
sbb
test
les
lea
filds
dec
sti
push
push
inc
cmp
sbb
cmp
aad
and
in
into
jmp
lea
push
push
popa
cmp
pop
call
test
insb
or
or
lock
jge
jge
cmp
test
rcrl
or
aas
and
sbb
cmpsb
jo
adc
pop
imul
push
pop
mov
ret
push
fnstenv
mov
or
push
cmpsb
popa
pusha
adc
cmpsb
loope
mov
je
and
cld
xchg
dec
in
adc
sub
sbb
arpl
or
or
add
out
daa
enter
cs
or
dec
sub
pop
push
imul
ret
push
jge
dec
shlb
inc
adc
pop
ficoms
lea
lea
jl
sub
icebp
adc
or
imul
pop
push
push
add
mov
icebp
dec
iret
fstps
push
jg
and
mov
cs
adc
or
inc
jb
and
add
cmp
sub
and
xchg
sub
pop
pop
arpl
pushf
mov
adc
dec
movsl
add
inc
push
xor
xor
dec
sbbl
inc
pushf
movsb
lret
test
xor
dec
sub
dec
mov
jnp
sbb
xchg
xor
cmp
aas
cmp
and
pushf
pop
inc
adc
or
xchg
sahf
fmull
cmp
lock
mov
or
xabort
call
and
push
sbb
shr
movzbl
ss
adc
mov
and
push
push
rcll
dec
mov
add
push
dec
and
js
and
fbld
das
insl
inc
les
cmp
fsts
mov
push
cmp
es
mov
das
pusha
add
pop
mov
ss
dec
cmp
inc
stos
jbe
push
sahf
sub
adc
int3
mov
sub
jne
lahf
dec
js
mov
outsb
mov
pop
push
fwait
aam
xchg
icebp
mov
xor
sbbb
lret
push
xchg
nop
out
xlat
iret
mov
adc
insl
push
push
ret
ret
mov
js
das
xor
xchg
sbb
fcmovnu
daa
push
cltd
xchg
add
mov
inc
push
jns
and
mov
lret
add
mov
dec
enter
scas
lret
sub
sub
cmp
sbb
jne
filds
push
push
sbb
fs
lds
mov
xor
mov
and
dec
sub
adc
xchg
dec
repnz
les
das
cmpsb
lea
dec
mov
push
rcl
push
mov
jne
dec
or
adc
mov
test
adc
cmpsl
or
insb
jge
cmp
incl
add
add
xchg
inc
data16
adc
mov
insb
cmpsl
mov
add
lods
cld
daa
or
mov
clc
subl
stos
or
xchg
and
fwait
lea
je
pop
je
pusha
std
inc
je
or
inc
lds
fwait
sbb
push
outsl
mov
addb
cmpb
mov
repnz
adc
adc
test
sbb
xor
es
stc
sub
inc
cmp
dec
xor
inc
cmp
dec
in
test
sub
adc
call
mov
add
or
sbb
add
push
or
mov
push
adc
les
repz
cs
fldt
std
sub
incb
sub
dec
cmp
into
push
cmc
jecxz
mov
jl
clc
mov
pop
mov
repz
cmc
xor
push
add
ret
push
sbb
pop
mov
sub
add
sbb
hlt
add
cs
push
add
sbb
into
dec
hlt
sub
pop
inc
dec
push
jo
cmpsb
mov
jge
mov
fildll
add
adc
push
inc
push
inc
mov
dec
pop
popf
leave
and
and
mov
adc
cmp
mov
xor
cltd
and
xor
in
xor
cmp
ret
mov
scas
pop
xchg
push
adc
inc
xchg
aam
cmp
mov
mov
add
fwait
shlb
mov
push
adc
and
adc
mov
in
shrb
push
aaa
or
insb
and
fs
sub
cld
test
cmc
test
nop
inc
ss
adc
sbb
lea
loope
btr
push
mov
popa
mov
sub
jns
mov
inc
arpl
mov
orl
lods
stos
xor
xor
mov
hlt
movsb
dec
hlt
add
outsl
lds
or
jg
cmpb
jne
add
dec
xor
daa
adc
inc
or
inc
lods
xchg
cli
and
inc
int
sbb
and
nop
jg
sbbb
addr16
in
call
in
inc
xor
mov
pop
inc
mov
pop
mov
movsb
daa
stos
push
adc
push
mov
push
pop
push
mov
ret
sahf
dec
je
pop
pop
push
bound
adc
mov
ds
stos
mov
adc
test
mov
cli
js
sub
inc
movsl
movb
adc
or
pop
xchg
pop
adc
inc
or
sahf
outsb
les
mov
dec
inc
add
test
mov
xor
xor
sahf
cs
xor
loope
jmp
pusha
test
stc
mov
pop
test
out
inc
cli
push
lea
cwtl
out
sub
in
iret
pop
fdivs
in
pop
sub
rorb
ret
lods
int
sar
enter
or
fcomp
sbb
lcall
and
insb
xchg
mov
add
add
adc
imul
push
pop
mov
pop
push
lods
mov
in
push
or
xor
mov
xchg
arpl
stos
add
inc
inc
cli
push
xchg
mov
enter
sbb
jg
in
lcall
push
push
sub
add
add
pop
and
push
xor
mov
push
adc
or
test
lret
inc
hlt
inc
les
push
cs
jno
adc
aad
dec
xor
sub
sub
sahf
push
popa
test
test
jp
or
adc
or
fs
adc
pop
and
xor
lods
dec
lret
lret
mov
stos
adc
movsb
sbbl
pop
int
jge
test
push
adc
or
pop
jb
pop
test
call
pop
add
and
add
push
mov
cmpsb
mov
inc
jecxz
das
jne
cmpl
add
getsec
bound
dec
or
movsb
add
jmp
push
popa
lods
mull
shr
out
pop
push
imul
insl
and
ret
nop
in
scas
or
push
rolb
rolb
add
mov
rorl
scas
pop
adc
test
cmpsl
jmp
mov
adc
or
icebp
bound
dec
sbb
and
lret
je
dec
mov
adc
and
or
sbb
imul
mov
cmp
add
shlb
xchg
or
test
xor
fidivs
insb
movsl
xchg
je
repnz
or
inc
mov
popa
add
push
or
daa
pop
jno
or
or
jne
xor
mov
push
or
dec
xchg
fst
xchg
mov
and
mov
repz
push
pop
add
mov
fsubs
adc
aad
jne
jo
jg
and
jl
je
outsl
mov
pop
xor
imul
sub
lret
and
jns
sub
adc
jge
leave
roll
push
inc
sbb
leave
aad
ljmp
mov
cwtl
dec
sbb
push
fmulp
add
js
push
popa
xlat
mov
pop
jmp
and
daa
push
add
and
and
leave
xor
adc
sbb
movsb
add
mov
or
inc
es
push
int3
data16
pop
mov
jb
lea
daa
out
adc
sub
enter
mov
push
inc
cmpsl
aam
ret
xor
subb
inc
into
sbb
push
inc
cmp
scas
inc
and
orl
fdivl
pop
xor
pushf
cmc
dec
lods
jne
ret
mov
int
mov
rcll
gs
push
push
rcll
and
push
cwtd
inc
adc
and
add
std
jne
mov
dec
jne
faddl
push
xchg
imul
xorb
daa
pop
aam
fdivrl
mov
sub
dec
aad
insl
pop
les
shr
ror
inc
sbb
push
xor
mov
pop
inc
js
shl
mov
clc
add
add
adc
mov
rcrb
or
icebp
add
aam
rorb
or
enter
push
add
add
add
stos
aaa
gs
or
movsb
shlb
pusha
push
into
add
push
add
xor
ds
jb
jmp
and
xor
or
sbb
cltd
adc
sub
push
sub
xchg
sub
and
pop
mov
movl
rcl
stc
push
push
push
dec
dec
ds
adc
or
sbb
les
sahf
inc
sbb
gs
adc
cmp
jns
or
nop
mov
xchg
inc
xchg
sbb
clc
aam
jge
push
pop
cmpl
add
loope
rep
lods
sbb
push
mov
jg
mov
pop
cmc
xchg
push
mov
push
cs
and
mov
fisubrs
adc
add
push
cmp
movsb
lods
int3
dec
and
jno
mov
push
xchg
cmpsl
test
stos
or
add
push
sbb
add
push
sbb
sbb
jg
adcl
aam
dec
adc
outsl
pop
inc
leave
inc
fmuls
push
lea
sti
push
fsubl
add
aas
jl
test
jb
xor
xchg
lea
mov
mov
push
mov
and
sub
aam
lcall
add
xchg
mov
push
fldpi
adc
mov
cmp
mov
ret
cmc
pop
ret
stos
and
xchg
or
adc
movsb
jg
outsl
lcall
mov
pop
mov
add
enter
push
sar
pushf
or
xchg
sub
enter
aas
push
push
push
lock
std
cli
xchg
sbb
push
jle
mov
pop
sub
nop
hlt
loope
and
push
mov
pop
push
sub
push
jl
and
push
cltd
push
icebp
sbb
bound
add
dec
adc
xor
and
adcb
jmp
fsubl
jp
xchg
push
pop
or
mov
jnp
idivb
test
fxch
push
ds
pop
and
xchg
push
jno
xchg
push
repz
cmp
stos
lock
inc
out
mov
out
push
dec
cmp
je
cwtl
adc
add
pop
scas
sub
adc
pop
mov
addb
add
jp
js
into
test
jecxz
add
pop
mov
ja
jle
xchg
add
lea
cmp
jne
cmp
aaa
iret
push
sbb
and
lcall
dec
test
add
addl
adc
or
push
jmp
rorb
and
ret
jne
inc
dec
fs
mov
int
insb
cmpl
cmp
hlt
pop
xchg
add
push
mov
rcrb
xor
mov
xor
aam
aas
cmp
je
inc
add
cmp
jl
jmp
jge
cmpb
mov
cmc
dec
push
add
or
mov
gs
sbb
fs
and
add
sbbl
xor
lods
add
inc
adc
idivb
jmp
sub
add
sbb
daa
cmp
cltd
push
je
mov
inc
pop
imul
das
mov
sub
aam
add
mov
aam
movb
in
ficompl
call
push
sbb
ret
xchg
and
shr
insb
lea
and
test
std
and
inc
cmpl
mov
cmc
pop
push
push
aaa
and
fcomp
sub
mov
je
lods
sti
jmp
xchg
or
fs
mov
xor
and
xchg
adc
add
add
ret
sub
push
cmp
add
cmc
fwait
nop
inc
mov
call
jge
lahf
test
iret
or
push
and
add
rorb
inc
out
call
xchg
movsb
jns
insl
mov
push
mov
in
pop
push
call
nop
divb
loopne
orl
fisttpl
js
fnstcw
mov
idiv
cltd
in
xchg
or
mov
mov
pop
jb
xchg
and
jg
inc
inc
addl
clc
adc
pop
and
push
cli
adc
add
cmovl
add
test
inc
inc
add
dec
mov
cmp
xchg
pop
or
shlb
sub
or
and
mov
dec
stos
movsl
pop
test
pusha
push
mov
xchg
insl
xchg
pop
jbe
mov
push
and
add
xor
test
jo
push
and
mov
lods
int3
and
add
jnp
adc
and
and
adc
adc
cmpsl
or
jl
adc
push
rcl
sub
push
shrb
pop
add
inc
add
add
or
cmp
or
cmp
xor
push
or
pop
scas
ljmp
push
xor
adc
sub
push
bnd
add
int
push
adc
dec
pop
and
or
sub
pop
or
pop
mov
jecxz
xchg
push
jne
jb
xorb
pusha
jne
pop
mov
fnstcw
mov
sub
mov
sbb
daa
add
adc
or
and
fstps
fisubrl
cmp
jne
cmp
jb
sbb
leave
cmp
mov
jae
cmp
out
cli
jmp
xor
lock
stos
add
ja
push
push
loopne
lock
or
pusha
in
sbb
aam
sub
sub
adc
mov
ret
inc
or
in
cmp
inc
nop
int3
xor
outsb
mov
add
add
das
dec
pop
push
addl
cmp
jl
pop
ds
pusha
and
jle
cs
mov
mov
or
mov
jl
lcall
add
movb
add
mov
push
mov
mov
inc
xor
mov
sub
or
out
inc
add
mov
add
mov
add
test
test
pop
rorb
stos
xchg
lock
es
mov
mov
in
sub
jo
inc
mov
nop
mov
test
insl
dec
or
xchg
outsl
insb
inc
cmp
das
inc
fistl
addl
add
je
mov
into
inc
pop
add
lds
sbb
mov
ja
dec
jo
aas
sbb
xchg
push
add
cmp
push
and
and
subl
loopne
xor
inc
test
out
and
pop
xorb
repz
mov
jmp
or
adc
xchg
inc
cld
inc
outsb
testl
xor
and
gs
icebp
dec
mov
lods
sbb
pop
jl
mov
ret
or
jo
dec
or
pusha
cld
xchg
test
and
or
adc
data16
push
jecxz
mov
rorl
push
and
add
sbb
adc
xchg
cmp
or
and
dec
cmpsl
sub
arpl
adc
and
sbb
add
scas
sqrtps
or
jmp
adc
or
addr16
adc
xlat
jbe
cmp
mov
imul
scas
jecxz
enter
dec
sub
or
sbb
jmp
incl
and
mov
inc
lock
cwtl
addl
inc
es
inc
les
push
pop
push
mov
out
rol
or
cmp
leave
mov
je
lock
sbb
add
addl
sub
adc
cmp
mov
mov
sbb
mov
loopne
pop
gs
jmp
add
xchg
icebp
imul
xchg
mov
cmp
cmp
imul
cmpsl
test
popa
xchg
push
aad
mov
jge
xor
dec
pusha
in
push
dec
hlt
mov
adc
mov
mov
pop
je
mov
or
push
call
inc
push
adc
cmp
xor
dec
sahf
stos
adc
inc
pop
adc
ljmp
xchg
mov
or
xor
add
cmp
in
xchg
les
dec
mov
mov
mov
dec
xchg
add
xor
sbb
sti
adc
sub
cmp
out
jns
add
sub
add
cmp
das
sub
ret
cmp
push
xor
sub
in
sub
cmp
xchg
in
mov
test
rolb
xchg
inc
sub
int3
push
xor
lret
sbb
add
push
push
nop
add
add
and
and
add
sub
dec
xor
xor
add
inc
cmp
push
push
nop
lret
inc
or
inc
push
test
pcmpgtb
mov
inc
add
push
mov
sbb
cmp
lea
popf
and
mov
cs
mov
fadds
nop
and
aam
fidivrs
loopne
pop
add
dec
mov
or
xlat
dec
sbb
and
fsubrs
outsl
ja
icebp
push
movl
sbb
sahf
in
mov
mov
lahf
mov
rorb
mov
pop
cmp
add
jo
dec
popf
lods
cs
mov
and
add
fs
inc
lea
loope
aas
push
cmp
mov
sbb
mov
rclb
dec
lcall
mov
and
and
sbb
sbb
ja
setne
sub
inc
fs
rorb
and
inc
or
int
or
and
or
xor
sub
rorb
and
sbb
add
add
inc
rorb
or
aas
sub
mov
mov
adc
add
and
xor
clc
add
lods
push
lea
rcrl
daa
std
inc
jmp
cmp
sbb
mov
loopne
daa
add
cmpsb
fs
xchg
sbb
sbb
addl
push
jnp
jne
sbb
cmpsb
sbbw
xchg
aam
or
orl
dec
popa
adc
mov
ret
mov
pusha
clc
jne
push
and
sbb
xchg
cmpsb
push
lea
fsubp
sbb
xor
sbb
cmovs
inc
push
loopne
cmp
ret
adc
or
out
lcall
lods
pop
mov
sbb
addb
je
or
cmpsl
push
sbb
xor
add
mov
in
or
fdivrl
jge
dec
push
or
outsb
and
xor
add
and
add
int
add
test
mov
in
dec
and
and
xchg
insl
mulb
sub
xor
mov
out
jns
push
mov
lea
sub
sub
in
adc
pop
or
sbb
sbb
in
inc
push
cmp
dec
pop
mov
or
push
push
dec
pop
lods
sub
sub
cmp
cli
pcmpeqw
push
push
test
pop
or
lods
fsubp
movsl
xchg
cmp
jne
enter
insl
inc
call
std
mov
dec
jecxz
or
and
push
pop
jne
inc
xchg
push
mov
icebp
dec
xchg
shlb
sub
adc
mov
mov
push
hlt
dec
mov
inc
ficoms
push
hlt
or
aam
jns
mov
imul
sbb
cld
xor
mov
enter
push
sbb
in
and
sbb
push
addb
call
add
mov
push
and
cmp
sti
add
push
sahf
jmp
je
push
mov
cwtl
stos
push
out
insb
inc
xchg
push
stos
adc
push
sti
pop
push
sub
add
sbbb
push
or
and
fs
push
adc
scas
mov
clc
xor
test
or
or
jnp
xor
addl
add
imul
mov
push
add
and
push
inc
cmp
sbb
sub
jmp
add
add
or
mov
test
xchg
cmp
push
lcall
push
mov
movl
sub
outsb
lock
or
push
pop
mov
repz
cwtl
mov
ss
inc
adc
sub
and
add
fisttpl
mov
pushf
out
adc
mov
pop
jb
xchg
jg
aad
pushf
sarl
push
jge
add
mov
xor
sbbl
push
push
inc
fadds
les
sbb
fisttpll
fildl
sbb
je
mov
dec
rcrl
dec
or
jns
scas
cld
dec
fcoml
lock
fsts
mov
testb
push
aaa
out
xchg
loopne
incl
inc
or
pop
in
push
pop
inc
push
aad
je
sub
or
insb
sub
push
pop
in
sarl
mov
cmp
xorb
orb
cmpb
xor
movsl
xor
xor
cmp
psubsb
lds
nop
xor
xor
cmpb
push
push
sub
xor
sub
and
ret
xchg
mov
add
ret
push
jg
pop
das
mov
imul
ret
lahf
push
imull
out
cmpb
adc
lods
movb
fmull
adc
push
mov
dec
hlt
or
xchg
xor
jo
or
adc
adc
and
dec
dec
push
dec
loop
inc
pop
xlat
fbld
adc
jno
rcrl
pop
dec
in
pop
fs
jle
cmp
ljmp
or
adc
xchg
aam
lahf
sbb
sti
jmp
mov
dec
xchg
add
lahf
inc
xchg
cmp
push
in
loop
fs
and
inc
test
adc
es
push
jl
bound
cmpsl
icebp
fucomp
lea
push
popa
pop
add
das
push
lods
notb
lock
sbb
xchg
jo
movsb
cmp
and
dec
and
and
iret
push
dec
dec
or
pop
or
nop
les
sub
jo
or
and
and
flds
push
jl
je
adc
rol
xor
or
cmp
jns
xor
push
repnz
movups
movsb
sbb
adc
and
xchg
data16
sub
int3
or
inc
push
insl
inc
test
and
xchg
popa
cmp
stos
inc
sub
add
rorb
jo
leave
push
cmpsl
add
mov
adc
popa
pop
adc
adc
adc
cltd
and
jle
add
hlt
or
adc
addr16
sub
sbb
push
nop
mov
xor
add
cmp
sbb
pop
inc
bound
jb
lock
jb
add
movb
jae
stos
inc
sbb
push
pop
xor
mov
aaa
pop
xchg
add
adc
lret
push
push
pop
push
pop
xor
and
pop
daa
ret
lret
pop
jbe
ret
pop
pop
xor
sbb
xchg
or
leave
pop
push
and
push
pop
mov
mov
mov
test
cmpl
and
sub
fs
sub
les
xor
jl
and
add
push
adc
sub
add
sahf
clc
push
jne
pop
fldl
or
xor
or
sub
faddl
adc
mov
sbb
cwtl
mov
loope
enter
adc
dec
fstl
cmp
dec
add
inc
mov
xchg
lret
inc
das
sub
fidivrs
aad
cmp
subl
dec
or
sbb
push
mov
push
and
mov
sbb
xchg
test
inc
hlt
outsl
cmp
fdivr
call
and
push
mov
and
or
imul
rcll
jo
pop
sub
lock
outsb
push
test
cld
movsl
push
dec
popa
shl
lea
mov
inc
add
mov
mov
jge
js
jecxz
add
sti
sahf
dec
push
push
mov
inc
mov
and
mov
js
push
xor
mov
lss
pop
ret
jl
loopne
dec
jge
cmp
mov
rcrb
sbb
inc
and
sub
sub
sub
dec
xor
sub
xor
xor
sub
mov
sbb
push
mov
cmp
je
les
ljmp
sbb
fsubrs
pop
sub
adc
add
int3
push
jl
lock
pop
insb
inc
rcl
inc
jl
mov
lcall
cmp
mov
jne
push
jmp
sbb
scas
lea
sbb
jmp
rorb
push
or
or
sbb
ret
mov
dec
add
mov
jb
les
sub
aaa
dec
mov
cltd
cmp
loopne
add
outsl
or
push
xchg
adc
add
mov
jmp
mov
jne
stos
mov
inc
xor
fwait
in
roll
or
sbb
or
cmpsb
es
pop
add
loopne
mov
iret
adc
rcll
push
stos
test
mov
or
stos
rcrl
lds
sbb
test
add
push
dec
test
adc
mov
aas
inc
dec
push
mov
and
xor
push
cmp
or
push
xchg
rolb
pinsrw
add
cmp
xor
test
pop
xor
sbb
ret
pop
sbb
xor
cmp
xor
and
xor
ret
add
and
cltd
cli
pop
loopne
mov
dec
add
sub
cld
push
jo
fdivr
pushl
stc
cld
jne
or
test
mov
jl
or
test
int3
adc
into
aam
and
sub
cmpsb
sar
inc
mov
je
or
mov
cli
mov
nop
mov
in
mov
icebp
cltd
dec
jmp
or
out
xlat
cli
inc
xchg
jno
or
add
pop
addb
addr16
and
push
fs
pop
mov
loopne
ja
sti
decl
orl
or
sub
sarb
jle
test
and
les
dec
mov
adc
push
test
sbb
jns
or
cmp
mov
push
add
lds
ss
pop
fs
push
sahf
dec
jns
add
test
adc
addr16
xchg
inc
inc
and
mov
cmp
dec
xor
xor
adc
push
pop
xchg
and
jb
pop
addl
and
push
bound
fdivrp
cld
jle
movsb
sub
mov
pushf
xorl
nop
or
ja
fs
js
fs
dec
adc
aas
pop
leave
in
subb
cmp
or
pusha
jg
xchg
dec
es
pop
je
sub
add
xor
cmpsl
insl
lds
or
push
push
fildll
mov
lds
cmc
mov
sbb
popa
mov
jb
sub
popa
mov
add
cmp
inc
cmp
mov
sbbb
orb
insl
adc
es
jo
sub
nop
dec
dec
or
jl
dec
adcb
pop
xchg
cmp
add
push
dec
sbb
movsl
mov
add
inc
cltd
stc
push
insb
add
jo
pop
jne
orl
test
inc
loop
movsb
test
or
inc
cmp
mov
fsts
fisubl
and
ret
das
add
jo
sbb
nop
jb
testb
adc
dec
cltd
nop
and
dec
pop
imul
mov
pop
cmpsb
dec
out
dec
cld
icebp
insb
inc
dec
enter
push
pop
sarl
mov
cs
ret
xchg
mov
xor
je
lds
xor
push
push
ret
xchg
movsb
andl
or
stc
out
inc
mov
fs
arpl
or
and
add
les
inc
dec
push
fucom
or
dec
inc
and
and
loopne
cmpsl
inc
inc
add
aas
cmpsb
or
repz
push
addl
rolb
movsb
fs
mov
mov
or
je
or
or
cmc
and
add
xchg
ds
adc
push
inc
pop
cmpb
xor
pushf
xor
sub
push
add
arpl
jl
sub
pop
sbb
scas
movsb
mov
push
sbb
pop
sar
push
add
add
stos
imul
push
push
test
les
insl
fldcw
jb
ljmp
movsl
test
jle
mov
ficomps
push
sbb
sub
leave
fisubl
outsl
xchg
ss
jmp
fnsave
push
xchg
pusha
add
cmp
scas
pushf
mov
icebp
inc
dec
xor
pop
add
mov
pop
jmp
and
xorb
push
pop
ss
mov
inc
push
ret
xor
popa
xor
std
stos
xor
mov
sbb
and
xor
sub
pop
call
push
or
dec
push
xchg
insb
ficomps
fs
inc
cs
sbbl
adc
and
or
push
inc
fs
aam
or
push
and
push
ret
sarb
push
push
fisttpll
push
dec
jbe
ss
ret
or
inc
jle
hlt
push
fcompl
lods
add
adc
inc
jns
test
ds
mov
arpl
or
mov
pusha
mov
insb
pop
jb
or
cmp
cmp
push
mov
add
fidivrl
mov
inc
mov
and
js
insb
and
push
fidivs
ss
jo
jp
xor
push
xor
push
dec
jb
mov
rol
mov
hlt
sbb
sub
sub
arpl
and
ret
je
adc
subl
inc
loopne
cmp
je
bound
cmpl
dec
jmp
inc
es
les
adc
enter
sub
inc
shlb
insl
test
cld
xchg
sbb
rclb
xchg
mov
arpl
xlat
jb
scas
fsubrs
sarb
in
push
lds
pop
push
sub
sarb
sbb
mov
stos
and
lock
callw
sbb
push
fldenv
xchg
mov
lods
mov
push
leave
xchg
adc
push
cmp
pop
or
cmpsb
xchg
mov
aaa
and
lea
sbb
fildl
and
adc
add
adc
or
add
add
pop
adc
aaa
loope
stos
test
and
ret
sub
xchg
and
xor
dec
sub
sbb
jo
or
adc
dec
adc
sbb
push
leave
or
pop
mov
sbb
push
ja
and
jmp
cs
sbb
movsb
das
pop
cmpl
push
pop
mov
and
aam
mov
fstl
dec
add
aaa
jge
mov
push
inc
add
pop
dec
ljmp
jl
push
push
sub
sbb
xor
test
jne
mov
ret
push
push
sbb
mov
inc
decl
push
dec
fnstenv
add
mov
mov
pop
ret
decb
outsb
adc
sbb
in
push
mov
push
les
adc
aam
cld
adc
mov
imul
mov
push
push
loopew
adc
push
sub
add
dec
push
sub
nop
sbb
daa
adcb
es
mov
cs
or
and
ja
mov
dec
cmp
jae
mov
scas
inc
cmp
ds
lock
sbb
adc
test
sub
mov
ds
inc
jno
add
or
push
and
push
cltd
roll
cltd
les
and
push
pop
adc
in
pop
pop
add
and
lds
push
add
mov
mov
adc
aam
or
js
repnz
lea
sbb
jl
clc
mov
ficoml
xchg
inc
push
mov
rclb
mov
sbb
outsb
nop
test
lods
dec
popa
test
lahf
ret
xor
mov
or
push
in
dec
and
cmp
jp
mov
xor
int3
outsl
jge
jno
shlb
add
mov
outsb
arpl
push
cmp
popa
jo
mov
mov
lcall
shrl
pusha
xor
ret
pop
add
pop
aaa
gs
movsb
sub
roll
je
and
inc
push
data16
fwait
les
lahf
jg
push
gs
pop
int3
shlb
inc
cmp
enter
mov
or
sub
inc
jle
and
xor
lahf
inc
dec
pop
lret
je
fadds
add
sub
xor
mov
lret
sbb
dec
mov
mov
cmp
jae
out
and
sub
pop
mov
ja
out
add
lahf
cmp
int
push
inc
jae
loopne
mov
sbb
push
mov
insb
push
lea
xor
psrlw
push
mov
mov
bt
push
inc
mov
sub
cmc
inc
mov
jg
jl
adc
add
and
popf
cmpb
sub
pop
or
mov
jnp
and
or
outsb
cmp
jg
sub
lcall
dec
dec
push
mov
arpl
add
pusha
push
ja
fnsave
inc
jo
add
sub
jne
pop
jl
xchg
mov
xor
push
cmp
add
and
sub
and
faddp
lahf
adc
mov
rorb
test
dec
dec
repz
pop
mov
inc
pop
js
outsb
sbb
or
ret
xchg
and
or
inc
sets
or
dec
roll
or
or
mov
imul
inc
sbb
js
movsb
sbb
or
push
dec
lcall
es
fs
ret
push
inc
inc
rolb
pop
cwtl
imul
dec
push
or
or
add
add
andl
push
adc
leave
sub
aas
mov
or
xchg
pop
insl
inc
adc
jp
adc
xor
push
or
pop
inc
cwtl
insb
sarb
add
xchg
outsb
inc
enter
add
cmp
dec
inc
push
fnstsw
jns
sub
adc
jno
jb
ds
insl
popa
or
or
je
int3
rcll
xchg
cmp
xor
cmp
pushf
dec
insl
call
adc
mov
jne
jne
mov
mov
add
imul
jg
test
xchg
inc
xor
pop
dec
cld
jo
cmp
bound
mov
outsl
xor
orl
lea
push
int3
jno,pt
cmc
cmpsb
xchg
repnz
sti
jle
or
pop
xchg
sub
hlt
jl
jmp
std
push
aaa
jo
xchg
xor
xor
insb
add
shl
movsb
ret
mov
cmp
pop
lret
pushl
lcall
dec
sbbl
or
jno
sub
popa
mov
xor
adc
adc
lods
es
cltd
in
jb
adc
fstpt
add
vmread
inc
es
xor
xchg
inc
pcmpeqb
adc
mov
and
inc
leave
test
mov
and
xor
cmpsl
push
cs
inc
jne
xlat
sub
ret
popa
xor
and
xchg
mov
lret
mov
and
rcll
mov
pop
sub
lods
das
add
and
in
sub
scas
xor
adc
pop
sub
orl
arpl
cwtl
rcrb
fs
pop
cwtl
mov
lea
addb
pop
cmpl
pop
cmp
push
cmpb
adc
or
dec
call
fisubs
incl
notb
cmp
inc
mov
xor
sub
js
jne
lea
sbb
lock
sbb
xor
sbb
xchg
adc
icebp
push
sbb
mov
jmp
sbb
dec
and
insb
inc
sub
jle
push
jl
push
sbb
mov
pop
jo
pushf
jbe
rcrb
mov
outsb
pop
sbb
push
adc
rol
subb
sbb
push
xor
inc
movsb
sbb
xor
xchg
xor
testb
mov
cs
mull
mov
lea
add
inc
mov
lods
lsl
add
mov
nop
cmc
jp
add
pop
add
sub
jb
pusha
cmp
adc
sub
push
dec
dec
dec
jno
mov
push
pushf
and
and
outsb
push
pop
cmp
ret
mov
sbb
sub
mov
pop
pop
add
xor
cmp
inc
js
lret
addb
sbb
sbb
xor
mov
dec
fs
fidivrl
in
dec
jnp
sbb
fs
push
push
sbb
or
test
and
dec
loope
inc
lods
dec
pop
jp
push
jo
pop
lock
je
push
das
pop
adc
sarb
sti
push
sbb
and
mov
mov
adc
and
sub
es
pop
stc
jmp
push
and
inc
aas
das
lea
lret
lret
sbb
mov
sub
test
pop
add
mov
and
ret
or
xor
rcll
mov
and
outsl
movsb
ret
out
mov
dec
test
loopne
sti
shrl
and
xchg
jl
jne
pop
adc
inc
dec
xchg
mov
add
sub
aas
fsubl
nop
add
add
xchg
cmpsl
xchg
fldt
and
inc
lcall
or
pop
push
add
stos
adcb
mov
or
ss
or
mov
push
int
movl
dec
inc
pop
cmc
mov
pushf
pop
jg
mov
repz
sub
loopne
mov
pop
je
mov
inc
out
out
cltd
out
lea
add
cmc
je
fisubrl
dec
sub
fwait
and
jmp
roll
push
pop
loopne
dec
ret
fidivl
mov
mov
cmpsl
push
mov
cmp
xchg
push
hlt
jns
sbb
iret
es
add
cmp
mov
or
inc
lahf
adc
scas
xor
push
out
fisttpll
xorl
nop
inc
push
pop
mov
fbld
dec
push
in
push
sbb
test
test
push
into
rclb
imul
insl
jno
jno
loope
xchg
jmp
push
push
xchg
inc
push
push
adc
xchg
in
and
jns
sub
sbb
mov
push
push
jb
and
push
fs
add
adc
mov
add
std
and
cmc
jg
dec
movsb
das
dec
or
inc
inc
inc
adc
jo
ret
cld
push
je
cmpb
imul
mov
pushf
inc
xor
sbbb
lret
pop
pop
push
jmp
adc
mov
xchg
es
xor
pop
or
sbb
icebp
mov
aad
mov
ret
sub
je
dec
mov
aad
sub
inc
mov
sub
mov
stos
popa
mov
mov
sbb
lahf
xor
pusha
lods
xchg
or
add
ds
into
or
pop
incb
cmpb
push
sarl
loop
lods
inc
jae
jno
sub
sub
xchg
subl
jne
test
or
sbb
lret
push
and
inc
adcl
les
pop
daa
stos
push
dec
xor
dec
mov
fcoml
cmp
push
push
and
pop
jb
dec
push
fwait
test
mov
subl
sub
add
ljmp
js
sub
scas
out
jo
leave
rorl
insb
add
push
inc
jle
into
dec
inc
push
leave
xor
push
mov
push
inc
lods
movsl
push
xchg
cmpxchg
fwait
adc
in
lahf
dec
push
lds
nop
mov
ficompl
dec
movsb
and
xor
xchg
adc
adc
rolb
ret
inc
sub
push
lods
xor
cmpb
into
xchg
adcb
add
inc
add
mov
mov
jno
and
mov
sbb
push
mov
outsb
sub
dec
or
mov
add
add
push
jb
add
iret
xor
pop
and
xor
sbb
jne
test
notb
mov
cmp
orb
xor
adc
inc
cli
push
hlt
je
push
lcall
xor
ret
adcb
add
aaa
jb
push
add
xor
sub
aad
pop
nop
iret
add
xor
mov
and
push
or
or
pusha
jne
pop
sbb
add
and
pop
adcl
xor
dec
adc
rolb
push
adc
int
sbb
sub
outsl
iret
outsl
adc
lods
roll
push
loop
add
inc
and
sub
mov
add
xorl
push
or
xorl
sbb
jne
test
and
or
push
orb
in
ror
pop
xchg
jp
inc
push
fs
mov
cmp
sbb
add
and
or
lcall
scas
mov
shrl
xor
and
push
adc
inc
mov
add
jmp
adc
psubsw
adc
add
sbbb
stc
repz
sub
test
in
mov
inc
jle
icebp
lret
sub
add
add
ja
leave
cmp
dec
fistl
in
xchg
or
dec
push
adc
add
adc
or
inc
pop
and
data16
sub
push
adc
sbbb
push
pop
mov
nop
pop
lahf
sub
sub
adc
adc
adc
push
fs
and
add
pop
push
and
or
push
sbb
sbb
mov
adc
pop
stos
and
popa
cmpsb
mov
mov
jae
xchg
in
dec
adc
pop
lock
scas
and
jne
mov
add
sbb
lcall
dec
test
xchg
jb
gs
movb
sbb
jne
and
xchg
sahf
sbbl
push
xor
inc
xor
movsl
loope
into
jne
inc
dec
cmp
into
and
adc
mov
arpl
xchg
inc
repnz
inc
pop
push
mov
aad
xchg
xchg
and
movsb
push
inc
or
rorl
push
add
dec
pusha
and
int
xor
pop
xor
ds
dec
sub
ljmp
int3
rcrb
insb
out
pop
and
mov
push
scas
xchg
inc
cmpsb
adc
xchg
cmp
mov
daa
popf
out
sub
shll
and
pop
and
outsb
lret
popa
add
add
call
or
push
add
jecxz
dec
imul
lcall
adc
and
xor
flds
adc
jne
add
inc
push
push
sub
mov
inc
test
mov
inc
fs
int
enter
call
and
call
cwtl
push
push
push
push
xchg
push
dec
and
lds
pop
sub
and
imul
adc
roll
push
ret
mov
loope
cmp
jne
test
icebp
push
das
add
gs
add
shl
dec
push
add
dec
push
dec
push
pop
push
add
mov
movl
mov
mov
push
add
push
je
cmp
orl
dec
test
xchg
sbb
test
aam
adc
pop
mov
icebp
push
daa
loopne
fistl
pusha
pop
mov
and
test
imul
dec
lret
dec
mov
aam
cs
movsl
xchg
xor
and
je
dec
in
push
mov
or
flds
and
movsb
cmpsb
hlt
xchg
test
loope
movsb
in
orl
ljmp
aam
shlb
pop
inc
pop
insl
leave
leave
sub
mov
nop
idivl
or
sub
jmp
iret
cmp
or
cmpb
xchg
inc
or
inc
mov
lods
shlb
scas
cmp
inc
mov
or
adc
or
fildl
push
or
jae
push
push
push
or
pop
test
push
inc
in
sbb
push
insl
into
cmpb
xchg
mov
mov
push
jp
arpl
inc
cmp
push
dec
cmp
pop
scas
call
push
and
stos
in
dec
or
or
in
dec
or
pop
test
sbb
sbb
dec
mov
and
adc
adc
fdivrl
sub
adc
mov
adc
adc
aaa
push
lds
dec
sub
dec
adc
loop
sbb
aam
insl
lds
repnz
enter
lret
pop
fistpl
es
rcr
xchg
push
fs
dec
adcl
sub
jns
cmp
movsb
xchg
push
push
xor
or
jns
jmp
call
sbb
xchg
fcomps
add
push
mov
xchg
sbb
sbb
xchg
or
mov
addl
and
and
jb
add
and
popa
inc
and
pop
jle
and
add
and
and
xchg
and
or
jns
inc
sahf
es
rolb
cltd
add
mov
sub
sub
sub
jmp
xchg
les
enter
sub
push
push
jo
mov
loopne
dec
cs
movsb
xor
jae
jmp
pop
add
push
mov
and
fisttpll
nop
std
jge
cs
inc
sub
loope
pop
jne
sbb
mov
sub
adc
mov
push
pop
mov
mov
xor
lods
add
lea
mov
add
dec
insl
insl
shrb
sbb
adc
mov
mov
sub
or
ret
pop
sbb
or
push
fsubrl
xchg
inc
sbb
inc
inc
adc
xchg
xor
adc
pop
pop
xorl
pop
xor
push
or
pop
sti
fdivrl
loopne
mov
js
lea
push
push
pmulhuw
dec
add
nop
jo
addr16
inc
xor
inc
hlt
sub
arpl
cmp
adc
xchg
sub
mov
ss
sbb
pop
fldcw
rcll
test
pop
pop
lods
xorb
test
inc
jmp
push
aaa
or
sub
pusha
jmp
es
cmp
sbb
inc
pop
aad
popa
lret
sahf
inc
shrb
adc
inc
inc
mov
lea
inc
cmp
dec
or
xchg
xchg
jns
inc
mov
in
ds
jmp
arpl
aas
data16
cmp
fcoms
cld
cld
movb
repz
add
inc
arpl
pusha
inc
push
adc
or
inc
roll
shlb
imul
cmpsb
dec
push
xchg
push
sbb
or
out
adc
push
push
xor
adc
call
add
and
stos
and
out
add
cmpb
xor
repnz
inc
rolb
iret
add
cwtl
aas
pushf
dec
cmpb
movsb
cmp
cli
dec
cmp
push
rorb
add
add
cmp
cmp
fldt
lods
xchg
icebp
and
cwtl
lea
pop
imul
mov
fbstp
and
or
pop
scas
rcr
add
mov
mov
dec
shrb
je
je
add
test
and
push
push
clc
pop
roll
and
or
test
insb
add
sub
inc
pop
push
and
push
pop
inc
pop
jmp
leave
add
adc
in
xchg
pusha
cmp
mov
dec
adc
push
xor
imul
in
push
cmp
popa
mov
orl
mov
mov
cmp
test
sub
mov
test
sbb
dec
cmpl
lock
dec
inc
inc
add
sti
stos
or
aas
cmp
mov
mov
mov
sarl
dec
cmp
sbb
dec
test
lock
xor
aam
insb
flds
dec
lds
punpckldq
lock
dec
cmpsb
jl
dec
xchg
sub
jns
addb
test
or
popf
and
adc
push
nop
dec
dec
inc
sub
and
ds
adcl
in
adc
dec
cmp
pop
icebp
dec
int
push
mov
dec
add
xchg
mov
insl
jmp
inc
jmp
pushl
frndint
pusha
cmp
add
inc
jge
lds
psllw
aaa
sub
bound
and
dec
out
jae
or
push
xchg
xor
enter
inc
pop
pop
rcrl
push
mov
jns
sbb
add
shlb
dec
mov
and
sub
dec
fwait
test
push
pop
add
and
leave
pop
sub
or
adc
shrb
pop
lahf
push
cmpsb
cmp
pop
push
mov
sbb
pusha
adc
pop
dec
nop
fwait
js
arpl
aas
or
xchg
jp
in
push
mov
sbb
jb
sbb
pushf
js
rclb
enter
je
pop
imul
testl
cmpsl
fwait
add
cmp
mov
cs
pop
pop
xor
aaa
and
push
sub
or
or
xor
xchg
data16
iret
push
dec
jns
daa
cmp
iret
pop
pop
pusha
push
xchg
pop
pop
sub
mov
mov
sahf
xchg
fistpl
sbb
xor
push
mov
pop
jmp
mov
push
push
sbb
out
push
pop
int3
shr
mov
sti
jecxz
mov
popa
and
xchg
add
das
pop
iret
mov
mov
inc
lock
mov
ja
inc
xor
jo
test
pop
dec
pop
stos
pop
ja
or
fisubs
je
push
mov
dec
insb
stos
in
dec
adc
in
mov
aad
pushf
test
dec
xor
push
adc
add
xchg
or
sub
add
les
inc
dec
push
dec
andl
sub
mov
pusha
roll
test
pop
xchg
int3
sub
enter
adc
xchg
and
sub
jl
xchg
or
mov
adc
cmp
test
test
sub
test
jo
dec
add
sub
es
xchg
sbbb
inc
adc
into
adc
add
xchg
hlt
imul
jae
loopne
mov
cmp
xchg
hlt
mov
mov
jb
mov
jae
stos
bound
mov
mov
mov
mov
pop
sub
je
sub
adc
xchg
jmp
push
dec
pop
or
and
dec
add
movsb
je
jbe
pop
pusha
das
loope
xor
sbb
sbb
or
push
test
rcrb
xchg
cmp
and
adc
jno
xor
out
je
rorb
or
gs
xor
jle
jmp
cmp
or
and
and
adc
jne
jo
push
and
adc
mov
cli
dec
ljmp
clc
dec
loop
js
jns
test
xchg
jb
sub
daa
push
mov
inc
pop
push
jbe
pop
jg
or
dec
sahf
add
pop
dec
shlb
jns
sub
fiaddl
movsl
add
sub
adc
mov
mov
loopne
mov
mov
jb
repz
enter
add
inc
jbe
dec
pop
xchg
sbbl
shll
mov
cmp
mov
dec
pop
pop
dec
xchg
jecxz
add
sbb
fwait
bound
out
xchg
adc
xor
sbb
mov
stos
movsb
cmp
jne
imul
or
jo
das
sub
mov
cmp
add
cmp
inc
add
dec
add
lds
push
inc
add
xor
and
xchg
decb
sub
pusha
push
loop
sbb
and
pusha
push
imul
mov
mov
add
push
mov
xchg
pushf
dec
jecxz
pop
mov
or
cmp
nop
inc
inc
adc
or
pop
xor
and
inc
sbb
mov
adc
mov
push
inc
out
dec
aas
add
dec
test
xchg
lret
or
or
sub
pushf
nop
add
add
movsl
adc
inc
adc
adc
dec
mov
fsubl
pop
adc
das
lods
dec
rcrl
lret
jnp
leave
dec
leave
push
sbb
insl
push
add
adc
and
xchg
mov
mov
inc
mov
repnz
adc
movsl
xor
inc
call
add
aas
or
in
out
push
inc
cmp
jae
mov
add
inc
inc
xchg
xor
out
arpl
std
add
push
sbb
std
jl
in
ret
add
mov
push
loope
call
xor
and
daa
pop
push
imul
mov
jnp
mull
imul
jbe
mov
lods
ret
icebp
add
adc
or
sarb
fidivl
subl
pusha
push
dec
jmp
fnstcw
sub
mov
xchg
push
js
add
rcr
dec
or
cld
push
outsb
insl
push
in
sti
add
incl
sbb
jnp
and
add
sub
mov
or
push
mov
jg
adc
rol
xor
and
out
pop
dec
add
test
push
aam
clc
dec
mov
fdivs
push
in
cs
add
int
or
jle
dec
pop
ret
or
mov
push
test
jo
imul
lea
mov
mov
add
cmp
mov
dec
and
sbb
inc
jge
pop
pop
cmp
xorb
pop
pop
pusha
flds
and
adc
fs
ss
mov
insb
fstps
sub
mov
adc
pop
add
mov
pop
or
lods
sub
and
adc
mov
mov
sub
or
sub
ficompl
aas
push
ss
mov
adc
add
test
fcomp
pop
lret
addr16
inc
push
mov
lret
insb
sahf
add
mov
add
les
mov
xchg
cs
lods
mov
insb
add
push
lods
cmp
xlat
nop
out
insl
sub
push
insb
push
xchg
ja
insb
mov
push
or
mov
ljmp
adc
pop
dec
sbb
roll
andl
jl
cld
sbb
push
mov
mov
cmp
xchg
loopne
cmovbe
add
xor
out
push
pop
push
mov
lock
mov
sub
mov
test
push
fistpl
cmp
nop
ss
push
add
cmp
mov
jge
les
cltd
mov
sbb
xchg
mov
jle
out
inc
mov
test
dec
int3
add
dec
cmp
mov
and
fdivl
outsb
loope
cld
mov
test
test
movsb
pop
testl
aaa
pop
dec
fwait
push
int3
push
outsb
jb
mov
inc
mov
or
mov
nop
inc
sbbl
xor
test
xchg
xor
mov
add
dec
push
dec
daa
mov
xchg
lods
movl
imul
mov
mov
jno
insb
movsb
mov
sbb
mov
inc
lods
push
js
daa
mov
js
mov
shl
push
les
or
movsb
das
or
inc
lea
lcall
sti
adc
orb
test
inc
add
shl
dec
in
inc
or
andl
iret
pusha
xchg
in
pop
dec
pop
push
sbb
faddl
lods
inc
loopne
mov
push
jp
dec
sbb
add
arpl
bound
or
mov
jo
aas
add
mov
jmp
pusha
iret
push
jne
cmp
je
cmp
je
cmp
je
cmp
push
cmp
or
inc
cmp
jo
dec
bound
adc
push
xchg
mov
dec
hlt
jne
inc
testl
inc
xchg
add
ret
pop
daa
mov
cmpb
sbb
stos
mov
test
dec
fisttps
movsb
arpl
data16
jo
push
dec
lcall
cs
and
sub
add
pop
cmpsl
sbb
in
cmp
repz
aam
mov
rolb
sbb
push
adc
test
stos
mov
mov
shrl
pushf
mov
and
imul
test
test
andl
pop
ja
dec
in
push
cmp
ja
jmp
mov
cmp
icebp
pusha
inc
xchg
or
sahf
nop
push
lock
and
mov
push
les
inc
sbb
aam
lret
sbb
sub
dec
es
aam
loopne
add
aam
in
inc
or
inc
mov
xchg
jle
int3
or
pusha
pushf
push
cs
in
dec
xor
push
sti
mov
clc
arpl
int
fcomps
pop
and
pop
dec
sbb
cmp
or
adc
or
fistpll
mov
mov
xchg
test
aas
pop
imul
inc
sbb
shll
test
xchg
push
sub
dec
push
push
and
and
sub
push
enter
jl
or
int
mov
cmp
and
fs
ret
pop
or
gs
and
pop
inc
mov
popa
adc
fwait
push
js
add
add
inc
fisubl
outsb
push
mov
mov
stc
inc
sub
adc
jp
jo
inc
cmpsb
movsl
jb
cs
or
aaa
lods
pop
sub
xchg
jne
mov
dec
jp
imul
and
xchg
mov
loopne
jecxz
cmp
mov
push
push
daa
inc
test
movsl
dec
in
mov
sbb
popf
pop
cmp
fwait
out
adc
and
les
mov
mov
cli
dec
sub
or
loop
js
fstps
cmp
inc
popf
sbb
xlat
push
aas
outsl
push
mov
bound
adc
xor
xor
adc
push
dec
xchg
inc
mov
inc
sub
mov
push
call
xchg
pop
mov
add
in
mov
clc
les
push
inc
mov
sbb
mov
aam
call
xchg
inc
aam
mov
inc
rclb
push
pop
xchg
jl
inc
sub
mov
sub
pop
and
shll
mov
mov
aaa
add
jns
or
mov
divb
cmp
jge
test
es
sub
jge
in
mov
scas
inc
setge
icebp
jg
inc
mov
add
and
mov
fwait
mov
cmpsb
adcb
mov
out
push
call
mov
jne
cmp
je
mov
scas
mov
in
jne
dec
fcomp
mov
insb
adc
jle
xor
mov
xchg
ljmp
jnp
jbe
shr
cld
jbe
cmp
xorl
xor
pop
or
and
and
push
sbb
jno
sbbl
sti
imul
movsb
pusha
movsl
dec
pushf
mov
adc
cwtl
jbe
hlt
cmp
mov
outsl
add
pop
mov
inc
add
lods
and
call
sbb
add
clc
jnp
lods
dec
xchg
pop
cwtl
movb
xor
dec
mov
aas
in
xor
ret
jne
sub
push
jl
stc
jns
out
push
rclb
mov
inc
push
test
mov
lcall
dec
dec
cmp
push
jmp
insl
mov
sub
push
sbb
aas
out
ret
and
and
lahf
inc
rclb
sbb
lcall
mov
mov
in
cmpsl
nop
or
xchg
fstpt
inc
or
add
pushf
push
outsl
pop
xchg
and
sub
pop
mov
stos
add
int3
mov
loopne
mov
sbb
push
fs
fcom
or
push
movl
call
pop
push
add
mov
inc
scas
ss
cmp
push
les
inc
inc
cmpsl
orb
cli
pop
pop
and
popa
test
adcb
add
aas
faddl
ret
mov
jbe
fcoml
faddl
jmp
push
dec
nop
insl
inc
repz
xchg
icebp
sti
push
cmpsl
out
sub
inc
sbb
pop
cmpl
adc
je
add
cmp
xor
cmp
xchg
mov
xor
pusha
mov
push
adc
sbb
adcb
push
subl
push
jl
add
sqrtps
sub
sti
push
xchg
inc
into
inc
sub
sbb
movhlps
or
stc
icebp
fcoms
stc
push
or
popf
jbe
insb
pushf
loop
ret
movsl
pop
adc
leave
mov
loope
or
mov
cmpb
call
jg
cmp
jne
cmp
jne
int3
jns
push
sbb
je
and
or
add
push
push
add
push
xor
or
in
add
dec
adc
and
adc
or
cmpsl
leave
arpl
pop
inc
or
add
ss
xchg
xchg
call
cli
push
jae
jmp
les
lahf
and
jmp
mulb
js
jae
rcrl
inc
mov
inc
mov
dec
addr16
outsb
imul
pop
jo
js
inc
scas
mov
cmpsb
xchg
mov
rorl
dec
jp
scas
test
addr16
push
pop
sub
cmp
add
ret
cli
add
enter
dec
out
cmp
pusha
and
pop
cmp
bound
adc
push
xchg
xchg
insl
or
push
inc
or
je
stos
mov
sbb
sub
mov
inc
push
stc
data16
pop
jnp
faddl
mov
jo
inc
mov
mov
ret
push
adc
lea
sarl
sbb
sbb
push
sub
push
push
push
movsb
adc
inc
adc
sbb
in
push
inc
add
movb
nop
rclb
insb
sbb
and
jl
imul
add
inc
lea
dec
lcall
or
jmp
dec
add
mov
mov
push
jbe
je
mov
inc
cmp
insl
jns
outsb
inc
add
inc
shrb
repz
jl
loopne
and
outsl
sbb
jae
push
cmp
jp
inc
dec
add
sbb
cwtl
push
inc
repz
cmpsb
mov
rorb
push
movsl
rolb
sub
dec
cmp
add
dec
mov
lock
dec
and
xchg
push
cmp
push
pop
addr16
arpl
clc
jle
mov
jb
cmp
psubsb
cltd
addb
iret
mov
orb
testl
sub
clc
jo
and
jnp
sbb
shrl
or
pop
adc
mov
cmp
shl
sub
sti
lahf
push
movsb
das
sub
xlat
fsubrl
jns
loop
aas
xor
cmp
jne
test
je
mov
cmp
dec
mov
add
sbb
or
outsl
sbb
pop
add
or
aad
jne
rclb
mov
sub
hlt
jg
mov
pushf
cli
pop
or
or
sub
das
pop
sub
adc
dec
xchg
mov
cmpl
push
add
jae
popf
mov
ret
or
aaa
in
in
dec
pop
xor
jne
add
mov
mov
push
push
repz
stos
jbe
or
add
daa
pusha
pop
jg
clc
mov
cmpsb
mov
inc
test
stos
inc
xor
sub
add
pop
into
rorb
adc
sbb
and
mov
bound
xchg
out
and
arpl
dec
jo
add
movsl
add
mov
add
or
loopne
pop
pop
add
pop
lahf
and
cmp
sbb
sbb
in
mov
mov
psubq
and
pop
sub
in
syscall
dec
mov
jmp
push
add
inc
js
movsl
mov
in
add
push
xchg
aam
or
test
test
inc
mov
movsb
push
fs
adc
addb
xor
call
xor
xchg
jns
xchg
pop
inc
xor
pop
and
or
jmp
lea
push
fimuls
imul
pop
mov
xor
add
test
enter
mov
dec
sbb
dec
push
push
push
mov
ret
dec
inc
cmp
or
cmpsb
dec
push
add
xchg
cli
cmp
jle
push
mov
cmp
sub
sbb
cli
imul
xorl
mov
adc
xchg
push
js
js
out
mov
mov
add
popa
or
gs
bound
pop
nop
lods
push
pop
sti
sub
nop
lret
sub
push
mov
add
and
das
xor
dec
xchg
jl
add
in
testl
inc
pop
mov
stos
test
pop
inc
inc
adc
ret
push
and
imul
sbb
imul
push
add
push
sbb
es
add
inc
sub
test
inc
push
xor
lds
daa
xor
jb
xor
sub
movsl
adc
movsb
das
rorb
shrl
or
mov
inc
stos
movsb
sub
dec
or
int
repnz
sbb
push
idiv
pop
dec
jne
dec
push
jne
cmp
jb
sub
jmp
push
clc
sub
push
pop
dec
pop
cmpl
push
setl
movzbl
lods
test
mov
inc
jl
push
push
mov
lock
pop
loopne
ret
loope
push
sbb
inc
push
movsb
lods
sahf
push
mov
and
pcmpgtd
adc
cmp
push
adc
jg
mov
out
push
push
push
shrl
ret
test
inc
push
pusha
xchg
push
push
or
test
adc
cmp
mov
test
enter
jmp
sbb
adcb
aas
mov
jno
add
dec
push
dec
sbb
sub
or
inc
add
mov
cmp
std
sbb
and
aas
sbb
sarl
pop
push
dec
or
xor
fsubrs
inc
dec
daa
push
cmp
pop
xor
cmc
cmp
je
sub
add
push
inc
je
add
mov
dec
cwtl
in
sbb
xchg
data16
pusha
adc
mov
push
mov
jno
rol
and
and
lods
mov
das
adc
and
push
push
push
shll
sarb
clc
sbb
rorl
xor
cmp
and
mov
sbb
jb
clc
dec
or
test
xchg
xchg
das
pop
sbb
es
leave
and
cmp
inc
add
imul
sbb
sub
enter
lds
imul
or
mov
popa
mov
add
mov
inc
sbb
aam
push
rorl
stos
jg
bound
push
push
mov
je
sbb
lods
movsl
and
xchg
or
nop
sbb
dec
inc
jb
xchg
xor
adc
and
into
mov
lods
push
inc
imul
adc
sub
mov
sub
cmp
mov
lods
mov
jl
push
cmp
cs
inc
cs
pop
imul
jle
enter
xor
lret
mov
add
push
xchg
movups
jp
sbb
fidivrl
hlt
lcall
and
xor
mull
nop
pop
sbb
add
and
test
fs
xor
add
add
push
lcall
jbe
adc
loop
mov
jne
add
push
push
add
dec
adc
mov
sbb
pop
push
call
mov
xchg
sbb
sbb
outsl
or
sub
adc
jno
and
mov
popf
mov
add
enter
mov
ret
push
test
imul
dec
hlt
cmp
jle
lea
cmp
jl
push
add
cmp
pop
jne
pop
push
adc
sbb
pop
cmp
and
mov
fldcw
test
add
mov
adc
sub
sub
adc
push
xorb
and
pop
call
imulb
mov
xchg
sub
sbb
es
shll
and
push
dec
andl
or
add
popf
inc
mov
je
and
jo
add
dec
lods
inc
push
adc
data16
adc
cmp
movsb
add
and
pop
aas
aam
xchg
call
push
push
mov
test
push
xor
and
cmpsb
xor
xor
insb
jo
xchg
or
mov
push
jo
ret
jo
pop
out
push
rorb
sbb
mov
outsl
or
push
mov
and
sbb
mov
inc
test
lahf
dec
popa
jne
pop
fldl
inc
imul
outsb
push
insl
mov
push
jne
movsb
jmp
dec
imul
sbb
xchg
lea
enter
mov
lods
or
test
mov
out
orb
xor
jg
ljmp
push
mov
mov
testb
adc
push
adc
push
push
fucomip
xchg
rcrb
sub
jne
sub
mov
jg
inc
add
test
xor
sbb
pop
pop
mov
repnz
jns
mov
leave
test
aas
push
add
daa
adc
nop
jnp
add
inc
sbb
push
or
les
movsl
push
xchg
jmp
adc
xchg
cmp
pop
add
test
pop
inc
pop
ja
push
inc
and
leave
inc
dec
and
and
mov
enter
mov
mov
daa
mov
adc
xchg
jp
mov
push
iret
sub
sbb
inc
lahf
ds
std
jo
aam
bound
add
scas
or
dec
cmc
pop
inc
dec
mov
xor
je
xor
pop
and
adc
or
push
or
push
imul
adc
add
xchg
fsubs
or
inc
enter
xor
xchg
les
lds
frstor
jp
push
mov
ret
dec
imul
fmuls
wrmsr
inc
and
add
fnsave
push
dec
xor
inc
ret
mov
adc
or
adcl
jl
and
or
cmpsl
cmp
fucomp
into
cmpsl
jbe
add
inc
jns
mov
js
sbb
pop
add
orl
and
cwtl
mov
push
adc
mov
inc
ds
pusha
out
rolb
sub
add
mov
loopne
xchg
pop
add
or
pop
lahf
adc
pop
insl
push
xor
jns
cs
movsb
push
out
xor
push
data16
sub
or
imul
inc
sahf
inc
cmp
aas
bnd
les
or
cmp
add
ljmp
and
int3
rcll
add
ds
sbb
ret
nop
xchg
xchg
fcom
int
dec
push
add
cmp
inc
cmp
inc
aad
push
cltd
clc
xchg
std
sbb
push
mov
xchg
bswap
pop
inc
fwait
push
and
fimull
push
push
adc
repnz
rolb
pop
loope
repnz
jno
mov
dec
and
fs
inc
arpl
in
push
inc
movsl
pop
add
push
imul
in
xorb
lods
xor
inc
adc
js
test
in
leave
jmp
xchg
pop
test
jns
mov
add
jl
or
fs
or
inc
push
dec
les
jae
push
xor
lret
and
and
add
push
mov
jb
xchg
dec
hlt
sub
pop
sbb
out
cmp
jmp
jp
icebp
mov
push
enter
pushf
mov
push
jns
or
out
pusha
push
dec
aam
adc
fldl
lods
daa
xor
add
cld
rcrb
mov
je
push
dec
shl
dec
pop
push
xor
dec
or
dec
cs
pop
adc
pop
cmpsl
cmpb
pop
sub
add
cmp
xchg
str
sub
sub
cmp
lock
add
into
sbb
gs
shl
add
cmc
xchg
frstor
add
repnz
sub
inc
mov
or
add
das
inc
inc
mov
mov
pop
mov
push
out
mov
jle
mov
add
jne
inc
jp
pop
xorl
add
xchg
pop
jg
mov
aad
lret
push
push
lcall
push
add
cltd
sub
movsb
jge
ds
jl
je
test
jl
sbb
and
jg
mov
cmp
repz
dec
loopne
and
loopne
fisttps
clc
jle
dec
cmpb
dec
push
mov
mov
push
mov
sarb
mov
movzbl
push
push
out
add
dec
mov
lock
pop
add
nop
sub
daa
lods
fstps
pop
cmp
shlb
add
inc
or
mov
lock
icebp
mov
out
cwtl
inc
rcrl
or
sti
jge
popa
in
push
push
fldcw
scas
fcmovu
and
pop
ret
test
sbb
or
loopne
mov
in
sub
inc
rorl
sub
add
jo
ret
div
mov
mov
adc
pop
mov
insb
mov
out
xorb
sub
push
js
int3
or
sbb
rcll
jmp
loopne
dec
fstl
sub
pusha
xor
mov
inc
andl
lock
jl
add
aad
and
add
sub
push
jg
pop
or
mov
adc
mov
inc
cmp
jb
pushf
push
rcll
add
gs
add
xchg
ret
testb
fdivrs
mov
mov
cmp
loopne
out
jl
and
imul
push
sarb
push
mov
sbb
fbld
dec
mov
seto
jp
clc
or
enter
sarb
push
ss
push
jl
adc
ja
shrb
and
andl
xor
pushf
fs
pop
vmovups
mov
adc
or
je
js
xor
and
jae
sbb
dec
jp
fsubs
jb
adc
mov
pop
add
pop
inc
out
paddsb
loope
daa
subl
sub
sub
outsb
mov
aas
push
sub
push
push
cwtl
mov
cmp
test
or
outsb
popa
nop
call
fidivl
mov
rorb
xchg
mov
bound
jb
push
fs
mov
fs
adc
hlt
outsb
inc
mul
fildl
or
fadds
movsl
fdivs
fldcw
mov
add
or
fldcw
stos
xor
pop
lcall
push
loop
or
adc
filds
push
pop
pushf
add
mov
addl
mov
push
jle
jne
xchg
cmp
pop
loope
data16
pshufw
cli
add
push
push
add
adc
sub
dec
filds
and
rol
loop
shll
insb
testb
sub
cmpsb
jno
cs
sub
push
ss
gs
push
adc
push
mov
shl
sub
call
std
dec
adc
jno
sub
inc
sub
ds
or
cmpsb
pop
rcr
xchg
fcompl
cmp
clc
cmp
sbb
or
out
xlat
and
inc
popf
cmpl
lret
fldenv
or
mov
sub
movsl
add
mov
scas
sub
and
imul
scas
pop
out
fildl
mov
inc
adc
add
cmp
mov
or
fmulp
lret
leave
jmp
iret
fs
sbb
sub
rep
mov
fmuls
push
sbb
sbb
or
adc
fdecstp
lahf
xchg
add
add
jo
jae
inc
jo
cmp
add
movb
inc
or
aaa
test
cmp
jne
mov
cmp
mov
or
push
pop
xor
or
xchg
dec
inc
fistps
inc
pop
jb
je
jg
jl
cmp
adc
cmpsl
or
xchg
xchg
inc
mov
jecxz
cld
add
insb
mov
pop
sbb
icebp
mov
pusha
inc
push
sub
fs
sub
lods
sub
and
enter
xchg
push
outsl
fs
rclb
xchg
test
lea
iret
add
enter
inc
and
and
cmp
push
loop
loopne
push
adc
data16
push
push
and
inc
bound
add
mov
xor
and
rolb
cmp
enter
mov
push
call
mov
bound
ds
cwtl
aam
mov
aad
cld
xor
inc
lea
xor
push
fmull
xchg
sub
insl
cmp
dec
call
push
push
dec
pop
ret
mov
mov
punpckhdq
pop
js
lock
adc
xchg
cmp
jle
negl
sbb
pop
je
push
dec
mov
loop
adc
pop
icebp
mov
or
loop
inc
xchg
pop
imul
call
add
adc
and
push
sbb
ret
rorb
cltd
adc
mov
jmp
mov
inc
ja
sub
rol
lahf
dec
add
jns
cmp
pop
jmp
filds
je
cmpl
push
push
inc
cwtl
pop
sbb
ret
cwtl
popf
mov
jmp
push
ljmp
push
rorl
mov
sbb
sbb
or
add
aam
sbb
popf
ljmp
jg
addl
fmuls
sbb
push
push
dec
dec
test
dec
loopne
ficoml
sbb
sarb
cld
push
add
mov
cwtl
addw
jne
mov
je
test
call
cmp
fimuls
mov
push
mov
and
shll
call
das
mov
cli
jmp
cmpl
clc
cmp
cmpl
or
inc
push
adc
imul
push
lock
push
sub
sbb
lahf
test
mov
loope
xchg
mov
shl
rol
popf
faddl
test
clc
mov
xor
adc
or
sub
mov
adc
sbb
jmp
xchg
add
icebp
sub
lea
push
push
data16
bound
ds
push
pop
cli
mov
push
jbe
sub
addr16
mov
sub
mov
sbb
push
xchg
mov
xchg
out
nop
dec
or
jecxz
sbb
and
xchg
jo
jl
js
aam
mov
mov
mov
add
jle
push
mov
add
lock
and
push
sbb
sub
mov
in
pusha
push
push
inc
incl
je
jmp
jmp
sbb
xlat
sub
popa
outsb
pop
dec
in
push
add
jle
cmpsl
orl
aad
sub
mov
push
in
inc
push
pop
and
sbb
push
scas
insb
add
push
xor
lahf
clc
movl
adc
daa
lods
adc
cli
clc
and
in
insb
ja
or
adc
out
loope
or
das
and
adc
inc
mov
adc
sbbb
adc
cld
sbb
inc
sub
sbb
and
icebp
fsubp
mov
cmp
int3
dec
jmp
sbb
fildl
and
nop
lcallw
pop
add
das
sub
push
mov
jp
imul
gs
xor
xchg
mov
push
pop
fidivl
in
daa
lahf
mov
sti
jne
jecxz
push
in
jmp
xchg
clc
inc
add
push
push
aaa
mov
out
mov
movb
push
icebp
test
pop
add
mov
dec
aam
cmp
mov
xorb
adc
push
cmova
lock
cmpb
subl
mov
insl
movsb
lock
jb
sub
add
push
and
jl
std
cmp
test
call
xor
pop
int3
ja
insl
inc
mov
leave
stc
mov
jmp
rcl
mov
inc
cbtw
inc
inc
push
push
rol
pop
push
mov
mov
cmp
mov
jecxz
cmp
insb
das
mov
sub
sbb
jp
out
or
andb
movb
mov
cwtl
nop
test
into
cmp
ljmp
mov
mov
push
fs
fsubl
pop
sub
adc
ss
pop
test
pusha
lahf
add
cwtl
cli
add
and
push
push
sbb
inc
rcll
jns
add
xchg
cmp
ret
rorl
add
mov
push
ror
daa
lods
inc
inc
and
inc
inc
pop
test
pop
jmp
fdivrs
cmp
dec
mov
or
and
jae
cmp
add
jbe
push
movb
inc
lds
lret
cwtl
xor
mull
mov
incl
outsb
jo
lods
cmp
add
mov
cmp
out
fbld
subb
dec
sub
idivb
scas
mov
je
push
cwtl
sub
inc
test
pop
xchg
cmc
imul
push
xor
xor
jne
dec
jmp
cmp
in
push
xor
shll
ret
mov
movzwl
mov
mov
xchg
sub
jg
push
mov
mul
xor
add
clc
add
setb
jb
rcll
stos
orl
cmc
mov
mov
hlt
ljmp
jo
je
pop
inc
pop
jbe
push
jne
pop
jns
push
jmp
adc
addl
sbb
in
adc
adc
sub
dec
pop
je
rcll
sub
push
or
insb
cli
add
push
jo
dec
scas
into
pop
add
rorl
adc
adc
and
sub
push
add
xor
scas
pusha
add
lea
loopne
push
add
pop
sahf
xor
pushf
mov
js
push
sarl
lret
cmc
mov
pushl
outsl
sahf
ret
push
sub
loopne
push
dec
rorb
push
push
mov
add
loopne
adc
outsb
mov
push
jns
jge
inc
ficoms
movsl
add
adc
test
fisubl
bndstx
lea
push
cli
sbb
inc
push
lods
addb
push
lret
lds
test
add
cmp
rcrb
xchg
sbb
add
mov
add
mov
sub
jo
xor
pop
call
jne
inc
pop
adc
mov
mov
mov
mov
pop
ficoml
pop
cli
js
jbe
cmp
jb
push
adc
loop
or
xor
lods
dec
xor
lcall
mov
fwait
mov
inc
or
dec
js
pop
push
aam
xchg
rol
jl
push
inc
add
xor
xchg
stos
nop
jb
jl
aaa
daa
pushf
cmp
push
fwait
pop
cmp
push
mov
mov
xorb
cmp
je
jmp
dec
pop
call
mov
mov
push
ds
or
dec
daa
fdivs
add
inc
sub
sub
lret
or
jge
pop
das
lret
or
push
arpl
push
fs
in
push
push
mov
adc
in
rorl
inc
fisubrl
orl
int3
add
popl
mov
push
popf
fs
in
mov
adc
xchg
mov
pop
inc
add
out
adc
clc
mov
mov
cld
divl
out
push
movsl
pusha
in
pop
sbb
sub
and
shlb
jne
scas
adc
jmp
mov
rcr
movb
divl
push
pusha
fisttpl
pop
fbld
clc
dec
xor
insl
jne
cs
add
repz
push
push
jae
arpl
cmp
jne
push
push
je
inc
or
lret
repz
jg
push
or
and
jle
popa
jge
or
into
push
push
lods
js
or
inc
sbb
cmp
mov
call
mov
repz
sahf
rolb
cmp
test
pop
mov
cmp
int3
cmp
je
push
fidivl
hlt
adc
mov
sbb
push
push
mov
sbb
sbb
mov
movb
fiadds
sbb
jmp
xchg
or
sbb
in
es
xor
jmp
push
pop
sahf
xchg
adc
jl
mov
jnp
and
out
push
shll
cmp
cld
pop
push
sbb
pop
mov
push
push
adc
jo
fcompl
xor
cmp
push
call
faddl
xchg
ret
cmp
test
mov
punpcklwd
mov
loopne
adc
popf
jle
clc
les
fstpt
orl
je
mov
push
dec
hlt
lahf
add
cmp
shrb
mov
popa
pop
add
in
adc
jno
or
orb
ficompl
popfw
sbb
pop
loopne
add
jne
sub
call
sbb
nop
push
push
pop
pop
shlb
inc
push
mov
cs
or
lods
sub
mov
pop
adc
dec
imul
sbb
cmp
shll
insb
jo
sub
dec
je
insl
fdivr
cld
pop
lcall
andl
mov
or
push
mov
flds
test
inc
int3
inc
inc
mov
lea
pop
scas
sub
push
imul
les
xchg
add
xchg
int
adc
and
ds
add
pop
ret
data16
dec
ret
pop
cmpsl
xchg
sbb
lea
fsubs
jbe
jl
js
push
fs
push
jo
push
fs
out
push
fs
cmp
jbe
pop
pop
lcall
nop
push
push
popa
insb
and
or
sbb
test
fmulp
clc
adc
and
notb
cmp
jne
mov
xor
mov
pop
rolb
fcomi
testb
sub
sbb
es
lret
or
xor
or
bound
fidivl
xor
popa
add
imul
addr16
inc
lret
and
cltd
pop
sbb
mov
jne
sbb
shlb
push
jle
or
or
dec
jg
pop
cli
push
ja
cmp
pop
incl
cmp
sbb
shll
mov
pop
xor
mov
leave
aam
or
or
pop
xor
shr
xor
pusha
jecxz
mov
in
mov
mov
adc
in
mov
pusha
dec
pop
cmc
iret
mov
add
and
rol
ljmp
shl
ret
mov
or
jmp
jnp
xchg
add
jne
lea
add
or
mov
adc
ja
ret
addr16
notb
and
sbb
lock
fdivrs
mov
add
sarb
out
add
xchg
fisttpl
das
or
incb
je
mov
das
add
push
jo
xchg
iret
cmp
imulb
sbbl
clc
out
sbb
pop
mov
out
fldz
cmp
roll
in
fiaddl
adc
js,pt
mov
stc
loope
cmp
ss
push
sub
je
icebp
jne
stc
mov
pop
xor
ja
fcomps
xchg
ss
or
sub
mov
pop
dec
sub
mov
ja
mov
iret
js
jno
inc
test
repnz
je
aaa
mov
ffree
adc
shrb
add
nop
sbb
inc
add
mov
push
lret
clc
pop
imul
movsl
cmp
or
jp
lcall
xor
sahf
sbb
fcomps
movl
push
inc
shlb
rolb
dec
sbb
push
cwtl
pop
cli
or
fsubrl
dec
iret
push
jmp
add
push
clc
add
cmpl
imull
add
pop
xor
mov
or
loop
mov
sbb
pop
test
xor
dec
enter
inc
mov
call
xor
or
push
andl
cmp
sub
mov
imul
add
pushl
in
push
and
mov
adc
fimull
dec
xor
pusha
ss
dec
jnp
or
inc
notl
outsl
adc
adcl
inc
orb
xchg
mov
mulb
sub
fs
enter
insb
mov
test
movsb
je
mov
out
pusha
aaa
clc
je
ds
push
ja
and
or
dec
adc
mov
cmp
je
mulb
or
mov
mov
adc
iret
je
xor
stos
aad
push
mov
push
lock
push
sub
cmpsl
js
xchg
inc
pop
xchg
jmp
lea
pop
repnz
push
xor
dec
leave
add
inc
sbb
sub
push
add
lock
or
into
adc
lock
xchg
xchg
or
lock
arpl
jnp
cmpsl
addb
das
test
jo
into
ret
stc
cmp
xor
ss
mov
out
sarb
mov
add
push
mov
fisttpll
lods
cmpps
movsb
sub
cs
jecxz
mov
popl
lods
xchg
lods
push
leave
inc
push
je
pusha
sub
dec
lock
pop
or
sub
and
fs
and
mov
mov
or
inc
mov
out
sbb
jecxz
scas
or
outsb
scas
fcoms
rcrl
subl
push
sbb
jns
and
pop
fsubrs
int
jno
push
jge
jne
enter
imul
mov
cs
es
popa
insb
sub
imul
and
xor
xchg
lods
clc
or
add
divl
adc
or
loopne
push
mov
pushf
cwtl
fidivrs
add
movsb
push
test
sub
jo
cmp
add
je
sbb
add
js
sub
xchg
push
and
or
sar
push
lea
mov
jo
aam
add
push
lea
dec
rcrb
push
or
sbb
lcall
adc
xchg
orl
fcoms
cli
imulb
xchg
loopne
add
pop
xor
pop
and
cmp
mov
sub
adc
lods
js
push
fsubrs
mov
pop
arpl
push
and
sbb
imul
mov
xchg
into
inc
push
push
inc
loopne
pop
or
fs
inc
adc
pop
dec
inc
sbb
xor
jbe
or
test
mov
pop
loopne
or
adc
ja
mov
jo
add
mov
ud2
sub
out
jle
jge
sbb
jg
adc
test
push
cmpb
popl
pop
addb
xor
call
ljmp
mov
adc
orl
sarb
and
push
fadds
or
sbb
and
pop
fistl
fdivs
pop
into
jecxz
icebp
or
lock
adc
icebp
adc
lret
mov
inc
aam
or
loope
lret
sub
rolb
aas
out
pop
add
loop
dec
jg
cmp
cmp
adc
sbb
or
inc
insl
arpl
add
fsubr
mov
pusha
test
and
push
pop
enter
add
por
nop
jo
mov
and
mov
adc
jns
pop
jmp
arpl
push
dec
jne
pop
mov
xchg
clc
sti
dec
pop
mov
movsl
add
idivb
je
mov
sub
lcall
cmp
xor
es
ds
idivl
mov
popf
push
cmp
push
xchg
add
in
mov
lock
stos
lods
je
test
jb
mov
jecxz
das
inc
cmp
xchg
mov
popf
pop
insb
insl
aaa
int3
add
cmc
ljmp
mov
mov
pop
or
mov
jle
inc
cmpsl
daa
jae
repnz
add
push
push
push
push
je
repnz
push
or
shrl
out
sbb
sets
aas
aam
arpl
push
xor
or
add
out
jmp
push
xor
inc
and
jno
lods
out
xchg
mov
add
cmp
scas
subl
loop
xor
adc
sbb
add
icebp
jbe
jb
std
sub
stos
sbb
shlb
or
movsl
sub
loop
stos
mov
addr16
add
and
icebp
or
dec
cmp
or
movlps
mov
xchg
ret
sbb
jmp
pop
add
lahf
push
cmp
xor
loopne
xchg
or
xor
hlt
mov
mov
mov
scas
mov
pop
sub
xor
xchg
rclb
cmpsl
inc
xchg
pop
dec
stos
es
decl
or
push
and
jns
popl
rdmsr
rcrb
dec
int3
mov
stc
xchg
ljmp
sti
in
mov
mov
xor
call
adc
mov
mov
or
jo
push
push
sub
bound
mov
test
add
push
sbb
enter
outsb
push
push
dec
stos
push
or
push
shlb
pusha
sti
ss
and
xchg
fisubrl
mov
mov
mov
add
mov
sub
lret
lret
std
int3
ficomps
out
and
fbld
push
sub
sub
movsb
cs
addps
dec
jle
xor
ficompl
rclb
xor
or
cs
and
sub
adc
adc
shrd
sbb
cmpl
insl
inc
insb
js
addl
lret
xor
es
fdivrl
adc
call
xchg
adc
pop
inc
add
inc
push
mov
sub
pop
inc
xchg
dec
incl
loop
ljmp
or
lret
inc
outsb
jl
mov
sbb
inc
jmp
pushl
lods
stos
push
pop
mov
lock
inc
lea
sbb
out
ss
pusha
ja
push
cmp
rcll
int
pop
and
mov
or
in
mov
adc
inc
testb
cli
jo
pop
andl
pop
shr
gs
inc
andl
inc
push
add
rorl
cld
and
pop
nop
inc
cltd
je
imul
popf
outsb
inc
or
xchg
imul
pushf
dec
xor
pop
sahf
push
scas
test
mov
mov
in
adc
xor
add
sbb
cwtl
lods
ss
dec
pop
sub
add
cli
les
test
and
mov
lods
dec
xor
mov
fdivrl
xor
lock
push
sub
push
test
inc
cmc
adc
dec
cmp
adc
jl
or
cmpsl
cmpsb
call
adc
sbb
add
shr
pop
xor
jecxz
add
lock
fmuls
adc
pop
cmp
jbe
inc
push
inc
adc
inc
cmpb
nop
push
and
fdivs
rolb
sbb
cmp
out
cmp
addl
pop
movsb
push
xchg
xchg
pop
fnsave
testb
shl
sbb
in
movsb
pop
xor
sub
movl
sbb
cmp
sahf
rcr
cmp
cmp
xchg
xor
mov
imul
sti
std
testb
je
and
outsb
mov
dec
call
xor
and
addl
mov
or
scas
push
sbb
movzbl
push
mov
dec
pop
mov
fcoms
push
push
fsubs
adc
inc
int
mov
lret
mov
jl
fbld
sbb
nop
fldt
cwtl
xor
push
mov
mov
mov
xchg
movswl
add
and
cmp
add
dec
add
in
lahf
aaa
add
xchg
add
xor
add
sbb
out
push
push
push
test
sbb
je
add
xchg
push
cmp
filds
mov
movsl
mov
xor
cmp
hlt
addr16
addl
mov
sub
push
push
movhps
cld
mov
cmc
cld
orl
push
dec
push
test
and
in
cltd
mov
mov
nop
jmp
gs
xor
nop
data16
push
pushf
pushfw
inc
xlat
adc
aam
mov
pop
mov
test
rcl
mov
or
inc
push
mov
lock
pop
add
pop
ret
insb
mov
mov
mov
cmp
pop
pop
bound
repnz
push
pop
cmp
push
jne
addb
mov
jp
rorl
inc
inc
mov
insb
mov
cwtl
mov
adc
pop
mov
adc
xor
inc
xchg
ret
push
xchg
js
cmpb
test
or
leave
pushf
dec
imull
mov
dec
icebp
add
mov
adc
add
xchg
cwtl
gs
xor
jns
dec
push
or
pop
enter
inc
inc
clc
add
pop
cmc
push
cmp
xchg
push
xchg
dec
pop
in
je
lock
movsb
adc
mov
daa
add
xchg
int
add
mov
addr16
rcl
movsb
xor
sub
inc
sarb
jae
add
jle
into
add
xchg
push
stos
adc
rorb
jo,pt
adc
push
sub
movsl
aam
adc
sub
jge
pusha
add
push
mov
pop
or
add
or
inc
inc
xchg
xor
cld
sbb
pop
and
jl
dec
jbe
and
mov
gs
dec
sub
mov
push
mov
std
push
cmp
pop
jae
mov
movsb
jo
xor
mov
add
sub
orl
outsl
add
pusha
aad
andl
aam
mov
push
push
jmp
popa
lea
add
int3
adc
ret
xor
cmp
insb
test
cmp
fisubl
cmp
dec
jge
adc
pushl
aam
sbb
insl
lea
out
sti
add
cmp
jne
mov
inc
pop
pop
mov
xor
test
call
das
pop
lea
loop
mov
rol
xchg
xchg
mov
cmp
icebp
stos
or
sbb
les
adc
xchg
mov
fdivl
xlat
adc
sbb
psrlw
xchg
push
sahf
test
mov
sub
cld
sub
outsl
sti
cld
cmpl
jbe
insb
shr
inc
add
aaa
xor
mov
dec
iret
inc
cwtl
mov
mov
or
sbb
push
mov
cmp
sbb
or
pusha
insb
std
mov
decb
mov
dec
fucom
es
adc
sbb
lock
mov
lock
cmpsl
and
push
shlb
imul
cmp
cmp
pop
adc
sub
lcall
sub
dec
scas
add
jns
sbb
loope
pop
dec
jnp
jge
jle
sbb
sbb
int
or
cmp
adc
mov
mov
push
push
inc
ret
xchg
rolb
sub
subb
mov
mov
inc
mov
add
push
sbb
mov
lea
adcl
pop
jmp
outsb
fucomi
and
out
movsl
addl
insb
mov
adc
aad
fwait
jno
and
or
pushl
mov
jns
and
and
inc
xor
mov
sub
je
adc
sub
sub
ss
or
adc
sbb
subb
push
or
push
push
sub
push
pop
mov
scas
fildl
lea
ss
xor
getsec
jbe
mov
ret
push
dec
hlt
out
add
sub
or
sahf
inc
outsb
jmp
pop
loopne
add
imulb
add
mov
jo
push
loopne
inc
pop
in
insb
or
push
or
in
jbe
jo
out
cmpsb
mov
jmp
scas
xchg
sbb
cmpsl
add
xchg
sbb
xor
push
or
pop
adc
mov
loop
ret
xor
cmpsl
jmp
out
cmp
popa
sbb
orb
push
hlt
and
add
mov
jae
push
inc
shr
dec
cmp
test
add
dec
int3
mov
push
loope
cmp
inc
push
dec
dec
or
sub
xchg
lds
call
and
add
clc
lret
push
in
dec
popf
pop
add
lahf
xor
push
xor
lahf
lods
sbb
aad
pop
cwtl
xor
pusha
out
les
push
test
xor
imull
lock
fs
xor
out
pop
test
cld
loopne
movsl
stos
mov
mov
in
loopne
pop
neg
add
cmpsl
xor
mov
push
push
add
and
xchg
pop
pcmpeqw
ret
dec
or
fadds
ret
lcall
jmp
aaa
sbb
negl
xorl
dec
jmp
or
out
andb
lock
sub
mov
lret
loop
out
inc
add
jl
nop
adc
imull
shll
jno
sub
jge
mov
mov
add
lock
nop
lret
cmp
mov
pop
or
push
inc
and
and
fdivl
adc
or
in
adc
nop
push
int
mov
cmpsb
add
adc
adc
imul
jo
mov
add
inc
ret
push
mov
mov
jae
push
push
jae
movsb
sbb
insb
jl
movl
pop
pop
push
push
jl
xorb
or
add
cltd
rcl
xor
cmp
xchg
sbb
mov
cmpsb
dec
mov
lods
lea
xor
push
gs
es
invd
clc
push
cmp
decb
testl
mov
iret
jae
fcmove
xor
mov
push
rolb
and
arpl
add
pop
xor
add
inc
and
dec
pop
test
imul
xlat
add
dec
jnp
cmpsl
and
mov
xchg
sbb
cltd
shlb
aaa
adc
cmp
lds
subb
mov
and
xor
sbb
in
xchg
loopne
stos
adc
in
dec
ret
arpl
rorb
in
mov
ds
xorb
mov
dec
pop
xchg
mov
pop
xorb
fisttps
in
pop
dec
xchg
sbb
jbe
push
js
sar
add
aam
rorb
mov
fisttpl
shl
add
ret
negb
or
in
les
pop
xor
pop
sbb
mov
movsb
adcb
mov
data16
adc
add
jecxz
outsl
or
outsb
mov
dec
sub
dec
ja
je
or
je
or
sub
sub
scas
adc
adc
cmp
stos
adc
xchg
idivb
push
or
ds
mull
adc
sbb
lcall
ds
push
jmp
cmp
sub
cmpsl
push
adc
adc
dec
push
push
cmp
push
push
jp
inc
mov
push
sub
add
scas
orps
lock
or
jbe
call
fdivrs
adc
lock
mov
ret
and
loop
mov
inc
mov
sub
or
add
je
clc
subb
lcall
cmp
push
or
adc
aam
push
dec
adc
call
test
movsl
and
or
mov
aaa
rolb
push
add
pop
mov
pop
aaa
adc
mov
mov
clc
sti
dec
je
sub
sub
or
hlt
add
sbb
push
adc
ficomps
or
in
cmpsb
cmp
or
push
adc
sub
xchg
push
pop
jo
xor
lcall
hlt
jge
fisttpll
jge
movsl
test
jmp
or
cmp
adc
adc
negl
in
and
popa
mov
push
inc
insl
push
cmpl
or
add
cmp
shrl
je
pop
fstpl
pop
cli
sbb
adc
pop
fcoml
pop
add
push
stos
stc
sti
bound
shrb
fmuls
inc
push
inc
shlb
clc
mov
shlb
ror
stos
aam
pusha
stos
fcoms
fsubs
inc
dec
in
ss
or
enter
jecxz
inc
data16
add
pop
lea
or
fiadds
popa
mov
pop
mov
add
fmull
adc
stos
ds
mov
cmpsl
dec
call
xchg
les
dec
imul
dec
xor
cltd
mov
imul
dec
add
sbb
data16
sbbb
pushl
sbb
aam
push
lock
repz
push
iret
adc
call
and
outsl
mov
add
inc
mov
jge
scas
inc
repnz
dec
sbb
sbb
enter
in
in
mov
leave
in
sub
push
pop
and
in
sbb
adcl
xor
xchg
xor
int3
aam
adc
mov
aas
mov
add
enter
loopne
shlb
sbb
push
push
dec
mov
inc
aaa
add
adc
cmp
pop
out
leave
dec
shlb
jmp
sbb
push
adc
subb
stos
out
dec
insl
inc
sti
fisubl
mov
sbb
cmc
cmp
mov
pushf
xchg
cs
add
icebp
fidivrs
mov
adc
or
add
jmp
xor
or
movsb
popf
das
or
adc
sbb
pop
push
xchg
or
or
dec
inc
shll
inc
ja
js
sub
call
mov
sbb
xor
aam
mov
fsubs
xor
mull
push
mov
add
mov
jo
call
daa
test
xor
inc
enter
push
and
inc
push
jne
jle
sbb
subl
in
ss
in
cmp
mov
nop
in
lods
js
add
add
test
mov
push
and
sub
sbb
push
subb
daa
xor
dec
xchg
je
and
fucomip
add
mov
lds
lock
movsb
in
or
cwtl
mov
lcall
pop
adc
adc
sub
xchg
mov
and
in
cmp
call
pop
push
or
push
push
xchg
mov
add
jns
fdivr
cmp
push
or
imul
xor
push
xchg
push
cmp
or
push
add
or
push
popa
jnp
inc
aam
xor
xor
mov
pop
adc
in
add
shl
andl
call
pop
incl
cs
cld
add
add
enter
dec
int
inc
mov
lret
enter
das
pusha
ss
shrl
hlt
mov
mov
hlt
jmp
pop
mov
into
pop
jp
mov
dec
daa
fwait
mov
lret
pusha
sbb
sbb
daa
mov
mov
lea
rorb
dec
shlb
dec
mov
add
sub
mov
sbb
push
mov
xchg
pop
ds
xor
ja
out
adc
ret
mov
add
rcll
js
push
push
xchg
pushf
xor
pop
push
xchg
pop
fs
cmp
inc
or
mov
cmp
jmp
fs
stc
jae
and
insb
add
call
je
cmp
filds
pop
or
add
inc
inc
mov
adc
clc
dec
or
or
add
or
sbb
loopne
loopne
cmp
or
mov
sti
jle
adc
or
push
push
add
aam
or
ret
dec
sub
or
jl
js
xor
ret
mov
movsl
inc
psraw
rcrl
ja
push
pop
lret
xchg
movsb
jns
mov
push
cmp
andb
je
push
jg
jns
dec
pop
out
dec
or
js
outsb
sarb
mov
lock
dec
cmp
add
or
dec
add
in
add
shll
push
arpl
push
dec
adc
and
add
sbb
push
cmp
cmp
adc
cli
adc
adcb
outsb
xor
xchg
mov
fiaddl
ss
sbb
and
push
jno,pn
rorb
sbb
push
mov
push
adc
leave
inc
sub
xor
icebp
sbb
mov
sub
cmpsb
sub
mov
test
adc
in
adc
adc
mov
fcoms
pop
pop
sbb
pop
dec
dec
test
push
pushf
push
lds
xor
inc
jbe
sti
loopne
dec
dec
lock
inc
add
and
adc
pop
and
sbb
inc
les
sbb
push
out
sbb
pop
fisubrs
push
je
pop
enter
shr
stos
cltd
sub
ret
xor
xor
jge
xchg
cmp
lret
es
pop
les
mov
adc
add
cli
dec
mov
fadds
shrl
fsts
adc
pusha
fs
jnp
add
add
push
mov
jns
sub
lea
jmp
rorb
jo
aam
add
sti
and
add
add
adc
push
or
jl
dec
push
sub
lock
mov
or
push
cmp
xchg
push
push
push
out
push
inc
inc
inc
shrl
mov
sub
cld
fldenv
lahf
jnp
mov
dec
sbb
shrb
inc
or
sbb
add
stos
ljmp
inc
mov
push
xor
push
dec
adc
in
add
xchg
pop
inc
mov
mov
movb
xchg
add
mov
pop
dec
jp
add
adc
and
les
add
pushf
mov
notl
inc
lea
push
cmp
popf
adc
sti
mov
push
sub
add
repz
gs
fucomi
stos
cltd
push
xchg
pop
orl
jg
sub
mov
or
jb
xor
adc
fcmovbe
mov
in
pop
xor
dec
or
mov
push
dec
push
push
int
das
add
inc
ds
and
pusha
mov
inc
nop
and
sbb
in
jns
sbb
push
mov
or
and
and
lret
repnz
push
mov
fdivrl
add
inc
sub
push
call
fnstcw
cmp
ja
push
mov
xabort
addr16
add
in
ja
mov
pusha
and
inc
ds
xchg
sub
add
xor
pop
push
movsb
repnz
es
push
inc
xor
jb
cmp
adc
lods
cmp
push
cmp
flds
or
mov
or
inc
fwait
ds
cs
xchg
or
pop
test
push
inc
addb
mov
add
mov
cs
push
in
inc
dec
dec
enter
in
push
dec
push
dec
sbbb
jmp
push
nop
cmp
push
mov
jecxz
mov
out
mov
mov
jmp
fnstenv
xchg
and
jae
iret
roll
imul
sahf
inc
cmp
test
cmp
mov
dec
push
aam
push
inc
adc
call
cmp
dec
lods
or
push
call
push
xlat
mov
in
pushf
shrb
push
sbb
insb
dec
xchg
jle
add
jmp
pushl
dec
mov
or
push
iret
lea
sarb
add
lods
and
lret
dec
loopne
xchg
ret
add
stos
adc
cld
stos
jbe
push
les
loope
sbb
cwtl
push
movsl
addl
dec
xor
test
push
sbb
jo
and
sub
mov
ja
scas
dec
dec
fmuls
pop
jecxz
xchg
cltd
mov
jmp
sub
pop
or
mov
jno
je
dec
sub
push
divps
fmuls
out
pop
rcrl
adc
mov
push
xchg
dec
xchg
nop
in
scas
in
lret
cs
jg
lret
mov
testb
pop
add
orl
in
mov
popa
jo
inc
jle
xlat
jo
fdivp
or
mov
lds
and
sub
repz
xor
push
pop
inc
out
pushf
jl
aas
push
mov
inc
add
pop
add
push
and
inc
ret
or
sub
adc
int3
mov
mov
jns
xchg
add
xor
cwtl
sub
xchg
mov
add
cmc
push
dec
xchg
das
sub
dec
js
cmp
or
rcrb
leave
jbe
aaa
pop
jo
dec
or
xchg
je
mov
add
push
test
or
ret
cmpsb
and
rorb
jns
scas
aam
mov
cmp
addl
lock
xchg
push
mov
jge
fiaddl
test
add
dec
movsb
cmpsb
imul
ret
jne
adc
xor
push
mov
lret
mov
ficoms
add
out
aam
xor
inc
test
dec
cmp
cli
sbb
inc
adc
jne
push
pop
enter
rcrb
in
test
or
pushf
jb
out
insl
subb
inc
xchg
test
dec
daa
pushl
scas
pop
nop
pop
and
scas
push
jl
mov
fs
mov
or
shl
mov
pop
cmp
jne
sub
stos
fldl
adc
lock
imul
dec
dec
popf
inc
jp
sbb
push
xchg
fidivrl
push
adc
lret
and
xor
push
add
movsb
add
mov
stos
jmp
loopne
jl
hlt
push
inc
call
or
sub
enter
jns
js
push
jno
dec
sbb
je
aam
adc
xlat
add
je
push
int3
cmp
int3
mov
mov
cmp
and
es
pushf
sbb
or
mov
jle
adc
cmp
mov
ds
push
lea
loopne
fwait
add
adc
cmp
sbb
shrb
and
sbb
stos
or
push
or
enter
les
les
xchg
adc
mov
nop
sub
and
decl
add
setp
push
sarb
xchg
sbb
pop
adc
orb
or
into
adc
xor
sub
sbb
push
and
cmp
jmp
inc
lods
jo
inc
mov
push
add
push
add
add
dec
sub
hlt
or
adc
push
fsubrs
cmp
in
xchg
pop
sbb
adc
dec
enter
into
cmp
or
sbb
jge
fcomp
push
xor
mov
push
adc
push
sub
rolb
in
int
push
inc
mov
xor
cmp
roll
dec
andl
rclb
mov
jle
mov
and
xor
lret
adc
sbb
xlat
sbb
int
clc
cmp
jbe
and
inc
push
sub
xor
adc
add
test
cmp
fimull
imul
xchg
or
inc
xchg
mov
inc
add
adc
lock
add
arpl
xor
push
imul
shlb
push
dec
inc
push
xchg
test
adc
inc
sahf
and
mov
push
or
cld
sbb
add
cmp
mov
leave
add
sti
lea
add
cwtl
jnp
push
push
xor
pop
loope
aam
pop
mov
outsl
out
inc
andl
test
bound
cmp
adc
bound
pop
add
loopne
or
push
inc
jno
push
in
cltd
pop
nop
test
nop
enter
test
das
sbb
pop
scas
cwtl
push
inc
std
jg
add
inc
out
lgdtl
pop
ret
sbb
or
in
test
pop
dec
dec
push
push
rcrb
in
cmpsl
orb
push
popa
std
das
mov
cmp
jb
lea
cmp
mov
fcmovnb
std
mov
rdmsr
or
aaa
cmp
lret
rorl
pop
mov
andl
mov
adc
lods
or
jmp
ficompl
aas
add
int3
or
je
push
or
inc
or
adc
or
jg
rcrb
cmp
fdivs
loopne
xor
lea
push
push
lods
rcrl
xor
or
outsl
pop
inc
xchg
or
sbb
aam
movsl
fcomp
dec
cmpsb
nop
add
inc
leave
fisubl
divl
enter
jo
imul
mov
inc
pop
out
rcrb
out
or
and
loop
sbb
mov
xchg
rcr
xor
add
ds
adc
xchg
jno
mov
jle
add
xchg
bound
sahf
add
mov
outsb
and
sbb
adc
mov
sysret
mov
movsl
mov
in
imul
dec
nop
push
dec
dec
sbb
in
and
pop
pop
xchg
sti
and
or
ljmp
add
sbb
rolb
gs
sub
pop
add
pop
shlb
and
sbb
into
dec
fsubrl
jmp
mov
sub
sub
add
aad
mov
push
mov
push
test
fisubrs
inc
mov
or
cltd
pop
iret
lods
imul
or
push
out
xchg
push
adc
push
sbb
push
cmp
add
pop
mov
rep
cmpsl
mov
push
lock
in
push
nop
lea
jle
movl
dec
jmp
lcall
dec
inc
push
sbb
adc
xor
or
ret
sbb
cmpb
dec
imul
sub
mov
ss
cmp
inc
hlt
pop
ret
push
add
or
push
or
add
fs
loope
in
mov
xor
inc
xchg
movl
in
and
data16
xor
popa
cmp
stos
mov
xchg
and
jge
mov
lcall
cmp
inc
cltd
add
addl
loop
pop
or
inc
gs
loope
je
cltd
cmp
and
inc
hlt
add
xchg
mov
aam
xor
ret
std
mov
aad
add
leave
jl
push
clc
testb
out
rcrl
mov
mov
adc
into
cld
sub
xlat
ret
cmp
lods
mov
aad
or
inc
and
faddl
mov
sub
lea
ret
push
push
mov
push
inc
inc
cmp
jb
leave
xchg
imul
jg
dec
in
jb
aaa
out
cmp
leave
js
lods
cmp
mov
jmp
mov
cmp
pop
fadds
lret
out
lea
push
mov
fwait
adc
or
xor
das
fiaddl
xor
or
xlat
mov
inc
je
add
mov
inc
jno
mov
mov
mov
faddl
jnp
xchg
adc
sbb
std
cs
push
das
inc
jecxz
sbb
lret
inc
test
sub
mov
jb
test
push
pop
sbb
jl
fldcw
mov
test
in
mov
adc
or
nop
cli
test
sub
mov
test
or
xchg
or
push
decl
dec
add
jmp
arpl
push
inc
push
push
aas
cmp
out
and
lods
in
in
shll
push
xor
dec
rol
dec
ficomps
pop
xchg
xor
or
pop
inc
in
aaa
xchg
sub
pop
pop
jle
sub
xor
sbb
das
das
das
das
cmp
fs
js
pushf
adc
cmp
dec
in
test
addb
inc
dec
orl
add
paddq
push
sbb
add
insl
sti
pop
movsl
add
sub
cld
xor
rclb
add
and
jno
adc
or
or
in
arpl
loopne
xor
adc
jbe
std
add
rclb
loopne
sbb
insb
stc
iret
mov
pop
sub
icebp
outsb
mov
scas
pop
or
lock
xor
push
jmp
stos
fisttpll
inc
sub
js
jp
xor
sbb
or
xchg
xor
pop
add
and
in
mov
add
punpcklbw
loopne
cmp
enter
and
and
movsb
add
sub
xor
cltd
mov
aaa
cmp
mov
push
int3
je
cmp
lods
outsl
lcall
cmp
inc
in
mov
push
mov
or
pop
mov
xor
inc
push
loopne
or
stos
and
xchg
lock
repnz
xor
cmp
cmp
xor
or
dec
pop
ljmp
bound
movsl
bound
in
out
or
adc
jmp
sub
jae
xorl
pop
nop
not
and
inc
pushf
adc
leave
andl
and
jnp
and
jne
push
push
jg
jae
push
rolb
add
and
cltd
subb
repz
dec
adc
fsubrs
inc
inc
sub
adc
inc
out
adc
inc
cmp
fld
aaa
subl
loope
cmp
inc
mov
testb
shr
or
lcall
dec
imul
fistpll
push
sub
or
mov
rolb
and
xor
andl
sbb
mov
inc
sbb
js
sbb
add
or
sub
loopne
pop
dec
and
push
mov
mov
pop
sbb
or
cmp
sete
add
xor
xchg
push
sarl
cmp
mov
scas
cld
sub
or
xchg
jge
pop
mov
xor
mov
repnz
inc
jp
mov
push
ljmp
dec
clc
pop
adc
lea
push
lret
add
rcrl
mov
push
push
aam
xchg
sahf
aas
aaa
call
aad
popa
add
dec
pop
adc
and
push
sbb
add
je
nop
call
add
adc
push
mov
orb
mov
roll
or
adc
inc
out
leave
add
jge
aas
xor
and
ljmp
xor
pop
cmpb
out
sarb
rclb
mov
sarb
bound
inc
adc
arpl
add
les
mov
outsb
mov
inc
add
cmp
push
sbb
in
or
sarb
dec
jne
fadds
adc
or
add
addb
push
inc
sbb
or
rcl
jno
andl
mov
popa
xor
and
je
inc
dec
rorb
fisubs
or
je
pop
cltd
cmp
jl
aad
loop
pop
sbb
cli
jo
cmp
movnti
lods
sub
subb
cld
sbb
bound
push
xor
sarb
jb
lods
xchg
pop
cld
push
pusha
pushf
mov
mov
test
dec
xor
call
xor
adc
inc
leave
mov
adc
fsubrs
rorb
and
inc
cmp
adc
mov
loop
mov
adc
nop
and
pop
insl
jge
shrb
cmpl
sub
pop
pop
xor
add
push
pop
movsb
jle
xor
adc
push
movsl
ljmp
add
icebp
sbb
jle
mov
dec
add
pushf
sub
popa
insb
loope
push
and
insl
push
adc
rol
fsubrs
outsb
or
cmp
cmp
pusha
push
cmp
pop
pusha
lea
mov
outsb
cmp
je
cmp
outsl
out
adc
filds
shrb
sub
sar
cmp
jbe
mov
jb
mov
jmp
mov
and
lret
dec
inc
dec
and
pusha
in
adc
ss
jecxz
addl
push
ficoms
jb
aad
cmp
movsl
add
mov
or
movsb
lahf
pop
add
sub
and
fiadds
fcoms
insb
and
and
ja
lea
mov
xchg
movsl
or
fdivp
sbb
test
dec
jb
push
mov
aam
sarl
xchg
shr
aad
mov
jl
pop
test
mov
and
dec
xchg
aad
mov
jmp
cmp
push
jns
dec
push
add
test
mov
sbb
inc
mov
xor
test
mov
sub
add
outsl
inc
pop
add
pop
nop
adc
dec
mov
ss
loopne
pop
repz
pop
imul
xchg
adc
cmp
inc
mov
jmp
stos
push
arpl
dec
add
lahf
ljmp
cwtl
outsb
sar
lea
jp
add
outsb
pop
cmp
add
call
jae
jb
pushl
lock
loopne
mov
pop
or
pop
jmp
inc
and
or
clc
jae
adc
and
add
add
sbb
sbb
arpl
xchg
adc
out
push
push
xlat
add
add
dec
push
cs
sub
cmp
pop
xchg
add
mov
pusha
cmpb
loope
je
adc
jle
pop
mov
sub
shrb
test
pop
jmp
adc
or
lock
mov
xor
xor
jmp
test
push
jp
dec
sub
inc
and
test
iret
xor
adc
sbb
inc
and
dec
xchg
push
mov
xor
enter
add
aaa
mov
add
add
dec
ffreep
cld
outsb
and
xchg
and
cmp
scas
xchg
or
pop
sbb
ret
dec
andl
ljmp
and
push
sub
and
enter
or
and
inc
outsb
fcmovnu
daa
dec
shlb
adc
sub
ja
add
sbb
adc
or
outsb
sub
fldt
mov
cmp
inc
roll
dec
call
dec
inc
ja
pop
mov
ljmp
mov
add
add
mov
add
test
cmc
lret
or
or
push
inc
fildll
jno
js
jo
mov
jne
xor
xor
jo
out
shll
sbbl
jecxz
adc
and
lret
sub
mov
cmp
lods
lods
int
cmpsb
and
mov
adc
mov
loopne
push
jl
mov
mov
add
nop
and
and
add
or
and
add
add
enter
jb
add
daa
mov
jb
add
loopne
add
sub
sbb
cmp
das
jmp
push
inc
cmp
pop
push
cmp
inc
push
sub
xor
or
xor
add
mov
vmovsd
inc
dec
push
leave
jmp
jnp
cwtl
mov
sarb
cld
mov
cs
or
out
pusha
push
in
cs
outsb
push
add
lret
imull
jb
or
sbb
adc
adc
sbb
xchg
adc
mov
loop
and
je
add
pop
js
dec
or
adc
inc
adc
sbb
or
loopne
mov
sbb
xchg
jno
and
sub
jnp
repz
sub
adc
adc
repnz
xchg
sbb
mov
xchg
add
jae
addb
and
lea
jge
mov
mov
dec
sub
push
jae
jne
ljmp
jg
push
push
jb
push
sti
mov
test
out
aaa
sbb
inc
cmpsb
xor
mov
jmp
fldl
xor
dec
out
out
push
mov
adc
adc
movsl
dec
out
or
push
and
out
or
xchg
xor
sahf
sub
dec
int3
ja
push
adc
outsb
dec
outsl
addr16
sub
mov
incb
sub
or
push
pop
test
loopne
enter
push
fsubrl
xchg
testb
and
pop
leave
ret
push
xlat
imul
or
add
rcr
xor
inc
add
shlb
push
push
test
adc
orl
rcrl
cwtl
fiaddl
inc
call
clc
jno
xor
mulb
xorb
mov
xor
or
popa
stos
rolb
xor
test
dec
out
and
sub
cmp
shll
pop
call
jns
in
xchg
in
inc
call
scas
ss
cmp
je
in
dec
les
insl
pushf
pop
dec
mov
mov
fmull
into
mov
int3
loope
cld
push
cmpb
jae,pn
outsb
ss
inc
aaa
pop
int3
ret
or
sbb
idivb
mov
jmp
int
push
les
leave
push
xchg
xor
jno
add
arpl
ljmp
lock
jmp
or
xor
push
add
movsb
or
inc
stos
pop
mov
adc
xor
loopne
sti
pushf
in
cmp
jg
nop
xor
aam
mov
popa
aaa
and
sub
aaa
mov
jno
add
enter
inc
jnp
jnp
push
add
xor
mov
andb
gs
inc
loop
jbe
mov
pmulhuw
test
add
mov
aas
add
mov
lock
aam
jmp
push
es
or
lods
xchg
outsb
je
orb
sahf
pop
and
add
mov
imul
mov
mov
jg
sbb
cmpsl
test
dec
inc
jg
jmp
add
or
push
or
scas
push
sbb
or
jb
les
push
or
dec
or
push
xchg
je
popa
push
xorl
and
dec
inc
pop
adc
or
or
mov
leave
jmp
mov
sbb
sbbl
push
orl
jbe
push
mov
add
push
xor
add
adcb
shrb
shrl
sub
and
mov
aas
enter
dec
in
movsb
sbb
and
push
pusha
push
dec
inc
xor
movsb
pop
push
lret
out
xlat
jmp
jl
push
mov
push
cltd
movsb
ds
movsb
pushf
sbb
shlb
xor
mov
dec
cmpsb
sub
lock
mov
cmp
or
gs
popa
jl
aaa
sbb
cltd
nop
adc
add
cmp
ss
andb
arpl
lret
jle
xor
scas
dec
adc
inc
push
roll
add
shl
std
jg
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
ret
js
popa
jae
stos
mov
mov
cmp
adc
jge
mov
pop
and
jns
sbb
xor
je
cmp
je
jo
outsl
js
pop
push
sbb
movsl
pop
mov
decl
ret
add
and
pop
scas
rcrl
and
imul
scas
inc
sub
add
push
leave
jns
mov
les
mov
pop
add
jl
les
ret
int3
jl
cld
pop
es
hlt
mov
cmp
jl
pop
incl
cs
pushf
jl
mov
cmc
sub
incl
mov
push
es
sbb
jge
test
and
pop
sbb
jp
jne
addl
ret
mov
cmpsb
bound
push
mov
add
cld
or
mov
lock
push
jmp
jnp
inc
push
add
dec
add
dec
or
mov
dec
and
dec
xor
mov
xor
sbb
rorb
stc
outsl
mov
pop
adc
jge
popa
clc
add
cmp
jecxz
stos
insb
cmp
sub
add
push
or
push
icebp
sub
push
push
in
fimuls
inc
testl
cmpsl
add
cmp
inc
in
inc
mov
push
pop
test
jne
test
mov
pop
pop
dec
or
fucomp
sub
jmp
dec
pop
cmp
mov
add
dec
adc
pop
xchg
pop
mov
xor
inc
add
push
hlt
pushf
cmp
mov
insb
dec
mov
sbb
dec
lea
push
call
loopne
cmp
jg
xchg
call
add
jp
dec
push
mov
mov
mov
shlb
xchg
ret
and
jmp
das
sbb
push
cmpsl
jb
adc
jns
push
sub
push
push
pop
pop
pusha
cmpsb
int3
loopne
es
push
aaa
and
pusha
out
mov
dec
push
scas
jge
inc
cwtl
pusha
xchg
and
adc
or
xchg
mov
int
call
call
movb
push
sub
jno
mov
jne
dec
pop
and
cmp
xchg
lret
push
lahf
xor
sbb
loop
std
sbb
xor
negl
pop
daa
les
mov
jp
jno
loopne
pop
xor
inc
bound
and
pop
sbb
pop
jne
cs
sub
iret
inc
sbb
add
xchg
mov
inc
jns
shlb
call
mov
xchg
add
lret
push
sub
int3
mov
sub
mov
and
mov
mov
adcl
out
and
dec
xorl
pop
leave
and
xchg
add
sub
pop
mov
and
and
xchg
stos
inc
ljmp
iret
mov
movq
and
dec
pop
leave
lds
cmp
and
test
adc
stos
sbb
movsb
xchg
cld
pop
lcall
repz
pop
dec
mov
jmp
inc
sbb
jmp
insl
push
and
sbb
push
inc
rolb
fcmovb
mov
adc
lea
dec
push
or
sahf
mov
mov
pop
push
add
adc
push
aam
lret
pop
pop
ret
mov
push
les
enter
je
fnsave
jb
add
push
sbb
mov
sub
outsb
mov
xor
mov
fwait
cmc
imulb
ds
mov
sti
movb
cmp
popf
pop
fcompl
mov
hlt
dec
outsb
jecxz
xor
mov
xchg
sarb
fmull
lea
adc
jmp
inc
xchg
dec
mov
lahf
test
add
and
daa
je
pop
pop
add
sbb
jg
pop
push
add
pop
je
mov
inc
clc
clc
or
lea
nop
jl
mulb
scas
lock
xor
rolb
and
jle
dec
add
and
adc
jecxz
jne
in
mov
sub
adc
pusha
movsb
or
mov
iret
inc
bnd
mov
xchg
mov
sub
jne
mov
in
shlb
and
pusha
push
cmp
adc
call
xor
mov
jno
add
sbb
lcall
test
push
in
adcb
push
in
ret
xchg
aam
inc
sub
mov
inc
add
mov
and
ret
push
stos
es
and
mov
rcll
les
lahf
enter
fsubr
fmull
fwait
mov
ret
in
mov
icebp
adc
adcl
iret
movb
lahf
out
add
pop
lret
cmp
ss
inc
pop
dec
or
rolb
fildll
add
sub
sub
inc
add
jge
mov
push
cmp
push
lds
stos
faddl
sub
dec
pop
sbb
mov
ret
xchg
add
ret
mov
or
jl
scas
pushf
lea
inc
pop
lcall
loopne
sub
sbb
adc
es
mov
ds
adcb
inc
cld
popa
xorps
mov
push
clc
cvtps2pd
int3
rcrb
hlt
add
fisttps
and
cmp
mov
or
inc
adc
ret
popa
aas
adcl
shlb
es
cmpl
pop
jo
push
mov
mov
cmpl
pop
test
and
shrl
ds
add
ficoms
sbb
or
jns
jb
loopne
xor
mov
add
pop
push
push
adc
jge
mov
insb
add
or
add
rcll
js
nop
jmp
divl
lcall
dec
mov
adc
jle
add
mov
sub
fucom
push
shld
fcoms
fwait
cmp
pusha
xrelease
cltd
xlat
and
jmp
or
fdivs
jno
dec
sbbl
pop
dec
shrb
pop
out
mov
add
jb
and
imul
add
addb
dec
add
mov
inc
and
sub
shll
or
ror
inc
adc
pushf
add
test
xchg
enter
mov
lds
sbb
jae
cltd
iret
jae
dec
pop
cwtl
dec
sbb
push
xor
sub
jae
jne
fisubs
jae
je
cmp
lock
inc
or
es
incl
popa
movsb
sbbl
dec
add
xchg
cmpsb
hlt
sbb
inc
mov
jle
addl
adc
mov
mov
rcll
in
add
adc
js
fsubrs
pop
je
fldl
pop
push
push
fstpl
mov
bound
inc
pop
cmp
jne
adc
adc
jne
push
divb
jns
sahf
and
clc
jne
or
jne
leave
call
or
push
fstpl
andl
push
adc
out
daa
rcll
mov
rorb
and
and
leave
out
mov
pop
xor
imul
aam
arpl
test
test
fldt
fstl
jecxz
in
and
aaa
mov
mov
dec
sbb
sbb
nop
adc
divl
jo
mov
mov
rcr
sbb
loopne
mov
jo
adc
lea
sub
fwait
aas
push
xchg
adc
or
or
lds
pusha
mov
pop
cmpsb
add
test
lock
cmp
inc
out
lret
aam
push
or
fimuls
outsl
neg
mov
movsl
pminub
dec
add
inc
dec
sarl
push
and
nop
adcl
push
dec
add
sub
sbb
scas
pop
scas
mov
jmp
sbb
test
insl
fldt
and
push
jbe
roll
push
pop
enter
fcmovbe
sbb
pop
mov
adcb
pop
cmp
jg
aad
dec
mov
add
fcomps
xor
nop
addb
sbb
jle
mov
push
jl
push
pop
or
or
push
popa
adc
sub
cwtl
xchg
das
push
icebp
popf
daa
or
push
nop
or
lods
fs
push
or
sub
add
rol
cmpsl
test
push
mov
subb
xor
xchg
in
push
add
push
dec
add
aaa
shrl
aad
and
ds
mov
xor
dec
sub
dec
or
dec
push
lods
sarl
ficomps
mov
mov
imul
mov
inc
inc
jno
add
outsl
add
xor
dec
enter
push
push
jns
ss
push
les
or
nop
lret
out
mov
xchg
or
es
rorb
popa
sub
sbb
or
adc
add
mov
inc
jo
loopne
sbb
fs
test
ss
and
fucom
imul
and
adc
fs
sub
add
adc
mov
enter
dec
sarb
mov
test
je
ss
sbb
adc
sub
xor
sbb
pop
cmpsb
daa
rcll
in
sub
sbb
sbbl
jg
int
adc
sub
jno
push
push
rolb
push
pop
test
in
adc
cs
arpl
icebp
and
bound
push
sarl
jp
push
cmp
add
adc
cmp
jle
fwait
xchg
or
add
mov
repz
and
psubq
adc
pushf
je
dec
xor
push
pop
add
add
int
fnstsw
cs
push
or
loopne
sbb
outsl
mov
sbb
cmp
jl
push
jb
pusha
inc
enter
xor
inc
cmp
addb
addl
test
pop
mov
push
dec
add
add
jb
ud2
aad
scas
pop
adc
jnp
push
loope
sbb
mov
xor
mov
loop
mov
adc
push
call
push
pop
popf
push
inc
sahf
data16
push
add
dec
and
insl
mov
push
push
lods
or
insb
shlb
in
jl
cmp
pop
mov
mov
jbe
mov
mov
test
lods
mov
fmul
sub
mov
add
pop
adcl
push
cmpsb
add
fwait
xor
xor
or
rcll
fisubrl
adc
push
xor
dec
ret
xlat
dec
mov
sub
push
inc
add
pop
fdivs
jge
ret
test
fisttpll
push
pushf
rcll
ret
fstp
ss
cmpsb
sbb
test
cltd
dec
lods
addb
and
ds
dec
push
pop
or
mov
mov
adc
mov
shlb
sbb
pop
and
cli
push
pop
jle
dec
or
push
and
dec
movl
add
mov
mov
add
inc
push
sbb
lea
dec
jae
xchg
adc
inc
loop
rorb
rorb
mov
sbb
jge
mov
xchg
mov
into
pop
cltd
xchg
mov
scas
nop
out
scas
nop
mov
xchg
push
bswap
lods
sbb
or
test
ljmp
sub
ret
rorb
sub
mov
movsl
iret
sub
pop
sub
dec
jmp
je
push
mov
add
lods
loope
xor
add
mov
jnp
lods
or
andb
xor
ljmp
lods
es
or
sbb
lcall
cmpsb
dec
cld
data16
jmp
pop
mov
rorb
ljmp
ret
dec
clc
out
xor
enter
add
jmp
nop
aad
sbb
test
rcrb
pushf
jecxz
mov
xchg
js
jge
jne
test
lret
jl
inc
and
pop
adc
pop
jne
adc
mov
and
or
xor
add
jle
and
add
push
lahf
sbbb
repz
push
and
jge
sbb
in
jmp
push
xor
push
jl
loope
test
add
dec
xchg
pop
popf
pop
lret
test
push
and
jae
lock
mov
inc
imul
mov
cmp
subl
xor
jnp
fdivs
lock
mov
mov
dec
dec
xor
shlb
add
nop
mov
add
popf
add
imul
mov
lods
repz
sub
in
pop
rclb
sbb
lods
hlt
sbb
xchg
pop
pop
shrb
sub
jnp
lahf
in
add
adc
fildl
nop
shll
jne
imul
jmp
rcrb
dec
inc
arpl
filds
pop
or
ljmp
mov
andl
adcl
adc
inc
mov
mov
loopne
mov
push
mov
adc
cmpsb
and
xchg
lods
xor
and
jnp
hlt
add
jo
pop
shlb
push
push
mov
add
dec
cmp
ss
mov
and
mov
and
push
mov
lret
sbb
adc
pop
pop
popa
stos
roll
rcll
mov
add
aaa
popa
insl
inc
insl
and
pop
mov
push
jl
sbb
inc
mov
add
xor
ret
cmp
inc
mov
mov
les
and
mov
jns
add
shlb
jno
sub
lods
lret
push
arpl
push
bound
add
fadds
inc
pusha
call
inc
inc
jl
push
jl
inc
push
rcrl
jg
dec
mov
aaa
mov
mov
sub
adc
icebp
jl
inc
loopne
or
mov
jg
dec
sbb
ret
lea
dec
push
pop
add
test
mov
ret
mov
or
rorl
arpl
mov
jne
mov
es
sub
je
ret
mov
xchg
pushf
mov
fistps
add
in
pop
xor
aam
leave
cmpsb
sub
add
xor
add
push
movsl
xchg
or
xchg
lock
lods
and
cwtl
inc
adc
mov
outsb
pusha
ret
mull
sub
enter
loop
inc
cmp
cs
dec
inc
inc
cmp
mov
rcll
mov
nop
lahf
stc
mov
data16
mov
stos
or
and
inc
xchg
js
lret
negl
pop
lahf
lret
popa
jnp
xor
cwtl
loope
ljmp
sbb
jg
adc
add
cmp
mov
or
inc
outsl
add
xchg
sahf
filds
mov
add
mov
jno
in
fisttpll
jbe
mov
cmpl
adc
inc
dec
mov
leave
stos
loopne
or
push
rorl
shlb
pop
ret
outsl
loopne
pusha
push
test
jg
jb
mov
flds
mov
sarl
sub
in
adc
inc
pusha
cmc
test
test
leave
add
pop
ds
dec
mov
add
loope
jae
je
inc
inc
loopne
sbb
xchg
xchg
int
inc
and
push
push
into
or
inc
or
adc
xor
pop
roll
xor
inc
mov
adc
sub
clc
or
outsl
adc
js
inc
shrl
loope
jo
leave
sbbl
addb
xor
add
mov
xor
mov
and
movsb
add
push
loop
sbb
fstpt
add
xchg
hlt
dec
fs
xacquire
movsb
push
add
je
fisubl
or
xor
or
es
rolb
xchg
sbb
subb
push
pop
jb
push
pop
mov
push
pop
inc
sub
lods
fisubrs
cmpb
jo
pop
pop
add
and
or
nop
aaa
je
sub
in
xor
adc
or
mov
or
push
adc
iret
jns
sbb
or
and
add
inc
dec
push
jnp
sarb
hlt
mov
and
ljmp
cs
xchg
hlt
or
sub
cmp
adc
je
sbb
divl
cmp
mov
push
sub
xor
loope
stos
mov
xchg
pop
mov
mov
and
or
xchg
movsb
icebp
sub
frstor
icebp
push
and
les
jne
mov
mov
dec
movsl
sbb
xchg
push
sbb
test
cs
pop
out
adc
pop
scas
and
rorb
dec
xor
std
sbb
out
dec
sbbl
shll
sub
and
adc
add
cmc
pushw
push
jns
sub
and
xor
push
mov
lret
cltd
sbb
insb
in
xchg
addr16
and
enter
adc
outsl
loop
lds
push
add
int3
fwait
inc
or
outsl
xchg
jp
xlat
and
pop
cs
or
xor
or
insb
pop
sub
sbb
test
add
fiaddl
aas
cmpsl
mov
mov
test
jl
inc
push
adc
cwtl
lcall
scas
xlat
add
pop
cmp
ret
std
sbb
mov
and
and
movsb
fistpl
cmp
mov
rolb
leave
mov
shr
shl
add
test
icebp
xor
pop
inc
add
test
inc
call
roll
cmp
lods
rcrl
xor
and
dec
mov
add
adc
mov
xchg
pop
out
xor
add
push
push
or
xchg
lahf
std
outsl
add
xor
aaa
test
push
xor
cs
stos
shlb
nop
sbb
jg
mov
or
cmc
fcoml
jno
es
add
lock
int3
add
pop
rorb
repz
cmp
push
sbb
inc
ficoml
adc
outsb
in
and
pop
imul
or
push
mov
jne
push
pop
fwait
ret
sbb
jnp
mov
sbb
add
cs
pop
rolb
add
leave
xchg
scas
xor
dec
sbb
flds
or
add
inc
test
mov
rep
and
sbb
out
popf
inc
sbb
sub
mov
into
lret
mov
mov
xchg
clc
insb
fisttpl
aas
shlb
aam
jne
loopne
pop
mov
pop
pop
call
data16
rol
loope
xor
fdivs
xor
pop
jne
rolb
cmpsb
js
or
mov
test
mov
pop
in
call
dec
lock
pop
add
sbb
loop
sbb
and
fdiv
je
lock
sbb
jp
adc
rcl
sub
outsb
or
mov
arpl
iret
repnz
xor
add
add
stos
pushf
gs
push
test
inc
push
aam
js
jae
push
sbb
sbb
js
pop
imul
push
testl
lea
mov
inc
inc
inc
test
or
cwtl
outsb
inc
mov
add
dec
push
mov
cmp
jne
adc
sbb
ret
add
cmp
and
adc
scas
test
add
fildl
test
jmp
add
push
loopne
ret
pop
das
or
pop
ret
cmpsl
rorl
jb
adc
jg
xchg
out
shlb
mov
mov
lock
and
pop
mov
dec
ljmp
push
cmp
je
pop
clc
adc
mov
cmp
jne
add
sub
cmp
jne
adc
add
pop
test
das
fucomp
pop
dec
adc
inc
mov
rcll
sbb
or
and
adc
xor
pusha
or
jno
inc
push
or
jl
sarb
sub
xchg
jecxz
sbb
in
or
pusha
adc
pop
stos
in
mov
dec
add
cmp
adc
ret
xchg
cli
mov
inc
add
xadd
ds
dec
or
sbb
xor
nop
inc
sbb
or
lods
adc
popf
enter
mov
imul
sub
fstl
lock
popa
out
sbb
add
dec
fcmovu
fnstsw
test
je
and
cmp
inc
push
xor
inc
adc
sbb
fldl
add
pop
punpckldq
mov
fdivl
in
fstpl
and
insl
clc
push
sbb
jno
and
mov
fldz
out
cmp
inc
add
jl
or
fsub
pop
fsubrp
inc
xchg
mov
jge
and
loope
out
shlb
outsl
add
pop
add
xor
dec
add
rcrb
adc
and
aam
mov
aas
inc
repz
dec
je
add
movsb
popf
inc
shll
adc
pop
mov
jns
and
adc
inc
sbb
and
loopne
mov
xchg
shrl
push
push
push
push
lods
xor
sub
test
xchg
sbb
scas
pop
push
and
pop
lds
inc
sbb
pusha
and
sub
sarl
pop
dec
lock
sahf
mov
lret
aaa
xor
mov
push
sub
mov
sbb
or
xor
in
iret
push
and
jnp
sub
and
loopne
sub
out
fsts
jle
or
movsb
fmull
adc
fs
dec
and
sbb
or
fmul
cmpl
push
push
adc
jns
push
and
push
xor
enter
push
adcb
movsb
inc
pop
push
movsb
fwait
mov
fdivrs
or
xor
or
or
and
adc
pop
push
jecxz
cmc
dec
ror
adc
inc
or
shlb
pop
pop
and
or
mov
dec
ret
mov
cmp
repnz
push
push
mov
and
int3
inc
jbe
in
lret
lds
in
fnstenv
or
cld
into
or
sahf
push
sub
stc
push
dec
xor
ss
outsb
or
sub
dec
mov
and
adc
xor
pop
jns
fldl
cwtl
rorl
subl
test
stos
sub
and
xor
pusha
xchg
fucom
lret
push
sbb
jne
sub
pop
daa
or
and
out
and
and
push
push
movsb
push
inc
ja
pop
and
xchg
cmc
inc
pusha
inc
inc
mov
pop
mov
mov
out
sahf
clc
or
cmp
cmp
pop
outsl
repz
repz
lcall
inc
sahf
out
sahf
push
bound
xchg
cmpsb
jns
out
mov
fldl2e
sti
repz
repz
sbb
xchg
cmp
popa
jb
cmpl
push
je
mov
jmp
push
xchg
leave
stos
xchg
jl
sahf
out
push
lret
adc
jecxz
xchg
mov
xchg
adc
je
sub
cmp
xor
mov
and
adc
lahf
les
push
push
inc
cmpl
xchg
inc
and
ja
inc
adc
stos
mov
sub
push
fldl
imul
outsl
mov
xchg
lock
cmp
and
out
popf
adc
sub
pop
push
push
cmp
andl
and
mov
ds
dec
sbb
ret
push
popf
and
int
push
leave
pop
add
lods
test
into
sbb
push
inc
scas
xchg
adc
loope
nop
sub
adc
mov
jl
inc
inc
or
fstps
and
dec
adc
or
stos
cmp
mov
cmp
shll
adc
aam
xor
filds
js
push
inc
lods
push
in
add
or
fisubrs
jne
mov
adc
sbb
fidivl
adc
xchg
mov
mov
push
bound
inc
stos
sub
or
add
inc
flds
loop
pop
sub
enter
jle
flds
sub
sub
mov
in
clc
addb
push
icebp
add
call
lcall
enter
xchg
mov
add
pop
add
cld
push
in
insl
leave
mov
pop
test
loope
adc
or
push
je
add
shrl
scas
in
jecxz
out
adc
lcall
push
stc
add
adc
add
and
push
filds
or
nop
imul
mov
xchg
or
adcb
mov
pop
enter
or
mov
and
pop
loopne
sbb
xchg
pop
in
push
sahf
xchg
or
xor
cmpsb
sbb
xchg
add
minps
inc
dec
jp
adc
sbb
pop
xor
xorl
cmp
xor
push
mov
push
push
inc
push
outsb
sbb
mov
sbb
inc
xchg
sbbb
nop
sub
add
inc
push
and
js
lcall
loopne
orb
push
push
push
popf
xchg
xor
or
jns
or
adc
sbb
mov
inc
jmp
adc
popf
pop
dec
mov
adc
or
shll
ljmp
in
loopne
test
lock
mov
inc
inc
inc
adc
push
insb
stos
cwtl
pop
mov
mov
adc
push
add
push
adcl
adc
mov
sbb
adc
iret
cwtl
dec
mov
jo
test
xchg
dec
add
inc
add
enter
call
pop
mov
adc
in
cs
mov
insb
mov
clc
xchg
jne
jne
lcall
pop
mov
mov
mov
sti
or
jbe
xchg
orl
or
sbb
cmp
dec
push
mov
rorb
adc
inc
ret
bound
adc
popl
mov
cltd
adc
stos
adc
clc
inc
stos
and
sub
mov
mov
es
jno
and
push
fisttpll
pop
xor
fwait
add
loope
add
and
mov
jno
mov
scas
and
cmp
jne
push
das
cmc
mov
adcb
or
pop
xor
test
sbb
and
push
mov
add
mov
cmp
jl
push
push
push
pop
jne
arpl
stos
lods
adc
outsl
mov
fldl
lret
or
push
mov
cwtl
sbb
lods
xor
and
push
in
add
or
dec
sub
adc
inc
push
or
addb
popa
and
xchg
pop
push
jne
imul
push
add
jno
je
lods
out
or
cltd
int
into
add
int
test
sub
mov
sub
ljmp
test
dec
add
push
or
adc
or
mov
push
xor
rol
stos
push
inc
rorl
aas
jne
test
mov
sub
xchg
mov
into
and
gs
adc
add
mov
add
cmpsl
lahf
mov
add
cmp
cwtl
add
add
add
push
sbb
repz
xchg
push
dec
mov
add
mov
in
es
jl
or
sbb
mov
inc
push
inc
insl
and
and
ret
cmp
inc
nop
outsb
jno
add
and
or
jnp
fcoms
sub
rol
mov
nop
stos
mov
adc
jbe
or
addr16
or
jge
jge
gs
push
pop
mov
pop
add
pop
lds
fstpl
adc
bound
and
adc
pushf
rol
out
push
add
movsl
clc
aas
xchg
mov
hlt
xchg
mov
pop
inc
mov
dec
cmp
fcmovne
js
dec
push
and
test
ror
in
mov
jo
push
add
adcl
sti
mov
insb
outsl
or
icebp
add
add
jp
push
mov
adc
and
lret
or
stc
fs
fcomps
xor
cmp
insb
cmp
gs
mov
inc
pop
jmp
movsl
jle
pop
out
or
jmp
or
and
sub
jne
fldl
mov
push
push
lock
stos
and
data16
or
or
fildl
sbb
mov
inc
jecxz
sbb
xor
pop
add
push
sub
test
cmpsb
push
adc
pop
push
insb
xchg
rcll
sbbb
das
dec
stos
or
dec
arpl
inc
cld
or
cmpl
xchg
dec
lods
sar
data16
pop
dec
dec
scas
sti
in
mov
pop
aas
jp
sub
mov
xor
cmp
adc
loopne
push
in
iret
dec
sbb
adc
loop
int3
je
loopne
lock
and
cmp
mov
push
sub
mov
pushf
push
xchg
dec
fwait
test
test
add
mov
es
sbb
jecxz
or
sti
insb
push
lock
and
cmc
dec
daa
push
dec
xchg
jbe
sbb
sub
sub
daa
sbb
faddl
call
adc
stos
cmp
loopne
inc
add
push
repnz
cmp
in
lds
xchg
cltd
jp
cltd
dec
out
cmp
aas
pop
fstps
mov
jecxz
bswap
pop
dec
pop
pop
call
pop
jno
imul
int
leave
adc
mov
or
fdivs
scas
xor
stc
mov
insb
ljmp
dec
fwait
shll
imulb
ret
or
adc
jl
xor
jmp
int
jbe
cmp
jl
or
sbb
popa
jp
adc
std
push
sub
push
cmp
je
mov
mov
push
add
inc
jmp
sar
nop
lock
mov
push
cltd
pop
idiv
mov
mov
aas
fsubrl
xchg
scas
mov
cmpsl
pusha
jl
and
int
ret
roll
pop
pop
lock
push
call
movsl
mov
fs
enter
test
aas
inc
shrl
inc
cld
inc
jbe
jle
or
xor
mov
inc
jb
add
dec
aam
dec
add
dec
lahf
lret
inc
push
in
in
in
dec
movsl
jnp
in
incb
xor
or
and
cmp
mov
adc
jae
aam
cmp
daa
cmp
lret
jo
jl
push
ds
fistpl
sbb
movsl
sub
shl
or
es
notl
cmp
pop
lahf
mov
pop
xchg
dec
movsl
repnz
rolb
or
sbb
and
outsb
and
loopne
stos
push
mov
pushf
adc
nop
xor
fistpll
clc
fmull
push
insb
mov
jbe
sbb
or
test
je
ss
lods
or
popf
ret
ret
xor
mov
fcoms
aad
pop
add
les
xchg
test
push
push
adc
jle
pushf
adc
andb
or
pop
push
push
lret
subl
or
mov
push
js
pop
sbb
inc
push
cmp
cmp
fildll
push
pop
push
push
cmp
xchg
pop
pop
sbb
xor
fs
and
jo
sbb
gs
adc
jge
adc
xchg
dec
dec
loopne
sbb
mov
daa
loopne
fdivrs
and
mov
fs
cmp
sub
fwait
sbb
data16
sbb
sbb
jns
sahf
dec
es
mov
sub
dec
shrb
jbe
jmp
pushf
fadd
loope
and
in
mov
rcrb
leave
and
imul
or
das
adc
outsb
mov
pop
mov
pop
outsl
pusha
adc
xor
mov
test
jo
inc
scas
pop
jbe
or
daa
jns
scas
and
mov
adc
enter
or
jne
enter
xor
or
loope
mov
pusha
mov
cmp
fs
inc
mov
dec
dec
es
dec
es
dec
jo
in
ss
push
movsb
in
in
in
xchg
mov
jl
insb
les
call
inc
and
call
ret
jnp
add
xor
add
mov
xchg
inc
out
testl
push
out
jl
insb
mov
mov
daa
xchg
xchg
mov
xor
and
dec
jb
lds
xor
rclb
mov
pushf
punpckhbw
test
fcompl
dec
push
aam
add
inc
mov
or
lods
and
fildl
clc
mov
cwtl
inc
jmp
enter
aam
inc
loope
push
jge
loopne
hlt
mov
in
pusha
addb
in
psadbw
and
xchg
push
adc
jl
fildll
test
push
iret
sub
dec
cmp
jo
inc
jl
aad
mov
cmc
pop
mov
jp
faddl
jmp
jg
or
or
outsb
jb
dec
pop
push
movsb
jp
inc
int
add
inc
jns
sbb
xor
xchg
or
sbb
push
pop
xor
loopne
jns
or
daa
jecxz
adc
pop
sub
mov
mov
imul
sbb
sub
xor
pop
loopne
dec
rclb
bound
lock
pop
pop
jne
mov
pop
dec
push
cmpsl
xor
inc
mov
and
outsb
dec
daa
scas
out
mov
insl
xor
jmp
pusha
fs
outsb
dec
push
or
inc
mov
sub
fistpll
mov
dec
add
dec
bound
adc
xchg
out
ds
dec
stos
fstpl
jp
dec
iret
sub
fsubrs
sub
nop
sahf
mov
ds
dec
imul
mov
sbb
rolb
stos
les
bound
jns
xchg
sub
push
les
add
ret
mov
call
inc
adc
das
inc
aam
and
sahf
add
sbb
xor
mov
and
or
jmp
cmp
lret
fs
fdivl
and
loope
repz
pop
fsubrs
add
or
fiaddl
xchg
pop
add
add
add
sub
mov
push
adc
in
push
mov
inc
or
insb
push
adc
stos
mov
sub
inc
or
or
out
pop
xor
pop
sub
dec
xchg
into
add
in
nop
xchg
imul
js
add
or
dec
mov
js
hlt
aad
dec
rolb
cmp
jge
mov
mov
out
mov
or
add
mov
mov
and
dec
jne
pop
push
jge
sub
sbb
pushf
aas
and
loope
fistl
ljmp
clc
lods
fidivs
sbb
xor
loop
xchg
jbe
mov
or
into
test
push
add
pusha
and
enter
clc
mov
pop
pop
adc
inc
daa
pop
shlb
es
lret
int
shl
push
insb
or
mov
push
push
add
mov
cs
frstor
popa
mov
cli
sti
or
cli
pusha
std
pop
cmpsb
and
adc
adc
adc
cmp
fwait
int3
gs
jo
sbb
adc
out
outsl
into
push
cmpb
loop
jne
pop
movsl
mov
je
push
loopne
push
xchg
out
push
sbb
jl
cli
or
mov
out
es
pop
cli
test
add
cltd
negb
sbb
xor
adc
xchg
jnp
add
orl
cmp
push
push
imul
mov
or
mov
loop
jb
fcoms
popa
das
sbb
insb
seta
orb
fcmove
xlat
adc
xchg
or
ret
icebp
push
jo
cmc
xchg
test
stos
xor
lret
jmp
orl
mov
test
mov
sbb
ror
cmc
clc
push
rorb
push
in
inc
rorb
adc
sub
aaa
inc
sbb
inc
mov
sbb
sub
rcll
pop
ret
movsb
xchg
xchg
mov
adc
xor
fcom
xor
or
mov
sbb
fmul
mov
mov
adc
lods
call
popf
sub
aas
pop
test
adc
je
ret
sbb
inc
in
cld
out
ss
cmp
xor
mov
mov
adc
xor
cmp
es
add
lds
sub
test
fmuls
cmp
add
clc
shll
mov
or
ja
test
and
or
ja
leave
mov
jp
add
scas
nop
sbb
jge
mov
test
add
and
das
movb
cmp
movsl
repnz
cmp
iret
cmpl
or
cmp
pop
gs
push
cmp
in
xchg
fisttpll
loope
cmp
push
scas
pop
mov
cmp
pop
cmp
sub
cmp
adc
cmp
and
fmuls
repz
mov
jle
add
in
stos
adc
mov
in
sbbl
sbb
cltd
jne
adc
inc
ret
mov
push
jns
out
hlt
leave
addl
push
rcrb
mov
sbb
adc
insl
sub
pop
add
test
xor
inc
adc
mov
add
add
into
into
jle
cmp
jl
jmp
cs
cmp
je
es
cmp
jne
rorb
jb
mov
stos
in
mov
mov
addb
mov
push
jge
add
adc
inc
insl
out
add
push
and
sbbb
lock
xchg
mov
aad
test
sbb
adc
imul
rolb
add
insl
lods
add
mov
mov
inc
add
or
xchg
jecxz
and
dec
or
mov
or
dec
leave
and
or
or
cmp
test
sahf
cmp
push
leave
inc
add
cmp
cs
pushf
push
cmp
cmpsb
mov
or
popl
adc
dec
jl
idivb
mov
mov
fdivrl
push
pop
inc
push
cmpsl
stc
and
lock
ja
loopne
jl
push
pop
in
stc
in
pop
inc
or
das
mov
ret
or
xchg
outsb
pop
or
sbb
or
inc
sub
stc
cs
and
or
sbb
inc
pop
inc
hlt
cmp
filds
aam
dec
or
jns
pop
push
sub
fs
imul
xbegin
cmpsl
or
xchg
dec
or
or
pusha
scas
imul
sbb
scas
je
pusha
mov
push
scas
pmulhw
xchg
and
jne
pop
ret
imul
and
jno
push
inc
lret
push
cmp
rolb
sbb
pop
inc
push
xor
lcall
sbb
gs
mov
add
fwait
push
lret
push
adc
sbbb
adc
test
xor
daa
ret
push
sbb
mov
sub
test
adc
call
enter
enter
aaa
or
loopne
lods
daa
in
and
xchg
xorb
mov
imul
push
pop
ljmp
mov
xor
enter
or
imul
cwtl
sbb
cltd
ret
jbe
inc
push
jp
mov
popa
pop
add
adcb
insb
sti
mov
mov
or
xor
mov
add
sub
cmp
jo
adc
in
in
jmp
cmp
cmp
jo
shlb
push
add
dec
mov
or
sub
lret
lock
adcl
movsl
xor
inc
push
aas
fs
xlat
divl
mov
push
nop
adc
sbb
aaa
jbe
pusha
ljmp
xor
lods
mov
cs
lret
adc
out
mov
test
shll
mov
sbb
push
subl
cltd
jb
or
or
dec
sbb
and
mov
jmp
pop
push
and
pusha
fistpll
add
xchg
mov
sub
or
addl
pop
cmp
jb
dec
mov
dec
jl
stos
push
dec
add
inc
pop
subb
shrb
xor
jne
inc
cmp
jae
mov
rol
adcl
mov
sub
mov
icebp
and
sbb
popa
sub
testl
cli
push
faddl
nop
roll
mov
mov
cmp
mov
push
pop
pop
pop
mov
sbb
or
pop
leave
stc
cmp
cmp
and
mov
pop
dec
push
imul
or
leave
jg
test
cmp
aam
pop
inc
dec
cmp
lods
xchg
aam
xchg
mov
push
add
jl
mov
inc
add
push
cs
fbld
push
push
mov
add
fisubrs
inc
xchg
adc
mov
adc
insb
add
pop
pop
add
dec
and
add
insb
or
sbb
push
pop
xor
add
loop
add
movsl
ja
adc
fistl
or
addb
add
into
fiaddl
sarl
xchg
or
int
jb
rolb
pop
sbb
dec
mov
or
xchg
xor
xor
movsl
loop
sbb
imul
cs
test
pop
pop
fidivrs
pop
mov
or
cmp
push
insl
jne
or
sub
in
inc
je
subb
add
jge
mov
addl
add
jns
xchg
rcr
sbb
testb
loope
hlt
xchg
out
std
jmp
outsb
pusha
or
add
inc
mov
and
xor
dec
loopne
push
add
enter
or
in
or
lret
mov
loopne
lock
enter
hlt
inc
inc
imul
and
sub
fs
sub
adc
inc
sbb
and
scas
sbb
xchg
jne
cs
add
and
and
rolb
adc
sbb
jno
mov
inc
jp
sub
adc
adc
mull
dec
stos
test
in
rorl
mov
repnz
jmp
inc
popa
lret
cmp
inc
add
add
pop
xchg
xchg
sahf
movsb
push
and
xor
mov
pop
std
add
sbb
gs
cld
mov
adc
or
add
pop
push
inc
add
sbb
add
out
and
rorb
add
mov
mov
repnz
adc
pop
stos
adc
push
mov
dec
into
lahf
cli
vmovaps
mov
add
ljmp
lcall
cmp
aaa
inc
pop
ja
push
out
ret
dec
and
or
js
pop
jbe
fs
xor
pop
icebp
rol
pop
mov
mov
pop
lods
or
dec
or
dec
fldl
jae
in
into
pop
ret
in
mov
and
add
sbb
outsb
dec
dec
dec
das
sahf
mov
sub
mov
cs
xchg
loope
add
add
mov
add
or
push
pop
popf
iret
xchg
mov
mov
test
sbb
or
pop
jecxz
cmp
pop
push
and
inc
mov
inc
addb
andb
pop
jb
jno
xchg
xchg
rorl
int
or
inc
inc
dec
daa
or
and
into
addr16
pushl
lcall
sbb
nop
mov
insl
mov
xlat
xchg
test
dec
add
int
sub
and
test
jge
push
outsb
insb
adc
and
in
js
inc
sbb
mov
sbb
test
fwait
sbb
shrb
jg
das
fadds
or
sub
jns
int
mov
adc
adc
push
add
add
scas
adc
dec
push
or
pop
rol
sbb
aaa
andb
mov
or
imul
sbb
mov
jl
mov
xchg
lea
jecxz
push
insl
test
sub
int
roll
or
xor
add
or
and
js
sarl
push
mov
adc
xchg
add
cmp
sbb
fisttpl
outsb
cmp
and
inc
mov
mov
add
imul
inc
xchg
or
sbb
aaa
mov
push
push
js
and
dec
adc
adc
sbb
js
je
or
push
jne
rorl
mov
sbb
mov
sbb
dec
fsubrl
mov
mov
sbb
mov
in
inc
xor
pop
xchg
inc
xor
xor
xchg
push
sbb
or
sbb
sbb
jno
adc
push
sbb
pop
mov
inc
push
or
ja
xchg
in
jmp
dec
dec
xor
and
roll
push
sub
bound
dec
adc
xor
sub
nopl
std
adc
jnp
pop
jp
dec
adc
test
outsb
pop
mov
dec
shlb
cmp
add
mov
xor
or
add
adc
shr
push
jo
lcall
lock
sub
inc
or
pop
jl
les
lret
imul
loopne
add
dec
sbb
add
and
es
mov
sahf
push
dec
pop
dec
mov
hlt
jecxz
xchg
push
sub
sbb
mov
mov
or
push
sbb
lock
je
push
mov
jecxz
pop
jo
sub
stc
sub
dec
pop
adc
daa
call
push
out
push
scas
jne
ljmp
jns
add
inc
xchg
inc
xorb
iret
xor
inc
rclb
mov
pop
inc
fsubs
js
sbb
lea
or
rcl
mov
les
mov
cmc
or
push
xchg
mov
mov
pusha
xchg
test
mov
fmulp
xchg
test
inc
dec
push
aam
push
aas
clc
and
sbb
lahf
adc
push
ljmp
inc
and
sbb
and
push
pop
in
addl
and
add
adc
dec
xchg
cltd
sbb
gs
fidivs
lret
adc
ret
rcr
push
adc
fwait
add
add
dec
loopne
sub
jle
popf
jns
cmp
jo
inc
add
add
jbe
pusha
mov
cld
pusha
lods
lret
dec
mov
add
dec
insl
sub
cmp
out
in
cwtl
xor
add
arpl
adc
das
adc
add
fldcw
movsb
sti
lods
cld
add
inc
adc
and
data16
sbb
fiadds
push
mov
adc
mov
inc
ss
mov
push
and
insb
lock
push
adc
rclb
xchg
movsl
std
mov
pop
xchg
xchg
dec
cmp
add
nop
cmp
xchg
xor
mov
and
outsl
jnp
test
mov
or
clc
add
out
inc
cmp
pop
push
or
cmp
mov
ret
push
xchg
push
or
or
mov
out
rorl
add
mov
aas
xor
ds
cmp
test
adc
cmp
call
fldz
loopne
xor
leave
cmp
mov
jg
cmp
or
je
add
mov
mov
inc
jmp
mov
and
jl
add
mov
sbb
sbb
mov
movsb
loopne
xchg
push
push
adc
push
pop
mov
dec
pop
psubw
push
out
push
push
sbb
jns
sub
add
cmpl
fsubrl
jmp
adc
or
push
in
pusha
imul
js
loopne
jno
ret
inc
inc
mov
test
push
and
mov
bound
leave
in
cmp
or
int
cmpsl
xchg
cmp
notl
add
xor
push
xor
ret
dec
pop
push
jne
mov
adc
mov
add
or
dec
sarb
fsubl
cmp
add
jecxz
dec
sar
xor
push
xchg
or
xor
adc
loopne
in
mov
add
cmp
adc
dec
fisubl
nop
and
sub
push
push
sahf
fldcw
repnz
dec
test
xchg
dec
jae
xchg
ss
xor
push
sub
andl
adc
int3
push
push
mov
mov
mov
jo
inc
fmuls
mov
inc
and
sbb
xchg
pushf
adc
popa
inc
xchg
jnp
add
inc
andl
mov
inc
std
fcoms
pop
inc
das
dec
mov
shl
adcb
push
rcr
test
cmp
xchg
sub
sub
inc
dec
pop
call
dec
or
les
addr16
negl
dec
lods
mov
jmp
push
mov
sub
and
push
push
or
add
push
sahf
pop
scas
add
push
push
hlt
dec
pop
jns
xor
push
add
or
mov
loope
das
in
sbb
mov
in
mov
xlat
adc
push
mov
in
jne
sub
hlt
or
cmpsl
nop
inc
pop
mov
test
adc
and
clc
loopne
adc
int
call
mov
stos
jge
push
fidivl
add
fadd
ret
mov
add
lret
out
add
fdivr
xchg
ret
test
fcomps
inc
sbb
sub
push
mov
sub
or
les
enter
aam
mov
or
cmpsb
xchg
lock
sbb
adc
sub
xor
dec
arpl
imul
nop
mov
jae
out
iret
out
mov
cmp
lea
jmp
lods
mov
lea
mov
mov
loopne
xchg
orl
les
loopne
or
decb
or
mov
jge
jb
jne
cs
scas
cmpl
pushl
movsb
xchg
aas
pop
inc
jmp
lea
movsb
inc
sub
mov
cmp
lret
adc
fst
dec
push
fcmove
ret
push
sbb
mov
mov
clc
or
pop
push
ljmp
nop
jno
add
pop
loopne
outsb
pop
sub
mov
dec
xor
nop
out
lock
mov
push
mov
and
aam
cmp
sbb
push
fldl
cmp
lods
clc
add
cmc
incl
out
push
sub
imul
cltd
dec
and
aam
js
mov
push
mov
xor
das
add
loope
dec
mov
in
push
scas
rcll
mov
add
adc
mov
add
loope
lea
icebp
sub
inc
add
lea
scas
lods
aas
dec
pop
mov
mov
cwtl
movl
xchg
out
xor
add
mov
paddb
outsb
jb
xchg
pop
hlt
je
outsb
add
sub
mov
mov
dec
js
pop
jmp
pushf
movq
daa
and
dec
or
pop
cmp
cli
sub
in
or
fldcw
test
loopne
jo
or
loopne
xorb
mov
push
mov
pop
and
pop
or
call
or
fisttps
push
mov
xchg
movsb
and
in
or
loopne
xchg
sbb
and
adc
inc
mull
or
in
stos
or
imul
push
lds
lock
icebp
das
or
or
add
push
pop
out
xchg
adc
jl
xor
cwtl
sbb
mov
repz
push
jecxz
lods
mov
es
mov
adc
out
mov
xor
xchg
aam
ret
pushf
inc
jmp
pop
and
ret
adc
cmp
jl
xchg
sbb
jge
test
lcall
repnz
sub
xchg
das
insb
pop
xchg
add
adc
cmp
int
cltd
repnz
add
daa
add
or
orl
push
in
gs
lods
push
push
outsl
scas
or
data16
pop
psubusb
dec
out
popf
test
mov
lahf
je
insl
pushf
mov
addr16
xor
aam
add
or
xorb
push
xchg
loopne
push
lds
popf
dec
sub
push
jne
sub
fs
ds
and
xchg
loopne
dec
xchg
or
sub
andb
adc
push
mov
sub
add
inc
lock
lock
inc
jo
or
mov
loopne
inc
cld
rcrl
int
inc
dec
push
push
jg
fcoms
mov
out
push
or
in
sub
ljmp
mov
out
loopne
in
mov
scas
jo
or
or
out
jge
dec
aaa
test
call
mov
invd
push
jne
xor
add
add
addl
sub
xlat
adc
cmp
xor
cmpsl
xchg
sub
popa
andl
mov
add
movl
rolb
xchg
in
adc
lea
xor
sbb
mov
dec
sbb
into
pop
mov
outsb
sub
mov
andl
cmp
or
sbb
cmpl
adc
stos
jne
xor
dec
cmp
cmp
jbe
cmp
jbe
mov
xchg
mov
lret
lea
mov
pop
push
fmuls
add
loope
xor
ds
pop
clc
cltd
cmp
enter
fimuls
test
sbb
mov
sti
dec
pop
push
adc
dec
mov
inc
nop
jne
or
mov
cmp
push
mov
jne
push
aad
es
dec
in
xlat
lock
push
mov
and
sub
mov
test
add
imull
ret
cmp
mov
vmptrld
das
or
aaa
pop
dec
stos
push
cmp
pusha
xor
mov
ret
and
aam
mov
xchg
inc
cli
jbe
aas
pop
inc
cmp
sbbl
pop
jmp
clc
in
nop
push
xor
add
mov
mov
loop
jbe
pop
mov
mov
or
ss
push
jmp
popa
sbb
pop
lret
ret
cmpsl
ljmp
lea
movl
lret
int3
sbb
mov
sbb
addr16
add
loop
insb
loop
dec
popf
push
in
mov
lea
mov
cmpsb
lods
xor
jo
add
or
fnsave
xor
mov
enter
sub
cmp
sub
mov
add
mov
fcoml
cltd
sbb
popf
mov
dec
and
lock
mov
ret
popa
mov
add
mov
or
ja
and
mov
mov
pusha
in
xchg
ljmp
aad
or
adc
dec
cs
xchg
sbb
cld
adc
push
sbb
aam
cs
xor
icebp
into
lea
cmp
es
sbb
dec
and
in
lcall
sub
and
add
repnz
cmp
fisttpl
jp
sarb
cmpsl
mov
cs
add
fsubrl
ljmp
xchg
adc
add
sbb
sub
push
jmp
add
in
jp
adc
add
test
xor
popa
push
popa
pusha
pop
decl
nop
lea
pusha
push
lcall
stos
jno
pop
dec
adc
inc
xchg
mov
insb
push
in
data16
mov
add
or
adc
jnp
add
loopne
pop
and
or
and
mov
jl
loopne
mov
or
mov
adc
testb
pop
rep
mov
in
push
inc
lds
xor
pop
mov
xor
dec
dec
push
rcrb
in
lahf
enter
enter
or
push
jb
int3
int3
adc
jge
andl
inc
mov
pop
pop
popa
popa
jmp
and
xor
fisttps
inc
incl
popl
inc
mov
jp
mov
mov
cmp
test
neg
fnop
add
adc
in
cmp
cmp
insb
daa
test
add
mov
and
stos
test
xor
mov
test
sub
adc
mov
lahf
dec
pop
xchg
arpl
inc
sbb
outsl
mov
loope
test
inc
aaa
scas
rorb
rol
or
xor
insb
lds
or
inc
sub
cmp
dec
and
fcoms
inc
sbb
out
lock
adc
or
pop
sub
push
imul
mov
bound
andl
rcrb
sub
hlt
add
or
inc
inc
jne
sbb
rcl
and
lods
cltd
mov
mov
incb
lods
or
dec
and
cmp
out
loop
fiaddl
dec
sbbl
scas
xor
lcall
mov
pop
jle
or
js
pop
push
loope
call
inc
push
inc
and
pusha
cmpsl
pop
cmpsl
xor
pop
push
iret
xchg
nop
shll
adc
or
jnp
cmp
leave
adc
sbb
aam
xorl
dec
pop
neg
pop
movsl
mov
sti
sbb
pop
inc
inc
and
and
les
imul
mov
je
push
cmp
dec
ret
pcmpgtw
pop
pushl
dec
mov
mull
add
adc
fcomps
xchg
or
cmp
pusha
daa
dec
insb
rorb
adc
add
push
dec
dec
out
sub
imul
sahf
or
push
push
lcall
cmp
sbb
push
lret
lods
push
sub
sub
or
add
mov
push
int3
mov
outsb
outsb
cwtl
cmp
xlat
mov
xor
jle
add
push
sbb
es
negb
adc
push
sbb
fcoml
cmp
mov
inc
mov
cmc
bound
sti
daa
fstl
mov
out
push
adc
pop
clc
jne
loopne
pop
jge
push
add
mov
fidivrs
cmpl
adc
adc
xor
or
push
xor
xchg
clc
clc
push
pop
inc
nop
add
and
add
arpl
adc
ljmp
or
pop
out
cmp
pushf
int3
popf
or
push
push
push
lret
cmpsl
push
rolb
cmp
call
add
insb
ret
jle
adc
jge
cmp
pop
xor
push
fisubrl
cld
dec
jp
imul
ljmp
dec
pop
enter
push
popa
dec
jnp
fcmovb
mov
sub
rclb
dec
imul
or
pop
mov
icebp
pop
cwtl
add
subl
rol
and
loopnew
sbbb
rclb
cs
ret
push
cmp
ret
rcrl
loop
les
loopne
loopne
push
daa
push
add
mov
add
out
stos
xchg
push
sub
or
inc
sbb
repnz
mov
sbb
add
or
mov
pusha
add
mov
or
sub
sbb
test
sbb
push
cwtl
aas
push
mov
push
std
pop
imul
push
cmp
jbe
lock
mov
and
adc
jg
mov
in
mov
mov
testb
pop
xchg
enter
cmc
xchg
fsub
jl
mov
and
loope
or
cmc
mov
aad
fmul
pop
dec
add
int
in
sub
xor
cli
mov
lock
mov
inc
mov
inc
cmpsb
cmp
xchg
insl
push
jl
cmp
or
add
insl
xchg
mov
lds
xor
push
jnp
cli
rcrb
test
and
loope
mov
lret
sub
push
das
jp
sub
inc
sbbl
mov
outsl
cmp
xlat
sbb
cmp
pop
adc
dec
fcoml
daa
in
add
lods
sbb
incb
add
sbb
push
scas
loope
rclb
cmp
or
out
test
push
loope
or
loop
hlt
or
cmp
adc
mov
dec
fistpl
mov
jl
mov
or
cmp
repnz
xchg
data16
mov
add
jo
add
fsub
fnsave
mov
or
movsw
push
cld
movsb
ss
cmp
push
dec
fnstsw
std
mov
adc
ljmp
or
mov
inc
cli
sti
jne
inc
cmp
jle
movb
cmpb
xchg
in
mov
aam
mov
push
flds
es
pop
cmp
lret
add
movsbl
xor
dec
lcall
add
pop
repnz
jbe
push
cld
je
js
jae
push
push
mov
and
sbb
or
imulb
test
hlt
mov
mov
jbe
lea
arpl
mov
push
insl
js
aaa
loopne
jne
inc
add
loopne
push
scas
cmpb
insl
sub
or
jnp
and
pusha
or
jmp
cmp
xchg
sti
pusha
jl
add
sbb
mov
mov
sbb
icebp
jbe
and
sbb
inc
push
inc
sub
or
and
or
cmc
ss
mov
xchg
push
cmp
push
push
jle
xchg
add
aaa
shlb
inc
nop
jb
mov
test
pop
dec
pop
icebp
inc
mov
and
inc
test
dec
rorb
mov
dec
dec
fisubl
sub
add
dec
dec
dec
dec
add
push
pop
mov
dec
dec
or
or
jnp
or
jbe
aaa
aaa
aaa
or
jno
jmp
push
jmp
por
aaa
aaa
aaa
adc
pop
adc
pop
adc
push
adc
dec
aaa
aaa
aaa
aaa
adc
dec
adc
aas
pop
jmp
aaa
aaa
aaa
aaa
sbb
xor
jmp
sbb
es
aaa
aaa
aaa
sbb
and
pop
pop
jmp
aaa
aaa
aaa
aaa
and
or
jmp
and
pop
xchg
psubq
add
test
test
adcb
or
adc
cmp
push
dec
cmp
repz
push
push
pop
data16
jbe
cmp
repz
mov
iret
mov
mov
mov
repz
repz
fsub
out
out
cmp
lock
cli
incl
pop
out
sahf
or
adc
and
outsl
clc
incl
add
push
pop
or
and
or
or
push
movups
mov
call
sbb
sbb
sbb
push
pop
and
and
aas
inc
cmp
xchg
xchg
rcrb
or
loope
sbbb
add
sbb
jecxz
mov
enter
inc
rorb
mov
movsl
dec
push
pop
mov
lea
movsl
enter
adc
dec
cmp
mov
or
leave
sbb
xor
or
sub
push
dec
inc
shl
mov
sub
or
fsts
push
pop
ffree
adc
bound
adc
and
push
push
cmp
scas
cwtl
clc
dec
jb
das
lret
adc
cmp
pushf
sub
aas
nop
iret
adc
push
adc
add
push
sub
sub
icebp
or
dec
pop
sbb
inc
scas
dec
lahf
adc
and
repnz
inc
xchg
sbb
add
cmp
push
pop
mov
and
xor
daa
jb
adc
mov
mov
or
add
or
jmp
adc
aad
add
or
int
add
stc
add
add
inc
popa
pop
push
jbe
jnp
inc
pop
leave
inc
inc
clc
ljmp
decl
adc
inc
dec
repnz
pushl
mov
add
inc
clc
lahf
test
pop
adc
rolb
xor
or
iret
xchg
out
add
sar
rcll
loopne
add
aad
mov
sar
adc
cmp
add
mov
lcall
pop
jbe
xlat
andl
mov
sahf
dec
mov
adc
dec
ds
xchg
mov
push
push
push
or
loopne
inc
js
mov
or
filds
adc
and
sub
inc
add
pop
dec
or
pop
add
cmp
cmpsb
jle
addl
inc
inc
mov
xor
test
xor
pop
test
cmpsb
pop
adc
adc
mov
daa
and
dec
mov
ret
xchg
das
xchg
pop
sbb
movsb
cmpsb
or
mov
outsb
or
inc
mov
cld
push
setns
or
cld
je
push
xor
dec
dec
shlb
rcr
or
pop
or
ja
lcall
bound
mov
xchg
or
sbb
adc
adc
push
dec
ficoms
and
or
sbbl
sub
cld
inc
adc
in
xor
mov
xchg
das
xor
or
xor
ret
inc
push
xchg
mov
xchg
sbb
push
lea
inc
xchg
push
pop
mov
std
push
add
xchg
imull
mov
popf
push
lret
sub
incb
data16
or
dec
cmp
push
mov
push
test
pop
xchg
jbe
movsb
movsl
ljmp
xchg
gs
fdivl
fcoml
xor
loopne
test
add
lret
enter
test
jne
es
aad
push
inc
scas
test
out
cmpsb
mov
push
shl
dec
xchg
fmull
ds
int3
stc
faddl
shl
dec
pop
shll
int3
enter
nop/reserved
mov
mov
ljmp
inc
mov
inc
icebp
andl
pop
jne
popa
shrb
jbe
dec
and
add
roll
xchg
sbb
inc
xor
lret
mov
mov
add
push
add
mov
cmp
and
and
enter
cld
pop
sbb
mov
pop
repnz
sbbb
add
sbb
popa
pop
xchg
xchg
pop
mov
add
push
call
add
jmp
out
cmp
addb
xchg
add
pop
cld
in
sbb
iret
xorl
enter
shl
pusha
xor
xor
repz
std
enter
add
lret
push
enter
pusha
repnz
lret
idiv
add
pusha
stc
xor
sti
std
sbb
movsl
fs
shl
sbb
movsl
mov
adcb
jle
push
inc
mov
sbb
add
cltd
add
pop
arpl
cmp
mov
sub
pop
ljmp
xor
ret
xorl
fmul
lds
jo
loope
lock
sub
xchg
add
add
loop
pop
pop
inc
or
cmova
mov
inc
xor
add
in
or
call
push
in
inc
sub
andl
push
mov
shll
pop
adc
inc
arpl
mov
das
pop
sub
pop
pop
mov
jp
inc
ret
ja
xor
mov
sbb
sub
imul
pop
push
fcompl
sub
dec
movsb
pop
jmp
xor
mov
mov
pop
shrl
fistpll
repz
js
cmpsl
push
add
add
fdivrl
push
add
inc
lea
cmp
mov
xor
aas
paddsw
ds
dec
mov
cs
or
aas
add
outsl
pop
or
mov
fidivrs
pop
add
testb
cmp
pop
add
dec
je
cmp
fs
mov
xchg
adc
xor
add
and
mov
add
js
out
cmp
std
dec
out
adc
push
dec
adc
call
lahf
scas
in
add
xchg
jo
outsl
outsl
xor
xor
jb
jne
in
fmuls
push
sbb
xor
daa
les
mov
call
in
lea
loopne
xor
test
adc
add
pop
jl
add
jle
mov
add
push
or
cmp
pop
jne
fsubl
push
jmp
cmp
je
ficoms
call
jl
loop
scas
cld
les
ljmp
scas
shl
mull
pop
cmp
dec
mov
jns
fdivrp
lea
lock
in
mov
in
je
jecxz
adc
sbb
dec
adc
jle
xlat
loop
push
cli
push
mov
inc
int3
mov
js
and
dec
pusha
mov
cmpsl
adc
cmpsb
hlt
push
iret
pop
push
sub
rcrb
inc
push
add
mov
divb
mov
sbb
cmp
xchg
test
mov
lock
and
add
call
push
rcrb
xor
cmp
shlb
lret
in
xor
data16
lds
cmp
sbb
adc
arpl
pushf
jl
jmp
inc
sbb
push
or
xor
cmp
xor
out
pop
pop
inc
addl
pop
scas
and
xor
and
sbb
add
cmp
sbbl
sub
sbb
pop
dec
sub
and
xor
outsb
adc
sub
sbb
scas
in
sbb
enter
or
mov
push
inc
xor
in
jmp
rorb
arpl
or
pop
add
inc
stos
stc
int3
cmpb
cmp
sbb
movb
xor
lret
addl
xchg
icebp
mov
cmp
das
add
xor
cmp
jle
mov
xor
dec
je
jns
ficomps
js
xor
jae
push
inc
pop
inc
out
adc
mov
sbb
pop
movsb
xchg
rorl
dec
cmp
pop
test
clc
movsbl
mov
stos
sub
dec
icebp
jbe
inc
aam
lea
pop
sub
inc
les
mov
xor
lods
sub
in
or
jle
xor
shl
inc
add
add
sbb
aaa
lea
jp
xor
je
in
dec
xor
pop
push
xchg
inc
jbe
pop
aas
xor
pop
pusha
jb
lret
inc
add
mov
insb
cmc
inc
jo
pop
orl
js
jl
jg
or
inc
cltd
test
cltd
mulb
test
cwtl
es
movsb
test
add
rorb
nop
andb
cmp
cmp
mov
ljmp
or
adcl
sbb
pop
inc
push
movsl
xor
add
mov
nop
in
sub
je
jl
and
aas
enter
push
incl
cmp
jl
sub
repnz
outsb
mov
mov
aaa
cmp
jne
inc
cmp
xor
jg
mov
je
out
xor
xor
sbb
iret
inc
inc
bound
add
pop
jle
clc
jl
jmp
and
enter
cmp
push
xchg
pop
add
aad
mov
push
push
iret
or
mov
cmp
jne
notb
mov
pop
sbb
arpl
and
adc
sub
add
push
hlt
push
sti
inc
mov
sti
and
je
sub
negb
inc
mov
loope
cmp
inc
jmp
xor
aaa
mov
jo
fwait
xchg
js
mov
mov
or
mov
xchg
adc
sbb
xor
mov
jecxz
cmpl
into
repnz
sub
xchg
add
sbb
popa
aas
xchg
js
inc
sbb
loopne
cmp
jge
cli
ret
cmpb
jl
xor
push
inc
jle
daa
mov
inc
add
push
in
add
jle
ret
neg
pop
pop
sbb
xor
outsl
rcrl
imul
mov
hlt
mov
sarl
add
filds
jo
pusha
sub
sub
imul
adc
mov
loopne
mov
add
pop
jne
push
inc
pop
inc
or
add
add
jp
jo
push
daa
cs
or
mov
jge
push
add
stos
push
clc
mov
rolb
dec
ret
pop
outsb
sbb
adc
pop
push
xchg
je
jecxz
cmp
das
leave
adcb
mov
or
rorb
aam
sub
dec
and
nop
inc
ja
adc
xchg
ficoms
call
push
add
lret
repz
pop
das
out
jle
cmp
cmpsl
mov
dec
je
jb
and
call
rcrb
pop
push
cmp
cmp
icebp
dec
stos
icebp
clc
add
imul
aas
adc
fs
adc
addb
insb
mov
sub
out
gs
mov
inc
es
cmp
jmp
and
scas
dec
aad
jge
add
mov
ljmp
test
lds
pop
dec
jecxz
lods
mov
xor
lret
in
mov
mov
xchg
and
mov
mov
jecxz
cwtl
pop
mov
neg
call
testl
jne
and
or
cwtl
and
mov
testb
jecxz
or
and
cmp
loop
push
mov
add
pop
push
shll
cmpb
inc
pusha
lds
push
jecxz
rorl
and
popa
or
cmp
das
or
sbb
fadd
dec
stos
jb
cs
xchg
roll
adc
mov
jno
filds
jecxz
rorb
outsl
inc
mov
fnstenv
mov
mov
shrl
xchg
mov
push
xor
popf
lods
pop
add
push
popf
cmpsb
cmc
sbb
dec
xor
nop
shlb
jmp
in
mov
push
ret
add
push
and
inc
cmpsl
mov
stos
pop
pop
clc
adc
xchg
and
icebp
inc
push
inc
or
ss
pushf
xor
mov
sbb
mov
xor
jns
in
addl
sbb
mov
clc
xchg
rorb
js
sbb
pop
or
sbb
js
sub
icebp
sarb
pop
xor
dec
loope
xor
or
andl
mov
add
ja
mov
add
add
cmp
push
fcomp
dec
xchg
fistps
hlt
and
add
movsb
ss
mov
mov
push
sbbb
shlb
jo
and
lcall
neg
adc
sbb
push
ss
lret
mov
out
shr
adc
adc
lea
mov
arpl
test
dec
enter
pop
dec
push
lea
lret
imul
enter
or
adc
add
adc
lcall
xlat
and
add
adc
adc
cmpl
pop
jne
repz
lea
push
add
sbb
data16
xchg
ja
loope
or
adcb
lock
pop
or
mov
or
jecxz
cmpl
aam
cmpsb
push
aaa
pop
movsl
mov
ljmp
push
paddd
jle
out
dec
rorb
sbbl
mov
dec
or
sbbb
add
sub
add
in
test
jp
hlt
add
add
inc
push
cltd
stos
jno
cld
sub
aaa
lcall
loope
movsb
add
inc
aas
jb
mov
xadd
mov
outsl
mov
sub
mov
cmp
decl
push
fcmove
xchg
adc
mov
push
adc
test
pop
mov
outsb
mov
push
xchg
test
loop
lea
xor
adc
in
push
adc
fisttpll
insb
inc
push
push
push
cmp
push
xor
cmpsb
sti
pusha
insb
ret
test
sbb
jbe
xor
xchg
inc
push
in
cmpsl
sbb
mov
push
leave
outsb
add
or
and
lret
pop
or
xchg
mov
sahf
pusha
ficoml
imul
and
inc
cmpsl
test
xor
repz
lea
orb
inc
sub
xchg
mov
pop
mov
mov
inc
cmp
mov
jl
mull
addb
das
fisttpll
add
jo,pn
pusha
sub
mov
pop
mov
dec
nop
sub
movzbl
outsb
fsubs
adc
mov
pop
cwtl
xor
mov
mov
jne
push
pop
xor
xchg
mov
xchg
rorb
xchg
mov
and
or
mov
mov
add
inc
or
in
xchg
add
add
mov
mov
popf
or
and
insb
mov
out
mov
xor
jmp
mov
into
jmp
fwait
xchg
add
adc
mov
mov
call
aas
popa
xor
xor
add
sub
jo
sbb
push
add
shll
lock
add
sbb
inc
cmp
jl
sub
fs
push
push
out
jge
or
cltd
push
jae
push
mov
pop
icebp
sbb
aam
sbb
movsb
jle
nop
pop
add
xchg
xchg
xchg
lcall
mov
ja
or
jle
add
mov
jmp
xor
idivl
xor
cmovns
icebp
lea
inc
dec
inc
and
push
bound
jl
frstor
pop
mov
sbb
push
fwait
mov
push
call
xor
and
shlb
or
loopne
fcmovb
out
aaa
ss
xor
push
ret
push
cs
cmp
inc
cmp
push
ret
add
lods
ret
dec
imul
push
or
jecxz
adc
push
lcall
xor
mov
mov
insl
imul
daa
mov
loop
testb
test
or
test
or
in
stos
xor
sub
in
mov
movsl
lods
testl
daa
subl
mov
mov
loope
inc
icebp
insl
inc
cs
sub
repz
add
adc
or
shll
js
or
sub
inc
addr16
add
pop
aam
add
testl
daa
loopne
int3
xor
cmp
fistpll
movsb
push
testb
outsl
pop
xchg
fdivrs
jne
mov
push
sbb
pop
ljmp
repz
push
dec
pushf
inc
out
aam
or
idivb
push
or
jne
push
mov
inc
mov
fsubrl
outsl
push
or
lea
pop
or
mov
sub
inc
jmp
push
jmp
add
add
jg
add
mov
shr
shl
add
cmp
repz
xadd
add
lret
mov
jne
movsw
movsb
mov
insl
or
fiadds
arpl
mov
lods
jge
imul
in
or
cmp
adc
or
or
push
sub
mov
fisubrs
dec
add
popf
mov
push
cmp
add
adcb
hlt
lcall
adc
add
add
dec
xchg
jo
dec
cwtl
push
or
pusha
loop
pop
faddl
fstl
fldz
fcomp
fnstsw
push
push
add
jmp
pop
faddp
andl
push
push
cwtl
jo
cmp
adc
int3
sub
xchg
shl
imul
mov
and
pop
xchg
popa
mov
outsb
fs
push
xchg
lock
lock
cmpsl
adc
mov
clc
hlt
xor
adc
test
inc
pop
stos
pop
aam
je
dec
xor
rolb
in
or
movsb
das
dec
push
jle
jmp
iret
jge
cmp
add
cmpsb
ljmp
fistl
mov
jmp
inc
sub
sbb
adcl
js
sbb
push
adc
and
dec
clc
add
jne
cmp
lock
push
test
test
stos
and
loope
add
or
jmp
fldl
and
xor
test
sbb
stos
add
dec
repz
xor
shl
dec
sti
xor
fimuls
enter
cmp
rorl
xor
loopne
in
lock
cmc
aam
xchg
jne
mov
movsl
lret
aad
add
daa
shll
test
mov
cli
add
hlt
cltd
sub
jbe
aaa
mov
lock
popl
icebp
pop
outsb
and
sbb
dec
data16
sbb
sub
mov
adc
and
mov
adcl
movsb
mov
xor
pop
sbb
aam
pushf
mov
sbb
mov
das
stc
adc
push
dec
mov
push
dec
out
popf
lods
push
and
or
mov
cmpl
roll
mov
and
arpl
mov
add
fs
and
repnz
lock
jmp
push
adc
movsb
push
pusha
sbb
pop
or
test
dec
movsb
mov
mov
jbe
add
pop
mov
loope
in
cmp
pop
mov
pop
out
mov
add
mov
sub
mov
call
and
push
loop
std
push
adc
mov
mov
adcl
loopne
in
add
test
dec
add
fldt
dec
and
repnz
cs
mov
jne
lods
push
sbb
jge
xor
push
hlt
adc
dec
add
je
cmp
push
mov
adc
or
and
add
adc
aad
cmp
jl
adc
cmp
push
sbb
pushf
fs
jo
stc
push
lock
jecxz
adc
mov
dec
push
inc
pop
lock
xchg
push
cmpsl
cmpl
or
rol
and
fwait
out
mov
insl
jmp
push
push
push
mov
lock
shld
fcompl
aaa
mov
mov
pop
adc
int3
push
shll
xchg
mov
add
sbb
enter
adc
test
mov
add
inc
cmp
pop
cwtl
and
push
sub
push
add
rorb
test
add
adc
mov
fadds
aaa
adc
sbb
push
loop,pt
imul
dec
cmp
pop
lds
jmp
dec
ret
xchg
cwtl
repz
sub
xlat
in
xchg
mov
mov
xor
sti
inc
rolb
or
ffree
fdivs
adc
fcoml
es
nop
lret
inc
movsb
xchg
add
push
jo
add
loope
adc
push
cmp
jb
sbbl
xor
test
jnp
aam
mov
push
xor
mov
inc
popa
push
es
arpl
xor
imul
and
fwait
jnp
iret
xor
and
cmpl
push
push
dec
pop
or
push
dec
jbe
and
xor
subps
ror
test
outsb
or
xchg
inc
pop
addb
adc
aaa
mov
adc
js
add
dec
or
dec
inc
mov
pop
hlt
bound
sbb
iret
mov
loope
lea
push
push
or
pop
jbe
inc
rolb
pop
stos
scas
cmpb
call
testl
ja
mov
hlt
xor
je
sbb
pop
mov
mov
mov
loope
out
or
sbb
pop
xor
in
cmp
enter
fildl
shlb
jl
inc
call
dec
mov
inc
and
push
faddl
arpl
mov
ds
ss
test
xor
and
xchg
outsb
data16
pop
xchg
lea
das
test
bound
xchg
sbb
xchg
dec
add
jno
xchg
lods
inc
xor
ficomps
mov
push
cmp
xchg
cmp
fdivrs
mov
jnp
nop
pop
adc
pop
das
nop
mov
enter
cmpb
xchg
pop
data16
dec
mov
lods
push
pop
repnz
aam
sbb
pop
adc
mov
and
mov
enter
ss
and
inc
add
dec
addl
arpl
adc
mull
add
add
ret
leave
pushf
mov
ret
inc
fadds
insb
aas
add
jno
in
pusha
inc
sbbb
and
dec
pop
pop
pop
xchg
inc
sahf
or
imul
inc
or
shlb
pop
mov
add
stos
and
mov
stos
or
test
add
sbb
xor
mov
pmaxsw
pusha
in
mov
popa
mov
dec
push
jno
je
loopne
ljmp
mov
xchg
xchg
or
xor
shrl
mov
sbb
mov
rolb
js
lods
lods
es
mov
cmp
ret
push
sbb
es
pop
mov
jle
lock
dec
dec
and
and
or
mov
sub
xor
push
iret
rorb
cli
cmc
jmp
jl
mov
push
in
mov
fidivrl
push
push
arpl
add
inc
loopne
cltd
adcb
mov
xor
mov
adc
mov
cmpsl
lret
jl
sub
pushf
add
ljmp
ret
xchg
ret
icebp
push
adc
dec
xor
xor
enter
add
mov
arpl
sbb
cld
aam
stos
mov
push
pop
ret
dec
ja
loopne
xchg
test
and
inc
adc
dec
and
das
pushf
mov
shrb
add
fists
lods
sbb
outsl
rorl
out
loop
fidivl
push
push
mov
jns
mov
icebp
cmp
inc
add
add
sbb
shrb
xor
mov
bound
fcomps
or
jo
lea
push
or
arpl
add
mov
jae
mov
sarb
inc
jle
enter
or
push
repnz
ret
xor
push
push
and
addl
mov
orl
in
push
mov
pop
or
cmp
scas
xchg
xor
push
and
aaa
sub
sbb
pusha
rclb
sbbb
out
fdivrp
dec
stc
bound
or
xor
xchg
mov
mov
jb
jae
test
pop
aam
out
inc
dec
dec
or
pop
mov
add
test
pusha
sbb
cmpsl
jp
push
add
in
sbb
aad
stc
push
das
sub
add
shl
pop
dec
lret
incb
or
scas
xchg
ljmp
add
test
sub
in
adc
xchg
clc
and
testb
fisubs
les
cs
cmpsb
mov
fmull
fcompl
xchg
mov
xor
popf
dec
insb
sbb
or
lods
sar
rcll
and
int3
aas
and
in
fidivrs
xor
sbb
add
nop
lds
ljmp
and
sub
mov
adc
call
push
es
sub
push
les
in
std
fs
es
enter
or
push
movsb
sarb
outsl
idivb
sub
pop
out
leave
inc
loop
fiadds
or
leave
icebp
push
mov
loop
jne
clc
lcall
sub
ljmp
mov
pop
push
inc
insl
ret
xor
ds
pop
or
out
sahf
push
push
mov
xchg
adc
adc
jne
or
cmp
fstpt
mov
and
adc
ljmp
out
add
xchg
imul
fs
push
pusha
js
xchg
call
fcmovb
sub
add
repz
inc
or
mov
mov
or
push
and
add
fnstcw
fidivl
adc
das
pop
out
adc
enter
arpl
push
call
rcrb
shll
cltd
pusha
cmp
rol
xchg
push
and
add
popf
mov
ss
sub
mov
jmp
cmp
jno
fiaddl
fdivl
aam
andl
lods
dec
mov
and
sbb
mov
movsb
cwtl
hlt
mov
mov
pop
jno
in
jle
sub
inc
or
cld
sbb
jne
sbb
iret
cmp
push
push
add
pop
dec
add
test
push
out
int3
jge
sub
cmp
pmulhw
repz
cmp
hlt
jge
push
into
mov
shrb
scas
icebp
add
and
je
push
add
xor
jns
bound
in
pushl
jp
fistl
lds
ja
jne
aas
mov
add
mov
cmpsb
js
in
int3
xorb
je
test
pop
and
ljmp
ja
cmp
push
movsl
xor
aad
xor
and
fdivs
xor
dec
dec
adc
dec
adc
push
je
add
xor
jmp
mov
je
fs
or
addr16
dec
je
ficoml
mov
xlat
and
adc
fbstp
jg
mov
je
fwait
les
pushf
rcrb
sbb
push
add
bound
in
and
jmp
scas
pushf
sub
lea
test
push
lret
inc
cmp
arpl
ja
dec
mov
data16
adc
shrb
jge
in
insl
and
ja
dec
aaa
add
scas
or
jb
outsb
cmp
mov
or
loop
xor
cmp
push
cmove
adc
std
mov
sub
jge
push
mov
or
das
lock
jl
mov
int
aam
or
mov
add
bound
jae
rcrb
add
test
cmp
adc
loope
inc
pusha
jge
popf
add
dec
sbb
dec
fnsave
insb
gs
es
add
lock
and
pop
push
fs
test
cmpsl
jo
pop
cmpb
adc
dec
cmp
dec
cmpb
mov
dec
fsubs
test
push
mov
cld
dec
ljmp
push
sub
sub
clc
jb
pop
inc
sub
js
pop
notl
mov
js
sarb
test
mov
mov
les
add
push
pop
sbb
xchg
shll
push
mov
pushf
jne
mov
popa
adc
daa
cmp
or
and
subb
push
mov
lods
dec
adc
push
mov
test
pusha
and
jbe
popf
xchg
pop
mov
stos
sub
push
stos
pop
cmp
sub
hlt
shlb
shrd
cmp
je
inc
sbb
jo
push
in
imul
add
std
or
dec
sub
cmc
push
xor
pop
push
push
mov
cmp
nop
insl
add
movsl
cmp
jnp
popf
jl
jo
push
ret
xchg
arpl
pop
je
adc
adcl
xchg
cmp
cmpsb
jo
adc
xchg
mov
cltd
lea
xchg
push
mov
xchg
dec
sbb
fwait
mov
xchg
lods
sbb
adc
or
imul
or
or
jns
incl
push
imul
xorl
pop
cmpb
es
sarb
pusha
cwtl
leave
adc
outsb
push
xor
jge
add
rolb
shlb
sbb
dec
or
aam
dec
ret
leave
dec
movsb
popf
mov
pusha
or
adc
adcl
pop
sbb
aaa
iret
out
mull
inc
xor
popf
and
out
es
insl
mov
js
mov
xchg
pop
pop
or
mov
lds
jo
push
movsb
pusha
ret
or
pop
js
cli
add
cld
or
or
rep
mov
inc
icebp
add
dec
sti
cmp
jne
adc
xchg
or
inc
in
lock
mov
or
lret
pop
lcall
les
jl
push
stos
popa
out
and
xchg
adc
xchg
and
mov
adc
xor
lea
pop
cmpl
inc
fists
jle
push
aad
inc
xchg
aaa
push
jae
lods
cmp
std
and
mov
jmp
test
mov
cmp
stc
cs
jae
sbb
sub
cmp
loopne
mov
adc
sub
pushf
pushf
jmp
fistpll
mov
xlat
enter
xor
pop
outsb
mov
pusha
lods
or
les
adc
xor
lds
js
aam
je
popa
pop
movsl
int3
and
nop
cmp
sub
cltd
popa
nop
mov
cltd
push
pop
or
push
aad
push
mov
orl
pushf
movsb
scas
scas
and
loopne
pop
movsl
std
pop
ret
push
inc
mov
shlb
or
fwait
arpl
add
inc
enter
mov
fmull
in
sbb
sbb
test
push
or
lds
gs
ret
adc
jb
mov
pop
push
inc
xor
arpl
daa
jno
dec
test
test
jae
cs
inc
call
lret
xchg
or
sti
add
sbb
movb
or
sbb
adc
and
xchg
and
jno
jmp
push
fmuls
loop
add
les
mov
loopne
push
stc
cld
or
mov
push
and
and
mov
mov
sub
loopne
loop
in
cs
mov
push
pop
pop
mov
or
adc
imul
cmp
push
mov
fneni(8087
cmpl
in
call
ret
cmp
add
cmpsb
icebp
adc
rclb
loope
cmp
push
subb
push
fmull
orb
xor
enter
cmp
and
dec
aaa
call
sub
pop
push
inc
inc
js
loop
dec
pop
sub
fs
pop
lea
rorb
cmp
bound
lock
and
xchg
or
mov
fistps
pusha
loopne
mov
push
mov
cmpl
dec
pop
dec
inc
push
xchg
pop
jns
xchg
mov
sub
and
dec
jl
push
cs
pop
jecxz
pushf
addl
inc
add
mov
addl
sarb
xor
rorl
xchg
subl
add
mov
or
xor
add
sbb
xor
pop
mov
mov
pusha
xor
imul
add
aad
xor
or
xor
inc
mov
lahf
pop
xchg
mov
sahf
sub
loop
cmp
xor
inc
mov
lds
jle
mov
fs
lods
add
add
push
ds
bound
mov
adc
sub
fstpt
sbb
loope
cmp
sti
ljmp
cmpsl
add
cmp
jg
mov
mov
cmp
into
shlb
add
test
out
je
xlat
inc
adc
pop
movsb
mov
push
lods
pop
sbb
cli
add
shlb
dec
mov
rcr
int
cmove
mov
push
jg
imul
je
dec
push
push
or
leave
std
fs
stos
pop
or
je
cmp
jne
inc
inc
jmp
inc
fs
stos
je
xchg
and
xchg
jmp
cmp
jne
int3
dec
jmp
mov
sbb
xchg
adc
not
nop
xchg
jne
mov
pushf
enter
mov
add
je
add
xchg
lods
hlt
push
mov
mov
adc
inc
lahf
jl
sbb
add
sarl
je
xchg
aaa
inc
push
cmp
ret
aam
or
dec
pop
in
mov
inc
jg
pop
in
xchg
test
xchg
add
dec
orl
push
mov
xchg
out
add
cwtl
mov
xchg
loopne
scas
orb
fists
add
mov
les
jne
lods
add
push
cmp
inc
jb
push
push
adcb
push
call
push
pop
dec
stos
add
push
pop
cmp
or
enter
outsb
into
xor
les
in
aam
sub
pop
pop
mov
adc
movsl
loope
mov
add
sbb
es
cmc
push
mov
fisubl
shlb
aam
out
ret
push
sub
inc
push
mov
mov
mov
sub
lret
jae
shrb
jo
push
xor
sbb
push
fldt
mov
jbe
fpatan
jle
xor
pop
pop
push
sbb
int
xchg
je
sahf
mov
mov
push
lret
dec
mov
or
or
xchg
xchg
jae
cmp
pop
mov
pop
inc
jne
cmp
in
mov
out
pop
aaa
clc
inc
inc
mov
inc
mov
mov
cmp
or
xchg
or
jnp
popa
push
mov
outsl
xchg
or
cmpb
xor
mov
lea
add
xchg
push
lock
cmp
cmc
add
enter
dec
pop
jp
mov
push
sub
ret
insb
xchg
ss
fwait
xor
aaa
jne
or
aas
push
insl
or
insl
out
pop
in
orb
jb
inc
imul
icebp
nop
loop
imull
pusha
dec
stc
cmc
call
mov
xchg
mov
gs
push
and
je
push
add
rclb
mov
dec
xchg
ss
adc
xor
test
insb
in
cmp
gs
pop
cmp
xchg
pop
leave
pop
lods
sub
push
jae
sub
je
push
mov
xor
lcall
sub
adc
add
inc
aad
cmp
les
and
les
sbb
xchg
js
sub
imul
jl
imul
dec
pop
sub
push
data16
and
pop
fistpll
fmuls
jo
adc
in
push
pop
sub
push
popf
and
adc
pop
movzbl
movsb
add
add
das
mov
in
lcall
inc
cmp
mov
aad
jl
mov
test
add
mov
add
jg
ret
mov
xor
shr
xor
ja
mov
adc
fcompl
into
not
cld
lea
test
jo
push
fs
popa
or
pop
xor
or
add
sub
pushl
jmp
add
mov
inc
jp
add
or
inc
push
add
xchg
push
add
inc
add
add
call
jl
add
sub
dec
loop
pop
insl
jecxz
movsb
sbb
sub
or
cli
subb
push
fsubrs
xor
mov
aaa
add
dec
jo
rolb
dec
rorb
cmp
add
add
pop
icebp
push
loop
icebp
sub
jecxz
aas
rcll
adc
jb
push
pop
mov
mov
stos
pop
lods
jl
mov
push
mov
jmp
push
cmp
loopne
add
jnp
pop
add
pop
jb
add
add
rolb
ds
xchg
xor
pop
push
in
jbe
adc
jmp
call
inc
push
test
in
pusha
jns
mov
push
or
xchg
divl
or
fcmovnb
cmpl
inc
inc
inc
stos
lcall
rorb
adcl
dec
orb
jns
and
sbb
pop
sbb
jb,pt
xor
and
cmp
int3
sub
mov
mov
test
jmp
pop
in
dec
ret
inc
call
dec
rorb
jmp
inc
mov
cmp
jge
cmp
dec
lret
es
xchg
dec
or
dec
xor
mov
shlb
test
std
mov
scas
or
sbb
outsl
adc
adc
dec
cmp
add
xchg
or
xchg
repz
cwtl
insb
add
ja
jg
pusha
je
and
pop
lret
adc
push
roll
lea
iret
test
and
and
sub
sub
sbb
push
sbb
xchg
jnp
loope
pop
push
push
add
sbbl
push
push
fists
iret
add
outsl
sub
inc
adcb
push
enter
lret
and
xchg
in
mov
mov
jbe
inc
xor
imul
pusha
add
xchg
xor
push
adc
sarl
jb
gs
fidivl
rol
push
sbb
fs
iret
orb
xor
mov
insl
xlat
push
xor
imul
js
sbb
lahf
or
daa
clc
adc
sbb
jl
or
pushf
cmp
xchg
xchg
add
and
ljmp
fs
ret
adc
adc
mov
punpckhdq
shll
sub
mov
mov
xchg
or
cmp
jl
mov
add
jae
popf
aaa
jnp
and
loopne
rcll
add
and
nop
imul
sarl
aam
cmp
mov
jmp
das
sbb
pop
je
adc
adc
adc
jne
adc
shlb
push
cld
cmp
push
add
push
rcll
addr16
movsb
adc
dec
ficoml
pop
imul
jp
sbb
sub
dec
pop
sbb
in
fildl
in
adc
cmp
jne
inc
push
shlb
faddp
add
fs
mov
and
pop
and
cltd
jl
push
outsl
inc
sbb
jbe
xor
dec
pop
adc
add
dec
add
dec
inc
movsb
ret
movsl
pop
shlb
jo
dec
sub
add
je
cs
dec
movb
adc
or
xor
mov
and
mov
stos
add
inc
inc
scas
or
bound
xchg
jb
mov
jg
in
orb
clc
xor
dec
add
mov
or
xchg
adc
pop
cs
pop
add
and
cli
shlb
pop
push
mov
sbb
lret
jmp
sar
add
or
pop
loopne
sub
les
pop
sub
push
mov
xor
rclb
sub
xor
sbb
loope
nop
into
insb
or
sbb
addb
pop
sub
inc
xchg
adc
mov
xchg
sub
movhps
xor
fcmovb
sarb
xor
imul
sub
sub
test
mov
mov
jmp
mov
xchg
lret
daa
push
add
addr16
jle
mov
inc
mov
cwtd
or
mov
ret
dec
enter
xor
enter
lret
int3
jecxz
dec
push
hlt
push
test
in
fs
jge
adcb
sub
push
or
and
push
ja
push
mov
inc
repnz
push
loopne
shrb
push
or
enter
xor
sahf
xchg
rcrb
cmp
mov
jl
jmp
imul
rolb
cmc
rolb
add
or
xor
push
push
sbb
test
test
sbb
pop
sbb
push
add
xor
sbb
xchg
jno
lods
mov
arpl
test
ss
test
scas
jl
jg
add
mov
add
dec
stos
inc
gs
sbb
inc
sub
in
xchg
outsb
daa
xor
push
sahf
ret
jecxz
jne
lret
lret
sub
add
or
jne
fisttpl
js
or
out
mov
xchg
sbb
aam
push
fisttps
xchg
add
pop
fs
mov
mov
jle
shlb
pop
sub
in
push
dec
push
aaa
cmpsb
sbb
mov
inc
or
cvtps2pi
jmp
jmp
movsl
cmp
rcrb
adcb
and
ror
sti
sbbb
test
cmpl
sbb
and
pop
mov
test
or
or
scas
sbb
mov
fs
mov
cld
repz
adc
pop
push
jp
sti
pop
jnp
idivl
imul
add
dec
lods
cmp
push
flds
movsb
mov
and
adc
lret
add
dec
inc
stos
lods
out
mov
sahf
sti
cmp
mov
imul
push
lcall
xlat
fdivrs
inc
shl
push
daa
jmp
pushf
lcall
repnz
cmp
mov
or
add
test
movsl
pop
shl
rorb
push
ror
sub
sub
push
andb
nop
in
push
lret
inc
aas
inc
lahf
pop
aam
aam
aas
or
mov
dec
mov
cli
add
mov
push
sbb
aam
inc
and
pop
das
movb
fnsave
lds
clc
xor
lods
int
popf
ficoms
addr16
push
jo
ljmp
adc
adc
lea
add
jb
sti
dec
sbb
daa
add
jae
test
or
push
xchg
loope
add
adc
clc
dec
loopne
adc
xchg
fwait
andb
out
push
insl
ficoml
add
and
and
mov
movsl
inc
jne
cs
mov
jle
push
cmp
add
mov
dec
pop
add
adc
add
rol
xchg
lods
add
xor
dec
nop
or
or
dec
aam
xor
mov
inc
sbb
jmp
add
lret
cmp
insb
and
sub
sub
inc
lea
cmpb
add
rorl
xor
sub
aaa
popa
mov
ret
in
mov
mov
icebp
adc
je
sbb
lods
adc
xor
cld
jl
fsubl
mov
popl
enter
push
cmp
pop
mov
adc
icebp
push
jp
jl
jle
mov
push
call
daa
decl
inc
adc
loope
sbbl
or
loopne
or
je
mov
dec
lcall
adc
or
cltd
nop
idivl
add
or
add
push
sbb
std
cld
fwait
jae
inc
ret
mov
add
nop
mov
nop
sbb
push
lods
or
xor
push
loopne
push
dec
faddl
dec
cld
test
leave
call
sub
xchg
in
jl
mov
or
cmp
ds
cmp
cld
pop
rcrb
mov
dec
sbb
push
jne
jecxz
notl
sub
xor
int
pop
adc
jns
mov
pop
nop
or
cmp
or
jmp
inc
loope
cmp
faddl
test
push
add
gs
mov
and
sub
test
pop
add
cld
mov
mov
nop
sbb
mov
push
out
jle
cmpsl
push
inc
sub
movb
mov
rcrb
adc
add
int3
pop
inc
add
loopne
mov
addl
and
push
lock
inc
pop
call
pop
cmp
adc
sub
cld
adcb
jl
dec
std
mov
inc
adc
ret
xor
push
dec
aas
inc
ret
mov
pop
or
int
nop
or
lds
or
add
push
sbb
cmpb
adc
and
or
movsb
cmpl
nop
jmp
pop
mov
sbb
add
ja
push
mov
push
push
jne
mov
xor
or
popa
or
mov
pushl
adc
pusha
pop
addr16
dec
pushf
fs
xor
cmpsb
push
pushl
xchg
rolb
and
push
inc
enter
and
mov
push
ret
fwait
push
jb
push
in
push
test
jl
cmp
cmpsb
imul
lock
gs
push
lret
je
push
sub
mov
cwtl
push
xchg
push
scas
rclb
add
movups
mov
jmp
out
cmp
jmp
cmp
or
sbb
pop
addl
jmp
dec
and
jae
sahf
adc
add
pop
cmp
js
in
jecxz
mov
jb
cld
push
fmull
cltd
addb
adc
pusha
or
roll
jmp
int
movsl
or
mov
xchg
repz
dec
js
or
or
xor
adcb
jo
call
aam
mov
cwtl
mov
cmpsl
lock
fdivr
adc
test
dec
pop
lcall
push
dec
inc
or
mov
push
popa
movsl
or
jmp
js
adc
cs
jb
and
sbb
popa
movsl
aad
xchg
adc
mov
sub
sbb
in
test
and
adc
jns
pop
inc
fldenv
test
adc
inc
in
out
sti
add
mov
lock
fsubrs
adc
sub
xorl
inc
pusha
ret
adc
sub
aas
fisubl
imul
inc
loopne
in
cmpl
mov
sub
add
fmull
inc
int
xchg
mov
xor
enter
sbb
stos
mov
push
icebp
ret
insb
mov
scas
rolb
dec
cmc
ret
inc
mov
adc
cltd
push
mov
mov
fwait
lock
lret
enter
pop
cmp
or
aam
sbb
inc
cmp
mov
fsub
cmp
add
cmp
or
cmp
mov
cmp
bound
or
or
pop
jno
or
imul
sbbl
jae
loope
and
pop
scas
fisttps
stos
sbb
leave
xor
pusha
mov
rol
mov
mov
lret
pop
xor
shr
xor
xor
jnp
xor
shr
xor
and
push
add
add
add
mov
mov
fs
or
jae
push
ljmp
not
and
fiaddl
sti
add
mov
sub
jge
jl
lcall
repnz
cli
fisubrs
stc
or
add
xor
and
and
xchg
push
aam
orl
xor
lret
repnz
mov
mov
inc
push
or
xlat
ret
lock
call
add
add
cmpsb
inc
push
xor
fsubr
or
push
cmp
aam
call
push
xor
sub
int
out
ljmp
rol
out
add
cli
push
xor
pop
inc
lcall
xorb
sbb
in
shl
in
push
sub
bound
inc
push
push
inc
push
bound
pop
add
pusha
mov
pop
aaa
jno
or
fadd
test
call
loopne
cmp
shl
call
xor
loopne
xor
pop
cmp
aam
in
cmp
pop
xor
adc
sti
mov
shr
mov
or
push
xor
and
dec
sti
or
or
lods
mov
hlt
xor
add
inc
xchg
pusha
pop
inc
adc
cmp
or
inc
jo
pop
subl
ficoms
adc
mov
dec
push
sub
xor
adc
call
jne
mov
filds
cltd
mov
fadds
pop
jbe
call
add
lret
push
clc
jp
jle
pusha
xor
xlat
add
gs
fdivrs
dec
xor
rolb
call
in
rclb
lret
inc
mov
push
sub
adc
clc
jo
cli
push
and
popf
stos
adcb
or
aaa
cmp
inc
lcall
pop
push
cmp
xchg
inc
shr
mov
add
cli
stos
mov
and
xor
rolb
rclb
rorb
dec
shll
add
loopne
cld
add
dec
add
xor
xchg
inc
push
and
dec
xor
and
pushf
dec
push
dec
add
dec
xorb
mov
jb
push
xor
adc
dec
pop
dec
cmp
or
movsb
mov
and
stos
inc
stos
fs
mov
xchg
out
sahf
push
add
rorb
inc
pop
test
add
pop
xor
rcrb
inc
xchg
lret
adc
mov
ret
mov
in
rorb
adcl
daa
mov
shr
or
mov
fs
sbb
icebp
stc
stc
xor
icebp
sbb
mov
adc
jns
mov
es
imul
dec
ljmp
adc
adc
sbb
fisubrl
loopne
or
and
add
and
add
dec
mov
jbe
cli
push
dec
aam
out
and
aas
pop
add
sub
mov
sbb
jg
js
lods
cmp
jb
sbb
inc
aaa
mov
pop
add
sub
subb
lea
pop
xor
sub
or
clc
sub
test
xchg
lock
mov
lcall
jo
lock
rorb
shrl
es
jae
mov
push
and
sub
aaa
pop
xor
aas
lea
jmp
rcll
out
mov
push
sub
fstpl
inc
pop
add
lahf
mov
mov
dec
jne
pop
add
loope
lock
fcoms
inc
mov
or
out
sbb
adc
or
imul
dec
fs
adc
mov
inc
add
jae
push
pop
fadds
adcl
sub
stos
or
mov
inc
lods
cli
cmpsb
ljmp
std
fldt
push
pop
loopne
ror
mov
clc
gs
call
mov
addr16
inc
adc
les
dec
pop
add
jb
cmp
ja
inc
sub
jns
xchg
cmpsl
sbb
inc
aaa
popa
data16
cmp
push
xor
dec
je
add
push
or
sub
sbb
mov
std
insb
or
push
inc
adc
push
insb
mov
lock
sbbb
clc
aas
xchg
cmp
movsb
je
mov
mov
movsl
jno
testl
das
je
or
movsb
loopne
or
popa
cmp
jne
sbb
in
dec
test
mov
push
dec
inc
lea
inc
mov
pop
dec
xor
rorb
testb
sbb
imulb
adc
in
or
loop
adc
add
pop
add
inc
cmp
fs
dec
inc
push
inc
and
inc
clc
adc
mov
xor
bound
pop
mov
add
sbb
fistpl
cwtl
xchg
clc
lahf
psubd
ret
jl
lock
mov
lea
xor
xor
sbb
hlt
and
in
hlt
or
dec
sub
sbb
inc
xorl
pop
lods
pop
cmp
jne
notb
mov
insb
loope
in
sti
adc
je
sar
je
cs
cmp
jb
or
ja
pushf
subb
inc
pop
cmp
mov
jne
pop
inc
stos
push
inc
adc
xchg
dec
pop
jbe
ret
jmp
fs
loop
loop
jne
mov
lahf
sub
out
cwtl
inc
inc
xchg
movsb
movzwl
out
ret
fsubs
jb
aaa
jb
int
mov
pop
mov
jecxz
add
jmp
cwtl
aas
les
es
dec
hlt
xor
je
fs
adc
push
fdivs
xor
inc
shl
test
mov
fdivrs
push
pop
jae
mov
jmp
dec
inc
dec
or
xor
sub
dec
push
ret
sub
push
push
cmp
jge
sbb
push
inc
call
xchg
add
mov
adc
mov
imul
stc
inc
jg
or
jge
mov
je
and
es
sub
push
outsl
repz
pop
cmp
jl
pop
jle
pusha
add
ss
test
or
pop
out
and
jbe
mov
test
fwait
jle
daa
mov
adc
je
test
jne
je
imul
outsb
and
push
sbb
xor
dec
mov
into
dec
and
pop
sub
sub
cmp
je
daa
jb
or
push
and
int3
sti
push
mov
inc
and
je
out
mov
inc
and
jp
jecxz
push
jae
add
inc
es
cld
adc
push
scas
stos
stos
es
add
push
mov
push
adc
lcall
or
xor
push
mov
mov
notl
incb
cmc
insb
or
hlt
aam
out
mov
bound
test
adc
loop
iret
xchg
push
xlat
loope
lods
sbb
or
mov
pop
jnp
jp
outsl
inc
mov
xor
cmp
or
sub
pop
cld
xor
push
push
push
pop
add
pop
jb
cld
xorl
mov
imul
inc
das
mov
or
xchg
sbb
imul
pop
cwtl
xor
fstpl
inc
mov
dec
pop
jle
incl
pusha
cmp
insl
xchg
iret
outsb
push
push
inc
and
dec
rol
jae
mov
jl
fcompl
cmp
je
test
adc
fmuls
adc
sti
mov
jo
adc
jae
add
xor
add
xchg
in
and
mov
add
cwtl
jge
and
inc
xchg
ret
mov
lods
push
and
fs
xchg
ret
sbb
lds
scas
fsubs
in
jl
add
cmp
add
sarb
adc
cmp
add
mov
scas
push
or
add
sahf
push
cmp
fbld
inc
xor
and
popa
push
fstps
add
outsb
add
xchg
pop
cli
sbb
add
cmpsb
data16
push
or
nop
push
clc
sbb
sub
je
pusha
sti
pusha
jb
cs
lock
or
jbe
clc
fcomps
add
inc
fisttpl
sbb
shll
sub
mov
xchg
les
cwtl
sbb
push
mov
push
outsb
cmc
adc
or
and
jo
xor
sti
shll
jle
mov
sbb
xchg
xchg
jne
lahf
xchg
pushf
lods
sbb
cwtl
addl
xchg
xchg
xchg
xor
gs
or
xchg
jbe
mov
iret
push
leave
or
or
cmp
in
scas
or
xchg
and
inc
xchg
xor
test
or
test
inc
pop
add
add
call
idivb
faddp
add
xchg
fs
rclb
push
les
xor
or
ja
mov
rorb
mov
or
mov
mov
mov
sahf
push
loopne
jne
loopne
fnstsw
rolb
in
and
push
or
and
inc
push
jle
pusha
adc
push
cmpsl
pop
insb
in
adc
clc
or
imulb
sbb
adc
push
das
bound
cmpl
dec
adc
sub
adc
xchg
inc
cmpl
subl
mov
shlb
fcomps
inc
sbb
andl
cmp
add
inc
inc
inc
xchg
mov
fisubrs
ret
jge
pop
and
aaa
sbb
mov
inc
out
mov
push
cltd
xchg
push
mov
popf
stos
or
dec
or
jg
inc
fsubr
cmp
jo
push
jns
int
push
push
sub
xchg
outsb
and
in
and
pop
jae
jmp
insb
jne
fsubs
push
jl
sub
jge
arpl
out
add
inc
je
les
jae
ss
or
inc
lock
les
cmp
jne
daa
push
jo
les
aam
adc
popa
les
inc
push
sub
cs
call
sti
and
dec
mov
mov
sbb
test
or
cmp
cmpsb
mov
je
jl
les
jo
and
jae
push
or
or
dec
and
or
sahf
loope
pop
stc
cmpb
je
fldcw
mov
xchg
nop
jmp
inc
push
sbb
ds
in
adc
pop
je
pop
fwait
sbb
sti
lock
js
sub
jno
mov
inc
or
clc
adc
add
movl
cmp
xchg
outsl
inc
sub
add
test
sbb
mov
sub
mov
cmp
sarb
mov
mov
mov
repnz
mov
cmp
ret
cmp
fiaddl
ds
out
add
rcll
imul
es
cmp
dec
push
xor
add
cmp
jbe
lret
lret
mov
and
and
jae
xor
dec
fadds
stos
push
sub
in
mov
xor
cs
lret
cmp
cmp
ffreep
cltd
xchg
xchg
adc
sub
add
xchg
and
insb
adc
xchg
push
adc
data16
push
sub
adc
decl
dec
addl
fildl
add
test
cmpsl
cmpsb
movsl
dec
jmp
dec
push
int3
cmpsb
fsubs
aam
jl
loop
add
icebp
and
jge
cmp
sbb
push
int3
sbb
jmp
popf
add
movsb
popf
pop
lods
add
sbb
shll
or
nop
inc
push
je
add
lds
push
sarl
cmp
jae
or
or
push
nop
jnp
add
push
or
js
push
cmpl
mov
mov
sub
dec
xor
or
pushl
mov
pop
fimull
jne
sbb
dec
inc
sbb
pushf
mov
movsb
inc
imul
aaa
add
cmpb
je
pop
add
adc
movzwl
addl
or
jnp
jne
sbb
adc
mov
and
xchg
insb
jbe
mov
sub
push
hlt
loopne
pop
xchg
mov
adc
jnp
sub
cmp
shll
or
and
cmp
adc
loope
loop
test
inc
and
mov
xor
dec
jl
add
dec
sbb
push
jecxz
add
fisubrl
push
jbe
data16
rolb
pop
bound
in
pop
lods
sbb
sbb
and
fmuls
ret
dec
addr16
mov
xlat
pusha
popa
dec
divl
stos
jp
mov
sub
cld
loopne
outsl
mov
sbb
mulb
or
add
daa
daa
clc
aam
or
add
data16
cmpl
ja
pop
or
and
ss
push
pop
sahf
lds
iret
cli
cmp
and
cmp
xor
add
cmp
push
cmp
pop
and
adc
hlt
inc
addb
mov
sbb
xchg
push
jns
loopne
jns
sbb
fs
cs
pop
sub
and
fcoml
jge
cld
or
nop
cmp
xchg
sbb
mov
pop
popa
push
dec
in
adc
pop
or
scas
fnstsw
test
dec
cld
aam
inc
notb
aaa
ljmp
and
movsb
stc
fcomp
sub
push
pop
sbb
imul
int3
jg
pop
lcall
rclb
mov
mov
inc
adc
mov
dec
jnp
insl
adc
and
add
mov
add
push
adc
dec
sbb
inc
shll
cmp
and
xor
adc
jb
jp
xchg
mov
push
dec
lods
push
push
adc
sbb
cmp
cld
add
dec
dec
lea
mov
lea
inc
cltd
mov
rcrb
mov
int
cs
sahf
and
fistpl
rorl
pop
pop
pop
push
ficoml
cmc
mov
aas
push
inc
jns
sub
lods
mov
pop
addb
sub
or
pop
movl
mov
jae
add
scas
lock
xchg
pop
jae
arpl
and
push
popa
leave
mov
pop
faddp
sti
insb
das
jo
push
and
sbb
pop
mov
movsb
lcall
dec
add
loope
lret
dec
dec
add
insb
jo
cmp
es
leave
ja
push
add
movsb
sub
push
sbb
add
push
add
mov
mov
and
pop
ret
aam
mov
popa
divb
or
pusha
ljmp
call
sub
enter
and
shrb
jbe
mov
mov
mov
inc
or
xor
and
sub
mov
dec
outsb
or
mov
inc
mov
test
pusha
mov
aam
stos
sbbb
inc
clc
pop
andb
clc
mov
mov
mov
sbb
sub
xchg
or
sub
cmp
inc
push
cmp
and
sahf
daa
test
fistpl
or
test
xchg
shrb
or
and
incl
and
mov
dec
push
xchg
add
or
dec
fisttps
sub
adc
adc
lcall
jmp
inc
xchg
arpl
es
lcall
add
sub
cltd
jecxz
fistps
pop
pop
mov
aas
and
pop
mov
sub
fadds
cmp
fisttpl
lahf
addb
mov
in
sbb
scas
sub
jnp
fidivs
rclb
cmpsl
jmp
xor
push
test
push
daa
pop
xchg
dec
sub
adcb
inc
in
cmpl
xor
nop
push
loope
mov
jmp
mov
jo
subb
into
or
cmp
xchg
icebp
adc
inc
movsb
aam
sub
popa
js
jae
cmp
es
test
push
sbb
adc
shlb
movsl
in
jge
sub
fs
mov
mov
sbb
mov
mov
clc
mov
or
testb
mov
pop
jle
or
loopne
mov
adc
or
fiaddl
mov
mov
fwait
mov
test
pop
sbb
das
dec
xchg
adc
sub
mov
adc
pop
aam
lds
pop
add
and
into
sub
lahf
wbinvd
xchg
or
pushf
push
cwtl
inc
or
dec
shlb
push
mov
es
cwtl
mov
add
pop
add
repnz
inc
push
xchg
dec
adc
adcl
pop
in
divb
mov
inc
imulb
adc
int
inc
inc
jo
jo
idivl
lods
xchg
mov
loop
pop
inc
clc
loop
shll
jo
je
cmp
jbe
lds
cmp
xchg
mov
xor
fisttps
xor
enter
push
push
jp
lods
je
mov
ds
push
jo
push
pop
inc
insb
add
sbb
dec
push
not
mov
sub
cmpl
pop
clc
repz
pop
movsb
sbb
push
std
lret
orl
outsl
sti
dec
aam
push
lea
les
repnz
test
or
jecxz
jge
mov
or
dec
add
push
add
jne
or
xchg
xor
sub
add
cmp
icebp
cbtw
mov
add
or
insl
mov
xorl
aad
sub
mov
cmp
pop
mov
or
push
xor
nop
pop
pop
sub
pop
mov
add
jg
incl
cmp
jae
push
loope
sub
add
add
jb
jmp
and
xchg
mov
or
add
outsb
dec
gs
push
scas
dec
loopne
and
or
inc
mov
dec
dec
loopne
arpl
jbe
lret
cmpsb
daa
mov
push
add
add
sbb
push
or
cmp
scas
push
clc
fsubrl
arpl
or
jle
jmp
jne
bound
jne
es
inc
or
or
dec
jecxz
das
add
push
inc
mov
fadd
pop
mov
bound
xor
mov
adc
mov
and
cmp
inc
pop
cmp
adc
add
sbb
lret
inc
push
es
xchg
orl
or
test
sub
cmp
add
nop
cli
jbe
sub
add
mov
or
lods
or
sahf
push
out
push
mov
jg
push
mov
adc
push
mul
push
or
data16
fidivrl
adc
jmp
or
mov
ljmp
fld
mov
ret
das
cmp
sub
xchg
pop
mov
mov
add
dec
ret
es
sbb
cld
daa
push
add
dec
lods
jbe
inc
ret
test
pop
scas
fisttpll
lea
mov
je,pn
sub
mov
xor
adc
aam
push
insb
and
push
add
repnz
or
or
mov
dec
add
ds
cmpsb
cmp
sbb
mov
je
or
lock
loop
dec
xor
mov
pop
ret
fbld
mull
sbbl
test
fcoms
js
sti
add
inc
fsubrp
push
aad
push
int3
inc
jl
mov
mov
jne
add
or
jmp
addl
add
push
in
insb
insb
insb
das
pushl
loope
or
push
imul
mov
add
enter
add
data16
inc
pusha
sub
ret
jb
add
inc
adc
mov
pusha
push
pop
testb
lret
pop
add
sub
sbb
insl
loop
mov
outsl
cmp
jg
add
or
inc
inc
lea
clc
roll
fcoms
dec
mov
ret
pop
rcrb
jecxz
out
jge
or
sub
lcall
ret
mov
ret
pop
inc
ss
cmp
adc
mov
dec
stos
or
or
stc
ja
and
jne
fmul
jb
js,pn
sbb
mov
popf
jne
mov
mov
lock
mov
inc
push
out
push
ja
rcrb
or
test
cmpsb
xchg
mov
mov
stos
dec
adc
dec
jmp
inc
lea
jo
adc
xchg
push
sbb
movsl
pop
sarb
cmp
popa
loop
inc
loope
jb
push
push
mov
or
rclb
repnz
and
fmull
cmc
stc
mov
loopne
sbb
fwait
les
add
faddl
xchg
cmp
mov
xor
add
popf
xchg
ret
push
leave
cmp
inc
hlt
add
and
sahf
cmpb
mov
fsubrs
rorb
rol
or
movsb
mov
mov
mov
mov
mov
mov
push
ret
add
add
mov
mov
mov
push
xchg
rcrb
ljmp
push
xchg
jbe
push
adc
lahf
dec
imul
inc
loope
and
push
test
stos
pop
pop
movsb
push
cmp
lea
jnp
hlt
add
dec
inc
mov
bound
clc
addl
dec
popf
ds
mov
cmpl
sub
xor
or
jle
sub
pop
xor
loope
inc
das
cmovns
sarb
not
loopne
movsl
and
mov
jp
cmovp
sbbb
int3
mov
roll
mov
add
push
sub
adc
daa
adc
mov
mov
inc
scas
mov
or
lds
sub
ret
mov
aaa
dec
mov
sub
push
push
roll
loopne
mov
sub
sbbl
int3
jg
cmp
cmp
cwtl
fistpll
add
push
lock
and
je
xchg
mov
or
xchg
pusha
test
push
mov
mov
lahf
add
mov
bound
fwait
icebp
lcall
or
nop
and
mov
sbb
inc
pop
xor
adc
pushl
push
adc
and
aam
adc
stc
add
mov
mov
mov
inc
mov
add
inc
or
clc
dec
sbb
neg
or
or
mov
adc
and
js
jmp
mov
add
and
sbb
mov
dec
adc
ss
cmp
dec
pop
popl
xor
pop
inc
add
lods
push
hlt
push
mov
dec
lods
xchg
jo
sub
scas
jne
popf
push
int3
or
popa
in
and
arpl
or
cmp
mov
loope
pop
xchg
je,pt
fs
xor
or
orl
sub
mov
pop
dec
mov
xchg
ljmp
jb
pushl
testb
xor
rol
push
ja
xor
xor
and
or
or
dec
cmp
add
sub
jns
pop
xlat
psubsb
xor
or
movsb
mov
clc
push
nop
imul
psubd
mov
cmp
out
jle
lahf
sbb
das
xor
cs
mov
dec
lock
pop
sub
fimuls
or
lret
add
and
jne
add
adc
bound
xchg
xor
xlat
dec
mov
cmpsl
dec
rcrb
pmullw
pop
shll
mov
jb
inc
ds
or
sub
cmp
outsl
xchg
add
push
test
pop
add
nop
push
jmp
mov
movsb
jge
or
add
enter
or
jmp
sub
jnp
sub
mov
js
outsb
lock
jne
fstp
xchg
dec
les
test
jno
push
fidivs
or
call
pop
andl
sub
jbe
stos
mov
adc
xor
adc
mov
ret
test
mov
add
and
in
cmp
int3
popa
aas
aaa
leave
ret
pop
mov
jns
jmp
mov
fstpt
push
sub
pusha
mov
in
pop
and
roll
leave
xchg
andl
mov
push
push
in
push
xor
mov
mov
xor
divl
fwait
add
stc
adc
add
cmp
xchg
pop
dec
inc
clc
push
in
insb
adc
or
outsb
mov
data16
sub
adc
jae
ret
hlt
push
dec
and
jl
mov
mov
rcr
mov
dec
push
cli
loope
adc
and
enter
js
fiaddl
sub
xchg
loope
mov
jmp
add
or
das
inc
inc
stc
mov
cmp
insl
push
mov
loopne
cmpb
sub
add
add
add
pusha
sub
js
lock
les
push
xlat
outsl
out
jo
lret
das
mov
push
and
dec
and
or
and
cmc
mov
in
inc
mov
adc
xchg
mov
jp
cmc
out
imul
push
add
inc
mov
sbb
shlb
imul
sbb
or
mov
or
cmp
call
aaa
movl
mov
in
jb
xor
mov
cmc
jle
cmc
into
adc
repz
pop
add
add
inc
or
cmp
jge
imul
test
adc
addb
inc
subl
and
add
popa
inc
cld
outsl
push
pop
cmp
je
mov
mov
insb
pushf
and
push
dec
cmp
cmp
push
and
dec
xchg
sbb
shrb
fldt
and
jmp
dec
sub
push
mov
fcoms
add
in
loop
lds
into
or
jle
inc
je
dec
je
dec
jg
and
and
imul
sahf
jl
outsb
jne
jae
ds
add
mov
inc
xchg
pop
aad
dec
adcb
call
cld
jmp
cmpl
and
repz
fs
jne
cmp
fdivrs
test
dec
scas
fbstp
cltd
js
adc
das
cltd
rolb
sbb
xchg
out
adc
subl
jno
lret
and
adc
mov
dec
call
xchg
mov
add
xchg
repnz
loopne
cli
lahf
dec
sbb
lods
out
loopne
pop
pop
push
mov
cmp
call
or
mov
push
call
into
push
push
and
jo
js
sbb
sahf
fisttps
jo
adc
int3
daa
pop
iret
and
jl
add
mov
xchg
call
add
dec
test
aas
ret
dec
adc
cs
in
mov
mov
add
sbb
sbb
loope
call
fdivrl
sahf
inc
sbb
mov
inc
fdivrl
sbb
mov
xchg
rcll
lret
and
mov
sub
mov
inc
cmp
push
sbb
sbb
loopne
cmpsb
fisubl
add
ljmp
in
cmp
je
rclb
pop
inc
mov
movsb
inc
or
in
push
icebp
jmp
sub
in
in
shll
push
xchg
fidivs
testl
xchg
lret
sarb
fistl
rorl
push
scas
mov
fadds
incl
push
js
addb
xorl
in
fcompl
bound
out
dec
ret
cmp
sbb
mov
sub
enter
add
inc
leave
add
pop
test
mov
cltd
test
shll
xorb
add
pushf
xor
inc
add
shlb
pop
icebp
es
std
or
lahf
cs
sbb
dec
fcoml
sbb
inc
and
add
xor
adc
popa
xchg
mov
test
adc
and
push
cmp
sbb
cmp
or
pop
push
pop
xor
testb
pop
pusha
fistps
push
lret
or
mov
mov
cmp
inc
jbe
pop
cmp
jo
pop
insb
in
cmp
add
ret
fldt
dec
clc
jne
mov
mov
push
push
test
cmp
daa
in
sbb
cli
sub
add
ficoms
loope
sbb
in
xchg
sbb
xchg
gs
hlt
hlt
mov
jb
inc
data16
clc
mov
pop
imul
xor
outsb
cmp
call
test
push
lock
sub
shll
fistl
cld
loopne
sub
jne
mov
testl
push
sbb
add
or
bound
xor
lock
dec
xorb
clc
pushl
or
or
orb
or
sbbl
mov
sbb
adc
inc
xchg
out
mov
cmp
cmp
inc
pop
add
cmp
push
jbe
add
hlt
cmp
and
sahf
mov
stos
or
or
sub
addr16
inc
fs
jne
in
dec
adc
xchg
adc
adc
adc
dec
loope
cmp
test
push
sub
mov
sbb
add
adc
add
jne
jo
addr16
es
push
jmp
sbb
push
adc
call
adc
addl
popf
rcrb
push
cmp
adc
inc
xlat
xchg
lock
fsts
sub
test
jb
push
xor
les
clc
in
hlt
dec
add
xlat
cmp
or
jge
inc
leave
sub
cmp
cli
in
mov
and
lea
mov
push
add
call
sub
or
outsl
loope
fbstp
pop
rcrb
movl
push
ret
insb
pop
and
inc
dec
mul
or
test
or
inc
jne
mov
inc
adc
shlb
adc
repnz
fnstcw
adc
or
push
out
mov
in
and
jne
sbb
mov
fdivrs
push
or
mov
loopne
mov
mull
xchg
and
or
sbb
xor
cmp
loopne
enter
mov
lods
scas
inc
cli
adc
int3
xor
or
dec
cld
add
jb
sbb
daa
popf
orb
dec
mov
shl
jmp
call
int3
or
dec
sub
adc
enter
add
out
dec
lock
adc
dec
jecxz
popa
iret
inc
popf
adc
push
xchg
loope
pop
push
clc
adc
bound
or
jo
adcl
jp
pop
jo
or
inc
test
test
je
cmpl
cmp
addb
test
sarl
cmpb
add
cmp
adc
add
mulb
jl
jmp
mov
push
lea
mov
loope
call
mov
ret
inc
popa
lahf
jns
jo
sub
lds
in
pop
jo
jbe
adc
add
push
movl
or
dec
adc
fiaddl
mov
add
mov
fsubr
stos
sbb
ss
xor
xchg
adc
push
push
in
xchg
push
addr16
jb
addr16
je
mov
push
cmp
xor
jecxz
hlt
xchg
mov
and
idivl
insl
inc
cmpb
stos
jb
mov
insb
insb
push
jae
shll
cmp
jp
js
add
int3
and
clc
out
insb
jmp
sub
cmp
add
mov
test
je
pop
mov
addr16
jne
add
jg
pop
iret
and
add
mov
lret
sbb
in
test
mov
push
mov
mov
push
or
lret
mov
cmc
and
int3
pop
int
cmpsl
scas
dec
and
loopne
mov
shlb
popa
addr16
es
mov
xchg
add
push
icebp
shr
xor
or
scas
shlb
jp
push
dec
jmp
push
push
pop
add
mov
loopne
push
lret
fidivs
mov
fldt
andl
or
in
mull
jbe
or
lods
mov
dec
dec
cmpsl
push
adc
sub
adc
cmp
es
scas
mov
out
in
jl
cmp
inc
bound
pop
movsb
sti
mov
mov
adc
decb
enter
sbb
inc
cld
aad
sbb
sub
bound
mov
sub
out
addr16
add
ds
mov
fdivr
clc
add
clc
jno
mov
add
or
sub
mov
icebp
or
sub
jne
sbb
or
cmp
sub
sbbl
or
sti
mov
or
cs
adc
xor
iret
scas
orl
mov
into
test
leave
popf
fcoms
mov
loopne
or
imul
jne
dec
fsubl
jl
mov
sub
in
xchg
and
cltd
or
push
add
xchg
xchg
mov
faddp
test
push
sbb
jle
not
mov
push
sbb
mov
sub
aaa
mov
sbb
push
insb
loope
ja
sti
mov
test
adc
xor
test
loope
in
xchg
popf
inc
sbb
int3
xor
in
push
lret
addl
cmpsb
ret
imul
jnp
lea
rol
gs
bound
push
fdivrs
xchg
mov
shll
push
dec
add
sbb
ret
das
sub
negb
push
inc
jmp
jo
cmp
cmp
add
add
movsl
or
addr16
mov
dec
movsl
cmp
dec
or
mov
add
push
dec
adc
add
shll
xchg
mov
pusha
jecxz
leave
push
jg
pop
mov
cmp
sbb
xor
xchg
mov
mov
mov
jge
ret
add
xchg
gs
or
rcrb
pop
addr16
sub
xchg
sbb
out
mov
xchg
imulb
imul
add
loopne
orl
jae
sub
aad
int
jl
cs
int3
inc
ljmp
sbb
fcomi
push
pop
sbb
add
repnz
or
adc
fwait
gs
jecxz
fidivrs
out
inc
inc
mov
xor
insl
negl
leave
push
je
mov
shl
or
decl
mov
subl
xor
fnop
ja
rcrl
lcall
lea
or
shl
push
jne
sub
loope
imul
adc
fwait
pop
shl
xchg
in
adc
cld
or
inc
pop
pop
test
lds
sub
cmp
lea
cmp
mov
add
mov
push
xor
cmp
in
das
and
insb
and
lds
mov
rcrb
push
xor
mov
je
mov
jecxz
mov
add
and
xor
sbb
adc
jmp
or
or
jmp
sti
sahf
or
mov
fiaddl
dec
loope
add
sbb
or
mov
mov
js
jge
and
inc
pop
adc
lret
jmp
addb
xor
push
xchg
pushl
cmc
js
addl
jle
xlat
shlb
and
jl
xchg
int
add
ret
jnp
rolb
or
out
fisttpl
push
jae
lea
push
sub
mov
xor
pusha
mov
xor
dec
mov
dec
pop
pop
xor
pop
ret
sub
or
fs
or
or
inc
fistpl
or
cmp
cmp
fsts
fwait
idivb
cmp
fnstenv
inc
jmp
mov
pop
rcll
jp
sub
fisttpl
test
int3
ret
or
add
add
add
mov
inc
ret
fcoms
push
or
add
clc
andl
or
leave
add
pop
mov
dec
iret
fcoml
imul
add
popw
adc
adc
xor
dec
orb
clc
movsb
mov
cwtl
add
add
andb
cld
cmp
fs
dec
mov
fldenv
or
call
hlt
add
push
jl
jl
and
add
sahf
push
shr
mov
cmp
inc
mov
pop
fcmovu
push
inc
inc
add
push
cmp
fdivrs
loopne
mov
or
add
dec
cmp
jne
leave
add
xor
or
js
cmp
cmp
inc
push
aad
stos
add
mov
and
mov
jae
imul
cmp
orb
xor
sbb
clc
pusha
pop
icebp
lret
inc
mov
lea
movsl
aam
push
or
wrmsr
nop
add
enter
or
sub
outsl
mov
or
add
mov
sbb
jbe
aam
add
add
xor
outsb
sti
es
mov
jmp
mov
adc
fs
shlb
lea
cli
ja
cmpb
in
ret
shll
outsl
and
mov
add
daa
mov
sub
cmp
mov
cld
sbb
scas
cmp
jne
push
fstl
dec
imul
imul
push
inc
add
dec
je
jo
xchg
in
push
xchg
xchg
pusha
inc
test
xor
or
adc
dec
dec
daa
cld
mov
jecxz
scas
in
hlt
xor
lods
or
push
xor
inc
jno
or
sub
push
mov
cmp
xchg
in
outsb
testb
cmpsb
inc
push
xchg
scas
divl
sub
mov
dec
or
xchg
inc
and
sbb
lea
push
xchg
dec
add
pop
cmp
jnp
cmpsb
pushf
mov
test
or
and
mov
push
dec
jo
lea
aas
add
jnp
inc
inc
adc
sub
sbb
les
inc
push
push
scas
sbb
adc
xchg
mov
sub
inc
sbb
pop
add
inc
or
push
sbb
imul
adc
xorl
xchg
shrb
adc
cmpl
sbb
jne
pushl
sbb
cmpsl
insb
cltd
mov
inc
dec
xor
or
cmp
xor
and
xchg
mov
inc
imull
cmp
adcl
inc
test
test
xor
ficomps
inc
enter
gs
pop
mov
pushf
popa
sub
inc
add
dec
sub
xlat
push
or
mov
inc
ret
mov
mov
call
lret
icebp
mov
xchg
inc
add
adc
ret
mov
ret
or
aaa
aaa
push
push
sub
js
inc
outsl
add
cmc
xchg
aas
in
mov
push
sbb
fstps
sub
lcall
mov
adc
cs
adc
add
and
mov
in
int3
mov
push
sbbl
in
mov
movsb
xchg
or
cmpsl
cmp
cmpb
imul
loop
clc
mov
and
or
mov
mov
sbbb
ss
mov
jl
test
js
jge
jo
or
ljmp
jnp
pop
cmp
or
gs
sub
mov
add
fnsave
movsb
jle
jne
mov
push
or
test
stos
cmp
sub
fmuls
xchg
pop
jo
mov
outsb
loope
rcr
push
orl
lahf
inc
sub
js
loopne
push
inc
add
inc
push
add
fiaddl
cmc
or
sbb
pop
and
adc
or
js
daa
daa
add
inc
and
mov
rolb
inc
loop
jbe
adc
cmp
push
jo
add
xchg
iret
cld
in
xchg
cmpsb
loope
push
or
imul
in
rorb
or
mov
lahf
dec
loopne
mov
clc
xchg
mov
das
and
inc
add
lock
imul
fiadds
dec
stc
mov
push
mov
xor
fsts
add
xor
ret
aaa
inc
adc
rclb
lcall
imul
ss
test
add
push
scas
mov
push
cld
jbe
ss
jmp
push
mov
cmpsb
jo
mov
call
mov
sub
cmp
decb
incb
adc
push
cmp
jle
inc
pop
fadds
add
adc
or
pop
shlb
shll
fisttps
mov
add
dec
sti
add
pop
push
ret
push
xchg
fldl
fisubrl
lods
lret
jecxz
mov
add
fildl
jmp
sbb
flds
in
mov
mov
nop
mov
lcall
testb
pusha
push
push
test
dec
fimuls
xchg
and
sub
imul
pop
movsb
std
sbb
mull
shrb
ret
mov
cmp
mov
sbb
lock
pusha
rorb
pop
imul
sarl
mov
sub
xlat
add
dec
push
add
sub
cmp
sub
orl
push
loope
pop
push
adc
push
xchg
add
mov
sbb
cmp
or
ja
or
add
sub
adc
fwait
sub
or
in
int
aam
dec
inc
mov
or
mov
dec
shlb
fwait
inc
add
or
push
flds
push
ret
xchg
jecxz
or
push
and
mov
cltd
mov
pop
inc
mov
lea
call
data16
lods
inc
jnp
sarb
adc
fwait
aad
pop
cmp
addr16
push
in
sbb
push
mov
rcr
cli
xor
scas
pop
fs
loopne
lods
bt
sbb
sbb
mov
fs
mov
jo
mov
xchg
mov
cmp
mov
sar
sarl
loopne
xchg
push
push
sbb
inc
leave
dec
out
out
push
cltd
xor
push
das
sub
imul
loope
pop
icebp
cmpl
fisttpll
daa
rolb
jmp
mov
mov
xchg
icebp
shl
push
adc
push
xor
mov
and
fdivl
cmp
fcompl
rorl
jo
incb
popa
xor
inc
js
jb
mov
loop
scas
add
adc
xchg
adc
cmp
cmpsl
popf
movl
or
cld
xchg
push
and
leave
add
ss
push
sub
andl
and
add
out
cmp
jle
push
pop
enter
pop
xchg
adc
movsb
outsb
das
lea
cmp
in
sbb
aaa
push
shr
ficompl
push
pop
pop
cmp
into
sub
sub
pop
sub
or
add
jo
insl
push
loopne
imulb
stos
jno
push
pop
jmp
jne
repz
or
or
add
sub
sub
arpl
and
dec
insb
mov
or
xchg
push
insb
mov
adc
int3
pop
fmull
aam
lock
dec
sbb
pop
add
or
or
adc
cld
dec
nop
sub
inc
jo
jne
addl
lret
and
push
sar
cmp
push
mov
out
shl
add
push
jecxz
jnp
hlt
and
inc
xchg
shll
aas
lock
mov
mov
mov
gs
add
add
add
mov
cmp
mov
imul
je
cmp
je
push
inc
sub
movsb
cli
testb
je
cmp
mov
push
lock
push
push
sub
sbb
ret
sub
push
dec
sarl
push
adc
add
inc
mov
mov
loop
sub
dec
cmp
enter
cltd
push
sub
or
add
arpl
ret
inc
push
sbb
push
pop
mov
push
add
jbe
je
adc
jae
dec
and
xchg
je
push
sbb
mov
mov
xchg
sub
jne
jg
add
cmp
lods
andb
sbbl
data16
fisubrs
mov
movsb
and
sarb
push
pop
pop
add
cmpsl
xor
pop
jmp
xor
enter
sbb
add
mov
icebp
inc
mov
mov
add
test
sbb
jo
pop
push
sar
cld
rolb
push
push
cmp
inc
inc
mov
pop
xchg
cmp
out
pop
subb
je
mov
push
mov
jbe
mov
sbb
imul
ret
ds
inc
jmp
clc
or
testb
or
mov
add
repnz
roll
sbb
push
fiaddl
pop
cmpb
leave
jmp
add
and
je
sbb
ds
sbb
adc
dec
inc
and
bswap
cli
sub
lret
into
jne
data16
adc
pop
push
sbbb
or
cmpsl
xchg
jmp
add
pusha
outsl
clc
xor
lret
jmp
push
dec
and
test
out
iret
mov
inc
and
xchg
insb
inc
aam
notl
fmul
cli
or
ds
mov
sub
cmp
jne
push
mov
xlat
mov
mov
cmp
push
cld
push
pushf
sbb
add
dec
sbb
decb
jmp
dec
ret
aaa
les
lahf
add
std
mov
and
and
xor
es
cwtl
fnstcw
xor
push
lods
and
pop
add
sbb
and
xor
sbb
cmpsb
push
dec
push
jmp
popl
jnp
loopne
xchg
sub
arpl
sbb
push
pop
lcall
or
into
test
sub
cmp
jb
frstor
mov
dec
or
sub
fiaddl
pop
fwait
add
inc
and
add
lock
sbb
add
pop
cmp
xor
test
mov
fwait
imul
xchg
xor
mov
das
ds
adc
and
shlb
cmp
scas
jne
fs
sbb
dec
or
inc
shll
loopne
jl
adc
jae
sub
scas
shrl
fldl
subl
test
out
call
and
or
ss
cld
pusha
mov
adc
mov
dec
or
adc
in
inc
cmp
int
mov
cmp
insl
loopne
or
es
push
jmp
add
les
xor
bound
repnz
pushf
cmp
or
push
lock
enter
jmp
xchg
sbb
push
dec
adc
aaa
mov
and
adc
js
loop
stc
add
push
or
push
bound
add
repnz
repz
or
add
arpl
cmp
mov
aad
jbe
dec
leave
pop
adc
adc
aas
ss
xchg
inc
xchg
cmp
stos
or
inc
sub
push
bndstx
mov
insb
mov
xchg
pusha
cmp
adc
pop
mov
aas
pop
cmp
xlat
adc
push
pop
in
sub
jle
shlb
dec
cmp
push
jl
pop
jo
cltd
sub
jle
cltd
pop
ficompl
mov
push
ja
in
jmp
scas
pop
xchg
or
push
push
or
loopne
cmpsl
pop
add
je
into
jnp
pop
push
pop
mov
mov
stos
aaa
in
lahf
inc
cmp
and
dec
mov
jo
inc
out
dec
adc
pop
fmull
ret
testl
fistps
or
out
add
ja
lds
adc
into
dec
push
ds
jae
mov
data16
setl
add
pop
enter
adc
inc
je
rcr
mov
sti
mov
pop
mov
jo
sbb
scas
xor
jo
aaa
hlt
adc
leave
ss
inc
xorl
xor
sahf
js
pop
pop
ret
sub
mov
lds
or
inc
out
out
push
push
movsl
icebp
out
xor
dec
jnp
movsb
in
cmp
test
jno
gs
inc
push
adc
out
jb
add
stos
inc
pop
pushf
jmp
in
dec
test
pop
push
mov
lods
push
mov
mov
cld
dec
or
jecxz
stos
jbe
test
push
fmuls
sbb
lods
push
xchg
push
sbb
mov
lret
rolb
jbe
adc
xor
es
add
nop
pop
inc
inc
inc
xor
mov
jb
cmp
xorl
test
jo
sbb
outsb
dec
or
test
push
add
inc
add
cmp
adc
mov
jge
mov
data16
cld
in
xor
das
test
adc
bound
insb
adc
add
adc
and
jne
repnz
xchg
ret
lock
add
sub
xor
cld
movsl
jmp
dec
push
dec
adc
popa
insb
sbb
mov
movsl
or
in
je
inc
or
pop
pop
test
sti
je
jmp
or
push
dec
sub
dec
out
mov
sbb
outsb
cmpsl
or
push
inc
sbb
idivb
shlb
loop
ret
jmp
adc
jl
cwtl
mov
or
cmp
push
xor
icebp
out
mov
add
cmp
mov
out
sub
and
push
aaa
and
pushf
es
icebp
loopne
ret
push
mov
dec
inc
pop
pop
pusha
mov
fstpl
adc
lock
mov
mov
bound
test
movsb
inc
ja
movsb
lahf
or
repz
pop
or
je
ret
and
or
and
imul
dec
cmp
push
insb
or
xchg
pop
push
outsl
or
mov
lea
ss
jb
fs
in
pushf
push
jge
xor
sarl
push
push
fisubs
pop
mov
enter
jmp
cmpsl
and
push
adc
cltd
adc
adc
mov
loop
cmp
sbb
xchg
xor
push
arpl
pop
dec
lret
cmp
lea
dec
sbb
shll
xchg
dec
ja
in
ja
dec
je
sbb
mov
jmp
adc
dec
mov
and
inc
xor
mov
sbb
adc
shll
push
adc
jecxz
mov
ljmp
xlat
sub
test
arpl
stc
push
sbb
xor
pmaxsw
jle
rcrb
js
xor
nop
or
dec
add
jne
inc
push
dec
sub
in
pop
mov
inc
inc
xchg
adc
lret
stmxcsr
into
and
sub
jne
insb
outsb
push
cmpb
add
and
clc
jg
ss
sub
test
movd
jnp
jg
movapd
push
clc
jae
pop
outsb
fcmovnbe
xor
jle
xor
cli
rcl
lret
xchg
icebp
adc
jl
inc
mov
lret
or
jg
jb
cmpl
cs
jnp
mov
fidivs
mov
add
add
adc
push
add
mov
or
sub
jnp
int
xchg
repnz
roll
add
dec
add
pop
adc
addps
int
jnp
sti
fldl
sbb
sbb
inc
pop
jecxz
dec
xor
mulb
sbb
mov
ja
xor
push
mov
and
pop
cwtl
adc
out
xor
xor
js
test
push
mov
mov
dec
xchg
adc
pop
inc
sub
lock
pop
aas
sub
push
cmpsl
cmc
cltd
ret
jge
and
push
test
test
pop
mulb
xchg
sahf
js
fisttpl
jo
icebp
loope
arpl
inc
cwtl
arpl
lcall
jmp
lcall
xor
add
and
inc
insb
inc
jl
cld
dec
add
sarb
pop
aam
in
int3
or
pop
adc
stos
adc
jp
mov
sbb
or
mov
cmp
jo
adc
push
pop
dec
pop
mov
mov
cmp
push
mov
inc
inc
fdivrl
mov
movsl
inc
inc
dec
call
or
add
cmp
jne
add
mov
xor
sbb
lcall
jge
adc
adc
jo
mov
scas
push
fsubs
cmp
adc
aam
push
lods
ret
pusha
and
pop
lods
les
or
lret
and
push
or
lock
mov
xchg
fisubrl
inc
lods
sub
hlt
fcomi
or
arpl
sti
push
mov
popa
xchg
and
lock
jmp
push
mov
inc
cmp
pop
inc
push
or
add
push
xchg
inc
pop
push
push
mov
fmull
mov
adc
inc
cmp
jne
inc
cmp
add
xor
pushl
ret
mov
adc
xor
fwait
es
push
adc
and
pop
and
inc
jmp
clc
fldcw
sbb
dec
push
dec
psrlw
add
cmp
cmp
inc
sub
add
rcll
xchg
adc
push
add
push
push
cmp
adc
es
add
or
adc
xchg
sub
and
mov
sub
push
mov
cmp
sahf
mov
and
cmp
clc
xlat
inc
in
imul
hlt
cmp
into
lret
sbb
in
test
adc
push
aaa
mov
aad
mov
or
sarl
sbb
xor
shlb
dec
insl
adc
leave
sbb
cs
inc
pop
cmp
adc
aas
sbb
cmpsb
sti
mov
loopne
rol
inc
inc
cmp
aam
xchg
sub
lret
jne
sbb
daa
sbb
jmp
jnp
add
xchg
sub
mov
add
mov
add
and
cwtl
in
mov
std
jp
add
jmp
and
dec
lahf
sbb
pusha
enter
inc
mov
inc
or
xor
out
testb
push
pop
loopne
sbb
daa
test
cld
push
hlt
mov
hlt
lock
out
daa
mov
pop
bound
aad
cmp
push
and
lock
test
xor
lock
xchg
fiaddl
mov
push
or
clc
stos
mov
mov
je
dec
or
adc
addl
fmuls
cmp
cmp
mov
and
imulb
ss
data16
jne
idivb
xor
leave
pop
xchg
cs
nopl
adc
sub
and
or
cmpsb
adcb
in
addb
adc
jmp
lds
ds
mov
add
pop
scas
push
imul
bound
inc
les
sub
or
cmpsl
inc
testb
xor
xchg
xor
addl
cwtl
add
adc
and
decb
pop
jl
jg
mov
inc
xchg
jbe
jle
shlb
cmp
and
or
int3
inc
push
std
or
sub
xor
pop
div
jl
inc
push
xorb
inc
imul
cmp
adc
jl
mov
inc
jp
out
mov
repz
sbb
adc
repz
or
inc
pop
push
adc
adc
lods
add
cmp
xorb
pop
xor
xor
mov
pushl
ljmp
pop
popf
mov
subl
fwait
jle
push
cmp
fsubrl
sbb
cmpsl
fistl
jne
rclb
pop
push
cmp
sub
add
aam
dec
roll
ret
adc
subb
push
pop
lods
aam
adc
lock
mov
jno
fcmovb
inc
rorl
in
ret
cmp
mov
mov
mov
lods
lds
mov
pop
or
and
clc
push
ss
out
fmull
clc
add
inc
push
xlat
mov
xor
movsl
add
lods
jl
pop
xchg
push
ficompl
adc
scas
fiaddl
and
sub
adc
cwtl
pop
sub
push
xchg
rol
cmp
std
adc
mov
test
sub
clc
je
lds
fcoms
dec
mov
mov
dec
push
loopne
out
add
cmp
jb
xor
test
in
sbb
ss
jp
mov
lock
push
imul
loopne
push
fidivrs
xchg
out
cmpsb
fmull
mov
lahf
push
adc
push
adc
push
add
sub
fmuls
idivb
dec
mov
xchg
sub
sbb
pop
push
sbb
rcrb
in
ds
jbe
or
gs
and
leave
mov
jl
insl
push
and
adc
cs
pop
pop
dec
inc
add
je
test
sbb
hlt
pop
cmp
and
mov
add
testb
inc
mov
mov
popa
adc
orb
aam
lahf
inc
jp
dec
jmp
xchg
push
movsb
je
inc
push
je
test
aas
push
and
push
jmp
out
add
adc
scas
loope
inc
adcl
sahf
lret
push
mov
ficoml
sahf
pop
in
dec
push
lcall
adc
jo
in
add
or
lock
dec
call
pop
or
and
jle
test
ss
adc
aaa
jnp
and
dec
aam
or
push
sbb
pusha
jmp
xor
lds
sbb
stc
jl
push
and
lea
pop
mov
pop
mov
jo
ss
inc
mov
cmp
mov
ljmp
mov
push
sbb
push
push
jbe
js
call
adc
shl
and
loopne
sub
imul
xor
or
adc
imul
lahf
ljmp
mov
mov
push
mov
and
or
out
out
inc
jl
and
push
inc
mov
test
dec
enter
adcb
cmpsl
xor
xchg
xchg
lods
and
fisttpl
int
jne
add
mov
or
cwtl
cmp
adc
xor
xchg
in
stos
fadd
gs
push
aaa
out
cs
and
adc
pusha
add
pop
pushf
popf
push
cmp
inc
jp
nop
popa
fcoms
pop
mov
pop
fmul
in
stc
out
enter
cwtl
dec
mov
or
push
pop
in
mov
push
hlt
cmp
je
dec
xor
sub
bound
mov
lea
repz
dec
jge
test
ss
push
pop
add
sahf
xchg
add
add
add
adc
mov
decb
add
adc
jno
jle
add
seto
add
enter
push
test
sbb
pop
push
pop
sahf
dec
push
jns
add
or
or
sbb
inc
dec
or
inc
sahf
xchg
add
or
and
sbb
pop
or
in
lcall
lcall
add
xor
push
push
ja
and
and
push
rsqrtps
movsl
mov
pusha
adc
sub
adc
push
and
and
ds
add
adc
pop
adc
ret
repnz
adc
adc
adc
inc
fmulp
cltd
adc
add
sbb
push
push
push
pop
mov
sbb
out
rcrb
sbb
in
sbb
call
sahf
sbb
sbb
sbb
cmp
sbb
jb
sbb
sbb
push
add
cmp
nop
out
push
inc
push
pop
hlt
incl
jns
jne
add
add
sub
cmp
inc
test
inc
sti
jb
jg
mov
into
jmp
fisubl
mov
add
xchg
mov
cmp
je
lcall
push
in
repnz
lea
or
out
jns
in
in
cmp
enter
fwait
out
sbb
out
mov
add
call
enter
adc
nop
negl
ljmp
jmp
lret
sbb
out
in
in
pop
push
mov
in
cltd
mov
add
inc
in
sahf
out
out
cmp
cmp
out
sbb
and
in
pop
lock
pop
enter
icebp
enter
pslld
test
pop
out
std
repz
push
push
jns
std
hlt
hlt
rorl
cmp
hlt
fwait
mov
in
inc
jg
testb
push
pop
idivl
sbb
clc
clc
cltd
inc
fmulp
add
stc
inc
stc
add
mov
cli
nop
adcl
cld
repnz
outsb
sub
cld
je
cld
push
pxor
pop
jo
mov
xor
cmp
xor
pop
sub
push
inc
xor
dec
pop
or
add
push
jp
xchg
xor
movsb
or
dec
shl
cmpsb
sbb
es
jecxz
ja
inc
mov
in
push
inc
push
fdiv
inc
and
daa
insb
nop
or
sti
out
out
cltd
inc
pop
and
outsb
call
das
xchg
sti
sub
sbb
pop
jmp
jmp
mov
cli
in
add
xchg
cmp
cli
popf
cli
rclb
sbb
imul
or
in
repnz
das
cli
push
cli
push
cmp
jmp
ss
repz
sar
pop
and
push
stc
sbb
pop
xor
fstpl
cwtl
xlat
movsl
test
fwait
mov
add
stc
or
pop
and
clc
cmp
lret
sti
sti
enter
cltd
mov
mov
inc
adc
push
in
sbb
cmp
and
test
cmc
push
sub
sub
mov
fnstsw
mov
pop
shl
xor
xchg
scas
idivl
adc
push
mov
out
out
loop
cmp
out
sub
xchg
cmp
mull
not
push
push
adc
mov
loop
jno
div
and
pop
mov
xchg
divb
and
insb
out
jb
or
jno
testb
divb
pusha
leave
add
sbb
xchg
cmpsb
repnz
and
xchg
cmc
adc
xchg
pop
jae
pop
mov
cmc
div
idivb
scas
jae
fwait
and
mov
inc
clc
clc
jecxz
jns
loopne
stc
popa
cmp
dec
push
cli
cli
jno
adc
jb
hlt
pop
jne
mov
mov
roll
data16
into
shr
test
idivl
jo
sti
push
inc
loopne
lahf
imul
adc
add
jae
loope
repz
leave
and
mov
adc
xchg
repz
sub
in
repz
inc
pop
lret
inc
repz
and
sbb
jmp
xchg
inc
mov
xchg
repnz
xchg
pop
jo
sbb
dec
in
in
cmc
pop
daa
xchg
inc
and
add
adcl
xchg
pop
loope
sbb
mov
adc
add
popa
leave
mov
xchg
cmpsb
jb
cmp
mov
adc
cmc
add
cmp
leave
jecxz
ffree
lock
pop
adc
loop
sar
cmc
jne
mov
lock
pop
mov
sbbl
fldl
ss
add
stos
add
adc
sub
out
nop
sbb
rol
in
enter
cmovno
push
add
mov
iret
add
stos
add
jno
fmuls
jp
push
jnp
adc
mov
adc
mov
or
dec
xchg
mov
add
sahf
and
sbb
dec
add
inc
mov
lcall
inc
add
xor
sub
push
mulb
jl
iret
roll
and
int
mov
xchg
sub
sbb
add
iret
repz
dec
push
jne
fstps
fldcw
and
and
sub
repz
sub
push
sbb
jns
lahf
fimuls
roll
mov
add
addr16
mov
dec
and
add
dec
xchg
or
jle
rolb
adc
ret
inc
add
lods
inc
cld
jb
test
mov
cmp
push
imul
add
and
pop
push
notl
sub
dec
and
add
hlt
rorl
xor
rolb
sub
or
clc
ret
jg
jge
push
dec
add
jmp
shlb
nop
add
insb
mov
mov
nop
out
test
cmp
pop
les
decl
sbb
in
fiadds
cmp
add
mov
testb
inc
push
add
jp
or
imul
or
punpcklwd
xchg
sbb
fistl
out
add
cld
inc
shrb
push
dec
and
ret
mov
cmp
rclb
imul
jb
cmpl
cltd
je
fisubrs
mov
mov
pop
test
rorl
das
add
push
shrl
cld
je
adc
and
je
lea
mov
dec
ljmp
ret
fs
bound
mov
loopne
push
jge
push
inc
mov
adc
adc
sub
in
jae
loopne
addr16
ret
adc
js
dec
loopne
in
adc
test
push
enter
cld
add
add
call
sbb
jne
mov
inc
jb
pop
ja
add
pop
dec
xor
sub
inc
inc
inc
js
mov
cmp
jo
or
mov
mov
push
inc
and
gs
pop
push
mov
and
inc
mov
rcr
push
xor
test
push
cmpsb
or
jo,pn
cmp
loopne
je
mov
xchg
or
add
notb
pop
sbb
pop
cmp
enter
add
lods
test
rorb
cmp
sub
lea
jno
call
mov
mov
xchg
add
out
nop
dec
xor
fnstsw
adc
or
and
add
push
outsb
testb
jg
lods
push
mov
push
lea
stc
sub
adc
xchg
xchg
dec
jbe
mov
into
fwait
inc
mov
out
sub
xor
xchg
lea
cmp
jne
orl
add
adc
jne
sub
cmpsl
mov
iret
outsb
dec
xchg
sbb
cwtl
aas
adc
cmp
sub
mov
aad
xor
outsb
test
push
push
jmp
mov
mov
cmp
outsb
xchg
push
stc
and
or
adc
jne
dec
add
add
lds
or
decl
xchg
add
or
div
jg
fdivl
jmp
pusha
fidivs
lret
enter
sub
cmp
cs
xlat
loopne
add
cmp
jae
push
or
jb
movsb
push
sbb
test
mov
mov
and
add
push
jmp
call
pusha
adc
mov
or
test
cmp
add
into
mov
sbb
lret
jbe
cmc
dec
mov
inc
mulb
pusha
inc
clc
mov
test
repnz
sbb
mov
pop
pop
add
testl
fcomps
inc
xor
fiaddl
sarl
add
ss
inc
jmp
cltd
and
or
popf
cmp
adc
pop
adc
cli
cld
fisttpl
pop
loopne
xchg
and
push
cmp
jne
jnp
or
inc
mov
outsb
pop
push
loope
inc
add
add
mov
push
cmp
jne
mov
push
cmp
jne
jns
fwait
cmpsl
es
jne
call
and
fwait
ljmp
mov
add
jle
lahf
jmp
std
std
jmp
cld
iret
or
ret
push
sub
test
mov
push
aaa
dec
push
adc
enter
dec
sbb
add
lods
mov
jmp
mov
pop
lock
jne
or
mov
adc
scas
pop
test
ret
das
cmp
jns
adc
and
pop
inc
pusha
mov
loope
lds
xor
dec
dec
and
inc
xor
mov
pop
adc
scas
loopne
pop
or
fstpl
cmp
xchg
dec
adc
outsl
je
lods
lret
xor
and
enter
sbb
fimull
sbb
inc
push
add
repz
lock
sub
jecxz
lea
insl
xchg
inc
out
scas
lcall
jmp
pop
add
adc
jne
push
lock
or
mov
push
jmp
sbb
or
dec
outsb
out
jns
and
sbb
bound
and
lcall
xchg
jno
fsubs
into
cwtl
ja
roll
and
adc
inc
add
adc
and
daa
data16
call
dec
cmp
push
mov
mov
inc
add
mov
lock
jmp
icebp
push
mov
lret
clc
add
mov
test
stc
xor
pop
imul
stos
add
testb
insb
adcl
sbb
cwtl
lock
sub
or
pop
lock
adc
push
dec
jne
mov
mov
popf
fdivrl
inc
adc
inc
or
ds
jl
xchg
push
iret
sbb
cmp
imulb
xor
das
cmp
sbb
sbb
roll
jbe
cmp
andb
sbb
out
or
pop
pop
scas
push
adc
shl
movl
mov
jb
rep
jmp
xor
mov
ss
dec
inc
add
xor
push
out
out
push
fdivrs
push
mov
mov
add
in
lcall
mov
cmp
add
lret
lret
cmpsb
inc
add
add
xchg
mov
or
push
lahf
out
fisubs
push
sbb
or
clc
cmp
inc
mov
mov
call
out
in
lock
hlt
xor
clc
cld
pop
push
insb
mov
lock
fldcw
pop
push
push
lods
sbb
inc
cs
pop
shll
push
sti
and
vpunpcklwd
xor
jl
cld
or
or
and
std
cld
out
loopne
inc
jno
pop
neg
adc
nop
xchg
daa
stc
fsubrs
cmp
hlt
cltd
mov
inc
push
fiaddl
jl
outsb
dec
gs
out
add
sub
ret
out
push
add
nop
dec
dec
adc
cmpsl
imul
ficomps
or
push
movsb
lods
pop
jl
out
mov
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
xchg
lods
clc
fdivp
or
push
or
sub
add
push
inc
pusha
mov
daa
ja
lcall
mov
hlt
idivl
cmp
decl
jne,pn
pop
pop
xlat
nop
outsb
xchg
adc
ljmp
push
scas
xor
jbe
push
cltd
pop
idiv
add
inc
add
mov
sbb
mov
push
inc
cmp
xchg
mov
adc
xchg
mov
das
mov
jmp
cmp
jae
dec
xor
pop
xchg
jbe
popf
clc
push
hlt
mov
dec
mov
pusha
add
call
dec
adc
hlt
cmp
and
pop
sbb
push
jg
push
sbb
xor
adc
add
mov
sbb
dec
or
xchg
movsl
dec
and
and
xorl
mov
pop
lcall
xor
mov
xor
pop
inc
shrb
decb
push
xchg
xchg
out
loop
mov
inc
xor
xchg
sbb
into
lock
add
mov
filds
loop
push
cs
pop
inc
adc
pop
add
adc
add
imul
adc
ficoml
and
mov
stos
xor
int3
dec
sti
mov
mov
mov
imul
ja
fnstsw
ds
jge
fnstcw
pop
cltd
pop
idiv
cmp
inc
jge
int
in
inc
xor
xchg
inc
out
cmp
insl
xor
es
jmp
inc
popf
xchg
in
mov
mov
imul
fs
movsl
mov
imul
add
jmp
jl
mov
adc
fcmove
sbb
pop
xchg
mov
pop
insb
sub
shll
jo
repnz
sbb
inc
cs
je
add
adc
mov
add
dec
adc
cmp
loopne
mov
add
sti
fstps
push
pop
sub
sbb
adc
add
jae
cmp
adc
mov
pusha
arpl
adc
inc
push
jmp
jge
pop
je
pop
pop
mov
insl
cmp
jle
popa
inc
movsb
pop
sti
pushl
scas
jno
xchg
fnstenv
int
int3
ret
xchg
mov
mov
je
dec
icebp
pop
mov
int3
jne
mov
mov
mov
inc
popf
push
enter
loop
cs
dec
mov
mov
sbb
lods
js
adc
and
push
fs
or
inc
mov
push
aaa
subl
sbb
rcl
sbb
stc
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
cs
adc
adc
pop
mov
and
push
pushf
jno
and
fldt
ret
push
je
inc
sub
push
push
movsb
xchg
inc
outsl
fcoml
sub
and
jge
loop
in
sbb
pop
jne
push
lock
cli
add
push
cs
out
bound
adc
adc
or
out
or
or
add
std
outsl
mov
add
lock
pushl
outsb
std
dec
ljmp
xchg
rorb
rclb
adc
jg
add
and
rcll
enter
xchg
adc
hlt
dec
js
loop
inc
insl
stos
out
outsb
dec
jne
cmp
adc
mov
mov
add
decl
inc
jg
jbe
and
std
lock
je
gs
stos
inc
cmp
pusha
cmpsb
pop
sbb
nop
ret
cmp
les
mov
inc
inc
cmp
je
xchg
mov
fs
orb
sbb
adc
add
push
shrl
fidivrl
dec
je
and
mov
test
mov
or
sbb
inc
sbbb
mov
incl
mov
pusha
push
mov
push
ret
and
pop
inc
sbb
or
xor
lret
push
aam
sbb
lods
mov
xor
cmpsl
adc
or
push
cli
xor
cmpsb
add
dec
push
xchg
enter
pop
xorb
movl
or
lock
ljmp
test
adc
test
cmp
test
je
mov
enter
mov
int3
xor
dec
imul
pop
push
pop
inc
push
addb
rorl
pop
add
add
cli
frstor
imul
scas
sub
js
push
dec
sahf
dec
lret
mov
push
adc
fisubl
sbb
orl
sub
cmp
add
shlb
push
lea
or
dec
xchg
je
jne
jmp
dec
or
jnp
movaps
push
push
jmp
das
scas
roll
repnz
jmp
dec
sbb
clc
into
push
dec
lds
add
jo
orb
mov
dec
inc
mov
sbb
pushf
mov
clc
ret
inc
pop
iret
xor
add
call
movsl
sbb
es
push
loop
andl
call
jl
cmp
lahf
jge
outsb
jns
and
jne
push
jge
jo
lcall
mov
sbb
push
mov
push
pushw
or
rcrl
bound
sbb
jbe
push
das
cmp
ja
rclb
clc
or
cmpb
jne
inc
inc
call
push
shl
mov
inc
sub
or
push
imul
out
sub
cltd
pop
stos
call
jmp
shlb
sub
pop
ret
sub
ja
inc
jmp
aas
add
in
mov
ss
mov
inc
dec
mov
rorb
jne
add
inc
jb
in
add
and
dec
sahf
popf
mov
out
dec
dec
jnp
mov
add
push
rol
dec
ds
and
bound
aaa
sbb
dec
mov
ja
rcl
inc
xchg
cmp
dec
insb
push
xchg
pop
or
dec
rcrl
icebp
pop
das
enter
movb
lea
shrb
stc
enter
fisttps
or
add
jmp
push
adc
call
jbe
jo
push
cld
jb
mov
push
add
fidivl
ss
cli
lahf
mov
dec
js
add
pop
inc
add
inc
inc
repnz
or
js
dec
loope
or
jne
loope
or
sbb
jmp
arpl
cmp
std
jne
pop
cwtl
add
cmp
test
pop
arpl
cs
aad
les
orb
inc
mov
adc
or
jg
add
or
sub
aad
std
cmp
xchg
popf
imul
sub
or
cmp
test
jmp
fbstp
sti
ss
lcall
pop
sub
pushw
test
sub
push
push
cmpsb
push
push
push
jl
add
push
sbb
pop
xor
lods
pop
push
cmpsl
add
les
adc
jecxz
aam
dec
adc
mov
push
aas
sub
adc
sub
and
call
xor
adc
lods
dec
popf
sub
mov
cmp
cmp
push
pop
push
addl
testb
ficompl
xor
pop
dec
mov
add
inc
nop
sub
imul
adc
push
pop
dec
ss
add
dec
add
or
xchg
inc
js
lret
in
jge
aam
cwtl
mov
es
pusha
or
xor
xchg
xor
xor
add
aaa
jne
popa
jne
or
out
or
insl
xor
push
pop
popa
test
add
enter
mov
pusha
and
adc
jae
mov
pop
lcall
nop
pushw
pop
call
or
addr16
adc
ds
jmp
add
adc
cmpsb
mov
xor
mov
popf
and
and
add
pop
push
add
call
movb
xchg
add
push
leave
sub
std
add
jo
clc
add
cmc
add
test
or
add
cmp
and
push
inc
adc
adc
sub
rcrb
loopne
or
in
cmp
push
mov
cli
sar
xor
cli
mov
push
lea
loopne
jo
pop
xor
lds
push
and
pop
push
sbbl
imul
mov
jmp
push
cmpb
imul
sub
sbb
inc
push
rorb
push
jg
sbb
dec
in
jmp
add
xor
imul
jbe
rcrl
mov
ljmp
cld
mov
add
inc
cli
adc
sti
sbbb
add
dec
xchg
xchg
or
adc
and
or
add
push
int
inc
jg
lock
pop
dec
fmulp
and
je
int
and
push
cmp
xchg
sbb
fdiv
fstpt
cmp
jne
fadds
inc
inc
movsb
pop
add
and
jae
lock
cwtl
push
sbb
hlt
das
and
aam
sub
sbb
or
add
and
mov
sub
pushf
or
nop
adc
and
loop
mov
push
or
push
pop
fsubrp
lods
lret
test
add
push
rolb
sub
fnstcw
xor
stc
std
pop
cmp
push
or
cld
jns
jns
sbb
sbb
dec
je
lcall
mov
cmpsl
inc
mov
es
ja
rolb
cmp
lods
add
xor
sarb
add
repz
dec
mov
or
or
sarl
cltd
dec
cmp
mov
in
push
push
push
popf
out
adc
fiadds
loope
inc
push
xor
sub
xor
mulb
pop
or
cmp
cld
mov
or
push
or
cmp
test
dec
adc
adc
bound
xorb
rcrl
push
outsl
add
shl
or
jmp
mov
sub
mov
arpl
mov
inc
dec
jne
lea
adc
or
jl
icebp
fbld
xchg
pop
test
cmp
jmp
outsl
add
sti
push
mov
add
hlt
mov
and
inc
jns
outsl
and
lea
insl
rcll
xchg
out
push
or
or
lock
testl
cld
ficoml
and
and
push
push
imull
inc
int
std
push
cmp
pop
adcb
inc
cld
pop
xlat
push
mov
sub
mov
orb
mov
je
cmp
lahf
push
and
or
adc
aad
fiadds
ret
jmp
mov
mov
lods
leave
sub
mov
cmp
add
lea
sub
or
push
jl
in
call
add
jmp
cmp
push
and
and
add
je
inc
sub
dec
je
ret
cld
and
add
arpl
mov
mov
xor
insb
add
ja
test
and
jno
or
sbb
xor
mov
cwtl
push
clc
cmc
jno
sahf
sub
jo
dec
out
or
mov
pop
insb
cld
mov
pop
inc
out
jmp
imul
in
ret
cmp
push
add
push
mov
mov
cmpsb
and
sub
aam
in
repnz
inc
cmp
std
jne
fcomp
pop
cmpsb
jge
fldt
stos
inc
add
and
les
rolb
ret
dec
dec
ljmp
or
lods
xor
cmp
sub
mov
scas
push
nop
xchg
repz
std
dec
sbb
cmp
or
pop
fidivl
push
jmp
add
dec
fwait
pop
ret
push
and
sbb
scas
into
xor
dec
lods
add
dec
dec
push
xchg
adc
les
cmp
jbe
clc
push
in
lea
mov
add
fldl
leave
inc
inc
cmc
push
out
lea
xor
add
call
aas
push
push
in
into
sub
and
fs
orb
or
lcall
mov
int3
inc
inc
test
sar
addb
jge
add
in
xor
jb
mov
xor
xchg
insb
out
jo
push
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
sub
sbb
add
mov
xor
sbb
push
jo,pt
mov
inc
dec
jne
sbb
movsb
mov
add
pusha
sub
test
cltd
push
jnp
test
xor
cmp
test
data16
xor
hlt
dec
loopne
adc
cmp
push
sub
movsl
mov
push
inc
bt
and
mov
inc
sbb
adc
mov
stos
add
or
je
cld
fisubrl
jge
cld
aas
and
push
test
adc
inc
push
jbe
cmpsl
push
inc
push
sar
xor
lods
xchg
add
xchg
xchg
xor
faddl
or
and
fs
test
insb
pop
shrl
adc
out
ja
loopne
or
pop
sub
jmp
xor
jg
or
mov
add
fwait
xlat
add
ret
rolb
add
arpl
xchg
push
sbb
es
inc
mov
sub
mov
sti
imul
mov
jl
iret
cmc
lret
cmp
push
adc
and
mov
dec
popa
lret
mov
cmp
mov
pop
mov
mov
lock
mov
mov
xchg
mov
cltd
sub
iret
dec
not
das
adc
mov
call
inc
xchg
int3
xchg
or
subb
and
sbb
insb
mov
cmp
sbb
cwtl
sub
inc
lds
jecxz
mov
jle
or
push
cmp
idiv
cmpl
add
fsubrs
loope
pop
cmp
sahf
inc
add
sub
dec
or
popl
xor
and
in
mov
push
sbb
mov
lea
inc
sub
aaa
cmpl
ss
out
or
jo
aam
movsl
sub
or
rorl
dec
jo
and
cmp
xor
je
adc
mov
dec
pop
pop
test
mov
jmp
xchg
inc
in
pop
add
adc
push
in
or
pop
lock
mov
sbb
pop
sbb
jo
loope
movsl
insb
or
ds
lar
and
and
decb
xchg
add
sub
rcll
stos
sbb
sbb
jbe
pop
movb
out
jne
out
and
push
cmp
cld
pop
sbb
ret
mov
dec
loopne
and
aad
dec
pop
push
pop
cmp
jns,pn
push
add
hlt
adc
ljmp
cld
fisttpll
jns
fisubrl
lret
outsl
dec
scas
out
call
sbb
cwtl
sub
adc
inc
shll
in
push
push
push
mov
fucomp
xor
mov
shrb
inc
nop
mov
js
sub
dec
pop
and
das
int3
inc
pop
call
adc
xchg
and
cwtl
and
sbb
mov
sti
lret
sbb
cmp
cld
push
jo
mov
ret
inc
or
inc
mov
lods
add
test
movsb
or
mov
xchg
dec
jb
inc
cmp
scas
mov
out
sbb
jg
push
cmp
push
aaa
ret
outsl
mov
addb
pop
ret
xchg
sub
dec
rclb
test
jbe
inc
pop
xor
push
push
movsb
pushf
mov
pop
sub
test
cli
imul
rolb
add
pushf
jmp
xor
not
les
faddl
push
cltd
iret
or
xor
andl
nop
call
jb
sub
xor
jb
pop
cmp
inc
mov
jb
dec
pop
cmp
xor
daa
jle
popa
lcall
enter
jmp
cli
mov
insb
and
mov
mov
adc
test
add
loope
mov
cmp
and
jge
addl
push
push
divps
popa
pusha
add
xor
sub
xchg
mov
bt
dec
out
cs
cmpl
cmpsl
mov
adc
pushf
add
and
daa
test
mov
jno
pop
inc
ss
cmc
pushf
xor
xchg
mov
or
sbbl
mov
sub
data16
ss
mov
and
mov
iret
loopne
aaa
pop
mov
push
mov
mov
nop
stos
mov
movsl
xchg
into
pop
das
pusha
jp
add
clc
pop
mov
mov
add
es
aam
lea
into
ss
out
das
mov
add
gs
popf
sub
loopne
fcoml
gs
aam
sarb
clc
or
in
popf
enter
shlb
pushf
popl
mov
fs
sarl
in
cs
aaa
dec
cld
adc
sub
jno
aam
aam
xchg
pop
and
fadds
lea
mov
sub
mov
add
dec
inc
xchg
adc
popa
js
jmp
jge
loop
jle
push
loop
push
ret
and
add
fildl
xchg
add
insb
or
out
hlt
jmp
mov
aam
lcall
mov
test
lcall
arpl
arpl
lods
add
mov
or
arpl
inc
dec
pop
hlt
arpl
insl
test
fdiv
cmp
repz
ror
sarb
test
pop
fprem
mov
or
sbb
and
gs
and
inc
gs
fs
nop
movsb
adc
push
lock
nop
inc
enter
nop
gs
jnp
mov
or
push
push
pop
or
xchg
mov
mov
and
nop
clc
int3
gs
mov
adc
dec
jecxz
jbe
cmp
push
xor
inc
adc
mov
xorl
aaa
mov
cmp
pop
fstp
xchg
js
or
add
or
jle
cld
mov
and
insb
lret
jne
das
pusha
shll
rorl
lcall
mov
jge
test
cwtl
jae
test
mov
orb
add
xchg
mov
and
adc
nop
or
push
repnz
push
and
imul
pop
and
stos
idivl
push
lea
pop
mov
hlt
fdiv
mov
jne
mov
ficoms
add
es
fwait
xor
ret
jb
enter
ljmp
cmc
je
xchg
sbb
mov
xchg
dec
dec
adc
xor
jae
sbb
pop
sub
jl
or
jecxz
je
shrl
push
add
push
lret
jmp
adcl
adc
xchg
clc
push
movl
add
jmp
adc
mov
roll
stc
jbe
mov
addr16
push
bound
xor
or
inc
lcall
hlt
dec
or
gs
and
addb
xor
out
iret
loop
xchg
cwtl
outsl
push
leave
ret
shl
fsub
adc
and
dec
add
sub
loope
notb
cmp
xchg
ret
enter
les
repnz
movl
or
mov
bound
fisubrs
hlt
jecxz
pop
shlb
and
testl
push
inc
shl
push
pusha
sbb
sbb
jl
ljmp
mov
push
xchg
push
hlt
cld
aaa
sub
mov
leave
loopne
dec
or
or
rclb
push
loope
les
push
orb
or
jp
dec
mov
or
lea
inc
cmp
fs
addr16
adc
test
mov
pop
push
pop
scas
and
pop
add
push
inc
inc
or
dec
dec
or
dec
daa
jmp
push
jbe
add
scas
test
lret
mov
xchg
mov
and
out
inc
popa
and
shrb
dec
call
lahf
js
or
mov
xchg
movsl
or
inc
or
test
push
daa
or
jno
mov
cmp
inc
xchg
cmp
stos
test
add
es
test
test
xchg
adc
pusha
push
jo
lcall
adc
jbe
push
inc
rclb
inc
movsl
test
mov
ret
xchg
push
push
in
or
inc
sbb
xor
jno
icebp
pop
xor
mov
divl
in
and
sub
dec
add
lock
sub
dec
xchg
or
pop
jle
push
inc
movsb
aam
jnp
jo
dec
ljmp
jns
data16
out
mov
push
lcall
fsubrs
lock
loopne
add
mov
lcall
ret
lahf
rcrb
int3
andb
xorb
ja
and
push
push
xor
femms
lock
dec
jmp
push
sbb
dec
cmpsl
xor
jo
outsl
out
add
mov
dec
jbe
orl
shrl
pop
jnp
pop
push
sub
into
lcall
mov
rolb
inc
push
xchg
cli
je
push
inc
jo
ret
xor
test
sub
or
in
mov
out
mov
mov
mov
mov
push
mov
mov
cmp
mov
addr16
addr16
pop
pop
ret
lds
movzwl
test
in
mov
xchg
call
push
xchg
in
or
push
or
dec
clc
dec
adc
jle
lods
rol
imul
test
outsb
ficompl
jl
enter
mov
test
call
clc
sbb
enter
movsb
sbb
bound
js
sahf
fldl
orl
aam
jae
pop
fdivr
fsubs
outsb
adc
call
je
imul
push
add
mov
or
lret
and
add
sbb
adc
push
add
mov
or
aam
mov
mov
mov
stos
and
rolb
lea
cltd
pusha
xchg
ja
movsl
mov
mov
jbe
xchg
or
out
sbb
hlt
hlt
stc
rcr
ss
je
or
inc
insb
je
inc
and
xor
subb
loope
insb
cmp
sub
mov
sbb
pop
and
pop
fdivrl
pop
or
xor
mov
add
xor
pop
sbb
fs
cmp
jb
or
imul
int
cmc
jne
js
xchg
xchg
mov
je
mov
test
push
xchg
rcrl
nop
lea
adc
xor
push
sbb
jle
inc
je
pop
push
or
xlat
pusha
scas
add
mov
ret
add
hlt
jo
mov
fdivr
xchg
scas
inc
jmp
test
mov
inc
push
jae
pop
testl
jge
rorl
dec
aaa
jne
das
mov
cmp
sbb
push
add
dec
and
shll
in
push
ret
push
loopne
mov
rcl
sub
in
sub
add
and
mov
mov
inc
loope
inc
inc
push
or
mov
jl
xor
adc
cmpb
push
int3
negl
test
movsl
add
lods
dec
dec
lret
sbb
or
push
iret
sub
and
pushf
je
in
pop
cli
inc
mov
push
mov
dec
pop
sbb
mov
aas
push
xchg
js
mov
jnp
dec
fcmovnbe
jge
lcall
jge
pushf
and
mov
mov
xor
dec
test
jo
xor
jecxz
mov
lea
lahf
xor
jns
push
sbb
imul
dec
outsb
jo
add
add
mov
adc
jmp
pop
push
outsb
je
test
ss
int3
dec
scas
out
je
aas
add
cs
gs
test
jo
fbstp
je
pushw
sub
add
movsb
mov
adc
or
xchg
lds
jecxz
add
or
push
add
ret
jge
jp
fidivl
mov
jne
mov
jmp
cmp
je
cli
pop
jle
insl
cmpl
incl
data16
push
mov
xor
int
pop
adc
mov
mov
call
cld
adc
sti
jl
scas
jnp
fidivrl
sub
fwait
adcb
or
lret
test
lea
mov
pop
fwait
stc
lcall
dec
sub
inc
call
scas
popf
sub
add
xchg
inc
adcl
mov
bound
push
outsb
mov
and
jae
addr16
adc
loopne
decb
mov
test
adc
push
xor
sbb
push
sub
lret
call
jne
push
dec
aad
je
adc
adc
cmpsb
jmp
fsubrs
inc
or
je
cltd
jp
xchg
dec
sub
push
xchg
call
dec
or
adcb
jle
dec
shl
jecxz
nop
pop
fimull
jbe
mov
or
sbb
dec
test
decb
push
and
lea
jo
das
sbb
adc
inc
les
adc
loopne
adc
sarl
push
nop
xchg
incb
clc
clc
sahf
add
mov
dec
jmp
pop
cmp
push
fcoml
ljmp
je
into
cmpb
shlb
fisubs
sbb
ss
mov
js
js
loope
or
jle
or
dec
repz
inc
int3
roll
sbb
js
sub
add
sub
sub
push
test
mov
and
loop
mov
fisubrs
popf
fcoml
or
cmpb
loopne
jp
sbb
xor
int3
ja,pt
fdivrl
lea
jns
movsb
nop
sbb
mov
dec
popa
pop
jmp
push
jbe
dec
sbbl
pusha
dec
and
jne
jno
push
add
push
aaa
cmp
call
add
pushf
push
shrl
add
popa
jle
sbb
mov
cmp
add
and
pop
jg
call
or
enter
cmp
sub
imul
je
jp
or
fbld
rcr
adc
daa
pop
cmp
clc
mov
pusha
rolb
cmp
loope
sahf
add
pop
pop
fisttps
adc
mov
push
adc
cmp
cmpsl
push
ljmp
or
fdiv
ss
push
test
pop
add
or
push
mov
outsb
jle
adc
xor
mov
movsl
fisubrs
xor
mov
fmull
loop
sarb
push
lea
mov
fs
repnz
stc
and
arpl
and
ror
je
xorl
and
lcall
rcl
mov
or
fwait
dec
mov
sbb
in
jb
push
lret
or
add
insl
inc
jl
push
pop
lahf
sub
push
jne
push
aas
out
dec
inc
mov
and
adc
out
adc
stc
jge
mov
sbb
stos
and
dec
pop
sbb
mov
ss
push
mov
jne
push
cmp
jmp
push
cmp
xor
adc
lahf
imul
add
mov
lock
aam
aad
into
rcll
cwtl
test
sbb
test
out
sub
pop
adc
push
cwtl
pop
rclb
ss
in
mov
mov
imul
add
jmp
rclb
fcompl
dec
es
rclb
movsl
int3
mov
aad
pushl
mov
sub
dec
push
add
cld
shr
jnp
fdivs
leave
arpl
imul
cld
cld
cmpsl
add
lea
mov
popf
mov
push
cld
ljmp
divb
push
clc
pushl
add
cmp
jbe
push
pop
dec
lock
or
subb
jae
mov
shr
lea
add
add
shll
pop
mov
sub
sbb
pop
adc
mov
mov
push
pop
push
mov
push
dec
pop
add
stos
xor
and
addl
jg
push
jecxz
incb
std
cwtl
movsl
sub
and
sti
add
push
js
push
dec
pop
cmp
rolb
mov
imul
adc
sbb
pop
mov
jno
jg
fnstcw
mov
shr
not
and
sbb
dec
add
xor
push
mov
das
mov
xor
dec
jle
pop
dec
add
jl
dec
lret
mov
add
mov
or
mov
ficoms
int3
inc
adc
dec
or
xchg
push
fwait
add
dec
pusha
mov
xchg
cmp
popf
xchg
inc
mov
mov
mov
pop
jl
lahf
push
or
pop
mov
jmp
lods
sbb
lods
dec
push
mov
ljmp
dec
in
or
xor
push
lcall
cs
and
and
pusha
push
pop
inc
or
fsubrs
paddsb
shl
add
scas
jp
push
call
aas
insb
loop
jnp
mov
push
or
add
andl
inc
adc
dec
adc
add
rclb
ljmp
push
push
dec
push
adc
sbb
mov
adc
adc
and
push
jl
sub
add
jle
cmp
adc
aaa
jo
cmp
mov
inc
inc
mov
cmp
jne
push
pop
mov
imul
dec
cwtl
outsl
push
cmp
xchg
out
mov
loope
addl
cmpsl
mov
les
les
sahf
mul
inc
adc
leave
push
or
stos
mov
xor
or
adc
out
lcall
dec
sbbb
inc
or
incl
inc
and
jmp
push
mov
shlb
rolb
pusha
mov
pop
clc
dec
stc
mov
rorl
or
hlt
or
cmpsl
bound
idivb
int
or
add
sbb
sub
cmp
sub
shr
mov
dec
clc
inc
jge
loopne
mov
adc
adc
out
mov
cld
lock
call
stos
mov
lret
je
clc
add
movsb
push
dec
lock
sbb
sub
in
sub
adc
inc
fs
inc
bsf
pop
mov
mov
lock
cmp
push
pop
decl
jne
or
lds
not
and
sbb
int3
les
repz
fwait
sbb
sub
sarb
mov
fmull
cld
js
cmp
jo
loope
add
pushf
jle
jg
bound
cmp
mov
fdivrp
add
pop
pop
push
push
mov
int3
push
pop
imul
mov
test
clc
rolb
pop
test
add
cmp
movsb
add
nop
dec
or
sbb
adcb
add
sbb
xor
add
add
fidivrs
imul
hlt
lea
xor
xchg
popa
cmpsb
jg
or
je
jle
mov
pop
pop
lcall
pop
decl
dec
movsl
imul
loopne
data16
and
js
push
ffree
test
mov
adc
inc
insb
xor
out
fsubs
jle
pop
or
inc
and
clc
jl
loope
sbb
cltd
inc
or
mov
sub
pop
xor
push
sar
dec
ret
sbb
and
xchg
lods
in
rolb
cmp
dec
xor
mov
fisttps
dec
push
fstps
fbstp
ja
push
push
push
add
mov
cmp
loope
lea
mov
cmp
out
dec
sahf
jbe
mov
mov
push
cmp
jb
mov
into
mov
movsl
cmp
rdmsr
cmp
xor
dec
inc
pop
rcr
xor
inc
sbb
imul
movsl
dec
and
add
lock
push
dec
push
push
push
jge
xchg
loopne
mov
adc
mov
mov
jb
or
jo
dec
or
mov
cs
nop
cmp
and
decb
xlat
and
sub
pop
xor
push
ret
jne
mov
mov
pop
mov
or
jae
imul
lock
aaa
arpl
and
jecxz
pop
cmpsl
xchg
and
leave
add
mov
cmp
dec
dec
mov
sub
pushl
sbb
dec
sbb
and
aas
sbb
inc
mov
xorl
jne
mov
xor
cmp
fs
nop
fsts
pop
lret
dec
mov
cld
mov
enter
adc
outsb
adc
cmp
leave
inc
test
inc
push
pushf
mov
sub
jno
mov
jle
mov
adc
add
popf
lcall
iret
icebp
push
cmp
push
push
ljmp
mov
jne
lods
bnd
in
hlt
and
jmp
jp
mov
sub
bound
dec
push
and
mov
clc
into
xor
push
lcall
adc
fbstp
inc
mov
inc
pop
mov
xor
dec
dec
sbb
sbb
roll
cmc
push
or
dec
cld
inc
out
add
push
fiaddl
or
push
mov
les
pop
out
or
nop
sbb
or
adc
cmc
lods
jbe
add
scas
and
lods
ret
mov
sbb
push
sbb
sbb
into
push
jg
fdivl
jo
inc
add
aaa
lea
fcomi
out
add
div
cmp
loopne
push
sbb
pop
jb
or
sbb
jae
fdivl
dec
and
sbb
and
dec
pop
xor
xor
add
cmp
add
push
pusha
and
mov
and
inc
jae
loop
and
minps
mov
adc
shlb
int3
or
jle
push
lock
xchg
inc
in
sbbb
sbb
push
mov
les
mov
push
pop
and
mov
adc
or
inc
push
enter
inc
xchg
imul
adc
adc
add
mov
mov
xor
outsl
sbb
dec
jge
ficoms
andb
fdivr
outsb
dec
jmp
std
lahf
pushl
adcl
push
xchg
push
ds
adc
push
in
adc
inc
andl
mov
or
mov
add
mov
es
mov
es
mov
loopne
inc
js
push
or
pop
rcrb
pop
push
loope
test
mov
fists
jbe
xchg
or
es
int3
push
xor
cmpsb
mov
inc
sub
rorb
rcrb
jg
xor
mov
xor
insb
add
inc
dec
jne
push
sub
lock
lods
inc
aas
xor
add
data16
sub
js
or
lea
mov
call
movsb
daa
mov
adc
pop
xor
jecxz
rolb
add
cmpl
shll
jge
jmp
movsl
cmp
jl
or
jmp
test
int3
mov
sub
je
pop
add
cmp
jmp
mov
aaa
enter
mov
sub
mov
out
loopne
xor
jl
rorb
movsb
pop
lcall
mov
xchg
push
xchg
out
inc
push
sbb
cli
jns
dec
xor
adc
add
adc
cmp
in
or
fistps
sbb
xchg
adc
mov
sub
push
pop
add
ja
rorb
ss
mov
cli
scas
and
hlt
fidivrs
mov
in
push
mov
mov
fistpll
insb
jne
jp
mov
adc
and
pop
mov
or
pop
xchg
fwait
mov
add
cmp
insl
int3
shlb
cmpsl
cmp
lcall
enter
loope
rcrb
les
sbb
pop
std
pushf
xor
pop
dec
mov
test
adc
xchg
out
movsb
in
dec
pop
enter
leave
orl
and
add
add
mov
cmpsb
sub
cmp
push
dec
lahf
cs
add
or
xchg
push
leave
enter
cmp
xchg
pop
pushf
pushf
push
sub
fmulp
call
insl
and
add
inc
dec
outsl
xchg
add
xchg
call
sbb
xchg
mov
shlb
decl
fs
fimuls
cld
andb
xchg
and
data16
loopne
aas
test
xchg
lret
mov
shrl
sub
mov
push
hlt
data16
mov
or
xchg
addr16
lods
or
cltd
xchg
in
lods
rcrb
add
repnz
jle
call
call
in
or
pop
leave
add
mov
jb
pop
add
dec
shl
xchg
cwtl
add
dec
push
nop
or
in
cmp
les
push
test
mov
mov
mov
enter
cmp
je
xchg
adc
or
shlb
mov
and
repz
add
mov
dec
test
out
mov
ss
shlb
or
sbb
jne
cmp
push
or
pop
dec
or
data16
add
sahf
lret
mov
xlat
dec
loope
add
clc
xchg
lock
xor
jmp
outsl
jne
sbb
je
rcll
sub
xor
xor
lret
or
cmpsl
mov
or
and
adc
or
test
insl
push
lods
rorl
pop
inc
iret
das
mov
and
mov
or
in
les
mov
sbb
sahf
pop
mov
pop
shr
lds
or
jg
jecxz
ret
mov
cmp
jne
xor
outsl
aaa
push
cmp
and
cmp
inc
insl
push
cmp
sub
push
jb
rolb
push
outsb
fdivl
sbb
add
test
loopne
xchg
dec
add
out
add
add
scas
movsb
mov
mov
push
call
jmp
add
adc
loopne
add
loop
imul
push
call
insl
push
sub
add
sub
add
jne
mov
mov
or
call
push
adc
or
nop
lods
add
dec
je
test
adc
or
loopne
jmp
flds
mov
in
mov
lret
int3
and
not
and
cmp
jne
orb
push
sbb
adc
sub
test
nop
pop
inc
repnz
cli
sti
cld
std
adc
enter
ret
xor
pop
dec
push
dec
in
push
dec
adc
cmpsb
sub
jg
subb
fstps
add
in
sarl
sub
sbb
dec
mov
jle
movsb
insl
ljmp
dec
je
movb
jne
xchg
js
fmul
or
mov
push
pop
fsub
push
fldl
or
int
in
call
sub
sub
mov
aad
cwtl
imul
in
les
mov
push
leave
pop
jmp
jo
mov
rorl
mov
jb
lods
repnz
mov
mov
sub
je
dec
je
add
and
sbb
gs
or
sti
fnstenv
in
mov
xchg
insl
ljmp
mov
iret
mov
mov
fnstcw
xor
sub
sbb
fwait
dec
xorl
cltd
mov
inc
test
push
ficoms
lret
xchg
adc
scas
test
jl
push
je
in
cmp
push
adc
xchg
rcr
fstl
push
rcll
or
push
xchg
aaa
adc
jo
jne
das
and
inc
lock
pop
adc
sbb
and
sub
ss
lret
mov
mov
out
jns
push
pusha
push
imul
fwait
mov
dec
inc
sbb
cmp
aas
arpl
pop
sub
test
or
push
mov
mov
test
imul
in
jle
push
mov
sbb
and
inc
xchg
dec
in
or
jecxz
mov
jb
push
xchg
jmp
inc
faddl
mov
jle
or
popa
mov
mov
aas
test
fmull
iret
mov
insb
or
cmp
fcmovu
add
jne
push
push
adcl
inc
jle
enter
out
add
inc
arpl
scas
cmovge
mov
mov
mov
call
in
xchg
jg
xchg
pop
mov
lods
std
xchg
sub
inc
or
jecxz
jecxz
jne
or
mov
clc
sub
pop
mov
sar
add
fcoml
dec
movsl
sti
int
testb
jne
dec
sbb
cli
fldt
jecxz
sar
lea
testb
add
nop
push
addr16
cmp
xchg
mov
pop
inc
mov
mov
sub
ds
mov
pop
movsb
inc
or
and
jns
dec
jl
mov
dec
xchg
icebp
popf
jp
ja
movsbl
xchg
popa
psrlw
push
daa
pop
das
xchg
inc
xchg
std
lods
inc
cmpsb
fmuls
mov
leave
rorb
jecxz
pop
cs
cwtl
xchg
pop
repnz
xchg
out
movsbl
xchg
fldpi
xchg
push
pop
or
add
inc
lret
in
cmpl
andb
test
jle
iret
mov
cmp
inc
lahf
cmp
test
or
mov
std
jl
xor
sbb
sbb
mov
add
mov
or
inc
pop
cmp
pushl
jmp
lahf
pop
dec
cmp
inc
add
test
push
pop
and
sub
sbb
inc
jne
jl
cmpb
xor
pop
inc
bound
sub
imul
push
imul
add
jo
pop
lods
cmp
xchg
ret
movsb
stos
push
push
fwait
push
xchg
leave
jmp
fldcw
mov
lea
lret
xchg
pop
jl
jp
xor
test
add
clc
jo
jmp
pop
xchg
icebp
push
add
or
dec
adcb
inc
push
inc
cmp
jl
lods
ret
popf
in
mov
popfw
inc
ret
xchg
enter
pop
cwtl
add
lret
cmp
jne
xor
in
jno
stc
mov
rcr
jg
testl
mov
mov
push
sub
fcmovbe
jns
pop
in
sbb
daa
mov
sahf
add
rcr
xchg
xchg
adc
std
loopne
fisubl
in
mov
call
jmp
mov
jno
notb
loopne
sub
imul
fdivs
fcompl
insb
and
xchg
or
mov
or
imul
int
push
jns
in
xchg
arpl
jecxz
inc
repnz
xor
mov
sbb
lock
xor
shll
addr16
das
lock
fdivr
adc
adc
ret
rolb
lds
and
sarl
imul
rolb
shlb
xor
into
gs
mov
pop
cmp
ss
xor
je
mov
ss
push
xchg
pavgw
popf
cwtd
inc
push
mov
fdivs
xor
daa
cmp
dec
inc
mov
rcll
std
lds
sub
cmc
arpl
mov
arpl
and
mov
cmp
pop
imul
cs
cmp
fdivl
push
ds
icebp
push
push
nop
mov
iret
std
mov
mov
jb
iret
mov
out
lcall
add
movb
xor
cmpsb
mov
daa
cmp
xchg
add
xor
sbb
inc
inc
adc
sub
leave
addr16
cmp
mov
sbb
push
jb
std
lock
xor
movsl
imul
test
lahf
loopne
mov
leave
std
inc
repz
int3
jp
test
into
jp
jbe
fdivrp
or
es
out
ds
cs
add
in
cmp
sub
test
sub
movsb
das
in
jmp
dec
cwtl
fwait
cmc
and
add
sar
push
push
sub
xor
cmc
int
cmpsl
push
sub
sub
or
adc
and
cmc
loope
out
int3
cmp
pop
cmpsl
pop
sahf
sbb
stc
sbb
mov
dec
add
aas
mov
cwtl
dec
repnz
lock
dec
and
dec
inc
js
fbstp
sbb
pop
insl
mov
movsb
inc
mov
xor
cmpsl
mov
push
inc
lret
add
sub
sub
cmp
cmp
or
add
lahf
mov
std
das
push
xchg
jl
pop
jno
push
je
mov
xchg
inc
dec
std
std
loope
sbbb
sub
sahf
rolb
enter
das
nop
mov
adc
hlt
xchg
adc
nop
dec
lcall
push
jl
es
xor
movsl
testb
and
inc
xor
in
or
pop
and
dec
stos
and
ja
push
jno
nop
adc
adc
and
adc
int3
or
inc
out
cmpsb
dec
cwtl
insl
xor
sti
and
sub
inc
cwtl
test
jne
gs
mov
sub
aas
mov
mov
test
xchg
movsb
test
sbbb
inc
push
add
fcom
mov
loopne
xchg
pop
sbb
push
aaa
lahf
mov
jmp
ja
mov
inc
test
or
mov
sub
sub
add
mov
or
ljmp
mov
sub
cmp
sub
cmovs
lock
xor
movsl
pop
add
xchg
arpl
movsl
xor
aaa
inc
mov
inc
dec
mov
add
mov
cmpsl
cltd
movsb
push
cmpsl
mov
inc
bound
test
adc
and
mov
inc
inc
inc
sahf
adc
xchg
jo
inc
mov
push
dec
lods
xor
aaa
jbe
or
mov
test
mov
mov
leave
and
repz
xchg
mov
lods
pushf
inc
sahf
sbb
pushf
and
test
mov
xor
es
mov
fdivrs
fimuls
xchg
xchg
dec
in
mov
loope
xchg
xor
fwait
mov
cmpsl
sbb
leave
inc
mov
mov
aaa
add
mov
mov
lahf
andl
or
icebp
add
sbb
test
jb
pushf
nop
jl
shll
stos
mov
aaa
fisubrs
dec
stos
lea
mov
lock
mov
dec
in
imul
dec
or
sbb
xor
add
lahf
std
pushf
movsb
nop
sbb
add
and
dec
call
adc
adc
incl
cs
xchg
stos
inc
scas
mov
xchg
pushf
nop
nop
nop
cltd
add
lods
cmp
cmp
fstpl
mov
sbb
pop
je
xor
dec
xchg
jg
rorl
and
sahf
out
mov
lahf
test
shrl
adc
jns
sti
ss
inc
add
js
iret
pop
test
add
pop
rcrb
fwait
add
movsb
or
jne
gs
inc
sub
in
test
mov
push
sub
testb
cmp
mov
shl
inc
sbb
or
gs
clts
ret
sbb
repz
or
and
rorb
mov
mov
or
cmp
adc
mov
popa
push
lds
xchg
mov
nop
insl
ret
shll
inc
adc
jo
test
into
test
test
cmp
int3
dec
out
jl
dec
movb
push
or
lahf
decl
push
pop
or
mov
push
pop
daa
lret
jno
test
je
mov
xor
shrb
cmp
je
cmpsl
mov
sbb
and
pop
in
sub
jne
lea
popa
add
imul
cmp
sub
mov
sbb
scas
nop
shll
fucomip
stos
bound
sub
jl
scas
jb
sbb
cmpsl
in
add
lahf
xchg
jo
imul
cld
mov
cmp
out
mov
mov
add
xchg
add
fimuls
test
lock
push
dec
push
jl
gs
sbb
mov
cmp
in
mov
and
addr16
adc
cmp
inc
xor
sbb
lahf
add
and
sub
push
shrb
push
inc
or
daa
out
int
push
add
je
hlt
daa
clc
inc
push
ret
xor
pushl
testl
cmpsb
jmp
ss
sub
inc
jecxz
iret
test
test
cmc
les
jnp
sarb
xor
xor
fwait
and
add
sarl
fisubrl
fimuls
fmuls
push
pop
cli
testb
jbe
dec
dec
cmp
cltd
insl
jne
push
lret
call
leave
and
xor
es
add
pop
adc
bound
add
pop
iret
pop
jmp
imul
mov
or
movb
test
adc
push
or
xchg
push
adc
nop
les
mov
in
push
and
adcb
inc
imul
inc
pop
mov
sbbl
mov
jo
movsb
stc
inc
stos
xor
out
stos
mov
mov
and
cmp
add
add
add
push
lcall
dec
push
test
cmp
call
cmp
xor
xor
xorb
dec
mov
mov
test
outsl
gs
add
lods
mov
add
inc
add
je
js
imul
and
xchg
dec
jge
and
fwait
sbb
ds
sub
push
dec
cltd
cltd
pop
sub
lret
push
pop
push
push
hlt
fdivr
add
call
scas
xchg
aas
pop
fcmovb
lea
and
add
add
loope
mov
mov
add
pop
push
adc
adc
shr
loopne
mov
daa
rcrl
rcr
shr
rcr
or
jne
div
mov
fs
inc
in
imul
outsl
mul
add
jb
cmp
or
cmp
add
jecxz
cmpb
jo
inc
push
and
mov
jae
mov
sub
pop
xchg
mov
xchg
dec
js
mov
lea
dec
insl
xor
cmp
fs
pop
inc
cmp
jb
inc
inc
bound
nop
dec
lahf
dec
out
add
dec
cld
inc
cmp
roll
jmp
sbb
pop
jg
sbb
fcomps
push
fcmovnb
cld
or
push
jp
clc
or
inc
mov
ret
fwait
mov
mov
push
sti
jb
inc
jo
or
sub
adc
dec
mov
test
fs
add
dec
push
mov
sbb
push
cs
cs
sbb
or
push
and
and
adc
nop
jb
dec
add
lcall
xor
mov
push
pop
mov
andl
testb
fistpl
add
imul
imul
mov
adc
rorb
and
xor
dec
adc
push
pop
fdivs
sub
adc
sub
adc
mov
and
xchg
icebp
xchg
dec
pusha
rorb
orb
adc
rolb
or
pop
roll
data16
jge
imul
jle
sub
fstl
cmp
xor
and
add
cmp
jl
mov
inc
fs
or
pop
inc
addl
nop
pop
orl
nop
sub
cmp
lea
push
cmp
add
pop
sub
fs
rorl
pop
mov
push
sbb
push
dec
lock
insl
mov
mov
xor
sub
xchg
out
push
gs
icebp
imul
sbb
mov
jb
hlt
add
pop
ret
add
mov
add
xor
mov
adc
pop
add
or
int3
jns
pop
inc
ret
pop
shll
fs
inc
flds
clc
add
aad
inc
mov
or
pusha
pushl
push
dec
lods
out
add
push
mov
pop
xchg
and
and
sti
adc
lock
sbb
jmp
mov
ja
push
push
mov
mov
cmp
and
add
sbb
stc
jo
xor
cmp
les
push
in
adcb
fldl
add
je
mov
mov
aam
inc
pusha
jne,pn
sbb
jge
sbb
inc
mov
xchg
adc
and
loope
fcomps
mov
mov
pop
mov
outsb
adc
mov
lahf
mov
sbb
push
push
xor
mov
jo
inc
add
adc
mov
xor
push
adc
fs
fwait
popa
adc
pop
jb
repnz
add
push
or
mov
pop
cmp
jmp
jg
fcmovnb
and
pop
inc
out
xchg
addl
call
push
je
xchg
push
jbe
sbb
ret
test
or
pop
mov
adc
ljmp
cmpsb
adc
pusha
cld
lret
je
inc
push
jo
scas
out
jmp
fsubs
shl
push
adc
mov
out
add
xor
jg
js
stc
xor
add
xor
lahf
push
jbe
push
and
xchg
fstpl
subl
shlb
push
lods
fs
adc
inc
mov
enter
je
push
sahf
cmpsl
cmp
adc
sarb
xchg
pop
addr16
outsb
or
push
xchg
push
inc
cld
fists
repnz
mov
sbb
js
sahf
xchg
fimuls
movsb
push
mov
pop
sarb
shlb
adcb
mov
hlt
cmp
hlt
cmp
pop
mov
cmp
iret
out
jmp
rolb
gs
and
dec
cld
or
ja
inc
repz
scas
adc
pop
or
ja
dec
pop
inc
push
addb
and
shlb
push
out
add
jmp
push
pop
inc
jb
cmc
mov
rcrb
sub
andb
sbb
mov
dec
outsl
mov
cmp
jbe
push
lahf
arpl
jle
bound
jge
push
xchg
out
add
inc
mov
mov
mov
adcl
popa
mov
clc
ds
pop
push
mov
dec
pop
shrb
test
ss
sti
movsb
negl
cmc
and
cmpsl
in
daa
enter
xchg
xchg
dec
rorb
adc
or
stc
movsb
push
dec
sub
pop
push
out
mov
lcall
add
and
in
fdivs
lret
pop
repz
mov
inc
and
cmp
push
rorb
pop
imul
mov
push
fs
jo
mov
fs
xor
inc
or
inc
je
sub
mov
rcr
fwait
push
inc
xchg
inc
push
test
sti
or
xchg
add
lret
es
adc
fildll
mov
mov
jecxz
ror
rcrl
dec
inc
inc
inc
popa
xor
adc
add
lods
push
shl
mov
inc
inc
inc
pop
je
pop
es
lahf
pop
int
or
shlb
int3
repz
or
lcall
shr
add
je
std
stc
add
cwtl
icebp
xchg
push
push
mov
or
test
cmp
mov
mov
mov
mull
xor
inc
pop
mov
mov
add
adc
jle
add
and
pop
pop
test
sbbb
insl
cmp
cld
jns
pop
inc
mov
mov
mov
push
scas
mov
addl
bound
xor
cmpsl
add
out
stos
movsb
xchg
ds
pushf
aas
jae
fiaddl
cmp
pop
inc
dec
shl
xchg
push
and
jl
int3
mov
jo
sub
frstor
testb
push
push
orl
or
dec
sub
inc
fsts
jo
jle
mov
shrl
add
push
jl
and
mov
cmp
jecxz
xor
rolb
jne
mov
sahf
cmp
imul
inc
or
jne
repnz
add
push
sar
adc
xchg
and
punpckhbw
das
mov
mov
inc
xor
nop
dec
mov
aam
aas
and
adc
add
sbb
std
lea
ret
jmp
testb
push
addb
xchg
mov
xor
and
aam
or
pop
mov
cmp
mov
mov
mov
xor
sbb
or
lea
pushf
movsl
jbe
cmp
pop
push
dec
aam
fadds
addl
or
fbstp
add
or
or
or
or
or
cmp
sbb
fsubr
inc
mov
in
js
into
xchg
xor
insb
mov
push
xchg
inc
jl
mov
add
fs
jl
pop
or
dec
pop
pop
sbb
push
sbb
outsb
lock
push
sbb
and
mov
dec
andb
hlt
adc
push
cmp
daa
adc
popa
mov
adc
sar
sarb
jg
popf
and
dec
sub
adc
mov
imulb
sbb
xor
add
dec
pop
or
push
scas
mov
clc
add
or
pop
shl
add
or
stos
fs
mov
and
mov
idivb
or
inc
adcl
bound
loopne
xchg
pushf
repz
or
addl
int
aaa
dec
cmpsb
jmp
xchg
adc
jecxz
negb
ret
push
adc
and
cmc
push
in
clc
and
or
aas
push
aaa
stos
mov
ljmp
jne
add
push
popf
or
mov
movl
add
add
mov
jmp
xchg
hlt
je
scas
pop
notb
stos
nop
inc
lods
push
adc
add
dec
in
test
mov
sbb
xchg
or
dec
jl
shlb
jnp
and
dec
push
xor
ficoml
push
rcrb
dec
lock
sarl
mov
dec
mov
or
inc
mov
lock
not
push
shll
xchg
inc
mov
or
enter
les
aaa
cmp
enter
pop
xchg
dec
add
ret
sub
aas
test
add
or
test
or
mov
jnp
sbb
jg
adc
and
inc
push
aad
rorb
lea
and
xchg
jne
cmovno
adc
cltd
into
inc
loopne
lods
cli
sub
orb
cmp
roll
das
mov
cmp
je
sub
and
xchg
jo
push
inc
add
shr
out
push
push
cmpsb
jge
hlt
rep
ss
neg
sub
and
test
dec
iret
push
push
in
shrl
loopne
fimuls
dec
mov
dec
inc
adc
dec
pcmpgtd
mov
int
mov
mov
push
not
inc
stos
add
in
mov
imul
mov
popa
push
mov
popa
imul
cwtl
pop
pop
dec
sbb
mov
mov
mov
xor
add
ret
jl
add
jle
mov
add
push
push
jae
pop
daa
int
inc
and
dec
pop
lods
xchg
jmp
mov
mov
movl
inc
adc
outsb
in
cmpsl
jge
lock
hlt
clc
inc
dec
adc
cld
sub
and
cmp
mov
adc
or
lea
mov
adc
mov
push
add
push
ret
rorb
xchg
sub
jne
sbb
adc
lea
outsl
push
push
dec
adc
push
and
xor
push
pop
iret
out
outsl
inc
or
jbe
jle
sahf
rclb
outsl
ja
mov
jecxz
xchg
sbb
cmp
or
test
ret
sbb
enter
or
cmp
loope
or
mov
mov
and
call
das
icebp
je
sub
mov
cltd
mov
dec
ja
cs
sub
rcr
fwait
inc
dec
add
sub
lock
in
inc
dec
inc
pop
lock
rep
add
xchg
add
adc
scas
loop
mov
and
or
inc
fstl
aaa
adc
mov
stc
add
pop
add
mov
inc
or
les
push
sub
je
xor
jno
sbb
sbb
mov
sti
or
add
inc
mov
xchg
imul
es
sub
call
ds
add
ret
je
mov
add
push
jno
xlat
je
and
lcall
add
push
add
add
movsl
xor
sbb
push
and
pop
dec
mov
and
cld
adc
scas
mov
decl
dec
sbb
mov
test
les
out
inc
push
je
xor
mov
pop
push
loope
push
faddl
mov
inc
jbe
in
inc
pop
mov
ret
mov
xor
das
xor
ret
ss
jmp
mov
and
push
xchg
mov
loopne
xchg
testl
imul
fidivl
jne
xchg
aam
sarb
dec
mov
mov
sub
sub
mov
outsl
fcomp
and
mov
inc
xor
jle
push
rclb
aam
dec
mov
and
fnstenv
decl
adc
outsl
sub
jbe
inc
ljmp
jae
adc
cmpsb
je
push
inc
add
or
and
mov
test
movsl
test
sahf
inc
mov
lahf
mov
lcall
aam
push
popa
cmpsb
movsb
inc
adc
jge
movsb
loope
or
inc
or
pop
imul
fsubl
cmp
inc
cld
scas
adc
xor
cmp
inc
jmp
fs
mov
pop
sub
cmp
scas
push
punpcklwd
add
push
add
push
add
add
adc
out
movsb
in
rcr
fsubs
popa
jl
insl
and
adc
mov
dec
sub
mov
inc
xor
fcompl
test
inc
gs
cmp
xor
xor
adc
jne
and
fdivrs
ja
rolb
mov
das
sahf
or
enter
sbb
or
add
mov
in
add
and
in
or
add
in
int3
add
adc
adc
sub
mov
adc
lsl
cmp
xchg
jmp
sbb
push
inc
nop
lret
sbb
fbld
push
jbe
dec
sub
sbb
adc
or
fimull
sub
sub
loopne
mov
iret
into
inc
or
cli
mov
inc
or
pop
and
push
xorl
testb
scas
jne
mov
loop
jl
ret
repz
mov
sbb
xor
adc
repnz
mov
shll
imul
pop
mov
dec
sbb
xchg
dec
add
inc
cmp
sbb
jle
jne
lea
sbb
ficoms
lock
insl
cld
jl
xchg
int
ret
jl
and
enter
jp
into
adc
ss
ret
cmc
jne
dec
sti
pop
add
add
lea
xchg
dec
jae
and
adc
mov
pusha
fs
xchg
ret
xchg
add
or
prefetch
mov
pop
inc
mov
shrb
into
jl
mov
shll
add
cld
sbb
loop
xor
subb
mov
ljmp
xor
push
xchg
inc
xor
ret
aam
adc
xchg
sub
addr16
xor
ret
ret
sahf
js
sub
mov
mov
or
cmp
add
cs
sarl
lea
or
xchg
mov
and
or
mov
fcompl
inc
jmp
popl
lock
out
add
dec
mov
xor
pop
mov
adc
push
jns
js
sbb
sub
test
dec
je
pusha
add
mov
lods
sbb
pushl
add
cmp
imul
xchg
cmpsl
loop,pn
mov
clc
sbb
sbb
add
rcrl
ljmp
push
inc
cmp
xor
out
or
dec
sbb
sbb
push
inc
xor
sbb
test
push
fcmovbe
push
or
adc
cld
push
adcl
mov
aaa
push
or
daa
daa
daa
or
adc
pushf
fsubrl
ss
pushf
pushf
pushf
pushf
sub
xor
sbb
pushf
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
add
dec
pusha
fs
dec
jo
js
imul
adc
fs
dec
mov
xchg
cwtl
pushf
dec
es
mov
push
jecxz
sub
sub
popa
and
add
or
filds
or
xor
rcr
lds
dec
adc
or
dec
adc
sub
sbb
pop
inc
lcall
mov
pusha
add
mov
scas
fcompl
pop
adc
mov
dec
adc
cmp
xchg
test
cmp
lds
sbb
mov
dec
jne
lcall
or
and
les
mov
cmp
pop
push
push
daa
cli
fsubrp
or
add
add
push
xchg
lock
xchg
pushf
call
aam
rclb
push
incb
push
lods
shrl
fsubl
sbb
sub
pushf
dec
cwtl
xchg
mov
sarl
shlb
loopne
daa
js
inc
shlb
add
pop
pop
sahf
mov
and
inc
or
mov
xor
ss
inc
xchg
ret
loop
cmp
repnz
lea
je
sub
shrb
fdivr
rorb
push
xor
ret
lret
sub
fcomp
lock
mov
sbb
cmp
fmuls
in
pop
dec
push
add
fwait
aam
pop
int3
adcl
rcrl
inc
cwtl
or
pusha
sbb
rcrb
sbb
sub
dec
pop
je
push
pushf
negb
lret
sub
lea
xchg
and
loopne
pusha
stos
int
jge
or
fs
push
or
enter
stos
mov
sbb
mov
popa
jns
nop
test
jnp
xchg
xchg
int3
lret
mov
lret
lret
push
cmp
or
pop
mov
pop
jne
and
ret
mov
mov
sub
cmp
add
xor
ret
mov
adc
and
pop
shr
dec
jmp
pushaw
cmpsb
dec
or
subb
adc
jnp
mov
iret
pop
add
cmp
pop
je
dec
mov
lcall
scas
dec
xor
cmc
sub
dec
loopne
cmp
outsb
mov
cmc
js
pop
cmpl
hlt
adc
mov
add
mov
jb
push
mov
pusha
mov
jmp
pop
add
sbb
and
stos
enter
push
push
lods
and
addl
jle
mov
or
sbb
fmuls
add
xchg
push
add
sti
mov
pushf
pop
mov
sbb
mov
and
ds
int
mov
lea
mov
in
ror
lds
inc
pop
in
push
mov
xchg
jo
in
cmp
push
sar
or
inc
pop
fld
gs
sbb
xchg
and
xor
lea
mov
push
lea
loope
addl
out
out
dec
sti
sbb
pop
and
fcmovnbe
sti
mov
or
addl
fdivs
jne
je
ss
iret
lods
xchg
dec
lea
adc
rclb
or
icebp
pop
popf
add
cld
add
xor
pop
inc
sbb
imull
mov
popa
mov
test
sahf
push
inc
pushl
jmp
lea
in
cmp
pusha
lods
or
fisttpll
imul
rorb
loope
pop
addl
pop
or
cmp
sbb
mov
test
jmp
rcrb
or
lods
mov
or
out
dec
ja
mov
mov
mov
push
test
jmp
xlat
sar
dec
add
fstps
out
xor
jo
lret
add
mov
jo
rolb
cs
repnz
pushf
add
adc
sbb
icebp
cmpsl
jo
inc
lea
push
loopne
add
fmuls
orb
pop
cmp
aas
sarb
mov
test
jnp
inc
test
fs
jmp
sarl
cmp
test
mov
cmpl
imul
push
test
shlb
mov
push
add
pop
mov
sub
add
cmp
jne
mov
shlb
aam
jmp
sbb
out
inc
dec
out
sub
jmp
inc
cmc
mov
dec
or
cmpsl
lods
iret
test
add
je
es
sub
aad
cmp
sbb
fisttps
xor
lahf
pop
addb
aam
push
mov
inc
mov
in
js
sbb
dec
add
xchg
sbbb
sbb
jecxz
loop
lock
cmp
jmp
xchg
test
fucomp
mov
andl
fidivrs
push
cmp
mov
push
adc
or
clc
movb
inc
mov
adc
cmpl
fmuls
push
pop
sub
and
je
push
sbb
inc
add
mov
daa
jmp
cmp
sbb
lcall
pop
movsl
dec
add
sbbb
push
cwtl
sub
rclb
inc
lods
push
subl
out
pop
push
or
inc
inc
sbb
repnz
mov
and
mov
or
xor
xchg
add
push
sarl
dec
mov
lcall
mov
add
jbe
add
xchg
push
xchg
sub
inc
out
or
pop
icebp
inc
sarb
into
into
sub
jmp
scas
int
enter
fs
or
push
cltd
std
jno
loopne
add
xchg
sub
add
xor
add
outsl
jo
lret
jmp
or
and
sbbb
or
xchg
imull
aas
lea
loope
out
xorb
cltd
cmpsb
les
in
inc
ja
fadds
xchg
cmpsb
xchg
cmp
ljmp
cmp
adc
mov
fidivrs
xor
inc
cli
mov
les
inc
cmpb
sti
and
sbb
test
push
lahf
dec
andl
shll
inc
test
mov
inc
enter
cwtl
leave
ret
pop
je
aaa
push
scas
mov
cltd
mov
cmpsl
or
sub
and
sahf
pop
pop
js
mov
inc
cmp
mov
dec
sbb
push
jns
inc
scas
add
push
and
xor
jmp
sbb
xor
add
adc
jo
dec
jmp
unpckhps
icebp
and
sbb
or
je
negl
mov
xchg
adc
jns
mov
sub
orb
xor
ss
push
push
pop
pop
add
pop
adcb
add
sub
adc
mov
xchg
cwtl
mov
push
mov
jmp
mov
bound
and
rol
add
add
ljmp
jns
nop
push
mov
out
mov
ficoml
cli
sbb
mov
ja
push
mov
xor
orl
mov
add
or
xchg
push
in
in
mov
sub
mov
test
cli
push
gs
arpl
cmp
orl
jle
or
loope
lock
push
sub
popa
xchg
lods
les
sbb
dec
lret
stos
push
push
gs
aad
mov
jle
cmp
lods
jg
out
insl
loopne
rclb
xchg
divb
adc
jge
addr16
fadd
dec
pop
shrb
aam
or
les
movsl
add
push
push
mov
imul
pop
fldenv
pop
adcb
push
pop
dec
cmp
lods
pop
dec
pop
pop
insb
mov
inc
and
jg
sbb
add
xchg
add
clc
je
xor
jecxz
addb
jmp
or
xor
outsb
adc
dec
cmp
xor
inc
dec
in
aam
push
push
push
and
jo
adc
je
inc
cmp
shlb
sub
sti
mov
js
pop
sbb
cmp
les
add
push
popa
add
cltd
lock
jmp
inc
jo,pt
and
dec
cmp
push
adc
icebp
adc
push
mov
cmp
popl
adc
and
dec
cmp
frstor
mov
or
inc
jmp
icebp
xor
jecxz
movsb
inc
popa
jge
mov
add
jle
mov
dec
jl
and
ret
push
jmp
pop
pop
push
icebp
pop
adc
cmp
and
pop
add
mov
sahf
sbbb
push
shlb
nop
lods
pop
fiaddl
jnp
out
js
push
cmp
sub
arpl
out
cmp
sbb
push
cmp
mov
add
sbb
pusha
sub
pop
cmp
adc
dec
and
sbb
xchg
adc
and
jo
mov
xor
cmp
cmp
in
ljmp
dec
xor
mov
mov
das
push
mov
push
inc
ja
inc
dec
cmp
in
lock
pop
sbb
pop
adc
sub
sub
inc
inc
arpl
sbb
push
xchg
sbb
xor
mov
dec
push
adc
jne
orl
and
dec
scas
xor
mov
sbb
adc
dec
sbb
xchg
int3
cmp
ret
mov
fidivrs
repnz
das
adc
mov
rcrb
inc
jecxz
add
dec
into
jl
or
or
call
mov
imul
sub
or
pop
mov
popf
inc
push
cmpsl
popf
mov
mov
and
jne
dec
sbb
or
data16
cltd
push
inc
xchg
xor
sub
in
sub
pop
das
cmp
adc
pcmpgtb
add
inc
popf
test
pop
pop
jecxz
push
mov
ror
push
push
mov
pushf
leave
std
jmp
fwait
sub
rcrl
sbb
or
push
imul
inc
push
incl
cmc
nop
cmp
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
mov
cmp
in
mov
mov
push
data16
pop
divl
mov
je
push
dec
and
adc
inc
rorb
pop
shlb
add
inc
mov
or
or
rcl
ljmp
adc
xor
cs
repz
xchg
test
and
sahf
popa
xchg
xchg
add
or
adcl
sub
in
divb
shl
not
xor
loope
xor
and
pop
mov
add
cltd
in
shr
and
and
add
test
arpl
mov
test
adc
cmpsb
pop
jns
test
add
mov
test
mov
push
lret
sbb
or
mov
sub
inc
jmp
jp
incb
jmp
sbb
std
or
jmp
inc
and
mov
and
mov
jecxz
jge
subb
add
or
mov
sub
or
push
dec
pop
xor
sub
mov
sbb
pusha
and
push
out
mov
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
xor
inc
jecxz
push
jns
adc
fnstsw
push
cmpsb
cmp
pusha
insl
adc
cmpsl
jae
push
mov
adc
adc
push
jns
xchg
adc
sti
add
jg
sahf
testl
fisttps
push
xor
sbb
jne
je
dec
jne
orl
mov
mov
adc
testl
cmp
and
adc
mov
xchg
pop
xorb
sbb
jmp
nop
fwait
cmp
inc
add
adc
fimuls
flds
insb
or
pop
push
xor
stos
sub
fiadds
out
adc
lods
mov
ret
inc
push
and
adc
pop
jbe,pt
insl
pop
lods
pop
sub
fsubp
leave
adcb
leave
add
sbb
clc
xor
lret
ficoms
ret
shll
aam
xchg
push
adc
and
aaa
sbb
out
adc
push
repnz
insb
sbb
lods
fcom
inc
jl
add
sub
dec
push
in
lods
sub
jmp
sub
push
out
or
psubusw
sbb
test
int3
in
mov
div
add
xor
sbb
pop
dec
test
les
shlb
addb
cmp
stos
subb
fstpl
mov
xor
jbe
or
sar
fmull
faddl
inc
adc
mov
dec
add
loop
add
inc
enter
add
leave
sbb
test
std
mov
insl
in
sbb
sub
fdivrs
jbe
lock
into
push
divl
out
mov
push
push
inc
mov
sub
mov
sbb
pop
in
aam
xor
adc
mov
decb
push
and
mov
push
bound
out
jle
push
adc
mov
push
add
fwait
and
add
add
das
adc
test
fsubrs
sbb
pop
or
mov
mov
lods
test
push
pop
mov
ret
loopne
add
and
and
or
hlt
dec
loop
add
sbb
sbb
loopne
pop
es
xor
imul
or
sbb
add
add
adc
push
push
and
inc
mov
sub
hlt
rcrb
mov
out
loop
jl
cmp
lds
hlt
ret
fwait
jno
mov
imul
cmp
daa
jnp
add
or
cmpsl
mov
pusha
jmp
and
imul
pop
imulb
das
loopne
mov
fsubrl
push
orl
add
add
and
cmp
and
adc
mov
or
sar
xor
jno
adc
iret
into
int3
xlat
es
loopne
popa
jecxz
ja
xchg
mov
fidivrs
adc
mov
fwait
inc
or
pop
jbe
les
mov
ss
jno
mov
or
int3
test
cld
pop
clc
push
outsb
adc
data16
call
add
in
push
fcmovbe
orl
or
sahf
push
sar
xchg
rol
lock
or
push
repnz
gs
inc
push
les
mov
sub
push
sbb
adc
inc
push
pop
fadds
into
in
adc
or
mov
cli
xchg
std
push
addl
cwtl
out
mov
frstor
dec
js
ret
imul
pop
aad
dec
pop
or
mov
movsb
adc
sbb
fisubl
push
or
decb
outsl
lcall
push
out
mov
dec
insb
and
adc
inc
jo
pop
negb
or
push
add
xor
fsubrs
sub
ljmp
mov
ljmp
mov
fisttpll
push
sbb
test
sbb
loop
inc
flds
and
in
sub
push
or
insl
or
lock
adc
fldt
push
in
fcmovne
fwait
sahf
adc
int3
and
sbb
and
xchg
and
jle
call
adc
fldpi
xor
aaa
dec
dec
mov
fsin
cli
mov
je
mov
xor
test
clc
call
push
repnz
and
and
xchg
jo
test
and
pop
mov
clc
inc
outsl
push
repz
out
add
push
mov
lods
cmpl
popa
mov
add
or
or
pusha
sub
mov
pop
movsl
hlt
shlb
rol
xor
or
lock
insl
push
mov
fadd
data16
cld
and
mov
jnp
jae,pt
or
inc
and
fwait
hlt
mov
in
adc
add
enter
adc
fsubrl
push
jle
pop
gs
pop
movsb
pop
or
mov
mov
inc
push
jo
pop
inc
psubq
xchg
add
adc
adc
ja
adc
sub
dec
loop
sti
in
adc
enter
or
add
loope
dec
test
add
mov
mov
ss
adc
add
aas
xor
cmp
inc
ds
inc
daa
cmp
and
dec
test
xchg
leave
push
sbb
push
sti
dec
fwait
in
movsb
push
dec
or
pop
es
fsubrp
add
mov
test
push
or
scas
test
shlb
jmp
xor
sar
daa
adc
sbb
sarb
cmp
scas
pop
pop
loope
cwtl
pop
test
jne
push
add
sub
cwtl
or
stos
stos
repnz
pop
xchg
inc
ljmp
fs
push
xor
sbb
dec
push
mov
cltd
and
add
fs
xchg
test
loopne
mov
dec
jns
dec
jge
mov
xchg
loopne
lea
pop
lock
inc
shl
jb
fsubs
les
inc
inc
aam
loop
rolb
adcl
pop
es
dec
cltd
insb
pop
cmpl
and
into
loopne
push
int
loop
into
divb
dec
mov
add
or
jb
dec
shll
cmp
sbb
sub
jno
inc
std
adc
jb
incb
jae
in
xchg
test
dec
mov
adc
pop
mov
push
or
push
xchg
test
lock
push
addb
roll
mov
sbb
or
dec
stos
or
mov
inc
in
xor
imul
pop
cmpsb
push
aam
xor
sub
rorl
add
lcall
dec
pop
jb
out
and
push
push
ljmp
push
cld
not
mov
popf
je
mov
rcll
and
push
ds
push
or
jae
loopne
jne
shl
push
push
mov
jl
mov
shl
mov
sub
cmp
jo
sarb
je
mov
mov
inc
jmp
mov
in
movsb
or
mov
hlt
test
and
inc
and
inc
mov
xchg
lds
cmp
mov
cli
pcmpgtb
aad
jge
cmp
pop
sub
bound
pop
xor
pop
mov
or
dec
adc
dec
lds
inc
lock
push
push
adc
inc
mov
jecxz
cmp
leave
fs
mov
xchg
cmp
fmull
cmp
imul
mov
andb
push
add
fdivrl
gs
xchg
lret
stos
mov
add
loop
lea
jecxz
mov
sub
loop
pop
cld
sbb
jge
and
rcl
es
cmovbe
shl
nop
add
pop
movsb
push
add
rorb
xchg
cwtl
xor
sub
orb
jne
rcrb
pop
pop
cmp
push
les
or
leave
test
or
xchg
mov
ja
test
push
pusha
fs
in
add
fstpt
sbb
or
pop
insb
repz
insb
fs
adc
jl
push
adc
lds
inc
mov
push
jnp
pop
inc
xor
push
adc
mov
cmpsb
imul
movsb
adc
cwtl
jne
rolb
cli
xlat
sub
lods
mov
or
add
push
jne
inc
adc
xor
jmp
xor
or
xchg
add
dec
fcmove
sub
cmp
add
push
push
dec
jmp
fs
mov
sub
mov
mov
sarl
pop
jmp
push
call
sbb
fisttpll
ja
scas
pop
incl
jmp
andl
fisubs
push
jmp
cmpsl
mov
adc
lods
or
add
add
je
mov
jle
cmp
jle
jle
cmp
push
xor
pop
adc
push
jmp
dec
push
mov
adc
fcoml
xchg
xchg
or
fldcw
pushf
push
cmp
imulb
push
jmp
inc
jno
mov
xor
ret
add
mov
pop
jge
cmp
pop
cmp
test
jno
testl
es
ds
clc
dec
jae
imul
sbb
pop
push
cmp
jmp
and
and
call
ds
movsl
popa
fsubp
pop
push
out
repnz
sub
gs
lock
orl
pop
or
scas
mov
shl
stc
sub
cmp
mov
stos
xor
push
mov
jmp
sub
xchg
scas
push
dec
out
shr
pushl
mov
jge
lea
pusha
aaa
mov
mov
decl
mov
sub
adc
add
inc
xor
fadd
testl
fisubrs
hlt
inc
repnz
dec
dec
sub
inc
inc
jle
jmp
ds
adc
imul
aaa
push
fsubrs
mov
stc
push
adc
jg
mov
std
add
jecxz
add
pushf
jmp
push
bound
movsl
cwtl
push
icebp
mov
xlat
shlb
jg
mov
dec
pop
pop
cmp
hlt
in
mov
sbb
cld
xor
int
pop
dec
pusha
push
cwtl
jge
neg
add
mov
orb
movsb
sub
cmp
push
mov
mov
cli
ljmp
cmp
jbe
mov
jle
push
adc
dec
push
xor
xor
push
adc
inc
loop
rcl
dec
test
pop
adc
test
inc
mov
inc
mov
outsb
aad
sub
inc
cmpl
jb
mov
dec
or
and
cmpb
and
mov
enter
mov
mov
mov
push
xor
and
and
and
adc
gs
into
nop
rolb
andl
adc
sbb
inc
ja
out
xchg
mov
or
xor
pop
movb
testl
jne
enter
inc
and
jne
test
mov
jne
inc
or
cmp
and
xor
insl
add
jmp
xchg
jne
mov
jp
xchg
subb
add
sbb
pop
mov
add
rcrl
movsb
push
pop
bound
scas
sbb
cld
cmp
cmp
cmpsb
icebp
dec
lock
test
jmp
push
sbbb
insl
lcall
sub
sub
xchg
xor
cmp
ret
mov
sbb
or
or
shll
sar
mov
testb
shr
pop
rcrl
or
push
in
mov
das
jmp
bound
or
adc
inc
mov
lret
mov
add
notb
ret
je
adc
mov
fcom
insl
fadd
loopne
shr
or
mov
sahf
push
adc
insb
mov
data16
mov
push
lds
and
pushf
mov
mov
in
jge
cmp
add
sbb
rcll
ficompl
sar
pop
cld
shll
in
fiadds
push
pop
int
adc
or
sbb
mov
jecxz
fidivrl
jb
or
fmull
sahf
nop
dec
ja
lea
add
cmp
or
sub
lods
mov
lret
into
jmp
scas
xlat
mov
enter
jae
jno
and
movsb
int3
xor
je
mov
cmp
int3
pop
dec
insl
int
xorb
lret
das
mov
xchg
add
negb
lret
sub
movups
jnp
add
shlb
inc
mov
scas
test
pop
inc
rclb
imulb
add
push
mov
add
sahf
addr16
iret
repz
lock
or
lods
xchg
lods
mov
rorb
and
je
or
addr16
test
pop
jne
movsb
pop
ret
inc
insb
jecxz
inc
scas
inc
mov
mov
shrb
mov
test
pop
cmp
or
dec
in
sbb
in
imul
stos
sbb
xchg
adc
inc
cs
or
ss
cmp
je
or
call
cld
aas
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
adc
stos
sti
mov
inc
inc
mov
out
add
loopne
fldz
call
lret
cmpl
pop
jae
sbb
clc
popf
pusha
or
jo
lea
mov
add
call
or
jbe
lods
adc
popf
xor
shrl
jl
repz
sub
leave
inc
mov
adc
mov
add
adc
pop
fwait
sbb
popl
and
cwtl
pop
andb
test
mov
pop
inc
and
xchg
mov
imul
std
cmp
fdivs
or
dec
sub
lods
add
dec
fcoms
xchg
mov
push
inc
push
iret
ret
je
setg
sub
push
shll
xchg
push
xchg
mov
jne
movb
adc
test
cmp
mov
in
rolb
in
mov
add
pop
cmp
add
add
or
pop
lret
mov
sub
add
pop
adc
push
repnz
mov
jge
dec
add
sub
imul
or
inc
dec
jns
movb
les
sub
scas
dec
mov
jbe
idiv
xor
push
or
add
testb
lcall
jb
lea
or
or
adc
inc
aas
dec
or
into
xor
xchg
fs
aam
inc
push
sub
insb
push
xchg
inc
adc
or
jne
dec
jecxz
add
loope
mov
dec
adc
jge
ja
sub
sub
adc
lahf
adc
out
xor
inc
fcmovnb
xor
inc
addr16
push
sbb
inc
js
sbbb
xchg
mov
shl
xor
mov
leave
inc
xchg
add
add
cmp
and
jl
ljmp
aaa
pusha
sbbl
test
rclb
into
inc
cmp
jmp
pop
xchg
fldl2t
add
movb
mov
cmp
cmp
sahf
fcoml
mov
push
dec
roll
js
add
mov
cmp
enter
test
test
dec
insb
adc
and
or
decb
sub
pop
ja
out
sub
add
enter
cmpsb
jo
push
push
inc
roll
or
xchg
add
push
xor
push
push
add
btc
and
add
cld
loope
repnz
scas
mov
dec
je
push
xor
jg
dec
and
add
mov
and
sti
add
gs
je
movsb
or
dec
fwait
pusha
fwait
sub
inc
neg
sbb
jecxz
fdivr
das
jle
lock
ret
daa
xor
or
jne
pop
cmp
inc
inc
adc
sahf
add
mov
or
mov
pop
int
xor
push
xor
nop
inc
sub
sbb
sub
or
bound
mov
ja
sub
in
cmp
dec
xchg
sub
adc
pop
je
or
out
push
movswl
popa
cld
loope
les
lods
data16
lods
add
mov
mov
rcrl
add
mov
add
dec
shrd
nop
add
add
jle
cmp
imull
jge
sbb
aaa
pop
pop
add
mov
or
cmp
call
stc
inc
add
dec
jmp
ret
cs
clc
sub
fs
cmp
or
ret
jo
and
incb
rolb
push
mov
xor
push
and
aad
rol
lock
mov
mov
mov
inc
or
out
and
decb
in
pop
sbb
js
jg
pop
jl
mov
inc
jmp
cmp
adc
clc
fidivrl
rorl
iret
sbb
lahf
inc
shll
in
insb
xor
add
jbe
xlat
jg
add
mov
test
jl
jg
lods
jb
lods
cmp
dec
inc
dec
mov
mov
sbb
cmpsb
adc
nop
add
daa
rorb
add
mov
stc
mov
add
sub
mov
add
lods
or
jnp
je
int
adc
add
adc
loopne
test
or
lds
lret
mull
sub
push
inc
inc
ss
enter
push
lock
inc
sub
xchg
aam
push
cltd
test
jge
mov
jne
push
shlb
adcb
push
mov
pop
xor
xor
ficompl
out
into
mov
pusha
bound
pushf
out
add
mov
xor
enter
je
push
shlb
and
cmp
int
xchg
js
add
ficoms
dec
lods
xor
inc
test
lea
sbb
or
mov
sbb
enter
push
insl
xchg
pusha
mov
insl
cmp
cmpsb
or
cld
cld
jl
int3
adc
sub
or
mov
sbb
cmp
into
and
adc
mov
sbb
dec
je
jp
jge,pt
int
pop
jle
gs
or
pop
cmpsw
sbb
in
add
xchg
xchg
inc
popa
je
inc
je
dec
repnz
pop
add
jmp
xor
sub
pop
add
adc
rorl
in
add
cmp
jo
or
cmp
lret
fnclex
mov
add
adc
adc
call
jne
fmull
insl
push
pop
clc
fstps
or
inc
loop
in
dec
inc
pop
push
cli
push
shrl
and
ret
ret
xor
nop
pop
das
xchg
xor
jo
je
incb
sarb
or
sub
and
pop
aas
push
fldl
inc
ja
lock
adc
mov
gs
jb
sbb
icebp
cli
cmp
cmp
pop
and
and
xchg
sarl
pop
dec
pop
sub
add
hlt
int3
adc
dec
xchg
mov
sub
adc
add
pop
test
lods
dec
cld
enter
ja
push
sub
sub
pop
jno
mov
xchg
scas
inc
inc
push
nop
xor
jle
add
jns
mov
movaps
notb
lret
int
out
cmp
add
jp
push
add
mov
rorb
push
pop
inc
mov
and
loopne
adc
mov
mul
pop
dec
sbb
cmp
inc
arpl
cmpl
ret
push
or
push
ds
mov
dec
push
mov
decl
les
addb
imul
pop
pop
pop
pop
push
movsb
adc
clc
and
xor
stc
cmp
mov
mov
lret
mov
and
mov
lock
in
fcompl
dec
push
jle
cmp
insb
je
sarb
int
lock
mov
mov
jl
cmp
push
mov
jecxz,pn
icebp
jnp
pop
xor
push
pop
pop
cmp
xor
std
pop
adc
or
adc
hlt
jmp
or
jmp
sahf
jle
test
or
incl
adc
pop
add
les
iret
push
sbb
sbb
jae,pn
cmp
dec
shll
or
inc
imul
lcall
insl
mov
les
dec
or
adc
push
xlat
push
sbb
lock
or
push
in
inc
sbb
push
push
or
cmp
lea
push
or
xor
cltd
cmp
inc
sub
push
cmc
aad
cmpsl
rclb
add
push
call
mov
mov
lods
sarb
sar
sbb
push
push
push
lea
imul
cmp
mov
sub
push
mov
fs
or
mov
aam
push
inc
out
sbb
push
mov
je
and
out
inc
add
movl
xor
fwait
and
ret
call
loopne
cmp
scas
jge
imul
xor
in
sbb
sbb
lea
fsub
and
wrmsr
sbb
mull
sbb
adc
sub
mov
cmp
dec
in
and
xor
adc
incl
lcall
inc
jmp
or
xchg
inc
push
add
nop
push
dec
jg
xchg
in
or
stc
inc
inc
test
inc
inc
in
mov
xchg
jle
ficoml
lret
jmp
jbe
imull
addb
adc
pop
or
loopne
adcl
pushf
lret
pop
jne
sbb
mov
pop
jmp
adc
push
cltd
pop
testl
cli
repz
or
adc
inc
mov
push
dec
loope
mov
mov
or
adcl
mov
inc
pop
mov
xor
lret
mov
mov
jl
das
inc
xchg
sbb
or
push
xchg
test
mov
and
sysexit
and
sahf
ljmp
ja
and
leave
fcmovnb
lds
fidivs
mov
int3
es
sub
and
sbb
popa
dec
pop
int3
es
jns
loope
notb
ljmp
xor
push
es
int
inc
pop
or
jb
inc
int
addl
xor
insb
and
cmp
sbb
fld
push
sbb
adc
sub
cmp
out
pop
or
jmp
pushf
popa
jp
add
mov
and
ss
or
mov
gs
and
sbb
sbb
adc
adc
xchg
bound
aaa
push
mov
test
adc
push
xchg
add
adc
mov
jg
jecxz
and
lea
or
fdivp
shr
add
cs
leave
or
idivl
aam
inc
cmp
shl
pop
lock
pop
or
mov
add
add
or
bound
scas
push
rcl
xor
sti
in
sub
mov
cmp
sbb
inc
pushf
cltd
fildl
shr
or
inc
int3
cld
push
jnp
call
fnstcw
inc
push
add
cmp
add
lea
pop
xor
aas
mov
shr
cmp
mov
test
fimuls
add
ljmp
loopne
jae
adc
add
mov
add
iret
adc
mov
rolb
dec
add
xor
in
fs
in
sbb
mov
es
ficoms
or
xor
notb
or
shl
add
lock
mov
fs
inc
test
add
notrack
fsubs
shrb
icebp
sub
push
push
test
test
adc
test
je
dec
call
or
rclb
cmp
inc
sbb
outsb
movsb
fcmove
add
leave
hlt
stc
loope
and
jmp
mov
negb
add
inc
cmp
or
xchg
subl
cld
sub
jne
add
call
movsb
pop
ljmp
and
dec
out
fldt
inc
and
and
jns
push
dec
call
adc
mov
hlt
hlt
fucomp
mov
jle
mov
inc
in
loopne
push
fdivs
les
mov
add
or
mov
jg
jne
dec
dec
cmp
lock
jl
cmpb
jl
xor
cmpb
idiv
or
mov
incb
lea
push
test
push
lods
inc
nop
loopne
adcl
inc
dec
pop
add
push
mov
movsl
sahf
andl
inc
inc
adc
fldcw
and
adc
stos
add
or
cmp
sub
ficompl
dec
jmp
call
lock
pushf
push
call
mov
mov
and
enter
xchg
xchg
dec
out
or
test
jne
in
inc
inc
sub
add
sub
mov
xchg
shlb
je
mov
sbb
or
jl
test
or
push
push
sti
xchg
clc
mov
mov
movsw
xor
pop
xchg
lods
scas
outsb
rorb
sbb
les
out
xor
xchg
or
ss
pop
mov
pop
push
shr
jge
inc
inc
fidivrs
fdiv
fiaddl
sbb
sbb
cltd
in
adc
sbb
xor
xchg
sbb
enter
fcoms
fwait
xor
inc
and
fldenv
icebp
sbb
and
sbb
sbb
cltd
lods
mov
test
popa
xchg
dec
jne
pop
pop
pop
pop
and
lock
and
lods
rcl
ljmp
dec
and
shr
mov
sbb
mov
idiv
and
pop
rcrl
cld
je
lock
ds
je
mov
and
push
cli
daa
jo
add
and
shrb
les
sub
jno
push
xchg
jmp
gs
or
jne
push
test
shlb
mov
je
push
add
into
jbe
jns
sub
and
adc
inc
test
fldcw
mov
iret
cmp
ss
push
or
adc
es
dec
and
adc
prefetch
xorb
dec
adc
aaa
sub
sbb
push
lods
xchg
mov
add
cmc
cs
sar
push
sahf
test
cld
and
mov
mov
xchg
dec
pushl
dec
ss
mov
sub
bound
and
gs
add
mov
and
mov
push
sub
leave
je
push
decb
lea
and
or
or
mov
je
and
iret
sti
jmp
add
out
push
cmp
ja
add
cmp
adc
mov
test
cmp
jne
shll
leave
adc
call
add
idivl
pop
scas
and
xchg
mov
add
ficoml
fbstp
movsl
mov
cmpsb
ret
icebp
and
sbb
sbb
sbb
mov
mov
push
add
jo
test
push
adc
sbbb
ret
jmp
imul
inc
not
je
push
push
icebp
test
push
xor
mov
sbb
sbb
push
shlb
push
push
and
cmp
cmpsb
xorb
or
shll
cltd
fisubrs
add
pop
add
mov
cmp
fstp
je
aad
dec
lahf
pop
adc
repnz
xor
dec
push
dec
or
dec
cmpsb
sub
ret
cmpsl
mov
jb
addb
sysexit
cmp
inc
mov
and
xchg
inc
mov
pop
mov
jnp
push
sbb
sub
sahf
inc
rcrb
daa
in
or
add
mov
and
movb
sbb
adc
andb
inc
mov
imul
mov
push
shl
jns
out
rcl
aad
jns
xlat
fcomp
fstpt
cld
inc
adc
nop
pop
nop
data16
and
movb
jmp
or
adc
mulb
xchg
dec
and
mov
xor
ss
mov
fwait
std
lea
add
mov
mov
add
push
pop
push
inc
and
js
and
adc
inc
ss
out
sahf
pop
push
add
notl
and
in
lock
jmp
icebp
adc
cmp
das
pusha
jnp
scas
or
push
push
add
movsb
adc
adc
cmp
push
insb
cld
add
pop
pop
in
fldcw
adc
rcrb
sub
stos
inc
mov
lcall
lea
imul
lea
sar
inc
or
mov
aam
jp
jnp
neg
loope
push
mov
pusha
loop
inc
xorl
pushf
sti
xor
push
adc
sub
add
rol
sti
add
jo
fisubs
imul
jae
jp
mov
fisttpl
mov
decl
mov
test
fistl
push
add
hlt
sub
ljmp
leave
add
and
lea
pop
or
in
lods
enter
fcmovnbe
jae
xchg
ja
add
jl
and
push
test
loopne
inc
negl
lea
loope
loopne
dec
lods
push
cld
mov
loopne
inc
or
cmp
mov
adcb
pop
mov
jne
push
in
sub
dec
test
rolb
push
or
js
mov
mov
push
or
mov
fcoml
or
push
push
insb
enter
and
repnz
or
ret
movsb
sub
or
push
addl
mov
jge
sub
inc
inc
test
jg
aaa
dec
rol
add
das
inc
cmpb
out
jne
add
ror
rorb
shl
loopne
xchg
adc
cmp
rorb
dec
push
cs
jge
jg
or
call
inc
shrl
clc
cmp
inc
lods
ss
ffreep
adc
mov
fwait
mov
lret
dec
gs
dec
rolb
lock
lock
dec
movsl
div
cli
cli
inc
imul
mov
test
xor
pop
js
fstpt
pop
or
call
push
fcomps
sbb
adc
pop
xchg
aaa
jo
mov
dec
leave
fildl
pop
and
mov
xor
mov
rolb
icebp
xchg
mov
int
jmp
inc
mov
lock
popa
push
dec
ja
mov
push
mov
push
repnz
pushw
sub
loop
xchg
mov
cmpsl
xchg
testb
and
mov
or
inc
xor
and
ret
or
adc
xor
sahf
fisttpl
and
shlb
fsubrs
rcrl
aam
inc
inc
test
shll
movsb
enter
push
subb
cld
lods
dec
or
pushf
adc
sub
adc
and
bound
fcmovu
mov
rcrl
insl
fnsave
lods
lods
rolb
adc
adc
in
notb
adc
and
nop
mov
in
inc
sahf
xchg
mov
lock
out
or
add
and
jge
inc
les
js
xor
adc
cmp
jne
in
jno
jne
in
fstpt
loopne
mov
into
mov
adc
lcall
sbb
pop
pop
sub
insl
movups
out
inc
add
inc
mov
push
add
es
jge
push
nop
cmp
push
call
mov
adc
adc
cmpsl
sub
push
pop
shr
nop
js
pop
sbb
inc
inc
scas
xchg
inc
push
shll
test
jne
sbb
neg
and
sub
sub
call
fucomp
imul
loopnew
pop
sbb
pop
add
je
xchg
lock
push
mov
push
pushf
imul
icebp
ret
mov
add
aas
aad
xchg
mov
ljmp
dec
fldenv
mov
sbb
mul
enter
jp
test
in
jge
xchg
sub
clc
js
push
mov
dec
enter
mov
cmp
push
shlb
test
dec
int3
out
adc
dec
lock
mov
add
lock
xorb
into
or
mov
inc
ljmp
jmp
call
dec
decb
dec
mov
dec
cmp
jge
mov
push
std
sub
cmpb
or
add
dec
cmp
cmp
jb
add
dec
add
add
fadds
dec
test
pop
add
dec
test
ret
pop
jp
mov
add
or
mov
lods
pushf
adc
lret
or
add
push
add
sub
add
dec
movsl
jge
pop
enter
or
dec
pop
imul
ret
mov
mov
mov
jmp
and
pop
clc
push
je
or
cmp
test
jbe
cmp
or
jmp
jge
jae
xchg
push
or
cmp
add
or
pop
scas
add
adc
add
lods
js
mov
and
push
ret
lcall
add
add
pusha
dec
inc
mov
cmp
mov
iret
xor
mov
pusha
inc
daa
mov
cmp
and
pop
pop
das
cmpb
pop
shll
or
mov
sbb
imul
inc
push
pop
jae
lcall
add
add
fsubl
push
or
add
dec
inc
or
sub
push
je
pop
pop
scas
lahf
push
xlat
dec
movsl
sahf
xchg
jne
outsl
push
add
out
loope
adc
xor
and
in
test
add
inc
jge
pop
movb
mov
data16
scas
sub
inc
dec
push
push
pusha
and
rorl
fldcw
mov
cld
enter
xorb
mov
push
inc
stos
jg
and
add
xchg
mov
and
cmp
int3
jge
sbb
mov
scas
pop
addb
adcl
cltd
ss
xor
mov
add
loopne
dec
adc
xchg
repz
xchg
jle
pusha
mov
jns
fisubs
xor
inc
jg
into
stos
inc
in
into
into
mov
push
and
sarb
push
pop
xor
adcl
dec
pop
dec
push
mov
not
and
or
pop
std
daa
movsb
nop
into
xchg
jno
psubb
add
add
mov
lahf
pop
test
enter
add
add
mov
flds
int
sbb
je
and
leave
adc
inc
lock
rorl
sbb
in
movsb
jb
jmp
popa
push
ret
ret
out
xchg
or
pop
sbb
inc
and
adc
xchg
ss
dec
xchg
add
or
xchg
jae
or
fnstenv
push
add
ret
lret
mov
sub
push
mov
or
and
mov
jp
or
je
or
scas
sub
sub
fisubs
clc
adc
cwtl
mov
push
pusha
cmpsb
js
and
daa
or
and
fisttpll
push
jge
xlat
push
add
cmp
jl
or
sub
mov
imul
mov
mov
adc
xor
pop
fisttpll
aam
xlat
jmp
cmp
inc
cwtl
dec
out
dec
orb
lahf
add
xchg
jmp
xchg
addb
mov
imul
mov
je
jb
mov
out
je
pop
inc
shrl
rorb
dec
xchg
inc
inc
pop
nop
jb
sahf
call
jle
test
lds
call
push
mov
jo
cmp
pop
dec
js
jns
jmp
and
xor
push
or
test
cmp
add
jl
mov
rolb
stc
repz
inc
inc
movsl
and
mov
add
and
sbb
je
xchg
loopne
mov
pop
push
imulb
fadds
andl
out
or
sub
ficompl
inc
pushl
and
rol
movl
rclb
push
mov
push
je
and
popf
ss
rcr
push
js
xor
or
flds
popf
iret
jge
sbb
sub
add
imul
jo
or
adc
push
hlt
sarl
and
cmp
lret
xchg
sub
in
cmp
sub
jge
or
xchg
sbb
pop
push
and
mov
jae
add
scas
dec
and
and
imul
fcoml
xlat
sub
push
lods
push
sarl
test
or
adc
shll
sbb
push
lret
add
inc
addr16
cs
or
jae
add
add
stc
jmp
aad
or
mov
sub
int
sbb
dec
jg
xchg
sub
or
inc
fsubrl
pop
pop
ret
jmp
xor
adc
jl
xchg
lcall
push
inc
add
add
lods
dec
lods
and
rclb
jmp
xchg
xor
loopne
dec
jo
cmp
cwtl
subb
xor
mov
pusha
or
fadd
add
outsb
movb
cmp
in
pop
add
xchg
jecxz,pn
mov
aaa
fcomps
ret
push
clc
mov
jnp
cmp
or
adc
mov
mov
cmp
imul
dec
shll
mov
rol
movb
gs
test
mov
fimuls
or
cwtl
ret
call
mov
or
add
push
pop
jl
mov
lea
loop
jne
ss
int3
jle
rcll
js
shrb
lock
dec
mov
lret
nop
xchg
jae
fsubs
icebp
insl
cmp
loopne
fs
shr
dec
loop
cmp
jp
fisttps
cwtl
mov
push
sub
js
adc
pop
adc
sbb
sbb
sbb
into
sbb
or
cmpsb
cmp
and
mov
popa
jne
sar
and
pop
push
das
jne
adc
movsl
xor
jmp
mov
sbb
in
inc
je
fldenv
and
imul
xchg
push
adc
ret
push
into
cmpsb
inc
hlt
xchg
pop
and
sub
lcall
or
push
mov
pop
insl
sub
addb
jecxz
dec
testb
push
push
or
cltd
inc
mov
xor
sbb
xchg
nop
or
ja
dec
cmp
pop
adc
sbb
into
test
lret
call
cmpb
add
cmp
push
and
daa
das
jg
add
or
and
insb
pushf
adc
mov
or
cwtl
or
mov
add
arpl
mov
or
dec
ror
inc
inc
sbb
mov
test
jg
xorps
mov
push
pop
fsts
and
dec
rorb
sbb
mov
aam
scas
sub
mov
push
and
sub
and
aaa
jle
push
and
xor
mov
inc
inc
xorl
sarl
xorl
or
cmp
jmp
fstps
push
xor
cmp
add
sub
sbb
ficoml
and
aaa
test
cmpsb
pop
sbb
or
jl
cld
mov
bound
out
inc
push
inc
insl
jbe
xchg
xor
sbb
pop
xchg
movsl
or
xchg
or
dec
and
popa
xor
clc
in
dec
movsl
and
inc
js
pop
lcall
mov
or
push
ja
mov
movsb
cld
adc
jecxz
and
stc
mov
mov
inc
xchg
subb
nop
or
xchg
sub
xchg
jbe
adc
adc
push
sub
add
mov
adc
add
add
mov
or
push
aad
xor
and
sti
sbb
loope
cmp
lock
arpl
stos
and
mov
popf
lods
bswap
insl
sub
pop
add
adcb
push
lcall
pop
dec
adc
enter
insb
dec
outsb
sbb
mov
pop
and
mov
fadd
sbb
dec
or
movl
xor
pop
inc
and
jmp
test
imulb
ret
repnz
or
or
or
inc
js
popw
loop
shlb
out
xor
add
push
inc
cmp
sub
mov
dec
rcrl
or
icebp
push
push
adcb
push
bound
add
ja
or
or
movsb
sub
gs
or
sbbb
jle
inc
or
push
jb
mov
fsubl
push
inc
mov
stos
or
pop
sbb
ja
jbe
pop
fisttpl
sbb
xor
cmpsb
cld
pop
cmp
mov
imul
inc
xchg
decb
jle
bnd
pop
and
jg
adc
pop
mov
lcall
mov
sbb
rcrl
sbb
push
pop
rcl
pop
pop
jmp
xor
pop
cmp
shl
hlt
shr
sbb
add
lods
mov
push
mov
dec
pop
ss
int3
and
cmp
sub
in
push
cmp
in
cmpsl
gs
fs
push
mov
add
in
mov
lahf
lret
aam
sub
gs
add
inc
xorb
nop
cld
fcomip
xorb
sbb
xchg
adcb
int3
iret
jbe
or
aad
scas
push
jb
xor
repnz
xchg
xchg
movsb
rol
push
or
xor
imul
mov
int3
jo
push
popf
cli
or
aas
push
pop
orb
out
loope
lock
stos
push
inc
stos
jne
or
testb
testb
or
inc
repnz
int
or
test
or
rcrl
xchg
mov
orb
inc
loopne
or
aam
mov
nop
leave
pop
data16
inc
and
cmp
add
pop
mov
fmuls
xchg
jg
sub
or
mov
add
pop
insl
stos
push
sbb
je
test
cmp
jl
shl
dec
or
jbe
xchg
jbe
or
mov
sub
adc
sbb
ds
and
pushl
leave
xchg
cmpb
push
fucomip
sbb
and
or
test
fsub
popf
cmp
adc
divl
and
xchg
inc
or
adc
and
push
or
jne
inc
sbb
cmp
or
inc
mov
sti
sub
fdivrs
cs
jae
cli
or
arpl
dec
dec
popa
push
call
and
cmpsb
fs
jnp
jno
mov
push
cmp
arpl
push
lret
or
or
fildl
mov
movb
add
pop
cmpb
push
add
add
outsb
or
jg
sbb
push
aas
setnp
subb
testb
pushf
sbb
add
sub
add
dec
xor
bound
push
push
adc
or
aaa
iret
test
adc
fsubr
add
aas
xor
and
pop
jl
sbb
xchg
add
mov
leave
xchg
or
fstl
and
call
sbb
test
pop
mov
mov
cmp
fabs
adc
gs
and
test
sbb
mov
xor
scas
and
mov
sbb
xchg
add
loope
mov
inc
fdivs
clc
sub
add
iret
test
daa
mov
sub
pop
mov
inc
enter
sbb
gs
pop
cmp
dec
pop
dec
or
aas
mov
cmp
jae
inc
je
pop
test
sarb
adc
sarb
mov
fstps
sbb
mov
ja
in
aam
ret
mov
jnp
cmp
xchg
mov
and
inc
outsb
fcomps
pop
inc
scas
rcrb
rolb
or
mov
js
xor
pop
cmp
inc
es
mov
lods
inc
sub
lsl
cmp
hlt
fcomp
jb
divl
les
shlb
or
lods
roll
test
testl
mov
andb
cld
or
mov
test
push
mov
out
pushl
inc
mov
rorb
xlat
or
and
flds
iret
push
push
sub
adc
cmp
push
les
add
cmp
xchg
imul
test
je
and
stos
or
jg
mov
shrb
push
arpl
sbb
and
fidivl
je
mov
and
push
mov
cmp
jle
inc
xor
cmp
pop
add
mov
xor
jecxz
nop
dec
popf
mov
scas
sub
inc
add
xchg
mov
cwtl
xor
dec
test
adc
pop
mov
adc
sbb
addr16
push
add
push
jo
xorb
push
or
pop
add
mov
xor
add
xchg
je
mov
push
lea
jmp
add
lcall
aaa
push
icebp
imul
inc
js,pn
inc
mov
mov
ffreep
addb
aam
cmp
and
inc
sar
test
mov
xchg
repnz
jle
cmpb
lea
pop
je
pop
cmc
and
sub
cmp
shlb
xchg
rorb
jno
add
inc
mov
push
mov
push
jb
xor
mov
in
or
xor
push
cmp
jl
mov
push
or
jg
sub
adc
movsb
dec
hlt
scas
jmp
jne
lea
testb
jne
clc
orps
fldl
mov
ds
cmp
mov
lods
mov
jb
xchg
lods
imul
andl
mov
test
inc
ret
or
aad
mov
mov
push
push
insb
icebp
cmp
scas
mov
pop
data16
sbb
add
sahf
sbb
xor
or
mov
add
popf
call
mov
lods
mov
pop
mov
shll
push
sub
xlat
fisubrs
jne
jmp
fildl
fwait
mov
push
xchg
mov
arpl
adc
or
je,pn
ds
mov
into
pop
jle
jo
mov
in
inc
cli
mov
out
sub
adc
jecxz
sub
add
roll
pop
shll
scas
jg
adc
push
or
mov
aam
mov
cmp
add
xchg
pop
xchg
lret
clc
dec
mov
fsub
inc
push
lock
xchg
xchg
inc
xchg
adc
add
cmp
jl
add
repnz
dec
ret
pusha
test
insb
aam
mov
test
pusha
jbe
xchg
loopne
dec
sbb
sbb
fcmovnbe
sub
dec
jg
adc
orl
call
lret
pop
hlt
sbb
dec
inc
jno
aad
jb
fildl
sbb
test
nop
fadds
mov
push
std
pop
mov
pop
std
jb
xchg
aam
mov
mov
test
mov
lock
cmp
xlat
dec
xor
ljmp
and
mov
push
dec
test
insb
ret
lock
or
sbb
out
jbe
inc
aad
or
lret
mov
push
mov
ljmp
cmp
and
xchg
inc
jp
jo
mov
xchg
mov
jg
call
sbb
mov
and
cmp
jb
testb
fwait
or
inc
add
int3
lods
pop
push
adc
adc
in
mov
movb
mov
jb
je
data16
ja
jb
cmp
jbe
mov
push
or
nop
fs
lret
cmp
push
call
call
xchg
xchg
das
xor
aas
out
cmp
sub
adc
test
imul
or
movsl
push
push
mov
xor
mov
sbb
pop
mov
pop
es
inc
adc
bound
push
sub
pop
pop
pop
rcrb
mov
cmp
inc
lea
dec
or
in
sarl
addr16
les
inc
int3
add
bswap
cmp
pop
rcl
lcall
push
lcall
push
or
shlb
push
fs
mov
pop
add
mov
cmp
lock
add
jbe
sbb
call
imul
ret
sub
gs
rcll
daa
push
popl
and
adc
inc
add
mov
sub
fmuls
sbb
push
imul
inc
je
bnd
mov
jne
xlat
mov
leave
inc
cmp
fsubrl
adc
ja
insb
mov
xchg
subl
jb
fxch
sub
cmp
xchg
sbb
in
mov
icebp
orb
adc
push
jmp
je
rorl
add
or
sbb
jnp
add
insb
insl
ljmp
mov
lea
cmpsb
dec
repnz
and
adc
cld
insl
fwait
cmpsl
push
in
adcb
aas
push
jb
sub
and
push
test
call
xor
movsb
les
and
cmp
lcall
cmpsb
mov
leave
clc
outsb
or
in
aam
pushf
fmull
adc
int
loopne
outsl
xchg
sub
insb
dec
or
nop
fsubs
xor
shll
cmpsl
lods
outsl
mov
or
xor
push
mov
xorl
mov
pop
hlt
add
sbb
jl
shr
inc
mov
mov
inc
mov
imul
loopne
add
sub
jno
jl
inc
roll
push
ds
pushf
inc
and
xchg
push
js
xchg
push
xlat
xchg
cltd
mov
and
sbb
cld
jno
stos
push
fildl
jb
dec
cmp
jb
call
jg
dec
fcoms
cmpsb
dec
shlb
fcompl
inc
int3
pushf
sbb
jne
add
aam
xchg
or
cmp
xor
imul
rclb
rolb
or
or
adc
dec
xor
sbb
and
dec
xor
and
xor
xor
and
cmp
inc
enter
dec
fs
jne
insb
add
pushf
ja
fldenv
add
pusha
add
jbe
add
nop
add
nop
int3
rcl
aad
xor
loopne
clc
hlt
push
mov
inc
and
cmp
and
clc
les
add
lock
popa
mov
inc
mov
mov
xchg
sbb
mov
xchg
dec
mov
sbb
xor
pop
aam
lcall
loop
pushf
call
dec
push
xor
sub
shr
test
pop
addr16
push
jbe
mov
orb
in
fisttpll
mov
fwait
mov
aam
in
imul
adc
mov
rolb
add
sbb
mov
push
ja
test
in
jnp
ja
xor
add
aas
push
popa
push
or
xor
lcall
xchg
adcl
hlt
pop
sbb
aas
js
push
lock
rorb
or
mov
call
push
fs
add
jecxz
xorl
test
in
adc
outsl
in
in
call
cmc
fdivrs
xlat
and
cmpb
cmpsb
add
adc
adc
pop
pop
enter
fdivrs
in
or
jo
add
dec
call
call
xchg
roll
inc
daa
xchg
fadds
sbb
push
insl
adc
call
adc
insl
mov
mov
or
or
jg
push
push
jl
jl
loope
xlat
int
loopne
stos
sbb
mov
stc
in
xchg
push
push
sub
bound
adc
test
jmp
sbb
jo
cmpsb
movsl
mov
pushf
rcrl
pop
rorb
les
std
push
int3
out
int
jbe
lret
jmp
fadds
jns
daa
fisttpll
out
sub
fnstenv
leave
push
cmp
jle
fcomp
cmp
mov
aam
inc
jle
jmp
mov
inc
clc
jle
lock
ret
and
lock
jg
test
lods
in
in
mov
mov
in
enter
ljmp
add
xchg
aaa
arpl
pop
movsl
mov
repnz
dec
add
je
rorb
add
in
subb
orl
lret
test
and
roll
lds
lock
add
mov
add
cltd
xorb
hlt
push
orb
sbb
adc
push
xchg
cmp
or
aam
orl
unpcklps
inc
adc
xor
sarl
or
or
arpl
shll
call
aam
jp
movnti
xor
sub
sub
imul
mov
mov
xchg
or
or
mov
add
sbb
stos
les
inc
test
bound
js
pop
add
xor
add
movsb
nop
push
inc
lret
shl
scas
pusha
lret
add
push
sbb
aam
cltd
ret
out
filds
rorb
fldl
sub
adc
sub
pusha
shll
mov
jo
adc
and
aad
jecxz
adc
xchg
jg
xchg
add
add
xor
outsl
pushf
pop
lret
xchg
xchg
pop
push
fs
jnp
mov
xor
mov
and
mov
mov
jmp
add
lock
loop
inc
mov
loopne
xor
xor
pusha
xchg
sbbb
mov
fldlg2
sti
jno
add
cmp
cld
cmp
cmp
and
inc
push
enter
ret
popf
rcrl
adc
lds
push
xor
cmpl
cmp
std
hlt
movsb
arpl
es
pop
test
test
fmul
mov
and
cmp
enter
mov
sub
lods
pushf
loopne
fsubrl
and
sbb
cwtl
xor
dec
inc
push
js
and
jl
jmp
adc
fsubs
push
jecxz
enter
or
mov
or
inc
push
cmp
or
or
cmp
nop
or
or
inc
dec
dec
dec
xor
add
jo
in
xchg
inc
or
call
mov
mov
inc
rcrl
insl
movsb
push
sbb
inc
mov
mov
stos
mov
adc
nop
adc
in
mov
and
xchg
jecxz
repz
divl
adc
cwtl
ficoml
ret
pop
mov
xlat
jl
jg
ss
mov
dec
sub
mov
bound
mov
dec
and
aas
and
in
lea
pop
pop
mov
aad
inc
es
pop
xor
aam
push
mov
jle
nop
rolb
sub
xchg
dec
lds
xchg
in
insl
pop
mov
pop
or
pop
dec
lock
add
je
jne
push
adcb
adc
imul
loope
sbbl
and
insl
xor
add
pop
adc
jmp
pop
push
mov
test
fwait
add
push
enter
or
sbb
mov
xor
jno
or
nop
shrl
les
test
ret
xor
std
mov
add
sti
and
jl
movsl
or
push
loopne
lods
test
lea
pop
xchg
inc
mov
and
shl
push
lea
lods
xchg
and
adc
xchg
adc
inc
sbb
aam
int3
xlat
enter
sub
xchg
xchg
inc
or
les
dec
fsubl
fs
xchg
lods
nop
bswap
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
cwtl
mov
shrl
mov
movsb
dec
add
das
lcall
addb
xchg
insl
push
jb
mov
in
in
lods
rclb
sub
das
ja
mov
outsl
xchg
sub
fiaddl
jne
data16
mov
daa
out
cmp
lea
in
sub
sbb
sub
inc
addb
jne
add
pushfw
cwtl
dec
xchg
mov
cs
jns
mov
dec
adc
aas
mov
mov
adc
je
adc
mov
fmull
mov
dec
xor
mov
in
sbb
mov
and
aad
or
sub
movsb
mov
xor
lea
mov
xorl
orb
call
inc
cld
add
call
push
cwtl
and
push
sub
movsl
push
lods
sbb
and
scas
inc
sub
addr16
mov
xchg
push
jns
adc
or
les
adc
je
lcall
in
xchg
mov
pop
lcall
sub
mov
bswap
and
js
mov
add
push
mov
aas
jae
xor
aam
fildl
sub
movd
xor
xor
loopne
dec
rclb
mov
add
movsl
ret
int
add
jns
addl
inc
pushf
mov
mov
add
add
sub
jns
sbb
das
fs
mov
jnp
mov
add
dec
je
or
and
dec
repnz
cwtl
movsb
adc
xchg
mov
nop
std
movsl
add
cld
popf
arpl
leave
jecxz
in
dec
push
imul
addl
lea
test
popf
in
lcall
fdiv
mov
or
and
cmpsl
inc
js
mov
dec
mov
repnz
rcrb
xlat
xchg
adc
jns
std
mov
clc
jmp
adc
and
mov
icebp
pop
mov
cmpsb
loope
aam
mov
and
and
fcoml
push
lods
mov
shrl
leave
mov
xor
mov
je
aas
aas
inc
movsl
push
or
and
js
mov
or
pop
insl
or
loop
mov
or
pop
or
fcom
xchg
test
lret
jl
jecxz
or
les
or
mov
les
lea
bound
imul
fldt
add
mov
and
jo
cwtl
mov
mov
mov
aas
aam
shlb
nop
iret
sar
int3
sti
test
dec
in
test
lods
adc
dec
add
pop
outsb
lock
push
bound
daa
mov
and
ja
sbb
pushf
loope
aaa
test
adc
lea
in
pop
dec
movsb
stc
jmp
jo
push
pop
in
int3
enter
pop
call
mov
mov
inc
and
pop
push
cmp
adc
push
pop
mov
xor
outsb
pop
xor
pop
sbb
repz
fcoml
or
adc
movb
adc
and
xchg
lods
movsb
jb
pop
jl
mov
dec
push
push
or
or
mov
and
in
fsubrs
cld
adc
fisubl
loopne
out
fs
adc
inc
ret
pusha
out
out
add
push
cmp
loopne
mov
loope
cmpsl
mov
mov
rorb
pushf
mov
mov
test
in
xchg
inc
add
add
inc
loop
int3
outsl
dec
or
jmp
and
cmpl
push
test
test
or
sbb
bound
loopne
bound
or
mov
lcall
push
mov
add
movsb
test
jbe
inc
jno
stos
or
dec
lea
and
ss
sbbl
and
stc
jnp
pusha
rclb
sbb
push
roll
enter
lcall
enter
mov
cld
xchg
sarl
test
jg
add
out
xor
pop
lods
pushl
imul
mov
lods
inc
and
lods
sti
ret
dec
in
or
loopne
xchg
dec
adc
xlat
clc
andb
adc
add
je
iret
add
push
mov
gs
pop
add
add
xor
in
push
mov
inc
scas
aas
add
adcl
add
enter
xor
push
popf
or
sbb
leave
adc
lods
or
xor
pop
cmp
xor
sub
fs
imul
push
test
add
inc
cmpsl
cmpsb
aad
jg
or
pop
pop
add
push
sub
cmpsl
icebp
andb
adc
mov
call
pusha
stos
fmuls
outsl
cs
rcl
dec
xor
int3
mov
hlt
adc
pop
setae
dec
xorl
lds
lods
inc
xor
mov
leave
aam
lock
daa
int
lcall
scas
add
test
dec
fadds
fdivl
adc
test
test
sub
add
mov
lahf
scas
mov
push
xchg
or
lahf
or
jns
pop
stos
sub
add
push
inc
mov
adc
adc
rcrb
imul
call
les
les
mov
dec
xor
ljmp
pop
les
mov
nop
mov
mov
test
sbb
xor
leave
je
test
in
lods
or
pusha
fstps
and
int
push
and
cltd
add
ret
scas
ret
ja
cmp
and
rorb
xor
int
mull
out
nop
and
out
ret
fwait
in
bound
dec
inc
mov
or
jbe
xchg
cmpl
dec
dec
in
mov
test
enter
xchg
or
xchg
add
push
and
ja
or
cwtl
adc
and
mov
jl
and
cmp
dec
daa
mov
pop
cmpb
sub
sub
inc
imul
push
cmp
jnp
mov
push
xor
adc
fsubl
and
mov
xchg
mov
sbb
and
add
sbb
jbe
add
and
in
in
mov
push
cltd
adc
in
insb
test
popa
and
add
xor
mov
jo
add
inc
xchg
dec
push
xchg
mov
jne
das
pop
insb
sub
test
test
jge
push
jb
lods
mov
xor
adc
js
cltd
movsb
sub
mov
cmp
or
xchg
xchg
cwtl
cmp
pusha
mov
add
les
sar
test
enter
pop
enter
push
push
test
mov
xchg
cmp
int3
or
xorb
imul
xor
add
and
jb
add
add
xchg
or
enter
adc
and
icebp
je
int
inc
test
cmp
inc
mov
dec
testl
ljmp
mov
or
add
pop
gs
add
add
or
and
divl
push
add
or
gs
push
pop
xor
out
mov
popa
and
sub
rol
inc
stos
mov
dec
cmpb
and
pop
mov
mov
sub
push
fwait
or
das
repnz
add
or
pusha
mov
push
imul
sbbb
gs
or
cwtl
pop
dec
daa
cmp
mov
or
or
pop
xchg
scas
push
sub
or
pop
in
jl
lahf
andb
mov
cmp
lea
jmp
insl
adc
push
hlt
and
add
and
in
andl
adc
in
add
cltd
mov
ss
lock
pop
adc
pusha
vmovntps
lea
cmp
aas
mov
loopne
es
and
mov
nop
in
dec
js
push
inc
jl
scas
rcrl
aam
and
adc
pop
mov
dec
sub
dec
xor
or
mov
stos
iret
adc
rcl
adcb
lret
pop
roll
les
add
lods
iret
test
sub
and
hlt
xchg
mov
pop
ret
test
pop
sbbb
test
sbb
lock
gs
ret
insl
pop
shll
lds
push
lods
sbb
mov
jne
inc
mov
adc
rcll
and
lds
in
inc
jb
adc
roll
test
sbb
xor
adc
and
xchg
fiaddl
pusha
push
popa
hlt
push
push
and
inc
inc
adc
adc
and
lock
arpl
in
add
sub
pop
in
popf
dec
fsubl
lahf
mov
sub
test
xchg
or
xor
dec
sbb
xor
jl
imul
pop
insl
pusha
leave
and
dec
push
pop
dec
aam
add
inc
cltd
cmpb
lea
push
cmp
clc
fdivs
push
xor
or
shlb
addb
pop
cld
rol
jne
dec
es
fsub
pushf
leave
and
mov
dec
xor
mov
or
leave
xor
xchg
lea
enter
and
or
or
dec
pop
adc
pop
insl
push
nop
scas
pusha
enter
int
rcll
addr16
pusha
test
adc
push
incl
sahf
dec
dec
cmp
cmp
or
lods
dec
adc
ret
pop
and
lock
lahf
sub
inc
sbb
pop
popf
das
sub
and
sbb
inc
add
pop
lock
test
mov
nop
mov
mov
xadd
outsl
xchg
push
and
int
and
and
dec
pop
or
test
add
add
jns
arpl
test
shrb
sbb
pop
mov
push
cmp
loopne
mov
add
cwtl
xor
xchg
in
inc
leave
mov
cltd
enter
xlat
inc
lock
mov
mov
sub
mov
adc
add
loopne
imul
add
sub
or
jnp
inc
mov
in
mov
and
dec
cmp
cli
sub
push
rcll
mov
mov
cmp
divl
inc
jle
call
xor
add
sbb
clc
add
pusha
pop
int3
cmp
adc
fildl
daa
fildll
or
dec
lods
js
rorb
loopne
push
cmp
jmp
sub
or
lahf
adc
pusha
sub
mov
pop
xchg
mov
hlt
lock
loopne
cwtl
jg
sbb
inc
sbb
mov
jecxz
and
pop
xchg
rolb
sar
add
loope
or
jne
dec
pushf
mov
lret
mov
lea
sti
fisubl
xor
push
cltd
adc
mov
xchg
arpl
lock
cltd
pusha
cmp
dec
es
dec
dec
push
pop
dec
fwait
fs
add
js
cmp
mov
dec
adc
sub
push
fs
sti
dec
clc
cli
insb
nop
imul
push
roll
cli
push
insb
mov
and
pop
sbb
repnz
movsl
jae
sti
lret
insl
inc
loope
cli
dec
xchg
mov
stos
adc
push
loope
insl
xorb
in
bswap
mov
mov
insl
adc
mov
movsl
mov
mov
sbb
outsl
push
pop
mov
add
xor
xchg
or
fcomp
add
lret
iret
call
mov
and
push
call
lcall
shlb
mov
test
inc
mov
decl
and
stos
or
rorl
inc
adc
push
push
push
bnd
pop
fs
sti
and
leave
inc
xchg
testb
push
mov
xlat
push
repnz
pop
xorb
jle
sbb
scas
mov
idivb
mov
into
mov
jge
or
push
test
movl
jle
adc
add
aaa
in
fcmovu
or
in
mov
sub
inc
cs
loope
push
push
imul
push
call
lcall
mov
mov
and
mov
imul
scas
roll
push
xchg
dec
add
fs
dec
cmp
ret
fisubrl
xor
lods
hlt
in
cmp
aaa
jmp
nop
mov
sbb
xchg
jnp
jl
ret
push
lods
lods
stos
jmp
lcall
inc
inc
add
in
add
sbb
cmp
adcb
xchg
stos
and
xor
add
pop
mov
loope
testl
in
fcmovnbe
aas
add
inc
add
cltd
push
pop
out
out
mov
rolb
adc
inc
aas
and
jo
or
cmp
dec
mov
fistpl
or
jnp
shlb
pushl
mov
add
add
jg
inc
or
mov
rcll
xchg
adc
or
pop
shrl
outsl
cmp
adc
mov
out
ds
push
mov
xchg
lock
idiv
aas
iret
repz
insl
jo
outsb
je
jb
outsl
arpl
fs
in
notb
jo
sbb
push
dec
imul
push
cmp
jb
gs
xor
cs
insb
push
bound
nop
fcomip
out
and
pop
popa
je
outsl
outsb
push
push
add
xchg
add
smsw
jnp
pop
incl
sub
or
fstpt
jb
js
je
jb
gs
cmp
or
arpl
outsl
add
add
add
add
je
push
roll
inc
jne
jb
stos
inc
outsb
cmpsl
pop
imul
dec
xor
xor
out
xlat
movsb
pop
cmp
cmp
sub
dec
and
jns
add
das
das
push
jl
ja
add
push
inc
inc
gs
insl
fmull
dec
outsl
jbe
dec
arpl
fucom
ret
push
push
jo
sub
addr16
dec
jne
out
sbb
xchg
xchg
roll
jb
insb
and
pop
stc
dec
popa
jb
push
inc
pushf
jae
sahf
insb
adc
xchg
jae
cmp
jns
jg
xor
cwtl
inc
push
jne
xor
xor
daa
push
mov
sti
sub
sbb
dec
andb
jne
into
cmp
insb
xchg
pop
dec
inc
push
mov
jbe
push
popa
das
jo
or
cmp
sub
fcomip
mov
push
test
push
sub
mov
xor
inc
cwtl
std
out
decl
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
das
xor
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
mov
pop
pop
pop
pop
pop
adc
popa
bound
gs
addr16
insl
outsb
sbb
js
fs
jle
ja
movsb
jnp
jge
jg
add
inc
vpmulhw
dec
imul
jnp
cmp
dec
xchg
xor
divl
jl
push
inc
insb
jae
out
push
xchg
jl
inc
and
push
jne
inc
inc
fwait
and
jge
lock
insl
fldcw
push
fldenv
js
jb
ss
dec
push
push
sbb
mov
dec
dec
inc
sbb
and
sbb
and
push
xor
sbb
xor
test
insb
imul
adc
je,pn
xor
inc
and
xorb
and
fs
out
imul
data16
or
xorb
inc
popa
and
fldt
mov
jne
pop
xor
insl
and
insl
push
xchg
inc
cs
xor
scas
loopne
jne
dec
mov
push
cltd
jmp
lcall
xchg
dec
jo
add
jbe
and
jnp
je
lret
imul
fisttpll
or
fs
cmp
and
push
jbe
je
adc
mov
and
push
ds
imul
mov
aaa
subb
and
mov
femms
push
daa
sub
dec
inc
add
sub
arpl
cmp
arpl
jo
dec
popa
sub
in
cmp
mov
fiadds
inc
xchg
sub
push
stos
sub
imul
xor
pop
jae
int3
or
push
xchg
cmp
lcall
xor
or
xor
gs
push
filds
push
xorl
aaa
xor
imul
aas
xor
hlt
addb
dec
add
addr16
dec
dec
aaa
ja
mov
popa
loopne
outsl
sub
inc
jae
fs
mov
add
inc
and
xor
mov
mov
push
gs
das
mov
mov
lds
out
test
push
or
fidivs
out
push
cmp
jb
bound
cmp
inc
mov
test
ljmp
imul
mov
outsb
popa
pop
or
push
jmp
add
stos
jle
push
leave
nop
inc
and
jbe
push
in
mov
ja
in
enter
xor
cmp
fadd
and
and
pop
push
mov
and
cmp
pop
jae
xor
or
mov
test
test
jle
push
cwtl
jb
push
sub
lret
inc
sub
jmp
loopne
pop
dec
jmp
mov
in
cmp
push
and
cmp
cwtl
imul
out
inc
inc
and
dec
in
jbe
cmp
and
cmp
mov
loopne
add
imul
ljmp
lret
jno
lahf
jg
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
or
cmp
push
push
cld
cmp
dec
add
xor
lret
out
sub
popa
js
jae
fdiv
sahf
imul
pop
add
add
jecxz
mov
jne
sub
pop
movsl
cmp
add
add
adc
xlat
sub
fwait
add
add
add
add
repnz
jmp
cmp
pop
or
aaa
ds
push
pop
hlt
and
mov
pusha
push
js
or
sub
in
out
int3
add
sbb
addb
jnp
test
push
xchg
test
add
mov
mov
daa
push
cmpb
push
fnstcw
mov
and
sub
jb
int3
push
lods
lods
pop
into
jo
add
xor
lahf
sub
stos
cmp
inc
inc
int3
js
jo
add
add
loope
cmpl
dec
mov
push
rorb
add
cmp
lea
mov
nop
inc
xchg
xchg
pop
roll
pop
sub
and
ds
ret
sub
pop
add
daa
pushf
jo
and
daa
pushf
jo
cmp
pop
data16
jo
or
push
test
and
dec
enter
sub
sbb
pop
and
xchg
sbb
xchg
adc
and
xorb
add
ja
scas
mov
add
mov
dec
add
add
inc
add
add
stos
pusha
pop
xorb
cs
sar
adc
mov
lods
sbb
add
add
shr
out
add
insl
and
loope
addb
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
mov
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
jmp
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
xchg
inc
adc
inc
movsb
sar
dec
and
pushl
aas
sbb
or
cmp
test
lahf
push
pop
outsl
ja
jae
pop
sbb
push
jae
jb
bound
push
mov
inc
data16
dec
cmp
inc
arpl
mov
jne
daa
pop
lea
dec
mov
jbe
in
inc
outsl
js
push
push
inc
push
push
dec
dec
xor
imul
out
mov
xchg
mov
mov
in
sti
pop
jbe
dec
imul
mov
imul
ds
and
inc
jb
jns
sub
daa
pop
enter
in
adc
mov
aaa
call
arpl
pop
int3
cmp
outsb
adc
rcrb
arpl
mov
push
outsl
shr
in
pusha
inc
jbe
push
push
push
outsb
pushf
push
fs
and
cwtl
sub
dec
pop
ss
popl
das
add
cmp
push
sbb
and
insl
es
dec
lahf
sub
cwtl
xchg
mov
xchg
pop
pop
pop
push
push
jae
imul
pusha
insb
mov
xchg
add
movsl
jae
addr16
xor
ja
das
outsb
gs
mov
data16
and
dec
testl
into
mov
outsb
mov
push
cmp
push
scas
dec
jge
push
sbb
aas
jg
mov
imul
sbb
fistpll
xor
jae
and
jg
cmp
push
sbb
jg
test
mov
or
stos
outsb
aad
das
je
outsl
xchg
push
mov
mov
popw
stc
iret
rcrl
pop
cmp
cmp
add
ds
push
das
push
sub
inc
sbb
out
jnp
into
xor
sub
sub
ret
gs
push
cmp
je
lahf
xlat
jmp
cmp
in
mov
inc
dec
pop
pop
cwtl
cmpsb
shrl
addr16
push
jb
imul
push
lret
sahf
sbb
push
cwtl
pop
popa
pop
and
es
xor
sub
iret
sti
outsb
xchg
lock
add
repz
push
dec
inc
xor
popf
in
repz
hlt
dec
xchg
jmp
fs
inc
sub
push
sbb
inc
add
out
ficoms
push
or
add
hlt
out
jno
sti
xor
mov
push
in
call
adc
push
xor
sbbb
push
out
jns
out
add
push
out
fadds
aam
xchg
mov
jnp
out
int3
push
enter
mov
jnp
mov
lods
outsb
test
mov
push
mov
jns
push
cmp
cld
out
fdivrl
js
cmp
jns
cmpsl
stc
lock
aam
sarb
test
jns
jge
inc
and
in
pop
push
lods
sbb
sahf
out
inc
sbb
jmp
push
test
push
movsb
or
pop
aam
data16
aam
lcall
movsl
mov
repz
xor
add
ljmp
cmpsl
pop
push
ret
bound
fs
sbb
jae
jb
xor
mov
shrd
pusha
jg
sub
add
sarb
inc
push
movsl
ret
inc
inc
dec
jae
insb
inc
gs
inc
push
sbb
pop
stc
dec
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
mov
inc
push
das
adc
sub
adc
or
push
das
adc
into
mov
mov
jnp
inc
loop
mov
stc
pop
jnp
ds
pop
adc
clc
lret
sbb
enter
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
int
jp
pop
jns
ds
fdivrp
inc
dec
dec
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
incl
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
or
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
aaa
jge
divps
loop
mov
xchg
dec
aam
lods
ud0
clc
push
xor
cmpb
and
test
push
pop
pop
repnz
jmp
std
or
es
clc
shll
sbb
xchg
sub
out
scas
insb
mov
out
leave
ljmp
jg
test
fucomi
dec
push
push
push
inc
inc
or
outsb
jbe
and
addb
lock
cs
cld
ljmp
push
into
mov
push
push
dec
pop
push
adc
or
cs
ud0
incl
decb
dec
cmp
push
push
and
aas
push
pop
inc
sbb
adc
cmp
push
sub
add
pop
xor
dec
push
inc
aas
cmp
in
sti
imulb
pop
jbe
cmp
dec
cs
sub
in
fiadds
push
dec
sbb
dec
push
pop
subps
aas
push
adc
add
clts
push
cmp
push
aas
cmp
cmp
pop
lock
fucomip
insl
add
add
or
adc
adc
ljmp
sub
xor
add
adc
sti
jnp
cmp
push
pop
pop
out
add
xor
std
and
cmp
cmp
and
and
push
or
sub
std
inc
pop
add
pop
pop
push
pop
adc
dec
pop
add
push
inc
pusha
add
fnstenv
xchg
cmp
sub
or
pop
jnp
addr16
or
adc
or
or
es
test
dec
ss
mov
es
xor
ficomps
push
push
mov
pop
sbb
aaa
cmp
pop
popa
lret
cmp
sbb
inc
sbb
push
cmp
mov
xor
mov
cmp
rol
or
xor
and
mov
inc
sub
cmp
call
push
mov
push
movhps
push
or
add
loope
adc
js
sub
mov
jb
push
inc
push
test
arpl
inc
out
mov
push
pop
push
gs
mov
jg
push
xchg
push
adc
xor
pop
inc
sub
xor
cs
mov
pop
dec
adc
push
or
and
sub
push
add
xorl
and
lsl
mov
push
add
add
ljmp
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
repz
push
and
xor
inc
push
cmpsl
jns
out
mov
xor
sti
popf
data16
shl
xor
outsl
sub
popf
out
adc
push
pusha
ss
cmp
push
nop
es
jo
xor
push
inc
sub
push
push
negl
hlt
sub
sbb
scas
pop
aaa
cwtl
push
mov
sub
jl
shll
adc
push
popa
push
loopne
pop
loopne
and
and
enter
or
lret
xchg
add
imul
insl
and
bound
xor
and
push
or
mov
jo
lahf
aaa
jb
adc
push
addb
rclb
cmp
add
add
xor
mov
loopne
and
nop
ds
pop
in
loopne
pop
push
pusha
cs
cmp
push
push
pop
xor
push
pop
sub
pushf
aas
xor
push
je
mov
scas
cs
add
aam
xlat
dec
cmp
sbb
mov
adc
js
inc
cmp
stos
jbe
mov
push
pop
or
div
sbb
cs
aaa
or
jmp
sbb
fisttpll
inc
and
int
iret
fistl
sub
adc
inc
fcoms
jle
push
mov
mov
push
add
cmp
cs
sbb
test
mov
or
and
cmp
fildll
sub
sub
jnp
addl
aas
push
pop
fimull
adc
mov
sub
pop
xor
cmp
imul
cmp
ja
xor
xor
push
aas
cld
or
add
pop
pop
add
xlat
xchg
scas
jge
push
rcr
fs
cmp
shl
scas
adc
pop
push
sbb
jo
pop
test
or
fs
daa
and
sub
int
sarb
out
mov
sbb
jl
xor
jae
pop
add
insb
imul
adc
cmpsb
out
and
push
inc
inc
das
push
fadds
fdivrs
push
daa
loopne
and
sub
adc
cltd
testl
out
pop
or
push
pop
ss
and
pop
in
xor
adc
and
adc
cmp
push
jle
ds
push
mov
scas
push
cld
push
and
sbb
adc
push
shlb
aaa
loope
jns
ret
mov
or
or
mov
dec
stc
and
mov
dec
dec
adc
xchg
push
pop
adc
add
roll
xor
ja
aas
mov
or
xor
pusha
addr16
mov
or
in
and
fidivs
push
sbb
out
cmp
adc
scas
daa
stos
inc
test
int
xor
in
dec
or
das
scas
mov
push
mov
or
popa
push
xor
ds
mov
fildl
dec
iret
adc
cmp
inc
pop
xor
xor
test
das
popl
inc
sub
inc
mov
push
mov
pop
inc
hlt
add
add
loope
cmp
cld
push
adcb
insb
jne
add
imul
addl
ret
push
or
movsb
sub
push
cmp
shrb
mov
out
lock
in
sbb
aas
mov
pop
mov
lcall
cwtl
push
jne
or
es
ret
bound
xchg
push
sbb
inc
cmp
loop
ss
mov
xchg
jbe
lea
fs
into
mov
pop
push
jbe
push
add
or
or
add
jae
mov
aas
cmpl
icebp
add
adc
popa
push
je
push
daa
push
pop
cmpsb
data16
and
pushf
sbb
mov
dec
adcl
fmuls
out
mov
lcall
sbb
or
and
or
aaa
sbb
aaa
call
shll
add
outsb
clc
xor
push
inc
push
add
add
jg
pusha
sbb
mov
popa
jne
push
cmpsb
sti
ja,pt
loop
popa
xor
and
add
lea
ret
pop
das
cmp
xor
inc
mov
push
dec
dec
sub
pop
cmp
push
das
jo
xchg
or
push
xlat
ret
push
push
adc
push
or
and
rorl
push
insl
test
mov
scas
mov
std
cmc
mov
inc
incb
ret
cmp
pop
daa
js
pusha
fwait
dec
les
adc
aam
into
xchg
das
es
sub
js
leave
or
jae
out
xchg
imul
push
lds
xchg
cmp
pop
mov
orb
xchg
pop
mov
or
dec
or
push
mov
lock
pop
jmp
push
insb
outsl
jb
bound
inc
pop
insl
cmpl
insb
push
je
and
jae
popa
jbe
je
mov
xchg
jbe
jb
loopne
jnp
daa
outsb
das
mov
and
or
xor
scas
sub
dec
test
sti
movsb
add
dec
jae
notb
inc
rolb
inc
ljmp
pop
lea
out
shll
jg
xchg
scas
xor
mov
shll
mov
push
dec
adc
andnps
shrb
push
adc
fisubrl
sub
and
push
add
cmp
inc
sbb
adc
jp
push
nop
lss
push
shl
xor
or
push
push
add
cmp
cli
push
cmp
mov
sub
push
sub
xor
pop
ljmp
adc
sub
xor
jbe
mov
pop
adc
add
cmpsb
shrb
inc
push
popa
cwtl
rcrl
enter
pusha
xor
cmp
inc
pop
inc
fiaddl
dec
sbbb
loop
addr16
sbb
cmp
cli
xor
or
fs
cli
push
push
pop
or
and
mov
mov
in
xor
pop
dec
sub
loop
mov
sarb
pop
mov
push
call
and
pop
inc
sub
jl
cmp
sbb
sub
outsb
adc
sub
pop
sbb
push
inc
scas
sub
pusha
enter
inc
xchg
dec
mov
adc
add
adc
mov
aas
mov
cmp
and
shlb
icebp
add
repz
mulb
jbe
popf
insl
clc
cs
std
daa
rolb
push
cs
daa
and
push
aas
jmp
and
ljmp
xchg
xor
and
fcompl
pop
push
cmp
orl
cwtl
push
push
js
enter
insl
rclb
mov
dec
sbb
pop
enter
adc
aad
orl
mov
in
mov
iret
mov
sbb
js
lcall
cmp
pop
shl
lock
push
mov
mov
and
push
aas
ja
rolb
loopne
inc
sub
adc
sbb
aam
pop
pop
push
es
add
inc
and
sbbl
and
test
insb
sub
xor
cmp
ficompl
paddsb
cmp
pop
in
and
inc
daa
pop
cmp
or
cmp
mov
sub
jno
sub
pushf
js
cwtl
sbb
mov
mov
push
mov
push
and
lahf
add
lods
or
scas
int
shlb
pop
popa
or
sbb
mov
push
dec
adc
push
sbb
out
pop
dec
push
das
fstps
and
cmp
adc
fcomps
add
pushf
pop
mov
and
dec
negb
cli
xchg
gs
push
and
cmp
repnz
aaa
pop
sub
aas
inc
mov
sub
add
mov
or
mov
lret
cmpb
push
mov
sbb
or
add
das
inc
pop
aas
and
add
dec
aaa
or
lock
pop
pop
pop
inc
sub
cmp
sub
xor
mov
dec
dec
sub
aaa
int3
das
inc
dec
cs
sub
aaa
adc
and
mov
data16
test
lods
xor
push
loop
mov
or
add
scas
cmpsb
or
sub
jg
filds
or
inc
cmp
and
inc
add
jne
sti
mov
and
aaa
and
and
push
push
mov
inc
pop
sbb
sti
push
adcl
cs
jae
sub
popf
push
push
lcall
pop
addl
sbbb
fildl
dec
pop
jnp
adc
add
add
out
dec
outsb
sub
jmp
out
push
sbb
jp
mov
das
sbb
mov
sbb
pop
inc
sub
mov
movsl
movsl
cmp
or
aaa
adc
fstpl
jge
sbbl
adc
and
jne
mov
dec
sbb
cmp
mov
push
push
jmp
daa
and
jo
aad
sub
xchg
push
addl
cmp
and
aas
push
insl
and
dec
pop
or
repz
cwtl
or
jle
xchg
push
push
pop
aaa
xorl
cwtl
aaa
enter
fs
stc
jle
xchg
push
mov
popf
dec
xchg
scas
push
inc
addr16
lods
add
add
int3
loop
push
pop
dec
cmp
inc
pop
and
fs
lods
add
push
push
pop
and
out
jge
jo
jg
or
ljmp
sbb
xor
pop
ja
adc
push
push
stos
xor
push
popf
inc
cmp
add
adc
mov
cmp
push
scas
out
cmpsb
add
pop
pop
pop
cmp
je
or
xchg
pop
pusha
decb
pop
test
gs
dec
sub
and
push
pop
push
sub
push
shr
pushf
jp
add
unpckhps
pop
dec
cmp
loop
push
mov
test
add
xor
data16
cmp
inc
push
xchg
inc
jecxz
std
int
push
xchg
dec
sbb
cld
sbb
push
push
cs
push
and
imul
movb
sbb
insb
xor
imull
sbb
fadds
icebp
aaa
loope
fistl
mov
adc
add
aaa
lock
or
cld
lods
mov
sub
aaa
push
and
iretw
ja
fs
lcall
gs
push
rclb
lea
inc
add
pop
jns
shlb
add
pop
push
das
add
pop
pop
inc
jb
cmp
lods
dec
outsb
cmp
mov
loop
jecxz
adc
sbb
and
repz
out
andl
ds
dec
cltd
or
xchg
je
add
or
hlt
insb
push
inc
pop
or
fldcw
jns
and
sub
xor
inc
out
mov
mov
mov
mov
add
sbb
sub
fldcw
add
or
ss
push
adc
pop
add
data16
adc
push
push
dec
str
mov
and
das
divb
scas
incl
arpl
insb
out
jge
xor
mov
rolb
rcrl
ds
into
jns
mov
ss
rcl
push
nop
mov
jns
out
lock
dec
fbld
mov
push
add
jmp
mov
out
add
jb
lahf
dec
push
dec
dec
dec
push
push
ret
aaa
shlb
mov
mov
lahf
jmp
lcall
push
and
mov
add
adc
mov
mov
lods
pop
dec
movsl
enter
sti
call
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jg
aas
cmp
mov
sbb
mov
ds
ljmp
subb
jle,pn
jo
fsubs
push
loopne
insb
sbb
mov
and
nop
inc
jecxz
dec
push
pop
pop
in
pusha
sbb
jg
inc
mov
and
xor
jb
ljmp
inc
push
dec
cmp
dec
push
and
add
in
notb
sub
inc
mov
inc
inc
jb
ret
pop
shll
outsl
push
dec
imul
dec
or
adc
cmp
sahf
call
addr16
xlat
cs
repnz
cmp
xor
cwtl
xor
cmp
iret
leave
jae
inc
push
iret
and
mov
movups
scas
cmp
lock
xchg
pop
add
testb
test
loope
repnz
or
lods
pop
sbb
mov
ljmp
jnp
cmp
xor
sub
sub
xor
push
cld
xor
xor
inc
push
xor
mov
inc
out
mov
adc
rcrl
jg
add
jge
shlb
xor
movsl
das
js
mov
adc
shrb
arpl
lock
jbe
cmp
push
arpl
outsl
jne
cmp
popa
outsb
imul
cmp
push
adc
mov
and
mov
pop
jecxz
fbld
mov
xor
adc
movb
scas
inc
das
mov
test
insl
or
sub
dec
adc
xor
cmp
and
mov
aaa
js
pusha
mov
inc
iret
mov
daa
inc
push
orb
or
dec
xor
movsl
das
xchg
outsl
cs
add
sarb
sub
sub
add
dec
addb
int3
rolb
aaa
add
xchg
inc
scas
cmp
push
and
inc
inc
mov
push
xor
push
jns
sbb
cmp
mov
cmp
xchg
mov
sbb
mov
imul
mov
inc
or
and
cmp
push
shrb
xchg
dec
mov
repnz
push
cs
inc
push
pop
insb
repz
adc
movsb
pop
xchg
pop
pop
das
sti
imul
push
pop
out
xor
inc
loopne
out
cmp
pusha
int
lret
into
cmp
push
fisubs
mov
inc
push
pop
scas
push
xchg
mov
out
push
push
push
nop
lods
popa
inc
in
es
in
mov
xchg
adc
mov
jge
mov
pop
hlt
push
ds
push
push
dec
fstpt
push
es
cmpsb
mov
aad
imul
cwtl
push
test
jnp
mov
test
mov
test
lods
aaa
push
pop
sbb
scas
mov
or
cmp
cmpsl
cli
fwait
out
cmp
inc
push
aad
lahf
pop
push
mov
imul
cmpsb
push
inc
mov
lea
rclb
inc
cs
cmp
out
mov
push
out
test
ret
sahf
cmpsl
stc
mov
mov
ds
cmpsl
pop
sub
inc
nop
pop
jle
sbb
push
sahf
push
adc
daa
sbb
xlat
popa
jnp
ds
push
divb
mov
push
fisubs
pop
lcall
xchg
in
sti
pop
int
pop
sbb
sbb
sbb
jns
dec
lock
inc
pop
pop
ds
sbb
pop
shl
ds
jnp
add
xor
xchg
aaa
in
in
adc
and
xlat
lock
push
push
jns
imul
cs
push
repz
cmp
fdivl
je
hlt
or
jnp
imul
es
push
cmp
lret
sahf
out
es
jb
cmp
cltd
pop
inc
aad
mov
sahf
out
push
dec
adc
xor
out
sti
sbb
cmp
cmpsl
push
sahf
mov
clts
cld
dec
adc
fistpll
add
mov
push
out
xor
in
into
adc
push
ds
repz
scas
iret
lock
jns
out
xor
mov
out
and
push
cmp
out
sahf
out
mov
ja
cli
push
inc
pop
push
push
jle
incl
out
or
dec
sbb
inc
mov
loopne
sub
adc
and
and
rcrb
push
push
mov
xor
adc
or
add
mov
bound
push
mov
sub
mov
adc
dec
sti
das
int3
push
and
pop
sbb
enter
adc
inc
repnz
iret
pusha
or
mov
add
push
add
loop
push
data16
mov
outsl
pop
inc
sbb
sub
addr16
outsl
mov
sub
aas
inc
push
ja
rolb
sbb
or
aaa
push
imul
mov
push
cltd
jae
fisubl
push
mov
das
out
add
inc
sbb
cmp
dec
je,pn
fisubrl
insl
push
ljmp
cmpsb
dec
add
push
inc
lret
aad
add
jmp
mov
jns
push
rcr
cmp
das
push
ret
cmp
outsb
push
inc
imul
push
pop
retw
pop
test
inc
dec
or
nop
dec
js
dec
mov
ja
sbb
push
xor
cmp
pop
leave
and
hlt
pop
loopne
add
jnp
cmp
or
ds
push
das
adc
in
push
shlb
popa
insl
jo
incb
insb
je
fisttps
adc
addr16
jo
jae
es
outsl
insl
mov
mov
incb
sub
fstpl
mov
mov
cld
call
xor
xor
xor
xor
xor
cmp
int
imul
cmp
push
xor
xor
cmp
push
add
das
ds
cmp
or
or
adc
jle
sbb
sub
sbb
pop
add
scas
or
or
sub
das
add
sahf
pop
cmp
pop
push
mov
dec
jne
test
inc
inc
repz
pop
in
push
cmp
mov
sub
pop
add
addr16
push
jle
or
cmp
dec
mov
cmpsl
sub
outsb
fstp
jp
cmp
aas
pop
add
xlat
shl
sbb
aas
movsb
mov
stos
test
sahf
sbb
and
test
push
sbb
cmp
add
or
or
dec
cmp
es
mov
daa
xor
mov
bound
popf
cs
cmpsw
sub
int3
imul
daa
pop
es
test
call
filds
popa
lahf
sarb
pop
jmp
popa
dec
sub
inc
es
dec
jbe
inc
and
fcomip
sub
arpl
lock
mov
in
push
jmp
popa
adc
sub
das
adc
inc
add
adc
sub
aaa
sub
sub
sbb
pop
pop
inc
daa
pusha
mov
or
stos
popa
dec
enter
xchg
adc
test
pusha
lcall
nop
clc
adc
add
stos
fldl
mov
daa
adc
jo
lea
and
mov
movsl
xor
or
lahf
xchg
sbb
cmp
lea
and
mov
cmpb
loopne
popl
jbe
movsl
gs
lods
daa
bound
dec
loope
mov
pop
das
imull
iret
sti
pop
inc
mov
pop
adc
pop
push
pop
inc
test
push
jno
fisubrs
imul
popa
daa
pop
push
mov
das
dec
mov
js
dec
push
sub
ja
cmpsl
sbb
xor
pop
xor
inc
dec
shrl
xor
sbbl
insl
add
das
mov
fidivs
cltd
daa
aaa
or
or
sub
add
or
lods
mov
ds
and
jg
jecxz
add
fs
push
sbb
sub
ss
pop
pop
mov
pop
mov
pop
imul
insl
shll
mov
lret
gs
mov
sub
dec
outsb
or
adc
adc
jmp
jmp
dec
adc
lods
and
imul
outsb
test
xchg
outsb
sbb
dec
stc
out
and
mov
mov
dec
js
xchg
insl
and
xchg
outsb
mov
dec
fsubrs
clc
pop
test
nop
aad
outsb
add
xchg
ret
enter
sbb
in
push
test
aas
dec
xor
out
in
push
add
fstpl
je
inc
jo
repnz
push
das
pushf
daa
mov
or
pop
sub
pop
sbb
ret
ss
std
inc
mov
inc
aam
cmp
in
popf
lock
out
pop
das
sub
idivb
adc
mov
or
add
ds
js
xchg
push
add
popa
ja
jb
dec
aaa
cmp
fs
data16
mov
jb
sbb
cmp
aas
dec
imul
and
fadds
movsl
mov
pop
in
dec
test
or
test
pop
add
and
push
xlat
or
in
jne
add
rclb
mov
inc
xchg
inc
inc
push
xchg
cmp
xor
xchg
icebp
popa
fwait
test
in
test
pop
add
cmpsb
aas
cmp
shlb
into
clc
jno
ret
imul
inc
clc
aaa
or
jae
adc
add
int3
aas
dec
jo
les
rcll
loop
mov
xor
adc
mov
adc
xchg
and
hlt
push
sbb
orb
push
imulb
push
rcrb
mov
aas
dec
add
sbb
mov
adc
dec
cmp
push
sarl
dec
sbb
aas
pop
loope
push
mov
mov
add
les
or
pop
adc
add
dec
or
xchg
pop
sbb
cmp
xor
mov
roll
call
cwtl
pop
xor
sub
fiaddl
ret
data16
sbb
sbb
add
popa
lock
addb
or
sbb
ja
insb
cwtl
sub
or
notb
rcrb
mov
scas
add
bound
jmp
mov
cs
dec
add
mov
pop
adc
add
call
inc
mull
in
aaa
das
cmp
pop
push
pop
out
push
pop
jecxz
pusha
pop
pop
mulb
roll
sbb
cmp
pop
xchg
xor
je
push
dec
in
add
daa
push
xorl
pop
lock
mull
imul
or
cltd
jbe
in
sub
xor
out
in
addb
pop
dec
pop
cmp
das
inc
lahf
test
jo
stos
jo
dec
mov
jbe
fsubl
mov
xor
add
lock
pop
adc
pop
push
test
pop
adc
arpl
sahf
loopne
push
add
add
dec
cwtl
lock
dec
loop
pop
push
add
sub
inc
inc
sbb
cmp
push
filds
inc
cmp
and
sub
push
aaa
or
push
sbb
dec
sub
dec
dec
xor
lcall
sub
sub
sbb
cmp
adc
adc
cmp
adc
adc
xor
mov
push
in
dec
daa
dec
and
inc
sbb
out
push
xor
aaa
sub
cs
cmp
jb
cmp
cmp
push
push
cmp
pop
xchg
jg
mov
cmp
sub
or
push
push
inc
inc
pop
dec
push
dec
clc
lcall
push
cmp
sub
add
add
cmp
push
sbb
xor
pop
xor
xor
inc
inc
lods
fistl
or
loop
loope
cmp
scas
icebp
mov
in
test
out
ror
adc
or
fsubrs
gs
cmpsl
or
dec
incl
adc
adc
push
push
adc
fcomp
xor
and
loop
test
pop
andb
pusha
lock
ds
inc
ret
push
pop
dec
add
jb
pusha
cld
ss
cmp
stos
push
mov
sub
push
dec
in
ss
and
dec
mov
imul
push
jecxz
jp
push
or
xchg
fcom
push
lret
add
xor
push
xchg
cmpps
mov
push
sub
push
or
popf
loopne
push
push
inc
push
dec
inc
and
leave
xor
add
pop
inc
sub
mov
sysexit
sub
push
dec
pop
and
push
or
out
pushf
and
hlt
es
push
adc
dec
adc
in
dec
mov
and
and
je
jnp
sbb
dec
aaa
pop
dec
daa
pop
daa
or
mov
push
sub
sub
sub
dec
push
pop
dec
pop
push
nopl
adc
ss
ljmp
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
decl
popa
jmp
pop
fsubs
adc
jge
push
je
lcall
jb
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
pop
fs
sub
fsubrl
stc
jbe
push
ds
ljmp
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cmp
sbb
cld
insl
sub
adc
or
or
leave
ret
incl
call
sbb
mov
call
cltd
test
call
mov
mov
movsb
sbb
insb
aaa
push
dec
ja
daa
mov
mov
mov
lcall
dec
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
les
decl
push
mov
fwait
stos
flds
pop
std
push
and
push
call
loop
sub
mov
bound
push
pop
jg,pn
pushl
pop
jge,pt
inc
pop
sub
dec
insb
inc
outsl
in
jl
and
lcall
or
cmp
dec
cmp
xor
ss
dec
daa
fs
push
xor
cli
ljmp
jp
dec
inc
jns
push
xor
pop
jne
and
inc
sub
lcall
js
das
and
aaa
out
mov
pop
in
pop
imul
xor
xor
inc
pop
inc
xor
aaa
aaa
inc
int
mov
push
inc
testb
lods
scas
sub
pop
ss
lahf
test
inc
push
and
pop
and
rorb
inc
mov
adc
das
pop
xor
cmp
call
or
ja
mov
mov
jge
push
push
cmp
pop
aam
ja
imul
mov
fsubrl
scas
dec
add
in
lcall
adcl
push
add
and
xor
jle
inc
or
xchg
popa
or
xor
out
push
cmp
pop
dec
sub
sub
or
loopne
aad
adc
les
sub
outsb
adc
das
mov
insb
cs
aas
adc
dec
aaa
adc
sbb
mov
sahf
adc
les
push
sbb
stos
fsubs
inc
loop
push
xchg
or
cmp
mov
gs
push
sbb
add
adc
rclb
mov
pop
mov
push
cmp
scas
testb
dec
roll
pop
mov
push
jmp
jge
xorb
adc
mov
push
pop
mov
and
xor
cmp
pop
pushf
push
fidivrl
les
inc
mov
cmp
lock
ds
push
jge
mov
add
push
adc
inc
inc
jne
or
icebp
sbb
mov
out
sbb
outsl
add
setle
aaa
adc
enter
or
inc
adc
lds
into
adc
or
inc
fisttpll
ret
push
and
sub
addl
movups
jbe
outsb
je
xor
js
xor
imul
cmp
xor
pop
mov
dec
stos
jecxz
and
dec
mov
mov
and
pushl
insl
loop
cmp
lret
scas
adc
mov
jecxz
mov
insb
loop
popa
je
enter
jecxz
insl
lock
add
cmpsl
add
and
notb
add
or
out
push
gs
rclb
jb
pmaxsw
dec
sar
push
or
pop
push
or
ljmp
mov
xor
les
and
adc
add
add
sbb
dec
push
test
pop
push
dec
pop
and
add
push
cmp
push
out
outsl
and
sbb
dec
sbb
push
divb
mov
mov
stos
or
mov
push
mov
stos
adc
arpl
mull
adc
je
out
sbb
lret
pop
fcoml
lock
dec
jle
insl
xchg
xor
push
sbb
pop
je
notb
and
add
aad
sbb
sbb
adcl
dec
popa
dec
pushf
pop
push
outsb
sbbb
jge
popa
jb
pop
mov
or
pop
jae
inc
jne
into
or
fiaddl
xor
cmp
push
movsb
pop
push
and
or
push
test
mov
jl
add
jnp
call
or
pop
adc
xor
sbb
pop
push
pop
adc
call
adc
sub
lcall
fs
jo
enter
or
push
outsl
imul
sub
stos
fidivrs
push
pop
xchg
mov
dec
aam
lret
xlat
dec
pop
cmp
jmp
test
mov
or
push
das
scas
pop
adc
ds
xchg
in
and
push
push
xor
push
aam
or
lahf
add
cli
test
sbb
ja
xor
dec
mov
dec
xchg
and
mov
mov
dec
or
push
and
sbb
push
ja
mov
mov
jbe
sub
nop
jbe
fiaddl
push
inc
in
cmp
jb
or
sub
aaa
das
and
or
iret
scas
pop
sub
or
lds
or
outsl
jle
into
mov
mov
push
aaa
xor
inc
dec
or
call
je
cmp
add
push
ja
xlat
addr16
or
gs
insb
adc
mov
imul
jl
cmp
pop
pop
pop
xor
pop
loop
pop
pop
xchg
es
fcomps
dec
pop
dec
mov
and
pop
movsl
mov
shl
cmpsb
mov
pop
cs
aam
orb
cmpsl
mov
aam
roll
out
std
xor
pop
push
nop
pop
inc
popf
pop
adc
dec
push
rorb
pop
mov
mov
push
push
add
sub
inc
dec
pusha
or
sub
and
inc
add
or
add
sub
dec
cmp
dec
movl
lret
out
test
jne
or
dec
orl
pop
lods
mov
dec
cwtl
call
jae
push
popa
test
outsl
dec
outsl
imul
mov
xor
data16
add
mov
sbb
pop
ds
ja
add
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
xchg
addr16
push
pop
mov
gs
inc
loope
inc
loopne
loopne
movsb
gs
pop
daa
mov
jo
dec
push
dec
jb
or
and
inc
aas
dec
scas
and
and
xor
fsubs
sbb
cmpsl
aas
jle
jle
or
lahf
sub
adc
inc
add
or
inc
or
mov
inc
inc
loopne
adc
ret
jb
and
daa
push
adc
mov
adc
xchg
inc
add
push
xchg
or
fildl
dec
jl
out
emms
push
call
loopne
jl
push
iret
cmp
cmpb
ficoms
push
push
push
out
test
add
xchg
mov
xlat
mov
mov
adc
pop
cmp
dec
jmp
jnp
cmpsl
outsb
clc
sbb
fcmovbe
mov
push
pusha
or
and
pop
mov
pop
cmp
adc
out
pop
or
subl
pop
cmc
dec
add
movsb
sahf
push
dec
pop
pop
cmp
cmp
adc
xchg
adc
cmpsb
sub
cmpsl
push
mov
cmp
and
mov
add
xor
xor
jne
pusha
lahf
adc
cmp
loopne
je
or
push
cmp
sub
cwtl
sbb
pop
stos
arpl
popa
sub
sbb
sbb
add
sub
cmp
adc
outsl
sub
or
test
push
dec
pop
dec
pop
add
inc
outsl
lods
mov
dec
mov
das
mov
rcl
outsl
or
mov
imul
dec
arpl
mov
push
push
das
xor
xor
dec
and
jmp
adc
mov
outsl
sub
mov
fs
push
sti
stos
jbe
sub
inc
outsw
insl
pop
xor
jbe
xor
and
xor
push
mov
push
push
push
inc
dec
lcall
popa
outsb
jae
outsb
cltd
jne
jle
dec
arpl
gs
subb
xor
and
dec
loop
mov
xchg
mov
mov
cmp
and
dec
pop
mov
rcl
dec
dec
xchg
dec
adc
mov
xadd
sbb
inc
jg
es
addr16
xchg
inc
cmovo
pop
lock
adc
cmpb
aas
mov
nop
jo
maxps
mov
cmp
push
lods
inc
inc
mov
ss
dec
rcrl
add
and
jecxz
and
outsb
add
jl
inc
pop
cmp
jbe
xchg
daa
ds
mov
popa
addr16
and
daa
out
cmp
push
loopne
cld
and
mov
inc
iret
xchg
jbe
js
inc
aaa
sub
add
push
daa
nop
sbb
fistpl
daa
aas
out
jl
mov
dec
outsl
pusha
sbb
dec
scas
fs
inc
inc
scas
in
scas
cmp
dec
scas
in
sub
loope
scas
in
add
push
sbb
adc
daa
push
cwtl
push
sbb
jl
rorl
dec
sub
adc
dec
push
cmpsl
test
push
push
in
and
add
out
jl
dec
xchg
mov
int
jns
dec
hlt
dec
fmuls
cmp
repz
dec
ds
dec
dec
cmp
repz
dec
push
test
xor
stc
push
dec
cmp
in
in
dec
lcall
aas
inc
adc
add
sub
and
dec
pop
repnz
jnp
nop
pop
add
movsb
stc
cmp
mov
add
dec
ds
repnz
add
imul
mov
push
adcb
lahf
push
and
mov
pop
pop
inc
mov
jmp
jbe
scas
jbe
jg
mov
adc
jg
daa
push
xor
dec
mov
dec
repnz
pop
inc
add
fs
sbb
pop
or
mov
xchg
and
in
in
adc
dec
mov
and
dec
in
dec
es
dec
cmp
outsl
leave
jnp
fs
and
add
dec
dec
lods
xchg
sub
add
bound
rorl
mov
xor
in
fs
dec
test
in
pushf
xor
dec
je
dec
inc
negl
mov
add
outsl
inc
mov
popa
out
xor
jb
mov
pop
enter
outsl
leave
mov
or
fildll
test
pop
xchg
and
in
push
cmpsl
cmp
pop
dec
loopne
jl
xchg
add
dec
sbb
mull
in
aam
in
js
popa
sub
mov
push
lahf
mov
add
sub
leave
adc
add
jbe
out
dec
ja
xchg
pop
jb
xchg
aam
xchg
pop
insb
in
sbb
out
add
repnz
outsl
add
mov
fbld
jo
or
sbb
enter
and
popa
sub
push
jbe
js
pop
scas
fadds
xchg
add
sbb
loope
mov
call
dec
or
pusha
jne
cmpsl
and
in
inc
xlat
push
aaa
push
lock
push
scas
fs
fs
popa
fstpt
cmp
je
jl
addr16
mov
add
aaa
insl
in
lds
enter
or
mov
push
sti
data16
mov
push
jg
push
inc
push
push
fisubrl
imul
push
xchg
sbb
int
push
mov
pop
push
repnz
sbb
add
fidivs
xchg
push
mov
push
divl
sbb
rclb
outsl
cmp
popa
push
push
outsl
jg
cmpxchg
pop
xor
mov
jne
daa
testl
je
test
push
push
fidivrs
cmp
sbb
out
or
loopne
push
seto
cmp
je
loopne
pop
in
push
adc
or
push
lahf
xlat
add
xchg
and
fisttpll
int
push
daa
add
or
addr16
fdivrs
push
jo
cmp
and
cmp
mov
mov
testl
and
add
out
mov
add
cmp
lock
scas
sbbb
push
into
push
xchg
popa
addl
mov
dec
in
shlb
xchg
and
aaa
and
outsl
add
js
and
and
push
out
outsl
xchg
xchg
pop
leave
add
iret
add
pop
lods
pop
mov
add
loopne
add
adc
test
xchg
or
pop
inc
dec
push
add
sub
das
and
and
push
jb
jge
adcb
add
ss
xor
stc
cmp
or
sbb
push
jb
loope
dec
push
sub
aaa
add
dec
leave
adc
xchg
push
mov
addb
fcmovb
mov
lods
xlat
loopne
lods
add
xor
daa
and
cmp
scas
in
data16
or
mov
xchg
dec
push
fiaddl
js
je
pop
push
enter
jns
pop
cmp
ss
outsl
cmp
loope
out
mov
adc
or
push
cmpsl
lds
mov
and
popf
nop
pop
xor
pop
adc
fcoms
add
in
lods
pop
or
jb
or
je
nop
xchg
pop
and
mov
add
roll
pop
lahf
popa
orl
push
pop
pop
pop
scas
fadds
xchg
add
sbb
mov
add
mov
pop
addr16
pop
xchg
push
push
or
cmp
out
scas
in
xchg
daa
or
int
in
push
and
mov
es
push
xchg
push
pusha
das
sub
mov
pop
pushl
push
add
lcall
add
fadds
call
and
jo
inc
fsubl
sbb
sub
jbe
pop
add
push
ja
fs
mov
jl
xchg
mov
jmp
scas
pushf
data16
xlat
sbb
loopne
data16
pop
iret
lds
pusha
fstpt
push
aas
mov
addr16
fdivrs
daa
pusha
pop
fwait
subb
jo
jl
xchg
push
insb
xor
mov
sbb
aam
xor
add
inc
mov
xor
loopne
push
inc
jl
sahf
out
lahf
ret
adc
cmp
sarl
push
outsl
pushf
mov
loop
push
sub
int
pop
es
push
pop
int
jns
push
movsb
lret
pop
insl
lcall
and
ds
rep
add
mov
lahf
out
inc
mov
ds
repz
je
jecxz
pusha
push
out
cmp
outsb
mov
jns
jns
mov
sahf
out
cmp
iret
adc
imul
cmp
ds
repz
ret
gs
int
adc
cmp
mov
ds
mov
cmc
jl
cmpsl
stc
xor
iret
out
and
lcall
mov
imul
sarl
lods
js
shl
mov
jmp
call
mov
loope
jo
jns
dec
repz
sub
js
xor
out
into
push
jae
lret
repz
out
je
jnp
push
jne
imul
jbe
jne
sarl
fstps
ja
fdivr
repz
mov
jl
jns
dec
lods
clc
nop
jnp
push
inc
jl
lcall
push
mov
out
testl
or
lcall
pop
or
out
jl
xorl
dec
repz
adc
cmp
repz
xlat
jl
cmpsl
stc
sbb
xchg
out
jmp
mov
lcall
loope
mov
frstor
or
mov
cmp
add
frstor
lahf
out
lcall
nop
int
imul
dec
xchg
sbbl
add
repz
popa
xchg
lods
stc
sbb
cmp
ds
sahf
push
adc
cmp
out
call
js
ss
out
divl
loop
pushf
arpl
mov
mov
jl
mov
movsl
lcall
clc
push
cmpsl
sahf
cmp
repz
and
jg
in
xor
cmpsl
stc
sub
inc
iret
mov
pop
stos
movb
cs
jns
lods
popa
mov
and
cmp
inc
mov
mov
shlb
fwait
out
jl
jo
push
and
mov
insb
cmp
shll
mov
fidivrl
pop
idiv
inc
aas
inc
es
je
shr
and
int3
or
leave
xorl
mov
daa
xchg
and
inc
mov
insb
inc
push
aas
js
leave
mov
or
mov
inc
aaa
inc
mov
pop
jb
jns
adc
mov
mov
outsl
mulb
inc
out
lock
aas
mov
lds
int3
jg
push
leave
mov
fisubrl
pop
aas
jo
inc
pop
jg
and
jbe
dec
xor
push
pop
insl
jb
jns
or
adc
pop
bound
fimull
mov
or
xlat
pushf
cmp
in
adc
test
ss
mov
mov
nop
pop
xor
aas
mov
iret
dec
and
movsb
fbld
cmp
in
adc
dec
insb
in
ss
pushl
divl
push
pop
in
mov
inc
lcall
pop
xor
sbb
pop
scas
iret
jne
mov
loop
mov
test
add
insb
mov
pop
insb
sbb
daa
xchg
lahf
or
inc
mov
or
out
dec
out
add
mov
jl
int
pop
pop
in
out
lods
sub
mov
push
pop
hlt
es
dec
repnz
ds
incb
addr16
shlb
and
in
and
push
fmulp
repnz
out
and
out
mov
pop
leave
leave
movsb
les
adc
push
inc
xchg
xchg
xor
fs
aaa
and
into
repz
sub
add
xchg
cmp
pop
aas
push
xchg
jb
jb
pop
fs
je
jbe
pop
mov
cs
sarb
sub
pushf
in
cmp
dec
jb
imul
xchg
sub
adc
in
andb
push
call
xchg
cs
xor
pushf
lcall
pop
push
les
push
mov
cmp
aam
enter
mov
xchg
push
inc
or
inc
outsl
add
xchg
iret
enter
or
cmp
aad
jmp
lock
cmp
push
mov
push
hlt
add
push
scas
aam
and
in
xor
xor
jb
add
add
scas
pop
js
in
das
inc
push
inc
push
push
pop
push
out
sahf
aaa
addr16
add
jge
out
sahf
add
sahf
in
out
or
and
inc
mov
push
std
inc
nop
and
jns
insl
and
inc
insl
sbb
es
cmc
addr16
xchg
sbb
push
mov
pop
mov
xor
dec
pop
dec
sahf
fcmovne
push
pop
pop
xchg
cmp
cmp
cmpsb
jae
cmp
add
xchg
mov
and
ficoms
out
idiv
in
mov
je
pop
sub
sbb
jb
pop
cmp
pop
dec
pop
ja
xchg
dec
enter
outsb
mov
je
jl
test
mov
mov
pop
outsl
pop
in
push
push
in
pop
leave
and
mov
pop
cvtps2pi
pop
loope
repnz
xchg
add
inc
rcll
inc
sbb
inc
in
xchg
daa
pop
jo
jo
addl
mov
std
popl
mov
cmp
enter
and
movl
fimull
sub
cmp
mov
addr16
repnz
daa
outsl
ja
decb
imul
xchg
test
jg
in
inc
repnz
push
dec
add
adc
scas
stc
pop
aaa
leave
and
dec
inc
nop
jb
push
in
mov
iret
mov
cmp
pop
cs
pop
fildl
pop
fdivs
xchg
pop
mov
xchg
jae
addl
or
pop
and
js
push
pop
pop
push
rcrb
jecxz
out
pop
pop
pop
pop
pop
stc
pop
add
minps
pop
sahf
out
pop
and
cmp
jns
out
inc
or
pop
out
sahf
out
addr16
jb
sahf
out
sahf
jge
mov
xchg
adc
out
sahf
adc
out
push
aad
shl
jns
jecxz
icebp
sbb
int3
fistps
shlb
pop
xor
dec
mov
dec
pop
jb
nop
adc
push
test
cltd
les
fists
cmp
pop
mov
mov
out
inc
daa
js
js
je
inc
push
add
jne
sbb
xor
pop
adc
cmpsl
or
out
outsl
in
fadd
inc
out
out
add
push
add
daa
adc
cmp
xor
xchg
pop
jbe
push
mov
popl
xchg
leave
inc
repnz
movsb
ret
call
aaa
add
xchg
mov
ja
xchg
sbb
cmp
pusha
inc
ja
jbe
jb
cld
pop
test
sbb
scas
in
sub
std
push
fmul
in
or
in
movsb
lods
dec
dec
xor
and
xchg
pusha
cmp
pop
mov
push
add
or
mov
sbb
and
leave
xor
jb
popa
xor
pop
test
popa
xchg
js
xchg
add
call
and
or
sub
scas
mov
mov
jg
add
jae
repnz
leave
xchg
out
out
daa
nop
mov
negl
incl
bound
and
and
es
xchg
push
jb
pop
jp
jp
sub
or
jmp
push
xchg
jp
push
rcrb
pop
mov
testl
arpl
inc
fwait
in
arpl
arpl
mov
xor
xchg
jl
push
inc
jnp
xchg
dec
add
or
out
es
jl
push
maskmovq
idivl
cmp
pushl
cmp
fs
addr16
dec
je
fs
pop
fs
fisubl
orl
mov
iret
lods
mov
mov
je
xchg
dec
jge
jge
cmp
test
gs
jge
das
jno
xor
cmp
xchg
xchg
gs
gs
xchg
add
and
add
js
mov
jle
pop
leave
add
repnz
pop
loope
fs
mov
cmp
pop
mov
inc
outsb
scas
in
decw
jg
pop
mov
dec
dec
add
in
imul
jg
xchg
in
in
fwait
mov
in
in
mov
shlw
in
in
data16
jmp
repz
fsubp
in
add
push
adc
dec
dec
dec
dec
push
or
dec
dec
or
or
dec
dec
dec
dec
push
add
dec
dec
add
add
and
mull
cmp
fstpt
xchg
pop
addr16
addr16
addb
adc
roll
in
ja
das
xchg
out
push
and
addr16
push
inc
scas
jne
push
fadds
jb
or
xlat
jg
xchg
xchg
push
xchg
aas
lahf
xcrypt-ctr
cmpsl
push
push
scas
ss
mov
push
mov
inc
shl
or
loopne
fwait
mov
imul
imul
push
pusha
adc
int
xchg
jb
jb
fnsave
push
jb
jbe
dec
or
mov
jmp
jae
lcall
xchg
mov
dec
stos
add
push
loope
lahf
xor
dec
xor
movsl
add
movsb
imul
scas
repz
leave
push
enter
push
and
les
daa
call
pushf
fsubrl
in
cmc
incb
std
cmp
xor
push
adc
js
and
push
cmp
and
xchg
iret
or
test
push
sub
push
mov
mov
pop
mov
xchg
leave
rcr
pop
loope
add
mov
das
stc
pop
popl
test
dec
or
test
test
pusha
imul
jae
jle
jae
cmp
mov
xchg
imul
enter
imul
sbb
imul
sbb
sbb
insb
insb
insb
insb
sbb
sbb
insb
insb
insb
insb
jns
js
insb
push
testl
and
and
xchg
jmp
jb
loope
xchg
xor
insl
jbe
lea
insl
pop
pop
popa
punpckhwd
jns
sahf
out
push
jns
or
leave
in
in
xchg
setns
ds
or
daa
lcall
sbb
enter
outsb
outsb
cmp
dec
mov
jo
out
cld
in
in
mov
in
in
sarb
outsb
outsl
shrb
leave
cltd
mov
outsb
pop
loopne
sub
outsl
call
leave
and
sbb
jb
outsl
xchg
xchg
pop
leave
jae
in
ror
outsb
daa
ja
push
xor
adc
jo
addr16
xchg
dec
jo
inc
aaa
jb
jo
push
pop
and
xchg
rorb
mov
mov
jb
xchg
out
lahf
stos
mov
enter
dec
shlb
jo
cmp
loope
in
jo
jo
or
cmp
jno
sub
inc
mov
jno
jno
jno
jb
enter
jno
jno
jno
rcrl
xorb
or
xchg
jno
scas
xchg
addr16
mov
dec
iret
lock
dec
dec
sti
push
jb
jb
xchg
xchg
jb
mov
iret
leave
repz
xchg
mov
mov
enter
xchg
xchg
hlt
pop
mov
lahf
fucomi
mov
and
jmp
arpl
pop
xchg
jae
inc
pop
mov
jae
outsl
push
xchg
arpl
add
add
jb
jae
jae
xlat
mov
jae
lea
and
in
fs
add
pop
and
pop
and
bound
nop
sbb
mov
hlt
dec
mov
addr16
out
fs
ror
mov
cmp
cmp
ja
lea
cmpsb
js
fwait
bnd
add
or
jb
push
add
mov
jne
mov
das
sub
or
sahf
out
es
cmp
and
or
jne
cmp
jne
insl
pop
mov
scas
into
inc
repnz
out
fs
fsubl
adc
in
icebp
inc
ja
jns
ret
aas
orb
gs
insl
jbe
ja
fcmovne
inc
nop
cwtl
filds
call
mov
push
hlt
cld
cmp
jae
pop
ja
adc
add
dec
sahf
ja
xor
mul
and
pusha
push
in
fs
das
mov
mov
mov
rcrb
add
sbb
in
movq
js
js
js
mov
js
js
fistl
xchg
jge
insl
mov
setbe
cmpsb
inc
pop
ss
cs
js
js
outsb
pop
leave
mov
enter
out
jns
or
icebp
and
xchg
sub
xchg
xchg
xchg
jns
jns
jns
jns
xchg
xchg
xchg
xchg
jns
jns
jns
jns
xchg
xchg
xchg
xchg
jns
jns
jns
jns
in
insl
xchg
jns
pop
ud2
pop
or
in
in
or
push
in
in
add
jns
out
movsl
sbb
sahf
mov
mov
xchg
out
int
aad
and
jae
repnz
in
and
in
cmp
and
jp
das
xchg
sub
jp
xor
aam
fs
ja
mov
lea
add
jp
lar
dec
mov
lahf
movsl
jp
xchg
aas
leave
repz
es
fdivrs
xchg
fcomi
psubsb
cmpsl
push
je
sbb
xchg
and
jnp
jnp
out
faddl
das
inc
dec
push
jl
iret
jnp
dec
push
push
push
out
sahf
out
jae
pusha
or
jo
cmpsl
fisttpl
pop
prefetch
add
inc
adc
in
in
and
es
iret
add
clc
jb
adc
add
jl
jl
and
cmp
mov
or
popa
xchg
cmp
dec
repnz
repnz
jl
jl
dec
inc
sub
adc
xchg
xchg
fstl
cmpsl
inc
xchg
jg
mov
in
addb
mov
shll
mov
in
lcall
xchg
xchg
out
rorb
rcl
ss
mov
jl
mov
dec
popf
or
or
mov
ja
jge
cs
out
incl
xlat
dec
dec
js
decl
mov
aam
loopne
repnz
mov
les
fisubrs
jle
push
aas
cmove
jle
cmpsl
leave
leave
leave
leave
jo
addb
mov
nop
jle
loope
add
mov
pushf
pop
ret
jle
mov
jle
and
pop
stc
int3
or
mov
rcrb
outsl
pop
stc
incl
jg
inc
lahf
fistl
iret
add
cltd
add
and
cltd
xchg
mov
rorb
fdivrs
jg
sbb
push
xor
jg
mov
xchg
xchg
xchg
xchg
mov
bnd
add
aam
push
mov
cmpsl
testl
les
aam
leave
repz
orb
inc
iret
repz
dec
add
pop
add
gs
jne
popf
cmp
repz
sahf
out
pop
popf
or
sahf
out
lods
adc
dec
cmp
orb
fwait
lret
addl
call
iret
repz
or
adc
sbb
cmp
jnp
push
jl
sahf
jl
pop
and
inc
mov
pushf
push
scas
pop
push
loopne
mov
imul
mov
fldt
les
mov
iret
and
xor
push
adcb
or
fs
ss
mov
dec
andb
popf
outsb
fnstsw
cltd
jp
daa
mov
xchg
jns
in
add
orb
cmovle
xchg
out
int3
call
dec
clc
or
jns
push
stc
cmpsl
or
cmp
daa
inc
sahf
dec
orl
in
jno
scas
out
outsl
psllq
fidivrl
jne
enter
fwait
outsl
repnz
inc
add
jo
pop
dec
rcrb
imul
sbb
popf
pop
push
pop
ficoms
push
add
lar
in
push
scas
testb
cmp
push
push
or
push
test
call
test
or
push
test
jp
addb
fucom
jns
xchg
sysret
lcall
stos
pop
mov
jns
in
push
test
or
cmp
mov
adc
test
test
lahf
xor
test
test
test
test
add
inc
test
inc
cmp
dec
test
jno
jae
into
jns
jns
add
xchg
jl
pop
pushf
iret
add
mov
daa
movl
addb
repnz
xchg
pop
mov
jb
xor
adc
add
add
mov
inc
xchg
dec
inc
into
pop
jo
fistpll
xchg
pop
xchg
out
cmpsl
push
and
dec
jbe
adc
fistpll
mov
test
xchg
xchg
and
xchg
sbb
jb
xchg
pushw
or
iret
repz
jl
xchg
jb
shl
xchg
nopl
sbb
cmp
mov
sbb
fbld
leave
and
cld
mov
push
mov
pusha
mov
enter
mov
js
inc
push
sub
push
mov
xor
iret
sub
fdivs
daa
cmp
inc
push
cwtl
pop
mov
daa
daa
daa
daa
aam
ljmp
pop
push
pop
add
or
and
pop
sub
in
push
cltd
dec
mov
pusha
ja
adc
aas
nop
jmp
jb
mov
rorb
enter
fadds
dec
cmp
loopne
mov
frstor
xchg
jecxz
inc
mov
add
loopne
daa
daa
mov
loop
inc
push
pop
push
pop
mov
inc
mov
mov
inc
mov
pop
add
pop
mov
test
mov
flds
je
mov
add
adc
mov
dec
lock
aas
mov
mov
dec
and
nop
jg
paddsw
in
mov
pop
and
mov
loop
ljmp
push
pop
mov
push
mov
repnz
mov
mov
or
adc
adc
jp
jns
sub
xor
cmovb
sbb
cmpsl
ucomiss
mov
insl
mov
out
xchg
loopne
xchg
mov
movd
xchg
int
adc
mov
mov
cmc
jbe
cmp
rcl
dec
fimull
loop
in
mov
mov
push
or
lea
or
inc
daa
lea
inc
mov
lea
lea
xchg
xor
push
xchg
or
repnz
jne
das
jp
addl
push
aam
or
jnp
add
push
xchg
dec
mov
test
jns
push
test
cmp
mov
paddusw
in
sahf
out
add
add
fisttpll
add
cmpsb
std
lea
pop
or
stos
mov
insb
mov
or
pop
push
push
xlat
iret
jp
jbe
jbe
seta
add
popf
pop
mov
and
inc
das
xor
clc
add
jns
es
stos
sub
shrb
mov
in
mov
add
lods
daa
loopne
das
fisubl
jg
negl
nop
cmpxchg8b
add
ja
jne
xor
je
dec
lsl
mov
flds
fs
insb
nop
and
nop
decl
subb
nop
nop
jb
fsubl
out
rolb
daa
fnsave
rcr
dec
sgdtl
leave
add
aas
call
lock
push
push
xchg
das
or
pop
mov
mov
cs
sbb
push
aaa
rcr
fistps
inc
lods
inc
repnz
scas
nop
mov
shll
leave
stos
incl
inc
into
jo
fistpll
insl
in
xchg
xchg
rclb
sahf
out
fsubrp
push
pop
lock
or
cltd
mov
dec
sahf
addr16
push
or
sbb
cmp
in
in
sub
xor
cmp
imul
adc
call
and
setb
ja
fisubrl
mov
pushl
and
in
leave
iret
add
lock
es
int3
inc
xchg
xchg
mov
sahf
je
jo
js
xchg
pushl
xchg
mov
add
loopne
call
lock
xchg
jle
mov
push
push
sub
and
movb
xchg
aas
inc
daa
iret
dec
mov
sidtl
push
xchg
andb
xchg
inc
adc
fldt
das
xchg
xchg
jl
test
lfs
xchg
test
dec
ror
xchg
add
add
adc
cltd
push
push
inc
adc
jne
sbb
das
mov
out
add
outsb
and
mov
das
mov
dec
ret
xchg
outsl
lret
xchg
lahf
or
mov
xchg
or
cld
xor
mov
daa
xchg
cmp
xchg
pop
pshufw
adcb
mov
xchg
xor
mov
pop
cltd
dec
push
in
xchg
push
sahf
out
sahf
add
add
dec
leave
repz
dec
push
outsl
pop
push
ja
out
fisubs
push
or
or
dec
aaa
jns
orb
prefetchwt1
push
pop
lcall
push
dec
enter
pushf
pushf
fsub
icebp
stc
mov
int3
sahf
sbb
in
ss
cwtl
pop
ss
inc
in
in
test
in
jmp
in
jb
je
cwtl
mov
sbb
mov
push
adc
ja
adc
push
and
cs
lock
and
cmpsl
pop
jb
stos
mov
jo
mov
mov
inc
and
icebp
ret
lcall
inc
repnz
in
xchg
add
call
fwait
das
fwait
cmp
es
add
lahf
addr16
mov
fwait
xchg
xchg
xchg
xchg
xchg
lcall
mov
sbb
sahf
mov
pushf
xorb
pushf
das
ss
xchg
xchg
xchg
movq
pushf
inc
pushf
dec
pushf
push
jns
xchg
xchg
pushf
pop
pushf
pushf
outsb
mov
cmp
in
jle
push
xchg
push
repnz
fimuls
cmp
jns
fstps
pushf
mov
subl
pop
leave
rcrl
in
mov
bswap
clc
pushf
add
push
popf
push
popf
push
popf
es
in
in
xor
dec
popf
in
in
push
popf
pop
popf
addr16
outsl
popf
loop
in
ja
jg
mov
in
outsl
mov
popf
jns
in
rcrl
fsub
jns
out
out
out
and
outsb
add
iret
mov
daa
sub
repz
sub
or
sub
in
cvttps2pi
adc
dec
pop
sahf
xor
nop
inc
negb
fsubrs
pop
cltd
add
push
das
test
popf
push
sarb
mov
sahf
popf
pushf
jl
lahf
sgdtl
pop
mov
or
mov
lahf
daa
daa
iret
mov
add
andb
daa
daa
fwait
mov
out
xchg
daa
daa
out
pop
mov
xchg
sub
jbe
mov
adc
bswap
leave
in
in
subl
mov
fstpl
in
in
iret
leave
enter
add
out
cmp
ss
jns
outsb
mov
packuswb
outsl
ja
dec
sahf
out
xchg
mov
mov
jns
loope
sub
repnz
movhps
das
pop
outsb
daa
iret
jae
xor
aaa
cltd
loop
repz
xor
dec
mov
sub
test
mov
nop
mov
pop
xchg
pop
test
mov
fsubrl
clc
iret
lock
fldz
xlat
and
insl
mov
mov
mov
add
daa
pop
leave
fs
icebp
jb
jmp
and
push
add
inc
dec
dec
sahf
out
add
add
pushf
fcompl
js
or
ud2
cltd
or
repnz
mov
pop
mov
daa
iret
jae
adc
hlt
adc
pop
js
decl
movsl
outsl
adc
jns
and
sub
sbb
cmp
sbb
sbb
push
bound
insl
js
sahf
xchg
out
orl
gs
movsl
movsb
movsl
scas
movsl
mov
inc
ljmp
loopne
add
mov
aam
jo
mov
adc
push
cmpsb
pop
punpcklbw
add
adc
in
clts
outsb
cmpsb
lret
dec
js
das
andb
jns
nop
das
cwtl
push
or
femms
jns
out
ds
mov
mov
rorb
enter
repz
in
lar
pop
cmp
into
call
subl
inc
fildll
mov
js
sbb
mov
cmpsl
dec
sahf
ja
cmpsl
and
add
xor
adc
dec
cmp
inc
cmpsl
cmovnp
rol
outsb
fldt
xchg
xchg
mov
xchg
cmpsl
push
sub
in
in
xor
xchg
pop
and
leave
flds
int3
sahf
add
adc
test
pop
and
xchg
int3
aas
addr16
paddusb
ja
push
add
addr16
leave
repz
outsl
push
ja
sbb
es
ret
stos
roll
ja
jl
aas
out
jb
aad
in
add
and
xchg
mov
sbb
xchg
imul
push
add
dec
push
test
aad
mov
iret
sub
pop
xchg
add
repz
cmp
cmpsb
push
scas
dec
and
call
ret
fnstcw
cmp
mov
stc
das
ficoml
cmpsl
and
fcmovne
xchg
and
xor
cmp
popf
dec
and
add
les
in
cmp
stos
jg
sahf
xchg
mov
jae
cmp
mov
scas
daa
iret
add
loop
cmpsl
sub
les
stos
fisttps
and
and
sub
xor
into
leave
inc
dec
out
stos
outsl
or
dec
sub
js
sbbb
nop
negl
cmp
and
cmp
rcr
or
pushf
int3
sahf
dec
incb
lods
femms
push
cmpsb
jecxz
repz
lods
iret
push
cmp
jbe
cmpsl
dec
xchg
add
inc
repnz
add
fildl
jo
cmp
mov
iret
add
shrl
push
sbb
mov
xchg
mov
lods
pusha
lods
sahf
ja
rcll
mov
add
loopne
mov
scas
or
sahf
out
push
add
in
and
inc
scas
in
in
dec
scas
pop
scas
fs
outsl
scas
lret
fstpt
test
lret
lret
lret
fwait
scas
cmpsb
scas
mov
mov
lret
scas
rorb
pop
fstpl
call
sbb
pop
pop
rorb
scas
pop
adc
pop
scas
sub
xor
das
xchg
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
pop
push
adc
sahf
sub
dec
sub
dec
popa
push
das
insb
movsb
fdivrl
rdmsr
aas
ja
jns
in
orb
push
ss
mov
iret
cmp
cmp
repz
iret
cmp
cmp
in
lock
sti
out
jns
iret
inc
push
mov
adc
sbb
iret
repz
daa
inc
xor
cmp
iret
repz
repz
dec
imul
jg
mov
out
sahf
out
mov
daa
mov
mov
pop
int3
xlat
loop
repnz
in
push
clc
daa
and
sbb
xorl
cmp
out
inc
sahf
popa
inc
mov
mov
jns
out
add
fimuls
ja
push
pop
ror
adc
dec
sbb
repnz
cmp
outsb
push
fmuls
loopne
into
hlt
jbe
mov
clc
mov
sahf
out
wrmsr
push
cmp
repz
xchg
xchg
test
mov
out
jns
add
out
in
add
test
or
xchg
cmp
pop
int3
int3
mov
mov
mov
add
jmp
clts
and
in
in
pusha
push
lock
cmp
inc
or
gs
mov
mov
mov
int
xor
dec
mov
cwtl
leave
leave
add
test
test
iret
sarl
fmull
xchg
inc
pop
enter
repz
lret
daa
loopne
sti
mov
mov
enter
mov
mov
mov
into
sub
push
iret
mov
daa
iret
rcrl
pop
push
add
repz
mov
jne
addb
repz
mov
xchg
or
cmp
mov
ret
cmp
cmp
jecxz
adc
mov
adc
sbb
cs
jns
out
sbb
push
jae
dec
sahf
sbb
push
popf
cmp
leave
addr16
jge
daa
mov
out
and
fcmovne
rep
outsl
mov
das
push
inc
aaa
ret
loopne
imull
xchg
into
jg
repz
sub
add
leave
repz
add
push
add
popa
imul
mov
repnz
int
fsub
push
fucom
jns
push
out
pop
stc
syscall
lret
das
insb
daa
or
sbb
rorl
mov
sbb
cmp
mov
movups
adc
repz
adc
pop
adc
cmp
jb
pop
mov
in
sahf
sbb
aaa
jns
and
emms
repnz
and
stc
pop
dec
sahf
and
jmp
pop
divb
add
sub
sahf
out
sahf
pop
sub
sub
add
pcmpgtb
mov
aas
loop
or
pop
daa
loopne
inc
jmp
jo
lock
add
mov
pop
xchg
push
add
mov
push
rolb
repz
lahf
in
scas
or
outsl
mov
iret
or
add
dec
femms
pmuludq
in
cmp
add
adc
jb
stc
sub
pusha
mov
mov
mov
add
pushf
cmp
xchg
add
repz
mov
mov
dec
mov
jle
cmp
dec
dec
out
lahf
idivb
enter
mov
jle
sub
sbb
xor
mov
mov
cs
dec
sahf
out
add
dec
ds
ret
bswap
out
or
shll
cmp
cltd
lock
push
mov
enter
mov
add
cmp
or
loope
es
dec
or
push
mov
pop
mov
jg
dec
sahf
xchg
outsb
sysret
adc
dec
mov
fcmovne
repz
rcrl
int3
fidivrl
sahf
out
sahf
in
lock
lea
adc
and
and
out
jns
and
xor
cmp
repz
leave
repz
jb
jge
mov
sub
lds
loopne
mov
jb
mov
push
mov
push
movhps
push
push
pop
xchg
out
jns
or
dec
dec
outsb
mov
cmovbe
dec
push
pop
jns
out
pcmpgtd
outsb
adc
pop
fucom
jbe
out
jle
xchg
outsb
mov
mov
mov
xchg
out
sbb
je
out
mov
push
out
sahf
ja
push
and
and
in
dec
sahf
and
out
and
mov
lahf
out
es
mov
out
ss
mov
sub
jns
out
ss
sub
xchg
out
dec
xor
pcmpgtd
in
outsb
pop
outsb
xor
jle
jbe
mov
push
cmp
leave
in
cmpsb
pop
scas
mov
mov
bswap
mov
mov
jnp
sub
push
jnp
mov
pop
in
in
push
test
test
dec
inc
xchg
in
add
push
fcoms
mov
aas
mov
fwait
and
add
jl
loopne
add
ljmp
shrl
xchg
xchg
xchg
and
inc
inc
and
xor
inc
repnz
ftst
daa
cmp
or
stos
add
add
xor
sub
hlt
inc
inc
xlat
ja
aas
inc
push
repnz
xor
sbb
aas
sub
inc
or
push
xchg
xchg
inc
aaa
xor
cmp
shll
fcomps
out
pop
in
loopne
fcom
sarb
out
enter
mov
cwtl
pop
mov
iret
repz
je
insb
push
fs
pop
push
dec
out
daa
iret
inc
cmp
push
sub
dec
repz
adc
add
xlat
lock
mov
repz
int3
rorb
ja
loop
out
jo
pop
repz
push
push
add
sbb
repz
add
or
popf
pushf
cmp
or
aaa
or
in
sub
scas
adc
in
movsb
fwait
mov
and
leave
inc
inc
push
addr16
das
push
jo
push
mov
insl
popf
cmp
jae
and
jb
mov
andb
cmpb
dec
sahf
ja
test
mov
fbld
add
sbb
data16
popa
popa
dec
or
mov
andl
pop
mov
push
and
and
call
inc
sbb
pop
test
or
pusha
ljmp
movsb
add
in
lods
pusha
cmpb
cmpsb
fisttps
mov
sbbl
mov
xchg
inc
mov
popf
pop
rcrb
mov
sbb
out
ja
stc
in
call
adc
push
cmpsl
in
pop
fidivrl
xor
fcomp
loopne
jb
mov
xchg
jle
in
inc
les
fcomps
pop
cwtl
lret
adc
cmp
inc
mov
jle
sub
inc
call
fdivrs
insb
sub
incl
xchg
insb
xor
das
mov
pop
adcb
pop
aas
jg
sbb
filds
iret
repz
or
or
sahf
out
adc
add
repz
adc
fstpl
pushf
sbb
repz
cmp
add
js
fldcw
pop
mov
jl
fimull
and
sub
inc
mov
fdiv
cmp
mov
jns
jp
jno
out
push
cld
mov
incl
lods
lea
add
call
fsub
outsb
loopne
add
inc
pop
shlb
jne
mov
lcall
mov
cwtl
mov
jae
xorb
addr16
push
push
mov
inc
or
adc
out
and
pop
pop
imul
cs
cmp
xor
insl
sub
scas
pop
xor
inc
inc
sgdtl
dec
push
xor
add
daa
inc
xchg
shl
inc
xchg
es
les
enter
sbb
mov
adc
repz
ds
push
test
repz
idivl
adc
jo
push
push
push
pop
adc
insb
and
push
mov
test
jl
pop
pusha
out
jns
negl
je
pop
adc
push
cmp
repz
dec
push
inc
pop
repz
repz
xor
xor
repz
and
and
push
cltd
cmp
clc
xchg
cltd
jnp
jg
movups
daa
xor
sub
sahf
mov
cld
xorb
inc
cmp
xorl
jg
cmp
pop
repz
repz
mov
repz
jge
out
add
dec
insl
add
shll
xchg
repz
rorl
jae
das
push
dec
scas
push
fs
mov
mov
add
enter
or
ret
mov
inc
ds
xchg
cwtl
push
and
aas
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
popf
imul
sbb
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
in
adcl
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
jg
ljmp
push
daa
cmp
mov
popf
sti
jmp
stos
push
inc
mov
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
call
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
imul
and
add
out
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
lcall
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
cmp
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
jmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
jmp
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
or
enter
fmuls
dec
pop
push
andl
sub
div
in
in
ja
jnp
mov
xor
popa
push
out
mov
lcall
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
sub
mov
sub
mov
sbb
dec
jno
repz
test
jge
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
gs
decl
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
call
in
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
jg
lods
jecxz
fdivs
jne
filds
or
shrl
push
ficoms
incl
popa
sarb
and
mov
cltd
xchg
mov
mov
or
pushl
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
decl
push
stos
mov
push
loope
or
insl
or
call
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
inc
hlt
or
fnstenv
adc
mov
mov
bound
ficoml
repz
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
pushl
ret
movsb
sti
hlt
shrl
imul
mov
call
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
xchg
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
mov
orl
mov
in
mov
mov
add
lcall
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
test
push
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
dec
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
jg
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
ljmp
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
aaa
std
mov
rclb
or
add
mov
das
es
incl
cld
mov
mov
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
decl
pushf
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
call
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
lcall
pop
es
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
decl
adc
sahf
gs
clc
sar
imul
push
js
or
sar
call
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
push
scas
fcompl
fldenv
filds
out
push
aaa
pusha
mov
fidivrs
mov
jmp
xchg
sbb
mov
lret
mov
cmpsb
mov
sarb
call
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
cmpsb
pusha
decl
sbb
add
sub
test
insb
les
add
or
xchg
movb
xor
fisubs
xchg
push
pop
loopne
popa
fcom
push
in
pop
and
push
xlat
fsub
jns
out
fcmovu
mov
loop
in
out
sahf
out
jmp
out
sahf
in
repz
cmc
div
jp
out
clc
stc
cli
sti
cld
inc
mov
cmp
mov
adc
add
les
xchg
mov
xchg
and
cmp
jae
inc
push
jbe
add
dec
bound
inc
cs
mov
bound
jne
addb
arpl
lcall
fistpll
and
mov
push
ret
cmp
inc
jno
clc
fisttpl
xor
pop
inc
cmp
pop
bound
xor
xor
popa
arpl
pop
cmp
pop
xor
xor
or
xor
bound
pop
xor
popa
push
inc
inc
inc
fdivr
jbe
pop
insb
imul
ss
imul
dec
inc
mov
add
push
inc
lods
add
subb
stos
loope
popa
or
mov
gs
je
mov
push
jbe
mov
inc
aas
fistl
test
loop
je
push
push
pop
or
adc
add
sub
shlb
pop
orl
and
push
xor
pusha
add
jns
xchg
cmp
cmp
insb
aaa
aas
inc
push
adc
mov
sub
add
cltd
and
jae
and
fidivl
inc
aas
nop
cmp
and
xlat
inc
inc
and
sbb
inc
pop
cs
jecxz
jae
inc
inc
inc
add
sub
xchg
popa
mov
lcall
mov
dec
push
dec
cmp
inc
mov
fsubrs
sbb
mov
mov
jne
add
push
outsb
mov
dec
jge
imulb
xor
or
stos
mov
arpl
add
addr16
mov
outsl
in
clc
xchg
into
pop
jo
mov
push
dec
in
inc
cmp
sub
add
xchg
sub
pop
and
xorb
outsl
xchg
inc
mov
mov
dec
xchg
lahf
cmp
mov
push
nop
scas
pop
xlat
mov
xchg
out
and
inc
jb
addr16
sahf
add
dec
popa
jo
loopne
dec
adc
lahf
push
outsl
outsl
lods
pop
or
mov
lds
and
sti
adcl
mov
mov
pop
or
sub
test
pop
cmp
arpl
cmp
mov
jo
lahf
pop
mov
push
xchg
insb
jns
shrl
in
xchg
push
xorb
ss
int
adc
test
dec
popa
mov
mov
bswap
gs
inc
sti
inc
push
bound
ja
inc
jbe
mov
mov
dec
dec
repnz
ja
dec
xor
je
mov
jmp
sti
push
inc
imul
push
jg
xorb
iret
push
cmpsb
mov
or
and
popa
cmp
dec
inc
jmp
jnp
sbb
and
dec
adc
sbb
sbb
mov
outsb
rclb
inc
push
inc
dec
scas
cmp
pop
bound
outsb
arpl
mov
enter
pop
in
xchg
pushaw
in
insl
movl
pop
inc
xchg
mov
mov
enter
out
adc
push
daa
add
orl
push
adc
pop
les
inc
adc
inc
stos
adc
push
jbe
mov
add
dec
and
fdivr
loopne
xchg
and
mov
sbb
es
add
inc
push
out
mov
add
xchg
mov
pushl
pop
push
or
or
or
or
or
adc
adc
aaa
xor
adc
or
pop
sbb
adc
adc
fimull
pop
adc
add
data16
or
pop
lds
inc
add
add
add
and
add
sahf
add
les
out
pop
jle
add
and
das
inc
mov
cmpb
jb
imul
ds
adc
push
adc
pop
and
xor
inc
mov
adc
xor
adcb
pusha
js
or
jge
dec
addb
sub
mov
inc
shrb
loope
xorb
add
or
test
cmp
xor
or
shlb
adc
pushf
into
add
adc
cmp
incl
jmp
adc
push
adc
pop
popa
jno
and
adc
sar
out
xchg
mov
lock
loope
icebp
add
pop
push
mov
mov
pusha
inc
roll
adc
fiaddl
or
js
jg
or
cli
sub
rcr
push
ret
xchg
pushl
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
cs
les
fsts
dec
ret
mov
jecxz
pushf
ret
ja
call
rcrb
xchg
sti
push
in
and
fistpl
jg
add
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
mov
pusha
add
std
or
add
inc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
sahf
aad
std
movsl
jecxz
pop
mov
cwtl
jmp
clc
cmpl
jg
or
insb
sub
addr16
out
or
lcall
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
call
fisubrl
in
mov
orb
int3
lcall
fs
scas
jg
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
call
lods
scas
xchg
test
aam
and
sbb
sarl
and
in
call
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
push
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
sti
jmp
sahf
loope
rorl
mov
int
arpl
push
out
or
in
ljmp
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
cmp
call
jg
xor
hlt
and
xchg
jmp
sbb
rcl
or
mov
lock
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
stc
in
div
mov
sbb
mov
sar
andl
aas
icebp
testb
mov
inc
push
pop
xor
jns
mov
in
repnz
jno
pop
mov
jg
jg
scas
cld
or
push
inc
sbb
paddb
incl
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
push
lcall
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
in
aaa
fldln2
fildl
stos
es
or
dec
fisttpll
out
aas
std
push
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
jmp
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
popl
or
mov
cmp
das
jmp
xchg
pop
clc
pop
hlt
sub
push
aad
add
lea
jg
gs
std
xorb
decl
imul
outsl
adc
ret
das
pop
pop
pop
shlb
stos
jg
out
sarb
sbbl
jno
or
sarb
std
pop
inc
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
dec
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
pushl
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
mov
in
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
cli
add
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fbstp
inc
insb
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
lcall
dec
xlat
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
std
pushl
pusha
imul
add
mov
cmp
xchg
mov
movsl
gs
mov
in
mov
jb
and
jg
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fdivr
fidivrl
lock
adc
pop
cld
addl
adc
and
jl
push
cmp
fmull
enter
jecxz
scas
and
jl
cs
in
pop
mov
icebp
inc
sub
inc
mov
push
sbb
das
mov
inc
or
pop
jg
add
jg
mov
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
aas
js
incb
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
sar
cmpl
cmp
mov
imul
sbb
std
stos
dec
push
in
aas
mov
fsubrl
push
push
and
add
push
clc
xchg
pushf
mov
loopne
inc
jmp
and
mov
adc
bound
mov
loope
aas
push
rcrl
rolb
pop
inc
jb
push
sti
or
fistpl
adc
call
jno
pop
lcall
addr16
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
incl
js
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
mov
lds
jg
stos
pop
add
dec
mov
repz
jmp
sub
jge
xor
lahf
les
sbb
sbb
cld
add
aas
mov
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
dec
shrl
lock
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lcall
fsubs
shl
dec
jp,pn
adc
adc
fistpl
out
lcall
push
push
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
call
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
pushl
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
fistps
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
test
sbb
cwtl
inc
mov
insb
test
in
adc
fistps
outsl
lock
in
jmp
stc
out
cmpsl
and
jle
aaa
clc
push
std
mov
in
sub
mov
jne
or
jg
sub
mov
fsubrp
dec
sahf
enter
fcmovb
inc
outsl
sub
call
faddl
xchg
lcall
jne
pop
sti
adc
dec
ss
lods
movsb
or
incl
pslld
pushf
imul
jl
in
add
imul
out
scas
cli
pop
in
cmp
jmp
mov
sub
ljmp
lock
jmp
hlt
dec
mov
xlat
inc
jo
inc
aas
mov
jg
mov
sub
outsl
mov
or
daa
jp
std
adc
cltd
or
mov
ret
das
ret
nop
cmp
das
incb
lock
pop
pop
div
cld
adc
push
mov
js
fs
sbb
stc
lahf
loope
jae
jmp
push
das
je
jge
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
jle
insb
sbb
fbstp
cmpsb
bound
das
hlt
mov
out
es
call
xor
decb
pusha
xlat
pop
push
adc
mov
and
call
or
iret
and
mov
cmp
int
add
push
pop
aaa
std
js
dec
enter
inc
sbb
mov
mov
aas
icebp
ret
xor
or
ror
sbb
aaa
inc
pop
lds
ficoms
shrb
mov
pop
push
inc
mov
loope
mov
lahf
jp
dec
leave
push
test
add
xlat
jmp
fildll
fimull
iret
fdivrl
xchg
lcall
xor
decb
push
xor
gs
inc
sub
sti
sarl
pop
out
jg
jno
ret
fs
dec
push
dec
cmp
inc
lcall
ficompl
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
ljmp
or
sbb
xchg
imul
jmp
outsl
jmp
push
cmp
std
mov
daa
jmp
faddl
mov
addb
outsl
mov
push
imul
pop
stc
push
dec
out
fstpt
adc
xchg
pop
push
adc
rolb
push
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
pop
mov
fsubrl
dec
add
xchg
xchg
or
add
call
pop
inc
dec
push
mov
mov
cmp
lcall
lods
int3
pop
iret
and
add
dec
icebp
mov
jmp
cmpsb
ljmp
cmc
out
int
popf
xchg
ret
xorl
negl
decl
xor
push
mov
inc
add
push
dec
fs
dec
clc
xor
jno
mov
jle
into
mov
jg
imul
mov
loope
test
arpl
mov
mov
fimuls
cmpsb
dec
adc
in
lahf
jns
xchg
jecxz
mov
and
xchg
lods
jne
hlt
or
cmp
ljmp
mov
loope
insb
cwtl
ret
adc
jb
pop
faddl
pop
jmp
push
push
lret
sbb
fimuls
cli
test
push
sub
out
pop
mov
incl
jo
sub
sub
mov
or
cld
imul
outsl
add
sub
dec
cmp
das
mov
xor
jge
insb
or
movsb
push
dec
adc
jle
or
inc
decl
repz
jg
xchg
mov
pop
or
jmp
xchg
push
out
pop
xchg
jne
xchg
out
sub
pushl
jnp
je
data16
jbe
aam
int3
jbe
mov
imul
out
xor
lcall
push
push
pop
xor
jnp
fdivp
adc
mov
sbb
add
mov
dec
out
xor
or
dec
cmp
cltd
pop
dec
inc
lahf
xchg
arpl
add
mov
incl
movsl
lret
or
ret
dec
cmp
and
mov
nop
adc
scas
insl
call
cmp
push
jmp
and
fdivr
es
push
jmp
aaa
cs
mov
mov
pop
je
mov
xchg
insb
push
adc
cmp
adc
jae
dec
out
movsb
fwait
enter
lret
decl
jp
mov
sbb
loop
cwtl
fwait
xchg
fsts
or
ret
call
aaa
mov
add
pushl
int
adc
push
xchg
mov
dec
lret
jg
cmp
adc
push
and
xchg
pusha
leave
repnz
out
popf
mov
adc
lock
cmp
ljmp
cs
in
aas
sub
push
jne
cmp
push
xchg
lcall
pop
imul
jle
iret
push
cmpsb
insb
push
leave
xchg
inc
cmp
aam
loop
push
popf
push
adc
inc
xor
add
insl
pop
pop
pop
lret
inc
and
lret
mov
nop
and
mov
shrl
xor
pop
xchg
call
je
xor
arpl
xchg
lock
dec
xor
xchg
nop
xchg
xor
push
dec
fwait
repnz
xor
dec
fs
psllq
jecxz
dec
sub
or
jae
icebp
out
or
ljmp
in
in
push
arpl
push
cmp
and
cmpsb
xlat
rdtsc
into
jo
inc
mov
fcomip
mov
enter
subl
stos
jo
or
xchg
or
imul
incl
jecxz
cmp
dec
bound
je
scas
das
pusha
ljmp
mulb
decl
sub
adc
imull
mov
and
lahf
or
ljmp
lahf
mov
pop
mov
dec
or
xchg
lods
xchg
or
loopne
loopne
and
ljmp
addb
iret
fldt
and
or
enter
lcall
lods
lods
mov
daa
popf
push
push
or
paddb
xchg
and
dec
dec
test
sahf
cmpsb
call
repnz
ds
in
jge
call
ljmp
cld
pushf
add
out
sar
pushl
stos
ret
popf
nop
bound
popf
lea
les
add
repz
mov
jg
push
inc
cmp
aad
outsl
andb
dec
stos
pop
aaa
add
clc
daa
cmp
mov
incl
sbb
push
stc
ja
sbbl
ljmp
jecxz
rorl
xor
out
ds
fisubrs
ficoms
and
cmpsb
push
sbb
ljmp
pop
xor
js
cpuid
inc
ljmp
push
mov
xchg
sub
stos
cmp
xchg
mov
fxch
std
sahf
and
js
cmp
push
jge
ljmp
pop
cltd
add
cmp
cmp
test
adc
pop
rcrl
std
sti
dec
das
ljmp
addr16
or
push
jne
xchg
daa
not
stos
mov
pushl
adc
cmp
or
les
pop
inc
js
ret
dec
sub
ss
pushl
pop
xchg
push
mov
xchg
jnp
inc
pop
dec
aas
push
sbb
cmp
decl
rorw
frstor
ror
mov
cmc
loopne
negl
cmp
pushl
out
pop
push
cwtl
lcall
jecxz
jecxz
daa
icebp
lcall
adc
jo
mov
inc
sub
sbb
loope
xchg
inc
and
es
mov
ret
xchg
push
mov
std
decl
mov
dec
push
movsb
insb
sub
cmp
or
aaa
sbb
insl
lcall
pushl
shlb
mov
call
stc
nop
ljmp
sti
jb
dec
out
sti
sbb
and
cmp
pop
sub
jg
leave
std
sub
fsubrl
in
mov
pop
sub
jge
jmp
shr
test
icebp
pop
sbb
decl
pop
push
lds
inc
aad
adc
rcl
mov
ljmp
adcb
xchg
bound
sub
mov
aaa
std
push
pop
in
jg
shlb
dec
dec
into
es
inc
sbb
movsb
lock
sub
and
std
sbb
enter
outsl
imul
lcall
adc
outsl
cmc
call
xorl
mov
pusha
lahf
inc
xor
sbb
sbb
add
call
loop
jbe
nop
adc
pop
mov
xchg
pop
sub
nop
xlat
cmp
xchg
mov
mov
jno
jmp
aaa
adc
cs
sahf
jg
and
or
call
mov
mov
push
in
fisubl
insl
cld
fdiv
push
pop
cli
xor
push
and
hlt
cmp
xchg
xor
fildll
adc
movsl
cld
xor
mov
ret
insb
or
dec
das
mov
adc
aam
shrl
je
and
xchg
jmp
adc
lret
daa
fdivr
je
and
into
idiv
dec
out
cmp
loopne
xlat
jnp
inc
sbb
or
into
icebp
xchg
cmp
sub
lcall
out
cmpsb
ljmp
add
jl
es
lods
retw
popa
test
incl
xlat
test
jne
inc
xchg
mov
adc
je
into
add
std
pushl
xchg
into
jbe
xlat
jg
int3
pop
dec
bound
gs
stc
out
and
sub
mov
jge
dec
push
arpl
push
loop
push
mov
fs
inc
cld
mov
sub
decl
ret
add
lods
sub
dec
lods
cwtl
jmp
or
daa
mov
enter
call
popf
xor
pop
mov
push
dec
mov
lret
sub
sbb
push
add
inc
ljmp
out
mov
jo
jae
imul
fstl
sub
mov
pop
sub
test
fnstsw
xchg
out
int
adc
cmp
sbb
jb
mov
xchg
test
jg
fwait
mov
jo
mov
dec
movsl
dec
inc
stc
mov
sbb
sbb
bound
pushl
stos
sub
xchg
xor
incl
push
xor
push
push
xor
jmp
aaa
xchg
xchg
cltd
test
cli
adc
adc
stc
scas
lock
inc
and
incl
push
xor
adc
addl
cli
jbe
xor
test
sub
add
xor
lock
lcall
es
inc
rorb
gs
or
mov
dec
pop
jmp
bound
and
dec
repnz
movlps
sbb
lret
hlt
lods
or
jnp
bound
rcl
scas
mov
ja
fisttps
cwtl
sbb
xchg
mov
mov
pop
or
call
add
mov
jg
ret
mov
sar
imul
sarl
mov
mov
daa
sti
push
cli
aam
cmp
pushl
fsubrl
push
nop
pushf
lock
rcll
shll
cmpl
incl
cmpsb
cs
cmp
sbb
fs
arpl
lcall
dec
push
jmp
pop
xchg
inc
push
rcl
cltd
fidivl
sbb
push
ljmp
cld
ljmp
mov
icebp
pop
sub
xor
jg
dec
ljmp
fists
cmp
push
fisubrs
fwait
xor
in
xchg
add
decl
shlb
pop
test
ljmp
push
lcall
xchg
test
stos
jo
cmpsl
inc
xchg
mov
call
inc
xlat
jle
jmp
cmp
xchg
mov
imul
ret
sbb
inc
aam
insb
arpl
mov
call
push
lret
mov
xchg
mov
adc
gs
pop
mov
inc
icebp
pop
call
sub
and
je
fs
adcb
fidivrs
ljmp
xchg
push
addr16
dec
fistpll
int3
gs
out
fwait
mov
dec
mov
sub
mov
push
sub
stos
mov
popa
and
fmull
into
xchg
xor
pop
test
mov
stos
imul
lods
mov
lcall
std
sub
lods
stc
mov
cmpsl
mov
inc
dec
or
pop
inc
incl
icebp
test
sbb
sub
sub
pushl
cld
xchg
jle
ds
cli
mov
and
ss
test
lret
dec
cmpsl
enter
call
or
add
mov
mov
mov
icebp
clc
adc
jne
repz
call
push
sub
jmp
xor
mov
dec
pop
rcrl
mov
add
js
in
cmpsb
pop
icebp
mul
ljmp
pushf
or
popa
les
dec
lds
fadd
inc
rorl
std
jnp
ljmp
jne
pop
adcl
sub
or
mov
out
sbb
push
sar
call
mov
pop
mov
and
dec
pop
dec
pop
mov
add
call
or
les
addl
mov
stos
or
and
adc
call
pop
cmc
sahf
dec
jo
cmp
int
adc
jmp
sbb
cmovl
pop
add
dec
mov
add
cmp
jp
pop
sarl
mov
bound
or
arpl
pop
hlt
pop
loopne
mov
pop
cmpsb
inc
int
enter
mov
jmp
lret
xor
cmpsb
xchg
sbb
adc
mov
jmp
add
fdivrs
pop
popa
or
call
inc
js
xchg
jecxz
fidivrl
loop
dec
jmp
cmp
test
lods
insb
jno
dec
leave
fs
adc
dec
call
enter
out
push
fcmovnu
outsl
jmp
adc
inc
jmp
js
add
mov
inc
call
adc
cli
ljmp
clc
mov
jl
in
mov
stos
sbb
cmp
je
daa
addr16
andl
push
dec
stos
repnz
sahf
inc
fdivl
and
mov
sbb
out
sarb
es
scas
mov
ljmp
ficoml
ja
mov
mov
fs
cltd
addr16
out
std
rcl
pop
xor
jmp
cmpsb
push
adcl
push
aam
xor
lea
lock
sub
ja
ret
cmp
jmp
stc
test
sar
lret
ds
cmp
fwait
lret
lods
repnz
push
xor
lcall
jp
lret
aaa
outsl
aaa
dec
sub
mov
addr16
push
cli
jb
adc
mov
inc
adc
cmp
lock
incl
inc
arpl
sbb
scas
and
jno
dec
pop
inc
sbb
and
std
int3
jecxz
jge
imul
sbb
jg
mov
inc
pusha
aam
enter
es
imul
sahf
and
sar
pushl
je
cmpsb
cld
xlat
outsw
dec
dec
fdivr
or
lahf
push
push
push
out
inc
call
ljmp
dec
adc
xor
leave
cmpsb
push
outsb
pop
leave
popl
sbb
fcomip
sbb
pop
pop
nop
cmpsb
jle
in
jae
xchg
inc
push
mov
and
sahf
sub
les
adc
jmp
jecxz
mov
mov
xor
mov
adc
repnz
mov
mov
lods
or
xchg
enter
pushl
test
lahf
mov
in
xchg
arpl
fs
or
mov
nop
incl
cmp
loopne
inc
movl
pop
cmc
sbb
push
xor
repnz
ljmp
and
inc
rcrb
leave
sti
jge
sbb
sbbl
lock
mov
aaa
add
call
push
shrl
stc
push
dec
in
mov
js
mov
sub
sbb
inc
loop
shlb
lea
nop
call
push
lock
pop
dec
jno
mov
push
cmpl
ret
rolb
stos
nop
lea
out
dec
xchg
cmp
test
das
pop
mov
cmp
pop
ret
les
and
jbe
int
fwait
incl
and
lret
cmp
cmp
iret
pop
adc
push
push
decl
sar
cmpsb
test
ret
shr
inc
neg
push
inc
push
lcall
popa
cld
call
stos
cmc
inc
out
adc
or
sub
ljmp
stos
push
mov
xchg
stc
lret
push
lock
mov
cmpsl
mov
cmp
push
jmp
jns
xchg
out
mov
dec
in
xchg
jb
mov
clc
xor
adc
cmpsb
jae
add
pop
fbld
sbb
psubusb
adc
xorb
in
or
popa
repnz
add
add
or
mov
cmp
repnz
jae
dec
incl
add
in
jle
clc
loop
adc
popf
mov
gs
or
ljmp
mov
sahf
sub
fidivs
xchg
jg
mov
or
fisubrl
jmp
ret
aas
lcall
hlt
stc
dec
cmp
mov
shl
jl
fwait
loop
cli
jmp
icebp
xor
inc
mov
sarl
fsubrl
add
popf
and
xchg
sqrtps
incl
dec
jnp
pop
lret
sub
lahf
mov
notb
fldl
adc
call
mov
xchg
aam
cmpsl
and
xchg
and
sbb
cmp
or
lods
sbb
jmp
jns
sbb
cmp
dec
xor
test
mov
divl
lcall
scas
lods
aam
js
push
pop
cmpsl
je
leave
and
dec
sbb
stos
xchg
jns
ljmp
retw
or
mov
out
les
jnp
mov
popa
cld
mov
cld
rorl
mov
ljmp
rcr
inc
push
mov
fldt
js
pushf
xlat
cld
outsb
mov
add
inc
xor
sub
jle
sbb
int
sti
push
mov
in
fcomip
cmp
repz
cmp
push
lock
pop
jl
vphadddq
sbb
lcall
lret
mov
adc
and
cmp
lods
mov
out
flds
and
fmul
mov
negl
pop
mov
lea
pop
into
ficomps
mov
in
xchg
scas
pop
jns
or
test
ljmp
and
inc
sbb
int3
outsl
pushf
add
std
std
decl
sbb
jns
pushf
icebp
xor
inc
jb
dec
and
mov
lods
pop
mov
dec
sbb
and
jle
std
rclb
pop
stos
inc
add
cs
decl
icebp
add
stc
ljmp
movb
xor
jg
mov
cmpsb
decl
dec
mov
mov
std
sahf
add
into
insl
mov
roll
sar
mov
sub
push
out
in
jge
xlat
inc
mov
lock
call
sbb
enter
out
push
test
adc
sbbb
jno
mov
fisubl
mov
scas
jge
cmc
testl
inc
mov
fs
inc
test
incl
add
shll
adc
testl
sahf
aas
aad
in
push
xor
jo
mov
scas
bound
and
sbb
and
jno
sbb
or
sbb
mov
in
call
xchg
mov
or
popa
nop
xor
movsb
fidivl
mov
inc
dec
loope
decl
jno
imul
popf
mov
jge
lcall
and
and
decl
in
lret
imul
cwtl
gs
pop
outsl
xchg
pop
xor
add
mov
data16
out
cli
xor
cmpsb
mov
xor
sbb
loop
cs
cmpsl
add
inc
arpl
pop
test
jmp
sub
test
add
js
adc
pop
or
ljmp
test
scas
pop
lcall
dec
fwait
dec
addb
jae
lods
push
je
rcll
and
ljmp
sar
int3
inc
in
adc
test
cmp
in
push
scas
dec
ljmp
mov
mov
xlat
inc
sti
fiaddl
sub
scas
mov
mov
shrl
incl
popa
test
cmpsb
pushf
push
out
push
xor
push
mov
push
lahf
push
cld
into
out
adc
mov
xor
add
iret
add
dec
pushf
jge
jbe
xorl
jmp
add
adc
mov
xchg
outsb
and
jl
cmp
fisubl
out
ljmp
sub
lods
dec
sahf
jge
js
pop
pop
mov
mov
pop
shr
ljmp
les
xchg
xchg
into
aad
xor
iret
repz
scas
push
add
cmp
mov
mov
imul
loop
and
jnp
jae
movsb
psllq
rcrl
incl
inc
xchg
rcl
fwait
jnp
scas
inc
jmp
insl
inc
jp
sub
lcall
leave
jp
out
cmp
sub
push
ret
cmp
outsl
xchg
jecxz
lcall
push
adc
into
dec
dec
cmp
leave
or
fwait
orb
mov
inc
cli
adc
incl
mov
or
inc
int3
in
insb
inc
dec
cld
aad
cld
mov
out
mov
push
mov
inc
dec
test
outsb
adc
mov
and
aam
pop
dec
xchg
mov
lret
jg
repz
jns
test
ljmp
fmull
scas
add
push
rclb
adc
pop
xor
jg
adc
add
and
lahf
loopne
pop
out
into
je
pop
cmp
call
sbbl
adc
les
sub
inc
lods
enter
sbb
cwtl
sahf
push
jp
outsl
clc
call
fcmovu
pop
inc
sub
mov
loop
mov
lods
repnz
adc
fcomip
ret
int3
mov
addr16
jo
xchg
cmc
jge
vmovsd
dec
xchg
dec
cld
sti
adc
aam
push
ss
fldcw
and
decl
and
lock
inc
mov
mov
prefetcht0
jp
cld
push
cmp
push
sub
add
repnz
pop
bound
mov
in
jb
or
incl
cld
imul
into
gs
sti
push
xchg
push
std
mov
adc
ljmp
dec
js
out
inc
mov
sub
and
lods
cmp
bound
xor
dec
pop
call
inc
idiv
lea
pop
mov
dec
pop
fisttpl
fs
popf
xchg
int3
cmp
pushl
xor
xor
adc
loope
pusha
jle
sahf
adc
iret
popf
and
ja
mov
sarb
xor
scas
repnz
push
dec
pushf
fwait
mov
stos
insl
fnstenv
xchg
mov
lret
nop
jnp
call
das
or
fcmove
inc
mov
mov
mov
mov
fbstp
dec
aam
lods
inc
inc
dec
cmp
push
cmpsb
cmp
fcomps
fldcw
ljmp
xor
xchg
mov
add
adc
ja
jp
or
call
stc
or
push
mov
mov
xor
mov
cli
mov
addr16
jg
incl
sbbl
add
jg
outsl
xor
mov
cmp
dec
mov
cli
cs
call
std
xchg
mov
sarb
xor
cmp
pop
add
sbb
mov
inc
adc
xchg
jb
pop
ret
mov
mov
mov
andl
pop
shlb
mov
jl
xchg
dec
add
pop
sbb
inc
pushf
add
js
sbb
mov
mov
mov
xchg
lret
repz
jo
insl
adc
data16
divb
mov
call
enter
popf
mov
jae
push
mov
xchg
jb
fcmovnu
aad
sub
ljmp
cmp
pop
fs
cmpsb
pop
sar
jnp
and
std
pusha
or
jno
xchg
cmpb
jmp
enter
fsubrs
cmpsb
sti
mov
cmp
pop
adcl
int
pushl
je
stc
push
mov
cmp
pop
or
mov
addr16
ljmp
ljmp
inc
mov
imul
fbld
add
inc
cmp
scas
dec
push
push
std
nop
push
enter
inc
or
mov
sub
stos
adc
fnstcw
pushl
pop
repz
dec
sub
gs
sbb
sti
sub
aas
stc
jge
cli
aad
int3
push
xchg
js
decl
mov
jl
or
xchg
das
adc
or
pop
popf
push
inc
shll
fcomip
mov
xor
jae
dec
lcall
call
mov
jmp
mov
jnp
clc
rcl
mov
scas
into
inc
les
lods
iret
fcmove
pop
loop
aas
std
mov
divb
int3
shl
iret
dec
jbe
repnz
push
jg
sub
fwait
mov
inc
mov
add
pop
rcll
ds
fsubrl
ljmp
sub
push
sub
iret
mov
lahf
aaa
lock
fwait
xor
stc
jmp
mov
jmp
aam
out
pop
arpl
xlat
jg
xor
jecxz
lds
cmp
sub
and
rorb
mov
lcall
sarl
cmp
and
hlt
std
enter
movsl
ss
pop
cmp
ljmp
lcall
cs
jnp
dec
lret
fs
xchg
out
or
lcall
aam
xor
cmp
sbb
ret
fildll
int
mov
call
stc
cmp
sarb
inc
gs
imul
fistl
js
lret
mov
xchg
gs
push
push
add
imul
mov
fbld
mov
mov
jns
add
imul
je
lcall
xchg
sub
jnp
test
add
flds
bound
stc
lods
in
call
push
test
int3
jns
mov
jno
fxch
sbb
mull
jmp
add
pop
ljmp
shll
jb
insl
nopl
jg
dec
push
mov
xor
fsubr
test
adc
push
adc
mov
jl
popa
ds
pop
cld
ret
rcrl
decl
test
lea
jo
lds
and
lods
sbb
movsl
addb
lods
outsl
push
cmp
sahf
or
push
jle,pt
mov
std
xor
xchg
call
ret
mov
hlt
xchg
addr16
lea
sub
or
sbb
call
popa
sbb
fstpt
fists
ljmp
int
dec
fildl
test
jmp
inc
pop
fwait
insb
jge
cli
or
cmp
sub
jecxz
mov
mov
or
mov
and
decl
or
les
and
mov
or
insl
and
andb
dec
pop
pop
mov
imul
mov
lret
xor
bnd
shr
xor
decl
fld
scas
clc
mov
or
enter
sahf
mov
test
mov
xchg
xor
inc
clc
icebp
lret
push
repz
lds
sbb
packssdw
ret
jl
mov
xchg
stos
in
call
xchg
pop
xchg
lret
fidivrl
mov
xchg
fst
push
jbe
push
and
ljmp
fcomp
and
dec
idivl
dec
inc
cmp
fnstcw
std
cmp
inc
pop
mov
cmp
sbbb
xchg
mov
inc
scas
fbstp
add
or
arpl
inc
insb
add
dec
cmpsb
inc
ja
stos
cmp
lods
ret
lret
jnp
sbb
ja
push
sub
jns
mov
cli
push
out
jne
xchg
movsb
pop
fldenv
push
shlb
sbb
enter
fcoms
push
call
lods
test
es
mov
popf
sbb
cmp
fisubs
inc
orl
arpl
pop
jmp
mov
xchg
adcl
adcb
jg
movsb
rcr
stos
jne
mov
cmp
xchg
sbb
loope
pop
xor
add
push
xchg
arpl
pop
xlat
and
push
mov
dec
xchg
xor
mov
clc
cmpsb
testb
adc
fsubs
push
fistpll
sub
mov
std
xlat
sar
fdivl
mov
mov
mov
cmpsb
xor
enter
mov
xchg
stc
bound
cmp
and
fmulp
inc
mov
outsb
mov
mov
aad
jecxz
test
pushl
aam
aas
hlt
scas
sbb
movsb
outsl
cmovg
add
and
and
sbb
ljmp
jmp
or
enter
inc
dec
cld
out
mov
ret
jmp
and
outsl
into
into
xchg
or
ljmp
mov
push
mov
push
or
loop
jb
popf
pusha
loopne
je
inc
dec
or
lcall
pushf
and
pop
pop
adc
pusha
out
inc
pop
sbbl
xor
imul
and
jo
push
dec
sahf
push
repz
incl
orl
mov
dec
jg
arpl
xchg
psrlw
mov
mov
mov
movsl
mov
loopne
clc
ret
sbb
inc
sbb
jle
insb
push
adc
icebp
mov
out
sar
loope
jmp
and
iret
repz
mov
inc
or
dec
ljmp
sahf
out
pushf
pop
mov
loop
dec
and
cmp
push
scas
adc
lcall
outsb
les
xchg
pop
push
inc
mov
cmpsb
jae
aad
shlb
arpl
pop
sar
mov
incl
sub
mov
mov
shll
cmp
hlt
cmpsl
sti
jg
lcall
lahf
lret
jno
inc
nop
shrb
push
pop
sti
jmp
xor
in
icebp
jg
inc
fidivrl
push
test
adc
push
lcall
dec
inc
leave
adc
xlat
aaa
sub
lods
jmp
cmp
jae
cwtl
push
std
stos
xor
dec
js
iret
dec
es
mov
sub
int3
lock
call
or
push
mov
or
xor
incb
ds
and
cmc
add
push
xchg
push
inc
mov
jge
gs
decl
jmp
xor
inc
imul
test
rcrb
dec
leave
fsub
incl
divb
lret
out
jbe
adc
test
pop
addr16
int
mov
mov
inc
mov
mov
jns
es
inc
dec
popa
mov
ficoml
sbb
int
scas
or
adc
imul
mov
lcall
test
enter
leave
xor
dec
push
fildll
data16
popf
fsts
mov
mov
jmp
out
inc
adc
mov
dec
popa
or
cs
jmp
xor
addb
mov
and
ret
in
hlt
in
push
pop
ss
push
ret
xchg
xchg
jg
jmp
loop
push
subl
sub
sarb
xor
aad
test
dec
lock
pushl
scas
int
xchg
sti
cmp
ds
jnp
xor
gs
or
mov
jge
pop
mov
sbb
sbb
enter
mov
inc
negb
aaa
pop
mov
lcall
add
pop
call
cld
jbe
lds
jb
arpl
decl
xchg
dec
sub
enter
mov
mov
lcall
lcall
pop
cmpsb
ljmp
and
sbb
push
xlat
fwait
push
lea
call
and
ljmp
mov
mov
ret
adc
push
dec
mov
decl
notl
push
push
loop
push
addb
mov
sub
mov
mov
mov
adc
jp
or
insl
inc
sub
xchg
xor
push
jg
leave
hlt
jle
lods
flds
test
add
loope
jecxz
lcall
mov
mov
les
add
cli
fstpl
xchg
xchg
or
jb
pop
jmp
jb
cltd
sub
jae
push
sub
inc
out
sbb
clc
ljmp
xorb
arpl
jns
bnd
jge
loop
lret
push
loopne
sub
cmp
jmp
cmp
aad
lds
das
dec
out
sub
and
test
ljmp
push
data16
lock
fs
push
mulb
mov
pop
mov
jp
inc
jle
das
inc
imul
mov
pop
mov
dec
dec
fmull
cmp
jns
int3
mov
jg
ljmp
xchg
adc
std
jae
jnp
mov
cs
or
out
mov
int3
xlat
push
lahf
sub
push
mov
cmp
jo
sbb
jmp
mov
je
scas
cld
lods
loopne
movsl
jno
mov
call
mov
in
aad
mov
mov
or
and
pusha
mov
add
pushl
jmp
inc
xchg
inc
lods
cmp
jnp
xorl
cmc
ss
aaa
pop
lock
fidivrs
xchg
mov
add
or
push
push
loopne
mov
imul
loopne
add
adc
fxch
les
adc
ljmp
mov
push
lahf
jle
test
mov
and
js
nop
jmp
jmp
fildl
sub
mov
rorl
or
out
or
aam
mov
aaa
cld
mov
cmp
inc
movsl
hlt
fcoml
je
jge
push
jo
ss
ljmp
ja
mov
or
cld
pop
mov
addb
pop
dec
mov
jg
ljmp
jae
loop
repnz
adcl
or
nop
test
les
std
in
testb
mov
repnz
inc
mov
adc
cld
call
push
fildl
jae
cmpsb
cmp
std
nop
mov
dec
scas
jmp
pop
adc
je
call
scas
inc
ss
insb
iret
out
and
and
popf
dec
dec
cld
sub
int3
lock
incl
in
mov
in
stos
outsl
dec
push
cltd
sbb
cmp
cmp
sub
pop
ja
dec
mov
ljmp
xchg
mov
mov
adc
or
mov
int3
pop
testb
adc
jmp
scas
pop
inc
jl
or
mov
xchg
pop
pop
jg
pop
js
stc
aas
push
fwait
notb
cmc
mov
pushl
sti
push
jmp
xchg
fs
push
mov
cltd
fistpll
mov
insb
adcb
gs
inc
xorb
mov
xor
incl
push
or
push
push
push
xlat
sub
cli
cld
jns
mov
add
lret
popf
xchg
jne
cmpsb
pop
lcall
add
lcall
ja
outsb
ss
icebp
cmp
fbstp
mov
lret
xor
lods
dec
pop
imul
fucomp
movsb
cmp
lods
cwtl
cmovg
or
pop
ss
mov
roll
ljmp
test
jg
jmp
js
xor
mov
rolb
inc
or
stc
inc
lock
inc
jle
addr16
enter
jge
fists
mov
inc
jp
pop
dec
or
xchg
scas
adc
bound
pushl
xor
mov
or
cmp
scas
das
mov
mov
jo
popa
mov
jne
jns
adc
push
fcomp
dec
inc
jecxz
shl
lcall
jnp
adc
wbinvd
jno
and
test
arpl
add
out
sbb
decl
aaa
cmpsb
outsb
cmp
mov
dec
lds
and
gs
push
mov
mov
add
and
xor
popw
or
dec
cmp
aaa
dec
mov
les
and
scas
jae
cmc
outsl
call
pusha
jo
rcrb
xchg
jp
lret
dec
hlt
fnsave
adc
or
clc
jle
ret
jns
testb
stos
lahf
addr16
or
inc
shrl
lahf
pop
fld
and
inc
pusha
inc
incl
fdiv
ret
stc
nop
xchg
in
push
pop
add
scas
fs
lcall
cld
sbb
loopne
ljmp
jbe
sbb
adc
loop
push
pop
jecxz
xor
jmp
or
in
mov
adc
lahf
pop
mov
sahf
push
lock
scas
mov
icebp
call
jb
mov
adc
push
adc
pushf
xchg
testl
pop
cld
mov
or
jmp
mov
call
cmpsb
lods
mov
shll
jp
and
xor
fstps
xchg
cmp
imul
cld
inc
inc
js
xchg
push
push
fucomip
lods
inc
jp
pop
pop
in
add
pop
pop
adc
adc
sbb
pop
dec
clc
pop
or
je
test
add
scas
movsb
xor
inc
push
inc
lcall
or
xchg
das
cwtl
sbb
aas
push
test
decb
mov
dec
cmp
add
subb
jmp
jns
mov
mov
xor
xchg
out
out
call
add
pop
dec
arpl
fists
mov
imul
sub
test
std
out
xor
iret
xchg
sub
mov
test
xor
xchg
jo
adc
imul
ds
incl
or
loop
sub
inc
into
std
repz
add
movsl
cmc
jbe
int
arpl
sbb
imul
lds
cmpsb
pop
sub
hlt
ljmp
and
mov
ja
dec
xchg
and
pop
addl
xchg
movsl
sahf
lret
sti
mov
add
push
cld
int
jbe
movzbl
mov
xchg
adc
mov
ljmp
push
daa
repnz
jecxz
adc
push
mov
out
into
cmc
gs
jg
mov
sub
shrb
imul
xchg
mov
jmp
cli
in
sarb
xchg
mov
xchg
mov
insb
fwait
jbe
jle
cmc
mov
mov
xchg
loopne
mov
mov
enter
xor
mov
cltd
cltd
daa
jp
mov
and
xor
pop
or
push
shrb
fcomip
jbe
dec
fsubl
add
xchg
scas
aas
repnz
iret
and
sbb
decl
out
jno
lock
cmpsb
fs
js
jp
mov
dec
into
push
mov
push
ljmp
flds
fistpl
mov
repnz
fistpl
adc
nop
mov
dec
xchg
lret
xor
adc
stc
dec
sbb
cli
dec
pop
movsb
jb
mov
push
ja
and
dec
jmp
jge
ljmp
mov
mov
out
or
lahf
lds
push
cmp
bound
or
dec
lods
decb
call
aaa
or
jg
bsf
sti
hlt
fnstcw
mov
jle
add
cmp
mov
ret
lock
cli
outsl
adc
imul
iret
out
mov
inc
push
and
enter
push
and
pushf
mov
dec
mov
xchg
pop
jp,pt
add
jne
ret
mov
ja
cmp
jns
les
mov
dec
out
sbb
jae
and
test
call
cmpxchg
sub
xor
mov
outsl
dec
lret
outsb
data16
stos
pop
cmp
cmp
mov
imul
add
test
and
add
jmp
inc
mov
push
repnz
lods
fildll
pushf
dec
int
lock
decl
cld
mov
xchg
lods
jmp
push
movsl
repz
mov
cld
jecxz
in
and
lcall
insb
add
push
loope
or
adc
add
jmp
xchg
arpl
mov
or
jmp
insb
inc
mov
sub
leave
inc
jo
mov
jg
add
mov
jnp
mov
adc
mov
rcl
ds
call
out
cs
push
xchg
xor
dec
aaa
pop
mov
cmp
xchg
outsb
pop
mov
dec
mov
dec
cli
jnp
jl
push
xor
mov
mov
jecxz
outsb
sbb
stc
aam
mov
mov
in
sbb
add
jmp
rcrb
adc
pop
stos
loop
add
cld
xor
dec
lret
jecxz
pop
inc
dec
aas
decl
mov
mov
adc
jg
jl
je
push
in
fisttps
outsl
sar
fisttps
lcall
dec
mov
data16
mov
jmp
test
and
mov
insl
ljmp
mov
jge
nop
cld
icebp
aaa
mov
or
les
das
fdivr
dec
mov
push
js
add
pop
cmpb
je
pop
xchg
push
andb
ret
jns
jmp
jp
sbb
jle
mov
sahf
add
das
mov
lret
xor
dec
mov
out
out
xchg
and
inc
insb
and
push
mov
scas
jnp
pop
push
push
dec
push
mov
add
hlt
sbb
lcall
loopne
jo
addr16
repnz
mov
das
inc
adc
aas
cmpsl
push
jmp
imul
call
sti
and
ss
pop
push
jbe
in
arpl
adc
push
pop
sbb
jg
lcall
fmull
mov
ljmp
mov
sbb
imul
cmc
cltd
push
pop
dec
and
ljmp
push
fistl
lcall
jmp
ljmp
xchg
out
mov
sub
mov
add
xlat
lcall
imul
fcom
es
je,pt
jge
jns
adc
fldcw
inc
mov
rcrb
movsb
mov
xor
lods
shl
imul
or
in
jmp
ss
daa
xchg
bound
add
cmpsb
insb
movb
or
imul
ret
lock
mov
clc
nop
ret
xlat
sub
sub
sbb
cmp
or
lcall
in
jmp
insl
cld
imul
xor
sbb
popf
lock
scas
decl
and
pop
xchg
push
mov
push
mov
jmp
bound
jp
pop
xchg
pop
popf
lods
cmpsl
pop
and
dec
mov
pop
xchg
xchg
mov
xor
jmp
int3
xchg
xor
ss
rclb
cmp
pslld
add
adc
mov
mov
jmp
push
in
mov
fdivrl
cmp
and
sbb
lock
std
jmp
jge
hlt
sbb
adc
sub
mov
mov
in
inc
inc
pushl
cwtl
mov
push
pop
popf
divl
add
ret
ljmp
mov
lods
pop
and
inc
jge
jge
push
jnp
sbb
lret
jle
mov
xor
mov
sahf
ljmp
in
xchg
sbb
mov
jp
sub
repnz
pop
cmc
xor
ds
mov
aaa
pusha
inc
shll
sbb
jb
pop
pushf
clc
lcall
inc
lcall
rcrb
fistpl
sti
lret
rcrl
xchg
mov
incl
mov
mov
xor
mov
mov
jmp
mov
sbb
jge
in
cmc
outsl
inc
pushf
sbb
adc
pushf
mov
incl
dec
in
addr16
daa
adc
sub
and
clc
inc
pushl
loopne
or
pop
mov
mov
mov
xchg
jnp
xchg
sub
repz
std
orb
pop
mov
jb
add
jl
fidivrl
mov
insb
ds
ljmp
out
xchg
mov
stc
int3
andb
or
sahf
rcrb
js
in
lcall
outsb
stos
mov
iret
fsubl
ljmp
mov
sbb
pop
ljmp
xchg
sub
ljmp
or
pushf
cmp
push
inc
lahf
ret
outsl
loop
fcomip
enter
mov
xchg
out
push
jg
jg
nop
test
inc
test
lcall
inc
sbb
test
call
mov
mov
mov
subl
lahf
pushf
add
mov
mov
mov
xchg
gs
push
and
push
or
xchg
sbb
loopne
in
dec
in
repz
cmp
lret
sub
push
int3
or
stos
or
ljmp
out
inc
mov
fmull
pop
fistpll
loopne
sahf
xchg
out
inc
mov
sub
fnstsw
inc
mov
cli
stc
jmp
xor
lock
sub
lock
in
jmp
clc
pop
mov
cmp
sub
jnp
ror
sub
mov
dec
repnz
out
pop
packsswb
dec
out
cld
shll
out
mov
sti
js
and
push
cmp
pop
jge
jg
xchg
sub
mov
fnsave
mov
popa
lock
std
dec
or
lret
mov
in
adc
pop
dec
push
dec
icebp
jecxz
lods
cld
fistpl
mov
mov
pushl
xchg
cmp
divl
cld
imul
iret
mov
inc
jmp
mov
mov
cmp
int
pop
out
leave
cltd
andl
sbb
push
addl
clc
ds
decl
inc
add
inc
sub
rcl
insl
and
adc
mov
pushl
mov
jmp
in
sahf
mov
stos
and
dec
lcall
jg
jmp
stc
das
mov
sbb
xchg
sbb
bound
inc
rcr
push
pusha
shll
or
incl
fisttps
out
add
rorl
xchg
int
pop
in
push
addr16
call
cmp
or
push
jno
jno
xor
and
loopne
int3
lcall
outsl
insb
loop
dec
jg
int3
push
js
adc
in
inc
push
or
inc
cld
ljmp
dec
jl
mov
inc
cmpsl
loopne
hlt
push
mov
enter
lcall
cwtl
aam
dec
in
inc
inc
pop
mov
rclb
inc
push
dec
adc
jl
pop
adcb
sahf
xchg
popa
inc
incl
jnp
in
cmp
adc
lods
add
or
mull
push
popa
dec
loop
sti
decl
mov
lock
movsb
popa
adc
dec
xor
ljmp
cmp
call
adc
outsb
pusha
pop
and
dec
adc
fiadds
mov
cmc
xchg
push
enter
inc
mov
hlt
testb
sbb
push
xchg
sub
test
and
fmuls
add
pushl
fldcw
dec
mov
adc
sub
data16
ret
xchg
push
ss
jmp
loope
or
and
das
add
mov
adc
fwait
pop
fs
cmp
mov
aas
push
cmp
lock
ljmp
jl,pt
into
add
xchg
fwait
xor
sbb
pop
adc
cmp
jmp
movsb
fs
ds
hlt
in
cs
push
nop
enter
sub
adc
jno
test
incl
adc
xchg
mov
and
rorl
and
jg
cmp
and
dec
popa
test
cmp
stc
cld
cmpsl
int3
mov
jne
dec
movsl
inc
pop
xor
inc
jno
mov
enter
dec
mov
movsl
test
stc
mov
addr16
aam
sbb
pop
or
ror
lods
fcmovne
ss
add
cltd
call
fnstcw
cmp
mov
xchg
and
pop
aad
dec
mov
adc
inc
sub
or
jg
jg
mulb
mov
cwtl
ret
jle
dec
dec
cmc
xlat
aam
scas
test
test
mov
aas
xchg
inc
dec
push
push
add
and
mov
dec
mov
pop
xor
cmc
pushl
imul
inc
xchg
jae
js
add
push
add
mov
jmp
ljmp
dec
dec
popl
pop
fstps
fldt
jmp
test
mov
mov
push
les
out
add
orl
jo
jne
ljmp
ljmp
push
cmp
pushl
fcoml
dec
int
inc
loopne
jae
add
xor
call
inc
into
mov
lret
sahf
xchg
push
and
in
xchg
jns
fadd
lcall
xchg
in
xor
xorb
out
xchg
pop
mov
mov
sar
and
mov
lods
adc
cli
cmp
xchg
test
hlt
mov
out
gs
fbld
in
stos
pop
les
push
sub
je
sbb
push
fcomip
push
aam
xchg
mov
jp
hlt
lcall
cmp
cmp
push
imul
inc
aad
sub
adc
insb
sahf
push
cmp
das
fisttpll
ret
dec
cs
dec
mov
push
xlat
xor
xchg
pop
cltd
push
xchg
les
ret
sub
add
cltd
scas
icebp
dec
stc
dec
xor
sbb
repnz
jmp
outsb
xchg
out
adc
xlat
test
sub
fdivrs
adc
orb
cli
jmp
mov
sub
xchg
movsl
lcall
rcll
and
jmp
stos
popa
cmpsb
insl
in
push
bound
sbb
add
mov
and
popf
xchg
dec
xchg
add
insb
das
pop
ret
xor
cmp
cmp
or
mov
stc
and
lret
out
pop
movsb
pop
add
xchg
fidivrs
inc
dec
test
in
mov
xor
pop
or
jg
mov
pop
daa
or
pop
jnp
jg
sti
jl
je
pop
sbb
jle
cmpl
popf
lea
adc
ds
scas
pop
jg
dec
es
test
cli
add
add
push
loope
in
jg
jl
pop
outsb
mov
outsb
xchg
and
inc
sub
mov
lret
inc
cmp
inc
rcr
pop
std
inc
adc
fsubrs
jbe
xchg
sarl
mov
xchg
ret
fcomip
mov
adc
mov
adc
outsl
clc
inc
inc
mov
pop
push
int3
leave
pop
xor
pop
pop
push
loop
dec
jns
mov
mov
fisubs
jae
lods
jb
ljmp
xlat
gs
in
sub
imul
jmp
and
adc
ret
push
mov
lret
in
int3
vpaddusw
hlt
push
cs
movsl
ss
lcall
into
xor
scas
subl
inc
xchg
mov
and
leave
jecxz
ljmp
cmp
int
pop
push
dec
jbe
movl
push
hlt
ljmp
nop
popf
xchg
sbb
ja
shll
inc
incl
ja
push
push
daa
ja
xlat
jle
or
xchg
icebp
rorl
adc
call
jnp
imul
adc
aas
mov
std
aaa
es
stos
and
in
xchg
cmpb
jl
dec
pop
sbb
adc
les
mov
sbb
in
fnstsw
mov
test
fcoml
stos
cwtl
outsb
cmpsb
incl
inc
mov
xor
into
cs
jecxz
mov
dec
ja
sar
mov
cwtl
or
mov
hlt
xlat
incl
notb
mov
adc
push
call
adc
dec
pop
stc
lret
jg
xchg
in
adc
sahf
addr16
push
inc
addr16
xor
xchg
mov
cltd
fprem1
lcall
pop
std
mov
fmuls
bound
enter
roll
mov
ljmp
xchg
mov
or
cli
sub
jo
mov
fists
call
daa
hlt
mov
push
lea
shll
loope
loopne
jmp
push
add
mov
call
cmp
outsb
shll
add
scas
mov
in
inc
cmp
add
xchg
dec
sti
push
lcall
testl
mov
stos
movsl
out
ds
decb
dec
add
push
ja
scas
das
xchg
cmpsb
xlat
or
push
pop
addl
dec
pushf
in
pop
es
pop
xchg
and
sub
ljmp
daa
dec
add
mov
lahf
jnp
or
xor
insl
and
jmp
out
mov
push
xor
sbb
adc
jns
imul
bound
xchg
push
sbb
push
inc
mov
jmp
rolb
jmp
or
ljmp
or
ljmp
xchg
push
arpl
cld
and
addr16
out
or
in
xor
sub
stos
sbb
das
repz
sti
jns
ret
mov
gs
cmp
or
int3
mov
mov
jmp
decl
pusha
add
mov
shll
mov
subb
rorb
fiadds
cmp
xchg
or
decl
test
pop
push
scas
lods
test
push
pusha
lcall
push
dec
idivl
adcl
inc
jbe
jmp
out
gs
mov
div
jl
pop
or
fcomps
dec
and
scas
test
inc
dec
mov
mov
stc
inc
mov
mov
sub
and
cmp
nop
jle
popf
test
outsl
push
andl
mov
mov
out
or
fldt
add
rolb
lret
sti
std
out
je
cli
aaa
ror
dec
call
outsb
inc
repnz
jg
sbb
dec
sbb
cld
sahf
push
das
das
jle
or
pop
inc
rcrb
ret
and
mov
lcall
inc
cmp
push
adc
enter
ljmp
int3
adc
inc
arpl
negl
stos
int
mov
push
repz
inc
mov
movsb
ret
mov
xor
lock
add
fmuls
or
mov
bound
cli
dec
cmp
stos
mov
and
imul
outsl
test
xchg
cmpl
aam
push
lcall
jge
orb
mov
or
test
es
call
mov
shll
xchg
pusha
sbb
loop
mov
mov
sub
inc
int
add
loop
shll
inc
mov
call
push
xor
lods
rcrl
movsl
pop
mov
mov
mov
mov
call
testl
jmp
sub
pop
aad
mov
outsb
les
loope
push
enter
jg
dec
lods
or
fimull
jmp
adc
loopne
loopne
jo
out
add
cmc
inc
add
jg
jp
jl
mov
out
jg
nop
dec
cmp
sub
aad
pop
sub
sbb
cld
sub
sub
bound
nop
imulb
cmp
rclb
gs
jno
mov
mov
out
scas
push
push
mov
in
jbe
push
mov
pop
cld
imul
sub
sbb
or
xor
decl
nop
out
xor
push
jnp
xorb
popf
sub
sbb
sub
pop
adc
fidivrl
dec
repz
adc
lret
in
imul
mov
andb
add
ljmp
clc
in
cmc
push
stos
mov
jle
cmp
xor
stos
gs
pop
xor
aam
ficompl
ljmp
xlat
fs
inc
pop
add
pop
aad
aam
test
or
lcall
movsl
pop
pop
mov
mov
ja
adc
outsl
cmpsl
stc
and
add
out
xor
ficoml
jae
adc
mov
mov
jmp
jae
xor
rcrl
hlt
ja
mov
imul
mov
in
push
pushl
pop
lock
mov
call
nop
and
mov
das
add
xchg
sub
sub
xor
lcall
pop
outsl
lods
lock
push
xor
sub
jmp
call
cwtl
pop
xor
or
out
repnz
jge
cmpsl
outsb
mov
outsl
mov
xor
incl
add
out
int3
insb
cwtl
inc
inc
mov
lahf
inc
movsl
mov
adc
aad
jnp
incl
loop
movsb
pop
inc
lahf
stc
inc
aad
sub
adc
incl
loopne
pop
decb
fbstp
cmpsl
daa
sarb
mov
xchg
js
push
jle
add
repz
mov
push
lea
xchg
jnp
pop
out
in
pushf
push
xchg
sub
imul
adc
mov
mov
mov
push
jl
in
sbb
sub
movsb
jne
dec
cmp
push
inc
ja
lret
rcl
dec
mov
fldpi
sub
aas
daa
repz
mov
movsb
mov
dec
cltd
or
dec
dec
test
push
lcall
sub
ss
stc
repnz
movsb
cmp
es
arpl
mov
repz
and
mov
loope
scas
push
hlt
loop
into
mov
adc
xchg
sub
jns
cmpsb
js
leave
into
test
push
les
add
decl
xchg
push
shr
into
sarb
adc
jl
jge
pop
adc
mov
shll
pop
das
push
sub
sub
ret
popa
enter
nop
shlb
lds
adc
push
sbb
test
ljmp
outsb
and
or
sub
imul
inc
mov
or
mov
add
repnz
or
pushl
jl
push
arpl
lods
dec
subb
out
xchg
push
and
adc
cltd
pop
addr16
lcall
inc
push
and
js
mov
pop
repnz
data16
jp
scas
xchg
arpl
sbb
aas
lea
inc
lea
pop
inc
inc
inc
scas
mov
mov
test
js
arpl
arpl
xchg
lcall
cmp
lcall
inc
mov
aas
addr16
movsb
scas
jecxz
jge
xlat
push
push
jbe
cmpsl
cli
xchg
into
jg
sbb
mov
dec
movsl
jl,pn
idivb
icebp
enter
push
dec
loopne
pop
lock
xchg
xchg
test
andb
sti
lcall
rcrb
pushl
sbb
scas
repz
push
out
rcr
insl
fsubr
dec
mov
jb
jg
dec
popf
psrlw
pop
in
negb
imul
xor
mov
decl
test
fbld
insl
and
sbb
dec
push
rcrl
dec
enter
sar
jmp
push
stos
in
mov
sub
je
xor
push
sbb
lock
ljmp
mov
hlt
mov
lcall
ja
push
pop
cmp
mov
enter
add
shr
push
and
mov
call
mov
inc
aas
je
ret
inc
or
sbbb
sysexit
arpl
fcos
call
cmp
out
mov
popa
stos
aam
cmpsl
lea
sbb
pop
enter
cmp
jl
leave
outsb
inc
in
ljmp
test
push
sub
xchg
mov
cmc
fsubs
pop
jecxz
sub
dec
out
fldcw
add
cmp
push
je
mov
xor
daa
push
adc
pushf
movsl
push
out
into
sub
xchg
stc
adc
mov
fdivr
stc
jns
aam
jg
dec
cmp
movsb
xor
cmpsb
pop
fs
lods
test
jo
bound
pushl
cmp
mov
psrad
sbb
icebp
adc
cmpsb
push
pop
imul
fadd
jmp
das
or
or
fwait
hlt
lock
inc
subb
mov
push
fiadds
sbb
xor
pushl
mov
stos
mov
inc
mov
mov
mov
insl
std
incl
xlat
jns
mov
addb
fmull
pusha
lds
xchg
push
sti
addr16
outsb
push
inc
icebp
cltd
movsl
lret
pop
jb
dec
stos
jne
mov
and
ljmp
mov
push
lods
push
cld
decl
movsl
mov
dec
and
mov
popa
into
loop
jnp
xchg
icebp
sbb
in
sbb
mov
mov
mov
xchg
inc
das
lret
xchg
nop
cli
inc
fcoms
call
jge
sub
add
sbb
lcall
shrb
negl
incl
movsb
popa
daa
mov
arpl
xor
adc
cmp
push
jle
pushl
cld
or
ja
leave
aas
jo
ret
ret
sahf
pusha
fdivp
shll
or
push
push
pop
mov
decl
dec
loopne
movsb
lcall
add
inc
iret
sbb
test
sbb
call
repnz
jae
pop
sgdtl
sahf
add
ljmp
xor
xchg
hlt
aas
pop
sbb
leave
inc
idivl
orl
pop
lcall
stos
pop
fcomps
jmp
testl
and
cmp
lret
out
dec
cmp
loope
mov
imul
dec
decl
icebp
mov
xchg
jl
mov
rcrb
stos
xchg
insb
lods
ds
ud0
mov
test
mov
orl
out
loopne
repnz
inc
dec
push
clc
sub
ret
mov
scas
sarb
mov
out
mov
into
addr16
lcall
sbb
xchg
jmp
ss
call
adc
mov
call
fistpll
fiadds
cmc
pop
call
xchg
pop
mov
ror
push
loop
add
test
adcb
jno
ret
mov
jmp
sbb
jb
mov
je
in
or
push
push
sub
lea
xchg
incl
jnp
or
xor
mov
in
push
inc
push
scas
insb
jmp
imul
ficoms
lds
dec
pop
pop
mov
push
js
popf
mov
in
pusha
les
mov
movsl
pop
dec
add
push
add
pop
idiv
pop
jg
xor
xor
mov
call
xchg
sbb
sti
xlat
insb
test
in
dec
out
imul
mov
push
or
hlt
push
mov
push
fs
pop
jb
mov
xor
dec
dec
jg
out
mov
jae
cld
incl
cld
jnp
push
xchg
mov
sub
rol
mov
outsb
push
sbb
call
xor
or
out
push
jne
inc
fstpt
or
cmpl
cmp
ret
stos
and
sbb
nop
into
dec
jg
push
std
jne
clc
mov
test
xor
pop
stc
jno
cmp
cmpsl
test
ja
jno
loop
xor
neg
cmpsl
push
push
jge
jnp
in
repz
jb
xlat
lods
movsl
xchg
test
mov
rcll
xor
push
pop
or
adcl
push
aad
jno
jmp
and
push
test
ss
das
cmp
jbe
pop
add
mov
jmp
add
fimull
cmpsl
dec
push
xor
insb
shlb
shrb
aaa
xchg
aaa
int3
mov
jge
decl
or
std
sbb
xor
xor
cmp
push
pop
fs
cli
ljmp
xchg
scas
arpl
std
ds
pop
insb
call
jl
lret
xchg
adc
aaa
lahf
rol
lods
lret
les
push
mov
pop
aad
lcall
das
cli
ffreep
cmp
outsl
xchg
stos
mov
out
sahf
dec
jg
in
cltd
sub
jae
add
or
sub
pop
mov
dec
jnp
ja
fiadds
cmpl
outsb
ud0
std
mov
or
push
sub
dec
and
ret
out
xchg
ljmp
es
dec
sbb
decl
mov
sub
cmpb
mov
xor
subb
jmp
pop
pop
push
outsl
xchg
push
pop
or
insb
add
aam
aad
in
lret
push
xor
add
pusha
rolb
test
adc
call
and
mov
inc
loope
insb
scas
xor
xchg
rol
sub
push
xchg
out
ret
dec
incl
pop
cmp
daa
mov
pop
sti
movsb
loope
lea
repz
dec
cltd
adc
or
dec
pop
jge
cli
repz
movsb
movsl
test
and
mov
xchg
jo
dec
inc
xlat
outsb
push
mov
add
clc
dec
sti
mov
mov
shll
call
and
imul
jb
test
repnz
repnz
adc
je
nop
mov
ficoml
pop
mov
pop
out
jp
scas
insl
rolb
out
lods
setne
mov
cli
sarl
mov
cli
int
pop
outsb
cwtl
movsb
mov
std
fistpll
call
mov
xchg
addr16
jg
push
in
aad
xchg
dec
and
mov
mov
insl
dec
cmpsl
inc
das
adc
ljmp
rclb
dec
and
nop
adc
add
xchg
jne
push
call
sbb
mov
cmp
inc
and
ret
icebp
sub
decl
add
sub
jp
or
test
enter
sbb
call
jmp
adc
jg
add
xor
sbb
das
jmp
lock
dec
add
inc
xorb
push
fmuls
mov
mov
xchg
or
pop
add
jl
inc
lcall
xchg
fnstsw
test
push
cwtl
xchg
cmp
div
xchg
call
call
xchg
mov
or
int
mov
sbb
call
decl
xor
aad
call
loopne
call
inc
pop
shlb
pushl
out
sub
sbb
ffreep
sti
in
jmp
je
sbb
and
jmp
push
inc
or
dec
sub
lock
dec
icebp
sub
xchg
sahf
adc
daa
cmpsl
xlat
cli
fwait
add
cmc
dec
dec
mov
mov
dec
sbb
cmp
xor
pop
gs
ljmp
add
xchg
push
es
call
fwait
and
fistpll
bound
xlat
adc
cmpb
xchg
mov
cmp
mov
jg
push
lret
xchg
push
adc
jnp
test
ja
cmpsl
and
outsl
aad
jg
ljmp
fmull
xchg
push
adc
lcall
push
test
shll
xor
cmpsl
test
sbb
dec
push
pop
mov
lcall
int3
movsl
mov
int
cmp
jne
icebp
add
mov
sub
shr
addr16
jg
ficoms
sbb
lahf
sbb
test
imul
sub
incl
movsbl
mov
daa
out
adc
in
mov
push
mov
decl
jmp
outsl
in
popl
imul
push
scas
lret
adc
jmp
xchg
jae
jae
test
cmp
jg
push
adc
decl
addr16
sub
xchg
push
ss
lret
repz
fidivrs
outsb
fisubrs
int
lcall
xchg
in
pop
jae
lret
xor
pop
xchg
imul
dec
ljmp
ss
not
iret
arpl
cmc
pop
jle
mov
or
cs
pushf
fdivrp
ljmp
fs
adc
sbb
jb
jno
cmc
pop
xorb
out
loop
dec
inc
cmp
lret
std
sub
jmp
xchg
cli
mulb
cmp
jae
inc
mov
sub
xchg
popa
scas
adc
adc
fisubl
mov
call
xchg
xchg
outsb
or
cld
jle
scas
push
dec
daa
adc
test
push
or
fcomip
ja
push
add
or
push
stos
in
movsl
roll
popa
jno
shr
cmpsl
imul
stos
insb
sub
inc
ret
lret
lea
sub
pop
jae
lcall
lcall
jle
sub
sar
mov
mov
loop
mov
jno
fldt
decl
jne
outsb
incb
jmp
pop
stc
sub
faddl
sub
daa
shr
setno
insl
or
iret
lret
pop
clc
jmp
sub
or
aam
mov
jmp
rcl
mov
add
mov
scas
ret
pop
xchg
rcr
xlat
scas
fists
cmp
pushl
push
xrelease
inc
jns
int3
push
inc
ds
scas
sbb
shl
in
add
repz
lcall
dec
fmuls
jmp
hlt
add
not
xchg
sub
push
adc
and
out
cld
repnz
testb
and
icebp
xchg
jne
iret
ja
enter
add
dec
cwtl
jge
aad
fs
xor
call
lock
push
ret
mov
rcr
leave
into
repnz
push
ja
call
sti
xor
out
inc
and
push
icebp
xor
adc
sahf
mov
xchg
imul
mov
in
shr
sub
test
insb
test
addr16
cmc
mov
dec
adc
mov
jp
movsb
pop
xor
lods
andb
ljmp
out
test
push
imul
add
and
xlat
push
stos
jle
sub
pop
push
sub
jnp
lcall
fists
jmp
out
and
adc
add
jno
or
cs
mov
and
incl
cs
iret
scas
ds
popf
cmp
imul
xchg
int3
stos
xlat
sbb
push
mov
mov
outsl
pop
jge
inc
imul
ljmp
sub
jb
inc
sbb
push
inc
lret
cmp
sbb
cmp
jg
fs
xor
daa
and
jmp
jg
bound
rorb
jg
push
negl
mov
adc
test
leave
imul
incl
jnp
xchg
test
mov
push
ljmp
js
dec
in
xchg
es
inc
lods
xlat
adc
stc
and
xchg
sahf
push
jecxz
clc
out
mov
cmpl
push
xchg
ror
je
mov
js
push
repnz
or
or
mov
or
lea
cmp
pop
in
cmp
sub
and
mov
push
idiv
outsl
cli
scas
mov
fdivl
enter
xchg
adc
aam
lcall
nop
fucom
ret
stos
pop
mov
inc
mov
std
stos
imul
loope
add
dec
rcr
mov
insl
pop
lahf
pop
ficomps
jp
adc
stos
add
mov
sbb
or
mov
and
mov
loope
repz
sbb
xor
sbb
insb
mov
and
incl
imul
mov
dec
in
decl
sbb
add
inc
push
ret
ljmp
xor
sub
dec
push
cld
and
adc
imul
les
lea
js
aas
pop
add
out
into
rcrb
inc
inc
mov
cmp
mov
lcall
pop
jns
jge
inc
cli
call
mov
push
push
adc
movsl
sub
in
call
shrb
push
add
in
mov
mov
pop
dec
add
jns
decl
ds
lock
mov
cltd
pop
or
movsb
dec
test
sbb
insb
insb
sbb
lock
incl
cmp
into
lods
leave
scas
cmp
notl
clc
xor
push
fistpll
sbb
js
cmp
outsl
ljmp
jmp
mov
call
pushf
mov
pop
les
pop
or
leave
sub
loope
mov
sub
mov
mov
rcrb
jb
cmp
jg
jnp
movsl
pushf
add
xchg
decl
mov
popf
add
jnp
push
sub
pushf
jb
pop
repnz
decl
lods
outsb
dec
and
adc
out
mov
sub
aad
leave
mov
decl
jmp
mov
push
mov
testl
jle
ljmp
cwtl
adc
dec
cmpsb
push
mov
sub
call
gs
popa
fcmovne
and
pop
mov
imul
sbb
push
aaa
pushf
ret
decl
scas
les
xchg
xlat
sbb
lock
sbb
and
ljmp
addl
jns
or
mov
call
or
stos
test
fcomps
add
sbb
fsubrs
insb
stos
dec
popa
cs
jmp
mov
std
add
loopne
popa
je
shlb
fdivl
fidivl
mov
jecxz
or
xor
push
inc
fsubp
add
pusha
jno
aaa
test
repz
ljmp
scas
cmp
stos
jo
xchg
jle
push
scas
push
jmp
adc
cmp
mov
mov
sarl
cmp
jmp
mov
add
nop
jmp
adc
arpl
inc
mov
mov
in
fwait
jl
ja
and
or
add
jmp
f2xm1
or
xchg
cmc
insb
cmpsl
and
pop
jne
and
lret
mov
mov
ror
fs
cmp
call
test
cld
gs
rclb
insl
cli
jmp
in
cmp
mov
dec
clc
inc
dec
lods
dec
outsb
repnz
sbb
xchg
fcmovnbe
pushf
repz
or
dec
sar
ljmp
sbb
repnz
cli
lods
test
push
dec
pop
out
mov
jmp
mov
mov
inc
arpl
in
lds
cmp
lods
mov
incl
fs
cltd
into
rcll
mov
scas
ror
enter
adc
jmp
cmpsl
iret
je
xor
jg
incl
dec
lcall
dec
jecxz
repnz
js
lret
clc
cwtl
pop
pusha
cmp
stos
xchg
stos
dec
cld
call
stos
rcrl
out
inc
lcall
and
jp
mov
push
xor
ret
and
loopne
jnp
stos
jge
cmp
adc
iret
sub
dec
push
stc
push
cltd
sub
dec
insb
or
mov
xlat
insl
push
cltd
adc
mov
mov
pop
in
cmp
mov
mov
fcmovbe
pop
push
xchg
cs
sbbb
outsl
outsl
cmp
ljmp
mov
scas
in
xor
stc
and
les
ss
jno
or
mov
lcall
add
cmp
dec
les
sub
inc
push
sarb
scas
sub
mov
and
mov
inc
push
dec
incl
add
test
pop
xchg
push
shlb
fsts
pop
jnp
lds
pop
sbb
ljmp
inc
shrl
sub
or
pop
pop
pop
jae
cwtl
jb
fwait
lcall
enter
xchg
jmp
inc
and
cmpsb
addr16
test
ljmp
push
or
mov
xor
decl
lret
mov
repnz
pushl
dec
cwtl
jno
dec
mov
pop
push
movsb
int
mov
xchg
push
add
push
xor
dec
dec
add
mov
das
sar
std
add
loopne
rcll
mov
jmp
je
lret
cld
inc
pop
or
cmp
dec
cmp
nop
inc
adc
or
dec
push
fcoms
inc
scas
mov
das
es
mov
fnstcw
out
mov
cmp
cs
into
pop
int
cltd
push
or
jl
mov
cmp
xor
insl
jb
call
jmp
aad
es
dec
or
inc
jmp
dec
adc
xchg
mov
lods
call
xchg
je
fcomip
aas
sub
and
in
jne
cmp
das
arpl
mov
addr16
incl
push
xchg
jne
mov
cmc
mov
dec
shlb
repz
in
adc
xchg
stc
ds
decl
das
mov
inc
jns
mov
mov
fsts
stc
movsb
and
fists
std
stos
sahf
add
dec
xor
adc
sahf
xlat
gs
fdiv
mov
call
dec
cmpsl
cs
mov
or
cs
jbe
pop
aaa
out
lods
ljmp
call
adc
mov
jecxz
nop
pop
add
popf
iret
das
jne
out
pop
xchg
shll
sbb
outsl
mov
sbb
fimull
dec
leave
xchg
mov
mov
sbb
fnstsw
adc
cwtl
mov
decl
enter
push
mov
inc
sbbb
or
push
inc
outsb
pop
sbb
lcall
ljmp
push
mov
or
gs
in
mov
lock
pushl
xchg
fdiv
dec
addr16
ds
push
push
ja
jno
mov
adc
lahf
adc
clc
adc
dec
adc
mov
jmp
push
movsb
call
lods
xchg
sub
fidivs
je
int
jmp
in
mov
ja
or
call
push
insl
leave
xorb
cmp
sub
js
ficomps
stc
jle
ljmp
les
lods
add
jno
add
push
xlat
call
mov
or
inc
jne
jns
lret
lods
mov
sahf
xchg
mov
iret
divl
sub
ljmp
mov
jb
cmp
sbb
dec
js
movntq
xchg
mov
bound
pop
dec
mov
in
je
jmp
aaa
call
std
jmp
lock
cwtl
sbb
mov
rcrb
xor
test
mov
inc
inc
lcall
jno
in
cmc
fldt
xor
jle
lahf
in
pop
sbb
ss
dec
and
sbb
outsl
jb
fisttpl
mov
mov
imul
mov
lds
loopne
mov
and
xor
sahf
enter
mov
mov
into
dec
mov
and
pop
push
sbb
testb
adc
inc
push
into
sarb
in
ret
jmp
call
loop
test
sbb
push
jns
sarl
mov
inc
jecxz
add
ljmp
cmc
mov
xchg
and
into
sbb
es
gs
sbb
test
fmul
ljmp
mov
daa
aad
scas
inc
inc
mov
daa
mov
in
mov
xor
mov
mov
and
and
jmp
decl
out
rorl
clc
mov
mov
push
mov
fcomip
mov
test
mov
clc
mov
shrb
jmp
mov
js
cmp
xor
movsl
xor
mov
or
jmp
push
pop
dec
rorb
cmc
int3
insl
push
lea
pop
mov
fbld
shlb
pop
jl
sbb
jo
xor
dec
pop
mov
jnp
xchg
inc
pop
adc
add
mov
dec
loop
cmp
xchg
cli
stos
adc
adcl
xchg
aam
dec
adc
dec
les
lea
push
clc
xchg
js
flds
adc
adc
pushl
andb
xchg
mov
or
out
or
jp
inc
les
xchg
scas
stc
mov
and
xlat
mov
sti
cmpsl
in
push
fcomip
jmp
mov
dec
sub
jle
or
subl
push
and
imul
shll
pop
mov
emms
inc
imul
call
rolb
mov
cmpsl
push
insl
dec
loopne
xchg
fs
sub
and
mov
or
repnz
sub
dec
sbb
mov
lock
pop
jo
pushf
cmp
cmp
ljmp
mov
fldl
jge
es
aad
nop
aad
cwtl
cmc
mov
fucom
es
fcomps
push
push
shlb
mov
jp
adc
call
pop
mov
and
ss
insb
lahf
pop
push
adc
pop
cmp
movsb
leave
pop
mov
jmp
pushf
ret
push
and
cmp
pop
and
pop
add
lea
fcom
lcall
and
sbb
push
inc
idivb
jnp
sbbb
lahf
and
fstps
pushl
std
inc
push
adcb
adc
mov
xchg
jl
jb
mov
mov
std
cld
test
cli
push
lods
xor
into
sti
inc
leave
cmpl
and
adc
push
sub
pop
movsb
or
ljmp
scas
test
mov
xor
fsub
pop
xlat
scas
nop
pop
movsl
in
cmp
hlt
lcall
jge
in
pop
mov
push
scas
jle
jnp
sbb
jnp
jno
jo
daa
mov
test
call
scas
cmp
loopne
in
xchg
shl
jnp
mov
dec
sbb
inc
stos
test
dec
push
lea
pushf
cmp
jae
popl
xor
pop
adc
mov
ud0
pop
orb
hlt
xor
sbb
outsl
stos
rolb
clc
mov
jmp
adc
push
dec
fnstcw
sbb
mov
pusha
mov
mov
add
jp
bt
and
lahf
fisubrl
gs
into
mov
jno
dec
mov
aam
sub
call
adcl
aaa
mull
jnp
orb
jecxz
sub
addb
inc
mov
mov
ret
pop
in
popf
ret
not
aaa
repz
xchg
inc
sahf
sbb
mov
and
sub
or
sub
xor
ljmp
xchg
ds
fimull
cmc
cmp
je
pop
rolb
jmp
shll
cld
into
adc
dec
mov
fucomip
inc
mov
ret
xor
dec
in
mov
jae
ds
pushf
in
jecxz
mov
imul
add
lret
test
out
mov
lds
fildll
adc
insl
icebp
repz
aaa
sbb
and
inc
idiv
push
fdivl
add
lcall
lcall
mov
sbb
and
shrb
lret
adc
adc
incl
jge
mov
mov
outsb
mov
lea
sub
inc
dec
xchg
mov
jl
iret
cmp
clc
pop
push
jecxz
cmp
adc
pop
rorl
lods
scas
fcomip
loop
xchg
loop
jmp
inc
mov
xchg
rclb
stos
dec
fs
pop
sub
test
out
push
mov
decl
fwait
aaa
or
mov
or
inc
pop
test
int3
jmp
jbe
and
aas
inc
cmp
adc
js
sub
inc
pop
in
cmp
into
mov
push
out
aaa
insb
xchg
roll
bound
cmpsb
sti
add
call
adc
inc
aad
xchg
xchg
shlb
jp
cmp
mov
outsl
in
decl
dec
xlat
ret
iret
popa
add
xlat
icebp
ds
ss
shrl
mov
xchg
push
repz
lcall
inc
lea
dec
sbb
push
pop
notb
cmp
rorb
icebp
mov
loop
cld
sbb
and
or
add
cli
lret
dec
lock
and
cmp
mov
mov
jl
imul
loop
cli
sti
cmp
sbb
das
sbb
fcoml
mov
add
lcall
jbe
lret
pusha
push
ja
imul
and
mov
incl
rclb
aam
jl
add
in
clc
pop
lods
jp
jg
loop
jg
ljmp
adc
shlb
bound
mov
dec
daa
pushl
je
xchg
pusha
enter
jmp
mov
icebp
daa
loop
jno
enter
mov
clc
rolb
adc
repz
push
jae
xor
call
mov
xchg
pop
iret
pushf
outsb
fwait
dec
test
or
or
sbb
dec
adc
jle
mov
lea
mov
shr
mov
adc
or
sub
push
test
mov
call
lret
jg
loopne
aad
pop
mov
sahf
cmp
or
iret
adc
ret
and
inc
sub
leave
push
push
push
repnz
jmp
daa
push
rcr
dec
mov
cli
fsubl
sub
mov
daa
int3
call
mov
shrb
dec
cltd
std
std
cmp
les
jno
or
cmpsl
jl
jmp
xchg
cli
js
aas
in
pushf
ljmp
shll
adc
dec
movsl
das
cmp
mov
pushl
mov
dec
xor
fmull
adc
fiadds
xchg
pop
jle
in
adc
test
push
testb
adc
jae
jmp
adc
pusha
cmp
cmp
fsts
call
fcoml
call
lret
xlat
sub
mov
loope
xchg
xchg
dec
or
cmpsl
xchg
idivb
scas
sub
lret
and
jecxz
jmp
push
xchg
sbb
adc
inc
mov
xor
movsl
sub
xchg
xchg
sbbb
call
fmuls
mov
test
mov
enter
movsl
mov
push
fstp
sub
lcall
sbbl
adc
hlt
mov
adc
into
sub
sbb
sbb
jne
enter
je
and
daa
mov
sbb
ficoms
ret
dec
aad
push
and
js
dec
cld
out
loop
inc
mov
test
stc
push
or
xor
call
or
dec
mov
in
iret
mov
pop
push
xchg
push
jno
mov
decl
ljmp
sub
push
sbb
arpl
sbb
jbe
test
pop
and
pusha
pop
and
pop
pop
scas
pushf
in
scas
inc
ds
jg
push
test
bsr
js
dec
ss
add
mov
sub
or
xchg
mov
jns
jae
add
sub
xchg
gs
mov
xlat
call
or
jle
call
rcrb
fdivrs
jo
cmpsl
xchg
outsl
xor
cmp
mov
movsb
add
incl
mov
adc
ds
push
repnz
adc
fnstsw
outsl
jl
ret
out
popf
shl
leave
movb
adc
pop
dec
xor
cli
jl
addr16
decb
fs
sbb
adc
or
shll
in
dec
dec
addl
mov
sub
pushl
arpl
cmpsb
clc
add
xchg
out
loop
adc
testb
jg
pop
int3
mov
pop
insl
dec
pop
pushf
xchg
jmp
iret
scas
ja
push
dec
insl
dec
jle
lods
jmp
ret
add
or
iret
lahf
ret
in
dec
ret
das
jne
pop
mov
inc
stos
out
call
gs
xchg
cmpsl
pop
roll
dec
inc
fldt
mov
sub
lods
ret
lods
addr16
fcomip
add
frstor
test
inc
cld
movsb
nop
call
leave
sbb
js
jl
clc
xchg
iret
lock
add
out
dec
adc
xor
jl
nop
add
scas
adc
pop
fcmove
popf
push
inc
fwait
dec
or
push
stos
jae
inc
sbb
addb
clc
sahf
mov
ljmp
cwtl
sub
out
dec
adc
push
imull
insb
hlt
pop
lret
xchg
pop
movsl
mov
jb
sub
stos
fisttps
in
daa
mov
and
jmp
imul
js
cld
jae
push
jno
ret
jecxz
out
jae
sbb
mov
inc
icebp
pushf
je
shll
jg
mov
pushl
cmp
ret
rorl
arpl
dec
cmpsb
or
repz
in
lcall
ret
movsb
aaa
sbb
cmp
pop
ret
mov
mov
pop
dec
jbe
lock
lods
dec
jo
in
fneni(8087
xchg
call
jbe
fcmovbe
pop
add
jnp
sub
cs
sbb
mov
lock
pushf
push
and
xchg
stos
dec
cmc
sbbb
add
js
rcr
bound
decl
int3
repz
xor
outsb
rcrl
out
mov
adc
jg
lcall
shll
fs
mov
mov
mov
and
lods
in
pop
jno
fildl
jno
add
push
jmp
mov
sar
out
clc
call
lock
pop
das
and
js
mov
insl
nop
daa
sbb
addr16
pushl
jno
xchg
sbb
cmp
ret
loop
lahf
sbb
mov
fwait
repz
iret
clc
pushf
dec
xor
xchg
dec
scas
lea
rcrb
jg
and
and
addr16
cmp
daa
jbe
dec
inc
addr16
in
or
lcall
cmp
sahf
das
js
out
xor
cmpsl
aad
push
inc
shlb
jbe
sahf
call
call
mov
push
icebp
xor
aad
fsubrs
sub
pusha
fbld
imul
sti
ret
fisubrl
dec
mov
sbb
fisttpl
out
test
xchg
push
xchg
das
adc
lahf
pop
loopne
scas
dec
jne
cmp
incl
mov
mov
cmp
dec
jecxz
sub
mov
jg
jg
inc
into
clc
cs
lcall
negl
mov
pushl
sbb
cwtl
cmp
divl
fsts
dec
lcall
in
movsl
cmp
pop
repz
inc
aad
fsubr
inc
jo
movsb
fisttpll
lds
icebp
xchg
xchg
add
call
push
pop
xor
das
cmp
jg
mov
fdivl
aam
decl
jle
out
incb
lea
cmp
mov
bnd
incl
stos
in
nop
add
jl
mov
jb
push
popa
in
jno
call
cld
and
pop
lret
cmpsl
mov
fs
pop
and
lock
mov
jmp
xchg
mov
ja
mov
fnstcw
cmp
mov
loope
outsl
nop
popf
shl
out
fdivrp
pushl
into
stos
ss
imul
push
xor
pusha
xchg
arpl
or
jo
out
cli
sbb
test
jle
push
movsb
lret
push
mov
jbe
xchg
out
or
push
sti
sahf
cmp
popa
lcall
jmp
out
xchg
sbb
adc
aaa
mov
test
cli
out
je
mov
sub
or
test
adc
rorb
outsl
mov
xchg
mov
cli
pop
pop
ljmp
inc
mov
jg
mov
cli
add
adc
cltd
negl
push
mov
lds
loope
push
xchg
push
push
aad
jmp
or
xchg
push
push
popa
xchg
cmp
fsubrl
jbe
cmp
jb
sar
pop
jbe
pushl
xchg
mov
in
cltd
mov
les
jne
int
sbbl
push
push
and
das
fidivs
int3
gs
fisubrs
jns
cmp
pop
in
mov
dec
cmp
call
push
mov
mov
jmp
pusha
push
and
jg
stc
lcall
cltd
adc
xchg
aaa
test
sbb
mov
or
lods
and
stos
repz
mov
call
or
mov
cmpb
xchg
dec
add
jb
outsl
inc
cmp
and
jmp
push
aam
sarl
orl
jle
jg
loope
xchg
mov
and
mov
fsubr
sti
mov
xor
cmpsb
dec
rorb
lcall
je
add
jmp
mov
push
in
xchg
add
or
lcall
xchg
cld
pop
pop
xor
cltd
xchg
xchg
arpl
movsb
imul
sub
mov
call
sti
insb
mov
out
push
jl
iret
cmc
fmul
or
pop
push
mov
cmp
cmc
movsb
incl
int
outsl
clc
push
shll
mov
mov
cmpsb
sarl
inc
js
xor
push
xchg
mov
inc
cmp
and
cmp
jecxz
aam
inc
adc
pop
mov
pushf
fcmovu
daa
fldcw
push
gs
xor
dec
push
mov
hlt
cmp
shrb
aaa
lcall
stc
sbb
push
mov
into
mov
sbb
popl
daa
mov
cli
and
pop
sbb
cli
xchg
in
xchg
and
dec
inc
jge
add
mov
daa
sub
cmp
lcall
push
ss
imul
fdivp
pop
adc
fadds
mov
in
in
and
fbstp
dec
or
sbb
cwtl
add
scas
repz
gs
inc
cld
das
movsb
jne
mov
fldt
cld
cmpsb
incl
or
sub
push
pop
ss
dec
mov
outsb
or
hlt
dec
push
jmp
add
aad
dec
bound
jno
or
fwait
xchg
negl
inc
mov
cli
or
mov
cmp
jne
and
sub
adc
sarb
lock
mov
add
loop
clc
and
jnp
jns
pop
push
sub
adc
loopne
loopne
push
adc
std
mov
mov
outsb
lea
xchg
outsl
jle
jle
mov
push
repnz
or
cld
mov
mov
pushl
je
leave
leave
adc
repnz
inc
ds
add
loop
pop
push
bound
incl
inc
pop
adc
pop
lret
push
imul
dec
cltd
lahf
add
divb
aad
sub
jg
js
dec
xor
add
pop
mov
ret
outsb
or
sbb
jg
notb
jle
inc
aam
int
dec
rclb
push
loop
aam
pop
outsb
enter
cld
in
jne
xabort
fwait
xchg
sbb
cld
mov
xchg
notb
lcall
sbb
or
and
xor
out
sub
iret
sbb
lods
call
decl
jb
add
test
out
es
int3
xchg
adc
inc
mov
jbe
lds
bound
mov
jbe
inc
js
lahf
cmp
dec
je
lds
mov
adc
cmp
test
and
notl
or
loop
dec
movsb
cmpl
loopne
call
js
xor
sbb
cmp
movsb
lds
arpl
cmc
loopne
jecxz
divl
dec
sub
scas
clc
pop
out
mov
ficomps
out
int
ljmp
popa
test
in
mov
cli
mov
jl
cltd
cmp
mov
lcall
sub
ret
mov
jae
popf
scas
or
jmp
sbb
dec
mov
mov
hlt
xor
ds
cmp
push
and
outsb
ds
aaa
and
cmp
sbb
pop
push
pop
pusha
jg
fwait
adc
inc
inc
or
cmpsl
js
xor
xor
pop
data16
push
dec
adc
mov
xchg
dec
pop
add
xor
test
adc
xor
xor
mov
in
addr16
pushl
into
sahf
imul
stos
push
sbb
jnp
lahf
ret
in
mov
and
idiv
pushl
sub
or
push
inc
pop
mov
std
sub
sahf
dec
adc
testb
pushf
ljmp
ds
insb
or
lods
inc
mov
inc
dec
jg
sbb
cmpsb
add
mov
incl
imul
mov
dec
mov
ud0
sbb
xorb
xchg
jmp
leave
or
bound
or
jp
mov
shl
adc
mov
ljmp
clc
inc
cmp
sbb
call
lock
sbb
xchg
xor
xchg
ss
mov
cltd
mov
jo
add
insl
pusha
pop
fmull
cs
mov
stos
xor
leave
icebp
xor
jmp
bound
ljmp
aaa
out
les
mov
cmp
iret
aam
incl
dec
push
data16
adc
test
sub
mov
cmp
mulb
jmp
sub
xlat
cmc
popf
lret
jne
jle
aas
sub
mov
loop
loope
push
cmpl
or
leave
stos
jp
xchg
or
adc
std
incl
pop
leave
scas
dec
imul
and
lods
ds
xlat
or
xchg
pop
xchg
out
xchg
imul
adc
dec
repnz
pop
pop
cld
mov
jns
adc
jg
test
call
jg
inc
mov
cmp
out
mov
lods
pop
cwtl
push
test
neg
rclb
popa
mov
add
loopne
dec
inc
stos
clc
cmp
sbb
scas
mov
push
dec
lahf
decl
lret
and
mov
sbb
jbe
scas
sbb
mov
and
or
cmp
call
or
mov
xchg
call
divps
add
push
add
cmpb
xchg
jg
call
dec
pop
fidivrs
in
and
fs
and
mov
and
cld
call
add
stc
push
and
hlt
xor
mov
pop
jnp
pop
jns
mov
das
cli
in
repz
mov
gs
jns
mulb
jp
adc
lcall
push
leave
les
fcomip
inc
scas
fdivr
cmpsb
sbb
lahf
nop
xchg
aad
bound
call
shr
lds
xchg
mov
adc
pop
in
das
jo
test
mov
fdivrl
xchg
incl
movsb
mov
mov
add
xor
push
int
push
daa
mov
sbb
jge
mov
imul
movsl
testb
out
ret
adc
cmpb
cwtl
inc
pushl
sti
or
xor
call
ljmp
std
mov
and
mov
lcall
aas
mov
insb
lret
inc
push
sbb
cmp
sub
mov
push
xor
js
in
ds
push
add
test
out
cmp
or
mov
xchg
test
incl
mov
or
insb
shlb
pusha
push
out
and
sti
sbb
add
pusha
inc
add
sti
mov
or
gs
jecxz
mov
imul
push
out
ss
inc
clc
add
pushl
add
adc
sub
mov
ffreep
xlat
push
in
mov
sub
mov
jg
inc
nop
lret
and
mov
sub
insb
pop
adc
lock
mov
daa
mov
test
and
sub
scas
cli
push
lahf
test
bound
or
pushf
mov
and
push
sub
inc
cwtl
push
stc
incl
sbb
inc
rcrl
cwtl
add
jnp
loopne
xor
std
mov
mov
lcall
gs
cmc
fistpl
inc
sti
xchg
and
movb
jg
dec
add
add
decl
rorl
pop
mov
loopne
mov
pushl
nop
ret
outsl
fldenv
in
pushf
scas
ljmp
pop
xchg
inc
sbb
lret
lea
popa
jns
call
jecxz
sub
idiv
dec
cmc
push
mov
pusha
pop
imul
ljmp
lcall
js
adc
jp
mov
push
sbb
cs
imul
adc
fs
and
push
pop
adc
out
cmpsb
add
mov
call
mov
inc
lret
ljmp
decl
lret
cmc
inc
mov
pushf
bound
clc
decl
out
loopne
out
nop
and
xchg
cld
jns
and
outsb
shlb
call
insb
aaa
xor
dec
lret
arpl
clc
mov
add
dec
and
jns
popf
cld
pop
fdivr
mov
mov
cmpsl
push
sub
pushl
aaa
aas
pop
jecxz
add
cmc
movl
xchg
cmp
adc
mov
cmp
stc
or
mov
jb
testl
jno
jmp
mov
or
pushl
push
xor
mov
dec
fisubrs
stos
sub
mov
sarl
sbb
jo
adc
add
lcall
jle
bound
iret
pop
sar
lds
scas
dec
lcall
xchg
push
outsl
dec
pop
test
in
lret
xchg
pop
push
pop
push
in
outsl
clc
cli
jle
ljmp
pop
xlat
inc
jns
pop
mov
sbb
inc
cmp
arpl
pop
lcall
idivb
loopne
fcmovu
lret
in
nop
popa
cltd
or
arpl
imul
decl
stos
jmp
push
in
mov
adc
out
inc
ss
push
dec
push
xchg
aaa
arpl
inc
in
decl
ret
push
cmp
push
xor
shll
repz
pop
pop
fistps
ljmp
add
mov
in
pop
or
mov
inc
ja
cld
dec
ds
aas
sbb
ljmp
mov
ljmp
pop
stos
dec
insl
scas
cs
jecxz
test
inc
adc
cmpsb
adc
ret
sti
cli
inc
ret
outsb
or
mov
push
mov
leave
sub
xchg
scas
or
mov
jnp
mov
jge
nop
dec
imul
pushl
push
push
mov
push
dec
dec
mul
pop
lret
addr16
popa
mov
out
fisubrs
dec
jno
or
aas
std
fs
fwait
sbb
rolb
xchg
inc
or
arpl
scas
and
jp
ljmp
movsl
and
mov
push
jae
inc
cmp
add
imul
sub
pop
adc
call
mov
pop
fadd
in
ja
sti
outsb
push
and
jo
pop
outsl
les
in
out
or
pop
sbb
sti
pop
and
or
js
dec
adc
leave
xor
jb
sub
or
lods
cmp
repz
push
sbb
xchg
incl
pop
mov
xor
mov
jbe
clc
fldt
ljmp
scas
dec
aas
out
push
lret
lock
clc
mov
sbb
rclb
xchg
int
push
imul
push
ljmp
mov
and
dec
jge
mov
sbb
adc
decl
xchg
sub
mov
and
cmp
sbb
xor
dec
lahf
loopne
xchg
push
out
cmc
dec
pop
sbb
push
aam
sbb
test
loop
push
xor
pop
out
decl
adc
xchg
pop
sub
xchg
xlat
or
shll
mov
std
mov
lret
data16
push
lcall
test
fs
mov
int3
jno
push
push
xlat
aaa
subl
ja
call
shlb
scas
xchg
pop
call
mov
mov
jg
sbb
ja
gs
mov
dec
pusha
cltd
sbb
loope
lea
or
mov
pushl
pop
leave
in
lcall
movsl
fsubrs
push
mov
mov
xchg
out
lcall
mov
mov
inc
lds
cmp
lret
cwtl
pop
mov
sub
lcall
jmp
iret
int3
xlat
add
out
insb
nop
scas
test
stc
inc
test
out
dec
add
pop
inc
inc
sahf
lahf
sbb
imul
incl
call
fwait
cld
push
and
sbb
repnz
pop
andl
inc
lcall
dec
mov
loopne
xor
mov
sti
das
jno
dec
or
es
fmull
xchg
lcall
ret
xor
mov
or
jno
outsl
and
sbb
inc
push
outsl
dec
pop
gs
rcr
hlt
repnz
rol
ss
fistps
inc
stos
xchg
sbb
subb
data16
cs
add
ror
dec
xchg
jge
ret
es
fwait
call
enter
inc
sbb
jle
cmp
jecxz
popa
pop
inc
loope
xor
sbb
mov
jl
call
in
incb
scas
push
xchg
test
adc
mov
outsb
stc
test
cmc
sti
mov
lret
outsl
incl
jmp
mov
inc
and
lds
ljmp
jmp
push
cmp
mov
shll
sub
dec
add
xchg
cmpsl
and
cltd
dec
ficomps
push
dec
dec
xchg
mov
xor
sub
call
mov
add
inc
jg
pushl
inc
adc
enter
xor
es
cmp
adc
inc
mov
cld
lcall
std
or
sub
mov
xchg
inc
or
mov
pushf
lcall
call
out
cli
dec
fstpt
enter
mov
xor
orb
outsb
inc
cli
aam
and
mov
filds
mov
xor
js
into
subl
imul
outsl
call
gs
jmp
js
xor
fadds
ja
dec
jo
add
shll
push
in
out
lock
nop
hlt
push
js
cli
daa
mov
dec
ss
scas
pop
loope
call
adc
pop
xchg
sub
push
das
sbb
or
out
clc
ds
sahf
or
pushl
orl
lahf
pop
mov
test
add
jle
sbb
lcall
xchg
sbb
xchg
mov
ret
mov
leave
fldenv
pusha
cmp
adc
ljmp
push
push
loop
push
ljmp
not
mov
or
rolb
jg
sbb
stc
xchg
inc
xor
lcall
inc
dec
and
jb
pop
mov
iret
and
push
and
cli
fsubr
ljmp
mov
ret
push
adc
dec
ljmp
decl
ss
jne
mov
das
movsl
inc
jecxz
inc
out
jl
scas
cmc
stos
addb
jmp
fimull
inc
mov
int
insl
pushf
pop
mov
call
stos
cmpsb
or
aas
jecxz
xor
jne
stos
testl
dec
movsl
dec
in
mov
push
pop
sbb
repnz
sarb
sbb
cwtl
dec
or
mov
aam
cmpb
xlat
idivb
add
in
push
jb,pn
and
call
das
jge
lds
pusha
fcoms
xchg
push
add
fsubr
orl
fwait
push
sub
les
andl
xlat
in
movsb
pop
sti
ja
fcmovb
inc
and
push
jo
into
mov
push
push
jge
and
ds
xchg
sbb
pop
ljmp
mov
jno,pn
inc
enter
xchg
test
leave
or
xor
add
movsb
pop
jo
roll
incl
adc
mov
or
sti
daa
ja
mov
mov
call
test
scas
sbb
incl
shlb
inc
mov
in
mov
add
test
and
jmp
aas
xchg
sbb
loope
call
add
cmpsb
or
mov
aas
dec
ds
ljmp
out
push
aaa
add
je
sahf
adc
or
icebp
addr16
shlb
jmp
shr
push
rcll
cmp
push
jns
iret
sbb
mov
aas
leave
loopne
lcall
inc
xor
xor
stos
aam
mov
orl
mov
movsb
adc
or
call
adc
fldt
xor
pusha
mov
xchg
xchg
jge
aad
stos
cmp
pop
daa
incl
inc
xor
pop
scas
pop
dec
repz
fwait
mov
sbbl
lcall
pop
xor
jbe
aad
jne
cmp
and
inc
int3
or
sar
movsl
es
mov
lds
inc
sub
aas
mov
insb
sub
call
fs
adc
fisttpll
popf
pop
jae
imul
aas
jg
pop
jg
insb
je
addr16
pushl
rolb
sahf
add
aad
mov
jg
cmp
jbe
push
xchg
ds
push
mov
xchg
add
ja
inc
das
sar
xchg
xchg
adc
xchg
mov
iret
mov
scas
clc
call
jne
pushf
je
js
sbb
jl
or
sbb
mov
lds
movsl
push
mov
movsb
jo
stos
xor
jnp
imul
ljmp
sub
cmp
sub
and
pop
xchg
test
cmc
cmp
call
or
or
mov
pop
adc
ja
jne
mov
push
jns
pop
fwait
inc
pop
cmp
adc
in
sub
ss
inc
pop
xchg
and
sub
fcomip
scas
mov
notb
rorb
pop
inc
fnstsw
lds
inc
sub
pushl
imul
pop
xchg
mov
fisttpl
pusha
adc
test
int
pusha
addr16
aad
mov
mov
rolb
sub
fisubs
mov
adc
sti
incl
xchg
in
rcrb
sbb
and
mov
ror
rorl
aad
push
cmp
jae
xchg
lcall
mov
pop
or
and
lret
addr16
test
inc
xchg
or
lcall
and
cltd
push
popa
fs
mov
push
hlt
cmp
scas
das
loopne
insb
jmp
or
leave
mov
and
cltd
jbe
pop
cmpsl
outsb
sub
mov
push
xor
or
jmp
jle
mov
jae
or
and
adc
xchg
in
lock
xchg
loopne
jmp
shlb
lock
push
cli
jmp
stc
cld
mov
stos
xchg
stos
dec
scas
in
daa
xlat
stos
jge
jp
in
mov
push
out
ss
add
test
sbb
push
bound
out
cli
adc
adc
jmp
imul
clc
xorb
call
inc
sbb
imul
sbb
sbb
mov
insb
or
inc
jecxz
bound
sbb
pushl
xchg
scas
bound
js
dec
add
lahf
mov
mov
push
pop
data16
dec
notl
xor
lcall
or
out
lcall
loop
ja
inc
lcall
jnp
jge
ret
ss
lcall
pop
cmp
xor
jmp
pop
dec
jl
add
dec
cwtl
ret
enter
fwait
push
lds
call
sub
xchg
lret
push
dec
sbb
sbb
int
xchg
adc
jecxz
mov
mov
call
sub
jp
pop
ja
pop
rcl
call
adc
rol
add
call
andl
push
mov
push
mov
or
push
shll
int3
or
push
mov
push
push
mov
jb
sti
mov
imull
mov
aaa
cld
hlt
stos
mov
inc
mov
dec
imul
inc
cmpsb
out
push
in
jg
and
ret
fadds
stos
lcall
mov
mov
sbb
xchg
mov
mov
mov
pop
jmp
fidivl
jb
gs
sub
mov
outsl
mov
sub
into
bound
sbb
nop
rcrb
cmpsl
lret
and
pop
inc
push
xor
loop
into
xchg
xchg
jae
push
dec
data16
push
sarb
sub
aam
jp
enter
scas
out
jae,pt
xchg
loopne
lock
jg
mov
pop
gs
fnstcw
sub
adc
jp
leave
adc
jno
jp
cs
in
adc
rorb
inc
rorl
sub
pop
inc
call
movq
pushl
mulb
xor
fcomp
jecxz
pop
push
cltd
push
bound
ljmp
incb
in
movsb
add
aas
mov
sbb
loope
aad
ret
push
and
xor
ljmp
jno
xor
fiaddl
pop
gs
pop
xchg
hlt
xchg
xchg
iret
pop
test
ljmp
data16
insl
scas
pop
jp
lods
cmp
jb
je
xchg
out
add
decl
or
out
mov
arpl
int
and
xor
pop
and
cmpsl
sbb
lcall
repz
repz
inc
rcr
pushf
dec
fdivl
jge
sarb
and
or
mov
scas
adc
xchg
sbb
sub
in
cld
cs
mov
popa
arpl
cmp
scas
mov
jb
xor
jge
cmpsb
lret
bnd
fstps
add
call
or
enter
add
add
xlat
jns
adc
mov
in
push
inc
jae
xor
fisubs
sahf
stos
pop
mov
insl
rcr
ljmp
add
into
jp
mov
sti
out
xor
stos
mov
sbb
xchg
ljmp
pop
jmp
cmpsb
test
cwtl
push
pop
sub
out
mov
sbbb
loop
pminsw
je
push
ljmp
mov
xor
jmp
add
add
mov
icebp
push
push
mov
lock
decl
pop
mov
sqrtps
jmp
call
and
push
sti
lahf
hlt
iret
dec
sub
lcall
xor
mov
insl
adc
cltd
lds
loope
mov
addr16
incl
stos
mov
xorb
psllw
cmpsl
arpl
add
dec
push
pushl
aaa
divb
lcall
adc
dec
fistpll
add
ret
jp
push
incl
aas
loopne
insb
lahf
test
ljmp
xor
lret
lcall
jbe
shr
mov
pop
cmpsl
notb
adc
and
bswap
outsb
jmp
pop
mov
lock
and
fildl
cmpsl
inc
jae
movb
call
mov
sub
push
rcl
inc
in
inc
fwait
jae
rcrb
jle
call
inc
sub
cmpsb
xlat
or
and
fmul
insl
and
pop
and
data16
xchg
xor
or
ljmp
sar
cli
pop
push
xlat
cs
xchg
shr
aad
jo
lock
jne
pop
adc
lcall
in
xor
mov
daa
xor
fnsave
sub
into
loopne
xchg
lret
add
pop
lods
lahf
push
stos
fstps
test
sbb
outsb
ljmp
mov
inc
sbb
push
in
in
rcrb
lret
and
cmpsb
cmp
add
sub
add
dec
shll
cmp
jmp
fwait
sub
jle
jbe
xlat
lds
in
xchg
movsl
mov
mov
pop
fs
pop
cmc
in
enter
ljmp
aam
hlt
lret
xchg
or
adc
mov
cltd
adc
inc
jmp
call
sub
icebp
popf
sub
jb
adc
loope
inc
inc
jo
leave
ljmp
cli
dec
push
pusha
insb
imul
cmp
push
mov
push
insl
sbb
hlt
out
mov
and
jmp
inc
inc
xchg
push
adc
in
je
lcall
xor
push
test
adc
push
stc
das
xchg
ljmp
clc
test
push
das
mov
mov
imul
cmc
leave
cs
mov
push
aas
mov
sbb
dec
icebp
daa
jge
jne
cld
sbb
xchg
dec
mov
mov
mov
mov
test
sub
mov
call
sbb
cmp
mov
loope
add
mov
shr
push
pushl
mov
xlat
scas
into
ret
mov
add
sahf
mov
xchg
pop
insl
fcoms
mov
jo
das
into
xchg
mov
sti
adc
sub
iret
dec
add
fsub
adc
pop
xchg
pop
fbstp
push
mov
add
mov
inc
mov
lcall
imulb
in
xchg
stc
iret
mov
sub
dec
push
loop
lock
jmp
mov
add
ret
mov
shll
mov
push
jmp
js
pop
pop
add
add
add
dec
ss
std
xorl
xchg
dec
adc
mov
sbb
sbb
out
lea
jmp
out
push
lcall
iret
push
and
jmp
dec
ljmp
or
data16
das
cmp
in
lcall
sbbb
je
dec
jge
mov
push
pop
cwtl
add
mov
scas
rcll
cli
addb
mov
decl
insb
insl
dec
jne
imul
xchg
repz
sub
orl
xor
incl
fcos
dec
pop
xchg
xor
and
push
push
add
flds
pop
push
aaa
push
cwtl
xorb
outsl
cli
out
and
int3
outsl
jbe
insl
dec
mov
adc
push
adcb
out
test
and
mov
stos
out
gs
sub
andb
incl
dec
std
insb
std
imul
pop
mov
mov
dec
dec
in
clc
rcrl
dec
jb
pop
dec
push
dec
sub
js
pop
sbb
adc
incl
decl
sub
xlat
test
pop
shr
jnp
ds
pop
bound
mov
lds
pop
xchg
jg
mov
cld
addl
aam
mov
mov
jl
je
insb
and
call
inc
aaa
cli
fstl
pop
movsl
jg
push
cmpsb
cmc
lods
mov
jnp
sar
incl
sub
lods
pusha
or
aas
push
cmpb
adc
sbb
push
in
mov
push
outsb
ljmp
and
sub
ss
clc
cs
mov
inc
push
push
data16
stc
sub
fucomi
frstor
jne
enter
jl
lcall
dec
inc
in
insl
les
xchg
mov
xchg
mov
cmp
sbb
mov
pusha
dec
clc
add
pop
mov
jmp
sub
out
inc
push
dec
jns
out
dec
lock
aad
mov
addr16
inc
fldt
call
add
push
in
adc
daa
out
xchg
sarl
sbb
sbb
and
aad
rcrl
fs
sub
aad
adc
jg
into
in
cld
fbld
jno
mov
push
xchg
push
hlt
out
and
inc
and
push
push
in
test
sti
shll
mov
sbb
sbb
ficomps
add
sbb
sub
or
mov
sarb
shlb
enter
sahf
call
add
out
call
icebp
mov
and
dec
mov
dec
bound
sbb
mov
adc
ljmp
xchg
int
jae
or
fs
jb
dec
fcmovbe
mov
lcall
scas
jmp
sbb
pop
sub
test
adc
and
adc
pop
jg
cli
mov
inc
and
fwait
cmp
adc
or
or
jmp
aas
adc
outsb
push
sub
jle
adc
addl
and
dec
add
cmpl
dec
xchg
dec
sbb
jecxz
inc
popf
fidivrl
out
sbb
mov
push
push
and
push
mov
adc
daa
mov
fidivs
hlt
add
pushf
inc
cmpsl
pop
setl
lds
bound
add
dec
test
sti
mov
je
cli
or
leave
ljmp
mov
push
into
dec
jmp
fsqrt
sbb
lds
je
ljmp
mov
test
jmp
jmp
sub
into
mov
ficoms
mov
sbb
es
dec
inc
inc
pop
and
adc
inc
cwtl
test
ljmp
cmp
bound
and
mov
xchg
inc
scas
js
inc
bound
jb
iret
inc
mul
inc
push
call
sarl
xchg
sbb
in
shll
stos
mov
adc
fcoml
fildl
sbb
loopne
test
pusha
pop
repnz
or
cmp
aas
dec
and
dec
dec
dec
lea
pop
cwtl
xor
add
ljmp
and
data16
ficomps
dec
pusha
pusha
ret
cmp
inc
jb
push
xor
jb
fildl
jg
ja
clc
ret
adc
inc
xchg
imul
mov
js
and
stc
in
lods
icebp
ljmp
pop
pushf
ja
testb
ja
rcl
mov
stos
jl
daa
push
jl
fdivl
sar
lcall
sahf
or
xchg
mov
sub
test
mov
and
shl
inc
stc
sbb
fsub
out
clc
aas
push
loopne
adc
dec
call
gs
cmp
push
or
push
sbb
in
les
out
fidivs
lret
subb
and
lea
adc
imul
decl
xor
cmc
rclb
shlb
stos
inc
aas
cmpsb
xchg
orb
cld
pop
lock
ja
nop
or
pop
cmpsl
push
xchg
mov
jg
stos
jnp
add
push
aad
push
jle
and
rcrb
mov
call
fsubs
mov
aas
gs
sub
gs
push
mov
rol
stos
mov
cmc
lcall
iret
mov
test
jmp
sub
sub
cmc
inc
out
jne
pop
mov
xchg
pop
call
adc
loopne
mov
jbe
enter
mov
push
or
push
push
ljmp
push
mov
loope
ss
shrl
xchg
xchg
leave
out
ss
push
push
and
cltd
fisubl
mov
clc
or
xchg
cs
mov
jge
jl
subl
adc
lret
jae
dec
ljmp
mov
fdivrp
mov
jg
push
popa
stc
and
adc
cltd
add
pop
fildl
mov
lods
lret
adc
fisubrl
and
pop
and
ljmp
xchg
push
adc
scas
ds
test
xchg
repnz
rcrb
stos
mov
jp
mov
decl
les
rolb
sub
xchg
inc
jnp
decl
xchg
mov
mov
xchg
test
insl
mov
cmp
jg
pushf
push
jp
loope
push
stos
test
dec
cmp
imul
dec
jg
mov
jg
pushl
mov
cltd
xlat
out
aad
pop
mov
rcll
in
jecxz
je
or
repnz
repz
jb
sarb
jns
mov
arpl
decl
je
js
lret
repz
es
fsubl
xor
add
cmp
call
loopne
xor
ljmp
adc
mov
add
fs
push
mov
fdivrs
dec
adc
inc
insb
jg
ds
cld
inc
jmp
cmp
or
push
inc
loop
fdivrp
decl
cli
xlat
rcl
push
out
rcrb
scas
xor
imul
rcrl
jbe
xlat
pushl
ljmp
cld
mov
js
stc
sub
jns
xchg
mov
add
push
pop
jmp
jmp
mov
push
lret
insl
dec
push
fdivr
push
mov
jmp
inc
add
dec
push
mov
std
sahf
adc
fwait
mov
addr16
in
scas
iret
mov
mov
jg
sub
arpl
push
in
aas
ljmp
push
iret
lock
or
and
jmp
pop
enter
out
adcl
loopne
ficoml
jg
pushl
les
in
les
cmp
xchg
call
sub
jge
and
int3
sub
cmp
xchg
xlat
mov
sub
das
xchg
pushl
fwait
dec
mov
mov
and
xor
repnz
in
fsubrl
fwait
in
or
or
pushl
imul
scas
mov
xor
cwtl
in
ret
mov
mov
sar
jg
mov
shll
mov
cld
jge
sub
sbb
add
call
dec
lods
xchg
addr16
push
into
xchg
aaa
jns
loope
pop
cmp
popf
stos
push
repz
das
sarb
sub
pop
in
mov
mov
mov
std
lcall
sahf
addr16
push
sbb
outsb
aad
push
mov
xor
jg
jg
adc
cmpsl
pop
adc
and
ljmp
lret
sub
in
incl
int3
jmp
and
sbb
cmp
xor
inc
sub
mov
daa
out
xlat
cmp
call
addl
cmp
jmp
loop
sbb
xchg
test
push
pop
ret
ja
push
je
loop
pop
pop
arpl
lcall
fwait
cmp
push
mov
add
in
xchg
lock
movsl
jp
xchg
iret
andb
jo
mov
sub
stc
add
sbb
sub
jmp
inc
push
push
in
xor
insl
cli
scas
clc
ljmp
or
fwait
inc
lock
xchg
nop
sbb
lock
ljmp
cli
ror
call
push
push
mov
into
push
push
sub
mov
shrl
mov
call
fs
out
inc
fcmovb
fistl
dec
iret
cwtl
dec
jb
out
push
mov
jecxz
incl
dec
popa
movsl
fisttps
and
mov
fcoms
sub
mov
leave
lahf
aad
pop
adc
rcr
das
jns
js
mov
call
dec
popf
cli
mov
add
pop
je
mov
leave
mov
xchg
mov
icebp
pusha
sbb
decl
fildl
cmp
inc
mov
stc
dec
lods
dec
aad
push
cltd
and
std
call
dec
mov
pop
test
pop
hlt
mov
xchg
push
sub
popf
decl
pop
in
sarl
xorl
dec
pop
lret
call
jno
xor
gs
lahf
adc
push
cmpsl
push
sub
rclb
ds
inc
rcll
pop
cmp
push
daa
mov
imul
push
inc
lcall
popa
cmp
and
rcrl
sbb
mov
mov
mov
pop
lock
xorb
jmp
xchg
pop
push
outsl
add
dec
mov
mov
fs
sbb
aad
test
inc
inc
test
push
mov
lods
incl
cmp
adc
sahf
mov
jle
mov
sbb
xlat
jnp
fmul
clc
mov
push
xor
push
or
mov
mov
std
incl
out
fsub
in
test
out
mov
test
mov
std
outsb
cmpsl
popa
xor
lcall
out
bound
stos
mov
movsb
push
jl
jno
mov
inc
mov
dec
into
sbb
out
popf
popf
sti
ret
repnz
es
loope
adc
xchg
imul
xor
cmp
xchg
test
nop
sti
aaa
scas
lret
jecxz
jns
cltd
mov
dec
pop
ss
scas
jmp
sub
into
add
xor
sub
or
mov
fcmovbe
hlt
je
das
in
jmp
ds
call
or
push
lahf
imul
xchg
pop
negl
lods
push
xchg
add
leave
jae
mov
sbb
xchg
insl
mov
push
xor
in
imul
mov
jg
dec
pop
adc
jae
adc
and
push
xchg
add
popa
pop
sbb
xor
lahf
decl
pop
lahf
scas
and
cmp
call
cmp
sbb
pop
mov
jo
jg
stc
jecxz
test
inc
lcall
and
test
mov
push
dec
adc
pusha
xchg
test
loopne
sub
sub
cli
pushl
lods
stc
cmp
push
das
push
loopne
jmp
mov
mov
data16
hlt
bound
into
loope
test
aaa
xchg
vdivps
daa
mov
mov
dec
mov
adc
test
xchg
xor
push
pushl
rcl
push
dec
lahf
xchg
in
mov
inc
inc
mov
xlat
xor
enter
add
ljmp
adc
dec
daa
insb
cmpsb
imul
push
mov
cmp
dec
adc
cmp
mov
pop
cli
scas
pop
icebp
xor
lock
cmp
push
jne
ret
call
inc
mov
dec
shrl
hlt
push
clc
cmp
jg
into
fildll
dec
into
in
into
lcall
and
mov
jp
or
add
loop
addl
out
int3
cltd
add
inc
insl
dec
pop
rclb
cmpsb
data16
les
addr16
pop
subl
mov
mov
pushl
dec
jmp
int
mov
incl
fdivl
out
add
mov
test
in
inc
mov
jo
pop
lock
popf
iret
aas
sbb
jmp
repnz
lret
mov
loopne
xchg
mov
cmp
outsl
mov
jno
adc
outsl
push
inc
or
xchg
mov
ss
mov
push
insb
mov
add
cmp
jne
pushl
pop
inc
and
pushl
call
outsl
sbbb
cwtl
pop
fnsave
sbb
inc
xor
or
ljmp
lds
xchg
mov
xchg
cs
mov
cli
dec
or
inc
inc
adc
pop
cld
jmp
repnz
ret
jl
cmp
cmc
sub
adc
test
pop
call
push
xor
and
es
imul
int3
mov
jg
add
jns
jg
inc
sub
sbb
dec
mov
ds
test
pushl
lahf
dec
je
sahf
inc
lods
cwtl
stos
mov
push
dec
ds
mov
cmp
incl
arpl
jne
fidivrs
mov
repz
add
cmp
decl
push
fsubrs
sbb
and
call
dec
cmpsb
cmp
push
mov
xchg
movsb
xchg
sti
cmpsb
adc
or
pop
cltd
mov
push
push
adc
stos
mov
or
sub
or
jo
sahf
stos
pop
and
jge
cmp
int3
mov
ljmp
sarb
jmp
enter
sahf
roll
or
rorb
popa
std
xor
sbb
test
xor
test
pop
ja
daa
inc
shrb
push
decl
lods
pushf
insl
mov
sbb
inc
out
adc
stc
mov
test
cmp
dec
fdiv
mov
inc
sbb
bound
adc
pop
outsl
push
loopne
xchg
pop
fdivrs
jg
aaa
mov
inc
push
ja
fcoml
push
shrl
icebp
imul
dec
jmp
ljmp
mov
xchg
imul
mov
ljmp
shl
roll
adc
pop
dec
out
dec
push
jge
jnp
dec
jns
dec
or
jge
push
clc
repz
orb
fs
jb
insb
popa
mov
adc
pushf
sbb
ljmp
mov
clc
or
jmp
mov
add
fmul
in
sbb
xor
pushl
std
xchg
les
icebp
sub
mov
clc
pop
sbb
lcall
dec
adc
loopne
and
jecxz
ja,pn
push
inc
test
fwait
test
in
dec
int
add
outsb
scas
call
and
lock
hlt
shlb
mov
das
or
mov
call
in
and
xor
cli
xchg
fs
or
dec
in
rol
lcall
fcomps
or
xor
repz
inc
scas
fwait
outsl
in
lods
sbb
dec
adc
aas
decl
pusha
xlat
lahf
sbb
jp
push
xchg
fimull
and
mov
aaa
jmp
incl
loop
das
ljmp
mov
xor
push
arpl
mov
out
sub
and
decl
xchg
aas
mov
fmull
and
xor
lods
mov
jg
push
lods
loopne
aas
pop
dec
xchg
scas
push
in
arpl
sub
push
sub
insb
push
xchg
pushl
out
ret
cmp
mov
lods
push
xor
lret
inc
xor
mov
pop
gs
pushf
outsl
inc
ljmp
enter
mov
jge
inc
cmpb
movsl
push
push
cmpl
jae
pop
mov
inc
shll
push
pusha
cmc
dec
pop
pop
mov
shrb
mov
aad
lcall
inc
inc
popl
xorb
inc
mov
in
dec
nop
and
mov
push
ficoml
xor
icebp
mov
pushl
inc
jp
xchg
xchg
mov
cmp
mov
xchg
lock
push
ljmp
pop
hlt
xchg
sti
loopne
imul
push
je
inc
xor
ret
jmp
pop
scas
cmp
loopne
int3
pusha
add
adc
fs
aaa
cmc
scas
aad
rcrb
jge
dec
pusha
sarb
ljmp
fisubl
lahf
inc
clc
imul
mov
fisubs
jmp
mov
sub
pop
pushf
hlt
jmp
xor
mov
repz
test
fucomip
xlat
jns
pop
sbb
sbb
xchg
loop
aaa
xchg
stc
push
pop
stos
faddl
jb
call
xchg
cmpsl
rol
je
int3
popf
dec
stc
pop
pop
pop
push
mov
mov
mov
jmp
inc
mull
or
loope
repz
or
jge
mov
jmp
jns
lret
cmpsb
adc
jg
and
dec
push
lcall
and
call
jae
fisubrl
decl
scas
xor
pop
jp
xchg
and
adc
enter
dec
ja
xor
cmp
push
cld
sahf
push
dec
bound
rorb
les
outsl
push
adc
clc
mov
lcall
lcall
dec
jg
or
call
and
jo
cmpsl
je
cmp
dec
sbb
test
add
in
es
in
mov
fildll
push
ret
sti
mov
jecxz
add
outsl
cmp
ja
xchg
mov
lods
cmp
or
dec
xor
lcall
in
or
inc
xor
sti
jmp
das
cli
notl
sbbl
mov
cld
test
mov
mov
cmp
push
testb
and
and
adc
ljmp
sub
xchg
sbb
rorl
sbb
and
jp
sbb
fldt
adc
xor
call
jne
test
pop
cmp
repz
sbb
and
pop
sbb
jno
jbe
ljmp
push
adc
xchg
nop
or
loopne
mov
jg
sub
mov
bound
mov
testl
xor
jmp
mov
push
sbb
mov
outsl
stc
stc
mov
cs
ret
push
das
insl
sarb
pushf
aaa
sahf
push
fisubs
dec
dec
push
mov
call
adc
cmp
nop
and
sarb
sub
jl
adc
aad
adc
ds
ljmp
xchg
dec
inc
into
and
jmp
call
dec
insb
loope
lods
fs
xchg
mov
dec
push
cmp
jp
cltd
lock
je
sub
pushl
repz
lods
fs
mov
stos
cwtl
dec
xchg
aaa
xchg
nop
sbb
call
lcall
mov
aad
fcomps
rclb
and
decl
and
and
std
cmpsl
fnsave
loop
je
or
pop
iret
mov
jnp
repnz
mov
scas
ljmp
sbb
scas
xchg
insb
rcrl
add
mov
mov
adc
std
ljmp
out
cmp
xlat
add
test
push
iret
mov
dec
gs
stos
pusha
adc
dec
cmpsb
lock
bnd
mov
out
insb
fldcw
lds
insb
xor
pushf
and
xchg
cld
mov
mov
out
mov
mov
sub
popa
fdivs
test
loopne
mov
sbb
popa
pop
mov
lahf
push
xor
in
dec
push
dec
or
mov
fsubrl
cmc
mov
pop
pop
in
testl
repnz
adc
cmpsb
sub
cmp
jns
hlt
mov
pushl
js
lret
push
push
out
push
push
xchg
call
pop
enter
in
sbb
sbb
or
sbb
js
iret
dec
loop
std
cmc
or
jmp
xchg
pop
test
dec
push
sub
in
pop
mov
dec
ffreep
fidivl
push
mov
call
mov
sbb
aam
add
stos
sub
in
fmuls
dec
xchg
test
adc
mov
dec
push
inc
into
les
clc
inc
inc
sahf
loopne
dec
and
ljmp
push
call
jo
xchg
cmp
xchg
je
cli
cwtl
mov
push
cmp
mov
lcall
mov
inc
mov
xor
add
or
cmpsl
add
adc
decl
imul
idiv
leave
xor
inc
mov
lea
mov
imul
lcall
movsl
xchg
insb
inc
mov
pushf
in
mov
outsl
jo
add
repnz
xor
call
jae
push
sub
sbb
mov
inc
lods
xchg
ficompl
les
in
jno
nop
push
jmp
jmp
pop
dec
pop
pop
and
add
cmp
movsl
gs
pop
ljmp
sub
xlat
mov
popf
or
push
add
push
push
push
in
lea
out
aam
push
in
inc
add
adc
jecxz
cmp
jecxz
cmc
xchg
pop
dec
test
sahf
fcomip
jmp
pushf
pop
xorl
pop
dec
pop
or
ror
cmpsl
mov
shlb
mov
sub
test
enter
ret
push
imull
adc
clc
fistpl
mov
mull
sbb
jb
xchg
inc
mov
call
into
mov
mov
cmpl
imul
jmp
fistpl
push
pop
add
into
dec
sbb
ds
test
test
mov
mov
js
fcomi
cmpsl
xor
lods
jno
incl
ja
cwtl
jbe
push
pmuludq
dec
or
call
fsubrp
imul
loopne
call
in
pusha
imul
scas
and
push
jecxz
pushl
sarb
adc
hlt
loop
outsl
shrb
mov
cmp
mov
xor
fdivr
xor
pop
mov
test
cli
sub
in
sub
ss
lcall
in
scas
test
in
pop
leave
enter
bound
mov
fs
jecxz
jmp
scas
or
call
xor
inc
daa
test
outsb
aam
mov
cli
push
xor
repnz
inc
inc
pushf
xor
and
lret
pop
sar
movsl
out
push
sbb
pop
push
jns
fstpl
decl
dec
ss
mov
mov
pop
and
jg
xchg
and
mov
mov
int3
pushf
lcall
movsb
ja
sarl
jg
mov
xchg
data16
leave
stos
jecxz
frstor
loop
arpl
dec
incl
mov
lcall
inc
jg
in
push
rcrb
and
push
aam
call
stos
inc
cld
sub
add
int
cmpsl
cmp
cmp
dec
repz
mov
leave
iret
push
ljmp
jle
leave
js
xchg
je
shll
xlat
push
pushf
shlb
jnp
ljmp
aaa
ret
mov
sub
xchg
idiv
ds
adc
movb
cmc
jns
pop
mov
mov
jge
mov
cltd
adc
data16
mov
push
loopne
inc
pop
mov
roll
jmp
decl
mov
push
mov
jmp
adc
aas
cmp
ret
jnp
jne
fdiv
mov
push
xor
jp
scas
sbb
decl
int3
push
push
lcall
cld
out
lods
fcoml
test
lea
repnz
inc
out
je
les
test
sbb
imul
cmp
push
rol
lcall
sbb
pop
push
in
pushf
xchg
cld
xor
call
pop
ljmp
fsubr
jge
inc
xchg
inc
fwait
mov
outsb
push
inc
ljmp
xorb
mov
movsl
xor
cmpsb
decl
mulb
icebp
dec
lret
insl
in
add
or
test
lods
sbb
mov
or
fisubs
mov
or
fnstcw
pop
xor
jg
lcall
mov
enter
icebp
ja
adc
pop
loop
loopne
add
jg
incl
xor
insl
mov
pusha
jo
frstor
xchg
mov
sub
stc
iret
cltd
scas
cltd
mov
jl
sub
ljmp
dec
mov
add
sbb
jle
inc
subl
negb
decl
xor
mov
push
jae
push
or
xchg
add
sub
pushf
jp
test
aad
and
jmp
and
sub
daa
mov
shr
insb
xor
mov
sub
mov
shll
add
and
outsl
push
add
cld
enter
ljmp
push
sti
psrlq
and
sti
ret
mov
adc
cmp
dec
jle
xor
out
shlb
mov
test
cmp
dec
or
repnz
mov
ss
decl
dec
cltd
out
jno
in
repz
dec
mov
incl
loopne
aas
cmp
push
in
movsb
mov
mov
jl
sti
mov
ja
inc
pop
or
push
ffreep
xor
add
jnp
cmp
xor
fmuls
mov
shll
jg
rcll
xchg
push
mov
cmp
pop
arpl
pop
push
cld
cmp
cltd
pop
cs
push
nop
cmpsb
leave
lods
add
mov
push
jno
mov
inc
and
jg
fdivl
das
mov
push
lock
fs
lcall
loope
inc
adc
pop
sbb
sub
loope
insl
jb
mov
jecxz
fwait
ljmp
movsl
mov
enter
lret
push
ret
mov
incl
jns
das
loope
xlat
push
push
xchg
cmp
jp
push
in
stc
xor
mov
mov
insb
mov
pushl
adc
mov
addr16
sbb
and
pop
push
lock
fcmovnbe
mov
lret
adc
fdivp
push
jb
outsb
xlat
inc
addl
jb
mov
mov
out
jb
add
mov
das
mov
arpl
jmp
jns
mov
sub
outsl
subl
xchg
or
inc
data16
cli
dec
call
in
push
rolb
scas
rolb
xor
inc
cli
sub
xor
fbld
push
xchg
int3
xchg
inc
jae
or
push
mov
mov
fistpl
test
out
pop
pop
push
mov
sub
mov
push
inc
jo
ret
and
shll
jmp
pop
in
in
test
rcrb
insb
stc
popa
xchg
ret
sbb
fidivl
incl
icebp
inc
mov
ja
and
orb
or
loope
lods
adc
inc
adc
cmpsb
stc
mov
dec
adc
loop
push
lret
xor
jne
cmp
dec
inc
mov
stc
outsl
push
ja
add
into
dec
out
cmp
clc
insl
enter
lcall
add
adc
dec
dec
aad
ss
out
cltd
pusha
ficompl
test
add
call
movsl
xor
call
sbb
jns
cli
movb
stos
ja
cs
add
mov
out
adc
ljmp
jle
push
inc
sub
call
mov
add
lret
xchg
not
mov
sub
stos
mov
dec
scas
mov
xchg
icebp
je
shrl
incl
xchg
or
test
adc
addr16
cmp
lcall
icebp
int
add
orl
and
aad
popf
inc
clc
sub
jge
sub
decl
adc
push
pop
pop
jno
mov
sub
dec
jmp
and
or
fwait
push
sbb
out
popa
mov
repnz
fisubs
mov
rcr
mov
lahf
adc
jmp
sbb
xchg
mov
cmp
mov
jmp
mov
jmp
mov
jle
out
push
inc
mov
or
dec
xchg
cmpsl
cmc
or
mov
fwait
jle
inc
ret
lret
dec
mov
mov
loope
mov
rorb
movsb
push
cmp
mov
aaa
repnz
lcall
cmp
loop
call
cmp
daa
xor
and
jecxz
dec
mov
and
jmp
fcmovnu
imul
cs
cwtl
mov
cmp
xor
rorl
xchg
ja
dec
pushl
push
add
cmp
imul
out
inc
or
dec
push
xchg
dec
sub
jmp
mov
xchg
add
sbb
mov
add
fidivrl
call
movsl
mov
xchg
stc
pop
out
jl
mov
dec
xor
test
dec
add
bound
cmp
ret
mov
jmp
insb
jl
sbb
xchg
push
jae
nop
mov
fimuls
jg
inc
std
jmp
pop
cmp
mov
inc
rorb
fnstenv
aad
push
push
lock
sub
xor
add
ljmp
push
fmulp
cmp
sub
jmp
lock
cmp
iret
aam
sbb
pusha
xchg
aas
sbb
stos
jmp
fbld
fcompl
aam
test
lcall
cld
mov
cmpb
push
fisubrs
mov
pushl
pop
mov
adc
sub
shr
adc
call
or
jmp
js
loope
pop
jmp
in
lods
cmpsl
fcomi
js
add
adc
dec
call
test
test
adc
add
mov
adc
mov
incl
jge
sbb
and
or
lret
xchg
lock
push
hlt
jg
jecxz
dec
into
fiaddl
push
and
dec
in
mov
data16
lds
movsl
jge
cmp
sub
jle
xchg
sub
pop
ret
out
in
jmp
mov
jg
cmp
clflush
jmp
ror
pop
mov
xor
jmp
xchg
test
insl
lea
fucom
dec
mov
insl
out
sub
in
xor
rcll
cs
xchg
iret
les
cmp
mov
or
loope
cmpsb
rcll
incl
movsl
in
sub
inc
and
mov
dec
jo
add
inc
cli
cmpl
call
stos
push
pop
std
cmp
mov
loopne
push
das
enter
lea
mov
rol
call
push
dec
lahf
mov
mov
and
mov
sub
fidivs
mov
xor
leave
icebp
bound
xchg
sub
pop
sub
sar
mov
addr16
clc
pushl
aas
adc
mov
out
xchg
ja
jp
mov
andl
mov
ljmp
xchg
inc
shll
or
adc
imull
flds
cli
dec
sti
dec
jmp
rcll
jle
mov
inc
repnz
scas
and
call
sbb
add
jno
jns
call
pushf
jecxz
dec
xor
and
jmp
imul
pop
lock
jg
xchg
mov
jb
stos
add
es
xchg
mov
xor
scas
cli
mulb
arpl
pop
sti
jmp
es
pop
mov
cli
popf
pop
mov
ljmp
adc
cs
add
andb
mov
cltd
push
pop
pushf
dec
push
rorl
push
arpl
rolb
loopne
push
pop
fldenv
in
mov
test
dec
mov
jae
dec
mov
jnp
dec
fcomip
jmp
push
push
fcompl
jle
xchg
out
dec
mov
in
fdivrp
cmc
lock
jae
add
lcall
mov
addl
cmp
sbb
icebp
mov
xchg
mov
push
add
push
cmpsb
in
mov
mov
lcall
ss
stos
mov
mov
xchg
mov
fxch
mov
popa
xchg
xchg
push
hlt
out
cli
adcl
and
mov
jg
xor
pushf
in
sub
stc
or
jle
int3
push
jno
inc
push
fldcw
arpl
int3
adc
pop
std
es
subb
adc
mov
pushl
mov
aad
call
out
movsl
inc
push
adc
mov
es
add
stc
outsb
mov
jl
jae
lock
mov
movsl
xorl
sar
jmp
leave
push
pop
jecxz
jns
push
pop
js
jge
out
xor
adc
out
lods
movl
push
mov
mov
icebp
or
fucomp
sub
and
cmp
mov
repz
lcall
jbe
les
mov
lcall
add
sarl
clc
loope
pushl
sub
les
xchg
shlb
test
mov
push
xchg
lds
lcall
pop
push
mov
int3
cmc
cmpsl
pop
jl
pop
mov
mov
push
rclb
fbld
add
gs
push
mov
adc
mov
adc
jecxz
ss
into
sbb
lock
insl
popa
mov
mov
mov
mov
dec
std
sbbl
lcall
out
jmp
mov
ds
mov
fidivl
jo
jno
mov
ficomps
andb
jp
cmp
dec
cli
xchg
lods
test
sbb
cmp
mov
pop
int
and
mov
xor
nop
jae
enter
out
push
or
jmp
and
add
ror
or
add
outsb
shrb
mov
jp
ja
icebp
js
push
inc
mov
sbb
mov
and
lods
xor
dec
inc
mov
mov
lcall
and
sahf
dec
sbb
push
xchg
mov
jg
sbb
stc
pop
lret
inc
or
loopne
mov
and
mov
call
add
mov
in
cwtl
fwait
sbb
push
push
arpl
cld
ljmp
mov
xchg
adc
push
push
dec
ss
pop
loop
sbb
cld
pushl
pop
lcall
push
aad
movl
inc
lcall
std
mov
aas
loopne
addr16
adc
mov
jp
lcall
sarl
or
add
xchg
notrack
aad
ljmp
and
jno
mov
aaa
jg
mov
mov
inc
mov
jbe
ret
mov
mov
cmc
xchg
scas
data16
xchg
das
incl
and
inc
mov
ret
inc
adc
mov
adc
daa
rorb
adc
ljmp
xor
add
loop
lea
sti
pop
lock
pop
insb
inc
pop
cld
mov
xchg
xchg
test
dec
lcall
cmpsl
push
dec
adc
add
lea
in
rol
std
and
aaa
cld
jg
mov
mov
repz
out
cli
test
cwtl
pushl
rcrl
dec
jns
sub
xchg
jl
sub
add
dec
pop
ljmp
pop
lock
xchg
lret
mov
aas
sub
xlat
fcmovnu
xchg
mov
mov
je
mov
inc
ja
push
cmp
jbe
repz
mov
mov
incl
add
jecxz
xor
or
xor
xchg
test
adc
fldl
rol
hlt
std
mov
sahf
lcall
dec
mov
sbb
fwait
lret
js
push
out
mov
push
fs
and
fwait
mov
lds
test
pushl
adc
cltd
sub
dec
pusha
push
add
testb
sub
cmpsl
mov
ljmp
sbb
movsl
ret
in
cmp
inc
xor
lock
incl
enter
gs
pop
dec
push
xchg
rorb
js
addl
jae
iret
fwait
or
jmp
jne
cmpsb
adc
insb
call
loope
push
ss
jnp
decl
inc
pop
xchg
imul
mov
mov
ljmp
pop
sub
sti
jmp
or
mov
loope
hlt
adc
jg
imul
xchg
ret
xchg
xchg
test
push
sbb
pushf
or
pop
cmp
inc
stos
mov
jo
bound
xchg
cmp
lea
scas
rclb
lcall
fcomps
push
or
sahf
lahf
mov
pop
fisubrs
push
icebp
mov
outsl
cmp
test
pop
sub
add
orb
stc
jg
mov
inc
add
and
mov
jg
push
and
pushf
nop
cmp
data16
xchg
out
addr16
test
jo
jmp
jl
fcoms
sbb
icebp
movsb
lret
movsl
adc
mov
aad
ds
in
or
add
mov
cmp
push
fs
hlt
bound
dec
xor
dec
pop
idiv
call
pop
mov
inc
std
mov
jmp
adc
and
inc
push
std
jae
bound
add
or
shrb
gs
cmp
out
imul
adc
sbb
jecxz
int3
pop
loopne
call
adc
mov
inc
sbb
es
xchg
call
ret
fucom
fidivrs
lods
aam
pop
aam
call
dec
js
lret
inc
push
mov
or
shlb
sub
fcmovu
add
adc
call
fcmovbe
and
dec
cmc
or
pop
dec
stos
lods
ss
cld
sbb
sarb
or
cmp
stc
mov
negb
fidivs
mov
push
xor
sub
arpl
lcall
loopne
inc
mov
cltd
cli
into
mov
fldl
cmp
popf
daa
idivl
mov
mov
xchg
pop
mov
jae
jns
sbb
or
stos
cmp
cltd
xor
push
addr16
push
dec
jmp
in
lret
inc
xchg
sub
lock
jmp
icebp
mov
or
xor
mov
mov
fnsave
repz
push
ja
decl
jl
cmp
das
push
iret
iret
fisubs
scas
and
cmp
ljmp
jmp
add
iret
shl
mov
cmpsb
out
test
rorl
enter
decl
inc
add
cmp
xor
test
pop
scas
pop
mov
ljmp
test
push
daa
and
aam
roll
pop
sub
cmp
mov
push
dec
pusha
cld
jg
pushl
stos
or
cmp
ficoms
sbb
lods
cld
jae
mov
adc
jmp
jmp
cwtl
xchg
mov
jns
dec
mov
aad
jne
cmp
call
rcll
aas
cld
fisttps
or
adcb
mov
dec
imul
int3
cli
dec
cmp
popw
sbb
lcall
xor
xchg
cmp
lock
adc
incl
ds
mov
shll
movhps
ds
push
js
mov
pusha
int
xchg
jg
jle
call
sbb
in
sbb
jns
data16
loop
test
jg
lcall
jns
aaa
out
dec
xchg
cmp
and
lcall
out
ljmp
imul
xor
repz
push
xor
std
mov
cmp
dec
jl
lock
ljmp
cs
jbe
adc
add
fcoms
pop
fnop
enter
decl
movsl
xor
xchg
sbb
mov
and
aas
addr16
pop
shl
pop
movsb
jle
sbb
mov
ljmp
ret
stos
iret
lahf
xchg
pop
sub
inc
inc
inc
insl
inc
dec
dec
popl
pop
loopne
pushl
mov
inc
push
rcrl
jle
mov
mov
ds
ret
ss
sbb
xor
add
mov
push
addr16
incl
cld
out
fbstp
xor
outsl
push
outsb
sbb
push
lods
dec
decl
sub
xor
dec
xchg
sti
jbe
push
fstp
sub
movsb
sbb
cmp
shlb
push
pushf
mov
enter
int
ret
sub
pop
dec
subl
lock
xchg
xchg
mov
decl
sub
push
shrl
popf
push
enter
add
repnz
fisubs
decl
mov
je
aas
push
push
add
sub
in
adc
loop
addr16
push
mov
jl
jg
call
push
sti
push
out
mov
push
mov
xor
mov
mov
sbb
and
ret
mov
xchg
inc
test
js
loope
cmp
xchg
sahf
and
adc
adc
mov
sbb
dec
xchg
jge
int
movsl
xchg
mov
mov
lcall
pop
leave
ss
or
movb
sub
mov
fneni(8087
mov
daa
add
sub
push
gs
movsl
adc
fdivr
jg
mov
mov
mov
pop
mov
mov
incl
jmp
clc
dec
xor
inc
cli
cli
sbb
inc
das
push
mov
loop
cmpsl
mov
push
leave
adc
outsb
int
dec
dec
outsl
stos
in
in
cwtl
bound
cmp
jmp
mov
lea
lcall
aaa
in
inc
pusha
adc
les
cli
repz
xor
sar
incl
imul
lret
jge
cs
outsb
inc
fildl
int3
xor
xchg
inc
sti
jg
les
test
out
sbb
pop
aas
or
mov
loop
ffreep
test
mov
jg
lret
aas
pop
adc
lcall
xor
mov
add
lret
daa
imul
xchg
inc
iret
sub
sub
add
jns
jmp
incl
xor
hlt
inc
add
adc
out
in
dec
jmp
pop
pop
xor
adc
in
insb
fsincos
ficoml
mov
mov
shrb
cmp
dec
push
std
hlt
push
ret
fbstp
outsl
loop
js
je
xor
lret
int3
mov
push
cs
subb
xchg
rolb
mov
dec
sbb
out
imul
dec
incl
add
push
sub
sarb
test
push
sar
pushl
mov
stos
and
sbb
dec
mov
pop
xor
sbb
aad
mov
adc
out
jo
ljmp
pushf
stc
test
add
sub
or
les
cmp
push
rcrl
call
add
repnz
sahf
fstpt
testb
cmc
cmp
ret
in
sar
mov
xchg
sbb
cmpsl
lret
movb
shl
push
ss
stc
ljmp
loopne
cmp
mov
int3
jne
rolb
test
add
mov
fldcw
aam
mov
mov
or
call
mov
xchg
scas
mov
or
and
sbb
ljmp
jp
shl
or
jne
jecxz
push
fimuls
dec
xchg
loop
ljmp
and
xor
xchg
push
jno
mov
js
sub
jge
jbe
outsl
adc
xor
addr16
mov
jno
cmp
adc
fdivl
or
fiaddl
popf
adc
mov
sub
cmp
xchg
pop
das
insb
negl
movsl
lret
adcl
add
pop
push
ljmp
call
jmp
sub
cwtl
xchg
out
cmp
je
jcxz
inc
daa
filds
lret
mov
dec
sub
push
sbb
fsubrs
imulb
ret
dec
xor
mov
nop
cmp
fwait
xlat
pop
es
call
std
hlt
or
dec
pop
ljmp
leave
jge
fwait
xor
dec
mov
pop
xchg
decl
mov
fcoms
inc
jecxz,pn
xor
out
xchg
mov
sar
lcall
movsl
push
xor
std
mov
or
out
cmp
pop
mov
loopne
lret
pop
jecxz
jo
mov
call
cmp
mov
inc
inc
adc
jns
int3
imull
push
mov
imul
sub
pop
sub
xchg
mov
inc
cmpsl
arpl
sub
je
mov
add
aam
hlt
in
clc
adc
cltd
xchg
and
jno
decl
xchg
mov
inc
es
jg
pop
fsubs
mov
pop
icebp
imul
sbb
cmpsl
test
dec
add
dec
hlt
pop
stos
xchg
ljmp
loopne
iret
mov
data16
lret
adc
mov
popa
lods
pop
lods
ljmp
icebp
sub
jl
rcrl
jge
mov
subb
ret
int3
imul
fisubl
fimull
push
fisttpl
adc
inc
mov
movsl
push
sub
adc
or
int3
xor
out
cmp
xchg
sub
mov
add
daa
dec
push
cmp
pop
imulb
jmp
add
cli
insb
pop
imul
sub
hlt
loope
loope
sar
pop
les
lea
fsubl
mov
xchg
arpl
mov
fs
ja
xchg
call
inc
and
mov
lcall
mov
test
iret
mov
aas
cmp
cwtl
addb
jg
pop
xor
ds
jb
out
or
and
fsubr
fdivr
cwtl
push
push
sub
push
xor
stos
or
pushl
sub
jb
sbb
scas
sbb
aaa
or
ljmp
inc
outsb
cmp
inc
xor
stc
xchg
pop
mov
jmp
cmc
mov
pop
dec
inc
mov
and
je
lock
das
push
sub
decl
lods
sti
imul
cli
push
push
aas
lret
mov
add
mov
in
aam
dec
and
mov
push
jmp
add
pop
aaa
mov
jge
lcall
mov
dec
sub
sbb
mov
test
movl
daa
mov
in
sbb
das
and
int
mov
pop
sbbl
cmp
and
cltd
push
enter
outsl
add
les
xor
adc
xchg
lcall
icebp
jg
or
ja
test
mov
jge
dec
pop
or
jnp
adc
call
sub
sbb
cld
or
mov
xchg
jp
pop
ret
repnz
jo
mov
pop
and
lcall
mov
dec
ret
xchg
sub
add
push
push
nop
add
push
xchg
cmpsb
and
cmp
orb
xchg
testl
jge
add
and
push
lahf
insb
push
inc
or
cmc
inc
add
push
xor
jno
lret
addb
inc
sub
cmp
jae
bound
cmp
orl
push
jle
es
jo
imul
or
cmpl
enter
imul
inc
adc
add
adc
adc
sahf
in
nop
add
mov
test
push
lds
sub
addl
pop
fsubs
outsl
fnstsw
inc
sbb
gs
adc
les
arpl
dec
pop
push
outsl
outsl
insb
push
push
xchg
lock
fwait
jge
jae
outsl
je
dec
and
gs
push
mov
test
mov
enter
shlb
je
insl
shll
inc
dec
push
xchg
pop
std
dec
jne
js
stos
pop
inc
lret
add
rcr
popa
inc
xchg
test
jnp
inc
jns
push
imul
gs
inc
loope
adc
push
es
mov
jne
aam
dec
outsl
insl
insl
adc
pusha
test
dec
addb
lds
nop
pop
jae
sub
inc
and
dec
adc
repz
push
outsb
into
popa
aas
jo
xor
inc
insb
imul
sbb
xchg
insb
or
aam
inc
into
mov
clc
mov
arpl
adc
inc
adcl
fadd
sub
clc
sub
pop
ds
insb
jne
and
xchg
mov
jne
data16
xor
push
push
mov
mov
sbb
jo
inc
push
fildl
fs
andb
loopne
cmp
pop
fcoml
out
popa
arpl
sbb
add
push
mov
test
xchg
sub
cs
add
popf
push
push
and
stos
sub
popa
gs
xchg
jle
adc
js
cmp
xor
or
les
pop
inc
pop
xchg
add
inc
or
dec
packuswb
pop
lods
inc
dec
push
pop
mov
push
fsubrs
dec
inc
dec
sbb
sub
je
push
jne
imulb
arpl
subb
das
shll
inc
das
push
arpl
inc
in
cmp
andl
lret
add
in
jnp
cmc
addr16
sub
mov
pop
add
pop
clc
outsl
popw
cmpsb
dec
addr16
call
xchg
push
cmp
cmpsb
or
inc
xchg
push
jne
or
out
sbb
pop
aaa
sbb
sub
loopne
shr
dec
jae
enter
mov
dec
inc
dec
iret
adc
or
or
in
adc
out
dec
jb
mov
ljmp
pop
xchg
lods
xor
inc
pusha
aaa
jne
jp
mov
push
sub
popa
sarl
or
cmp
and
mov
testl
mov
xchg
imul
mov
jae
adc
push
sbb
mov
pop
sbb
lock
xchg
sbb
mov
jp
insb
sub
outsl
jns
int
push
or
push
adc
sbb
mov
mov
shl
mov
xchg
inc
je
or
jp
push
inc
inc
iret
sub
sbbl
push
sbb
mov
mull
shlb
dec
jnp
sbb
out
shl
or
clc
fidivrl
shrl
xor
push
adc
arpl
movsb
nop
outsl
aaa
sub
and
xor
jmp
out
add
js
sbb
dec
sub
jne
fildl
jmp
adc
test
mov
push
xchg
gs
in
cmp
push
jne
inc
in
inc
out
rolb
jmp
mov
or
xor
movl
and
out
lea
adc
faddl
sub
or
add
lea
popa
into
adc
sub
inc
sub
xchg
inc
dec
outsl
rcrl
inc
lods
repz
test
in
dec
mov
out
outsl
cmc
hlt
jecxz
cmpsb
dec
sbb
js
inc
jbe
test
dec
push
ret
sbb
add
ss
ljmp
xchg
and
jns
push
pop
aaa
or
jo
mov
stos
push
and
js
mov
inc
jne
cltd
rorl
xchg
shlb
sub
arpl
push
andb
add
adc
cmp
jb
jg
out
scas
and
inc
insb
or
jae
cmp
adc
lods
cmp
or
inc
pop
xchg
sbbl
fdivs
mov
mov
push
aaa
adcb
and
jp
xor
mov
outsb
fisttps
fdivs
pop
nop
popa
ffreep
dec
jae
and
rolb
mov
scas
addr16
and
push
outsl
push
das
mov
inc
jb
and
pop
xchg
into
jo
mov
lds
arpl
loope
std
inc
imul
or
sahf
fs
push
mov
push
mov
outsb
add
cmp
lock
insb
jle
mov
out
out
punpckldq
inc
dec
xchg
cmpsl
inc
dec
stos
mov
shll
dec
jae
jno
lds
sbb
in
nop
test
mov
jl
lods
ret
mov
cmp
and
dec
inc
cmp
sbb
fldcw
xchg
jle
scas
push
loopne
mov
dec
adc
mov
and
xor
out
dec
push
push
pop
xor
shlb
add
in
dec
sarl
push
adc
in
dec
and
xor
scas
dec
jnp
or
dec
outsb
dec
in
push
dec
rcll
xchg
jnp
ret
add
add
mov
int
mov
xchg
movsb
shll
sub
popf
cmpsb
xor
push
xchg
mov
inc
add
add
pop
adc
pushf
jo
sbb
rcr
imul
andl
outsl
inc
fs
mov
mov
sbb
adc
xlat
incl
insb
inc
jae
jo
arpl
push
les
inc
jb
insl
add
imul
popa
xchg
dec
sub
adcb
jmp
pop
scas
mov
cwtl
lock
inc
rclb
outsb
or
xlat
adc
and
and
mov
dec
orb
mov
cmpb
xor
test
push
sbb
data16
leave
lods
ret
pop
insl
test
shlb
adc
rolb
scas
arpl
pusha
in
pop
pop
aas
imul
test
push
xchg
or
sbb
xchg
pop
decl
mov
inc
ret
or
sub
push
jno
jmp
jb
or
inc
jb
orl
fsts
and
jns
insb
mov
mov
ret
cld
popa
pop
dec
add
imul
loope
pop
xchg
mov
andb
xchg
leave
xchg
jge
pop
add
outsb
ja
dec
sub
outsb
ja
add
mov
and
sar
xor
pop
lea
sarl
dec
insl
pop
push
dec
mov
push
mov
inc
std
imul
mov
push
mov
loope
mov
cmp
mov
movsb
or
dec
enter
addl
les
lds
sbb
loop
outsb
aas
adc
loope
shrl
test
mov
jp
push
popf
mov
outsb
mov
adcl
mov
lods
cmp
push
or
and
mov
adc
into
inc
pusha
imul
aaa
sub
or
jo
pop
stos
xchg
popa
jmp
mov
push
fwait
push
add
scas
inc
outsb
adc
push
fs
rcl
insl
inc
inc
cmp
pop
rcrl
dec
adc
lock
subb
push
insb
lahf
loopne
add
and
xor
mov
mov
lock
imul
push
push
inc
out
adc
sub
repz
mov
sti
ret
adc
xor
inc
inc
idivb
cld
data16
scas
fnsave
or
jo
add
sbb
icebp
jae
ds
sub
mov
das
sub
int
or
cmp
push
mov
and
add
xlat
pop
dec
and
fwait
and
pusha
or
fcmovnbe
fbstp
xor
daa
mov
add
mov
add
imul
fisubs
addl
xchg
jbe
prefetch
push
flds
add
adc
inc
add
pop
pop
imul
inc
pop
add
lds
dec
addb
int3
fistps
mov
and
add
outsb
push
movhps
jb,pn
popa
adc
mov
mov
data16
xchg
dec
out
sbb
loopne
inc
sti
or
push
dec
rcrb
scas
mov
xlat
pusha
dec
in
pop
lahf
xchg
lock
mov
or
jg
push
or
mov
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
