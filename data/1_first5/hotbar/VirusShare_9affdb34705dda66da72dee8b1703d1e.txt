divl
in
mov
mov
mov
inc
add
add
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
movsl
push
mov
andl
push
pop
add
enter
add
mov
punpckhwd
add
ss
mov
mov
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
jo
ds
incl
sti
inc
add
add
call
jle
add
mov
mov
jmp
push
mov
lock
add
sahf
or
sbb
pop
dec
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
sub
outsb
sub
and
push
push
cwtl
in
add
mov
add
mov
fsubrs
cmp
and
xor
mov
sbb
push
push
lods
ltr
add
fdiv
fistpl
fldt
inc
add
test
mov
ds
je
pop
add
pop
mov
push
cmp
loopne
cmp
rcrb
cmp
pop
add
add
push
loop
icebp
cmp
add
push
add
sbb
pusha
les
xchg
dec
sarl
mov
add
sub
in
mull
pop
pop
sub
xorl
pop
sahf
or
mov
call
loope
xchg
and
js
in
push
push
cli
mov
add
in
inc
inc
mov
jmp
scas
adc
push
mov
pop
jge
mov
jns
fwait
mov
push
or
cmp
inc
inc
iret
xor
hlt
dec
push
and
cmp
jmp
sahf
cmp
ret
mov
adc
nop
int3
push
push
pop
or
jb
mov
mov
adc
adc
rolb
and
jnp
mul
inc
cmp
jae
xchg
cmp
fdivs
adc
mov
add
and
push
ja
scas
sbb
add
lcall
push
mov
and
insb
xor
lock
adc
pop
cwtl
mov
pop
push
jle
in
and
cmc
mov
add
pusha
push
sub
pop
mov
test
mov
cmp
scas
jnp
lock
add
call
mov
clc
add
cld
jb
xor
popf
sbb
fwait
loopne
cmp
jno
add
sahf
out
push
cmp
inc
mov
xor
sub
mov
iret
sub
jo
push
shl
jnp
pop
add
push
or
loopne
mov
sbb
and
and
loope
xchg
mov
and
pop
subl
and
or
and
out
push
or
inc
pop
cmpl
and
std
repz
je
mov
fwait
je
lds
shll
movsl
lods
call
push
mov
mov
daa
mov
int3
push
xchg
mov
clc
cltd
mov
jmp
push
cmp
sbb
jnp
push
cmp
paddusb
into
ret
scas
sbb
push
xchg
loop
cld
push
add
pop
test
jne
data16
das
and
sub
sbb
lds
shrb
or
xor
dec
gs
add
xor
cmp
xchg
sub
adc
jns
inc
setnp
out
and
fs
repz
adc
xchg
cmp
dec
insb
push
cmc
add
and
pushf
push
or
adc
push
and
mov
or
push
pop
adc
stc
mov
movhps
push
xlat
adcb
popa
ja
int
sbb
sarl
cltd
mov
invd
sahf
add
jmp
mov
xchg
sbb
push
mov
repz
push
mov
xor
cs
pop
lds
lods
mov
cld
inc
mov
lds
push
hlt
cmpsl
test
add
jle
jo
loopne
fnstsw
mov
inc
or
push
push
push
adc
fimull
je,pt
ret
fiaddl
jl
int
loop
or
notl
mov
jle
in
mov
add
xor
sti
ds
mov
sub
xor
lcall
push
mov
jl
jle
movsl
cltd
mov
aaa
shrb
push
mov
sbb
jl
and
mov
pop
insl
xchg
rclb
mov
jl
stos
mov
jg
pop
xor
mov
int3
cmp
je
xor
mov
lea
outsl
push
mov
aaa
je
add
adc
cli
mov
cmp
jno
mov
mov
movsb
and
cmp
add
mov
mov
icebp
stos
mov
sbb
dec
je
inc
or
lret
push
insb
fistl
popa
jae
or
mov
lea
and
movsb
xchg
and
add
and
into
enter
pop
xchg
stos
pop
stos
pop
cmc
push
stc
or
ds
or
push
iret
lahf
ret
mov
sbb
bound
push
add
fbstp
int
or
leave
ret
push
mov
sbb
test
cmp
pushf
fisubrl
ds
insl
icebp
sbb
push
orl
lock
loopne
lock
jne
pop
mov
sub
ret
sbb
js
or
jae
push
std
cmp
je
sub
dec
pushl
pop
in
rclb
inc
mov
sarl
cli
xchg
push
pop
mov
fs
ficompl
mov
push
std
push
push
push
mov
cmp
inc
xchg
sub
pop
jo
sub
stos
push
xor
push
add
xlat
mov
test
jne
fs
jl
call
inc
cmp
jl
jmp
pop
and
lods
sbb
mov
push
sbb
push
pop
push
adc
sahf
jmp
sub
cmp
cli
jl
pop
mov
ret
pop
jno
dec
mov
icebp
mov
push
mov
adc
loop
pop
fimull
sbb
bound
and
mov
mov
adc
stos
in
les
fiadds
jns
add
std
enter
sub
dec
push
andl
push
mov
jge
nop
mov
cmp
jl
push
mov
out
psrlw
jmp
adc
adc
pop
ret
and
dec
adcb
sub
jo
icebp
cmp
jmp
and
push
dec
xchg
fmulp
outsb
mov
scas
stc
test
jne
sbb
adc
push
cs
out
xlat
mov
aam
push
mov
sub
pop
hlt
daa
idivb
sub
pop
cmp
mov
jge
jecxz
out
jl
push
pop
cwtl
cmp
je
movb
mov
pop
jg
ret
adc
push
pop
lea
std
aaa
clc
pop
push
mov
imul
add
jmp
mov
into
sub
addr16
adc
or
mov
push
out
rclb
inc
leave
ret
icebp
cmp
imul
idivb
cmp
je
or
std
xor
fcmovne
or
adc
adc
sbb
xchg
push
mov
sbb
loopne
or
stc
jne
mov
jmp
xchg
clc
lcall
push
repnz
decl
mov
ja
lea
decb
mov
cld
loop
jno
cmp
push
xchg
pop
loopne
xchg
pusha
popaw
fsubl
pop
pop
out
loopne
arpl
adc
pop
xor
out
add
add
loopne
nop
test
je
add
add
sub
mov
pusha
adc
push
movsb
mov
or
lock
je
ljmp
dec
mov
cmpsl
mov
sbb
push
pop
ss
push
push
popl
adc
push
and
pop
xchg
sub
lods
arpl
shlb
ret
fcompl
lods
mov
add
fwait
lahf
push
adc
inc
add
cmp
popl
cmc
ficomps
push
sub
push
mov
cmp
sbb
pop
cmp
mov
fs
idiv
pop
cld
cmp
je
cmpl
pop
mov
cmp
jne
push
push
imul
jo
ret
jl
pop
jmp
mov
mov
cmp
test
cmp
leave
jp
scas
clc
push
inc
sub
inc
or
sbb
enter
add
and
aaa
mov
jl
push
inc
clc
jg
inc
fimuls
movb
sbb
sub
or
in
int3
mov
out
mov
lods
cmpsb
bnd
adc
cmp
add
and
or
shlb
adc
ret
outsl
or
sbb
movb
fisttpll
ja
mov
pop
and
movsb
sub
sbb
mov
xchg
cmpl
adc
test
mov
xchg
pop
jns
in
dec
push
push
call
outsl
mov
adc
push
push
lds
ss
pop
mov
mov
cli
pushf
mov
xor
clc
mov
mov
aad
xchg
cld
xor
push
movsl
aam
out
lods
clc
mov
stos
inc
mov
dec
adc
pop
lret
dec
jge
inc
loop
add
clc
inc
gs
cmp
sbb
push
lds
repnz
jle
push
ja
aas
fdivrl
daa
jmp
mov
mov
jle
mov
xor
shlb
push
out
jp
xor
lea
mov
sub
cmp
nop
mov
inc
dec
ds
xor
add
or
inc
add
or
adc
push
loope
stos
adc
pop
push
rol
jns
ljmp
scas
fimuls
jge
bound
hlt
mov
push
pop
push
or
lock
addl
das
pop
sbb
cmp
ret
push
lds
mov
adc
jge
sarb
repz
cmp
xlat
sahf
and
push
les
xor
dec
adc
add
inc
adc
add
or
mov
mov
push
call
pop
inc
fistpl
jmp
mov
pushf
dec
outsb
or
out
call
fcoms
lea
push
std
enter
scas
mov
pop
pop
jmp
mov
mov
pop
mov
jecxz
mov
movl
sarl
sbb
ss
and
fldpi
scas
push
cmp
test
je
or
fcoms
mov
jno
andb
shlb
movsl
push
xor
inc
int
iret
add
add
mov
or
pop
and
sbb
push
ss
xor
cmp
aaa
add
ljmp
add
scas
mov
mov
and
scas
iret
mov
ret
sbb
das
or
shrl
ret
push
push
push
icebp
and
inc
pop
jnp
lret
adc
sbb
pop
ja,pt
and
and
aas
sbb
adc
sbb
sbb
add
push
stc
inc
pop
in
ret
sub
into
int3
adc
insb
adc
pop
cmp
ss
jo
push
adc
or
xchg
pop
lods
imul
mov
lods
dec
or
xchg
add
xor
cmp
movsl
std
jle
ja
or
stc
negb
je
or
je
cmp
popf
cmpl
repz
lds
pop
sbb
cmp
jmp
shrl
pop
notl
add
inc
mov
pop
jo
mov
cmp
push
sbb
cmpsb
comiss
adcb
push
pop
mov
dec
sbb
imul
mov
adc
and
add
push
push
jl
jo
jbe
call
push
sti
sti
mov
je
and
jmp
sub
mov
je
push
adc
in
jge
adc
adc
ss
scas
dec
sub
jmp
vprotw
jno
test
movsb
sbb
cltd
addr16
jbe
ret
int
jp
jecxz
pop
jne
lea
cmp
rolb
sbb
inc
repnz
or
xchg
and
call
add
mov
scas
adc
mov
lea
mov
fsubl
jp
push
mov
or
loope
sbb
mov
mov
ret
jg
cld
and
loopne
push
or
push
sub
pushl
js
inc
mov
in
in
daa
adc
aas
push
in
xchg
mov
adc
jmp
cmp
je
cmp
and
jmp
lods
shlb
adc
adc
fldz
andl
or
cmp
mov
xor
push
and
pushf
std
and
sbb
je
jge
or
xor
mov
mov
repnz
cmp
repz
and
das
inc
pop
push
movsl
mov
loop
mov
sub
cmp
push
push
fs
xor
cld
cmpsb
sarl
cld
mov
pop
pop
lock
push
pusha
aaa
outsl
dec
adc
pop
mov
in
or
clc
pusha
push
idiv
movb
push
pop
cs
push
or
adc
loop
mov
das
mov
push
dec
mov
pop
push
call
push
pop
push
sbbl
lea
sbb
xlat
dec
cmp
push
xchg
out
mov
cmc
adc
add
pushf
or
scas
dec
push
popf
sub
or
pop
cmp
sbb
fistpll
ja
push
sbb
lea
in
mov
mov
dec
xor
mov
adc
in
jnp
push
call
add
add
clc
push
ja
ja
mov
mov
movl
lret
lock
in
push
test
mov
sbb
femms
test
pop
sbb
pusha
push
inc
jmp
ss
or
jg
push
and
nop
sub
sahf
mov
imul
imul
loopne
jb
mov
adc
mov
int
inc
mov
js
adc
sbb
push
xlat
xchg
push
jae
loop
adc
dec
dec
rclb
mov
mov
xor
sbb
push
inc
test
xor
mov
imul
cmpsb
mov
pop
push
inc
cmp
and
gs
jnp
push
push
push
lea
lahf
or
pushf
jp
repz
fistps
push
push
push
xchg
mov
sub
push
mov
dec
xor
dec
lods
and
sahf
xchg
cmp
clc
add
push
xchg
pop
daa
lea
je
mov
stos
jo
mov
push
cwtl
pop
sub
and
cmpl
add
mov
sbb
add
push
cli
hlt
dec
pop
roll
adc
outsb
xor
xchg
pop
fstps
push
ljmp
adc
clc
push
sti
incl
xor
mov
pushl
mov
adc
lods
pop
hlt
dec
adc
mov
dec
lea
or
ja
inc
inc
sarb
je
dec
call
sub
ret
ret
add
bound
in
sti
int
rorl
in
jmp
mov
add
imul
cmp
cmp
xor
leave
jae
mov
jo
shlb
inc
leave
push
pushf
or
add
sub
jl
inc
sub
aad
sub
inc
or
mov
pop
push
and
push
pop
sub
jnp
dec
push
push
cmp
adc
dec
test
mov
neg
sbb
and
and
fcmovne
add
pop
pop
andl
pop
cmp
xor
jnp
dec
roll
push
rol
subb
lahf
push
insb
mov
adc
call
out
xchg
push
clc
push
lea
sbb
xorl
inc
cmpb
sbb
stc
dec
and
adc
mov
int3
push
dec
push
call
into
je
cmpsl
pusha
ljmp
add
add
fdivrs
outsl
rorb
mov
punpckhdq
mov
inc
lock
decl
sub
aaa
and
repnz
fdivrp
pop
xchg
or
mov
sarl
or
cmp
push
stc
jmp
cmpl
je
cmpl
fidivl
adc
dec
je
scas
xchg
sbb
mov
cmp
cwtl
pop
push
add
jp
pop
out
into
jg
jmp
mov
add
xchg
andl
lahf
ljmp
mov
mov
es
push
jbe
xchg
loopne
popa
pop
push
cld
push
sahf
or
push
push
sbb
jnp
lods
dec
lret
in
jbe
add
hlt
movb
das
jo
lock
or
iret
in
out
enter
xor
cwtl
jo
movb
loope
push
loope
cld
aas
mov
sbb
cmp
aaa
add
je
loopne
xchg
pop
fs
jmp
test
cmp
push
test
inc
pop
loopne
mov
mov
mov
push
mov
mov
sbb
dec
inc
test
jns
xchg
jle
or
cmp
lea
mov
push
outsb
pop
jbe
adc
jo
pop
pusha
cmp
mov
mov
lret
or
sub
push
sbb
and
sub
or
nop
or
sahf
out
jp
push
enter
adc
add
jl
pop
insb
or
andl
daa
cmp
ret
and
xor
pop
dec
adc
or
sub
xchg
pop
aad
push
mov
add
and
sub
int
xlat
call
xor
addb
add
sbb
xor
cmpl
pop
push
cmpb
lock
sbb
cs
fwait
jnp
ret
aaa
faddl
sub
les
inc
imul
inc
dec
fldl
fmull
imulb
ljmp
push
outsb
add
add
and
pop
push
add
add
ret
rcrl
xor
repnz
lock
sbb
or
movsl
pusha
rclb
loop
test
pop
or
mov
rcrl
push
dec
ds
sub
lahf
or
sahf
mov
js
push
pushf
and
mov
adc
enter
loop
arpl
pop
dec
push
add
push
addl
gs
dec
sub
jecxz
pop
cmp
xlat
stos
fmuls
imul
or
sbb
or
add
out
roll
orb
inc
fadd
cmp
in
push
mov
das
adc
and
leave
sbb
add
or
imul
test
push
adc
pop
sub
cld
jmp
call
jle
add
jne
test
pop
roll
cmp
mov
stc
dec
jbe
loopne
cs
sub
push
push
cmp
cmp
mov
cmp
orps
push
mov
mov
pop
inc
sub
shlb
mov
adc
pop
mov
push
loopne
push
sbb
cmp
in
adc
jl
xor
push
sbb
sbb
cmp
jne
xlat
rolb
pop
loopne
pop
out
jo
push
push
out
dec
fsub
nop
or
sbb
test
sub
push
sbb
xchg
inc
loopne
pop
fidivrl
cwtl
adc
andl
out
loop
sti
ljmp
mov
jmp
xlat
add
sar
push
push
xor
ss
adc
jl
dec
inc
sbb
div
push
cmpsb
lock
adc
out
icebp
mov
and
mov
fcomip
sti
push
pop
fisttpll
jo
push
adc
iret
aas
mov
jle
mov
fwait
aaa
jp
mov
dec
pop
mov
add
jne
loopne
jbe
sbb
aaa
adc
jmp
add
cmpsl
int
jp
jne
loopne
rorb
push
leave
mov
inc
jecxz
stos
mov
mov
rorl
out
call
neg
pop
pusha
push
ljmp
hlt
jle
jg
test
pop
lea
cltd
idivl
mov
inc
mov
xor
and
jl
divl
into
mov
lret
jl
movl
adc
test
or
insl
mov
pop
jbe
lahf
xor
xchg
sbb
and
lods
lea
clc
add
pop
inc
iret
outsl
sti
pop
xchg
imul
cmp
or
jmp
jge
jg
std
out
insb
mov
pop
hlt
fildl
pusha
cld
sti
ljmp
faddl
and
sub
xor
mov
addl
fdivrp
mov
mov
ja
test
sbb
mov
inc
loopne
adc
cmp
add
addr16
mov
lock
je
into
clc
fidivl
jmp
outsb
test
aam
mov
mov
sahf
lods
std
pop
test
mov
add
clc
sbb
call
sbb
mov
in
shrb
js
lea
jmp
f2xm1
aam
push
pop
push
cld
push
adc
and
add
mov
adc
popa
das
mov
pop
push
lahf
je
test
lret
je
or
xchg
inc
pop
and
clc
dec
push
jmp
sbb
add
lods
add
movd
sbb
adc
jl
push
xchg
pop
addr16
aam
aam
aam
mov
sbb
arpl
clc
test
cmp
std
pushf
sbbb
adc
gs
mov
xchg
mov
adcl
push
jne
mov
xchg
pop
jne
rcll
insl
test
cs
loopne
mov
adc
push
leave
xchg
pop
mov
inc
pop
push
mov
xor
mov
icebp
lea
push
mov
push
es
sub
adc
rclb
push
jns
pop
push
push
xchg
mov
sub
dec
push
xor
add
push
or
dec
mov
or
loop
imul
loope
mov
or
nop
dec
and
adc
push
jg
shll
jg
popa
push
push
pop
out
dec
mov
inc
dec
xchg
pop
dec
or
mov
insb
adc
js
lahf
push
fs
pushf
jbe
push
push
pop
add
mov
pop
pop
sbb
lock
js
movnti
imul
push
repz
xchg
add
push
xor
cs
ret
and
stos
push
or
cmp
dec
mov
pop
xchg
and
dec
pusha
inc
scas
or
jno
push
or
push
sub
xor
xor
inc
insb
movsl
ret
adc
push
pop
or
shl
cmp
push
leave
add
mov
cmp
setb
test
jne
mov
sarb
xor
cmp
sbb
mov
dec
dec
adc
pop
das
lea
push
pop
adc
testb
mov
je
sub
pop
decb
ret
mov
fsts
mov
mov
sub
add
hlt
mov
adc
push
add
mov
cmp
lods
xor
inc
sbb
shrl
add
int
cmp
push
test
lcall
imull
mov
or
push
push
jbe
dec
shlb
dec
pop
push
add
lret
mov
dec
daa
mov
pop
push
fdivrs
push
je
sbb
add
test
mov
push
push
jne
loope
pop
pop
ror
aaa
aaa
mov
xor
clc
or
and
push
je
and
je
out
pop
or
hlt
pop
adc
push
cmp
inc
hlt
adcb
out
ret
rolb
shlb
arpl
roll
or
add
movl
data16
loop
movl
mov
adc
mov
mov
xchg
lods
sbb
pop
imul
pop
outsl
arpl
and
sbb
fildll
mov
int3
push
or
cltd
adc
push
add
lods
and
gs
push
in
data16
pop
dec
subb
xchg
ret
test
je
xchg
out
adc
lock
inc
mov
push
inc
jne
push
and
mov
mov
jmp
add
fdivl
arpl
sbb
mov
inc
or
sahf
mov
sbb
pop
xor
and
lods
inc
jg
inc
add
adc
pop
js
fs
adcl
lret
mov
cltd
or
or
mov
int3
js
mov
add
in
push
popf
sub
daa
repnz
add
xor
and
in
add
adc
xchg
call
jl
pop
int
cmp
xor
mov
inc
insl
lcall
jmp
push
cmp
mov
lret
xor
mov
mov
adc
rorl
mov
inc
out
aad
push
pop
or
lea
mov
pop
shl
sbb
fmul
pop
jmp
push
sbb
mov
fmuls
push
xor
push
popa
add
xor
enter
les
stos
inc
rep
and
ficomps
or
jg
orb
or
add
lret
into
xchg
enter
test
lods
and
push
cmp
ss
cmp
cltd
in
sahf
and
add
or
xchg
stos
lods
stos
or
and
push
inc
push
add
rorb
push
data16
xchg
add
outsl
invd
pop
push
mov
jne
push
test
xchg
iret
or
orl
xor
icebp
out
scas
xchg
popf
or
leave
add
add
xchg
pop
dec
cs
popf
inc
pusha
mov
mov
inc
add
add
js
jg
nop
add
cmpsb
mov
js
mov
sbb
stc
sub
push
sub
inc
mov
pop
push
adc
fadd
aam
dec
nop
rcrl
dec
outsb
xorb
inc
pop
inc
or
push
popf
pop
sbb
jp
loope
push
xorb
movsl
jge
mov
stc
adcl
fsubs
adc
push
and
shl
daa
add
add
pushl
fdivl
in
in
fadd
clc
and
sub
scas
xorl
bound
rorl
fsubrp
adc
sbb
fsubrs
aam
in
mov
mov
dec
and
mov
test
sbb
hlt
jmp
push
aam
mov
mov
scas
adc
fdivrl
mov
adc
leave
or
bound
mull
pop
or
decl
and
repnz
push
enter
fadds
adc
xor
pop
imul
mov
or
inc
mov
cmpsb
adc
pop
lcall
adc
shrl
movb
insb
in
mov
push
popa
push
neg
sbb
call
je
xor
inc
and
popf
fsubrp
jo
in
jns
dec
push
pop
call
cmpsl
in
movsl
je
jno
aam
push
lods
inc
push
sbb
lahf
rolb
mov
in
fidivl
sbb
lds
push
mov
inc
add
add
xchg
addr16
adc
shrb
sbb
mov
pop
packuswb
add
dec
push
push
lahf
shrb
pop
push
pop
add
addr16
mov
sbbb
fsubr
xor
jmp
push
mov
mov
js
xlat
fsubrs
add
lds
in
sub
dec
lret
and
adc
pushf
sbbb
sbb
push
push
xor
lcall
loope
incl
sbb
movsb
inc
adc
fs
or
pop
dec
sub
imulb
or
add
rcr
jecxz
out
into
push
lcall
add
rorb
lgs
adc
loope
inc
inc
mov
sbb
test
shrb
or
scas
shrb
push
popf
stos
sbb
loopne
fcoms
pop
push
mov
push
sub
out
adc
lea
push
rcrb
push
dec
mov
or
inc
cmp
jne
into
and
add
mov
push
jecxz
mov
dec
sahf
xchg
subb
and
fcmovb
mov
adcl
push
mov
and
cwtl
popa
and
sahf
add
xor
cmp
inc
and
pop
jo
pop
add
cmp
mov
sbbl
pop
sub
pop
lret
ja
cmp
pop
les
mov
adc
fcompl
cmpsb
and
pusha
mov
lods
adc
fisubs
jnp
cwtl
or
add
xlat
adc
add
repz
mov
xor
inc
push
out
mov
adc
add
pushf
xchg
add
iret
push
push
and
sbb
push
pop
stos
add
and
and
leave
sub
sub
in
in
dec
lret
cmpl
mov
mov
imul
dec
cmp
sahf
xchg
adc
and
inc
jb
cmc
or
push
popa
shr
push
repnz
push
testb
add
js
scas
out
hlt
jne
ds
push
push
and
xor
sbb
push
sub
add
or
and
mov
push
or
jo
dec
jb
les
or
rclb
jge
push
push
add
mov
jecxz
add
cs
jnp
push
cli
mov
clc
pcmpeqb
add
add
fistpl
mov
and
adc
adc
adc
push
insl
sbb
push
sub
lret
imul
cld
in
insb
push
mov
das
fimull
fcmovnu
dec
dec
mov
inc
outsl
push
ret
pop
icebp
or
js
jo
dec
out
mov
inc
push
xor
adc
imul
mov
data16
lods
pop
or
sub
sbb
add
mov
push
mov
jl
repz
or
xchg
jo
mov
push
inc
and
idivb
jo
jle
sar
add
call
cwtl
cmp
je
ja
outsl
mov
lret
add
lcall
push
mov
sub
pop
int
lea
inc
adc
jae
xor
jne
or
push
or
mov
cmp
hlt
js
dec
push
daa
xchg
and
outsl
outsl
mulb
sub
inc
push
je
and
gs
nop
xchg
jo
or
mov
inc
dec
call
fcoms
in
test
repnz
xchg
or
xchg
xchg
or
or
inc
pop
jmp
movl
sbb
xor
rorb
or
add
repz
xor
mov
insb
inc
mov
or
inc
sahf
lret
add
cmpsl
repnz
insl
enter
std
mov
mov
push
sub
mov
jl
or
cltd
movsl
in
cli
ja
pop
ret
mov
enter
movsb
mov
jb
fwait
mov
or
pop
dec
xor
sbb
call
out
mov
dec
dec
cs
inc
or
imul
lret
mov
cmpb
loop
inc
adc
xor
add
dec
fwait
bound
xchg
daa
xor
outsb
mov
inc
pop
sbb
jb
lahf
int
or
add
repz
xor
adc
adc
roll
test
cmpl
repnz
bound
ret
adc
push
dec
addr16
in
or
fildl
or
call
in
mov
mov
flds
add
test
or
test
add
sahf
xchg
cmp
mov
pop
cmpsb
fcom
mov
aad
cmp
sysexit
test
pop
inc
mov
icebp
adc
mov
add
jg
mov
fsubl
lock
push
push
inc
dec
pop
adc
lret
and
out
xorb
jle
gs
push
mov
xchg
xor
inc
adc
stc
fsubrl
jno
mov
and
cmc
mov
and
dec
xchg
add
cs
cmp
lods
sbb
cs
dec
and
push
data16
cmp
testl
jnp
div
pop
add
sbb
decb
icebp
mov
jo
sbb
sbb
loop
push
xchg
dec
gs
icebp
adc
out
loope
fnstsw
pop
outsb
fwait
movsb
in
xchg
outsb
or
popf
lea
pop
or
add
xorl
mov
das
or
xchg
sub
sub
int
push
sbb
sub
adc
cld
xchg
bound
insl
inc
std
jge
jbe
jne
imul
lret
pop
sbb
mov
dec
pop
sbb
xchg
and
mov
ret
rolb
sbb
pusha
cmpl
jne
push
enter
xor
int3
in
std
cmp
pop
nop
test
jge
push
or
adc
mov
jl
movl
push
jbe
adc
push
push
xor
inc
mov
dec
aam
pusha
fs
pusha
mov
jge
test
fcoml
add
push
push
cld
in
repz
jl
mov
lcall
divb
push
or
add
lcall
pop
xor
push
js
pop
adc
dec
push
dec
mov
dec
mov
mov
mov
mov
inc
dec
jecxz
icebp
xchg
xchg
xor
rcll
cmp
push
push
push
loop
add
mov
mov
cmp
inc
push
mull
pop
testb
inc
add
into
inc
ret
sbb
mov
mov
fs
add
jns
mov
into
mov
test
pop
out
add
ficoml
sbb
mov
mov
cmpsl
out
adc
or
push
dec
shrb
push
jo
and
aad
mov
add
aad
mov
pop
data16
std
dec
gs
push
pop
jmp
pop
push
and
jno
pushf
jmp
xor
aam
or
pop
add
fs
add
sub
popa
and
pop
cltd
mov
test
mov
sbb
stos
into
testb
bound
lods
movsb
in
loope
notl
cwtl
shrl
cwtl
lcall
push
sub
cs
mov
sub
push
jmp
mov
pop
pop
test
aam
pusha
jge
pushf
and
or
or
bound
popa
jb
and
xor
movsl
fmuls
pusha
ret
or
or
cmp
mov
push
push
and
pop
adc
push
lods
mov
add
rcll
sbb
movsb
outsl
in
cmp
or
xor
or
sub
aaa
dec
xchg
push
add
dec
push
fldenv
in
inc
pop
repz
loop
pop
hlt
setne
jle
outsl
je
loopne
pop
repz
sti
aas
push
push
push
sti
fucomip
and
adc
hlt
jne
push
push
push
shrl
fcomps
push
jno
dec
push
add
xorb
call
mov
test
fcoml
pop
rclb
sbb
push
test
pop
gs
jb
jecxz
jge
xor
cmp
and
mov
lret
sub
dec
nop
rcrb
sbb
loope
add
inc
add
and
xchg
jb
iret
jmp
jne
push
or
aas
fcompl
and
or
sbb
add
inc
sbb
fwait
mov
mov
xchg
add
xor
ja
push
cli
jnp
dec
push
movsl
test
push
mov
pop
test
fwait
sbb
push
sbb
push
loopne
mov
xor
jno
add
and
jl
xchg
pop
add
adcb
or
jo
cmc
aaa
stos
push
push
je
xor
or
lcall
addl
push
sub
imul
cmp
ror
push
mov
mov
pop
roll
test
add
lret
inc
pop
push
out
adc
inc
pop
test
pop
and
test
push
mov
mov
adc
push
xlat
jne
sbb
push
lea
or
sub
ret
test
xchg
jp
or
popa
cltd
fcoms
mov
out
lods
stos
cmp
into
scas
dec
push
jne
xchg
xor
add
push
loope
mov
xchg
shll
stos
adc
out
mov
adc
mov
pop
into
inc
mov
loop
inc
scas
pop
gs
out
push
mov
mov
mov
pop
inc
jle
xor
add
or
push
push
int
sti
adc
mov
lahf
mov
mov
pop
mov
jg
dec
or
cld
stos
dec
ja
cmp
sbb
sbb
xor
push
pop
fcoms
cmp
or
xchg
pop
dec
hlt
cli
push
pavgb
out
push
cmp
leave
jb
mov
test
adc
sub
cld
jecxz
mov
cli
cwtl
movl
sbb
jb
mov
cwtl
pop
lock
std
add
sbb
mov
push
pop
lods
ja
and
fs
clc
jb
repz
add
push
xor
jo
mov
test
mov
xor
loope
push
pushf
scas
sub
xor
mov
push
mov
dec
test
cmp
jbe
stos
scas
cld
loope
out
jno
mov
cmpsl
mov
lds
aas
push
inc
add
les
or
out
test
xchg
push
pop
mov
mov
add
mov
into
dec
sahf
sub
sbb
mov
icebp
xchg
fistps
daa
xchg
pop
add
lret
mov
jmp
and
pop
add
aam
pop
sbb
lds
inc
lds
stc
mov
popf
cmc
daa
addr16
lods
insl
xchg
test
or
cmp
into
lock
mov
push
adc
shll
sbb
or
fbstp
lea
add
cmp
jae
push
sub
sub
fcomps
es
push
cmp
fmull
add
out
push
sub
add
cmp
clc
jnp
cmp
dec
hlt
jge
mov
mov
mov
aam
lock
test
jle
fldl
jmp
cmp
push
ljmp
pusha
pop
incl
popa
pop
test
jecxz
and
push
test
dec
hlt
jg
loope
shl
or
cmc
or
jmp
loop
fldt
hlt
mov
loop
cltd
and
xor
adc
arpl
mov
fadd
push
pop
movsl
and
je
add
fwait
pushf
jg
push
add
pop
or
lock
sub
push
nop
mov
outsb
loope
cmp
lock
enter
ljmp
roll
xorb
and
test
mov
sbb
lcall
fdivrs
cmpsb
mov
push
movl
enter
xor
and
and
push
cmpsb
cmp
add
xchg
jge
or
push
or
push
mov
sbb
mov
xor
sbb
add
sub
fimuls
and
mov
jo
dec
or
pcmpgtd
sahf
push
sti
jecxz
loopne
lret
ret
cmpsb
adc
dec
stos
aam
fnstcw
testl
xor
and
adc
mov
les
mov
pop
and
pop
push
test
push
imul
in
lea
jg
and
ficomps
push
cli
or
sahf
test
sub
andl
or
aam
insb
xor
movsb
jb
lea
jl
popf
int
mov
adc
mov
lock
mov
jmp
sub
in
pop
push
es
push
cmc
pop
xor
sbb
jne
rol
xchg
xor
clc
pusha
insb
push
ret
add
push
and
jle
sub
mov
push
dec
scas
push
cmp
outsb
push
mov
mov
outsb
or
sub
or
sub
int
std
jbe
inc
pop
adc
inc
push
sbb
add
and
adc
cmp
xchg
fs
cltd
iret
lds
add
ret
test
jecxz
popa
lahf
les
cmp
pusha
adcb
jg
test
mov
add
add
push
test
mov
xor
mov
in
andb
inc
in
insl
xor
rorb
mov
cmp
test
add
in
push
push
inc
mov
out
scas
test
imul
add
cld
xchg
add
add
inc
in
pusha
pop
faddl
repz
cltd
or
cld
add
inc
je
push
push
sub
inc
jmp
push
jbe
lods
or
sub
add
es
sub
ret
dec
mov
jne
mov
cmpsb
cmp
jl
adc
lret
push
xchg
jae
std
and
sbb
mov
sbb
and
popa
test
push
xchg
shrb
test
je
popf
out
sbb
add
push
cmp
xchg
nop
and
leave
cmp
add
sub
sbb
hlt
push
ss
sub
ret
dec
mov
enter
pop
popf
pop
pop
sbb
mov
push
jbe
inc
cli
cli
ret
test
lock
cwtl
adc
and
arpl
popf
push
int
call
mov
add
je
js
cli
or
inc
sbb
out
aas
jno
pop
dec
lcall
in
jne
sbb
cmp
in
gs
mov
sbb
jmp
fists
add
adc
adc
mov
scas
es
hlt
inc
prefetchwt1
movsb
in
sahf
rcll
sub
orb
jo
leave
inc
jb
mov
push
mov
lods
or
in
xchg
lods
xor
xchg
popa
jo
in
pop
pop
lock
pusha
cmc
jmp
pusha
sbb
jne
icebp
xchg
inc
test
adc
xor
stos
out
cmp
dec
pop
imul
jne
subb
add
adc
fiaddl
xor
mov
push
push
and
jmp
sbb
push
jl
or
pop
int3
pop
ja
sub
or
and
push
add
jecxz
add
pop
adc
pushf
fldl
outsl
xor
test
fwait
push
or
xchg
add
adc
mov
test
add
stos
cltd
shll
pop
jle
xlat
cld
add
outsl
ds
call
js
shlb
add
push
xor
xor
jne
xchg
aam
pop
mov
add
arpl
jae
sbb
lods
arpl
lock
icebp
jae
pop
jmp
push
lock
or
cmpsl
mov
and
pushf
cmp
pop
mov
push
dec
inc
or
adc
xchg
mov
fchs
inc
mov
push
mov
and
push
ja
push
negl
push
je
outsl
mov
xor
stos
fwait
pop
and
mov
xchg
rorb
mov
aam
and
leave
sbb
aas
insb
stos
pop
cmp
mov
fsubrs
andl
push
ljmp
in
push
sbb
popa
shl
in
jp
or
mov
loopne
add
shlb
mov
adcb
nop
mov
xchg
mov
pmaxub
xor
or
fmuls
xchg
add
push
add
je
hlt
pop
popa
lret
test
mov
rclb
nop
xchg
adc
hlt
or
in
stos
fwait
adc
add
pop
leave
pop
jmp
pop
cmp
jge
sub
movsb
push
or
lret
imul
and
inc
push
jae
sahf
mov
pop
push
push
xor
clc
insb
push
add
dec
and
pop
cld
shll
rcrl
outsl
sbb
adc
push
imul
sub
and
enter
test
cmc
add
add
or
pop
jne
lea
cmp
test
push
jmp
push
in
mov
sub
jne
xor
push
push
sub
cld
sub
or
mov
lock
pop
inc
ficoms
sbb
cli
clc
mov
sub
push
mov
add
push
xchg
mov
push
add
fiaddl
aam
std
jg
pop
cld
sub
mov
imul
jo
fimuls
loopne
jg
adc
fmul
or
push
xor
cmp
loop
adc
lods
pop
hlt
shr
testb
push
sub
sub
add
lods
adc
add
push
push
add
push
xlat
mov
into
mov
jp
mov
adc
je
or
jp
mov
shrl
lods
hlt
addl
enter
dec
sbb
jp
or
pop
pop
pop
push
es
add
dec
mov
mov
push
push
mov
xor
or
cmp
sbb
flds
es
xchg
add
xor
test
ret
orb
push
insb
into
or
lods
cmpsb
push
movsb
jo
or
out
cmp
imul
into
xchg
add
push
mov
push
call
or
arpl
and
sbb
es
push
mov
cmp
je
lock
push
ret
das
xchg
cmpl
mov
aad
cmp
xchg
push
into
hlt
pop
xchg
pop
and
mov
test
jbe
dec
stos
insb
jl
loope
sub
mov
pop
sub
and
push
dec
call
inc
jl
push
push
lahf
cmp
popa
sub
jecxz
cwtl
shr
ficoms
add
mov
in
sbb
mov
shll
inc
inc
and
mov
mov
cmp
je
push
lea
push
sbb
sub
cmp
cmp
sub
push
sub
clc
push
sbb
sbbb
xchg
rcrb
pop
or
adc
loop
sub
sarb
mov
call
push
aas
push
adc
or
cmp
rcrb
and
lret
bound
clc
add
hlt
push
in
inc
xor
lods
jbe
in
mov
neg
push
mov
ret
loop
ja
cltd
test
or
push
loope
in
fildl
scas
jl
push
push
je
sbb
dec
lods
mull
inc
std
and
test
ja
jbe
or
aas
push
movsl
push
push
xor
push
push
cmp
je
fcmovbe
pop
add
push
push
xchg
pop
or
mov
inc
ss
mov
sti
movsb
sub
fdivrs
fnsave
push
aas
or
mov
sub
pop
mov
ret
jmp
dec
addb
fdiv
mov
mov
rorb
pop
jl
jns
idivl
lcall
loopne
in
xor
ss
out
cli
test
dec
add
rorb
sahf
into
gs
scas
in
incb
jnp
push
and
add
mov
sbb
test
je
push
std
dec
int
xchg
dec
cmpl
je
ret
scas
mov
pop
or
and
sub
xchg
ss
adc
andl
adc
mov
ret
add
jb
pop
cmp
inc
sbb
xor
or
adc
dec
fisttps
aad
and
jb
mov
or
js
lea
in
cmp
je
cmp
roll
aas
cld
je
cmp
jne
add
cmpsb
mov
mov
ja
cmc
je
enter
scas
call
outsb
or
shrl
ret
outsl
outsb
pop
mov
cmp
xor
lock
ret
adc
mov
pop
clc
add
cmovp
jo
add
push
mov
into
mov
pop
adc
xor
sub
jne,pt
in
add
mov
push
push
js
sbb
mov
mov
or
test
jns
jnp
cmc
push
sub
cmp
adcb
jl
ds
lods
movd
add
adc
mov
aam
leave
ret
push
test
cld
add
arpl
adc
push
pop
incl
jb
cmp
ja
movb
imul
push
xor
dec
push
ret
mov
call
cli
dec
je
add
push
sbb
xchg
mov
add
cmpl
adc
mov
xchg
std
xchg
jmp
ret
jmp
jge
mov
mov
cmp
idiv
negb
or
mov
cmp
gs
je
cmp
jne
mov
sbb
jp
sahf
or
push
dec
inc
lock
mov
jmp
dec
mov
dec
xor
push
movsb
jne
jmp
testb
add
testl
fisubrs
sbb
cli
cmp
jbe
mov
pop
add
dec
dec
inc
jmp
inc
and
rclb
push
pusha
cmpsb
push
loopne
mov
mov
pusha
test
fwait
inc
push
and
clc
lahf
loope
cmp
js
clc
aaa
cmp
je
mov
lea
push
movsb
sahf
clc
mov
mov
hlt
and
pop
in
mov
bound
insb
inc
cmpl
test
jle
cmp
notb
cmp
jno
xchg
pop
adc
je
fdivl
loope
sub
jb
or
ja
push
loopne
shrb
enter
test
jp
cmp
jne
cmp
loopne
cmp
push
mov
ds
jno
push
dec
outsl
lret
push
jno
movaps
popa
loop
jne
mov
sbb
mov
insl
rorb
mov
lretw
add
mov
aaa
jb
rcr
push
push
cmp
sahf
fwait
mov
fsubr
adc
aas
les
fisttps
hlt
add
jns
test
jne
shrb
and
dec
lock
subl
dec
push
mov
or
adc
push
jae
mov
jmp
dec
shlb
or
jbe
test
sub
lea
cld
inc
call
mov
fisubrl
adc
divl
add
cmp
or
in
inc
jg
or
jge
ds
or
dec
int
jle
es
sub
sub
and
pop
cmp
jl
sarb
adc
adc
inc
test
mov
and
jbe
jp
jb
jbe
mov
outsb
lock
jne
or
je,pn
test
jne
je
outsb
and
sub
roll
je
je
xor
and
adc
movb
inc
mov
push
sbbl
add
shlb
and
push
mov
inc
and
fstpl
adc
push
mov
icebp
js
mov
mov
add
mov
inc
es
xchg
inc
add
fwait
jp
stos
rclb
insb
add
push
movl
sub
mov
nop
xchg
cltd
inc
cli
and
and
imul
xor
mov
pop
data16
lret
loopne
inc
fiaddl
mov
jecxz
or
in
jb
fsubrl
pushf
es
sub
cmpsl
ret
jne
xchg
shll
cmpsb
push
sub
sub
lahf
mov
movb
push
inc
pop
popf
mov
pushl
sub
faddl
cmp
in
pop
add
cmp
mov
xchg
daa
xor
loopne
inc
das
mov
or
push
or
cmp
pop
cwtl
xor
ficompl
lahf
inc
mov
jne
daa
mov
add
inc
pop
ds
dec
fadds
and
and
jae
mov
outsb
je
ret
insl
and
cmp
je
icebp
jo
sub
pop
in
mov
xchg
push
fsts
sti
add
and
ret
sbb
jbe
pop
mov
or
cmp
push
stc
and
pop
add
jo
ds
or
add
stos
movb
mov
push
aam
xor
pop
mov
or
xchg
mov
add
sub
push
shr
pop
es
jl
add
cmp
mov
sbb
addb
mov
mov
scas
mov
or
xchg
mov
fdiv
and
popa
hlt
pop
xlat
cld
sub
pop
add
inc
xchg
xchg
add
and
loop
add
mov
les
jne
xor
push
sbb
vmovaps
je
adc
sti
pusha
jb
cs
push
inc
or
and
add
inc
fisttpl
sti
imul
lea
cltd
add
xor
pushl
pop
sbb
pop
repz
lods
dec
mov
or
add
push
mov
ds
and
push
outsb
dec
sub
jnp
in
jmp
xchg
jne
insb
in
mov
add
daa
cmpsl
addb
xchg
mov
bound
push
ret
pop
dec
mov
or
sub
push
push
leave
add
and
mov
pop
leave
or
xchg
dec
push
test
and
fs
stos
test
lahf
cld
aam
and
add
sbb
call
jle
setne
inc
mov
sub
rorb
sbbl
rcl
xchg
sbb
or
cld
loope
mov
xor
pop
cmp
test
es
in
ds
dec
xor
es
push
rclb
adc
out
and
xor
cmp
jne
adc
push
push
fdivl
jne
sbb
ja
lods
cmp
jnp
das
movl
add
and
sub
bound
into
cmpl
dec
adc
and
mov
cmpl
sub
push
out
js
mov
push
and
jb
fcomps
inc
pop
shr
adc
sbb
mov
lds
lds
add
inc
xchg
inc
fsubs
in
loope
jge
pop
and
aaa
sbb
das
inc
xchg
sbb
pop
jp
cwtl
mov
shll
movsl
xor
subl
cmp
in
test
push
push
sbbl
adcb
in
push
call
fsubrs
jl
sub
cmp
jge
push
shrl
incb
jae
jmp
pop
pop
mov
aas
je
lea
cmpb
cmp
jne
les
pop
shrb
aam
adc
jmp
cmp
cmpsb
loop
mov
incl
add
jp
data16
mov
push
jmp
test
movsb
push
adc
fucom
xchg
sub
xchg
or
je
jl
add
clc
xchg
bnd
jmp
add
mov
push
and
xchg
ljmp
sahf
cmp
xchg
das
ret
or
sub
sbb
cmp
ret
cwtl
sbb
dec
ret
jecxz
aad
fnsave
insb
cmp
mov
rol
mov
sub
adc
add
or
test
int
dec
mov
sbb
add
in
iret
test
mov
imul
cmpsl
xor
test
or
xor
popf
aam
jb
inc
mov
loop
xchg
xchg
data16
cld
add
lods
mov
lret
push
push
push
sbb
lock
mov
add
jecxz
das
pusha
subb
subl
push
cmp
xchg
movsb
xor
fiaddl
mov
cmp
mov
or
mov
xchg
dec
sub
xor
lret
in
mov
sub
sub
push
cld
sub
pop
ret
cmc
jnp
loope
imul
in
add
in
add
inc
test
ror
int3
xchg
out
fs
cmp
mov
push
xchg
push
pop
xor
push
mov
xchg
test
jb
push
push
sbb
ret
popf
pop
sub
in
pop
sbb
cmpsb
jle
or
mull
sub
movsb
push
push
dec
lcall
sbb
test
mov
test
or
mov
sub
adc
cmp
xor
in
dec
bound
adc
or
pop
outsl
fimuls
add
pop
inc
dec
movl
pop
jbe
add
js
or
add
loopne
loopne
mov
mov
or
inc
cmp
jo
sub
cmp
test
mov
mov
or
or
mov
add
lcall
dec
js
movsb
inc
jmp
orb
dec
xor
sbb
ret
push
push
loopne
in
jne
cld
aam
push
inc
push
dec
xor
in
jg
or
fadds
imul
js
push
push
jne
hlt
cmp
sbbl
push
cmpl
adc
inc
jl
adc
std
adc
pushl
add
mov
lret
mov
push
jo
mov
faddl
iret
rorb
shll
in
mov
orb
ds
add
inc
push
cmp
mov
pop
cmp
sbb
push
xchg
shrb
rclb
pusha
jo
mov
in
in
xchg
mov
mov
pushf
xor
mov
out
xchg
mov
je
orb
or
push
xchg
lret
addl
fidivl
mov
sbb
push
adc
lock
xor
clc
push
pop
stos
test
call
fs
or
xchg
jbe
enter
or
bound
push
and
mov
push
jns
lods
or
inc
out
xchg
add
mov
cmp
and
jg
add
cmp
pushf
xor
pop
add
push
xchg
adcb
push
into
inc
pop
imul
rcr
add
sbb
and
adc
mov
stc
bound
inc
push
fcoml
jl
cld
or
or
fnsave
push
cltd
inc
mov
popa
adc
test
scas
dec
cld
fidivl
js
mov
sub
pushf
or
int3
push
lods
sub
pop
pop
sbb
xor
rorb
loop
jmp
sbb
and
and
push
pop
mov
mov
movl
jbe
pusha
inc
int3
mov
add
pop
imul
push
adc
dec
sbb
push
xor
cmp
dec
stos
imul
ds
sbb
pop
mov
aad
jg
inc
mov
cmp
fmull
pop
sbb
adc
jg
add
pop
cli
out
in
lock
pusha
mov
dec
inc
stos
push
jb
mov
lods
cltd
rcll
mov
adc
add
sub
push
adc
cmp
rorl
or
xor
js
xchg
add
or
or
std
scas
adc
popf
mov
dec
adc
lods
add
and
sub
lock
call
xchg
jbe
add
pop
shrb
mov
lods
cmp
pop
or
cmp
inc
inc
or
xchg
andl
dec
sbb
fstps
dec
cmp
jecxz
add
push
push
in
jecxz
into
sub
clc
addl
loope
add
and
ja
in
mov
xor
popf
pop
aad
test
jb
fcoms
lods
and
adc
mov
inc
jecxz
and
pop
icebp
iret
xor
sub
aas
xchg
data16
jecxz
adc
lret
push
jg
fcmovnb
arpl
xor
dec
cmp
inc
jmp
int3
sub
lret
mov
push
lods
lret
sub
mov
scas
je
push
gs
out
push
cmp
xchg
or
icebp
cmpsl
sub
cwtl
push
push
fs
pop
xor
lwpins
lea
jne
add
jecxz
ret
sbb
xor
sarb
mov
jbe
movsl
mov
imul
in
sarl
add
push
and
adc
pop
dec
inc
sbb
insl
inc
pop
inc
push
icebp
jns
call
or
dec
inc
push
xor
jecxz
xchg
cmp
loop
xchg
fstpt
xor
movsl
sbb
push
xchg
rcrb
lret
pop
pop
mov
or
mov
ja
adc
and
inc
pop
or
idivl
add
push
or
pop
test
nop
cmp
inc
dec
sub
xor
int
clc
insb
ficompl
sbb
jecxz
inc
in
hlt
imull
loope
push
push
outsb
add
and
insl
cmp
es
pop
addr16
mov
int
ds
notb
test
sbb
test
mov
sbb
dec
mov
xor
push
or
sbb
push
and
fcomps
or
cld
or
dec
push
das
movsb
rolb
stos
pushf
sahf
das
loope
dec
dec
cmp
mov
or
sub
sub
sub
push
sbb
ficoms
cmp
jg
mov
test
sahf
push
sub
mov
or
jmp
pop
mov
lock
icebp
cmpsb
into
cld
bound
daa
addb
cmpsl
inc
pop
cmp
jg
movsl
adc
test
fstl
das
nop
das
arpl
cmp
pushl
cli
xor
add
and
pop
hlt
out
jnp
enter
xchg
rcr
loope
jne
xor
dec
pop
pop
adc
popf
ret
add
rolb
mov
aam
xchg
mov
pop
jmp
push
add
cmc
cmp
scas
pop
loopne
movsl
adc
ds
add
nop
push
in
adc
add
andl
call
jne
fcmovnb
xchg
sub
div
cwtl
inc
sub
pop
dec
or
jb
adc
jnp
adc
sbb
jbe
or
push
lock
mov
pop
loope
inc
pop
pop
add
fiadds
lea
insl
adc
inc
push
sub
rclb
lods
adc
cwtl
lcall
adc
ss
enter
jl
or
pop
cmpsb
xorl
and
or
in
inc
push
add
sub
loopne
or
bound
adc
mov
movsb
push
loopne
je
cmc
pop
sbbb
ret
pop
mov
add
dec
push
xchg
or
sbb
sub
mov
inc
fwait
sbb
cmp
movsb
cmpb
out
lcall
pop
add
mov
add
fcomps
push
adc
pushw
push
and
push
fs
push
in
xchg
push
es
jbe
sub
and
add
or
sbb
test
or
jno
add
cs
push
pop
sbb
and
mov
rorb
pushf
add
or
dec
jae
pop
push
pop
xor
sbb
pop
stos
xor
push
dec
sbb
mov
inc
jo
iret
xor
push
jp
fldl
loope
mov
fs
rorb
inc
adc
pop
push
jmp
and
aad
or
sub
jne
enter
into
xchg
cmp
in
xor
pop
test
popf
xchg
sub
mov
adc
cld
and
shll
dec
ljmp
cmpsl
or
mov
or
daa
jne
or
stos
adc
pop
mov
es
push
jmp
sbb
mov
dec
add
and
xor
sub
adc
push
dec
pop
test
pop
and
dec
inc
push
mov
inc
les
jne
aas
aas
sub
and
xor
andl
pop
xchg
enter
jae
outsl
pop
push
and
push
lods
fiaddl
add
add
xor
inc
and
xchg
add
sub
je
xchg
add
in
insb
jne
in
mov
pop
xchg
push
add
cmp
push
out
push
xor
outsb
test
aam
and
sub
in
dec
dec
jne
js
dec
dec
xchg
clc
popa
imul
xor
sbb
and
andl
add
xor
push
enter
lock
push
addb
loope
mov
add
out
xor
add
xor
out
xchg
sub
cmp
add
mov
jmp
loop
roll
out
jb
popf
dec
lods
add
movsl
lcall
mov
add
xchg
dec
inc
xor
in
ss
push
loop
and
enter
sbb
or
mov
jmp
mov
and
sbb
addr16
sbb
sub
cmp
pop
pop
or
push
mov
lods
xchg
inc
clc
lds
push
push
les
punpckhdq
cmp
pop
xor
push
aad
push
and
sbb
push
sub
pop
hlt
loope
mov
jne
push
mov
jl
sbb
shrb
scas
jl
or
add
imul
dec
mov
mov
push
mov
inc
rcll
mov
xor
fcoml
cmp
hlt
popf
loop
xor
dec
cmp
xchg
sahf
fld
test
sub
push
mov
inc
or
pusha
fcoms
xchg
or
popf
or
int
shrb
inc
in
pop
inc
fs
fnstenv
les
sahf
neg
repz
call
inc
rolb
pop
push
fbstp
das
nop
mov
xchg
icebp
jnp
jns
pop
jmp
dec
mov
imul
cmp
jbe
shl
jg
mov
test
push
push
mov
roll
imul
xchg
popa
sub
fsubl
or
loope
fcmovne
push
dec
push
sbb
orl
or
int3
daa
push
aam
fdivrl
rolb
or
mov
fcos
xor
sub
fmull
push
test
ret
bndstx
adc
dec
sbb
jno
jmp
sub
les
dec
je
cmp
inc
pop
adc
or
xchg
add
jne
sbb
gs
adc
repz
jne
pop
je
push
ret
push
jge
subl
sub
xchg
push
testl
sbb
test
cmpsb
jmp
loopne
outsl
or
popa
orb
or
movsl
adc
dec
imul
aaa
jge
loopne
outsb
add
enter
mov
cmp
sbb
pop
mov
mov
sbb
test
xor
push
xlat
pop
inc
leave
ret
xchg
xchg
stos
push
dec
in
pop
mov
movsb
jo
ds
repnz
dec
jmp
adc
add
inc
sub
cmpsb
nop
imul
fsub
xchg
or
sub
adc
mov
add
icebp
mov
lret
push
lock
rep
sub
inc
pop
je
push
jbe
jns
sub
pop
mov
or
inc
lahf
mov
xor
andb
das
mov
push
cmp
push
scas
lods
add
sub
push
rcrl
movsb
sti
aas
lds
int
sub
lock
lea
lods
aas
xor
mov
jmp
sbb
enter
fdivs
dec
sti
inc
out
inc
push
jle
fbld
movsl
push
add
les
jo
inc
adc
cmp
push
mov
jmp
and
popf
mov
add
cmp
mov
jae
jmp
sub
or
scas
int3
aaa
or
out
sub
out
add
ret
scas
or
mov
fidivs
add
push
xchg
and
and
in
push
add
lea
outsl
cli
mov
movsb
push
and
test
fwait
or
cmpsb
pop
and
and
or
nop
adc
xchg
pop
sbb
ljmp
popf
idivb
aam
jmpw
hlt
loop
or
fsubs
lahf
mov
cmpl
sub
test
adc
jmp
dec
call
jl
mov
ja
mov
add
sahf
inc
ds
xchg
cmpsl
add
pop
jmp
pop
push
xchg
cltd
lret
and
and
roll
xor
mov
cmpsl
cwtl
jne
ret
in
aaa
xchg
adc
movzbl
push
xor
add
push
addl
push
xor
mov
inc
jo
jnp
bound
daa
pop
xor
xchg
ficomps
or
pop
push
fwait
in
mov
int
push
jmp
push
and
sub
xor
sub
mov
movsb
jg
icebp
jnp
jl
icebp
sub
lea
push
lea
push
inc
push
js
mov
test
push
lret
mov
or
sub
imul
ret
sub
pushf
in
xlat
arpl
pop
ret
push
mov
addr16
mov
push
xchg
or
out
or
or
mov
out
rorb
and
pop
cmp
push
repnz
insb
or
add
sub
jmp
movl
notl
mov
dec
mov
xor
jge
push
insb
jb
cmp
inc
in
push
jg
jge
cmp
jne
push
sbb
cmp
push
mov
xor
or
sbb
or
mov
xorb
jle
inc
inc
imul
sbb
dec
js
lea
lock
stos
test
popa
insl
and
inc
cmp
mov
fdivp
or
lds
popf
push
aad
sub
mov
popa
cmp
jo
add
sbb
mov
pop
xchg
inc
nop
and
jge
pusha
mov
insb
popa
ret
psllq
jmp
mov
push
test
jns
add
aas
push
fisttpll
ret
addl
call
and
ret
adc
je
cs
cmp
in
imul
sbb
in
mov
movb
mov
mov
je
sub
sti
jg
outsb
xchg
add
enter
iret
jbe
mov
mov
inc
mov
pop
push
loop
add
push
lahf
rcll
mov
cmp
lret
push
sbb
adc
xchg
les
add
or
ds
lea
lea
and
inc
pop
in
mov
enter
call
rorb
mov
adc
call
jle
and
orl
icebp
arpl
pop
lea
jl
mov
test
and
pop
lsl
stos
sub
mov
jle
mov
add
jmp
shrl
lods
fisttpl
pop
fadds
movsl
dec
sub
cmpsl
test
pop
xchg
bound
cmpsl
jmp
push
sub
add
mov
xlat
gs
leave
cltd
ret
or
mov
jmp
or
adc
and
stc
rol
push
pop
fdivrs
cmp
cli
inc
push
xchg
jne
mov
cmp
sbb
jl
orb
ret
sub
and
and
add
pop
mov
scas
jmp
cmp
leave
jb
ret
cwtl
sbb
and
push
fistpl
sbb
js
cwtl
mov
das
jl
pop
loopne
cmpsl
or
sahf
sbb
sub
push
pusha
adc
jbe
mov
xor
inc
cmpsl
inc
cmp
jb
pushl
lea
lea
cmc
cmp
pop
jg
flds
push
daa
dec
imul
fstps
and
dec
sbb
sbb
cmp
sarl
mov
adc
sub
mov
mov
inc
adc
sbb
and
popa
jnp
jae
sahf
push
fwait
cltd
insl
out
sub
adc
mov
inc
push
sti
sbb
add
or
sub
or
mov
sahf
push
or
popf
test
ficoms
ret
cmpsb
jns
add
lock
loop
mov
cli
inc
loop
cld
push
adc
inc
lea
icebp
cmpsl
jle
lea
jle
push
outsb
cld
mov
mull
push
lea
inc
dec
call
lret
dec
fwait
shrl
les
jecxz
sarl
push
dec
enter
or
hlt
aam
mov
pop
fdivrl
mov
jo
ret
es
add
mov
jl
inc
sbb
clc
lcall
and
aam
cld
cmp
cmpb
test
test
out
int3
push
ret
je
xor
sbbl
xor
inc
push
push
sbb
pop
rcl
dec
add
test
jp
imul
xchg
outsl
dec
repz
arpl
test
dec
xchg
add
mov
cwtl
jl
adc
sub
add
pop
shll
rcrb
aam
fld1
cmp
mov
and
pushf
mov
cmp
jb
pop
lods
fsts
dec
pop
shlb
inc
cmp
fs
js
movsb
or
mov
fcomps
fwait
and
or
mov
movsl
scas
or
mov
lods
pop
stos
push
faddl
dec
lret
outsl
xchg
sbb
xor
or
cmp
jne
mov
add
mov
pop
mov
loope
inc
das
jo
aam
inc
cmpb
xchg
faddl
dec
aas
push
xor
adc
sbb
test
pusha
or
fsubs
sbb
adc
inc
repz
insb
and
jmp
or
xchg
mov
orl
pushf
and
mov
fs
nop
sbb
cmpsl
add
push
push
mov
or
cli
cmpsl
mov
stos
mov
notl
jg
jg
cmp
cmp
into
or
mov
add
ja
testb
mov
push
sbb
fwait
mov
pop
hlt
call
add
or
lods
add
adc
mov
dec
mov
idivb
js
out
mov
cmpb
push
xchg
jg
dec
add
mov
test
inc
push
pop
pop
mov
in
jl
sbb
inc
fsubrl
jge
dec
lahf
cmpsl
mov
or
or
sub
sbb
adc
push
pop
incl
xchg
pop
lods
lods
mov
test
dec
call
daa
mov
mov
adc
les
adc
xor
test
jl
mov
movsb
aad
cwtl
pop
pop
push
push
sub
sar
fldl
mov
decb
mov
xchg
test
add
aas
les
fwait
mov
sub
push
pushf
add
add
inc
push
out
add
add
mov
jo
push
cmp
push
mov
push
xchg
sbb
mov
add
rclb
or
outsb
aaa
pop
inc
add
pop
sbb
push
push
movsl
or
sarb
lods
inc
pop
pop
addr16
and
jb
lea
rclb
pop
pop
dec
xchg
push
sub
add
dec
jl
cld
insl
push
incl
xor
add
cmp
je
cmp
jbe
adc
mov
pop
inc
ficompl
cmp
adc
rcrb
pop
cwtl
cltd
addb
add
fmul
pop
sahf
mov
cmp
jae
cmpl
or
lock
jp
mov
scas
jle
sub
icebp
adc
jle
mov
push
fistpl
push
sub
mov
imul
js
jb
pop
or
test
and
rclb
lods
clc
mov
and
ss
jl
fwait
xchg
add
jmp
mov
repz
movsb
push
addb
mov
mov
sub
pushf
fsubrs
xchg
dec
lock
sti
bound
mov
sbb
mov
cmp
or
cmpps
push
xor
add
sbb
dec
push
enter
and
scas
push
mov
mov
pop
ret
ficoms
std
mov
int3
aad
jg
loop
movb
jno
nop
inc
adc
notl
add
ds
inc
pop
lods
sti
mov
fistpll
push
outsb
jns
in
and
jge
test
inc
mov
jmp
aaa
lret
pop
insl
sbb
jle
clc
cs
lods
sbb
dec
sub
add
ljmp
int3
xchg
lea
mov
mov
push
ret
adc
add
out
mov
dec
and
cld
jp
cmpsb
adc
mov
sbb
cld
push
jnp
mov
push
xchg
popa
add
cmp
inc
neg
cld
lret
inc
ret
stos
ret
push
mov
imul
lock
mov
call
adc
incb
xor
mov
mov
sbb
xor
das
pop
popf
adc
xchg
mov
add
push
fisttps
mov
lea
and
and
fdivs
mov
mov
xor
adc
sub
or
adc
mov
rorl
orb
push
xlat
pop
jmp
hlt
jmp
out
xchg
jp
outsl
or
sarb
int3
and
or
mov
negb
out
cmpsl
sub
pop
dec
inc
cmp
mov
pop
pcmpgtb
push
cmp
adc
sti
dec
push
das
lea
jnp
push
jo
cmp
cmp
xchg
loope
shll
cmp
aam
scas
xor
xlat
xor
mov
mov
mov
mov
push
dec
data16
iret
test
inc
ss
add
inc
orl
stos
mov
adc
daa
xchg
mov
rclb
js
pop
cmp
je
mov
lock
mov
mov
sub
add
xchg
adc
adc
fstpt
mov
bnd
popf
cmp
rcrb
push
cmp
ljmp
jecxz
mov
clc
add
in
cmp
lock
cmp
inc
inc
outsl
rclb
cmp
dec
je
dec
mov
pop
test
js
scas
rorb
mov
jl
mov
mov
lahf
add
daa
and
adc
dec
push
stc
mov
cmp
jae
lea
jmp
cmpl
pop
pop
filds
cmp
jbe
mov
fsub
add
test
sub
mov
insb
mov
lods
nop
pop
pop
xor
loopne
and
mov
inc
orl
jo
cli
push
xchg
fs
in
xchg
lods
dec
or
push
push
lods
push
out
add
add
and
adc
nop
or
arpl
push
je
sbb
test
dec
sbb
clc
mov
inc
lock
cmp
add
int3
pusha
pop
adc
xchg
sub
mov
mov
mov
pop
add
xchg
sbb
jo
cli
cmp
adc
or
cmp
add
cwtl
fcomps
cmp
les
pop
add
pop
bound
sbb
sbb
sbb
push
inc
fcompl
xor
popa
rorl
cmp
dec
clc
jne
xchg
jge
loop
out
push
push
xchg
es
inc
fimuls
xchg
push
dec
lods
shrl
dec
aam
add
arpl
jle
or
xor
or
and
pop
mov
gs
cld
cmp
je
jo
xchg
loopne
imul
jmp
xor
aad
mov
jae
xor
mov
add
aad
jbe
std
addl
les
jmp
adcl
xchg
rorl
fstpl
mov
fwait
or
movsb
push
cmp
adc
ret
in
adcl
lods
cld
or
cmp
std
fadds
mov
xchg
lret
adc
adc
outsb
or
or
dec
pop
cmp
cmpb
and
mov
xor
push
rcrl
push
push
call
nop
sbb
and
adc
push
or
orb
sub
shlb
adc
add
repnz
ret
jp
push
or
inc
andl
adc
lea
sbb
clc
lea
pop
xchg
mov
add
ret
sbb
bound
les
cmpsb
test
imul
cmp
es
mov
pop
lret
or
lret
pop
mov
jnp
and
xor
mov
incb
pop
call
clc
jbe
fldt
jns
dec
dec
clc
jle
fidivl
mov
push
test
cmp
dec
or
adc
aaa
sub
lea
pop
cmp
stos
mov
ret
dec
int
daa
adc
xchg
sbb
xchg
and
hlt
hlt
cmp
jb
inc
inc
mov
or
xor
mov
pop
mov
ficoml
dec
arpl
cmp
call
adc
data16
lret
fxtract
scas
pusha
je
jne
push
js
fistl
nop
sbbb
cld
loopne
fnstenv
mov
xor
test
in
add
sbb
gs
or
add
mov
cld
clc
pushl
cmp
cmovge
lea
mov
jp
and
xor
sub
into
orl
data16
or
xor
pusha
mov
cmp
movl
cmp
push
mov
pusha
jl
es
je
mov
jmp
or
jno
cltd
rol
push
mov
adc
or
int
push
jmp
dec
adc
jl
jecxz
pusha
xchg
nop
adc
inc
adc
xor
arpl
add
fsts
xor
cli
scas
lcall
jne
dec
dec
and
arpl
pusha
xor
es
dec
add
add
inc
or
mov
mov
cmpl
sahf
scas
dec
jnp
jbe
push
cmp
adc
adc
add
in
cmpsl
jbe
push
mov
cmp
adc
mov
adc
pop
jp
jae
lret
dec
mov
rcrb
inc
loop
mov
mov
inc
jne
sub
das
push
jmp
jbe
lea
lcall
push
hlt
xor
adc
mov
cs
jnp
popaw
add
add
push
out
in
adc
aaa
and
sbb
inc
or
jmp
cltd
lret
push
push
dec
or
mov
invd
mov
ljmp
leave
pop
sbb
imul
and
adc
adc
leave
movsl
es
in
mov
add
and
in
aam
cmp
mov
aam
inc
dec
push
pop
push
jns
lcall
add
not
and
roll
enter
inc
sbb
mov
jmp
adc
rcr
dec
push
shlb
and
shl
push
icebp
sbbl
ss
ss
xor
call
or
das
fdivrl
lea
mov
mov
iret
and
in
call
add
js
hlt
out
lret
in
push
mov
outsb
jmp
or
pop
and
pop
cwtl
cli
jbe
cmpsb
les
sbb
int3
jbe
shlb
mov
js
pop
sbb
lret
jle
shr
cli
jae
in
add
pop
or
jbe
sub
sbb
mov
mov
shrb
push
xorl
movsl
rcrb
pop
or
test
int
sbb
addl
cmpsb
icebp
mov
lds
adc
inc
test
adc
xor
fidivrs
rolb
mov
daa
call
subl
les
stos
jecxz
mov
call
cmpb
jecxz
mov
lcall
cmpl
pop
movsb
rcrl
xor
outsl
or
das
sub
jmp
loope
mov
lds
jo
sub
mov
pop
xor
jecxz
rcr
add
leave
push
mov
sub
orb
jno
or
nop
sub
lock
fistpl
sbb
xchg
movsb
mov
fiadds
add
inc
cmp
mov
addr16
mov
jnp
xor
and
cmp
pusha
push
jnp
add
cmc
clc
and
jle,pn
mov
xor
mov
jb
loop
or
pop
add
pop
ret
je
ret
cmpb
andl
add
cwtl
xorl
ret
jno
inc
jne
inc
stos
mov
jbe
je
add
pop
and
sub
ljmp
or
sbb
leave
or
adc
xchg
mov
lea
sahf
mov
xor
or
mov
loopne
fidivrs
in
in
add
adc
xlat
inc
and
test
add
push
adc
out
add
push
jnp
mov
push
loopne
push
inc
sbb
cmp
ret
testl
xor
or
mov
jp
push
xor
jo
arpl
lcall
or
ret
dec
mov
rcr
sbb
mov
cmpl
adc
shll
test
jge
add
mov
cmpsl
or
sub
adc
outsl
int
jmp
jne
in
in
jl
cmp
out
jbe
mov
sbb
fisubl
adc
enter
sbb
jl
stos
sbb
bound
push
out
out
popl
or
push
pop
clc
add
clc
jno
pusha
add
mov
cmp
or
repz
sbb
mov
sub
lcall
je
sti
xor
test
repnz
or
xchg
cmp
les
adc
xor
lea
shlb
movl
mov
and
nop
test
push
push
dec
fsubr
lret
jb
pop
push
pushl
push
scas
xchg
in
xchg
and
cltd
xor
daa
stc
xchg
mov
xorl
test
jb
test
pop
push
and
rorl
mov
mov
sub
sarl
sbb
push
int3
in
imul
xor
test
imul
in
push
ret
pop
or
roll
dec
movsb
xor
jge
pop
mov
imul
pop
cmp
fcompl
int
sti
mov
fimuls
cmp
arpl
popa
mov
mov
roll
or
dec
andl
stos
sbb
imulb
mov
pop
ds
stc
into
or
je
dec
adc
push
lods
or
in
or
pop
lea
lret
push
push
lea
push
ret
pusha
jbe
add
mov
mov
sbb
push
sti
loope
inc
cmpsb
and
imul
or
sbb
xchg
rclb
addr16
imul
lea
inc
xchg
in
std
cmp
ret
jae
sub
loopne
xlat
lcall
int3
adc
mov
lock
sub
xor
add
push
push
cmc
adc
lds
mov
dec
mov
xor
orb
das
adc
test
mov
dec
dec
jno
inc
inc
mov
or
cmc
pop
sbb
mov
mov
or
sti
pop
mov
pop
or
jb
adc
clc
jg
push
aas
fs
push
add
xchg
jle
sub
xor
int
cltd
out
mov
int3
add
lods
mov
add
mov
adc
test
ja
or
cld
pop
sub
enter
pop
and
addl
fisttpl
xor
roll
cmp
add
add
add
testl
mov
out
mov
lds
mov
xchg
inc
mov
mov
je
adc
cli
lea
iret
or
adc
inc
cmpl
and
adc
imul
mov
or
rorl
pusha
rclb
xchg
or
mov
xchg
mov
cmp
jmp
cld
cwtl
fisttpll
daa
push
push
dec
mov
cmp
inc
cmp
jbe
int3
push
fimuls
stos
ret
aas
jmp
lcall
pop
pushl
jmp
add
fisttpll
and
push
xor
loope
cli
inc
mov
mov
adc
dec
dec
push
rol
test
testb
jle
pusha
push
push
mov
mov
adc
popf
push
push
cmp
jne
cmpb
icebp
mov
ljmp
push
sub
daa
jmp
xchg
inc
popa
mov
jnp
bound
xor
push
enter
jo
or
jmp
or
mov
cmc
imul
sbb
cmpsl
ret
test
push
rcl
std
add
push
cmp
jae
inc
jmp
push
or
pop
jecxz
mov
sti
sub
mov
stos
and
gs
ret
sub
std
out
test
add
pop
dec
fcom
cmp
out
sub
mov
mov
xchg
outsl
ror
popf
dec
fstps
int
cmp
and
sub
push
or
test
cs
cmp
stos
xor
mov
jle
in
xchg
adc
or
jne
inc
loopne
jl
and
inc
jecxz
jmp
pop
mov
lds
push
test
push
mov
stos
jne
imul
sbb
adc
pop
pop
mov
and
lea
pop
mov
xor
sbb
and
or
arpl
das
push
cmp
or
lret
dec
or
cmp
movsl
test
push
and
sub
inc
cld
dec
jo
pop
lea
je
mov
lea
jb
adc
ja
fsubl
mov
push
or
or
xor
sbb
xor
push
pop
lods
icebp
xchg
orb
cmp
jb
inc
mov
adc
cmpb
fadds
sub
mov
data16
push
adc
cmp
sub
push
insb
jg
jne
or
add
es
or
aam
mov
jno
push
adc
and
outsb
sti
notl
add
mov
jmp
mov
adc
shlb
lea
fistpll
cmp
add
or
xor
pop
dec
mov
sahf
clc
es
and
in
sub
ficoml
or
inc
pop
mov
and
push
dec
popa
mov
push
addr16
cmpsb
mov
adc
imul
mov
out
aaa
adc
add
mov
insb
jno
rorb
push
jne
insb
xchg
inc
aaa
fwait
add
sbb
lret
mov
xchg
mov
dec
and
push
xchg
aad
sub
push
gs
add
add
loopne
lds
and
adc
out
movsb
push
sub
inc
add
jb
aam
cld
push
mov
mov
cmp
aam
dec
cmp
xor
add
push
ljmp
dec
push
lods
into
pop
shlb
xor
xchg
cltd
in
sub
inc
add
fcmovnbe
ret
push
lcall
or
ffreep
dec
jge
adc
fidivs
int3
or
mov
cmc
js
inc
or
mov
lahf
ss
inc
inc
out
mov
decb
pavgb
rcr
cmpb
sahf
jl
add
push
hlt
out
jbe
dec
jge,pn
xor
push
jg
or
cld
cmp
cmp
xor
mov
adc
push
xchg
or
cmp
jne
push
insb
mov
cmp
ret
aam
add
or
or
test
cmp
fs
aaa
push
js
jle
test
mov
cmp
cmp
test
int
add
aam
in
aam
cmp
shll
and
add
xchg
inc
ss
pop
sbb
jne
pop
cmpl
xor
int3
jp
pusha
sbbb
mov
cmc
pop
addl
gs
mov
and
cmp
lret
les
fistpl
in
into
add
movsb
add
jg
enter
and
or
negb
add
add
sub
mov
aam
adc
into
call
test
adc
dec
les
push
mov
adc
sahf
add
mov
add
add
sti
xor
int3
sbb
dec
pop
into
or
mov
insb
mov
test
sti
xchg
cmp
jecxz
push
je
push
leave
mov
sub
inc
push
repnz
cmp
and
mov
pop
leave
setbe
jecxz
push
pop
xor
or
or
xor
push
push
xor
xchg
mov
or
fcoml
adcl
mov
xlat
popa
cmp
cld
push
ja
xor
mov
loopne
xchg
mov
jecxz
cli
xor
mov
mov
sub
push
js
adc
ss
ret
push
push
mov
jne
pop
add
mov
add
pop
sarb
add
mov
pop
jnp
adc
test
inc
aad
mov
sub
and
push
mov
daa
push
add
int
outsb
mov
fsubr
pop
xor
mov
cmp
push
pushl
adc
or
pop
jmp
or
fmuls
xchg
addr16
ja
xor
dec
scas
mull
into
push
jmp
fists
inc
adc
mov
adcl
loopne
cmp
lock
hlt
call
ret
lcall
mov
call
adc
test
pop
inc
lcall
or
movsb
adc
mov
imul
sub
jno
jge
wrmsr
in
add
mov
lock
mov
cld
adc
inc
push
out
ret
add
inc
mov
outsb
sub
fildl
xchg
lds
jge
jp
add
fcoml
loopne
pop
and
jne
es
test
pop
cmove
add
cmp
int3
out
or
popa
add
or
popa
loope
push
aas
or
outsl
aaa
xchg
and
call
lods
mov
sbb
cltd
data16
into
or
jo
or
movsb
mov
cmp
xchg
rorl
inc
cmpsl
aam
fwait
repnz
sbb
mov
push
mov
stc
push
or
cli
dec
mov
jp
and
push
or
xor
imul
sbb
add
dec
lcall
adc
and
iret
out
cmpb
and
mov
in
pop
lock
mov
sub
adc
dec
movsl
sti
add
mov
pop
add
test
call
jmp
sbb
je
lock
mov
cwtl
iret
popf
nop
push
dec
jnp
out
push
add
mov
sbb
xor
bswap
sbb
js
idiv
and
xchg
xor
rclb
or
cli
and
pop
adc
cmp
jae
insb
pusha
and
add
inc
cwtl
mov
nopl
pop
fdivrs
push
std
popa
es
in
add
or
inc
mov
push
cmp
subb
mov
and
testl
aam
mov
fsub
in
addl
fadds
push
into
es
outsb
test
js
adc
pop
push
jns
clc
xor
and
pop
pop
leave
push
sbb
xor
daa
lahf
or
add
xchg
jno
int
ss
cmp
js
into
sub
add
iret
out
das
lea
jle
xchg
ds
fiaddl
test
adc
mov
sub
jno
repz
add
inc
js
jb
add
add
jne
mov
mov
inc
push
fs
push
jae
test
inc
testl
out
pop
imul
add
scas
rcrb
push
fldcw
pop
ss
ret
aas
push
push
mov
fwait
test
es
cwtl
dec
push
fwait
ret
mov
jecxz
mov
jle
mov
loope
lods
call
or
test
sti
add
in
sbb
sbb
mull
push
sbbb
test
mov
adc
rcl
mov
or
push
xlat
mov
das
sbb
es
jo
mov
adc
sbb
pop
call
sub
jge
cmp
jl
dec
test
jl
aaa
dec
mov
icebp
shrb
mov
or
daa
fs
add
movl
and
xchg
or
adc
mov
arpl
add
mov
jne
xor
fstps
es
jle
dec
mov
cmp
push
or
mov
mov
sbb
ret
inc
push
xchg
testl
mov
dec
push
aaa
mov
or
movsl
imul
jne
sbb
loopne
jnp
call
mov
cmp
xchg
and
and
or
ret
jnp
test
cmpl
test
roll
lahf
mov
ret
or
jae
fs
inc
faddl
pop
add
pop
fstpt
nop
ficomps
in
push
pop
xchg
mov
aam
lds
xlat
mov
push
dec
lcall
sbb
movsl
mov
push
add
sbb
mov
leave
push
lea
add
jecxz
outsb
dec
andb
pop
fsub
sub
cli
sbb
fists
push
daa
hlt
sbbl
js
add
stos
andb
outsb
ret
jge
into
je
nop
cmp
out
mov
nop
cwtl
jmp
call
push
and
pop
nop
or
push
or
lret
or
insl
loopne
push
jo
dec
sbb
mov
push
cmp
fiadds
adc
jae
movsb
insl
rorl
loope
and
mov
sbb
lds
dec
in
mov
jl
repz
inc
dec
dec
push
sbb
aas
add
rcr
loop
cmp
and
cmp
jb
mov
and
add
xor
mov
cltd
scas
inc
and
dec
leave
adc
or
in
mov
ljmp
rclb
add
je
stos
js
int
fs
add
rolb
mov
pop
add
lods
and
mov
mov
push
mov
negb
scas
xor
mov
jmp
xor
popl
aad
add
add
jmp
inc
jl
pop
mov
pop
ret
mov
test
and
jmp
push
jg
push
loopne
pop
push
aam
adc
add
test
mov
mov
adc
mov
test
sti
cld
push
les
or
data16
xchg
fwait
test
sbb
scas
sub
mov
pmuludq
lods
mov
push
stos
mov
sbb
rcll
insb
aaa
enter
adc
xor
ret
push
ja
das
jo
jo
pop
arpl
mov
jbe
addr16
push
loope
push
cmp
push
les
insb
nop
sub
add
aaa
or
out
mov
test
cmpsb
push
pop
les
out
je
adc
jne
mov
push
push
adc
sub
jb
jp
or
faddl
push
jbe
mov
mov
push
jb
xlat
add
out
sub
stos
add
hlt
or
adc
sbbb
mov
mov
faddl
xor
mov
sarb
and
sub
jecxz
fistl
xlat
sub
mov
xor
mov
jo
cwtl
out
adc
mov
popf
push
push
ljmp
js
call
sar
add
inc
sbb
jp
cmp
out
mov
lret
xchg
xchg
push
inc
popa
insb
or
fsubl
xlat
xchg
subl
sbb
xchg
subl
add
xor
popf
jecxz
push
subb
int
fsub
int3
aas
icebp
movsb
loopne
loope
fcompl
cld
shll
les
in
and
imul
mov
pop
or
mov
mov
push
sbb
loopne
test
enter
sti
sub
xor
jb
lds
test
fidivrl
sti
mov
insb
mov
fcompl
sub
insl
daa
jbe
and
fisubrs
mov
stc
rcr
sbb
orl
xchg
push
test
xor
adc
mov
movsb
mov
divb
sbbb
or
dec
sub
adc
adc
test
add
in
jb
add
xchg
lret
xor
xor
push
dec
sub
cmp
cmp
push
cmp
or
dec
push
fs
xchg
lret
inc
insb
push
pop
idivb
out
adc
pop
mov
sbb
mov
pop
into
cmpsl
pop
int3
add
mov
testb
dec
mov
or
sahf
fsubrs
dec
push
jp
test
inc
pop
out
xor
add
pop
mov
pop
push
cltd
dec
sub
add
fadds
pop
or
sbb
sar
dec
sbb
xchg
mov
fdivrs
rcrb
int3
enter
inc
les
inc
test
enter
rorb
add
xorb
mov
jo
mov
jg
fs
jb
and
and
and
and
adc
or
ss
adc
cmp
add
rorl
lods
xchg
loope
shl
mov
inc
xor
sub
xchg
fldl
loope
jg
mov
push
adcb
push
or
mov
jo
xor
or
pop
cld
out
lea
movsl
movsb
mov
push
jbe
js
xchg
push
loope
add
add
imul
ror
cmp
dec
andl
out
paddsb
xchg
adc
cmp
and
or
push
push
cmp
mov
cmp
adc
fdivs
fs
or
mov
lcall
inc
cs
push
sbb
movaps
adc
pushl
and
mov
loope
and
insb
or
out
pop
and
add
push
popa
jo
scas
inc
or
test
movsl
mov
mov
loopne
inc
pop
lcall
push
lea
jno
scas
sbb
fisttpl
mov
mov
pop
add
jno
sub
lods
cmp
lock
adcb
cltd
nop
sysret
push
inc
push
dec
push
pop
add
push
dec
es
or
add
sbb
jns
push
sub
mov
mov
or
fwait
cwtl
pusha
and
push
xchg
xchg
inc
or
mov
inc
adc
adc
mov
lcall
push
cmpsl
inc
xor
pop
test
push
pusha
cmp
jb
xchg
push
jmp
pop
or
test
call
push
fwait
dec
test
sub
add
mov
push
add
fdivs
or
push
fidivl
ss
push
divb
add
add
pop
loopne
lods
add
jmp
xor
mov
clc
and
loopne
movsl
fwait
pop
int3
icebp
push
and
pop
sub
mov
sbb
jp
mov
push
add
mov
ret
pop
xchg
add
js
sbb
xor
jbe
daa
test
and
pop
aam
rcll
and
sahf
sub
xchg
inc
je
sub
pop
cmp
std
push
pop
pop
push
inc
shrl
cs
mov
stos
cli
xor
add
adc
es
popf
mov
fsubs
jmp
inc
adc
mov
testb
mov
xchg
jecxz
cmpsb
or
es
adc
pop
jmp
ret
xor
adc
inc
orl
pusha
mov
mov
fcoml
xchg
adc
mov
js
add
std
pop
add
je
jne
cmp
jae
push
add
cld
adc
sti
jmp
mov
stos
push
mov
inc
ss
and
and
xchg
das
fidivrs
add
push
shlb
sahf
and
push
sub
sarl
js
sbb
in
xor
fstpl
sub
jae
sub
mov
fcmovnu
mov
or
sarl
pop
into
jnp
add
or
xchg
inc
pop
or
addl
xchg
or
and
and
insb
or
iret
out
or
fs
inc
es
adc
dec
fwait
pop
cwtl
pop
lea
dec
in
jne
or
inc
je
adc
imul
ret
xchg
jne
xorl
popf
sub
dec
lea
repz
pop
or
and
fcomp
ret
jmp
pop
shrb
cltd
aas
cmp
push
cmpsl
add
je
cmp
sub
ja
ja
repz
add
aaa
lds
adc
xor
js
gs
xor
out
dec
pop
mov
cmp
mov
xor
les
rclb
rcrl
mov
dec
js
hlt
sbb
adc
inc
add
sub
or
add
mov
cmp
sub
mov
jp
addl
hlt
xchg
rorb
and
outsb
stc
push
rorl
add
rcrb
or
xchg
and
sbb
addl
push
pop
push
mov
mov
loop
xchg
faddl
andb
push
or
add
mov
xor
pop
nop
rorl
fdivs
pop
js
aas
and
addb
mov
std
inc
sub
add
pushf
or
popa
or
push
xor
xor
pop
cli
jne
push
xchg
adc
sbb
pop
xchg
rcrl
add
xor
cmovbe
int3
add
js
or
jmp
aas
add
inc
push
pop
or
icebp
mov
das
mov
dec
push
int
and
sub
or
add
js
repz
mov
cmp
test
push
mov
mov
push
js
mov
scas
or
or
push
pop
push
dec
add
cmovae
outsl
scas
xchg
es
mov
or
add
push
mov
sar
xor
loopnew
cmp
sbb
mov
cld
push
dec
fmull
inc
push
lret
pop
orl
mov
cmp
js
fildl
and
push
mov
nop
and
pop
or
and
imul
or
ss
test
jg
adcl
ljmp
bswap
int3
out
mov
sahf
push
or
ss
scas
subl
add
add
xchg
add
ror
cmp
push
and
mov
addr16
inc
test
nop
icebp
or
sub
nop
mov
mov
or
inc
icebp
pusha
mov
push
das
popl
fidivrl
mov
sti
out
pushf
and
stc
cwtl
movsl
inc
cmove
adc
cmp
mov
mov
mov
xorl
add
testb
and
lret
add
jno
cld
inc
jmp
fldenv
rolb
xlat
cmp
push
insb
or
cmp
or
push
cmp
or
xchg
loopne
push
pop
stos
cmp
sub
add
mov
mov
lock
ret
roll
hlt
std
orl
xor
loopne
mov
sbb
jo
jmp
loope
inc
nop
or
or
adc
test
sub
xor
sti
mov
rorl
sbb
enter
pop
std
mov
xor
jp
or
pop
shl
movsl
testb
iret
mov
fbstp
add
pop
jns
loop
pop
xorb
cmp
imul
sbb
jne
rclb
dec
loopne
movsl
sbb
and
push
push
imul
inc
movsb
jge
xchg
inc
pusha
inc
into
and
fnstcw
push
fiaddl
or
popf
adc
and
jns
push
push
pop
xchg
xchg
addr16
jbe
shl
sbb
sti
add
and
mov
sbb
mov
sbb
cld
or
daa
mov
push
icebp
xor
xchg
or
stc
leave
adc
cmp
adc
push
sub
lret
cmp
push
movsl
or
ss
and
aaa
and
jne
hlt
je
add
stos
jmp
pushf
sub
cmp
adcl
cmp
add
xor
jl
xor
je
test
aas
cmp
scas
dec
xchg
cmp
les
fs
mov
sub
mov
pop
xor
inc
popf
fistpl
push
jl
lcall
fistl
push
bound
lea
push
xchg
fcomps
clc
aad
add
mov
nop
mov
fstps
mov
jmp
mov
popf
sub
inc
cmp
jle
push
movsb
loopne
in
mov
loope
pop
and
shlb
adc
jo
rolb
cmp
cmp
mov
inc
js
push
xlat
add
inc
arpl
mov
or
ror
push
mov
push
mov
xchg
mov
mov
aam
into
mov
cwtl
jle
icebp
test
jecxz
or
adc
or
add
pop
pop
push
dec
mov
test
and
dec
sub
testb
mov
add
mov
push
imul
and
mov
mov
xor
adc
clc
pop
mov
and
or
ret
push
push
inc
cmp
xor
sbb
inc
dec
push
je
dec
jne
aad
mov
xor
adc
sub
nop
inc
mov
xchg
cmpsl
xchg
xlat
sub
xchg
or
mov
insb
jg
inc
sbbb
push
jmp
cmp
pop
sub
mov
divb
or
xor
xor
sbb
je
inc
dec
mov
push
inc
dec
jns
jp
js
aad
nop
or
test
add
mov
popf
cld
cld
stc
push
add
outsl
push
daa
call
mov
inc
and
aad
xor
push
lods
push
add
add
sub
rclb
dec
andl
loope
addr16
push
lcall
and
sub
mov
cmp
jb
inc
mov
adc
out
pop
add
xchg
mov
add
nop
insb
and
inc
mov
sbb
or
out
fsubrs
push
mov
jnp
mov
movl
daa
pop
jmp
mov
lea
push
add
push
mov
into
pop
into
pusha
popa
pop
and
enter
or
aaa
stos
add
lahf
and
rorl
je
mov
or
xchg
iret
nop
inc
push
sbb
pusha
sub
inc
pop
and
jne
js
fnstcw
sub
loope,pn
rorl
jae
sub
add
cmp
dec
and
stc
and
and
dec
sub
dec
shll
cmp
push
daa
xchg
xor
pop
pop
add
sub
gs
sbb
mov
je
adc
and
cmp
test
inc
and
cwtl
jae
pop
or
and
mov
sbb
push
sub
inc
movb
data16
mov
mov
xchg
push
inc
rcll
mov
sub
fbld
sub
fucomp
inc
fstp
lea
mov
jmp
cmp
jae
add
loop
add
js
ja
and
inc
loop
cwtl
and
lret
lret
andl
dec
jns
fisttpll
pusha
ret
sub
sti
cwtl
popa
leave
mov
sbbb
xor
in
je
fs
mov
enter
xor
xchg
imulb
cmp
mov
sbb
arpl
or
pop
and
adc
movups
adc
push
xchg
imul
xor
pop
dec
jb
mov
sub
adc
dec
xchg
mov
lahf
fidivrs
fs
cmp
mov
into
adcl
lea
cmc
gs
mov
add
test
ds
mov
mov
inc
mov
xchg
rcrb
mov
aam
enter
pop
pop
sbb
xchg
stos
xor
inc
inc
cmp
xor
rcrb
sti
inc
in
push
mov
fimuls
hlt
bound
dec
test
inc
inc
js
movsl
or
inc
sbb
inc
xor
cmp
loopne
fidivl
xor
xor
add
add
test
pop
or
pop
aas
mov
inc
aas
or
jne
movb
mov
movsb
in
xor
push
lods
add
mov
lock
pop
cmp
imulb
stc
cmc
cmpb
push
inc
sbb
sbb
hlt
test
in
inc
test
jmp
cltd
rorb
push
cwtl
cmpl
adc
inc
fiaddl
mov
fcompl
jo
pandn
jge
push
add
pushf
jle
jecxz
add
dec
inc
cmp
jmp
push
jmp
xor
aad
iret
mov
xor
shlb
fsts
add
push
cwtl
pop
enter
xchg
outsb
xor
pop
push
sub
jg
decl
xchg
enter
shrb
bound
mov
int3
xor
dec
xchg
mov
mov
in
push
and
adc
jp
mov
or
push
jl
mov
bound
jle
push
sub
lock
inc
call
imul
jne
pop
test
pop
bound
ds
pushl
inc
push
lods
mov
test
mov
add
inc
ds
dec
shrb
and
ja,pn
test
inc
and
sbb
scas
or
dec
or
adc
jge
inc
repz
dec
test
lock
adc
addr16
movb
sub
push
push
sbb
sbb
pop
or
mov
add
pusha
pop
xor
sbb
cmp
pop
mov
in
lret
in
in
push
mov
adc
pop
xchg
cwtl
daa
shlb
mov
pop
sub
sub
test
add
adc
test
inc
inc
add
pushf
cmp
mov
outsl
jmp
cli
inc
push
lret
pusha
test
clc
inc
fmuls
addb
outsl
mov
add
sub
loopne
std
cmp
mov
lock
sahf
int
push
adc
or
push
test
dec
adc
sbb
fdivs
pop
test
sbb
es
xorl
push
jns
in
arpl
push
sbb
pop
add
ret
sahf
filds
pop
mov
sbb
in
jns
fwait
or
dec
pop
in
sbb
mov
dec
mov
adc
sbb
mov
enter
push
insl
cmp
sub
loope
je
or
sub
mov
aaa
lcall
or
addl
imul
cli
mov
xor
lea
mov
sahf
js
inc
stc
jnp
andl
insb
dec
add
insl
sbb
sub
icebp
cmp
add
push
cld
add
cld
xor
sub
lea
test
mov
test
fs
data16
sbb
adc
out
mov
push
faddl
jbe
adc
mov
test
cmp
loop
lret
mov
xchg
sbb
mov
insb
call
movsb
mov
fldt
shrl
dec
push
leave
mov
sub
testb
or
daa
inc
jae
push
movsl
cmp
add
jg
sbb
mov
in
jo
add
adc
sbb
sub
mov
add
or
push
ja
sbb
cmp
ja
enter
or
int3
push
xor
cmpsl
rolb
add
add
out
leave
xlat
sbb
and
loope
bound
fists
mov
adc
inc
dec
xor
js
push
scas
xchg
loopne
sub
sbb
adc
cmpsl
sbb
movl
rorb
cmp
mov
inc
cli
insl
push
mov
jo
lods
jl
xor
xchg
cmp
das
hlt
and
or
xor
nop
lret
in
and
out
rorl
push
add
inc
or
cmp
or
adc
push
or
xchg
add
push
lret
or
cmp
xchg
pop
scas
aaa
pop
sub
nop
aaa
cmp
xchg
sbb
les
or
dec
es
mov
rcll
sbb
xor
pop
shll
xchg
add
sbb
mov
in
pop
pop
adc
mov
mov
cmp
outsb
and
shrl
sbb
push
sbb
js
push
push
rcll
aad
fst
pop
sub
jns
mov
and
lods
pop
cmp
int3
xor
and
mov
fsubl
xchg
mov
aad
repnz
mov
mov
xchg
and
jmp
inc
inc
jne
mov
xor
adc
sbb
cmc
add
sarb
sbb
mov
movsb
popf
lods
repnz
mov
and
or
aaa
shl
xor
and
rorb
cmp
push
mov
add
add
test
jmp
jne
push
fmull
push
rcrb
add
or
scas
nop
push
jge
mov
dec
js
ss
jne
mov
mov
adc
inc
clc
outsb
push
add
fwait
xchg
jo
or
adc
adc
movb
push
dec
nop
add
loopne
jl
icebp
adc
or
and
and
sbb
jmp
mov
loope
mov
movsb
mov
cmp
inc
mov
inc
test
mov
and
test
lods
ds
sarl
sti
xor
movsl
mov
mov
test
lret
stos
push
dec
add
test
adc
or
daa
add
push
inc
xchg
scas
nop
push
ss
xchg
loopne
fildll
pop
pop
rcrl
jno
fisubrs
dec
xchg
addr16
or
movsb
aad
repnz
mov
xchg
inc
mov
mov
xchg
xchg
sbbl
add
add
add
icebp
ret
add
testb
dec
dec
add
mov
pop
or
lret
and
inc
jns
call
mov
pop
xor
xchg
cmpsl
push
push
ffree
nop
push
shl
xchg
shl
dec
fwait
cmp
sub
pushf
adc
mov
pop
sub
cltd
insl
loopne
xor
jae
call
push
ss
inc
lock
pushf
je
mov
loope
mov
or
dec
mov
enter
push
cwtl
insl
enter
xor
mov
mov
xchg
inc
mov
sahf
xchg
addl
in
ret
and
jge
aas
mov
mov
sbb
dec
movsl
stc
repnz
or
sbb
lahf
push
jbe
xor
inc
aad
or
lods
and
xor
ja
and
cwtl
adc
addb
jl
xchg
mov
lcall
mov
fs
sub
or
xchg
dec
xchg
or
jl
and
fimuls
insl
bound
mov
imul
dec
adc
push
out
stos
mov
pop
cmp
imul
sub
xchg
sbb
xor
lock
xchg
xchg
adc
pop
mov
jecxz
sarl
pop
push
sbb
xor
or
pop
dec
pop
shlb
cwtl
lods
aas
outsl
pop
jmp
sbb
movsl
es
add
push
mov
and
adc
andl
loopne
xor
and
jbe
dec
sbb
dec
repz
pop
xor
push
pop
sbb
xlat
ss
pop
jae
es
fs
inc
and
idivb
and
push
push
daa
das
xor
les
loopne
ret
mov
lea
xlat
adc
movsb
xchg
outsb
and
in
push
adc
sti
pop
pop
movsl
adc
jae
cmp
sbb
sbb
add
xor
sbb
mov
push
imul
mov
nop
fsts
sub
push
nop
pop
pop
sub
push
rolb
mov
test
fsubrs
sbb
ret
sub
and
out
sub
lods
cmpsb
leave
mov
jns
xor
imul
gs
ret
cmp
xchg
data16
call
pop
mov
int
hlt
popf
mov
adc
pop
dec
bound
sbb
bound
push
sub
lea
cs
xchg
stc
loopne
fisubs
sub
jbe
sub
push
add
insb
sbb
dec
mov
in
xor
or
jmp
and
in
xor
and
leave
and
loope
mov
sahf
cmp
mov
shld
xchg
sbb
and
fwait
add
xor
shll
scas
and
shlb
mov
and
sub
sbb
loopne
jnp
pusha
sbb
sub
sub
je
push
cmp
xor
push
add
into
dec
sub
ret
cmp
mov
pop
push
cmp
sub
cmp
xor
and
inc
pushf
jbe
mov
in
stc
inc
test
xor
nop
and
dec
add
sub
inc
add
in
js
mov
mov
xor
adcb
lock
xor
xor
popa
addr16
xor
lods
sbb
repz
xchg
add
leave
out
insl
inc
xlat
fisubs
sahf
fnstsw
sbb
cmc
fwait
inc
push
adc
mov
pusha
or
push
mov
cmpb
rorl
pusha
cmpb
das
sbb
dec
jns
movsb
push
cs
push
aad
in
shll
sub
inc
dec
adcb
insl
jge
push
dec
jecxz
jae
or
inc
push
cmp
jmp
shl
mov
xor
jmp
push
pop
add
xchg
nop
test
push
jne
sbbl
add
push
xor
jae
jo
xor
lock
sbb
dec
rcll
inc
sub
sbb
push
dec
js
pop
dec
push
push
enter
pop
mov
stc
rcr
test
fst
imul
dec
or
repz
push
and
mov
add
xchg
add
addb
add
mov
mov
ljmp
sub
popa
cld
testl
pusha
inc
mov
rcrb
inc
in
jp
cwtl
dec
mov
mov
push
push
dec
adc
ja
inc
test
mov
cs
xor
scas
jg
decb
mov
inc
cmp
ret
jne
and
inc
cmp
popa
jae
jb
js
aaa
add
cmp
add
movsb
jb
clc
pop
push
add
add
dec
aaa
pushl
call
in
sub
cmpsl
sbb
mov
leave
push
xchg
inc
dec
fsubl
fst
sbb
xchg
push
lahf
repz
sub
mov
or
adc
dec
xchg
lds
pop
sub
lcall
jns
inc
repnz
and
mov
dec
pop
adc
enter
push
mov
sbb
mov
pop
sub
sbb
aad
ja
adc
and
push
das
dec
or
dec
icebp
adc
gs
push
cwtl
mov
jnp
inc
cli
ud0
cmp
push
pushl
xchg
pusha
repz
jo
jp
sbb
and
xor
fmull
adc
cmp
sbb
xchg
lods
in
or
and
bound
or
pop
int
repnz
sbb
enter
adc
adc
sub
ret
test
adc
cmp
xorl
sbb
lods
xchg
mov
jo
mov
cli
xchg
xorl
or
lods
add
and
xor
stc
pushf
mov
decb
enter
sbbb
sbbb
fstpl
jg
mov
sbbl
sbb
sbb
repnz
sbb
xor
outsl
push
mov
pusha
jae
mov
pop
shl
clc
add
movsl
push
repnz
pop
fdivl
fdivs
mov
adc
out
sub
or
fadds
push
and
call
cmp
xchg
sub
imul
insb
or
pop
push
or
xchg
jbe
ret
pop
ficoml
jno
rcll
repnz
lahf
add
ret
dec
cs
aad
mov
push
dec
loop
ret
inc
ficomps
cmpb
rolb
and
dec
sbb
mov
xor
mov
mov
inc
and
and
jne
add
xor
add
iret
and
xor
xor
pandn
shlb
mov
aaa
adc
daa
cmpl
sarl
loope
pop
stos
mov
ret
cmp
cmp
outsl
mov
cmp
cmp
pushf
adc
les
rcrb
loopne
and
sbb
fdivrp
push
ret
push
mov
les
mov
pop
jb
and
jb
mov
jne
out
scas
mov
dec
and
sbb
push
in
shlb
mov
xchg
mov
ret
out
sub
in
imul
add
loopne
fwait
mov
dec
mov
ja
push
add
adc
inc
jmp
and
mov
dec
mov
push
andl
mov
or
aad
repz
aam
cmpsb
sub
std
push
or
shll
cli
adc
ss
jo
lds
xchg
movsb
and
and
dec
stos
xor
addr16
and
xor
xchg
pop
cmpsb
sbb
movl
sbb
or
mov
xor
inc
ret
push
inc
xor
les
cmp
dec
xor
mov
leave
dec
or
xor
rolb
inc
dec
dec
andl
and
xor
insl
and
mov
push
bound
inc
sub
pusha
or
aam
sbb
pop
dec
test
dec
dec
dec
imul
ret
lea
dec
or
push
pop
or
cmp
lds
cmpsl
test
hlt
mov
dec
and
sahf
icebp
addr16
mov
mov
daa
sbb
or
add
lods
add
mov
enter
jnp
and
test
sub
imul
loop
push
repnz
mov
icebp
sub
and
popf
std
and
and
push
int
cs
pop
movsl
sbb
je
dec
or
adc
xor
ljmp
push
int
inc
leave
mov
push
or
xchg
push
pop
enter
and
sahf
aad
cmp
roll
ja
outsb
roll
imul
rclb
pop
inc
out
push
mov
arpl
cld
dec
and
movsl
add
leave
pop
nop
mov
jecxz
dec
sbb
xor
ret
std
icebp
pop
adc
insb
and
xor
outsb
ss
aad
jg
in
or
bound
sub
loope
cmp
cmc
mov
int3
sbb
mov
cmp
add
cld
mov
dec
xchg
sbb
pop
jb
or
lods
xchg
sbb
lcall
bound
mov
add
jle
dec
mov
push
jae
gs
sbb
mov
ret
in
in
adc
mov
inc
jmp
test
jl
cmp
and
add
pop
lcall
or
adc
dec
push
lods
cld
or
dec
jg
rcll
ficoms
mov
push
push
outsl
fwait
call
movsl
arpl
cmp
jae
aas
cmpl
ljmp
cmp
dec
call
cs
xor
and
imul
jmp
sbb
mov
push
inc
dec
or
or
mov
movsb
add
sbb
jl
xchg
cli
cmp
xor
popa
jle
pusha
pop
cs
cmp
inc
inc
mov
xor
mov
out
dec
or
xor
movsb
loopne,pn
inc
rorb
push
rolb
movzbl
add
and
and
mov
dec
xor
mov
mov
sbb
or
js
mov
arpl
sub
dec
into
inc
cmp
ljmp
fimull
push
fwait
cmp
adcb
add
add
xor
insb
jne
pop
test
shlb
push
jae
jno
repnz
push
sub
fildl
aas
inc
nop
jne
jns
lock
mov
jno
xor
pushf
xor
mov
push
leave
test
pop
adc
add
lods
push
or
jbe
bound
sarb
hlt
adc
std
rorb
xor
cmp
mov
ja
sub
dec
xor
je
adcl
mov
ss
scas
dec
fsubrs
mov
es
jo
or
dec
mov
xor
xor
movsb
movsb
orl
adc
cmp
add
sbb
rcrl
sbb
add
and
std
das
js
jle
ss
jae
add
add
xor
push
pop
out
call
inc
add
cmc
mov
push
jae
or
pop
add
pop
sub
insb
stc
pop
insl
loope
fstps
dec
sbb
fstps
mov
imul
and
and
mov
dec
sub
lock
addr16
xchg
push
push
and
push
push
mov
mov
test
fs
inc
mov
into
xchg
in
xchg
lcall
pop
idiv
adc
mov
mov
inc
cmp
pop
or
jo
sbb
mov
stc
sarb
cmpb
mov
sarb
inc
push
lds
adc
push
push
dec
mov
xor
insb
jge
sarl
push
push
sbb
lea
fildl
and
add
dec
pop
int3
push
pop
addr16
inc
add
lea
cltd
add
pop
pop
add
and
in
rolb
push
sbb
cwtl
pop
dec
jae
in
xlat
push
sbb
xchg
sbb
mov
mov
add
dec
or
fsubr
fists
xchg
inc
push
sarl
or
inc
xchg
inc
adc
inc
inc
dec
and
or
lcall
mov
jmp
pop
vmwrite
or
outsb
mov
movsb
fnstcw
xor
jno
push
or
outsb
sbb
push
and
jo
dec
dec
mov
adc
mov
movl
add
mov
stos
adc
add
dec
cmpsb
sub
in
cmp
das
push
mov
or
or
aas
aas
hlt
in
push
mov
add
or
fildl
loop
loope
push
aad
inc
mov
movsl
call
add
and
aam
jbe
out
pop
loop
mov
pushf
pop
cmp
sub
pop
push
cmp
mov
xlat
ja
jl
cmp
mov
pcmpeqw
jecxz
lcall
fmull
je
cmp
je
cmp
je
cmp
je
or
inc
cmp
xor
enter
lock
jp
pop
jns
inc
hlt
jne
push
fidivrs
push
mov
pop
pop
xchg
orb
pop
or
cmpsb
push
sbb
xlat
pop
mov
into
sbb
imul
xor
or
mov
xchg
mov
fwait
and
std
adc
push
add
push
jns
in
add
xchg
test
add
pop
call
sbb
push
int3
adc
lret
enter
pop
mov
mov
xchg
les
jl
add
lea
rclb
adc
insb
push
dec
lret
push
icebp
sbbl
fldt
imul
fcmovb
pushf
xchg
xchg
mov
mov
inc
push
in
int3
mov
sub
xchg
or
mov
test
rolb
add
pop
sbb
sbb
fimull
movsb
mov
push
or
cs
push
add
incb
inc
js
sbb
insb
cmp
and
xor
mov
stos
cmpb
mov
repnz
rcrb
inc
lret
mov
nop
dec
ljmp
add
push
stc
lock
clc
and
pop
je
in
ret
and
jns
sbb
fcmovnu
int
xchg
sub
jae
sub
lds
add
cmp
test
into
out
bound
test
mull
xchg
je
rcrb
lcall
shlb
add
in
mov
pop
cltd
imul
rol
adcb
loop
int3
leave
cli
xor
ds
cltd
pusha
mov
sub
cltd
fsubrl
sub
xor
sub
loopne
inc
hlt
hlt
xlat
pop
mov
xor
jno
mov
and
ss
imul
pop
insb
test
loope
xchg
xorl
stos
jne
jp
repz
sbb
inc
outsl
sub
lret
mov
hlt
or
fsub
sbb
test
inc
xchg
fsts
mov
dec
cmpsb
dec
aaa
or
push
pop
test
or
aaa
cmp
fbstp
andb
mov
sub
pop
inc
add
xchg
jp
cmpsb
enter
iret
push
mov
inc
cli
lea
xor
or
loop
xchg
cmp
je
push
or
adc
sub
push
mov
inc
adc
push
mov
jle
push
or
sbb
loope
jo
add
mov
jbe
push
inc
js
sbb
loopne
xor
adc
mov
xor
int3
pop
jb
mov
adc
mov
mov
dec
mov
in
dec
and
lock
cwtl
adc
mov
sub
jne
or
push
inc
pusha
mov
cmp
call
push
pop
test
sbb
add
in
inc
jg
sub
pop
xlat
popf
scas
scas
outsb
leave
adc
mov
mov
push
das
imul
and
mov
pop
pop
inc
repz
and
leave
pop
jns
in
adc
idivb
leave
orl
add
mov
jle
dec
mov
stos
mov
or
inc
pusha
xchg
sbb
pop
lock
push
push
mov
rcr
sub
call
mov
sub
sub
idivb
fadd
sbb
sar
sub
jg
adc
jo
inc
jecxz
xchg
pop
jmp
push
cmp
sbb
xorl
mov
sbb
imul
jl
test
dec
add
cmp
jne
add
ljmp
mulb
cmp
pushf
mov
jne
adc
lcall
fxch
or
inc
inc
cmp
lcall
test
shrl
xchg
test
stc
or
in
lock
repnz
jle
cmp
jle
pushl
push
imul
sub
push
adc
push
sub
lea
popl
push
data16
icebp
pop
pop
pushl
loope
movsl
add
add
push
adc
xor
inc
insb
sbb
lds
push
or
jle
inc
dec
add
les
mov
lea
mov
jnp
add
jbe
push
outsb
mov
adc
jno
and
lahf
adc
je
or
push
mov
mov
pop
pop
push
jb
cmp
in
mov
adcb
push
inc
jne
pop
and
pop
mov
or
pop
fcmovnbe
addr16
pushf
jecxz
jge
adc
iret
inc
test
movsb
jecxz
loope
sub
cmpsl
aas
fisubrs
mov
cmp
fisubrs
jne
xchg
mov
jne
pop
push
mov
xor
push
pop
dec
jmp
push
cmpb
jb
inc
cltd
mov
test
dec
cmp
stc
dec
add
in
or
adc
xchg
lods
lcall
adc
inc
es
and
stos
or
sub
xor
pop
sub
movsb
jo
cmp
push
jge
ret
mov
sub
fs
add
mov
adc
lahf
mov
les
cmpsl
sub
dec
cli
inc
je
je
and
and
mov
stos
cmp
and
add
andl
scas
nop
jle
dec
push
jmp
es
imulb
loopne
fs
jmp
push
add
cmp
xor
push
push
pop
leave
inc
gs
inc
arpl
outsb
sbb
sti
cmpsl
popa
dec
loopne
loop
cmp
cli
add
xchg
pop
movsl
add
mov
dec
cmp
push
rcrl
sub
stos
dec
mov
xchg
dec
mov
dec
dec
fadds
sub
ret
add
mov
lea
ror
push
mov
cmpsl
xchg
push
jb
pop
gs
and
xchg
cmpsl
rorb
or
xor
or
inc
test
into
test
inc
orb
add
add
add
add
test
call
mov
lahf
pushf
mov
call
jno
es
ss
pop
or
push
addl
push
jecxz
insl
mov
loopne
cmp
push
mov
in
fchs
xchg
pop
or
lock
mov
mov
pop
xchg
cmpsl
mov
pop
imul
adc
inc
cltd
iret
aas
xchg
push
add
jp
pop
xchg
dec
xor
mov
xchg
shr
mov
imul
add
outsb
xor
or
sbb
subl
inc
push
adc
mov
mov
fmull
push
or
pop
mov
jne
cmp
pushf
and
pop
push
sbb
mov
xor
sbb
clc
ret
les
push
sarb
pop
ret
inc
xchg
sbb
jo
divl
daa
fldt
loopne
jle
sub
inc
push
or
addr16
cld
push
push
loope
inc
pushf
out
cmp
inc
sbbb
xor
adc
xchg
sub
jle
pop
pop
mov
jns
and
jbe
or
jno
sub
mov
jbe
popa
push
sbb
test
lods
ret
and
fiaddl
loopne
in
or
add
loop
ret
or
int
mov
add
mov
lods
jge
add
xchg
xor
add
fldcw
lea
sub
pop
jne
mov
js
xor
push
in
sbb
sub
adc
push
imul
push
jo
or
sahf
adc
push
push
xchg
cmp
add
sbb
or
inc
or
shrb
insb
mov
push
es
nop
orl
and
test
sahf
dec
sbb
pop
pop
shlb
and
iret
fldt
and
mov
jne
into
test
icebp
mov
or
leave
xor
in
nop
adc
mov
lock
mov
daa
mov
add
xchg
push
into
int3
and
es
dec
inc
push
dec
inc
sbb
mov
aam
xor
mov
fsubl
repnz
xor
adc
cmp
sbb
jmp
push
pop
jmp
pop
pop
xadd
cmp
es
imul
mov
push
push
jmp
stc
push
sbb
lea
cmpsl
push
inc
xlat
imul
add
shll
js
mov
sub
insb
test
inc
rol
adc
lea
adc
xchg
enter
rcll
sar
cmp
jne
out
cmc
and
ljmp
or
cmpsb
adc
sub
je
rorl
sub
xor
push
lods
lahf
push
sbb
call
loop
or
ja
and
negb
sbb
push
mov
loopne
adc
lahf
insb
jne
add
mov
and
dec
andl
sbb
sub
in
cwtl
mov
cmc
pop
sub
xor
mov
daa
cmc
aam
test
fwait
pop
lea
addl
pop
enter
cmp
call
sub
pusha
and
push
adc
sub
mov
sbb
dec
in
lea
pushf
mov
add
jmp
dec
sub
sub
movsb
clc
cld
fidivs
xor
dec
xor
es
fstps
dec
pop
enter
rolb
push
push
add
out
push
or
and
mov
dec
imul
mov
xchg
orb
pop
push
sbb
jecxz
ja
movsb
push
xor
bound
call
jo
cmp
adcl
push
in
adc
ja
imul
popa
rcrl
push
cmpsb
sbb
in
in
lea
fists
js
sub
add
lcall
push
sbb
int3
test
and
out
int
pop
pop
inc
sub
inc
out
jl
add
add
iret
jae
fs
sbb
sub
test
nop
adc
cmp
and
sbbb
loop
lret
fs
fldenv
lea
adc
pop
push
push
cmp
adc
add
or
inc
in
stc
mov
mov
xchg
add
inc
bound
ss
xor
or
adc
add
int
mov
inc
mov
cmpsl
mov
insl
and
in
movb
or
cmp
and
pop
xchg
jmp
fmull
and
out
xor
aas
ljmp
jge
push
xchg
xchg
in
push
sar
leave
data16
cmp
imul
xor
push
mov
mov
dec
jmp
add
xchg
loopne
addr16
test
outsl
or
xor
fmuls
scas
add
jg
je
jne
popf
cwtl
rorb
sub
es
add
sbb
xchg
and
test
dec
sahf
add
lds
add
cwtl
incb
and
jle
lea
cmpb
inc
sub
aas
push
inc
xchg
mov
cs
xor
ds
clc
movb
push
loope
sub
cltd
nop
mov
cmp
pop
jl
pop
je
mov
clc
cmp
and
jb
fdivl
mov
sbb
cmp
aas
xor
ljmp
outsb
ds
cmp
mov
ret
push
movsb
inc
inc
stc
jmp
pop
sbb
lea
insb
pop
jae
mull
add
or
insl
int
mov
or
push
aaa
cmc
pop
paddusb
sbb
test
aas
movsl
mov
test
hlt
jnp
rol
stos
and
sbb
dec
or
cmp
lods
pop
or
cs
jmp
dec
adc
ds
pop
or
mov
and
hlt
mov
int3
or
push
cwtl
mov
lods
pop
les
icebp
stc
sub
in
and
test
jnp
ret
sti
mov
test
and
dec
inc
cmp
jb
pop
pop
sbb
jno
jae
loop
inc
pop
ja
jle
jno
ret
mov
push
add
pop
jns
add
fwait
je
nop
xor
and
jmp
cmp
jne
xor
add
lock
lret
out
stos
push
mov
or
push
sahf
mov
pop
inc
pop
inc
jbe
mov
sbb
pop
adc
cltd
or
sbb
jbe
andb
jge
and
xchg
dec
shl
push
inc
inc
cmp
adc
sbb
jne
ss
cmp
sbb
jns
popl
test
test
or
lea
aam
cld
and
call
mov
mov
push
dec
jns
mov
add
push
and
notb
ljmp
xchg
jo
mov
mov
mov
clc
inc
add
xchg
mov
dec
or
xor
and
data16
inc
sbb
sub
outsb
cmp
push
or
ret
pop
cmc
dec
dec
xchg
das
stos
mov
dec
or
add
xor
and
shll
adc
andl
shrl
into
rorb
cmp
insb
fildl
fdivp
xor
add
inc
adc
rorl
push
pop
mov
mov
push
sbb
clc
adc
js
adc
pop
int
testb
pop
daa
aaa
pop
aad
sub
imul
or
aam
fisttpll
pop
mov
pusha
inc
push
cld
push
add
push
or
or
jecxz
aam
or
dec
jo
mov
into
ret
mov
jl
cmp
push
jb
cmp
push
test
add
pop
xor
rorb
fcoml
xor
mov
jmp
mov
add
faddl
call
dec
push
push
aad
sarl
gs
into
imul
sub
and
addb
or
mov
mov
push
adc
push
out
or
out
push
xor
sub
mov
lea
push
cmpsb
xor
es
jns
insl
mov
sahf
xor
mov
jmp
hlt
sub
xchg
sahf
xorl
push
sub
cmc
adc
xchg
in
in
stc
mov
jmp
pusha
cwtl
adc
into
out
insl
mov
sete
movsl
or
push
jbe
pushf
cltd
xchg
hlt
loop
aaa
xchg
dec
ljmp
cmp
sarl
xlat
stos
or
stos
push
sub
xchg
mov
adc
shl
xchg
fimuls
push
cmp
in
mov
pusha
inc
xchg
mov
dec
pusha
movsb
cmp
loope
mov
sub
cmp
clc
pop
outsb
adc
test
je
test
insl
cmp
mov
mov
inc
jbe
mov
mov
and
push
pop
adc
movsb
jnp
xchg
hlt
xchg
cmpl
xor
or
sbb
mov
push
add
bound
orb
negl
adc
popf
addb
inc
or
in
sub
and
inc
ja
popa
mov
push
xchg
shlb
pop
jp
fs
adc
inc
insb
or
bound
sub
mul
and
iret
adc
adc
push
shlb
push
sbb
jbe
add
sbb
push
jecxz
les
pop
sbb
push
cs
jp
lock
mov
jo
xchg
hlt
mulb
out
jo
xchg
sub
add
cmp
xor
adc
in
pop
xchg
aad
leave
decb
mov
stc
pop
push
jnp
cmp
je
jmp
js
push
xlat
sub
popa
outsb
pop
mov
pop
jle
mov
sbb
sti
mov
stc
jnp
dec
subb
inc
in
and
ljmp
sbb
add
dec
mov
push
mov
test
ror
sub
push
xor
repnz
xchg
ds
mov
in
ja
or
mov
and
push
mov
adc
push
push
call
pushf
call
and
lea
inc
icebp
in
loopne
sbb
pop
out
popa
test
fs
sub
stos
push
or
xor
push
jle
das
add
pop
or
jb
in
test
cmp
pop
in
xchg
mov
lock
das
xor
jo
sbb
lock
jae
mov
mov
int3
dec
mov
out
stos
mov
lret
mov
push
push
add
mov
mov
push
in
loope
add
stos
push
loopne
push
mov
mov
mov
sbb
test
decb
inc
mov
xchg
sub
insl
lock
addb
outsl
lret
nop
and
mov
adc
lcall
dec
push
sub
fdivrl
call
xor
sub
sbb
add
sbb
mov
test
hlt
pop
test
mov
and
or
and
loop
inc
or
adcl
jg
cmp
dec
ss
or
mov
aaa
or
call
mov
sub
push
sub
push
mov
dec
add
inc
or
push
into
cmp
mov
cwtl
xchg
cmpsb
pushf
out
stos
mov
adc
xchg
jmp
ret
inc
mov
push
aam
fs
dec
jns
sub
and
pop
ss
pop
test
adc
cmp
adc
mov
sarb
rcll
push
add
ja
push
adc
adc
pop
pop
ret
rcl
mov
sub
int3
fst
and
testl
loope
js
andb
shr
fiaddl
js
cmp
fistpl
fdivs
popa
in
das
add
xlat
fldcw
xor
add
cld
jle
jb
jl
pop
sub
testl
add
mov
adc
or
ljmp
pop
jo
xchg
mov
xchg
out
push
idivb
add
mov
fs
sub
test
rorb
adc
jne
ljmp
dec
adc
in
pop
cmp
inc
enter
push
mov
out
cmp
clc
xor
push
loop
cld
test
movb
add
xchg
sub
rcll
mov
mov
push
ret
xchg
mov
je
mov
lock
pop
inc
push
ret
sub
lods
and
jns
jmp
adc
push
add
test
andb
fsubrl
dec
xor
lret
insb
popa
mov
ror
stos
mov
jbe
scas
faddl
inc
cwtl
test
and
add
roll
push
dec
mov
setl
lcallw
xor
push
adc
mov
xchg
mov
or
scas
rorl
ret
cmp
sub
push
sbb
push
mov
dec
loopne
pop
test
push
addl
lock
mov
dec
jns
inc
cmp
je
cmpsb
adc
mov
out
inc
adc
pusha
push
push
lea
aaa
dec
cmpsl
in
aaa
out
adc
push
cltd
pop
inc
adc
adcb
adc
jno
cmpb
sbb
adc
repnz
test
gs
push
mov
loopne
xchg
nop
loopne
or
push
jne
add
mov
and
or
xor
out
mov
mov
ret
sbb
idiv
cmp
jb
push
adc
jae
sub
out
push
out
xor
and
inc
loop
dec
xor
loop
mov
js
adc
inc
lahf
aas
mov
test
mov
lea
int3
js
adc
mov
xor
sub
mov
mov
add
cli
jg
cmp
cmp
inc
dec
ja
mov
jmp
mov
fisubrs
lret
push
shr
add
daa
pusha
sarb
pop
xor
add
push
in
jl
push
ret
imul
nop
sbb
popa
inc
mov
sbb
push
icebp
aad
ret
lock
dec
shlb
push
in
out
or
pushw
push
add
xor
inc
popf
mov
js
add
cmp
insb
lock
push
cmp
jne
adc
inc
bound
xor
out
call
xchg
mov
and
adc
xor
clc
inc
pop
push
pusha
push
mov
mov
fs
ficompl
add
sub
outsl
push
fildl
and
push
push
adc
jns
por
add
lock
popf
loop
and
add
fldl
jbe
xor
push
or
add
jle
fcmovbe
inc
inc
sarb
jg
fsubrs
or
pop
data16
mov
mov
aam
push
cld
add
fidivs
cmp
inc
or
jae
xchg
xlat
or
jae
arpl
push
cmp
je
inc
or
push
or
fistpll
jle
cmp
push
push
and
pop
sub
inc
sbb
cmp
call
outsb
or
mov
or
cmp
inc
adc
pop
mov
cmp
or
or
in
das
pop
iret
out
push
or
push
mov
js
cmpsb
dec
inc
jo
icebp
xchg
sub
xor
addl
rcrb
iret
sub
in
jno
adc
add
jnp
push
inc
aaa
fiadds
subb
pop
xor
iret
pop
add
and
inc
xchg
je
sahf
cmp
dec
into
or
inc
ficoml
adc
and
sbb
nopl
push
sub
mov
xor
ja
shlb
dec
sbb
jnp
inc
push
xor
fsubr
jb
call
inc
lea
cmp
or
push
pop
pop
and
jne
jmp
lea
mov
inc
loopne
pop
cmpl
outsb
aas
jl
shl
sbb
aam
mov
cmpsb
mov
fwait
or
mov
add
aas
sbbb
fidivl
xor
mov
xorl
add
sub
out
inc
movsl
aam
ds
mov
add
imul
add
cmp
cmpsb
imul
outsb
lcall
out
out
or
call
cmpsb
cwtl
xchg
lock
sti
or
adc
mov
lock
test
dec
sbb
inc
mov
scas
sub
inc
and
pop
xor
jecxz
fst
push
adcb
int
adc
and
add
sbb
pushf
pushl
shll
add
fadds
fs
daa
inc
jl
js
inc
push
fs
jo
fs
push
fs
inc
push
push
cmp
jbe
loopne
imul
mov
lods
pop
xor
mov
pop
addl
inc
push
sbb
adc
popl
jne
insb
cmp
jo
sbb
push
xor
test
dec
pcmpeqw
ret
push
addb
cltd
and
mov
lcall
sub
sbbl
fnstenv
jmp
cmp
sbb
repnz
iret
outsl
dec
jne
cs
sub
sbb
ror
test
aas
add
mov
cli
push
jbe
mov
xchg
add
clc
xor
jne
mov
jb
mov
and
outsb
shr
mov
leave
lea
inc
dec
adc
sbb
xchg
or
rclb
test
jo
xor
imul
shl
push
cmp
popa
das
or
jmp
add
add
push
rol
ljmp
mov
mov
outsb
nop
and
test
xchg
clc
fistps
lea
add
push
sub
pushl
adc
mov
lret
notb
push
clc
out
test
cmc
andl
fildll
cmp
fnstcw
mov
adc
adc
lea
scas
add
or
in
andl
movsb
cmp
das
add
iret
sbb
stc
or
push
ljmp
stc
lods
mov
nop
fcmovnbe
cmp
fnstenv
rolb
mov
stc
push
adc
lock
xchg
and
sbb
cli
clc
push
sub
je
icebp
jne
stc
mov
pop
xor
ja
fcomps
xchg
ss
inc
lahf
push
sbbl
mov
fsts
pop
sub
push
add
push
test
js
add
aad
push
or
ret
adc
rcl
cmp
xor
pusha
mov
inc
push
mov
jne
lret
in
loopne
pusha
clc
mov
adc
jg
loop
jmp
cmp
push
scas
or
insl
xchg
cwtl
xor
loopne
dec
xchg
popf
add
or
jnp
inc
pusha
cmp
fwait
and
push
adc
movl
lods
cs
iret
xchg
adc
jp
add
adc
mov
or
adc
add
pop
xor
cmc
fcoms
pavgw
mov
and
add
mov
or
mov
xchg
push
cmpsb
push
dec
mov
xchg
push
or
sub
js
lret
xchg
push
mov
fmul
ret
pusha
scas
jo
fisubs
loopne
and
sbb
rorb
loop
movsl
push
sub
mov
adc
jo
inc
cwtl
imull
jo
notl
xchg
and
cmp
adc
sbb
lods
outsl
mov
nop
gs
je
nop
xchg
inc
popw
fs
pusha
sbb
fs
insb
push
adc
movsb
add
xor
arpl
ja
pop
testl
je
cmp
dec
xchg
jo
imul
add
repnz
roll
mov
and
ds
je
xor
fdivs
xor
push
push
lock
push
sub
lahf
loop
xchg
inc
pop
xchg
jmp
lea
pop
xor
add
cmp
inc
sub
push
add
lock
adc
lock
cmpsl
push
sbb
roll
stos
push
stc
out
lods
in
push
adc
mov
sub
sbb
ret
jp
dec
ss
int
mov
ja
dec
repz
into
add
push
mov
pop
cmpsb
mov
and
std
popa
mov
cs
mov
pop
cltd
pop
adc
push
addr16
dec
aas
leave
inc
mov
popf
orl
mov
xor
testb
and
push
ljmp
cs
and
dec
clc
ret
xlat
test
je
test
ljmp
add
sub
jmp
and
and
jle
mov
adc
push
sbb
jns
and
pop
adc
loopne
pop
push
jge
jne
xor
xchg
or
mov
movsb
cltd
add
or
adc
popa
push
jmp
sbb
addr16
push
aas
jne
dec
jnp
jns
xor
xchg
fcomp
mov
add
stos
fldlg2
outsb
in
or
xchg
mov
cwtl
fidivrs
or
sub
push
test
xor
out
sub
pop
loopne
je
sbb
xchg
aaa
sbb
cmp
data16
mov
dec
push
lea
push
pop
cwtl
push
adc
or
pop
add
lea
push
lret
push
or
lcall
add
adc
or
xchg
js
clc
fimuls
and
add
mov
pop
sbb
and
lock
push
aas
adc
fs
add
inc
aam
sbb
add
pop
arpl
xchg
hlt
jns
mov
mov
pushf
sbb
int3
insb
sarb
push
push
test
fmul
inc
scas
push
inc
loopne
sub
or
push
pop
cmp
xchg
pop
add
inc
inc
inc
or
sarb
mov
cmp
je
sarb
ja
cli
insl
dec
lods
adcl
clc
fimuls
sbb
sbb
jg
adc
dec
jne
arpl
pusha
mov
adc
jl
nop
or
int3
pusha
and
jo
pusha
pop
outsl
subl
inc
ljmp
inc
and
push
add
lods
push
nop
sbb
inc
or
pop
cmp
xchg
push
pop
into
adc
insb
jecxz
lock
js
in
lds
int3
clc
loopne
cmp
ds
jo
jmp
push
xchg
lret
sub
clc
aad
verr
sbb
in
ss
inc
adc
loopne
imul
enter
dec
fadd
xor
jp
cmp
ja
jecxz
movsb
fsubr
mov
pop
and
mov
test
push
inc
add
popa
mov
mov
sub
mov
jo
lret
fs
cmp
pop
clc
mov
je
inc
outsl
mov
popf
adc
enter
popf
stc
shlb
rolb
pusha
xor
mov
aam
sbb
fmuls
scas
adc
mov
cmp
out
jo
push
cli
or
mov
push
xchg
sahf
cmp
push
xchg
popa
cwtl
add
push
pusha
ret
insl
push
scas
cmp
fcoml
mov
mov
and
xchg
push
cmp
mov
movsb
jne
rolb
and
mov
inc
and
xchg
mov
push
inc
std
je
or
test
inc
sahf
xchg
cmpsb
jnp
daa
jae
add
lret
xor
pop
push
rolb
inc
or
test
or
aas
aam
outsb
adc
cmp
push
pop
lea
insb
mov
repnz
push
inc
push
adc
or
addr16
cs
push
add
push
or
pop
dec
lods
mov
mov
call
inc
dec
or
test
jp
jp
nop
lock
fsubrl
adc
push
in
addl
popa
in
stos
sbb
dec
lods
inc
cld
add
cmp
addr16
sub
imul
scas
mov
cmp
or
setl
or
xchg
pop
add
jmp
xchg
test
pop
sbb
push
sbb
xor
add
mov
addb
xorb
inc
data16
and
push
pop
sub
sbb
adc
dec
int
rcll
or
xor
cmpsl
xchg
decl
fldl
sbb
fsubrl
rdmsr
sarb
xor
fldl
sbbl
xorl
shr
and
or
adc
push
and
sbb
mov
xchg
xor
js
or
cwtl
rorb
xor
ss
dec
push
or
jo
push
movsb
push
ret
outsb
and
dec
xchg
fimuls
add
push
or
inc
andl
add
mov
stc
std
push
and
fbld
ficoml
ret
or
sub
sub
add
out
aaa
in
neg
sbb
push
cmp
ret
movl
xorl
or
sbb
pop
loop
cmpl
jo
mov
add
push
sti
or
into
mov
daa
adc
inc
inc
or
mov
insb
inc
data16
inc
push
cld
sub
dec
jnp
andl
sub
xor
rorb
and
mov
push
gs
mov
fdivrs
mov
sbb
lea
cmp
lods
and
fsubs
ss
push
inc
das
rcrl
add
fsubl
lods
fwait
or
and
pop
pop
pop
pop
jge
lea
pop
jb
or
mov
shr
fistpll
gs
adc
sbb
nop
imul
and
ds
jne
add
or
add
jle,pn
push
nop
dec
xor
pop
ret
sub
mov
rcll
push
rcll
push
es
loope
xor
pop
sbbl
jl
adc
pop
test
loop
dec
pop
mov
movsb
fdivrl
lods
push
test
push
mov
in
repnz
mov
ret
dec
cmp
xlat
sbb
push
or
popf
mov
adc
push
add
shr
pop
add
inc
dec
insb
dec
sbb
pop
dec
adc
pop
inc
xchg
xchg
mov
adc
inc
xchg
aam
sbb
cmp
add
jl
out
sbb
addl
push
repnz
pop
fisttps
cmp
mov
lcall
bound
mov
or
rcl
sub
ljmp
pop
or
mov
cmp
cmp
sub
dec
mov
imul
cmp
sbb
sbb
testb
arpl
push
inc
or
mov
jge
mov
lahf
add
dec
mov
dec
jl
loope
xor
cmp
jo
xchg
out
jl
inc
pop
data16
movsb
mov
sub
push
cmp
mov
fisubl
dec
lret
jl
xor
mov
sbb
test
push
sbb
addl
jp
jbe
out
ret
add
and
cmp
xor
addr16
popf
lret
mov
and
lods
add
sbb
sbb
push
push
or
jmp
rcrl
dec
pop
xor
stos
pop
fnsave
ret
filds
mov
jbe
mov
lods
cmp
jne
dec
stos
pop
orb
pop
mov
out
and
inc
xor
mov
cmp
pushf
push
das
loop
xchg
and
cmp
and
ret
cmpl
or
mov
nop
jmp
mov
sub
cwtl
mov
into
lods
ret
fcoms
and
pushw
pushf
xchg
inc
xlat
sahf
out
out
adc
aad
in
stos
add
test
cmpb
rcll
mov
inc
movsb
inc
push
jb
movsl
add
mov
pop
xor
aad
sbb
shll
adc
pop
cmpb
mov
jmp
and
add
int3
popf
and
adc
fistpl
fwait
jmp
nop
push
push
das
sbb
dec
mov
sbb
dec
and
negl
cwtl
shlb
jmp
fisubrl
scas
insl
sbb
clc
loop
je
mov
pop
push
mov
xchg
mov
dec
xor
inc
imul
add
test
lahf
mov
add
or
pop
xor
add
enter
xchg
cwtl
push
mov
sub
out
and
push
repnz
push
lods
push
addl
pop
enter
add
rolb
imul
je
loop
int3
cmp
inc
movsb
adc
jne
loope
cmpsb
xchg
add
cmpsl
ret
jno
adc
pushl
bound
or
xchg
sbb
out
ss
lock
push
add
xchg
xor
sbb
jle
clc
sti
test
and
jne
and
shlb
fdivl
sub
incb
lods
es
mov
push
mov
jp
data16
in
pushf
ljmp
add
pop
and
fcompl
xor
cmp
xchg
sbb
add
ret
mov
mov
mov
mov
or
jae
push
adc
lods
mov
add
lods
sbb
sub
test
imul
jbe
inc
ljmp
cmp
scas
shlb
rcrl
outsb
fstpl
dec
insb
add
add
xor
pop
ds
add
cmpsl
sub
mov
or
jge
adc
sbb
outsl
enter
mov
and
popf
add
jo
xchg
pop
xchg
data16
scas
sub
int3
and
bound
mov
push
mov
pop
add
subb
pop
and
sub
or
jbe,pt
loop
push
ficoms
imul
cld
cld
mov
ss
movb
inc
in
jle
shl
sbb
pop
adc
mov
insb
shr
inc
add
bswap
rcr
push
fmuls
cmp
dec
js
cmp
xchg
lock
rclb
popf
fwait
sahf
loope
sbb
stos
pusha
insb
std
stos
jbe
jg
decb
adc
xlat
jo
icebp
push
out
xor
mov
xchg
mov
push
js
mov
rclb
in
clc
push
jl
fisttpl
je
push
lock
push
pop
cmp
push
cmpsl
adc
inc
hlt
lret
push
dec
mov
or
lcall
push
mov
cmp
fucom
mov
je
lcall
mov
dec
sub
adc
int
lods
dec
push
add
inc
xor
xchg
mov
sbb
xor
imul
aaa
adcb
mov
push
xor
add
mov
or
stc
cld
jecxz
adc
push
sbb
out
movsl
addl
insb
xchg
out
sbb
loope
inc
push
jp
jg
call
lahf
cmp
xor
testb
adc
movb
cmp
sub
xchg
cmp
je
adc
cmp
sub
popl
mov
orb
xor
enter
add
dec
push
outsb
js
sbb
mov
pop
mov
lea
sbb
clc
mov
shll
repnz
inc
aaa
jbe
xchg
pop
nop
or
jno
dec
sub
mov
inc
jbe
ljmp
jmp
lock
dec
sub
or
xchg
adc
xchg
mov
xor
pop
push
aas
pop
or
mov
jo
addr16
pop
sub
aas
loope
pop
and
dec
pusha
call
add
inc
mov
cmp
ss
push
call
push
pop
sbb
mov
movsb
ja
rorb
call
dec
jno
mov
mov
pop
pop
aam
and
mov
shrb
mov
sub
lea
call
add
push
icebp
add
push
in
stos
hlt
mov
jo
and
adcl
and
mov
dec
roll
movsb
push
stos
popf
jle
or
test
sub
lea
jg
or
mov
mov
inc
mov
mov
sarl
lods
aam
out
pop
push
pop
repnz
nop
les
push
lock
in
loopne
pop
testl
data16
push
inc
xor
jl
fsubs
enter
mov
inc
or
dec
jge
sbb
or
mov
dec
dec
xchg
push
xchg
or
mov
pop
aaa
sbb
or
cmc
jle
jmp
or
dec
sbb
pusha
and
lret
cmp
mov
lahf
add
mov
cmp
xchg
shlb
outsb
lock
loopne
add
rolb
mov
cmpsl
mov
push
rorl
mov
push
jbe
inc
inc
filds
and
mov
dec
lret
mov
and
insl
jne
insb
es
in
mov
jo,pt
mov
push
enter
mov
push
jae
push
push
sbbl
imul
sbbl
sub
fs
cltd
pop
pop
push
push
cld
or
add
sub
xor
int3
and
cmpsb
mov
xchg
adc
mov
in
dec
test
mov
bound
adc
gs
inc
push
and
jg
testl
movsl
push
jae
pop
ret
cmpl
inc
imul
xor
push
cmpb
mov
ficompl
pop
dec
pop
lods
push
pop
lods
mov
lods
push
mov
mov
xchg
adc
enter
aaa
adc
xchg
cmp
mov
sti
xchg
cmp
sub
sbb
aaa
stc
push
push
call
pop
cltd
pop
pop
stos
sub
push
sbb
xor
daa
add
pop
in
rcll
or
push
xor
xchg
mov
inc
push
push
dec
mov
adc
or
fs
dec
add
cmpsb
jp
sbb
push
push
lahf
dec
les
jge
in
cmp
add
testb
dec
add
ret
testb
cmp
in
addb
test
pop
and
imul
jae
mov
out
pop
andl
and
fadds
out
aaa
mov
je
or
je
or
sub
xchg
adc
adc
rcrb
add
nop
cmp
or
add
test
sbb
and
jnp
jl
loope
mov
sti
sbb
pusha
push
adc
adc
xchg
xor
inc
xchg
fldenv
ret
jno
xchg
jo
sub
pusha
jbe
call
cmp
push
loopne
mov
insl
loope
pop
ret
and
jle
test
cmp
adc
je
rclb
fimull
ret
fs
int
nop
xorl
xchg
out
adc
pop
movsl
and
lea
add
in
movl
push
xor
mov
xor
inc
test
cld
dec
je
sub
add
movsb
add
push
adc
add
jo
xor
xor
stos
add
in
sub
sarl
or
push
adc
lds
inc
xchg
mov
pop
add
adc
in
jl
test
push
adc
test
jmp
cmp
dec
xchg
add
int3
sub
push
test
and
insb
cs
or
or
cmp
pusha
pop
sbb
int3
shll
int3
mov
sbb
mov
das
ret
adc
fdivrl
notl
popa
add
pop
mov
in
pushl
mov
and
push
and
inc
push
mov
push
add
mov
in
push
or
and
int3
push
push
shlb
loopne
fs
xor
loopne
inc
popf
push
cmp
fcomp
ret
sub
das
xor
push
push
inc
cmp
arpl
mov
mov
jecxz
or
pop
sub
cmp
jne
sbb
push
sbb
in
mov
add
xchg
fcompl
and
scas
shrb
dec
mov
adc
or
pop
sub
fwait
out
les
stc
push
mov
ret
or
orl
iret
and
sbb
xchg
stos
call
leave
jns
cmpsb
fs
ret
rorb
cmpsb
ret
push
xchg
fcoms
fdivrs
repz
sbb
nop
out
xor
fistl
sub
fisttpll
inc
dec
out
jns
and
mov
data16
es
or
mov
imul
fsub
inc
cmpsb
dec
arpl
cmp
aam
popa
and
pop
lcall
movsl
or
in
cmp
sub
loope
fidivrs
fcoms
pop
adcl
popf
push
ret
fs
sbb
and
mov
imul
xor
ret
sar
inc
rorb
xor
or
and
push
jno
fcmovbe
adc
sub
cwtl
push
adc
mov
adc
add
mov
cmp
cmpsl
jne
mov
mov
lock
movsb
jb
fisubl
mov
sbb
mov
js
sbb
in
add
pushf
inc
or
popa
push
std
sbb
adc
sbb
shl
mov
dec
jae
jo
mov
sbb
stc
jb
or
adc
mov
or
sar
dec
sub
hlt
jb
push
mov
dec
push
add
adc
loop
popa
dec
pop
mov
out
inc
arpl
les
xor
push
mov
cmp
addb
test
imul
movl
mov
mov
push
int3
adc
push
lahf
dec
mov
sub
nop
push
cmpsb
xchg
shrb
rolb
mov
cs
mov
fstpl
jnp
push
sbb
in
daa
inc
push
cs
dec
xchg
sbb
mov
push
sbb
mov
mov
in
inc
or
pop
pop
jle
jecxz
sbb
insb
inc
add
or
stos
jns
jle
pop
adc
adc
sub
stos
dec
and
and
fiadds
cmp
sbb
aas
scas
xor
and
xchg
add
aam
fmul
mov
adc
pushf
loope
and
pop
sub
cmp
pop
add
or
push
pop
arpl
xor
xor
xor
push
outsb
and
cmc
add
and
mulb
dec
pop
incl
push
fdivr
leave
mov
dec
decl
addr16
xor
jp
push
lret
inc
push
xchg
pushf
das
push
iret
fucomi
ret
gs
push
dec
and
sbb
into
pop
pop
and
adc
rolb
pop
ficomps
inc
cwtl
dec
xchg
push
decb
icebp
outsl
or
cmp
sbb
ja
neg
sbb
mov
add
ficoml
out
xchg
stc
jb
add
xchg
pusha
xchg
push
pop
push
cmp
movl
jl
iret
faddl
push
push
push
push
repz
pop
xchg
sbb
or
subb
mov
push
aam
jmp
jae
in
cwtl
movsb
sub
fadds
mov
loopne
in
jl
or
imul
jg
xchg
ret
or
adc
out
and
adc
lret
repz
sbb
cmp
xchg
in
add
dec
ljmp
rolb
out
or
cmp
aas
sub
add
jnp
push
mov
push
sbb
mov
int
sbb
test
imul
adc
das
push
aam
adc
in
jp
mov
inc
or
sub
test
das
sbb
call
je
or
sub
cwtl
mov
mov
insb
jae
mov
out
dec
mov
fildll
outsb
sarb
sbb
adc
pop
xchg
xor
push
data16
add
inc
in
mov
lods
jmp
add
cwtl
and
and
add
loope
adc
pop
mov
cmp
leave
xor
inc
cmpsl
icebp
cmp
imul
roll
mov
mov
xor
jge
push
xchg
mov
loope
sbb
shl
hlt
jle
push
push
sub
lahf
push
mov
inc
jne
outsb
rclb
cmp
push
dec
fildl
aam
cmpsb
icebp
add
pop
sbb
xor
push
and
mov
add
inc
mov
pop
loopne
test
shld
cmp
add
xor
cli
adc
fcomip
fcmovnu
or
sbb
stos
jle
add
sbb
jge
cmp
push
cmc
out
pop
fisubs
sbb
rorl
jnp
cltd
xchg
outsb
in
aaa
stos
sbb
mov
xchg
add
or
scas
mov
es
dec
les
mov
jo
pusha
fs
dec
pusha
jo
rolb
call
ljmp
adcb
and
dec
sub
xchg
pop
fs
je
cmp
insb
outsb
je
inc
adc
push
adc
jbe
lods
jg
in
dec
xchg
es
fwait
lret
lahf
add
sar
and
add
push
mov
mov
dec
jl
sti
mov
hlt
add
pop
je
or
push
cmp
push
pop
das
and
push
es
decl
mov
adc
rcl
mov
push
mov
lret
les
jge
jge
jmp
sbbb
cmpsb
jnp
bound
leave
pushl
sub
fs
adc
test
fidivrs
sbb
mov
pop
popa
push
pop
and
sub
lods
aas
sbb
add
cld
jecxz
mov
and
cltd
lock
pop
add
adc
lea
ja
mov
push
add
or
in
out
add
orb
sbb
not
fisttps
mov
push
jb
mov
cmp
fldl
outsb
addr16
jle
mov
adc
clc
sbb
mov
jl
incl
or
lods
movsl
and
xchg
testb
je
adc
mov
ror
gs
adcl
inc
popa
or
fisubl
sub
xchg
and
sbb
add
cmc
cmp
add
dec
jle
mov
lret
xchg
and
or
or
sbb
and
fs
lods
test
pop
mov
clc
add
lea
jg
or
xchg
add
test
dec
jle
mov
jmp
sbb
andb
push
sub
xchg
xchg
and
mov
adc
xchg
or
and
cmp
stos
in
xchg
cmp
xchg
lahf
xchg
mov
or
mov
jecxz
cmp
enter
enter
mov
lahf
xchg
fnstcw
fadds
int3
push
mov
xchg
in
xchg
cld
lods
mov
or
sahf
dec
enter
add
cmpb
hlt
mov
fwait
mov
orb
daa
test
sub
xchg
aas
adc
pop
in
decb
push
pcmpgtd
or
push
mov
aas
xchg
xor
popa
and
nop
cmpsb
mov
lahf
out
lcall
mov
cmp
out
mov
mov
stos
hlt
inc
jmp
fdivrl
cs
jo
ret
ja
sub
jne
push
add
rcl
xor
push
scas
add
out
aad
pop
adc
dec
add
or
sub
push
lret
push
shrb
pop
es
jmp
rorl
popf
test
inc
lds
mov
jbe
inc
mov
push
or
cld
shlb
cmpsb
pop
lods
add
mov
dec
pop
ja
adc
test
iret
fists
sub
mov
lcall
leave
cltd
add
xchg
pop
sti
dec
lods
in
daa
shrl
sarb
jge
jl
jne
rolb
mov
pop
jb
iret
lea
and
add
push
inc
or
inc
or
sahf
fstpl
dec
push
and
jae
inc
lret
jns
adc
push
inc
outsb
dec
jl
cmp
jae
loopne
mov
push
shl
pop
cmp
jne
jg
int3
sbb
cmp
dec
xchg
xchg
enter
mov
outsb
mov
ret
sbb
pop
in
aas
add
inc
jmp
push
ss
ret
or
sbb
cli
pop
push
jecxz
outsb
add
sbb
xor
gs
jl
sub
sbb
mov
add
adc
push
and
or
jge
adc
pop
ja
and
pop
add
and
pop
jmp
xor
pcmpgtb
sub
and
pop
sbb
hlt
subb
in
mov
test
xor
xchg
jecxz
xor
fisubrl
fucomi
adcb
pop
mov
mov
mov
dec
push
sub
xchg
andl
mov
xor
imul
hlt
xchg
cmp
nop
pop
fdivrl
xchg
cmp
setno
adc
ljmp
mov
cmp
popf
add
ja
rcll
dec
jmp
jg
mov
imul
dec
push
insb
call
imul
mov
std
dec
mov
jo
jns
call
jge
aam
ret
adc
imul
mov
jge
mov
push
test
mov
push
cmp
jbe
sar
rol
xor
leave
push
xor
inc
in
push
pop
lret
push
add
and
jae
xor
dec
mov
ds
add
pop
inc
mov
push
lock
lock
push
or
sbbb
dec
pop
sbb
mov
jne
repnz
cld
loope
push
and
push
and
lcall
loopne
xor
xor
or
pop
mov
jne
test
push
hlt
out
jae
aaa
push
cmp
jo
add
mov
out
push
inc
cmp
push
inc
lock
push
and
push
jg
xchg
cmc
lea
xlat
add
popf
aaa
jbe
mov
fisubl
inc
adc
jbe
push
push
sahf
in
push
subb
jg
sub
xor
pop
scas
and
mov
inc
scas
cmp
pusha
inc
sbb
sbb
add
xor
or
add
roll
aam
fmul
inc
add
inc
int
dec
incb
cmp
push
int
mov
add
in
inc
inc
es
add
or
and
inc
loopne
mov
add
jmp
or
bound
push
cmp
push
adc
sbb
jle
imul
push
sahf
adc
aas
push
jmp
sbb
outsb
test
xorb
xchg
gs
jg
cmc
xchg
add
fdivs
andl
mov
xorl
push
xchg
ds
mov
or
test
inc
movsl
dec
gs
ret
mov
movsl
or
or
leave
push
pop
add
jb
dec
push
jb
inc
out
jge
jo
dec
lea
mov
push
repz
in
test
push
adc
xor
add
or
imul
mov
xor
add
loop,pt
mov
adc
sub
mov
lret
pop
loope
or
cltd
cmp
push
adc
rcll
dec
aas
adc
sbb
sbb
xchg
pop
gs
imul
inc
imul
push
pop
push
sbb
lods
and
and
mov
cli
xlat
and
add
jbe
in
push
pop
push
out
test
cmpb
scas
add
mov
add
sahf
sub
lock
in
rclb
in
xchg
iret
and
cmp
mov
add
lahf
and
and
sbb
or
add
and
xchg
fcomps
mov
xor
inc
lods
mov
push
jmp
pop
sbb
adc
add
inc
mov
add
xor
pop
mov
sub
shll
pop
leave
add
add
rclb
sbb
orb
add
jmp
sbb
loopne
cld
daa
jns
popa
sub
dec
dec
pusha
dec
adc
in
insl
call
cmp
or
adcb
insl
lea
loope
test
sub
mov
in
xchg
cwtl
pusha
cld
push
adc
add
in
sub
lret
push
pop
jg
addb
shll
add
mov
mov
andps
sbb
rcrl
cwtl
add
dec
cmp
jl
js
dec
sub
je
imul
mov
add
add
mov
dec
int3
and
jo
insb
std
ja
ds
push
clc
sarl
bound
ljmp
cld
lock
call
stos
cld
sub
mov
mov
sahf
insb
sub
add
insl
adc
inc
and
sbb
sti
inc
ja
pop
add
push
push
cmpsl
push
cmp
enter
ljmp
mov
aaa
test
lea
cmp
ficoms
adc
scas
jmp
add
or
inc
xor
clc
aaa
mov
imul
mov
clc
sbb
push
jb
je
xchg
ja
mov
or
imul
enter
lods
negb
inc
pop
cmp
leave
addr16
xchg
mov
or
je
xor
pop
dec
inc
movsl
cmp
push
pop
push
mov
inc
xchg
sti
jl
test
pop
icebp
int3
jg
cmp
adc
pop
sbb
ds
mov
sub
mov
jb
add
mov
ss
mov
push
mov
faddl
mov
shr
mov
rcrl
push
aas
push
sbb
xchg
ret
in
cmp
add
push
shll
add
xchg
adcb
jl
jle
or
sahf
sub
lret
cli
das
das
mov
sub
sub
xor
xchg
xchg
xchg
sub
cmp
into
lret
dec
or
dec
pop
cmp
in
cld
and
add
or
jns
sbb
add
jge
sbb
add
inc
jmp
cld
lods
push
inc
movsl
sub
leave
dec
push
sub
inc
add
es
imul
pop
je
jo
stos
or
sub
xlat
xor
push
lods
ficoms
mov
jbe
je
mov
test
adc
ss
mov
push
inc
rclb
into
mov
push
icebp
pop
or
push
fsubrp
mov
adc
popa
push
mov
xor
pop
and
xchg
xchg
and
xor
nop
jae
or
inc
inc
mulb
lods
ss
inc
sbb
sbb
cs
mov
cmpb
mov
mov
push
ret
sub
sub
cld
mov
sub
js
popa
cmp
daa
xchg
out
aad
mov
push
ret
sbb
repnz
je
cli
add
ja
cmp
cmp
lods
movsl
test
xchg
push
and
add
adc
mov
dec
cmp
or
rclb
xchg
push
xor
int
sub
mov
jne
pop
cmp
sub
lret
sub
out
inc
movsl
inc
ret
cwtl
pop
lea
mov
adc
rep
bound
in
out
or
adc
jmp
sub
jae
or
outsl
add
sub
lea
mov
jl
cmpb
jne
dec
imul
inc
push
push
mov
jae
xlat
push
and
push
mov
test
loopne
adc
push
push
push
insb
lahf
pop
data16
inc
sub
push
popa
sub
ret
int
aad
outsl
push
pop
xor
cmp
fsts
testb
jbe
xchg
add
inc
xchg
pop
mov
inc
ret
or
cmp
dec
les
jne
mov
xor
test
and
hlt
imul
xor
mov
push
sub
fildll
mov
xchg
add
adc
pushf
lock
hlt
add
inc
jnp
mov
mov
or
push
inc
add
dec
push
movlps
xchg
or
sarl
loopne
fmull
cld
sub
mov
sub
or
das
dec
pop
xor
xor
dec
xor
xchg
pop
mov
sub
clc
add
test
jge
into
bt
lret
loop
mov
jnp
pop
adc
push
push
inc
and
xchg
sti
stos
mov
or
push
cmp
or
add
push
fiaddl
test
add
push
xchg
mov
push
ficoms
dec
inc
mov
es
pop
pop
leave
icebp
fdivrl
and
lods
stos
adc
jno
incl
sub
xor
adc
mov
cwtl
push
in
cs
xlat
mov
adc
arpl
lods
repz
and
add
or
lock
inc
pop
inc
xor
xor
cmp
loopne
push
sbb
and
sarb
dec
jne
andb
mov
lods
add
loopne
bound
imul
sbb
or
pop
mov
jo
cmp
outsl
push
aad
pop
xor
mov
inc
sbb
jge
je
jmp
inc
xor
testl
and
pop
cltd
in
unpcklps
jp
mov
aad
mov
dec
push
icebp
jl
ret
and
sbb
push
sub
mov
mov
pop
mov
mov
sub
bound
xor
call
in
mov
xchg
push
lea
rolb
pop
mov
dec
sub
lea
fbld
jo
jnp
inc
sbb
adc
int3
adc
add
or
shrb
inc
xchg
faddl
in
mov
mov
testb
push
push
jb
jbe
xadd
ds
dec
sub
xchg
or
cmp
inc
sbbb
insb
loope
or
add
insl
push
adc
rcrl
xor
je
push
pop
cmp
add
popa
loopne
dec
adc
or
or
add
hlt
sbb
dec
or
es
adc
push
lret
sar
cmp
jbe
or
add
jp
cmp
jmp
ret
shll
dec
inc
cli
pusha
in
inc
mov
push
ret
pop
sub
jecxz
loopne
mov
push
cmc
sbb
repz
mov
add
mov
and
js
movsl
pop
lea
test
xchg
rolb
mulb
js
fiadds
add
rcrb
lock
lea
mov
mov
lock
pop
dec
lods
daa
sbb
movsl
jbe
inc
mov
inc
cmp
lahf
lods
sbb
in
sub
xchg
lea
sarb
scas
mov
and
push
add
jns
dec
or
mov
push
pop
inc
dec
nop
rcrl
push
inc
push
aas
cmp
sub
mov
inc
add
mov
sbb
mov
pusha
loopne
push
orb
loopne
dec
call
and
inc
dec
xor
xchg
or
adc
imulb
pop
aad
enter
arpl
dec
jecxz
jp
add
jne
sub
xchg
fisttpll
jp
cmp
shl
nop
add
cmp
jo
dec
hlt
jb
pushl
mov
pop
push
clc
add
or
test
jl
inc
adcb
stos
jmp
aam
rorb
addb
icebp
xchg
loop,pt
popa
mov
mov
push
pop
mov
xchg
test
inc
mull
mov
out
mov
dec
repnz
sub
out
xor
lods
add
adc
inc
and
movsl
dec
jmp
les
xor
sub
lock
xchg
and
add
sarl
jns
daa
mov
jno
cld
dec
scas
xchg
sbb
subl
movsl
sti
sub
mov
daa
or
jmp
pop
dec
sub
cmp
or
insl
cmp
push
and
daa
cmp
or
arpl
add
sbb
dec
or
adc
outsb
sub
or
fldt
shll
inc
dec
or
mov
stc
mov
jmp
stos
lods
sbb
and
add
mov
sti
jecxz
jb
pop
cmp
addb
or
or
xchg
add
sbb
vmread
xor
add
xchg
out
test
test
pop
or
cmpsb
dec
cmp
lcall
add
rorb
lret
movsb
shll
pop
inc
xchg
sub
iret
jl
push
cmp
stos
push
mov
and
test
inc
add
nop
mov
add
nop
and
in
add
mov
add
nop
add
nop
fsubrl
jb
add
add
daa
xor
jb
add
pusha
enter
sub
jb
or
jmp
push
pusha
cmp
pop
push
jb
inc
push
and
das
xor
or
xor
add
mov
pop
dec
sub
or
lea
sub
dec
push
div
loope
cmp
or
pusha
push
or
push
add
repnz
out
repnz
or
adc
mov
sbb
adc
rclb
push
mov
data16
jmp
or
adc
inc
adc
data16
aaa
lcall
xchg
and
and
iret
jg
pop
pop
adc
lea
add
mov
or
sub
mov
mov
pop
push
pop
inc
mov
jg
push
inc
ret
es
push
push
or
scas
cmp
xor
popa
dec
mov
add
fcompl
lret
inc
jmp
cmpb
or
add
jle
adc
fmuls
mov
and
and
icebp
push
inc
fndisi(8087
fsts
cmp
mov
pushf
adc
inc
icebp
add
andl
sbb
adc
push
js
sub
repnz
pop
dec
mov
cwtl
jne
fdivl
repnz
stos
pushf
xor
loopne
icebp
push
and
add
clc
or
leave
xchg
or
imul
aam
test
xor
rorl
push
pop
shrl
lods
cltd
or
lock
push
cltd
adc
push
jae
es
clc
add
pop
add
adc
xchg
mov
push
testl
xor
es
and
push
js
imul
mov
lods
mov
pop
xor
mov
inc
shl
sbb
test
cmp
jne
and
mov
push
je
or
jb
daa
add
pop
orb
pop
test
mov
xor
dec
push
push
pop
sbb
or
jl
adc
mov
and
cmp
mov
add
sbb
pop
add
pop
daa
xor
loop
test
or
or
add
les
xchg
inc
cmc
outsb
shl
rcll
adc
lock
add
loope
rolb
lock
jecxz
mov
push
push
mov
cmp
jg
imul
pop
not
arpl
rcl
jle
inc
loope
sub
jae
wrmsr
addb
push
movsb
mov
movsb
cltd
pop
adc
cmp
call
js
cmp
mov
fwait
push
mov
rep
mov
or
jnp
or
add
mov
mov
cwtl
push
mov
cmp
pandn
dec
cmp
jmp
add
sbbl
loop
push
mov
repnz
push
xor
push
fisttpl
or
in
and
iret
xchg
fsubrl
jo
mov
or
sbb
lret
pop
or
mov
push
roll
pop
inc
adc
testl
jnp
call
shlb
jle
push
sti
jno
adc
push
pop
pop
cltd
movsb
xor
adc
adc
inc
push
push
sbb
xor
push
cmpsb
cmp
and
stos
inc
out
sbb
loope
jnp
push
mov
jge
out
add
repz
std
and
or
sub
addr16
xchg
or
cmpb
dec
cmpsb
in
out
rcll
push
jge
lret
mov
cmp
pop
sbb
and
lock
lahf
xor
sbb
jns
sbb
jo
or
mov
pusha
out
push
or
call
imul
mov
cmp
jl
cmp
jle
mov
popa
push
jp
or
pop
cmp
test
hlt
sbb
mov
mov
jge
mov
jns
fcompl
sbb
xor
je
cmp
je
test
test
and
jo
add
and
sbb
inc
add
sbb
loop
testl
xchg
push
inc
mov
scas
test
adc
ret
mov
or
jl
verw
mov
push
rolb
jl
in
inc
or
in
add
imul
mov
xor
rcr
adc
in
lret
add
mov
js
test
lock
or
mov
dec
and
rorb
mov
bound
outsl
incb
dec
or
es
mov
aaa
dec
mov
dec
inc
rol
test
inc
es
or
adc
push
cmpb
xor
sub
mov
into
loopne
mov
fisubrs
in
dec
scas
mov
mov
ret
inc
sub
push
push
pop
or
scas
and
pop
js
jnp
push
or
aaa
push
add
loop
inc
les
add
mov
pop
popa
jge
xorl
sbb
xchg
cld
xor
dec
push
mov
shlb
or
pop
or
cmp
pop
negb
sbb
or
in
cs
jo
sub
pop
jl
pop
in
cmpsl
push
or
pushf
inc
xchg
mov
movsb
shr
mov
popf
out
xor
das
adc
sub
sbb
inc
push
xor
bound
pop
adc
jnp
pop
or
push
pop
pop
and
pusha
sbb
fs
jge
js
and
cmp
lea
cmc
mov
mov
lea
sub
sub
xor
cmp
sub
icebp
dec
in
addb
sarb
push
out
inc
pop
inc
add
or
inc
insb
adc
loopne
and
jo
or
xchg
in
push
adc
push
movl
cld
je
or
in
push
dec
adc
sbb
adc
add
sub
jno
push
inc
pop
test
fstl
mov
sub
push
sub
jne
nop
pop
rclb
inc
and
ret
sbbb
inc
jle
fnsave
and
or
sbb
outsl
xchg
push
scas
jae
pop
rol
sbb
flds
mov
and
and
dec
orb
andl
mov
outsl
por
pop
enter
and
add
inc
inc
mov
and
add
fwait
adc
sub
sub
mov
jmp
inc
sbb
jmp
gs
aad
rcrb
mov
jne
push
adc
mov
jo
nop
jo
dec
or
mov
xor
or
cld
stos
das
or
xchg
jge
mov
js
or
or
fdivl
push
mov
je
cmp
inc
or
bound
push
stos
pop
pop
negb
push
mov
loopne
adc
or
add
test
fcompl
adc
xchg
fsubrl
or
negb
add
sti
cmc
jae
or
mov
clc
add
out
and
daa
je
cmp
in
adc
jg
pop
push
push
add
enter
movsb
cs
inc
jg
adc
cmp
fsts
jne
test
mov
and
fs
inc
shlb
pop
dec
add
movhlps
jne
and
rorb
leave
in
mov
mov
mov
sub
test
push
repnz
jmp
xchg
jne
sub
jne
cwtl
bound
xor
and
cmp
aaa
shl
or
imul
fcom
adc
xchg
jnp
add
inc
xchg
test
es
sbb
inc
xor
mov
mov
jno
aam
mov
or
loopne
inc
and
add
xchg
mov
cwtl
cmp
sbb
leave
mov
pop
test
nop
test
push
push
inc
adc
pop
rclb
in
fdivrs
ds
jo
mov
inc
jno
inc
dec
repz
lahf
cld
push
enter
fildll
jle
into
push
mov
or
pop
add
cltd
sbb
sbb
aam
sbb
and
adc
inc
test
sti
push
and
mov
inc
pop
add
cmpsl
push
add
push
andl
pushl
rol
pop
push
mov
jl
dec
jno
xchg
dec
push
hlt
jg
mov
sub
and
and
or
push
xor
sbb
inc
loope
cwtl
push
xchg
pshufw
mov
loope
xor
mov
lret
sub
or
rclb
decb
push
ret
in
jg
dec
adc
mov
cmp
mov
test
add
or
iret
arpl
and
in
push
mov
rorb
or
mov
inc
loopne
push
or
jns
mov
mov
pop
push
push
dec
int
jmp
add
mov
cmc
add
je
loopne
xchg
inc
push
and
xchg
and
add
push
inc
inc
adc
mov
push
ja
mov
lcall
and
xor
mov
and
push
sub
jmp
adc
fcomps
mov
xor
add
pop
add
daa
push
subb
outsb
lret
mov
adc
pop
gs
lea
nop
ret
jge
adc
and
push
xchg
or
mov
push
push
push
adc
nop
push
ja
fst
out
jmp
in
aad
pop
cli
jg
sbb
or
push
cmp
pushl
push
adc
dec
sahf
lret
sbb
push
inc
sbb
inc
or
div
cmp
cmp
clc
xor
xor
sub
pop
es
add
dec
out
inc
xchg
and
in
or
dec
movl
pusha
test
mull
mov
add
push
or
sub
push
mov
mov
je
inc
push
pop
je
fldl
jne
cmp
and
in
sub
push
cmp
sahf
filds
adc
jne
push
divb
or
jne
or
jne
or
pop
sbb
out
mov
fstpl
andl
or
and
jle
stos
dec
mov
popa
jge
je
and
popa
push
inc
inc
fidivrs
jp
push
sub
jnp
or
aam
arpl
test
lea
or
jnp
fstl
jecxz
fsubs
into
enter
push
outsb
mov
xlat
addb
cld
xor
fwait
mov
xchg
negb
add
inc
jg
or
pop
dec
test
and
cwtl
add
dec
call
sbb
aam
fmull
jbe
fnstsw
push
mov
push
adc
jp
rcrb
mov
mov
les
emms
sub
mov
movsl
or
lcall
outsb
fisubs
and
and
and
dec
sub
insl
add
popw
inc
imul
outsb
ljmp
or
cwtl
pop
xchg
fcoms
pushf
test
sahf
sub
aam
mov
shlb
or
movsl
ficoms
and
into
sbb
nop
pop
cmp
fisubrl
push
mov
mov
adc
pop
push
add
leave
test
test
imul
fadds
mov
cmp
fmuls
sbb
fwait
in
fmull
int3
adc
cmp
in
cltd
lock
add
out
inc
ds
ss
repz
mov
sbb
test
pop
xchg
lds
lcall
lret
sub
adc
push
mov
push
adc
mov
mov
int3
test
pusha
xor
or
inc
lods
movsb
push
lea
push
mov
repnz
and
push
arpl
xor
or
jno
add
fadds
add
int3
shrb
xor
cmp
pop
sti
add
jo
dec
mov
and
xor
rorb
sub
sbb
fmuls
bound
and
jo
loopne
fadd
sub
paddusw
imul
jae
xor
stos
adc
in
inc
pop
ficoml
out
rclb
int3
daa
shlb
and
adc
xor
dec
shrb
and
pusha
add
xor
pop
inc
cmp
cmpsb
addr16
xor
dec
inc
add
mov
lock
loope
inc
mov
cmpsl
test
and
jg
add
int3
lret
push
jecxz
mov
push
and
ret
cli
or
icebp
mov
shlb
mov
mov
lcall
sub
mov
or
add
sub
cmpsb
jmp
idivl
adc
jae
sub
cmp
add
add
imul
je
dec
xchg
movsb
in
loopne
xchg
sbb
imul
enter
add
and
add
add
fdivrs
push
cs
or
sgdtl
and
pandn
int3
sbb
test
push
push
adcb
mov
xor
pusha
mov
xchg
push
pusha
int
push
jns
leave
adc
loop
xchg
addr16
lcall
fnstcw
push
push
inc
imul
pusha
dec
pop
test
inc
sbb
cmp
xchg
insb
rclb
sub
push
fucomi
mov
sbb
nop
cmp
cmpl
lret
ljmp
pop
or
xor
hlt
sahf
and
popa
add
xor
aaa
pop
fimuls
or
icebp
out
fucomp
aam
fimull
out
out
aad
sub
and
popf
insl
sbb
hlt
mov
arpl
ss
jmp
xchg
clc
push
dec
mov
int
clc
inc
add
push
loope
mov
aad
push
sbb
xchg
sbb
mov
loopne
and
sbb
shlb
cwtl
dec
out
cmp
mov
jle
push
adc
sub
push
inc
ljmp
pop
iret
sbb
inc
dec
adcl
jg
in
in
or
pop
sub
popf
pop
jmp
add
push
xor
pop
sub
popf
cmp
gs
add
sbb
inc
stos
adc
sbbl
pusha
and
cmp
pop
movsl
mov
ja
pop
mov
fmulp
loope
sarb
enter
adc
fmuls
fcmovnbe
cltd
mov
test
loope
js,pn
or
pop
add
pop
les
add
addl
aam
stos
dec
cmp
push
pop
push
mov
xchg
push
jge
xor
add
jo
mov
outsb
or
outsl
imul
lea
mov
inc
sti
or
or
and
out
add
xor
cmpsb
outsb
dec
clc
sar
cmpb
inc
jbe
push
inc
ret
jo
mov
pushf
ror
and
or
js
cmc
sub
sub
aad
lds
adc
sbb
and
or
fs
xor
mov
push
mov
pop
mov
inc
das
push
lahf
adc
ja
mov
fs
stos
inc
lods
fucomp
call
xchg
mov
ja
mov
out
inc
and
xchg
jg
lods
inc
xor
inc
popl
andl
movsl
or
mov
popf
cltd
scas
add
add
add
lds
push
jnp
sub
add
or
inc
sub
stos
aad
fisubrl
popf
and
sahf
sbb
adc
sbb
xor
insl
push
subl
push
movsl
adc
cmpsb
push
mov
add
shlb
call
mov
ret
xchg
mov
ret
mov
leave
setge
les
pop
adc
sub
nop
mov
adc
or
loop
xor
cmp
lock
lock
jb
and
frndint
or
les
ds
and
rcrl
mov
mov
mov
mov
lret
bswap
mov
sbb
add
scas
jge
mov
sbb
add
cs
pop
iret
cs
push
mov
push
add
add
push
jle
sbb
popa
icebp
sbb
pop
imul
cwtl
add
add
fdivs
pop
adc
pusha
leave
pop
dec
pop
add
movsl
adc
dec
sbb
sub
cmp
adc
adc
xchg
cmp
sbb
flds
mov
jecxz
loopne
loopne
dec
mov
xor
test
iret
rclb
js
rcll
rolb
rcr
clc
cmp
xor
test
sti
pushl
cmpsl
leave
mov
mov
call
mov
sbb
mov
add
lods
jecxz
and
inc
out
pop
loop
call
in
lock
sarb
cmc
pusha
ficompl
and
mov
add
mov
mov
test
xor
int
lahf
jbe
lock
dec
add
ret
cs
adc
add
pop
adc
jne
adc
lea
xlat
mov
adc
fldl
and
sbb
xor
sbb
sub
iret
xor
jne
imul
fwait
pop
xor
dec
or
lea
aam
aas
test
dec
push
and
and
adc
lods
jg
mov
jo
push
inc
pusha
xchg
jnp
iret
js
pop
push
icebp
call
sbb
push
and
mov
push
dec
stos
sbb
call
push
mov
cwtl
adc
jp
adc
add
fidivl
xor
mov
test
sub
mov
mov
add
int
add
lret
inc
xor
xchg
rorb
pop
rcrb
dec
jae
sub
clc
push
into
xor
adc
and
jo
test
dec
sbb
adc
pop
add
rol
add
popa
add
pop
sti
xor
scas
aad
add
pop
mov
ret
shrl
push
cmpb
negl
dec
leave
repz
into
sub
add
or
push
or
rcrb
sub
dec
inc
push
add
xchg
addr16
push
jmp
mov
push
stc
sub
sub
inc
insb
gs
mov
mov
jns
in
or
gs
imul
inc
sbb
clc
or
pushl
inc
mov
dec
push
test
fwait
cltd
jo
nop
pop
test
addb
call
push
sbb
add
dec
inc
add
push
repz
dec
add
shlb
hlt
stos
push
add
insl
pop
test
add
sub
sahf
mov
in
push
test
loopne
stos
test
pusha
inc
push
or
adc
out
es
pop
xchg
addr16
push
or
test
scas
repnz
mov
dec
nop
push
sahf
xorl
xchg
out
xchg
inc
pop
xor
pusha
pop
xchg
sbbb
es
or
sahf
xchg
pop
enter
nop
sub
imull
and
sub
movsb
mov
add
xchg
mov
push
adc
cmp
dec
add
and
test
xchg
mov
mov
or
lret
movsb
pop
shlb
mov
and
cwtl
clc
lcall
sbbl
xchg
lcall
sub
dec
add
adc
inc
sbb
and
orl
sbb
enter
xor
es
sub
inc
popa
add
push
int3
push
or
in
pop
jae
mov
jmp
mov
pop
or
int
aaa
and
popa
int
popa
and
pop
dec
icebp
je
dec
je
data16
insl
and
test
movsb
cmp
sub
push
push
sbb
stos
adc
inc
add
xorl
and
cwtl
sahf
flds
and
push
sub
xor
pushf
cmp
test
and
and
add
daa
dec
scas
and
outsl
inc
or
inc
or
pop
addb
cli
imulb
push
sti
gs
and
wrmsr
xlat
push
mov
mov
popa
imul
xor
cmp
fistpll
mov
bound
inc
push
or
daa
jb
xchg
cmp
adcb
sbb
sub
pop
mov
jo
mov
pusha
push
cmp
outsb
sub
mov
xor
scas
jge
pushf
push
and
testb
lea
inc
mov
or
jecxz
and
sub
pop
popf
out
call
in
addr16
iret
dec
pop
cmpl
add
pop
jge
pusha
add
adc
push
das
std
inc
adc
sahf
or
cmp
or
ds
add
mov
out
dec
sbb
imul
sbb
loopne
dec
xor
mov
test
sbb
popa
ficoml
push
and
dec
ljmp
ret
cld
mov
add
testb
cs
rcll
std
and
jmp
sti
cmc
or
or
push
sbb
pushf
adcl
dec
lcall
shl
jne
mov
pop
sbb
test
nop
push
fistl
push
add
or
loopne
imul
or
push
dec
lock
inc
push
add
mov
jmp
out
test
adc
add
adc
dec
ja
cmp
mov
dec
add
sub
push
pusha
loop
push
push
hlt
or
pop
jb
add
mov
js
mov
stos
jno
mov
and
xor
pop
repnz
sbb
cld
std
mov
push
test
mov
imul
xchg
xor
xlat
test
or
jl
xchg
mov
add
orb
pop
imul
xor
rclb
lret
hlt
imul
jno
lock
adc
sub
repz
mov
sti
in
bound
or
and
mov
xchg
repz
cmp
jae
imul
shlb
mov
movb
pop
jp
inc
arpl
je
push
sbb
xchg
or
sarb
fs
jl
add
and
add
movl
pusha
inc
jae
or
push
cmp
dec
les
jmp
shll
testl
sbb
pop
cld
popa
ret
sub
add
rol
or
roll
jnp
cmc
in
xor
adc
jbe
inc
cmp
js
inc
ja
mov
xor
lret
or
stos
sbb
es
test
test
iret
stc
mov
push
shlb
or
inc
mov
add
inc
mov
movswl
mov
and
cmpsb
fisubrs
cmp
inc
add
adcl
add
addl
xchg
push
loopne
daa
fnsave
jne
jmp
mov
insb
js
jnp
insb
cmp
jmp
or
jns
jmp
sbb
pop
push
sbb
inc
stos
mov
cmp
clc
std
pop
inc
pushf
inc
push
subl
in
xchg
js
cmp
je
not
fs
loopne
jl
dec
ret
lret
xchg
jb
repnz
mov
cld
push
jge
sbb
adc
sub
cmp
addr16
cmp
mov
das
addr16
sub
inc
or
xchg
es
inc
or
iret
pop
push
popa
loop
xchg
pop
imul
mov
fwait
push
lcall
mov
jp
sub
shlb
lods
push
xor
dec
sub
mov
clc
popa
hlt
fstpl
fldl
add
inc
je
and
and
pop
xchg
push
test
sbb
add
les
stc
fldl
subl
aas
and
cmp
sbb
sbb
fsubrl
push
dec
pusha
daa
popa
xor
push
fnstcw
cmp
fbstp
cld
and
pop
fsub
pop
fsubrp
and
dec
stos
jmp
icebp
cs
xor
into
mov
mov
add
test
adc
mov
shl
and
add
push
rclb
xchg
sub
and
add
pop
mov
int3
xor
je
add
add
xor
adc
aaa
stos
je
fidivs
dec
adc
push
push
jbe
repz
pop
inc
cmp
iret
out
xchg
jmp
push
pop
jmp
push
mov
sbb
xor
fcomps
mov
push
stc
out
cmpsl
xchg
or
pop
mov
push
push
movsb
addr16
lcall
pop
dec
xor
orps
sbb
xor
adc
jle
pop
imull
enter
pop
and
adc
push
mov
aam
lret
push
sub
mov
lret
fisttpl
movsb
xchg
or
cmp
lea
jg
mov
sbb
into
xor
dec
pop
sbb
add
sbb
mov
or
push
pushf
rorl
push
mov
and
int3
aas
adc
in
lea
loopne
ficoml
adc
xchg
addr16
sti
adc
xor
mov
jmp
mov
push
adcb
push
rol
inc
dec
sbb
mov
nop
and
or
pushf
popa
xorl
or
add
mov
push
cmp
les
mov
sbb
in
xchg
sbb
or
pop
jns
push
push
push
ja
sbb
into
push
cmp
sahf
xor
sbb
fs
ss
addr16
jne
or
andl
xchg
mov
pushf
xchg
adc
mov
cmp
rclb
cltd
aam
insb
and
mov
push
add
aas
cmpsl
add
mov
mov
or
add
pop
sub
sbb
outsb
or
sub
enter
lock
push
enter
fs
je
je
inc
sub
inc
mov
mov
bound
mov
cmpsb
push
add
loope
add
shrb
sub
nop
in
sbb
pop
sub
cmp
repz
dec
pop
push
iret
repz
adcb
out
ds
inc
jns
out
push
pop
insl
jl
out
sahf
out
test
ret
ror
sarl
repnz
iret
repz
push
pop
outsb
mov
lock
ljmp
sbb
or
add
jbe
aas
sub
lock
test
bound
clc
adc
mov
rcl
cmc
or
mov
dec
stos
xor
pop
lods
sbb
adc
cli
mov
ds
add
pop
adc
jne
js
fidivrl
loope
jp
add
rolb
and
ss
ljmp
mov
ss
pushf
dec
dec
out
sbb
adc
orl
jecxz
rclb
lcall
pop
aaa
mov
test
rcll
push
xor
xchg
mov
pop
cmp
sbb
jp
arpl
push
orl
adc
sar
push
sub
dec
mov
or
lds
int3
mov
gs
mov
adc
dec
cmp
sbb
imul
add
mov
adc
stos
pusha
aam
jmp
leave
xchg
sbb
add
pop
and
cmpb
add
inc
and
push
aad
nop
xor
in
call
sbb
jle
leave
daa
and
jae
add
jl
add
sub
sub
daa
jnp
jecxz
push
inc
push
inc
add
mov
xchg
loopne
pop
loopne
and
sbb
jo
movsl
in
add
cmp
aaa
add
adc
xchg
add
add
leave
in
imul
in
ret
add
jl
sbb
or
or
mov
vaddss
inc
pop
movsl
lock
iret
rcll
jne
arpl
adc
lods
sbb
push
add
cmp
cltd
sub
push
in
add
pop
mov
sub
jb
cld
or
iret
out
jb
iret
out
aaa
clc
xor
inc
pop
sub
dec
sahf
iret
xor
add
mov
adc
rolb
ja
loopne
pop
pop
or
add
push
aas
mov
pop
leave
scas
aaa
push
daa
add
loope
mov
lock
sub
nop
add
das
or
or
sub
mov
add
mov
sub
cmp
ret
add
sbb
pop
mov
testb
dec
shld
dec
mov
in
pop
add
adc
sbb
call
test
les
adc
sbb
sti
nop
xor
sbb
add
inc
ds
xchg
leave
lock
push
vcvtps2dq
mov
ret
scas
mov
shr
xchg
mov
mov
movsb
mov
fidivrl
test
cmpsb
mov
adc
adc
cmpsl
jo
leave
outsl
dec
sub
mov
ret
sbb
adc
cmp
mov
pusha
aaa
cltd
or
add
pushf
adc
xor
into
pop
mov
mov
inc
or
je
fstl
hlt
add
fsubl
or
fidivl
or
std
or
les
addb
add
aam
sbb
sbb
adc
push
ret
pusha
lods
cmpsl
xchg
adc
cmpsl
jae
adc
xchg
add
stos
push
je
insb
mov
jo
and
add
adc
jb
jmp
add
mov
cmp
pop
dec
xchg
add
add
mov
pop
enter
add
or
lods
rolb
stos
gs
pop
pop
daa
sbb
cltd
std
adc
in
sbb
jmp
cmc
or
pop
or
fwait
xchg
test
or
sub
cmp
stos
addr16
ret
push
sub
jnp
inc
orb
cmpb
shll
cmp
add
cs
lret
add
mov
push
repnz
mov
add
xchg
or
add
mov
or
push
sbb
and
and
or
fistl
pop
dec
xor
lods
lea
sub
dec
mov
lea
add
ret
push
leave
out
aaa
test
xchg
inc
lds
push
xchg
push
int3
xor
movsb
sub
or
gs
add
in
dec
jle
or
loope
mov
add
adc
sub
and
push
jg
or
lds
xchg
sub
dec
lds
jge
rol
adc
push
mov
orb
sub
and
jp
adc
aaa
inc
sub
jecxz
pop
add
sub
mov
xchg
adc
das
add
add
add
add
xchg
lcall
xor
mov
or
lods
jmp
jns
inc
scas
xchg
mov
add
jnp
push
dec
push
mov
in
pop
sub
cmp
jg
pop
add
pop
sub
stos
pop
push
popl
rcll
cmp
adc
dec
dec
or
mov
stos
xor
inc
cs
aaa
adc
adc
xchg
mov
cmp
cmpb
add
or
jmp
add
or
mov
fs
dec
dec
je
cmp
adc
jns
repnz
gs
mov
add
fs
adc
push
and
lock
cmp
mov
andb
aas
fcomps
jae
je
test
fdivrs
adc
dec
sbb
mov
mov
add
mov
pop
or
ljmp
sbb
rcl
cmpl
or
popf
sub
mov
int
movsl
test
add
add
push
push
push
inc
fsubrl
arpl
jle
pushf
fildl
sbb
pop
mov
insb
jl
add
repnz
or
and
jp
add
andl
sahf
dec
clc
subb
xor
and
lret
push
je
xor
mov
sbb
adc
pop
push
xchg
mov
jns
pop
outsb
jecxz
xor
ss
pop
mov
notb
imul
sub
ljmp
mov
jne
jo
lock
lock
cmpxchg
jge
popf
dec
pusha
push
test
adc
sarb
imul
test
loopne
inc
mov
mov
lea
xchg
mov
pop
loopne
and
dec
xchg
mov
xor
adc
aad
push
push
pop
add
int
js
mov
enter
jmp
loopne
fistl
or
pop
sbb
and
outsl
nop
inc
fwait
sub
add
insb
pop
xor
mov
push
xchg
lock
iret
xchg
cmc
push
add
fsubl
push
bound
aad
dec
mov
rcrb
jl
jno
push
call
xchg
or
loopne
popa
or
xchg
cli
mov
cmp
mov
fadds
mov
mov
dec
aaa
inc
rolb
rorl
cmp
decl
adc
jl
xor
jmp
cmp
jl
or
sbb
popa
out
decl
jp
adc
cmp
cmp
je
mov
mov
push
add
mov
jmp
movb
mov
push
sbb
push
je
idiv
sub
in
out
ljmp
scas
xchg
mov
fdivrs
std
and
ret
push
addb
push
frstor
pusha
mov
add
cld
or
push
push
adc
jo
fs
fwait
pop
out
add
xor
push
or
push
cmp
in
in
hlt
cltd
nop
cmpsl
rolb
pop
xor
lret
cmp
in
cmp
mov
dec
fadd
jnp
mov
jb
fstp
fsub
push
add
movsb
mov
or
mov
fdivrl
dec
imul
divl
push
paddsb
lods
pop
push
les
push
aaa
aam
mov
push
push
push
ror
xlat
inc
mov
and
adc
pop
incl
nop
cmp
aad
inc
rorb
or
cltd
mov
adc
enter
shll
mov
or
loopne
sbb
sub
dec
sbb
andl
sahf
fidivl
stos
jb
and
and
lcall
push
xchg
push
div
push
je
setne
rcll
dec
das
loopne
inc
and
ret
adc
sub
cmp
push
inc
push
mov
and
addr16
mov
insb
cmp
or
scas
insb
outsl
mov
mov
xchg
mov
pop
cmpsl
mov
jbe
lret
pop
pop
jns
es
mov
push
pop
push
jle
push
dec
add
cmp
adcb
sbb
out
cmp
rorb
push
jae
out
add
cltd
pop
in
fdivrs
out
test
push
rcrb
fmuls
pop
test
xor
aam
cmp
out
and
pusha
sbb
shlb
xchg
sbb
decb
and
and
test
enter
and
sub
add
cmp
or
lret
aaa
add
lcall
xchg
xchg
popa
jns
or
mov
dec
mov
mov
sub
mov
or
pop
stos
add
jge
xor
cltd
in
test
dec
push
fs
mov
cmp
rolb
xor
js
cmp
xor
dec
cmpsb
pop
je
lods
adc
xchg
pushf
xchg
mov
jl
enter
or
or
rcll
call
ret
sub
fcmovnbe
or
jge
cmp
add
int3
imul
mov
bound
sbbl
and
cmp
sbbl
add
fisttpl
mov
sbbb
scas
sub
int3
jge
push
test
loopne
daa
aas
mov
mov
dec
and
mov
lea
pop
movsb
xor
movsb
fmull
orb
add
aaa
hlt
mov
sub
xor
mov
jo
xchg
mov
or
adc
cmp
bswap
lock
pusha
inc
fadds
pop
lcall
push
sub
imul
movsb
sbb
sarl
pop
pop
int3
and
inc
lcall
and
cwtl
and
bound
in
add
das
aam
sub
or
cmp
sbb
jae
aam
mov
outsb
add
jmp
in
mov
mov
push
jnp
dec
or
jle
xor
pop
jmp
pusha
or
decb
mov
mov
adc
mov
stos
mov
jmp
sub
hlt
add
or
shr
or
and
adc
and
fimuls
mov
and
mov
dec
cmp
shrb
ss
cmp
mov
mov
jmp
lods
je
adc
xor
out
rorb
dec
cmp
sub
add
push
sahf
inc
and
sub
fsubrs
sub
loopne
sbb
ds
cs
mov
cs
and
mov
ss
dec
mov
enter
sub
enter
add
and
nop
mov
arpl
push
test
cmp
adc
pop
xor
xchg
scas
push
push
and
ss
je
imul
ds
sub
gs
imul
pop
pop
jg
push
sub
packuswb
dec
xor
insl
loope
push
dec
mov
hlt
xchg
or
pop
out
pop
xchg
popa
sub
daa
cmc
bound
sub
and
repnz
pop
pop
and
add
int3
xchg
mov
and
jbe
and
sub
pop
adc
pop
sub
les
xchg
pop
add
cmp
pop
xchg
push
mov
test
lea
andl
sub
sub
cmp
ja
bound
mov
and
xlat
cs
addr16
adc
in
movsbl
and
or
clc
add
mov
and
movl
fisubrl
adc
popl
add
scas
dec
les
int3
arpl
add
add
push
fisttpll
or
xor
adc
lds
aam
xchg
inc
cmpsl
sub
mov
push
ficoms
pop
jno
fadds
xor
test
movsl
xor
aaa
jmp
pop
insl
call
cs
dec
add
loopne
or
push
or
insl
pusha
hlt
add
cmpb
cmp
push
jne
cmp
jle
sub
loopne
push
sbb
sub
cmpsl
int3
jl
cli
or
adc
es
add
jge
bound
adc
sbb
aas
xor
push
add
jne
clc
adc
aam
push
mov
push
dec
insl
dec
inc
fdivrl
int3
sbb
sbb
sub
mov
jno
addr16
cmp
or
mov
pop
push
push
aam
add
test
pop
jnp
movsl
xchg
and
push
shlb
rcr
fdivr
mov
pop
into
int3
popa
adc
or
cmc
fdivs
sbb
or
int3
adc
addb
add
mov
or
call
into
adc
ror
sbb
fidivl
test
iret
or
and
lea
ss
rclb
cmp
rorb
mov
shl
pop
repnz
adc
push
mov
repnz
ja
mov
rorb
lea
js
push
fsubrs
sbb
movsb
pop
adc
pop
ss
repz
push
push
sbb
mov
lcall
push
push
lock
rorb
add
enter
push
add
add
add
mov
in
adc
add
lods
sub
mov
iret
and
or
mov
pop
rorb
or
push
or
jge
movsl
sbb
xchg
fldt
and
push
fsubrs
jg
pop
bound
jne
ja
sub
adc
in
insb
cmc
cmp
cmp
push
xchg
dec
iret
adc
or
jae
shrb
gs
xchg
sub
push
cmp
dec
cmp
in
cmp
xor
ljmp
pop
es
sbb
push
lret
adc
cmp
cmp
test
inc
jmp
cmp
jbe
gs
add
push
arpl
imul
xchg
ss
add
push
daa
add
or
or
add
pop
test
xchg
add
mov
add
ficompl
jp
xchg
lea
sbbb
inc
xor
push
cmp
testb
push
xchg
frndint
bnd
cmp
jne
mov
rcl
mov
jne
add
mov
push
xlat
pop
rcrb
mov
adc
and
enter
dec
jb
xor
mov
mov
push
add
mov
or
add
xchg
mov
or
mov
add
xchg
test
stc
in
pusha
aaa
inc
or
mov
jo
push
cs
iret
jbe
rorb
in
in
mov
lods
jnp
push
es
dec
inc
ret
xchg
outsl
mov
add
jnp
or
pop
mov
ss
call
loopne
adc
jb
ret
call
push
fsts
movsb
call
dec
xchg
adc
test
mov
sti
xchg
add
comiss
fsub
shlb
iret
mov
or
sbb
scas
xor
jmp
push
shlb
ss
sub
cmp
inc
nop
or
aam
imul
dec
cs
sub
or
test
and
add
fsubs
push
test
syscall
adc
push
jle
cli
xor
mov
push
add
adc
ror
or
push
cmp
js
aam
push
fwait
adc
jo
pushf
push
lea
test
dec
enter
bound
jo
xlat
jp
cld
movsb
lcall
outsb
pop
xchg
repnz
and
icebp
inc
stos
pop
pop
xor
leave
out
add
stc
sbb
lods
popa
inc
cmpsb
fcomps
in
inc
and
std
xchg
incb
lahf
push
push
push
dec
daa
repnz
insb
adc
adc
test
enter
popa
adc
pop
fs
pop
pop
inc
rcrb
push
movsl
mov
add
popa
mov
test
and
jne
test
sarl
outsb
inc
push
add
adc
jle
push
mov
not
mov
fs
aam
pop
dec
mov
add
xor
pop
add
push
jne
jp
cmp
adc
add
mov
xchg
nop
xor
or
pop
enter
cs
daa
push
stos
adc
scas
add
sub
xchg
pusha
sbb
push
bnd
cmp
jne
mov
ret
imul
dec
mov
and
pusha
ljmp
test
sub
sbb
pop
in
inc
adc
lcall
loope
mov
negl
mov
push
add
push
cltd
jb
add
or
movsl
pop
cld
cmpsb
xchg
xor
dec
mov
fistpll
add
push
lock
jmp
shlb
cmp
add
add
push
push
cmp
dec
xor
icebp
push
in
dec
pop
jo
inc
or
enter
sub
mov
jne
testb
jae
mov
xchg
fwait
call
outsb
mov
pop
mov
add
jmp
mov
sub
adc
mov
sbb
pop
and
jge
gs
push
fcompl
cwtl
loope
xchg
xchg
loope
stos
xchg
or
and
hlt
jns
xor
imulb
push
shrb
xchg
lretw
mov
mov
in
sub
cmovl
xor
or
adc
ret
sbb
push
ror
pop
cmp
ret
jg
mov
push
or
int
aam
sbb
and
mov
pop
jb
fbld
repnz
lods
lods
add
and
in
js
adc
xor
mov
add
sbb
pop
push
dec
add
push
dec
pop
sub
sub
dec
mov
dec
add
popf
sub
add
nop
bound
out
loope
add
and
pop
push
lods
mov
dec
dec
dec
sub
out
cmp
insb
mov
mov
xchg
out
in
mov
les
pushf
mov
repz
fcoms
dec
cmpsl
push
mov
cmp
fidivl
jo
sbb
inc
or
out
add
adc
and
adc
std
mov
rcrb
aas
add
andb
xor
pop
popa
test
or
and
and
add
xor
xor
dec
call
int3
or
cmp
xor
adc
rcr
sbb
lods
je
jne
cld
test
out
sbb
cmp
pop
add
cmpsl
and
push
push
sbbl
imul
dec
fimuls
rolb
nop
and
cmp
pusha
xchg
cmc
add
fimull
or
sub
mov
pop
cmp
xchg
xchg
push
inc
lds
cmpsl
movl
add
sbb
scas
inc
and
push
rcrb
add
cmp
xchg
push
sub
pop
add
fld
sub
push
add
sbb
cltd
add
push
arpl
add
imul
pushf
sub
sub
orb
lea
enter
fildll
xchg
or
mov
int3
add
les
outsb
inc
mov
adc
int3
push
push
repnz
jp
cmp
inc
push
sbb
dec
ret
pop
dec
sbb
mov
push
dec
iret
in
push
mov
sbb
or
mov
mov
and
or
and
lds
sub
dec
sbb
je
jg
fistl
arpl
or
int
lods
adc
or
pop
sub
pop
pushf
pop
inc
add
data16
mov
and
inc
jb
in
sub
cmovo
cmp
js
pop
mov
adc
inc
push
test
sbb
out
push
xor
outsb
mov
addl
negb
lock
pop
rorl
push
mov
cs
and
and
fs
cmpsl
pop
ret
adc
ret
lcall
sub
ret
subl
orb
xor
sbb
mov
sbb
mov
jb
jae
ret
push
popa
cmp
arpl
pop
cmp
cmp
add
cmp
pop
stc
orb
popl
shll
movsb
roll
cmp
sub
andb
mov
ja
shrl
in
add
mov
add
loop
push
push
xlat
rclb
js
mov
shrl
cmp
mov
cmp
dec
js
loop
enter
and
in
xchg
clc
xor
mov
xor
lods
out
or
mov
sub
pop
out
xchg
push
pop
loopne
adc
dec
je
push
jo
sbb
push
inc
inc
inc
or
cmc
and
ljmp
push
lock
clc
inc
aam
sub
test
leave
adc
and
test
js
aaa
jmp
sub
inc
jmp
mov
jl
xchg
mov
data16
and
adc
sbb
or
xchg
nop
sbb
sub
popa
inc
scas
mov
and
lock
push
pop
or
push
adc
push
and
jno
in
pusha
and
cmp
sbb
and
movsl
add
pushf
nop
adc
daa
lods
xchg
cmp
and
data16
outsl
mov
and
or
enter
and
push
std
or
adcb
jns
mov
add
push
sub
dec
and
in
loope
mov
aad
sub
sub
cmp
mov
jb
inc
repnz
add
mov
mov
push
and
pushf
les
adc
sub
dec
je
push
mov
mov
and
sub
add
and
and
lret
mov
je
push
gs
push
rorb
jnp
push
inc
jmp
xor
lds
popf
sub
and
repnz
cmp
adc
sbb
push
pop
rcrb
inc
ja
leave
les
xchg
dec
push
or
add
jno
adc
sbb
leave
inc
rolb
rclb
push
es
and
mov
insl
add
jmp
push
push
inc
je
add
sub
aad
pop
push
loopne
adc
or
add
adc
test
inc
ja,pn
add
movsb
lcall
mov
add
add
and
push
push
jo
mov
and
xorb
fldl
popl
dec
cmp
js
outsb
dec
clc
sub
push
cmovle
dec
daa
es
ret
testb
cmpsl
xchg
pop
jne
ret
dec
mov
cmp
popf
mov
mov
jmp
inc
dec
mov
cmp
addr16
push
jecxz
add
mov
mov
rorb
popl
outsb
das
pop
fs
inc
rcrb
mov
and
loope
add
pop
imul
mov
insb
andl
leave
add
xchg
mov
lahf
dec
or
inc
std
sarl
fs
jl
push
cmp
icebp
mov
mov
and
adc
mov
push
out
mov
es
inc
cmp
pop
cmc
loopne
dec
pop
sbb
popf
sub
push
movsb
rol
push
xorb
or
pop
ret
dec
or
orb
ja
sbb
fimull
and
rolb
dec
cmpsl
jle
ss
jnp
lcall
loopne
inc
clc
mov
pmaxub
jmp
jg
sbb
cmp
incb
mov
or
adc
mov
into
push
sub
dec
mov
push
es
sub
rolb
psubw
negl
or
ja
inc
inc
dec
ret
cmp
or
lods
xchg
orb
xabort
or
cmp
mov
in
adc
das
xor
lock
cmpl
cwtl
add
jno
adcb
loope
pop
pop
in
inc
cmp
jb
jmp
xchg
cmp
cmp
jnp
xor
push
in
sub
inc
push
ljmp
loope
mov
dec
out
ret
and
add
jns
mov
pop
xchg
xor
pop
xor
ds
dec
dec
popf
add
add
add
dec
rcrb
xchg
sbb
cwtl
lea
add
jl
jmp
test
sahf
dec
inc
shrb
cltd
std
and
jae
jp
add
pusha
add
in
mov
orl
or
sub
and
fildl
mov
jo
sbb
mov
dec
jmp
pushf
adc
or
inc
fincstp
adc
pusha
adc
lea
add
pop
inc
dec
adc
daa
add
sub
mov
rolb
cmp
add
inc
or
push
xor
or
push
pop
push
sarb
pop
xor
add
ret
fstpl
push
push
cmp
push
mull
pop
fdivrs
movsb
test
and
or
cmp
inc
add
inc
out
lahf
out
cmpsb
pop
addr16
sti
insb
cmp
or
inc
jmp
mov
or
add
mov
orl
push
xchg
bnd
push
or
rcr
jge
or
adc
lea
jecxz
cwtl
loopne
push
jne
orb
stos
gs
or
cld
add
push
mov
add
pop
rclb
out
iret
iret
pop
cmpsl
lret
test
mov
cmp
lock
inc
lea
cwtl
add
jo
push
je
mov
cmp
xor
or
cwtl
cmp
rolb
mov
xor
adcb
les
cli
jge
jb
sub
std
or
sahf
adc
shll
test
or
adc
mov
inc
je
pop
mov
inc
adc
pop
lea
ds
mov
pop
add
ret
xchg
andl
enter
and
add
popa
push
add
add
mov
incl
xchg
out
mov
and
faddl
pop
imul
imul
fmull
mov
es
out
or
aam
fsubs
mov
add
push
mov
ret
ret
sahf
inc
inc
cld
subb
jl
dec
cltd
mov
dec
subb
test
in
in
gs
loopne
arpl
imul
inc
sub
aaa
mov
enter
ret
add
imul
addr16
orb
std
test
push
push
decl
push
aam
lods
dec
cmc
leave
xchg
call
or
enter
lret
call
push
mov
aad
out
pop
outsl
loope
adc
ret
sub
or
pushf
inc
mov
or
adc
dec
dec
andl
test
cmpsb
prefetch
inc
cmp
push
jno
loopne
adc
dec
popf
mov
dec
lock
and
jb
sahf
push
roll
mov
sahf
push
inc
test
or
push
adc
xor
cwtl
das
imul
imul
and
dec
jmp
adc
outsb
adc
mov
cmp
push
sbb
nop
into
push
cwtl
mov
push
cmp
or
sub
pop
pop
pop
push
push
push
out
push
push
inc
dec
push
xchg
or
in
inc
pop
jbe
popf
call
outsl
push
in
cwtl
dec
imul
sbb
es
and
pushl
call
nop
mov
mov
adc
xchg
rclb
mov
mov
shll
insb
test
and
or
add
add
xor
adc
fcompl
jns
les
and
ret
or
inc
stos
xchg
lahf
stos
movsl
inc
sbb
hlt
cmp
dec
pushf
xor
fimull
out
in
in
jmp
fwait
dec
movsl
ljmp
popf
cld
mov
inc
dec
xorl
inc
popa
popf
inc
outsl
flds
imul
loope
inc
in
and
sahf
xchg
rorl
sub
xchg
mov
in
pushf
or
mov
and
mov
cmpsb
jl
dec
mov
mov
insb
add
add
or
sub
outsl
fadds
add
int3
sub
nop
pop
sbb
les
cmp
ret
sub
jns
push
inc
psubb
in
popf
lret
or
inc
movl
adc
mov
add
in
dec
xor
adc
push
rcrl
int3
add
add
mov
je
fistl
push
sbb
mov
gs
push
sub
dec
repnz
jmp
je
inc
push
addl
xchg
ret
mov
or
push
or
adc
inc
inc
pusha
add
mov
push
jecxz
int3
sub
dec
push
adc
dec
push
add
pusha
add
sbb
ret
adc
lret
add
adc
clc
rol
pop
push
xor
sbb
adc
stc
xchg
and
sbb
mov
and
xor
lock
pusha
push
and
test
repz
adc
out
lods
sub
fcoml
inc
cmp
adc
ss
xchg
mov
rol
mov
loopne
sbb
push
nop
xor
cmp
hlt
inc
xor
pop
ret
pusha
push
cmp
cmp
mov
bound
es
out
add
or
push
xchg
push
cmpsl
int3
push
and
xor
out
lea
jmp
mov
mov
push
or
sbb
fisubrl
aam
call
and
jne
leave
add
sub
outsb
mov
test
es
lret
movl
xchg
dec
fisubl
enter
ret
xor
inc
mov
and
cltd
and
cmp
aad
adc
dec
push
cmpsl
pop
lods
test
mov
nop
shr
lea
push
ret
pusha
sar
mov
add
fsubrl
push
arpl
aam
jmp
and
sub
jns
shlb
cmp
rolb
push
loopne
mov
insl
cmp
jae
pusha
add
xorl
sub
or
jns
lds
sub
dec
ja
dec
cli
jge
je
popa
jnp
cli
xchg
adc
loopne
jmp
or
push
sbb
pop
mov
cli
out
imul
xchg
pushf
fiadds
mov
mov
jnp
dec
pop
dec
inc
mov
push
push
scas
push
mov
jmp
dec
add
testb
mov
mov
mov
sub
sbb
mov
inc
mov
cltd
jmp
fwait
out
pop
addb
add
pushf
adc
push
shr
andb
add
sub
gs
push
call
leave
pop
lds
test
das
inc
pusha
loope
lock
clc
lret
fcomps
rclb
add
lahf
xchg
mov
stos
sbb
jne
test
xchg
sbb
fsub
cmp
cmc
repnz
push
jmp
lcall
mov
stc
lods
loope
push
arpl
in
ljmp
popf
and
dec
inc
mov
insb
sarb
xchg
sbb
ret
in
adc
pop
pop
mov
flds
ss
js
mov
sub
fldcw
scas
fldt
aas
int3
pop
adc
test
sbb
jb
lods
aaa
sarl
cmp
clc
outsl
cmpl
xor
jp
mov
es
push
sbb
adcb
scas
and
mov
mov
loop
out
and
lret
es
nop
test
ljmp
fsts
sub
ljmp
jmp
mov
sub
sahf
or
mov
je
inc
pop
dec
ret
int3
pop
insb
push
pop
fcomp
loopne
jecxz
add
std
push
test
sub
mov
gs
mov
xchg
ret
inc
jo
fistps
or
push
xor
cmp
sbb
mov
popf
mov
pusha
adc
xor
nop
dec
mov
push
push
push
call
adc
lods
mov
mov
pop
popa
lds
or
mov
sub
pushf
divb
cmpsb
mov
adc
jmp
mov
rolb
insb
mov
jae
fsubrp
or
add
mov
push
clc
or
inc
or
xchg
mov
bnd
sbbl
sbb
push
sbb
cmpb
iret
imul
inc
or
cli
jle
xor
sub
movsl
stos
xchg
sub
adcl
pushf
into
dec
cs
add
or
sub
dec
cmp
sbb
sub
jmp
ja
adc
inc
in
sbb
inc
jne
and
push
fwait
add
cmp
mov
push
push
and
add
aad
outsb
test
int3
mov
shr
push
push
and
lods
sti
stos
mov
mov
das
mov
mov
push
push
vmread
adc
mov
xchg
enter
sub
push
leave
cli
insl
imul
jg
loope
push
aad
fmul
pop
mov
dec
nop
int
adcl
cli
mov
lock
movzwl
inc
mov
inc
call
ret
insl
push
jl
cmp
rorl
adc
pop
and
sub
mov
movsb
mov
pop
inc
pusha
leave
cmp
xchg
sti
adc
ret
pop
mov
lret
sub
or
add
mov
jp
push
fidivs
lds
les
sbb
cmp
lahf
jbe
mov
in
std
test
add
or
push
scas
inc
cmp
pop
sub
test
push
loop
std
sbb
hlt
or
cmp
fldl
push
xor
mov
fadds
mov
sbb
xchg
std
mov
push
repnz
das
and
aaa
popa
add
loopne
dec
and
inc
sbb
stc
mov
movsl
movsw
push
cld
loop
cmp
movsb
mov
sar
arpl
shr
mov
inc
mov
adc
cmp
jle
movb
cmpb
fwait
xchg
sub
ret
cmpb
mov
pop
dec
cmpb
mov
cwtl
cwtl
jge
mov
push
push
ja
aaa
pop
iret
add
jb
and
push
cmp
je
push
push
sub
fisttpl
ret
xchg
mov
and
leave
les
mov
push
shlb
or
mov
incl
sbb
push
inc
add
mov
mov
mov
fistl
or
fs
cwtl
pop
mov
adc
dec
cmp
jl
cmp
xchg
sub
add
sub
cmp
jo
xor
inc
rcll
push
dec
xor
push
and
and
cmc
and
fwait
adc
loop
lock
cs
test
or
test
mov
sahf
dec
ja
adc
adc
call
sahf
sbbl
cmp
add
add
cmp
cmp
push
pop
or
fdivrl
or
jnp
or
jbe
jmp
or
push
jmp
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
push
jmp
pop
jmp
sbb
xor
fcompl
jmp
sbb
es
and
push
jmp
pop
jmp
and
or
cmp
add
adc
fimull
push
add
ja
stos
push
mov
push
cmpl
mov
pop
mov
push
xchg
jns
out
pushf
movsb
lods
mov
out
sahf
out
int3
aam
ficomps
call
cmp
sarl
push
or
adc
sbb
and
cs
repz
xor
cmp
mov
cmp
push
nop
add
add
push
pop
or
and
lcall
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
gs
push
test
or
sub
sbb
mov
sahf
test
add
pop
or
mov
or
fdivs
cmp
push
mov
loope
fnstcw
pop
or
les
add
push
pop
jae
push
or
shrb
push
inc
out
mov
xor
xor
mov
or
mov
sbb
bound
sub
mov
inc
cmp
jbe
shlb
aas
dec
or
loope
test
mov
jge
pop
decl
mov
or
push
mov
cli
or
push
bnd
jne
mov
and
movl
mov
in
sub
fwait
int3
dec
xchg
add
push
cmp
je
sbb
sbb
add
dec
xor
and
inc
ss
sub
sub
add
or
adc
inc
adc
add
push
pop
xor
adc
and
cmp
push
xchg
fmuls
dec
je
push
enter
add
push
iret
fisubl
push
or
mov
xor
pop
mov
xor
mov
add
add
add
je
pop
jmp
shrl
or
and
call
jns
rorb
xchg
or
and
or
or
rcll
pop
lahf
push
sbb
sub
lock
xor
add
adc
dec
adc
jecxz
xor
push
loop
xorl
push
pushl
add
sub
gs
push
mov
sbb
dec
insb
fnstsw
jmp
xor
push
cmp
fs
test
rcl
mov
add
test
push
jne
movsb
iret
jne
inc
pop
loopne
xor
and
ret
jge
js
outsb
adc
jbe
push
stos
mov
mov
mov
jne
and
inc
cmp
jno
aas
xor
add
popa
sbb
movl
in
mov
pop
mov
and
dec
pop
js
inc
aas
adc
aas
hlt
orl
xor
xchg
je
add
mov
push
test
push
clc
lock
insb
inc
dec
je
xchg
clc
sbb
in
push
xor
test
adc
pop
jo
sub
cmp
pop
sub
add
inc
and
add
or
jo
scas
movsb
lcall
push
add
shrb
mov
pop
pop
push
or
jo
js
add
inc
jns
mov
stos
mov
cltd
sahf
and
bound
loope
xor
out
pusha
sbb
push
push
sbb
add
adc
push
or
xchg
mov
pop
aam
push
out
bound
loope
mov
jecxz
loopne
mov
push
sbb
leave
adc
pop
add
sbb
or
fcmovbe
in
lret
mov
add
sbb
pop
xor
test
inc
push
jns
sbb
loope
add
sub
rcr
push
in
jp
js
pusha
es
push
cwtl
or
ret
jge
cmp
push
subl
dec
nop
add
outsb
mov
pusha
clc
add
mov
cmpsl
and
aam
sub
and
and
mov
cwtl
add
dec
in
ja
popa
pop
inc
enter
sbb
mov
movsl
add
push
rclb
push
push
xchg
sub
pusha
scas
cmc
mov
stos
push
push
adcb
push
lods
rcrl
add
add
lods
sbb
cmp
fnstsw
fs
xor
mov
xchg
xor
sub
fadd
ret
mov
incl
jno
sti
mov
or
push
and
call
jbe
push
shll
adcb
xchg
xchg
ret
dec
jecxz
xchg
movsl
dec
jp
daa
push
ja
bound
or
mov
pop
dec
jb
adc
jmp
nop
xor
push
pop
xlat
leave
lahf
cltd
dec
add
mov
pop
pop
adc
mov
sub
imul
add
repz
push
lock
add
push
orb
xchg
xchg
xor
test
pop
daa
scas
cmp
sbb
addb
xor
inc
sbb
dec
aas
pop
mov
in
adc
add
rcr
inc
mov
sub
or
inc
lret
dec
xchg
jp
cmp
incb
loopne
jge
inc
fcoms
pop
inc
add
adc
jne
mov
in
push
or
gs
popa
int3
push
nop
push
popf
fnsave
fsubl
pop
jl
and
add
negl
or
jae
cmp
jmp
imul
scas
xchg
add
sbb
arpl
mov
je
outsl
sbb
push
push
fs
popa
das
sti
pop
push
xchg
or
ds
adc
out
inc
add
inc
in
fwait
fs
and
js
push
sbb
fwait
test
fcoms
mov
pop
xchg
cwtl
or
icebp
nop
xchg
inc
pushf
mov
repnz
test
jbe
je
lods
mov
xor
and
and
mov
mov
and
rcrb
enter
dec
gs
fdivr
add
aad
adc
in
aaa
test
sbb
div
or
inc
incl
jne
js
add
or
aaa
out
lar
xchg
jns
ret
cltd
mov
sub
or
jbe
or
sbb
or
xor
jl,pt
sub
lea
cmp
mov
add
fldl
push
or
nop
out
mov
sbbl
push
mov
outsb
std
jmp
lcall
inc
and
pop
jne
adc
outsl
lock
or
ret
adc
ret
xchg
sbb
mov
push
sahf
mov
ret
mov
cmp
je
outsb
and
jge
inc
decl
sti
rcl
aaa
jmp
rcrl
push
shl
push
mov
in
rcl
rclb
popl
int
xor
das
sub
daa
insb
je
js
pusha
pop
mov
sbb
fwait
enter
push
imul
sub
lods
sub
sub
jns
mov
arpl
subb
pop
fdivs
cmp
jge
add
incl
sarl
xlat
jle
push
pop
insl
xor
ret
popa
mov
pop
inc
adc
dec
or
pop
sbb
repz
hlt
mov
sub
sbb
dec
pop
add
push
adc
jo
sub
ds
lret
push
cmpsl
pop
pop
fs
adc
incl
push
js
add
pop
rclb
pop
or
inc
pop
inc
cmpsb
push
pushfw
push
cli
jbe
xor
test
push
bound
mov
cmp
cmp
test
push
cs
mov
sahf
adc
test
xchg
or
nop
pop
add
mov
add
dec
ret
cmp
mov
test
adc
lret
mov
and
and
xor
fnstenv
rcrb
shr
shlb
mov
fcos
sub
sahf
ret
les
mov
xor
adc
dec
data16
or
xchg
cld
cmp
pop
and
jns
dec
subl
ja
in
jge
loope
stos
or
shrb
repnz
push
jno
inc
out
subl
pop
adc
or
xor
xor
jne
cwtl
test
mov
push
addb
clc
adc
xor
pop
and
xor
mov
jle
popf
lods
inc
cwtl
fcoms
sbb
or
push
jno
cltd
sub
jo
divl
es
mov
shrl
adc
call
jno
lock
mov
repz
push
es
adc
movsl
sub
lock
or
mov
jmp
sub
outsl
rcrb
dec
inc
fbstp
xlat
xchg
lods
pop
fsubr
fldl
leave
test
mov
inc
add
xor
push
lret
inc
mov
scas
or
pop
mov
or
xchg
pop
or
add
push
inc
test
mov
enter
sub
push
scas
cltd
or
fsts
adc
sbb
dec
xchg
push
ja
and
and
mov
rclb
nop
jno
add
pop
mov
in
xchg
jne
sub
jbe
xchg
xchg
or
jno
jecxz
add
jmp
pushl
orl
sub
dec
or
in
push
js
ret
test
xor
add
xchg
pop
pop
bound
adc
sbb
mov
std
decl
mov
sub
xchg
pop
or
imul
addr16
pop
add
js
cmp
popa
in
mov
cmp
add
shll
mov
mov
add
and
inc
sbb
loopne
ret
push
lds
push
inc
or
cmp
pop
sbb
mov
sti
or
sarl
cmp
popf
pushl
or
aam
jl
jbe
adc
orl
dec
jl
call
jge
push
or
test
pop
pop
stc
pop
in
rcrb
ljmp
pop
imul
cmp
addb
jmp
xor
or
pop
push
jg
and
sub
and
sub
adc
lea
and
or
arpl
mov
stos
adcl
mov
adc
mov
ficomps
jle
sarl
out
push
in
arpl
or
push
xor
leave
push
jno
adc
jmp
inc
ret
shlb
rorl
jp
mov
imul
mov
push
test
inc
loopne
mov
fs
cmp
or
or
pop
cld
add
iret
mov
xor
test
sub
mov
dec
xor
jo
ficompl
aam
inc
repnz
cs
lods
and
daa
dec
and
lea
mov
pop
out
add
xchg
push
and
push
cmp
inc
or
jo
xchg
movsb
aad
cmp
lock
lock
inc
lcall
inc
adcl
jb
test
andl
ja
push
in
aas
and
xor
or
inc
movsb
lock
mov
imul
subb
xchg
or
add
pushl
faddl
fstl
fldz
fcomp
fnstsw
hlt
sub
inc
mov
sub
fsubr
pop
faddp
sbb
fstpl
les
and
and
and
rcrb
or
and
push
in
test
fadds
mov
pop
hlt
xlat
dec
jg
lret
hlt
pop
hlt
jl
cmp
in
ret
push
lea
jne
xchg
lock
jmp
loop
sbb
loope
jne
das
sbb
cwtl
add
add
inc
test
mov
push
icebp
das
cmp
mov
icebp
das
inc
inc
mov
fdivs
popa
call
gs
mov
jnp
rcr
xor
sbb
aad
cmp
and
xchg
dec
mov
lea
loope
inc
and
cmp
cmp
or
xor
adc
adc
pusha
test
in
test
mov
in
in
or
add
adc
add
ja
icebp
xor
jmp
les
mov
jp
mov
aam
out
sub
imul
or
mov
ds
fimuls
enter
lahf
divb
out
int3
loopne
shr
dec
jge
sub
fdivrs
insb
ret
jno
mov
clc
push
sarb
xchg
icebp
pop
pop
std
ljmp
dec
or
fstpl
inc
push
test
dec
adc
loopne
add
lock
mov
int
pop
pusha
pop
aas
adc
push
fistl
cmp
aam
cmpsb
daa
imul
cmp
mov
fmul
aam
xchg
sbb
cli
push
aam
adc
xchg
lods
pop
nop
out
insl
push
jecxz
mov
jne
xchg
and
fistl
pop
fldt
scas
out
push
sbb
cmp
nop
cwtl
push
int3
push
cmp
inc
inc
cmp
ret
xor
cmpl
push
rorb
xchg
xchg
arpl
loopne
lock
xchg
push
popf
mov
jge
dec
cmp
mov
push
add
and
sti
fsts
inc
cmpl
or
aaa
mov
aaa
aaa
add
popa
push
push
pop
xor
fs
inc
lahf
lret
nop
sbb
jb
pop
ja
cmp
sub
pop
or
dec
pop
xchg
out
lcall
add
cmp
div
nop
in
add
dec
ret
loopne
adc
mov
mov
fmuls
xor
sub
jo
sbb
sbb
pop
adc
sub
imul
subb
das
and
fdiv
inc
mov
pop
dec
and
add
xchg
out
cltd
sbb
dec
or
mov
out
sub
push
sub
jae
daa
sbb
sahf
es
cwtl
lods
xchg
cmp
je
out
jne
data16
add
dec
into
dec
and
sbb
rorb
jno
or
mov
jmp
in
pop
jne
pop
push
pop
data16
pop
psubusw
and
ret
out
cwtl
dec
ret
out
xor
int3
adc
mov
test
pop
fsubs
jmp
add
test
xchg
ds
cmp
add
out
and
inc
mov
ja
incl
pop
xor
push
jmp
test
pop
xchg
js
ret
mov
pop
inc
jecxz
enter
xor
bound
test
insb
pop
or
sarb
gs
jge
mov
aam
add
test
lods
andb
movsl
popa
sub
add
and
pop
scas
sbb
ret
mov
inc
lods
nop
push
icebp
xor
dec
sub
pop
push
das
xor
testl
aam
lea
outsb
popa
pop
jbe
shrl
and
xor
xchg
push
push
or
inc
mov
inc
add
es
cmpsb
mov
push
repz
jne
fucomp
jns
arpl
push
dec
fldcw
push
push
or
ret
dec
add
stos
adc
adc
jmp
or
fwait
add
mov
and
pop
push
mov
cmc
mov
lods
push
ja
and
pop
and
and
jne
ret
push
xor
ret
jle
loop
pop
xchg
cmp
inc
push
xchg
pop
add
call
outsb
sub
fldenv
inc
mov
sbb
fwait
cmp
pop
push
adc
push
test
pop
mov
xor
iret
sbb
shlb
popa
dec
mov
or
test
push
push
mov
cwtl
xchg
test
test
stos
mov
add
movsl
lahf
mov
movmskps
call
mov
jb
test
dec
pushf
int
lock
or
aam
les
test
xchg
stos
jp
test
test
mov
xchg
or
test
and
push
add
popa
and
adc
jmp
inc
sbb
imul
enter
inc
sub
or
pop
push
or
cmpsl
xchg
and
add
push
mov
lret
shlb
mov
adc
xchg
shlb
test
int3
cld
sahf
xchg
fcoms
sbb
lea
imul
xor
nop
jo
aad
mov
loope
cs
pop
addr16
inc
add
lods
es
mov
inc
cwtl
loope
aas
faddl
xchg
in
add
mov
mov
sub
cmpl
call
push
or
mov
bound
iret
call
add
mov
ror
dec
and
es
xor
push
and
mov
jmp
test
jecxz
mov
aam
cmp
jbe
push
sbb
mov
inc
mov
into
push
mov
pop
mov
cmp
mov
or
dec
dec
mov
jg
cld
adc
mov
jge
push
jbe
movsl
add
sub
add
sarb
les
into
mov
jo
push
xchg
mov
rorb
outsl
add
sub
and
test
push
add
inc
popa
sub
and
stos
add
push
cmp
push
push
fucomi
or
jne
leave
sarb
xorb
shlb
movsb
ret
lods
pop
xor
push
xchg
ret
in
mov
add
xchg
dec
rorl
mov
fadd
aaa
dec
inc
sbb
and
lods
lds
sub
loopne
imul
iret
sbb
add
sarl
test
out
push
insb
push
adc
inc
popa
inc
add
or
dec
bound
add
and
sbb
pushf
mov
xor
push
jp
push
sub
xchg
ja
or
xchg
andb
or
loopne
stc
xchg
pop
lret
sbb
sbb
and
mov
inc
sbb
and
push
xchg
mov
mov
js
xor
add
leave
pop
inc
nop
pop
and
lods
in
clc
cmpl
dec
mov
dec
xchg
mov
push
loop
sub
or
shrl
or
mov
lahf
pusha
cmp
sub
mov
subb
pop
lret
pushl
add
in
nop
and
ss
xchg
jae
mov
mov
mov
das
in
jo
mov
push
incl
in
add
fcoml
movsl
je
sahf
push
lock
sub
adcl
scas
fnsave
jge
mov
sub
jns
test
push
shr
sub
lahf
mov
or
sub
push
addb
pop
imul
testl
fsubrs
fsubrl
fadds
test
repnz
in
mov
or
out
lahf
or
rcrb
sub
dec
insb
push
arpl
sbb
add
adc
test
fstpl
mov
test
inc
sub
xlat
xchg
dec
sub
mov
sbb
adc
and
push
push
imul
xor
mov
mov
shr
add
lret
add
add
sub
add
adc
push
imul
pop
or
adc
loope
adc
or
negl
xor
pusha
xchg
pushf
les
xor
dec
int
lret
xchg
pop
inc
pop
inc
addb
or
mov
call
push
mov
sbb
add
xor
add
mov
cmpsl
push
ficomps
aam
adc
adc
push
pop
out
cmp
add
fdivl
sbb
pusha
pop
jo
add
pop
push
inc
xor
sub
or
or
or
addb
pushf
inc
cmp
mov
test
mov
xchg
data16
sub
cmp
and
jo
xchg
and
das
or
dec
fsubrs
add
js
jo
add
push
adc
xor
and
or
loop
lds
dec
xchg
sub
mov
lret
icebp
rcrb
dec
sti
jmp
cmp
sub
or
adc
mov
popa
aad
mov
push
and
ret
pop
mov
in
inc
in
jno
ret
fldt
adc
out
rorl
pop
xor
push
adc
les
jb
inc
pop
outsl
imul
dec
mov
push
ret
fmuls
inc
mov
enter
pop
add
lret
or
push
or
imul
add
ret
jnp
xor
insl
inc
mov
push
aaa
sbb
dec
jne
cmp
jl
call
push
and
movsb
dec
addr16
pop
or
aam
lock
in
out
mov
cmp
or
push
jge
sbb
rcrb
rcr
cmovb
and
push
fcompl
je
loopne
fs
or
adc
in
sbb
es
je
cmp
sbb
inc
push
add
in
adc
mov
lret
shlb
call
and
or
add
ret
out
inc
cmp
mov
outsl
adc
popf
mov
add
sbb
fldl
and
daa
jns
call
add
add
inc
dec
cmp
xlat
test
or
nop
sub
xchg
and
cmpsl
or
insb
js
dec
and
cltd
inc
dec
sahf
hlt
pop
add
mov
add
je
cs
movzbl
xchg
outsl
inc
pop
jnp
mov
dec
fstps
shr
adcl
scas
xorb
dec
push
jl
mov
lods
pop
test
sub
pop
pusha
push
add
dec
test
pop
add
cmp
pop
jnp
sbb
outsl
sub
add
loopne
or
lahf
push
dec
mov
add
or
sub
dec
enter
cmp
or
fildll
insb
push
mov
adc
pusha
movsl
pop
pop
adc
adc
fwait
add
jo
mov
add
adc
addr16
add
rcrl
pop
orb
push
dec
xlat
loop
xor
iret
inc
mov
xchg
mov
dec
std
movsl
outsl
sub
aaa
incb
test
mov
sbb
or
je
ljmp
mov
mov
leave
push
faddp
cmpsl
mov
jle
mov
pop
or
inc
lea
ret
push
inc
add
mov
test
pushf
data16
sbb
fidivrl
mov
lods
movsb
or
pop
sarl
shll
jl
and
das
add
fwait
sti
mov
repz
movsl
mov
sbb
cltd
pop
js
mov
mov
gs
aaa
mov
test
ret
push
sub
mov
push
mov
inc
pushf
nop
fadds
ret
push
ret
inc
sbb
push
daa
mov
pusha
lods
add
aas
aas
movl
mov
pop
mov
lea
cmc
or
inc
add
adc
inc
lods
dec
stc
in
shll
rcrb
xchg
mov
push
mov
gs
popf
adc
adc
jo
add
sbb
out
lret
lea
aaa
mov
sti
mov
sub
pushl
cmpb
jp
mov
es
imul
add
jo
nop
pop
jmp
outsb
and
int3
loop
adc
test
cwtl
std
fistpl
lds
cmp
sti
dec
sub
xor
inc
cmp
into
jne
jp
xor
inc
xchg
mov
jbe
int
stos
in
adc
push
push
cmp
cmp
add
jbe
jne
xchg
notb
jne
enter
std
fcoms
mov
cmp
mov
dec
mov
lret
or
clc
stc
and
cmp
add
xchg
loop
loope
xchg
loop
xor
ds
pop
mov
inc
movzbl
and
dec
or
add
inc
mov
inc
fidivs
js
fsubrs
lea
ds
cmp
je
xorb
dec
aam
inc
imul
jb
mov
xchg
cmpb
rcrl
int
mov
jbe
fimuls
pop
push
push
and
pushl
fcomps
std
pop
inc
pop
cmp
rorb
sbb
adc
in
sbb
lods
mov
sbb
jmp
push
xchg
data16
dec
mov
adc
notl
rcrl
ret
adc
pop
sbbl
les
insb
inc
xor
xor
test
mov
and
je
mov
rolb
icebp
jbe
test
mov
push
and
sub
dec
or
pop
lea
jne
cwtl
pop
jb
mov
test
add
in
lret
xor
mov
pop
add
jle
lods
jno
ret
and
sbb
sub
roll
or
inc
mov
fdivl
lock
or
sub
cld
gs
inc
sbb
and
and
mov
ljmp
inc
in
mov
dec
in
hlt
inc
xor
cmp
cld
mov
test
enter
xchg
mov
in
add
inc
mov
shl
cwtl
cmp
push
cmpsl
cmpsb
push
fsub
das
add
jg
aam
or
pop
fs
push
add
in
and
push
das
adc
cmp
into
enter
push
ret
bound
add
jnp
jne
cli
shl
fwait
shl
sbb
xchg
xchg
and
int
or
fnstcw
push
xor
or
add
xchg
aaa
or
add
xchg
cwtl
adc
inc
add
and
push
jo
xchg
mov
out
stos
cmp
mov
mov
das
xchg
sbb
and
mov
xchg
mov
xorl
insb
jne
das
mov
sbb
mov
addb
lea
mov
inc
scas
pusha
dec
cmp
sbb
cmp
ds
push
add
push
pop
sub
mov
dec
movsb
pop
jb
push
insb
imul
in
pop
pop
sub
sbb
jl
es
xchg
adc
add
sub
loopne
push
movsb
xchg
or
ja
adc
adc
xchg
or
lahf
dec
or
stos
cmp
sub
test
and
or
outsb
in
mov
or
sbb
lock
jmp
cmp
pop
mov
popf
popf
dec
or
adc
mov
mov
xorl
push
rcr
adc
subl
mov
lds
in
cmp
cmp
test
pop
sub
inc
add
xor
xchg
adc
addb
bound
jne
jo
mov
in
xchg
mov
stc
push
dec
clc
les
lods
cmp
lret
fsubrs
sub
inc
test
js
dec
fdivr
cmp
aad
ret
jg
mov
imul
aam
stc
push
or
push
add
fisubrl
jl
xchg
lea
rcll
cli
pop
cmpsl
mov
jmp
out
pop
jne
lret
and
aaa
sub
jge
test
scas
out
ja
jg
jg
adc
mov
rcrb
xor
pop
ret
cmp
leave
jg
stos
je
imul
bound
shll
inc
inc
jmp
pushf
push
fisubrs
and
lea
inc
cmp
xchg
mov
and
loopne
inc
js
push
test
shl
sub
xlat
cltd
adc
mov
or
mov
mov
stos
arpl
pop
mov
add
test
push
add
push
mov
inc
xor
pop
lret
sub
ds
xchg
lock
jecxz
in
and
mov
xor
or
popa
cmpsl
aam
pop
in
mov
repnz
ss
add
dec
fcmove
jb
enter
fstl
int
insl
fcoms
je
enter
push
outsl
sbbb
or
pop
cmpb
scas
test
and
sub
push
cwtl
fcoml
xor
pushw
addr16
cs
push
faddl
adc
stc
rol
pop
or
enter
int
jmp
in
add
imul
push
insb
and
push
xchg
inc
loop
ret
les
je
push
sub
sub
mov
sub
dec
in
xchg
mov
dec
clc
or
je
addl
or
jle
sub
sub
in
js
mov
ret
and
and
fisttpl
loop
cltd
push
mov
enter
into
jge
out
jle
xor
sub
push
sub
shrb
shrb
cs
stos
test
and
jo
sbb
xchg
scas
adc
and
addl
jge
dec
dec
inc
and
lds
or
pop
nop
push
jp
mov
scas
and
push
or
xor
clc
lahf
je
inc
dec
xchg
mov
or
ljmp
inc
xor
test
in
xchg
lea
xchg
pop
add
mov
jns
fists
insl
cmp
jl
int3
insb
icebp
push
mov
cmpsl
push
loope
xlat
xor
dec
and
clc
sarb
dec
add
xchg
add
sub
pop
cmp
sub
data16
in
dec
mov
repz
in
jg
push
addr16
jne
jbe
inc
mov
mov
jle
imul
loope
sbb
inc
or
lea
cld
dec
ja
cmp
repnz
and
mov
xchg
rorl
ret
rcr
mov
jmp
subb
adc
cmp
or
rorb
inc
cmp
call
out
or
cmp
test
xor
loope
mov
pushf
push
xor
sahf
loopne
xlat
loop
test
xchg
test
loopne
pop
cmp
mov
shr
cmp
jbe
add
shl
outsb
fadds
mov
or
out
and
sar
add
inc
push
ja
inc
push
shlb
aaa
and
nop
cmp
sbb
inc
pop
adc
jb
xor
adc
inc
mov
mov
add
adc
adc
mov
addb
adc
pop
adc
push
and
orb
and
xor
adc
add
mov
mov
jge
lea
sbb
scas
xchg
int
or
jb
push
subl
add
out
xor
xor
loop
test
add
push
imull
xor
push
in
mov
lahf
nop
mov
fs
xor
out
stos
and
jecxz
sub
dec
fcomps
xor
adc
add
cmc
and
inc
out
push
lret
cmpsl
pop
pop
adc
int
mov
adc
and
xor
add
ljmp
sbb
and
sub
call
adc
mov
lcall
sbb
dec
adc
lock
add
pop
insb
addb
ret
mov
sbb
and
sub
add
mov
mov
fmuls
xchg
ja
fidivs
sbb
pop
add
loopne
pop
inc
mov
or
push
add
push
or
jns
jle
and
push
or
jl
push
jmp
and
ds
push
or
cmpl
test
sbb
mov
xchg
push
aam
aad
lret
shrb
je
inc
add
push
scas
or
pop
add
pushf
jo
cmp
es
fiadds
add
push
inc
sbb
or
add
sub
outsl
cmp
aas
out
jge
or
push
push
fidivrs
orl
adc
or
mov
and
sub
jno
mov
push
dec
xor
mov
imul
int3
mov
es
shrb
out
adc
mov
push
in
jl
mov
test
loopne
adc
xor
adc
das
je
dec
cwtl
push
add
rcrb
inc
outsl
daa
cmp
sbb
mov
test
push
sbbb
xchg
add
cmp
iret
movsb
adc
outsb
push
xor
clc
and
je
call
leave
inc
mov
subl
xor
sub
and
lods
jbe
inc
sub
cmp
sub
push
cmc
fcmovb
repnz
sbb
dec
mov
push
clc
pusha
mov
dec
bnd
add
xchg
sbb
pop
and
jb
inc
push
pop
sbb
inc
loope
je
enter
dec
rolb
pop
es
in
dec
xchg
iret
xor
mov
daa
dec
add
lret
sbb
test
inc
mov
mov
inc
pusha
and
mov
mov
nop
daa
jo
pop
mov
imul
push
cwtl
sub
jae
xor
push
test
int
mov
push
movsb
test
xchg
fldcw
lods
dec
mov
push
xor
push
push
mov
les
or
imul
mov
mov
jne
movsb
dec
jp
imul
pop
insb
push
call
int3
call
jge
add
lock
or
mov
ss
fxtract
sub
add
loop
ret
or
ret
repnz
clc
daa
dec
push
lock
push
mov
dec
lcall
xor
pop
loopne
aad
sub
add
sbb
out
shl
fisubrl
dec
mov
sub
xchg
xchg
sub
mov
and
dec
mov
dec
mov
push
xchg
xchg
add
sub
loopne
xchg
or
add
push
insl
sub
mov
or
inc
movsb
into
std
jmp
imul
cmpsb
dec
pop
int3
ss
mov
xor
call
add
icebp
or
dec
add
push
lods
mov
push
test
xchg
pop
inc
test
aaa
outsl
and
cmp
dec
mov
xchg
and
ss
mov
push
dec
push
pop
bound
or
or
pop
inc
mov
xchg
push
into
add
mov
sbb
pop
adc
inc
and
jmp
in
test
xchg
je
xor
icebp
shl
mov
inc
push
pushl
inc
adc
add
in
jo
xchg
or
xchg
adc
pop
and
mov
pop
push
mov
pop
adc
rsm
fsts
arpl
dec
cmp
in
rolb
notl
dec
cwtl
adc
pop
dec
adc
mov
add
pusha
xor
dec
stos
xchg
adc
shl
mov
cmp
je
jp
rorl
loop
test
dec
xchg
cmp
je
jbe
inc
mov
push
xor
mov
push
or
and
sbb
in
fmul
xor
js
jmp
sbbl
nop
nop
shlb
xor
pop
mov
fsts
cli
xor
frstor
lret
xor
xchg
xchg
jmp
and
pushf
loopne
inc
cli
push
int3
jne
push
mov
andb
pop
push
fstpl
lds
popf
mov
insl
loopne
movsb
nop
adc
call
sbb
mov
outsl
mov
dec
rclb
inc
js
leave
in
xor
or
lods
mov
in
dec
push
or
loopne
add
or
lds
dec
fsubrl
inc
push
stos
dec
loop
mov
lret
and
hlt
push
insl
cmp
dec
inc
add
sub
sbb
pop
jbe
enter
fidivl
clc
sub
push
mov
inc
push
push
in
lahf
sbb
push
cmpl
adc
mov
inc
imul
or
inc
mov
xchg
push
cmp
xor
clc
push
lock
hlt
sbb
inc
pop
add
sub
push
daa
jge
sub
int3
sub
inc
sub
push
add
push
les
or
mov
xor
xchg
push
sbb
xchg
push
and
push
dec
cmpsl
inc
and
dec
lods
dec
push
xchg
loope
loop
and
lds
jo
or
xchg
dec
outsb
insb
mov
push
pop
xchg
ss
adcb
push
sti
out
mov
or
sub
jo
pop
inc
inc
lcall
mov
std
cs
add
ja
mov
mov
add
bound
sub
xorl
jne
dec
popa
fsubs
ret
jl
xor
enter
xchg
in
loop
cmp
dec
pop
add
xor
dec
stos
clc
sbb
push
or
lret
or
sarl
add
ja
push
xchg
stos
mov
test
sub
test
fstpt
cmp
test
loopne
inc
arpl
xchg
fimuls
popf
lock
in
push
push
and
scas
xor
int3
mov
inc
mov
cwtl
push
xchg
sub
iret
rclb
push
mov
push
add
cmpsb
sbb
incl
or
push
rclb
push
movsb
mov
add
stos
in
roll
jmp
mov
les
jns
roll
add
push
xor
fdivrl
add
inc
data16
in
push
repnz
pop
ret
or
add
mov
enter
hlt
out
add
movb
xchg
test
mov
mov
lods
push
mov
inc
or
push
jge
and
cmpl
xchg
xchg
sub
mov
lret
sub
cmpsb
cli
pop
cmp
add
add
mov
lea
popf
push
shlb
push
xor
inc
add
adc
dec
sub
dec
pop
xor
jle
pop
xchg
pop
lock
or
scas
es
sbb
push
jnp
sbb
out
das
push
jecxz
lret
loope
push
and
sbb
pop
jbe
cmp
pop
push
outsl
push
push
jmp
dec
adc
push
push
pusha
dec
ja
sarb
adc
mov
cmp
mov
sbb
inc
cmpsb
jbe
push
test
mov
test
lods
lea
push
inc
adc
and
lds
mov
adcl
push
rorb
test
or
dec
and
xchg
push
sti
je
push
inc
shl
pop
jecxz
adc
push
mov
add
and
xorb
jbe
cltd
jmp
sbb
push
xchg
mov
fsubrl
daa
jo
cmp
sbb
push
inc
add
or
push
adc
add
mov
or
pop
jnp
mov
lock
and
iret
cmp
xor
mov
xlat
jl
add
adc
or
dec
repnz
xchg
push
push
stc
pusha
or
push
ret
xor
or
pop
add
mov
mov
insb
sub
lret
add
cmp
sahf
or
xor
push
pusha
sub
cmp
jns
push
push
xor
jo
das
add
jo
or
adc
jo
pop
dec
xor
popa
int3
call
mov
dec
inc
push
mov
mov
fs
add
enter
rcl
jmp
pop
adc
and
int
popa
addl
sahf
call
arpl
jge
adc
test
xor
arpl
rorl
inc
movsl
rcrb
mov
jae
inc
adc
movsl
or
movsl
sub
push
sub
add
js
pusha
enter
push
add
ss
adc
inc
loopne
repz
or
sbb
add
in
push
sbb
mov
mov
in
pop
mov
jle
push
mov
mov
stos
icebp
cs
xor
ret
repnz
stos
push
rolb
dec
cmc
ret
imul
cmpsb
imul
mov
test
faddl
adc
mov
xchg
jo
sub
xchg
sbb
pop
addr16
jle
mov
push
fdiv
cmp
sbb
out
lret
fdivrl
adc
cmp
and
arpl
xchg
ret
mov
fildll
aam
sbb
adc
jo
pop
lea
sbbl
out
xor
dec
pusha
mov
rol
mov
ror
xor
shr
xor
std
ljmp
es
mov
rol
xor
shr
xor
add
add
add
mov
and
ljmp
ret
jae
or
and
xor
insb
das
fiaddl
sti
add
aam
sub
stos
add
scas
push
mov
stc
lcall
cli
fisubrs
jge
xor
and
push
in
fsubs
fiaddl
lret
xorl
repnz
push
lcall
mov
fmull
pop
push
or
push
mov
in
rcl
add
add
adc
or
add
call
dec
in
rcl
call
call
dec
sarb
xor
ljmp
lcall
add
push
xor
dec
push
mov
cmpsb
imul
push
nop
call
in
and
push
cmp
ret
or
bound
push
loopne
int3
enter
les
sbbl
fadd
xor
das
push
cs
cltd
call
dec
rcll
shl
call
in
loopne
lcall
cmp
sbb
xor
pop
xchg
xorl
jo
int3
mov
add
in
push
dec
sti
in
in
xor
and
and
out
iret
or
dec
stos
popf
add
and
xor
xor
push
test
cmp
or
cmp
subl
push
jo
ficoms
add
mov
sbb
fucomip
loop
dec
adc
push
loop
mov
fimull
mov
filds
cltd
dec
inc
fadds
pop
jbe
xor
scas
push
call
lretw
mov
clc
jp
push
and
add
gs
fdivs
add
push
cmp
test
clc
popa
jle
push
lret
inc
mov
adc
mov
xchg
clc
and
popf
push
jo
cli
stos
adcb
aam
aaa
cmp
lcall
call
in
push
inc
or
add
mov
and
jge
rclb
shlb
rorb
shll
sub
dec
loopne
add
xor
xchg
cld
jo
add
push
nop
add
sahf
dec
push
and
and
rorb
dec
xor
mov
jb
pusha
push
adc
dec
shll
dec
cmp
add
and
push
push
pop
and
inc
stos
fs
push
stos
mov
push
add
xchg
aaa
xadd
or
xor
pop
insb
pop
add
pop
test
lret
adc
inc
pusha
jo
push
mov
jl
ret
or
mov
rolb
dec
sahf
mov
xchg
fs
cmpl
je
test
dec
dec
icebp
stc
ljmp
fsts
xor
xchg
inc
dec
subb
dec
idivb
xor
rorl
adc
adc
sbb
jo
adc
in
add
and
clc
sub
sub
outsl
add
sbb
or
sbb
shrl
mov
movb
inc
mov
pop
push
lea
add
pop
adc
add
sub
popf
ss
data16
xor
push
lock
pop
pusha
adc
enter
add
pop
jmp
or
loop
rol
or
mov
add
dec
clc
adc
cltd
in
mov
inc
jae
mov
sub
icebp
xor
or
mov
adc
add
sub
imul
mov
add
dec
or
mov
dec
jne
pop
or
add
mov
mov
xchg
sub
mov
cmp
jbe
or
ljmp
add
adc
insl
pop
sub
jae
push
pop
fadds
out
xchg
xchg
pusha
rep
or
mov
aad
shrl
push
pop
loopne
inc
out
fcomip
ror
mov
notl
mov
jno
jle
mov
xor
rcr
mov
add
cmpb
lcall
dec
out
xchg
les
add
xchg
lea
je
or
mov
fdiv
cmpsl
sub
data16
push
xchg
add
or
test
xor
or
add
movsl
xchg
loopne
ret
push
pop
fmuls
nop
mov
and
inc
sbb
stos
inc
out
xchg
loope
inc
mov
mov
pop
adc
and
mov
push
or
mov
imul
push
gs
mov
andl
add
mov
adc
xchg
or
or
xchg
mulb
add
dec
add
xor
mov
dec
sbb
and
jo
and
dec
in
loope
inc
test
sbb
or
push
push
pushf
mov
adc
fmuls
or
pusha
imul
iret
ljmp
adc
dec
sub
and
xor
inc
jl
mov
ret
push
mov
dec
data16
cmp
and
sub
orb
mov
loope
push
subl
test
inc
add
push
or
adc
push
sbb
iret
inc
std
jno
pusha
push
mov
loopne
jnp
add
adc
cmc
mov
cmp
loopne
jge
inc
cmp
sub
cmp
aaa
xchg
sbb
mov
push
sub
add
and
dec
add
xchg
xor
or
dec
add
add
cwtl
ret
jle
es
movsb
test
mov
push
cmp
inc
pop
movsb
push
mov
pusha
pop
enter
xchg
or
imul
and
adc
xor
cmpl
or
hlt
sbb
scas
and
inc
sub
add
ljmp
mov
pop
jg
imul
jmp
xor
inc
and
mov
jno
icebp
pop
inc
sub
jns
lcall
lods
inc
or
repz
jne
or
push
pop
sbb
and
mov
and
fcomps
jbe
sahf
sbb
mov
pop
mov
dec
mov
in
out
add
mov
sbb
and
sti
test
add
cli
inc
add
and
mov
jmp
cmp
add
sub
adc
cmpsb
cltd
dec
mov
or
and
mov
mov
pop
pop
ljmp
and
insb
loopne
or
mov
pop
inc
mov
loope
cmpsl
adc
inc
cmp
testl
xorl
push
and
or
mov
add
and
test
mov
xchg
cmp
lret
mov
aas
jl
dec
mov
inc
or
pushl
js
xor
push
push
xlat
xor
bnd
cs
sbb
push
dec
sbb
dec
fbld
jae
mov
and
cmp
adc
sub
push
jbe
adc
sub
dec
ret
inc
scas
ljmp
pop
cmp
xchg
movsl
es
and
call
xchg
xchg
dec
pop
mov
xchg
ret
xor
sbb
lods
and
xor
push
push
sub
orl
xlat
xchg
lea
xchg
jbe
xorl
pop
push
mov
jmp
mov
mov
dec
repnz
movsl
out
stos
inc
notb
jne
test
push
out
and
leave
mov
in
or
aas
or
pop
mov
in
add
sbb
cmp
mov
cmpb
pop
or
push
cmp
xor
cmp
sub
fistl
push
pcmpgtd
adc
dec
or
mov
or
cli
dec
push
dec
inc
lcall
and
ret
mov
adc
test
lock
mov
cli
jmp
push
push
and
mov
mov
add
es
jae
push
ret
mov
jg
ljmp
push
push
pop
and
mov
adc
mov
imul
insl
sub
xor
fucom
cmp
mov
fidivl
and
dec
and
push
imul
lock
sbb
pop
das
pop
fildl
pop
cmpl
idivb
cli
pop
stos
addb
xor
shlb
lods
and
jne
rcl
add
or
pop
sbb
adc
xchg
mov
das
mov
popf
xchg
shlb
and
jne
call
mov
add
pop
inc
jle
and
and
cmc
shl
and
shl
inc
mov
notb
add
sarl
scas
mov
sub
lret
jbe
sub
add
add
or
push
imul
pop
mov
push
call
dec
loopne
out
test
jne
repnz
adc
pop
sub
mov
out
or
testl
sbb
xchg
push
sub
mov
mov
mov
push
push
ja
pushl
cmp
jne
pushf
inc
push
and
ret
lcall
in
or
repnz
xchg
cs
sti
cmc
xchg
mov
ficoml
or
sahf
push
xor
and
dec
js
add
insl
add
mov
add
and
les
inc
xchg
inc
test
inc
les
sbb
add
scas
adc
xchg
dec
mov
outsb
cmpb
ljmp
dec
xor
dec
pop
cmp
xchg
lar
jno
je
cmp
or
add
imul
and
add
mov
push
push
mov
push
dec
mov
leave
inc
push
sbb
dec
jp
add
bound
bound
dec
loop
sub
lret
dec
inc
les
add
pop
inc
aaa
inc
and
pusha
pusha
jmp
pop
bound
stc
ja
pop
lock
ja
ss
cmp
jb
mov
push
mov
adc
shl
jns
inc
mov
in
or
bound
inc
push
in
in
mov
push
jmp
mov
lods
in
jno
loop
lds
push
stos
jae
add
cs
test
cmp
mov
dec
xlat
or
xor
and
enter
lcall
scas
popa
out
xor
pop
ret
int3
jmp
lret
movsl
or
sarb
cmp
xor
mov
pushf
dec
add
jnp
dec
sub
add
fs
out
adc
mov
mov
decl
push
inc
cmp
mov
jl
inc
daa
fucomp
fldl
lea
call
sub
mov
mov
push
nop
nop
sub
movzbl
gs
xchg
cwtl
xor
mov
jne
add
or
ljmp
addl
pop
repz
mov
xchg
sarb
or
hlt
pop
imul
adc
subl
sub
test
filds
jge
je
popf
dec
add
jle
push
pop
lea
mov
nop
inc
xor
inc
cmp
or
sub
test
aam
divl
fisttpll
aaa
ret
push
xor
cmc
add
lock
adc
loopne
aaa
adc
daa
test
jmp
mov
xor
sbb
jecxz
push
ss
xchg
aas
add
xor
inc
mov
das
stc
xor
fwait
loop
push
push
jl
cltd
or
sbbb
sub
les
popa
sbb
imul
aam
jmp
out
lahf
and
rcl
mov
cmp
rorb
out
mov
decl
pand
cmp
cmp
push
lea
stos
bound
movntps
pop
les
comiss
push
mov
in
inc
xchg
mov
pop
mov
xor
fs
mov
mov
adc
ret
mov
mov
decb
push
loope
and
add
mov
ret
mov
shr
shl
add
xadd
mov
loop
xor
mov
mov
push
mov
movsw
movsb
mov
cmc
mov
arpl
mov
inc
mov
les
iret
push
fidivrs
popa
add
adc
add
shl
call
fisubrs
dec
sub
add
lahf
sbb
add
adc
sbb
xchg
lock
sub
add
push
inc
push
xchg
sub
mov
and
sar
mov
inc
push
ret
sbb
aas
inc
and
sahf
mov
imul
sbb
mov
sub
mov
dec
dec
or
std
jl
mov
das
mov
xor
lahf
add
or
ret
icebp
or
inc
cmpsl
xchg
lock
rcl
inc
push
daa
cmp
adc
in
inc
sub
gs
mov
and
sub
xchg
mov
cmp
data16
push
hlt
ljmp
mov
adc
or
adc
mov
roll
or
add
push
outsl
push
mov
and
insb
sbb
arpl
xor
orl
and
sub
add
mov
ficomps
mov
push
movsl
sbb
jo
inc
add
sub
jo
icebp
divps
nop
cmp
bound
jb
fsubr
or
out
js
es
out
rcrb
xor
mov
xchg
nop
int
fimuls
filds
add
mov
add
jle
adc
push
out
jl
or
or
jecxz
jmp
push
js
jbe
mov
jmp
das
cmp
sub
cmp
dec
cli
cmp
cmp
gs
mov
add
adc
out
mov
pop
dec
jb
stos
shrb
aam
mov
pop
xchg
lret
push
ret
adc
and
jecxz
add
cmp
xchg
inc
inc
adc
fisubrl
cmc
mov
xlat
mov
push
sbb
int3
xchg
filds
push
jae
loope
fcomi
add
vpsadbw
cmp
or
adc
add
dec
faddp
xchg
xor
or
inc
ss
push
adc
sbb
mov
popa
xor
mull
lds
pop
pop
ret
shl
ret
mov
sbb
pop
jmp
xorb
rorb
lea
enter
cmp
fisttpl
sub
push
pop
andb
fadds
frstor
scas
fsubrl
in
mov
rolb
sbb
or
add
mov
cmp
lods
adc
repnz
or
or
ja
popl
push
fildll
pop
outsb
sbb
int
sub
jecxz
dec
mov
stos
je
sub
cmpsl
push
repz
xor
inc
or
loope
es
and
add
pop
inc
mov
adc
aam
adc
mov
fnsave
push
gs
adc
cmp
add
ret
pop
cmp
and
mov
filds
adc
mov
mov
bt
jbe
out
sbb
sbb
mov
js
mov
es
adcl
repnz
aad
enter
adcl
shll
or
xor
ret
daa
shrl
sbb
mov
dec
cs
pop
xchg
in
push
das
jg
xor
or
ljmp
inc
sub
daa
jbe
rol
push
add
pop
push
loope
jb
out
add
jnp
adc
mov
pop
push
rcll
nop
popa
insl
jne
adc
bound
inc
jg
push
lods
push
pop
dec
adc
sub
fcompl
push
rcrb
or
add
push
lods
test
loopne
adc
imul
cmpl
jne
sbb
aad
mov
fisubl
add
inc
add
add
xchg
ss
push
xor
jmp
mul
inc
mov
data16
out
cmp
jle
es
rcrl
and
fstpt
inc
cmp
in
adcb
inc
bound
inc
inc
mov
jne
push
add
cmp
or
or
xor
push
sti
cmpsb
xchg
add
cmp
or
sub
stos
xor
sbb
cmp
pop
imul
nop
sub
in
push
arpl
inc
adc
je
std
ret
mov
or
jne
shrb
sub
insb
inc
or
or
mov
sahf
dec
jo
jne
sarb
add
cmp
add
aas
or
push
xor
testb
jne
addl
nop
or
mov
add
test
lret
fmuls
pop
stos
lods
insb
je
andb
adc
jmp
xor
add
fdivr
stos
lret
jne
and
mov
movl
xor
sub
mov
pop
inc
adc
sub
push
sarl
sbb
dec
push
push
sub
mov
testb
je
cmp
mov
push
add
push
add
cmp
rol
add
cmpsl
imul
jne
push
adc
add
or
fstp
add
mov
sub
cmpsb
cltd
sbb
inc
xor
sbb
cltd
lret
outsl
mov
mov
adc
adc
inc
add
pop
cmp
sbb
xor
jg
sbbl
in
shlb
and
icebp
jmp
pushf
sub
jge
and
fdiv
dec
ret
adcl
inc
pop
mov
jne
jg
add
xorl
dec
adc
pusha
and
dec
hlt
and
mov
std
mov
add
mov
push
sub
add
inc
pusha
movsl
or
test
hlt
push
push
mov
insb
data16
leave
or
inc
mov
push
mov
cmpb
or
test
inc
xor
mov
sbb
pop
xlat
stos
and
pop
xorb
adc
mov
and
scas
rcrl
std
add
mov
inc
lock
rorl
sbb
mov
cmp
sbb
or
cld
push
mov
inc
fiaddl
pop
cmpb
aas
nop
sbb
leave
jmp
lea
push
sbb
cwtl
dec
adc
cmp
or
inc
loopne
or
lret
into
jne
data16
sbbb
or
adcl
fdivp
cmp
sbb
jmp
push
xchg
push
rorl
or
enter
push
inc
test
rcrl
mov
daa
leave
loopne
pushf
jae
int3
out
std
cwtl
nop
lcall
xor
sbb
mulb
sub
cmp
mov
jmp
pop
cmp
inc
in
pushaw
jb
hlt
repz
jg
jne
cmp
jne
push
xchg
sub
inc
popf
and
pop
repnz
pop
cmp
inc
insl
xchg
mov
inc
xchg
or
dec
lahf
loopne
jmp
cltd
add
les
xchg
mov
xor
loopnew
in
adc
test
cs
xor
mov
orb
add
sub
mov
ja
sbb
lcall
jns
sub
jmp
push
testb
add
sub
sub
sbb
push
mov
mov
aaa
pop
add
pop
cltd
push
and
jo
xchg
add
fcompl
adc
pop
fwait
mov
add
and
clc
dec
add
xlat
adc
dec
push
subl
and
and
push
push
mov
and
jae
loopne
loop
int3
jne
jmp
dec
rorl
ror
add
jg
cmp
je
mov
add
neg
xor
and
add
and
ss
mov
jle
rolb
add
jle
fs
sbb
andl
or
mov
lcallw
add
int
pushf
mov
and
nop
inc
lcall
and
in
push
pop
fimull
and
fisttps
ja
cmp
lods
add
stos
adc
cmp
sbb
add
sub
adc
inc
int
push
add
popa
in
test
xchg
lods
and
or
add
pusha
insl
xchg
cmp
add
cld
pusha
dec
add
and
adc
outsb
test
cmp
in
ds
in
js
push
jge
mov
push
loopne
cmp
mov
loopne
ljmp
and
sub
pop
adc
les
add
xchg
loopne
ljmp
cltd
sbb
aad
inc
mov
ret
adc
mov
dec
fldt
popa
pusha
and
cmpb
cwtl
push
push
and
scas
xor
and
mov
push
addr16
add
xlat
shrl
ss
add
dec
sbb
push
lods
lret
stos
mov
sub
push
pop
push
mov
in
or
dec
ficoms
or
adc
test
push
aas
pop
pop
test
jmp
lods
push
adcl
sbb
inc
dec
dec
pop
jns
andl
sbb
dec
xchg
fs
in
mov
xor
push
push
clc
add
adc
bound
add
clc
in
popf
ja
stc
push
mov
mov
aaa
adc
cmp
inc
inc
data16
and
xor
adc
aaa
cmp
push
jl
pop
push
es
cmp
adc
jo
sbbl
addr16
out
add
ja
adc
dec
push
ds
jae
push
into
inc
and
adc
or
xlat
xor
cltd
scas
add
pop
enter
sub
xor
rep
mov
cwtl
repz
mov
addl
push
frstor
jmp
xor
pop
pusha
xchg
mov
push
cmp
scas
mov
or
jecxz
add
pop
mov
shl
cmp
or
add
data16
jno
sbb
sbb
nop
pop
adc
add
lea
inc
cmp
jnp
scas
adcl
gs
inc
push
out
jb
fisubrs
addl
cs
sub
es
mov
adc
push
mov
je
clc
push
lcall
rolb
imul
je
sbb
mov
jo
mov
pop
aad
jl
movsb
jbe
push
add
call
push
adc
xchg
je
inc
inc
inc
lcall
jb
cmp
pop
loopne
lods
jae
lahf
sub
dec
call
push
dec
ret
mov
sub
pop
add
mov
ja
cmp
sub
enter
divps
push
sub
icebp
inc
daa
xor
push
in
cld
cmp
push
out
push
push
or
add
and
jne
push
dec
jp
sub
out
add
in
or
and
js
ret
jmp
push
loopne
lcall
shll
dec
adc
inc
mov
and
leave
adc
inc
or
mul
jne
je
jmp
or
push
dec
psrld
mov
sbb
mov
xor
or
add
pusha
xchg
sbb
xor
fcmove
add
sub
and
dec
stc
push
adc
enter
xchg
in
sbbb
xor
icebp
jnp
mov
bound
dec
mov
movsb
loopne
mov
and
pushf
es
push
cmp
fdivl
dec
inc
pop
pop
and
pop
mov
gs
loope
daa
sbb
mov
scas
adc
inc
and
push
inc
lock
add
and
dec
adc
cmp
cmp
and
add
outsl
addl
inc
dec
push
add
dec
cmp
pop
fdivrl
xor
push
xor
xchg
add
pop
stos
scas
and
push
pop
in
les
cs
jnp
lcall
push
push
or
adc
push
or
mov
mov
and
outsb
push
push
icebp
rolb
dec
sbb
and
push
outsl
cmp
add
cmp
push
rcr
inc
adc
test
sub
sub
mov
shll
mov
jnp
andl
les
je
mov
jno
out
xchg
or
pusha
jne
jae
daa
pop
mov
jbe
inc
das
outsb
add
and
sbb
dec
and
jno
int
jp
mov
shlb
add
add
btsl
test
and
call
lock
cmpl
js
xor
clc
push
mov
dec
add
shrb
mov
out
and
xorl
pop
jle
add
or
push
or
or
scas
fstpt
sbbb
cmp
cmp
mov
and
mov
jg
fs
test
movd
pcmpeqd
fsubp
sub
push
clc
jae
xor
test
xor
cli
rcl
lret
test
mov
jl
and
popa
sbb
test
xor
jg
outsl
out
je
ret
adc
jnp
mov
mov
fidivs
cwtl
mov
add
adc
push
add
adc
outsb
sarl
add
rcrl
ret
mov
mov
pop
pusha
addsd
int
add
out
sub
ret
adc
dec
sbb
dec
dec
fistpl
dec
and
cmp
dec
imul
push
jb
xchg
stos
add
dec
or
push
and
test
mov
orl
js
adc
pop
call
aam
pop
xor
push
ret
jge
mov
pushf
dec
mov
pop
pop
xor
sbbl
mov
push
or
pushf
or
push
ret
jb
pop
add
or
add
fmul
mov
dec
jg
icebp
jb
neg
je
or
rorl
je
xor
jmp
loopne
add
or
cld
lret
sbb
stos
mov
dec
sbb
cmp
ljmp
xchg
das
cltd
lds
js
filds
int
faddl
xchg
push
push
mov
add
roll
jb
push
sbb
push
pop
and
pop
popa
mov
pop
pop
scas
push
mov
aas
sbb
inc
adc
or
rep
jmp
jmp
in
nop
sub
cmp
jb
insl
mov
enter
das
imull
dec
fnstcw
lea
push
push
sub
mov
push
pop
dec
mov
ja
mov
or
scas
adc
jl
int3
lea
dec
add
pop
pusha
push
movl
dec
cmp
cmp
jnp
fwait
or
push
orb
jo
jns
iret
repz
pop
mov
mov
call
call
pushf
out
sahf
hlt
hlt
clc
clc
cld
fdivrs
dec
adc
clc
fnstenv
mov
enter
pop
xor
cmp
andl
sti
and
mov
ret
push
sbb
lea
jl
cld
or
adc
std
cld
out
inc
xor
fimuls
pop
sbb
stc
sub
xor
js
mov
sub
out
add
dec
inc
fcomps
add
jbe
mov
jecxz
insl
pop
add
ljmp
mov
push
cld
push
add
sahf
or
sbb
aaa
xor
out
sahf
out
sbb
sbb
out
sahf
adc
adc
or
add
sub
out
int
push
or
push
and
add
stos
or
ja
dec
lods
adc
jp
and
jbe
mov
mov
dec
lahf
cwtl
daa
mov
add
jg
or
fbld
insb
or
mov
or
lcall
dec
adc
stos
mov
test
add
loopne
je
push
stos
add
xor
ja
sbb
mov
inc
shlb
push
mov
jmp
jp
je
mov
jmp
rorl
sahf
mov
data16
sarb
pop
xlat
fnstenv
lds
loop
sbb
nop
pop
add
sub
xchg
mov
dec
je
cmp
mov
dec
js
sbb
je,pn
cmpsl
out
adc
in
mov
or
sbb
call
push
or
popf
sarb
push
hlt
push
pop
rclb
push
inc
pop
inc
aaa
pop
sub
hlt
or
push
fcomi
arpl
outsl
adc
push
sub
add
iret
jne
xchg
jmp
push
test
sbb
test
rclb
add
push
jo
or
xchg
inc
push
xchg
aas
mov
sub
ficoml
mov
sar
mov
adc
jne
inc
cmp
dec
push
inc
sbb
je
dec
adc
and
pop
data16
repnz
push
adc
fadds
out
and
pusha
jmp
and
insl
inc
je
adc
inc
sub
pop
inc
inc
cmp
add
cmp
add
sbb
iret
or
arpl
dec
sahf
aaa
xchg
cmp
adc
cmp
loope
rcrb
popa
aam
loopne
in
es
or
mov
mov
sub
and
mov
mov
icebp
inc
and
push
daa
push
pop
adc
dec
inc
hlt
das
addr16
jmp
mov
sbb
pop
sbb
push
cmp
out
imul
sub
add
ret
out
jnp
inc
test
shl
shlb
dec
leave
sbb
sbb
insl
imul
rolb
cmp
mov
mov
jae
mov
rol
push
fmull
inc
cmp
aam
lret
jne
sbb
idivl
mov
out
es
or
sub
inc
andl
movl
lea
out
movl
sub
aaa
call
enter
rolb
popf
add
rclb
scas
or
cmp
je
add
in
pop
add
orl
adc
jle
rcr
stc
adc
pop
push
hlt
daa
lret
push
jl
loop
aad
and
das
shrb
leave
jne
dec
add
jge
js
mov
mov
or
jle
xor
cmp
insb
ja
xor
add
mov
push
inc
cmp
icebp
mov
jmp
xchg
dec
jge
mov
ja
into
and
dec
cld
shufps
lea
neg
mov
neg
xor
dec
cli
or
add
jmp
or
scas
or
xor
add
js
les
mov
fisubl
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
loop
ret
ret
adc
fsubl
or
imul
lods
adc
outsb
mov
enter
cmp
pop
or
call
sbb
mov
cmp
jb
lea
imul
mov
mov
test
je
cmp
jne
mov
push
cmp
int
fdivr
jne
es
jne
pushl
or
mov
aas
adc
push
dec
jmp
out
stc
jns
jmp
std
std
jmp
sahf
popf
cmp
jmp
fimuls
adc
adc
push
fistps
ret
jb
push
push
movb
shr
xor
rclb
jnp
adc
adc
lods
adc
or
testb
orl
adcl
jo
loope,pn
cmp
push
out
loop
inc
mov
xchg
stos
mov
aad
dec
std
or
inc
push
or
mov
cmpsb
xchg
leave
push
jnp
and
adc
xor
push
and
push
lock
pop
or
dec
lods
fcmovnb
dec
cld
pop
xor
cs
stos
add
add
fadds
subb
into
and
jp
mov
or
jg
add
mov
mov
dec
xor
loopne
aas
jno
or
push
push
push
popa
push
sbb
xchg
mov
rclb
fistpl
xor
stos
xchg
jmp
push
outsl
fildll
xchg
and
repz
jle
push
push
pop
inc
inc
in
div
jb
adc
sbbl
mov
pop
roll
out
xor
subl
sub
pop
adc
push
ret
arpl
mov
jo
pushf
sub
sub
lock
in
xor
sub
cmpsb
gs
xlat
adc
xchg
addr16
mov
or
push
mov
sub
gs
loopne
cs
outsl
adc
aam
mov
clc
or
push
loope
add
jp
add
mov
xchg
andb
mov
movsl
test
add
aaa
xor
leave
or
lods
push
mov
adc
jle
cmpl
ficomps
lret
and
roll
xchg
das
xor
xor
test
jmp
cmp
jne
orl
jmp
adc
jne
sub
jno
inc
nop
push
dec
testb
xchg
test
adc
jg
mov
mov
fmull
mov
xchg
out
outsb
outsb
or
and
adc
out
push
or
adc
dec
add
add
add
sbb
cmpsb
loopne
adc
lret
or
test
aas
xchg
lock
push
xor
sbb
xor
sub
cmp
ja,pn
xor
leave
cmp
jae
push
movsb
inc
ret
je
sbb
xor
inc
ret
dec
test
push
push
and
lods
inc
lcall
and
add
inc
cmc
mov
ljmp
add
push
cmpl
jne
test
es
mulb
mov
and
push
or
add
into
mov
mov
in
rolb
xor
orl
inc
xor
push
lock
cmp
add
dec
loop
sub
icebp
jmp
push
mov
fisubrl
xorl
sub
daa
push
push
add
cmp
sbb
les
jp
jge
data16
ret
clc
stos
mov
shr
rolb
xchg
jle
dec
or
adc
stos
aad
test
jo
or
out
test
push
xor
fsubr
push
setp
mov
jne
notb
inc
push
es
xchg
rcrb
andl
sbb
ret
push
adc
inc
pop
shlb
pusha
push
inc
decl
data16
sbb
inc
mov
clc
dec
and
dec
cmp
rorl
sbb
cmp
mov
incb
jle
inc
mov
xor
ds
xor
lret
dec
jmp
cwtl
add
loopne
sbb
xchg
adc
fidivrl
dec
in
in
fisttpll
aas
push
es
push
jmp
xor
sbb
adc
scas
mov
jne
dec
in
jno
lock
pop
sbb
fs
push
dec
push
inc
cli
sbb
movsb
ret
stos
and
xor
mov
mov
and
fs
jmp
and
pusha
inc
adc
mov
dec
ret
pop
cmp
movsl
xor
xor
sub
insb
push
jb
pop
jae
fwait
pop
xor
or
add
popa
fs
ljmp
xchg
sti
sbb
cmpsl
xchg
fidivs
sub
mov
mov
push
icebp
sbb
jo
mov
add
int
hlt
je
je
sub
jb
lea
push
adc
cwtl
sbb
in
dec
ss
add
sahf
mov
enter
popa
and
fwait
clc
xchg
mov
dec
add
fs
scas
and
add
pop
dec
xor
push
mov
or
movsb
push
lret
sti
jne
popa
mov
out
cmp
or
mov
insb
sbb
andl
lcall
pop
xchg
mov
and
dec
enter
xchg
push
push
sub
push
rcrb
pop
inc
rolb
inc
aad
add
dec
dec
or
jcxz
cltd
out
jae
sbb
fwait
data16
mov
push
sbb
lret
sbbl
and
icebp
add
sbb
ss
mov
fimuls
rcl
daa
cmpsb
ss
jge
or
or
loope
dec
and
sub
adc
mov
movb
adc
stos
add
leave
sub
iret
mov
inc
mov
add
ss
dec
test
and
or
imul
sub
adc
or
test
dec
sti
pop
cmpsb
ret
dec
pushf
adc
jno
loop
ja
loopne
xor
sbb
movsl
frstor
sub
sahf
push
pop
cmpl
mov
add
push
rcrb
shrb
push
adc
mov
aad
mov
popf
aaa
cs
decl
int3
push
and
jg
jl
shlb
push
ss
imul
call
jmp
pop
fiadds
rorl
in
cmpsb
popa
pop
es
repnz
cli
push
pop
or
pop
xor
aad
pop
jecxz
push
gs
or
mov
inc
push
xor
sub
mov
aas
sbb
and
push
pop
je
push
mov
inc
add
shlb
adc
ljmp
sbb
sbb
frstor
push
add
js
mov
mov
test
pop
dec
sarb
js
xor
mov
loopne
out
add
push
and
call
pop
aaa
inc
es
sbb
ss
imul
xlat
test
popa
mov
mov
cmp
je
push
out
inc
fsubl
push
cwtl
xor
sub
cld
mov
sbb
pop
push
and
xchg
xchg
cmp
sub
lds
inc
rcll
add
xlat
sbb
adc
aas
sub
dec
mov
mov
sbb
test
sbb
rolb
sub
jnp
and
cld
xor
mov
push
mov
cli
sub
mov
sbb
mov
lock
mov
mov
cmp
jne
mov
shlb
je
int3
mov
inc
ficompl
push
repz
add
add
pop
dec
and
nop
sbb
int
in
mov
pop
rolb
xchg
mov
imul
out
push
fstl
xor
fstpl
jmp
mov
inc
aad
add
repnz
pop
push
and
inc
cwtl
sbb
add
push
pop
pop
dec
pop
pop
sbb
sbbb
jmp
mov
push
push
daa
mov
mov
cld
mov
adc
mov
adc
jl
addb
addps
mov
sarb
movsb
ret
jp
and
lcall
in
xor
ds
mov
mov
jecxz
mov
pusha
or
jb
and
fucomip
or
pushf
testb
push
inc
mov
jb
enter
and
add
push
push
outsb
or
out
cmpb
jne
adc
mov
jl
or
add
xor
mov
mov
adc
ret
push
mov
mov
int
mov
out
jmp
cmpsb
push
and
mov
push
mov
int
rcrb
in
dec
or
xchg
cmp
xor
mov
and
inc
pop
mov
cmp
je
movzbl
add
sub
je
add
adc
lea
mov
sub
adc
imul
pop
insb
pop
add
add
iret
xor
daa
add
adc
popa
popa
and
jge
fs
add
jno
je
cs
lcall
enter
add
mov
xchg
pop
push
pop
dec
push
jns
jb
or
sbb
inc
sahf
or
dec
or
sub
or
sbb
inc
pop
or
pop
lcall
or
lret
add
lcall
enter
cwtl
push
push
and
and
ja
push
movq
adc
pusha
adc
sbb
pusha
fwait
sub
adc
mov
or
adc
repnz
push
out
adc
repnz
in
add
adc
adc
fmulp
add
cmp
cmp
push
push
mov
pop
xor
out
rcrb
sbb
sbb
sbb
cmp
lret
call
repnz
sbb
push
sbb
cmpsb
sbb
je
pop
sbb
enter
stos
jge
sbb
add
push
pop
and
roll
pop
jne
add
add
sub
cmp
faddl
mov
add
cmp
xchg
lcall
mov
repz
clc
mov
cmp
je
repnz
ficoml
sub
rol
lea
jns
shl
aad
cmp
sbb
addr16
xor
jbe
dec
addl
je
ja
inc
fsubrp
nop
adc
jb
mov
ljmp
jmp
jmp
push
push
and
in
in
out
repnz
inc
in
repnz
sahf
out
out
enter
jge
sbb
push
imul
lock
cmp
icebp
icebp
inc
sahf
xchg
add
repnz
mov
repz
pushf
lcall
or
in
sbb
pusha
fwait
mov
cmp
pop
jg
notb
repnz
idivl
fsubs
dec
in
std
clc
clc
clc
cltd
add
inc
push
adc
inc
stc
sbb
iret
in
cld
cli
cli
iret
jns
sbb
sti
sbb
stos
cld
xchg
aaa
jb
cld
cld
je
cld
push
pxor
sar
mov
xor
cmp
xor
cmpsl
mov
or
sub
add
rol
pusha
lahf
es
stos
xchg
fnstenv
or
shll
ret
push
push
es
jecxz
inc
fsubp
add
sti
in
in
pop
adc
mov
stc
daa
xchg
sti
mov
or
out
out
cltd
push
jno
sbb
call
xchg
mov
or
jmp
jmp
jmp
sbbb
in
repnz
push
cmp
cli
out
out
scas
xchg
add
out
cltd
push
lock
cli
push
cli
dec
in
rcrl
psubusb
repz
sar
jb
pop
push
stc
jb
imul
fstpl
pusha
pop
xchg
cmpsb
div
negl
fwait
cmp
sbb
xor
add
stc
xor
xchg
out
clc
cmp
lret
sti
sti
and
sbbb
in
mov
or
xchg
pusha
sbb
jge
dec
and
ret
test
inc
or
loop
push
jno
push
icebp
mul
pop
shl
sbb
jg
or
xchg
jno
sbb
out
out
xchg
mov
and
imul
imul
ljmp
idivb
cmp
pop
mov
xchg
idivb
insb
out
cmp
test
inc
repnz
and
cmp
add
sbb
dec
push
repnz
adc
jb
cmc
pop
xchg
cmc
mov
mov
pop
pop
xchg
cmpsb
jb
cmc
div
idivb
xlat
cmp
and
flds
clc
clc
jecxz
cmp
lock
hlt
les
jno
mov
xchg
hlt
pop
jne
inc
mov
inc
push
hlt
sbb
das
pushw
data16
out
jne
hlt
idivl
jo
sti
dec
sub
adc
ds
call
mov
push
loop
xchg
cmp
subl
xor
imul
shl
repz
repz
mov
and
sbb
pop
repnz
sbb
movsl
test
jne
cmp
or
sub
jo
sbb
mov
jne
cmp
repnz
orl
sub
loope
sbb
je
icebp
js
divb
xchg
cmp
xchg
icebp
jb
sbb
icebp
cmp
sub
cmc
cmc
pushf
dec
push
jno
add
jecxz
xchg
push
pop
xchg
ffree
lock
in
rcrl
and
cmc
jne
leave
mov
xor
jne
pusha
sbb
icebp
dec
mov
ss
jmp
push
stc
outsb
add
add
sub
out
ret
cmp
ds
add
xor
inc
int3
add
and
and
stos
add
jp
sub
jnp
loopne
dec
add
adc
jge
mov
add
jmp
lods
ja
test
and
ljmp
fdivr
pop
test
pop
and
cli
push
inc
add
pop
push
out
int
clc
pop
sbb
push
pop
imul
push
int
fstps
pop
stc
cmp
rcrl
dec
imul
cmp
data16
push
mov
and
fwait
iret
repz
mov
xchg
push
popf
pop
cmp
shrl
add
cs
push
loop
push
and
add
add
mov
push
clc
loope
mov
pop
aam
lock
cs
push
push
cld
cld
jge
push
push
sbb
fstpt
push
lahf
xor
adc
rcl
xor
pop
inc
or
adc
mov
test
add
fdivs
fbstp
cmp
cwtl
fmuls
mov
sub
and
add
insb
mov
or
sub
cmp
dec
adc
sbb
add
add
adc
les
movsl
fs
sub
mov
movsl
orl
lods
adc
lea
xchg
ds
out
in
add
rclb
in
inc
out
and
je
popf
loopne
in
push
es
mov
sbb
cld
add
inc
cmp
xor
daa
push
xor
adc
cmp
inc
jb
pop
dec
adc
and
and
mov
inc
inc
inc
pop
out
dec
or
insb
cmp
enter
mov
movb
adc
xor
push
inc
and
gs
aas
mov
add
in
mov
and
or
xorps
xor
inc
push
or
xor
add
je
pop
or
sti
push
roll
sub
inc
inc
aad
lret
cmp
enter
add
fcmovnbe
push
pop
xor
orps
push
les
dec
shlb
adcb
cmp
pop
inc
sub
push
shlb
sub
xchg
mov
xor
add
fdivp
fcompl
jmp
mov
add
add
dec
jne
or
xchg
cltd
jo
sub
roll
pusha
dec
cmc
int
loopne
xor
xchg
pop
xor
inc
push
stc
aad
mov
jne
lret
loop
inc
adc
jne
mov
push
adc
or
mov
push
jmp
sbb
test
dec
outsb
out
jns
mov
pop
shlb
dec
mov
inc
push
mov
mul
push
lcall
push
push
cwtl
ja
or
les
stos
adc
add
mov
clc
mov
mov
add
inc
mov
pusha
pop
pop
movsb
dec
jmp
out
clc
push
enter
add
mov
add
jmp
insl
or
ljmp
sbb
add
in
fimuls
jmp
fnsave
push
lock
adc
dec
jne
leave
adc
cmp
pop
pop
repz
sbb
popf
test
loope
sbb
push
mov
xor
das
arpl
push
loope
fdiv
mov
incl
adc
mov
mov
incl
inc
decl
jne,pn
loop
loope
xor
repnz
jg
aad
cmp
cmpl
mov
jbe
push
cltd
pop
idiv
mov
sti
xor
push
pusha
or
push
out
in
push
inc
mov
dec
mov
mov
xor
xor
out
nop
jo
jmp
cmp
jae
dec
fcompl
add
xchg
pop
jae
pop
jbe
and
pusha
out
adc
dec
cli
jmp
mov
pop
sub
fsubrl
dec
inc
xchg
mov
xchg
mov
cs
jg
mov
sbb
add
fistl
call
or
sbb
sbb
dec
dec
je
push
push
jne
mov
add
mov
xchg
insb
adc
sbb
negl
or
jle
dec
push
test
mov
inc
pop
cltd
and
movsb
sbb
push
das
test
enter
lods
xor
add
lret
add
sub
stc
mov
xor
mov
dec
dec
popa
sub
and
push
adc
fcmovb
dec
jmp
sub
mov
stos
add
mov
sbb
pop
cmp
or
sub
sarl
sub
insl
or
aas
jge
das
mov
pop
cltd
pop
idiv
pushw
inc
mov
inc
xor
leave
cli
ds
xchg
inc
out
cmp
pop
daa
ret
push
ljmp
cmp
xor
loopne
pop
mov
or
imul
loopne
and
imul
cs
jl
mov
sbb
call
mov
mov
pop
insb
sub
sbb
mov
mov
add
and
jmp
rcrb
or
add
mov
and
adc
jg
jae
incl
pop
push
sti
lods
mov
sub
xchg
cmp
inc
or
in
mov
cld
cmp
data16
jno
mov
push
pop
adc
inc
push
jmp
jge
jae
js
pop
je
sbb
inc
pusha
cld
cmp
jle
das
fnstenv
movsb
jno
mov
mov
int
int3
dec
jo
fistps
xchg
mov
je
dec
inc
add
dec
jne
mov
fistl
inc
jg
jmp
inc
lretw
pop
push
ret
xor
insb
js
pop
cmp
pop
popl
fstl
or
and
push
pop
push
or
and
xchg
mov
cmp
pop
stc
jne
jl
pop
push
adc
lcall
pop
inc
jmp
push
pushf
mov
es
adc
add
and
popf
mov
and
add
cmpsb
insb
cmpb
mov
inc
xlat
cmpl
cli
and
jge
add
mov
shlb
hlt
mov
inc
add
push
loopne
iret
mov
inc
adc
or
out
rcrl
xchg
hlt
lcall
test
mov
int3
mov
lret
ljmp
movsb
and
jg
adc
or
push
pop
and
adc
pop
lock
and
sbb
leave
ljmp
mov
mov
add
push
testl
pushf
clc
je
gs
push
sbb
out
xor
mov
and
jne
fcmovbe
aas
clc
mov
inc
inc
cmp
je
xchg
mov
cli
xchg
lods
popf
dec
orb
adc
add
mov
fidivrl
dec
je
shll
mov
ficoms
mov
mov
pushf
add
sbb
std
push
cld
dec
call
adc
push
fdivr
or
fisttpll
push
mov
push
inc
sbb
mov
inc
pop
fmul
cmpsb
sub
pop
pop
sbb
lods
mov
cltd
or
mov
or
fidivs
or
xchg
dec
sbb
add
push
leave
ss
movl
sub
lock
mov
dec
mov
test
adc
test
cmp
cmp
je
mov
adc
mov
add
mov
pop
addb
push
add
push
pop
lds
adc
inc
int
fs
or
shl
pop
add
sbb
dec
mov
lods
sbb
dec
movsb
jb
push
hlt
repnz
xor
inc
lret
mov
mov
push
cmp
fiaddl
or
adc
fcom
iret
add
pop
addr16
sar
lea
mov
and
jmp
cmpl
or
pop
dec
push
push
nop
psubusb
cs
dec
jmp
dec
sbb
jp
sbb
mov
orb
lret
and
and
jo
mov
push
test
fprem
or
pop
stc
xor
in
pop
call
sbb
xchg
sbb
xchg
cmpsb
or
lds
sbb
sbb
and
hlt
push
or
ret
sbb
push
jns
and
or
dec
pop
push
ret
pop
stos
cmp
inc
sbb
sbb
sub
mov
mov
pushf
xchg
int3
xor
xchg
and
inc
push
jmp
cmp
mov
xor
inc
or
scas
xchg
jno
inc
inc
ss
push
push
xor
outsl
inc
mov
hlt
cmp
jbe
subl
movsb
xor
inc
add
pop
add
dec
jmp
mov
clc
xor
jnp
xchg
sti
clc
and
jmp
ja
xor
aas
pop
test
mov
in
push
pop
outsl
popa
pop
sbb
adc
pop
and
cmpl
and
add
or
and
mov
jge
jne
adc
xchg
addr16
jmp
inc
aam
fidivs
add
push
jo
and
jmp
test
mov
ss
and
fdiv
mov
popa
mov
add
dec
add
loopne
inc
or
sbb
push
outsb
mov
add
insl
insl
push
arpl
jmp
pop
mov
xor
arpl
xchg
push
jno
test
pop
xchg
pop
fdivr
mov
inc
iret
or
test
push
hlt
add
cmp
push
std
add
les
cmp
push
cmp
cmp
or
pop
mov
addr16
rorb
dec
sbb
in
push
outsb
xor
cld
xor
daa
fmul
or
into
popa
fstps
jns
adc
cmp
inc
push
push
mov
ret
imul
loop
adc
fcompl
jbe
and
xor
xor
push
lea
or
movb
and
jne
push
inc
popf
jp
adc
insl
clc
imul
sahf
enter
xorb
int
gs
push
adcb
int
inc
or
aam
pushf
enter
xor
pop
sub
push
mov
jmp
mov
shll
inc
test
jo
add
je
lods
repz
xor
insb
ret
sub
inc
mov
or
adc
in
jo
dec
ds
adcb
mov
xchg
pop
gs
addr16
cld
arpl
imul
add
mov
test
xor
sysexit
into
sub
je
or
in
imul
ja
js
add
pop
jge
cmp
cmp
add
hlt
inc
or
xor
jp
test
pop
faddl
inc
mov
sbb
dec
loopne
or
push
jbe
adc
js
adc
cmp
mov
fistl
sbb
add
inc
mov
fcoml
jle
hlt
imul
dec
sbb
mov
jg
adc
sub
into
jge
mov
lcall
xchg
cmp
test
in
push
pop
addr16
cmp
push
pop
xor
pop
clc
pop
test
lret
roll
daa
mov
mov
shl
hlt
fadds
mov
cmp
dec
xchg
daa
xor
call
jge
mov
cli
mov
jp
cli
in
push
fs
sti
or
push
inc
cmp
fs
dec
test
sub
adc
push
ret
shll
push
inc
in
fldl
sub
les
push
ret
jmp
mov
cmp
sbb
mov
jecxz
out
sarl
cmpsl
insb
push
lea
loopne
out
into
add
les
push
cmp
lock
xchg
or
jg
push
cmc
adc
cmpsl
adcl
mov
sbb
jnp
stos
mov
add
iret
xor
push
dec
or
push
lods
mov
data16
filds
or
pop
push
push
mov
insb
stos
test
sti
sbbb
add
dec
xchg
push
fwait
inc
out
adc
pop
aad
add
cwtl
xlat
mov
cli
add
adc
inc
jg
mov
fcomp
into
cltd
lret
add
mov
and
aaa
addb
jo
leave
or
insb
push
loope
mov
xor
push
adc
fidivrl
movd
movsb
out
and
cmpsl
cld
sub
ret
clc
lock
or
and
dec
sub
cwtl
and
or
lock
mov
cmp
out
jbe
mov
test
jecxz
inc
pop
sub
lods
in
mov
sahf
xor
adc
lods
lods
xor
mov
mov
and
adc
dec
jo
pushf
popl
mov
cmp
loopne
clc
push
movl
cmp
sbb
xor
cmp
mov
fmul
or
loopne
inc
push
push
clc
scas
lea
in
push
mov
adc
add
pop
sbbb
cli
inc
push
push
or
je
sti
nop
mov
inc
pop
or
int3
bswap
push
add
adc
or
push
and
mov
jb
mov
cmc
mov
call
or
loope
or
or
outsb
add
stos
add
dec
add
pop
sub
mov
dec
add
testl
sub
xchg
xchg
cld
cmp
add
fs
ret
push
mov
imul
test
inc
hlt
mov
and
mov
lea
xchg
loopne
stos
ja
sub
adc
or
inc
aad
mov
lock
out
roll
out
popf
cld
ficoml
push
push
fiadds
inc
jne
std
push
loopne
imul
push
enter
cld
cmp
xor
pop
dec
and
int
aas
or
push
sbb
fcmovne
movsb
lods
jmp
and
je
and
les
nop
mov
push
push
adc
aad
jmp
mov
jmp
lahf
imul
mov
pop
mov
cmp
and
decb
sub
ja
lret
add
jmp
cmp
push
add
ljmp
inc
mov
fimull
pusha
int3
nop
addl
popa
jb
clc
ja
mov
pop
inc
jo
jg
or
push
mov
mov
je
out
push
jo
mov
or
jno
xorb
rorb
or
push
aas
adc
cmp
dec
pop
mov
cmp
push
hlt
addl
arpl
rorb
add
cmp
mov
push
add
cli
mov
cmpsb
push
sub
or
jb
jge
in
cmp
std
jne
fsubr
stos
enter
outsb
call
add
adc
adc
push
mov
inc
call
insb
pop
stos
xor
dec
mov
mov
push
nop
xchg
repz
xor
or
movsl
fnsave
push
jmp
rorl
push
add
and
xor
stos
lret
add
inc
rolb
stos
cs
jnp
jae
cmp
jbe
dec
jnp
lea
mov
test
leave
push
cmp
sub
inc
jo
lds
popl
leave
xor
mov
aaa
ficoml
loopne
sub
jg
push
loopne
andb
cmp
lcall
stos
sub
inc
push
jne
outsb
ds
inc
call
jb
mov
pop
inc
sbb
xor
inc
dec
inc
mov
push
add
lea
mov
sti
pushl
inc
mov
inc
inc
inc
dec
jne
mov
inc
dec
outsl
sahf
gs
cmpsb
jl
sbb
and
hlt
mov
test
or
push
mov
inc
dec
jne
hlt
jnp
mov
movsb
mov
adc
add
fdivp
gs
mov
jmp
cmp
popa
test
sbb
ss
fcompl
je
loopne
adc
push
add
sub
mov
or
mov
adcl
jo
dec
inc
mov
mov
add
xchg
or
test
inc
outsl
je
faddl
lock
test
cmpsb
test
inc
and
in
loopne
cmp
xchg
fs
cmp
stos
dec
pop
cli
jo
insb
ljmp
rorl
and
fs
mov
mov
call
cmpsl
adc
frstor
enter
or
pop
sub
jmp
xor
jge
mov
mov
out
add
bound
ret
ss
push
out
arpl
pop
ja
pop
xchg
jno
es
jb
jmp
xchg
int3
out
nop
leave
inc
and
adc
int
pop
or
pop
mov
push
jno
xorl
mov
mov
jnp
add
and
in
or
push
dec
mov
pop
lock
sbb
adc
in
cmp
adc
cmp
addr16
std
clc
sbb
cmp
mov
inc
inc
sbb
cmp
inc
xchg
int3
mov
sub
and
jecxz
mov
mov
or
inc
pop
cmp
mov
xor
test
paddb
aaa
out
jle
jnp
in
or
push
cmpl
add
lock
pushf
or
cmp
shlb
pop
insb
inc
add
call
and
es
xor
sbb
push
sbb
orb
mov
in
xchg
and
lea
jnp
mov
aaa
or
adc
or
sarl
add
dec
xor
ficoms
cwtl
xorl
inc
sbb
clc
or
sbb
push
dec
xor
xor
push
je
push
mov
pop
sub
push
adc
jns
pop
in
or
pop
jbe
daa
sub
dec
cmp
mov
lock
rolb
insb
loope
mov
xor
clc
movb
cmpsb
and
xor
jo
mov
jmp
push
stos
inc
push
loopne
sbb
sub
mov
jmp
xchg
mov
push
pop
sbb
call
xlat
andb
fsubr
daa
mov
jns
xchg
jle
jg
aad
mov
push
lret
ss
xchg
fisubrs
rclb
jnp
cmc
cld
pop
xlat
add
je
enter
mov
adc
pop
sbb
cwtl
sub
inc
inc
jo
cmp
push
stos
xchg
xchg
xor
ja
jmp
test
andl
xchg
clc
mov
mov
orb
pop
cmp
inc
jns
pop
ret
cwtl
and
and
sbb
sbb
jne
sti
lret
insb
push
cld
lods
and
insb
push
jo
aad
or
inc
sti
mov
test
icebp
sarb
movsb
xchg
mov
imul
cmpsb
insb
in
xlat
adc
insb
jg
jnp
push
sbbl
push
outsl
rcrb
or
and
inc
sub
andl
ja
inc
ret
dec
push
mov
fs
and
pushf
cmp
jns
or
add
add
pushf
testl
xor
shlb
stc
test
xchg
adc
xor
popa
sub
xor
xchg
nop
add
jg
sub
cmp
inc
pop
cmp
add
cmp
mov
daa
jle
pop
sbb
or
mov
jmp
lds
xor
xlat
out
sti
jbe
and
pop
cmp
je
jle
or
add
mov
cmp
lds
jge
pop
adc
inc
cmp
xchg
mov
movsb
ljmp
repnz
jle
mov
lret
pushf
cmpl
out
in
xchg
es
adc
pop
cmpsb
and
daa
test
mov
jno
xchg
dec
push
mov
mov
mov
cmp
mov
ss
mov
ss
mov
dec
push
cwtl
mov
es
lods
scas
dec
mov
mov
push
xchg
mov
sbb
xor
add
sbb
das
popa
mov
shrl
xchg
fisubs
sub
andl
out
lea
lret
sbb
xor
mov
xor
imul
loopne
fcoml
push
push
xchg
fcomps
int3
pop
pop
jle
data16
popf
enter
jg
pop
movsl
shrb
jp
or
xchg
add
rcr
out
rolb
aaa
dec
cld
adc
pop
inc
cmp
aam
sub
push
xchg
mov
pop
andnps
xchg
fcomps
jo
push
mov
nop
xchg
inc
mov
stos
xchg
das
pop
jno
push
sbb
in
js
jmp
jge
orl
mov
adc
and
test
bts
jmp
jle
sbb
es
rolb
dec
pushl
mov
js
lahf
mov
mov
xor
mov
add
push
mov
or
mov
add
add
enter
xchg
iret
repz
or
push
ror
sarb
test
lahf
mov
adc
fsts
jmp
push
jno
clc
sub
lahf
cmp
nop
xchg
dec
pop
nop
movsb
push
enter
das
inc
dec
je
nop
nop
nop
nop
out
fstl
and
push
ds
repz
fs
je
nop
popa
add
lahf
add
ficomps
push
mov
and
lahf
pop
mov
push
push
orl
push
push
cs
push
ret
in
outsb
xchg
jo
ret
cmp
sub
lea
es
xchg
adc
data16
sub
adc
pop
dec
cwtl
test
or
notb
add
and
fidivrs
or
inc
mov
ficompl
test
dec
imul
ja
pop
mov
sub
loop
les
adc
daa
sbb
sbb
add
add
and
cmc
and
jno
mov
sub
dec
in
sbb
hlt
fdiv
je
imul
aas
and
add
and
loop
and
cmpsl
ds
lret
or
inc
or
je
mov
mov
addr16
dec
adc
jo
jae
mov
inc
enter
jecxz
cmp
push
lods
xchg
roll
movl
ja
or
xorl
inc
or
insb
inc
xchg
data16
or
push
xor
loopne
adc
and
ret
xor
pop
mov
mov
and
loope
je
cmp
or
push
test
and
sub
fldcw
jmp
or
scas
outsb
cmp
cmp
pop
cwtl
popa
and
mov
push
scas
inc
lds
cmpsb
and
mov
test
push
sub
fistl
test
ja
enter
push
sbb
je
movl
sbb
cmpsb
push
sbb
and
lds
hlt
jecxz
lods
imul
loopne
sub
inc
and
or
lock
xor
cmpl
or
adc
xor
daa
xchg
adc
je
pop
mov
pop
repnz
imul
ss
test
add
add
test
sub
cmp
inc
repnz
icebp
inc
nop
sbb
lea
inc
cmp
sbb
rorl
test
pop
ficompl
pop
xchg
jecxz
loopne
bound
push
inc
inc
xor
or
js
jmp
mov
std
test
incl
and
and
push
in
add
push
push
sbb
sub
xor
inc
mov
sbb
pop
ret
push
pusha
push
mov
add
mov
adcb
rolb
push
dec
or
or
clc
addl
push
dec
jecxz
fisubrl
mov
test
shrb
inc
xor
push
cltd
adc
jbe
dec
adc
ja
inc
enter
scas
xchg
pop
sub
or
in
or
adc
outsb
pop
inc
les
outsl
cld
sbb
push
pop
divl
test
lock
add
pop
lds
pop
ds
mov
mov
dec
xchg
fcomps
popf
mov
push
jne
je
sbb
cmp
hlt
dec
ljmp
or
mov
push
sub
pop
pop
cmp
shl
add
mov
add
or
and
dec
xchg
into
xchg
add
and
or
mov
mov
cwtl
sbb
xchg
push
push
lock
push
mov
mov
dec
jmp
and
jns
or
push
repz
add
in
pop
add
decl
mov
leave
and
movsl
call
nop
xchg
dec
push
or
xchg
lcall
push
jg
lea
inc
push
push
mov
jecxz
sub
out
mov
xor
add
jmp
ret
bound
scas
je
inc
jns
outsl
cmpl
push
lods
add
xor
dec
and
lock
test
sahf
cmp
xor
xchg
cmpsl
xor
sti
jb
fnstcw
mov
lret
in
hlt
fadd
fdivrs
fdivr
je
cmp
mov
push
lods
cmp
fnstsw
xor
push
lods
jae
xchg
dec
repnz
mov
stc
lods
add
test
in
or
ret
xchg
xlat
ret
and
push
icebp
dec
into
mov
mov
lea
jle
ja
mov
adc
cmpb
pusha
loopne
push
pushf
cmp
sbb
sar
pop
mov
rolb
mov
inc
lea
out
mov
fdivr
mov
sarl
sub
mov
or
je
or
sbb
popf
adc
push
pop
push
add
icebp
sbb
cli
push
cmp
xchg
sub
or
ficompl
adc
and
ds
fisubs
add
sub
push
imul
lock
js
lea
ja
test
movsl
mov
mov
sbb
in
hlt
out
sbb
test
stc
cmp
push
shll
or
inc
insb
je
lock
adc
lds
loopne
sub
xlat
scas
popa
sbb
pop
and
das
xchg
ss
or
xor
mov
mov
movsl
fnstenv
and
fs
or
incl
outsl
cmc
inc
lcall
pop
cmpsl
dec
ret
imul
lret
xchg
aam
add
movsl
ret
rcll
sbb
pop
repz
xchg
fs
rorb
push
fidivs
xlat
sbb
jle
inc
je
pop
push
or
mov
test
mov
ret
add
hlt
push
adc
push
fdivr
or
lock
cmp
push
jae
mov
test
adc
mov
fldt
xchg
mov
ret
cmpl
push
add
dec
and
jne
in
or
test
mov
pushf
in
rcl
in
sub
mov
or
pop
push
jnp
adcb
push
xchg
scas
jl
xor
int3
sbb
or
call
mov
hlt
or
inc
pop
dec
lret
and
sbb
repnz
mov
xor
mov
in
xchg
mov
pushl
add
push
insl
dec
cmp
mov
jge
nop
mov
hlt
mov
inc
fwait
ds
dec
mov
push
dec
dec
pop
popa
cmp
pushw
jecxz
mov
sub
iret
sbb
pop
pusha
test
gs
sub
outsb
jo
add
add
stos
mov
adc
jmp
das
push
outsb
je
test
lock
fsubrs
enter
rcr
add
sbb
test
mov
add
stos
movsb
movsb
shlb
jb
loopne
push
popf
xchg
fcomps
lds
les
inc
mov
push
mov
adcb
ret
nop
sub
adc
sti
movsb
std
mov
jne
mov
jmp
cmp
jle
iret
icebp
jmp
xor
pop
cmpsl
push
ret
xlat
mov
push
int3
push
xorl
out
mov
sub
mov
out
push
shll
call
cld
adc
xor
cmc
mov
pop
divl
sub
roll
mov
mov
pop
enter
lea
stc
inc
dec
fcmove
lcall
mov
shrl
sbb
dec
jae
pop
enter
sub
test
adcl
jne
hlt
pop
fs
outsb
mov
gs
jae
addr16
decb
mov
dec
inc
daa
add
adc
ret
jg
push
pop
data16
push
sbbl
xor
push
lret
push
popf
out
mov
jne
push
sub
in
je
adc
xchg
xchg
or
or
aas
int3
je
cltd
and
nop
test
pop
jl
je
add
jae
negl
inc
fiaddl
mov
jecxz
nop
pop
or
mov
cltd
scas
jecxz
or
sbb
dec
mul
lahf
cmp
lret
pop
mov
or
jne
and
lods
cmp
lea
or
push
inc
and
and
pusha
jmp
stc
cmp
loop
xor
xchg
clc
sahf
add
mov
dec
jmp
add
popf
pop
xchg
sub
inc
cmp
xor
aas
je
popf
jne
ret
sub
shlb
jg
movb
inc
jmp
ss
push
mov
or
or
push
out
inc
inc
call
repz
push
inc
xor
sti
fisubrl
xor
aas
mov
push
jmp
rorb
fimuls
push
test
dec
and
adc
cltd
sub
sub
adc
or
pop
shl
mov
jp
xchg
pop
out
xor
cmp
jns
xor
add
push
movsl
sub
jbe
dec
sbbl
add
nop
aaa
shlb
cmp
stos
or
push
rcll
nop
popa
jle
sbb
mov
cmp
add
cmpsb
and
lea
les
cwtl
loope
sti
push
and
add
icebp
jl
testl
push
xchg
sbb
adc
movsl
daa
pop
mov
sahf
js
insl
mov
mov
sub
dec
xor
movsb
cmp
add
lock
xchg
lret
sub
push
js
add
sub
push
cmp
out
push
or
jl
lcall
cmp
inc
loopne
js
xor
inc
insb
inc
inc
or
adc
jo
mov
loopne
pop
int
idivb
decl
loopne
insb
or
push
lea
aas
hlt
cmp
push
inc
imul
cmpsb
fcompp
lea
ja
test
jl
test
xor
loopne
push
lcall
mov
jo
ja
push
mov
cmp
add
push
rcll
std
arpl
decb
push
jae
inc
rcrb
push
jne
push
mov
ret
out
and
out
xchg
xor
pop
jge
es
ret
test
cmpsl
sub
jge
int3
les
sub
out
gs
fs
popa
cmp
addr16
jmp
push
xor
lock
jmp
push
andb
xor
adc
pop
dec
adc
push
adc
imul
pushf
add
push
int
xchg
and
or
das
add
mov
andb
xchg
scas
sub
mov
iret
cld
out
lds
mov
adc
enter
and
sub
lods
lret
pop
fdivl
rclb
push
mov
add
xchg
daa
add
loopne,pn
mov
cld
shr
mov
imul
jae
add
push
or
popa
jecxz
xchg
sbb
xor
xor
cld
inc
add
ret
loop
pop
mov
je
cli
add
cmp
jbe
push
pop
mov
loopne
mov
dec
or
rolb
daa
lods
decl
dec
add
shll
pop
mov
xor
push
mov
lea
xor
add
push
pop
add
push
or
outsb
or
cld
add
pop
and
add
cltd
push
or
data16
fimull
jmp
clc
and
mov
push
shlb
and
sti
add
xor
or
dec
pop
cmp
mov
fimuls
and
xlat
push
adc
jno
pop
ss
sti
lock
not
and
push
stos
popa
push
jne
sub
jmp
lea
addr16
das
mov
xor
out
sbbb
movsb
mov
add
jmp
lret
or
fidivrs
rcrl
adc
int3
inc
adc
testl
fdivrl
pusha
mov
mov
inc
mov
mov
lods
pop
lret
addr16
push
or
pop
mov
add
sub
lods
dec
jecxz
xchg
addr16
push
mov
or
jnp
addb
inc
xor
or
repz
jns
mov
jo
add
stos
and
movsb
mov
loope
add
scas
jp
fistps
push
push
call
aas
gs
push
or
or
andl
ret
sub
dec
inc
adc
mov
xor
and
push
js
xchg
lret
inc
orl
fsubr
in
mov
adc
adc
jge
inc
negl
loope
sub
cmp
ret
insl
or
mov
or
in
das
mov
pushf
pop
mov
xchg
inc
rol
and
jne
data16
adc
outsl
push
arpl
pop
js
add
lahf
inc
mov
les
dec
cmp
jb
test
stos
cmp
adc
mov
xor
inc
mov
pushf
int3
movsb
adc
push
fildl
xor
add
fwait
orl
inc
imul
addb
pop
mov
lea
mov
je
add
rolb
push
fucomip
stc
mov
imul
inc
and
fadd
clc
pop
pop
add
adc
dec
jne
or
ror
lret
loopne
in
sbb
popa
lcall
and
les
mov
inc
sub
shr
adcl
mov
clc
jp
sbb
dec
in
adc
or
adc
jne
fstp
jp
cld
lock
call
cld
push
dec
jne
je
clc
add
dec
mov
sub
rcll
sub
sub
out
icebp
cmpsl
mov
sahf
mov
sahf
pop
mov
mov
push
shlb
testb
add
js
add
pop
jge
and
not
and
into
xchg
adc
int
xor
sbb
sub
or
mov
push
out
xchg
mov
dec
cld
adc
cmp
jl
mov
and
pushf
jle
orb
add
inc
cmp
cmp
sarb
push
stc
add
scas
add
mov
int3
push
pop
xor
clc
sub
mov
aam
stc
sbb
clc
rolb
push
cs
es
add
cmp
nop
dec
or
int
add
push
jns
push
nop
std
add
into
add
xchg
sub
lods
std
lret
lods
adc
pushf
sar
dec
mov
ljmp
pop
mov
inc
or
jg
shll
mov
pop
cmpsb
repnz
pop
push
pop
adc
add
lcall
adc
and
js
push
ja
and
sub
adc
inc
insb
xor
out
dec
and
int
inc
adc
jl
xchg
mov
xor
ss
cmp
inc
dec
insb
pop
xor
push
sar
add
jp
movsb
pop
pop
ret
mov
xor
xor
insb
sahf
loope
cmp
dec
je
xchg
jecxz
xor
push
mov
push
or
fcmovu
ja
push
push
dec
ficoms
add
pusha
inc
xor
adc
dec
outsb
pusha
cmp
icebp
mov
inc
jbe
inc
cmp
mov
mov
mov
cmp
lods
decb
lret
pop
into
mov
pop
sbb
xchg
push
addb
and
mov
push
add
cmp
cmp
faddl
aas
push
push
push
jge
movsb
shr
cmp
push
jo
cmpsb
in
or
orb
pop
rolb
push
nop
cmp
and
and
js
decb
xlat
jle
adc
add
aas
pop
int3
mov
sbb
jne
leave
jae
cmpsb
jmp
jnp
add
xor
cmp
fimull
aaa
arpl
xor
mov
mov
and
xchg
or
mov
lcall
jbe
or
pushl
sbb
in
lock
in
cmp
adc
mov
jl
and
sbb
aaa
pop
iret
jne
inc
jno
adc
dec
push
cmc
add
add
out
mov
ljmp
into
jne
out
clc
insl
mov
push
pop
outsb
leave
inc
test
inc
and
inc
push
pushf
mov
sub
icebp
sbb
fdivrl
xor
add
cmp
cmp
push
or
cmp
add
jg
or
pop
mov
decb
jne
test
jmp
jmp
jp
mov
xor
and
jne
dec
jne
shl
and
xor
shll
jp
dec
jp
sub
adc
js,pn
push
or
das
pop
xor
sbb
and
hlt
roll
or
push
or
jnp
lock
push
push
rorl
mov
mov
out
or
sub
push
jge
or
pop
cmp
shrl
lock
outsb
test
lea
ds
jne
cmp
cmp
push
rcrl
idivl
and
inc
add
sbb
imul
imulb
mov
or
or
xorl
xchg
sbb
or
imul
and
pusha
add
fs
cmp
mov
push
cmpsl
add
add
push
sbb
cltd
ja
jnp
sub
rolb
add
out
xchg
adc
shlb
cmp
push
dec
mov
xchg
inc
inc
cmp
cmp
add
pop
lock
cmp
push
mov
and
xor
addb
repnz
cltd
cmp
push
dec
add
or
scas
fsubs
dec
push
inc
add
xchg
inc
add
mov
sub
cs
or
cmp
es
sbb
jae
std
sbb
mov
lahf
pushl
adcl
pop
push
push
divl
lock
xor
push
sbb
adc
mov
std
pop
adc
mov
inc
cmp
mov
jnp
outsb
loop
inc
enter
inc
pusha
repz
push
or
pop
fildl
mov
cmpsl
pop
shlb
cmpl
jns
call
push
outsb
sub
aas
xchg
sbb
or
aad
adc
sub
adc
xor
popf
call
inc
cltd
movsb
hlt
mov
call
xor
rcl
mov
scas
aas
outsb
dec
adc
push
scas
lahf
dec
jge
jmp
movzwl
or
cs
or
int3
test
push
pop
stc
add
je
add
cmp
cmpl
rcrl
sbbb
rcrb
mov
adc
xchg
pop
add
lcall
xor
ja
stc
and
mov
loopnew
lods
cli
out
and
sub
je
mov
xor
imulb
xchg
int
xor
add
lock
mov
sub
addr16
lds
leave
sub
jge
nop
fistl
and
hlt
ficomps
pusha
add
hlt
icebp
nop
inc
sahf
sbb
pushf
xor
insb
jne
jp
pop
and
pop
nopl
jg
out
and
movl
or
add
notb
or
decl
xor
dec
jae
int3
les
xchg
bound
add
out
jae
ret
jne
lcall
jns,pn
test
adc
lcall
sbb
cmovo
cli
sub
call
sti
mov
enter
test
enter
in
lods
pusha
call
lods
pop
lods
pop
lods
pop
jb
push
test
rcll
dec
push
mov
movq
call
push
pusha
inc
push
jb
repz
rcr
cld
daa
nop
in
fimuls
cld
stos
sbb
stc
push
or
pop
sbb
test
jb
mov
call
mov
push
cmp
jb
test
push
hlt
xchg
out
pop
repz
and
ret
sahf
inc
sub
lods
rclb
test
and
call
push
lods
add
nop
mov
dec
scas
nop
sub
lock
mov
in
xor
leave
add
in
daa
pop
enter
jo
adc
test
mov
mov
lock
cld
enter
cmp
subl
bound
or
push
fmuls
jl
cmpsl
jne
mov
dec
test
imul
inc
inc
ss
ret
loope
repz
sbb
daa
cmp
push
data16
ljmp
sahf
mov
imul
cmp
adcb
ret
mov
pusha
out
sub
clc
xchg
adc
inc
cmpsb
ret
xchg
pop
add
inc
or
andb
sbbb
fwait
cmp
mull
fs
add
mov
insb
or
or
jne
mov
lods
sarl
mov
and
mov
bound
daa
fadds
sahf
add
push
adc
mov
push
mov
jmp
mov
mov
or
repz
add
xlat
add
sub
std
mov
mov
or
fsubs
push
fisttpll
pop
insl
jl
lcall
in
jne
popf
outsb
jecxz
add
hlt
stc
mov
ljmp
push
cs
adcb
add
nop
jmp
cmp
adc
ret
pop
lods
xchg
or
sbb
mov
add
lret
sbb
push
or
shll
enter
gs
or
ds
jae
add
xor
and
mov
clc
add
cli
sti
cld
jmp
mov
lcall
adc
hlt
and
adc
cmpsb
pop
pop
mov
je
pop
aas
mov
clc
add
push
fwait
push
in
pop
sub
sbb
dec
mov
pop
sbb
movsl
xchg
je
push
or
sub
and
pop
inc
fmul
clc
dec
or
lret
pop
jbe
addr16
pop
loopne
fldl
or
fldl
or
out
lock
mov
adc
fidivrl
add
push
leave
fbstp
sti
pop
jmp
jo
push
dec
mov
stos
mov
xor
sub
das
sti
scas
pop
xor
cmp
dec
dec
je
add
ret
xor
sbb
sti
add
push
cltd
fldenv
lcall
insb
imul
cmp
pop
dec
outsl
inc
adc
jbe
sub
sbb
iret
out
stc
fwait
add
xchg
add
jmp
lret
xchg
cmp
out
adc
lock
test
out
xchg
xlat
loopne
cmp
in
inc
stos
cmp
mov
push
fdiv
fsub
xchg
sub
push
push
shl
push
lds
or
aaa
jne
das
sahf
adc
jo
repz
lock
rorl
movsl
scas
sahf
out
sahf
mov
ret
sub
iret
cmpsb
pop
out
fsub
mov
xchg
fmull
add
inc
mov
jno
enter
aam
shrl
sbb
pop
adc
jg
add
pop
xor
sti
movb
mov
jne
ds
xchg
fidivs
sbb
and
mov
daa
hlt
inc
clc
add
xchg
jo
ficompl
jb
push
xchg
jmp
inc
faddl
sarl
and
fnstsw
aas
test
fmull
pop
in
inc
jp
cmp
rcr
jg
test
jne
push
push
adcl
sbbl
cmp
inc
repz
xchg
or
add
or
sbbl
push
pop
daa
jo
add
push
ret
cld
popa
add
jns
gs
js
jmp
cld
adc
jne
shr
mov
mov
test
bound
mov
std
lods
std
clc
lret
pop
mov
testb
pop
scas
pop
mov
mov
call
rol
add
xchg
add
pop
add
jne
dec
sbb
mov
sar
lea
testb
cmp
test
je
fcos
mov
mov
int
stos
or
mov
push
test
test
inc
pop
inc
inc
pop
lods
dec
pop
push
push
idiv
cmp
mov
inc
pop
ja
je
mov
adc
shlb
jns
std
lods
adc
mov
adc
sarb
lret
in
shl
enter
jne
mov
scas
push
inc
push
pop
or
add
sub
push
jp
xchg
imul
sub
cmp
hlt
out
lods
in
mov
add
popa
dec
sbb
mov
dec
mov
and
mov
mov
or
inc
cli
cmp
lods
add
arpl
call
push
inc
sub
pop
in
adc
push
ss
mov
inc
xchg
inc
jne
cmp
inc
mov
xchg
lret
xor
xor
cmp
push
int
cmpsb
rclb
jne
js
cmpsl
test
cmp
iret
nop
cmp
pop
cmp
ret
mov
sbb
repz
cwtl
push
push
push
fisttpll
xchg
jl
jae
in
sbb
lret
push
cmpsb
adc
repnz
addr16
cmp
xchg
pusha
orb
xor
xchg
loop
cmp
out
gs
in
mov
outsl
inc
gs
jnp
cld
gs
add
pushf
cmp
or
xor
jecxz
push
cmpsl
mov
or
mov
jo
add
imul
mov
or
decb
jecxz
push
fcmovbe
jns
mov
mov
sahf
add
lods
xorl
subb
mov
in
in
xchg
notb
inc
pop
enter
mov
mov
jnp
sub
jno
push
jmp
mov
pop
adc
lahf
lods
cmp
into
je
test
pop
insb
jbe
or
mov
test
adc
xor
pushf
push
sub
jecxz
xor
subb
dec
mov
adc
aaa
pop
cltd
bound
std
fcomps
adc
pop
lds
out
mov
test
rorb
rcrb
push
sbb
add
arpl
pop
cmp
fsubrs
call
mov
push
mov
push
dec
cs
std
push
mov
sbb
mov
fdivrs
mulb
push
xor
std
inc
mov
ret
pop
mov
rcll
neg
sub
xchg
test
std
out
imul
lods
sbb
dec
mov
cmp
clc
xor
cmpl
pop
mov
std
mov
lret
adc
mov
mov
imul
cmp
cli
imul
xor
shrb
pop
push
rol
sbb
add
xor
mov
sub
mov
mov
dec
mov
icebp
adc
and
sbb
xchg
adc
std
mov
jns
std
xor
mov
push
popa
jl
mov
daa
xchg
mov
std
inc
sbb
mov
jmp
mov
popa
mov
jmp
decl
mov
mov
test
push
lods
hlt
sub
test
sub
je
xchg
mov
add
mov
mov
std
pop
sahf
loop
pop
lock
xor
push
sub
aaa
mov
sbb
jmp
adc
mov
jge
int3
cmp
jnp
sub
push
addl
adc
dec
test
enter
lret
sub
sub
js
inc
aad
xor
je
les
xor
in
je
mov
movsb
adc
fdivp
xor
xlat
out
inc
push
inc
lret
jne
cmp
cmp
cwtl
cmovge
lahf
lds
cmp
mov
fdivr
jl
add
das
push
dec
pop
push
xchg
jno
push
je
dec
sub
adc
sbbb
adc
sahf
test
xchg
aaa
fsubrl
sbb
mov
xchg
and
xchg
nop
sbb
inc
add
mov
add
dec
jbe
das
xchg
mov
xor
sub
mov
mov
roll
xchg
sub
adc
outsb
or
xor
aad
pop
movsb
jb
xor
and
in
mov
or
add
cmp
and
lea
push
loopne
aad
addr16
push
pop
push
lods
icebp
lcall
lret
and
fiaddl
add
stc
outsb
leave
and
imul
sub
lock
pop
pop
repz
jo
ret
xchg
ret
sbb
and
lock
enter
dec
dec
push
dec
pop
lea
add
fsubrs
js
push
repz
test
int3
mov
scas
movsl
call
mov
les
cmc
int3
mov
das
int3
mov
mov
pop
and
xchg
out
jb
mov
xchg
xchg
xchg
int3
les
out
xor
fstl
dec
push
ds
stc
mov
sub
dec
in
ja
sbbl
xchg
or
inc
dec
push
and
enter
jns
insb
scas
lods
test
lret
mov
es
xor
mov
xor
add
cs
pop
movsb
push
cmp
lret
cs
loope
addr16
mov
insl
and
test
out
mov
in
test
popf
insb
dec
inc
cmpsl
add
mov
mov
leave
sti
sbb
mov
dec
imul
xlat
icebp
xchg
stos
stc
pushf
pop
repz
stos
divl
enter
fisubrs
pop
clc
mov
dec
adc
stc
pop
mov
mov
ds
mov
pushf
mov
imul
or
pop
inc
sub
lret
add
leave
pushf
movsb
bound
nop
sbb
aas
dec
inc
repnz
sbb
adc
test
inc
cs
test
test
scas
nop
test
xchg
stos
pushf
pushf
nop
fs
inc
scas
nop
nop
pushf
push
cmp
cmpsl
sbb
or
subl
pop
rorb
xor
mov
jmp
aam
testl
lea
aad
add
roll
dec
movsl
subl
aam
ss
test
mov
and
or
out
cmp
mov
sbb
jg
adc
and
pusha
movsl
push
test
lea
or
stos
dec
xchg
xchg
jno
mov
pop
lods
adc
sbb
xor
sub
xchg
jne
pop
or
mov
cli
roll
lret
lret
fmuls
jmp
andb
sub
mov
and
push
cwtl
cmp
ss
neg
push
lcall
or
lock
adc
push
xchg
mov
inc
sbb
je
mov
xor
xchg
int
outsl
push
in
iret
testl
and
icebp
dec
jl
lahf
dec
push
pop
outsl
inc
or
jbe
movsl
push
jns
jle
sbb
ja
xor
dec
jg
and
pushf
out
or
dec
roll
xchg
and
enter
outsb
mov
ret
dec
adc
test
and
fwait
or
mov
sub
add
into
xor
sub
aas
sbb
ja
mov
shrl
shll
in
add
sub
adc
in
lock
pop
imul
mov
ret
shlb
cli
rcll
in
in
daa
xorb
jp
or
inc
dec
pop
lock
ret
mov
sub
and
sbb
ja
and
add
add
in
cld
vcvtps2pd
loopnew
pop
cmp
pusha
add
inc
and
pop
mov
or
shlb
pop
aam
add
jne
arpl
push
enter
ja
in
dec
pop
push
sbb
cld
cmp
jnp
lds
or
ret
rclb
cmp
call
and
push
sarb
mov
fsubrs
dec
sub
and
push
xor
add
nop
cmpsl
xor
pop
roll
xchg
test
or
jl
xor
mov
cld
push
mov
pop
or
xchg
outsl
mov
test
pop
divb
xor
loop
ret
insb
scas
pop
aaa
mov
sbb
inc
adc
ret
fs
cli
cltd
and
jne
lea
popa
add
imul
lcall
jne
mov
push
mov
in
iret
imul
sub
orb
mov
ret
or
jbe
imul
cs
inc
and
jb
outsl
lret
sub
sub
fisttps
pop
mov
mov
mov
inc
push
in
dec
mov
xor
add
pop
xorb
sbbl
mov
push
inc
into
mov
jnp
enter
inc
or
xchg
xchg
push
add
je
hlt
daa
fsts
push
inc
sbb
jae
sar
cmpsb
testl
outsl
sbb
adc
shlb
test
movsb
scas
and
inc
jp
and
sub
or
bound
jb
pop
push
mull
ret
or
addb
mov
push
nop
outsb
xchg
movsl
shl
fs
les
jg
ficomps
inc
shr
rcr
shr
rcr
or
jne
div
out
mov
iret
pop
dec
adc
inc
mul
pop
jb
cmp
shll
push
jbe
dec
sub
sbb
iret
jae
adc
or
fcmovu
fcmovb
adc
jle
iret
stos
dec
or
stos
inc
add
inc
add
ja
xchg
inc
jl
pop
pop
jmp
pop
mov
add
mov
movb
sub
pop
inc
clc
movb
inc
out
int3
fwait
push
lds
push
mov
xlat
push
push
cltd
adc
aad
nop
loopne
jae
rcr
test
xor
add
sbb
or
inc
inc
mov
pop
xor
or
adc
add
adcl
add
xor
dec
lea
xorb
jne
mov
mov
pop
pop
sbb
sbb
adc
sub
dec
data16
lock
sbb
adc
dec
sbb
sbb
mov
inc
cmp
std
jnp
mov
jne
lea
and
add
jb
stc
ret
jge
aas
push
cmc
inc
bound
push
lea
pop
lret
push
sub
test
ret
fiadds
xor
jne
inc
leave
enter
jbe
lea
xchg
adc
mov
sbb
adc
mov
add
ljmp
addb
add
movb
addb
push
into
adc
call
push
dec
jnp
dec
mov
cld
sbb
mov
test
push
pop
mov
lret
lcall
and
or
push
fs
stc
cs
mov
adcb
add
jo
dec
dec
sarb
xor
xor
push
sub
repnz
add
add
add
lret
movsl
pop
sbb
adc
in
or
stos
add
push
sbb
pop
sarl
push
and
inc
imul
add
in
mov
and
cmp
or
or
lods
or
push
push
lock
adc
imul
sbb
pusha
cmp
hlt
mov
inc
cmp
push
lret
loopne
popa
add
imul
pop
add
push
dec
je
repz
lea
and
aas
inc
insl
outsl
xchg
push
and
mov
push
gs
and
ret
adc
sbb
jl
pcmpeqb
iret
jmp
push
jle
sub
or
push
shl
push
adc
and
fisttpl
faddp
stc
xor
in
xor
jo
cmpl
je
mov
addl
sbb
pop
inc
adc
and
or
push
out
cmp
je
ss
repz
shlb
xchg
pop
xor
out
add
inc
outsb
or
cld
dec
add
sbbb
inc
pop
test
scas
and
inc
push
sbb
xchg
popa
mov
xor
cld
dec
push
mov
pushf
mov
or
xchg
sahf
and
pushf
inc
lods
test
icebp
repnz
push
push
pop
or
and
mov
or
mov
cmp
xor
aaa
add
inc
fildll
xchg
mov
pop
sub
aam
or
add
cmpl
and
xor
daa
dec
sbb
jbe
dec
adc
add
bound
inc
data16
and
push
dec
sbb
xchg
aam
sbb
dec
or
scas
xchg
fisubrs
mov
jo
jb
inc
sub
sub
cmp
or
pushf
lahf
push
sbb
jecxz
push
orl
push
shlb
clc
cmp
test
xchg
lock
xchg
adcl
loopne
cs
cmp
pop
mov
sub
inc
and
pop
mov
or
movsl
xor
dec
add
or
mov
dec
cmp
rcll
cmc
mov
and
jbe
xor
or
and
mov
mov
mov
push
lret
sub
and
imul
or
mov
out
stos
add
push
xor
lcall
push
inc
nop
add
mov
scas
sub
fsubl
enter
or
add
or
adc
dec
pusha
out
add
cmp
adc
mov
mov
inc
inc
cmpsb
lret
rorl
cmpsl
popa
push
fdivrl
imul
jle
sbb
cmp
xor
and
adc
sub
cmp
push
out
mov
sbb
pop
cmp
cmp
nop
sub
cmp
lea
push
cmp
mov
lret
pop
mov
fs
inc
lock
leave
mov
sbb
int3
pusha
cltd
js
bound
mov
insl
mov
dec
mov
xor
sub
gs
push
cmp
loope
adc
icebp
imul
shrb
mov
je
add
pop
xor
xor
cmp
dec
test
aad
push
test
or
sub
dec
lock
iret
test
push
or
dec
mov
inc
fstps
imul
xor
mov
mov
pusha
ss
rolb
add
mov
jbe
pop
xchg
lock
fcomps
je
mov
dec
je
popf
ljmp
xchg
push
sub
sub
mov
mov
ret
or
mov
jge
adc
sti
inc
dec
cmp
les
push
in
rcr
adc
fstps
push
or
je
out
pop
sub
dec
mov
mov
jne,pn
ja
mov
sbb
inc
mov
popa
sub
adc
and
push
jbe
sbb
mov
xchg
add
jb
add
fidivrs
pop
sbb
push
or
imul
pushf
and
cmp
test
aaa
xor
add
aam
push
adc
fs
sbb
and
mov
lcall
andb
adc
xchg
insb
in
das
int3
push
je
icebp
adc
sbbb
inc
cltd
or
cmp
add
rcrb
fmuls
sub
cmp
add
and
or
pop
cmp
inc
cmp
hlt
stos
andb
mov
push
push
cmpsb
cmp
dec
jb
xchg
xchg
add
xorl
imul
movsl
arpl
ja
and
inc
test
rcll
adc
stc
mov
inc
or
mov
pop
inc
add
cmc
sbb
cmpsl
insb
mov
sub
sbb
lods
cmp
jbe
out
add
jge
sbb
ljmp
mov
sahf
mov
lret
adcl
popa
adc
lret
or
xor
mov
sbb
cs
popa
inc
and
push
push
push
sub
repz
or
lds
adc
sub
gs
testb
add
fnstcw
and
sbbb
dec
push
out
mov
mov
testl
sbb
mov
add
adc
fdivs
cli
imul
cld
mov
inc
and
cmp
pop
pop
arpl
int
or
mov
push
cmp
mov
lods
or
movb
mov
inc
mov
push
les
and
sbbb
stos
or
sbb
add
inc
jmp
leave
xor
fsubrs
ja
cmp
ss
jmp
pop
das
loope
xor
push
inc
inc
xchg
add
add
inc
pop
je
pop
es
cltd
aam
jb
je
jl
test
and
or
mov
mov
std
pop
shr
outsb
adc
add
ret
add
icebp
xchg
xchg
cmp
sbb
add
movsl
test
push
andl
adc
cmpb
mov
xor
inc
pop
loope
mov
add
adc
pop
mov
jnp
jno
sbbb
daa
cmp
mov
mov
lea
xor
andl
dec
or
outsb
add
sbb
mov
js
lock
movb
sbb
aas
jae
mov
je
dec
shl
cmovg
pop
test
push
stos
jo
insl
lds
xchg
jge
sti
les
mov
or
lods
or
adc
xor
add
cmp
pop
loope
jne
loopne
mov
and
adc
jo
pop
out
dec
and
std
push
and
jb
mov
dec
mov
cmp
cmpsl
fdivl
inc
inc
or
jne
repnz
sub
push
sar
test
dec
inc
hlt
arpl
cmpsb
xor
je
mov
jae
mov
clc
dec
pop
mov
cld
mov
cld
andb
inc
pop
cwtl
ret
jmp
sbb
cmpb
mov
and
lock
inc
es
sbb
or
imul
xor
int
pop
or
cmp
or
jl
adc
xor
jle
or
lea
pushf
mov
std
sbb
pop
push
dec
add
icebp
and
or
dec
dec
lock
fmuls
add
fbstp
or
or
or
push
and
xor
xchg
inc
mov
faddl
js
cmp
gs
test
push
enter
and
stos
inc
mov
pop
loop
out
mov
hlt
jl
push
pop
pop
sbb
sub
mov
repnz
aas
sbb
and
loopne
pop
dec
andb
and
sarl
daa
adc
add
inc
cmp
movl
test
jle
inc
add
mov
add
inc
stos
adc
bound
push
push
mov
call
sar
and
shl
add
and
mov
out
inc
add
and
push
xchg
inc
push
mov
incl
hlt
inc
adcl
scas
cltd
rclb
addl
cmp
push
addb
xchg
pushf
jmp
xchg
andl
testb
add
shl
or
inc
rolb
aas
push
mov
ljmp
mov
jne
rclb
inc
idivb
add
or
je
and
popl
add
shrl
mov
loope
pop
xor
adc
xchg
test
fldl
xorb
push
dec
out
mov
es
not
mov
xor
cs
push
xor
fwait
adc
lock
xchg
push
sahf
cmpsb
cmp
loope
lock
push
or
imul
dec
adc
ret
jmp
test
adc
loopne
or
xor
sbb
mov
push
rcrl
dec
loope
mov
sub
or
mov
and
jb
rcrl
add
mov
and
sub
mov
jno
inc
adc
ljmp
and
in
mov
sbb
xor
add
mov
mov
fnstsw
popa
push
mov
mov
dec
clc
jae
loope
test
mov
or
cmp
push
add
jmp
pushl
add
stc
fmull
mov
jae
pop
jmp
and
add
adcl
mov
js
adc
inc
inc
pop
sahf
lret
repz
jl
adcb
sti
mov
xor
dec
mov
xchg
cmpsl
repnz
inc
nop
aaa
xchg
les
push
lods
add
bnd
jg
lock
js
je
push
cmp
fnclex
xchg
sub
fcmovnb
sti
push
mov
lods
outsb
jne
add
data16
and
and
or
lret
fdivrl
nop
push
jbe
js
lods
jmp
dec
cmpsb
and
in
adc
enter
aam
push
push
add
mov
loopne
pop
xlat
insl
pop
aas
aad
push
gs
jmp
cmp
cs
dec
fsubr
lahf
fcomp
and
pop
dec
mov
lret
int3
lahf
mov
mov
roll
jl
cld
jb
sub
das
les
aad
js
push
and
or
inc
push
cmp
add
movsb
movsb
jbe
or
lret
and
gs
fistl
cmp
or
adc
add
inc
sbb
mov
jo
and
xor
dec
sub
adc
subl
sub
mov
dec
mov
and
sbb
aam
xor
cmp
cmp
ret
xor
mov
icebp
mov
clc
sub
push
and
bound
add
aas
push
mov
test
test
fstpl
jecxz
mov
xlat
call
or
ljmp
aas
jmp
adc
outsl
jo
sub
push
and
fdivs
adc
jecxz
test
adc
imul
in
jmp
fsubr
xor
mov
aam
jmp
pop
push
push
push
mov
aaa
dec
adc
or
enter
push
sbb
jl
inc
and
inc
mov
push
inc
outsb
cmp
imul
aam
mov
xor
cmp
inc
call
out
scas
hlt
pop
hlt
adc
jbe
cmp
imul
enter
push
adc
fldt
in
js
inc
ljmp
add
adc
js
push
jle
inc
push
mov
push
mov
subb
imul
xor
fstp
fdivp
jne
push
ja
cld
and
add
sbb
and
adc
test
sbb
or
stc
pop
xor
fs
shll
movl
sbb
repz
inc
or
add
aas
xchg
mov
push
subb
add
je
testb
je
mov
ret
sbb
or
test
sbb
imulb
inc
loopne
xchg
jo
dec
dec
inc
loopne
push
daa
test
int3
fwait
pop
jmp
mov
or
lret
mov
sbb
inc
cmp
jbe
pop
or
push
jg
inc
cmp
jg
add
insl
pop
insl
sub
or
rorb
lahf
cmp
test
add
and
pop
dec
mov
je
enter
loopne
subb
repz
sbb
push
pushl
cli
mov
xchg
and
or
or
call
out
mov
cltd
xlat
sahf
sub
lret
mov
ret
sub
mov
mov
lahf
cmpsb
rorb
and
and
inc
sbb
add
jmp
mov
sbb
xor
insl
jmp
sub
ret
arpl
mov
pusha
pusha
xor
jg
cli
sahf
mov
xor
mov
inc
or
inc
jecxz
xor
gs
add
add
push
jl
dec
add
xor
push
stos
or
add
add
outsb
or
jg
imul
ret
lea
mov
sub
loopne
lea
fstpt
test
add
add
sbbl
xor
push
adc
sarb
adc
inc
out
dec
andl
out
pop
jg
xchg
gs
xchg
cmpsb
aas
push
pop
jl
mov
sub
es
rclb
push
sub
fdivrl
push
gs
fneni(8087
xchg
inc
mov
test
push
loope
and
xor
jl
push
gs
add
test
sbb
push
js
dec
sahf
addr16
ja
sub
mov
aaa
inc
addr16
in
mov
adc
ss
sub
inc
push
clc
je
and
stc
xchg
push
push
jp
outsl
mov
jae
pop
out
fcomps
rclb
pop
cmp
dec
mov
adc
mov
add
inc
or
sbb
je
fmuls
fidivrl
pushf
jg
imul
rorb
out
notl
sub
jge
or
repnz
inc
cmpsl
and
inc
xor
sbb
pop
cmpl
mov
jle
mov
xor
movsl
and
jge
push
mov
sbb
lods
push
fstps
push
lock
rcl
add
testl
aaa
cmp
adc
or
or
sbb
shlb
mov
sbb
cld
sbb
push
sub
test
psllw
xor
or
and
add
fcoms
shld
jbe
pop
sbb
popa
xor
test
jbe
in
je
cli
inc
test
push
repz
lods
add
inc
ja
negb
or
pushf
cmp
or
je
xchg
cs
push
mov
sbb
enter
jmp
outsl
sub
shl
add
cmp
scas
pop
inc
mov
inc
add
popa
es
xlat
or
add
sub
mov
xchg
or
aam
pop
mov
adc
jno
jo
imul
sti
inc
add
xorb
cs
jo
adc
fcoms
and
add
jmp
xor
inc
xor
xor
jo
lret
out
hlt
jp
sub
ja
add
and
mov
icebp
enter
ds
inc
adcb
fildl
arpl
mov
pop
sub
jns
popa
loop
shrl
test
mov
mov
filds
pop
enter
je
pop
push
and
dec
push
push
add
jmp
lcall
sub
push
mov
push
jb
data16
mov
mov
inc
cmp
jae
push
cmp
jl
mov
inc
or
dec
adc
mov
push
pop
jns
out
fisttps
lock
jne
clc
push
mov
cmc
or
cmc
or
je
jo
ljmp
pop
pop
or
adc
add
xorb
sub
push
stc
in
dec
dec
xor
test
movsb
adc
leave
mov
pop
mov
mov
mov
int
mov
push
lret
pop
sub
or
or
incl
sbb
adc
lods
jo
adc
mov
test
mov
or
xlat
jmp
fidivl
jns
jne
jmp
fstpt
mov
mov
or
push
arpl
das
sbb
adc
and
mov
lock
js
add
dec
xchg
pop
jle
xchg
outsl
sarb
jmp
inc
sub
jecxz
fildll
push
or
ljmp
ja
add
repnz
mov
cmp
and
push
dec
cmpsb
or
arpl
add
clc
dec
scas
sub
movl
je
sbb
sbb
popl
mov
add
dec
js
daa
hlt
outsb
movsl
enter
jle
aam
repnz
adc
in
pusha
jbe
add
loopne
sbb
dec
in
fnstenv
dec
jg
adc
orl
call
lret
pop
hlt
xor
aad
fdivl
cmp
or
push
push
sbb
rolb
rcrl
or
sbb
pop
and
negb
std
jb
sbb
pop
test
addb
and
imull
repnz
inc
ds
mov
out
adc
lock
enter
inc
jp
add
clc
push
jne
jmp
mov
ljmp
xor
push
dec
xor
mov
ss
mov
mov
loopne
je
adc
xlat
je
cmp
adc
dec
adc
and
cmp
jb
testb
pop
add
mov
xor
jo
adc
pop
add
divl
jmp
inc
movb
and
xchg
clc
mov
divb
cmp
pop
rorb
or
or
addl
jle
ds
das
xor
adc
mov
cmp
inc
cld
pusha
in
outsl
jecxz
push
mov
inc
cmp
mov
pop
test
mov
cld
jle
aam
inc
inc
mov
fstpl
pop
jmp
push
add
mov
pop
pop
adc
inc
sbb
dec
call
mov
pushf
or
imul
pop
and
and
and
cmpsl
dec
pop
sub
sbb
add
fisttpl
je
xchg
cli
adc
in
mov
lea
lea
or
cmp
adc
cmp
mov
fnstsw
mov
push
or
popl
or
mov
dec
out
add
dec
je
loopne
je
adc
icebp
and
pop
cwtl
push
in
xchg
mov
inc
aas
add
add
ror
js
sub
sbb
push
jo
or
jbe
push
mov
jge
loopne
mov
shlb
or
rcrl
xorl
out
mov
jle
shrb
inc
jnp
cmp
inc
mov
jbe
rorl
push
in
or
mov
lret
addl
adc
cmp
and
and
cmp
cmp
sub
xor
xor
cmp
cmp
inc
jb
cmp
inc
inc
cmovs
jb
push
push
pop
add
pushf
pusha
fs
pushf
jo
js
fidivl
xor
cltd
fs
dec
mov
xchg
cwtl
pushf
xchg
dec
es
mov
or
sub
push
test
ss
push
or
lock
sub
hlt
and
mov
mov
jle
or
clc
enter
adc
cld
adc
or
sbb
or
roll
test
mov
sub
adc
test
jne
pop
sub
cltd
dec
inc
ret
cmp
pop
mov
add
dec
jne
inc
loop
imul
jbe
inc
push
imul
lea
sub
mov
adc
dec
inc
pop
and
pop
cltd
or
aam
xor
dec
sbb
adc
outsb
es
push
imul
jnp
cmc
push
add
dec
int3
mov
aam
repnz
mov
pusha
inc
add
xchg
push
or
subb
fiaddl
jne
xchg
addr16
dec
out
xor
inc
inc
in
pop
movsb
fucomip
push
fadds
pop
mov
fwait
add
jle
cmp
adc
or
das
cmp
adc
jl
cmp
rol
add
push
aaa
push
xchg
inc
iret
test
je
lea
push
jle
and
popf
mov
add
dec
mov
rcrl
inc
xorb
lcall
cwtl
negb
into
movsb
aam
add
je
pop
sub
cmp
pushf
insl
inc
xchg
negb
in
sub
and
loopne
test
and
mov
or
fld
adc
push
test
push
gs
lods
xchg
test
lahf
repz
cmp
mov
add
int3
dec
push
xchg
pop
add
data16
jae
xor
outsl
test
sbb
pop
fwait
and
inc
push
mov
or
xchg
fimull
and
testb
xor
rcrl
orl
jmp
jbe
iret
les
xor
xchg
js
adc
xlat
xor
loopne
and
or
int
add
sbb
add
and
fcoms
popf
ficoms
fs
ja
pushl
loopne
or
and
test
loopne
aas
xchg
js
mov
adc
and
jle
or
cmp
pusha
mov
enter
sub
std
pop
inc
cmp
xor
mov
psubb
loope
shlb
mov
xchg
out
xor
pop
push
inc
add
xchg
and
mov
scas
xchg
or
push
add
fisubl
fsubrp
sbb
pusha
add
imul
mov
rorb
clc
movsl
jns
inc
mov
xchg
jl
in
dec
call
in
cli
xor
or
mov
out
or
imul
xor
hlt
add
add
out
out
jle
fildll
sar
mov
or
popa
sub
sub
jne
sbb
push
or
ljmp
test
xor
stc
popf
add
sbb
inc
shlb
movsb
jno
xchg
inc
insb
push
dec
lods
sbbb
ljmp
call
popf
mov
lea
sbb
cmp
jp
sarb
xchg
xchg
add
dec
cmp
sbb
ret
popf
pop
addl
pop
outsb
xchg
sbb
jns
sbb
mov
outsb
pop
pop
inc
adc
mov
pop
cmp
mov
call
mov
xchg
decl
xor
push
hlt
mov
cmp
rorb
test
jmp
ljmp
mov
fdivs
cmp
fsubs
icebp
adc
inc
push
xchg
adc
test
adc
sbb
daa
xchg
or
add
jo
pop
xchg
push
es
add
out
inc
loop
lods
jnp
xor
cmp
pusha
xchg
sbb
xchg
cmp
inc
cmp
dec
mov
jbe
adc
jns
jg
xor
sarl
cmp
test
mov
or
add
test
push
or
push
add
jo
inc
mov
test
sbb
cmp
jne
movzwl
cwtl
and
in
push
cmp
shl
jno
push
sbb
out
inc
int
add
sarl
jmp
inc
mov
push
cmp
push
dec
pusha
push
icebp
addb
je
fdivrs
out
fcomps
pushl
xchg
pusha
sbb
fbld
cmp
sub
sti
insb
mov
inc
mov
sbb
dec
xchg
mov
sbbb
inc
pop
test
push
repz
lret
and
jmp
mov
sbb
andl
nop
cmc
aaa
ficoms
jae
shr
fisttpll
mov
inc
cmp
cmpsb
aas
mov
or
adc
inc
fcoms
mov
fdivrs
sub
dec
push
mov
pop
inc
add
sub
daa
jmp
jecxz
mov
dec
incl
imul
arpl
int3
add
inc
cmp
scas
dec
xchg
rclb
inc
lods
push
andl
pop
mov
inc
inc
sbb
or
and
mov
sub
add
enter
aas
mov
add
xchg
dec
dec
stc
cmp
xchg
cmp
add
adc
into
xchg
push
xchg
sub
xchg
pop
cltd
or
mov
xchg
addr16
cmpsb
pop
lock
scas
sub
fstps
out
fs
std
inc
dec
pusha
xchg
jno
cli
or
ret
sub
ss
jns
scas
lock
je
add
jmp
or
js
repz
jns
rolb
lea
xorb
sub
push
push
cltd
sub
mov
fdivrs
jne
ljmp
push
cmp
insb
sub
jne
divl
fidivrs
fdiv
or
xor
inc
aam
cmpb
popa
jb
insb
mov
jg
cs
or
cmp
adc
and
fs
push
push
in
ret
orb
js
sbb
je
aaa
or
or
sbb
mov
sub
and
dec
inc
loope
cs
loope
sbb
clc
mov
scas
inc
clc
or
jmp
sbb
popf
sbb
dec
or
jno
popa
add
jmp
ret
cmp
adc
push
aaa
and
push
lahf
or
sbb
mov
adc
inc
add
inc
xchg
ss
xor
push
pop
inc
mov
into
inc
add
jge
arpl
lock
mov
mov
dec
push
and
mov
sub
sbb
and
data16
repnz
add
add
mov
fmuls
pop
inc
inc
push
mov
out
sub
sbb
inc
ja
or
mov
jl
inc
jp
inc
js
or
add
cmpb
push
inc
jp
xor
adcl
jns
js
or
cmp
into
sub
sbb
or
dec
or
sub
sub
pop
divl
mov
adc
push
dec
pop
jge
sub
out
push
and
arpl
push
shrb
sbb
cs
fstp
rclb
fmull
in
stos
add
adc
jge
addr16
test
sbb
xchg
push
or
adc
and
jnp
andl
es
mov
mov
fsubs
dec
and
sbbb
loop
lea
push
xor
lods
pop
pop
mov
cmp
push
jns
mov
imul
pop
xor
add
iret
mov
push
daa
and
xor
push
test
cmp
inc
xchg
cld
or
popf
jbe
jmp
push
and
shr
push
lea
cmp
shlb
xor
in
mov
or
popf
popf
add
add
popa
add
bound
js
xchg
jns
add
add
xchg
rcr
popf
adc
mov
jge
adc
push
jmp
push
cmp
fxch
adc
pop
dec
push
or
test
inc
jmp
icebp
xor
jecxz
dec
sarb
mov
loop
push
lcall
adc
dec
shlb
and
cld
xlat
add
pop
movsl
cmp
and
pop
add
sbbb
push
or
or
xchg
pop
or
rclb
stos
jnp
je
xorb
cmp
mov
repz
fistpl
cmp
mov
lods
shrl
inc
std
adc
cmp
daa
andb
mov
repnz
inc
xchg
std
sub
ficoml
cmp
and
ss
xor
jo
mov
pop
jb
nop
dec
inc
dec
pop
mov
jno
sbb
mov
das
push
aam
inc
dec
imul
dec
add
dec
and
mov
mov
inc
arpl
sbb
mov
xor
inc
adc
adc
shrb
pop
dec
jbe
pop
fs
jbe
mov
mov
push
or
and
mov
int3
cmp
loopne
mov
das
adc
scas
adc
shll
hlt
in
into
jl
push
jle
inc
inc
mov
adc
sub
or
add
dec
inc
add
popf
jbe
inc
mov
mov
in
push
inc
xor
les
lcall
in
mov
mov
scas
fsubr
adc
test
in
and
sbb
icebp
jne
and
loop
lcall
ror
or
mov
cmp
lea
or
jmp
sub
mov
sbb
add
dec
lods
rolb
icebp
pop
push
hlt
push
pushf
pop
mov
xor
pop
inc
push
je
push
popf
ds
cmp
iret
adc
mov
test
clc
pop
testl
repz
xchg
in
adcb
push
push
lcall
mov
je
inc
or
test
push
js
dec
loope
pop
add
lock
and
cmp
mov
xchg
jbe
ret
lret
and
add
xor
in
or
and
nop
nop
and
shll
dec
fwait
add
outsb
xor
adc
or
jb
or
jmp
mov
add
or
mov
jns
lea
test
adc
test
pusha
jp
adc
test
xor
lds
inc
lret
or
xor
or
or
sub
sub
cmp
pop
clc
incb
jmp
sbb
testl
and
mov
and
xor
cmp
aaa
jecxz
jge
inc
cltd
out
add
or
mov
jns
lods
or
pusha
xor
jge
or
sbb
loope
flds
sti
xchg
xorb
aas
pusha
mov
or
mov
pop
sub
xchg
addr16
rorl
jecxz
pop
fstp
mov
pusha
pusha
pop
je
pusha
insl
sbb
push
addr16
xorl
or
cmp
mov
push
es
adc
sti
add
ja
test
pop
xor
mov
incb
push
cmp
and
call
push
scas
jmp
push
mov
xchg
inc
or
imull
imulb
push
subb
xorb
sbb
jmp
push
and
jnp
and
inc
add
adc
mov
inc
push
fnstcw
sbb
push
xor
xor
mov
or
and
pop
jecxz
ret
inc
cwtl
xchg
pop
sbb
cmp
out
in
inc
fisttpl
push
pop
sub
ficomps
jno
push
or
xchg
inc
ret
adc
xor
mov
add
pop
bound
cs
xchg
push
aaa
lret
and
sbb
bound
in
dec
xchg
mov
fcompl
push
add
in
lods
sbb
add
sub
sub
jmp
sub
inc
dec
push
jp
push
or
psubusw
xchg
out
add
adc
mov
mov
repz
popa
and
mov
pop
mov
clc
mov
subl
in
xor
add
stc
into
jbe
or
mov
repz
faddl
or
xchg
inc
movsb
shrl
push
add
enter
dec
repnz
adc
pop
xor
aas
mov
lahf
pop
not
insl
in
rolb
orl
fs
shl
vpavgb
mov
push
push
sahf
xchg
or
pop
jmp
pop
movsb
lods
dec
roll
push
inc
cmp
and
mov
adc
mov
and
data16
lods
pop
sub
outsl
movl
push
add
jb
movsb
mov
sbb
lock
add
pop
test
adc
pop
push
cmpsb
pop
or
push
push
push
inc
out
outsb
pop
loopw
push
xchg
rclb
mov
cs
es
fmul
xchg
mov
stos
dec
cmp
je
je
pusha
inc
loop
jl
push
es
add
sub
sbb
inc
mov
adc
or
xchg
aam
sub
dec
or
pop
sbb
addl
adc
in
sti
pop
incb
jno
or
inc
and
mov
test
pop
add
mov
ret
orl
addr16
sbb
add
dec
sbb
imulb
scas
adc
mov
decl
in
add
imul
xor
repnz
mov
sbb
or
pop
xor
jbe
sub
mov
cltd
mov
add
mov
rcrl
sub
xor
jb
fnstsw
adc
push
jns
in
rorb
dec
xor
pop
std
mov
jecxz
jp
or
or
jecxz
popa
mov
js
and
cs
cmp
cmpps
sahf
push
icebp
stos
add
mov
or
ret
movsl
xchg
pop
gs
ljmp
xchg
mov
xchg
cmpsl
pushf
mov
mov
pop
sbb
xchg
push
pop
sub
fadds
into
mov
jnp
fdivs
cwtl
fstpt
test
test
cmpsl
push
dec
in
dec
pop
or
mov
sub
icebp
sbb
das
mov
or
or
stos
fidivs
or
push
out
mov
and
mov
mov
cld
push
add
sbb
jl
sbb
sub
call
ljmp
lock
jb
aad
push
fstpl
sbb
adc
mov
imul
loop
inc
flds
or
imul
dec
repnz
or
cld
mov
adc
fldt
add
adc
int3
and
sbb
mov
and
jle
call
test
jb
mov
inc
dec
out
jo
push
cli
mov
je
mov
loopne
test
cli
call
push
mov
xchg
and
and
xchg
jo
test
and
clc
inc
outsl
ljmp
adc
add
push
mov
cmp
jle
add
jbe
inc
adc
mov
or
std
sbb
fidivrs
push
popa
inc
shlb
xor
fsubrs
dec
pusha
lods
adc
push
cmp
insl
push
mov
and
data16
aaa
dec
and
ja
mov
jnp
iret
jl
enter
xchg
adc
lcall
add
xchg
cmp
mov
dec
cli
dec
enter
es
test
xor
fnsave
je
xor
psubq
xchg
rcr
hlt
push
mov
and
adc
mov
or
gs
adcl
insl
dec
gs
add
adc
pop
xor
or
ljmp
mov
mov
dec
andw
movsb
cmp
inc
inc
mov
repz
dec
rolb
adc
xlat
aas
inc
orb
mov
loopne
test
push
or
jle
shrb
sub
mov
sub
push
data16
add
mov
push
daa
mov
mov
test
jne
or
jl
mov
and
or
stos
stos
test
call
lcall
jg
test
mov
cltd
and
add
inc
pop
pop
add
gs
dec
jns
dec
out
xchg
mov
xchg
loopne
lea
pop
subb
inc
rorl
cmp
pop
fucomp
pop
pop
inc
aam
loop
rolb
adcl
shlb
repz
push
cltd
shlb
idivl
mov
out
mov
inc
mov
dec
jl
sub
dec
jbe
dec
data16
daa
icebp
mov
add
test
cltd
js
xor
cmp
sbb
dec
outsb
das
lods
jg
adc
jb
incb
jae
mov
mov
adc
es
sub
jns
add
and
cmpsb
fiadds
mov
notl
hlt
ljmp
sti
cmp
dec
dec
stos
test
ds
and
pushf
packuswb
push
aam
xor
inc
inc
xchg
loop
or
rorl
mov
dec
out
ret
cli
out
and
push
cld
not
in
popf
inc
stos
insb
inc
je
and
cmpsb
and
sahf
pop
ds
push
or
push
and
icebp
jne
shl
and
mov
or
inc
shl
clc
loope
inc
mov
jl
mov
movsb
data16
fs
aam
movsb
sbb
bound
popa
pop
lahf
cltd
inc
jno
dec
mov
hlt
test
inc
icebp
and
adc
addb
mov
inc
sub
lea
dec
add
inc
sbb
dec
mov
fs
push
pop
xor
aas
movsb
xor
add
xor
dec
lds
inc
lock
or
jecxz
insb
inc
or
add
sbb
mov
mov
inc
mov
mov
leave
call
add
fcompl
gs
xchg
lret
mov
clc
pop
aam
mov
iret
and
cmp
mov
or
jno
shrb
cld
sbb
add
ret
jge
jmp
pop
scas
shl
loopne
adc
out
and
adc
xor
and
add
or
mov
or
push
outsl
add
stc
and
scas
mov
pop
bound
pop
pop
xchg
test
or
sub
pop
inc
or
adc
xchg
pop
add
adc
sub
inc
cmpl
adc
cmp
sbb
test
inc
adc
sbb
inc
movsl
cmpl
cmpsb
mov
push
sti
xchg
cli
xor
push
adc
lcall
add
movsb
call
pushf
xchg
adc
ss
ljmp
inc
nop
xor
or
lcall
push
or
or
jmp
xor
cs
lods
and
xchg
add
pop
int3
mov
sub
stc
or
push
dec
jmp
outsb
add
adc
and
mov
push
cmp
rolb
push
or
call
adc
mov
test
jp
jmp
ljmp
jmp
andl
jmp
cmpsl
push
push
lods
jbe
mov
adc
mov
adc
mov
loopne
testb
cmp
jle
cmp
push
xor
sbb
dec
push
mov
test
push
and
xchg
lods
in
adc
mov
sub
cmp
fs
xchg
adc
xchg
mov
mov
mov
shlb
dec
sbb
push
pop
jge
xorl
pop
cmp
test
in
add
jb
lahf
push
dec
dec
jae
imul
sbb
or
cmp
mov
outsb
mov
call
decb
push
sub
mov
or
xchg
rorb
orl
pop
dec
daa
adc
test
stc
sub
pop
inc
ret
xor
mov
stos
sub
mov
shr
mov
call
out
je
mov
test
nop
mov
test
fldcw
pop
cmp
jbe
testl
testl
fisubrs
push
sub
inc
inc
xorb
mov
cld
push
sbb
and
sub
or
adc
mov
std
jecxz
add
pushf
jmp
push
pop
int3
push
adc
icebp
xor
mov
sbb
into
dec
mov
push
sub
xor
inc
mov
xor
or
inc
int
push
cwtl
jge
neg
add
mov
push
inc
sbb
xlat
test
cmp
jnp
mov
sbb
push
shr
ret
ja
jnp
jge
jle
add
sub
xor
jne
push
adc
inc
xadd
or
dec
test
loop
jge
cli
push
inc
lahf
lods
rcrl
and
inc
aad
test
jb
mov
dec
mov
cmp
andb
mov
fmulp
cmp
mov
push
push
in
mov
ret
and
adc
out
and
shlb
fisttpll
adc
sbb
ja
in
mov
mov
pop
mov
ja
push
sbb
movb
testl
jne
enter
les
outsb
fldl
pop
inc
into
jne
inc
or
int
mov
cmp
jne
hlt
int3
or
data16
jne
mov
inc
mov
rcrl
or
divb
cli
push
lea
cmp
or
add
aaa
or
scas
sbb
cld
adc
sub
icebp
dec
lock
inc
push
add
imul
insl
mov
pushf
sub
lcall
add
stos
add
pop
aaa
in
mov
js
repnz
shll
hlt
mov
rcr
add
or
shr
add
rcll
rcrl
mov
jg
nop
loop
jmp
dec
sub
stos
lret
mov
notb
aaa
pop
outsl
ret
ss
fcom
movsb
mov
loopne
shr
or
mov
sahf
dec
add
adc
mov
pop
data16
push
inc
loopne
xor
and
mov
dec
mov
jge
cmp
add
ficoml
negb
pop
adc
rorl
fiadds
push
call
push
jmp
fidivl
imul
and
jo
mov
push
add
mov
sbb
lea
stos
or
add
lret
lods
lret
into
jmp
scas
push
xchg
mov
inc
dec
and
add
test
les
add
add
jp
lret
das
mov
xchg
add
negb
lret
sub
movups
jnp
add
or
call
inc
sbb
adc
cmpsb
inc
iret
repz
nop
push
adc
mov
aam
out
ds
cmp
movsb
pop
sub
mov
adc
push
aad
ja
ret
jmp
inc
add
fwait
test
pop
jne
cmp
add
pusha
inc
sbb
bound
jmp
mov
and
insb
adc
mov
dec
sub
dec
movsb
or
or
stos
and
xchg
xchg
adc
inc
jge,pn
pop
jnp
cmc
or
ss
cmp
je
adc
aas
lods
or
out
mov
dec
cmpb
je
mov
sti
decl
jne
dec
mov
inc
inc
mov
out
lea
faddl
cmp
sub
sub
xor
pop
add
jae
outsb
fisttps
fcoml
in
testb
or
pop
adc
sbbb
or
lahf
xor
or
cmc
xor
xchg
movsb
xor
out
and
and
testl
xor
add
xor
add
adc
rolb
mov
xor
addr16
xchg
mov
jle
pusha
adc
mov
shlb
shrb
fdivs
or
add
andl
xor
mov
cli
test
pop
je
setg
sub
out
clc
add
mov
and
sub
loop
aas
or
jne
movb
lea
push
inc
xchg
je
jle
add
push
mov
push
xorb
mov
xchg
mov
push
pushf
sbb
loop
add
popa
add
lcall
jmp
sub
add
sub
cli
xchg
xor
xor
inc
imul
lds
aaa
push
sub
inc
dec
inc
out
rcrl
adc
jns
les
sub
xchg
fs
ficomps
jns
stos
idiv
xor
push
or
sub
pop
jo
sub
add
adc
shlb
sub
push
push
pop
mov
insl
adc
stc
xor
inc
adc
sti
xor
pusha
or
jg
aam
insl
push
dec
lock
add
add
cwtl
jmp
ja
push
ret
jbe
push
clc
dec
adc
pusha
cmp
aam
sub
adc
or
leave
pop
lahf
adc
sub
or
data16
xchg
inc
add
push
sbb
add
dec
xchg
sbb
mov
jb
pop
fsubl
jecxz
int3
xor
mov
inc
add
mov
xor
dec
test
out
xchg
cmp
out
stc
mov
jmp
rolb
adc
or
xchg
mov
fcoml
push
push
das
add
mov
mov
lret
lret
jae
sbb
fstp
mov
add
test
or
sar
lea
jo
mov
add
mov
add
lret
dec
data16
or
ret
cmp
mov
icebp
pusha
testb
xor
or
mov
int3
loopne
js
push
addr16
sbb
mov
dec
inc
cmp
leave
and
add
mov
xchg
xor
popf
imul
dec
fdiv
bound
adc
fistpl
sub
loopne
decl
lcall
jne
pop
cmp
rcll
add
sahf
add
mov
or
dec
pusha
repz
movb
orb
xor
fidivs
xlat
or
mov
mov
xchg
popa
mov
push
sub
inc
push
or
push
movswl
inc
jecxz
mov
and
mov
enter
cmp
add
mov
insl
cld
add
dec
shrd
cmpsb
adc
push
push
jle
cmp
imull
jge
sbb
aaa
pop
pop
add
mov
or
cmp
call
stc
inc
add
dec
jmp
ret
cs
clc
sub
and
cmp
or
insb
incb
add
or
push
push
xor
xor
and
sbb
mov
lcall
xor
jo
mov
out
and
add
fwait
add
or
ja
jl
dec
jb
push
sub
or
orl
mov
lock
popf
rolb
lahf
inc
shll
addb
add
jbe
or
push
xchg
not
mov
movsb
movsb
pop
push
negb
jg
lods
jb
lret
mov
dec
dec
inc
dec
pop
pop
xor
or
sbb
add
mov
mov
cmpsb
stc
mov
daa
aam
and
es
sbb
js
int
scas
cmp
je
int
push
and
sbb
call
loop
call
loope
or
ss
and
lea
push
inc
sarb
sbb
cmpsl
mov
push
lock
inc
sub
xor
jge
mov
add
jl
sbb
mov
popa
push
push
mov
pop
imul
stos
pusha
daa
pushf
add
cltd
out
into
les
push
xchg
pop
sbb
rclb
cmp
mov
cmp
inc
mov
adc
sub
ds
xchg
add
repz
mov
push
cmp
mov
lret
jbe
adc
push
sbb
xchg
lea
mov
pop
mov
push
insl
sub
jmp
insl
cmp
mov
jl
jle
out
xchg
fimuls
inc
or
mov
mov
aam
inc
shr
loop
inc
fsubs
sbb
nop
call
jge,pt
fldt
jle
gs
or
pop
data16
lret
ds
out
cmp
mov
popa
je
inc
je
dec
lods
in
in
imul
xor
xor
add
cmp
xchg
lock
mov
loopne
dec
mov
data16
inc
enter
das
dec
dec
mov
or
fldl
fdivl
fmull
shr
add
push
pop
clc
fstps
or
fldenv
adc
leave
and
sub
inc
shlb
pusha
dec
shrb
mov
adc
pop
adc
mov
push
adc
xor
pop
les
decb
dec
inc
mov
inc
push
inc
ja
jecxz
mov
jg
xchg
cltd
movsl
je
sbb
add
jmp
jne
jp
dec
in
xchg
mov
xor
hlt
jb
js
add
hlt
insl
stos
movsl
xchg
test
das
cmp
in
jo
rorb
dec
jmp
jecxz
ss
cld
lahf
dec
push
add
push
push
and
hlt
sub
pop
popf
ret
loopne
mov
add
lods
dec
in
dec
aaa
xchg
xor
add
mov
mov
sub
lock
fwait
pop
movsl
push
sub
push
cmp
jmp
mov
outsb
das
int
addr16
mov
pop
inc
mov
xchg
jmp
insl
sub
xor
mov
cmpl
mov
push
push
or
push
mov
mov
push
mov
insb
jle,pn
pop
sbb
sub
imul
shrb
call
pop
rorb
mov
test
cmp
ret
lret
or
jmp
mov
add
mov
fdivs
jge
mov
push
insb
pushf
pop
push
adc
xor
testb
subl
aas
int
lock
mov
mov
jl
cmp
mov
inc
mov
cwtl
adc
mov
in
movb
nop
add
xor
sbb
dec
and
xchg
jmp
or
jmp
dec
mov
xor
or
ljmp
addl
inc
loop
shl
stos
lea
xor
int
push
sbb
outsb
push
and
or
add
mov
enter
ficomps
add
rcll
ss
mov
andb
lds
sbb
xor
iret
inc
leave
push
cmc
push
cmpsl
mov
or
push
push
push
and
push
sub
frstor
aad
jecxz
pop
jbe
fsubl
push
cld
cwtl
adc
inc
sbbl
adc
add
jno
jecxz
mov
clc
add
push
adc
sub
push
shl
xchg
test
mov
or
hlt
fsts
pop
rcl
xor
or
add
sti
insb
push
push
pusha
add
lea
jae
dec
jp
out
inc
xrelease
call
xor
xlat
scas
pop
call
cmp
add
test
adc
sbb
sbb
lcall
paddusw
das
add
ficomps
jl
dec
fiadds
call
nop
and
xor
icebp
das
mov
push
inc
jmp
cmp
mov
adc
xor
dec
sub
or
es
mov
xor
stc
xchg
std
adc
inc
inc
test
sbb
mov
mov
aam
push
outsl
insl
call
insb
inc
sbbb
jmp
loopne
mov
jo
lcall
mov
jne
lea
pop
jmp
not
sar
adc
cmp
addb
in
adc
iret
push
cmp
fisubrs
sub
repnz
push
inc
add
fsubl
jge
sbb
xor
jge
enter
pop
adc
adc
mov
clc
push
xchg
popa
cld
sub
mov
dec
clc
and
sub
mov
inc
sbbl
pop
cmpsb
xor
bswap
cmp
lock
ret
ljmp
cli
scas
mov
leave
xorl
dec
test
add
pop
dec
test
nop
adc
adc
mov
dec
enter
inc
adc
xchg
mov
cmp
pop
jmp
xor
ret
pop
and
mov
or
and
addl
xchg
mov
sub
push
insb
pop
mov
sbb
cmp
inc
mov
xchg
mov
adc
sub
xor
jmp
pushf
cmpsb
ja
push
popa
mov
and
sbb
or
adc
rcll
not
inc
sbb
lds
les
adc
ja
xchg
jne
jo
inc
inc
or
add
shrl
add
cmp
mov
lret
adc
add
and
sbb
cmp
lea
or
sbbb
es
mov
into
outsl
pop
js
pop
mull
fcmovb
jmp
shr
or
mov
add
add
or
bound
imul
mov
in
stos
mov
cmp
push
ret
inc
je
or
sub
bound
push
xchg
push
jp
mov
fnstcw
inc
loop
and
lret
mov
dec
testl
mov
add
jo
mov
mov
cs
inc
or
jp
adc
repnz
or
push
mov
dec
xchg
sbb
enter
stc
out
addb
jbe
push
pushf
push
cmp
sub
push
ret
insl
or
mov
push
cli
or
notb
or
shl
andl
adc
xchg
lods
xchg
mov
sbb
pushw
add
notrack
add
lods
clc
stos
imulb
or
fwait
test
test
adc
mov
pushw
or
sbb
pop
cmp
nop
cmpsl
cmp
or
movsb
fidivrl
icebp
das
call
in
push
cmp
imul
sbb
push
add
inc
cwtl
je
push
cmp
cmpsl
and
add
sub
jne
and
fidivrl
jmp
pusha
push
ljmp
sub
dec
and
inc
cli
mov
aaa
sbb
inc
aam
adc
dec
ss
daa
push
push
frstor
sbb
mov
jle
cld
inc
mov
bound
push
ja
add
or
pop
cmp
add
fwait
cmp
leave
inc
xor
lret
mov
cmp
lock
jl
cmpb
jl
xor
add
pop
mov
insb
mov
test
xchg
adc
scas
push
xlat
push
loopne
test
dec
std
inc
nop
adc
inc
push
push
mov
push
push
shlb
iret
cwtl
inc
sub
fldcw
and
adc
stos
add
pop
or
sub
ficompl
jne
and
adc
test
add
mov
call
mov
mov
and
enter
xchg
xchg
dec
out
or
test
pop
lods
rorb
out
push
fcmovu
add
mov
sarl
adc
je
mov
cs
rdpmc
jne
dec
mov
sub
inc
nop
or
pop
mov
push
stos
jne
outsl
arpl
movsw
xor
sbb
ljmp
jp
push
popa
hlt
aam
xchg
bound
push
or
jmp
movsb
or
sub
pop
mov
ret
enter
cld
pop
std
jge
inc
inc
div
fdiv
fiaddl
fsubp
fisttpll
inc
ss
test
sahf
sbb
xchg
sbb
xchg
adc
jae
stos
mov
fcoms
inc
and
fsts
nop
dec
sbb
adc
adc
in
sbb
and
sub
pop
fwait
sub
push
jbe
jne
pop
pop
pop
adc
inc
fldt
jae
or
jae
lods
test
ljmp
shr
test
test
xor
stc
outsb
mov
idiv
and
cld
je
jge
mov
divb
or
dec
loopne
ljmp
or
ret
bound
sbb
adc
jno
in
xchg
lcall
outsb
call
dec
loop
cs
or
push
mov
cmp
sbb
aas
cmpsl
sub
mov
dec
adc
jne
ret
test
bound
ss
xchg
into
mov
daa
push
ds
ficoml
iret
das
bound
hlt
fs
pusha
adc
setle
jns
mov
push
pop
and
pop
and
mov
jle
gs
lock
popa
mov
cmp
movsl
cs
fidivs
pop
dec
int3
push
cld
and
insl
ljmpw
aaa
dec
rorb
jo
fidivs
jg
hlt
xorl
dec
xor
dec
cmp
jne
sub
testb
inc
jmp
fists
mov
leave
je
and
or
out
es
mov
je
ljmp
sbb
and
push
cmp
ja
add
cmp
push
mov
cmp
jne
es
in
shll
leave
adc
mov
push
bndstx
mov
add
push
inc
or
inc
pop
scas
ret
ja
xor
adc
imul
xor
pop
or
es
push
inc
into
scas
sbb
dec
cld
add
neg
je
sbb
iret
push
push
addr16
data16
mov
dec
sbb
pop
mov
add
mov
imul
push
leave
testl
xor
sub
mov
dec
out
ds
jmp
mov
cmpl
movsl
add
or
test
xlat
mov
jno
cmp
push
lcall
xor
sbb
sub
pop
mov
inc
xchg
inc
ja
xchg
sub
sub
xor
or
or
mov
jns
push
imul
push
adc
fcmovb
add
mov
je
inc
sbb
inc
pop
xor
or
jle
mov
add
dec
mov
push
iret
repz
rcl
rcl
aad
fwait
iret
repz
fcomp
fstpt
daa
adcb
add
nop
data16
movb
jmp
or
xchg
subb
ret
mov
int3
outsl
add
lds
and
add
in
mov
mov
add
push
inc
push
add
fistpl
aas
fstpt
push
add
push
divb
in
test
xchg
fs
call
std
push
ja
cmp
push
xor
cmp
push
push
test
pop
mov
cmp
adc
push
pop
lea
xchg
xor
fldcw
adc
jmp
fdivr
aaa
pop
sbb
sbb
lea
sar
inc
popa
xor
and
mov
add
lfs
mov
xor
addr16
pushf
clc
into
push
pusha
sub
adc
sub
sbb
adc
mov
adc
dec
jo
sti
add
es
shlb
jp
pushf
call
clc
add
or
inc
lcall
dec
xor
popa
pop
mov
add
and
shl
fucomp
sub
push
mov
icebp
testl
sti
cmp
and
and
lea
pop
sbb
subl
cmp
xchg
mov
ja
inc
fsts
jns
mov
push
push
imul
in
gs
sbb
dec
lods
loopne
inc
or
xor
inc
jp
fbstp
rcr
inc
shl
test
rolb
jge
mov
push
mov
push
lea
or
inc
sti
dec
xchg
mov
inc
xor
push
ss
push
pop
and
movsb
sub
cmp
mov
dec
sbbl
jns
mov
inc
xchg
cwtl
mov
jge
mov
es
sar
jo
rorb
cmp
notb
and
outsl
jne
dec
test
add
fnstsw
cld
or
and
addr16
aaa
hlt
rorb
push
push
push
push
inc
fdivrl
or
call
inc
adc
movl
lods
ss
sub
clc
in
out
xchg
or
loop
jmp
dec
xchg
push
push
adc
inc
lods
lock
imulb
sub
inc
cli
or
jns
repnz
inc
adcb
and
or
test
push
jnp
arpl
adc
outsb
xchg
aaa
ret
push
sub
fs
adc
leave
dec
fldenv
push
pmaxub
xchg
mov
push
dec
shlb
enter
lock
in
loopne
cmpsl
add
scas
push
mov
sub
repnz
pushw
jmp
or
clc
out
jge
and
addr16
mulb
jb
inc
inc
push
pop
mov
mov
repnz
xor
into
or
in
inc
shlb
fdivrs
aam
inc
inc
mov
push
inc
test
dec
ss
mov
sbb
inc
cld
mov
mov
xor
call
test
mov
lea
fcmovu
mov
xor
pop
insl
rorl
aam
inc
add
lods
rolb
jns
adc
add
movsl
add
sbb
and
cmp
negb
mulb
cmp
test
and
sbb
inc
orb
mov
ret
inc
pop
and
sbb
jmp
add
push
adc
in
lret
rolb
rorl
mov
add
xor
sbb
adc
inc
add
inc
cmc
sbb
mov
push
add
push
nop
sbb
push
adc
test
sub
in
dec
cmpsl
sub
pop
pop
shr
xlat
dec
dec
pop
pop
add
or
push
cmp
mov
test
jne
mov
xor
fiadds
inc
imul
and
imul
pop
jl
and
dec
js
or
lea
push
and
ss
mov
push
adc
or
into
je
out
push
push
clc
loope
and
xchg
mov
insb
push
cmc
lahf
repnz
mov
add
sub
loopne
push
movsl
into
out
enter
add
add
cmpsb
push
pop
ret
movsb
rcll
xchg
clc
js
add
enter
adc
mov
cmp
push
shlb
push
inc
frstor
add
negl
out
and
mov
sbbb
in
into
or
mov
inc
xor
jbe
std
lahf
mov
dec
nop
dec
mov
dec
cmp
jge
sub
andb
stos
cmp
movb
dec
cmp
arpl
mov
add
add
fadds
movsb
jb
pop
add
repnz
mov
mov
jne
dec
adc
divb
int
pushf
adc
push
lcall
lret
or
mov
sahf
inc
jbe
dec
push
jo
ret
adc
add
xchg
cmpsb
rorb
add
add
add
popf
ret
test
mov
mov
vorps
jl
sub
popf
movsl
dec
add
adc
cmp
jmp
mov
xchg
push
or
add
or
pop
pop
scas
add
push
addr16
adc
push
add
add
xor
sub
adc
or
xor
ret
fimuls
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
clc
scas
add
pop
and
pop
pop
fdivs
pop
shlb
or
lock
prefetchw
push
dec
fisttpll
jo
loope
or
test
push
pop
jae
or
or
add
add
roll
push
lahf
add
mov
inc
xchg
xlat
dec
pop
or
sbb
dec
pop
lahf
push
add
cli
and
in
jo
ja
xor
mov
mov
inc
jge
sbb
mov
mov
add
or
adcl
inc
xor
cld
addb
sub
mov
push
inc
stos
inc
jo
push
jg
sub
into
xchg
sub
pushf
movsb
dec
aam
mov
cmpsb
out
mov
testl
pop
test
add
into
or
add
or
movsb
sbb
adc
xchg
into
jle
pusha
cmp
out
stc
mov
xor
inc
jg
mov
into
into
mov
pop
and
pop
sub
mov
pop
nop
pop
cwtl
pop
and
sbb
fistpll
or
pop
add
pop
fs
int3
mov
clc
sub
pop
lcall
add
leave
lahf
pop
test
sbb
add
or
mov
adcb
inc
lcall
and
inc
xchg
sub
pop
sub
dec
inc
sub
jmp
jb
push
mov
lret
stos
loope
push
xor
xchg
add
scas
push
push
scas
data16
mov
aad
push
inc
push
push
dec
xchg
cmpb
mov
xchg
test
add
popa
pop
fmul
cmp
mov
mov
adc
push
and
inc
mov
punpcklbw
xor
ficomps
push
dec
add
push
rorb
push
daa
or
and
shrb
jge
addr16
cli
jb
lea
push
jl
or
fwait
xor
adc
icebp
pop
rorl
push
mov
inc
push
in
dec
sbb
adc
aad
xor
mov
and
fs
scas
orb
push
lock
shr
sbb
fmull
pop
push
mov
jo
fcmovne
shlb
or
out
je
jp
add
mov
cmp
loop
rclb
mov
inc
int3
and
in
call
jle
jo
inc
xchg
adc
out
and
or
xchg
fsts
jns
jmp
pusha
inc
cwtl
clc
or
push
xor
xchg
rorl
inc
aam
fbstp
loopne
add
mov
push
inc
jns
push
sub
push
sbb
add
scas
dec
vmovaps
imul
xor
adcl
sub
sahf
push
pusha
test
andl
cmpb
pushl
in
or
pop
fldt
and
test
push
xor
mov
out
je
and
rol
pop
popf
push
fcoms
pop
xchg
cwtl
pop
mov
into
out
and
sbb
add
mov
inc
adc
mov
xchg
fs
fcoml
mov
mov
shrb
xchg
dec
inc
sbb
pop
mov
xchg
clc
lcall
add
cmp
jge
lea
jae
lret
adc
push
imul
sub
jae
jl
and
orl
xor
fildll
jns
arpl
or
dec
add
sbb
bound
ds
aas
rcr
push
es
sub
add
add
jge
bound
jmp
push
push
xlat
and
sub
mov
pop
mov
fsubrs
fistl
clc
or
cmpsl
lea
pop
jmp
xor
mov
rorb
add
jne
pop
add
notl
das
lods
test
nop
mov
cmp
dec
jmp
xchg
addr16
dec
or
jmp
inc
daa
or
sub
and
add
push
rolb
adc
test
es
fstpl
xor
adc
inc
jle
sbb
xor
adc
adc
add
sti
add
lcall
ret
xchg
dec
les
sbb
rcl
ss
pop
notl
add
adc
lret
outsl
pop
addl
sahf
xor
xor
cmp
push
lock
jl
adc
add
pop
jl
and
dec
lea
pop
sbb
sub
int3
aad
loopne
sbb
xchg
mov
fimull
sbb
pop
nop
shlb
push
and
movd
push
jmp
dec
loop
and
scas
xchg
fisttps
inc
add
ss
jne
sub
js
aas
xchg
pusha
sbb
mov
loopne
adc
cld
sbb
aaa
aad
leave
inc
js
push
pop
inc
inc
sbb
inc
sar
push
pop
push
das
sbb
fs
movb
sbb
fcmovnb
sbb
sbb
xchg
sub
sub
xor
ret
rolb
inc
hlt
xor
add
add
rclb
adc
push
mov
mov
test
fisubs
push
testb
push
push
mov
mov
mov
xchg
xchg
cwtl
or
cmp
icebp
dec
adc
scas
add
dec
xchg
or
pop
loopne
mov
xlat
pop
mov
jo
addr16
jmp
nop
test
sub
pushf
daa
data16
test
sub
inc
inc
adc
dec
inc
sbb
loopne
jg
data16
push
add
adc
mov
addb
adc
lea
sbb
sbb
test
icebp
out
mov
insl
icebp
pop
lock
and
dec
and
in
loope
and
mov
mov
loopne
clc
out
cvttps2pi
mov
aaa
xchg
sbb
xor
rorl
push
pop
inc
pop
cs
fldenv
inc
adc
fists
adc
xor
adc
les
sarb
fstps
icebp
lahf
les
pop
or
add
jmp
cmp
fdivs
in
lcall
mov
xchg
and
pop
sbb
push
dec
pop
sub
jge
mov
subl
or
mov
or
dec
in
clc
push
push
into
iret
mov
out
ret
push
or
fildll
gs
addr16
push
fs
fcoml
nop
call
cmpsb
insl
inc
gs
loopne
faddp
clc
mov
jb
mov
xchg
in
aad
cmp
push
add
xor
sub
leave
dec
and
add
dec
in
bound
in
in
push
in
lock
pop
in
nop
xorl
lock
imul
add
adc
sbb
xor
orl
or
in
mov
push
ret
repz
adc
xor
enter
insl
add
dec
test
jl
inc
lock
xchg
jl
sbb
in
clc
xor
sub
adc
imul
dec
jno
dec
pop
push
xchg
add
jge
mov
mov
xchg
test
xor
add
lds
fwait
sti
push
cmp
rcrl
push
mov
fmull
adc
and
sub
jle
pop
and
imul
sub
jg
and
movsb
jecxz
mov
call
ret
xchg
js
les
test
rclb
xor
xchg
and
int3
jg
pop
mov
adc
ret
popf
sub
movsb
push
in
cld
adc
sbb
sbb
and
fwait
pmulhw
lock
lock
fildll
pop
hlt
add
cmpl
or
lock
leave
and
addr16
add
xchg
xchg
enter
jecxz
sbb
mov
addb
pushf
mov
xor
enter
orb
add
or
aaa
hlt
call
notl
mov
mov
mov
ror
lret
shll
mov
rolb
mov
in
cmp
out
inc
loopne
jl
shrb
ds
adc
adc
leave
and
sbb
adc
cltd
fs
cmp
cltd
fs
inc
inc
dec
fs
xchg
dec
push
adc
out
or
sbb
cld
jl
xchg
and
push
add
or
sbb
int3
xor
pop
rcr
add
lods
jmp
xchg
pusha
test
cs
jbe
stos
aad
fwait
aam
mov
in
fadds
cld
cmpsl
loopne
xchg
mov
xor
mov
xor
or
loopne
adc
fists
sbb
sbb
inc
xchg
andl
and
mov
mov
icebp
dec
add
enter
adc
lahf
aaa
notb
mov
cmpsl
cmp
push
bound
cmp
mov
cmc
xorb
aaa
fmull
fmul
aad
or
inc
insb
sbb
pop
adc
sub
pop
mov
ret
mov
pop
movsl
fmull
and
mov
call
or
in
inc
sub
dec
pop
les
mov
or
cmpsb
and
inc
insl
and
xchg
mov
cmp
and
rorb
movq
cld
loopne
in
aam
push
xor
and
sbb
or
sahf
dec
adc
out
adc
sub
xchg
cli
cwtl
mov
dec
insl
mov
lock
sbb
mov
jns
or
int3
out
imul
adc
out
ja
sbb
pop
shlb
cmpb
mov
push
or
or
push
mov
mov
mov
fcomp
pushf
mov
loopne
push
push
add
push
dec
dec
lea
mov
or
lock
out
dec
dec
dec
outsb
shrd
dec
mov
dec
dec
dec
int3
rcl
adc
xor
stos
mov
movsb
nop
pop
jno
sbb
sti
add
add
arpl
adc
lcall
outsl
add
or
dec
mov
fadds
mov
sbb
sub
mov
cmpb
daa
push
pop
sbb
pop
das
rorb
or
lock
inc
mov
daa
iret
aas
dec
fwait
je
mov
dec
fisttpl
push
xchg
cmpsb
int3
das
unpcklps
sub
adc
das
popa
rolb
outsl
fmuls
inc
enter
xchg
sbb
sbb
aam
outsb
mov
cs
lock
aas
js
pusha
leave
in
inc
xchg
add
inc
insb
xor
das
jno
pop
imul
test
inc
stos
test
sbb
call
xchg
jg
mov
enter
or
fs
and
sarb
adc
lret
insl
fisubl
fs
add
xor
adc
aam
push
test
cwtl
mov
sbb
cmp
xchg
sbb
add
icebp
dec
push
mov
xchg
mov
in
loope
adc
push
xchg
dec
stos
ljmp
loope
cmpsl
sbb
andb
jp
arpl
ret
dec
nop
xchg
xchg
test
xor
jno
popf
pop
jnp
dec
stos
jp
xchg
push
vmptrst
lds
add
sub
test
sbb
add
cwtl
push
jbe
cmp
push
xor
pop
sub
inc
xor
std
sbb
push
repnz
mov
inc
cwtl
cmp
jmp
mov
fs
add
xor
push
orb
mov
pop
adc
push
or
and
and
or
adc
leave
or
mov
daa
in
aaa
mov
sbb
pusha
inc
cmp
xor
mov
or
dec
imul
or
shl
inc
xlat
jne
pop
pop
pop
mov
shll
adc
sbb
test
sbb
adc
sub
lds
jbe
nop
je
jl
jo
add
and
dec
pushf
fwait
stos
in
cltd
in
pop
aam
add
aad
add
fs
fcompl
cltd
in
test
nop
decb
pushf
std
jns
mov
in
repz
imulb
dec
add
jecxz
aaa
push
fcomps
jns
jb
cmpl
pop
adc
xchg
nop
sub
or
gs
jnp
sub
cmp
popf
dec
push
jge
add
sahf
pop
xor
jno
pop
sahf
mov
xor
scas
shll
adc
fldcw
inc
sub
int3
xchg
push
andl
sahf
dec
enter
jb
jb
mov
int3
enter
jb
sarb
mov
cwtl
mov
pushf
addr16
dec
sub
xchg
popa
outsl
movsb
pop
rcrb
push
sub
push
cmc
test
mov
xlat
or
sub
lds
push
add
xchg
jne
sbb
pop
adc
mov
jnp
jne
fcompl
xchg
rcrb
test
movsb
xchg
nop
pop
or
or
mov
mov
mov
add
adc
adc
mov
pop
or
fadd
add
or
in
orl
and
inc
push
call
xor
inc
lods
mov
xor
mov
add
rolb
cmova
sbb
mov
pop
or
mov
movsb
sub
sbb
leave
mov
insb
ja
rorb
push
push
sbb
call
sbb
jg
in
pop
pop
int3
sbb
je
push
fsubs
push
rcr
es
inc
les
rorb
inc
sbb
aas
wrmsr
lds
dec
int3
and
xchg
xor
inc
dec
and
and
faddl
push
pop
and
mov
sarl
adc
daa
dec
xchg
cmpsb
inc
in
or
push
inc
stos
flds
push
nop
jo
in
and
lea
inc
and
sub
enter
adc
imul
rolb
enter
jns
mov
sub
mov
sub
mov
inc
ror
xor
fcmovnbe
sub
dec
xor
mov
jmp
sbb
or
les
mov
aas
fmuls
add
test
popf
sbb
cmpsl
bound
inc
adcb
xor
imul
push
adc
fwait
in
pop
mov
stos
or
mov
insb
adc
xchg
cmp
stos
fildll
adc
adc
cmpsl
add
dec
pop
stos
movb
loope
mov
out
mov
inc
pop
imul
out
mov
add
mov
mov
movsb
mov
nop
jecxz
lods
jecxz
out
and
push
jmp
shll
lret
xchg
inc
dec
mov
fsub
sbb
lock
and
call
adc
cmp
adc
cmp
push
sub
inc
jecxz
fwait
loopne
or
mov
or
lea
mov
or
add
xchg
or
sbb
mov
imul
or
repnz
or
scas
mov
fistpll
adc
movb
mov
push
mov
aam
adc
lret
pushf
std
nop
dec
fidivrl
pop
adc
mov
ja
repnz
outsl
insb
xchg
test
push
cmp
fstps
nop
movsb
test
mov
popa
cmpb
adc
sbb
dec
inc
sub
adc
mov
adc
add
stos
push
jge
lods
inc
sbb
sbb
and
lss
ficoml
mov
stos
andl
mov
lea
add
mov
sub
xor
push
dec
inc
mov
mov
or
mov
mov
aaa
movsb
dec
jns
jge
movl
mov
loopne
inc
push
lret
add
lahf
loopne
and
shrb
mov
les
mov
int3
ret
adc
add
mov
dec
shlb
pop
fdivs
rclb
xor
inc
pop
insb
and
jecxz
mov
or
mov
xchg
rcl
inc
gs
shll
repz
fs
or
insb
adc
inc
in
pusha
out
dec
js
sub
and
test
push
mov
mov
push
outsl
mov
insb
pop
or
test
cltd
cmpsl
mov
xor
mov
fcmovnu
aas
mov
test
mov
jg
push
rclb
dec
enter
and
add
sti
insl
and
in
loopne
or
vmptrld
fsubrl
mov
test
int
mov
lods
insl
repnz
bswap
les
div
and
mov
loope
jne
or
dec
mov
adc
add
loope
mov
roll
hlt
mov
mov
add
es
daa
and
xor
xchg
inc
mov
mov
pmulhuw
sub
aam
inc
imul
jo
adc
aad
adc
mov
adc
leave
in
test
lds
outsb
mov
addb
aam
popf
enter
and
cmc
pusha
nop
push
pop
stos
mov
mov
inc
cmp
mov
in
push
and
or
add
xor
add
in
out
lock
daa
push
mov
daa
xor
cmp
sbb
filds
fists
add
sbb
divps
xchg
adc
xor
xchg
push
adc
std
xchg
add
cmp
inc
mov
ret
loopne
push
push
in
mov
idivl
push
gs
xchg
adc
out
xor
inc
outsb
mov
pushf
inc
inc
inc
and
mov
popa
in
les
sub
les
lock
aaa
mov
repz
jns
xchg
out
out
sbb
fsubrs
xor
mov
or
or
push
xor
jae
imul
xor
mov
loopne
in
xor
jne
add
pop
shll
lock
ljmp
jo
ret
adc
in
roll
rorl
sbb
pop
lea
sub
pop
je
xchg
xor
jl
push
xchg
xor
adc
jne
lods
push
dec
mov
push
bound
push
sbb
mov
add
cltd
in
xchg
dec
cwtl
pusha
mov
inc
test
mov
mov
jne
test
cmp
in
mov
and
andb
stc
dec
adc
aas
les
enter
mov
popa
push
imul
sub
les
xor
jno
das
shr
scas
sub
inc
xor
and
aad
adc
test
dec
and
movsl
cld
push
sbb
mov
pusha
mov
cmp
xor
sub
rcrb
cmp
sub
inc
xchg
jo
inc
push
in
call
leave
movsb
mov
and
jb
insl
fdivs
add
xchg
add
enter
or
adc
and
jb
and
in
das
insb
adc
mov
or
test
mov
lea
aam
add
nop
and
std
add
sub
testl
aam
dec
gs
mov
pusha
dec
push
jbe
cmp
xchg
xchg
inc
pop
mov
rclb
in
add
jo
dec
mov
cmp
xchg
sysexit
push
in
or
add
adc
mov
enter
lea
aam
or
push
or
bound
adc
int3
mov
adc
in
sbb
stos
cltd
fs
sub
les
dec
mov
sub
leave
mov
lret
jno
jmp
or
jo
cwtl
dec
xchg
or
cmp
lret
lds
sub
pop
add
or
sbbb
pop
and
int3
mov
jns
sub
mov
push
mov
sub
pop
xorb
or
adc
inc
add
and
xchg
dec
adc
into
stos
mov
adc
xchg
sub
in
clc
call
sbb
les
xor
insl
mov
gs
push
jno
rorb
mov
xor
pop
mov
inc
push
cwtl
rcl
inc
in
or
in
xchg
inc
dec
xor
adc
or
cltd
and
or
mov
sbbl
pcmpeqd
push
sub
aad
sbb
mov
rolb
addr16
scas
es
ss
add
fsub
and
add
fdivr
adc
jo
sub
shlb
in
test
leave
insb
sbb
adc
xor
xchg
sbb
shlb
mov
outsl
jb
push
call
mov
int3
scas
cmp
test
mov
int
loope
mov
push
xor
xor
push
cltd
fisubl
adc
dec
es
fs
dec
es
jo
mov
add
insl
je
nop
push
subb
push
xor
dec
roll
rol
enter
inc
je
loopne
mov
jo
jne
and
push
add
stc
cmp
pusha
mov
adc
sbb
mov
cmp
je
add
push
xor
push
nop
jl
insb
cltd
add
push
insb
adc
mov
lds
enter
icebp
pop
pop
and
lea
inc
mov
cmpsb
sbb
adc
aad
fsub
clc
ss
adc
xchg
xlat
fldt
mov
fldt
je
lods
cmp
popf
movsl
aad
jge
test
mov
test
adc
lock
adc
fcomps
dec
stos
sub
push
stos
mov
out
movsb
movsl
mov
rclb
dec
sahf
int3
add
popa
xchg
clc
mov
xor
mov
fstps
shlb
shl
jb
rcr
fiaddl
adc
push
stos
scas
test
push
mov
movsl
mov
rsm
roll
push
stos
pop
adc
mov
out
js
inc
mov
fistps
inc
test
xor
push
or
and
xchg
cmpsl
mov
mov
mov
fcompl
xchg
pop
jg
pop
push
mov
scas
jbe
lock
mov
mov
cmp
pop
and
nop
lock
in
adc
lds
scas
cmp
sub
lds
sub
inc
xor
cmpb
sbb
jo
ja
imul
loopne
stos
call
iret
es
jb
mov
addr16
int3
xchg
bound
leave
loope
clc
fnsave
shll
xor
cs
mov
and
lret
rclb
stc
cmp
xor
shll
cwtl
and
add
adc
repnz
sti
test
fbstp
fmull
insl
xchg
out
mov
adc
jl
jo
push
enter
sub
dec
aad
mov
pop
dec
pop
pusha
dec
push
fdivs
test
push
enter
lea
fs
test
and
insl
pop
rorl
pusha
sbb
xorl
xchg
inc
and
pushf
inc
ds
dec
inc
faddl
or
xchg
mov
sbb
inc
faddl
cmp
jbe
cmp
xor
xchg
ds
sbb
mov
enter
sarb
dec
jle
cmpl
mov
mov
icebp
cmpsb
lock
or
cmp
idiv
dec
in
mov
aam
ja
cmp
add
loopne
lahf
xchg
jl
push
pop
inc
loopne
scas
gs
mov
pusha
or
push
mov
test
scas
push
in
subb
add
mov
mov
out
lea
sub
jge
inc
inc
and
sbb
pop
or
ror
jmp
js
les
es
and
cmp
adc
cmp
xchg
out
and
fs
add
in
out
inc
mov
fs
push
insb
dec
ja
mov
fsubp
lods
out
adc
in
subl
pop
flds
push
fxtract
or
fdivrs
mov
jecxz
add
sahf
mov
ss
push
add
imul
cmpb
and
xor
push
push
les
sbb
out
inc
sub
push
mov
jg
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
add
pop
enter
add
and
outsl
jnp
or
adc
out
leave
ljmp
cmpb
iret
sub
push
inc
cmp
iret
repz
sub
sbb
jmp
addl
dec
dec
dec
dec
dec
dec
push
xor
or
jg
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
mov
xor
ss
cmp
sub
daa
adc
mov
rcll
xchg
adc
jbe
jg
push
or
cmp
rclb
cmpl
cmp
sub
push
inc
jp
out
sahf
out
pop
pop
lods
adc
lahf
es
outsb
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
fbld
jb
gs
xor
cs
adc
popa
and
xchg
imul
out
sub
lock
push
jnp
popa
rdpmc
add
pushl
sub
aaa
jns
push
mov
outsl
jb
js
je
jb
gs
cmp
or
outsl
add
rcr
mov
add
gs
push
push
pop
jo
je
mov
popa
jb
mov
mov
imul
arpl
mov
insl
insl
cmp
dec
pop
rcrl
and
jns
add
das
das
adc
push
dec
push
inc
inc
gs
insl
bound
pop
mull
daa
dec
outsl
jbe
dec
arpl
push
jo
ja
mov
sub
addr16
dec
jne
xchg
stc
push
push
mov
inc
jo
imul
enter
bound
inc
insb
adc
into
mov
out
jae
xchg
xchg
addr16
lock
fstl
xor
outsb
int
and
daa
push
scas
clc
sbb
jle
fsts
dec
js
push
jne
xchg
outsl
pop
dec
inc
sbb
das
jo
or
nop
push
sbb
fcomip
mov
inc
inc
pop
ud0
imul
pop
sbb
out
inc
add
testl
mov
and
es
sub
sub
sub
cs
movsl
cmp
cmp
ds
inc
das
stos
or
cmpsl
pop
pop
je
cmp
ss
sub
jge
jg
cmp
inc
mov
shrb
and
push
pop
pop
imul
js
dec
movl
clc
pusha
push
inc
insb
jae
cs
cs
lcall
inc
inc
aaa
inc
or
insl
gs
insb
mov
js
jb
jbe
dec
push
push
sbb
or
dec
dec
inc
sbb
and
xor
and
push
xor
sbb
data16
push
mov
imul
insl
pop
mov
sub
mov
jo
xchg
mulb
sub
and
or
ds
scas
mov
mov
xorb
inc
popa
and
pop
jnp
mov
sbb
xor
push
outsb
dec
insl
and
insl
push
xchg
loopne
aas
xor
pop
rcrl
rolb
in
adc
stos
out
mov
add
xchg
and
xchg
xor
or
imul
cmpsb
scas
sarl
gs
bound
push
mov
je
and
sub
in
ds
dec
loopne
fidivrl
sbb
add
and
mov
dec
pusha
push
daa
sub
sbb
and
das
arpl
cmp
arpl
dec
popa
sub
mov
divb
fiadds
inc
xchg
insb
imul
out
xor
int3
push
or
push
lcall
mov
fs
pop
xor
cmpl
gs
push
fistps
push
je
cs
aaa
xlat
push
out
or
xchg
shll
outsl
aas
xor
hlt
pop
into
add
pusha
dec
add
scas
or
aaa
ja
nop
imul
nop
fs
imul
inc
inc
xchg
push
mov
or
addr16
mov
mov
jle
adc
or
outsl
push
or
arpl
cmp
outsb
bound
stc
push
in
cmp
cmp
in
ljmp
push
test
js
outsb
popa
pop
or
pop
fiaddl
rclb
roll
or
leave
nop
inc
insl
imul
cmp
mov
ja
in
lea
and
ja
mov
and
pop
push
cmp
addr16
jae
jo
xchg
xor
fsubl
pop
mov
test
cmp
shlb
cld
pusha
stos
push
sub
lret
inc
sub
pop
fcmovbe
and
or
jo
addr16
outsb
aad
insl
mov
inc
imul
pop
fcompl
inc
and
dec
cmp
xchg
fldln2
mov
jg
lcall
loopne
js
imul
ds
rorl
rol
das
lret
jno
icebp
pusha
inc
mov
aas
lea
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
jo
push
cmpsb
gs
clc
jno
add
add
xor
jg
xchg
fisttps
js
jae
je
pop
lea
add
add
xchg
xlat
adc
imul
xchg
aaa
mov
jnp
add
add
adc
add
add
ljmp
add
and
push
pop
pop
or
aaa
jnp
rcll
and
or
pusha
add
js
or
sub
add
std
fcmovnu
xor
sbb
addb
add
xchg
imul
addb
add
orb
daa
push
cmpb
push
and
sub
ja
xor
int3
push
jo
aas
icebp
pcmpgtd
jo
inc
add
xchg
push
pop
leave
jae
ss
rorb
sbb
leave
xchg
lea
mov
nop
xchg
or
leave
xchg
xchg
cmp
pop
jmp
adc
inc
pop
push
adc
dec
sub
cmp
test
add
jo
or
and
jo
or
cmp
pop
ret
pushf
data16
test
js
out
push
and
test
sub
mov
stos
ljmp
outsb
and
sub
in
stc
sub
adc
addl
adc
add
add
xchg
add
push
add
add
push
and
push
add
add
sub
ja
jmp
cmpsl
or
adc
aaa
and
inc
pop
inc
mov
out
and
call
add
addb
xchg
lea
xchg
xchg
xchg
xchg
call
pushf
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
pushl
mov
rol
enter
int3
int
iret
rcl
rcl
aam
call
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
testb
movsb
push
clc
stc
cli
sti
cld
std
inc
add
xor
je
push
sarl
add
pop
inc
sbb
push
pop
outsl
jns
lods
ja
inc
cs
jae
jb
jmp
dec
dec
stos
inc
imul
mov
repnz
jbe
jne
daa
pop
lea
dec
mov
cmc
mulb
outsl
js
push
push
inc
push
mov
fwait
mov
and
insb
gs
mov
and
daa
add
insb
mov
and
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
sub
enter
testb
push
jns
mov
sbb
test
arpl
addr16
cmp
outsb
data16
pusha
push
mov
inc
add
aaa
push
jbe
push
push
add
dec
mov
fs
and
dec
xchg
dec
or
sub
sti
pop
and
cmp
push
or
bound
dec
lahf
push
push
dec
xor
cwtl
xchg
pop
pop
pop
push
push
jae
mov
dec
jp
aas
cmp
fcomp
dec
add
movsl
jae
addr16
cmpl
das
outsb
gs
mov
sbb
add
xchg
adc
push
push
push
dec
testl
out
add
mov
ret
push
cmp
sub
mov
sbb
inc
call
sub
jg
sbb
insb
in
nop
roll
xchg
jg
pushf
aad
shlb
push
push
insb
dec
mov
fadd
sub
or
push
mov
pop
das
je
outsl
xchg
pop
aaa
daa
xchg
mov
data16
out
pop
pop
cmp
cmp
add
ds
mov
push
sub
sahf
data16
es
jle
sub
sub
int3
cmp
sub
sub
push
jmp
xor
cmp
jmp
and
xchg
iret
cmp
sub
pop
pop
cwtl
jb
shl
mov
sbb
push
jb
imul
fistl
ss
lret
add
or
sbb
and
int3
lods
mov
es
jo
sub
mov
jl
lahf
jns
inc
mov
sub
cld
push
hlt
push
call
les
sahf
movsb
cwtl
dec
add
sti
push
aam
fdivp
cmp
cwtl
nop
mov
xchg
inc
push
sahf
out
dec
test
jo
jns
pusha
adc
push
pop
pop
add
dec
dec
data16
notb
push
into
cmpsl
jge
fsubrl
inc
push
call
cmp
ds
repz
cmp
out
sub
jns
out
and
adc
pop
sti
cmp
add
decl
out
sahf
out
lods
mov
fdivrp
mov
incb
test
out
sahf
out
inc
xor
sub
repz
sbb
std
in
loopne
mov
iret
repz
insb
inc
sbb
cld
jns
out
aam
mov
dec
lods
push
out
cmpsl
pop
aam
test
test
shlb
add
outsb
push
xor
push
in
ljmp
inc
outsl
pop
cmpsb
bound
fs
cmp
xchg
jb
jae
jb
xor
sahf
cmp
or
psubb
sub
add
sarb
push
sub
push
insb
cmp
inc
inc
dec
jae
insb
jnp
lods
insb
inc
mov
sbb
decl
push
dec
inc
dec
xor
inc
dec
dec
dec
push
push
loop
and
fbld
out
inc
dec
add
dec
dec
inc
add
adc
sbb
jo
adc
incl
popa
into
mov
jmp
adc
jnp
inc
loop
mov
ds
pop
idiv
cmpl
pop
clc
lret
sbb
jb
das
in
jg
jge
arpl
cmp
adc
dec
scas
jp
adc
in
fstl
mov
and
cmp
call
cmpsb
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
fistpll
xor
incb
int3
dec
dec
xor
dec
popf
pxor
add
pushl
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
lcall
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
loopne
out
fcoml
or
scas
int
mov
pop
leave
loop
mov
out
xor
xchg
dec
mov
lods
sti
psraw
push
push
xor
out
mov
pop
call
inc
sub
lret
es
sbb
sbb
adc
mov
dec
push
push
adc
inc
or
outsb
jbe
and
and
daa
add
inc
sbb
ficoms
insl
cmpsb
imul
and
jmp
jns
push
dec
push
sub
mov
jg
push
pushl
or
push
adc
pop
mov
or
dec
sub
xor
push
inc
filds
push
inc
or
push
inc
push
inc
sbb
lods
cltd
jecxz
mov
push
sbb
push
pop
cld
push
dec
or
negb
pop
xchg
inc
ss
fstpt
push
pop
xchg
add
or
pop
adc
push
sub
fstp
out
mov
or
or
clts
dec
sbb
and
outsb
std
or
push
pop
cmp
and
lods
pop
cmp
inc
inc
push
and
sub
pop
inc
dec
daa
cmp
pop
and
pop
xor
xor
das
sbb
pop
dec
push
and
xor
mov
cmp
sbb
push
push
inc
push
xor
add
or
xor
mov
push
cs
dec
add
push
xor
cmp
jge
inc
xchg
pop
dec
jnp
ja
sbb
push
or
mov
pop
aad
sbb
and
push
push
sbb
pop
pop
xor
and
adc
pop
push
or
ss
push
cmp
pop
push
pop
adc
or
cmp
add
sbb
pop
sbb
addr16
popa
inc
sbb
fisubrl
sbb
or
xor
cmp
rol
dec
dec
pop
adc
rclb
pop
outsl
pop
or
mov
add
adc
push
and
dec
xor
imul
cmp
push
push
mov
push
and
push
aaa
frstor
push
pop
push
gs
out
out
clc
dec
lcall
cmp
pop
adc
xor
cmovnp
pop
sbb
inc
jnp
in
add
in
sub
push
cmp
cs
push
push
adc
adc
and
cld
sub
or
or
mov
inc
out
movsl
push
push
jnp
cld
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
out
scas
jmp
daa
xor
push
jne
jg
int
cmp
sub
lea
push
lahf
daa
mov
sahf
ret
jmp
repz
idivl
push
fsubr
cli
or
sarl
loop
lock
sbb
and
add
xor
or
jo
scas
push
adc
and
pop
or
into
lock
jp
cmp
outsl
insl
mov
sub
lahf
inc
popa
outsb
insb
xchg
dec
and
je
xchg
ret
enter
clc
popf
fisttpl
push
xor
cvttps2pi
or
push
movaps
inc
dec
ja
sahf
cmpsl
stc
cmp
mov
aas
mov
push
jno
lods
fidivrs
stc
and
notb
int
fxch
cs
pop
sub
sbb
mov
sub
pop
or
mov
pop
sub
jp
add
cmp
adc
scas
or
xor
adc
and
aad
push
adc
lods
std
std
pop
push
inc
pop
inc
inc
inc
pop
push
nop
adc
adc
pop
sti
jp
paddusw
push
and
push
or
lcall
push
jmp
sub
xor
sbb
or
jb
pop
pop
pop
sub
aaa
pop
push
inc
and
adc
sub
or
fucomip
push
mov
lods
sub
pop
pusha
sub
and
adc
push
je
or
or
add
comiss
in
out
jo
iret
push
xor
pop
pop
jnp
cmp
dec
out
or
leave
jbe
das
or
or
dec
testb
add
xor
out
pop
push
cli
jo
rcll
push
or
mov
and
fcomi
scas
jge
fs
sbb
int3
int3
cmp
outsb
scas
xor
sbb
dec
pop
jo
sub
jne
adc
daa
add
cwtl
or
sub
xchg
data16
sbb
dec
or
sbb
or
insb
imul
sbb
lret
cmpsb
cmpsb
out
push
das
push
cmp
cs
sbb
shll
jbe
and
inc
xor
pop
cltd
jne
mov
loope
push
xor
push
pop
and
aad
sbb
pushf
push
or
std
imul
loopne
fimuls
sub
inc
lods
adc
xchg
fwait
pop
adc
inc
xor
imul
in
cmp
mov
sbb
dec
das
cmp
in
adc
or
adc
or
add
dec
xor
mull
cltd
add
push
adc
test
pop
or
arpl
testl
in
adc
sub
push
outsl
jle
push
lret
popa
push
and
aaa
daa
sub
cmc
push
adc
sbb
sbb
sub
jne
jo
into
push
push
push
sbb
or
inc
mov
sbb
mov
test
push
and
mov
xor
cmp
sbb
xor
mov
pop
adc
ljmp
or
call
cmp
addb
and
mov
push
pop
jle
in
dec
adc
adc
fwait
push
adc
ss
jp
cmp
pop
push
push
push
gs
push
shll
sahf
add
and
cs
dec
rcll
out
cmpsb
push
mov
and
fidivrs
mov
dec
popf
sarl
bound
movsb
daa
dec
adc
adc
mov
push
push
and
or
push
push
sbb
pop
push
or
add
add
pop
push
add
and
in
xor
push
ja
jo
push
jbe
lods
xor
mov
pop
xchg
imul
adc
jmp
or
pop
jg
xor
pop
adc
sti
ljmp
and
mov
dec
add
mov
xor
loopne
cmp
jle
and
and
sbb
sahf
imul
dec
sub
jecxz
pushf
js
sub
or
into
and
ja
inc
shll
dec
out
jae
insl
popa
imul
dec
mov
jo
pop
outsl
jo
sahf
bound
push
ja
pop
jns
in
xchg
adc
push
pop
push
out
sahf
out
push
add
dec
mov
jbe
add
aaa
pop
mov
ja
xor
cmp
and
cmp
cmp
add
xchg
add
ret
out
or
mul
xor
notl
je
sub
pop
andb
out
pop
xor
push
pop
mov
mov
adc
jne
jbe
mov
and
shrb
xor
out
sub
pop
push
pop
xor
rcll
push
adc
into
mov
dec
sbb
loope
das
inc
cs
push
dec
or
pop
lock
sub
mov
pop
add
jb
pop
ds
pop
jge
cmp
out
out
push
adc
xchg
cli
pop
pop
push
xor
mov
loope
or
push
mov
ret
push
pusha
mov
xor
aad
cmp
cmp
popf
add
add
call
jl
and
or
xorb
add
pop
int3
mov
adc
out
sbbl
inc
add
outsl
into
les
loop
jbe
gs
and
sub
idivl
and
and
push
push
mov
and
test
push
and
popa
pop
mov
inc
fidivrl
in
mov
sub
adc
push
iret
and
dec
ss
sbb
das
cmp
xor
je
dec
jae
jl
inc
loop
test
dec
inc
sub
jb
sbb
int3
inc
test
jb
outsl
imul
fdivs
pop
xchg
jle
jge
lods
pop
dec
xchg
clc
mov
xchg
outsb
xchg
sbb
push
inc
js
and
mov
test
xor
pop
jmp
mov
adc
add
sbb
xor
push
sub
or
pop
inc
inc
pop
lahf
cmp
icebp
adc
pop
pop
dec
adc
cmp
adc
or
cmp
mov
mov
inc
xor
mov
or
xor
inc
cs
shlb
inc
sub
or
aam
in
inc
push
insl
jle
pop
mov
push
xor
rcrl
xor
repnz
and
inc
and
mov
clc
repnz
subb
mov
mov
jle
mov
test
mov
rolb
or
adc
inc
clc
dec
or
push
adc
xlat
cmpb
fxch
or
or
ljmp
faddl
enter
ficoms
popa
mov
lods
or
mov
push
cmp
outsl
xor
orb
sbb
cmpsl
stos
scas
push
xchg
add
dec
mov
inc
inc
and
sbb
xchg
outsl
pop
lods
pop
shrb
mov
or
arpl
int3
mov
es
push
push
push
push
adc
cmp
xchg
add
or
sbb
mov
test
inc
sub
adc
inc
cmpsl
sub
pop
xchg
dec
cmpsl
repnz
loop
repnz
pop
mov
loop
dec
pop
add
push
enter
faddl
pop
or
jne
shlb
cmpsl
sbb
push
xor
sub
mov
js,pn
push
sbb
xchg
and
das
or
imul
clc
ljmp
pop
pushf
scas
mov
repz
pusha
fdivs
mov
adc
orb
and
aaa
push
gs
sbb
jo
scas
cmp
and
mov
cld
pop
enter
jbe
outsb
insl
jno
ret
adcb
cmpsb
cmpsb
sbb
sub
dec
sub
cmc
mov
rcll
daa
push
mov
or
push
pop
pop
bound
mov
fstpl
mov
bnd
popl
jno
adc
mov
js
sub
push
sub
aas
popa
ficomps
adc
js
push
cmp
cmp
out
popf
js
adc
sbb
jne
push
cmp
mov
pop
and
rcrb
ret
inc
mov
mov
pop
push
and
insl
aad
dec
sub
arpl
fldcw
push
imul
and
pushf
cmp
dec
and
pop
pop
inc
add
hlt
xor
xlat
inc
cmp
fdivrl
shlb
jbe
mov
cs
out
and
sbb
push
test
add
enter
or
sbb
xor
adc
dec
cmpb
cmp
pop
xor
or
sub
rorl
andb
add
xchg
sbb
xor
or
add
pop
insl
push
or
push
xchg
loopne
cli
add
pop
push
lea
dec
cmp
xchg
xor
sbb
inc
adc
ss
cs
ds
ds
adc
push
cmp
push
ds
mov
sbb
or
dec
loopne
sub
inc
cmp
int3
xor
cmp
cmp
sub
loope
test
outsb
int3
lds
loope
test
jmp
cmp
or
loopne
xor
cmp
or
inc
int
rcll
pop
js
mov
push
dec
sub
pusha
popa
pop
rcll
jae
and
addl
or
pop
jp
mov
lcall
in
hlt
push
inc
fcoms
cmp
das
push
push
or
adc
mov
add
sub
sub
cmp
sub
pop
or
loopne
mov
cmp
pop
and
repz
push
or
adc
mov
cmp
fadds
in
adc
dec
cmp
push
loop
pop
add
popf
inc
sbb
adc
xchg
insb
orb
cmp
rclb
or
adc
pop
sar
sub
mov
sub
push
adc
or
fsubrl
inc
and
negb
mov
pop
inc
cmp
and
lret
faddp
aad
adc
adc
push
pop
sarb
sti
push
jb
pusha
dec
cltd
adc
push
cmp
filds
add
mov
ret
sub
js
push
xchg
outsb
jae
push
fnsave
sahf
pop
mov
loopne
out
dec
and
outsl
fldt
sbb
jp
sbb
mov
sub
pop
aad
xchg
xchg
movsl
or
sbb
test
adc
insl
sbb
push
int3
and
ss
sub
add
insl
xchg
insb
cmp
dec
arpl
stos
loopne
aam
and
inc
shll
or
pop
loop
cs
and
adc
lea
mov
push
adc
adc
rcrb
and
inc
repz
add
das
pop
xor
loopne
push
push
pop
pop
pop
push
push
or
aam
test
pop
rolb
adcb
stos
pop
out
jge
addr16
inc
or
push
mov
adc
sub
lret
mov
sbb
push
repnz
mov
cmp
aaa
popf
loopne
aas
pop
or
jmp
gs
fiadds
pop
xor
std
sbb
jb
or
dec
inc
jbe
fcmovnbe
inc
push
daa
push
sbb
data16
movsb
jnp
fs
das
add
aaa
push
and
rcrb
push
and
fisubrs
and
mov
pop
decl
xor
sbb
je
stos
pop
sbb
sub
sub
in
inc
mov
add
test
adc
sub
ret
mov
popa
es
inc
test
mov
imulb
je
jo
insb
gs
mov
imul
and
pusha
invd
push
jno
sub
cmp
movsl
jbe
popa
stos
inc
jb
mov
xchg
test
dec
cltd
sbb
cmpsb
mov
insb
ds
push
mov
push
cmpsb
mov
fldcw
push
inc
push
mov
pop
push
sahf
out
mov
push
jecxz
push
pop
push
repz
cwtl
lods
sbbb
popa
xor
test
rolb
xchg
outsb
xchg
inc
movb
jl
rolb
das
dec
push
dec
dec
ljmp
lretw
aaa
shlb
mov
mov
fwait
jnp
daa
sbb
ljmp
mov
ljmp
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
insb
decl
cli
mov
sub
sub
das
in
decl
mov
ds
pop
sbb
imulb
and
jle
jo
fsubs
ljmp
sbbb
test
xor
dec
xchg
pop
shl
dec
push
mov
inc
adc
adc
nop
push
and
xor
aaa
xor
lock
imul
and
and
pusha
dec
scas
int
mov
mov
jp
pop
push
insb
inc
jb
fldt
fadds
imul
add
dec
pushf
mov
cmp
pop
jl
insb
sub
cs
cmp
sahf
cmp
sub
sbb
xchg
out
cmp
cld
and
cmp
dec
in
pop
fmull
push
jl
loopne
mov
mov
xor
dec
repz
pop
add
push
dec
pop
aam
adc
pop
xor
dec
push
push
dec
stc
mov
ss
cmp
xor
sub
sub
xor
inc
fsubl
icebp
xor
inc
pop
xor
add
mov
and
jne
cmp
insb
add
add
es
rcl
das
js
push
lods
and
add
je
out
mov
dec
jp
scas
push
sub
xchg
jb
jo
xchg
sti
out
aaa
bound
je
bound
mov
sbb
or
jae
add
sub
pusha
push
loopne
dec
outsl
fisttpl
sbb
xlat
inc
sub
test
xor
insl
pop
or
das
or
push
fimull
lods
das
and
pop
adc
fldl
lock
enter
lahf
out
push
sbb
and
aaa
repnz
add
mov
push
push
jmp
pop
adc
mov
add
dec
pop
push
push
aaa
jg
inc
shlb
addl
mov
push
out
push
pop
and
and
inc
or
or
jns
push
adc
dec
push
inc
adc
push
ljmp
add
dec
mov
sbb
dec
adcl
push
hlt
or
and
cwtl
mov
fs
mov
scas
cmp
cs
mov
flds
aaa
stos
movsb
sbb
scas
pop
mov
in
fmuls
ret
aad
int
out
ds
push
rcl
pop
dec
fldcw
fs
cmp
jecxz
jo
push
inc
fldln2
imul
pop
in
sahf
ja
xchg
xchg
pop
mov
imul
arpl
cmp
inc
jmp
aam
es
jae
mov
mov
cs
push
rol
outsb
fbstp
pop
push
shl
and
pop
pop
fidivl
in
lods
popa
scas
cwtl
es
les
daa
ja
pusha
dec
iret
xchg
divl
out
movsl
outsl
rclb
cmp
ljmp
stos
cmpsb
loopne
mov
mov
cs
int3
into
push
scas
push
mov
sbb
dec
loop
iret
repz
ds
xchg
push
outsb
jge
aaa
sti
mov
jge
leave
aam
ds
movsb
ss
jecxz
call
cmp
repz
outsl
jl
mov
cs
pop
xchg
xchg
mov
lds
xlat
out
ds
repz
cwtl
sbb
add
jnp
cmp
cmpsl
mov
jae
loopne
ds
aam
aaa
enter
sahf
aaa
sti
fcomip
cltd
xlat
jl
aad
push
sub
adc
jmp
cmp
fstl
lods
shrb
icebp
aam
aam
mov
imul
or
arpl
adc
cmovle
imul
jp
iret
repz
scas
into
in
pop
mov
dec
repz
mov
repz
xchg
inc
fstl
lcall
arpl
dec
repz
inc
test
out
xor
sahf
test
xor
out
sahf
inc
pop
ja
stos
lret
repz
or
es
cwtl
cwtl
cs
or
outsl
pop
test
jg
dec
sbb
scas
sub
idivl
les
test
stc
add
adc
clc
ljmp
adc
push
mov
xor
adc
mov
mov
mov
jmp
mov
loopne
mov
mov
pop
inc
and
nop
aas
in
hlt
pop
sbb
enter
adc
inc
cld
xchg
or
adc
daa
or
pop
adc
add
and
inc
loop
outsl
or
data16
scas
stos
outsb
push
push
jae
popa
pop
adc
insl
aas
inc
push
lret
outsb
push
inc
daa
inc
sbb
or
aaa
push
pop
and
insl
mov
cmp
jae
xlat
rcr
dec
fisubl
push
loop
jae
testl
dec
cmp
divl
ljmp
cmpsb
dec
add
jbe
in
xorps
push
insb
pop
sbb
jb
dec
pop
je
jns
ja
xlat
aaa
push
fisttps
jp
das
push
in
jno
ret
outsb
or
jne
divl
iret
push
pop
test
out
pop
retw
js
frstor
or
dec
mov
ja
cmp
pop
push
cwtl
push
fstpl
add
dec
jo
cmp
out
push
mov
xchg
jo
sbb
xor
outsb
xlat
jl
popa
insl
jo
es
insb
je
push
addr16
push
jle
jo
jae
es
outsl
and
aas
cmpb
sub
and
cmpsb
call
lods
mov
mov
xor
xor
xor
xor
xor
cmp
and
xor
push
xor
xor
cmp
jbe
int
push
add
ss
xor
mov
adc
adc
xor
pop
adc
cmp
mov
bound
pop
dec
or
in
push
lret
add
pop
or
or
jne
daa
or
xchg
pop
mov
adc
adc
mov
adc
push
pop
add
ljmp
sbb
inc
push
adc
bound
pop
mov
fcomps
inc
or
aam
bound
push
cmp
jbe
lods
adc
sbb
push
inc
inc
xor
jge
mov
mov
jg
pop
mov
mov
pop
or
push
gs
adc
mov
sbb
js
cmp
sub
dec
xor
pop
sbb
daa
push
popa
ffreep
push
push
arpl
cmp
fsts
lahf
inc
push
fcoms
lock
jnp
popa
adc
xor
sub
dec
or
enter
or
pop
mov
loopne
movsl
sti
push
into
push
lods
push
sbb
and
mov
sbb
loop
arpl
das
adc
xor
mov
pop
mov
or
sub
adc
sbb
push
out
and
arpl
pop
inc
daa
sbb
les
xor
into
lock
adc
aaa
push
xor
and
js
rcll
mov
xor
fmuls
jecxz
daa
adc
ret
jbe
das
lods
les
xor
push
mov
aaa
lahf
xor
rolb
pusha
mov
and
mov
xorb
das
stos
push
sub
aaa
daa
cmp
jge
aad
mov
lods
ss
iret
popa
dec
cmp
fldt
das
adc
pop
ret
bound
dec
insl
daa
insl
push
insb
mov
add
xchg
and
mov
fs
dec
into
je
mov
cmpsl
pop
add
inc
repnz
dec
sub
sbb
mov
push
loop
adcl
insl
add
pop
or
mov
scas
pop
cltd
daa
lahf
add
xchg
outsb
mov
sub
int
or
lods
pop
addr16
lock
pop
jg
mov
jecxz
add
push
lea
mov
and
inc
mov
imul
es
xor
sbb
lret
int3
inc
sbb
xor
call
orb
adc
out
adc
jl,pt
push
push
cmpb
insl
inc
imul
adc
mov
inc
push
pop
jo
sbb
add
js
adc
ja
mov
outsb
cmpsl
call
clc
add
and
addr16
cmp
stc
sbb
aam
orb
shrl
cmp
daa
push
jle
icebp
jb
sbb
and
dec
adc
pop
cmp
das
push
test
mov
sbb
xor
sub
mov
push
and
pop
lret
ret
es
hlt
sub
sbb
or
ficomps
adc
add
loopne
mov
daa
test
ret
pop
bound
adc
inc
xor
adc
daa
sub
push
add
sbb
sub
push
xchg
push
subl
add
dec
push
fneni(8087
xchg
dec
add
xor
cmp
ret
mov
or
sbb
dec
addr16
jbe
es
dec
pop
ret
inc
jg
mov
pushf
daa
push
adc
xchg
or
fisttps
add
xchg
xchg
push
cmp
in
dec
and
call
jo
fs
dec
adc
push
or
shlb
dec
push
les
test
rcrl
pop
and
arpl
test
xor
push
clc
repnz
jbe
pop
inc
test
push
or
in
not
stos
ljmp
and
xchg
fldcw
ds
xor
push
fs
xor
cwtl
cmp
repnz
pop
insl
pushf
negb
push
shll
lret
adc
jb
or
ret
data16
xchg
fs
or
mov
push
mov
or
mov
push
xor
xchg
push
outsl
ret
or
pop
xchg
dec
loope
mov
addb
push
or
push
lods
cmp
jmp
inc
sbb
sub
cmp
sub
or
push
xor
lcall
and
jae
inc
push
add
pop
cmp
push
mov
adc
fbstp
aam
sbb
js
lock
push
leave
sub
les
jp
fwait
adc
jno
daa
pop
pop
sbb
add
das
cvtps2pi
pop
adc
inc
out
dec
dec
dec
aas
pop
cmp
test
pop
decl
test
das
jo
pop
in
or
add
insb
stos
xchg
pop
and
sbb
xchg
xor
push
xchg
shrb
xor
push
incl
xor
push
das
repz
mov
sbb
cmp
xor
mov
roll
add
or
data16
xor
xor
add
pop
push
add
or
adc
mov
jns
and
in
iret
xor
fidivrs
fwait
inc
mov
mov
mov
fldcw
mov
popa
xchg
sbb
int
mov
sub
add
or
repz
add
int
adc
push
push
dec
str
data16
lea
and
pop
adc
lcall
xchg
incl
loop
jae
push
pop
pop
cs
and
inc
dec
push
mov
mov
pop
roll
test
xor
sub
bound
sbb
inc
test
inc
or
add
push
pop
insb
jbe
fs
xor
xor
lock
bound
jl
ds
adc
insl
out
repz
or
push
adc
adc
adc
push
push
add
pop
mov
xor
add
xor
sbb
aam
out
clc
sub
cmp
xor
pop
inc
sub
jmp
aaa
inc
xor
sub
or
inc
sub
inc
dec
dec
filds
push
sub
adc
call
and
adc
sbb
or
ds
pop
push
push
xor
pop
adc
add
add
incl
dec
pop
add
pop
and
add
xor
mov
call
call
add
or
add
inc
push
ds
decl
adc
pop
cmp
and
or
add
push
or
inc
xor
adc
inc
mov
call
sub
add
xchg
or
push
test
xchg
cmp
xor
adc
push
mov
or
cli
pop
push
popf
sub
pop
xor
cmpsl
pop
mov
dec
sbb
xor
push
scas
mov
push
aaa
dec
lds
push
adc
push
add
les
mov
bound
add
cs
push
push
sub
or
psubusb
stos
push
pop
icebp
dec
and
dec
push
dec
jl
fstl
push
inc
test
and
mov
sarb
xchg
add
les
cmp
andl
popa
in
fsubrs
xor
cli
dec
ljmp
loope
pop
xor
mov
push
push
inc
push
dec
inc
dec
push
dec
mov
add
outsl
and
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
incl
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
mov
jmp
dec
fdivr
ljmp
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
jmp
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
mov
push
ds
jo
push
push
shll
dec
daa
mov
mov
lcall
xor
sbb
dec
stos
fmuls
lret
rep
cs
fbld
js
test
add
mov
mov
movsb
mull
jno
addr16
decl
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
arpl
pop
and
push
pop
aaa
ja
insl
pop
xor
push
inc
dec
jne
push
fs
sub
jmp
inc
jp
or
pop
js,pt
cmp
add
cmp
sub
stos
pop
adcb
sub
cmp
cmp
push
dec
pop
jae
jmp
aas
or
jnp
and
jns
xor
and
pop
push
xor
pop
daa
pop
xor
pop
sbb
pop
add
adc
sub
mov
pop
leave
testl
popf
fld
sbb
aam
mov
iret
sahf
jmp
aaa
pop
pop
daa
pop
daa
xor
pop
daa
ret
ljmp
and
std
add
pop
or
adc
push
and
out
push
aaa
push
xor
inc
add
xor
popf
cmpsb
push
xor
push
inc
add
inc
mov
inc
inc
xor
and
aaa
inc
push
inc
pop
mov
in
cs
inc
ss
cmovb
imul
pop
ss
cmpsl
ss
pop
dec
push
and
enter
add
lcall
ja
add
sbb
jge
enter
sub
or
loope
ds
dec
add
push
or
std
in
pop
js
hlt
scas
bound
pop
lahf
cmp
push
inc
push
push
cmp
fstpt
dec
enter
pop
xor
out
sarl
adc
push
push
paddsb
push
test
mov
leave
jle
inc
xor
push
adc
inc
adc
ret
or
adc
mov
rclb
mov
js
mov
sub
or
adcl
loopne
aad
pop
lods
sbb
xor
xor
jp
fldl
jmp
or
aaa
mov
fsubrl
add
lods
pusha
int
adc
sbb
push
inc
jnp
jp
pop
mov
into
push
sbb
stos
fadds
outsl
sub
mov
adc
sbb
or
mov
adc
pop
add
or
pusha
cld
sbb
or
push
inc
xchg
ds
mov
mov
pop
mov
or
push
sbb
or
or
and
add
jb
mov
dec
hlt
in
add
add
sbb
lods
xor
xchg
fcoml
push
push
ret
dec
js
sbb
in
sbb
xor
adc
add
scas
inc
shl
mov
fsubs
cmp
xor
cmp
test
int3
mov
inc
mov
pop
xchg
dec
aad
bound
or
inc
fisttpll
pop
test
pop
aad
xor
ljmp
je
xor
js
in
enter
jbe
jae
popa
insl
gs
or
in
cmp
add
rcr
inc
pusha
shr
and
inc
mov
movsl
loope
imulb
xor
insl
loop
or
pop
pop
int
out
testb
sbb
inc
outsl
insb
dec
push
popa
je
push
push
pop
add
xor
pop
xor
xor
add
fildll
pop
add
xor
out
push
gs
add
repnz
xlat
add
cmp
add
pop
inc
or
stos
leave
or
mov
or
les
test
pop
int
addb
add
lods
push
sbb
and
aam
mov
push
jae
add
imul
xchg
cmpsb
inc
mov
and
sbb
stos
or
pop
stos
push
ds
jae
sbbl
adc
fisubs
cmpsl
sub
sbb
push
sbb
xor
faddl
cmp
js
push
inc
dec
jle
mov
sub
adc
pop
pop
adc
or
inc
xor
test
popa
das
shrb
stos
dec
sbb
ja
jb
jg
inc
mov
jae
sub
or
inc
jne
push
sbb
xor
into
or
pusha
and
das
or
test
push
or
test
ds
jl
push
pop
sub
add
xor
xor
pop
adc
fiadds
sbb
ds
push
daa
sub
mov
call
aaa
aaa
aam
fcoms
daa
ljmp
fs
jo
pop
movsl
xchg
and
cli
inc
mov
or
push
push
pop
mov
cs
movsl
pop
popf
xchg
inc
out
pop
pop
into
lret
lea
cmp
cmp
xor
mov
iret
pop
cmpb
push
sub
scas
pusha
push
and
push
das
arpl
sub
mov
pop
sbb
and
inc
test
aas
ds
sub
inc
dec
cmp
int3
lods
add
push
xchg
inc
sub
pop
mov
je
inc
and
xor
mov
mov
shrb
xor
int
adc
jne
outsl
sbb
adc
add
adc
sub
and
dec
xor
push
push
rolb
push
or
dec
pop
add
imul
xor
add
and
jle
pop
aas
or
pop
pop
fisubrs
xchg
pop
pop
pop
movhps
into
inc
fcmovne
rorb
dec
pop
dec
pop
divb
inc
movsl
repz
pop
repz
push
pop
cs
lea
pop
jbe
pop
cmp
xor
iret
xor
stos
or
notb
xor
pop
inc
test
adc
xchg
adc
icebp
cmpb
sbb
scas
jle
push
adc
and
and
jnp
push
and
add
cmc
xchg
jns
cmp
inc
lcall
pop
jbe
test
push
jne
or
push
push
pop
aas
filds
sub
pop
shrb
or
int3
inc
notl
push
popa
mov
insl
insl
lds
outsl
and
data16
inc
jp
imul
dec
outsb
push
je
bound
and
xchg
inc
insb
rcll
jmp
jle
inc
dec
push
inc
pop
xchg
inc
dec
inc
push
pop
test
leave
mov
xlat
jb
gs
js
cmovae
pop
or
pop
daa
dec
push
dec
addb
jb
bound
pop
ret
dec
xchg
or
adc
push
push
and
aam
xchg
ret
loope
pop
pop
sub
nop
push
shlb
adc
divl
xorl
mov
push
jb
push
adc
push
jno
inc
push
or
add
pop
cli
lcall
jne
or
sbb
jg
push
xor
or
les
jl
and
dec
xor
push
mov
dec
add
cmp
xchg
cs
or
adc
inc
and
pop
jo
pusha
or
and
adc
add
mov
adc
daa
in
or
or
fsubs
xchg
mov
or
and
mov
or
inc
rcll
sbb
mov
mov
inc
sbb
pop
add
rclb
stos
sbb
push
insb
or
pop
cmp
adc
fsts
mov
cmp
adc
sbb
loop
int
sbb
mov
sub
bound
outsl
or
dec
dec
and
inc
add
lret
int
nop
pop
shlb
add
sub
jle
scas
inc
das
mov
dec
add
in
ret
dec
orb
xchg
dec
inc
xadd
inc
xchg
inc
jg
inc
xchg
inc
cmovo
fdivp
sub
cmpb
aas
mov
sub
outsl
maxps
dec
add
fadds
xchg
sbb
das
xchg
mov
pushf
test
mov
xor
insl
das
push
aam
aas
add
out
mov
dec
movsb
jnp
inc
fiaddl
and
jne
jne
cmp
inc
add
in
or
cmpsl
ja
lahf
pop
lods
mov
daa
mov
xor
test
insl
insl
adc
mov
sbb
pop
hlt
cld
sbb
jg
dec
push
xor
outsl
nop
sbb
inc
and
cmp
push
jb
xor
jb
push
sub
cmp
or
sarl
push
fcomps
mov
mov
gs
cmpsl
stc
mov
mov
inc
ds
repz
dec
pop
sub
hlt
pop
sahf
xlat
cmp
push
pop
iret
repz
repz
pop
push
test
int
imul
in
enter
cmp
nop
je
push
jo
mov
les
push
addl
pop
xor
adc
out
dec
test
xchg
and
and
in
int3
imul
pop
out
xchg
data16
add
fdivrs
add
out
movsb
push
sub
out
push
mov
in
mov
sbb
ja
shrl
test
xchg
jns
xchg
sub
xor
dec
es
clc
sbb
adcb
pop
das
inc
push
dec
pop
push
xor
jns
ret
filds
sbb
mov
mov
outsl
fbld
xchg
xor
cmp
push
mov
add
dec
sub
shll
push
test
pop
scas
sbb
push
xor
js
pusha
and
in
dec
xchg
pushf
xor
xor
sub
enter
dec
push
adc
pop
adc
sbb
ret
push
sbb
add
dec
xchg
xor
out
xchg
xor
and
rcrb
int3
pop
leave
sub
and
cmp
lock
call
mov
sbb
test
fwait
mov
pop
je
shll
int3
pusha
fs
scas
xchg
or
mov
pusha
pop
mov
mov
bound
dec
xchg
add
in
or
pop
sbb
fidivl
and
pop
pop
insb
push
js
filds
add
and
enter
outsl
and
pop
xor
insb
cwtl
sbb
and
or
or
adc
dec
xchg
add
in
and
cmpsl
js
add
pop
and
jo
xlat
cmpsl
jecxz
cmp
pop
push
add
addr16
push
adc
aaa
hlt
data16
hlt
idiv
add
mov
daa
add
bound
mov
pop
cmpsb
lahf
mov
sbb
push
mov
mov
or
jg
push
rclb
push
scas
imul
movsb
xchg
push
leave
xor
pusha
pop
sbb
inc
inc
pop
pop
and
xor
and
sbb
mov
xor
divl
sbb
pusha
popa
jo
xor
push
jmp
push
outsl
jg
push
rclb
mov
push
movsb
bound
cmpsl
push
add
cmpsb
clc
gs
pusha
bound
cmpsl
enter
nop
xchg
jo
in
push
lock
and
or
hlt
sub
dec
mov
and
and
or
jl
mov
nop
push
ret
adc
or
popa
pop
in
pushf
shlb
scas
add
xlat
leave
or
or
xchg
xor
shrl
mov
in
lahf
pushf
adc
or
pop
pop
add
adc
and
inc
outsl
and
pop
ds
repnz
and
and
adc
ret
push
pop
mov
aaa
mov
mov
imul
add
or
bound
mov
add
jecxz
lock
xchg
loopne
out
mov
adcl
or
push
repnz
insl
mov
fs
add
es
nop
jg
or
inc
add
lods
in
sahf
aam
add
sub
fisttps
inc
jmp
dec
push
adc
xchg
sbb
das
outsl
add
ss
inc
aad
pop
fs
inc
mov
cwtl
popw
test
ss
fcoms
mov
rcl
aaa
hlt
xchg
inc
cmpsl
add
cmp
xlat
shlb
leave
add
pusha
daa
push
out
int3
pop
leave
aad
lahf
or
add
jo
adcl
in
repz
push
or
add
imul
iret
cmp
push
mov
or
or
lds
aas
popf
nop
pop
jb
xchg
push
nop
es
push
lods
pop
or
test
xchg
or
imul
push
add
add
dec
ficoms
cmp
sbb
and
push
rcrl
outsl
out
nop
and
and
xchg
jbe
push
addr16
and
out
addr16
sbb
daa
add
adc
and
aam
pmulhuw
and
outsb
lock
imul
in
ss
test
stc
lods
lea
xor
call
cmpsl
js
push
insb
in
fstl
push
enter
or
mov
or
ja
jbe
xor
inc
in
mov
outsb
mov
pop
add
aaa
and
push
xor
aam
or
data16
cmp
das
pop
or
sahf
mov
nop
cwtl
aas
or
push
pop
addr16
loopne
insb
sbb
out
adc
stc
int
sbb
jbe
mov
add
dec
arpl
stc
cmp
xchg
ret
jp
int
jns
jo
mov
xor
repz
jae
test
repz
adc
das
mov
out
pop
jge
push
mov
dec
jle
out
xor
rclb
inc
push
pushf
mov
lahf
out
ficoms
jo
mov
xor
ja
push
mov
cmp
xor
sahf
cmpsl
push
rcr
test
repz
sub
test
jb
cmp
push
xchg
mov
xor
pop
xchg
repz
pop
cli
sub
inc
jb
out
ds
pop
mov
outsb
loope
mov
int
jns
ficompl
int
stc
sbb
sarl
out
out
sbb
cmp
repz
xchg
insl
cwtl
loopne
xchg
imul
mov
jl
out
xchg
fbld
xchg
pop
out
ds
rcrb
xchg
cmpsl
jmp
repz
push
xchg
xor
or
jns
cwtl
xor
fwait
cltd
xlat
cmp
jns
lcall
lahf
out
and
lahf
cmpsl
stc
xor
xor
fwait
iret
repz
pop
iret
pop
mov
repz
xchg
mov
sub
xor
out
dec
mov
xor
out
notl
out
xor
repz
enter
repz
cmpsl
mov
repz
out
or
iret
cmp
sti
push
aaa
stos
push
lret
ss
push
cmp
out
jl
or
stc
cmpsb
lods
shr
scas
cmpb
repz
add
cmp
repz
stc
xor
out
mov
sbb
stc
xor
cmpsl
fdivr
inc
mov
cs
ss
cmpsl
popa
xchg
ud1
cmp
out
add
mov
dec
pop
mov
stc
cmp
repz
push
scas
loope
ret
sahf
cmpsl
push
mov
repz
iret
mov
les
ds
pop
mov
repz
jge
jl
repz
inc
int
push
fcmovnu
jl
iret
divb
int3
pop
iret
out
adc
shrl
sarl
and
cmp
iret
shl
add
push
jns
add
add
fildl
sti
pop
jno
pop
add
push
add
jbe
cmp
mov
mov
mov
dec
sahf
xchg
out
in
add
nop
rorl
jp
sub
je
movsl
add
pop
paddq
or
sahf
in
inc
aas
bound
leave
test
in
mov
notrack
and
and
ret
fstps
push
mov
or
adc
or
scas
jbe
pop
iret
shlb
loop
pop
dec
enter
popa
dec
mov
dec
cmp
pop
cld
dec
adc
cmp
adc
out
fs
bound
xorb
aas
jo
inc
pop
and
jbe
jg
dec
xor
ds
fbld
pop
pop
mov
arpl
fimull
sarb
loopne
fcomps
jmp
dec
and
sarb
int
divb
adc
notb
idivb
mov
cld
mov
iret
and
enter
push
xchg
fs
ljmp
decl
mov
pop
push
aaa
ja
cmpsl
mov
jbe
pop
push
mov
mov
jnp
das
addl
fcomip
cld
push
dec
mov
fiaddl
push
outsb
push
setl
enter
ds
add
ja
leave
dec
mov
ja
or
or
pop
dec
pop
cmp
rcrb
xchg
pop
dec
sbb
adc
scas
cmp
sub
pop
mov
test
adc
roll
adc
sahf
push
pop
push
dec
push
mov
xor
cmp
aas
mov
dec
daa
insb
inc
mov
mov
sbb
ljmp
rcr
add
jp
or
outsl
push
jbe
inc
dec
repnz
jns
js
jns
xor
add
les
push
out
shlb
repnz
and
mov
pop
xor
ret
inc
and
push
clc
fbld
jns
jns
sbb
xchg
push
add
xchg
iret
int
xchg
xchg
jp
mov
daa
pop
jnp
push
push
sub
dec
lods
sbb
je
leave
sub
jp
push
mov
in
scas
adc
inc
jnp
jb
and
jnp
jnp
leave
xchg
cmp
rolb
mov
adc
jnp
add
lret
outsl
repnz
add
and
jns
jl
icebp
iret
insl
sub
insb
pusha
mov
xchg
xchg
jl
scas
jns
mov
aam
inc
mov
or
enter
mov
and
xchg
xor
jl
jl
out
fisubrs
add
addl
mov
or
xchg
cmp
ret
inc
sti
je
inc
mov
in
jge
cmp
daa
sub
xchg
adc
xchg
jle
jle
jge
mov
jl
addr16
into
lock
scas
dec
jge
leave
inc
repnz
fmulp
leave
xchg
dec
sahf
xchg
out
test
cmp
and
cmp
out
testl
sbb
jle
jle
jb
enter
jle
jle
fnstsw
insl
cmpsl
jne
in
jbe
pop
jge
test
bound
mov
pop
mov
fsts
mov
jg
jg
cmpsb
mov
cmp
les
mov
xchg
lret
mov
xor
xor
pop
orl
das
nop
dec
es
push
leave
push
adcl
adcl
adcl
aam
jno
jns
outsl
add
les
pop
push
xchg
add
cmpb
outsl
in
cmpsl
js
push
dec
dec
add
add
in
addb
add
mov
push
lds
ret
jmp
push
daa
inc
xchg
call
fsubp
adcb
xor
adcl
xchg
sub
xor
cmp
xchg
push
jb
lcall
add
sub
orl
test
repnz
mov
xor
sub
and
orb
adc
pop
sahf
out
sahf
or
or
or
jns
dec
orps
out
sahf
out
adc
sahf
out
sahf
adc
js
out
push
scas
pop
mov
jl
lret
nop
test
xchg
iret
insl
repz
add
in
or
push
andl
leave
test
subl
xchg
xchg
mov
in
lea
and
inc
dec
jb
xchg
mov
lods
int
or
in
mov
in
test
pop
mov
dec
and
in
mov
pusha
das
fcmovnbe
jns
push
mov
cs
addl
fs
inc
in
pop
mov
push
iret
add
push
in
pop
test
inc
add
adc
add
daa
and
add
jno
es
daa
xchg
xchg
or
orb
and
test
push
pop
cmp
mov
js
inc
pop
cs
adc
add
inc
adc
lods
mov
test
mov
mov
dec
cs
mov
xchg
aam
xchg
leave
inc
cmp
push
add
mov
push
addr16
enter
mov
mov
cltd
or
cmpb
mov
mov
xchg
mov
xchg
xchg
mov
mov
leave
lods
mov
daa
cmp
fsub
and
nop
mov
xchg
pop
mov
pop
xor
pop
pop
dec
mov
add
inc
xchg
lea
mov
xchg
mov
jns
push
add
or
push
lret
mov
fildll
add
push
in
repz
add
xor
sbb
cli
and
adc
lea
mov
mov
mov
popf
mov
pop
lods
mov
mov
pop
pop
int
aad
fisttpll
pop
pop
in
mov
mov
mov
pop
or
pop
bswap
leave
leave
dec
femms
or
leave
or
or
leave
leave
leave
leave
pop
push
add
leave
add
add
pop
and
xchg
in
jbe
addr16
xchg
gs
jae
mov
cmp
xchg
push
add
xchg
mov
mov
mov
inc
mull
ja
pop
leave
jae
loopne
mov
cmp
push
xlat
mov
nop
out
inc
into
lock
xlat
xchg
mov
out
outsb
and
push
push
iret
repz
or
or
dec
and
outsb
decl
lahf
nop
cld
mov
inc
rorl
mov
into
jo
mov
mov
mov
insb
mov
popf
jb
jp
addb
jmp
push
setb
mov
or
mov
psrld
mov
cmovle
aam
cmp
pop
arpl
push
aas
ret
daa
dec
xchg
ds
or
ffree
or
into
shll
adc
leave
leave
add
std
add
jg
or
xchg
xchg
xchg
mov
lea
out
mov
pop
imul
iret
leave
repz
adc
ds
pop
and
das
add
cmp
enter
in
clc
das
add
push
mov
in
fldl
cmovbe
in
cmp
xchg
mov
mov
jl
dec
inc
mov
mov
cmp
repz
push
mov
mov
iret
leave
or
or
or
repz
or
or
incb
movaps
push
bound
in
popl
jns
fistpl
mov
mov
out
mov
or
iret
or
nop
inc
repnz
fadds
je
daa
xchg
jl
mov
nop
sub
inc
dec
sahf
fistl
cld
jmp
dec
add
enter
nop
jmp
and
xchg
ret
insb
xchg
pop
bound
fnstsw
xor
jl
cmp
xchg
mov
jp
fsubrl
mov
in
xchg
and
nop
cmp
xchg
pushf
or
add
inc
mov
xchg
sbb
pushf
jmp
cltd
pop
xor
xchg
adc
xlat
gs
jmp
pop
mov
mov
nop
addr16
mov
and
xchg
xchg
enter
add
cwtl
pop
cmp
xchg
aaa
xchg
enter
imull
inc
xchg
mov
add
js
sbb
xchg
mov
lret
lret
mov
xchg
ret
pop
inc
xchg
lahf
fcoms
sub
fcomps
in
in
adc
pop
xchg
sub
in
inc
xchg
dec
xchg
push
xchg
popa
xchg
cmpsl
jmp
in
xchg
jp
adcb
push
add
daa
daa
daa
daa
rcr
out
daa
daa
daa
repnz
or
or
cltd
xor
xchg
lcall
jns
xchg
push
jg
xchg
cmp
fildl
mov
insl
jb
mov
rorl
xchg
negl
and
fwait
xchg
addr16
mov
jbe
xchg
mov
mov
or
inc
fsubs
sub
iret
call
xchg
clc
add
leave
in
push
and
dec
aaa
jns
push
push
add
add
jb
jmp
outsl
xchg
ja
cmpsl
fwait
cmp
jg
or
jns
or
lahf
xchg
outsl
loopne
nop
cmp
pushf
lret
js
cs
push
xchg
xor
cmpsb
add
popf
push
sub
js
pop
fs
xchg
daa
push
xchg
pop
insl
xchg
and
ja
and
daa
xchg
add
mov
mov
add
ja
jmp
xchg
cmp
pop
cwtl
xchg
jecxz
daa
js
cwtl
addr16
sbbb
pop
cwtl
cwtl
outsb
jae
js
xchg
push
scas
mov
nop
cwtl
cwtl
fisttps
mov
mov
xchg
out
rcr
add
arpl
cmp
repz
cwtl
jmp
in
in
cltd
or
mov
cltd
sub
ud2
pop
or
cmp
cmp
or
push
cmp
cmp
add
sahf
out
sbb
sbb
sbb
jns
out
sbb
sbb
sahf
push
pop
pop
arpl
and
pushf
pushf
cmp
jae
and
icebp
cmp
andl
in
repnz
sub
dec
jb
cltd
mov
dec
mov
iret
sbb
add
lcall
rdpmc
lcall
push
xchg
add
data16
fstpt
jbe
cmpsl
push
sub
adc
dec
mov
es
daa
daa
mov
rcll
leave
lcall
xchg
mov
jns
enter
push
add
sahf
sub
fwait
iret
or
mov
pop
das
jge
outsb
repnz
iret
test
add
lea
popf
out
daa
or
inc
or
inc
inc
push
daa
mov
add
mov
repz
sti
fwait
cmp
and
pushf
or
dec
pop
into
sbb
call
inc
pushf
test
leave
repz
pop
pushl
push
mov
add
out
push
leave
dec
ja
out
mov
leave
jae
loopne
xchg
and
fmull
ja
and
inc
dec
lock
add
push
popf
cmp
and
popf
mov
pop
leave
xor
pusha
jno
add
out
jns
lcall
stos
lss
ret
rcr
pushf
cmp
repz
or
repnz
repnz
add
out
jns
adc
adc
adc
xor
scas
adc
movsb
jmp
pushf
dec
dec
sahf
data16
jns
out
out
jbe
jle
lret
stos
adc
xchg
loopne
ja
lahf
mov
movsl
inc
mov
mov
cmpsb
scas
mov
mov
jbe
pop
into
add
xor
lds
scas
ficomps
xchg
in
add
xchg
and
push
cmp
mov
in
ja
mov
sbb
push
cwtl
aaa
arpl
mov
scas
push
out
push
or
testl
add
push
xor
mov
sbb
jae
pop
push
lahf
pop
mov
outsl
femms
add
pop
lar
repz
pop
pop
or
or
cmp
push
cmp
or
push
mov
or
dec
outsb
xchg
cltd
lahf
mov
repnz
add
dec
sahf
pop
stos
mov
mov
fiadds
rorl
fninit
mov
mov
sti
mov
jns
daa
cmp
mov
push
add
sahf
out
add
xchg
pop
mov
mov
cld
mov
jns
out
pushf
mov
push
incl
mov
inc
repnz
test
cmpsb
mov
fadds
loopne
out
int
inc
out
push
jns
pop
call
mov
mov
and
mov
and
inc
xor
and
sub
inc
stos
stos
dec
es
adc
stos
push
lock
orb
gs
aam
or
leave
add
es
and
stos
jnp
dec
dec
fsubrp
hlt
add
das
aas
mov
adc
iret
repz
pop
sub
ss
repz
inc
or
or
iret
repz
or
sbb
hlt
movd
mov
subb
mov
out
push
adc
enter
movsb
and
cmp
movsb
cmp
enter
inc
mov
dec
pushf
or
and
lods
insl
movsb
xchg
xchg
xchg
or
adcl
cmpsl
scas
mov
push
inc
mov
pop
mov
movsb
xlat
sbb
hlt
fmull
fisttps
daa
cmp
push
lods
or
enter
movsl
and
add
das
pop
mov
mov
adc
inc
les
push
mov
xlat
mov
outsb
xchg
movsl
punpckhbw
jo
js
jl
mov
fs
rcll
sbb
lods
setnp
mov
pop
push
aas
push
pop
mov
fsubl
xchg
xchg
fsubrs
pushf
pushf
pushf
out
out
and
xchg
out
add
outsl
and
sbb
xor
xchg
push
cmp
in
insl
jne
add
in
popf
test
rcrb
rorb
push
das
and
cmp
ja
cmpsb
pop
incb
pop
and
push
pusha
rorb
add
add
cmpsl
jp
test
enter
cmpsl
cmpsb
cmpsl
mov
in
jns
pop
or
mov
in
addr16
xchg
adc
test
test
mov
pop
test
daa
pop
push
jae
roll
cmpsl
dec
push
mov
pop
cmpsl
bound
add
mov
mov
popf
movsl
shrd
test
pop
lar
jae
dec
or
int
or
lock
sbb
cmp
ja
test
test
dec
inc
test
dec
packuswb
in
mov
mov
fsubl
pop
xchg
ja
mov
popf
xchg
mov
shlb
ficompl
mov
mov
repz
outsl
mov
pop
es
stos
das
stos
fwait
cmp
pop
stos
jmp
pop
leave
jae
in
xchg
jl
popf
cmp
lar
stos
stos
lods
jae
rsm
xchg
movsb
fwait
mov
add
push
mov
decb
and
jb
imul
incb
stos
pop
repz
fdivrl
pop
push
outsb
repnz
or
or
psllw
adc
cs
cmovs
aas
pop
sets
and
mov
inc
mov
add
popl
sub
mov
je
mov
xchg
lods
add
mov
mov
pop
lahf
jg
mov
scas
push
add
sahf
outsb
repnz
sysret
iret
xlat
stos
push
popf
in
stos
clc
mov
fimull
add
and
dec
ss
cld
mov
mov
repz
in
test
add
into
lcall
mov
or
out
in
fucomi
testb
iret
push
lods
push
lods
repz
insl
push
pop
push
push
ss
movsb
fwait
cmp
or
push
lea
es
xchg
xchg
xchg
lods
lods
dec
lods
lods
pop
out
jns
pop
data16
in
dec
sahf
adc
xchg
mov
cltd
jmp
lods
pop
sbb
in
cmp
sub
inc
push
mov
inc
mov
cmp
out
pop
jp
add
cmp
scas
pop
scas
fildll
dec
fdivrs
orl
scas
jns
mov
push
or
jb
adc
or
cmpsl
lock
pop
cli
stos
icebp
ds
cmpb
mov
or
or
and
xchg
xchg
add
lock
mov
mov
dec
mov
add
mov
sbb
and
add
fcmovne
sub
pop
dec
add
pushf
je
out
pop
sidtl
out
jb
gs
jne
decl
cmp
scas
hlt
popf
pop
jo
push
rcrl
ret
mov
lsl
lret
scas
add
and
mov
pushl
mov
xchg
lock
pop
mov
pop
mov
mov
jle
add
push
icebp
xchg
mov
pushf
pop
xor
das
int3
aam
fdivl
repnz
push
scas
in
in
pop
pop
and
or
mov
mov
daa
push
add
iret
repz
aaa
add
add
cmp
dec
xor
xchg
add
jle
mov
pop
js
push
xorb
mov
rsm
jae
mov
pop
mov
iret
or
lret
shlb
cmp
pop
pop
std
syscall
mov
cmp
in
mov
les
ja
outsl
xchg
add
jbe
jns
pop
aas
jns
push
xchg
out
cmp
mov
or
push
mov
xchg
xchg
or
daa
daa
mov
aam
out
pop
xchg
xchg
xchg
xchg
mov
pop
xor
bound
mov
xchg
xchg
pushf
mov
icebp
scas
repz
xchg
fnstenv
cmp
push
inc
dec
packssdw
sbb
loopne
repz
sbb
and
xchg
int
cwtl
mov
fidivrl
in
das
sbb
mov
in
cmp
mov
add
rol
xchg
xchg
imul
mov
loop
jle
xchg
mov
add
mov
inc
mov
ficomps
out
cld
or
sbb
mov
dec
mov
mov
push
rclb
ja
shll
push
inc
cmp
pop
scas
iret
enter
mov
mov
mov
mov
mov
mov
push
or
cmp
repz
sbb
and
daa
into
jbe
sub
cmp
inc
mov
adc
insl
mov
mov
jns
out
pop
jae
jnp
subl
and
stos
mov
mov
das
das
das
shlb
mov
das
das
das
jecxz
out
mov
mov
mov
das
das
das
push
mov
push
mov
es
pop
jle
sahf
testb
mov
pop
pop
bound
push
sahf
out
sahf
jge
test
nop
and
out
cwtl
and
sahf
out
mov
mov
sahf
leave
daa
shrl
fmull
je
out
out
out
cvttps2pi
lds
idiv
cs
pop
mov
xor
ret
bswap
jae
dec
xor
add
stc
jmp
mov
mov
fadd
iret
addb
add
cltd
iret
mov
cmp
mov
sgdtl
pop
fimuls
or
repnz
fdivl
paddw
lods
addr16
inc
and
fmull
xchg
call
fs
pushf
add
out
stos
push
add
iret
repz
add
sahf
pushf
clc
add
daa
iret
repz
or
or
das
in
dec
outsb
pop
cmp
push
jns
sahf
out
adc
adc
sahf
out
jle
push
xchg
lahf
sahf
out
jns
stos
stos
sbb
sbb
lret
sbb
dec
loope
in
negl
add
inc
repnz
lds
push
add
xlat
mull
mov
add
mov
setle
cmp
add
pushf
pushf
cmp
bound
cmp
repz
adc
daa
mov
out
adc
andb
daa
hlt
adc
cs
pushf
pushf
pushf
fcompl
xor
pop
jbe
repz
pushf
jle
and
and
shlb
repz
leave
lock
mov
jns
fcmovne
push
es
cs
mov
or
das
enter
js
ja
jg
mov
jg
pushf
cmp
repz
lahf
pop
cmpsl
scas
popf
cmp
repz
jne
out
or
femms
xlat
out
in
sahf
pandn
out
push
adc
out
cmp
lcall
adc
sarb
repz
add
pop
pop
or
mov
pop
jmp
movsb
mov
sbb
mov
xchg
int
push
inc
mov
call
mov
rol
jb
test
pop
jp
mov
mov
ror
jbe
mov
pextrw
cmpsl
push
hlt
mov
lock
sarl
aas
cmpsl
add
jbe
jb
inc
dec
xchg
in
and
mov
xlat
xchg
mov
sahf
push
cmpsb
or
cmp
mov
ja
mov
jae
inc
lret
cld
sbb
sahf
flds
add
mov
in
aaa
ja
cmova
dec
dec
xchg
jb
daa
pop
pushf
jp
orb
ja
lcall
cmp
mov
or
sahf
xchg
fcmovne
aad
ja
add
mov
prefetcht2
pop
cmp
iret
add
sub
ret
ja
cmpsl
push
jae
cmp
pop
arpl
add
xchg
mov
add
mov
mov
scas
ret
int
mov
push
pop
rcrl
jb
loope
icebp
pop
stc
mov
les
or
pop
enter
adc
cwtl
fbstp
jns
insl
in
les
push
add
out
pop
add
and
add
jl
incl
into
cmpsl
imull
fstpl
mov
test
ljmp
and
or
shrb
lds
dec
and
pushf
fsubl
and
in
fs
add
xor
xchg
cmp
ja
movsb
mov
out
out
ja
pop
rclb
push
jb
push
cmp
jae
inc
rcrb
or
xlat
movb
js
filds
jmp
mov
fnsave
iret
push
add
in
repz
add
xchg
xchg
je
outsl
adc
sbb
xchg
xchg
xor
ds
dec
push
jns
dec
outsl
pop
pop
outsl
push
jne
jns
jns
add
xchg
mov
jns
mov
ret
jns
jns
fadd
jecxz
out
stc
xchg
xchg
ja
add
femms
push
sbb
sbb
sbb
xchg
xchg
xchg
xchg
sbb
push
adc
adc
sbb
xor
inc
fidivs
push
repz
repz
xor
repz
jb
jge
mov
cmp
repz
aaa
sahf
cmp
cmp
cmp
lret
loopne
jns,pt
mov
jmp
mwait
inc
or
cmp
in
inc
cs
inc
and
out
sub
dec
in
sahf
out
dec
pop
dec
fs
leave
leave
in
outsl
pop
jp
nop
cmpsl
fwait
cmp
fwait
push
cmpsb
rsqrtps
mov
mov
leave
xlat
pop
pop
shlb
daa
jp
lahf
sbb
fbld
lret
ljmp
add
inc
lret
inc
mov
pop
lret
cmp
enter
lret
xchg
lret
mov
lret
fbstp
hlt
ror
lret
lret
loope
fmulp
xchg
lret
testl
cmp
jnp
or
sbb
repz
repz
sbb
sbb
repz
inc
sbb
sbb
repz
pop
jo
jnp
sahf
out
xchg
and
xchg
out
cmpsl
mov
das
enter
daa
shrl
jbe
cmp
sub
sub
decl
repz
repz
das
adc
cmp
xor
xor
inc
pop
fisttpll
out
xor
sahf
xchg
out
pop
js
addl
mov
cltd
ds
out
movsb
aas
scas
mov
daa
daa
rcr
das
out
inc
repnz
jns
cld
inc
fiadds
int
test
roll
jns
insl
in
int
addps
add
les
push
js
dec
mov
mov
fbld
stos
mov
add
mov
dec
push
or
mov
punpckhdq
inc
sub
sbb
or
push
daa
cmp
adc
fmulp
xchg
and
into
and
sub
add
jns
add
clts
jb
jb
inc
dec
push
pop
push
stc
adc
into
jg
into
js
adc
or
pop
mov
call
pop
movsb
lods
loope
repz
mov
add
dec
and
lahf
or
out
out
inc
sahf
fsubrl
out
incl
iret
bswap
xchg
cmp
and
iret
mov
insb
xchg
and
js
iret
jg
iret
push
iret
fmull
mov
pop
pop
mov
jno
jl
cmp
repz
xchg
xchg
or
or
cmp
cmp
aam
ljmp
lldt
daa
out
jns
or
sub
sahf
out
push
sbb
sbb
rorb
out
sbb
sbb
leave
jae
arpl
jns
xchg
out
test
and
rep
daa
mov
mov
xor
fcmovnbe
das
jg
enter
enter
adc
jns
out
add
push
sub
sar
daa
daa
push
insl
fcmove
xchg
orl
in
sahf
ja
push
push
filds
ljmp
or
lret
cmc
roll
rorb
rclb
shrb
loopne
and
xrstor
aaa
ror
repz
inc
rorb
adc
popf
cmp
outsb
pop
jns
dec
aaa
jns
test
movlhps
dec
sahf
ja
push
push
movsl
movntq
and
sahf
adcl
es
test
in
std
sub
sub
sar
add
push
dec
repz
add
add
sub
cmp
mov
faddl
sub
sbb
pop
jns
jns
shll
jb
repz
add
xchg
setle
or
cmp
test
xchg
mov
out
repnz
lock
rcll
roll
aam
in
xor
or
cs
cmp
repz
or
mov
movsb
fwait
sysret
pop
pop
aam
mov
aam
aam
aam
aam
rclb
pushf
aam
xchg
cmp
push
mov
out
imull
lcall
aad
pmullw
or
and
inc
cmp
in
push
add
add
es
mov
push
pop
push
in
jmp
jp
jns
out
or
cmp
in
mov
mov
adc
enter
fmuls
out
cs
loopne
call
stc
add
sub
int3
pop
sbb
js
cs
das
push
pop
cmp
inc
cmp
repz
add
add
repz
jae
jle
popf
cmp
leave
mov
xchg
out
or
rorb
daa
daa
daa
daa
loope
testl
xlat
decl
pop
iret
repz
sbb
sbb
popf
cmp
dec
dec
pop
pcmpgtw
out
dec
sahf
push
jo
and
rorl
and
jns
out
push
and
sahf
xchg
out
mov
xchg
out
fisubrs
jmp
xchg
iret
repz
or
adc
repnz
sahf
fcomps
sahf
xchg
fucomi
and
sub
push
bound
cmpsb
js
jns
js
sbb
cmp
xor
stos
outsb
inc
adc
add
and
sub
arpl
push
mov
cmp
cmp
push
push
pop
push
add
aas
inc
push
push
pop
sbbb
cmp
aas
push
dec
stos
xor
pop
inc
mov
inc
popa
sub
cmp
aaa
cmp
push
add
sahf
out
outsb
sbb
out
or
or
or
xchg
fmull
aaa
or
in
jbe
push
imul
daa
adc
adc
jbe
dec
das
and
in
in
push
addr16
das
push
xorps
mov
imull
push
and
dec
sahf
out
sbb
push
pop
sbbb
jb
daa
iret
mov
sahf
mov
out
fbld
leave
in
into
aas
xlat
sbb
data16
pop
xor
and
add
jmp
out
xor
and
dec
repz
sbb
or
call
repz
fcom
ror
idivl
repz
mov
sahf
mov
lods
movsb
cwtl
nop
cmp
cmp
addb
jo
repz
repz
push
inc
inc
cmp
clc
cmp
xor
or
adc
inc
mov
mov
push
add
inc
push
adc
and
movsl
adc
aam
adc
push
sbb
push
std
mov
inc
inc
andl
xchg
add
add
or
and
inc
into
mov
sbbl
subb
mov
cmp
and
mov
iret
mov
in
call
std
dec
jle
adc
push
ficompl
mov
xor
mov
xchg
rcr
fsubp
stc
jb
jle
mulb
jle
push
inc
jg
sub
mov
pop
in
push
xor
add
or
and
cmp
hlt
push
clc
jle
fdiv
sar
aaa
push
mov
add
ret
pop
das
aas
adc
xor
xor
out
pop
fs
push
or
int
out
adc
adc
jo
dec
inc
out
in
in
or
in
lods
in
je
in
sub
dec
in
sub
enter
jb
in
jmp
clc
ljmp
push
jns
jp
push
cmp
mov
push
mov
testl
jbe
out
push
add
pop
in
lea
push
mov
pop
outsl
in
es
aam
into
or
add
cwtl
add
xor
push
xorb
daa
lcall
mov
xor
sarb
adc
push
push
aaa
push
insb
dec
xchg
aas
pop
daa
stos
push
lea
negl
sti
dec
sbb
idivb
scas
cmp
pop
jl
insl
push
jg
out
addr16
out
fcoms
add
rcll
lds
out
rolb
push
dec
inc
xchg
es
sahf
ja
out
xor
cmp
sbb
sbb
loopne
push
mov
aas
lock
iret
repz
and
push
and
cs
cld
lock
add
push
fcomps
pop
adc
fsubl
iret
repz
das
push
or
or
adc
pop
rcrb
in
enter
ficoms
push
rcrb
push
mov
sahf
out
pop
test
movsb
and
jns
out
and
and
sahf
mov
in
cmp
mov
frstor
out
xor
xor
pop
mov
es
filds
cmp
xorl
jg
sahf
out
pop
cmp
pop
js
mov
ds
repz
adc
xor
add
cmp
movsb
imul
jns
dec
insb
cmpsl
fadd
ljmp
in
dec
repnz
inc
pushf
or
in
ds
ret
mov
adc
pop
stc
and
mov
leave
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
add
fldl
xchg
and
and
aas
mov
add
sti
aas
jno
or
mov
pop
fs
dec
call
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
pushl
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
jmp
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
ljmp
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pushl
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
call
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
incl
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
sbb
and
xor
dec
nop
pop
cmp
fisubl
xor
ljmp
mov
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
pop
ficomps
frstor
add
inc
inc
je
inc
xchg
shll
cmovno
jnp
jmp
xor
popa
decl
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
mov
test
ficompl
jmp
mov
hlt
movl
imul
jmp
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
cli
dec
mov
insb
fdivs
jne
filds
or
shrl
out
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
incl
sub
mov
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
lds
pop
js
stc
and
push
loope
or
push
sub
insb
fs
push
out
push
ljmp
bound
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fcos
pushl
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
dec
into
pop
cmp
mov
inc
movsl
fisttps
fdivr
ffreep
shll
jmp
outsb
xor
mov
sarb
add
in
incl
xor
or
cmp
add
daa
adc
or
and
test
ljmp
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
pushl
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
call
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
call
add
mov
pop
jge
xchg
shlb
push
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
cli
ret
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
jmp
mov
rclb
or
add
mov
das
es
push
mov
or
add
mov
cmpsl
call
ret
sar
lcall
mov
fldcw
ret
es
pushf
mov
insl
incl
test
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
jecxz
lcall
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
incl
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
lcall
out
pusha
mov
fidivrs
mov
jmp
and
mov
lret
mov
cmpsb
mov
sar
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
pushl
filds
sub
or
inc
pop
mov
pop
push
push
or
ret
mov
scas
cmp
push
xlat
fcomp
fcmovu
cmp
repz
fstp
loop
iret
repz
repnz
call
repz
in
in
repz
repz
repz
div
clc
stc
cwtl
outsb
cmp
cli
sti
cld
pop
adc
add
adc
mov
orb
adc
push
in
sbb
and
jae
inc
adc
aam
mov
inc
jnp
inc
insl
bound
inc
dec
mov
or
popa
je
push
mov
aas
and
cmp
lahf
bound
inc
jno
xor
pop
inc
cmp
pop
mov
pushl
xor
aaa
cmp
popa
arpl
cmp
arpl
or
xchg
mov
gs
xor
pop
mov
mulb
inc
jbe
pop
insb
imul
ss
imul
or
mov
dec
inc
bound
inc
dec
es
outsl
or
sub
inc
and
js
movsl
shll
daa
sub
jecxz
adc
push
je
pusha
lret
ss
jbe
push
mov
dec
and
loop
je
inc
inc
movsb
aam
xchg
js
sub
sbbb
inc
mov
insb
popa
jns
push
pushf
imul
rcrb
popa
xchg
cmp
outsl
adc
aaa
aas
pusha
pop
push
cmovb
aas
rorl
popl
subb
daa
imul
int
pop
adc
mov
aas
jle
sbb
inc
dec
fistpl
inc
pop
mov
je
jo
inc
inc
add
testb
cmp
popa
mov
inc
push
mov
iret
int
push
dec
cmp
inc
mov
push
adc
sbb
mov
xchg
cli
inc
inc
outsb
jne
subl
ja
imul
add
add
outsl
fucomi
adc
arpl
add
insl
pop
push
clc
xchg
into
pop
jo
imul
pusha
popf
pop
inc
cmp
or
jg
aaa
dec
std
or
or
push
add
ss
andb
outsl
pop
or
lcall
cmp
mov
rorb
pop
mov
add
sbb
lock
dec
adc
cmpsl
rcl
sub
test
mov
mov
in
jno
pop
mov
andl
xchg
add
in
nop
test
pop
cmp
and
xchg
cmp
mov
jo
ds
subl
jns
mov
inc
jb
insl
stos
add
gs
fwait
jnp
addr16
outsl
arpl
insb
adc
fimull
inc
lods
ja
inc
jbe
pusha
xor
jg
cwtl
in
ja
dec
xor
jmp
das
adc
iret
lods
xor
lret
int3
inc
rep
and
push
test
das
dec
mov
sbb
inc
dec
push
sbb
cmp
lods
adc
lock
sbb
sbb
and
rclb
inc
push
inc
dec
pop
mov
bound
outsb
arpl
and
pusha
mov
lcall
dec
push
aaa
inc
jne
push
pop
sbb
push
inc
xchg
fildl
xlat
adc
push
daa
sub
adc
andb
sub
inc
adc
fsubr
cmova
add
push
fdivr
loopne
adc
dec
add
add
add
fistl
outsl
lcall
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
outsb
xlat
decb
add
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
sti
insl
pop
test
mov
pop
add
add
add
adc
add
les
add
fldl
jno
mov
sub
bnd
imul
loopne
cmp
call
xor
adc
pop
and
add
pushl
adcl
shl
and
bound
js
pop
xorb
mov
or
cmp
xchg
add
and
adc
rolb
addl
xor
pusha
or
pop
dec
push
xor
add
add
pushf
into
pushf
add
jmp
mov
pop
scas
cmp
adc
fwait
incl
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
mov
add
pop
mov
xorb
scas
add
add
js
jg
nop
cli
sub
rcr
push
ret
xchg
and
sub
jnp
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
fsts
dec
pop
ret
mov
cmp
ja
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
nop
dec
or
adc
pop
inc
inc
xchg
or
xchg
das
mov
std
or
add
lds
cld
cli
and
mov
std
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
pusha
adc
adc
mov
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
incl
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
decl
sbb
int3
lcall
fs
jg
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
call
lods
scas
xchg
test
aam
and
sbb
sarl
and
in
call
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
push
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
sti
jmp
sahf
loope
rorl
mov
int
arpl
push
out
or
in
ljmp
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
cmp
call
jg
xor
hlt
and
xchg
jmp
sbb
loope
xchg
add
pop
jb
mov
mov
mov
sub
lock
pop
mov
jl
rorl
adc
push
adcb
hlt
cli
in
sbb
stc
in
div
mov
sbb
mov
sar
andl
aas
icebp
testb
mov
inc
push
pop
xor
jns
mov
in
repnz
jno
pop
mov
jg
jg
scas
cld
or
push
inc
sbb
paddb
incl
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
push
lcall
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
in
aaa
fldln2
fildl
stos
es
or
dec
fisttpll
out
aas
std
push
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
jmp
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
popl
or
mov
cmp
das
jmp
xchg
pop
clc
pop
hlt
sub
push
aad
add
lea
jg
gs
std
xorb
decl
imul
outsl
adc
ret
das
pop
pop
pop
shlb
stos
jg
out
sarb
sbbl
jno
or
sarb
std
pop
inc
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
dec
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
pushl
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
call
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
fcmovu
ds
cmpsl
scas
popa
in
pop
or
pushl
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
out
add
out
jae
shrb
shlb
out
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
repnz
jg
adc
loopne
sar
adc
paddsw
lahf
xor
imul
dec
sahf
cmpl
mov
aas
mov
fsubrl
orb
and
jg
ret
push
clc
xchg
pushf
mov
repnz
loope
cld
push
and
mov
adc
inc
aas
push
rcrl
lahf
loope
pop
rolb
pop
inc
jb
fistpl
adc
call
jno
repz
fbld
nop
mov
inc
sti
arpl
daa
std
or
sbb
lock
jg
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
ds
fistps
lds
fidivrl
jg
stos
pop
ds
ljmp
add
dec
mov
sub
jge
xor
lahf
les
sbb
incl
cld
addl
sbb
mov
lahf
outsl
imul
clc
int3
push
sbb
pop
xchg
incl
test
bound
pop
outsl
xchg
inc
test
jg
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
pushl
jp
adc
lahf
mov
or
out
lcall
jle
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
mov
or
and
xchg
fidivrs
mov
insb
test
aas
repz
outsl
lock
outsl
push
paddsw
pop
stc
out
mov
clc
push
std
mov
je
icebp
or
mov
lcall
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
std
pop
bound
dec
ss
lods
movsb
incl
pslld
pushf
stos
xchg
mov
cmc
mov
jl
call
xchg
imul
pop
in
cmp
aaa
push
mov
fidivs
clc
adc
jmp
hlt
pusha
jg
loope
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
loope
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
les
icebp
das
incb
lock
pop
pop
div
cld
negl
or
js
fs
sub
fisubrl
jmp
push
lock
jge
fbstp
out
xchg
cld
paddsw
add
out
icebp
mov
loope
mov
cmpsl
popf
enter
sti
mov
fbstp
and
push
xor
outsl
das
insb
jp
or
out
cmp
das
js
fsubrp
popf
js
data16
decb
adc
mov
mov
mov
and
call
xlat
nop
cltd
add
xchg
mov
pop
push
and
inc
add
fs
es
fisttps
mov
mov
cld
jg
xchg
fimull
jp
aas
icebp
ret
ror
sbb
aaa
loop
out
sbb
adc
mov
mov
inc
mov
pop
clc
loope
loope
mov
lahf
sub
stos
jp
dec
add
xlat
jmp
insl
in
xor
cmp
lcall
decb
jo
pop
gs
adc
jg
pop
out
jg
jno
ret
cmpsb
stos
movsb
and
arpl
paddsw
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
outsl
sub
ljmp
jmp
std
mov
daa
jmp
faddl
insb
inc
add
mov
fisttps
imul
dec
push
pop
stc
push
dec
out
fstpt
mov
enter
add
mov
jg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
cmp
pushl
std
mov
xchg
mov
fildll
fsubrl
dec
add
push
aas
inc
or
add
hlt
inc
inc
sti
push
sti
pop
inc
dec
push
pop
and
push
cmp
push
mov
iret
and
lcall
jb
popa
pop
hlt
loop
push
adc
sbb
adc
or
jecxz
out
jns
sub
loope
call
in
loop
in
das
outsb
clc
pushf
pop
leave
sub
cmp
cmc
push
add
notl
jo
adcb
out
pop
cld
push
pop
lcall
xor
mov
std
popa
mov
inc
pop
and
sbb
ljmp
sub
mov
mov
out
mov
lret
xor
add
js
xchg
sbb
in
loope
out
call
aam
icebp
scas
mov
xor
inc
mov
sub
fisubs
repnz
sbb
xlat
js
jmp
push
xchg
xor
popa
repnz
clc
aad
jae
sbb
nop
cmp
and
outsl
inc
jp
mov
sub
incl
push
dec
push
pusha
stos
sbb
scas
add
sbb
or
xor
enter
mov
call
mov
sbb
add
imul
inc
pop
loop
scas
xor
repz
xor
cmp
jnp
jp
lea
xor
daa
lret
dec
daa
shl
cmp
push
imul
jmp
lret
test
xchg
xor
and
movsb
sti
sbb
test
fdivrp
jmp
xor
ss
js
add
adc
jmp
lea
xor
arpl
call
aas
leave
or
lds
mov
push
mov
fdivl
cltd
add
xchg
aad
mov
inc
outsb
ja
out
jmp
in
js
and
dec
dec
lods
xchg
je
adc
pushl
cltd
cli
testb
pop
repz
inc
insb
pop
stos
add
outsl
cmc
in
dec
jmp
or
stc
popf
xchg
ficomps
cmp
adc
les
cmp
cmp
test
fcmovb
cs
mov
mov
cmpsb
add
and
insb
cs
sar
adc
pop
shl
sti
call
cmc
jmp
ret
sbb
add
or
and
push
or
decl
pop
repnz
dec
cmc
roll
push
sbb
scas
dec
mov
decl
inc
test
add
sbb
pusha
or
xchg
aam
sahf
rclb
sub
sahf
decl
fmulp
push
jmp
cmpsb
xchg
loopne
test
adc
int
inc
mov
pushf
cld
cmp
mov
sub
mov
pop
xchg
cmp
adc
pop
int
pop
xchg
pop
fnsave
jmp
cmp
in
neg
jo
cmpsb
adc
lods
mov
pop
test
push
rclb
sbb
jo
decl
add
cmp
cltd
sbb
mov
movsl
jno
daa
movsl
aad
add
pushl
ja
out
je
cmp
cli
cmp
popf
cmc
sti
mov
mov
adc
dec
cwtl
into
mov
pop
mov
call
cmpl
mov
test
jmp
movsl
rcll
ja
sub
jmp
jmp
push
fs
adc
int3
xor
incl
loope
mov
add
popf
sub
add
dec
or
push
popa
and
imul
and
pop
ljmp
xchg
and
aaa
jl
mov
imul
dec
xor
mov
dec
adc
jbe
push
jp
out
call
les
test
inc
add
push
push
or
lcall
addr16
cmpsb
lahf
push
mov
stos
inc
addb
xlat
das
sub
outsb
push
pop
ljmp
push
dec
pop
insb
movsb
negl
psrad
ja
mov
decl
jge
mov
or
lods
mov
and
mov
mov
icebp
sbb
jecxz
jmp
ljmp
or
mov
and
popl
push
fucomip
sti
lea
sub
test
xchg
movsb
ret
mov
or
lcall
pop
cmp
insb
pop
fs
or
inc
lea
adc
out
clc
test
inc
into
out
popa
cmc
add
mov
add
add
xlat
int
lock
mov
push
push
cmpsb
mov
jmp
ss
notl
call
cmpl
repz
cld
push
je
mov
jg
insb
std
lds
cs
movsb
xchg
test
movsb
xlat
incl
rep
in
inc
xor
fwait
jge
js
adc
daa
jge
adc
adc
loope
ljmp
popa
fidivl
daa
mov
inc
imul
cmp
and
inc
inc
cs
clc
call
sbb
push
cmc
sbb
mov
cmpsl
cmp
mov
sub
mov
cmp
movsl
mov
jecxz
xchg
orb
or
mov
call
std
fs
int3
outsb
movsb
and
rcl
cmp
jmp
pushl
in
addr16
sarl
ss
stos
popa
insb
xchg
out
or
out
cwtl
dec
mov
xor
and
mov
stc
xchg
xchg
jmp
xchg
sub
call
cld
popa
andl
jmp
push
and
pop
xorb
jne
jns
jmp
shrl
iret
jbe
jbe
and
out
mov
pusha
lods
pop
int3
test
movntps
out
inc
test
inc
rol
stos
jl
jl
cmp
mov
and
popf
lahf
dec
int
jbe
adc
call
mov
push
sbb
stc
sbb
sti
mov
push
sub
loop
jmp
arpl
dec
movsl
lahf
cmpsb
jmp
inc
mov
dec
push
mov
pop
daa
frstor
fbld
xor
sub
scas
leave
dec
pop
test
sub
push
lods
in
call
into
sub
iret
lret
test
jg
sub
sbb
sub
lods
inc
adc
in
loopne
cwtl
xor
push
aas
dec
gs
pop
icebp
call
mov
cmpl
cmp
test
sbb
jne
sbbl
mov
and
dec
andb
bound
xchg
mov
dec
cmp
mov
aam
sub
test
push
mov
mov
mov
jmp
push
xchg
and
mov
inc
call
dec
shlb
cli
fldt
mov
sbb
outsl
cli
jmp
dec
push
mov
fistpl
pop
jg
bnd
mov
scas
gs
cmp
fwait
add
fnstenv
and
jnp
in
aad
mov
cmpsb
insb
iret
pushl
sbb
inc
sub
fwait
dec
mov
jl
push
xchg
cs
lcall
jb
ja,pt
sbb
sub
pop
aas
sub
jg
add
jle
jmp
pop
cmp
popf
clc
pop
push
nop
bound
inc
cmc
jmp
pushw
cli
in
dec
and
ljmp
daa
and
mov
sbb
xlat
mov
jns
popf
sti
sbb
cli
xchg
fcomp
xchg
jl
inc
hlt
call
out
out
lcall
mov
dec
loop
repz
xor
jg
jb
mul
rcrb
push
xchg
sub
in
cmpsb
movsl
inc
lds
flds
pop
call
dec
pushf
jbe
adc
jmp
pushf
fucomip
inc
imul
mov
sar
incl
addr16
gs
lret
ja
sub
mov
pushf
xchg
sbb
dec
cs
inc
sar
add
pop
and
cmc
jnp
sarl
jnp
push
cltd
rcrb
sub
jp
idiv
lcall
cmp
mov
mov
jne
std
outsl
inc
lods
imul
pop
gs
shlb
and
loop
sbb
outsb
or
adc
in
decl
lock
cmc
mov
test
pop
jae
push
popf
inc
mov
stc
pop
and
or
dec
out
sbbl
push
cmp
andl
xchg
sub
lret
push
popf
adc
pop
mov
lcall
repz
or
jmp
add
inc
loope
pop
pop
mov
mov
mov
rol
jmp
sahf
mov
jo
mov
pop
push
dec
test
mov
push
fidivrs
push
mov
ret
and
sbb
jb
loope
lret
mov
pop
jns
pusha
push
cli
push
out
jae
mov
aam
mov
lds
dec
test
mov
or
arpl
ret
cmp
inc
jmp
imul
pop
pusha
hlt
fadd
mov
out
adc
pop
cltd
ss
jl
frstor
sub
mov
pop
jmp
and
cwtl
and
push
imul
jnp
jmp
in
sbb
pop
mov
mov
pushl
outsl
jns
mov
pop
sub
lods
test
adc
and
call
sahf
jno
std
test
imul
roll
outsl
mov
dec
jae
mov
ljmp
or
gs
mov
lods
scas
jns
fistpl
xor
js
enter
in
xchg
jae
xchg
pop
je
dec
xchg
sub
xchg
push
pusha
add
xor
xchg
insl
add
lcall
not
rclb
insb
mov
call
aad
pop
mov
xor
rolb
xchg
nop
out
mov
dec
mov
ljmp
xchg
lods
xchg
mov
mov
or
xor
int3
push
jge
pop
push
shrb
int
push
stos
test
adc
fwait
shlb
dec
daa
mov
outsl
clc
into
mov
icebp
or
jg
inc
imul
or
incl
add
jae
lods
shrb
nop
lcall
or
incl
rol
aam
jg
push
xchg
mov
daa
in
add
call
xchg
cli
pop
jne
adc
call
loope
jns
in
jle
push
incl
dec
jae
mov
pop
or
adc
mov
fsubrl
or
js
insb
or
loopne
add
inc
sub
xchg
arpl
jb
ret
sahf
mov
dec
mov
cld
shll
fidivl
mov
addr16
cs
xchg
jmp
addl
aaa
out
add
decl
mov
xor
and
inc
out
loop
call
jmp
pop
jae
cmp
into
aaa
shlb
in
push
jg
adc
sbb
mov
ficomps
in
not
cmp
pop
jns
adc
gs
scas
lret
insl
clc
fstpt
mov
out
lea
or
loope
call
jno
dec
clc
and
or
or
shld
cwtl
popa
pushl
inc
sub
shlb
push
mov
push
test
push
rorb
into
jmp
xchg
cld
sub
pushl
lods
fiadds
das
lods
cmp
cltd
enter
mov
lahf
ss
sub
pop
inc
fsub
add
jmp
or
cmp
inc
mov
outsl
les
mov
call
xchg
hlt
insl
rcrb
out
mov
or
cmpsb
fs
addr16
xchg
mov
lahf
mov
outsl
clc
jmp
lds
fmull
jp
cs
jl
aad
add
fidivrl
decl
shlb
clc
clc
nop
dec
pop
ret
sahf
dec
stos
or
sbb
cld
inc
mov
pop
fcos
lcall
stos
adc
mov
out
cmp
ret
mov
data16
rcrb
dec
jge
jl
call
xor
outsb
xchg
shr
mull
and
jmp
int3
sti
in
push
add
jmp
repnz
mov
cmp
insl
add
js
mov
lcall
cwtl
les
xchg
std
adc
in
mov
mov
or
lcall
hlt
or
fs
pop
arpl
push
test
mov
pushl
aam
push
adc
mov
imul
cmp
xchg
add
insl
or
ljmp
mov
rcr
jo,pt
adc
cmp
movsb
mov
pop
xchg
push
popa
aam
popa
sub
mov
jmp
ja
push
sub
mov
rclb
mov
testb
incl
aad
or
dec
jl
jmp
adc
push
cmp
xor
out
inc
dec
ja
jg
xchg
ds
pop
adc
pop
xor
add
xor
jmp
incl
stos
pop
xor
repz
loop
loop
xor
mov
push
mov
or
jecxz
es
add
ljmp
mov
cld
lahf
lods
sub
loope
add
pop
shl
cs
cmp
decl
mov
std
mov
subl
imul
loopne
xchg
incl
and
dec
mov
dec
iret
mov
rcrb
ds
xchg
daa
pop
xchg
push
data16
pop
inc
jl
push
sbb
or
decl
jnp
mov
add
adc
pop
jmp
les
ret
xchg
xor
out
call
sbb
adc
cmp
subb
and
jns
or
ss
dec
inc
rolb
pop
cwtl
cmp
lods
flds
loopne
jae
mov
sub
inc
xor
int
jg
jno
rol
mov
jle
daa
jmp
cmp
sub
roll
jg
mov
leave
enter
fdivs
cmpsl
lahf
adc
push
mov
inc
out
cmp
xor
mov
cmpb
ret
ret
outsl
push
jge
mov
movsl
and
data16
daa
or
jge
jbe
leave
xor
mov
push
mov
push
sbb
sbb
test
leave
mov
jmp
in
inc
mov
pop
pop
icebp
xchg
jb
sbb
sahf
insb
shl
out
inc
mov
cmp
popf
dec
cmp
jg
rcr
stos
and
sbb
inc
fdivl
adc
adc
daa
adc
inc
pushl
scas
mov
dec
test
sub
lret
rorl
gs
push
lret
clc
call
inc
mov
divb
lcall
fisubrs
cmp
sub
fildll
pusha
test
xchg
xchg
xchg
inc
and
int
mov
lcall
pop
push
dec
pop
adc
pushf
cmp
mulb
xchg
mov
fisubs
or
sti
mov
arpl
ljmp
jno
ss
pushl
ja
ja
call
loope
leave
push
and
pushf
repz
gs
ljmp
and
ds
mov
testb
pop
sahf
push
inc
decl
lcall
sarb
je
aad
jo
and
mov
and
ljmp
pop
mov
and
pop
and
sbb
and
sbb
xchg
push
xchg
push
xchg
jl
mov
lcall
and
mov
dec
popf
push
push
add
mov
out
mov
pushl
std
pushl
pop
loop
xor
and
push
popa
imul
and
pushl
ja
hlt
mov
sti
inc
cmp
pop
cmp
dec
insb
dec
dec
pop
jbe
pop
shrl
push
ljmp
or
jl
pop
jle
lods
in
sahf
shll
movsl
js
ljmp
or
stc
jb
pop
test
and
sbb
mov
fisttps
pushl
std
mov
mov
sti
shrb
add
cmp
jp
cmc
lcall
je
mov
add
stc
test
mov
out
mov
and
in
and
mov
mov
cmpl
loopne
in
dec
pop
mov
or
popf
daa
aam
jo
mov
lcall
je
fisubrl
dec
fidivs
push
xchg
enter
or
xorb
imul
jmp
sbb
cld
adc
gs
add
leave
mov
std
arpl
push
jl
push
cmc
or
in
sub
inc
shl
popf
repz
fs
call
cmpsb
pop
test
decl
sarl
notb
sbb
mov
dec
inc
loope
cwtl
jle
ljmp
push
into
sbb
scas
cmpsb
jns,pn
test
ret
into
cmpsl
xlat
cmpsb
fisttps
mov
pop
add
imulb
fisttpll
in
outsl
in
dec
std
ds
ljmp
in
sbb
in
jg
fwait
mov
loop
sbb
push
ljmp
xor
add
jnp
clc
jge
mov
cmp
outsb
xlat
int
add
sbb
sub
incl
push
daa
or
insl
inc
xor
outsb
push
dec
lcall
hlt
repnz
cli
dec
scas
fs
loopne
add
mov
stos
loopne
call
clc
adc
aad
aam
addr16
jb
cmp
inc
repz
imul
sbb
mov
faddp
mov
js
xor
sub
inc
into
push
sub
add
and
unpcklps
rclb
movsb
mov
jg
mov
pop
mov
icebp
shlb
mov
addr16
xchg
pushw
pop
cmp
incl
xor
mov
test
lcall
out
or
and
sub
call
test
mov
mov
inc
adc
ljmp
popf
aas
mov
cmpsl
call
pop
mov
jge
fs
scas
lret
enter
ud0
jmp
cs
mov
xchg
jbe
jae
jecxz
insl
test
jo
or
jne
push
xchg
ljmp
decl
adc
loop
fprem1
out
js
daa
mov
fsubs
out
stc
and
cmp
flds
xchg
lock
les
sbb
popf
cmp
lret
call
mov
xor
push
rcrl
gs
xor
imull
ds
sub
adc
mov
outsl
inc
push
mov
sti
test
std
cmpsl
cmpl
fildll
xchg
repz
cmpsl
lods
pop
xchg
jno
push
inc
mov
jmp
xchg
lcall
jae
rcr
cmpsl
fiadds
pop
in
jle
xor
fiadds
adc
dec
ljmp
pop
decb
mov
or
xchg
add
inc
in
jb
xor
lcall
xor
sbb
dec
mov
push
aam
clc
loop
ljmp
dec
call
add
cwtl
jno
dec
incl
leave
nop
test
sbb
les
aad
iret
jl
out
dec
decl
mov
pop
sbb
lea
inc
push
jp
jae
sarl
push
mov
lea
or
xor
fildl
cwtl
inc
jne
repz
inc
or
sub
das
lods
enter
push
out
in
sub
inc
push
outsl
cld
call
cmp
scas
loopne
divl
xor
jne
subb
add
into
pop
in
jae
pop
fs
sbb
mov
arpl
push
sarl
mov
sbbb
call
mov
add
in
out
xchg
mov
fcom
jecxz
das
ljmp
cmp
jo
xor
in
add
es
clc
lock
std
mov
call
mov
add
push
insl
movb
push
nop
xchg
adc
push
and
xchg
inc
in
pop
sti
cmp
fcomip
in
ljmp
pop
sub
pop
add
cmpsb
push
pop
xchg
adc
adc
incl
repnz
loop
popa
mov
lds
mov
add
xlat
lret
jge
xor
mov
test
jg
sub
inc
xor
pushf
in
xchg
mov
cmpsb
jg
negb
dec
pop
mov
shll
loop
aas
fcmovnb
cmp
movsb
cltd
mov
mov
inc
mov
pop
loopne
repnz
xor
clc
mov
testb
dec
clc
push
lods
adc
lds
pop
mov
adcb
and
lcall
inc
jbe
dec
dec
loop
ja
push
xchg
loopne
jb
bnd
stos
and
jne
mov
ret
add
mov
scas
icebp
inc
cmpsl
fsubrs
fadds
call
loopne
sar
sbb
pop
adc
xlat
jnp
fidivrl
enter
aad
lcall
fmull
mov
sti
popa
push
sahf
xlat
pop
prefetchw
jge
cs
stos
jne
inc
lahf
ljmp
sar
insb
outsl
mov
aam
cs
pop
das
hlt
sub
dec
aaa
scas
push
inc
sub
cli
cmp
sti
sub
pop
lds
jbe
aas
rol
scas
les
pop
arpl
call
call
iret
cs
sbb
jno
dec
sbb
lcall
push
xchg
mov
push
lods
ja
pop
aad
ret
inc
jbe
jp
fwait
es
fmuls
mov
push
mov
inc
sub
mov
add
jo
clc
in
mov
stos
or
adc
stc
push
xor
sub
xchg
jo
pop
in
incl
aaa
hlt
mov
xchg
push
inc
mov
imulb
add
rolb
xchg
out
call
rcll
pop
daa
or
jl
imul
mov
push
lcall
mov
shrb
loopne
xor
mov
repnz
clc
add
xchg
mov
jmp
inc
push
cwtl
rcll
jg
sub
xchg
das
lcall
jecxz
and
daa
lret
ljmp
cmc
inc
mov
clc
lahf
clc
mov
int3
sbb
cwtl
dec
xor
insl
lahf
and
jmp
inc
jle
popf
and
jbe
cmp
in
sbb
lock
add
push
inc
call
lods
xchg
fs
cwtl
sti
push
stos
outsb
lds
lods
mov
adc
int
roll
daa
jnp
mov
jns
bound
les
lods
mov
mov
cmp
cmp
shlb
lods
fs
mov
shlb
xchg
jns
cld
fildll
filds
mov
pop
incb
ljmp
push
inc
call
xorl
shll
lcall
dec
out
gs
fwait
mov
mov
pop
adc
lcall
lcall
fimuls
cmp
sbb
mov
mov
dec
inc
and
cmp
mov
call
cmp
das
inc
mov
adc
fstl
pop
test
loopne
push
mov
mov
inc
incl
mov
lcall
sub
pop
hlt
mov
idivb
xorl
call
jne
sbb
in
mov
out
subl
lods
dec
xor
sbb
call
inc
lock
repz
out
adc
xchg
out
jbe
inc
xorb
sbb
ret
or
pushl
std
incl
sbb
inc
inc
and
rorb
xchg
lcall
pop
inc
adc
outsb
and
push
daa
lds
jnp
lds
imul
add
dec
mov
xor
out
aaa
popf
pop
test
inc
sub
fbld
adc
decb
jg
mov
in
out
cli
pop
repnz
test
popa
xor
adcb
add
sbb
inc
sbb
fwait
ljmp
das
stos
adc
popa
mov
shl
jbe
ss
mov
pop
mov
stos
pushf
ljmp
jecxz
push
jne
fbld
or
nop
sarb
jg
jecxz
lods
ficompl
pop
dec
ljmp
lods
pop
leave
lea
adcb
mov
jne
adc
push
and
imul
push
loop
mov
les
push
das
cld
enter
adc
jg
and
inc
sbb
aad
movsl
jne
in
nop
and
stos
pop
mov
xchg
fdivs
bound
pusha
add
imul
ficomps
decl
pop
jmp
loop
je
jecxz
mov
testl
mov
stc
xchg
mov
fdivr
cwtl
data16
das
dec
adc
aaa
lods
dec
adc
add
clc
ds
repnz
hlt
xor
xor
mov
push
jecxz
out
and
mov
rclb
popa
push
lcall
daa
fcoml
or
push
and
imul
jl
add
mov
incl
imul
push
andb
movsl
mov
adc
push
cs
mov
shl
mov
jmp
cs
cmpsl
icebp
addl
push
std
les
sub
ret
adc
int
inc
dec
xor
cmp
cld
stos
outsb
jl
adc
cmpsb
mov
inc
cmpl
decl
or
nop
mov
inc
or
jnp
hlt
mov
icebp
xchg
fwait
je
xlat
cmp
push
pop
xor
loopne
loopne
idivb
push
jb
ds
jl
cmp
pop
icebp
stos
sub
mov
loopne
mov
sti
mov
jmp
push
add
orb
in
es
lods
das
jecxz
inc
mov
decl
mov
mov
or
inc
inc
sub
es
mov
sbb
mov
lcall
or
repnz
icebp
fbld
xorl
add
sub
push
fbstp
xor
and
dec
push
sbb
fdivrl
mov
push
fcoml
sub
xor
push
js
fnstenv
sbb
dec
mov
pop
push
push
stos
imul
lret
addb
cmpsb
lret
idivb
aas
jge
cmpsl
out
lcall
adc
lock
xchg
cwtl
mov
fisttpll
mov
jb
jecxz
pushl
mov
aam
popa
xor
aad
xchg
cmp
leave
mov
pop
sbb
push
jo
dec
enter
movsl
add
test
incl
pop
test
sub
ljmp
mov
inc
mov
call
adc
jecxz
cmp
test
roll
jg
and
ds
je
adcb
xchg
sbb
push
hlt
hlt
mov
data16
popf
icebp
xor
mov
fcomps
int3
fdivr
decl
jecxz
push
xor
out
ret
push
arpl
into
sbb
stos
popf
add
cld
mov
hlt
iret
inc
mov
inc
xchg
and
push
jne
cmp
push
mov
lcall
mov
xchg
push
sub
sbb
ljmp
cmp
or
repz
xchg
sbbb
call
call
or
inc
cmpsl
or
inc
ja
inc
call
dec
mov
fistps
xchg
mov
ret
in
push
cmc
mov
nop
aas
mov
jmp
cld
mov
and
inc
arpl
pop
xor
pop
adc
insl
xchg
xchg
pop
pop
add
pop
scas
leave
push
xor
inc
aaa
mov
xchg
cmpl
mov
fisubrs
not
jp
in
call
pop
cltd
rol
mov
sub
dec
cli
pushl
roll
push
stc
inc
adc
and
cli
pop
dec
jae
aad
xchg
cmp
sub
xor
cmp
dec
ss
fildl
repz
frstor
adc
cltd
cmp
or
mov
inc
or
bnd
and
mov
incl
fcmovb
rol
push
push
lcall
jmp
mov
mov
pop
push
mov
pop
fldcw
fadds
call
or
mov
inc
out
arpl
mov
mov
pushl
dec
leave
inc
lock
xchg
mov
mov
call
stos
mov
subl
test
in
fwait
stos
pop
mov
mov
cmp
call
dec
mov
dec
mov
movb
adc
rol
loope
shr
and
pushl
mov
std
inc
inc
adc
sbb
mov
xor
push
and
lcall
fcmovnu
fistpll
adc
and
enter
stos
cmp
sub
js
cmp
mull
xor
sub
xorb
mov
xorl
in
cmpsl
inc
jb
stos
stc
or
daa
pop
inc
add
mov
push
and
jg
inc
into
es
mov
repz
insl
jne
out
test
out
popa
pop
dec
lcall
jmp
je
popf
dec
jns
in
dec
pop
lods
fsubrp
sub
jns
push
xchg
jg
pop
lcall
xchg
add
mov
ss
ret
jle
cmp
sbb
jle
call
fildl
std
push
in
dec
sub
jg
lcall
fldl
push
fs
pop
add
ljmp
lret
lcall
out
xor
dec
and
dec
or
int3
jmp
adc
jg
mov
test
cmpsb
xlat
xchg
mov
sbb
out
fisubl
dec
dec
stos
clc
js
cmp
mov
adc
xor
sub
decl
lock
sub
push
xor
push
mov
lcall
pop
push
jns
inc
loope
jecxz
adc
mulb
loopne
and
jg
cmp
and
push
fcompl
xchg
adc
lods
paddsw
iret
in
dec
push
jne
lret
lcall
ja
shl
in
mov
cmc
xlat
and
or
add
cs
or
jl
into
jp
cmc
jle
cmp
bound
ficomps
jno
mov
lods
xchg
pop
popf
dec
stos
cmpsl
jae
imulb
dec
jl
icebp
mov
decl
repz
lahf
push
xor
push
arpl
sbb
and
rcll
clc
mov
incl
popa
cltd
incb
clc
pmullw
mov
jae
sbb
push
mov
fsubrl
jo
enter
adc
std
scas
cmp
loope
xor
je
cmpsb
mov
mov
lret
pop
outsl
cmp
pop
push
insb
mov
mov
jg
mov
jg
cltd
pop
push
ljmp
pop
add
data16
cmp
xor
andb
inc
decb
gs
leave
rorb
push
xlat
lods
adc
cmpsl
ds
lods
push
iret
shr
jae
xor
xchg
out
xchg
addb
push
les
outsl
scas
lock
push
inc
xchg
pop
mov
mov
dec
rol
js
jnp
dec
push
adc
push
adcb
jmp
cltd
sub
mov
mov
adc
inc
dec
jbe
in
js
sbb
sbb
sub
cmp
jl
movsl
cs
xchg
rcl
mov
fs
movsb
cmp
sar
pop
in
hlt
das
clc
fwait
push
mov
jne
scas
or
add
adc
xor
inc
incl
mov
and
push
insl
pushf
fistl
faddl
int3
ljmp
pop
into
popf
daa
sub
fsubr
or
lea
mov
pusha
and
shr
mov
cs
push
pop
outsb
xchg
mov
mov
sbb
and
adc
add
sub
pop
jge
decl
jnp
in
cmp
xchg
fs
les
js
sbb
mov
jecxz
hlt
mov
mov
dec
cli
cmp
dec
fstl
sub
inc
add
mov
push
cs
call
cmpsl
dec
cltd
in
imul
cli
adc
dec
inc
pusha
aad
jb
lcall
call
adc
cs
and
insl
push
pusha
test
push
cmpsb
cs
xor
jg
or
push
xchg
cli
add
popf
fs
or
inc
pop
adc
pop
push
out
dec
decl
lock
sar
mov
fimuls
mov
or
scas
imul
decl
test
lcall
pop
lods
mov
pop
dec
or
mov
mov
sub
mov
aad
xor
jnp
jecxz
xchg
les
adc
ficoml
das
scas
test
decl
mov
out
std
add
cltd
mov
fcmovu
push
adc
shld
push
out
fdivrp
decl
enter
jno
lret
int
fistps
jb
dec
pushf
lock
ljmp
dec
popa
jg
xchg
mov
push
in
scas
sub
shll
push
mov
jae
fdivp
daa
imul
xchg
add
xor
jne
cmc
pushl
test
icebp
push
push
adc
js
cmc
lret
push
stos
pushf
or
pusha
jg
mov
mov
vpminsw
add
sar
sbb
adc
adc
push
pop
xchg
ljmp
add
std
sub
loop
inc
aad
ljmp
xor
repz
pop
mov
insb
mov
ficoms
jg
and
push
pusha
aas
and
inc
fiaddl
shrb
or
and
out
jmp
xor
ja
jg
mov
sarb
sbb
or
lret
dec
xor
jmp
xchg
jle
lahf
jb
fs
push
or
arpl
in
xchg
push
cmp
cld
sti
push
or
sub
es
sbb
cltd
and
mov
imul
adc
cmp
decl
xchg
ss
insb
pop
sbb
pop
push
aaa
jmp
fbstp
pop
popf
in
ret
add
fs
outsl
test
imul
in
pop
decl
add
and
daa
dec
mov
pop
scas
xchg
lahf
push
mov
sbb
mov
jp
mov
or
mov
sbb
sub
mov
mov
insl
ja
add
fwait
iret
lcall
ret
mov
sub
decl
push
push
push
nop
sbb
push
or
enter
lret
lea
lcall
ja
jecxz
popf
test
sub
push
mov
int
fiaddl
xchg
sbb
lcall
in
out
mov
testl
cmp
fs
mov
fwait
mov
pushl
xchg
mov
in
xor
mov
adc
fisubs
shlb
call
pop
pop
call
insb
jmp
imul
in
mov
pop
cmp
mov
sub
call
mov
out
jp
jge
adc
icebp
cmc
fstpl
or
cmpsb
div
and
dec
mov
enter
sti
jle
and
adc
outsl
loopne
mov
cmp
scas
jle
lcall
push
dec
pushf
xor
xor
push
dec
ret
fstl
cmc
cld
repnz
xor
out
add
sub
mov
lcall
sub
mov
fcoms
sbb
gs
dec
les
sbb
ficompl
out
push
add
ret
and
mov
jmp
lcall
pop
jnp
add
mov
push
mov
dec
test
adc
xor
sbb
jl
jge
push
int3
call
mov
jle
lds
stos
mov
rcll
testl
dec
leave
lock
cmp
sahf
shlb
push
xor
pop
loop
outsb
roll
and
mulb
pushf
cmp
add
lcall
aam
fists
cwtl
inc
pop
add
lcall
imul
arpl
mov
mov
dec
mov
mov
and
decl
jbe
xor
xor
ret
icebp
arpl
call
loopne
mov
inc
clc
adc
cld
lock
and
pop
add
and
push
pop
clc
fiaddl
pushl
decl
hlt
mov
pop
and
mov
test
adc
inc
mov
fidivl
sti
icebp
pop
idiv
jmp
mov
decl
mov
jg
iret
or
lock
xlat
jo
in
pushf
add
jl
call
cmp
leave
sub
and
mov
out
in
movsb
clc
cli
out
pop
iret
mov
mov
mov
sub
mov
imul
push
in
jge
cmp
mov
outsb
sbb
sbb
dec
cmp
adc
das
outsl
sub
push
xlat
lock
lret
lea
or
add
test
decl
shlb
les
or
insl
cli
cmc
add
fwait
movb
aas
pop
mov
jnp
loop
es
sbb
xor
lods
repz
jmp
pop
vsubsd
sbb
lds
xor
je
sti
aad
mov
mov
ljmp
rcrl
push
movsl
inc
jae
mov
bound
out
cmp
jp
call
add
nop
xor
mov
and
push
in
sub
mov
mov
or
decl
add
push
mov
dec
bound
test
add
fwait
not
sub
add
out
mov
xor
arpl
scas
ds
call
cmp
imul
push
out
or
lcall
mov
loope
clc
pop
pop
sarb
sbb
popa
sbb
icebp
call
popa
sub
mov
inc
cltd
inc
js
or
js
cmpsl
lret
lret
call
fistpll
cmpsl
adc
sbb
movsb
or
sub
xor
sub
mov
push
mov
dec
call
xchg
add
xor
subl
movsl
mov
aad
or
xor
mov
jmp
cli
in
mov
int3
out
enter
sub
add
and
imul
add
mov
repz
andl
cmp
lcall
nop
push
cmp
xchg
add
add
xor
dec
loop
repz
mov
aaa
xchg
jle
mov
in
or
ret
test
roll
jmp
push
mov
cwtl
xchg
xchg
adc
scas
push
jp
out
int
add
cwtl
fdivr
jmp
enter
jge
andb
rcr
dec
jns
inc
sbb
lods
scas
scas
mov
and
jns
lcall
frstpm(287
cltd
adc
cmp
outsl
or
push
dec
or
dec
and
cmp
adc
in
jns
lcall
lcall
or
push
dec
mov
or
out
xor
pop
xchg
ret
int
ljmp
mov
call
mov
add
xor
dec
xor
cmpsb
test
push
jno
mov
stos
mov
jg
decl
add
fbstp
adc
xchg
cmp
lret
les
inc
andb
jmp
aas
sub
std
mov
roll
mov
daa
cltd
stos
pop
inc
repnz
push
pushl
insb
push
or
pop
mov
popl
out
idiv
lcall
push
sub
fcmove
das
pop
inc
std
scas
mov
push
push
test
popf
dec
mov
pop
jl
pop
bound
incl
loope
sub
inc
xchg
icebp
mov
lods
push
hlt
push
aam
jae
es
cli
add
sub
mov
and
stos
mov
outsb
scas
jl
cmpsb
jnp
sbb
idiv
jmp
mov
mov
lcall
cltd
test
dec
outsb
dec
idivl
jg
mov
inc
scas
data16
push
push
jle
lahf
and
add
xor
testl
push
mov
cmp
loopne
es
js
imul
mov
outsb
cmp
push
mov
loop
jp
ss
xor
popa
popa
push
sub
data16
fwait
dec
jecxz
jmp
incl
jae
dec
pop
movsb
adc
imul
mov
jle
mov
push
sbb
mov
add
test
imul
ljmp
fistpll
in
cli
mov
xchg
enter
dec
mov
test
adc
xchg
bound
sub
fs
pop
rcr
sbb
jae
decl
lock
cs
test
jge
xor
lods
sbb
mov
icebp
jg
out
or
rcrl
sub
cmp
inc
fisttps
stc
mov
cmp
xchg
pushf
aas
push
nopl
jmp
sub
nop
and
notb
sbb
sbb
js
mov
and
lock
lcall
and
ljmp
mov
or
loopne
repnz
hlt
sbb
cmp
aad
pushl
jns
sbb
adcb
das
or
lds
or
js
push
inc
mov
push
incl
addr16
jno
sub
cwtl
cmp
mov
les
insl
clc
fimuls
dec
xor
bound
int
and
xchg
aaa
lret
out
clc
inc
enter
mov
decl
sub
lahf
mov
jle
jmp
addr16
mov
decl
ljmp
adcl
dec
cmp
call
lock
mov
das
es
mov
mov
adc
xchg
mov
aam
jo
mov
jno
xchg
mov
sahf
or
xlat
frstor
outsb
and
loope
test
clc
and
decl
in
iret
bound
fimull
sbb
into
xchg
std
int
std
cltd
or
xlat
decl
xchg
or
and
add
jl
xor
movsl
xchg
aad
dec
lcall
adc
je
push
test
fdivl
es
push
xor
lds
cltd
out
jmp
mov
lods
and
fwait
lods
inc
jne
pop
dec
jp
push
pop
orl
test
incl
cmpsl
adc
jns
stos
adc
xchg
bound
aam
jae
leave
pop
test
aam
in
ljmp
xchg
jno
pop
imul
in
cmp
cmp
mov
dec
adc
pop
lock
inc
adc
lret
sbb
outsb
clc
mov
lds
mov
lret
mov
test
stc
les
lock
mov
out
xor
dec
push
fdivrp
lcall
fisttpll
ss
and
rol
mov
or
incl
shlb
mov
xchg
lret
push
push
lods
mov
lcall
xchg
push
mov
xchg
push
pop
inc
and
mov
fcompl
pop
jmp
mov
into
xchg
xchg
adc
and
mov
fistpl
add
xor
jmp
and
out
dec
std
dec
mov
adc
clc
aas
hlt
sub
jmp
test
sbb
insl
call
add
mov
sbb
dec
out
lcall
mov
add
cmp
iret
cmp
leave
ja
mov
mov
pop
fstl
push
push
out
int
call
daa
fadd
mov
xchg
add
and
push
mov
jo
add
jmp
sub
test
inc
xchg
inc
cmp
sbb
or
fsubrs
call
sub
aad
popa
pushf
xchg
jae
fdiv
lds
out
addl
push
fstl
dec
ljmp
lds
mov
sub
inc
movb
lods
shll
pop
mov
mov
mov
jo
and
xor
cmp
out
imul
mov
jge
out
sub
sahf
push
sbb
jmp
inc
add
inc
adc
jne
or
loop
test
fstpl
clc
pop
mov
js
cmpsb
ja
push
mov
jmp
into
ja
add
xchg
pop
push
call
je
insb
or
movsl
aad
xchg
xor
cmp
stos
jl
pop
jo
clc
inc
mov
les
scas
mov
sti
jl
inc
and
mov
push
ljmp
jecxz
in
ljmp
jg
mov
out
cmp
mov
sar
lcall
cmp
sbb
adc
lret
in
xchg
sti
pop
xor
cltd
cwtl
rcl
jecxz
mov
loop
jg
shrl
das
mov
divb
jno
mov
jmp
push
sub
push
es
movsl
sbb
outsl
mov
int
add
and
sahf
xor
push
push
push
mov
lods
sbbb
aaa
push
xchg
mov
pop
mov
mov
out
pop
jg
add
jl
inc
std
mov
add
decl
popf
nop
fldt
test
push
fiadds
sbb
add
push
xor
int3
frstor
es
push
jns
sbb
mov
mov
cmp
stc
and
out
cmpsl
dec
push
add
jg
incl
mov
add
test
mov
cltd
or
es
int
pushl
cld
mov
idivb
or
dec
pop
inc
and
movsl
jle
and
mov
cltd
dec
in
stos
sbb
push
sbb
adc
pop
subl
dec
lret
call
arpl
xor
push
and
rclb
cwtl
pushf
jmp
cmp
filds
adc
jp
or
frstor
sbb
mov
mov
incb
test
or
lret
cld
mov
pusha
jmp
mov
popa
or
ljmp
dec
insl
mov
divl
fcomps
into
roll
inc
push
gs
call
imul
xchg
in
pop
in
into
mov
jg
cli
imul
push
rolb
repnz
int
xchg
stos
mov
dec
inc
aad
mov
cmp
lret
fsubrs
cmpsb
mov
dec
stos
cwtl
in
sbb
mov
ljmp
addr16
in
lcall
js
lret
stc
subl
sahf
sub
call
in
insl
in
pop
sub
xchg
cli
fildll
push
lcall
pop
xchg
mov
xchg
sbb
shrb
scas
cli
adc
loop
ret
icebp
loopne
imul
aad
ds
outsl
cmp
push
fstpt
and
lods
or
rolb
cmp
imul
pushf
dec
stos
js
jae
xor
jmp
pop
mov
negb
outsb
dec
inc
loopne
pop
call
mov
or
or
test
addb
sbb
sahf
and
call
daa
fsub
or
jecxz
mov
outsb
imul
loopne
imul
cmpsl
das
cli
jmp
addl
pop
mov
mov
cld
mov
pop
mov
dec
cltd
pop
mov
adc
out
stc
add
data16
jmp
mov
pusha
test
jmp
pop
jge
push
jne
inc
ret
jmp
fisubrl
push
sub
or
insb
jle
fwait
ljmp
nop
or
jmp
movsl
les
jle
sub
sub
in
sbb
xchg
xchg
out
and
and
xchg
lods
sub
das
jae
cltd
sbb
push
out
test
jmp
inc
or
mov
xchg
stos
mov
pop
and
jmp
clc
mov
mov
fcomip
pushl
inc
pop
lock
inc
cmpsb
fcompp
and
dec
push
lret
decl
mov
lret
mov
and
cmpsb
std
ds
sub
sub
adc
inc
mov
lcall
xchg
outsl
movsl
cmp
xchg
in
mov
cmc
mov
inc
sub
jecxz
jmp
cltd
cs
dec
inc
jp
loope
inc
jnp
cwtl
pop
and
ljmp
pushl
inc
sub
sub
fwait
lock
aad
imul
inc
or
mov
inc
fstpl
xor
push
add
push
jp
xor
aaa
push
jmp
lock
and
gs
sbb
mov
decl
insb
or
mov
imul
es
in
pop
test
pop
lcall
adc
inc
jle
xchg
lds
loope
out
xchg
sub
js
sub
mov
cmp
stos
repz
xchg
dec
adc
mov
pop
shlb
xchg
cld
push
dec
fucom
pop
rolb
mov
bound
inc
sub
mov
mov
incl
mov
xchg
jge
pop
lahf
iret
repz
xor
or
mov
xchg
andl
aaa
mov
pop
dec
movl
mov
loop
mov
mov
xchg
es
mov
push
jg
inc
jmp
pop
sbb
enter
cmp
cmp
cmp
jg
fs
imul
in
pop
sub
mov
out
clc
pushl
jo
aad
dec
adcl
sub
cwtl
jne
aaa
fistpll
mov
mov
or
leave
stc
iret
subl
pop
dec
dec
data16
jb
sbb
movsl
push
xchg
sbb
lcall
lds
into
jb
orb
lods
fisubs
push
xchg
test
jb
add
jnp
xchg
orl
ret
and
outsb
test
push
enter
ja
and
jg
inc
out
loopne
shl
outsl
or
pop
adc
incl
xlat
mov
sbb
fs
pop
stos
aas
pop
in
inc
mov
cld
pop
cmp
addb
rol
mov
outsb
adc
testb
sbb
outsb
lods
push
jnp
or
imul
add
popf
das
or
pushl
mov
call
loope
xchg
push
dec
adc
les
scas
bswap
sbb
hlt
xchg
xor
pop
xchg
ficomps
testl
sbb
jg
fs
lret
dec
cmp
dec
nop
sub
loope
mov
push
jno
inc
cmp
enter
push
fcoms
push
lahf
or
pushl
mov
pusha
mov
pop
pop
and
xor
jg
and
ret
je
mov
push
addl
cmp
popf
test
xor
cmp
ds
popf
dec
jle
jmp
insl
sub
mov
in
int3
test
rcr
frstor
xchg
shlb
decl
mov
bound
sbb
mov
mov
das
ret
mov
lcall
insl
incl
jmp
jmp
insl
jae
ficompl
add
push
loope
ret
fisttps
sbb
lcall
scas
mov
je
aas
aam
roll
test
sti
enter
iret
xchg
decl
mov
xor
data16
push
cmp
and
add
fsubs
repnz
fisubl
xrelease
std
cmp
das
push
test
or
test
ret
xchg
mov
adc
insb
leave
or
loopne
xchg
loopne
mov
jae
lcall
call
mov
xchg
mov
jne
xor
je
popf
ljmp
mov
jbe
mov
push
push
and
std
pop
cli
cmp
lea
popa
imul
outsl
out
mov
sbb
out
out
ja
pop
push
inc
out
call
dec
clc
sbb
xchg
outsl
xor
sahf
adc
decl
aad
call
and
xlat
fisttpll
xor
aaa
mov
decl
in
add
in
loope
pushl
jo
or
xchg
scas
int
or
jae
fadds
inc
fmul
push
cld
cs
mov
fs
pop
daa
fcmove
dec
sti
sbb
add
call
std
xchg
divl
lret
loopne
insl
ret
bound
hlt
inc
cld
mov
xor
and
sbb
jns
out
clc
lcall
dec
push
ss
sub
jnp
add
mov
push
js
decl
pop
mov
fstpt
cmc
or
in
lret
adc
gs
cs
pop
dec
ds
push
xchg
arpl
cmp
fildll
pop
in
sbb
inc
arpl
pushf
popa
cmc
dec
push
mov
decl
lock
cmpsb
lods
fsubrs
jg
xor
cs
dec
popa
mov
and
cmp
das
inc
cli
adc
sbb
outsb
sarb
or
inc
loope
hlt
decl
add
icebp
xor
xchg
insb
and
lods
or
loop
mov
adc
dec
sub
nop
mov
dec
sub
pop
push
ss
addb
jg
jmp
and
data16
cltd
popa
sbb
ljmp
mov
cmc
ljmp
loope
adc
dec
mov
fwait
sbb
outsw
out
ret
pop
incl
sub
jmp
push
sbb
dec
orb
mov
lcall
lcall
xchg
hlt
mov
mov
div
imul
mov
fcmovnb
mov
add
icebp
addr16
and
xor
imul
notb
xor
fwait
inc
jmp
cmpsb
mov
jb
ja
jle
mov
mov
inc
stc
clc
jcxz
pop
shrl
jle
repz
ljmp
mov
add
mov
pushf
pop
scas
divl
xchg
pop
xchg
roll
lcall
loopne
add
lods
pop
pop
xchg
imul
cmp
or
fwait
jne
pop
std
mov
sbb
pop
lock
clc
inc
xlat
sbb
jno
sub
enter
adc
mov
bound
pop
test
and
jo
in
movsl
add
fucomip
mov
push
adc
call
sub
mov
mov
mov
loopne
lods
push
push
adc
sbb
in
mov
jmp
mov
jnp
xchg
fists
int3
mov
cmp
in
xchg
sbb
xchg
call
xor
pop
and
fcmovnbe
stos
jno
and
test
repz
pushl
test
and
in
inc
cmc
push
and
pop
fldenv
cld
loopne
popa
xor
lcall
scas
and
cmp
or
cwtl
inc
roll
mov
jl
xor
jmp
dec
adc
mov
repz
adc
sub
dec
and
mov
outsb
pop
in
cmpl
movsb
adc
push
xchg
movsl
jns
in
and
and
ficomps
pushl
cld
imul
xchg
fimuls
lret
into
and
cltd
cmp
imul
call
cmp
cmp
mov
jmp
insl
adc
lods
inc
adc
adc
sbb
cmp
lcall
out
fistpl
sahf
jl
add
pop
inc
add
cmpsl
aaa
push
sub
lret
inc
mov
jmp
adc
stc
jnp
js
and
mov
lret
pop
jbe
cmc
insb
in
test
call
dec
stos
xchg
mov
or
jno
sub
pushl
into
and
out
jg
lds
xor
loop
stos
jg
adc
es
in
sar
lcall
jae
sti
dec
mov
push
xchg
sub
add
out
lods
sti
inc
lds
jle
xorl
pushl
xor
or
mov
push
fdivrl
inc
mov
into
dec
lock
enter
in
cmp
adc
dec
xor
ja
cli
cmp
popa
pop
call
jns
pop
incl
out
jo
cmp
xor
fs
sub
aas
jne
fsubl
call
cld
mov
out
cli
mov
mov
ja
mov
inc
insl
push
cmc
mov
std
mov
clc
hlt
push
jge
and
jo
xchg
mov
out
cmp
decl
xchg
add
jbe
or
push
sti
mov
sub
sub
call
clc
mov
pop
repz
lret
hlt
sub
mov
outsb
lds
jg
imul
adc
fsts
lods
cli
mov
imul
xchg
adc
jmp
add
cwtl
sar
decl
and
add
into
inc
leave
push
add
sbb
sbb
jg
inc
mov
lds
test
push
nop
cmp
jge
mov
out
cmp
lds
add
sbb
sub
rcrb
aas
lea
imul
pusha
xchg
pop
mov
push
and
mov
inc
or
inc
jne
sub
imul
or
jg
popf
jle
or
or
scas
aad
jp
xor
movsl
stos
movsb
ljmp
dec
es
mov
mov
cwtl
aas
sbb
push
fists
rolb
mov
jmp
iret
xchg
mov
dec
mov
or
insb
lods
cmp
call
cli
inc
pop
fmuls
divps
imul
mov
ficoml
clc
std
sahf
rcll
inc
movsb
add
js
or
jmp
sar
cltd
mov
lea
push
cmc
xchg
adc
or
popa
jae
pop
das
movsl
lahf
pop
dec
movsb
add
sub
mov
aas
loopne
mov
incl
lret
test
adc
push
les
push
mov
stc
lods
rorb
jns
mov
iret
inc
mov
call
sub
das
mov
jo
iret
aam
aam
pop
test
push
lahf
out
fsubrl
push
cli
cwtl
mov
out
scas
out
ret
repz
mov
loop
dec
push
inc
mov
lcall
or
dec
popf
inc
and
mov
pop
ds
jno
jns
fcompl
adc
decl
cmp
insl
es
xor
pusha
inc
unpcklps
and
lods
push
decl
jo
dec
push
pop
ss
repnz
fs
nop
mov
sbb
mov
icebp
push
mov
sahf
adc
lea
mov
scas
pop
inc
mov
fs
js
fadds
jecxz
mov
push
or
gs
ja
xchg
outsb
jo
xchg
cmp
sti
xchg
mov
inc
data16
stos
mov
ljmp
or
rclb
sbb
sub
xchg
fs
fidivl
das
into
gs
int3
xchg
xor
pushf
jg
test
sub
xlat
out
push
push
push
and
cltd
pop
imul
test
lea
cmc
mov
sbb
cld
mov
adc
or
fmull
mov
sbb
fwait
lcall
mov
adc
pop
push
ss
dec
sbb
int
das
push
mov
fwait
js
lcall
add
xacquire
cli
adc
iret
sti
fcmovu
stc
clc
push
sbb
popf
mov
fildl
add
inc
stos
fisttps
push
jecxz
testb
lcall
leave
fisubrs
cltd
loopne
fcomip
mov
inc
std
aaa
sub
mov
inc
ret
or
sbb
lcall
dec
les
dec
pushf
dec
sbb
movsb
lahf
in
pop
push
mov
ds
and
push
fbld
pushl
les
add
mov
sti
cwtl
test
call
inc
dec
xchg
mov
outsb
ds
mov
out
addb
ja
mov
fcmovbe
rcrb
roll
rclb
pusha
xchg
sbb
jp
adc
gs
aad
in
incl
pop
shll
push
push
pop
rorb
jno
sub
stos
ja
push
jg
push
pop
adc
mov
sahf
mov
test
lcall
out
je
push
sbb
jge
std
rcll
pop
pop
in
scas
aas
push
cli
pop
in
xchg
jmp
inc
js
xor
mov
in
les
repnz
loopne
iret
pop
loopne
inc
mov
cmp
push
aaa
xlat
fbld
adcl
sub
xchg
sbb
out
das
push
repz
sub
decl
lret
xor
scas
mov
jb
movsb
mov
movsb
lea
jbe
or
jnp
pop
dec
sbb
jbe
rol
cmp
lock
nop
loop
aas
ret
mov
dec
ja
jno
xchg
adc
decl
jo
int3
sbb
and
ljmp
xor
push
pushf
fildl
add
cmp
dec
je
mov
mov
xor
lahf
ljmp
push
into
and
push
adc
loop
fs
jae
and
mov
cmp
dec
loopne
push
adc
jp
mov
call
scas
hlt
xchg
push
ds
lods
jle
sbb
fcmovnb
das
lock
aam
dec
push
clc
pop
icebp
push
mov
cltd
sbb
lret
jecxz
leave
jg
and
out
ficompl
push
xor
dec
inc
clc
rolb
leave
cmpb
pop
dec
cmc
ret
addr16
push
sub
jmp
insl
jl
pop
jle
add
ja
inc
dec
rcl
stc
mov
push
sarl
xlat
insl
out
or
jmp
ja
xor
and
sbbb
cmc
mov
insl
lock
ret
arpl
orl
or
mov
adc
jg
jb
dec
mov
jne
rorb
lahf
and
clc
mov
in
test
push
cs
ljmp
push
dec
test
enter
cmp
das
cmp
lcall
lock
cmpsb
pop
or
dec
fstpt
aam
adc
std
xchg
into
js
aad
jg
call
gs
fisttpl
test
xchg
push
pop
aas
incl
daa
xor
fwait
movsl
test
loope
push
pop
or
addr16
mov
inc
or
hlt
decl
or
jo
push
xchg
jecxz
adc
aas
pop
ljmp
mov
jns
inc
mov
sahf
cmp
aam
mov
sbb
mov
in
xor
pop
or
and
jle
pop
inc
enter
mov
daa
cs
cmp
xchg
into
cli
push
lea
add
inc
imul
decl
dec
jno
daa
dec
push
loop
fisttpll
ljmp
and
push
fimuls
pop
sbb
addr16
pop
enter
jbe
decl
xor
in
xchg
xchg
xor
je
iret
lret
mov
adc
ds
pop
cmc
call
dec
nop
icebp
test
out
repnz
jge
call
mov
add
cmpsl
movsb
sub
ljmp
sub
lcall
mov
cmpsb
daa
jp
jle
pushf
xor
jo
insb
push
sahf
nop
pop
fwait
mov
sub
aad
lods
test
lcall
mov
cmp
hlt
or
hlt
jle
pushf
or
pop
or
ljmp
sbb
mov
mov
lcall
pop
mov
or
ret
inc
pushl
dec
aam
mov
fcoms
mov
and
pop
sub
pop
scas
roll
jmp
lret
inc
hlt
pop
jb
movsb
mov
lret
test
xchg
push
add
icebp
mov
ljmp
fxtract
add
and
frstor
push
les
jmp
lea
out
loope
dec
push
or
dec
pop
movsl
insl
arpl
or
fistpll
ficoml
and
jg
mov
dec
or
fwait
icebp
ds
cwtl
cmp
add
xor
imul
leave
bound
clc
iret
in
repz
in
push
loopne
icebp
add
cwtl
test
stos
adc
sarb
call
lret
gs
cmpl
pushf
fs
or
out
fs
cmp
xchg
cmp
mov
sar
incl
jle
stc
inc
in
adcl
xor
lahf
fdivp
mov
std
jmp
pop
mov
jne
clc
movsl
and
call
jmp
xchg
push
out
clc
dec
popf
sub
mov
dec
loopne
popf
ror
ljmp
mov
inc
xor
call
popa
cs
negb
or
push
jmp
in
dec
xchg
popf
xor
call
sub
push
repnz
clc
xchg
fbstp
fwait
mov
jecxz
and
out
cmp
leave
add
imul
call
jns
psubq
xor
mov
jg
adc
and
arpl
jnp
dec
ror
sub
fidivrl
or
in
pop
cs
or
sub
decl
bnd
cmp
lea
and
shl
popf
sahf
pop
xor
out
mov
add
mov
dec
adcb
mov
lods
jns
repz
adc
scas
push
mov
cltd
sahf
push
int
xchg
hlt
imul
lods
push
cmp
repnz
xchg
xchg
shrb
lds
shl
nop
in
sub
out
mov
outsb
xor
stos
pusha
push
dec
aaa
std
adc
adc
shr
adc
jmp
loopne
hlt
jmp
fdivl
pushl
lret
mov
push
ljmp
jne
addps
mov
jae
sub
push
sub
push
fucomip
and
arpl
pushl
aad
or
dec
jno
or
insl
adc
jae
idivl
jno
mov
scas
or
sub
fdivr
sub
insl
add
adc
jno
adc
push
ret
pushf
inc
jg
loop
or
cmp
inc
xchg
ljmp
xchg
dec
stc
xchg
movsb
ss
mov
roll
movsl
sub
call
push
call
imul
or
or
cmpsb
pop
fisubs
test
push
std
call
push
sti
xor
push
clc
mov
mov
lock
arpl
sarl
sub
sbb
sub
add
ljmp
add
pusha
inc
adc
ljmp
lcall
mov
mov
ret
jnp
stos
cmc
lock
push
jg
loop
jae
ret
out
xchg
push
mov
inc
sbb
mov
ds
stc
bound
daa
and
sbbb
mov
gs
inc
fwait
cmp
add
or
sbb
adc
cmpsb
cmp
ljmp
or
inc
insl
jmp
enter
xor
ljmp
mov
mov
mov
pop
fisttpl
jbe
clc
daa
mov
inc
or
out
xchg
dec
add
cmp
mov
in
xchg
cmpsb
outsl
decl
sbb
push
cmpsl
sahf
xchg
add
jmp
sti
fildll
fsubr
sbb
rcrl
ds
dec
clc
lcall
subb
int
and
xorb
pop
mov
mov
adc
ljmp
dec
popf
adc
sub
mov
mov
decl
imul
arpl
lret
sub
repz
fstl
aaa
cld
inc
adc
pop
test
dec
in
aas
outsl
cli
lcall
jle
fsubrl
nop
bound
mov
notl
cwtl
hlt
mov
fadds
js
push
incl
add
mov
outsb
cmp
sbb
lds
in
xchg
fwait
push
jg
sbb
mov
iret
cltd
push
mov
jne
mov
mov
or
daa
xchg
xchg
xchg
clc
fldt
xchg
sahf
add
clc
mov
inc
mov
adc
or
cmpsl
dec
mov
ret
pop
xchg
lods
pop
dec
fcomi
jecxz
adc
lcall
test
inc
mov
je
mov
and
mov
sub
rolb
aam
jmp
push
movsl
enter
decl
push
fcmovb
hlt
pushf
inc
cld
and
scas
leave
cltd
shlb
mov
push
mov
gs
pushl
adc
fwait
or
jno
pop
enter
icebp
mov
pop
jecxz
mov
dec
divl
jnp
std
gs
lea
xchg
scas
mov
call
mov
into
rorb
cmpsb
xchg
dec
dec
add
jge
faddl
pusha
or
aaa
out
aad
push
pushf
lock
call
jns
push
sbb
lcall
and
mov
outsl
movsb
adc
xchg
cld
adc
pop
mov
push
jns
mov
pop
mov
push
ja
incl
das
push
xlat
les
test
add
dec
sbb
mov
cmpsb
push
add
jo
adc
and
lods
nop
or
or
out
bound
lea
sbb
jp
insl
lcall
add
or
stos
lcall
pushl
imul
outsb
imul
outsb
dec
push
stos
rorl
icebp
push
jo
and
jg
jb
rorb
adc
or
and
popf
scas
pop
repnz
xor
ljmp
popa
pop
cmpsb
je
cmp
jnp
sahf
imul
jmp
mov
das
jnp
incl
mov
sub
je
out
aaa
xchg
loope
mov
mov
xchg
cmpsl
decl
gs
pop
addb
jge
adc
pusha
cmc
cmp
mov
adc
decl
dec
xchg
xchg
rsqrtps
mov
push
xor
gs
int3
jnp
cmc
ficompl
stos
clc
lds
push
xchg
jge
pusha
test
jle
push
mov
lcall
or
decl
dec
mov
mov
jo
inc
xlat
mov
popf
bound
adc
cwtl
jmp
sub
mov
dec
fbstp
jbe
cld
xchg
fdivrs
mov
jb
fcompl
jmp
pop
xchg
jno
inc
ret
into
call
movsb
adcb
ja
push
aaa
repnz
js
hlt
ljmp
push
movsl
lahf
leave
sti
cli
push
cmpl
addr16
vpsrld
ljmp
inc
push
jb
jle
das
pop
and
aam
rclb
icebp
jp
cli
inc
or
adc
inc
fidivrs
scas
call
out
pop
movsl
add
push
push
out
mov
adc
sub
rorb
push
push
stc
mov
bound
cmp
dec
pop
rcrl
inc
ljmp
fbld
fsubr
xchg
mov
jle
cmpsb
test
push
out
or
call
hlt
or
sub
out
cmp
or
insb
inc
test
or
sub
sbb
jmp
jbe
and
ret
xchg
mov
js
and
mov
push
cmp
scas
in
xchg
mov
push
scas
clc
rcll
fstl
jle
jg
imul
ja
add
lahf
fstps
outsb
rcrb
pop
fstps
xchg
dec
hlt
data16
jg
xchg
mov
mov
fcoml
mov
sub
push
dec
cmc
xlat
mov
incl
clc
xchg
and
lret
sub
sar
jmp
mov
mov
jecxz
das
stc
das
and
jl
inc
inc
add
ss
in
xchg
testb
mov
sub
popa
xchg
loopne
insl
pusha
adc
push
xlat
push
mov
cmp
cmp
mov
js
insl
jl
testb
push
lods
aaa
lds
add
cmpsl
and
pushf
or
call
sbb
sbb
add
mov
icebp
fs
jg
mov
stc
out
mov
aad
out
outsl
push
lret
sti
fistps
pushl
sbb
pop
ret
pop
repz
sbb
fsubl
inc
out
stos
enter
cmp
ljmp
les
sti
push
push
dec
fwait
or
inc
pop
insb
fiaddl
cmp
cwtl
test
ficomps
fidivs
dec
sbb
mov
ret
xchg
cmp
sbb
jg
sbb
mov
aas
jecxz
sub
mov
jne
ja
dec
sti
dec
xchg
dec
jno
clc
inc
dec
and
rcrl
push
nop
mov
lcall
lcall
dec
add
mov
mov
cmpsl
js
lock
idiv
sti
jnp
and
pushl
mov
cmp
or
testb
pop
loope
sub
xchg
nop
push
gs
lds
push
decb
add
jns
pop
into
mov
push
outsl
mov
pushf
out
fimull
into
xor
mov
mov
mov
inc
lcall
mov
jmp
lods
iret
int3
in
movsl
inc
jmp
xchg
pop
jg
inc
push
testl
fwait
clc
jg
ss
mov
jp
jecxz
add
add
mov
mov
pop
clc
testb
pushf
das
push
mov
popf
into
subl
mov
cmp
mov
iret
fidivs
mov
adc
ret
aaa
or
pushl
cwtl
mov
xor
push
pop
xchg
inc
cmp
fmuls
loopne
push
dec
mov
cld
pushl
lock
mov
ficoml
dec
and
test
sbb
push
inc
lret
xchg
arpl
call
scas
lea
ljmp
pushf
imul
iret
ljmp
cltd
mov
inc
pop
pusha
sti
inc
daa
dec
cmp
enter
push
sbb
cmpsl
ret
hlt
jp
mov
lret
mov
leave
push
xchg
xorb
loopne
clc
mov
cli
outsw
mov
sub
mov
bound
sbb
ds
cld
cmpl
xchg
push
and
popf
lcall
sbb
and
lds
inc
std
add
cmp
sbb
add
mov
aaa
cwtl
sar
or
dec
ja
jo
sbb
rcrb
dec
jns
mov
ds
jae
pop
outsb
aam
add
arpl
jns
daa
mov
xchg
lcall
lcall
add
cmp
dec
mov
pop
lea
lods
xor
mov
call
jo
out
push
sub
push
rorl
and
jno
jbe
clc
lods
aad
call
push
ret
aad
push
mov
and
dec
adc
pop
xchg
ret
sub
call
inc
repnz
je
dec
sub
push
pop
repz
cmp
pop
cs
jmp
lods
xor
adcb
ret
jnp
call
les
sub
adc
call
ljmp
pop
xchg
lahf
dec
insl
insl
inc
cmpb
or
push
lret
xor
or
icebp
incl
add
stc
sbb
mov
push
jl
adcl
fwait
outsb
scas
cltd
clc
adc
cld
pop
ret
mov
mov
int
pop
push
push
in
xor
jnp
aad
push
in
push
or
push
in
out
cmp
out
pushl
je
call
pop
jle
sbb
jns
repz
jge
outsb
mov
imulb
clc
rorl
mov
push
jg
popf
xlat
pop
int
int
jne
ret
jmp
data16
scas
sbb
inc
xor
aas
es
idivl
jno
arpl
sbb
cli
cmp
cld
ljmp
loope
into
ja
dec
sub
xchg
rcll
jge
jg
xchg
xchg
xchg
pop
and
int3
xchg
adc
jbe
mov
pushl
jo
and
enter
mov
int3
inc
push
ljmp
lock
and
mov
pop
stos
testb
test
mov
clc
or
in
add
jp
add
in
test
xor
dec
popa
adc
dec
mov
mov
mov
adc
cmp
sbb
jne
jl
dec
cmpsl
lds
cmpsl
add
lcall
aaa
pop
jae
pusha
loopne
inc
sub
xor
xchg
lds
pop
cmp
test
loopne
jmp
add
mov
imull
pop
or
cmp
sbb
cmp
pop
ds
movsb
mov
xchg
add
fsubr
pop
adc
push
out
sti
push
cmpsl
mov
pop
mov
sar
jmp
sti
sbbl
and
cmp
mov
xchg
shl
sahf
sbb
sarl
jle
sub
xchg
mov
in
jecxz
pop
stos
mov
movsb
pop
mov
pushl
or
dec
cmp
test
dec
cmc
jg
add
push
cs
mov
mov
dec
test
push
sbb
xor
lret
ljmp
mov
jmp
imul
fwait
hlt
sbb
jecxz
push
jb
mov
xchg
fwait
loop
rcll
push
xchg
jmp
out
push
add
add
mov
xchg
cmp
dec
xor
sbb
xchg
or
incl
inc
inc
dec
and
call
leave
ja
test
mov
les
dec
js
mov
xchg
sub
pop
mov
test
push
inc
xchg
and
gs
ljmp
jle
lods
mov
frstpm(287
push
mov
or
xchg
push
mov
inc
push
adc
call
std
incb
scas
pop
addl
inc
clc
or
inc
jne
mov
ljmp
sub
clc
mov
mov
pushf
insb
fcmovb
fs
arpl
sbb
jmp
test
pop
inc
nop
sub
inc
fs
pop
jecxz
dec
mov
and
push
andps
sbb
lcall
test
cmp
cmp
xchg
outsl
push
out
stc
xchg
sub
add
cmpsl
repz
movsl
jg
dec
std
jg
cwtl
push
sub
inc
lcall
jmp
sub
adc
call
cwtl
clc
add
pop
pushl
mov
or
mov
pushl
push
dec
in
dec
sub
test
and
ret
out
repz
decb
pop
add
rcl
fcomip
push
shll
je
fidivrs
dec
rorl
and
dec
xchg
xor
jne
mov
or
lcall
fcompl
pop
xor
jns
divb
adc
add
inc
sub
push
orb
ret
lret
aad
outsl
loope
or
and
dec
push
and
push
insb
push
inc
or
call
push
xor
ja
push
pop
jno
lret
addb
inc
repnz
dec
jae
bound
imul
out
aaa
and
jne
jo
imul
outsb
imul
add
xor
add
lods
adc
out
sub
inc
push
ljmp
loope,pn
jb
adc
or
pusha
addr16
add
lds
dec
fs
mov
sub
fwait
insl
dec
inc
inc
push
dec
jo
daa
xchg
and
push
cmovs
mov
jne
add
push
lock
outsl
insb
push
outsb
popa
jo
push
mov
sbb
sub
mov
dec
dec
jne
js
xor
inc
scas
jp
add
add
adc
sbb
cmp
jns
push
inc
out
adc
popa
jb
add
push
adc
ljmp
add
mov
insl
insl
sbb
sub
xchg
cmpsl
xorb
xchg
jo
or
add
int3
int3
cmpsb
adc
loopne
sub
in
outsb
imul
insb
stos
sub
sub
inc
sub
add
divb
flds
sub
dec
inc
test
mov
mov
cli
arpl
mov
xchg
test
inc
cmp
push
fisubs
mov
pusha
sbb
loop
ds
insb
jne
addl
or
sti
adc
icebp
insl
clc
sub
dec
mov
ficoms
jo
inc
push
fildl
cmp
inc
push
pop
jbe
ret
mov
or
push
jne
addr16
push
pop
jb
push
inc
inc
subl
jns
fistpl
or
mov
inc
jae
adc
pop
mov
int3
mov
int
or
fs
inc
jecxz
xor
hlt
std
dec
cmp
cmp
jae
sub
xor
mov
pop
inc
flds
sub
mov
push
jo
packuswb
fidivl
mov
inc
dec
sbb
pop
pop
insl
adc
mov
adc
push
aas
sbb
jo
mov
and
in
imul
xor
and
mov
xor
jno
inc
roll
or
and
test
mov
pop
pop
and
popw
push
gs
mov
lret
divl
fs
push
inc
xchg
pusha
rol
pop
popa
and
das
mov
cmp
jae
pushf
inc
or
mov
dec
inc
dec
or
inc
mov
or
pop
mov
dec
jb
sub
push
xlat
fs
xchg
lods
xor
je
ja
mov
add
stos
pop
mov
cmp
dec
mov
mov
cmp
cmp
and
inc
popa
es
jp
jmp
test
push
fdivs
mov
adc
shrl
sub
orb
jbe
ret
mov
pop
test
mov
cwtl
cmpb
dec
push
pop
mov
jmp
or
jne
lods
pop
stos
aad
add
aaa
stos
jns
inc
je
push
and
xlat
fildl
out
sti
or
and
push
inc
sbb
into
mov
sub
jno
push
pop
ficompl
loope
pop
push
or
rcl
mov
add
shlb
outsl
lods
jb
addl
sbb
mov
sbb
mov
push
xchg
or
add
out
ret
pop
aaa
adc
xlat
mov
dec
and
iret
push
pusha
push
stc
pushf
push
jne
sub
or
lea
push
pusha
or
pop
gs
jae
xor
xchg
and
loope
popa
add
test
xchg
jnp
xor
ficompl
dec
add
sti
inc
mov
imul
repnz
scas
pop
outsb
push
outsl
add
and
add
add
rclb
js
test
les
inc
rcl
cmp
mov
gs
jne
stos
int
inc
cmpsb
xchg
or
fdivl
arpl
sti
mov
popa
sub
fs
pop
adc
jo
adcl
mov
sbb
inc
out
loop
jmp
xlat
fiaddl
mov
or
and
jo
xchg
push
popa
sbb
xchg
outsb
adc
dec
shr
mov
mov
sbb
sub
push
fiadds
xchg
pop
and
inc
jns
cli
pop
cmp
idivl
xor
scas
mov
or
jb
and
test
inc
in
lods
lods
cmp
inc
and
arpl
sbb
pop
inc
imul
js
xor
fs
fidivl
mov
inc
insb
notl
jle
mov
ret
ljmp
push
mov
into
cmpsl
cmp
jae
xor
aad
test
nop
iret
mov
ja
jns
push
lds
inc
popa
add
sahf
push
and
xchg
mov
mov
xchg
and
sbb
mull
enter
inc
dec
push
push
xchg
and
adc
or
inc
adcb
jnp
push
adc
inc
nop
ja
pop
fists
jnp
or
dec
pop
sub
outsb
dec
adc
adc
ss
sar
pop
imul
mov
mov
xor
xchg
movsb
dec
adc
lcall
push
xchg
cmpsb
cmp
push
addb
pop
loopne
sbb
inc
shl
sub
pushf
out
inc
jb
xor
cmp
and
dec
or
add
and
mov
and
push
or
out
stos
jg
addl
inc
jae
fcomp
fiaddl
inc
leave
inc
rcrl
cs
fisubl
imul
iret
push
repz
jo
sbb
and
test
insb
cmp
das
mov
dec
rclb
push
icebp
adc
ds
mov
mov
imul
mov
sbb
aad
add
push
mov
lret
push
mov
call
push
xor
mov
and
fcoml
adc
push
mov
adc
fstpl
adc
inc
or
hlt
or
or
mov
sub
cmovno
rorb
addb
jmp
fisubs
test
push
icebp
and
jb
lods
int3
and
cmpsb
fcompl
shll
adc
insb
jl
mov
push
push
pop
inc
mov
mov
xor
xlat
push
mov
mov
push
js
into
dec
mov
test
or
int3
adc
pop
sub
adc
ja
aaa
dec
sub
cwtl
addb
lods
sbb
or
mov
push
outsb
jo
add
push
push
fcompl
or
insl
insb
out
mov
xor
popw
in
testb
mov
inc
cmpsb
xchg
mov
stos
lods
pop
es
inc
and
pop
nop
sub
arpl
inc
lds
xor
sbb
inc
and
movsb
xchg
inc
push
in
inc
mov
nop
movsl
rcl
fcomi
cmp
xor
outsl
or
xchg
movsl
inc
sbbl
outsb
out
mov
sub
or
das
xor
icebp
push
pop
adc
pop
cwtl
sbb
cmp
xchg
pusha
and
cmpsl
fnstenv
cmp
scas
add
pop
inc
iret
or
pop
jns
roll
nop
shll
push
fs
pop
je
pop
cmp
jnp
push
xor
bound
cwtl
cmp
or
sbb
les
aam
out
cmp
xchg
xchg
cld
add
pop
pusha
inc
mov
inc
push
mov
rcll
enter
imul
push
push
inc
out
adc
jb
inc
mov
ljmp
inc
push
inc
jmp
pop
xchg
dec
push
sub
dec
dec
dec
jae
ret
add
pusha
mov
cmp
jne
data16
xchg
add
jmp
sub
negl
sbb
sbb
inc
fwait
jp
popf
loopne
cmpb
inc
mov
add
into
dec
dec
inc
sub
dec
fmuls
or
add
and
movsl
std
movsl
dec
dec
add
adc
rcl
repz
lret
fwait
divb
add
push
cmp
mov
push
xorb
mov
push
add
or
or
xor
fsubl
dec
mov
pusha
push
mov
jnp
mov
pop
add
adc
lock
add
xlat
add
and
fsubrl
popa
adc
sbb
negl
fdivrp
adc
rclb
inc
cs
adc
int
cmpb
pmaxsw
rcrb
pusha
dec
mov
negb
push
lahf
es
push
and
xchg
test
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
