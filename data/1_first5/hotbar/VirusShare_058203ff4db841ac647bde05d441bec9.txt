divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
inc
mov
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
push
pop
inc
push
adc
and
dec
push
fcomi
insl
roll
les
pushl
cltd
push
mov
fistl
dec
mov
mov
mov
call
pushl
mov
test
mov
or
data16
cmpl
mov
mov
lock
add
andl
sbb
cld
push
sub
mov
hlt
cs
jo
rcrb
adc
mov
mov
cmp
sbb
sub
dec
rcrb
mov
or
bound
or
scas
hlt
or
pop
cmpsl
lret
shr
jle
sbb
cmpsb
cmp
lea
or
int
push
call
sub
add
insl
xlat
or
pop
pop
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
inc
loopne
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
adc
cmp
push
in
popa
and
add
inc
dec
push
mov
aaa
pusha
out
jmp
or
sbb
enter
fisttpl
sahf
add
shr
dec
cmp
je
out
sti
mov
fdivrs
fs
add
pop
push
scas
dec
testl
scas
mov
push
insl
sbb
jl
clc
movl
bound
mov
aaa
jge
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
jg
add
gs
sti
mov
mov
xor
dec
gs
clc
mov
pop
ret
arpl
xchg
pop
mov
jge
arpl
cli
or
mov
dec
add
clc
sub
enter
pusha
xchg
and
in
mov
in
adc
sbb
or
psraw
movsl
push
xorl
fdivrs
mov
cmp
jg
mov
xor
sbb
inc
ret
in
sbb
push
push
adc
adc
pop
cmpsb
sub
mov
push
jmp
cmp
push
mov
sar
dec
lea
push
add
jge
ja
adc
cmp
clc
add
push
mov
lods
jmp
pop
ret
outsb
test
jl
mov
add
stc
clc
icebp
loop
lds
iret
lock
push
std
jle
mov
cmpl
or
push
int3
jmp
incb
sub
sbb
jge
sub
stc
or
or
fisttps
add
pop
cltd
sub
shr
enter
mov
mov
pop
xor
cwtl
pop
les
decb
cmp
jl
cmp
jne
insb
mov
fldt
add
xor
jbe
mov
testl
adc
inc
add
lea
adcl
adc
inc
adc
dec
in
aam
xor
hlt
into
mov
aam
cli
cmpsl
fistpll
pop
mov
cmp
cmp
cmpsl
mov
xlat
xchg
push
xor
fsubrs
loop
stos
mov
jge
mov
mov
xchg
test
jle
cmp
mov
inc
xchg
rol
sahf
mov
pop
bound
jo
inc
icebp
add
jo
scas
test
mov
push
push
xchg
call
dec
je
sbb
iret
pop
idivl
mov
inc
addr16
icebp
stos
push
mov
cmp
je
xlat
loopne
es
and
mov
adcb
idivb
std
jbe
aaa
and
andb
cmp
or
inc
push
xor
lock
push
xor
push
push
sar
push
push
adc
cmp
jle
js
push
fstpt
out
ficomps
jle
lcall
push
cmp
cmp
jae
push
cmp
adc
filds
mov
andl
ret
add
jb
mov
mov
adc
mov
push
lea
ljmp
loopne
mov
push
push
push
push
rcrb
jle
fidivs
jmp
xchg
call
insb
or
cmpsb
push
pop
addb
xchg
cmpsb
cld
pop
test
cmp
mov
jo
inc
sub
push
scas
jo
aad
aaa
mov
ljmp
or
cmp
push
mov
outsl
das
xor
jno
cmp
jne
push
stos
sbb
cmc
fcomp
sbb
push
add
adc
pusha
js
test
mov
mov
or
pop
pop
pop
push
dec
test
fcompl
jg
mov
push
leave
xor
fcmovnu
in
mov
je
add
adc
test
test
fiadds
dec
sub
mov
fcmovnu
sarb
push
lret
add
sbb
ja
adc
mov
nop
xchg
add
mov
stc
insb
lret
pusha
mov
mov
or
lret
xchg
lret
divl
mov
pushf
movsb
add
les
popa
xchg
daa
pop
out
or
or
mov
push
or
sbb
dec
push
movl
lret
or
inc
sub
lea
dec
push
xor
push
mov
xchg
pop
ljmp
push
add
imul
push
add
add
filds
push
dec
add
aad
dec
popf
lea
push
add
push
outsb
scas
sbb
lret
jnp
sub
mov
sub
sub
xchg
adc
loopne
scas
dec
sbb
xor
clc
push
fsts
push
dec
cmp
je
mov
sub
jne
or
mov
call
mov
adc
pop
mov
sti
jae
seto
xor
jb
mov
lods
ljmp
aad
xor
sti
and
lods
cmp
testb
movsl
jle
cmpsb
sbb
fbstp
push
xchg
jecxz
std
cmp
adc
jge
xor
ja
add
or
inc
and
lea
lcall
inc
je
outsb
add
add
or
or
mov
push
adc
or
mov
sub
mov
enter
adc
adc
mov
or
ss
or
and
mov
ret
mov
insl
jecxz
lock
push
xchg
int
jno
pop
jae
in
lahf
mov
out
decb
icebp
or
adc
xor
enter
xor
cmp
mov
adc
sub
add
mov
inc
xor
or
scas
add
lahf
add
ret
repz
cmp
je
dec
je
push
adc
or
adc
xor
xchg
mov
icebp
xor
dec
mov
loope
loope
cmp
repnz
mov
clc
call
call
mov
push
sub
out
or
push
adc
add
fadds
mov
roll
popaw
jl
xchg
add
jg
andl
sbb
adc
pusha
lock
xchg
mov
dec
orb
lret
pop
fnstenv
fs
mov
sarb
mov
clc
xchg
insl
xchg
add
sub
lret
push
loopne
fildll
insb
rorl
or
dec
jnp
test
xor
js
and
adc
cld
imul
add
xchg
in
dec
xor
adc
fcoml
sbb
pushl
ss
jmp
inc
neg
sbb
inc
inc
pop
xlat
andb
add
or
test
fstl
rorb
sti
sub
and
cmpb
sub
movsl
in
or
adc
pop
ds
jns
subl
das
adcl
shrb
sbb
xchg
scas
pop
mov
scas
mov
vhaddps
xchg
cmpl
add
movsb
rcrl
sbb
ret
pop
xlat
mov
mov
hlt
jl
ret
pop
rorb
test
fldl
fisubrs
clc
mov
stc
push
mov
cmp
jne
or
mov
dec
jne
mov
push
pop
lcall
inc
add
sub
dec
in
or
into
add
sbb
dec
mov
je
mov
or
arpl
scas
mov
or
sbb
add
pushf
sub
jo
and
aas
ret
call
and
jmp
jo
ret
mov
mov
adc
xchg
add
and
cmp
adc
lahf
cs
jno
test
mov
jle
push
push
or
mov
xor
add
lcall
lea
cmc
adc
push
push
push
xchg
xor
insl
data16
out
jne
sahf
out
jmp
dec
jmp
loopne
ds
mov
in
or
out
cmpsb
mov
ljmp
sbb
mov
or
fiadds
pusha
pop
cld
call
push
xor
inc
lea
das
pop
and
ss
push
push
ret
mov
push
in
push
jecxz
test
xchg
loopne
jp
hlt
inc
dec
ja
ja
pop
mov
pop
in
jne
ret
push
jne
insb
movsl
repnz
je
or
inc
mov
imul
orb
loope
pop
aam
xor
loope,pt
les
lahf
in
dec
or
mov
jmp
sub
mov
je
cmp
push
xor
aas
mov
mov
decl
inc
adc
setno
or
out
out
add
enter
loopne
push
push
insb
xchg
lock
xchg
push
loopne
aam
mov
fwait
xchg
scas
outsb
cltd
roll
sahf
mov
cmpl
mov
xor
and
sbb
add
fstl
cmp
into
push
and
add
add
fldt
pop
jbe
pusha
mov
je
in
repz
imul
data16
push
adc
mov
add
pop
loope
inc
jmp
fst
movsb
jmp
dec
test
sbb
xor
sbb
pop
neg
sbb
movsb
jmp
jae
ret
je
arpl
pop
cmpsl
mov
jmp
xchg
push
mov
cmp
mov
rcrb
jae
cwtl
pushf
mov
test
dec
leave
mov
pop
dec
imul
nop
and
adc
nop
mov
divl
repz
lods
or
enter
mov
mov
or
xor
icebp
lea
arpl
pcmpeqb
adc
push
mov
cmp
push
lock
xor
sub
lcall
out
add
jo
push
aas
jbe
jo
xchg
mul
mov
xchg
scas
arpl
shrb
pop
inc
mov
les
adc
dec
movsl
test
adc
and
rcl
adc
sub
imul
pushf
push
int
inc
xor
iret
and
mov
int3
sbb
test
and
xchg
pop
enter
in
sbb
enter
jae
call
out
inc
rclb
mov
sbb
dec
jmp
sbb
mov
mov
dec
roll
jmp
sbb
sbb
push
xchg
sbb
push
dec
call
cmp
jmp
jne
xor
add
and
push
pop
push
jo
cmp
aas
sbb
add
mov
and
sbb
aaa
es
jne
mov
jmp
add
push
stos
addb
adc
push
or
cmp
push
sub
pop
push
xor
mov
fstl
and
push
inc
adc
nop
mov
loope
cltd
in
cmp
loopne
dec
push
mov
cmp
jo
in
sbb
mov
and
and
cwtl
and
adc
xor
jge
push
aas
dec
imul
cwtl
push
ficoml
push
push
sti
dec
cmovnp
jnp
xor
test
clc
out
lret
idivb
dec
lcall
aas
xchg
sbb
sbb
nop
test
mov
es
xchg
mov
in
dec
xchg
mov
and
jae
cmp
adc
adc
adc
je
cmp
and
jge
je
or
jl
sbb
lcall
dec
cmp
jne
mov
fcmovne
add
xchg
push
pop
push
jns
icebp
push
jmp
enter
xorb
and
adc
adc
pop
mov
daa
mov
cmpsl
jg
or
adc
xor
flds
cmp
or
or
insl
mov
into
push
sbb
and
rolb
in
adc
or
xor
xchg
xor
hlt
btc
jne
jns
lret
adcl
jl
test
mov
or
sbb
adc
lret
jns
pop
or
sub
jno
shrl
add
fcompl
adc
cmc
xor
inc
adc
add
rcrb
inc
adc
jecxz
sarb
out
stos
and
and
adc
imul
xchg
pusha
sbb
or
fwait
ss
decb
loop
xor
dec
jne
xor
sbb
jnp
xchg
prefetchw
jmp
popa
inc
push
nop
sbb
push
sbb
sbb
popf
pop
sbbl
jge
je
mov
mov
push
sahf
les
shlb
pop
nopl
fildll
clc
js
pop
stc
or
cs
popa
testl
fldcw
push
cmp
je
or
je
xor
push
push
data16
and
mov
jecxz
push
jne
mov
cmp
in
add
and
xchg
adc
and
inc
test
mov
add
daa
add
ret
or
add
mov
adc
mov
cmp
loopne
movsb
repnz
and
fistpl
jge
mov
fsubr
hlt
je
push
push
pop
in
lahf
ljmp
mov
test
mov
sub
xchg
and
mov
and
xor
cli
adc
and
std
push
pop
mov
scas
push
jne
xor
rorb
sahf
sub
mov
mov
loope
lock
and
and
and
test
push
and
sahf
inc
bound
push
add
jbe
pop
add
push
add
pop
push
jo
aam
mov
add
and
lock
cmp
mulb
add
incb
mov
popa
cwtl
mov
push
clc
pop
or
sub
cltd
daa
jo
jmp
jg
jnp
jnp
mov
sub
mov
sub
ljmp
sub
push
pop
leave
sub
sbb
stos
add
test
test
lret
or
xor
mov
add
add
add
add
and
inc
pop
xor
pushf
push
insb
push
daa
pop
xor
xchg
dec
pusha
insb
adc
mov
lods
push
loope
inc
mov
aaa
movsl
or
pusha
mov
jne
and
mov
sbb
pop
int
mov
out
cmp
arpl
sub
dec
cmp
cmp
cmpsl
xchg
nop
or
or
jg
xor
mov
adc
pop
inc
ja
mov
lock
inc
dec
push
push
sbb
mov
je
rorb
and
and
fcomps
or
and
outsb
orb
sub
xchg
xchg
stos
dec
and
cmp
push
enter
add
negl
das
ljmp
imul
fstpt
hlt
jnp
xchg
dec
xchg
and
xor
addb
ficompl
shl
inc
sahf
js
xor
sub
jnp
xor
sub
fldt
inc
cmp
fld
and
and
shlb
add
sbb
pop
aaa
and
inc
cmc
xor
fcmovb
popf
sbb
subb
rolb
mov
adc
test
cmp
shlb
xor
and
les
xor
and
or
outsb
in
lea
hlt
js
test
in
mov
pushf
dec
sub
inc
inc
ljmp
movsl
popf
rorb
dec
and
mov
mov
cmp
and
xor
jnp
pop
mov
mov
push
pushl
aad
mov
xchg
push
lahf
add
sarl
movsb
insl
out
jnp
xchg
jbe
ret
push
je
idivb
bound
mov
sub
nop
jbe
xor
mov
hlt
push
fbld
call
cmp
jne
mov
add
add
mov
or
cmpsl
jo
pop
call
jo
jne
push
sub
pop
pop
pushf
adc
dec
jo
jne
mov
and
in
movsl
jmp
cmp
push
imull
mov
pusha
mov
iret
xor
add
ret
jge
mov
add
in
add
pusha
mov
stos
hlt
add
xor
loopne
adc
add
inc
cmp
sub
pop
das
xchg
mov
mov
test
mov
mov
sbb
loopne
pop
ror
loopne
push
lods
lods
mov
xchg
outsl
adc
cmp
xchg
shl
loop
orb
out
out
arpl
loopne
dec
mov
outsb
push
mov
setne
or
sbb
dec
mov
mov
pop
into
add
fldt
outsb
fldl
or
or
out
xor
cmpb
adc
sub
add
sti
int3
adc
xor
sub
sarl
cmpsl
dec
sbb
cltd
dec
push
add
pop
pop
push
or
fsubrp
jp
jnp
test
jne
or
xchg
cmp
pop
stos
test
adc
call
mov
add
repz
je
add
je
push
mov
push
jp
std
push
fsub
mov
mov
push
out
inc
out
add
inc
push
or
aad
or
aaa
lahf
sbb
mov
jecxz
inc
shrl
pusha
xor
lcall
xor
xor
in
mov
jg
push
and
shlb
add
or
call
das
and
int3
add
mov
or
roll
jae
in
mov
mov
or
xchg
push
in
xor
sub
movzwl
jnp
test
lock
mov
dec
je
sub
jmp
jge
imul
add
jmp
scas
mov
jmp
push
xchg
mov
int3
adc
iret
mov
dec
pop
lea
add
les
sbb
add
push
add
pusha
fstl
jg
das
mov
lock
push
jno
je
jecxz
sahf
xor
inc
hlt
xor
inc
mov
xor
lock
jle
push
movsl
push
push
cmp
cmp
outsl
loope
daa
push
fs
ret
jle
cmpsb
jae
ret
push
sbb
pop
inc
pop
or
or
lock
lods
sub
orb
loopne
das
pop
mov
paddusb
cmp
jg
mov
mov
push
push
add
pop
js
sarb
mov
pop
mov
add
cmp
pop
pop
and
jae
lea
mov
mov
xor
jne
imul
lea
and
cmp
fistpll
xchg
aas
add
jge
push
or
pop
lahf
or
nop
lea
or
jnp
into
in
inc
sarl
cmp
call
xor
push
int3
rcrb
pop
repnz
or
imul
mov
jnp
sbb
in
add
dec
rep
mov
mov
push
add
inc
pop
cmp
push
hlt
mov
mov
inc
cmp
repnz
add
mov
mov
nop
and
inc
or
call
and
mov
jp
gs
shlb
test
in
loopne
inc
js
lods
pop
cld
loopne
or
add
pop
fisttpll
sub
dec
call
xchg
jo
push
loopne
rcrb
loope
mov
or
test
cmove
es
push
fimull
push
imul
add
loopne
mov
sub
lock
mov
inc
add
aam
nop
or
or
scas
in
in
stos
test
fldenv
dec
push
in
sbb
inc
mov
scas
sbb
sub
cmp
inc
mov
adc
pop
mov
or
ret
pusha
cld
sbb
push
call
and
outsb
pop
dec
cmp
addl
xor
add
mov
adc
pop
call
push
inc
loopne
loop
in
mov
cwtl
out
or
mov
jbe
nop
or
xor
or
aas
xchg
mov
cmp
adc
or
xchg
pop
or
imul
and
dec
loopne
or
cmpxchg8b
adc
leave
loopne
adc
sbb
adcb
dec
clc
repz
jg
mov
adc
out
add
xor
mov
sahf
sbb
xor
inc
mov
int3
out
addr16
rclb
sbb
push
mov
adc
je
or
shlb
add
lock
insl
xchg
xor
inc
mov
pushl
push
js
cmp
sbb
cmp
ja
mov
adc
mov
push
adc
push
ret
push
push
inc
push
dec
jbe
repnz
js
mov
shll
insl
mov
sbb
cmp
popa
xor
popf
cmp
mov
aas
lea
add
aaa
je
xchg
pop
jmp
inc
add
jecxz
push
xor
mov
push
xor
ror
cmc
jle
pop
or
add
mov
or
add
jne
scas
lcall
push
int
lahf
nop
push
mov
cmp
jg
mov
mov
xchg
icebp
sbb
jmp
push
leave
enter
pop
mov
pop
aad
enter
sbb
enter
imul
xchg
or
imul
cmpsl
sub
imul
cmp
adc
cmp
outsb
sub
outsb
pop
mov
cld
subl
sbb
add
xor
cli
sub
jmp
mov
push
stc
sbb
and
add
in
and
cmp
je
leave
or
jmp
shrb
cld
push
fisubl
loope
pop
xor
cmp
xor
xor
mov
or
hlt
les
cmp
jae
jl
jmp
mov
hlt
lea
ja
xor
sti
inc
push
je
call
push
mov
lock
js
je
add
fiaddl
inc
mov
adc
cmpsb
lock
push
aaa
dec
mov
hlt
add
jo
in
mov
and
fistpll
push
stos
cmp
js
mov
roll
or
shll
lods
pop
clc
imul
nop
add
mov
sub
hlt
cmpsb
fcomps
rcll
add
lea
ljmp
ss
or
push
test
adc
or
xchg
add
pop
fwait
push
jo
leave
add
mov
mov
shll
mov
adc
pusha
cmpsl
mov
dec
lahf
inc
test
jb
outsb
xchg
inc
ret
mov
jg
inc
mov
and
xor
inc
inc
dec
hlt
jg
hlt
or
inc
lock
push
sub
pop
movb
and
sbb
jge
xchg
add
inc
icebp
imul
rcl
xor
lret
sub
or
ret
fmuls
outsb
add
fdivrs
fidivrs
mov
idiv
cmp
jl
bound
js
fldpi
push
repnz
movsl
push
lds
push
xor
inc
cmp
mov
insl
int
pop
sbb
jae
mov
xor
push
push
xchg
dec
mov
push
mov
or
fiaddl
xor
jne
mov
mov
adc
push
add
loopne
mov
push
je
cmpsl
std
or
mov
ret
je
mov
fdivs
mov
mov
push
jecxz
or
inc
xor
sbb
into
outsl
loope
xor
cmp
mov
clc
pop
pop
int3
or
je
pop
test
hlt
add
sbb
sbb
mov
mov
mov
dec
mov
aam
sbb
adc
mov
inc
sarl
inc
outsb
mov
push
mov
add
cmp
sub
data16
add
lret
dec
dec
sbb
in
jne
pop
xor
mov
sbb
adc
sub
fsub
pop
adc
icebp
mov
mov
cmp
jne
cmp
je
jbe
movb
fldl
notb
push
and
jecxz
fimuls
or
sbb
dec
pusha
mov
mov
push
sbb
out
shlb
or
rcl
ret
sbb
bound
shll
repz
aad
ss
mov
rcl
sub
loopne
cmp
inc
adc
pop
js,pt
jo
jg
jo
add
ss
adc
mov
or
push
sti
clc
or
cs
adcl
push
mov
sar
js
push
jmp
daa
js
sti
or
inc
in
adc
dec
cmp
add
sub
push
fmull
sbb
cwtl
and
mov
pop
std
jno
pusha
adc
scas
lock
sar
addl
addb
loop
xor
rolb
movsb
sarl
out
pushl
dec
cld
or
adcb
push
rolb
adc
push
aam
push
aaa
or
popa
sar
ret
or
in
add
test
sub
inc
pop
xor
ds
mov
inc
hlt
call
mov
sub
add
sar
or
ret
popa
and
loope
mov
pop
sub
mov
ret
insb
cld
xchg
shr
mov
js
add
popl
pop
push
cltd
inc
or
add
outsb
sbbb
add
sbb
jge
mull
xchg
popf
enter
adc
dec
add
jle
xor
inc
shlb
push
cmp
mov
fadd
rorw
es
inc
clc
xor
or
cwtl
pop
ret
adc
mov
add
ret
xlat
xchg
test
adc
push
sbb
dec
scas
cmpsb
call
dec
or
mov
sbb
push
fdivrs
cmp
cmpsb
sbb
push
cmp
and
enter
loope
sahf
cmpl
inc
sahf
jns
inc
mov
xchg
imul
dec
lods
clc
sub
jnp
and
jl
fdivs
add
push
xorb
sub
push
pushl
add
cmp
imul
aad
jb
enter
flds
dec
pop
cmpsb
jp
jecxz
adc
mov
call
cmp
enter
add
movsl
jb
add
test
in
ss
fsubrl
mov
sub
xchg
dec
fnstenv
movsb
add
and
adc
jns
xor
inc
xchg
and
inc
push
fiaddl
addb
cmpb
dec
push
fs
clc
mov
inc
push
jg
mov
mov
add
shl
shrl
bound
jmp
inc
shr
in
and
sbb
mov
inc
hlt
pop
and
nop
in
inc
pop
dec
add
pusha
les
mov
cmp
imul
or
imul
push
pop
cmpsb
rcrl
mov
les
adc
inc
adc
pop
out
cltd
pusha
add
mov
hlt
push
leave
enter
cmp
aaa
fwait
jns
pop
sbb
ficomps
lcall
imul
js
scas
adc
movsl
nop
add
cmp
xchg
mov
aaa
movsb
movsb
enter
icebp
inc
lods
cmpsb
add
cmpb
lock
cmc
or
add
and
in
orb
and
enter
inc
enter
sbb
nop
adc
ret
pop
sarl
push
push
mov
add
or
and
pop
sbb
xor
sahf
dec
mov
adc
sbb
pop
sub
xor
add
and
pop
out
sbb
adc
pop
xchg
sbb
push
js
insb
negl
xchg
leave
cmp
mov
mov
push
mov
push
inc
mov
and
sub
and
and
cmp
sbb
and
loope
and
push
add
movsl
jecxz
push
lods
sub
pop
pop
rolb
sbbl
sub
add
mov
shl
enter
imul
cmp
adc
sbb
and
stc
adc
cmp
popf
cmpl
mov
scas
push
mov
mov
shrl
pop
negl
addl
add
cmp
add
push
scas
cmpsb
or
pop
jmp
push
pop
mov
loope
xor
icebp
outsl
jecxz
lret
push
adc
pusha
adc
jge
mov
cmp
pop
sub
jne
outsl
clc
mov
push
pop
dec
je
adc
in
jge
adc
out
into
test
ss
pop
dec
inc
mov
adc
mov
lods
movsb
out
mov
dec
mov
push
addr16
add
pop
jne
repz
bound
jmp
push
add
push
mov
xor
push
int3
and
or
mov
mov
mov
lret
sti
divl
or
pop
push
mov
xorl
dec
pop
mov
mov
shlb
mov
sbb
aas
or
insb
push
xor
push
push
daa
pop
pop
movsb
in
pushl
js
cltd
lea
and
and
jg
sub
mov
shlb
jmp
cmp
je
cmp
dec
stos
xor
or
stc
leave
adc
cli
mov
stc
sub
sbb
fstpl
imul
ja
mov
je
xchg
push
and
xchg
mov
pop
test
adc
jmp
xchg
cmpsb
adc
sbb
cmp
adc
dec
jne
cmp
mov
fnstcw
dec
xor
mov
es
dec
or
adc
mov
sbb
mov
mov
add
data16
and
sub
mov
cld
fstl
lea
adc
sub
mov
lahf
or
jnp
mov
movb
cmpl
mov
sbb
xchg
pop
jge
fists
mov
mov
pop
icebp
fbld
push
pop
push
lea
push
push
push
push
add
mov
lea
cmp
mov
adc
and
pop
leave
mov
jle
add
mov
lds
movsb
lea
xchg
push
push
data16
pop
pusha
xor
pop
mov
shlb
rolb
cmp
sbb
push
js
mov
movsb
push
je
xchg
push
sbb
push
aam
xchg
das
pop
push
push
sbb
movl
mov
into
sub
xchg
repnz
punpcklwd
dec
sub
outsb
pusha
dec
adc
dec
adc
test
data16
shll
in
add
xchg
call
cmpl
jbe
dec
mov
pop
and
pop
push
adc
adc
push
or
or
push
sbb
add
adc
aas
imul
lea
add
das
popa
pusha
push
or
enter
dec
adc
test
lcall
fstps
xor
push
dec
pop
dec
in
test
mov
xchg
inc
or
js
or
ret
add
call
push
mov
test
xor
mov
loopne
aad
mov
sbb
add
push
icebp
scas
add
cmp
jl
jle
aaa
out
sbb
or
push
lea
push
add
jo
jl
sbb
fcomp
jecxz
mov
pop
cmp
lods
mov
popa
push
loopne
jecxz
push
xchg
pop
mov
popa
aam
push
aam
das
in
jb
mov
add
and
sbb
ret
lret
xchg
out
add
fcoml
adc
add
jle
pop
mov
clc
fildl
xchg
push
or
in
sub
fdivr
ret
dec
dec
loope
cmp
rorb
dec
fmuls
xor
xchg
mov
int3
cmp
jne
push
sub
xor
sub
js
xchg
xor
mov
push
add
iret
je
lea
push
loopne
add
sub
es
push
lret
jo
out
enter
add
sbb
cmp
pushl
call
push
cltd
dec
mov
sub
or
es
les
rolb
push
les
testb
lock
lock
lahf
les
scas
dec
je
dec
push
push
test
aaa
dec
icebp
in
jge
fisubrs
inc
dec
sub
or
in
dec
jmp
sub
out
sub
in
insl
sti
int
cmp
push
mov
add
mov
inc
adc
cltd
test
pop
and
lods
and
adc
in
adc
mov
cmpsb
adc
mov
sub
in
and
add
clc
daa
orb
clc
fldenv
shlb
add
xchg
dec
pop
mov
pop
xchg
lock
shll
push
dec
dec
mov
cmp
or
iret
js
hlt
and
xchg
push
scas
mov
jg
cmpsb
push
fimull
leave
and
push
push
ss
scas
out
cmp
adcb
ret
push
repnz
mov
test
push
and
mov
jge
pop
xchg
add
or
add
imul
sti
scas
and
push
cmp
mov
jmp
pushl
and
adc
in
push
stos
test
loop
sbb
test
xchg
jo
pop
mov
and
mov
pop
push
sbb
mov
mov
push
mov
adc
jns
outsb
jle
cmpl
jne
pushl
nop
push
mov
jmp
subl
push
xorl
fs
popa
adc
mov
scas
or
adc
mov
dec
jno
adc
or
add
pusha
add
iret
sub
cmp
je
imul
mov
ret
ret
push
sahf
repz
popa
in
add
stos
stc
mov
pop
inc
lret
jo
add
ja
popa
sbbl
sbb
imul
xor
sbb
push
jne
movb
add
cmp
jne
popf
adc
mov
fldz
xor
push
push
loop
jo
movb
jle
addr16
dec
aas
mov
xor
xchg
outsb
jmp
test
xor
outsl
mov
or
jg
add
emms
mov
or
lcall
sub
mov
sbb
cmpsl
or
push
sbb
mov
or
jge
ror
push
adc
mov
mov
push
sub
push
adc
enter
dec
adc
add
push
xchg
call
lods
xchg
out
pop
lahf
test
add
sti
test
add
ja
or
daa
push
insb
or
pop
cmp
and
dec
inc
mov
sbb
dec
inc
shll
push
push
lea
add
sub
test
mov
cmpsb
adc
hlt
xor
sbb
sbb
sbb
ret
push
push
lret
jl
repz
shr
xchg
andb
jbe
nop
jp
enter
dec
and
pop
adc
and
jge
mov
xor
clc
xor
int
test
adc
cmp
movsl
cwtl
imul
pusha
fsub
and
sbb
xchg
les
push
sbb
or
movsb
push
add
rcll
mov
movsl
and
fdivl
adc
adc
cli
les
sub
fsubrp
out
andl
insb
insl
repnz
jno
sbb
lcall
popa
in
es
mov
push
push
mov
push
xlat
sbb
int3
fnstenv
xor
mov
je
or
sbbb
add
jb
out
dec
or
sbb
test
test
mov
leave
rol
cmp
cld
pcmpgtb
rcll
lea
cld
loope
push
jle
add
call
pop
cmp
ss
pop
push
sbb
jmp
inc
loopne
cs
sub
push
push
mov
add
jmp
adc
sbb
and
ljmp
jmp
or
js
push
orl
xor
or
jge
mov
dec
mov
insb
push
push
mov
mov
call
jmp
repz
push
sbb
sub
push
push
push
rclb
and
adc
sbb
pop
add
mulb
out
push
inc
insl
lea
imul
pop
mov
mov
mov
push
pop
add
jmp
pop
jl
mov
cltd
flds
inc
and
lea
mov
sti
clc
sar
orl
inc
mov
mov
out
pop
cmp
mov
cmp
jge
adc
aad
fistps
idiv
push
mov
push
push
mov
and
lea
xor
idiv
mul
mov
imull
in
fstpt
adc
adc
inc
hlt
mov
aaa
sbbb
push
lret
ljmp
sarb
aas
xor
dec
xor
repz
adcl
adc
lock
stos
movsl
inc
iret
in
or
out
mov
fstpl
push
pop
jge
add
clc
mov
sub
clc
je
mov
sbb
mov
push
outsb
jp
xor
movsl
mov
pusha
js
out
pop
ja
out
sbb
dec
fs
or
xchg
lahf
lock
mov
test
jle
cmp
push
fwait
insl
lahf
xor
jge
sahf
cli
pushf
movb
sbb
dec
lea
lahf
cmp
or
jl
xchg
pop
shr
jg
sub
cmp
or
or
out
sbb
pushf
into
test
xchg
fildl
mov
sti
ljmp
faddl
or
mov
fdivrp
mov
sub
mov
cld
movsl
int3
mov
mov
inc
sarl
xchg
pop
jl
jmp
into
or
subl
xor
mov
movsb
cmpb
or
clc
fidivl
jmp
push
rolb
xchg
cli
stos
fisttps
pop
mov
pop
jne
pop
pop
rcrl
clc
ffree
xchg
mov
push
repnz
mov
lock
roll
in
fidivrl
clc
mov
adc
or
aam
loopne
jbe
lea
or
lods
pop
cmpsl
je
addr16
push
cmp
out
or
je
xchg
je
mov
or
xchg
mov
stos
cmpsl
add
sbb
test
dec
lods
pop
jo
out
push
pop
pop
into
pop
leave
lock
add
cmpsl
lock
cmp
jnp
mov
aam
data16
imul
in
add
inc
stos
inc
frstor
repnz
xor
fdivs
fcompl
sbb
loope
pop
iret
shll
imul
jns
xor
jnp
and
cmp
jo
jne
sti
mov
push
add
inc
popf
movsb
xchg
adc
fldenv
leave
pusha
pop
leave
pop
xor
add
push
jge
int
scas
xchg
ljmp
or
sbb
inc
inc
dec
rorb
mov
and
test
in
lea
and
outsl
jne
shrl
fnstsw
dec
or
dec
or
add
cmp
and
loop
mov
inc
fcmovbe
iret
js
and
andl
shlb
adc
lahf
push
add
cmpsb
jle
add
imul
pop
sub
icebp
sub
insl
xchg
xchg
mov
or
xor
xchg
dec
scas
jb
xor
sbb
sbb
ljmp
push
sub
cmpsl
adc
fs
pop
jnp
jmp
pop
int3
out
pop
inc
sbb
popf
dec
sbb
rol
pop
sbb
pop
je
mov
pop
or
xor
and
loopne
push
jl
and
daa
pop
adc
and
repnz
into
dec
stc
mov
mov
xchg
shll
cmp
gs
xor
loopne
add
icebp
inc
inc
push
add
push
add
inc
jae
clc
push
sub
clc
setb
test
mov
mov
sub
cmp
pusha
je
xor
cs
clc
fisttps
andl
push
lea
push
lods
aaa
addb
das
xor
mov
je
push
fstps
pop
inc
sbbb
pop
sub
outsb
dec
add
mov
xchg
inc
dec
and
mov
or
mov
hlt
xchg
in
or
add
in
fidivs
mov
lret
shrl
adc
xlat
das
push
jp
push
inc
scas
push
pop
outsl
es
xchg
pop
add
and
add
adc
arpl
mov
mov
sbb
mov
mov
mov
out
dec
sub
iret
popa
sub
pusha
sbb
add
cld
imul
push
push
add
pusha
rcl
mov
in
aas
jmp
test
push
xor
pop
sti
sub
inc
inc
and
sbb
pavgw
in
pop
js
and
cmp
ficomps
not
or
inc
rcr
push
pop
jle
popl
jb
mov
and
das
sbb
mov
inc
xor
adc
jb
adc
xchg
inc
les
out
push
add
jmp
sub
pop
mov
test
inc
add
add
inc
sub
jno
sbb
and
mov
insl
je
incb
sbbb
cmpsb
xchg
call
xor
in
adc
ljmp
sub
adc
cwtl
loope
pop
clc
mov
push
in
enter
push
pop
fmuls
add
sbb
es
in
js
fmuls
or
cmp
aam
lods
inc
jb
cmpsb
aaa
pushl
dec
movsb
int3
add
mov
add
fiaddl
dec
js
mov
fucomi
mov
push
les
push
movsb
xor
stos
test
add
sub
dec
mov
or
cli
mov
in
fdivrl
pop
mov
stc
adc
movsl
lods
imul
test
cmp
xchg
pusha
das
call
push
add
sub
ss
or
and
ds
dec
cmp
mov
cmp
push
xchg
sub
push
outsb
mov
xor
push
in
dec
adc
loopne
fcomps
cmpsl
pop
push
sbb
inc
add
adc
mov
mov
in
push
xchg
push
jae
testl
sbb
sbb
jge
xchg
cmp
enter
or
ds
outsb
call
bound
test
and
push
xchg
pop
pushl
push
lret
sub
xor
jmp
in
ja
andl
dec
cmp
mov
sbb
xor
jecxz
and
test
je
mov
sbb
scas
cmp
push
dec
mov
jmp
dec
mov
sub
out
mov
mov
fs
jge
cmpsb
dec
dec
add
xchg
inc
pusha
inc
xor
jmp
cmpsl
xchg
sub
insb
push
js
mov
sub
leave
cmp
js
cmp
jge
mov
mov
mov
cmp
sbbb
dec
add
jle
call
cmpsl
push
shll
mov
jns
js
fsubr
sbb
inc
inc
lcall
ljmp
dec
xchg
int
inc
cs
sbb
aam
xor
sbb
push
xor
mov
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
les
insb
sbbb
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
test
imul
pop
lea
sub
pop
push
or
aaa
hlt
js
pop
int
stos
es
pop
pop
dec
cmp
dec
lock
fldl
add
xor
popf
sbb
call
loopne
insl
pop
or
stos
andb
inc
pop
jl
mov
mov
jge
push
in
ficoms
sub
push
iret
ss
outsb
xor
mov
movsl
xchg
sub
cmp
loopne
popf
daa
push
xchg
push
or
rolb
fwait
jle
sti
push
add
gs
jmp
mov
jae
inc
push
mov
ja
mov
jne
mov
adc
push
pop
pop
loop
sbb
adc
clc
mov
xchg
pop
xor
pop
in
adc
and
push
mov
loope
sbb
imul
repz
in
out
cmp
call
mov
and
and
xor
or
push
jns
pop
pusha
fmuls
scas
push
mov
inc
mov
and
and
add
lock
lea
sbb
je
dec
xchg
jle
jge
test
js
adc
or
insb
inc
xor
dec
lds
or
mov
jb
jno
in
aad
bound
jecxz
or
ss
adc
scas
roll
xchg
mov
lea
or
and
clc
rorb
aam
xchg
lret
xchg
mov
push
hlt
add
sbb
inc
call
jmp
xor
lea
mov
lea
add
add
sub
sub
lock
inc
or
addb
jmp
dec
jl
in
jmp
das
hlt
mov
mov
jge
out
or
jbe
into
push
push
add
shlb
daa
sbb
or
ja
addr16
jp
add
setle
adc
sub
sub
pop
sbb
pop
imul
std
sbb
testl
test
js
adc
cmp
sub
jg
mov
cwtl
das
or
push
add
jb
popf
faddl
inc
push
mov
cwtl
sub
mov
jo
aaa
xchg
sbb
fsubs
jno
add
cs
lea
or
dec
add
cwtl
or
mov
pop
sub
push
adc
push
xor
xor
das
xor
and
jbe
ret
lds
mov
in
mov
rorb
pop
movsb
or
je
lea
add
cld
push
push
mov
xchg
vunpckhps
cmp
in
inc
in
pop
pop
push
mov
add
lret
int
adc
add
out
and
mov
sbb
cwtl
inc
sbb
pop
ss
push
push
fisttps
in
nop
or
aam
jle
loopne
cmp
pop
addr16
hlt
jb
or
in
jl
push
mov
adc
adc
sbb
push
add
xor
mov
add
push
mul
or
cld
xchg
add
in
mov
add
cld
xchg
pop
lds
cli
outsb
adc
mov
xchg
push
leave
ret
xchg
push
pop
and
cmp
sub
jle
xor
andl
ret
mov
xchg
pop
and
lods
jo
test
iret
mov
and
addr16
movl
mov
inc
stc
xchg
dec
sub
adc
pop
dec
xchg
sub
mov
hlt
push
xchg
arpl
dec
xor
sbb
inc
push
cmp
pop
ds
mov
inc
pop
ficoml
sbbl
and
sbb
jge
outsl
xchg
sbb
or
cli
mov
jp
cmp
mov
popa
xchg
inc
loopne
add
xchg
movsl
fnstenv
xchg
rolb
sbb
pop
inc
xor
int3
jmp
mov
jecxz
add
outsl
jbe
and
push
andb
dec
iret
mov
add
add
cmp
test
lock
mov
mov
ss
aad
push
add
ds
add
test
add
dec
aam
rolb
iret
sub
xchg
mov
mov
mov
push
and
push
jno
pushf
and
setae
adc
xor
or
mov
xor
js
in
or
jg
mov
xor
stos
adc
push
adc
and
xlat
push
jnp
mov
mov
test
adc
mov
xchg
je
rclb
add
cmp
jecxz
adc
mov
xor
add
push
xchg
cmp
add
out
xchg
jne
nop
in
mov
imul
sbb
sub
sbb
popa
movl
and
jb
pop
outsb
cwtl
data16
bndldx
pop
mov
push
popf
push
jp
lea
insl
stc
xchg
mov
add
nop
gs
lret
add
ss
lods
cmp
push
fadds
lea
sbb
jnp
aaa
imulb
shlb
fldenv
fdivs
orl
fstps
pop
aam
rclb
call
add
adc
inc
or
lcall
add
sbb
sub
jl
in
ret
int3
push
movsb
in
dec
popf
xadd
inc
js
pop
fadd
test
out
xor
test
add
cmp
test
mov
sub
sub
dec
fwait
add
xchg
cmp
shlb
nop
ja
fsub
lea
xor
cltd
and
pushf
push
mov
rorb
setne
addb
mov
test
aam
xor
xor
aad
sbb
lock
addb
stc
mov
out
lea
push
pop
or
xchg
add
adc
nop
inc
or
xchg
push
ret
xor
mov
push
pusha
enter
or
movsb
jge
adc
out
or
addb
push
dec
or
mov
and
sbb
jb
mov
add
and
fldl
and
daa
cmp
aam
or
cmp
outsb
cmpb
sub
je
fmuls
push
inc
mov
repnz
lods
dec
xchg
mov
sti
sub
cmp
mov
jnp
movsb
fwait
sbb
dec
xor
mov
lock
lea
sub
mov
push
push
loop
jne
rcll
pusha
dec
xchg
loopne
ja
lcall
ret
push
sti
sti
inc
into
inc
cmp
add
xchg
out
jecxz
call
lock
push
hlt
movl
roll
mov
sub
mov
iret
insl
push
jg
add
popa
repz
subb
mov
lea
outsl
adc
cmp
hlt
ret
int
imul
stc
sbb
inc
inc
movsb
add
adc
lret
dec
dec
adcl
cs
push
sti
nop
xor
nop
and
push
inc
mov
adc
xchg
xchg
xchg
nop
fiadds
pop
dec
push
fs
fs
sub
xchg
pop
pop
incl
and
add
push
cmp
gs
aad
leave
and
push
dec
pop
jmp
push
js
int3
dec
shrb
push
add
adc
mov
mov
mov
inc
pop
test
lret
sub
cli
cmp
mov
loope
sbb
icebp
push
rorb
mov
push
mov
pop
pop
mov
test
in
mov
or
shrl
cmp
cwtl
hlt
outsb
and
xor
sarl
sbb
cs
roll
push
mov
rorl
or
mov
mov
testb
push
mov
jne
jns
out
iret
ja
cwtl
add
test
scas
mov
clc
rcll
arpl
pop
lcallw
lods
mov
fs
lock
jo
add
mov
ret
cmpb
inc
mov
pushf
mov
cmp
in
add
ret
push
adcb
in
pop
addb
adc
xchg
lock
scas
in
loopne
ret
jne
and
push
push
sbb
add
push
lret
pushfw
mov
push
add
lea
lea
or
mov
add
enter
into
pusha
sbbb
in
incb
add
and
mov
cmp
fistl
clc
xor
nop
mov
mov
sub
pop
inc
cmp
fistpl
sub
cli
insl
sub
insb
or
sbb
push
hlt
roll
ret
push
and
icebp
adc
push
loop
push
and
icebp
dec
out
shlb
rcrb
or
or
decb
test
inc
inc
adc
loopne
or
mov
rorl
inc
out
cmp
ss
cmp
iret
aam
add
xor
add
jmp
ss
sub
inc
sbb
pusha
pop
in
movsb
notl
mov
ja
cmp
aas
or
or
mov
cmpsl
sub
lret
test
xchg
pop
mov
mov
or
mov
movsb
fadds
xchg
fcmovnu
scas
movsb
push
rolb
adc
and
ja
lret
xchg
push
loopne
cmc
movq
dec
sbb
and
push
out
es
xchg
push
xchg
pop
fidivs
sbb
rcr
rcr
push
std
jno
jns
loop
inc
pop
aaa
mov
xchg
ja
js
add
xchg
pushf
popl
dec
lret
xor
inc
cmp
dec
or
jo
or
mov
push
mov
or
xchg
xchg
push
jge
jae
loopne
in
add
loopne
hlt
and
and
jne
or
add
mov
mov
adc
mov
bound
das
push
mov
mov
lods
cmp
pop
loop
mov
and
push
fs
sbb
add
sbb
add
orl
jecxz
push
jmp
in
pop
mov
insb
fxch
push
or
adc
xchg
push
xchg
and
add
add
pop
loope
or
pop
dec
lds
mov
jge
andb
and
dec
icebp
sbb
popa
divl
dec
mull
mov
dec
xchg
out
icebp
loopne
inc
insl
je
int3
and
cmpsl
dec
pop
pop
dec
pop
out
ret
push
inc
pop
imul
nop
out
xchg
adc
mov
jbe
test
mov
xor
or
pop
xchg
mov
rcrl
push
adc
sbb
stc
mov
in
outsl
jno
add
push
cmc
lds
mov
call
push
push
pop
cmp
je
es
mov
xor
xlat
jno
add
or
push
and
rcll
xor
sbb
or
pop
add
test
pop
and
add
sbb
cmp
jge
fisttpll
and
orl
mov
sub
mov
rolb
bts
sub
add
and
stos
sub
fsubrl
pop
imul
jnp
push
fidivl
push
mov
mov
jp
jg
loopne
and
pop
jnp
push
cs
or
aam
mov
cltd
fwait
adc
les
jbe
or
and
sbb
jo
nop
les
and
mov
insl
into
int3
xor
fstps
sbb
push
jmp
cmp
cmc
push
xor
cs
jge
sub
pop
inc
repnz
repnz
fdivr
shlb
xchg
repnz
inc
lods
sbb
fdivr
rclb
mov
loope
sub
das
cmp
stos
into
mov
mov
pop
jmp
loopne
xchg
pop
imul
es
push
pop
loope
out
ljmp
mov
daa
loopne
sub
pop
das
mov
mov
mov
mov
and
add
leave
mov
push
ret
dec
sub
repz
enter
mov
scas
adc
push
sti
mov
push
inc
and
or
sub
sbbl
repz
cmp
cs
rorb
push
outsb
mov
xor
out
out
or
shrb
lock
nop
loopne
pop
jne
les
ss
or
adc
dec
xchg
push
or
jb
push
out
xchg
js
ss
mov
enter
or
xchg
sbbb
mov
or
add
movl
jbe
mov
dec
xorl
lret
or
and
gs
fsubl
mov
rclb
stos
cmpl
lret
mov
add
scas
int3
ret
push
push
pusha
pop
xor
out
insb
xchg
jl
pop
movsl
in
xchg
int3
push
xchg
daa
add
ja
cmc
xchg
aas
adc
and
xchg
lret
mov
adc
mov
adc
icebp
mov
fildl
push
call
inc
enter
je
jae
daa
or
cmp
test
xor
push
or
dec
cmp
add
push
add
cmp
add
or
push
mov
jle
shrd
cmp
pop
mov
push
daa
lock
mov
mov
lahf
rorb
add
cs
ds
bound
push
pop
mov
sub
insb
mov
ret
xchg
dec
hlt
sub
push
arpl
pushf
iret
inc
call
pusha
insl
push
mov
inc
pop
or
fadds
mov
outsl
pusha
add
leave
mov
add
mov
xchg
dec
stos
fadds
or
stos
outsl
cmp
iret
mov
cmovb
fnstenv
add
ret
inc
adc
add
pop
push
inc
inc
xchg
pusha
leave
xor
lock
jp
adc
mov
push
dec
clc
out
or
sub
cmp
or
cmpsb
push
push
ret
xor
int3
dec
inc
pop
jbe
roll
add
pop
cmc
aam
dec
cmp
or
dec
in
sbbb
js
dec
push
push
int3
push
inc
inc
ret
mov
cmp
cltd
xchg
ret
adc
enter
sahf
mov
movsb
out
push
dec
mov
mov
mov
inc
lock
sbb
negb
aad
xchg
in
push
scas
push
jbe
into
mov
ret
mov
jecxz
mov
inc
mov
add
or
sbb
das
lock
add
add
push
sbb
data16
push
je
cmpb
mov
ds
jnp
dec
loop
xor
xorps
add
pop
dec
loope
clc
je
cmp
cmc
sbb
clc
inc
pop
push
loopne
stc
sub
lea
push
lea
push
inc
push
test
fs
rdtsc
sbb
adc
cmp
fcmovnu
daa
fildll
mov
cmp
jl
cmp
dec
hlt
int3
xor
sarl
sbb
sub
push
jle
mov
iret
mov
lock
jne
or
push
mov
cmc
add
push
sbb
push
stos
mov
bnd
pusha
ja
out
ljmp
jne
and
sub
push
jno
xchg
ret
mov
imul
movl
adc
push
sar
or
cltd
sub
jg
mov
shrb
ret
sub
adc
lret
xchg
in
xor
mov
fldcw
fisttps
and
push
dec
or
in
out
xchg
andl
dec
push
xor
lcall
mov
push
fmuls
adc
mov
mov
jge
add
inc
sub
call
mov
lock
jo
mov
adc
or
test
stc
xor
orb
imul
push
add
out
lock
xchg
inc
add
add
or
or
test
mov
jl
scas
divl
mov
faddl
cmp
in
or
or
push
or
neg
xchg
rorl
dec
inc
dec
cmpl
push
lods
sub
hlt
dec
or
or
shlb
ljmp
fcoms
fwait
add
add
push
mov
pushf
aaa
nop
pop
ret
xor
add
mov
cmp
iret
rclb
adc
add
add
sbb
mov
loopne
in
icebp
sbb
lods
pop
sar
or
or
adc
inc
cmp
lcall
je
dec
add
sbb
add
or
mov
xor
leave
sbb
xor
add
loopne
xchg
rol
jno
imul
jl
jmp
lock
hlt
lock
jo
add
fcoml
or
jbe
jno
cmp
pop
push
insb
adc
push
adc
mov
ror
or
clc
test
cmp
je
sbb
add
loope
adc
ds
fiaddl
add
inc
bound
or
push
movsl
testb
adc
out
add
dec
mov
mov
aam
lods
jmp
faddp
jmp
jl
ret
lods
push
test
je
pusha
shr
hlt
cli
jmp
mov
pop
jno
cmp
sub
push
inc
cmp
jae
add
sub
inc
test
test
fadds
pop
ret
push
mov
sbb
jo
aam
mov
mov
inc
push
add
mov
cmp
dec
out
fildll
mov
sub
andl
adc
mov
push
pop
das
xor
mov
rorl
popa
add
pop
adc
push
mov
cmp
je
sub
pop
sbb
outsl
subb
repnz
sbb
mov
pop
sti
je
push
xchg
popa
pushf
mov
sahf
sbb
xor
push
jge
push
sub
mov
in
test
add
push
clc
enter
pop
in
out
sbb
jle
aam
lcall
fsts
les
imul
leave
rorl
nop
cmp
jp
dec
add
jp
mov
push
push
push
dec
out
loopne
add
mov
jbe
push
mov
neg
push
sbb
mov
testb
mov
cmc
cs
xchg
or
out
jne
push
ret
jbe
sub
sub
or
push
push
je
inc
jmp
sbb
jno
int
pop
jecxz
add
aaa
pop
ret
lahf
mov
pop
pop
notb
jbe
xchg
and
sub
lds
add
test
leave
aas
outsb
mov
nop
mov
repnz
adc
push
jmp
pop
in
bound
out
in
push
popf
or
xor
inc
repz
jnp
stc
push
or
dec
sub
and
jne
sbb
or
testl
arpl
arpl
push
sbb
je
in
inc
inc
or
lock
add
jnp
call
lods
pop
jp
dec
inc
add
mov
add
jecxz,pn
or
cld
xchg
mov
inc
pop
inc
adc
divb
cwtl
js
mov
cmp
sbb
pop
add
xor
inc
xchg
jmp
lods
and
push
imul
or
mov
dec
js
jl
xor
jp
or
jns
lcall
adc
push
add
jnp
sub
pop
jg
rorl
pop
fcompl
and
mov
push
or
xchg
cmp
push
mov
sub
in
nop
inc
push
insb
push
fs
lea
lahf
or
sub
dec
sbb
nop
jmp
dec
pop
inc
push
cmpsl
leave
ret
push
jl
mov
cmpsl
loopne
mov
pushf
dec
jbe
or
test
dec
bound
mov
rol
fldl
or
je
orl
fwait
dec
pop
mov
mov
rcll
lret
imul
lea
mov
mov
dec
mov
add
pop
cs
pop
cmpsl
movsb
into
loopne
inc
in
dec
add
add
repnz
popf
dec
sub
add
cmp
fiaddl
xor
mov
dec
adcl
insl
or
mov
es
mov
mov
adc
repz
push
data16
push
imul
sub
push
mov
or
imul
sbb
push
and
or
sub
add
shrb
and
mov
mov
aaa
out
inc
push
cmp
or
mov
xorb
push
mov
dec
mov
mov
or
iret
mov
push
ljmp
xchg
or
out
jae
loope
mov
repz
dec
jno
sbb
or
mov
and
mov
insb
xor
aam
ret
mov
fcmove
les
mov
shll
lea
loopne
dec
pushf
inc
imul
enter
push
or
scas
lret
pop
mov
loop
ljmp
cmpsl
or
fadds
mov
cmp
fidivrs
sahf
nop
mov
or
inc
add
or
add
jns
adc
int
sub
or
cmpsl
ss
xor
jmp
gs
push
testl
int3
mov
adc
mov
or
push
pop
add
lea
inc
xchg
jnp
push
mov
pop
sub
xchg
insl
mov
rcl
mov
adcb
loop
mov
rolb
enter
dec
and
inc
or
push
or
fnsave
sub
pop
and
mov
inc
and
add
mov
push
or
mov
aas
mov
pop
xchg
cmp
pop
sbb
and
lock
mov
fsubrs
xor
fimull
nop
sbb
int
push
out
sbb
mov
dec
mov
ljmp
dec
rcr
sti
faddp
sbb
sbb
inc
cmpb
or
cmp
pusha
or
xadd
push
bound
lcall
xchg
arpl
je
pop
aad
mov
sub
and
adc
jns
cmp
push
mov
daa
std
lods
mov
and
inc
add
and
pusha
sbb
adc
push
xor
cmp
sub
inc
jle
jmp
or
jg
mov
sbbb
movsb
and
das
lcall
je
and
or
adc
in
adc
add
js
test
dec
clc
adc
ret
add
sub
jae
sbb
mov
popa
sbb
lock
call
ret
ljmp
call
mov
xchg
dec
add
xchg
cmc
imul
lods
or
scas
daa
ds
ja
push
push
push
pop
adc
add
push
in
push
pop
adc
test
sarb
dec
sbb
mov
add
pusha
lock
jecxz
in
mov
cwtl
adc
dec
sar
js
jge
adcl
in
mov
or
hlt
hlt
push
jb
and
dec
pop
push
xlat
test
mov
jne
xchg
or
lea
es
dec
hlt
add
push
imul
push
push
mov
shll
ss
sub
popf
push
xchg
or
push
adc
lcall
jmp
daa
lea
test
xlat
lds
inc
xchg
test
jle
push
mov
lea
xchg
add
imul
testl
jo
inc
insb
pop
sub
sub
jecxz
mov
loope
jmp
movb
jle
ss
add
inc
pop
jg
sub
ret
stos
inc
push
push
push
fs
imul
lock
mov
add
jo
imul
sbb
dec
popa
and
dec
mov
dec
in
sbb
push
add
xor
or
testl
or
push
adc
fadds
fsts
out
jne
xlat
push
dec
and
jo
in
mov
ret
mov
cmpsb
cmp
ljmp
test
pusha
inc
mov
jae
lds
cmp
out
ss
daa
push
into
stos
push
lea
inc
je
ss
stos
add
cmp
inc
mov
xchg
dec
fdivl
add
push
dec
mov
mov
loop
or
pop
lock
sbb
pop
popa
repnz
lds
dec
fldl
mov
xchg
popf
inc
adc
pop
mov
jge
test
ret
ss
sub
sub
xchg
scas
sbb
mov
xchg
gs
add
dec
nop
cmp
mov
xlat
test
dec
and
in
inc
cmp
popf
add
add
dec
outsb
imul
rcll
pop
negl
pop
push
dec
pop
xchg
mov
adc
push
adc
cmp
movsb
push
adcb
xchg
add
xor
stc
fiadds
lret
inc
popa
dec
mov
or
into
dec
mov
nop
dec
xor
insl
fs
mov
cmp
xchg
mov
test
mov
ja
cmpl
mov
xchg
push
adc
dec
adc
mov
sbb
insl
lcall
xor
or
add
push
dec
imul
and
dec
mov
cmpb
std
push
sahf
adc
pop
xor
imul
call
shlb
xor
bound
je
lods
lock
loop
xor
les
push
inc
pop
cmp
and
mov
jne
clc
jmp
add
cmp
mov
add
push
adc
or
mov
fimull
xor
aad
xchg
test
aad
cld
and
jne
cmp
int3
push
dec
or
sbb
es
icebp
add
dec
loopne
or
mov
andl
push
mov
movsl
lds
cmpsl
aam
test
adcl
loope
ret
push
push
fsubrs
xchg
add
add
les
dec
fdivs
test
sub
jmp
fsubr
shlb
xor
sub
pusha
xchg
fidivs
mov
adc
pop
std
push
or
stc
cmc
sub
lock
aas
cld
cmpsb
xchg
int3
out
add
test
pop
mov
jmp
fcoml
aas
mov
sti
nop
cmpsb
cmp
dec
rclb
dec
cmp
and
insb
push
push
push
cmc
inc
sahf
dec
pop
xchg
sbb
cmp
sub
fld
inc
xor
cwtl
mov
scas
adc
push
das
dec
jb
pusha
or
je
mov
add
xor
mov
in
insl
mov
movsl
jge
aam
pop
inc
sub
push
pushl
lea
iret
int
pusha
sub
xchg
fwait
out
sub
inc
adc
xchg
addl
pop
dec
sbb
loope
jmp
push
stos
and
nop
or
or
xor
mov
or
cmpsl
adc
and
sbb
pop
adc
adc
fists
xor
or
and
orl
mov
mov
or
ret
scas
lcall
test
imul
sbb
fmull
jecxz
push
inc
dec
cmp
mov
sub
lods
out
movsb
xchg
add
pop
and
stos
les
mov
jmp
sbb
fistps
jo
sub
pop
xchg
pop
sbb
push
in
jp
cmp
addb
and
push
jmp
sub
shl
jbe
pusha
sub
sub
ret
mov
pop
loopne
mov
mov
add
ret
sbb
or
orl
repnz
add
push
out
or
leave
jmp
lret
adc
faddl
imul
fists
aaa
xchg
jecxz
fildll
decl
add
pop
cwtl
lea
mov
and
push
inc
bound
sub
out
or
push
mov
aad
adc
add
repnz
stc
or
mov
fisttps
pop
icebp
mov
adc
sbb
andl
push
xor
mov
xchg
dec
or
jl
pop
cmp
sbb
jo
shll
push
or
sbb
and
call
lods
subb
fmuls
scas
mov
scas
mov
add
incb
jle
adc
mov
fnsave
scas
jbe
into
mov
mov
cmp
lods
call
pop
or
daa
push
add
test
mov
adc
fwait
cmp
inc
xor
add
aaa
mov
cs
sbbb
and
jno
popa
mov
clc
dec
insl
fdivr
roll
ret
mov
mul
aam
lds
mov
cmpsl
in
xchg
scas
inc
cmp
add
dec
sti
sarb
mov
sti
pushf
mov
pop
cmp
dec
xlat
scas
sub
popf
jb
adc
ja
jmp
xor
mov
jae
movl
stc
cmpsb
inc
inc
adc
push
sub
lods
sbb
xchg
aad
into
mov
fadd
movsl
adc
andl
mov
imul
and
add
bound
ret
sarl
fiadds
hlt
add
aad
imull
and
mov
or
and
adc
fcmovnbe
arpl
dec
jmp
jecxz
inc
incl
push
je
dec
jne
pusha
scas
or
sbb
stos
xor
adc
adcb
jmp
push
xchg
cld
pop
sbb
subl
jbe
mov
inc
aam
popa
fwait
loop
js
or
je
loope
lea
mov
dec
movsl
mov
sub
mov
xchg
in
pop
ret
sti
test
xchg
and
or
inc
rcr
push
mov
xchg
daa
xor
xchg
cwtl
sbb
test
lea
cli
jb
adc
or
mov
into
dec
outsb
adc
cmp
sub
lea
in
xchg
jno
out
das
cmp
xchg
mov
lods
je
mov
lods
lahf
add
dec
push
pop
and
mov
js
push
cmp
mov
xchg
imul
ret
inc
test
repnz
movsb
push
bound
push
mov
enter
int3
repz
xor
lock
pop
jo
frstor
cmp
testb
sub
push
pusha
xor
testl
dec
adc
stos
lea
mov
jge
and
test
sub
test
mov
mov
outsb
lock
int3
add
int3
or
call
jecxz
sub
xchg
dec
lea
push
aaa
cmp
add
lret
orb
sarl
push
jno
or
sbb
and
cmp
je
mov
add
into
cld
lods
mov
xchg
shr
and
push
je
aaa
ja
jo
jns
rcl
andl
call
cmpsb
add
mov
pop
cwtl
loope
jbe
jmp
adcb
xchg
pop
sbb
dec
or
frstor
add
lea
inc
aaa
insb
je
xor
add
es
ss
inc
push
loopne
incb
inc
cmpb
xor
iret
and
or
push
xor
pop
push
pusha
push
push
les
jge
ficompl
fbld
push
push
adc
cmp
inc
add
push
mov
inc
cmp
adc
adc
jecxz
shl
lock
cmpsl
lret
shll
sbb
xchg
xchg
cmp
jbe
les
pop
sub
fmull
push
sub
jg
data16
sbb
jbe
add
imul
adc
faddl
push
bound
dec
imul
add
sub
cmp
pop
movsb
inc
push
mov
rcrb
dec
pop
rcrl
dec
add
and
mov
pop
ja
into
mov
jbe
shl
mull
inc
inc
js
inc
dec
adc
dec
sbb
sbb
and
jge
je
test
divb
cmp
cmp
jl
sub
and
inc
pop
int
int
dec
sbb
dec
add
andl
sub
ja
xor
loop
popf
pop
mov
rorb
pop
rorl
test
pop
divl
enter
insb
mov
mov
loope
inc
in
mov
lea
lods
dec
das
mov
mov
mov
daa
mov
or
sub
fs
rclb
xor
adc
mov
jne
push
or
mov
dec
add
add
insb
loope
out
popf
xchg
add
xor
sbb
lahf
fimull
mov
xchg
cmpb
sbb
shll
mov
fcomps
es
leave
loope
lcall
sbb
xchg
and
push
sub
xor
sub
push
bound
or
popa
mov
cli
pop
push
adc
enter
or
xchg
add
mov
cmp
outsl
shrl
or
mov
lods
mov
cli
and
jle
push
cmpl
clc
or
movsb
and
lret
sub
imul
fistpll
rolb
mov
in
subl
xchg
push
add
mov
das
add
addl
add
or
add
jmp
add
faddl
das
jl
sub
les
mov
inc
movsb
pop
xor
popf
pushf
in
js
and
push
mov
loopne
cmpsb
mov
mov
subl
pop
xchg
int
movb
push
inc
pop
adc
mov
mov
sbb
push
mov
inc
dec
sub
fcoml
mov
jbe
cmp
mov
dec
aam
dec
pop
ljmp
inc
or
cwtl
sbb
sbb
push
push
test
cmp
add
cmp
lea
pop
out
add
sub
lea
std
data16
sbb
mov
jae
test
lock
sub
xor
xor
push
ja
clc
mov
xlat
and
xor
sub
mov
dec
and
xchg
cmp
cmp
bound
sbb
or
ret
stc
push
adc
cltd
pop
std
or
lods
test
in
pop
adc
mov
mov
xor
pop
pop
cmp
ja
popf
or
pop
andb
ds
inc
xlat
inc
clc
push
jg
testb
jnp
inc
sub
test
push
lods
xchg
fstl
push
cmp
fs
inc
lods
aas
es
fisubrl
cli
insb
cmp
and
and
add
add
addb
pop
push
jle
ljmp
add
fstps
popl
mov
dec
xchg
cmp
jmp
push
sar
add
in
push
dec
and
sbb
cmp
and
jl
sbb
aaa
cmp
sbb
and
stc
lds
sbb
add
mov
fsts
mov
mov
jecxz
push
cmp
mov
add
sbb
adc
push
pop
ja
add
sbb
je
and
push
xchg
adc
cmpl
inc
adcl
insb
movb
orl
adc
pop
or
mov
mov
add
fisubs
push
push
ss
sub
fwait
ja
movsl
loopne
in
or
sub
adc
fwait
or
xor
dec
pop
cmp
ret
and
aas
pop
cmp
dec
movl
fmul
inc
pop
mov
xchg
inc
push
jp
adc
sub
sbb
out
push
or
andl
xchg
push
dec
sbb
push
imul
rcll
and
and
and
adcb
pop
or
xor
xlat
pushw
rorb
add
cld
pusha
mov
icebp
push
int3
js
rorb
pop
sub
xor
jno
mov
push
or
and
mov
pop
pusha
xchg
cmp
fdivrs
out
xchg
xchg
push
cmp
and
lea
jge
mov
subl
js
or
adcl
nop
out
das
and
xor
test
mov
nop
or
je
mov
cmp
push
cmp
xor
and
lods
add
rorl
sbbl
dec
adc
sbb
push
sub
pushf
movsb
jecxz
sbb
ss
and
inc
in
cmpl
mov
mov
cmc
mov
nop
lret
push
stos
adc
out
je
cwtl
xor
mov
dec
xchg
sub
repnz
or
pop
fisubs
inc
pusha
sbb
pop
pop
sbb
mov
push
mov
push
rolb
xor
mov
pusha
inc
inc
divl
or
je
xchg
je
adc
outsl
mov
mov
and
push
aam
adcl
pop
and
pop
roll
mov
sub
sbb
dec
lcall
or
xor
orl
movsl
sub
ja
lret
push
adc
jge
out
lea
xor
sbb
imull
push
es
dec
and
inc
xor
dec
push
dec
jae
cmp
jmp
sbb
push
ret
cmc
hlt
sub
jbe
or
xorl
lea
sti
dec
push
dec
shll
mov
and
push
rcr
jb
or
adc
loope
add
push
mov
shll
pop
mov
mov
test
mov
ljmp
xchg
cmpl
xor
rclb
fcmovnbe
lea
xchg
push
or
lds
dec
js
push
push
adc
divl
adc
xor
inc
call
xchg
cltd
mov
lcall
jnp
sub
rcrl
fwait
jp
lods
aaa
inc
iret
xor
cmp
push
dec
stos
jae
jbe
mov
lahf
rorb
push
mov
inc
je
and
ficomps
push
jle
outsl
lea
add
pop
pushf
aad
mov
and
push
or
adc
sbb
rclb
lods
iret
add
out
pop
lret
aaa
aam
das
addl
sbb
jb
pop
sub
pop
movsb
push
and
sbb
in
fadds
pop
and
lock
shr
cmp
repz
add
xor
stos
insb
in
divb
mov
je
aad
dec
roll
dec
adc
por
pop
shll
rcll
notl
add
shrl
jge
jbe
pop
cs
cmpsb
and
popa
ss
adc
mov
jae
mov
xorps
dec
insl
mov
icebp
jno
and
push
xor
imul
sub
cmpl
cmp
fsubp
push
cmp
pop
test
push
sbb
js
push
dec
push
sbb
push
je
repz
sarb
cmpsl
jle
fcomps
in
in
sub
cmp
popa
fildl
lea
push
inc
dec
test
pop
in
push
mov
int
or
and
inc
repnz
call
leave
pop
and
xchg
or
add
or
and
xchg
lret
or
push
iret
sub
xchg
dec
and
fadds
ret
enter
cmp
xor
ficoms
pop
push
jo
pop
popf
push
xchg
daa
and
and
jns
jno
sub
pusha
push
xor
pop
and
and
mov
sub
and
sub
inc
scas
fcoms
cmp
sub
jb
pushf
sub
out
cmp
mov
cmp
add
out
insl
fwait
and
stos
mov
lcall
nop
xchg
out
inc
imul
inc
xor
inc
xor
es
jae
and
push
push
enter
push
mov
and
mov
dec
mov
push
xor
outsl
dec
inc
inc
dec
ja
push
push
and
xchg
xor
pop
or
or
inc
or
cmp
add
jns
push
dec
dec
fwait
nop
adc
and
test
rcrb
add
mov
push
adc
scas
out
mov
xchg
sub
insb
sbb
testl
inc
in
inc
jo
mov
sbb
fs
stos
in
fsubs
movsb
xchg
add
adc
cmp
jl
jl
fstps
inc
fsubr
mov
repz
sahf
and
or
and
jg
sbb
int3
rcrb
sbb
cmp
icebp
or
fs
push
test
mov
mov
nop
in
lahf
dec
shl
insl
or
sbb
and
inc
ret
sub
push
add
push
sbb
into
faddl
mov
ficoml
scas
mov
out
adc
xor
xor
jne
ret
inc
cmp
push
mov
inc
leave
int3
fimull
aaa
lock
out
mov
cmpl
imul
sub
stos
mov
sbb
sub
ja
fsubrl
pop
push
xor
inc
test
push
dec
mov
out
push
data16
adc
pushl
sub
add
push
aam
xor
loope
sbb
icebp
nopl
mov
or
fstps
ds
das
adc
lock
mov
xchg
cmp
xor
fbstp
xchg
arpl
cmp
je
inc
xlat
push
dec
movsl
adc
hlt
pop
ret
in
fadds
cltd
dec
adc
jno
imul
push
pop
arpl
mov
aas
dec
or
mov
sbbb
push
loop
mov
add
ja
dec
test
je
push
add
cmp
cs
stc
xor
call
fdivl
dec
lods
jp
mov
les
adc
outsb
pop
aam
push
insl
aad
test
push
cs
fisubrl
mov
adc
dec
imul
push
push
or
push
cmp
add
sbb
fstl
jmp
call
sub
sbb
mov
fldl
cmp
and
inc
jp
mov
jecxz
push
pushl
and
icebp
inc
loopne
jmp
fmuls
push
adc
adc
and
cmp
outsb
mov
mov
dec
and
xor
mull
or
je
add
bound
aaa
lock
in
es
fisttpll
sub
sbb
dec
sub
adc
mov
wrmsr
cmpl
jne
push
loopne
shl
ja
ror
and
jge
mov
mov
cld
mov
jne
sbb
jnp
roll
add
aaa
add
dec
and
ret
xchg
cmp
insb
jecxz
es
push
andl
adc
cwtl
pop
movl
lcall
push
jmp
adc
mov
inc
and
sbb
pop
hlt
add
push
popa
mov
mov
adc
inc
or
daa
xchg
mov
movsl
es
adc
push
xchg
fs
or
or
lock
cmpsl
sub
inc
mov
jl
adc
loope
cmp
jle
int3
cs
scas
mov
xlat
sbb
adc
push
xor
sbb
scas
mov
into
mov
or
pop
in
in
les
in
mov
out
adc
mov
cmpsb
add
dec
pop
inc
fbstp
in
mov
dec
or
cmpl
cmp
inc
jmp
mov
add
arpl
xchg
bound
insb
aaa
xor
adc
ret
sub
mov
adc
and
jmp
sub
dec
ret
rcll
push
and
fld
inc
sbb
pop
mov
add
nop
sbb
push
add
movsb
inc
stos
mov
lock
std
out
inc
sahf
mov
cmp
xchg
mov
jno
and
mov
mov
jb
or
sbb
insb
mov
aam
xor
pop
xor
push
popf
dec
outsl
arpl
or
pop
std
xor
call
inc
xchg
add
ja
pop
push
mov
aad
xor
add
jge
loope
std
push
xor
adc
fstp
cmp
push
push
mov
test
push
push
inc
or
xor
in
mov
add
fs
inc
and
add
pop
loop
enter
jae
inc
add
outsb
mov
pop
shrb
and
loopne
ret
dec
loop
pop
cmp
sbb
add
aas
ficomps
or
jmp
loop
lcall
pusha
mov
jo
dec
call
cltd
add
aam
mov
out
pop
add
ret
stos
and
xor
xadd
dec
sub
dec
sub
push
cmc
repnz
add
adc
add
inc
push
pop
dec
sub
sbb
add
mov
push
pop
les
xor
mov
xor
add
adc
adc
add
cmp
and
scas
lret
adc
mov
xor
add
lock
fisttpll
xor
shrb
test
push
inc
push
insb
pop
negb
push
inc
fadds
jle
push
cmpsb
add
ret
add
daa
xchg
add
adc
ds
xchg
xchg
or
sbb
inc
push
pop
or
mov
xor
adc
in
insb
sti
xchg
xor
add
push
push
xor
and
mov
push
push
push
push
addb
inc
push
mov
sbb
faddl
add
data16
imul
rcrl
lea
test
sarb
orb
dec
dec
mov
loopne
dec
in
adc
or
mov
clc
adc
test
cmp
add
cmp
dec
dec
movsbl
rclb
mov
cmp
xor
mov
add
into
jne
sub
nop
cmp
mov
inc
push
sarb
xor
inc
movl
xor
mov
cli
into
fbld
js
les
jmp
mov
inc
xadd
pop
test
mov
add
mov
orl
mov
aam
pop
adc
jmp
lea
or
pop
dec
xor
test
xchg
xor
inc
leave
xor
ret
popf
sbb
rolb
adc
xchg
inc
in
push
adc
push
cwtl
mov
test
inc
adc
lret
test
inc
mov
or
insl
lsl
pusha
inc
pop
sbb
sbb
xchg
inc
negb
in
popf
mov
sti
inc
sbb
mov
mov
mov
nop
pop
adc
and
dec
xchg
pop
cmp
daa
sbb
jae
pop
mov
push
xor
les
sbb
push
daa
ror
test
sbb
lock
lock
je
sahf
incl
mov
pusha
mov
inc
lds
xchg
add
loope
xchg
cmp
dec
rorl
jno
inc
inc
inc
sbb
loope
adc
mov
or
or
adc
xorb
shrb
daa
das
push
sub
lcall
add
inc
add
movsl
xchg
mov
inc
ss
jecxz
jne
rcrb
lret
fsubs
call
adc
lods
mov
cmp
out
rorl
inc
cmp
fs
cli
ds
cmp
fstl
add
inc
and
aas
add
das
mov
fistpll
movsb
mov
sub
test
popa
xchg
repnz
ljmp
sbb
add
dec
xor
xchg
rorb
imul
sub
pop
or
mov
mov
inc
mov
jecxz
add
cmpb
aaa
sbb
adc
dec
mov
xor
cltd
inc
std
sbb
adc
xchg
cwtl
pop
fs
fld
pop
andl
or
cwtl
add
dec
mov
adc
xor
sub
fiadds
push
dec
adc
enter
add
repz
fcmovb
addl
add
add
sbb
loope
pop
sub
icebp
dec
push
mov
addb
cli
xchg
pop
jo
imul
pop
sbbl
xor
jb
into
and
mov
push
push
cmpsb
std
pop
xchg
ret
inc
inc
push
mov
add
out
mov
cmpl
xorl
dec
add
fs
sahf
add
pop
ret
inc
fadds
mov
mov
insb
jo
fwait
xchg
pop
jecxz
xor
aam
mov
jmp
fcmovnbe
push
hlt
ss
rclb
js
repnz
xor
std
mov
int
ret
movl
fs
sbbl
jmp
lods
sbb
rorb
fnstsw
cmp
push
mov
adc
mov
add
and
mov
push
sub
aas
sbb
push
addl
xor
rorl
xchg
ret
mov
dec
jns
push
fcmovnbe
xchg
or
mov
jne
adc
mov
pop
call
mov
cmp
dec
sarl
or
insb
jo
pop
push
js
mov
push
push
mov
sahf
sbb
xchg
in
inc
sbb
and
outsb
or
cmpsb
lock
lods
add
dec
rorb
or
dec
add
rorb
inc
add
arpl
test
cwtl
nop
adc
inc
punpckhbw
adc
lods
out
stc
mov
or
sbb
repz
sbb
push
xchg
ficoml
mov
cltd
mov
and
je
jg
jle
repz
rorb
add
jae
xchg
mov
jns
mov
aaa
mov
add
pop
pop
or
mov
mov
mov
mov
fists
and
jbe
rorl
lds
or
cmp
test
sub
add
xchg
test
iret
scas
shlb
gs
call
adc
and
adc
or
in
shr
repnz
mov
pusha
icebp
mov
test
mov
push
movsl
jno
mov
or
sub
int3
push
jns
fs
or
pop
push
mov
add
mov
jge
add
jnp
mov
movsb
bound
mov
sub
jecxz
or
jle
cmp
or
pushl
mov
hlt
or
jno
fadd
xchg
xchg
gs
add
mov
push
sbb
dec
dec
ljmp
xchg
xchg
adc
divl
push
mov
cltd
adc
adc
add
sbb
jmp
mov
inc
cli
or
inc
cmp
and
push
movsb
inc
and
pop
dec
inc
jge
fdivrs
xchg
sbb
or
lea
imul
jb
aaa
push
adc
incl
fs
dec
mov
cmp
or
mov
js
movsbl
frstor
jno
jne
and
jb
mov
adc
fwait
dec
xor
xchg
push
arpl
or
mov
pop
pop
cmp
mov
fbld
inc
mov
pop
mov
dec
cmp
and
adcb
fmull
test
je
lret
sbb
jns,pn
sbb
or
jnp
sub
movsb
jns
push
and
mov
cmpsl
push
inc
std
icebp
xchg
aas
lea
xor
mov
add
outsl
ja
lea
jge
lods
repnz
fwait
in
add
outsl
loop
shll
or
iret
add
pop
test
mov
and
mov
xor
movsl
scas
xor
je
xchg
andl
mov
mov
scas
pop
push
mov
cmpsl
mov
cs
dec
sbb
cwtl
and
lock
xchg
gs
or
dec
and
mov
inc
test
dec
add
and
push
sub
sahf
adc
fsub
div
ja
rorb
add
push
jg
or
xchg
pushl
push
pop
je
add
mov
movsl
loopne
ret
mov
lods
ljmp
or
inc
call
mov
iret
push
add
imul
aad
call
dec
je
push
jg
sbb
sbb
data16
insb
test
sbb
or
jmp
dec
and
pusha
mov
js
xlat
cli
mov
daa
mov
pop
xor
outsl
test
das
push
aad
and
bound
push
ret
mov
mov
push
cmc
adc
lock
sub
and
clc
mov
mov
loop
mov
hlt
sub
adc
hlt
dec
mov
hlt
leave
adc
wbinvd
repz
test
add
mov
clc
cmp
and
mov
loope
incb
ret
out
fnstenv
jae
loope
test
in
movsl
cmp
lcall
xor
inc
and
out
add
test
xchg
and
dec
mov
mov
sub
xchg
jle
mov
or
mov
add
movl
scas
xchg
pop
mov
mov
gs
test
arpl
push
test
mov
das
retw
or
push
dec
call
mov
mov
mov
or
call
adc
add
mov
insb
and
iret
push
mov
cmc
gs
sub
xor
jne
or
out
xchg
mov
movl
sub
js
dec
sub
inc
adc
rcrb
je
cmpsb
push
jp
cmp
into
int3
sarb
add
cwtl
pop
cltd
add
push
dec
imul
add
push
aam
shll
jl
fnstenv
mov
inc
sbb
std
mov
ss
jge
add
sub
mov
push
cmp
bound
movsl
add
movsb
shrl
mov
or
das
xchg
xchg
mov
insb
addl
jecxz
push
push
and
or
sti
mov
hlt
sbb
dec
mov
sub
jle
mov
clc
sub
movsb
stc
sub
push
popf
clc
push
add
push
push
push
push
popa
in
cwtl
jl
jp
xor
mov
pop
cmc
add
ffreep
mov
lea
inc
jne
mov
cli
call
sub
mov
das
inc
mov
cmp
jne
rolb
pusha
ret
xchg
inc
dec
pop
and
pop
fimuls
cltd
dec
and
add
and
push
dec
inc
push
dec
pusha
xor
sbb
mov
adc
insb
loope
pop
repz
imul
dec
jmp
and
prefetch
xchg
add
or
test
add
cmpb
cmp
lret
dec
fbld
jmp
push
inc
cwtl
imul
pushf
orl
hlt
adc
xchg
pushf
clc
push
test
jg
add
jo
pop
add
xchg
cld
mov
lods
fnstsw
mov
mov
mov
mov
mov
jle
cmp
js
add
xor
cmp
jbe
pop
adc
xchg
cmpb
dec
and
inc
movsb
sbb
jnp
adc
add
jne
dec
sbb
adc
xchg
pop
mov
cmp
insb
mov
xor
sub
ja
pop
adc
roll
dec
mov
add
lds
add
add
push
sub
or
pop
or
enter
pusha
mov
data16
rolb
xor
add
mov
jae
add
add
aaa
push
pop
xor
int3
je
jg
push
popa
pushf
test
sbb
pop
jo
cmp
scas
stos
imul
push
cmp
jb
cmp
cli
jbe
cmp
or
or
push
xchg
inc
jne
cmp
clc
jo
or
jnp
add
xor
mov
pinsrw
push
push
subl
mov
sbb
loop
inc
add
lea
dec
mov
fidivl
and
jg
addl
mov
outsl
mov
push
out
ss
dec
cmpl
push
xor
and
xor
stos
rolb
adcl
push
sub
adc
cmpsl
test
or
mov
lock
xchg
jno
dec
xchg
fildll
push
fcom
inc
movsb
mov
mov
push
mov
in
orb
push
stos
test
aad
mov
stc
pop
inc
jmp
and
dec
movsb
je
pusha
mov
push
jge
mov
int3
add
or
add
push
add
or
hlt
shrb
out
shlb
pop
push
pop
dec
pop
sub
and
pushl
sbb
or
pop
int3
je
popa
inc
lock
fcoml
inc
inc
in
ret
lcall
sub
je
inc
sbb
into
xor
xor
ffree
cmp
inc
ret
xchg
fwait
ret
dec
imul
dec
jnp
test
jbe
cmp
je
sbb
xor
adcb
jno,pt
xchg
mov
fsubrl
sbb
popf
sbb
cmp
add
and
sar
pusha
dec
loope
xchg
cwtl
xor
pusha
and
ja
andl
lret
pop
inc
inc
pop
test
sub
or
sbb
cmp
sbbl
adc
add
ja
cmp
enter
sbbb
fsubrl
jge
jmp
inc
fcomps
jno
push
shr
dec
sbb
orb
fchs
jmp
test
or
roll
loopne
or
xor
push
int
inc
adc
mov
daa
xchg
push
gs
lcall
jle
lea
lret
mov
sarb
xor
call
inc
imul
out
mov
mov
dec
and
adc
push
jle
add
data16
sti
testl
jl
and
das
or
push
push
fistpl
ss
push
pop
mov
add
sar
test
scas
ret
je
push
je
xchg
mov
pop
rcrb
je
cmp
adc
pop
jns
call
add
xorl
movsb
rcl
add
pushf
enter
mov
dec
dec
mov
push
sub
jl
sub
jmp
sub
add
idivl
dec
pop
cmpl
push
adc
rorl
cmp
and
ret
aas
cwtl
jge
mov
add
sbb
inc
nop
lret
sbb
add
adc
and
fbstp
fnstenv
jo
mov
rcl
bound
jp
leave
mov
ss
pushf
mov
cltd
fdivr
jp
cltd
nop
pop
push
add
lods
cs
mov
and
adc
sbb
jo
std
sysexit
lahf
bound
hlt
jne
jb
fs
loop
dec
push
cld
shl
ret
shrl
pop
push
pop
and
repnz
dec
xor
jo
shll
jnp
xor
dec
mov
jle
or
and
movsb
out
or
push
lods
pop
adc
sbb
xchg
and
mov
and
sub
mov
movsb
pop
push
stos
fimull
sbb
xor
jge
pop
js
incl
nop
pop
push
and
jb
adc
cmp
outsl
pop
addb
mov
mov
scas
call
aas
jne
and
stos
xchg
adc
pop
dec
cmp
faddp
in
sub
pop
lcall
nop
inc
pop
lock
mov
les
ss
push
rol
xor
inc
adc
es
test
rorl
mov
inc
movaps
int
mov
push
adc
cmpsb
xchg
dec
pmulhuw
add
mov
inc
bound
imul
loopne
mov
scas
nop
add
sbb
xchg
push
rcrl
in
ret
mov
push
sbb
rcrl
daa
sti
call
addr16
dec
and
push
sbb
cmp
xchg
test
jns
jne
add
add
add
sar
pop
fiadds
sbb
fisubrl
pop
dec
daa
and
adc
mov
add
repnz
je
or
jl
push
hlt
fs
arpl
mov
leave
daa
stos
pop
nop
cwtl
pusha
and
in
fcoml
movsl
jo
loope
xor
and
mov
sub
int
jl
or
and
mov
hlt
pop
inc
lea
xor
or
mov
icebp
and
test
jne
lods
jo
sub
nop
xchg
sub
jno
mov
mov
mov
push
hlt
and
int
test
inc
scas
push
sbb
dec
mov
pop
dec
mov
in
lods
out
dec
aas
mov
mov
cwtl
call
ss
fldl
inc
jg
add
or
lcall
aaa
and
lcall
icebp
call
pushf
xor
sub
movsl
sub
imul
sahf
add
jecxz
pop
pop
inc
div
imul
add
and
or
cmp
inc
mov
or
pop
xchg
lret
xchg
dec
jmp
gs
and
mov
andb
xlat
and
pop
adc
inc
mov
cltd
popf
jecxz
test
inc
sub
push
adc
dec
lret
inc
sbb
rclb
repnz
clc
ret
jae
sub
and
jle
push
push
inc
ja
jne
lea
jmp
push
in
inc
cmpsb
push
das
pop
sbb
xorb
hlt
sbb
jmp
adc
pop
sbbl
repnz
dec
dec
adc
ljmp
pop
in
inc
movsl
aam
inc
push
inc
push
dec
popa
adc
insl
orl
icebp
xchg
jb
mov
dec
or
cmp
dec
xchg
xor
adc
inc
add
out
int
cwtl
xchg
xor
roll
out
add
add
imul
mov
nop
inc
and
mov
adc
sub
inc
mov
mov
sbb
xor
test
lods
add
mov
les
push
dec
sub
push
pop
pop
push
out
nop
outsb
or
popa
xor
dec
dec
mov
nop
inc
inc
jmp
mov
pop
dec
pop
sub
pop
iret
xchg
je
dec
mov
dec
inc
enter
dec
dec
arpl
mov
push
xorb
jne
push
call
sbb
movsb
xchg
xchg
jne
sub
mov
pusha
in
inc
test
and
mov
icebp
mov
pop
fisttpll
sbb
add
inc
test
call
pop
pop
test
int3
push
sbb
insb
cmpsb
jae
leave
adc
mov
je
pop
add
cs
push
js
jge
mov
aaa
or
cli
push
in
xchg
inc
int3
push
rclb
inc
lea
cwtl
add
inc
push
pop
and
push
inc
movsl
mov
orb
movb
pusha
sbb
xor
jg
sbb
or
repnz
push
cmpl
movsl
inc
call
sahf
mov
call
add
repz
push
aam
clc
shlb
ss
inc
outsl
mov
push
sbb
insb
dec
dec
dec
shr
inc
or
mov
push
movsl
cmp
and
cmpsl
movsl
rolb
cmpb
xor
int3
xor
fadds
nop
imul
int3
mov
movsb
shl
dec
xchg
popa
xor
add
icebp
pop
inc
test
jmp
add
xchg
lea
and
mov
rcl
js
cmp
sub
jnp
mov
ja
lea
ret
add
xchg
jne
cmp
test
fstl
cmp
cmpsb
mov
and
clc
push
dec
adc
jo
sbb
pop
jae
bound
mov
xor
clc
cmpsb
cld
hlt
and
add
shr
xor
push
and
adc
jne
clc
push
jno
mov
les
sub
lcall
lcall
sbb
jb
out
popf
mov
loopne
mov
ret
std
incl
loope
inc
adc
or
aad
fistpl
jmp
push
jg
lods
cmp
and
push
jb
dec
pop
test
cmpsl
mov
mov
loop
sbb
xchg
cmpsb
out
xor
xchg
out
pop
xor
adcl
cmpsl
rcrl
dec
and
mov
jle
addr16
jo
idivl
outsb
scas
clc
xor
sbb
xor
and
jmp
cmp
jne
push
xchg
shll
adc
push
fsubrp
scas
jmp
ss
cmpsl
or
jp
or
mov
lods
sub
cmp
adc
cwtl
call
seto
push
enter
nop
push
loope
pushf
mov
ret
mov
leave
sub
sub
enter
push
roll
lods
in
or
shll
lods
pusha
adc
sub
sti
jne
imul
dec
add
cmp
into
adc
jne
push
push
push
jmp
jns
pop
fisubrl
btr
dec
fwait
cmp
rcll
in
cmp
loopne
mov
jae
or
xor
bound
jmp
or
cmp
je
mov
adc
arpl
and
sub
pushf
es
sbb
inc
lds
roll
in
or
or
add
scas
or
imul
cld
pusha
xor
jne
dec
ja
add
outsl
add
jg
add
and
out
lods
dec
and
shrl
test
incb
rorb
mov
push
sub
sbb
inc
mov
ret
dec
jns
mov
mov
es
mov
in
pushf
inc
lods
inc
js
cmp
iret
lock
mov
mov
outsl
dec
fsub
es
pusha
rorb
dec
or
orl
xchg
add
insl
or
call
subl
or
dec
sub
scas
insl
cwtl
daa
fs
imul
push
enter
out
mov
lea
and
sbb
sbb
and
dec
dec
cwtl
sbb
inc
lcall
push
push
cld
xor
pop
and
insb
andl
icebp
in
add
rcrl
fsubrp
cld
fildl
fld
flds
fdivrs
int
sbb
adc
fstl
fisubrl
hlt
sbb
push
sbb
jae
dec
mov
add
xlat
push
adcb
inc
pop
inc
cmp
or
and
xor
add
aaa
add
or
mov
sub
insb
pusha
mov
test
pop
pop
inc
arpl
jno
clc
bound
imul
inc
or
insl
les
lock
cs
mov
push
inc
xor
push
insl
loopne
add
mov
or
adc
pushl
sub
pop
leave
adc
scas
sub
sub
loop
cmp
add
push
sbb
xlat
adc
sub
cmp
xchg
mov
push
test
js
pop
inc
das
add
or
sbb
movsl
xorb
or
rorb
cwtl
jge
xchg
or
dec
ret
orb
pusha
and
or
inc
stos
add
xor
cmpb
pushf
adc
push
data16
das
mov
nop
popa
sbb
or
mov
adc
rorl
add
cmpsl
add
pusha
insl
mov
sbb
or
mov
adcb
mov
xor
out
adcb
mov
sub
push
push
dec
inc
in
lcall
lea
scas
in
adcl
roll
mov
mov
mov
adc
sbbl
sbb
cmp
inc
xor
sbb
in
negb
lock
daa
dec
je
sub
fidivrl
test
arpl
or
jg
push
or
add
mov
rcr
ret
xor
fwait
nop
and
mov
adc
pop
adc
jb
xchg
push
mov
popa
addr16
pop
loope
lahf
test
sbb
mov
repz
pop
mov
ds
inc
mov
mov
clc
inc
popf
push
or
cmp
jecxz
adc
xlat
inc
repz
add
xchg
xchg
fnstcw
or
imull
mov
movsb
sbb
sbb
sbb
add
sub
in
mov
and
adc
mov
lea
inc
jmp
pop
sarb
cmpsl
imul
mov
sub
sub
push
jae
test
and
xor
xchg
xor
sub
cmp
or
cmp
sbb
sbb
insl
rclb
adcb
fmuls
insb
lret
add
adc
lock
ss
enter
iret
push
sahf
or
pop
mov
xchg
movsb
inc
inc
adc
sbb
shll
push
aad
movsb
mov
dec
mov
jp
dec
fists
popf
cld
icebp
mov
mov
stos
in
fwait
jb
jge
cmp
or
into
sbb
cmp
mov
data16
xchg
mov
sbb
dec
loopne
or
mov
xchg
shrb
aas
popa
loope
shlb
cmp
adc
test
je
insl
pop
clc
add
sbb
and
adc
rorb
gs
add
xchg
xor
or
sar
jl
xor
outsl
add
push
jl
cltd
mov
fists
xor
les
lea
pushf
bound
in
or
mov
sub
xchg
ficoms
adc
icebp
push
xchg
std
cs
ljmp
lret
jne
pop
jmp
daa
xor
or
dec
or
ret
adc
jmp
dec
cwtl
mov
bound
cld
add
add
pop
sti
add
push
stos
and
orl
jae
sub
push
cmpsl
ljmp
inc
or
mov
mov
or
mov
lock
cmp
add
push
dec
ret
xchg
jns
dec
push
sarb
mov
lret
sub
add
and
or
pop
mov
and
pop
dec
hlt
adc
and
pop
dec
int
push
adc
xor
sbb
push
pop
notl
aaa
inc
adc
push
pop
test
or
cmp
fdivrl
test
test
and
mov
inc
push
push
or
jno
cmp
sbb
cltd
push
fs
xor
xchg
inc
add
mov
inc
fcoms
lods
add
jbe
mov
push
sbb
or
pusha
jb
out
dec
push
adc
xor
jo
lcall
loope
inc
pop
test
test
loope
add
movzwl
ret
loope
push
iret
pop
rclb
js
sbb
mov
push
imul
push
sbb
inc
or
nop
in
xchg
sbb
xor
and
es
mov
lods
jns
or
and
sub
daa
jne
pop
mov
clc
dec
jb,pn
mov
lds
inc
sbb
mov
cltd
push
imul
arpl
es
sahf
mov
jb
sbb
adc
add
mov
jecxz
sbb
pusha
or
xor
lret
mov
xchg
jmp
roll
ds
adc
pop
arpl
push
xor
add
adc
jmp
insb
pusha
xor
inc
in
shlb
mov
lock
in
cmpsb
out
dec
jo
push
into
pop
jle
sarl
xchg
mov
add
mov
rolb
sbb
jl
or
insl
gs
mov
adc
push
adc
sub
jg
arpl
les
outsb
inc
clc
push
push
lea
push
pop
xor
and
pop
pop
mov
adc
scas
xor
pushf
mov
ss
mov
and
jne
sub
sbb
popa
stos
outsb
xlat
or
adc
xchg
mov
sub
jae
pop
movsb
roll
pop
cmpb
mov
mov
jae
dec
shrl
mov
adc
jo
sbb
pusha
mov
inc
mov
adc
push
sbb
jne
sbb
jmp
mov
add
mov
in
push
adc
add
jno
pop
push
nop
movsb
add
adc
adc
scas
mov
dec
add
sub
jne
mov
dec
mov
or
xor
test
das
icebp
mov
sbb
sbb
in
sbb
and
mov
les
inc
and
sub
popa
fsts
sbb
cmp
mov
sbb
jo
push
pop
mov
sub
pop
aad
roll
xor
ds
dec
cmp
add
aaa
mov
aaa
or
loop
inc
push
xchg
sub
icebp
in
inc
dec
adc
adc
roll
aaa
in
pop
bound
es
mov
jns
js
movsl
fisttpll
jge
sub
sbbl
sbb
loope
cmp
add
cmp
add
ss
push
ja
xor
rorl
test
mov
stos
and
sub
cmp
dec
pusha
jne
mov
xor
jl
pop
movsb
push
or
iret
and
sbb
xchg
push
and
add
adc
rolb
mov
or
mov
test
je
test
or
ficoml
je
adc
mov
pop
lret
shr
add
and
roll
movsb
or
sub
jle
mov
push
mov
sbb
out
add
mov
xor
rep
inc
popf
mov
cmp
in
and
out
and
movsl
add
jmpw
and
jne
push
cmp
aad
and
ret
cmp
ds
sbb
xchg
pushf
add
adc
adc
dec
dec
test
and
xchg
out
mov
push
sbb
fsincos
push
or
cmp
inc
sbb
imul
sub
dec
test
ss
sub
test
sbb
add
mov
xchg
push
stos
add
sarb
lods
add
or
dec
jae
icebp
jp
or
sub
pop
adc
inc
or
pop
hlt
xor
pop
ret
ljmp
jne
addr16
jg
ss
xor
divl
sbb
cmp
js
xlat
cwtl
idivl
outsb
add
push
adc
and
jmp
sbbb
or
loop
scas
dec
add
call
xchg
mov
or
adc
and
xor
loop
inc
clc
or
sbb
insl
jbe
sub
sbb
pusha
sbb
dec
js
incl
pop
rol
and
inc
jb
pop
inc
sbb
sbb
mov
xor
xchg
sbbl
or
lds
and
or
fstp
mulps
movaps
mov
sbb
jne
mov
cmp
jecxz
inc
or
lods
lods
addr16
popa
test
dec
adc
add
fs
jo
scas
or
dec
out
jmp
mov
int3
sub
into
push
popa
xlat
or
fsubrp
xor
nop
xor
mov
adc
orb
sub
inc
mov
nop
into
invd
or
cmpb
inc
push
jle
jne
push
es
ja
fcomps
aas
add
ss
push
adc
sbb
or
push
jg
mov
ret
push
push
sub
int3
jbe
mov
pop
pop
pop
cmpsb
adc
or
sbbb
sub
jne
mov
int
add
cmp
je
inc
fdivs
ret
ja
push
pop
inc
jle
loope
popa
dec
ret
bound
inc
add
sti
ds
mov
faddl
mov
mov
decl
mov
sub
ret
je
xchg
or
add
xlat
add
clc
test
push
push
and
sbb
xchg
sub
adc
outsl
inc
pop
xchg
push
sahf
loope
pop
fsub
inc
sbbb
dec
fists
mov
imul
and
mov
loop
mov
mov
nop
rorb
shlb
mov
dec
cmp
push
or
mov
sbb
pop
inc
push
in
or
or
mov
test
add
xlat
xor
sbb
or
mov
pop
dec
ss
and
movsl
popa
xchg
dec
test
movsl
jo
jecxz
xor
mov
add
add
xchg
daa
aas
in
sub
rcrl
mov
pop
xor
add
ljmp
iret
push
sub
lea
push
stc
bound
mov
xchg
inc
inc
adc
inc
sbb
cmp
hlt
and
test
unpcklps
mov
test
adc
test
ret
sub
jnp
dec
mov
mov
popa
loopne
sub
adc
rcrb
adc
xchg
andl
mov
add
jno
mov
add
fisubs
in
ljmp
rorl
and
test
pushf
stos
jne
and
lahf
xchg
xor
add
cmp
xor
push
imul
loopne
test
and
dec
dec
push
pop
or
mov
lds
pop
xor
mov
cmpsb
sub
arpl
das
bound
add
inc
adc
icebp
call
sub
call
pop
add
pop
in
inc
loope
push
adc
jne
adc
test
enter
cld
clc
lock
mov
loope
pop
imul
subl
bound
enter
pop
push
mov
cld
stos
jb
cs
dec
cmp
call
movsl
iret
inc
push
adc
inc
mov
inc
sub
in
adc
mov
mov
and
add
and
cmp
fidivl
lods
or
sub
cmp
test
jge
adc
cmp
movsb
jge
add
mov
rolb
inc
dec
sub
push
je
fwait
lcall
sub
sbbb
and
adc
pop
mov
push
mov
rcrb
add
nop
sti
or
pop
fmuls
pop
nop
mov
add
data16
lea
xor
fsubs
outsl
add
push
sbb
call
adc
mov
jecxz
iret
int
adc
or
es
and
add
mov
jg
xor
scas
mov
je
push
mov
fstps
fbld
mov
cmp
jl
push
cmp
push
cmp
jle
cmp
fisttps
push
cmp
cmp
inc
add
daa
cmpb
inc
inc
jmp
inc
push
movw
xchg
repnz
pop
inc
pop
addr16
clc
iret
mov
push
mov
cltd
pop
idiv
addr16
pop
iret
lock
mov
aas
adc
insl
inc
sbb
mov
adc
popl
xor
sbb
pop
dec
je
cmpb
add
add
push
rolb
push
int3
jbe
push
adc
mov
mov
xor
dec
mov
ret
data16
dec
and
xchg
xchg
xor
inc
cmpsl
mov
inc
insl
lods
mov
rol
cmpsl
jecxz
mov
dec
movsl
or
adc
and
and
dec
in
add
nop
sub
add
xchg
pop
test
int
cmp
push
aaa
in
xlat
mov
aas
sbb
or
nop
add
mov
nop
sub
push
add
into
and
cmp
jb
or
cltd
shll
test
scas
pop
or
ds
pop
pop
jmp
les
repz
inc
cs
insl
or
inc
adc
xor
xor
add
cmp
sti
or
shl
inc
outsb
or
insl
or
push
nop
push
inc
sub
faddp
jge
je
jo
stos
outsl
push
mov
add
xor
pop
adc
adc
add
push
nop
mov
imul
dec
push
sbb
daa
inc
sub
mov
mov
in
inc
sbb
and
or
push
sbb
add
or
popf
and
and
inc
leave
gs
adc
inc
and
push
mov
fs
adc
ret
inc
fstpt
add
and
outsl
jno
push
inc
inc
nop
inc
sub
lods
xchg
mov
xchg
sbb
xor
enter
sbb
daa
xlat
dec
sub
test
fistl
popa
mov
xcrypt-ctr
cmpsl
sbb
notb
mov
aas
pop
inc
and
add
insb
lods
sbb
mov
pop
jno
add
push
adc
push
pop
adcl
ljmp
movsb
cmc
cltd
sub
push
test
sbb
lds
cmc
push
pop
mov
mov
fs
test
add
xchg
inc
movl
je
and
adc
add
add
add
adc
jmp
add
push
add
orb
jb
int3
aas
pop
add
sbb
sbb
inc
add
adc
lea
xchg
mov
loopne
lock
sub
mov
add
in
lods
inc
sub
push
movl
fnstsw
xchg
fs
lret
xorb
or
and
mov
fwait
loope
xor
repnz
aam
add
ret
pop
out
shlb
cwtl
cld
ret
inc
mov
rorl
adc
pop
les
out
sbb
adc
inc
push
roll
and
or
add
stos
pop
enter
out
lret
sbb
adc
add
dec
repnz
add
shrb
add
pop
jle
inc
test
or
loop
test
inc
aas
test
lock
movb
cmpsl
sbbl
add
in
cltd
dec
orl
or
jp
push
les
push
pop
pusha
dec
aaa
lock
fwait
adc
adc
and
sbb
pop
lds
adc
push
enter
jne
sub
xchg
lods
ret
mov
lock
jo
adc
sbb
loop
movsb
lret
out
in
sbb
test
or
mov
ret
fcoms
addl
std
inc
adc
xor
sbb
jbe
and
push
nop
inc
sar
jb
test
inc
jl
push
mov
aaa
cmp
adc
stos
imul
or
push
push
lret
xchg
adc
pop
xchg
dec
add
sbb
mov
insb
addr16
popa
mov
cmp
jne
stc
push
aad
je
rcl
ret
jno
insb
xchg
popa
xchg
mov
mov
fsts
or
xor
xlat
dec
popl
fistl
add
inc
xchg
pop
enter
orl
testl
mov
dec
xor
mov
shll
cmp
xlat
and
rep
xchg
test
leave
push
pusha
jae
jnp
lcall
jns
cmp
push
mov
dec
sub
mov
lods
add
imul
add
or
test
pop
xchg
movsb
sub
addb
xor
or
or
jno
mov
jl
add
or
ret
cld
das
xorb
je,pt
cmp
jle
push
dec
lods
filds
ffreep
jecxz
add
sbb
fcoml
inc
ret
adc
push
pop
pushl
and
cmp
cmp
movl
cmp
pop
test
in
sub
inc
inc
push
jnp
pop
xchg
insl
jmp
in
mov
xor
in
orb
or
out
mov
jne
les
loop
jmp
call
add
call
aas
jo
fcompl
fnstsw
test
je
sbb
movsb
frstor
mov
fldl
push
sbb
inc
cld
std
mulb
and
and
lahf
add
mov
fstpl
add
fnsave
aam
fwait
jl
sbb
or
mov
jo
jnp
xchg
add
int3
and
loope
ficoms
arpl
pop
sub
scas
add
stos
xor
mov
or
aaa
dec
inc
push
inc
negb
sbb
scas
mov
inc
xor
fdivs
mov
inc
mov
scas
cs
sub
sub
inc
fisubrl
cmpsl
shll
add
adcb
stc
jge
fs
fdivrs
push
xchg
data16
cld
loopne
rcl
pop
dec
inc
or
pop
xor
es
mov
aad
or
mov
adc
divb
movl
ja
or
mov
addr16
push
and
push
mov
ret
movsb
hlt
dec
add
pop
repz
push
and
mov
cmp
add
ficomps
or
inc
inc
pushl
clc
nop
popa
dec
test
ja
or
lock
stos
xor
shld
add
ss
sbb
iret
push
cld
push
lea
push
push
and
adc
or
sti
mov
test
push
leave
adc
mov
add
sar
push
adc
push
push
je
xor
push
or
popf
fstpl
cli
sbb
push
pop
push
or
pop
pop
push
mov
leave
outsl
aam
mov
push
jno
push
mov
fsubs
loop
push
mov
mov
add
push
or
add
ja
push
adc
push
jl
inc
arpl
aad
das
orb
jb
dec
inc
jle
push
cmpw
jne
test
and
jge
pop
outsl
cmp
dec
push
push
outsl
mov
stc
jge
mov
int3
lea
mov
sti
jg
stc
std
mov
or
cmp
data16
leave
out
data16
push
sbb
dec
mov
push
push
cmpxchg
dec
inc
out
or
movsb
lahf
rol
dec
add
xchg
cmc
and
aas
inc
xchg
cmp
add
icebp
sbb
push
mov
adc
push
sbb
mov
and
sbb
ss
adc
and
and
and
in
shlb
xchg
test
adc
inc
pop
hlt
inc
dec
pusha
rclb
cltd
cltd
fstpt
inc
sub
je
cmpsl
push
add
mov
mov
dec
or
push
pop
mov
shll
test
fdivl
inc
xor
adc
rorl
pop
sub
pushf
sarb
inc
and
jae
movsb
std
sub
jne
mov
add
in
or
sbb
or
pusha
inc
lret
cltd
out
movsl
jl
out
push
adc
add
sbb
popa
mov
add
sbb
pop
mov
into
aam
mov
or
gs
lds
jp
adc
lock
or
pop
lret
cmpl
sbb
add
bound
imul
in
adcl
adc
pop
push
pop
icebp
xor
stc
leave
adc
mov
add
and
sub
adc
cmp
ja
push
push
js
cmp
sub
mov
lods
xchg
mov
jno
xor
pushf
mov
jg
icebp
add
xchg
xor
push
test
push
adcb
bound
or
pushf
xchg
jle
sti
pop
das
and
jb
sbb
add
movsl
xor
jns
mov
xor
fstpt
mov
ljmpw
mov
loope
sbb
adc
xchg
sub
test
ljmp
add
cmpsb
cltd
je
cmc
sub
lcall
xchg
inc
push
cwtl
adcb
or
xor
or
jp
cmp
fsubrl
sbb
jno
dec
fcoml
adc
xchg
add
dec
xchg
ret
pop
aaa
loopne
adc
pop
inc
inc
jge
and
add
es
add
sub
pop
popa
ret
test
push
ja
sub
or
rcrb
mov
fdivs
popf
insb
push
fisttpll
xor
std
add
jne
shlb
mov
faddl
fs
push
imul
int3
and
je
add
pop
xchg
cli
cmpsb
sbb
dec
jne
jb
lret
and
jmp
and
or
dec
je
add
add
in
and
push
imul
movsb
jmp
ret
push
fsubrs
mov
les
lret
cmp
mov
jmp
add
test
sub
mov
lea
imul
xchg
mov
jns
nop
inc
mov
sbb
dec
add
inc
push
cmp
inc
push
nop
lods
sar
dec
and
enter
mov
lret
and
stc
push
imul
dec
adc
in
adc
fs
nop
inc
push
mov
lock
dec
or
push
and
mov
jnp
enter
adc
xor
enter
push
sbb
mov
xor
jbe
movl
enter
stos
cmp
mov
push
movsb
scas
repz
repz
out
cmp
ljmp
out
sahf
sbb
push
pop
outsb
jns
out
js
mov
out
mov
enter
jns
fsub
lock
push
add
cmp
repz
and
inc
test
leave
repz
pop
push
scas
jp
xchg
cs
jg
or
lret
push
add
jo
inc
fucom
or
mov
mov
rol
push
out
addb
dec
inc
jle
nop
adc
xchg
nop
mov
mov
adc
jnp
or
and
add
jo
sbb
lea
in
xorl
nop
sahf
add
mov
fwait
jmp
jl
mov
push
dec
inc
sbb
and
push
jno
mov
push
ja
enter
add
loopne
neg
out
fcompl
mov
push
mov
pop
dec
mov
jne
sbb
arpl
cmp
cmp
rol
xor
or
cmpsl
xor
int3
loope
inc
sub
pushl
dec
dec
and
imull
test
mov
loopne
test
popf
xchg
pusha
pop
mov
sbb
sahf
divb
ffreep
dec
mov
xor
push
cmpb
and
sbb
lea
jb
cli
shrb
push
cmp
push
scas
lock
and
inc
shlb
and
xchg
push
fildll
flds
jo
mov
cmpsl
jg
inc
add
rclb
shrb
inc
ljmp
dec
dec
cs
fwait
sbb
add
sub
gs
push
movsb
popa
xchg
pop
enter
dec
sub
or
adc
leave
test
sub
es
mov
addb
dec
and
decl
ret
mov
and
inc
and
push
add
cmpsb
orl
sbb
faddl
movb
outsb
sub
pop
mov
testl
jl
ss
push
or
daa
adc
xchg
aad
dec
imul
into
pop
pusha
xchg
push
inc
and
mov
ret
movsl
mov
or
lea
rol
lahf
mov
sbb
lahf
sbb
les
cmpsb
mov
cmp
cmp
test
test
or
mov
fildl
mov
dec
mov
cmc
aaa
mov
dec
add
sub
lea
add
push
mov
mov
sarb
mov
nop
push
xor
push
xor
pop
and
in
mov
movb
rcr
es
mov
and
fdivp
dec
jnp
das
mov
popa
inc
fisubrl
xor
lcall
xorb
inc
mov
push
sub
xor
jle
dec
sbb
icebp
xor
xlat
out
ficompl
mov
xchg
xor
xor
xor
das
xchg
xor
xor
jo,pn
xchg
xor
xor
sub
sub
sub
push
int3
lcall
ss
mov
popf
mov
jmp
int3
jl
mov
test
adc
shlb
dec
js
aas
lret
cmp
repnz
xlat
movsb
inc
add
cmpsl
std
inc
test
sbb
xlat
or
adc
sbb
pop
jl
js
stos
push
xchg
and
in
nop
push
pminsw
pop
loopne
shlb
add
imul
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
hlt
daa
sub
or
mov
inc
add
cmp
bound
cmp
pop
push
jns
sub
mov
test
pushf
cmp
sbb
push
pushf
addl
jp
enter
test
shrl
lcall
imul
and
int3
cmpb
xchg
cmp
adc
or
lret
push
outsl
cmpsl
dec
dec
or
aas
jno
shrl
xchg
jo
mov
mov
jbe
and
ds
lds
add
fisttpll
nop
das
mov
jo
push
daa
cmp
in
jecxz
push
inc
adc
sbb
and
xor
sub
mov
sub
add
pushf
sub
xchg
jo
cmp
jecxz
sub
xchg
jnp
jno
or
adcl
arpl
sbb
and
inc
rcrl
adc
jg
js
sub
sbb
and
mov
sub
pusha
aaa
insl
jns
mov
shll
icebp
popf
pop
dec
bound
popf
and
adc
out
xchg
out
add
dec
dec
add
mov
dec
cmc
or
cmp
pop
aas
pop
jns
into
adc
mov
pop
push
mov
jle
cmp
fldt
and
or
or
data16
mov
mov
loopne
xchg
inc
sbb
dec
fildl
loopne
es
subl
add
mov
popa
lea
mov
jo
mov
adc
nop
sbb
xchg
fnstenv
mov
inc
dec
dec
jne
loop
xchg
ss
and
xchg
lods
xor
inc
lods
sbb
adc
rorb
iret
ret
xor
leave
jo
sti
je
js
add
mov
xlat
dec
and
out
cmpsl
rcrl
or
xchg
nop
push
cwtl
int3
ficoms
mov
and
pop
push
adc
push
subl
mov
int
sbb
adc
rorb
lock
adc
enter
test
sarb
dec
int3
add
dec
movsl
mov
notb
dec
fcmovu
push
push
je
sbb
aam
sbb
sbb
mov
xor
jl
lods
pop
mov
mov
push
pop
pop
mov
add
push
pop
lock
jne
dec
and
ss
test
leave
icebp
and
int
lods
inc
sbb
push
cmpsl
mov
movsb
inc
sbb
mov
dec
or
inc
sbb
dec
xor
or
xchg
and
shlb
adc
bound
pop
adc
jmp
nop
add
nop
test
cwtl
jno
enter
mov
loop
nop
mov
rcll
xor
or
xchg
xor
shlb
pop
fs
pop
add
fsub
cltd
in
push
or
call
daa
or
arpl
adc
xor
nop
inc
lcall
cmpsl
mov
push
rclb
add
xchg
jmp
inc
sbb
xor
aad
leave
sub
vmread
mov
enter
adc
mov
push
movsl
xchg
add
xchg
mov
mov
mov
cltd
add
lods
sbb
and
lahf
add
add
jecxz
sbb
sbb
pop
pusha
xchg
mov
add
dec
xchg
call
sbb
rolb
or
loopne
push
fisttps
dec
insl
fcom
push
sbb
test
dec
stos
js
sbbl
add
ret
in
je
push
movsb
inc
lea
outsl
gs
daa
mov
lods
inc
std
inc
inc
clc
fisttps
add
dec
cmp
aas
adc
and
stos
jmp
mov
pusha
adc
and
addl
adc
adc
jbe
mov
ret
std
pop
cli
sarb
inc
stos
add
mov
ljmp
mov
loopne
xchg
repnz
pop
dec
mov
icebp
xor
rclb
js
inc
sbb
cmp
lahf
in
mov
imul
pop
cmp
insb
mov
push
fs
add
jns
push
push
pop
pop
push
test
pop
and
push
imul
pop
push
xchg
and
jge
inc
mov
inc
shlb
add
in
and
sub
and
lods
mov
xor
lods
push
xchg
push
mov
jl
inc
push
xchg
or
dec
xchg
outsl
mov
mov
push
ss
cmpsb
je
mov
add
insb
push
jbe
push
fistpl
or
push
rolb
enter
ja
sub
sub
lock
push
dec
add
jo
daa
mov
jbe
push
sbb
shll
rorb
and
jno
inc
pop
pop
xchg
stos
out
jb
roll
pop
jb
pop
sbb
jb
sbb
outsb
pop
pop
jb
pop
das
xchg
add
rolb
sbb
adc
dec
push
dec
jb
jne
push
loopne,pn
orl
or
nop
pop
mov
imul
jae
jmp
adc
jmp
aam
or
sbbb
mov
add
mov
jmp
inc
lcall
mov
inc
add
mov
sub
xchg
outsl
mov
lock
decb
jne
test
ret
adc
cld
movsl
arpl
mov
shlb
mov
adc
adc
jb
fcoml
mov
mov
push
push
cmpsb
mov
enter
movsl
lea
or
popf
pop
pop
mov
mov
inc
notb
pop
push
jo
jmp
in
add
jge
add
push
adc
pop
push
mov
into
and
pop
or
repnz
jl
aad
mov
push
in
xor
xor
jl
test
movsb
adc
loopne
cmp
subb
outsl
adc
enter
and
xchg
lock
jo
sbb
adc
push
lret
xorl
jb,pt
mov
mov
loope
jg
lahf
imul
push
addl
jb
adc
fstl
adc
inc
js
ficompl
decl
cmp
ficoml
cmp
jbe
mov
xchg
fmull
add
cmp
jne
inc
mov
jb
inc
push
add
jl
cmp
add
aam
push
push
hlt
subl
push
test
push
or
iret
jne
pop
fistl
enter
jae
inc
lods
or
fwait
add
nop
cmp
cli
or
iret
pop
push
test
rorl
outsb
and
jmp
and
aas
xchg
sarl
subl
sub
xor
mov
mov
fcoms
in
adc
lock
adc
jae
jg
sarb
or
xchg
cmpsb
inc
js
fldt
adc
dec
mov
mov
add
insb
mov
stos
loopne
sti
jb
sub
mov
push
xorb
pop
test
jmp
iret
mov
or
js
pop
sti
pusha
lret
rorl
sbb
mov
int3
add
pushl
push
outsl
inc
call
pop
dec
jno
sbb
jns
push
pop
push
xchg
ljmp
arpl
inc
pop
in
push
inc
shrb
ret
popl
imul
xchg
int
call
ds
jl
or
clc
dec
je
cmp
or
and
mov
movb
movsbl
shr
mov
cld
je
push
add
pop
dec
add
in
xchg
pop
outsb
fwait
xor
into
movsl
nop
mov
push
mov
loopne
js
pop
lahf
inc
inc
push
bound
mov
add
add
add
push
add
pop
dec
mov
out
xchg
mov
test
subl
negl
jns
jnp
cmp
inc
push
iret
adc
leave
mov
cmpsb
add
pop
test
pop
sbb
shrl
outsb
add
dec
inc
lock
popa
lcall
and
je
dec
and
add
in
cmp
or
in
es
cmc
hlt
add
into
inc
bound
mov
inc
push
or
pop
adc
sub
sbb
xor
dec
sub
adc
rol
popa
test
jne
mov
je
adc
xchg
sub
daa
in
pop
mov
jae
sahf
add
and
add
mov
scas
mov
or
add
pusha
sub
add
pop
cmp
movsl
dec
or
movsb
mov
dec
mov
lea
fildll
mov
add
lcall
daa
loop
mov
mov
outsl
leave
mov
push
cmp
pusha
lret
jle
es
dec
jo
sahf
jmp
aam
adc
or
inc
ja
push
push
lods
xchg
lret
and
repz
push
sbb
mov
xor
push
and
pop
js
jbe
fisttpll
repnz
push
cmp
push
jne
sbb
push
dec
add
add
or
mov
sbb
push
xchg
xchg
push
fisubl
int3
or
xchg
pusha
inc
insb
pop
test
xchg
ja
push
mov
add
sbb
scas
fistps
lret
inc
sbbl
mov
or
adc
shlb
subb
test
dec
fsubs
das
sbb
dec
or
cmp
dec
in
fs
adc
scas
push
hlt
push
inc
sbb
rorb
dec
push
fadd
sbb
jne
out
lea
xchg
movsl
jnp
push
test
and
rcrl
aam
xor
cld
add
pop
enter
inc
adcb
ja
push
loope
cli
ret
test
or
xchg
add
lret
je
xor
sub
and
lock
cmp
add
sbb
mov
adc
jno
loope
sbb
and
jne
loopne
mov
inc
ror
push
jb
repz
rolb
test
xchg
push
push
dec
mov
xchg
cmp
mov
adc
test
es
xchg
xchg
mov
push
dec
pop
cmp
lea
push
sub
xor
or
imul
pop
jo
inc
push
push
les
iret
shll
pop
je
sub
insb
sbb
jmp
in
fsubs
adc
mov
dec
pop
mov
jmp
pop
push
jne
push
hlt
push
or
add
loop
shr
jecxz
in
xchg
je
dec
sbb
mov
inc
inc
mov
inc
dec
mov
adc
in
sbb
pop
push
sub
dec
push
push
xor
fidivrl
rcrb
mov
xor
jne
je
inc
js
mov
jl
jp
sarb
sub
sarb
iret
hlt
add
sub
cmp
scas
xor
jo
add
push
inc
fcoms
mov
sbb
jnp
test
mov
movsb
or
mov
sub
sub
sub
mov
xor
xor
test
dec
pop
adc
loopne
jnp
negl
ljmp
loop
cmp
fldl
lods
inc
jne
xchg
adc
movsl
in
pop
gs
add
or
add
cmp
sub
inc
xor
xor
scas
adc
les
dec
xchg
call
daa
push
mov
xchg
xstore-rng
cmpsl
inc
sbb
sbb
add
mov
or
mov
movsb
or
lods
aas
add
jns
aad
or
leave
fcomps
inc
das
je
jge
xchg
imul
dec
mov
jns
in
inc
xchg
mov
and
fidivl
sub
cmp
insl
jne
es
mov
and
and
ljmp
inc
sbb
mov
adc
pop
aam
add
dec
xor
mov
jb
imul
je
loop
cmp
push
lea
movsl
andb
inc
jle
sbb
test
bound
push
rorb
scas
or
inc
daa
arpl
jecxz
pop
mov
incb
mov
mov
imul
add
sti
test
jno
push
cmp
ret
ja
mov
jbe
cmp
adc
mov
add
push
imul
or
mov
out
notb
inc
test
cmp
mov
pusha
sti
push
addb
add
out
mov
dec
and
pop
cmp
icebp
and
jo
mov
popl
or
add
or
inc
sbb
inc
data16
cmp
aas
out
out
cld
adc
jne
daa
bnd
adc
hlt
jne
ret
repz
cmp
divb
or
push
inc
pop
or
mov
pop
js
or
dec
inc
pop
mov
aad
adc
add
push
lea
jle
or
inc
dec
and
inc
pop
dec
fstl
mov
adc
mov
repnz
test
lea
inc
inc
cmp
ds
jns
lcall
and
mov
adcb
pusha
repz
enter
lods
add
cmpb
mov
sbb
into
fsubl
or
cmc
mov
int3
movsl
lea
roll
jae
mov
fnstenv
clc
adc
sub
ds
or
jne
fldl
dec
sub
fcom
loopne
test
sbb
lock
lea
sub
ret
lcall
add
mov
push
jl
dec
jl
push
cmp
push
cmpsl
jnp
push
ss
loope
xor
jl
cmp
sbbb
dec
loope
aaa
das
cwtl
sbbl
push
xchg
insl
mov
xor
add
test
call
and
orl
outsb
rorb
pusha
cmovle
xchg
test
daa
int
inc
mov
fs
and
pushf
push
jne
mov
push
or
and
enter
dec
fiaddl
pushl
mov
jle
jne
mov
mov
fimuls
push
push
ret
test
mov
js
or
sub
scas
and
jae
sarb
shlb
or
fmuls
mov
or
or
into
mov
or
jmp
xor
mov
mov
mov
jnp
inc
push
adc
sbb
scas
add
addr16
and
adc
sbb
jl
je
sbb
popa
je
mov
mov
push
dec
sbb
rcr
sub
loopne
push
mov
and
int
fwait
in
push
pushl
lods
and
mov
adc
lea
cmp
sbb
add
stc
mov
insl
xchg
mov
cmc
imul
inc
dec
cmp
andl
testl
mov
add
xchg
pushf
add
xchg
in
and
mov
gs
pushf
mov
sbb
lock
inc
outsl
jl
lods
popa
dec
xorl
out
dec
sbb
test
mov
loopne
xor
cmpb
fisttps
jns
enter
cli
cmp
fs
sbb
adc
adc
data16
inc
adc
mov
cmp
adc
fisttpl
sbb
dec
adc
lds
daa
xchg
adc
nop
xchg
in
push
sub
pop
or
push
sbb
sbb
or
xor
jecxz
jle
xor
push
add
dec
dec
xor
aaa
adc
push
pushf
inc
inc
out
xchg
xor
and
push
sub
and
mov
and
pop
inc
sub
xor
add
sub
cmp
test
or
lea
pop
jbe
add
sub
add
and
repz
loopne
pop
jp
sub
cmpsb
push
fs
or
bound
je
insb
and
rcrl
sbb
sbb
push
popl
push
lods
out
gs
inc
sti
xor
xchg
xchg
adc
mov
popf
es
or
sbb
mov
popa
fbstp
xor
and
js
jg
hlt
jg
je
push
pop
lea
sbb
xchg
inc
sbb
xchg
add
mov
jne
mov
inc
aaa
lock
testl
adc
out
subb
leave
mov
lret
movsl
and
int
sbb
dec
jbe
mov
loopne
xor
add
add
jp
leave
push
es
test
sets
and
call
je
xchg
jne
sub
jne
jno
adc
leave
in
in
call
mov
int
xchg
ret
add
add
ret
pop
jno
mov
inc
and
mov
loopne
fdivl
push
fwait
lea
jge
jecxz
or
push
mov
add
fmull
mov
xchg
pop
inc
std
xor
outsb
sub
scas
js
add
loopne
je
add
inc
sbb
xchg
pusha
or
inc
ret
ficoml
adc
nop
les
das
sub
adc
pcmpeqd
jo
cmc
in
shll
repnz
add
add
or
movsl
add
test
and
aaa
push
fnop
sub
aam
mov
or
icebp
sbbl
je
cs
push
pop
or
popf
xor
push
jne
pop
stos
mov
xor
mov
jne
cmpsl
fwait
add
push
ljmp
and
loopne
stos
cld
xchg
mov
push
xlat
inc
in
adc
setbe
cltd
je
jnp
bound
adc
xor
jmp
sbb
push
rclb
into
cmpsb
pop
add
dec
ret
daa
faddl
pop
push
inc
repz
or
inc
mov
ffree
add
shlb
and
clc
and
or
js
mov
sar
pop
push
mov
adc
and
andb
cmp
lods
xchg
and
add
nop
ret
aaa
jb
adc
add
rcrb
inc
xchg
and
iret
push
add
into
hlt
stos
sub
sub
fcompl
adc
and
aad
lds
das
push
mov
pop
call
mov
and
je
mov
push
call
add
inc
adc
add
and
and
lock
nop
sbb
out
add
inc
dec
add
bound
aad
repnz
lahf
push
fcomp
cmp
push
mov
xor
scas
gs
je
jg
cmp
xchg
push
sbbb
fcoml
fistl
lret
add
cwtl
push
cmpsb
lcall
dec
pop
push
iret
add
call
shll
sbb
lods
or
addr16
adcl
movsl
inc
push
lahf
or
in
jo
adc
in
push
mov
and
or
xchg
shlb
or
out
sub
add
push
pop
sub
sub
mov
in
or
inc
sub
aas
xchg
pop
lock
pop
add
notl
jle
pop
or
aaa
dec
sbb
daa
sbb
pop
jno,pt
outsb
jo
fwait
loopne
dec
and
mov
je
movsl
and
or
pop
ljmp
cmp
je
std
mov
dec
or
jb
rolb
sbb
test
sete
cmpsb
mov
clc
mov
push
cmpb
mov
add
or
hlt
jae
movsbl
sbb
inc
mov
jmp
sbb
or
mov
cmp
jbe
pop
jmp
enter
xor
lea
and
dec
inc
out
cli
lcall
dec
add
or
jecxz
or
add
inc
cmp
mov
adc
pop
js
cltd
adcl
add
sar
add
mov
hlt
clc
xor
mov
sub
cmp
jecxz
sbb
push
std
or
lret
shr
xor
mov
dec
mov
dec
jne
fs
xor
pop
pop
sahf
mov
rcrb
xor
inc
aam
add
es
mov
in
jle
add
fimuls
movsb
ret
push
add
jne
jo
adc
roll
mov
test
cs
push
cmp
jl
sbb
sub
add
mov
testl
push
mov
jg
mov
add
dec
jne
and
mov
aas
arpl
rolb
shl
sbb
dec
repnz
xor
aaa
lahf
push
ret
or
loopne
mov
cltd
adc
pop
xchg
pop
jmp
xor
add
pop
pop
call
push
or
out
xor
xchg
inc
aam
pop
and
int
cmpsl
loopne
xor
or
add
jp
sub
ss
pop
or
enter
pop
int3
sub
fwait
sub
jmp
loope
popa
inc
and
sbb
rorl
loop
sub
outsb
dec
or
xchg
xchg
lret
hlt
add
nop
je
add
in
mov
pop
add
push
push
loope
mov
mov
or
pop
test
pop
rcrl
sbb
push
push
xchg
out
sbb
mov
pop
outsb
pop
pop
or
stc
push
xchg
pop
add
daa
xchg
in
add
sub
sub
pop
pop
in
cmc
push
add
subb
pop
push
dec
mov
adc
dec
rolb
sbb
rclb
imul
dec
js
idivb
jno
add
xor
push
call
cwtl
pop
ss
jns
fmul
mov
push
xchg
popf
in
push
push
daa
add
mov
stc
imul
loopne
bound
test
aas
pop
xchg
lea
lret
lret
lahf
push
cmp
lret
out
scas
imul
push
pushl
or
xchg
mov
test
push
cmp
xchg
sti
icebp
sub
mov
fbstp
mov
fstpt
in
dec
sbb
fiaddl
push
cmp
clc
or
xor
cltd
insl
push
jno
cmc
aad
popf
inc
js
jmp
shrb
jmp
add
aaa
dec
and
cmp
lahf
out
sbb
cltd
lods
mov
shl
mov
mov
mov
xor
adc
add
nop
fdiv
xchg
mov
scas
and
daa
dec
add
mov
cmpb
xchg
push
sbb
ficoml
push
sarl
insl
adc
leave
in
mov
in
shrl
jl
mov
sub
push
pop
aam
lcall
mov
aaa
push
push
aaa
push
dec
leave
shll
push
jmp
inc
pop
or
roll
push
jae
shrb
cmp
xchg
je
inc
pop
mov
pop
adc
add
bound
int3
int3
add
push
pop
mov
mov
sbb
loope
cmp
lcall
adc
mov
pop
pop
sarb
repz
je
dec
fcomps
mov
adc
mov
mov
das
or
rcrl
and
mov
push
arpl
mov
xor
enter
push
sahf
xchg
sahf
add
and
and
and
sub
mov
ret
ja
dec
or
or
xchg
or
mov
ret
rclb
cmp
mov
sarb
mov
push
cwtl
loopne
pusha
imul
push
mov
in
push
pop
sub
lcall
cmp
fadds
lret
shl
call
mov
decl
mov
mov
out
test
clc
rcrb
sub
dec
out
test
sbb
adc
add
mov
cmp
or
rolb
andb
push
pop
add
sub
mov
rclb
leave
cmp
sub
movsb
mov
cmp
mov
mov
movsl
pop
leave
dec
push
roll
fwait
pop
dec
lea
add
test
add
cli
xor
sub
inc
aas
dec
jmp
jne
rclb
addr16
xor
inc
cmp
aas
lock
sbbl
jge
mov
es
add
call
icebp
dec
pushf
daa
or
dec
rolb
add
push
inc
mov
cmp
mov
psrld
jmp
and
cmp
lcall
test
xchg
pop
jle
or
mov
cld
or
mov
loope
xchg
push
add
adc
das
push
pop
loope
nop
std
mov
call
inc
or
jo
cmc
push
loopne
hlt
mov
or
les
mov
add
inc
xor
decl
mov
mov
inc
mov
mov
cmp
jl
dec
clc
addl
int
mov
cmc
sarb
sub
push
icebp
or
cmpb
mov
mov
add
or
lods
lods
add
push
mov
nop
and
dec
nop
add
or
cld
push
leave
push
adc
or
mov
inc
call
jne
pop
adc
lea
fwait
jb
push
inc
push
or
into
in
pop
test
push
inc
adc
mov
into
push
jb
imul
jmp
mov
xor
push
nop
xchg
arpl
mov
add
add
repz
push
add
in
xchg
or
in
push
notb
or
pop
xchg
les
movsl
scas
fstl
fwait
mov
testb
loopne
mov
jno
inc
push
enter
gs
pushf
data16
cmp
sahf
xor
popa
sub
mov
pop
movsl
adc
popa
imul
imul
jo
adc
or
adc
dec
cmp
mov
jae
and
mov
nop
mov
push
sbb
rorl
and
mov
adc
sbb
push
test
inc
mov
mov
in
mov
loop
rclb
loopne
jns
add
inc
or
xchg
xor
add
jp
adc
ja
adc
mov
or
cwtl
mov
stc
sub
outsl
lock
lret
lea
cmp
jbe
cmp
jbe
mov
sbb
pushf
pop
mov
mov
add
lods
xor
repz
mov
dec
mov
xchg
sahf
jbe
push
lret
sbb
adc
gs
insl
outsl
add
sbb
ljmp
rol
das
inc
push
xchg
lock
icebp
cmp
push
inc
testl
fldcw
push
fmuls
push
push
push
hlt
outsl
push
iret
cmp
xlat
jmp
push
and
and
sarb
jmp
movsl
xor
hlt
enter
xchg
popf
sbb
mov
test
mov
jae
push
jp
es
rcrb
pop
pop
shr
js
scas
bound
pushf
mov
lea
sbb
mov
loop
push
push
xchg
sbb
sub
pushf
pop
adc
mov
repnz
and
jne
mov
sbb
in
mov
into
mov
enter
int
push
mov
loope
int3
inc
and
sbb
jp
add
sbb
add
iret
xor
aas
jb
movsl
sub
into
hlt
or
pop
xlat
cmp
pop
add
pop
sbb
xor
adc
rorl
je
xchg
rclb
adc
push
xchg
and
loope
sbbl
in
xor
and
push
add
loopne
mov
cli
clc
xor
cmpl
pop
and
mov
pop
shrl
test
jmp
push
leave
push
repz
stos
inc
enter
scas
arpl
sbb
and
test
adc
adc
ss
fsts
mov
mov
jle
push
mov
adcl
jo
dec
mov
mov
fwait
sub
adc
loopne
mov
dec
pcmpgtd
dec
test
mov
dec
cmpl
pop
aad
cmp
shrb
inc
jle
add
inc
fsubrs
sbb
scas
add
push
cmp
mov
and
jbe
add
rorl
dec
adc
mov
add
push
lea
mov
add
or
xchg
icebp
add
fcmovnbe
cmp
fdivrs
mov
rorb
cmpsb
addr16
maxps
sbb
aam
lea
loope
test
mov
js
push
cmc
jge
push
push
dec
fwait
movl
aas
insl
mov
add
or
jge
cmp
inc
or
dec
cli
mov
faddp
fcmovu
jne
adc
inc
loope
mov
test
xchg
push
insb
or
sub
add
xorb
push
sub
jno
fwait
xor
je
shlb
in
test
inc
or
das
sub
shlb
or
push
push
mov
mov
push
or
pop
test
adc
data16
repnz
jp
lea
popa
add
pop
or
icebp
cmp
gs
inc
shrb
inc
incl
inc
dec
cmpsl
jne
mov
inc
add
enter
aad
pop
jmp
ret
sbb
jmp
push
lret
loopne
test
or
and
sub
lock
push
je
mov
mov
jne
rcrb
jne
and
outsb
nop
insl
ret
enter
lods
clc
popa
cli
sbb
into
test
inc
add
clc
das
mov
cmp
jbe
adc
lcall
hlt
sub
cmp
pop
push
sbb
lret
sbb
jge
in
sbbb
fisubl
adc
nop
cmpsl
or
mov
jo
sub
bound
cs
jmp
sbb
pop
clc
jne
mov
inc
or
pusha
sbb
fcompl
inc
pop
leave
or
popl
out
sbb
cld
jne
or
lcall
cmp
cli
adc
popa
sbb
sbb
pusha
in
ss
adc
cmp
sbb
lock
jmp
add
jecxz
jl
mov
jmp
jg
sub
xorb
test
scas
fs
aaa
add
xchg
xchg
enter
rcrb
jae
inc
jmp
add
dec
shl
mov
dec
lock
jbe
testl
jp
and
ljmp
adc
add
add
les
push
in
jmp
dec
sbb
sbb
in
dec
sbb
mov
sbb
mov
xor
addl
adc
fs
mov
mov
inc
add
loopne
or
add
dec
bnd
add
inc
notl
xor
shll
testl
jae
adc
iret
add
sbb
in
fildll
push
fiaddl
cmp
into
adc
movsl
xor
dec
mov
push
add
mov
push
and
push
sbb
mov
cmp
aaa
push
push
jo
mov
loope
adc
mov
push
das
sub
or
adc
lea
push
or
mov
sbb
mov
ss
and
sub
xor
sbb
into
loopne
js
xor
jl
movsl
jae
cmp
lcall
inc
fiadds
stos
and
lcall
movsb
jle
or
push
add
sbb
gs
and
jbe
add
or
movsb
xchg
int3
movsl
adc
push
dec
push
add
shlb
fs
adc
xchg
pushf
inc
test
inc
shrb
push
arpl
jo
push
inc
lret
iret
popa
mov
push
mov
daa
dec
xchg
or
arpl
repnz
jnp
scas
xchg
pop
adc
xor
or
inc
mov
adc
test
pop
sarb
loopne
test
mov
jp
push
and
fsubp
nop
ret
cmp
jb
mov
adc
fsubs
stos
lea
call
call
and
aam
pop
inc
push
cs
inc
add
pop
ret
in
ret
fmulp
adc
or
or
jo
pop
das
pop
inc
lret
test
xchg
imul
addl
or
jge
mov
dec
xchg
lods
or
hlt
loop
lds
lahf
inc
push
lock
or
push
into
pop
sbb
es
ret
pop
pusha
je
pusha
out
and
add
int3
add
rolb
add
adc
stc
pushl
cwtl
sbb
jnp
jne
jl
hlt
xchg
sbb
add
fsubl
aas
lods
sub
jbe
fsubrl
loopne
mov
jmp
pop
or
mov
lahf
stos
call
xchg
sbb
data16
leave
cmp
jnp
leave
mov
mov
cwtl
add
ja
sbbl
int3
iret
pop
xchg
xchg
inc
xchg
dec
nop
lock
pop
push
dec
mov
test
or
adc
test
mov
movsl
push
lods
inc
dec
lahf
xor
push
out
mov
dec
push
inc
push
fld
inc
add
in
je
mov
or
inc
mov
inc
leave
rcrl
stos
pusha
and
push
ret
loop
mov
imul
push
add
push
sbb
pop
mov
lock
loopne
mov
insl
stos
push
pop
push
inc
adc
jo
stc
hlt
mov
and
dec
dec
dec
je
imul
xchg
mov
loop
fidivs
in
xor
cmp
je
fdivrp
fldt
pop
jne
mov
cmp
addr16
je
cmp
jne
mov
sbb
xchg
lock
dec
lea
testb
or
mov
dec
xor
push
cmpsb
mov
dec
fdivrs
sub
inc
adc
je
testl
sub
sbb
cld
cmp
jbe
push
sti
incl
pop
add
inc
cmp
je
sub
inc
jmp
inc
and
xchg
cmp
pop
inc
insl
and
pop
mov
jbe
jno
loopne
add
cmpb
cmpsb
repnz
je
aam
int
jmp
mov
or
adc
into
inc
in
sbb
jmp
adc
cmp
in
les
cli
adcb
shll
xchg
cmp
add
insb
outsb
mov
cmpb
bound
pop
cli
mov
stos
test
push
leave
xor
pop
jb
js
mov
js
sub
jle
lcall
jge
cmpsl
add
dec
sbb
shrb
push
mov
or
in
inc
popa
and
pop
mov
fdivrl
sbb
and
stos
loop
pop
in
movsb
outsl
sbb
fsubs
das
adcb
add
jae
mov
add
movl
js
mov
jecxz
add
jmp
pushf
aas
insb
sti
and
xor
jp
or
int
cmp
js
fs
jne
xor
and
lock
aas
push
mov
mov
or
push
mov
sbb
in
das
jmp
dec
shlb
sbb
inc
sub
fs
rcll
adc
insb
mov
pusha
call
xchg
or
int3
push
add
mov
shr
lret
int3
inc
jg
or
jge
mov
xor
and
es
sub
mov
jle
jmp
or
jl
or
adc
mov
inc
test
jbe
lea
cmp
clc
mov
push
hlt
pop
arpl
pop
add
out
add
adc
je
test
jne
pop
les
sub
jb
cmp
inc
clc
add
adc
test
and
jae
movb
inc
gs
es
xchg
mov
dec
sbbl
xchg
data16
mov
inc
or
xchg
ljmp
adc
add
mov
or
loopne
add
daa
rol
cwtl
sbbb
inc
push
roll
lcall
insb
mov
push
mov
mov
mov
in
jae
ret
add
mov
cmp
mov
inc
jo
xchg
mov
push
push
jns
add
dec
push
test
mov
ret
add
scas
orb
lret
jne
and
fistps
mov
jne
xchg
pop
cld
mov
push
ret
push
push
push
imul
and
inc
push
or
mov
xchg
add
jg,pn
mov
out
cmp
addl
xor
mov
ret
xor
rcrb
jecxz
cmp
iret
or
jp
sub
push
adc
push
mov
pop
adc
cmp
out
push
andl
ljmp
jmp
fldl
inc
and
mov
sbb
cmpsb
mov
shrb
jne
cmpsb
or
je
out
ja
enter
jmp
andl
sub
fs
pop
cltd
aaa
push
outsb
sbb
jp
inc
mov
pop
daa
cmp
hlt
sbb
cmpsb
or
adc
xor
and
push
pop
push
movl
loop
pop
mov
add
jo
push
push
lahf
jbe
rolb
iret
push
xchg
add
inc
xchg
adc
jle
push
mov
mov
rclb
add
mov
xchg
lahf
mov
cmp
pop
jmp
int
mov
shl
ds
xchg
inc
xchg
sbb
push
pushl
mov
std
pop
jne
and
call
push
pop
or
lods
cmpl
sbb
cmp
shrl
dec
lea
cmp
cmp
pop
mov
or
pop
sti
dec
movsb
push
push
inc
adc
pop
xor
jbe
mov
pusha
mov
lea
push
gs
add
sbb
popa
sti
inc
inc
fwait
cmp
cld
pop
pop
nop
std
jo
dec
push
mov
cmp
mov
cmpsl
popf
dec
push
or
dec
push
mov
push
mov
xchg
stos
pop
es
lock
xchg
sbb
cmp
pop
je
test
dec
push
inc
xlat
loopne
inc
inc
jmp
xor
push
insl
add
dec
fs
and
xchg
adc
or
push
push
dec
mov
or
pop
xchg
popa
shll
ret
or
mov
push
in
clc
mov
jg
mov
dec
lea
sbb
outsl
xchg
sbb
lods
adc
or
push
in
mov
adc
add
sahf
mov
mov
push
aaa
les
les
cs
add
pop
add
lret
les
fiadds
mov
xor
or
subl
adc
push
push
andl
ret
or
sti
pusha
jb
push
mov
decl
roll
jbe
data16
call
push
rorb
test
in
cmp
xchg
lock
sahf
sahf
cmp
push
and
cltd
adc
out
inc
adc
or
push
ljmp
popa
imul
add
gs
lahf
dec
cmp
outsb
jb
add
popf
leave
imul
test
xchg
addl
addb
xchg
xor
pop
out
and
movsl
es
fadds
mov
or
subb
fstl
or
in
xchg
fmuls
xchg
pop
xchg
sbbb
add
in
jp
xchg
xlat
mov
jae
repnz
sbb
call
faddp
sbb
incb
mov
rolb
enter
sub
fs
or
sbb
push
and
dec
add
add
sbb
push
or
out
inc
add
cwtl
cmpl
dec
push
xor
in
mov
push
push
lret
push
cmp
and
jne
xor
sarl
sub
filds
xor
insl
jnp
das
movl
add
js
scas
inc
inc
pop
loopne
cmpl
fcmovb
in
andl
push
add
inc
xor
mov
fisubl
or
xchg
push
jmp
bound
and
fucom
push
fstps
cmp
mov
loopne
push
xor
inc
mov
or
adc
cmc
or
push
cmp
mov
sbb
jp
adc
popa
pop
mov
js
mov
test
test
dec
cmp
adc
jb
mov
push
adc
mov
mov
add
ret
loope
mov
jnp
pop
mov
insb
ja
dec
cmc
xchg
jne
mov
shlb
lods
fwait
xor
rcr
shl
xchg
fcoms
into
lcall
xlat
push
aas
je
cmp
push
pop
jne
mov
test
cmpsl
jne
push
mov
or
pop
jne
pop
inc
stc
adc
call
adc
xorb
add
inc
fisubrl
xor
push
cltd
jecxz
in
jne
jmp
sbb
sub
mov
mov
push
sub
fsubrp
addr16
jmp
jnp
andl
fldl
add
add
sbb
mov
mov
push
sti
inc
ss
dec
mov
mov
adc
int
sub
jg
add
jge
sbb
add
ljmp
pop
and
mov
sub
decb
adc
and
es
mov
mov
js
pop
xchg
push
js
and
jb
out
sbb
pop
add
scas
or
inc
decb
fadds
ja
or
or
ret
push
mov
inc
add
inc
pop
or
les
push
rclb
push
les
cmpl
adc
push
movsl
or
les
mov
add
mov
sbb
adc
mov
push
jno
sub
or
in
mov
pop
pop
cs
lret
pop
pusha
pusha
or
sub
adc
and
xchg
jae
sub
push
add
push
xor
add
dec
shrl
psubb
push
fisubrl
push
les
dec
or
push
lret
mov
loop
adc
and
push
andb
push
rcll
lret
add
push
adc
add
aad
nop
inc
push
sbb
and
or
inc
adc
ror
lods
or
xchg
adc
pusha
sbb
aas
sub
add
les
push
insb
or
mov
or
jne
mov
push
test
push
xor
es
mov
lock
sbb
jle
cmp
pop
ficomps
cmp
or
inc
push
dec
mov
sub
pop
jmp
shr
mov
lea
aam
je
into
or
xchg
mov
jmp
mov
sub
test
addl
fwait
sbb
int3
das
stos
lods
je
lock
test
jno
push
sub
mov
or
push
xor
sti
es
sti
cmp
insb
xchg
test
pop
push
mov
mov
sbb
sub
enter
inc
dec
test
lods
mov
mov
sbb
or
cmp
jo
outsb
jbe
cmp
je
lret
mov
in
and
push
mov
je
mov
cmp
cmp
dec
add
ss
in
imul
fs
and
xor
add
sbb
mov
adc
je
sbb
cmp
and
pop
sbb
pop
and
rcrl
mov
bound
mov
add
pop
sbb
pop
mov
sbb
push
sub
sbb
fs
adc
and
mov
into
sbb
jbe
push
cvtps2pi
mov
jne
mov
cmp
adc
call
add
in
jl
mov
xchg
lock
cmp
jne
or
or
push
fs
and
cmp
out
mov
cld
adc
sbb
sub
mov
je
or
inc
ds
cs
int
add
cmp
sub
js
imul
je
or
ds
add
push
mov
adc
or
cwtl
and
push
or
cmp
jge
in
sub
add
dec
sti
scas
or
mov
mov
jg
in
je
divb
call
mov
mov
jle
or
push
inc
add
ror
in
data16
mov
jmp
push
jl
mov
jb
xor
inc
sub
fdivrl
lea
adc
inc
hlt
mov
add
jp
lock
hlt
or
dec
js
arpl
lock
loopne
loop
inc
inc
mov
hlt
cmp
ljmp
add
push
pop
bound
les
lds
add
jp
cmp
push
jecxz
mov
clc
wbinvd
jnp
ret
lock
outsl
mov
and
rcl
add
pop
rorl
xchg
jg
fcoms
pop
xor
pop
lea
add
push
orl
int
and
call
cmpl
adc
add
fisubl
mov
adc
mov
hlt
test
lret
pop
leave
das
je
ret
in
mov
mov
js
out
adc
mov
int
sbb
inc
pusha
scas
xchg
push
cmpb
pop
sub
jns
add
mov
xor
push
into
iret
xor
imull
and
xor
add
or
sbb
inc
add
sub
in
cmp
es
jb
fsub
push
adc
js
lods
popf
pop
sbb
push
adc
mov
push
test
pusha
rorb
je
adc
repnz
or
mov
sbb
mov
dec
dec
clc
jmp
sub
mov
pushf
loop
pop
adc
nop
lock
das
jmp
push
sub
mov
add
sub
mov
sub
rclb
fsubp
out
push
cmpsl
imul
aas
ss
loopne
push
jmp
mov
icebp
add
clc
insb
pop
in
sbb
inc
pop
push
xchg
dec
push
orb
mov
inc
xor
xor
or
mov
add
adcl
lock
xchg
mov
addb
jg
jbe
push
aas
in
paddb
shr
mov
add
lock
push
mov
dec
sbb
adc
lret
rorb
enter
dec
arpl
xor
fsubrl
and
lret
ret
loopne
jnp
xor
lods
push
sub
mov
aam
add
scas
mov
pop
and
mov
sub
dec
cltd
sbb
sbb
gs
pop
pushf
jb
in
lret
push
mov
roll
test
cmp
inc
mov
das
xchg
inc
cmp
jl
jmp
in
push
push
pop
pop
mov
mov
cwtl
add
cmpsb
stos
cmp
sbb
add
ret
add
sti
in
movsb
mov
push
dec
jmp
notb
loop
jmp
jno
fsubrl
fidivl
lret
into
jne
sub
xchg
lret
pop
push
shl
ljmp
adc
lahf
push
lea
mov
mov
cmp
pop
sbb
and
add
or
adc
rep
clc
int3
add
or
and
jg
fadds
cmp
jmp
mov
loop
clc
inc
push
not
mov
xor
add
ja,pt
movsl
scas
inc
ds
lret
push
push
or
xor
in
popf
mov
jmp
push
inc
add
imul
or
add
push
in
add
int3
or
aas
ret
loope
sub
or
dec
je
loope
or
sbb
pop
or
cmovs
push
xor
cmp
and
or
aas
in
push
add
lret
pop
xor
out
or
ret
jecxz
arpl
psubusb
or
push
sarl
faddl
es
push
push
and
inc
out
icebp
inc
shl
xlat
mov
je
jne
sbb
sbb
popa
pop
mov
sub
pop
mov
cmp
lock
push
push
fs
xchg
add
out
adc
ljmp
or
cmp
push
mov
sbbl
mov
xchg
mov
xor
add
pop
jge
loopne
push
xchg
jle
jne
popa
inc
jmp
test
dec
nop
push
add
pop
jl
repnz
push
push
loopne
out
sbb
add
fnsave
clc
xchg
sarl
test
adc
inc
nop
mov
in
ja
call
jo
movb
cltd
jo
add
scas
or
jo
repz
adc
xorl
pop
xchg
and
sbb
pop
imul
mov
sbb
ljmp
iret
mov
mov
jge
je
mov
stos
pop
movsb
mov
or
dec
loopne
mov
dec
bound
nop
out
mov
push
push
loopne
adc
sub
scas
inc
jle
sub
ud2
enter
xor
cmp
mov
cmp
xor
scas
sub
mov
or
bound
sub
jo
data16
mov
inc
out
xchg
hlt
imul
test
cmpsl
mov
stos
dec
popf
add
shll
cmpsb
add
popa
lods
daa
add
jo
loope
inc
push
add
sub
xchg
mov
pop
loopne
popa
mov
jo
adc
add
xchg
sub
add
xlat
data16
inc
xor
jl
push
leave
fdivl
dec
subl
jae
outsl
adcb
iret
or
dec
xchg
adc
pop
pusha
mov
sub
adc
dec
negl
popa
adc
pop
js
ljmp
incl
add
cmp
adc
ja
push
and
out
ja
xlat
mov
push
pop
sbb
stos
rcll
sbb
pop
rcrb
mov
inc
dec
pop
and
push
pop
inc
sub
pop
pop
mov
or
or
add
je
dec
imul
push
adc
enter
imul
or
mov
movsb
nop
or
loope
js
je
mov
push
jae
sbb
sbb
jl
xchg
add
cmp
inc
xor
data16
addl
dec
jns
xchg
dec
jnp
cltd
rcrl
push
push
mov
jno
lds
pop
dec
imul
sub
mov
aad
push
stc
sbb
scas
lea
push
ret
xorps
rorl
or
pop
push
sub
or
sbb
fadd
and
push
ss
cs
icebp
cmp
jnp
dec
dec
scas
outsl
inc
pop
push
daa
ss
mov
pop
xor
push
data16
mov
xor
mov
cmpsl
mov
sbb
dec
adc
xchg
or
jge
or
push
pushf
jge
add
fxch
pop
gs
pop
leave
aam
imul
mov
add
sbb
and
adc
movl
addl
dec
jnp
movsl
sbb
inc
cmp
stos
addr16
and
inc
sbb
push
push
pop
out
orb
bt
xchg
pop
inc
icebp
ds
jbe
mov
and
add
adc
cwtl
xor
mov
mov
clc
jno
stos
ret
out
scas
or
je
inc
adc
push
and
or
out
sub
xchg
dec
movsb
addb
cs
adc
loopne
cli
xchg
or
and
cmp
push
pop
decl
xchg
sbb
shrl
sbb
pop
adc
call
mov
or
test
and
dec
cmp
jbe
xor
leave
inc
and
dec
imul
push
sub
dec
aam
sub
adc
push
pop
adc
inc
daa
mov
push
mov
push
adc
inc
in
jp
out
fstl
pusha
mov
sbb
dec
mov
xchg
dec
je
sbb
fcomps
pop
add
mov
xor
mov
adcl
adc
lahf
cld
enter
jmp
jge
adc
arpl
add
aaa
je
inc
pop
bound
mov
cltd
repz
push
addb
xchg
aaa
pop
call
and
mov
xor
lock
cmpl
fcoml
adc
and
cld
aam
outsb
dec
push
mov
mov
mov
cmpl
jne
sbb
ds
inc
and
std
mov
push
int3
mov
and
push
jmp
ss
inc
pushf
cwtl
fs
or
mov
inc
lods
add
dec
fidivrl
lods
or
inc
mov
xor
jno
je
dec
inc
loope
push
xor
ret
inc
mov
xchg
cmp
cmp
cltd
jmp
xchg
push
sbb
fs
inc
add
sarb
mov
pop
push
loope
xor
sub
nop
sub
cmp
out
or
rcr
pop
jmp
adc
push
xchg
cmp
mov
push
jne
jne
scas
jge
bound
mov
seta
outsl
les
sub
clc
xchg
adc
push
rcr
mov
and
sbb
lea
push
inc
jbe
movsb
iret
orl
fstpl
jl
fwait
data16
pop
add
rorl
sahf
inc
loopne
in
xchg
popf
filds
sbb
clc
out
mov
aam
sahf
pop
jbe,pn
insb
sarb
mov
test
mov
xchg
sbb
je
mov
xor
mov
mov
jno
push
dec
dec
loopne
pop
insl
and
jg
lods
or
mov
cmp
jne
cmp
test
push
fsubr
adc
popa
subb
ret
adc
jo
js
push
dec
jp
int
dec
xchg
sbb
add
shll
cs
sbb
xor
adc
lods
adc
jo
aas
insl
in
lldt
mov
sbb
sbb
push
mov
cmp
and
inc
cmpl
add
jmp
mov
mov
outsb
and
mov
mov
xchg
test
outsb
pop
scas
sub
push
push
pop
test
xor
dec
repz
adc
sub
test
push
cs
push
or
push
xchg
sbb
imul
mov
sti
sub
xchg
xchg
or
pop
lcall
push
xor
mov
inc
dec
icebp
mov
bound
js
mov
pop
push
add
jo
sub
mov
mov
test
xchg
mov
loopne
sub
xchg
jne
mov
jmp
cmp
aam
and
and
mov
and
shll
mov
shl
push
mov
hlt
das
insb
xor
leave
sub
lock
mov
cmp
rcrb
jbe
sub
add
sbbb
push
cwtl
test
xchg
push
push
in
xor
mov
stc
cmc
pmaxsw
sarb
outsl
cmp
jb
adc
ret
mov
push
sarl
mov
xchg
test
mov
sub
mov
xchg
cmp
cmp
mov
mov
pop
pop
addr16
jmp
subb
stos
hlt
jp
xchg
scas
xchg
push
cmp
jne
or
hlt
sub
add
out
xor
sub
dec
add
hlt
ja
shlb
adc
xor
pop
into
adc
or
sbb
adc
rclb
pop
lret
or
sub
cmp
mov
test
pop
inc
mov
cmp
or
enter
sub
or
subb
add
push
imul
leave
orl
adc
imul
popf
adc
cmp
adc
xchg
pop
push
adc
inc
dec
lea
fnsave
popf
push
push
mov
xchg
xor
ds
stc
enter
jmp
test
out
test
pop
add
mov
lret
lods
les
ljmp
imul
test
testb
pop
add
jp
cmp
cld
mov
out
fld
xchg
dec
clc
mov
sar
aas
mov
imul
invd
dec
loope
adcb
add
jbe
jnp
jge
popf
loopne
adc
push
sbb
ficompl
inc
add
inc
sbb
popf
xchg
and
xchg
or
mov
adc
sbb
in
loope
adc
push
es
adc
adc
and
adc
adc
mov
icebp
inc
fs
adc
idivb
pop
subl
je
or
add
loop
out
inc
int3
les
add
movsl
nop
mov
push
xor
leave
bound
mov
jnp
movsb
mov
mov
dec
pusha
test
push
out
lret
les
inc
pushf
mov
shlb
popf
mov
sub
aas
jae
jl
inc
and
das
jmp
cmp
incb
fcompl
sub
cld
cmp
cmpsl
std
ja
bound
ja
adc
xlat
sbb
movsl
pusha
es
sub
lea
in
mov
cmp
add
mov
push
dec
pop
data16
imul
fists
pop
in
pop
sbb
daa
lret
nop
insb
xor
mov
push
add
xor
sbb
cmp
inc
imul
jne
popf
mov
sbb
test
ja
test
mov
pop
pop
es
and
push
movsb
not
sbb
dec
pushf
jecxz
rolb
xchg
sbb
negl
cltd
popf
push
sub
inc
inc
jecxz
push
add
mov
pop
xchg
mov
nop
push
fdivr
push
mov
xchg
movsl
mov
in
jb
iret
adc
pop
sub
mov
pop
mov
xor
and
mov
push
cmc
cmp
out
push
pushf
sub
arpl
out
fisttpll
testb
mov
shrl
dec
test
popa
and
and
mov
xchg
push
inc
pop
or
rsm
push
in
xor
inc
test
cld
mov
dec
jno
xchg
adc
pop
pop
jmp
mov
enter
sbb
or
pop
or
xor
xor
jle
jge
cmp
into
or
pop
add
orb
pop
xchg
ljmp
pop
cmp
sub
jno
lods
dec
push
je
or
dec
push
insb
sarb
fucom
sbb
lock
insl
lcall
in
std
sahf
cs
push
pop
loop
and
into
test
pop
and
push
into
in
jmp
pop
lock
rorl
xchg
add
shr
xor
mov
pop
add
out
cmpsb
or
push
adc
mov
pop
movmskps
mov
pop
pop
sub
cmc
aad
inc
fidivl
adc
sbb
cmpb
inc
loopne
mov
in
inc
or
repnz
or
and
pop
pop
add
inc
or
int3
add
push
in
test
inc
inc
pop
clc
pop
jle
loope
add
and
jle
int3
adc
test
daa
enter
clc
push
pop
sbb
shll
inc
push
setno
outsl
mov
daa
clc
addl
test
sbb
push
pop
cs
test
sub
jne
add
mov
xchg
push
into
test
adc
xchg
add
and
mov
add
mov
fidivl
dec
lcall
adc
or
push
sub
push
xchg
inc
push
mov
jno
push
rcrl
leave
inc
or
jge
ror
repnz
ljmp
lea
add
jbe
adc
jno
mov
inc
test
data16
push
jg
add
xchg
repz
add
aas
cld
ja
movb
test
je
push
push
mov
stos
clc
jmp
cmpl
push
mov
sbb
cmpsl
addb
lret
gs
adc
outsl
ljmp
add
and
rorl
mov
cmp
or
lock
jmp
imull
ss
out
outsl
and
adc
pop
inc
stos
adc
ljmp
xchg
mov
psubw
mov
add
cmp
xchg
cmp
and
jmp
xchg
roll
push
add
mov
mov
add
enter
nop
jmp
in
inc
sbb
movsb
mov
jne
mov
loop
add
pop
xchg
pop
mov
dec
lds
sbb
or
mov
adc
in
arpl
mov
mov
mov
sub
add
sbb
xor
bound
sub
push
int
mov
adc
orl
js
sub
jo
dec
jmp
jne
ss
adc
push
dec
fsubl
andl
mov
sub
lea
mov
lea
pop
cmp
xor
jecxz
and
ret
fisttpll
aas
mov
shll
or
mov
mov
sub
mov
arpl
mov
hlt
cmpsb
lea
and
adc
pop
lret
jecxz
xchg
jns
push
inc
push
imul
pushf
pop
push
test
mov
call
inc
xchg
dec
or
test
add
push
and
add
push
pop
enter
pop
lcall
sub
fsub
xor
jl
ret
cmp
jne
std
adc
stos
pop
sub
test
adc
add
xchg
loopne
scas
push
pop
cmp
movsl
aas
pop
jbe
lcall
push
lret
xor
add
add
and
imul
add
dec
bound
mov
roll
inc
dec
and
add
add
adc
sub
lods
popa
ret
addl
add
psubq
add
add
inc
sbb
lcall
xor
dec
sbb
movsb
cltd
cld
and
add
inc
adc
fcmovne
inc
std
int3
push
xchg
jmp
fs
enter
mulb
loope
xchg
loope
fdivr
lret
or
mov
or
test
stos
insb
rol
sub
je
dec
mov
or
loop
mov
icebp
and
rolb
xorb
xchg
add
jnp
inc
rcrb
stos
in
mov
add
into
sbb
inc
jae
lea
jmp
cmpl
sub
shll
xchg
sbb
pop
mov
jnp
or
xor
mov
push
jmp
test
mov
mov
pop
and
sbb
fwait
std
cmp
xor
xor
jl
dec
fistl
fs
xchg
out
inc
test
mov
ljmp
pop
hlt
outsb
nop
pop
jo
bound
push
sbb
mov
cmp
das
js
daa
aad
jbe
cmpsb
pop
push
inc
cmpsl
or
loope
xchg
ja
out
cmpl
adc
data16
or
sub
push
add
xor
cltd
sbb
mov
xor
pop
dec
cld
sti
add
sbb
push
mov
lods
pop
pop
in
or
add
sub
push
jmp
pushf
sub
sahf
pop
test
jo
xchg
pop
mov
xor
push
hlt
cmp
std
add
insl
mov
or
or
adc
js
enter
add
mov
mov
push
push
or
pop
enter
xchg
push
je
cwtl
xchg
mov
loope
jmp
cmp
push
or
push
xorb
rol
mov
push
stc
xchg
jnp
imul
adc
inc
pushl
xchg
and
adc
roll
xchg
pop
fisubrl
ret
add
in
mov
xchg
pop
dec
jp
in
int
fiadds
jmp
xor
mov
je
cmp
pop
mov
sbb
push
inc
push
and
inc
jo
addl
inc
and
and
dec
mov
inc
and
cmc
std
cmp
mov
add
dec
enter
push
test
jb
sbb
je
test
mov
push
or
test
add
cmp
push
pushf
push
and
pushl
push
xchg
or
inc
mov
outsl
adc
mov
or
aad
jmp
mov
mov
push
ret
testl
test
jb
testb
cmp
add
lahf
cmp
jnp
pcmpgtb
out
push
adc
pop
or
adc
fstp
jnp
cmp
inc
pop
add
push
cmp
data16
loopne
leave
add
or
cmp
or
je
test
dec
iretw
mov
xchg
clc
jne
mov
push
test
add
xchg
std
cmp
dec
or
sub
or
lock
es
add
lods
aas
sbb
dec
mov
xchg
inc
lcall
and
and
jns
test
js
or
jp
cmp
pop
pop
xor
cmp
call
and
sbb
roll
jne
push
js
jle
mov
loopne
fnstenv
fadd
inc
or
or
push
cs
repz
push
data16
test
aaa
mov
imul
xlat
or
ja
adc
mov
adc
inc
cmp
inc
in
ljmp
xchg
pop
pop
and
or
sti
cltd
pop
inc
mov
pop
pop
pusha
push
cmp
xchg
and
adc
push
hlt
neg
sbb
jle
xor
and
bnd
movzwl
push
cmp
rclb
mov
xchg
fiadds
jl
orb
adc
inc
test
and
or
js
mov
push
lahf
icebp
add
enter
sbb
decb
mov
adc
inc
add
cmpsl
sbb
popf
mov
insb
push
lret
mov
mov
cmpl
jne
cmp
jbe
or
jne
lock
in
inc
add
xor
cmp
or
lea
ja
pop
pop
xchg
sbb
push
xchg
mov
inc
cmc
jmp
fcoms
loope
pop
jl
fdivs
popa
shlb
cld
fs
pop
inc
and
or
sbb
sti
aam
xchg
jae
cwtl
sbb
fadds
push
or
sub
jne
mov
mov
call
lea
adc
inc
cmp
pop
test
push
jmp
in
mov
pop
popa
cwtl
sub
rorl
xor
cltd
and
add
lea
clc
mov
push
shlb
cmpsl
pushf
or
push
xchg
ret
jnp
ret
adc
add
arpl
dec
ret
and
pop
mov
ljmp
mov
test
popf
test
cld
adc
inc
in
xchg
push
jb
mov
lea
push
or
mov
mov
xor
inc
push
or
das
adc
andl
mov
ret
and
pop
daa
test
push
inc
scas
fiadds
jne
jmp
test
mov
or
xor
jnp
inc
sbb
pop
xor
or
cmpl
add
and
mov
scas
dec
xor
je
pushf
out
scas
dec
inc
mulps
and
xchg
cld
adc
adc
and
rcr
sub
cmp
mov
outsb
lock
push
shlb
push
pop
mov
jmp
and
or
xchg
xchg
jp
in
insl
cmp
sub
popf
in
out
or
jb
add
xchg
cmpl
enter
or
shrl
cld
fadds
jo
or
add
into
and
xchg
jmp
imul
shl
jne
cmp
push
jb
push
jae
push
notb
add
cld
testb
add
dec
jp
sbb
or
mov
dec
loopne
mov
cmp
jle
out
add
push
lods
cs
adcl
mov
sbb
mov
pusha
xor
je
push
dec
call
add
fsubl
mov
std
adc
sbb
and
jb
jno
pop
add
mov
jg
sahf
inc
add
dec
add
jns
popf
call
mov
fwait
jo
sbb
and
pusha
mov
in
ds
sahf
stc
testl
sbb
sbb
add
in
incl
add
or
jecxz
xchg
add
scas
adc
out
outsl
out
arpl
sub
push
sub
nop
jle
test
push
movsl
jnp
jo
xlat
and
shll
dec
sbb
cmpsb
push
ucomiss
test
dec
ja
or
xor
inc
scas
xor
in
rol
and
jmp
ret
add
jmp
xlat
jns
rolb
addr16
and
rcr
pop
pop
jl
pop
pop
xor
and
mov
inc
jae
push
and
and
jle
xchg
pusha
inc
subb
xor
or
sub
lods
lds
inc
sub
pop
push
and
and
les
dec
lock
loop
insl
je
mov
and
sbb
push
xor
in
into
ret
jne
mov
out
pusha
dec
pushf
push
push
aam
push
sbb
sbb
fsubs
popf
fwait
add
sbb
fsubl
or
add
mov
out
es
xchg
test
shrb
mov
add
lods
mov
faddp
pop
or
insb
xchg
call
jge
mov
inc
orl
fdivrs
cmp
movsb
pusha
daa
addr16
add
xor
test
pop
ja
lock
mov
mov
inc
push
sbb
cmp
add
or
outsb
cmp
sahf
adc
pop
sbb
subl
loop
sti
jb
pop
jae
pop
mov
adc
adc
jnp
test
xchg
lea
filds
push
add
outsb
shrl
test
sbb
add
popf
pushf
mov
or
imulb
and
mov
or
pushf
sbb
je
dec
adc
loopne
pop
lret
push
jae
lea
ja
sbbb
lock
or
or
aam
mov
ror
enter
inc
arpl
xchg
stc
and
sub
xchg
add
pop
mov
lea
out
mov
push
dec
or
pop
add
dec
mov
ret
iret
lea
inc
xchg
cmp
scas
xor
jae
and
ds
jmp
push
inc
sub
dec
sbb
orb
push
xchg
enter
ds
sub
nopl
add
loope
cmpsl
mov
mov
sbb
rorb
ds
or
lds
pop
push
sbb
adc
lock
psraw
mov
je
mov
cwtl
add
pop
pop
inc
pushl
adc
or
adc
outsl
mov
imulb
inc
mov
adc
das
dec
and
sub
inc
push
push
in
adc
mov
pop
jne
lret
or
mov
add
fisubrs
scas
in
jle
movsl
sub
popf
jge
add
ja
and
cmp
aaa
fisttps
popf
jmp
or
fsub
add
dec
or
adc
push
mov
add
xor
push
and
mov
repz
gs
lahf
sbb
or
loopne
or
mov
xlat
mov
pusha
pusha
mov
std
dec
les
je
lea
push
cli
adcl
push
inc
jne
out
jae
inc
cmpl
adc
xorl
lock
sub
in
dec
mov
xor
je
inc
and
pushfw
leave
push
add
pusha
mov
sbb
iret
or
adc
jecxz
fidivs
je
dec
add
cmp
bound
jmp
and
icebp
clc
std
incl
mov
pusha
outsb
add
xor
add
dec
ss
clc
push
sbbl
jo
sbb
dec
pop
push
lock
mov
mov
jbe
xor
cmp
inc
js
loop
mov
ljmp
push
sub
add
jo
sbb
decb
mov
push
adc
dec
inc
ja
add
jge
xor
pop
ret
inc
mov
mov
or
test
scas
fdiv
loopne
jge
xor
lret
sbb
leave
pusha
mov
fdivl
cmpb
xor
fnstenv
inc
jmp
mov
cmp
cmp
sub
mov
dec
leave
adc
lea
out
andb
mov
xor
jge
dec
cmp
test
outsb
xor
and
push
jge
xchg
fdivs
sub
sub
out
insl
or
lret
adc
jmp
cld
mov
out
insb
divb
cmpsb
push
divb
add
cmc
dec
in
sti
sbb
cs
fmuls
int3
mov
jae
push
sub
dec
mov
xor
mov
test
shl
push
add
repz
push
cmc
cmpsl
test
cmpsb
testb
cmp
enter
lods
addb
js
sbb
xchg
pushf
mov
or
mov
mov
or
aad
xor
sar
fistpll
jmp
adc
cltd
add
inc
xchg
imul
sub
int
or
cmp
jge
cmp
in
xchg
cmp
cmp
dec
and
or
mov
cmp
jb
pop
add
cmpb
mov
inc
add
pshufw
jp
test
push
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
insl
lret
cli
cltd
and
xor
push
add
sahf
and
xchg
pop
or
out
cli
sbb
sbb
std
cmc
imul
test
adc
sbb
loop
into
test
pop
daa
adcb
xchg
arpl
imul
shlb
pop
int3
push
lahf
add
es
addb
in
mov
or
or
addb
and
push
jbe
adc
inc
jno,pt
std
push
lret
inc
adc
rolb
sbb
into
and
stos
mov
daa
sbb
xor
cmp
rolb
push
push
mov
cmc
mull
sub
sbb
add
into
insl
fsts
or
xor
jg
adc
aad
pop
add
repz
mov
sbb
movsl
sbb
pop
sub
fildl
mov
xor
popa
rol
pop
in
dec
or
and
int3
arpl
lret
stos
and
jp
mov
adcb
and
and
sbbl
and
inc
xor
lock
jno
sbb
xchg
setl
inc
aas
mov
shl
repnz
mov
add
pop
and
mov
imul
in
xchg
push
push
ret
push
sarb
sub
das
ret
lret
dec
lret
or
cmpl
inc
pop
jne
pushl
and
scas
push
fldt
xor
inc
addb
shl
cmp
xchg
push
sub
adc
es
sbb
pop
adc
add
mov
or
loopne
inc
aad
push
add
jp
sub
or
ret
aas
jno
push
in
imul
mov
jb
fnsave
iret
cmc
mov
frstor
xchg
adcl
ljmp
test
add
sbb
jnp
sarb
inc
sbb
or
les
inc
inc
inc
pop
adc
es
ret
clc
mov
notb
adc
or
mov
dec
sub
push
jge
insb
cmp
push
or
push
scas
cmp
daa
fnstenv
inc
test
fs
pop
testb
lret
mov
mov
sbb
push
rclb
pop
push
loope
mov
xchg
mov
ss
out
ja
pop
xchg
lret
notl
mov
mov
mov
pop
cmp
les
jmp
and
or
dec
jnp
movsb
mov
pop
add
adc
popf
jp
jnp
pop
adcl
xlat
sub
pop
xor
add
xor
sub
jne
sbb
lea
add
or
das
lock
dec
add
mov
cmp
jmp
ss
add
mov
sti
or
loopne
or
sub
stc
ljmp
out
std
dec
add
inc
pop
push
lds
dec
subb
adc
pop
pop
add
cmp
fst
rcrl
dec
ret
adc
adc
push
add
lods
mov
push
or
popa
push
cmp
jne
inc
push
add
or
dec
movsb
pop
push
push
cmp
mov
cli
leave
xchg
cmpsl
addb
sub
addb
inc
scas
sbb
or
int3
push
in
or
jns
das
add
push
cmpsl
pop
and
inc
pop
ftst
inc
arpl
cltd
sub
mov
sub
pop
in
or
pop
cs
sti
sub
iret
mov
inc
add
bnd
mov
cmp
cmpl
popf
xchg
popa
sub
arpl
out
sub
sub
cltd
in
mov
sub
dec
jb
lods
sbb
mov
add
add
sbb
and
or
jo
xor
push
pop
push
mov
decb
cmc
inc
adc
js
loop
in
push
or
lds
sub
das
jmp
cmp
mov
shll
cli
push
clc
push
in
adc
js
fdivrl
sub
push
lods
insb
mov
sub
or
sbb
fidivs
ret
sbb
add
pop
out
nop
dec
push
and
push
jecxz
sbb
pop
pop
popa
or
jl
js
add
cmpsb
test
sbb
orl
and
push
push
push
scas
sub
cmp
aam
mov
inc
inc
lea
fs
test
pop
in
cmp
pop
adc
mov
xchg
mov
mov
pusha
cmc
inc
and
out
dec
mov
pop
jle
mov
mov
in
aaa
mov
dec
and
insb
sub
sbb
sub
in
jmp
add
dec
loopne
leave
xor
stos
push
or
jge
inc
popa
push
ljmp
pop
or
lds
push
jg
stos
enter
ja
imul
adc
rolb
or
xlat
daa
add
sub
aas
movsl
outsl
and
and
ret
push
xchg
add
addr16
cmp
idivb
mov
jns
cld
push
adc
gs
mov
out
cmp
sti
dec
scas
xor
inc
clc
xor
inc
push
movsl
ss
movsb
jne
into
cmpsl
pop
and
add
pop
loope
aad
lds
cs
xchg
loopne
sbb
push
and
pop
clc
popa
or
in
and
mov
imul
jp
js
inc
cmp
jno
loop
daa
jge
adc
xor
sarl
xor
cmpsb
test
es
adc
imul
mov
out
shll
pop
jl
subl
je
dec
loope
sbb
gs
sti
addl
push
add
imul
sub
int
pop
push
rol
jg
xchg
inc
lods
push
inc
or
lcall
lea
push
sub
push
movl
adc
dec
add
inc
or
mov
lods
xlat
add
dec
mov
rolb
cmpsl
mov
jecxz
ficomps
and
push
repnz
or
fsubrs
mov
test
push
dec
push
xchg
les
cmp
hlt
jp
gs
mov
or
mov
adc
test
inc
cmovle
pop
push
test
loope
out
push
data16
mov
jmp
into
out
add
in
loope
roll
sbbb
xor
int
or
push
mov
je
adc
pop
pop
mov
outsl
push
add
inc
xor
sbb
jne
es
adc
test
pushf
jl
mov
leave
mov
push
jne
sahf
pop
aas
lea
shl
nop
pop
ss
and
sub
dec
dec
loopne
mov
jae
iret
push
pop
sbb
push
push
ficoms
imul
inc
add
jo
sub
add
into
push
push
xchg
mov
inc
aaa
mov
cmp
in
xor
and
jg
xchg
adc
push
add
and
inc
setb
mov
push
pop
fstl
add
xchg
sub
in
mov
jle
add
aam
lods
xor
scas
push
ja
lock
cli
or
or
sbb
adc
add
push
sub
jno
push
adc
mov
call
add
xor
mov
imul
push
nop
subl
adc
cmovge
push
lret
fs
push
add
xor
jo
sub
mov
ret
pushl
cmp
jne
sub
push
pop
pop
sbb
adcl
roll
adcl
daa
bound
fadd
test
mov
inc
in
mov
jnp
mov
jno
aaa
adc
roll
rorb
filds
push
push
dec
enter
fadd
dec
xchg
sub
push
mov
repnz
push
sarl
mov
test
scas
btr
pop
lods
lods
pop
loop
push
ror
xchg
pushf
pop
addr16
rorb
popf
out
or
mov
addr16
into
rolb
out
rcll
imull
cld
in
sub
dec
sbb
push
xchg
or
push
jne
push
aaa
fbld
ret
push
leave
js
jne
adc
mov
or
pop
mov
jmp
jne
or
jne
icebp
cmp
jle
xchg
dec
mov
add
jb
mov
loop
pop
pop
js
popf
fists
lahf
cmp
fsubrl
lea
xchg
push
lret
ffreep
add
fsubs
sbb
mov
out
int
repnz
cld
testb
das
push
popa
inc
add
in
dec
add
xchg
jnp
jne
rorb
push
push
xchg
out
xchg
test
ja
movsb
inc
mov
hlt
xor
fidivrs
push
and
pop
push
jnp
xor
cmp
sub
mov
sub
in
push
or
in
jge
mov
inc
in
test
mov
push
adc
sbb
outsl
sub
lods
or
mov
push
sbb
sbb
scas
lcall
inc
xor
mov
out
pusha
das
aam
pop
mov
jg
and
mov
mov
insl
pop
mov
in
rcll
adc
push
jmp
and
pop
js
dec
sub
insl
fisubl
jl
cmp
sbb
sbb
flds
sub
sbb
add
cmp
insb
and
pop
jno
dec
aam
push
push
push
or
test
andl
inc
inc
pop
shrl
push
fistl
fstpl
jne
dec
add
insl
jne
xor
xchg
mov
inc
add
push
jae
push
add
jae
jns
push
je
xor
xor
fmuls
outsl
sbb
dec
insb
jne
pop
faddl
cmp
mov
testl
jmp
imul
xchg
cwtl
insb
add
and
sbbl
or
or
push
or
jne
mov
adc
ret
les
or
mov
lock
xchg
ss
cmp
adc
xchg
or
adc
call
in
add
dec
clc
mov
je
rolb
je
mov
loopne
xor
in
lret
aam
fidivs
arpl
sbb
pop
sbb
in
push
lods
sbb
cli
push
inc
cmp
fsubrs
dec
shrl
fdivl
sub
xor
mov
cwtl
jo
stc
shll
cltd
pop
cwtl
cmp
jne
or
or
inc
insb
nop
mov
mov
lret
cmp
iret
mov
push
mov
mov
add
lods
int3
int3
jp
or
or
sbb
sti
push
loopne
jecxz
out
shl
nop
pop
leave
add
or
into
in
sbb
inc
lret
leave
inc
orl
dec
add
jl
dec
or
add
or
and
movb
pop
daa
pop
sub
pusha
imul
add
push
add
pop
push
adc
cmp
push
pusha
fs
cmpsb
imul
out
add
pop
cmpb
xchg
sub
andl
add
pop
subl
pop
js
mov
add
push
out
xorl
int
pop
adc
and
pop
movb
sbb
mov
mov
cwtl
sbb
sbb
xchg
fmuls
imul
sbb
nop
add
js
jo
sbb
add
nop
fs
push
sub
sbb
clc
idivb
lret
pop
lahf
adc
mov
scas
dec
dec
lahf
push
add
lods
shll
loopne
cmp
out
xchg
inc
rolb
pop
sbb
dec
cmp
mov
aam
jne
cmp
lea
addr16
pop
adc
testl
adc
mov
gs
test
inc
dec
jge
daa
shll
push
test
or
fldl
sbb
xor
jne
sbb
add
cmp
jo
push
and
push
ret
xor
sbb
mov
mov
je
mov
mov
jl
dec
mov
or
and
test
in
push
add
test
outsb
dec
sbb
dec
inc
sub
xorl
test
xchg
jbe
pop
and
xchg
es
push
pusha
and
or
and
jnp
cmpsb
cmp
jne
mov
xorl
aaa
fnsave
cltd
pop
jne
orl
and
daa
inc
dec
repnz
pop
sti
xchg
inc
and
xchg
mov
xchg
inc
daa
mov
test
lsl
in
jmp
cmc
dec
mov
stc
frstor
outsl
xchg
fldl
sar
lds
add
iret
and
mov
xor
or
cmpsl
repnz
clc
and
mov
iret
in
mov
inc
xchg
les
ja
sbb
mov
add
sub
add
adc
pop
dec
pop
mov
cmp
mov
data16
cmp
je
xor
jge
xor
ja
arpl
mov
pop
lahf
and
push
push
js
pop
push
dec
mov
mov
pop
add
sbb
cmp
movsl
js,pt
loop
testb
fcmovu
cltd
and
roll
inc
sbb
call
fbld
into
dec
ja
test
push
inc
mov
or
push
ljmp
in
aam
push
mov
jo,pt
xor
stos
pusha
cli
out
fidivrs
push
push
adc
or
call
xchg
sub
pusha
push
addb
dec
dec
adc
xor
mov
or
xorl
aam
inc
es
push
lea
dec
mov
and
or
xlat
and
pop
xor
xor
outsl
rcl
push
cs
dec
or
loopne
xchg
sub
enter
mov
and
outsb
leave
mov
push
sub
or
fldl
adc
lea
dec
push
int3
mov
mul
decb
jo
pushl
and
mov
sbb
lods
adc
lods
xor
int3
lock
outsl
sti
sbb
inc
aas
inc
lock
mov
jne
orb
sbb
je
push
pusha
mul
mov
je
enter
pop
fs
pusha
mov
xor
push
scas
out
movsb
xor
add
lds
repz
adc
xchg
clc
xchg
push
xchg
inc
pushf
pusha
popf
imul
pop
cmp
je
popf
add
inc
or
push
arpl
imul
mov
lea
push
hlt
sub
mov
push
sub
inc
and
jmp
push
jne
test
inc
xor
dec
roll
movsb
andl
dec
dec
inc
dec
adc
jnp
xchg
or
xchg
lock
push
mov
xchg
lock
maskmovq
mull
jmp
mov
pop
xor
adc
or
fwait
cmp
xchg
push
sbb
movsl
movswl
add
fsubrp
push
mov
lret
add
push
and
adc
sub
sub
add
movsb
cmp
xor
loope
aad
or
or
pop
and
pop
sbb
lods
push
push
test
or
inc
scas
xor
fs
insb
es
icebp
and
faddl
rclb
pop
pop
mov
sbb
jp
test
and
adc
push
jne
adcb
out
inc
mov
xchg
in
insb
push
mov
cmp
push
test
popa
dec
in
xchg
popf
jecxz
mov
es
jmp
xchg
push
push
call
mov
dec
mov
adc
outsl
in
mov
mov
outsb
cmp
cmp
imul
mov
add
pcmpgtd
sub
cmpb
addw
fwait
sbb
add
js
and
and
or
pusha
sti
dec
push
lea
adc
sub
mov
sbb
dec
push
or
int3
leave
push
sbb
push
ss
pop
dec
push
pushfw
jo
dec
mov
push
js
sub
test
popa
add
sub
pop
rclb
cs
or
fstps
inc
pop
arpl
xchg
test
imul
js
dec
sbb
fcoml
cmp
or
outsb
test
or
sbb
inc
adc
pop
add
dec
pop
pusha
pop
dec
cmpb
sub
adc
push
fcoms
dec
in
sub
cmp
ret
jge
mov
mov
stos
push
sarl
adc
add
sub
sbb
jbe
and
das
push
mov
rcll
or
addb
mov
or
pop
out
loope
cmpsb
add
out
nop
cmp
popa
and
sub
mov
pushf
loop
sub
cltd
ret
inc
and
adc
xor
int3
dec
movsl
ficoml
and
out
ret
fistpl
xor
mov
pop
and
inc
jno
sub
or
dec
inc
loop
push
mov
lds
xor
push
push
push
or
ja
ficomps
jbe
mov
inc
pop
mov
mov
cmpl
pop
aam
gs
adc
icebp
mov
fmuls
push
pop
imul
cmc
dec
cmpl
pop
add
push
pop
jb
xorb
sar
jle
push
xor
ret
xor
push
lcall
lret
outsl
adc
dec
pusha
xor
mov
fnsave
or
sysret
sbb
add
sbb
xor
and
push
adc
or
adc
daa
rcl
pusha
popa
popa
cmp
lock
push
dec
xchg
adc
jb
or
int
orl
xor
or
xchg
push
cmp
and
dec
int
shl
cmp
repnz
fdivp
sub
jns
push
xor
fisubrl
and
aam
mov
sbb
int
cmp
je
or
divl
dec
and
shrl
subl
clc
test
mov
push
sub
aaa
test
and
push
push
adc
sub
cld
sbb
push
and
or
shlb
js
outsl
pop
fistl
adc
jb
inc
js
and
sub
loop
jbe
adc
add
sub
shrb
add
jg
adcb
adc
jp
mov
popa
lret
adc
fcomps
in
enter
adc
je
sbb
sbb
in
cmp
push
out
dec
and
out
inc
mov
adc
inc
das
fucomp
cmp
mov
push
cs
or
aaa
imul
push
and
pop
incl
adc
lds
movsb
add
push
xchg
cmpsb
es
pop
pop
cmp
ficoml
or
imul
dec
subb
fbld
xor
call
inc
pop
mov
mov
popf
dec
ror
jo
push
ret
mov
sbb
cmp
cmpsl
xor
shll
xchg
push
xor
lds
mov
push
insl
popa
rcll
je
sahf
push
sbb
pushf
adc
and
or
pop
sahf
inc
sbb
cmp
pop
ds
add
sbb
and
popa
xchg
jnp
xor
ret
sub
lcall
push
inc
xor
sub
dec
xor
add
add
pop
call
enter
add
jno
loopne
fwait
xchg
cmp
loope
lods
add
mov
dec
adc
js
dec
loop
ret
sahf
push
push
push
fdivrs
int
std
push
inc
xor
jmp
inc
outsb
add
push
lret
std
jle
push
sub
ljmp
pusha
ss
inc
jno
pop
bound
out
sub
xchg
push
or
in
jmp
mov
mov
adc
jle
xor
sub
call
mov
jmp
pushl
xor
push
pop
mov
pop
add
cmpsl
pop
push
ret
sub
mov
push
ret
mov
inc
or
shll
xor
popa
add
push
into
xor
ret
xor
outsl
rcll
cs
adc
mov
gs
adc
ret
shr
jb
fs
hlt
cltd
jne
add
add
dec
cmp
shll
mov
or
mov
xchg
cmp
repnz
jo
xor
jo
sbb
adc
scas
inc
xor
add
push
fcoml
fbstp
adc
mov
jo
or
aam
xchg
cmp
sbb
negl
xchg
dec
push
cmpsb
shl
push
mov
sbb
adc
jl
and
lods
or
jmp
xor
jo
icebp
je
push
pop
faddl
shll
pop
pop
js
push
jmp
and
cmp
jbe
adc
adc
sbb
bound
xor
inc
push
add
or
or
inc
or
mov
or
xchg
pop
sub
in
xor
push
mov
movsl
push
pop
lock
push
mov
mov
pop
outsl
pop
xor
cmp
cmp
cmp
add
imul
mov
aaa
ret
testb
je
aaa
jecxz
push
fdivl
cmp
decl
dec
jl
loope
xor
push
fildl
pop
pop
adc
test
fsubs
xor
jb
fisttps
shrd
inc
mov
leave
jge
push
xor
xchg
cmc
pop
jae
test
cmpsl
cwtl
jl
daa
sub
add
nop
and
inc
mov
aas
mov
sbb
or
jge
push
pop
pop
leave
xor
add
sarl
aaa
add
add
mov
rolb
xor
ret
mov
pop
add
or
inc
arpl
out
in
mov
adc
dec
xchg
mov
push
test
mov
xchg
push
out
mov
or
or
jmp
pop
or
push
ret
mov
add
mov
sbb
push
xchg
jns
mov
dec
mov
cld
jle
jo
mov
inc
mov
jmp
xor
daa
test
or
mov
inc
pushf
jmp
dec
jl
pop
or
push
mov
push
push
push
inc
nop
push
outsl
pop
jbe
imul
idivl
push
inc
and
ja
mov
lea
push
loop
xchg
fdiv
lods
push
add
or
sub
add
or
xor
mov
xor
mov
push
jae
cwtl
addr16
xorl
and
sbb
movsl
add
shlb
xor
mov
pusha
and
mov
add
add
xchg
in
xrelease
fsubrs
jno
addr16
aas
or
insl
je
sub
daa
js
mov
pop
mov
add
dec
scas
push
sti
sub
sub
popa
inc
jge
add
push
stos
inc
cmp
jo
xor
add
push
ss
adc
imul
int
fucomp
push
gs
push
add
sbb
sub
pop
orl
xor
jp
xchg
or
push
jo
xchg
sbb
mov
arpl
push
or
jae
xor
test
pop
enter
or
pop
xchg
or
bound
fsubr
orl
test
xor
mov
andl
nop
dec
mov
jne
iret
push
pop
fs
xor
add
shl
test
push
hlt
outsb
adc
add
cmp
sbb
adc
cltd
dec
sti
inc
inc
cmp
adc
sbb
pop
sbb
inc
lcall
jne
loope
sub
or
xor
add
iret
imul
push
cltd
pop
push
cmp
adc
adc
inc
or
adc
dec
push
aam
adc
fildl
lods
jne
mov
mov
es
jae
pop
xor
cli
push
cld
rorb
xchg
movb
and
add
push
movsl
jge
movl
shr
sbb
dec
testl
xchg
lock
cmp
xor
fiadds
jp
sbb
mov
insb
std
or
insl
dec
inc
mov
pop
mov
repz
in
xor
stc
pop
insl
ja
test
out
in
sbb
fsubs
mov
hlt
mov
add
mov
jmp
scas
imul
arpl
pop
adc
add
ret
repnz
int3
push
test
inc
jns
and
pop
mov
mov
push
int
dec
add
js
sbb
xor
or
push
inc
mov
adc
push
loop
orl
adcl
inc
arpl
les
shlb
sbb
lock
or
jne
jae
shrb
sbb
dec
adc
fistpll
mov
xchg
out
mov
adcb
add
adc
push
popa
jno
test
cmpb
rclb
adc
mov
out
movb
lds
inc
or
mov
lea
dec
icebp
mov
pop
adc
iret
xchg
mov
mov
lret
js
xchg
or
add
into
je
push
push
imul
mov
and
push
pop
mov
cmp
sub
jecxz
pop
cmp
aas
inc
shll
or
add
cvtpi2ps
movb
addr16
jns
or
mov
daa
pop
push
mov
push
xor
repz
jo
or
lret
mov
jo
sbb
sub
test
adc
inc
jo
iret
fcmovb
or
dec
sbb
rolb
push
stos
into
pop
clc
xchg
or
jb
cmp
pop
push
cs
fwait
pusha
in
pop
sarb
adc
cmpsl
jecxz
mov
cmp
xchg
cmp
out
cmp
fwait
push
add
mov
rorb
mov
xchg
sub
inc
xorl
in
lea
es
scas
push
dec
add
xor
mov
or
pushf
ss
jns
rcrl
push
xor
mov
adc
ret
cmpsb
or
mov
arpl
adc
inc
pop
add
adc
jbe
mov
out
aad
xchg
mov
cmc
mov
jo
pop
cmp
fs
add
repnz
pop
and
ret
ret
cmp
loope
mov
push
mov
nop
addr16
call
cmp
mov
nop
ds
or
fdivrs
mov
jle
pop
adc
rolb
je
mov
aaa
sbb
loop
out
fadd
sti
jle
add
and
sub
add
and
xor
cmp
into
adc
into
scas
add
jge
shl
test
inc
mov
add
mov
jl
je
add
and
dec
xchg
lock
or
testl
in
rorl
jle
xor
or
loope
neg
ret
pop
xchg
rcll
jmp
mov
cmpsb
add
loope
adc
loope
addl
xchg
inc
add
sub
jae
inc
fs
dec
ja
subl
out
js
movl
enter
test
mov
xchg
loopne
dec
bound
pop
xor
es
in
mov
pop
sub
xchg
mov
imul
dec
mov
cmp
sbb
pop
jmp
andl
jb
xorl
lret
testl
dec
adc
xchg
push
mov
and
sub
xchg
mov
daa
inc
lea
aad
inc
adc
add
mov
cmp
cwtl
pop
sahf
divb
scas
xchg
mov
and
in
inc
rcl
adc
pusha
or
mov
push
jnp
mov
mov
mov
or
arpl
ss
cmpsl
mov
xchg
in
daa
dec
cmp
pop
sbb
add
adc
jbe
inc
push
fsubs
xor
pop
jae
rorb
xchg
xchg
pop
stos
and
cmp
xchg
mov
adc
pop
rcrb
out
sbb
mov
and
je
popa
aaa
inc
inc
lods
ret
loopne
dec
loope
adc
lahf
test
je
bound
push
imul
push
and
lea
in
pop
push
enter
jne
ret
test
nop
scas
mov
sti
dec
ja
je
or
je
or
sub
dec
inc
xchg
scas
add
mov
cmpsl
ljmp
or
add
adc
jne
sahf
nop
ret
sbb
jnp
imul
enter
adc
repz
adc
test
inc
adcb
ss
push
out
sub
ja
mov
testb
push
mov
xchg
mov
push
movb
mov
in
bound
inc
icebp
sub
mov
lcall
es
mov
adc
and
inc
push
push
xor
adc
mov
mov
add
and
sbb
dec
push
imul
pop
dec
push
pop
or
or
lcall
clc
xchg
ffree
push
dec
imul
sub
sub
or
push
test
add
fcmovnb
xor
in
sarl
sub
daa
or
ret
push
adc
adc
adc
add
mov
aas
in
mov
and
mov
fwait
and
or
cmp
mov
and
push
in
push
sbb
cmpsb
cmp
dec
lea
cmpsl
cmp
jne
push
or
or
pop
xchg
xor
push
inc
push
int3
mov
popa
loope
add
fsubl
xor
adc
jg
out
je
push
imull
xchg
sar
das
xchg
jle
enter
push
xchg
lea
test
push
xchg
xor
xchg
push
and
dec
rcrb
test
ret
loopne
push
rcll
pop
bound
dec
clc
rorl
jbe
push
or
popa
in
xor
lcall
xchg
dec
roll
add
les
movsl
arpl
xor
dec
push
dec
pushl
pusha
lea
aas
sahf
or
push
xor
pop
push
and
cmp
push
enter
add
add
xchg
or
dec
pop
dec
pushf
fcoms
nop
sub
test
pusha
fsubr
in
mov
lahf
add
bound
mov
and
in
sbb
cmp
js
lods
and
dec
push
lock
out
push
sub
cmp
and
push
xor
out
sbb
push
ret
pop
imul
mov
sub
adc
and
cmc
mov
sbb
bound
inc
sub
insb
or
mov
add
dec
loope
idivl
xor
adc
sahf
aas
mov
or
aam
jno
push
lcall
jo
fucomp
mov
sub
add
loope
push
inc
add
sub
add
lods
or
and
jmp
iret
notb
push
ljmp
in
in
sahf
sbb
or
adc
push
cmp
adc
or
or
sub
mov
out
sub
jp
push
dec
mov
jbe
pusha
xor
adc
mov
sbb
push
fwait
dec
mov
sbb
and
jge
jne
mov
int3
mov
add
add
dec
cmc
inc
loop
inc
fcoml
push
in
idivb
inc
mov
or
popa
mov
inc
xchg
data16
mov
mov
dec
arpl
cmpsl
test
push
jb
sub
dec
ds
outsl
sbb
cmp
xchg
jb
adc
dec
mov
or
adc
push
jb
jns
jmp
mov
outsb
xchg
outsb
lcall
mov
and
push
adc
dec
lahf
rorb
imul
test
pop
xor
fs
iret
les
jno
add
push
sar
pop
lcall
inc
inc
mov
enter
mov
loope
mov
addr16
mov
adc
mov
gs
mov
mov
fstp
sbb
popa
adc
fsubl
int3
cmpsb
push
je
mov
pop
lret
in
scas
push
xchg
add
cld
xchg
mov
mov
pop
push
inc
leave
out
pop
je
rcl
add
pop
je
rolb
adcb
adc
ljmp
or
sahf
sub
push
inc
xor
lcall
cmpps
cmp
xor
dec
cmp
hlt
sub
and
add
es
mov
jl
pop
test
sub
lret
incb
inc
daa
enter
sbb
jge
rclb
push
orl
xor
testl
and
popa
lods
loope
out
sbb
and
mov
push
arpl
mov
adcl
or
pushf
dec
add
xchg
jo
xorl
gs
out
push
dec
lods
jp
lock
fcomps
sub
xlat
addr16
or
sub
cmpsb
clc
jo
mov
pop
inc
or
jl
pop
adc
xchg
xchg
mov
mov
enter
outsb
sub
fiaddl
ret
pop
mov
and
cs
pop
pop
sbb
push
jmp
xor
or
mov
jbe
add
loope
xorl
or
ror
cmp
mov
ret
enter
jne
xor
rorb
bound
les
mov
or
or
mov
and
mov
push
test
in
or
or
push
js
pop
sbb
mov
dec
dec
adc
fdivp
push
je
sub
or
jl
sbb
jl
cs
push
sbb
jmp
push
out
pushf
std
and
adc
inc
movsl
pop
iret
inc
shrb
outsb
xor
mov
orl
add
cli
sbb
cltd
out
adc
pop
cmp
add
or
inc
movsb
add
bound
clc
lret
cmp
cmc
add
insb
mov
rolb
loop
rorl
jmp
adc
and
xchg
jb
shll
xor
pop
jno
sub
into
aam
ret
pop
add
mov
call
adc
push
data16
mov
call
adc
mov
ss
adc
mov
mov
cli
and
fsub
adc
add
lcall
leave
adc
xor
cmpl
fs
dec
das
push
jge
push
outsl
enter
or
jp
sbb
add
mov
les
enter
sbb
adc
lods
or
or
psrlw
mull
cmp
es
popf
pop
mov
and
cmp
leave
outsb
mov
in
cmp
mov
js
lods
repz
or
push
cmpsl
arpl
push
test
jecxz
mov
or
add
fdivr
jg
jge
in
or
or
in
cmp
sbb
push
icebp
movsb
pop
add
sbb
adc
outsb
test
jg
xchg
and
mov
shll
inc
repnz
mov
inc
sbb
loopne
or
lret
cmp
je
idivb
and
cli
adc
push
adc
sbb
outsb
add
dec
or
jne
sbb
push
or
sti
and
les
or
pop
cltd
call
pop
fisttpll
push
repnz
pop
je
add
push
dec
mov
into
mov
inc
mov
daa
enter
test
mov
xchg
inc
sti
mov
lods
cld
jns
jmp
sub
aam
mov
sbbb
mov
adc
rolb
pop
test
rol
pop
mov
push
cmp
xchg
inc
ljmp
lock
jle
jle
sub
jg
mov
movb
sbb
ret
pop
mov
iret
loop
cmp
inc
ret
jp
cld
inc
adc
stos
imul
mov
adc
push
cld
xchg
add
add
mov
jmp
cltd
push
xchg
or
inc
push
xor
xchg
sbb
add
rcll
dec
sti
inc
arpl
dec
dec
or
in
push
test
sbb
add
sbb
leave
adc
jns
cwtl
add
in
jb
or
and
lret
jae
add
jne
clc
sub
mov
nop
or
push
inc
push
push
fldl2t
scas
addl
jbe
dec
mov
loopne
mov
add
xor
pop
jns
cmp
aam
imul
xor
add
push
cmp
mov
inc
jno
inc
mov
cmp
jo
mov
inc
lret
jns
dec
inc
jne
dec
push
push
pushf
arpl
add
arpl
gs
inc
push
sahf
inc
js
imul
jns
daa
dec
jmp
outsl
xchg
push
xchg
dec
jmp
int
push
es
push
push
push
imul
and
mov
dec
mov
pop
jmp
pop
and
dec
ss
xor
pop
push
dec
cmp
fistpll
ficomps
movsl
movsb
add
inc
data16
call
aas
dec
add
or
mov
and
std
mov
mov
or
js
or
sbb
mov
adc
and
dec
push
and
adc
sub
data16
lret
mov
and
add
mov
cmp
int3
sahf
popa
fsubl
nop
rol
or
push
movsl
push
movsl
jb
pushf
add
xor
push
xchg
or
cmpsb
in
dec
sub
iret
push
cwtl
nop
or
inc
int3
outsb
clc
mov
dec
test
mov
inc
sbb
dec
fdivl
cmpb
jb
pushf
add
or
loop
rorl
cltd
fdivl
inc
in
or
push
in
add
jp
in
push
xchg
out
push
xchg
call
or
pop
in
cmp
xor
testb
loope,pn
mov
or
mov
jb
adc
stos
mov
pop
mov
loopne
loopne
ret
xor
add
cwtl
pop
xor
cmp
adc
enter
jb
push
pand
jne
cmc
add
lock
or
imul
xchg
add
xchg
addr16
adc
add
sub
ret
xor
fcoms
jl
popf
xchg
jg
roll
jl
jne
pop
ljmp
cld
jne
into
sbb
popa
inc
pop
fs
push
or
pushf
xlat
aaa
add
popa
lret
loopne
sub
pop
andb
add
sbb
loopne
mov
shrb
or
icebp
sub
add
xor
mov
test
or
gs
loop
add
in
mov
add
lock
daa
inc
fmuls
mov
or
xchg
shl
adc
cmp
add
sub
test
je
fmuls
xchg
add
sub
inc
sub
icebp
arpl
push
cmp
add
mov
aaa
push
lahf
jo
lahf
rorl
jl
lcall
dec
or
or
mov
add
clc
cmp
jne
sbb
mov
and
push
pop
shlb
rclb
mov
add
lods
movsb
xchg
lret
jmp
push
inc
inc
adc
push
dec
mov
shlb
jnp
add
clc
stos
pop
nop
stos
pusha
or
pop
and
fs
call
jg
js
dec
sub
push
and
or
xor
and
icebp
cmp
nop
out
into
in
or
gs
mov
and
out
enter
je
lods
test
repz
cmp
pop
adc
add
cmp
scas
xchg
clc
jb
push
shrb
sbb
pop
jns
sbb
add
xorb
clc
sub
jge
adc
push
scas
cmp
adcl
inc
sbb
nop
cmpsl
and
movsb
cltd
mov
cmp
and
out
imul
loop
xchg
mov
lds
and
stos
fdivrs
sub
outsl
sub
mov
xor
and
das
or
adc
lods
xchg
adc
sub
xor
daa
fstpl
push
inc
jns
xor
pop
mov
or
xchg
push
xor
rcll
or
xchg
dec
mov
in
mov
mov
cmp
jbe
shll
sbb
mov
push
add
and
call
mov
mov
fnstcw
stos
add
or
jno
mov
sbb
mov
dec
lds
add
pop
repnz
adc
mov
sbb
dec
dec
test
xchg
push
pop
add
or
mov
test
jne
dec
insl
sbb
add
test
push
mov
mov
sub
jo
add
mov
sbb
inc
lahf
cmp
push
cmp
push
pop
pop
or
xchg
push
jb
sbb
scas
pop
loope
xchg
mov
test
push
or
mov
add
xor
sub
imul
pop
cmpsl
sub
xchg
pusha
cmp
push
adc
and
fildl
test
or
pop
enter
sbb
int3
and
lock
enter
out
stc
lret
ficoml
das
push
inc
loopne
add
inc
int3
dec
fcoml
lock
data16
dec
dec
dec
xchg
rclb
push
fwait
testl
add
jne
andl
mov
mov
xlat
adcb
loope
or
scas
les
jnp
mov
push
mov
test
mov
call
pop
nop
cld
je
jle
fwait
sub
jbe
jb
pop
aaa
loopne
mov
push
sbb
int
mov
cmp
cmp
adc
repnz
adcl
sarl
cmp
mov
sbb
sub
icebp
push
subb
adc
sbb
nop
add
pop
insb
fnstcw
add
or
lds
and
cmp
int3
ss
loope
inc
enter
mov
inc
push
sbb
push
nop
push
movsb
adc
enter
sub
int
cmp
xchg
mov
sub
mov
into
rolb
mov
pop
sbb
adc
arpl
or
ss
xchg
or
cmp
mov
or
sub
lcall
push
add
sub
data16
xor
nopl
dec
rolb
fbstp
push
xchg
sbb
sti
aad
push
pop
sbb
mov
jg
dec
stos
adc
dec
stos
push
dec
dec
adc
sbb
mov
lock
dec
rcrb
jae
aam
insb
cld
movsl
ret
push
scas
rorb
dec
add
push
shlb
scas
mov
aam
adc
and
sbb
mov
jecxz
fcoml
add
hlt
imul
sub
shrl
xchg
insb
pop
data16
icebp
inc
sub
in
loopne
aaa
push
fadd
or
jo
jg
jns
movsb
ret
insb
xor
bound
jne
ret
repnz
adc
add
and
cmp
sub
call
decl
push
xchg
pop
insl
inc
inc
pop
ret
dec
inc
xchg
or
sbb
xor
add
jae
sbb
xor
pop
sbb
or
adcl
jp
add
xor
sahf
ret
lret
and
arpl
in
adc
icebp
inc
lret
sub
hlt
pushf
and
test
cmp
pop
mov
pusha
jecxz
insb
xor
adc
push
out
je
mov
in
jno
je
add
push
sbb
jne
adc
push
xor
pop
or
mov
andl
adc
or
pop
pop
inc
add
popa
xchg
rol
push
lock
js
ret
jmp
imul
pop
push
test
mov
es
popa
lods
cmp
pop
loop
cmp
fidivrl
clc
rcll
dec
std
ljmp
cld
pop
cld
jmp
push
fsubr
data16
sub
pop
scas
mov
testb
xor
mov
js
and
lea
cmpsb
pop
adc
push
fsubrs
pop
inc
inc
cmp
jb
pop
xchg
nop
adc
pop
div
pop
add
add
jo
push
mov
inc
inc
push
fidivs
sub
inc
je
sbb
cmp
inc
loope
testb
add
push
xchg
xchg
xor
mov
outsl
pop
movsl
push
add
xchg
inc
sti
jl
test
jg
mov
sahf
sbb
pop
sarb
jbe
mov
or
ret
mov
and
pop
daa
sbb
ret
mov
dec
clc
lcall
stos
jle
dec
add
jmp
not
rolb
push
mov
jg
mov
out
lock
es
xor
jo
add
lock
cs
sub
cwtl
addr16
sbb
daa
js
jae
out
or
je
or
mov
push
sub
xor
clc
cmpsl
jns
shll
lcall
dec
xchg
dec
addb
adc
and
orb
movl
add
or
inc
add
inc
xchg
push
sbb
iret
jae
xchg
fnstcw
inc
mov
aaa
xchg
js
test
dec
test
jne
sbb
or
push
mov
test
bound
xor
pop
xor
mov
leave
pushf
push
mov
stc
rorb
mov
cmp
js
xchg
jb
lret
push
inc
sub
mov
adc
sub
popf
jnp
inc
push
pop
jne
dec
outsb
xor
jmp
fmuls
or
add
or
pop
cmp
flds
mov
dec
dec
and
or
in
cs
hlt
cmp
jo
pop
inc
and
mov
outsb
sti
push
jns
jecxz
and
add
jb
pop
push
jmp
cmp
or
pop
jl
cmp
push
mov
push
mov
xchg
insb
or
dec
adc
in
in
and
jp
idivb
dec
sub
inc
cmp
or
sub
xor
mov
ljmp
popf
inc
push
adc
sub
xlat
cwtl
mov
push
cmp
mov
and
dec
sti
rep
hlt
inc
xor
fwait
cmpsl
lods
pop
or
sbb
jmp
sub
jae
mov
shlb
add
mov
sbb
andl
aam
dec
jnp
and
jne
push
sub
fbld
jae
push
push
mov
jecxz
data16
push
push
mov
add
pop
loopne
adc
nop
data16
push
push
push
sub
push
arpl
adc
push
ret
pop
adc
add
out
pusha
aas
mov
mov
imulb
cmp
in
adc
data16
push
pusha
push
xor
mov
and
jo
push
rorl
xchg
lock
fwait
repnz
test
ficomps
loope
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
lock
and
and
sbb
pop
mov
lcall
hlt
lock
xchg
cltd
test
dec
mov
push
and
sbb
dec
push
push
fs
inc
jecxz
cwtl
pop
loope
sub
cs
adc
ljmp
fwait
push
push
rclb
mov
in
scas
lods
inc
pop
call
adc
mov
push
pop
arpl
pop
pop
dec
pusha
cmp
ret
sahf
clc
pop
cmp
inc
addr16
add
rol
dec
sbb
sbb
mov
inc
inc
and
sarb
dec
jne
lcall
mov
lahf
bound
scas
pop
sbb
jmp
loope
sbb
xchg
fadd
sub
adc
mov
and
adc
cmpl
sub
in
jnp
inc
cmp
rorl
jp
ret
xchg
xchg
fildll
lea
add
add
inc
mov
pop
clc
adc
adc
pusha
je
push
inc
sub
enter
push
jnp
dec
push
or
and
add
adc
test
adc
add
xor
or
or
jb
or
cmp
cmp
and
push
and
xor
dec
adc
xchg
shlb
xor
movsl
cltd
xorb
test
add
dec
mov
add
outsl
sbb
shl
sub
sar
xor
out
add
or
add
rcrb
je
jmp
adc
dec
jg
mov
and
lds
ret
sub
jecxz
shlb
es
ss
loope
push
push
or
hlt
or
cmp
movsb
cmpsl
ret
sub
add
sahf
lods
addl
ja
test
mov
cmp
adc
or
fisttpll
out
or
push
xchg
jmp
xchg
int3
rcll
cmp
insl
cmp
insb
sub
adc
cmpsb
ret
pop
or
ret
adc
push
push
and
shr
inc
sbb
push
xor
popa
mov
jp
cmp
jecxz
mov
bound
cmp
pop
ret
mov
push
mov
push
rorl
lods
sub
sbb
and
and
aam
nop
or
je
mov
mov
jle
lcall
sub
vphadduwd
push
insl
mov
test
outsl
inc
arpl
pop
cmp
popa
adc
jns
in
sub
insl
jge
adc
adc
inc
stos
cli
js
push
jmp
dec
ss
mov
sbb
dec
add
jne
sub
adc
fsubrs
incb
push
jp
push
lea
cmp
fldz
mov
dec
jae
ror
pop
or
dec
push
add
jae
mov
adc
dec
jg
je
in
push
ret
add
loopne
das
icebp
addb
pop
adcl
aad
dec
sbb
jle
inc
push
push
call
sub
loop
mov
in
add
inc
cmp
adc
xor
sub
mov
push
xor
fistl
lcall
adcb
enter
gs
mov
and
cmp
enter
jg
sbb
push
ds
and
nop
scas
sarb
sbb
daa
or
cmp
dec
test
and
and
cmp
mov
addb
arpl
or
nop
inc
push
sub
adc
cmp
sbb
mov
insb
bound
fnclex
mov
enter
popf
arpl
imul
and
insb
and
adc
adc
popa
xor
push
out
xchg
or
add
cmpsl
or
and
shll
aam
mov
sub
addb
dec
je
xchg
arpl
or
dec
pop
mov
je
add
shlb
sbb
and
xchg
push
sbb
and
xchg
cs
inc
add
pop
test
mov
pushl
xor
roll
cltd
outsl
das
imul
mov
mov
repnz
mov
and
in
outsl
or
fs
cmpsb
sub
dec
insl
inc
cmpsb
and
cltd
xchg
xchg
jo
sub
daa
test
xchg
add
xor
ja
filds
jnp
in
cmp
xchg
sub
pop
rcll
test
cmp
mov
mov
or
xor
mov
mov
cmp
dec
into
leave
enter
jmp
or
in
pusha
adc
lcall
movsl
repnz
or
fxch
inc
fistps
or
pop
sbb
sbb
sbb
inc
test
leave
f2xm1
test
mov
and
mov
adc
jge
into
mov
dec
test
adcl
inc
mov
fmuls
mov
sbb
xorl
js
sub
leave
cltd
rcr
fwait
or
mov
mov
pop
mov
insl
dec
xchg
lahf
inc
cmp
sarl
shl
aas
in
rol
fimuls
enter
repz
adc
loopne
in
cmp
stos
hlt
mov
adc
loope
call
cltd
andb
inc
mov
hlt
jns
shlb
mov
loope
mov
fs
xor
pusha
stos
xchg
adc
cmp
subl
cli
js
and
adc
decb
mov
pop
mov
lret
jb
add
fcoml
jmp
pop
sub
jne
pop
lock
addb
loopne
and
test
push
inc
das
add
push
or
jo
or
ljmp
and
and
movsl
xor
jecxz
xor
aam
xor
test
cs
lahf
out
movsb
movl
push
push
push
mov
adc
lods
xchg
into
or
enter
adc
fmull
inc
push
fdivrl
xor
pop
adc
or
and
add
movsb
adc
js
mov
mov
jbe
or
or
jne
bnd
jmp
inc
mov
lea
sbb
xchg
addr16
rcl
add
mov
inc
mov
jb
mov
jmp
dec
xor
pop
jb
jmp
pop
or
jmp
push
outsb
or
movsb
mov
lock
test
loope
cmp
lea
mov
adc
or
sub
cmpsb
xchg
adc
pop
lea
mov
sub
stc
jne
sbb
lds
pop
push
and
add
dec
xlat
je
xchg
inc
and
inc
lret
popf
jb
sub
test
push
xchg
adc
scas
insb
mov
mov
ret
xchg
add
push
mov
scas
add
dec
push
in
push
jmp
dec
xor
dec
pusha
rorl
add
testl
push
rcrb
xchg
mov
test
cmpsl
add
rcrb
popa
sbb
pushf
adc
stos
and
popa
xor
push
in
shll
call
mov
cmp
sub
jno
lcall
adc
call
inc
xor
cmc
aam
mov
xor
and
sbb
xor
cwtl
jmp
adc
movsb
adc
in
pop
xchg
jne,pt
push
aam
push
scas
ds
sbb
jnp
dec
inc
jns
and
dec
xchg
pop
ret
pop
inc
mov
mov
pop
ja
and
cli
aam
add
fmuls
dec
xchg
push
movsl
jno
mov
adc
mov
cmc
cli
cli
dec
in
xchg
popa
sbb
mov
push
jge
add
or
push
popa
loop
and
or
adc
and
push
push
cmp
or
mov
adc
clc
aas
pop
xchg
push
adc
push
js
add
lahf
je
cwtl
cmpsb
sbb
jae
loope
inc
pop
pop
add
push
daa
inc
bound
leave
sbb
lahf
cmp
pop
loopne
scas
pop
pop
push
outsl
xchg
ljmp
jo
rolb
setae
idivb
push
ret
dec
dec
jge
lock
xchg
jge
mov
and
xchg
lret
push
pusha
add
xchg
je
cmp
sahf
or
xor
mov
mov
inc
jnp
and
out
mov
imul
lea
loop
call
pushfw
lea
push
sbb
jmp
mov
nop
rcrb
jecxz
or
dec
pop
aam
sub
stos
dec
push
or
jb
cmpb
push
testl
gs
es
push
xchg
add
or
mov
js
outsl
icebp
fildl
mov
movsb
bound
imul
ljmp
mov
es
or
insl
lods
fwait
add
adc
mov
xlat
pop
jb
xchg
jecxz
push
mov
sbb
or
mov
outsb
leave
rcrl
mov
jecxz
jecxz
shrl
out
and
outsl
subb
add
mov
dec
pop
int
pop
in
imul
jl
and
fs
scas
lods
pop
push
movsl
dec
stc
or
xor
lea
mov
mov
fadd
dec
rcrb
out
push
add
cmpsb
xchg
test
mov
test
stos
ret
mov
pop
pop
push
push
lea
xchg
in
mov
shll
into
xchg
xchg
test
and
inc
push
pop
shrb
add
xchg
fiaddl
pusha
out
int3
and
rol
es
dec
rorl
fcomps
out
or
mov
pop
pusha
mov
insl
dec
push
or
fdiv
movsb
rclb
or
imul
fadds
sbb
fs
push
mov
in
add
dec
cwtl
mov
push
pop
xchg
xor
lods
aas
and
mulb
sub
sti
mov
orb
popa
xchg
cld
jnp
mov
cmp
jbe
add
les
lock
adc
cmp
outsl
loopne
sbb
outsl
push
flds
test
sbb
adc
out
pusha
pop
gs
jp,pn
xchg
cmp
imul
add
and
out
cmpsl
jmp
push
arpl
sub
add
push
sub
add
mov
jp
ret
add
cltd
mov
adc
dec
fidivl
push
iret
loope
sbb
xchg
aam
enter
mov
add
bound
or
lahf
pop
pop
pop
sub
xchg
or
jp
mov
or
adc
mov
sbb
rep
and
pop
dec
cmp
xchg
jae
mov
pop
gs
add
mov
xchg
cltd
push
adc
cmp
enter
inc
test
cltd
push
mov
ret
jnp
or
sbb
hlt
mov
test
adc
and
imul
arpl
xchg
popa
add
or
pusha
jbe
or
mov
cltd
add
jp
adc
xchg
insb
push
xchg
mov
push
nop
xor
sbb
aaa
pusha
adc
add
mov
dec
lret
jg
xor
decl
xor
mov
add
add
add
xor
sbb
mov
fs
jle
sbb
xlat
pop
jnp
inc
es
mov
push
dec
test
add
inc
cwtl
cwtl
pusha
ss
iret
cs
mov
mov
pop
inc
sti
pushf
in
jno
push
and
ret
mov
sbb
negb
rcl
mov
imul
jp
incb
pop
xor
xchg
sub
shl
out
mov
push
add
out
mov
orl
sbbb
pop
ds
jp
imul
mov
add
std
lea
cmp
mov
lret
test
inc
dec
imul
pop
or
call
mov
fwait
inc
stos
les
jecxz
loope
les
xchg
push
nop
sbb
ljmp
fwait
ret
xor
call
xor
xor
movsb
enter
inc
aaa
cmpl
jb
fisubl
sub
or
xchg
push
neg
sti
scas
enter
or
rolb
jo
adc
rclb
inc
testw
imul
xchg
ss
das
stc
mov
mov
dec
je
adc
mov
ds
je
sub
hlt
dec
adc
pop
pop
push
fdiv
jp
mov
cmp
jno
pop
xchg
cwtl
pushf
test
mov
ret
cld
mov
push
daa
or
xchg
mov
xchg
sub
scas
adc
xor
jp
jecxz
mov
mov
out
loope
test
mov
sbb
sbbb
movsb
inc
ficomps
loopne,pn
rclb
xchg
loopne
std
mov
inc
or
bound
test
movsl
test
jge
xlat
cs
fidivl
scas
lea
in
idivl
movsl
or
push
pop
in
mov
movsb
add
xor
cmp
loopne
addr16
or
lea
mov
mov
ret
mov
or
push
lret
mov
ljmp
movsb
outsl
push
lock
dec
xor
imul
mov
mov
dec
xchg
jno
or
out
int
rcr
rorl
or
xor
push
inc
shrl
mov
sti
cli
pop
xor
pop
sbb
out
jle
stos
mov
hlt
lcall
loope
test
pop
add
rcrl
loopne
js
ret
xor
fwait
cli
sub
jns
pop
pop
subb
jnp
cmp
add
add
and
or
inc
or
fdivl
les
add
outsl
or
mov
pop
sbb
cmpsb
or
roll
push
jns
outsl
xlat
xor
fdivrs
push
push
repz
adc
sbb
in
addl
rorl
into
push
lock
push
xchg
ret
push
movsl
sub
adc
and
or
cltd
test
mov
sub
enter
lock
xlat
push
fists
call
push
outsl
inc
popa
jmp
das
mov
fs
pushf
or
loopne
test
loopne
rcll
jo
inc
jo
push
inc
mov
ret
loope
mov
loope
ror
cmpsb
xor
push
and
or
lahf
outsb
rol
iret
xor
mov
cmp
sub
mov
xlat
inc
and
xchg
mov
jge
mov
inc
idiv
add
fisubs
outsb
pop
notb
inc
inc
inc
inc
push
jl
xchg
pushf
test
mov
inc
outsl
dec
pop
sub
adc
sbb
test
scas
nop
cmpsl
enter
jo
hlt
jge
dec
mov
sub
jmp
cmp
icebp
aaa
das
je
nopl
or
pusha
add
int3
out
in
inc
and
push
mov
xchg
stos
xor
xchg
xchg
jnp
xor
cmp
jo
add
or
mov
mov
ss
mov
pop
rolb
add
push
lods
int
pop
push
mull
fcoms
test
sub
inc
mov
in
push
loopne
ret
aad
es
jl
jae
or
pop
sbb
ret
cltd
xchg
add
jl
sbb
std
push
out
ret
inc
add
dec
popf
or
push
shlb
imul
decb
ja
enter
ret
jle
jl
and
sbb
outsb
lock
add
stc
push
cmp
decb
mov
mov
bt
lock
and
xor
and
jae
inc
in
fwait
dec
test
enter
hlt
mov
add
pop
add
mov
or
mov
cmp
pop
push
cmpsl
adc
and
jns
nop
adc
add
adc
and
ljmp
jmp
jmp
std
sbb
mov
mull
cmp
jg
lods
in
add
cli
jbe
or
fisubrs
outsb
add
push
jge
push
adcl
push
fucom
jnp
jmp
outsb
pop
and
pop
bound
jge
fs
mov
pusha
xor
inc
cmp
lock
or
shr
stos
andb
dec
cmp
ja
mov
mov
shlb
js
sbb
sbb
xor
jns
subb
inc
inc
jmp
inc
jo
add
pop
pop
jns
addr16
and
jne
add
mov
xchg
add
lret
add
xchg
insb
or
add
ljmp
add
fcoml
or
lret
js
dec
lret
jmp
pop
cmpsb
test
movsl
push
lods
test
mov
push
add
mov
or
dec
xchg
or
adc
sub
mov
mov
jne
cmc
mov
in
test
add
imul
xchg
loopne
fs
jmp
pop
adc
push
mov
movb
movsl
jl
push
repnz
cmpsl
bnd
fdivl
lods
pop
movsl
fsts
sub
cmp
mov
inc
pop
adc
adc
push
lods
movsb
cmp
lcall
cwtl
or
xchg
lret
dec
inc
data16
jns
push
pop
ret
push
add
in
push
fadd
shufps
add
and
jl
in
or
out
jo
pop
aam
andl
fcoml
rclb
jns
or
add
repnz
in
ljmp
xchg
adc
leave
cli
mov
dec
xor
loopne
adc
sub
lea
mov
imull
sbb
push
into
into
xchg
lcall
sbb
subb
mov
lods
add
mov
icebp
mov
pusha
pusha
aaa
jno
and
out
dec
push
cwtl
sub
jno
test
pop
push
inc
and
mov
mov
pusha
jle
inc
inc
lcall
and
pop
or
outsl
mov
inc
ss
sbb
adc
cmp
jp
fldenv
add
lret
mov
inc
imul
pop
jl
shrl
mov
sbb
xchg
cli
insb
mov
pop
enter
mov
or
push
test
pop
or
inc
lahf
mov
add
xchg
inc
ret
pop
sarb
jmp
add
xchg
pop
fs
or
add
and
mov
jo
pusha
movsb
rcl
repz
pop
xor
popf
nop
and
or
and
add
adc
addb
ret
push
cmc
mov
cmp
adc
imul
sbb
dec
scas
mov
inc
daa
out
int3
std
ret
jg
inc
xor
pop
push
jns
test
gs
pop
mov
mov
xchg
add
inc
jo
shrb
test
xor
mov
sub
xor
std
sub
add
cmp
inc
cmp
mov
les
fisttps
xor
mov
mov
push
mov
cmpsl
sbb
es
lds
sbb
inc
dec
arpl
imul
sbbb
fdivs
xor
jg
adc
dec
pop
out
pop
push
or
mov
inc
ja
push
lods
test
add
inc
cmp
clc
add
xor
mov
pop
ret
jb
add
divb
rolb
or
shl
shr
xchg
push
movsl
mov
cmp
jb
mov
nop
add
fs
or
test
push
icebp
mov
mov
shr
cmp
jbe
add
jmp
add
fwait
orl
ret
and
push
jns
dec
loopne
inc
inc
xchg
and
mov
test
shrl
xor
adc
adc
dec
lcall
or
jl
dec
repnz
addb
lea
cmp
lock
pop
jo
inc
decb
mov
in
jbe
shll
and
popa
add
imul
push
jge
pop
or
aaa
test
lret
pop
movb
xor
in
movsl
daa
add
dec
xchg
rol
add
int3
insl
test
subb
mov
in
pop
out
and
les
pop
aam
test
enter
jmp
arpl
adc
outsl
rcll
fs
sub
adc
push
or
or
push
jb
negl
enter
in
inc
push
xor
popf
xor
test
and
mov
daa
xor
stc
outsl
inc
inc
gs
nop
loope
inc
xchg
xchg
je
leave
imul
mov
jo
bswap
add
xchg
or
inc
call
cmp
xlat
add
add
test
sbbb
cmc
andl
add
add
test
inc
out
push
sub
or
shlb
dec
cmp
mov
je
sarb
shlb
cmpsl
adc
insl
pusha
cmpsl
xchg
ret
ret
int3
in
sub
in
jle
sbb
and
add
sbb
cmp
mov
call
shl
test
push
lods
mov
mull
pop
adc
jmp
loopne
mov
test
in
push
add
frstor
add
xor
or
push
pop
xor
insl
add
xorb
xor
jle
or
adc
pop
inc
stos
ror
subb
sub
add
pusha
je
sub
ljmp
js
xor
cmp
push
xchg
push
dec
or
or
jle
inc
push
add
pop
or
xor
push
nop
outsb
in
dec
lds
adc
jmp
lods
and
adc
jo
mov
push
sub
imul
inc
jns
mov
ss
sub
adc
mov
mov
clc
push
sahf
out
fcoms
xchg
movsl
lods
xchg
adc
mov
in
inc
mov
push
xchg
mov
or
mov
dec
push
insb
pop
out
mov
rol
mov
fmul
shr
and
mov
push
sbb
loope
cmpsl
movsb
cltd
xchg
jmp
and
jmp
inc
fsubrs
aam
cs
rcrb
test
shll
pop
jne
xor
jecxz
insb
roll
pusha
insl
push
mov
pop
enter
loopne
add
add
adc
lret
lcall
divb
push
xor
loope
mov
in
sub
and
inc
fistps
pop
pop
leave
out
out
imul
push
inc
cmp
pushw
push
cli
pop
cwtl
sub
pop
push
xchg
sub
add
adc
mov
mov
or
add
je
push
aaa
lock
mov
out
jmp
jno
push
ret
inc
iret
inc
jle
pop
mov
ret
call
cmp
repz
je
inc
orl
sbbl
test
jae
add
push
into
idivb
jb
lods
push
xor
xchg
mov
clc
xchg
mov
test
insb
out
pop
mov
push
cmp
xchg
out
test
pop
push
ret
dec
call
jne
inc
nop
loopne
jne
sbb
clc
pop
adc
add
lds
jmp
sub
ret
scas
dec
outsb
test
dec
arpl
enter
fsubs
jmp
filds
adc
pop
pop
push
xchg
add
sub
pushf
add
test
mov
mov
mov
pop
add
or
xor
js
movsb
xchg
cmpsl
jns
cmpsl
lods
lods
mov
mov
scas
jns
fdivrl
out
sahf
out
int3
cmp
push
add
mov
dec
add
jmp
dec
add
rcll
shll
fs
and
addr16
dec
rcll
push
dec
or
add
aam
jbe
sbbb
rcll
push
sbb
dec
add
cli
test
lret
lods
loope
lds
inc
sahf
aaa
xchg
cmp
cwtl
adcl
adcb
cltd
nop
or
jl
jl
mov
or
pusha
add
sub
sub
mov
les
push
jmp
add
inc
imul
aam
call
pop
sub
xor
rorl
loope
sti
lods
aad
inc
popf
popa
in
push
rcrl
rcrb
mov
punpckhbw
insb
je
sbb
jg
hlt
sbb
sbb
jne
push
mov
adc
xor
repz
xchg
sbb
xor
push
mov
xor
mov
dec
mov
pop
shll
adcb
bound
pop
add
mov
dec
mov
push
inc
cmp
ds
mov
or
mov
mov
mov
aam
mov
mov
cltd
or
aaa
mov
mov
push
gs
adc
stos
gs
les
mov
ret
mov
sti
movsl
cmp
dec
mov
cld
push
push
pop
mov
in
sbb
jne
and
loopne
sub
and
jo
xor
rol
add
in
loope
dec
inc
icebp
add
out
clc
loopne
imul
push
jno
jge
ret
js
or
jno
test
mov
jne
mov
imul
pop
push
push
and
mov
push
jmp
xlat
lods
dec
movsl
imul
call
ljmp
pop
div
loop
rclb
push
sub
iret
pushl
inc
dec
adc
sti
jno
shrl
push
mov
xor
cmpsl
lods
in
or
or
pop
jb
mov
xchg
or
ljmp
cltd
sub
lds
rolb
cmc
mov
stos
ss
jge
push
lods
inc
sub
push
jo
push
xchg
xchg
add
andb
mov
mov
cmp
and
or
cltd
cwtl
pop
and
pop
call
xchg
cmpsb
mov
jmp
pop
subl
inc
bound
stos
jg
or
adc
ja
fdivrs
sub
add
sbb
pusha
or
stos
fmuls
xor
in
pushf
pop
leave
repz
cmpl
add
xor
push
mov
mov
push
sbb
inc
pusha
xor
test
fs
dec
add
and
jle
loope
ljmp
adc
ds
add
jmp
aaa
xchg
leave
cmp
push
aad
movl
inc
sbb
repz
adc
or
int3
sbbb
cmp
dec
push
jne
mov
jmp
sub
enter
lods
dec
popf
sahf
pop
xlat
lcall
test
pop
les
gs
push
push
movsl
lock
hlt
fstl
mov
loopne
insl
xchg
push
cmpl
inc
clc
pop
fsubr
pop
fimuls
and
fstpl
lods
push
dec
cmp
cmp
inc
xchg
push
adc
data16
cmp
and
subl
mov
xor
movsl
sbb
test
dec
sbb
sub
pop
lods
les
testb
ljmp
out
pop
rcr
inc
and
sbb
out
fildl
mov
xor
xor
push
or
rorb
mov
adc
pop
clc
into
push
dec
mov
sbb
push
jg
pop
flds
add
cmove
and
std
decl
mov
lcall
int3
dec
sbb
cmpps
push
add
or
leave
sub
mov
jne
out
scas
es
in
sub
mov
add
popa
dec
or
and
xor
xor
pop
push
jmp
mov
cmp
jge
and
push
fs
sub
popa
popa
push
add
sti
pop
push
sub
ud0
add
xlat
lea
stos
fisttpll
in
out
popf
not
sub
cwtl
mov
test
mov
add
cmp
cltd
pop
shrb
dec
es
jne
xchg
fsubrl
rorb
into
inc
add
xchg
sbb
sbb
jns
inc
icebp
and
adc
and
orb
scas
bound
pop
mov
sar
into
mov
add
fnstenv
jmp
mov
aad
jp
pop
stc
sbb
pushf
dec
mov
jmp
adc
or
ret
movsb
dec
loopne
push
in
or
test
lods
push
decl
inc
nop
mov
call
mov
dec
dec
lea
cmp
test
or
test
xor
xlat
mov
mov
clc
mov
test
add
mov
push
mov
and
sti
enter
orl
pop
lock
sub
add
jle
pop
cmpsl
lods
pop
adc
pop
push
and
mov
mov
pop
leave
mov
ss
aad
sbb
mov
test
xorl
xchg
or
adc
inc
or
add
dec
push
fcompl
xor
insl
cmp
fidivs
jo
add
push
mov
push
fmull
push
dec
lods
orb
cwtl
xor
js
adc
movsb
out
add
add
nop
mov
xorl
push
or
adc
pop
xchg
test
scas
ret
push
add
or
aam
mov
or
loopne
and
or
addl
in
push
mov
addb
sub
push
dec
shll
add
adc
arpl
ret
ss
add
adc
push
add
lea
and
xchg
mov
cltd
push
pop
mov
pushf
mov
pusha
mov
mov
mov
xchg
clc
hlt
pop
xorb
lcall
pop
and
lock
js
cmp
aam
je
bound
repz
gs
paddsb
dec
lret
sbb
lock
mov
xchg
adc
jp
fwait
stos
and
push
sbb
inc
leave
test
jp
mov
out
enter
cs
in
pop
inc
sbb
push
push
pop
rorl
xchg
dec
stc
clc
push
mov
lret
gs
or
push
xor
sarb
jbe
inc
jecxz
mov
rorb
mov
leave
sbbb
cmp
adc
imul
movsb
jb
cld
inc
inc
nop
das
pop
popf
dec
push
loopne
push
lods
jmp
movsl
les
in
out
ret
mov
add
mov
addb
outsl
mov
int3
cmp
jns
add
pop
cli
bound
add
sbb
dec
mov
mov
sbb
add
jmp
sbb
adc
push
mov
lret
or
and
add
jne
cmp
mov
daa
push
dec
xor
mov
and
adc
or
xor
arpl
pop
cmpsb
dec
fucomp
addr16
cmp
sub
movsl
negb
pop
or
push
bound
into
or
aaa
push
aas
push
mov
ss
lods
push
and
aad
insl
loopne
or
loopne
test
jp
mov
xchg
sbb
in
out
ja
insl
movb
and
mov
inc
sbbb
mov
or
sarl
xor
add
xchg
sub
xchg
xor
sub
mov
test
test
aad
xor
and
jns
enter
sub
std
pop
les
pop
xor
loope
xor
cmp
fxch
push
or
mov
loop
dec
hlt
cli
sbb
fadds
je
push
je
test
adc
shlb
mov
cmp
xor
imul
sahf
fwait
ljmp
cmp
call
push
jne
scas
ds
mov
idivl
or
sub
adc
lock
mov
push
inc
push
inc
push
les
leave
enter
sbb
add
test
lcall
insb
dec
xchg
xor
loope
lcall
add
cmp
push
in
lock
sbb
push
cmp
jecxz
mov
mov
call
lock
inc
into
orb
add
leave
ret
loope
loopne
xchg
or
sbb
push
setl
and
xchg
add
xchg
or
dec
movsl
js
adcl
rclb
xchg
rol
popa
and
adc
push
aad
lock
mov
jle
into
cmp
mov
xor
rorb
cmp
in
mov
movsl
mov
rcrb
aam
mov
dec
enter
push
ret
jo
stc
sbb
test
pop
pop
mov
sarl
out
ret
mov
sbb
jbe
push
or
xchg
addl
out
mov
xchg
inc
popa
lock
cmp
jne
lcall
addl
cmp
xchg
fiadds
nop
dec
enter
add
repnz
xchg
xor
jns
or
add
test
movsb
std
shll
enter
push
or
enter
jmp
mov
and
mov
jb
push
pushf
lock
jl
rorb
xor
lcall
cwtl
xchg
out
loopne
rolb
ret
leave
loopne
sub
xor
dec
fwait
nop
out
nop
sbb
add
and
in
mov
push
sbb
test
dec
cmp
ret
jae
call
sarb
lar
push
aaa
add
in
shrl
stc
inc
stos
push
push
stc
dec
sbb
pop
push
pop
push
daa
cmpsl
push
push
sub
push
cmc
bound
mov
lea
jbe
mov
sub
add
enter
push
imul
jg
xor
add
loopne
sbbb
mov
jp
nop
loopne
or
adcl
sbb
push
add
push
hlt
jge
adc
or
jge
sbb
inc
dec
int
leave
subl
push
lahf
fdivs
call
pop
pop
or
pop
sbb
mov
mov
enter
or
mov
xchg
fdivl
in
and
push
popa
leave
int
pop
add
add
and
scas
sbb
lret
mov
adc
and
pop
adc
add
rcll
add
test
inc
adc
popa
sbb
dec
in
scas
jecxz
add
ja
fld
roll
popa
inc
xchg
rcrl
int3
sub
adc
jb
fcoml
lret
xchg
cwtl
clc
imul
outsl
leave
dec
sbb
pop
cmpsl
inc
decl
es
cmp
das
fmuls
sub
mov
fmul
aaa
pop
add
cli
pop
loopne
dec
and
sbb
je
sub
int
jo
sub
sbb
and
fsubs
mov
and
in
cltd
adc
pop
cs
xor
and
and
push
insl
and
xor
xor
js
int3
les
loop
aaa
cli
popf
adc
cltd
arpl
mov
dec
pop
adcb
cmpsl
jnp
inc
add
pop
inc
add
push
pop
dec
adc
mov
push
xchg
dec
and
adc
sbb
mov
ret
inc
fistpll
adc
dec
shrb
fmul
inc
pop
inc
jmp
adc
fisttpl
inc
inc
cmp
sbb
xchg
test
push
mov
setns
xchg
and
mov
push
mov
jge
std
xor
repnz
sbb
inc
add
in
jnp
sbb
mov
and
push
add
xor
add
inc
pop
fildll
lea
jg
ljmp
lret
sub
push
sbb
xor
add
xor
fwait
cmp
add
ja
jl
push
inc
inc
dec
push
sarl
inc
sbb
xor
out
and
out
jbe
sbb
jbe
and
cmp
or
call
sub
lea
gs
add
pusha
iret
rolb
xchg
push
or
clc
xchg
adc
or
adcl
inc
mov
xor
inc
scas
pop
cmc
sub
mov
lock
sub
jnp
xchg
mov
insb
sbb
ss
adc
adc
push
xor
add
shl
mov
addr16
and
cmp
push
xchg
dec
les
push
push
stos
mov
in
push
ja
cmp
std
sub
push
pushf
push
push
mov
jb
repnz
cmp
push
sbb
mov
sbb
stos
in
sahf
adc
add
dec
or
ljmp
in
sub
dec
mov
les
and
ficoms
addb
std
ja
les
and
or
dec
ds
jo
insb
xchg
xor
cmp
mov
xchg
iret
outsl
mov
ret
push
inc
sbbb
in
and
fnsave
orl
and
push
inc
pop
adc
jecxz
nop
movsl
or
movsb
push
cmc
sbbl
ds
mov
notb
addr16
nop
push
push
inc
dec
add
or
lea
push
jbe
lret
push
fs
mov
fcomip
add
sub
aad
adc
test
ss
movsl
inc
test
pop
inc
test
addb
pusha
push
inc
sbb
shrb
sub
inc
pop
sahf
cltd
data16
push
pusha
lea
mov
add
jns
inc
dec
and
lcall
sbb
jo
sub
idivb
or
incl
cmp
jl
xor
lret
into
in
in
rolb
fcoms
mov
pop
mov
sub
dec
push
cmpb
es
sbb
jl
shrl
aas
ds
mov
enterw
and
jb
std
dec
repnz
pop
mov
push
pop
je
push
mov
cmp
adc
pop
dec
lock
add
jl
jmp
or
sbb
mov
in
jnp
xchg
test
inc
and
cmpsl
loopne
jbe
jne
jns
pop
sbb
mov
push
jmp
push
sbb
jecxz
shll
jmp
int
clc
lock
stos
xor
pop
imul
jne
jl
aam
stos
les
dec
dec
mov
gs
xor
xchg
int3
scas
loop
lea
shll
cs
push
lds
lret
mov
push
sub
clc
mov
ljmp
jbe
pop
xor
or
stc
mov
cld
xchg
rcrl
pop
sahf
sbb
fbld
ficoms
stc
js
add
shlb
push
ss
imul
test
adc
movsb
cmp
cld
push
lock
push
lods
test
inc
clc
and
or
push
clc
mov
xchg
ljmp
in
aas
and
push
or
jns
xacquire
cmp
adcb
adc
das
addr16
movb
leave
aas
test
lldt
adc
mov
mov
je
xchg
adc
stc
iret
xchg
sbb
xor
adc
out
ficoms
sub
insb
lea
push
arpl
pop
sub
fstpl
mov
jg
mov
fcmovnb
mov
push
or
xor
insl
xor
push
popa
out
push
inc
or
insl
jge
mov
jge
dec
inc
adc
adc
loopne
sub
inc
add
push
mov
adc
fwait
ret
cmp
xor
push
cmp
or
ret
mov
data16
sbb
adc
jne
insl
add
mov
mov
jmp
mov
sub
adc
mov
scas
and
mov
lret
das
mov
test
call
ficoml
push
mov
add
das
and
add
sbb
int
fwait
bound
mov
xor
divb
mov
popf
xchg
push
bswap
xlat
pushf
add
es
fiadds
jmp
adc
cmp
jne
push
jmp
cmp
and
mov
adc
bound
rol
sbb
pop
jo
xor
adc
sub
and
ds
push
xor
mov
and
add
gs
adc
push
sub
arpl
adcl
adcl
mov
mov
shll
mov
xchg
outsl
and
push
les
mov
es
push
rolb
cmp
mov
scas
add
jge
or
push
sbb
pusha
sbb
imul
dec
shlb
fiaddl
mov
mov
rclb
lea
mov
add
mov
jmp
addb
push
or
mov
adc
xor
and
popa
movsl
fscale
pop
dec
push
or
add
inc
cmc
scas
lea
pop
or
and
mov
push
inc
mov
fs
inc
mov
or
push
mov
movsb
sub
popa
add
and
test
lea
popf
or
mov
sti
ss
fimuls
mov
mov
fisubrl
add
jmp
and
cmp
pop
dec
push
stos
adc
mov
mov
in
sub
or
popa
bound
fistpl
mov
dec
fisttpll
dec
push
iret
mov
inc
adc
mov
and
mov
xor
and
or
out
sarb
and
scas
fwait
jb
xchg
xlat
push
pop
dec
xor
cmp
popf
stos
loopne
or
dec
aam
in
adc
ret
push
mov
cmpb
add
sub
loope
and
pop
adc
fcoms
push
push
out
je
dec
inc
xlat
in
mov
and
das
push
ret
jae
frstor
mov
xor
xchg
lods
daa
adc
es
inc
xor
inc
adc
je
sbb
xchg
fwait
and
fldl2t
adc
je
lods
xor
jle
push
pusha
xchg
call
add
ret
mov
popa
adc
test
xor
mov
add
pop
or
and
add
jns
loopne
jg,pn
jmp
inc
notb
stos
add
dec
or
jg
cmpl
push
loop
setge
outsb
loope
aam
adc
cld
pop
pop
ja
imul
orb
xchg
imul
popa
ret
dec
cltd
rcrb
ds
or
fildl
enter
add
ds
icebp
adc
and
sub
fdivrp
lods
jmp
inc
lahf
mov
fiaddl
xchg
repz
add
jmp
xchg
cmp
jl
push
push
push
cmp
jge
adc
mov
adcb
push
pusha
push
rorb
cmc
loopne
pop
cmp
pop
xchg
xor
hlt
stos
ljmp
xorb
mov
mov
insl
bound
movsl
adc
in
mov
arpl
adc
add
in
pop
es
in
fildll
test
push
inc
xor
jnp
pop
pop
addr16
push
orb
mov
andb
jg
lods
in
xchg
aam
loope
test
cmp
test
es
jne
sbb
xchg
xchg
test
dec
mov
push
test
sub
pop
test
js
test
nop
insl
andl
sbb
ret
sub
sbb
sbb
sbb
out
loopne
jns
gs
xchg
or
enter
mov
and
xchg
shl
push
xor
push
and
mov
ret
inc
in
jne
and
mov
mov
sbb
sub
addb
pop
movsb
nop
or
jge
or
loopne
xchg
add
push
inc
test
fxch
test
add
or
xchg
lret
add
clc
mov
xchg
and
jl
and
mov
pop
add
jns
jmp
fs
dec
pop
or
jns
push
adc
pop
lahf
arpl
and
mov
test
xchg
aad
cmpb
imul
push
js
rclb
push
push
jae
sti
out
add
push
push
xor
add
loopne
or
jb
repnz
pop
adc
jo
sbb
test
inc
scas
or
or
aam
dec
sahf
inc
cmc
inc
add
dec
or
outsb
xor
push
js
and
push
in
rorb
push
cli
ss
gs
enter
sbb
inc
xor
in
sbb
in
rclb
pop
loopne
jp,pn
fcomi
push
testl
test
ret
dec
push
push
pop
out
or
add
push
mov
dec
std
adc
inc
jb
adc
mov
jo
movsb
inc
pusha
pushf
idivb
inc
or
sbb
add
add
loopne
and
push
aaa
push
xor
ret
push
dec
loopne
inc
test
cs
call
cs
and
pop
or
mov
lock
dec
or
addb
js
cmp
inc
mov
and
mov
lahf
popa
mov
add
dec
mov
lock
in
nop
int
inc
ja
js
inc
rorb
xchg
das
orb
pusha
in
movsl
mov
faddl
push
in
das
test
xchg
iret
dec
into
lcall
pop
subl
push
mov
push
add
test
cmp
stos
nop
lret
cmp
dec
lock
inc
in
in
call
test
and
imul
ljmp
add
in
push
lea
sbbb
push
in
sub
pop
and
es
je
xchg
sbb
cmp
cli
adc
xchg
test
rcr
scas
fsubs
inc
inc
sub
add
insl
aam
inc
or
sub
test
mov
ret
jne
inc
inc
std
lret
fcoml
insb
test
fcoml
fdivrs
inc
int
jmp
xor
push
fistpll
push
add
rclb
mov
ljmp
inc
mov
push
out
xchg
out
gs
nop
xchg
jb
sub
xchg
stos
sub
push
jo
jns
mov
ret
mov
pushf
mov
push
cs
rcr
movsb
and
adc
js
inc
loope
xchg
mov
cmp
mov
or
cmp
xor
loopne
xor
jo
out
insb
cmp
fcoml
outsb
xorl
adc
push
sbb
cmp
xor
inc
loop
cwtl
and
mov
ret
fiaddl
mov
or
push
push
xor
gs
push
or
les
adc
push
mov
pop
push
rorl
out
imul
divb
adc
lock
subb
test
push
push
out
fisttpl
pushf
jecxz
and
cwtl
sub
clc
pop
sub
adc
adc
cmp
xor
pop
lret
outsb
or
ret
lea
xchg
push
mov
test
cmpb
jnp
push
or
xadd
jo
pusha
fmull
test
add
add
pusha
aam
and
push
pop
push
lods
adc
dec
cwtl
movsb
cmp
stos
ds
push
add
adc
sahf
addb
jo
sbb
das
and
mov
mov
int
lea
call
mov
dec
aas
test
mov
lods
stos
mov
or
sbb
mov
push
enter
aas
js
jb
push
and
push
ja
jg
loope
push
mov
push
and
movl
push
int3
in
movzwl
pop
mov
mov
sbb
fstps
and
add
cmp
push
dec
jecxz
cmpb
pop
mov
sbb
push
cmp
cmp
cmp
cs
jg
iret
iret
xchg
xlat
mov
mov
push
or
mov
dec
sbb
fcoml
lods
mov
adc
or
sub
add
dec
sub
scas
jp
mov
or
add
movb
outsb
popf
hlt
or
cmpb
inc
xchg
rcl
or
int3
inc
cmp
adc
jnp
jno
mov
das
and
lods
push
pop
and
add
shll
xor
aam
and
mov
push
xchg
mov
movsb
xlat
or
les
cmp
fdivrs
shr
mov
mov
cmp
fsubrp
or
mov
adc
sbb
xor
jg
push
aad
dec
fstl
mov
fxch
rcrb
push
xor
movsbl
add
pop
jno
clc
adc
leave
divl
jbe
push
paddb
xor
outsb
push
mov
daa
mov
dec
shrb
insl
or
lods
mov
inc
hlt
repnz
dec
add
pop
jo
lcall
add
pushf
ret
push
jmp
sbb
push
or
inc
add
faddl
and
jle
fsubrs
test
mov
cmp
in
repz
pop
pop
push
mov
jl
cmp
cmpb
lcall
sub
pop
mov
adc
mov
inc
stos
add
ds
mov
call
add
inc
hlt
mov
xlat
pop
out
jl
xor
push
fsubp
mov
shrb
jecxz
adc
add
lods
loope
fcmovu
pop
repnz
not
repnz
xchg
xchg
xchg
xchg
add
xchg
pop
or
or
jnp
or
int
int
jbe
jmp
or
addr16
int
int
bound
jmp
adc
pop
adc
push
adc
int
int
dec
adc
dec
adc
aas
pop
int
int
jmp
sbb
xor
jmp
sbb
int
int
es
and
pop
pop
stos
movsb
int
jmp
and
or
push
sub
push
and
test
outsl
sbb
dec
cmp
push
push
or
popf
shl
push
loopne
dec
cmp
lock
and
sub
push
cmp
repz
gs
jb
repz
repz
xchg
iret
xchg
lcall
repz
mov
cmp
repz
rcl
fneni(8087
fcos
pop
iret
in
pop
add
add
and
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
mov
addb
jmp
cmp
in
sub
popf
mov
sbb
add
daa
cmp
or
fsubl
cwtl
sub
pushf
add
cmp
sti
fisubrl
pushf
les
into
in
rclb
aam
andl
sub
aam
add
mov
aam
jne
or
or
je
cltd
push
jo
mov
ljmp
cmp
rdtsc
jne
sbb
cmc
cmpsl
cmp
call
ljmp
xchg
mov
jns
push
fcoml
xlat
popa
hlt
ljmp
lret
lods
jo,pn
cmpsb
ret
adc
fdivl
dec
int3
mov
dec
cmpl
sub
aas
insb
xchg
shll
pop
or
jmp
xchg
sahf
les
and
sbb
push
pop
cmp
cltd
push
andl
sbb
les
fstps
fsts
es
sub
test
pop
jae
sub
out
lock
adc
sbb
aam
ljmp
and
mov
push
fcmovb
pusha
pusha
dec
mov
cmp
xor
sbb
pusha
ret
push
lods
inc
jo
icebp
clc
cmp
bndstx
or
pop
jne
and
add
stos
sub
cs
sbb
shr
add
ljmp
add
pop
jbe
cld
shll
dec
xor
lock
in
mov
push
pop
clc
ss
and
adc
leave
xchg
addl
out
jle
dec
sub
lea
rclb
push
das
call
movb
imul
or
js
ret
in
push
leave
mov
pop
cmpsl
and
inc
sarb
aas
add
ret
sbb
idivb
divl
xchg
mov
sbb
mov
test
pop
es
and
mov
cltd
leave
mov
incb
daa
lea
imul
lret
insb
and
stos
mov
stos
mov
inc
cmp
dec
imul
sbb
lock
pusha
inc
inc
or
or
xor
or
mov
push
lcall
or
lods
out
addb
mov
inc
adc
jb
add
push
cmp
xchg
xor
and
shrb
pop
jns
add
inc
nop
mov
inc
inc
and
enter
fadds
mov
xchg
in
push
mov
sub
imul
je
add
push
lds
or
nop
shr
movsl
add
and
adc
adc
push
push
add
sbb
xor
xchg
movl
xor
imull
aad
inc
loope
js
out
push
aaa
jo
fnstcw
pop
test
xor
iret
mov
sbb
cmp
in
inc
and
jae
push
mov
loop
adc
pop
scas
mov
ljmp
fiaddl
push
sub
push
pop
les
or
xchg
mov
mov
stc
and
nop
inc
adcl
ss
sbb
adc
push
loope
cmp
jl
xchg
or
add
sbb
sar
jle
add
cmp
cli
es
lea
cmp
arpl
outsl
fistps
or
jne
or
js
orb
sbb
jl
js
sbb
or
add
cli
mov
inc
mov
or
ja
mov
or
icebp
jl
dec
adc
movsb
std
jge
mov
test
jae
ds
out
dec
pause
jmp
and
int
xchg
daa
lods
test
cmp
jae
movzbl
dec
inc
movsl
inc
push
mov
scas
lea
fwait
adc
js
xor
or
push
aam
insb
pop
sbb
sbb
inc
in
ss
sets
ret
lahf
dec
je
mov
movl
mov
sbb
mov
das
jp
sbb
sbb
mov
jbe
rolb
mov
fwait
and
mov
pop
add
or
dec
mov
sbb
insb
dec
sarl
add
or
add
adc
test
and
add
pop
lea
adc
sub
rsqrtps
sbbl
adc
and
movsl
sub
pop
pop
ficoml
mov
inc
xchg
lcall
mov
jmp
xchg
sbb
and
lahf
push
adc
and
mov
cmp
jne
js
inc
adc
jae
les
jbe
add
ja
push
mov
xorb
popa
fs
mov
cltd
sub
popa
mov
rolb
push
mov
movl
negb
jg
add
push
and
sbb
mov
cmc
inc
jle
adc
std
test
in
and
sbb
mov
xchg
mov
movsb
rol
cmpb
ja
mov
sbb
push
ljmp
nop
lock
jmp
and
movsb
cmp
jle
pop
mov
inc
dec
pop
popf
xlat
xchg
sbbb
dec
sub
and
and
xchg
out
shrd
daa
jmp
xor
inc
xor
neg
xchg
dec
je
jo
and
xchg
inc
mov
push
lods
push
out
or
cmp
fadds
andl
popa
outsl
faddp
sbb
dec
sub
push
mov
mov
jmp
lahf
sub
or
xchg
pop
pop
inc
push
push
xchg
mov
jg
sub
fbld
pushf
adc
inc
fs
or
ja
and
lea
mov
je
inc
call
adc
add
pop
cli
push
call
xchg
js
and
nop
sbb
cmp
lds
jg
adc
adc
pop
addl
mov
ret
xchg
sub
rol
mov
dec
andl
push
and
hlt
data16
inc
and
jnp
pop
mov
cmp
cmp
scas
pop
jmp
inc
inc
sbb
cwtl
push
fists
daa
imul
cltd
pop
add
cld
and
inc
pop
xchg
and
dec
adc
movsl
xor
in
inc
jg
mov
pop
mov
push
cmp
push
stos
mov
fildl
cmp
and
adc
cmp
js
rclb
imul
push
sub
cmp
xor
pushf
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
and
or
pop
cmpl
sub
mov
fnstenv
insb
leave
test
mov
sbb
dec
xor
mov
paddusw
shll
dec
cs
xor
or
adcb
leave
clc
jo
cld
cmpl
push
in
xchg
add
or
outsb
in
sbb
les
xchg
mov
in
mov
xchg
xor
pop
cmp
ficomps
push
pop
push
xchg
jl
ds
sbb
push
mov
or
mov
hlt
sarb
adc
addb
je
inc
sbb
xchg
mov
or
ss
push
adc
jbe
push
rclb
imul
test
ljmp
les
and
sub
adc
sub
and
sbb
lods
add
adc
mov
jae
shlb
imul
and
pop
dec
loop
jl
push
scas
sub
dec
dec
add
adc
lcall
popf
jl
cmp
orb
and
je
xchg
lret
inc
loopne
lret
dec
ds
jmp
mov
adc
jg
and
xchg
inc
popa
in
inc
shlb
leave
adc
ds
dec
mov
mov
xor
mov
mov
or
xchg
pop
sub
mov
sub
je
push
xor
lds
dec
mov
insb
in
incb
je
imul
leave
adc
clc
bound
vpmacswd
sub
mov
sub
dec
push
fmuls
dec
scas
dec
jbe
ss
imul
inc
pop
adc
movsb
hlt
push
out
push
push
lods
add
sub
jbe
pop
and
and
jecxz
push
aas
jg
mov
xor
and
imul
repnz
scas
pand
ret
addb
xor
das
add
mov
sbb
adc
nop
addl
adc
les
inc
enter
or
ljmp
imul
pusha
stos
dec
jp
mov
add
mov
dec
adc
cmp
fcmovnu
xor
mov
fcmovne
leave
sbb
dec
insl
mov
movb
push
or
inc
mov
push
cltd
mov
xlat
out
mov
mov
pop
pusha
out
sbb
or
jle
add
cmp
or
enter
outsl
jecxz
inc
mov
push
mov
adc
pop
ds
xchg
push
push
inc
fstpl
movsb
mov
vunpckhps
inc
xchg
clc
pop
add
xchg
loope
enter
mov
push
loope
dec
dec
sub
mov
addr16
jbe
arpl
sbb
adc
cmp
fisubs
cmpb
mov
gs
les
fdivrs
pop
cmp
je
cmp
pusha
xor
dec
and
push
inc
xchg
jp
roll
fnstsw
arpl
xchg
adc
outsb
and
fimull
notl
mov
scas
mov
or
cmpb
js
xor
xchg
or
ret
lods
xchg
mov
and
push
jp
or
lea
shll
sbb
inc
bound
pop
xchg
sbb
xlat
push
mov
or
add
or
sbb
imul
cmp
movups
and
ret
and
adcb
xchg
addr16
mov
xlat
xor
and
testb
aaa
add
movzbl
ret
push
xorb
ret
jle
or
push
lods
rorb
repnz
xorb
cmp
mov
insb
mov
pop
push
shrb
or
les
add
stc
sub
mov
lea
add
inc
cs
shlb
adc
cld
scas
cmpsb
cmp
sub
push
cmp
jge
mov
sbb
inc
inc
les
jmp
fstpt
pop
mov
lods
loop
loopne
push
lret
xor
lahf
shlb
pop
mov
clc
clc
cld
add
pop
pop
mov
lahf
lret
jg
push
add
add
add
cmpsb
test
and
jle
sbb
xor
dec
je
add
add
jg
dec
jne
mov
and
dec
or
mov
shr
sbb
or
lret
ljmp
xor
inc
mov
push
dec
js
mov
ret
mov
cli
or
cmpsb
push
jbe
inc
adc
out
add
in
ret
mov
or
je
push
add
mov
dec
clc
out
loop
sbb
sbb
scas
out
xchg
repz
add
lret
sub
adc
add
push
add
jne
sbb
jle
mov
pushf
cmp
ss
cmp
into
roll
xor
add
add
or
clc
xor
inc
andb
inc
jmp
sbb
mov
idiv
inc
inc
imul
mov
add
imul
js
push
jp
xchg
sbb
cmpsl
movsb
dec
je
mov
add
add
adc
or
cmp
mov
stc
mov
lods
sub
or
push
adc
xor
pop
nopl
lock
imul
test
jbe
inc
test
jmp
daa
push
inc
lea
push
cmp
mov
pusha
test
jae
insl
adc
ja
mov
pop
outsb
gs
jae
push
lods
dec
jmp
mov
stc
jle
mov
aas
pop
jne
mov
inc
sub
mov
adc
cmp
je
cmp
push
cmp
adc
add
into
mov
jb
xor
inc
test
or
or
jb
jg
arpl
mov
je
ret
stc
cmp
jne
jg
add
mov
and
jne
mov
decl
and
sbb
cmova
mov
imul
adc
xor
call
jmp
jp
jl
or
jg
mov
jmp
ds
push
jmp
inc
jl
std
push
pop
outsb
inc
jg
aaa
jp
add
shl
dec
mov
cmp
mov
sub
mov
mov
and
push
jg,pn
std
les
outsl
adc
test
or
dec
sbb
je
xor
sub
pop
xchg
inc
rcrl
or
loopne
mov
push
fbld
sahf
cmc
jo
out
xor
and
push
pushl
ret
add
cmp
pusha
mov
insb
xor
fs
imul
xlat
je
inc
mov
or
adcb
add
aaa
mov
mov
orb
jmp
out
inc
xor
and
mov
add
mov
jge
inc
out
shrl
pop
das
movsb
xor
xor
fsubs
inc
cmpb
mov
ds
pusha
adc
pusha
xor
cmp
in
inc
inc
mov
adc
push
out
jmp
xor
inc
ret
int3
int3
push
add
mov
sbb
test
rolb
negb
movsb
std
ret
adc
cmp
cmp
ret
pop
pop
push
inc
xor
jno
arpl
push
cmc
cmp
cmp
or
jne
ret
mov
cld
test
or
mov
push
clc
mov
fsubs
mov
push
loop
adc
addl
xchg
cltd
bound
inc
mov
add
mov
adc
fsubrs
je
xor
leave
mov
dec
gs
rcll
dec
or
mov
mov
mov
add
inc
iret
sbb
jo
sub
rcl
xchg
dec
fcmovu
cli
mov
sub
xorb
mov
add
sbb
pushf
sbb
test
xor
adc
cmpsb
xchg
fucomip
push
lock
sub
jge
jne
popa
mov
add
js
and
andb
push
sbb
pop
push
add
push
or
add
rclb
jo
loope
pusha
dec
inc
lret
jo
inc
inc
data16
mov
mov
xchg
mov
dec
addr16
add
aam
adc
sub
mov
fimuls
inc
cmp
jne
inc
cmc
fildl
mov
orb
push
or
jmp
aaa
push
or
rolb
pop
xchg
sbb
repnz
repnz
pop
lods
sbb
bound
addr16
shrl
push
push
into
adc
imul
cmpsb
pop
xlat
lret
jl
fcomps
xchg
ret
mov
inc
inc
push
fisttps
dec
push
movb
js
mov
xor
sbb
add
dec
inc
pop
loopne
mov
push
cmp
pop
aaa
fldcw
lods
sar
xchg
xchg
insb
cmp
loopne
rcrb
pusha
pop
movsb
xchg
adc
or
push
sti
sub
into
jnp
xor
pop
fs
mov
inc
mov
add
inc
ds
cmp
outsb
add
push
xor
lret
inc
or
or
js
push
mov
mov
dec
jmp
sub
inc
and
sbb
push
sub
or
mov
aas
nop
cmp
inc
cwtl
jmp
jmp
nop
xor
push
sahf
add
inc
jmp
pop
incl
adc
cmpb
jne
imul
mull
jno
jnp
test
jmp
jmp
mov
ja
dec
ret
sbb
and
in
mov
push
cmpsl
jge
fdivrl
add
lods
rolb
mov
adcb
or
push
xor
aam
popa
ja
into
push
xchg
test
xchg
sub
jne
in
mov
lods
jb
loope
pushw
adc
cmp
popf
cmp
sub
dec
imull
inc
sbb
jbe
stos
aas
sbb
pop
repnz
add
arpl
bound
mov
bound
push
addb
shll
call
pop
cmpsb
jns
cmpsb
pop
fstl
add
mov
mov
movsl
or
push
dec
dec
and
data16
xchg
inc
jne
enter
dec
adc
mov
push
clc
jae
inc
pusha
xor
mov
adc
inc
push
pop
cld
or
fs
insb
je,pt
inc
addl
push
scas
and
aaa
jecxz,pn
add
xor
pop
out
dec
mov
inc
adc
orl
mov
movsb
out
pop
test
xchg
fisttps
pop
lods
dec
leave
dec
imul
fimull
lock
cld
add
shrl
add
adc
cmp
xlat
or
cmp
js
lret
push
jo
fimuls
push
jl
or
mov
lock
dec
shl
jmp
in
add
xchg
pop
push
push
cmp
dec
loopne
inc
push
jecxz
push
cli
xchg
sar
xchg
and
inc
cmp
loop
inc
push
sub
push
addr16
aam
add
mov
or
xchg
add
mov
push
insl
orb
dec
xlat
jmp
cltd
sbb
aam
test
cmp
push
leave
mov
and
push
lret
sahf
lea
bound
xchg
jle
push
push
jae
cmp
dec
js
sub
jbe
lock
inc
xor
cmp
jb
test
aas
push
lds
sbb
aad
mov
fsts
dec
test
dec
ret
jmp
sbb
test
pop
outsb
loopne
xchg
or
inc
movsl
fdivrl
xor
cmp
pop
mov
add
dec
xchg
inc
ljmp
or
or
mov
cld
sbb
push
adc
pop
and
xchg
inc
push
cmp
pop
dec
xor
or
adc
andb
jne
rclb
popf
pusha
sub
dec
cmpb
cs
adc
xlat
lods
or
jb
inc
push
scas
pop
inc
adc
push
inc
adcl
jg
sbb
mov
mov
xchg
dec
sbb
shr
jl
push
fmuls
loopne
mov
add
inc
sbbl
jecxz
mov
pop
mov
add
jmp
push
fistpll
arpl
adc
or
je
push
or
xorb
xor
cltd
mov
clc
push
add
add
add
arpl
in
push
mov
add
mov
add
sbb
xor
iret
test
out
add
xorl
sub
inc
xlat
sbbb
cmp
fsts
dec
pop
xchg
sti
mov
jmp
cmp
jne
sbb
add
push
bound
jg
fldcw
pslld
sbb
mov
sbb
mov
out
data16
inc
dec
add
iret
or
mov
into
je
mov
or
pop
ja
jmp
mov
movsl
mov
cld
sbb
and
cltd
pop
sbb
pop
push
xchg
adc
test
mov
pop
add
pusha
out
and
sbb
add
movsl
in
mov
xchg
push
dec
stos
push
push
shlb
pop
fmull
pop
in
jmp
cli
test
mov
je
xor
jnp
ret
addr16
ret
scas
xchg
mov
loope
push
inc
jle
dec
inc
sbb
imul
rorl
cmc
jno
or
cmp
je
push
mov
or
or
and
mov
sbb
imul
jns
and
xor
imul
push
and
push
or
insl
mov
jecxz
cmpsl
inc
mov
push
sub
adc
popa
pushf
fstpt
scas
cmp
push
dec
xor
mov
pop
jb
xor
ja
jns
rolb
in
rclb
sub
xor
pop
xchg
lock
sbb
mov
loop
push
jmp
bound
mov
push
jno
sbb
push
dec
movsb
add
sahf
push
nop
jns
add
dec
cmp
or
or
xchg
shlb
sbb
cltd
loopne
fsts
stos
pop
aaa
fs
insb
imul
xchg
pusha
jb
loopne
push
out
mov
test
and
or
addb
rcrl
inc
rcrb
mov
sbb
adc
sbb
add
pusha
orl
push
pop
lcall
or
daa
bound
push
xchg
pop
ret
mov
add
icebp
les
or
or
daa
jb
mov
daa
pop
jb
pop
out
mov
test
sub
dec
enter
or
add
stos
push
lock
xchg
mov
leave
push
jno
fsubl
paddusw
push
addl
adc
mov
aam
add
adc
adc
or
pusha
mov
push
cmpb
mov
push
fs
or
sub
inc
leave
jns
ss
and
and
sbb
jbe
pop
and
fwait
les
push
pop
jo
xorl
aas
lret
cmp
mov
mov
sbb
cmp
pop
mov
cmp
push
xor
fsubl
xor
dec
inc
xor
lahf
mov
push
pop
pop
and
jle
movsb
icebp
inc
pop
jne
xor
xchg
add
sarl
sub
in
lcall
jmp
sub
xor
sub
jmp
dec
pop
outsl
mov
sub
shll
pushf
imul
adc
cmp
and
lcall
and
push
cmp
pop
adc
inc
imul
inc
in
pop
push
popl
cld
ret
sbb
outsl
jae
xchg
inc
enter
cwtl
jecxz
pusha
pop
sbb
cmp
mov
divl
aaa
add
aam
inc
and
or
adc
test
xchg
loop
fs
nop
adc
or
jno
stos
or
jmp
rorb
stos
adc
adc
or
popf
or
adc
xor
out
push
xchg
dec
push
push
mov
or
xorl
hlt
adc
and
push
cli
test
fmuls
cmp
inc
or
jo
iret
mov
add
sti
or
aaa
repnz
and
es
sbb
int
push
lods
cmc
and
mov
pop
rcll
and
clc
pusha
jmp
loopne
dec
adc
xor
test
push
pop
cld
mov
or
shll
popf
subl
sub
arpl
pop
pop
and
push
push
xor
adc
mov
mov
inc
mov
js
mov
sar
les
mov
arpl
cmp
ja
loope
or
or
xor
lock
hlt
int3
aam
test
bound
cmp
xchg
mov
cmpl
loopne
sub
inc
jne
pop
push
push
clc
mov
es
lock
cld
pop
pop
into
xorb
push
cmp
mov
pop
stos
test
mov
mov
fmuls
cmp
inc
sbb
sbb
mov
cmp
dec
daa
loopne
adc
inc
dec
pop
std
dec
and
xchg
or
adc
sbb
test
inc
mov
in
pop
push
enter
and
push
add
daa
movsl
push
mov
idiv
int
or
inc
push
in
fs
dec
dec
cmc
and
pop
and
das
xchg
cmp
adc
in
mov
out
movlps
push
jl
add
mov
call
test
push
mov
pop
imul
jecxz
rclb
sub
and
mov
xor
cmp
mov
jno
push
pop
sarb
xchg
push
pop
add
rcrb
sub
out
jae
cmp
pop
mov
or
ficoms
leave
mov
fmuls
or
add
shl
xchg
jb
insb
aaa
jmp
adc
das
jnp
cli
push
rorb
or
mov
aam
shr
rep
adc
data16
adc
sbb
fs
dec
sbb
in
adc
lret
mov
cmp
fldcw
pop
mov
fwait
scas
stos
pop
jg
hlt
arpl
sub
push
sub
xchg
sbb
pop
fcomps
dec
jae
dec
fisttps
cmp
ja
xor
loop
dec
shll
jg
push
or
loope
decl
xor
push
mov
lcall
inc
loope
jp
enter
jmp
js
fsubr
loope
or
test
or
inc
jmp
inc
daa
adc
add
popa
sbb
xor
mov
dec
movsb
lds
loop
add
shrb
pushf
movsl
adc
js
or
je
repnz
adc
jmp
loopne
cmpl
je
scas
and
fadd
jg
pop
adc
sbb
es
js
mov
imul
xor
push
push
call
aad
jbe
push
add
mov
push
add
mov
lea
icebp
adcb
jmp
and
pushf
pop
outsb
xchg
inc
cmp
hlt
sub
sub
pop
dec
push
out
loopne
cmp
and
repz
jae
inc
or
loopne
pop
or
push
jg
loopne
lret
add
xor
sbb
insl
sbb
mov
pushf
andb
pop
cs
jle
ret
in
loope
js
data16
add
adc
push
or
pop
cmp
mov
jmp
and
mov
cmp
mov
add
sub
nop
mov
mov
ja
inc
jmp
mov
cmpb
sub
insl
push
imul
push
clc
imull
and
popf
jne
sub
push
mov
or
sbb
clc
dec
xor
aaa
cmp
push
or
je
pshufw
pop
subb
aaa
add
mov
ss
ljmp
push
inc
push
stos
sbbl
ss
ret
les
dec
ljmp
mov
enter
adc
je,pt
sar
nop
push
mov
xor
loope
mov
stc
xchg
mov
adc
pop
push
push
mov
sbb
int
xor
bound
push
jg
ret
pop
jmp
push
ret
clc
js
push
outsl
cltd
loope
or
mov
sub
mov
sarb
movsb
mov
push
lock
rolb
inc
cs
dec
popa
dec
xor
loopne
push
adc
in
xchg
inc
mov
mov
or
xor
sub
or
pop
or
xor
call
push
rcll
mov
cmp
jbe
push
jo
push
add
sbb
jmp
das
scas
xor
pop
push
and
xor
lahf
pop
ret
add
adc
add
push
cmp
cltd
nop
sbb
cli
pop
inc
daa
mov
pop
pop
or
mov
imul
pop
mov
inc
icebp
in
call
cwtl
test
jmp
push
decb
adc
js
xchg
xchg
xor
dec
jo
mov
dec
out
jmp
dec
push
xchg
je
daa
rorb
imul
sub
mov
jo
ljmp
add
and
loope
fsubl
lea
add
push
scas
push
mov
adc
xchg
das
in
inc
les
push
inc
jle
outsb
data16
xchg
xor
adc
nop
sub
xchg
test
push
push
mov
push
cmp
pop
ja
shll
mov
sub
sbb
push
mov
mov
lahf
cwtl
mov
scas
scas
pusha
mov
pop
mov
ds
cmp
push
in
js
in
cs
pusha
jle
push
xor
pop
negl
and
inc
aam
ss
or
cltd
sbb
ljmp
js
xchg
push
mov
adc
inc
inc
popf
fidivs
push
adc
xor
or
or
gs
mov
pusha
jo
jmp
popl
add
test
add
mov
push
fsubl
andl
into
mov
fisubl
in
clc
push
sbb
orl
or
add
or
jmp
rcl
inc
pusha
in
push
je
mov
cmp
push
shlb
adc
sub
shrl
or
fidivl
bound
sahf
mov
adcl
das
pushf
out
or
movsb
mov
jle
int3
add
ficoms
imul
or
iret
jb
fsubp
jg
jo
xor
out
cmp
jb
testl
and
je
sub
mov
les
sub
jne
mov
loopne
add
or
or
add
stos
imull
adc
ljmp
mov
add
jae
dec
xlat
hlt
dec
add
shrb
lahf
data16
cmp
je
cmc
out
mov
mov
push
fsub
or
xchg
xor
stos
jne
sub
stc
dec
mov
fcoml
mov
inc
mov
jle
pusha
dec
popa
or
fs
and
and
into
add
and
mov
pop
or
fnstcw
cmp
and
sbb
lea
jno
sbb
lret
movd
movaps
mov
enter
repz
clc
jae
xor
jle
xor
rcrb
loope
cli
push
ror
test
decl
push
jge
repz
or
jg
pop
jg
js
fstl
adc
jnp
mov
inc
imul
adc
or
push
cmp
stos
adc
mov
cld
pop
add
outsb
ret
mov
add
mov
mov
int
sub
fcmovb
sbb
adc
push
dec
adc
mov
rcrl
jbe
inc
testb
out
orb
dec
mov
mov
rolb
pop
add
std
incb
je
mov
jb
test
mov
bound
adc
int3
jmp
movsb
fisttpll
rol
xor
cmp
cld
std
aam
add
inc
hlt
jge
lret
mov
movsl
ljmp
fsubl
push
pop
inc
dec
pusha
mov
nop
or
lock
fcoms
sub
ds
mov
jmp
push
add
push
decb
ficoms
in
loop
add
idiv
ja
imul
clc
jo
std
cmp
adc
jne
inc
cmpb
out
orb
and
add
decl
inc
inc
and
adc
or
push
shll
jne
arpl
ret
daa
mov
call
daa
int3
and
xor
jno
push
jmp
mov
or
mov
xor
je
arpl
lcall
xor
cwtl
icebp
mov
adc
or
das
mov
xor
sbb
sbb
sysexit
sbbb
cwtl
cmp
or
enter
add
adc
add
test
popf
ss
push
cmpb
inc
jecxz
imul
pop
lock
ret
sub
dec
addl
push
adc
cmpsl
pusha
pusha
cmp
push
movb
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mull
ss
enter
sbb
dec
or
cmp
pop
jno
add
inc
cmp
or
addr16
movsb
jnp
call
call
xchg
or
add
mov
call
adc
cmc
inc
fwait
pop
cmp
loopne
adc
nop
loopne
add
out
jnp
std
add
mov
pop
mov
or
out
mov
hlt
push
pop
mov
pop
adc
clc
sbb
bound
jge
and
int3
mov
or
and
push
adc
orb
repz
cmp
adc
inc
mov
arpl
adc
inc
loopne
jecxz
inc
int3
aas
out
jg
push
mov
jl
je
mov
dec
dec
lret
es
add
dec
mov
mov
sbb
or
pop
xchg
rcll
scas
dec
push
mov
mov
or
rol
push
add
aas
data16
mov
xor
jbe
movsl
add
je
pop
mov
add
xorb
enter
or
pop
stos
xor
test
jo
push
fidivrl
adc
mov
pop
rcr
or
push
jmp
in
sub
xor
test
push
rcl
add
pop
lret
xchg
shrl
rcr
or
jmp
push
or
fwait
cwtl
jne
sar
jns
movsb
pop
inc
inc
sahf
push
in
jb
pop
and
push
loopne
loopne
and
pop
cld
aad
push
jp
cmp
sbb
jno
jae
cmp
or
inc
xor
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
cmpsl
dec
xor
xacquire
or
lret
jne
inc
aaa
push
lds
mov
mov
loope
jg
adc
adc
cmpsb
push
push
push
pop
xor
push
call
dec
push
lret
bound
loop
std
mov
fwait
mov
shll
cmp
inc
sub
rclb
aas
and
pop
mov
out
push
dec
pop
pop
jne
sbb
push
mov
adc
out
cli
fisttps
into
cmp
jb
rep
jmp
pusha
xor
mov
mov
pop
and
enter
aam
cld
fidivrs
sti
rclb
in
adc
xor
shrl
pop
mov
cltd
test
lods
adc
pop
repnz
push
dec
add
nop
into
enter
nop
inc
adcb
inc
xchg
mov
cmp
mov
push
pushf
xchg
mov
cld
aas
iret
test
inc
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
xchg
mov
lock
sbb
xor
jmp
sbb
nop
fcoms
lods
sbb
sti
and
shll
and
dec
jb
in
lea
jl
cld
pop
and
std
jle
cld
or
cld
out
ds
neg
sarl
or
inc
xchg
xchg
daa
stc
sub
addr16
pop
nop
push
jo
xchg
mov
insl
data16
mov
add
sahf
inc
push
out
push
outsb
in
xchg
lret
nop
dec
dec
xor
insl
sub
mov
cwtl
sub
push
mov
adc
sbb
cmp
repz
xor
inc
repz
lds
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
out
iret
and
insb
push
je
dec
push
adc
add
dec
adc
pop
mov
pop
push
xor
jmp
sar
shrb
jmp
imul
mov
mov
or
mov
jecxz
push
push
or
adc
fidivs
sub
testb
push
inc
mov
mov
leave
push
add
imul
shrb
push
dec
xchg
sbb
adc
mov
and
inc
xor
mov
mov
adc
fdivr
push
xor
addb
inc
and
pop
push
xchg
sbb
push
jecxz
fistpl
mov
andl
popa
in
mov
jmp
and
adc
and
adc
push
pop
mov
imul
and
lods
xchg
or
push
addl
je
and
ret
sbb
inc
xchg
inc
and
jp
repz
in
lods
arpl
jb
and
sub
jge
jno
mov
sbb
lcall
pop
rcr
jle
mov
test
mov
mov
push
jbe
sub
or
xchg
cmp
pushf
mov
cmp
xor
mov
cmp
push
lret
negb
ret
cmp
jne
push
adc
rcr
lcall
jne
pop
or
mov
add
enter
insb
jb
add
stc
mov
jne,pt
mov
inc
dec
jbe
xor
pushf
hlt
aaa
aas
add
in
sarb
jne
cmc
ret
sbb
pop
rorl
loop
sbb
lock
add
mov
sub
xor
mov
lock
and
je
jbe
inc
les
mov
popf
nop
xchg
fs
stc
mov
lahf
mov
inc
aas
pop
and
pop
adc
jg
orl
jns
ja
pop
adc
jge
rclb
mov
scas
xor
or
and
jl
add
or
aas
pop
sub
testb
leave
push
shll
ss
mov
xchg
adc
or
and
jne
add
leave
jge
push
or
movntps
push
push
xchg
xorl
push
pop
xchg
pop
imul
test
sbb
push
lods
mov
shr
add
xor
jne
sahf
pop
clc
cld
cmp
frstor
or
or
adc
loopne
ror
push
ljmp
and
jmp
pop
add
push
sub
lods
sub
ss
fs
mov
pop
or
int
je
or
cmp
cmpsl
inc
sub
adc
js
mov
gs
and
sbb
add
test
pop
dec
shl
fdivr
mov
push
fcoms
sub
jle
addr16
push
or
or
dec
ficoms
clc
sbb
jp
rorb
test
sbb
fwait
inc
or
cld
jb
jp
outsb
jle
clc
jbe
add
xchg
mov
out
mov
mov
pusha
add
xchg
popa
jb
mov
adc
call
push
add
sbb
clc
cmp
xorl
sub
lods
cld
jbe
mov
inc
in
divb
xor
inc
mov
pushf
pop
sbb
repnz
movsl
xor
cmp
and
cld
out
or
inc
xor
and
into
push
jbe
dec
mov
add
pushf
ret
xor
cld
cmc
inc
push
test
sub
rcrb
js
hlt
cmpl
rolb
adcl
pusha
sub
add
inc
js
lcall
or
cli
test
or
leave
inc
dec
push
rolb
push
test
adc
rol
sub
bound
cmpsb
sbb
lods
cmp
pop
mov
iret
or
dec
ret
out
pop
add
mov
loopne
pop
push
adc
jbe
sarl
rclb
push
push
xor
inc
xchg
and
xor
inc
loop
pop
sbb
mov
add
inc
pop
arpl
addb
add
lcall
aam
daa
dec
jne
jmp
test
push
gs
cs
push
ja
xchg
movsl
stos
dec
es
jne
mov
ret
xor
test
stos
push
mov
dec
pop
xor
enter
or
daa
push
sub
shrb
in
and
jno
dec
mov
or
lea
outsb
into
inc
add
inc
in
nop
call
xor
push
in
cmp
jne
mov
fwait
cmpsl
mov
jne
es
jne
fwait
jns
and
adc
or
adc
jb
mov
xor
or
adc
jmp
in
out
pushf
std
push
xor
cld
cld
jmp
aas
imul
adc
adc
inc
inc
inc
lea
jne
lock
cmpsl
sub
ds
fdiv
mov
mov
sbb
hlt
add
push
xor
into
sub
pop
add
repnz
and
xor
jnp
or
sub
or
pop
rcrl
mov
ret
or
push
xor
sbb
add
mov
add
adc
cmpsl
fstpl
dec
dec
or
or
or
cmpsb
dec
and
cltd
or
test
add
and
and
imul
mov
inc
sbb
inc
stos
xchg
pop
mov
adc
jg
or
lock
push
dec
jge
push
add
popf
or
jmp
test
inc
cli
xchg
orb
call
cmpsb
je
mov
or
cmp
jg
add
mov
bound
mov
jg
jo
mov
add
push
push
push
push
rol
mov
adc
cmpsb
and
push
and
and
inc
divb
out
dec
and
sub
mov
add
lea
in
movsb
pop
pop
xchg
cmpsl
and
popa
sbb
cmpsl
mov
inc
test
mov
sbb
pop
xorb
clc
pop
es
loope
les
pop
aam
mov
push
in
sub
inc
xor
call
mov
inc
orb
xchg
add
sub
push
xchg
les
mov
push
andb
lods
inc
pop
lret
insl
mov
ljmp
in
mov
add
repz
mull
add
add
out
testl
scas
mov
rorb
mov
lea
cmp
jbe
or
fsubs
mov
add
mov
dec
incl
jge
not
or
and
or
das
loop
sbb
adc
mov
bound
xchg
test
insb
loopne
mov
loope
mov
add
push
adc
adc
mov
adc
sub
lock
mov
mov
mov
push
lcall
xchg
jmp
mov
incb
mov
inc
insl
mov
inc
movb
lea
neg
mov
sbb
and
add
add
xor
fdivrs
sbb
scas
mov
cltd
mov
pop
add
mov
inc
cmp
jb
pop
loopne
les
shll
jmp
add
mov
pop
pop
ret
and
fs
pop
and
or
ret
outsl
or
add
call
iret
and
jne
or
imul
push
scas
shl
push
adc
test
lret
dec
stc
addl
pop
add
and
stos
jne
and
add
dec
je
out
jne
pop
xor
es
rclb
inc
ss
add
repnz
and
es
out
push
aam
xchg
pop
addr16
push
inc
cmp
addl
int3
add
adc
sbb
loop
xor
adcl
mov
jle
push
sub
or
jl
and
lret
repz
mov
loopne
scas
les
cmpl
loop
out
out
into
add
inc
jecxz
outsl
popa
sub
loop
pop
mov
inc
jmp
fistpl
movl
jne
sub
adc
xor
cmp
adc
cmp
out
xor
push
scas
mov
je
cmp
sbb
stos
jl
or
adc
int
mov
pop
mov
shrl
lods
adc
mov
or
mov
popf
rcrb
dec
mov
and
je
lret
sbb
push
dec
loopne
xor
sbb
sbb
test
and
mov
test
or
sub
push
jbe
push
add
and
dec
movsb
and
movsb
inc
xchg
or
in
rclb
xor
scas
movsb
push
adc
shl
cld
std
mov
sbb
push
sub
jecxz
xchg
sbb
test
inc
xor
or
or
mov
mov
inc
rolb
mov
mov
les
push
insb
dec
push
push
popa
jmp
adc
lds
xchg
loope
push
les
aaa
jne
mov
pop
ret
or
mov
inc
sbb
jne
fs
add
iret
adc
sbbb
flds
add
xchg
add
aas
inc
inc
sbb
push
and
adc
xlat
lds
push
adc
arpl
push
inc
adc
inc
imul
orl
cmp
popf
loopne
pusha
cmpsb
sbb
dec
or
or
push
xor
xchg
andb
add
mov
insb
jb
shrl
pop
xor
addl
add
cwtl
sbb
inc
mov
mov
push
dec
jno
xor
pusha
add
mov
shl
push
jb
lea
push
adc
or
inc
sti
aaa
xchg
adc
cmp
popa
ret
push
fistl
clc
je
inc
cmp
ret
es
xor
xor
pushf
xchg
cltd
clc
adcl
ret
jne
or
rclb
and
push
inc
sti
or
or
push
shrl
adc
xor
cmpb
inc
in
popl
add
in
jno
push
cltd
fs
dec
ja
push
icebp
daa
rorb
call
mov
and
push
outsl
mov
inc
sti
mov
mov
or
add
es
inc
sbbl
stos
mov
in
stos
addl
clc
xor
mov
dec
gs
pop
jecxz
leave
ret
push
inc
sub
sub
add
inc
sarb
fdiv
lret
repnz
mov
inc
xor
inc
movsb
sar
add
xchg
fidivrs
movsb
and
js
pop
pop
sub
push
or
sti
or
gs
shlb
add
sbb
rcll
inc
and
push
cmc
mov
and
jmp
add
jl
adc
loop
or
imul
mov
xchg
sbb
jne
ja
rdpmc
mov
jge
fmuls
xor
test
subb
or
cmp
pop
push
push
sbb
mov
out
jno
in
jbe
adc
shrb
jmp
movl
push
dec
adc
jno
pushf
loopne
in
aad
rcrl
adc
push
sbb
insb
push
data16
not
add
pop
addl
decl
cmp
push
inc
jecxz
out
jne
sub
mov
push
pop
cltd
pop
idiv
lea
mov
pop
decl
mov
adc
cli
add
pop
punpcklwd
ljmp
adc
rcl
xorb
lahf
xor
or
mov
xor
ficoml
inc
aad
or
cmp
ficompl
add
or
mov
sub
add
int
dec
or
xorl
dec
shl
mov
push
jle
adc
imul
mov
hlt
add
or
sahf
add
push
testb
and
xchg
loopne
mov
js
pusha
push
test
inc
aaa
inc
add
mov
imul
out
sub
mov
ss
loope
in
mov
adc
and
lods
add
addl
jmp
cmp
jb
jb
sbb
fadds
iret
ud2
test
bound
je
mov
sbb
idiv
adc
add
fs
jmp
sub
pop
daa
adc
push
ficoml
test
popa
sahf
test
push
loopne
or
fwait
imulb
aad
andps
pop
add
or
cmc
jle
jne
push
pop
pop
cmp
bound
mov
sbb
add
jmp
sub
js
ret
xor
and
mov
xchg
add
sub
mov
stos
dec
push
fildll
lea
push
test
sbbb
cmp
dec
dec
xor
arpl
lock
xchg
lcall
in
push
addr16
jne
mov
addr16
add
mov
push
dec
or
jne
pop
imul
repnz
xchg
jnp
xor
cmp
and
pop
inc
sahf
outsl
cmovp
bound
push
or
mov
mov
mov
mov
je
shrb
jl
mov
or
js
sub
leave
add
ja
repnz
pop
rorb
add
dec
pop
jne
clc
push
push
jmp
sub
rorb
cmp
pop
add
cmp
or
push
fsubrs
fs
ljmp
imul
add
addb
mov
jmp
cmp
jae
ljmp
push
mov
test
mov
sbb
loopne
cmc
and
push
add
int3
inc
sub
mov
mov
cli
mov
add
add
sub
bound
pop
add
xor
sub
movsl
sub
adc
test
cmpsb
sbb
fst
fsubrl
fsts
xor
je
inc
ret
mov
dec
and
xor
loopne
outsl
or
je
out
iret
mov
pop
jle
fdivs
push
pop
pop
imul
or
lea
out
adc
and
dec
pop
and
imul
addr16
subb
and
frstor
int
add
or
incl
iret
xchg
xor
cmpl
pop
dec
sbb
pop
inc
inc
inc
outsb
dec
test
add
imul
scas
or
dec
pushf
pop
cmp
push
in
movsl
movsb
dec
jo
jmp
inc
test
sbb
imul
cmp
lret
or
push
push
add
sbb
push
sub
daa
roll
movsl
stos
sbb
out
mov
insl
or
cmp
sarl
ret
and
cmp
sarl
inc
mov
data16
pop
push
push
mov
push
inc
cmp
pop
sub
sub
adc
stc
xchg
clc
push
mov
stc
mov
lock
cmc
mov
jle
imul
add
cwtl
jmp
loopne
je
sub
adc
adc
dec
or
je
ret
sub
das
out
add
testl
addb
outsb
mov
jmp
dec
or
mov
cltd
pop
inc
mov
mov
addr16
sub
clc
sbb
shrb
pop
xor
aam
jb
ljmp
push
popf
xchg
mov
push
xor
pop
shll
mov
or
jg
add
aam
pop
xchg
sarb
xor
add
xor
inc
fdivrs
mov
xor
fsubs
jo
add
dec
sbb
stos
test
mov
aad
gs
jecxz
mov
and
cwtl
jge
orb
dec
ret
pushl
lret
adc
aaa
jb
adc
fadd
adc
pop
mov
jl
addb
insb
scas
dec
push
nopl
push
push
les
cltd
ss
mov
sub
inc
inc
adc
xchg
jl
jge
or
sbb
mov
ljmp
repz
sarl
mov
shlb
inc
pop
fsubr
sub
leave
push
mov
and
pop
fs
dec
mov
adc
add
cmp
ret
push
and
mov
in
dec
pop
pusha
cmpsl
add
or
sub
jle
push
xchg
pop
and
jmp
adcb
lret
lcall
pop
mov
mov
mov
subb
dec
cld
jmp
orb
and
push
aad
and
inc
push
je
dec
pusha
int3
pop
mov
sub
pop
push
movsb
scas
out
test
fwait
or
rcr
jbe
mov
rorl
push
dec
call
gs
pop
pop
push
lock
sbb
adc
pop
xor
movsb
jmp
pop
xchg
aad
dec
pop
xor
pop
or
shll
xchg
cmp
xlat
repnz
jle
imul
shl
and
fsubrl
add
lock
sar
jmp
fmuls
mov
rcll
je
popf
sbb
dec
loope
pop
jne
mov
mov
mov
bound
mov
add
popa
jns
in
nop
popa
push
leave
add
xchg
repnz
dec
lret
mov
int
mov
xchg
jbe
jae
aad
mov
jmp
ficoms
inc
movsb
into
pop
push
leave
arpl
dec
inc
pop
jno
gs
mov
push
gs
fs
rolb
or
mov
lods
mov
notl
test
xchg
iret
repz
adc
add
loop,pn
fs
hlt
lcall
jmp
mov
and
and
gs
mov
nop
push
lock
cmp
add
pushl
pushl
les
mov
and
dec
jnp
or
in
push
hlt
addr16
and
in
adc
push
xchg
push
loopne
mov
test
pusha
aaa
and
je
cmp
mov
xor
push
je
mov
xchg
dec
inc
jmp
mulb
or
jne
pop
xlat
leave
lea
xorl
rol
cli
add
push
loope
mov
or
insl
mov
jmp
push
and
inc
xchg
out
jg
sub
adc
stc
enter
push
push
loopne
lea
or
lret
mov
and
jne,pn
and
and
out
call
fs
andl
mov
push
jp
and
xlat
pop
pop
mov
push
cmpsb
lock
andl
cld
sub
ficompl
mov
in
push
fistpl
pop
sub
dec
cmp
inc
xor
mov
inc
icebp
push
sub
cmpsb
fs
test
mov
sbb
adc
jns
and
sbb
pop
xor
pop
lret
imul
rcll
ret
jae
jns
xchg
cwtl
cld
orl
pop
push
mov
cltd
sbb
call
test
xchg
out
sub
push
jp
aas
xor
jge
push
lock
insb
rcrb
xlat
rcr
and
rcrl
and
mov
cmpsb
and
imul
add
std
movb
jmp
test
leave
stc
add
mov
add
call
push
or
mov
mov
xor
and
or
or
or
inc
bnd
sub
adc
and
and
jns
cmp
sub
cs
orb
arpl
cmp
out
dec
mov
mov
jmp
mov
or
mov
push
dec
repz
pusha
sub
sub
mov
clc
lods
test
add
adc
mov
and
mov
scas
mov
daa
js
mov
adc
adc
inc
jnp
fs
dec
rcll
cmpb
in
pop
xchg
push
adc
ror
xor
add
inc
mov
mov
scas
fsts
pop
sub
aaa
mov
xor
loopne
inc
mov
andl
hlt
xorw
pop
adcl
sub
fcoml
cmp
sub
xchg
clc
jns
jns
or
test
movsl
rcrb
jns
mov
mov
mov
test
fbld
aam
aaa
dec
cld
xor
inc
loope
mov
adc
pop
in
int3
push
lea
test
push
jne
repnz
and
scas
jmp
xchg
outsl
lahf
add
pop
mov
xchg
add
mov
dec
jns
add
add
lds
int3
inc
xchg
int3
int3
add
adc
jne
addb
and
scas
push
or
rorb
or
xchg
outsb
jb
mov
cltd
jecxz
bound
loopne
adc
dec
ja
mov
inc
cltd
adc
jbe
push
inc
rorb
fisubrs
sarl
or
pop
pusha
aaa
xchg
int3
inc
inc
sbb
inc
add
in
pop
divl
cli
mov
xchg
pop
inc
dec
add
dec
ljmp
fmulp
sbb
clc
dec
pop
icebp
push
inc
mov
mov
aaa
loopne
call
dec
mov
adc
sbb
and
mov
mov
arpl
sbb
jbe
push
pop
mov
and
cmp
and
lret
jmp
push
mov
fnstsw
adc
or
or
loope
test
push
sbb
mov
bound
add
add
jmp
ret
sbbb
jmp
dec
orb
iret
sbbl
push
push
cmp
sub
jg
das
nop
and
push
pop
push
pop
jb
je
fbstp
cmp
imul
pop
cs
lret
clc
shl
fdivrs
aam
cmp
add
push
add
xadd
je
xchg
test
sub
movsl
sub
call
loopne
dec
pop
aas
cmp
cmpsb
or
fdivs
stos
pop
add
cmpl
sbb
pop
lahf
lea
push
pop
ja
sbb
movsbl
testb
and
sbb
push
shll
cmpsl
loopne
add
lods
movsb
loop
bound
xchg
push
jp
mov
fldl
orl
mov
pop
fdivr
les
lods
push
out
and
or
je
adc
mov
scas
mov
imul
push
sub
add
orl
push
adc
pop
xor
cld
adc
out
loop
dec
fdivl
add
adc
mov
orl
lea
mov
mov
ja
movsl
mov
mov
pushf
dec
enter
sbb
mov
hlt
stc
add
insl
push
int3
je
or
inc
insb
mov
lock
in
dec
push
add
lods
js
mov
add
in
fidivl
mov
sbb
pop
js
add
movb
inc
xor
movsl
cmp
daa
je
incl
pop
lcall
imul
sub
js
orb
mov
cmp
add
or
inc
call
sub
in
das
add
add
push
out
dec
mov
inc
je
mov
push
or
dec
nop
push
repz
cmp
dec
aad
sub
mov
lock
sub
lea
arpl
call
xor
jbe
fildl
pop
lock
mov
pop
add
loope
or
dec
and
in
and
adcl
cld
sub
jb
push
es
mov
rorb
adc
cmpsl
adc
add
clc
stos
mov
push
insl
cmp
push
jmp
js
xor
pushf
sub
push
shl
dec
dec
xor
scas
mov
cmp
hlt
cmp
sub
cmp
jg
add
imul
and
outsb
or
pop
rol
lods
minps
pop
xchg
maskmovq
mov
inc
lods
xlat
mov
xor
cmovns
imul
xor
mov
je
jne
je
cmp
movsl
dec
mov
dec
test
xor
out
test
je
rorb
or
ret
addr16
inc
xor
jmp
or
sub
faddl
test
mov
mov
insl
mov
inc
push
insl
add
aaa
gs
sbb
add
nop
xor
xchg
push
pusha
flds
push
or
mov
or
lds
mov
add
and
shl
add
mov
dec
xchg
push
add
mov
movsb
std
cmc
ja
jne
movsb
addr16
mov
jmp
cmp
lahf
loop
cmc
jle
popa
mov
cmp
out
sbb
jno
mov
dec
or
inc
mov
fs
ret
shr
push
push
jp
cmp
insb
push
or
jbe
cwtl
adc
cwtl
and
sbb
ret
push
xchg
sub
inc
sbb
orb
enter
and
imulb
popf
push
push
push
test
data16
call
cwtl
or
cmpb
jne
xor
and
rcl
stos
push
xor
js
sub
and
jae
pusha
cld
mov
adc
jo
inc
cmp
add
sahf
add
adc
mov
hlt
or
xor
jecxz
mov
jbe
mov
stos
lea
adc
sub
ret
sahf
or
orb
add
rorl
mov
stos
sbb
or
add
fidivrl
and
pop
sbb
xor
or
sbb
clc
xor
mov
test
inc
dec
mov
or
and
mov
jbe
sbb
dec
test
pop
add
subl
push
clc
iret
sbb
shll
clc
repnz
cmp
dec
jmp
sub
sub
movb
mov
aam
adc
pop
inc
into
addb
fmul
dec
shlb
sbb
movb
inc
jmp
movsb
xor
or
jmp
dec
loopne
sysret
pusha
xor
repnz
roll
ret
fwait
stos
push
lcall
int3
adc
xorb
sub
pop
aam
sub
inc
sub
sub
cmpsb
jo
data16
decl
and
dec
sti
in
jle
cmp
cmpb
xor
add
rolb
pusha
and
and
dec
outsb
jne
xchg
mov
sub
xor
add
xor
lcall
adc
jle
aam
mov
add
sbb
jl
dec
adc
gs
push
jge
jle
sub
icebp
hlt
loope
lret
lcall
dec
sub
test
push
pop
int
fnstenv
dec
shll
mov
mov
xchg
or
push
add
xchg
les
cli
mov
inc
fbld
mov
mov
xor
push
cli
js
scas
andl
fsubl
jge
jae
jo
adc
sbb
jb
repz
jb
push
jo
cmp
out
sbb
loope
jno
ss
popa
cmp
enter
test
mov
xchg
pop
sub
sti
inc
mov
xchg
adc
loop
sbb
pop
daa
rclb
mov
int3
mov
adc
xchg
dec
mov
lcall
leave
or
pusha
gs
mov
add
lds
cmp
xchg
and
scas
mov
sbbb
cmpsb
add
pop
mov
pop
ja
jne
dec
lods
and
xor
pop
lock
pop
and
gs
mov
fmuls
mov
pop
fsubrs
test
idivl
mov
jbe
and
dec
jge
repnz
and
jmp
mov
rol
adc
cmpb
ljmp
cmpsl
pop
lods
and
pop
cmp
hlt
outsb
cwtl
push
cmp
jecxz
sbb
inc
scas
push
mov
push
lods
jge
mov
rcr
jne
out
and
aam
fdivrl
sbb
fadds
rolb
dec
mov
sbb
sbb
pushl
insl
and
lahf
fstp
xchg
jne
cmp
je
mov
push
les
stos
fisttpll
push
loop
faddl
adc
or
add
out
loopne
shlb
in
or
faddp
stos
mov
jge
and
rol
jmp
and
sti
cmpsl
or
adc
dec
jle
mov
adc
add
push
sbb
pop
sbb
xchg
addr16
inc
stos
jge
int3
dec
mov
or
cwtl
out
dec
faddl
test
jb
in
stos
imul
add
push
mov
jbe
jl
xor
stos
call
popa
cld
sbb
add
jmp
idivb
dec
pop
ficoms
inc
loope
mov
xlat
add
mov
jl
push
mov
ret
sub
xchg
jno
push
or
fnop
push
mov
adc
mov
inc
cmp
xor
andb
imul
orl
sub
lea
clc
xchg
mov
sub
inc
shll
push
outsl
or
adc
mov
aam
sub
pop
xor
loopne
movsl
into
in
xchg
test
aam
push
sub
das
or
pop
push
add
sub
lock
mov
es
mov
mov
ds
sbb
loopne
push
xor
test
add
jecxz
adc
jo
outsb
sti
std
add
lea
pusha
or
dec
inc
xchg
imul
mov
leave
sarl
ljmp
sbb
jns
cmp
or
xchg
push
test
mov
inc
push
loopne
pop
pop
in
sahf
pop
push
ret
xchg
call
ret
xchg
fstps
add
stc
cmc
or
or
xor
add
push
mov
xchg
dec
jl
cmp
mov
sub
subb
sahf
push
mov
ds
stos
test
adc
pop
sahf
lock
push
mov
xchg
mov
in
xor
addr16
sub
mov
cs
adc
add
xor
dec
xor
pop
in
xchg
int
data16
sbb
and
cld
mov
xor
lcall
incb
cld
dec
xchg
ret
fidivrs
mov
nop
sbb
fsubr
sar
mov
call
cmpsb
add
ljmp
cwtl
aad
and
push
cmp
pop
sbb
mov
xor
cmp
addb
or
mov
cmc
sbbb
mov
sti
push
fldcw
cs
rcrb
inc
inc
dec
push
daa
or
popf
jmp
enter
mov
dec
and
ss
cmpsl
subl
loop
mov
lret
test
push
mov
sub
lret
rclb
xor
out
add
add
add
pop
xchg
jmp
adc
xchg
ljmp
andl
clc
es
lcall
shlb
mov
xchg
out
add
mov
lock
pop
cs
inc
xor
in
les
pushf
enter
mov
fcomps
popf
lcall
sahf
jbe
cli
pop
ja
outsb
scas
mov
mov
mov
jo
xchg
les
sbb
in
pop
orb
call
xchg
xchg
and
mov
sbb
out
mov
imul
pop
test
mov
mov
jbe
xchg
clc
push
mov
in
pop
mov
add
dec
xchg
push
sub
mov
mov
lods
push
pusha
mov
xchg
pop
xor
jecxz
scas
leave
orl
stos
mov
hlt
hlt
icebp
xchg
pop
mov
inc
rorb
outsb
and
cmp
jbe
mov
adc
and
push
mov
insb
jnp
test
cmpsl
pop
lret
dec
jnp
cmp
xor
mov
fwait
cmp
dec
dec
cmp
es
sti
add
sbb
int
pop
sub
in
nop
xor
xor
dec
rcrl
mov
enter
lea
mov
cli
movsb
xchg
sbb
pop
mov
sub
nop
stos
cltd
call
adc
mov
ficoml
mov
test
inc
insb
imul
push
test
fsubr
dec
sub
int
dec
xchg
push
dec
dec
fwait
call
and
fstps
xchg
adc
addr16
in
mov
and
leave
add
sbb
and
xchg
in
imul
enter
add
inc
clc
mov
xchg
mov
stc
movsl
rcl
pop
mov
lret
cs
xchg
call
dec
call
enter
mov
mov
xchg
rolb
jns
lret
pop
pop
xchg
pop
jb
push
es
enter
movsb
lods
lret
mov
and
leave
add
call
fcompl
lods
pop
dec
leave
add
and
fsubs
aad
lret
or
nop
rep
xor
mov
faddl
in
add
cwtl
aam
dec
xor
cs
lret
aam
enter
xchg
dec
mov
add
fsubs
sub
imul
inc
sti
xchg
aam
xor
and
in
push
ret
sbb
test
aaa
in
xchg
test
pop
lods
xchg
jp
imul
add
xorl
out
or
cmc
dec
stos
xor
xor
push
les
sahf
out
test
jne
int
adc
or
lods
mov
daa
cli
clc
xchg
outsb
and
js
xchg
xor
inc
jg
and
test
into
lret
sbb
and
mov
fiadds
ret
xchg
cmp
sub
fwait
add
jb
rcll
adc
jns
lods
mov
les
cmp
test
mov
jp
mov
in
xchg
xorb
daa
mov
jns
dec
and
ljmp
icebp
nop
push
add
jp
pop
shr
lds
daa
es
mov
pop
add
hlt
add
add
or
cmp
pop
movsl
outsl
adc
or
jne
sub
pop
and
leave
mov
and
sbb
icebp
inc
jo
sbb
rcrl
dec
test
mov
jp
push
mov
push
mov
mov
jns
lds
test
mov
popw
or
je
dec
ja
popf
testb
cmpsb
pusha
dec
adc
or
mov
jns
mov
sbb
gs
adc
jb
mov
stc
add
push
out
cmpsb
adc
rcr
inc
lods
sahf
stos
add
sub
and
hlt
mov
add
xor
lods
sbb
or
cmp
shll
mov
or
xchg
sub
add
sarb
pop
add
fcoml
jg
hlt
mov
sti
sub
popf
out
and
mov
add
out
add
ja
sub
lods
push
fsubl
xchg
or
dec
call
add
sbb
xor
jbe
loopne
popf
pop
fnstsw
push
cmp
gs
sub
ljmp
push
inc
or
in
inc
inc
cld
jnp
jno
fisttps
jecxz
out
decl
dec
push
sbb
lods
rcrb
inc
fldpi
adc
and
lahf
nop
mov
adc
icebp
jo
xlat
mov
mov
mov
or
rorb
sbb
mov
fisubl
sbb
and
rorb
add
dec
addl
dec
add
aam
clc
mov
cmova
jg
ret
sbb
scas
and
ja
rclb
mov
std
push
shrb
stos
inc
fdivrl
xor
cltd
dec
sbb
push
dec
pop
pop
jno
iret
add
cwtl
mov
lahf
cmpsb
fnstcw
insb
rcll
shll
pop
adc
test
pop
or
loop
jne
movl
in
add
add
cmp
std
jne
xchg
subb
jmp
sub
insl
popf
aaa
add
jmp
xchg
and
rcl
and
or
imul
push
rcr
add
sbb
lret
fwait
mov
add
movb
loopne
call
out
jb
subl
jmp
lock
movsl
mov
dec
add
or
repnz
pop
push
pusha
add
aas
rolb
jmp
cmp
or
push
call
inc
cvtps2pi
add
out
jp
xor
stos
pop
mov
push
leave
inc
imul
imul
cmp
mov
lea
or
leave
add
mov
jmp
loopne
cmpb
or
lcall
xor
faddp
add
unpcklps
push
mov
add
jb
mov
test
mov
push
cmp
mov
inc
pop
orb
dec
jb
and
dec
dec
mov
dec
clc
repz
xchg
cs
loopne
sbb
sbb
jecxz
call
inc
jbe
mov
dec
or
inc
dec
jne
sbb
sahf
ss
stos
mov
jmp
add
mov
inc
mov
jmp
cmp
enter
push
add
sub
fwait
mov
lcall
push
or
sub
sbb
cli
in
cmp
inc
popa
push
test
pop
pop
aam
add
fcmovnbe
cmp
cmp
mov
adc
dec
pop
jno
jne
mov
or
aam
dec
ret
pop
popa
pop
push
dec
jb
cmp
dec
sub
out
aam
cmp
inc
jo
insb
ljmp
add
addb
add
jge
sub
or
xor
lock
add
divl
inc
sub
inc
jmp
xor
mov
sbb
mov
test
jmp
mov
test
stos
and
insl
adc
jno
daa
ljmp
xchg
xor
xor
xor
and
push
pop
lahf
test
std
ss
lods
mov
js
std
and
test
aaa
in
or
xor
add
mov
mov
mov
lea
jle
add
mov
jnp
xor
outsl
pop
push
lock
cmpl
jo
popa
xchg
pop
ret
adc
addb
shrb
jo
sub
xor
push
sub
jno
leave
lahf
add
or
inc
ret
cmp
outsl
mov
xorb
and
xchg
add
pop
sbb
fsubrl
lods
pushl
inc
pushf
cltd
push
dec
mov
sbb
das
adc
int3
ljmp
jnp
cmp
mov
and
rcrb
cwtl
rol
insb
sub
or
xchg
je
cmp
ljmp
jle
jg
sarl
push
imul
cld
loop
push
inc
inc
add
add
adc
jns
jle
cli
sub
pop
xor
and
and
push
sub
mov
fisttpll
xor
cwtl
pop
je
xor
js
or
pop
cmpsb
ret
icebp
add
test
dec
lock
test
push
test
sbb
jo
or
push
inc
push
or
mov
insb
leave
testl
jmp
pop
daa
cwtl
add
filds
test
clc
ret
or
jbe
dec
js
mov
cmp
inc
test
mov
mov
push
push
scas
inc
mov
es
mov
scas
push
rolb
in
push
mov
js
addb
or
movl
pusha
sub
dec
lods
cmpsl
lods
sub
inc
or
xor
inc
push
fadds
cld
imul
inc
push
shrb
push
bound
scas
movsl
pop
arpl
mov
adc
jae
pop
push
pushf
dec
std
adc
test
shl
adc
dec
jg
add
orl
inc
aas
cmp
lahf
fld
inc
jb
fwait
inc
mov
or
xor
and
call
sti
pop
clc
iret
push
adc
add
lea
arpl
mov
xor
sbb
inc
push
in
inc
inc
data16
inc
push
dec
pop
cmp
mov
and
sbb
or
jmp
push
and
cmp
shll
and
pop
cmp
adcl
or
hlt
push
add
nop
mov
mov
jg
sbb
push
adcl
push
in
jno
push
fwait
pop
rorl
sub
inc
mov
nop
xor
mov
movsb
cmp
and
daa
inc
cli
jne
cltd
push
daa
inc
or
dec
sbb
test
mov
mov
into
mov
aam
test
jae
xchg
ljmp
fs
mov
and
arpl
push
inc
pop
fcomi
push
movsb
pop
pop
xor
hlt
ret
cmc
xchg
arpl
push
dec
inc
bound
or
inc
lahf
xor
xchg
sbb
pop
mov
jne
lret
mov
inc
jle
add
push
fisttps
mov
or
or
test
or
aam
mov
cmc
dec
jmp
vmovd
and
sbb
fxch
or
loopne
sbbb
sub
add
sbb
or
pop
in
sub
into
in
sub
data16
mov
push
lock
std
test
push
loop
shr
je
push
mov
jg
push
inc
adc
and
jo
push
test
lea
enter
shlb
pop
jnp
add
add
xor
aam
mov
mov
je
xor
fnclex
call
sbb
add
jne
sbb
cli
pop
pop
ret
frndint
sbb
ljmp
shll
add
cli
shr
add
lahf
or
pop
bound
push
adc
cmp
jb
ret
sub
mul
notb
add
daa
test
adc
cld
fldt
push
adc
adc
aam
idivl
loopne
fisubs
push
or
shll
enter
or
inc
pop
cltd
dec
fwait
ret
fildll
mov
mov
dec
je
js
shl
adc
pop
add
push
mov
jne
pop
mov
dec
sbbb
sbb
add
ds
sbb
fsubrl
imul
dec
ret
xchg
inc
rcll
or
sar
popa
lret
mov
fsubl
repnz
sbb
mov
push
call
lock
push
mulb
jle
mov
or
insl
fnstcw
add
arpl
or
out
mov
add
mov
into
jp
xchg
mov
inc
sbb
mov
ja
mov
das
add
pop
stc
fstpl
push
dec
add
and
sbb
pop
orb
adc
jmp
adc
jmp
add
push
sahf
mov
dec
mov
mov
call
or
sbb
adc
or
stc
and
inc
mov
shrl
lock
jns
jmp
cltd
jne
adcb
loope
pop
les
jmp
adc
aas
add
fmull
fstl
mov
mov
mov
jne
lea
xor
cmp
in
add
mov
das
cmp
int
inc
dec
mov
sub
push
outsb
ja
sbb
lea
adc
add
or
daa
add
lahf
mov
mov
pushw
cmp
addr16
es
pop
js
jl
je
push
inc
add
xchg
addb
sbb
adc
sti
sbb
pusha
push
inc
inc
add
pop
mov
je
push
cltd
jmp
inc
faddl
cld
call
cmp
jmp
test
jbe
inc
rcrb
std
out
iret
testb
clc
and
ret
and
xchg
rorl
adc
mov
das
or
or
rolb
outsb
ljmp
add
mov
mov
ret
add
push
sbb
inc
lock
cmp
jne
lea
mov
fistpll
and
mov
sbb
data16
shll
fucomip
stos
bound
cmpsl
add
add
mov
sbb
ret
les
dec
rorb
adc
cs
lds
lret
gs
jb
popf
fadds
cs
int3
call
sbb
push
sub
mov
lods
std
inc
pop
movsb
xchg
mov
adc
inc
pop
inc
pop
lds
shrb
movsl
ror
push
jp
stos
jp
add
lret
jp
int
je
add
lea
jl
stos
xchg
outsb
jno
idivb
decb
sub
mov
xor
cmp
xchg
testb
mov
xchg
out
pop
dec
fdivr
cmp
dec
inc
sarb
in
dec
cmpsb
and
subb
mov
jb
std
lret
or
xchg
mov
ret
popa
mov
xor
sbbb
jnp
pop
or
add
pop
cmp
sbbl
or
mov
pop
cltd
mov
icebp
mov
pop
mov
mov
clc
mov
subb
es
mov
cltd
call
pop
pop
cmpsl
loopne
call
je
or
inc
rclb
loopne
loopne
in
fbld
lahf
loope
aas
insb
jne
inc
sub
pop
aad
and
adc
and
mov
jne
cmpb
movl
filds
cmp
inc
xor
xchg
push
imul
imul
lcall
stc
push
pushf
cmpsb
pop
leave
mov
andl
scas
add
mov
mov
test
pop
push
or
lea
mov
pop
sbb
adc
or
scas
sub
mov
inc
push
clc
fs
fisubrl
leave
jns
loopew
jp
and
or
jp
cmp
mov
sbbb
or
push
test
push
inc
lea
inc
add
in
pushf
adc
pusha
dec
push
ret
or
pop
imull
mov
cwtl
add
pop
cmp
jne
xor
dec
push
stc
mov
mov
xchg
out
add
loopne
dec
loope
cmpsl
or
enter
shr
or
xor
jns
daa
mov
scas
jbe
out
add
xor
mov
cld
inc
add
pop
int
icebp
push
mov
xor
jge
jle
lea
enter
mov
push
dec
scas
pop
mov
jno
frstor
inc
sub
testb
mov
add
pop
imul
mov
push
mov
lock
fbld
lea
mov
xor
xor
lcall
std
and
ret
lret
xor
jno
mov
rcr
loopne
lret
adc
mov
leave
addb
pop
and
add
lret
push
dec
push
add
cmp
mov
arpl
mov
cmova
adc
mov
mov
rcl
inc
pop
mov
add
pusha
loop
pop
gs
sarb
mov
or
jl
lods
repnz
mov
mov
mov
xchg
inc
neg
ret
adc
xchg
lea
shlb
inc
scas
inc
call
inc
pushf
addb
and
mov
sub
rcll
in
inc
out
inc
push
addb
sbb
ret
mov
cld
dec
mov
nop
mov
inc
cmp
push
lds
add
inc
jo
xchg
icebp
xlat
mov
push
push
xor
mov
nop
aad
aas
lret
jae
jo
shrb
inc
nopl
inc
or
xchg
push
inc
dec
mov
add
add
pop
adc
in
inc
outsb
inc
adc
add
arpl
inc
daa
xchg
add
pop
inc
imul
aaa
lcall
sub
setnp
xor
aaa
sbb
sub
mov
data16
ds
cmp
data16
fcompl
xor
xchg
jmp
dec
mov
les
cmpsl
adc
inc
jge
adc
pop
or
ds
cmpsl
push
sub
sbb
jmp
test
popl
jg
int3
jl
divl
popf
loopne
sub
test
jne
jl
push
mov
dec
arpl
sbb
add
fisttps
sbb
std
in
addr16
dec
sub
add
pop
jmp
fwait
mov
mov
dec
mov
fstpt
sbb
mov
cmp
push
push
push
mov
jle
and
sub
lcall
sub
pop
dec
or
shr
into
push
pop
cli
int
daa
inc
mov
xor
adc
pushf
rolb
dec
inc
adc
in
pop
and
adc
mov
mov
mov
mov
insl
dec
adc
lret
clc
in
mov
sub
nop
mov
pop
mov
test
fldl
cmpsb
fdivrl
rep
cmpsl
or
mov
cs
stos
jmp
testb
and
sub
cmp
jl
lea
sub
push
mov
xchg
icebp
mov
push
bound
sub
data16
sub
adc
shlb
jne
or
dec
aas
xor
into
mov
and
mov
movsb
mov
sbb
push
mov
shrb
and
inc
sub
mov
push
pusha
popa
nop
dec
mov
jns
inc
lods
sahf
out
push
xchg
aam
mov
sbb
mov
mov
mov
sbb
cwtl
es
sar
fs
cmpsb
in
aad
add
jb
fst
xor
loopne
test
adc
aaa
sub
aad
aad
xchg
jns
scas
movsl
cmp
xlat
mov
jecxz
scas
mov
mov
xor
mov
ficoml
sub
adc
and
insb
aam
xlat
inc
xlat
and
mov
in
and
and
aad
popa
xor
add
push
enter
test
sbb
inc
cmp
dec
in
repnz
ja
addl
dec
mul
fstpt
nop
mov
mov
jecxz
mov
xchg
push
pop
je
mov
pop
and
push
xchg
push
mov
add
cs
aaa
int3
in
pop
push
fstl
mov
leave
xchg
scas
xor
xchg
fstl
push
xor
aad
and
and
mov
clc
mov
mov
add
mov
icebp
push
cmpsl
inc
mov
xchg
mov
or
int
xchg
sub
in
mov
pushf
dec
mov
in
mov
add
outsb
jl
rolb
ret
leave
jne
iret
sub
xor
and
movsb
sub
in
xchg
subl
loope
shl
icebp
cs
stos
sbb
insb
sbb
mov
push
mov
jns
jnp
int
mov
sub
or
add
ds
shrb
mov
and
push
push
clc
popa
addl
and
push
or
pop
jo
ret
or
xor
les
inc
cld
inc
or
pop
pop
jnp
xchg
add
sub
mov
and
pop
jae
sbbl
push
sbb
or
mov
mov
aaa
out
test
testl
mov
cwtl
add
push
adc
mov
addb
xor
xchg
lea
mov
pop
xor
or
loopne
or
lret
pop
mov
movsb
inc
fcomps
testb
rcrb
lock
ss
cltd
inc
aaa
movsb
or
in
nop
lock
lock
or
sub
sub
mov
aam
jne
cmp
push
inc
inc
inc
inc
or
sub
add
xor
or
cmp
or
or
rorl
repz
dec
inc
add
jg
ljmp
jl
dec
std
outsl
push
push
dec
adc
push
and
jns
cmpsb
dec
and
dec
push
pop
test
out
outsl
inc
or
jbe
jle
call
outsl
ja
jo
aaa
and
int3
in
and
mov
pop
dec
in
mov
pop
ffreep
lea
lea
inc
out
sub
dec
cs
shrl
shlb
dec
push
sub
inc
or
fldt
or
push
negl
ret
jns
jg
mov
lret
ret
mov
xchg
pop
jnp
call
push
add
dec
or
add
clc
push
add
jb
jae
inc
jo
out
ds
popa
or
xchg
lea
in
out
fcomp
fldenv
sub
dec
or
sarl
mov
add
cs
mov
add
add
cmp
mov
rcrb
xor
mov
les
pop
add
sti
mov
sub
cmp
cmp
je
cmp
pop
mov
cmp
xchg
mov
shlb
les
loope
xchg
pop
mov
inc
mov
adc
rclb
out
arpl
add
xor
inc
cmp
iret
mov
xchg
adc
mov
inc
fstpl
push
jne
and
jg
jo
loopne
pop
pusha
mov
dec
cld
xchg
and
mov
lock
mov
andl
or
stc
nop
in
fdivrs
fs
iret
pop
lods
inc
cmpl
pop
addl
xchg
test
xchg
mov
dec
cmp
push
xchg
cmp
jb
push
cmp
mov
pop
or
fs
addb
movsb
xor
pop
loopne
subl
loop
dec
ret
mov
jo
jmp
or
mov
mov
dec
call
mov
test
rcll
or
out
and
test
data16
mov
sbb
and
test
add
push
cmpsl
add
out
mov
mov
mov
xor
xchg
jmp
outsl
mov
jbe
add
gs
push
inc
icebp
or
and
jne
and
jle
add
incl
frstor
mov
rcrb
pop
pop
add
out
push
stos
jmp
dec
adc
sbb
add
add
pop
adcl
movsl
mov
push
stos
add
xor
sbb
sbb
and
pop
dec
xor
or
gs
cld
or
outsl
xchg
xchg
je
or
jne
dec
mov
dec
push
shrb
sub
fisubrl
add
sub
fisubl
icebp
sub
aas
movsl
adc
jl
ss
add
inc
cs
je
cmp
pusha
mov
pop
fistpl
mov
and
and
push
leave
shl
cmp
push
jb
add
push
pop
fildl
jle
in
mov
addl
sbb
push
int3
mov
push
mov
andl
adc
add
xchg
aam
add
fs
and
and
shlb
les
lods
pop
pop
sbb
cmp
adc
add
decb
sbb
dec
lea
int3
or
fsubs
ficoms
or
jae
jg
test
jb
cmp
lea
gs
add
cmpsb
xor
imul
mov
push
lock
daa
orl
andl
pop
push
test
loope
js
hlt
mov
pop
cmpsb
pusha
mov
jl
mov
fdivrp
into
js
push
outsl
sbb
cltd
pop
clc
push
scas
mov
lea
push
fnstenv
or
ja
mov
loop
ret
or
pop
dec
dec
xchg
xor
dec
in
push
push
pop
push
lahf
or
mov
fadd
mov
jl
ja
nop
pop
mov
leave
inc
fadd
jae
lock
jg
dec
lock
mov
adc
movb
ficompl
dec
das
xchg
pop
dec
inc
push
jle
cmpb
cmpl
push
sub
sbb
push
aaa
adc
lret
sbb
fidivrl
imul
or
fnstsw
mov
fstl
aas
or
add
arpl
fbstp
daa
faddl
add
or
aas
cmp
or
dec
aas
js
rorb
and
into
sub
shll
cmc
test
adc
lds
adc
fstpt
mov
pop
mov
push
insb
or
dec
or
or
sarl
or
pop
ret
add
xor
jmp
jns
sub
or
mov
addb
add
incl
clc
sbb
pop
stos
mov
dec
scas
mov
fst
jne
repz
push
cmp
mov
jmp
mov
jmp
lea
add
pop
gs
cmc
cmpsl
loop
loopne
or
inc
sub
push
fistl
imul
inc
jmp
aam
adc
fcomp
loopne
daa
je
push
mov
movl
pushf
out
add
loop
inc
mov
jmp
lods
sbb
adc
out
or
or
add
jno
dec
push
pop
bound
es
lret
sbb
mov
inc
mov
stos
push
dec
or
xchg
mov
jmp
je
mov
roll
cld
xor
pop
sbb
lock
fsubrl
testl
dec
fwait
xor
and
testl
out
repz
mov
sub
or
mov
push
mov
add
xchg
movsb
adc
jp
lock
fisubrs
pop
adc
jae
pop
mov
ret
mov
and
push
cmp
orb
enter
sub
push
lock
jecxz
or
testl
dec
jbe
pop
and
movsl
inc
push
cmp
out
add
pusha
push
loop
or
ret
into
mov
xor
test
xchg
inc
xchg
xchg
das
push
push
nop
aaa
sbb
jb
pop
sbb
addr16
addr16
add
jnp
mov
fs
adc
push
test
adc
cmp
mov
or
mov
pop
outsl
sti
test
mov
adc
pop
sahf
cmp
mov
mov
dec
push
js
jmp
insb
mov
lret
pop
or
sbb
outsb
pop
dec
ficomps
fnclex
dec
dec
cmpsl
xorb
cmpsl
roll
adc
addb
mov
js
jne
add
stc
movb
shlb
push
clc
stc
loopne
add
cmp
push
add
adc
sbb
xchg
push
pop
lock
push
or
les
inc
or
orb
test
mov
sbb
xchg
jae
xor
mov
ret
xchg
pusha
ja
mov
and
dec
mov
add
sbb
rcrb
cmpsl
mov
leave
and
adc
add
lahf
sbb
adc
add
sarl
lret
sbb
push
notb
dec
hlt
jge
fnsave
fiaddl
inc
push
sbb
cmp
jne
roll
and
inc
mov
sub
mov
mov
add
insb
inc
aad
aad
and
cld
sti
in
adc
into
xchg
jecxz
dec
inc
add
mov
push
jge
jmp
mov
scas
mov
lods
sbb
in
out
int3
add
loopne
adc
es
sti
rclb
ret
scas
inc
enter
test
test
lea
jl
into
mov
insl
mov
sub
and
add
push
dec
loopne
mov
pop
dec
dec
sub
fsubr
sbb
jnp
xor
push
aas
clc
lock
imul
and
and
dec
add
test
cmpxchg
ja
and
addb
adc
lea
sub
push
adc
lret
lock
int3
mov
sbb
add
enter
add
enter
add
jb
loopne
clc
or
add
ret
sub
popf
add
jmp
add
or
rolb
test
fcoms
or
lock
imul
ret
mull
lsl
push
pop
push
push
inc
shr
rcr
shr
xchg
cmp
rcr
or
mov
repz
dec
jg
inc
xchg
fs
mul
pop
jb
cmp
or
fwait
cmpb
dec
sub
sbb
adc
sahf
scas
adc
or
ficoml
stos
hlt
lret
iret
pop
ret
inc
inc
pop
dec
adc
je
mov
sbb
pcmpeqd
mov
lret
cli
inc
adc
sti
mov
sbb
mov
mov
add
pop
fisubrs
call
cwtl
jbe
xchg
or
mov
xor
fldl
fisttpl
shl
jb
sar
xchg
cmpsl
adc
pop
fsubl
cmc
jmp
or
and
cmp
orb
sub
jb
mov
jo
dec
push
inc
in
inc
mov
lods
inc
dec
xlat
mov
jno
xor
addr16
sub
cmp
mov
jmp
insl
add
test
xor
push
push
sbb
hlt
jl
insl
orb
and
loop
ret
outsl
jmp
dec
and
lea
mov
or
loope
andb
add
inc
jge
movq
sbb
cmp
lret
jo
add
jnp
js
mov
inc
into
dec
sbb
popf
iret
add
adc
js
psubsb
and
aam
jmp
inc
cmp
mov
pusha
pusha
mov
jno
loopne
inc
sbb
pcmpeqb
push
mov
mov
dec
mov
dec
and
andb
nop
mov
mov
pop
aaa
xor
jb
add
or
add
into
mov
enter
mov
call
pop
pop
outsb
and
add
iret
in
shrb
xchg
jbe
in
fcoml
lods
cmp
pop
fadds
jp
js
out
sub
cli
push
adc
sbb
movsb
or
outsb
clc
adc
inc
jmp
jne
push
or
push
adc
test
sub
fiaddl
dec
mov
push
or
mov
cs
aas
and
ljmp
inc
sbb
inc
arpl
pusha
popa
inc
mov
ret
mov
sarb
sbb
jo
cmpsb
negb
notb
cmp
ret
je
pop
push
adc
sub
jmp
fstpt
orl
mov
push
sub
cld
add
mov
scas
jne
mov
sti
dec
lds
adc
outsl
repnz
mov
or
adc
adc
shrb
mov
cmpsb
mov
adc
lcall
xchg
aad
mov
mov
nop
aam
push
aam
pop
js
inc
fidivl
mov
push
mov
iret
mov
in
mov
sub
sar
push
out
addr16
sbb
sub
aam
mov
cmp
inc
jmp
outsb
sub
jecxz
lds
jbe
jne
pushf
lret
push
ret
add
push
dec
mov
push
aas
sbb
or
sub
cmp
cmpsb
pop
lea
dec
call
dec
je
mov
mov
inc
je
pop
pusha
lock
xor
icebp
xor
fcomps
iret
push
movsl
xchg
push
loopne
outsb
outsl
adc
and
add
rcll
or
push
jl
mov
loopne
push
adc
lds
adc
jge
out
in
outsb
mov
mov
xor
push
and
mov
xor
sbb
nop
imul
rcrl
adc
lea
pop
fsin
pop
inc
jb
adc
idivb
mov
cli
and
shl
sbb
or
sbb
add
cmp
jns
and
xchg
mov
cmpsb
ljmp
rcrl
xor
jno
sub
lock
dec
or
adc
mov
sub
emms
xor
adc
orl
test
adc
flds
and
push
fldcw
loopne
sub
enter
pop
mulb
test
sbb
sub
pop
cmp
or
sbb
enter
xchg
les
mov
lock
ja
ja
mov
outsb
movsl
stc
loopne
addr16
pop
mov
adc
loop
inc
and
push
loope
add
mov
rclb
add
add
out
nop
aas
inc
adc
and
and
or
xor
mov
push
fisubrl
jo
cmp
add
mov
ret
lea
lea
or
add
aas
pushf
sti
ret
out
or
and
jmp
popl
andb
inc
ret
inc
add
pop
das
ljmp
js
adc
xor
xadd
and
enter
lock
and
pop
inc
notl
adc
mov
mov
popa
mov
sub
jno
add
jno
push
pop
pop
sub
loop
mov
push
test
test
push
xor
dec
ljmp
sbb
mov
out
xchg
hlt
std
lock
push
sub
ss
ds
es
dec
sarb
or
xchg
or
in
scas
jl
xor
mov
popa
pextrw
xor
inc
sub
scas
cs
aaa
add
dec
xchg
call
and
mov
jne
and
and
hlt
lret
mov
push
test
xor
call
or
loopne
xor
cmp
mov
aam
call
jno
sbb
pop
adc
pusha
pop
sbb
sbb
shl
dec
xchg
add
andb
aad
inc
test
add
aaa
push
ds
xor
fwait
push
mov
clc
movd
and
mov
jmp
rcrl
jnp
lret
lcall
cmpsb
jl
mov
add
shl
loopne
or
and
clc
das
rorb
jo
xor
pop
les
adc
add
pop
pop
add
sti
xchg
or
loopne
adc
lods
add
inc
call
ret
or
inc
not
add
adc
dec
xchg
bound
sub
stc
pushf
adc
and
inc
mov
test
das
pop
insl
loopne
xchg
adc
fiaddl
push
sub
fcomps
test
sysexit
outsl
cmp
inc
inc
fsubr
das
jo
jmp
mull
dec
call
mov
push
popl
int
ret
pand
movsb
rorb
push
shlb
adc
add
jecxz
cmp
fsts
add
pop
pop
push
push
nop
push
dec
rcrl
dec
mov
cwtl
or
js
xor
mov
cmp
fbstp
dec
outsb
push
shll
lods
mov
cmp
cwtl
or
or
jle
or
push
mov
cs
push
or
cmp
call
loop
lea
and
add
popf
xchg
call
add
mov
push
cmp
hlt
add
inc
pop
push
sub
push
scas
movb
jl
into
incb
adc
and
xor
push
jmp
mov
jb
test
stos
popf
add
push
test
fisubrs
pop
sub
push
cld
mov
das
cwtl
cmp
xchg
incb
or
cmp
xor
push
mov
pusha
clc
jmp
dec
push
in
jbe
mov
inc
call
mov
cmp
sub
pop
lock
inc
sbb
sbb
or
jmp
shrb
adc
out
jnp
push
mov
fdivrl
jmp
jne
out
dec
jae
imul
sbb
or
mov
or
sub
pushf
sub
fs
mov
rclb
bound
pop
push
sub
push
mov
orl
add
pop
cs
and
popf
push
xor
stc
sub
cmp
mov
lods
mov
mov
sub
mov
add
shl
pushl
mov
jge
sbb
outsb
add
nop
mov
push
shrb
push
push
cmp
push
incb
pushf
testl
mov
lret
jmp
inc
inc
inc
xor
iret
orl
cmp
fstpt
icebp
and
and
lea
cmp
or
jecxz
push
push
dec
xchg
lea
mov
pop
push
enter
testb
clc
and
into
dec
jbe
jle
popa
inc
lret
jne
das
add
xor
rcr
cs
jge
int
sub
add
mov
rorl
sbb
test
test
es
adc
frstor
sub
lods
iret
pop
aam
outsb
call
xchg
or
mov
inc
xor
jne
inc
mov
pushf
add
xor
call
add
adcb
and
mov
mov
jb
icebp
add
movsl
add
enter
enter
mov
out
or
xor
dec
sub
mov
roll
ja
sbb
inc
dec
pop
add
cmp
jae
inc
adc
pop
mov
inc
ja
xlat
push
or
mov
or
add
xchg
out
insb
loopne
jg
pop
inc
testl
or
enter
dec
repz
dec
into
ljmp
pop
ss
or
cmp
cmp
xor
add
push
xchg
pop
dec
xchg
nop
add
test
clc
cwtl
xchg
test
sub
fwait
add
jl
lea
shlb
lcall
add
clc
popa
add
scas
ret
aaa
add
lea
cmp
jb
mov
movsl
mov
lock
inc
ja
shlb
pop
cmpl
insl
mov
ss
and
mov
add
sbb
jg
add
pop
or
lea
loop
sub
aam
gs
call
testb
shr
fadds
jl
or
push
jne
and
pop
mov
dec
ret
xchg
sub
inc
mov
pop
sub
je
das
jo
add
jl
fcom
insl
fsubl
sti
inc
loopne
shr
or
mov
sahf
dec
mov
mov
pop
jne
outsb
mov
mov
aam
sub
push
push
xchg
inc
cmp
pop
add
lock
rcr
ja
or
cmp
sub
mov
fiadds
push
lds
adc
or
or
fisubrl
or
stos
pushw
and
lds
mov
mov
adc
jl
dec
inc
out
add
int3
int3
jmp
xchg
or
daa
inc
inc
mov
push
add
dec
into
jmp
lods
mov
pop
testl
jae
jno
fiadds
rcrb
dec
and
push
sbb
pop
xor
jne
push
lret
das
xorl
test
sbb
mov
movups
and
jo
mov
inc
mov
inc
mov
mov
push
repz
fstp
inc
push
xchg
loop
adc
jns
out
nop
movsb
std
call
fisubs
or
fsubl
sub
push
mov
or
add
testb
adc
sbb
mov
cwtl
fcmovne
push
push
and
insb
insl
xchg
rcrb
jg
daa
push
sub
loopne
pop
cmp
mov
add
int
add
test
pop
push
mov
push
cmp
pop
in
pop
or
add
jno
sbb
aad
imul
int3
movsl
stos
test
popa
in
fcmovu
addb
jb
dec
adc
rol
jo
and
repz
mov
test
or
push
lea
sysret
imulb
es
pop
push
sbb
lea
mov
add
adc
pop
lea
xor
pop
bound
jecxz
sbb
jbe
and
jno
add
orl
mov
push
jge
xchg
mov
mov
xor
ret
lea
push
test
jnp
aam
or
and
int
sub
pusha
xor
jne
sbb
jmp
out
xlat
jmp
sar
push
or
js
xor
cmp
push
adc
cmp
jmp
adc
pusha
stos
sbb
and
or
xor
aad
xchg
sbb
mov
mov
test
push
push
adc
xchg
add
pop
cs
lock
inc
cwtl
xchg
cmpsl
loope
sbb
adc
jno
in
mov
pop
bound
sbb
jmp
adc
dec
inc
sbb
dec
mov
cs
xlat
cld
add
test
in
push
pop
jo
cmp
xor
in
test
pop
jmp
dec
lahf
loope
loope
push
lea
add
idiv
decl
leave
sar
mov
aas
or
es
or
or
or
mov
mov
mov
cmp
cmc
and
add
call
push
sbb
cltd
lods
loop
pop
ret
shrb
fwait
insb
push
or
orb
ljmp
inc
pushl
mov
jns
xor
fimull
pop
pusha
cmp
or
mov
sbb
data16
inc
and
pop
dec
pushf
sub
xchg
add
jge
push
inc
mov
jo
addr16
mov
pop
adc
cmp
mov
mov
add
sar
leave
push
adc
push
hlt
mov
andl
adc
cwtl
push
test
popf
or
pop
das
out
lret
add
test
mov
enter
notl
mov
lock
xchg
adc
add
nop
lock
jmp
cs
xlat
ret
inc
outsb
test
mov
inc
adc
hlt
add
inc
fwait
ror
insb
lods
jnp
inc
cmp
jns
cmp
xchg
xchg
sub
inc
push
or
add
int3
mov
test
loop
fs
add
ficompl
lea
jo
imulb
sbb
incl
cmpsb
int
sbb
test
mov
loopne
out
jno
add
mov
js
sbb
out
add
nop
mov
test
xchg
mov
dec
sbb
int
xor
push
add
daa
push
es
pop
dec
pusha
dec
iret
test
pop
dec
je
mov
rcl
adc
mulps
or
or
jl
add
outsl
jecxz
cmp
in
mov
mov
inc
mov
sbb
fldt
cmp
sarb
xchg
mov
or
lret
ss
loope
xchg
fs
xor
jae
subb
mov
cmp
jne
bts
jl
adc
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
loopne
div
cmp
ret
sub
sub
add
add
add
dec
dec
dec
int
andl
jbe
fs
jne
or
pop
jns
adc
fiadds
cltd
shl
sbbl
mov
cmpsl
ss
pop
data16
sub
fstps
test
sub
and
or
mov
cs
add
daa
shlb
movsl
jne
lea
mov
stc
cmp
push
xor
add
shlb
test
pop
add
rolb
push
or
xchg
lock
test
inc
inc
scas
push
es
push
inc
jmp
mov
stos
mov
mov
or
mov
push
jo
inc
dec
js
lret
jmp
inc
mov
pop
mov
adc
call
xchg
aas
push
jae
jo
jae
adc
les
xchg
add
jmp
ja
lcall
je
das
and
pop
cmp
xor
cmp
mov
adc
cmpb
xchg
int3
test
lret
and
sbb
aam
and
sub
pop
xchg
cmp
pusha
inc
mov
adc
shl
adc
test
icebp
in
pop
lds
sarb
adc
inc
or
or
xlat
dec
add
xor
ja
xchg
inc
adc
and
xchg
xor
aaa
adc
mov
push
out
mov
int
int
stos
test
adc
xor
mov
data16
inc
mov
mov
xor
push
mov
mov
sti
and
mov
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
decl
ret
mov
and
cmp
mov
xchg
xor
mov
add
bound
cltd
hlt
loop
mov
pop
inc
call
pop
xor
sub
cmp
loope
or
cmp
xchg
add
push
jmp
imul
nop
fiaddl
inc
cmp
pop
les
jmp
addl
js
pop
sbb
pop
and
or
out
popa
add
push
push
add
rolb
pushl
subb
icebp
xor
ljmp
jb
jp
icebp
adc
and
nop
dec
push
jae
ret
in
add
rolb
cmp
cmp
pop
and
subb
mov
xchg
xor
push
dec
sbb
and
rcrb
inc
jmp
xor
push
clc
dec
jge
mov
push
adc
and
ret
inc
mov
xchg
ret
push
imul
pop
lea
jnp
adc
gs
cmp
mov
jae
fcoms
push
dec
mov
scas
inc
nop
sbb
jae
mov
mov
add
push
adc
jae
pushf
mov
idivb
mov
les
add
pop
mov
and
rclb
mov
sub
jl
sbb
cmp
push
out
push
enter
in
mov
add
faddl
outsb
cmp
push
roll
or
outsb
and
testl
push
mov
jne
push
aas
out
int
dec
sarb
lds
add
insb
mov
das
add
fistpll
and
popa
rolb
in
cli
sbb
sbb
jne
js
ss
push
popa
clc
mov
jnp
jne
pop
push
cmpxchg
out
add
xlat
xchg
in
or
rcl
sbb
shll
or
lea
ficoms
std
lods
mov
adc
ss
test
js
jl
test
movsb
jle
nop
es
int3
push
cmp
add
lahf
jp
imul
add
int
push
jb
imul
dec
or
mov
rcrb
int
cs
jae
pop
rolb
mov
ret
or
cmpb
pop
sub
imul
jne
mov
clc
push
sub
or
xor
inc
mov
outsl
inc
es
fisttpl
cld
jmp
nop
inc
lods
mov
fdivs
shrb
loopne
dec
je
jae
mov
dec
addb
jmp
pusha
dec
sbb
fwait
or
jge
insb
insl
scas
test
aas
cmp
dec
lds
in
xchg
nop
add
mov
cld
cwtl
dec
cwtl
imul
mov
test
cmp
call
jne
sbb
inc
mov
jnp
outsb
dec
fcoml
les
sbb
adc
mov
js
loope
xchg
jmp
push
push
adc
xchg
add
loopne
jmp
cwtl
in
adc
pop
add
sub
sbb
push
adc
pop
movl
or
dec
popa
jp
dec
cld
and
add
cmpl
mov
sbb
or
add
mov
ja
bound
mov
mov
push
sbb
fs
push
mov
out
dec
mov
jb
sub
mov
ljmp
push
fs
sub
call
movsl
int3
lahf
push
cltd
shlb
xorb
cmpb
or
push
adc
or
pop
jmp
cs
xor
mov
push
xor
sbb
enter
and
adc
add
mov
sahf
es
mov
add
shl
add
sub
popa
xor
sar
adc
inc
jl
ret
test
push
push
nop
jp
pop
flds
add
pop
inc
outsl
lds
dec
cwtl
add
xor
jp
jne
jb
cli
push
xor
fmul
mov
pop
insb
xchg
push
sahf
inc
mov
cwtl
adc
in
xor
push
daa
pushf
mov
xor
test
or
shll
xor
andl
sbb
ret
lock
icebp
inc
cld
imulb
mov
sub
cld
inc
xor
inc
adc
sbb
imul
sub
cmp
nop
daa
outsl
mov
cmp
add
lret
les
imul
mov
xchg
push
es
hlt
stos
out
rcrl
pop
jnp
mov
ret
mov
add
add
mov
popf
jp
and
arpl
adc
dec
cmp
sbbl
and
sbb
lahf
pop
adc
jg
cmp
mov
lock
outsl
xchg
sbb
and
movsb
jne
sub
or
ror
rol
adc
cltd
xor
test
stos
jae
dec
daa
shr
and
popf
cmp
vmovaps
scas
dec
dec
sbb
push
xor
add
arpl
lret
daa
daa
daa
sub
adc
outsb
and
sbb
sbb
pushf
pushf
pushf
sub
xor
pushf
pushf
pushf
sbb
cmp
popf
mov
mov
cmovs
cmp
cmp
pop
dec
dec
dec
cs
dec
dec
dec
dec
insb
jo
js
inc
inc
dec
jl
xor
and
sbb
mov
xchg
cwtl
and
dec
xor
leave
test
rorb
enter
and
sarb
es
fsub
in
es
fs
fs
lock
clc
cld
dec
jb
dec
add
add
add
or
adc
dec
sbb
fs
dec
es
sub
dec
es
xor
xchg
sub
inc
and
push
fs
dec
mov
dec
xor
push
pop
pop
pusha
push
dec
loope
sbb
je
loopne
stos
mov
or
push
mov
mov
mov
xchg
add
or
in
lret
shll
cs
adc
nop
cs
pop
cs
sbb
sbb
and
in
mov
cmp
in
cmp
mov
rolb
xchg
lret
dec
enter
decb
or
mov
pop
lods
add
mov
or
dec
push
ret
xchg
and
cmp
push
inc
xchg
push
icebp
or
sbb
sbb
dec
push
xchg
xor
add
pusha
dec
repz
and
clc
sbb
push
or
ret
nop
fadds
pop
mov
xchg
fimuls
movsl
or
ds
and
and
or
into
adc
out
push
or
shll
dec
nop
fcmovne
outsb
xor
adc
or
outsb
jb
jmp
and
dec
add
push
in
dec
jge
out
ret
js
in
test
adc
or
mov
fcmovbe
clc
sbbl
hlt
mov
xor
ss
mov
rorb
sub
mov
call
add
adc
lock
and
mov
popf
mov
add
jl
and
jecxz
sbb
mov
jmp
sbb
cmpsl
aaa
or
xchg
dec
adc
pusha
xchg
lock
or
mov
out
aaa
jge
je
data16
sti
jle
ljmp
aas
pusha
mov
pusha
loope
pop
or
xor
inc
jecxz
test
fstp
jne
push
movsb
ds
pusha
fldl
cmp
not
xchg
sub
inc
mov
ret
setbe
testb
sahf
lret
push
adc
sti
add
mov
out
test
fistpll
push
dec
push
mov
lret
pop
das
pop
shl
mov
or
sub
push
and
and
or
into
popw
testl
mov
push
push
mov
ss
pop
sbb
jmp
push
and
or
push
or
arpl
aaa
inc
flds
fstps
jmp
fisttpll
xlat
xor
fistpl
mov
loope
push
hlt
adc
fildl
movsl
jbe
in
pop
sub
orl
cmp
push
xor
test
or
add
inc
mov
pop
lahf
xchg
xchg
loope
push
aaa
sbb
xor
out
cmp
jge
jmp
fstl
jmp
pop
jbe
lea
pop
sub
jmp
sub
divb
daa
push
or
jmp
xor
add
inc
test
into
mov
leave
xor
scas
sbb
pop
shrb
or
cmpsb
mov
rorl
mov
or
aaa
ret
fists
lea
or
cli
mov
or
xor
or
fcoml
dec
mov
push
add
mov
ss
add
ret
insl
cld
shlb
mov
stos
je
jge
test
pop
dec
cld
pop
int3
cli
shrl
jl
shrl
cmp
sbb
nop
loopne
sbb
or
shrb
cs
icebp
adc
shlb
loopne
cmpsb
mov
lds
daa
cmp
sbb
and
cwtl
adc
mov
push
push
add
testl
adc
mov
test
jmp
adc
test
leave
mov
ret
add
ljmp
addb
movntps
aaa
ret
clc
cmp
je
loopne
and
outsb
sbb
cld
ss
pop
add
or
lret
adc
sbb
sbb
sbb
sub
or
and
stos
pop
pop
xchg
sub
push
inc
add
add
pop
pop
fstpl
das
in
out
xor
jmp
jno
dec
adc
into
leave
dec
inc
and
push
xor
sahf
lock
or
xor
int3
fisttpll
pusha
ret
jne
push
add
mov
xchg
scas
adc
mov
or
dec
mov
lock
mov
subb
ret
adc
aas
pushl
es
dec
or
add
and
cmpsl
mov
push
das
ss
xor
add
inc
out
int3
mov
pushf
arpl
mov
jne
xor
xor
jl
rorl
rcll
cmp
les
sub
adc
add
je
dec
lods
dec
sbb
mov
lret
xchg
sbb
into
sbb
in
jo
jo
mov
sub
call
add
andl
push
shufps
mov
pop
lret
lock
or
sbb
jmp
data16
mov
add
and
pop
movsl
cmpb
mov
imul
popf
sbb
test
fs
sub
enter
lds
fld
fucomp
xchg
pop
or
pop
fldcw
pop
out
mov
push
fbld
xchg
sbbl
icebp
push
inc
sbb
pushf
ficompl
push
or
dec
shl
fcom
or
push
or
push
out
jmp
loop
mov
push
pop
je
mov
or
push
and
ficoml
es
sub
or
mov
push
push
push
movsb
loope
imul
cld
mov
enter
jnp
fnstsw
movswl
lret
sbb
loop
clc
or
cmpsb
inc
fldcw
sub
not
dec
xor
cmpl
mov
inc
jl
cwtl
or
sub
sbbb
fwait
test
fsubs
loopne
ficompl
fwait
sbb
adc
jo
pop
mov
fdivp
jle
pop
cwtl
jb
movsb
fldpi
xor
adc
loopne
mov
push
je
sbb
mov
ss
fistl
adc
push
cmp
or
xor
or
xchg
out
jmp
and
and
loopne
insl
mov
push
jg
xchg
sub
and
mov
test
mov
dec
lds
jmp
jbe
jo
dec
inc
lcall
test
lock
mov
nop
es
mov
inc
sub
mov
sahf
adc
push
ja
inc
mov
test
sbbl
push
pushf
add
lcall
lds
add
adc
lret
add
pop
jno
jo
add
pushf
aad
push
nop
lret
je
mov
and
out
pop
push
and
sti
jbe
add
push
push
and
js
push
xchg
daa
xor
mov
enter
or
add
adc
or
mov
call
loope
rcrl
inc
cmp
cmp
inc
or
pop
pop
cmpsb
dec
or
push
test
loop
lret
or
outsb
add
sub
push
or
lahf
inc
xlat
cmp
mov
mov
mul
pop
test
push
xchg
fiaddl
jbe
jl
xchg
push
jbe
add
imul
pop
pop
cli
and
pop
or
cmp
inc
xor
sub
sub
cmp
mov
pop
add
sub
scas
scas
sti
aas
es
dec
or
inc
lea
pop
jno
icebp
push
mov
lret
rolb
cmpb
call
cwtl
rcll
loop
rolb
or
pop
repz
out
incl
shll
cmpsb
xor
clc
dec
or
inc
adc
iret
jbe,pt
pop
rcr
dec
mov
add
pushf
or
sbb
and
clc
sbb
jmp
sub
adc
add
ljmp
sub
dec
sub
ss
mov
sahf
jns
and
rolb
and
add
and
enter
jle
cmpl
add
xchg
sub
inc
sbb
inc
or
ljmp
push
dec
xor
cmp
xorb
xor
push
loopne
fmul
shl
sbb
sub
sub
idivl
add
loopne
pop
popf
jb
mov
and
push
ds
or
out
or
mov
sarb
mov
inc
xor
sub
mov
out
xor
mov
or
dec
jns
sub
cwtl
pop
repnz
lea
push
shlb
and
faddl
mov
dec
fistps
out
test
adc
sub
dec
out
cwtl
rorl
rcrl
dec
xor
push
cli
pop
lock
mov
jmp
or
jb
test
lcall
push
enter
dec
jns
imul
cmp
and
shl
xor
aas
mov
or
cmp
inc
mov
or
frstor
fs
and
hlt
dec
adc
mov
arpl
lahf
add
shll
mov
cmp
sbb
sbb
inc
andl
orb
out
iret
add
sarb
or
fwait
call
out
and
mov
sub
mov
or
adcl
test
lock
inc
or
fildl
pop
lock
nop
adc
cwtl
cmp
xchg
stos
push
cwtl
hlt
lret
sbb
div
jne
and
mov
and
mov
adc
cltd
sub
nop
mov
pop
add
pop
sbb
je
pop
add
inc
and
push
enter
sub
or
ret
push
popa
xchg
jmp
inc
fcoms
mov
jne
cmp
les
add
fwait
and
ss
mov
test
mov
mov
mov
rorl
push
popa
arpl
sbb
inc
shl
jo
rcr
mov
in
mov
adc
lret
cs
or
ret
ss
cmp
je
or
out
mov
dec
cmpb
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
pop
add
adcb
and
fcompl
fistpll
sbb
add
arpl
adc
add
hlt
dec
push
sub
into
std
pop
addb
adc
sub
cmpb
add
fs
sbb
rcrb
jnp
out
popf
push
add
adc
jno
xchg
mov
and
xorb
mov
push
call
fnstenv
xlat
xchg
push
pop
mov
mov
jbe
or
add
sbb
adc
inc
jg
push
pop
sbb
sbb
xchg
dec
mov
cmp
js
add
mov
popf
scas
xchg
aas
sub
sub
daa
mov
movsb
jle
mov
lret
sub
mov
inc
or
lods
or
sbb
add
add
lods
cmp
jmp
pop
pusha
or
sub
add
sub
ljmp
hlt
dec
nop
sbb
aaa
dec
sub
jns
neg
movb
jecxz
sbb
push
rolb
push
or
add
add
add
cmpsb
enter
into
pop
mov
xor
or
daa
lea
pop
jns
inc
cmovo
add
mov
or
sbb
xor
lahf
aam
je
test
insl
xor
jmp
cmovbe
sub
adc
out
push
mov
adc
inc
push
push
adc
shlb
push
xchg
lret
push
ss
cmp
adc
and
sub
push
push
jmp
test
dec
sbb
adcb
and
push
fadd
xor
add
jl
mov
cmp
jge
jecxz
push
fcoml
and
call
rcrl
push
mov
fdivrs
dec
shl
movsb
lcall
inc
arpl
sahf
fcoml
sub
and
or
cmp
fisubrl
adc
push
adc
pop
pop
or
ret
push
call
cmc
fstps
or
xchg
or
mov
aas
mov
dec
sbb
test
enter
fdiv
loopne
js
subb
push
lahf
or
test
fists
dec
sub
xchg
dec
and
add
insb
movb
scas
and
mov
out
ret
push
bound
popf
neg
sbb
mov
stos
scas
and
adc
jg
ret
sbb
shll
cltd
loopne
bound
xor
xor
push
adc
sub
cli
in
call
mov
inc
xor
mov
jb
xor
cmp
lods
or
mov
inc
mov
ja
mov
in
and
cmp
xor
or
adc
cmp
push
clc
sub
sbb
js
sbb
ret
sub
shl
xor
das
in
mov
fs
cld
lea
hlt
shrd
sbb
outsl
jno
add
dec
cmp
jge
sbb
scas
sbb
clc
cwtl
xor
lcall
cli
scas
outsl
in
inc
and
xor
out
sub
cmp
jne
outsb
mov
or
rorl
inc
call
insb
xor
add
add
lock
xchg
xor
jo
frstor
push
and
mov
pop
sbb
js
jg
negl
imul
fsubr
or
popf
sub
fimull
jl
test
shll
divb
xchg
push
xchg
sub
add
mov
push
push
test
or
or
jb
sub
jbe
dec
inc
dec
pop
or
rorb
sbb
xlat
lcall
cmp
sbbb
in
ja
xchg
push
sbb
or
es
cmp
jbe
fistl
rorl
push
loopne
sbb
data16
cmp
addl
andl
pop
pop
fsubr
push
sbb
mov
sub
push
lock
sahf
fwait
adc
inc
xchg
fldenv
or
or
call
aaa
push
lods
push
add
or
inc
mov
stc
mov
push
xchg
add
repz
push
addb
dec
repnz
je
aad
xchg
push
rolb
jbe
mov
add
roll
push
add
sub
inc
sbb
jl
sbb
jmp
andl
sbbb
jne
push
cmp
lods
pop
and
nop
push
inc
out
inc
xchg
push
xchg
out
sub
pusha
mov
jb
stc
test
xor
enter
push
stos
xchg
lea
mov
adc
sbb
inc
fdivl
sub
inc
or
pusha
mov
mov
push
add
or
popa
popf
jmp
jmp
mov
xor
or
fstps
clc
gs
or
pop
data16
push
pop
add
imul
pop
insb
fs
je
inc
je
dec
sbb
pop
mov
xor
dec
jmp
and
mov
sbb
mov
push
je
mov
push
call
cmp
or
mov
mov
loope
mov
mov
ret
arpl
adc
clc
cmp
mov
aaa
lock
stos
inc
test
mov
cmp
push
flds
imul
fisttps
dec
mov
cmpb
jne
jnp
movsl
adc
jp
not
cmp
xchg
rcrl
popa
pop
cmp
ret
into
hlt
int3
jns
add
and
sti
loopne
cmp
cld
jge
mov
adc
inc
add
or
jecxz
mov
jo
sbb
push
out
mov
in
sti
adc
xchg
lea
inc
jmp
add
mov
loope
xchg
fwait
push
xlat
and
roll
pop
pop
test
test
dec
cld
mov
test
sub
mov
adc
and
shll
sti
mov
les
push
leave
fimull
xchg
xchg
cmp
push
aas
cmp
mov
rcll
jae
testb
je
sub
lock
mov
mov
mov
inc
mov
or
jbe
adc
mov
jp
xchg
sub
adc
clc
cmpl
pop
inc
lods
push
or
push
sbb
push
sbb
dec
push
mov
adc
dec
add
mov
push
clc
scas
mov
push
mov
pop
aaa
lea
adc
shrb
dec
adc
or
enter
mov
jb
dec
and
test
xor
sub
and
out
cli
mov
lret
je
dec
je
dec
push
push
jmp
add
mov
or
jmp
mov
into
or
lcall
adc
sub
sbb
movsb
mov
add
dec
minps
rcl
popa
test
xor
ljmp
int
or
dec
rorb
cmp
into
add
inc
leave
sbb
add
push
outsl
xor
gs
sbb
dec
or
je
add
xor
cmc
mov
cmp
je
mov
mov
dec
outsl
mov
outsl
loop
andl
xor
lahf
jbe
fs
inc
adc
das
and
and
adc
inc
xchg
cmp
adc
sub
xor
inc
push
repz
adc
jl
push
or
mov
xchg
sub
sub
or
pop
dec
clc
sbb
orb
and
or
pop
popa
xchg
cmp
addb
mov
shll
or
sbb
lret
xchg
les
movsl
lods
jg
xchg
jge
shr
add
or
loop
adc
or
mov
icebp
in
pop
jae
push
adc
test
and
add
mov
fwait
mov
add
add
fs
mov
cmpsb
jp
push
add
cli
cmp
leave
inc
sbbl
inc
jl
in
sbb
cmp
mov
fimuls
pop
push
and
roll
inc
fcmovnb
lcall
mov
out
bound
xor
scas
add
push
xor
xor
clc
xorb
or
inc
ljmp
mov
adc
jge
lcall
mov
pusha
cmpsb
and
xchg
mov
mov
mov
es
aad
xchg
cli
ficomps
xchg
xchg
movsb
adc
xor
push
adc
or
popf
mov
adc
fsubrl
pop
aad
mov
test
push
jbe
rcl
test
add
inc
packssdw
pop
inc
mov
shll
fisttpll
or
in
mov
outsb
xchg
das
sub
sbb
fisubrs
mov
mov
leave
mov
test
jmp
enter
bound
push
popa
mov
or
fnsave
repnz
sbb
inc
sbb
mov
and
lret
xchg
test
or
shll
jo
orl
adc
cltd
sub
orl
inc
imul
xchg
or
outsb
mov
mov
add
jo
orb
loope
stos
sbb
sbb
fldenv
orb
pop
xchg
ds
mov
sarb
or
icebp
xchg
mov
xchg
movsl
dec
fistpll
outsl
add
outsl
inc
mov
cmp
fsubp
xor
push
rcrl
imul
call
or
rsqrtps
clc
sbb
add
les
mov
scas
xor
jecxz
js
add
add
pop
je
xchg
cs
outsb
mov
adc
xor
or
xchg
push
dec
call
pop
or
sub
push
insb
jno
mov
sub
push
add
adc
pop
call
push
ds
push
sbb
inc
fidivl
pusha
push
ljmp
arpl
cmp
test
roll
pop
lods
outsb
inc
jcxz
lock
rclb
in
xlat
lods
scas
in
mov
cmp
jle
inc
and
inc
pop
test
je
sub
sbb
or
xor
dec
dec
cwtl
inc
inc
mull
js
cmpb
jl
ss
cmpb
je
jbe
cmp
aam
push
fstpl
mov
inc
push
mov
hlt
sbb
or
dec
imul
mov
ds
mov
cld
or
push
dec
cmpsb
push
xor
cmp
sub
hlt
xchg
adc
lret
adc
xchg
jne
jmp
dec
add
adc
aas
adc
adc
rorb
push
or
test
or
adc
fprem
std
xor
add
add
je
add
sub
adc
mov
adc
roll
loopne
shl
pop
inc
divb
pop
sahf
jne
std
movsb
adc
int
xchg
sbb
pop
xchg
inc
pop
or
pushf
addb
test
add
outsb
add
sbb
dec
and
adc
sub
lea
rclb
and
pop
in
dec
adc
imul
adc
fdiv
fiaddl
fsubp
fisttpll
inc
ss
or
sahf
sbb
mov
orl
sbb
fisubrl
push
inc
and
inc
rcl
mov
icebp
lret
enter
sbb
push
add
sbb
and
leave
cmp
clc
dec
jns
mov
xor
pop
aam
icebp
mov
adc
lods
rcl
ljmp
dec
and
shr
sub
aas
xchg
xorb
push
idiv
adc
maskmovq
cld
lock
je
jp
rolb
mov
addr16
js
sbbl
push
stos
lods
lods
into
add
push
loopne
jae
adc
inc
ljmp
or
movsb
jne
test
push
or
aad
loope
mov
jbe
aas
dec
das
jge
xor
dec
adc
dec
xchg
or
or
adc
push
pusha
or
and
xchg
outsb
out
enter
into
paddusb
les
adc
inc
loopne
popa
jne
xchg
mov
mov
hlt
mov
aam
aam
je
sahf
cs
imul
movsb
out
inc
ss
pusha
inc
and
sub
cmpsb
mov
subb
adc
cmpsb
je
rcrb
ret
or
jne
pop
cmp
inc
jmp
sub
add
add
jno
pop
icebp
mov
mov
mov
sbb
or
or
or
and
and
dec
cs
mov
je
adc
fdivrp
mov
cmp
jb
cmp
ja
add
cmp
adc
notb
loopne
or
shll
leave
adc
pop
adc
add
jl
les
je
xor
xchg
cmp
xor
jmp
xor
orb
sbb
add
sub
inc
call
rclb
mov
or
aam
mov
and
sti
aas
cs
std
lods
pop
push
movb
jmp
or
push
xchg
sbb
mov
or
lods
and
sub
mov
jl
xchg
ret
std
and
movw
jb
add
cmp
mov
xchg
and
js
xor
pop
mov
ljmp
add
sbb
jmp
sti
mov
filds
push
mov
pop
stc
inc
jb
mov
dec
insl
push
mov
andb
sbb
mov
into
push
add
push
add
fwait
xor
pushf
shlb
aam
imul
push
inc
shr
shr
inc
imul
lea
or
mov
dec
fisubrs
or
mov
sbb
push
dec
out
aad
mov
jge
cmp
mov
mov
inc
xorl
cmpsl
sub
sub
addr16
dec
dec
cwtl
mov
cvtps2pd
push
and
jl
push
dec
jle
loopne
add
repnz
adc
sub
outsl
or
outsl
and
and
lea
inc
xor
adc
cmpsl
add
into
sahf
push
mov
jmp
sbb
jecxz
cmp
mov
lods
loopne
cmpsl
cmc
and
icebp
mov
inc
call
jns
ljmp
lahf
push
inc
mov
cmp
loopne
push
xchg
mov
jne
lea
ss
add
sahf
inc
mov
or
mov
lea
pushf
sbb
mov
xchg
les
or
movsl
xor
movsb
cmpsl
inc
aaa
lcall
ret
rcr
xchg
movsb
sub
imul
and
push
fnsave
rorb
icebp
jae
cmp
sbb
loope
bound
shll
mov
add
shr
or
and
ds
test
rorb
sbb
push
lret
dec
jmp
jp
inc
lea
loopne
clc
cmp
sub
addr16
mov
mov
int3
shrl
loope
shr
or
mov
jp
or
dec
mov
inc
jp
out
push
jnp
daa
cmp
adc
loope
stc
repnz
div
add
test
div
xchg
pop
nop
ret
xchg
out
subl
and
rcrb
or
xor
daa
mov
adc
or
or
pop
fisubrl
add
push
and
fcoml
xor
and
and
fidivl
mov
insb
lret
xor
cmpsb
mov
dec
rolb
add
xor
mov
sbb
sbb
cmpsb
sub
or
pushw
sbb
loop
pop
cmp
mov
enter
ret
popl
cmp
in
aam
dec
or
jne
cmp
pop
sbb
mov
shlb
fcoms
aam
int3
insb
dec
xchg
pop
jbe
dec
sub
sbb
cmp
adc
shlb
dec
notb
test
rolb
xor
fsubl
or
mov
mov
sbb
fcmovu
mov
pusha
mov
insl
test
popa
cmp
mov
mov
movl
xchg
add
sahf
idiv
adc
xchg
adc
jg
mov
adc
lock
sub
stc
add
mov
lock
or
cmp
jne
push
jns
loopne
ljmp
pop
loopne
sbb
lret
and
pusha
pusha
add
setae
xchg
sbb
sub
mov
roll
movb
stos
xor
adc
pop
outsb
call
xchg
sub
adc
sub
sbb
shl
xchg
inc
xor
rcrb
in
inc
scas
inc
rcrl
mov
neg
and
mov
insl
call
fucomp
imul
call
dec
jbe
jno
fsubs
pop
add
and
mov
push
pop
js
in
fisubs
out
pop
sti
jmp
add
jne
mov
les
xchg
adc
testl
mov
cmpsl
ljmp
mov
add
enter
sahf
mov
mov
shlb
add
sub
test
out
and
mov
addb
mov
lock
inc
ljmp
adc
sub
dec
push
jg
fildl
sub
cmp
jge
sub
cmpb
or
scas
sub
dec
cmp
add
dec
stos
or
jle
incb
sub
orb
pop
xchg
push
pushf
aam
call
sahf
ficoms
jp
jne
dec
mov
jb
int
loopne
add
cmp
adc
in
jbe
cwtl
mov
and
add
push
jo
mov
mov
mov
rcrb
push
mov
add
add
xor
cmpsb
or
adc
and
ret
inc
call
adc
stc
push
mov
mov
sub
popa
loope
push
outsb
or
inc
adc
or
repz
add
push
test
push
or
push
pop
push
xor
fisubrs
ret
sbb
adc
cmp
je
mov
lods
or
push
ret
or
xchg
adc
or
jae
outsl
pop
jnp
test
lret
sub
roll
lret
into
pusha
xlat
dec
inc
inc
inc
fidivrl
inc
lcall
in
sub
jnp
sbb
into
prefetchw
inc
adc
cmpl
shlb
or
loopne
lcall
or
or
add
xchg
rcrl
lret
testb
mov
push
je
lret
pop
or
or
push
pop
cmp
ja
insl
add
adc
xchg
neg
jne
and
mov
jo
ds
dec
jge
aam
mov
out
and
push
or
ret
loop
das
inc
add
lds
nop
adcb
clc
mov
test
xor
shll
or
push
testl
or
adc
sbb
fadds
add
mov
loopne
mov
pop
and
in
xrstor
adcl
ds
test
shufps
adc
or
int3
dec
xor
adc
xchg
call
mov
mov
cmp
fidivrs
sbb
xor
inc
jg
into
hlt
test
pushf
into
into
mov
xor
inc
pop
sub
fsubp
or
pop
sahf
pop
and
or
aam
ljmp
or
sbb
and
xchg
stos
cmp
pop
push
push
and
sbb
push
mov
test
lahf
pop
xchg
out
mov
jecxz
ret
movsb
pop
jo
dec
loop
mov
mov
ret
cltd
and
popf
ret
cwtl
sbb
push
jmp
mov
pop
mov
lret
push
lret
push
xor
xchg
pop
pop
and
shll
adc
fstps
xchg
mov
int
dec
jmp
xchg
push
enter
push
les
clc
xchg
sbb
gs
cwtl
lret
mov
scas
mov
mov
push
sarl
popa
popa
dec
arpl
in
hlt
add
jnp
mov
lret
push
xor
cmp
xor
push
nop
jo,pn
loopne
adcb
add
dec
gs
jno
dec
cmp
test
fcmovnb
je
dec
sub
loope
add
fldt
out
je
mov
repnz
icebp
mov
cmp
jb
cmp
jbe
dec
repnz
jmp
push
rorb
fcoms
pop
mov
test
cmpb
adc
fldl
ret
xchg
orl
out
les
and
add
mov
adc
ret
pop
push
daa
push
scas
mov
cwtl
cmp
test
pop
and
adc
cmp
pushl
pop
filds
push
push
and
fnsave
fistl
mov
pop
and
inc
lret
adc
cmp
int
aam
fmul
adc
addb
push
sub
and
aam
adc
cmp
pop
xor
nop
push
inc
pushf
push
add
dec
xor
adc
js
cmpsl
cs
or
cs
out
inc
push
aaa
sbb
dec
mov
xor
xlat
or
lea
scas
cmp
cmp
loope
daa
in
lcall
ljmp
lock
or
or
pop
out
mov
sub
notl
jp
pop
scas
dec
sub
nop
movsb
adc
mov
in
sub
lahf
inc
xchg
mov
adc
xchg
jbe
add
adc
jg
xor
adc
mov
hlt
call
pop
outsb
loop
shlb
push
push
push
loopne
fldcw
cmp
xor
inc
or
mov
mov
pop
dec
test
or
cmp
xchg
sbb
and
outsb
gs
sbb
mov
adc
in
push
clc
sub
pop
inc
cli
jge
mov
mov
mov
jg
lret
xorl
push
mov
test
rcll
add
daa
call
xor
dec
jno
dec
ret
enter
loopne
loope
js
inc
out
mov
push
add
cmp
nop
cltd
rolb
push
fistpll
mov
loopne
jmp
push
pusha
outsl
sbb
fs
movsb
fists
ss
subl
push
cmpsl
mov
lcall
or
aam
mov
test
inc
push
push
sub
bound
lcall
jg
je
push
cmp
movb
pop
sub
xor
inc
sub
push
les
push
and
pop
pushf
subb
pushl
push
pcmpeqb
jg
push
lds
scas
sbb
mov
sbb
sbb
out
aas
cmp
cmp
jbe
jg
pop
push
push
push
adc
test
iret
imul
or
sub
pop
lods
enter
or
dec
cmp
pusha
sbb
push
mov
cmp
mov
inc
xchg
repnz
addl
inc
pop
cmc
rclb
test
js
add
lret
or
push
sbb
pop
sbb
enter
cmp
mul
into
add
das
cmp
sbb
iret
jo
hlt
add
cwtl
dec
cli
and
sub
sbb
dec
mov
shlb
jne
push
push
push
push
or
out
jmp
rolb
dec
adc
mov
clc
outsb
pop
or
out
enter
xor
lods
inc
sub
in
inc
pop
adcb
cmpsl
scas
and
push
xor
cltd
mov
xorb
push
add
adc
or
ss
sar
xor
sbb
dec
pop
push
and
enter
mov
push
inc
cwtl
pop
sub
mov
ret
pop
rol
ror
push
inc
sub
add
jl
test
movl
out
xor
in
addb
jecxz
aam
mov
xorb
test
lds
sub
cltd
out
fcoml
test
or
sub
push
pushf
mov
add
xchg
mov
mov
leave
int3
jmp
and
insl
rclb
sbb
and
dec
out
mov
arpl
adc
iret
pop
pop
xchg
xchg
rclb
loopne
andl
and
test
add
xchg
xchg
xor
les
mov
pusha
pop
ret
add
jp
or
fnstsw
lods
jno
sbb
push
adc
cs
adc
mov
sub
lret
or
push
xor
loop
or
into
inc
mov
dec
jbe
mov
adc
adc
adc
pop
inc
push
sbb
and
adc
dec
push
inc
adc
add
and
std
fwait
outsl
imul
inc
in
add
xchg
test
mov
hlt
inc
xchg
imul
clc
pop
orl
imul
mov
incl
lock
lds
dec
sti
push
aam
pop
pushf
enter
fidivl
add
push
cwtl
mov
or
mov
push
fisttps
ret
sub
outsb
xor
sti
data16
xor
inc
and
jo
aaa
add
push
adc
or
sbb
hlt
push
mov
inc
js
fisttps
inc
dec
call
int
rcrl
int3
dec
int3
dec
and
arpl
into
mov
imul
fidivrl
out
les
mov
jmp
sbbl
pushf
ret
nop
dec
inc
imul
add
or
orb
jle
aas
or
inc
add
enter
jp
jge
adc
mov
sbb
cmp
ja
lods
ret
jbe
jge
adc
orl
push
xlat
mov
or
sbb
xor
in
mov
push
inc
push
dec
xlat
mov
scas
add
cmp
repnz
xor
testl
pop
lock
xchg
or
icebp
mov
jp
inc
shr
cmp
loope
inc
ja
pop
shlb
popa
icebp
call
aam
into
lock
stos
xlat
shll
mov
cmp
sbb
push
push
cmp
jp
sub
iret
xchg
ljmp
mov
jmp
aad
add
inc
lea
mov
aas
leave
jp
loope
and
aaa
push
ret
and
push
jbe
aam
add
pop
repnz
out
or
test
or
pop
dec
inc
jmp
sub
cmp
pop
cmp
cmp
jg
andl
das
xor
mov
mov
mov
sbb
jg
mov
adc
or
sbb
imul
xor
bound
jp
adc
ja
xor
cmc
inc
fsubrl
cmpl
pusha
fwait
or
faddl
and
mov
jmp
dec
mov
insb
add
cltd
and
jae
testl
loopne
or
mov
dec
inc
cmp
pop
imul
popf
inc
adc
and
push
or
jne
inc
sbb
pop
cld
or
xor
push
imul
cmpsb
icebp
push
mov
mov
mov
roll
mov
test
bound
jl
sbb
pop
jae
cmp
addl
rolb
xor
popf
mov
sbbl
fwait
sub
cmp
cld
adcb
add
add
stc
jg
aas
stos
pusha
popa
dec
lods
loop
add
sbb
pushf
sbb
aam
movsb
aaa
lods
arpl
mov
push
push
push
push
add
mov
mov
fildl
or
pop
jg
repz
stos
cli
mov
fs
pop
jl
testb
dec
add
mov
adc
dec
inc
cmp
iret
or
adcb
sub
test
lcall
int3
or
inc
cmpsb
js
adc
or
lret
adc
scas
fs
or
scas
mov
jbe
outsb
sbb
mov
in
adc
aaa
and
inc
clc
xchg
out
dec
push
push
lods
inc
std
pop
inc
es
mov
mov
push
jmp
push
mov
dec
cmpsb
pop
adc
or
inc
or
sbb
push
sbb
lret
cmp
jg
push
dec
rorb
fstl
lock
adc
mov
add
jns
fadd
inc
push
cmpsb
jmp
and
inc
outsb
fcomps
jb
out
pop
mov
rcl
inc
adc
mov
cmp
out
pusha
cld
out
push
pop
cmp
movsl
and
mov
push
mov
rcrb
fisttpl
or
dec
lret
push
inc
mov
pop
add
in
fimull
and
or
dec
cmp
cwtl
jbe
or
adc
cmp
mov
add
or
and
add
add
jb
frstor
loopne
mov
push
stc
repnz
pop
add
xor
call
adc
mov
dec
data16
dec
or
aaa
loope
mov
pop
je
in
or
aam
dec
popa
add
adc
push
daa
add
dec
movsl
jl
mov
pushf
cmp
or
je
or
imul
sbb
mov
cli
rcrb
rcrl
testb
cmpsb
mov
dec
out
push
dec
xlat
call
push
add
mov
lock
sub
and
into
icebp
mov
xchg
adc
lock
leave
dec
out
dec
je
dec
jne
or
push
push
dec
ja
les
rol
push
or
sbb
or
and
adc
aas
sbb
or
inc
sub
add
xor
pushl
call
push
icebp
enter
or
mov
test
fildl
arpl
mov
add
or
add
je
or
pop
dec
cli
mov
loopew
inc
out
add
jl
and
mov
push
push
stos
and
sbb
xor
and
inc
sbb
hlt
push
cli
adc
cmp
push
jb
dec
cwtl
or
push
jae
mov
clc
push
cli
aaa
jl
xlat
inc
sbb
inc
mov
add
sbb
cmpb
xor
outsl
cwtl
sub
add
and
pop
imul
cltd
adc
sub
cmp
les
sbb
mov
add
shrb
push
mov
cwtl
xor
jle
es
push
insb
jl
enter
add
cmpb
shlb
pop
and
hlt
pop
out
xor
pop
fsts
adc
sbb
adc
pop
sbb
ror
mov
jecxz
rorl
stc
push
mov
inc
push
mov
loopne
shlb
and
or
ss
rcll
mov
mov
fwait
cmp
inc
pop
sarb
popl
lock
sbb
push
xchg
les
outsb
adc
sub
inc
cmp
add
add
xchg
scas
or
je
pop
mov
and
dec
mov
int3
jg
enter
jg
add
xchg
jbe
or
sbb
push
pushf
fmuls
or
aam
test
cmp
mov
mov
or
hlt
adc
pop
cld
pop
jle
adc
pusha
out
nop
lea
fcoms
lods
call
and
cmp
pusha
cmp
jge
pushl
ret
add
dec
jg
adc
orl
jg
jmp
adc
dec
xchg
into
jge
stos
mov
lods
pusha
ss
lods
add
es
add
and
test
push
dec
cmp
xchg
or
jb
or
cmpsl
setle
push
inc
scas
gs
inc
pop
aaa
pop
pushf
and
jle
adc
jae
pop
mov
scas
or
pop
and
jns
mov
bound
or
lock
adc
add
add
es
sub
lret
stc
fs
pop
xchg
pop
sti
push
sbb
ja
jecxz
lcall
push
mov
jns
mov
hlt
aas
out
pop
mov
mov
xlat
je
cmp
or
adc
cmp
jb
testb
add
add
cmp
loopne
js
ret
rorb
jge
push
jmp
inc
addr16
sbb
sbbl
je
cmp
sbb
jb
cmp
imul
push
push
or
xchg
pop
dec
in
push
mov
push
adc
call
jmp
das
xor
push
jne
subl
or
mov
and
dec
jmp
adc
mov
loop
push
es
jmp
jmp
shll
push
inc
pop
pop
nop
or
aad
iret
jg
pop
xchg
mov
mov
mov
dec
or
pop
mov
push
lret
ret
gs
or
int3
or
das
inc
stos
dec
in
fnstsw
sbb
leave
hlt
sub
jle
and
sbb
sub
mov
fsts
and
stc
ss
sahf
nop
add
add
add
in
push
scas
dec
or
jg
sub
mov
add
subps
int
in
mov
fldz
aaa
xor
add
push
stos
dec
jne
push
mov
dec
mov
sub
cmp
sub
push
pop
fdivs
aaa
push
dec
push
adc
das
and
je
pop
and
fld
fsts
call
fildll
adc
rcr
outsb
cli
inc
cmp
jmp
cwtl
mov
xor
aaa
and
sbb
add
jle
sub
sbb
fcmovu
cmp
test
cmpsb
sbbb
rolb
pop
mov
cmp
cmp
in
pusha
push
jb
addb
push
jb
jb
or
xchg
adc
xchg
inc
or
dec
in
sarl
mov
inc
mov
add
pop
bound
addl
lret
callw
lock
mov
jno
les
sar
aaa
and
pop
jb
in
push
sti
jns
fsubl
xor
cwtl
sub
sub
mov
imul
add
dec
in
ficompl
xchg
call
inc
push
in
lock
fwait
pop
xor
pop
inc
mov
leave
stos
dec
fimull
insl
mov
fmul
pop
repnz
jne
add
leave
orb
fldt
jb
sub
dec
ret
xchg
fildl
mov
inc
adc
xor
push
repnz
in
ret
in
inc
fdivrl
mov
xor
roll
addb
dec
sbb
loop
and
loopne
xchg
std
popf
add
inc
pop
fsubr
icebp
dec
mov
jae
in
addr16
loopne
mov
fisttpll
mov
es
mov
add
ret
addr16
lds
push
adc
adc
call
or
scas
mov
mov
dec
ret
repnz
dec
mov
in
inc
outsl
imul
adc
dec
pop
mov
ss
adc
stos
sbb
popa
inc
lods
movsb
movsb
test
or
je
pop
insb
insl
dec
or
insl
fistps
jne
sbb
sbb
outsb
in
xchg
jo
jne
dec
jb
loopne
mov
stc
jne
and
mov
imul
add
adc
jne
xlat
xor
inc
mov
call
fcmovbe
xchg
lock
dec
adc
aam
add
imul
lcall
daa
inc
pop
adc
mov
fsubs
fistpll
cld
outsb
insb
push
jno
pusha
dec
xor
and
push
xchg
jo
js
add
popa
sbb
mov
loop
and
xchg
inc
jp
jnp
fisubs
movsb
fstl
or
jno
mov
inc
movsb
mov
cmp
sbb
sti
gs
cmc
stos
lret
jecxz
test
jecxz
imul
sbb
cmpl
movsb
in
xchg
enter
sub
xchg
in
scas
cltd
sub
popf
jno
sub
inc
mov
rclb
add
sub
fadd
pop
xchg
mov
pop
push
in
dec
js
jl
sahf
popa
js
lods
add
pop
cmp
shr
push
push
xchg
and
stos
add
push
xor
imul
in
je
jge
sti
xor
aad
push
int
inc
pop
jb
pop
and
inc
sub
or
insb
xchg
lea
sbb
enter
add
sbb
aam
test
sti
adc
add
push
cmp
jle
jmp
gs
cmp
ret
mov
jbe
push
jl
lock
stos
cwtl
icebp
out
cmp
xchg
or
mov
add
adc
loopne
xchg
mov
mov
pushf
stos
pusha
mov
pop
jbe
and
dec
enter
pop
das
jns
hlt
jnp
negl
pop
insb
jnp
pop
sbb
call
pop
dec
lods
or
das
jo
push
fdivs
fdivrl
arpl
jo
aam
sub
shrb
aam
nop
xchg
xchg
imul
sbb
repnz
out
sub
in
pop
mulb
insb
insl
mov
or
add
push
push
jmp
add
ljmp
sub
add
xchg
mov
xor
jl
bound
jmp
xor
loopne
stos
movsl
sub
jno
sub
bound
in
rolb
push
inc
in
cmp
xchg
and
cmp
fistps
lahf
stos
inc
in
cmp
imul
push
call
jl
lahf
in
xchg
stos
push
or
in
xor
jmp
dec
pusha
adc
in
gs
dec
mov
sub
fisubs
stos
adc
jg
mov
es
dec
fs
mov
sub
loope
je
add
or
pop
push
out
jno
or
and
inc
test
out
cmp
rcll
adcb
rcrl
pop
addb
cmp
dec
rcrb
mov
mov
cmp
lea
stos
shlb
scas
push
adc
imul
or
jb
fisttps
xlat
scas
inc
mov
test
pusha
mov
pop
aam
imul
lock
fwait
lock
cmp
mov
loope
cmp
or
rdmsr
dec
xor
push
sbb
jecxz
mov
xlat
je
lock
and
das
in
or
in
pushf
subb
in
call
push
push
popf
loopne
faddl
fs
in
cltd
cmp
add
xlat
inc
repnz
fidivs
xchg
xlat
clc
test
and
faddl
cwtl
xchg
push
jno
jns
icebp
rolb
aam
push
in
in
or
sbb
xchg
repnz
sbbl
or
or
and
aad
xchg
inc
test
cmp
movd
sti
xchg
cs
repnz
and
fidivrs
cmpsb
fsubs
repz
mov
cmp
xor
dec
enter
inc
xlat
dec
pop
pop
enter
pcmpgtb
pop
ret
cmp
lock
adc
movsl
shl
sub
mov
mov
xor
aas
add
loopne
aam
test
test
and
or
or
or
enter
lock
cmp
cmc
inc
enter
jb
rol
cmc
insb
mov
adc
mov
sbb
mov
call
cmc
fsubl
pop
xor
and
or
dec
scas
andb
and
cli
add
sbb
ss
sbb
jnp
jmp
adc
pop
lcall
test
push
loopne
xor
cwtl
xchg
idiv
mov
mull
sbb
fdivs
iret
ret
test
movsl
movsb
mov
dec
mull
lock
aad
idivl
lds
es
pop
adc
fadds
clc
adc
iret
sub
pop
sbb
imul
js
iret
mov
mov
dec
adc
push
das
sub
and
push
xor
stc
loopne
paddsb
out
jmp
stc
sbb
mov
cmp
icebp
mov
call
and
mov
push
jo
xchg
dec
enter
xchg
es
or
jl
stc
shlb
insb
mov
ret
fmuls
das
rcrb
add
mov
mov
stos
and
mov
insl
psubsb
xchg
pop
jno
iret
cli
cmp
insb
popa
inc
cmp
fs
mov
subb
mov
lds
test
inc
loope
push
dec
sbb
pop
xlat
cmpsb
or
jnp
ja
inc
movsl
xchg
loop
sti
mov
gs
sti
hlt
add
or
loopne
cmp
shlb
loop
das
mov
mov
sbb
fiaddl
repnz
sub
in
lock
sbb
adc
sub
or
test
and
or
pusha
sbb
sbb
jb
adc
xchg
jl
sub
jmp
incb
testb
icebp
mov
add
decb
fstp
aaa
lock
dec
pop
lds
les
or
pop
fidivl
push
sbb
or
subl
fstp
pop
or
inc
sar
nop
leave
mov
dec
xor
imul
push
and
or
dec
dec
sbb
les
cmpb
movsl
sbb
pop
repnz
notl
mov
call
jo
insb
je
or
jne
stos
icebp
adc
in
xchg
sbb
enter
mov
int3
aam
cmpsl
jb
mov
push
add
mov
pop
sbb
je
adcl
ror
insb
sbb
adc
mov
sbb
sbb
inc
push
push
mov
mov
add
or
add
imul
out
inc
jo
andb
add
test
cmp
ltr
loop
mov
push
or
add
orl
sbb
fwait
push
loopne
add
and
add
inc
xor
or
in
xor
je
int3
pinsrw
mov
movsl
dec
pop
inc
int3
fistl
test
iret
add
iret
fistpll
mov
pusha
enter
mov
or
jo
mov
adc
es
mov
stos
rorl
lds
mov
movsb
xchg
std
loopne
dec
push
mov
pusha
xlat
lea
les
mov
add
xlat
aad
push
jmp
and
xchg
lods
mov
fcmovu
push
popf
fs
or
aam
fdivs
pop
mov
imul
cs
inc
repnz
fdivr
sar
mov
and
push
add
dec
mov
adc
inc
lea
push
test
sbb
int3
das
sysenter
sub
aam
adc
xchg
push
cwtl
dec
aas
in
xchg
rolb
loope
add
xor
aad
add
mov
cmc
mov
jp
adc
idivb
sub
cmc
inc
pop
movsb
pop
lcall
mov
adc
nop
movl
pop
test
add
mov
pop
jbe
sub
pusha
mov
add
push
jmp
test
cmpl
and
xchg
inc
cltd
mov
fldt
push
jmp
stos
sbb
ljmp
push
sub
enter
or
or
push
roll
cwtl
icebp
stos
jmp
xchg
insl
inc
and
sub
in
call
nop
xchg
cwtl
aam
daa
cltd
pusha
mov
xor
push
enter
inc
lods
inc
sub
and
mov
inc
pop
fcoml
inc
ret
or
jmp
add
insb
jle
pusha
push
scas
int
std
xor
prefetcht0
int
push
or
adc
or
or
mov
and
lods
sbb
fisttpll
lret
adc
bt
fldenv
push
or
lea
lods
aad
dec
mov
fstps
push
call
cmp
arpl
cmp
cmp
pop
leave
out
push
mov
dec
dec
jno
punpcklbw
daa
lea
notb
notb
push
mov
jo
fsub
pop
sub
dec
pushf
xchg
cmpsb
call
adc
test
test
loopne
sbb
dec
js
dec
and
jnp,pn
movsl
add
sti
push
pop
jo
sbb
jno
fwait
in
movsb
and
jno
sub
push
gs
mov
xchg
jne
mov
loop
adc
inc
inc
dec
adc
lea
jno
xor
cmpl
sbb
add
cltd
nop
inc
sti
or
stos
adc
aad
jge
clc
jnp
jb
add
inc
adc
dec
fcoms
mov
ret
pop
push
or
cmc
andl
xchg
mov
fcompl
dec
pop
mov
xchg
inc
bound
sbb
push
adc
nop
lock
imul
fimull
rcl
cmpsl
mov
push
pop
jae
adc
cwtl
dec
repnz
adc
dec
or
push
adc
or
inc
dec
shll
adc
xchg
sbb
int3
xchg
mov
push
or
aam
imul
add
fchs
sub
imul
pop
jb
sbb
in
dec
dec
shl
pop
adc
push
add
xchg
data16
rorb
push
bound
mov
movsl
and
fsts
enter
in
lea
push
cmp
fs
popa
shrb
in
mov
shlb
pop
pop
int3
repnz
xor
gs
rclb
adc
in
inc
mov
xchg
fwait
xchg
adc
shrb
aam
mov
mov
int
mov
inc
mov
add
subb
fcoms
aam
mov
mov
outsl
pop
sbb
in
push
jo
imul
xchg
in
inc
xor
dec
sbb
jns
insl
adc
bound
add
jo
lock
mov
xor
sbb
xchg
lcall
in
adc
mov
xor
and
adc
jmp
call
push
popa
aad
aad
enter
pop
int3
adc
jnp
sub
shll
popa
sbb
les
sbb
movups
sbb
inc
push
xor
stos
sub
pop
aas
roll
shrl
aas
sbb
adc
loopne
inc
add
jmp
andb
sbb
inc
cmpsl
mov
mov
sbb
sbb
into
jb
adc
out
cld
test
mov
das
and
dec
push
lods
movsl
xor
int
test
iret
add
cmpsl
mov
cmp
rcr
ret
xchg
nop
imul
lods
mov
jge
cwtl
push
rcll
aam
rcrl
scas
in
stos
pushf
and
add
adc
mov
xchg
fisubl
xchg
jl
xchg
jno
push
cwtl
mov
mov
inc
fnstsw
jo
add
mov
fadd
adc
and
stos
mov
mov
pop
pop
int3
lret
lcall
js
out
insb
adc
fimull
subb
dec
mov
push
out
inc
push
testb
and
xchg
jl
add
ret
nop
adc
jl
mov
std
dec
or
and
mov
in
jge
in
inc
add
and
fidivl
lods
mov
sub
add
mov
lods
in
aaa
nop
sub
push
int3
mov
mov
insl
loop
pop
test
and
mov
mov
jb
pop
or
mov
cltd
sub
fdivl
push
and
les
cmpsb
mov
pop
dec
mov
shrb
and
dec
scas
or
and
mov
push
dec
fsubs
es
cmp
fadds
std
call
sub
pop
add
push
in
or
sbb
xorb
mov
push
mov
ja
or
add
test
or
push
mov
add
cmp
jmp
fdivs
push
jmp
cmp
sbb
aam
or
popa
test
dec
js
inc
inc
cmp
stc
es
leave
mov
movsb
jp
idivl
fsubs
lea
pusha
adc
push
rcrb
dec
push
insl
jbe
or
adc
adc
dec
push
fs
sbb
cltd
fs
sbb
inc
cmp
sub
push
nop
sub
xor
and
nop
inc
fdivr
sub
mov
xlat
push
cmp
shlb
mov
jmp
and
mov
push
pop
mov
sub
aam
or
or
dec
xchg
dec
test
int3
pop
in
addb
sub
mov
mov
xor
xorl
adc
cmp
sub
or
jne
mov
add
popl
mov
sub
sbb
in
loope
test
sub
outsl
add
dec
dec
cs
movsb
mov
lock
dec
enter
dec
mov
mov
lahf
ret
dec
adc
cmpsb
rolb
int3
aas
outsb
pop
int3
rcl
jle
mov
xor
outsl
and
rolb
pop
sub
cltd
push
pop
pop
adc
adcl
sub
mov
aas
rorb
test
pop
xor
mov
sbb
cs
adc
cltd
imul
adc
cmpsb
mov
fdivs
ret
imul
jo
je
jo
add
sub
pusha
pop
dec
xor
mov
pop
jns
pop
test
sub
out
data16
or
push
and
mov
mov
xor
xchg
adcb
mov
rorl
xor
test
test
test
cwtl
mov
cmc
xor
xor
and
mov
xchg
cmp
push
mov
es
shlb
das
movsl
xor
jmp
jmp
dec
mov
inc
adc
xchg
out
xor
jl
lea
add
aam
shll
add
test
add
adc
mov
sbb
sub
in
xor
mov
xchg
cwtl
cwtl
adc
push
pop
and
push
mov
fwait
scas
or
movsb
add
cltd
mov
mov
ret
into
testl
sub
enter
and
push
sbb
imul
push
test
jbe
loop
sub
pop
in
xorb
mov
adc
mov
mov
sahf
bound
xor
mov
cwtl
mov
shll
insl
jns
lahf
or
dec
sub
pop
xor
xchg
inc
adc
outsb
xor
add
subl
sbb
add
scas
adc
and
adc
stos
cwtl
ja
mov
sbb
cmp
popa
out
add
or
pop
fstpt
jg
mov
cmp
xchg
cmp
xor
add
fmuls
or
pop
cmpsl
lock
cmp
pusha
sub
mov
jno
adc
mov
aam
mov
lds
out
adc
xchg
insl
fildll
mov
jae
sub
stos
adc
mov
in
rclb
pushf
sarl
jb
adc
jae
aaa
or
inc
roll
inc
add
leave
cmp
pop
mov
cmp
xchg
in
cmp
sbb
mov
fsubl
fstl
test
mov
int3
pop
dec
shll
pop
mov
ret
push
inc
cmpsb
sbbb
comiss
adc
inc
jge
test
mov
cmpsl
xchg
sbb
and
nop
jo
mov
xchg
push
cmp
mov
loope
mov
mov
adc
in
shlb
lods
test
js
fidivl
mov
fs
mov
outsb
out
shrd
movsb
inc
rcrb
xchg
bswap
enter
leave
enter
test
lds
xchg
xchg
xchg
cwtl
nop
orb
push
dec
outsb
adc
in
leave
pusha
aam
call
insb
movsl
and
std
pushf
add
leave
and
pop
ds
xor
in
inc
sbb
pop
xchg
or
push
dec
cmp
je
mov
xor
push
out
jl
inc
rorl
mov
movsl
mov
dec
fnsave
add
and
mov
add
inc
pop
rorb
das
sub
sub
and
enter
inc
mov
cmp
lret
sbbl
push
nop
les
enter
push
popa
adc
rolb
lods
aam
cmp
or
mov
iret
or
sub
es
jne
pop
and
pushl
adc
shrl
test
movsb
aaa
pop
add
mov
lcall
xchg
pop
xor
lea
nop
xchg
adcb
mov
add
fs
jmp
test
jo
lahf
in
jb
xchg
shl
sbb
and
push
shrd
icebp
jge
insb
or
into
cmpl
sbb
sub
pop
or
jmp
cmp
idivl
dec
adc
pop
adc
sbb
dec
es
adc
pusha
imull
mov
imul
jae
sbb
fwait
xlat
adc
add
or
xchg
aam
dec
lret
adc
ficompl
dec
nop
mov
push
insl
or
repnz
push
pop
scas
or
xchg
sub
sbb
push
mov
dec
cmpsb
insl
dec
idivl
orl
or
pop
adc
and
test
push
in
stc
adc
add
or
xchg
inc
xlat
aas
outsl
lds
inc
or
stos
aam
inc
enter
mov
cwtl
cmp
daa
push
jmp
push
cwtl
mulb
std
shr
movsl
dec
push
sbb
sbb
nop
mov
cltd
or
jns
fisubrl
test
mov
sbb
jae
insl
and
test
pusha
das
xchg
sbb
xor
pushf
mov
mov
adc
add
xchg
or
or
pusha
xchg
dec
stc
les
imul
mov
nop
mov
nop
inc
push
cmp
roll
rclb
dec
xor
xchg
sarb
mov
xchg
xor
aas
mov
cltd
in
int3
pushf
pusha
xor
adcl
subl
jecxz
ja
jle
xor
jb
dec
push
mov
push
adc
mov
daa
push
imul
adc
mov
mov
sub
jno
adc
dec
dec
repnz
mov
insb
insb
mov
das
insb
inc
push
movsb
sbb
jge
and
mov
jge
mov
lods
lods
pop
inc
inc
mov
xchg
adc
or
movsl
sbb
cmp
jnp
sbb
sarl
enter
lock
add
in
and
add
leave
dec
nop
insl
push
fs
mov
int3
daa
or
or
mov
scas
xor
in
adc
ss
push
and
ror
scas
notb
jne
add
sub
repz
insl
popa
dec
ret
adc
sti
leave
jb
jo
fists
adc
sbb
mov
push
movsb
les
push
addb
mov
lea
daa
mov
xor
pusha
clc
xor
repz
xchg
test
sbb
insb
stc
test
mov
sbb
jno
mov
in
inc
adc
outsb
push
or
and
or
mov
or
shll
push
bound
add
add
repnz
enter
fwait
xchg
cmpsb
imul
movsb
call
ljmp
sub
sbb
sub
aaa
xlat
stos
add
mov
pusha
inc
fisubl
mov
mov
aas
out
sbb
adc
or
or
jnp
jns
ljmp
dec
rorl
xchg
sub
mov
and
nop
pop
test
dec
cmpsb
sbb
pop
cmp
inc
movsb
aad
dec
cmp
sbb
adc
and
xor
rclb
mov
push
push
pop
inc
pop
sbb
add
push
fsubrs
mov
adc
test
pop
or
and
sub
sbb
ficoml
call
ss
inc
mov
adc
mov
arpl
test
lods
mov
mov
xor
or
add
or
adc
pop
dec
pusha
lods
xor
adc
push
leave
adc
negl
fwait
xor
inc
in
inc
stos
cwtl
aam
adc
sbb
adc
or
mov
push
lods
inc
sub
add
stos
lds
cld
add
add
inc
adc
inc
and
and
xor
movsl
add
sub
mov
mov
push
jo
xor
push
jge
mov
or
sbb
sbb
xor
std
xorl
add
pop
mov
xchg
jo
push
and
stos
xor
ffree
lea
inc
sbb
rorl
sub
xchg
in
cli
mov
xchg
fnstsw
nop
sbb
dec
cli
pop
jp
xchg
push
dec
cmp
insl
adc
rcrb
mov
push
ret
scas
inc
repnz
test
cwtl
repnz
movsb
lds
test
je
dec
sahf
or
imul
inc
inc
rorb
add
mov
dec
xchg
xor
imull
dec
leave
adcb
or
sbb
pusha
cmp
js
or
fsts
iret
sbb
mov
jns
lds
stos
sbb
mov
inc
sbb
adcl
sub
stc
subb
incb
sbb
inc
ss
mov
fisubrl
or
loopne
sbb
sbb
sbb
pop
pop
imul
je
mov
xor
inc
mov
add
mov
adc
ret
scas
jne
fistps
add
xor
std
push
ret
leave
sbb
add
cmc
rcll
and
dec
or
push
sbb
pop
xor
push
xor
and
adc
inc
cmpsb
dec
pushf
icebp
movsb
mov
das
lods
mov
rcrb
and
or
xchg
pop
push
pop
jne
mov
push
push
dec
lods
cvtps2pd
lea
verw
lods
stos
jne
mov
add
or
add
lock
push
flds
or
sbb
push
arpl
out
sbbb
xlat
imull
mov
sub
fmulp
rcrb
add
cmp
sarb
xor
push
imul
dec
ja
and
xor
jo
inc
js
jecxz
sbb
cmp
call
xchg
mov
mov
xchg
out
and
ja
in
into
movl
scas
inc
add
sbb
aad
xchg
je
rcll
sub
xor
popf
push
ds
sbb
and
xor
or
ret
cmp
addr16
fistpl
sub
push
and
and
popf
leave
xchg
or
popa
jno
xchg
scas
pop
push
and
mov
mov
inc
lret
imull
loopne
fcomp
add
nop
add
in
adc
call
inc
mov
pop
outsb
shl
add
xor
arpl
mov
dec
adc
lock
push
lcall
lret
pop
push
or
push
push
and
and
mov
notl
push
xchg
mov
add
dec
adc
dec
pop
add
imul
mov
loopne
sahf
out
xlat
xor
pop
outsl
out
jns
out
cmpsb
rcr
push
adc
jo
jns
xor
add
jecxz
insl
ss
int
outsb
mov
push
shrl
mov
dec
es
mov
jg
mulb
add
inc
orb
jnp
mov
add
pushl
or
adc
mov
rcll
xchg
adc
or
cmp
rclb
cmpl
jns
mov
test
add
nop
add
into
pop
adc
test
and
push
xor
push
mov
jo
out
data16
mov
ret
dec
leave
sbbb
rdpmc
pusha
scas
divb
incl
sub
xorb
cmpsb
bound
and
insb
outsl
arpl
je
outsl
outsb
cmp
xor
gs
ljmp
push
je
arpl
jne
jb
outsb
je
add
das
add
push
mov
adc
dec
insb
div
incl
rolb
jb
js
je
jb
gs
add
or
sti
sahf
jg
insb
jb
add
add
add
jne
icebp
mov
ja
add
and
and
and
dec
sarb
add
add
loop
rol
or
mov
inc
xor
inc
push
add
into
mov
add
pop
dec
add
fidivl
push
je
push
insl
xchg
je
addl
cmp
dec
fisttpl
imul
fs
cmpsw
insl
push
push
xorb
or
bound
in
and
lret
sbb
popa
out
pop
cmp
aas
imul
ds
jp
outsl
or
mov
fidivs
arpl
lret
fstpl
out
outsl
jmp
jo
fisubs
xor
shll
stos
insl
sub
push
imul
scas
cmp
jne
inc
push
pop
fdivrl
xchg
sbb
sub
icebp
fisubrs
sub
insb
lcall
repz
lahf
push
push
sbb
popa
push
outsb
inc
mov
jecxz
arpl
or
or
dec
jbe
cs
js
sbb
outsb
bound
adc
push
arpl
mov
xor
cmp
jo
mov
lds
fbld
popa
in
mov
mov
xor
mov
xchg
ret
fidivrl
cs
or
xor
lock
outsl
andl
lds
fidivrl
jg
ret
mov
or
mov
jg
je
inc
ja
iret
push
and
sub
ss
cs
xor
jne
jbe
jb
jne
aad
pop
jae
jbe
inc
cmpb
outsl
xlat
xchg
stos
bnd
das
rcrl
lods
xchg
push
sbb
cmp
push
jo
sbb
dec
aad
outsl
aas
or
arpl
push
sbb
adc
aaa
jmp
lret
imul
imul
shll
or
fbld
rdtsc
push
clc
shll
outsl
pop
sub
das
xchg
inc
pop
push
jmp
pop
add
pop
pop
inc
outsb
adc
cltd
idivb
scas
cmp
mov
mov
mov
lea
scas
popw
je
add
push
mov
jo
cmp
xor
lods
add
fs
xchg
and
add
out
js
and
out
stc
jb
enter
adc
adc
enter
mov
adc
sbb
mov
enter
clc
sbb
mov
pop
xor
jmp
js
enter
jns
jp
cld
je
fs
lcall
pusha
dec
js
imul
mov
out
add
sub
into
fwait
sbb
push
push
mov
loope
sbb
lret
or
cmp
or
pop
mov
imul
pop
mov
or
pop
mov
mov
and
mov
cmp
push
test
cmp
add
add
and
add
das
das
adc
insb
and
ljmp
daa
dec
or
or
push
push
adc
fdivr
dec
inc
jmp
fldt
dec
idivl
aas
andl
cmovg
daa
loope
jno
mov
adc
daa
outsl
dec
and
addb
add
out
ss
jns
out
out
fildl
pushf
fimuls
cmp
pop
pop
jp
js
inc
jae
push
and
sub
mov
dec
jne
dec
fbld
mov
fwait
push
ds
neg
iret
mov
insb
sbb
clc
subl
roll
fs
dec
and
jns
add
ljmp
dec
das
das
jns
push
dec
push
inc
inc
arpl
bound
mov
dec
outsl
jbe
dec
arpl
ds
popa
or
je
inc
jne
jne
xor
insb
mov
push
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
jae
mov
xchg
addr16
fcmove
fdivrl
je
jb
xor
and
jnp
data16
push
gs
sbb
dec
outsl
outsb
and
fdecstp
push
jne
xchg
pop
dec
imul
pushf
inc
aas
add
out
dec
or
jge
dec
jnp
mov
push
call
push
push
inc
push
popa
insb
outsb
mov
inc
inc
mov
push
adc
daa
and
sub
sub
cs
xor
xor
icebp
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
test
movsb
enter
mov
pop
pop
pop
adc
popa
bound
gs
sbb
push
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
divb
lcall
loopne
insb
adc
and
add
orb
ret
mov
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
loope
imul
push
outsl
daa
mov
std
push
outsb
js
xor
popa
js
pop
cmp
inc
addl
pop
ror
push
sbb
out
ret
sahf
shl
ret
sub
jle
xchg
rolb
scas
add
mov
push
add
add
add
and
push
movsb
jo
push
pop
push
add
xor
mov
addr16
hlt
and
add
pusha
push
mov
pop
js
or
cmp
add
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
cld
movsl
or
xchg
add
mov
imul
outsb
and
push
or
add
add
mov
mov
out
mov
push
rorb
add
xchg
out
xchg
lea
mov
mov
xchg
mov
mov
mov
pop
fisubs
or
dec
cmpsl
ror
jo
mov
jne
out
add
push
stos
aad
lods
mov
cmc
jp
repnz
sbb
mov
pop
sbb
ljmp
sub
dec
inc
pop
dec
xor
dec
inc
adc
notl
xor
rclb
cs
outsl
pop
loopne
jae
dec
bound
je
outsb
data16
cmp
jge
push
jbe
dec
out
je
xor
mov
xchg
daa
pop
lea
push
mov
outsl
js
push
inc
insl
decl
cs
and
insl
jo
jo
and
imul
and
daa
aaa
insb
les
jle
loopne
dec
imul
mov
add
ds
cmp
dec
inc
jb
push
fwait
xchg
fdivrs
daa
pop
and
ss
jns
mov
insb
and
jnp
push
in
and
rolb
mov
outsb
jle
jbe
jnp
outsb
xor
outsb
pop
jb
and
mov
imul
push
jbe
jbe
push
lahf
fs
add
subl
lods
jp
or
out
cwtl
pusha
xchg
pushw
popl
in
andb
imul
inc
jo
or
push
and
xor
test
outsb
mov
pop
pop
pop
push
push
jae
or
mov
aas
cmp
call
push
hlt
clc
addr16
subl
gs
mov
data16
pusha
adc
xchg
fucomi
das
mov
push
push
push
push
dec
testl
lcall
outsb
enter
lods
jbe
fisttps
xor
mov
jge
sbbb
xchg
imul
push
imul
sub
wbinvd
pusha
jg
xor
jae
pop
shll
inc
in
xchg
rcll
das
gs
sbb
sub
stos
outsb
bound
pusha
push
or
stos
pop
xor
outsl
xchg
daa
xchg
mov
in
repz
pop
pop
cmp
cmp
idivl
mov
push
and
sub
inc
daa
cmp
dec
jl
push
addr16
jle
mov
cmpsb
or
add
sahf
jae
repz
sub
pop
or
dec
loope
negl
sub
push
jb
sub
xor
aaa
and
push
mov
sbb
mov
xchg
xchg
sbb
jne
stos
addr16
push
jbe
lods
xor
add
ss
gs
mov
pop
mov
jo
or
dec
sbb
sahf
negl
jae
pop
sub
popa
sub
push
jl
out
out
das
pusha
fs
cmp
xor
jns
iret
repz
add
clc
lock
adc
fidivs
enter
mov
out
mov
lods
test
iret
jnp
out
xchg
nop
mov
test
sahf
out
cmp
ja
js
ja
pop
adc
je
jo
cmp
jmp
push
pop
iret
repz
push
push
dec
dec
inc
inc
cmp
repz
cmp
sub
cmp
repz
add
call
fmul
test
push
dec
sub
call
repz
pusha
push
dec
inc
jns
iret
repz
or
cld
in
out
sahf
out
mov
pusha
cmp
jnp
jge
stc
lock
int3
stc
xchg
stc
mov
xor
imul
or
stc
and
fdivrp
inc
clc
jle
mov
stos
ljmp
fs
sub
jb
pop
lds
fcmovb
inc
inc
addl
add
add
jne
pop
xorb
dec
cmpsb
fs
push
add
sbb
add
inc
mov
ja
mov
add
add
jbe
jnp
in
lea
in
pop
loope
mov
fildll
jle
out
mov
addl
mov
decl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
ljmp
mov
mov
mov
mov
mov
ret
enter
dec
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
cmc
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
aam
dec
mov
and
inc
test
test
incb
loopne
lcall
gs
popa
data16
mov
shlb
jns
push
xor
add
fiaddl
lahf
js
test
push
arpl
inc
insb
fs
sbb
mov
je
xor
cmc
or
push
invlpg
jae
pcmpgtw
xor
push
inc
lcall
adc
dec
push
push
dec
and
xor
push
dec
inc
das
mov
inc
add
adc
push
jo
ljmp
adc
pop
movb
into
mov
mov
jnp
jnp
std
adc
outsb
mov
ds
pop
adc
clc
idivb
stc
lret
sbb
jb
jge
arpl
cmp
pop
dec
scas
jp
jno
in
fstl
mov
repz
in
and
cmp
dec
imul
std
dec
lret
add
inc
mov
mov
sub
ficomps
fadds
inc
sbb
pop
jns
ds
xor
incb
ljmp
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
ljmp
cmp
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
lock
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
jg
fstps
insb
mov
out
leave
ljmp
orb
popa
pop
lock
push
or
scas
int
mov
leave
hlt
mov
ja
decl
sahf
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
pushf
fdivr
icebp
pop
pop
repnz
clc
iret
mulb
and
es
sbb
add
pop
fcmovnb
pop
outsl
push
dec
adc
fidivs
pop
out
jo
scas
xlat
dec
out
test
inc
sub
popa
sbb
push
into
mov
enter
mov
mov
das
outsl
jns
outsl
fdivrs
ja
pop
pop
inc
mov
test
popa
mov
out
mov
cs
sbb
es
jae
inc
imul
sub
jae
xlat
scas
or
test
mov
sbb
loopne
xchg
bound
jg
inc
mov
dec
pop
fs
pcmpeqw
sti
or
clc
jmp
daa
sti
adc
daa
je
addb
fucomip
jae
insb
aad
xchg
and
bound
jmp
xchg
fists
js
lret
xchg
loop
addr16
or
or
testb
stos
test
add
mull
jo
push
or
and
movsb
pop
cmpsb
outsl
mov
jb
jae
jae
xchg
repnz
insl
jle
fs
test
mov
inc
sub
js
sub
mov
pop
out
push
push
pop
out
adc
push
mov
or
push
cmp
jnp
push
in
dec
mov
cmp
test
inc
jecxz
adc
jae
stos
add
sbbl
cmp
jg,pn
hlt
icebp
mov
mov
cmpsl
mull
addr16
loope
mov
mov
xchg
jne
or
out
dec
mov
ja
inc
add
and
out
dec
cmp
pop
pop
ret
inc
popa
cmp
adc
dec
jb
xor
push
imul
sub
lahf
es
es
sti
cmp
mov
dec
or
cmp
mov
clc
cmc
jmp
inc
arpl
push
lock
ret
dec
dec
call
push
loopne
fstpt
xchg
cmp
jp
xchg
add
aaa
pop
jecxz
xor
jo
fwait
insb
mov
xor
mov
mov
js
push
pop
inc
addr16
xlat
in
imul
data16
jge
sti
mov
mov
arpl
daa
pop
arpl
mov
pop
gs
jne
mov
out
push
sbb
in
ja
arpl
jge
cmp
fistps
pop
or
ja
inc
mov
add
cmp
sbb
adc
aad
xor
aas
arpl
or
lret
sub
inc
sub
sub
out
inc
xchg
add
or
fidivs
fbstp
add
mov
inc
aas
into
pop
icebp
jecxz
or
addr16
dec
test
and
cmpsb
jae
in
in
push
arpl
and
arpl
loopne
push
push
popa
dec
js
cmp
or
rorl
sbb
je
mov
inc
bound
xchg
cmp
out
out
inc
neg
cmp
dec
aaa
fimuls
or
pusha
aad
fldl
push
push
daa
mov
dec
outsl
push
sub
xchg
sub
cmpsb
dec
je
inc
pop
sarb
inc
add
dec
pop
clc
xor
sub
mov
pop
inc
call
xlat
les
jecxz
out
pop
or
xor
inc
test
lods
icebp
pop
push
push
cmp
mov
mov
jb
sub
xchg
sub
outsb
lods
add
and
sahf
mov
pop
push
stos
inc
mull
jae
in
mov
mov
addr16
call
pop
insb
pop
scas
or
jo
and
mov
arpl
pop
pusha
adc
fadds
push
loope
outsl
inc
adc
fcoms
jno
xchg
cs
xlat
jbe
lcall
fstps
push
mov
out
cmp
push
inc
jnp
sbb
jl
mov
insb
xchg
imul
inc
inc
sbb
sbb
imul
inc
ss
adc
loopne
mov
dec
sbb
adc
mov
pop
por
insb
aas
pop
mov
jge
inc
bound
outsl
mov
sbb
pop
lret
ja
pop
mov
mov
cmpsl
xchg
inc
arpl
andl
pop
push
dec
or
testl
adc
mov
push
mov
inc
jl
jl
fisttps
inc
les
jl
adc
push
imul
jge
cmp
and
addr16
movb
bound
push
test
imul
mov
mov
jl
cmp
bnd
scas
jbe
fwait
jae
mov
es
jecxz
addb
pop
jnp
js
mov
jns
fidivrs
loop
insl
inc
mov
push
sbb
imull
pinsrw
outsb
outsl
movl
jae
adc
js
jno
mov
cmpb
insb
sub
lret
loopne
lock
cmp
cmp
jae
roll
dec
adc
xor
xchg
imul
iret
lcall
push
xchg
jl
xchg
bnd
adc
pop
icebp
js
jl
xor
aas
push
xor
push
imul
or
and
cmp
mov
mov
push
mov
push
outsb
xchg
cmp
pop
fstpt
insb
pop
aaa
sbb
sub
cmpsl
daa
pop
jmp
or
push
in
cmp
fs
arpl
inc
inc
sub
inc
clc
mov
mov
mov
pop
cmc
icebp
push
lret
push
mov
icebp
das
pop
pop
pop
scas
jle
ret
jb
bound
popw
aaa
xchg
call
add
inc
aas
popa
sub
sbb
in
ret
aaa
es
ret
das
lods
inc
outsl
das
addr16
sarl
fildll
add
push
aam
mov
sahf
insl
or
mov
or
xchg
fimuls
loope
insb
or
push
aaa
add
movsl
pop
mov
pop
sub
add
pop
pop
or
fisubrs
inc
inc
dec
push
mov
out
sub
mov
es
fwait
int
rcrb
push
in
inc
pop
inc
push
jnp
mov
lods
es
push
pop
ds
rol
or
imull
mov
jg
mov
ds
push
or
js
mov
dec
daa
hlt
inc
add
add
cld
data16
mov
jno
adc
dec
gs
inc
sbb
fwait
mov
dec
or
xor
push
push
inc
loopne
mov
es
xor
jg
iret
repz
scas
mov
pause
mov
outsb
out
sbb
pop
aaa
aad
and
test
pop
jae
out
lods
jg
jo
jns
add
inc
push
jecxz
mov
push
and
arpl
out
fwait
jno
push
pusha
subl
push
out
push
movsb
loope
scas
jae
xchg
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shll
jo
pop
and
dec
bound
out
sbb
sub
and
pop
jle
arpl
adc
push
orb
in
sahf
out
cmp
sbb
mov
lahf
fs
sbb
and
xchg
jmp
mov
jbe,pt
js
lods
dec
fdivrl
add
dec
pop
pop
xor
js
icebp
aad
jb
jno
je
cmp
fimuls
jo
jb
filds
lods
push
mov
and
cmp
jae
sbb
and
and
idiv
pop
cmp
and
arpl
xor
cmp
fs
inc
sbb
aam
jl
rolb
mov
in
fucomp
jne
je
ss
cmp
fildl
sub
imul
sbb
jae
data16
aam
imul
adc
push
movsl
mov
xchg
aas
push
mov
add
pop
jne
xchg
sbb
cmpsl
sub
arpl
in
sub
scas
ja
inc
scas
fdivl
sldt
mov
js
rcrb
mov
scas
inc
subl
inc
dec
stos
pop
add
or
inc
cli
inc
or
mov
nop
test
insb
push
and
test
aaa
cmpsl
or
mov
add
add
xorb
pop
push
adc
movb
cmpsl
xlat
push
mov
pop
outsb
adc
ds
fidivl
push
add
popf
shr
mov
push
inc
push
push
mov
inc
insb
jl
or
imul
and
and
stos
aaa
mov
iret
mov
xor
and
mov
loop,pn
fs
jns
cmpsb
call
movsl
and
inc
fiadds
jecxz
aam
mov
das
xchg
or
lods
dec
inc
aaa
inc
dec
add
pop
je
popl
test
dec
sbb
iret
mov
mov
outsl
mov
sti
cmp
push
les
adc
push
add
mov
pop
dec
jg
sub
stos
sti
push
sub
ds
sub
aaa
sbbl
repz
clc
iret
inc
fs
mov
xorl
es
inc
outsl
sub
outsl
mov
das
xchg
add
outsl
push
loopne
mov
push
xchg
inc
mov
mov
scas
ret
fldt
aad
in
cmp
ret
mov
add
sub
and
inc
mov
sub
imul
mov
jae
shrl
jp
jp
movb
fildl
mul
push
call
push
bound
xor
jmp
icebp
xchg
jge
dec
jb
fs
je
push
add
js
js
les
and
dec
inc
sahf
jns
mov
adc
pop
out
sahf
out
and
out
sahf
push
andl
ja
or
cltd
or
xchg
arpl
add
cmpsl
pop
sbbb
or
lods
subb
das
adc
mov
jns
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
add
shrb
ret
sub
fldcw
shrb
xchg
pop
adc
push
adc
pop
add
int
mov
xchg
rclb
lret
str
mov
and
das
lods
adc
scas
incl
inc
fwait
xchg
jbe
fnstsw
and
int3
xchg
jb
icebp
loopne
pop
mov
sbb
xchg
push
pop
cmpsl
scas
dec
rorb
and
inc
daa
cs
add
pop
jl
cmpsl
outsl
aas
das
push
jno
add
push
repnz
dec
mov
out
pop
insl
xchg
jno
add
mov
sub
and
ja
stos
mul
pop
or
push
inc
outsl
mov
push
and
xor
push
imul
arpl
xchg
addl
test
sub
mov
fdivrs
ljmp
jb
mov
jns
sub
inc
inc
fisubl
fwait
and
add
mov
cmp
and
fbstp
adc
pop
ja
mov
filds
mov
jbe
imul
sbb
movsl
or
sbb
cli
jb
or
mov
sub
movhps
and
cmpsl
or
add
push
cs
and
push
mov
imul
or
aaa
sub
imul
js
fucomip
je
inc
imul
xorl
mov
or
xchg
rcrb
push
stos
imul
out
mov
aas
shll
dec
pop
sbb
test
and
call
stc
movsb
rcr
mov
jae
outsb
sarl
das
or
js
cmp
imul
jecxz
jnp
shrl
mov
dec
pop
outsl
loopne
repz
sti
lcall
dec
sub
mov
test
loop
testb
sti
mov
inc
add
pop
fisubrl
fwait
ds
mov
mov
pop
loop
push
sub
scas
push
sub
fbld
pop
sbb
mov
pop
push
sub
mov
pop
in
adc
pop
imul
out
push
xlat
stos
jbe
push
sbb
pop
sti
pop
push
subb
adc
push
pop
xchg
jnp
lods
ljmp
push
cwtl
inc
fcompl
cmp
dec
lahf
ss
xor
add
jmp
sbb
xchg
or
aas
je
sbb
sub
lahf
pop
xor
mov
sub
es
mov
cmp
inc
rcl
inc
dec
pop
lea
xor
cmpsl
add
jecxz
scas
sub
or
pop
xlat
sbb
imul
inc
insl
leave
lea
lahf
out
insl
fimull
les
aad
jmp
add
or
out
mov
stos
cs
call
aaa
or
scas
js
push
and
arpl
imul
fs
aas
mov
mov
test
mov
jo
push
inc
mov
add
inc
sub
fisubs
dec
scas
xor
minps
aas
das
outsl
push
insl
loop
mov
inc
add
pop
push
aad
pop
ret
ss
add
ds
test
sbb
adc
and
paddusb
lcall
jp
shll
push
lahf
push
mov
outsl
stos
mov
lahf
pop
pop
adc
push
or
xor
mov
add
insl
lret
cmp
imul
mov
popa
xchg
pop
or
les
pusha
push
jmp
data16
add
sbb
dec
rclb
inc
add
adc
push
punpcklwd
cmp
add
call
cs
ja
mov
dec
inc
call
xchg
arpl
out
pop
inc
stos
xor
pop
adc
fisttpll
sub
dec
cs
cmp
xchg
cs
add
ss
sub
sub
mov
popa
sahf
es
inc
es
pop
bound
xor
jb
das
fimuls
bswap
scas
push
push
mov
inc
ja
minps
aas
push
orl
push
lahf
push
pop
outsl
adc
dec
mov
jmp
pop
jbe
mov
mov
push
and
lods
mov
test
fisttps
gs
les
mov
repz
xlat
pop
call
mov
jmp
jnp
shll
xchg
insl
add
sbb
pop
scas
mov
mov
push
mov
je
pop
cmp
inc
and
inc
inc
xchg
movsb
sbb
pop
rep
pop
daa
pop
lock
sbb
cmc
jb
and
jmp
inc
pop
pop
jnp
pop
push
push
mov
pusha
fistpll
scas
push
test
es
jns
movsb
jo
xor
ret
insb
push
jg
pop
icebp
or
jo
adc
incl
and
push
adc
cmp
push
es
mov
jle
fwait
cmpsl
es
push
adc
pminsw
loop
mov
push
jp
dec
or
dec
mov
in
mov
das
push
mov
pop
adc
mov
sbb
mov
jo
push
or
pop
add
jae
stos
aam
push
pop
das
or
jge
jg
cmp
xchg
outsb
les
or
lsl
das
add
push
mov
das
pop
popa
jno
imul
xor
arpl
mov
or
divl
xor
mov
aas
jmp
mov
lret
lock
movsl
push
jo
jg
fwait
xchg
ret
jo
mov
push
pop
aas
sbb
inc
sub
fsubrl
sbb
sbb
mov
popaw
adc
jno
jmp
das
and
pop
das
iret
lods
adc
pop
aas
jecxz
mov
sti
pop
fstpt
xchg
mov
das
add
xlat
and
adc
xchg
sbb
pop
mov
sub
inc
pop
lahf
sbb
jbe
push
jae
adc
jecxz
adc
rorb
sahf
ret
fidivrs
and
dec
pop
sbb
movq
je
jge
popf
mov
sub
push
das
ss
sti
and
or
adc
mov
sbb
hlt
sbb
add
cmp
insl
and
lods
daa
sbb
xchg
mov
sarl
mov
push
push
insl
arpl
loopne
push
out
bound
pop
or
pop
pop
mov
in
mov
pop
mov
lea
scas
xchg
idivl
pushf
dec
jb
pushf
dec
scas
cld
lods
and
or
mov
push
sbb
pop
and
stos
in
jl
xchg
pop
and
stos
in
jb
stos
in
dec
scas
xchg
nop
inc
test
das
test
push
leave
test
jb
pop
push
add
push
stos
in
mov
cmpsl
mov
inc
cmpsb
mov
fs
ljmp
xchg
stos
movsl
movsl
adc
push
jb
pushf
movsb
shlb
stos
stos
fbld
pushf
push
mov
push
aad
fbld
mov
sub
mov
mov
call
cwtl
fisubrl
sahf
test
stos
pop
and
sub
ret
leave
out
and
adc
mov
jno
jecxz
pop
and
pop
adc
mov
xor
pop
aaa
fcompl
dec
mov
xchg
ret
insl
adc
inc
push
or
and
test
testl
inc
cmpsl
iret
dec
xor
push
mov
xchg
pop
sub
inc
xor
loopne
xchg
notl
adc
mov
pop
bound
int3
ret
or
and
jmp
ret
aas
dec
dec
sub
fistps
insl
les
dec
inc
int
mov
mov
cmpsl
or
aaa
mov
aas
mov
or
movsl
and
xchg
sbb
mov
inc
xlat
push
mov
out
stos
or
pop
dec
notb
add
ret
das
and
sbb
sbb
dec
daa
sbb
xor
addr16
xor
push
xchg
mov
scas
or
arpl
jg
mov
lahf
jnp
arpl
movl
or
dec
pop
cmp
pop
enter
push
mov
mov
push
jmp
mov
adc
sbb
mov
ljmp
out
js
popa
les
filds
scas
mov
iret
aaa
outsl
inc
mov
js
scas
mov
das
push
fisubrl
inc
fmuls
jecxz
sbb
aas
pop
gs
or
and
in
xor
ja
push
bound
xor
or
and
out
push
sbb
shlb
lahf
sbb
andps
mov
jbe
sbbl
push
jg
add
and
add
push
pop
xlat
pop
add
sbb
repz
push
dec
pop
inc
inc
add
pop
aaa
sbb
add
mul
sub
pop
or
mov
mov
pop
sub
and
mov
push
iret
rcrb
xchg
bound
or
add
popl
inc
or
cmpsb
addr16
or
fdivl
add
jo
daa
bound
out
test
es
or
xor
je
push
cs
sub
lcall
nop
and
pop
imul
mov
mov
jae
inc
add
into
mov
inc
sbb
jnp
les
in
ss
pop
int3
faddp
jnp
bound
jae
js
outsl
icebp
into
imul
and
mov
dec
mov
stos
sub
add
or
adc
rcll
pop
mov
xchg
adcl
inc
loopne
repz
add
or
jns
out
daa
dec
xchg
push
xchg
ret
repz
out
xlat
dec
and
sahf
mov
insl
push
inc
outsb
mov
dec
ret
out
loopne
mov
push
sub
arpl
dec
aaa
shlb
sbb
xor
mov
jmp
sub
bound
pop
insb
add
mov
pusha
push
push
inc
xor
imul
push
daa
xor
test
xor
scas
test
or
insb
adc
lahf
pop
inc
push
test
scas
jecxz
dec
sbbb
push
sbb
sub
pop
cmp
xor
call
imul
test
rclb
xor
dec
fistpl
xor
cmovno
das
or
insl
insb
sub
cmp
adc
out
xor
rcrb
das
or
ja
or
insb
xor
ret
fiadds
pop
pop
nop
inc
pusha
and
sbb
push
push
jbe
fwait
dec
vandnps
lea
fistpll
and
push
adc
sub
mov
pop
pushf
pop
fwait
aad
mov
mov
orl
xorb
test
push
ja
mov
es
sub
mov
mov
push
sahf
push
cs
cmp
push
sbb
stos
negl
ret
out
es
add
adc
sahf
shlb
xchg
add
mov
out
mov
jns
xor
jae
repz
fs
dec
sub
into
xor
pop
pop
jmp
jecxz
pop
out
negl
dec
shlb
or
inc
or
xor
jle
js
xor
test
scas
inc
cmp
xchg
jnp
cmp
into
dec
or
inc
push
xlat
out
mov
ss
push
dec
mov
cmp
push
pop
incb
xor
adc
xor
movhps
outsb
jb
loop
loopne
sub
push
cmpsb
xchg
ja
data16
hlt
loope
outsb
sbbl
xchg
xor
lcall
arpl
sub
arpl
fs
cmp
mov
cmp
xchg
dec
dec
daa
divl
push
push
mov
cs
inc
packssdw
inc
out
mov
mov
push
es
ss
outsb
out
loope
out
push
push
xor
dec
jb
das
lock
dec
das
add
negl
jns
inc
pop
push
nop
xlat
fnsave
dec
cs
sahf
push
push
sahf
lret
push
push
div
push
insl
sub
push
insl
mov
fidivrs
insl
push
inc
ja,pn
xor
push
out
adc
jp
ds
outsl
mov
scas
jg
dec
das
xor
fisttps
jp
pop
ja
lock
outsl
pop
outsl
dec
xor
xchg
adcl
outsl
decb
in
subb
and
sbb
sub
lea
push
loop
push
push
push
mov
and
xlat
inc
mov
test
mov
fwait
mov
inc
iret
jnp
dec
cmp
jle
and
xor
jle
sub
add
mov
inc
inc
xor
negl
adc
imul
or
mov
test
divl
iret
mov
or
add
pop
mov
sti
mov
pusha
push
inc
inc
data16
xchg
lret
dec
insb
xorl
shlb
sbb
inc
inc
add
xchg
mov
imul
imul
xor
push
mov
xchg
out
popa
add
imul
mov
les
add
xchg
dec
daa
pop
popa
jge
xchg
sub
inc
inc
mov
fwait
adc
pop
push
jmp
test
out
sub
dec
outsb
cmp
adc
mov
shlb
stos
mov
ss
stos
xchg
pop
rolb
mov
fstpt
mov
outsl
popa
fs
outsl
pushf
mov
jmp
mov
adc
pop
rclb
mov
out
fiaddl
xor
sub
cmpsl
push
pop
push
push
or
xlat
in
push
and
mov
mov
add
dec
add
cmpsb
hlt
xchg
rolb
fs
addr16
out
lods
mov
loop
jle
jae
add
jp
add
cmc
mov
ja
pop
lds
jae
xor
inc
test
add
adc
pop
rolb
mov
push
fistpll
sbb
add
mov
in
addb
pop
cmp
jne
mov
repnz
xor
xorb
pop
pop
ja
xor
xor
push
push
push
or
inc
into
xor
test
mov
pop
repz
je
jae
add
adc
jae
xor
mov
fistpl
outsb
add
xchg
xchg
fistpl
iret
das
push
and
shrl
lock
mov
lahf
pushl
jnp
sahf
sub
sub
push
les
xor
push
push
subl
fisubl
push
mov
imul
movsl
fsubrs
bound
jbe
das
jne
stos
xor
adc
and
inc
mov
outsl
popa
fldt
or
adc
sub
push
mov
ret
xchg
add
imul
cs
xor
iret
mov
insl
sbb
ljmp
add
jns
imul
push
add
filds
mov
and
xchg
jae
ret
jae
daa
jbe
or
dec
cmpsb
ss
and
push
mov
xor
mov
mov
aaa
ss
add
mov
mov
mov
add
sub
dec
mov
ds
shrl
pop
cmc
adc
jle
sub
pop
rcl
push
lgs
testl
mov
ja
mov
inc
js
daa
xchg
aas
push
imul
xchg
packuswb
aaa
roll
outsl
dec
lahf
sub
push
pusha
mov
fildl
mov
scas
xchg
add
or
leave
data16
push
enter
mov
push
push
mov
adc
mov
dec
mov
add
adc
push
das
ss
and
mov
mov
push
jg
daa
sbb
ljmp
mov
mov
mov
std
lcall
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
lahf
in
cld
test
cmp
mov
cld
std
mov
sbb
mov
ds
pop
sbb
xor
mov
fnstcw
jo
fsubs
sbb
pop
ljmp
test
xor
dec
xchg
mov
mov
pop
adc
adc
pop
push
and
leave
scas
cmp
in
jnp
pop
icebp
or
imul
xor
rcrl
inc
push
cmpsl
xor
cmpsl
and
xchg
bound
push
or
jl
pop
and
jns
insb
pop
sub
pop
jb
cmp
mov
pop
jb
xor
push
cmp
inc
fmull
xor
outsl
dec
lock
or
inc
xor
xchg
pop
push
xor
incl
fisttpl
lea
jnp
dec
xchg
mov
sbb
scas
pop
jnp
pop
es
adc
mov
bound
cli
ss
cmp
sub
adc
or
push
push
inc
mov
inc
addl
adc
xor
test
inc
popa
inc
mov
rolb
ljmp
or
cmp
jne
cmp
popa
outsb
imul
mov
xchg
pop
sub
rolb
add
adc
jbe
sbb
cmp
dec
mov
rcrb
test
xlat
pusha
xorl
pop
sub
loopne
xlat
push
jo
lret
and
pop
dec
and
fisubrl
push
scas
mov
mov
cmp
or
jo
out
iret
or
mov
pop
xor
push
packuswb
xchg
das
mov
push
mov
xchg
mov
aas
inc
jne
mov
call
dec
or
xor
iret
dec
and
xlat
mov
pop
push
jl
xor
mov
sbb
sbb
mov
dec
repz
sti
mov
pop
xchg
push
inc
ret
aaa
push
push
inc
scas
je
add
jbe
dec
and
mov
dec
popa
mov
jp
push
xchg
cwtl
ss
pop
xor
dec
inc
arpl
xchg
add
sbb
add
mov
add
cli
push
stos
adcb
and
andb
push
fwait
mov
sub
outsb
pop
inc
mov
mov
test
and
push
lods
pop
mov
imul
insb
xchg
fcoml
mov
mov
insl
jle
add
push
push
es
int
dec
push
push
jae
insl
mov
out
jg
add
and
push
cmp
iret
jo
jbe
xchg
rorb
pusha
fcmovb
jae
stc
daa
aaa
mov
rorl
add
sti
push
and
mov
scas
shlb
iret
and
jl
push
xchg
xchg
int
jnp
pop
mov
jbe
mov
push
and
sub
divb
push
stc
sahf
int
fldcw
add
pop
mov
mov
sbb
in
enter
sbbl
mov
jp
dec
xchg
faddl
mov
xorb
jnp
repz
push
cs
pop
out
cmp
jo
inc
xchg
push
cmpsb
lahf
imulb
jmp
add
push
inc
inc
jl
aas
jl
xchg
nopl
inc
mov
sub
rclb
aaa
fisttpll
jnp
sbb
pop
inc
or
push
pop
jnp
sti
dec
xor
addb
sarl
push
and
push
cmp
jnp
out
sbbl
push
push
push
es
mov
iret
repz
js
xchg
pop
aad
adc
out
pop
fwait
out
mov
pop
mov
sahf
out
xor
test
jns
stc
xor
dec
jecxz
mov
push
xor
out
aaa
sbb
in
jns
mov
out
xchg
xor
iret
mov
cmpsl
ss
push
inc
out
cmp
pushf
sahf
addr16
lock
xor
jns
mov
addr16
push
sar
cmp
sahf
out
sahf
daa
inc
imul
ja
cmp
cwtl
xor
mov
lea
cli
mov
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
fcomps
imul
pop
mov
and
push
mov
add
idivb
imul
int3
push
and
pop
sbb
enter
cld
cmp
adc
or
adc
repnz
or
add
or
dec
pop
adc
or
pmulhuw
push
jmp
lret
data16
push
insb
es
clc
xlat
orb
inc
push
add
iret
leave
shlb
fimuls
mov
jp
xor
mov
jo
imul
insl
gs
cmp
dec
xchg
jne
out
daa
imul
adc
dec
xchg
pop
xchg
mov
mov
dec
imul
sbb
sub
and
mov
notl
or
and
lea
in
push
popa
je
add
inc
addl
adc
xchg
cmp
ja
mov
fidivrs
push
ficoml
cs
sub
mov
lcall
stos
es
push
test
sub
dec
daa
mov
inc
ljmp
lahf
lods
cwtl
mov
mov
cmp
inc
pop
addr16
mov
cs
mov
adc
or
outsl
xlat
xlat
dec
mov
push
mov
inc
dec
xchg
mov
mov
xchg
inc
jecxz
xor
insl
xchg
lret
inc
or
in
scas
dec
xchg
imul
ficoml
cmpsl
fadds
addr16
fs
push
jb
rcr
cmp
xlat
xor
pop
aaa
sub
into
mov
data16
mov
add
jae
ja
fldt
mov
outsl
dec
fildll
inc
fs
jo
xor
test
or
aaa
sbb
outsb
push
jnp
jnp
mov
xor
xchg
loop
test
add
cmpsb
dec
push
lahf
inc
or
mov
sub
addr16
add
imul
fsubrl
mov
lods
xchg
cmp
inc
mov
lret
shlb
add
iret
scas
mov
addb
inc
jmp
fildll
inc
out
inc
dec
loopne
cmpsl
inc
xlat
and
insl
add
adcl
jne
popf
mov
pop
addr16
pop
rcrl
pop
sub
testb
push
inc
dec
imul
sub
adc
jp
out
ja
jo
sbb
das
aas
jg
adc
push
xor
sub
inc
mov
andl
pusha
sahf
daa
mov
insl
sbb
imul
dec
popf
add
addr16
lods
pop
insb
insl
das
testl
scas
addr16
add
pand
das
pusha
or
pop
sbb
rcl
insl
jg
das
xorl
pop
setbe
push
xor
inc
jecxz
add
inc
jecxz
add
adc
mov
arpl
out
jbe
inc
xchg
adc
mov
out
pop
les
cmp
mov
loopne
push
sub
aas
push
sbb
fiaddl
pusha
push
lahf
ljmp
aas
add
pusha
push
arpl
xor
fcmovbe
adc
dec
repz
inc
sub
pusha
pop
push
subl
add
pop
pop
push
pop
add
outsl
jmp
or
mov
dec
mov
and
ficompl
mov
mov
cmpsb
inc
inc
push
inc
xchg
sbb
cs
sub
push
pop
push
pop
out
inc
cmp
cli
jmp
out
rclb
pop
jnp
dec
inc
scas
cmpps
rolb
and
mov
shll
mov
inc
push
pop
inc
inc
ss
mov
lahf
lock
mov
push
jbe
scas
mov
mov
cmpsl
or
cmp
xlat
mov
js
jg
xchg
add
jmp
jl
inc
scas
pop
pop
inc
hlt
ss
adc
add
jg
iret
pushf
lock
enter
das
adc
nop
cmp
jmp
lret
or
sbb
jbe
cmp
insb
je
add
addr16
jo
jo
jae
daa
pop
jno
outsl
xor
push
sbb
fadds
in
aas
and
adc
jne
or
jo
push
pop
jmp
les
fstl
dec
out
mov
ret
ret
jae
push
sbb
mov
dec
aas
inc
mov
mov
popf
js
push
punpckhwd
arpl
dec
outsb
push
addb
sub
sbb
pop
das
pop
inc
sti
inc
ret
adc
xorb
das
inc
fimull
into
push
outsl
testl
cmpsl
pop
adc
lock
bound
cmp
dec
add
mov
mov
push
enter
jmp
loop
and
into
dec
cmpsb
stos
mov
push
mov
pop
dec
push
mov
cmpsl
pop
aaa
inc
inc
and
fbstp
jge
aad
add
mov
add
push
add
aam
add
jb
iret
adc
inc
add
arpl
dec
add
xlat
popf
insl
pop
sar
out
inc
outsl
outsb
or
aaa
inc
insb
movsl
ljmp
add
lahf
push
loop
or
sbb
pop
cmpsb
jb
or
ss
ds
mov
push
pop
add
push
pop
jns
out
aam
inc
push
dec
inc
dec
push
xchg
add
and
call
mov
out
sbb
sub
movl
and
push
dec
into
add
mov
and
mov
and
dec
cmp
adc
mov
in
and
ds
das
sbb
sarl
adc
daa
cmp
sub
push
pop
inc
inc
inc
push
inc
pop
add
ja
and
or
aas
js
insb
cwtl
ja
mov
lahf
sbb
push
and
inc
and
outsb
push
les
and
pop
fcomps
push
mov
pop
gs
or
push
sbb
or
popw
push
sbb
and
lock
mov
adc
xchg
add
push
scas
mov
mov
mov
add
jns
lea
outsb
je
bound
out
push
jno
mov
mov
jnp
mov
mov
loopne
cwtl
push
xchg
sbb
scas
adc
fcomp
mov
add
mov
push
inc
scas
cmpsb
sub
icebp
sahf
in
push
pop
xchg
add
jl
sbb
add
es
aaa
cmpb
add
or
bound
clc
cmpsl
push
daa
push
pop
sbb
iret
jnp
pop
ss
sub
dec
into
mov
es
pop
mov
or
fwait
testl
xlat
jb
ficoms
cmp
push
pop
adc
outsl
xor
add
arpl
popa
ss
out
je
and
and
arpl
cwtl
sub
je
insb
jns
jbe
loop
mov
xchg
and
shll
popa
stos
mov
inc
fisubl
dec
cs
and
clc
and
xor
and
sarb
mov
loop
dec
inc
outsb
shlb
and
push
push
std
mov
or
outsl
fs
gs
jo
jns
pop
mov
mov
popf
or
pop
outsl
insl
jne
movsl
pop
sbbl
pop
stos
sbb
or
addr16
mov
out
push
inc
je
fiaddl
gs
inc
insb
movups
mov
lock
inc
popa
imul
lea
sbb
outsl
jo
or
iret
adc
gs
mov
fucomip
xchg
inc
or
inc
xadd
sbb
in
fcomip
inc
cmovo
fstpt
idivb
cmp
nop
jo
maxps
pavgb
inc
dec
mov
xor
cwtl
or
pandn
add
xorb
in
dec
ja
add
push
sbbb
lea
push
mov
cmp
xor
push
jns
inc
es
add
add
fdivs
inc
add
repnz
pop
xchg
dec
aaa
mov
or
pop
push
mov
mov
add
fwait
mov
daa
xchg
iret
arpl
mov
mov
outsl
clc
push
xchg
xor
jns
addr16
xor
in
addr16
scas
fists
push
jne,pn
lock
pop
xchg
adc
add
mov
pop
cmpb
jbe
xchg
in
xor
enter
movsb
or
add
or
xchg
add
ret
aad
xlat
xchg
cmpsl
add
pop
call
lds
xchg
int
adc
test
mov
inc
fdivs
cwtl
fidivrl
hlt
mov
xchg
mov
in
pop
repnz
fdivs
xchg
cwtl
inc
dec
js
sub
movsb
jl
leave
jae
mov
add
xchg
mov
out
mov
ds
andb
xchg
add
adc
sahf
ja
cltd
and
sub
inc
cltd
mov
or
outsl
xchg
xor
daa
mov
es
ds
pop
daa
push
pop
repnz
mov
rclb
or
sahf
cmpsl
fwait
cwtl
lcall
pusha
ret
dec
add
mov
push
int3
mov
loopne
aas
lcall
mov
and
scas
jbe
pop
or
enter
arpl
test
push
adc
fimuls
cltd
pusha
cld
cwtl
inc
inc
mov
popf
or
pusha
inc
sbb
adc
jl
mov
sub
nop
xchg
add
fstl
pusha
lahf
ja
in
loopne
clc
aas
fstps
loopne
pushf
sub
fimuls
pushf
cmp
inc
aas
sbb
mov
push
and
xchg
mov
xchg
outsl
daa
aam
orb
fs
pusha
mov
enter
popf
adc
push
and
adc
sub
xlat
dec
mov
inc
fidivs
test
mov
test
push
pop
popf
faddl
in
mov
inc
fdivs
int3
testb
rcrb
cmp
mov
inc
shlb
in
nop
out
add
jl
test
dec
lahf
insb
enter
xor
int3
fcoml
jb
pop
xor
pusha
mov
inc
ss
or
mov
add
pusha
ja
mov
iret
test
insb
jl
enter
pop
mov
lods
mov
enter
xor
cld
pop
mov
and
add
fwait
jg
cmpsl
pusha
rcr
out
rclb
and
sub
movsb
mov
enter
jns
in
movsb
pusha
clc
cs
or
sbb
inc
clc
mov
or
mov
movsl
and
mov
jns
in
mov
lods
pusha
test
mov
fstpt
and
in
hlt
mov
lods
add
add
jns
testb
jle
cmpsl
pop
insb
dec
mov
in
push
cmpsl
jg
enter
dec
pushf
lods
inc
cs
mov
test
lock
ja
pop
lock
iret
xchg
cmpsl
push
fs
mov
das
ja
enter
out
movsb
mov
jns
in
xchg
clc
in
and
clc
out
les
jbe
outsl
leave
jae
lahf
movsb
inc
push
dec
out
xchg
pusha
lahf
ja
push
cs
nop
test
inc
test
movsb
test
movsb
in
clc
subps
add
push
add
or
movsl
sub
xchg
xchg
pusha
xchg
push
cmpsl
jg
jmp
jl
mov
addr16
cmpsl
jl
push
repnz
sahf
adc
iret
hlt
in
pop
push
push
cmpsl
shr
test
cmpsb
and
xor
dec
dec
xor
addr16
cmpsl
jg
lds
insl
cmpsl
insb
js
cmpsb
or
cwtl
lahf
insb
out
iret
add
enter
jae
in
out
add
enter
sub
mov
inc
aas
push
or
shll
lcall
inc
cs
movsl
push
cmpsl
jo
mov
aam
nop
or
aas
push
cmpsl
out
test
test
push
cmp
loop
lahf
nop
aas
ja
inc
sahf
pop
lahf
shrb
add
ja
js
lock
xorb
add
mov
inc
ljmp
js
insl
or
dec
pop
rorl
insb
push
adcb
xchg
and
pop
repnz
inc
js
rcrb
inc
mov
adc
test
stos
adc
and
inc
pusha
mov
sbb
mov
int3
push
inc
sahf
dec
adc
int3
inc
ja
jns
dec
inc
lock
rolb
mov
push
push
inc
mov
mov
push
mov
or
dec
add
mov
pop
insb
adc
mov
lahf
fcom
jg
outsb
pushf
inc
or
jo
and
add
in
inc
daa
cmp
mov
xchg
cs
rclb
int3
and
lcall
xlat
ja
mov
daa
nop
inc
lods
mov
xor
mov
test
pop
xor
sahf
pop
adc
xor
popf
or
test
xor
lods
inc
jo
and
push
pop
cmpsb
test
ss
dec
dec
jg
fisubrs
inc
sahf
cwtl
pop
nop
xchg
pusha
fbstp
mov
fsubr
cld
iret
enter
push
inc
fcomp
mov
pop
in
jbe
inc
scas
cmp
mov
and
popf
or
mov
ljmp
loope
mov
nop
orl
jl
inc
shlb
nop
push
mov
rorb
out
fs
and
testb
lahf
fs
nop
out
lahf
mov
mov
mov
inc
sahf
or
mov
out
test
mov
mov
push
xor
in
lahf
in
lahf
sahf
or
movsb
adc
or
jnp
dec
lahf
pusha
cmp
repnz
inc
mov
shlb
pop
enter
ficompl
sbb
sbb
mov
outsl
test
dec
jbe
pop
insb
andb
mov
jp
pop
cwtl
aas
and
inc
xor
mov
outsb
daa
sahf
mov
inc
add
enter
xchg
rol
ja
and
xor
xor
movsl
sbb
imul
nop
iret
bound
sub
xchg
add
lcall
enterw
insl
add
sub
mov
aad
fidivs
addr16
or
pop
daa
mov
mov
lods
js
adc
xchg
decl
subb
addr16
insb
imul
mov
daa
jmp
pushl
out
push
mov
dec
mov
adc
cwtl
inc
pop
mov
insb
pop
inc
loopne
fisubrl
push
cs
dec
movsb
pop
data16
mov
cmp
xlat
movsb
ss
inc
adcb
pop
xchg
adc
mov
mov
add
mov
addr16
adc
addb
lahf
int
ja
ja
daa
scas
clc
mov
jb
xchg
push
dec
inc
inc
and
xor
and
sub
and
aaa
xor
scas
push
mov
mov
cmp
sbb
jnp
out
es
cwtl
ss
iret
out
aam
sub
adc
sahf
out
mov
xchg
cmp
fidivrs
sahf
mov
jge
mov
enter
iret
out
cmp
mov
pushf
rcr
lock
fsubs
mov
or
inc
lock
mov
stc
pop
scas
loopne
xchg
inc
leave
xorb
add
sub
dec
add
in
add
add
add
pop
jo
add
enter
fsubrl
jo
fistpll
andb
jg
aad
ja
pushl
hlt
jg
adc
in
pusha
xchg
dec
and
enter
aaa
outsl
enter
cmp
add
pmulhuw
lods
dec
in
inc
outsw
add
inc
loop
mov
mov
mov
outsl
add
or
fistpll
enter
pushf
outsl
cmp
ss
adc
mov
adc
add
mov
fsubrs
and
xor
dec
cmp
xor
inc
lods
out
lods
aas
aaa
ljmp
fs
lods
je
mov
add
scas
add
nop
mov
seto
xor
in
mov
cltd
sub
je
nop
sub
sub
sub
push
mov
ret
fsubl
dec
js
mov
xor
ja
cmp
push
xor
out
lahf
mov
add
jle
sub
dec
out
pop
stos
popf
mov
and
jle
sub
add
out
ja
int3
add
fcomp
outsl
add
and
outsl
and
jnp
cmp
test
aaa
in
mov
push
jbe
push
scas
add
outsb
xchg
out
and
nop
out
dec
sub
pop
insb
jne
jbe
pop
call
xor
xchg
mov
mov
adc
dec
and
outsl
mov
incl
pop
fs
pop
leave
mov
ss
es
sbb
and
pop
mov
rcr
push
fdivp
push
call
push
dec
push
inc
push
adc
scas
clc
repnz
dec
cmp
add
mov
xchg
cmpsb
cmp
lds
orl
daa
nop
ja
divl
cmp
rolb
push
and
add
push
fistpll
out
rcrl
es
ds
or
push
ret
mov
lds
rolb
sub
or
lock
fmuls
punpckldq
cmpl
daa
cwtl
scas
js
rcr
and
shr
xchg
or
ret
add
dec
mov
test
daa
xlat
or
xlat
mov
push
nop
dec
dec
or
inc
push
mov
dec
adc
or
ret
ret
add
inc
fisttpl
and
ss
add
stc
dec
and
jo
pusha
scas
ret
jo
clc
test
addl
mov
push
repnz
adc
jbe
push
rcl
push
addr16
aaa
aad
push
shrb
outsl
enter
pusha
cmpsb
mov
les
fisttps
scas
add
dec
and
push
mov
pop
xchg
mov
mov
or
mov
add
lds
push
cmp
mov
dec
sub
lcall
testl
imull
scas
mov
fists
js
aad
int3
pop
clc
pop
ret
ja
or
aaa
push
cmp
sbb
movsl
nop
imul
aaa
cmp
adcb
push
movsb
xchg
add
jo
mov
pushfw
xlat
addr16
nop
and
popa
lahf
iret
test
pop
shlb
sub
sub
jnp
or
pop
mov
cmp
jbe
push
fs
enter
adc
fdivp
dec
sub
fadds
push
mov
mov
movl
aaa
or
cmp
fbld
add
movsb
xchg
int3
rclb
outsl
add
test
pop
or
movsb
and
adcb
or
xchg
add
mov
mov
fwait
mov
pop
leave
insb
jo
dec
pop
scas
add
cmp
mov
lock
push
adc
out
nop
bound
inc
pop
addr16
pop
roll
inc
rorb
out
dec
scas
ss
or
add
roll
lret
sbb
lret
dec
aas
das
arpl
arpl
adc
mov
mov
mov
addr16
xchg
icebp
dec
lret
les
shll
lahf
fs
and
dec
add
adc
fs
test
fisttpll
pusha
mov
jb
aaa
test
test
lahf
mov
pop
enter
nop
fstps
mov
inc
cs
or
fdivs
int3
inc
push
and
xchg
inc
ja
cltd
mov
xchg
hlt
call
insb
dec
sbb
js
mov
call
push
jns
data16
std
pop
subb
repz
repz
int
jns
out
outsb
sub
sahf
iret
sarl
out
outsl
cmp
out
repz
ljmp
stc
cmp
jp
cld
sub
jns
mov
data16
repz
cld
dec
jae
je
ds
repz
mov
ljmp
sar
adc
pop
jns
iret
repz
sbb
jl
out
loop
js
mov
add
lea
iret
repz
cld
sbb
aaa
repz
out
jg
in
sbb
repz
dec
push
mov
jl
repz
mov
sahf
out
add
dec
insb
xchg
out
out
mov
push
xchg
sarl
frstor
sahf
out
ds
adcb
dec
repz
inc
test
sbb
dec
subl
iret
sarl
outsb
mov
jl
cmpsl
test
repz
out
mov
add
lcall
mov
loopne
mov
jb
hlt
int
imul
dec
mov
push
mov
nop
fistpll
cmpsl
je
loopne
xchg
push
sbb
xlat
inc
xchg
jp
lcall
mov
jns
nop
out
dec
xchg
and
add
je
cmpsl
stc
sub
iret
repz
pop
es
jl
and
jns
mov
jns
iret
repz
incb
insb
mov
cmp
repz
sahf
outsb
xchg
mov
lahf
repz
cmpsl
pop
mov
mov
lahf
out
mov
rcl
jl
out
mov
xchg
out
lcall
lods
out
cmp
adc
cmpsl
dec
repz
inc
mov
jbe
iret
repz
testl
jns
sub
out
out
stos
loop
lods
xchg
push
push
sarl
enter
bound
test
adc
outsl
stos
lahf
out
xor
mov
mov
xor
mov
lahf
repz
repz
cmc
popa
mov
push
jns
out
mov
jp
call
jnp
mov
mov
cmp
or
mov
pop
xchg
shlb
mov
stc
cmp
and
mov
mov
cmp
xor
iret
sarl
pop
mov
xor
cmp
out
insb
cmpsl
sub
pop
fnstcw
stc
push
ret
ja
idivb
fprem
mov
cltd
lret
int3
jl
sti
xor
pop
iret
outsb
inc
rolb
push
aam
je
dec
adc
mov
mov
nop
fsub
fstp
push
iret
push
loopne
call
jecxz
out
mov
jo
adc
outsl
int3
add
pop
add
call
aam
mov
dec
shld
lret
aaa
sahf
add
push
in
int
add
xchg
pop
rorb
sub
pop
mov
out
addl
fimull
push
and
imul
sbb
and
mov
pop
mov
aas
je
incl
daa
ficoml
lahf
and
xchg
cld
jg
xor
jbe
aaa
aas
fwait
in
repz
inc
xor
ficompl
mov
adc
setg
popf
mov
pop
outsl
out
jecxz
cmp
jno
in
outsl
in
pop
cmp
push
imul
fildl
out
aas
add
mov
push
xlat
aas
add
mov
push
jle
daa
and
jmp
mov
inc
dec
enter
mov
add
sub
pop
daa
aas
inc
jl
fwait
cmp
mov
pushf
push
lcall
add
pusha
ss
aaa
movsb
mov
out
jbe
dec
mov
jb
jl
cmp
mov
popa
lahf
dec
aas
inc
dec
jb
xlat
dec
xlat
pop
xlat
insb
and
and
add
ja
and
push
lock
add
pop
push
jnp
add
idiv
cmp
scas
fcomps
sub
in
and
les
out
aaa
lock
xchg
jb
lods
iret
pop
pusha
addr16
inc
or
fdivrs
push
dec
outsl
push
sub
jo
lahf
add
aad
cmp
test
lods
daa
int3
jae
mov
test
flds
adc
sbb
ja
fxch
sahf
add
xchg
adc
addr16
cmp
fistps
je
in
xchg
jno
mov
dec
inc
mov
ret
add
call
es
add
xchg
cmp
pop
and
and
inc
lods
inc
enter
fdivrs
leave
add
jnp
xchg
and
and
and
push
jb
mov
add
je
test
pop
and
sub
sub
and
aam
push
repnz
jge
faddl
fmull
daa
sub
sbb
jb
outsl
pop
ja
sbbb
inc
rorl
testl
mov
mov
dec
sbb
iret
sub
daa
aam
mov
loop
adc
ret
in
push
ja
or
xor
cmpsl
or
scas
insb
jae
sbb
mov
pusha
and
and
xchg
push
push
rolb
pop
xchg
cmp
push
hlt
ficomps
shrl
add
je
enter
push
ret
add
add
add
cmpsb
icebp
push
mov
popa
pop
popa
and
dec
cs
addr16
push
cmpsl
pushf
mov
jb
sub
jle
pop
and
pop
cmpsb
aaa
stos
pop
test
fists
mov
std
pop
pop
mov
mov
dec
and
cmp
loopne
bound
jg
push
xlat
bound
xchg
and
push
xchg
mov
jl
push
fsts
add
xchg
xchg
push
lahf
jp
test
pushf
fsubrl
int3
cmpsl
aam
in
xchg
pushf
pushf
in
hlt
loope
fmul
outsb
daa
arpl
nopl
jmp
add
inc
mov
mov
bound
push
repnz
add
into
sahf
mov
out
xchg
sahf
add
xchg
and
pop
mov
cmp
aad
loopne
in
or
xor
push
loope
and
mov
push
sub
dec
xchg
add
add
xchg
adc
test
jb
rolb
fwait
outsl
loop
pushf
mov
dec
loop
daa
hlt
scas
push
mov
jecxz
jecxz
daa
dec
scas
leave
xchg
jl
add
adcl
das
cmp
adc
nopl
sub
and
sbb
add
add
xchg
pop
arpl
outsb
out
or
jb
push
or
cmpsl
loop
jb
mov
push
push
repnz
in
dec
or
in
or
daa
in
pop
or
cs
in
mov
je
cltd
push
inc
mov
push
scas
add
sbb
jg
daa
ss
or
ret
push
neg
sub
mov
pop
fists
clc
xlat
cmp
jbe
test
out
fbld
fmull
daa
out
cmp
in
sbb
and
test
xchg
or
daa
xchg
addr16
cmp
and
or
sbb
mov
cmp
push
daa
cmp
addr16
xchg
shlb
jbe
push
js
shlb
pop
or
mov
push
xchg
adc
call
dec
mov
daa
je
push
xchg
push
add
call
sbb
imul
shll
sub
ja
jmp
sbb
pop
imull
jb
pop
in
add
outsl
rorl
ja
mov
xchg
addr16
sub
inc
push
xchg
ljmp
daa
adc
dec
dec
ljmp
jecxz
push
jb
js
pop
jne
cmpsl
ljmp
mov
and
xchg
jae
pop
jmp
in
insb
fsubr
daa
and
dec
scas
push
mov
or
emms
addr16
fidivs
inc
push
push
cmpsl
mov
movsb
jb
xchg
inc
mov
loop
out
in
pop
mov
movups
in
adc
imul
push
cmp
and
call
xchg
add
fsubp
inc
test
daa
sub
cli
stos
and
xchg
in
in
daa
call
xchg
pop
out
inc
pop
out
jb
sbb
test
sbb
out
icebp
add
add
xchg
and
pop
add
add
fs
pop
xor
pop
pop
sbb
addr16
and
mov
out
pop
mov
adc
out
test
insl
cmpsw
mov
pop
pop
add
inc
and
or
shrb
dec
dec
insl
js
adc
mov
in
xor
ljmp
and
push
outsb
sbb
mov
ret
mov
and
pop
and
clc
fisubrl
mov
lock
push
leave
dec
cs
pop
bound
add
fstp
xor
mov
dec
cs
in
and
adc
cmp
scas
aad
out
adc
sbb
inc
sub
xchg
jo
mov
and
enter
ja
cs
push
cmpsl
scas
filds
and
leave
hlt
shl
cmp
addr16
rcrl
xchg
xchg
mov
outsl
push
add
ja
pop
jg
fsubs
add
mov
jno
and
or
push
scas
popf
pop
loopne
addr16
in
aam
jb
push
adc
cmp
cmp
add
add
cmp
inc
push
dec
push
or
and
add
call
pop
add
or
inc
cli
das
hlt
test
in
test
fcomip
xchg
hlt
pop
add
lret
btc
add
roll
fiadds
stc
jb
enter
add
pop
ljmp
and
lock
mov
cmc
fs
sub
cmp
aas
jae
imull
inc
push
push
xchg
add
mov
add
cltd
fs
cmc
cmc
cmc
int
je
roll
pandn
mov
mov
out
movsb
sub
push
pop
cmp
cs
xchg
add
test
mov
outsl
cmp
lcall
das
dec
ja
jnp
add
or
cmp
fbstp
or
je
adc
or
xor
lock
adc
idivl
jbe
jbe
mov
fidivl
in
out
add
leave
clc
or
push
sub
ja
xor
push
jo
jbe
daa
pop
leave
adc
mov
xchg
xchg
add
enter
stos
ja
push
pop
daa
ja
add
popf
pop
and
dec
out
ja
cmpsb
ljmp
pop
stc
xchg
ss
add
lds
iret
mov
addr16
sbb
outsl
js
push
or
adc
sbb
rorb
cmpsl
push
fimuls
je
cmpsb
push
outsl
mov
push
ja
add
and
inc
fisubrs
js
jg
pop
rolb
fildl
daa
and
add
cld
jo
mov
outsl
jns
push
adc
mov
ds
inc
sahf
int3
pop
dec
push
push
pop
push
stos
xchg
daa
and
adc
dec
adc
mov
mov
xor
addr16
push
pop
mov
mov
dec
pop
push
es
add
sbb
aam
pop
sbb
sbbl
mov
xchg
add
das
or
cld
sbb
cmp
jecxz
add
shll
ss
mov
cld
push
cmp
out
xor
insb
lahf
testl
in
add
sar
jnp
xchg
dec
inc
test
mov
push
repnz
push
sti
adc
test
pop
pinsrw
daa
xchg
movl
adc
std
std
int3
sbbl
daa
in
pop
push
add
addr16
and
xchg
pop
mov
ljmp
cmp
and
cvtps2pd
jl
jl
mov
mov
jl
fsts
popf
movsl
add
jmp
mov
mov
and
dec
sbb
cmpsl
jl
xchg
adc
lcall
js
jg
jge,pt
push
pop
enter
add
add
ja
daa
cmp
leave
jg
aas
jge
mov
xlat
mov
dec
addr16
pop
in
push
add
out
sti
out
jle
in
xchg
mov
movups
sbb
sub
aaa
push
inc
or
cmp
shrl
push
nop
mov
orb
or
insl
xchg
xchg
xchg
xchg
xchg
rcr
ljmp
aas
jg
sbb
mov
add
pusha
mul
push
pop
add
push
jg
xchg
and
jg
jg
jg
xor
mov
mov
lods
inc
pop
dec
ds
dec
filds
push
add
ja
xor
outsw
mov
adcb
add
push
add
ljmp
mov
mov
pop
jb
mov
in
add
inc
add
mov
push
pop
push
cs
es
incl
mov
imul
jno
jns
addl
or
test
rorl
push
rcr
adc
xchg
and
jmp
stc
adc
addb
or
adc
aaa
cs
dec
sbb
andb
cmp
push
insb
das
xorb
repnz
cltd
cmp
push
add
and
fldl
push
add
int3
sahf
rcrl
and
cvttps2pi
in
push
pushf
aaa
pop
add
inc
mov
add
cmp
mov
add
fildl
add
fidivrl
mov
jbe
cmp
pop
test
cmp
jle
mov
in
mov
pinsrw
fs
aam
or
fmull
iret
inc
push
sbb
or
jne
addr16
hlt
cmovg
add
cmpsl
psrld
mov
xor
push
sti
es
ret
adc
add
or
or
mov
inc
enter
dec
xchg
dec
pop
and
pop
add
flds
xlat
test
add
jnp
cwtl
test
or
or
leave
add
rclb
mov
push
or
aas
pop
clc
daa
sbb
jg
jne
lahf
ja
sbb
addb
or
cmp
mov
or
in
shll
outsl
mov
fucomi
into
pop
in
sbb
addr16
pushl
incl
enter
lea
pop
xchg
xchg
add
cmp
inc
decl
and
orb
cmp
test
out
mov
add
int3
push
faddl
in
or
pusha
in
cli
or
or
das
xchg
sbb
jb
xchg
xchg
adcl
xchg
in
xchg
or
and
or
andb
sub
xor
mov
mov
stc
sahf
jne
out
and
cmpsl
add
add
add
fsubl
adc
pop
push
jo
xor
cmp
leave
je
dec
test
push
call
movsl
adc
xor
lods
add
jo
push
out
hlt
or
add
jg
adc
fwait
inc
decl
fmull
sbb
or
inc
xor
cmpsl
sti
push
push
jg
dec
add
mov
jno
pop
mov
lock
lods
mov
mov
bsr
add
addr16
es
in
or
inc
shrb
sbb
adc
jb
and
dec
inc
push
push
pop
add
mov
add
clts
fsubs
cmp
sub
pushf
pop
and
fucom
add
cwtl
int3
paddsw
xlat
in
clc
outsl
clc
pop
mov
bound
push
testl
outsb
lldt
push
push
in
cmpsl
fsubl
cld
punpcklbw
in
add
push
maxps
dec
mov
mov
mov
cwtl
add
in
test
mov
pmullw
out
popf
mov
push
in
add
std
outsb
and
popf
jl
dec
dec
aad
mov
lahf
adc
iret
xchg
cwtl
mov
push
push
add
ror
add
ds
js
and
jmp
xchg
xchg
out
in
test
add
out
divb
push
enter
lea
jne
lea
das
xor
shlb
leave
inc
cmp
fwait
and
xchg
cwtl
pushf
pop
iret
xlat
loopne
outsb
lcall
pop
mov
push
xor
mov
adc
pop
and
pop
mov
pop
pop
and
je
iret
and
and
xlat
add
out
pushf
dec
inc
mov
popl
mov
mov
sub
xchg
add
mov
ja
es
cltd
movq
dec
fimull
cmp
inc
dec
daa
push
add
pop
xor
popf
cld
cmpsl
das
nop
pop
rcrb
xor
inc
xor
jo
adc
lret
mov
enter
push
cmpsb
mov
mov
fs
rorb
xor
jb
or
repz
incb
pushf
cmp
or
push
adc
pop
leave
lret
sub
in
adc
addr16
pop
add
push
add
enter
jge
pop
lea
es
add
jg
daa
insl
shlb
scas
icebp
fnstcw
loope
jmp
insb
pop
push
inc
out
xchg
enter
inc
add
pop
add
mulb
fs
add
sbb
jb
or
mov
mov
pop
sub
movl
push
mov
prefetch
sbb
nop
push
dec
in
and
test
daa
mov
fisttpl
add
stos
mov
fsts
pop
pop
fimull
lea
mov
dec
lock
and
lret
notl
dec
jl
divps
in
leave
enter
add
add
leave
xchg
cmp
inc
xor
dec
lock
add
in
and
jbe
outsl
push
aas
hlt
add
les
mulb
das
add
mov
aas
cmpsl
xchg
inc
xchg
jb
push
add
leave
dec
ja
jp
xchg
inc
cmp
sub
rclb
push
fmuls
add
lock
pop
xchg
add
or
fisttpll
add
xchg
sub
mov
push
cmp
inc
dec
xchg
add
les
ja
in
jb
add
adc
mov
xchg
mov
add
mov
in
adc
popa
jb
notl
xchg
sbb
jb
push
daa
das
aaa
aas
xchg
in
and
daa
in
loope
mov
xchg
xchg
daa
xchg
push
lcall
and
lds
mov
push
lock
cltd
push
lcall
dec
rcrb
jbe
xor
xchg
dec
in
jbe
ja
outsb
add
leave
dec
xchg
addr16
add
xchg
mov
pop
leave
mov
aaa
mov
leave
out
out
or
out
cltd
test
sbb
sbb
push
jg
sub
dec
dec
xor
cltd
inc
in
sub
sbb
jb
mov
mov
jb
mov
xchg
leave
dec
add
imul
decl
dec
into
setp
adc
and
xchg
lret
push
push
lcall
lcall
dec
mov
pop
lcall
ret
into
add
flds
in
inc
dec
xor
add
fwait
adc
fwait
cmp
and
or
pop
fwait
popa
xchg
daa
and
mov
dec
ror
xchg
add
mov
fsubrl
or
lds
inc
sbb
add
pushf
pop
push
adc
add
add
aas
add
inc
dec
pop
dec
push
or
pusha
mov
and
or
or
xchg
xchg
push
fwait
test
adc
leave
in
leave
ror
outsl
fsub
adc
leave
out
stc
pop
outsl
popf
add
jmp
and
aas
test
and
addr16
dec
cmp
and
popf
test
lea
rorb
pop
setne
roll
shlb
mov
popf
jecxz
jmp
and
cmp
ja
repz
add
in
fxch
add
push
pop
or
adc
bnd
jb
or
sub
xor
mov
aas
adc
dec
and
nop
xor
inc
ds
sahf
mov
mov
xorl
mov
add
pop
add
and
mov
pusha
daa
mov
ret
movsb
sub
xlat
mov
pop
cmp
inc
pop
inc
push
outsb
in
mov
push
push
or
leave
mov
lahf
jge
inc
mov
and
cs
dec
xchg
mov
lea
cmp
shr
mov
mov
sti
mov
and
and
in
testb
aas
add
cmp
jb
add
add
imul
addr16
and
fisubl
out
mov
sbb
data16
into
daa
mov
add
out
sub
or
fildll
mov
and
dec
aad
das
push
mov
xlat
shlb
seta
pop
cmp
jns
fs
insb
add
je
push
imul
push
mov
jnp
xor
mov
add
jmp
cmp
hlt
jmp
setb
lock
pop
test
push
fstpt
aaa
xchg
push
and
es
mov
shlb
in
mov
divb
inc
pop
mov
psrad
fs
test
add
lret
loopne
por
daa
and
testb
add
or
jb
enter
push
sub
mov
inc
adc
pop
adc
enter
adc
mov
jb
sbb
sbb
dec
dec
sbb
push
adc
adc
adc
dec
dec
dec
dec
adc
push
or
push
sub
add
add
mov
movsl
addl
push
mov
adc
add
add
in
and
sub
push
inc
sbb
sbb
repnz
daa
add
add
add
add
inc
xchg
movsb
dec
daa
daa
and
xor
insb
cmp
sub
daa
insl
lahf
jb
sbb
jb
jg
or
mov
js
add
movsb
xchg
dec
fisubl
in
divl
test
fbld
in
sub
xor
cmp
inc
add
and
jmp
cmp
jl
in
sbb
add
sub
mov
cld
hlt
ja
mov
cmpsb
pop
das
cmpsb
cmpsb
das
ja
pop
leave
dec
add
sub
sub
mov
bound
xchg
push
add
fs
popf
pop
mov
cmpxchg
cmpsb
jecxz
cmp
out
fcomps
loopne
sub
fwait
push
push
or
leave
enter
add
add
in
fs
sub
cmp
fs
inc
or
dec
or
or
cmp
cmp
or
aas
xchg
lret
jae
adc
pushf
adc
xchg
sahf
cmpsb
adc
adc
scas
out
sub
ja
daa
mov
cmpsl
roll
popf
jo
repnz
add
dec
pop
paddsw
push
jbe
sub
ljmp
cmp
mov
jb
leave
enter
arpl
xor
jae
or
movsb
or
fcomi
cmpsb
dec
and
sub
sub
push
push
stc
xchg
or
flds
mov
sbb
jmp
pusha
sbb
aas
loopne
das
test
scas
inc
hlt
ja
jne
xor
test
lea
mov
xchg
mov
orl
data16
push
or
pop
ja
stos
femms
mov
dec
mov
push
xchg
push
call
out
xor
decl
outsl
or
mov
addl
inc
mulb
xlat
cld
add
cli
sub
cs
xchg
test
mov
xor
add
xlat
repz
fldpi
bts
push
insl
rorb
dec
xor
push
inc
push
adc
add
inc
mov
dec
push
je
jle
xchg
and
add
add
fcmovne
sahf
sahf
aas
sahf
pop
sahf
or
jl
push
push
scas
or
add
xor
mov
xor
inc
jbe
icebp
daa
leave
xchg
adc
xor
lods
adc
sbb
leave
inc
jb
aas
pop
add
xchg
xchg
lret
movsb
scas
xchg
in
fisttpll
pop
mov
push
mov
enter
add
xlat
in
in
fucomip
icebp
sti
cmp
sbb
add
adc
cmp
iret
adc
dec
mov
lods
dec
lods
push
lods
pop
daa
insl
rorb
test
pop
lahf
xor
push
or
lds
lds
jns
and
mov
add
inc
inc
fimuls
or
scas
pop
or
leave
enter
or
sub
sysenter
adc
xor
scas
or
scas
xchg
mov
xchg
pop
mov
fdivrs
or
shrb
mov
filds
int3
in
add
jne
outsl
jo
pop
push
rol
dec
outsl
out
lods
scas
scas
or
daa
sbbb
leave
jmp
or
or
sti
xor
out
cld
mov
push
scas
adc
push
push
sbb
xchg
scas
cmp
dec
ja
rorb
inc
dec
push
cmpsl
push
jbe
mov
pop
jb
scas
loopne
pop
nop
ja
inc
jb
jbe
paddsb
leave
dec
in
mov
addr16
add
or
and
cmp
mov
pop
xchg
mov
lahf
aaa
jo
mov
mov
mov
lahf
lret
fiaddl
psrad
enter
add
jb
jb
add
add
mov
jb
mov
or
and
dec
or
sbb
and
xchg
xchg
push
pop
adc
mov
dec
lds
push
pop
cmp
imul
cmp
mov
dec
inc
dec
push
mov
or
mov
sarl
push
cmp
in
or
mov
pop
mov
add
fldln2
pop
pcmpgtb
mov
ds
popf
cmp
xchg
je
jg
test
cmp
das
sub
femms
cmp
dec
xor
adc
adc
adc
xchg
xchg
xchg
fisttpl
in
enter
mov
mov
les
bswap
push
and
divb
jnp
and
in
dec
hlt
es
jb
cld
push
sub
mov
inc
mov
sbb
and
dec
sub
leave
enter
das
cmp
movups
xor
inc
nop
pop
popf
js
outsl
notl
push
popl
cmp
and
adc
pop
cmp
sbb
dec
mov
daa
inc
daa
mov
addr16
into
lahf
push
lahf
mov
xchg
xchg
dec
cmpsb
cmp
dec
jb
xchg
mov
cmp
insl
push
sbb
pushf
pushf
and
xor
mov
pushl
outsl
pop
divl
push
add
add
daa
and
or
mov
or
in
xchg
and
adc
adc
cmp
adc
push
enter
cmp
inc
sbb
sbb
jb
pop
sbb
insb
sbb
sbb
sbbb
pop
xchg
and
jb
enter
and
inc
mov
and
ljmp
sub
sub
repnz
push
daa
es
cmp
and
sbb
jb
push
and
pop
insb
push
xchg
and
je
jl
test
cmp
enter
sbb
mov
adc
lret
enter
or
xchg
out
out
mov
inc
cmp
cmp
dec
mov
movzwl
testl
push
jb
enter
push
popa
pop
outsb
or
mov
sub
push
mov
xchg
or
inc
mov
or
or
in
xchg
bswap
adc
adc
adc
sbb
call
adc
enter
pop
sbb
sbb
jb
sbb
sbb
push
sbb
bound
insb
pop
jns
outsb
mov
leave
orl
test
jbe
fisttpll
ret
out
into
sbb
mov
jb
pop
loope
jmp
xchg
das
inc
cld
adc
sbb
jb
adc
sbb
and
sub
xchg
and
xor
cmp
inc
or
jb
enter
or
insl
push
daa
inc
mov
add
and
and
scas
push
dec
in
jle
ds
aad
fisttpll
imull
add
sahf
std
pop
mov
or
and
in
xchg
and
adc
jbe
jb
adc
andnps
in
xor
pop
outsl
ja
jno
repnz
daa
xchg
lret
mov
pop
into
add
fcmove
xchg
and
add
add
ss
add
xchg
xchg
fcmovne
sub
das
cmp
xchg
xchg
xchg
dec
push
pop
arpl
mulb
adc
adc
xchg
fcmovne
in
xchg
setg
xchg
xchg
mov
iret
fs
xchg
xlat
fistps
sahf
xor
add
invd
push
and
jl
cmp
insl
push
add
popf
mov
inc
pop
dec
push
add
pop
popw
jo
and
inc
fimuls
orb
add
outsl
daa
mov
cwtl
push
pop
mov
popf
fmull
pop
mov
test
push
inc
pushf
cmp
scas
mov
add
add
add
leave
enter
pop
or
jns
jnp
jo
or
mov
push
and
sbb
setae
sahf
adc
lret
adc
loopne
mov
fmull
idivb
pop
pop
enter
and
sub
in
inc
dec
pop
pop
and
jns
outsl
jp
test
mov
pushf
pushf
pushf
fmull
rcr
call
repz
das
mov
xchg
inc
pop
xor
inc
sbb
mov
push
dec
add
arpl
xchg
and
imul
jge
outsl
xorl
mov
or
bswap
leave
leave
leave
mov
in
leave
out
adc
bound
jns
inc
pop
push
nop
xchg
xchg
out
dec
push
pop
adc
daa
sbb
jb
in
sbb
sub
dec
and
shlb
dec
dec
lcall
dec
dec
sahf
cmpsb
scas
dec
lcall
mov
cmp
testl
roll
rorl
sbb
xor
pop
pop
data16
dec
or
rcrl
repnz
or
or
jbe
pop
mov
mov
outsl
bswap
adc
fsts
mov
icebp
cld
cmpps
sbb
sbb
sbb
add
mov
pop
pop
pop
and
cmp
cmp
dec
lahf
ret
pop
iret
ret
arpl
jb
adc
and
aaa
sub
sub
pop
sub
arpl
outsb
das
jns
test
inc
into
mov
xor
mov
and
mov
sarl
ret
repnz
in
outsb
cmp
test
ret
cmp
sbb
cmp
aas
mov
enter
fiadds
inc
leave
enter
inc
les
inc
push
in
sbb
es
rdtsc
adc
add
add
pusha
inc
dec
pusha
cmp
das
dec
lahf
dec
sbb
xor
dec
test
sub
les
les
outsb
fists
cmpsb
add
mov
mov
xchg
xchg
mov
psraw
in
stc
cmp
in
add
adc
pop
push
movntps
dec
inc
mov
adc
push
dec
inc
mov
scas
push
push
dec
dec
mov
pop
xchg
lahf
rsm
popf
mov
pop
mov
sbb
cltd
mov
repnz
shufps
lcall
lret
lret
andl
push
pop
mov
jb
imul
pushf
cltd
movsb
add
scas
add
daa
and
add
or
icebp
or
enter
movl
sbb
in
sysexit
dec
inc
cmovnp
pop
jb
leave
enter
popa
adc
sbb
ja
sbbb
cwtl
sbb
inc
into
das
mov
pinsrw
dec
iret
pop
enter
pmulhw
push
enter
and
and
push
inc
into
into
fisubrs
daa
nopl
das
daa
sub
and
dec
cmp
daa
dec
push
xor
xor
pop
cwtl
sbb
enter
cmp
add
add
add
and
flds
das
lret
pusha
insl
aas
ljmp
or
and
cwtl
leave
test
mov
cmp
pop
inc
dec
add
and
pop
add
leave
xchg
and
cmpsl
or
fs
or
or
lea
jmp
jnp
enter
add
cmp
push
aas
sub
and
repnz
inc
sbb
xor
enter
push
jae
orb
and
daa
and
and
add
out
std
lahf
lret
cmpsb
cmpb
repz
adc
gs
sbb
dec
and
fmuls
push
dec
cmp
das
push
dec
add
fs
jns
sbb
pop
test
xchg
or
or
in
les
or
pop
ds
lret
push
sti
adc
or
cltd
cmp
push
sub
cltd
cmp
push
sbb
sbb
popf
mov
jne
sahf
push
dec
int3
dec
fiaddl
push
enter
sbb
jg
jmp
enter
stc
pop
int
push
or
leave
in
leave
or
or
sbb
or
in
push
xor
inc
bswap
fsts
push
pop
adc
addr16
outsl
jp
jg
lea
enter
sbb
cmp
lods
mov
enter
inc
mov
and
jmp
push
loopne
rorl
push
into
pushf
mov
lods
push
and
sbb
mov
dec
cmp
inc
into
sahf
mov
or
jno
jl
daa
addr16
xchg
xchg
or
popf
fs
xchg
push
adc
xor
leave
adc
fildll
ljmp
femms
sbb
sbb
sbb
iret
add
or
into
sahf
int3
fidivrs
cs
pop
cmp
dec
add
xchg
and
and
jo
shr
in
xchg
out
mov
push
push
and
mov
les
movsb
shlb
notl
daa
mov
sub
repnz
insl
in
test
bndstx
das
mov
mov
in
daa
leave
in
div
shlb
jnp
jnp
xchg
leave
enter
syscall
pushf
cmpsl
dec
sti
inc
in
or
push
enter
fcmovne
aas
enter
daa
addr16
fsubrp
das
hlt
psrlw
and
xchg
xchg
mov
pop
sub
aaa
inc
adc
dec
push
movsl
pop
mov
mov
sbb
fcompl
out
rolb
inc
repnz
pop
aas
rcrb
inc
pop
pop
arpl
outsb
jns
xchg
and
test
fcmovne
enter
mov
mov
das
in
leave
enter
sub
in
in
fs
xor
out
out
das
ss
in
xor
rorl
movlps
cmp
in
push
cmovo
pop
cmp
arpl
cltd
cmp
pop
test
lea
mov
jae
shll
sarl
push
mov
dec
inc
sahf
xchg
add
jns
popf
int3
cmpps
fimull
in
sahf
mov
or
push
adc
and
inc
push
sub
pop
xor
aas
outsb
daa
mov
dec
adc
push
bound
insl
dec
inc
into
fimuls
js
pop
sbbl
cltd
cmp
mov
mov
leave
push
mov
ljmp
pop
aad
dec
pop
add
dec
pop
pcmpgtw
jo
jnp
fsts
sub
cmc
in
insl
in
add
ud2
das
push
das
and
pop
in
insl
in
sub
xor
xchg
xor
leave
pushf
test
mov
mov
daa
aam
lahf
dec
iret
jns
jno
push
pop
gs
inc
push
js
xchg
xchg
inc
add
inc
into
add
add
sbb
or
xsaves
nopl
clc
mov
out
xlat
pop
or
push
xchg
shr
les
jnp
jb
adc
xchg
mov
pop
pop
cwtl
int
mov
daa
js
dec
jmp
mov
mov
or
pop
pop
mov
or
stos
xor
adc
inc
inc
inc
sahf
insb
daa
out
push
xorb
add
lret
xor
cs
inc
push
je
ljmp
pop
sub
add
add
imul
dec
aaa
xor
inc
divl
xlat
sub
push
das
div
cmp
rorl
add
add
cmp
or
or
or
es
or
or
mov
daa
in
jb
push
adc
and
in
in
push
addr16
das
push
xorps
mov
imull
push
and
dec
sahf
out
sbb
push
pop
sbbb
cmpb
test
cmp
pop
xchg
sub
jbe
fbld
sub
js
xlat
sbb
data16
cli
and
sbb
mov
adc
jmp
add
add
mov
nop
addb
or
ljmp
jns
mov
test
stos
nop
xchg
das
clc
test
add
add
movsb
add
pop
stc
enter
pop
movsl
sbbl
mov
fisubl
add
cltd
cmovo
pushl
mov
sbb
in
call
mov
xor
pop
ficompl
pop
enter
fisubrl
xor
fcomp
loopne
jb
jle
movsb
aaa
mov
xlat
hlt
cmp
repz
jo
push
fs
push
dec
inc
iret
repz
xor
and
adc
iret
repz
or
add
iret
repz
repz
push
clc
hlt
lock
cmp
int3
pop
repz
mov
jns
mov
jle
out
je
push
or
iret
jnp
outsl
push
dec
push
inc
cmp
out
cmp
repz
sbb
repnz
push
in
cmp
repz
les
pause
mov
out
sahf
push
inc
inc
sahf
out
xor
add
clc
jns
out
push
in
fmul
mov
jmp
push
push
mov
jl
hlt
ret
push
dec
add
dec
xchg
and
xchg
rcrl
les
cmpsl
vphaddudq
rolb
add
cmp
mov
mov
add
out
push
insb
sub
aas
sbb
and
sbb
add
pop
orb
ret
sub
or
xorb
icebp
incl
in
push
push
push
mov
xchg
fiadds
push
jbe
rolb
add
push
fs
loopne
inc
mov
inc
xor
xchg
mov
sbb
arpl
add
add
push
mov
pop
imulb
mov
mov
int3
iret
push
sub
sbb
pop
or
fidivs
xchg
insb
push
enter
pop
jl
adcl
or
add
out
xchg
es
std
inc
mov
testb
inc
mov
sbb
add
pop
imul
cmc
clc
or
jb
paddq
aas
xor
mov
cmp
mov
int3
or
addr16
les
mov
xchg
mov
movups
or
add
mov
repnz
clc
and
and
and
and
in
fdivs
clc
shr
pop
or
orb
inc
pop
mov
scas
rorl
cld
subb
inc
cmp
es
sbb
fistl
cmp
pop
jns
out
xchg
mov
das
lods
jnp
jo
enter
insl
add
repz
pop
ja
iret
mov
bnd
das
or
dec
enter
pop
pop
mov
daa
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
incl
xchg
inc
push
add
inc
stc
mov
adc
mov
in
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
std
lcall
subb
fwait
xchg
and
ret
xor
sti
aas
jno
or
mov
pop
fs
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
call
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
mov
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
std
jmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
xor
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
lret
std
orl
pop
ficomps
frstor
adc
cmp
js
inc
mov
sbbb
xlat
add
pop
repnz
push
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
fisubrl
cmp
mov
mov
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
cmp
pop
push
aas
dec
insb
imul
pop
add
cmp
adc
popa
mov
daa
add
dec
cwtl
add
ds
inc
dec
push
nop
push
dec
shr
jo
jb
push
inc
rorl
out
add
xor
gs
gs
pop
mov
and
inc
ds
arpl
adc
push
pop
sti
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
sub
and
xorb
aam
push
ja
mov
push
mov
add
pop
das
push
fs
or
sbb
aas
pusha
push
or
dec
dec
dec
inc
and
ret
inc
dec
daa
daa
and
imul
dec
jae
imul
xor
inc
jg
in
sbb
inc
inc
jns
dec
lahf
push
lcall
push
cmp
jmp
adc
data16
jns
add
inc
mov
int
jns
in
inc
movups
out
dec
push
dec
imul
orl
push
stos
sub
push
dec
test
push
mov
inc
adc
int
cmpsb
dec
inc
add
iret
push
xchg
inc
sub
outsb
arpl
test
push
shrb
dec
pop
jae
addb
mov
add
sub
ja
inc
xchg
push
cmp
loopne
shr
js
cli
dec
sub
push
ss
push
sub
dec
negl
push
testl
imul
pop
arpl
outsl
push
mov
jbe
lds
das
sbb
test
outsb
or
lock
push
push
and
gs
stos
and
sbb
inc
outsl
stos
push
pop
mov
push
push
adc
movsb
pop
cmpsl
pusha
out
ret
pop
jg
push
sub
outsl
xchg
andb
xchg
lock
int
inc
hlt
or
push
add
andb
insb
and
xchg
pop
ja
andb
ja
sbb
sub
pop
sbb
and
roll
stc
lahf
fsubrs
scas
movsl
cmpsb
shll
xchg
push
dec
scas
mov
adc
add
inc
dec
or
stos
pusha
mov
add
sarb
jg
pop
jb
add
loopne
mov
iret
aas
jmp
pushf
add
stos
mov
adc
cmp
cmpsl
push
aad
arpl
test
inc
xchg
dec
xchg
mov
dec
dec
lret
test
fmuls
inc
lods
xchg
jae
jge
mov
arpl
dec
outsl
pop
pusha
ja
mov
dec
push
stos
loopne
jle
push
jne
les
outsl
jo
lock
adc
imul
outsl
addb
aad
iret
fwait
mov
pop
les
pop
mov
adc
mov
push
movsb
out
jg
repz
add
push
cmp
repz
sti
cs
in
sarb
cmp
insb
push
sbb
xchg
test
or
gs
cmpsl
movsb
xor
jl
fs
jo
or
jae
push
and
jg
lahf
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
das
movsb
lods
aam
roll
shrb
jmp
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
ljmp
or
adc
stos
sbb
popa
sarl
fdivl
jno
add
aad
mov
mov
movsl
in
mov
xor
mov
stc
decl
xchg
sbb
push
sub
insb
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fistl
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ljmp
xchg
ja
int3
add
mov
das
es
lds
or
sub
pushl
ret
shlb
sbb
ret
es
pushf
mov
decl
ljmp
test
ss
jmp
addr16
jb
push
pop
orb
adc
mov
ljmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
pushl
ficompl
int
mov
mul
ja
outsl
ja
mov
out
cli
inc
pushl
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jmp
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
test
sbb
push
xchg
mov
mov
mov
test
push
ja
inc
jne
pop
jp
sar
push
imul
mov
push
insb
imul
cmp
pop
inc
jbe
push
jns
arpl
arpl
ja
mov
push
in
push
inc
insl
jns
fisttpl
cli
outsl
insl
addr16
sub
push
inc
xchg
fistl
jbe
push
mov
add
push
mov
xchg
push
pop
jl
dec
push
jge
jp
cmovns
clc
popa
xor
mov
jbe
or
inc
add
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
mov
push
dec
inc
ret
testb
add
shr
insb
add
jne
sbb
adcl
fs
rorl
imul
cltd
push
ss
jbe
arpl
or
test
aas
jne
fxch
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
xor
dec
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
add
lods
xchg
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
inc
aaa
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
sub
sti
mov
dec
jge
insl
imulb
adc
arpl
sub
xor
addr16
push
xchg
into
pop
jo
or
jge
inc
cmp
sub
sub
aaa
dec
sbb
cmc
cltd
dec
out
imul
add
adcb
subb
lcall
push
movsb
jo
push
mov
ss
xlat
test
mov
mov
sub
mov
inc
and
xor
adc
jo
lock
push
lahf
aas
push
outsl
outsl
push
sub
pusha
test
fcoms
inc
test
and
mov
pop
shl
inc
in
nop
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
movsl
sub
mov
jns
jne
xor
das
inc
and
test
pop
mov
sbb
mov
push
fsubrs
dec
add
or
bound
pop
dec
popl
imul
xor
popf
xor
ljmp
sub
cmpsb
add
testl
out
push
pusha
pusha
mov
test
imul
add
push
testb
and
jns
outsl
mov
add
or
add
sub
aaa
push
add
sbb
add
push
loop
inc
pop
in
cs
push
outsb
cwtl
add
test
aas
pop
mov
and
mov
addl
add
stos
or
adc
inc
adc
dec
and
ja
fisubrl
xor
cmp
mov
int
mov
addb
add
add
or
je
loopne
add
jne
mov
inc
dec
push
and
cs
sbb
mov
lods
loop
popa
incl
lea
in
lahf
jg
cld
bswap
mov
out
ud0
jmp
in
out
out
repnz
in
push
pusha
ljmp
lret
cli
add
mov
cld
push
imul
andb
es
add
dec
imul
xlat
sub
aam
cmp
add
pop
sti
xchg
int3
aam
sub
out
nopl
mov
add
sbb
add
prefetch
pop
xor
push
test
stos
or
mov
sbb
bound
push
loop
pop
and
push
pusha
push
add
adc
dec
loopne
add
cs
cmpb
lods
add
les
lods
add
loopne
and
jb,pn
dec
push
pushf
repnz
inc
inc
dec
lret
sti
adc
cs
mov
mov
in
dec
or
rcrb
jb
push
xlat
out
add
and
inc
repnz
xor
dec
sbbb
inc
pop
add
add
cmp
sbb
flds
adc
jmp
das
jle
movb
or
rcrb
mov
lea
push
or
or
adc
dec
jne
or
add
pop
mov
jp
hlt
mov
sub
or
sub
lcall
xlat
xorb
gs
add
rcrb
cltd
and
jne
jmp
mov
mov
ja
ret
rolb
mov
call
addb
inc
outsb
and
int3
loope
cmpsl
mov
jnp
mov
xchg
je
mov
mov
sub
pop
cmp
sahf
dec
push
hlt
jl
les
test
pusha
add
push
pop
dec
xor
movsl
cmp
sti
mov
adc
je
mov
sbb
out
mov
mov
sbb
push
movzbl
or
fbstp
fadds
fidivl
lods
call
imul
push
mov
mov
cmp
jbe
mov
pop
mov
popa
push
out
xchg
xchg
call
mov
pushf
inc
nop
test
pusha
add
pusha
arpl
xchg
inc
sub
push
cs
xchg
inc
dec
pop
push
adcb
loopne
jbe
cmp
std
inc
call
and
loopne
call
sbbb
push
add
outsb
and
and
jp
mov
clc
pushf
and
cmpsl
pop
mov
aad
or
out
insl
xor
push
inc
imul
add
adc
xchg
dec
dec
pop
xor
pusha
imul
hlt
and
lds
ret
mov
dec
and
mov
sub
push
sarl
sub
inc
adc
insl
sbb
loop
loopne
or
imul
clc
push
mov
sar
xor
inc
imul
or
mov
add
adc
mov
sub
push
push
leave
push
pushf
out
mov
or
mov
leave
push
xchg
mov
mov
fmull
pop
add
jmp
dec
or
push
mov
sub
test
cmpsl
pop
pusha
clc
xor
test
je
sahf
loopne
movsb
sbb
push
ret
sub
dec
pop
pop
and
sbb
pop
cltd
test
sahf
aas
cwtl
mov
lea
mov
xor
push
xchg
jge
aas
mov
mov
es
call
aam
je
inc
test
mov
in
jecxz
push
add
sbb
add
push
mov
jl
in
aam
lea
out
out
or
lds
sub
scas
lds
push
xor
mov
in
or
je
shrl
in
add
and
orb
xorb
adc
add
repnz
fldl
movsl
mov
xor
push
repnz
mulb
aas
sbb
ljmp
data16
jge
in
push
mov
adc
adc
xchg
icebp
jne
or
fcoml
and
test
add
sbb
inc
ljmp
dec
pushf
sbb
imul
pop
je
call
push
push
insb
add
sub
sub
lahf
push
imul
aam
mov
mov
and
adc
add
or
jne
add
jl
movsb
jb
xchg
sbb
dec
mov
push
sbb
enter
jp
sbb
ljmp
out
pop
push
mov
jp
push
or
subl
adc
xor
addr16
push
lahf
mov
sbb
test
ja
adcl
mov
rolb
call
test
rclb
int
ret
inc
pop
lcall
cmp
xor
ljmp
ret
inc
dec
pop
cmc
stos
add
aam
dec
shlb
mov
call
add
sub
dec
pop
mov
and
fiadds
sti
scas
add
sbb
andps
sbb
pop
lret
adc
loope
push
rorb
call
xchg
push
sbb
jmp
jo
mov
xchg
push
add
das
xchg
dec
aad
push
call
call
in
push
jne
xchg
fs
lret
lea
aaa
dec
sub
xor
xchg
cmpsb
dec
scas
cmp
orb
nop
hlt
dec
sbb
hlt
jmp
jnp
int
add
push
or
sbb
into
lock
pop
fs
imul
push
adc
call
movsb
mov
mov
lods
or
ja
pop
mov
xorb
jmp
xchg
xchg
sbb
dec
call
jnp
into
pop
in
dec
push
inc
inc
cmp
and
loopne
aad
xor
in
dec
imul
push
fs
sbb
sbb
push
je
cmp
fnstcw
fsubr
shl
or
jmp
ficoml
push
inc
push
xor
repz
sbb
movsb
sbb
cmpsb
mov
lea
push
pop
or
add
ret
sub
or
fcmovnbe
push
mov
pop
xlat
push
jecxz
inc
movzbl
adc
or
notl
adc
mov
inc
aam
push
pop
add
xchg
sbb
sub
movb
ja
fldcw
lds
lods
push
daa
mov
lahf
mov
movsl
popa
ret
gs
sbbl
adc
bound
or
cmc
subl
push
hlt
push
add
adc
cmp
xchg
cld
push
sti
xor
mov
dec
dec
or
mov
mov
add
push
cmp
jmp
add
xchg
push
xor
lods
push
lcall
jbe
in
in
push
add
ds
xlat
lock
sbb
push
sbb
sbb
sbb
pusha
loop
fdivr
mov
cmp
js
and
imul
push
push
dec
fdiv
xchg
adcb
loopne
loope
mov
xor
sbb
int3
call
mov
push
pop
cmp
fmull
sub
pop
inc
pop
jp
pop
addr16
orb
mov
and
add
inc
or
out
push
mov
fcompl
jb
call
dec
les
ds
mov
notl
je
xchg
xchg
push
xchg
test
in
adc
mov
push
adc
gs
jbe
cmp
mov
nop
add
ret
jmp
ss
or
mov
mov
je
sub
daa
shlb
imul
push
faddl
fiadds
out
out
repnz
sysenter
aad
fnstcw
cli
add
xlat
call
in
jl
fdivrp
xor
push
jno
sahf
xor
pop
loop
ss
or
sbb
add
es
out
mov
jecxz
pop
mov
and
jmp
sub
pop
ds
es
lret
xor
call
push
jge
mov
int3
or
mov
in
push
call
add
mov
dec
and
or
push
adc
leave
vmulsd
out
jne
lea
xlat
mov
add
add
mov
rep
push
sub
mov
sub
add
jecxz
je
ss
rcll
aas
mov
and
pop
and
cmp
jne
xchg
sbb
cmp
jne
or
scas
xchg
xchg
pop
pop
cmpsl
mov
mov
aam
push
push
pop
lahf
xchg
repnz
aad
shlb
or
sbb
mov
inc
mov
push
jp
lock
jb
dec
mov
ljmp
sbb
pop
push
pop
pop
add
or
popa
pop
sub
sti
mov
cmpb
xor
je
mov
mov
call
addl
push
dec
xchg
cmc
nop
movsb
pop
push
xor
ljmp
jb
adc
xchg
pushf
lea
push
ss
imul
into
rcl
divb
add
ret
lret
xor
jo
push
loopne
mov
cmpsl
cmp
mov
xor
aas
js
cmpsl
xor
mov
sbb
cmpsb
std
sub
adc
mov
enter
push
adc
push
push
or
insb
or
and
scas
push
leave
dec
adc
push
sbb
push
push
xchg
sbb
add
add
adc
call
inc
cmp
jle
jmp
pop
xor
push
adc
dec
decl
push
gs
in
pop
add
dec
in
in
imul
push
and
adc
outsb
adc
mov
jg
scas
adc
and
in
xor
sub
xor
mov
pop
or
and
sub
xchg
in
enter
les
dec
lds
push
shlb
pop
adc
nop
mov
ds
sbb
dec
dec
or
push
xchg
rcr
in
mov
fsub
jmp
mov
addb
cmp
xor
stos
repnz
mov
inc
inc
push
mov
mov
mov
in
mov
pop
xor
shl
aam
fsub
cmp
push
add
sarl
int
mov
lcall
mov
push
in
sbb
push
sbb
imul
popa
mov
in
mov
in
aas
mov
pop
fists
scas
aam
adc
out
adc
sbb
xor
jmp
sbb
jne
lods
mov
push
cmp
cmp
push
jbe
add
ret
inc
xor
xor
mov
dec
mov
xor
xor
jle
xchg
popa
xchg
cmpsb
adc
jmp
push
push
mov
out
fcomp
inc
test
push
jne
inc
enter
and
ret
data16
add
mov
and
jb
movswl
cmp
cmp
or
dec
in
mov
lods
lods
dec
xlat
push
push
mov
test
loop
lea
mov
push
jg
pop
mov
call
int
xchg
cwtl
add
push
pop
loop
in
dec
adc
or
and
cmp
int3
popf
xchg
lock
cmp
nop
adc
sbb
sub
clc
or
push
test
lods
adc
movl
pop
in
dec
mov
test
inc
pop
in
jne
cmpb
scas
jns
inc
adcb
or
push
icebp
or
pusha
ljmp
push
add
add
addb
hlt
loop
dec
push
sti
jno
dec
mov
mov
inc
addr16
jbe
clc
es
sbbb
cmp
mov
ss
inc
and
imul
inc
xchg
popa
inc
dec
pop
lahf
loopne
add
add
add
or
je
xor
fldl
leave
ret
sub
cmp
adc
or
loopne
add
outsb
fimull
sub
adc
lret
mov
insl
push
sub
ss
inc
lods
mov
pop
loopne
mov
lods
xchg
jle
daa
sub
or
jge
push
cld
xchg
ss
mov
cwtl
aaa
lret
les
popf
rorl
mov
int
nop
add
pushf
or
mov
mov
add
mov
les
jns
jne
sub
lods
jbe
or
mov
xor
mov
nop
push
add
outsb
orb
adc
mov
sahf
test
mov
cmp
jne
push
fnstsw
daa
cmp
adc
push
jge
mov
push
xchg
push
jbe
das
insl
inc
rolb
hlt
repnz
push
cmp
adc
dec
inc
pop
fucomi
xor
rcll
jbe
add
pushl
or
mov
inc
push
xor
enter
stos
std
std
iret
xchg
and
xor
pusha
adc
cmp
inc
sub
or
mov
shlb
mov
mov
sub
enter
movsb
repnz
loopne
or
push
push
push
push
jns
add
inc
adc
setb
pop
push
jo
cld
sub
repnz
sub
pop
dec
adc
std
stc
hlt
pop
mov
and
push
push
xor
sbbb
inc
ss
cmp
push
rorl
push
cmp
jge
jne
cmp
and
movl
sbb
pushl
or
push
mov
imul
push
sarb
push
sbb
fcoms
popf
test
xorb
lock
pop
add
add
fiadds
int
mov
add
adcl
xlat
jge
in
ret
dec
cmp
outsl
inc
jge
push
xor
mov
add
push
push
xchg
or
push
or
lea
add
sbb
push
inc
lcall
stos
daa
out
testl
pop
xchg
adc
shll
push
cmp
jne
rclb
mov
ret
mov
mov
aaa
inc
xor
cwtl
fisubrs
push
mov
push
call
int
pop
ds
or
xchg
jns
in
jbe
bound
mov
lea
jbe
cmp
push
sbb
lcall
push
mov
clc
push
or
enter
ret
and
jne
xor
je
std
jmp
and
xor
add
imul
or
mov
sahf
xor
mov
cmp
push
into
shlb
mov
popa
mov
and
mov
rol
imul
ljmp
sub
andl
test
or
out
push
rorb
and
in
test
xor
dec
sbb
add
or
mov
repnz
daa
dec
xor
adc
or
jne
mov
jmp
or
lods
shll
push
or
or
lahf
dec
out
addl
lret
add
or
mov
push
jae
mov
push
adcl
xchg
push
addb
inc
inc
push
add
ror
sbb
pop
aam
in
pop
loope
xchg
ljmp
sbb
push
call
out
mov
cmp
jo
xor
nop
add
call
cltd
cmpsb
aaa
cmp
fiaddl
mov
pop
aam
inc
mov
push
ret
push
mov
lea
or
cwtl
pop
ss
xchg
stos
push
fucomip
cmp
je
cmp
jbe
inc
and
xchg
jne
push
add
subb
add
nop
clc
push
and
std
or
shrl
jbe
jo
test
sbb
adc
inc
push
in
xchg
ds
rclb
add
hlt
lea
clc
test
inc
cmp
lods
and
xor
pushf
loop
or
outsb
es
inc
jmp
xor
imul
loop
fwait
add
or
test
mov
pop
fwait
adc
mov
mov
lcall
test
paddb
inc
fidivrl
jmp
push
pop
hlt
adc
mov
call
loop
push
sbb
cmp
jnp
adc
pop
mov
stos
in
pusha
mov
call
or
pop
inc
adc
je
xchg
add
add
and
lods
stos
loopne
sti
push
test
xchg
lock
lea
outsb
mov
dec
jle
test
inc
push
out
cmp
and
loop
popf
push
add
mov
push
lock
push
lea
mov
pop
xchg
push
xorb
loop
outsb
enter
jne
pushw
push
sub
push
frstor
aam
in
push
dec
push
fstpt
jecxz
pop
pop
popa
fsubrl
call
cmpsb
or
mov
stc
shlb
sahf
mov
xchg
add
scas
dec
mov
fwait
jae
js
push
push
dec
cltd
repnz
fiaddl
fdivs
add
ret
es
dec
mov
aam
fisttpl
mov
sahf
or
inc
dec
jae
imul
mov
ret
push
mulb
mov
jmp
pop
cltd
xorl
push
sub
sbb
or
jmp
movsb
add
or
mov
sub
lock
dec
push
hlt
inc
jnp
add
push
adc
insb
lret
xchg
adc
jne
clc
jns
add
and
cmp
stos
add
push
stos
mov
je
std
mov
fucomp
adc
and
add
ss
addb
dec
testb
orb
je
fisttps
dec
add
sbb
xlat
add
push
pop
cs
stos
mov
add
cmp
jmp
mov
jne
mov
push
imul
pop
addr16
mov
ss
sbb
sbb
sbb
jne
into
cmp
addr16
ss
lea
jne
push
sub
jno
pop
and
jae
je
int3
jecxz
aaa
mov
rorl
push
mov
cmp
nop
xor
add
adcl
test
rcrl
sbb
call
test
and
mov
mov
and
test
fldenv
push
setp
jecxz
xchg
push
pop
xchg
out
xchg
add
mov
aam
movsb
sbb
and
sub
pop
pop
jb
inc
lcall
loope
push
js
negb
lea
test
xor
fistpll
xor
fxtract
jmp
lahf
and
pop
xorb
movsb
inc
or
sbb
jne
mov
or
sbb
push
xchg
add
push
adc
add
cmp
and
jp
pop
mov
or
xchg
jne
add
mov
incb
call
in
movsb
jmp
js
push
cmp
sbb
mov
dec
or
dec
push
cwtl
jmp
sbbl
cmp
sbb
and
jbe
icebp
sub
or
mov
mov
and
rcrb
outsb
je
push
stc
sub
xor
inc
shl
inc
lret
out
push
or
sbb
add
jo
cmpsl
or
pop
cwtl
rorl
popf
pushf
or
cmp
test
sbb
mov
test
push
push
inc
loopne
jg
mov
fs
inc
mov
mov
inc
mov
aad
subl
pop
pusha
ja
cmp
jg
push
dec
lea
push
je
or
pop
gs
mov
orb
xor
sbb
mov
pushf
shll
xchg
jl
or
mov
cmp
sub
sti
push
fadds
dec
jne
movzbl
add
je
fcmovnb
push
add
movsb
nop
outsb
adc
jp
loopne
add
and
test
push
stos
incl
nop
sbb
sub
cwtl
shr
scas
insl
call
and
ret
in
cli
mov
push
cli
sub
sbb
mov
and
ja
fbld
cmp
inc
xor
sbb
jae
inc
pop
rorb
dec
sub
cmpsl
adc
cs
ss
out
push
jmp
push
and
adc
xor
loopne
or
mov
aas
adc
inc
dec
popa
call
and
inc
mov
dec
std
push
push
call
rorb
repz
mov
dec
aam
dec
aaa
and
mov
in
sbb
in
add
js
cmp
mov
je
sbb
dec
and
xchg
xchg
mov
aaa
ds
push
sbb
ljmp
js
ficoml
insl
jecxz
xchg
adc
pop
inc
xchg
push
push
xchg
fcmovb
inc
sbb
mov
sub
xchg
fiaddl
ret
push
adc
sbb
adcb
mov
xchg
cmp
fiaddl
ja
test
jnp
sbb
inc
adc
arpl
add
lds
push
pop
sbb
sbb
and
sbb
adc
xor
sbb
xchg
or
and
xchg
push
dec
sbb
jmp
rcrb
mov
and
popa
pusha
shl
rcll
inc
jo
addr16
call
cli
or
cli
mov
and
jp
jle
mov
mulb
mov
xor
sbb
adc
cmp
dec
fnstenv
aam
inc
adc
cmp
jl
std
iret
call
and
pop
dec
adc
int3
insl
inc
or
pop
xchg
hlt
jmpw
movsb
dec
pop
leave
adc
fstpl
das
jle
decl
fwait
mov
mov
or
pop
psubsb
mov
enter
scas
pop
inc
jb
fucompp
andb
fldt
pushl
cmp
jmp
dec
cmc
or
dec
pop
xchg
sbb
addb
ret
mov
xchg
addr16
shl
xor
je
push
mov
fcmovnb
into
cmp
xor
dec
xchg
cli
insb
fwait
dec
jmp
sub
inc
jmp
pop
xchg
mov
subl
and
and
imul
scas
mov
pop
xchg
sbb
repnz
dec
or
insb
or
adc
leave
test
or
cmc
lock
mov
enter
push
add
cmp
mov
dec
pop
ja
push
and
inc
fiadds
pop
push
shrl
and
push
push
pop
aad
es
cmpsb
add
add
push
and
add
cmp
repz
mov
les
shll
jae
shlb
push
push
lret
xchg
dec
addl
je
jle
iret
pop
fadd
jmp
or
and
mov
ficomps
cltd
and
lock
fwait
push
inc
and
js
shrb
int3
pop
outsl
push
push
xor
dec
and
imul
xor
push
push
push
sbb
rcll
dec
fistpl
scas
call
enter
outsl
pop
aaa
or
and
ljmp
call
int3
jns
cmp
in
inc
pop
or
sbb
aad
inc
ja
push
cmp
push
xchg
pop
rol
dec
push
addl
cmp
mov
push
fld
and
movl
test
out
addl
mov
test
nop
nop
popf
lret
nop
into
imull
jmp
ret
push
inc
test
inc
or
push
inc
mov
inc
fs
mov
cmp
pusha
nop
push
in
nop
je
mov
push
les
rclb
rclb
mov
or
push
sub
mov
adc
add
add
inc
sbb
jns
cmp
push
push
xor
inc
mov
data16
adc
daa
sbb
lock
daa
or
nop
add
and
dec
or
pop
inc
outsb
add
inc
push
ja
les
mov
or
iret
repz
ror
pusha
mov
imul
or
push
adc
inc
inc
out
inc
or
add
add
call
push
out
dec
push
dec
inc
out
sbb
dec
adc
in
inc
mov
mov
or
insb
and
loopne
dec
pushf
push
pop
jmp
mov
clc
xor
xor
xor
sub
or
lahf
ret
lea
insl
fstpt
test
inc
xor
push
pop
add
or
add
add
sahf
out
add
pop
test
mov
jo
jb
iret
sti
cmp
je
xchg
add
mov
add
sahf
xchg
sub
push
push
gs
pop
dec
jae
inc
inc
or
fmulp
xchg
mov
or
xchg
out
dec
cld
add
or
or
ucomiss
and
pop
and
xchg
or
or
jb
je
push
add
psadbw
lret
xor
adc
pop
adc
or
adc
xchg
add
adc
xchg
pop
enter
adc
mov
adc
enter
adc
jb
iret
push
push
inc
pop
imul
sbb
mov
xchg
ja
xchg
sbb
dec
sahf
aaa
and
sbb
sbb
mov
cmp
sbb
cmp
sbb
push
sbb
addr16
sahf
push
jo
xor
sbb
sahf
push
push
inc
negb
pop
popa
jmp
add
add
sub
jg
pop
stos
pop
add
movl
aas
xchg
push
and
lods
pop
xor
jmp
cmp
je
repnz
push
jns
add
sub
rcl
ret
push
repnz
xlat
in
in
out
cmp
repnz
out
fdivl
call
push
in
call
jns
adc
mov
cmp
in
sahf
xchg
cmp
lods
in
jmp
jmp
xorl
in
and
aad
in
cmp
pop
leave
xor
out
out
xchg
jb
sbb
out
or
je
insl
nop
out
lock
dec
inc
scas
in
icebp
cmp
das
iret
enter
repnz
push
pop
and
std
hlt
hlt
xchg
push
jnp
imul
std
cmc
sahf
xchg
stos
cmp
mul
popa
in
mov
sbb
inc
lcall
jns
scas
cmp
aas
stc
stc
dec
sahf
xchg
sub
cli
cli
das
nop
addr16
sti
sti
fdivrp
rolb
cld
cld
je
cld
push
cmpsb
in
fists
jne
mov
xor
sbb
xor
add
xchg
fldl
xchg
hlt
adc
rcll
xor
std
jb
pop
jmp
or
jecxz
xchg
sub
push
xor
jmp
push
xchg
push
cmpl
aam
mov
lcall
jns
xor
sti
mov
lds
adc
nop
out
inc
or
lea
xchg
daa
in
cltd
xchg
cmp
pop
or
jmp
or
aad
aad
out
xchg
mov
in
cmp
andb
repz
xchg
sbb
push
cli
stc
jb
imul
stc
imul
mov
repnz
clc
cltd
jb
shll
ss
push
cmp
stc
sti
sti
sti
xchg
push
repnz
scas
or
cmp
jmp
aad
xchg
clc
mov
subb
daa
add
xabort
sbb
jmp
loop
enter
shll
loope
and
inc
clc
and
pusha
dec
add
or
movsb
out
xchg
fdiv
out
xchg
pop
push
loope
negl
and
mov
lcall
jns
xor
pushf
and
pop
testl
xchg
repnz
mul
scas
testb
inc
nop
testb
repnz
pop
push
lea
loope
imulb
mulb
out
div
testb
mov
iret
in
mov
jns
pusha
xor
cmc
orb
push
cli
cli
xchg
in
aad
cmp
loope
cmc
andb
cli
hlt
or
xlat
inc
lock
into
repz
xor
push
mov
cmpsb
ret
inc
cwtl
pop
clc
sti
mov
xchg
stos
cmp
jp
leave
or
cmp
add
xchg
hlt
mov
hlt
or
sub
in
pop
xchg
pop
pop
lret
repz
repz
or
xchg
repz
xchg
adc
repz
rcll
pop
lcall
pop
xchg
adc
repnz
repnz
rcll
dec
shl
test
cmp
icebp
icebp
das
mov
jb
xchg
pop
adc
repnz
repnz
push
cmp
sbb
inc
jb
sbb
or
mov
lock
cwtl
icebp
xchg
add
daa
test
xor
mov
push
and
icebp
movups
xlat
or
pop
ret
pop
mov
test
enter
jp
jmp
gs
inc
push
push
sub
ffreep
dec
push
ret
inc
insb
loope
mov
cmp
cmp
scas
in
mov
ret
mov
mov
ret
fld
push
jne
stc
xor
mov
dec
add
movsb
xchg
dec
add
je
sbb
fbld
fldl
and
add
int3
dec
push
nop
cmpsl
xor
push
adc
aaa
mov
xor
or
push
add
jl
dec
imul
cli
push
jecxz
jns
data16
dec
mov
imul
out
in
push
push
aad
in
xchg
mov
push
dec
outsb
or
mov
mov
mov
dec
rcrb
sarb
mov
mov
jns
inc
cmp
and
lret
test
jmp
sub
sub
pushf
dec
pop
inc
or
lock
adc
leave
jle
jmp
push
aaa
and
fists
push
orb
push
and
pop
or
mov
push
mov
xor
fs
push
idivl
popf
mov
jecxz
sbb
sub
icebp
sahf
cmp
xlat
pop
mov
or
lea
pusha
mov
pop
jl
call
pop
add
popa
or
pop
jmp
inc
add
pusha
subb
pop
in
and
es
scas
in
adc
mov
fcoml
pop
insl
adc
and
adc
popa
and
xor
push
divb
push
adc
xchg
je
jo
adc
inc
fcoml
das
pop
jno
rcll
stos
adc
adc
jecxz
sbb
mov
cwtl
test
add
xchg
and
cmp
out
sbb
int
jb
dec
add
jecxz
dec
add
mov
inc
add
gs
cltd
pop
hlt
rolb
inc
inc
inc
dec
ret
add
add
pop
xchg
pop
adc
dec
xor
sub
js
xor
add
adc
xor
inc
mov
nop
xchg
push
mov
and
xor
cltd
sbb
rorl
aaa
inc
adc
sbb
leave
pop
inc
dec
pop
adc
or
mov
push
add
lods
adc
sbb
int3
ret
add
in
sbb
or
in
xchg
jns
pop
inc
in
dec
aas
jne
cmp
addb
mov
push
lods
push
dec
test
or
fmull
dec
sub
push
add
movb
sbb
push
mov
aam
sarl
jg
daa
add
cmp
push
xor
xlat
loop
inc
xchg
and
sub
and
sub
jb
and
mov
and
lock
sbb
pop
and
and
andb
add
shr
adc
enter
int
pop
add
mov
push
test
outsb
lcall
add
and
inc
mov
push
sbb
mov
nop
out
ss
and
dec
mov
push
push
and
xor
and
pusha
add
and
mov
push
sbb
pop
sbb
jmp
and
add
cmpsb
imul
inc
and
daa
daa
daa
xor
and
push
push
and
and
and
test
and
xor
es
add
push
dec
add
and
or
adc
add
pop
and
and
dec
or
ds
or
or
mov
jp
and
add
aam
push
mov
lahf
push
call
sub
inc
xor
and
in
nop
inc
lods
and
shlb
stc
in
dec
mov
xor
push
test
nop
and
adc
and
and
movsb
js
xor
and
add
and
inc
and
cmp
rolb
std
push
push
mov
push
and
jecxz
movsb
add
lds
and
test
nop
and
popf
cmc
sub
pop
and
gs
loopne
or
dec
aaa
mov
mov
shll
scas
orl
mov
aam
adc
inc
inc
jb
and
inc
cmp
rclb
inc
and
movsl
loop
add
and
or
xor
xor
clc
dec
data16
data16
loope
sbb
imul
mov
iret
dec
or
bound
out
push
cmp
ret
and
xlat
aas
cmp
mov
xchg
movsl
sub
mov
or
cltd
and
inc
mov
and
es
loopne
adc
std
cltd
inc
adc
cmp
cltd
sbb
cltd
add
pop
pop
test
lds
sub
push
daa
dec
mov
ret
inc
dec
cltd
xor
and
hlt
cwtl
scas
jb
push
xchg
sahf
xor
mov
dec
mov
dec
ja
adc
and
je
adc
xchg
in
mov
inc
ret
or
mov
out
movsb
mov
movsb
jmp
mov
sbb
xchg
adc
loope
xchg
push
nop
sbb
and
mov
ret
roll
push
loopne
sub
mov
test
and
push
sbb
dec
mov
push
mov
push
mov
sub
lret
sbb
js
je
loopne
inc
push
sar
mov
aad
sbb
lahf
call
cmp
enter
mov
mov
xchg
ljmp
sbb
xor
lcall
dec
negl
in
loope
inc
adc
sbb
mov
inc
stos
lahf
mov
aam
sbb
lret
inc
mov
sbb
je
inc
pop
mov
nop
dec
cmp
pop
mov
sbb
pop
fs
mov
mov
insb
mov
mov
movb
lods
addl
mov
push
sbb
xor
imulb
or
shrb
fstl
add
inc
add
add
xor
rorb
add
inc
inc
ja
mov
push
mov
adc
shrb
sbb
mov
rolb
mov
mov
jno
adc
push
mov
mov
lods
push
sbb
xchg
push
sbb
fmuls
xor
cmp
sub
push
mov
mov
mov
mov
cmp
sbb
xor
in
dec
xor
mov
rcl
pop
imul
jno
nop
mov
js
lods
xor
lea
push
cmp
test
mov
addr16
push
ds
pop
jmp
inc
inc
mov
rcl
rcr
clc
rolb
xor
js
and
push
or
and
mov
mov
or
pop
sub
nop
rclb
pop
xor
mov
and
sub
lods
into
mov
roll
mov
dec
stos
mov
inc
sbb
xor
rclb
push
sbb
je
mov
and
call
adc
shl
sbb
out
xor
aam
cmp
mov
or
dec
or
or
pop
sbb
xor
aad
mov
adc
lahf
lock
mov
cmp
jae
test
inc
dec
mov
add
int3
sbb
lock
roll
add
insb
cmp
adc
int
jl
push
in
push
cmp
shlb
add
cmp
mov
fldl
mov
ret
ret
inc
inc
cmpsl
or
mov
add
mov
jbe
jno
or
sbb
sbb
pop
mov
je
imul
mov
inc
xor
and
sub
cld
add
sti
lret
outsb
sbb
pop
sbb
xchg
mov
push
shlb
add
stos
jne
add
sbb
andl
sbb
push
not
or
mov
hlt
sbb
ret
cmp
jp
out
and
cmovs
je
adc
les
or
mov
addl
clc
js
lea
orl
xchg
into
imul
xor
and
mov
imul
cltd
sbb
sbb
sbb
sbb
js
push
sbb
sbb
pop
dec
dec
pop
cmp
dec
and
inc
inc
mov
inc
loope
dec
call
adc
push
or
jo
sbb
push
lods
cli
cmp
cmp
call
fdivs
mov
jno
ds
pop
xchg
icebp
leave
jmp
cmp
imul
and
inc
shlb
dec
add
mov
daa
icebp
mov
repz
push
jno
ret
pop
xchg
mov
cmp
mov
or
es
mov
out
push
dec
inc
inc
sub
push
dec
pop
ret
sub
mov
bt
sbb
dec
lock
jbe
enter
lods
ret
mov
push
in
gs
gs
test
jbe
ja
add
ja
adc
ja
pop
add
int3
add
sub
inc
dec
inc
mov
and
inc
add
or
push
mov
jp
push
gs
xchg
add
xlat
jae
mov
sti
gs
rcl
adc
gs
cmpsb
or
pop
and
pop
adc
mov
movsb
sbb
movsb
test
jo
pushf
or
sbb
gs
in
xlat
test
or
add
in
push
sub
xlat
test
or
je
jnp
movsb
repz
js
test
subl
test
out
add
push
test
nop
xchg
sbb
imul
fsubs
das
jae
popf
push
push
movsl
pop
negl
test
push
and
cmpsl
xor
ljmp
dec
mov
shr
push
and
jl
sub
push
jnp
in
cli
movsl
push
loopne
stc
mov
or
xchg
stos
or
fadd
jg
inc
push
dec
ret
ret
mov
and
ret
test
or
sub
adc
mov
xchg
cwtl
pusha
add
ret
add
ret
subb
sbbb
or
xchg
cmp
or
cmpsl
loope
scas
enter
adcb
popa
dec
mov
ds
stc
adc
xor
cltd
int
jl
sbb
cmp
cmp
das
jmp
nop
push
ret
push
xchg
test
mov
sub
push
loop
or
call
dec
popa
mov
cmp
ret
mov
nop
out
push
cwtl
mov
dec
addr16
ret
in
mov
std
inc
xchg
ret
idivb
mov
test
mov
dec
mov
push
popa
mov
test
sbb
mov
shrb
push
mov
mov
lahf
xchg
push
popa
dec
flds
jo
push
mov
jmp
or
cld
inc
loopne
mov
loopne
leave
pusha
test
sub
jecxz
xchg
sbb
shll
push
popa
dec
ja
xchg
xchg
lahf
mov
dec
call
rorb
sub
mov
dec
jne
inc
inc
xchg
inc
push
and
xor
inc
inc
inc
ja
pusha
mov
nop
nop
sbb
jne
and
inc
xor
jo
je
or
call
and
jne
in
xor
jb
and
adc
popa
add
jne
fs
jne
call
mov
sub
mov
mov
jne
pusha
add
or
sbb
daa
jne
inc
cmpsl
cmp
push
test
jmp
les
mov
sbb
jae
lea
adc
mov
fstl
inc
add
ljmp
call
xchg
mov
movsb
add
incl
jl
enter
je
add
arpl
and
sub
addl
pop
inc
push
push
adc
push
inc
adc
cmp
lds
mov
sbb
adcl
pusha
addl
pop
push
ja
sub
push
cmpl
pop
inc
sub
pop
add
add
or
sub
cmp
and
add
adc
loopne
adc
adc
mov
push
ljmp
es
inc
pop
adc
push
fwait
add
cs
mov
add
xlat
push
cmp
pop
aam
mov
inc
mov
sbb
jge
xor
push
inc
call
sbb
inc
pop
inc
lods
mov
mov
ss
call
add
add
jne
mov
dec
cltd
test
jge
fisttpll
or
push
movb
push
add
lret
fcmovnbe
push
mov
add
cmp
inc
jmp
dec
jmp
xor
xor
fimuls
inc
inc
ret
mov
outsb
jo
xlat
sbb
add
inc
pop
je
pop
es
test
jnp
lcall
into
or
rorl
fs
stc
add
mov
pop
das
or
xorb
add
or
cmp
lock
and
cmp
leave
or
pop
cmpb
aaa
mov
xor
inc
jmp
out
sbb
pop
add
adc
push
nop
imul
fisttps
sbb
lds
xor
loop
inc
mov
sbbb
mov
xor
mov
and
adc
cld
xchg
push
loope
mov
push
cltd
mov
pop
hlt
dec
inc
inc
shl
mov
cmpsb
addps
cmp
repz
fscale
inc
fisubrs
jge
push
push
or
pop
dec
mov
sahf
push
or
mov
aam
inc
fbld
dec
jmp
cmp
xor
pandn
xor
and
push
add
ret
push
sar
insb
pop
pusha
addb
jl
call
dec
sub
mov
cmp
mov
jns
sbb
jo
jo
sub
outsb
arpl
cmc
inc
adc
sub
or
jmp
pop
cmpsl
push
mov
xchg
outsb
mov
sbb
and
fstpl
ss
rol
fstpl
mov
lea
add
inc
and
xor
xlat
filds
cmc
add
dec
call
rcl
mov
xchg
mov
popa
add
sahf
in
push
cmp
jmp
ja
mov
out
sbb
cmp
out
or
lds
push
and
lock
fimull
adc
or
adc
add
xor
cwtl
out
lret
roll
inc
mov
sbb
lahf
das
xchg
sub
xor
mov
add
sbb
mov
inc
jne
xchg
sbb
je
mov
mov
pop
or
imull
ror
notl
xlat
shll
fists
gs
push
sbb
mov
mov
push
shl
leave
xchg
dec
testl
sbb
xchg
divl
xchg
or
push
gs
leave
xchg
leave
xchg
xchg
insb
mull
pop
fwait
fs
pop
add
pop
imul
repz
xor
and
and
or
and
or
pop
push
call
cmpsb
cwtl
test
or
mov
push
mov
fstpl
inc
ja
jae
xchg
mov
rorl
pop
and
inc
or
inc
mov
sbb
add
inc
mov
cli
sahf
fs
xchg
repnz
ror
rclb
dec
xchg
cmovb
xor
not
stos
js
fs
divl
cmp
imul
nop
mov
xchg
mov
or
negl
mull
movsl
sub
test
or
fs
sub
inc
bound
imul
or
pusha
int3
fs
xor
jge
and
bound
jmp
xor
mull
mov
or
imul
dec
push
mov
mov
xor
rclb
testl
sbb
fs
divl
rol
sbb
fnop
rorl
xchg
mov
leave
divl
push
mov
sub
dec
sbb
xor
fwait
mov
sbb
testl
adc
inc
jle
add
cmpsl
or
mov
adc
fmull
jbe
sbb
mov
bound
inc
mov
popa
mov
cmp
xor
call
outsb
mov
mov
ja
orb
call
shlb
call
test
inc
inc
cmpsb
cwtl
insb
stc
xchg
xor
stc
fwait
jp
push
xchg
mov
push
pop
adc
je
push
mov
sahf
cmpsl
sub
ss
cmpsl
or
adc
xor
lds
add
test
mov
push
rclb
nop
daa
ds
or
push
add
adc
adc
daa
inc
push
loopne
mov
push
call
push
dec
daa
mov
mov
ret
xorl
jo
pop
add
mov
and
or
adc
sub
add
roll
mov
lods
mov
xchg
push
adc
mov
sbb
movb
scas
pop
xor
cs
mov
sbb
jmp
push
and
xchg
mov
stos
mov
push
xor
push
sbb
xchg
fldenv
sbb
mov
push
popf
push
sbb
icebp
repnz
outsb
les
mov
mov
push
push
push
mov
movsl
in
scas
movl
mov
pop
adc
cvtdq2ps
and
cmp
mov
mov
divl
sub
inc
or
mov
aam
add
inc
push
pop
fisttps
pop
mov
hlt
push
ret
xchg
mov
and
enter
cmp
dec
arpl
arpl
cmp
bound
xor
jnp
inc
dec
cmpsl
cmp
cmp
mov
int3
cmp
and
testb
mov
out
sbbl
cmp
lret
sub
into
adcb
and
call
dec
mov
add
mov
adc
adc
inc
call
cmp
mov
movsb
int
lods
inc
aaa
adc
cmp
daa
adc
cmp
pop
test
cmp
mov
pop
loopne
inc
cmp
adc
add
adc
shlb
imul
imul
ss
mov
adcl
in
or
and
fxch
mov
xor
popa
mov
xchg
cmp
std
xor
adc
mov
dec
fadds
mov
cmp
mov
fstl
enter
fcomi
cmp
jp
inc
mov
cmp
inc
and
mov
cmp
inc
inc
ret
adc
or
xor
push
and
and
cmp
cmp
and
and
jmp
pop
test
pop
test
arpl
popa
adc
orl
inc
sub
cmp
and
mov
or
inc
add
cmp
adc
lds
hlt
add
test
test
cmp
push
mov
push
and
mov
mov
adc
mov
sbb
mov
jg
cmpsl
pop
mov
cmp
xchg
insl
andb
add
push
popf
fnstenv
nop
sbb
imul
sbb
call
add
fistpl
jno
nop
cmp
lds
mov
or
mov
xchg
and
cmp
mov
lds
je
or
fstps
sbb
cmp
xor
xor
bound
in
test
cmp
pop
cmp
cmp
sbb
push
int
call
adc
lret
and
cmp
cmp
and
jo
bound
sbb
inc
subl
push
insb
or
testb
push
sbb
lods
in
inc
sbb
call
dec
xor
scas
sub
sbb
or
sbbb
sbb
inc
ja
inc
sbb
sbb
xor
pop
and
cmp
pop
cmp
arpl
pop
jbe
call
pusha
bound
arpl
xor
sbb
cmp
push
cmpsl
mov
xchg
cwtl
cmp
inc
or
sbb
pop
mov
or
sbb
xchg
shlb
stos
sbb
popa
call
jge
xchg
mov
jp
push
loop
xor
cmp
or
xchg
call
sbb
cwtl
loopne
out
mov
icebp
push
loope
mov
jo
mov
out
xchg
push
inc
call
jns
test
in
push
mov
pop
cs
or
pop
jb
lahf
sbb
add
je
repz
add
mov
adc
out
jno
shl
pop
cmp
adc
sbb
shlb
mov
mov
or
jns
xchg
out
imul
inc
out
call
push
out
jle
outsb
adc
out
outsb
adc
shlb
fld
and
pop
jno
out
pop
shrb
or
les
out
les
or
neg
loope
add
cmpsl
andl
imul
pop
or
insb
dec
pop
pusha
movsb
mov
push
add
jp
rcr
and
and
sbbb
pop
jle
inc
and
ficoml
mov
mov
test
add
xchg
xchg
add
jp
or
cmp
shrb
mov
fucomi
xor
nop
pop
jl
push
xchg
add
xor
xchg
sbb
call
pop
and
or
or
mov
call
arpl
mov
mov
loop
pop
in
xor
mov
adc
and
xchg
je
sbb
inc
push
xor
lock
or
push
push
inc
in
pop
lods
nop
test
inc
adc
test
pusha
jnp
adc
adc
mov
push
mov
inc
pop
cmpsb
shrb
pusha
cmp
push
dec
inc
pop
aas
loopne
and
pop
pop
addr16
stos
ret
push
and
sbb
or
dec
xchg
test
mov
rorb
cmp
bound
call
into
jp
outsl
nop
sub
xchg
pop
mov
pop
dec
inc
orl
push
mov
push
pop
pop
adc
and
pop
cmovns
push
aad
je
dec
enter
inc
xchg
mov
xchg
and
fnsave
stos
sub
pop
and
and
dec
inc
aaa
and
pop
xor
popf
pop
ss
jbe
movsl
mov
call
repnz
aas
xor
unpcklps
das
push
jge
add
call
maxps
adc
call
xor
clc
repnz
xchg
lret
xor
lock
call
mov
stc
cmp
fdivrs
jg
inc
call
mov
pop
decb
movsb
lods
andps
movsl
pop
call
in
xchg
xchg
pusha
call
push
jl
insb
call
je
gs
pop
movsl
or
mov
inc
sbb
cmp
xchg
dec
in
xor
push
cs
adc
in
cli
lret
movsb
imul
and
adc
dec
in
mov
je
out
or
shlb
xchg
mov
push
mov
mov
push
dec
in
push
in
inc
aam
push
mov
hlt
es
xchg
dec
in
sbb
adc
add
mov
leave
or
rcrb
out
leave
gs
loope
adc
adc
sbb
xchg
lret
sbb
and
sub
xchg
lret
xor
jae
jb
pop
cmp
pop
xchg
push
xchg
lret
inc
gs
dec
pop
mov
xor
push
xchg
dec
in
adc
or
pop
add
mov
mov
push
cs
mov
insb
and
data16
sbb
jo
xor
xchg
xchg
cwtl
sahf
sub
out
mov
mov
jbe
mov
and
xor
daa
push
adc
inc
xor
mov
xorb
daa
int
dec
test
and
and
cli
cmp
jb
mov
daa
int
inc
test
inc
adc
pushf
xor
mov
cli
mov
rcrb
dec
mov
movl
push
xchg
and
shrb
adc
xorb
shlb
xchg
je
mov
lcall
inc
sub
xchg
inc
and
jo
add
pop
push
mov
dec
or
mov
mov
ljmp
pop
lret
ljmp
shlb
fcmovnu
or
mov
add
bound
insl
dec
and
add
sub
jmp
insl
pop
add
and
cmp
cli
cs
or
and
and
ret
sbb
push
in
scas
add
mov
inc
and
stos
mov
pop
sbb
xchg
das
inc
inc
imul
sub
inc
shlb
call
push
addb
ffreep
pop
adc
adc
xchg
and
push
dec
or
push
or
pusha
pop
mov
sub
dec
xchg
xchg
mov
inc
data16
xchg
dec
dec
and
or
cmp
inc
mov
or
sarb
xchg
push
movsl
ret
stc
mov
mov
mov
push
pop
push
es
sub
mov
addb
adc
or
dec
xor
or
call
add
sbb
dec
or
cmp
xor
xchg
fists
lcall
inc
inc
fs
or
test
movsb
xor
and
push
lea
aam
cmp
stos
sub
sbb
mov
mov
cmc
mov
and
push
mov
lds
fld1
push
or
out
inc
cmp
mov
mulb
mov
xchg
mov
cmp
cli
push
inc
pop
sub
pop
lds
xor
adc
lret
pop
mov
movsb
xchg
mov
mov
add
mov
and
and
dec
or
lods
pushf
push
jb
and
rolb
sub
sub
test
movsl
sti
loop
mov
push
call
push
outsl
or
xchg
mov
arpl
cli
adc
xor
roll
inc
mov
lods
cmp
cltd
mov
mov
mov
sub
mov
sbb
mov
xor
xchg
xchg
mov
and
add
inc
adc
mov
add
xor
jns
sbb
or
dec
jmp
mov
rclb
cwtl
mov
sub
xor
mov
in
pop
mov
and
dec
stc
sbb
pop
shlb
add
lcall
out
push
test
inc
rorl
cmpsb
sti
and
fldl
sti
call
mov
dec
ja
sub
jno
and
or
adc
adc
mov
pop
ss
push
test
push
sarb
mov
jmp
xor
inc
xchg
clc
leave
lods
or
shll
dec
inc
pop
int
nop
push
and
rcrb
nop
pop
mov
ja
or
cmpsb
pop
dec
sahf
adc
out
pop
adc
and
pop
inc
fldt
rcrb
imul
or
or
or
and
or
dec
inc
jecxz
or
dec
pop
inc
inc
lea
rcrl
xor
add
movsb
sbb
jb
stos
xor
mov
add
sub
push
push
xchg
dec
repz
scas
test
adc
out
shlb
shll
inc
mov
push
jno
mov
ret
gs
sbb
out
enter
xchg
negl
arpl
bound
mov
xchg
test
rorb
mov
and
stos
xor
inc
gs
inc
gs
popa
mov
mov
add
shlb
mov
add
inc
ret
notl
inc
aaa
cwtl
adc
xor
dec
js
cmpsb
popa
pop
or
xchg
pop
add
cmp
or
or
add
mull
pop
sub
mov
jmp
add
add
je
divl
cs
mov
dec
pusha
inc
notl
xor
aam
mov
lods
add
add
imul
arpl
sbb
push
cld
add
sbb
or
jl
daa
add
jge
add
jge
dec
inc
popa
int
out
push
add
test
rcrb
ret
lods
mov
mov
orb
or
enter
dec
inc
and
and
fidivs
jo
mov
call
daa
icebp
lds
sbb
xor
or
adc
pushf
add
andb
ljmp
or
imul
cwtl
daa
loopne
mov
pusha
fcompl
shlb
fwait
lcall
add
dec
xor
daa
inc
daa
es
sbb
xor
adc
mov
xor
rorb
shlb
push
pop
pop
mov
enter
orl
jo
cmp
and
push
inc
aaa
adc
push
addb
push
xor
push
fstpt
pop
sahf
cmp
add
mov
add
pop
jmp
addl
dec
rorb
nop
jno
nop
xchg
mov
add
arpl
nop
popa
sub
xorl
pop
shll
dec
inc
ja
sbb
or
fistl
mov
pop
add
mov
cli
cmpl
push
pop
in
and
inc
sub
mov
jecxz
lcall
clc
mov
push
out
cmp
adc
inc
insl
dec
scas
mov
sbb
jg
push
mov
xchg
or
call
push
dec
push
incb
movsb
xchg
sbb
fldl
push
add
pop
scas
movsl
mov
mov
dec
xor
orl
jmp
push
xor
mov
jb
pop
and
or
mov
cwtl
mov
fldenv
mov
je
fwait
mov
and
jb
mov
nop
mov
inc
xor
orb
sub
lahf
mov
or
push
mov
xchg
cmp
xchg
dec
xchg
out
stos
adc
lret
sahf
sbb
dec
or
inc
test
sbb
scas
dec
sbb
jmp
mov
mov
fistpl
sub
jmp
jg
or
jp
repz
scas
or
arpl
popa
push
popf
or
adc
je
dec
leave
out
call
xchg
sar
mov
or
mov
adc
pop
fstl
addl
fwait
or
stos
fwait
inc
loope
xchg
orb
insb
movsl
hlt
cld
mov
jb
pop
mov
cmp
cmpsl
inc
mov
fistpl
adc
push
push
sbb
cld
test
ss
push
or
push
mov
inc
mov
sub
mov
jmp
sti
fwait
repz
adc
fwait
or
push
jo
repnz
xlat
pop
inc
les
mov
scas
sbb
fdivr
dec
mov
push
dec
jl
lea
call
and
jle
adc
jb
insl
adc
and
adc
sbb
cmp
cmpl
fs
lock
mov
sarl
ret
add
ja
sub
xchg
adc
xlat
add
push
push
ret
dec
or
icebp
in
inc
jb
or
inc
mov
push
and
pop
inc
inc
mov
inc
inc
inc
data16
repz
mov
lret
inc
add
ffree
cmp
xorb
add
test
adc
mov
in
xchg
xchg
int
mov
test
xor
cmpsb
dec
mov
enter
push
inc
les
add
out
pushf
adc
inc
mov
sahf
mov
and
jmp
add
lock
int
jmp
lret
movsl
or
push
nop
push
mov
mov
fwait
dec
or
jl
out
cmp
add
and
or
sbb
cmp
rcr
ret
mov
repz
jbe
push
ds
sahf
cmpsl
stc
cmp
clc
sbb
aam
iret
imul
pop
push
lods
push
mov
cmp
clc
push
inc
push
push
sub
idivb
movsb
push
push
xchg
jl
sahf
out
fs
inc
cmpb
out
fidivs
pop
dec
cmp
cmp
out
sbb
repnz
fmulp
out
cmp
xchg
mov
ret
fidivrs
jge
sbb
incb
add
es
loop
dec
repz
sbb
cmp
repz
sbb
jns
cmpsl
jbe
pushf
scas
lret
jl
call
sub
cmp
repz
data16
nop
repz
repz
lods
mov
fidivrs
cmp
ss
inc
push
push
movsb
icebp
shr
jb
jle
ret
in
repz
sahf
mov
daa
rol
loop
clc
push
data16
imulb
push
cmp
aaa
je
sub
iret
repz
push
cmp
adc
daa
inc
cmp
jnp
mov
jbe
add
jae
jbe
push
cwtl
cmpsl
insl
mov
add
out
iret
dec
test
out
xor
jbe
inc
sub
test
scas
test
jg
pop
rol
test
pop
push
xchg
inc
xor
jo
jne
int3
dec
adc
pop
rcl
jle,pn
sub
fisubrl
test
gs
mov
stos
dec
push
dec
ja
jb
pop
subb
xor
push
outsl
loopne
adc
push
ja
and
fbstp
or
lahf
es
scas
roll
js
xor
sbb
push
xor
sbb
jae
outsl
rorl
push
push
pop
or
cmpsl
add
bound
mov
add
movsb
inc
and
xor
inc
or
mov
fisubrs
dec
cmp
out
or
das
int
and
xchg
xor
ret
mov
add
aaa
dec
mov
or
cwtl
xor
jnp
push
pcmpeqd
and
mov
imul
mov
push
outsb
call
mov
pop
data16
add
xchg
cmp
cmp
jnp
das
jg
push
and
subb
je
incl
or
arpl
push
dec
inc
push
push
inc
push
jns
pop
cli
inc
pop
inc
outsl
outsl
add
ret
xchg
xchg
jb
inc
in
or
or
sbb
pop
dec
cmpsl
mov
lods
pop
dec
imul
jb
jae
pop
mov
inc
jne
sti
mov
fsubrl
outsb
je
rcrl
xor
imul
inc
inc
jg
push
xor
sub
sub
sub
inc
inc
xor
xor
aaa
xor
xor
jge
xor
xor
inc
xor
outsl
in
pushl
ss
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
xor
pop
jb
adc
xchg
test
jnp
andb
jne
test
movb
mov
inc
cltd
orb
mov
movsb
ss
xor
or
cmp
sti
fistps
and
inc
aaa
adc
xor
inc
pop
dec
and
subl
pop
pop
push
mov
sahf
inc
push
inc
push
dec
and
sti
or
sub
pushf
xor
adc
and
dec
dec
outsl
mov
xor
jne
dec
loopne
pop
xchg
add
sub
ss
xchg
push
push
dec
hlt
imul
ficoml
pop
push
sub
jae
inc
push
jns
iret
sti
inc
out
adc
push
sub
out
cmp
in
mov
lods
sahf
int
lret
mov
lods
and
fadd
jns
hlt
pop
sbb
inc
pop
dec
jb
adc
add
jg
jbe
adc
insb
outsl
xor
push
dec
mov
les
je
push
push
lods
lea
mov
and
mov
and
inc
cmp
jbe
sbbb
mov
add
mov
fldt
inc
xchg
push
inc
or
imul
mov
dec
insb
insb
mov
mov
testl
outsb
ret
es
mov
or
es
push
inc
and
xor
sbb
pop
insb
or
or
cmp
insb
and
pop
add
lods
loopne
pop
jg
jp
fs
and
sub
ss
out
push
and
push
scas
jae
and
and
imul
jmp
jne
xchg
loopne
pusha
add
js
daa
scas
scas
je
mov
in
hlt
dec
fs
imul
push
decb
mov
fdivs
lret
add
adc
das
test
aaa
pop
or
movsb
jmp
mov
push
pop
arpl
inc
cs
push
push
push
push
or
ja
jnp
and
outsb
outsl
loop
mov
push
popa
imul
inc
lods
insb
ds
sbb
fdivl
sub
add
mov
add
mov
add
or
push
test
inc
rolb
loop
mov
add
jg
popa
mov
xchg
pushf
add
sbb
push
rorb
mov
cmpsl
and
test
push
add
xlat
shll
push
fldt
ret
and
add
jns
mov
orb
fdiv
xor
or
add
mov
das
pop
and
das
xchg
adc
imul
sbb
enter
xor
out
sbb
std
sbb
mov
das
push
pop
nop
cld
and
push
and
jns
jns
out
stc
jp
push
cld
fdivr
shrl
mov
push
mov
mov
out
les
mov
and
xor
stos
scas
xchg
data16
add
popa
and
pushf
out
push
ds
cmp
xchg
popa
es
add
iret
cmp
addr16
adc
push
cld
or
in
cmp
repz
les
movsb
xor
repz
mov
jl
insb
push
jns
pop
mov
repz
dec
dec
inc
inc
cmp
sahf
out
push
xor
sub
and
jns
out
sbb
adc
int
jns
or
add
cld
or
cmp
repz
call
cmp
repz
nop
jo
out
ds
xor
lock
int3
mov
out
sahf
mov
sbb
dec
repz
cld
push
fcom
repz
repz
js
sub
jns
iret
add
add
xor
sbb
add
call
loop
iret
mov
test
and
mov
dec
les
inc
fcomi
adc
and
inc
inc
js
lret
cmp
inc
xor
mov
push
sub
inc
inc
shr
mov
pop
push
inc
dec
cmp
mov
mulb
inc
add
insl
adc
or
xlat
adc
pop
adc
jecxz
mov
sub
xor
cmpsb
mov
and
bound
daa
xchg
dec
adc
jg
sub
mov
sbb
cwtl
add
jno
daa
dec
daa
push
jmp
mov
push
mov
pop
and
pop
jnp
adc
fidivrl
mov
push
lahf
movlps
icebp
xchg
add
pop
insb
adc
pop
js
shrb
decl
dec
lods
mov
pushf
andb
rolb
ret
jns
test
add
adc
xor
and
add
pop
cmp
movl
fwait
out
pop
icebp
inc
mov
push
add
mov
pop
stc
or
int3
cmp
add
jne
imul
test
icebp
push
mov
jo
push
gs
xor
or
jo,pn
bound
pusha
cmp
xor
fstpt
sbb
inc
push
push
push
insb
das
lods
dec
push
jo
das
pop
mov
add
insb
lods
cwtl
lahf
add
das
jae
add
cmp
add
addr16
and
mov
dec
enter
mov
enter
insb
pop
sarb
jg
es
dec
fcoms
aam
fisttpl
cmp
ret
paddsw
aas
int3
data16
inc
repnz
aas
ljmp
js
and
lds
jecxz
rcr
fldt
in
cmp
ss
lcall
setl
lret
filds
mov
mov
or
push
popf
jo
push
jl
in
push
dec
push
sbb
aas
sbb
and
sbb
mov
and
aaa
mov
and
mov
jecxz
rorl
jg
enter
jb,pn
leave
pop
outsl
setno
rol
out
cmp
adc
jp
insb
adc
scas
fisttpll
fs
loopne
dec
mov
movsb
dec
adc
jnp
xor
loopne
daa
lock
enter
imul
leave
sbbb
mov
xor
jnp
test
push
mov
dec
pop
addb
testb
imul
adc
ltr
sub
lcall
scas
pop
push
and
gs
dec
dec
add
xchg
lcall
jae
outsl
ja
xor
lret
gs
jle
jb
sub
add
push
jbe
ja
out
daa
movsb
and
and
add
test
rolb
outsb
inc
in
sarl
neg
ljmp
pusha
add
sbb
bound
xchg
and
mov
ss
inc
add
insl
jo
dec
pop
es
shrl
push
add
out
mov
xchg
add
push
mov
cli
add
jae
movsb
loopne
outsb
push
jae
push
adc
dec
outsl
popa
sbb
push
add
jb
inc
mov
in
pop
sbb
out
adc
inc
adcb
cmp
push
inc
sbb
mov
repz
es
push
jno
shll
add
sub
dec
push
sbb
push
mov
pop
das
adc
or
or
sbb
mov
cmp
push
jo
jb
jns
xchg
mulb
imul
lret
roll
push
das
mov
mov
lods
cmpsl
xor
push
sbb
sbb
xchg
outsb
sbb
mov
mov
adc
jnp
jne
jge
and
pusha
inc
test
inc
notb
push
inc
imul
jge
xchg
push
jecxz
lret
xor
adc
ja
adc
dec
inc
add
arpl
push
jnp
inc
jmp
inc
or
test
subb
addr16
push
dec
stos
outsb
es
mov
push
scas
xchg
dec
inc
ret
shlb
cmpsb
dec
jno
mov
sub
pop
sub
fs
int3
pop
je
lahf
xor
or
clc
jecxz
xor
inc
cs
gs
push
adc
jle
jecxz
sbb
and
push
call
pop
adc
ror
or
lahf
outsb
xor
or
add
mov
inc
roll
shlb
outsl
mov
jne
sub
scas
inc
add
stc
add
add
lcall
inc
bound
pop
mov
push
dec
dec
dec
pop
add
and
inc
jns
xchg
fs
mov
lds
mov
lret
inc
push
outsl
sbb
lret
jl
xchg
lock
and
roll
push
frstor
push
mov
movsl
cmp
mov
mov
lock
mov
mov
sbb
insl
imul
jb
mov
loope
pop
outsl
adcb
arpl
inc
jmp
enter
sbb
fidivl
dec
inc
jb
sbb
aas
inc
cmc
sbb
shr
sbb
xchg
jno
inc
mov
ja
jmp
sbb
imul
xchg
or
mov
sub
adc
dec
add
add
mov
pop
mov
movsl
rorb
daa
dec
inc
xor
adc
dec
pusha
mov
xor
push
jo
jno
cmp
std
mov
add
scas
in
jmp
roll
in
xchg
sahf
add
or
fs
sbb
push
imul
add
iret
pop
dec
lret
je
add
lret
xchg
into
inc
fwait
sbb
in
inc
cmpsl
add
jo
mov
push
mov
imul
push
push
and
jns
add
cld
inc
jae
jmp
cmp
je
push
sbb
ja
add
xor
add
push
add
push
das
xor
loopne
pop
mov
sbb
jno
out
into
insb
sbb
lcall
jle
sub
inc
push
xor
dec
sbb
and
jae
cmp
fbld
pop
ficomps
mov
popa
out
std
rcll
fwait
xchg
and
mov
cwtl
aam
push
jecxz
rcl
imul
daa
addb
aam
inc
and
mov
pop
add
pop
pop
popf
inc
lahf
negl
insb
push
sbbb
push
fisubrs
adc
cs
idivl
pop
and
add
std
jns
cmp
push
addl
bound
pop
rorb
in
inc
inc
dec
add
cmp
xor
imul
sti
push
subl
xchg
jbe
addr16
pusha
xor
stos
push
out
or
push
pop
hlt
rcrb
jo
or
ss
push
dec
shlb
inc
test
inc
adc
dec
push
adc
lods
pop
les
sbbb
sbb
sarl
or
clc
out
lock
repz
call
mov
mov
lods
test
out
sahf
out
mov
xchg
out
sahf
mov
repz
inc
cmp
stc
cmp
repz
sbb
cld
in
push
sub
cmpsl
lock
call
push
loopne
fcom
enter
cmp
mov
pusha
cmp
repz
cmp
sub
stc
cmp
repz
or
cld
in
out
sahf
cmpsl
hlt
in
in
int3
ficomps
mov
mov
js
sahf
out
fs
inc
sub
and
ja
iret
sbb
loopne
push
adc
inc
sub
xchg
add
adc
xor
or
push
push
dec
mov
mov
push
mov
jno
lcall
pmuludq
loopne
xchg
not
lock
push
cmp
loopne
nop
data16
xorb
call
adc
lret
dec
inc
add
jbe
inc
add
adc
mov
neg
mov
add
mov
inc
dec
pop
mov
pusha
addb
mov
xor
mov
daa
inc
push
mov
scas
imul
pushl
push
iret
jae
test
sbbl
dec
mov
addb
inc
lods
in
mov
push
pop
jo
jo
insl
pop
add
in
cmp
loope
les
add
outsb
pop
push
and
lret
sub
adc
xchg
cmp
insl
jbe,pn
and
cltd
addb
lahf
nop
and
outsl
xor
xor
ds
je
rorb
cmp
xchg
outsl
jb
imul
push
sbb
and
in
pop
mov
xchg
imul
or
inc
js
and
rcr
insb
and
pop
or
or
xorl
xchg
add
jae
popaw
insb
into
mov
jnp
pushf
jns
pop
andl
sbb
mov
pop
in
ds
inc
add
inc
pop
pop
adc
in
and
fcmovbe
add
les
xor
sbb
pushl
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
pushl
shll
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
lcall
out
aaa
std
aaa
adc
dec
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
jmp
cmpl
aad
fnstsw
cmp
cmp
cmp
cmp
sub
ret
call
aas
push
lock
idivl
or
incl
xor
xor
xor
push
xor
xor
js
popf
xor
xor
lcall
xor
xor
xor
xor
mov
xor
xor
xor
xor
jmp
inc
xor
xor
xor
xor
xor
xor
xor
cld
jmp
fidivl
scas
xor
shlb
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
sbb
cli
sar
jno
mov
aaa
loopne
add
or
jmp
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
lock
cmp
pop
cmp
cmp
cmp
cmp
cmp
push
adc
hlt
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
decl
adc
das
jo,pt
test
mov
aas
adc
aas
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
pushl
ljmp
xor
xor
xor
xor
xor
pop
xor
xor
pushl
mov
xor
xor
xor
xor
xor
xor
xor
pop
xor
pushl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
lcall
ret
push
aaa
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
popa
xor
dec
xchg
aas
inc
aas
pop
aas
ja
pusha
mov
push
or
cmp
pop
xor
clc
incl
xor
cltd
xor
xor
xor
xor
xor
xor
jg
jg
ret
xor
xor
lcall
aas
pushl
clc
xor
xor
test
mov
mov
nop
xor
out
in
mov
lock
clc
xor
cmp
pop
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
mov
jp
cmp
cmp
std
cmp
cmp
test
xchg
adc
sbb
cmp
cmp
cmp
ds
aas
jmp
pushl
cld
outsb
xor
xor
mov
ss
ss
xchg
cmp
cmp
test
lods
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
loop
pushl
lcall
cmp
adc
dec
aas
push
mov
cmpb
dec
mov
aas
lret
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
jg
pop
fisubrl
xor
loop
xor
xor
pop
jge
pushl
js
mov
xor
xor
scas
std
xor
cmpsb
data16
ss
add
or
aaa
and
pushl
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
decl
cmp
test
popf
cmp
xor
pusha
cmp
mov
clc
pop
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
jg
lcall
cmpb
cmp
push
stos
cmp
cmp
dec
mov
jg
fstpt
loopne
in
jmp
out
cmp
repnz
cld
stos
jbe
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
ljmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
add
sbb
cmp
dec
cmp
addr16
inc
cmp
lea
scas
cmp
jg
cwtl
ds
ds
call
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
daa
sbb
or
push
xor
insl
std
rcll
stos
lcall
fidivl
in
jg
sub
xor
xor
xor
xor
xor
ljmp
ret
xor
xor
xor
xor
xor
xor
mov
or
xor
xor
xor
scas
jno
xchg
xor
xor
xor
mov
xor
xor
xor
mov
ret
jge
xor
fwait
sahf
cmpsb
mov
bound
shlb
cmp
sbb
sub
jmp
aaa
cmp
mov
mov
dec
or
dec
cmp
cmp
cmp
cmp
dec
pop
adcb
decl
push
xor
bound
data16
push
outsb
jg
cld
aaa
jb
jbe
xchg
ja
js
jge
cmp
cmp
cmp
jg
stc
cmp
cmp
cmp
jle
mov
clc
jg
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
push
and
and
push
ss
fiadds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
repnz
jmp
cmp
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
fbstp
xchg
cmp
cmp
cmp
mov
and
cmp
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
pop
jg
or
mov
fwait
xor
xor
dec
or
jl
pop
push
repnz
aas
xor
incl
lock
pop
xor
fsub
adc
es
dec
ss
or
outsb
notb
ss
in
and
cmp
cmp
aaa
lods
xchg
cmp
mov
or
sbb
cmp
pop
push
pop
loopne
push
imul
cmp
test
mov
ret
cmp
pop
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
mov
sub
std
cmp
cmp
cmp
pop
sarb
inc
cmp
cmp
hlt
adc
cmp
ds
cmpb
cmpsl
ds
ds
subl
aas
sbb
addr16
loope
test
ret
fcoml
xor
xor
pop
xor
xor
cmp
or
xor
xor
xor
xor
cli
call
xor
mov
xor
push
lcall
clc
pushl
aaa
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
cmp
cmp
mov
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
js
clc
jmp
cmpb
aas
fdivrl
loop
out
out
pop
rclb
aaa
loope
lahf
sub
jne
adc
xor
jae
cmp
mov
pushl
jne
jg
xchg
xor
xor
xor
cmp
pop
daa
pop
hlt
xor
xor
ljmp
jg
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
jmp
int3
cmp
cmp
cmp
ljmp
push
out
xor
aaa
inc
clc
incl
cmp
inc
xor
xor
lcall
decb
call
xor
int3
mov
xor
xor
mov
xor
cmp
sub
sub
xor
fbstp
sarb
inc
cmp
cmp
cmp
sub
xor
fidivs
inc
mov
js
jl
cmpb
cmp
pop
adc
push
mov
push
loope
fmulp
cmp
mov
cmp
cmp
stos
stos
scas
ds
cmp
inc
lock
dec
cld
push
jg
ljmp
pop
stos
sbb
and
and
sub
pop
cmp
cmp
xor
cmp
inc
cmp
jg
xchg
dec
cmp
pop
cmp
cmp
insb
cmp
je
pop
incb
cli
jl
cmpb
push
mov
nop
cld
pop
pop
lcall
mov
aas
inc
loope
jmp
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
sarb
ja
aam
fdivrs
loopne
clc
jbe
push
filds
xor
xchg
xor
xor
xor
pushl
inc
xor
xor
cwtl
xor
xor
xor
xor
es
push
popa
cmpsb
cmp
sbb
fadds
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
jmp
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
aas
cli
pop
ret
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
call
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
push
nop
aaa
xchg
aaa
cwtl
into
mov
decl
aaa
mov
mov
aaa
enter
and
and
aaa
fdivs
fcompl
in
jno
inc
pop
out
aaa
hlt
xor
aaa
hlt
add
or
loopne
adc
adc
sbb
cmp
ja
mov
mov
jmp
cmp
pop
sahf
jl
cwtl
cmp
cmp
pop
idiv
sub
cmp
cmp
cmp
cmp
push
cmp
rclb
test
mov
mov
cmp
lods
cmp
mov
cmp
sub
pusha
add
or
jle
jg
mov
jne
call
sahf
repnz
lahf
das
pop
decb
es
add
out
out
out
jmp
adcb
lret
icebp
es
or
cltd
cld
fs
fucomip
inc
sbb
das
dec
movsl
add
lret
push
jmp
inc
add
add
mov
mov
scas
add
fimuls
jne
dec
add
movsl
push
add
fisttps
dec
or
add
xor
test
mov
xor
sub
or
add
sub
outsb
leave
repz
mov
lcall
sahf
add
dec
sahf
add
fists
or
fbld
je
cmpb
pop
jg
shrl
inc
mov
xchg
gs
sbb
push
sub
pop
sub
mov
inc
or
adcb
add
dec
mov
je
sbb
or
add
push
and
cltd
adc
fsub
enter
stos
scas
xchg
test
push
shl
lods
insb
fcompl
jb
pop
in
push
js
dec
and
sbb
jne
push
mov
or
scas
pusha
les
frstor
ffree
dec
clc
add
es
mov
enter
popf
out
loopne
or
shll
push
push
push
cmp
in
jo
xor
inc
xor
xchg
imul
insb
inc
cmp
inc
xchg
push
and
pop
push
xorl
push
sub
push
xorl
insl
popa
pop
stos
out
sbb
xchg
test
adc
addl
jl
sbb
sbb
or
xor
add
int3
mulb
push
arpl
jp
daa
dec
sarb
cs
clc
cs
or
xor
aaa
outsb
das
insb
outsb
and
or
std
mov
lea
call
jae
mov
mov
insl
add
pop
inc
lahf
xchg
add
rclb
sbb
add
mov
pop
decb
sbbl
lods
fwait
outsb
push
push
dec
adc
mov
mov
jmp
adc
lea
push
push
pop
jb
cmpb
shrl
add
insl
fnstcw
scas
sbb
cmpsb
aaa
or
movsb
inc
push
push
call
pusha
jbe
movsl
xor
mov
push
add
mov
push
mov
inc
ljmp
add
lahf
fidivs
pusha
fldln2
andb
call
pop
jmp
fdivrs
inc
sbb
xor
nop
add
add
sub
call
push
jb
lock
xor
and
adc
xchg
mov
inc
and
jge
cmpsb
xchg
push
inc
jmp
lret
and
fists
ljmp
mov
int3
mov
mov
call
lret
out
xor
cs
or
adc
xchg
and
adc
es
and
out
jg
pop
add
fmuls
push
adc
xor
add
push
jnp
cli
outsl
insb
inc
push
ja
dec
cld
sub
or
jge
lcall
ss
or
adc
or
xchg
cs
or
mov
jbe
jnp
inc
push
outsb
pop
mov
sahf
sti
call
aad
add
add
es
je
mov
lea
out
fildl
push
or
and
clc
and
ret
add
lret
pop
andps
das
add
pop
pop
cmp
out
jo
leave
inc
or
leave
mov
or
xchg
xchg
add
rcrb
dec
add
add
sbb
mov
jo
test
and
fcoms
push
mov
mov
cmp
or
jge
out
call
inc
mov
push
or
sti
pop
sbb
or
dec
clc
push
sbb
pusha
lret
inc
mov
adc
push
xchg
test
imul
inc
cltd
adc
and
add
xchg
pop
call
dec
pop
push
adc
ret
sbb
hlt
sub
in
inc
test
adc
push
fmull
or
sarb
sub
adc
dec
jmp
pop
call
mov
orl
or
mov
cmpsl
outsl
adc
cmp
or
or
nop
test
mov
test
xor
hlt
adc
jno
sbb
add
push
out
xchg
dec
adc
nop
xchg
repz
jbe
mov
sub
jl
pop
xor
sbb
mov
push
shr
inc
or
push
pop
mov
mov
ja
mov
add
and
jge
pop
cmpsb
xchg
mov
lods
xlat
call
loop
cwtl
add
rcr
lock
loopne
roll
rolb
mov
add
nop
loope
adc
push
ja
pop
sub
dec
and
add
cltd
loopne
movsl
adc
and
icebp
push
repz
xchg
dec
add
pop
push
in
neg
mov
subb
adc
sub
add
push
sbb
pop
xchg
test
lahf
sub
adc
lahf
cmp
pop
inc
mov
or
jne
xor
bound
sbb
xor
and
xor
sbb
xor
pop
int3
mov
and
dec
lret
add
mov
mov
jo
inc
jmp
or
mov
add
cmp
cmp
or
fcmovnbe
cltd
ret
or
dec
inc
rcrb
add
xor
and
test
enter
adc
xor
inc
add
stos
xchg
dec
and
lods
sbb
mov
and
mov
inc
and
test
sub
or
add
adc
push
jmp
mov
mov
out
xor
mov
inc
xchg
adc
inc
lret
sbb
popf
in
ds
mov
dec
sub
push
and
movsl
pushf
mov
and
or
roll
loope
xchg
mov
mov
push
push
mov
add
add
push
andl
jae
and
loope
push
push
mov
or
jp
jnp
mov
xchg
jnp
or
xchg
xor
adc
xor
jnp
sub
lret
xor
cmpb
sbb
rorl
arpl
xlat
push
push
pop
das
push
push
jmp
pop
adc
fldcw
inc
sbb
sbb
dec
enter
pop
emms
inc
xchg
xlat
jge
cmp
enter
andl
je
cmp
jmp
psubsb
pusha
dec
enter
fistpll
loop
sbb
call
call
das
or
push
and
or
lahf
addb
adc
sbb
addr16
ss
mov
pop
mov
dec
mov
or
lret
sub
adc
xchg
out
out
and
orb
cmpsl
popf
mov
push
cmp
jmp
or
call
or
sahf
ljmp
fs
out
es
inc
or
loope
dec
dec
push
call
incb
daa
mov
mov
enter
fadds
inc
inc
push
pop
xor
mov
cmpsl
push
add
cmpb
xlat
inc
adc
jbe
inc
shrl
icebp
sub
inc
push
mov
aaa
inc
sbb
adc
sub
mov
ss
sbb
xchg
and
sub
xlat
loop
and
sbb
adc
addl
dec
mov
or
or
lret
xor
pop
jle
mov
sbb
je
pop
and
and
or
cmp
add
xchg
or
inc
mov
scas
add
mov
cmp
out
sub
cmp
xor
pop
add
dec
or
dec
mov
jge
mov
xorb
cmpsl
and
ds
gs
pusha
pop
inc
sub
fisttpll
pop
inc
mov
pop
push
mov
ret
or
add
addr16
shld
jo
mov
fnstcw
pop
mov
mov
insb
lret
xchg
enter
mov
jae
bound
pop
pop
xchg
pop
dec
pop
mov
pop
xchg
and
cmp
nop
nop
push
adc
rolb
hlt
pop
push
pop
sub
mov
mov
fidivrs
push
pop
push
dec
or
jns
inc
cmp
or
sbb
jmp
jns
movsb
mov
sub
sti
pop
int3
and
pop
out
fstp
and
pop
nop
xor
push
push
jl
subl
push
jo
pop
push
mov
mov
repz
cmp
fadds
loopne
lock
rolb
push
pop
out
sbb
inc
sub
xor
inc
add
or
dec
in
out
push
push
or
and
stc
rcl
add
loopne
push
jns
rclb
and
dec
sbb
hlt
inc
push
sbb
rcrl
adc
push
mov
adc
test
or
mov
pop
or
xchg
push
test
hlt
push
hlt
mov
stos
pop
push
add
dec
mov
ret
out
lcall
xor
sbb
add
shlb
sub
sub
inc
xor
jb
sub
sub
sub
add
sub
sub
sub
and
nop
sub
cmpsb
jns
inc
sub
sub
xchg
xchg
sub
sub
pop
xchg
sub
dec
shll
sub
lcall
adc
movsb
imul
and
dec
testb
movsl
filds
adc
sbb
sbb
or
mov
add
ret
ret
xchg
shl
mov
subb
out
orb
push
push
je
lds
inc
jge
out
inc
fistl
stc
push
scas
or
inc
push
or
lret
ret
stc
push
add
sbb
adc
and
inc
lea
inc
fwait
mov
push
inc
and
rcll
inc
shrb
or
out
inc
sub
inc
sub
and
fstl
repz
mov
mov
cwtl
push
je
ja
adc
and
inc
sbbb
hlt
ds
pop
pop
xchg
lds
push
xchg
in
je
or
adc
mov
cmp
push
inc
pop
rolb
and
lods
inc
roll
and
add
outsb
and
and
lds
test
orb
xor
inc
xor
and
je
inc
cmp
mov
repz
inc
dec
sub
and
inc
out
mov
sub
call
cmpsb
inc
sbbl
add
push
fisttpll
jp
repnz
hlt
lea
dec
sbb
jns
mov
xor
mov
adc
xchg
cmpsl
cld
add
cmp
pusha
jns
pop
push
and
mov
stos
mov
mov
lds
pop
add
aaa
and
adc
xor
aad
adc
roll
cmp
adc
andb
pop
mov
lcall
mov
xor
les
aaa
xchg
lock
js
jns
jb
and
jns
sbb
push
sub
sbb
adc
xchg
into
daa
jns
and
fwait
or
dec
sbb
les
andb
mov
fwait
dec
mov
jns
pop
in
sahf
ljmp
mov
fs
jns
and
loope
scas
icebp
lret
lods
push
add
jp
daa
popf
xor
shlb
fistps
daa
xchg
push
mov
daa
mov
daa
xchg
jmp
adc
imul
ja
fs
mov
inc
daa
test
pop
push
rorl
call
enter
imul
dec
gs
push
outsb
adc
sub
dec
daa
jne
mov
xchg
xchg
inc
push
daa
rol
add
push
daa
enter
loop
pop
sbb
pop
mov
pop
sbb
lcall
scas
and
add
sub
shlb
mov
mov
mov
jne
adc
fcoms
inc
push
daa
mov
mov
fs
push
in
fimuls
scas
and
cwtl
dec
adcb
mov
pushf
call
loopne
inc
xchg
or
pop
test
mov
mov
add
inc
call
sbb
mov
and
push
xor
nop
jnp
adc
xchg
fs
xchg
nop
ret
dec
mov
mov
or
daa
xorb
inc
inc
push
xorl
or
jne
ret
mov
dec
pop
inc
push
daa
add
push
sbb
mov
adc
and
dec
or
imul
or
mov
jnp
mov
and
inc
cmpsb
into
movsb
cmp
fmuls
mov
push
and
sbb
cmp
pop
icebp
addr16
mov
xor
sub
sbb
pusha
push
inc
pop
cmp
push
jl,pn
enter
and
subl
adc
bound
mov
dec
nop
outsb
mov
pusha
andb
rcrb
adc
nop
fidivs
mov
adc
and
xor
xorb
sub
push
adc
loope
nop
into
sti
sub
not
mov
push
fcompl
cld
js
mov
stos
hlt
mov
movsb
mov
arpl
fs
cmp
inc
fs
dec
addr16
sbb
or
xchg
dec
nop
mov
or
fnsave
and
fistpll
mov
jo
xor
mov
cmp
mov
mov
dec
stos
mov
cwtl
and
outsb
xchg
mov
dec
pop
call
and
xorb
shlb
outsl
mov
aam
bt
jo
mov
inc
mov
ljmp
sub
jb
aam
and
or
dec
aad
dec
lahf
shll
ljmp
cmp
lcall
inc
jb
aad
lock
dec
jl
xor
push
or
pop
fistpl
or
filds
push
jmp
pop
push
inc
inc
gs
stos
inc
lahf
push
inc
push
cmp
add
or
or
sub
xchg
filds
inc
aad
add
cwtl
dec
fnstenv
cmp
pop
or
xchg
xchg
add
fidivrs
push
and
adc
mov
mov
mov
scas
or
mov
das
mov
hlt
or
add
out
add
cmp
inc
sbb
pop
and
sbb
mov
lret
call
push
pop
sub
inc
or
pop
dec
and
sbb
enter
adc
pop
les
lock
mov
adc
dec
pop
dec
lock
pop
add
and
sahf
push
lret
push
jmp
mov
mov
rcrl
mov
fs
test
cmpl
cmp
add
enter
jnp
stc
cmp
push
jp
pop
hlt
push
dec
loope
cmpb
loopne
in
add
jnp
das
shl
dec
and
jnp
jb
xlat
leave
sti
loopne
out
je
sub
mov
xchg
fsubl
rclb
dec
outsb
pop
xchg
xchg
mov
xchg
xchg
push
mov
roll
add
das
sbb
mov
inc
loopne
clc
adc
std
mov
adc
ret
mov
push
loope
adc
stc
mov
bnd
xor
xor
push
stc
mov
add
inc
and
push
stc
stc
fwait
cmc
push
movb
call
xchg
or
xchg
call
mov
adc
fs
and
dec
ds
test
sub
push
jb
xlat
mov
pushf
mov
sub
xor
in
stos
pop
jmp
sub
repnz
fdivl
and
pusha
xchg
jne
ret
xor
repnz
jmp
jmp
pop
int
aaa
jno
lcall
xchg
je
add
fildl
stc
mov
add
fcmovnb
add
inc
aas
mov
pop
aam
popa
lock
adc
addr16
and
sbb
iret
aam
js
out
adc
inc
adc
call
add
sbb
xor
pop
inc
jecxz
mov
inc
test
add
mov
cmc
sub
jmp
push
jmp
sbb
ret
call
mov
jno
loop
and
fdiv
je
sbb
cs
lock
push
ret
xchg
out
jae
xchg
js
jl
addb
cmpsb
mov
addb
rorb
xor
cmp
pop
and
shrl
inc
mov
aad
rcr
fstl
jo
cmpb
jl
dec
mov
mov
shrl
and
cmp
imul
push
inc
pop
pushf
shll
add
test
je
scas
shll
leave
pop
sbb
ftst
into
xor
les
xchg
sub
add
pop
push
lea
mov
or
mov
adc
arpl
xor
test
pop
or
and
add
loop
dec
in
xchg
pop
xorb
adc
push
fcomps
xlat
push
jmp
xorl
adc
repz
pop
test
xchg
pushf
mov
jno
adc
xor
push
xor
mov
adc
jo
pusha
adc
adc
xor
sbb
sub
or
sbb
lahf
nop
inc
sbb
aam
add
aam
cmp
inc
in
roll
fxch
mov
rcll
sub
xor
fst
cmp
lea
or
movsl
shrb
mov
adc
adc
dec
adc
cmp
sub
xchg
push
and
dec
adcb
adc
mov
dec
adc
add
xchg
push
dec
movlps
cmp
fiadds
push
adc
rorb
das
mov
mov
insb
jecxz
dec
xchg
pop
xor
stc
outsb
adc
movsl
lds
adc
das
add
and
dec
inc
adc
sub
dec
je
movsl
movsl
adc
sub
sbb
mov
adc
xchg
xchg
inc
fcoms
adcb
adc
mov
movsl
and
inc
cli
adc
sub
rcr
popf
jns
push
sub
dec
imul
rcl
or
ja
icebp
jnp
in
das
and
push
sub
dec
aad
dec
jb
fcoml
cmpl
dec
nop
jae
in
lret
pop
adc
ss
test
cltd
mov
ds
ss
call
dec
in
inc
popf
call
sub
nop
scas
dec
mov
flds
jb
jno
stos
dec
mov
or
lcall
js
dec
pop
insb
push
add
dec
dec
out
mov
lds
inc
mov
cmp
mov
faddp
add
mov
dec
mov
mov
aas
cmpl
sbb
pop
gs
sbb
or
jb
dec
sahf
in
push
pop
inc
loopne
and
lret
or
aam
pop
xor
push
fsubl
sbb
pop
pushf
mov
repz
mov
call
outsb
pop
aam
cmp
test
loop
aam
ljmp
push
enter
outsb
push
push
iret
pop
outsb
ret
aaa
test
es
xchg
in
aaa
test
xor
mov
subb
fwait
jo
or
ret
xorl
inc
in
mov
lods
jecxz
pop
jp
faddl
ret
or
or
mov
add
mov
enter
mov
mov
aaa
out
jns
adc
jno
sbb
sbb
aam
int
or
shll
push
and
pop
test
push
jns
jecxz
loopne
xchg
pop
aaa
pop
and
xchg
and
pop
and
add
sbb
jle
adc
or
iret
rclb
cmp
rorb
or
pop
fisttpl
or
cmp
arpl
in
scas
jb
push
bound
sbb
dec
xchg
leave
jecxz
adcb
int3
stc
jp
nop
jb
mov
pop
push
jo
or
push
pop
pop
pop
pop
bound
dec
mov
inc
mov
sub
and
or
add
lret
lret
lret
lret
call
mov
lret
lret
enter
mov
lret
lret
lret
test
mov
mov
mov
push
sbb
and
pop
mov
push
jb
cmpl
xor
enter
adc
in
cld
mov
push
jb
mov
and
jns
lds
nop
sbbl
mov
enter
cmpb
and
cmp
push
mov
sbbl
xor
inc
push
sbb
mov
stc
mov
push
jb
sbb
int
ret
cmp
inc
mov
lods
mov
in
xchg
mov
push
jb
mov
and
jns
pop
mov
nop
sbbl
mov
call
mov
and
and
int
dec
xor
clc
shll
and
dec
nop
or
or
mov
and
or
push
cld
xchg
mov
add
dec
xor
ja
adc
gs
daa
int
or
or
rorb
int
dec
xor
sbb
and
or
stc
mov
inc
xor
inc
dec
ror
xor
dec
cli
cmp
mov
ss
test
pusha
mov
inc
dec
mov
adc
add
pop
inc
and
movsb
push
inc
bound
js
mov
and
xor
sub
mov
mov
test
push
sub
cltd
jno
pop
ret
shlb
push
mov
hlt
imul
test
mov
icebp
inc
xchg
lea
xchg
rcrl
inc
add
inc
lods
push
add
xor
jg
or
xor
sub
mov
imul
imul
nop
dec
test
scas
fistpl
sub
add
pop
cmp
dec
xchg
xchg
mov
cs
inc
dec
test
and
jmp
xchg
shl
in
mov
sbb
hlt
add
dec
inc
xchg
mov
mov
dec
xor
nop
dec
js
mov
dec
mov
nop
and
xchg
push
inc
jl
dec
movsb
stos
dec
mov
cmp
fbstp
xor
dec
fistpll
popf
loop
movsl
dec
leave
rcr
jo
sarb
dec
mov
sub
cmpsb
sub
mov
jle
and
outsb
pop
pop
mov
and
and
dec
xor
and
imul
push
cmp
or
dec
js
add
nop
fstps
popf
frstor
xchg
or
dec
pop
pop
and
xchg
mov
iret
scas
xlat
test
enter
mov
and
add
femms
sbb
dec
andb
sub
push
pop
push
or
dec
push
pop
mov
pop
adc
or
push
dec
sub
dec
mov
lock
sarb
dec
push
sarl
imul
je
and
dec
inc
xchg
in
adc
int
movsl
push
xchg
and
push
loopne
dec
pop
rclb
stos
push
push
loop
dec
sub
lock
shlb
dec
cmp
nop
and
pop
inc
and
sbb
inc
dec
xor
lock
call
arpl
sub
movsl
sti
adc
adc
sub
cmpsl
dec
inc
loop
nop
dec
mov
sti
and
and
call
sti
dec
cmpsl
cli
or
fdivr
xchg
pop
jp
and
sbb
xchg
out
push
dec
inc
sbb
nop
movsl
fsave
adc
loop
movsl
cmp
lods
dec
loopne
loope
or
repz
shlb
dec
lods
push
pop
jb
adc
cmp
dec
jno
and
xlat
enter
inc
call
fnsave
dec
sbb
dec
aaa
push
pop
lods
inc
xchg
push
dec
and
icebp
dec
dec
aaa
mov
sbb
dec
add
cmp
lea
nop
movsl
fisttpl
xor
loopne
add
movsl
mov
dec
push
pop
adc
cmp
dec
jmp
ja
popa
nop
test
dec
pop
sbb
xchg
push
xchg
inc
cmp
in
testb
sub
in
enter
leave
sub
popl
mov
cs
jmp
imul
sbb
inc
lcall
rorb
jp
sbb
mov
xor
or
xchg
inc
xor
fldl
push
push
dec
sbb
je
ss
dec
xchg
enter
cmc
or
dec
shrb
pop
in
xchg
dec
sbb
dec
push
shl
add
dec
push
inc
cmpsb
push
enter
rcl
and
cltd
addb
lock
xchg
pop
sbb
xchg
popa
stos
push
dec
repnz
dec
ja
enter
pop
jb
and
sbb
adc
std
mov
dec
pop
jp
add
out
mov
and
push
xlat
and
add
dec
nop
mov
out
test
xor
push
xlat
and
dec
xlat
and
loop
xorb
mov
push
sbb
dec
jg
addb
mov
cs
stos
dec
pop
sbb
loopne
push
dec
pop
ret
push
pop
dec
stc
push
jo
shlb
dec
enter
push
ret
jno
xchg
repnz
mov
push
pop
mov
dec
sub
mov
fimuls
pop
jmp
dec
addr16
clc
mov
dec
adc
ja
jb
xor
enter
pop
xchg
pop
push
or
dec
mov
cmp
jp
lret
sbb
cmp
pop
dec
and
or
inc
imul
inc
inc
inc
adc
and
lea
cmpl
int
into
dec
lret
sub
and
and
scas
or
xchg
xchg
out
mov
mov
xor
pop
iret
cmpsb
mov
and
push
cltd
jmp
and
mov
cmp
pop
pop
mov
sbb
leave
sbb
fildl
push
jmp
xchg
mov
mov
movsb
mov
and
pop
mov
pop
lcall
cmp
aaa
cwtl
push
jns
popa
adc
lret
popf
in
mov
xor
clc
sbbb
adc
gs
mov
outsl
push
push
cltd
push
andl
movl
sbb
xchg
in
jle
movb
push
mov
jmp
fsubl
cmpsl
fnstcw
mov
repz
inc
aas
sbb
repz
dec
pusha
jo
aam
sahf
out
ds
adc
push
bound
out
outsb
jp
xchg
cmpsb
repz
out
into
fsubrp
add
push
xor
jb
cmp
repz
cmpsb
mov
fdivrs
out
repnz
push
sub
out
sahf
out
pop
data16
lahf
out
sahf
cwtl
scas
loopne
push
stos
cmp
repz
cmp
push
pusha
repz
rep
jbe
xchg
movsb
sbb
call
mov
dec
fwait
int3
jnp
gs
lea
adc
adc
push
adc
insb
push
int
xor
inc
add
cmpsb
pop
movsb
sbb
push
fcoms
sbb
divl
aad
outsb
cmp
jl
ss
testl
mov
movaps
or
inc
aam
mov
xorl
jns
repz
mov
add
sub
out
test
adc
adc
repz
jnp
adc
xchg
sbb
sbb
jns
out
xchg
js
or
mov
push
push
pop
sahf
mov
sarl
and
and
js
repz
xor
sbb
sbbl
hlt
call
or
push
add
adc
enter
addr16
mov
aas
sahf
ss
push
xchg
or
xor
xor
out
sbb
add
xchg
hlt
repz
repz
iret
repz
enter
mov
cmp
movsb
mov
iret
repz
nop
mov
iret
cmpb
insb
cmp
repz
fs
pop
pop
repz
repz
push
dec
dec
inc
iret
repz
inc
cmp
xor
sub
iret
repz
sbb
or
nop
jns
out
in
les
fs
and
inc
popl
sarb
cmp
js
dec
dec
stc
cmp
repz
xor
clc
mov
jns
cmpsl
call
iret
sarl
or
enter
data16
cmp
xor
push
add
fucomp
mov
mov
addb
outsl
pop
mov
adc
mov
and
push
aad
xor
xor
xor
push
push
add
inc
push
xchg
mov
xor
or
sub
push
xor
xor
mov
ja
and
out
shlb
js
push
add
out
mov
mov
jbe
sbb
daa
add
and
dec
ret
insl
daa
aas
xchg
loop
sub
mov
and
push
in
push
jmp
mov
inc
add
mov
iret
test
mov
mov
jg
das
xor
inc
push
pop
pop
addr16
adc
sub
ficompl
and
rcrb
insl
xor
test
daa
orb
push
jl
rcrl
inc
push
ja
aas
mov
daa
shlb
fsubrs
inc
pop
dec
jb
popf
jge
xor
cmp
in
adc
push
pop
pop
inc
cmp
sub
sbb
cmp
sbb
jg
inc
ret
out
dec
mov
aas
or
int3
or
enter
cmpsl
aaa
jno
or
mov
mov
jne
sar
aas
enter
adc
fwait
pop
pop
or
unpcklps
rcrl
fistpll
icebp
int
xor
les
xchg
nop
imul
inc
fildll
push
mov
push
insl
sbb
shl
js
movsb
aaa
add
aam
inc
and
dec
enter
mov
pop
sti
fiadds
iret
dec
jno
daa
jb
jbe,pn
ud2
jno
pushf
sbb
sub
xchg
movsl
add
mov
pop
mov
add
mov
rol
lds
adc
in
mov
xchg
cmpsl
daa
add
loop
scas
cld
andb
arpl
jb
jno
pop
inc
aas
inc
jecxz
adc
outsl
jne
lret
ja
push
push
arpl
add
movsb
sarl
outsl
and
loop
mov
mov
cli
pop
imul
adc
inc
mov
push
sub
ffreep
dec
and
and
lea
inc
arpl
lret
pop
mov
inc
sbb
mov
aaa
outsl
jp
xor
or
mov
sub
xchg
push
pop
xor
dec
ret
sub
mov
rol
roll
iret
sbb
adc
arpl
push
adc
arpl
lea
jmp
adc
rcll
lea
pop
cmpsl
aas
inc
inc
xor
iret
lea
xor
orl
inc
xor
pop
xor
orl
jge
inc
arpl
adc
addr16
lea
pop
lea
and
adc
bound
push
add
mov
mov
add
jbe
aad
stos
loop
dec
mov
mov
xchg
xor
pop
lahf
pusha
mov
incb
aam
sbb
inc
xchg
movsb
xchg
div
cmp
repz
pushf
cwtl
xchg
nop
mov
repz
test
pop
push
jns
out
pop
dec
inc
inc
cmp
out
sahf
out
xor
and
out
sahf
and
adc
xchg
sahf
testl
in
jns
out
enter
test
jno
out
mov
mov
insb
push
fs
push
out
lret
mov
push
and
jns
ja
add
in
xchg
push
enter
jns
out
test
cwtl
nop
cmp
jnp
mov
pop
jns
iret
repz
cmp
push
adc
cmp
out
lock
loopne
mov
mov
xchg
insb
pop
and
xor
pusha
dec
add
push
mov
ret
mov
test
into
xor
inc
push
test
push
ljmp
enter
pop
adcb
sub
push
add
inc
sub
push
faddl
call
jg
sub
fldl
in
pop
enter
das
mov
jbe
outsb
stos
lcall
cs
xchg
or
mov
iret
test
adc
mov
incl
sub
mov
add
jg
mov
mov
lcall
mov
xor
xor
xor
sahf
xor
inc
xor
xor
xor
aaa
fbstp
lea
outsb
andb
cmp
cmp
cmp
cmp
notb
cmp
bound
push
leave
mov
cmp
int
das
sahf
fdivrs
bound
cmp
xchg
lahf
incl
cmp
mov
and
pop
ds
ds
jg
mov
add
fs
imul
aas
jecxz
call
test
and
sub
inc
xor
mov
mov
xor
push
shl
loope
sbb
push
out
xor
repnz
pop
xor
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
lea
pop
or
adc
xor
xor
xor
orl
xor
sbb
dec
mov
adc
sbb
sbb
incl
sub
sub
xor
xorb
xor
inc
std
ss
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
icebp
inc
xor
insb
ss
xorl
out
push
xor
outsl
nop
jp
aaa
cmp
insb
cmp
sbb
test
adc
sbb
ret
push
ret
clc
sbb
and
and
sub
xor
jp
inc
sbb
incl
repnz
cmp
pop
or
xor
cmp
test
mov
mov
ss
and
cmp
cmp
cmp
inc
idivb
cmp
cmp
sbb
xor
cmp
or
cmp
pop
cld
cmp
add
dec
ds
ds
cmp
dec
push
sbb
xchg
mov
dec
shl
in
aas
repnz
and
inc
xor
xchg
lock
xor
xor
sub
push
ret
xor
repnz
xchg
jno
dec
xor
aam
fimull
xor
xor
push
xor
repz
push
mov
test
lret
push
add
ss
pop
aaa
mov
aaa
in
lcall
sbb
sub
cmp
pushaw
cld
icebp
cmovb
jle
xchg
or
stos
push
mov
mov
ret
sub
pop
adc
shrb
jecxz
ss
cmp
imulb
xchg
jb
cmp
cmp
nop
mov
adc
ja
xor
jnp
adcb
mov
cmp
cmp
cmp
and
lods
es
in
jmp
out
xchg
icebp
cmp
cmp
ljmp
push
xchg
xor
inc
jp
fistps
pop
insb
cmp
cmp
cmp
cmp
cmp
xor
jg
sub
ds
ds
ds
clc
or
or
adc
and
dec
aas
push
aas
or
fdivs
sbb
pop
loope
sbb
jno
test
clc
xor
jl
or
inc
daa
loop
jg
mov
or
in
cmc
xor
xor
sar
dec
mov
xor
insl
xor
test
jno
mov
popf
xor
xchg
loope
xor
aaa
jnp
or
mov
add
or
cmp
sbb
rolb
xor
clc
loope
cmp
xchg
cmp
gs
sub
popf
sahf
inc
cmp
mov
mov
pop
cmp
cmp
inc
sub
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
clc
cmpsb
test
ja
cmpb
icebp
ja
pop
cltd
cmp
cmp
cmp
rorl
jecxz
sbbb
sub
pushf
jne
loope
xchg
inc
incl
xor
lock
xor
ja
mov
pop
push
cmpsb
xor
fbstp
or
xor
pushl
cltd
xor
adc
sbb
das
ss
mov
mov
lret
mov
dec
pop
cmp
incb
ja
mov
lret
cmp
cmp
cmp
inc
sbb
mov
mov
jmp
imul
cmp
cmpsb
cmp
cmp
cmp
test
lahf
cmp
stos
aas
mov
scas
pusha
add
xor
xor
xor
test
xchg
sub
jg
mov
fbstp
icebp
push
stos
pusha
orl
dec
outsl
cli
mov
xor
ss
aaa
gs
xor
mov
cmp
cmp
cmp
scas
or
cmc
inc
push
xor
loope
sbb
outsb
and
loope
xchg
into
sub
cmp
jb
xchg
push
and
jnp
mov
lcall
cmp
xor
ret
cmp
xor
sbb
mov
xor
xchg
ret
xor
xor
cmp
clc
add
cwtl
xor
aaa
mov
xchg
or
mov
xchg
mov
movsb
jle
je
mov
aam
in
xor
add
jno
xchg
stc
int3
out
adc
sub
xchg
jno
mov
js
jl
and
mov
enter
mov
mov
fcmovb
xor
int3
xor
sub
ljmp
call
inc
sub
or
adc
scas
mov
cmp
inc
xor
jg
lea
push
xor
xor
clc
push
xor
insb
push
je
add
mov
xor
cwtl
xor
xor
and
mov
and
bound
lods
divb
je
xor
aaa
mov
lock
add
jle
jp
mov
push
xor
push
mov
mov
int3
xor
cmp
inc
xchg
dec
add
shll
sahf
fiadds
fsubrs
pop
sar
cmpsb
xor
inc
xor
xor
xchg
inc
sbb
movsb
jnp
loop
mov
bound
xor
pusha
shrl
jecxz
xorb
movsb
add
out
xchg
inc
shlb
loope
sbb
stos
sbb
mov
pop
faddl
mov
cmp
out
xor
dec
xor
data16
mov
sub
xor
jb
test
aas
repz
cld
cmp
inc
cmp
xchg
dec
xchg
push
lcall
mov
xor
jp
xor
xor
xor
xor
xor
xor
xchg
push
test
adc
pushf
xlat
test
lods
addr16
rol
xor
test
xchg
xlat
mov
fs
mov
dec
sub
cld
pop
jo
nop
ljmp
pop
dec
ljmp
inc
dec
inc
and
push
nop
cmp
dec
or
add
add
add
add
or
pop
pop
push
or
or
or
or
or
push
adc
push
adc
adc
push
adc
mov
jmp
add
or
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
insl
imulb
clc
inc
add
or
xchg
add
add
adc
ljmp
add
inc
mov
rclb
jb
imul
call
add
push
adc
xchg
std
incl
and
xor
inc
mov
adc
xor
cmpb
cmp
mov
xor
shlb
add
sub
mov
xchg
icebp
nop
ret
jecxz
and
inc
inc
or
stos
xor
rcrb
lahf
xchg
ret
subl
push
or
or
ja
adc
push
adc
or
inc
push
pop
popa
jno
and
adc
mov
or
xor
clc
and
lock
loope
icebp
mov
and
mov
xorb
scas
fiaddl
or
push
orb
dec
mov
std
or
add
lds
ljmp
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
test
lcall
mov
movsl
jecxz
cli
pop
mov
filds
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
incl
shlb
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
cmp
call
mov
orb
int3
lcall
mov
push
pop
mov
pop
pop
ljmp
test
in
rorb
sti
ret
scas
adc
mov
xor
ljmp
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
mov
ss
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
fisttps
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
decl
mov
int
arpl
push
out
or
mov
push
sahf
pop
clc
sti
jg
jno
lock
jg
in
call
sarl
xor
hlt
and
xchg
jmp
sbb
subb
add
dec
cld
jmp
in
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
mov
loope
mov
sar
andl
aas
icebp
testb
mov
push
push
pop
xor
jns
mov
in
repnz
jno
jecxz
decl
jg
scas
cld
or
push
inc
sbb
paddb
mov
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
std
decl
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
sti
idivb
in
add
inc
adc
loope
fisttpll
out
mov
out
aas
std
cli
push
push
push
idivl
cmp
sub
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
pushl
cmpsb
orb
mov
insl
fistpll
das
jmp
xchg
pop
clc
pop
hlt
lret
mov
add
lea
jg
gs
std
xorb
cmc
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
lcall
in
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
ljmp
loop
jge
push
shrl
mov
push
mov
adc
and
in
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
sbb
fadd
or
mov
nop
enter
add
cld
call
js
cmp
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
jbe
das
clc
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
decl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
and
push
push
jo
pusha
imul
add
mov
cmp
in
jmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
jae
incl
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
mov
adc
pop
cld
addl
adc
and
loopne
push
cmp
fmull
enter
jecxz
scas
incl
jmp
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
shr
mov
or
cld
inc
or
sti
lds
pop
jg
add
jg
mov
aad
pop
in
divb
xchg
movsb
mov
iret
push
pushl
push
sbb
stos
icebp
pop
incb
jno
sti
fcomip
call
push
inc
jecxz
sbb
sarl
adc
loopne
sbbl
xorl
aad
mov
and
cmp
dec
push
js
mov
aas
mov
fsubrl
lock
incl
ss
and
clc
xchg
inc
rcrl
sbb
jne
push
and
mov
adc
xchg
lahf
or
push
rcrl
rolb
pop
inc
jb
jge
aas
fistpl
adc
call
jno
pop
dec
jg
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
inc
call
sbb
or
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
adc
stos
pop
add
dec
in
stc
clc
pushl
mov
lahf
les
sbb
sbb
cld
loop
pop
fiaddl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
movsl
loopne
test
clc
pop
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lock
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
loopne
loop
lahf
mov
or
out
lcall
mov
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
lcall
cmp
cld
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
push
jnp
jmp
insb
sbb
cwtl
inc
mov
insb
loopne
jnp
test
aas
repz
sbb
lock
in
jmp
or
mov
clc
push
std
mov
rcl
icebp
or
mov
pushl
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
hlt
mov
clc
out
rolb
pop
or
or
mov
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
xchg
imul
pop
in
cmp
aaa
push
mov
fidivs
clc
adc
jmp
hlt
pusha
jg
loope
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
loope
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
les
icebp
das
incb
lock
pop
pop
div
cld
negl
or
js
fs
sub
fisubrl
jmp
push
lock
jge
fbstp
out
xchg
cld
paddsw
add
out
icebp
mov
loope
mov
cmpsl
popf
enter
sti
mov
fbstp
and
push
xor
outsl
das
insb
jp
or
out
cmp
das
js
fsubrp
popf
js
data16
decb
adc
mov
mov
mov
and
call
xlat
nop
cltd
add
jo
mov
js
int
add
push
pop
aaa
std
filds
dec
inc
sbb
idiv
jg
xchg
fimull
ret
ror
sbb
jmp
push
pushf
jecxz
jg
mov
sub
mov
pop
clc
loope
adc
and
dec
add
mov
sbb
sub
xchg
fldenv
iret
fdivrl
xchg
lcall
loopne
dec
fimull
sti
push
push
xor
sarl
pop
out
dec
inc
sub
jg
jno
ret
fs
pop
dec
push
inc
arpl
out
inc
incl
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
fwait
cli
dec
xchg
imul
lods
or
mov
std
mov
daa
jmp
faddl
sbb
xchg
aaa
inc
test
sar
ljmp
lock
stc
push
dec
out
fstpt
mov
enter
jns
pop
add
fsts
dec
lret
add
pusha
dec
sti
push
sti
pop
cltd
mov
push
push
push
mov
in
push
nop
mov
test
decl
jecxz
dec
lret
fcoms
ljmp
pop
mov
jmp
jle
addr16
jae
enter
bound
push
cmp
out
daa
decl
mov
lea
mov
fsts
aaa
leave
aad
stos
push
pop
enter
inc
scas
push
and
mov
stc
mov
call
adc
adcl
pop
loopne
lcall
je
push
pop
addr16
mov
sub
add
mov
decl
jg
adc
call
jb
add
xor
mov
sbb
int3
outsl
xchg
mov
jmp
cwtl
jae
std
xor
or
lahf
notl
jno
in
mov
inc
das
scas
rol
cmpsb
ljmp
jecxz
cmp
fldl
mov
std
lods
inc
loopne
sarl
adc
xor
lods
cmpb
xor
je
dec
xor
dec
jg,pn
fs
mov
jbe
mulb
lods
lea
cmp
incl
xor
lea
xchg
sub
or
pushl
dec
dec
adc
and
enter
and
rolb
lcall
xchg
adc
jne
into
std
insl
lret
nop
cmp
mov
aad
fimull
cmp
sub
push
pop
filds
cmp
xor
lods
or
pop
lcall
ds
fdivs
push
prefetch
or
dec
ljmp
mov
pop
daa
jge
push
ss
add
addr16
loopne
mov
int
cmpsl
lcall
flds
inc
subb
cmpsb
lret
fimuls
pushf
movsb
jnp
loope
popf
setb
inc
sbb
lret
jbe
fmull
mov
iret
mov
adc
out
decl
cmpsl
dec
in
jbe
push
lahf
rcr
shrb
pop
sti
iret
xchg
jmp
stos
orb
fimull
pop
mov
push
adc
jp
adc
mov
enter
jne
decl
cmp
xor
fcomip
jnp
push
pop
push
xchg
xchg
xor
xor
lods
xchg
incl
rclb
or
sbb
aas
in
sbb
jle
aad
cmpsb
sub
dec
jb
fisubs
decl
mov
jbe
aaa
pop
js
cli
aaa
and
ret
cltd
cltd
dec
mov
pop
mov
lds
dec
xchg
iret
cmp
adc
out
or
push
adc
jg
inc
xchg
loop
imul
xchg
je
cli
in
fisubrs
or
incl
sub
daa
movsb
lret
jnp
cs
test
into
mov
aam
push
sahf
sbb
incl
cmc
je
pusha
aad
aad
iret
cmc
dec
mov
lds
jno
outsb
fadds
int3
gs
lcall
jo
adc
pop
ret
loop
ret
stos
xchg
and
sbb
ret
popa
call
mov
mov
cmpsb
adc
rolb
sub
adc
imul
inc
add
jmp
stos
sub
mov
adc
mov
pushf
pusha
mov
out
nop
arpl
or
sbb
cmp
sarl
mov
insb
jo
loopne
aas
loop
das
jecxz
sbb
ret
decl
adc
and
xchg
or
mov
pop
test
sub
adc
les
loop
pushl
std
xlat
jns
popf
cmp
in
out
pop
sub
fisttpl
push
les
and
out
out
clc
jmp
and
es
std
decb
test
lods
sub
cli
sbb
mov
jb
stos
daa
dec
cwtl
test
dec
mov
xor
pusha
sarl
js
cmp
mov
and
cmp
jge
and
xchg
test
lods
fdiv
aam
es
cmp
inc
mov
pop
dec
loopne
jg
mov
ljmp
xchg
arpl
inc
cli
jmp
xlat
int3
fisttps
iret
fisttpl
stc
and
pop
icebp
fcmovu
enter
ljmp
fildll
repnz
rclb
movsb
dec
les
lcall
or
pop
rcrb
push
subb
and
lock
pushf
dec
cld
cmc
cmp
mov
mov
xchg
push
fstps
push
push
loope
jp
cli
sbb
data16
sbb
pushl
dec
adc
xor
sub
lcall
pop
mov
lds
sahf
aaa
rcl
lcall
daa
mov
and
xor
inc
xor
ljmp
dec
mov
stc
ljmp
inc
lcall
ljmp
das
push
rcrb
push
push
popa
jb
add
pop
xchg
xor
xchg
sbb
decl
es
and
ss
xchg
test
test
stc
adc
ds
ljmp
adc
jmp
and
push
in
ss
ret
dec
adc
popa
inc
xlat
int
lcall
fnstsw
js
xchg
cs
or
sub
mov
mov
push
pusha
adc
pop
xchg
andps
fwait
cmpsl
xchg
mov
and
mov
add
js
cltd
out
js
in
pop
add
out
test
pushl
pop
mov
lcall
out
insl
pop
mov
push
aam
rcrb
and
xor
mov
test
add
cmpl
mov
out
mov
adc
subb
rcrb
or
sub
lcall
adc
roll
andl
ret
call
shr
iret
sub
jns
jmp
cmp
pop
stc
cmpsl
ja
hlt
pop
popa
stc
lahf
lods
cmp
jbe
out
ja
fldt
clc
ljmp
fsubr
push
or
mov
adc
insl
sub
shrl
and
pop
icebp
std
push
clc
and
pusha
push
ljmp
dec
push
jle
add
adcb
pushl
mov
push
popf
dec
addr16
rclb
arpl
shl
mov
es
sub
inc
sub
xchg
fwait
or
pop
adc
popa
push
sub
add
add
and
pushl
jo
aam
cmp
out
push
aaa
jecxz
push
push
inc
xchg
xor
push
fdivl
adc
mov
push
mov
inc
stc
dec
adc
dec
jmp
dec
faddp
and
lods
vunpckhps
decl
sub
test
adc
dec
xor
adc
mov
pop
popa
pushl
ud2
ret
clc
add
std
mov
lds
sub
or
lds
jecxz
insb
fcmovnb
push
imul
xor
and
push
cmp
cmp
div
add
fidivrs
and
cli
outsb
xor
jp
lcall
pop
mov
push
bswap
mov
sbb
adc
jg
hlt
adc
sbb
shlb
and
jb
testb
pushf
outsb
popl
js
pop
ljmp
pop
fsubs
aas
insb
andl
sti
into
insl
dec
jmp
xor
jmp
sti
in
adcb
mov
sbb
lods
nop
shlb
jmp
dec
add
cmpsb
and
data16
or
dec
lods
loopne
lret
mov
cmp
fs
jmp
mov
sahf
enter
fcmovb
aas
fidivl
daa
scas
adc
inc
add
aam
pushf
fistpl
jmp
fnstcw
fldt
push
push
sub
cs
jg
rcrb
dec
stos
lock
les
or
cmpb
popl
lcall
jmp
imul
mov
lcall
addr16
cmp
pusha
mov
hlt
lcall
lods
cmpb
leave
sbb
dec
shlb
stos
pop
inc
pop
lcall
frstor
or
aad
je
pushf
mov
xchg
mov
shrl
hlt
push
loopne
fdivl
clc
fsubrs
fs
loope
add
jmp
mov
test
loop
pop
fisubs
in
sub
test
xor
xchg
mov
aaa
hlt
repnz
jg
mov
test
lcall
roll
ss
cmp
push
and
pop
mov
shll
ljmp
lds
lods
es
dec
inc
fistl
in
test
dec
ror
cld
xor
pop
mov
outsb
mov
jmp
dec
or
sahf
fs
xchg
jmp
jmp
xchg
cmp
idiv
mov
inc
jge
xchg
inc
scas
mov
mov
xchg
cmp
fcomip
decl
push
mov
adc
cmpsl
add
addr16
bsf
out
clc
pushl
ljmp
leave
call
shll
int3
cmp
movsb
rolb
pushl
dec
test
incb
or
aam
xchg
dec
adc
push
cmp
dec
lods
sbb
add
cmp
push
sahf
and
mov
adc
leave
mov
xor
pop
clc
loop
aam
dec
xlat
lock
call
addr16
or
adc
xor
sub
fdivr
lcall
arpl
push
xor
push
inc
adc
xor
and
dec
cmpl
clc
dec
or
call
add
movsl
cwtl
je
add
add
fldl
or
push
sarb
mov
or
inc
leave
jle
test
sarb
inc
jle
ljmp
in
ds
movsb
pop
out
mov
mov
in
add
das
inc
add
call
adc
stc
mov
pop
fldenv
inc
pusha
cmp
and
sub
sbb
call
xor
arpl
mov
inc
lds
inc
mov
dec
and
lret
mov
hlt
cmp
icebp
stos
enter
cmp
push
shlb
and
call
mov
sub
lahf
js
pushf
sbb
or
cmp
push
pop
loope
int
imul
jl
pop
mov
push
ljmp
xor
push
mov
ja
mov
mov
aas
stos
push
mov
xlat
mov
rcrb
test
int3
mov
mov
shrl
xlat
rclb
lcall
mov
or
stc
insl
push
fbld
adc
addr16
xchg
and
xor
lock
xchg
or
bound
push
mov
jmp
sub
ljmp
bnd
jmp
pop
sbb
pop
cmp
sbb
test
xor
pusha
in
xchg
sbb
call
mov
dec
adc
xchg
movl
hlt
call
in
iret
xlat
cltd
inc
push
icebp
cmpsl
movsb
cmpsl
mov
lds
dec
jno
inc
cmpsb
imul
lcall
lods
mov
stos
jne
hlt
xchg
outsb
cltd
pop
pop
inc
mov
sub
mov
sub
stos
mov
rcrb
lods
fildl
std
stc
sub
dec
inc
ss
inc
mov
push
lock
int
shl
or
sub
inc
out
aam
in
nop
or
and
jne
adc
lea
pop
ljmp
mov
ljmp
mov
lods
mov
sub
lret
adc
pop
xchg
mov
xchg
jle
mov
enter
xor
mov
xorl
mov
call
aad
xchg
je
mov
outsl
outsb
sbbb
es
sbb
xor
cmp
pushl
in
cmovb
inc
test
xor
scas
in
jmp
mov
hlt
adc
inc
jp
add
ljmp
outsl
xor
pop
xor
std
ljmp
into
mov
jo
dec
mov
push
jg
add
adc
sahf
xor
jge
jg
call
jl
cmp
shr
stc
stos
or
andb
mov
sub
mov
cld
andb
mov
inc
mov
clc
lret
pusha
leave
mov
rclb
push
loop
lcall
lods
jnp
mov
call
movups
fdivrp
cmp
dec
sub
jb
push
movsl
rcr
add
xchg
pop
xor
repz
lcall
cmp
jbe
fstpt
ret
mov
xor
cmpb
fistpll
std
ljmp
lret
ret
orb
push
pop
jo
jno
jnp
mov
pushl
jne
dec
xchg
lods
xorl
repz
lods
xchg
inc
push
sub
dec
dec
outsl
ljmp
out
mov
mov
cmp
add
pop
dec
mov
push
mov
pop
fs
movsb
incb
push
imull
sub
in
popf
mov
pcmpeqd
pushl
fwait
pushf
and
inc
xchg
mov
hlt
xchg
nop
push
pop
jmp
ja
and
jp
outsl
lret
inc
loope
mov
daa
push
xor
xchg
mov
xchg
scas
jle
jns
mov
mov
jge
pusha
les
xchg
mov
mov
hlt
fidivl
xchg
jae
loop
dec
push
rcll
movsb
fcmovne
xor
xchg
dec
pop
jmp
popa
and
push
popa
stos
mov
vmovaps
scas
mov
inc
nop
js
or
pushl
cwtl
pop
dec
lock
addl
pop
adc
xor
pop
and
pushl
pop
enter
xlat
in
xchg
leave
cmp
pop
and
cmp
leave
stos
push
imul
rcl
mov
decl
mov
ret
mov
insl
xor
add
jp
dec
mov
mov
ds
jno
mov
fwait
xchg
and
sub
add
jmp
sar
dec
fcomps
out
cmpsl
dec
adc
repnz
enter
cs
dec
push
xchg
jmp
xor
push
sub
je
test
adc
shr
mov
add
or
jae
push
push
jbe
push
push
inc
fmul
adc
jb
xchg
xchg
minps
sti
mov
push
mov
cmp
add
xchg
push
cmc
xchg
inc
imul
idivl
bound
push
fiadds
sahf
and
gs
cli
adc
jmp
ret
ffreep
dec
add
fistpl
jo
cwtl
aam
xor
mov
or
das
cmc
cld
sbb
pop
sub
ljmp
xchg
in
gs
scas
push
sub
adc
adc
adc
mov
outsl
push
decl
jmp
and
ds
mov
jl
jb
and
je
push
sbb
out
mov
cwtl
arpl
jl
push
sarl
adc
rclb
call
mov
adc
insb
sbb
xchg
adc
push
decb
push
xchg
call
mov
sbb
ljmp
add
sub
xor
sbb
xchg
cld
and
push
mov
mov
mov
cld
pop
pop
aam
es
cmc
decl
in
jle
movsb
push
mov
mov
jno
into
sub
aam
or
pop
xchg
ds
dec
scas
sbb
lods
das
sub
testb
ja
dec
lds
pushf
sbb
lcall
ja
outsl
lods
mov
movsb
lahf
add
hlt
pop
pop
xor
cmp
lcall
xchg
test
addr16
mov
sub
movsb
xor
adc
ret
inc
dec
je
push
jmp
shlb
enter
lcall
arpl
pop
loop
in
pop
cmc
add
xor
pushl
sbb
mov
loop
cmp
mov
testb
cs
cmp
decl
ret
insl
fsts
or
dec
in
jmp
out
mov
jo
or
je
fwait
std
mov
sbb
test
lcall
roll
mov
pushl
dec
xchg
leave
pop
cmpsl
xor
imul
and
mov
mov
in
push
in
inc
xor
cmp
sub
jmp
dec
sti
mov
ja
lods
imul
inc
cltd
ds
adc
xorl
jmp
jns
cmpsb
lret
scas
imul
das
in
lahf
cltd
inc
jp
divb
push
mov
incl
xor
mov
cmp
sti
bound
loope
xor
cmp
lcall
dec
imul
ret
pop
fwait
xor
push
imul
add
push
ljmp
pop
movsb
subl
pop
ret
xlat
xchg
add
jg
add
lcall
add
mov
xchg
mov
sbb
jb
jno
cmp
cltd
inc
bound
jmp
fsts
add
xor
iret
xor
inc
fisubrl
xor
ljmp
shlb
imul
icebp
ljmp
int
out
addr16
add
push
mov
or
dec
ret
and
inc
pop
icebp
fistpll
cmp
mov
cmpsb
jb
in
dec
adc
cmp
stc
shl
mov
xchg
xor
in
sub
pop
or
ljmp
sti
jmp
jl
jb
push
cs
jo
mov
mov
iret
or
pushl
mov
xchg
popa
sti
and
faddl
or
cltd
add
mov
call
test
andl
or
mov
sbb
lods
xchg
cmp
ret
decl
mov
ds
shl
mov
push
add
cmp
mov
ljmp
gs
idivb
inc
cli
cmp
out
cmp
gs
push
xchg
push
and
mov
xlat
fcomip
test
adc
sbb
sbb
lcall
lea
jg
mov
stos
pop
insl
push
cmp
shlb
mov
sbb
out
pushf
xor
push
xchg
xchg
roll
sbb
sbb
int
mov
adc
pushl
xchg
ss
loopew
pop
mov
sub
ds
lock
inc
mov
sub
push
push
inc
aas
mov
jge
incl
or
jne
mov
fsubs
loopne
jecxz
addr16
repnz
popa
test
pop
mov
incl
loop
or
mov
mov
jnp
cs
lea
mov
inc
pop
iret
getsec
cld
fsubrs
xchg
testb
ret
out
fwait
mov
iret
or
incl
xchg
aad
das
jne
jae
dec
iret
ja
jae
in
add
fxch
adc
lcall
bound
sti
pop
ret
sbb
nop
out
test
push
shlb
lcall
fisubrl
dec
or
loop
inc
fs
dec
xor
test
popf
in
sbb
movsl
jg
cli
pushl
mov
sub
mov
pop
data16
in
ss
push
xchg
or
and
cmp
std
cwtl
add
mov
movsb
stos
jmp
std
scas
test
jmp
push
lock
jp
std
pushf
xor
shlb
filds
inc
hlt
sub
insb
lea
incb
std
roll
adc
jp
cli
fbstp
jno
xchg
in
push
lods
mov
adc
mov
pop
mov
or
cld
jns
sub
daa
jnp
mov
pop
pop
sub
ret
call
push
lcall
mov
adc
insb
push
scas
int3
pop
sbb
jle
sbb
jne
out
cli
incl
cmpsl
mov
or
call
push
or
adc
ljmp
frstor
adc
cmp
subb
xchg
xchg
xchg
mov
push
cli
pop
std
jg
mov
dec
and
stos
mov
or
testl
scas
cmp
jg
jb
inc
mov
mov
cmp
sahf
lret
pop
jecxz
and
mov
dec
dec
mov
adc
mov
fisubl
cmpsb
adc
add
ljmp
fisttpll
push
into
and
clc
mov
loopne
outsl
inc
jmp
mov
fistps
push
int
or
jno
push
insl
or
or
inc
push
ljmp
repnz
ss
pop
stos
sub
lods
hlt
insl
xchg
adc
ret
xor
dec
shlb
inc
inc
scas
push
or
and
das
sub
pop
loopne
mov
aas
lret
shl
push
lret
push
out
or
das
cli
incl
pop
push
aad
ret
mov
or
xor
mov
mov
cmp
out
pushf
arpl
int
stos
jp
popa
sub
add
jmp
pop
not
and
lret
xor
mov
push
faddp
sub
aaa
ficoml
rcrl
jecxz
add
sbb
dec
xchg
push
pop
and
mov
movl
pop
aad
ss
sub
ja
clc
incl
imul
call
call
inc
inc
xchg
cmp
and
dec
or
mov
es
into
icebp
sbb
pushl
dec
aaa
dec
mov
cmp
fmul
lds
jge
imul
xlat
call
cld
cmp
sub
ret
pop
lret
add
sti
mov
fs
jg
jmp
jle
xor
add
jno
dec
dec
cmp
sti
jae
aam
ficompl
test
mov
and
sbb
aas
nop
fcomip
fstps
aaa
adc
das
cmp
sbb
je
and
cltd
call
jp
dec
or
pop
xchg
inc
pop
outsl
movl
cmp
scas
mov
out
sub
rorb
and
push
into
cltd
xor
pop
test
into
mov
fst
fiaddl
and
decl
imul
jo
loop
pushf
push
dec
pop
fsubs
dec
pushf
pop
dec
mov
call
lahf
jle
clc
imul
cmc
xchg
movsl
push
xchg
fsubrl
add
ljmp
pop
in
lods
repnz
adc
mov
fimuls
inc
fcom
dec
inc
icebp
push
mov
cli
lock
push
fnstenv
fimull
bound
iret
stos
mov
sub
inc
pop
fisttpl
fists
xor
sbb
test
scas
pop
out
test
icebp
shr
cmpsl
mov
ljmp
jns
std
imul
dec
xchg
sub
pop
mov
push
pop
lods
fidivrs
js
dec
mov
icebp
inc
jo
iret
jne
loopne
cmp
out
addr16
inc
fisttpl
imul
lock
push
jnp
mov
mov
fisubs
lea
push
dec
xor
jno
aad
aam
repz
test
or
lock
cmc
js
call
outsb
mov
cmp
push
cmp
dec
cwtl
movsb
bnd
pop
inc
fwait
subb
ljmp
push
or
inc
mov
shrl
in
mov
repz
fbld
into
push
rol
sbb
fcmovnu
popf
cmpsl
adc
jmp
push
sbb
ja
jge
pushf
movaps
mov
cmp
cwtl
or
mov
cmpb
inc
insl
call
jl
sub
fistpll
cmp
dec
xchg
and
cli
lds
in
sbb
jns
jns
fistpll
repz
rclb
mov
test
add
add
nop
and
rcr
js
mov
inc
dec
inc
movsb
inc
xchg
mull
jb
decl
call
cli
mov
imul
es
push
mov
sar
ret
adc
xchg
push
rorb
jmp
call
dec
lahf
into
faddl
aas
cs
xor
mov
inc
and
jg
loopne
push
orb
aaa
or
cli
lock
push
mov
movsl
mov
ljmp
pop
mov
fildll
mov
xchg
js
jl
aas
cmpsb
xlat
mov
ds
mov
mov
pop
mov
clc
cld
outsb
jae
or
imul
ljmp
push
mov
push
push
fsubrs
scas
jno
movsl
ja
sbb
jo
sub
insl
inc
mov
mov
xchg
shrb
mov
mov
pushl
jo
mov
call
dec
mov
xorl
popf
es
push
incl
push
ja
xchg
xor
out
pop
cmp
lahf
xchg
pop
add
inc
arpl
ret
ljmp
lea
aas
dec
pop
dec
adc
aam
jnp
fsubl
mov
sbb
inc
mov
jge
push
sbb
arpl
in
test
loop
aaa
sub
xlat
inc
pop
ret
data16
decl
aam
stc
add
shlb
mov
aas
rcrl
sub
pop
cmpsb
mov
cltd
pop
and
ljmp
sbb
outsl
push
push
js
or
neg
xchg
icebp
fbstp
les
jg
out
or
fldl
sbb
loop
btcl
xchg
pop
dec
or
push
je
push
mov
fdivs
sbb
mov
es
xchg
aad
xchg
roll
ljmp
mov
xor
lcall
xor
mov
loope
mov
add
add
int
push
mov
stos
sub
fcomip
lcall
and
fisubs
stc
bswap
rolb
jae
fwait
inc
je
pushl
mov
inc
or
insb
fs
bound
and
rcrl
sub
loopne
ljmp
outsb
dec
popl
rolb
dec
scas
cmc
insl
hlt
rcrw
mov
mov
outsl
cmpsb
decl
ret
xchg
gs
lock
mov
add
mov
popf
xchg
sahf
cld
out
jg
gs
mov
mov
std
jnp
mov
test
jle
pushl
pushl
shrl
jae
lahf
mov
mov
jmp
dec
sub
push
fisttps
mov
mov
and
mov
cmp
push
or
scas
sahf
repnz
ficoml
lock
hlt
ja
pushl
cld
jno
mov
add
inc
push
les
les
bound
pushl
fstl
and
out
cmp
and
int
mov
sbb
mov
enter
mov
decl
xchg
dec
lcall
mov
test
sub
je
jo
cmc
sub
adc
cmpsb
mov
or
loope
int3
jo
lcall
jae
sub
addb
mov
out
xor
lahf
jne
iret
push
in
adc
pop
push
aam
cmc
cmp
cmp
das
ficoml
sub
jmp
dec
scas
test
fisubl
push
idivl
nop
pop
and
mov
cmc
in
mov
pushl
inc
inc
cmp
std
in
mov
sbb
movl
mov
jmp
cmp
push
stos
leave
fiadds
popf
adc
in
inc
test
push
dec
int
pop
or
jnp
xor
cmp
jmp
cmp
push
xchg
or
cwtl
and
xchg
out
test
lods
push
push
in
jmp
xchg
invd
xchg
push
arpl
cltd
subl
jo
inc
push
mov
int3
outsb
call
pop
lahf
inc
jle
call
jns
pop
je
xchg
xchg
ds
mov
repz
push
stos
incl
pop
push
lock
adcl
imul
pop
lock
arpl
fwait
sarb
lcall
aas
fmul
xchg
or
xor
xor
mov
je
mov
pop
cwtl
mov
ret
push
push
dec
or
fcmovne
dec
add
push
lcall
cwtl
je
xor
loope
movsb
inc
cmpsb
fisubrl
sub
mov
jg
ljmp
mov
and
mulb
stos
test
cmp
movsb
mov
es
pop
test
jg
icebp
or
xchg
daa
sahf
pop
sbbb
in
push
xorb
xlat
dec
mov
pop
incl
jmp
into
mov
arpl
push
int3
pop
fnstenv
sahf
out
mov
push
xchg
mov
xor
xor
fmull
hlt
mov
icebp
addr16
inc
mov
incl
push
cmc
pop
xchg
ljmp
add
xchg
cmp
fcmovnbe
fstps
outsl
clc
loopne
ret
hlt
cmp
stc
xchg
push
add
scas
out
call
dec
cmp
jne
push
jbe
cmp
dec
cmp
addb
add
ror
push
cmc
sti
popa
icebp
xchg
add
test
cmp
xchg
lcall
insl
insb
imul
fisubrs
pop
sarb
xchg
mov
push
loopne
sub
lcall
and
add
imul
shll
jnp
jge
aam
subl
in
dec
imul
push
jmp
test
xor
shll
pop
mov
imul
cmc
ss
mov
mov
fdivrp
call
cmpsl
and
out
testb
in
mov
in
loopne
dec
mov
push
fistl
test
push
bound
push
adc
cmp
lods
imul
pop
push
lock
mov
loop
dec
and
js
call
pushl
mov
ds
das
jecxz
mov
jecxz
xchg
push
sbb
ss
xchg
cwtl
xchg
mov
test
das
sbb
in
add
push
cmpsl
pop
and
fsubrl
xchg
jne
mov
jmp
pop
scas
dec
pop
or
lahf
aas
or
sti
inc
cli
ficompl
fdivr
mov
mov
add
clc
mov
sub
call
mov
cmc
stc
imul
iret
cli
push
loopne
dec
pop
movsb
jg
adc
xchg
orb
aam
ficompl
jle
fsubl
scas
cltd
fs
or
ret
std
adc
add
stc
xor
cli
lcall
sbb
fistl
sub
fbld
xchg
les
jmp
xchg
iret
gs
fmuls
test
fs
xor
call
std
decl
adc
pop
loopne
mov
adc
shll
cmpsb
mov
push
adcb
adc
mov
jno
shr
scas
cmp
mov
add
jmp
ljmp
dec
inc
xor
repnz
stos
jno
stos
inc
xor
mov
dec
pop
scas
xchg
inc
jmp
mov
jne
hlt
jbe
rorb
push
sbb
cld
xor
mov
dec
call
fnsave
repz
pop
push
pop
adc
add
add
mov
inc
fcomip
cmp
inc
or
xor
push
xchg
das
jnp
pop
aas
inc
lea
call
jecxz
inc
sub
sbb
inc
lret
cmp
inc
pop
dec
pop
dec
push
push
jmp
push
stos
push
das
xor
nop
in
hlt
scas
mov
lods
insb
iret
xor
pop
mov
sbb
lea
ljmp
cmpps
shrl
adc
mov
je
pop
inc
mov
jmp
and
jge
dec
adc
mov
inc
mov
es
loop
inc
cmp
push
cmpsb
sti
add
pushl
mov
enter
rclb
push
or
andl
mov
mov
rorl
and
pop
fldl
xor
mov
inc
xchg
cmc
push
call
mov
jno
je
push
cwtl
add
test
nop
hlt
push
data16
enter
jnp
jle
add
fimuls
data16
out
lret
stos
jecxz
fwait
mov
fwait
out
xchg
cwtl
inc
inc
mov
push
ret
dec
cmp
mov
dec
sbb
cs
jg
jecxz
jp
xchg
xchg
cli
movb
imul
xor
dec
in
xchg
lcall
lods
mov
cmp
es
lods
fsubl
gs
scas
xor
pop
cmp
pop
popa
int3
lcall
call
pop
scas
sbb
jmp
pop
dec
lds
leave
aas
lock
or
int3
lret
jmp
xlat
mov
cmp
sub
push
mov
insl
and
push
movsb
dec
jg
sbb
je
scas
cmc
out
cmp
mov
fcos
incl
mov
dec
pop
jle
rol
movsb
negb
sbb
add
stc
gs
into
dec
movsb
or
push
cli
scas
les
or
inc
or
mov
loope
dec
out
jns
je
rolb
sbb
leave
cwtl
les
out
sub
xor
decl
fnstenv
pop
orb
xor
js
leave
xchg
jecxz
jno
dec
arpl
jo
xchg
pop
decl
and
jno
xchg
enter
mov
insb
mov
jl
inc
pop
mov
or
lock
incl
xchg
jne
aaa
testb
jg
shlb
pop
mov
pop
xlat
sti
fucomip
and
lcall
ret
inc
ret
sbb
mov
daa
stos
pop
xchg
add
mov
jmp
movsb
push
icebp
cwtl
addb
insl
in
mov
incl
jmp
pop
add
divl
jo
mov
pop
push
cltd
jnp
pop
incl
jne
mov
mov
cmp
xchg
mov
cwtl
cwtl
ja
add
test
inc
mov
fsubrl
inc
cmp
mov
push
cmp
and
inc
lahf
pop
movsl
sub
lcall
jmp
addl
cltd
jne
in
jle
add
lret
jg
jp
mov
es
jge
imul
fdivrp
jmp
daa
adc
pop
xchg
cmpsl
xor
mov
sar
mov
mov
jmp
mov
mov
outsl
lock
mov
jg
inc
lds
sti
ja
dec
imul
aas
jno
imul
sub
iret
sub
xor
incl
add
xor
push
mov
sub
adc
jl,pt
ss
push
sbb
or
incl
adc
sub
mov
jne
mov
daa
ljmp
and
adc
mov
inc
pop
int
cmp
mov
xchg
xchg
push
sub
jp
int3
add
and
inc
push
pop
in
unpckhps
dec
pop
add
push
hlt
cmp
ffreep
outsl
stos
or
jmp
daa
lret
aad
addr16
fbstp
xchg
lea
cmp
dec
inc
xchg
movsl
add
int3
int3
ss
icebp
test
nop
outsl
mov
dec
or
mull
mov
or
repz
pop
cmc
call
in
pop
test
xor
mov
ljmp
inc
arpl
lcall
push
pcmpgtw
xchg
jae
rcrl
jbe
out
stc
mulb
shl
rclb
jg
xchg
mov
fsts
sbb
inc
shrb
dec
fdiv
inc
sub
daa
cmpsl
call
jecxz
hlt
lret
push
lret
incb
dec
insb
mov
dec
sbb
mov
outsb
ja
push
mov
fisubrl
add
add
inc
cmp
int3
or
icebp
loop
push
push
push
fimull
incl
scas
idivl
sbb
lods
aaa
adc
ss
xor
cli
mov
jmp
mov
sub
test
cmp
add
dec
jns
jnp
ljmp
push
add
enter
cltd
xchg
repz
xchg
fisttps
or
mov
pushl
testb
sub
je
xchg
aaa
xchg
test
test
or
jb
test
pop
out
fwait
call
jecxz
aad
jo
mov
pop
fwait
shlb
rcll
mov
or
push
mov
add
dec
cmp
cmp
and
nop
lea
leave
out
dec
outsl
pusha
aaa
inc
dec
enter
out
cli
out
push
sbb
cwtl
pop
aas
xchg
cmp
in
iret
inc
pop
jg
fstl
in
decl
and
jns
pop
scas
lods
xchg
cli
push
xchg
pop
fistps
push
push
sub
sahf
decl
push
popf
jns
sbb
mov
mov
ds
in
adc
je
gs
hlt
loopne
imul
test
ljmp
vpunpcklbw
push
aad
sbb
push
sub
movsb
sub
mov
mov
incl
sti
sbb
movsb
cmp
clc
inc
adc
dec
cltd
popa
mov
jg
add
call
push
lods
rol
scas
imul
testb
jmp
xor
arpl
test
mov
punpckhbw
adc
xchg
mov
enter
hlt
lock
fdivl
push
stos
stc
jp
add
cmp
ljmp
push
bound
es
dec
xor
push
movsb
mov
fistpll
xchg
sub
cmp
jecxz
cmp
call
add
xchg
push
or
jg
pushl
jg
lock
sub
cmc
or
lods
cmp
es
call
mov
xchg
jnp
sub
sbb
outsb
xor
jmp
popa
and
jp
xchg
mov
addl
inc
lcall
imulb
mov
xchg
xchg
enter
jmp
or
mov
pop
mov
pusha
push
mov
stc
jge
push
cs
lcall
cmp
rcl
or
mov
push
inc
fsts
dec
aaa
xor
incl
push
lock
and
loop
or
jl
fucomi
adc
cmp
mov
in
jp
mov
jp
in
inc
insb
xor
mov
stos
mov
rolb
sub
xchg
bound
mov
dec
mov
nop
out
mov
push
jno
jmp
inc
test
std
or
sub
inc
cmp
test
adcb
jmp
cmpsl
mov
les
jmp
pop
inc
jns
jo
add
and
xor
mov
push
pop
leave
insl
push
sarl
jg
xchg
sbb
adc
jmp
lahf
jecxz
sub
shll
cmpsl
test
pop
arpl
pushl
adc
xchg
fsubl
ja
xor
divps
push
sub
mov
pop
test
test
jmp
aam
popa
jo
sub
loopne
mov
cmp
mov
mov
call
mov
push
jne
fsubs
insb
cmpsl
es
pop
loopne
jmp
call
clc
jbe
aas
lock
mov
sahf
scas
lods
sahf
jnp
fs
mov
add
in
into
jno
test
pusha
xchg
cmc
xor
adc
mov
repnz
inc
mov
shlb
aas
add
cwtl
pushf
loop
stc
mov
push
mov
mov
adc
incl
aam
or
daa
xlat
int
rclb
popf
pop
dec
test
hlt
js
jge
xchg
dec
dec
test
add
ret
faddl
dec
rorb
loope
push
insl
cmp
mov
adc
nop
sub
ficoms
decl
mull
xor
fisttps
mov
std
jmp
lret
js
sbb
xchg
mov
insb
xor
pusha
ljmp
movsl
sbb
jle
sub
call
out
jp
roll
call
jae
fists
jl
xchg
adc
lcall
out
dec
data16
pushf
mov
add
movsl
xchg
fwait
xchg
jne
mov
outsb
sbb
pop
jmp
mov
mov
pop
mov
test
and
stos
incl
pop
call
movsb
sahf
push
addl
sub
iret
jle
sub
call
push
dec
xchg
test
cmpb
pop
adc
sub
or
loopne
sub
push
enter
or
call
shrl
mov
sbb
push
insl
push
fsubs
jns
into
dec
cld
jae
or
insb
and
dec
mov
jnp
icebp
nop
and
dec
iret
iret
int
pushf
out
cmp
fs
pop
sbb
pop
cmp
pop
sbb
arpl
jp
fstpl
inc
test
lcall
mov
cmpsb
lret
dec
cmc
sub
mov
xchg
popa
shl
nop
fidivs
ljmp
xchg
cmp
jb
xchg
cmp
cmp
das
gs
insl
jns
mov
orb
outsb
sub
pop
lods
xchg
inc
sub
inc
ljmp
jge
push
mov
insl
arpl
cltd
jl
and
shll
ret
ja
dec
inc
mov
call
test
mov
push
std
out
mov
xor
ds
mov
jmp
inc
adc
jmp
fldcw
ss
lret
xchg
mov
mov
cmp
movsl
out
int
jle
imul
nop
aad
pop
cld
lods
mov
or
push
sbb
scas
mov
fimuls
xor
jg
inc
push
imul
outsb
add
mov
aam
push
lahf
xor
pop
outsl
jae
fsubrl
in
mov
jmp
xchg
fs
outsl
loope
inc
mov
xchg
pushl
psubusw
popf
mov
test
add
dec
ret
ljmp
das
out
mov
mov
out
jb
mov
aam
repnz
mov
adc
lret
dec
repnz
dec
cmc
incl
xchg
pushf
push
push
lcall
and
subb
pop
addr16
decl
lock
xchg
sbb
jmp
out
repz
mov
sub
xor
insl
inc
and
mov
sub
cmp
adc
ja
fwait
mov
jecxz
incb
jge
jae
cmp
cmp
mov
xlat
dec
or
mov
mov
outsl
push
mov
loope
lods
test
lahf
iret
in
js
ljmp
cwtl
scas
nop
test
fadd
aad
jo
push
mov
cmp
jmp
ljmp
sub
pop
loop
xchg
ret
fistps
mov
and
xor
outsb
mov
jmp
xchg
jne
scas
mov
scas
inc
adc
push
subl
stos
mov
pushl
cmpsl
sti
push
div
mov
ret
fdivr
notl
cmp
insb
add
lcall
lret
pop
fstps
push
imul
mov
pop
lock
hlt
jne
inc
xor
inc
dec
sbb
pop
addr16
push
add
and
lcall
mov
and
in
cmp
and
mov
out
pop
mov
jno
hlt
mov
in
cmc
rcl
mov
inc
clc
inc
fcompl
int
adc
aad
test
sbb
ret
ljmp
pop
clc
lret
sbb
adc
cmp
test
cli
jecxz
lock
ss
incl
push
mov
and
fcoml
xor
cmpsb
clc
dec
pop
hlt
rclb
call
push
lret
shll
sbb
jle
outsl
cli
call
arpl
mov
add
inc
jl
pop
sub
add
mov
pop
test
lds
ja
ffree
or
push
lock
sub
xchg
cmp
decl
imul
or
mov
mov
cli
sti
jle
xor
add
jl
fmul
pushf
jno
outsl
out
addr16
jb
popa
test
sar
xchg
sti
jp
mov
pop
mov
mov
lea
in
movsb
adc
cmp
fdivr
dec
xchg
lret
fcomip
jg
out
daa
test
fidivl
aam
iret
sahf
rcrb
jl
fists
push
adc
push
push
cmp
rorb
sub
andb
push
add
lcall
push
inc
out
mov
cmpsb
xchg
sar
jne
ret
addb
sbbl
push
jg
pop
std
inc
and
pop
lahf
cmp
aad
cpuid
into
and
add
inc
cld
mov
sbb
insl
sub
mov
jg
stos
or
mov
sbb
or
dec
cmp
mov
push
add
adc
jmp
inc
and
inc
lods
add
add
adc
pusha
pushw
mov
stos
lods
inc
ljmp
fldt
xor
arpl
lea
jle
xor
or
call
out
or
xchg
mov
push
les
decl
pop
pop
push
mov
arpl
lds
gs
ja
mov
int3
ds
loope
xchg
fwait
testl
xor
push
adc
jle
lcall
cmc
push
test
cmp
jno
pushf
cwtl
lods
mov
sub
outsl
xchg
jg
loope,pn
imul
loope
jnp
test
jecxz
cltd
or
push
jl
mov
jne
or
cmp
or
jo
imul
mov
shlb
adc
pop
ret
and
rorb
in
dec
jo
inc
add
pop
push
or
lcall
jge
sub
decl
lret
gs
in
popf
test
ja
or
iret
je
cmp
jmp
dec
lods
fdiv
or
popa
sbb
xor
ss
mov
ljmp
leave
aam
outsl
fdivrp
mov
and
push
push
jp
mov
call
in
icebp
cmc
aad
fsubl
xchg
imul
or
adc
ja
fildl
jbe
pop
mov
lods
push
xchg
mov
dec
mov
ljmp
pop
lret
jne
and
add
loope
xchg
cltd
ljmp
outsb
test
ds
cmpsb
dec
mov
inc
scas
fs
add
lret
sub
push
dec
inc
xor
push
imul
xchg
out
scas
sahf
imul
push
push
shll
jmp
rorb
pop
fs
fcmovbe
sbb
and
push
push
pop
pop
inc
mov
mov
decl
aas
push
pop
neg
mov
roll
or
fxam
push
xor
in
fwait
inc
cmpsl
rclb
shrb
call
mov
pop
outsb
jmp
push
daa
or
lods
add
cmpsl
pushf
je
adc
xchg
aad
incl
loope
scas
loopne
mov
in
pop
mov
sbb
inc
push
or
xor
and
and
fcomps
add
mov
lcall
into
cld
divb
scas
cmp
stos
push
xchg
cltd
fistpl
mov
fdivs
inc
cltd
jecxz
push
add
mov
ret
fildl
and
int
test
repz
ljmp
inc
int3
out
nop
fldl2t
sub
pop
icebp
mull
shl
loopne
and
call
pop
sti
pop
fcmovb
adc
mov
jmp
mov
ljmp
mov
jmp
pusha
mov
mov
popf
imul
ljmp
mov
dec
mov
xchg
fisttpll
or
dec
pop
scas
adc
aad
das
clc
stc
or
std
mov
xchg
les
mov
dec
shl
dec
sar
ljmp
ja
xchg
test
add
cli
mov
dec
test
sub
xchg
jp
in
xchg
lcall
cld
or
jae
loop
lods
shrb
arpl
lcall
jb
pop
sbb
mov
jle
lea
lds
and
mov
gs
lcall
pop
mov
repz
pop
push
mov
and
leave
xchg
ficoml
imulb
outsl
incl
mov
add
mov
mov
push
setb
out
rcll
daa
test
mov
cmp
cmp
loope
sbb
xchg
mov
dec
mov
ret
push
add
lcall
add
push
roll
mov
daa
int3
mov
dec
movsb
test
or
sub
daa
iret
pop
mov
orb
shr
cmp
lcall
push
push
xor
pop
mov
or
mov
pop
mov
xchg
jmp
loopne
out
dec
clc
pop
roll
into
sub
das
mov
pop
cmpsb
js
add
jmp
and
ds
pop
xor
jmp
divl
imul
call
lret
xchg
mov
sbb
sub
push
xor
dec
sbb
xor
int
sbb
lcall
push
sbb
and
add
in
outsl
pop
loope
xchg
mov
lahf
mov
pop
jmp
sbbl
gs
sbb
fwait
es
mov
mov
mov
lcall
stc
popf
jnp
pop
push
sbb
xor
adc
jmp
inc
xchg
xchg
jno
xorb
dec
cmp
pusha
mov
sbb
inc
shll
add
in
push
xor
inc
shrl
xchg
add
inc
or
xchg
dec
pop
or
lcall
xchg
push
sbb
insl
in
sbb
sub
dec
lret
cmp
lock
call
decl
iret
inc
or
dec
jb
lods
add
test
lretw
sti
push
jno
add
inc
xor
cmpb
sbb
jno
nop
add
jbe
add
push
jmp
std
je
push
pop
insl
pop
sarb
lods
sub
addr16
mov
cmc
xchg
je
sub
lahf
lcall
insl
out
iret
lea
xchg
outsl
jb
xchg
subb
mov
inc
and
jne
add
in
idiv
ljmp
jno
lods
arpl
lods
fcmovnu
fisubl
cmpsb
arpl
xlat
cmp
jnp
fcomps
inc
es
sub
inc
sub
loop
jg
call
xor
lea
movsl
test
xchg
pop
frstor
mov
lock
cmp
or
lcall
stc
outsl
xor
cmc
adc
sbb
jne
xchg
int3
es
out
mov
dec
mov
mov
idiv
xchg
jge
push
dec
out
dec
testb
mov
nop
inc
or
cmpsb
jg
in
mov
jno
add
loop
fldcw
repnz
xorb
pop
mov
pop
incl
adc
push
jns
filds
rcl
rorb
pop
enter
popf
data16
pop
xchg
or
clc
call
inc
sub
neg
lods
xor
scas
ret
mov
mov
xchg
xorb
xchg
fs
jecxz
rcrb
xchg
xchg
cmc
and
cmp
dec
pop
add
sbb
inc
adc
xchg
lock
adc
inc
jecxz
mov
ret
inc
aas
jl
xchg
mov
in
mov
mov
jne
in
adc
sub
jmp
cmp
in
fsubrs
inc
adc
jne
mov
mov
mov
ror
adc
loopne
push
sub
int3
dec
add
mov
js
jae
inc
add
push
adc
xor
out
call
cld
fisubl
call
ja
push
into
jp
cwtl
jo
dec
cmpsb
in
dec
cld
jmp
adcl
insl
popa
xchg
mov
outsl
int3
fists
dec
mov
inc
adc
call
xchg
push
inc
pop
or
enter
movl
mov
arpl
rorl
decl
lods
pop
jecxz
xor
adc
lods
repnz
add
inc
outsb
push
jmp
jmp
inc
imul
fsubrs
lcall
xor
dec
xchg
jle
leave
pop
push
addr16
cmp
ljmp
decl
ret
pop
mov
mov
imul
sbb
ljmp
jmp
int
cs
notb
popf
and
sbb
bnd
add
je
cmp
ja
leave
aas
add
fldt
mov
jmp
dec
xlat
xchg
scas
mov
jo
mov
push
mov
xor
rolb
cs
cmp
xchg
cli
sahf
push
mov
fmul
ficompl
xor
testb
pop
decl
sub
imul
test
stc
cmp
mov
inc
jo
xor
ljmp
mov
into
mov
mov
lret
sbb
loop
mov
jmp
push
sahf
sub
pop
ja
fdiv
dec
sti
add
cmp
bound
fdivrs
jbe
jnp
xor
decl
adc
jmp
xchg
arpl
jae
sbb
push
lret
iret
lods
lods
scas
jb
mov
decl
mov
xor
rcrb
push
inc
push
cmp
and
popl
inc
in
decl
repnz
jne
inc
sub
xchg
mov
mov
cmp
movsl
pop
jae
decl
xchg
rclb
pop
pusha
pop
adc
mov
push
inc
mov
dec
cmpl
imulb
aad
das
les
push
add
mov
cmc
int3
dec
lret
pushl
and
xchg
mov
inc
int3
push
in
pop
jecxz,pn
xchg
int
mov
dec
mov
incl
inc
mov
push
mov
jae
cmp
les
sti
push
mov
cmp
pop
push
std
subb
testb
fcom
cmpsl
enter
push
aam
xchg
out
adc
call
push
add
add
pop
mov
add
negb
insl
aaa
push
mov
std
lea
pop
test
loopne
ffree
pop
into
xchg
pop
fcomip
jg
xor
wrmsr
adc
pop
push
addr16
mov
test
decl
pop
xor
test
adc
pop
dec
push
mov
fnsave
mov
mov
push
xor
dec
mov
dec
lahf
xchg
push
mov
stc
out
pop
sbb
mov
push
imul
dec
sub
mov
inc
pop
push
gs
aaa
add
cmpsb
movsb
adc
std
sub
jno
push
pop
or
loopne
and
pop
test
decb
mov
mov
imul
cmp
push
mov
je
fcomip
call
sbb
or
jb
mov
sbb
inc
dec
inc
hlt
mov
pushl
rolb
jnp
pop
or
cmpsb
push
rcl
aas
in
add
loop
mov
pusha
ljmp
pop
call
adcb
pop
mov
and
pop
pop
popa
insb
aaa
adc
call
pushf
jg
rclb
int
jle
sbb
shlb
adc
mov
dec
sub
inc
pop
mov
cmpsl
sbb
push
mov
movsb
iret
int
inc
xchg
jbe
xor
dec
js
add
aam
sbb
sbb
shlb
jns
sub
mov
ss
or
and
mov
loope
jae
rcrl
mov
jp
pop
jmp
push
mov
ret
cmpsb
adc
xor
add
test
filds
insb
cmc
pop
push
addr16
cmp
arpl
inc
mov
fs
push
cmp
jmp
fldl
mov
xor
int3
addr16
lcall
decl
jge
je
inc
icebp
push
rcl
push
or
mov
xlat
fiadds
mov
cld
imul
cwtl
jnp
mov
addb
ljmp
out
jg
js
ljmp
ljmp
pop
stos
pop
out
jle
mov
cmc
push
outsl
in
inc
jge
movsb
adc
js
pop
mov
outsl
lcall
int3
mov
fistpl
fistpl
pop
push
xchg
int
int3
xchg
and
out
fwait
xor
std
aad
push
pop
and
loope
shrb
push
out
pushf
mov
decl
sbb
xor
adc
daa
add
cmp
mov
call
xchg
mov
mov
jg
push
jmp
arpl
test
jle
out
clc
decl
mov
mov
lock
shrl
pop
out
lcall
xchg
sub
lcall
mov
adc
sub
arpl
adc
lcall
ss
mov
test
rorb
js
iret
nop
or
nop
movsb
in
movsb
sbb
int3
scas
cmp
fwait
xchg
push
fdivrp
scas
ds
aam
popf
xor
xchg
xor
fldenv
sbb
push
mov
call
ss
daa
cwtl
jle
cmp
cltd
movsl
xlat
pmullw
mov
and
cmp
insl
out
in
decl
push
sbb
and
addr16
int
inc
fpatan
movsb
cmc
lret
fdivr
push
into
fisttpl
fiadds
repz
decl
arpl
int
insb
or
nop
popa
mov
icebp
cmpsb
xchg
nopl
jle
enter
xor
loope
xor
cmp
mov
jg
stos
notl
mov
ja
test
lahf
push
addr16
mov
gs
call
in
xchg
sbb
sbb
data16
jno
lcall
add
or
cmp
adc
je
pop
adc
mov
or
pusha
mov
and
call
int3
into
sub
leave
shl
fnstsw
hlt
add
mov
lock
xchg
out
leave
push
jle
sahf
mov
xor
pop
cli
pop
je
xchg
loop
scas
xor
stos
lcall
aam
je
xchg
push
mov
dec
fisubs
jns
add
and
call
movsl
dec
fcomps
nop
nop
ja
pop
mov
cmc
rolb
hlt
out
mov
pushl
cli
jl
adc
cld
xor
jbe
movsl
call
outsb
and
test
dec
pushl
out
adc
xchg
leave
je
xlat
sbb
mov
sbb
call
movsb
mov
push
jnp
fildl
mov
inc
sub
js
cmpsl
int3
out
lcall
xchg
fiaddl
cmp
orl
rcr
pop
jo
mov
pop
jp
push
mov
mov
mov
in
daa
cmpsb
xchg
out
mov
dec
sub
xchg
pusha
push
ss
ret
fldl2e
outsb
cmp
decl
push
fdivl
jg
xchg
mov
arpl
jne
pop
addr16
mov
je
call
scas
mov
movb
mov
data16
les
mov
hlt
pusha
cld
movsl
flds
mov
ja
jmp
arpl
test
pop
es
sbb
cmp
sbb
push
xor
cmp
cmp
and
jle
and
mov
pushf
pop
psubusw
inc
cmp
fildl
mov
inc
fists
mov
pop
inc
cmp
dec
xor
mov
mov
jno
jle
xchg
jo
insb
push
sbb
add
stos
add
push
dec
push
mov
test
mov
scas
adc
mov
sbb
inc
and
jmp
pop
inc
add
mov
in
jmp
sarb
mov
mov
pop
push
pusha
fcomip
incl
pop
fcompl
dec
dec
movsl
in
sbb
adc
xor
lods
incl
xor
inc
cmp
ljmp
fdivs
sub
jl
aaa
arpl
cmp
lcall
fisubs
xchg
add
xor
jb
pop
out
insb
adc
push
mov
mov
sub
cmpsb
jge
icebp
stos
insl
xchg
lea
stos
mov
ffreep
cmp
rorl
test
sub
bound
int
mov
dec
ljmp
inc
mov
mov
call
sub
rorl
adc
mov
and
mov
sub
mov
adc
lcall
sub
adc
dec
loopne
lods
shrb
xor
xor
hlt
sbb
rclb
decl
loopne
inc
lods
pop
ljmp
jo
and
std
push
cmp
xor
cmp
lcall
ss
dec
sbb
xor
scas
cmpb
bound
cs
popf
mov
shlb
jmp
mov
mov
testl
bound
lods
xchg
adc
pop
out
clc
mov
sahf
or
pop
add
push
mov
loopne
jbe
xlat
mov
call
call
stos
fmuls
mov
in
cmp
adc
call
xor
pop
clc
stos
or
or
fxch
dec
cli
into
or
addr16
cmp
lock
lods
popa
adc
jmp
pop
push
imul
sub
pop
xchg
loop
dec
cwtl
pop
sti
adc
ljmp
pop
or
orb
cmp
js,pt
movsl
dec
fsubs
popa
jno
jmp
jae
push
mov
cmpsb
pop
cmp
rolb
faddl
mov
fisubl
lods
movsb
leave
mov
ficompl
stos
mov
mov
push
push
aaa
mov
xchg
push
push
fisttpl
or
xchg
and
imul
mov
lret
cli
lcall
loope
out
or
jge
jae
sbb
mov
mov
inc
sbb
imul
cmpb
push
jge
pop
cltd
stc
iret
out
mov
ret
cs
adc
call
movsb
jnp
jno
jno
loop
mov
jae
rcll
mov
inc
iret
das
mov
cli
pushl
iret
xchg
aas
int3
hlt
inc
inc
inc
pop
and
loop
ss
shlb
decl
pop
hlt
jge
cli
loopne
jmp
jmp
xchg
mov
gs
scas
mov
ljmp
dec
add
mov
or
jbe
sbb
cmp
ljmp
daa
push
loop
imul
loopne
jecxz
add
xor
dec
and
mov
dec
aas
loop
sbb
xchg
cmp
int3
jne
nop
mov
push
jmp
mov
jmp
enter
int3
xchg
cmpsb
cmp
shrl
sub
cmc
dec
and
pop
hlt
ljmp
inc
imul
movsl
test
cwtl
add
leave
sub
add
and
stos
cld
push
fwait
les
pop
xor
popf
out
sub
das
push
pushl
mov
push
push
adc
std
icebp
cmp
dec
lcall
and
xchg
jmp
dec
cmp
dec
cmc
pop
pop
sub
stc
fdivp
test
icebp
sahf
rolb
sbb
mov
cld
scas
ljmp
xor
lock
ljmp
clc
inc
or
incl
mov
xlat
mov
mov
test
fsubs
cwtl
xor
pop
lock
ficoms
mov
inc
call
loop
adc
add
sar
sbb
orl
fwait
push
add
push
xor
pushf
dec
dec
ljmp
pop
fs
je
pushl
repz
xor
out
jo
das
mov
push
add
bound
out
sbb
mov
and
call
sti
sbb
mov
push
xchg
lods
loopne
jg
jnp
in
cld
xor
into
jae
mov
call
inc
mov
pop
bound
fiadds
mov
jl
loopne
es
stos
ret
fsubs
outsl
fs
call
xor
mov
pop
ljmp
dec
rolb
loop
loope
jg
and
dec
and
push
or
xchg
ret
repnz
fnsave
push
bound
mov
popa
cmp
and
add
inc
mov
lcall
mov
and
loop
bound
mov
add
incl
movsl
leave
xchg
jno
sub
daa
cwtl
test
xor
pop
call
jbe
dec
push
cmp
cmp
shll
jecxz
jne
lock
jle
push
or
int
insl
cmpsl
jmp
iret
mov
idiv
pushl
shrl
decl
ljmp
xchg
mov
mov
inc
xor
call
mov
jb
js
inc
stos
fmull
fstps
nop
mov
push
xlat
add
pushl
pop
mov
pop
adc
pop
into
mov
jg
push
push
pushf
and
lret
jno
ljmp
lret
jle
jmp
int
loopne
call
xchg
sub
adc
ja
test
push
decl
pushf
ljmp
or
roll
push
xor
jge
or
xor
and
inc
mov
lret
pushl
nop
and
xor
leave
pop
popa
cmovne
loopne
dec
rorb
ss
xor
fbld
push
movsl
or
xorl
xor
jge
and
xlat
inc
pop
adc
incl
les
sar
push
mov
mov
sbb
dec
lock
xor
or
out
test
mov
mov
popa
pop
cmp
cmp
aas
xchg
mov
lock
xchg
push
dec
es
cmpsb
call
cs
stos
ja
dec
cld
arpl
cmp
mov
jns
add
rorl
pop
inc
loope
and
add
adc
push
lds
push
jmp
pushf
sub
dec
enter
fcoml
cmp
cmp
jb
add
out
xor
and
xor
mov
in
nop
jl
sbb
loope
inc
push
xchg
sbb
xchg
aam
loopne
mov
pusha
std
cmp
mov
and
jp
cmpsb
stos
out
and
jnp
jnp
mov
inc
pop
jp
push
movsl
loope
cltd
popf
shrl
fcomip
lcall
lods
and
mov
xchg
xchg
mov
and
fs
push
mov
imul
sbb
adc
shlb
stos
aas
scas
sahf
push
call
daa
lods
decl
pop
dec
mov
mov
mov
and
push
dec
xchg
repz
sar
jmp
adc
adc
mov
mov
jmp
cmp
lret
incl
pop
and
add
fmull
sub
mov
lret
cmp
test
push
adc
pushl
icebp
push
xchg
pop
pop
insl
idivl
test
ret
mov
push
jl
aad
outsl
call
stos
out
adc
rcr
inc
scas
jg
rol
jl
icebp
movsl
test
jg
fwait
insb
lods
pop
aad
jg
daa
in
mov
adcb
imul
sub
mov
and
xchg
imul
cltd
mov
into
adc
adc
sbb
jg
in
push
ss
aad
fisttps
sar
ffree
cmp
mov
in
inc
xchg
jae
dec
push
subl
inc
xor
mov
int
xor
and
xchg
or
ljmp
clc
pop
mov
mov
push
lahf
jge
pop
and
adc
std
jle
mov
cmp
incl
sbb
leave
jne
in
inc
sarb
push
and
sbb
cmpsl
in
pushl
movsb
imul
push
mov
mov
rol
fdiv
xlat
adc
divb
or
incl
lds
addr16
adc
arpl
lods
adc
bound
icebp
lcall
les
xchg
cli
xor
mov
inc
sub
bound
ljmp
xor
mov
mov
xchg
daa
lods
pop
sub
and
sub
jle
ds
mov
dec
sbbb
fs
js
pop
addl
ss
je
stos
ficoms
addr16
push
add
ljmp
adc
aam
out
sbb
shll
pushl
jge
orb
cmpsl
jp
rolb
adc
jbe
mov
adc
pop
cmc
and
xor
lock
flds
ret
inc
and
addb
mov
ljmp
out
je
or
insb
jno
lcall
push
cmp
out
imul
out
inc
and
pop
xor
add
dec
aaa
je
push
dec
pop
icebp
call
lret
ror
rorl
jecxz
cmp
inc
xor
and
sahf
sti
in
mov
mov
sbb
not
lcall
rclb
xchg
outsb
cmp
ljmp
inc
mov
sbb
mov
clc
outsl
mov
dec
test
testl
popa
push
and
mov
jmp
jle
mov
mov
scas
insl
add
call
sbb
jns
lcall
shl
xchg
cmp
in
mov
jge
out
stc
sbb
jmp
jmp
es
shr
ljmp
sbb
lahf
xor
cld
mov
ljmp
cmp
mov
movsl
les
xchg
rcrb
jns
int3
and
pushl
mov
cltd
mov
movsl
sti
sahf
iret
call
xchg
lret
xor
sbb
lcall
mov
sub
rclb
and
stos
push
xchg
loopne
and
hlt
pop
rcr
lret
mov
pushl
mov
mov
orb
pop
lret
jb
inc
push
decl
adc
jo
add
fistps
pop
xor
lahf
out
mov
jbe
dec
cmc
fs
dec
fcos
decl
out
dec
shlb
add
faddp
aad
ljmp
mov
les
inc
gs
pop
cs
mov
rorb
int
mov
push
pop
adc
and
popa
or
imul
incl
rorb
xlat
add
lods
and
mov
out
aam
cmp
sbbl
incl
sub
and
pop
aaa
mov
xchg
in
mov
rorb
sbb
sbb
lret
loopne
mov
inc
cmc
lods
mov
test
outsb
loope
add
imul
scas
mov
inc
imul
hlt
jle
mov
int3
in
test
or
in
jle
push
mov
ret
js
out
in
or
outsl
inc
sub
and
ljmp
mov
lds
pop
or
xor
dec
add
or
xor
pushl
jne
cs
loop
jl
push
sub
jg
decl
push
bound
scas
adc
iret
aam
testb
cli
fldl2e
inc
cmp
inc
sbb
ljmp
mov
xchg
xor
lods
jnp
cmp
cli
fistps
mov
add
pop
pop
jmp
out
xrelease
dec
ljmp
pop
jo
xor
movsl
test
adc
and
call
jne
testb
ljmp
popa
dec
repnz
loope
fbld
mov
rol
push
cli
leave
lods
pop
fsubrs
push
jecxz
xchg
ss
or
push
pushl
repnz
outsl
icebp
ret
sub
aaa
inc
lret
xchg
sbb
int
add
hlt
leave
mov
jns
jmp
mov
or
fnstsw
add
push
scas
fsub
sbb
and
pushf
call
test
mov
mov
inc
adc
mov
jmp
adc
lods
xor
aas
jecxz
cmp
sbb
mov
ljmp
rcrb
fisubs
or
nop
cwtl
jg
outsb
in
outsl
pushf
sub
dec
or
call
arpl
pop
xchg
adcl
rcrl
mov
adc
cld
adc
push
popa
imul
sub
shl
out
sub
shl
cmp
loopne
test
pushf
mov
sbb
fnstenv
xchg
add
cmpsl
aaa
cld
pushl
notl
dec
std
sbb
call
decl
sti
add
xor
cld
ss
repz
pop
shll
mov
fiaddl
incb
loop
in
sbb
cmp
inc
es
cli
push
pop
dec
or
xor
sbb
aas
cs
cmpsl
sub
in
add
push
push
jno
std
cmp
scas
iret
mov
jbe
cli
push
jbe
mov
int3
jp
xlat
jge
push
sub
ja
movsl
xchg
sahf
cmp
insl
pushf
pop
jno
adcb
sub
jmp
jbe
add
add
inc
jo
xchg
inc
stc
and
stc
out
or
ret
lret
inc
aaa
hlt
in
loopne
jb
sbb
jmp
and
imul
cmp
out
test
mov
push
mov
pop
jmp
cmc
and
cmc
imul
sbb
lods
lods
sub
lcall
xor
adc
je
mov
sbbb
or
jecxz
outsb
adc
aam
cmp
call
shl
xor
jl
push
adc
mov
aaa
in
in
adc
xor
jmp
and
add
xchg
pop
jne
lods
repnz
ret
cmp
pushf
xchg
jb
dec
dec
dec
adc
lcall
mov
outsb
pop
sti
lea
daa
sub
scas
sbb
dec
repnz
test
test
fstpt
in
sub
insb
loop
lods
cmp
jno
addr16
stos
mov
pushl
in
in
addl
or
push
stc
lods
adc
fsubrl
loop
roll
push
or
in
xor
push
hlt
movsl
ja
jecxz
out
xchg
lret
stos
sbb
aas
inc
sar
ljmp
adc
jmp
cltd
mov
ljmp
or
fsubr
sub
testl
sar
stc
lcall
stos
sbb
mov
cmp
inc
push
test
inc
sbb
incl
jg
sti
cwtl
mov
xchg
sbb
xchg
jno
jbe
mov
sbb
pop
jmp
inc
cmpsl
pop
gs
movsl
test
sub
nop
or
testb
add
loopne
stos
and
lcall
outsl
mov
in
repz
or
pop
jae
push
mov
mov
cmp
add
pop
mov
add
loope
cmpsb
mov
xchg
out
lcall
mov
into
push
shll
std
iret
mov
ds
adc
fs
sbb
jo
cmpsb
sbb
sbb
jmp
cltd
sbb
and
or
mov
aaa
adc
lcall
xor
lcall
pushl
imul
cli
dec
jb
mov
push
stos
jne
add
lods
xor
mov
jp
mov
shrl
sti
and
mov
xchg
or
add
call
xchg
test
cmp
pushl
out
push
insl
fadds
lods
pop
and
and
js
imul
hlt
pushl
jb
or
fnstsw
pop
xadd
mov
inc
sbb
int
fildll
mov
loope
pop
imul
sbb
cmp
outsl
incl
fisttpl
xor
push
fnstcw
in
add
aas
popf
or
dec
mov
push
jne
cs
mov
ret
push
fnop
cmp
lea
aam
clc
push
cmp
pop
inc
or
jg
jnp
add
cmp
outsb
mov
decb
outsb
inc
aam
push
incl
int3
adc
jmp
scas
jecxz
xchg
dec
cld
adc
ljmp
xchg
inc
in
ljmp
fidivs
aam
arpl
sub
aaa
outsb
orl
or
scas
leave
xchg
push
in
adc
iret
repnz
jge
into
pop
jg
cwtl
fsubrl
scas
pop
ds
inc
scas
lock
out
out
and
ficoml
call
xor
and
dec
fistpll
test
pop
jmp
inc
sbb
std
decl
roll
icebp
inc
cwtl
jmp
mov
cmp
repnz
lret
clc
pushl
popf
jmp
and
sub
out
loop
test
mov
dec
add
call
je
add
cmp
and
fstpt
mov
sbb
in
and
sbbl
clc
push
aas
jmp
xlat
mov
push
leave
in
mov
add
out
sbb
into
imul
push
sbb
mov
xchg
inc
fdivrs
pop
frstor
call
lcall
mov
int3
dec
pop
clc
adc
cmp
imull
xchg
loope
dec
scas
push
aas
outsb
repnz
cmp
ss
sbb
push
rclb
dec
adc
fimuls
sub
sbb
pushl
and
adc
mov
int3
fldl
out
stos
cmp
out
dec
out
into
rcll
call
sub
test
mov
mov
fbld
mov
xchg
mov
jmp
or
adc
je
cltd
cmp
fadds
imul
mov
in
pusha
nop
ljmp
call
cwtl
sahf
add
shll
pushf
shlb
xlat
shrb
mov
jmp
mov
arpl
pop
dec
and
mov
pop
sti
pop
jmp
das
test
icebp
mov
ja
push
push
lds
push
ljmp
sbb
imul
sub
ljmp
inc
sbb
cmp
sub
mov
sub
leave
xor
fistpll
fadds
aaa
out
mov
push
mov
fdivl
cmp
popa
pop
jae
sti
jg
inc
scas
sub
jns
lret
scas
dec
jle
xchg
je
mov
lret
add
fisttpl
sub
call
lcall
xchg
fs
jmp
push
add
sub
push
and
fnstcw
fldcw
mov
dec
pop
xchg
or
inc
jl
lcall
idivb
inc
aad
gs
clc
gs
das
nop
sub
dec
fnstenv
stos
push
lods
sbb
loope
fcmovnbe
and
jo
mov
sbb
mov
aaa
lock
dec
in
clc
inc
rclb
out
add
hlt
push
cmc
roll
cmp
jno
mov
or
incl
ss
jo
lret
aas
mov
xchg
mov
cmpsb
leave
mov
jg
push
dec
ret
mov
push
inc
add
add
jecxz
mov
pop
call
jg
sub
mov
lret
aas
xchg
icebp
andb
push
call
pop
std
lcall
or
sbb
mov
and
dec
gs
push
lcall
test
int
sahf
jge
std
lea
or
arpl
sub
mov
jmp
and
jnp
movsl
fstpt
ja
arpl
dec
add
or
jl
stos
inc
jmp
incl
dec
shll
mov
mov
lock
imulb
ret
jg
decl
xchg
xor
jae
stos
fs
mov
mov
pusha
js
out
call
xchg
js
pop
les
mov
icebp
ljmp
push
jle
lea
jbe
xchg
rorb
or
call
mov
sarl
insb
insl
cmp
loopne
adc
stos
lea
add
decl
hlt
mov
jmp
movswl
mov
xor
test
cli
rcll
mov
mov
fisttpl
jg
xchg
test
cmp
dec
mov
pop
sbb
jle
inc
push
ret
test
jno
loop
and
and
ficompl
xchg
inc
pop
add
scas
jmp
decl
and
mov
daa
nop
insb
mov
push
fs
jnp
jg
call
mov
fadd
cli
loopne
pop
int
scas
cltd
sub
and
popf
jne
inc
lock
daa
inc
nop
cmpsb
adc
mov
inc
cld
mov
movsl
jns
daa
jg
decl
xorl
or
icebp
lahf
enter
adc
cmpsl
ror
movsb
jb
mov
inc
outsb
aad
inc
dec
fcomip
push
adc
sub
pusha
cwtl
dec
ljmp
and
push
xor
sub
std
cs
aaa
fbstp
arpl
xchg
sub
stos
das
sub
xor
mov
push
xchg
sbb
das
mov
cmp
ljmp
decl
push
jg
daa
mov
rorb
cmp
sbb
sub
add
decl
aaa
push
rorl
xchg
inc
jo
loop
movsb
add
pop
xchg
or
clc
imulb
repnz
int3
ret
sub
lea
push
in
pop
aam
inc
inc
popf
cmp
incl
xor
dec
test
and
je
imul
incl
mov
mov
pop
test
call
aad
or
decl
mov
or
scas
dec
loope
sarb
push
fwait
test
and
inc
aad
jno
popf
daa
sbb
mov
push
push
dec
mull
jg
xchg
fbld
les
cmp
pushl
mov
pop
pop
jg
jl
sub
loopne
lret
xchg
jb
jg
jbe
sub
ljmp
and
or
scas
or
call
fildll
fcmovne
insl
paddw
mov
jnp
addr16
cltd
pop
imul
and
mov
push
in
addr16
or
adc
add
subl
xchg
scas
in
lahf
push
movsl
imul
cld
cld
mov
jns
shlb
inc
adc
pop
cmp
lret
mov
out
xor
xchg
dec
insl
inc
pop
pop
jge
mov
cmp
sbb
add
decl
pop
pop
and
and
xchg
mov
ror
inc
jg
sbb
fbstp
sbb
push
data16
pop
jno
insl
xchg
cmp
jl
call
dec
pop
mov
clc
lds
scas
pop
jae
push
sbb
sbb
and
movsb
jno
mov
jne
sar
ljmp
jbe
or
notl
cmp
lahf
std
mov
and
add
mov
loop
leave
addr16
lcall
out
mov
mov
stc
hlt
mov
inc
aad
mov
push
xchg
jmp
add
rcr
insb
scas
cld
or
dec
jnp
and
ljmp
clc
adc
or
ja
fisubrs
cmpsb
jmp
mov
pop
pop
cmp
repz
fisttps
std
add
stc
hlt
test
loop
pop
out
ret
pop
mov
mov
cmp
les
mov
sbb
push
in
xchg
mov
fucomip
mov
add
mov
xchg
out
inc
sti
sti
inc
ret
mov
lock
and
outsl
mov
push
cwtl
fdivrl
pop
pop
out
jecxz
push
gs
data16
push
icebp
cmp
xor
or
pushl
je
rolb
mov
and
sbb
pop
fdivrs
jae
nop
shll
dec
hlt
jg
push
cmp
jne
dec
outsb
out
popa
pop
jecxz
cmp
inc
pop
in
popf
push
orb
sub
mov
dec
lock
jns
insb
dec
mov
mov
cmp
jns
cli
mov
int3
push
fwait
and
pushf
outsl
sbb
dec
pop
fs
jmp
jp
cmpsl
xchg
inc
arpl
cld
mov
insb
xlat
mov
outsl
lods
in
jp
push
add
scas
sbb
std
pop
or
std
dec
cwtl
and
lcall
pop
pop
or
add
fsubl
jle
lret
cld
sbb
jmp
test
stos
arpl
push
push
bound
mul
push
mov
loopne
ja
mov
sub
adc
loopne
or
fwait
out
mov
xchg
pusha
sbbb
in
sbb
xchg
movsb
sbb
lahf
mov
jmp
insb
rolb
xor
xor
pusha
aaa
loopne
jnp
ret
ljmp
clc
cmc
test
xchg
clc
repnz
call
sub
repz
or
lcall
pop
adc
jle
push
scas
mov
lahf
cltd
fildll
push
lds
js
imulb
dec
xchg
aas
mov
iret
push
and
in
clc
sbb
fldenv
incl
andl
jecxz
shlb
push
ja
xchg
pop
xor
adc
lock
clc
into
add
shll
testl
test
mov
pushl
fsubs
cs
les
fs
ljmp
out
stc
jnp
orl
test
das
pop
lea
ret
popf
add
andl
bound
xchg
jle
loopne
ljmp
ss
in
clc
add
lock
jne
mov
arpl
out
or
negl
scas
imul
dec
dec
adc
mov
xchg
aam
or
fists
adcl
in
stos
lcall
cld
lock
xchg
xlat
sub
push
fsubrl
outsb
dec
cmp
lcall
dec
mov
in
and
mov
xchg
sbb
dec
sti
js
mov
mov
push
mov
nop
ret
cs
out
scas
push
sub
sbb
adc
decl
lahf
loope
push
ss
aaa
mov
mov
cmp
xchg
jnp
cmp
pushl
jo
mov
add
or
cmp
adc
pushl
dec
lret
mov
sub
es
mov
shl
ljmp
sbb
add
jmp
adc
pop
ja
mov
addr16
es
mov
push
jb
popf
xchg
and
call
or
repnz
call
inc
adc
inc
pop
push
cmp
jge
notl
jnp
ret
xor
jl
jmp
dec
cmpsb
imul
xor
xchg
fwait
aaa
jb
leave
pmaddwd
aas
repnz
ljmp
inc
xchg
mov
cwtl
adc
sbb
xor
dec
nop
aas
scas
mov
xchg
outsl
pop
jle
add
aad
int3
mov
xchg
call
and
aaa
bound
xor
adc
mov
bound
and
stc
inc
incl
adc
sbb
andb
pop
xchg
push
sbb
jl
popa
rorl
or
cli
decl
cmp
mov
aad
add
popa
cwtl
or
mov
repnz
cwtl
iret
fldl
inc
push
mov
fstp
fwait
jo
and
mov
add
fdivrs
inc
jbe
rcl
and
test
fisubrl
arpl
ljmp
adc
pushf
insb
iret
adcl
imul
mov
repnz
xor
lahf
jle
pop
inc
dec
adc
pop
rcll
adc
mov
call
repz
ljmp
xor
push
pushf
xorl
or
mov
cmp
loopne,pn
addr16
shrb
add
cmpsb
fdivrp
adc
or
xchg
xchg
pop
cmc
in
pop
or
jne
cltd
lea
dec
sbb
stos
sub
xchg
dec
inc
xlat
mov
mov
fisubs
fisubrs
adc
dec
in
xor
mov
sub
and
cmp
push
push
jl
out
mul
cld
inc
inc
ljmp
test
lods
mov
mov
xlat
iret
aad
push
imul
rcrl
pushl
imul
jae
mov
pop
or
jnp
dec
push
inc
sub
test
call
xchg
test
cmp
pop
out
fs
or
mov
repz
lds
mov
test
and
jnp
or
xor
xchg
jmp
das
mov
jae
mov
xchg
fwait
ljmp
push
add
cmp
repz
scas
inc
insl
cmpsb
cmpsl
js
xchg
clc
call
dec
dec
test
push
ficoms
xlat
jmp
sbbb
popa
orl
or
add
jg
mov
cmpsl
mov
int
adc
or
dec
sbb
shlb
les
in
in
pusha
dec
jo
mov
je
pop
sub
jl
pusha
data16
ret
or
testb
in
pushl
jbe
jg
mov
dec
bound
jmp
nop
popf
push
mov
ss
dec
push
add
sti
bound
mov
mov
mov
inc
shl
mov
jmp
insb
xlat
or
jns
dec
repz
mov
sub
les
cltd
testl
pushl
call
sbbb
sti
jl
sbb
outsl
pushl
or
cmp
cmp
in
sub
pop
incl
insl
add
aam
enter
jecxz
inc
scas
mov
push
fidivrl
fsubl
ljmp
and
pop
sub
mov
out
faddl
ret
pop
cmp
decl
pop
dec
push
mov
addl
sahf
pop
xchg
adc
idiv
decl
jae
push
cmc
xchg
call
push
loope
push
jnp
daa
sbb
xchg
mov
cmc
add
jmp
push
push
mov
test
jae
jmp
clc
mov
mov
movsl
dec
inc
jmp
mov
cld
cmpl
xchg
rorb
scas
call
adc
popl
fcoms
add
out
leave
ret
orb
xchg
add
imul
in
mov
ljmp
inc
pop
and
xchg
xchg
shrl
inc
sbb
sub
ljmp
xchg
sub
mov
pop
inc
sub
in
popa
pop
pop
mov
incl
adc
cmpsb
setb
pop
flds
dec
xor
or
push
sub
cld
decl
mov
mov
cmc
xchg
lret
push
icebp
sti
jnp
call
mov
incl
paddusw
jb
mov
faddl
inc
pop
repnz
pop
pop
loopne
mov
pop
pop
mov
rcr
shlb
xchg
sub
call
cmc
adc
xor
dec
ss
ljmp
add
jle
mov
cmpsb
ds
jo
inc
fmulp
cmp
adc
pop
icebp
addr16
aad
aas
add
mov
dec
inc
jmp
pop
xchg
adc
ret
push
cli
mov
lock
mov
mov
ljmp
add
and
es
mov
jns
jecxz
aad
and
jno
jno
mov
jecxz
pop
mov
into
js
pop
xlat
add
call
lea
cli
bound
outsl
stos
sahf
lret
sub
cmp
push
xor
pushf
shl
jmp
movsl
insl
sbb
mov
xor
enter
adc
xchg
or
mov
jns
xchg
push
xor
fcomps
mov
jmp
push
inc
jb
xchg
js
jmp
dec
out
cmc
bound
adc
cltd
pop
scas
sbb
repz
jmp
in
mov
jg
fdivrp
mov
jnp
push
cmpsb
xor
mov
lea
ljmp
orb
dec
pop
sbb
fldcw
les
jmp
mov
div
push
jo
enter
cltd
into
mov
pushl
sti
cwtl
je
xchg
sbb
stc
cmpsl
test
imul
test
jmp
sbb
shrl
fdivrl
mov
jle
dec
aad
in
and
adc
lret
dec
pop
rep
mov
or
test
lcall
mov
call
dec
clc
xchg
sub
xor
xor
or
dec
jns
pop
cs
cli
gs
imul
pushl
ret
push
sub
or
mov
clc
test
iret
dec
or
and
adcl
cmp
mov
jae
sub
pop
sub
xlat
mov
lods
jp
aam
out
scas
jmp
mov
pop
push
fsubrp
inc
js
insl
insb
adc
mov
xor
nop
mov
arpl
mov
jae
inc
pop
adc
rorl
inc
xor
dec
out
pop
cmp
in
cmp
fcoml
adc
mov
mov
arpl
pop
mov
or
call
call
test
popa
and
daa
push
scas
dec
xchg
mov
icebp
in
adc
xor
decl
xorl
loope
mov
xchg
push
pop
lret
iret
mov
jnp
out
lahf
mov
jmp
cli
int3
cltd
push
push
out
jge
pusha
push
shlb
add
sbb
sbb
call
loopne
fwait
sub
js
add
data16
js
fldcw
pop
inc
decl
loope
xor
test
mov
or
test
and
jae
shll
xchg
add
lcall
xor
mov
xor
mov
sarb
add
loopne
xor
loop
jns
ret
popf
mov
dec
push
cmp
nop
cltd
jo
scas
scas
add
ret
incl
clc
xor
mov
mov
sbb
pop
pop
shl
stos
lret
std
decl
mov
mul
push
stos
mov
sub
idivb
in
lea
sub
movsb
leave
data16
gs
std
lea
in
das
popf
adc
shll
jp
in
push
jg
repnz
xchg
cmp
inc
daa
lea
push
and
out
jmp
cmpsl
add
lods
int3
cwtl
sub
enter
mov
add
loope
or
mov
and
add
mov
into
ret
cmp
jnp
cmp
cmp
pop
pop
aas
sahf
mov
iret
cmp
sbb
xor
and
and
sti
stc
shrb
lcall
mov
loopne
xchg
test
push
sbb
sub
pop
cld
decl
inc
xchg
jo
xor
sub
loop
subb
push
rolb
hlt
out
inc
incl
lcall
sub
inc
daa
inc
lret
xor
jmp
cmpsl
pop
std
push
xchg
inc
lretw
hlt
push
insl
sbb
jo
cs
call
js
cmp
and
add
push
or
mov
dec
push
cmp
ljmp
jl
imul
lcall
xchg
insl
and
movsl
scas
int3
add
or
dec
push
loopne
into
pop
push
dec
inc
mov
cli
pop
dec
les
fmuls
arpl
and
jne
cmc
ljmp
insl
adcb
test
inc
push
cmpsb
add
ret
jae
in
sub
push
mov
stos
pop
incb
push
sub
jl
adc
ds
add
test
fildll
pop
outsl
pop
xchg
jo
cld
adc
xor
or
fbld
cmp
xchg
movsb
loop
lcall
insb
out
inc
xchg
dec
sub
jns
mov
orl
mov
lods
mov
aam
lods
mov
pop
mov
fcomps
clc
pushl
cmp
sti
pop
out
or
loopne
pusha
shll
fistps
lcall
ljmp
lock
or
out
pusha
sarl
pushf
adc
or
adc
rcr
hlt
gs
iret
and
ret
xchg
decl
stos
jg
and
js
into
mov
test
decl
inc
jbe
jp
xor
lret
out
push
mov
mov
sarb
fwait
mov
ja
mov
out
dec
mov
mov
jle
dec
mov
test
push
movsb
push
iret
ret
mov
jecxz
mov
push
mov
jle
sbb
popf
data16
ja
lea
lods
pop
ljmp
les
clc
mov
push
pop
lcall
jae
fwait
mov
push
lds
in
adc
sbb
inc
or
inc
xchg
inc
add
aad
mov
test
pop
adc
test
mov
cmc
in
mov
and
pushl
aam
xlat
mov
sbbb
add
mov
filds
rclb
inc
int3
cmpsl
add
or
mov
pop
push
cmp
out
popf
cmp
jl
xchg
mov
mov
jp
andl
xchg
push
mov
or
dec
sub
insb
ljmp
je
or
into
repnz
inc
into
pushl
jp
add
sub
out
mov
push
push
adc
cmpsl
rorl
rclb
mov
cmpsb
jle
inc
add
sub
mov
enter
pop
cmc
decl
shr
rolb
jae
cld
lahf
adc
pop
int
out
mov
xchg
fwait
mov
mov
mov
lcall
into
sbbl
out
into
daa
rcll
cmc
cmpsl
sbb
push
fmul
push
stos
idiv
decl
das
pop
xor
jge
callw
rcrl
inc
mov
cmpsb
aaa
inc
jle
push
push
rorl
push
pop
shl
and
ret
add
repz
pushl
jg
mov
lret
rcrb
insb
xor
out
scas
mov
inc
sub
enter
jmp
mov
notl
mov
sbb
dec
shr
or
sar
call
ret
mov
inc
in
jecxz
pushl
stos
pop
shll
loopne
mov
push
lret
mov
mov
imul
in
ret
loop
mov
inc
insl
rolb
test
pop
jge
inc
mov
andb
andl
pop
scas
cmp
sbb
mov
adc
je
mov
jne
sbb
mov
fdivr
lcall
cmpl
adc
mulb
ficomps
add
clc
int
xchg
pop
jecxz
std
inc
ffree
jae
cmp
rorb
sbb
add
shll
jb
fcomip
mov
xchg
test
xchg
jge
push
inc
mov
xchg
decl
ja
test
mov
pop
addr16
dec
call
cli
les
out
std
lcall
jecxz
lret
jns
or
mov
lods
push
mov
movsb
push
test
call
cmp
nop
stos
ljmp
push
xor
cld
fbld
dec
pop
push
cmp
mull
push
dec
fnstcw
add
mov
hlt
lcall
movsb
dec
mov
mov
jmp
call
dec
gs
addb
dec
cli
sbb
or
bswap
mov
rcl
into
pop
jo
add
pop
jo
mov
stos
je
sub
inc
test
dec
mov
sub
add
dec
fdivrs
outsb
and
test
add
mov
mov
xchg
jg
pop
jnp
jnp
push
mov
movsl
call
fwait
out
stc
test
push
cwtl
outsl
mov
sbb
xchg
aad
push
mov
pushl
aad
add
fmuls
mov
rclb
and
outsb
inc
call
mov
ret
pop
cld
push
dec
add
xlat
lea
xchg
push
pusha
add
insb
pop
xchg
fsts
ljmp
aad
jmp
push
xchg
stos
int
add
and
shlb
sbbl
movsl
jbe
ficoms
xor
jb
mov
mov
jae
fildll
loopne
lcall
sar
ficompl
cmp
rcrb
ds
shlb
pop
inc
sti
ljmp
adc
xchg
aam
jns
dec
call
push
mov
hlt
sub
and
outsb
or
inc
outsl
sub
aad
mov
out
notl
gs
xchg
add
testb
add
ljmp
push
mov
stos
fstpl
ja
shll
or
pop
cmp
jg
movsl
incl
ret
mov
cmpsl
repnz
jbe
test
cmpsl
adc
xor
lods
out
mov
ds
gs
sbb
out
and
shlb
sub
lahf
xchg
jmp
xor
outsl
xchg
pop
insb
jle
inc
cmp
push
jno
xchg
ljmp
stos
push
call
cld
inc
push
xor
inc
das
fwait
test
dec
out
pushw
out
call
push
das
lret
jo
ljmp
sbb
out
jl
mov
cmp
fbld
pop
pusha
sub
xor
mov
push
adc
inc
add
fstl
pusha
or
stc
cmpsl
push
int
mov
adc
push
lock
dec
lcall
add
das
mov
mov
inc
add
and
dec
jle
test
fidivrl
dec
jae
ja
sbb
sbb
mov
imul
mov
pushl
push
xchg
fdivrs
out
mov
cli
cmp
bound
inc
imul
arpl
jecxz
add
inc
insb
sbb
mov
in
mov
xchg
push
adc
xlat
mov
loopne
pop
data16
ja
nop
mov
lods
cs
arpl
call
test
aad
add
daa
out
sub
xor
cmpl
or
mov
std
push
scas
movsb
lret
mov
jmp
dec
dec
pushf
loop
mov
dec
sub
outsb
lahf
addr16
into
mov
sarl
xchg
mov
fsubs
xchg
add
nop
jae
into
loop
shlb
sub
das
les
jo,pt
fs
pop
push
push
fistps
pop
xchg
pop
xchg
fisubrs
ljmp
imul
out
cli
sbb
outsb
jno
add
test
movsl
lea
lods
mov
test
or
inc
iret
out
cs
gs
test
and
mov
xchg
fs
incl
fdivl
pusha
cmp
sbb
mov
add
pop
stos
insb
ds
decl
jl
sub
sti
push
aaa
addb
mov
clc
mov
inc
subl
lods
sub
cmp
add
movsl
cmpsl
mov
addb
cmpb
push
push
decl
mov
rcrb
or
test
stos
fcmovnb
sbb
out
pop
mov
jmp
inc
aaa
pop
cmp
je
fcomi
roll
inc
mov
xchg
data16
push
add
cmp
aam
rorl
into
adc
sbb
and
stos
sti
jg
std
xchg
inc
int
cmpsb
in
aam
jecxz
fld
aaa
xchg
push
int3
das
inc
mov
push
mov
dec
jg
add
cmp
mov
test
jmp
imul
pop
gs
cwtl
pop
lock
cmp
sbb
out
mov
test
data16
push
ljmp
mov
adc
fcomi
sub
popa
cltd
mov
orb
icebp
mov
incl
repz
int
scas
cli
mov
add
lcall
mov
mov
inc
iret
insb
mov
stc
icebp
jnp
xor
int3
mov
ja
jns,pn
and
lret
xlat
bound
add
jp
sbb
filds
out
push
xor
mov
loop
or
add
int
shl
and
sbb
jb
or
loope
dec
mov
ds
repnz
scas
ret
decl
inc
into
push
test
inc
std
xor
push
pop
sub
jecxz
ja
fwait
aas
push
call
clc
jno
aam
cmpsl
test
fdiv
mov
mov
outsl
into
xor
jmp
sarl
sarb
imul
xor
push
add
hlt
jg
sahf
inc
rorb
stos
test
je
xchg
jmp
pop
jne
inc
out
xor
bound
adc
shrd
popa
das
push
inc
in
test
hlt
cmp
vpaddusw
pop
mov
and
lret
mov
mov
rcrb
xor
inc
jbe
mov
aaa
add
movsb
xor
mov
sbb
clc
xchg
mov
lock
ret
adc
sub
aas
push
cld
cltd
lret
stos
nop
cmp
lea
mov
adc
dec
jmp
push
out
test
inc
into
jl
jg
pop
xchg
xchg
fwait
call
lea
push
xchg
pop
dec
jl
and
mov
mov
decl
xchg
stc
fnstsw
mov
push
inc
dec
stos
add
out
jg
adc
int
xor
call
sub
push
decl
fsubl
jo
stos
pop
fstpl
test
mov
scas
inc
sbb
cmp
pop
xor
pmulhuw
out
imull
lret
sub
mov
xor
jae
xchg
lock
inc
pop
jle
sbb
loope
out
mov
adc
mull
or
cmp
sbb
cmpb
daa
lods
inc
fs
popa
les
clc
call
push
inc
fcomps
jg
into
push
mov
aas
int3
sub
cld
mov
cwtl
sbb
call
addr16
lods
in
or
fbld
pop
scas
mov
push
jae
insb
fisubrs
aad
push
cmp
jge
fists
sub
js
add
mov
ret
mov
loope
ret
dec
lahf
loope
lret
mov
dec
xchg
call
xchg
jmp
dec
or
mov
pushl
std
jl
xchg
fadds
fistl
int3
es
mov
data16
sub
xor
dec
inc
pushl
inc
cmp
clc
test
das
jno
into
arpl
add
dec
and
shl
jge
mov
inc
mov
dec
scas
pop
jno
sbb
xchg
push
ja
adc
pushf
pop
mov
pushl
enter
dec
imul
fisttpl
push
sahf
sarb
mov
cli
jge
mov
stos
lcall
mov
dec
pop
pop
pop
adc
xchg
decl
pushf
addr16
insb
or
mov
icebp
push
xchg
mov
mov
jg
cltd
ret
or
clc
sarb
mov
mov
ljmp
cs
push
movsl
dec
lcall
or
ljmp
call
inc
gs
imulb
pop
and
pop
push
dec
sbb
add
cmp
add
xchg
fdivs
cs
mov
jae
decl
cld
mov
ud0
std
enter
lahf
or
cmp
repnz
js
push
sub
mov
int
xchg
ret
repz
jae
jmp
pop
ja
mov
and
jg
adc
imul
push
out
loop
xchg
lcall
gs
dec
add
jg
ljmp
call
xor
out
fadds
sub
xchg
mov
jg
pushl
loope
aad
inc
cwtl
jle
sub
test
pop
pop
lcall
mov
repnz
or
push
daa
in
jp
pop
jg
and
nop
jno
xor
mov
divb
adc
out
mov
into
inc
cmp
pop
xlat
sub
mov
jl
mov
adc
jg
jmp
cmp
out
int
arpl
sbb
popw
sbb
loope
and
mov
jo
adc
xchg
repnz
fcmovu
add
sti
push
cmpsl
scas
xor
mov
lea
dec
lock
call
and
xchg
adc
push
jg
incb
mov
mov
xlat
fxch
pop
int3
push
lcall
mov
push
lcall
orw
mov
xor
adc
fisttps
sarb
shl
decb
fstps
push
pop
inc
cmp
push
push
mov
mov
incl
negl
mov
ret
lods
sti
xor
dec
lret
testl
mov
add
incl
mov
push
lret
rol
imul
bound
cs
jmp
push
les
enter
push
inc
sahf
decl
ss
popa
in
pusha
clc
sub
sbb
insb
nop
inc
lcall
call
nop
ljmp
lahf
pop
cmc
pop
pop
fwait
out
sbb
sbb
popa
fwait
jbe
fsubs
incl
pop
dec
or
push
inc
mov
mov
iret
push
lcall
movb
repnz
leave
mov
sbb
in
jb
sbb
mov
mov
mov
fcomip
out
mov
test
adc
xor
xchg
in
sbb
add
mov
pop
loopne
cwtl
das
hlt
push
aaa
pusha
fidivs
aam
subb
jnp
cltd
cmp
aad
inc
cmpsl
mov
pop
repnz
sbb
cmp
mov
movsb
leave
fcmovne
js
sub
cmpsl
add
pop
inc
push
shrd
cli
push
test
push
dec
pop
pop
adc
xchg
mov
mov
push
testb
clc
cmpsl
outsl
pop
cmpl
aas
ljmp
out
mov
mov
iret
in
ss
in
dec
je
push
pop
lea
outsb
inc
jb
jmp
leave
push
out
mov
insb
adc
sbb
js
xchg
add
lahf
incl
popf
lods
mov
sbb
fcompl
testb
mov
decl
subl
mov
popa
nop
jbe
adc
insl
test
push
cmpsb
sbb
ljmp
call
fimuls
pusha
jp
pop
mov
jne
rcrl
jl
loop
imul
jg
xchg
mov
in
arpl
decl
push
scas
mov
or
popf
or
xchg
jmp
out
push
sub
lcall
inc
lea
sarb
xlat
cwtl
cmp
add
mov
mov
ljmp
std
adc
movsb
mov
outsl
add
sbb
or
add
fbstp
outsb
lahf
aam
pop
lods
mov
mov
sahf
orl
or
aaa
in
jg
cmp
popf
shrl
test
jmp
sub
aaa
xchg
cmp
adc
pop
es
push
out
mov
cwtl
dec
push
mov
orb
inc
sbb
inc
lret
push
jmp
mov
adc
dec
xchg
test
add
xchg
xchg
into
cmc
ja
out
sbb
mov
idivl
xchg
push
jns
mov
cmp
loop
push
outsl
movsb
sbb
push
daa
insb
cmc
pushl
inc
jnp
les
fcoml
add
fwait
adc
sub
lcall
sub
mov
inc
sbb
insl
ds
add
cmc
dec
test
call
inc
ljmp
pop
push
sbb
out
xor
mov
and
fwait
jb
inc
fistpll
sub
mov
movsl
dec
mov
js
inc
fs
mov
into
add
imul
std
popf
aad
cmp
jle
mov
xchg
in
pop
jge
xor
mov
je
imul
dec
inc
and
fstl
jg
lods
scas
stos
in
mov
push
pop
or
fwait
aam
psllq
jmp
or
xchg
mov
mov
int
fsubrs
xchg
push
sub
js
je
out
mov
jmp
sbb
sbb
or
inc
mov
jnp
sbb
add
pop
test
fstpt
lock
jmp
jne
mov
inc
out
xorl
inc
push
and
clc
mov
clc
jbe
orb
clc
mov
fwait
adc
jbe
ds
xor
decl
mov
push
lds
mov
insb
inc
repz
push
xchg
popa
insl
in
jge
pop
cmpsl
jecxz
ret
xor
arpl
cld
dec
sbb
shlb
sub
lcall
pop
shlb
add
call
jg
sbb
out
loop
jl
mov
in
flds
sbb
stc
hlt
or
xchg
cmc
fnstcw
inc
sar
dec
hlt
scas
stos
ljmp
dec
stos
lock
sub
lds
xlat
int
outsb
out
incl
push
lea
add
cmpsl
push
mov
in
in
test
cmpsl
fs
incl
fmull
add
mov
pop
add
imul
mov
leavew
or
aad
dec
and
ja
in
lret
test
lcall
fwait
popf
leave
imul
cwtl
or
bound
addl
mov
enter
dec
mov
mov
jmp
pop
xchg
xor
sbb
lea
xchg
stos
xchg
xor
pop
cmp
sbb
cltd
mov
cmc
decl
fidivrs
adc
adc
pop
push
ljmp
mov
dec
mov
jnp
xor
stc
cmpsb
shll
lcall
dec
sub
clc
lret
cltd
lret
cli
fs
fcomps
fs
shl
aaa
rcl
lods
ljmp
xchg
push
js
rol
or
sub
mov
lret
leave
jmp
mov
dec
xor
add
xchg
cwtl
mov
pop
mov
outsb
aas
loop
test
incl
pop
mov
mov
pop
or
cltd
push
outsl
fnsave
fs
xchg
jmp
fmulp
jbe
addl
push
aaa
push
ljmp
das
inc
jl
call
pop
pop
scas
cwtl
nop
fldenv
sub
sub
rclb
out
aam
mov
or
fdivs
call
mov
xchg
fwait
arpl
sti
xlat
lcall
shr
add
sbb
ljmp
clc
mov
pop
xor
sbb
stos
mov
and
pop
icebp
pushl
xor
movsb
data16
mov
dec
out
out
lds
push
push
xor
add
out
subl
or
decl
dec
push
xor
sbb
lret
sbb
movsl
and
mov
ljmp
or
cmpsb
mov
lcall
sti
adc
testb
js
push
pop
imul
fldl
xchg
ljmp
xor
lods
mov
out
cmc
in
lds
xchg
jne
lcall
jl
aad
lcall
cmp
insl
stos
out
lret
stos
out
sbb
jmp
inc
mov
and
sbb
xchg
xchg
jmp
fdivrl
dec
sub
cmp
push
push
ds
fnstenv
mov
and
add
fistpll
rorb
add
lds
test
inc
adcb
cwtl
jl
jb
lds
jg
add
fisubrs
js
and
cs
insl
ss
ljmp
jecxz
dec
cld
sub
cmp
xchg
das
leave
jno
sti
push
push
or
pop
cltd
out
jno
dec
cwtl
insl
sbb
or
test
mov
mov
sub
in
mov
iret
aas
popf
or
lcall
lahf
xor
incl
ret
sbb
and
dec
cmp
shl
mov
jmp
nop
xor
je
sbb
push
mov
fmuls
xchg
mov
adc
lock
mov
mov
jl
and
jmp
sbb
insb
rolb
cmp
xor
iret
test
dec
lock
outsb
out
stos
rcl
rorl
shll
imul
cmc
addr16
mov
fisubrs
jmp
leave
cmp
bound
pusha
fildll
mov
mov
dec
mov
cmp
mov
and
mov
int
ljmp
mov
sti
incl
and
jo
shll
inc
lods
mov
sti
xchg
ret
pushf
cwtl
mov
sbb
rclb
fcmovnu
jl
lret
je
stos
pop
cmp
or
shll
push
adc
inc
dec
cmp
pushl
lret
jno
nop
pushf
xchg
insl
adc
mov
leave
popa
arpl
push
imul
push
inc
jnp
lahf
call
js
adc
icebp
arpl
mov
div
fisttps
cmp
mov
sbb
inc
ljmp
and
stos
mov
jbe
or
lcall
add
repz
or
cmp
xchg
mov
bound
decl
fsubrp
dec
fldcw
stos
std
ds
cmp
test
dec
in
jns
push
pusha
loopne
mov
ss
mov
lock
rol
mov
push
pushf
push
lods
and
incl
push
pop
adc
xor
lds
mov
sbb
in
lcall
xchg
lret
add
bound
pop
stos
lods
jg
les
bound
push
repz
jl
iret
testb
icebp
jnp
aaa
xchg
jae
xchg
push
cmpsl
stos
mov
mov
in
les
lock
jg
fwait
push
ds
lea
push
dec
fsubl
add
aaa
stc
ja
in
lods
mov
decl
fidivrs
mov
push
iret
lods
insl
sbb
loope
mov
lcall
in
lcall
shrl
loope
lds
push
ret
fs
rol
es
mov
ds
roll
ljmp
fbstp
jnp
inc
jne
push
div
pushf
and
or
xchg
lret
imul
and
incl
test
loop
addl
ret
inc
jg
push
aas
push
mov
cs
mov
test
cli
mov
jb
stos
fimull
sub
jae
lcall
cltd
aaa
daa
and
adc
mov
loope
mov
sahf
outsb
mov
rorb
call
cmpsl
xchg
addr16
or
in
mov
sub
pop
sbb
cvtpi2ps
lcall
add
fxch
jbe
lods
repz
sub
int
mov
add
enter
jno
inc
cmp
inc
pusha
incl
and
and
mov
cmp
cmp
dec
cs
jnp
dec
xchg
nop
stc
jecxz
shlb
adc
sub
sar
adc
les
pop
inc
mov
mov
add
jg
jmp
stos
lret
xor
imul
js
rcr
cmpsb
fwait
push
jb
loop
pop
lahf
int
int3
das
cli
pushl
pop
sbb
sub
out
dec
stc
popf
mull
push
adc
jb
incl
fcomps
inc
or
mov
or
cmc
loop
sbb
loop
mov
in
or
push
pop
pop
and
jl
data16
sbb
xor
aad
adc
int
out
imul
mov
sub
pop
cmpsl
fwait
add
call
out
jl
mov
mov
fiaddl
ds
lea
inc
incl
lret
add
popf
mov
jmp
ficoms
mov
call
cmpsl
mov
sub
cmp
aaa
inc
ljmp
sahf
push
clc
test
incl
adc
fdivl
push
push
rorl
incl
jg
out
add
mov
out
pop
dec
popa
cld
test
pop
test
lret
push
mov
and
aaa
push
sbb
xor
mov
mov
popf
das
insl
inc
sub
mov
mov
pop
cli
fisubl
sbb
fsubl
fstps
jl
sub
jp
xchg
push
cmpsb
mov
repnz
ret
int3
mov
int3
stos
push
dec
loope
loop
nop
push
mov
ljmp
push
dec
mov
loop
sbb
or
iret
outsb
push
lea
push
pushl
push
inc
mov
push
xor
and
out
iret
push
shll
insl
sar
add
inc
aam
push
das
dec
mov
pop
out
mov
mov
mov
mov
rcrb
pop
jno
rcl
out
sahf
push
mov
dec
push
mov
cmpps
add
cwtl
mov
and
sahf
das
adc
fmuls
mov
dec
jne
xlat
loopne
inc
int3
sarb
insl
mov
lahf
inc
add
sub
mov
adc
dec
js
outsb
mov
ljmp
and
dec
sbb
pop
jmp
and
mov
mov
cli
mov
push
aam
dec
lret
adc
dec
xlat
lret
fucomp
lock
clc
test
lret
push
and
decb
mov
insl
pop
fldl
xchg
fildll
pop
pop
cld
push
imul
out
sar
ljmp
int3
sarl
push
pop
mov
repnz
mov
into
sbb
sub
fwait
mov
sbb
mov
jg
xchg
xor
push
push
cmp
int
imul
cmpsl
and
mov
cmp
mov
dec
popf
jl
push
sub
cmpsl
cmp
loop
add
dec
mov
call
add
push
shl
pop
pop
push
adc
ds
inc
imul
mov
loopne
cmp
out
push
js
dec
mov
ss
inc
mov
add
fcomi
insl
cmp
push
mov
fsubs
dec
xchg
out
adc
mov
pop
clc
iret
push
jns
sar
divb
ds
adc
pinsrw
bswap
in
lret
and
ljmp
xchg
scas
xchg
mov
movsb
lcall
mov
hlt
stc
xchg
hlt
in
fs
push
lcall
push
inc
jns
dec
adc
decl
test
cmpsb
mov
cmp
mov
lods
adc
inc
jno
rcr
inc
pop
xchg
xor
jg
cmp
loopne
and
inc
push
in
daa
pop
adc
inc
or
shlb
mov
sbb
push
add
cwtl
sub
mov
push
cmp
call
out
jo
xchg
inc
pop
jno
adc
xchg
and
in
mov
mov
sub
call
loope
push
sbbb
jg
test
dec
sbb
cmc
or
lcall
jbe
mov
push
std
adc
rorb
xlat
and
xchg
mov
jecxz
dec
out
jg
sub
jbe
rcrl
repnz
enter
ljmp
xor
mov
xor
add
push
mov
xchg
test
jecxz
stos
mov
push
std
jg
lahf
adc
add
and
mov
pop
cmp
dec
jmp
cs
sbb
xchg
add
bnd
push
idivb
addr16
add
movsl
stos
xchg
ret
jecxz
cld
pushl
out
mov
stc
lea
loop
sub
pop
push
adc
mov
xchg
mov
pop
mov
mov
mov
es
mov
bound
fnsave
ret
sahf
repz
fbld
mulb
pop
or
sbb
add
push
dec
jo
jp
pop
shrb
inc
inc
pop
movntps
push
push
sub
les
test
lods
push
imul
push
pop
xchg
inc
enter
push
push
cmp
push
and
fwait
sub
jb
xchg
mov
jmp
add
xor
dec
mov
push
js
loopne
xor
fst
mov
jb
xchg
lds
inc
sbb
xchg
xor
js
sub
outsl
sbb
dec
test
imul
pop
shr
inc
aas
fwait
cltd
xchg
sarb
fldt
xor
out
cli
insb
bound
cli
lret
out
incl
add
adc
lcall
icebp
push
bound
les
mov
pushl
sub
adc
push
push
push
into
push
jl
std
add
mov
loope
mov
popf
pop
jecxz
mov
pop
stc
pop
push
sub
jg
addr16
or
lds
cli
and
stos
cmp
outsb
sahf
jmp
xor
std
cmp
lcall
int3
fwait
std
mov
shrl
jge
mov
adc
xor
rcrb
mov
scas
sub
mov
jns
clc
insl
adc
out
cs
aas
loope
adc
mov
inc
mov
fcomip
call
mov
adc
int3
adcl
test
jnp
scas
movsl
icebp
mov
lcall
gs
jns
ljmp
dec
jp
sub
imul
fcomi
push
mov
sub
hlt
mov
pushf
mov
add
lcall
mov
dec
in
lcall
pop
xor
in
xchg
jno
dec
loope,pt
push
push
pop
jg
xchg
jp
adc
xor
cmp
xor
xor
aas
add
arpl
mov
ljmp
mov
xchg
push
push
mov
cs
ljmp
cmpsb
test
popa
pop
or
adcl
and
decl
lea
or
lods
out
dec
test
arpl
dec
movsl
adc
jp
loop
int
call
inc
dec
mov
imul
outsl
call
es
mov
cmp
push
xchg
adc
nop
out
shrb
lret
pop
mov
decl
loopne
ds
sar
clc
cwtl
xor
mov
test
add
decl
jecxz
addl
aam
out
add
xor
push
popf
xchg
mov
cmp
fcomip
mov
pop
pop
fadd
stc
dec
adc
nop
mov
fucomip
mov
call
imul
or
push
insb
and
aad
cmp
dec
pop
es
cmp
jbe
ljmp
outsl
inc
xor
pop
or
add
call
inc
lods
shrb
xchg
mov
dec
lret
fldenv
das
fwait
mov
ret
mov
adc
xchg
ljmp
arpl
or
sub
jge
rol
cmp
mov
sbb
ljmp
inc
sti
adc
ret
xchg
xorl
out
add
lret
xlat
or
jl
leave
insl
dec
and
jg
pop
sub
mov
jno
xchg
inc
xchg
and
jns
ret
pop
mov
mov
cltd
push
xchg
push
adc
mov
xchg
mov
jge
mov
xchg
or
fildll
add
sbb
mov
repnz
pop
fiadds
in
incl
inc
addr16
cs
sbb
xor
movsb
pop
out
in
mov
call
jnp
mov
dec
mov
jg
aaa
adc
cmp
movsl
jg
cmpl
aas
mov
mov
in
mov
sub
dec
jl
cmp
mov
leave
outsb
loope
xchg
idiv
lcall
aaa
cmc
inc
mov
sub
int3
mov
add
scas
int
xor
xchg
and
push
and
out
aam
or
inc
adc
and
sub
cld
cmp
sahf
and
cltd
insl
lahf
popf
push
pop
pop
dec
jecxz
testl
pop
out
pushl
pop
outsb
icebp
and
pusha
clc
fists
ret
and
push
ficoms
in
jbe
lar
dec
addb
or
sbb
fildll
dec
and
dec
in
pop
int3
hlt
fisttps
sub
ret
aaa
mov
decl
jg
bound
ljmp
sbbl
pushl
imul
xchg
lods
mov
mov
jns
ljmp
cltd
cmpb
out
jmp
pushl
fisubrs
pop
jg
or
xor
sbb
lea
dec
push
cmp
sbb
enter
scas
out
push
lahf
push
iret
inc
out
adc
mov
inc
mov
add
loope
adc
cmpsl
shl
cltd
leave
mov
ss
xchg
adc
lahf
stc
pusha
idivb
mov
leave
add
stos
ret
stc
sub
daa
pushl
sbb
mov
xchg
fmuls
lock
out
inc
stos
xor
mov
add
xlat
jg
push
mov
ret
mov
sub
repz
in
push
dec
incl
xor
push
mov
jecxz
test
std
push
inc
or
mov
xchg
push
jg
incl
add
jae
into
pop
lock
stos
mov
jo
imul
std
outsl
ja
mov
out
movsl
lcall
pusha
rorb
cmpb
and
das
inc
fists
hlt
dec
and
lea
pop
cmpsl
outsb
daa
lahf
movsb
add
cltd
add
fistl
mov
xchg
scas
negb
jbe
mov
dec
shll
inc
stos
push
clc
push
xchg
lcall
mov
mov
dec
popa
gs
inc
inc
rep
push
pop
and
jl
fcomp
rcr
ss
mov
pop
or
aaa
mov
decl
rcr
call
xor
incl
cmc
lea
aas
out
outsl
jmp
cmp
mov
repnz
dec
mov
pop
xchg
dec
insb
fdivs
rorb
shrb
pop
mov
jmp
jne
dec
movsl
mov
fwait
jo
aas
fdivrl
mov
loopew
leave
inc
dec
push
ds
jb
dec
jbe
les
call
mov
xchg
adc
js
lock
lods
call
jp
or
andl
lahf
add
jp
cmpsl
in
mov
pushl
push
push
daa
add
sbb
mov
add
sahf
scas
mov
imulb
sub
mov
out
popf
jnp
stc
pop
sahf
pop
ss
xor
insl
cmc
ret
mov
pushl
sub
add
ffreep
loopne
mov
aam
fsts
sub
fisubs
ja
cld
lcall
shll
pop
or
cwtl
js
int3
mov
cmpsl
incl
jmp
sarl
push
std
jo
ds
mov
lods
adc
lcall
ffree
aad
push
dec
cmp
shrb
dec
cmp
ja
out
movsl
ljmp
popa
sahf
cmp
adc
pop
and
add
fsubrl
add
pop
inc
cmp
jge
mov
outsl
mov
pop
es
mov
ds
sbb
xchg
adc
ss
decl
imul
in
or
jle
iret
inc
arpl
lret
or
jg
xor
cwtl
pop
out
jne
push
cmp
rolb
sbb
sbb
cmc
adc
lods
jb
iret
jmp
pop
dec
dec
mov
repz
shrl
sbb
incl
add
rcll
mov
push
out
inc
jmp
mov
mov
lcall
call
jne
add
popf
lock
xchg
sub
xchg
mov
fcomip
and
inc
cld
mov
jmp
sahf
dec
add
add
cld
call
push
cld
addb
xor
pop
fiadds
sbb
sub
xchg
in
dec
int3
jge
in
pushl
les
hlt
fcoms
nop
insb
jb
int
das
jnp
pop
add
mov
daa
or
jg
xchg
outsl
xchg
adc
sbb
push
push
adc
or
push
xor
dec
mov
fiaddl
shll
je
and
pop
das
fisubl
mov
mov
or
sbb
cmpsb
imul
test
adc
out
inc
mov
in
stc
sub
aam
nop
lret
ss
sbb
jbe
ja
jecxz
fcomip
decl
adc
push
mov
iret
lods
outsl
pop
xor
sbb
sbb
ljmp
mov
ret
mov
add
sarb
lcall
fcompl
pop
dec
out
sbb
out
rcr
cs
imul
insb
xor
jae
popf
lods
fadds
call
pushl
xor
inc
adc
pop
jbe
dec
sub
cmp
mov
call
dec
bound
xchg
in
in
cmp
mov
push
jmp
dec
cs
jbe
cmp
jmp
divb
out
mov
push
or
cmc
out
std
insl
jne
lret
mov
cmp
inc
add
fisubs
pop
insb
jno
cli
stos
cmp
stos
adc
push
xchg
pcmpgtw
pusha
mov
xor
aad
mov
pushl
xorb
cld
cmp
dec
sub
fsubp
popa
adc
jg
xchg
popf
inc
ficoml
and
xchg
mov
out
jge
cli
movl
xchg
jne
or
mov
pop
jae
bound
mov
pusha
es
test
ret
sbb
lahf
cld
jb
ljmp
and
pop
push
pop
sbb
add
ljmp
push
pop
mov
dec
mov
cmpsb
jo
lods
rcrb
popa
leave
cld
mov
stos
cld
add
call
mov
fldcw
xor
pop
cmpl
inc
ret
pop
and
out
pop
or
xchg
incl
dec
cmp
pushf
loopne
das
add
dec
sti
ret
outsb
xchg
pushl
jl
xchg
mov
add
loop
mov
sarb
adc
push
jmp
xor
dec
jno
mov
fistps
clc
and
or
mov
out
sub
pushf
xchg
jbe
stc
and
mov
imul
decl
add
leave
stc
insl
sbb
lcall
test
add
push
inc
xor
lcall
ljmp
push
fsubl
cs
stos
mov
sti
movsb
adc
sub
pop
gs
lcall
imul
cmp
jo
ljmp
in
inc
cli
inc
ljmp
mov
inc
xchg
xchg
in
fucom
xor
loop
repnz
mov
outsb
lock
add
js
jge
xchg
nop
jnp
pop
inc
loop
inc
mov
inc
push
mov
mov
jns
mov
pushl
lock
mov
jg
push
xor
and
mov
mov
pop
mov
cli
rcr
sbb
or
jae
jo
fstps
pop
add
mov
incl
xchg
fcomip
cmp
in
mov
adc
lret
xchg
sub
test
test
cmp
push
push
cmp
fistps
enter
shll
cltd
mov
sbb
movsb
pushl
decl
jnp
jnp
push
mov
rcl
pop
xchg
pop
in
std
sbb
aaa
sar
jmp
ljmp
loop
xor
xlat
arpl
adc
mov
push
jb
decl
mov
je
jb
mov
push
int3
xor
ja
pop
shll
push
pop
mov
dec
loope
pop
das
sar
rclb
mov
repz
cmp
hlt
jnp
adc
mov
jns
sbb
stos
pop
inc
or
and
xor
adc
mov
lret
imul
and
mov
xchg
rorb
call
mov
jge
arpl
cmc
xor
or
pop
test
xor
sti
pop
xor
decl
stos
cltd
nop
cmpsb
add
jmp
ja
loope
push
nop
int
xchg
dec
cmp
incl
ret
sub
lret
dec
xor
jmp
int
fwait
ret
adc
int3
mov
fldenv
inc
dec
pop
pop
call
mov
sbb
and
jnp
insb
test
shll
adc
sbb
cmp
adc
jg
sub
adc
pop
mov
ficoms
lcall
testl
inc
stc
inc
or
addr16
pop
fs
js
or
sbb
dec
dec
aas
pop
faddl
ljmp
test
dec
dec
daa
mov
pop
adc
addr16
fmull
incl
jnp
into
rcl
inc
cld
pushl
or
hlt
and
int3
inc
daa
cmpsb
pop
sarl
pop
fcoms
mov
jmp
mov
add
mov
stos
jmp
xor
sub
adc
incl
popf
jmp
fsubrs
lds
cmp
adc
out
mov
inc
lcall
jg
scas
mov
popa
cltd
mul
sbb
add
push
cwtl
add
ja
lcall
pop
jne
jp
rcrb
and
inc
les
push
xlat
push
and
iret
lock
pop
pop
clc
incl
xor
mov
leave
sar
cmp
dec
test
sbb
cmp
add
xchg
and
and
fdivrp
out
les
aam
das
inc
sti
out
xchg
mov
out
js
ljmp
cmp
mov
mov
pop
xor
mov
int3
mov
xor
das
jg
mov
push
fwait
lock
push
and
dec
into
int3
les
push
aad
popa
repnz
pop
cmc
mov
lock
and
scas
test
stos
int3
mov
jmp
sbb
andl
fistps
mov
or
bound
test
add
and
push
push
std
dec
insl
mov
lret
cld
icebp
rclb
rcr
pushl
arpl
push
mov
test
ret
fs
lea
call
push
stc
into
pushl
add
pop
mov
mov
or
lret
outsl
or
or
or
inc
mov
jmp
popf
cs
aas
adc
xchg
ret
imul
adc
xchg
xchg
cmpsb
gs
and
pusha
int3
jl
xchg
pop
addr16
test
in
jns
lcall
popf
cli
and
push
or
dec
xchg
outsb
sub
lcall
pop
decl
xchg
mov
cwtl
repnz
pusha
enter
fnstenv
fidivs
icebp
inc
xor
sar
mov
into
call
pop
dec
sub
in
into
xor
cli
incl
pop
pop
sbb
dec
rorl
aaa
fsubrl
adc
iret
jmp
cmp
pop
inc
shlb
mov
mov
fimuls
sahf
sub
enter
xchg
xor
fxch
inc
add
jmp
xlat
jbe
adc
sti
fisubrs
or
mov
fisttps
jle,pn
pushl
adc
pop
or
xchg
or
jnp
xor
mov
loop
xchg
fs
mov
outsl
clc
push
dec
test
push
cmpsb
decb
pop
sahf
clc
incl
fbstp
shlb
fsubrp
adc
mov
or
and
ljmp
clc
add
fs
mov
out
sbb
mov
pusha
jecxz
add
incl
jecxz
dec
rorb
test
icebp
and
sbb
fwait
xchg
lret
mov
ds
pushl
repz
je
idivb
cmc
das
sbb
ficompl
outsb
fldl
clc
incl
mov
fistpll
scas
fnsave
add
push
push
dec
lcall
cwtl
cltd
repz
orl
sarl
lcall
cli
fucomip
inc
pushf
push
mov
xchg
pop
adc
outsb
inc
arpl
arpl
add
es
pop
cmc
jmp
aaa
scas
mov
xor
mov
addr16
mov
nop
cmc
aaa
inc
pop
loop
mov
and
pop
jae
fadds
lret
mov
push
sub
cmc
pop
mov
les
shrb
ljmp
ljmp
mov
xchg
jge
fdivrp
hlt
roll
shll
mov
adc
repz
ljmp
jle
adcl
or
xor
test
inc
in
push
dec
in
xlat
test
repnz
pushl
std
adc
pusha
cmp
cmc
ss
negb
xchg
loopne
jns
sbb
call
stc
aas
push
outsb
sbb
mov
sahf
jg
cltd
in
add
ficoml
adc
adc
incl
sti
mov
pop
lock
xchg
or
sar
mov
push
jp
jo
or
sbb
adc
jne
stos
jge
sti
or
enter
movsl
and
mov
pop
sub
cmp
jns
popf
mov
inc
fcomip
cmp
mov
mov
push
jbe
fsubrs
inc
push
or
mov
call
test
jbe
mov
sub
repnz
cmpsl
dec
mov
loopne
xor
cmpsl
xor
sbb
sbbb
ja
add
popa
call
leave
mov
cltd
pushl
adc
aas
popa
movsl
or
or
cld
push
repz
into
cmp
sub
jne
push
pop
cmpsl
push
mov
pop
stos
jmp
mov
loopne
xchg
sub
test
push
mov
mov
decl
or
scas
cmp
and
ret
lds
jne
arpl
lcall
cmpsb
xor
daa
aam
mov
cmp
test
test
jg
ds
pusha
dec
or
xchg
ret
clc
pop
mov
cmp
push
or
fdivl
ret
popa
hlt
cmp
lock
incl
jne
stos
mov
adc
xchg
dec
inc
or
inc
cmp
imul
iret
or
decl
enter
int
add
jno
dec
aas
jmp
xor
dec
mov
dec
aam
das
mov
popf
mov
popf
adc
mov
xchg
outsl
popf
cmp
iret
sbb
cltd
jmp
aad
loop
js
in
insb
sbb
mov
xchg
jne
dec
fsincos
mov
cmp
pop
imul
inc
imul
and
aad
pop
jmp
jmp
lea
sbbb
cmp
push
das
in
sbb
push
cmp
in
and
adc
mov
call
repnz
sti
rcrl
or
loope
xchg
dec
cli
xchg
add
mov
jo
push
mov
std
out
cli
ret
out
jg
out
inc
xchg
xor
loop
pushf
cli
mov
ljmp
loopne
cld
adc
add
outsl
mov
fstpl
sub
clc
pushl
sbb
push
out
lret
insl
lock
inc
or
cmp
fiaddl
cld
cli
rcrb
scas
sbb
dec
adc
cmpsl
pusha
js
jmp
js
sbb
lods
repnz
data16
mov
dec
inc
and
aaa
xchg
add
cmp
pop
adc
lcall
rcl
ds
sub
jle
mov
ljmp
bound
inc
push
push
lret
ss
pop
sarb
cmpsl
push
in
sub
insl
nop
pop
lock
call
int3
push
mov
mov
mov
in
cmp
mov
out
out
add
decl
push
pushf
fsubl
cmp
fisubs
int
lock
test
add
mov
call
ja
or
jbe
jp
pop
jmp
cwtl
cmp
cmpsb
sbb
jbe
mov
add
sub
out
inc
jg
mov
mov
test
arpl
dec
sbbl
sub
fcmovb
and
call
je
and
decl
xor
lahf
arpl
sbbb
xchg
adc
lcall
adc
movsl
jp
imul
push
xchg
ljmp
es
mov
fdivs
ds
in
rorl
dec
nop
in
leave
sar
pushl
and
imul
outsb
hlt
cmp
sarb
outsb
pop
aad
xor
lret
arpl
in
inc
sarb
dec
or
int3
hlt
jg
dec
mov
rolb
movsb
vandps
jp
push
xlat
xchg
and
jecxz
stos
rclb
stos
mov
test
add
add
cwtl
aam
iret
adc
ljmp
or
scas
and
mov
xchg
or
cmpsl
mov
jmp
jg
cmc
mov
mov
stc
cmp
scas
leave
test
imul
xchg
push
ss
lods
add
sti
add
incl
push
adc
push
sti
xchg
pushf
adcb
cs
pushl
je
jp
jle
sbb
jnp
shr
lcall
xchg
push
add
xchg
je
lea
and
mov
sub
fdivrs
fildll
int
fldcw
stc
daa
jp
arpl
and
sti
add
lret
stos
incb
dec
and
mov
cltd
push
enter
and
xor
ljmp
mov
jle
sahf
cmp
mov
adc
sbbl
cmp
dec
notb
fwait
xchg
mov
outsl
and
test
push
lret
jnp
mov
fdivrp
mov
push
adcl
mov
cmc
cltd
xor
loop
adc
call
mov
sahf
push
xchg
xlat
and
or
aam
and
push
addl
sub
inc
loopne
jb
mov
addr16
push
incl
pusha
add
jecxz
ret
pushf
pop
fnsave
cmp
inc
cmpsb
andb
jmp
int
shll
xor
rclb
cld
inc
adc
mov
jp
es
mov
mov
ljmp
pop
rorb
and
push
or
out
stos
fisttps
adc
or
pop
fsin
push
inc
fiaddl
icebp
ficoms
dec
mov
mov
mov
scas
push
pop
push
incl
or
loop
movsb
dec
icebp
popf
mov
push
das
pop
xor
add
int
mov
testb
inc
and
mov
adc
pop
mov
stos
dec
pop
mov
lods
or
add
pop
xor
adc
dec
fcom
sub
test
je
and
mov
xor
sar
fidivs
xchg
into
pop
pop
loopne
decl
insb
cmp
cmpl
loopne
push
xor
incl
test
pop
addr16
jp
test
and
mov
sarl
stc
mov
mov
adc
sub
jno
insb
cli
adc
xor
cltd
or
lods
sar
frstor
add
jg
rcrb
inc
clc
dec
test
jl
addr16
xor
push
cmp
shlb
or
cld
es
jb
or
jle
rcll
pop
sahf
lret
lcall
sub
pushl
xchg
pop
adc
lcall
mov
nop
in
imul
leave
push
stos
pop
test
and
rorb
mov
nop
clc
dec
cmp
push
and
jl
sub
adc
outsb
xor
fstps
pop
xlat
aas
adc
sub
sbb
inc
lcall
rcll
and
sub
push
and
daa
dec
js
movsl
push
pop
jmp
push
in
jb
ss
lods
js
fs
insl
xor
mov
add
push
das
test
decl
fwait
dec
out
clc
js
inc
lea
dec
inc
pop
xor
std
mov
fisubl
mov
insb
fistps
mov
data16
inc
test
stos
iret
lods
lock
xchg
and
lret
ljmp
mov
je
dec
and
mov
inc
xchg
call
lret
pop
mov
movsb
pop
cltd
out
hlt
adc
xchg
lea
and
dec
mov
pushl
stos
popf
xlat
adc
stos
dec
mov
lock
or
and
sub
call
test
or
dec
push
xchg
mov
mov
cmp
in
repnz
mov
in
stc
mov
jae
pop
and
xchg
push
test
xor
aaa
nop
ljmp
sub
xchg
pop
repnz
hlt
lds
add
mov
cmp
jmp
cltd
cmp
not
xor
icebp
mov
dec
mov
cli
pop
ret
jge
fs
hlt
pop
hlt
or
ljmp
jg
mov
push
mov
sub
repnz
xor
pop
push
andb
nop
das
cli
bound
dec
and
aad
pop
lods
push
aam
jg
incl
jmp
fiaddl
ss
cld
ljmp
scas
xor
test
and
cmpsl
pop
sar
call
xor
lcall
daa
add
xor
and
add
pop
cmc
jg
cmp
pop
or
and
push
sti
movsl
testb
add
aaa
jg
xor
dec
xor
inc
push
mov
cmp
loop
call
dec
pop
cld
push
mov
fnstcw
insb
test
adc
jecxz
out
loope
inc
cld
sbb
jecxz
nop
sahf
insl
mov
lods
stos
stc
inc
mov
shl
mov
push
push
lret
iret
ljmp
decl
pop
sbb
inc
sub
adc
in
sldt
int3
cwtl
pop
inc
incl
ja
xor
push
jmp
dec
xor
jp
xchg
dec
jg
jecxz
push
pushl
in
in
sub
sub
je
popa
incb
rorl
decl
pop
inc
arpl
arpl
mov
loopne
iret
mov
xchg
jp
inc
lods
mov
incl
adc
aas
and
sahf
scas
lea
or
fsts
jmp
mov
cmpsb
movsl
mov
ret
fstpt
jmp
dec
pop
fwait
cmpsb
ret
xlat
pop
ljmp
inc
mov
xchg
mov
imul
andl
roll
out
mov
jg
movsb
sub
icebp
and
lds
ret
pop
push
xor
pop
icebp
adc
cbtw
pop
and
call
insb
and
ss
and
jge
stos
mov
jne
mov
cld
or
clc
dec
xor
inc
pop
mov
jge
int
xchg
sub
cmp
jno
pop
jbe
sahf
test
adc
push
add
movsl
jbe
or
imul
imul
rcll
gs
icebp
xchg
in
iret
inc
fs
sub
dec
xchg
add
lcall
or
imul
dec
mov
lock
jg
sub
popf
dec
xchg
jo
andb
fbstp
xchg
sub
pushl
and
mov
test
cmp
mov
jp
sbb
mov
stos
call
mov
ss
aas
movsl
pop
shrl
popa
xchg
lods
add
mov
inc
mov
addr16
adc
mov
mov
test
inc
out
test
aam
subl
incl
sbb
and
cmp
mov
aam
hlt
xor
dec
jle
inc
stos
rcrb
or
xchg
ficompl
test
hlt
in
fsubl
sbb
icebp
test
xlat
jg
in
test
idiv
dec
push
add
cmpsb
mov
ja
inc
xchg
inc
cmp
outsl
cs
lret
or
andb
lret
ret
cmc
cmp
loope
rclb
call
dec
insb
pop
out
add
fldt
out
stc
xor
ret
out
in
sub
jmp
call
ss
aad
popa
ret
adc
ja
jge
mov
aad
inc
sub
loopne
jmp
mov
mov
adc
mov
inc
push
enter
mov
push
mov
and
jecxz
lcall
or
adc
inc
je
data16
jnp
loop
je
pop
test
mov
ljmp
lahf
out
rcrl
adc
test
cmp
mov
incl
xchg
cmp
push
jnp
jb
daa
dec
mov
filds
and
popa
jl
pop
push
nop
add
jle
xor
repz
gs
push
add
ror
loope
push
imul
and
fisttps
in
add
push
xchg
les
popw
jnp
das
adc
lcall
mov
cmp
dec
mov
es
cltd
jb
sbb
cmp
dec
fwait
shrb
add
decl
sub
inc
jle
addr16
cwtl
xchg
lcall
xchg
and
fadds
jb
into
sbb
add
push
test
ljmp
sbb
das
pop
xor
mov
outsb
inc
jb
shrb
push
in
fistl
fs
sbb
add
ljmp
or
mov
xchg
push
inc
arpl
out
xor
dec
mov
sar
aaa
cld
popf
scas
inc
cmp
pusha
mov
and
mov
jg
mov
and
leave
das
stc
lahf
jo
and
pop
dec
clc
add
movsb
jnp
and
pop
mov
sbbl
sbb
fcompl
lock
push
mov
xor
mov
call
pop
out
popa
mov
ljmp
push
enter
xchg
loope
jae
sar
xor
lea
sbb
pop
mov
icebp
cli
jg
push
jne
outsl
cmc
mov
pop
adc
pop
sub
pop
fs
mov
sub
adc
mov
lock
xchg
das
xor
lods
pushf
das
xchg
sub
sub
adc
loop
test
lods
out
mov
lcall
inc
or
adc
inc
mov
cmp
bound
mov
or
push
mov
pop
call
pop
leave
jecxz
scas
repz
inc
cmp
cld
or
shll
or
sbb
lds
mov
dec
imul
jnp
and
pusha
xorb
call
and
decl
subb
test
call
insb
bound
jmp
ret
pop
mov
xor
and
xor
and
cmp
xchg
xor
movsl
xor
fdivrs
aad
mov
mov
mov
mov
pop
cmpsb
in
dec
or
pop
pop
cmpsl
xor
lcall
sbb
mov
add
repz
pushl
mov
cmp
mov
adc
loopne
sbb
in
dec
stos
stos
decl
and
repz
idivb
sub
xor
mov
mov
mov
orl
scas
inc
jne
aaa
repz
mov
add
out
repnz
lcall
cwtl
imul
mov
imul
push
add
cmp
scas
inc
call
pop
jl
shrb
xchg
jne
mov
push
lcall
xchg
loopne
push
imul
pop
jp
mov
sbb
call
xchg
push
stos
data16
sbb
pop
out
dec
dec
lods
adc
jmp
xor
rol
xchg
mov
ret
pop
in
jmp
xor
in
push
push
dec
movb
jg
pushl
repnz
inc
rcll
pushf
int
add
out
or
and
sub
or
jmp
push
lea
xchg
pop
pop
sbb
xor
cli
push
push
std
mov
arpl
in
rol
insb
push
fwait
cmp
pop
ret
sub
mov
decl
fwait
mov
hlt
cld
lahf
jno
test
movmskps
xor
jbe
cli
and
les
jmp
repnz
das
ret
rcrb
dec
leave
push
mov
pusha
push
sar
in
xchg
jb
xor
dec
cmp
xchg
test
push
cmp
mov
call
push
jo
rcr
mov
and
sub
push
push
pop
pop
mov
testl
sahf
stc
sbb
cli
push
loopne
push
call
data16
xor
jmp
mov
or
mov
repnz
aam
fwait
sub
repnz
jmp
nop
jb
fwait
jbe
lret
lods
add
pushf
mov
mov
in
fisubs
mov
loop
popa
insb
test
stos
sti
push
mov
in
std
xchg
sbb
sbb
call
cmp
shr
stc
bound
stc
mov
inc
add
cmpsb
xor
mov
incl
mov
jge
or
fildl
or
lahf
xor
sub
nop
jmp
scas
mov
std
cmp
jmp
leave
pop
lcall
loope
add
cmp
adcb
decl
sub
hlt
xlat
mov
pop
ljmp
jp
or
add
daa
push
sub
jle
pop
push
pop
jle
adc
xor
ja
pop
xchg
insl
ljmp
push
xor
lcall
popl
clc
dec
fcmovb
icebp
xchg
out
mov
call
lea
mov
loope
or
dec
subl
mov
out
inc
out
cmp
vmovaps
outsb
sbb
lods
xchg
fnstsw
xor
cld
call
add
jmp
repz
mov
ret
ret
pop
jp
xchg
repz
adc
xchg
pushl
aam
call
push
lahf
stc
push
dec
sahf
out
rol
or
mov
fs
stc
or
call
lods
jp
add
jl
jb
xchg
int
enter
decl
subb
mov
or
sti
mov
jno
in
xchg
shlb
xchg
imul
cs
sub
dec
cmp
push
or
cltd
or
ss
sbb
fisubl
clc
jge
cmp
cmpsl
jae
add
pushl
jnp
pop
push
mov
pop
aas
jo
cmp
and
push
jle
cmp
mov
idivl
dec
sub
add
inc
fisttps
pop
add
xor
push
inc
loope
stos
aad
pop
clc
adc
cltd
mov
sbb
mov
inc
addr16
lcall
mov
cld
pop
inc
push
xchg
add
or
adc
mov
ret
inc
aad
lea
dec
or
das
xor
cs
pop
mov
aas
in
scas
lcall
add
add
mov
mov
int
scas
outsl
stc
in
lock
jmp
outsl
and
mov
xor
sub
or
stos
cs
lcall
pop
xchg
fiadds
repnz
das
inc
inc
aam
sub
rolb
inc
repnz
mov
loop
aad
sbb
pushl
mov
xorb
mov
mov
lea
dec
mov
jge
test
xor
incl
mov
hlt
xorl
das
lds
aam
std
bound
xchg
loope
loop
out
mov
sub
pop
push
ss
sub
dec
aaa
pop
ret
rcl
gs
push
std
dec
sbb
sub
es
sub
inc
jo
add
call
dec
xchg
ret
xor
leave
sub
call
incl
and
sahf
jle
fiaddl
sbb
pop
insb
mov
fwait
gs
pop
pop
inc
inc
std
mov
inc
push
iret
jle
mul
enter
out
mov
popw
outsl
cmp
call
sti
sarb
test
fisubl
bound
mov
pop
xchg
cmp
clc
mov
into
cmp
add
sbb
mov
das
inc
inc
iret
adc
loopne
decl
and
jg
pushf
pushf
adc
jnp
cs
psrlw
and
pop
and
mov
mov
push
insl
ds
lcall
mov
sbb
lret
mov
aad
decl
loopne
in
mov
xlat
and
jecxz
stos
mov
inc
inc
daa
dec
xor
fdivs
push
xchg
sub
les
sbb
mov
jnp
jle
sub
xor
ja
subb
ljmp
inc
ret
movsb
jns
shl
jecxz
push
or
cmpsb
in
sub
add
or
ljmp
mov
das
sub
mov
into
adc
dec
cwtl
jp
jb
sbb
lret
pushl
xchg
dec
mov
jl
call
push
aaa
gs
or
mov
sub
ljmp
insb
dec
dec
push
test
stos
push
xchg
jb
jno
lds
outsb
fcomip
ljmp
decb
int3
jl
or
and
mov
lcall
stc
mov
call
ret
mov
push
stos
in
push
insb
les
lcall
test
loopne
outsl
mov
imul
pushf
fwait
in
stc
orb
add
mov
and
inc
push
and
sub
xrelease
push
push
gs
std
ljmp
push
xor
imul
inc
pusha
mov
xchg
mov
or
pushl
sbb
jae
into
mov
pop
lahf
sahf
push
dec
cwtl
loop
sub
sarl
sahf
adc
pop
sbb
scas
cld
std
shlb
fsts
mov
jmp
iret
ffreep
xchg
xor
mov
ds
jp,pn
out
add
loope
inc
inc
pop
sub
gs
jle
cld
add
movsb
bound
mov
data16
xor
out
out
jge
loopne
adc
add
pushl
repnz
sub
mov
or
std
sub
lods
xchg
cmc
sub
jmp
mov
or
outsb
mov
jg
je
scas
dec
sub
add
sbb
mov
push
cmpsl
sbb
ja
xor
xor
inc
add
xor
cld
dec
in
and
mov
and
test
lods
jl
pop
out
xchg
mov
call
sbb
adc
fs
ret
mov
shrl
cmp
fisttpll
xchg
sbb
mov
cld
jmp
inc
push
mov
jecxz
sbb
mov
jns
hlt
jg
scas
sbb
jle
ret
and
dec
in
xor
jge
pushl
cmp
xor
stos
jg
inc
scas
rcll
into
pop
outsb
jbe
ret
xor
or
push
and
push
fcoms
ljmp
mov
dec
xchg
cli
into
and
inc
xchg
sbb
xor
jns
adcl
and
mov
push
and
mov
push
fcoms
cwtl
sub
push
ljmp
or
lahf
outsl
mov
imul
inc
enter
movsl
ljmp
gs
pusha
mov
in
push
shrb
cmpsl
dec
jecxz
lcall
mov
add
scas
add
adc
jle
mov
push
mov
ljmp
mov
pop
negb
js
ja
loope
mov
lahf
in
adc
orl
inc
jecxz
std
outsb
add
pop
pusha
jbe
fs
cmp
jmp
gs
das
sbb
and
pop
dec
jnp
lahf
xchg
xchg
jecxz
idiv
mov
in
fldt
push
xor
pushf
sub
cmp
call
or
into
push
sub
sub
popa
or
mov
jg
out
adc
lcall
and
push
in
mov
dec
cmp
sbb
cmp
xchg
and
fcomip
incl
mov
push
xor
jg
test
fistps
mov
call
or
out
fstl
adc
adcb
xchg
xchg
cli
sbb
in
nop
bound
out
jg
mov
icebp
xlat
cld
out
xlat
jnp
pop
idiv
aam
cwtl
inc
pop
add
or
adc
call
outsb
or
pop
dec
mov
dec
push
adc
lock
dec
pop
sub
jmp
mov
lcall
inc
fisubrs
and
dec
push
xor
sub
ss
ret
inc
dec
outsl
inc
call
push
mov
add
push
mov
push
rcr
roll
jp
pop
pushl
cmp
mov
aad
mov
push
mov
shlb
arpl
push
inc
pop
pushl
inc
sub
mov
scas
out
scas
xchg
and
subb
cmpsl
pushl
adc
sbb
inc
sbb
cmpl
cwtl
jmp
sbb
lcall
lret
mov
loop
mov
adc
incl
lods
cmp
pusha
fisttpll
sbb
adc
sahf
rorl
jmp
add
cltd
clc
lock
ret
dec
fisttpl
sub
fwait
cmpsl
gs
lock
cmp
inc
add
call
mov
loope
aad
push
dec
adc
pusha
je
mov
sbb
jne
adc
mov
push
dec
fcmove
sahf
push
push
test
and
arpl
pop
xchg
test
mov
decl
sti
mov
xchg
inc
mov
data16
ljmp
mov
ret
shll
call
fists
jns
mov
or
in
pop
add
jp
lahf
mov
or
xchg
xchg
xor
inc
ret
out
sub
and
filds
nop
mov
push
and
sbb
cs
dec
adc
xchg
and
incl
or
or
jp
shl
jle
cmp
add
insl
xchg
dec
mov
lods
xor
jmp
inc
adc
and
loope
sub
pop
pop
mov
es
mov
das
and
sub
movsb
add
pop
ds
xchg
stos
push
xchg
std
pop
and
decl
test
inc
mov
mov
ljmp
add
fisttps
or
mov
mov
cwtl
ljmp
jge
mov
dec
fldcw
movsl
lret
sbbb
mul
mov
adc
sti
mov
mov
push
jno
push
jg
mov
push
lret
sti
lock
insw
dec
sbb
cld
lock
jns
loopne
incl
js
aad
in
cmp
insl
add
jecxz
and
out
data16
pop
arpl
decl
sbb
jmp
sub
xlat
jl
jae
pusha
repnz
pop
fistpl
fdivl
and
and
and
jnp
stos
sbb
inc
dec
test
cmp
fildl
cwtl
xchg
imul
mov
cmp
sub
decl
hlt
ret
mov
mov
and
push
push
int
pop
ljmp
incl
stos
mov
xchg
dec
cmp
mov
loopne
dec
adc
adc
push
enter
push
pushl
pop
aaa
sbb
mov
dec
int
out
fwait
jmp
sbb
jbe
sub
mov
or
jp
dec
mov
push
rorb
outsl
adc
cmp
xor
mov
decl
sub
popf
push
std
xor
outsb
dec
cli
mov
daa
jmp
dec
lcall
cmp
xor
pop
jb
hlt
out
cmp
jbe,pt
lock
repz
push
adc
mov
sub
sbb
decl
sti
mov
mov
adc
stos
sbb
daa
std
mov
add
xor
test
sar
jae
ss
inc
xor
in
push
pop
ljmp
jmp
nop
push
arpl
xchg
je
mov
dec
not
popf
mov
pop
jns
cmpsl
dec
jnp
add
inc
cmp
pop
outsl
aad
inc
fwait
mov
cmp
insb
sub
incl
jecxz
cld
sbb
xor
mov
xor
xor
test
lcall
mulb
jge
outsl
je
mov
lret
lea
sub
add
nop
addr16
jmp
scas
ret
adc
leave
mov
adc
add
push
jae
mov
lcall
test
insb
cmc
iret
add
cs
int
addr16
adc
clc
mov
cmp
aaa
push
mov
push
insb
cli
mov
xlat
and
xchg
jo
imul
stos
ljmp
push
push
jl
and
rolb
mov
fsub
adc
outsl
pop
jb
incl
xchg
mov
or
bound
scas
xchg
mov
frstor
imul
inc
iret
xchg
jge
sub
xchg
mov
out
stos
xchg
rcrl
jle
lods
jmp
repz
adc
pop
loopne
jo
push
dec
adc
insl
clc
cmp
call
cwtl
sti
pushl
stos
sbb
lds
sbbb
out
fwait
cli
out
jecxz
mov
lret
adc
mov
data16
dec
jecxz
xor
add
jecxz
jge
imul
jmp
jecxz
fldcw
aas
mov
js
cmp
jl
xor
cli
xor
incl
imul
cmp
add
decb
inc
stc
icebp
mov
adc
aad
and
ja
clc
rcrl
jne
aas
jne
movsb
clc
xor
mov
inc
sub
roll
stos
or
mov
sti
test
push
inc
inc
or
pop
cmc
mov
lret
sub
xor
jmp
jecxz
xor
and
les
push
mov
pusha
inc
jns
cmp
add
push
leave
jne
inc
inc
fidivrl
jl
xor
mov
call
mov
stc
jle
sub
adc
out
add
ja
adc
jge
mov
decl
sub
aam
mov
hlt
mov
loop
pop
mov
ljmp
push
and
pop
std
or
xchg
test
flds
pushl
loopne
out
pop
cltd
arpl
aaa
mov
mov
xchg
jp
inc
icebp
mov
outsl
imul
divl
scas
xor
mov
lcall
xor
sbb
decl
sbb
out
popl
pop
push
push
lahf
mov
aam
fs
fmull
sub
or
fildll
pop
pop
add
and
leave
mov
xchg
dec
into
adc
inc
out
sbb
sbb
cmpl
in
mov
xchg
adc
mov
insl
push
inc
push
inc
arpl
pop
sbb
mov
mov
ds
decl
push
data16
push
out
cmpl
ja
outsb
addr16
push
movsl
jno
jae
incl
call
pop
pop
sub
xchg
sahf
xchg
ljmp
cmp
xor
inc
mov
jbe
xor
divl
cmp
enter
ss
cmc
ret
and
pop
gs
jmp
mov
mov
add
xchg
cmp
mov
mov
adc
dec
imul
adc
lahf
cmp
cmp
jl
xlat
dec
icebp
lcall
sbb
inc
sahf
test
inc
xchg
xor
jno
jbe
insb
shrb
push
mov
clc
lcall
mov
mov
popa
into
mov
insb
cmp
fcoms
in
xor
test
pop
mov
popa
lds
mov
pop
mov
mov
mov
in
xchg
push
mov
sub
push
and
jge
sti
out
clc
rolb
mov
pop
pop
mov
rclb
or
push
jmp
push
addr16
and
sbb
in
lods
xchg
jmp
ja
out
push
pop
jle
jnp
lret
rcrb
mov
das
cli
pushl
es
inc
adc
fs
adc
sti
jg
mov
dec
popa
test
movsl
dec
jg
lods
sub
or
jmp
fistps
xchg
sti
jp
rcrl
les
enter
pop
lods
xor
cmp
out
in
pushf
loop
push
dec
jg
lcall
shrl
leave
popa
fwait
pop
test
and
into
sub
test
inc
mov
push
sbb
cld
decl
mov
neg
sub
push
or
aaa
hlt
sbb
xchg
imul
adc
imul
sbb
xor
adc
bound
dec
mov
fists
jmp
out
or
or
push
cli
out
sub
mov
stos
stos
fnstsw
push
decl
xchg
push
lahf
loope
add
add
inc
and
in
xchg
or
mov
xchg
in
xchg
lea
lret
inc
into
in
cmpl
push
jmp
lods
mov
lcall
fs
sarb
fstpt
insb
sbb
lcall
sub
ljmp
push
lcall
xchg
mov
out
mov
sbb
jge
pop
int3
std
mov
sbb
popf
out
mov
mov
push
xor
sti
repnz
xor
mov
xor
jge
dec
push
lock
mov
je
incl
push
aam
sbbl
mov
add
ret
mov
mov
insl
mov
ljmp
push
fiaddl
jnp
mov
loope
xchg
push
push
dec
mov
in
inc
je
pop
push
mov
pusha
mov
mov
fwait
outsl
loope
jbe
imul
decl
sbb
adc
movsl
add
ljmp
fildl
incl
jge
sbb
adc
or
push
loopne
call
sbb
mov
jo
arpl
adc
in
dec
add
dec
push
lcall
add
test
xlat
cmp
add
inc
sbb
push
pushf
ja
jg
outsb
popa
lods
lods
xor
dec
es
loopne
insl
xor
cmp
pop
scas
push
sbb
mov
cmpsb
in
aaa
push
dec
xor
xor
and
sahf
call
incl
mov
out
popf
sbb
pop
xchg
imulb
dec
mov
int
mov
inc
int
sub
es
mov
aas
adc
push
mov
out
cltd
jp
test
push
pop
call
xor
jecxz
xchg
dec
pop
fs
push
pop
push
inc
out
fsubs
ffree
or
sub
jmp
push
aad
stos
out
data16
mov
fiadds
mov
movsl
inc
adc
jp
adc
incl
cmc
sbb
push
mov
dec
js
jno
sti
pop
jno
out
mov
decl
adc
test
xchg
jecxz
mov
dec
out
mov
sub
push
sbb
icebp
mov
dec
out
loop
sbb
in
mov
loope
fimuls
mov
lods
mov
xor
inc
adc
mul
popf
sahf
jb
sahf
out
push
in
push
push
js
inc
repnz
pop
push
test
out
ljmp
ljmp
mov
bound
adc
inc
pop
mov
pushl
pop
push
push
frstor
inc
xchg
mov
cmpsl
out
sub
jne
out
ljmp
push
mov
decl
loope
pop
sub
sub
adc
push
loopne
and
push
test
xlat
movsb
mov
lock
jbe
add
push
out
pandn
fcompl
cwtl
pop
mov
and
add
cmp
jnp
fldcw
enter
dec
fnsave
ljmp
sub
cltd
fsubs
jl
pop
es
mov
lret
mov
hlt
add
xor
jno
ds
fwait
pop
dec
inc
bound
lret
in
pop
gs
call
push
sub
jle
lret
jp
cmp
or
loopne
mov
loopne
pop
std
out
mov
addps
ljmp
xchg
les
lea
fcomip
incl
test
xor
sbb
scas
enterw
int3
leave
push
add
ljmp
bound
pop
add
test
cwtl
repnz
pop
sbb
push
push
call
pop
and
into
ljmp
clc
ljmp
mov
or
nop
push
incl
test
cld
jg
dec
decl
mov
push
pop
stc
inc
xchg
sub
data16
ficomps
std
in
ret
popf
push
mov
fdivrl
cmp
outsl
cld
xchg
sbb
or
stc
pushl
push
jo
add
lds
cmp
dec
stos
test
fildll
insb
movsl
push
jmp
dec
xchg
mov
dec
leave
inc
or
mov
cwtl
notl
mov
inc
mov
mov
cmp
sub
mov
jno
cmp
add
inc
and
mov
push
in
ja
incl
ljmp
roll
or
movsb
dec
add
das
sar
lcall
daa
xor
rorl
shll
ds
scas
push
outsl
call
push
rcrb
out
sub
decl
pop
test
mov
xlat
add
xor
jg
setge
push
idiv
incl
and
clc
xchg
out
ss
cmp
xchg
push
adc
faddp
aas
ds
or
jmp
fiaddl
daa
cmc
lea
dec
cmpl
sub
sti
xlat
je
ret
lock
hlt
dec
sbb
aas
ret
inc
adc
xchg
loopne
jecxz
shlb
inc
inc
cmp
pusha
mov
clc
dec
pop
mov
fnstenv
jnp
and
cwtl
mov
addr16
ja
jbe
incl
fiaddl
pop
sub
mov
mov
icebp
xor
or
dec
clc
xor
add
ljmp
adc
add
out
sub
xlat
xchg
push
push
mov
loopne
imulb
ljmp
cmp
jae
xchg
clc
addr16
hlt
mov
js,pt
shll
jle
aam
push
ret
mov
push
outsl
les
jg
sbb
mov
dec
aad
cld
test
insl
fwait
jo
incl
insl
data16
cmp
mov
mov
cmpsb
mov
inc
push
into
push
fstl
aas
lods
xlat
mov
out
cld
jae
pop
ja
cmp
or
cmp
popf
add
jno
bound
adc
or
or
fcomi
imul
ljmp
lcall
mov
leave
push
andb
fwait
xchg
cmovg
insl
fisubrs
dec
xorl
mov
jo
push
xor
pop
out
lods
or
ja
jg
ss
sub
mov
cld
popa
lea
push
push
movsb
into
inc
cmpsl
icebp
mov
lahf
out
and
mov
jg
dec
enter
pop
shll
inc
xchg
cmp
jmp
dec
ss
addl
xchg
jecxz
push
xchg
lcall
pop
mov
jmp
sub
int
or
jno
adc
mov
cmc
mov
ljmp
sub
mov
bound
es
sbbb
jp
fsubrs
xor
add
push
add
in
int3
dec
es
testb
pop
les
lea
lcall
ljmp
mov
loop
push
orb
test
xchg
es
inc
xchg
jle
cmp
lcall
rclb
mov
pop
pop
es
testl
adc
fisttpl
lcall
pushl
jecxz
jmp
or
notb
sbb
subb
les
sub
incl
pop
or
frstor
mov
cmpsb
inc
sub
dec
hlt
jmp
dec
sbb
fs
dec
stos
pop
jmp
and
and
push
cltd
xor
ljmp
outsl
mov
in
ljmp
scas
dec
cmpsb
ret
mov
add
das
sar
lods
push
dec
push
jmp
std
push
loop
test
mov
dec
sar
jg
ljmp
cmp
fildl
ds
outsl
in
outsl
mov
decl
and
push
outsl
xchg
mov
mov
pop
sub
addl
xchg
mov
lcall
jecxz
lock
push
dec
shll
test
sub
push
xchg
push
inc
iret
cs
jge
decl
cmp
fidivs
pop
sub
ds
cmp
jo
sbb
pop
jne
incl
bound
test
pusha
xchg
addl
xchg
ret
pop
out
ljmp
mov
cmp
adc
xchg
in
push
and
or
lods
mov
jle
ret
and
inc
mov
imul
lcall
idivb
adc
sarl
cld
shl
daa
inc
pop
loop
xchg
mov
cmp
push
mov
popf
in
sub
jg
mov
shrl
inc
mov
insb
sbb
pop
xor
aaa
bound
out
test
push
call
inc
incl
jp
out
movsl
addb
jbe
outsl
pop
rorl
cli
addb
push
push
ret
lret
ja
sar
les
imul
lret
push
mov
cmp
lcall
arpl
and
out
add
insb
cmp
lahf
rorb
pop
mov
scas
add
jmp
mov
sub
lret
mov
or
jg
cs
and
jno
ror
adc
sbb
pop
fucomip
xor
push
add
mov
popf
scas
sbbl
ret
inc
clc
and
mov
aaa
cmp
fimuls
mov
push
dec
dec
mov
mov
sbb
repz
mov
pop
mov
sub
add
popa
decl
jge
add
add
sahf
jle
loop
stc
scas
mov
sbb
roll
mov
pop
push
movsb
lock
xchg
and
vmwrite
leave
inc
add
mov
mov
decl
mov
loope
pcmpeqw
jo
push
adc
out
xor
loope
cli
incl
jge
rcl
jbe
popa
xor
lods
cmp
jmp
mov
add
inc
out
xchg
movsb
xor
mov
pushl
add
out
mov
loop
and
adc
aam
aas
jbe
push
stos
outsl
fnsave
jmp
cltd
inc
pop
pop
jbe
decl
cltd
jo
push
popa
addr16
cld
pop
jb
inc
cwtl
push
xchg
stos
push
adc
add
xchg
adc
lea
fbld
ficomps
jge
mov
sarb
cwtl
iret
lret
ljmp
and
xor
mov
xchg
daa
mov
inc
cwtl
call
jp
aad
call
push
dec
cmp
outsl
mov
aam
pop
mov
aam
xchg
decl
fidivl
mov
jg
and
dec
push
call
fs
or
sub
clc
jg
les
fistl
push
cli
pop
cmp
call
test
lret
imull
sub
shrl
sbb
sbb
jmp
cmpl
fisttpl
mov
cmpsl
fwait
sub
mov
pop
lcall
ret
nop
mov
iret
sbb
dec
nop
cmp
mov
cmp
sub
pop
daa
sub
sbb
xchg
dec
and
je
lcall
adc
scas
inc
cltd
xor
mov
into
pushf
push
xchg
cmp
jbe
xchg
push
mov
lret
out
push
dec
insl
sar
adc
mov
mov
in
in
adc
insl
xor
dec
std
call
popf
cwtl
aaa
ret
lods
insb
sub
mov
dec
mov
push
xor
jg
loopne
lds
and
fmull
cwtl
and
sub
cmp
enter
jne
jbe
das
pushl
incl
test
jae
fisttpll
mov
mov
xor
fwait
sbb
sar
mov
mov
inc
push
das
lcall
push
leave
jb
adc
sub
jnp
ret
and
call
mov
dec
stos
sbb
call
inc
or
sub
push
das
arpl
imulb
fcom
xchg
repnz
loop
add
jns
or
sbb
daa
dec
pop
sub
fildl
and
adc
mov
add
mov
cmp
push
stos
xchg
enter
scas
push
sbb
gs
sbb
and
pop
sub
test
mov
ljmp
clc
dec
jle
rcl
call
pushf
insl
gs
and
or
repnz
sub
mov
call
and
sbbb
cltd
das
std
mul
push
bnd
popa
cwtl
shll
pop
popa
mov
stc
mul
sbb
xor
adc
pop
clc
push
sbb
jle
add
add
xor
jg
into
lds
sti
mov
sub
adc
jle
sbb
leave
xchg
test
cwtl
pop
aas
inc
jmp
in
dec
addb
fisubl
lods
arpl
xor
xchg
jecxz
pop
mov
das
cli
jg
mov
push
pushf
rolb
mov
ljmp
sbb
outsl
cmp
jns
shl
push
push
pop
add
or
xor
int3
fnstsw
dec
jl
ljmp
jnp
cld
movsl
cmp
pop
dec
out
cmpsb
jg
stos
or
and
shr
jmp
mov
decl
ljmp
mov
sbb
frstor
jnp
test
stc
stos
sarb
ljmp
sub
and
lds
xchg
ljmp
jp,pn
and
xchg
inc
call
call
inc
adc
les
adc
jb
das
mov
adc
out
leave
or
hlt
pop
aam
test
jne
adc
sbb
scas
mov
sub
jg
mov
flds
mov
into
dec
cwtl
fists
mov
add
push
mov
mov
test
mov
stc
std
dec
in
push
xchg
add
jp
pop
in
test
insb
aaa
sub
sti
mov
cmp
out
xchg
xchg
cmp
dec
dec
mov
sub
dec
push
add
push
decl
jg
shrl
mov
cld
dec
dec
fsubl
daa
add
add
imul
mov
mov
add
dec
jg
fisttpl
aas
pop
mov
add
push
mov
dec
stc
leave
test
jae
sahf
aam
out
add
out
clc
xchg
js
push
jmp
popf
xchg
or
push
incl
or
mov
dec
xor
dec
leave
test
sub
aas
xor
mov
sarl
fucomi
aam
sti
int3
mov
sti
outsb
orl
push
pop
pop
sbb
inc
jnp
pop
ss
push
pusha
pop
test
add
push
aam
dec
loop
repz
jmp
pop
sbb
or
mov
dec
stos
push
push
out
loopne
cmpsb
scas
sub
push
imul
xchg
jne
rorl
pop
popa
and
mov
push
push
fnstsw
push
jbe
fstpt
adc
insb
or
arpl
and
pop
jae
aam
repnz
scas
jb
xchg
mov
or
cld
aas
jns
xchg
mov
sub
test
cmp
jae
mov
and
inc
mov
xchg
pop
dec
stos
sbb
lcall
xor
cmp
mov
clc
sub
cmp
cli
in
mov
scas
jp
inc
or
jmp
notl
cmpsl
pop
callw
pop
xor
mov
imul
notl
nop
xchg
pushl
inc
icebp
rclb
test
fwait
int3
fdivrs
in
cmc
jnp
fcmovnu
jo
mov
sub
fcmove
adc
dec
jae
sbb
dec
loop
setne
jmp
adc
je
dec
or
vpunpckhwd
adc
dec
xor
out
gs
mov
cs
mov
lret
clc
mov
or
sbb
jle
ds
jmp
xor
pushl
fisttpll
jnp
daa
jno
mov
jg
cmp
pop
mov
lcall
sub
mov
jb
xchg
roll
test
stos
dec
mov
popf
mov
lcall
cld
xor
adc
mov
xor
mov
xor
xchg
movsl
inc
bound
jmp
pop
mov
inc
push
and
adc
pusha
xchg
jg
sti
mov
lods
xor
inc
sarl
lods
adc
ljmp
decl
lock
adc
dec
shl
adc
inc
dec
add
call
dec
iret
mov
sbb
cmpsb
aad
push
lods
push
sub
ret
cli
call
popf
je
push
incl
push
mov
imull
jb
lds
shrl
shrb
stos
incl
cs
xchg
rcrl
push
je
mov
orb
mov
jg
pop
rcrb
es
std
out
fiaddl
jae
jnp
pavgw
xchg
mov
cmp
mov
lret
jne,pt
push
jg
in
aad
or
and
in
adc
sbb
add
cwtl
cmp
ljmp
iret
xlat
sti
dec
dec
add
lcall
lods
mov
scas
cmp
push
cmp
int
decl
test
mov
jbe
cmp
frstor
mov
mull
outsl
daa
mov
add
sub
sub
jo
xlat
push
pushl
cld
fbld
int3
cli
sahf
xchg
mov
adcb
sahf
inc
inc
in
imul
aaa
and
and
jle
imul
in
fadds
and
push
pop
jg
imul
jns
loopne
inc
inc
xlat
add
sub
hlt
int3
mov
incl
jns
cli
sub
mov
or
pop
cmpsl
jb
xchg
inc
out
add
push
int
test
ljmp
add
repnz
shlb
leave
sahf
call
aad
or
shll
inc
jbe
and
stc
jno
enter
sti
push
inc
jg
subl
push
xor
lret
mov
rcrb
jg
push
pusha
adc
cli
ljmp
push
add
popf
cmp
sti
addb
cltd
hlt
lds
arpl
jp
cmp
xchg
jb
dec
or
mov
gs
test
leave
and
sub
call
sub
mov
adc
dec
dec
sub
mov
out
xchg
decl
lds
ja
xchg
clc
cltd
mov
adc
out
xchg
xchg
sub
sub
push
pushl
jnp
test
xchg
mov
sub
fcoml
inc
push
xor
jg
incl
sub
adc
iret
and
adc
adc
xchg
aam
jno
decl
pop
cmp
xchg
leave
imul
negl
fnstcw
in
cmpsl
aad
call
pusha
fcom
pop
xchg
mov
adc
test
adc
mov
xchg
cmp
jg
icebp
adc
int
xor
jo
hlt
add
jl
rolb
iret
inc
fistl
loop
push
add
xchg
iret
repnz
mov
xlat
lahf
ds
mov
lcall
xchg
mov
dec
outsb
mov
xchg
in
enter
test
mov
movsb
or
scas
sub
inc
adc
out
dec
lds
pop
xchg
insl
inc
pusha
lods
cmp
pop
jns
mov
adc
add
out
imul
adc
stos
ds
jno
sub
pop
enter
pushf
call
jge
xor
outsb
cmp
or
pop
int
push
rep
xlat
fcomps
pop
mov
jg
adc
cmpsl
in
xchg
cltd
dec
shrl
cmpsl
shr
cli
xchg
pushl
addr16
xor
outsb
stos
adc
insl
dec
div
xchg
push
adc
shrb
in
sbb
daa
add
cmp
idivb
outsl
adc
inc
push
mov
js
pusha
push
and
pop
and
add
loop
xchg
lock
data16
jge
leave
inc
ljmp
inc
out
adc
push
gs
cli
dec
inc
or
aaa
std
pushl
cld
jecxz
in
cmp
mov
dec
mov
outsl
popa
stos
in
sahf
cs
sbb
pmaxub
fnsave
push
dec
push
aad
pop
cmp
jg
add
mov
cmpsl
xor
mov
pop
mov
xchg
cwtl
xchg
jp
xor
das
ljmp
imul
jle
sti
mov
cmp
mov
dec
fcomi
mov
and
dec
sub
inc
inc
dec
decl
cmp
pop
jae
pop
je
push
push
and
fimuls
daa
shrb
inc
and
pop
xchg
sub
pushl
testl
lea
test
sbb
sub
rolb
ret
cli
in
andl
mov
and
in
mov
push
pop
hlt
inc
jbe
test
call
inc
mov
xchg
jb
mov
mov
and
mov
mov
call
mov
ljmp
stos
gs
cmp
sub
lcall
mov
leave
push
mov
sbb
xchg
sub
repnz
inc
or
aaa
sti
jnp
lock
jmp
mov
stos
mov
sti
dec
scas
shrl
mov
divb
jp
mov
add
pusha
leave
in
xchg
xchg
xchg
mov
out
repnz
add
sti
pop
clc
ret
sbb
cld
mov
and
xchg
jmp
es
inc
cli
jl
pushf
dec
mov
xchg
mov
xchg
pushf
sbb
shlb
ret
pushl
out
pusha
xlat
mov
je
pop
inc
scas
dec
out
ja
jg
sub
pop
lock
and
jmp
lcall
xchg
stos
faddl
imul
enter
lcall
gs
push
jo
and
inc
je
test
push
adc
call
add
jecxz
mov
mov
aaa
inc
add
xchg
mov
aas
mov
ror
cmp
jl
in
aad
sbb
gs
aad
aam
data16
and
les
mov
pop
xchg
ja
call
cmpsb
test
cmp
pushf
movsb
dec
push
pop
insl
jae
pop
and
cmc
rolb
xor
xchg
jg
cmp
fcmovne
cmc
xchg
das
jno
pop
je
xor
sbb
mov
int3
xchg
movl
and
adc
add
pop
add
les
jle
fwait
incb
sub
hlt
std
inc
cwtl
inc
mov
decl
ss
cmp
jmp
out
pusha
mov
or
decl
lcall
mov
test
sub
sub
insb
mov
stos
scas
pop
cld
into
push
out
xorl
mov
decl
xorb
xor
or
lods
data16
or
stos
xchg
mov
lods
or
out
jbe
arpl
push
adc
dec
ljmp
fdivr
fistpll
cs
xchg
xor
cmc
pop
or
pop
out
sbb
dec
insb
sti
ret
cmpsl
imul
lea
lods
jbe
push
pop
xchg
in
out
mov
es
stos
jg
sub
notb
adc
add
sbb
fdivr
call
jmp
outsb
insl
add
inc
stos
and
shrb
cmp
jnp
pop
fsub
cmp
dec
call
daa
pop
fmul
fbld
ljmp
xor
mov
bound
jg
dec
loop
xchg
inc
lret
mov
mov
mov
aas
or
inc
dec
ljmp
inc
loop
mov
sahf
pop
xchg
xchg
cmpsb
icebp
scas
mov
fstpl
sub
mov
movsl
adc
add
adc
dec
jl
mov
jo
lock
mov
in
lcall
inc
dec
inc
shll
inc
inc
mov
lret
mov
jbe
lcall
xor
adc
dec
test
test
cld
xchg
pop
popf
jno
fnsave
shl
insl
test
ljmp
sete
jnp
add
enter
xor
and
push
adc
sbb
rclb
divl
testl
pushf
sar
scas
cwtl
mov
daa
js
ret
fs
lods
leave
jl
fwait
mov
decl
or
sarb
fisubrl
jmp
and
mov
jg
icebp
lcall
push
in
mov
adc
or
mov
aas
push
cld
rcrb
ss
outsb
ja
rorl
mov
sub
addr16
pop
add
xchg
mov
mov
and
jge
or
in
mov
aam
dec
mov
sub
punpckhbw
fsubs
add
and
movsb
sbb
test
jmp
fisttpl
shl
incb
mov
cmpsb
rclb
sub
fcomip
pushl
mov
lret
adc
addr16
and
into
cmp
js
jle
push
inc
in
mov
jmp
xchg
sub
sbb
push
mov
mov
or
popa
test
inc
adc
jg
mov
xchg
dec
outsl
xor
and
incl
flds
rorl
sub
fstpl
jecxz
mov
push
std
fnstcw
add
xor
aam
into
xor
rol
call
ficoms
sub
pop
jmp
pusha
pop
stos
mov
jb
cmp
sub
fsub
and
in
hlt
iret
jnp
push
xor
psllq
pop
dec
popf
cmc
movsl
insb
mov
arpl
push
fidivrs
jg
dec
push
pop
icebp
divb
cli
adc
hlt
xchg
xchg
xor
pushl
rcrb
push
and
inc
in
xchg
pop
movhps
adc
call
cmp
addr16
ret
pop
xor
jp
push
faddl
dec
jns
test
inc
ficoms
mov
repnz
leave
jbe
lock
mov
in
lds
mov
sub
addr16
inc
inc
pop
repnz
xor
sahf
mov
insl
loope
lret
xchg
hlt
in
lods
jb
push
push
adc
call
mov
jecxz
ret
sbbl
mov
js
int3
outsl
jecxz
repz
dec
mov
pop
cmp
push
cmp
js
lcall
cmpsb
aad
adc
push
sub
xchg
mov
cli
mov
inc
and
push
dec
test
pop
sahf
sub
add
sub
inc
pushl
sbb
push
insl
inc
pop
loop
imul
adc
add
cmp
pushl
and
cmp
sub
pop
mov
loope
inc
icebp
xchg
xchg
cs
pop
sbb
lcall
lahf
xor
mov
je
stos
subl
lds
push
inc
insl
xchg
mov
lcall
cmpsl
mov
add
popf
or
test
fdivrl
sbb
aad
decl
sahf
sahf
mov
clc
sbb
push
cld
push
in
mov
dec
push
mov
mov
mov
clc
mov
inc
lea
mov
jnp
subb
push
pop
hlt
cs
mov
cli
outsl
fs
stc
cltd
xor
inc
dec
aas
and
xchg
mov
mov
iret
shr
push
cmp
cli
or
push
lret
icebp
lcall
jnp
pop
cmpsl
and
sahf
ffree
or
loop
dec
inc
mov
aam
jnp
cmp
in
daa
push
mov
sub
xchg
mov
add
cmp
out
out
cmpsl
jb
cld
xchg
adc
dec
ficomps
sub
das
mov
adc
incl
push
adc
lods
cmc
ja
or
cmp
xor
daa
cmp
mov
dec
and
das
rorb
add
add
mov
sub
mov
add
dec
shrd
mov
lret
xchg
xorb
out
cli
lcall
fisubl
arpl
cmp
mov
gs
fistpll
xor
mov
dec
push
push
add
aam
lods
push
jle
pop
pop
jle
jg
push
adc
lret
mov
jl
ficomps
xor
insb
pop
xor
push
in
add
sub
fistl
inc
dec
pop
mov
xorb
dec
jg
lcall
jmp
adc
pop
lret
mov
jmp
push
mov
pop
jg
std
loop
stos
clc
aas
std
in
repnz
xchg
push
sbb
dec
out
mov
lock
decl
xor
call
jnp
mov
inc
mov
sahf
ja
fs
add
cmp
sti
mov
call
cmp
mov
adc
dec
aaa
movsl
loopne
test
mov
cmp
dec
out
insb
mov
incl
pushf
fwait
lods
inc
xchg
add
stc
pop
pop
test
lods
cmp
lea
sub
cmc
mov
hlt
ljmp
jo
inc
mov
lret
xchg
cmp
lcall
jecxz
in
jo
mov
in
rcrl
mov
call
scas
xchg
das
and
jbe
inc
cmp
cmp
cwtl
cmc
out
daa
insb
hlt
push
dec
lahf
aam
dec
jecxz
xor
inc
xchg
enter
fmull
xor
dec
push
repz
cmc
jno
or
push
cmc
popf
add
inc
mov
ss
cmpsl
xchg
lcall
mov
popf
dec
fcoms
in
cmpsl
xor
arpl
pop
adc
stos
sbb
push
cmpb
repz
mov
rclb
xchg
sbb
popf
dec
icebp
mov
pop
clc
inc
les
pop
xchg
leave
mov
hlt
icebp
mov
imul
add
stos
xchg
cmp
pop
pop
sub
pop
xchg
insl
xchg
sbb
pushf
and
jbe
js
jl
jmp
adc
mov
or
popa
inc
and
inc
pop
in
cmp
cld
jg
inc
mov
rcl
mov
mov
inc
divl
lock
jg
sub
out
pop
int
pushf
scas
dec
notb
jne
adc
jmp
data16
cld
cmp
cmp
negb
aam
loope
jecxz
scas
push
ljmp
outsl
jl
andl
pop
jge
stos
adc
in
daa
jo
fs
jg
ljmp
mov
adc
and
out
jbe
jmp
jmp
adc
outsb
pop
imul
fs
hlt
or
jl
sar
lea
mov
sbbl
sbb
inc
bnd
add
movsl
and
and
sahf
mov
dec
inc
ljmp
clc
enter
xchg
js
dec
mov
cmpl
cld
or
jne
bound
cmp
inc
fiaddl
add
cltd
sbb
testb
lcall
stos
jne
inc
outsb
mov
fimull
sub
int
mov
cli
dec
call
cld
mov
add
enter
shlb
mov
inc
test
add
dec
sti
call
das
mov
cmp
cld
ljmp
aaa
pop
adc
and
insl
lods
cmp
pushl
ljmp
scas
lahf
setae
loopne
mov
repnz
arpl
fldenv
inc
and
push
adc
dec
rclb
xchg
cltd
push
push
push
inc
pop
or
hlt
mov
pushl
test
sub
fdivrs
out
popf
cmp
aad
cmp
movsb
mov
pop
inc
inc
xchg
ljmp
sbb
push
dec
aam
dec
arpl
or
insl
cmpb
fsubs
mov
lods
enter
cld
loope
and
rorb
mov
rorl
sbbb
mov
scas
clc
jmp
movsl
xchg
lods
loopne
filds
lods
lock
xchg
push
sbb
in
insb
sbb
incl
push
es
test
imull
mov
xor
iret
lret
adc
std
mov
mov
push
incb
in
cmp
out
cld
call
sbb
loop
mull
lods
ret
mov
mov
mov
es
pop
jbe
popa
hlt
js
pusha
xor
pop
cmpb
outsb
cmc
xor
stos
inc
xor
mov
pusha
mov
fimuls
pop
or
mov
inc
and
pushl
add
mov
sub
pop
icebp
cmp
mov
sahf
mov
xchg
push
and
mov
or
dec
decl
mov
addb
mov
fdivs
or
and
int3
je
lcall
fistpl
jns
add
lcall
movl
jg
add
cmp
call
push
cmp
aam
ljmp
dec
add
xchg
out
sbb
mov
test
dec
jmp
test
fdivl
pushl
hlt
cmpsb
negl
xor
dec
sbbl
sub
cld
fadd
cmp
inc
mov
and
cld
ljmp
into
lahf
lcall
push
pusha
cmp
decl
inc
xchg
js
xor
cmp
mov
in
leave
cmc
fisttpl
ljmp
sub
xchg
std
dec
xchg
xor
or
cs
xor
ljmp
cmp
xlat
mov
mov
dec
xchg
mov
sbb
hlt
fisubrs
push
cmp
lcall
adc
shlb
xchg
cli
cwtl
ss
leave
mov
shll
lcall
mov
sbb
jl
imul
pusha
lods
jg
int3
test
jnp
lods
movsl
sub
and
cmp
pushl
ret
xor
push
and
cltd
mov
lret
xor
jo
cmp
push
dec
sub
push
shlb
lret
cmp
xorl
lcall
call
dec
mov
fstps
lods
inc
lret
stos
adcl
dec
jge
mov
cmpsb
lock
jg
es
js
xchg
xchg
inc
sub
in
clc
loop
imul
lcall
push
lods
jns
inc
enter
repz
orl
jg
leave
sbb
nop
mov
adc
or
divps
clc
out
lahf
addr16
enter
jnp
cs
cld
push
add
sbb
adcb
push
daa
stos
pop
or
cmc
rcll
inc
js,pn
cwtl
xor
xchg
mov
mov
stc
fstl
push
mov
sbb
fnstcw
das
shll
fdiv
roll
xchg
jae
pop
loope
aad
test
mov
mov
inc
incl
aas
or
xchg
imul
adc
inc
fs
adc
testb
adc
sbb
incl
pop
mov
pop
insl
push
push
subb
sbb
subl
sbb
pusha
jg
pop
or
mov
nop
xor
mov
cs
adc
pop
nop
pop
lods
adc
in
mov
ljmp
jg
cwtl
pop
mov
aam
jp
or
les
aad
das
clc
imul
insl
mov
sub
in
sbbl
jl
in
arpl
push
and
jg
jmp
xchg
sbb
test
lods
in
testb
mov
idivl
cmpsl
sbb
mov
out
repnz
mov
mov
fsts
mov
aaa
cmpsl
jns
mov
mov
push
iret
mov
cltd
movsb
stos
je
jbe
sub
cmp
jne
pop
jl
or
cmpsb
add
je
ljmp
push
into
jmp
push
pop
xchg
lcall
sbb
call
fucom
jg
fldcw
mov
clc
lcall
daa
jbe
sbb
fwait
cmovae
push
je
mov
mov
push
mov
bound
mov
mov
nop
sub
out
pop
icebp
mov
in
lcall
xor
fistpl
aam
pop
jns
mov
jg
inc
dec
xchg
cmp
inc
xchg
adc
push
aaa
les
call
jp
adc
push
cltd
xchg
mov
sahf
int
out
ficoml
leave
test
and
lcall
int
ja
stos
or
test
xor
push
repnz
out
adc
decl
je
lret
lcall
jno
leave
insl
push
mov
push
pop
lds
addl
aad
inc
fistpl
push
popl
mov
sti
pop
popf
jmp
lock
mov
xor
scas
std
lret
fdivr
inc
jae
dec
call
dec
dec
iret
fdivr
jecxz
cmp
jb
pop
jp
pop
dec
daa
mov
out
and
incl
aaa
sbb
xlat
sub
stos
ret
lahf
push
cmc
bound
inc
or
push
in
out
movsl
add
out
xchg
pop
lret
in
popa
aas
jmp
lahf
adc
pushl
jge
scas
jo
jns
mov
fxch
stos
cltd
test
insl
lret
mov
decl
stos
mov
sarb
mov
pop
es
jae
addr16
jp
ret
das
adc
cmp
jmp
lret
or
mov
jbe
and
lcall
sahf
inc
stos
in
out
mov
cmp
icebp
xchg
mov
int3
scas
adc
or
adc
cmc
ljmp
cmp
mov
mov
xchg
fdivp
loopne
mov
idiv
lcall
aad
dec
inc
repnz
push
xor
jno
mov
mov
fadd
pushf
lods
shlb
mov
sahf
mov
subl
incl
mov
or
insl
mov
incl
or
mov
mov
mov
mov
scas
fnsave
jno
ljmp
jmp
js
shr
mov
dec
out
mov
ret
rcl
ficomps
in
rolb
incl
push
inc
cltd
call
cs
sub
stos
sti
dec
mov
decl
jns
push
sbb
lods
cmpsb
test
addr16
sahf
outsl
and
fcoms
lcall
fdivs
inc
imul
jo
xor
ror
mov
adc
das
movsb
sbbb
cmp
into
int3
call
and
std
push
popf
aas
or
push
pop
add
jg
mov
mov
lcall
jmp
or
int
sbb
decl
out
enter
push
push
aam
or
mov
fsubs
mov
dec
jne
jecxz
rolb
scas
loopne
test
cwtl
pop
stos
loopne
mov
sbb
xchg
lcall
sbb
cmpsl
sbb
xchg
int3
jecxz
cmp
cmpsl
dec
jne
pushl
adc
cmp
jge
les
subb
mov
mov
call
fdivs
pop
std
lods
inc
inc
test
int3
push
adc
ret
jge
mov
dec
pop
and
pop
popa
stos
xor
shrl
xchg
jo
sbb
aad
inc
ret
in
cmp
mov
roll
cmp
jno
fcmovnbe
mov
xor
mov
std
addr16
movsb
fimuls
ds
into
ja
push
pop
fcmovu
mov
sub
enter
and
add
mov
pop
jae
cmc
scas
push
test
sub
jb
sbb
jo
xor
ljmp
or
lods
add
sarb
and
add
sbb
rorb
inc
pop
pop
pushl
cld
in
cmc
rol
andl
nop
pop
pusha
mov
enter
add
push
xor
or
mov
into
roll
aad
push
mov
fimull
inc
cld
ss
sbb
xchg
inc
lods
hlt
cmpsb
pop
sbb
call
mov
es
mov
inc
or
imul
mov
ret
jg
js
xor
pop
lock
cmp
cmpsl
jnp
sub
incl
jp
inc
int
xchg
out
sbbl
jno
inc
xchg
das
xchg
xor
jmp
mov
xchg
lcall
inc
cmp
and
fyl2x
dec
mov
jb
xor
lcall
enter
adc
aam
aad
push
popf
insl
jo
fs
ljmp
xchg
mov
jbe
cwtl
icebp
mov
cmc
js
movsb
xor
inc
ficoms
push
out
clc
lcall
sbb
dec
adc
je
mov
lds
sar
ljmp
fistl
testb
and
fiaddl
imul
jg
sti
cmp
push
imul
jmp
decb
jmp
int
iret
mov
cmp
inc
fdivrs
std
decb
adc
ja
push
lcall
mov
leave
sbb
neg
fnstcw
bound
inc
js
outsl
push
hlt
decl
mov
dec
es
lret
xor
jne
pushl
jne
ja
repz
or
add
mov
dec
fildll
lock
jmp
push
add
scas
mov
cmp
push
xchg
in
mov
sub
nop
decl
sub
fwait
in
and
addr16
es
adc
lahf
lea
pop
ds
jmp
push
popf
dec
push
dec
push
insl
xor
pop
mov
test
call
imul
popa
cmc
cmpl
cs
inc
mov
sahf
ftst
or
mov
cmpsb
mov
xor
int3
lods
sbbl
and
add
jmp
add
adc
cmp
inc
adc
leave
ljmp
push
pop
int
call
xor
adc
pop
stc
jno
mov
testl
sti
loope
bswap
ljmp
sbb
call
in
arpl
adc
mov
push
inc
cmp
mov
or
cmp
pop
fistpll
push
lcall
into
aas
aaa
imul
das
mov
leave
or
insl
stos
call
cmpb
sbb
call
mov
jnp
inc
jae
inc
pop
int3
in
mov
repz
fsts
and
sbb
mov
outsb
fbstp
pop
and
call
push
insl
or
or
mov
stos
push
push
push
pusha
in
popl
fadds
xchg
mov
push
les
and
pop
outsl
add
pop
push
dec
nopl
push
mov
push
push
and
call
dec
cmpsl
mov
cmp
ljmp
xchg
into
call
mov
gs
call
insb
lea
cli
stc
mov
sub
cli
adc
pop
xchg
jns
dec
jecxz
push
lcall
push
movsl
xchg
ds
or
test
arpl
mov
sbb
stos
push
mov
inc
inc
outsb
imul
popa
adc
leave
fldl
mov
decl
push
cmp
jg
or
faddl
aaa
out
xchg
adc
lret
dec
and
mov
pushl
outsl
jnp
fsubl
inc
int
enter
jecxz
pop
xor
pop
insl
mov
repnz
ljmp
or
push
es
pop
sub
xchg
cmp
andb
incl
sbb
nop
jae
xor
push
pop
cld
decl
and
cmp
daa
xchg
cmp
adc
add
call
loop
mov
cmp
decl
sahf
jne
xchg
jecxz
shll
xchg
push
je
mov
mov
pushl
push
sti
jns
xor
ljmp
pop
cmp
arpl
xchg
jmp
push
pushl
xchg
test
xor
pop
jo
rcrb
xor
dec
mov
and
pusha
inc
mov
int
sti
and
insl
mov
sub
jno
add
and
cli
decl
es
push
fstl
js
push
xor
shlb
js
ficoml
mov
cli
les
cmp
mov
xchg
add
sbb
cmp
jmp
push
push
scas
mul
fsubl
mov
aad
mov
jbe
jmp
sub
aam
scas
rcr
popf
cmpsb
or
incl
jp
dec
and
xor
xor
sbb
sbb
gs
jp
out
cli
repnz
pop
movsl
ja,pn
mov
loopne
lahf
subl
adc
mov
mov
stc
decl
inc
jnp
icebp
cmc
les
pop
sub
shrb
cmp
cmp
sub
lcall
lds
xchg
cwtl
clc
sahf
xlat
fwait
push
js
movsb
xchg
mov
mov
mov
int
call
cmp
imul
aaa
mov
sub
sub
enter
loopne
lock
fimuls
gs
cmp
sub
adc
or
sbb
decl
dec
jge
mov
xlat
sbbl
ss
mov
pop
hlt
js
incb
stos
fdivrs
mov
bound
stos
imul
movsb
ror
das
inc
outsb
xor
fidivrl
cmp
pop
icebp
sbb
jb
inc
pop
ficompl
out
popf
xchg
aam
icebp
mov
fs
aaa
mov
movsl
push
xchg
add
mov
pushf
rorl
pop
icebp
and
outsb
psrad
push
out
cld
into
push
push
call
fcoml
daa
and
adc
bound
add
incl
mov
out
inc
cld
xchg
scas
lods
test
sub
push
jno
cmp
call
cmp
mov
mov
mov
ror
int
xchg
icebp
pop
cmp
stc
xchg
movsb
inc
add
call
dec
add
les
push
lcall
mov
cmpsl
test
cmpsb
push
test
shl
pop
or
mov
pushl
or
mov
mov
pop
fidivs
icebp
cmp
sbb
fs
ljmp
jg
dec
add
rorl
pop
mov
inc
inc
fcomps
or
insl
out
rcll
ljmp
pushf
xchg
and
hlt
mov
mov
adc
mov
adc
aas
out
lods
cmp
pop
cs
cltd
xchg
std
and
xchg
dec
cmp
subl
das
xchg
mov
out
cmc
cmc
out
xchg
pop
and
pop
mov
adc
data16
loopne
aad
mov
ljmp
push
mov
dec
mov
pop
push
rclb
sbb
imul
lock
or
ficomps
mov
addl
inc
testl
in
dec
push
and
sbb
mov
add
cmp
ss
loop
ljmp
in
mov
pop
xchg
sbb
adc
dec
adc
rcrl
mov
pop
lahf
mov
sbb
movl
mov
pop
pop
fldcw
test
and
incl
jmp
std
and
mov
popf
pop
fdivrs
sbb
inc
aam
decl
pop
xchg
xor
ret
pop
dec
mov
lret
movb
imul
mov
fwait
add
adc
nop
in
stos
pop
or
mov
mov
or
inc
pushf
pop
and
scas
xor
sbb
push
dec
cmp
fisttpll
ljmp
scas
xor
shrl
or
xchg
ss
shrl
jb
addl
and
and
add
rol
dec
lea
jl
scas
ljmp
sub
pop
or
orb
std
push
sbb
inc
adc
ja
xchg
call
loopne
js
outsb
add
movsl
and
or
stos
cmp
ljmp
jmp
je
mov
cli
sbb
xor
mov
cmp
lcall
xor
notb
xchg
jns
lret
call
mov
jns
jns
mov
aad
and
lcall
popf
rol
jecxz
mov
dec
lret
add
insb
xlat
sbb
and
into
incl
out
pop
dec
ret
inc
or
insb
push
nop
dec
dec
xchg
sub
xchg
aam
dec
push
subb
lcall
sarb
jns
mov
ffreep
je
sub
fidivrs
iret
ret
mov
mov
mov
iret
push
test
jnp
stc
or
inc
popf
push
daa
negl
loop
jmp
adc
adc
rcll
sbb
notl
xchg
in
cmp
out
ljmp
in
jg
adc
mov
or
jns
std
sub
sub
pop
repnz
xor
jb
into
in
ljmp
imul
shrl
cmp
xchg
push
sub
xlat
lahf
xor
int
mov
adc
fistpl
cmp
rol
jae
lcall
and
mov
repz
in
inc
je
mov
xor
enter
out
shll
inc
push
cltd
sbb
imull
fcmovb
lods
and
test
ljmp
repz
push
dec
mov
add
insb
inc
push
xor
les
inc
sub
call
jmp
dec
pop
shrl
cs
lea
movsl
roll
mov
and
lock
inc
movsb
pop
pop
out
add
xor
or
test
lcall
or
xor
mov
mov
loop
xchg
fisubs
fmul
pushl
clc
push
push
addr16
icebp
in
mov
cmc
mov
cmpsb
inc
fcos
pushl
push
xchg
mov
pop
mov
push
ret
inc
ret
sarl
aaa
dec
cli
inc
insb
ljmp
sub
out
or
dec
mov
mov
cmpsl
dec
stos
sbb
dec
sbb
lock
push
daa
aam
sub
mov
add
adc
into
sub
mov
orl
dec
out
outsl
fs
imul
or
loop
fisttps
xchg
shrb
fisubrs
mov
jecxz
add
call
ljmp
mov
jbe
nop
stos
iret
pop
dec
sub
mov
jmp
mov
xchg
push
out
std
or
sbbb
push
sbb
or
data16
sbb
pop
cmp
jmp
fcmovne
pop
outsb
ds
jo
call
mov
push
xor
dec
outsb
cmp
filds
scas
jnp
jb
test
sub
xlat
xor
or
test
mov
fsubs
lret
sbb
push
inc
xchg
fsub
sub
cmpsb
lcall
test
in
lea
scas
les
in
jmp
cmp
aad
xchg
pop
dec
andl
shll
inc
lahf
hlt
add
adc
lret
cmp
jmp
and
cmp
jns
and
mov
jecxz
ja
add
cmp
jg
decl
pusha
push
mov
adcb
andb
pop
lahf
push
adc
mov
jmp
add
pop
daa
jb
ds
out
xchg
ljmp
decl
out
sbb
adc
ret
das
push
pop
in
cltd
sbb
xchg
pop
xchg
jbe
es
sub
push
pop
push
push
frstor
ficompl
pop
mov
mov
xor
in
jg
jge
movsl
pop
push
js
stos
xchg
iret
sbb
cli
inc
arpl
inc
mov
dec
gs
incl
mov
sub
rorl
jecxz
push
fimull
inc
call
in
cmp
xor
decl
mov
or
movsb
sub
in
jns
jns
imul
ja
stos
ljmp
add
test
insb
mov
pop
add
lds
fcomip
repnz
movsb
ret
out
xlat
fmuls
bound
mov
arpl
dec
push
pop
push
xchg
outsb
pop
push
loop
shrb
xor
enter
jmp
shl
fs
imul
into
das
cmp
push
repz
xor
jmp
mov
and
dec
mov
int3
xchg
pop
jmp
arpl
xor
mov
ss
fcomip
inc
inc
jl
iret
add
mov
sub
out
jmp
call
imulb
cmp
into
push
jmp
insl
sti
daa
icebp
and
xor
adc
cmp
ljmp
ret
out
imul
xor
outsb
fisubrs
rcrl
xchg
leave
movsl
adc
ficoml
lcall
mov
scas
sbb
dec
aad
in
pop
inc
nop
stc
mov
add
mov
lcall
push
notb
jo
adc
xor
sbb
mov
dec
daa
mov
into
or
cwtl
jbe
jb
and
fnstcw
rclb
popa
xchg
les
push
jg
call
test
push
xlat
mov
rolb
mov
add
shlb
fmul
lock
lock
xchg
sub
fmull
inc
push
flds
ror
cltd
jno,pn
fidivrs
jmp
lea
dec
add
or
fnsave
jae
adc
imul
adc
mov
lcall
stos
pop
or
inc
flds
mov
mov
mov
stos
movsl
stos
icebp
inc
inc
jno
pop
into
or
pop
sub
je
cltd
jmp
lcall
imulb
sahf
xchg
push
fsts
cmp
mov
dec
push
adc
in
jmp
inc
xor
sub
push
and
and
dec
mov
outsl
shrb
jae
out
cmp
xor
xchg
sub
dec
cld
aaa
cmp
mov
pusha
push
test
adc
inc
imul
mov
dec
outsb
insb
fildll
incl
sub
push
push
sub
in
mov
in
dec
add
mov
lret
jl
out
pop
push
adcb
mov
orb
or
cld
ljmp
inc
jl
cli
lods
jmp
iret
jb
loope
sub
imul
in
enter
cmpsb
popf
je
inc
les
repz
cmpsb
and
push
scas
cmp
adc
inc
inc
aaa
inc
movsl
jg
and
iret
xor
insl
aad
imul
xor
mov
mov
cmp
and
pop
add
mov
icebp
decl
push
out
adc
sbb
pop
push
push
or
adc
sbb
jge
sbb
test
xchg
and
adc
ljmp
mov
jbe
fsubrs
insb
call
call
insb
js
jp
jbe
mov
divb
pop
shlb
movsl
dec
add
movsb
addr16
push
pop
out
in
push
or
mov
mov
adc
into
and
loope
push
sub
cmp
mov
scas
cmpsl
test
push
or
adc
jg
decl
mov
lcall
pop
jae
cltd
push
std
call
cld
lds
insb
and
int3
enter
sbb
add
call
lcall
arpl
test
andl
pop
xor
mov
decl
movb
pop
mov
stos
cltd
cmpsb
jo
icebp
fcomip
fxch
mov
mov
sub
pop
outsb
lret
and
call
add
jae
push
xchg
jmp
inc
push
fdivr
pushl
adc
outsl
je
fmulp
push
dec
xchg
icebp
sub
jge
jl
and
ret
out
jmp
dec
add
fimull
das
shrb
cmp
enter
sbb
mov
ljmp
push
cltd
adc
dec
pushl
adc
adc
push
pop
add
data16
sbb
inc
cmp
mov
sub
inc
js
and
lock
dec
mov
fbstp
sbb
jno
sahf
sahf
lret
cmp
enter
out
mov
cmp
xchg
les
fdivs
xchg
es
sti
paddd
ja
jmp
into
sbb
lcall
or
loopne
test
in
lcall
mov
lods
movsb
push
jbe
gs
icebp
jmp
aaa
imul
nop
mov
clc
mov
pusha
lods
clc
gs
in
adc
dec
xchg
jbe
add
add
pop
pop
lock
incl
out
mov
mov
lods
mov
imul
movsb
leave
int
cld
int
jo
fists
jbe
sub
jl
out
fsts
xor
mov
xor
xor
loope
jp
xor
cmp
outsb
sbb
lret
adc
testb
mov
pop
clc
cld
imul
es
pushl
push
int
dec
pop
lea
sahf
jo
push
pop
jns
mov
adc
push
or
decl
sahf
dec
andl
roll
out
xchg
out
scas
mov
sti
nop
std
faddp
xor
add
xchg
xor
sub
sub
sbb
sbb
jge
incl
sub
ret
push
or
xor
pushf
jo
mov
lcall
sub
wrmsr
xchg
mov
cmp
stos
jge
dec
and
repz
dec
sub
in
mov
lods
out
clc
lcall
add
popa
push
inc
test
rcl
ljmp
and
lods
push
mov
push
fstps
repz
outsl
pushl
and
mov
jb
dec
push
ljmp
movl
call
adc
inc
mov
movsl
or
dec
imul
rdpkru
adc
or
fndisi(8087
jmp
jo
and
push
add
jo
call
cwtl
jmp
fcomip
out
sub
inc
inc
pop
push
fnstenv
enter
jne
fidivrs
inc
push
xchg
jg
dec
test
cmc
or
push
jg
cwtl
ljmp
loope
push
push
cmc
push
fmul
js
lock
in
push
and
fistpl
outsl
or
xchg
decl
scas
sahf
cmpsb
jns
cmpsb
and
js
stos
ljmp
xor
sbb
adc
out
clc
and
mov
call
popa
test
pushl
jbe
mov
pop
mov
es
lret
mov
cmpsl
push
inc
xlat
outsl
cmc
pop
mov
pop
in
hlt
ljmp
mov
xchg
jmp
ja
mov
jno
shr
out
clc
jge
int3
pop
lahf
out
loopne
push
popa
or
neg
imul
jmp
or
push
scas
mov
sbb
push
xchg
nop
mov
mov
loop
ret
dec
jns
jecxz
mov
sbb
add
popf
inc
out
and
roll
out
icebp
lcall
mov
subl
insl
aas
fcoms
ljmp
or
or
or
cmp
mov
fldcw
mov
xor
adc
fwait
push
sbb
lds
mov
sti
mov
or
jne
fsts
xor
mov
cmpsb
dec
popf
imul
push
mov
daa
xchg
sub
pop
or
inc
adc
fdivrl
test
mov
pushl
mov
cs
mov
mov
jl
and
aam
add
lcall
incl
and
mov
mov
sarl
mov
ds
cld
lcall
mov
cltd
xchg
pop
lret
into
adc
cld
xlat
out
inc
jnp
sar
mov
mov
jg
or
dec
jne
aaa
fnsave
mov
pushl
inc
fs
int3
mov
out
or
stos
push
adc
cli
scas
leave
inc
ljmp
mov
clc
sub
pop
fstpl
outsb
mov
mov
jp
decl
addr16
sub
cmp
adc
dec
and
mov
xor
test
mov
jle
mov
push
arpl
xchg
out
cs
or
or
fxch
push
sti
mov
sbb
mov
pushl
std
mov
fs
stc
scas
frstor
ficoml
sbb
mov
fneni(8087
push
iret
mov
xchg
sbb
cwtl
jl
in
pusha
dec
mov
and
ljmp
add
pop
out
lds
cmp
pop
sbb
push
and
jmp
lods
jg
js
shll
movsb
add
stc
xorl
mov
es
pushl
adc
outsl
mov
insb
push
gs
push
pop
leave
ret
or
filds
pop
mov
pop
jmp
push
mov
pop
pusha
insl
test
fucomp
xchg
incl
pop
scas
jno
jecxz
cmpb
cli
dec
rolb
lock
nop
cli
lahf
fadds
ljmp
and
jo
leave
fs
cltd
insl
inc
jno
inc
pushf
jns
addl
jne
rclb
pushf
dec
push
and
fiaddl
icebp
pop
and
or
xchg
and
mov
xchg
jl
stos
ja
jae
ret
call
add
push
cmp
adc
or
stos
cli
xchg
jmp
fstl
and
sti
call
sbb
aaa
ljmp
dec
std
fcompl
sbb
cmp
call
bound
fistps
jno
sti
xchg
cmp
add
pushf
mov
pop
sub
mov
jo
scas
fbstp
or
dec
mov
shrb
xchg
jns
pushl
insb
xchg
test
mov
rcll
enter
sti
iret
in
inc
xor
adc
out
std
or
or
and
xchg
mov
test
ds
cmpsb
mov
xchg
dec
push
jg
cmpsb
out
repnz
inc
gs
mov
xor
je
and
ljmp
sub
mov
jae
subb
cmp
xchg
mov
adc
test
push
cli
sbb
dec
mov
or
push
xor
fistpll
or
cltd
xor
dec
adc
cmpsb
pop
add
imul
fstp
and
adc
jo
adc
ret
cmp
scas
mov
scas
xorb
out
lock
pop
ret
jl
or
mov
fbld
lods
pop
cmp
dec
movsl
pushf
and
add
cltd
jne
popf
call
dec
xlat
add
mov
jb
xor
push
pushf
add
jmp
pop
cmpsl
in
cmp
js
test
xlat
shrb
jp
jg
cli
ret
inc
and
repz
push
jae
mov
pushl
mov
jnp
xchg
cs
dec
mov
jne
fisubl
out
fstps
mov
and
add
inc
cmp
mov
dec
popf
and
inc
cs
clc
pop
in
cmp
subb
xchg
incl
lea
lods
cmpb
rclb
pushf
mov
lret
rcr
cld
dec
fisubs
and
jle
adc
bound
lods
stos
jo
mov
sub
mov
icebp
pop
pop
outsl
lcall
or
dec
mov
sbb
scas
mov
ret
push
xchg
sbb
loop
pop
dec
mov
add
and
dec
les
in
fdivs
fmull
ss
jae
mov
lcall
mov
out
or
inc
mov
movups
adc
add
call
mov
or
push
clc
loope
mov
cs
sbb
or
push
xlat
push
mov
xlat
sbb
sub
lcall
rcrl
add
lahf
pop
dec
lcall
push
push
lock
mov
sub
ret
mov
insb
es
mov
cmp
lret
fcmovnbe
pop
jmp
ljmp
shlb
mov
mov
imul
or
movb
cmp
jmp
mov
sarb
std
cmc
sub
xchg
out
movsb
push
mov
sub
outsl
aaa
cld
xchg
daa
push
push
adc
mull
pop
mov
cmp
xchg
dec
outsb
adc
cli
pop
gs
pop
mov
ljmp
sbb
jbe
imul
iret
mov
mov
mov
cmpsb
cmp
fs
push
fnsave
xchg
jno
xchg
mov
mov
cmp
call
add
adc
lcall
arpl
stos
loop
jmp
std
es
lcall
push
push
xchg
pop
lret
fcoml
pop
fucomi
aad
mov
imul
push
icebp
incl
aas
jae
filds
testb
and
and
dec
push
push
aam
pusha
and
sub
in
daa
inc
insl
pop
push
mov
clc
shlb
pushl
in
mov
xchg
pop
mov
adc
jle
ficoml
mov
jg
mov
mov
sub
mov
ja
sbb
sbb
cmp
or
pusha
sbb
pop
inc
add
mov
xor
jge
and
add
lds
leave
mov
cmpsb
call
jne
es
in
incb
outsl
in
mov
ljmp
push
add
incl
jmp
ret
xor
jno
jo
jg
repnz
nop
mov
jecxz
out
adc
cmpsl
xchg
ret
lcall
dec
int3
rcr
lahf
cmp
add
mov
jno
pusha
fldenv
in
pop
push
bound
mov
lods
int3
neg
cmp
gs
call
lea
ficoml
and
or
incl
push
insl
rcrb
pop
mov
nop
cmp
cmp
jg
incl
divb
mov
adc
xor
or
cld
nop
shlb
shlb
inc
adc
mov
sbb
add
xchg
inc
pop
stos
les
call
pusha
lret
pop
mov
xchg
enter
fnstsw
and
out
push
mov
jl
aad
push
ljmp
rolb
and
arpl
fnsave
lahf
in
adc
int3
dec
incl
or
fists
or
movsb
xchg
xlat
dec
or
lahf
loopne
mov
adc
push
cld
roll
push
movsl
cmpsb
mov
call
mov
push
enter
xchg
shl
and
pop
ss
fisttpll
xchg
mov
mov
fnstenv
dec
cmpsb
pop
mov
aad
jbe
loopne
fwait
std
lcall
push
repnz
pop
je
mov
fisubs
shrl
fsubl
decl
push
jp
push
jo
mov
repz
pop
enter
and
dec
cmp
rcl
call
hlt
mov
push
xlat
lret
in
dec
mov
xor
add
jg
jg
jge
sbb
stos
sarb
cs
fistps
lcall
shll
or
inc
sar
in
ss
cs
pushl
mov
push
mov
mov
scas
scas
loopne
aaa
movsl
test
ljmp
push
aaa
add
and
je
pusha
xor
clc
xchg
iret
clc
jmp
fldt
lret
inc
data16
call
out
out
mov
scas
jnp
mov
jnp
mov
das
sbb
mov
adc
inc
inc
insl
cs
jb
cmpsl
fwait
xor
stc
pop
std
dec
hlt
jmp
hlt
popa
in
mov
jnp
sub
out
scas
mov
ljmp
fwait
mov
rol
dec
xchg
inc
or
push
sbbl
and
test
jmp
rclb
std
mov
pushf
mov
out
xor
jbe
mov
rolb
sbb
xchg
push
cmc
hlt
test
adc
mov
jg
out
js
sysret
jmp
xchg
inc
loop
xchg
in
mov
dec
ljmp
fists
pop
mov
mov
lret
xor
movsb
fstps
lods
jg
incl
cld
push
fmuls
dec
pop
push
adcl
outsb
add
in
fcomip
jmp
lds
jo
cmp
pop
adc
cli
dec
gs
push
pushl
std
call
rcr
movsb
aaa
fucomp
inc
pinsrw
test
sub
sarl
adc
cmp
jo
sub
jmp
ret
and
cmp
dec
add
mov
mov
cmp
out
cld
movsl
fucomp
adc
xchg
inc
and
lret
js
mov
cmp
icebp
ss
jns
push
adc
pop
push
pop
push
icebp
out
jp
ds
sub
gs
jne
test
push
inc
fnsave
pop
decl
test
cmp
inc
push
jle
mov
push
std
adc
dec
xor
popf
xor
pop
fs
cmpsl
push
xor
fs
incl
arpl
sbb
inc
push
imul
or
jmp
dec
mov
mov
imul
in
inc
jb
lret
xchg
icebp
fcomip
cmp
sub
cs
sub
ret
mov
mov
xchg
xchg
jnp
or
lahf
scas
pop
test
jbe
aaa
in
or
mov
cmp
imul
addr16
add
mov
dec
jmp
adc
out
fdivrl
inc
mov
jecxz
int3
mov
pushl
xorl
push
inc
jnp
test
pop
je
loope
or
out
insl
lods
mov
jmp
cmc
cmpsl
lret
cmp
dec
je
mov
out
or
adc
test
push
lcall
daa
add
push
dec
ficompl
sub
movsb
dec
outsb
sbbb
inc
aad
inc
scas
test
lods
add
cwtl
in
lret
fs
jmp
test
and
es
test
xchg
or
cmpb
std
in
jmp
xor
fdivr
adc
push
cmp
jmp
cmc
push
push
rcll
incl
push
add
pop
sub
inc
and
scas
dec
dec
rcrb
dec
in
sub
pushf
shrl
jmp
and
mov
mov
subl
mov
pop
call
inc
out
sub
and
jp
in
xchg
cmc
push
sbb
subl
jno
mov
in
decl
push
stos
rol
cmp
loop
arpl
xchg
or
lcall
es
mov
int3
pop
loop
or
and
inc
inc
xor
in
or
pop
das
or
pop
jg
lcall
or
fisubrs
outsl
clc
xchg
pushl
in
mov
ss
lods
xor
mov
popa
mov
stos
gs
inc
out
push
in
test
add
pusha
inc
sahf
sbb
jp
push
clc
loop
add
mov
call
ja
push
push
fdivrl
sahf
sub
rcll
push
arpl
adc
add
pushl
xor
movsb
lock
sbb
mov
loopne
jg
hlt
clc
out
jg
sbb
xchg
fldlg2
push
aam
xchg
mov
xchg
ljmp
cli
mov
cmpl
jg
xchg
scas
mov
stos
xlat
pop
pusha
imul
add
aas
sbb
sbb
push
insl
shrb
or
pop
gs
mov
loop
decl
sub
insl
sahf
repnz
mov
call
add
rcll
ret
fbld
sub
fisubrl
mov
ljmp
push
decl
jmp
lcall
cs
mov
or
mov
test
push
iret
jp
decl
sub
cmp
nop
push
push
xchg
iret
inc
cltd
cli
fidivrs
cltd
orb
bound
pushl
outsb
loopne
and
mov
or
subb
jae
hlt
jp
call
mov
loopne
loopne
mov
lret
ret
sti
scas
fcoml
pop
lods
out
mov
loop
loope
push
push
clc
lcall
ss
mov
out
cmp
hlt
sbb
test
sti
add
inc
pop
int3
pushl
cmpsb
push
or
jo
pop
cmp
negb
aas
call
movl
mov
add
or
sbb
jae
jle
lcall
lcall
cmp
dec
outsb
test
jne
repnz
lea
jmp
add
insl
xor
jp
clc
lcall
les
out
andl
cmc
push
mov
xchg
test
aad
dec
xor
lcall
orl
pushf
jmp
inc
repz
scas
xchg
mov
cmpsl
push
lcall
aad
xor
cmp
adc
ds
gs
call
out
add
lds
jecxz
push
fucomp
and
and
mov
mov
add
jmp
add
out
out
frstor
pop
jle
or
jne
push
pop
aam
daa
mov
in
dec
xor
sbb
repnz
xlat
jp
sti
and
pushl
fst
inc
enter
jb
es
mov
inc
cmp
sar
push
cli
push
inc
add
es
xchg
xchg
sub
sbb
dec
jns,pt
sbbl
int3
jl
lods
xor
lret
ljmp
cmc
div
je
lcall
xor
jmp
stos
into
pushf
sbb
cld
enter
pushl
jmp
jae
repz
stos
int
or
and
gs
cld
dec
call
pushl
cmp
and
ja
jg
pop
or
int3
lock
pusha
adc
pushl
inc
mov
insb
lods
outsl
in
ja
cltd
mov
jbe
sahf
or
cmp
call
xor
icebp
gs
push
inc
inc
push
mov
mov
push
xor
xchg
dec
or
call
loopne
mov
add
data16
sbb
sub
inc
xor
jmp
sarl
les
aas
inc
es
cmpsl
xchg
jg
mov
ds
inc
repnz
call
popa
ja
cmp
je
icebp
outsl
cwtl
fdivr
stos
push
dec
dec
rcl
mov
xor
xchg
pushl
xor
mov
call
or
roll
movsb
lds
jle
subb
hlt
dec
sahf
popf
sbb
mov
lcall
cmc
xor
ret
sub
mov
mov
jne
push
ret
cmpsb
cli
pop
sub
popa
push
xchg
push
outsl
and
dec
push
aam
add
jbe
jl
push
call
adc
add
adc
mov
insl
sub
mov
cli
das
cli
dec
stos
shrb
ljmp
pop
fs
cmpsb
testb
adc
test
mov
repz
adc
dec
sbb
sbb
fcoml
sahf
dec
aam
insb
mov
mov
loop
gs
xchg
pop
lds
incl
xchg
mov
mov
sbb
imul
in
mov
adc
loopne
jmp
push
mov
mov
mov
and
fnsave
push
in
pushl
std
daa
out
scas
dec
mov
movsb
pop
repz
std
sub
scas
or
push
mov
mov
xchg
outsl
jo
cmpsb
xchg
fadds
je
xchg
icebp
incl
mov
dec
jecxz
iret
mov
cmpsl
jo
loop
add
popa
out
fidivl
out
push
push
adc
call
mov
pop
pop
fisubl
dec
xlat
cmc
jge
pop
dec
clc
push
mov
das
lock
int
push
repz
jmp
or
add
xchg
jmp
pop
mov
mov
outsl
ja
pop
push
xchg
push
jb
cs
cs
xor
in
mov
test
mov
clc
incl
lea
les
in
loopne
repz
pop
add
popf
mov
pop
sbb
cmpsb
out
mov
aaa
test
ljmp
test
jnp
jmp
mov
push
insb
cmp
into
in
push
fidivrl
xchg
stos
iret
push
je
movsb
ljmp
xchg
cmp
sahf
mov
jne
std
dec
shlb
stc
mov
test
jmp
lret
imul
repnz
stc
stos
inc
std
add
loope
ja
push
out
pushf
std
stos
add
scas
mov
pushl
cmp
jns
cld
mov
call
adc
in
ret
add
xor
cwtl
sub
push
incl
mov
fwait
and
sti
push
add
mov
jno
fcoml
jle
popa
xchg
inc
ljmp
and
lcall
sub
out
xor
jmp
and
sbb
std
or
cmpl
jmp
leave
jle
lock
rol
sub
fwait
adc
xchg
inc
in
push
mov
pop
pushl
std
and
call
pop
mov
xchg
jle
rol
jmp
jno
dec
rcrb
arpl
jl
mov
pop
scas
xor
cmp
xchg
sub
mov
js
mov
pop
loopne
jnp
cld
mov
and
pushf
nop
sub
cmp
xchg
cmp
dec
popa
adc
jmp
xchg
cmp
cmp
shlb
inc
push
mov
fcoml
pushl
es
jns
out
or
scas
cli
lret
icebp
pop
aaa
lock
and
inc
fimull
jmp
int
dec
xchg
jb
rorb
mov
xor
ds
aad
pop
out
jo
int3
jmp
cmp
pop
jno
dec
pop
inc
imul
inc
mov
jle
test
ss
mov
ret
cmp
call
insb
and
mov
dec
ljmp
and
mov
and
push
push
lahf
sti
sbb
pop
mov
in
test
fcomip
mov
cli
or
jae
cmpsb
jo
jno
hlt
mov
adc
pop
jg
outsb
out
fcomip
fnstenv
pop
fsubrl
add
inc
dec
mov
push
movsl
dec
jmp
xchg
push
pop
push
decl
ret
lods
mov
scas
shlb
outsb
mov
xchg
setb
ljmp
push
xlat
ss
xchg
jo
xchg
pop
shrb
fldl2e
and
dec
incl
sbb
dec
add
or
or
icebp
faddl
add
mov
imul
jmp
pushf
jmp
ficoml
jae
addr16
cmpl
and
lahf
cltd
mov
and
sub
add
sti
insb
pop
or
push
std
jnp
fdivs
out
xchg
bound
xor
sahf
mov
pop
popf
js
push
xchg
jg
sub
movb
inc
aaa
imul
lock
cwtl
jo
incl
dec
insl
pop
push
mov
rorl
je
mov
sbb
jne
jge
lock
call
rorl
mov
jg
scas
lock
mov
jbe
leave
jmp
add
xchg
lcall
and
mov
insb
hlt
fcmovu
cli
test
cmpsl
aad
out
mov
testl
mov
fs
jecxz
lret
mov
lahf
mov
sub
cltd
hlt
pop
mov
mov
pop
ficoml
andl
jmp
cli
xchg
and
add
mov
lcall
mov
mov
clc
test
push
mov
dec
mov
cmp
orl
aam
mov
add
sub
xchg
xchg
lods
arpl
or
inc
mov
imul
mov
insl
pop
call
mov
add
stos
aaa
or
cli
jge
sub
push
mov
jmp
call
notl
mov
decl
push
inc
out
bound
xor
cld
sbb
xor
out
xchg
inc
xor
call
les
ja
jmp
test
rolb
outsl
popa
lcall
rclb
sbb
push
fsts
jnp
mov
aaa
lds
ret
out
sub
mov
cmpsl
lock
pop
add
outsl
cmp
jmp
pushl
hlt
mov
roll
clc
mov
int3
and
fbstp
pop
dec
aam
lcall
cli
adc
fstl
pop
lds
jp
pushl
movsb
jge
lcall
outsb
icebp
icebp
add
xchg
cmpb
gs
pushl
cld
incl
sbb
arpl
jl
test
add
pop
shll
push
and
jp
push
hlt
rcrb
loopne
mov
scas
outsl
xor
gs
lods
pop
je
sub
sub
push
imul
xchg
mov
xchg
cld
stos
daa
mov
rorl
sbb
test
add
arpl
adc
out
lock
in
xchg
pop
movsl
scas
ljmp
and
mov
test
xchg
lods
xchg
dec
mov
mov
incl
stos
cs
loope
scas
iret
outsb
or
jne
mov
in
xlat
mov
sar
out
clc
idivb
ret
fcmovnbe
into
pop
inc
aam
xor
cmp
pop
jl
movsb
outsb
test
call
fisubrs
pop
movsb
call
xchg
sub
mov
or
pop
sbb
xchg
dec
imul
repz
mov
jo
and
push
mov
pop
mov
call
mov
mov
jecxz
fs
cmp
nop
hlt
or
enter
ud2
dec
icebp
push
pop
lcall
jne
pop
cmc
fnsave
jge
ret
sbb
mov
adc
mov
lea
jae
das
sar
pop
in
cmpsl
adc
cmp
jle
test
incb
decl
xor
shrb
aaa
out
pop
pop
insl
es
add
mov
daa
mov
xchg
popf
sbb
incl
pop
mov
mov
fsubs
jle
xchg
mov
ss
in
in
lcall
stc
icebp
fbld
inc
inc
cli
jecxz
dec
push
test
lods
imul
iret
jecxz
movsl
aad
loop
mov
dec
cltd
mov
call
imul
mov
loope
mov
mov
xlat
dec
jmp
cli
icebp
in
add
ljmp
movsl
pop
cli
les
popa
push
push
mov
pop
jo
aam
rcrb
aaa
insb
stos
mov
out
jmp
repnz
xor
orl
pushf
adc
incl
pop
sub
insb
out
pop
mov
adc
repz
cld
inc
mov
sub
pop
sbbb
in
and
sahf
jle
adc
lods
loope
mov
jmp
xor
popf
mov
pop
movsb
jmp
jecxz
or
sub
add
cmpl
pushl
and
mov
add
je
xchg
lret
or
or
sbbb
xor
into
in
stc
pop
into
and
flds
roll
mov
cmpsb
test
adc
lock
lods
pop
movsl
out
clc
dec
pusha
scas
dec
mov
pop
xchg
stos
std
mov
or
sar
jg
dec
sbb
cmp
cmp
dec
rorb
mov
les
nop
out
cli
lcall
push
jnp
cmp
xchg
inc
lea
jns
sti
lret
inc
adc
add
lcall
sahf
inc
or
lock
pop
cmp
jno
gs
ret
jmp
dec
sbb
cmp
lds
or
daa
cwtl
mov
call
cmp
push
pushl
adc
sbb
pop
mov
dec
xor
loope
dec
sar
jmp
out
sbb
in
mov
shrl
sbb
ret
jg
add
cmp
mov
sub
outsb
dec
push
sti
xor
iret
cmpsb
pop
lds
outsb
jbe
ljmp
inc
mov
mov
rcrl
cmp
decl
jecxz
gs
adc
inc
sbb
subl
jg
or
mov
mov
arpl
jmp
stos
jge
jb
add
push
push
icebp
xor
sub
and
mov
pushl
out
and
cmc
fcoms
aas
mov
repz
mov
mov
decl
xor
push
mov
inc
pop
and
in
xor
lcall
out
mov
lods
dec
mov
mov
pushf
arpl
std
cmp
cmpsb
or
ljmp
popf
cmpsb
mov
mov
pop
mov
mov
pop
dec
pusha
xchg
std
rorb
adc
sti
jno
lcall
pop
hlt
lret
lock
sbb
and
pop
or
je
dec
pushl
std
out
mov
and
cmp
loopne
sbb
or
decl
in
jmp
mov
add
cs
fmull
jmp
in
xchg
enter
outsl
push
fxch
pop
popa
cli
pusha
jge
dec
xchg
pushl
rolb
sbb
js
stc
push
mov
ja
inc
clc
int3
jbe
mov
pushl
mull
negb
push
out
divl
adc
dec
jo
imul
push
je
not
jl
sub
and
xchg
sarb
adc
fiadds
sbb
xlat
mov
lcall
pop
push
rclb
and
jno
jb
stos
in
js
ds
xor
call
stos
mov
jle
adc
jle
push
cmp
out
shr
loope
popa
push
test
pushl
xchg
push
mov
inc
test
stc
dec
xchg
push
rcrb
fsubr
stc
lcall
divl
or
lcall
lcall
out
add
popl
lcall
cmp
js
inc
js
aad
pop
insb
push
jle
cmp
std
pop
fwait
jo
addr16
ja
ljmp
cmp
mov
xchg
inc
cmp
std
repnz
add
movsb
into
call
call
es
adc
pop
decb
mov
addr16
mov
stos
fsubr
xchg
push
mov
inc
sti
jge
lcall
push
xchg
sbb
dec
sbbb
loopne
push
cmc
clc
jp
xchg
or
lock
incl
jmp
outsl
out
cmpb
or
cmpsb
xlat
mov
lea
stos
adc
incl
lds
inc
testl
clc
xor
dec
mov
jle
add
insl
imulb
cmp
ljmp
and
pop
dec
push
jg
add
and
mov
mov
inc
lret
decl
in
inc
addr16
pop
pop
dec
lcall
pop
inc
jmp
pushl
lods
cltd
sub
into
lret
ss
fcos
mulb
jnp
sahf
jp
es
mov
testl
and
pop
pop
xchg
xor
sbb
adc
pop
das
push
pop
jle
or
pop
xor
jne
push
ds
jg
jno
cmp
xor
insb
rcrb
pushl
ja
mov
jnp
sbb
fcompl
and
ja
mov
sar
movsb
fisubs
sbb
sbb
add
stos
scas
pusha
mov
sbb
push
inc
incl
inc
outsl
mov
inc
jg
loop
pusha
push
hlt
jmp
dec
cld
jmp
out
mov
ja
bound
pushf
dec
inc
fisubs
hlt
jg
ret
mov
shlb
pop
cmp
xor
out
out
lret
test
or
and
pop
cmp
int
and
adc
shlb
pop
ljmp
icebp
insl
jae
cmp
xchg
iret
mov
inc
jmp
shrb
mulb
loopne
aam
mov
call
movsl
pop
movsl
xor
mov
gs
push
xchg
mov
lahf
mov
test
push
ljmp
sub
inc
cwtl
cli
adc
cmp
or
lcall
rcrl
sub
inc
loopne
add
and
push
imul
stos
dec
jp
xlat
adc
pushl
out
dec
sti
pop
or
lret
inc
dec
and
pop
out
fsubs
push
or
ljmp
pop
inc
sti
loop
jl
xchg
dec
hlt
sub
leave
jbe
mov
call
adc
dec
or
imul
js
adc
dec
test
jle
test
lods
hlt
mov
call
inc
pop
popa
push
push
stc
xchg
push
add
std
mov
js
sub
sbb
push
inc
adc
fcomip
pop
push
lret
mov
aam
daa
leave
xchg
out
idivl
sub
ljmp
xchg
int3
std
in
fiadds
pop
in
jecxz
cmp
sahf
inc
push
data16
test
ficoml
lcall
push
jmp
adc
pop
rorb
add
sub
cmpsl
cmp
lcall
mov
aad
lret
cld
xor
mov
inc
mov
test
repz
out
cmp
fcomip
decl
les
or
xchg
mov
xlat
inc
or
icebp
call
mov
sbb
scas
mov
dec
fs
cmp
ljmp
sbb
insb
pop
dec
xor
add
sbb
add
cmp
jle
pop
ljmp
cmp
movsb
lret
cmp
fists
or
movsb
mov
das
clc
jmp
out
add
icebp
lods
addr16
and
jnp
movl
lcall
mov
lock
cltd
ret
cmp
andb
cmp
stos
adc
cld
decl
cmp
enter
add
inc
sbb
pop
insb
mov
inc
and
ret
decl
jbe
iret
cmp
sub
pushf
mov
popf
push
sarl
mov
or
mov
xchg
cmp
fstps
cmpsb
mov
ss
jmp
call
cld
mov
cltd
fwait
ss
subb
jno
cmc
mov
jns
or
lea
ror
inc
insl
cli
jmp
scas
addr16
pop
adc
pusha
or
xor
add
arpl
jb
jne
ljmp
push
jbe
mov
lret
in
xchg
jp
adc
inc
adc
movsl
cld
js
dec
ja
dec
pushl
push
fcmove
cmp
pop
cmpsb
ficompl
cwtl
es
clc
push
xlat
mov
mov
pop
jmp
mov
imul
inc
ss
add
jle
mov
ljmp
mov
sub
pop
aad
fld1
fnstenv
push
mov
into
inc
cmp
lcall
push
cld
push
push
es
and
jbe
idivb
jns
adc
sub
es
mov
cmp
ds
scas
aas
or
or
dec
sbb
pop
pop
pusha
xor
call
in
clc
jbe
sbb
xor
mov
jns
jmp
cmpsb
shrb
sub
clc
jg
loop
testl
add
pop
test
or
lret
ljmp
mov
xor
aaa
lods
dec
jb
fisttpll
imul
mov
lods
lahf
jnp
ljmp
incb
push
jne
mov
iret
xchg
movsb
dec
int
ja
ljmp
mov
enter
lret
sbb
into
inc
jg
ljmp
xchg
sbb
cld
out
mov
xor
mov
jge
cmp
ret
jp
hlt
sbbb
sbb
fcos
decl
mov
lods
sbb
insb
adc
xlat
cmp
jp
pushf
xchg
imul
sub
in
imul
call
bsr
cmp
rcl
and
pop
or
lods
mov
add
jbe
cmp
lcall
jns
jo
notb
mov
push
ss
push
cmp
dec
repnz
out
pushl
popf
mov
inc
out
fwait
mov
xor
adc
sub
cmp
insb
pop
xor
jmp
or
movsl
adc
hlt
dec
out
div
pop
std
ljmp
icebp
and
add
inc
adc
xor
int3
addr16
dec
adc
mov
lahf
decl
pop
arpl
pop
jo
jg
ljmp
xchg
arpl
dec
push
call
cmpsl
dec
int
lds
mov
call
sub
cmpsb
ljmp
aam
je
jnp
jb
mov
inc
mov
imul
fnstcw
pop
jns
incl
push
cmp
xor
pop
sbb
cmp
xorb
loopne
dec
mov
mov
push
stc
lds
movsb
out
or
add
push
test
decl
sbb
lds
repz
cmp
outsb
leave
mov
cltd
movl
adc
ljmp
sub
pop
ljmp
imul
cmpsl
mov
jne
loope
lcall
pop
in
inc
aas
mov
dec
and
stos
negl
pop
and
jecxz
incl
loop
cwtl
popl
sbb
xchg
sbb
inc
mov
jae
xchg
push
dec
data16
call
mov
pop
inc
push
push
sti
inc
shlb
add
enter
ret
ret
add
jmp
sbb
rclb
sbb
pop
call
imulb
mov
dec
cmp
jne
sub
xor
cmp
xchg
shrl
in
sub
pop
lea
pop
stc
incl
mov
xchg
push
data16
mov
es
mov
inc
cmp
mov
sub
js
pop
scas
jg
dec
in
jne
pop
mov
addr16
shrb
and
cwtl
outsb
xchg
loopne
push
jns
mov
jg
fldcw
jnp
out
jno
xorl
fnstcw
mov
ss
inc
fmull
out
mov
adc
dec
jae
pop
mov
mov
mov
add
loop
jg
insb
outsb
jge
jae
sbb
mov
lods
inc
in
mov
push
in
xchg
mov
test
xchg
jb
add
mov
and
sbb
adc
jle
mov
lcall
rol
sub
mov
pop
cmp
nop
xor
cmp
xchg
xchg
lcall
add
fwait
icebp
imul
push
insb
cmc
jmp
inc
fsubl
push
xchg
or
ror
insl
faddl
into
or
pop
in
sbb
xchg
cmp
push
mov
incl
mov
pop
shrl
test
dec
pusha
mov
cmp
xlat
rorl
add
out
shll
lods
hlt
push
xchg
ss
out
xor
mov
addl
jmp
sbb
dec
mov
push
add
xchg
hlt
lcall
or
loopne
cltd
fwait
mov
jo
cltd
pop
mov
mov
cmp
mov
jne
shl
mov
setp
ds
inc
and
jp
scas
jo
decl
lahf
cmp
insl
loop
pop
test
dec
ds
movsl
cltd
and
jmp
mov
lcall
imul
pop
pop
xor
hlt
call
dec
sub
nop
lret
pop
int3
jae
mov
test
es
push
jb
cmp
loop
ljmp
cs
mov
loopne
shlb
cmc
push
sbb
rcll
lret
push
outsl
movsb
hlt
fistl
stos
xor
and
mov
sub
mov
and
mov
sub
stos
jmp
adc
fmull
push
cmpb
dec
pop
and
popa
sarb
push
mov
cld
cmp
mov
in
jno
pop
adc
pop
mov
lcall
push
out
ss
push
add
push
daa
adc
and
jge
scas
nop
lods
add
lcall
inc
jmp
out
fidivrl
imul
jecxz
js
and
jg
mov
shrl
mov
loope
dec
push
push
lret
lcall
movb
inc
mov
in
scas
scas
hlt
pop
xchg
or
jl
popa
cwtl
das
pop
test
and
lcall
cld
jl
push
xor
mov
mov
leave
ds
nop
ficoml
jg
cmpsl
cmc
jp
jg
pop
xor
pop
repnz
xor
and
aas
imul
xor
in
ret
aad
addr16
loope
loopne
adc
push
pushl
sti
int3
adc
mov
mov
sbb
sub
test
cld
push
add
call
je
scas
pusha
jnp
arpl
jo
sub
loopne
cmp
in
sbb
xor
jae
lcall
mov
gs
mov
and
mov
pop
xchg
dec
rcrb
mov
test
jmp
lret
ret
inc
and
adc
rcrl
jo
jns
test
lcall
insl
adc
pop
movsl
test
mov
movsl
sbb
mov
ret
pusha
lret
outsl
pop
push
or
call
cld
incl
push
dec
ret
mov
cmp
stos
push
xchg
add
decl
ret
es
jmp
in
std
loopne
adc
adc
das
xchg
xchg
iret
push
std
fbstp
xchg
dec
xor
in
inc
lahf
fbld
and
data16
push
sub
movsl
jge
cmp
repz
cmp
cli
mov
adc
mov
rcrb
mov
mov
ljmp
out
lock
das
sbb
scas
cld
test
dec
mov
cmp
pop
jae
icebp
adc
std
xchg
pushf
fwait
pop
jbe
gs
negb
and
sbb
ret
dec
shl
lcall
js
xor
inc
movsb
gs
xchg
mov
add
add
add
scas
test
sti
dec
sarb
adc
lcall
cwtl
sbb
sbbl
das
and
jno
pop
and
out
fists
cld
arpl
mov
or
mov
unpckhps
icebp
movsb
inc
sub
cmp
sbb
call
lea
test
leave
cld
xchg
dec
xor
mov
fdivp
fnsave
fildll
std
jg
or
pop
push
add
jp
out
pop
pop
fwait
in
ljmp
fs
ficoml
roll
or
je
mov
shrb
jmp
adc
cmpsl
test
push
in
cmp
push
or
lret
push
fisttps
adc
dec
dec
icebp
cli
mov
mov
cmp
jnp
dec
aad
rol
dec
out
insl
push
xor
movsb
lret
ljmp
outsl
pop
shl
xchg
sbb
ds
or
sub
and
rcr
int
and
mov
aam
insb
cwtl
xchg
mov
insb
or
xor
out
adc
xchg
cmp
push
repz
xor
in
adc
call
inc
mov
aam
outsl
cmp
jbe
insl
es
pop
pop
pop
pusha
jb
xor
add
out
fcmovu
out
jne
jl
addr16
add
jge
cltd
pushf
gs
out
data16
jg
movsl
dec
xor
fs
rol
sbb
aad
pop
incl
ret
sbb
std
and
in
adc
mov
inc
lret
movsb
pushl
inc
jecxz
cmp
xchg
stos
sbb
das
scas
data16
call
fnsave
out
push
mov
stos
mov
bswap
sbb
jns
mov
fldcw
cli
xchg
arpl
bound
xor
and
push
or
out
loopne
fcomip
adc
adc
enter
sbb
scas
loope
adc
adc
fs
jno
lret
stc
js
add
jmp
test
mov
cmc
addr16
jl
mov
popf
xorb
mov
mov
mov
mov
subl
inc
andl
adc
jge
ljmp
es
fwait
incl
das
lock
jp
call
fidivrl
mov
addr16
xchg
out
mov
add
loop
outsl
hlt
pop
fwait
into
loopne
sbb
js
push
ss
loopne
sar
pushl
xor
stc
push
repnz
and
das
aaa
popa
incl
pushl
jbe
mov
dec
cmp
add
bswap
sbb
call
das
inc
loop
sbb
jmp
int
sub
and
jg
aam
adc
push
xchg
jo
fisttpl
push
ret
mov
pop
das
test
adc
enter
cld
ljmp
mov
stc
cmpl
shll
cltd
mull
push
call
cld
pop
xor
rcll
jl
pushf
xor
sahf
dec
call
outsb
inc
jp
sbb
dec
clc
out
mov
out
push
addl
ljmp
jmp
movsl
adc
push
int3
pop
insl
sub
xchg
sub
nop
ss
mov
fwait
add
and
loopne
arpl
dec
ds
std
call
pop
lock
xor
or
cwtl
imul
ljmp
inc
xchg
aad
mov
sub
fidivrs
jmp
add
rcrl
add
mov
dec
jecxz
mov
and
xor
rcrb
mov
or
lods
xlat
out
rcr
imul
ljmp
lds
mov
icebp
mov
xchg
fldt
popf
xorl
stos
mov
leave
test
jge
ficoml
xor
scas
pop
incl
das
ljmp
jg
dec
sub
incl
pusha
mov
sbbl
test
mov
adc
incl
jp
bswap
rcl
sub
mov
dec
jecxz
movaps
je
mov
sub
add
cmp
nop
and
mov
ja,pt
aaa
std
sbb
mov
pop
nop
sub
xor
es
outsb
jbe
inc
in
fisubl
orb
jge
xor
xor
ljmp
cmpsb
jg
dec
lds
sti
div
loop
arpl
adc
mov
popa
int
hlt
and
pop
sub
push
and
and
dec
loope
push
jmp
adc
jbe
hlt
sahf
pop
sub
sub
dec
cwtl
or
add
add
jl
mov
mov
xchg
or
or
push
sbbl
cmp
inc
ljmp
fxch
notb
fxtract
aam
mov
test
into
std
popf
fwait
les
icebp
sarb
or
in
jmp
out
loopne
xorb
xchg
pop
lock
cmc
xchg
cmp
dec
and
fyl2x
jmp
cmp
sbb
cmpsb
push
cmp
js
cs
mov
incl
xchg
in
mov
sub
int
cmpsl
scas
mov
cli
lods
repnz
in
mov
sbb
dec
cltd
lahf
xor
inc
enter
adc
in
sub
fldt
out
cmp
mov
pop
xor
pushl
insb
mov
jbe
rep
jecxz
sbb
dec
and
ret
cmp
mov
push
sbb
dec
mov
mov
mov
addr16
daa
dec
jg
lcall
dec
adc
lret
sub
addl
sbb
adc
imul
aas
jae
mov
cwtl
aas
mov
shrl
mov
sbbb
inc
stos
sbb
ljmp
inc
inc
lcall
cmp
mov
push
adc
pushl
std
pop
mov
movsb
cwtl
and
les
xchg
jecxz
nop
int
push
into
hlt
ljmp
adcl
jnp
lcall
incl
mov
test
out
fisubl
ds
loop
clc
mov
mov
jle
jmp
and
loopne
das
mov
and
lret
mov
loope
std
aaa
jnp
incl
mov
sti
lea
icebp
ficompl
push
pop
nop
ja,pt
mov
adc
fbld
int3
xor
out
repz
xlat
or
in
sub
inc
jl
les
xor
aas
pushf
mov
push
push
xor
push
test
std
pushl
stc
push
lods
xchg
push
mov
add
pop
cli
lret
sbb
sbb
lahf
cli
lcall
decb
xor
xchg
scas
and
adc
enter
ljmp
xchg
cmpsl
mov
lcall
mov
xor
popa
jmp
jno
stos
pusha
dec
sbbb
call
push
dec
lret
push
outsl
pop
xor
lods
inc
test
imull
cltd
mov
jmp
imul
insb
int3
or
add
pusha
ja
fisttps
adc
adcb
pushl
daa
decl
popa
ret
pushf
inc
pushf
xor
dec
fucom
inc
pop
std
push
nop
insb
ret
adc
sbb
test
lods
jns
dec
mov
or
lea
decl
ds
in
mov
xchg
sbb
xchg
xlat
xchg
sub
loopne
pushl
lcall
loopne
mov
jge
out
jge
cli
sbb
das
clc
mov
inc
mov
out
scas
push
outsb
fidivrl
inc
enter
aam
add
fbstp
imul
test
out
jmp
int3
push
js
cmp
stc
scas
jbe
shl
js
lret
lods
cmp
decl
sahf
incl
cmpsl
mov
push
scas
pop
sub
adc
call
push
and
into
popf
pop
cld
rclb
bound
jge
adc
xor
cmp
jg
or
stos
fwait
ret
lcall
repz
pop
push
fstp
dec
mov
repnz
pushl
cmp
xor
int
aas
jb
mov
in
jmp
sbb
pushf
into
js
add
jns
sbb
or
addr16
call
mov
dec
pop
lcall
shll
leave
mov
sbb
shlb
jg
jp
cmc
stc
jg
push
lds
stos
and
pop
lret
mov
addr16
mov
ljmp
je
sbb
fstpt
insb
mov
lods
dec
xchg
orb
stos
inc
imul
cli
ljmp
rcl
push
loopne
add
in
daa
mov
push
addr16
ljmp
into
loope
in
mov
and
or
cmpsl
push
int
pop
das
lods
or
pushl
and
mov
test
ret
push
pop
fcmove
mov
adc
mov
mov
pop
ss
push
testb
push
xlat
jae
inc
popf
icebp
cli
je
mov
bound
bsf
add
sbb
pop
jno
and
mov
cli
jg
xor
lcall
movsb
push
inc
adc
lret
add
sub
sub
repz
add
mov
add
out
add
incl
or
add
les
jo
mov
jg
add
pop
and
js
imul
inc
add
add
dec
orb
addb
adc
mov
inc
iret
mov
add
scas
mov
psllw
jg
add
setl
scas
repnz
inc
xor
cld
inc
in
or
jnp
xchg
movsl
push
daa
add
repz
xchg
dec
and
cmpsl
push
and
cs
pop
roll
push
movsb
push
movsb
inc
popf
lahf
jmp
push
add
test
and
mov
imul
push
inc
pop
pop
add
repz
incl
mov
pop
sbb
add
mov
push
add
push
ds
les
push
adc
xchg
in
or
mov
pop
add
cmpsb
stc
fcmovne
imul
push
sub
lret
jecxz
mov
push
add
fldenv
fdivs
mov
stos
pop
stos
lret
out
test
add
sub
aam
push
mov
push
shll
add
outsl
adc
shll
fidivrl
iret
outsb
or
push
push
ja
ret
je
fidivrs
out
jge
mov
cs
fisttps
add
fwait
inc
ds
in
movsb
push
subl
add
mov
sbbl
push
mov
out
into
arpl
push
push
push
add
jne
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
ficompl
pushf
jbe
push
data16
inc
out
jne
xchg
cs
push
fcmovnbe
cmp
shlb
lret
stos
aas
add
ja
pop
jmp
cmp
push
xlat
jne
add
ja
mov
aad
push
xlat
ja
js
push
iret
outsb
fiaddl
jns
push
jp
jp
inc
push
fcmovb
mov
cmpb
jns
ja
fldl
les
je
jmp
ljmp
push
xchg
sub
xchg
in
xchg
sub
xlat
pop
fisttpl
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
jge
cltd
cmp
cmp
pushf
cmp
shrb
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
out
mov
push
jecxz
push
imulb
cmp
add
add
cld
out
out
push
hlt
clc
repz
repz
cli
sti
cld
std
pop
and
iret
incb
jecxz
arpl
inc
jae
add
leave
insb
add
popa
push
add
pop
mov
insb
add
pop
add
pop
ss
and
and
out
add
add
or
add
fldt
out
outsl
or
or
fiaddl
xchg
aas
test
test
or
mov
jbe
push
sbb
adc
pop
stos
dec
pop
adc
lods
jbe
add
add
pop
stos
femms
lods
lods
pop
in
insb
pop
add
add
pop
mov
insl
lods
pop
pop
adc
xorb
pop
sbb
mov
scas
sbb
scas
scas
scas
sbb
mov
mov
mov
imul
mov
pop
push
add
movsb
mov
push
xor
decl
sbb
and
mov
mov
stos
movsb
mov
pop
mov
dec
adc
sub
pop
sub
mov
stos
in
add
sub
or
pop
daa
mov
das
or
mov
inc
pop
aas
cmp
mov
mov
pop
cmp
mov
cmpsb
add
mov
pop
xor
xor
push
pop
pop
or
or
add
ja
pop
insl
pop
pop
xor
mov
pop
das
push
cs
xor
mov
push
push
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
clc
ljmp
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
addr16
pop
inc
add
pusha
pop
pushw
dec
dec
cmp
jnp
dec
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
push
dec
lods
mov
add
bound
mov
imul
adc
cs
jg
sbb
push
or
ret
and
xor
rorl
pop
pop
push
pop
test
scas
aas
sti
mov
outsl
dec
jle
xchg
in
aas
out
lcall
dec
add
push
mov
cmpsb
push
mov
sub
js
xor
xor
ja
push
ja
jb
cs
scas
adc
xor
mov
add
jbe
popf
mov
jle
and
push
mov
xchg
mov
jo
push
inc
mov
cmp
mov
inc
add
pop
sub
xchg
jae
xchg
jp
inc
push
popf
inc
mov
aaa
mov
xor
add
xchg
jno
lret
push
bound
mov
mov
flds
lahf
inc
inc
push
sahf
mov
insb
insl
fcomi
pushl
add
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
sub
in
push
dec
push
movsb
jae
add
jb
shll
jg
mov
push
rorb
add
lcall
fistpll
into
dec
mov
add
ja
sahf
jbe
sar
mov
sahf
push
add
add
ds
push
test
and
int
mov
movsb
js
mov
data16
shrl
jge
xlat
popf
insb
pop
outsb
push
outsl
ror
push
dec
push
fiadds
ds
sbb
mov
loopne
jge
push
jg
fiadds
call
sub
lock
add
lock
mov
add
test
add
sahf
mov
xchg
add
jb
out
in
addr16
mov
jle
or
jecxz
or
repz
jle
aad
push
divb
fildl
adc
push
in
jge
dec
adcl
sbb
addl
test
test
sbb
test
in
shll
mov
push
xchg
nop
and
out
xchg
or
in
xchg
lock
sub
sub
divb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
sbb
push
cmc
sahf
xor
lcall
fcmovb
out
pushf
cmp
aam
sbbl
cmpsb
scas
jo
test
sahf
mov
pop
jbe
stos
into
shll
push
jl
push
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
hlt
andb
ret
data16
add
addr16
push
dec
out
je
and
or
pusha
add
mov
mov
femms
or
or
fstpt
sbb
es
push
adc
push
add
add
adc
adc
ds
add
scas
mov
mov
xor
ds
xchg
push
mov
or
sbb
fsubrs
add
and
cld
push
imul
mov
aas
and
sub
xor
insb
xor
aas
aas
cmp
cmp
adc
cmp
sbb
sub
ds
jbe
cmp
ficompl
inc
cmp
or
ds
mov
jge
lods
popf
dec
aas
adc
ds
xor
cmp
decb
test
mov
jbe
mov
ds
add
sub
ds
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
in
inc
clc
add
test
mov
sahf
ds
add
xor
sub
sub
sub
sub
dec
mov
ss
and
fildl
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
jg
aas
mov
jge
jns
jns
jle
addl
jo
lods
mov
outsl
outsb
pushf
sti
popf
shrb
rolb
outsl
adcb
add
or
pusha
out
sub
jl
incl
repz
dec
xor
bound
jae
aas
add
xor
mov
xchg
pop
cmp
test
add
mov
add
mov
push
xor
ljmp
bound
fnstsw
repnz
in
jg
inc
push
xchg
addr16
add
pushf
add
mov
push
in
jge
std
mov
or
arpl
mov
das
fsubrs
push
push
dec
lret
js
into
xchg
add
fistpll
add
mov
mov
test
scas
xchg
js
in
dec
test
mov
xor
nop
sub
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
data16
int3
fst
es
push
lret
loopne
sub
jle
std
into
fdivrp
mov
pop
inc
imul
xchg
add
test
fldcw
add
jge
sub
xchg
inc
push
dec
dec
dec
dec
xchg
jmp
decl
or
pop
or
add
push
dec
or
adc
cmp
fsubr
in
outsl
adc
dec
or
add
push
adc
add
repnz
inc
or
pop
pop
cmovg
inc
dec
sti
mov
push
dec
sbb
inc
adc
inc
inc
fscale
adc
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
sub
push
add
adc
int
pop
and
pop
mov
flds
mov
mov
add
add
mov
outsl
add
push
mov
sbb
add
mov
cmpsl
mov
and
jbe
add
pop
nop
or
adc
jmp
ret
sbb
incl
add
push
outsb
sysret
mov
es
xor
andl
ja
cmpsb
pop
stc
sysret
in
jo
leave
leave
lock
hlt
sbbl
jg
sbbl
mov
xor
add
or
jg
lahf
test
add
into
jg
cli
shlb
add
and
mov
add
jle
and
sbb
pop
add
mov
add
cli
jo
dec
push
jle
inc
xor
andb
sti
jg
test
sub
xchg
les
inc
mov
xchg
xor
or
adc
jg
add
cld
jg
inc
add
pop
les
pop
jle
cmpsb
decl
mov
cmp
std
jg
and
adc
jg
test
out
jg
adc
or
sbb
mov
sbb
stos
add
and
add
call
pusha
add
and
pusha
stos
mov
mov
jg
mov
dec
mov
and
or
and
push
jbe
adc
test
push
test
sbb
sbb
mov
jle
lret
imul
and
adc
mov
addr16
xor
mov
adc
je
or
add
and
add
sbb
and
scas
data16
add
orl
jg
lods
or
cmpsb
incl
or
jg
xor
movb
cs
cs
fldcw
cmpsb
ljmp
jnp
mov
pop
add
daa
mov
insl
sbb
aaa
pop
pop
mov
pop
jle
int3
loopne
dec
add
or
test
mov
jle
sbb
call
cwtl
adc
dec
xchg
push
ja
cmp
bound
add
mov
comiss
daa
push
arpl
or
mov
arpl
out
cmp
decl
dec
or
pop
pushf
push
xor
ljmp
dec
inc
dec
sbb
jle,pt
jle
aam
xor
into
ja
xchg
push
push
fnstenv
add
push
and
cmp
jbe
inc
xchg
mov
out
push
jnp
push
jp
popf
insl
adc
push
js
dec
jbe
pop
add
aaa
bound
mov
mov
popf
adc
or
popf
ljmp
decl
jne
iret
jle
dec
jmp
outsb
ss
mov
call
or
fildl
fiadds
int
pop
lahf
mov
push
mov
fwait
adc
jbe
sahf
inc
out
and
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
roll
cmp
mov
mov
xchg
xor
xchg
xor
sub
fisubrs
nop
sub
nop
daa
ss
cs
mov
cmp
mov
xor
data16
call
ljmp
xchg
mov
adc
incb
fnsave
xor
pushl
pop
add
sbbb
pop
xor
push
pop
and
xor
stos
fnsave
inc
push
xchg
movb
nop
mov
mulb
mov
add
add
adc
les
inc
sbb
adc
add
bound
mov
dec
sahf
sub
inc
aas
push
adc
pop
push
orl
lea
jns
popf
push
imul
mov
sbb
test
push
lock
and
pop
cmp
incl
xor
in
add
mov
sub
cmpsb
cmpb
decl
out
pop
cmpsl
pop
add
push
mov
mov
outsl
daa
orb
push
sbb
xor
mov
cli
push
addb
sti
xchg
std
jp
add
jmp
syscall
mov
sub
xchg
lods
push
incb
xchg
or
add
lcall
or
mov
sub
insb
lahf
xchg
daa
cld
pop
das
pop
sub
and
jmp
daa
cmpsb
movsl
incl
lcall
ret
pop
daa
std
out
test
add
adc
lcall
or
decb
sti
pcmpeqd
inc
popa
ds
pushl
ljmp
popa
or
call
sbb
inc
jmp
bound
movsb
sbb
inc
rorl
lods
test
sbb
sub
outsb
sqrtps
fdivr
or
mov
clts
add
mov
jb
and
iret
int3
shlb
incl
mov
sti
out
ud0
aam
mov
pusha
add
pop
add
int3
or
call
push
and
add
fdivrp
push
sub
add
je
pop
movsb
lds
sti
push
std
inc
and
out
adc
push
adcb
cmp
or
cld
pop
stc
vmwrite
and
jg
mov
dec
aaa
push
idiv
loop
je
or
movsb
decl
decl
jmp
ljmp
xor
pop
fcmovbe
pop
fcmovu
mov
pop
inc
xorps
dec
adc
decl
pushl
addr16
push
shll
shr
add
push
dec
sahf
ret
call
call
adc
jmp
repnz
int
ljmp
lahf
inc
inc
push
inc
lods
dec
mov
pop
mov
lea
sahf
movsb
dec
push
stos
push
popf
inc
xchg
int3
jnp
cmpsb
dec
dec
inc
jne
lcall
push
add
and
dec
shlb
push
shrb
xchg
int
push
rcl
outsb
shrb
es
fwait
dec
push
push
jb
and
das
push
iret
insl
xchg
jmp
outsl
pop
imul
push
push
dec
stos
xchg
push
ljmp
call
sahf
call
fisubl
dec
pop
add
repnz
adc
push
jmp
pushf
int
xchg
mov
decb
cwtl
xor
push
inc
push
xchg
fisubs
es
push
aaa
push
lcall
xchg
xchg
push
xchg
es
xchg
xchg
xchg
notb
sub
xor
mov
test
aam
incl
decw
int3
jb
fimuls
lret
push
js
std
data16
hlt
faddl
jge
push
jnp
dec
rep
iret
jp
or
jl
or
xor
push
fidivrl
jge
jg
es
mov
jle
repnz
push
dec
push
dec
repnz
repnz
int
jae
pop
fidivrl
push
mov
jnp
push
jb
jge
hlt
in
add
int3
outsb
nop
negl
and
mov
stc
sbbb
aad
add
mov
adc
adc
outsb
add
push
sbbb
jnp
lahf
lds
decl
mov
addl
orb
out
xchg
aas
jg
and
xchg
out
push
sub
iret
out
mov
out
xchg
clc
push
neg
xchg
inc
sub
jg
and
ss
pop
cld
mov
jno
sub
jg
mov
icebp
mov
jg
jns
bnd
inc
daa
jg
mov
ja
jle
inc
push
loope
xchg
cld
jp
es
mov
jge
incb
out
xchg
and
orb
stos
push
add
pop
jmp
orl
mov
icebp
nop
sub
cs
cmpsb
push
push
fsub
pop
push
adc
push
int3
decl
dec
jle
mov
fidivrl
arpl
clc
int3
cmp
push
pop
fnstsw
movsb
aaa
push
pop
push
pop
or
nop
cmp
sti
and
lcall
sbbb
push
jns
mov
push
addr16
mov
jmp
xchg
jmp
mov
push
xchg
mov
jle
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
stos
in
cwtl
or
pop
push
push
test
ja
inc
or
daa
xlat
push
cmovno
fistl
cmc
sahf
inc
xchg
adc
push
and
add
xor
push
addl
cmpb
add
jmp
pop
mov
mov
pop
dec
test
sbb
inc
outsl
fwait
call
mov
sbb
xchg
push
mov
inc
int3
pop
idivb
add
push
sbb
push
aaa
imul
insl
jnp
or
push
push
movl
inc
inc
add
and
inc
push
dec
sub
inc
sub
cwtl
sahf
jno
mov
push
movsb
add
add
inc
js
add
gs
jo
add
or
mov
dec
cmp
and
and
mov
sub
dec
sbb
and
aaa
xchg
scas
out
insl
adc
insl
addl
sub
jnp
fiaddl
jo
out
push
arpl
fstpl
sti
inc
sub
popa
imul
out
fwait
cmp
movsb
insl
iret
add
and
outsl
adc
les
or
movsb
jno
or
or
add
add
jno
cmc
add
cmp
or
jmp
add
push
add
add
or
lods
fsubrs
jo
mov
jne
pop
popf
in
pop
xchg
inc
jne
popa
shlb
xor
xchg
jb
or
je
add
sub
rorb
inc
sbb
add
add
les
add
pop
mov
mov
add
add
add
pop
inc
addl
pop
test
sbbl
xchg
inc
inc
mov
lcall
orl
adc
xchg
shrb
jo
xor
dec
push
dec
ret
ss
outsl
loop
and
sahf
mov
and
cwtl
inc
shrl
arpl
mov
pop
pop
dec
insb
out
cmpsb
mov
incl
sub
sbb
subl
aam
icebp
je
popa
addr16
in
push
or
fwait
add
jmp
inc
bound
sbb
add
dec
and
xchg
arpl
inc
movsb
imul
cmp
pushf
movsb
jno
mov
bound
xor
inc
imul
xchg
pop
movsb
adcb
rcll
inc
xor
sbb
jno
push
add
notb
adc
mov
es
je
push
dec
in
mov
xchg
mov
add
mov
sbb
cmp
add
add
xor
adc
outsl
pavgw
adc
pop
push
cmp
push
xor
dec
adc
add
adc
jb
xor
cltd
inc
mov
scas
shll
add
lcall
cmp
arpl
pop
mov
sarl
and
xchg
jge
adc
arpl
add
rcrl
mov
mov
adcb
cmp
add
add
pop
and
xor
mov
jp
adcl
jmp
jns
in
jae
xor
add
fists
mov
xor
push
aad
js
lods
pop
test
mov
insb
sub
sbb
adc
mov
fcompl
push
cmc
test
pop
inc
incl
cmpb
mov
cmp
adc
mov
inc
xchg
gs
add
cmp
xor
jb
fxch
js
lahf
sbb
inc
arpl
fiadds
arpl
sub
dec
adc
inc
pop
test
sub
leave
pop
sub
outsb
sub
aad
adc
xor
rcrl
inc
outsl
testl
mov
inc
imul
sbb
mov
mov
test
pop
arpl
andl
mov
fnstcw
lea
xchg
xor
ficoms
cmp
lcall
jb
ds
inc
dec
inc
insb
cmp
int3
sahf
cs
rcpps
jb
icebp
inc
adc
jb
inc
inc
jno
popl
outsl
sahf
mov
jl
inc
imul
sti
mov
ja
aam
outsb
dec
insb
sahf
daa
push
sub
popa
dec
fs
push
outsl
jo
jb
stos
add
fwait
clc
addb
iret
dec
inc
jecxz
or
dec
and
rcrl
int3
lods
dec
ret
sub
sarl
adc
imul
push
sbb
inc
add
out
push
imul
dec
pusha
dec
std
divb
or
mov
xchg
and
adc
outsb
inc
lds
pop
xor
push
mov
je
insl
dec
outsb
dec
stc
add
or
xor
sub
xor
divb
lcall
dec
add
sbb
mov
lcall
add
or
imul
movhps
lcall
mov
scas
imul
es
nop
ret
or
cmp
insb
inc
mov
movsb
outsl
xchg
add
add
and
test
rcr
imul
and
shlb
ret
inc
lret
pop
or
xor
sbb
insl
ret
je
adcb
data16
sbb
jg
pop
sub
pop
add
dec
xchg
adc
cmp
push
popa
add
sbbl
sbb
pop
xchg
add
adc
xchg
and
sbb
jo
inc
sbb
scas
lcall
xchg
and
and
jno
xor
popf
adc
jp
gs
jnp
movsb
add
dec
mov
push
mov
les
push
xchg
push
jge
ret
es
xor
int3
test
sub
push
ss
xchg
lods
ret
push
dec
sbb
jbe
inc
insb
sub
push
push
outsl
inc
inc
xor
cmp
pop
lret
inc
lock
jns
mov
mov
add
mov
ficomps
xlat
adc
or
adc
mov
pop
mov
fwait
jg
pop
add
inc
xor
xchg
enter
out
cmp
mov
xorb
and
jbe
je
insb
mov
lods
cmp
mov
aas
push
push
mov
in
and
add
push
mov
xchg
aad
insl
rcl
jo
dec
inc
push
sub
inc
dec
test
mov
addr16
adc
arpl
and
jne
pop
xor
cwtl
dec
mov
push
add
aaa
mov
cwtl
jb
inc
cwtl
shrl
sbb
mov
shll
mov
cmp
cmp
jns
push
lea
and
jp
sub
mov
and
out
jmp
mov
outsb
fdivs
add
push
dec
push
mov
sbb
imul
nop
shlb
xchg
jbe
sbb
or
sarl
iret
repz
dec
push
mov
mov
inc
sbb
ss
mov
add
sub
add
in
pop
push
or
sbb
xchg
or
cmp
cmp
outsb
adc
test
imul
shll
add
aaa
pop
shrb
and
out
sub
addb
inc
ss
push
push
cmp
or
movsl
dec
sub
jnp
decl
push
or
inc
and
cmp
or
sbb
add
add
imul
mov
adc
pop
sti
mov
cmp
push
and
adc
add
push
add
push
mov
iret
jle
ud2
push
add
adc
mov
sbb
sub
cs
or
push
or
fistpl
xor
adc
es
push
adc
push
inc
pop
adc
pop
add
push
sub
push
push
inc
sbb
sbb
cs
std
in
call
or
xor
and
lea
bndldx
add
xor
adc
sbb
push
add
add
adc
das
clc
cmp
push
sbb
add
and
xor
sbb
cmp
add
or
push
or
outsl
mov
add
adc
ss
sbb
subps
inc
pop
sbb
jle
std
or
sub
or
and
sbb
or
sbb
sbb
arpl
sbb
lods
add
sbb
adc
cwtl
xchg
movsb
adcb
loop
and
mov
xor
sbbb
push
and
daa
push
or
xor
or
or
or
sbb
or
add
dec
mov
xor
out
out
or
and
mov
pop
mov
ljmp
and
pop
pusha
mov
jae
or
in
sub
or
nopl
xchg
xchg
idiv
and
add
or
daa
add
push
xor
xor
or
jg
lcall
and
sub
stos
pushl
cmp
es
xor
dec
sbb
das
push
bswap
add
incl
sbb
jnp
push
xchg
adc
or
push
push
lods
adc
or
pop
xor
fs
sub
push
push
or
pop
aaa
adc
adc
adc
daa
adc
or
xor
push
sbb
and
es
call
sbb
sub
and
or
push
lods
inc
and
or
add
mov
and
or
decl
cmpsb
pop
dec
adc
or
pop
adc
pop
and
or
or
je
sbb
adc
pop
je
scas
sub
ja
sub
sub
jg
lock
ds
shll
fistps
cmp
ss
inc
sbb
xor
das
test
add
mov
lock
push
jl
add
dec
sub
sbb
ret
push
push
push
adc
das
clc
fildl
adc
or
cmp
sub
clc
popf
and
push
or
aaa
jo
or
or
pop
push
popa
ficompl
sbb
xor
and
aas
push
sbb
xchg
jb
mov
cmp
cmp
adc
sub
xor
jp
cmp
cs
in
ljmp
sub
lock
add
cmp
incl
adc
lock
sbb
add
dec
mov
lcall
add
cmp
sub
mov
mov
es
unpckhps
sbb
cmp
fdiv
jg
mov
push
xor
mov
outsl
dec
adc
lock
add
lods
clc
ja
lea
sub
fisttpl
out
je
jmp
push
sub
outsb
add
push
mov
pop
adc
xchg
mov
dec
outsl
and
xor
es
sti
scas
cli
testb
add
push
push
and
inc
sbb
adc
call
or
push
inc
mov
add
push
push
or
cmp
cmp
mov
add
push
inc
dec
mov
scas
clc
inc
outsb
fadd
rcrl
xor
bound
adc
fidivrs
or
outsl
jg
clc
add
insl
fmull
and
xor
in
decl
dec
pop
inc
mov
sahf
adc
adc
pop
fstpt
cmp
psubsb
sub
mov
loop
adc
sbb
xor
adc
sub
and
push
mov
push
lock
or
or
sbb
jb
pop
inc
addr16
aas
dec
pop
pop
imul
lods
xor
add
cwtl
shrb
or
xchg
add
pop
pop
adc
add
scas
adc
andb
jno
sub
outsl
stos
aaa
insb
pop
loopne
lcall
dec
arpl
sbb
sbb
adc
inc
pop
scas
jp
lcall
push
and
pop
xor
xor
daa
inc
sbb
femms
and
clc
call
cmp
pop
adc
aaa
and
or
aaa
push
sbb
or
add
cs
cwtl
or
adc
cmp
dec
jnp
jne
and
mov
sub
sub
fldt
pop
or
cwtl
mov
add
cs
pop
adc
adc
sar
mov
lock
add
scas
dec
dec
push
pop
cmp
jg
sbb
xchg
push
sbb
adc
xor
push
sti
lcall
pop
pop
and
inc
lock
add
sub
add
inc
jg
stos
pop
cmc
adc
inc
push
mov
cmpsb
fcmovu
jb
rolb
sub
clc
stos
pop
jno
and
and
add
add
mov
sbb
sub
pop
cmp
mov
sbb
xchg
sbb
cwtl
jle
std
ljmp
inc
cmp
inc
daa
insb
and
xor
out
add
and
add
push
or
stos
pop
notl
mov
aaa
push
xor
push
pop
and
mov
cs
jo
xor
or
xor
adc
push
and
push
cmp
inc
and
and
add
sbb
and
pop
ud2
adc
lret
decl
mulps
pop
cs
push
cmp
adc
sub
adc
scas
mov
cmpsb
mov
push
jne
dec
sbb
daa
inc
adc
push
or
sub
scas
mov
ja
add
dec
pop
add
add
push
sbb
add
sbb
outsb
add
and
movsl
or
adc
lock
lock
sti
add
sbb
sbb
dec
add
loopne
jae
mov
mov
adc
adc
mov
and
sub
add
inc
push
sbb
sub
sub
and
add
sbb
adc
daa
pop
adc
jle
mov
cld
lret
adc
adc
aaa
dec
or
inc
push
and
cld
sbb
jae
sub
push
adc
jge
cli
dec
xchg
daa
sbbb
ds
insb
sbb
stos
incl
jg
popf
and
fistpl
imul
or
dec
pop
cmp
test
or
testl
or
sbb
xor
push
dec
ss
add
adc
icebp
push
adc
sbb
add
lock
add
sbb
addr16
pushf
sbb
jg
sahf
nopl
sbb
push
movhps
sbb
sub
in
scas
mov
or
cmp
lock
or
or
std
push
dec
sub
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
push
sbb
or
pop
icebp
add
pusha
data16
js
mov
or
jmp
mov
and
aas
pop
inc
and
aas
scas
xor
cltd
adc
and
push
sbb
pop
add
pop
push
push
sbb
push
pop
push
sbb
sbb
push
add
scas
or
es
aas
enter
inc
cmpsb
lock
inc
inc
pop
sbb
sbb
sub
adc
int
lock
std
add
lock
add
add
pop
or
jmp
add
jl
add
or
sbbb
sbb
pop
clc
xor
cmp
adc
pop
or
and
decl
cmp
adc
sbb
cmp
unpcklps
cmp
push
sub
or
or
or
ret
sbb
adc
daa
adc
sub
or
pop
jae
sbb
adc
xor
aas
adc
push
and
push
jge
adc
pop
sbb
pop
xor
and
mov
cli
or
mov
dec
test
out
ds
push
mov
daa
outsb
jo
ljmp
icebp
scas
lret
xchg
pop
sbb
leave
add
movlps
jnp
pop
or
sbb
add
inc
add
jb
pop
sub
mov
icebp
sbb
aaa
outsl
and
push
dec
push
cs
movsbl
lret
lahf
dec
call
mov
fbstp
xor
add
es
lock
push
fs
mov
push
lret
cmpl
jp
or
or
movntps
push
pop
adc
adc
push
push
sti
ja
and
sbb
or
xchg
jne
sub
adc
sub
sub
sbb
inc
push
push
inc
or
pop
out
mov
dec
cmp
and
das
adc
sub
icebp
ljmp
or
or
push
cs
sub
or
call
or
or
or
adc
pop
daa
or
dec
prefetch
lock
lahf
decl
pop
push
xchg
movsl
adc
pop
sub
pusha
push
sbb
mov
and
adc
test
pop
xor
pop
icebp
jg
xor
or
adc
clc
push
sbb
lock
add
adc
stos
cli
push
subb
lock
add
and
wbinvd
push
xor
outsl
pop
loopne
cwtl
push
dec
xor
inc
adc
sub
sbb
mov
incb
nop
pop
or
sbb
sub
inc
inc
inc
cmp
scas
decl
sub
cmp
mov
xor
popa
adc
mov
push
cli
sarl
or
inc
adc
mov
icebp
jmp
sbb
inc
cmp
pusha
insb
pop
xchg
clc
mov
push
ljmp
push
or
push
fdiv
ficoms
adc
in
pop
stos
jbe
pop
ss
xor
inc
stos
incb
cmovno
movsl
or
sti
mov
sbb
push
xor
test
or
xor
loopne
mov
inc
mov
or
or
cmp
das
xchg
cmp
ds
mov
aas
push
mov
inc
pusha
push
pushf
adc
decl
pop
xor
or
loopne
inc
push
pop
dec
sbb
cmp
fdivp
pop
rolb
aam
pop
mov
jb
or
add
or
sbb
jo
fildl
mov
adc
es
and
or
xor
or
push
stos
inc
loope
sub
or
adc
sbb
push
data16
mov
add
sbb
mov
roll
adc
add
jl
loop
adc
push
push
sub
sti
or
inc
dec
dec
add
repnz
sub
xchg
sbb
and
ficoml
lock
pop
and
add
ret
and
push
inc
inc
sub
das
sbb
ret
pop
sbb
and
xor
bswap
test
inc
lock
std
cmp
adc
femms
aaa
dec
adc
cmpsb
mov
cwtl
pop
inc
or
push
or
cmp
and
xchg
pop
inc
sub
cld
in
aaa
stos
or
dec
pop
sub
xor
adc
les
aad
or
cmp
push
sbb
sbb
fldt
test
ret
adc
ds
adc
pop
adc
xor
das
rorb
lock
push
adc
sub
cmp
jecxz
pop
ja
adc
pop
sub
lock
inc
dec
adc
sbb
jge
mov
push
adc
push
or
and
jb
mov
or
inc
and
add
push
inc
fwait
popa
aad
xchg
or
or
add
adc
cld
aaa
mov
outsb
and
cmp
cmp
jp
or
or
inc
or
sub
sub
dec
inc
push
pusha
adc
inc
cmpsl
mov
sbb
call
std
arpl
push
popa
ret
dec
insb
bnd
scas
pop
inc
push
sbb
arpl
push
test
test
push
arpl
sbb
sbb
outsl
call
sub
ss
jns
adc
or
bndldx
inc
or
aas
fbld
add
jo
andl
xchg
sbb
mov
pop
sbb
and
push
dec
fmuls
pop
ds
rorb
xchg
or
loopne
jl
jno
and
add
fnstsw
add
or
adc
mov
xor
mov
adc
sbb
inc
or
adc
push
push
adc
adc
lock
add
nop
aaa
popa
push
das
or
and
add
inc
adc
fiadds
sub
sub
mov
popa
lahf
pop
sub
mov
adc
and
and
pop
inc
adc
les
or
loope
sub
sbb
and
cmp
data16
cmp
mov
or
loop
add
pop
mov
sbbb
daa
mov
lds
or
inc
lock
xor
adc
dec
pop
and
decl
pop
inc
inc
push
aaa
test
adc
cmp
daa
jg
incl
and
jae
sbb
pop
and
out
imul
mov
or
sub
and
cli
jmp
inc
pop
adc
sbb
pop
cmp
adc
add
push
cmp
mov
jb
sub
push
sbb
add
lcall
pop
jecxz
lock
dec
nop
dec
and
or
outsl
dec
dec
lock
fcomip
sub
push
sub
sbb
cmp
add
outsb
xor
pop
mov
or
fimuls
pop
cld
dec
and
sysexit
cmp
je
dec
mov
add
dec
add
out
es
nop
sbb
loop
xchg
mov
mov
and
push
mov
or
push
and
in
sbb
push
push
pop
adc
pop
or
xor
mov
push
jl
das
push
cli
sbb
lahf
add
jo
str
insb
out
add
mov
or
add
dec
sbb
mov
insb
push
mov
xor
xchg
addl
mov
jl
add
sbb
aam
xor
sub
loope
push
add
adc
sub
sub
pop
mov
lock
mov
or
or
xor
lods
add
mov
data16
or
adc
cld
pop
pop
add
sbb
lock
sbb
mov
aad
mov
push
pop
in
push
lock
lock
add
es
lahf
bound
pop
aad
lea
xchg
add
lret
add
dec
inc
cmpsb
adc
or
mov
cmp
lock
loop
inc
pop
add
lock
js
xchg
inc
xchg
dec
or
adc
sbb
mov
cmp
pop
cmpl
adc
inc
sbb
sbb
or
shl
dec
cs
pop
push
dec
or
and
xor
cmp
sbb
loop
lock
inc
push
lcall
add
push
fdivl
aas
add
ret
mov
rorb
xor
or
or
and
xor
outsl
pop
je
mov
or
push
or
add
and
dec
dec
push
ret
js,pn
push
cwtl
or
ficompl
or
jle
in
jg
add
es
push
sub
sbb
jp
or
or
ret
in
xor
sahf
sub
or
adc
imul
push
and
sbb
nop
and
sbb
push
shl
adc
sbb
cmp
pop
sub
addb
pop
aam
sbb
inc
jmp
sbb
sbb
pop
mov
lcall
sub
lock
fisubl
mov
fs
nop
out
mov
ds
inc
fnsave
adc
dec
adc
and
jbe
clc
sub
push
add
aas
cmp
or
add
push
cmpsb
inc
adc
into
sub
push
mov
add
cmp
and
into
sub
add
cmp
adc
adc
imul
pop
add
scas
xchg
adc
sbb
pop
sbb
adc
or
outsb
aas
fidivs
and
xor
aaa
lods
clc
xchg
adc
das
dec
or
mov
adc
xor
dec
xor
add
add
sbb
lcall
sbb
ficomps
and
sub
mov
fcmovbe
xor
popfw
ss
and
incl
mov
adc
movsb
outsb
das
pop
or
pop
push
push
and
sbb
faddl
and
orb
push
add
popa
push
mov
movsb
add
inc
outsb
out
push
push
xor
cmpsl
cwtl
or
cmp
sbb
neg
mov
jle
cltd
lock
adc
adc
test
fsubs
add
divb
insb
dec
lock
add
push
aam
add
xchg
mov
add
mov
cwtl
jmp
jbe
push
mov
sbb
inc
lock
add
inc
mov
pop
and
les
xor
cmp
adc
and
sbb
cs
sub
notb
cld
or
cmp
or
add
sarl
clc
add
mov
jl
sub
sbb
movsl
add
jae
cmpsb
dec
adc
push
lcall
fisttpl
xor
or
cmp
pop
mov
sbb
push
adc
inc
push
adc
clc
dec
aas
and
xor
push
mov
and
adc
mov
cs
cmp
jg
das
add
lock
add
push
js
pop
xor
outsl
jb
mov
pop
dec
and
test
cs
imulb
and
add
and
sbb
sbb
sbb
pop
decl
adc
sub
dec
dec
push
mov
mov
push
sbb
and
das
inc
mov
cld
dec
inc
sbb
and
ss
xor
cmp
arpl
xchg
sub
dec
and
push
dec
cmp
inc
rcll
faddl
or
push
dec
dec
inc
xor
ds
xor
inc
push
and
pop
andl
ret
sbb
cmp
das
je
jp
xchg
and
cmp
sub
orl
subl
sti
mov
xor
sub
sub
push
ds
dec
pop
and
xor
dec
xchg
dec
pop
dec
push
and
mov
push
xchg
cmp
movsl
xor
mov
arpl
inc
inc
pop
lret
hlt
xor
aas
dec
jne
and
in
out
lock
sbb
lods
subl
push
pop
dec
mov
lock
add
sahf
mov
sub
outsl
fstpt
push
and
inc
cmp
dec
cmp
push
and
arpl
fcmovnu
mov
push
inc
sub
xorl
lock
nop
dec
inc
jle
jg
add
mov
push
add
push
push
sbb
xchg
lock
mov
scas
xorb
xchg
lock
subb
jle
mov
lock
push
add
cmpsl
addb
lret
and
or
popf
rclb
or
adc
push
add
or
pusha
or
inc
shrb
outsl
or
jl
push
mov
int
inc
lock
add
push
inc
fdiv
js
addr16
filds
mov
lock
or
add
adc
xor
inc
cmp
insb
sbb
mov
mov
add
push
loope
mov
adc
sub
test
test
mov
and
dec
cs
jns
cmc
lock
mov
push
mov
add
mov
sub
bound
cmp
sahf
add
sbb
pushl
hlt
add
or
add
xor
mov
dec
add
or
scas
data16
adc
idivb
adc
sbb
adc
insl
out
insl
fists
adc
or
push
lods
movsl
pop
mov
fwait
movsl
mov
dec
lret
adc
and
adc
sub
sub
add
jne
mov
or
arpl
movsb
fcoms
sbb
add
push
mov
outsb
mov
add
jno
fwait
and
adc
and
sbbl
inc
sbb
lods
insl
dec
cmp
fisubl
sbb
mov
mov
mov
push
mov
les
stc
notb
xchg
iret
std
negl
xchg
or
xchg
shlb
inc
xor
inc
xor
add
pusha
int3
jo
adc
lods
mov
jl
sbb
sbb
add
or
divl
and
insb
pusha
adc
data16
xor
jge
ret
mov
adc
adc
out
mov
dec
or
add
add
or
add
mov
cmp
sub
adc
or
daa
cmp
jae
fwait
pop
stos
inc
or
jecxz
cmp
add
pop
sbb
in
or
mov
inc
pop
mov
sbb
sbb
fcomi
shlb
push
popf
les
and
scas
fildl
mov
add
sbb
roll
and
xor
mov
movsb
popa
lret
inc
xchg
jmp
mov
xchg
sysret
subl
push
add
and
mov
daa
inc
fistl
andb
cltd
lea
xor
insl
sub
xor
lods
bound
daa
pop
popa
je
mov
push
adc
and
out
inc
shrb
lea
fldt
adc
add
mov
or
rorl
adc
mov
outsl
and
xchg
lods
test
dec
push
add
push
xchg
aad
pop
pop
mov
jns
inc
mov
stos
or
aad
xor
mov
add
insl
sub
pop
movl
aam
stc
mov
sbb
xor
iret
arpl
lret
iret
add
js
xchg
fxch
lcall
cmpsb
pusha
inc
xchg
mov
push
adc
dec
add
sbb
sbb
jb
mov
inc
adc
fsubrs
insl
sbb
push
scas
jp
sbb
sub
mov
jecxz
sbb
fists
test
inc
mov
loopne
aaa
and
dec
xchg
add
xchg
repnz
mov
inc
sub
lock
fwait
adc
or
pop
mov
outsl
cmp
adc
sub
xlat
sub
inc
or
movsb
subb
lcall
and
scas
lahf
lock
add
adc
sbb
faddl
push
xor
inc
adc
pusha
ret
mov
fdivs
add
js
lds
out
add
insl
inc
das
jle
sub
xorb
add
xor
dec
add
in
mov
push
and
sub
sub
cmp
xor
sbb
mov
mov
push
or
or
addr16
sub
push
xor
pop
add
xor
xor
sub
xor
pop
and
and
stos
gs
and
inc
sbb
divl
enter
sub
push
sbb
xor
push
cmp
inc
sub
pop
push
jle
inc
cmp
adc
test
xchg
ss
add
inc
call
add
in
add
orb
push
xor
push
inc
in
jle
dec
test
loop
inc
call
sub
mov
mov
add
lods
loopne
movsl
popa
push
movsb
add
push
fcomp
pusha
dec
push
daa
and
add
clc
mov
ss
dec
xchg
add
notl
aam
pop
pop
mov
nop
ljmp
jbe
roll
add
mov
pop
sub
pop
mov
push
or
dec
fidivs
jo
push
push
mov
cmpsb
xor
popf
dec
dec
xchg
and
add
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
