divb
in
mov
mov
add
inc
add
add
int
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
adc
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
sbb
add
jmp
test
jne
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
repz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
pop
mov
mov
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
xchg
sbb
andl
mov
dec
lock
adc
push
cmpsl
adc
push
jge
pusha
outsl
adc
xchg
dec
mov
fcomps
sub
dec
xor
push
xor
or
sbb
mov
or
or
pop
cmpsl
push
cmp
mov
mov
aaa
ret
data16
call
and
cmp
mov
loopne
data16
sbb
inc
mov
lea
mov
adc
dec
jle
mov
sbb
mov
fadds
int3
push
iret
jbe
ret
ja
mov
sbb
xchg
clc
sbb
push
xchg
mov
roll
add
das
sbb
or
mov
lcall
mov
push
test
or
sbb
push
pop
lds
or
dec
mov
mov
aas
fadd
lods
mov
push
pop
pop
push
jno
pop
or
push
push
sbb
outsb
or
sub
shl
jg
add
add
push
push
push
mov
lock
mov
aaa
pushf
xor
cmpsb
jmp
lea
xor
push
mov
cmp
cld
or
sbb
push
clc
jge
insl
jge
mov
mov
mov
xor
mov
pop
ret
push
scas
pop
movsb
xor
ret
push
pop
jae
mov
arpl
pop
inc
sub
pusha
or
or
clc
sub
enter
sarl
in
push
fadds
je
testl
pop
adc
loopne
pop
lods
inc
test
jne
sbb
out
add
jmp
or
mov
cmp
jg
mov
cs
inc
hlt
adc
sbb
mov
pushf
aas
push
push
mov
loopne
dec
pop
mov
bound
pop
sbb
push
mov
sar
jg
push
lea
push
cmp
ja
adc
bound
add
push
mov
and
jmp
pop
clc
and
xchg
adc
sbb
add
push
xchg
or
int3
jae
ret
cmpsb
stc
call
jo
icebp
adc
cmc
cmp
jle
mov
sbbl
jecxz
js
jle
push
dec
pop
add
sub
pop
pusha
lds
xchg
cmp
add
outsb
jmp
cltd
xchg
add
push
pop
imul
ret
enter
mov
push
push
cmp
jl
cmp
jne
rorb
xlat
outsl
in
jmp
mov
push
jbe
mov
mov
shlb
daa
dec
mov
mov
or
incl
push
add
push
push
lea
mov
mov
test
pop
cmp
xor
mov
pop
cld
aam
pusha
cmpsl
stc
mov
fdivrs
cmpsl
mov
xlat
ja
xor
fsubrs
cmp
pop
leave
sbb
ret
pop
or
jge
test
jle
cmp
mov
inc
shl
cmp
adc
cmpsl
pop
mov
push
mov
dec
jecxz
movl
pop
cld
stos
jmp
push
sarl
lea
inc
xchg
je
dec
in
cwtl
pop
sub
fimull
inc
add
lcall
shrb
add
adcb
jnp
and
or
shll
lcall
cmp
push
xor
push
push
sar
push
push
adc
push
sub
cmp
jle
mov
out
push
cld
popl
xor
cmpl
je
push
cmp
cmp
shrl
push
cmp
pop
xchg
and
cmp
pop
lret
push
inc
addr16
add
jb,pt
pop
add
xchg
and
enter
ret
lea
mov
cmp
je
cmp
aaa
cmp
cmp
push
push
jg
xor
rcrb
ja
jmp
xchg
rolb
call
insb
or
cmpsb
imul
mov
or
cld
pop
repnz
cmp
jo
inc
sub
adc
add
out
ret
aad
aaa
ja
ljmp
inc
or
push
stos
incb
pop
or
cmp
inc
mov
cmc
pushl
push
lea
cmp
jne
push
push
push
push
fildl
test
js
push
mov
mov
or
jne
or
pusha
pop
pop
pop
mov
cmpsb
aad
rclb
jmp
test
push
loopne
orb
flds
jne
mov
ljmp
pop
fcompl
repz
jo
ss
lea
mov
scas
mov
out
xchg
ficompl
add
cli
add
fnsave
mov
xchg
sub
clc
push
pushf
xchg
aas
push
mov
in
imul
or
js
or
jb
mov
mov
pushf
stos
dec
in
movsb
mov
and
loope
add
js
js
aam
inc
add
inc
pop
push
ds
pusha
jo
sbb
orl
incb
stc
mov
mov
push
cmpsl
mov
xor
pop
push
mov
ss
jmp
add
xor
push
add
shl
dec
ret
inc
push
dec
daa
clc
add
scas
popf
lea
adcb
push
add
push
mov
daa
xchg
xchg
or
test
adc
in
mov
dec
pop
loopne
fidivrl
imul
insb
lea
mov
pop
inc
jne
jl
add
xchg
popa
add
lea
ret
je
lock
ljmp
nop
in
jne
in
insb
imul
mov
scas
mov
mov
push
push
pop
mov
cmp
jle
call
jo
and
xor
or
arpl
xlat
mov
mov
loop
pusha
mov
fcmovne
xor
or
push
adc
jge
cs
cmp
jg
mov
mov
cmp
mov
jbe
lods
and
mov
mov
or
push
sub
mov
push
fs
dec
or
or
lock
inc
cmpsl
jno
out
mov
mov
xor
push
out
in
cwtd
pop
xchg
sbb
dec
mov
jno
push
sbb
out
out
decb
adc
xor
aad
popf
adc
into
ljmp
test
sub
sahf
mov
lods
or
loopne
add
xchg
jbe
pop
sbb
insb
call
pop
or
cwtl
mov
xlat
jo
pop
ror
mov
in
push
push
mov
outsb
repnz
xchg
mov
les
inc
and
mov
add
sbb
push
scas
out
jae
jl
iret
andl
sbb
add
pop
adc
aam
pop
push
add
xchg
rcrl
je
ljmp
shrb
pop
jno
dec
sbb
dec
nop
and
add
mov
mov
mov
lea
mov
push
sub
or
and
push
js
and
fwait
or
fcoms
xor
popa
add
inc
adc
je
dec
lock
fldl
pushl
dec
in
loopne
in
neg
sbb
inc
inc
adc
sbbb
mov
mov
or
cmpb
fiadds
sbb
cmp
or
in
mov
insl
jp
and
outsl
xlat
stos
ret
ss
push
and
movsb
das
call
dec
push
iret
adc
or
inc
add
lahf
cmp
sbb
sbb
push
aaa
out
push
sub
jecxz
rorb
hlt
and
rcr
xchg
ret
pop
adc
loopne
jbe
fcmovnu
mov
xor
loope
aas
pop
mov
sub
or
dec
jae
mov
push
pop
push
movsl
inc
push
push
xor
inc
add
mov
xor
into
or
loopne
gs
mov
je
cld
mov
inc
into
scas
mov
or
push
cltd
push
add
mov
mov
jo
and
aas
push
mov
inc
and
and
pop
jo
add
push
mov
adc
xchg
add
and
out
aad
mov
mov
fcoms
adc
out
cmc
jle
push
push
or
mov
xor
dec
es
mov
mov
pop
xor
mov
das
xor
sbb
in
and
sbb
cmp
dec
mov
and
in
adc
out
popa
shl
in
lods
or
push
adc
inc
mov
add
push
or
andl
punpckhbw
mov
push
mov
shl
or
movb
insb
and
sbb
in
sbb
mov
sub
flds
pop
hlt
adcb
and
and
clc
mov
and
adc
push
xchg
push
push
shlb
mov
js
cmp
outsb
and
aaa
jae
sub
cmp
sbb
out
mov
sbb
rcll
xchg
into
test
orl
sbb
mov
bound
ret
in
mov
cmp
inc
xorl
aam
jge
cli
incl
mov
fadd
inc
out
add
xor
cmc
add
pushf
lock
test
add
add
xchg
lock
fildl
loopne
aam
aas
fdivs
add
jle
lock
sbb
call
add
dec
in
and
jmp
ljmp
xor
add
testb
stos
in
cld
not
sub
pop
push
movb
mov
movsb
loope
mov
adc
inc
test
movsb
jl
jp
imul
sbb
enter
ret
in
sbb
mov
neg
sbb
pop
les
ret
je
push
cmp
mov
das
fcmovnb
mov
repnz
mov
lret
cld
cwtl
or
cwtl
xor
mov
fs
sahf
or
inc
dec
nop
dec
imul
lock
xor
add
mov
test
lods
lods
enter
add
cmpsb
in
push
mov
into
cmp
fs
jecxz
aam
inc
jge
cmp
jge
shll
enter
xor
cmp
out
pushf
sbb
adc
mov
pinsrw
aas
fmull
sbb
je
mov
mov
adc
push
push
fcomps
imul
pop
stc
xor
push
loope
fsubl
stos
dec
movsl
test
and
rolb
fs
rcl
mov
jecxz
pop
xchg
or
insl
xchg
ret
je
push
xchg
xchg
and
pushf
pushf
test
xor
mov
mov
int3
movsb
jb
dec
int3
insb
and
dec
cmpsb
in
sbb
enter
mov
sbb
cmp
xor
pushf
mov
in
mov
xchg
sbb
xor
jle
pusha
sbb
push
sbb
jmp
ja
sub
mov
xor
jle
addb
and
push
jo
pusha
push
mov
ror
mov
mov
mov
jne
add
and
loope
lods
adc
push
mov
or
mov
and
push
sbb
adc
push
inc
adc
or
adcl
lcall
fdiv
test
pop
mov
pop
jle
les
popa
inc
lods
rclb
jns
sbb
ret
add
dec
cmc
popf
cmp
out
lcall
mov
fstl
loopne
je
push
mov
loop
xor
test
dec
and
push
lea
jns
fwait
push
mov
cmp
xchg
test
int3
or
loop
je
sub
mov
ret
and
push
push
int
pop
daa
je
adc
ds
cmp
daa
add
ret
jae
jae
push
adc
xchg
or
adc
cwtl
sub
lock
jne
fildl
jo
sbbb
nop
call
fstpl
push
mov
mov
pop
mov
or
add
push
loop
push
adc
xor
mov
inc
cmp
sbb
adcl
add
xchg
outsb
add
stc
mov
and
jl
mov
outsb
or
or
push
add
cmp
ret
mov
mov
push
sbbb
int
inc
adc
mov
arpl
fwait
jno
push
outsl
movsl
in
sar
sbb
jne
ror
shll
in
adc
sub
xor
adc
andl
out
jno
loopne
popl
sbb
js
les
push
mov
leave
iret
imul
pop
or
push
or
sub
out
jg
sahf
aad
fdiv
fistpl
jne
test
outsl
inc
nop
xchg
xchg
jp
ds
xchg
push
pop
push
hlt
push
addr16
xchg
test
pop
sbbl
add
push
shlb
sahf
les
loopne
xchg
pop
nopl
lea
in
loopne
mov
maskmovq
imull
sub
loopne
in
add
add
rclb
cmp
or
dec
push
movsb
xchg
js
imul
test
xor
mov
test
mov
inc
sarb
sbb
jge
cs
push
dec
sti
add
push
cmp
or
xorb
sub
sbb
and
fstpt
sbb
jle
cld
cmp
je
push
push
pop
loopne
mov
popw
push
test
ljmp
or
pop
lcall
adc
push
data16
xchg
cltd
push
pop
mov
jne
xor
xchg
add
sahf
sub
mov
andb
dec
push
sbb
hlt
push
xor
push
into
push
daa
and
bound
addb
sub
jns
in
test
xorl
int3
shl
jo
mov
cmpsl
and
pop
lcall
sub
sub
je
aas
incb
and
add
mov
push
lock
mov
loopne
rolb
dec
or
xor
scas
sub
mov
sub
push
ljmp
sub
inc
lock
mov
mov
or
push
ss
inc
lret
push
xchg
das
in
ret
ror
or
xor
mov
mov
and
adc
js
inc
pop
xor
pop
push
insb
push
daa
xlat
xor
push
dec
pusha
insb
adc
cmp
mov
and
sub
into
pusha
cmp
sarb
leave
pop
int
and
dec
sbb
pop
adc
mov
inc
addl
clc
ror
push
insl
rolb
rcll
rcrb
or
sub
test
adc
pop
push
mov
dec
pop
inc
inc
roll
push
jle
cmpsl
or
mov
orb
or
cmp
and
mov
push
enter
fdiv
xchg
mov
stos
add
xor
test
cmp
cmp
sub
repnz
push
enter
roll
push
loope
add
push
pop
xchg
sti
xorb
push
xor
xor
insl
jmp
ja
xorl
adc
std
into
adc
inc
sbb
cmp
outsl
inc
pop
lds
xor
sub
and
loopne
cmp
sub
mulb
add
or
xor
stc
pop
repnz
fs
xor
ficoml
mov
ljmp
ret
push
sbb
mov
iret
sub
sub
push
in
sub
push
mov
jns
and
sub
mov
pop
xor
fwait
xor
ret
push
fbld
shrl
push
push
shll
mov
inc
imul
inc
ds
add
test
popf
filds
inc
fiaddl
sub
add
add
and
or
push
ret
pop
xchg
popa
mov
mov
add
sbb
mov
and
bound
fsubl
push
cmp
mov
inc
pop
ret
push
je
je
gs
adc
mov
js
sub
jge
adc
je
loopne
cltd
pop
push
push
jle
adc
cltd
xor
pop
add
sub
imul
dec
call
les
int3
jne
push
sub
in
mov
repnz
out
pop
cmp
jne
fistl
jle
jecxz
and
jmp
cmp
nopl
push
mov
nop
nop
cmpsl
mov
or
loope
sahf
jge
jmp
mov
repz
xchg
js
loope
ret
rcll
lods
inc
addb
stos
and
and
push
popf
mov
sub
mov
adc
sbb
pop
mov
leave
ja
pop
loop
movups
es
cwtl
pop
popf
in
lock
mov
lods
cs
loope
dec
sub
rorb
test
shlb
and
rclb
ret
fildl
or
xor
testb
push
pop
shl
and
sub
les
js
xchg
inc
out
pushf
inc
xchg
movsb
xchg
in
enter
ljmp
aaa
arpl
pop
out
jne
or
mov
or
push
lea
jo
test
xor
cs
fmull
pop
push
inc
fdivr
mov
dec
out
add
shlb
mov
into
call
and
jne
cmp
jo
or
xchg
cmp
ret
xchg
add
xor
call
std
mov
not
add
decb
lahf
je
xchg
sarb
inc
testb
fiaddl
push
out
inc
out
xchg
inc
loopne
cld
je
push
jns
nop
fnstenv
imul
lds
adc
mov
leave
xchg
mov
lods
push
or
xchg
clc
or
mov
insl
inc
push
xor
jg
mov
or
imul
enter
inc
int3
add
or
rorb
movsb
push
pop
mov
or
cmpsb
stos
fidivrl
push
loopne
insl
adc
mov
mov
test
jmp
es
adc
dec
dec
je
sub
fisttps
pop
jmp
jge
imul
push
jmp
adc
pusha
jmp
cli
mov
lock
sbb
mov
cmp
xchg
data16
pusha
or
repz
add
cmp
jmp
adc
sbb
inc
inc
mov
mov
xchg
out
orl
mov
js
mov
sbbb
sarl
push
inc
inc
cmp
out
cmp
push
cmp
jle
push
mov
out
repz
sbb
jl
push
xor
xchg
stos
orb
jnp
add
and
cmp
cld
out
jle
cltd
or
mov
fiaddl
je
filds
push
iret
ja
and
push
add
loope
jne
nop
fnsave
add
sbb
xor
fstps
out
roll
add
or
mov
push
xchg
clc
push
pop
add
cmpl
loopne
jne
mov
test
int3
sub
add
insl
mov
sub
test
into
jle
sahf
push
popf
and
cltd
cwtl
nop
xor
pop
mov
fcoms
lock
jp
insl
les
sub
push
lock
jns
mul
dec
sahf
stc
into
inc
jbe
push
add
jmp
lods
test
add
add
fmul
pop
sub
std
xchg
xchg
mov
push
xor
add
call
les
sub
inc
movsl
lds
js
push
or
xlat
cmc
mov
sub
scas
pop
xchg
or
or
shll
call
fadds
test
jmp
jge
lods
pop
data16
subb
filds
pop
fildl
in
stos
push
pusha
mov
in
mov
xchg
lock
push
jecxz
adc
test
outsb
mov
fsubl
aas
add
popa
pop
mov
or
pop
mov
or
popa
xchg
mov
pushf
mov
mov
es
and
xor
mov
scas
mov
sub
scas
push
movsl
in
sbb
sbb
mov
or
add
xchg
out
ljmp
inc
loope
mov
push
push
add
stos
xor
mov
push
call
and
in
xor
sbb
je
push
ret
fs
or
inc
pushf
bound
ror
adc
pop
call
push
inc
les
enter
or
xorb
mov
inc
jl
subl
subb
dec
jo
xchg
pop
insb
adc
and
adc
xchg
jmp
inc
adc
cmovns
and
mov
and
in
jge
xchg
popf
js
add
mov
push
jl
loope
adc
mov
mov
rolb
mov
and
in
es
mov
les
fsub
loopne
pusha
test
pushf
sub
mov
push
jl
xchg
push
jo
shrb
adc
jg
cmp
je
pushl
call
sbb
cmp
call
push
sbb
push
ret
push
push
inc
push
shlb
mov
cs
mov
mov
cmpsb
jnp
mov
cmp
sbb
or
mov
enter
add
loopne
push
clts
gs
sbb
xor
push
add
xor
es
xor
xchg
cmp
je
push
add
or
add
cld
mov
ret
clc
js
jmp
sti
jle
push
jmp
flds
mov
cmp
jg
mov
jg
fists
mov
jmp
daa
sub
sbb
adc
jb
out
or
sbb
repnz
fnstcw
mov
add
in
aas
mov
add
mov
insl
cmpsb
nop
imul
sbb
sbb
sub
pop
mov
clc
outsb
sub
int3
subl
sbb
sbb
jne
inc
xor
sub
pop
jmp
mov
push
xor
dec
sbb
xorb
and
test
sbb
lods
xor
mov
idiv
inc
adc
clc
lret
inc
hlt
lea
cmp
jae
mov
dec
hlt
incl
xor
inc
add
in
in
jne
ds
jmp
lea
pop
jb
cmp
in
loop
jge
jle
in
sub
adc
scas
pop
clc
add
dec
pop
rorl
jg
and
push
mov
pushf
mov
xchg
push
adc
inc
cmp
sti
sti
cmp
ret
sbb
divb
add
mov
hlt
data16
push
pop
xor
int3
add
lea
sarb
pop
movsb
adc
push
push
in
pop
push
push
lea
nop
adc
dec
scas
mov
add
hlt
inc
add
shlw
mov
mov
mov
push
mov
ret
xchg
xorb
roll
ret
cmp
push
insb
clc
jae
repz
test
js
in
dec
hlt
jg
fcomip
xchg
imul
push
sub
addb
jmp
cmp
jge
mov
into
jae
xor
add
pop
sbb
dec
inc
lcall
insb
dec
inc
push
push
mov
fdivs
cmp
shlb
adc
test
xchg
jns
mov
xor
ja
jl
rep
mov
push
jmp
xchg
jne
push
fnstcw
jp
call
jno
or
xor
fnstenv
dec
add
add
mov
mov
pop
inc
test
mov
push
xchg
dec
fimuls
mov
jo
popf
xchg
mov
popf
aaa
mov
mov
movsl
lods
stos
outsb
adcb
cmpsl
pop
mov
scas
insl
jo
lds
and
push
pop
out
mov
or
cli
rep
aam
xor
lret
cmp
cmp
jno
ja
sbb
or
fnstsw
hlt
sub
jmp
movl
loopne,pt
or
sbb
pop
pop
js
mov
fs
out
add
popf
neg
push
mov
or
ljmp
je
push
and
adc
pop
xor
ss
pop
cmp
jae
jb
scas
xchg
nop
add
scas
shl
adc
and
pusha
cmc
inc
mov
je
std
lcall
lods
add
cmp
jne
cmp
je
pushl
movb
in
aaa
lret
ds
push
push
push
and
in
inc
push
test
cmp
xor
cs
or
mov
dec
pushf
sbb
push
fwait
cld
pop
aam
or
setne
shlb
sahf
js
ret
jne
outsb
pop
sbb
call
adc
pop
js,pt
test
xchg
jo
jg
mov
jbe
and
popf
or
mov
std
push
mov
sbb
insl
sub
cmp
adc
adc
dec
inc
and
dec
or
inc
loop
cmp
jmp
mov
or
or
cs
lock
cbtw
add
xor
adc
test
ret
jmp
mov
fbld
cmp
xchg
jl
cmp
jne
push
enter
je
sbb
cmp
push
add
enter
add
fisubs
fcompl
rolb
mov
xor
push
and
pop
add
sbb
das
call
add
fiadds
insb
jo
push
test
push
pop
adc
sbbb
enter
in
dec
add
inc
push
inc
inc
test
cmp
push
inc
pop
aaa
or
rcrl
lock
mov
sub
bound
std
cli
mov
or
aas
sub
pop
mov
lock
mov
ret
insb
cld
cmp
popa
daa
mov
lea
jbe
mov
push
shlb
mov
pop
push
testl
sub
add
push
mov
mov
mov
test
dec
addr16
or
add
jp
xlat
push
cmp
es
adc
lock
arpl
adc
dec
test
jecxz
and
dec
dec
adc
mov
pop
aas
dec
or
sub
or
aad
in
mov
sbb
push
sbb
add
test
adc
or
lods
xor
inc
mov
dec
pop
push
sbb
daa
mov
push
nop
xchg
sub
incl
insb
fdivrs
dec
sub
ds
pop
fldt
dec
test
jb
sub
imul
rcl
in
nop
adc
dec
lds
mov
dec
mov
push
sbb
or
inc
xchg
call
pop
cmpsb
mov
adcl
cmp
test
dec
test
test
sbb
loop
lret
cmpsl
push
and
flds
sbb
test
inc
push
inc
repnz
dec
xor
pop
fisubl
sbbb
lock
xor
lock
clc
inc
subl
inc
or
ret
fxam
fistpl
mov
mov
mov
jmp
lcall
inc
enter
or
andb
call
in
xor
stc
dec
dec
dec
dec
jp
and
mov
inc
data16
rcl
ds
mov
jne
sub
dec
mov
xorl
push
mov
or
or
or
adc
inc
stc
mov
hlt
inc
leave
jae
jno
dec
mov
mov
leave
dec
test
out
add
push
push
pushf
sub
add
lods
sub
test
mov
xchg
cmp
cwtl
lret
xor
cwtl
push
lock
loopne
rolb
mov
cmc
outsl
test
adc
leave
sub
push
adc
push
leave
mov
xchg
lret
adc
adc
cmpl
mov
add
or
and
jb
imul
stos
push
adc
pop
or
loopne
in
sbb
cmp
sbb
add
or
or
sahf
shlb
or
lea
pop
push
daa
adc
xchg
adc
mov
lea
vprotq
ja
cmp
sbb
or
and
jl
and
and
fwait
cmp
add
xchg
dec
js
push
push
mov
sub
jbe
test
shll
or
push
xchg
push
jge
icebp
inc
push
mov
sbb
dec
enter
pop
fimull
xchg
idiv
movups
lahf
out
outsl
or
je
cmp
popf
cmpl
and
ret
push
cmp
mov
jo
or
pop
negl
sbb
add
add
cmp
add
push
enter
adc
sbb
out
test
mov
fs
inc
rclb
dec
out
arpl
or
push
push
jbe
loop
mul
fstpt
pop
cmp
fcomip
ja
bound
add
pop
dec
je
into
adc
in
int3
and
push
push
imul
ss
dec
xchg
jmp
cmp
mov
xor
jp
jmp
pop
addb
jecxz
jne
ljmp
pop
pop
popa
shll
push
add
push
das
add
mov
xor
outsb
outsb
jmp
mov
lock
loopne
inc
push
clc
mov
mov
xchg
sbb
out
or
pop
push
mov
mov
lahf
mov
aad
add
popa
mov
add
loope
push
xor
push
push
sub
jo
adc
shl
js
or
mov
in
jno
adc
xor
mov
jmp
mov
shlb
jp
mov
push
cmp
je
cmp
pop
jle
fs
sbb
leave
adc
cli
mov
fucomip
out
sbb
fstpl
imul
rcr
sbb
and
jmp
mov
je
inc
jmp
xchg
sbb
push
mov
jmp
bound
out
pop
sub
push
pop
sahf
out
sahf
pushf
cmpsl
rcr
jne
insl
mov
mov
mov
add
data16
push
and
roll
push
inc
sbb
pop
push
xchg
pusha
lea
jno
scas
mov
add
sub
sbb
dec
movb
sub
out
repnz
sbb
les
mov
ljmp
inc
push
mov
mov
pop
push
lea
push
push
lea
xor
xchg
mov
pop
inc
cmpsb
add
cmp
adc
mov
inc
adc
cltd
lahf
test
and
pop
les
movl
subl
xor
adc
cmp
jnp
lea
sbb
std
cwtl
push
test
sub
mov
pop
rcrb
aam
or
mov
mov
or
mov
out
add
push
popf
push
xchg
adc
lods
in
test
push
cmp
or
add
insl
movsl
or
xor
push
adc
pushf
push
aas
and
in
movl
loopne
cmp
jle
ss
loope
xchg
fisubs
jmp
pusha
mov
shll
andl
insb
cmpsl
mov
mov
cmpsl
add
aas
sub
sbb
add
mov
icebp
jmp
mov
icebp
xor
loopne
mov
repz
in
icebp
lods
adc
xchg
scas
call
in
jne
repnz
cmp
mov
ljmp
xorl
sub
xchg
sub
add
sbb
notb
sbb
inc
push
mov
sbb
push
push
push
lcall
mov
loop
mov
pushf
jl
sbb
jb
pop
rolb
mov
inc
das
mov
lea
je
repnz
jnp
js
mov
jbe
ret
int3
and
aas
sarl
mov
rclb
clc
push
add
aam
push
loopne
lds
pop
shll
test
and
push
cmp
loop
push
inc
add
inc
mov
imul
pop
lock
jl
add
jle
inc
fldt
inc
add
test
push
push
fdivr
xchg
ret
ret
iret
xchg
mov
lcall
aas
adc
repz
cmp
setno
out
jne
push
sub
xor
pop
pop
inc
adc
fdivrl
adc
shlb
iret
je
lea
push
loopne
add
rorb
into
mov
mov
std
cmp
push
sbb
cmp
jne
call
push
add
dec
ret
adc
rcll
mov
jb
imul
enter
std
jbe
mov
lock
div
add
push
dec
je
dec
push
xchg
loop
cmp
jge
fimuls
sbb
dec
sub
in
dec
dec
xchg
loopne
pop
sub
fwait
xchg
ss
cmp
push
mov
add
shrl
mov
inc
adc
dec
cmp
dec
loop
or
xor
fidivl
mov
push
cs
cli
inc
test
pop
lea
rep
out
in
push
inc
push
dec
call
and
ds
arpl
cmpsb
cmp
sbb
sbb
push
cmp
add
jp
inc
xchg
jl
xchg
pop
pop
lock
lea
and
enter
lcall
cmp
push
jl
adcb
push
idivb
imul
sub
test
ret
je
rorb
leave
adcl
scas
lock
push
push
in
sahf
sub
jae
sbb
adc
cmp
push
aaa
lods
mov
inc
pusha
fs
mov
adc
fbstp
add
adc
dec
les
cltd
in
xchg
lock
pushl
cmp
and
push
pop
test
clc
daa
xchg
pop
pop
loopne
fmull
dec
mov
in
pop
loopne
sub
mov
scas
je
dec
mov
aam
jne
pushl
sbb
inc
sbb
inc
xor
adc
fadds
je
outsl
loopne
nop
adc
pop
clc
scas
push
bound
fmuls
and
pop
cwtl
add
mov
push
add
lahf
idivl
sti
je
cmp
mov
lret
loope
sbb
jmp
jno
testb
mov
std
rorl
popa
dec
sub
in
push
cs
sub
movsb
imul
es
lock
shr
adc
push
jne
movb
add
cmp
jne
xchg
adc
mov
bound
mov
mov
xchg
jnp
notb
cmpsl
mov
dec
aas
mov
xor
shlb
out
xchg
sahf
add
test
pop
xor
sub
sub
or
rcrl
sub
add
scas
sti
clc
mov
lock
int3
mov
sub
mov
adcb
lods
dec
cmp
sbb
sbb
inc
daa
mov
es
jle
leave
xchg
lret
push
jns
inc
nop
xor
cmpsb
dec
pop
cmp
iret
push
adc
enter
loopne
cwtl
mov
pop
push
jg,pt
inc
push
add
add
cmc
std
xchg
repz
xor
cmp
in
or
adc
int3
ja
adcl
pop
xor
nop
add
mov
adc
pushf
lret
sbb
push
push
dec
mov
push
adc
ds
insb
sub
cmp
push
jg
add
dec
pop
xchg
mov
or
sahf
push
push
lret
into
shr
mov
rcll
enter
xor
mov
inc
jge
mov
es
pushf
fwait
jnp
sbb
test
add
xorb
dec
daa
mov
inc
inc
cmpsl
mov
pusha
fmull
push
lods
push
out
push
mov
lods
push
push
push
jae
adc
inc
mov
mov
enter
cltd
cli
mov
fiadds
fldl
andl
inc
add
add
xchg
pop
daa
iret
inc
xor
popa
in
ds
and
lea
sbb
lds
and
cli
dec
adc
add
push
je
or
call
add
repz
or
pop
sub
cmc
jmp
mov
add
xorl
roll
lds
adc
xor
push
repnz
cmpb
icebp
aas
aas
xor
pop
cmp
imul
pop
push
es
push
cmc
jg
jle
js
sub
sub
push
push
mov
add
jmp
adc
sbb
and
ljmp
jmp
or
js
push
orl
push
cli
or
push
icebp
pop
or
sub
dec
adc
add
or
cmp
adc
pop
push
lods
in
push
popa
push
sbb
mov
rcll
mov
xor
or
cmp
out
push
out
movsb
arpl
xchg
adc
clc
orl
xor
xor
pop
add
xor
cltd
mov
das
inc
and
lea
push
decl
or
adc
sbb
push
scas
rcrl
mov
jle
dec
inc
cmp
jge
mov
decb
call
fcoms
mov
ret
add
and
xor
idiv
lcall
or
push
jp
fstpt
mov
adc
addl
mov
mov
stos
out
aas
xor
or
push
mov
add
stos
movsl
test
or
out
jmp
fstpl
push
pop
insb
xor
rcrb
pop
sti
sub
clc
je
out
movsb
mov
inc
lcall
test
test
into
jp
xor
popa
jo
out
test
dec
daa
pusha
js
xlat
pop
loopne
out
sbb
dec
fs
or
xchg
daa
cld
xchg
scas
arpl
mov
test
mov
lahf
xor
mov
movb
sbb
dec
lea
addr16
aaa
inc
mov
mov
je
fists
mov
dec
nop
or
jmp
jge
jmp
mov
hlt
fildl
jg
std
fisttpll
jns
faddl
push
or
enter
addl
fdivrp
mov
sub
mov
lea
test
mov
inc
lock
mov
pop
jl
jmp
mov
push
insl
cmp
cmpb
or
clc
fidivl
jmp
push
jo
sbb
xchg
cli
pushf
ja
jge
push
pop
mov
je
jle
pop
movb
push
or
mov
dec
les
je
and
popf
pop
push
pop
add
mov
stos
pop
pop
aas
cld
inc
fcoms
clc
lea
outsl
xlat
and
cmpsl
je
or
lods
arpl
pop
push
gs
lret
je
mov
pushf
or
pop
add
and
mov
push
jns
les
aad
dec
fcoml
pop
pop
into
pop
leave
test
push
dec
mov
stos
cmpl
stos
sub
jnp
mov
aam
pop
and
imul
in
add
push
sub
repnz
xor
insb
sbb
adc
loope
pop
iret
pusha
sbb
jns
sbb
mov
mov
inc
mov
jo
jne
sti
mov
push
inc
push
shrb
push
in
push
fbstp
push
xor
pushf
jo
push
mov
push
mov
ret
std
sub
mov
push
xchg
push
push
adc
add
lods
pop
pop
popf
or
mov
mov
lea
push
push
adc
inc
adc
push
imul
inc
xor
setp
cmp
imul
push
inc
inc
mov
mov
adc
xchg
popf
int
inc
es
dec
jge
dec
mov
clc
push
sbb
shlb
mov
mov
push
pop
shr
add
xor
pop
pop
fbld
rolb
sbb
xchg
rorl
mov
mov
and
inc
cli
cmpsb
add
cmp
lock
sub
and
and
mov
mov
pop
mov
les
sbb
rol
fistl
push
xor
data16
shr
push
out
inc
push
push
add
push
sar
das
sarb
xchg
roll
cmp
lcall
add
je
xor
dec
adc
data16
push
lea
push
add
aaa
subb
jo
clc
jle
je
push
loope
pop
pop
cmp
movsb
imul
dec
in
add
xor
dec
mov
lahf
mov
adc
repz
adc
call
shrl
imul
cmp
in
dec
arpl
xchg
add
shrl
inc
test
or
mov
das
push
jl
pop
jb
add
cmp
or
out
pop
pop
incb
mov
inc
test
jne
sub
pop
jmp
lcall
sahf
loopne
clc
lret
mov
or
mov
pop
jmp
jp
mov
jae
stc
mov
adc
xor
dec
in
enter
aas
jmp
test
enter
shrb
push
jnp
call
movl
jbe
add
mov
sub
mov
push
sbbl
dec
or
aas
into
xchg
xchg
adc
mov
jo
add
jmp
xchg
xor
add
cs
mov
inc
add
add
das
fdivl
push
testb
and
xchg
jne
pop
aaa
pop
jg
cwtl
leave
sbb
adc
in
add
xor
xchg
jmp
mov
iret
jmp
js
fbstp
nop
lret
in
enter
xchg
fmuls
ss
xchg
cmp
dec
jb
push
aam
dec
out
inc
add
or
pushl
dec
incb
mov
loopne
int3
add
jne
add
cmp
rorb
sbb
es
popf
sbb
sti
push
les
push
stos
test
add
in
std
push
pop
call
jmp
pop
loope
mov
sbb
iret
aaa
xchg
addr16
push
in
and
push
mov
nop
dec
test
push
sbb
push
add
jne
mov
pusha
das
call
addl
adc
push
pop
xchg
loope
in
or
in
adc
push
xchg
sti
pop
push
push
outsl
adc
xor
add
jnp
mov
mov
mov
mov
jb
or
nop
test
sub
add
push
xor
pop
movsb
aad
sbb
test
sub
push
lods
and
test
test
mov
inc
or
inc
jne
xor
push
xchg
pop
pushl
push
lret
jmp
scas
mov
loopne
arpl
std
scas
xor
dec
cmp
mov
sbb
out
addr16
ret
je
add
out
mov
test
cmp
push
dec
mov
mov
xor
and
sub
mov
mov
lcall
dec
add
push
inc
pusha
inc
xor
movsl
imul
shlb
mov
or
fmulp
js
out
std
cmp
jge
mov
mov
mov
cmp
sbbb
ss
or
push
pusha
jle
call
sub
fdivrs
push
push
sahf
or
fsubr
sbb
lcall
fcoms
out
mov
and
mov
sbb
mov
dec
fisttps
dec
dec
mov
cmp
xchg
iret
andb
add
jo
sub
cld
inc
cmp
sete
adc
loope
adcb
inc
sbb
adcl
push
mov
mov
pushf
in
mov
and
inc
jno
dec
out
pop
shrb
sbb
sbb
or
jno
adc
or
add
mov
bnd
xor
popf
push
shl
loopne
je
or
add
loope
icebp
int3
pop
xor
loopne
das
pop
push
mov
js
add
lods
pop
jns
imul
dec
sti
pusha
pusha
pop
lock
dec
lock
mov
cmp
loope
jno
adcb
pop
mov
adc
aad
or
cli
and
adc
sub
aad
jnp
or
fsts
ss
sahf
push
mov
fdivr
or
je
sub
daa
push
sub
andl
push
or
mov
xor
add
loopne
pusha
shr
add
mull
dec
and
mov
sbbl
pop
sub
sbb
sbb
pop
adc
pop
les
mov
fdivl
adc
mov
or
div
or
in
sub
mov
mov
lds
jns
sbb
lock
and
mov
clc
mov
cmp
push
mov
or
stos
and
sbb
xchg
pop
fists
pop
jle
out
enter
or
roll
jge
ss
adc
dec
or
inc
addl
cmp
push
popa
and
je
mov
popa
xchg
or
aaa
jae
aam
adc
inc
dec
wrmsr
lock
aas
call
inc
aam
sub
push
shlb
leave
jmp
in
adc
inc
cmpsl
fdiv
stos
adc
mov
stos
inc
jmp
xchg
cmp
xor
cld
cld
nop
test
pop
hlt
mov
pop
hlt
add
xor
pop
pop
pop
lods
sub
decl
add
das
rorl
sti
add
lea
jle
xchg
mov
add
fdivr
sub
lock
dec
call
add
mov
out
sarb
cmp
jae
hlt
shr
fiadds
pop
mov
add
sub
add
movsl
fstp
jl
into
push
push
add
push
jne
pop
mov
or
out
rorl
dec
setle
adc
sub
add
outsb
or
xorb
jo
inc
add
test
hlt
push
loopne
xorb
fstpt
ja
pop
dec
add
pop
clc
jg
mov
cmpsb
add
xor
push
jb
mov
push
jb
loopne
rorb
add
mov
lsl
pop
mov
or
jo
cmpl
xorb
pop
movsl
sbbl
incl
cmp
sarb
outsl
xor
pop
or
jg
jbe
movzwl
ret
inc
arpl
push
inc
jmp
movsb
ljmp
inc
add
jecxz
adc
dec
push
bound
push
cmp
insb
inc
pop
jbe
pop
push
push
cmovge
or
sbb
dec
adc
add
xchg
and
fs
xor
add
add
in
ret
inc
and
push
fisttps
in
rolb
pop
fs
jl
pop
mov
xor
outsl
xchg
or
test
sub
cmp
push
ljmp
adc
clc
jbe
jae
lret
push
add
xor
add
mov
aas
insl
cld
jbe
adc
mov
sub
sub
imul
ljmp
and
push
mov
ret
lcall
push
push
push
mov
cmp
cmp
or
lea
andl
mov
movl
sub
cmp
out
dec
movsb
addr16
movl
jp
cmp
xchg
dec
sub
pop
push
fwait
inc
mov
andl
inc
jb
sarb
hlt
xor
xor
call
push
les
cmp
mov
add
cmp
inc
pop
fiaddl
mov
and
outsl
popa
fsubrl
repnz
pop
js
jnp
adcb
pop
cmc
xor
mov
je
ret
xchg
cmc
je
jno
jbe
xchg
pop
cmp
sbb
lock
push
or
mov
jmp
mov
sbb
inc
pop
fcoml
ja
push
push
adc
adc
or
cmp
pop
test
imul
jmp
rcl
aad
jb
xor
std
dec
shrl
inc
aam
sbb
add
xchg
pop
mov
cltd
out
mov
movsb
or
mov
in
ret
fidivs
adc
dec
mov
ret
dec
jns
leave
sub
dec
cld
add
pop
mov
xor
fimull
adc
das
es
and
mov
jg
inc
lods
xor
mov
sub
mov
sarb
inc
psubsw
jge
push
cmp
lret
dec
mov
adc
sbb
js
xlat
xchg
push
add
pop
add
cmp
decb
mov
mov
adcb
xchg
or
test
add
sbb
ret
mov
mov
ja
adc
cli
jb
sbb
and
mov
jnp
push
pop
pop
std
sbb
mov
xchg
dec
sbb
fstps
push
insb
xor
adc
mov
xchg
dec
sbb
xor
in
mov
or
sbbb
mov
mov
int
and
sub
cli
add
mov
je
test
lods
lahf
inc
sbb
sbb
jo
sar
into
out
notl
mov
adc
mov
fwait
in
ret
or
in
cmp
add
popf
andb
inc
lock
jbe
loope
aad
jl
in
ffree
and
xor
xchg
test
xchg
fdivrl
cmpsb
adc
test
and
and
add
push
mov
ja
jne
xchg
push
xchg
add
mov
enter
cmp
mov
adcb
jbe
daa
cmp
sub
mov
inc
jo
mov
mov
loope
adc
dec
lock
add
or
mov
pop
mov
jae
dec
or
daa
xorb
sbb
fstpl
lea
or
popa
ret
pop
ret
test
add
dec
sub
and
int
adc
cmp
lcall
mov
push
sub
lret
rcll
arpl
lods
sub
testl
mov
mov
lahf
inc
lea
aas
xchg
xor
ret
and
or
cltd
sti
sbb
mov
mov
pop
add
js
adc
jae
ljmp
dec
and
mov
fidivl
and
je
mov
dec
jne
jo
movsb
jge
sub
push
je
hlt
hlt
and
aam
mov
jno
addr16
xchg
adc
mov
fldl
cltd
push
mov
adc
xchg
shll
sar
mov
popa
jmp
daa
mov
lea
shll
or
jl
movsb
shlb
push
scas
sbb
mov
adc
mov
dec
fbstp
fidivl
or
mov
test
xor
jl
and
jnp
sbb
mov
inc
dec
lock
das
jb
orb
in
sbb
and
or
push
pop
pusha
dec
xchg
push
add
in
cmp
push
mov
cmp
imull
enter
loopne
test
or
mov
sbb
pop
mov
inc
xchg
jb
insb
es
xor
add
sbb
in
mov
mov
insb
mov
movzwl
mov
pop
pop
mov
loop
sub
push
sub
stc
fcomps
les
cmp
test
int3
cmpsl
data16
mov
test
lods
push
jp
arpl
leave
xchg
rorl
or
xchg
fsts
mov
lock
jle
adc
stos
aaa
aam
mov
int3
add
test
std
imul
arpl
pop
mov
ret
xchg
jae
add
pop
mov
cmp
xchg
adc
jb
orb
loopne
pushf
fdivrs
fbld
enter
adc
adcb
popa
nop
adc
ret
cmp
add
lea
movsl
pop
fcmovnbe
mov
insl
and
not
sbb
mov
cmp
push
add
or
loop
add
sub
rorb
adc
in
xlat
ret
xor
add
add
cmp
xlat
mov
call
cmc
mov
inc
mov
popf
aaa
push
pop
sbb
sub
cli
adc
xor
sahf
not
add
and
mov
mov
sbb
mov
sub
les
rolb
je
cld
in
lea
leave
dec
ja
xchg
push
adc
clc
and
mov
add
inc
out
xor
das
ss
mov
ret
xchg
insl
pop
add
mov
ss
or
sbb
adc
push
mov
js
lea
jmp
cmp
shrb
dec
add
ror
mov
mov
out
lret
test
mov
xchg
or
pusha
xor
aam
jmp
add
imul
loop
andl
add
in
inc
lret
and
sub
xor
pop
sahf
cmpsb
push
fisttps
into
mov
jmp
gs
fiadds
faddl
xor
imul
push
pop
xor
xchg
inc
rolb
clc
push
adc
shl
push
cs
xchg
fwait
push
fisubs
adc
jecxz
rcrb
mov
sahf
pop
dec
adc
orl
push
dec
lea
pusha
call
pop
insl
xchg
adc
mov
rcll
or
pop
mov
and
push
adc
movsl
or
sbb
push
pop
sub
scas
mov
xor
mov
mov
pop
cltd
sti
push
xor
movsb
nop
insb
repnz
ret
in
sub
into
push
sub
inc
or
push
cmp
test
add
push
cmpsl
mov
rol
push
fisubl
sbb
push
jae
loopne
mov
push
scas
loopne
and
push
fcomps
add
fnstenv
pop
loope
add
js
aaa
inc
jle
and
andl
adc
test
popa
imull
cmpsl
or
mov
aam
cmp
dec
loopne
pop
insl
je
push
test
imul
in
cli
ret
push
sub
stos
je
pop
push
jmp
push
call
inc
cmc
lods
xor
cld
xor
sbb
jnp
and
or
sbb
sbb
stc
divb
inc
cs
cmp
rcrb
mov
jae
mov
push
xchg
jne
push
pop
cmp
je
notl
orl
mov
movsb
andb
cmp
and
repz
shrb
dec
orb
movsl
rorb
jns
cmp
scas
cmp
xor
sbb
sbb
testl
aam
push
lea
lea
sub
add
or
das
cmp
xchg
sub
mov
stos
xor
add
mov
es
pop
pop
push
push
enter
popa
fimull
push
sbb
testb
mov
nopl
in
mov
or
sub
mov
scas
roll
inc
jge
sub
adc
push
inc
and
sub
xor
sbb
aam
sbb
das
xchg
aam
jp
std
xor
das
jge,pn
addl
icebp
inc
test
xorb
cmpsl
sbb
int3
xor
je
push
rorb
out
in
cmp
push
push
push
xor
mov
push
sub
adc
pop
insl
fdivr
rolb
mov
or
sub
pop
xchg
xor
sub
pop
sbb
call
stc
sub
or
clc
mov
mov
mov
mov
lock
add
pop
stc
xor
in
sub
pop
dec
cmp
test
add
pop
xchg
cmp
add
mov
add
xchg
bound
mov
add
or
lahf
pop
inc
sbb
leave
mov
in
or
push
add
sbb
inc
pushf
les
jle
lea
pop
and
fadds
incl
fdivr
inc
in
push
or
js
jl
rol
out
or
jl
push
cwtl
lock
cmpb
subb
ror
sbb
in
out
out
lea
lods
leave
jne
pop
or
mov
mov
mov
loope
ljmp
cmp
mov
mov
jbe
mov
inc
xorl
cs
jb
mov
cmp
mov
int3
jo
xchg
adc
jge
and
movb
int3
or
sub
push
xchg
and
xchg
add
xchg
icebp
repnz
xchg
int3
push
push
ja
push
xrelease
je
mov
xor
xchg
fnsave
dec
push
push
pushw
mov
das
add
xchg
lock
divl
in
loopne
push
test
enter
loopne
jne
inc
clc
add
inc
mov
popa
xorl
out
movsl
pusha
cmpb
pop
push
mov
mov
sub
dec
xchg
bound
lret
cwtl
xor
aas
mov
push
sub
inc
pop
lods
adc
pop
push
jne
lcall
push
and
add
mov
xchg
aam
add
adc
sbb
add
icebp
mov
push
int3
and
jo
mov
das
les
cmp
into
push
dec
hlt
sub
push
xor
xchg
insb
or
jno
je
push
in
push
sbb
or
je
and
push
add
cmpsl
rclb
cli
xor
sbb
iret
clc
wrmsr
call
fnstenv
add
jb
inc
fcoms
inc
add
mov
in
and
mov
or
scas
ret
xorl
out
adc
shl
push
push
iret
mov
xor
int
cmp
or
pop
jo
or
enter
cwtl
mov
dec
pusha
sbb
iret
sldt
pop
jp
lcall
mov
cmpb
pusha
hlt
or
push
inc
inc
and
movsl
loop
cmp
xchg
push
or
adc
fmulp
push
ja
adc
ljmp
pop
jecxz
add
sbb
fdivr
ret
sub
iret
xlat
in
nop
ficoms
out
fisttps
xorl
fs
iret
insl
mov
test
pop
push
hlt
mov
push
mov
imul
push
mov
test
pop
add
ret
dec
pop
and
add
push
pop
adc
jle
shlb
fcmovu
bound
cmp
cmp
jmp
out
push
jmp
and
dec
xorps
je
pop
sbb
mov
cmp
sub
aad
popl
mov
sti
lea
push
lea
push
inc
push
pop
movl
unpcklps
add
aam
fimull
outsb
cli
mov
lret
cmp
jl
mov
dec
hlt
int3
xor
sarl
sbb
sub
jle
xor
mov
icebp
jne
jecxz
push
push
sar
jecxz
add
push
ss
out
je
stos
mov
cld
es
dec
cmp
je
sub
loopne
dec
and
push
push
and
xor
in
pop
fucomip
dec
loope
cltd
sub
dec
push
flds
adc
push
sar
sub
or
pop
in
imul
pop
adc
imul
test
fldcw
fisttps
push
sbb
out
push
dec
or
in
out
scas
add
xor
xchg
xor
inc
cmp
push
cltd
mov
fs
clc
imul
adc
adc
in
adc
xchg
std
mov
xchg
outsb
sbb
mov
pop
mov
push
and
cmp
sub
ja
mov
loopne
jmp
pushf
faddl
and
ret
add
xchg
je
scas
inc
sub
rol
add
insl
dec
adc
push
add
inc
push
paddb
ret
in
nop
cmp
jecxz
sbb
add
mov
mov
cmp
pop
or
daa
loop
enter
pop
xchg
loopne
js
inc
cmp
rclb
es
cli
shrb
sub
in
adc
xorb
add
xor
fisubl
enter
add
add
jecxz
push
mov
fdivrl
lock
adc
jno
xorb
add
or
adc
fadds
in
icebp
hlt
fdivs
push
loop
test
or
adc
inc
cmp
pop
cwtl
ja
mov
push
je
andb
push
shrl
or
fisubl
ret
adc
add
cmp
addr16
cmp
fistps
or
lcall
push
ds
and
leave
add
fdivrl
subps
outsl
mov
mov
pop
cmp
or
cmp
stos
push
or
inc
int3
ljmp
test
or
lock
sbb
adc
jne
ds
hlt
pop
adc
sub
movsb
aaa
enter
cmp
or
into
adc
sub
mov
hlt
dec
pop
or
cmp
mov
faddp
jmp
sub
push
mov
mov
mov
cli
push
inc
or
jno
ds
jo
negb
inc
cmp
jae
add
sub
push
pop
mov
inc
and
pop
or
sub
ret
and
repnz
mov
dec
or
inc
or
or
xor
mov
in
pop
in
add
push
pusha
dec
push
xchg
cmpsl
cwtl
daa
jge
sub
push
in
sub
or
popa
es
jo
push
mov
cmp
je
ret
sbb
xor
inc
shlb
jmp
sti
je
lods
ret
adc
mov
add
add
les
movsl
sub
push
adc
inc
push
jl
in
jo
jbe
sub
dec
jmp
jge
test
test
pop
push
pop
pop
add
into
cmc
iret
sub
sbb
and
lcall
xchg
repz
push
test
pop
gs
add
mov
pushf
movb
subl
mov
pop
bound
inc
sbb
jle
dec
mov
add
mov
add
mov
adc
ficoml
add
push
popl
pop
xchg
rolb
out
jne
enter
add
push
push
mov
pushf
mov
add
pop
push
cmp
sbb
xorl
mov
mov
mov
bound
sbb
or
call
adc
xchg
enter
aas
movsb
pushl
xchg
cmpsl
xchg
cltd
loop
test
loope
in
jno
xorl
in
jnp
or
jns
jbe
fwait
mov
ja
dec
pop
pop
sbb
jne
pop
test
cwtl
push
push
xchg
or
mov
inc
fs
pop
mov
clc
xchg
shl
add
xorl
lods
inc
and
mov
sub
and
sub
xchg
pop
inc
lret
fdivrs
add
jbe
js
mov
cmp
sbb
pop
add
mov
add
mov
arpl
lret
movsl
sbb
in
adc
aam
sbb
dec
js
jl
subl
pop
push
xor
inc
add
lds
das
push
adc
in
aad
xchg
push
inc
pop
jg
inc
das
je
pop
stos
or
push
dec
cmp
adc
js
xchg
in
jnp
pop
sub
mov
push
cmp
popf
outsb
pop
fs
cmp
sub
dec
sbb
nop
jmp
dec
arpl
xor
leave
ret
push
jl
fs
repnz
pushf
lret
or
test
jne
bound
mov
rol
fldl
or
je
orl
push
jae
add
pop
or
push
imul
ljmp
mov
orl
add
fs
cmpsl
and
dec
ja
inc
ret
shll
inc
sub
or
fdivp
mov
popf
add
mov
dec
lds
cmp
mov
jnp
aas
sub
xorl
push
adc
add
cltd
push
jb
mov
popf
dec
fistpl
and
mov
push
sub
rdmsr
dec
jns
adc
cld
lea
mov
cmp
push
add
push
test
xor
mov
xlat
lahf
sub
sbb
dec
mov
and
sub
and
xor
adc
xor
sbb
adc
das
mov
mov
insl
push
movsl
sub
stos
or
push
imul
aad
cmp
iret
push
pop
add
lea
cmp
fcompl
mov
pop
xchg
add
ja
arpl
out
cmc
xor
int
xchg
xor
and
adc
repnz
or
push
and
pop
cmp
loopne
rorb
or
sub
fdivrs
rcll
sub
dec
sub
leave
push
xorl
pop
sahf
pop
ljmp
xchg
rclb
sub
pop
movl
dec
xor
inc
sub
or
sub
sahf
fadds
push
cmp
sbb
movsl
add
sbb
pop
sbb
icebp
dec
rcll
jae
mov
inc
and
daa
das
mov
pushf
je
or
cmp
and
or
or
xor
cmp
sahf
js
push
or
inc
dec
push
jecxz
pop
outsl
fcmovne
mov
mov
push
addr16
add
in
cmp
mov
rcll
xchg
insl
jno
adc
sub
mov
loop
mov
decl
lock
dec
and
inc
or
push
or
fnsave
sub
pop
and
mov
inc
and
add
mov
push
or
loop
aas
mov
pop
xchg
int
pop
push
lock
jb
xorl
mov
sbb
sbb
in
outsb
sbb
mov
xorl
xor
sti
faddp
nop
mov
mov
mov
mov
or
inc
and
mov
lcall
xchg
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
adc
and
inc
lahf
lods
mov
mov
jmp
mov
add
aad
sub
pop
mov
and
das
pushl
mov
aaa
adc
and
lock
lods
adc
fnsave
addr16
push
cmp
and
jae
ret
inc
inc
test
clc
sbb
push
aad
push
loopne
js
les
nop
push
inc
mov
pop
inc
sub
jle
cld
xchg
jbe
mov
addr16
and
ret
cmpsl
ja
push
xor
or
test
mov
and
rorb
mov
in
test
sbb
pop
into
adc
js
pop
lea
sbbl
sbb
sar
js
loop
insb
cmp
mov
lock
test
lea
jae
andl
xchg
xchg
pop
imul
add
xor
jns
test
dec
hlt
add
push
xor
fisubrs
ret
dec
pushl
lcall
and
xorl
imul
bound
enter
rclb
push
cmpb
xor
out
mov
push
xchg
or
icebp
popf
and
lea
mov
add
xchg
add
sub
insb
pop
lds
push
fsubl
movb
add
mov
test
mov
adc
mov
pushf
or
inc
push
test
mov
jle
stos
mov
add
sbb
xchg
jecxz
push
inc
in
pushf
pop
add
xchg
inc
mov
push
pop
in
xor
shl
or
or
dec
adc
or
mull
mov
or
int3
push
adc
xchg
jmp
mov
push
dec
lock
adc
xchg
test
hlt
xchg
or
int3
insl
punpckhdq
test
add
push
je
ss
push
into
enter
jae
jl
in
lds
cmp
cmp
imul
cmp
icebp
ficoms
ja
pop
mov
je
sub
mov
mov
add
jge
xchg
xchg
add
jne
fldln2
mov
cltd
inc
pop
or
rorb
stos
or
addb
pop
or
xor
jne
mov
cmp
cld
inc
push
mov
cmpsl
sbb
pop
in
sbb
mov
les
gs
nop
pop
sbbb
sub
jb
and
sbb
fdivs
add
das
push
push
subl
pop
mull
imul
inc
mov
flds
mov
xor
aam
or
dec
scas
push
push
dec
mov
lea
add
sub
push
jge
inc
out
pop
mov
or
fmuls
dec
sti
xchg
insl
leave
add
and
lods
in
nop
mov
xlat
push
adc
adc
jno
sbb
mov
mov
dec
pop
sbb
enter
loop
inc
cmp
and
add
insw
xor
mov
mov
add
dec
imul
jmp
loope
cmp
in
cmpb
lods
ffreep
xor
int3
mov
sbb
dec
or
out
jnp
orl
push
enter
sub
inc
je
scas
lock
movsb
outsb
xchg
push
inc
pop
cmp
cmp
cmp
jne
repnz
dec
xchg
cmp
jo
xchg
mov
cwtl
mov
xor
lods
mov
rcll
shll
cmp
push
movsb
rol
cld
inc
mov
je
testb
outsl
mov
in
mov
push
jo
xchg
adc
inc
lds
or
fldt
or
push
clc
add
jo
cmp
inc
inc
sub
inc
loopne
mov
mov
cmp
lea
jle
cmp
jae
aaa
sbb
xchg
push
insl
cs
aam
and
add
cld
sbb
cmp
push
pop
into
mov
fcmove
adc
dec
pop
leave
push
hlt
push
clc
loope
xchg
and
add
test
cmp
je
dec
fsubl
dec
mov
fiaddl
rclb
dec
insb
push
push
rcl
jmp
mov
insb
mov
movaps
push
jo
lea
shll
rorl
cmp
push
push
xchg
mov
add
inc
jbe
and
adc
in
insl
lds
jge
dec
xor
mov
jmp
mov
daa
inc
outsb
mov
adc
xchg
adc
or
mov
outsb
pop
test
or
inc
mov
stos
mov
nop
inc
adc
or
or
mov
and
cmpsl
adc
xchg
or
dec
pop
adc
adc
jle
enter
inc
adc
lcall
mov
mov
sub
je
enter
mov
movsb
adc
mov
addr16
xchg
in
mov
dec
dec
cmp
imul
xor
lods
mov
add
insb
arpl
les
int
movsl
mov
cmp
in
fistps
out
ret
adc
and
pop
jb
clc
push
xchg
adc
addl
add
push
sub
add
adc
mov
jl
cwtl
dec
pusha
ret
clc
mov
in
lea
shrb
mov
add
pxor
mov
dec
add
and
leave
inc
add
push
stc
xor
and
sbb
add
movsb
movsl
pop
xlat
pop
or
push
pop
enter
scas
mov
xchg
sbb
fisttpll
pushl
lea
lea
push
mov
ret
test
and
pop
imul
and
pop
imul
int3
out
or
mov
mov
cmp
cs
in
pop
mov
xchg
shl
rclb
cmp
xchg
add
out
pop
pop
je
push
andl
inc
cmp
push
cmp
pusha
pop
ret
nop
lret
js
jp
js
jb
mov
mov
jne
sbb
xor
rcll
mov
sbb
test
std
xor
and
in
pop
cmp
into
mov
pop
pushf
xchg
dec
cmp
rorl
mov
pop
or
add
daa
int3
add
mov
std
mov
push
xor
aam
loopne
repnz
clc
addb
dec
adc
out
popa
mov
cmp
roll
movq
xor
adc
imul
aas
and
pop
sbb
ficomps
js
jl
jmp
ficompl
rolb
jl
cs
dec
xlat
scas
sub
popf
jb
adc
ja
sbb
inc
or
jae
ljmp
enter
pop
inc
inc
adc
cwtl
shrb
in
xor
pushf
pop
imul
jno
call
xchg
mov
jae
add
sub
jae
in
and
add
in
cmp
imul
cmc
jp
inc
out
dec
call
add
ss
inc
sub
ret
inc
or
nop
cmpl
cmp
shr
aam
outsl
sub
xor
dec
push
je
dec
jne
push
adc
and
jnp
cmc
adc
push
and
and
lahf
add
in
or
inc
rcll
leave
adcl
movsb
ss
pop
test
lea
js
repz
dec
movsl
mov
fwait
sbb
pop
ret
mov
xchg
jge
mov
xor
andl
fldt
movl
xchg
daa
xor
xor
inc
test
inc
inc
sti
fistl
lea
cli
jb
lea
or
fstl
and
dec
outsb
inc
ja
lock
cmp
push
das
cmp
loopne
ja
xchg
ss
adc
inc
sub
dec
push
sbb
dec
orl
sbb
cmp
sub
sbbb
popa
test
jno
mov
cmpsl
loope
ret
mov
or
push
lahf
add
or
or
lods
cmp
testb
xor
xchg
xor
push
fs
sbb
int3
jle
daa
mov
rorb
mov
js
or
aam
or
adc
ror
adc
add
sub
aas
data16
mov
and
mov
call
or
stc
cmc
mov
lea
push
idivl
pushf
inc
mov
stos
dec
leave
sti
sbb
adc
cmp
imul
and
push
negb
push
movsb
lock
push
xchg
leave
inc
aaa
insb
dec
hlt
mov
shr
and
mov
push
fistl
pop
mov
andl
inc
mov
sbbb
mov
xchg
cs
xchg
adcb
movsl
sub
dec
pop
jno
add
test
testl
jne
add
jecxz
pop
mov
add
rol
lret
faddl
add
xorb
xor
add
xor
test
and
and
add
adc
pop
lods
and
dec
js
out
jne
daa
jmp
bound
push
rcll
test
push
inc
fdivs
mov
adc
adc
pop
movsb
gs
pop
or
sbb
sbb
dec
xor
and
inc
and
int
sbb
and
les
mov
pop
jg
int
inc
cmp
inc
add
cwtl
xorb
inc
cwtl
shll
adc
push
and
sub
pop
push
dec
xchg
push
inc
test
fsubs
dec
adc
fwait
or
fs
add
push
mov
pop
or
jns
or
mov
out
adc
push
xchg
adc
dec
test
and
nop
sbb
or
jg
ja
jge
ret
mov
test
stos
out
adc
fdivrs
xor
movsl
mov
pop
loope
mov
dec
add
imul
fnsave
and
rcll
addr16
inc
jl
movsl
mov
mov
dec
jbe
xchg
fisubrs
cmp
cli
and
mov
mov
pop
adc
or
dec
fisttps
scas
lea
xor
mov
dec
lret
sahf
lock
ss
mov
rclb
outsl
popf
mov
jae
inc
push
cmpb
xchg
add
cmpl
inc
xchg
pop
rclb
fmull
push
adc
inc
cmp
cmpb
pushf
fsubr
add
mov
arpl
popf
popa
test
inc
xchg
mov
rcll
and
push
sub
lods
dec
push
xchg
cmpsb
or
fdivrl
iret
lods
addr16
arpl
inc
adc
lcall
mov
mov
adc
add
or
mov
dec
mov
lods
and
jo
pop
mov
mov
clc
or
je
test
jae
xchg
movsl
std
movsb
mov
inc
cmp
pop
mov
mov
stos
mov
out
lock
push
pop
inc
sub
mov
and
ret
mov
stos
or
fstpl
incl
xchg
test
shlb
das
jp
adc
xchg
inc
lock
data16
pushf
jmp
and
mov
loope
cmpsb
mov
adc
push
push
push
subl
loopne
dec
addr16
test
test
sbb
inc
pop
adc
fidivs
mov
sbb
test
push
je
incl
fdivrs
outsb
sub
mov
cmp
cmp
arpl
lcall
dec
add
sub
inc
cli
dec
inc
or
xchg
and
xchg
sbb
daa
loope
js
push
test
xor
pop
pushf
iret
lea
faddl
int3
cmp
lea
clc
int
xchg
xchg
and
sbb
and
jo
test
sub
fcompl
lret
mov
or
push
xchg
mov
ret
adc
push
cmp
sbb
mov
call
mov
push
or
push
mov
adcl
mov
test
jno
fbld
adc
add
popa
adcl
std
fucomip
dec
add
push
push
mov
movsl
xchg
loopne
je
and
pop
sbb
popf
pop
cs
lock
dec
cwtl
test
and
mov
jecxz
or
inc
xlat
insb
mov
fists
fstl
in
pop
xchg
filds
aas
movsb
dec
pop
and
push
ret
pop
inc
loopne,pn
jmp
or
nop
add
push
cmpsb
or
scas
pop
jge
call
inc
add
fstps
push
adc
movsb
arpl
add
ret
cmp
and
push
xchg
add
dec
dec
xchg
sbbb
add
fdivl
lods
sarl
jl
mov
test
inc
pushf
lcall
add
jl
or
pusha
xchg
mov
mov
push
mov
jecxz
sbb
fidivrs
push
pop
mov
pop
adc
xchg
and
xor
push
xchg
pop
addb
push
lods
add
loopne
rorl
xchg
push
pop
add
mov
add
pop
orl
loopne
sub
and
sub
in
dec
add
outsb
pop
xchg
int
and
or
shl
movl
repnz
dec
pop
dec
push
test
jo
in
pop
add
into
psrlq
movl
divb
xchg
mov
pop
rcrl
popf
push
mov
sbb
out
push
jo
xorl
ret
sbb
xchg
fsubl
sbbb
fcoms
push
sub
and
arpl
orb
pushf
and
xchg
or
and
ljmp
or
mov
pusha
dec
or
js
cmp
sbb
sub
xor
dec
pop
testl
or
int3
sarb
xor
or
rorb
mov
cld
fwait
xlat
or
rcl
or
or
nop
repnz
loop
adc
cmpl
and
sbb
pop
mov
out
in
xchg
nop
cmp
out
das
and
xor
test
xor
mov
xor
je
mov
cmp
push
cmp
xor
and
lods
add
rorl
sbbl
dec
adc
sbb
push
sub
pushf
movsb
jecxz
sbb
ss
pop
dec
fs
in
cmpl
mov
mov
cmc
mov
nop
lret
push
stos
adc
out
je
cwtl
lret
loop
mov
dec
inc
dec
popa
in
or
cwtl
add
je
movsb
outsl
jne
mov
cmp
enter
mov
or
pusha
inc
inc
mull
ds
loopne
mov
mov
std
push
mov
push
and
adc
sub
push
testb
fisubl
and
sbb
cmc
mov
push
push
push
add
fisubs
add
cs
test
cmp
pop
leave
push
adc
pop
inc
inc
pop
loope
clc
jp
out
inc
cld
dec
imul
ret
cmpb
or
inc
push
fwait
clc
xor
fwait
mov
shlb
xchg
sbb
shlb
xchg
in
dec
push
jge
outsb
or
pop
mov
push
push
mov
mov
js
mov
inc
fdivrp
jbe
decl
ljmp
fxch
lea
jns
xchg
ret
pop
mov
jne
mov
jg
je
cmp
jmp
lea
popf
std
sbb
jo
mov
cmp
pop
or
pop
sbb
jns
stos
dec
add
mov
ret
imul
or
cmp
out
insl
sub
xchg
call
pop
pop
sub
call
pop
test
mov
fnstenv
xchg
sbb
popf
mov
jae
ss
popf
jg
add
cmp
les
adc
mov
call
push
cli
sbb
int3
loopne
leave
sub
pop
dec
std
or
aam
push
fadds
ds
dec
imul
loope
jns
adc
negb
shrb
xor
xchg
push
fwait
jno
mov
push
mov
or
rcll
loope
outsl
xlat
add
pop
jge
icebp
sub
sbb
in
stc
or
adc
push
cmpsb
sub
sub
sarl
in
mov
push
aas
pop
inc
fsubr
mov
out
xchg
xchg
ret
push
sbb
push
xor
pop
cs
imul
or
jecxz
movb
test
dec
pop
sub
mov
adc
jno
mov
mov
loope
xlat
push
arpl
popa
std
insb
inc
sub
mov
fisubrl
jo
cmp
sbb
out
int
inc
xor
mov
and
insl
int
fwait
cmpsb
push
insl
pop
int
mov
mov
ja
sbb
jbe,pn
loopne
fwait
sub
int
nop
and
enter
lock
dec
and
leave
sbbl
push
and
nop
or
pop
insl
sub
and
push
jne
dec
push
mov
push
pop
sbbl
orl
pop
sub
xor
and
fmull
into
je
sub
push
pop
mov
jb
gs
inc
enter
daa
adc
adc
pop
push
xor
xchg
sub
push
ret
cmp
push
push
aaa
dec
dec
pop
jnp
negl
push
push
sbb
pop
arpl
add
or
sbbl
xor
mov
into
dec
cmp
inc
and
inc
push
outsl
and
daa
movsb
cltd
fmuls
xor
lea
jecxz
ret
dec
movl
cmpsl
es
push
mov
add
sbb
int
xchg
xchg
rorl
add
clc
les
dec
and
and
fs
mov
xor
xor
in
lcall
add
push
or
sbb
ret
ret
and
popf
daa
imul
mov
movl
dec
leave
repz
xchg
orl
imul
add
in
sbb
fmul
jp
mov
xchg
xchg
or
lock
pushf
xor
and
in
mov
push
fisttpll
in
lcall
scas
add
inc
ss
faddl
imul
jl
push
testb
adc
test
mov
adc
or
insb
pop
add
clc
xchg
add
cwtl
mov
add
fdivs
sbb
ja
hlt
dec
sub
stos
xor
test
inc
or
fs
and
push
pop
call
add
loope
pop
pop
test
mov
aas
adc
jge
stos
stos
adc
test
cmpl
sbb
pop
sbbb
inc
push
int3
cld
sbb
daa
cmpsb
jne
push
out
sti
popf
loopne
cwtl
lock
or
jo
adc
add
cmp
test
outsb
je
inc
xlat
adc
lock
jl
ljmp
dec
xor
adc
mov
es
add
int3
push
mov
cmp
int3
mov
orb
xchg
daa
test
mov
add
leave
je
add
ja
mov
mov
push
dec
icebp
jge
sbbb
mov
pop
call
pop
xor
push
fmull
push
jmp
loope
fldt
in
sbb
es
shl
push
pop
cmpsb
dec
push
in
xchg
inc
dec
push
test
pop
cmpsl
add
sub
xor
fmulp
negb
push
les
aad
cmp
mov
or
push
in
dec
sbb
aas
mov
cltd
lods
sub
cmp
push
cli
faddl
mov
sub
mov
push
push
nop
mov
jecxz
push
pushl
and
icebp
lahf
pop
pop
sbb
je
inc
push
subb
dec
cltd
mov
aad
or
or
lods
pop
nop
mov
mov
repnz
sarl
inc
dec
daa
ret
mov
xchg
out
es
sbbb
push
jnp
inc
jne
push
test
sar
pop
lock
mov
jge
mov
or
imul
filds
add
aaa
add
add
and
insb
aas
add
sbb
lds
movl
js
xchg
jl
push
gs
aad
adc
dec
rcrb
mov
xor
and
push
in
mov
dec
sbb
and
push
dec
sbb
imul
popa
sbb
add
mov
adc
mov
adc
jmp
loopne
out
jns
or
loop
push
cmp
jle
lcall
test
js
inc
clc
xor
mov
inc
pop
mov
mov
xchg
sub
mov
push
lahf
sbb
cmp
movsb
or
push
daa
push
shl
adc
and
fsubs
push
or
je
rcl
dec
or
cmpl
inc
push
xor
out
pop
inc
jmp
mov
sub
sbb
dec
dec
jo
xor
mov
cmpsl
add
adc
mov
mov
adc
cmp
jmp
sub
shlb
sbb
and
inc
sbb
pop
dec
loop
ljmp
pop
adc
cmp
inc
stos
mov
sub
pop
inc
push
cltd
arpl
std
mov
out
dec
sahf
mov
sbb
lds
nop
mov
movsl
xor
mov
sbb
insb
mov
aam
sbb
push
xchg
femms
lea
fsts
pop
xor
stc
clc
enter
cmpsb
adc
add
bound
push
fstpt
push
cmp
dec
and
cli
or
clc
cmp
mov
push
and
mov
test
pop
or
or
lahf
xchg
subl
inc
in
pop
das
les
out
cmp
jle
cld
jae
inc
add
outsb
mov
mov
sbb
rorb
mov
aas
sub
inc
jmp
xor
push
pusha
sub
adc
jle
cmp
cmc
jns
cmp
add
call
sub
jle
cltd
xchg
movsl
mov
inc
lock
or
xlat
fstpl
or
adcb
out
fwait
daa
stc
cmp
bnd
test
xlat
sub
iret
test
in
xor
add
pop
add
aam
int
pop
push
sub
mov
mov
push
loope
mov
aad
setns
mov
sub
nop
add
ret
mov
aaa
or
and
les
insb
pushf
cmp
dec
add
das
lods
ss
mov
push
insl
mov
ljmp
testb
pop
js
pop
dec
dec
outsb
pop
or
lret
lods
or
pop
or
pop
adc
inc
lods
cltd
xor
lock
pop
xlat
jge
push
push
inc
popa
loop
pop
push
inc
lods
xchg
bound
dec
mov
test
lock
shr
add
add
addl
movsl
popa
loopne
insl
loop
das
leave
cld
mov
std
stos
cmc
push
and
jnp
test
mov
inc
rorb
xchg
pop
dec
in
adc
or
rolb
mov
xchg
adc
cmp
add
shlb
mov
jle
fwait
sbb
mov
add
addr16
cmp
xchg
inc
dec
add
ja,pn
pop
mov
push
inc
inc
dec
add
movsb
mov
js
push
daa
test
push
daa
cmp
dec
add
rcrl
inc
mov
cwtl
add
rol
inc
inc
enter
mov
pop
loopne
xor
mov
or
dec
adc
or
jl
inc
lea
push
jmp
dec
pop
inc
dec
popa
test
gs
jnp
mov
nop
mov
add
or
sub
lcall
sbb
jo
lods
add
sbb
test
or
push
fs
add
lea
or
cmp
iret
jnp
jl
lret
push
jecxz
lahf
aas
sub
jmp
shll
out
or
inc
mov
mov
jp
les
int
add
push
sub
cmp
enter
rcrb
push
fistpll
pop
pop
push
push
xor
sub
mov
lock
daa
sbb
xor
sbb
mov
jmp
push
clc
mov
stos
incl
push
pop
jo
jns
rcrl
xchg
call
ja
stc
xor
add
push
dec
cmp
scas
pop
dec
mov
repz
lea
xchg
xchg
cmp
dec
jae
lea
mov
jmp
add
add
dec
aam
orl
rorl
add
cmp
pop
rorb
add
inc
xchg
xchg
xor
dec
loop
cwtl
inc
jns
pop
lods
adc
and
sbb
jbe
clc
xor
mov
out
test
call
shll
xor
lods
xchg
push
inc
add
jae
cmp
mov
push
sbb
push
pop
pop
pop
sub
loop
shr
inc
rorl
cmp
pop
fists
cmp
sub
movsb
rcr
cmpl
fidivrs
jge
fistpll
dec
sub
sub
dec
adc
jo
cmpsb
pop
inc
ret
xor
xchg
icebp
lret
xor
dec
fsubrs
arpl
idivb
fiaddl
mov
gs
push
sbb
sub
nop
mov
adc
mov
dec
and
scas
xor
andl
orb
push
dec
enter
mov
clc
in
std
fiadds
cmp
dec
gs
inc
push
jbe
pop
and
mov
xchg
push
adc
cld
and
cmpsl
or
mov
pusha
or
add
inc
sbb
mov
adc
ret
mov
add
imul
ss
cmp
cmpsl
test
insb
jl
mov
xchg
ja
enter
aas
mov
test
inc
sbb
push
insl
imul
inc
inc
push
mov
add
jnp
push
cmp
add
inc
icebp
push
jmp
and
add
pusha
movb
stos
jns
xchg
push
pop
jle
addl
js
add
add
insb
fstps
sar
aas
push
orl
jecxz
fldt
jae
dec
push
mov
mov
or
mov
js
adc
adcl
adcl
pop
xchg
mov
les
icebp
cmp
pop
mov
movsb
push
movb
cmp
push
loopne
sahf
sbb
or
insb
and
addl
xor
jmp
xor
push
js
movl
mov
sbb
adc
push
push
mov
call
mov
imul
or
mov
add
push
and
and
adc
add
les
scas
pop
cwtl
inc
jl
dec
pusha
jecxz
dec
lcall
inc
into
pop
cltd
inc
add
push
out
adc
sti
inc
pop
fs
pop
push
mov
rcr
mov
pop
mov
and
xchg
mov
icebp
mov
fdivrs
fcoml
sbb
out
lock
imull
inc
mov
es
insb
or
dec
mov
inc
or
xor
mov
jle
and
mov
sbb
lret
mov
pop
mov
sub
add
call
das
bnd
mov
add
mov
sub
sbb
shr
sbb
inc
ret
add
adc
sahf
test
inc
xchg
push
add
pop
repz
or
sti
outsb
ljmp
jne
jno,pn
repz
sarb
gs
imul
xor
jno
lock
jo
fdivrl
dec
std
ss
mov
jae
out
test
cmpsb
pusha
stc
jl
cmp
mov
push
push
test
mov
adc
lock
xorl
test
dec
cmp
sbb
les
test
add
cpuid
sub
es
test
add
shlb
adc
test
hlt
pusha
psraw
xchg
lret
push
cld
sbb
and
sub
mov
xchg
movsb
shrb
add
or
popa
fadds
mov
mov
cli
fwait
popa
and
mov
mov
xchg
add
ret
add
rcrl
scas
push
xchg
arpl
jne
movsbw
push
loope
jl
jno
jne
in
or
and
or
or
fwait
mov
inc
push
arpl
icebp
add
fisttpl
sbb
hlt
movsb
insl
hlt
push
inc
popl
rolb
in
orb
dec
cmp
adc
jmp
outsb
or
fcom
xor
ficoml
mov
mov
nop
and
mov
jbe
mov
xor
stos
fcmovne
pop
pop
or
dec
cmp
push
dec
ss
int3
sti
mov
push
movsb
pop
lea
push
jo
prefetcht0
mov
xchg
cmp
push
push
sub
xor
dec
mov
sbb
add
ret
dec
fcomps
mov
add
add
out
adc
adc
ja
cmpsb
sarb
dec
inc
movswl
xor
inc
pop
sbb
jp
push
popa
lcall
pusha
les
int
dec
notl
dec
insl
mov
imul
sbb
int3
imul
inc
xor
mov
and
adc
push
cmpl
jl
adc
and
lahf
dec
xlat
mov
addr16
cmp
xor
mov
dec
add
mov
jb
hlt
sbb
int3
sbb
mov
andl
in
stos
lcall
xchg
ja
shrl
test
jne
enter
adc
xor
jmp
in
jb
pushf
and
call
xchg
das
push
and
and
fildl
inc
add
mov
fimull
ss
mov
and
into
xorb
lods
repnz
shrb
sbb
add
or
shr
jg
scas
xor
adc
dec
hlt
and
call
cld
push
ret
mov
pusha
mov
dec
or
add
cmp
dec
pop
mov
rcl
inc
daa
pop
inc
pcmpeqb
dec
or
dec
mov
sub
daa
mov
insb
andl
xor
dec
dec
push
sbb
int3
lods
xchg
push
jo
pop
jnp
pop
movl
sbb
adc
dec
lock
bound
iret
enter
cmp
sub
dec
add
mov
xchg
mov
frstor
push
push
push
popf
dec
test
ret
adc
icebp
test
and
testl
push
xor
jl
xchg
adc
pop
cltd
sti
mov
dec
jne
or
inc
sub
inc
sub
xchg
stc
and
xchg
inc
push
or
dec
lock
pop
sbb
add
inc
jle
xchg
add
add
cmp
cli
mov
add
clc
stos
rol
es
push
mov
push
adc
adc
hlt
inc
mov
push
fistps
dec
cmp
in
in
adc
xor
bound
movsl
add
rclb
or
xchg
add
enter
aas
xchg
adc
push
hlt
js
push
and
dec
lea
and
popa
pop
scas
sub
sub
jp
inc
dec
aam
clc
sub
pop
stc
cmpsb
mov
and
push
push
push
push
pusha
call
mov
das
dec
adc
shrl
add
jne
mov
nop
call
test
popa
loope
mov
jne
je
jo
decl
push
fwait
inc
lods
clc
mov
jmp
add
inc
add
stc
cmp
push
and
jp
adc
push
push
cmp
pop
jno
repnz
xchg
nop
adc
push
aas
int3
adc
sub
pushl
pushf
xchg
or
xchg
mov
jmp
and
sahf
lods
xchg
insb
pop
pop
sbb
sub
es
xchg
jp
shrl
push
cmp
jo
movsl
mov
mov
inc
cwtl
outsl
in
imul
push
mov
lea
inc
add
lea
in
js
dec
popa
mov
cmp
pop
mov
mov
imul
cmp
jle
cmp
js
add
xor
add
jbe
adc
popf
enter
inc
loop
jle
test
adc
jnp
in
add
sub
add
sub
ss
cmp
sbb
outsb
dec
sbb
or
test
lods
stos
and
add
in
sbb
add
iret
and
sbb
dec
cmp
add
sub
mov
jmp
add
and
aad
xor
js
jo
xor
aas
orl
enter
pop
add
jbe
adc
lds
es
test
push
push
xlat
aam
paddq
pop
pop
repnz
addr16
fimull
les
test
and
pop
cmp
add
lods
out
mov
sbbb
outsb
aas
xor
clc
jo
or
jnp
add
dec
jnp
mov
aam
test
pop
or
cmp
pop
mov
push
jno
sbb
nop
mov
mov
dec
gs
mov
jne
insb
nop
lahf
add
mov
xor
jg
cmp
sarl
cli
xchg
test
push
je
xor
mov
mov
pushf
mov
jo
mov
pop
dec
pop
call
xchg
xlat
pop
inc
adc
rorb
xor
shlb
cmp
in
push
xchg
cmc
xchg
rorl
adc
push
aas
ror
les
or
mov
aas
push
test
or
cmp
push
lret
scas
jmp
and
dec
test
aad
push
jo
jge
mov
sbb
lahf
mov
mov
add
or
in
hlt
jns
add
xchg
shr
leave
push
insl
pop
dec
pop
aam
pop
js
loop
cmp
and
shll
pusha
jmp
sbb
or
pop
int3
je
push
push
int3
pop
push
hlt
xor
cltd
stc
sbb
test
clc
inc
inc
dec
pop
je
push
xchg
and
xchg
out
les
or
test
mov
inc
or
pushf
stos
pop
dec
xchg
sbb
dec
mov
pop
jbe
mov
pop
cmp
sti
push
mov
push
cmpsl
pop
jle
push
cmpsb
mov
popa
shlb
push
lods
add
incb
or
sahf
push
lds
and
adc
sahf
or
inc
mov
mov
outsb
adc
cmp
dec
std
test
mov
push
xchg
mov
or
mov
outsl
dec
ret
mov
inc
sbb
ss
jae
mov
mov
rcrl
pop
cmp
fld
mov
pavgb
cmp
push
fimuls
es
or
loopne
in
or
mov
xchg
push
fs
ret
leave
int
push
pusha
jbe
std
pop
mov
insb
lea
lret
in
nop
sti
adc
mov
sbb
jp
out
mov
xchg
ja
lods
add
jle
or
leave
cmpw
sbb
arpl
popl
test
sar
jge
ss
push
pop
mov
add
sar
sbb
push
je
mov
popf
xorb
cmp
jns
or
and
add
loopne
inc
mov
mov
aas
sub
push
loop
xchg
push
sahf
clc
sub
dec
push
dec
push
shlb
dec
cs
sub
jmp
hlt
rclb
mov
movzwl
std
neg
sub
add
pop
or
mov
cs
cmp
add
sbb
cmp
int3
dec
nop
and
sub
sbb
mov
xchg
mov
icebp
jo
inc
je
insb
xorl
and
nop
pusha
jle
pop
mov
icebp
aad
sbb
js
cs
xchg
subl
mov
clc
pop
and
popa
movsb
icebp
mov
or
seto
call
fs
push
sahf
push
sub
scas
insl
add
nop
xchg
push
pop
push
dec
pop
mov
jo
push
fdivl
and
adc
adc
cmp
cmp
lea
inc
adc
push
sbb
popa
psllw
and
je
lret
xchg
pop
or
imul
icebp
sbb
sbb
cmpl
add
jno
add
repz
mov
sub
push
fldl
loopne
pop
sub
add
in
pop
adc
inc
add
add
add
hlt
pushf
rolb
sbb
movsl
addr16
push
and
sub
test
sahf
inc
mov
inc
xchg
adc
lods
loopne
adc
and
imul
mov
cmovge
cmpsb
xchg
pop
or
call
push
add
cmp
repz
jmp
add
adc
sub
test
push
sbbb
enter
and
mov
js
or
pop
push
push
stc
push
out
xchg
dec
dec
push
push
inc
sub
sbb
mov
inc
push
aaa
icebp
adc
dec
mov
mov
or
sbb
and
sbb
push
cmpl
dec
mov
jne
aaa
or
lock
push
and
push
dec
cli
aad
leave
sbb
std
aad
mov
in
fdivrl
aam
mov
push
and
add
mov
add
stos
and
jne
testl
inc
hlt
shrb
dec
ljmp
cmp
mov
mov
jne
imul
dec
movsl
xchg
movsl
cmp
pusha
es
or
shlb
push
push
and
mov
push
inc
movsb
sti
adc
sti
aas
cld
adc
aad
inc
fcomps
in
push
or
scas
xor
test
sbb
cld
call
fnsave
popa
cltd
ja
cmpsb
mov
out
inc
icebp
out
sbb
xor
hlt
sub
aad
sbb
mov
adc
pop
inc
xor
dec
add
mov
mov
stc
dec
jle
inc
aad
adc
js
push
incl
call
ss
cli
dec
add
push
push
dec
lods
push
lds
cmc
aad
add
lock
nop
xchg
mov
in
dec
jo
inc
mov
in
cmp
mov
push
shrl
dec
sub
test
xchg
nop
mov
pop
sbb
cmp
jae
sub
mov
push
shlb
rclb
xchg
jo
in
fists
mov
mov
xor
jmp
push
push
das
popf
push
mov
pop
pop
div
ds
addl
pop
adc
in
push
pop
adc
push
test
inc
orl
mov
pop
xchg
inc
push
or
mov
aaa
xchg
adc
inc
pushf
and
lcall
mov
add
pushf
nop
xchg
frstor
or
sbb
and
cmpl
or
mov
push
loop
mov
pushf
and
jnp
adc
mov
notl
fdivrl
sbb
push
push
ret
dec
push
mov
dec
jecxz
mov
sub
rcr
lock
add
jmp
sbb
test
sbb
inc
jmp
movsb
dec
in
sub
mov
add
fcomp
cmp
mov
popa
dec
inc
sahf
add
inc
dec
inc
mov
inc
jne
fbstp
repz
and
xlat
fs
je
sbb
push
sti
sbb
sub
sbbl
test
inc
sub
xchg
mov
jbe,pt
xchg
push
pop
fwait
jmp
inc
mov
test
in
xchg
jo
dec
push
clc
lea
cmp
ja
cmpb
xor
orb
sbb
mov
inc
mov
insl
loopne
mov
xor
cwtl
add
jge
mov
ss
in
inc
xchg
inc
sub
jle
into
rcl
jp
enter
fwait
or
pop
or
orb
pusha
sbb
sub
loopne
in
mov
mov
xchg
or
mov
add
dec
inc
pop
call
add
add
lock
roll
mov
mov
dec
cmp
push
or
dec
cvtdq2ps
dec
in
add
jmp
pop
adc
push
lret
mov
xchg
mov
stos
add
movsb
cmp
mov
rorb
pop
pop
cmp
fiadds
jmp
push
inc
add
sbb
inc
cmpsb
add
enter
inc
nop
daa
out
in
leave
xchg
push
ret
and
and
jae
test
jle
es
jmp
add
push
or
and
push
lea
mov
adc
lcall
and
insl
std
pop
xchg
adc
clc
pop
jne
add
cmp
ret
jae
push
or
sub
hlt
hlt
mov
push
adc
xor
xchg
lcall
icebp
cmpsb
cld
hlt
clc
add
dec
mov
and
shr
mov
rclb
mov
or
mov
jge
lods
push
xchg
push
push
push
push
add
sbb
mov
push
inc
call
iret
sbb
incl
fwait
loope
and
je
cmp
jbe
adc
cmp
fcmovnbe
jp
jmp
push
jg
lods
push
repz
cmp
out
and
push
mov
mov
pop
and
cmp
fdivrs
add
push
nop
sbb
sub
outsl
iret
rol
push
push
sub
dec
and
das
mov
mov
or
inc
test
pop
mov
cmp
je
push
xor
mov
pop
pop
mul
seto
repz
shl
or
push
inc
xor
aaa
adc
lahf
sbb
xchg
bound
loop
rclb
pop
aas
jbe
inc
js
popf
aas
repz
loope
push
adc
sub
and
pusha
mov
cmc
pop
cmp
xchg
pop
push
popa
dec
pusha
add
sub
cmp
ja
inc
loopne
gs
mov
jg
loop
fwait
jmp
mov
add
lea
dec
loop
add
mov
push
ret
pushf
mov
dec
jns
mov
test
push
sub
lock
xor
mov
loop
cmc
nop
inc
jno,pn
push
adc
push
xor
dec
adc
inc
or
int
fistl
pop
testb
or
mov
push
addb
and
inc
sbb
dec
and
repz
popa
mull
and
sub
and
rorb
stc
add
ja
pop
bound
and
ret
fnstenv
xchg
pop
call
xchg
subb
es
adc
adc
xchg
xchg
push
push
and
adc
test
cmc
andl
hlt
repz
rorb
xchg
sub
sub
push
dec
add
or
test
ja
push
add
clc
or
push
add
sbb
imul
test
or
cmp
inc
add
sbb
in
icebp
push
ds
sarb
pop
or
xlat
ret
sub
in
sub
sbb
add
cmc
xor
adc
push
add
lahf
fistpl
or
sub
sub
andl
add
ret
aam
jne
push
int3
inc
rorl
xchg
and
push
sarl
and
sbb
dec
sbb
push
nop
subl
jb
cmpsb
popa
inc
aaa
sub
and
push
imulb
fs
sbb
xor
jne
outsl
cmpl
mov
in
movhps
cmpb
cltd
pop
js
dec
out
cmp
mov
fidivl
orl
xor
or
push
dec
insb
and
popf
rol
pop
push
add
lret
std
mov
push
inc
loopne
ret
add
xchg
sbbl
aaa
gs
mov
xor
insb
pusha
lods
push
adc
push
rolb
xlat
push
push
or
adc
fwait
mov
rcrl
inc
cmp
aaa
dec
jbe
mov
pop
inc
sbb
cmc
or
xchg
xor
add
sahf
inc
inc
negb
int
mov
push
stos
or
xor
mov
in
addr16
ret
rolb
outsl
stos
dec
jo
adcl
nop
and
xchg
mov
or
sahf
xorb
xor
and
icebp
addl
xchg
and
leave
add
pop
scas
sbb
pop
mov
sarl
push
pop
or
aad
jle
hlt
mov
test
les
jne
cmp
dec
and
sub
mov
clc
imull
mulb
xor
test
inc
mov
dec
pop
aam
cmp
mov
jnp
cmpb
data16
sub
cmpsl
push
push
dec
cmp
jnp
add
stos
dec
sub
gs
mov
inc
push
and
xchg
lahf
pop
dec
fwait
adc
dec
lahf
push
inc
jae
add
lods
andl
push
fwait
in
lret
sbb
xor
push
fwait
mov
xor
ja
cli
call
repz
add
xorl
in
and
push
sub
add
xchg
and
jl
call
push
es
push
jnp
and
aad
sbb
add
xchg
add
hlt
enter
popf
cld
icebp
xchg
dec
imul
mov
in
jl
dec
enter
dec
xchg
cmp
mov
lcall
jmp
rolb
gs
cmp
js
mov
xchg
lods
mov
ja
ret
clc
les
test
sbb
jmp
lods
xor
mov
inc
and
andl
jb
pop
popa
es
or
add
mov
rorl
int3
in
rorb
mov
rorl
sub
lds
imul
insl
push
inc
arpl
out
pop
les
push
add
sub
jbe
xchg
mov
add
xchg
mov
lea
das
jns
mov
lea
push
fiaddl
adc
add
adc
ret
and
int
and
mov
add
sub
push
or
cmc
rcl
and
inc
call
mov
adc
mov
pop
dec
pop
mov
or
cld
pusha
lcall
mov
nop
xchg
jns
movsb
adc
sub
andl
ss
sbb
jmp
xor
mov
jge
pop
dec
mov
adc
mov
mov
rcrb
test
rolb
test
add
mov
pop
cli
bnd
aaa
loopne
and
pop
hlt
inc
and
aaa
lea
sub
adc
in
test
lret
mov
push
or
jno
cmp
mov
cmp
xchg
pop
mov
lock
and
mov
hlt
scas
and
push
jne
lods
sub
pusha
jb
mov
xor
imul
add
sub
cwtl
xor
test
loope
add
pusha
push
loope
movzwl
add
push
sub
pop
pop
sbb
mov
mov
rolb
jge
pop
int
push
push
inc
sbb
inc
xchg
push
ret
pushl
rclb
push
add
mov
push
popa
out
push
sub
daa
jne
movb
adc
push
jns
lea
insb
pop
jnp
pop
push
jo
je
jo
cltd
addb
fldt
adc
outsb
or
outsl
clc
xor
sbb
jno
sbb
dec
xor
sbb
jp
pusha
mov
loop
and
imul
mov
lea
and
sub
lods
popa
xchg
jmp
or
lea
out
push
xchg
inc
sahf
xchg
call
shrd
sarl
and
cmp
call
jb
outsb
adc
sbb
in
cmpsb
mov
and
cmpsb
push
into
jle
clc
mov
pusha
add
cmp
decb
sub
pop
pop
cmp
cs
inc
or
insl
adc
lret
and
push
adc
push
arpl
dec
lea
clc
push
insl
xlat
xor
cmpsl
push
mov
sbb
jbe
pop
cmc
xor
sbbl
mov
mov
popa
or
ret
or
stos
or
and
pop
mov
pushf
pop
add
dec
xchg
pop
jno
sbb
or
jo
cmp
adc
lea
lcall
pop
xorb
ss
aam
int
xchg
dec
mov
jae
inc
xor
outsl
pop
test
js
sbb
xchg
scas
adc
sbb
inc
ljmp
test
jecxz
push
mov
mov
sub
ficoms
push
fisttpl
mov
push
adc
cs
jne
enter
add
ret
rcll
add
inc
cmpsb
adc
and
xchg
sub
push
les
je
sub
insb
in
scas
jns
das
icebp
push
or
cmc
xchg
pop
testb
mov
sbb
aas
sbb
inc
out
sub
nop
and
daa
pop
xchg
xor
mov
push
jns
orb
pop
push
or
sbb
jb
push
dec
mov
and
jb
mov
shlb
mov
mov
loope
sub
mov
scas
dec
adc
adc
test
inc
dec
pop
pushf
es
sbb
mov
dec
inc
add
lock
mov
pop
je
sbb
les
inc
cmpsl
or
add
inc
push
sbb
aam
ja
xadd
sub
rcl
push
ret
xchg
cs
and
adc
add
dec
pusha
jmp
push
add
and
xchg
push
and
inc
inc
out
sbb
adc
lds
sbb
popa
xchg
jno
sub
and
testb
and
addr16
and
push
das
mov
out
gs
cmp
movsl
and
rcll
sbb
jge
xor
jns
push
push
mov
fisttpll
push
adc
fistpll
jne
pop
fs
jmp
filds
lahf
jmp
push
lds
jno
push
dec
in
and
scas
insl
aad
scas
cli
xchg
sbb
fs
and
stos
movsl
push
jecxz
aas
enter
jmp
xor
add
andb
xchg
pushf
add
enter
adc
je
xchg
dec
dec
mov
das
mov
inc
and
mov
sub
adc
xchg
imul
dec
cmp
testl
sub
or
mov
cmpsb
adc
xor
ljmp
sbb
cmp
jmp
sbb
push
xor
inc
mov
pop
or
hlt
incb
add
mov
mov
cld
mov
lock
jmp
movb
add
jbe
and
jg
aaa
fidivrl
or
ficoml
adc
mov
inc
lea
mov
in
add
sub
dec
pusha
call
lods
sub
and
orl
ja
or
sbb
fidivl
sbb
pusha
sbb
sub
add
shll
inc
xor
mov
mov
sahf
movsb
aaa
adc
lea
mov
sysret
mov
sub
fisttpl
sarl
iret
mov
loope
mov
lods
ffree
jne
adc
into
xchg
jbe
lret
adc
in
bound
shl
imul
inc
pop
inc
insb
push
mov
and
add
adcl
dec
sbb
and
or
dec
jmp
ss
mov
mov
push
mov
and
or
mov
mov
pop
inc
or
movsb
lea
inc
push
jle
lds
das
fsubs
lea
inc
inc
sbb
gs
or
push
jg
push
pop
and
rorb
xor
or
stos
sub
or
jl
orl
cmp
xlat
fcmove
push
add
cmp
mov
mov
ret
int
or
fadds
mov
fxch
arpl
push
mov
bound
sub
mov
aam
mov
mov
push
mov
sub
or
sbb
rcrb
push
fldt
pop
push
push
mov
cwtl
jb
cmp
dec
add
adc
push
xor
sbbb
ret
stos
pop
mov
dec
pop
mov
xchg
dec
mov
and
addr16
cwtl
xor
jp
ss
shl
push
xchg
push
push
icebp
mov
jp
cmpb
push
push
pushf
in
add
jb
adc
lahf
jmp
xchg
and
cmpsl
dec
ret
jnp
lods
cmc
dec
mov
icebp
call
mov
mov
out
mov
andb
mov
sbb
cs
adc
or
call
dec
mov
int
in
decl
and
int3
sub
mov
mov
iret
push
sub
lea
push
pushw
cmp
mov
mov
arpl
pop
adc
popw
jo
and
cs
mov
ret
add
cltd
ret
ret
push
push
push
rorl
xchg
jl
mov
sub
dec
dec
add
ds
cmc
cmp
mov
sub
loopne
fcoml
dec
aam
dec
pop
adc
popa
ret
andl
dec
ret
ret
adc
xor
mov
mov
cmc
rcrl
mov
imul
iret
sbbb
cmp
push
push
or
mov
sbb
imul
adc
dec
push
xor
test
std
xchg
mov
push
stos
or
pop
xor
push
pop
xor
shlb
mov
scas
push
popf
in
add
out
jg
mov
jmp
adc
popf
mov
dec
in
add
lock
test
pop
in
adc
jne
inc
push
aad
in
mov
push
fsts
arpl
pop
imul
leave
pop
dec
pusha
mov
or
and
lret
or
cld
mov
jb
enter
inc
sub
test
aas
inc
sar
ret
dec
movl
insb
add
bound
pop
or
fimull
out
and
add
in
fwait
pop
and
cmp
and
sub
cmp
ds
push
cmp
mov
mov
rorb
sbb
sub
enter
aas
aam
sub
xor
popa
lods
lcall
lret
adc
sub
pusha
push
js
xorb
testb
xchg
addb
adc
or
lea
xchg
or
test
dec
and
and
pop
fdivs
mov
movsl
and
dec
movsl
mov
mov
ss
sbb
call
dec
xchg
pop
fwait
pop
fldt
sub
jecxz
xor
cmp
mov
cltd
jg
add
jg
jle
push
pop
jg
cmp
fsts
add
lahf
fildll
cmp
jl
push
cmp
push
cmp
jle
cmp
jp
fbstp
out
cmp
cmp
cmp
mov
mov
push
add
adc
add
inc
jmp
adc
push
add
or
ljmp
adc
dec
fwait
inc
or
fs
pop
idiv
sub
pop
iret
call
pop
adc
xor
sysenter
push
lods
dec
adc
adc
mov
jns
lret
das
push
xchg
cmp
add
addb
testb
fnop
mov
into
jno
push
mov
sbb
fcmovnbe
mov
repz
push
push
mov
popa
imul
adc
mov
iret
aad
push
push
popf
cmpsl
shll
mov
movsl
or
repz
add
dec
dec
sub
adc
adc
cmp
and
or
pop
pop
int
cmp
push
loope
or
cld
dec
imul
lods
mov
add
add
add
insl
jb
into
and
iret
add
leave
and
or
and
shrl
sbb
adc
add
mov
pop
pop
inc
pop
push
ds
les
inc
cs
jo
insl
or
dec
es
rorb
aam
mov
cmp
fmulp
xchg
mov
push
rcl
dec
orl
jb
sbb
data16
rcrl
fs
cmp
fisubrs
dec
xor
push
dec
mov
movsl
adc
fistpl
mov
pushf
xchg
add
push
push
data16
push
inc
sub
sub
adc
or
lods
mov
daa
inc
jb
sbb
xor
hlt
jns
jb
xor
sbb
dec
movsl
or
dec
and
dec
test
sub
sarl
adc
popa
cmp
test
cltd
sub
adc
andl
addl
xchg
ret
xor
loopne
sub
rcrl
push
or
leave
enter
sbb
sbb
sub
sub
pop
js
lods
cmpsb
add
jno
test
push
push
inc
sbb
add
pusha
pop
add
adc
pop
lods
jecxz
sub
fstl
add
js
push
lea
sub
mov
adc
adcl
xor
pop
lods
cmpsl
std
xor
sub
mov
movsb
aaa
sahf
pusha
leave
mov
sbb
xor
sbb
popf
sbb
adc
jmp
cmp
pop
lret
leave
inc
add
adc
loopne
sbb
dec
and
inc
mov
xor
add
adc
lea
sbb
ret
push
or
test
movsb
push
fldl
in
push
lret
cmpsb
and
aam
add
mov
or
adc
bound
add
jae
inc
xchg
sbb
fwait
loope
push
and
mov
mov
rol
push
sbb
mov
push
imul
out
out
imul
notb
xor
int
int
stc
sbb
in
add
ja
xlat
inc
inc
dec
inc
xchg
push
lea
xchg
out
icebp
sub
dec
js
mov
xor
lock
add
pushf
dec
add
mov
shll
sysret
enter
lcall
jb
add
push
test
aaa
or
in
lods
and
xchg
sub
testb
scas
nop
xchg
or
cmp
rolb
pop
mov
fimull
pop
mov
ljmp
add
mov
and
xchg
add
cwtl
ret
xchg
or
cli
into
or
ret
xor
daa
add
jo,pn
cmp
add
dec
inc
and
adc
leave
std
jo
cmp
xchg
insl
gs
fldenv
adc
stos
push
add
imul
les
add
insb
pop
jb
sbb
imul
mov
and
or
adc
iret
sbb
push
lock
add
and
sub
jo
sub
push
add
cs
cmp
xlat
add
pop
fildl
fildl
adc
sub
loopne
push
in
icebp
int3
mov
and
ror
daa
fadds
xor
add
xor
pusha
lock
mov
cmpsl
sti
add
dec
inc
lock
icebp
mov
jg
adc
and
pop
lods
popa
xor
adc
arpl
mov
sub
pop
pop
inc
jo
and
lods
les
xchg
add
in
adc
or
pusha
inc
or
clc
movsb
jmp
jmp
lea
ret
push
cmp
je
cmp
jle
cli
dec
shlb
ffreep
jecxz
add
and
insl
cmp
inc
add
inc
cmp
loopne
pop
pushl
inc
loop
orl
cmp
movl
or
jbe
inc
push
ja
mov
idivl
mov
pop
jnp
popa
xor
in
orb
or
out
movl
lea
adc
loop
push
shrb
or
xchg
or
xchg
iret
fldl
add
test
je
sbb
xchg
xor
movl
popa
push
push
fldl
push
sbb
inc
mov
jle
ds
and
sbb
fbld
push
mov
push
push
lds
cld
imul
mov
jo
jnp
xchg
add
loope
fsubrp
pop
popa
loope
bound
and
or
js
pusha
rorb
pop
mov
xchg
loope
aaa
dec
aas
cld
ds
divb
inc
negb
mov
inc
xor
xor
in
scas
sub
adc
jno
xchg
adc
dec
dec
shll
and
adc
stc
jge
and
ss
inc
cmpsl
lods
dec
add
mov
adcb
dec
insb
dec
or
cwtl
inc
inc
jnp
test
inc
popf
jnp
leave
xorl
inc
cmp
leave
inc
orl
mov
es
fiaddl
and
jnp
aad
sbb
jp
add
push
es
xchg
push
add
or
insb
mov
outsl
mov
insl
mov
mov
mov
stos
xor
mov
clc
clc
mov
or
sub
insb
pop
push
shlb
jb
mov
push
lea
push
push
and
and
je
clc
lods
ret
inc
or
or
mov
std
adc
mov
push
adc
push
push
xor
pusha
test
mov
jle
pop
ja
push
or
cli
jno
adc
push
inc
add
pop
bound
pop
sahf
leave
pop
mov
inc
sahf
add
rorb
std
push
sbb
and
push
mov
mov
cmp
cli
jne
sti
mov
gs
push
adc
sub
inc
es
adcb
sbb
jle
jnp
icebp
fisttps
cmpl
jne
or
and
jp
inc
inc
cld
cmp
dec
ljmp
push
jl
mov
mov
lea
cmp
std
mov
or
dec
leave
pop
jle
sbb
cmp
push
push
push
push
sub
push
push
cmp
push
mov
dec
sub
mov
and
lret
es
jb
orb
sbbl
mov
adc
push
jge
xchg
fwait
fldenv
sbb
ret
dec
ret
add
jle
add
dec
jge
fbld
cmc
add
add
cld
mov
cli
mov
orl
jnp
cmp
jne
and
mov
loopne
pop
fstps
dec
bound
leave
jbe
xchg
roll
fmuls
jo
dec
loope
jle
or
push
cmc
add
mov
xor
pop
daa
mov
mov
push
adc
push
call
xlat
or
pushf
sarb
adc
adc
std
imul
in
xor
xchg
sbb
pop
jg
mov
repnz
add
fadds
inc
and
adc
jl
aam
mov
loope
gs
lds
sub
mov
aam
sbb
sub
addl
mov
loope
mov
test
lods
js
inc
stos
add
push
insl
nop
add
xchg
sti
pop
je
push
mov
xor
stc
and
enter
ret
pop
add
sbbb
pop
xchg
sbb
shlb
xor
mov
push
fisubl
fbld
xor
rol
aaa
scas
pop
xchg
and
push
mov
aaa
add
mov
sbb
push
leave
or
sub
sub
lods
in
or
xor
lods
les
jge
inc
inc
or
push
adc
loopne
outsb
pop
or
shll
repnz
pop
and
adc
mov
sbb
mov
push
ljmp
fcmovnu
or
cmc
dec
gs
in
lcall
fsubs
sbb
sbbb
rep
aaa
push
or
adc
add
mov
addl
rorb
push
cs
sbb
jmp
pop
ret
aad
loopne
adc
inc
fs
pop
shrb
pop
or
and
or
sar
jo
lods
bound
test
push
ja
sub
int3
int3
jne
pusha
cltd
mov
mov
sub
insl
and
mov
icebp
and
xor
mov
rclb
inc
jg
je
in
ret
je
sub
dec
rcrb
sbb
dec
jne
hlt
push
jl
mov
or
and
or
pushl
test
jl
push
adc
jmp
push
sub
and
fldt
push
jmp
push
in
rcr
cmpsl
imul
adcl
push
ja
mov
xor
mov
movsl
push
mov
push
push
and
fldl
fcomps
xchg
aaa
lock
xchg
mov
hlt
pop
inc
lcall
addr16
jl
adc
ja
or
mov
out
push
and
jo
fdivs
push
sub
enter
sbbb
pop
sbbb
popf
pusha
in
pop
xchg
sub
fcoms
mov
call
cmp
cld
cmp
sub
or
dec
mov
sub
ret
daa
jl
or
inc
ficomps
rcrb
popa
dec
mov
or
sub
pop
adc
sbb
push
inc
pop
jnp
pop
or
jo
insb
mov
dec
mov
loop
push
jnp
pop
testl
pop
es
or
jl
mov
pushf
imul
fsubs
mov
pop
rcrl
pop
jg
xor
cmp
pop
pop
lahf
mov
push
test
mov
push
out
cmp
push
decl
adcb
and
xor
sahf
out
bound
jg
out
sahf
out
ror
fisttps
jns
jmp
adc
sub
cmp
iret
repz
gs
xchg
repz
xchg
fwait
cmpsl
mov
lds
xchg
cmp
iret
loopne
ljmp
sub
daa
cmc
add
xlat
sub
push
shrl
inc
add
aam
jg
ret
mul
add
inc
shlb
inc
loope
popa
bound
mov
popf
inc
les
adc
stos
cmp
hlt
fmulp
mov
and
ljmp
mov
jle
js
out
cs
or
popa
push
shll
jmp
jl
mov
shll
xor
push
mov
mov
call
jno
inc
jb
add
out
fcompl
in
mov
sbb
ss
jo
xor
loop
jmp
sbb
mov
pop
faddl
inc
arpl
or
sbbl
and
xor
add
int3
loope
fnsave
inc
pop
cltd
test
and
sbb
mov
test
mov
adc
inc
jecxz
xchg
pop
jb
cmp
push
cmpsl
or
sti
sahf
divb
rorb
cmp
vmread
lcall
cmp
push
cmp
loopne
xchg
add
pop
imul
jp
xchg
jnp
aam
or
insl
sub
outsl
and
shlb
dec
xor
enter
push
inc
call
loopne
mov
gs
push
xor
mov
add
enter
gs
or
bound
stc
test
sub
es
nop
enter
sub
test
adc
xchg
adc
push
cmp
xor
decl
mov
push
mov
and
sbb
and
sbbb
mull
inc
incl
test
pop
mov
add
fnstenv
mov
xor
or
or
jno
shlb
inc
and
je
mov
mov
dec
gs
inc
push
inc
ret
adc
insl
sbb
sarb
mov
sbb
jecxz
or
push
xchg
cmp
pop
jne
negl
fwait
je
mov
andb
je
in
push
or
sub
cld
dec
int3
and
sub
add
inc
imul
enter
test
icebp
push
dec
jp
jmp
orl
xor
mov
jmp
jo
negl
mov
les
mov
sub
cmp
push
das
mov
cmp
insb
push
bound
rorb
incl
jns
xor
adc
mov
push
jle
mov
xor
in
scas
jecxz
and
fcompl
xor
xor
lcall
jo
dec
lcall
dec
lcall
nop
mov
int3
add
popa
frstor
dec
lea
insl
mov
loopne
mov
push
or
cmp
adc
push
dec
cmp
lret
cmp
repnz
xlat
stos
inc
pushf
jbe
jge
add
add
pop
pcmpeqb
pop
jmp
push
adc
mov
lds
fistpll
mov
lret
addl
fwait
pop
inc
add
jb
sbb
add
jae
inc
and
pop
repnz
sbb
and
enter
nop
push
or
mov
nop
and
jb
xchg
and
mov
and
dec
sbb
or
pushf
addr16
or
es
xchg
adc
or
push
incl
dec
pusha
aad
aad
xchg
shrb
movsb
lret
aad
mov
inc
mov
pop
dec
rclb
cmp
aam
mov
xchg
or
mov
rolb
and
nop
imul
cld
test
cmp
rorl
mov
fmul
dec
roll
xor
dec
cmp
test
adc
jne
mov
aas
test
mov
xchg
inc
inc
push
aas
fcompl
add
xchg
and
dec
enter
in
aaa
sub
addl
ss
dec
roll
adc
aaa
cmp
repnz
aaa
adc
inc
inc
jp
push
mov
inc
push
jo
mov
pushf
xor
sub
or
ficomps
xchg
jle
aam
pop
dec
lea
inc
or
ret
inc
jg
test
rorb
inc
rclb
xorb
dec
pop
arpl
dec
adc
add
ret
je
or
lock
push
add
ja
and
add
imul
and
andl
jp
dec
repz
or
jne
or
mov
jecxz
xchg
push
and
insl
inc
sti
xchg
mov
or
cmp
pop
lret
mov
sub
stos
add
nop
je
lods
add
dec
mov
sahf
mov
push
adc
popa
and
scas
push
adc
push
es
mov
in
outsb
push
in
and
or
sbb
add
in
icebp
test
jge
or
push
loopne
cltd
movb
xchg
jo
pop
call
mov
push
pop
sahf
gs
mov
push
enter
in
fcomps
or
jo
add
or
lods
inc
mov
cmp
xorb
push
aaa
scas
add
in
xorb
int3
or
cmp
ja
sbb
ror
paddusb
ficoms
lds
or
and
lret
mov
rcrb
je
adc
shl
ror
lock
enter
es
shll
mov
push
mov
push
xor
and
xlat
into
push
push
pop
xchg
push
and
add
and
inc
mov
sbb
or
sbb
jl
nop
fwait
or
cltd
nop
data16
mov
or
mov
mov
sub
dec
and
and
mov
jb
jb
test
movsb
mov
inc
sbb
nop
push
or
add
mull
int
addl
sbb
push
xor
xchg
shll
add
nop
sub
jo
fistl
adc
lods
adc
nop
add
test
cwtl
pop
and
mov
dec
sbb
out
xchg
inc
movsb
mov
cltd
nop
jo
push
imul
imul
in
call
xor
ret
xor
dec
aas
or
cmp
aam
dec
xor
push
xchg
cli
sahf
push
jmp
pusha
inc
xchg
jno
add
sbb
scas
scas
inc
cli
add
scas
ret
jne
add
repz
rclb
push
pop
adc
out
sub
jl
faddl
cli
popf
jno
mov
pop
sbb
sbb
adc
sahf
and
xchg
call
inc
sub
mov
rcrb
adc
and
dec
fsubrs
pusha
xchg
rclb
sub
inc
cs
cmp
movsl
fldl
push
fwait
testb
icebp
push
adc
pop
push
rcrb
xor
and
sbb
and
cmp
fildl
push
and
inc
cmp
int
leave
in
ret
adc
adc
jbe
ret
or
je
inc
pop
rclb
movsl
fcomps
shlb
xlat
mov
jne
mov
xlat
lods
nop
lods
mov
sbb
shlb
inc
sbb
mov
add
jae
loopne
test
sbb
pusha
cmpl
pop
pusha
pop
in
jo
push
push
pusha
pop
push
mov
addb
pop
and
push
and
rcrb
mov
jo
xchg
and
cmp
xor
xor
ret
pushf
push
pop
pusha
in
cltd
and
dec
xchg
lods
mov
orl
lods
push
movsl
add
pop
sub
sub
popa
stos
shl
adc
mov
ss
xchg
cmp
jo
xor
jl
sbb
scas
test
addb
cmp
sub
mov
idivl
lock
test
add
repnz
loopne
daa
mov
jbe
enter
mov
and
sub
pushf
pop
xchg
and
stos
roll
xchg
and
jb
push
sbb
sbb
sbb
jb
pop
sbb
pop
jmp
adcb
sbb
and
xchg
adc
adc
pushf
shrb
adcl
loopne
pop
mov
cmp
faddl
inc
sub
mov
adc
xchg
int3
mov
mov
mov
in
cmp
enter
ret
inc
push
loop
sbb
add
add
incl
aam
fadds
dec
jl
cmp
das
jl
add
or
clc
cmp
mov
call
push
ret
cmp
jnp
cmp
and
cmpsb
pop
jb
mov
adc
mov
rolb
lahf
jp
popf
mov
sbb
sbb
rorl
ds
rorb
fs
push
cwtl
jo
movsb
and
orl
fsts
test
cmp
dec
and
hlt
jbe
push
pusha
jmp
sub
xor
add
lock
push
scas
rorb
aad
push
lods
fldl
addr16
sahf
jge
push
jl
rorl
sub
inc
adc
inc
inc
jl
add
sbb
mov
aad
pushf
add
sbb
sbb
shrl
push
dec
ljmp
clc
gs
sub
jg
mov
hlt
mov
adcb
mov
mov
addl
sbbb
sbb
push
push
xor
pop
js
xor
aas
aam
xor
pop
cmp
or
cmp
jbe
mov
adc
inc
push
daa
add
out
ret
jl
add
cmp
inc
xlat
pop
xchg
push
hlt
subl
or
iret
jne
in
dec
inc
push
pop
fiadds
repz
dec
in
cmp
jae
inc
add
nop
cmp
lods
aam
push
mov
jmp
rorl
push
aas
dec
mov
add
adc
push
dec
sub
loopne
test
popa
mov
xchg
or
cmpps
sbb
add
scas
mov
adc
adc
dec
mov
add
daa
cmp
lods
dec
or
ds
push
popa
movaps
jmp
jae
call
push
loopne
test
fcmovbe
cli
xor
shll
bound
ret
or
xor
or
mov
cltd
sbb
sbb
add
pushl
push
imul
pop
dec
mov
or
xor
fadd
es
in
cmp
mov
cmp
dec
in
cmpb
pop
sbb
or
add
jg
jae
cmp
jl
or
je
cmp
or
ja
jmp
mov
movb
movsbl
shr
mov
add
sti
sti
and
mov
nop
inc
mov
and
fstpt
movsl
nop
xlat
and
out
xor
mov
sub
or
sbb
jo
ret
aad
adc
faddl
or
nop
cmp
add
push
in
mov
out
xchg
push
movsl
and
rcll
jne
or
pusha
fs
mov
lea
stos
or
sti
or
mov
jo
xchg
shll
mov
xchg
mov
add
cmp
je
dec
and
add
into
aam
and
push
icebp
jo
inc
inc
push
cmc
jle
cmp
imul
into
jge
push
stos
cmpsb
push
mov
aaa
pusha
pusha
enter
sbbb
out
and
lret
push
or
inc
out
out
push
or
adc
sbb
pop
je
inc
nop
jno
sub
fstps
loop
jb
cmp
and
and
push
inc
adcb
dec
and
loop
sub
scas
inc
mov
in
or
dec
jmp
idivl
jb
aam
mov
xor
pop
cwtl
pop
cld
and
jmp
cmp
cmp
loop
inc
or
loop
leave
xor
cld
add
pop
mov
ss
xchg
test
pop
sarl
scas
cmp
jne
or
adc
insb
lods
xchg
inc
push
dec
push
ret
xor
test
push
ds
push
jne
push
push
or
ljmp
mov
xchg
adc
pusha
push
test
cmp
and
movsl
mov
add
mov
lcall
add
mov
call
or
jae
jb
mov
pusha
pop
dec
jb
mov
mov
in
adc
lret
test
and
xor
insb
and
lods
fwait
dec
mov
xor
or
addl
cmpsb
jo
xor
addl
sbb
dec
addl
add
mov
pop
pusha
pushf
out
outsl
mov
sbb
nop
js
stc
sub
sbb
int3
mov
inc
push
add
mov
pop
sbb
add
ret
mov
std
push
jmp
das
inc
and
jne
pop
sub
dec
jg
xor
js
jmp
xchg
mov
mov
add
mov
xchg
outsb
mov
pop
repnz
daa
ss
aam
adc
pop
xchg
fmuls
add
push
test
or
aam
push
iret
dec
mov
popf
mov
sub
or
mov
push
push
sbb
pop
dec
aaa
add
xor
mov
jge
inc
das
inc
xor
jle
dec
fists
mov
or
add
fisttpll
pop
jbe
rolb
insl
mov
lea
pop
pop
inc
fmuls
sbb
and
push
dec
push
nop
testb
xchg
fwait
into
hlt
push
inc
sbb
add
inc
pop
ljmp
jecxz
sbb
cmp
adc
adc
fidivs
ljmp
enter
dec
or
mov
lea
or
sub
int3
ret
test
add
add
adc
mov
push
sahf
in
mov
add
ret
xor
sub
or
loopne
enter
and
imul
adc
cmp
ret
or
cmp
sbb
mov
or
clc
or
and
jmp
mov
mov
xorl
test
and
std
sub
cmp
fimuls
dec
mov
aaa
lret
stos
mov
test
nop
push
push
cmp
mov
rorb
cmp
inc
push
mov
sub
xchg
add
imul
imul
pop
je
push
les
pop
xor
les
sub
sub
mov
sbb
jmp
enter
in
mov
add
and
lret
mov
inc
inc
mov
bound
cwtl
add
rorl
jo
jno
jecxz
xchg
sbb
movsl
inc
push
mov
lock
in
pop
loope
push
push
cmpsl
dec
clc
inc
adc
shlb
outsl
mov
xor
jne
je
inc
mov
cmp
jl
es
js
xchg
cmp
mov
add
sub
mov
mov
sbb
je
test
adc
andb
les
popf
cmp
insb
mov
adcl
enter
nop
rolb
sub
enter
jmp
mov
xor
xor
loopne
xchg
mov
rolb
je
fs
lea
mov
dec
mov
mov
push
in
mov
inc
xor
xor
mov
mov
fdivs
les
ficompl
or
push
mov
pop
cmp
shll
cmp
mov
arpl
add
imul
or
add
lods
or
cmp
push
xor
inc
pop
xor
jge
or
movsl
mov
mov
jns
outsl
or
cltd
nop
das
mov
inc
sahf
faddl
jbe
cmpsl
jne
cs
in
cmp
test
jne
sub
loopne
das
xchg
mov
movsl
jno
push
pop
xchg
mov
or
lock
sbb
lds
add
dec
inc
adc
inc
push
lcall
movsb
mov
push
lea
pop
inc
push
inc
cld
jle
pop
or
in
sbb
or
push
bound
dec
cmp
out
sbb
push
inc
jne
les
mov
imul
add
mov
mov
push
cmp
outsb
add
ja
mov
inc
test
sbb
lds
mov
jl
lcall
mov
mov
cmp
ret
cmc
notb
sub
add
pop
jecxz
insl
xor
inc
sbb
inc
add
ret
pusha
add
jmp
js
pop
xor
sbb
sub
push
push
push
mov
popa
mov
pop
bound
sbb
das
pop
fwait
rcr
and
inc
sbb
inc
data16
cmp
cmp
inc
add
out
jne
daa
bnd
adc
iret
iret
or
jne
or
jne
or
and
clc
push
mov
mov
fwait
in
roll
inc
fcomp
daa
pmullw
lock
fmuls
lea
movl
shlb
dec
sbb
inc
rolb
data16
fstl
mov
inc
mov
mov
pop
hlt
lea
inc
mov
jne
shr
add
adcb
inc
add
jle
repz
xchg
rolb
xchg
lahf
xor
scas
into
fmull
loop
das
mov
or
push
and
push
cmc
int3
das
lods
rcll
lea
cmp
jmp
xor
pop
xlat
clc
adc
cli
popf
or
mov
and
sarl
neg
loopne
rcrb
push
sub
adc
adc
mov
add
arpl
push
jl
cmp
sbb
jmp
xor
sbb
sbb
mov
xor
xor
cmpl
data16
push
xchg
insl
mov
inc
cmpsl
mov
ret
and
jmp
orl
sub
int
pusha
pusha
cmp
out
xchg
test
pushf
xor
sbb
int
mov
pop
and
and
enter
sbb
ficoml
mov
jge
cmp
ret
fwait
mov
mov
mov
je
xlat
mov
push
and
outsb
adc
pop
pop
out
mov
js
or
mov
xchg
andb
add
or
mov
call
or
rcrb
int3
or
into
inc
subl
pop
int
sub
xor
xchg
sbb
bnd
jl
mov
rcrb
sahf
and
pop
add
push
enter
and
jnp
fldcw
or
add
rorl
dec
sbb
mov
rcr
out
xchg
movl
fwait
in
jno
pop
push
pushl
lods
int
mov
and
mov
and
xchg
or
das
cmp
sbb
shlb
mov
fldt
add
mov
jnp
sub
push
mov
push
jb
dec
push
testl
and
je,pn
mov
scas
dec
mov
or
or
and
jge
push
xchg
pusha
sbb
and
rcrb
xchg
mov
dec
and
inc
dec
mov
test
push
cmp
out
pop
loop
inc
cmp
or
das
xor
push
inc
adc
inc
je
xor
loopne
dec
addr16
jns
cmp
psrlq
and
jb
and
sbb
enter
and
xor
call
adc
sti
fadds
arpl
lds
cmp
inc
adc
insb
inc
push
push
sub
pop
es
xor
push
sbb
xchg
inc
sbb
adc
sbb
adc
mov
stc
dec
lods
xor
sahf
addb
divb
and
les
and
adc
es
and
push
adc
inc
rorb
xchg
mov
ret
ja
xlat
inc
and
shlb
pop
lret
cmp
lods
sbb
xchg
pop
lods
fsubs
jg
jae
xchg
or
movsb
in
cmp
es
repnz
pop
shrl
jle
dec
sub
or
cltd
fcom
in
and
sbb
xor
add
ja
adc
mov
add
shlb
jno
add
mov
imul
xor
and
sub
aad
in
pop
inc
mov
and
js
jns
scas
shll
je
push
ljmp
lea
xor
inc
cmp
xchg
inc
sbb
add
inc
sbb
push
jne
sub
inc
lcall
std
shrb
jne
movsb
mov
jbe
test
pop
xchg
xorb
hlt
stos
push
test
ljmp
dec
and
xchg
mov
movsl
add
add
ss
out
adc
imull
ret
add
sbbl
and
dec
xchg
mov
jne
popf
in
add
add
bound
jge
insb
dec
sarb
add
int
inc
and
jns
and
pop
pop
add
outsb
cmp
jge
jecxz
imul
rolb
jo
add
inc
mov
lods
mov
addl
and
adc
mov
adc
into
lea
dec
cwtl
rclb
pop
mov
ficoml
adc
dec
dec
jg
shlb
ja
xchg
mov
mov
aad
and
mov
pop
xor
ja
xorl
mov
mov
add
lea
xchg
mov
and
mov
popa
mov
in
add
syscall
jl
push
pop
cmp
fcomp
push
mov
scas
inc
pop
cmp
push
jne
pop
mov
mov
and
jne
mov
sub
adc
std
addr16
xchg
add
mov
jbe
mov
xor
rcll
bound
xor
mov
or
mov
sbb
pop
add
lret
ret
pop
push
inc
cmpsb
daa
fdiv
cmp
or
sub
push
adc
or
or
dec
mov
test
int3
jne
cmp
cld
jecxz
roll
push
mov
adc
mov
cmp
add
add
pop
sub
les
add
mov
and
push
mov
shlb
inc
pop
and
push
inc
xchg
sbb
dec
jecxz
xchg
and
or
sbb
pop
push
and
adc
push
loopne
bndstx
call
jmp
cltd
jp
das
out
je
andb
call
adcb
xor
movsb
xor
mov
adc
push
adc
mov
pushf
in
sbb
addb
call
mov
add
mov
sbb
xor
sbb
je
add
add
xor
stc
int3
stos
imul
xchg
out
sbb
inc
or
xor
lea
cmp
jg
enter
xchg
add
mov
addr16
inc
rolb
cltd
addl
insl
movsb
and
mov
test
xor
add
adc
and
aad
add
loopne
std
xchg
addl
add
push
push
inc
mov
adc
addr16
xchg
test
push
inc
and
aas
div
mov
mov
mov
rcl
pop
lock
ret
add
in
repnz
adc
jno
dec
sub
jo
and
fildl
out
mov
je
movsl
ja
xlat
add
pushf
or
or
cmpsl
mov
cmp
je
or
ljmp
xor
add
sbb
sete
rorb
nop
mov
cmpb
sti
xchg
mov
ret
js
hlt
jae
movsbl
or
mov
add
sbb
mov
add
sbb
mov
jmp
enter
add
ja
ret
incl
and
dec
add
jmp
shl
or
add
push
stc
add
mov
jne,pt
jb
cltd
and
add
sar
and
rolb
add
scas
push
stos
hlt
clc
xor
ss
subb
cmp
jecxz
sbb
inc
jne
push
jg
or
adc
or
dec
aaa
sub
jne
test
sbbb
sahf
add
fidivs
push
lds
xchg
mov
test
jbe
jmp
add
ret
or
mov
rolb
add
pop
adcb
clc
push
add
outsl
fisttpll
sbb
je
jle
mov
sarl
out
rcrb
jge
mov
mov
mov
add
movb
jne
icebp
imul
rolb
push
repnz
add
aaa
lahf
push
ret
or
pop
add
mov
mov
nop
add
add
pop
and
mov
dec
push
pop
inc
test
je
lock
push
lea
push
lret
or
pop
cmpsl
mov
fidivl
sbb
add
jmp
add
and
inc
and
dec
cmpsb
mulb
and
sbb
notb
mov
maskmovq
testl
stos
sub
and
add
nop
je
add
loop
sbbb
repz
aaa
pop
push
jmp
push
loopne
xchg
push
push
jl
out
push
push
mov
cmp
out
fcomps
pop
xlat
cltd
outsb
pop
push
push
fstpl
lock
push
pusha
or
leave
add
cmpsb
mov
or
cmp
rcll
xor
nop
push
and
cmp
push
add
in
adc
shlb
mov
in
pop
cmpb
cmp
jno
push
adc
push
lds
mov
dec
jns
push
add
into
mov
and
push
adc
daa
insb
or
mov
sub
nop
lahf
inc
sbb
rcrb
mov
call
xor
lret
shll
jns
mov
inc
iret
push
xchg
pusha
fsubl
cmpl
add
aaa
add
mov
std
or
popf
fistl
flds
shll
or
inc
ficoml
adc
scas
rol
cmp
dec
xchg
aas
push
inc
test
rcrb
rorb
popf
jo
rcrb
ja
dec
push
jg
jge
and
cli
push
mov
dec
fwait
dec
push
add
int3
add
sub
popf
xchg
scas
movsb
xchg
scas
pop
push
daa
icebp
daa
loop
mov
inc
shrb
or
xor
push
shll
adc
fs
xchg
aam
imul
sbb
add
add
rclb
push
push
pop
aam
mov
mov
push
and
sahf
mov
call
push
jmp
mov
nop
adc
pop
inc
add
mov
xchg
inc
call
pop
fwait
sbb
ret
mov
fidivl
pushf
add
add
int3
int3
mov
xor
scas
sbb
icebp
aas
sti
push
pop
cmp
loopne
rorb
shl
je
ds
lods
pop
sub
cmpsl
call
out
das
fwait
sub
push
es
and
cmp
or
xor
pop
pop
dec
notl
xchg
mov
add
jo
test
inc
adc
and
aam
dec
mov
mov
mov
rclb
fcomp
xchg
push
adc
dec
aam
cli
xchg
and
adc
divl
clc
jl
cwtl
loopne
aad
mov
fdivrl
pop
jge
sub
nop
nop
out
push
sbb
sbb
daa
movsbl
shl
loope
arpl
call
mov
decl
mov
add
test
fsub
inc
lcall
leave
sbb
lret
movb
les
push
sahf
xor
cmp
add
or
decl
cmp
mov
nop
dec
dec
dec
cmp
add
dec
mov
addr16
insl
xchg
jns
and
mov
inc
outsl
dec
iret
mov
sub
scas
and
sbb
hlt
loope
push
mov
stc
mov
adc
les
outsl
popa
hlt
mov
xchg
xor
les
push
pop
ret
dec
sbb
push
test
dec
loope
es
inc
xchg
dec
in
stc
test
pusha
rolb
push
scas
inc
inc
mov
mov
pop
inc
jmp
lods
jge
lock
jp
stos
mov
jae
inc
pushl
or
mov
mov
ljmp
mov
add
mov
add
clc
dec
push
push
imul
or
jo
jecxz
es
hlt
mov
add
dec
mov
mov
mov
add
mov
add
movzbl
cmp
outsl
push
mov
inc
mov
mov
cmp
jl
mov
clc
addl
jnp
mov
sub
pop
jae
lea
or
orb
or
sti
or
add
add
push
mov
jp
insl
push
nop
and
or
ljmp
cld
push
leave
push
xor
mov
inc
call
jne
jecxz
scas
pop
mov
push
das
or
fwait
jb
push
icebp
xchg
xchg
pushl
cmp
add
cld
mov
inc
mov
push
jno
inc
push
pop
add
fcmovb
mov
xor
push
mov
push
push
nop
cmp
adc
gs
clc
in
aas
daa
fs
in
cmp
push
and
xor
lods
les
clc
ret
repnz
cs
sarl
inc
lret
cmp
inc
pop
sti
inc
push
enter
xchg
jle
fbstp
cmp
pushf
test
pop
lret
push
scas
and
jo
bound
mov
adc
mov
mov
xor
dec
loopne
xor
popa
mov
inc
push
hlt
shll
fisubs
jmp
in
add
into
xchg
add
dec
rorl
mov
orl
sbbb
push
movsl
pop
dec
pop
loop
push
mov
sub
jmp
in
mov
jp
push
test
xchg
mov
fwait
add
iret
xchg
mov
test
add
push
xchg
test
rcl
imul
lcall
add
enter
iret
jbe
mov
sbb
mov
aam
jle
add
xchg
mov
in
mov
mov
adc
jp
push
cmp
popf
dec
pop
das
dec
add
pop
add
inc
dec
xor
pop
xor
stos
test
fstpt
test
add
ljmp
push
test
fists
pop
jno
daa
push
fcomps
and
push
push
cmp
das
dec
cmp
push
jle
cmpsb
rol
inc
push
mov
pop
hlt
mov
jmp
pop
ret
mov
dec
and
enter
nop
popa
cmp
adc
test
mov
bnd
cli
sub
iret
loope
sarl
mov
movl
sti
or
xchg
fldt
xchg
movsl
mov
sub
mov
es
add
adc
inc
fscale
cmpsb
mov
or
add
dec
xchg
rcl
mov
into
cmpsl
or
add
jnp
in
shrl
test
lds
push
dec
aad
stc
fcomps
mov
pop
cmpsb
pop
adc
jo
popf
aas
jb
movsl
sub
add
je
xor
add
push
adc
mov
in
inc
xchg
push
je
adc
jne
mov
loope
call
add
xor
shufps
dec
and
cmpsb
mov
inc
mov
mov
int3
and
mov
sub
int3
aam
pop
test
js
sub
stc
sbb
aam
and
xor
dec
movsb
ljmp
adc
sbb
pop
loop
int3
inc
xor
jo
push
mov
push
adcl
cmp
sbb
ficoml
roll
loopne
ss
and
dec
sti
lock
dec
movsl
fldcw
mov
sub
inc
imul
test
jbe
jle
add
addl
ret
add
push
aam
insl
and
xchg
out
add
popf
fiadds
mov
adcl
xchg
or
js
je
out
out
fdivl
mov
popa
daa
loopne
je
aad
cmovge
pop
push
enter
outsb
jecxz
mov
add
mov
cmp
maxps
popa
loop
mov
sbb
push
mov
adc
adc
push
dec
fwait
movl
aas
push
cmp
rolb
and
mov
sub
fwait
jecxz
pop
fdivl
adc
inc
add
leave
push
insb
or
fistpl
adc
cmpsl
mov
and
push
pop
adc
add
in
xchg
xor
int
lret
aam
push
popa
add
popf
jmp
add
or
xor
leave
ret
or
in
mov
pusha
into
sbb
and
lcall
popf
pop
lea
pop
xchg
or
or
or
icebp
sbb
gs
icebp
test
xor
inc
incl
or
rcr
popl
inc
enterw
jno
jmp
ret
add
jmp
push
lret
loopne
test
or
and
sbb
pop
popa
dec
movsl
lcall
push
push
pusha
jmp
pop
and
repz
addr16
enter
cld
fdiv
pop
bound
into
cmpsb
fcoms
ja
xor
mov
jne
cmp
sti
mov
pop
sub
test
sub
cmp
pop
push
push
sub
in
jg
jb
xchg
cmp
out
adc
or
clc
in
xor
cmp
sub
or
xor
insl
sbb
sbb
pop
clc
jne
mov
mov
cs
js
gs
fs
mov
pop
leave
mov
xor
cmp
and
shlb
bnd
fsubrs
push
jno
out
cmp
jmp
fisubrs
xlat
mov
push
adc
push
push
call
and
jge
sbb
sahf
xor
sahf
jno
mov
insb
call
add
dec
push
mov
pop
or
xor
shr
or
jae
jp
add
inc
jmp
add
mov
dec
sbb
dec
jbe
cmpsl
xchg
ret
xchg
test
mov
mov
jb
rcr
or
xor
jae
push
adc
leave
loope
xchg
dec
inc
or
xor
in
xor
ret
cmp
xchg
mov
xor
and
lahf
jns
xlat
mov
sub
fs
xor
and
movb
mov
jle
dec
repnz
daa
push
inc
notl
add
pusha
loopne
jo
or
addb
jae
xor
xchg
out
mov
lea
repnz
pop
jmp
push
js
sbb
fcoml
pop
pop
sub
mov
add
mov
push
and
add
fwait
or
insb
in
movsl
inc
xchg
sbb
xor
inc
loope
sahf
test
mov
bound
xchg
and
xchg
das
loope
lcall
lahf
std
pop
dec
rcll
lea
push
or
pop
or
adc
sbb
mov
add
or
inc
xor
xchg
mov
dec
subl
andb
cmpsb
dec
xor
sbb
push
movsl
pop
and
enter
add
add
pusha
dec
ss
jbe
inc
pusha
push
ret
lods
xor
lret
orb
cmp
stos
xor
dec
pop
lods
sarb
mov
mov
push
sub
pop
pop
lret
xchg
push
adc
push
aad
cwtl
outsb
shlb
or
movsl
jne
jg
push
pushf
sbb
xor
popa
cmc
and
aam
sbb
daa
dec
inc
cmpsl
push
mov
divl
movsl
sbb
aam
add
jnp
lods
arpl
cwtl
es
or
test
xchg
sbb
adc
test
and
mov
push
sbb
sbb
jp
gs
sbb
popf
ror
enter
pop
jecxz
ret
fildl
loop
cwtl
loope
jge
mov
sbb
push
inc
ljmp
mov
pop
inc
aam
cmp
push
or
dec
sti
lock
mov
in
ret
xor
mov
fsubp
fadds
sub
xlat
ret
add
jb
cmp
fnsave
ja
icebp
loope
and
sub
lods
pop
jb
cld
adc
push
or
mov
cs
inc
cmp
or
push
test
inc
mov
arpl
sbb
add
pusha
or
jbe
roll
ror
shrl
add
stc
pushl
adcb
jecxz
or
push
pop
fsubs
mov
rcr
add
jbe
push
mov
cltd
fdiv
jg
jmp
pop
jecxz
sub
mov
jmp
jo
mov
add
out
cmp
cld
into
push
clc
ret
mov
cwtl
stos
add
push
fucomp
pop
outsb
mov
lea
iret
movsb
dec
adc
dec
inc
lock
mov
push
dec
mov
push
stos
call
push
adc
and
movsl
sbb
cmp
xor
adc
shl
ds
xlat
into
sub
push
enter
lods
jb
cmp
jae
mov
inc
mov
inc
inc
aaa
cltd
mov
dec
popa
push
ret
push
lods
imul
pop
push
sbb
shlb
je
mov
aad
mov
push
inc
adc
add
stc
hlt
sbb
push
mov
je
mov
js
push
loop
xorl
mov
mov
pop
mov
mov
das
je
or
push
cmp
add
sti
jg
cmp
je
cmp
jne
mov
sbb
add
adc
push
push
mov
pop
dec
sti
out
mov
xor
push
cmpsb
mov
sub
inc
adc
je
testl
lods
adc
in
mov
shlb
push
lea
and
lcall
je
sub
inc
jmp
inc
and
xchg
push
pop
mov
pop
xor
adc
pop
or
mov
mov
lock
cmpsb
repnz
je
aam
mov
addb
sbb
inc
add
adc
loop
hlt
add
ret
push
mov
push
cld
inc
xchg
cmp
add
cmp
jne
outsb
hlt
cmpb
add
jbe
pop
cli
mov
in
aad
xor
jle
insl
sub
sahf
jb
add
xchg
mov
jne
sub
sbb
inc
sub
jge
mov
add
cmp
shrb
or
sarl
jo
adc
outsl
or
call
ret
sub
jmp
loopne
jne
mov
pop
in
pop
aam
insb
push
scas
or
mov
data16
mov
add
jae
out
js
movl
mov
das
shl
add
jmp
pushf
aas
insb
sti
and
ret
hlt
cmpsb
and
or
cltd
cmp
js
fs
jne
xor
fcoml
lock
std
pop
mov
dec
or
push
mov
jmp
or
xor
or
call
push
sub
ret
insb
mov
push
xor
sub
add
or
aad
add
push
int
outsl
add
and
cmp
mov
xor
and
es
sub
sub
and
mov
jmp
or
jl
or
adc
std
pop
push
pop
cwtl
inc
test
loopne
pop
jbe
loopne
pop
push
push
hlt
pop
arpl
pop
and
popf
add
je,pn
test
jne
pop
add
roll
sar
sub
jb
adc
adc
test
and
jae
movb
inc
and
push
sub
jb
adc
pop
sar
inc
push
or
mov
inc
or
xchg
ljmp
adc
add
mov
or
loopne
add
daa
rol
fwait
sbbb
inc
push
roll
lcall
and
jg
mov
xchg
xchg
adc
notb
inc
mov
loope
popa
pop
leave
ret
out
pushf
add
pop
ret
adc
xchg
add
out
imul
cmc
jle
test
adc
mov
push
push
push
dec
loope
sub
add
lods
stc
test
xchg
mov
jg,pn
jnp
push
scas
mov
cmp
fs
lea
lret
push
loope
add
testl
int
xor
mov
or
mov
sbb
cmp
mov
adcl
add
out
push
push
mov
jne
ret
inc
push
in
out
xor
mov
sarb
leave
mov
repz
jne
push
mov
cmpsl
xchg
cmp
or
test
imul
push
andl
xorl
out
cltd
aaa
jp
inc
sub
pusha
push
push
imul
pop
ret
cwtl
cs
add
xchg
pop
inc
mov
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
outsb
push
sbb
pop
aas
push
xchg
mov
push
sub
std
push
mov
push
mov
mov
adc
ds
jo
movd
lds
inc
or
dec
cmp
cmpsl
push
cmp
popf
int
lahf
xchg
rolb
lea
pop
outsb
je
pushl
inc
adc
movsl
scas
lret
jnp
std
pop
lea
outsb
fsubr
jae
pop
push
clc
push
scas
push
je
repnz
inc
pop
sub
cmp
pop
inc
mov
pop
psubd
lea
ljmp
sub
lcall
out
cmp
rcrb
popf
out
and
jbe
mov
aaa
das
push
gs
add
popa
jo
sti
inc
inc
fwait
cmp
sub
pop
pop
nop
push
jle
add
out
cmp
xorl
popf
mov
mov
push
movsl
xchg
imul
or
add
mov
sbb
push
loopne
shl
jae
push
inc
inc
add
xlat
jmp
xor
push
fs
xchg
insl
add
bound
sub
imul
shlb
push
cmp
adc
cld
pop
mov
push
and
mov
mov
rolb
mov
or
std
sub
pusha
addl
js
sbb
inc
push
or
stc
loop
or
add
addr16
and
je
push
xor
call
add
push
add
xchg
jle
add
pop
popa
push
or
xor
cmpsl
inc
add
add
add
or
sti
pusha
jb
push
pushl
lea
sub
call
jbe
push
adcl
in
outsb
call
dec
mov
mov
xchg
cmp
and
and
gs
push
xor
or
push
ja
sub
fnstcw
repnz
decl
scas
pusha
pusha
in
cmp
sub
and
inc
inc
push
push
popf
mov
mov
addl
addb
xchg
push
dec
push
cwtl
xchg
pop
popa
push
inc
dec
pop
movsl
push
inc
lahf
movsb
pop
sti
lea
or
fdivs
pop
fstpl
pop
or
and
xchg
cmp
xchg
or
leave
add
sbb
xor
jg
test
and
cmp
fsubl
jns
xor
arpl
dec
or
int3
rolb
fstpl
bswap
push
xchg
xor
test
push
add
cmpsb
inc
add
add
in
jle
lods
ret
jo
mov
syscall
push
pop
cwtl
addl
dec
push
mull
sbb
pusha
cmp
add
pop
loope
push
lret
or
lret
jne
mov
aad
aas
push
fnstsw
xor
insl
jnp
das
movl
and
js
fcmove
cmpl
rcr
lahf
sti
loopne
sub
movsl
cmc
push
add
mov
sub
fs
cmpsb
or
lods
adc
xchg
ret
jmp
bound
and
sbb
out
jno
cmp
mov
sbb
es
mov
mov
popf
jne
push
call
jne
lock
xor
incl
aas
stos
fiadds
rcrb
push
cmpl
test
test
pop
or
dec
cmp
adc
lods
pushf
jbe
push
adc
mov
sub
ficomps
stos
jnp
pop
mov
or
sbb
mov
icebp
and
insb
mov
lods
ss
ds
and
pop
or
dec
xlat
sbb
fidivrs
mov
push
add
jne
aam
fcmovnb
push
and
inc
pop
jne
pop
call
sbb
add
insl
in
push
sub
in
xor
mov
pusha
cltd
jecxz
jmp
sbb
sub
mov
xchg
sub
mov
inc
adcb
xlat
or
cmp
pop
lea
fldl
add
je
inc
mov
sub
dec
mov
pusha
pop
je
sti
mov
xchg
and
div
jmp
fisttpl
int
sub
xchg
out
sub
stos
and
inc
and
xchg
mov
sub
decb
adc
cmpl
andb
xor
mov
pop
xchg
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sbb
pop
pushf
inc
and
xchg
orps
ret
addb
sbb
push
sub
repz
js
aad
int3
dec
pop
arpl
pop
and
mov
dec
push
sub
push
rclb
mov
add
rcll
int
and
push
adc
add
sbb
xor
push
mov
sbb
or
inc
adc
leave
xchg
cwtl
xchg
repnz
adc
pusha
sbb
enter
rcrl
push
mov
or
or
jne
mov
test
xor
xor
mov
sarb
pop
scas
sbb
ljmp
pop
pop
xor
or
inc
mov
mov
jp
push
pop
jmp
shr
mov
stc
sub
enter
or
or
and
add
push
sbb
jno
adc
or
adc
or
mov
sbb
fstpt
das
dec
sub
mov
punpckhdq
hlt
or
fwait
mov
fstl
stc
sti
es
sti
sarb
sbb
pop
push
mov
mov
mov
mov
enter
and
inc
test
mov
sbb
aaa
pop
or
push
mov
dec
aam
jno
in
and
push
daa
aaa
add
dec
add
dec
add
ss
outsl
add
in
gs
jne
sbb
call
inc
sub
add
adc
adc
lret
je
mov
test
nop
mov
fwait
sbb
and
pop
sbb
pop
jae
testb
pushf
add
pop
mov
and
arpl
icebp
push
adc
mov
dec
js
adc
into
inc
mov
movsb
sbb
jbe
push
adc
ds
loope
inc
jne
ss
adc
lcall
and
add
in
add
jecxz
std
fidivs
cmp
jne
or
mov
push
lds
jbe
jo
out
mov
mov
out
sub
mov
je
or
inc
ds
cs
int
add
cmp
sub
js
imul
bound
andl
or
ds
cmp
adc
adc
rorl
xor
hlt
ret
sub
cwtl
and
sub
mov
mov
cmp
jge
mov
inc
loopne
fistpl
cmpsl
insl
outsl
out
test
cltd
mov
cmc
pusha
je
dec
jge
divb
push
out
xor
inc
or
enter
in
data16
mov
jns
mov
inc
xchg
push
add
jae
cmp
xor
inc
cmp
lea
adc
jmp
jo
inc
hlt
mov
lock
hlt
xor
or
mov
mov
sbb
add
in
lahf
ret
mov
cmp
ljmp
cmp
pop
enter
cld
movsl
out
pop
jb
les
ret
cmp
fisubl
mov
mov
mov
aaa
mov
fisttpl
ret
mov
or
and
add
subb
push
fdiv
push
and
lea
test
push
out
add
int
and
shr
sahf
aam
pop
jae
cmpl
mov
inc
jne
addr16
mov
push
mov
adc
test
lea
add
je
xor
xchg
mov
stos
mov
out
adc
sbb
dec
add
pusha
scas
xchg
add
push
lcall
pop
rolb
fisubrl
lock
and
fistl
fsubl
out
push
add
loopne
and
test
add
or
sbb
mov
cmp
dec
push
in
fsub
push
adc
pop
lock
cmp
sbb
push
cmp
dec
pop
push
test
pusha
sbbb
je
adc
call
and
adc
icebp
js
adc
cli
sbb
cmp
push
sub
icebp
mov
mov
aas
push
arpl
push
mov
xchg
pusha
adc
and
cmp
push
out
adc
mov
and
xchg
push
pusha
clc
add
jo
push
and
xchg
add
sbb
pushf
bound
sbb
inc
pop
push
cwtl
lret
lds
dec
mov
rcll
push
sbb
dec
dec
dec
jne
jns
mov
les
add
and
push
sbb
lret
adc
lds
pop
inc
and
in
shr
mov
mov
xchg
cmp
cmpl
out
dec
lcall
loop
int3
lahf
lret
jnp
js
inc
shlb
mov
out
sub
dec
lods
fdivrl
pop
or
xchg
js
jae
loopne
mov
mov
enter
mov
inc
dec
aam
ds
fisubl
and
sbb
js
sub
nop
rcrl
sub
push
gs
push
fistl
ljmp
mov
test
fs
push
mov
adc
fistps
inc
mov
pop
xchg
inc
cmp
jl
jmp
pop
add
fisubrs
mov
sbb
pop
cmp
sbb
add
rcll
aas
imul
pop
leave
leave
enter
push
or
pushf
movl
mov
test
push
mov
mov
mov
jmp
insb
xor
lea
mov
push
fsubs
jge
dec
adcb
aad
out
dec
rep
clc
int3
mov
shlb
aam
adc
add
cmp
jmp
lock
dec
clc
inc
push
jge
and
xor
xlat
sarb
pop
jo
jmp
inc
ds
lret
clc
inc
js
push
push
adc
lods
or
sbb
push
inc
add
push
addr16
popa
mov
jl
daa
add
or
pop
int3
cmpsb
bound
nop
or
aas
ret
or
pop
pusha
dec
adc
aas
sbb
cs
sbb
sbb
xchg
cwtl
hlt
sub
mov
cmp
mov
add
push
fwait
cmpsb
sbb
rolb
lsl
mov
jo
icebp
rol
inc
inc
les
and
imul
es
roll
mov
shrb
loopne
jbe
mov
or
arpl
jae
sbb
popa
pop
mov
sub
pop
mov
cmp
lock
push
push
fs
mov
fdivs
add
ljmp
or
je
and
push
push
fmuls
daa
pusha
andb
add
testb
push
insl
lods
test
test
jge
addb
cmp
or
pop
inc
dec
nop
push
add
cmp
nop
adcb
lods
mov
pusha
cmp
mov
add
pop
ljmp
xchg
pop
ret
pushl
push
iret
mov
ja
xor
lods
cmpsl
jo
movb
jmp
inc
out
jo
push
add
insb
xchg
lock
cmp
je
jne
or
add
fsubs
push
rclb
add
dec
add
jle
inc
hlt
xor
mov
add
pop
iret
mov
pusha
push
pop
mov
daa
mov
stos
jge
xlat
add
dec
loopne
and
or
bound
movsb
jnp
cmp
xchg
test
sub
bound
mov
sahf
orb
push
xchg
push
test
cmp
mov
sub
add
enter
pop
fisubrl
data16
int3
sbb
dec
cmp
adc
pushf
or
lock
cld
dec
xchg
hlt
imul
test
cmpsl
mov
stos
popf
add
mov
fsubl
dec
stos
cmpsb
or
loop
aad
popa
jo
add
xchg
mov
push
mov
stos
cmp
jo
lea
push
lds
cwtl
add
mov
pop
lahf
sub
hlt
push
leave
loopne
test
xor
or
adcb
iret
inc
pusha
cmp
or
adc
pop
inc
aaa
pop
dec
stos
xor
mov
add
popa
adc
pop
loopne
loope
mov
cli
loopne
ja
incl
adc
jbe
in
outsb
cmc
pushf
push
and
xlat
mov
push
pop
sbb
adc
or
or
cmpsb
inc
inc
sbb
sbb
mov
ljmp
inc
sub
pop
movl
add
or
add
decb
push
lahf
imul
dec
sbb
xor
adc
add
cmp
xor
jbe
ret
int3
add
mov
cmc
cwtl
dec
add
sahf
test
inc
sbb
cmp
popa
add
add
arpl
add
cmp
inc
xor
iret
sub
data16
jo
jg
xchg
movsl
sub
push
imul
jnp
add
xor
lret
jbe
sbb
cmp
test
pop
sbb
sub
xchg
sub
or
ret
xorps
or
or
xchg
adc
xchg
mov
mov
mov
or
ret
cmp
add
in
jne
outsl
aaa
dec
fmuls
jecxz
and
jb
fcompl
inc
xchg
aaa
mov
xchg
mov
push
adc
repnz
xor
inc
mov
xor
jge
inc
ret
and
fstps
jb
pop
leave
mov
testl
xor
and
push
lds
inc
push
and
cmp
dec
cmpl
mov
or
mov
cmp
mov
addr16
and
adc
inc
loop
sbb
add
int
push
jp
fsubr
adc
adc
cmp
dec
push
out
faddp
sti
sub
fisubrl
adc
push
push
add
and
mov
inc
mov
mov
jecxz
mov
or
roll
push
and
sub
mov
dec
ja
add
push
mov
xlat
mov
push
push
or
xor
pop
inc
cmp
cmp
lret
and
shll
sbb
aam
rolb
lcall
pop
adc
stos
aad
inc
or
and
xorl
sbb
imulb
mov
inc
xor
add
push
mov
dec
and
dec
aam
mov
and
push
xlat
add
data16
les
xorl
jnp
lods
repz
push
adc
mov
les
push
mov
sbb
dec
scas
jcxz
inc
test
mov
mov
sbb
mov
cmp
shlb
sbbl
inc
js
or
or
jmp
and
xor
negb
add
xchg
mov
mov
mov
jle
xor
repz
push
orl
cwtl
aaa
cmpsb
push
ret
sub
xor
mov
xor
adc
xor
lret
or
push
pop
mov
adcb
hlt
pop
lcall
sbb
mov
in
clc
clc
scas
shll
mov
and
mov
pop
ss
pop
mov
mov
mov
or
mov
inc
lods
add
daa
dec
pop
jecxz
lods
or
ljmp
xor
dec
push
push
push
lds
push
xor
sbb
cmc
add
test
mov
xor
sbb
inc
jb
aam
mov
ret
test
push
sub
and
push
das
inc
mov
lret
popf
mov
xor
pop
sbb
jmp
adc
push
xchg
cwtl
jb
xchg
add
add
mov
test
xchg
es
sub
mov
mov
sub
clc
movsb
adc
rorl
data16
shl
sar
pop
cmp
jbe
adc
xchg
jmp
mov
data16
pop
add
lahf
and
push
sahf
inc
loopne
push
mov
fidivrs
popf
lea
push
push
jae
pop
xchg
or
lret
sbb
pop
jbe,pn
fdivl
ret
mov
jb
mov
dec
sbb
loopne
mov
jo
adc
push
outsb
push
push
sub
enter
jne
or
mov
cmp
jne
cmp
lods
sub
sbb
fsubr
adc
aaa
or
jo
adc
sub
das
leave
inc
pop
mov
xchg
fldcw
mov
jne
and
jmp
arpl
or
pop
inc
add
rcll
sbb
rorb
push
push
es
rorb
pusha
adc
aad
cmp
xor
dec
pop
jae
pop
or
inc
cmpl
mov
iret
jmp
mov
add
push
push
outsb
and
mov
add
lock
lods
mov
push
sub
inc
lret
cs
mov
add
rolb
outsl
test
push
push
or
push
aaa
in
sbb
out
cmp
cmp
psrad
cmpl
pusha
ficoml
add
fs
pop
pop
cmc
jnp
fiadds
and
fisubl
mov
or
rcrb
mov
es
lea
rcr
or
sub
push
jno
mov
test
sub
push
pop
mov
jmp
jne
shr
cmp
mov
pop
push
and
and
or
sbb
mov
fcoms
inc
shl
shr
push
mov
imul
scas
push
leave
sub
cmp
rcrb
add
roll
testb
das
movsb
or
or
push
bound
push
mov
fsubrl
and
sarb
or
push
loop
jb
mov
sub
imul
cwtl
push
or
jbe
rclb
in
mov
pop
movsl
ss
cmpl
cmp
je
cwtl
jmp
hlt
mov
mov
jp
jne
jge
sbb
mov
sub
add
mov
xor
pusha
jne
add
inc
ja
shlb
dec
pop
add
pop
shll
sbb
push
add
adc
imul
sub
jmp
cmc
add
pop
subb
jne
ret
repz
ficoms
ret
mov
adc
or
adc
movsl
addl
push
and
jb
lock
leave
adc
push
and
ret
jmp
adc
in
lret
sub
adc
and
mov
inc
dec
xor
cmpsb
jne
lods
fcomi
jmp
enter
hlt
lods
xorl
mov
or
push
lret
lods
cld
scas
inc
loopne
in
push
pushl
push
ds
pop
addb
rcl
neg
sbb
inc
mov
cmpsl
jp
cmp
dec
jge
jae
inc
cmp
mov
sar
aas
mov
pop
iret
cmp
lcall
dec
fbld
imul
mov
xchg
dec
adc
xor
or
inc
aam
lods
fldl
inc
mov
arpl
adc
or
jb
adc
fists
adc
adc
adc
adc
nop
lret
and
adc
adc
adc
adc
imul
loopne
add
insb
jae
add
sar
or
inc
mov
clc
push
mov
cmpw
je
sbb
lret
xchg
mov
insb
sahf
outsb
mov
enter
les
shl
mov
leave
outsb
or
push
in
ret
adc
lahf
push
jb
das
dec
add
sub
cmp
fcoms
mov
or
test
pusha
popf
mov
into
mov
xchg
cmp
jl
inc
and
sbb
cli
addr16
jmp
cmp
mov
xorb
ja
bound
loopne
adc
or
out
sbb
push
sbb
es
in
mov
pop
push
lea
in
mov
add
adc
mov
out
stos
mov
test
cmpsl
push
aas
repnz
aam
nop
xchg
fdivrs
jne
pushf
ss
or
xchg
or
mov
lods
push
add
xor
add
imul
sbb
outsb
nop
xor
into
or
push
add
or
movb
jmp
jo
mov
xlat
negb
pop
and
sbb
mov
movsb
pushf
loope
je
add
mov
movsb
pop
and
push
mov
pop
lea
jbe
push
jp
pop
jnp
cmovs
cs
mov
sbb
mov
mov
inc
pusha
outsl
test
test
stos
cmp
jg
aam
mov
push
mov
test
repnz
in
cmpsb
jne
testl
mulb
fimuls
dec
cmp
jbe
push
stos
sub
test
test
sub
hlt
mov
and
mov
push
ss
cmp
in
or
fstl
jne
mov
adcl
test
loop
mov
movsb
mov
sub
jnp
aas
loope
movsl
xchg
push
and
jmp
sbbb
mov
jg
pcmpeqb
xor
jle
jge
cmp
into
or
pop
add
sbbl
pop
xchg
call
jmp
sbbb
xchg
add
lret
lods
dec
push
je
or
dec
push
mov
jl
and
sbb
aad
fdiv
push
out
and
cmp
push
filds
sub
cmp
xlat
jl
ret
pop
lock
jmp
xchg
inc
in
push
adc
test
add
push
add
pop
enter
add
test
test
or
les
test
test
in
pop
adc
adc
cltd
mov
xlat
arpl
inc
dec
lods
push
add
sub
mov
ds
mov
mov
pop
pop
cwtl
repnz
inc
cmpb
mov
fstps
sbb
je
pop
movsb
adc
cmp
sbb
and
push
sbb
adc
pop
sbb
nop
imul
out
cmc
mov
filds
push
setno
outsl
insb
inc
dec
addl
xor
inc
dec
lea
pop
push
pop
jle
add
rorb
out
rol
mov
add
cwtl
adc
dec
jno
mov
pop
stc
adc
fidivl
dec
cmp
dec
lcall
adc
or
stos
cmpsl
icebp
mov
sub
mov
clc
imul
push
or
sbb
or
shl
pop
mov
out
popa
lea
andb
outsb
pop
xchg
subb
jno
mov
inc
jg
add
leave
into
clc
xchg
repz
add
cld
ja
push
and
adc
roll
push
push
pop
stos
cli
aas
mov
cmpl
push
mov
addb
sbb
mov
jo
add
ss
push
popf
dec
syscall
lahf
adc
or
and
xlat
mov
mov
cmp
or
mov
cmpsl
mov
leave
mov
mov
xor
in
sub
rcrl
mov
xor
ljmp
std
xchg
fimuls
stc
jbe
mov
fsubl
cltd
pop
mov
pushl
sub
push
scas
dec
rcll
scas
dec
out
shll
call
aas
or
inc
mov
xor
inc
push
add
in
jne
adc
loop
icebp
push
mov
pop
adc
sbb
mov
or
jns
jne
add
sub
pop
sub
sti
mov
adc
pop
bound
xor
inc
dec
call
xchg
inc
push
popa
cmp
add
hlt
push
cmp
inc
push
scas
repnz
ja
mov
mov
rcrb
adc
push
lods
add
pop
mov
int3
andl
lea
and
mov
mov
jbe
ret
adc
cmp
cmpsb
push
out
daa
loope
add
push
dec
pop
mov
mov
leave
mov
pop
outsl
mov
and
adc
add
stos
lea
push
mov
movsb
sub
sub
add
inc
pop
mov
arpl
mov
inc
lcall
push
add
leave
inc
mov
push
aam
and
int
lcall
lock
cmp
jne
add
mov
push
xchg
adc
sub
pop
ljmp
and
cld
xor
pop
sbb
pop
scas
pop
adc
incl
add
icebp
push
sbb
add
push
jecxz
xchg
mov
pusha
xchg
push
xchg
bound
sbb
xchg
cmp
pusha
les
push
push
and
cld
rclb
fs
addr16
xchg
sub
mov
add
adc
loopne
and
stc
add
daa
push
add
inc
daa
popf
add
ss
add
les
dec
inc
adc
add
int3
push
push
push
pop
fs
jmp
xor
cli
idivb
xchg
int3
and
out
or
inc
push
mov
or
stos
lret
insb
aad
sub
je
enter
dec
pop
or
enter
sahf
jmp
inc
rolb
loop
popl
mov
cltd
in
sbb
mov
add
jg
jmp
jae
lea
jmp
cmpl
sub
shll
int3
cmp
cmp
clc
cli
rcll
pop
and
and
mov
mov
ljmp
pushf
sbb
in
pusha
outsl
sub
sbb
iret
sti
repnz
xchg
inc
imul
fidivl
sahf
pop
aad
and
add
cmpsl
hlt
rorb
jl
mov
jbe
sub
fsts
popa
sbb
sbb
add
cwtl
ljmp
rclb
test
jo
aas
xchg
fldl
in
sbbb
jb
mov
pop
and
or
or
xor
andb
xor
mov
cmp
adc
inc
adc
sbb
lods
and
add
popa
sub
repnz
or
mov
rorb
pop
test
mov
test
sub
push
imul
sbb
sub
push
jcxz
iret
cltd
mov
and
shl
sbb
cmp
push
push
add
push
fwait
cmp
and
and
push
je
mov
push
jb
popa
push
rolb
sbb
dec
dec
xor
sbb
pop
loop
xchg
js
push
call
stc
xchg
jns
enter
outsb
or
push
test
push
bound
ret
cmpsb
add
push
push
push
ja
or
arpl
xor
lea
lds
sub
pop
push
mulb
xchg
fadds
mov
mov
pusha
roll
pop
repz
and
push
lea
xor
and
imul
pop
or
in
mov
add
nop
nop
mov
nop
nop
add
je
add
and
push
xchg
icebp
test
add
icebp
pop
add
pushf
pop
pushl
push
sub
push
add
inc
xchg
adc
sbb
dec
ja
jmp
negl
and
xorl
mov
pop
xor
testb
adc
pop
sbb
adc
nop
jo
cmp
dec
push
add
sbb
int
push
mov
je
pusha
mov
cmp
data16
rcrb
cmp
arpl
dec
test
dec
int
imul
push
push
test
adc
add
aaa
sub
clc
sbb
cld
cmp
stos
test
rorb
addr16
movsb
nop
dec
or
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
adc
sbb
lods
sub
stos
add
pop
pop
pop
xor
add
or
cmp
jae
rclb
xor
cld
inc
sbb
mov
hlt
jne
push
js
cld
loopne
add
sub
jne
mov
cld
lods
push
mov
adc
call
dec
add
fsubrs
mov
insb
pop
jnp
xlat
or
inc
push
cmp
xor
paddq
or
sub
cmpl
mov
loopne
mov
lret
in
or
pusha
push
cmp
mov
sub
neg
sbb
and
idivb
shl
jo
movzwl
push
adc
test
les
aas
inc
fistps
mov
mov
je
xchg
xor
adc
dec
or
sub
test
adc
dec
fldt
xchg
inc
or
test
mov
mov
adc
sbb
clc
and
insb
incl
jne
cmp
jbe
or
jne
loopne
pop
das
adc
dec
stos
cmp
pop
rorb
and
mov
sub
mov
out
jbe
jmp
or
rcll
ja
addr16
ljmp
jecxz
jecxz
xchg
adc
sbb
mov
lea
jmp
add
mov
jns
adc
push
lret
ljmp
jp
insb
xor
jl
cmp
sbb
std
sub
or
adc
or
sub
fisttpll
pop
or
into
adc
lods
dec
sarb
icebp
js
push
cmpl
roll
inc
jecxz
lcall
mov
push
sbb
stc
mov
sub
and
cmp
sarb
adcb
aad
and
mov
cmp
and
adc
add
inc
fwait
add
jmp
stc
stc
in
jo
test
mov
adc
pop
adc
and
inc
roll
or
popa
aam
pop
adc
mov
adc
mov
and
push
xchg
cmp
icebp
ja
lea
outsb
adc
andl
sub
push
or
mov
lfs
mov
into
subb
mov
sub
adc
rcll
or
rcrl
jmp
sbb
mov
in
nop
rolb
lea
pop
or
add
shll
xor
fbstp
push
and
push
movsl
fdivs
mov
lahf
je
mov
dec
inc
call
or
push
inc
jae
movl
xchg
cmp
push
je
lock
into
and
aas
adc
dec
cmp
pushf
adc
inc
stos
cmpsl
les
dec
cmpsb
inc
pop
sbb
aaa
inc
jg
xor
or
cmpl
xor
jae
sbb
bound
dec
xor
pop
mov
pop
call
bndldx
fists
push
icebp
pop
enter
and
mov
rolb
mov
dec
jmp
push
pop
add
in
fwait
lret
xchg
outsl
lods
jmp
pop
stc
add
xchg
xchg
jne
shl
adc
rolb
nop
daa
ja
inc
test
fldz
into
jge
cmp
jae
cmp
je
mov
push
lret
cmc
xchg
cmp
or
sbb
jge
add
shll
pushf
mov
movsb
pop
mov
cmp
dec
pusha
sti
shlb
jb
push
jae
xor
dec
jno
addr16
sbbb
inc
add
xchg
xchg
push
xor
xor
xor
mov
cmpl
mov
mov
push
comiss
push
je
cmpsl
adc
sbb
jo
fmuls
aam
mov
adc
sbb
mov
push
or
dec
mov
std
xchg
push
xchg
mov
pop
add
pop
push
add
mov
shrb
and
mov
loop
inc
js
jo
pusha
and
popa
mov
cmpsb
ds
js
outsl
les
mov
in
pop
sbb
sbb
add
mov
add
shr
dec
mov
fnop
sbb
je
pop
bsf
sub
sbb
jle
test
mov
dec
pop
call
jge
dec
pop
dec
cmpsl
dec
call
xor
packsswb
test
arpl
fdivl
or
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
sub
and
push
je
sub
mov
in
cmp
mov
out
mov
or
and
pop
mov
add
rolb
lea
inc
roll
or
sub
mov
mov
addl
and
mov
mov
xchg
insl
je
mov
mov
push
mov
mov
cmp
arpl
mul
out
cmp
pop
fs
out
add
push
aam
pop
andb
lods
pop
je
fsubs
popf
sbb
fsubl
cwtl
dec
or
push
jle
cs
mov
lock
add
sub
loop
or
mov
je
subb
jge
mov
inc
add
out
or
fdivrs
cmp
loopne
mov
push
add
sub
loope
sti
nop
rcrb
popa
in
lds
fucomp
mov
mov
dec
sub
ja
fisttps
xlat
sarb
ret
mov
xchg
or
xchg
int3
rcrl
cmp
jb
mov
sbb
mov
mov
sub
push
ret
dec
lock
in
mov
lea
fistps
in
or
push
add
xor
aaa
mov
pushf
xor
je
xor
sub
cmp
sbb
and
je
pop
sbb
push
jae
lea
jg
inc
dec
ja
cmpb
jne
fidivl
mov
out
and
or
or
push
sbb
inc
pushl
stc
les
jge
std
pop
outsb
daa
mov
mov
lea
cs
lahf
mov
cmp
pop
push
dec
or
or
mov
xor
ret
loopne
jae
ds
xchg
cmp
scas
xor
jae
leave
jmp
dec
push
and
push
inc
sub
dec
and
dec
rcl
push
xchg
sub
fmuls
in
sbb
cmpsl
cwtl
loopne
pushf
mov
mov
dec
dec
ret
outsl
adc
add
inc
mov
mov
push
sbb
adc
aam
out
mov
imul
je
mov
rolb
pushl
adc
loopne
adc
outsl
jmp
sub
fsubs
dec
and
sub
inc
push
lods
les
sbb
jne
aad
cltd
mov
lea
cmp
lret
lock
movsl
sub
popf
movsb
scas
push
add
xchg
mov
pop
adc
fisttps
addr16
out
mov
cmpsl
xor
fsub
add
add
add
add
add
push
sub
rol
lds
xchg
imul
popa
popf
jbe
loopne
adcb
pusha
xchg
mov
std
push
les
fsubr
sbb
cli
xchg
or
test
jle
dec
inc
cmpl
adc
cmp
cmp
imul
inc
and
data16
xchg
or
or
call
jns
adc
add
xor
outsl
pop
decl
call
lea
cmp
adc
xor
jmp
sub
nop
or
cmp
std
incl
mov
sbb
lods
sbb
in
jmp
add
nop
xchg
clc
ret
xor
adc
or
std
idiv
addb
js
or
mov
sbb
sahf
mov
daa
bnd
mov
pop
loop
aaa
ljmp
js
dec
ret
daa
fidivs
lea
push
sub
sbb
mov
add
inc
push
lret
shlb
stos
ja
inc
sbb
or
aam
ret
push
out
or
add
in
cmc
cmp
loope
loopne
jge
insb
xor
jg
out
cwtl
add
cmpb
xor
fnstenv
inc
jmp
add
je
cmp
cmp
sub
loope
test
ss
add
aas
movb
push
lcall
fdivs
sub
sub
jmp
rcrb
and
mov
out
insb
fnstenv
js
fisubrs
loope
dec
imulb
jnp
test
push
cmc
dec
in
roll
sbb
push
add
jae
push
push
add
jbe
xor
aam
scas
lea
mov
mov
xchg
sbb
test
cmpb
lea
into
test
mov
inc
adc
cmp
or
cltd
adc
inc
mov
push
out
jmp
push
inc
outsl
adc
repz
inc
xor
insl
cmp
and
fildl
add
ja
or
or
cmp
mov
in
jno
into
pop
cmp
xchg
inc
add
sbb
dec
and
jb
inc
shrl
pop
lock
les
or
js
rcrb
insl
mov
cmp
sub
push
inc
or
add
mov
inc
inc
es
or
ret
pop
pop
or
inc
data16
and
mov
dec
add
roll
cvtdq2ps
std
std
jno
cwtl
and
dec
jo
push
ficoml
movups
mov
dec
testl
dec
arpl
mulb
cmpsb
xor
jne
imul
imul
inc
adc
xor
lods
ret
add
loope
in
dec
add
enter
mov
sbb
pop
mov
std
push
in
add
test
inc
inc
mul
push
mov
xorl
out
cmp
scas
rorb
cmp
faddl
jmp
jl
loope
jnp
push
jmp
pusha
sub
movsb
add
add
imul
nop
mov
nop
hlt
sub
jne
in
jl
in
and
repnz
std
jmp
out
sub
shlb
lcall
lret
pop
in
dec
xor
pusha
pusha
or
add
push
or
mov
mov
adc
in
dec
and
leave
sbb
dec
and
xchg
push
les
stc
in
add
pop
adc
pusha
push
push
ret
or
pop
mov
xor
sbb
lahf
rep
mov
jge
scas
add
mov
mov
jnp
cmp
add
xchg
dec
enter
xchg
sub
add
mov
shlb
cmp
jno
repz
add
cli
lret
adc
dec
cmpl
pop
jne
pushl
sub
sbb
jae
push
xchg
pusha
sub
dec
sub
mov
dec
shl
shrb
fs
rclb
es
sbb
pop
adc
add
lea
push
xor
push
addr16
inc
inc
and
fcmovne
add
ficoml
cwtl
cmp
int3
insl
pushf
and
jne
rol
addr16
mov
sbb
mov
mov
fsubrl
inc
mov
enter
dec
inc
xchg
and
incb
or
adc
dec
inc
insl
outsl
inc
push
add
fistps
add
or
mov
dec
sub
add
leave
push
inc
mov
mov
ret
sub
ja
dec
push
xor
inc
fs
add
push
pop
xchg
add
pop
fwait
mov
xchg
je
xchg
pop
pop
or
push
pop
mov
cmp
xchg
mov
mov
sarb
pusha
scas
pop
mov
lods
lret
ret
dec
xor
and
mov
add
push
les
and
sbb
adc
pusha
and
and
dec
mov
pop
mov
mov
jmp
setae
sbb
mov
cmpsb
test
and
sub
mov
mov
sbb
or
inc
inc
rcl
imul
and
xchg
adc
pop
and
and
loop
std
sbb
or
jnp
ja
outsl
mov
loopne
xchg
fimuls
cmpl
cs
adc
adc
adc
push
mov
push
or
fmuls
dec
pushf
sub
lods
xor
pushl
pop
push
sub
inc
pusha
fdivrl
dec
add
cli
leave
push
add
xor
sub
lods
sub
pushf
popa
or
pushf
test
faddp
ret
adc
pop
aas
add
sub
pop
and
adcb
jae
ja
xor
adc
cs
jo
shlb
addl
sub
loope
mulb
lods
sub
or
pushf
and
pop
fwait
psadbw
mov
ret
dec
xor
push
push
out
cmp
or
cmp
push
push
call
dec
and
push
mov
add
add
jp
or
jb
or
jo
aam
push
lock
pop
push
mov
aam
push
jmp
cli
xlat
sbb
dec
pop
push
cmpl
mov
or
adc
pushf
jo
lock
jmp
cmp
adcb
stc
and
push
push
jb
mov
ljmp
push
stos
push
add
push
adc
adc
das
mov
cmp
rorl
mov
leave
inc
jb
jmp
sbb
or
sub
inc
mov
stos
leave
je
mov
inc
rcrb
xor
adc
aam
lock
and
mov
push
sete
mov
pusha
pop
adc
pop
lahf
push
mov
lock
push
popa
and
jo
pop
lret
les
cld
mov
dec
cmp
cmp
std
cmp
jo
cli
imul
mov
sbb
sub
or
pop
and
outsl
add
mov
xor
nop
fildll
inc
mov
add
push
pop
or
aaa
jp
and
stos
or
mov
adc
test
sbb
and
outsl
and
inc
jmp
out
and
jmp
ja
and
ret
push
add
inc
jno
hlt
inc
dec
cwtl
mov
adc
nop
icebp
sbb
repz
addr16
cmp
cld
add
add
mov
mov
js
mov
and
sti
dec
and
nop
clc
xor
sub
add
push
fiadds
ljmp
dec
roll
adc
and
cmc
aad
jne
mov
enter
fs
jne
and
clc
popa
flds
inc
add
mov
sbb
push
das
jo
dec
add
lods
and
jo
sbb
js
loopne
jge
adc
push
sarl
xlat
push
popa
mull
inc
adc
loope
push
jecxz
cltd
frstor
lods
sbb
cmp
int3
mov
sbb
gs
xlat
mov
outsl
push
add
aam
mov
mov
and
das
mov
jg
in
mov
push
sub
iret
mov
pop
inc
cmp
lock
sub
jg
adc
push
movl
jmp
shlb
mov
xor
loope
ja
cmpb
sbbb
jmp
push
bound
int
nop
sub
or
pop
cmp
cmpsl
push
dec
push
cmp
pusha
pop
out
inc
mov
or
add
fwait
mov
pop
in
dec
data16
loope
call
mov
xlat
fidivrs
push
loope
shrl
daa
adc
dec
xor
xor
sbb
xor
inc
ss
shlb
inc
call
and
outsl
push
xor
fistl
jp
add
inc
rcll
iret
les
jl
mov
leave
xor
es
inc
cli
mov
js
lea
mov
ss
add
jmp
pop
js
negl
mov
sub
inc
or
pop
dec
adc
shlb
inc
add
jecxz
sub
faddl
and
push
movsb
mov
rorl
arpl
call
or
je
inc
dec
cwtl
add
xchg
pusha
cltd
iret
mov
and
rcll
dec
sbb
push
je
adc
push
js
je
shrb
adc
pop
push
or
or
sbb
adc
adc
push
adc
mov
shlb
rol
popf
imul
pop
les
dec
add
pop
insl
rorb
adc
aam
orb
fwait
pop
inc
inc
push
xor
inc
cmp
jo
pop
scas
ja
enter
sub
in
mov
xchg
test
pushf
mov
push
and
rorl
push
cmp
push
jbe
pop
xchg
inc
in
mov
push
jns
mov
lods
pop
add
jp
roll
xchg
mov
enter
push
jecxz
xchg
and
inc
adc
es
add
daa
dec
sbb
pop
xchg
jmp
sbb
jmp
xor
mov
popf
les
xchg
int3
lret
sbb
pop
add
inc
rcll
lock
or
inc
out
mov
hlt
or
fildl
sbb
divb
imul
jno
add
std
sarb
data16
lods
fisttpl
or
jne
ret
cmpl
pop
pushl
pushf
add
mov
xchg
add
loop
popf
xor
push
pop
xor
js
cmp
hlt
lea
mov
inc
into
add
push
or
jl
mov
xchg
fdivs
xchg
jnp
add
repnz
cld
notb
popa
mov
add
daa
pop
ficompl
dec
add
xchg
rorb
cmp
pop
stos
push
sbb
xchg
push
das
stc
movsb
inc
mov
inc
jmp
push
hlt
xor
sarb
in
fnstenv
mov
adc
pop
sbb
push
push
ret
adc
repz
jbe
pop
lea
sub
adc
outsl
jp
or
jbe
loopne
stc
push
mov
sbb
push
fdivl
pop
mov
dec
scas
lcall
inc
pop
jnp
loopne
fbstp
cmp
js
jg
sbb
pushf
xchg
nop
daa
pop
adc
cmp
bound
or
in
shll
pop
push
cmp
push
cmp
xchg
jo
push
dec
sub
jae
rcll
les
flds
sarl
pop
sub
and
bnd
pop
push
roll
and
sarb
mov
jmp
and
sbb
rolb
push
jne
dec
cli
jae
insl
aaa
or
pop
sub
sbb
jne
imul
push
int
negb
xor
outsl
sbb
dec
aaa
adc
sub
inc
cmp
fiadds
rcl
cli
bound
sarb
inc
mov
loopne
fdivrp
and
jo
idiv
sbb
jle
cmp
je
imul
or
loop
add
sarl
popf
aam
xor
push
pop
fcomps
clc
xor
in
jmp
push
xchg
sbb
push
sarb
mov
call
jge
inc
and
cmp
mov
je
rorb
int3
fsincos
push
push
fidivs
mov
xor
pop
sbb
in
push
movsb
pop
mov
shrl
cmp
push
fcompl
sbb
jns
insb
sbb
cmpsb
outsl
fcoml
add
loop
jl
stc
lds
mov
adc
jle
fmull
or
lahf
ljmp
pop
and
pop
push
faddl
push
mov
les
fdivrp
pop
dec
dec
or
cmpb
ret
aaa
sbb
mov
dec
add
enter
mov
mov
or
and
sub
js
movsb
xchg
movb
xor
add
mov
leave
roll
sarl
nop
out
adc
arpl
or
fs
mov
adc
dec
roll
adc
rcrl
adc
push
dec
shll
jo
das
sbb
xor
jl
imul
fsubr
and
andl
mov
mov
dec
fldenv
inc
mov
mov
xor
addr16
scas
sub
or
pusha
icebp
mov
test
add
pop
mov
pop
loopne
nop
in
jle
in
add
sub
inc
les
lods
pushl
rclb
aas
adc
add
mov
sbb
xor
add
jo
push
fs
push
push
pop
xor
cmp
ret
or
rclb
adc
add
pop
push
aad
pop
shlb
je
mov
add
cmp
lock
loop
test
cld
jo
and
test
sub
mov
xor
pop
adc
mov
movsl
imul
sub
push
int
adc
hlt
jne
mov
stos
mov
iret
nop
or
mov
inc
sbb
mov
scas
add
sbb
inc
in
jne
sbb
adc
push
xchg
lcall
xchg
lock
es
clc
xchg
lret
or
test
jl
sahf
mov
add
xor
mov
test
in
push
mov
adcl
cmpsl
inc
sub
mov
push
inc
add
shl
ret
in
mov
es
ret
imul
add
push
je
sub
fstpt
sbb
jne
das
xorl
lea
ja
pop
jne
orl
and
daa
inc
dec
adc
imul
cmp
pop
dec
test
and
and
leave
and
test
test
xchg
add
lret
or
call
dec
mov
inc
das
add
lods
cmp
fnstcw
push
stc
mov
add
imul
inc
xchg
les
mov
out
movsb
xor
adc
push
stc
push
jne
mov
pop
test
movsl
and
jne
cmp
mov
data16
cmp
mov
xor
repnz
cld
pop
adc
push
lahf
jo
cld
xlat
or
dec
inc
adc
dec
mov
pop
in
stos
add
pop
cwtl
into
js
add
inc
adc
invd
mov
mov
push
movsb
xchg
loop
sbb
jp
mov
adc
mov
inc
cmp
rorl
push
popf
lock
mov
adc
add
jmp
cmp
cmpsl
adc
mov
iret
lods
pop
mov
push
es
sbb
and
jmp
test
sbb
dec
adc
lods
pop
inc
or
push
outsl
movsl
test
pop
movhps
pop
lcall
scas
inc
mov
adc
adc
jo
stc
and
stos
imul
pop
inc
ljmp
shll
ror
call
push
and
pop
dec
add
test
add
adc
lea
movsbl
adc
jo
push
mov
mov
and
mov
and
sbb
mov
out
lock
mov
outsb
pop
js
movsb
cmp
adc
mov
notl
and
sbb
je
cmovle
out
mov
je
xor
add
and
orl
enter
out
test
icebp
or
mov
jo
jnp
icebp
mov
cmc
pop
mov
div
mov
pushf
cmp
cli
je
popf
enter
add
inc
cmpb
loopne
fnsave
je
cmp
lea
mov
hlt
sti
push
sub
dec
icebp
push
fwait
inc
and
test
jne
rorl
add
mov
add
or
outsb
dec
adc
xchg
adc
pop
jnp
lock
mov
lock
in
mov
repnz
jmp
popf
mov
push
sub
xchg
fstpl
adc
sbb
cmp
pusha
inc
cmp
sar
fsubrp
push
mov
lret
add
push
and
mov
mov
es
sub
xor
cmp
xor
lcall
loope
pop
aas
or
pop
pop
sbb
sbb
sahf
xchg
mov
test
dec
fcoms
arpl
aam
enter
aaa
xorl
testl
pop
mov
ret
jle
jno
imul
adc
mov
sbbl
jae
sbb
jns
pushf
les
in
insb
sbb
mov
pop
test
popa
mov
insb
out
mov
xchg
cs
rclb
in
imul
outsb
rclb
shr
cmp
ss
sub
stos
or
fldlg2
rcl
ficompl
xor
jne
das
clc
outsb
lock
xor
je
sbb
andl
jle
cmp
fmulp
pop
shll
cwtl
dec
push
lea
push
pop
cwtl
push
out
mov
lea
mov
add
lret
push
or
adc
cmc
sbb
in
xor
lcall
fcoms
push
inc
mov
shl
popa
cmpsb
cmp
add
push
adc
fcom
mov
mulb
pop
or
sbb
arpl
xchg
mov
sbb
adc
adc
je
fmull
mov
mov
add
fdivl
push
in
adc
add
bound
xchg
loopne
cs
cltd
xchg
gs
dec
push
cmp
add
fdivs
dec
push
cmpb
inc
pop
dec
ret
jge
pop
cmp
loopne
sbb
inc
jl
mov
xor
pop
mov
add
mov
nop
aam
mov
shll
adc
or
add
adc
xor
push
lods
bound
aaa
test
out
inc
or
jmp
and
jmp
aaa
xorb
in
int
push
lcall
and
inc
stos
sub
pop
push
xchg
dec
xchg
sbb
or
jo
dec
fsubl
mov
sub
js
sub
mov
xor
in
sub
sub
push
push
or
ja
out
mov
push
adc
fiadds
mov
mov
cmpl
pop
out
inc
aad
pop
pusha
leave
push
fmuls
sub
push
cmp
add
cmc
inc
divl
pmulhuw
testl
ja
aam
push
out
mov
rcrb
sbb
or
lcall
sbb
pusha
mov
sti
data16
mov
movsl
add
fmuls
dec
jae
sbb
and
and
adc
subl
pop
cmp
aam
shrl
xor
xlat
stos
sub
sarb
or
or
jmp
xor
sbb
jl
std
shrl
cmp
and
sbb
add
fdivp
pop
fsubp
push
dec
xor
or
movsl
out
jne
jae
dec
repz
and
lea
push
cmp
je
or
dec
or
dec
and
aam
in
adc
add
mov
repnz
pop
ljmp
loope
repnz
nop
sub
push
ds
loope
aad
sub
loop
rclb
jnp
inc
push
or
add
aas
jnp
push
sahf
adc
fsubl
sub
stos
sbb
and
pop
mov
push
inc
or
negb
arpl
je
fwait
xor
cmp
pop
lret
adc
push
or
sahf
mov
cmp
push
ljmp
popa
out
lss
sbb
jp
jle
mov
push
cs
or
popf
fsubrl
push
and
lods
std
adc
or
xchg
lcall
mov
jge
cmp
push
imul
and
cmpsb
lahf
and
inc
mov
add
add
sahf
push
mov
jmp
jo
mov
xor
sub
call
orl
xchg
push
xor
sbb
xchg
or
sub
sbb
jbe
pop
inc
xchg
mov
adc
add
push
and
cltd
push
sbb
cs
lods
add
push
and
ss
xchg
jnp
xor
push
nop
add
push
mov
notb
xchg
sbb
int
or
add
cmp
add
adcb
jg
xor
lock
fwait
xchg
cmp
jbe
mov
sbb
xchg
lock
adc
loope
arpl
les
push
push
push
inc
push
inc
cmp
ret
aad
adc
pop
or
clc
push
mov
ljmp
lods
ss
clc
test
dec
pop
and
adc
rol
adc
or
jmp
in
and
push
add
or
popa
lea
sar
pusha
and
mov
call
js
pushl
scas
mov
pop
mov
pop
add
add
pop
or
fmull
out
dec
push
inc
sub
mov
pop
mov
imul
shlb
jbe
pop
mov
inc
negb
popa
pop
sub
mov
xchg
test
add
and
call
pop
jns
add
stos
cltd
jmp
push
inc
jae
cmpsb
lea
inc
mov
repnz
jo
push
dec
jo
sbb
adc
fmuls
xor
push
ret
push
fcoml
dec
xor
jo
dec
push
inc
inc
or
roll
pop
adc
out
sbb
fadds
test
dec
adc
or
fcoml
pop
xor
imul
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
pop
fcomps
xchg
inc
push
mov
adc
nop
add
outsb
pop
stos
push
movsl
lret
pushf
add
stos
dec
sub
inc
cs
push
pop
pop
mov
movsl
lock
insl
rolb
push
sub
xor
jle
sarb
add
cs
cmp
aaa
ret
add
pop
testb
push
mov
add
mov
out
pushl
jecxz
and
dec
or
dec
jl
loope
xor
pop
pop
add
push
fistl
fdivrs
mov
adc
push
mov
aam
fisttps
xchg
xor
inc
mov
leave
pop
adc
xor
mov
testl
sub
push
xchg
dec
inc
add
mov
mov
add
mov
add
inc
push
shrl
pop
popa
into
outsb
sub
add
push
and
hlt
imul
cld
movsl
inc
cmp
ret
mov
pop
nop
nopl
mov
nop
fwait
or
decb
cmp
cld
push
test
adcb
mov
mov
into
adc
or
or
pop
dec
adc
adc
or
push
or
mov
repz
mov
push
mov
xchg
or
mov
mov
inc
pop
fcmovnu
inc
mov
js
fsubp
mov
inc
cld
adc
fcoml
dec
loope
jge
lock
loopne
popf
stos
or
mov
adcb
mov
fisttpll
and
push
push
push
inc
push
mov
imul
idivl
push
jo
adc
add
jbe
cmpl
push
in
jo
rclb
outsl
cmc
jg
ret
push
mov
mov
jmp
or
lods
and
mov
push
cmp
pop
and
je
push
jecxz
push
sbb
addl
aas
movsl
cmpsb
test
and
xor
mov
push
rolb
sbb
add
divb
and
or
or
push
xor
aas
adc
xor
or
jle
insb
call
adc
lea
dec
jae
sub
push
pop
mov
push
andl
pop
xor
pop
outsb
or
inc
movsl
or
aam
dec
test
adc
mov
or
in
clc
push
outsl
jns
test
and
push
movsb
cmp
arpl
cli
jge
xchg
sub
sbb
push
push
mov
jp
mov
or
jae
cwtl
sub
add
or
pop
mov
add
orl
cwtl
mov
inc
in
cmp
mov
dec
mov
inc
lods
pop
lcall
lds
jo
inc
add
lcall
cmp
adc
sbb
lret
enter
cmp
pop
fidivrl
adc
sbb
fldz
dec
cmp
pop
negl
pop
mov
xor
xchg
push
clc
pop
add
ficomps
loope
adc
jns
fs
push
push
or
mov
jne
add
lcall
lods
inc
mov
in
cmp
lret
jbe
or
cmpl
test
cld
add
push
movsl
push
add
in
pop
mov
sbb
jg
adc
xor
shr
inc
add
cmpl
call
loopne
es
xchg
adc
cmp
sbb
out
add
jo
sbb
or
pusha
insb
std
pop
pop
bound
adc
add
dec
jmp
repz
lret
cmp
es
stc
outsl
insl
out
in
incb
nop
push
sub
jae
movsl
mov
ss
sbb
ja
add
inc
mov
arpl
push
pop
adc
inc
mov
add
cmp
sub
hlt
add
pop
mov
jno
int
dec
add
xor
xchg
scas
les
sbb
push
push
push
insl
mov
xor
orl
ret
sbb
mov
sbb
arpl
cmp
dec
mov
not
insb
pop
sub
and
mov
pushf
pop
push
jge
les
pop
jmp
mov
arpl
mov
add
rolb
xlat
insb
insb
imul
ljmp
pop
cmpb
dec
push
ljmp
jne
dec
adc
xor
dec
or
ret
inc
and
lock
aam
loop
pop
jae
dec
jg
ja
inc
jnp
call
or
iret
ficompl
add
jmp
inc
jae
test
in
push
pop
mov
push
push
lea
pop
add
add
xor
add
shl
movb
addr16
leave
or
adc
jne
jbe
es
jns
mov
push
mov
add
jecxz
push
repz
mov
sbb
inc
cmpsb
notb
sub
adc
mov
adc
hlt
js
add
adc
xchg
inc
clc
inc
aas
push
stos
loop
cmp
push
in
or
shl
inc
adc
jo
xchg
push
mov
adc
cmpsl
arpl
sbb
push
mov
mulb
xchg
arpl
stc
cmp
push
add
outsl
lea
shr
xchg
sub
add
and
sti
lret
dec
int3
inc
push
scas
and
addr16
jnp
adc
push
in
push
and
mov
and
adc
jae
xchg
adc
mov
add
adc
ljmp
jle
pop
inc
inc
pop
mov
cmp
xor
pop
push
mov
ja
or
les
mov
aam
test
pop
dec
push
pop
push
push
pushf
fs
in
xchg
test
pop
testl
call
and
rol
adc
add
jp
xchg
mov
or
test
adc
dec
or
or
xor
sbb
xchg
adc
insl
and
sbbl
inc
sub
sbb
loop
negl
xor
jmp
or
ds
fdivl
test
or
xor
lret
add
sbb
sbbl
mov
jl
popa
jbe
adc
rorl
cwtl
stos
xchg
lock
loopne
add
jnp
inc
ret
testb
jle
xor
jnp
aas
dec
or
ret
loope
int3
add
xlat
sarl
adc
mov
cmpsb
add
inc
cmp
loope
xchg
imul
pop
enter
sbb
jo
push
sbbl
mov
sti
and
pop
lods
jmp
pop
pop
xchg
dec
into
sub
push
add
or
dec
mov
fsubrs
in
or
xchg
outsl
cmpsl
mov
scas
xor
dec
jmp
inc
mov
imul
insl
add
int3
jp
ljmp
add
addb
ret
add
lods
call
lods
mov
and
xor
jo
andl
xor
lahf
mov
push
adc
cmp
fistpl
sahf
adc
sbb
scas
pop
insl
jns
xchg
mov
and
aad
loop
pop
rcll
pop
in
addl
aas
mov
sub
rcll
sti
jle
add
test
jae
lock
fnstcw
in
mov
xchg
pop
das
in
daa
jo
icebp
sub
in
fiaddl
xor
mov
push
inc
sub
inc
xchg
call
push
or
lea
lods
aas
cmp
push
or
pop
rolb
jecxz
pop
loope
push
or
rcrb
push
lahf
dec
les
sub
cmp
jl
and
inc
shl
mov
xor
ret
pop
sar
scas
adc
pop
push
sbb
or
mov
movsb
xchg
das
nop
test
in
fdivl
jne
ret
outsl
xchg
dec
mov
cmp
ja
je
or
je
or
sub
sub
sti
das
pop
mov
cmp
add
dec
mov
add
pop
or
sbb
ret
sbb
sahf
ja
icebp
add
jmp
cmp
dec
repz
push
xor
cmp
or
scas
jbe
dec
fcoms
out
sub
push
and
iret
and
xchg
insl
or
push
mov
clc
cmp
nop
rorb
sbb
push
cltd
icebp
rolb
push
sub
lods
adc
inc
xor
mov
shrb
adc
ss
ret
or
and
jo
sub
pusha
jg
or
adc
pop
adc
leave
repz
sub
in
pop
test
lahf
and
nop
add
aad
sbb
mov
ss
push
xor
lock
dec
insb
push
sahf
jne
dec
je
sub
test
out
or
add
and
sbb
adc
fcmovnbe
fs
ljmp
enter
push
shll
or
push
adc
inc
dec
imul
insb
sub
ds
cmc
xor
jne
mov
lods
ds
or
push
and
sub
and
push
ljmp
mov
dec
push
cmp
loopne
and
frstor
adc
push
or
inc
fnstcw
jge
lods
xchg
or
mov
insl
add
addr16
cmp
mov
xor
pop
mov
push
out
je
push
pop
es
or
push
das
jmp
mov
push
rcrb
inc
mov
push
lcall
dec
and
pop
or
adcb
push
dec
xchg
lahf
cmpb
push
xchg
push
xchg
imul
push
xchg
dec
cmp
xor
add
fsubrl
inc
mov
popa
aam
xchg
xchg
dec
push
jp
add
dec
mov
mov
lea
dec
inc
and
pop
pop
inc
add
add
cmp
call
icebp
ds
and
or
fadds
jb
jb
in
xchg
fsubl
fcmovnb
jge
mov
in
sti
mov
cmp
ret
inc
aam
cli
xor
rorl
aas
add
fcoml
enter
fsubrp
push
xor
in
and
push
and
jnp
pop
cmc
fmul
add
test
or
push
inc
insl
adc
mov
sub
xor
xor
vpshufd
jl
mov
mov
icebp
fs
mov
xlat
adc
andl
xchg
gs
enter
push
xchg
scas
fwait
sub
dec
adc
inc
sbb
mov
or
or
or
sbb
jmp
movsb
jns
mov
decl
imul
jmp
ficoml
adc
or
and
pop
cs
fidivl
xor
inc
adc
cmpsl
movsb
cmp
push
fstpt
or
pop
push
mov
out
push
pop
mov
jge
mov
cmp
inc
cmp
jne
mov
cmp
xor
sbb
sbb
repnz
pop
pop
nop
lock
in
rcr
lea
lahf
ds
testb
pop
sub
or
ljmp
sbbl
pop
mov
sbb
sub
push
jb
and
sub
jg
inc
push
test
outsl
mov
or
je
daa
push
dec
dec
mov
or
shlb
xlat
add
movl
xchg
or
or
dec
mov
mov
pop
cmpb
sbb
sbb
sub
dec
cmp
push
movsl
andl
loop
repnz
push
out
imul
inc
push
add
enter
inc
fcomp
add
lock
adc
mov
push
or
pop
movsb
movsl
adc
dec
pop
mov
add
rolb
ds
flds
xchg
inc
leave
sbbb
int3
test
pop
push
je
jno
fildl
scas
push
gs
xchg
add
pop
enter
leave
je
rolb
add
fldt
lock
in
add
imull
sub
xor
lds
repz
inc
xor
xor
aaa
divps
rcrl
sbb
mov
xchg
mov
adc
xchg
pop
and
push
pop
xor
push
xlat
dec
mov
sbb
add
pop
andl
aaa
sarl
nop
cmp
sbb
inc
mov
scas
in
sub
and
cli
xor
out
sbb
xor
mov
or
pop
adc
or
test
mov
push
pusha
add
outsb
dec
cmp
cmp
out
daa
lock
cmc
add
mov
mov
ljmp
cmp
mov
push
lcall
add
push
cmpsl
xchg
inc
inc
in
xchg
mov
leave
sbb
push
mov
add
sar
rolb
lret
push
ljmp
sub
push
jmp
xor
testl
jnp
repz
sub
addl
lahf
cmpsb
rorb
movsl
cmp
mov
or
or
cmp
and
push
push
push
enter
pop
addl
mov
movsl
inc
dec
cmp
call
test
dec
and
jp
sbb
ret
push
loope
mov
mov
cs
push
fmull
rcr
sti
or
imull
jl
sbb
repnz
sbb
cs
std
and
sbb
iret
mov
movl
push
and
or
adc
jno
je
pop
cmp
add
insb
lods
mov
pop
outsl
cmp
jnp
dec
mov
mov
add
xor
mov
inc
adc
push
inc
and
mov
xchg
and
and
divb
in
add
sub
nop
lock
jbe
fdivrs
mov
adc
push
in
mov
jbe
mov
sbb
lcall
sbb
adc
xchg
mov
adc
dec
and
mov
clc
xchg
jnp
push
sub
add
fmull
push
das
es
mov
je
push
xchg
add
xor
enter
sbb
add
push
sarb
int
push
sub
mov
sub
or
packsswb
lcall
or
sbb
sahf
pop
out
pop
dec
aaa
fstl
addr16
fdivrs
mov
mov
mov
repz
lock
jmp
lock
push
cmpsl
sarl
jmp
xchg
ds
jg
cmp
mov
clc
push
sti
movsl
ret
add
test
lret
roll
fs
dec
or
and
mov
roll
push
or
or
daa
cmp
imul
jg
xor
lret
cmp
je
insl
jmp
push
mov
popf
or
fcomp
lods
xchg
in
dec
mov
addb
repz
dec
xlat
int3
pop
addl
and
push
cli
jmp
iret
jmp
pop
push
inc
dec
dec
push
repnz
outsb
xchg
hlt
jmp
je
cmp
jle
addb
cmp
mov
inc
jge
add
cmc
sbb
fisubs
push
dec
mov
mov
inc
popa
inc
xchg
adc
mov
insb
inc
add
leave
mov
add
je
rcrb
xchg
sub
cmp
mov
orl
loopne
inc
pop
je
cmpb
jo
sub
push
add
fdivl
push
xor
and
dec
jp
cld
rol
add
and
cmc
aaa
jo
xchg
adc
push
cld
jmp
test
popf
std
mov
nop
and
fdivrl
stos
cltd
push
cs
orl
or
imul
pop
std
push
nop
data16
subl
ja
or
data16
je
adc
scas
sbb
lret
adc
imul
cwtl
jne
cmp
and
add
lcall
rorb
sub
xor
and
xlat
sub
jb
shlb
cld
dec
ja
add
xchg
cltd
lods
inc
add
mov
movsb
in
adc
sbb
sub
data16
inc
cmp
xchg
xchg
and
cmp
inc
inc
xchg
pushf
inc
inc
and
sar
ja
jne
inc
and
inc
inc
mov
imul
mov
jecxz
ret
push
add
mov
dec
jmp
push
add
xor
jns
sub
std
dec
jmp
push
pop
jns
test
or
lea
and
push
imul
stc
mov
insb
lcall
push
jne
mov
and
add
xorl
call
and
mov
hlt
and
and
inc
adc
or
mov
js
or
sub
pop
adc
and
xchg
mov
pop
lcall
aam
lock
push
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
nop
mov
xchg
mov
jnp
pop
sbb
mov
mov
cmp
or
dec
int3
outsb
xchg
push
sub
clc
fists
test
inc
sbb
je
mov
fdivrl
jle
jle
movsl
add
inc
shll
je
cltd
fdivl
inc
in
ffreep
pop
lcall
sbb
push
movsl
cs
push
xchg
call
fstl
and
and
in
call
testb
or
pop
out
loop
sbb
cmp
cmp
lahf
push
sub
pop
xchg
inc
mov
dec
loopne
loopne
add
rol
xor
cmp
loopne
loop
or
popa
cmp
and
add
rdtsc
repnz
add
cmc
add
pop
imul
xchg
fwait
lahf
std
ljmp
inc
sbb
popf
nop
mov
in
jne
mov
add
inc
jmp
add
push
pop
push
inc
sub
push
int3
es
rolb
pop
das
clc
dec
fs
or
push
je
xlat
aaa
add
sti
lret
loopne
and
loop
and
pop
in
adc
lods
aad
push
add
addl
pop
pop
push
mov
inc
pop
icebp
lcall
add
mov
imul
xchg
addl
cmpsl
insl
dec
popf
cs
pop
mov
or
out
mov
and
jo
push
sahf
mov
and
and
jns
test
pop
addl
mov
push
add
clc
inc
cmp
mov
loopne
fcmovb
jb
call
mov
mov
dec
or
adc
lock
add
clc
jne
mov
dec
or
aaa
sbb
mov
clc
int
inc
sub
stos
or
cmp
push
addl
xor
jle
push
adc
stos
xorl
mov
jb
and
push
and
jge
pop
jae
js
int3
fidivrl
or
test
popa
mov
dec
and
push
and
or
jmp
pop
sarl
fsubrs
xlat
in
or
iret
imul
adc
imul
sub
insl
setnp
mov
adc
enter
push
jp
sbbb
inc
orb
push
adc
or
push
leave
movb
xchg
jns
inc
mov
mov
clc
sub
jge
and
movnti
cmpsl
jo
test
decl
push
jb
mov
push
mov
adc
sub
loope
ss
std
je
sbb
xor
pop
notb
or
sub
call
lds
ja,pn
test
mov
lcall
adc
outsl
jmp
and
dec
or
movsb
dec
sbb
adc
push
sub
dec
add
cmp
and
jmp
lock
mov
jge
push
xor
or
das
inc
shrb
mov
push
lret
mov
cli
mov
cltd
repnz
out
shll
push
leave
push
xor
andb
jp
imul
add
inc
imul
cmp
jno
sub
add
mov
mov
push
add
add
das
push
mov
sar
ljmp
push
inc
dec
rorl
cmp
push
cmpsl
inc
xchg
movsl
xchg
push
or
cmp
jmp
int3
xor
dec
stc
add
shrd
int3
lds
sub
jo
lahf
mov
out
dec
cmp
push
cmp
and
sbb
push
pop
pop
jmp
add
inc
push
in
and
stc
jne
clc
test
xchg
andl
lss
lea
cmpsl
fs
pop
push
mov
lret
adc
sbb
test
pop
fildl
fs
repnz
mov
xor
lock
dec
shl
inc
jb
pop
xor
xchg
std
aaa
mov
ja
push
pop
inc
mov
cld
adc
mov
inc
mov
xor
ret
negl
mov
cmp
fdivs
andl
add
and
dec
adc
pcmpeqw
sbb
push
mov
xchg
test
xchg
aad
loop
adc
jo
je
mov
data16
pop
xor
sub
int
fsubl
dec
sbb
and
dec
pop
ret
rol
outsb
or
jle
xlat
rclb
sub
or
inc
sub
push
mov
push
ror
mov
add
or
push
rcll
mov
ficompl
push
push
in
jle
stos
int3
mov
nop
add
inc
push
nop
pusha
test
adcb
add
xor
xchg
enter
popa
sbb
jo
scas
mov
lea
mov
xchg
es
adc
push
movsl
lds
inc
imul
loope
je
out
cmp
rcrl
lea
or
xor
inc
push
jmp
ss
outsb
xor
sub
add
jns
jg
or
xor
push
decb
in
shlb
mov
mov
arpl
lret
pushf
dec
stos
fisttpll
dec
push
rolb
mov
lock
inc
pop
add
les
mov
fmull
andl
nop
push
xchg
mov
into
imul
scas
test
pop
arpl
fimuls
xchg
iret
pop
lret
mov
sub
mov
sbb
xor
xchg
jo
cmp
xor
or
in
xor
jo
push
fsubl
add
push
xchg
add
sub
popa
test
and
subb
mov
push
adc
ds
ss
push
push
jle
rep
test
sahf
sti
mov
mov
insb
mov
jb
ret
aaa
xor
sbb
fiadds
jb
cmp
sbb
add
lock
mov
xor
dec
dec
ret
lcall
add
mov
add
or
clc
and
push
hlt
jp
imul
adc
popf
mov
pop
popa
cmc
push
jb
ss
jb
bound
je
xor
push
mov
shll
test
mov
mov
mov
push
les
add
nop
add
jo
jno
test
push
adc
sahf
mov
sub
inc
pop
sbb
adc
add
add
fsubl
xchg
dec
add
cmpsl
adc
outsb
push
clc
out
inc
dec
jne
adc
jge
in
std
xor
fcoml
pop
cld
sub
loope
xchg
sub
shrb
dec
nop
inc
pop
add
pushf
inc
and
outsb
cmp
jbe
sub
lea
ret
add
inc
push
cmp
xor
xchg
mov
jae
sbb
inc
outsl
addr16
icebp
je
leave
pop
rolb
dec
sbb
or
cmp
and
inc
xor
adc
lea
hlt
out
push
ds
inc
push
mov
sub
jl
test
lock
xchg
jg
cmp
push
cmp
sbb
mov
sub
mov
push
mov
push
test
test
out
push
xchg
clc
mov
mov
shr
not
fdivs
sbb
aam
push
imul
lret
mov
sub
push
es
xor
push
sub
out
ret
je
mov
xchg
je
add
dec
and
jge
adc
xchg
sub
jle
sub
sub
xor
xor
das
das
das
das
cmp
dec
add
insb
popf
xchg
orl
mov
icebp
lret
pop
push
je
clts
adc
add
jg
or
inc
add
loopne
cli
pop
mov
mov
repnz
inc
les
cltd
decl
add
or
or
mov
push
mov
dec
outsb
xor
cs
pushf
push
mov
rcl
xchg
or
dec
jb
call
dec
add
movl
in
and
cmp
cwtl
lds
inc
push
pop
data16
iret
inc
adc
adc
inc
mov
or
ss
and
pop
mov
jge
inc
and
and
out
daa
push
mov
lahf
xor
iret
mov
xchg
sbb
arpl
and
fs
subl
jmp
or
and
jle
loop
rorl
mov
mov
mov
mov
mov
add
xor
mov
mov
jmp
push
and
mov
xor
jge
enter
je
pop
cmp
sub
push
out
push
and
push
add
pop
lea
rep
repz
icebp
adc
xor
or
sbb
add
jbe
jmp
sub
jae
adc
add
enter
inc
sbb
int
mul
andl
sub
jne
xchg
push
or
call
das
fidivl
push
push
mov
cmpsb
xlat
push
hlt
xor
push
mov
or
loopne
adc
pop
xorl
rcrl
das
adc
adc
roll
mov
imulb
cmpb
jnp
and
adc
sbb
ret
call
outsb
sub
sbb
addr16
xchg
xchg
inc
and
dec
inc
adc
or
mov
scas
push
iret
test
or
pop
movb
shlb
and
adc
das
mov
push
push
push
jns
mov
pusha
int3
add
sub
push
cwtl
add
mov
push
in
dec
add
hlt
lock
add
int3
test
pusha
mov
push
adc
dec
push
push
mov
mov
cmpl
sbb
seta
adc
incl
push
mov
push
push
scas
shlb
insb
dec
xchg
push
fidivrl
cmp
mov
adc
bound
arpl
cmp
sub
add
popa
dec
cmp
clc
shll
pop
lock
xor
cmp
or
fsts
loopne
mov
xlat
add
bound
adc
push
loope
insb
loop
inc
sbb
pop
and
je
and
add
cmp
dec
ss
pop
mov
sbb
add
adc
insl
sub
ljmp
loopne
dec
sub
movsb
mov
inc
clc
adc
mov
adc
add
push
rcrb
insb
call
leave
andb
jge
icebp
or
jl
add
push
pop
and
add
and
hlt
jnp
and
fsubrl
pop
push
or
or
and
das
push
fcoml
add
or
or
xor
dec
adc
mulw
inc
cmp
xorb
add
add
jne
jo
dec
pushf
outsl
lea
mov
mov
pop
clc
sub
sar
mov
testb
ret
cmp
lret
push
repz
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
push
jb
fwait
adc
stos
push
or
sub
rolb
inc
mov
ret
sahf
ja
lret
loopne
push
mov
shlb
sub
or
push
fwait
popf
sahf
or
xchg
rol
insl
cmp
rcll
dec
jle
mov
xor
jl
aas
ret
adc
jecxz
and
rolb
add
ret
hlt
or
jl
les
pop
das
test
notb
je
cmpsb
sbb
jne
std
shrl
add
push
xchg
jl
jno
test
and
sbb
mov
or
outsb
push
lods
sbb
sub
cmp
fisttps
pushf
sbb
clc
and
das
popa
mov
lock
pop
adc
xor
jge
insl
xor
adc
aaa
or
roll
sbbb
push
mov
ss
mov
stc
adc
in
fsubrs
incb
shr
inc
sub
cmp
shll
jae
jb
jae
shl
out
xor
lret
adc
es
hlt
jae
and
mov
jae
jne
fstl
or
adc
icebp
push
in
add
cmc
adcb
invd
shl
sub
fs
pop
add
adc
pop
jl
sub
jb
adc
push
cmp
xor
imul
jno
ljmp
sbb
sub
stos
jne
and
lea
pop
dec
in
or
mov
sub
jmp
jecxz
xchg
testl
ret
mov
add
outsl
cs
fs
push
push
sbb
ret
add
insb
and
rclb
xlat
push
dec
daa
or
cmp
add
sbbb
dec
or
insl
jb
outsb
mov
ja
adc
fsubl
mov
dec
mov
mov
sbb
or
or
jno
sbb
xor
cmp
fcom
ret
mov
xor
sbb
and
adc
test
mov
sbbb
inc
pop
push
jecxz
push
add
pushf
or
xchg
out
fcmovnb
dec
adc
ja
mov
xor
in
js
jmp
jbe
adc
fcomps
dec
pop
or
add
bound
clc
add
inc
dec
and
or
gs
and
inc
pop
mov
push
sub
xor
roll
int
inc
imul
xor
inc
aas
push
nop
xchg
push
nop
inc
jl
jg
and
sbb
xchg
nop
xchg
nop
inc
push
nop
call
push
sub
inc
sub
cs
mov
or
push
push
pop
xchg
add
cmp
pop
test
insl
inc
and
xor
mov
xor
sub
iret
xchg
xor
or
xor
mov
dec
lahf
cmpb
je
add
jmp
xor
or
ss
ret
in
pusha
adc
pop
pop
pop
fimull
ljmp
or
dec
sbb
push
pop
test
sbb
push
or
mov
adc
stos
sub
jne
mov
arpl
sbb
sbbb
jne
popa
sub
adc
add
fadds
ja
mov
test
mov
push
ja
push
imull
addr16
fnsave
push
ret
push
ret
rolb
sti
sahf
inc
fs
pop
mov
ss
xchg
inc
sahf
out
fiadds
or
mov
lahf
imulb
fimuls
enter
jns
cmpsl
mov
in
sbb
inc
out
aam
inc
mov
inc
or
add
mov
mov
stos
jo
pop
ret
or
addr16
dec
add
hlt
mov
or
fidivs
jb
jo
add
pushf
loopne
cltd
out
sahf
inc
push
sbb
dec
leave
jno
adc
testl
sbb
dec
movsb
or
fadds
or
test
sub
outsb
dec
pop
lock
and
inc
add
xchg
cli
inc
sub
sbb
fcmovb
adc
push
enter
loopne
push
push
ss
mov
iret
inc
and
dec
arpl
xorl
push
push
out
jecxz
shl
jmp
jp
iret
xor
cld
adc
or
push
push
mov
or
fs
ss
adc
fadd
dec
ret
xor
xchg
in
xchg
xor
xchg
inc
nop
ret
cld
push
add
cli
adc
add
dec
jo
test
jne
sti
scas
jbe
or
jbe
add
sbb
jmp
cmp
sbb
xor
sub
push
inc
add
push
or
test
jb
adc
pop
or
pop
or
mov
sbb
adc
mov
xchg
dec
pop
adc
and
adc
ret
or
mov
testl
and
fnsave
xor
pop
or
cmp
add
popf
add
ja
lods
and
je
pop
cli
es
sti
lcall
ret
aaa
lods
xor
inc
and
adc
lea
cld
outsb
pop
insb
mov
or
mov
inc
movsb
and
lock
sbb
daa
movsb
les
dec
daa
add
movsb
ret
jb
int
fldt
xor
add
jno
mov
or
mov
stos
and
pop
js
mov
mov
add
mov
push
or
mov
dec
push
fwait
jns
aam
mov
sub
mov
mov
cmp
fisubl
or
push
xchg
les
or
pop
or
push
adc
or
sub
jmp
push
aam
sbb
cwtl
sbb
inc
bound
out
push
push
jmp
lock
jge
dec
push
xlat
inc
adc
or
and
push
sbb
fdivr
aam
xchg
stos
sarb
fcomp
cmpsl
addb
jmp
je
hlt
or
xlat
xchg
mov
push
fsubrs
cmp
pop
pop
or
addb
cmp
jb
or
divb
dec
push
repnz
clc
jl
mov
adc
fadds
push
jbe
jmp
stos
cmp
cmc
adc
lods
pusha
lret
push
dec
add
and
adc
cltd
inc
add
push
sbb
fistpl
lock
xchg
std
andl
aam
sbb
ja
mov
rolb
hlt
lcall
and
add
and
in
adcb
push
ret
jne
pop
push
shlb
xchg
shrb
sub
data16
loopne
movsl
fmuls
push
xchg
das
in
mov
and
mov
jno
inc
add
xchg
pop
push
cli
fstpl
jmp
push
lea
mov
mov
mov
arpl
push
adc
push
inc
cld
popa
sbb
pop
call
mov
push
sub
add
test
outsb
inc
fstpl
es
add
dec
call
push
jno
inc
cmp
xor
mov
clc
or
sub
mov
push
xchg
mov
popa
fwait
fwait
or
mov
negb
jo
loope
cmpsb
out
xor
xor
add
sbb
pop
test
adc
mov
xchg
ret
cmp
pusha
aad
inc
pop
leave
rorl
or
adcl
mov
xchg
sbb
inc
push
pop
inc
bswap
pop
push
dec
adc
hlt
pop
fnstenv
push
int
loopne
cmpsl
inc
push
fwait
shll
sub
popf
pop
fistl
int3
add
jns
repnz
pushf
fnsave
cmp
movsl
fsubs
and
inc
fstl
add
mov
mov
lea
cltd
xlat
jb
stos
ret
lret
push
or
lock
pushf
pop
rcll
into
push
fsubl
xchg
add
add
and
dec
ljmp
mov
fcmove
and
rol
push
fwait
xchg
mov
stc
jp
inc
icebp
fmuls
test
int3
or
cmpsl
outsb
insl
and
mov
imul
push
or
pusha
push
emms
jo
push
ret
cmpb
aam
cmpsb
pop
ret
and
or
lods
mov
and
movsl
loope
jbe
mov
inc
sub
icebp
push
inc
add
scas
rcll
testl
nop
xchg
pop
push
dec
lods
jg
cmp
jbe
push
dec
and
cmpb
push
scas
xor
sarb
inc
das
dec
lock
outsl
push
call
mov
stc
ds
xor
ret
incb
cmpsb
mov
test
and
xor
cwtl
lret
adc
cwtl
adc
movsb
sbb
add
sub
dec
movsb
out
dec
sbb
push
add
inc
dec
jge
xchg
test
fs
inc
js
or
push
mov
mov
sub
inc
shlb
push
movsl
pop
mov
nop
mov
pop
cmpsl
adc
cmp
addl
jno
ret
pop
xchg
cwtl
add
or
xchg
test
add
stos
or
mov
leave
push
adc
mov
add
pusha
mov
push
sub
inc
xor
inc
sbb
je
jg
lods
push
fadds
adc
and
mov
push
pop
cmpsb
push
push
or
test
ltr
and
cltd
test
imul
cltd
inc
sbb
xchg
popa
add
loopne
sub
fstps
clc
rclb
enter
push
mov
jo
and
lcall
fwait
mov
push
dec
push
fs
shll
lock
dec
mov
add
cmp
out
push
mov
push
add
sub
jecxz
inc
mov
jbe
adc
inc
cs
xlat
fsubs
mov
add
mov
fs
fs
mov
cwtl
pusha
ss
mov
cmp
cmp
iret
add
sbb
and
mov
and
and
mov
adc
test
repz
and
incb
pop
xor
xchg
xchg
js
popa
mov
add
push
adc
sub
mov
andb
dec
js
push
testb
adc
pop
xchg
in
dec
xchg
fdivr
add
cmp
dec
repz
xor
in
adc
xchg
call
leave
imul
loop
les
jmp
dec
in
bound
sub
sub
seto
popa
ss
stos
test
mov
test
add
inc
cmp
repnz
shrb
insb
enter
adc
dec
sahf
hlt
out
sub
add
xchg
sub
or
ds
add
sub
shr
sarb
rolb
jo
or
add
inc
movsl
fnstcw
or
jp
clc
and
cwtl
mov
stc
orb
icebp
jmp
push
adc
sub
and
in
call
jo
daa
push
jmp
loope
test
mov
adc
cwtl
pushf
or
dec
sub
mov
sbb
lahf
mov
pop
adc
inc
jmp
add
ret
xlat
mov
fdivrl
xchg
iret
dec
sbb
enter
and
mov
mov
cmpsl
xchg
ja
inc
lods
loopne
shlb
jmp
mov
mov
lds
sbb
xchg
imul
or
mov
stos
icebp
fidivl
nop
jo
xchg
aas
lea
and
cmp
jle
dec
pop
dec
mov
mov
aam
into
decb
fld
or
jg
out
mov
popa
sub
shll
mov
enter
cmp
add
test
mov
outsl
push
pop
jmp
imul
xchg
fidivs
mov
xchg
jnp
jge
xchg
push
dec
add
scas
rol
pushf
mov
mov
cld
or
xchg
popf
test
outsw
cmp
cmp
and
sub
xchg
mov
xor
mov
lret
jle
push
leave
mov
cltd
add
cld
cltd
sbb
sub
pop
test
je
or
or
fnstenv
sub
sub
lds
mov
push
shlb
pop
pop
push
mov
cli
insl
js
and
cmp
rorl
jmp
mov
in
or
sbb
pop
jl
push
push
push
inc
inc
mov
add
mov
jecxz
add
out
jmp
daa
xchg
add
frstor
sub
and
pop
popf
loop
xlat
mov
repz
adc
sbb
nopl
inc
je
shll
xor
dec
lock
adc
dec
mov
sub
push
inc
lock
insb
xlat
push
stc
or
bound
push
push
dec
mov
push
jmp
enter
push
gs
lods
add
in
cmpsl
or
mov
es
add
dec
jno
cltd
icebp
push
xor
jo
mov
lret
or
pop
lock
out
movsb
or
pop
push
xor
pop
test
adc
addr16
scas
cmp
push
cmp
and
xchg
cmp
and
fsts
dec
mov
incl
push
sub
sub
push
jl
mov
sbb
push
xlat
mov
mov
pushf
and
pop
or
mov
sub
gs
sub
mov
int3
ljmp
jge
add
mov
rorl
jnp
push
sub
inc
xor
mov
add
push
and
and
xor
mov
push
and
jne
fwait
jno
pop
push
mov
sbb
mov
test
movsl
out
mov
mov
mov
push
add
pop
cmp
lret
add
mov
sbb
pop
lds
adc
or
add
jo
add
popf
add
sarb
push
or
cmp
jl
test
xlat
mov
mov
lahf
xchg
add
or
sbb
ds
jno
push
or
xchg
mov
out
cs
decb
fwait
js
loope
shlb
les
sub
outsb
lock
and
inc
es
loopne
int3
nop
test
ret
adc
xchg
cmpsb
add
lods
jl
or
pop
push
jbe
mov
inc
or
inc
inc
and
dec
inc
in
jp
hlt
fdivrl
hlt
mov
lock
add
xchg
xor
xor
xchg
leave
cmp
xchg
jns
clc
and
mov
stc
sub
lods
xchg
loop
adc
je
addw
stos
scas
jo
ljmp
js
cmp
dec
in
iret
jg
outsb
adc
push
in
cli
jbe
or
imull
add
push
jge
push
jle
pushf
repnz
or
jp
outsb
and
pop
bound
lods
push
or
call
sub
sbb
lock
sub
or
cmpsl
xor
je
push
cmpsb
dec
cmp
mov
shlb
jp
sbb
or
xor
fs
inc
jmp
sahf
push
fisubs
cli
incb
call
and
jne
add
push
loope
push
daa
iret
push
or
add
push
je
push
lds
or
adc
adc
lret
push
xor
jmp
pop
cmpsb
add
push
push
cmpl
add
nop
rorl
les
aaa
mov
cli
push
add
inc
hlt
orl
xchg
hlt
inc
lret
xchg
ret
adc
push
mov
mov
cmc
inc
rcrb
fcoml
adc
movsl
xor
and
fs
shr
jo
imul
xor
lret
stos
push
mov
inc
xchg
mov
aam
sub
mov
sub
mov
test
lcall
cmp
pop
push
fsubs
rolb
mov
nop
sbb
ret
movl
adc
push
fcomp
sbb
nop
stos
pusha
or
pusha
and
roll
mov
les
or
andl
push
xchg
mov
or
aad
fmull
in
sub
addb
jne
loop
adc
dec
xchg
leave
jp
dec
stos
adc
pusha
xor
std
push
mov
push
push
dec
ret
xchg
add
sub
into
xor
adcb
add
fdivs
mov
idivl
mov
test
xchg
sbb
sub
call
iret
cmp
xlat
add
pop
lea
daa
idivl
mov
outsl
jle
inc
inc
lcall
and
sub
mov
pop
outsl
push
insb
push
adc
sbb
pop
jg
adc
stos
xchg
fldenv
out
sbb
out
and
rcll
pop
mov
push
jno
mov
test
dec
addb
insb
mov
dec
add
or
insl
pop
push
test
mov
or
adc
jo
fwait
ss
inc
in
mov
jno
adc
mov
xchg
xor
and
xchg
xchg
push
cmpsl
fcmovnb
fcomps
and
aas
mov
test
or
adc
push
es
les
gs
add
mov
push
into
cmp
cmc
xchg
lods
sbb
push
lods
and
dec
in
push
jmp
mov
add
adc
cmp
jmp
rorb
inc
jb
incl
fcompl
xor
xor
test
sti
arpl
xchg
in
dec
popa
cltd
das
sbb
dec
cmp
sub
and
pusha
icebp
insb
fildll
repz
sub
mov
lret
jae,pn
add
cmp
push
test
xor
lds
sbb
xor
push
pop
and
es
push
xlat
pop
bound
inc
dec
imul
sub
dec
jl
push
ret
adc
movsl
cmp
pop
outsl
out
push
add
cltd
mov
lds
mov
cmp
ja
and
test
loopne
ret
inc
cmp
pusha
jl
xor
mov
and
movsl
add
adc
xchg
xchg
mov
outsl
fisubs
loop
xchg
xor
shr
xchg
test
lock
add
fcoml
jb
mov
mov
nop
subl
test
call
cmp
call
add
aaa
jmp
add
xor
mov
cmpsl
in
dec
fstpl
adc
and
dec
loopne
fxch
sbb
jl
sbb
inc
lcall
jb
xor
or
daa
push
mov
mov
inc
mov
fcmovu
push
push
js
mov
or
ret
inc
xor
add
iret
and
mov
imul
push
sub
mov
add
mov
mov
dec
jmp
cwtl
or
test
jl
testl
pusha
mov
push
pop
outsl
and
test
inc
test
mov
push
rorb
sbb
pop
mov
mov
mov
nop
cmc
sub
or
out
aaa
adc
loopne
xlat
test
jb
push
add
into
sahf
push
mov
jg
inc
cmp
adc
imul
aas
jg
and
stos
nop
lea
xchg
stos
je
in
jmp
adc
addr16
add
add
lock
sbb
fidivl
inc
dec
mov
adc
and
stos
adc
int3
rol
and
cli
xor
jle
je
mov
add
push
dec
or
jecxz
out
or
pop
pop
shrb
add
jecxz
cmp
push
inc
imul
add
insl
dec
int3
jecxz
in
dec
popf
in
or
fbld
jl
call
cmp
pop
out
cmpl
out
add
inc
repz
fs
or
push
imul
adc
or
xor
cli
pop
aam
mov
add
sti
inc
in
push
add
sub
inc
sahf
fnsave
push
orl
insl
add
add
je
rclb
xchg
or
adcl
test
mov
pusha
enter
inc
adc
xchg
push
mov
xlat
clc
cs
cli
and
push
xor
int3
xor
adc
addl
add
femms
push
pop
xor
or
sbb
mov
inc
push
in
adc
jmp
adcb
aam
jp
cmp
or
sahf
push
icebp
mov
push
aam
cmpb
jl
or
push
xor
mov
fcomip
push
pop
out
aam
gs
jecxz
adc
loope
negb
push
push
xchg
push
dec
scas
or
les
je
pop
pop
xchg
imul
rol
cmpsb
adc
push
xchg
dec
fcoml
push
or
jge
fcomip
shlb
mov
lods
test
xor
pop
and
fsubr
mov
int
inc
or
xchg
cmp
sbb
cmpsl
lret
rolb
jne
add
adc
addb
out
loopne
cmp
fdivrl
or
lret
jecxz
sub
jo
or
enter
dec
push
push
orb
xor
xor
es
into
movsl
es
push
pop
cmp
insl
and
rep
out
sub
pop
insb
shlb
es
imul
nop
jmp
mov
pushl
jg
js
mov
pop
push
pop
xlat
cld
xchg
dec
outsl
xor
arpl
sub
dec
jbe
pusha
jl
mov
or
mov
ret
pop
push
js
insb
push
push
xchg
test
fs
jns
mov
movsl
in
scas
cmpsb
mov
cwtl
mov
adc
test
xchg
loopne
and
push
faddp
mov
mov
in
ret
push
dec
nop
lret
imull
sahf
lock
pop
or
and
lret
lret
lret
mov
mov
mov
lret
lret
lret
les
clc
sub
push
mov
into
ja
sarl
jne
xchg
rorb
imul
pshufw
jns
sub
push
scas
aam
add
xchg
adc
mov
xchg
jge
add
lahf
sarb
jbe
push
sbbb
cmpsl
mov
icebp
test
xor
insl
mov
or
mov
push
push
dec
test
jbe
xchg
jl
xchg
or
in
orl
popf
add
mov
js
mov
xchg
adc
mov
stos
xor
and
lods
les
xchg
ds
add
leave
fwait
rorb
call
test
fwait
xor
xor
fistl
mov
es
inc
lret
test
xchg
jmp
mov
xchg
push
cmp
je
sbb
xor
inc
jge
std
lods
and
push
inc
outsl
loope
mov
or
xchg
xor
ret
jne
jmp
push
sahf
adc
movsb
xor
lea
test
dec
les
das
orb
add
lods
insl
jo
bound
arpl
test
adc
add
arpl
jo
dec
lock
push
push
jmp
mov
jmp
or
pushl
cmp
inc
pop
push
iret
cs
cmp
lcall
aaa
movsb
stc
cmp
inc
sub
das
lcall
push
mov
add
cmp
loope
adc
and
dec
shlb
push
jmp
push
adc
ret
and
outsb
mov
or
and
cmpsb
lock
insb
sarl
leave
sbb
movsb
cmp
shr
pop
test
les
fnstsw
xchg
cmc
icebp
les
mov
lock
js
inc
imul
data16
xor
aam
aaa
xor
push
and
mov
sahf
jmp
rcll
dec
movsb
add
pop
test
mov
adc
mov
mov
fs
shlb
hlt
mov
mov
or
and
cwtl
push
sub
pop
add
adc
rcrb
movsb
xor
nop
das
sub
pop
dec
movsl
test
mov
les
dec
pusha
xorl
push
insl
sbb
sub
xchg
fiaddl
jl
fcompl
inc
popf
sbb
add
push
sub
or
push
jmp
js
add
cmc
adc
add
sub
mov
mov
push
cmp
aam
push
lret
lock
xlat
scas
adc
cld
movsb
hlt
pop
in
fistl
cmp
lcall
mov
jle
push
pop
mov
addl
adc
adc
lcall
addr16
pop
mov
bound
add
sub
adc
mov
adc
push
add
xor
jmp
and
ljmp
in
and
cmc
ds
popf
lock
cld
pop
in
inc
nop
nop
inc
cmp
xor
add
sub
sarb
inc
lock
mov
ds
les
mov
sub
add
xchg
push
push
push
call
repz
popa
and
push
fmuls
add
lock
push
int3
aas
sbb
pop
or
push
lods
jne
mov
jmp
loopne
add
arpl
push
mov
cmpl
lock
pop
and
xor
gs
movsl
push
push
movsl
mov
inc
hlt
fstl
fadds
decb
in
loopne
std
mov
fldl
pop
fsubr
pop
faddp
andl
sbb
and
or
pusha
jno
mov
sbb
mov
fldenv
loopne
in
lods
scas
and
andb
push
mov
imul
ret
cmp
imul
popa
call
pop
movsl
aaa
cmp
and
xchg
and
mov
pop
sbb
add
rcrl
nop
call
or
mov
lea
push
or
aaa
mov
sub
mov
fcompl
aaa
scas
push
or
enter
sbb
loope
dec
aas
es
fisttpl
dec
std
incl
movsb
das
lret
mov
mov
int3
dec
add
in
negb
lock
push
scas
pop
cmp
jp
mov
add
sub
mov
add
or
mov
lock
add
dec
mov
cmp
jge
test
dec
lret
adc
jb
adc
inc
dec
mov
dec
test
dec
loop
push
dec
mov
push
testb
gs
aaa
add
sbb
pushf
aad
stos
movsl
dec
inc
mov
inc
cwtl
inc
and
sbb
adc
adc
pop
cs
add
cmp
inc
adc
cwtl
pop
sarb
es
loop
clc
push
jne
jbe
imul
inc
add
jb
add
test
or
jns
mov
mov
adc
or
pop
dec
jbe
pop
xor
ret
test
shlb
mov
and
lods
add
movsb
lds
repz
sarl
cwtl
mov
jmp
ret
xchg
push
orl
sar
dec
or
jne
push
adc
xorl
mov
ja
lret
inc
push
jecxz
daa
xchg
rclb
daa
int3
gs
into
leave
pop
fwait
xor
call
leave
xor
test
inc
mov
xlat
sbb
add
push
les
mov
inc
pop
enter
in
cmp
sbb
cltd
das
imul
sub
inc
pop
fildl
lret
test
mov
aad
xor
mov
and
push
out
loop
or
pop
pop
inc
jne
push
push
push
and
xor
rcr
push
mov
lcall
pop
sbb
loope
xchg
inc
mov
and
inc
insb
add
shll
and
shlb
je
popl
les
int3
daa
ret
and
stos
das
ret
xlat
aam
xor
loopne
inc
add
xor
fdivs
adc
fsubl
addr16
push
mov
jmp
cli
xchg
push
popf
dec
ret
cltd
cmpl
mov
sti
or
jge
dec
jne
cmp
fadd
push
arpl
xor
jmp
int3
test
adc
inc
pop
mov
std
pop
adc
test
pop
xor
mov
jno
loope
dec
pop
sbb
push
push
imul
jmp
jmp
mov
movl
dec
sbbb
loopne
sub
sahf
xchg
and
lock
clc
hlt
adc
bound
repz
push
sub
xor
add
fstpl
jle
cmp
mov
jns
cmc
aad
test
in
outsb
push
adcb
dec
mov
and
mov
jbe
or
inc
and
in
int3
push
sub
xor
rcrl
add
push
xor
xchg
push
cmpsb
and
rolb
add
xchg
leave
and
dec
xchg
jecxz
cmp
fcoms
sbb
sbb
cmp
xchg
xchg
add
mov
je
inc
xchg
inc
and
das
js
ret
dec
push
lods
jmp
iret
out
sahf
push
dec
arpl
mov
add
push
out
or
mov
push
repz
mov
mov
cmpsl
cmp
or
test
cltd
shrl
pop
mov
ret
jnp
sbb
jmp
lret
fistl
and
lcall
sbb
adc
jecxz
test
push
dec
add
pop
add
cmp
jae
rcll
push
push
push
jecxz
addb
add
nop
addl
jge
push
sub
in
cmp
sub
insl
mov
jne,pn
or
mov
insb
sub
adc
pop
pop
push
adc
mov
pop
and
aad
xlat
xor
loopne
loopne
dec
test
mov
sub
loope
inc
cmpsl
and
or
jno
sbb
jl
jmp
cmpl
mov
mov
sbb
ret
fbstp
xor
icebp
and
xchg
loopne
jl
nop
lahf
xor
push
xor
mov
push
cmp
leave
jge
sbb
push
fsubrl
cmpsb
and
cmpsl
or
or
ret
push
jns
dec
and
lock
das
stos
add
xor
test
je
hlt
or
xor
adc
mov
test
fsubrl
mov
inc
mov
inc
data16
popf
or
xor
ret
ret
call
fiadds
or
dec
fadd
sbb
push
pop
scas
and
mov
inc
mulb
push
push
push
ds
lret
xor
and
push
xchg
mov
test
popa
mov
arpl
aam
jns
inc
int
pusha
xor
push
in
lock
add
push
push
push
dec
adcl
movsl
ret
test
into
lock
pop
inc
incb
arpl
mov
xor
lret
ret
push
sbb
or
sbb
push
cmpxchg
test
add
and
mov
imul
fwait
rolb
repz
scas
loopne
xchg
mov
ja
pop
xchg
mov
sub
adc
push
mov
stos
loopew
stos
lahf
loop
repnz
and
or
pop
sbb
add
jmp
scas
adc
sub
cmp
inc
push
inc
lock
pop
sbb
mov
ret
adc
cmp
and
add
in
and
and
xchg
mov
jmp
xchg
or
or
push
faddl
insb
push
add
and
icebp
jne
lcall
sbbl
sbbb
enter
hlt
xor
dec
push
repnz
or
inc
or
lock
repz
int
in
sar
jb
and
or
mov
cmp
jno
sahf
fldpi
add
or
ss
fnstcw
insb
jb
stc
loopne
clc
jl
or
jmp
inc
dec
sbb
rcl
cmp
dec
sbb
loopne
rcl
lock
dec
leave
daa
pop
push
in
push
inc
dec
fwait
repz
and
les
add
push
les
nop
or
pop
repnz
and
sbb
pop
test
std
lcall
sbb
xchg
xchg
dec
aaa
sarb
xor
and
inc
cmp
leave
dec
stos
sbb
sar
stos
sbb
stc
cmp
xchg
pop
push
sbb
pop
push
push
stos
sahf
pushf
push
sub
bound
je
ror
mov
enter
jbe
repz
rolb
cmp
mov
idivl
lods
push
cmp
add
dec
setg
popa
and
rcrl
or
pusha
insl
sbb
clc
stos
mov
push
add
push
hlt
jge
inc
adc
jge
pop
inc
sub
cmpl
xchg
stos
pop
pop
mov
loopne
call
cld
shlb
pop
sbb
sbb
out
int3
mov
enter
sub
inc
xchg
mov
outsb
test
jl
loopne
and
jo
leave
int
add
enter
jae
and
jns
mov
lret
movsb
loopne
sbb
sarb
dec
pop
add
dec
dec
shrl
cmp
sbb
jmp
call
fld
ret
pusha
add
arpl
adc
psubusw
sub
ret
sbb
fs
mov
cmc
adc
adc
inc
and
xchg
xor
push
aam
dec
mov
mov
sbb
cs
mov
mov
mov
pop
loopne
dec
je
sub
addl
into
pusha
push
sbb
mov
jge
and
lods
test
subb
push
xor
cmp
push
inc
push
shll
xor
adc
pop
fistpll
jo
or
sti
push
aaa
lcall
push
adc
add
nop
in
inc
jne
mov
dec
or
pop
push
adc
stos
xchg
lret
mov
push
inc
aam
push
adc
rorl
sbb
hlt
fistpll
xor
pop
sub
fcoml
or
or
mov
xchg
test
inc
cmp
sbb
mov
cwtl
clc
rclb
in
push
mov
pop
addl
cmp
sbb
xchg
jge
jnp
sbb
fidivs
out
add
mov
push
out
and
xor
clc
inc
pop
and
push
daa
jb
int3
push
inc
add
sti
arpl
xor
add
aam
out
xor
mov
mov
jl
push
inc
sub
push
jo
mov
out
inc
outsb
or
push
aas
lahf
lret
test
pop
sbb
jbe
adc
inc
sbb
pop
or
xchg
in
ret
test
lea
or
pusha
dec
loopne
push
iret
add
jns
jo
sub
push
das
mov
test
rorb
adc
call
cwtl
fidivrs
gs
jne
jae
add
inc
xor
jno
aas
sbbb
psrld
adc
mov
push
imul
sub
cmp
push
enter
pop
push
push
push
inc
xor
in
or
std
sub
push
cmp
cmp
in
in
jl
xor
push
xor
fdivs
and
repz
adc
add
xchg
pop
or
or
ret
jb
or
movsl
and
cmp
and
mov
cmp
sti
lret
cwtl
jp
add
sub
sub
or
dec
jmp
pushf
popf
push
or
xchg
iret
dec
pop
sbb
out
mov
add
cmpsl
push
inc
aaa
pop
fs
add
cltd
cmc
xor
mov
xchg
jle
and
jmp
sar
add
or
ja
inc
pop
adc
sbb
subb
push
and
push
xor
lea
sbb
mov
cmp
xchg
push
push
inc
inc
sub
sbb
ret
jns
daa
mov
or
or
scas
inc
push
arpl
nop
cld
invd
adc
ja
fadds
pop
cmp
sbb
jo
dec
or
pop
or
push
jb,pt
sbb
dec
add
rolb
jecxz
ret
cltd
insl
jmp
lea
mov
jo
adc
dec
insb
jns
je
sub
lcall
push
ds
and
pop
cmp
jl
fimuls
lret
into
js
dec
sub
dec
fsubs
xor
pop
cmp
mov
dec
push
cmpb
es
sbb
sbb
insb
push
pop
enterw
push
sahf
rcr
mov
mov
xor
mov
jg
pop
je
push
mov
cmp
xchg
scas
mov
mov
ret
jmp
or
xor
popa
add
mov
addr16
and
and
pop
jne
jns
pop
pop
sbb
push
sbb
add
out
xorb
pop
ds
das
add
jmp
int
stos
xor
sub
push
jne
xchg
jle
jl
inc
mov
dec
push
jge
lret
sub
outsb
lea
sub
mov
add
sub
push
xchg
sahf
fsubp
lods
mov
ja
add
adcb
dec
es
sbb
sbbb
pop
lret
cmpl
stc
out
pop
push
pop
pop
sbb
add
cmpsb
std
scas
js
add
movb
inc
mov
frndint
fimuls
aas
push
jbe
je
push
add
inc
fs
stos
sub
or
enter
adc
dec
xor
mov
jnp
push
mov
scas
pop
pop
dec
dec
or
add
pusha
add
xlat
loopne
push
jb
inc
adc
inc
addr16
add
or
pop
sbb
add
dec
mov
jle
and
repnz
pop
or
cmpsb
fcoms
sar
pop
ret
jmp
adc
ret
mov
push
xlat
dec
outsb
fcoms
mov
jmp
cmpl
ss
ja
mov
push
std
cwtl
mov
insl
popa
mov
mov
cmp
das
jge
cmp
lods
sub
or
dec
inc
or
mov
test
add
push
add
xor
ljmp
xchg
inc
or
inc
xor
push
cmp
test
mov
sbb
cmp
jne
sub
add
mov
nop
adc
in
push
jl
movsl
sub
scas
inc
pop
in
scas
cli
movsl
cmp
xchg
inc
icebp
push
mov
jo
call
mov
push
add
cltd
aaa
or
cs
test
fwait
les
js
jle
push
pop
fdiv
je
test
cmp
sub
add
sbb
sub
or
in
cmp
inc
cmp
jne
push
jmp
cmp
xchg
movsl
sarb
add
inc
mov
pop
rcrb
push
and
and
je
and
xchg
mov
dec
and
in
in
adc
mov
mov
fwait
stos
mov
xchg
lcall
aam
cmc
mov
mov
pop
cmpsl
adc
mov
mov
adc
push
les
xrelease
inc
pop
call
mov
test
sub
dec
cmp
sbb
imul
jae
dec
test
dec
sahf
mov
adcb
add
jecxz
dec
int
scas
or
jne
mov
mov
xchg
adc
inc
pusha
inc
pusha
rorb
add
dec
push
pusha
adc
jp
push
or
or
test
pop
stos
inc
loope
in
mov
pop
adc
and
jns
popw
movsb
mov
cwtl
add
jmp
pop
jp
adc
test
js
dec
pop
inc
in
lods
gs
stos
adc
mov
pop
xchg
out
daa
mov
loope
and
add
jp
add
imul
adc
adc
dec
push
aas
mov
sbb
or
fnstcw
mov
bound
decl
adc
xchg
push
xor
dec
pop
adc
xchg
and
je
call
push
mov
test
or
inc
fs
dec
jl
jle
sarl
sub
mov
rorl
cltd
pop
test
push
mov
popf
loopne
jl
adcb
inc
inc
adc
pop
mov
sub
fimull
add
insl
and
test
jmp
popl
ja
movsl
fcmovnbe
add
and
mov
add
and
dec
and
jbe
mov
or
jmp
or
mov
jbe
adc
sub
add
ret
vmread
dec
fldl2t
adc
adc
jne
cmp
add
push
or
clc
clc
popa
xor
out
popa
xchg
mov
pop
pop
rolb
sti
or
jb
fwait
add
mov
jg
jmp
bound
dec
or
sbb
fisubs
xor
popf
shrb
adc
add
jno
pop
xchg
ja
pop
add
jl
add
ds
negl
call
es
ret
cmpl
lahf
sub
test
sub
xlat
and
or
xor
mov
mov
icebp
adc
test
sub
fsubrp
fstps
lahf
mov
push
stos
xchg
repz
push
add
jg
adc
dec
hlt
jl
push
push
push
inc
pusha
sbb
cmp
icebp
adc
push
addl
rolb
sub
cmp
jnp
es
hlt
stos
cli
lock
xorb
jmp
push
and
outsl
test
or
insl
xchg
arpl
inc
lahf
adc
arpl
mov
sbb
jge
shrl
xor
aam
inc
insl
into
js
sbb
ds
cmp
jl
sbb
pop
or
adc
test
sub
and
push
and
xchg
jne
xchg
jno
hlt
fnstsw
fwait
jp
add
out
in
jle
xchg
push
pop
or
adc
and
or
sub
add
jp
sbb
pop
add
iret
jo
and
fcmovb
ret
pusha
sbb
xchg
push
mov
rol
or
lret
adc
lods
add
cmpsl
jmp
push
push
sub
out
fs
and
jmp
test
adc
jne
das
add
jg
cmp
jbe
push
and
iret
xor
dec
insl
mov
and
jge
xchg
cmp
pop
jo
fisubrs
ss
lea
jmp
push
xchg
add
mov
adc
ret
mov
dec
es
cltd
imulb
in
add
push
push
ret
dec
scas
in
push
pop
xchg
dec
leave
jae
push
pop
push
adc
sbb
pop
jne
fsubs
clc
xor
mov
test
cmp
ja
dec
mov
rclb
push
push
sbb
xor
sbb
ss
aas
pusha
push
push
xor
or
and
jb
adc
or
mov
in
or
or
add
or
mov
adc
mov
jg
addl
jo
push
push
dec
push
cli
ss
gs
out
adc
sbb
or
icebp
in
std
daa
in
sbb
dec
xchg
xor
add
fwait
lcall
adc
xor
push
or
or
ret
xchg
lahf
push
add
add
inc
scas
adc
sub
mov
ret
insb
call
lods
inc
add
dec
adc
je
xor
iret
push
mov
js
loopne
inc
push
inc
cmp
push
adc
adc
jmp
push
and
out
out
or
lock
sbbb
aam
sbb
or
inc
adc
inc
lcall
shll
add
in
push
movsl
mov
and
in
and
pop
sbbb
add
dec
add
adc
fadds
cmp
mov
ret
lods
loope
pusha
popa
fadds
push
mov
xchg
and
jmp
push
add
sbb
call
mov
xchg
cmp
stos
cmp
push
test
add
xchg
mov
aam
sbb
add
pop
or
imul
jo
mov
in
push
nop
xchg
fildl
mov
mov
and
mov
adc
das
xchg
fs
test
push
sbb
sub
jne
sbb
adc
push
inc
scas
fsubrs
xchg
rolb
adc
lret
push
push
mov
push
ret
test
fsubrl
cwtl
insb
popf
rolb
fstl
insl
fdivrs
mov
push
sub
jl
inc
push
add
rclb
mov
ljmp
inc
mov
push
out
xchg
out
xchg
push
nop
mov
sub
mov
sub
push
jo
xor
icebp
roll
jbe
dec
mov
fsubs
and
lods
xchg
dec
jb
dec
adc
inc
scas
fistpl
sarl
add
cmp
jecxz
sbb
dec
jo
out
add
and
out
add
or
hlt
xorb
pop
sbb
sarl
pop
mov
scas
les
push
roll
lods
ja
or
imul
xor
or
gs
pop
or
adc
mov
rorl
mov
sub
cmp
mov
leave
fisttps
pop
or
push
out
add
aam
adc
sub
adc
adc
fsubs
pop
call
insl
jge
mov
add
adc
adc
cmpb
jnp
add
and
pusha
fdivrl
shrb
mov
add
adc
sti
mov
movsb
cmp
stos
pop
in
movsl
ds
push
adc
mov
addb
nop
jns
lea
aas
inc
test
hlt
imul
shr
push
pop
mov
xchg
scas
and
add
sbb
aas
adc
stos
mov
inc
sbb
ss
in
push
mov
push
enter
testb
or
push
lods
shl
insl
jo
notl
lds
loop
push
and
inc
lcall
in
movzwl
orb
movsl
jmp
xchg
popf
test
ja
sahf
mov
and
out
icebp
lods
movsl
ja
pop
mov
sbb
push
shlb
pop
cmp
cmp
out
int3
jg
iret
iret
mov
or
mov
subb
aam
in
out
push
fidivrl
sbb
adc
inc
jmp
sub
pusha
jae
js
sbb
lods
sbb
sbb
les
fmull
out
movb
push
mov
xor
ficomps
orl
enter
inc
cmp
ja
loop
adc
mov
pop
mov
add
sub
inc
push
push
mov
add
and
call
sbb
test
sbb
sbb
movsb
or
mov
orb
rorb
daa
mov
shr
mov
mov
push
mov
mov
jle
jmp
xorb
mov
adc
ss
adc
push
stos
mov
mov
fnstcw
das
and
dec
movsbl
mov
pop
xor
repnz
out
adc
and
je
outsb
rorl
push
mov
mov
adc
int3
pop
rorl
push
pop
add
jne
push
cmpb
xchg
sub
rcrb
or
pop
ljmp
loopne
bound
adc
or
jle
bound
gs
cmp
inc
add
call
sub
hlt
mov
in
icebp
xor
popf
add
jmp
push
cmp
or
daa
dec
lret
or
adc
andl
xor
rclb
add
and
adc
sahf
cmpsb
cli
imul
sub
jmp
hlt
add
xor
pop
inc
rolb
dec
ja
inc
cmpb
std
fimull
aam
inc
add
jnp
arpl
pop
out
cmpsb
push
add
leave
leave
leave
add
leave
pop
or
or
jnp
out
out
or
jbe
jmp
or
addr16
out
por
jmp
adc
pop
adc
push
out
out
adc
dec
adc
dec
adc
aas
out
out
pop
jmp
sbb
xor
jmp
out
out
sbb
es
and
pop
push
shl
out
jmp
and
or
xor
aaa
add
and
pop
hlt
inc
cmpxchg
pop
xchg
jae
sbb
shl
sahf
mulb
lods
loop
push
ljmp
add
or
adc
and
jns
out
das
xor
ds
out
sahf
out
dec
push
push
pop
sahf
out
sahf
popa
imul
jns
out
jg
mov
out
popf
mov
bound
push
pop
or
and
or
or
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
sbb
cmp
dec
add
cmpsl
stos
cmc
adcl
inc
jnp
imul
ss
cmpb
ja
push
adc
add
inc
adc
sub
fnstcw
sub
xlat
jbe
pushf
les
test
loop
sub
jb
jb
out
aam
ljmp
jle
mov
add
push
movsb
push
shlb
fistpl
xor
push
cmp
ljmp
sub
inc
xor
cmp
ret
shrl
push
call
and
xor
jns
jmp
jns
fldl
ljmp
enter
ret
add
movsl
dec
and
in
les
lods
cmp
mov
jb
call
shll
and
jle
xor
data16
pusha
sbb
jns
push
stos
xchg
les
mov
js
inc
cmp
cltd
sub
addl
es
test
dec
rcrb
cmp
jae
inc
mov
fcompl
jmp
decl
jno
inc
jge
shlb
pop
and
cmp
inc
fidivrl
cmp
push
inc
pop
cmp
sub
lea
add
shr
xor
and
addr16
fcomps
sbb
mov
ret
movl
dec
ret
push
mov
fidivrl
inc
aaa
cmp
jbe
test
loopne
mov
loopew
add
arpl
push
pop
dec
fadds
mov
fadds
ds
dec
mov
mov
mov
lea
imul
cmp
ja
hlt
outsb
fsub
stos
mov
stos
pushf
or
dec
rolb
sbb
or
dec
xchg
lock
inc
loopne
add
adc
and
and
or
pop
and
dec
test
icebp
popl
xchg
adc
add
shlb
push
cmp
dec
xorb
arpl
add
pop
mov
mov
and
call
add
call
adc
sbb
or
test
stos
xchg
int
sbb
mov
jg
popf
nop
mov
loope
hlt
xchg
orb
mov
pop
sahf
mov
jae
pop
jb
inc
sbb
popf
adc
andb
adc
mov
push
cmp
pop
les
xor
popf
inc
loopne
mov
and
jg
loop
out
push
dec
and
xchg
inc
cmp
scas
shr
iret
cmp
sbb
mov
inc
out
xor
movl
cltd
repz
les
imul
xchg
add
mov
movl
sub
mov
addl
inc
jns
rorb
mov
shl
dec
and
jl
sbbb
cmpsb
sbb
gs
or
fidivrl
inc
cmp
jl
nop
dec
sbb
cs
test
cwtl
fadds
xor
cmc
jmp
mov
cli
es
lea
cmp
inc
ret
add
or
jne
or
js
out
ss
xor
jmp
sbb
cmp
aad
or
or
mov
cmp
fnstsw
cmp
jl
dec
cmp
js
test
jae
test
pusha
and
movsl
shlb
pushf
cwtl
cmp
jae
js
ljmp
mov
push
push
push
mull
je
push
push
adc
sbb
or
pop
jecxz
addl
inc
in
ss
inc
sub
sbb
mov
ret
mov
inc
mov
and
mov
sub
outsl
xor
inc
sub
xchg
lock
cltd
ja
jmp
test
adc
nop
jbe
push
mov
cmpsb
mov
loope
ret
inc
or
loopne
dec
inc
in
inc
mov
int3
push
mov
or
dec
enter
ret
push
mov
mov
add
es
pop
adc
js
jne
xchg
sub
cmpl
push
sbb
cld
movsl
and
pop
pop
clc
sets
mov
testl
sub
in
mov
push
jmp
int3
mov
dec
cmpsl
sbb
or
push
push
cmp
mov
mov
jne
mov
inc
sub
lahf
pusha
or
add
dec
mov
lcall
imul
xor
es
loopne
add
mov
push
push
loope
in
out
cmp
add
inc
lcall
and
xchg
in
shl
pop
pusha
ret
testb
add
enter
bound
xchg
or
cltd
lds
in
pop
dec
adc
jno
or
sbb
add
pusha
and
add
ja
jne
test
add
push
outsb
or
scas
ljmp
add
jmp
std
inc
sbb
push
pop
or
mov
push
pop
pop
mov
pop
pop
xor
movl
incl
mov
js
pop
clc
je
jmp
jecxz
neg
push
bound
or
sub
fcomi
lret
cmp
push
cld
cs
and
ss
or
sub
sbb
das
fwait
push
or
leave
ficompl
outsb
inc
push
mov
sbb
sub
sub
or
clc
mov
pop
inc
push
push
adc
push
lret
jge
xor
fisttpl
mov
dec
inc
xchg
test
jae
and
loopne
jo
je
mov
xlat
clc
ss
xor
push
pop
or
mov
icebp
cmp
xchg
sbb
loopne
nop
inc
xor
inc
xchg
cmp
adc
dec
sarb
arpl
out
in
rclb
ficoms
rcl
push
ret
stos
ret
dec
adcl
mov
or
into
hlt
out
inc
and
inc
in
pop
enterw
dec
push
nop
pop
int
jp
sub
inc
pusha
insb
cwtl
dec
adc
or
mov
dec
jne
popa
es
or
cld
xor
inc
xchg
insl
push
sub
test
inc
adcl
fbstp
and
or
movsb
lock
mov
xchg
cmpsb
sahf
imul
jmp
int
push
inc
ja
push
mov
xchg
icebp
mov
rcrl
stos
lea
test
dec
scas
jge
ljmp
cmp
xor
cmp
cmp
inc
inc
pop
inc
imul
iret
and
or
in
adc
stc
push
add
cmpsb
xor
mov
rcll
mov
jl
or
push
xor
cmpsl
jno
adc
mov
rcl
cmp
jno
cmpsl
cmp
xchg
push
sub
cmp
fsts
fwait
sub
push
jl
movsb
dec
lds
inc
movsl
cmp
adc
out
inc
sub
int3
sub
or
cwtl
or
or
push
jno
pop
adc
negl
aaa
push
cmp
sbb
jmp
scas
je
inc
mov
and
imul
lock
lret
lock
sar
pop
in
je
lea
bound
or
push
mov
cltd
and
mov
subl
stos
mov
mov
and
jmp
fsubr
ljmp
pop
out
inc
fmuls
fs
sub
rolb
nop
fistpll
negl
xor
add
nop
pop
fwait
lcall
push
imul
xchg
test
or
fcompl
clc
cmp
jge
sub
ret
rcl
pop
ja
sub
push
lret
pop
aam
sbb
leave
mov
or
xor
adc
adc
cltd
inc
daa
fs
dec
inc
je
ds
test
movaps
and
stc
xchg
inc
pusha
test
lock
ds
mov
sbb
lods
xor
movaps
shll
sub
imul
cltd
pop
lret
clc
loopne
mov
push
xor
sub
xor
mov
scas
scas
mov
sti
and
sti
nop
bound
push
mov
dec
es
and
mov
mov
xchg
in
loopne
dec
adc
lock
mov
pusha
xchg
jnp
lock
push
addb
out
push
cmp
cmp
sub
sub
sbb
cmp
and
jg
call
xor
and
stc
xchg
xchg
subl
and
add
imul
and
cmp
test
add
aam
inc
xor
jb
sbb
add
adc
and
inc
and
sub
or
pop
hlt
lcall
in
call
sbb
andl
les
cld
sbb
int
mov
push
push
dec
adc
cmp
fistpl
add
pop
fcmovne
leave
add
cltd
push
enter
iret
mov
pop
sub
and
xchg
adc
pop
cmpsl
and
mov
mov
adc
dec
fs
adc
adc
imul
popl
inc
jecxz
mov
or
lea
push
les
or
push
mov
adc
jo
adcl
jmp
fildl
cmp
repnz
aas
cmp
push
dec
cld
mov
aaa
fldl
dec
sbb
int
fdivr
push
cmp
jne
and
or
les
jmp
out
add
das
or
dec
dec
cmp
je
cmp
pop
sbb
add
push
push
cld
hlt
sub
inc
mov
jmp
adc
in
mov
xchg
clc
fimull
adc
and
popf
mov
ljmp
jle
sub
adc
add
add
pop
sbb
push
pop
ret
ret
jmp
fstpl
mov
fcoms
bound
or
adc
adc
dec
mov
pushf
push
adc
into
dec
test
dec
stc
out
and
nop
xor
packssdw
arpl
adc
pop
jnp
ficoml
xor
adc
push
mov
daa
shlb
xor
dec
leave
pop
movzbl
out
mov
or
or
call
mov
push
push
cmp
lock
test
mov
popa
andb
sub
mov
mov
inc
les
push
push
or
pusha
lahf
imul
je
cmc
mov
mov
cmp
jge
mov
ret
add
mov
inc
inc
inc
xchg
cmp
mov
add
xor
mov
fnstcw
in
xor
or
notb
mov
lret
lret
lock
clc
clc
cld
lods
add
pop
or
movl
pop
ds
xchg
or
push
add
add
dec
push
test
cmpsb
std
jmp
je
add
adc
cmp
pop
aas
dec
or
mov
shr
sbb
loopne
lret
inc
test
add
imul
mov
or
cld
xchg
mov
adc
neg
xor
jnp
je
push
push
shr
loop
ja
in
fisttps
adc
repnz
std
inc
adc
add
lret
sub
mov
pop
test
push
add
jne
sbb
cmp
jne
adc
sbb
roll
xor
add
aaa
and
inc
adc
das
xchg
cs
or
pop
sub
ret
cltd
idiv
inc
inc
imul
pop
lret
pop
and
clc
jb
or
test
jp
sub
je
mov
add
or
mov
out
mov
stc
push
or
lods
jns
lods
add
adc
push
adc
cmp
cmp
fistl
js
mov
jbe
inc
test
jmp
daa
pop
out
or
mov
mov
test
int3
xor
repnz
loopne
addr16
jae
mov
mov
jmp
jp
push
ds
scas
ljmp
sub
or
or
cmp
je
cmp
pop
cmp
je
cmp
jne
inc
inc
and
mov
sub
or
xlat
fcoml
xlat
mov
arpl
add
cmp
imul
popa
and
test
dec
add
sub
arpl
mov
jne
mov
je
sbb
jg
addl
cmp
push
rcrl
popa
add
fisttpl
sub
jmp
push
jl
or
jg
movsl
std
adc
jmp
popa
data16
jae
push
jmp
inc
jl
inc
jg
aaa
movsb
fucomp
mov
shl
dec
mov
sub
mov
inc
addr16
mov
mov
rol
jg
mov
decl
and
leave
dec
test
sbb
or
push
icebp
popa
jecxz
mov
or
lods
cmp
adc
subl
pop
subl
cmp
sti
inc
jl
pusha
mov
jg
sub
xlat
pmaxsw
xor
jo
mov
roll
mov
aas
cmp
lods
daa
lcall
mov
shr
shrb
pusha
inc
and
and
mov
add
mov
jge
inc
out
gs
mov
das
xchg
xor
xor
fsubs
inc
cmpb
mov
mov
push
add
pusha
and
in
inc
inc
sbb
adc
inc
out
jmp
xor
push
gs
adc
adc
jo
push
dec
pop
push
js
jmp
lock
in
pop
inc
xchg
ret
cmp
cmp
dec
sub
bound
out
arpl
mov
mov
cmp
je
cmp
popl
add
push
adc
sub
mov
mov
jb
clc
lods
into
mov
pop
mov
pop
cmpsl
mov
mov
mov
in
and
cmp
sub
fs
sub
pop
adc
jbe
pop
sub
cmp
iret
shr
or
rclb
jp
ret
adc
xchg
push
add
xchg
mov
jmp
enter
in
cmpsb
cmpl
clc
andl
fmuls
push
add
dec
int3
push
or
mov
mov
inc
sub
inc
pop
xorl
lock
cli
jbe
sub
jge
jne
lods
sub
repnz
mov
sbb
pop
push
add
repz
push
mov
adc
dec
mov
push
pushf
les
inc
or
sbbl
sub
xchg
or
cmpsl
insb
xchg
subb
test
add
and
mov
mov
sti
mov
cli
in
ds
adc
inc
xor
icebp
jmp
sbb
cmp
inc
push
mov
loopne
xlat
jbe
xor
add
and
mov
out
xchg
roll
leave
imul
ucomiss
jl
mov
pop
shrb
mov
rorb
inc
add
push
adc
test
ret
ret
mov
inc
xor
inc
sub
push
sub
fidivl
orl
push
cmp
jmp
cmp
sbb
cmp
sbb
or
inc
stos
cmp
sbb
push
roll
and
jge
pop
test
pop
cmp
mov
xor
cmp
push
mov
push
dec
pop
lea
addr16
or
test
adcl
dec
rorb
sub
inc
inc
imul
sub
jb
mov
xchg
cli
movb
jbe
enter
xor
sbb
push
adc
enter
incl
push
cmpb
jne
arpl
imul
jno
fs
cwtl
add
jo
add
aam
fstps
pop
enter
clc
sub
mov
fwait
mov
aas
add
aam
adc
je
je
mov
fisubl
dec
cmp
cli
mov
in
push
push
xchg
test
push
lcall
adc
mov
lods
xor
mov
popf
cmp
fistps
lea
mov
loopne
ja
add
loopne
pop
push
or
arpl
fimull
les
mov
mov
push
addb
roll
gs
or
or
jge
scas
out
and
push
adc
cmovge
inc
or
jbe
cmp
scas
cltd
dec
jmp
inc
adc
popf
inc
test
add
pop
clc
shll
adc
or
aaa
inc
or
je,pt
inc
mov
add
fsubrl
xchg
dec
repz
subb
shlb
pop
aaa
lods
aaa
les
jne
push
mov
cmp
inc
adc
sbb
bound
mov
mov
shl
push
scas
push
arpl
mov
adc
and
xlat
or
hlt
cmp
cmp
pop
lock
push
jo
push
sti
or
jae
push
push
repz
and
in
rclb
pop
ss
push
into
xchg
xchg
xchg
cli
xchg
sub
call
inc
or
loop
je
push
mov
sub
push
ja
push
ja
mov
mov
cmp
or
or
imul
lea
push
stos
mov
jge
insl
test
leave
test
rol
lret
xchg
inc
adc
sub
xchg
lods
bound
std
jae
out
add
sbb
lods
jg
pop
inc
xor
cmp
jb
daa
dec
xor
jmp
push
dec
pushl
jnp
dec
test
shll
push
sbb
test
loopne
xchg
mov
add
sub
inc
hlt
cmp
pop
add
push
xchg
imul
mov
mov
push
adc
push
cwtl
pop
dec
jne
fldenv
popa
cli
mov
pop
cmp
push
mov
xor
jne
cwtl
push
cmp
bts
inc
dec
or
cmpb
add
jo
cmp
inc
push
sbb
inc
pop
push
ret
sbb
and
mov
sub
or
sbb
adc
hlt
rclb
or
adc
xor
dec
fsubs
add
dec
and
adc
and
dec
nop
mov
out
loope
bound
or
dec
xorl
cmp
mov
repnz
add
xor
mov
adc
ret
add
popf
cmp
sbb
sti
mov
cmpsb
shll
jmp
inc
stc
cmp
mov
out
mov
daa
jne
xor
add
or
and
sbb
aad
mov
add
or
ret
xchg
loop
jmp
xor
or
in
and
aam
mov
xor
mov
pop
mov
inc
test
shlb
pop
xor
dec
cmc
add
lods
xchg
sbb
sbb
push
jmp
sbb
adcb
xor
sbb
cmc
ds
xchg
sub
push
orb
gs
lea
lcall
rolb
sub
and
lret
mov
cmpsb
rolb
add
adcl
sbb
mov
mov
out
cmp
or
xor
and
lds
movsb
shlb
xchg
adc
sbb
or
push
popa
inc
aad
push
lahf
dec
adc
je
pop
test
inc
cmpsl
je
addr16
das
dec
or
push
sub
sub
inc
xor
and
cmp
js
push
and
mulb
mov
xor
push
sbb
in
movl
add
shll
lea
int3
pop
add
push
dec
clc
out
xor
nop
adc
lock
loopne
enter
jl
sahf
add
loopne
or
push
push
sub
mov
inc
lods
mov
movsb
or
add
mov
movsb
jmp
and
dec
inc
mov
dec
mov
cwtl
mov
in
add
adc
push
shr
sbb
push
cmp
pop
xor
push
daa
pop
jl
popf
add
out
test
push
jmp
or
xchg
out
push
or
out
cmpsl
orl
pop
and
add
xor
xchg
daa
sbb
or
or
in
push
test
xchg
or
rorb
or
mov
fiadds
add
into
outsb
push
sbb
sbb
xor
ror
xorl
jbe
mov
fcoml
lahf
cmp
adc
push
shll
lods
add
aaa
or
add
add
popa
shr
add
mov
sub
rclb
inc
mov
xchg
dec
sbb
push
sbb
mov
mov
or
cmpsb
adc
and
out
ret
adc
jl
dec
arpl
add
rcrb
mov
inc
cmpsl
bound
add
dec
add
and
cs
lea
std
mov
xor
sarl
mov
js
xchg
js
push
pop
mov
inc
pop
add
jo
dec
sbb
xor
jmp
jnp
insl
adc
dec
push
jmp
and
call
inc
leave
dec
popf
xor
mov
cmpsl
pusha
mov
inc
or
mov
jns
pusha
cmp
inc
adc
mov
andl
and
xchg
cmc
jno
inc
jecxz
dec
mov
mov
pop
jo
jne
punpcklbw
or
and
bound
cwtl
lcall
lds
dec
jne
xchg
les
and
inc
je
ljmp
sar
andb
lea
inc
cld
ret
push
sbb
lret
jns
adc
sbb
outsb
add
and
jne
test
jbe
cmpsl
ss
and
add
push
nopl
shll
mov
adc
dec
adc
loop
inc
or
jo
nop
out
jo
sti
or
mov
add
or
cmp
sbb
int
adc
sbb
cmc
lods
push
and
cwtl
insb
mov
lods
mov
mov
aam
inc
or
loope
push
jne
dec
sub
flds
iret
jns
push
cli
cmpsb
xchg
cmc
or
adc
push
pop
pop
mov
or
dec
adc
std
inc
imul
outsl
inc
mov
sbb
lea
and
jo
xor
out
out
push
cmp
scas
add
out
je
or
sahf
rolb
sub
push
inc
mov
aad
test
or
adc
cmp
loopne
pop
scas
mov
inc
jne
pop
push
bound
scas
jae
mov
lods
mov
cwtl
pop
push
ror
mov
adc
test
test
lock
rcrl
pop
lcall
scas
xor
mov
fmuls
jmp
mov
mov
mov
ss
je
das
or
mov
and
sub
ljmp
adc
xchg
dec
jb
mov
push
add
or
sub
fbstp
dec
movsl
inc
testb
int
jle
negb
push
stos
cmp
adc
cvtps2pi
sbb
js
pop
sub
inc
or
inc
sub
xor
add
and
vucomiss
adc
sbb
lret
and
jecxz
sub
sbb
sub
and
loopne
fsub
mov
jmp
mov
or
inc
bound
and
adc
fisttps
fbstp
push
push
pop
cli
lods
push
in
pop
idivb
je
sub
sahf
std
in
jae
cmp
pop
mov
jmp
ror
or
push
sahf
rcll
fsts
invd
adc
xor
push
call
push
sbb
sbb
jg
add
pop
mov
fmulp
ret
imul
adcb
ljmp
inc
push
mov
call
out
aaa
add
fldt
jbe
mov
mov
and
out
lock
mov
loop
lock
nop
inc
or
shr
add
leave
mov
and
mov
mov
fs
dec
movb
jb
add
fbld
loopne
push
jmp
pop
and
ret
mov
loope
pop
mov
and
add
jle
sahf
into
mov
push
imul
sbb
shll
mov
jae
cmp
ja
in
std
sub
jae
sbb
push
push
lea
cld
or
cmp
ljmp
and
push
push
sarl
ja
sbbb
add
in
add
mov
jo
pop
aas
test
or
mov
sub
or
jb
lods
rolb
lods
lds
inc
inc
and
shl
test
sub
push
imul
jbe
or
add
add
inc
adc
outsl
arpl
cmpl
je
fsubl
mov
ret
jg
das
adc
lods
fwait
sbb
sbb
pop
push
mov
imul
fisttpl
sub
xor
sbb
adc
push
dec
lcall
sbb
aas
cmp
sbb
int3
daa
sbb
sbb
sbb
repz
sbb
xor
add
mov
or
or
jmp
shlb
aas
xor
sbb
das
sub
mov
push
cli
inc
ret
divb
js
data16
fiadds
and
fcmovbe
pop
add
aas
pop
cmp
cs
lcall
in
mov
xchg
xchg
add
and
adc
ds
ja
inc
jmp
add
push
mov
fs
es
push
cmp
inc
into
push
clc
notl
mov
in
das
popa
sbb
add
xor
adc
xor
popf
mov
push
insb
lods
cld
pop
or
cmpb
sub
push
fadds
jne
push
into
ss
and
jae
fdiv
pushf
dec
cmpsl
adc
bound
ret
sarl
jne
out
adc
test
sar
xor
out
jecxz
and
cld
mov
pop
xchg
jo
mov
lock
adcl
adc
movsb
ficomps
jg
xchg
addr16
subl
inc
stos
xor
xor
adc
push
jg
shrb
ret
push
ja
add
jno
pushf
mov
push
cld
rcrl
and
in
mov
leave
les
xchg
push
btc
or
mov
or
sub
fisttps
push
shlb
dec
push
jmp
add
sub
pop
hlt
cwtl
aas
enter
inc
push
je
cmp
dec
popa
adc
addr16
or
addb
jmp
das
imul
movl
pop
lcall
test
sbb
call
fdivs
xor
jl
cli
pop
inc
push
mov
aam
or
jo
sbbb
xchg
inc
jl
jo
push
cwtl
icebp
xchg
sbb
cmp
loopne
ret
dec
test
jg
add
pop
or
push
cmp
faddl
hlt
xchg
jo
mov
xchg
test
cmp
inc
fcmovb
stos
aas
scas
mov
scas
push
cld
or
add
subl
enter
xor
sbb
lea
pop
xorb
pusha
loop
rclb
cmp
call
xor
mov
pushf
movsl
xchg
aad
add
mov
je
sub
enter
insb
fcmovu
adc
shll
outsb
or
sbb
push
test
push
mov
dec
cltd
lcall
cmc
adc
pop
push
sub
cmp
jmp
mov
jle
push
xor
pop
div
mov
scas
ljmp
jecxz
mov
cmp
addl
xchg
jmp
lods
push
dec
movsb
roll
adc
inc
and
push
adc
test
add
mov
add
lea
push
or
add
mov
pop
cmc
xchg
xchg
jo
movsl
inc
lea
fwait
xchg
adc
add
fsubl
fisttps
push
std
gs
shr
orl
out
xchg
inc
js
rorb
jne
or
fiaddl
es
pop
ret
push
inc
inc
je
aas
xchg
movsl
inc
inc
cmp
cmpsb
imul
rcrb
adc
sub
or
fidivl
bound
adc
call
hlt
ret
or
pop
aad
clc
dec
aam
mov
mov
add
shrb
pop
filds
fwait
mov
push
pop
int3
lods
xchg
add
cmpl
pusha
loopne
popa
and
stmxcsr
mov
lahf
or
sbbb
psubusw
insl
or
jg
jg
fs
test
notl
pusha
jmp
movq
movaps
push
mov
jae
xor
jle
xor
cli
rclb
or
ror
test
decl
mov
imulb
lret
or
jg
dec
mov
sub
ret
adc
jnp
mov
fnstsw
push
and
aam
ret
or
data16
or
sub
in
mov
ja
repnz
roll
jbe
and
sbb
pop
mov
int
out
std
out
fldl
sbb
sbb
inc
pop
dec
inc
hlt
js
sbb
mov
in
pop
mov
push
andl
pop
push
cmpsb
inc
dec
pusha
sti
adc
xor
adc
or
push
jns
push
inc
in
leave
jg
js
outsl
and
ficoms
fcoms
pop
add
and
inc
sub
ja
mov
stos
cld
xchg
jno
push
xchg
je
cmp
rol
add
cmpb
out
sbbb
dec
jp
dec
adc
inc
inc
and
adc
or
or
mov
add
mov
cs
sbb
mov
or
imul
push
test
stos
mov
bound
sub
xor
js
les
ljmp
xor
mov
cmp
mov
and
mov
inc
xor
and
scas
test
pop
mov
push
mov
das
push
cmpb
pop
jmp
jns
daa
pop
loopne
pusha
test
sub
xchg
push
mov
inc
xchg
les
shlb
push
sbb
movb
or
ret
sbb
addr16
sbb
sbb
sbb
int3
adc
jb
sbb
mov
dec
enter
cmc
and
add
scas
dec
out
divl
call
test
testl
and
mov
mov
out
testb
pop
add
jne
orl
out
hlt
xlat
sub
add
mov
call
cmpsl
or
push
dec
sbb
and
int3
test
jmp
mov
adc
dec
pop
outsb
pop
xchg
cmp
rcrl
pop
or
mov
inc
nopl
cmp
sbb
dec
add
icebp
push
push
cmp
cli
adc
push
push
xor
mov
sub
and
mov
or
mov
out
ret
insl
push
mov
sub
add
and
sbb
data16
add
aas
pop
ret
std
jbe
cwtl
mov
stc
pop
xorb
inc
fs
mov
pop
movsl
sti
jle
or
enter
push
push
dec
push
add
pop
addl
cmp
cs
push
jne
in
or
xchg
pop
shr
arpl
mul
sub
mov
mov
add
pusha
cs
mov
mov
pop
shll
cwtl
or
paddsb
inc
inc
push
hlt
jmp
mov
sub
push
jne
insl
pop
popf
or
pop
cld
sbb
and
mov
pop
jne
out
inc
add
cmp
cmp
mov
je
inc
mov
cmp
repnz
cs
shl
or
cmp
jne
dec
jmp
rdpmc
ret
test
mov
jne
inc
aaa
push
lds
mov
push
inc
and
sbb
xor
adc
sahf
lret
push
pop
imul
popf
dec
push
adc
inc
stos
mov
pop
mov
mov
loop
sbb
rorb
scas
lock
or
adc
push
xor
lods
xchg
outsb
ficomps
je
lock
sub
or
fists
inc
or
or
bound
fiadds
test
sbb
int3
data16
icebp
imul
rcll
test
cmpsb
inc
lds
je
add
aaa
lds
daa
inc
mov
sbb
mov
xchg
dec
mov
jmp
cmp
xor
push
in
sbb
imul
jb
lahf
mov
jecxz
inc
jb
xor
int
mov
imul
mov
mov
or
xor
bound
inc
mov
and
mov
cmpsl
xchg
pop
cs
cmp
pop
and
leave
mov
jecxz
loopne
sarl
sbb
mov
lcall
pop
mov
add
adc
movntps
jmp
mov
call
cli
aaa
pop
cmp
pushf
mov
cmp
mov
mov
sbb
jmp
sub
mov
sbb
push
adc
or
jnp
lahf
xor
mov
sub
sbb
add
xchg
cltd
cmp
add
loope
jne
je
jne
adc
ds
test
lret
mov
add
icebp
xor
stc
xor
inc
popf
adcl
andb
add
pop
cwtl
push
mov
jbe
std
push
mov
or
inc
mov
ss
fstp
cmpl
or
loop
ljmp
into
dec
sbb
jb
jle
cmp
adc
lahf
imul
pop
xor
xchg
pop
sub
ss
add
mov
xchg
lret
pop
stc
dec
or
mov
in
add
out
pop
push
inc
sub
xor
loope
aad
pushf
dec
mov
push
filds
mov
pop
scas
push
imul
pusha
add
cmp
jo
pusha
data16
cmpsl
sub
std
cmp
in
into
adc
inc
cs
scas
hlt
pop
dec
mov
dec
insl
mov
std
fnstsw
lahf
pop
or
add
jg
mov
mov
sub
pop
js
push
ljmp
in
js
jne
jns
mov
push
push
sub
mov
rolb
ret
xchg
cmp
push
test
jnp,pt
mov
in
js
or
pop
push
sub
pop
rcrl
pop
gs
or
add
push
push
enter
adc
push
loop
or
push
sti
or
or
or
pusha
ss
sbb
jp
pop
sub
push
sbb
lods
cld
jb
cmp
clc
jbe
add
arpl
dec
and
mov
add
sbb
shr
es
mov
mov
or
jmp
test
jne
test
mov
and
rolb
pop
pop
jno
xchg
lods
cld
jbe
cltd
ret
divb
shl
jle
mov
pushf
pop
cwtl
cs
in
sbb
jne
mov
xor
idivl
pop
xorb
icebp
pop
push
nop
fistpl
pusha
xor
and
pusha
add
xchg
adc
xor
shlb
lcall
push
cld
cmc
ds
cmp
ret
and
jmp
and
hlt
cmp
add
push
push
adc
mov
adc
add
inc
js
xchg
push
arpl
addl
dec
pop
mov
inc
dec
push
rolb
push
test
or
repz
loopne
ret
xchg
mov
inc
data16
and
and
pop
pop
mov
push
add
out
imul
cmp
push
adc
inc
rclb
ss
inc
xchg
mov
stos
aas
frstor
inc
loop
into
inc
rorb
in
adc
add
inc
sub
cmpsb
jb
daa
dec
jne
jmp
push
inc
adc
repnz
insl
movaps
mov
push
shlb
adc
sahf
xchg
dec
imul
loopne,pn
push
inc
dec
pop
xor
mov
add
daa
mov
sub
repnz
and
inc
and
loope
rol
lea
outsb
sub
iret
into
aam
repz
mov
cmp
jne
mov
push
cmp
aaa
dec
jae
jne
es
jne
jmp
repz
or
lock
cs
inc
iret
iret
imul
jmp
std
fxch
stos
cmp
xor
cld
cld
jmp
fcomi
jg
sbb
adc
in
adc
adc
inc
inc
inc
adc
push
test
xor
fdiv
mov
or
pop
outsl
in
jne
push
jb
push
sub
movsl
movsb
xorb
repnz
and
or
pop
push
add
nop
fisttpl
rcrl
mov
ret
or
push
xor
pop
or
mov
add
adc
std
mov
sbb
sbb
or
xor
pop
xchg
or
xchg
mov
or
xchg
cmp
xchg
push
push
test
pop
push
pop
gs
inc
sbb
pop
ljmp
xor
cld
add
or
pop
lcall
rclb
adcb
movb
jmp
lods
sub
add
test
inc
mov
je
mov
rorb
pop
jg
test
cli
add
and
pop
orl
add
add
das
loope
mov
push
into
dec
jecxz
enter
mov
ja
shlb
outsb
jae
out
inc
pushf
cld
xor
pop
into
inc
ret
add
lea
add
shr
shrb
sbb
mov
and
or
xorb
sbb
pop
fidivs
popa
pop
or
dec
pop
add
push
loope
push
sbb
je
adc
mov
in
sub
xchg
mov
ficoms
mov
push
rcl
and
add
xorb
xchg
pop
xor
sarl
pop
cs
sub
inc
dec
adc
sti
es
inc
dec
repnz
xor
push
mov
push
ljmp
clc
or
sub
or
lea
lock
add
fistps
decl
ja
add
not
and
sub
jo
push
sahf
add
in
pushf
mov
icebp
xchg
mov
icebp
sbb
adc
daa
adc
pop
mov
adc
mov
loope
ja
mov
dec
jne
pop
mov
loopne
int
push
lcall
mov
incb
mov
inc
je
mov
fistl
scas
xor
sbb
or
push
jbe
add
jmp
or
mov
inc
inc
push
mov
mov
sbb
scas
mov
pop
mov
pop
add
mov
inc
cmp
jb
mov
jae
shrb
mov
sub
mov
ret
lea
fsubrs
or
sub
in
decl
test
or
test
iret
pop
push
jge
test
jne
or
push
jl
lods
mov
jle
divl
lret
add
and
lock
iret
xor
xchg
fstl
jo
and
sbb
or
mov
dec
or
mov
test
outsb
inc
cld
data16
ret
movsb
out
cmp
je
test
je
or
faddl
aam
xchg
pop
addr16
inc
lret
outsb
or
cld
das
loopne
xor
sbb
lock
mov
dec
adc
xor
les
inc
mov
add
bound
jae
jle
or
jl
and
lret
aas
jo
jne
mov
push
add
adc
add
push
jo
in
inc
push
cmpl
testb
jg
jno
pop
inc
jmp
cmp
sbb
jmp
movsb
pusha
fstl
jne
sub
cmc
xor
xchg
in
adc
adc
cmp
mov
xor
adc
mov
cmp
je
cmp
sbb
stos
jl
or
adc
int
mov
pop
rorb
fmuls
pop
add
adc
mov
or
mov
add
mov
and
je
lret
sbb
hlt
stos
dec
sbb
add
cmp
sub
mov
jmp
cs
loopne
mov
add
sub
push
scas
stos
roll
popa
jne
cmp
mov
loope
mov
mov
adc
shl
cld
std
and
push
mov
sbb
xor
adc
bound
mov
inc
xor
lods
and
bound
das
cmp
add
fiaddl
xchg
fucompp
inc
mov
mov
push
popa
push
sub
push
les
inc
scas
cmpsb
jg
ret
insb
loopne
aaa
jne
mov
hlt
pop
push
lock
mov
inc
mov
dec
jne
fs
add
sub
adc
inc
add
dec
xchg
jo
pop
add
dec
xchg
and
push
add
or
sub
push
addb
andl
sbb
mov
sbb
or
lock
mov
lea
and
pop
insb
sbb
dec
or
shlb
ljmp
jne
add
mov
insb
or
and
jg
hlt
mov
test
add
adcb
adc
jb
lea
jbe
sub
js
pop
dec
test
loopne
and
mov
push
pop
cmp
or
pushf
add
adc
cmp
xchg
pop
scas
mov
scas
pop
ret
es
sbb
mov
nop
push
pushf
enter
pop
mov
addr16
popa
mov
out
pusha
or
or
and
pop
pop
add
pop
lret
jmp
dec
xchg
loope
test
dec
push
call
addb
lcall
mov
sbb
or
or
or
ret
add
jmp
mov
pop
and
cmpl
pop
mov
add
cld
add
jmp
mov
cmp
jo
stos
push
mov
lods
pop
jp
jb
sbb
pop
hlt
push
in
inc
sub
inc
cltd
scas
nop
inc
jecxz
inc
sub
pop
test
les
mov
ret
neg
mov
in
sub
mov
mov
inc
sar
add
fs
mov
or
je
push
insb
pop
push
rcrl
clc
or
sti
pop
frstor
out
inc
pop
push
rcrb
cmp
adc
inc
add
cmpsb
adc
add
or
push
into
dec
clc
ljmp
adc
imulb
or
dec
in
mov
xlat
jle
mov
les
ja
cmpxchg
jp
inc
mov
inc
dec
fsubrs
jne
push
push
pop
xchg
dec
cmpsl
cld
jmp
sub
aam
jge
dec
jnp
or
dec
rolb
jbe
in
inc
push
dec
mov
adc
xor
lret
mov
push
mov
or
je
push
insb
push
dec
add
cmc
xlat
cmp
pop
addl
xor
or
jne
pop
mov
sahf
mov
jbe
test
pop
idiv
or
jle
decl
mov
mov
mov
pop
setne
mov
pusha
adc
daa
add
xor
xchg
das
xor
sub
push
jo
cli
push
add
sub
loopne
dec
imul
pusha
add
push
push
pop
aam
loop
daa
ret
sbb
mov
push
and
mov
jmp
add
sub
pusha
push
push
in
sbb
jns
sub
adc
or
repnz
sahf
hlt
add
or
pop
ficoml
neg
push
and
xchg
loopne
mov
mov
xor
rolb
inc
aam
js
stos
add
jae
mov
lock
in
mov
test
push
jbe
and
lods
cmc
mov
or
cmp
or
out
dec
daa
mov
pop
jecxz
dec
addb
adc
test
faddl
mul
add
outsb
clc
fs
les
jmp
daa
adc
ljmp
dec
mov
adc
sbb
popa
fidivl
or
sar
movsl
push
je
add
or
mov
fimuls
bound
in
lods
mov
add
jmp
sub
dec
sub
push
push
mov
sbb
push
push
pop
cld
mov
es
lea
push
test
jge
les
or
push
sbb
push
inc
xchg
push
jbe
pop
js
push
push
push
addr16
jne
and
cmp
addr16
add
dec
xor
add
jne
or
pop
fldcw
repnz
adc
cmp
out
sahf
jbe
test
movsb
dec
xchg
cmovp
xchg
pop
jns
sub
or
push
mov
or
popf
push
sub
lock
push
iret
or
sub
js
jbe
leave
add
mov
add
jmp
rorb
add
clc
push
in
jg
push
jmp
sub
data16
stos
push
pop
inc
and
sarb
fdiv
and
sbb
cmp
mov
addb
daa
lods
orb
jae
sub
pop
add
push
aaa
or
adc
mov
or
push
test
lock
lods
mov
pop
adc
loop
pop
lea
add
sub
adc
pop
jecxz
lcall
pop
call
fimull
sbb
fst
fsubrl
add
xor
je
xor
lcall
sbb
rolb
add
loop
or
loopne
cmp
mov
pop
jle
dec
aaa
mov
out
push
pusha
ss
cli
or
cld
pop
sub
gs
dec
push
xchg
nop
out
mov
mov
add
movb
add
push
decl
das
sahf
pushl
cmp
xor
testl
push
pop
mov
inc
rcll
jno
push
mov
dec
jmp
sub
push
inc
pop
stos
lret
add
mov
imul
add
into
cmp
lret
push
mov
add
add
sbb
push
inc
push
or
leave
lods
movsl
stos
sbb
cltd
fdivs
insl
or
cmp
icebp
unpckhps
push
sub
dec
lock
inc
and
pop
and
push
stos
mov
push
cltd
fsts
stc
xchg
clc
push
cld
test
fisttpll
xor
mov
lods
fists
adc
fs
lret
fsubrs
sub
and
pop
adc
rorl
pop
imul
out
add
jl
cmp
cmp
cmpsb
mov
inc
mov
jmp
dec
fiaddl
cmp
or
mov
adc
cli
inc
inc
add
add
push
jne
xlat
mov
js
call
and
push
shrb
mov
decb
aad
add
jb
insl
push
scas
cmp
movaps
int3
cwtl
push
push
xchg
inc
push
mov
jb
pop
in
push
add
sub
aad
mov
imul
mov
lret
inc
dec
cmpsl
xorb
jo
fiaddl
stos
mov
test
pushf
ror
gs
dec
out
pop
add
xchg
lods
jge
orb
pop
lea
jl
xor
lea
jb
jns
aaa
jb
dec
cs
dec
mov
adc
add
popa
mov
cmp
add
and
movsl
cmp
insl
push
ds
mov
push
jp
xchg
mov
mov
jge
cli
loop
mov
adc
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
add
dec
aad
int
push
lcall
xor
add
pop
adc
mov
or
push
pop
pop
push
adc
cmp
and
cwtl
xlat
test
pop
xchg
cmp
dec
or
xchg
add
imul
add
and
in
movsl
ja
dec
cld
jmp
adcb
push
mov
andl
jo
push
mov
cmpsb
add
scas
sub
mov
add
ja
or
mov
ss
cli
rorl
jmp
mov
imul
cmp
mov
adc
push
or
mov
out
xchg
stos
outsl
or
cmp
sbb
mov
repnz
jle
sbb
xor
mov
rcl
clc
faddl
mov
cltd
push
adc
stc
rcll
pop
or
into
je
pushf
insl
out
lea
inc
push
inc
popa
arpl
das
in
es
jp
pop
and
inc
and
add
and
or
jmp
pop
pop
xchg
add
cmp
fs
dec
lret
mov
add
mov
and
jge
push
aad
mov
aam
add
mov
xor
pop
movsb
add
movsb
arpl
jp
and
push
xchg
lods
push
leave
mov
outsl
adc
cmp
inc
clc
jb
lret
lahf
insb
jb
pop
lock
mov
fdiv
adc
out
cld
loop
or
dec
pop
pop
jne
out
dec
test
jge
rcrl
hlt
jg
jb
rep
jmp
mov
add
jb
cmp
add
cs
imul
in
inc
aam
add
and
and
in
bound
mov
or
nop
scas
imul
mov
testb
dec
add
lret
push
test
inc
out
or
mov
jns
out
push
test
fs
decl
inc
in
call
iret
in
lock
hlt
clc
and
loopne
pop
jo
loop
jp
sbb
repz
jmp
lock
aam
inc
pop
ret
pusha
pop
mov
and
mov
sbb
je
into
jl
cld
sub
leave
adc
cld
out
bound
neg
fimuls
inc
xchg
stc
sub
inc
xchg
fistpl
pusha
push
test
lods
fiaddl
jl
xchg
frstor
mov
add
sahf
inc
push
out
push
add
cs
enter
addr16
mov
jnp
cmp
add
push
adc
mov
repz
sub
inc
outsb
aaa
iret
repz
sbb
sbb
adc
cmp
repz
adc
or
and
repz
push
jl
fwait
inc
pop
or
mov
js
lcall
adc
ja
pushf
sub
orl
daa
add
roll
out
ret
cmp
xchg
or
je
mov
or
xchg
inc
sarb
dec
testb
push
outsl
pop
rcll
pop
sbb
out
ss
jle
sar
ljmp
mov
or
pusha
mov
jmp
mov
and
jne
push
sbb
xor
stc
sub
sti
xor
cwtl
loopne
push
mov
add
mov
and
jbe
or
jne
out
sahf
cmp
mov
mov
dec
mov
add
inc
nop
lds
test
xor
push
mov
aad
jmp
lods
outsl
add
movsl
outsb
push
shrl
fistpll
or
test
sbb
inc
sbb
or
in
icebp
and
or
cmp
dec
ds
xchg
lret
mov
add
out
xorb
inc
lock
icebp
subl
sti
pusha
cwtl
jmp
lods
push
shrl
mov
daa
popa
and
pusha
cld
add
cltd
adc
sub
call
cmp
out
push
fadd
adc
and
hlt
add
arpl
sub
movsb
cmpb
lock
sub
call
cltd
xor
cmp
inc
sub
rorb
mov
lret
outsb
jp
pop
mov
pop
jmp
xorl
rcrl
or
push
xchg
push
push
add
adc
sahf
stos
push
sub
rolb
or
pop
fwait
cmp
adc
pop
adc
cmp
or
cmp
push
dec
pop
pusha
mov
add
add
xchg
inc
js
cmp
xor
xchg
cmp
xor
add
je
sub
pop
mov
jmp
sub
rorl
lret
je
rep
mov
jmp
ljmp
jns
in
frstor
or
jl
adc
js
je
jo
insb
data16
cwtl
or
add
lahf
xchg
pusha
sub
nop
add
test
add
mov
faddl
popa
test
xchg
movl
cmp
es
rorb
dec
mov
cmp
jecxz
xchg
fsubs
xor
hlt
adc
fsubl
inc
enter
lahf
data16
sub
shrb
pop
into
jo
adc
js
pusha
lret
or
mov
bound
push
cmp
xlat
mov
xor
sub
test
add
xchg
sti
inc
xor
pop
xchg
xchg
andl
popf
nop
adc
adc
cmp
repnz
sbb
arpl
loopne
fdivl
fcomps
int3
xchg
xchg
filds
in
popf
enter
xchg
xchg
les
test
jnp
shl
or
push
fbld
aam
aaa
dec
cld
xor
inc
sbb
and
js
and
in
xchg
clc
jno
insl
push
jne
push
scas
push
jbe
mov
adc
pop
cmp
ret
mov
mov
inc
add
arpl
sbb
or
rcl
add
int
add
and
out
outsb
inc
adc
add
leave
and
jg
adcb
ret
sub
test
pop
or
pop
clc
call
addr16
fisubs
push
pusha
rclb
test
mov
cld
scas
xor
mov
adc
jbe
push
jne
jne
inc
call
ljmp
or
aaa
outsb
pop
inc
adc
cmp
test
jmp
movsl
daa
aam
or
arpl
sarb
mov
sub
dec
xor
call
call
pushf
pop
repnz
ljmp
jns
ret
inc
mov
shll
insl
xchg
add
mov
push
push
sbb
mov
ret
and
ljmp
dec
imul
cmp
or
leave
push
rorb
cvtps2pi
add
xchg
bound
sub
add
mov
dec
and
daa
jge
push
aaa
dec
es
mov
lcall
cmpl
jne
push
cmp
add
jg
das
nop
and
aad
lret
cmp
push
fists
lods
in
dec
xlat
push
orb
in
mov
clc
shl
fcomp
inc
cmp
popf
jne
xchg
shlb
xchg
or
lret
jbe
shl
mov
leave
xchg
call
sub
addr16
loopne
cmp
rorb
push
sbb
mov
cmpl
sar
lahf
lea
pop
and
pop
ja
sbb
mov
movb
shll
cmp
sar
pop
lods
movsb
add
jecxz
xchg
xchg
push
mov
dec
orb
sub
lret
movsl
mov
sarb
mov
mov
or
je
or
sub
and
add
leave
in
jne
or
add
push
mov
or
adc
or
add
mov
adc
cmp
and
add
add
mov
lock
adc
push
imul
pusha
xchg
loopne
sbb
in
xchg
or
es
pop
jb
xchg
pop
sbb
or
int3
je
xor
test
push
or
js
push
lock
mov
xchg
shr
pushf
loope
sub
adc
insb
jo
sub
mov
pop
and
jbe
jne
js
add
movb
inc
xor
push
testb
jo
inc
fs
cmpsb
or
adc
outsl
int
mov
js
dec
inc
imul
dec
mov
je
jb
sub
cmp
jmp
neg
cmp
das
add
sbb
mov
pop
jle
inc
je
scas
adc
out
pop
push
or
add
lcall
inc
sub
pop
jmp
xor
adc
pop
jge
push
arpl
testl
pusha
in
mov
lock
xchg
aaa
jne
das
xchg
aad
gs
mov
testb
in
cmp
or
lock
es
add
mov
mov
fmull
jmp
lods
or
insb
ljmp
inc
inc
push
insl
cmp
or
mov
jo
xor
rcr
cmp
sub
rorl
mov
lods
adc
and
mov
aam
test
or
xchg
push
mov
ret
enter
sbb
mov
mov
jmp
mov
inc
jmp
xlat
mov
mov
pop
scas
add
dec
or
xor
lea
adc
jae
jns,pn
push
sbb
nop
scas
test
sub
dec
jo
jmp
fldl
mov
add
addr16
mov
insl
roll
outsb
je
arpl
fmuls
shrb
je
xor
or
fistpll
out
imul
or
and
xchg
adc
hlt
cmp
sbb
or
push
aaa
loopne
jl
pop
outsl
add
mov
add
mov
adc
movsb
addr16
mov
mov
jmp
cmp
jle
popa
into
icebp
sub
mov
cmp
lock
adc
push
xchg
mov
mov
orl
adc
push
and
pop
shr
push
push
insb
push
das
test
addl
push
adc
or
loope
loopne
lods
push
xchg
sub
inc
sbb
xor
test
push
rorb
cmp
and
jne
popf
pusha
inc
xchg
jbe
push
inc
scas
data16
push
pusha
adc
sbb
inc
inc
cmp
xchg
xor
inc
adc
imulb
hlt
dec
or
mov
sbb
jo
xchg
inc
cld
pusha
cld
or
sub
cmp
inc
daa
add
loop
adc
insb
pusha
or
mov
std
push
push
into
jbe
pop
mov
bound
inc
mov
rcll
dec
pop
js
rcll
inc
mov
push
nop
lcall
push
cltd
rorb
xor
pop
jl
jae
add
fs
aaa
movsl
pusha
neg
mov
ret
or
adc
mov
js
or
or
mov
mov
or
adc
andb
lea
popf
jbe
sbb
sub
mov
pop
push
inc
out
stc
cltd
ret
adcb
cmp
shll
outsb
adc
stc
cmp
jmp
mov
inc
cmp
ljmp
ss
and
filds
and
and
xor
stos
fisubs
xchg
aaa
xchg
mov
movl
dec
ljmp
push
repnz
sar
ret
cmp
loope
mov
xchg
andl
sub
movsb
cmp
sub
daa
mov
test
rorb
scas
sub
sub
or
push
adc
or
sti
in
jle
cmp
jl
dec
xor
cmp
add
cmp
sbb
and
pop
pop
dec
pushw
sub
adc
xor
sbbb
inc
aam
adc
loopne
imulb
jle
aam
data16
scas
inc
mov
dec
pop
sub
and
pop
out
sub
adc
arpl
lcall
push
cmp
popf
jmp
pop
int
fsts
pushf
adc
pop
sub
jae
add
mov
inc
cmpsb
in
repnz
rolb
les
inc
aas
icebp
jnp
movsl
daa
pop
mov
mov
rclb
cli
movsb
add
mov
cmpsb
insb
popf
cmp
mov
aaa
push
testl
out
mov
test
xor
fisttpl
lahf
out
jns
ss
add
push
and
mov
test
push
xchg
addl
add
fistpll
fisttps
out
mov
or
push
cld
div
push
in
es
cmp
sbb
clc
mov
sbb
jmp
out
inc
pop
test
push
and
jns
test
test
mov
rclb
hlt
push
sbb
xor
xchg
push
rclb
fistpll
jo
js
orb
push
cwtl
mov
outsl
xchg
push
in
add
lock
test
push
xor
jb
inc
mov
inc
out
mov
rorb
out
sbb
lea
rcll
dec
cmp
pop
pop
cmp
jbe
pop
adc
int3
add
or
ret
adc
mov
mov
lock
push
push
jbe
and
arpl
lods
lock
outsb
lret
and
dec
xchg
nop
loop
outsl
dec
pop
jecxz
push
dec
add
rcll
and
arpl
rolb
inc
adc
andb
inc
or
and
pop
xor
rorb
imul
leave
shl
mov
mov
or
sub
sub
ljmp
and
jb
into
js
into
dec
dec
andb
rcl
adc
outsb
add
fwait
sub
and
jo
ss
pop
adc
pop
adc
aam
sub
fisubl
outsb
and
dec
pop
pop
xlat
es
iret
lods
sub
dec
add
cmpb
and
add
es
mov
add
adc
sbb
in
sbb
pushl
ret
fdivrp
out
and
lahf
xchg
test
dec
loop
outsl
jp
add
push
mov
stos
mov
stos
push
loopne
push
arpl
sti
cmpl
push
adc
mov
adc
jmp
inc
loopne
loopne
loopne
add
cltd
or
jnp
pop
sub
jmp
out
or
and
mov
or
jl
sub
jle
into
push
repnz
sub
sbb
hlt
xchg
je
pop
sbb
add
mov
int3
and
or
cmp
pop
sbb
add
jb
test
xchg
cmp
dec
sbb
push
jbe
pop
add
xor
add
pop
dec
jecxz
stc
pop
mov
movl
xor
enter
sbb
push
adc
mov
shlb
leave
push
mov
mov
lock
push
mov
shll
mov
movb
add
dec
adc
ss
addr16
fmull
xor
roll
cmp
sub
lea
sub
aad
xchg
out
enter
sar
pushf
xor
out
inc
and
adc
mov
push
and
repz
pushl
sub
xchg
push
pusha
sub
notl
cmp
add
or
add
cmp
shlb
insb
mov
lods
sti
test
mov
adc
or
sbb
mov
call
inc
shrb
mov
mov
dec
cmp
imul
or
push
call
lods
sub
or
aam
push
loopne
lods
add
xchg
in
jnp
push
add
inc
push
add
mov
sahf
pop
push
ret
outsb
mov
adc
fwait
pop
lret
pop
jl
in
cltd
jne
jle
xchg
pusha
hlt
mov
lahf
insb
int3
push
pop
es
iret
imul
dec
sbb
ficompl
mov
mov
dec
jl
loopne
xor
test
mov
movsb
ss
lock
xor
xor
and
or
push
xchg
push
xchg
xor
and
or
inc
fiadds
add
xor
push
sbb
add
pop
or
mulb
loopne
jecxz
sbb
sbb
or
push
cld
mov
inc
es
xchg
sti
sbbb
test
fdivr
dec
xchg
xorb
dec
jnp
out
xor
xlat
int3
ds
roll
dec
loop
adc
and
and
add
in
hlt
add
jo
jmp
cmp
push
inc
adc
cmp
rolb
add
mov
push
and
mov
cmp
push
and
add
stos
outsb
sbb
cltd
push
sub
shrb
mov
adc
sub
add
push
mov
mov
adc
add
xchg
sbb
sbb
sbb
popf
insb
les
mov
mov
pavgb
inc
add
add
pop
or
push
dec
insl
xchg
pop
and
insl
les
inc
lds
lcall
hlt
mov
fdivl
dec
push
cwtl
cmpb
inc
mov
iret
movzwl
pop
adc
mov
in
les
lret
enter
pop
out
inc
or
jo
sub
jns
je
push
loopne
pop
ja
sub
mov
in
jle
jne
xchg
xchg
imul
call
adc
ds
pop
roll
sub
ja
cmpsb
in
cltd
mov
rolb
xlat
pusha
enter
out
adc
cmp
dec
xor
ret
add
stos
push
or
ret
pop
add
lods
or
sbb
mov
sub
sub
xchg
call
dec
shrb
add
jecxz
and
sahf
mov
adc
mov
cs
icebp
mov
and
xor
inc
icebp
cmp
jbe
add
pop
and
cmp
jl
shlb
aaa
daa
or
cmp
insl
dec
shlb
jno
dec
dec
lcall
dec
dec
dec
das
es
push
addl
and
jo
xor
dec
jb
imul
leave
dec
rol
mov
xchg
pop
xor
and
ret
add
xchg
lcall
jb
rclb
outsl
call
clc
adc
sub
inc
sub
clc
pusha
xor
aaa
les
jno
inc
sub
fsubr
int3
enter
mov
int
and
and
add
adc
add
insb
mov
cmp
fmull
jno
jne
jb
repnz
jno
add
mov
xor
mov
fildll
scas
or
imul
in
mov
cmp
call
mov
mov
xchg
add
mov
lret
lcall
dec
repnz
nop
mov
and
mov
mov
test
hlt
lcall
imul
adcl
lret
pop
out
mov
dec
imul
call
fcompl
lods
pop
dec
dec
es
and
fmuls
and
pop
loopne
data16
xor
mov
faddl
in
add
cwtl
aam
dec
out
pmulhuw
call
add
aam
enter
mov
movsb
or
data16
addr16
movsb
jb
in
xchg
dec
mov
addr16
xchg
test
outsb
push
mov
test
test
inc
lock
push
xchg
dec
shr
add
cwtl
jle
loope
int3
cmpsb
cmc
fbld
imul
iret
sar
nop
dec
xchg
inc
add
push
jp
and
jns
push
inc
xor
subb
fwait
mov
jbe
sub
out
mov
xchg
roll
sub
mov
arpl
int
jae
aam
int3
stos
clc
outsl
and
xchg
ret
xchg
sub
jne
sub
and
shll
adc
or
xor
and
fsubl
mov
popa
notl
adc
or
test
dec
add
or
jb
bound
mov
lcall
mov
std
or
add
dec
scas
fldt
addb
or
es
pop
aam
popa
adc
ljmp
xchg
fwait
adc
in
push
add
or
xor
rcrb
push
aad
sbb
sbb
shrl
ret
xchg
scas
mov
add
jp
push
add
cmp
pop
imul
xor
call
jmp
sub
or
je
adcb
or
rolb
cmp
sbb
push
xor
shrb
sbb
mov
pop
int3
enter
mov
or
add
and
aaa
and
or
mov
or
leave
pop
sub
mov
jno
adc
mov
inc
in
sbb
je
daa
or
push
inc
fisubs
stc
sbb
mov
out
push
cli
loop
shlb
jnp
outsl
xchg
mov
decl
cli
lret
push
pusha
inc
xchg
out
and
mov
lea
adc
sub
inc
add
fcoms
nop
mov
add
jp
or
cld
mov
push
notb
mov
fsts
cmc
pop
dec
cs
sbb
push
push
dec
inc
inc
cld
sub
lcall
sub
push
orb
mov
mov
mov
fsubs
and
loop
push
out
pop
mov
lea
pop
outsl
sub
lahf
pusha
leave
sub
std
pop
mov
cmp
and
mov
and
lea
cli
sbb
test
and
jmp
sub
movb
mov
test
jb
insb
pusha
jecxz
add
mov
cli
fidivl
mov
mov
dec
daa
std
push
stos
inc
mov
add
inc
popa
movsb
test
je
shl
cmp
jnp
cwtl
mov
mov
push
jo
addr16
dec
rorl
shll
xor
mov
sbb
jne
movl
pop
pop
psadbw
cmp
std
jne
pusha
fisubl
mov
add
cmp
les
mov
mov
and
adc
add
mov
negb
adc
inc
mov
rcrl
mov
jnp
and
xor
jg
or
jb
subl
call
cmp
or
stos
call
pushf
mov
pop
push
and
aaa
stos
cmp
loope
and
std
push
xchg
rolb
jnp
jae
cmp
jbe
addr16
ds
out
xchg
dec
dec
xlat
addl
inc
push
lret
lea
fisubs
loopne
mov
aaa
jmp
add
sahf
xchg
outsb
enter
sbb
sti
sti
inc
jmp
loopne
subb
inc
cmp
mov
add
ljmp
sub
inc
imul
loopne
xorb
pop
mov
add
push
fisttpll
lret
push
mulb
xor
cmp
aas
and
dec
jne
roll
dec
xchg
inc
jns
add
and
idivb
jno
xor
push
mov
inc
dec
jne
jg
add
push
scas
stos
mov
jmp
pusha
add
dec
addr16
mov
jmp
cmp
int
push
enter
stos
or
imul
lcall
or
pop
in
adc
je
loop
push
pusha
sub
cmc
sti
xchg
mov
mov
sub
and
push
dec
fwait
popl
jge
ret
jecxz
xor
shrl
in
and
jne
roll
test
xlat
testb
insb
ljmp
add
adc
add
sub
aas
int3
cmp
mov
add
jge
into
dec
out
lcall
fildll
sbb
inc
jmp
xor
dec
sbb
mov
sub
frstor
xchg
xor
add
push
ss
sbb
sub
loopne
or
fwait
jno
test
ljmp
cltd
jge
inc
popf
jmp
and
push
mov
add
adc
insl
imul
pop
aam
sub
in
mov
push
into
sahf
shlb
push
movsb
sti
xor
sbb
inc
rorb
push
or
mov
sub
and
sbb
pop
xchg
pop
ret
adc
sbb
add
jo
arpl
or
or
loopne
sub
inc
and
decb
inc
movl
callw
or
pop
add
mov
lods
pushl
imul
out
pushf
clc
sbb
inc
mov
sbb
sub
xchg
xchg
mov
rcrb
inc
test
mov
pop
popa
dec
cmp
cwtl
dec
rorb
daa
sbb
pop
ljmp
sub
inc
jp
into
or
pop
cld
test
das
mov
inc
add
add
dec
add
adc
add
cmp
xor
outsl
add
scas
mov
fisttpll
sbb
ja
jl
adc
cwtl
xchg
adc
pop
in
scas
jo
add
lock
mov
jle
sbb
add
pushf
sub
loope
add
ss
movb
je
lret
xchg
pop
pop
call
adc
dec
jb
dec
fwait
adc
or
add
js
pop
xor
mov
cmp
sub
inc
test
sbb
ficoml
mov
push
scas
inc
sbb
push
inc
xor
in
jmp
push
loopne
clc
in
dec
add
inc
cmp
push
push
pop
xor
inc
pop
lods
lea
inc
push
cmp
stos
popf
lods
xchg
addl
loope
xor
or
inc
cmpsb
loope
pop
jno
inc
mov
sub
push
push
bound
add
in
push
loopne
xor
js
movsl
faddp
mov
lods
adc
xchg
pop
rcrb
hlt
mov
adc
mov
xchg
adc
icebp
cmp
add
into
inc
push
or
movsb
and
and
ret
fnstenv
not
call
xchg
sbb
iret
push
adc
enter
mov
lock
inc
and
or
sbb
cmp
cmp
add
inc
dec
pop
cmp
dec
and
jle
add
mov
sbb
decl
repnz
dec
cltd
add
push
jbe
and
push
push
incb
adc
mov
or
mov
ss
cmp
push
fsubrl
mov
sbb
push
or
and
mov
fs
jb
mov
sbb
in
cmpl
jne
mov
fbld
xchg
cmpsb
adc
popf
cmpsl
mov
movl
sbb
ja
mov
jae
or
sub
mov
sub
xor
aad
sbb
pop
fistpl
pusha
mov
jl
hlt
fstpl
jge
arpl
cmpsl
inc
jne
pop
inc
inc
push
cmp
or
roll
pop
add
pop
mov
dec
xor
adc
adc
clc
jne
push
fisttps
xlat
add
rorb
push
js
bound
popf
lods
ja
or
mov
or
lods
or
jg
inc
add
push
xchg
adc
lods
inc
in
mov
or
sub
lsl
sbb
enter
or
ss
or
pop
cmp
fcompl
out
adc
test
add
inc
sub
outsb
push
xchg
push
popa
cmpsl
lock
inc
std
fbld
mov
push
or
shll
enter
or
and
dec
mov
push
clc
push
push
pop
testb
mov
out
ja
mov
inc
pop
nop
mov
aam
cmpsb
mov
inc
into
data16
fidivrl
push
js
add
sub
test
jne
jle
sub
sbb
les
dec
lret
jo
jne
cmp
sbb
mov
adc
inc
enter
mov
push
call
lock
nop
es
ja
add
sti
pop
sahf
dec
jp
enter
jmp
addb
fiadds
mov
mov
push
fadds
pushf
push
jo
into
das
cs
pop
pop
sbb
pop
rorl
dec
add
and
sbb
out
or
adc
mov
lock
pusha
test
add
push
lahf
xlat
jg
shll
fld1
cmp
inc
js
sbb
cmpsl
lods
das
or
stc
cmpsl
subl
scas
imulb
adcb
fwait
xchg
jmp
decl
or
orb
shl
xchg
dec
mov
and
lret
mov
fmull
fstl
lock
mov
adc
jne
lea
xor
inc
lock
nop
mov
iret
repz
dec
mov
jecxz
ds
repz
inc
ds
add
mov
push
stos
mov
add
dec
rorb
jl
mov
add
pop
fldl
sub
mov
adc
ss
sti
lret
and
push
inc
add
cmp
scas
and
cmpsb
sub
out
sbb
mov
inc
and
xchg
je
push
cltd
dec
addl
jmp
inc
lock
test
popa
push
das
inc
add
mov
clc
mov
pop
test
fucompp
ljmp
std
out
and
ret
and
push
push
test
or
sbbb
and
shrl
cmp
cmpsl
and
add
dec
and
add
or
pop
popl
ds
add
cwtl
ret
or
inc
cld
jb
or
xor
or
xchg
insb
mov
int
lret
sub
leave
and
std
cld
add
sbb
pop
or
mov
mov
adc
jno
scas
lret
sub
jl
xor
sbb
ret
or
iret
push
add
fs
fistps
mov
sbb
and
mov
sbb
fstps
mov
shll
fucomip
stos
bound
adcb
sbb
sbbb
pop
fdivrs
fs
inc
inc
jns
nop
and
jne
jo
dec
dec
lds
mov
test
test
lods
push
mov
and
push
push
or
add
mov
sub
adc
inc
iret
cmp
daa
sbb
inc
outsl
sbb
stos
aam
pop
cmp
sub
xchg
adc
in
push
shlb
or
lods
test
test
std
cmp
mov
lods
std
lods
mov
add
mov
pop
mov
xchg
mov
xchg
mov
sar
mov
jmp
fwait
outsb
mov
sub
or
xchg
xchg
lock
movsl
mov
in
mov
xor
cld
pop
ficoml
mov
xchg
out
sbb
pusha
jecxz
cmp
inc
mull
jns
test
dec
in
mov
mov
lret
mov
mov
or
mov
xchg
xchg
lret
in
mov
call
jae
arpl
sub
daa
dec
dec
jne
or
lret
and
andl
js
lea
add
mov
insb
test
pop
mov
les
popa
mov
rcrl
mov
enter
lods
es
shrb
mov
ljmp
push
loope
cmp
or
insl
push
push
dec
sbbl
jne
inc
sub
scas
pop
rcl
pop
and
ja
mov
jg
dec
repnz
ja
cmp
inc
xor
mov
mov
push
cmp
push
movsl
test
loope
fld
imul
leave
inc
out
or
nopl
scas
fadd
or
repz
test
xchg
stos
pop
cli
dec
loopne
add
lret
lea
jl
scas
stos
inc
cs
push
clc
fs
jns
sub
mov
and
push
jle
pop
add
pop
push
or
bound
jle
inc
cmc
push
inc
lea
stos
and
inc
test
test
push
imul
stos
dec
test
imull
dec
inc
fimull
cmpsb
xor
sbb
cmpsl
sub
stc
mov
sbb
stos
lret
mov
movsl
adc
or
popaw
push
mov
out
stos
xchg
ja
sbb
push
daa
mov
push
mov
lds
mov
cld
mov
cmp
push
pop
ror
lret
push
add
pop
enter
cmpsb
hlt
ficoml
mov
std
rorl
or
mov
or
cli
sarb
jne
mull
pop
addb
pop
push
xor
adc
mov
sahf
lea
hlt
add
xor
dec
mov
lcall
std
and
sbbb
mov
insl
fidivs
mov
rcll
leave
push
addl
and
leave
push
and
mov
xchg
jne
andb
sbb
cmp
pop
adc
fimuls
cmpl
inc
add
mov
sub
sarb
pop
pop
mov
or
sub
gs
in
fwait
repnz
mov
mov
movsb
mov
xor
ffree
sbb
int
sub
adc
scas
nop
sbb
or
push
das
call
dec
xor
out
call
loope
push
orb
xchg
call
lahf
mov
clc
scas
test
xchg
lds
add
or
nop
icebp
xlat
mov
push
popf
xor
mov
nop
aad
ror
mov
cmpsl
cmpsl
popf
push
ret
sub
inc
nopl
inc
inc
sbb
xchg
push
inc
dec
mov
add
or
pop
xor
ja
push
inc
outsb
push
adc
dec
or
arpl
pop
daa
xchg
add
pop
pop
imul
push
lcall
sub
setnp
inc
repz
mov
jns
sbb
sub
cwtl
test
bound
sub
xchg
push
cmp
data16
add
pushf
jmp
inc
les
repnz
nop
jmp
dec
fs
testl
pop
repnz
movsl
sbb
or
test
jmp
test
sbb
jmp
test
sti
sub
cwtl
sbb
jg
int3
cmp
adc
sub
test
jne
loopne
inc
cmpsl
and
or
push
fisttps
mov
xchg
out
shl
lods
dec
fs
cmp
adc
cli
sbb
mov
fstpt
sbb
mov
ret
orl
je
push
push
mov
inc
push
cli
hlt
pusha
sbb
jnp
ret
jp
rcrl
inc
dec
or
shr
into
adc
int
xchg
inc
mov
pop
or
mov
sbb
add
adc
in
pop
and
adc
mov
mov
mov
mov
in
inc
adc
lea
in
mov
sub
nop
mov
pop
inc
stos
mov
sub
mov
cmp
cmpsl
xor
inc
mov
cwtl
sbbb
repz
mov
nop
dec
push
mov
leave
push
xor
push
mov
adcl
lods
sbb
cmp
xor
mov
or
shrb
mov
xor
pop
pop
xchg
or
enter
pop
jbe
jns
xchg
int3
jne
jb
mov
push
xor
cmp
repnz
je
sub
jmp
push
xchg
add
xor
test
dec
mov
or
xchg
push
das
scas
movsl
cmp
mov
aad
lods
scas
mov
push
push
lea
inc
scas
jge
mov
adc
and
inc
dec
xor
mov
enter
in
aad
xor
inc
aaa
add
mov
mov
into
xchg
inc
push
push
cmp
repz
xchg
cltd
lea
and
movsb
inc
mov
mov
js
scas
dec
movsl
out
and
pop
aad
mov
int3
enter
es
movsb
pop
xchg
in
mov
scas
dec
inc
lea
xor
or
movsb
ror
mov
sbb
in
xor
xchg
push
lea
mov
push
jb
movsb
mov
and
clc
mov
mov
adcl
mov
aam
nop
mov
mov
sbb
pop
jg
xchg
lret
cmp
daa
xchg
mov
or
add
push
sbb
arpl
pop
pop
jne
dec
cmp
jne
mov
add
push
push
andl
mov
push
jecxz
pcmpeqw
mov
lret
mov
mov
mov
jp
inc
add
push
test
jbe
repz
mov
add
dec
movl
les
cmp
inc
add
clc
xor
fistps
test
pop
nop
enter
pop
mov
stos
xor
ret
popa
add
fists
inc
adc
arpl
rorl
int
mov
push
movb
pop
jmp
pop
sbb
push
sbb
mov
divl
adc
js
ss
mov
push
jmp
fwait
sub
sub
sub
mov
lcall
mov
dec
push
dec
dec
loope
pop
or
or
jl
addl
notb
cmp
add
rcrb
cltd
mov
clc
pushl
arpl
lret
les
mov
or
mov
test
jne
mov
add
sub
mov
jecxz
inc
xchg
rolb
pop
movl
or
mov
das
add
or
dec
or
pop
in
sbb
testb
enter
sbb
dec
popf
or
int
and
push
push
dec
or
rcll
add
add
or
mov
or
cmp
push
mov
cmp
jae
add
or
sbb
scas
cmp
pop
jne
cmpl
jne
popa
in
mov
xchg
sbb
and
cmp
mov
clc
dec
ja
inc
lret
inc
movsl
inc
sub
and
les
sahf
decb
stos
rclb
pushf
loope
scas
xor
out
add
xor
sbb
loope
pushf
jl
or
iret
or
cli
add
pusha
test
and
iret
dec
jl
adc
pusha
and
les
add
test
or
cmp
ljmp
in
call
jbe
cmp
addl
xor
jle
nop
pop
subl
and
cmp
lea
sbbl
cmp
cmp
nop
xchg
mov
cmp
sahf
scas
inc
test
test
xchg
fs
jmp
rcll
pop
test
mov
ds
rcrb
cli
dec
loope
push
sti
and
xor
pop
xor
and
lret
roll
add
inc
jbe
fsubl
or
daa
mov
out
push
push
inc
addb
ret
and
xlat
push
clc
cmp
and
pop
imul
inc
push
mov
rcrb
adc
or
mov
jbe
add
gs
push
inc
call
out
out
data16
dec
orb
mov
and
xor
lods
fistpl
outsb
jae
xor
dec
out
dec
adc
add
in
int3
adcl
or
aad
adc
pop
subl
dec
and
pop
stos
xlat
ret
and
inc
adc
sbb
and
xchg
lods
add
add
ret
adc
mov
ret
int3
xor
cld
enter
out
mov
push
or
jne
dec
cmpsb
rorb
fst
jae
xchg
pusha
xor
push
fldl
sub
fidivrl
movsl
fwait
mov
adc
jmp
add
js,pt
inc
cs
je
cmp
cmc
push
dec
push
stos
mov
mov
js
and
cmp
push
cli
ljmp
inc
in
pop
pop
jle
in
pop
xorl
jecxz
aam
add
sbb
mov
jmp
or
push
mov
pop
std
cmp
cli
xor
jo
mov
sub
pop
and
dec
sub
sub
fs
ss
cmp
mov
mov
and
or
mov
clc
int3
mov
mov
les
call
push
sbb
int3
jae
lea
add
dec
add
push
pop
das
adc
neg
ret
sahf
push
xchg
test
pop
loopne
dec
test
inc
les
sub
xchg
insl
lcall
push
push
je
cltd
inc
call
push
sub
lea
push
pushf
testl
jbe
add
mov
push
push
popa
int3
andl
mov
inc
push
pop
daa
add
mov
mov
cli
ret
nop
mov
or
popa
sbb
dec
lock
mov
dec
add
pop
movb
xor
dec
inc
jae
dec
inc
clc
add
cmpl
push
ljmp
inc
call
push
add
add
mov
das
scas
fidivrs
sbb
or
imul
push
mov
add
arpl
lret
mov
mov
faddl
add
xor
aas
js
sahf
pop
cmp
or
rorb
and
into
cmp
inc
aas
sub
shll
xchg
lds
xchg
cmc
push
adc
jb
sub
or
pop
push
mov
or
or
or
or
sbb
cmp
pop
ret
add
xor
jmp
jns
shll
bound
adc
or
mov
xchg
arpl
inc
jo
sbb
dec
cwtl
push
xchg
sub
mov
xor
push
orb
ret
in
jmp
mov
jmp
lea
push
cmp
sub
pop
lcall
push
mov
jo
aaa
xor
pop
or
add
into
push
popl
push
mov
adc
push
sbb
add
iret
insl
add
adc
out
adc
imul
mov
sbbb
xchg
dec
aaa
aam
in
in
add
test
pop
scas
xor
out
mov
mov
adc
jae
jge
not
mov
je
dec
xchg
add
fcompp
cld
xor
inc
sbb
fcmovbe
sbb
dec
lock
inc
jns
mov
outsb
dec
fwait
sbb
cmp
fmull
mov
inc
in
out
repz
mov
or
lock
aaa
or
lret
int
sbb
xor
orb
adc
jae
mov
pop
ret
mov
shr
mov
jb
push
sbb
lea
pop
pop
push
sub
push
lock
testb
or
sub
xchg
jl
int
dec
jbe
pop
mov
add
fs
xchg
fistl
pop
cmp
push
rorb
xor
mov
das
inc
xchg
popa
das
sub
xchg
das
push
push
jb
pop
jle
jns
sbb
addr16
ds
push
jnp
incb
cmp
fldt
loopne
daa
jg
aaa
xchg
lret
xor
xor
add
pusha
je
xor
or
push
adc
mov
sahf
in
jle
jl
or
and
mov
dec
sub
xor
xor
jns
fistpll
inc
mov
cmp
inc
adc
and
and
bound
add
das
fnclex
mov
add
or
ja
add
pop
fmuls
add
adc
cmp
movb
or
leave
inc
inc
mov
push
cli
rolb
xchg
mov
inc
ret
jne
lea
pop
pop
sub
mov
push
out
lock
and
or
and
xchg
add
lea
addb
dec
call
and
push
mov
cltd
ret
push
call
out
cmpl
adc
adc
jbe
xchg
enter
shll
leave
add
jo
xchg
nop
cmp
insl
add
test
sarl
jo
out
icebp
lret
sbb
mov
shlb
dec
hlt
jge
inc
push
sbb
inc
lcall
dec
pop
xchg
dec
call
outsl
dec
int
sub
loop
add
lds
or
or
cld
sti
std
enter
inc
scas
or
aas
xor
push
mov
xchg
out
outsb
jno
inc
lods
hlt
in
out
fistpl
loopne
xor
dec
xchg
call
and
rol
push
mov
push
inc
push
and
push
mov
inc
pusha
jno
test
shrb
shlb
adc
sub
mov
movsb
je
movl
add
jmp
fidivs
aad
arpl
rol
rol
clc
lock
jb
pusha
push
sub
lods
and
or
push
adc
subl
or
pop
sbb
pop
outsb
adc
pop
lea
inc
movsb
adc
popf
adc
rcr
and
je
add
xchg
cmp
and
fdivrs
enter
les
sarb
or
add
ret
sub
and
push
sahf
adc
xor
rcl
mov
or
fcoms
or
lock
mull
lsl
jmp
push
pop
or
ja
push
push
inc
shr
rcr
shr
rcr
or
mov
repz
addr16
dec
div
imul
notb
mul
pop
jb
cmp
or
cmp
or
xor
xor
mov
and
adc
or
adc
sub
hlt
lret
shll
fxch
pop
jle
push
dec
mov
mov
sar
dec
sbb
imul
and
push
inc
sbb
clc
lret
dec
jbe
and
lea
sub
xor
inc
fldcw
inc
in
sbb
popa
addb
out
inc
sbb
mov
cwtl
jbe
in
fisttpl
xchg
or
inc
mov
mov
mov
cmp
jmp
or
xor
test
jge
inc
jne
push
mov
dec
jno
les
neg
push
inc
cmp
inc
cmpsl
xlat
inc
ljmp
and
loop
mov
push
loopne
xchg
add
sarb
incl
ss
jmp
insl
or
jmp
push
adc
cmp
movsl
je
jne
sbb
jnp
inc
sbb
xchg
and
pop
add
aas
inc
xor
or
cmp
xchg
adc
dec
or
push
mov
dec
rcl
mov
lret
jo
add
cmp
sbb
or
mov
adc
mov
and
xchg
in
inc
jne
nop
dec
ret
add
mov
pop
inc
cmp
mov
or
ss
pop
daa
dec
ret
mov
es
adc
test
push
jl
dec
inc
decb
dec
add
add
pop
or
xchg
lock
add
hlt
push
and
adc
clc
pop
lcall
clc
lock
add
mov
push
pop
push
fwait
enter
clc
outsb
dec
mov
add
mov
iret
jo
inc
inc
icebp
in
int3
test
imul
dec
add
lret
in
fdivrs
loope
and
cli
cmp
lock
iret
decl
mov
or
mov
je
push
and
je
mov
xor
cmpb
add
pop
mov
add
jg
inc
sbb
mov
push
sbb
pushl
add
and
sti
stos
or
and
push
adc
icebp
add
out
add
push
or
rclb
xchg
test
cmp
adc
add
sub
in
sbb
sub
or
fsubr
push
add
jbe
push
cmp
ds
xchg
ljmp
psubusw
add
mov
jmp
adc
inc
stos
mov
outsl
push
jb
push
stc
mov
jae
adc
inc
or
adc
dec
aas
dec
dec
loope
cmp
imul
add
jecxz
inc
iret
jo
aam
and
inc
inc
add
or
aaa
xlat
push
add
jle
mov
movb
sub
sahf
enter
popf
pop
imul
js
jg
lea
mov
xor
jl
cmp
jg
hlt
mov
out
cli
fadd
punpcklwd
jne
imul
bound
test
movsb
fldt
cmc
aas
sbb
xor
into
in
pop
test
cmp
sbbl
cs
mov
inc
lock
xor
icebp
xor
or
mov
dec
adc
mov
std
insb
jne
push
adc
and
add
sbb
inc
mov
stos
pushf
addb
cmp
lods
pop
sbb
ljmp
test
mov
fbstp
push
dec
adc
push
and
stc
jl
pusha
lods
push
dec
and
push
jg
mov
inc
or
jbe
jle
xor
std
out
es
jg
jg
jo
mov
std
pop
and
jne
repnz
in
in
enter
pop
ffreep
lea
adc
js
sbb
test
shll
shll
in
mov
xor
dec
cld
inc
rclb
pop
shl
inc
inc
push
negl
ret
mov
bound
shrb
lret
ret
mov
shr
or
pusha
test
rcrb
movsl
and
xchg
inc
rol
mov
mov
pop
hlt
sahf
test
jge
test
xor
stos
mov
dec
push
and
mov
mov
ret
mov
scas
adc
inc
scas
sub
jns
ror
mov
ljmp
in
push
lds
ret
add
add
push
cli
and
shl
sbb
clc
or
adc
lock
jl
cmpsl
fildl
adc
clc
orb
cmpb
xchg
jae
xlat
pop
inc
fstl
xor
push
dec
xor
sbb
out
insb
inc
add
rcll
mov
dec
or
int3
and
add
inc
sub
jge
adc
push
test
imul
pop
add
sti
insb
call
jp
push
gs
call
pop
pop
cmp
loope
andl
lcall
ja
subb
loopne
addr16
lea
and
cmp
push
mov
adc
push
adc
push
push
adc
scas
or
cmc
fildll
pop
or
xor
mov
push
fisubrl
push
je
xchg
cli
adc
lea
lea
or
dec
imul
pop
and
xchg
mov
mov
outsl
insl
dec
test
xchg
shl
mov
mov
xor
or
enter
popf
sub
sbb
adc
rorl
addb
testl
pushl
add
jno
push
push
rolb
ljmp
jp
in
fsubrl
and
push
shrl
sbb
cmp
ds
add
xchg
lods
ds
ss
push
xor
insb
enter
pop
adc
adc
or
out
jmp
loopne
and
add
pusha
rclb
sbb
sbb
fs
dec
je
test
daa
jl
outsb
sub
jnp
mov
addl
push
pop
push
sbb
aas
test
add
xor
jbe
icebp
xchg
adc
xor
jp
daa
pop
or
je
iret
xchg
fisubl
out
data16
es
pusha
xchg
ss
pop
pop
mov
je
xorb
rcrb
mov
je
sub
outsb
inc
ds
pusha
push
fisubl
mov
xor
loopne
mov
jmp
xorb
pop
jo
jl
popa
inc
add
ret
push
cld
das
xor
sbb
xor
pop
icebp
arpl
gs
adc
add
push
es
and
cmp
nop
cmp
add
into
lods
adcb
ss
cmp
jge
mov
add
adc
push
sarb
stc
adc
inc
add
inc
mov
test
das
flds
xchg
inc
adc
aad
or
movsb
push
push
call
das
mov
sysexit
jp
sti
add
inc
fsubr
popf
rolb
mov
cli
popf
pushl
leave
call
ret
cmp
out
cmp
mov
and
jo
insb
cltd
or
adc
jo
mov
cmc
enter
jle
mov
roll
pop
inc
push
push
nop
add
imul
movsb
mov
pushf
mov
cmp
aas
test
xlat
fstpl
lcall
or
or
xchg
inc
jmp
push
mov
cs
sbb
ja
pop
inc
ret
mov
jbe
iret
rcrb
cmp
or
pop
dec
mov
mov
mov
push
cmp
clc
add
nop
leave
push
sub
movb
or
dec
and
incb
testb
jmp
andl
jmp
mov
pop
test
jbe
popf
add
or
scas
dec
and
or
sbb
clc
pop
mov
fs
xor
cmp
mov
or
cmp
xchg
mov
lcall
decl
testl
jmp
jo
fadd
adc
jae
mov
sub
mov
jmp
adc
out
cmp
push
mov
fstpt
add
jne
dec
dec
jae
enter
imul
sbb
jo
sub
and
loope
scas
xchg
rclb
outsb
js
push
bound
lahf
and
dec
ja
adc
dec
cwtl
push
pop
jle
and
dec
and
cmp
mov
mov
movsl
jbe
sub
mov
popl
loopne
je
mov
es
add
push
jge
inc
nop
mov
push
push
cmp
xchg
movsb
push
jo
add
add
testl
mov
jecxz
fldl
inc
inc
xchg
mov
dec
dec
or
dec
je
inc
iret
jb
clc
cmp
icebp
addl
lock
cmp
push
adc
jg
cmc
jecxz
lea
inc
jmp
cmp
sbb
dec
pop
xor
mov
clc
and
into
dec
mov
std
sub
push
jne
out
add
stos
pop
stos
outsb
add
push
mov
or
add
mov
xor
sbb
test
cld
mov
mov
dec
sub
inc
mov
xor
mov
cmc
sbb
add
mov
jbe
sub
xor
jne
loopne
cmp
lods
cld
or
int3
fsubrp
lods
sarl
add
ret
add
pushf
imul
add
jb
mov
fcomp
cld
jge
movsl
add
enter
movsb
into
divb
sbb
cwtl
or
mov
into
mov
roll
mov
xchg
nop
inc
push
mov
sbb
movsb
je
dec
pop
and
pop
mov
rcrb
jne
or
mov
or
aad
pop
xchg
aaa
and
pop
jmp
testl
dec
push
jne
mov
lods
shrb
inc
sub
xchg
int
and
pop
cmp
lods
dec
test
cld
and
mov
xchg
pop
dec
xchg
nop
dec
or
ret
fcoms
fsubl
ja
push
lea
lcall
add
add
xor
push
dec
add
scas
ret
xor
cmp
jb
aam
stos
inc
popw
and
ja
shlb
pop
cmpl
insl
adc
test
adc
fidivrl
in
sbb
xchg
mov
push
sti
jg
add
push
in
xor
or
lcall
or
sub
aam
call
test
push
cmc
or
shr
aas
or
push
sti
sbb
inc
in
mov
es
mov
jns
mov
xor
add
test
addl
push
jg
shrl
shl
shr
or
mov
sahf
dec
mov
inc
ret
or
outsb
mov
or
xchg
mov
adc
push
mov
les
sub
jne
push
sub
mov
fiaddl
mov
jo
and
fdivp
push
loopne
jmp
out
jmp
or
lods
mov
fldenv
and
ret
or
pusha
test
loope
jl
jp
jo
dec
int3
int3
jmp
out
or
xchg
and
daa
mov
mov
jmp
lods
mov
ror
and
mov
mov
push
pushf
orb
xchg
xorb
lret
das
sub
loopne
movsl
xchg
pop
test
sbb
jns
sbb
movups
ret
adc
les
mov
inc
mov
sub
add
in
xchg
push
nop
inc
xchg
test
out
xor
out
sahf
out
ds
xor
arpl
sarl
cmp
outsb
loope
pop
popa
daa
jl
push
cmp
push
mov
jle
add
testb
fiadds
aaa
mov
push
push
push
or
clc
addr16
dec
dec
imul
jg
add
cmp
ficomps
cmp
inc
fldl
js
or
es
nop
push
inc
ljmp
sahf
test
stc
or
dec
mov
jne
inc
sbb
adc
or
aas
fildll
mov
add
or
jns
daa
lods
mov
sbb
dec
mov
xchg
ret
add
mov
or
xlat
repz
scas
or
mov
pop
aad
mov
mov
mov
adc
fisttpll
or
or
rclb
or
bound
adc
or
xor
mov
jecxz
jbe
add
sbb
shlb
mov
mov
addl
pxor
push
les
sbb
inc
jne
dec
and
jg
pop
je
ret
movsl
sarb
push
add
inc
adc
and
out
jae
out
inc
inc
inc
jo
mov
adc
shlb
mov
jo
testb
adc
divb
fistl
test
dec
xchg
loopne
je
rclb
inc
inc
cli
pop
pop
or
pop
push
popa
inc
sub
dec
push
mov
nop
mov
bound
mov
ja
sahf
outsb
shr
add
jge
and
sub
add
jns
mov
fmuls
cmpxchg
pop
jne
jnp
aaa
xchg
lret
dec
outsl
cld
push
out
int3
andl
cmp
push
adc
sbb
mov
inc
jmp
lea
je
push
test
into
leave
xchg
xchg
arpl
cli
push
minps
xchg
mov
sub
mov
rorb
pop
dec
pushf
mov
jae
dec
xor
push
loopne
or
xor
xchg
push
loopne
sbb
loopne
and
jmp
dec
movsl
add
insb
pop
mov
ret
mov
nop
jne
cld
add
in
into
mull
mov
or
movsb
ffreep
mov
pop
jmp
mov
push
lea
lcall
inc
add
leave
sar
mov
aas
push
push
je
or
dec
adc
cmc
sbb
mov
into
add
and
mov
or
test
adc
loop
pop
ret
sub
mov
pop
add
ljmp
or
js
je
mov
stos
dec
pusha
cmp
cmpb
push
push
pop
or
push
or
and
imul
and
sbb
rolb
xchg
lods
loopne
add
or
or
lock
repz
idiv
push
xchg
adc
push
hlt
mov
andl
jl
add
push
jmp
and
push
or
popf
pop
out
lret
add
cld
adc
push
insl
cmp
fsubs
xor
push
push
in
in
lock
cli
inc
call
jmp
cltd
pop
es
bound
outsb
mov
les
adc
hlt
rcll
adc
add
dec
imul
sbb
popa
push
push
inc
ljmp
je
or
shll
mov
jns
mov
add
fidivl
mov
sbb
xchg
cwtl
imulb
add
sub
cmpsb
int
push
test
lods
push
or
add
loopne
mov
lock
test
jne
xor
cmp
shll
add
out
int
imul
pop
mov
and
pop
lock
dec
je
aad
mov
ret
add
fadd
sbb
pop
sbb
call
jb
inc
shr
mov
inc
mov
adc
dec
xor
test
ds
or
roll
hlt
jl
dec
std
xchg
lret
jns
pop
push
adc
cmp
mov
es
cmp
jne
insl
add
les
push
insb
pop
add
jo
aad
gs
add
mov
cmp
faddl
dec
add
pop
mov
ret
sub
es
sub
enter
jne
xchg
or
or
movsl
pop
jbe
sbb
jl
pop
jns
adc
inc
stc
cltd
loopne
add
jg
sbb
mov
daa
ss
pop
data16
add
es
fstps
test
sub
and
or
mov
cs
add
daa
shlb
movsl
jne
lea
mov
stc
cmp
push
xor
xrelease
inc
push
test
pop
add
sar
push
or
pusha
lock
test
inc
es
push
es
or
subb
fiadds
push
mov
xor
mov
push
jo
inc
dec
js
lret
jmp
inc
mov
pop
mov
adc
call
xchg
aas
push
jae
jo
jae
adc
les
xchg
add
dec
or
lcall
adc
sub
jne
pop
gs
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
aas
and
daa
xchg
int3
or
jle
bound
enter
inc
clc
jmp
inc
mov
stos
lock
pop
test
gs
and
xlat
movups
orb
inc
rorb
dec
or
fistl
sbb
int3
ret
les
xchg
adc
mov
lds
nop
adc
mov
and
adc
fidivrs
lcall
sbb
stos
pop
pop
xchg
and
je
push
push
xchg
in
fs
enter
and
pushf
push
inc
mov
fcompl
mov
rol
mov
and
cmp
adc
jns
push
push
and
sub
sbb
sbbb
loop
adc
xor
pop
xor
push
adc
dec
cmpb
hlt
mov
mov
add
push
jmp
test
push
adc
je
inc
cmp
shrb
jmp
addl
js
pop
sbb
jmp
fs
add
xor
add
mov
mov
jl
ret
mov
jb
dec
sub
jp
enter
movl
jns
fs
adc
xchg
mov
fdivr
adc
push
test
xor
lods
push
jno
loope
mov
pop
shl
fwait
stos
xor
cli
push
dec
ret
pop
pop
mov
inc
jmp
xor
xor
jge
mov
or
jle
add
fiaddl
fisubrl
xchg
ret
push
movsl
jg
inc
pushf
pop
pop
cwtl
adc
gs
cmp
nop
pop
add
sbb
inc
push
push
xchg
data16
or
lods
mov
hlt
add
adc
mov
add
push
fisttpl
inc
add
nop
stos
mov
shlb
idivb
dec
les
lea
cwtl
fadds
subl
ret
lds
xchg
rcrl
imul
popa
ret
push
sahf
in
mov
daa
pop
enter
nop
jle
cltd
movb
rcll
or
cmp
push
pop
cwtl
cmpsb
cltd
mov
add
out
notl
inc
int
xor
pop
enter
aas
sbb
jecxz
mov
dec
jecxz
lods
cs
jno
je
xor
mov
xchg
adc
jmp
push
adcb
std
shlb
push
js
mov
shlb
pop
jne
pop
push
pcmpeqw
xchg
mov
add
imul
mov
jmp
jb
cmp
out
jo
add
dec
jo
shlb
mov
imul
mov
jne
pop
jae
call
ss
je
arpl
jl
mov
test
mov
or
imul
add
scas
dec
mov
jnp
in
imul
dec
or
lret
jge
jecxz
xor
adc
cmp
mov
fdivrs
or
cmp
fimuls
add
ror
or
out
push
jne
push
clc
push
push
dec
xor
jb
lock
mov
mov
movb
sub
out
lret
add
push
nop
inc
aas
adc
and
adc
cmp
mov
mov
jmp
mov
loope
sub
mov
or
testb
add
cmp
mov
jne
lods
push
in
add
outsl
xchg
sahf
cld
cwtl
xlat
inc
or
add
fwait
xor
test
dec
pusha
aaa
in
jnp
mov
jne,pn
sbb
inc
test
rcr
mov
mov
les
sbb
push
cmc
rorl
mov
adc
or
int
fsubr
fnsave
push
icebp
fadds
or
push
scas
cmp
pop
jmp
cwtl
cmp
adc
add
sub
jbe
push
adc
fs
cwtl
mov
orl
lods
inc
inc
add
xchg
sar
int
cmp
roll
or
xor
dec
sbb
fmuls
cmp
popa
movl
mov
jno
cmp
mov
and
icebp
push
jb
cmp
inc
pop
push
fldenv
jl
call
loope
xor
pop
movsb
out
and
add
ret
or
or
sar
and
fwait
mov
xor
cmp
push
cs
jnp
cmp
or
repz
and
inc
adc
shl
mov
outsl
mov
and
rcll
adc
push
adc
push
or
push
into
and
lock
add
inc
imul
rolb
pushl
jge
pushf
or
iret
mov
int
pop
nop
xor
sbb
xor
jecxz
sbb
jne
add
xorb
mov
mov
insb
xchg
push
cwtl
stos
mov
pop
mov
or
jmp
das
or
aaa
jno
stos
ds
cmp
lcall
fidivl
aam
fsubrs
sbb
mov
mov
cld
cmpsb
notb
orl
pop
xor
mov
jbe
and
ja
cwtl
xor
jnp
fisttpl
push
bound
testl
add
fcmovnu
xor
add
mov
xchg
push
sar
sub
out
shll
add
iret
or
test
pop
enter
dec
add
xor
add
int3
icebp
pushf
inc
adc
je
stos
or
aam
outsl
jecxz
jno
push
test
jns
mov
adc
rcrb
sbb
jno
icebp
fisttps
jle
cmp
inc
imul
pop
sbb
mov
sbb
leave
push
in
adc
rcrl
adc
and
fldcw
es
ljmp
and
lahf
push
xor
mov
mov
rclb
mov
or
adc
ss
jb
sbb
sub
jb
jb
xor
cmp
data16
cmp
inc
and
in
in
inc
cmovs
mov
add
cmp
fs
cmp
je
jl
mov
inc
outsl
sbb
mov
and
nop
xchg
xor
and
cwtl
pushf
mov
movsb
test
fs
dec
es
xchg
dec
xor
cltd
fs
imul
call
cltd
aam
hlt
and
cltd
fs
cld
add
insl
and
leave
add
add
xor
cltd
adc
fs
sbb
and
cltd
fs
dec
sub
xor
xchg
dec
cmp
cmp
dec
dec
mov
and
dec
push
push
pop
test
sbb
fs
in
test
push
add
pop
movsb
cltd
nop
ss
je
js
add
xor
and
xor
and
xchg
stos
xchg
or
movsb
cltd
nop
adc
adcb
or
sbb
inc
and
movsb
xchg
cmp
cmp
lods
inc
mov
or
inc
mov
mov
dec
mov
push
enter
pop
movsb
or
mov
ret
rcll
cwtl
movsb
fbld
or
shll
mov
bnd
mov
dec
mov
push
or
mov
cmp
or
faddp
inc
adc
mov
xchg
ljmp
and
test
and
and
or
into
adc
das
push
or
shll
dec
nop
fcmovne
outsb
xor
adc
or
outsb
jb
jmp
and
dec
add
add
dec
jge
testb
add
sbb
cmpb
or
adc
clc
test
and
mov
xor
add
or
inc
andl
mov
add
dec
mov
clc
incb
std
lods
jle
sbb
lock
and
mov
fdivr
dec
fisubl
jl
and
jecxz
sbb
add
or
imul
loope
sarb
or
aaa
jge
je
filds
or
flds
and
pop
movsb
mov
pusha
mov
pusha
loope
pop
sub
xor
xchg
add
fiaddl
adc
pop
imul
fisttpll
inc
mov
push
pusha
sub
leave
std
sarl
or
cld
inc
testb
pop
dec
in
mov
add
add
test
xor
mov
xor
xchg
insb
scas
ret
mov
sbb
or
sub
adc
and
xchg
out
push
add
sarb
and
xor
lods
imul
sbb
jmp
pop
adc
push
and
or
mov
xor
jnp
inc
flds
fstps
jmp
fisttpll
xor
adc
call
in
inc
add
ljmp
cmpxchg8b
mov
flds
sub
sar
cmp
mov
push
xor
adc
sti
test
adc
inc
cmp
xor
sbb
pop
dec
push
push
cli
sbb
aaa
sbb
out
fstps
ret
test
aas
rcll
sbb
dec
sbbl
sub
sbb
leave
jp
push
or
mov
fldcw
adc
ror
adc
push
add
bound
mov
inc
enter
mov
or
icebp
sub
add
mov
sub
add
stc
idivb
ffree
repz
inc
jmp
or
je
push
ds
inc
rcr
and
sbb
cli
repnz
mov
mov
es
sarb
test
pop
xor
xor
insl
in
fadds
inc
inc
mov
sbbb
loopne
insb
jo
les
mov
push
push
sbb
scas
pop
jmp
pop
push
push
icebp
outsb
dec
sub
or
add
loopne
cmpsb
mov
and
adc
adcb
add
movsb
cltd
add
jle
push
add
outsl
cwtl
xchg
or
sbb
mov
js
cs
adc
repnz
test
add
fs
mov
lret
rorb
ja
ret
call
xchg
mov
je
into
sbb
add
jg
lods
scas
dec
shll
cld
sbb
add
cmp
inc
sub
xchg
js
sub
add
and
add
or
pop
xor
pop
fdiv
add
in
fsubrp
fwait
jno
aad
and
push
aaa
loopne
add
or
dec
push
xor
pop
add
mov
inc
mov
scas
adc
mov
mov
lock
data16
in
push
mov
mov
sub
aas
pushl
xchg
andb
out
mov
mov
jbe
push
das
adc
inc
xor
cli
lods
arpl
sbb
jne
xchg
or
jnp
mov
inc
lock
jl
push
jnp
and
sub
pop
or
rorb
data16
je
xchg
inc
or
push
mov
into
sbb
and
lea
xor
movb
rsm
xchg
jbe
or
mov
pop
iret
les
or
inc
and
add
ja
insl
call
fsubs
into
loopne
mov
pop
xorb
out
lods
sbb
test
mulb
inc
sub
dec
iret
add
fucomp
pop
fstps
mov
jmp
xor
test
xchg
orl
inc
inc
sub
divb
aam
sbb
gs
or
mov
mov
push
or
push
or
cmpb
push
out
mov
push
addr16
mov
push
xor
imulb
sbb
mov
sub
mov
push
push
jp
push
ret
in
mov
jb
dec
ljmp
popf
fstsw
movswl
and
mov
sbb
loop
inc
fxch
mov
and
sub
rorb
data16
cmpsb
or
pop
or
insl
or
clc
movsl
fs
push
mov
or
sub
pop
aam
test
fwait
dec
mov
outsb
fwait
sbb
clc
loope
flds
and
or
mov
daa
jle
movsb
fldpi
xor
add
add
xor
scas
lahf
movb
pushf
je
lret
jge
inc
je
sbb
xorb
scas
sbb
mov
int3
mov
out
pop
adc
xchg
andl
or
mov
lock
mov
and
adc
orb
jl
call
mov
jnp
jo
jg
inc
or
jbe
and
mov
push
pop
dec
mov
push
jbe
dec
push
lock
shrl
arpl
iret
or
dec
lret
push
shlb
ss
outsl
jbe
and
test
mov
mov
pushf
add
cmp
sub
lcall
xchg
add
adc
adc
shrl
add
jo
jp
rclb
mov
nop
lret
je
test
pop
cmp
adc
push
sti
jbe
or
pop
or
cs
cmpsl
jno
sbb
xchg
or
or
outsl
enter
cmpsb
push
or
inc
add
loope
rcrl
mov
push
scas
cmp
pop
adc
inc
test
dec
or
xor
xlat
mov
dec
imul
dec
push
or
nop
mov
and
sub
jmp
aas
sub
inc
clc
and
cmp
inc
sub
xchg
loopne
test
rolb
jmp
jbe
hlt
sbb
pop
movsb
lock
stos
jp
pop
pop
cmpsb
mov
dec
jb
out
jge
mov
sub
dec
pop
inc
mov
ljmp
add
dec
sbb
push
adcl
jg
jns
dec
or
inc
lea
pop
xor
or
es
inc
shrl
aas
adc
lock
loop
rolb
adc
jmp
cmpl
fisttps
outsb
push
pop
pop
and
mov
mov
mov
inc
adc
iret
push
mov
mov
mov
adc
loopne
cmp
jb
cmp
mov
sub
adc
loopne
push
jae
add
mov
fisttpll
mov
dec
xor
push
stos
jns
fsubrl
inc
xchg
and
sarb
push
and
fdivrs
enter
inc
out
jge
je
inc
mov
rol
inc
or
ret
outsb
inc
stos
inc
or
fmuls
or
cmc
xorb
sahf
dec
sbb
js
movsl
cmp
mov
inc
sbb
cmp
in
ds
loopne
mov
shl
sub
push
fdiv
into
loopne
pop
popf
lock
rclb
xor
ds
test
xor
and
aam
out
mov
push
icebp
push
xor
shl
lret
xchg
pop
pop
sub
test
xchg
xor
or
sub
jns
mov
ret
movsb
bound
push
rcr
jge
or
inc
lods
sbb
test
lods
sub
and
push
rol
out
or
inc
xchg
push
rcrl
dec
xor
mov
jno
rcrl
jmp
pop
push
mov
jb
push
repnz
push
cld
arpl
iret
dec
jns
cmp
or
sarb
hlt
js
push
sub
aas
mov
xor
fisttps
mov
loopne
movsb
addr16
das
cmp
push
or
xorl
add
shll
pop
push
push
test
sbb
jg
sbb
jne
daa
andl
out
into
out
inc
add
stos
push
jecxz
je
and
mov
and
and
adc
mov
inc
lcall
xchg
dec
lods
shl
test
clc
ret
scas
iret
or
inc
cmp
fidivl
or
sbb
sbbb
push
xchg
xchg
test
lret
adc
and
or
mov
mov
sub
leave
adc
inc
push
sbbb
cmp
inc
mov
mov
add
inc
dec
nop
sbb
dec
adc
jp
ss
jne
and
pop
xchg
je
popa
daa
and
inc
mov
in
pushw
pop
jne
cmp
js
add
pop
inc
mov
ds
inc
mov
mov
rorl
dec
repz
and
mov
out
pop
push
pusha
jo
negb
pusha
pop
xchg
xchg
xchg
adc
in
fidivl
or
ss
cmp
je
or
loopne
popa
xor
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
insl
test
fcompl
lea
inc
and
jp
mov
add
or
and
cmp
nop
inc
into
lret
push
fidivrl
jmp
xor
and
xchg
wrmsr
xchg
add
mov
outsb
test
push
add
adc
pop
cmp
pop
jno
adc
push
xor
roll
add
outsb
in
fnstenv
xlat
hlt
sub
inc
adc
stos
fdivs
or
add
fistl
cmp
pop
jno
mov
je
or
pop
aam
dec
mov
sbb
sub
mov
clc
outsb
or
aas
sub
dec
pop
enter
jae
xchg
dec
pushf
jb
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
adc
and
cli
jmp
sub
add
xor
ljmp
sbbb
xchg
dec
xchg
fiadds
mov
cld
fwait
movsl
das
dec
dec
jns
neg
movb
xchg
icebp
mov
cltd
push
test
push
imul
das
inc
outsl
out
or
add
add
cmp
pop
add
push
push
addl
cs
add
orl
or
pop
push
sbb
sbb
pushf
or
pusha
daa
scas
inc
pop
jmp
cmp
insl
add
jmp
mov
pop
xchg
jge
xchg
sub
adc
or
xchg
cwtl
or
inc
push
or
shlb
add
es
pop
push
inc
sbb
roll
rorl
push
jmp
test
jecxz
mov
pop
adc
and
or
test
mov
xchg
subl
test
xor
jge
adc
cmp
in
and
jb
xchg
pop
iret
mov
jbe
cmc
or
and
and
mov
enter
add
sahf
das
cmc
dec
add
adc
cld
push
and
add
mov
push
lret
arpl
call
popa
lock
inc
ds
and
lea
fcoml
ret
push
add
pop
add
movsb
lcall
cmp
inc
jmp
sbb
test
enter
js
subb
jne
bound
int3
cmc
mov
js
sub
leave
and
add
das
push
inc
push
xchg
mov
test
or
je
rclb
popf
neg
sbb
mov
adc
adc
jg
ret
outsb
shrl
sub
or
jne
bound
xor
jne
or
xor
sub
cwtl
push
jnp
mov
mov
inc
xor
mov
test
sub
push
add
pusha
inc
adc
mov
lcall
xor
or
and
lcall
xchg
inc
push
add
dec
adc
push
clc
xchg
mov
sbb
shlb
fsubrs
sub
fcomps
jbe
cli
push
push
fs
cld
add
hlt
pop
aaa
push
icebp
shrd
sbb
adc
mov
mov
cmp
jge
sbb
leave
or
xor
mov
dec
stos
data16
inc
and
xor
out
xchg
cld
sub
mov
sub
jl
inc
mov
xchg
adc
add
lods
push
xorb
lock
xchg
and
dec
ret
cmpsb
out
rcll
and
sub
jecxz
push
ret
fdivl
xor
into
jnp
sbb
or
ror
and
neg
mov
cmp
sarl
leave
ret
push
shll
xchg
dec
rolb
sub
mov
push
lock
mov
push
jg
mov
jnp
movsb
dec
dec
inc
dec
sbb
jae
pop
or
or
adcl
add
sar
and
movsl
add
in
sub
lods
ja
mov
add
inc
cmp
mov
jbe
ret
sub
add
sub
inc
sbb
data16
jp,pt
cmpsb
sbb
sbb
jle
pop
faddl
ss
push
jmp
lock
sahf
fwait
inc
inc
xchg
adc
mov
js
jl
lock
jl
or
ret
aaa
push
or
add
sbb
mov
push
mov
push
xchg
addb
ja
push
fdivs
cmp
aad
fnstenv
addb
shll
or
mov
push
sbb
and
pop
rorl
addb
nop
add
push
divb
bound
push
cmp
nop
sbb
shl
mov
out
sub
mov
and
inc
cmp
pusha
inc
add
leave
xor
enter
sbbb
push
push
push
shll
out
dec
out
mov
jl
loopne
jge
clc
xchg
faddl
pop
add
mov
ss
ret
add
cmp
jmp
xor
jo
fdivrl
sahf
clc
gs
or
pop
data16
imul
xchg
insb
outsb
lret
inc
popa
je
inc
je
insl
add
mov
xchg
jmp
xor
adc
ret
pop
sub
pop
mov
test
mov
or
jb
cmpsb
clc
adc
sub
push
add
pop
shll
sbb
cmpl
arpl
cmp
je
sub
gs
test
mov
cmp
add
push
imul
pushf
ljmp
jnp
movsl
adc
jp
not
jnp
mov
sbb
xchg
roll
ud1
in
jmp
sbb
jecxz
adc
inc
mov
test
in
loopne
cmp
cmc
jge
mov
xchg
cmp
je
pop
test
movsl
cmp
lret
lea
inc
jge
shlb
sub
jecxz
pop
jg
loopne
adc
push
add
jecxz
mov
mov
or
andb
mov
push
xor
mov
roll
pop
pop
inc
ljmp
xor
dec
cld
jg
inc
mov
push
sub
and
leave
loope
insb
pop
sub
clc
movsb
push
push
adc
stos
pop
mov
test
or
cmp
push
cmp
movsb
ss
or
cmc
xchg
push
sub
mov
popa
xchg
aam
pop
inc
mov
adc
jmp
insl
fwait
cmpl
mov
cmpl
or
sbb
or
push
sbb
je
mov
adc
dec
xchg
sbb
imul
pop
mov
popa
add
rcrl
out
dec
mov
and
aam
scas
and
test
icebp
jb
dec
and
add
or
dec
out
cli
mov
lret
je
dec
je
dec
push
push
jmp
add
mov
or
jmp
divb
sbb
orl
pop
adc
jmp
and
lcall
addb
jno
ret
fbld
add
sbb
sbb
push
lock
data16
int3
sbb
mov
iret
leave
sbb
jo
sbb
ret
xor
jno
sbb
or
push
jne
adc
fdivp
adc
pop
cmp
and
outsb
ljmp
lcall
add
push
or
lea
sub
stos
inc
imul
mov
enter
xchg
dec
repnz
xor
mov
fiaddl
into
or
mov
sub
xor
sub
push
push
or
adc
mov
mov
mov
push
sbb
add
push
pop
mov
adc
push
cmp
or
push
and
mov
or
xchg
inc
push
adc
dec
push
rcll
call
inc
ljmp
inc
aaa
pop
push
aad
push
jge
sar
add
out
pop
add
or
scas
add
shr
or
mov
fistpll
adc
test
and
add
mov
leave
test
adc
adc
mov
push
mov
add
mov
push
jp
insl
and
dec
inc
clc
movsl
je
inc
jl
in
sbb
cmp
lcall
pop
popa
adc
sbb
lahf
sti
and
sub
fidivrs
pop
adc
sub
dec
xor
bound
xor
out
inc
adc
lret
clc
daa
sub
enter
inc
dec
pop
lods
orl
stc
rolb
dec
xchg
mov
xor
nop
mov
jno
or
pusha
inc
and
cmpsb
and
xchg
and
shr
imul
enter
cli
addl
fdivl
or
nop
clc
add
adc
mov
pop
add
mov
add
cli
jne
mov
push
addb
test
add
push
or
pop
inc
mov
shll
adc
or
in
jbe
movsb
outsb
sbb
sahf
mov
sbb
adc
mov
and
sub
sbb
leave
rol
xchg
nop
sbb
test
pop
jns
xor
pusha
je
xor
cwtl
sbb
pop
or
nop
sbbl
nop
jno
add
lret
int3
test
mov
lret
xchg
dec
jo
xchg
inc
cmp
or
push
dec
dec
or
iret
sub
sbb
add
inc
inc
mov
sbb
stos
fisttps
pop
xlat
inc
sbb
inc
and
fs
adcl
ret
stos
sbb
xchg
mov
mov
cvttps2pi
add
shl
dec
sub
jne
addl
int3
pop
or
or
arpl
out
jl
xor
cmp
fdivrp
push
inc
aad
xor
pusha
mov
imul
push
test
mov
mov
test
sbb
pushf
mov
add
jno
or
out
add
fs
clc
movl
add
mov
jae
xchg
outsl
xor
adc
push
add
outsb
adcl
add
sbb
xlat
add
mov
add
push
add
inc
test
jne
pop
call
pop
ds
ss
add
out
add
call
ss
or
cmp
adc
mov
jne
mov
add
inc
add
repnz
pop
mov
in
mov
cmp
jle
inc
and
add
or
shlb
pop
sbb
xor
leave
inc
xor
sub
popa
jo
fs
fucomp
fcoml
xor
mov
mov
je
lock
rolb
aam
push
fstl
inc
popa
add
insl
push
add
push
xor
jmp
das
push
fisttpl
dec
imul
mov
ds
mov
cld
or
push
dec
mov
aaa
cmc
hlt
and
ljmp
jmp
xor
adc
lret
adc
mov
dec
add
mov
negb
add
adc
rorb
push
or
test
or
adc
fprem
std
jne
out
roll
leave
add
je
add
sub
adc
mov
pop
and
ret
je
and
mov
mov
adc
sahf
jne
shr
adc
sti
frstor
hlt
and
add
pushf
sub
add
popf
sbb
loopne
popa
hlt
cmp
pop
add
test
lds
bound
lahf
add
or
in
sub
loopne
jecxz
inc
inc
push
neg
neg
sbb
sub
sbb
sbb
inc
sbb
data16
sbb
popa
adc
pop
gs
push
push
inc
and
fsts
add
inc
push
test
sbb
and
aad
sbb
test
xchg
add
mov
pop
aam
sub
lods
push
jae
or
jae
lods
rcl
ljmp
dec
and
shr
sub
adc
dec
shlb
push
idiv
and
or
push
je
neg
cld
lock
je
or
push
pop
sbb
add
add
sbb
mov
inc
into
dec
in
mov
add
lea
jae
adc
adc
sub
xor
xchg
cmp
push
or
aad
and
into
jbe
aas
andb
hlt
add
dec
test
sbb
or
sub
mov
inc
jnp
pop
sub
orl
adcb
and
jo
into
paddusb
movsb
adc
dec
xchg
subl
cmp
cmovb
pop
leave
cmc
pushl
shrl
add
ljmp
jnp
ss
push
or
aaa
dec
sub
cmpsb
in
or
jnp
popa
inc
jns
cmp
jp
cld
mov
aam
add
leave
jne
pop
sbb
inc
jmp
xor
leave
add
pop
push
icebp
adc
ret
or
inc
xchg
or
fsts
mov
mov
push
xchg
add
mov
clc
prefetch
push
es
mov
je
mov
and
jb
cmp
sar
out
ja
add
cmp
adc
cmp
jne
adc
shll
leave
adc
mov
hlt
jb
idivl
pop
je
push
dec
or
adc
pop
pop
sbb
mov
sbb
ja
jo
dec
push
and
or
add
sbb
or
fdivr
aas
push
jb
scas
pop
push
movb
jmp
dec
lahf
adc
or
in
fstl
test
adc
ror
cmp
push
push
or
test
push
mov
push
adc
or
inc
add
xor
cmp
xor
out
rolb
cwtl
pop
xchg
adc
aad
sbb
pop
mov
sbb
sbb
mov
sub
push
pop
clc
popa
mov
fdivr
ffree
inc
xlat
inc
jb
mov
push
mov
sbb
inc
xchg
hlt
into
push
add
push
add
cmp
mov
jmp
adc
shr
shr
fildll
inc
imul
lea
sar
hlt
mov
lcall
movswl
pop
neg
stos
mov
push
ljmp
cwtl
out
addb
xor
inc
call
mov
pop
ss
out
jmp
mov
addr16
xor
and
mov
push
loope
sub
jb
jl
pop
mov
decl
jle
repnz
mov
adc
adc
mov
mov
mov
and
pop
scas
std
and
lea
inc
xor
lods
push
cmpsl
add
into
sahf
add
decb
xchg
mov
sub
leave
addr16
and
add
inc
testl
in
ljmp
push
inc
or
cmp
cld
push
xor
mov
jne
lea
adc
lods
xor
push
sub
jle
mov
push
lea
xchg
pusha
insl
cld
mov
stos
mov
push
push
or
xchg
add
and
dec
push
jo
add
movsb
mov
cmp
pop
fcomi
xor
shll
sbb
pusha
data16
xchg
xchg
les
mov
mov
cmpsb
adc
repnz
and
xor
add
xchg
sub
ja
add
rolb
rol
pop
or
sub
in
cmp
rorb
insb
frstor
sbb
push
lret
pushf
out
cli
inc
mov
lock
xchg
inc
mov
jle
int3
shrl
fdivrs
shr
or
mov
dec
mov
ret
cli
push
cmc
cmp
lock
dec
and
sti
stc
repnz
add
cli
add
repnz
repnz
rol
add
movsb
mov
shrb
sbb
es
push
fcomp
mov
cli
adc
and
fisubrl
push
push
mov
dec
fistl
push
fidivl
fldenv
enter
pop
and
or
add
dec
divb
rcrl
mov
in
sbb
push
sbb
xor
test
lcall
loop
out
mov
sahf
jge
adc
aad
or
enter
out
leave
and
push
stos
cmp
inc
daa
adc
sub
or
xor
mov
repnz
jne
fdivrs
aam
inc
jbe
add
jbe
dec
sub
push
popa
mov
sbb
shlb
dec
add
test
xor
ret
or
dec
rcll
push
lret
fcmovu
add
mov
and
cmpsl
test
cli
mov
int3
jg
add
xchg
add
or
xor
adc
mov
into
or
adc
inc
inc
mov
lock
and
repnz
add
inc
js
pop
hlt
lock
or
incb
jne
jne
cltd
add
loopne
pop
roll
sbb
lret
mov
dec
cmc
out
pusha
add
sbb
sub
xchg
sbb
idiv
xchg
mov
inc
add
inc
mov
sub
cmp
jle
mov
stos
ljmp
sub
lock
and
or
pop
adc
gs
push
loopne
pop
mov
pop
inc
shl
jb
sahf
mov
cmp
neg
and
imul
push
jmp
loopne
sarl
loopnew
fadds
pop
add
and
mov
push
in
mov
movsl
out
fidivrl
adc
add
mov
sar
sub
fbstp
enter
into
test
test
out
dec
dec
test
jp
test
add
enter
jne
int3
stos
sahf
mov
and
dec
int3
sbb
aas
sub
test
call
adc
add
into
xor
and
or
mov
inc
ljmp
jmp
dec
fsts
inc
dec
ret
cli
shrl
push
sub
cmpb
or
add
cmp
rorl
jae
aam
inc
dec
add
fimuls
icebp
add
fadds
add
mov
loopne
hlt
ret
js
hlt
xchg
jp
jne
dec
mov
jb
int
add
sbb
in
jbe
rcll
dec
and
add
push
subb
je
inc
mov
mov
inc
or
or
test
and
ret
lcall
and
stc
lret
mull
push
or
push
loopne
or
or
and
repz
dec
ljmp
jne
or
imull
scas
je,pt
push
xor
push
ret
sbb
adc
mov
out
cld
mov
ret
or
test
adc
or
jae
fcoms
inc
pop
push
cmp
mov
mov
iret
xor
xor
push
jns
pusha
inc
and
mov
fisubrl
and
pop
pop
push
jnp
pop
push
mov
ret
loope
inc
push
prefetchw
mov
fmull
or
push
pop
rol
sub
cmovne
dec
movsl
popf
jne
or
or
add
push
imul
lret
push
sub
sar
insl
mov
mov
pop
je
fwait
jno
lcall
loopne
and
insl
add
adc
fidivrs
jne
and
mov
icebp
xchg
cmp
rorl
js
fldl
cmp
scas
popa
fcoms
xor
fsts
roll
xor
roll
or
add
scas
cmpl
testl
add
xchg
add
daa
rcrb
jge
loopne
mov
jo
add
in
cmp
mov
into
or
add
mov
add
add
pop
mov
push
into
mov
mov
sbb
and
sbb
daa
daa
iret
addl
into
into
into
out
idivb
movl
idivl
ja
pop
nop
pop
sahf
pop
mov
aam
cmp
lea
in
and
or
sbb
and
stos
cmp
add
or
inc
les
mov
test
lahf
pop
xchg
out
mov
jecxz
ret
movsb
fbstp
dec
loop
pop
test
mov
mov
ret
cltd
and
popf
ret
cwtl
sbb
push
jmp
mov
pop
mov
lret
push
lret
push
xor
xchg
pop
pop
and
shll
adc
fldcw
xchg
mov
lea
dec
jmp
xchg
and
or
test
les
clc
xchg
sbb
gs
cwtl
lret
mov
mov
push
sarl
jno
dec
arpl
in
hlt
add
jnp
push
dec
out
add
cmp
mov
cmp
xor
push
nop
jo,pn
loopne
adcb
jle
sbb
dec
imul
sbb
xchg
fcmovnb
je
dec
sub
loope
add
fcmovne
cmp
je
mov
mov
or
mov
cmp
jb
cmp
jbe
dec
repnz
jmp
push
rorb
fcoms
pop
fisubrl
cs
cmpb
leave
mov
jle
or
fldl
ret
cmpsl
sbbl
out
les
and
add
cwtl
and
add
pop
push
daa
ljmp
adc
pop
and
adc
cmp
pushl
pop
pop
add
aad
xor
jo
fistl
mov
pop
and
pop
sbb
or
inc
lcall
sbb
ss
sub
cmp
cmpsl
in
cmp
je
inc
and
add
lds
sub
xor
dec
cmp
in
sub
pop
mov
dec
add
test
add
push
xlat
or
ret
add
cmp
add
daa
fsts
mov
popa
sar
ror
push
xchg
pop
jmp
mov
push
cmp
mov
lods
rolb
notl
add
push
mov
sub
pop
xchg
push
jl
mov
adc
mov
dec
add
imul
pop
mov
hlt
call
push
adcb
mov
xor
mov
mov
aas
xor
mov
inc
insb
cmp
add
mov
mov
cmpsl
mov
mov
mov
dec
loope
gs
sbb
popa
in
je
in
push
mov
gs
clc
cli
and
sti
in
lret
jne
jg
data16
jp
mov
xor
adc
loopne
sub
stos
scas
pop
lock
sbb
push
mov
movsl
mov
enter
orb
fldt
test
add
pop
adc
or
je
or
mov
cmpb
dec
fs
and
nop
out
pop
mov
and
cmp
subl
push
push
ja
and
xor
or
mov
pop
pop
sbb
dec
sbb
push
test
push
sbb
iret
outsb
jge
rcrb
imul
xchg
and
mov
sub
add
adc
ss
andb
stos
out
mov
xchg
js
ret
outsb
cmp
push
jg
lock
mov
sbb
notl
mov
mov
jl
cmp
jbe
orb
add
pop
sub
pop
and
mov
aas
clc
sbb
inc
fs
inc
add
adc
inc
dec
loopne
std
sub
mov
jp
push
or
imul
pop
sbb
xchg
jbe
dec
fs
cmp
add
test
mov
test
pop
xor
inc
rorl
xor
lret
arpl
mov
test
push
push
push
sub
dec
imul
sub
push
mov
or
fs
outsb
sub
push
orl
and
in
pop
fsubs
xor
addr16
nop
push
jb
and
mov
mov
push
loopne
faddl
mov
sub
roll
lds
dec
push
sar
xor
sbb
pop
pop
push
and
or
jge
xchg
in
ljmp
xchg
or
mov
shl
movsl
cmp
inc
lock
stos
and
mov
cmpsl
and
lea
aas
mov
int3
add
pop
sahf
xor
incb
test
jecxz
insb
in
or
pop
adc
ds
sti
pop
pop
pop
jo
cltd
pop
inc
or
add
cmp
sub
lods
idivb
fsts
push
movsb
push
sub
andl
mov
dec
sbb
pop
icebp
mov
jg
inc
or
insl
cld
mov
loopne
cmpsl
je
sti
pop
pop
xchg
loopne
test
mov
movsb
push
insl
and
loope
cmp
mov
adc
or
dec
ret
add
xchg
js
and
cmp
loopne
xor
and
dec
rclb
cwtl
push
cwtl
jo
mov
call
push
lret
or
push
sbb
mov
xor
inc
inc
xchg
enter
xor
leave
into
adc
adc
inc
xchg
cmp
and
cmp
leave
mov
sbb
add
xabort
scas
inc
push
xchg
mov
sbb
xor
cmpsb
into
mov
or
lds
test
and
outsb
pop
xor
sub
test
add
push
mov
pop
add
or
push
push
pop
adc
push
and
sub
aam
add
mov
mov
shll
dec
fisttps
xor
pop
pop
jbe
std
popaw
cld
mov
jo
inc
and
jo
jmp
push
xchg
scas
xor
inc
pusha
js
gs
push
mov
and
or
inc
jne
dec
ret
cmpsl
xchg
int3
mov
cmp
inc
xor
arpl
imul
push
or
pop
fidivrl
fwait
inc
les
mov
jmp
daa
lock
xorb
nop
xchg
push
js
dec
inc
imul
add
xchg
outsl
mov
cmp
movsb
outsl
popa
add
inc
jge
adc
mov
sbb
cmp
ja
mov
sarl
or
arpl
roll
cld
jp
mov
sbb
movsb
addr16
stos
movsl
addr16
stos
cmp
or
jge
jp
repnz
cwtl
mov
jnp
test
jg
adc
lock
xchg
or
xchg
mov
call
mov
cmp
lock
shlb
popa
fld1
mov
int3
into
lock
xlat
test
cmp
inc
adc
inc
push
xor
push
stos
dec
mov
pop
pop
sbb
clc
add
push
or
or
repnz
mov
inc
and
mov
add
mov
pop
add
lea
stos
dec
aas
leave
jp
and
push
jbe
movb
testb
testb
xchg
repnz
fisttpl
in
sub
imul
sub
loopne
pop
cmp
mov
sti
jns
dec
ret
loopne
mov
popa
lret
mov
mov
das
mov
test
dec
cmpl
push
fistl
jl
lret
jne
imul
je
bound
jp
adc
ja
xor
cmc
push
fsubrl
cmpl
pusha
fwait
or
faddl
and
mov
pusha
jmp
inc
mov
and
add
cltd
and
jae
testl
mov
sub
ret
nop
sub
and
xor
or
frstor
in
rcll
jne
inc
sbb
pop
jl
and
mov
std
mov
sbbb
or
inc
push
lea
cmp
inc
push
sbb
sub
xor
sbb
push
mov
outsb
jae
xor
sbb
leave
test
pop
fsubrs
imul
cwtl
popa
mov
arpl
das
cmp
add
flds
out
loopne
or
stc
jg
mov
push
mov
dec
sbb
pushf
sbb
mov
cmp
cmp
jle
in
mov
imul
push
push
push
add
push
fistl
or
pop
jg
mov
aas
add
fs
pop
jl
testb
repnz
xchg
or
xchg
and
adc
or
cmpsl
adcb
inc
in
push
leave
cmp
cld
or
sbb
and
lock
and
add
sbb
mov
mov
mov
ret
fxch
in
repz
loope
fdivs
add
insb
popl
xchg
scas
mov
ror
mov
adc
outsl
andb
cmpsl
pop
movsb
sbb
push
leave
cmpl
js
pop
adc
cmp
jae
mov
stos
sbb
push
sbb
dec
sbb
jg
sbb
add
test
inc
fcom
mov
in
clc
xchg
popa
dec
adc
mov
add
mov
cmpsb
jmp
and
cmp
xor
inc
outsb
fcomps
pop
lret
adc
rcl
rcrl
cmpl
push
mov
pop
cmp
cltd
adc
movsb
push
jp
xchg
mov
fisttpl
xchg
mov
or
dec
and
adc
mov
adcl
rorl
test
cmp
adc
or
adc
test
xor
inc
inc
xor
mov
inc
pusha
sub
jbe
sub
pushl
push
bound
repnz
and
shlb
dec
jo
or
jbe
pushf
fs
pop
mov
and
dec
push
adc
jg
add
dec
add
add
mov
cmp
or
je
xchg
jbe
out
je
mov
sbb
pusha
inc
cmpsb
cmp
sbb
jge
mov
add
pop
add
rcrl
daa
inc
push
dec
lea
push
sbb
push
add
sti
mov
repnz
inc
cli
and
and
cmp
pop
adc
push
cmp
jb
gs
adc
pop
dec
jne
push
pop
mov
fcoms
inc
in
add
jmp
xor
inc
xor
adc
adcl
std
pop
movsb
adc
sub
mov
les
pushl
lds
sbbb
enter
leave
cs
arpl
sub
dec
mov
movsb
add
cmp
movsb
pop
inc
pop
or
ja
cmc
loopew
inc
sbb
lahf
xor
in
sub
and
test
adc
sbb
xchg
lods
mov
das
pop
loopne
ret
cmp
push
cli
push
jb
adc
xor
add
pop
or
jae
cmpsl
or
enter
aaa
jl
std
xchg
add
jno
add
aas
int3
push
cmpb
sub
add
and
ja
xchg
and
cmp
add
fcmovb
mov
lret
arpl
push
arpl
pop
sbb
pop
fmuls
cmp
adc
jle
test
enter
inc
mov
mov
mov
aad
loop
mov
xlat
xchg
test
loop
imul
adc
sbb
adc
push
shrb
leave
test
xchg
push
mov
pusha
add
fdivs
mov
mov
es
or
shl
push
mov
mov
out
imul
pop
test
pop
cmpsb
pop
lock
jle
dec
in
js
sahf
dec
add
subl
jp
and
std
sub
sbb
adc
jmp
dec
push
cmp
and
jg
dec
inc
in
jg
add
mov
add
add
imul
sbb
push
sbb
mov
mov
or
dec
cmpsl
cmp
dec
hlt
adc
pop
cld
cltd
jle
out
cmp
pop
fiaddl
and
ds
inc
sub
faddl
sbb
lock
nop
xchg
add
dec
jg
adc
orl
jg
jmp
adc
sub
mov
and
and
add
adc
cmp
jb
mov
mov
je
call
andl
scas
gs
test
pop
pushf
and
loop
mov
jg
jae
pusha
push
loope
scas
or
arpl
jns
inc
bound
add
scas
and
es
push
sbb
cmpsl
or
ret
adc
push
es
lret
movsl
or
dec
test
rorb
ja
cs
pop
mov
js
dec
dec
cli
ret
jns
inc
or
mov
add
cmp
je
cmp
adc
cmp
cld
pop
sub
jb
testb
mov
or
inc
add
dec
inc
dec
loopne
ret
jge
push
ficompl
rorb
inc
sbbl
je
cmp
xchg
das
sub
jns
jb
cmp
jbe
clc
push
sbbl
scas
in
adc
push
imul
call
and
push
imull
mov
jg
xor
push
push
mov
test
je
mov
mov
shlb
pop
es
jmp
ret
les
inc
scas
push
inc
pop
pop
mov
and
adc
push
sub
pusha
push
xchg
mov
mov
mov
lods
pushf
adc
or
push
fwait
and
inc
in
fstl
xchg
xchg
les
or
cli
mov
test
or
and
inc
pop
sub
stc
add
add
mov
movsb
cltd
sub
jne
add
mov
add
add
cli
inc
popf
and
or
enter
dec
fldz
xlat
shlb
movsb
fidivs
push
sbb
mov
jo
or
xlat
ljmp
sub
and
aam
cwtl
lcall
stos
inc
pop
aas
je
pop
and
fld
fxch
fbstp
sub
sub
fildll
hlt
xor
jmp
lcall
and
icebp
aaa
cwtl
js
cmp
xor
ss
cmp
fcomp
jnp
cmp
lods
mov
mov
cmpsb
pop
sbb
add
add
xor
in
in
or
aaa
mov
test
or
cmp
inc
or
dec
in
sarl
repnz
xor
in
js
pop
mov
cmc
nop
test
fdivs
or
adc
and
in
mov
fadd
xor
in
cmpsb
negb
call
add
sub
jo
and
int
jb
cmp
sub
out
fcomps
shlb
test
add
dec
dec
dec
jb
fidivs
in
lock
inc
es
jne
hlt
and
mov
call
fmul
pop
cld
rolb
bound
cs
xchg
inc
adc
pop
inc
cmpsb
rcrb
inc
mov
in
in
adc
aad
add
faddl
mull
dec
pop
xchg
movsb
movsl
arpl
and
rcrl
sarl
cmp
cltd
or
ljmp
test
lahf
fdivs
ljmp
or
enter
jge
pop
jb
jmp
or
adc
fcomi
push
add
sub
sub
pusha
jmp
add
mov
bound
xchg
dec
jb
lock
jbe
mov
adc
mov
cmp
mov
dec
mov
movsb
test
in
insb
xchg
outsl
imul
adc
nop
in
adc
add
adc
les
leave
add
in
add
xor
in
pop
dec
push
sub
movsl
in
fadds
test
jae
inc
and
mov
cmp
in
mov
cmp
push
cmp
or
movsb
fisttpll
jl
push
js
test
add
fcoml
pop
pop
cmp
enter
adc
leave
mov
rol
fsubr
arpl
nop
out
fs
fcoml
stc
test
aam
or
sbb
cmc
xor
adc
unpcklps
pusha
fcoms
mov
clc
mov
cld
insb
ficoml
xchg
out
jno
pusha
fs
insb
jo
addl
or
mov
negb
fsubr
xor
mov
dec
lock
add
das
cltd
sub
test
dec
mov
sub
cmp
jae
or
adc
imul
mov
jg
int
mov
adc
and
adc
rclb
cmp
sbb
ret
mov
adc
in
sti
gs
movsb
add
stos
push
mov
icebp
imul
jnp
jl
xlat
in
lea
push
xor
cmp
jno
repnz
push
loope
mov
and
ret
sbb
mov
mov
xor
lock
push
jo
push
pop
les
les
add
xor
xchg
testb
add
add
adc
loope
iret
add
ret
add
ss
or
adc
push
mov
aam
in
es
insl
add
sti
or
inc
or
xchg
adc
ficoml
cmp
popf
lock
test
mov
lock
pushf
push
fs
popa
subl
mov
add
sbb
cld
hlt
push
loopne
nop
mov
in
cmc
cmpsb
subb
loopne
jno
rorl
lock
nop
idivb
iret
sbb
andb
inc
mov
sbb
dec
mov
adc
icebp
jne
cmp
test
sub
in
cltd
imul
popa
mov
xchg
xchg
mov
xorl
clc
aas
test
test
negl
push
push
inc
rorb
dec
outsl
jnp
pop
cmp
scas
and
nop
inc
xor
gs
or
xchg
stc
hlt
andb
xchg
stc
add
clc
sarb
cld
imul
jl
xor
push
xor
mov
push
cli
fstpl
or
mov
lock
imul
js
sbb
adc
adc
out
mov
xchg
dec
pusha
lea
int3
and
ret
pop
push
lods
shrb
mov
or
fnstcw
scas
cmpsl
mov
dec
adc
cmpsl
jbe
addr16
dec
adc
cld
mov
enter
cmp
pop
and
in
cmp
std
aad
cs
and
cld
xor
test
mov
jne
push
cmp
cld
jae
sub
aad
std
fadds
or
aad
rcll
jb
std
in
push
pop
sub
nop
sub
insl
loope
in
cmp
and
decb
iret
xor
std
jg
push
xchg
adc
add
je
test
das
jne
pop
jb
je
in
in
or
mov
pusha
mov
jmp
mov
popa
repnz
push
clc
cmp
stc
loopne
mov
sub
sbb
jo
and
xlat
clc
cltd
sub
push
repnz
call
and
cwtl
xchg
decb
popa
xchg
lea
movsb
push
in
in
fistps
sbb
and
pusha
loopne
or
or
push
jecxz
stos
xchg
test
and
faddl
xor
jns
sti
sub
inc
adc
sbb
mov
out
xchg
ljmp
cmp
xlat
add
lea
and
push
sbb
fadd
adc
and
aam
les
sub
in
std
and
sub
inc
cmp
mov
add
xor
cs
inc
loopne
or
cmp
nop
inc
or
or
xchg
dec
push
or
or
push
mov
rcl
xor
sbb
hlt
imul
mov
xchg
cmp
and
test
out
push
and
ftst
inc
push
or
or
push
mov
test
pushl
insb
gs
mov
sub
mov
mov
test
mov
or
rcll
fwait
push
adcb
adc
ret
xchg
js
mov
jnp
jnp
aas
sbbb
ret
in
inc
mov
pusha
popa
push
loopne
rorl
std
inc
add
inc
out
in
pop
fcompl
sub
sbb
xor
insb
sub
call
cmovne
add
inc
out
outsb
dec
cmp
sub
or
xor
jnp
es
add
fs
adc
andb
imul
loopne
bound
xor
fcomps
mov
iret
cmp
push
aam
sub
xor
push
enter
add
jbe
sbb
or
ja
adc
sbb
popa
mov
das
rcrb
add
jne
mov
insl
cmpsb
or
psubsb
loope
in
inc
or
fwait
in
stc
fs
adc
sub
push
pusha
lret
adc
mov
push
sub
jnp
xchg
mov
add
or
and
call
xchg
xlat
imul
pop
xor
outsl
in
add
push
adc
pavgb
mov
or
fs
mov
movsb
inc
aam
orb
inc
popf
arpl
adc
or
adc
jecxz
ss
jne
dec
adc
scas
dec
or
mov
dec
jl
adc
xchg
pusha
xchg
sub
push
cmp
push
or
dec
cmp
cmp
dec
push
jecxz
or
inc
jnp
or
loop
fdivs
jge
cs
cmc
and
fisubrl
call
jbe
ljmp
mov
loopne
in
fsubrs
jp
lods
out
or
test
test
inc
imul
in
iret
and
mov
push
sub
or
adc
stos
add
or
pop
shrb
aam
ss
lea
and
push
push
mov
lods
mov
mov
ret
mov
insb
add
xchg
jnp
dec
cmp
mov
add
or
nop
outsl
sbb
or
or
gs
lret
out
ret
cmp
mov
add
inc
insl
xchg
or
stc
mov
xlat
imul
push
sti
nop
xchg
lds
adc
add
inc
nop
dec
or
dec
movsl
roll
sbb
inc
lret
dec
adc
add
js
and
lods
mov
fcmovne
pinsrw
or
dec
or
cmp
test
inc
int3
arpl
packssdw
insl
stos
pop
aam
enter
subb
mov
mov
pushf
jl
inc
test
inc
mov
mov
or
adc
xor
pop
inc
les
push
nop
popa
pop
mov
add
jb
push
aas
mov
test
aaa
mov
jno
xchg
imul
mov
cmp
aad
xlat
and
inc
insb
sbb
faddl
mov
aam
orb
loopne
push
dec
jb
aam
aam
enter
rolb
pusha
mov
adcb
minps
xchg
xor
pop
xchg
leave
or
adc
add
inc
push
inc
cmpsb
xor
imul
rorb
cmpsb
in
dec
adc
fsubs
test
aas
and
mov
adc
or
inc
mov
adc
inc
pop
je
adc
cmc
leave
xchg
push
psubsb
aaa
adc
cmc
sub
mov
imul
mov
fwait
mov
xchg
or
leave
and
pushf
mov
test
insb
push
mov
inc
and
js
mov
jbe
sub
nop
add
lock
lea
test
sti
cmp
push
imul
pop
aaa
inc
lods
insl
mov
adc
sbb
pop
ja
pop
outsl
mov
sbb
dec
push
mov
movsb
fdivr
roll
popa
enter
movsl
shlb
adc
mov
mov
xchg
out
mov
in
inc
xchg
push
jne
imul
call
xchg
loopne
cmc
add
fsubrs
xor
xor
sbb
xchg
imul
test
inc
jge
jmp
fcomps
hlt
or
sbb
int
sbb
ss
xor
prefetcht2
pusha
pop
sbb
inc
mov
jo
sbb
sbb
cmp
in
add
inc
adc
add
leave
and
testl
adc
or
test
gs
lret
daa
orb
or
pushf
xor
add
xchg
cmp
dec
xchg
sbb
int
leave
ss
xlat
pop
xchg
mov
sub
adc
fdivr
notb
in
mulb
sub
loope
add
cmp
push
sbb
cmp
pusha
lea
les
test
lea
pop
aam
in
pusha
pop
jns
movsl
es
mov
xchg
sub
jns
xchg
ret
xor
fnsetpm(287
mov
sbb
or
inc
je
movsl
in
jne
or
xchg
js
mov
lods
push
shrl
xor
call
lea
add
sbb
and
std
xor
or
jbe
test
or
aad
pop
fstpl
ret
xchg
adc
in
mov
xor
mov
enter
sbb
cmc
je
ret
sub
rorl
leave
fdivrl
cmpsl
sbb
lds
add
pusha
and
lock
dec
xor
adc
pop
fmuls
jo
mov
enter
push
and
jg
adc
inc
jmp
xor
sbb
or
decb
sub
xchg
mulb
inc
pop
leave
add
fmul
dec
or
sub
aam
or
pop
adc
ret
push
push
dec
inc
mov
je
xchg
pop
in
loopne
mov
add
sbb
dec
rcl
les
cmp
loope
sbb
xchg
xchg
and
xchg
lret
pop
and
or
mov
sbb
xchg
mov
leave
add
cld
or
dec
not
adc
imul
nop
push
cltd
mov
push
mov
aam
add
rorb
rclb
enter
js
aam
or
pusha
movsb
cmp
fmuls
enter
les
rcrb
and
mov
xor
idivl
lods
outsb
loopne
mov
fistpl
mov
adc
pop
lock
push
and
in
mov
cs
push
inc
add
add
mov
adc
lods
mov
adc
add
test
dec
mov
je
leave
js
inc
and
gs
add
fbstp
jne
orps
or
test
xor
push
mov
sbb
rcll
adc
aas
push
and
inc
add
sub
and
jb
lods
cmpsb
cs
xor
repz
lahf
and
mov
add
int3
test
mov
lods
lods
xor
jnp
test
sarb
sbb
sub
ret
sbbl
pop
sub
lods
mov
nop
out
push
leave
pushf
cwtl
insb
adc
adc
test
popf
leave
and
adc
mov
sub
mov
sub
test
mov
lcall
or
shr
sub
aaa
sbb
pop
fsubl
sbb
push
dec
mov
movl
xchg
sbb
orl
in
sub
jo
sub
es
inc
orb
and
jl
fidivl
pusha
mov
dec
pop
insl
mov
inc
nop
adc
je,pn
test
js
js
and
push
xorb
rorl
nop
xchg
adc
jl
nop
enter
punpckhbw
add
sub
inc
enter
mov
cmp
mov
push
das
push
cs
lods
cltd
pop
or
xchg
push
enter
or
or
xchg
xor
shlb
sub
test
std
push
cmp
push
scas
xchg
popa
js
test
and
mov
and
add
push
sub
orl
inc
mov
lods
jno
cmp
jl
aam
lea
sbb
xchg
js
in
xor
lds
fdivl
aad
movsl
add
xchg
mov
faddl
addb
js
jno
sub
cmp
lods
sub
or
int3
mov
sub
cltd
aaa
push
movsl
mov
pop
dec
gs
test
pushf
mov
test
mov
test
sbb
jmp
int
pop
inc
inc
sub
inc
ret
repnz
loopne
mov
movsb
adc
mov
nop
inc
mov
jp
idivl
call
out
lea
xchg
sbb
insb
adc
sub
push
insl
gs
cmp
test
push
pusha
adc
xchg
push
xchg
dec
cmp
sbb
dec
xor
inc
cmp
xor
inc
sub
sbb
sti
add
xor
cmp
mov
in
mov
xchg
imul
test
push
lods
add
xor
sbb
adc
in
ss
or
push
test
add
lock
dec
and
jno
mov
fdivl
adc
aaa
add
ret
adc
cs
and
test
jl
pop
xor
jne
xor
dec
push
inc
xchg
jne
aaa
add
add
call
enter
inc
lods
test
push
or
sbb
pop
xchg
gs
dec
leave
shr
jmp
and
add
movsb
loope
cmp
xchg
cmp
cwtl
add
inc
int3
jge
mov
or
shlb
cs
xor
outsl
xchg
adc
pusha
jb
stos
cmp
aaa
adc
imul
pop
adc
movsl
xchg
fs
push
leave
and
decl
mov
pushf
shll
pop
mov
rorb
pop
rcl
lods
pop
shrb
sarl
imul
mov
xchg
loopne
in
sbb
in
pusha
nop
cmp
je
add
xchg
cmp
pop
or
xor
loopne
push
mov
sub
rorb
add
mov
push
inc
cmp
xchg
jnp
inc
or
addb
rdpmc
xor
push
xor
std
inc
lret
adc
add
movsb
sbb
mov
mov
imul
mov
aad
sbb
push
xchg
and
test
mov
mov
and
add
addb
aam
sti
test
mov
fisttpll
loopne
xchg
sub
fcomps
lods
mov
push
xchg
cwtl
cwtl
and
and
mov
pop
sbb
inc
in
xor
xchg
sbb
inc
scas
movsl
or
sub
imul
inc
enter
sbb
rolb
les
stc
xchg
mov
jg
inc
in
adc
lret
and
push
sub
repz
stos
sbbb
adc
inc
das
cwtl
jp
and
push
inc
adc
aad
out
mov
movsl
jg
jns
cmp
adc
test
inc
jp
adc
or
adc
leave
mov
ja
or
inc
pushf
cmp
lcall
lods
dec
lods
jnp
add
or
push
pop
jg
dec
scas
add
nop
inc
rolb
inc
mov
xchg
and
loopne
sbb
inc
lret
popa
mov
lock
aam
les
jmp
aam
pop
aam
pop
cmp
loopne
dec
mov
mov
addb
por
push
mov
mov
jg
xchg
stc
hlt
pushf
popf
mov
dec
int3
mov
adc
in
dec
rorl
test
push
popf
adcb
dec
xchg
das
adc
jo
mov
or
arpl
fsubl
inc
jmp
push
fstl
sbb
movb
or
pop
adc
mov
jge
bound
mov
nop
inc
push
dec
push
fs
mov
and
inc
push
cmp
cmp
mov
leave
mov
adc
cmp
in
lods
test
ficoms
fs
and
lods
mov
in
movsb
inc
rcrb
xchg
bswap
enter
in
mov
mov
leave
leave
cwtl
nop
orb
mov
adc
jb
in
aam
mov
push
mov
jo
mov
jnp
and
adc
pushf
pushf
pop
lds
mov
jne
stc
mov
lret
inc
inc
sub
mov
iret
jns
sbb
jmp
adc
out
mov
xor
inc
sub
mov
fnsave
add
add
pop
aam
je
cmp
mov
rolb
mov
add
fidivrs
dec
inc
cs
mov
adc
das
cltd
inc
adc
dec
mov
push
nop
fisubrl
ret
rcrl
lods
sub
enter
xor
cmpsb
mov
pop
add
loope
xchg
dec
push
movsl
mov
aad
mov
dec
cmp
xchg
or
aam
xor
cmp
pop
jb
test
movsb
mov
pop
cwtl
sbb
mov
outsl
nop
xchg
dec
scas
mov
dec
jmp
mov
ret
fs
push
imul
imul
das
jmp
xorl
daa
call
jae
cmpl
mov
or
pusha
sbb
dec
push
and
mov
pop
sub
sub
dec
and
rolb
nop
orl
dec
imul
push
adc
lods
mov
push
stos
push
cli
push
subb
cmp
insb
xor
inc
mov
scas
and
inc
icebp
dec
mov
adc
push
push
sub
pop
pop
adc
inc
xor
imul
fs
pusha
adc
sbb
test
inc
mov
mov
xchg
in
and
mov
in
push
jb
invd
stos
sbb
push
fmuls
dec
test
dec
lds
pushaw
mov
or
or
sub
mov
sub
adc
cmpsb
ljmp
or
and
mov
jns
adc
insb
mov
fwait
or
mov
or
pusha
add
or
sbbb
mov
push
and
xchg
andb
mov
fwait
fs
stc
les
dec
dec
mov
mov
mov
xchg
sbb
enter
dec
es
rclb
fs
pushf
xchg
ja
nop
xorb
adc
adc
aas
xchg
xor
adc
mov
enter
pushf
add
loope
sub
push
sbb
jo
pusha
pop
sbb
jbe
lods
adc
sub
mov
push
adc
mov
aas
push
dec
push
rorl
jns
add
mov
repnz
repz
sub
jno
adc
lcall
mov
pop
cwtl
das
sbb
orb
pushf
mov
dec
sbb
cli
inc
mov
pop
lods
pop
inc
cmpsb
mov
pop
sub
dec
stos
push
cmp
jo
jbe
not
sbb
sarl
nop
add
lock
jecxz
test
or
aam
add
xor
or
and
repz
rcrl
xor
repnz
cld
sub
push
in
push
mov
sub
loop
in
inc
fldt
add
repz
xor
xchg
in
fucomip
sti
add
sbb
leave
fists
xor
and
adc
sbb
fiaddl
sub
push
movsb
and
or
push
movsl
jbe
clc
mov
imul
das
or
fwait
sar
xor
repz
xor
test
xchg
push
sbbb
and
pop
in
movsb
aaa
xchg
jge
rorb
les
bswap
test
inc
and
and
adc
xor
add
add
les
sbb
and
call
pop
test
sub
inc
add
inc
sub
out
push
aas
or
mov
aas
dec
movsb
mov
pop
popf
inc
mov
mov
add
ret
fsub
out
inc
cmc
add
sub
das
mov
pop
add
jmp
out
or
sub
pop
adc
out
xchg
sub
loope
add
adc
in
pop
hlt
in
pop
sub
sbb
fcompl
inc
cmp
mov
jmp
shl
pop
adc
add
xor
or
or
mov
sub
push
lahf
inc
xor
shl
adc
pusha
imul
mov
push
pop
test
xorl
imul
ljmp
clc
shlb
xor
in
in
jnp,pn
adc
fs
sbb
insb
inc
test
movsb
pop
aaa
push
ret
jnp
adc
add
or
or
or
negl
adc
cmp
add
pop
add
mov
out
adc
nop
sub
xchg
dec
pop
push
test
test
aam
mov
cltd
fldt
lods
cmp
pop
lods
scas
cmp
sub
push
dec
jp
sbb
or
push
push
and
mov
mov
rcr
add
das
dec
sub
imul
mov
pusha
mov
xor
sbb
cmp
sbb
std
addl
sti
pop
push
and
add
jg
xor
rcrb
push
rcr
sub
fistl
mov
call
cmp
xchg
fldl
aaa
cwtl
pop
sbb
sbb
cli
inc
adc
mov
test
and
push
cmp
out
xlat
xchg
scas
test
cltd
es
xor
nop
cmp
sbb
mov
adc
xor
inc
add
xchg
inc
xchg
inc
add
mov
cmp
inc
push
mov
mov
enter
orb
cmp
xchg
dec
or
es
or
cmp
movsl
dec
mov
orb
dec
pop
fadd
add
cmp
arpl
jne
das
cmp
pusha
dec
shrb
adcb
mov
inc
mov
scas
or
neg
rolb
stc
bound
and
sbb
jno
xchg
orl
mov
mov
adc
mov
frstor
ret
inc
mov
std
push
in
shrb
inc
cmc
ror
cmc
xor
sub
inc
mov
loop
cmp
xorl
dec
xor
mov
adc
nop
imul
jge
in
cmp
or
gs
sub
or
cmp
dec
or
pop
mov
sub
lods
data16
sub
push
sbb
out
pop
dec
or
push
lret
xchg
xor
bound
cmc
jnp
mov
push
push
inc
mov
xor
push
inc
loope
pop
mov
xlat
mov
in
out
xchg
imul
mov
out
test
sbb
mov
adc
xor
in
mov
ror
push
or
in
mov
push
clc
shr
out
jge
pusha
neg
cld
adc
add
in
test
xchg
add
and
sub
mov
and
and
sbb
scas
addl
inc
int3
jmp
lea
cmp
bound
and
call
cmp
test
and
scas
std
popa
mov
mov
sub
fs
sbb
rol
dec
push
fs
push
xchg
mov
push
fiaddl
or
xor
xor
dec
or
call
xchg
mov
clc
push
dec
lcall
xchg
cmpsb
mull
and
push
lret
out
mov
adc
pop
mov
pop
push
jmp
add
add
jecxz
sahf
daa
add
push
out
or
jns
out
and
jl
cltd
fidivrs
out
shl
add
push
aaa
xchg
mov
outsl
cmp
pop
enter
scas
push
loope
cmp
lret
inc
aas
pop
cmp
loop
enter
sub
idiv
incl
or
jnp
mov
add
adc
mov
rcll
xchg
adc
cld
clc
push
or
cmp
rclb
cmpl
test
add
nop
sahf
out
incl
in
pop
adc
test
cs
jg
pushf
in
jl
sarl
xor
push
inc
enter
not
dec
cmp
aad
jbe
lock
rdpmc
add
sidtl
mov
sub
inc
push
enter
outsl
bound
and
insb
outsl
arpl
imul
jg
sub
jb
sub
popa
arpl
jne
jb
outsb
je
add
add
push
js
insl
adc
std
mov
push
inc
outsl
jb
js
je
jb
sub
mov
add
or
add
add
add
in
jnp
or
add
jne
les
inc
jl
ja
and
jb
dec
push
add
add
xor
or
shlb
dec
add
push
pusha
out
xlat
add
add
aas
push
add
in
mov
add
sub
mov
insl
xchg
je
je
and
fdiv
loopne
jae
dec
fisttpl
fs
cmpsw
insl
push
push
inc
mov
mov
jns
push
jne
into
xorl
sbb
popa
xchg
aas
imul
imull
ja
or
mov
cmpsl
insl
xchg
arpl
lret
aas
and
fnstsw
outsl
jmp
jo
mov
ja
xor
stos
insl
sub
xor
fstl
scas
ja
ja
out
jnp
jb
jne
inc
push
data16
xchg
testl
insb
jp
sub
sub
jnp
arpl
lahf
popa
push
cmp
arpl
jo
in
inc
or
daa
dec
jbe
inc
inc
subl
fbstp
mul
fisubrs
je
adc
sbb
lds
jo
arpl
fcoml
fistl
insl
mov
scas
xor
pop
ret
push
fbld
inc
mov
sbb
fidivrl
adc
mov
cs
cmp
pusha
xor
daa
outsl
popa
xor
fs
bound
sub
call
outsl
xchg
pop
push
jno
lahf
aaa
jg
add
pop
dec
iret
fistps
push
enter
filds
nop
or
xchg
xorl
jb
jne
mov
inc
mov
jbe
mov
pop
stos
bnd
push
das
rcrl
jae
adc
ljmp
push
jo
lahf
outsl
mov
pop
insb
aas
or
arpl
sbb
push
mov
xlat
pop
leave
rcll
insl
cmc
jge
add
imul
xor
pop
imul
shll
jnp
pop
xor
rdtsc
cmpsl
outsl
subl
pushf
jo
bound
rcll
cmp
stos
mov
insl
lret
je
lock
inc
cmpsb
scas
cmp
addr16
in
fisubs
stos
mov
popw
pop
and
push
sub
sub
ret
or
xor
fstps
addr16
add
repz
pusha
push
inc
or
and
jns
iret
or
incb
push
adc
jae
imul
out
lcall
sbb
repz
clc
sti
sbb
sahf
cmpsl
jne
cli
push
pop
xor
lahf
stc
mov
push
lcall
jns
dec
cmp
cmp
icebp
hlt
mov
pusha
dec
aaa
push
js
imul
jp
out
add
push
push
sbb
fwait
sbb
mov
add
pop
mov
clc
cmp
imul
mov
ds
mov
rorl
push
negb
cmp
dec
sti
mov
push
xor
mov
and
jns
frstpm(287
mov
das
and
pop
mov
ljmp
jbe
sbb
inc
ljmp
addr16
in
xlat
div
jns
aas
dec
inc
faddp
pusha
mov
in
jne
xor
daa
outsl
loopne
insl
test
pop
rorl
mov
pop
pop
arpl
iret
jns
cmpsl
mov
insl
out
out
and
arpl
scas
jne
lods
pop
jp
jae
push
in
fisttpl
and
sub
pop
in
cmpsb
pop
sbb
ds
fcmovnb
mov
neg
iret
mov
sub
sbb
dec
cmp
cmp
add
dec
outsl
rcrl
and
jns
add
das
das
jns
std
loop
ficoml
push
inc
inc
arpl
bound
dec
outsl
jbe
add
pop
dec
arpl
inc
jo
sub
jne
jne
xor
insb
xchg
outsb
cli
lds
xchg
inc
jo
imul
test
outsb
adc
cmp
pushf
cmpsl
xchg
popl
fistps
popa
je
jb
xor
mov
jae
push
gs
mov
sahf
mov
dec
outsl
outsb
and
jbe
ja
pop
dec
inc
aas
add
icebp
lcall
jnp
test
ja
mov
jae
push
xchg
out
adc
popa
insb
jne
inc
xchg
test
inc
mov
or
mov
aas
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
and
incl
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
and
pop
sub
push
mov
pop
pop
pop
pop
ret
ljmp
pusha
popa
bound
gs
imul
jo
add
jbe
js
jp
jl
jle
dec
inc
cmp
pop
loopne
pop
mov
mov
dec
rorb
ljmp
idiv
cld
sti
lret
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
inc
clc
jp
xorl
outsl
sbb
or
pushw
outsl
das
xor
mov
std
push
add
jo
xor
mov
js
addl
je
pop
dec
pop
sbb
jl
mov
out
ret
ret
sub
int3
adc
pop
movsl
jge
adc
add
add
add
add
ret
pop
and
push
pop
push
add
xor
lahf
sbb
and
add
pusha
push
int
js
or
cmp
add
out
fucomip
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
fistpl
int3
push
jo
add
fidivl
xor
pop
aam
mov
mov
and
push
xchg
mov
pop
pushf
dec
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
cmpsl
xchg
or
inc
scas
mov
popf
fsub
hlt
add
lods
mov
lods
push
in
add
mov
sub
pop
out
out
or
push
inc
sub
ss
push
fistps
js
dec
dec
inc
dec
inc
adc
mov
push
nop
fs
je
add
jae
dec
bound
jecxz
push
hlt
je
outsb
data16
push
jbe
dec
fistl
out
je
xor
push
xchg
daa
jae
fstps
lea
mov
outsl
js
in
shlb
xchg
cs
and
aam
imulb
jo
jo
and
and
pop
or
mov
jae
dec
imul
in
jns
inc
mov
ds
cmp
imul
daa
pop
cs
mov
movsb
stos
ss
jns
mov
outsb
lock
je
and
arpl
je
push
rcrb
mov
addr16
outsb
mov
push
insl
jle
jbe
mov
jo
or
sbb
mov
pop
jb
and
xor
push
push
push
lahf
inc
ss
insl
and
lods
in
mov
sarb
pusha
xchg
pushw
cs
inc
imul
pusha
gs
xchg
add
pop
or
sbb
mov
bound
pusha
lock
push
sub
outsb
mov
push
jae
pop
pop
in
adc
cmp
cmp
pop
es
call
mov
clc
addr16
subl
gs
add
icebp
or
cmp
xchg
inc
push
push
push
push
dec
cltd
pusha
mov
testl
dec
push
aam
enter
ffreep
lea
push
dec
dec
jge
push
inc
ds
xor
and
jle
jb
push
imul
call
adc
outsl
jae
xor
subb
shll
das
gs
mov
rcll
push
inc
jg
bound
sub
xor
pop
das
scas
imulb
xchg
daa
xchg
mov
mov
pop
pop
cmp
in
repz
or
ds
and
ja
idivl
sub
es
cmpsb
or
cmp
jle
jle
out
mov
add
add
sub
pop
or
sbb
das
push
xor
ret
aaa
aaa
and
mov
out
outsb
cmp
xchg
cmp
jg
pop
pop
jne
stos
xor
sbb
add
mov
xor
gs
imul
mov
dec
sbb
jae
jo
sahf
inc
pop
sub
xor
pop
fs
jo
sub
xchg
jl
out
sub
push
inc
lahf
out
fiadds
xor
sub
add
or
lock
mov
push
js
push
mov
sahf
out
mov
test
cwtl
iret
jnp
out
nop
mov
jl
cmp
add
je
out
iret
adc
push
push
out
pop
pop
push
push
dec
out
sahf
out
inc
inc
cmp
sahf
out
sahf
xor
sub
adc
cmp
repz
call
repz
xrelease
sub
jns
out
or
movsb
jl
sahf
out
sahf
push
dec
inc
xor
or
sarl
in
shlb
repz
cmp
or
xor
test
push
xor
jg
or
out
jnp
add
lock
mov
push
add
in
and
scas
xchg
inc
sub
dec
lods
in
sub
add
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
jne
xor
xor
push
dec
inc
dec
cmovns
fisttps
cmove
push
adc
push
jo
ljmp
adc
aaa
pusha
inc
call
rclb
mov
out
xor
jnp
jnp
std
adc
outsb
mov
ds
pop
adc
clc
idivb
stc
lret
sbb
jb
jge
arpl
cmp
pop
dec
scas
jp
jno
in
fstl
mov
repz
in
and
cmp
dec
imul
std
dec
lret
add
inc
mov
mov
sub
ficomps
fadds
inc
sbb
pop
jns
ds
xor
incb
ljmp
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
ljmp
cmp
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
lock
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
jg
fstps
insb
mov
out
leave
ljmp
orb
mov
adc
xchg
dec
add
scas
lods
dec
lock
xor
aas
dec
enter
into
or
icebp
pop
pop
repnz
insl
jg
and
es
mov
fcompp
add
and
sub
sahf
das
push
inc
cmpsl
xor
or
inc
addb
inc
lret
or
and
push
mov
movaps
mov
jbe
orb
mov
mov
dec
xchg
pop
and
adc
sti
and
into
inc
cmp
push
jae
ret
outsb
stos
iret
mov
adc
and
data16
scas
inc
or
mov
arpl
pop
mov
repz
pop
fs
rcr
je
jne
sti
or
jmp
daa
fldt
or
mov
inc
mov
je
adc
insb
jecxz
je
push
push
sub
lock
jmp
xchg
lret
xchg
and
addr16
testb
add
lds
push
mov
sbb
jo
pop
aaa
inc
stos
add
or
js
fistps
jae
jae
insl
jle
div
outsb
mov
insl
mov
mov
ret
lret
pop
adc
shll
out
fbstp
out
lock
test
aaa
push
mov
jle
mov
ret
ret
shll
mov
mov
das
cmpsl
cmp
int3
push
lds
ret
shl
dec
fsub
mov
jo
mov
fistpl
xchg
dec
fistpll
outsb
xlat
pop
out
mov
jg,pn
jg
or
ss
push
mov
adc
jno
xchg
js
pop
hlt
push
push
sub
inc
jnp
lods
cmpsl
out
add
or
mov
scas
jmp
imul
add
ret
pop
out
es
mov
pop
lds
add
out
inc
mov
jae
cld
jp
add
jmp
and
adc
dec
dec
outsl
test
js
pop
aas
push
gs
cmp
lret
push
add
xor
pop
mov
or
insb
jae
sub
push
cmp
addr16
jle
mov
addr16
je
pop
clc
cmp
std
pop
mov
mov
daa
pop
arpl
das
cmpsl
pop
ja
negl
push
mov
jne
xor
sbb
or
jmp
arpl
sti
sahf
js
aas
inc
xchg
fbstp
fiaddl
mov
sub
cwtl
imul
scas
arpl
lock
sub
mov
push
sub
mov
or
sbb
sub
aas
jo
in
add
inc
aas
jle
loop
mov
je
dec
mov
push
jb
jbe
icebp
shlb
arpl
loop
mov
push
adc
jae
outsb
fs
push
pop
inc
loop
push
add
loopne
or
and
loop
bound
test
xchg
add
mov
mov
push
adc
aaa
sub
sub
xchg
pop
mov
jo
xor
dec
push
roll
push
xchg
cli
xchg
movl
inc
or
sub
es
mov
lcall
je
mov
jne
xor
rcr
add
dec
das
dec
adc
testl
pop
cmp
notb
pop
adc
icebp
ja
cmovge
or
jne
dec
addb
ja
adcl
push
mov
sub
outsb
add
add
out
pop
push
lret
jnp
jne
push
scas
lock
lret
fbld
xchg
jbe
sahf
ja
push
ds
outsb
loop
jns,pt
dec
das
and
adcl
jbe
addr16
out
call
cs
cs
push
inc
ja
xor
ds
sarl
shrl
out
inc
push
inc
imul
push
dec
jo
arpl
dec
insb
imul
ja
push
inc
inc
sbb
add
add
aas
imul
mov
shl
and
sbb
inc
or
pop
je
pop
pop
js
aas
insb
pop
pop
mov
jge
rcrl
inc
bound
sbb
pop
pop
ja
cmp
adc
cmpsl
xchg
inc
addl
bound
pop
aas
push
dec
or
add
testl
inc
inc
mov
push
mov
inc
jl
jl
pop
sbb
push
fistps
push
fldl
jg
iret
push
aaa
fsubrp
and
and
addr16
cmpsl
sub
out
push
lock
fsubrl
pushl
xchg
jl
cmp
out
jns
jo
pop
jae
mov
data16
push
dec
push
adc
jl
pop
ja
xor
imul
out
es
pop
icebp
into
adc
jnp
cmp
lret
outsb
mov
cmpsl
outsb
or
jecxz
sbbl
and
xchg
cmp
jno
jecxz
pop
fmull
insb
sub
lret
jl
addl
cmp
scas
xor
or
mov
jle
roll
mov
pop
stos
daa
fs
mov
imul
dec
pop
adc
jl
lods
xor
xor
mov
por
arpl
cmp
daa
inc
sbb
lock
push
outsl
pop
or
xor
dec
mov
incl
outsl
roll
xchg
loopne
fistpll
jl
sub
daa
ret
daa
scas
scas
inc
cli
rol
sub
xor
ret
adc
mov
scas
ja
inc
dec
mov
mov
pop
xlat
inc
lea
stos
pop
jmp
sbb
mov
fildll
lods
or
out
xlat
jg
jmp
xlat
xor
bound
orw
xchg
divl
push
xor
ret
add
shll
inc
aas
popa
inc
xchg
jnp
add
test
inc
mov
clc
comiss
and
pop
mov
scas
push
jg
aaa
stos
and
je
mov
dec
push
or
out
imul
push
pusha
mov
daa
xlat
mov
inc
add
push
cmp
andl
mov
mov
sbb
test
push
mov
sarl
mov
mov
push
push
push
mov
test
mov
jo
idiv
lcall
jg
push
rorb
jl
mull
and
sahf
pop
in
push
cmp
sub
out
pop
xchg
pop
es
aas
xchg
test
pop
pushf
into
out
outsb
aaa
ret
test
push
je
popl
int
je
dec
push
push
mov
idivl
aad
lock
jg
push
idivl
sarl
and
es
cmp
repz
push
testl
adc
dec
and
sub
les
pop
jae
ja
jg
jo
jns
orl
mov
ret
mov
push
push
addl
push
pop
push
mov
aaa
jae
mov
test
bnd
push
jae
push
push
and
popa
outsb
arpl
push
gs
insl
pusha
push
ret
jae
mov
push
dec
bound
xchg
xor
pop
mov
cmpsl
push
jae
fwait
loop
fdivp
push
cmc
jae
push
push
xor
cmp
repz
push
ret
repz
sbb
gs
jbe
lcall
adc
push
sub
fnstcw
ds
popa
and
pop
push
jmp
jg
ret
iret
add
gs
je
cmp
lock
out
push
jo
jb
sti
add
sahf
jb
xchg
cmp
ss
into
pop
jae
sbb
and
and
arpl
arpl
xor
cmp
fs
push
inc
inc
cld
adc
mov
xor
cmpsb
mov
cwtl
imul
outsb
je
ss
cmp
fnsave
pop
imul
sbb
jae
ja,pn
adc
cmp
jae
movsl
frstor
adc
push
xor
inc
popf
pop
xor
push
dec
rcrl
or
inc
or
push
arpl
inc
adc
ja
push
mov
add
xchg
rolb
arpl
loop
outsl
dec
push
jmp
call
jae
repnz
jae
and
add
xchg
js
push
add
xor
mov
pop
push
outsb
xchg
sub
ds
push
jl
das
scas
adc
sub
pop
adc
dec
push
push
push
sar
lods
sub
or
cs
xchg
andb
mov
mov
jbe
ja
aas
cmpsb
psubq
mov
inc
aas
aaa
cmp
aam
pop
and
stos
mov
fs
call
dec
sbb
and
call
data16
push
mov
push
pop
inc
aaa
mov
rcl
insl
fwait
xchg
mov
jo
rolb
insb
stos
pop
dec
xor
adc
pop
inc
cmpsl
push
or
outsl
ret
add
inc
sub
cmp
cmp
orb
xchg
outsl
jg
fwait
mov
rclb
dec
rorb
dec
scas
sub
mov
inc
testl
lret
cmpl
dec
shll
popf
push
or
dec
mov
out
add
subb
jne
xor
pop
addps
popa
push
inc
rorb
jecxz
ret
add
lret
dec
pop
fildll
mov
sub
lods
rcrl
iret
gs
fimull
pop
in
add
jae
insb
lods
jp
ljmp
mov
fildl
das
mov
das
aaa
cld
ret
pop
bound
shll
push
subl
pop
mov
outsl
fs
es
jb
call
mov
jae
inc
aas
fsubrp
movsl
and
fiadds
adc
pop
jns
out
sbb
out
sahf
out
andl
pop
or
add
xor
scas
push
inc
or
pop
push
cwtl
add
fs
lock
das
adc
jns
and
sub
xor
fidivrs
fwait
inc
mov
mov
mov
flds
mov
mov
popa
xchg
add
shrb
int
xor
das
or
xor
add
and
add
jo
sbb
lret
verw
insb
lea
shlb
pop
sti
scas
fyl2xp1
das
incl
shrb
mov
mov
ss
test
jle
lods
sub
inc
addr16
clc
clc
aas
repz
cmpsb
lahf
out
mov
clc
das
data16
push
call
jae
sub
outsb
jae
rol
aad
push
push
dec
push
and
pop
and
shlb
repz
sti
pcmpeqb
stos
outsl
push
add
aas
cmp
inc
outsl
inc
push
jae
fiaddl
arpl
add
pop
dec
inc
lods
adc
fcmovnu
xchg
imul
pop
stos
and
push
jmp
dec
jg
aad
mov
aaa
or
outsl
jo
ljmp
daa
jns
dec
dec
aad
sti
dec
pop
xchg
cmp
fistpll
test
dec
imul
loop
mov
aaa
jbe
imul
je
dec
fwait
and
adcl
jb
pop
icebp
es
cmp
push
xchg
jo
cmp
shll
mull
das
and
cmpsl
push
cs
loope
sbb
sti
sbb
mov
imul
gs
imul
xorb
fs
xorl
pop
sbb
mov
repz
or
dec
jmp
add
imul
inc
push
imul
aas
ljmp
rorb
outsb
pop
scas
sub
insb
lds
scas
scas
aam
cmp
das
lahf
pop
or
mov
addr16
es
xchg
cmp
out
mov
ret
xchg
adc
stos
rolb
das
out
xor
rorb
stos
and
sub
lret
jecxz
iret
popa
adc
outsl
pop
outsl
jae
sub
xlat
ret
je
stos
test
imul
ret
lahf
arpl
xor
inc
daa
mov
fdivs
push
jae
xchg
pop
add
jmp
mov
popf
jnp
das
cmp
cmp
or
adc
mov
shrl
jmp
insb
mov
and
jecxz
push
add
jbe
jne
xor
and
rolb
pop
fidivs
pop
push
adc
pop
or
mov
mov
pop
push
fidivs
dec
mov
cmp
ss
xor
add
jno
mov
fbld
cmp
jmp
aas
je
xor
aas
xor
jbe
add
fbstp
jo
cmp
subb
jnp
jge
push
test
adc
mov
ljmp
lcall
test
or
xor
mov
xor
or
or
or
je
cmpsl
subl
int
stos
push
iret
mov
fs
outsl
js
push
js
push
arpl
imul
fs
mov
scas
scas
mov
in
add
adc
js
testl
push
xor
add
push
sub
aaa
xor
push
xor
mov
lret
je
mov
iret
andb
sarb
mov
iret
sub
ret
dec
popa
xor
mov
jecxz
test
shlb
dec
movsl
dec
xlat
sbb
insl
mov
cmp
mov
push
stos
adc
nop
mov
pop
add
or
push
mov
ja
stos
dec
xor
add
push
push
push
scas
xchg
bound
inc
and
sub
push
cmp
insl
pop
xchg
push
addr16
mov
sub
sub
adc
sub
movsb
push
ficompl
mov
xlat
jnp
outsl
in
mov
dec
test
dec
unpckhps
jnp
inc
lods
test
sbb
inc
rsm
or
xchg
mov
pop
push
and
js
cmpsb
push
push
mov
sbb
pop
jg
fists
sub
jo
jmp
insb
fcmovnu
mov
add
cs
mov
push
cmpsl
adc
pop
xor
sub
add
adc
pop
je
gs
and
aas
pop
sbb
aas
xor
sti
movsl
jb
mov
les
js
xchg
mov
or
inc
call
mov
pop
fldl
jbe
das
cmp
out
hlt
les
dec
add
sbbl
dec
pop
addl
scas
mov
addb
dec
add
dec
repz
div
imul
and
ret
out
ds
jne
push
adc
imull
int
adc
adc
sbb
jne
push
or
bound
and
and
pop
mov
sub
mov
adc
aaa
or
xor
pop
mov
mov
mov
push
adc
and
mov
pop
lcall
or
jo
push
scas
out
fistl
outsl
jae
imul
scas
lods
push
scas
jg
sbb
push
push
scas
pop
mov
mov
dec
add
popa
or
add
mov
ffreep
mov
and
inc
jl
inc
mov
jecxz
arpl
cmp
movl
insl
sbb
xor
loopne
fwait
imul
loop
ja
lods
cmpsb
push
xchg
dec
ds
push
bound
ljmp
test
cmpsl
out
jno
clc
sbb
and
mov
or
cmp
mov
test
or
aas
das
shr
les
sub
jecxz
stos
dec
xlat
mov
fdivs
dec
shl
jb
arpl
fbld
shl
push
pop
jnp
jge
adc
xchg
cmp
cwtl
cmp
and
test
or
sti
mov
outsb
sbb
cmp
insl
inc
xlat
pop
cli
mov
ja
in
push
pop
outsl
aaa
sbbb
repz
mov
sti
mov
insl
arpl
xchg
mov
vmovhps
mov
or
icebp
jae
imul
imul
inc
in
mov
pushf
dec
leave
push
repnz
mov
push
pop
or
mov
xchg
adc
mov
xchg
sbb
mov
js
push
xor
cmpsb
xchg
push
leave
xor
mov
repnz
and
inc
sub
movsb
push
leave
stos
in
cld
mov
jb
pop
and
in
mov
pop
xchg
mov
mov
leave
push
xor
sarb
and
push
repnz
mov
dec
pop
and
stos
in
cltd
subb
push
leave
fsubrs
jns
fsubrl
stos
cmp
lods
push
jb
dec
cwtl
dec
scas
xchg
test
pop
sbb
add
dec
mov
xor
adc
xchg
cmp
inc
mov
push
and
loop
fwait
sbb
pop
mov
movsl
ja
inc
xchg
sub
adc
inc
add
inc
pop
inc
arpl
in
sbb
pop
add
jb
test
inc
iret
iret
dec
lcall
pop
dec
sub
mov
mov
pop
push
mov
xchg
ficompl
xor
and
or
xchg
nop
mov
push
pusha
aam
into
inc
dec
movsl
xchg
repz
sub
ss
inc
mov
push
testl
xorl
mov
push
test
sbb
pop
aas
push
inc
add
mov
xlat
push
in
push
jo
cmpsl
mulb
cs
lea
mov
cwtl
rcrl
push
scas
addr16
stos
data16
imul
mov
inc
inc
scas
inc
scas
sub
adc
jg
xchg
jp
lahf
push
adc
adc
or
mov
test
mov
call
imul
mov
lods
shlb
jmp
jbe
mov
out
aaa
add
inc
iret
ret
pop
je
aaa
outsl
scas
mov
adcb
ss
push
outsl
push
or
inc
jecxz
dec
mov
es
and
loopne
lahf
dec
xchg
cmp
xorb
aas
xchg
jbe
mov
jg
aaa
xor
adc
ja
push
sbb
mov
insl
adc
scas
pop
aaa
test
and
inc
aas
push
sbb
sbb
dec
jmp
cmp
push
je
aas
mov
outsl
jbe
inc
insl
pushf
rolb
push
ret
inc
call
xchg
jbe
std
and
mov
popl
ret
popa
add
es
pop
cmpsb
and
xchg
je
xor
inc
pop
sbb
or
pop
rorb
xlat
add
imul
sub
xchg
push
fwait
cli
adc
or
inc
popl
jl
jecxz
sti
ret
fnsave
dec
xor
addr16
addr16
jb
add
bound
fs
xor
sbb
addr16
ja
je
arpl
sbb
mov
aas
pop
sbb
lds
mov
xor
jae
cltd
push
lock
mov
les
in
ss
mov
mov
imul
imul
fiaddl
div
enter
paddd
adc
lock
push
pusha
add
arpl
cmpsb
and
mov
dec
sub
and
stos
aas
call
loop
add
dec
mov
pop
inc
in
repz
fcoml
arpl
sbb
dec
lcall
inc
pop
cltd
out
iret
jnp
outsb
and
push
push
incb
int
pusha
test
mov
pop
sub
cltd
push
inc
xlat
xchg
jo
mov
jl
and
push
add
andl
jb
and
mov
adc
inc
fwait
imul
adc
inc
pop
rcrb
xchg
jecxz
mov
nop
iret
ja
adc
pop
push
pop
dec
xchg
jo
mov
pop
push
cmpsl
pop
sub
push
xorb
xchg
into
jl
xor
xor
test
adc
jae
xchg
out
rcll
mov
sub
or
iret
cmp
adc
lods
cwtl
pop
and
int3
shrb
or
daa
movsl
test
add
mov
push
fiadds
jo
push
sub
pop
jmp
push
mov
outsl
fbstp
aad
adc
andl
cmp
push
and
push
xor
aam
xlat
das
addr16
inc
test
push
js,pn
ret
int
scas
clc
xor
xlat
xchg
xchg
jno
test
mov
arpl
and
push
rolb
pop
lea
xor
cmp
adc
dec
push
loop
stos
mov
bound
inc
mov
jle
xor
xchg
lcall
lret
aad
push
adc
adc
loop
jb
mov
xchg
cmp
inc
pop
iret
inc
mov
fs
dec
or
test
xor
pop
jecxz
pop
or
dec
shlb
jmp
fdivp
pop
fiaddl
or
or
xor
push
add
inc
cmp
jmp
inc
aas
jbe
dec
testl
cli
inc
push
lret
ss
mov
dec
mov
bound
xor
pop
incb
and
fidivrs
inc
cs
lret
clc
push
jmp
xchg
ret
shrl
ja
retw
pop
jmp
inc
xchg
fidivs
mov
lcall
sarl
out
data16
mov
adc
jo
cmp
scas
or
daa
xor
push
mov
mov
pop
js
inc
out
loopne
frstor
packssdw
inc
pop
pop
mov
push
test
ss
outsb
pop
push
push
xor
mov
jb
das
inc
pop
dec
es
js
lods
loope
add
and
scas
mov
pop
push
sysexit
mov
adc
dec
cs
sahf
push
outsl
push
in
jecxz
cmp
cli
push
push
insl
sub
jnp
push
scas
push
insl
mov
inc
ja,pn
fisubrs
cli
xor
push
jp,pt
jp
jp
iret
jnp
ds
xchg
dec
loop
xlat
jg
dec
das
xor
xchg
xchg
jp
pop
outsl
pop
outsl
cmp
push
dec
xor
xor
mov
outsl
or
or
dec
cmp
add
sti
mov
arpl
adcl
inc
mov
mov
push
dec
push
repz
adc
jg
lahf
sbb
jnp
adc
inc
inc
movb
mov
add
out
push
mov
call
push
mov
xchg
dec
enter
xor
push
dec
adcl
js
push
xchg
or
pop
sub
aaa
xchg
push
popaw
add
fcoms
je
lret
dec
test
ss
fbld
and
stos
xchg
aam
jnp
arpl
mov
xlat
arpl
pop
sbb
pop
pop
jecxz
stos
rclb
mov
pop
mov
orl
mov
lock
jns
into
dec
daa
stos
test
cmp
and
cmp
orb
jmp
or
and
iret
sbb
rcr
sbb
outsb
mov
sub
sbb
mov
hlt
mov
xchg
push
bound
mov
jg
add
mov
or
sbb
push
dec
inc
into
insb
outsl
popa
fs
outsl
or
les
adc
aas
add
lahf
stos
mov
ljmp
cmp
add
inc
sub
pop
scas
call
add
mov
or
not
push
outsl
addr16
sbb
cmc
sbb
arpl
push
jo
xlat
add
pop
mov
lret
mov
pop
movl
push
xor
pop
or
xor
pop
adc
push
and
sahf
cs
jns
out
push
or
mov
lock
loopne
dec
sti
int
aam
pop
cmp
jne
jo
arpl
incb
sbb
xor
jae
pop
xor
dec
lds
out
punpckhbw
xor
mov
ss
adc
test
pop
jmp
repz
fs
jg
xlat
test
outsl
stos
push
mov
ja
mov
outsb
xchg
xor
rcrb
xchg
and
int3
fwait
loopne
das
push
sub
and
pop
imul
ret
push
clc
andl
jmp
dec
mov
ret
mov
sub
outsl
push
test
addr16
add
dec
jecxz
sub
mov
sub
sbb
sub
addr16
or
push
mov
cmp
stos
in
dec
mov
and
push
popa
les
ljmp
mov
jl
mov
movsb
pusha
add
repz
inc
daa
dec
repz
dec
or
xchg
xlat
jno
pop
sbb
and
and
cmp
popl
icebp
sbb
adc
lahf
scas
or
ret
inc
daa
jns
xor
stos
adcb
xchg
pop
rcr
in
add
outsb
dec
arpl
jae
lret
lcall
arpl
xlat
outsl
cmp
imul
das
repz
outsl
inc
xchg
or
aaa
sub
cmp
mov
mov
call
jb
push
ds
adcb
adc
jle
add
mov
inc
add
dec
add
das
add
data16
jl
sub
testb
lock
aam
ja
sub
or
ret
jl
out
add
jmp
push
cltd
push
sti
sub
sbb
das
fadd
ljmpw
ret
cwtl
and
mov
or
jg
nop
and
mov
mov
pushl
push
and
mov
add
adc
xchg
mov
mov
lods
pop
out
decl
out
dec
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
jle
sub
mov
sbb
das
in
adc
pop
sbb
xor
mov
std
iret
mov
dec
fsubs
sbb
sar
jg
mov
pop
dec
xchg
jecxz
dec
xorl
add
jbe,pn
adc
adc
dec
call
hlt
or
ss
sub
lcall
jmp
fisubrs
pop
cld
js
pop
imul
inc
ret
das
addl
push
xchg
push
jo
add
mov
js
dec
jns
pop
jb
int3
pop
mov
cmp
dec
cs
jl
insb
out
cmp
pop
cmp
adcb
sbb
repnz
dec
outsl
or
add
lods
adc
push
fistps
dec
out
inc
pusha
mov
clc
pop
dec
xchg
aaa
shr
jne
pop
arpl
test
xchg
addr16
adc
ret
pop
fwait
add
sti
push
lods
subl
lret
ss
push
sub
adc
push
mov
mov
inc
pop
sub
inc
cmpsb
jnp
jp
mov
test
and
cmp
push
or
aaa
add
and
dec
mov
push
mov
dec
or
jg
bound
je
bound
imul
pop
rcrb
pop
dec
mov
test
call
push
or
jae
ss
jg
xlat
sub
aam
add
inc
notl
sbb
push
pop
pop
dec
push
dec
dec
mov
push
scas
neg
je
or
insl
pushf
inc
pop
das
rdpmc
outsb
pop
ret
outsb
pop
gs
or
xchg
cmc
or
mov
lods
call
aas
fwait
sbb
aas
jne
inc
pushl
orb
inc
push
dec
or
jbe
adc
and
out
push
out
sbb
fistps
stos
pop
pop
dec
fimull
fcmovnbe
outsb
repz
test
and
sbb
xchg
aam
push
and
push
pcmpeqb
add
jbe
popa
pop
xor
outsl
dec
fwait
test
inc
pop
push
inc
outsl
push
xchg
push
pop
or
dec
inc
arpl
arpl
add
xchg
outsl
push
cmp
pusha
fildll
movsb
es
fimuls
dec
out
and
iret
addr16
nop
inc
ret
mov
push
and
fprem
dec
xchg
bound
push
cmp
jo
in
push
add
xchg
loopne
es
idivb
pop
push
mov
test
idivb
test
addl
xchg
push
aam
es
fwait
int
test
jl
repz
addr16
push
in
cs
sbb
ds
das
daa
int3
js,pt
aaa
pop
pop
lods
into
scas
movsb
and
adc
shrl
jl
rorl
int
iret
mov
mov
iret
jmp
cld
ret
cmpsb
loopne
mov
fwait
xor
int3
jne,pn
lcall
pop
cmp
repz
mov
pop
loop
mov
scas
ds
push
dec
fwait
cmp
fwait
inc
dec
push
mov
dec
xchg
jns
je
push
shl
mov
sahf
negl
push
cmp
dec
push
lea
iret
leave
into
outsb
dec
xlat
dec
pop
std
push
lret
out
push
daa
push
push
insb
xchg
clc
mov
push
call
and
sti
cmp
push
nop
negb
dec
fsubrp
xchg
push
xlat
jl
int3
repz
jnp
push
sbb
out
dec
push
lock
push
push
jge
mov
ss
push
sbb
mov
inc
adc
aam
xchg
push
pop
pushw
out
out
cmp
push
dec
lods
and
lahf
out
test
std
push
inc
aaa
imul
stos
inc
inc
icebp
outsl
cmpsb
dec
repz
inc
pop
sbb
cmp
lret
push
outsb
mov
inc
inc
mov
repz
rorl
xchg
mov
out
sahf
out
dec
sub
xorb
dec
xor
xchg
enter
dec
inc
ja
out
popa
mov
push
mov
jmp
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
aaa
scas
xlat
add
mov
iret
testb
int
mov
leave
loop
and
push
test
mov
mov
je
jg
dec
xchg
push
mov
and
imul
ficompl
ds
adc
fistpll
or
adc
mov
lea
pop
test
mov
or
adcb
sbb
popl
fdecstp
lods
xlat
jbe
xlat
xor
cmp
movsb
push
test
out
lock
jo
ja
outsb
outsb
in
jecxz
lcall
add
imul
pop
insl
gs
cmp
addr16
mov
jp
sbb
add
fstpl
push
mov
mov
cmp
add
inc
pusha
aad
aaa
push
dec
and
mov
inc
outsl
in
rclb
jb
popa
je
inc
cmp
insl
mov
dec
clc
mov
and
inc
popw
dec
mov
push
fwait
mov
cs
decl
cmpsl
mov
push
daa
jb
adc
cmpsl
push
dec
fisubrs
push
repz
pop
sub
inc
sub
fucomip
bound
xchg
mov
sub
outsb
testl
mov
sbb
push
xor
or
mov
jmp
xlat
xchg
jo
mov
jo
inc
adc
inc
mov
jecxz
push
cmpsl
inc
addb
insl
xchg
popa
pop
lods
jmp
in
push
mov
dec
xchg
push
sbb
push
fs
sbb
sub
jb
mov
jmp
cmp
xor
jl
pop
dec
sub
fisttpll
add
cmp
mov
xor
sysexit
ja
mov
mov
mov
imul
dec
decl
addr16
jo
xor
jmp
xor
das
jmp
sbb
outsb
push
jnp
dec
or
jnp
mov
sub
push
pop
call
add
jae
adc
cltd
inc
pop
jb
mov
inc
adc
or
add
push
xor
dec
push
push
out
testl
dec
aas
sbb
roll
iret
inc
add
adcb
adc
inc
imul
and
gs
jmp
xor
and
jbe
das
ja
push
push
ss
xchg
xor
out
lods
mov
mov
rcrl
rcr
testb
jae
and
loopne
outsl
mov
das
and
sbb
stos
dec
sti
das
ja
xor
mov
stos
xlat
push
pop
jg
xor
sbb
addr16
sub
das
sbb
pop
movsl
dec
insb
push
mov
sbb
mov
daa
ss
ret
scas
outsl
aaa
imul
fcomp
ficompl
notl
pop
mov
push
loopne
xchg
popa
lret
jb
mov
pop
movsl
rol
adc
add
mov
mov
sbb
dec
pusha
dec
add
pusha
push
or
roll
jno
dec
or
mov
pop
sti
and
pop
scas
mov
arpl
xorb
and
mull
adc
scas
scas
xor
add
shll
sbb
sbb
push
push
xor
gs
push
cmp
iret
or
test
push
push
inc
pusha
stos
jg
mov
push
pop
add
cmp
adc
dec
popa
arpl
sub
adc
inc
imull
pop
lods
fadds
pusha
add
push
lret
pop
outsl
jl
sub
cmp
add
push
inc
push
jg
pop
jnp
pop
out
inc
push
inc
xlat
xchg
cmp
mov
xchg
dec
push
popl
pop
or
dec
lods
test
add
scas
inc
or
mov
bndstx
or
and
add
bound
dec
repz
push
pop
clc
les
ret
fdivs
dec
cmp
jb
push
aas
dec
scas
arpl
lock
cmpsl
push
aas
mov
shlb
sbb
daa
jno
pop
pop
pop
inc
sbb
sub
adc
aas
push
js
jo
daa
testb
das
adc
cmp
sti
mov
addr16
insl
jo
je
sbb
jbe
add
addr16
jo
jae
xchg
jo
frstor
pop
jno
outsl
xor
push
iret
sbbl
fadds
adc
aas
and
jns
je
jne
or
xorb
ljmp
pop
pop
pop
or
dec
out
mov
inc
les
lea
mov
lea
sub
push
inc
mov
js
imul
push
das
addb
gs
push
inc
xor
pop
sti
inc
and
adc
push
inc
fimull
testl
xlat
pop
stos
mov
mov
lock
cmp
cmp
jae
push
mov
jg
pop
and
push
loop
pop
into
dec
push
push
pop
stos
mov
jmp
mov
push
and
pop
aad
inc
inc
pop
setnp
push
push
add
lods
addr16
add
push
inc
push
aam
jns
add
mov
jb
iret
scas
pop
cmp
push
push
and
rol
ret
mov
rcr
inc
adc
out
add
insl
pop
inc
outsl
outsb
or
aaa
inc
insb
ljmp
daa
lea
into
lock
inc
mov
cmp
jb
aam
dec
fsubr
ds
loope
outsb
add
xor
dec
sahf
std
cmp
dec
push
xchg
add
loopne
cmp
add
sbb
fiadds
jg
ret
movl
add
pop
xor
mov
adcl
and
out
mov
and
pop
mov
sub
and
ds
xor
pop
das
sbb
xlat
xor
jne
add
pop
daa
daa
daa
push
into
in
and
push
pop
inc
inc
inc
push
inc
pop
and
rol
fnstsw
or
aas
js
insb
cwtl
fcomps
lods
out
sbb
push
and
fildl
out
les
inc
cmp
pop
aas
or
insb
pop
gs
inc
sub
ds
push
pushw
push
mov
pop
push
sbb
cld
ja
aaa
push
add
add
data16
inc
or
jl
iret
xchg
or
data16
push
sbb
sub
sub
xchg
aad
dec
es
int
jge
jns
addr16
int3
fmuls
ror
andl
mov
orb
loopne
ficoml
daa
scas
xor
mov
xor
pop
outsb
xchg
sub
out
ljmp
cmpsb
sbb
lods
adc
xchg
inc
scas
bnd
and
or
das
add
jecxz
add
daa
or
icebp
mov
cmpsl
push
daa
insb
push
adc
incl
ficoml
xlat
mov
mov
stc
push
rcll
push
add
mov
scas
inc
jb
or
js
sub
out
push
imul
faddp
inc
addr16
pcmpeqb
fs
rcr
sub
bound
jp
mov
mov
je
insb
jns
xchg
fiaddl
in
xchg
and
popa
pop
push
push
stos
loopne
cs
dec
adc
sub
sub
sub
push
jae
aaa
mov
js
and
cmpsb
add
inc
dec
inc
sahf
and
push
add
jne
push
test
cs
test
gs
jo
jns
iret
mov
popa
in
inc
mov
bound
sub
outsl
insl
jne
push
xchg
testb
pop
fiadds
lods
bound
or
addr16
cmp
mov
bound
push
inc
je
bound
jno
or
aaa
inc
insb
push
scas
inc
cmp
jbe
cs
push
test
inc
mov
aaa
xor
mov
outsl
jo
test
out
push
sahf
dec
sub
in
xor
push
das
mov
inc
mov
or
inc
xadd
inc
cmovo
fcmovnb
adc
cmpb
aas
nop
jo
pinsrw
pop
pop
pavgb
jmp
pop
sub
mov
mov
pop
mov
dec
pop
mov
or
bound
sbb
dec
mov
pop
sub
push
fs
ds
shr
sbbl
dec
xchg
daa
fisubs
mov
int3
das
inc
add
outsl
pop
iret
call
lahf
add
das
sbbb
cmp
enter
inc
mov
xor
ret
outsl
inc
xchg
lods
movsl
mov
mov
cwtl
push
jnp
repz
movsb
push
rorb
adc
mov
jns
jnp
int3
scas
fisttps
lods
pop
add
add
in
out
mov
cld
mov
insl
xchg
in
sub
mov
push
repnz
and
push
mov
outsl
add
dec
mov
and
lods
ss
testl
adc
add
aaa
adc
cmpsb
cmp
xor
push
andb
nop
out
xchg
cmp
xchg
in
mov
sahf
or
push
cs
dec
push
out
sbb
sub
cmp
cltd
xchg
outsl
dec
rcl
push
cmp
out
js
xorb
daa
out
nop
addr16
mov
int3
and
enter
hlt
mov
das
movsb
jns
cmpsl
cld
or
jae
push
mov
inc
lods
mov
daa
push
push
pusha
xchg
es
rolb
xchg
jl
aaa
xor
cmpsl
mov
mov
cmp
lahf
nop
out
sahf
or
loopne
dec
adc
test
aas
loope
or
subb
inc
push
outsl
scas
fs
in
mov
jns
jnp
lods
divb
addr16
xor
in
idivl
test
in
jb
test
test
repnz
out
inc
scas
addb
in
enter
add
cwtl
pop
in
push
addr16
jl
add
jns
fsub
jl
out
fisubl
mov
testb
sub
xchg
mov
mov
dec
les
in
jns
daa
push
je
les
out
mov
addr16
adc
daa
out
mov
xchg
shr
mov
fdivr
in
addr16
enter
add
movsb
pusha
outsb
jnp
sti
and
xor
cmp
aas
lahf
mov
push
data16
lcall
mov
mov
sbb
add
jae
mov
and
sarb
lods
sbb
sub
lahf
outsl
insl
orl
int
stos
pop
insb
jl
sbb
pop
dec
lahf
pop
enter
push
lods
mov
pop
push
lods
jl
out
cmp
or
sbb
pop
jb
dec
jl
test
addr16
ds
lods
pop
insb
add
testl
xchg
shlb
mov
add
or
lock
dec
push
jo
cmpsl
cld
nop
int
mov
scas
mov
out
cltd
push
push
cmp
mov
cmpsl
jg
push
cwtl
test
test
pop
enter
mov
pop
enter
scas
pop
mov
js
fstpl
scas
push
push
fs
mov
cmpsl
movsb
jg
pop
bnd
fcoml
repnz
fcoml
lods
call
repz
dec
mov
test
cmp
in
ficomps
in
cmp
jl
or
push
pop
mov
inc
cs
push
fstl
add
mov
add
adc
xor
inc
push
push
lahf
mov
ja
call
test
inc
test
and
hlt
dec
iret
test
lahf
aam
and
in
fwait
nop
mov
push
inc
mov
inc
lahf
outsl
insl
xorl
cmc
dec
adc
test
cwtl
mov
pop
enter
add
pop
repnz
addr16
enter
cmpsl
enter
or
sbb
sub
inc
mov
mov
add
add
cmpsb
jo
xchg
mov
test
dec
push
cmpsl
jo
jae
iret
xor
aam
mov
pop
mov
xor
es
pop
sbb
lahf
imul
fwait
nop
iret
add
xchg
push
subb
inc
pop
enter
cmpsl
sarb
loopne
aas
cmpsl
mov
or
adc
clc
push
xor
aas
push
cmpsl
test
mov
cmpsl
dec
shll
aas
dec
cmpsl
xchg
cmp
jb
cmpb
enter
dec
add
mov
dec
in
fwait
sbb
sub
pusha
insl
ja
loopne
mov
test
es
loopne
pop
pop
adc
jg
adc
lods
mov
add
adc
sar
or
and
pop
push
inc
cld
es
and
mov
mov
rcl
push
iret
addl
mov
and
sbb
les
jns
mov
inc
mov
das
add
lahf
mov
fidivl
loopne
mov
push
push
mov
push
jmp
int3
or
daa
addr16
jae
push
jmp
add
pop
shr
clc
or
jmp
pop
add
push
inc
call
pusha
cmp
dec
lahf
xorl
inc
fstpl
mov
mov
inc
mov
enter
mov
subb
adc
mov
push
push
push
pop
and
shll
pop
jmp
mov
inc
mov
lahf
dec
incl
pop
insb
lahf
push
aam
mov
clc
mov
cmp
inc
aam
sub
cmp
push
ja
lods
js
and
inc
mov
pushf
push
in
inc
pop
imul
lods
jg
pop
in
inc
sahf
fmul
fcompl
adc
incl
mov
adc
inc
jle
and
jo
or
mov
lahf
jo
pop
repnz
push
rcl
and
enter
sti
es
jl
mov
lahf
pop
pop
and
jl
lahf
in
nop
out
pusha
jo
or
nop
out
sahf
aam
rcl
in
mov
mov
inc
add
lahf
mov
aad
dec
lahf
ja
xor
iret
test
pusha
jo
enter
push
fs
lods
pop
repnz
stos
xchg
outsl
aas
call
decl
jge
lods
and
mov
lods
addr16
enter
jl
mov
pushaw
sti
push
add
inc
inc
outsl
mov
call
xchg
out
cmp
mov
ja
or
xchg
in
inc
iret
test
hlt
movsl
inc
shlb
push
test
dec
adc
cltd
or
pop
loopne
shlb
sbb
fsub
int3
ds
mov
nop
out
sub
cld
or
mov
xchg
ds
push
sbb
xchg
add
outsb
insl
bound
xor
incl
fildl
pop
add
and
xchg
loopne
sarl
das
push
js
push
push
lock
sub
mov
fs
xor
jl
es
js
ret
ret
and
add
dec
inc
mov
push
push
pop
xlat
dec
push
push
data16
das
add
test
mov
sarb
addr16
mov
addr16
pop
in
add
shr
fldl
es
ret
push
jb
and
inc
and
xor
and
sub
and
mov
sbb
xchg
repz
sub
push
fmul
push
mov
out
ljmp
je
lret
int
jns
mov
inc
and
lret
mov
leave
xchg
test
ja
negl
sahf
push
mov
push
dec
repz
test
clc
fadd
sahf
out
ds
enter
adc
enter
iret
mov
fcoms
cmp
lds
popf
stc
ret
ss
inc
sarl
test
pusha
leave
repz
leave
add
sahf
aaa
in
pop
add
add
jge
repz
sub
out
xlat
inc
mov
add
dec
xchg
jg
add
ja
popa
and
dec
pop
in
in
adc
add
pop
mov
mov
enter
inc
push
dec
sub
xchg
add
outsl
add
mov
insb
inc
in
nop
or
add
test
nop
xlat
ret
lods
mov
or
dec
popa
and
or
sub
ljmp
add
sbb
test
xchg
fbstp
or
ja
pop
in
cmpsb
aaa
hlt
popl
fs
or
pop
scas
add
push
lods
ljmp
leave
and
xor
test
pop
sub
pop
repnz
mov
outsl
add
mov
fildll
ret
test
outsl
sub
dec
jns
push
cmp
add
repz
test
add
fwait
mov
je
or
cmpsb
jmp
rcrl
or
mov
pusha
jg
add
andl
dec
xchg
ja
pop
enter
sub
mov
inc
insb
push
js
fildll
or
leave
add
and
mov
leave
shlb
or
add
and
subb
jbe
or
pop
add
sbb
popa
mov
mov
mov
addb
daa
mov
ret
rclb
getsec
aam
mov
xchg
mov
mov
dec
hlt
idiv
add
push
int
push
jb
daa
addr16
ss
add
jmp
xor
jl
aaa
ret
out
inc
push
or
in
push
push
or
mov
inc
xlat
xchg
push
xchg
int
imul
aam
xchg
xor
mov
adc
dec
imull
jbe
pusha
push
mov
mov
outsl
push
adc
outsl
jg
test
xchg
daa
fisubl
inc
jg
push
movsb
iret
push
add
jbe
js
cmpsb
clc
shrb
sahf
jbe
rolb
lods
nop
xchg
enter
stos
dec
xchg
iret
mov
stos
cwtl
mov
roll
add
in
iret
mov
push
cmp
or
or
imul
call
jl
fst
or
dec
xor
sbb
dec
mov
in
push
jno
inc
xchg
ficoms
dec
rolb
pop
sarb
testl
sub
add
jo
xchg
cmp
add
scas
push
pop
mov
push
and
aaa
subl
push
mov
mov
ja
incl
mov
outsl
addr16
sub
add
cmpsl
adc
in
shl
shrl
mov
pop
or
insb
and
jg
daa
push
iret
aam
imul
shlb
add
insb
jb
nop
jg
addr16
or
mov
cs
aam
add
sub
mov
rcrl
dec
pop
leave
mov
push
adc
das
outsl
add
aaa
pop
mov
cwtl
roll
test
ss
pusha
ret
push
mov
pusha
push
xchg
imul
add
inc
aam
cmpsl
add
fcmovb
mov
cmp
xlat
loopne
lods
add
xor
daa
mov
scas
in
mov
lahf
or
add
popa
inc
call
cmpsl
jge
out
push
or
push
add
push
pop
ja
negl
push
js
xchg
or
or
aas
add
decb
aad
sbb
hlt
fdivrs
or
aad
je
mov
push
mov
das
outsl
enter
add
or
fists
movsb
xor
push
and
xchg
cmpsb
or
js
outsl
dec
dec
add
enter
push
or
rcll
xchg
outsl
out
pop
jb
nop
add
mov
sbb
test
dec
mov
or
out
dec
scas
jbe
mov
ret
add
fistpl
ds
aas
mov
push
andl
daa
pushl
push
mov
lds
push
push
fs
push
push
dec
divl
adc
mov
call
fadds
or
mov
loopne
fimuls
mov
dec
jl
xchg
and
lahf
nop
xor
enter
inc
push
push
lahf
nop
in
push
ja
lods
adcb
lods
insb
insl
lods
sub
notl
rcr
push
in
push
xor
mov
and
ja
xchg
adc
lahf
in
fimull
in
addr16
mov
out
fldcw
jecxz
mov
push
or
jl
cmpsl
stos
ljmp
cmp
xchg
mov
sbb
lahf
out
sahf
pop
mov
cmp
repz
xchg
cmpsl
stc
adc
mov
cmp
out
xor
mov
out
outsb
xor
out
repz
ret
pop
stos
arpl
jns
cmpsl
stc
push
adc
inc
outsl
mov
aaa
jb
test
dec
jae
jns
cmpsl
insb
mov
repz
cmp
ret
icebp
sahf
out
ds
jne
sahf
ret
fsubp
jns
jns
push
jbe
push
push
or
out
sbb
jns
cmp
sar
out
mull
sahf
push
shl
sbb
ds
repz
mov
sahf
out
dec
jl
rcrl
jl
ds
shll
ljmp
out
mov
repz
out
jg
xchg
repnz
insb
rclb
addl
movsb
sti
xor
sti
cmp
adc
int
repz
pop
test
push
ror
test
aaa
sahf
out
cmp
out
xchg
out
out
mov
adc
into
sarl
in
adc
cmpsl
sub
cmp
lcall
pusha
xchg
imul
int3
lea
mov
cmp
out
sub
push
sahf
out
into
cmp
push
out
xchg
inc
mov
add
sub
mov
cmp
out
nop
mov
jns
iret
repz
divl
xchg
popf
ror
fucom
jecxz
cwtl
pop
push
ret
push
cltd
xor
mov
lcall
lcall
or
dec
xlat
pusha
popf
mov
sahf
je
imul
lahf
sarb
mov
pop
cmpsb
icebp
sub
dec
iret
sarl
aad
mov
cmpsl
stc
cmp
aaa
mov
iret
sarl
cwtd
in
aas
movsl
ds
imul
cmpsl
lcall
test
test
jns
xchg
stos
cmpsl
and
inc
xchg
icebp
sub
out
mov
lods
dec
jl
int
fucom
loopne
scas
jle
fldenv
mov
repz
repz
jecxz
mov
push
xchg
imul
mov
std
out
ds
mov
or
repz
pop
mov
iret
cmp
mov
incl
scas
fiaddl
in
mov
push
jmp
out
lcall
out
sti
cmp
and
push
or
sub
ret
mov
insl
lds
jne
mov
fldcw
leave
lret
pop
int3
iret
push
stos
shll
not
cs
aam
push
fcmovnbe
dec
mov
insb
cs
ficompl
cmpsb
fiadds
fnsave
add
nopl
xor
aam
pushf
push
aas
cmp
xlat
or
subps
inc
pop
push
jne
adc
addr16
cmpsb
and
push
aaa
iret
leave
inc
pop
es
mov
dec
adc
repnz
rcrl
aas
or
shlb
fdivrs
orl
iret
rorl
dec
mov
aas
ret
sahf
jg
adc
cmpsb
aas
sbb
sbb
cmpsl
inc
pop
push
insl
xchg
inc
in
dec
push
test
das
jbe
fildll
dec
loopne
and
or
adc
adc
out
ss
cltd
inc
mov
das
add
mov
je
jae
iret
cmp
mov
jmp
incb
aas
lret
adc
push
aas
jne
inc
cltd
popf
push
cmp
aas
in
imul
enter
int
inc
pop
mov
pop
cmp
or
das
pop
adc
mov
push
call
daa
xor
cmp
ficoml
or
jl
test
lahf
and
xor
adc
inc
sbb
lea
pop
orb
push
lahf
pushf
nop
add
jno
dec
pop
sahf
pop
xor
cmp
xchg
push
push
fdiv
fcomip
add
pop
outsb
pop
cmp
jb
pop
pop
or
pop
pushf
sbb
in
shl
in
xchg
cmp
movsb
bound
aaa
nop
push
cmp
adc
clc
pop
xor
addr16
adc
faddp
cld
addr16
add
mov
push
aas
inc
fisttpll
push
push
scas
fs
add
xchg
xlat
pop
ja
dec
hlt
push
ja
pushfw
mov
ja
imul
mov
push
imul
pop
imul
cmp
cs
push
shrb
clc
popl
push
mov
insl
jo
pop
adc
push
in
and
lcall
push
enter
inc
in
ret
das
dec
mov
push
popl
outsb
add
mov
leave
in
xchg
adc
adc
mov
leave
sbb
addr16
sbb
sub
fcoms
enter
out
imul
cmp
imul
jmp
adc
pop
xchg
sub
add
add
iret
push
scas
cld
sub
adc
daa
mov
push
fildll
test
repnz
and
xchg
fwait
mov
mov
xchg
cmp
lods
pop
adc
inc
nop
adc
outsl
and
push
insb
xchg
pop
jmp
pusha
xchg
pop
fwait
fs
test
xchg
sbb
rolb
mov
dec
movsl
or
lret
push
pushf
call
insb
das
stc
insb
das
jmp
adc
xlat
repnz
idivb
push
insl
cmpsl
push
pusha
movsl
insl
in
dec
insl
pop
addr16
jbe
cmp
addr16
cmp
movsb
lods
pop
mov
aas
rorl
fimull
outsb
fucomip
es
dec
jl
sub
aam
cmpb
iret
shr
mov
cmpsl
push
in
dec
jae
les
lar
cwtl
dec
sub
jns
ja
adc
cmp
mov
rcl
pop
mov
mov
mov
in
leave
xchg
jae
cmc
outsb
xchg
std
outsb
add
xor
outsl
and
sbb
outsl
inc
outsl
dec
outsl
push
popf
mov
and
fucomi
cmpsl
sbbl
setae
outsb
pop
mov
out
dec
dec
cs
pop
into
ftst
out
dec
dec
out
cli
push
add
ja
push
adc
out
sahf
out
xor
cmp
int
and
jo
mov
and
xchg
out
jle
push
daa
dec
dec
outsb
mov
pop
pushf
shld
pop
xchg
inc
lock
call
mov
sbb
or
mov
cmp
daa
lock
test
cmp
sub
push
repnz
lahf
add
icebp
cmp
xchg
sub
mov
push
sbb
in
nop
push
enter
fmul
call
shlb
push
ja
enter
jno
jno
jno
cmp
add
adc
jb
jb
dec
ds
or
repnz
jb
inc
mov
ja
test
xor
mov
fists
cmp
xor
add
pop
ret
pop
xlat
fimuls
inc
cmp
loope
popf
jb
jb
jae
into
repz
pop
push
add
or
mov
pop
nopl
out
loope
fnstsw
push
add
inc
filds
in
repnz
mov
cmp
or
jae
hlt
xchg
pop
fwait
push
jns
mov
add
in
and
fimuls
add
ret
mov
in
hlt
push
and
pusha
out
push
je
lret
fstpl
and
daa
dec
test
xchg
xor
sbb
mov
dec
push
mov
xchg
das
dec
push
mov
fdiv
push
mov
add
fiadds
out
push
push
scas
xchg
testb
or
and
cmpb
add
fs
mov
mov
scas
add
push
daa
inc
push
xlat
out
push
jg
jne
les
cmp
mov
bound
out
in
and
push
mull
in
and
notl
sbb
adc
jne
clc
mov
rcrb
jbe
cmp
mov
pop
dec
clc
xor
push
and
lods
fisttpl
scas
iret
nop
scas
cmpsb
in
enter
clc
add
orb
or
mov
ja
outsl
vmwrite
addr16
push
mov
pushf
add
leave
lods
mov
rcll
jbe
xchg
out
jmp
leave
add
ja
or
cmp
js
fldt
xlat
mov
inc
enter
mov
xchg
iret
add
xchg
pop
leave
xlat
sbb
scas
mov
adc
incl
and
adc
in
dec
adc
ja
divb
pop
in
add
js
add
cmp
sub
enter
xlat
or
js
push
mov
test
adcb
jae
loopne
js
nop
xchg
sbb
js
or
mov
push
push
pop
insl
sbb
jns,pt
pop
mov
leave
jae
cmp
xor
insl
pop
mov
add
mov
mov
push
sub
xor
push
pop
addr16
in
pop
popa
mov
andl
jb
pop
rep
mov
rcrl
push
testb
jns
inc
jnp
jb
cs
jbe
pop
jb
les
mov
mov
aaa
call
aaa
xchg
pushf
jbe
jl
push
decl
je
xchg
daa
popf
shld
repnz
xlat
mov
inc
adc
aaa
inc
push
lret
sub
popf
out
mov
mov
in
mov
cmpb
push
inc
add
mov
dec
scas
and
or
out
sbbb
test
and
rcr
mov
lock
mov
xor
fisubs
mov
invlpg
jmp
mov
push
ja
push
add
iret
repz
das
add
repnz
push
jle
mov
xor
jo
push
jne
push
or
inc
das
pushf
xchg
pop
bnd
inc
mov
or
out
stos
jo
mov
sbb
xchg
or
iret
in
xchg
es
lret
stos
dec
scas
mov
mov
lret
leave
jle
jle
jle
jle
ret
lret
lret
cmc
jle
jg
jg
sbb
push
ljmp
cmp
jbe
sarb
add
out
test
les
pop
fs
pushf
inc
add
push
out
push
add
shlb
jg
dec
xlat
aam
jg
mov
ss
xchg
orb
push
push
xorb
sbb
in
add
xchg
pop
adc
popf
nop
addr16
shrd
push
add
repnz
or
andb
in
andb
repnz
sub
add
add
daa
xchg
push
xchg
xor
mov
and
cmpsb
loop
addb
fistpll
dec
push
fists
leave
leave
add
scas
mov
pop
rcrb
mov
or
push
push
iret
icebp
ja
pop
insl
xchg
daa
pop
orl
cmpl
ja
int
pop
and
jle
out
xchg
xchg
xchg
out
add
sbb
in
into
inc
mov
add
test
ja
mov
inc
ja
push
add
jae
dec
push
addr16
cmpsl
cmp
add
mov
add
dec
cmc
in
ret
test
cltd
dec
ds
out
stc
hlt
lea
test
push
jg
iret
jae
add
pop
xor
cmp
jns
daa
inc
das
push
or
in
add
addr16
jb
or
sahf
xchg
out
mov
xchg
sahf
adc
loope
jns
mov
ds
xor
or
push
xchg
push
aad
cmc
test
sub
pop
cwtl
pop
daa
daa
xchg
xchg
repnz
or
imul
jns
out
cmp
ja
pop
subl
jno
sahf
out
add
jae
pop
mov
cmp
jmp
ja
daa
or
xchg
or
jo
cmp
xor
outsb
and
xchg
add
sbb
mov
pop
fdivrl
xchg
js
addl
aam
inc
pop
fadd
lahf
adc
jmp
call
inc
mov
or
push
daa
inc
xchg
mov
or
jge
hlt
or
push
sub
cmpsl
iret
push
test
outsl
call
adc
enter
mov
mov
or
xchg
jns
leave
lods
mov
cmpsb
iret
in
jbe
mov
mov
js
movsb
pop
and
cmpsl
cmpsb
adc
ficoml
mov
or
aaa
mov
outsb
push
lods
lahf
push
mov
push
cs
add
cmp
test
cmp
mov
daa
add
mov
fdivrs
sbb
mov
in
and
xor
mov
popa
pop
insb
xchg
add
repz
movb
cmp
or
adc
leave
aam
mov
addr16
repz
pop
or
repz
jmp
sub
add
add
inc
pop
cmp
add
mov
or
xlat
fwait
mov
mov
movsbl
leave
mov
jae
aam
add
and
jl
mov
insl
xchg
mov
mov
mov
clc
ja
and
orl
insl
adc
jbe
inc
mov
vmread
scas
loopne
iret
pushf
fisttps
push
adc
inc
pop
and
ja
aam
push
xor
add
cmp
inc
dec
or
pop
or
jns
insb
or
or
cmp
mov
xchg
xchg
out
sahf
pushf
adc
jne
adc
les
xlat
sbb
out
enter
mov
sub
adc
mov
adc
int3
adc
mov
and
push
xlat
lods
adc
iret
aam
fbstp
imul
sub
inc
pop
sbb
xchg
xchg
mov
addr16
dec
sub
mov
les
mov
pxor
sub
divl
adc
outsb
in
and
sub
dec
ds
pop
nop
ja
adc
fdivrl
pop
jg
add
fisttpll
outsl
outsl
push
emms
jg
mov
or
xchg
cmp
or
pcmpeqw
jnp
mov
cmpsl
push
cmovle
or
adc
mov
fs
push
aas
imul
add
mov
adc
or
push
leave
cmp
popf
dec
adc
dec
adc
cmp
into
push
adc
outsl
push
jo
dec
fcmovu
nop
aas
scas
sbb
xchg
push
ja
clc
add
in
mov
fcoms
adc
jp
push
xchg
or
iret
mov
xchg
push
add
mov
add
out
adc
repnz
fcompl
cwtl
jb
pop
jb
add
in
jbe
jbe
pop
mov
xchg
push
imulb
push
decl
add
in
pop
adc
pop
push
mov
scas
add
iret
loopne
jecxz
cmp
jmp
push
sbbl
nop
inc
pop
and
fsubrs
xchg
aaa
xchg
outsl
in
and
add
push
xchg
arpl
add
mov
jg
iret
push
repz
jmp
lahf
push
or
bound
or
pop
lret
xchg
cld
xchg
outsl
or
sbb
inc
xchg
repz
bound
repz
or
mov
insb
out
xchg
or
push
js
xchg
notl
insl
out
das
out
lods
inc
add
dec
dec
sbb
daa
pop
enter
fists
xchg
sbb
xchg
add
mov
xchg
int3
inc
or
mov
pop
jmp
fdivr
pusha
lahf
push
mov
sbb
mov
ja
daa
dec
addr16
dec
outsb
mov
stos
bt
dec
mov
inc
add
or
mov
aas
mov
pushf
or
or
iret
ja
mov
cmovge
and
dec
sahf
add
incb
inc
mov
mov
pop
jb
stos
addr16
jns
out
loopew
je
push
rorb
fistps
cld
push
xor
hlt
bndldx
jns
xchg
xor
sbb
fisubs
insl
xchg
divl
fldt
push
ja
js
stc
ljmp
fwait
mov
daa
iret
or
dec
add
xchg
movsl
popf
and
dec
or
inc
scas
cld
and
mov
daa
sbb
mov
push
mov
push
sbb
inc
push
loope
xchg
inc
fists
and
pop
pop
pcmpgtw
lods
cmp
insl
out
jne
jge
jae
popf
cmp
lea
xchg
iret
or
push
xchg
or
fistl
pop
and
push
pop
testl
cwtl
push
push
add
cwtl
fisubrl
cwtl
jmp
ja
arpl
pushf
pop
mov
ja
mov
dec
es
xchg
adc
fsubp
stos
xchg
jo
out
dec
cwtl
daa
xchg
xchg
pushf
pop
cwtl
push
push
and
ljmp
cltd
ljmp
mov
cltd
call
negl
xchg
pushf
movsb
add
mov
out
das
add
es
ficomps
fisubl
sub
cs
dec
xchg
jno
jne
xchg
shlb
pushf
xchg
shrd
outsb
daa
int
push
in
pusha
jb
repnz
xor
and
or
xchg
push
mov
fisttpl
push
fwait
jmp
jbe
shll
scas
popf
cmp
lsl
fnstsw
notl
pushf
xlat
sub
outsb
xchg
dec
and
cmovs
jns
push
add
imul
add
je,pn
repz
sahf
out
or
je
leave
mov
mov
andb
xadd
pushf
mov
mov
and
aaa
je
insb
in
pushf
popf
comiss
add
jae
repnz
pop
daa
pop
das
sbb
daa
aaa
das
popf
ja
dec
and
or
and
daa
iret
jae
add
xchg
mov
pop
xchg
iret
call
in
repnz
add
sahf
jns
lods
mov
nopl
pop
sub
xor
mov
lahf
clc
popa
sahf
mov
jl
addr16
pushf
movsb
sahf
scas
sahf
jbe
cmp
xchg
in
push
mov
fbld
lahf
test
ss
filds
leave
repz
jp
jns
outsl
push
pop
jl
dec
xchg
lahf
cmp
lahf
lahf
or
jae
pushf
clc
lahf
jnp
and
mov
out
fwait
cmp
sbb
and
add
repnz
or
inc
jb
pop
push
mov
inc
loopne
mov
push
inc
out
fisttpll
aas
paddd
dec
cmpsl
ror
fmull
ja
push
add
loope
jmp
mov
out
mov
dec
mov
and
insb
adc
and
xchg
xchg
pop
xor
ja
push
pop
jo
lods
es
mov
movsl
add
sahf
xchg
lods
mov
mov
add
or
lock
clc
add
pop
inc
adc
dec
mov
cmp
cmp
push
call
xchg
cltd
and
mov
pop
xchg
jb
in
in
aam
fdivr
in
push
xchg
bt
nopl
das
mov
xchg
sub
mov
bound
in
dec
dec
jp
push
mov
data16
cwtl
dec
dec
ret
mov
out
adc
fcomp
dec
dec
cs
loopne
lock
ljmp
and
sahf
fmull
and
movsb
xchg
push
pop
movsb
in
into
inc
dec
ja
jns
or
shrb
fistpll
sub
push
decl
das
outsb
repz
out
pop
push
das
fcoml
pop
in
dec
lock
das
movsl
push
nopl
dec
mov
pop
pcmpgtb
daa
daa
insb
jbe
add
xchg
fucomi
and
add
lds
in
sub
addr16
in
int
pop
pop
and
jmp
aas
pop
sub
in
sub
cmpsb
lahf
iret
repz
in
cmpsb
push
add
xchg
daa
iret
repz
pushf
push
test
pop
xchg
rol
in
ss
hlt
paddb
add
or
dec
mov
lock
xchg
aaa
cmpsl
pushf
mov
dec
cmpsl
scas
test
movsl
pop
cmp
add
mov
jo
mov
mov
cmp
ljmp
aas
or
push
or
iret
repz
or
pushf
pushf
pushf
inc
push
pop
imul
repz
mov
cmp
sbb
xchg
dec
cs
adc
push
pmaddwd
test
xor
je
cs
test
fmuls
add
add
mov
dec
test
jmp
jbe
jle
sbb
jg,pn
stc
push
aaa
mov
cs
push
inc
pop
lar
sahf
out
sahf
pop
leave
or
or
fsubrp
in
or
jmp
repnz
movd
stos
test
cs
stos
in
leave
pop
pshufw
fisttpl
xchg
pushf
stos
aas
jne
lret
add
dec
ja
cmc
loopne
inc
mov
push
daa
lock
or
pop
dec
popf
dec
sahf
xlat
add
sub
das
push
xlat
or
mov
push
iret
sbb
and
sub
cmp
add
push
repnz
pcmpeqd
add
fwait
shll
add
dec
outsb
push
leave
enter
mov
dec
leave
rorl
add
leave
leave
jae
fabs
jmp
add
ja
push
xchg
in
jmp
or
addr16
fcmovne
in
out
pop
pusha
punpckhbw
cs
adcl
jne
fmull
bts
push
mov
in
pushl
into
addr16
popf
xchg
fildl
out
icebp
cmp
negb
clts
incb
nop
int
cmpsl
cmpsb
push
lods
or
sub
and
repz
inc
aaa
pushf
shlb
sbb
add
lock
fdivl
adc
jb
callw
aaa
sbb
aaa
mov
fimull
mov
and
in
inc
and
lods
lea
scas
adc
push
out
sub
das
mov
js
ds
scas
push
push
sahf
out
cmp
bound
or
jns
out
js
orl
jns
out
cltd
or
jns
out
mov
out
sahf
rclb
fistl
out
adc
cld
push
dec
repz
scas
adc
sbb
sbb
repnz
xor
sbb
push
adc
xchg
adc
adc
or
or
scas
sub
xor
scas
push
add
add
iret
jbe
adc
jle
fcomip
sub
stos
xchg
lods
xor
jl
daa
mov
push
mov
sub
je
mov
pop
addl
xchg
lret
ss
xor
push
hlt
scas
add
cmp
dec
jbe
cmp
pop
mov
sbb
int3
add
pushf
outsl
add
mov
xchg
outsl
stos
pop
mov
cmp
cmp
lret
pop
insb
cmp
add
mov
or
aaa
aaa
incb
mov
mov
inc
mov
sbbl
jbe
jbe
iret
add
push
cltd
or
mov
dec
cs
out
cmp
fmull
fimuls
pop
in
mov
cmp
mov
scas
mov
pop
xchg
mov
insl
pop
mov
mov
mov
push
push
add
xchg
dec
cs
out
hlt
test
xchg
popf
push
add
lods
lahf
mov
push
mov
outsb
pop
lds
or
or
jns
out
fstpl
or
or
out
cmc
pop
leave
out
adc
sbb
je
xchg
mov
mov
popl
push
cmp
ja
fwait
push
xchg
push
add
pop
ja
jg
add
push
xlat
add
inc
inc
es
jae
cmp
cmp
xchg
lds
int
fnsave
in
fisttpll
in
in
pop
push
cs
or
std
or
add
mov
jbe
out
repnz
push
cmp
add
fstl
daa
fs
enter
cmpsl
push
mov
mov
cmp
mov
imul
fildl
jae
mov
fcmovne
leave
adc
mov
dec
addr16
out
das
test
pop
mov
das
pop
xchg
mov
cmp
pushl
mov
cmovne
ror
and
leave
mov
mov
pand
rcl
mov
xchg
out
enter
idivb
cmp
and
je
in
pop
outsb
mov
push
ja
adc
scas
mov
xchg
adc
pop
dec
stc
or
and
adc
or
es
push
loope
pop
pop
or
mov
mov
dec
outsb
pop
dec
mov
test
mov
push
notl
sub
ds
sbb
inc
sbb
xchg
icebp
xchg
xlat
pop
cmp
outsl
inc
mov
fucom
jns
push
push
pop
add
cmp
or
push
cmp
xchg
insb
pcmpeqb
mov
mov
and
adc
lahf
ja
sarl
aas
addr16
pop
jb
test
fisubl
jp
mov
ja
push
inc
or
mov
mov
mov
sahf
outsb
lret
sub
pop
clts
lea
dec
dec
xchg
lahf
cmpsl
mov
in
dec
mov
shl
in
fnstsw
cmp
mov
mov
les
ja
in
jbe
cmp
dec
xchg
or
jo
jnp
movsl
cmp
lar
mov
pop
push
mov
mov
mov
push
mul
es
or
in
loopne
aas
cmovs
adc
sysenter
mov
sub
leave
xchg
push
dec
mov
add
outsl
outsl
mov
aas
outsl
ja
insb
daa
out
cs
push
orb
cmp
popa
daa
jge
rcll
test
daa
pushf
mov
or
or
add
ljmp
push
adc
cwtl
in
mov
cmpsl
sbb
test
xchg
cmp
daa
mov
ud0
mov
xchg
js
sub
femms
dec
adc
ja
fcmovne
inc
orl
inc
int
mov
jmp
mov
add
jecxz
mov
push
pop
pushf
addb
js
xlat
cmp
nop
push
add
lods
fwait
cmp
cmpsl
push
push
mov
add
iret
leave
leave
leave
add
add
es
repz
rorb
push
or
jmp
adc
adc
loopne
xchg
sti
add
popf
test
inc
mov
mov
pop
push
push
in
es
add
clts
addr16
sahf
out
or
or
stc
mov
xchg
or
pop
ret
fisubrs
lret
mov
xor
pop
sub
xor
fisubrs
jg
dec
shrb
mov
mov
pop
push
pminsw
bnd
jnp
adc
adc
adc
or
adc
inc
pop
jae
jb
dec
push
pop
leave
jmp
iret
sbb
sbb
cmp
jp
orb
jbe
mov
and
cmp
stos
push
es
sub
cmp
repz
ret
sub
cmp
repz
sub
iret
cs
pmuludq
mov
sti
mov
out
push
and
sbb
es
inc
cmp
loop
aas
push
add
mov
add
addr16
rclb
mov
leave
mov
daa
daa
mov
psubusw
jmp
add
ds
dec
jg
ja
jmp
sbb
pop
sub
mov
sysret
cmp
inc
sahf
fucomi
jbe
das
pop
dec
pusha
punpckhbw
jne
sahf
out
sahf
out
scas
adc
sahf
mov
adc
in
repnz
cld
repz
out
add
sbb
sbb
repz
sbb
and
sbb
ss
inc
pop
dec
repz
repz
and
repz
push
and
mov
xchg
daa
mov
sub
mov
leave
mov
fdivrl
lock
fstpl
incl
ret
out
pop
adc
and
pop
and
jns
out
sub
jns
cmp
inc
sbb
jns
out
push
sbb
out
sahf
out
push
jne
sahf
out
sahf
adcb
or
and
scas
sahf
ret
inc
cwtl
lock
dec
outsl
int3
out
ret
js
testl
pop
ret
cmp
repz
femms
push
pop
pop
and
cmp
repz
or
or
repz
dec
or
bound
insb
push
jbe
xor
iret
repz
repz
sahf
adc
iret
repz
push
pop
shl
cmp
repz
sbb
sbb
out
add
or
sbb
sbb
and
das
iret
and
inc
das
dec
dec
push
cmp
jnp
outsl
pop
les
out
out
sahf
aaa
test
sbb
sahf
push
lahf
adc
iret
repz
adc
cmp
repz
rorb
fimull
repz
repz
ljmp
or
or
add
or
or
cmp
repz
add
cmp
fwait
dec
push
das
pop
jns
cmp
inc
outsb
mov
in
mov
fwait
cmp
dec
nopl
cmp
mov
pop
mov
pop
mov
lret
repz
push
or
iret
push
jecxz
jmp
repz
cmp
sti
add
ud2
dec
outsb
daa
iret
adc
sbb
in
dec
aaa
sbb
inc
cmp
ss
scas
sbb
dec
insl
out
push
xchg
xchg
nop
push
add
push
daa
mov
out
jb
bswap
push
add
mov
psraw
icebp
stc
xchg
xchg
xchg
daa
add
or
daa
iret
repz
adc
cmp
in
in
push
adc
andnps
das
gs
jne
xchg
xchg
xchg
jge
lea
jns
push
stos
mov
filds
cmp
iret
outsb
loope
in
cmpsl
into
enter
cld
add
or
jae
and
pop
sbb
es
rep
daa
cs
push
or
iret
cmp
inc
dec
push
push
push
leave
rep
daa
pop
dec
pushw
adc
xor
jle
lahf
adc
mov
lods
jg
enter
das
pop
enter
out
cmp
out
push
repnz
or
repz
or
adc
or
daa
iret
repz
ss
rep
xorps
adc
bswap
repz
js
adcl
cltd
jae
cmp
movsb
pop
scas
mov
sbb
rcrb
fstpt
iret
jae
sbb
ficomps
stc
pop
lret
and
sbb
jns
xor
cmovns
leave
leave
leave
push
pop
push
sub
leave
repz
sub
repnz
das
jo,pn
leave
lret
pop
push
xchg
push
add
add
mov
lret
cmc
inc
jle
iret
add
lret
adc
cmp
repz
or
cmp
enter
push
or
dec
cmp
cmp
push
pop
popa
imul
mov
jae
cmp
xchg
cltd
sbb
bndldx
test
cmpsl
fwait
nopl
mov
and
or
dec
inc
sahf
je
incb
int3
adc
or
dec
dec
and
xor
dec
hlt
ss
cmp
inc
int3
dec
das
push
int3
fistl
cmp
push
jns
cmpl
int3
loopne
in
push
mov
iret
cmp
mov
push
or
mov
add
prefetch
push
into
into
into
sahf
sbb
pop
and
jg
int
cmp
cmp
mov
push
push
adc
adc
push
mov
ficoms
pusha
into
aas
insl
push
sbb
jp
repz
sbb
sbb
leave
jmp
mov
scas
mov
mov
jg
lahf
fcmove
aas
paddd
fucomi
xchg
fbld
mov
pop
int
int
sub
jns
cs
sti
xor
iret
repz
push
xor
xor
fmulp
repz
xor
cmp
out
dec
aaa
push
cmp
mov
lahf
iret
aas
adc
cmp
jns
out
cmp
int
mov
iret
mov
jns
out
imul
cmp
addl
das
test
and
mov
mov
scas
mov
sbbb
insl
mov
dec
dec
dec
sub
movsb
cltd
sub
out
push
mov
inc
dec
cld
scas
add
sarb
mov
sbb
repz
add
dec
sahf
out
daa
push
push
or
outsb
iret
repz
pop
xchg
repz
shrd
mov
adc
adc
fistpll
sahf
out
adc
adc
enter
sbb
shll
pslld
mov
pop
cmp
popf
cmp
jbe
punpckhwd
and
cmp
mov
shl
inc
mov
jmp
jo
and
jmp
pop
sahf
aaa
jb
adc
ja
shlb
push
add
cmp
rorl
add
add
popf
push
pop
pop
or
cmp
jae
jle
push
or
mov
sahf
lahf
rorb
mov
ret
rcrb
cmp
in
push
adc
unpckhps
xchg
pop
iret
repz
stc
pop
push
add
iret
repz
rcrl
sbb
cs
jns
cmp
sbb
cmp
leave
lret
and
iret
jb
jge
mov
jns
ror
rcrl
fsubrp
push
das
mov
loopne
pop
cmp
jmp
fbstp
add
xor
and
repz
sbbl
push
add
add
popf
cmp
jne
jge
test
aam
or
pop
in
in
shlb
xchg
mov
repnz
std
out
or
push
fmulp
repz
sub
or
out
xor
aas
or
adc
bound
repz
insl
push
adc
js
cmpl
cmp
mov
adc
test
mov
mov
sbb
fsub
aad
mov
aad
aad
movaps
cmp
daa
iret
xor
das
inc
loope
andl
cmp
ljmp
add
and
xchg
sub
xor
insl
sub
js
sbbl
push
dec
cltd
xchg
in
jns
add
cs
pop
ljmp
not
add
femms
or
sbb
and
jns
out
adc
push
adc
dec
sahf
out
adc
push
adc
orl
out
sbb
dec
and
mov
add
leave
leave
repz
or
add
push
pusha
mov
into
sub
dec
iret
fmuls
mov
wbinvd
push
pop
or
ja
fs
push
or
in
in
xchg
xchg
setp
adc
imul
push
mov
dec
sahf
adc
fcomps
jns
xorl
cmp
lock
add
sahf
out
adc
or
pop
adc
sbb
mov
jle
fldenv
enter
outsb
sub
fldenv
fnsave
pop
insl
fpatan
cmp
dec
fisttps
nop
push
fwait
out
daa
iret
pop
cmpsb
mov
or
rcr
scas
jns
cmpsl
fistpl
femms
call
sahf
out
adc
ficoml
fcmovne
repz
sub
xor
pushf
pushf
femms
sbb
inc
sahf
out
sahf
sbb
pop
sbb
cmp
in
sbb
test
pushf
and
jns
dec
and
xchg
out
es
movntq
mov
or
jmp
jnp
cmpsl
mov
jl
daa
pushf
mov
dec
fisttpl
das
pop
adc
dec
arpl
fisubs
das
cwtl
fildl
pushf
or
mov
cmpsl
mov
mov
pushf
pushf
rcr
pop
push
jmp
in
dec
jg
repnz
fnsetpm(287
in
pushf
decl
fcoml
push
or
or
or
iret
in
jbe
punpcklwd
insb
adc
iret
leave
repz
cmp
repz
lock
sti
sbb
jns
in
fstl
push
sbb
sbb
jae,pn
cmp
sbb
sbb
cmp
pop
push
mov
sahf
and
jns
out
es
lock
dec
sahf
sub
pop
int
jle
out
push
ficoms
fisubrs
sbb
jns
out
das
daa
xor
pmulhuw
dec
pop
xor
cmp
cmp
push
push
ss
imul
loope
sahf
mov
xchg
out
pinsrw
iret
fidivrl
dec
and
xor
lods
jae
mov
iret
in
in
outsb
pandn
ljmp
add
scas
or
and
out
or
inc
fistps
divps
imul
enter
pop
xchg
mov
int
shrd
mov
out
push
pop
into
sbb
in
sahf
pushf
fmull
icebp
cld
or
adc
fcmovne
jnp
push
pop
sub
xor
jns
and
jbe
cmp
insl
movsl
cmpxchg
mov
iret
in
sbb
xor
pop
dec
cs
push
das
popa
insb
push
xor
iret
jae
ja
xor
jnp
xor
decb
or
adc
pop
sub
cmpsb
ja
mov
dec
inc
inc
popf
dec
ds
arpl
loope
xor
fcompp
dec
pop
fs
push
add
loop
js
repnz
out
or
idiv
or
inc
packssdw
lods
and
cmp
les
sarl
pop
test
loope
imul
mov
cmpsl
mov
int
xor
mov
pop
cmp
data16
push
sti
push
aaa
imul
daa
ret
jae
mov
add
filds
xor
inc
add
mov
cmp
fs
ss
inc
add
add
aas
inc
push
dec
pop
lods
xor
mov
stos
inc
scas
pop
fdivrs
and
aaa
sub
aaa
popa
dec
fidivs
es
inc
pop
xchg
icebp
out
idivb
out
iret
push
pop
or
pop
jb
cmp
or
or
or
daa
mov
fcmovnu
cmpsl
adc
and
daa
daa
inc
push
addr16
das
push
shr
mov
imull
push
jbe
cmp
and
jb
pop
in
mov
jb
mov
sub
mov
aas
dec
ret
xchg
fcmovne
aas
xlat
sbb
data16
fs
shlb
push
xchg
sbb
mov
inc
enter
add
adc
inc
xchg
mov
and
mov
mov
or
ret
and
inc
push
adc
xchg
fiadds
add
movsb
add
in
leave
pop
lods
pusha
cmpb
cmpsb
fisttps
mov
jl
lahf
loopne
inc
jle
test
shll
push
mov
mov
cmp
mov
sbb
in
out
adc
mov
mov
ficompl
sub
sbb
pop
fisubrl
xor
fcomp
loopne
jb
rolb
jle
sahf
out
icebp
push
jl
pop
push
je
jns
out
insb
push
jns
out
inc
xor
and
sbb
or
cmp
out
add
cld
add
hlt
sti
cmp
repz
pop
iret
repz
push
mov
mov
cmp
test
loope
push
or
add
out
sahf
inc
cmp
sub
sbb
sahf
out
push
cld
add
fadd
out
sahf
out
mov
out
jns
cmpb
pop
pusha
pop
repz
repz
dec
inc
xor
mov
clc
add
loopne
cmp
movsb
nop
add
jnp
jl
push
push
inc
pop
ret
pop
adc
icebp
push
dec
pusha
imul
push
jo
rclb
jmp
pop
adc
cwtl
pop
scas
dec
insb
mov
add
add
push
push
push
add
push
ret
outsl
push
orb
rcl
sub
cwtl
xchg
xorb
test
cmp
icebp
call
push
mov
popf
test
add
rolb
iret
pop
inc
loopne
xchg
pop
shll
add
loopne
inc
movl
add
sbb
arpl
mov
add
in
mov
mov
push
sbb
das
mov
int3
insb
outsl
iret
insl
inc
sbb
xchg
pop
xor
into
add
push
inc
cs
jg
insb
pop
in
push
dec
mov
pop
out
andl
out
popa
sbb
enter
sahf
jnp
cmpsl
inc
sbb
push
sbb
dec
sbb
inc
imul
push
clc
add
out
paddq
xor
push
sub
cs
out
sahf
and
out
iret
jnp
pop
and
mov
sahf
sbb
adc
or
repz
repz
pop
push
and
iret
repz
and
and
and
cmp
fcomp
dec
cmp
pop
xchg
xchg
imul
daa
xor
loopne
jnp
cld
subb
inc
sbbb
fmul
incl
xorl
fistl
cmp
pop
js
iret
repz
mov
repz
ds
enter
insl
add
push
pop
loopne
sahf
out
xchg
mov
repnz
loopne
iret
jae
das
push
dec
insb
dec
push
xor
aas
pop
mov
add
add
pop
repnz
pushf
or
ret
mov
adc
xchg
cwtl
push
and
jg
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
in
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
jmp
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
ljmp
adc
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
sbb
cmp
sahf
xchg
pop
lcall
add
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
mov
dec
std
and
loop
int
out
xor
sti
aas
jno
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
incl
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
lcall
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
call
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
xchg
test
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
inc
std
incl
std
xlat
cmp
mov
sbb
push
jg
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
inc
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pushf
fs
outsl
pop
ficomps
frstor
nop
mov
cmpb
push
inc
mov
movzbl
je
inc
mull
add
inc
push
dec
inc
push
pop
and
das
mov
pop
dec
dec
inc
push
dec
inc
aaa
xor
jg
popa
mov
add
insb
cmp
call
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
pusha
mov
pop
imul
insl
insb
mov
push
outsl
mov
pop
dec
insb
imul
add
xor
roll
pop
ficoml
push
inc
dec
push
testb
nop
push
jo
jb
les
and
push
inc
inc
inc
test
out
dec
inc
gs
gs
adc
or
pop
inc
push
lea
imul
adc
inc
in
bound
outsl
push
dec
inc
push
push
push
sbb
xchg
out
inc
sub
xorb
jae
ljmp
lea
das
sub
das
add
add
andl
sbb
daa
sti
jbe
adc
dec
jae
imul
sub
inc
jg
testb
inc
jns
dec
lahf
int
sbb
push
push
les
push
cmp
cmc
jbe
insl
data16
jns
andb
mov
cmpsb
cmpb
insl
inc
xchg
jb
dec
push
mov
mov
dec
dec
in
bound
jbe
adc
lods
push
dec
test
push
mov
and
xor
int
cmpsb
dec
and
dec
jg
mov
popa
jne
arpl
inc
or
push
pop
adc
rcl
cltd
sbbl
ret
add
add
stos
cmp
push
lock
idivl
cli
dec
sub
mov
jo
mov
sbb
push
das
addr16
push
push
test
push
mull
rol
inc
push
push
imul
add
outsl
lds
ret
push
jb
lds
sbb
ret
xlat
push
push
jp
lock
push
xor
jg
push
adc
push
xacquire
or
aad
lods
ficoms
arpl
push
push
mov
push
sub
popa
fimuls
pop
jg
sub
sbb
bound
inc
mov
pop
mov
jge
and
mov
data16
test
pop
shll
outsl
ja
adc
pop
ja
shll
lret
fs
test
adc
mov
nop
fcomps
push
mov
andb
lahf
insb
aam
psllw
push
push
push
mov
lret
scas
pop
push
push
xlat
dec
lahf
subb
inc
dec
add
push
mov
and
dec
pop
add
mov
push
jg
cmp
sbbb
jo
pop
push
iret
aas
call
into
add
lahf
add
push
mov
sbb
cmp
out
insl
jmp
dec
dec
fbld
dec
ljmp
jae
push
pop
or
push
mov
xchg
pop
arpl
pop
xchg
fidivrl
imul
dec
push
pop
push
jne
les
push
lock
rol
jo
imul
jl
outsl
addr16
mov
inc
iret
pusha
insl
imul
stos
addr16
xlat
ss
movsb
adc
dec
jg
lahf
pop
scas
or
aam
cmp
repz
cmpsl
stc
cmp
cmp
add
lahf
mov
xor
sahf
pushf
inc
sbb
test
cmp
iret
xor
or
dec
add
lahf
xchg
xor
pushl
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivr
jns
jmp
rclb
mov
sub
mov
sbb
icebp
ljmp
jno
repz
test
ficompl
jmp
mov
decl
cwtl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
jmp
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
decl
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
incl
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
lock
call
xchg
mov
mov
or
or
call
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
incl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
mov
or
mov
cmp
decl
xchg
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
lcall
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
aaa
cld
call
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
jg
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pushl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
call
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
decl
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
test
ss
sbb
push
imul
aam
loopne
rorl
call
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
cmp
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pushl
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
jmp
xchg
ja
int3
add
mov
das
es
lds
or
ljmp
add
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
pushl
xchg
insl
add
ss
jmp
addr16
jb
push
mov
dec
mov
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
call
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
call
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
std
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
xor
out
add
push
xchg
push
inc
mov
mov
pop
arpl
ds
outsl
inc
jne
xor
test
push
imul
dec
je
push
insb
imul
idiv
and
jbe
push
jns
arpl
arpl
rorb
ja
push
inc
insl
insb
das
subb
inc
jne
outsl
insl
mov
dec
adc
cltd
insb
fildl
xlat
rcrl
arpl
mov
mov
lods
push
cmp
dec
inc
js
add
cmp
inc
insl
bound
test
or
inc
inc
ret
sbb
inc
js
push
dec
orl
pusha
pop
sbb
and
aas
pop
inc
fistpll
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
fdivr
pop
sub
xor
xor
xor
pop
jnp
movsb
popa
push
inc
jbe
pop
sbb
mov
fsubs
push
dec
mov
mov
inc
or
ror
and
lods
arpl
dec
popa
mov
fbld
je
xor
mov
push
mov
ss
jbe
arpl
or
inc
aas
enter
and
push
ret
mov
sbb
mov
mov
inc
shll
inc
ljmp
jns
aam
loop
push
dec
insb
and
push
mov
xchg
cmp
js
stos
mov
inc
push
add
inc
adc
aas
sub
jg
and
xor
popf
int
mov
inc
aas
insb
push
cmp
aaa
inc
mulb
xchg
sbb
inc
pop
sub
dec
shrb
jo
inc
inc
add
ds
mov
lcall
inc
jg
dec
push
dec
dec
lea
or
push
mov
mov
outsb
jne
in
mov
outsb
mov
dec
jge
imulb
xor
or
stos
mov
arpl
add
addr16
shl
sub
jo
adc
pop
inc
cmp
push
add
sbb
cmc
sub
je
addb
push
ss
outsl
pop
xor
orb
lahf
jo
dec
insb
adc
jmp
pop
or
xlat
mov
sub
mov
js
inc
jb
addr16
ret
popa
jo
adc
push
xor
lock
outsl
outsl
test
xchg
add
push
jno
adc
dec
mov
pop
es
or
in
nop
test
pop
cmp
arpl
mov
add
cmp
mov
pop
jo
push
push
orl
jns
stos
addl
mov
adcl
mov
je
mov
cmp
rorb
bound
shrb
arpl
cmpsb
sub
ja
stos
inc
cmp
xor
popf
xor
cmpsb
movsb
movsl
add
add
sbbb
push
sub
adc
push
negl
loop
lods
inc
out
fadds
mov
xlat
dec
add
scas
imul
testb
and
stos
test
mov
push
imul
or
test
or
shlb
aaa
mov
aaa
push
loop
sub
call
cwtl
mov
test
sub
enter
pop
inc
adc
movsb
and
push
add
push
jbe
pop
or
dec
adc
add
dec
pop
nop
xchg
sbb
push
scas
sbb
push
pop
mov
int
mov
inc
shlb
and
popa
insl
adc
pop
add
outsb
outsl
je
addb
aam
jne
and
and
fistl
dec
mov
or
cmpsb
dec
shrd
popa
lcall
lea
bswap
stc
out
mov
out
ud0
jmp
repnz
in
pop
ds
push
pusha
ljmp
lret
cli
push
sbb
testl
lahf
xchg
repnz
das
push
inc
es
add
dec
loopne
add
into
sahf
mulb
or
or
insb
daa
aam
cmp
xchg
aam
fldl
adc
add
fmuls
add
add
sbb
into
rcr
adc
xor
push
in
test
mov
mov
scas
sub
jns
sub
pop
and
pusha
adc
dec
enter
pop
add
sbbb
jge,pn
and
and
xor
out
lods
add
jb,pn
push
or
jp
and
push
repnz
lret
cs
mov
sarl
add
insl
dec
rcrb
aam
rcrb
out
add
jb
test
push
dec
orb
xchg
out
push
inc
enter
aaa
cmp
add
inc
sbbb
jmp
add
jg
inc
fidivrs
lea
mov
sub
xor
or
clc
xchg
sub
mov
sbb
ret
jb
sarl
mov
ret
adc
test
lret
push
aaa
cwtl
les
push
push
sbb
lock
jae
xchg
clc
testl
and
in
sbb
sub
scas
jne
jmp
mov
mov
ja
cmp
inc
dec
push
or
call
push
sub
inc
mov
hlt
int
int3
loope
sbb
push
fnstcw
or
sbb
sub
hlt
mov
sbb
xor
ficompl
les
jo
inc
push
test
lahf
enter
movsb
or
cltd
call
rclb
lea
pop
mov
pop
xorb
repz
mov
aad
rcll
sbb
mov
call
nop
fcomps
imul
mov
add
les
insb
leave
rorb
sbb
pop
je
cmp
jbe
mov
mov
pop
jne
xchg
lret
push
sub
pop
adc
rolb
or
leave
jnp
pop
ret
ljmp
and
sub
adcb
xchg
mov
push
out
in
cld
xor
movsl
mov
push
rorb
loopne
call
fsubrs
pop
outsb
loopne
adc
sahf
sub
and
and
fisubrl
push
clc
aad
or
sarb
jne
push
inc
imul
add
adc
cmpsb
and
sbb
imul
cmc
in
inc
and
and
add
andb
push
fimuls
mov
insb
push
inc
adc
daa
insb
sbb
loopne
ss
test
dec
mov
add
movsb
mov
push
jl
hlt
cld
add
in
and
test
les
imul
or
cmp
add
enter
ror
fs
push
push
or
rcrl
in
push
leave
push
inc
xchg
cmp
movsb
xor
pop
add
movsl
ja
loopne
dec
or
push
dec
lcall
adc
lock
sahf
add
jbe
je
pop
push
ret
mov
rorb
xor
nop
sbb
push
test
shr
lods
and
sub
and
sbb
push
addr16
adc
xor
ds
push
push
mov
addb
push
aam
jmp
inc
test
movb
dec
cmp
sbb
add
push
mov
insl
and
mov
mov
in
xchg
movsl
mov
sbb
push
xchg
xor
test
lahf
mov
add
in
mov
sub
mov
add
and
or
rclb
add
imul
mov
hlt
or
or
inc
call
mulb
mov
lcall
dec
and
xor
in
push
mov
out
sub
aas
adc
xor
sbb
xchg
popf
add
xlat
xor
fcoml
and
shrl
mov
enter
and
push
and
dec
call
push
dec
inc
push
push
insb
fcoml
xor
hlt
sub
mov
lahf
push
mov
movsb
movsl
xchg
stc
aam
insb
icebp
jle
mov
adc
add
or
fs
adc
fmull
inc
fcompl
lea
pushf
mov
push
sbb
jp
popf
push
es
push
jmp
push
mov
pusha
jne
aaa
jne
xlat
pop
jp
push
or
inc
add
pusha
jl
lock
sbb
gs
xchg
xor
mov
inc
in
mov
rolb
jo
seta
roll
push
jnp
data16
data16
sbbl
mov
ret
jl
subl
sbb
mov
std
call
fsts
push
call
adc
repz
fdivs
and
fildl
sti
scas
add
adc
cmp
test
jae
inc
lret
fmull
push
adc
mov
push
gs
push
sbb
sbb
jo
mov
xchg
sub
push
dec
call
dec
aad
push
call
call
in
push
jne
xchg
fs
lret
lea
xchg
dec
sub
xor
cltd
cmpsb
dec
scas
ret
orb
nop
mov
ss
hlt
jmp
pop
add
dec
into
add
push
call
into
lock
pop
lods
push
add
dec
dec
add
push
mov
call
hlt
lods
mov
sbb
lods
or
ja
pop
dec
adc
lahf
mov
xchg
xchg
clc
fdivl
xchg
sbb
dec
jb
out
loop
push
inc
into
pop
in
dec
push
inc
push
je
test
loopne
add
add
sbb
shll
sbb
sbb
mov
and
mov
push
or
in
shl
or
cmp
fisubrl
mov
sbb
inc
psrlq
adc
clc
sbb
xchg
ret
pop
ss
or
jge
mov
add
ret
sub
popl
cmpb
mul
fiaddl
push
jecxz
inc
movzbl
loop
or
notl
cmp
push
fildl
mov
xchg
sbb
inc
daa
ficompl
rorb
mov
cmp
lds
and
push
rclb
pop
lahf
mov
movsl
push
xor
gs
cs
ljmp
xchg
or
push
psubusb
lret
hlt
push
xchg
dec
sub
sub
and
pop
loop
addb
jo
nop
fadds
push
arpl
je
ss
lret
ret
stos
or
xor
mov
cmp
xor
jbe
xor
ds
sbb
push
sbb
sbb
sbb
pusha
loop
fdivr
jl
shlb
pushf
subl
shlb
push
push
dec
fdiv
les
inc
outsb
sbb
push
out
jo
jno
pop
pop
pusha
push
adcl
call
adc
push
mov
das
sbb
je
cmp
pop
out
adc
repz
out
and
or
xchg
rcrl
stc
and
sbb
negl
jb
call
out
les
ds
xlat
popf
sub
sti
rolb
addr16
xchg
xchg
shl
mov
insb
loop
push
push
lea
adc
mov
pop
cmp
rolb
adc
lcall
add
call
add
and
mov
scas
sub
daa
rolb
jbe
lods
add
cmp
xchg
add
cmpsb
imul
mov
pop
jns
call
jnp
xchg
popf
xor
xor
shrb
dec
mov
ret
push
jl
cmp
fsubl
mov
add
stos
pop
mov
mov
jmp
mov
jl
enter
xor
call
pop
hlt
mov
int3
or
push
roll
or
xchg
mov
add
mov
pop
aas
jl
les
adc
pop
mov
pop
mov
lea
sub
enter
lea
repnz
dec
or
mov
scas
or
jle
rep
push
mov
repz
cli
mov
shll
jne
push
ss
rcll
add
out
push
cmpsl
pop
in
push
js
mov
addr16
push
lahf
cmp
femms
inc
shlb
xor
or
rolb
sbb
insb
mov
outsl
lods
sbb
push
adc
cmp
je
ljmp
ljmp
push
or
or
pop
fcmovu
iret
or
cmpb
clc
xor
adc
pop
cmp
sahf
pop
enter
fistpl
or
push
loope
mov
daa
dec
push
push
xor
mov
sub
jb
adc
xchg
pushf
sbb
inc
stos
ss
imul
ljmp
imul
ret
lret
gs
leave
push
loopne
movsl
out
jecxz
addl
sbb
sbb
aas
js
mov
mov
std
sub
adc
jmp
mov
adc
das
insl
movsl
and
or
insb
or
and
stos
xchg
lods
outsl
scas
dec
adc
sub
push
dec
xchg
loopne
push
sbb
adc
call
jb
cmp
jle
mov
push
adc
dec
pop
mov
push
fnstenv
dec
in
cmp
pop
dec
in
push
add
and
fisubs
pop
or
jmp
jb
mov
pop
and
ficomps
and
in
pop
push
data16
xor
xchg
jo
cmc
shl
jne
pop
or
dec
in
jl
sub
enter
shrl
add
inc
daa
xor
push
insb
cmp
adc
jno
ret
mov
es
sbb
pop
or
xor
in
mov
mov
pop
mov
adc
cmp
mov
repnz
lock
sbb
cltd
adc
jo
je
inc
mov
mov
mov
cmp
mov
dec
xor
shl
aam
enter
fsub
push
jno
and
jle
mov
lcall
mov
enter
stos
cmp
imul
xor
ret
xor
inc
add
adc
leave
in
inc
aas
push
fists
test
out
inc
xchg
pop
sbb
jne
mov
jne
aaa
stos
add
lods
push
cmp
xor
jb
fidivrs
jae
inc
xor
nop
ds
jl
cmp
rolb
scas
call
xor
xor
shl
call
xor
fcomp
inc
test
inc
enter
ljmp
mov
or
les
mov
test
aad
enter
mov
push
mov
mov
loop
lea
ret
sbb
adc
jg
lea
jb
cmpsb
lcall
mov
dec
adc
or
and
loope
xchg
cmp
cmp
and
add
jne
jl
icebp
andl
loop
sbb
adc
movl
dec
push
daa
add
mov
in
jne
pop
fcom
adc
js
mov
orb
push
icebp
or
gs
cmc
add
xchg
adc
fwait
push
add
add
out
enter
pusha
or
sbb
clc
dec
cld
mov
call
xorl
es
movsb
pop
mov
into
mov
xchg
mov
and
push
into
mov
dec
add
or
and
je
or
mov
pop
je
mov
sub
leave
ret
cmp
adc
or
loopne
push
and
and
or
or
push
notb
push
sbb
push
jmp
mov
fs
loopne
insb
xor
adc
xor
insb
jmp
adcb
popa
scas
aad
cld
lcall
add
imul
cld
adc
jne
sbb
and
or
lods
mov
push
mov
add
mov
les
sub
in
xor
xor
xor
outsl
nop
push
sub
in
mov
dec
test
adc
mov
cltd
in
mov
std
push
cmp
push
loopne
pop
pop
xor
mov
mov
out
push
xchg
push
inc
shlb
hlt
repnz
fiadds
testb
cltd
push
inc
inc
xor
mov
aas
fistl
jbe
add
pushl
imul
or
jnp
mov
ss
stos
std
std
push
stc
sbb
push
xor
xor
cld
cmp
and
pop
cli
mov
inc
andl
shrl
cmp
inc
sbb
sbb
aam
enter
mov
dec
xor
sub
testb
movsb
xor
mov
cmp
dec
mov
jo
cld
sub
fs
fcompl
pop
dec
aas
add
adc
add
cmpsl
adc
ds
adc
or
or
mov
mov
xlat
loopne
pop
inc
cmp
in
add
add
pop
mov
jns
add
mov
and
scas
jecxz
dec
lea
and
enter
cmp
sbb
mov
subl
push
pop
loopne
push
js
jmp
mov
add
xchg
and
add
jnp
in
ret
dec
cmp
ljmp
fs
adc
add
or
lock
or
sbb
adc
aam
inc
push
roll
push
jo
daa
ja
jl
adc
xchg
adc
cmp
sub
cmp
push
ret
pusha
bound
hlt
popf
mov
and
sbb
add
out
xor
cwtl
inc
mulb
jecxz
push
mov
push
call
out
pop
ds
dec
mov
in
jbe
push
adc
rol
jmp
sbb
js
les
push
movsb
add
clc
push
or
enter
fsts
jbe
outsl
jne
xor
mov
std
jmp
and
xor
pop
call
inc
jmp
in
mov
or
cmpsb
imull
xchg
add
xor
sahf
sarb
rorb
mov
inc
rcll
inc
or
ret
and
cmp
push
jg
nop
fs
pop
sub
sbb
test
dec
mov
push
mov
in
test
dec
mov
mov
adc
ret
xchg
push
ret
data16
sbb
mov
cmp
push
adc
xchg
cmp
in
mov
jl
xor
jne
mov
jmp
or
sbb
or
xor
push
or
or
je
push
mov
lock
loope
shll
cltd
or
add
sub
mov
and
add
push
adcl
or
mov
inc
sbb
cmp
inc
push
add
call
out
test
loope
xchg
aaa
pusha
xchg
mov
push
sbb
cmpsl
xchg
std
test
shll
adc
inc
ljmp
mov
test
shl
cmp
dec
mov
mov
mov
push
sarb
push
mov
lea
andl
xchg
xchg
stos
lods
div
ss
fucomip
cmp
je
cmp
jbe
sub
jne
and
subb
dec
jg
nop
clc
push
and
std
xchg
loope
ficompl
das
adc
or
sbb
xlat
jo
out
push
in
xchg
push
push
mov
cli
adc
add
loopne
and
ret
int
and
cmp
shr
or
mov
je
imul
or
stos
xor
sbb
fwait
add
xchg
test
ret
mov
jb
insb
inc
js
clc
mov
mov
jle
xchg
mov
pusha
xor
cld
jbe
out
push
or
jbe
fwait
jmp
push
rorl
or
imul
push
sbb
or
or
mov
rorl
call
or
lret
lods
sbb
adc
inc
adc
add
and
lods
stos
loopne
sti
push
adc
je
ret
loope
mov
dec
jle
test
dec
cltd
pop
adcl
and
or
mov
mov
pop
push
lea
mov
sbb
pop
xorb
xchg
mov
aam
jno
inc
jne
data16
push
pop
movsb
mov
mov
in
hlt
inc
aas
jle
jno
push
cli
call
cmp
fsubrs
addr16
out
push
push
sarl
add
js
pop
scas
outsb
fdivs
jae
js
push
push
loop
ror
cmp
xchg
adc
push
or
push
push
sub
sub
pop
add
push
xchg
or
sub
imul
jnp
push
mulb
mov
jmp
push
ficoms
pop
add
xchg
mov
adc
ja
das
inc
or
mov
lock
dec
push
hlt
sbb
in
or
push
adc
mov
ror
mov
ss
clc
and
cmp
push
sbb
push
adcl
pop
add
adc
and
push
and
push
add
sub
push
or
jl
xchg
mov
mov
or
shlb
aam
pop
loop
outsb
and
call
or
call
and
fdivrl
push
or
test
or
add
outsb
jne
addr16
sbb
sbb
sbb
cld
jne
into
cmp
dec
shll
sub
push
cmp
shll
pop
and
test
leave
je
pop
iret
hlt
jo
jecxz
decb
les
jns
outsl
xorl
cmp
mov
jmp
nop
xor
adc
add
cmp
push
jp
imul
movsl
cld
lds
sub
inc
call
je
and
push
pop
mov
push
push
and
add
arpl
movsb
sbb
fs
sub
pop
enter
lcall
dec
jl
js
negb
fs
enter
sbb
xor
mov
fxtract
sbb
xchg
shr
pop
xorb
movsb
imul
inc
or
mov
pushf
or
movl
xchg
add
add
shlb
add
jnp
xchg
pop
or
or
xchg
jne
fcomp
sti
xlat
add
push
call
in
movsb
jmp
in
cmp
js
sbb
addr16
aad
test
or
mov
mov
sbbl
cmp
pusha
and
int3
jbe
mov
lock
mov
scas
or
mov
clc
test
jle
outsb
je
push
stc
shl
sub
xchg
fcompl
inc
xlat
adc
out
push
or
arpl
add
cs
fdivl
or
mov
daa
mov
sub
cld
outsl
pop
fildl
mov
mov
stos
push
inc
and
push
fs
inc
mov
dec
cmp
mov
cmpsb
jne
jg
andl
cmp
jg
push
dec
lea
add
pop
mov
orb
xor
subb
mov
jo
shr
and
xchg
fsubs
or
or
in
pop
icebp
mov
cmp
fadds
dec
jne
movzbl
add
push
or
aam
nop
lds
test
lods
test
ret
sbb
lea
xchg
and
nop
sbb
sub
fcmovb
jmp
push
movsb
dec
leave
dec
jmp
or
je
mov
push
cli
sub
subb
sbb
and
ja
mov
mov
adc
dec
fs
jmp
and
cwtl
or
push
xor
xor
rorl
ss
ret
out
add
imul
xchg
cmp
movsb
inc
add
cmp
and
push
out
sub
push
or
dec
push
scas
push
push
or
loope
popa
es
mov
push
movsl
das
dec
aam
fisttpll
add
movb
dec
dec
rorb
aam
int
aad
xor
int
cmp
inc
xchg
jne
mov
push
seto
pop
aas
dec
int
add
aas
xor
jge
mov
or
shr
aas
mov
call
xor
xchg
adc
pop
inc
inc
orl
sbb
sbb
cli
sbb
adc
sbb
nop
sbb
add
push
sbb
and
xchg
xor
add
inc
add
out
xor
sbb
pushf
mov
or
je
loopne
push
mov
sbb
add
push
add
sbb
scas
sbb
xor
dec
push
sbb
daa
and
sbb
aas
in
rolb
and
adc
rorb
popf
jp
daa
mov
mov
lret
push
inc
nop
dec
and
sbb
or
or
or
call
out
out
in
inc
callw
pop
call
call
jle
cmp
dec
aam
sti
mov
mov
push
jns
cmp
call
sbb
call
int3
pop
jmp
xchg
sbb
fstpt
xchg
pop
cmp
and
mov
decl
inc
jge
mov
or
pop
psubsb
add
out
clc
scas
pop
jmp
mov
xor
pop
xchg
pushl
cmp
jmp
add
pop
xchg
sbb
mov
mov
jno
xchg
addr16
jecxz
popf
xor
je
push
into
cmp
adc
fimull
jmp
inc
and
fldcw
lds
sarb
jnp
inc
negb
pop
add
ljmp
fadd
xchg
sbb
xor
cmp
insb
or
adc
xor
jo
shll
enter
test
add
or
test
push
and
dec
jmp
call
and
arpl
incb
es
xor
cmp
scas
rcr
push
and
jns
dec
inc
cmpsl
repz
pop
shrl
rcrb
je
ljmp
sbb
fwait
xchg
es
scas
pop
adc
mov
inc
fucomip
loop
dec
lcall
pushf
push
movsb
push
or
in
sub
loope
ficomps
cltd
sub
xor
push
fwait
adc
int3
xchg
js
add
das
js
xor
and
xor
xchg
push
imull
push
sub
sbb
enter
loopne
xchg
inc
adc
ret
add
add
jb
push
icebp
jecxz
xchg
dec
xchg
mov
xor
rolb
repnz
xchg
pop
in
mov
pop
lcall
cltd
test
push
push
pop
xor
rolb
xchg
rolb
loope
xor
fnsave
rcrl
pop
jmp
aaa
and
bound
and
mov
xor
xor
or
or
push
ss
adc
or
dec
sub
or
and
lret
pop
or
lret
call
pop
and
mov
sbb
lods
rolb
jne
nop
inc
mov
fistpll
jnp
inc
cs
pusha
nop
push
in
nop
je
xchg
jnp
mov
pop
andb
and
stos
addr16
jns
ss
xchg
xor
sub
jns
out
sbb
or
push
inc
popa
inc
addr16
jmp
mov
int
inc
pop
mov
xchg
xchg
inc
cmp
in
cs
pop
nop
add
and
dec
jb
push
sbb
sbb
ss
xchg
sahf
out
out
mov
mov
out
shl
mov
inc
cld
or
ret
roll
adc
mov
int3
add
sub
push
cmpsl
push
test
je
daa
mov
daa
aad
xchg
xchg
jns
inc
mov
movsb
push
mov
loop
or
insb
and
adc
dec
pushf
push
add
jmp
cmp
je
mov
add
sub
cltd
cli
mov
lahf
ret
lea
jge
mov
test
inc
xor
push
pop
add
xchg
stos
cmp
sahf
out
in
add
add
test
dec
jg
lret
xor
jo,pt
add
jbe
aaa
jb
iret
add
mov
mov
push
push
inc
sahf
xchg
sub
pop
mov
or
or
xchg
sbb
cmp
mov
add
or
and
pslld
dec
in
add
or
or
pop
and
or
xor
push
push
push
lret
add
xor
adc
pop
adc
inc
adc
cmp
enter
int
push
xor
pop
enter
adc
mov
adc
adc
adc
push
adc
xor
inc
pop
pop
ja
cs
and
sbb
xchg
sahf
mov
xchg
sbb
mov
addr16
fcompl
sbb
cmp
mov
cmp
cmpsb
repnz
sbb
sahf
push
mov
sbb
pop
push
push
jg
cmp
inc
negb
pop
jne
add
add
pusha
jmp
sub
sub
or
cmp
xchg
jmp
cwtl
xchg
jns
xor
push
in
imul
rcl
repnz
dec
push
ret
in
in
repnz
mov
push
repnz
out
in
fdivl
jne
adcb
inc
and
jnp
sub
jmp
pusha
in
push
jmp
jmp
dec
pop
lods
call
in
repnz
xor
in
xchg
aad
xor
out
in
cmp
mov
sbb
pop
leave
out
xchg
out
or
nop
out
xorl
lock
dec
icebp
cmp
push
rolb
das
jnp
or
adc
repz
std
jnp
aam
hlt
hlt
imul
cmp
cmc
cmc
cmp
cmpsl
div
mov
or
popa
negl
gs
scas
addb
clc
clc
or
inc
stc
stc
and
dec
sahf
cli
cli
add
outsb
sub
nop
sti
fdivrp
cld
cld
je
mov
push
push
nop
shlb
mov
leave
repz
in
std
sbb
mov
ret
sarb
shll
push
leave
enter
add
or
sbb
jecxz
jecxz
and
xor
pop
in
sub
cmpl
aam
dec
push
jo
or
out
xchg
das
test
scas
scas
call
movsl
sbb
cltd
rcrb
or
xchg
stos
or
cltd
xchg
pop
leave
or
sti
jmp
rorl
mov
mov
mov
cli
mov
aas
repz
movsb
repz
sbb
push
cli
stc
dec
jo
jns
stc
imul
mov
pop
push
lea
cltd
jb
sbb
sbb
xor
sti
sti
sti
dec
fmulp
aad
or
cmp
mov
clc
mov
jo
test
and
aad
mov
dec
subl
cld
dec
loop
sbb
arpl
jns
mov
and
sub
add
or
xor
out
fdiv
inc
repnz
loope
idivl
inc
mov
sahf
testl
ljmp
jmp
notl
add
push
pop
testl
xchg
pop
push
sub
scas
testb
cmp
nop
testb
repnz
repz
xchg
pop
leave
sub
or
mov
out
div
notb
aad
add
in
pop
mov
das
sbb
cmc
push
popa
imul
mov
loope
cmc
adc
nop
cli
hlt
or
xlat
inc
pushw
data16
stc
mov
test
push
jo
adc
mov
sub
dec
sub
sti
mov
enter
loope
loope
jp
in
xlat
loop
pop
hlt
jb
popa
leave
cmp
mov
hlt
add
xchg
cmpsb
in
pop
leave
or
aam
add
xchg
pop
mov
or
xchg
repz
leave
or
repz
repz
or
in
mov
in
bnd
repnz
test
cmp
icebp
icebp
das
les
adc
and
ds
repnz
test
icebp
cmc
cmc
and
inc
lea
test
lock
cwtl
lret
add
xchg
icebp
or
lcall
pop
xchg
icebp
xor
movups
add
xchg
icebp
or
pop
lods
pop
mov
test
fs
pop
jp
jmp
mov
jb
push
sub
ffreep
movsl
inc
loopne
push
inc
jb
in
jmp
aaa
inc
cmp
cmp
mov
add
adc
mov
jmp
ret
imul
pcmpeqw
enter
dec
icebp
dec
add
movsb
xchg
xchg
mov
cmc
dec
add
ss
dec
dec
cmp
inc
mov
dec
sbb
nop
push
jns
adc
lcall
push
add
flds
sub
push
dec
mov
insb
jecxz
repz
mov
in
repz
sbb
push
push
aad
in
repz
xor
dec
outsb
or
nop
je
faddp
mov
cmp
adc
sub
subl
push
sahf
push
pop
stc
pop
and
lea
inc
cmp
and
ficompl
pop
movsb
cmc
test
popa
push
js
sbb
and
xchg
push
aad
popa
jmp
popf
arpl
push
orb
push
push
or
fcoms
push
sub
push
or
and
xlat
cmp
xlat
sub
icebp
adc
sbb
xlat
pop
mov
insb
test
sub
xchg
pusha
mov
jl
pop
call
and
push
add
lret
sbb
in
jmp
and
mov
push
and
inc
ds
call
or
pop
jmp
pusha
cmp
pop
insl
adc
jmp
adc
movsb
pop
test
stos
arpl
mov
divb
test
add
movsl
test
mov
cli
adc
mov
test
pop
loop
andl
ss
or
adc
xor
add
push
push
cli
jmp
adcl
insl
sub
jmp
dec
xchg
push
and
cmp
std
add
inc
arpl
call
xchg
xor
mov
inc
fwait
test
enter
add
pop
xchg
pop
sub
gs
js
data16
or
jo
lods
inc
arpl
ds
dec
inc
lea
and
and
jo
mov
daa
cltd
sbb
adcb
inc
adc
xor
xchg
mov
fsts
push
add
pop
mov
inc
cmp
and
sub
add
in
and
pop
inc
rclb
jle
je
outsl
xor
add
add
lods
clc
add
pop
jl
push
or
movsl
xchg
leave
mov
test
or
icebp
fdivs
push
or
jg
or
je
adc
jae
mov
xlat
loop
xor
mov
sub
sti
iret
les
stc
add
pop
leave
add
mov
mov
outsb
xchg
adc
sbb
mov
mov
and
jmp
adc
dec
xor
cmp
shll
pop
add
mov
jmp
xor
lcall
adc
nop
pop
xor
outsl
pop
and
add
and
inc
xor
ja
or
jb
sub
push
push
cwtl
pusha
adc
cmp
xor
xchg
mov
and
orl
mov
jbe,pt
mov
nop
je
lea
pop
lea
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
sub
sbb
jb
pop
xor
and
cwtl
mov
adcb
cmp
push
cmp
add
pop
push
and
xchg
adc
adc
mov
pusha
adc
add
or
mov
add
aam
push
push
mov
mov
pop
fs
sbb
rcrb
xchg
sbb
cmp
in
or
cmp
cmp
mov
or
arpl
push
xor
inc
loop
lea
xor
xchg
xor
cmp
lea
pop
lea
inc
inc
xor
push
cmp
mov
mov
dec
paddb
push
nop
push
pop
pop
outsb
daa
and
test
test
insl
pop
and
sub
xchg
and
imul
sub
inc
push
movsb
mov
aaa
and
aam
mov
pop
mov
cmp
ss
lock
or
mov
adcb
movsl
jb
pop
mov
or
aaa
data16
dec
mov
ds
loope
or
aaa
or
and
push
xor
dec
pop
subb
pusha
push
cmp
in
aaa
popa
aas
ss
sbb
and
int
movsl
sub
in
jne
scas
or
xchg
jno
scas
inc
out
xchg
and
loopne
inc
adc
xchg
nop
scas
cmp
hlt
cwtl
mov
and
pop
xchg
jmp
sti
push
inc
mov
mov
xor
movl
movsb
loope
movsb
scas
sbb
xchg
hlt
mov
and
bound
push
xor
bound
and
xor
and
or
mov
inc
ret
or
shlb
loop
gs
and
and
push
xor
rclb
sbb
dec
inc
adcl
or
and
loopne
sbb
dec
add
test
imul
cs
push
ror
aad
aaa
push
dec
inc
leave
mov
push
inc
dec
inc
leave
lahf
retw
jmp
mov
call
clc
mov
mov
sbb
xchg
xchg
dec
lahf
call
call
leave
dec
inc
pop
push
cmp
leave
pop
and
xor
sbb
mov
or
les
push
push
rcl
push
je
cmpsl
mov
aam
rcl
ljmp
out
or
adc
imul
adc
push
xchg
xor
pop
push
push
dec
inc
leave
fs
addb
cltd
or
insb
mov
leave
rol
xchg
inc
dec
stos
movsb
leave
sub
inc
leave
loopne
mov
add
cli
enter
inc
adc
leave
push
dec
inc
aaa
mov
es
imul
leave
les
dec
xlat
ss
rcrb
fs
push
ror
iret
cmp
ljmp
adc
cmp
je
inc
enter
mov
hlt
lcall
sbb
stos
aaa
push
dec
inc
leave
mov
cmpsb
push
dec
inc
leave
dec
xor
ror
dec
movsb
and
and
xor
xchg
xchg
push
leave
mov
mov
rcl
stc
or
dec
leave
inc
dec
inc
aaa
cmp
mov
xor
leave
and
aaa
out
imul
subb
daa
pop
test
jbe
or
into
test
imul
xchg
xchg
ret
pop
mov
xlat
mov
daa
rcl
cmpl
mov
pushf
push
pusha
and
push
mov
push
xchg
pop
inc
leave
mov
cmp
xchg
add
sub
leave
test
and
sbbb
cs
xchg
into
mov
lret
mov
leave
inc
inc
inc
sbb
sub
sbb
test
cld
sbb
mov
sbb
mov
rclb
cmp
leave
mov
xor
dec
cmp
aam
xchg
xchg
leave
inc
dec
inc
jns
fldl
xchg
xor
sub
pop
sbb
inc
dec
inc
leave
push
and
out
adc
mov
cmp
mov
test
movsl
fnstcw
add
mov
mov
insb
or
xor
cmp
and
jae
add
in
mov
pop
and
leave
dec
movsb
mov
or
or
add
mov
and
inc
sub
enter
or
stos
mov
xchg
pop
dec
inc
scas
mov
cmp
xor
sub
mov
cld
add
sti
lret
cmp
mov
sbb
and
mov
add
cmp
and
imul
xchg
xor
nop
push
leave
hlt
sbb
sarb
mov
dec
sbb
sbb
lock
scas
ret
jp
out
dec
push
adc
inc
push
xchg
xor
int
les
sbb
lods
fcmove
xchg
xchg
test
leave
clc
js
or
xchg
xchg
mov
leave
push
rcl
nop
ror
or
ror
mov
cmp
pop
xchg
xor
mov
and
cltd
sbb
xor
and
and
cmp
inc
push
and
and
dec
push
cmp
and
pop
lcall
call
adc
outsb
sub
popa
jo
ret
mov
cmp
cmp
daa
adc
xchg
inc
jno
leave
sub
mov
add
ds
jmp
mov
aaa
imul
and
daa
popf
aaa
dec
jns
or
inc
daa
icebp
mov
repz
push
pop
jmp
mov
xchg
rclb
xlat
or
pmaxsw
dec
in
mov
movsl
dec
pop
ret
outsb
mov
pop
sub
dec
bt
mov
inc
push
cmp
jne
lret
inc
lods
ret
mov
jmp
daa
or
mov
movsl
popf
test
mov
add
xchg
dec
cmc
ja
mov
xchg
movsl
addr16
fsubr
movsl
int3
add
jl
dec
orb
inc
pop
and
mov
xlat
adc
dec
inc
sub
mov
movsl
gs
dec
ret
in
movsl
xchg
inc
push
cmp
xor
xchg
bnd
mov
xchg
movsl
les
and
out
nop
push
sub
mov
xchg
mov
inc
mov
add
mov
insb
or
or
pop
pop
jle
xchg
mov
sbb
pop
add
dec
xchg
je
xchg
mov
jg
mov
js
dec
mov
mov
shlb
cmp
ds
shrb
push
mov
cmp
data16
int
sbb
faddl
pushf
mov
add
push
jne
and
inc
push
mov
leave
dec
dec
push
dec
mov
xchg
xchg
or
call
pop
pop
rolb
rolb
pop
cmp
in
jl
sub
int
je
pop
leave
test
add
jg
push
cmp
mov
jmp
dec
add
add
cmp
scas
cmp
leave
xchg
es
xchg
adcb
add
and
fwait
shrl
push
pop
jl
pop
hlt
out
or
rcll
pop
enter
or
push
add
daa
sub
add
adc
xor
cli
testb
pop
sbb
xor
popa
dec
or
sub
insb
dec
pop
push
inc
fsubr
and
call
rclb
pop
and
cli
sarb
jbe
fimuls
call
jmp
and
sbb
stc
insb
inc
mov
rcrb
pop
push
cwtl
or
push
shll
mov
sub
pop
cwtl
pop
push
inc
xchg
ret
notb
sbb
movsb
mov
imul
or
popa
ss
sub
mov
pop
inc
sbb
or
and
bound
mov
lahf
xchg
test
sbb
push
mov
pop
mov
xor
and
loopne
adc
sbb
movsb
pop
jmp
xor
mov
imul
pop
clc
cs
call
jmp
xchg
mov
pop
dec
call
imul
xchg
rolb
js
mov
xor
sbbb
loope
xor
jo
xor
or
cwtl
dec
xor
adc
test
or
call
loop
xor
aaa
xor
lea
inc
xor
cmp
xor
sbb
xor
mov
add
xor
mov
xorl
xor
sbb
xor
inc
das
push
test
push
mov
jp
ss
mov
mov
cmpb
or
call
push
je
adc
add
loop,pn
rcl
push
add
fwait
stc
dec
daa
movsb
add
incl
push
scas
dec
out
jl
je
add
sbb
and
lcall
cmp
je
cmp
shl
jmp
sub
ljmp
test
in
fld
jmp
sbb
adcl
pusha
or
or
scas
ret
xchg
pop
push
mov
lret
fidivrl
push
cmp
xor
inc
jp
inc
sub
repz
inc
ja
addr16
call
adc
push
stos
pusha
arpl
mov
adc
aad
out
lcall
push
mov
sub
cltd
rcrb
les
or
repnz
adc
mov
cld
mov
nop
inc
and
cmp
jp
sar
pop
adc
sbb
inc
mov
xor
push
inc
call
cmp
inc
pop
inc
rcr
push
mov
ss
lcall
fldl
inc
add
fsubl
add
test
adc
lahf
push
push
test
cmc
movb
mov
jmp
cmp
push
inc
jmp
dec
jmp
or
jecxz
fimuls
inc
or
mov
inc
adc
mov
lods
insb
inc
jmp
inc
inc
inc
pop
je
pop
inc
or
es
add
and
and
or
or
or
mov
std
mov
add
js
ret
xchg
xorb
das
popa
stos
cmp
je
cmp
xchg
cmp
leave
or
sbb
fcmovnu
insl
call
xor
inc
jmp
mov
arpl
jmp
and
ret
xchg
add
adc
call
add
add
in
jge
andb
pop
mov
add
loop
pusha
popa
push
mov
sub
into
and
mov
xchg
add
mov
shl
cld
shr
adc
sub
push
dec
ja
cmp
add
faddl
arpl
jb
jmp
pop
mov
fisubrs
jge
sub
add
push
push
or
inc
jecxz
mov
xchg
cmp
jne
and
mov
ja
cmp
shr
xor
jne
sbb
outsb
scas
adc
push
add
ret
push
fists
add
jb
jmp
jae
xor
scas
sub
lcall
inc
adc
fistl
or
xlat
test
adc
xor
imul
or
fstl
ret
dec
arpl
bound
sbb
pop
add
jne
sbb
test
cmpsl
mov
sbb
and
sub
and
pop
xor
data16
sbb
in
mov
xor
pop
in
mov
scas
out
adc
mov
adc
inc
scas
jp
lock
jmp
dec
lock
or
scas
outsb
push
lret
push
jp
rclb
les
xor
xchg
sbb
das
xchg
xor
mov
call
mov
insl
insl
adc
jno
imul
mov
aad
mov
rorb
fiaddl
dec
push
inc
jbe
popa
push
xlat
cmc
fists
xor
dec
in
add
sbb
inc
bt
mov
dec
rcrb
mov
call
pusha
sub
stos
jmp
shll
dec
mov
pop
xchg
push
push
sbb
mov
mov
insb
insb
xchg
sub
jbe
pop
xchg
xchg
pop
add
push
into
cmpsb
mov
inc
xor
mov
xchg
test
call
rcrl
push
call
mov
dec
shll
addl
mov
je
push
mov
pop
push
mov
add
or
testb
jmp
je
sbb
push
xor
inc
mov
sbb
xchg
repnz
ror
xchg
cmovno
inc
inc
dec
mov
mov
inc
out
inc
mov
and
dec
push
insl
dec
nop
sub
jp
mov
mov
mov
add
adc
fistl
in
ret
or
mov
rcll
mov
test
ljmp
fbstp
call
bound
jmp
test
dec
push
fcmovnbe
rcll
pop
ret
mov
orb
fs
adc
shll
test
cmpsb
test
push
adcl
mov
add
insl
call
call
inc
inc
and
sbb
pop
inc
dec
dec
push
fistl
pop
pusha
adc
mov
fwait
mov
dec
and
mov
dec
or
mov
jle
jb
sbb
roll
xor
or
aam
push
rorb
pushf
rorb
inc
push
push
xor
and
dec
sub
jne
in
mov
and
sub
fcmovnbe
sar
hlt
call
daa
push
dec
mov
mov
dec
call
mov
je
stos
dec
test
inc
jo
push
aam
xchg
decb
mov
xlat
and
jl
jbe
inc
lea
je
push
mov
or
je
outsl
mov
lods
push
adc
call
call
push
sbb
or
adc
sub
xor
sbb
adc
orb
cmp
ret
add
call
pop
mov
jbe
mov
sbb
mov
mov
adcb
orb
sarb
xchg
into
in
lods
roll
push
xor
mov
addb
mov
mov
cmp
mov
xchg
cwtl
scas
into
push
mov
push
cmp
push
pushf
es
mov
push
cmp
xchg
mov
dec
lods
cmp
cmpsl
mov
dec
jl
cmpsl
xor
fldenv
or
push
mov
jno
icebp
mov
popf
push
repnz
push
xchg
outsb
inc
cmpsl
and
mov
in
scas
push
pop
movl
pop
dec
pop
mov
add
packuswb
out
imul
cmp
mov
testl
subl
mov
es
aam
pop
call
add
xchg
pop
fisttps
mov
xchg
sarb
and
inc
sub
mov
or
pop
and
popa
adc
and
test
and
mov
xchg
nop
dec
mulb
dec
mov
push
add
inc
and
or
jb
and
and
dec
push
and
and
call
pusha
inc
and
mov
adc
and
mov
mov
sbb
and
or
and
adc
ljmp
inc
and
orb
nop
mov
call
lcall
inc
mov
dec
call
adc
cmp
int3
mov
sbb
and
aam
xor
ds
and
arpl
rcrb
xchg
and
adc
and
orb
nop
xchg
jp
adc
and
ret
add
xor
and
and
adc
xchg
and
sbb
inc
or
and
push
mov
out
lcall
mov
xor
and
pop
adc
inc
and
push
and
xor
add
test
inc
adc
mov
and
and
and
mov
sbb
sub
mov
test
sbb
and
jbe
and
mov
adc
sbb
adc
sbb
mov
or
int3
lds
cmp
adc
in
or
and
and
sub
and
iret
lds
inc
and
and
nop
sbb
and
cmp
mov
and
inc
sbb
rcll
call
jb
inc
and
or
and
and
mov
and
jg
mov
aaa
xor
sbb
add
jg
push
sub
lcall
jle
jg
dec
xor
dec
jg
xchg
or
test
jg
lcall
loopne
xor
pop
and
sbb
cmp
ds
sub
dec
xchg
pop
jg
xchg
or
movq
cmp
ret
shll
pop
dec
jmp
cwtl
or
jg
insb
xor
gs
mov
xor
shlb
loope
or
fnstcw
or
xchg
push
in
inc
xchg
jg
pop
pop
dec
pushf
dec
xchg
ret
or
nop
mov
fucomi
adc
test
jg
adc
pop
and
mov
fisubs
cmp
mov
adc
fistl
push
push
push
jl
inc
pop
pop
add
cmp
dec
cs
lahf
sbb
or
hlt
loopne
push
pop
fildl
inc
inc
or
adc
pop
pop
cmp
inc
inc
arpl
shlb
adc
mov
popa
xor
fcomi
por
and
mov
inc
push
inc
fucomi
mov
adc
fcmovnb
inc
inc
insl
jle
fildl
sub
cmp
sbb
and
adc
pop
mov
mov
or
mov
cmp
mov
roll
cld
and
andl
dec
addl
dec
popa
andb
je
fwait
insb
enter
inc
scas
and
jnp
fs
sbbb
mov
nop
shll
push
shl
add
pop
xor
fwait
enter
fs
fwait
add
leave
xchg
push
fwait
subps
adc
sub
fwait
xor
nop
sbb
sbb
orb
inc
dec
lea
fwait
sub
rolb
outsb
adc
or
test
sbb
mov
mov
inc
je
shlb
inc
popa
fcomps
pop
mov
imul
pop
cltd
push
repnz
in
mov
adc
cwtl
rorb
dec
sbb
and
sbb
lock
test
add
pusha
inc
testl
adc
xor
or
push
add
mov
mov
addl
pop
cwtl
add
push
fcoml
sub
mov
rolb
ret
push
and
mov
test
dec
xchg
test
fadds
loopne
add
push
xor
in
inc
addr16
cwtl
nop
dec
add
rorl
push
mov
push
add
adc
pop
es
lar
int3
je
flds
add
pop
ret
or
in
test
cltd
xchg
stos
sub
rolb
mov
add
dec
pop
ss
mov
aam
or
inc
in
popa
stc
or
aas
xor
unpcklps
das
test
daa
call
das
pop
mov
adc
call
xor
stc
repnz
clc
lret
xor
lock
call
dec
call
popf
lret
xchg
mov
call
mov
das
jg
movsb
lods
andps
movsl
pop
call
in
call
fs
subb
insb
call
popf
das
pop
mov
call
ficompl
sbb
in
mov
mov
dec
es
sbb
cwtl
add
sub
in
mov
unpckhps
in
mov
enter
dec
lods
int3
mov
push
mov
adc
xchg
dec
in
jae
push
push
pop
call
xchg
dec
inc
aam
lock
push
mov
mov
adc
add
pop
cli
leave
or
leave
gs
xchg
out
shlb
loope
adc
jb
pop
sbb
sbb
pop
sub
lahf
sub
movsl
jb
xchg
sub
xor
xor
cmp
lret
cmp
inc
push
inc
inc
sub
cmp
rcrb
dec
xor
push
adc
xchg
dec
sbb
pop
add
add
jo
xchg
mov
mov
inc
movsb
sbb
ret
xchg
xchg
data16
xor
test
jbe
inc
inc
popf
je
and
insl
in
adc
js
adc
mov
enter
xor
push
xor
daa
int
mov
mov
pop
sahf
cli
cmp
xor
inc
test
xor
daa
les
pop
sahf
adc
dec
cli
mov
dec
adc
shlb
pop
xor
shrb
pop
or
test
adc
or
push
add
or
and
add
shlb
xchg
je
add
pop
shlb
xor
and
cmp
addl
es
pop
pop
mov
sub
adc
mov
test
adc
mov
jmp
jge
mov
adc
jge
inc
call
aam
jge
mov
dec
push
xor
loopne
nop
sub
add
adc
or
or
mov
aad
or
mov
or
inc
cld
xlat
or
mov
jbe
call
je
or
sarl
aam
or
test
inc
or
and
mov
popa
dec
dec
add
cmpb
stos
pop
adc
adc
add
sub
aaa
push
push
dec
sbb
jno
xor
and
mov
decl
or
mov
test
add
andb
pusha
enter
mov
inc
orl
pop
mov
adcl
in
dec
push
mov
push
scas
je
adcb
or
rclb
inc
adcl
xor
addl
xor
or
and
xchg
sub
mov
sbb
xchg
repnz
xor
fs
mov
push
xchg
rcl
push
aaa
push
mov
dec
push
mov
cmpsl
push
arpl
lods
mov
mov
cmp
and
outsb
and
sub
flds
fucomp
inc
cmp
xchg
sbb
mov
popl
pop
fisubl
mov
test
xor
gs
mov
pop
adc
jecxz
push
jae
rclb
adc
mov
loop
sub
push
mov
cwtl
aad
add
aad
and
mov
aad
imul
add
sub
or
aad
dec
das
dec
leave
and
sub
or
sub
je
mov
cmpsb
fs
ljmp
add
push
mov
dec
push
ret
sub
mov
inc
xorb
dec
jmp
ret
adc
xor
aad
cmp
sub
orb
aad
xor
push
mov
aad
ret
adc
sub
add
jle
xor
push
xor
and
cs
cmp
aad
movntq
add
xchg
xchg
push
mov
and
xor
cmpb
scas
aad
test
sbb
pop
push
jb
fwait
shlb
popa
and
adc
or
mov
stos
rorl
adc
and
add
fistl
or
je
sti
call
add
fstl
sub
jno
and
fldt
inc
inc
arpl
popa
les
push
roll
xchg
aad
inc
imul
pop
push
fistpl
lret
les
xchg
inc
xchg
out
sub
int
nop
inc
addr16
and
popa
out
ret
inc
xorl
into
ja
dec
sahf
adc
shll
jo
out
cwtl
shll
fucomi
or
out
mov
imul
rorb
add
adc
xchg
add
inc
jecxz
and
or
inc
inc
dec
add
lcall
pop
shlb
nop
scas
fistl
loopne
movsb
add
mov
movsb
sbb
loopne
mov
faddl
mov
or
and
ss
scas
or
jne
shl
mov
jmp
movsb
ror
mov
mov
mov
adc
mov
stos
mov
xchg
mov
out
negl
call
mov
dec
push
mov
lea
test
jecxz
shrl
xor
les
aaa
sarb
shlb
dec
pushf
mov
pop
xlat
xchg
push
mov
and
mov
mov
aaa
inc
ret
sub
inc
push
xorl
mov
xchg
pop
inc
cmp
mov
add
xor
mov
jnp
mov
rolb
mov
xor
je
push
dec
pop
rcrb
push
mov
les
dec
xlat
aam
mov
test
xor
xlat
imul
push
and
inc
cmp
scas
stc
push
cld
add
mov
mov
xchg
popa
xchg
inc
dec
shr
adc
mov
lods
test
mov
dec
addb
test
pop
mov
outsl
into
and
inc
sarb
adc
cmp
inc
out
push
subb
mov
mov
mov
or
add
call
xchg
sbb
mov
xor
or
xor
mov
xchg
and
inc
xchg
xorb
loopne
xor
mov
push
test
hlt
jo
dec
xchg
and
jp
add
xchg
mov
xchg
fiadds
jmp
or
insl
inc
test
xchg
enter
sub
ret
add
pushf
loop
or
push
out
adc
scas
push
jmp
mov
mov
push
mov
cmp
push
pop
push
mov
addl
jmp
mov
mov
nop
mov
nop
nop
inc
addl
jo
or
mov
mov
mov
mov
mov
adc
push
es
inc
sahf
pop
in
sbb
cmpsl
adc
mov
xchg
mov
clc
mov
push
outsb
inc
push
mov
cmp
adc
xor
adc
cmp
push
mov
and
rclb
inc
xchg
cmc
pop
xchg
movsb
divl
push
add
lods
pop
xchg
xchg
xchg
mov
xor
cmp
xchg
push
fnsave
xor
test
inc
xchg
lods
mov
push
sbb
mov
leave
push
fwait
xchg
mov
xchg
push
xchg
and
sbb
xchg
pop
and
xor
xchg
xchg
lahf
xchg
xor
inc
sub
xchg
cmp
pop
fdivl
push
xchg
and
out
loop
test
stos
jge
xor
stos
sahf
sbb
and
cmpb
mov
adc
ret
lcall
jge
fistpl
jg
sub
nop
cmp
add
repnz
std
or
arpl
sub
mov
mov
out
call
cs
push
fstpt
cmpsb
je
scas
cwtl
sarb
adc
stos
and
mov
xor
inc
insb
movsl
hlt
add
and
sbb
sub
adc
dec
test
cmp
jne
fistpl
adc
xorb
mov
add
adcb
or
push
addl
stos
and
ret
rorl
stos
sub
add
stos
sti
fwait
inc
cmpb
jno
mulb
stos
xlat
fwait
push
cltd
imul
aaa
and
clc
dec
pop
bound
mov
lea
call
adc
call
mov
xchg
test
sub
push
sbb
sysret
dec
mov
shl
adc
inc
call
ret
mov
sbb
lcall
adc
xlat
ret
push
sub
dec
cmpsl
icebp
in
or
inc
nop
sbb
cmpsl
xlat
inc
nop
out
mov
sbb
and
movsb
repz
shlb
xchg
mov
or
inc
nop
inc
cmpsl
add
cmpsl
push
adc
mov
int
mov
mov
cmpsb
dec
mov
jb
mov
add
jo
push
cmpsl
adc
adc
adcl
inc
nop
outsb
sahf
mov
jmp
or
xchg
es
and
rolb
or
or
and
mov
fwait
sbbb
or
and
add
and
xor
out
or
sbb
ret
cmp
scas
sahf
mov
push
ds
repz
sub
or
sbb
sahf
out
call
add
repz
int3
loop
iret
repz
push
sub
push
nop
jns
cmpsl
jge
movsb
push
push
xchg
jl
push
sahf
negl
je,pt
push
jns
cmp
sbb
repz
repz
fmulp
mov
iret
xchg
mov
ret
into
sbb
incb
jl
negl
push
loop
sbb
out
aam
mov
iret
mov
sbb
lahf
out
sahf
pushf
scas
lret
or
cmp
repz
sub
pop
data16
repz
nop
sahf
lods
iret
repz
mov
fsubrp
decb
imul
inc
push
sar
mov
outsb
jle
sahf
mov
daa
negl
loop
clc
adc
sub
repz
aaa
je
fs
push
cmp
fimuls
daa
pop
mov
jbe
ljmp
cli
jbe
push
mov
in
int
cmpsl
insl
mov
iret
dec
test
jecxz
adcb
lret
idivb
xchg
push
jbe
push
scas
test
mov
insb
adc
lods
sbb
xchg
out
adc
out
sbb
push
imul
negl
sub
mov
outsl
push
in
mov
gs
dec
push
dec
ja
dec
mov
pop
mov
push
outsl
push
push
ja
sub
adc
xchg
cmpb
dec
xchg
lahf
sub
cmpsl
leave
aad
mov
xor
fistpl
lret
push
insb
jae
outsl
ss
xor
mov
addr16
out
pop
push
fiadds
repz
push
or
xor
ja
insl
pop
mov
and
in
push
dec
cmp
jnp
outsb
aas
das
bound
ror
imul
mov
mov
adc
pop
js
inc
stos
sub
nop
pop
dec
nop
and
jbe
pop
add
and
imul
and
sti
sbb
or
sub
add
xchg
mov
daa
add
aas
loope
xchg
das
jg
subb
push
aas
ret
je
jne
and
xchg
cli
incl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
ret
xchg
jns
and
nop
mov
subb
fisubs
xor
movsl
mull
dec
imul
sub
mov
jne
outsb
je
mov
sti
adc
push
mov
add
lret
inc
inc
xor
sub
sub
jg
cmp
sub
inc
inc
xor
xor
xor
jge
in
push
pop
xor
xor
inc
xor
xor
ss
xor
cmp
pop
jb
fdivl
cmp
xor
clc
inc
inc
xor
mov
xor
pop
andb
jmp
add
jo
mov
push
jo
or
loopne
push
mov
cmp
xor
sti
fbld
push
xor
or
push
and
inc
aaa
adc
xor
inc
pop
dec
push
add
and
jl
push
arpl
sti
or
inc
push
inc
push
dec
and
cmp
ss
adc
insl
sbbl
add
jne
push
dec
outsl
mov
dec
xchg
dec
mov
add
cvtpi2ps
push
push
ss
pop
inc
dec
hlt
imul
and
pusha
pop
push
sti
xlat
outsb
pushf
inc
push
inc
out
adc
push
sub
out
lcall
lret
mov
lods
sahf
add
movd
jns
out
and
hlt
inc
pop
xor
pop
dec
sbb
sbb
xchg
insb
adc
adc
and
insb
outsl
xor
imul
pop
fld
mov
push
push
mov
and
inc
cmp
add
popf
and
cmp
sbb
xchg
push
add
aad
sbb
popf
mov
scas
addb
push
mov
arpl
push
pop
or
inc
xchg
and
outsb
ret
mov
mov
or
push
es
push
inc
and
mov
es
xor
or
pop
prefetch
cmp
loope
or
pop
pop
loopne
lret
jo
and
lods
jg
jp
lea
fs
lods
stos
inc
out
scas
mov
dec
popa
jae
adc
jnp
inc
push
imul
and
jne
add
or
mov
js
daa
in
hlt
push
pusha
scas
scas
je
dec
fs
imul
push
add
popa
fs
jo
imul
cwtl
add
add
or
xchg
or
dec
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
scas
jg
pop
inc
cs
push
push
push
add
xor
push
or
mov
and
outsb
outsl
push
popa
imul
roll
push
sbb
jno
data16
outsb
pop
add
adc
cmpb
xchg
test
pop
mov
add
mov
add
repnz
rolb
add
add
adcb
jg
inc
push
add
jl
out
pushf
add
sbb
push
mov
cmpsl
adc
and
xor
add
les
shll
out
mov
sbb
xor
out
or
or
add
add
fdiv
mov
das
push
adc
iret
repz
and
sbb
sbb
sbb
call
xor
cwtl
push
das
push
pop
lcall
lahf
push
and
lcall
jp
push
sbb
jns
cld
fdivr
mov
out
xchg
cmp
les
popa
lahf
mov
and
sub
or
scas
pop
push
xor
popa
and
rorb
add
mov
xor
out
cmp
adc
xchg
or
xor
adc
push
out
sahf
out
or
in
int3
sbb
jns
les
add
pushf
push
xchg
call
repz
cmpb
iret
rep
push
sahf
out
sahf
pop
push
push
dec
dec
inc
repz
jns
cmp
xor
iret
repz
sub
and
sbb
cmp
repz
adc
add
sahf
out
add
or
hlt
call
enter
out
sahf
nop
jo
xor
lock
cmp
repz
mov
insb
inc
stc
cmp
repz
adc
cld
push
out
sahf
cmpsl
fcom
les
js
sub
aam
mov
xchg
jo
sbb
add
out
sbb
push
int3
push
mov
adc
inc
lcall
and
xor
sti
xchg
or
mov
add
cmp
xor
sub
fidivs
sub
inc
inc
add
adc
mov
push
inc
dec
cmp
xlat
andl
inc
adc
add
or
lahf
popl
jecxz
sbb
inc
sub
cmpsb
xor
push
sub
adc
out
pop
sbb
cmpsl
dec
movlps
xor
mov
ja
add
ficompl
jmp
push
add
mov
pop
xchg
mov
adc
loopne
retw
fisubl
push
pop
jae
push
and
bound
jg
or
js
shrb
mov
pushf
andb
call
shrb
inc
mov
dec
ret
jns
pop
cltd
xchg
mov
mov
inc
push
xor
xchg
cld
inc
inc
mov
pop
mov
out
mov
inc
cmp
pop
jne
pop
pusha
add
sbb
cmpsl
popa
sub
add
jne
imul
xor
pop
dec
jno
xchg
mov
arpl
imul
and
adc
or
and
bound
scas
add
mov
pusha
cmp
xor
fisttps
outsb
jnp
inc
push
push
push
insb
das
inc
repnz
jl
add
cmpsl
ja
lahf
rorb
das
loopne
aaa
jns
xchg
loopne
inc
sbb
pusha
out
push
mov
push
and
test
mov
mov
insb
pop
nop
or
sarb
jg
fdivrs
test
ss
push
insb
ret
sete
jo
mov
jg
jbe
int3
jl
aas
add
dec
push
mov
xlat
jns
pop
cmp
or
push
in
insb
push
lcall
lret
icebp
jns
test
adc
sbb
push
popf
jl
in
mov
push
push
aas
sbb
mov
cmpsb
jg
mov
cmp
mov
shlb
aam
pushf
sub
sarl
vmptrst
enter
je
mov
leave
and
pushf
push
sarl
jbe
insb
rcr
in
jp
pop
imul
pop
loopne
pop
repnz
dec
adc
out
imul
lock
enter
mov
sbb
xor
nop
push
fistpl
jbe
dec
imul
pop
add
inc
je
dec
imul
sbb
lahf
mov
sub
cmpl
scas
pop
push
in
sbb
and
add
ljmp
add
push
outsl
ja
xor
mov
push
sub
fsubl
push
sub
add
jecxz
mov
push
out
daa
movsb
and
adc
sbb
repnz
addr16
out
mov
add
mov
mov
mov
or
repz
cmpsl
fs
push
dec
push
jb
push
shll
jae
arpl
and
sbb
outsb
push
add
push
imul
out
insl
xchg
mov
jae
enter
push
jae
push
adc
or
adc
jae
push
cwtl
and
jb
mov
mov
out
adc
add
push
sub
push
inc
jno
leave
dec
sbb
addb
sub
push
add
and
add
es
mov
inc
push
mov
dec
lods
loope
pop
das
push
mov
inc
or
cmp
push
jo
jb
jns
or
ret
mov
cltd
shlb
movsb
sbb
roll
push
push
lods
cmpsl
xor
push
and
lock
sbb
imulb
push
divb
mov
inc
mov
or
popa
jge
and
shll
das
pusha
inc
and
sahf
nop
out
push
inc
mov
rcrb
and
xchg
mov
add
jecxz
popa
mov
add
cmp
inc
add
lods
or
push
gs
or
fstpt
jnp
movsb
rolb
jne
addr16
outsb
pop
add
xchg
pop
push
scas
push
and
leave
sub
loopne
scas
nop
pop
ds
fs
dec
test
lahf
xor
lahf
sbb
dec
adc
inc
jge
cmp
cs
cld
adc
ret
adc
jle
and
push
loopne
ret
pop
adc
mov
outsb
xor
imul
and
sub
dec
add
or
or
sarl
pop
outsl
mov
shrb
inc
add
add
push
lcall
orb
mov
mov
xor
xor
dec
dec
pop
pop
insb
inc
jmp
add
jns
mov
lea
xchg
fs
lds
gs
mov
lret
arpl
outsl
inc
push
outsl
pushf
dec
xchg
fsubrs
arpl
dec
and
roll
add
fs
xlat
or
sbb
cmp
rorb
jbe
xor
push
mov
mov
jb
sbb
or
mov
adcb
cmp
jp,pt
mov
inc
jmp
lret
mov
push
arpl
fidivl
dec
inc
dec
pop
or
aas
or
pop
outsb
inc
cmc
or
outsb
mov
ret
out
mov
mov
jmp
sbb
push
push
push
xor
cmpl
mov
stos
sar
imul
add
jo
add
add
jo
add
inc
pop
movsb
adc
sbb
inc
push
jo
sub
loopne
ds
pusha
data16
xchg
dec
pusha
push
jo
jno
mov
mov
cmp
arpl
scas
into
pop
roll
xchg
add
cmpsl
es
or
ljmp
dec
imul
add
iret
cltd
push
push
xor
int
xchg
insb
imul
inc
dec
pop
imulb
add
push
mov
add
ret
push
and
mov
add
std
or
aas
cld
inc
jae
adc
add
je
add
push
data16
cmp
outsl
xor
and
and
lcall
or
push
sbb
cmp
into
insb
sbb
or
push
add
cltd
imul
xor
sbb
mov
fbld
pop
rcl
scas
ficomps
mov
push
popa
or
fwait
xchg
xlat
push
and
and
inc
cwtl
aam
lcall
push
add
sub
push
pop
in
aam
pop
add
sbb
jae
push
ds
mov
add
repz
insb
push
sbbb
ret
xchg
push
punpcklbw
jnp
mov
and
add
std
adc
xchg
jns
sub
adc
test
decl
pop
shrl
mov
pop
or
arpl
data16
fiaddl
pop
gs
cmp
inc
xor
sti
fsubrl
shrb
insb
jns
fs
aad
cwtl
inc
pusha
out
add
xor
mov
jo
shlb
mov
adc
xor
inc
or
inc
push
push
test
push
leave
pop
push
enter
js
lcall
mov
cmp
adc
add
clc
sahf
out
lcall
jns
out
mov
iret
repz
mov
iret
repz
mov
repnz
inc
out
sahf
out
xor
sbb
loopne
lahf
adc
in
lock
out
or
push
loopne
fcom
sahf
out
sahf
enter
cwtl
mov
out
je
push
cmp
out
sahf
out
and
adc
iret
repz
add
in
hlt
in
in
mov
repz
mov
xchg
repz
jnp
mov
js
push
inc
into
out
fisubrs
and
or
jmp
or
and
adc
scas
andb
shrb
push
divl
and
insb
push
mov
jo
adc
hlt
out
loop
test
pop
shl
add
push
nop
mov
xchg
daa
data16
testl
push
aaa
cpuid
loopne
adcb
rolb
jbe
inc
and
or
aad
sbb
mov
mov
ss
fs
inc
dec
pop
or
add
mov
mov
or
add
xorb
inc
cwtl
ret
scas
sub
iret
inc
sub
xor
movsb
pop
sbb
subl
adcb
adc
xor
fbld
mov
push
pop
jo
add
in
bound
cmp
cmp
adc
jo
aam
adc
sub
outsb
push
cmp
jae
insl
mov
insl
sub
xchg
cmp
insl
jbe,pn
and
jg
mov
rcrb
ds
je
loopne
adc
mov
lret
cs
fwait
xor
jae
jecxz
pop
imul
pop
cmp
imul
sbb
cmp
outsb
add
and
and
inc
addl
jb
addb
jae
or
popa
insb
into
mov
jns
das
sti
shrb
scas
divb
fcomps
sbb
inc
add
sbb
pop
adc
push
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
decl
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
fbstp
xor
xor
dec
xor
xchg
shll
inc
ss
ss
push
add
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
cmp
cmp
sub
ret
add
push
lock
idivl
ljmp
or
xor
xor
push
xor
xor
das
clc
ljmp
js
popf
xor
xor
xor
xor
xor
xor
lock
pushl
mov
xor
xor
xor
xor
out
xor
lock
jb
jge
mov
xor
xor
fidivl
scas
xor
es
pushl
fnsave
out
xor
loopne
call
jno
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
adc
out
cmp
adc
inc
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
clc
lret
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
pop
cmp
cli
jmp
imul
cmp
cmp
ds
incl
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
pop
add
into
aas
out
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
xor
inc
inc
xor
pop
xor
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
ljmp
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
cld
cmpsb
call
loope
std
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
mov
sbb
pop
sar
cld
push
or
cmp
pop
xor
push
xor
adc
jmp
xor
xor
xor
xor
xor
xor
ret
xor
aas
clc
pop
xor
lcall
clc
xor
xor
jmp
incl
nop
xor
out
in
xor
scas
clc
xor
aaa
arpl
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
inc
jno
jg
stc
cmp
cmp
cmp
push
loopne
mov
and
cmpb
ds
aas
jmp
xchg
outsb
xor
xor
mov
xor
sbb
xchg
cmp
cmp
mov
mov
fists
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
jg
aas
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
out
sti
inc
xchg
cmpsb
jo
and
xor
add
or
jg
xor
xor
xor
fisubrl
xor
cli
aas
loop
xor
xor
xor
mov
xor
xor
decl
shlb
ss
add
or
aaa
incl
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
decl
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
jecxz
incl
cmp
push
mov
cmp
cmp
sbb
push
cmp
cld
jg
lods
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
aas
cld
aas
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
push
es
bnd
adc
sub
xor
cmp
lcall
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
fisttps
xor
cmp
pop
cmp
mov
ljmp
lcall
cmp
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
push
aas
je
jge
mov
movsl
aas
stos
aas
mov
mov
test
cmc
int
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
jg
mov
xor
xor
xor
xor
mov
xor
xor
xor
mov
mov
xor
xor
mov
jl
cmpsl
xor
xor
filds
xor
xor
xor
xor
cmpsb
pushl
xor
pop
cmpsb
xor
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
cmp
mov
cmp
bound
scas
cmp
sbb
jp
cmp
fdivrl
aaa
cmp
mov
cmp
cmp
mov
lods
incl
cmp
cmp
cmp
aas
sub
nop
sbb
xor
or
add
jg
pop
xor
xor
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
nop
sarb
mov
sbb
ds
xchg
cs
lahf
xor
xchg
aas
push
mov
jecxz
lock
mov
xor
xor
xor
pop
mov
ss
fiadds
aaa
ret
sub
jmp
repnz
or
cmp
pop
cmp
jge
push
cmp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
out
sbb
cmp
cmp
fdivrs
push
aas
jne
call
add
mov
add
mov
shlb
xor
dec
or
outsl
js
mov
xor
divl
pop
xor
call
adc
es
dec
ss
outsb
notb
ss
incl
ss
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
pop
test
inc
pop
push
imul
cmp
test
mov
ljmp
or
cmp
dec
cmp
cmp
ljmp
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
or
adc
cmp
mov
ljmp
pop
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
cmp
test
addr16
loope
rol
jmp
js
xor
xor
pop
xor
xor
lcall
cmp
or
xor
xor
xor
xor
xor
mov
xor
lcall
ss
lcall
ds
dec
aaa
pop
aaa
js
mov
stos
incl
aaa
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
adc
jbe
cmpl
cmp
cld
inc
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
lds
pop
pop
rclb
sub
jne
cli
lcall
loop
xor
xor
jg
xchg
xor
xor
xor
sub
es
cwtl
cld
xor
xor
ljmp
jbe
loopne
adc
adc
sbb
pushl
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
aaa
jnp
ljmp
cmp
jg
loope
aaa
into
cmp
inc
xor
and
xor
xor
jl
call
decb
lods
xor
int3
add
fdivl
in
test
lods
xor
outsl
sbb
dec
xor
cmp
sub
sub
xor
cmp
inc
cmp
incl
cmp
cmp
xor
call
cmp
jl
cmpb
cmp
push
mov
push
mov
enter
pop
loopne
mov
cmp
cmp
mov
cmp
inc
lock
rcl
aad
hlt
dec
cld
push
add
or
adc
mov
cmp
cmp
sub
sub
xor
clc
add
cmp
inc
cmp
cmp
pop
cmp
decl
push
cmp
cmp
mov
nop
xchg
cwtl
jg
lods
mov
sub
xor
inc
mov
push
aas
push
lock
aas
test
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
aas
std
je,pt
adcb
pop
bound
ret
sub
xor
xor
inc
xor
xor
cwtl
xor
xor
enter
cmp
adc
pop
xor
mov
mov
fbstp
inc
xor
andb
add
outsl
mov
fimuls
xor
ss
sahf
decl
dec
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
das
sar
add
or
or
adc
adc
aaa
sbb
and
and
sub
sub
inc
lcall
pop
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
das
ret
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
mov
into
mov
dec
mov
mov
incl
mov
aaa
enter
shlb
aam
fdivs
fsubl
adc
lock
hlt
xor
xchg
mov
add
or
adc
adc
sbb
cmp
or
cmp
fdivrl
call
mov
cmp
pop
sahf
sti
push
jg
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
loopne
add
cmp
je
jl
test
pushl
mov
mov
cmp
mov
mov
cmp
call
add
adc
jmp
aas
push
add
add
das
jg
in
call
sahf
repnz
shufps
lock
iret
xchg
add
jmp
adcb
lret
lods
repz
ret
icebp
es
sub
fbld
mov
dec
add
rcrl
inc
add
jne
dec
inc
loopne
andl
test
bound
cmpsb
push
add
inc
add
pop
fisttps
fimuls
add
xchg
pop
mov
jns
inc
lcall
mov
push
sub
or
add
jo
outsb
leave
repz
mov
pushf
jo
rcrb
rolb
sahf
test
orl
or
jne
stos
dec
fisttps
sbb
pop
dec
shrl
inc
in
add
mov
push
sub
sbbl
push
adc
sbb
push
ss
les
or
cmp
shrb
bound
or
xor
lock
dec
push
pop
inc
push
fmuls
mov
jb
pop
in
push
lock
mov
mov
jne
push
mov
inc
mov
rol
fdivs
fstpt
or
dec
push
enter
enter
cmp
loopne
adc
push
addb
push
push
cmp
leave
shl
xor
inc
xor
xchg
sub
dec
ljmp
mov
xor
cmpb
jge
push
and
pop
mov
sbb
imul
push
mov
sub
sub
fcoms
xchg
in
jns
fsubs
dec
xlat
and
and
push
pop
sub
xor
jl
sbb
sbb
jg
xchg
xor
pop
je
cmp
outsb
insl
add
int3
insb
cpuid
inc
xchg
inc
jp
add
inc
push
sub
or
dec
mov
es
insb
outsb
and
or
jb
xor
inc
xchg
call
cmp
add
jne
in
cmp
push
popf
pop
inc
lahf
xchg
sub
nop
add
add
jbe
xchg
xchg
add
adc
pusha
sbb
mov
mov
jae
mov
push
mov
out
or
nop
fisubs
inc
lea
push
push
pop
jb
cmpb
sbb
lret
jp
dec
jo
xchg
js
std
lret
aaa
or
inc
inc
inc
jp
push
push
call
adc
movsw
xor
xor
or
aam
xor
mov
push
mov
adc
fisubrl
lahf
into
cmp
mov
mov
cmp
addb
xchg
frstor
push
call
or
xchg
push
aas
cmp
js
xor
jno
and
sub
cmp
cmp
mov
add
out
push
or
ud0
mul
and
dec
hlt
mov
mov
call
push
loopne
das
sbb
jmp
lret
pop
xor
push
sbb
and
add
mov
mov
ljmp
lock
cs
push
ds
sub
adc
adc
add
or
add
andl
xor
add
andl
push
adc
orb
jl
sub
aad
push
jnp
push
jg
adc
dec
cld
sub
or
jge
shr
jp
sarl
and
xchg
or
addl
add
mov
outsb
mov
pop
mov
lock
call
aad
add
stos
add
rorb
jmp
inc
lock
fildl
inc
mov
jge
xor
insl
inc
sbb
lret
mov
das
add
pop
pop
sbb
jns
leave
inc
or
leave
mov
or
mov
pop
add
and
jnp
sbb
and
fsubr
xchg
lock
pusha
xor
loope
fldl
fistps
sti
or
jge
out
call
adc
mov
clc
adc
and
push
fidivrl
rorb
push
mov
push
sbb
push
pop
push
jbe
mov
xchg
movaps
add
adc
imul
xchg
jno
inc
enter
loop
rcrb
jae
pop
lcall
adc
pop
pusha
sbb
hlt
sub
shlb
mov
push
je
pop
and
inc
jl
xchg
insb
ljmp
dec
repnz
mov
jmp
mov
lret
mov
mov
pop
cmp
xor
or
mov
pop
test
outsl
pop
mov
test
adc
pop
cmp
loopne
or
push
lea
lock
idiv
dec
xor
sbb
stc
jbe
push
sbb
sub
jl
pop
xor
ret
xor
xchg
lret
stos
add
or
pop
ror
push
add
scas
mov
push
jno
cmpsb
xchg
pop
icebp
ds
call
add
dec
cmp
add
roll
rolb
movsb
test
ja
loope
adc
push
ja
dec
jo
sub
and
add
movsl
adc
sbbb
lret
ret
push
dec
add
sarl
pop
push
in
imull
les
add
add
push
add
push
rorb
icebp
cmp
icebp
clc
fs
or
sub
loope
pop
mov
mov
xchg
xor
pop
mov
or
rcrb
mov
lahf
bound
sbb
adc
jo
and
pop
fisttpl
lahf
sbb
push
pop
int3
push
jl
jg
lea
adc
cmp
scas
lahf
xor
lahf
loop
lods
mov
add
sbb
cmp
cmp
or
fildl
rcrb
rcrb
mov
dec
rcrb
add
movsl
xor
sbb
mov
stos
dec
add
and
or
cmp
dec
dec
icebp
loopne
lods
sbb
mov
repnz
sbb
icebp
inc
sub
test
icebp
add
std
or
inc
arpl
rclb
mov
js
dec
out
sbbl
adc
sti
fadds
mov
ds
aaa
inc
imul
inc
imul
xchg
xchg
sti
mov
and
xor
aam
mov
pop
sbb
pop
or
sub
jne
subl
inc
sarb
pop
clc
push
or
inc
or
pop
scas
mov
push
xchg
scas
cmp
xor
subb
enter
mov
mov
out
scas
outsb
andb
dec
xchg
dec
loope
ret
pop
sub
aas
insb
das
mov
add
inc
outsb
inc
sbb
inc
dec
pop
pop
push
inc
sub
push
push
testb
inc
sbb
call
xchg
jns
adc
dec
or
and
pop
xor
add
dec
mov
or
sub
adc
mov
dec
mov
or
lret
xchg
push
and
out
fisttpll
mov
nop
orb
dec
jo
rorl
or
jmp
pcmpeqw
adc
inc
pop
call
les
push
sub
aas
es
inc
lcall
out
ret
xchg
push
call
es
sbbb
fdivr
xchg
push
mov
nop
je
pop
cmp
push
pop
xor
or
adc
pop
inc
imul
outsb
test
xlat
inc
inc
sub
sbb
inc
cmp
push
mov
or
sbb
loop
test
inc
sub
or
mov
lods
sbbl
or
test
les
adc
adc
inc
mov
mov
mov
or
sbb
and
mov
xchg
xchg
xchg
inc
sbb
sbb
adc
dec
or
repz
mov
inc
sub
frstor
cmp
mov
push
xchg
orb
xor
xor
add
add
mov
add
sarl
andb
and
pop
mov
dec
adcl
inc
mov
pop
inc
mov
fisubrl
pop
leave
xchg
or
ja
ret
xor
mov
pop
cs
into
test
mov
mov
mov
push
fnstcw
xchg
mov
add
les
pop
andb
fwait
popf
mov
cs
nop
repz
in
nop
push
adc
rolb
hlt
or
dec
push
adc
mov
or
mov
pop
push
dec
inc
add
xor
sbb
sbb
jmp
repz
movsb
mov
sbb
lret
lret
int3
and
pop
jns
ja
and
pop
nop
xor
push
push
jl
mov
add
mov
cmp
loopne
push
fadds
loopne
lock
iret
clc
add
push
fimuls
mov
xor
mov
repz
inc
pop
mov
loopne
fidivl
mov
jns
sbb
sub
and
push
cmp
xor
push
in
test
and
dec
sbb
push
enter
xor
and
test
loopne
test
push
call
adc
push
popa
loope
pusha
mov
pop
or
push
jb
pusha
hlt
push
hlt
test
push
sub
cmpsl
ret
lods
inc
rorb
mov
cmpsb
nop
or
sub
xor
sub
sub
sub
sub
xor
lcall
sub
sub
imul
dec
shrl
sub
lret
adc
sub
sub
sub
sub
sub
xor
sub
sub
sub
add
shll
sub
imul
dec
add
sbb
xchg
pushf
dec
neg
aad
adc
sbb
add
sbb
push
push
push
mov
xor
xor
sbb
loopne
fadds
enter
and
sub
add
fistl
fimull
mov
push
scas
or
push
lret
xor
pop
or
insb
push
sahf
enter
sbb
add
inc
sub
adc
inc
psubsb
push
adc
and
inc
or
dec
lock
or
push
jmp
adc
cmp
inc
repz
bound
ss
sbb
inc
adc
mov
sub
cmp
inc
ds
push
in
inc
iret
push
fwait
pop
shl
xchg
in
nop
adc
fnsave
ds
mov
iret
jns
lds
mov
adc
jmp
cmp
inc
sahf
xchg
test
xor
sub
mov
out
inc
inc
cmp
cmp
inc
add
jmp
in
pop
inc
out
shll
ret
call
mov
add
and
mov
cltd
mov
add
mov
sbb
repnz
je
fidivrs
pop
or
jo
inc
je
and
cmp
cmp
pusha
jns
pop
push
and
mov
stos
mov
mov
lds
pop
add
aaa
and
adc
xor
aad
adc
roll
cmp
adc
andb
pop
mov
lcall
mov
xor
les
aaa
xchg
lock
js
jns
jb
and
jns
sbb
insb
sub
sbb
adc
xchg
into
daa
jns
and
fwait
and
dec
sbb
xchg
pusha
dec
andb
inc
xor
sbb
adc
ja
jns
xchg
jns
mov
sbb
cwtl
int3
in
pop
jns
and
scas
cltd
adc
shrl
outsl
aam
popf
xchg
mov
push
mov
cmp
outsb
mov
out
outsb
mov
insl
jmp
outsb
cmpsl
out
sub
out
cmp
push
test
call
pop
xchg
out
sbb
add
gs
sub
fcoml
in
dec
dec
out
and
adc
mov
lods
xchg
pop
enter
sbb
mov
mov
out
inc
lods
mov
out
or
push
jne
mov
sbb
out
mov
fsubp
jo
xchg
loopne
and
fcoml
jne
addr16
insl
push
ja
jbe
push
scas
outsb
mov
ror
dec
call
mov
xchg
mov
lret
add
outsb
out
leave
inc
pop
outsb
push
mov
out
cmp
inc
inc
mov
lret
int
lea
stos
outsb
mov
lea
jne
test
fsub
xchg
test
and
mov
push
out
or
adcl
sbb
out
mov
insl
push
cmpsl
cmp
push
nop
nop
sub
lock
cmpl
xor
jnp
and
pushf
mov
inc
cmp
add
icebp
mov
pop
mov
movsb
adc
mov
mov
rorb
jg
aaa
inc
mov
xor
sub
icebp
adc
and
or
mov
mov
and
loopne
mov
or
mov
or
inc
mov
es
aaa
sub
mov
je
in
fimull
test
pop
loope
and
jmp
mov
cwtl
and
xor
xor
cmp
cwtl
pop
push
mov
rclb
inc
mov
loope
xor
add
mov
in
lea
js
mov
lcall
cltd
inc
inc
inc
lcall
inc
inc
inc
cmp
inc
cmp
inc
inc
inc
sub
jmp
cmp
fs
add
mov
inc
cmp
mov
mov
fcomip
movsb
fwait
cwtl
and
inc
adc
mov
lods
adc
enter
xorb
or
in
scas
call
or
cmp
xor
call
or
dec
aad
std
xor
dec
adc
mov
jnp
mov
dec
pop
lret
enter
popf
adc
and
inc
scas
sub
dec
or
sbb
dec
jmp
test
daa
dec
jno
cmp
mov
movsb
dec
push
and
dec
outsb
addr16
lock
popl
add
fistpl
pop
nop
push
pop
call
sbb
pop
push
mov
mov
and
add
call
sub
enter
xchg
aad
xchg
sub
pop
add
cmp
mov
sub
inc
xchg
fisubrs
in
mov
addb
mov
mov
mov
mov
mov
push
mov
das
mov
xchg
or
inc
add
push
mov
leave
add
sbb
jb
and
lret
call
jmp
mov
inc
xor
and
adc
dec
dec
inc
loope
enter
movsb
cmp
push
mov
push
sub
mov
lock
movl
push
lret
push
xlat
inc
inc
add
insb
cmp
mov
adc
push
add
adc
jnp
fstpt
pop
inc
pop
mov
add
enter
mov
nop
jp
pop
hlt
push
add
repnz
loope
and
call
inc
or
loopne
in
scas
cltd
leave
sti
loopne
out
mov
xor
xchg
or
add
xchg
push
pusha
dec
xchg
mov
adc
xchg
xchg
pop
mov
inc
xchg
and
pop
push
adc
inc
stc
loopne
pop
xor
call
lea
mov
ljmp
bound
mov
push
mov
sub
dec
xor
js
mov
aas
jl
outsb
jno
pop
vmovlpd
push
stc
xor
mov
lods
mov
in
dec
push
call
xchg
inc
stc
xchg
call
mov
fldl
inc
sub
xchg
push
repnz
clc
adc
frstor
ret
pusha
sbbl
ljmp
jmp
daa
fnstsw
icebp
push
xchg
adc
or
mov
lds
rol
jmp
mov
rep
jmp
jecxz
push
aaa
gs
data16
pop
stc
sub
je
add
fcmovnu
fcmovne
xor
jae,pn
call
adc
aas
jne
sbb
mov
lock
cltd
outsl
imul
aas
iret
aam
leave
jns
outsl
adc
inc
enter
adc
call
stc
adc
add
push
xor
sbb
retw
mov
nop
add
repnz
adc
ret
call
jp
mov
fsubp
xchg
mov
fdiv
je
test
sub
jge
sbb
cld
push
inc
xchg
and
xchg
js
jl
adc
add
nop
scas
inc
jl
inc
and
lahf
addr16
xor
and
push
repnz
scas
lock
lret
jo
inc
mov
inc
pop
rcr
loopne
jb
or
or
jae
inc
pop
or
xor
sbbb
jno
xchg
jb
in
cli
jo
lods
gs
shll
jns
sub
out
pop
cmpl
mov
js
or
xchg
nop
flds
enter
jne
xchg
mov
mov
inc
mov
and
xor
sub
test
adc
sub
add
xchg
and
dec
push
sbb
adc
imul
pop
inc
lods
adc
adc
adc
sarb
mov
cmp
in
cwtl
or
mov
pop
mov
hlt
xchg
mov
loope
xchg
or
ret
jge
jo
adc
test
add
adc
sbb
cmpsl
pop
pusha
sbb
adc
mov
or
adc
cmpsl
pop
into
add
mov
jp
fsts
aam
shrl
cmp
add
pop
shrl
shll
fcomp
rol
rcrb
and
add
or
movsl
rorb
lret
loope
mov
pop
xor
in
pusha
fstpl
inc
push
sub
mov
add
sahf
push
mov
dec
incl
cs
xchg
movsl
movsl
roll
push
adc
sub
mov
jmp
int3
outsb
filds
stc
sbb
and
adcb
pop
adc
icebp
add
inc
inc
mov
mov
and
aaa
push
pop
adc
sub
mov
dec
adc
lods
test
adc
imul
mov
push
call
sub
adc
xchg
out
shrb
rcr
mov
int3
or
bound
dec
fimuls
dec
mov
adc
push
mov
dec
jb
mov
ret
ret
stos
push
jne
dec
fcoml
pop
dec
inc
or
pop
adc
rcll
jb
ss
push
xor
push
add
in
lods
sbb
xor
call
stos
sbb
fisubrl
cmp
dec
add
rolb
xorl
cltd
jecxz
das
lcall
sbb
sbb
aaa
add
aam
out
mov
mulb
mov
sbb
mov
dec
lret
insl
lret
jge
ffree
aas
fisttpl
arpl
fsubl
adc
xchg
xor
in
test
ss
sbbl
push
sarl
sahf
mov
inc
loopne
lods
dec
fcompl
push
in
ljmp
pop
xor
negb
aad
inc
pop
sbbl
pop
xrelease
and
pop
aam
cmc
orb
and
jmp
pop
fcoml
pop
push
mov
sbb
aad
pop
outsb
ret
pop
adc
push
xchg
in
add
pop
mov
mov
push
xchg
sub
pop
push
fisubs
aaa
sub
pop
sbbl
aad
pop
cmp
dec
test
xor
mov
push
out
insl
mov
or
rorb
sub
test
rcrb
xor
xlat
out
add
mov
lret
adc
test
inc
mov
sub
mov
test
inc
xlat
push
adc
push
and
adc
jecxz
mov
pop
and
mov
adc
pop
push
cmpsl
enter
pop
jle
enter
dec
or
add
in
shlb
add
mov
or
sbb
pop
pop
enter
cs
adc
js
pop
call
push
loopne
dec
mov
leave
jecxz
int3
and
adc
stc
xchg
mov
lret
pop
or
push
bound
mov
mov
mov
mov
sbb
adc
sti
mov
lock
fcoms
sarb
mov
mov
mov
xchg
xchg
mov
cmpb
mov
and
cmp
push
mov
nop
sbbl
mov
enter
adc
in
pop
cmp
mov
repnz
sbbl
lds
inc
push
lods
mov
sbb
and
mov
push
jb
subl
mov
enter
ds
in
sub
push
repnz
mov
and
cmp
out
mov
nop
sbbl
mov
enter
lods
mov
in
pop
cmp
mov
push
pop
mov
inc
push
inc
mov
and
and
and
dec
rorb
or
mov
hlt
and
or
and
lcall
out
in
or
mov
nop
pop
or
data16
mov
add
adc
lcall
push
sbb
imul
data16
adc
and
inc
dec
lcall
movsb
mov
mov
data16
inc
xor
lcall
ret
mov
and
pop
rorb
arpl
and
inc
movl
and
rol
popa
dec
jo
in
xor
cmp
repz
and
pop
adc
mov
cmp
and
stc
mov
in
repnz
ljmp
cmpl
or
add
xchg
nop
sbb
rol
push
repnz
push
mov
xchg
rol
sti
testl
xor
aas
pop
scas
push
ja
fnstcw
inc
sub
pop
shlb
daa
rcl
mov
pushl
jg
and
inc
lds
inc
rcl
mov
pop
test
das
push
rol
or
push
jo
das
test
inc
sub
fistpl
dec
add
shrl
dec
das
test
xchg
and
xchg
into
sbb
jo
or
subb
addr16
jecxz
gs
inc
adc
sub
or
push
pop
mov
les
js
mov
das
mov
adc
dec
das
push
cmpsl
sub
jl
mov
jbe
dec
pop
mov
and
jb
dec
imul
cmp
leave
sarb
pop
mov
sbb
xchg
cmpsb
sub
scas
cmp
jle
sub
cmp
outsb
pop
pushf
mov
xlat
das
pop
and
push
xchg
push
inc
xor
mov
push
dec
sub
cld
sbb
gs
nop
inc
jmp
pop
nop
fldenv
ret
inc
or
pop
xor
das
pop
pop
and
dec
das
and
scas
xlat
test
lret
fdivrl
sub
add
femms
pushf
mov
adc
pushf
mov
sub
lret
dec
pop
push
or
das
dec
pop
mov
pop
adc
or
dec
das
sub
das
mov
lock
sarb
cs
sarl
imul
je
and
das
push
xchg
in
adc
int
movsl
push
xchg
and
push
loopne
das
pop
rclb
push
push
loop
das
sub
lock
shrb
das
cmp
xchg
and
sub
cmpsb
pop
hlt
das
sbb
lock
add
and
int3
fcomps
jo
mov
pop
cld
sub
adc
je
cmp
push
call
sbb
das
mov
push
sbb
sbbl
mov
sti
sub
ljmp
jmp
sbb
mov
mov
ss
mov
out
fldcw
loope
sbb
cmpsl
sub
lods
cmp
add
das
out
push
adc
nop
dec
les
cmpsl
sub
xlat
sub
cmovo
pop
xor
dec
sbb
cmpsl
sub
inc
pop
lods
das
dec
pop
cmp
test
fdivs
mov
jo
dec
add
scas
push
xchg
das
cmp
ss
dec
pop
das
in
push
xchg
outsb
xor
and
lret
xor
enter
add
xchg
fsubrp
das
cmp
mov
repz
mov
je
nop
test
das
pop
sbb
dec
pop
pop
pop
cmp
dec
xchg
fdivrs
sub
xchg
sti
sub
arpl
and
popl
out
ljmp
dec
scas
xchg
jbe
clc
sbb
dec
pop
das
inc
test
test
jg
mov
xchg
or
mov
js
push
push
xor
or
xor
xchg
cmp
rorb
sub
ss
das
mov
lret
add
cmpsl
sub
pop
cmc
or
jno
scas
xchg
or
pop
fidivs
das
dec
sbb
dec
push
sub
loopne,pn
push
inc
fs
push
cmpsl
das
ljmp
cltd
sub
gs
lock
jo
shlb
shrb
xchg
movsl
rcll
sub
cmpsb
ljmp
cmpsl
das
loopne
xchg
and
sbb
and
jmp
jb
std
mov
das
xchg
movsl
negl
aad
fidivrs
and
jmp
add
das
nop
mov
pushf
mov
das
xlat
inc
add
inc
and
dec
jp
mov
loop
cwtl
mov
and
adc
inc
test
jg
mov
das
push
sub
sbb
sbb
rclb
movsl
rcll
das
stc
xor
jecxz
movsl
test
inc
test
lds
mov
jno
inc
pushf
mov
adc
fimuls
sbb
mov
dec
pop
cmp
cmpsl
sub
addr16
adc
lock
loope
adc
xchg
and
jb
push
lods
adc
dec
pop
das
rcll
mov
hlt
das
cmp
jno
data16
mov
loope
xchg
and
cs
xchg
inc
ret
out
out
mov
dec
call
sbb
sbb
inc
jb
mov
into
dec
or
or
pop
push
xor
xor
and
cmpsb
push
test
xor
hlt
jnp
cmc
sbb
jb
iret
inc
mov
adc
dec
and
imul
mov
fwait
ljmp
mov
pop
test
mov
push
mov
add
addr16
lcall
inc
cwtl
or
cmp
aaa
cwtl
sbbl
jne
popf
in
mov
addr16
in
xor
mov
or
lahf
push
cltd
lcall
test
out
rcll
mov
xchg
stos
mov
jbe
push
int3
mov
and
dec
repnz
jnp
push
xchg
jmp
shrl
fdivrl
mov
fisubl
pusha
xchg
mov
xor
out
into
fdivp
add
repz
movsb
int3
cmpsl
stc
cmp
in
decb
test
sahf
and
dec
pop
outsb
jle
sahf
out
xchg
cmpsb
ret
repz
repz
iret
repz
push
push
sbb
repz
idivb
repz
ljmp
jo
cmp
repz
cmp
loopne
cld
cld
push
adc
popf
out
and
dec
add
mov
dec
repnz
int
jns
daa
adc
adc
push
int
xor
sub
scas
repnz
xor
push
and
xor
cmp
cmc
movsb
sbb
push
fcoms
sbb
aad
outsb
cmp
jl
mov
mov
mov
add
add
lret
lahf
sarl
mov
push
mov
xor
pusha
or
adc
rorb
adc
cmp
jmp
xchg
sbb
add
jns
iret
sbb
shlb
push
lcall
test
dec
imul
jns
cmp
cmp
jp
push
cld
adc
mov
orb
outsl
adc
es
add
pop
daa
mov
xchg
mov
test
and
shrb
mov
xchg
iret
repz
xor
dec
inc
xor
sbb
iret
repz
or
hlt
xchg
icebp
jns
out
in
in
out
sahf
out
ror
enter
jns
mov
movsb
jns
out
mov
out
sahf
out
mov
sahf
js
jo
push
jns
pop
pop
push
push
out
sahf
out
dec
inc
inc
xor
repz
sub
adc
nop
lock
repz
pushf
jl
cmp
sahf
out
sbb
fdivrs
out
fs
pop
dec
int
jns
and
adc
in
les
repz
je
and
repz
push
nop
fs
sarl
jg
push
sbb
add
mov
subl
or
inc
dec
push
test
pop
xor
add
add
dec
push
mov
push
aaa
xor
push
push
add
xor
dec
pusha
jo
xor
sub
or
scas
cmpsb
xor
sbb
inc
push
mov
ss
add
and
sub
jo
or
and
ds
rolb
insb
daa
inc
mov
mov
mov
xchg
lock
cmp
xor
xor
fs
mov
pop
bound
insb
fs
repnz
add
mov
adc
xor
pop
jae
jne
cmp
aaa
inc
push
push
psubusb
loope
push
push
daa
gs
cmp
aad
sbb
cmp
loop
mov
shll
mov
js
dec
add
int
daa
ja
ret
dec
sti
push
add
push
and
xchg
or
mov
mov
insl
fwait
dec
lahf
add
aad
fidivrs
cmp
pop
adc
push
inc
mov
and
xor
jge
jno
call
push
in
add
and
or
shl
dec
enter
outsb
cmp
and
fdivrs
jge
xor
lds
adc
cmp
pop
pop
inc
fists
pop
cmp
inc
push
inc
aas
sbb
sbb
jg
xor
dec
stos
dec
mov
nop
or
sarl
cmp
xor
mov
adc
stos
mov
movsb
jg
nop
mov
push
dec
shr
mov
mov
fcmovnbe
inc
jg
pfnacc
jne
adc
xchg
int3
xchg
sbbb
push
nop
ja
or
jne
leave
xlat
dec
sbb
push
inc
push
movsl
aaa
add
movsl
or
je
mov
jecxz
sbb
sti
fiadds
adc
jbe
iret
jb
jbe,pn
bswap
fsts
sub
and
add
jmp
cmpsb
pop
leave
in
and
aaa
mov
and
pop
push
js
movsb
cmpsb
adc
adcb
sub
adc
inc
add
stos
aas
ds
lea
push
gs
dec
adc
arpl
add
popf
negb
outsl
and
pop
add
arpl
xor
push
push
movb
add
pop
inc
mov
push
add
mov
sub
sub
or
sbb
mov
ja
lods
add
jmp
xor
dec
rorb
imul
xchg
push
mov
sbb
inc
push
mov
ret
sbb
mov
mov
push
sbb
insb
sub
xchg
mov
mov
adc
mov
or
mov
arpl
insb
movsb
mov
or
mov
lods
or
repz
sbb
loop
mov
sub
xchg
lahf
aas
sub
sbb
pop
push
mov
mov
jae
jecxz
cmp
mov
popa
aaa
add
fstl
rorb
mov
sbb
addl
xor
add
pop
inc
xchg
pushw
mov
lods
test
jns
out
pushf
xchg
mov
je
pop
pusha
pop
pop
push
repz
repz
dec
dec
inc
inc
iret
repz
cmp
xor
sub
or
push
cld
xchg
hlt
cmp
repz
loopne
enter
iret
repz
dec
mov
test
jl
cmp
repz
fs
dec
cmp
jne
repz
add
xchg
mov
out
ror
sarb
test
cwtl
nop
mov
daa
iret
repz
pop
push
inc
cmp
out
push
sub
or
xchg
in
cmp
repz
shrb
dec
pusha
imul
dec
pop
mov
push
dec
dec
mov
mov
lock
dec
popf
add
jl
enter
mov
jne
pop
adc
push
roll
cs
adc
adc
call
outsb
pop
call
jg
adc
outsb
add
pop
enter
pop
cmp
jbe
ret
push
sbb
lds
or
push
mov
fisttps
and
sub
adc
sub
add
pop
rolb
das
add
or
icebp
fbld
pop
xor
xor
push
ret
mov
scas
xchg
icebp
pushl
push
xor
sahf
xor
rclb
xchg
xor
fwait
pusha
cld
fdivl
aaa
fbstp
arpl
sub
cmp
cmp
cmp
mulb
ret
clc
push
cmp
andb
xchg
xor
cmp
mov
mov
cmp
dec
cmp
xchg
jg
loop
cmp
mov
jecxz
ficoml
and
pop
ds
data16
aas
fs
imul
aas
jae
jecxz
call
xchg
pop
cld
stc
and
sub
xor
enter
mov
rorl
push
out
xor
in
jg
repnz
xor
xor
and
daa
xor
cmp
inc
xor
push
xor
nop
icebp
pushl
imul
xor
lea
xchg
xor
xor
fisttps
jecxz
xor
push
test
mov
xchg
xor
xor
adc
sbb
sbb
sbb
mov
sub
sub
xor
jecxz
in
incl
xor
xor
xor
xor
xor
xor
xor
fbld
mov
mov
mov
xor
xor
xor
xor
xor
sbb
pushl
jp
mov
xorl
out
aaa
leave
clc
aad
push
jp
aaa
cmp
insb
cmp
arpl
xchg
leave
sub
jbe
cmp
sbb
sbb
and
and
sub
mov
jmp
xor
jp
test
mov
mov
repnz
cmp
dec
sbb
xor
dec
cmp
test
xchg
arpl
fistpll
ss
dec
cmp
cmp
cmp
insl
xchg
mov
cmp
cmp
add
scas
nop
icebp
cmp
mov
sub
cmp
add
dec
ds
ds
mov
aas
dec
xchg
movsl
imul
wrmsr
and
cs
xor
inc
xor
xchg
mov
xor
jle
xor
lret
mov
xor
aam
fidivrl
in
dec
xor
cmpsl
repz
stc
xor
test
lret
push
add
clc
dec
sbb
mov
lret
outsb
pop
xchg
clc
xchg
sub
cmp
inc
js
jle
xchg
icebp
xchg
xor
mov
mov
ret
clc
test
aad
in
adc
dec
ss
cmp
fs
push
xchg
jb
cmp
cmp
dec
push
fisttps
outsl
cmp
jne
jnp
subb
cmp
inc
cmp
mov
outsl
xchg
mov
in
jmp
lock
dec
sbb
ljmp
orl
insb
cmp
cmp
cmp
cmp
cmp
sub
sbb
mov
cmp
push
ds
ds
clc
mov
aas
adc
and
dec
aas
push
aas
call
bound
outsb
xor
jno
icebp
jo
mov
inc
daa
xor
jg
mov
cld
lds
in
cmc
xor
xor
shlb
jmp
xor
mov
test
cli
lret
mov
adc
cld
ja
loope
xor
aaa
jnp
mov
inc
xor
or
cmp
add
push
cmp
lcall
push
ljmp
lcall
inc
cmp
mov
mov
pop
cmp
outsl
pop
shll
xchg
ss
sub
andl
test
or
cmp
cmp
cmp
push
enter
aas
cmp
scas
push
addr16
mov
cmpb
cltd
cmp
cmp
cmp
xchg
aaa
lret
cmp
sub
jo
call
ret
leave
cmp
or
js
lock
or
adc
xor
pop
and
cmp
xor
xor
add
xor
sbb
xor
jns
mov
out
push
adc
sbb
das
ss
or
mov
mov
aaa
pop
dec
pop
cmp
xor
lret
inc
sbb
cmp
cmp
cmp
mov
jg
fisubl
imul
cmp
cmpsb
cmp
cmp
cmp
test
lahf
add
inc
cmp
aas
iret
aas
loope
fisttps
aam
add
cmp
xor
test
mov
fbstp
icebp
mov
inc
movsl
push
push
push
mov
push
cmp
hlt
xor
ss
aaa
gs
pop
sub
sarl
icebp
cmp
cmp
cmp
orb
inc
scas
or
jp
mov
xor
out
adc
fs
outsb
and
into
sub
xchg
icebp
mov
cmp
jb
jnp
lock
shrb
cmp
out
sbb
fwait
daa
dec
pusha
or
or
adc
and
jmp
mov
xor
pushf
or
test
mov
inc
mov
mov
mov
cmp
mov
xor
jb
mov
mov
pop
and
hlt
mov
nop
rorl
inc
adc
mov
int3
mov
jl
xor
cmpsl
mov
mov
mov
mov
les
sub
into
fdivs
fs
loopne
call
out
adc
or
adc
xor
cmp
mov
push
scas
inc
xor
push
xor
xor
test
xor
xor
divb
fs
xchg
xor
movsb
xor
mov
mov
mov
rorb
xor
ret
loope
in
in
xor
xor
and
xor
clc
or
or
shrb
movsb
icebp
inc
shlb
in
sbb
add
and
dec
stos
pusha
xor
enter
outsb
cmp
fnstsw
cmp
sub
pop
shrb
pop
jo
mov
sub
xor
xor
shlb
xor
xor
xor
xor
sbb
mov
xor
cwtl
incl
shlb
lock
sbb
and
sub
sub
xor
dec
rclb
ficomps
push
leave
jo
stos
sbb
aas
push
shlb
outsl
mov
add
sbb
xor
movsbl
into
repz
cld
cmp
inc
xor
mov
xor
pop
dec
jecxz
xor
and
xor
into
insb
push
mov
xor
xor
xor
xor
ljmp
cwtl
mulb
jo
pop
push
addr16
inc
sti
xchg
or
jl
pushf
xor
sub
push
pop
jo
nop
ljmp
and
mov
decl
sbb
xlat
pop
inc
pop
push
xchg
xchg
sbb
pop
sub
pavgb
scas
bnd
inc
inc
pushl
xchg
arpl
mov
cmpsl
inc
mov
or
mov
xor
sbb
je
in
call
cmc
ja
sub
test
dec
movsb
cmc
nop
fnsave
call
ja
adc
mov
push
jne
sahf
in
adc
push
sti
decl
repnz
or
insl
mov
lods
aad
jl
lahf
mov
cmp
sub
sbb
int
xchg
pusha
cmp
add
insb
lods
xchg
dec
inc
and
aam
jmp
fcoml
aas
scas
mov
aaa
stos
dec
sahf
aad
cmp
mov
ficompl
pusha
and
jl
mov
aam
adcl
cmp
sub
call
or
adcb
dec
aaa
fists
mov
je
imul
adc
mov
std
pushl
mov
lcall
sub
xor
out
add
or
call
xor
adc
and
sbb
aam
and
roll
xor
or
imul
decl
fcomip
mov
mov
leave
adc
test
push
aas
jbe
sahf
insb
call
inc
mov
insl
push
jecxz
or
jle
mov
insl
mov
in
sub
inc
jne
sub
jle
jnp
pusha
fiaddl
xchg
ja
xor
push
dec
stos
adc
mov
incl
lea
cltd
mov
add
in
mov
jge
pop
lds
mov
jae
sbb
call
fs
lahf
or
in
cmc
cmp
int3
icebp
je
enter
push
into
pop
mov
pushl
inc
cs
push
insl
cmc
jo
sub
dec
mov
nop
xchg
push
shrb
std
or
sar
stc
lcall
ret
mov
cmc
mov
cmpsl
inc
aad
jae
sbb
and
adc
fildll
cmp
ret
insb
push
jns
pop
mov
mov
ljmp
insb
insb
lahf
adc
push
xchg
adc
test
pop
fwait
ljmp
jmp
aad
sub
fadds
daa
mov
mov
lahf
jno
add
shrb
pusha
idiv
dec
pusha
lods
push
cmp
lahf
into
xchg
inc
scas
iret
and
dec
adc
mov
sub
roll
clc
push
je
cmp
ljmp
mov
cmp
fstpl
ficomps
mov
push
popf
imul
lcall
data16
push
in
inc
sbb
dec
jno
cmc
es
lods
mov
adc
repnz
fsubs
lcall
jmp
mov
mov
mov
xchg
inc
fdivr
mov
ret
loope
and
call
cmp
cmp
ds
push
push
mov
gs
adc
jmp
dec
sti
mov
push
push
aaa
popa
fst
inc
pushf
xor
mov
loopne
shlb
lcall
cmp
xchg
xchg
fsubr
imul
jg
push
jmp
test
incl
in
aas
jl
dec
push
or
push
or
sbbl
aaa
mov
xchg
sub
mov
xchg
cmpb
shlb
movsb
jp
bound
cmpsb
ljmp
fdivr
dec
iret
in
push
outsl
cmpsb
inc
add
insb
sbb
or
stos
push
sbb
xor
cmp
cmp
dec
xchg
data16
bound
mov
enter
push
outsl
jo
jne
push
cmovl
andb
jmp
std
in
push
lret
scas
pop
or
out
sub
or
andb
xor
mov
aaa
lods
mov
mov
mov
dec
movsb
iret
jl
enter
ds
inc
push
dec
push
decl
in
mov
clc
test
xor
lods
adc
jbe
adc
shrb
stos
xchg
cmp
aas
shrb
lret
or
xchg
lret
lods
das
add
les
pop
inc
or
out
lods
push
call
iret
jle
movsl
or
pop
mov
aam
cmp
sub
adc
jno
push
jg
dec
jp
pop
jmp
daa
inc
sbb
push
mov
pop
nop
adc
popa
jae
mov
lret
pop
xor
shll
and
xor
and
ss
jmp
call
push
xchg
rcrb
fmulp
js
aam
pop
mov
sub
and
testb
pop
mov
adc
dec
rorl
incl
js
test
add
loopne
pop
lock
gs
sub
jg
in
lods
pop
jns
loopne
pop
call
fs
push
imul
mov
jge
mov
stos
jne
or
mov
sar
or
mov
scas
push
jmp
ljmp
jno
mov
filds
flds
std
pop
adc
push
or
call
aaa
mov
call
loop
sub
dec
out
movsl
ljmp
dec
out
aaa
inc
sbb
and
lcall
clc
je
xchg
shl
cmp
push
xchg
insb
std
add
lret
sbb
jno
incl
push
xchg
cmp
xchg
mov
inc
mov
andb
scas
ds
fidivrs
outsl
loope
jo
icebp
sbb
repz
pop
lcall
lret
push
mov
stc
notl
loopne
mov
je
inc
push
xchg
dec
lea
shll
lcall
jo
sahf
movsl
into
or
je
aam
pop
cmpsb
jmp
jmp
dec
pop
call
lds
mov
and
outsb
insb
mov
insb
adc
cltd
and
xorb
clc
loopne
ljmp
cli
cmp
jecxz
xchg
cld
xor
push
inc
xchg
loope
fidivs
inc
add
call
aas
pop
ja
jl
jne
pushf
mov
ret
adc
xchg
mov
pop
add
pop
decl
pop
div
mov
repnz
subb
or
incl
movsl
xor
cmc
mov
xchg
cs
daa
xorl
mov
test
dec
nop
fimuls
loopne
je
movsb
repz
ljmp
and
pop
loopne
jmp
and
pop
jns
jecxz
mov
xlat
or
mov
mov
in
scas
mov
in
mov
cmp
xchg
dec
push
mov
jg
mov
cwtl
test
jno
call
xchg
movsb
mov
or
repz
decl
push
idivl
incl
or
push
ljmp
decb
fcoms
inc
fst
fdiv
push
jae
mov
je
pusha
mov
inc
fiaddl
incb
sbb
dec
cmpsl
xchg
shl
xchg
mov
add
std
into
pop
ret
sub
popl
push
xchg
daa
add
js
pop
rorl
popf
iret
pand
fwait
jb
repz
adc
decl
repnz
xchg
push
sub
mov
mov
pop
pop
xchg
xchg
push
jmp
out
and
incl
pop
js
pop
add
cpuid
inc
dec
testl
jp
jg
incl
icebp
lods
add
fcmovnu
pop
push
jmp
xor
test
neg
fwait
add
les
xlat
push
in
mov
sete
xorl
jg
ds
jns
push
mov
in
cmc
cmovae
pop
dec
sub
mov
cmp
cmp
aas
decl
jge
fisubs
cmp
inc
add
mov
xor
push
xchg
es
sub
in
mov
pushl
mov
cmp
icebp
pop
out
pushf
mov
sti
cltd
fldcw
xchg
mov
xchg
cmpsb
inc
mov
outsb
sar
cmp
bound
cmpsb
rcrl
mull
jmp
jbe
cmpsl
sub
cli
mov
cmp
cmp
pop
dec
jl
xor
adc
outsl
outsl
mov
decl
mov
pop
sbb
jmp
jne
inc
je
and
repnz
into
lcall
cld
mov
pop
bound
clc
ljmp
sbb
addb
pop
pushl
pushl
pop
jo
cltd
cmp
cli
addl
aas
jg
addr16
out
ret
lret
xlat
ror
ret
incb
in
mov
insb
xlat
pushl
xchg
dec
sub
mov
mov
shr
xor
push
adc
pusha
test
jl
in
daa
movsl
pop
mov
mov
mov
and
sub
mov
push
jecxz
cmp
in
mov
add
cmp
lods
adc
into
ss
jns
or
lods
push
mov
dec
inc
pop
in
inc
push
and
mov
sti
into
inc
inc
popf
subb
mov
push
mov
and
lcall
outsb
insb
rclb
dec
jns
cmp
add
mov
push
jg
daa
sbb
inc
imul
jecxz
fwait
mov
cmp
xor
decl
mov
jg
out
xchg
dec
ja
lret
jo
adc
jbe
dec
lcall
dec
sti
stos
and
fcompl
int3
mov
shll
jnp
lea
or
cmp
movsb
mov
dec
inc
add
xor
pushf
decl
inc
iret
pop
mov
push
mov
xor
orb
fmuls
add
loopne
dec
out
xor
sub
lcall
and
icebp
stc
ljmp
in
sub
sub
pusha
add
call
rcrb
lds
arpl
pop
add
inc
cwtl
push
in
push
std
call
cmc
adc
push
jp
adc
and
cmp
or
pop
repnz
inc
jmp
mov
iret
cmp
sbb
leave
call
pop
pop
sub
mov
out
decl
mov
mov
cmp
decl
xchg
ljmp
bound
push
inc
mov
rorb
jae
fistpll
cli
in
test
call
in
pop
cmp
mov
sub
das
movsl
pop
and
subl
adc
sub
inc
inc
out
xor
sbb
pushl
cwtl
test
sbb
les
loope
ret
cmp
jb
xor
jb
mov
xchg
movsl
mov
jne
repnz
pushl
cwtl
pop
inc
dec
pop
pop
dec
cmp
scas
sbb
sub
in
xchg
add
jbe
dec
std
cmp
ljmp
mov
pop
cwtl
xchg
dec
and
call
lods
mov
imul
inc
outsl
idivl
mov
ret
push
pop
loopne
dec
je
cli
cmpsl
xor
mov
leave
int
cmp
pop
rol
adc
insl
and
jb
add
out
xchg
sbb
pushl
out
lods
mov
mov
inc
insl
fisubs
pusha
int
push
shl
cli
mov
icebp
nop
sbb
adc
lock
cwtl
dec
mov
fwait
pop
test
add
cmp
addr16
xor
mov
bnd
fildll
inc
sub
dec
lods
mov
fs
in
xor
test
cmp
mov
lcall
cmc
xor
dec
mov
sub
jno
cmpsl
fimull
mov
add
xchg
pop
int
lret
xchg
lds
daa
pop
push
pop
xchg
push
scas
popf
mov
and
decl
into
loop
cmp
lds
adc
sbb
shr
in
dec
incl
and
arpl
mov
pop
subb
aam
fidivs
pop
mov
or
fs
pop
mov
cmp
fldenv
jns
mov
mov
ret
jecxz
lahf
mov
sub
mov
out
lock
rep
dec
fildl
pushl
out
mov
fs
dec
mov
xor
ret
xor
jmp
lods
dec
mov
ljmp
pop
mov
mov
lods
into
mov
lods
cmp
jecxz
mov
xlat
lea
mov
or
adc
in
pop
sub
ljmp
sbb
daa
xor
cmp
cmpsb
push
push
and
rol
mov
pushl
loope
jns
negl
in
xchg
jne
xchg
inc
cs
jns
sbb
xlat
in
mov
dec
mov
push
and
cld
cmp
mov
or
push
adc
jge
sbb
enter
mov
xor
mov
ljmp
pop
jae
lcall
dec
repnz
or
jnp
lcall
lret
and
jl
pop
sub
pushl
test
push
std
push
adc
fidivs
enter
out
cwtl
je
dec
inc
add
push
std
fcomip
cmp
or
dec
int3
enter
push
xchg
pop
xor
ljmp
shr
in
call
xchg
cmpsb
pop
inc
push
xchg
fmuls
lds
xchg
scas
psrld
ljmp
xor
cmp
push
xlat
cltd
jle
sub
push
iret
and
mov
jle
cmpb
pop
mov
lret
les
jl
xor
out
outsb
pop
inc
dec
lret
inc
icebp
cmpsl
pop
or
inc
push
xchg
imul
sbb
shlb
sub
dec
cmp
pop
jbe
test
pusha
jge
add
mov
inc
push
xchg
nop
loopne
rclb
nop
hlt
in
out
add
sub
emms
mov
mov
jne
ljmp
jmp
xor
dec
adc
cmp
add
mov
inc
pop
int3
repz
push
dec
jg
in
jmp
std
xcrypt-cbc
cmpsl
push
inc
into
roll
or
test
icebp
fbstp
es
ljmp
daa
aad
fldenv
cmp
mov
mov
into
lock
leave
mov
sbb
pushl
out
loope
jg
mov
bnd
mov
lcall
pushl
pop
jb
xlat
inc
sub
mov
lahf
xor
cmp
xchg
pushf
out
mov
xor
ret
push
mov
xchg
and
add
mov
arpl
mov
cld
mov
mov
stos
pop
adc
gs
fs
sti
mov
popf
dec
jmp
ljmp
in
repnz
popa
in
stos
mov
inc
adc
es
fs
ja
in
mov
sbb
cld
bound
mov
sar
mov
pop
adc
call
xchg
and
push
and
fidivs
push
mov
pushl
std
and
cmc
bound
adc
jp,pt
inc
push
or
push
loopne
sbb
das
pushf
lcall
mov
xchg
jg
inc
scas
pushf
sub
cld
mov
cli
pop
mov
inc
and
aas
inc
sbb
aaa
rclb
pop
mov
fwait
mov
jne
clc
inc
push
dec
sar
decl
inc
shrl
xchg
lods
inc
out
or
mov
fiaddl
mov
xlat
popf
rcl
lret
fnstcw
xor
lret
jnp
jmp
cltd
out
ja
les
stos
mov
dec
cmp
xor
imul
inc
cmpsl
aaa
sbb
pushl
push
jge
jecxz
mov
ljmp
xor
add
shl
sbb
addr16
pop
hlt
mov
shll
xor
cmp
jnp
loopne
pop
cmc
stos
incb
mov
ficomps
mov
mov
mov
mov
pop
adc
scas
mov
and
xor
dec
inc
push
pop
call
in
xlat
int3
aam
mov
js
adc
lahf
pusha
fs
fsub
adc
jmp
lods
jge
movsb
call
aam
data16
cwtl
std
and
jge
aas
movsl
cmp
out
testb
jmp
push
out
test
or
jle
das
cmovle
adc
inc
rcl
ljmp
sbb
adc
loope
dec
js
call
imul
jmp
out
cli
jp
aam
outsb
pusha
jb
in
sbb
mov
frstor
xchg
mov
lcall
jo
out
pop
mov
and
mov
or
data16
mov
pushl
and
mov
xor
je
imul
push
addr16
mov
in
mov
decl
pop
sbb
jp
pushf
aam
push
fiadds
xlat
enter
mov
add
ljmp
pushl
lods
arpl
movsl
subl
jmp
add
cs
mov
decl
rcll
xor
out
gs
mov
pop
test
test
out
pushl
mov
pop
sbb
inc
jbe
push
inc
fistpl
ficompl
scas
je,pn
inc
jne
adc
call
cmpb
mov
jg
cwtl
adc
fisttpll
bswap
ljmp
subl
inc
mov
fcoms
pushf
lcall
jge
into
call
adc
mov
jge
loope
jge
jmp
and
lret
pushf
pusha
pushl
push
movsl
mov
js
pop
adc
in
ja
das
shlb
jp
aaa
jb
cmp
int3
outsl
pusha
pop
pushl
mov
xor
and
pushf
mov
mov
mov
call
xor
fsubr
out
cwtl
imul
dec
mov
add
push
adc
cwtl
mov
mov
arpl
mov
or
icebp
test
and
jmp
xchg
out
imul
rcrl
push
jbe
lcall
js
dec
sbb
test
lcall
test
jg
repz
out
test
push
mov
fisttps
ret
mov
mov
xorl
adc
mov
inc
mov
xchg
jbe
bnd
rcr
fiaddl
dec
pushl
cld
incl
loope
in
aad
push
stos
adc
xor
ficoms
push
cmp
jo
and
outsl
jg
pop
and
cmp
xchg
test
in
stos
pop
mov
pop
pop
mov
incl
pusha
inc
jmp
gs
push
in
jae
and
in
lahf
mov
push
std
incl
and
repnz
xor
mov
movsb
lcall
fcomp
ficomps
push
es
xor
push
cmp
mov
cmp
popa
lcall
loop
clc
xor
dec
add
inc
test
xchg
movsb
clc
pushf
int3
dec
test
pusha
inc
and
push
mov
movl
push
jmp
mov
push
jmp
sbb
and
std
ljmp
push
mov
add
shrl
pop
xchg
xorb
es
lcall
fcompl
cld
inc
mov
cli
adc
sub
leave
outsb
sub
call
nop
push
mov
sbb
fs
ffreep
shll
push
add
fwait
mov
jl
and
unpcklps
pop
shlb
xchg
mov
push
add
push
inc
ljmp
mov
pop
aaa
ds
shl
or
in
jne
jbe
stos
cld
cmp
xchg
mov
push
or
loop
mov
mov
insl
out
outsl
lret
out
scas
pop
stc
jge
mul
and
es
cmp
int
dec
fwait
js
push
bound
adc
dec
push
into
lret
jnp
out
lods
ret
jnp
int3
fwait
jb
mov
sbb
pop
test
push
lods
cltd
outsb
jle
cs
popf
mov
cld
mov
jae
jmp
rcll
add
ret
es
push
sbb
adc
xchg
push
fsubr
push
test
cltd
loope
mov
mov
sbb
ljmp
push
push
int3
call
xchg
mov
cmp
xchg
cmc
mov
jo
lcall
pop
fbld
add
adc
je
je
lds
decl
xchg
cmp
sahf
arpl
scas
das
js
ret
mov
mov
lcall
push
call
rorb
fsubrs
pushl
daa
lods
fs
sti
sub
push
inc
xchg
push
dec
cmpsb
and
fiaddl
pop
lcall
cltd
add
xor
cmc
mov
and
add
icebp
out
pop
loope
cwtl
fimull
scas
imul
cld
and
dec
push
outsb
fbld
push
mov
dec
shr
gs
mov
in
aad
mov
je
ror
jge
bound
bound
incl
push
test
cmpl
popa
inc
sahf
jb
in
xchg
jmp
mov
mov
add
popf
daa
mov
sar
xor
or
mov
lods
loopne
jmp
dec
insb
push
lock
call
enter
popa
cmc
mulb
pusha
mov
mov
adcl
jmp
pop
clc
mov
fdivr
call
or
adc
cmp
lods
mov
push
in
jb
mov
add
aaa
sbb
xchg
jp
pop
push
mov
pusha
sub
cmp
sub
clc
lcall
pop
and
test
mov
sbb
aam
sti
shlb
push
push
rorb
lea
and
jo
fiadds
cmc
pop
inc
ljmp
sbb
mov
cmp
cmc
lahf
shlb
out
cs
sub
mov
xlat
addr16
or
cmp
gs
pop
mov
iret
sbb
es
push
mov
pop
cmp
movsl
sahf
adc
ucomiss
out
test
outsb
andl
mov
push
out
notb
ja
or
popf
push
add
push
pushf
push
in
pop
out
ret
les
push
add
jmp
xor
jmp
fstpl
and
out
pusha
adcl
mov
cli
popa
lcall
push
adc
fwait
sbb
pop
ds
leave
or
leave
mov
cmp
lea
jp
add
jmp
cltd
imul
add
jg
cmp
adc
test
and
incl
pop
daa
push
pop
xor
pop
scas
int
daa
rolb
std
shld
pushf
outsl
sbb
pushl
sub
pop
popa
test
inc
pusha
jmp
fsubr
or
dec
and
jmp
sbb
test
xor
jns
adc
xchg
inc
fcoms
aaa
mov
ja
mov
incl
scas
scas
push
hlt
jb
fistpl
sbb
scas
daa
imul
ljmp
xchg
incl
mov
cmc
movsb
xor
add
lcall
push
mov
pushl
xchg
dec
or
dec
insl
and
or
sbb
sti
in
sbb
clc
inc
mov
std
incl
sbb
push
sbb
js
flds
adc
dec
jmp
push
jb
gs
pushl
sbb
int3
and
rcll
addr16
pop
lret
jle
inc
add
cli
mov
dec
push
cwtl
mov
pop
add
mov
pop
and
aad
sub
push
aaa
pop
out
push
clc
xchg
jb
jmp
cmp
cmp
fisubl
pop
add
fs
cmp
out
push
and
rorb
pop
dec
lods
sbb
or
movsb
add
mov
mov
jmp
nop
sar
mov
xor
or
lcall
jle
test
jl
out
adc
cmpsb
add
sbb
repz
cld
ljmp
rep
mov
fistl
cmp
les
std
mov
jno
lcall
pop
enter
inc
dec
jbe
cmc
mov
pushf
inc
xchg
popf
mov
jle
dec
mov
out
add
aam
pop
in
cmp
cli
and
fucom
jno
loopne
mov
decl
dec
mov
sub
ss
or
mov
mov
sbb
call
cmpsl
xor
mov
outsb
fidivs
add
cld
popf
xor
out
stos
xor
xchg
ja
pushl
fwait
and
jl
lods
mov
mov
test
sbb
mov
nop
out
mov
loop
sbb
sahf
xorl
xchg
mov
mov
cmp
arpl
clc
xor
xor
cmpsb
adc
pop
scas
cmp
loop
pop
cld
lcall
pushf
add
sbb
xchg
cld
xchg
mull
rcrb
rorl
pop
nop
repnz
xchg
pop
fcoms
jg
inc
mov
mov
mov
push
in
jle
cmp
mov
jns
sub
hlt
xlat
test
push
insl
test
xchg
jbe
aad
pop
div
lods
xchg
jae
or
pop
jmp
push
push
in
mov
and
loop
data16
mov
pusha
mov
cs
jecxz
push
js
or
sub
push
leave
fcompl
lahf
dec
and
decl
je
scas
call
sbb
add
lret
lock
add
xchg
mov
adc
inc
pusha
adc
js
lock
pushl
scas
xchg
rcrb
jl
mov
add
ljmp
sub
lods
mov
out
jle
sarb
fsubrs
mov
dec
push
jns
pop
pop
xchg
pop
and
pushl
jno
pusha
mov
jmp
lret
dec
xor
clc
rorb
sar
das
adc
cmc
mov
inc
mov
push
jp
pop
ret
pop
mov
mov
push
fisttpll
and
sbb
negl
decl
dec
les
pop
or
xor
notl
adc
hlt
adc
dec
lcall
adc
xchg
or
popa
outsl
add
add
xor
pop
lret
ret
or
jmp
add
stos
push
aam
xor
sbb
adc
bound
outsl
fidivrl
fcomip
jl,pn
inc
call
adc
and
scas
mov
mov
pop
das
jg
iret
mov
inc
decl
lcall
fistpll
or
or
pusha
and
inc
jmp
or
insb
das
fnstsw
std
out
into
jp
pop
cli
cltd
inc
and
cmp
pop
rcll
push
cmc
fcomip
inc
adc
fmuls
inc
jns
mov
push
cli
sub
dec
leave
jg
fistpll
stos
lods
xchg
insl
int3
hlt
lods
mov
push
ja
add
ja
xor
push
ficoms
mov
jae
pop
daa
mull
pop
mov
leave
sbb
sbb
mov
or
sbb
push
out
dec
daa
dec
nop
ficompl
cmp
push
hlt
jmp
adc
into
cmp
popa
hlt
shl
cmp
in
adc
pop
mov
enter
cmpsb
fistpll
add
xor
aam
cmp
xchg
jp
test
lods
and
repz
lcall
xchg
add
les
push
les
xlat
cltd
pushf
addr16
or
cwtl
fldl
mov
jmp
in
dec
inc
repnz
sbb
sub
jbe
pusha
out
subl
cmovg
outsl
in
jmp
aaa
cmp
repnz
pop
mov
in
jno
xchg
jne
call
ret
or
and
inc
insb
sbb
cmp
jp
enter
push
or
mov
xchg
pop
sub
outsl
push
jne
mov
dec
into
cwtl
mov
outsl
popf
call
xchg
jae
gs
jmp
push
mov
loope
insb
adc
mov
jmp
sub
out
outsl
adc
pop
sbb
xchg
mov
aas
scas
push
sbb
mov
sti
mov
sub
decl
ret
xor
pop
enter
lds
mov
ljmp
or
ljmp
adc
into
arpl
in
push
inc
cmp
std
mov
jmp
movsl
loop
push
rcrb
sub
jns
mov
mov
mov
fstpl
or
xchg
bswap
sbb
mov
xor
or
xor
fdivr
cmpsb
incl
xbegin
inc
add
dec
mov
cmp
or
dec
gs
push
adc
hlt
cmpsb
adc
push
mov
addb
cmp
cld
mov
lahf
pop
cmp
inc
xchg
dec
ret
adc
movsl
xchg
in
xor
icebp
adc
stc
cmp
je
data16
mov
rorl
pop
icebp
xor
and
outsb
jmp
jmp
inc
push
loope
push
pop
xlat
popa
fsts
jmp
push
testl
addb
fwait
mov
imull
imul
fwait
inc
int3
lods
shrl
decl
adc
mov
bound
scas
stos
push
call
test
jmp
dec
mov
ljmp
push
mov
cmp
cmpsb
dec
xchg
pop
pop
cmpsl
sti
sahf
mov
ljmp
sbb
add
jmp
pusha
pop
insl
cmp
adc
add
add
mov
pushl
mov
push
fdivrp
inc
insl
or
adc
xor
adc
ljmp
jecxz
sub
ret
or
lock
push
adc
loop
lcall
pop
push
push
sbb
lcall
xchg
pop
popf
jo
incl
popa
jnp
mov
mov
insl
dec
les
push
sti
adc
sbbl
les
mov
call
push
lea
mov
cmp
test
xchg
out
jp
cwtl
push
icebp
add
test
cmp
cmp
test
out
out
mov
jne
push
les
jmp
pushl
movsl
repnz
add
or
pop
push
cmp
and
mov
pop
in
dec
dec
enter
jl
pavgb
pop
xchg
test
js
jne
call
and
inc
push
movsb
pushf
dec
jmp
mov
mov
dec
jno
inc
or
repnz
frstor
insl
jns
mov
push
shll
lds
call
add
mov
enter
xchg
jnp
pop
mov
push
call
and
jmp
das
insb
mov
sbb
push
je
add
rcll
push
shlb
clc
out
fisubs
or
inc
xorl
sbb
mul
mov
arpl
ljmp
jp
xor
jmp
or
fldt
pop
loope
sbb
pop
and
fnsave
jns
jle,pt
or
sbb
mov
pop
call
enter
adc
jmp
or
loope
repnz
data16
enter
xor
aad
xchg
test
pushl
aad
jp
aam
pop
mov
mov
or
test
repnz
and
incl
std
push
mov
push
ror
push
jne
dec
xor
push
xlat
aam
stc
push
test
mov
sub
lcall
jge
das
lahf
inc
and
cmc
stos
jno
jb
insl
push
dec
rorb
push
jmp
iret
push
mov
and
negb
fisttpll
nop
stc
loope
test
mov
fistpll
orl
in
mov
lret
out
addr16
je
cltd
sbb
adc
push
aam
lret
inc
push
ds
push
lcall
xchg
lret
mov
test
mov
mov
sub
and
dec
pop
stc
fs
aaa
mov
lods
cli
jg
fbld
imul
test
push
and
pop
pushl
aam
jmp
fidivs
les
mov
addr16
icebp
and
lcall
pop
cmp
push
pop
rorb
or
xor
test
arpl
fistps
cli
jg
inc
or
push
mov
cli
mov
push
out
clc
pop
mov
jle
cld
add
cmc
mov
mov
push
fstp
pop
negb
jb
das
addb
mov
lods
ljmp
fidivl
out
fcom
and
ret
ljmp
dec
dec
mov
out
imul
xor
iret
mov
and
cmpsb
adc
ljmp
xor
jo
cmp
vminss
out
cli
mov
subl
pop
leave
scas
in
decl
call
pop
cltd
ss
jecxz
pop
andb
jmp
mov
aad
add
cmp
sti
daa
mov
push
sbb
cmpsb
hlt
clc
xchg
and
dec
out
leave
fcomps
daa
stos
incl
outsb
leave
push
movsb
adc
test
stc
fwait
push
or
mov
add
outsl
xor
dec
xchg
mov
outsb
iret
mov
aad
cld
scas
cltd
ds
addl
iret
jns
cmp
in
inc
leave
adc
and
int3
insl
jo
sbb
repz
outsb
xchg
cwtl
jbe
xor
sti
mov
mov
iret
addr16
insl
mov
and
std
dec
push
push
add
cmpsl
pop
adc
mov
loopne
cmp
jg
xchg
push
pusha
or
sub
jmp
xchg
in
xor
adc
decl
adc
scas
loopne
repnz
scas
push
xor
lock
cmpsb
and
push
in
rcr
stc
inc
dec
fdivr
mov
mov
lock
outsb
xor
inc
pop
mov
imul
lcall
sbb
ljmp
cmp
fildl
mov
mov
or
dec
mov
push
sbb
lcall
jge
into
inc
inc
fstps
mov
es
sub
sub
cmpsl
movsb
adc
sbb
hlt
push
clc
mov
jbe
xchg
imul
cmp
gs
mov
push
sar
ljmp
in
cltd
ret
jp
mov
inc
dec
push
pushf
movsb
sbb
rorb
pushl
cli
sahf
mov
pop
and
cmpsl
adc
jecxz
int
sbb
pushl
lahf
mov
nop
xchg
jb
daa
mov
jb
adc
mov
mov
xchg
mov
xchg
ss
add
jp
stc
in
xchg
stos
cld
test
loopne
mov
out
js
xchg
sub
clc
cmpsb
inc
xchg
mov
sbb
pushl
add
add
mov
cmpsb
mov
gs
jp
dec
mov
lcall
xor
sub
cltd
mov
jp
in
mov
test
mov
xchg
xchg
xchg
loope
cli
incl
mov
cmpsw
dec
jmp
and
xor
decl
mov
js
jne
outsb
push
mov
sub
sbb
ss
popa
xchg
pop
jmp
jp
dec
call
pop
fstpl
cmp
xor
ljmp
ljmp
push
xchg
fsubrs
mov
icebp
dec
call
jmp
stos
and
jle
lea
neg
mov
das
inc
xchg
jno
sbb
insl
out
ja
inc
in
ds
incl
jp
das
mov
sbb
sbb
mov
shl
pop
or
addr16
lcall
add
lret
mov
arpl
test
adc
arpl
aad
inc
sti
inc
popf
ja
add
loopne
in
into
hlt
cwtl
push
add
ljmp
add
lds
out
loope
frstor
std
insl
xor
ret
sbb
jns
decl
inc
dec
or
xchg
and
test
stos
or
les
dec
mov
lahf
pop
rolw
cli
lret
dec
xchg
ljmp
rclb
std
lret
mov
jge
jg
fcmovbe
jle
mov
jns
sbb
add
in
add
lcall
fidivrs
test
popf
into
cmp
push
test
roll
clc
mov
or
movsl
and
inc
dec
arpl
inc
push
pop
repnz
ds
push
jo
xchg
mov
jecxz
outsb
inc
add
popf
test
ss
test
mov
stos
add
mov
mov
inc
fistpl
fistl
or
cltd
mov
repnz
loopne
repnz
push
mov
sub
cmpsl
inc
fs
adc
incl
dec
jne
lahf
stos
daa
or
inc
xchg
imul
sub
fists
or
mov
mov
sub
adc
subl
add
adc
in
jmp
dec
aam
testl
movsl
adc
call
dec
iret
imul
add
rcr
das
push
insl
bound
daa
scas
incl
cmp
shl
mov
xchg
dec
cmp
loopw
dec
fildll
mov
sbb
xchg
call
xchg
mov
mov
scas
imul
cmp
cld
xor
shl
xlat
sub
call
mov
adcb
cwtl
addb
ret
loop
mov
sbb
mov
pop
pop
pop
mov
pop
call
cmp
mov
sbb
mov
pop
push
xchg
adcb
and
sbb
xchg
jl
xor
mov
into
pushl
push
mov
sbb
mov
icebp
mov
push
xlat
inc
pop
int
sar
push
cld
pushl
dec
in
mov
adc
test
mov
aaa
out
nop
mov
neg
mov
pop
add
mov
lods
cmpxchg
leave
cwtl
test
jl
daa
pop
fdivrl
call
cmp
xchg
sub
cmpsb
cs
jnp
add
ss
jae
inc
mov
xchg
std
call
int
jl
sbb
xchg
sbb
insl
sahf
push
jbe
in
hlt
sub
jg
and
stos
les
repz
push
xchg
movsb
mov
lahf
shr
cld
repnz
mov
aam
jo
or
les
xchg
jg
jb
mov
jnp
cmpsb
addr16
aaa
pop
mov
sub
cmp
dec
test
mov
decl
jns
and
test
jnp
mov
jle
pop
xchg
scas
ret
sahf
push
test
aaa
decl
insl
pop
jl
xor
pushf
in
out
dec
dec
adc
mov
xchg
mov
add
mov
push
aad
ja
sahf
xlat
mov
sbb
xchg
aam
cmpl
inc
or
decl
add
andb
into
pop
fmull
pop
dec
and
dec
mov
test
call
popf
cmp
dec
outsb
push
shr
aas
or
pop
les
jo
orl
and
mov
and
addl
cld
push
adc
je
mov
pop
push
lea
pushl
push
sahf
and
inc
sti
sarl
cmp
add
sbb
rclb
fwait
mov
enter
jge
es
out
insb
test
cltd
mov
cmp
jg
clc
cmp
out
jg
add
sbb
xor
ret
sub
stos
or
je
xchg
ret
incl
xchg
jl
into
pop
or
pop
push
stc
je
aad
dec
dec
sahf
stos
insb
mov
pushl
pop
and
push
or
scas
icebp
mov
jno
fbstp
mov
sbb
sub
lret
cmpsb
push
insb
mov
je
push
adc
scas
fdivrs
aad
icebp
xorb
mov
lods
and
insl
xchg
mov
out
lahf
imul
cli
out
xchg
cmp
mov
adc
xor
cmp
loope
jmp
pop
nop
add
outsb
rep
cmp
fnstsw
sub
daa
adc
sbb
incl
and
sbb
movsl
hlt
leave
jo
adc
ja
ds
jcxz
jg
pop
ret
lcall
mov
fisubrl
arpl
xor
jbe
sbb
icebp
call
cmpsb
mov
pop
xlat
jmp
scas
pop
jl
dec
sub
push
pusha
push
daa
mov
movsb
cmpsb
dec
sbb
sub
jmp
pop
js
mov
lock
repnz
cmpsl
sbb
add
in
mov
mov
incl
jmp
stos
mov
aad
arpl
jne
inc
cmp
jb
std
popa
xor
add
cmpsb
mov
lret
add
xchg
jbe
sub
repz
push
fs
ljmp
mov
enter
pushf
adc
inc
sub
out
jns
adc
push
cmp
jl
sub
imul
repz
sub
stos
dec
stos
or
ret
aaa
clc
ficompl
std
push
pushl
jl
cmpsb
pop
inc
mov
adc
inc
shlb
stos
lret
fisttpll
jecxz
inc
fwait
push
ret
ljmp
sar
pushf
rorb
das
sahf
cld
nop
or
in
lds
call
ja
xchg
in
lods
testb
fnsave
lret
inc
or
pop
enter
pushl
dec
aad
sub
loopne
or
push
push
outsl
pop
push
int3
inc
xlat
aaa
and
jnp
pop
rcr
pusha
adc
xor
lret
adc
jl
inc
mov
in
pushl
test
repnz
ljmp
pop
jns
jb
mov
mov
pop
dec
jo
xchg
shl
or
jg
adc
add
out
int
jl
sbb
mov
fdiv
jbe
incl
cmpsl
cmc
aas
sbb
mov
out
mov
mov
iret
jbe
adc
mov
out
cmp
pushl
popa
dec
aam
loope
mov
cmp
mov
adc
test
lea
fcoml
insb
pusha
push
push
xchg
dec
subl
insl
daa
or
fdiv
arpl
in
jb
sar
jg
decb
js
adc
push
push
and
or
leave
add
and
add
cmp
pushl
sbb
aas
ret
dec
mov
inc
lds
hlt
or
in
enter
lcall
jb
mov
inc
loop
sub
push
mov
jg
and
incl
sti
mov
jae
es
sub
mov
cld
and
jnp
jle
xor
sub
sub
decl
add
fptan
mov
pop
lea
pop
je
mov
lods
mov
call
adc
lcall
mov
dec
and
frstor
dec
les
fisttps
cmp
or
jb
ljmp
dec
cmpsl
xchg
in
in
xor
loope
fsub
std
pop
inc
jae
adc
dec
mov
sub
fadd
pop
xlat
mov
sbb
ljmp
mov
mov
icebp
xor
sub
mov
in
jmp
in
call
lret
mov
xchg
jae
sbb
push
lock
outsl
sub
lcall
inc
add
aaa
jbe
inc
outsl
cmp
add
jae
inc
cltd
fucomip
mov
icebp
inc
or
fs
aas
xchg
push
push
mov
mov
jl
pop
mov
add
push
pop
fucomp
lret
sar
jp
sbb
jnp
jne
or
es
mov
imul
aad
movsl
push
or
xchg
xchg
mov
mov
shlb
pop
jmp
jg
cmc
add
pop
xor
std
mov
jge
mov
dec
mov
lcall
xor
loopne
std
dec
dec
js
mov
shr
and
xor
adc
negb
call
dec
mov
mov
bnd
js
aaa
hlt
or
sbb
adc
push
cmp
stc
mov
movhps
xchg
aas
sub
sbb
sbb
inc
push
decb
lods
pushl
jg
pushf
and
ret
sarb
icebp
jp
add
jb
outsl
out
int
xor
in
call
dec
adc
push
jecxz
mov
jge
dec
mov
xchg
mov
or
mov
andb
pop
mov
fcoml
mov
ficomps
inc
movsb
xchg
inc
inc
jg
test
push
xor
mov
addr16
sbb
addl
xor
mov
mov
push
lcall
out
fadds
pop
and
push
js
cmpsb
ret
outsl
test
fchs
pmulhuw
sbbl
lods
adc
inc
lock
mov
movb
and
insb
mov
outsl
cli
mov
fidivrl
ss
mov
cmp
mov
adc
sbb
pop
mov
push
cmpsl
xchg
negb
lcall
int
inc
ja
sub
pop
push
test
lret
mov
fildll
stos
pop
out
xchg
jbe
mov
and
stc
sbb
pusha
xchg
sbb
ljmp
stc
and
mov
cwtl
inc
cmp
cli
jb
xchg
jo
or
add
sub
pushl
scas
dec
lahf
or
aad
and
jno
hlt
mov
scas
aam
popf
xchg
sbb
jb
test
mov
mov
data16
lds
insb
mov
mov
loopne
xor
js
lcall
pushf
jo
jmp
sbb
lret
repnz
into
faddp
mov
stos
jg
sub
jge
sub
add
test
out
movsb
sub
sbb
shrb
add
push
test
jae
cmp
aaa
pop
ja
imul
aam
jns
mul
jmp
jp
mov
push
push
or
sti
jecxz
rorb
sbb
js
test
sbb
test
lcall
test
pop
pop
cld
dec
movsl
mov
incl
mull
mov
ja
mov
mov
cmp
imul
jmp
adc
mov
in
inc
insl
repz
xchg
xor
testl
ljmp
dec
arpl
xchg
inc
hlt
push
lret
mov
in
test
push
nop
aaa
into
sbb
mov
dec
ret
sbb
add
push
enter
mov
jg
cmp
ljmp
add
out
jne
fists
in
add
popf
push
mov
mov
jg
push
out
fimull
adc
mov
pop
lahf
jb
or
jae
push
fsts
stc
push
mov
fsts
call
sub
aam
out
jp
out
xor
lcall
aaa
lret
je
mov
shll
lds
cmp
insb
jp
and
mov
cs
popa
dec
pop
mov
mov
inc
cld
jl
cmpsl
arpl
dec
lods
cmp
jecxz
pop
repz
int
cmc
idiv
iret
jle
movntq
das
in
add
mov
xchg
jg
and
in
push
out
popf
and
cltd
js
and
mov
push
outsl
sti
inc
jl
nop
notl
jns
xor
loopne
or
sbb
stos
dec
or
cmpsl
add
jbe
jno
xchg
notl
adc
js
test
iret
icebp
dec
sbb
das
icebp
jmp
jmp
testb
jmp
cltd
jmp
push
push
call
loopne
or
fistps
lcall
jae
test
fisttpll
lret
daa
rol
insl
repnz
jl
inc
inc
lcall
cmp
lcall
mov
mov
cmp
ds
imul
call
mov
das
jns
cmpb
sub
pop
xor
jbe
push
pusha
outsl
cli
ljmp
inc
shlb
leave
bound
adc
fbld
sar
jmp
fadds
fwait
add
outsl
fwait
lret
rcl
push
jl
jb
xchg
cmpl
mov
cmpsl
flds
xor
in
or
lahf
fbstp
ja
shl
inc
fwait
mull
jl
ss
push
mov
add
mov
xchg
cs
inc
js
inc
call
add
sbb
push
in
sub
dec
pop
jo
test
into
mov
outsl
lcall
push
sub
cmc
popa
mov
fbstp
loopne,pn
mov
jno
insb
push
fimull
mov
lret
xor
push
insb
adc
lret
sbb
xchg
mov
xchg
test
subb
and
inc
and
push
pop
push
shlb
into
pop
xchg
mov
xor
add
jne
call
and
sarl
push
mov
mov
and
push
fwait
sub
andb
aam
pop
push
addr16
aaa
lds
mov
popf
push
push
orl
sahf
mov
and
ret
mov
xchg
in
sub
pushf
or
movsb
jecxz
call
lcall
test
add
mov
jo
push
mov
js
fsubrs
pushf
sbb
pushl
lds
add
fnstsw
inc
adcb
enter
xor
fiaddl
insb
mov
add
pop
add
test
adcl
mov
mov
rolb
push
or
je
pusha
xor
int3
arpl
jp
cltd
sub
push
pop
jmp
dec
xchg
add
enter
mov
aad
mov
push
sbb
push
mov
subb
adc
insl
adc
lret
and
fbld
xor
fcomip
jmp
or
cmp
mov
mov
jmp
mov
push
imul
ror
push
pop
lea
pop
sub
mov
jno
cld
test
lods
pop
icebp
ja
xor
aaa
jg
repz
rclb
push
ret
xor
push
imul
push
ret
inc
pop
mov
adc
test
inc
test
aam
movsb
add
xchg
ljmp
shll
cwtl
into
ficompl
xchg
cld
insl
inc
sbb
add
push
mov
pusha
icebp
iret
xchg
ret
cmp
decl
add
sub
lret
mov
shlb
in
sub
mov
call
test
mov
test
jecxz
pop
shll
jmp
subb
pushl
rolb
imul
nop
xchg
xor
or
xor
in
scas
fstpl
jmp
clc
mov
insb
divb
idivb
xchg
inc
push
popa
das
xor
dec
mov
incl
stos
leave
int
dec
fwait
and
outsb
xor
jecxz
or
mov
inc
mov
mov
roll
ljmp
icebp
or
in
outsl
and
push
fcoml
sub
adc
cs
out
rcr
mov
inc
adc
cs
cld
repnz
jl
cwtl
iret
subl
jp
call
fmulp
out
outsb
or
inc
rolb
xor
sbb
mov
movsb
and
incl
or
lcall
aas
add
lret
stos
push
xor
lcall
jp
inc
hlt
rorl
std
sbb
aaa
into
cmp
pop
fimuls
rcrl
scas
push
clc
mov
repz
cmp
and
mov
pushf
data16
add
mov
pop
jle
arpl
jmp
fcomps
xor
dec
adc
jnp
fistpl
call
add
add
fisttpll
pop
lcall
out
inc
inc
xlat
mov
call
imul
sbb
fisubl
jbe
dec
mov
test
inc
xchg
mov
jg
cwtl
pusha
xchg
test
dec
xchg
fildll
xchg
cwtl
lret
ret
imul
incl
test
jbe
mov
in
cld
push
test
test
out
cltd
out
incl
lcall
jle
cmp
cs
out
divb
xchg
push
push
mov
cmpsb
decl
pushf
call
out
mov
dec
leave
in
jg
iret
mov
inc
jmp
sub
jmp
fs
addb
rcrl
aad
xor
bound
mov
pop
insb
sub
fs
loopne
shll
inc
xor
mov
repnz
out
fidivs
cmp
loope
loop
call
inc
pop
jmp
push
outsl
or
xor
xor
imul
pop
cmpsl
call
test
lods
aaa
fldenv
aad
push
xchg
sbb
dec
leave
aas
out
mov
popf
pop
mov
inc
adc
cld
xchg
mov
push
sahf
adc
int
cwtl
mov
out
lods
test
test
inc
dec
jle
lods
dec
push
add
cmp
shrl
inc
repz
add
aas
xor
jmp
daa
xor
cli
in
xchg
ds
xchg
std
xor
adc
and
popa
aam
jmp
ljmp
mov
jae
ja
inc
ret
lret
mov
jl
clc
or
add
stos
test
mov
pop
cmp
and
xchg
sbb
dec
leave
scas
sbb
mov
adc
imul
mov
pop
mov
into
sbb
mov
lahf
and
or
sbb
popf
sub
mov
fnstenv
cld
mov
mov
sahf
fs
mov
pop
and
mov
inc
cs
or
cmp
dec
pop
shr
out
fcoms
js
mov
mov
xchg
orl
popa
and
mov
cltd
mov
dec
outsb
or
inc
test
xor
incl
sub
movsb
mov
dec
pop
incl
fdivs
dec
and
xchg
sub
jmp
std
xlat
xor
dec
lcall
cmp
cwtl
cmp
mov
stos
mov
jb
xchg
imul
ja
dec
push
or
dec
mov
in
popf
aam
or
outsb
push
add
gs
lods
je
pop
lcall
push
cs
pushl
dec
popf
fidivl
mov
in
lret
shll
popf
stc
push
mov
xchg
jmp
notb
int3
xchg
sub
mov
adc
dec
stos
jne
in
mov
clc
aas
and
loopne
cmp
std
gs
push
dec
andl
lret
ds
dec
faddl
call
cmp
pushl
xchg
xchg
fsubrl
dec
fiaddl
cmp
mov
movsb
jecxz
hlt
pop
aas
lret
sarl
and
inc
js
sbb
jl
push
pushf
jecxz
stos
push
ds
mov
sbb
clc
call
out
ret
pop
push
push
and
scas
sbb
call
divb
int
cmc
sbb
icebp
and
movsb
orb
add
call
cwtl
and
mov
out
adc
sbb
rorl
scas
mov
es
push
stos
shld
push
gs
push
aas
mov
inc
cmc
adc
iret
insb
gs
or
mov
jmp
xor
push
iret
pop
ret
filds
or
pop
in
testb
jge
aad
jmp
push
bound
sti
mov
aaa
cmpsl
int3
xchg
testl
sub
decl
mov
add
xor
pop
or
aas
faddl
lods
pop
xchg
sarl
lcall
add
xchg
daa
xor
xchg
xor
sahf
cld
pop
in
cld
or
mov
incl
lahf
adc
add
and
xlat
lds
scas
pop
sar
nop
lret
dec
jnp
insl
adc
stos
cmp
inc
dec
mov
idiv
repz
mull
pop
scas
pop
mov
push
fs
add
inc
lock
mov
mov
movsl
mov
xor
adc
fs
div
enter
clc
in
adc
test
sbb
or
xor
ljmp
ljmp
testl
sti
jbe
pop
enter
pop
imul
pushl
mov
jmp
imul
dec
ficoms
js
test
or
fwait
xorb
pushl
test
xlat
jle
les
cmp
pushf
jp
jp
and
or
rol
pop
dec
jmp
sub
int
dec
stos
or
cmp
fldl
int
imul
icebp
jmp
fistl
inc
or
scas
pusha
cmp
xchg
pop
push
pop
xchg
jmp
std
ret
adc
rolb
mov
aad
mov
push
dec
pop
nop
decl
mov
mov
mov
and
dec
idiv
decl
lock
jae
loop
cltd
lods
cmpsb
push
lds
loopne
shrb
iret
out
leave
push
xor
cmp
incl
cld
adc
jecxz
cmp
daa
cmp
and
add
lcall
fs
fs
std
ret
rcr
loop
push
fmul
dec
jl
mov
xchg
cmp
push
cmc
dec
mov
lcall
repnz
sbb
lods
rcpps
xor
mov
shrl
push
pop
mov
dec
or
call
sbb
jne
mov
out
stc
lcall
in
dec
movsb
mov
cmpsb
js
jp
leave
adc
dec
cmp
jbe
push
jo
xor
mov
ljmp
pushf
pop
in
test
enter
pop
push
sub
mov
aaa
inc
shl
les
pushl
insl
mov
push
scas
lock
xlat
xor
outsb
push
adc
incl
xchg
mov
shrl
pushl
js
into
sbb
cwtl
out
ja
mov
and
hlt
sbb
cwtl
push
ds
pushl
jecxz
xor
xor
jo
sub
pop
and
push
jg
decl
mov
or
pop
inc
dec
lock
ljmp
pop
jecxz
divl
sbb
int3
lock
add
scas
fstpt
das
mov
pop
lahf
movsl
stos
pop
lods
xchg
ds
adc
jno
jle
add
lcall
cmp
mov
push
ret
sbb
popf
decl
push
std
repnz
je
xor
in
jo
mov
add
add
bound
in
in
jg
pushl
std
rorl
mov
pop
xor
lock
ljmp
gs
xor
adc
jnp
out
fiaddl
jl
movsl
lahf
stos
lret
dec
lea
and
dec
cmp
mov
push
or
shrb
clc
jle
cmp
testl
xor
inc
cmp
mov
lea
sbb
imul
pop
cs
push
inc
sub
push
std
inc
lcall
test
mov
cs
shrb
call
dec
insl
les
dec
lods
jno
xchg
push
cs
outsl
push
inc
dec
incl
enter
ror
add
push
cmp
je
addr16
jne
dec
incl
out
add
xchg
aaa
ficomps
hlt
push
xor
lea
sbb
mov
pusha
jle
inc
push
push
push
movsb
popa
aam
aas
push
mov
or
gs
mov
hlt
aaa
std
incl
outsb
insl
or
sbb
push
jo
and
lcall
hlt
ss
call
push
aam
inc
push
lret
push
lcall
das
cli
mov
push
popa
idivl
mov
dec
in
cmp
add
lcall
dec
sub
jne
cmpsl
jae
jmp
mov
fisubrl
js
cmp
out
mov
or
mov
jns
add
sub
bound
mov
jle
or
push
adc
mov
cmp
push
out
enter
rcll
sbb
lds
mov
cwtl
jno
pop
xchg
lahf
sub
xlat
jne
es
daa
rcr
lea
xor
stos
push
mov
loope
pop
push
movsl
xor
sub
enter
mov
aad
jmp
dec
lea
fiaddl
jbe
fnstcw
lds
mov
mov
sub
aam
cmpl
incl
fisubl
stos
mov
insb
test
mov
outsb
mov
xor
in
mov
mov
out
jo
test
scas
ficoml
sub
xchg
popl
pop
or
dec
lret
stos
jmp
mov
xor
mov
mov
cmp
and
aaa
imul
lea
decl
add
divb
scas
push
ffreep
adc
jp
dec
inc
ficoms
lcall
add
sahf
pushf
and
push
jecxz
mov
dec
pop
inc
pop
sbb
jbe
and
ret
xchg
cmp
mov
shll
pop
push
loopne
scas
sub
push
mov
inc
les
decl
inc
ja
aam
mov
add
and
jmp
push
inc
ss
dec
jge
outsl
jae
call
std
jb
sub
pop
js
sub
inc
loopne
adc
jae
jge
xchg
fsubrs
decl
enter
or
push
mov
rclb
pop
jae
sub
jne
pushl
cwtl
pop
add
or
mov
fdivr
lret
push
xor
shrl
lcall
xchg
xor
sub
xor
stos
mov
mov
xor
xchg
lcall
ss
add
fwait
pop
gs
lock
pop
sub
inc
and
inc
xor
incl
or
lahf
test
sub
xor
loop
rcrl
cmovo
adc
jg
repnz
sub
decl
test
test
insl
mov
pop
aad
xchg
mov
pop
mov
cld
mov
into
shlb
popa
adc
and
lods
fs
pushl
fdivr
sbb
fldt
cmc
mov
dec
pop
xchg
test
cmpsl
cmp
mov
std
pop
lahf
xchg
dec
pop
xorb
stos
mov
pop
dec
out
xchg
jecxz
or
pushf
arpl
test
push
add
scas
pushl
mov
xor
dec
or
stos
outsl
cmp
dec
je
adc
in
mov
mov
jg
ja
fldenv
xchg
adc
out
xor
dec
xchg
push
gs
ljmp
mov
jge
add
mov
or
lea
incl
inc
xor
es
shl
push
pop
xchg
sub
loope
out
sti
leave
stos
push
fwait
jle
and
in
cmpsl
inc
push
cmpsb
push
out
aam
push
std
add
adc
and
mov
mov
adc
xchg
jp
pop
mov
jecxz
jo
cmpsb
jg
mov
addr16
std
inc
cmp
mov
and
dec
adc
jge
std
push
loopne
mov
lods
test
pop
inc
add
sahf
fmulp
pushl
xchg
add
stos
test
xor
push
sub
popf
movsb
xchg
mov
lds
xlat
jg
ljmp
incl
int3
arpl
int3
repz
bound
sti
push
in
daa
ja
in
inc
movsl
outsb
lcall
cmp
out
iret
sbb
fmuls
loope
sbb
notb
mov
jne
nop
cmp
sub
dec
dec
xor
aad
fidivl
fsub
sahf
or
incl
call
mov
dec
sbb
ss
xchg
mov
xor
call
push
mov
push
and
sub
cli
dec
bound
mov
mov
jmp
dec
outsl
jmp
int3
sub
cmpsl
sarb
adc
aam
mov
jo
push
ljmp
push
les
sub
out
bound
mov
mov
mov
fadds
cmpsb
jg
cltd
data16
das
stos
mov
addr16
addr16
mov
lock
push
stos
mov
or
call
xchg
sbb
cmp
call
sbb
jecxz
jmp
iret
test
xor
xor
cmp
jmp
data16
mov
adc
xor
lock
adc
mov
cmp
and
dec
icebp
in
call
sbb
loop
push
cli
sbb
shrb
inc
inc
push
inc
js
fadd
xchg
mov
mov
cltd
sbb
mov
outsb
or
sub
cld
mov
jb
jo
add
cmc
mov
mov
cmp
mov
mov
iret
add
mov
ljmp
jmp
addr16
pushf
adc
sub
sub
dec
roll
push
pushl
mov
out
jmp
add
loop
idiv
ret
daa
sbb
and
incl
and
mov
inc
add
add
dec
pop
cld
xor
mov
xor
add
incl
add
ds
stc
jg
and
test
adc
dec
jne
ror
push
push
adc
cld
mov
dec
mov
adc
ss
mov
dec
mov
adc
outsl
clc
sub
fwait
es
stos
cld
stos
outsl
sbb
pushl
add
das
icebp
xchg
enter
jg
sub
push
idivb
pop
aaa
xor
and
xlat
in
jmp
rorb
lcall
sub
pop
pop
adc
push
pushf
les
inc
in
lds
sbbl
jg
sub
mov
and
imul
dec
lock
pop
call
stos
jmp
mov
arpl
scas
pop
mov
fiadds
enter
icebp
jo
lcall
xchg
pop
mov
test
scas
sahf
add
out
pop
and
add
leave
cmp
ds
lcall
jmp
insb
mov
jbe
inc
jne
push
mov
xchg
ret
xchg
and
fcomip
sub
add
ret
bound
test
arpl
fmuls
divb
pushl
or
std
call
das
mov
mov
jb
sbb
mov
sub
les
popa
mov
or
es
inc
inc
clc
fildll
sbb
jp
data16
leave
add
je
xchg
leave
sub
mov
mov
pushl
fstps
outsl
sbb
pop
aaa
add
rcr
mov
push
out
incl
or
adc
clc
and
aaa
push
cmp
push
mov
jmp
lcall
push
inc
mov
pop
cmc
xor
mov
mov
pusha
nop
ret
cmpsb
fsub
ss
std
mov
or
jmp
pushf
fistps
je
lret
repz
inc
movlps
lret
xlat
push
sub
call
out
inc
mov
adc
push
mov
dec
sub
sub
decl
inc
push
mov
mov
ds
pop
nop
dec
cmpsb
and
sub
inc
movsl
lahf
push
or
insb
enter
mov
mov
xchg
add
inc
push
dec
out
ljmp
mov
pop
ret
dec
arpl
push
inc
imul
add
lods
ret
xchg
jge
xor
adc
in
mov
sub
imul
mov
and
inc
je
adc
pop
idiv
dec
clc
insl
dec
jae
and
or
sbb
pop
sbb
lcall
popa
mov
xchg
xor
cwtl
xor
in
loopne
test
test
popf
add
incl
dec
out
inc
xor
mov
arpl
cmp
sar
jge
cli
aam
cmp
mov
cs
test
add
stc
push
jae
cld
pop
adc
push
ficompl
les
fidivs
xchg
arpl
inc
mov
test
cmp
or
cmp
mov
cld
aaa
std
fcoms
fistps
jge
or
fcoml
inc
sub
add
push
dec
jg
adc
lods
cmpb
xchg
xlat
sahf
addr16
cmp
jl
pushf
xchg
gs
cmpsb
ljmp
fs
inc
sub
popf
mov
push
iret
cmpb
mov
addl
das
pusha
push
imul
xor
lcall
test
ja
xor
add
pop
lcall
mov
xchg
popf
call
inc
push
pop
lahf
sbb
mov
mov
decl
push
mov
inc
outsb
xlat
cmp
sub
mov
leave
lods
sbb
call
les
scas
add
mov
repz
pop
dec
mov
incl
jle,pt
or
cmp
arpl
adc
sar
decl
sub
call
and
stos
xchg
shrl
test
lret
xchg
cmpsl
ds
lea
lods
mov
xor
dec
xor
lods
xorb
jmp
pop
mov
jo
or
and
call
loopne
add
lods
lds
inc
or
add
sti
cmp
cli
cmpsl
xor
cld
pusha
fwait
repnz
lahf
mov
cmp
pop
jmp
lcall
cmp
loop
testl
es
xchg
sbbl
pop
push
jge
idiv
mov
jno
jo
pop
pushf
outsb
dec
mov
pop
ds
enter
push
stc
mov
gs
std
call
pushf
lds
lea
lea
movsb
push
fimull
leave
push
fucomi
push
test
in
cld
sar
call
clc
ja
jne
pop
jmp
and
cwtl
aad
mov
mov
jmp
xchg
xor
inc
dec
decl
or
scas
fidivrs
cwtl
bound
xorl
into
dec
push
mov
pushl
aas
xorl
jnp
mov
inc
lods
aas
jp
and
nop
xchg
xchg
inc
dec
sub
jb
mov
rcrb
decl
mov
jecxz
sbb
sub
in
xor
add
ljmp
dec
shl
outsb
loopne
sti
ss
sbb
ja
call
cmpsb
mov
mov
xchg
testl
pop
pop
and
or
push
mov
cmp
xor
pop
pop
sub
repnz
pop
dec
outsl
mov
sahf
decl
cmpsb
mov
lods
inc
adc
sub
jle
decl
xorb
mov
ret
push
ljmp
loope
pop
imul
xor
mov
lock
incl
inc
cmp
jno
fs
pop
add
into
mov
sub
lcall
mov
imul
sbb
dec
lods
push
mov
daa
add
imul
scas
ja
jmp
push
ljmp
jbe
loopne
xchg
fildll
adc
xchg
dec
outsb
fimull
faddl
jbe
sub
inc
push
push
mov
add
icebp
adc
cmp
pop
push
push
inc
sbb
call
shr
call
adc
aad
inc
adc
ror
xchg
rclb
insl
pop
xor
pusha
xor
call
mov
push
clc
cmp
cmpsl
xchg
ret
mov
pop
test
in
hlt
cmp
push
movsb
xchg
call
decl
mov
add
scas
scas
pop
insl
clc
movsl
imull
aas
or
hlt
loop
outsb
nop
jmp
daa
mov
jg
popf
dec
mov
jmp
popa
fucomip
pop
pop
mov
lcall
arpl
popf
ficoms
xor
mov
lret
and
jmp
and
pop
xchg
add
aas
sarl
clc
test
dec
hlt
sbb
into
pop
fnstenv
mov
jno
xchg
jge
sbbb
adc
ljmp
mov
jecxz
mov
jns
mov
insl
js
inc
inc
shr
jp
call
clc
pop
loopne
or
movsb
dec
xchg
xlat
push
loop
aam
sar
pop
or
mov
call
adc
sarl
push
aas
repnz
aad
lahf
movsb
movsb
sbb
iret
in
movb
jmp
lcall
add
scas
xchg
lret
xchg
adc
inc
addr16
cmp
mov
fbld
and
cmp
inc
mov
jl
jnp
jb
cmp
call
mov
xor
outsl
push
jmp
jmp
cmp
test
icebp
jl
push
mov
out
sahf
adc
gs
mov
adc
lahf
and
in
xchg
ficomps
xchg
dec
fldt
xor
call
jg
inc
pop
mov
push
insl
dec
cld
xor
jbe
sbb
lahf
icebp
dec
mov
bound
pushl
mov
sbb
cld
addr16
jae
clc
push
out
pminub
dec
jnp
psubsw
lcall
sti
mov
sti
xchg
pop
jmp
inc
lock
bt
mov
mov
jne
dec
mov
arpl
push
ret
sbbl
dec
xlat
ljmp
dec
aam
inc
dec
pop
pop
in
add
push
idivb
dec
ret
cltd
lods
xor
mov
decl
insl
mov
mov
arpl
lret
jl
jl
mov
lcall
add
imul
pop
fstp
fdivrs
dec
lcall
sbb
pusha
daa
xchg
ud0
sbb
sub
jge
adc
int3
aam
out
ficoms
sub
add
out
cli
call
cmp
dec
rcl
cs
test
mov
adc
in
iret
or
mov
mov
adc
movsl
sbb
ljmp
xchg
pop
je,pn
jne
xchg
ljmp
clc
push
dec
je
stc
ret
jge
mov
jecxz
mov
pusha
add
call
mov
sti
repz
lods
fs
lds
filds
mov
fmull
inc
xor
pop
mov
addr16
inc
ljmp
call
or
nop
mov
xchg
add
rolb
fs
jne
adc
cmp
enter
ljmp
aad
cmp
xchg
inc
inc
sbb
push
adc
emms
sahf
in
imul
mov
test
xchg
ret
or
push
sub
jb
adc
incl
mov
xor
mov
shrb
std
cmpsl
xchg
sbb
fcomp
addr16
mov
cmp
xchg
mov
iret
mov
aam
loope
xchg
push
dec
das
jbe
or
pop
inc
mov
and
pushl
pusha
mov
roll
push
test
pop
roll
or
adc
cltd
rolb
xchg
cmp
ljmp
push
mov
xchg
pop
mov
bound
daa
push
cli
sbb
ds
and
push
add
jg
dec
push
lret
xor
dec
iret
pop
xor
lea
repnz
push
bound
sbb
mov
dec
inc
pop
xchg
pop
inc
mov
mov
pop
loopne
dec
sub
xchg
sti
adc
push
sub
jno
test
xchg
push
xor
inc
sbb
sbb
test
cmp
mov
sbb
jg
jae
mov
lea
pop
pop
sbb
pop
lret
or
xchg
loopne
insl
pop
test
or
jg
inc
xchg
fidivrs
add
popf
mov
and
lods
or
aam
sbb
jecxz
in
das
push
ja
lret
inc
xor
outsl
lock
ljmp
or
icebp
push
inc
sti
xlat
in
xchg
insb
sub
cmc
out
into
ss
fwait
decb
pop
xchg
adc
pop
out
outsl
push
out
mov
cmp
xor
leave
ljmp
imul
jb
dec
test
cs
sub
dec
aam
sarb
test
incl
adc
inc
jge
es
mov
inc
inc
out
bound
jg
movsl
insl
fcompl
addr16
stos
cmc
mov
cmp
and
call
cwtl
or
sbb
jle
mov
mov
dec
mov
sbb
es
sub
imul
jnp
lods
ja
mov
xchg
fwait
int3
dec
test
insb
jg
sub
pop
test
jnp
xlat
hlt
pushl
outsb
mov
pop
out
sub
cmp
and
fstpt
out
icebp
inc
and
stc
pop
sbb
mov
inc
iret
cmp
mov
mov
call
jnp
xchg
lock
fdivl
test
test
aas
mov
fistpll
lcall
outsl
out
adc
and
nop
ror
shll
popf
sar
pushl
or
pop
mov
ds
les
pusha
sarb
call
sub
dec
lods
or
mov
push
es
pop
mov
mov
and
xchg
fcomip
call
adc
push
mov
sub
out
in
jo
mov
add
out
cli
mov
pushl
out
add
xchg
data16
inc
cmp
outsl
dec
mov
cwtl
push
shrl
mov
and
cmp
nop
push
and
push
cmp
lods
mov
psubb
call
cmc
pop
movsb
mov
les
loop
les
insl
idivl
mov
ljmp
push
inc
mov
jno
neg
xchg
shll
pop
jno
jge
je
jns
and
ljmp
xor
insb
jb
jecxz
lods
or
pop
xchg
inc
jmp
xchg
dec
stos
int
push
and
shrb
call
std
and
outsl
mov
sahf
gs
je
dec
movsw
pop
das
dec
cmp
push
shrl
incl
mov
xchg
sbb
add
push
cwtl
ja
jg
icebp
imul
or
mov
jle
jo
fidivs
sbb
incl
add
jne
cld
adc
arpl
mov
nop
mov
inc
jg
lcall
add
push
out
lods
rcll
xor
jmp
and
in
or
imul
mov
mov
clc
fnsave
jbe
insb
dec
lcall
fsubs
popa
in
ja
and
or
aad
dec
roll
jo
psllw
lcall
cmp
cmp
das
loope
or
pop
xchg
mov
sarb
decl
ror
gs
xchg
push
ret
out
inc
pop
cmc
jns
and
movsl
cld
cltd
mov
shl
mov
inc
arpl
fcoml
movsb
mov
idivl
repz
in
lods
sub
mov
mov
sti
dec
call
mov
into
sbb
add
aas
jo
and
adc
aad
inc
dec
sbb
hlt
jmp
fistl
xor
sti
outsl
mov
les
cli
shll
out
imull
jg
mov
cmp
insl
insl
test
popa
rorl
or
lods
shl
test
xor
scas
cli
dec
loope
aas
and
cmp
frstor
into
das
imul
ret
jge
jp
mov
lret
mov
data16
adc
push
lahf
cs
fst
call
popf
out
outsb
cmp
pop
push
inc
mov
iret
in
push
jecxz
adc
cmp
test
stos
in
scas
pushl
cld
pop
popf
pop
or
adc
xchg
xchg
aaa
ljmp
lcall
decl
ljmp
daa
out
std
adc
jnp
mov
fimull
leave
dec
push
enter
out
mov
push
in
cwtl
or
adc
inc
pop
je
ret
out
mov
outsb
cmp
sti
les
stos
std
add
cs
push
adc
cmpsb
sbb
mov
js
jmp
or
hlt
rclb
lods
sub
addr16
inc
push
mov
jecxz
icebp
pop
mov
pushl
ja
es
mov
push
scas
mov
into
lock
icebp
mov
pop
cld
adc
ljmp
sub
lret
inc
xchg
pop
idivb
ret
icebp
xchg
push
incl
cmp
push
cmpsb
popf
ret
ret
insb
cmp
cltd
ljmp
xchg
pushf
imul
mov
jne
push
mov
jo,pt
call
aam
sbb
incl
daa
adc
cmp
and
mov
cmpb
call
mov
int
insb
xor
imul
ficomps
add
and
mov
mov
jg
decl
ret
mov
add
xor
xchg
test
js
push
fsts
dec
cld
and
lahf
sub
xor
sahf
pop
js
and
lahf
popf
xchg
stos
push
pop
or
decl
inc
jp
push
jle
and
shr
cwtl
xor
call
ljmp
rolb
iret
cmpsl
fs
xchg
dec
and
push
mov
pop
fdivr
arpl
lcall
jmp
xor
and
std
incl
data16
push
mov
mov
fimuls
into
cmpsb
or
imul
mov
cmp
jp
clc
sahf
or
adc
sub
fimuls
call
movsl
and
add
out
mov
icebp
add
gs
jno
fsubs
ljmp
cltd
popa
sub
shrb
and
movsl
xor
sti
test
add
lcall
faddl
adc
lcall
scas
pop
xchg
sbb
xor
push
fcoml
mov
outsb
into
and
push
test
mov
test
pushl
cmp
lods
adc
xor
xor
pop
cli
fisubs
inc
test
les
sub
clc
mov
xchg
ljmp
cmc
jg
clc
out
adc
sub
mov
sbb
jecxz
cmc
popf
mov
ljmp
jle
out
and
or
rol
in
ljmp
xchg
call
pop
ss
leave
pushl
xchg
mov
xchg
test
sbb
enter
incl
pop
dec
mov
jle
cld
cmp
xor
loope
and
cli
xchg
insb
dec
aas
xchg
xorl
leave
out
and
inc
dec
test
push
rcl
jle
out
cld
cld
lcall
mov
xchg
fdivrs
dec
inc
xorl
mov
push
inc
incl
jle
shrl
addl
lds
lea
addb
pop
push
jg
jecxz
jmp
mov
data16
jo
jmp
in
xchg
adc
mov
push
movsl
mov
jo
aas
testl
jg
addr16
dec
xchg
adc
outsl
pusha
pop
push
call
test
repz
sbb
repz
loop
add
and
pushf
sub
scas
cli
call
out
ja
in
stc
fimull
out
fisubrl
popa
flds
push
jmp
pcmpgtw
pop
fs
addr16
jge
sub
ljmp
add
jg
incl
popf
lahf
shlb
out
sub
aaa
ret
into
data16
pushf
leave
pushl
cmp
and
mov
jne
outsl
mov
clc
mov
pushf
les
lcall
aaa
lcall
add
jp
sub
jmp
lock
push
test
sub
mov
dec
inc
pop
xchg
xchg
orl
out
pop
fstps
fcompl
fucomip
addl
pop
cld
inc
pop
unpckhps
inc
jb
push
fisttps
and
popf
adcb
pushl
rorl
xchg
enter
cmpsl
xor
or
arpl
gs
outsb
mov
int
mov
or
mov
jae
push
add
ss
ficomps
jecxz
sbb
add
data16
lahf
stc
jl
in
inc
push
lods
mov
decl
fwait
sbb
dec
add
xor
mov
push
pusha
inc
jle
sub
in
ljmp
mov
jmp
inc
push
loopne
neg
outsl
outsb
pop
jg
cmpsl
fisubrl
popf
inc
lret
imul
nop
jg
hlt
mov
or
lcall
sahf
add
jg
aam
shrl
ficomps
andb
pop
ret
subl
jmp
inc
mov
rolb
cwtl
add
mov
test
addr16
mov
outsl
ds
jbe
loopne
out
fs
jg
push
xchg
cmc
and
cmc
loope
lea
pop
adc
fdivl
or
decl
jle
aaa
sahf
xchg
addb
test
aaa
iret
push
call
xchg
add
lcall
mov
in
or
pop
jnp
mov
fld
xlat
test
xor
push
and
out
shrl
xor
add
mov
in
loop
scas
lea
cli
jle
push
mov
jmp
xchg
scas
xchg
push
or
jae
xor
xlat
sub
dec
lret
push
movsb
xchg
sub
lcall
add
dec
into
std
js
mov
lds
adc
sahf
and
push
imul
jmp
lret
xchg
mov
pop
cmpl
xor
or
mov
push
mov
adc
pop
fstpl
and
xchg
lcall
into
lahf
push
mov
mov
cmp
push
push
sub
push
sub
call
jns
cmp
aaa
inc
jno
sbb
and
xchg
lret
or
pop
int
adc
xchg
aam
cmp
jae
out
sbb
mov
ljmp
insb
fcompl
cmpsl
arpl
push
shll
popa
mov
arpl
push
push
sbb
stos
loope
ret
inc
or
push
dec
hlt
fiaddl
mov
cmpb
andl
adc
icebp
leave
mov
mov
pop
jne
clc
inc
adc
dec
arpl
cltd
stos
insb
xlat
test
mov
cs
js
and
stc
xor
incl
repnz
mov
sub
add
pop
out
xchg
add
jge
hlt
pop
pop
jg
mov
pop
mov
cmp
add
into
xchg
icebp
jmp
xlat
ret
jmp
pushl
xchg
sub
mul
add
sbb
mov
mov
outsb
mov
pushl
std
call
add
loopne
jne
adc
pusha
call
ljmp
sbb
aad
jnp
inc
adc
or
inc
adc
xor
mov
mov
test
jecxz
inc
fiadds
std
ljmp
ss
xor
mov
ds
inc
adc
pop
and
cli
jg
bound
es
movsb
mov
sub
decl
sub
xchg
es
add
mov
adc
inc
mov
pushl
gs
in
xchg
es
adc
outsb
pushl
inc
leave
in
xchg
shlb
add
xchg
clc
faddl
and
sbb
hlt
xor
or
cmp
mov
pop
fldl
pop
addr16
int3
inc
sbb
lods
dec
jecxz
pop
or
decl
push
dec
or
test
jmp
icebp
out
cli
outsb
xor
cld
cmp
fistl
in
mov
jge
movl
push
or
dec
mov
mov
ljmp
sbb
xchg
into
mov
lahf
cmp
mov
in
pop
xchg
stos
mov
xor
hlt
stc
dec
out
mov
bound
nop
loope
mov
aad
out
ljmp
push
sub
lretw
jg
cli
imul
mov
aas
shr
ret
pop
lcall
lcall
inc
test
jmp
sub
lahf
mov
mov
nop
mov
call
cmpl
xor
xor
fidivrs
jg
pop
clc
pop
xchg
pop
pop
push
scas
clc
pushl
aam
ficomps
jmp
movsl
pop
pop
sti
cld
dec
push
push
ja
loop
jg
fimull
movsl
cmp
outsb
xchg
mov
pop
and
ljmp
dec
in
clc
dec
adc
and
mov
push
pop
inc
js
jecxz
imul
cltd
push
adc
pop
add
pop
push
lea
pop
cmc
push
ss
sbb
inc
mov
fisubl
je
pop
jmp
dec
insb
negl
outsb
xchg
jmp
ss
sarl
xchg
je
push
das
mov
ds
xchg
rcr
pop
daa
push
and
fdivrp
lcall
mov
cmpxchg8b
enter
dec
fwait
cld
lret
mov
mov
jmp
cmp
xlat
cmc
mov
movsb
int3
add
push
in
add
imul
adc
dec
rolb
pop
addb
push
rcl
test
ficompl
dec
movl
push
incl
pusha
loopne
push
aad
sbb
out
lods
int
jne
shl
loop
push
lret
push
pop
sbb
mov
jmp
push
ja
xor
nop
jnp
push
popa
mov
jne
sub
adc
ljmp
cli
pushf
xchg
or
mov
ss
push
sti
int
push
js
cmpsb
inc
inc
xlat
out
pop
repnz
jmp
jmp
cmpsl
cli
pusha
add
test
rorl
les
push
and
jg
push
dec
aam
pop
pop
test
push
or
dec
xchg
loopne
lret
xor
incl
rcll
cld
scas
lret
insl
push
out
xchg
aaa
jno
cld
scas
jmp
test
cmp
enter
add
out
fs
push
mov
cld
lea
pop
das
adc
je
std
test
stc
addr16
fucomi
in
pop
vminss
decl
call
sarb
fstpl
in
jmp
inc
sub
mov
adc
xor
pushf
js
mov
mov
xchg
xor
jno
jle
ljmp
jle
inc
jbe
cmp
pop
subl
fnstenv
dec
sbb
mov
mov
ljmp
push
pusha
rolb
iret
inc
shlb
shlb
aad
rcll
dec
sub
cld
mov
push
push
mov
scas
sub
imulb
pop
fnstenv
cs
push
repz
lcall
sub
pop
inc
aaa
imul
pop
bswap
push
icebp
and
jnp
and
fiadds
scas
ss
mov
pop
mov
dec
lcall
and
mov
fidivl
lret
insb
sbb
mov
notb
push
lods
ret
cwtl
adc
insb
adcb
add
das
cmp
push
loope
jmp
and
bound
lret
jmp
mov
testl
lcall
push
add
and
pop
bound
push
mov
out
jae
and
sub
std
incl
gs
imul
sbb
sti
adc
test
lcall
fyl2x
ljmp
mov
mov
mov
push
push
incl
cmp
loope
pushf
cmp
inc
insl
lret
aad
arpl
cmp
lods
mov
jb
decl
mov
out
inc
cmp
sub
inc
cmp
jmp
mov
adc
xor
jno
int
inc
pop
popa
xor
jmp
mov
cld
dec
add
shl
cs
iret
xor
lods
in
xor
repnz
cmpl
fcomip
lcall
popa
dec
mov
insb
popf
and
ret
xchg
clts
add
push
shll
lcall
ds
mov
add
xor
in
push
pop
stos
es
lret
inc
sar
or
pusha
in
dec
add
cmp
in
dec
ljmp
push
cmpsl
daa
test
and
aas
mov
xchg
cmp
lahf
scas
mov
lods
jmp
mov
cli
ret
inc
jns
ja
data16
loop
push
adc
dec
mov
xor
jo
sub
pushf
testb
mov
mov
adc
dec
xchg
lret
inc
mov
add
jp
sub
jbe
ljmp
scas
cmp
aad
jle
cmpsl
out
decl
mov
jns
lcall
out
aas
mov
and
das
clc
call
mov
pop
int3
adc
ficoml
mov
jp
mov
std
incl
jp
and
pushf
push
lea
xchg
jle
mov
decl
jne
xor
pop
xchg
cmp
dec
imul
ret
out
xor
in
and
dec
inc
jmp
imul
or
inc
aam
or
mov
idivl
and
xor
xor
pushl
push
jg
ljmp
or
dec
or
xor
jecxz
adc
and
jmp
pop
std
mov
ja
ret
lret
mov
push
dec
cmp
insb
or
cmpsl
jg
decl
inc
pop
add
mov
mov
mov
nop
cmc
movsw
sub
hlt
out
lock
lcall
push
mov
pop
cmp
and
mov
aam
jecxz
adc
testb
jb
decl
add
xchg
mov
jge
mov
push
push
dec
out
repnz
lods
leave
or
call
loopne
cs
fwait
cwtl
mov
cmpsb
ret
aam
jb
inc
rcr
dec
flds
xor
push
sbb
sub
dec
mov
ja
push
mov
cmp
into
push
bnd
outsb
mov
imul
push
ja
mov
jmp
and
cli
mov
in
push
into
add
addr16
pop
into
cmp
xchg
pushl
or
adcl
jnp
dec
and
jecxz
icebp
mov
pop
fs
lock
adc
popa
push
adc
and
std
dec
mov
mov
mov
test
dec
mov
or
mov
sbb
shlb
mov
incl
pop
imul
lods
addr16
fdivl
or
adc
call
pop
insl
mov
cmp
dec
lahf
cmp
mov
cmpsb
jg
jmp
pop
shrb
nop
jae
cmp
int
repnz
jg
rcrl
mov
fidivs
aam
adc
add
cmpsl
xchg
adc
mov
push
ljmp
cmpsb
mov
push
sub
ja
inc
jnp
jle
adc
dec
mov
sbb
or
jns
pop
pop
test
cmp
or
pop
dec
out
js
insb
mov
call
pop
in
loopne
xor
loope
sbb
test
add
pop
add
jae
sub
jle
push
jmp
push
pop
inc
movsb
cmp
popf
jmp
adc
pushf
movsb
and
ficoms
call
cmp
jg
dec
call
clc
jnp
jmp
xchg
cmp
mov
xchg
cld
cs
pop
add
mov
imul
cmp
lods
lret
mov
jg
dec
das
ss
dec
lcall
in
xchg
ljmp
jge
mov
jmp
bound
and
addr16
inc
ficompl
add
fcomip
lcall
xchg
sub
push
xchg
jbe
jl
addr16
push
inc
loop
fsub
jg
call
cmp
mov
cwtl
mov
and
stc
std
mov
ds
cmp
push
adc
jbe
and
lret
pushl
ss
xorl
int3
sbb
mov
ljmp
xchg
shll
push
sub
push
cmpsl
fidivrl
ljmp
cmp
mov
push
mov
scas
call
lea
mov
dec
dec
inc
adc
mov
push
adc
movd
mov
inc
dec
decl
xor
pop
insl
loop
push
push
pop
pop
xchg
or
sub
mov
mov
clc
inc
push
sbb
das
test
xlat
xor
faddl
add
pop
jecxz
mov
push
inc
xchg
or
mov
cli
shl
mov
call
fimull
sahf
sub
mov
mov
je
enter
mov
lcall
ljmp
cmp
out
ds
mov
inc
stos
call
mov
in
jnp
sbb
popf
inc
test
push
cmpsb
pop
fisubrs
decl
xchg
mov
or
jmp
mov
stos
jecxz
pop
pop
adc
lock
repnz
sbb
adc
jae
out
movsb
sbb
lcall
addr16
pop
aad
lcall
mull
xor
outsb
lds
jmp
sarb
jmp
xor
in
nop
ret
add
and
pop
pop
sti
add
aam
mov
loopne
dec
lea
xchg
dec
vpmadcswd
sub
mov
mov
clc
test
call
mov
push
xchg
lahf
das
add
icebp
in
mov
or
xor
mov
scas
or
xor
mov
cmp
xor
in
lret
xor
sub
loopne
lcall
in
xor
xor
addb
or
mov
mov
call
mov
les
xor
mov
mov
inc
xor
dec
insb
jnp
movsl
mov
lea
jg
test
lcall
jae
das
add
dec
arpl
sub
addr16
cmp
aaa
insl
int
ljmp
xor
ljmp
ret
stc
fsubrl
cmc
pop
and
das
mov
cmp
ffreep
sbb
sbb
mov
insb
out
ret
iret
out
cmp
sti
ffree
call
jmp
xchg
lea
lds
push
test
or
call
mov
dec
pop
jb
sbbb
stc
fldt
movsl
arpl
xlat
mov
call
or
push
fisubrl
xchg
pop
jne
cmp
movsb
mov
xchg
fmull
movsb
push
push
fildll
mov
adcb
addb
cltd
add
mov
pusha
push
mov
jp
clc
cld
inc
add
jecxz
mov
enter
or
lcall
push
ss
dec
shl
jp
popf
mov
js
add
mov
js
aaa
aas
incl
dec
lret
clc
and
dec
push
fcomps
pushf
inc
add
adc
shll
lcall
lock
push
rcrb
and
imul
cltd
jns
xor
repz
xchg
das
lcall
cmp
icebp
mov
push
mov
fimull
sbb
push
test
pop
adc
dec
clc
sbb
mov
jns
jbe
es
fcoml
sbbb
add
ret
cmp
mov
push
jb
jns
orl
push
and
pop
addr16
jmp
xor
adc
test
sub
push
decl
pop
add
pcmpeqd
pop
push
lret
dec
sbb
das
imul
push
mov
out
push
mov
call
lret
rcll
or
xor
lds
arpl
inc
mov
les
push
adc
call
sahf
insb
mov
jbe
mov
mov
dec
pop
sub
pop
add
mov
lcall
inc
xor
gs
cmc
loopne
fstl
cwtl
and
pop
je
pop
push
sub
add
mov
lods
or
imul
cmp
push
pop
adc
cmp
mov
lock
and
lea
dec
pop
aam
out
jge
mov
xchg
mov
push
arpl
jge
sti
lcall
push
xchg
add
pushf
pop
insb
imul
pop
rolb
outsl
iret
aad
jb
cmp
mov
decl
popa
aas
dec
popa
jle
dec
dec
push
aam
into
cmp
aas
ret
dec
add
incl
rcrb
movntq
je
int
lods
stos
push
cmp
inc
pop
sbb
out
jg
jmp
mov
shrb
movsb
mov
jle
shr
imul
ljmp
lcall
pop
push
inc
mov
adc
mov
sahf
lret
test
popa
mov
dec
adc
in
aaa
mov
adc
dec
jbe
pop
xor
sbb
push
push
push
imul
dec
mov
add
mov
and
testl
pop
jae
daa
or
cmp
sub
mov
orl
xor
dec
sbb
pop
outsb
or
dec
xchg
pop
dec
mov
pusha
call
dec
test
sti
in
ficoms
cltd
mov
xor
adc
xor
jnp
pop
adc
fildll
jg
movsb
xchg
mov
in
xor
idiv
or
icebp
mov
jg
push
test
in
daa
inc
push
mov
sub
adc
hlt
in
call
jmp
fucomip
daa
fsubs
inc
testb
imul
shlb
mov
mov
push
fimuls
add
adc
dec
jg
das
mov
insb
imul
movsb
fcomps
shr
mov
jne
cmpsb
test
adc
test
cld
int
jmp
xor
push
mov
sub
movsb
mov
ja
or
insl
sub
mov
fisubrs
out
or
call
ret
shrl
dec
mov
das
shl
adc
sbb
ret
scas
mov
into
xlat
incl
xor
je
cmp
add
clc
xchg
pushf
gs
addr16
dec
mov
pop
popf
roll
push
push
and
and
cltd
adc
cmpsb
cwtl
sbb
push
testb
dec
in
mov
dec
ja
cmp
add
push
mov
rcl
imul
pop
outsl
jecxz
incl
std
pop
mov
stos
push
pop
data16
daa
or
pop
inc
xchg
mul
lret
inc
hlt
sbb
adc
jmp
ja
dec
cmp
lods
pop
outsb
out
jp
sbb
int3
adc
mov
mov
call
dec
aaa
xchg
xchg
adc
add
sub
out
dec
lods
pop
pop
jmp
adc
adc
cmpsb
inc
jmp
imul
sahf
mov
lods
sbb
sbb
incl
addb
call
and
fisttpll
xor
stc
out
adc
pushl
pop
push
mov
jae
adc
sarb
mov
jg
push
dec
clc
inc
push
lods
std
std
sbb
test
xchg
sbbb
lods
ljmp
stos
shl
xchg
sar
mov
mov
xchg
push
fdivr
incl
in
or
sar
mov
lods
mov
mov
aaa
and
mov
and
add
mov
sbb
and
jl
dec
pop
shlb
mov
mov
pop
cmp
mov
adc
mov
int
mov
fnsave
xchg
sbb
cmp
xor
and
push
stos
dec
dec
popf
inc
inc
adc
inc
cmp
xor
sub
cltd
push
repnz
cwtl
jmp
sub
loopne
test
add
les
lea
xchg
pop
movsb
idivl
lcall
int3
fstl
lock
call
movsl
arpl
mov
test
in
sub
ret
fsubrl
vpshab
lcall
pop
cltd
enter
into
call
adc
je
cmc
or
xor
or
call
fildll
or
mov
sbb
daa
lret
and
imul
and
movsl
out
pop
lahf
iret
mulb
adc
fistl
jmp
mov
xor
xchg
push
dec
int3
sub
mov
leave
nop
cs
add
test
jmp
jns
lds
in
and
insb
les
fnstenv
pop
xchg
pop
cmc
pop
dec
lret
pop
pop
cmp
add
je
std
and
cmc
xor
fucomp
popa
push
sbb
ljmp
push
push
cltd
lret
or
rolb
push
add
fsub
sbb
jg
jg
lret
inc
jae
aam
mov
ja
hlt
das
fwait
loope
or
lcall
adc
push
sbb
xor
and
pushf
push
xor
aad
into
mov
outsl
lcall
push
mov
dec
in
xor
add
idiv
dec
fcomi
test
loopne
cmovg
fisubrs
xchg
mov
fidivrs
out
sbb
pushf
insl
call
sub
jnp
aad
cld
dec
fsub
les
jg
pop
jl
out
pop
mov
jl
icebp
das
sbb
les
jecxz
ja
xor
ret
divb
clc
stos
fwait
hlt
stc
and
loopne
enter
addb
test
mov
adc
jnp
loop
mov
dec
pop
insl
inc
sub
push
and
mov
jmp
mov
mov
les
add
inc
out
mov
outsl
xchg
stc
les
sub
sbb
sub
and
and
pushl
scas
mov
inc
xor
dec
pop
filds
or
sub
pushl
mov
xchg
scas
in
std
dec
sub
dec
mov
xchg
inc
inc
js
repz
sti
lcall
sbb
in
sbbb
mov
inc
test
cs
push
mov
dec
out
outsl
int
jl
je
cmp
mov
sbb
add
jb
and
jo
add
fdivs
cmc
ds
rorl
sti
mov
add
mov
pop
jbe
add
cmpsl
adc
jo
clc
and
mov
lcall
xorl
sarl
pushf
jb
cmp
jne
aam
aad
decl
lock
std
cmpl
ljmp
jecxz
fiaddl
mov
cmp
pop
inc
push
clc
mov
jmp
mov
and
pop
in
test
push
jo
jmp
push
push
cli
shlb
push
subb
xchg
lret
adc
test
subb
incl
cmp
xchg
rcrl
sbb
test
orb
insb
push
out
ja
scas
ds
lahf
push
outsl
mov
in
push
cmp
jl
shll
dec
addl
incl
sub
leave
cltd
std
into
jp
push
les
loope
sub
jge
and
mov
mov
ljmp
push
jns
int3
je
pop
dec
notb
dec
test
shl
cmp
and
cmp
mov
jle
or
cmp
enter
inc
or
repz
aas
icebp
into
xchg
mov
decb
fdivr
incl
insb
and
dec
lock
imul
test
pushl
aas
int3
mov
add
cmp
mov
mov
cmp
cmpsl
fucomip
call
mov
in
xchg
decl
in
pushf
test
loop
bound
jae
gs
push
int
icebp
jl
and
cmpsl
push
jmp
cmp
sbb
lret
sub
xor
dec
daa
je
or
ja
jg
sub
push
aaa
cmp
mov
test
ljmp
mov
sub
pop
mov
sbb
push
xchg
sbb
dec
pop
in
aas
shrb
in
inc
fiaddl
mov
clc
inc
pop
aam
or
out
icebp
subb
jmp
cmpsb
sub
jle,pn
mov
adc
pop
imull
es
loop
ret
out
pushl
and
outsl
fsubs
push
mov
xchg
dec
dec
fmull
xorl
jmp
jnp
mov
mov
xor
test
add
xchg
xor
fwait
jg
jp
cltd
xor
xchg
dec
stos
sub
aad
out
xchg
pop
enter
shr
call
ja
mov
mov
in
mov
push
inc
std
push
pop
pushl
push
cmp
inc
in
inc
iret
jl
mov
xchg
dec
ljmp
mov
xlat
adc
xor
pop
fcomip
jg
daa
xor
jmp
xacquire
imul
jl
push
icebp
pop
frstor
or
xchg
adc
or
sbb
add
xchg
into
inc
pop
sbbl
pop
jp
decl
inc
incl
rolb
push
je
jecxz
add
fs
aaa
outsb
leave
mov
and
loop
mov
jmp
aam
fwait
dec
adc
dec
pushl
cmp
aad
decl
das
push
or
mov
dec
xor
into
lret
mov
cld
decl
in
pusha
jbe
or
mov
repnz
push
cld
das
push
loop
outsb
fiaddl
inc
and
lea
jmp
fstp
push
mov
sarl
push
push
repnz
xchg
cmp
in
add
jns
lock
add
mov
cltd
sbb
xchg
scas
sti
shlb
das
mov
mov
jp
jae
xchg
daa
and
test
out
xor
fwait
das
add
stos
call
jno
jno
push
jecxz
inc
dec
mov
push
inc
in
pushf
bound
js
neg
pop
inc
gs
and
lock
or
xchg
and
or
iret
pusha
and
fstpt
cld
xor
xchg
mov
push
aaa
cmc
mov
fcmovb
pop
sbb
pushl
xor
call
xor
push
and
js
sub
push
lret
mov
fsubrp
pop
lcall
out
xchg
test
cmp
adc
jmp
out
in
ljmp
xchg
lcall
and
inc
call
or
fdivs
loope
jg
sbb
xor
lock
ljmp
push
cmp
mov
pop
adc
mov
int3
mov
inc
clc
popa
sbb
sahf
les
fxch
aad
gs
cld
mov
xchg
push
mov
lret
js
repz
scas
dec
test
jle
sbb
jnp
lods
movsl
hlt
arpl
loope
xchg
movsl
jmp
popa
shll
data16
loop
jge
repz
lock
loop
fldcw
cwtl
jno
rolb
rorl
and
mov
outsl
adc
scas
mov
movsb
mov
push
test
or
xor
push
imul
js
fadds
sub
sbb
imul
xchg
out
and
int
xchg
xlat
insl
jle
incl
mov
icebp
xor
xor
aam
or
lcall
andl
mov
fcoms
dec
cmp
jg
fdivrl
xor
into
enter
mov
and
dec
scas
xchg
lahf
jb
ljmp
test
and
ficompl
mov
mov
fsub
mov
adc
idivb
push
lock
cmp
bnd
or
fsubs
mov
jbe
dec
pop
sub
fcomps
mov
jo
test
jbe
jae
movsb
jmp
scas
aad
insb
loop
pop
aaa
in
clc
incl
xchg
add
add
mov
loop
call
cli
mov
ja
lea
pop
into
adc
out
jecxz
mov
push
das
mov
fisttps
adc
cmp
je
add
fidivs
in
rorb
jmp
mov
in
push
test
mov
out
or
inc
sahf
movb
cli
hlt
lcall
pop
pop
rcr
test
push
inc
sub
jno
pusha
cld
push
dec
push
jl
fists
dec
imul
sbb
xor
dec
mov
dec
xchg
iret
dec
sysenter
mov
stos
das
sar
or
int
mov
mov
int3
cmp
pop
je
adc
jmp
rorl
xchg
jl
daa
cs
or
incb
in
mov
push
stc
popf
aam
jne
nop
loop
orl
int
inc
sub
xor
popf
inc
into
push
jno
cltd
sub
cmp
cmp
aad
in
jmp
and
add
insl
pop
push
or
xor
call
lea
sub
lcall
mov
cmp
std
cmpsb
inc
jmp
pop
xchg
jno
pusha
pop
jmp
int3
or
call
out
inc
adc
sub
push
out
aam
fistpl
shrl
pop
out
mov
adc
pushl
sub
add
xchg
mov
push
outsl
in
stos
ret
ret
cld
out
sub
test
dec
out
adc
and
pop
push
std
xor
orb
pop
jge
mov
mov
dec
ss
mov
js
xchg
dec
or
jp
add
cwtl
mov
pop
add
and
or
leave
mov
stc
std
out
clc
repnz
sub
fistpll
or
jg
incl
dec
jmp
mov
jns
jge
mov
in
cmpsb
sarb
mov
inc
cld
cmpsb
inc
leave
cwtl
out
iret
push
dec
fcmove
mov
bound
jbe
mov
push
sbb
mov
pop
mov
or
inc
decl
push
lds
mov
jns
lcall
adc
loope
lret
insl
dec
jbe
xorl
sbb
fcoms
inc
jp
sub
lds
and
or
inc
xor
test
jmp
or
mov
int3
dec
stc
inc
std
sbb
pop
leave
xchg
icebp
inc
lcall
xchg
ds
dec
adc
dec
jns
sub
stos
jle
out
mov
scas
adc
sub
dec
hlt
enter
sbb
jg
pop
repz
inc
ljmp
pop
ficompl
mov
cld
fnstenv
rorb
jmp
fmulp
ljmp
pop
inc
push
and
notl
xchg
push
mov
jmp
mov
cmc
insb
pop
lea
lahf
sub
add
dec
cmp
rolb
int
mov
call
or
rclb
ljmp
sbb
sub
jl
pushf
out
adc
push
fildll
test
adc
aad
lea
and
je
jmp
cmp
and
pop
dec
sbb
test
test
jne
dec
adc
mov
mov
hlt
mov
xchg
test
jl
pop
icebp
dec
repz
js
and
push
aam
stc
int
jns
cmp
dec
test
sahf
loop
and
cmp
lock
cs
or
cltd
and
xor
call
cld
xor
xor
and
push
mov
sbb
cmp
jg
mov
push
mov
mov
rclb
pop
pop
cmp
lcall
xor
cli
jnp
in
mov
xchg
lods
loopne,pt
adc
add
stc
fldt
push
leave
sar
bound
incl
mov
and
inc
xor
xor
pushl
push
ret
lcall
int3
ljmp
jnp
into
mov
loope
ficoml
push
add
push
xchg
push
int3
mov
lret
or
shlb
std
incl
jb
inc
fistps
test
mov
adc
into
out
xorb
aaa
std
fcmove
int
cltd
rcll
aam
ftst
lcall
sub
adc
ficoms
repz
cli
out
cmc
bound
inc
rclb
lods
cmp
mov
mov
push
or
inc
addr16
call
or
jle
ss
movsl
pcmpeqb
fdivs
imul
sbb
adc
mov
popa
mov
or
inc
xchg
jo
cltd
in
testb
xor
push
or
fdiv
jg
out
stc
jecxz
fmuls
int3
hlt
sbb
gs
sbb
jae
add
mov
pushl
or
inc
mov
cs
xor
call
int3
aas
xchg
incl
iret
jb
dec
mov
mov
std
sarb
aaa
push
gs
aaa
cld
ljmp
mov
pushf
pcmpgtw
mov
ljmp
shrl
in
gs
cmpsb
cmp
dec
cld
xchg
and
ljmp
dec
aad
sub
jp
icebp
jb
jne
test
push
lds
and
push
popl
call
lods
push
fdivrl
mov
mov
aam
dec
out
mov
jg
or
ficompl
pop
movsl
ret
fisubs
aas
pop
push
pop
mov
in
ret
lods
loop
dec
incl
cmp
std
adc
xchg
mov
cmp
jecxz
stos
divb
sbb
cmp
or
incl
or
sub
dec
ret
clc
aaa
fistps
push
jnp
aad
leave
dec
out
and
jmp
andl
sti
insl
pop
or
mov
xor
hlt
pushl
lahf
or
ss
leave
sbb
enter
lcall
je
jae
fcomp
push
mov
cmp
dec
jbe
mov
pushl
das
xor
cmp
xlat
nop
mov
loop
xchg
mov
sub
jl
inc
dec
outsl
cli
lcall
psrld
out
fnstsw
xor
xor
jl
lods
setb
call
mov
fists
aaa
inc
sub
out
push
les
and
out
lcall
loop
cli
dec
pop
inc
adc
pop
insl
rcll
shll
cmc
imul
shl
and
inc
adc
popf
adc
subl
nop
sub
daa
push
and
out
cli
pop
in
imul
mov
jle
push
vmovdqu
inc
leave
imul
call
cmpsb
adc
fisubl
cmp
lea
scas
sbb
js
ja
xchg
push
fwait
lret
call
xchg
insb
test
test
scas
or
je
dec
loopne
or
pop
inc
add
pushl
mov
out
xchg
xchg
mov
stos
sbb
xchg
mov
sti
jge
sbbl
fwait
je
popf
xchg
or
fstps
cmpsb
arpl
call
imul
add
adc
mov
cs
fists
aas
add
push
lods
ljmp
lock
mov
repnz
push
xchg
push
fimuls
out
cmp
int3
pop
xchg
outsl
dec
sar
lcall
rcl
mov
add
dec
xchg
cmp
stos
pop
pusha
decb
filds
jg
jg
inc
lods
cmpsb
ja
fs
mov
loopne
lock
mov
jb
aas
and
dec
shrl
imul
xor
add
dec
xchg
mov
or
jle
lock
testb
ss
rcll
insb
pop
int
fs
mov
cmc
adc
rclb
cli
add
mov
jle
push
daa
or
jl
pop
decb
jns
into
out
sub
pop
mov
or
ret
xor
leave
jae
aam
push
cld
inc
and
shll
dec
ret
jnp
xor
icebp
xor
inc
xchg
repz
pushl
jns
into
dec
cmpsb
pusha
lds
aam
aam
mov
pop
roll
fdivrp
decl
mov
mov
fcomip
sub
scas
or
push
jbe
mov
xor
lcall
xchg
rorb
mov
mov
jnp
shll
mov
lds
sti
ljmp
stc
leave
xlat
sub
push
enter
mov
jg
ljmp
lds
fcmovnbe
subb
bound
mov
in
pushl
faddl
jge
shl
xchg
leave
xor
mov
mov
test
mov
jge
icebp
pop
jge
push
jb
add
daa
jmp
jmp
jp
stos
lret
inc
out
fcoml
das
xchg
cmpsb
mov
adc
push
push
cltd
and
std
pushl
fisubl
pop
push
jnp
ljmp
jl
aas
loop
lret
pop
pop
mov
inc
pushl
addr16
int3
lcall
dec
dec
mov
inc
pop
roll
bound
movsb
stos
daa
fcomip
sub
mov
cmp
aas
jns
adc
cmp
xor
call
cwtl
call
in
mov
fiadds
out
jns
out
ficoml
or
scas
ljmp
int
jo
popf
push
cmc
loope
add
mov
fldcw
or
incl
pop
and
js
adc
xchg
sub
sub
test
decl
xchg
and
lret
adc
cwtl
inc
cmp
addr16
in
jnp
out
xlat
inc
cmp
cmpsb
std
stos
loop
lcall
pushl
push
mov
adc
xchg
mov
mov
mov
mov
mov
pop
jge
jge
cwtl
lret
dec
inc
cmp
xor
iret
inc
or
push
mov
sub
incl
jmp
sahf
push
sbb
push
loop
leave
lcall
inc
sbb
decl
push
mov
jl
movsb
sbb
addb
scas
and
shrl
sub
jl
imul
cli
ljmp
popf
cs
push
mov
insl
inc
xor
aam
test
xor
mov
push
xchg
leave
cmp
in
add
pop
lods
or
mov
in
jg
pop
lcall
call
lods
adc
arpl
mov
outsb
mov
aaa
pop
cmpsb
sbb
mov
ljmp
pop
cmp
push
ret
stos
sub
in
inc
mov
jmp
and
adc
or
std
inc
scas
dec
shrb
and
add
inc
insb
das
and
dec
bound
sbb
add
jmp
xlat
and
xorb
mov
xor
xorl
shl
or
push
push
sub
jns
es
or
jg
fsub
or
sahf
pop
imul
push
testl
popa
mov
incl
stos
mov
rcll
adc
xchg
jecxz
dec
cli
insb
sbb
push
outsl
roll
and
clc
mov
jmp
and
push
mov
or
std
jg
or
jmp
or
jl
fstpt
jl
mov
cmp
fisttps
mov
jno
fisubl
pop
sar
out
adc
xchg
popa
cld
mov
jp
push
fdivrs
mov
shll
pop
ss
ds
ret
jg
sti
es
push
das
ja
push
repnz
mov
cmc
jge
scas
lret
sbb
pop
call
cld
decl
jl
rorl
bswap
jbe
jl
es
pop
and
mov
jp
call
stc
adc
js
pop
xor
sub
pop
js
jo
popa
ror
ficoms
cmp
xchg
out
mov
mov
adc
sbb
popa
mov
or
aas
dec
mov
mov
pop
adc
pop
jmp
pusha
lcall
pop
test
les
lret
cli
pop
imul
fisubrs
xor
xchg
lock
jg
push
xchg
mov
loopne
clc
or
arpl
mov
and
add
cmp
cli
adc
inc
xor
xchg
xor
jecxz
ljmp
sti
xchg
xchg
push
std
fs
mov
xor
sbb
adcb
jb
out
test
ret
lret
inc
das
cmc
add
loope
in
xlat
cltd
mov
cld
iret
add
mov
jl
fisubrl
xchg
sub
mov
mov
repnz
inc
testl
lea
insl
enter
adc
cmp
jg
mov
fsin
jmp
adc
push
dec
xchg
in
ja
push
push
mov
ja
fwait
decl
sub
dec
or
adc
pop
inc
rolb
cld
xorb
pop
std
fdiv
add
dec
dec
lods
jg
sub
push
or
lret
sbb
mov
pop
inc
jae
call
scas
bnd
imul
dec
mov
aam
scas
push
xchg
xchg
in
idivb
dec
decl
push
in
aas
mov
pcmpeqw
sub
lods
scas
inc
jmp
lret
pushl
loopne
imul
pop
ret
insl
add
insl
cmp
lcall
lahf
inc
aam
add
cmp
inc
adcl
mov
or
inc
incl
pop
xor
cmp
xchg
cmp
fsts
pop
mov
lcall
inc
xchg
fs
rclb
inc
sub
loopne
adc
xchg
imulb
jle
stos
fsubs
mov
mov
inc
idiv
lcall
lds
pop
rclb
sub
xchg
ljmp
and
mov
pop
shr
xchg
inc
cmpsl
fwait
sub
mov
mov
mov
imul
push
aam
imull
jg
jecxz
add
sub
mov
push
adc
jl
jl
mov
ljmp
dec
addr16
sub
into
cld
maxps
cmp
xchg
das
test
js
lods
shlb
lcall
je
cmp
int3
mov
mov
cmp
cmp
sub
lds
inc
ljmp
sub
fildll
cs
pop
xchg
or
imul
cmp
lods
in
lock
adc
cli
pop
cs
int3
mov
xchg
or
xchg
xor
call
or
cld
dec
mov
mov
ds
imul
and
ljmp
pop
jecxz
add
cmp
mov
xchg
dec
lahf
lcall
test
pop
cmp
mov
call
mov
dec
lds
mov
inc
jmp
rcrb
imul
cli
push
jb
push
pop
and
cmpsb
out
mov
test
add
cmp
push
out
adc
sbb
sti
jne
lods
sahf
pop
stos
ret
sar
jo
scas
das
rcrb
push
jno
mov
dec
push
push
sbb
stos
fcompl
pop
test
pop
les
leave
lahf
and
cmp
ret
decl
xchg
test
popl
sbbl
out
inc
ror
lahf
mov
pop
adc
jge
clc
lcall
int
sahf
aas
mov
dec
push
inc
cmp
xor
mov
add
sahf
push
mov
stos
and
sub
xor
jp
pusha
ret
dec
cmp
lods
add
js
dec
and
int3
rcrb
jl
and
fistl
data16
pop
inc
jle
add
es
mov
fnstsw
add
ljmp
add
push
cmp
out
in
mov
dec
inc
inc
jno
fs
ficompl
ss
fdivr
stos
decb
pushf
ret
popa
test
sbb
sub
pushf
push
shrl
out
call
lret
push
ss
push
fwait
xchg
dec
cltd
add
jae
mov
dec
out
pop
out
jp
and
mov
mov
imul
orb
sbb
pushf
add
arpl
stos
pusha
or
lcall
wbinvd
rcll
mov
ljmp
ret
pusha
mov
test
push
sarb
jmp
mov
inc
mov
push
aaa
in
dec
push
dec
js
pop
loope
popf
es
call
call
add
arpl
jg
dec
adc
dec
test
dec
pop
add
xchg
mov
push
insb
pop
pushl
xorb
push
jmp
lods
in
fs
cmpsb
rorb
mov
js
cmp
add
lcall
mov
jmp
pop
loopne
popf
pushf
ficompl
lcall
inc
loopne
leave
inc
test
lcall
ja
fwait
cmp
ret
mov
sahf
mov
hlt
stos
add
jo
mov
stc
loopne,pn
push
sub
jno
dec
inc
push
call
jnp
xchg
stos
dec
cmp
cli
fs
inc
int
loopne
or
rorb
iret
das
jmp
addr16
repz
out
sbb
and
jmp
mov
xchg
mov
bound
testb
imull
scas
jecxz
jmp
adc
xlat
dec
mov
scas
lea
or
sbb
repnz
sbb
ljmp
fcmovnbe
pop
push
xchg
cmc
cmc
add
dec
xor
mov
xchg
fs
cmp
xorl
out
mov
mov
or
int
jmp
movsl
ds
lret
cmpsb
clc
cmp
faddp
and
cmpsb
dec
in
push
add
rol
mov
xchg
inc
inc
aam
pushf
arpl
ljmp
dec
imul
aam
lea
dec
insl
xchg
inc
pop
sub
call
test
inc
bound
inc
loopne
loop
daa
mov
sub
fisttpl
call
sub
movsb
or
mov
lods
pop
test
mov
mov
lcall
or
jae
dec
int3
push
jae
enter
mov
mov
sbb
enter
xchg
push
mov
cld
push
out
movsl
out
imul
call
sahf
pushl
xor
cmp
inc
arpl
add
dec
mov
cmp
sti
push
and
jmp
add
or
int
mov
pop
ljmp
aam
imul
inc
pop
xchg
jmp
mov
sti
dec
adc
pop
inc
jp
fwait
xorl
pop
daa
std
xlat
or
std
inc
push
or
mov
adc
ret
mov
or
fistps
push
sbb
lods
stos
sub
fistpll
pushl
imul
scas
inc
push
jnp
lds
cld
jo
push
mov
jmp
inc
jnp
jl
jl
subb
shrl
insb
lods
loope
rorb
jg
inc
dec
jnp
ret
scas
shll
add
push
movsb
sub
pushl
or
dec
sub
mov
mov
sub
sarb
mov
ljmp
xor
pop
mov
mov
scas
and
mov
in
lea
incl
lret
out
add
dec
negb
test
mov
movsb
mov
ss
mov
jmp
cli
mov
jecxz
addr16
rcrl
mov
push
mov
add
cld
dec
out
cmpsb
xor
mov
adc
arpl
jmp
xchg
iret
out
lret
bound
jle
xchg
daa
pop
repz
rcrb
les
sub
lcall
pop
add
jecxz
cmpsb
mov
aaa
inc
lret
xchg
pop
pushf
push
imul
sbb
pushl
lcall
xor
or
dec
dec
mov
push
pop
mov
clc
insb
lcall
icebp
cmpl
addr16
sub
aad
push
scas
popa
push
xchg
cltd
pop
add
call
sub
insb
add
sbb
scas
jg
fidivrs
push
push
ds
ljmp
aas
lahf
adc
add
into
jl
xchg
imul
mov
xchg
movsb
or
stos
decb
repz
sub
in
test
adc
fisttpll
pushf
pop
and
mov
int3
div
repnz
js
jnp
sbb
cmp
jo
sub
add
call
xor
aad
pop
mov
arpl
or
cmp
popf
xchg
ljmp
jnp
inc
repnz
dec
vpcomw
stc
pop
xchg
leave
neg
ss
mov
lcall
and
stos
and
cmp
aaa
xor
push
test
pop
pop
cmc
call
adc
and
push
bound
pop
mov
jge
mov
sbb
mov
cli
pop
movsl
fistpll
cmpsb
das
xchg
std
inc
insb
and
shlb
iret
loop
rolb
ljmp
adc
je
pop
xchg
aaa
cmc
idivl
jge
xchg
out
aad
pop
push
repnz
fdivrs
sahf
idivl
jge
xor
je
lcall
sub
outsb
inc
cs
incl
divl
out
cmp
bound
sbb
sub
mov
decl
xor
adc
jns
dec
das
pop
sub
jge
mov
insl
cmp
ja
xchg
decl
xor
lds
xlat
imul
mov
or
and
mov
jge
ljmp
fsubr
pop
aaa
daa
sahf
jb
xchg
xor
mov
popa
pushf
xor
mov
and
call
hlt
or
inc
int3
or
or
jne
lcall
popf
out
pop
mov
ret
in
fst
inc
or
scas
jbe
stc
inc
es
inc
or
stc
mov
lods
jecxz
cmp
cld
push
dec
pop
out
lds
je
mov
fildl
insl
sub
out
clc
xor
lahf
cmp
daa
cwtl
adc
sub
cmc
push
mov
inc
mov
sbb
in
lret
call
es
xchg
in
adc
cmp
push
ret
insb
cmp
mov
jb
ljmp
jnp
test
sub
inc
aad
test
shr
cld
bound
jp
mov
xor
imul
ret
xor
dec
js
hlt
push
xlat
mov
jno
sbbb
xlat
ljmp
jne
loopne
orb
ja
cmpsb
ror
push
jmp
cmp
fstpt
pop
pusha
nop
mov
dec
andb
xlat
inc
fnsave
dec
pop
xor
adc
call
push
sbb
int
sbb
xchg
ficompl
mov
xor
xchg
jo
loop
loope
xchg
add
ljmp
loop
mov
loop
scas
ds
sub
ds
cmp
ss
incl
and
sub
outsb
enter
test
jae
mov
scas
and
pop
inc
out
inc
popa
add
lcall
in
pop
jl
call
add
mov
shl
or
lcall
lret
xchg
nop
mov
adc
pop
mov
test
mov
lods
push
sbb
cmpsb
or
test
jmp
mov
dec
xchg
jbe
out
sbb
jno
mov
fdivs
sbb
push
xor
xlat
add
les
pop
lock
mov
ja
loop
imul
ljmp
shrl
cmp
xorl
adc
mov
jecxz
in
and
pop
stos
pop
insl
mov
mov
sti
lea
mov
mov
decl
sbb
cmp
cmp
mov
stos
pop
outsb
mov
mov
ljmp
push
inc
adc
mov
notb
dec
xor
lret
mov
lods
icebp
push
mov
and
push
add
outsb
ss
sbbb
xor
pop
and
jl
call
cmp
rep
sbb
and
and
push
lret
mov
mov
or
xchg
insl
stos
jne
mov
aad
das
ss
leave
jecxz
cmovp
xchg
jg
test
setl
xchg
add
imul
lcall
into
popa
mov
mov
or
fdivrl
jne
sarb
clc
lds
xchg
pushf
push
inc
aaa
pop
cmp
jno
cmp
stc
push
dec
into
cmpsl
jnp
loope
incl
jne
cmp
fldenv
lcall
out
pushf
and
mov
push
mov
or
xchg
adc
xchg
outsb
xor
pusha
mov
or
add
push
fcomip
xor
call
int3
in
fidivrs
lea
mov
adc
ret
inc
dec
jmp
call
xchg
in
inc
js
out
ret
shl
jge
out
and
inc
aad
mov
pop
inc
adc
mov
pushf
fcomps
sub
aas
idivl
rcrl
xchg
dec
mov
inc
ret
test
fldt
sub
mov
pop
mov
push
push
pop
cmpsl
xor
cmp
cmp
pop
add
and
scas
cltd
pushf
out
xchg
movsb
ror
inc
jmp
dec
add
lcall
dec
js
pop
data16
mov
out
insb
inc
cmpsl
mov
mov
popf
sahf
loop
mov
mull
movsl
sub
decl
lcall
div
and
xor
fmuls
add
xlat
push
xchg
ja
push
sahf
in
pushl
pop
lahf
xor
mov
sbb
imul
or
or
popa
pusha
jg
call
pop
cmp
add
je
jmp
xchg
fnstsw
inc
jb
push
ljmp
inc
jns
cmp
jb
add
movsl
sub
sbb
mov
sar
mov
dec
sbb
mov
or
xor
lahf
mov
subl
testl
mov
sti
out
xlat
shlb
pop
test
aam
jae
cmp
cmp
dec
pop
jl
ljmp
adc
hlt
mov
push
out
clc
mul
jge
leave
mov
cmpsb
jnp
add
cmp
sbb
pop
daa
decb
adc
out
aaa
fdiv
pop
out
inc
rcrl
mulb
jnp
push
jg
mov
jge
mov
inc
cmp
outsl
pop
push
shl
cld
xor
mov
xchg
aas
jle
fcomip
fsubrl
incb
cmpsl
cmp
adc
sub
outsl
cli
stos
lcall
mov
leave
std
pop
shll
decl
aas
lcall
jb
stc
add
ds
insl
nop
das
or
stos
adc
cld
mov
repz
push
lcall
mov
pusha
push
pop
repnz
adc
shlb
shrb
movsl
das
cmc
pop
rorl
jmp
push
gs
mov
hlt
call
js
rclb
cmc
mov
hlt
push
inc
incl
imul
rorb
mov
pop
mov
mov
jmp
incl
pushf
sbb
ret
xor
and
sub
push
movsb
je
lcall
cmc
jg
dec
xor
mov
dec
push
sbb
sbb
mov
jg
and
ss
shlb
push
or
shrl
jno
or
jae
push
lock
inc
icebp
imul
sbb
inc
outsl
mov
or
es
clc
sbb
inc
xlat
mov
imul
in
jge
sbb
and
ljmp
and
push
cltd
lods
jnp
jmp
loop
jne
jmp
cmp
jo
call
mov
adc
cmpl
cmp
adc
lock
pushl
sub
js
mov
push
jg
and
mov
ljmp
mov
mov
loop
sbb
push
popa
cli
imul
xor
add
lods
decl
lcall
pusha
add
mov
es
xchg
addr16
insb
mov
les
jg
dec
bound
dec
sbb
ret
fwait
sub
xchg
popa
cmp
lret
jmp
and
outsl
xchg
xchg
out
sbb
jbe
aam
data16
scas
push
or
aas
dec
bnd
negb
cld
das
sbb
popf
fldl
and
mov
inc
xor
pusha
cmp
pop
and
cmp
fxch
lret
test
decl
shlb
sub
hlt
xchg
sbb
repz
movsl
inc
lret
jecxz
lret
jg
int3
stos
mov
xchg
cmp
dec
test
push
push
mov
insb
std
stos
fstp
lock
push
push
movsb
js,pn
rorb
inc
cmp
ljmp
rol
xchg
inc
iret
aad
push
dec
mov
jae
mov
cmp
insl
add
cld
jmp
stos
and
fbstp
in
mov
xor
push
dec
cmc
dec
popf
push
adc
popa
daa
push
pushl
dec
xor
push
pop
repz
pop
psubb
sub
aad
xchg
call
sbb
and
repnz
idivb
in
inc
out
jae
xor
lock
sub
sti
insb
movsl
in
push
cmp
fmulp
cmp
add
fnstenv
loope
jge
out
xor
incl
popf
or
out
setno
jle
hlt
out
xor
or
out
loope,pt
adc
push
out
mov
xchg
pop
addl
mov
sbb
sub
shl
mov
jno
jb
jno
mov
jmp
out
icebp
cmp
imul
stc
scas
or
dec
std
push
sub
repz
shr
dec
pushl
imul
ss
repz
pop
inc
inc
test
jg
cmp
mov
push
fidivrs
sub
pop
std
fstl
dec
mov
mov
mov
data16
mov
movsl
xchg
rcrb
cmp
jae
int3
pushl
cwtl
idivb
add
push
aam
loope
sub
jge
ljmp
pop
ljmp
sub
fwait
or
adc
sub
inc
jne
mov
iret
lds
inc
jno
leave
arpl
adc
fmulp
mov
lret
movsb
pushl
push
outsb
rcl
mov
xor
mov
rolb
fimull
or
into
sar
adc
incl
dec
fs
in
nop
in
inc
aam
arpl
cmc
sbb
sarb
lods
push
subb
adc
lock
dec
xchg
or
sbb
outsb
loopne
cmp
arpl
sbb
repnz
add
push
icebp
faddl
dec
adc
cs
imul
aad
dec
push
dec
loope
xchg
pop
or
inc
data16
insl
pushf
cmp
call
faddp
iret
loope
cmpsl
data16
cmp
sub
imul
mulb
inc
test
popa
cld
sbb
incl
add
ret
jnp,pn
pop
clc
es
ret
xchg
sbb
rcrl
dec
jns
pusha
cs
cmp
inc
sub
push
push
push
push
jg
or
jb
inc
push
add
notb
or
or
pushf
mov
sahf
xor
push
jmp
sbb
repnz
pop
sti
aaa
mov
push
cwtl
dec
xor
xchg
push
add
leave
and
outsb
ljmp
jmp
int
ljmp
std
push
dec
mov
xor
lahf
jge
lret
xchg
mov
data16
sahf
mov
test
js
outsl
xchg
inc
stos
pop
stc
adc
in
int3
sbb
fsubs
les
xor
aam
clc
pop
popa
ljmp
lahf
xor
lcall
in
nop
add
sbb
ds
pop
mov
sub
cmp
sbb
mov
cli
shll
sti
fdivrp
scas
in
loopne
incb
enter
mov
cmpb
dec
test
ljmp
out
out
inc
loop
push
cltd
xchg
sbb
loope
push
push
ljmp
xor
out
sub
rol
icebp
jmp
es
pop
mov
xchg
subl
xor
pushf
add
adc
insl
xchg
inc
add
ljmp
mov
xchg
ss
out
and
mov
add
call
mov
xchg
ficoml
jne
icebp
test
inc
dec
jb
push
cmp
loope
cmp
inc
push
jno
bound
out
aam
sti
test
mov
jne
roll
decl
xor
cmp
js
popl
jge
mov
test
adcb
jp
xchg
sub
std
dec
cwtl
shr
dec
pusha
add
repz
dec
mov
ss
jl
inc
push
cmp
movsl
stos
lcall
gs
cltd
in
insb
push
jmp
adcl
lods
dec
jae
mov
add
clc
mov
jo
mov
pushl
jmp
ret
mov
inc
fildll
push
scas
xchg
loope
ljmp
fcoml
stc
pushl
into
push
fimull
mov
insb
sub
iret
add
mov
jg
mov
lods
and
sub
push
js
js
rorb
fwait
or
inc
mov
outsl
xchg
inc
std
jno
loop
pushf
test
lods
push
test
and
inc
jge
xchg
sub
movsl
dec
cld
sbb
lret
fidivrs
jg
ljmp
dec
xchg
cmpsl
scas
bound
add
inc
push
mov
mov
pushl
scas
or
dec
or
push
call
gs
scas
test
pushl
clc
adc
add
mov
jecxz
cwtl
cwtl
xchg
mov
sub
stos
lcall
sub
or
jbe
sub
push
cld
inc
pop
loopne
shll
in
scas
lcall
jns
dec
ljmp
inc
sbb
repz
loope
out
stos
fwait
out
push
add
adc
ljmp
shlb
mov
jns
idivb
fmuls
dec
ljmp
cli
in
repz
aas
mov
xlat
divb
pop
mov
cmp
ljmp
test
jb
lret
inc
mov
inc
xlat
scas
iret
mov
inc
jg
clc
or
inc
push
mov
inc
xchg
xor
sbb
incl
aam
fidivl
sbb
scas
int3
clc
call
xlat
ljmp
mov
jb
mov
sbb
cmc
sbb
xor
jge
incl
outsl
repz
mov
nopl
push
dec
cmp
pop
frstor
sub
clc
or
jno
mov
sub
ss
movsl
pop
inc
aam
dec
add
inc
outsl
inc
mov
bound
vmovaps
pop
cmc
in
add
lcall
mov
cmp
sarl
lcall
out
aam
cmc
inc
and
outsl
subb
sub
scas
cli
cmp
lock
pop
sbb
js
je
sub
xor
mov
push
stc
mov
call
cld
sti
movsl
inc
dec
mov
add
adc
push
mov
aad
fcomip
inc
jge
mov
xchg
scas
sarl
mov
lea
jg
in
sti
jnp
inc
push
popa
xor
mov
inc
mov
and
pop
lods
popf
stos
mov
add
sbb
mov
aaa
std
decl
rcll
int
jecxz
scas
stc
mov
mov
sbb
jns
and
fcomip
lret
call
dec
mov
enterw
loope
dec
test
add
js
clc
xchg
ljmp
mov
loop
shlb
loop
mul
incb
mov
add
xor
mov
pop
fs
loope
adc
mov
mov
sbb
incl
push
in
dec
push
push
mov
aam
add
repnz
cmpsb
jge
decl
push
xchg
sub
es
nop
pop
cmp
popa
jnp
sub
jns
add
pushl
ds
dec
gs
andl
jo
mov
shlb
push
sub
stos
lahf
sub
ss
push
dec
aaa
rcl
add
cmp
adc
or
xchg
das
lock
cmpsb
mov
lret
popa
dec
rorb
sub
jb
shll
sub
out
mov
sub
call
mov
scas
mov
cli
xor
mov
icebp
inc
mov
incl
lea
adc
lret
test
xor
sbb
sub
ljmp
cmp
pop
aaa
dec
push
popf
movsb
test
inc
addr16
dec
sbb
std
jl
pushl
in
sbb
push
xchg
addr16
and
lock
stc
mov
sub
mov
fs
mov
cmp
popl
add
rorb
jns
cmp
jb
lret
adc
mov
mov
add
and
enter
ds
les
and
add
mov
lcall
inc
xor
jmp
lock
popa
nop
scas
mov
iret
sbb
jg
addb
std
xorl
mov
push
sbb
push
call
shll
test
push
aaa
mov
pop
pop
add
add
sbb
inc
in
testb
or
and
decl
adc
outsb
ds
jb
ljmp
fnsave
push
dec
mov
jmp
popa
xchg
jbe
pop
insb
jmp
xchg
dec
add
mov
sub
jmp
aam
jae
cmpsb
adc
jg
cmc
fadd
mov
rclb
aaa
push
or
sub
xor
test
mov
fisttpl
aam
adc
ljmp
enter
push
sbb
xlat
xor
or
scas
jnp
add
push
incl
inc
inc
mov
scas
push
scas
mov
inc
mov
push
pop
in
out
pop
cmc
jmp
push
movsl
popa
sbb
int
sbb
mov
lahf
pop
mov
arpl
call
mov
in
leave
cmp
sbb
cmp
dec
inc
sub
mov
mov
lods
jp
mov
jmp
inc
mov
push
lret
cmc
or
repnz
repnz
notl
cld
insb
popa
cmp
or
loop
xor
fbld
xor
pop
pusha
fists
adc
mov
in
inc
ret
adc
push
inc
jg
and
dec
cwtl
out
sub
jmp
adc
jecxz
or
mov
rclb
decl
out
popf
xchg
mov
or
mov
jmp
repnz
xchg
mov
repz
lcall
andl
xchg
test
add
add
out
push
decl
push
repz
mov
ljmp
and
sahf
aas
popf
rorl
int
push
push
pop
sub
decl
mov
sub
lods
imul
clc
es
push
enter
hlt
stc
std
mov
rcrb
fidivrs
inc
lret
inc
into
jg
mov
loopne
inc
fisubrl
lcall
lods
sub
imul
das
xor
xchg
fldl
std
push
jno
idiv
incl
mov
pop
push
testb
cs
cmp
scas
cli
push
in
pop
test
call
ljmp
dec
or
lea
xor
dec
loopne
adc
push
loopne
ljmp
hlt
int3
xor
ret
jmp
sbb
mov
pop
hlt
hlt
xchg
dec
mov
ret
pushl
aas
rol
loopne
adc
nop
mov
cmp
sub
pop
das
push
div
nop
pop
dec
rcrl
decl
lcall
and
rorl
fistl
jne
andl
pop
lea
test
out
push
daa
out
lret
pop
inc
xchg
sbb
cli
call
addl
enter
mov
xchg
dec
pop
pop
push
stos
pop
mov
test
sbb
push
push
jnp
jg
sub
lods
push
sahf
xor
out
pop
mov
sbb
push
push
mov
rclb
push
insb
sbb
cmp
fadd
jge
dec
out
xor
pop
dec
push
dec
mov
outsl
cmp
adc
leave
sub
or
cld
pushf
insl
add
test
inc
nop
xor
add
addr16
dec
mov
jb
stc
cmpsb
jb
inc
in
push
mov
sti
popf
cltd
push
sub
xchg
sub
sbb
xor
icebp
ljmp
repnz
call
cmp
cmp
scas
xor
mov
dec
popf
fildll
ds
sbb
jbe
pop
in
loopne
testl
sub
call
enter
mov
cmpsl
push
out
cmp
std
test
loopne
std
movsb
scas
inc
jecxz
pop
sbb
mov
push
mov
pusha
xchg
xchg
jnp
dec
aad
mov
jmp
xor
cmpsl
mov
inc
mov
push
scas
sbb
adc
int
push
pushw
adcb
out
mov
popa
mov
jo
mov
add
comiss
cmp
js
inc
incl
imul
xchg
mov
aas
push
loope
mov
test
stos
leave
inc
fdivrp
decl
shll
rcll
in
aaa
ljmp
inc
pop
ds
and
jmp
pop
push
xchg
sbb
fwait
outsb
mov
lods
dec
scas
dec
jnp
cli
and
pop
lahf
scas
subl
jns
inc
adc
push
out
in
and
adc
fbld
pop
xchg
adc
mov
mov
std
call
fldt
and
push
xchg
adc
jo
ds
mov
lds
jnp
inc
test
xchg
mov
out
mov
push
inc
int3
rcr
jbe
or
jno
lds
xor
mov
shll
push
mov
in
mov
je
popl
fimull
bound
pop
out
mov
mov
rcll
ret
mov
decl
iret
lret
xor
ss
or
ret
jp
inc
mov
xor
push
jecxz
adc
mov
xor
jno
mov
pop
mov
roll
ja
mov
jmp
test
add
inc
mov
mov
aam
imul
ljmp
pushl
sbb
std
sbb
iret
jge
pop
mov
movsl
mov
jg
xchg
mov
test
fstp
sbb
xor
out
mov
cltd
add
inc
add
incl
dec
lcall
cmp
and
jno
pop
cs
decl
push
mov
jae
movsl
pushf
mov
sub
fmuls
sbb
cmp
jmp
jle
xor
and
mov
std
mov
pop
sbb
rcrl
icebp
sahf
pusha
ljmp
incl
aas
ss
loope
jle
test
sbb
and
xlat
jno
xor
nop
inc
jle
xchg
inc
addl
call
stos
jno
lcall
or
and
dec
mov
das
mov
jnp
in
leave
decl
pop
pop
popf
adc
mov
sub
mov
and
call
mov
faddl
loope
push
js
jne
push
scas
mov
int3
push
jo
add
jmp
dec
dec
pop
inc
inc
mov
imul
mov
cs
cmp
lods
cltd
ljmp
dec
nop
mov
orl
rcrb
xchg
popa
cmp
add
or
data16
lcall
mov
jle
repnz
in
and
push
lds
int
sbb
icebp
bound
lret
nop
das
bound
lcall
push
shr
pop
jns
aad
push
pop
decb
mov
out
stos
pop
cmc
cmpsl
dec
sti
sub
dec
inc
out
and
cli
outsb
xchg
stos
pop
test
sbb
psubd
call
scas
cmp
push
mov
add
movsb
fwait
adc
loop
ds
adc
sti
in
mov
mov
dec
cmc
and
into
push
das
clc
mov
mov
mov
jp
cmp
mov
fs
dec
adc
pop
inc
fdiv
and
add
cmp
decl
es
daa
ds
jbe
mov
xchg
xor
scas
sti
sti
sub
fdivrs
test
in
and
clc
in
ds
aaa
sti
adc
imul
cmp
mov
dec
jecxz
loope
jb
push
xchg
sbb
and
test
jae
push
aas
mov
std
stos
ljmp
clc
hlt
imul
inc
test
jg
in
je
push
xchg
dec
pop
push
scas
dec
mov
rolb
ljmp
pop
mov
mov
sarb
adc
and
addb
fistpl
decl
sub
clc
add
imul
pop
mov
pop
int
dec
popa
data16
mov
cmp
ret
xchg
push
out
fs
cmpsb
or
sahf
dec
cmp
cli
fdivrl
cmp
jmp
jecxz
add
std
inc
cmp
fdivr
dec
xchg
inc
jb
cmp
mov
loope
push
incl
out
mov
rorb
push
lea
int
enter
and
ljmp
cli
pop
loopne
mov
fwait
cltd
adc
push
cli
test
gs
mov
push
fstl
cmpsb
dec
mov
dec
sbb
jp
pop
pusha
or
test
inc
ret
aas
std
call
xor
jg
stos
mov
mull
inc
mov
xchg
cmp
push
or
decl
sub
movsb
pop
movsl
inc
adc
xlat
cltd
repz
mov
lock
fdivr
call
add
mov
cmp
jno
sti
xchg
call
rolb
cmp
mov
jmp
loope
call
lcall
lods
and
mov
fcomp
dec
out
cli
popa
cli
inc
sbb
inc
inc
xor
and
aas
lret
sbb
ret
xchg
cld
call
std
mov
stos
cmpsl
sub
rcr
dec
ss
adc
clc
mov
rcrb
popl
negb
sub
jg
fs
xchg
clc
sti
sbb
inc
outsb
ds
stc
pop
push
mov
sub
in
or
ret
xor
adc
cmp
mov
inc
adc
mov
dec
sub
jmp
jmp
xor
daa
ja
xchg
fisttpll
dec
sahf
and
fbld
mov
cli
xchg
sbb
clc
call
pop
pop
sti
mov
and
pop
mov
inc
adc
jp
enter
jne
call
shrb
std
movsb
xchg
push
or
fistps
xchg
sub
shll
es
mov
andb
repz
js
lret
mov
mov
mov
push
mov
push
sub
pushl
xchg
sub
or
iret
lret
or
adc
aad
inc
fidivl
mov
ja
lock
arpl
push
aam
sbb
inc
jmp
addr16
mov
in
or
into
push
pop
inc
jle
mov
subps
adc
cmp
fsubl
decl
jle
data16
sub
mov
pop
lods
in
jno
cmp
call
jno
adc
jbe
js
incl
dec
inc
mov
jae
jge
cmpb
ja
mov
and
loop
arpl
ljmp
stc
xchg
ljmp
lods
je
in
pop
mov
or
add
mov
enter
ret
sub
xchg
mov
rcll
mov
mov
jmp
mov
pop
dec
pushf
outsb
mov
lock
and
pop
inc
sbb
sbb
call
mov
push
lods
das
mov
enter
imul
jp
je
push
int3
mov
sub
fsubrs
je
lods
ficoms
mov
inc
movsl
jns
mov
xchg
push
jmp
mov
cld
push
inc
ficompl
xlat
pop
or
repnz
and
lds
mov
testb
add
loopne
sub
sahf
inc
in
stc
inc
jmp
mov
mov
adc
lret
fimull
addl
jb
ss
mov
sbb
adc
jae
imul
cmp
aad
lcall
es
add
mov
and
stos
jg
jbe
out
lock
and
push
inc
or
daa
sub
out
incb
into
addr16
leave
je
in
cs
inc
enter
loope
pop
addr16
mov
in
out
pushf
jne
pop
push
fcomip
lcall
add
push
mov
nop
sahf
shr
outsl
bound
adc
testl
loop
jns
stos
movsl
push
sbb
lods
cmpsl
jmp
cli
int3
adc
inc
cmp
loopne
add
pushf
or
sub
jecxz
clc
call
adc
popa
iret
mov
aaa
or
mov
jg
mov
dec
es
and
mov
fcomps
mov
add
fld
xchg
cli
insb
add
inc
out
out
push
stc
or
scas
mov
aas
mov
fdivr
pop
inc
cld
scas
jbe
stc
jp
mov
adc
decl
fistpl
das
xchg
push
pusha
adc
pop
xorl
call
inc
imul
xchg
das
mov
xor
lock
and
fwait
xchg
lcall
add
inc
mov
mov
outsb
gs
pushf
dec
or
shrb
or
lcall
adc
jb
jecxz
loop
lcall
imul
dec
adc
lcall
mov
xchg
lds
scas
lret
mov
div
fisubrs
aas
fidivrs
ljmp
push
jno
idivb
jl
mov
jp
aam
ficomps
test
out
push
push
jo
xchg
sub
pop
lea
pop
aas
or
adc
movq
sti
push
mov
mov
jp
out
enter
ret
jl
mov
and
jne
sbb
and
vmread
mov
inc
adc
sub
lods
adc
dec
push
xor
inc
gs
arpl
dec
jo
scas
fists
jle
cmpsl
adc
jne
jae
dec
ret
call
push
out
mov
aad
inc
sub
pop
add
test
push
push
fbld
sahf
stc
in
xor
stos
mov
add
pushl
mov
mov
pop
js
jle
ljmp
inc
int
shlb
int
gs
and
out
out
popa
fildll
push
setne
gs
stc
loop
ljmp
and
xor
jg
add
fiaddl
mov
incb
inc
std
inc
pushf
push
imul
sub
out
cmp
sahf
dec
jo
push
push
add
imul
mov
icebp
into
xchg
jns
adcb
ss
pop
xchg
call
xor
mov
clc
outsl
jge
pushf
xor
lods
add
adc
mov
mov
jecxz
jmp
inc
mov
and
fistpl
adc
inc
sub
xchg
popf
adc
or
mov
ljmp
cli
call
xlat
jae
mov
dec
xlat
adcl
pop
xchg
adcb
lret
cmp
pushl
pop
dec
jb
or
aaa
xchg
dec
sub
adc
push
lcall
sbb
dec
aas
shr
cmpsl
cmp
ljmp
jo
mov
push
lods
jnp
shr
or
inc
je
xor
jbe
in
frstor
ljmp
das
std
mov
xor
scas
dec
hlt
cmp
push
iret
pop
pop
das
dec
xchg
dec
push
or
push
sbb
mov
loop
or
add
jo
xor
dec
pushf
sub
cs
adc
call
mov
add
out
cmp
cmp
jb
arpl
repz
dec
sbb
adc
dec
sub
inc
jnp
cmp
les
mov
pop
cmp
push
sti
int3
rcrb
xchg
pop
std
push
cld
ljmp
adc
nop
std
pop
inc
pop
outsl
cvttps2pi
jae
fcomip
call
pop
cmp
jno
pop
shll
sub
pusha
sti
test
les
cmp
outsl
xor
xchg
js
mov
fnstcw
ds
or
sahf
mov
jecxz
mov
xor
je
cld
cli
cmp
push
jmp
dec
mov
inc
adc
call
add
jne
mov
test
dec
insb
sbb
test
cmp
lcall
adc
add
loope
lea
cmp
loope
inc
mov
adc
mov
mul
inc
loopne
outsl
adc
or
js
cmpsl
inc
jecxz
xchg
lods
lcall
xchg
outsl
loop
inc
mov
sub
and
decl
mov
test
xchg
jnp
ds
push
sub
movsl
xchg
adcb
int3
lcall
popa
cwtl
ret
sbb
mov
and
add
mov
push
push
bound
ljmp
outsb
repz
scas
sbbb
fsubrs
cmp
inc
stos
xor
mov
jmp
ljmp
je
popf
push
inc
ja
lahf
and
xchg
in
sub
test
or
add
incl
lock
shll
mov
xchg
repnz
shrl
incl
mov
mov
insl
pop
cmp
cld
adc
stos
loope
insl
or
xor
lcall
je
ror
ljmp
aad
fwait
mov
mov
cmp
loope
cld
call
aas
addr16
sbb
cmpsb
mov
cld
mov
or
fmull
jmp
and
cmp
pop
dec
dec
mov
leave
incl
mov
popa
lea
stc
imul
clc
mov
pop
in
push
call
jo
mov
fadds
sbb
mov
sahf
xor
inc
sbb
call
sub
test
push
out
imul
push
sarl
fstpt
insl
jp
jno
inc
lock
jmp
cmc
xchg
push
jb
out
jne
dec
cmp
push
cld
add
adc
das
enter
icebp
incl
int
push
unpcklps
sub
pop
add
fwait
mov
lcall
and
mov
fisubrs
pop
push
pop
adc
xor
xchg
jne
sbb
jg
test
es
jp
push
push
aas
push
ljmp
dec
mov
loop
ret
mov
insb
cmpsb
pushf
and
push
loope
enter
sub
cmp
dec
sbb
push
fcoms
scas
shrl
lock
or
fcmovnbe
loopne
mov
adc
scas
push
cmpsb
adc
add
int
test
iret
jp
and
dec
xor
in
xchg
xorb
movsb
mov
mov
jp
or
call
mov
mov
xor
sarl
push
enter
adc
or
push
arpl
mov
lcall
or
xchg
outsl
loope
xor
inc
loope
lds
jnp
cs
sub
call
lahf
aam
sub
and
insl
testl
data16
fcomip
jb
xor
mov
call
add
fldenv
add
push
add
cmp
stos
mov
int
ficompl
adc
push
mov
into
cmp
rcll
push
popf
arpl
and
jg
js
adc
daa
in
arpl
xchg
enter
mov
lds
inc
pop
xchg
int3
lds
and
sbb
ja
scas
call
or
xchg
inc
mov
inc
lds
nop
divb
sub
icebp
enter
adc
jmp
fistps
mov
lahf
inc
or
mulb
or
les
rorb
mov
and
ljmp
je
xchg
stos
mul
or
mov
movsl
movsb
mov
pop
fnstsw
decl
sbb
test
cmpsl
jb
add
jmp
cmp
cmp
ret
lock
pushl
rorb
out
inc
xor
jmp
cwtl
js
mov
insb
in
inc
into
adc
mov
jecxz
in
jl
outsl
fldenv
addl
jmp
cmp
cmc
mov
adc
adc
xor
mov
mov
test
cmp
nop
imul
pushl
or
dec
mov
push
sub
aas
test
in
loope
inc
inc
jp
push
xlat
dec
sar
lcall
pop
jle
dec
loopne
loop
ret
lret
jl
jne
iret
adc
mov
or
cld
and
les
sbb
jno
jmp
and
call
push
jecxz
daa
add
je
vpaddsw
mov
dec
lcall
pop
aas
cmp
mov
in
roll
arpl
or
cs
xor
divb
push
std
loopne
std
movsl
imul
mov
mov
in
pushl
cltd
cmpsb
test
mov
or
pushf
lahf
repz
call
inc
mov
decl
cmp
fnstenv
in
testl
test
adc
stos
lret
ljmp
jns
in
out
inc
clc
push
mov
fsubl
or
int
out
daa
leave
fsubl
mov
jae
pushl
and
dec
test
add
pop
jp
outsl
std
pop
dec
jg
mov
cltd
jne
ljmp
sbbb
sub
fidivs
test
js
add
inc
mov
jp
fucomi
sbb
repz
mov
push
cmc
xchg
push
fisttps
lock
sub
mov
js
or
dec
sbb
push
inc
jbe
out
pop
pop
jl
push
nop
leave
nop
cmpsl
xor
jno
loop
inc
mov
xor
outsl
dec
lret
adc
pushf
out
adc
mov
cwtl
or
decl
sub
out
mov
xor
jle
std
and
sub
ja
incl
fwait
or
pop
dec
imul
add
jmp
mov
mov
into
insl
test
lods
call
or
mov
mov
cmp
cmp
out
in
lahf
adcl
mov
fidivrs
and
push
add
incl
out
insl
sbb
push
test
fs
cmp
sub
sub
cld
adc
imul
ret
movsb
jne
mov
mov
jae
js
jnp
push
pop
gs
aam
fcomps
cli
adc
mov
lcallw
lods
lret
adc
int
jmp
push
mov
ljmp
xchg
daa
jbe
lahf
add
test
mov
push
sbb
jp
adc
mov
dec
push
mov
addr16
pusha
es
dec
sbb
sbb
lret
sahf
test
imul
clc
pop
incl
mov
mov
mov
dec
fldl
pop
mov
repnz
pop
cmp
push
fadds
lods
mov
test
int3
push
ret
xchg
int3
fisubs
mov
mov
sbb
mov
clc
mov
mov
insb
in
push
push
dec
out
xchg
ljmp
pusha
mov
pushf
mov
xchg
leave
push
paddusb
jb
ret
fmull
loop
jg
xor
decl
loop
test
ret
mov
test
popf
ret
int
sub
add
xor
pop
sub
sbb
inc
add
inc
enter
xor
push
mov
jno
add
pop
sti
clc
les
sub
add
andl
adc
inc
push
pushf
xchg
mov
aas
mov
movsl
mov
pop
imul
in
sarb
xor
inc
lret
dec
sbb
pop
pop
into
into
xor
rcl
xlat
lock
ljmp
dec
sarb
repz
sbb
sub
add
mov
out
out
in
lods
pop
sbb
incl
shrb
outsb
mov
lds
or
and
xchg
push
inc
sub
ror
xchg
dec
incl
lods
mov
stc
nop
aam
dec
lahf
lahf
xchg
cmp
popa
inc
mov
in
cmp
ljmp
mov
daa
adcl
aam
and
xchg
test
or
sub
call
arpl
mov
jae
sti
mov
out
jbe
fwait
shl
ljmp
icebp
mov
je
dec
test
out
mov
ljmp
mov
fiaddl
inc
xchg
idivl
jecxz
ds
call
popf
frstor
cmc
add
jp
enter
dec
add
arpl
jb
lret
inc
pushw
outsl
lcall
and
inc
sub
outsb
mov
jmp
sbb
inc
xchg
jnp
cmpsl
jmp
jbe
lods
pusha
in
xor
ret
out
pop
les
js
popf
icebp
test
cld
stos
lcall
movsl
movsl
cli
add
jns
push
in
dec
test
in
sbb
xchg
xlat
inc
js
mov
push
push
inc
into
xchg
call
mov
adc
mov
add
sar
repnz
inc
lcall
xchg
inc
push
cld
ljmp
jnp
pop
adc
ljmp
bnd
inc
jl
push
push
jmp
fisttpll
arpl
cmpsb
jle
dec
mov
pop
or
mov
inc
mov
mov
loop
add
mov
stos
pop
add
xchg
jecxz
repz
xchg
adcl
push
sbb
out
clc
call
ds
mov
cmp
pop
cmp
xlat
and
test
loope
stos
mov
inc
addr16
das
cmp
cmp
dec
cmc
xor
mov
mov
movsb
sbb
arpl
xchg
lds
mov
dec
xchg
repz
cmc
arpl
sbb
and
lahf
xlat
fidivrl
movsl
cmp
inc
lcall
call
sti
cwtl
mov
shll
jmp
aad
mov
mov
shll
cmp
inc
ret
pop
cli
incl
push
inc
int3
ds
lock
fs
rcll
sbb
inc
adc
push
mov
out
sbb
enter
xchg
xor
lcall
repnz
imulb
aad
hlt
faddl
and
incl
fbld
ss
pop
mov
pop
mov
cld
or
ficomps
dec
mov
inc
add
jp
jmp
fnsave
xlat
nop
sbb
xchg
std
cmp
mov
mov
ljmp
xor
cmp
sar
push
sbb
inc
iret
aaa
imul
mov
in
mov
pop
icebp
pop
add
add
or
pop
add
es
incl
negl
cld
fcmovnb
inc
fwait
jae
dec
bound
mov
fisubrs
sbb
xchg
fmull
ss
lock
sbb
lret
mov
ds
xchg
dec
ss
loop
ljmp
in
out
out
das
sub
aam
mov
inc
data16
sahf
jle
add
pusha
jg
ret
inc
lea
lds
mov
enter
inc
lcall
push
icebp
sbb
out
mov
xchg
out
orb
lret
rcr
cmp
xlat
cwtl
idivl
cmp
clc
cmp
add
insb
cmp
fistpll
loopne
out
incl
mov
clc
jnp
popa
test
dec
xchg
pop
std
mov
dec
iret
cmc
nop
mov
pushf
cs
rclb
daa
jmp
fisttpll
mov
adc
decl
roll
les
xor
arpl
dec
pushf
sahf
add
stos
jnp
orb
mov
ljmp
sbbl
pop
pop
das
jmp
sub
fisubl
push
inc
loopw
mov
add
and
in
adc
lcall
incl
lea
aas
xorb
inc
cld
sbb
lret
shlb
jmp
adc
xor
mov
mov
inc
mov
mov
add
icebp
incl
jl
stc
lahf
push
outsb
jnp
and
sub
jle
inc
mov
call
jbe
cs
aas
lret
mov
mov
lret
cmp
xchg
mov
call
jecxz
int
dec
jle
fs
add
je
push
pop
pop
sub
mov
and
inc
orb
push
bound
movsl
add
sub
cwtl
aam
outsb
jne
inc
xor
sub
and
mov
push
push
mov
out
push
sub
inc
bound
cmp
cli
imul
or
scas
imul
jp
push
pop
aad
inc
clc
add
cli
subl
mov
rclb
dec
jle
std
dec
scas
jg
ljmp
xchg
rcr
jbe
and
je
push
pop
inc
push
sbb
inc
imul
ljmp
mov
lret
stos
xchg
inc
nop
mov
mov
scas
or
mov
out
stos
fstps
jbe
outsb
arpl
out
das
rcll
mov
lock
pop
pop
fwait
ljmp
xlat
aas
and
daa
xchg
dec
pushf
push
mov
les
popa
mov
call
cmp
imul
cwtl
sbb
int
mov
lcall
incl
or
xor
cmpsl
in
pop
ficomps
mov
inc
fstl
decl
imul
in
mov
ret
pop
mov
je
insl
push
inc
orb
call
xchg
fnstsw
cmp
das
inc
bnd
adc
sub
jno
in
add
repnz
mov
jmp
jnp
pop
ljmp
fs
les
mov
sub
dec
incl
and
or
int
icebp
sahf
addb
outsb
sub
shlb
repnz
push
insl
ljmp
mov
sbb
rcrl
stos
outsb
das
push
jge
ficoml
mov
jno
or
or
pushl
jo
jae
jnp
icebp
lret
mov
xchg
adc
out
dec
sahf
loopne
cmp
jge
pushl
sbb
cmpb
jbe
mov
dec
iret
loopne
mov
sub
decl
fadds
push
gs
test
jbe
mov
cmp
adc
adc
cmc
call
or
pop
leave
sahf
push
mov
mov
jg
aaa
inc
and
cmp
and
jge
sub
es
adc
test
pop
or
ljmp
mov
mov
push
mov
cmc
in
out
push
and
lods
push
adc
flds
xor
aaa
jno
mov
lods
imul
mov
cmpsl
push
negl
daa
mov
mov
movsb
fmull
movsb
mov
adc
sbb
add
pop
ds
jg
mov
pop
inc
sub
xchg
mov
fists
sbb
loopne
push
push
mov
mov
lods
cwtl
sub
rcrb
xchg
jecxz
ja
in
push
pop
addr16
into
sti
pushl
std
sarb
mov
or
addr16
cmp
sbb
in
jg
repnz
pushl
mov
movsb
test
adc
sahf
ror
loop
jbe
imul
sbb
jg
push
xor
xorl
in
stos
daa
jb
push
dec
mov
stos
inc
add
aad
stos
mov
xor
add
movsl
xchg
pop
sub
lods
mov
stos
xor
decl
mov
mov
jl
fsubp
loop
imul
cmp
pop
pushf
dec
xor
call
and
cmp
mov
fnstsw
icebp
or
popf
ljmp
sbb
std
dec
inc
js
sub
fisubrs
cwtl
sbb
pop
cltd
inc
insl
sahf
jl
out
push
sbb
cmp
mov
or
lret
outsl
cmp
adc
pop
mov
sub
out
aas
cmp
jle
pushl
cmp
pop
daa
or
sbb
push
jecxz
andb
testb
fidivrs
fnstenv
loop
sub
fidivs
xchg
imul
addb
jae
ja
cmp
pushl
mov
stos
xor
rcl
inc
pop
cvttps2pi
sub
cmp
jno
out
lock
push
lock
inc
pushl
std
or
fbld
in
out
fstps
mov
adcl
lcall
ret
fucomp
adc
sahf
shr
push
and
mov
dec
fwait
or
sar
dec
pop
xchg
fcom
jb
jp
inc
mov
xchg
loope
mov
mov
push
fdivr
jmp
shr
pop
xor
insl
mov
leave
out
add
mov
adc
pop
flds
ret
and
clc
mov
push
cmp
dec
push
fdivs
push
shll
lcall
pop
pop
xor
push
cmp
pop
mov
stos
pop
clc
mov
ret
mov
loopne
fiaddl
jbe
add
xchg
cmp
into
cmp
adc
popl
decl
jmp
adc
pop
mov
ljmp
push
xchg
sub
ljmp
lods
mov
mov
cmpb
jmp
and
lods
pop
outsb
data16
jbe
xor
cmpl
sahf
call
fcomip
jg
psllw
pop
enter
stos
inc
and
inc
mov
incl
in
pop
xchg
sahf
dec
aad
mov
aaa
xchg
mov
rorb
mov
jecxz
outsl
cli
jmp
jmp
insl
mov
fldenv
out
inc
xchg
lods
xor
rorl
dec
adc
cs
ljmp
popf
cmpsl
jo
inc
and
pop
adc
hlt
jecxz
xchg
push
jge
in
sahf
rcrb
pop
hlt
fs
fidivs
xchg
hlt
ret
fucom
lods
lods
mov
js
test
loopne
andb
pushl
mov
xchg
out
mov
jb
sahf
mov
lcall
xor
mov
xchg
fadd
insb
das
add
mov
scas
das
push
enter
loope
jo
add
mov
pop
in
adc
xlat
jns
xor
roll
or
mov
sarb
lret
daa
enter
mov
ret
outsl
mov
dec
xchg
push
mov
ds
call
fstps
cmp
hlt
jmp
icebp
aam
enter
lcall
cld
hlt
test
loope
mov
jmp
mov
punpckhbw
cwtl
out
clc
pushl
inc
fldl
add
clc
add
insb
lret
xor
adc
inc
cld
decl
dec
dec
ds
andb
je
and
je
fildll
sub
std
pop
lds
mov
incl
jp
jecxz
addr16
shll
stos
cmp
jmp
daa
inc
or
jmp
nop
daa
bound
sbb
test
or
add
mov
mov
and
pushf
lcall
pushf
insl
leave
sub
mov
cmpsl
mov
lods
dec
in
mov
daa
push
sbb
jae
imul
pusha
lret
add
js
jge
iret
xchg
ds
popf
adc
mov
cmp
js
dec
add
pop
imul
or
inc
addr16
shrb
not
out
clc
cmpsb
jmp
mov
fisttpl
mov
stc
hlt
dec
xchg
fisubs
arpl
push
push
negl
mov
nop
std
arpl
mov
out
push
aas
jl
sahf
imul
lret
shll
dec
push
dec
cmpsb
adc
mov
loopne
mov
idiv
into
jmp
xchg
sbb
jbe
push
repnz
incl
movsl
sbb
ret
xchg
cmpsl
jb
addr16
scas
mull
mov
cld
mulb
mov
xor
ret
lret
xor
loope
out
clc
sbb
test
dec
mov
sub
aas
pop
aaa
jns
mov
fbstp
mov
repz
shl
xchg
mov
mov
scas
popa
or
cli
sbb
xor
xlat
outsb
jae
imul
jne
pushl
mov
jno
ret
jmp
lret
and
cmp
pop
stos
add
push
sbb
out
repnz
jmp
sub
adc
jnp
je
and
add
mov
inc
mov
adc
sub
lods
push
movsl
jmp
xchg
sbb
je
outsl
or
lcall
xor
cmp
adc
cmpsb
je
ss
scas
jmp
cmp
mov
jg
cmp
iret
cwtl
pop
leavew
sbb
mov
les
sub
aaa
rcl
pushl
fsubr
in
in
add
repnz
stos
jne
fimuls
jb
inc
dec
lds
add
mov
pop
loope
adcb
call
xor
or
adc
gs
dec
adc
sbb
icebp
dec
mov
dec
je
idiv
or
hlt
pop
jle
add
jmp
xor
pop
lcall
aad
mov
rol
jae
fiaddl
and
lcall
repnz
mov
pushf
mov
or
sub
cmpsl
mov
movsb
decl
out
mov
bnd
sub
and
test
loop
or
aas
addb
mov
push
icebp
into
xchg
enter
outsl
add
xchg
or
pushl
icebp
shll
imul
and
sub
pop
mov
push
jmp
mov
xchg
in
mov
inc
out
rol
je
leave
loope
mov
jno
hlt
rcrl
jmp
leave
jae
push
fwait
std
leave
sbbb
push
jecxz
pop
push
mov
in
icebp
cmp
shrl
cwtl
out
or
fistpll
in
fldl
xlat
cmp
pop
xlat
addr16
incl
je
mov
clc
imul
pop
mov
push
fcoml
hlt
stc
divl
sub
fcomip
andb
sarb
push
jl
icebp
mov
add
bound
xor
xor
in
std
cmpsb
pop
sahf
sub
mov
enter
lock
add
mov
xchg
cmp
inc
xchg
fisubrs
cli
pop
outsb
pusha
daa
and
add
lret
mov
call
xlat
xlat
push
and
aam
and
pop
add
lods
sbb
jg
loopne
inc
dec
fisttps
mov
jp
adc
push
jmp
mov
lcall
mov
pshufw
out
mov
in
mov
cmp
jne
testl
or
xor
cmp
bound
sub
xchg
jmp
pushl
and
sahf
repz
jae
das
push
pusha
into
mov
inc
cmp
je
jmp
repnz
iret
out
scas
stc
mov
cmp
pop
ja
cmp
add
xor
arpl
dec
mov
pop
aas
dec
int
mov
mov
data16
roll
push
loopne
xchg
inc
xchg
adcb
ljmp
mov
jge
push
push
pop
leave
cmp
sarb
jo
pop
test
decl
ret
jno
and
pop
outsb
out
add
in
daa
je
inc
rolb
cmp
clc
cmp
sub
ja
inc
xor
mov
loop
mov
xchg
inc
dec
pop
mov
add
inc
or
cs
jnp
or
or
mov
js
inc
mov
loop
repz
mov
mulb
icebp
stc
adc
aad
adc
aas
rcrb
cmc
fdivrs
out
inc
lret
cld
fisubl
ret
xchg
xor
ds
daa
jl
sub
dec
push
aaa
adc
pusha
popf
mov
mov
xchg
fcomip
decl
ljmp
cmpb
push
and
adc
incl
clc
inc
jmp
and
add
sbb
filds
test
xor
and
imul
popa
xchg
xor
pushf
hlt
push
mov
push
ds
mov
xor
sub
mov
xor
cmpsb
rcr
xor
popa
jne
das
ljmp
fldl
push
pop
ret
mov
sbb
int3
push
inc
sbb
sub
xor
add
in
mov
stos
ljmp
lret
fldcw
fnsave
push
push
repz
push
inc
stc
ss
popf
mov
clc
push
lock
jg
incl
ficompl
int3
movsl
fiadds
cmpsl
fistpll
jb
jb
mov
mov
jl
jp
or
int
dec
or
out
insb
jle
pop
adc
lods
decl
fsubl
movsb
das
jae
iret
cld
sbb
in
push
out
adc
ljmp
mov
daa
add
or
test
rcrl
pop
stos
cmc
inc
push
push
lcall
insb
sti
xor
cmc
pop
test
jge
addr16
test
test
jl
shlb
aaa
cld
decl
jae
lock
aad
cmp
push
test
xchg
fisubs
movsb
pushl
sahf
xor
sbb
mov
stc
xchg
pushf
cltd
push
mov
dec
mov
decl
stos
scas
out
push
pop
dec
adc
shr
sub
aad
mov
maskmovq
testl
lret
mov
sbb
xchg
pusha
repnz
es
and
ljmp
add
iret
je
lcall
call
pop
jg
sarl
retw
iret
sahf
clc
mov
sbb
jecxz
inc
aas
gs
adc
inc
inc
fadds
sbb
pusha
mov
cmp
repz
xchg
test
or
cwtl
fisubs
sub
shlb
mul
add
ret
mov
ljmp
cli
out
jp
test
or
ret
mov
push
mov
and
addl
sub
sbb
shll
in
addr16
sarb
xchg
cmp
sub
lret
add
lret
dec
rcrl
adc
jmp
outsb
ror
sbb
data16
inc
xchg
add
jl
lret
xor
cmc
sub
int
push
stos
add
or
in
cmp
xchg
icebp
arpl
icebp
xor
fistpl
aad
lahf
sbb
fcomip
test
dec
inc
jo
cmpsb
mov
jb
out
movsb
mov
sub
in
incl
arpl
les
out
dec
adc
adc
jmp
xchg
stos
mov
inc
out
lea
test
mov
cltd
sbb
sub
popa
in
sbb
pop
and
push
add
or
aaa
imul
push
iret
dec
mov
cmp
iret
cmp
sbb
testl
das
rclb
dec
fmull
pop
or
push
sti
lcall
repnz
ds
aaa
bound
cltd
in
shll
jg
sbb
adc
clc
fcmovnb
mov
xchg
mov
mov
push
lcall
lahf
cmc
out
adc
lods
mov
xchg
and
fiadds
lcall
jl
ljmp
xchg
outsb
cmpsl
jnp
mov
outsb
in
adc
fisubs
inc
jmp
in
enter
fldenv
call
lock
push
imul
popf
inc
inc
lods
in
aam
inc
outsb
popa
sahf
mov
adc
repnz
lds
pop
outsl
adc
loopne
push
push
pusha
out
inc
add
lret
call
cmp
mov
std
daa
popa
ljmp
mov
stos
shlb
add
inc
loop
jg
lcall
cmp
jp
jl
cmpsl
test
jno
dec
or
cld
cli
xor
sub
push
gs
int3
push
push
ficoms
outsb
push
imull
push
and
testl
cmc
fnstenv
fldl
and
dec
sahf
shlb
mov
call
lahf
int3
cld
mov
or
pushl
rcrb
les
addl
inc
push
push
in
or
jmp
xchg
clc
and
lds
sahf
decb
sbb
scas
push
jno
ret
clc
jle
aad
mov
xchg
jo
repnz
shlb
cmp
fdivl
and
call
cmp
dec
adcb
mov
rorl
fwait
push
jnp
cltd
adc
std
dec
rol
ljmp
fdivl
xlat
aaa
xor
shrb
pushl
and
add
or
jmp
repnz
dec
push
bound
lcall
aad
or
push
ljmp
vcvtsi2sdl
shr
lds
sub
call
mov
inc
pop
cmp
add
call
sub
inc
sbb
cmp
mov
mov
and
sbb
popf
nop
aaa
sub
push
pop
cmp
jns
cmc
pop
stos
jmp
add
call
repnz
addb
ja
lds
call
imul
movsl
out
or
sub
xchg
xor
mov
jns
push
sub
lcall
fdivrp
cmp
mov
leave
lods
jp
sbb
add
cmpsb
pop
xchg
ret
out
jle
jg
jmp
dec
pop
sub
clc
pop
icebp
js
sbb
clc
jmp
add
stos
jnp
cld
call
sbb
inc
ja
rcrb
fwait
stc
push
fistps
inc
js
movsb
adc
dec
call
sti
mov
shrb
mov
jle
sbb
dec
jmp
cld
call
mov
mov
add
push
out
mov
das
mov
jbe
jge
fsubrl
push
mov
adc
jbe
push
repz
lahf
jb
cmpsl
test
jb
dec
dec
fwait
call
aad
add
cmp
mov
mov
adcb
mov
jmp
push
sub
sbb
mov
dec
inc
movsl
mov
sbb
push
ss
or
call
ret
clc
notb
pop
call
out
or
fs
ja
cmpsl
insb
pop
dec
ljmp
cmp
gs
ret
push
loop
jo
or
adc
push
xchg
fisttps
pop
pop
pop
push
lret
lret
repnz
pop
enter
mov
jnp
loop
or
sbb
cmp
and
pop
xchg
call
cld
mov
je
or
jge
mov
pushf
aad
mov
imul
push
sarl
push
cmp
shl
push
dec
pop
jge
sbbl
inc
lods
decl
lock
sahf
imulb
jg
dec
inc
ret
mov
testb
decl
stos
out
adc
test
add
daa
mov
sbb
jnp
sbb
mov
decl
jno
clc
push
push
push
adc
aas
xor
cwtl
mov
cmpsl
enter
ja
lahf
jmp
mov
divb
mov
jle
into
pmullw
pushf
sbb
pop
pusha
nopl
jg
dec
cli
cwtl
test
nop
mov
adc
into
ror
dec
cli
div
lods
mov
loopne
das
clc
call
ss
lods
dec
and
cmc
xor
in
inc
mov
mov
lods
jp
jns
repz
or
arpl
ja
cmp
push
inc
jl
jg
mov
imul
sub
and
pusha
addr16
js
pop
cmp
or
adc
add
lods
jnp
adc
fsubl
sub
stc
jp
sub
cmpb
pushf
mov
push
lret
mov
packssdw
jnp
adc
xchg
movsl
inc
sahf
incl
data16
rsm
jecxz
push
inc
ds
int
sti
or
or
test
movsl
xor
jge
cmp
mov
lock
dec
add
pop
xchg
add
xor
xlat
and
mov
adc
mov
push
pop
mov
push
or
cmp
ljmp
enter
push
icebp
mov
push
xchg
aad
sub
jo
add
ficoms
movsb
out
mov
push
std
std
mov
jg
int3
jmp
sbb
stos
adc
pop
mov
mov
or
lcall
mulw
cmp
enter
rorl
addr16
shll
sbb
jp
ja
jmp
cltd
jnp
mov
jecxz
mov
imul
mov
pop
loopne
fucomi
fistps
cwtl
loop
pop
out
fsubs
jno
add
jo
scas
mov
push
dec
adc
add
inc
mov
incl
jmp
pop
jp
or
les
and
jg
call
sbb
xchg
push
xchg
push
jl
and
aas
mov
stos
xor
pushl
xor
mov
dec
push
lock
mov
test
mov
repnz
int
addb
add
jmp
mov
sub
sub
push
aam
xchg
addb
stc
test
and
outsl
push
iret
or
pop
xchg
nop
sbb
fisubs
pushf
pusha
mov
das
sar
in
aaa
xlat
fcomps
dec
push
fwait
inc
sub
out
fiaddl
clc
jg
mov
and
push
addb
push
mov
cld
pop
cmp
mov
ret
and
push
repz
movsb
dec
jl
lds
ss
pushl
inc
jmp
mov
lret
fsub
sarb
rclb
fisttps
je
mov
xchg
xchg
mov
cmp
cli
mov
lods
cli
je
mov
xchg
jns
fcomip
jmp
xlat
and
add
sub
ret
cmp
loopne
pop
or
sub
mov
popf
les
mov
int
test
cmpsb
gs
popf
mov
push
sub
fcomip
lock
outsb
cmpsb
outsb
lea
lea
test
pop
add
decl
call
pop
je
pop
cmpl
and
hlt
ljmp
xchg
repnz
fwait
xchg
outsl
pusha
jo
ss
cli
sbb
jne
popa
jbe
movl
push
sub
fs
push
movsb
adcl
mov
repnz
jnp
in
push
ljmp
in
xor
inc
cmp
jnp
mov
push
or
sbb
dec
push
and
decl
mov
incb
and
push
cmpsb
in
dec
outsb
inc
inc
in
mov
mov
mov
call
push
xlat
or
pop
sbb
adc
sbb
std
inc
scas
icebp
cwtl
pushl
stos
out
jle
xor
gs
outsl
flds
adc
sub
cld
mov
xor
ffree
push
out
sti
jmpw
das
jle
orl
jne
xor
or
sub
mov
lock
jne
adc
mov
cwtl
pop
std
push
xchg
jno
xchg
mov
loopne
add
lahf
jo
or
out
dec
or
adc
jmp
jle
call
jb
lods
push
sbb
pop
dec
cmpsb
push
sbb
clc
jo
push
out
loop
lcall
jne
xchg
sbb
jl
imul
fstpl
adc
lcall
imul
imul
cmp
pop
mov
ret
inc
test
add
dec
pop
mov
incl
push
ja
or
fstpt
arpl
mov
lock
or
pop
mov
sbb
xchg
pop
adc
push
lods
mov
decl
lods
sbb
mov
test
scas
push
lods
aam
inc
mov
into
pop
push
inc
xor
andb
cmp
pop
push
sbb
insl
sub
into
xor
add
push
pop
xor
ja
cmp
lret
xchg
xor
mov
mov
daa
inc
pushf
gs
push
inc
push
jg
repnz
bound
imul
scas
sar
pushl
mov
or
dec
imull
pop
mov
mul
fimull
sbb
mov
xor
sbb
call
out
dec
xor
sbb
fsubrs
test
repz
push
or
cmc
sub
data16
fdivrs
pop
ror
out
mov
cmp
mov
popf
and
aad
xchg
in
aas
jg
cmp
sub
sbb
leave
ljmp
sub
add
subl
push
push
add
int3
int3
popa
adc
pop
in
fcos
dec
addr16
test
repz
movsl
jo
push
sub
lock
rcl
sub
lock
inc
addr16
sahf
cmp
jmp
pop
hlt
daa
test
lcall
arpl
and
mov
out
and
sub
call
mov
push
pop
sbb
mov
cmpsb
mov
jg
mov
dec
dec
insl
adc
sbb
jmp
and
add
pop
pop
cmp
jbe
inc
test
test
mov
mov
inc
js
js
ljmp
mov
sbb
add
and
jb
inc
scas
loope
jle
rcrb
dec
repnz
sub
jne
pop
ljmp
outsl
stos
sbb
je
mov
mov
pop
dec
push
decl
leave
test
push
in
xchg
jmp
xor
and
dec
jo
inc
popf
sar
dec
ret
sub
dec
test
jg
data16
or
and
ljmp
mov
mov
sub
cmc
push
jl
fldt
dec
cmpsl
push
xchg
pushl
xor
testb
sahf
int
lock
push
lods
shl
int3
nop
jae
mov
decl
push
mov
xchg
stc
stos
jno
mov
xor
adc
add
out
sbb
lcall
insl
fldenv
adc
jmp
or
test
aam
out
pop
mov
insl
imul
inc
inc
dec
or
sub
je
inc
inc
scas
inc
test
xor
repz
pusha
mov
ljmp
fildll
or
mov
push
bswap
xlat
pop
dec
es
fdivl
xchg
xchg
imul
dec
jl
inc
je
pop
lcall
push
sti
cs
ljmp
clc
pop
popa
mov
movsb
sub
mov
idivb
or
sahf
in
out
jg
mov
mov
data16
popa
scas
adc
mov
incl
imul
cld
mov
xchg
insb
add
cltd
lret
nop
stos
xlat
mov
adc
inc
jg
pushl
pop
pop
push
ja
mov
std
jecxz
jo
loopne
xchg
push
inc
loopne
pop
into
call
das
lcall
cli
jne
fdivrl
imul
std
js
sar
inc
sahf
sub
xchg
sti
mov
mov
jle
pop
scas
call
mov
and
aaa
sub
mov
imul
aam
cmp
jmp
xchg
pop
inc
pop
inc
sbb
xor
ret
add
ds
sbbb
pop
test
insl
xchg
dec
push
xchg
pushf
pop
cmp
insb
int
xor
add
scas
adc
inc
fdivrl
jg
cld
inc
xor
or
sub
mov
popa
lods
pop
adc
push
mov
mov
movsb
out
or
xor
push
test
ljmp
inc
cwtl
rcrb
cmp
sbb
repnz
pop
sbb
cwtl
jnp
inc
jmp
dec
mov
loop
loope
ds
inc
and
call
sbb
mov
cmp
or
jp
sti
int
bound
jno
and
dec
jo
mov
decl
xchg
push
test
mov
jle
out
les
ss
sub
dec
push
and
imull
mov
mov
mov
mov
call
popfw
jnp
lock
jmp
adc
adc
lret
pop
cld
cltd
sahf
pop
jnp
nop
mov
inc
cli
jmp
loop
test
enter
mov
mov
pop
mov
addr16
mov
decl
push
popa
cli
ss
rclb
jl
arpl
xor
dec
add
cld
jl
add
lret
dec
sub
jle
pop
pop
pushf
or
jg
dec
xor
mov
jp
pop
and
popf
inc
je
decl
or
xor
pop
inc
add
xchg
lret
fisttpl
lcall
and
sub
outsb
inc
inc
mov
mov
cwtl
scas
xchg
incl
mov
fsubp
mov
popf
adc
adc
pushf
flds
inc
loope
out
jnp
cs
cmp
imul
addl
and
into
jmp
lret
add
dec
push
cmc
cs
inc
inc
faddl
pusha
mov
ljmp
mov
cwtl
mov
or
das
sbb
arpl
nop
icebp
mov
mov
inc
mov
std
jmp
mov
arpl
lods
sbb
xchg
std
xchg
mov
fstps
ja
xor
xchg
xchg
bound
sbb
cmovge
xor
cmp
and
jl
faddl
cmc
int3
in
out
lret
daa
jbe
les
lcall
repz
dec
push
adc
or
mov
cld
xor
dec
adc
and
sub
jmp
fnstenv
mov
js
out
dec
fcoml
sbb
sub
or
scas
add
std
add
xchg
sbb
pop
pushf
aas
adc
addr16
call
jnp
leave
clc
xor
pop
fsub
bound
int
cmpsb
repnz
sbb
push
sarl
inc
mov
cmp
hlt
or
ret
or
or
loopne
bound
sahf
into
jmp
jmp
or
fists
dec
ret
es
outsb
ror
andl
jmp
incl
aam
inc
aam
popa
cltd
movsl
xchg
loope
xor
repnz
sbb
inc
mov
and
mov
ljmp
xorl
xor
mov
jno
iret
push
sub
mov
dec
jno
imul
push
or
scas
xor
and
xchg
cmp
jne
xor
inc
cmp
movl
jmp
sti
jns
xchg
mov
lret
decl
xchg
and
push
xchg
popf
scas
mov
push
sub
sti
sbb
jl
dec
aad
mov
jg
inc
mov
fcomip
dec
push
sbb
int
pop
inc
mov
jl
adcb
aam
mov
rcrl
mov
sub
push
scas
mov
dec
daa
mov
out
push
rolb
pop
leave
sti
cld
call
or
mov
push
lret
sti
into
dec
lea
jl
sub
dec
incl
mov
cmp
adc
adc
shl
sbb
mov
decl
aad
dec
push
adc
mov
xchg
adc
push
mov
aaa
lods
add
xor
and
js
pslld
fldl
ja
sbb
cmpsl
jecxz
inc
jg
add
testl
dec
pop
inc
fldt
cmp
lds
adc
dec
xor
inc
fs
sub
push
test
mov
dec
adc
outsl
mov
pop
sub
ret
insl
stc
movsl
clc
dec
jae
lds
fisttpll
pop
or
jno
and
jle
imul
negb
es
shll
push
ds
jae
xchg
mov
jl
xchg
lcall
clc
adc
test
xor
add
jecxz
loope
mov
add
mov
push
loope
loopne
call
sub
icebp
paddd
and
and
inc
les
dec
mov
mov
pop
inc
lcall
ja
sub
insl
in
pop
loopne
shll
imul
lds
das
cli
repnz
fdivl
sbb
data16
test
in
push
xchg
xchg
mov
stos
pushl
inc
lret
icebp
mov
loopne
int
out
sub
xchg
jmp
loope
lock
decl
aad
cmp
into
xchg
pop
or
outsl
xchg
cmp
std
add
pushl
pushf
fcmovnu
sub
add
inc
add
add
mov
jmp
pushf
decl
fidivs
and
movsl
lret
pop
aam
mov
stos
mov
sbb
repnz
cmp
js
cli
ljmp
rcl
or
hlt
jno
loopne
dec
or
mov
lods
out
int3
call
jp
mov
add
push
xlat
fldpi
imul
sbbl
xor
rolb
decl
sbb
dec
jmp
jecxz
push
test
push
fsubs
pushl
in
mov
pop
xchg
mov
and
ds
popa
outsl
pop
aad
xor
push
ds
sarb
lret
cmp
aad
stos
shrl
std
mov
dec
fsubrs
dec
in
fsubl
push
jnp
sbb
popa
test
and
or
fstps
fldl
in
iret
in
jg
mov
jnp
sub
cwtl
dec
and
insb
cwtl
mulb
sbb
inc
dec
cmp
das
lret
jbe
repz
decb
andl
or
xchg
mov
inc
xlat
decl
imul
inc
insb
sti
dec
xchg
sbb
and
sub
das
lods
pop
call
leave
aad
adc
xor
cmp
loope
movsb
or
out
stos
in
lret
lcall
mov
into
sahf
or
xchg
cwtl
adc
and
mov
js
dec
jge
mov
movsb
shll
out
mov
xlat
arpl
into
xor
pop
push
add
dec
pop
iret
push
sbb
inc
cli
lcall
push
xchg
mov
imul
popf
lret
or
rcrl
bound
mov
mov
cli
fnstsw
lods
repnz
and
dec
shr
clc
dec
lahf
shr
pop
jle
mov
xchg
aaa
sbb
sbbl
decl
scas
out
adc
loop
lds
pop
nop
fidivs
dec
int
jmp
int
push
inc
push
popf
add
sbb
in
mov
sahf
cmpsb
int3
cld
jp
add
pop
or
clc
mov
sbb
hlt
or
push
fisttpll
inc
mov
jno
scas
test
or
call
shlb
inc
push
xchg
sbb
fwait
jo
and
jg
or
xor
add
loopne
jbe
imul
mov
mov
ljmp
or
lods
mov
test
and
sbb
cmc
add
insl
inc
adc
add
fimull
into
mov
cs
mov
ret
int3
les
jecxz
fs
popf
test
movsl
int3
clc
call
cld
cmp
test
push
mov
sub
push
stos
lods
mov
xor
ja
gs
jmp
mov
jb
jle
nop
mov
insl
adc
cmp
mov
inc
aas
mov
push
dec
inc
sub
rcl
or
loope
rorl
loopne
jmp
jg
arpl
push
inc
dec
ds
add
mov
cmpsb
daa
scas
cli
jmp
dec
stos
inc
cli
and
or
cld
clc
push
jae
fldcw
xchg
test
push
push
mov
decl
cmpsb
int
cmp
xor
ljmp
test
inc
sub
cmp
enter
lret
and
cmpsl
fs
out
test
mov
mov
clc
popf
stc
add
mov
repnz
mov
aas
pop
cmc
or
decl
adc
fsincos
mov
into
adc
jmp
imul
push
loopne
ret
push
cmp
decl
std
icebp
xchg
xlat
nop
aas
xlat
push
inc
dec
mov
adc
pop
js
mov
cmp
mov
test
xor
fistpll
dec
lock
pop
std
pushl
mov
lret
or
repz
xchg
cmpsb
setle
mov
mov
sub
out
addb
ljmp
out
ljmp
dec
mov
sbb
dec
fmull
pop
mov
or
push
addr16
pushl
into
add
pop
sti
fimuls
jo
call
lret
jns
cmc
rcll
adc
outsl
jns
jns
aas
imul
lds
sbb
mov
push
and
push
jle
fdivs
jnp
or
aas
outsb
movsl
outsl
jne
add
xchg
mov
lods
xlat
rorb
test
nop
mov
jmp
sbb
les
rcll
adc
out
mov
in
mov
ds
push
cmp
mulb
repnz
outsl
xlat
and
sub
inc
inc
ss
adc
daa
imulb
ret
cmpl
mov
inc
rcll
adc
xchg
loope
or
repz
adc
push
jg
inc
lea
cmp
push
ss
sub
test
cmp
jb
mov
cmp
fldenv
movb
scas
push
mov
jle
lret
fwait
test
jp
mov
pop
fs
sub
mov
pop
sub
inc
mov
jg
ret
std
stos
addr16
addr16
call
pop
sbb
mov
inc
out
and
ds
push
add
cmp
push
aam
mov
pushl
imul
inc
mov
loope
cmc
pusha
and
lock
sub
sar
pushl
loop
xchg
pop
shrb
test
add
cli
pop
xor
incl
fadds
sti
fsts
mov
int
inc
roll
fiaddl
int
adc
xchg
jmp
or
xor
mov
jmp
pushf
sub
pop
lods
jg
and
sub
pushf
push
shlb
nop
gs
dec
enter
pop
lock
das
dec
mov
cmp
cmp
cmp
jle
call
jl
pop
mov
jge
inc
jne
rcr
sbb
dec
test
lcall
mov
jno
add
mov
loope
sub
mov
rcr
cmp
inc
mov
ds
out
inc
arpl
insb
or
int
cli
push
jg
movsl
xchg
mov
cltd
mov
leave
adc
jnp
popa
leave
jae
repnz
mov
dec
pop
mov
leave
insb
ss
dec
xchg
movsl
add
lcall
cmp
js
in
arpl
cmpsb
xchg
cmp
or
jg
push
sahf
outsb
aam
adc
inc
cmpsl
dec
jb
pop
inc
adc
cli
inc
pusha
sbb
loope
cmp
fidivs
je
mov
sbb
aam
pop
xor
fisttps
mov
clc
mov
andb
and
mov
movsl
sub
decl
icebp
dec
inc
test
cmp
pop
js
push
add
jg
movsb
mov
pusha
filds
push
add
ljmp
js
push
mov
cltd
movsl
xchg
ss
mov
imulb
pop
pushf
jecxz
leave
jbe
jae
js
pop
nop
outsb
push
cmp
aas
cmpsl
sub
cltd
clc
xor
fcom
adc
pop
iret
leave
leave
ds
mov
mov
cmpsl
mov
or
lcall
sub
sti
mov
adc
pop
mov
add
pushf
mov
cmp
pop
sub
and
xor
lcall
mov
rcrb
out
xchg
jbe
jmp
movsb
push
mov
mov
inc
xchg
push
test
mov
xchg
cld
add
dec
lea
or
cli
lea
cmpsb
lret
imul
push
mov
es
lahf
adc
ficoms
xchg
call
push
add
call
cmp
popa
sahf
push
pop
inc
imul
push
orb
lcall
mov
addr16
daa
mov
jo
jmp
ja
je
or
movb
push
mov
lods
dec
jg
jmp
mov
cmpsl
repnz
push
and
enter
pushl
out
and
or
and
jp
rcl
sub
jbe
mov
movsb
incl
and
fiaddl
jecxz
fs
enter
arpl
imul
inc
jg
push
ret
sub
lea
or
pop
scas
ss
xor
pop
xor
mov
loope
jecxz
pushl
fdiv
sub
addr16
xor
inc
test
mov
cmc
sbb
pop
add
sbb
pushl
imul
int3
arpl
stos
add
filds
cmp
inc
jns
lcall
dec
mov
lods
incl
je
jmp
out
clc
mov
jmp
sub
xor
lods
ja
mov
es
adc
decl
out
add
mov
lret
mov
leave
dec
push
xor
sarl
mov
sti
mov
scas
or
js
mov
cmp
bswap
outsl
add
jmp
ffree
scas
cmpb
test
and
sub
or
pusha
fst
and
repnz
into
ljmp
cwtl
pop
adc
sub
cmpsb
dec
dec
adc
pop
jnp
mov
adc
mov
jmp
xchg
dec
pop
gs
inc
movsb
fiadds
cld
mov
inc
fidivs
cmp
push
aaa
clc
lcall
ljmp
add
xchg
pop
aas
jle
loopne
jecxz
cmp
jbe
pop
lock
adc
mov
rolb
loopne
out
aaa
push
or
push
add
sbb
mov
add
mov
add
pop
imul
dec
loope
jo
stos
leave
push
push
call
jg
mov
mov
dec
pop
aam
lret
xchg
lock
imul
jmp
cmp
cmpsb
cltd
outsb
cmp
sbb
and
scas
in
insb
dec
sarb
movsb
xor
cld
pushl
popf
shlb
aaa
add
add
enter
add
fnstenv
pop
std
sbb
inc
iret
inc
mov
pop
ljmp
aas
cmp
outsl
clc
jg
and
jo
rcrb
sub
cmp
lcall
jg
int
int
loope
incl
xor
push
mov
repnz
and
loop
jl
push
jmp
push
leave
xlat
popa
or
mov
popa
mov
adc
shr
ljmp
ljmp
adc
adc
notl
mov
fstp
clc
and
es
sbb
adc
call
ljmp
and
mov
or
or
xor
mov
incl
lret
mov
roll
mov
les
fsubs
test
imul
lcall
or
std
ficoms
jno
jecxz
xor
ret
xchg
test
lret
inc
ljmp
popf
mov
mov
fimull
fsubl
dec
push
push
sahf
cli
insl
lods
sbb
xchg
jmp
imul
jg
cltd
sub
jmp
pop
mov
lret
adc
std
movsb
or
movsb
in
into
pop
dec
dec
loope
enter
xchg
cmp
aam
pop
std
pop
fstp
scas
inc
cld
stos
jp
in
sbb
das
adc
cmp
fs
dec
jo
sti
mov
decb
out
xchg
test
or
call
call
xchg
popa
jbe
imul
lcall
into
ljmp
int
inc
out
movsb
loopne
fwait
and
jge
popf
sub
sub
inc
mov
lret
lods
popf
mov
lret
dec
fldl
xchg
cmp
sarl
cltd
lods
push
push
push
xor
ljmp
jp
mov
sbb
sbb
sub
jl
ja
ret
mov
jmp
adc
ljmp
mov
faddl
jmp
popa
ds
mov
dec
ja
push
call
std
scas
ljmp
mov
mov
jno
sub
add
jb
lcall
or
mov
sbb
and
mov
loop
mov
adc
enter
jo
movsl
test
enterw
jg
jno
pop
cld
iret
jp
mov
adc
add
xor
mov
xchg
adc
ljmp
stos
cmp
sub
mov
movsl
arpl
testb
jmp
outsb
cmpsl
xchg
pop
mov
pop
cld
inc
cltd
adc
test
in
cmpps
mov
jmp
inc
adc
dec
div
rclb
pop
inc
or
daa
pop
stc
xor
ljmp
out
into
js
or
jge
and
ret
xor
inc
sti
mov
adc
decl
xor
popa
adc
shlb
dec
fisttpl
add
lahf
jecxz
lahf
jl
lods
sbb
sbb
out
sbb
cld
sub
es
fstps
shl
adc
out
loop
dec
xchg
dec
lods
insb
pop
xchg
mov
pop
xor
sub
sbb
jno
fbstp
lcall
inc
imul
push
cmp
add
cmpl
incl
gs
xchg
sub
sbb
pushl
mov
add
inc
mov
add
addr16
insl
mov
mov
inc
test
jmp
das
xchg
call
adc
push
cmpsb
jae
jae
sub
cmp
jmp
xchg
scas
sub
mov
je
mov
mov
sbb
ja
cmpl
sub
fs
xchg
mov
and
lock
pop
test
pop
in
sbb
cmpsb
adc
stc
push
cmp
dec
lock
mov
xchg
or
repz
and
cmp
jbe
cmpsb
push
pop
mov
xor
jns
adc
sti
sub
fcoml
mov
dec
add
mov
push
add
pop
push
mov
cwtl
pop
clc
ljmp
and
ljmp
mov
std
stc
mov
fdivrp
test
jecxz
std
incl
rclb
aas
sub
sub
rorb
sub
adcb
lock
sbb
insb
fstpt
insl
inc
prefetchnta
sbb
fcomi
leave
cwtl
xor
leave
jge
insl
mov
jg
lock
rcl
ljmp
dec
rdtsc
ss
int
dec
ret
lcall
call
pusha
mov
mov
pop
stc
stc
imul
and
sub
pop
cwtl
scas
and
aam
cmpb
ror
push
arpl
lods
cmc
pop
into
gs
incl
es
push
or
cmp
test
fildl
mov
pop
mov
push
mov
incl
or
cmp
mov
shrb
jne
adc
cmp
mov
cmp
jmp
sbb
scas
push
imul
xor
cltd
jp
out
lock
shlb
mov
lcall
or
push
test
outsb
stos
stos
add
arpl
jbe
cli
sar
stos
jg
test
cli
sub
add
insb
in
cs
sbb
decl
mov
aas
and
cmpsl
dec
or
ret
and
push
dec
mov
gs
push
negl
mov
int
xlat
repnz
jbe
push
lods
push
push
lock
push
lret
xchg
jge
daa
pop
jmp
xchg
pusha
inc
fistps
icebp
push
add
jmp
mov
xor
mov
loopne
icebp
mov
xlat
add
xor
mov
add
nop
xchg
cs
int
rclb
jb
pop
push
pop
cld
imul
ljmp
cli
testb
aam
lcall
add
daa
and
stos
fldl
ss
dec
lcall
repnz
mov
pop
addr16
or
hlt
cltd
popf
and
pop
test
sub
pop
outsb
std
xor
jg
js
test
or
dec
out
scas
sub
cmpsl
out
add
cmpsl
lahf
jbe
or
gs
xchg
sbb
call
outsb
data16
imul
and
rcr
xor
push
jg
decl
repnz
dec
pop
push
cli
ljmp
lcall
leave
xchg
test
or
fisubrl
mov
add
call
jmp
cmp
aaa
ret
adc
decl
push
mov
out
xlat
mov
scas
mov
std
std
mov
pusha
xor
mov
xor
sti
mov
jmp
stos
jns
fcomps
cmc
es
inc
sbbb
mov
rcr
inc
mulb
mov
daa
dec
cltd
fprem
cmpb
dec
andl
das
aas
out
ljmp
inc
xchg
pop
pop
rep
or
aas
pop
ret
mov
push
and
cmc
inc
jo
pop
inc
add
adc
mov
js
lock
insb
sbb
cmc
sbb
xchg
inc
sti
push
insl
xor
push
std
mov
insl
xchg
and
mov
fwait
add
dec
pushl
nop
and
data16
ja
dec
or
lret
aas
xor
cmp
das
mov
lcall
dec
mov
xchg
subl
cmp
dec
mov
xlat
xor
fwait
add
insl
adc
es
sarb
adc
lcall
loope
sub
popa
and
mov
mov
loopne
decl
push
mov
js
inc
dec
out
mov
sub
decl
mov
mov
xor
pushf
pop
add
or
pop
cmp
jae
and
jae
mov
sbb
add
push
sbb
test
repnz
fs
mov
jg
addl
ljmp
push
call
fildl
xor
inc
inc
shr
pushf
orl
ret
mov
ret
call
cmpsb
pop
insl
jne
add
popa
ret
sbb
push
add
int
es
in
jge
jp
push
shrb
insl
xchg
sub
inc
fstps
cld
pop
mov
mov
pop
ds
test
jg
jns
sbb
and
out
adc
and
push
push
inc
xchg
push
add
inc
push
jne
mov
cli
outsl
lcall
into
loope
mov
xchg
fs
jne
scas
fstp
xor
popf
sub
dec
adc
ret
and
push
js
adc
push
jmp
inc
addl
push
sub
fldl
and
xchg
sahf
std
mov
mov
inc
mov
or
out
and
int
sbb
push
leave
sub
ljmp
push
mov
pop
leave
xor
cwtl
sbb
mov
cwtl
ljmp
mov
and
invd
imul
jae
call
jg
jl
or
punpckhdq
jo
out
mov
inc
inc
dec
jecxz
cmp
pop
ljmp
lock
jp
das
pop
or
mov
movsb
popf
js
jmp
test
pop
in
cltd
js
std
jecxz
sub
sbb
decl
xchg
jbe
aas
pop
jmp
movsl
xchg
or
shlb
jle
xchg
mov
call
mov
mov
dec
jo
leave
addr16
mulb
and
or
jmp
nop
dec
or
adc
iret
aam
fcomip
cmp
mov
push
sarl
mov
pop
data16
dec
push
addr16
push
pop
lret
mov
rol
lods
roll
cmp
pushl
hlt
sub
outsb
pusha
call
dec
loop
sbbl
ja
and
sub
dec
lock
ljmp
int
mov
lret
jae
jle
xchg
cmp
out
cli
iret
cmp
stc
lcall
int3
mov
xchg
dec
int
mov
ja
xchg
mov
and
jl
and
lcall
outsb
pop
sbb
in
mov
add
pushf
inc
mov
lea
xchg
rcrb
sub
inc
cs
or
cli
shll
pop
es
std
rclb
js
pop
push
pop
sbb
push
inc
adc
loope
stos
ljmp
mov
inc
test
das
sti
loopne
fisubs
lock
fnstsw
fstpl
int
mov
pushf
daa
jno
sbb
repz
mov
outsb
into
aam
jb
mov
iret
sub
sahf
idiv
out
xchg
pusha
je
fpatan
lods
sbb
and
popf
dec
xor
cli
lcall
and
mov
mov
add
jge
test
daa
outsl
clc
sbb
fnsave
in
inc
pop
fidivs
mov
in
or
ljmp
xor
xchg
mov
iret
mov
vplzcntq
sub
adc
sub
call
ljmp
call
imul
aaa
cli
movsb
mov
xchg
loop
cmpsb
icebp
incl
jle
push
in
out
xchg
cmp
in
mov
in
std
call
adc
pop
xchg
in
shlb
nop
add
mov
shl
inc
lods
cmpsl
and
stos
cmp
pop
push
fidivrl
lcall
pushf
fcmovne
stc
mov
jbe
rcrl
adc
fnsave
sahf
iret
push
inc
lods
cld
aad
and
call
dec
imul
jl
fimuls
pop
test
mov
pop
push
leave
loopne
push
insl
decl
cmc
and
outsb
addr16
xchg
mov
stos
fisttps
and
mov
fdecstp
push
mov
in
cwtl
sub
mov
lcall
mov
adc
outsb
and
test
ljmp
xchg
sub
testl
call
jb
add
loopne
push
and
negl
and
mov
fdivrs
lcall
imul
fcmovb
add
mov
out
ret
pop
ljmp
pop
fnsave
pop
cmp
pop
or
std
xchg
adcl
and
incl
mov
std
lds
and
mov
push
mov
xlat
jnp
sub
pop
hlt
pushl
lea
xchg
add
and
jo
hlt
icebp
sahf
icebp
xor
mov
jg
push
xor
sub
subb
enter
lea
daa
js
call
jae
je
xchg
xchg
dec
fbstp
cmp
call
lds
decl
decl
cmp
jmp
pushf
rolb
jmp
mov
mov
fimuls
int
mov
pusha
push
inc
fisttpl
push
cld
mov
inc
xor
shrl
xchg
cwtl
pusha
push
pushf
mov
xchg
jmp
stos
call
xchg
mov
lea
rcl
mov
out
sub
scas
stos
fnstsw
sbb
cmpsl
xchg
jmp
push
lock
mov
xor
mov
mov
decl
or
dec
aam
fs
and
dec
push
inc
ret
imul
ljmp
js
xor
jno
stos
xchg
icebp
cmc
gs
je
cltd
shll
xchg
pop
sbb
nop
mov
cmp
pushl
rol
test
jp
sub
mov
cmp
dec
int3
or
imul
cmp
in
movsb
jae
cmovl
or
pop
gs
stos
adc
mov
in
inc
hlt
ljmp
inc
mov
inc
push
cmpsl
mov
dec
jge
jae
cmpsl
lock
das
clc
gs
add
fisubl
loop
cltd
int
adc
mov
sar
jg
mov
sbb
rclb
iret
jne
scas
ljmp
int
outsl
sbb
scas
test
pop
loopne
jecxz
arpl
xchg
sbb
adc
jl
jnp
mov
int
mov
sbb
sub
icebp
push
fs
push
jne
jne
lcall
sar
inc
cwtl
vcvtpd2dqy
insl
das
fisubs
je
pop
sbb
addl
jmp
movsb
sbb
imul
add
jnp
mov
shlb
jno
cmp
inc
subl
inc
les
xchg
push
pop
jns
cmp
hlt
mov
and
lcall
in
std
inc
jl
dec
fs
add
pop
ss
into
test
mov
in
ss
push
push
ljmp
out
or
push
loopne
call
pop
cmp
call
in
lret
mov
faddp
adc
xor
dec
inc
xor
call
add
adc
mov
jmp
lds
xchg
inc
testb
test
sbb
sti
insb
stos
cld
rorb
out
sbb
sbb
cmp
xchg
call
ljmp
xor
mov
adc
add
jg
shl
aad
mov
ficompl
popa
cld
pushl
cld
pop
sub
cmp
push
in
xor
insl
cmpsl
pushl
mov
xor
ss
cltd
inc
je
repnz
dec
dec
icebp
std
pop
mov
cmpsb
mov
jp
ret
pushf
pop
jb
push
push
mov
inc
out
or
push
jmp
mov
jo
incb
push
fwait
and
xchg
and
jg
outsb
push
pop
dec
loope
pop
or
insb
std
add
gs
hlt
rorl
int3
mov
lcall
xchg
arpl
push
mov
mov
clc
xchg
bound
outsb
adcb
movsb
jns
mov
clc
xchg
rcll
sbb
pop
setae
add
mov
sub
xchg
mov
ljmp
fdiv
and
incl
mov
out
xor
hlt
sbb
mov
pushl
in
orl
xor
cmp
lcall
cmpsl
outsb
jns
lds
jmp
in
pop
xchg
push
add
das
mov
enter
adc
popa
add
ljmp
arpl
mov
daa
pushl
push
sbb
call
sbb
pop
sbb
or
sub
cld
call
out
jno
test
sub
shrb
shr
lea
mov
call
neg
lahf
mov
aad
cmpsb
movsl
inc
pusha
iret
fs
inc
loopne
cmp
mov
ja
mov
jl
hlt
pop
mov
jbe
lods
mov
sbb
push
fxch
cmp
out
decl
iret
fstpl
es
push
jns
loope
jae
xlat
add
ficoms
decl
inc
sbb
nop
sub
daa
mov
movsb
mov
in
cmp
jmp
les
push
lahf
std
ror
ret
loope
out
rcll
adc
jb
call
pop
test
cmp
inc
in
aam
jns
or
shl
lret
clc
test
dec
js
push
mov
jno
cmp
pop
insb
addb
push
cld
cld
inc
or
mov
call
sarb
out
or
imul
fldcw
mov
sbb
stos
sub
call
pop
push
add
ja
out
into
xchg
jo
ds
mov
mov
lcall
dec
fbld
adc
sub
mov
mov
icebp
hlt
push
repnz
fdivrl
push
and
incb
adc
cs
adc
xor
push
mov
mov
out
outsb
mov
mov
mov
fbld
mov
adc
cmp
out
mov
outsb
jecxz
mov
subb
mov
mov
mov
daa
dec
shrl
decl
and
out
mov
insl
in
mov
mov
outsl
adc
push
cmc
imul
sbb
ljmp
loopne
mov
int3
push
gs
dec
sbb
xchg
push
xor
lret
incl
mov
out
sbb
fwait
test
or
out
xchg
fdivr
jg
popa
and
jb
jl
ja
jno
add
xchg
scas
xchg
and
cwtl
enter
mov
push
mov
dec
out
pop
cltd
or
jns
adc
pop
jg
insb
dec
shlb
cmp
mov
add
inc
jnp
mov
call
lret
fidivrl
pop
xchg
not
jle
mov
mov
jg
jo
sbb
mov
scas
fwait
lds
adc
cmp
pop
popa
aaa
test
inc
loop
sti
cmp
inc
xlat
push
int3
shr
loop
xor
inc
out
pusha
das
shrb
imul
inc
xor
mov
incl
xchg
stc
dec
cs
lock
adc
jne
ss
add
xor
fst
and
in
addb
call
insl
and
fcoms
lcall
insl
int
cwtl
call
add
push
pop
mov
cs
cmp
lcall
decl
and
pop
call
cmp
loop
dec
xchg
or
push
add
int3
sahf
xlat
ljmp
fwait
cmp
dec
cmpsb
and
push
xchg
ret
out
adc
jnp
jg
out
cltd
adc
imull
or
push
or
stc
outsb
scas
cli
ss
xchg
fs
and
push
add
aaa
cmp
hlt
inc
scas
mov
dec
push
sub
into
rolb
add
sub
mov
int
add
pop
cs
cld
add
repnz
adc
cmp
outsl
addr16
fs
int
jge
imul
mov
inc
icebp
cmpsl
cmpsb
or
or
mov
push
lock
lock
mov
ljmp
mov
or
shl
push
dec
in
and
loope
movsl
in
lcall
movsl
out
sbb
icebp
cmp
jle
into
test
pop
sahf
call
jne
ljmp
push
jl
lret
ldmxcsr
dec
aaa
mov
lcall
mov
aas
push
repnz
cmp
dec
mov
sbb
xor
adc
and
push
jp
loope
call
inc
pop
jl
repnz
mov
add
dec
fcomip
mov
fsubrl
test
ja
adc
lret
push
push
ljmp
jmp
andl
push
push
sbb
fwait
aam
sbb
lds
or
lret
adc
xor
lcall
adc
pop
ljmp
add
xchg
shr
mov
stos
fdivrl
or
inc
sbb
stos
decl
decl
mov
jb
out
movnti
mov
jge
adc
cli
jmp
xchg
dec
hlt
cmp
test
xlat
insl
daa
pusha
mov
push
lods
xor
dec
mov
decl
dec
xlat
dec
xchg
mov
jbe
dec
pop
add
xor
push
or
ja
jmp
dec
stos
sbb
leave
repz
dec
fsts
mov
fdivs
sbb
call
nop
add
or
mov
fisubl
test
add
lahf
pop
movsl
mov
sbb
std
jb
data16
idiv
mov
data16
dec
mov
add
sbb
dec
fildl
mov
xor
cmp
sbb
subb
stos
adc
or
cmp
mov
jle
push
loop
decl
pop
jecxz
cmp
sbb
ror
cmp
cmpsb
dec
call
dec
mov
sbb
push
fs
jl,pn
add
or
pop
mov
and
ljmp
stos
dec
rdtsc
in
int3
scas
pop
dec
jne
pop
xchg
pop
mov
add
pop
call
lds
addr16
popf
mov
ja
push
aad
add
test
cmp
jmp
cmpsb
in
orl
flds
cmpsl
jle
ret
ficoms
or
mov
leave
outsb
lcall
dec
call
inc
mov
pop
repnz
cld
mov
xchg
xor
stc
call
call
push
cltd
pop
add
sbb
push
dec
push
js
movsl
push
popa
in
push
test
mov
shll
ljmp
out
fsts
mov
outsl
mov
sarb
and
cmp
mov
incl
mov
in
aam
dec
sbb
addb
cli
scas
ret
movsl
pop
inc
in
fists
cld
ljmp
or
mov
cmp
mov
add
movsl
repnz
call
xor
mov
sar
add
shlb
das
push
in
xor
leave
mov
ljmp
xchg
test
mov
and
js
push
jbe
adc
das
or
jle
xor
mov
cmp
leave
daa
lock
incl
mov
adc
addr16
ljmp
sbb
or
xor
sub
popa
xlat
lods
ljmp
pushl
imul
insl
movsb
jne
and
addr16
ret
xchg
and
mov
mov
jmp
lock
dec
add
aaa
or
jo
jecxz
gs
addb
inc
inc
cmp
ds
mov
mov
sub
xchg
ret
mov
mov
push
lods
inc
aam
pushl
cmpsl
dec
jb
jecxz
pop
std
cwtl
test
shlb
js
mov
pop
mov
xor
mov
mov
outsb
mov
daa
rcl
pusha
xorb
sub
popf
adc
jg
sbb
push
pop
pop
or
pushf
mov
inc
or
sub
cs
add
and
lock
mov
jg
repnz
jmp
inc
hlt
cmp
jle
orl
mov
mov
call
mov
mov
xor
out
xchg
shlb
xchg
lods
int
push
inc
push
jmp
inc
mov
xchg
addr16
dec
push
daa
test
and
jmp
inc
push
into
inc
add
xchg
push
popa
mov
icebp
lods
push
jnp
shll
call
adc
xchg
push
push
jmp
nop
enter
pop
mov
jns
cld
fwait
js
dec
fwait
xchg
mov
mov
cmpsb
push
xchg
lahf
pop
mov
mov
jge
inc
cs
lcall
incl
jae
pop
and
call
fs
sar
dec
cwtl
mov
call
xchg
mov
adc
aaa
and
mov
jg
pop
or
mov
xor
jmp
fdivs
shlb
or
jmp
lods
push
push
outsl
bound
mov
add
xor
lock
or
ja
clc
hlt
push
orl
push
fisttpl
ret
and
call
cmp
les
aas
dec
ja
adc
test
xchg
fnstsw
xchg
pop
test
pop
mov
repnz
mov
push
push
jnp
jne,pn
repz
lock
ret
xor
iret
cmp
mov
sub
cmp
mov
ja
push
inc
and
jmp
inc
push
pop
dec
pop
push
ljmp
incl
cwtl
xchg
and
or
dec
insb
test
negb
stos
test
add
sub
fadd
dec
lcall
loop
xor
push
push
mov
mov
pop
xlat
sbb
pushl
cmp
add
bound
sbb
out
mov
mov
add
mov
test
cmp
popa
jg
cmp
popa
push
das
mov
jp
shl
jnp
sbb
pusha
repz
jae
incl
cld
shlb
push
std
js
inc
xchg
es
lret
mov
cwtl
cs
pushl
leave
lret
inc
lahf
fadds
push
or
outsl
jae
and
lods
fidivs
add
sub
enter
mov
rorb
pop
xor
pushl
ret
xchg
jno
sub
ss
int3
push
push
jbe
das
jne
cmpsb
and
cmp
cmc
sbb
sbb
fwait
jbe
lret
mov
lcall
out
adc
dec
lods
mov
aas
or
push
xor
mov
pushf
mov
incl
imull
loope
fsts
pop
ds
cmpsl
nop
in
push
cmp
pusha
push
jne
push
cltd
pusha
push
jmp
push
rol
ficoms
stos
cltd
xor
fwait
adc
fnstenv
push
shl
inc
sbb
into
outsb
adc
xchg
cmc
push
ret
shl
jno
sahf
std
jbe
sbbl
pop
mov
lcall
push
or
jp
test
aam
inc
ds
jo
sub
mov
lcall
jmp
js
mov
enter
arpl
mov
rclb
and
jns
and
push
xor
xchg
mov
sub
repnz
cld
or
jg
jbe
sbb
das
call
sbb
jo
dec
aaa
inc
lods
jne
mov
fsub
xchg
sub
les
add
pop
out
sbb
mov
or
incl
push
repnz
xchg
cld
call
mov
data16
mov
jno
aad
mov
lcall
lcall
xor
jbe
fidivrl
adc
xchg
test
and
jl
jmp
mov
adc
add
insb
clc
int
out
scas
scas
push
popf
daa
decb
push
into
xchg
icebp
incl
inc
fcoms
sub
sbb
imulb
or
loopne
sub
out
loop
push
stos
sub
fucom
mov
pop
call
inc
adc
outsb
arpl
sub
inc
loop
jne
mov
fidivrs
cld
jg
test
stc
mov
cmp
mov
add
jmp
in
sub
rcrb
sbb
pop
and
pop
fs
imul
jg
jmp
lods
mov
or
jl
add
push
sbb
data16
ljmp
xchg
add
pop
jnp
adc
fiadds
push
mov
int
cld
mov
mov
decl
pop
movsl
push
icebp
xor
cltd
mov
insb
je
push
test
call
push
jb
outsl
std
cmp
in
sbb
xchg
push
pushf
hlt
hlt
data16
addr16
adc
insl
lods
cs
into
adc
aaa
add
push
lahf
cs
mov
adc
or
ljmp
loope
mov
jns
incb
ret
pushf
scas
in
mov
jns
push
loope
inc
shrb
cli
jge
mov
lea
ja
js
leave
push
inc
cmpsl
cmp
mov
int3
mov
ljmp
jne
inc
push
out
decb
addr16
lret
cld
mov
insl
adc
rclb
js
jecxz
incl
js
cmc
ret
sub
xchg
add
fldenv
push
repnz
fidivrl
dec
pop
fdivrp
cmp
jmp
int3
movsb
in
jo
jle
dec
inc
cmp
loopne
outsb
lcall
sahf
inc
lahf
aas
imul
aas
sti
or
push
rcrb
adc
out
sub
ja
mov
inc
pushf
scas
sbb
pop
or
mov
rcll
aas
pop
ljmp
pushl
daa
push
pop
xchg
stc
arpl
test
adc
mov
or
cmp
push
test
jae
scas
insb
repnz
gs
push
mov
arpl
inc
cmpsb
pop
jl
das
lds
pop
mov
lret
out
stc
xor
int3
or
inc
in
sub
imul
test
mov
push
xchg
jmp
outsb
sbb
dec
sub
shl
ja
xor
lcall
xchg
push
aad
pushl
sbb
fs
cmp
lahf
mov
inc
add
push
xchg
mov
sbb
xor
mov
dec
add
or
and
jb
ljmp
inc
sbb
or
lret
sbb
enter
xlat
adc
adc
push
and
out
jmp
xchg
sbb
sub
sub
pop
out
fld
inc
mov
and
xchg
movsl
mov
jmp
mov
movsb
adc
pop
pop
arpl
inc
aas
mov
lods
repnz
mov
into
js
fisubl
es
jge
jp
gs
mov
fs
dec
and
fldl
xchg
movsl
jmp
jnp,pn
fucom
sbb
push
xchg
jp
cmp
sbb
pop
sub
sbbb
decl
andl
int3
dec
ljmp
jge
testl
cli
add
orl
mov
mov
mov
adc
push
cmp
mov
or
decl
lahf
cmp
mov
test
mov
push
adc
cmpsb
sahf
mov
push
movsl
cwtl
mov
xchg
gs
repnz
lods
movsl
repnz
mov
jg
aam
xchg
jne
add
lret
decl
jnp
mov
sub
leave
stc
outsb
push
not
incb
cli
jne
outsb
enter
or
dec
inc
int
add
sar
jmp
mov
push
cmpsb
mov
cmp
lcall
mov
sub
mov
repz
dec
cmp
popf
ds
fwait
imul
call
mov
lods
adc
sbb
push
les
into
add
mov
xchg
inc
ljmp
jp
repnz
loop
pusha
sbb
insb
mov
jmp
shlb
xor
stos
daa
outsl
add
pop
lock
incb
fcos
push
sahf
cltd
out
insl
cltd
mov
inc
lcall
inc
push
inc
loope
xor
cmp
movsl
add
mov
cwtl
ret
cmp
lcall
in
xchg
outsl
cli
lcall
xchg
adc
jecxz
mov
cwtl
int
jecxz
dec
out
add
ljmp
sbb
rorb
xor
inc
ss
bound
out
cmp
jge
es
cld
lcall
hlt
nop
pusha
pop
ds
inc
cld
jne
repnz
and
hlt
xor
pusha
loop
ljmp
dec
jp
sbb
jne
mov
mov
jmp
subl
pushf
push
mov
aam
mov
in
xor
xchg
cwtl
js
xchg
subl
pop
cltd
sub
mov
decl
pop
cwtl
push
lret
and
push
add
sbb
jp
mov
ljmp
ja
idivb
mov
icebp
push
add
cmp
dec
mov
scas
mov
decl
inc
jg
clc
push
jbe
aas
or
xor
add
add
add
pushl
scas
and
or
push
or
lret
push
stos
and
xchg
mov
inc
int3
lds
mov
clc
pop
popa
push
jae
les
test
xchg
repnz
dec
decl
fcoml
and
mov
jle
lret
xchg
mov
ret
movsl
add
cmc
scas
inc
lcall
pop
adc
lahf
push
ret
cmp
lcall
out
adc
cmpsb
pop
add
dec
jo
add
xor
mov
out
ja
imul
add
mov
fs
les
adc
lcall
jmp
cmp
sbb
jl
pop
xchg
imul
pushl
pop
mov
decl
jmp
mov
xchg
adc
push
cmpb
jb
and
lods
push
add
ljmp
fiadds
scas
adc
adc
fidivrs
js
out
out
test
jg
mov
xor
out
adc
in
fcomps
loop
jg
inc
pop
data16
push
jg
lcall
out
outsl
jno
mov
out
movl
pop
pop
repz
jae
add
andb
stos
pop
jecxz
rcrb
jecxz
ret
push
pop
jo
hlt
call
test
rorb
aaa
dec
mov
dec
sti
insl
outsb
adc
and
rolb
sub
icebp
inc
filds
adc
cwtl
sahf
sub
add
loope
fisubs
idivb
in
cmp
dec
je
cmp
mov
pop
test
ds
lcall
leave
mov
fucom
cmp
enterw
push
add
mov
pushf
or
and
jle
aad
test
xor
pop
sarl
push
cmp
inc
jae
lcall
jnp
enter
xchg
xchg
shlb
or
push
lods
pop
sbb
push
mov
outsb
dec
bound
jge
fistpl
fisttpl
xlat
xor
movsl
arpl
ficompl
pop
xor
outsl
cli
cmp
lcall
les
inc
push
add
inc
mov
lcall
clc
pop
inc
push
jae
sub
mov
out
movsl
xor
into
mov
call
inc
adc
and
push
jge
sahf
idivb
fcoms
mov
push
insb
mov
push
repnz
push
sbb
pusha
out
bound
js
dec
push
pop
xor
int
and
incl
mov
push
or
push
add
jle
push
aad
mov
sbb
push
lods
ret
xor
adc
call
mov
mov
icebp
push
in
cmpsl
out
mov
adc
loopne
data16
fistps
mov
inc
mov
orl
inc
inc
jmp
mov
push
sub
lcall
int3
or
pop
imul
mov
hlt
scas
and
mov
xor
pop
pop
inc
imul
and
xor
jae
jmp
js
sarl
and
cwtl
xor
adc
rcrb
lea
dec
xchg
ret
pushl
push
outsl
js
shll
pop
mov
inc
ret
out
pop
jmp
jo
xchg
or
leave
addr16
call
push
mov
cmp
lcall
in
jge
repnz
movsb
sahf
sbb
scas
nop
jmp
aas
es
add
movl
pop
push
out
push
sub
inc
imul
dec
stos
mov
xor
fsts
mov
rcr
call
mov
movsl
iret
sbbb
dec
dec
push
rdmsr
sub
cs
andb
mov
jmp
mov
dec
test
imul
orb
sub
sarb
mov
jg
jmp
dec
inc
push
dec
test
ds
adc
inc
mov
ja
call
loop
repz
jp
out
es
aad
cmpsb
inc
dec
push
add
add
add
add
lret
adc
sti
cmp
fbld
scas
stos
jecxz
jle
jns
je
shufps
xchg
mov
pusha
mov
lds
data16
adc
call
inc
mov
dec
mov
lret
fstps
xor
push
nop
ds
decl
and
cmp
lds
repz
or
fisubrs
push
decl
cmp
les
arpl
jge,pt
cld
fmull
sbb
decl
cmp
cmc
gs
xchg
and
or
leave
push
sbb
push
cmpsl
pop
add
xor
adc
wrmsr
ja
or
outsb
cld
fsqrt
push
flds
mov
add
and
rcrb
adc
decl
jb
adc
scas
jb
add
mov
ja
loopne
addb
cmp
sbb
push
outsb
push
adc
out
es
mov
pusha
loopne
vpsubb
gs
dec
adc
pop
rcrl
std
ljmp
out
mov
icebp
repnz
xchg
stc
rolb
push
jl
into
pop
sbb
push
enter
lret
pop
push
repz
cmp
outsl
out
adc
movsb
pushf
shl
xor
or
cld
call
pop
push
stc
lret
sti
sbbl
aaa
add
jno
sub
sbb
xchg
sub
lock
out
push
xchg
sub
mov
jl
add
cld
xchg
es
add
add
jbe
rclb
mov
cmp
jmp
push
mov
pop
push
xor
test
xchg
sub
sub
mov
incl
lea
jg
xchg
test
out
jl
fsubl
lods
xchg
sbb
sub
lcall
xchg
xchg
dec
xor
cmp
jle
dec
adc
xor
aam
icebp
xor
incl
fsts
xchg
pop
inc
fwait
sbb
mov
jmp
mov
lret
mull
lcall
popf
outsb
aaa
inc
movsb
inc
cmp
repz
imul
dec
jle
int3
fildll
adc
pop
xor
mov
inc
jne
rcl
xlat
mov
pop
xchg
pop
jecxz
call
das
icebp
xchg
dec
and
out
loop
vpmacsdd
cmp
call
add
dec
mov
arpl
add
dec
test
sti
cmp
out
ja
pop
dec
movsb
popf
push
sahf
jo
pop
mov
pushl
cltd
orps
push
push
sarb
lret
cs
jb
pop
popf
mov
daa
mov
mov
leave
ja
inc
jl
pop
out
popa
adc
sub
cmp
nop
aas
mov
fdivrs
cmp
fnstsw
push
in
shrl
int3
xchg
jmp
decl
fdivl
mov
inc
or
or
popa
stos
and
sub
in
sbb
sub
lcall
lret
fwait
sarl
in
jge
leave
call
jae
ljmp
inc
lods
pop
sahf
fsubrl
subb
std
decl
cmp
jns
inc
loope
or
enter
adc
push
mov
mov
mov
mov
incb
dec
sbb
sub
xchg
mov
cmp
and
ljmp
sbbl
sbb
push
xchg
daa
inc
jae
movsl
clc
mov
lcall
push
sbb
mov
mov
pop
icebp
adc
std
daa
xor
lock
mov
jnp
fistps
das
jg
inc
and
xor
cmpsb
pop
les
sbb
icebp
or
jg
mov
mov
bound
iret
mov
mov
xor
xchg
and
pop
daa
jmp
jbe
call
cld
sub
clc
sar
pop
mov
cmp
cltd
jge
fdivs
js
adc
jmp
inc
arpl
sub
and
ret
inc
jmp
repz
sbb
sub
movlps
cli
je
mov
jns
dec
adc
mov
pushl
ljmp
insb
push
or
pop
ss
pop
je
repz
cmpsb
cmc
mov
cmp
sbb
add
and
in
test
in
xchg
sub
test
cmp
pop
push
dec
outsb
int
loopne
shlb
xlat
test
mov
sub
decl
stos
pop
lods
sbb
pushf
mov
mov
scas
mov
mov
add
test
shr
clc
daa
push
orb
or
mov
adc
negb
sub
inc
mov
sub
popa
or
mulb
ljmp
and
in
xlat
cld
dec
sub
bound
das
fnstsw
daa
or
icebp
dec
mov
out
gs
popf
leave
data16
dec
mov
pop
loope
sti
or
leave
pop
pop
sahf
call
std
xchg
in
jg
mov
sub
sar
push
jnp
jnp
inc
movsb
scas
mov
lcall
mov
push
into
popa
ja
pusha
adc
inc
sub
incl
subb
sub
lret
sub
outsb
inc
int
jg
dec
or
mov
outsb
decl
xor
nop
push
add
add
fistpll
popf
mov
sub
mov
xchg
loope
push
xchg
push
divb
jg
incl
xchg
jmp
xchg
jbe
dec
adc
pop
shl
mov
sbb
fists
lcall
outsb
xor
psubsb
int3
pcmpgtw
je
push
popa
dec
mov
ljmp
sbb
inc
arpl
jo
andb
in
xchg
push
add
lock
incl
mov
loopne
xchg
mov
mov
leave
or
sbb
mov
jbe
insb
fcmovb
out
lahf
aam
xchg
jl
cmp
iret
rorb
out
in
xor
jae
cmp
fdivs
sub
sub
mov
jmp
iret
xchg
loop
mov
ljmp
push
and
push
jmp
test
aas
scas
arpl
lcall
lds
mov
int3
lea
push
test
dec
stc
cld
adc
sbbl
cli
stc
adc
or
mov
movsb
ret
scas
mov
test
iret
roll
adc
adc
call
sbb
sti
dec
push
xor
cli
leave
mov
cmpsb
pop
jno
imul
mov
mov
lahf
pop
sub
cmp
lret
sarb
push
push
in
push
daa
inc
les
addr16
mov
enter
rcl
push
mov
arpl
sbb
icebp
iret
mov
and
lds
and
dec
mov
xlat
adc
mov
mov
sbb
pop
pop
adc
dec
adc
cltd
out
and
inc
clc
pushl
fildl
push
xor
pusha
in
lcall
push
aas
push
ljmp
repz
loope
cmpsl
or
lcall
aas
push
and
mov
jg
call
mov
add
push
push
mov
in
stos
gs
push
add
mov
xor
jno
add
adc
adc
rcll
pushl
mov
rol
lret
adc
mov
cmp
and
jmp
sub
jo
xor
call
mov
lcall
stos
cmpsb
adc
ljmp
cmp
push
pushf
addl
jecxz
mov
inc
adc
xor
add
enter
aam
jmp
stos
add
mov
sbb
pop
fs
and
mov
pop
ds
mov
push
add
test
sub
subb
iret
push
mov
cmp
dec
call
mov
push
inc
mov
gs
sub
pushl
out
mov
das
adc
or
pop
scas
addr16
mov
pop
push
loop
dec
addr16
or
rcll
loope
aam
cmp
or
aas
mov
int
lret
shrl
mov
inc
xchg
dec
loopne
cld
jl
xchg
cmpsl
aad
pop
push
pop
in
aam
xchg
mov
imul
sbb
insl
sahf
scas
rorl
lahf
mov
and
mov
ljmp
jecxz
aam
testb
jnp
dec
nop
stos
addr16
and
cwtl
mov
xchg
outsb
mov
repnz
inc
outsl
jmp
test
mov
or
clc
ljmp
adc
leave
sbb
mov
movsl
adc
aad
nop
mov
mov
lods
mov
push
sarl
daa
lea
and
sbb
into
xchg
cld
ss
mov
ljmp
sahf
jge
push
xchg
lds
stos
inc
in
pop
cli
imul
out
and
pop
call
incl
mov
addr16
cmp
mov
or
push
icebp
mov
stos
add
dec
pop
mov
mov
das
cli
pop
loopne
mov
xchg
dec
xchg
and
xchg
aad
ds
pop
xchg
clc
incl
mov
mov
mov
les
xchg
js
scas
inc
push
and
pushl
adc
xchg
add
jg
loope
jge
call
sub
xchg
mov
or
scas
imul
ret
test
ljmp
clc
sti
popa
ljmp
xor
jne
xor
mov
pop
cmc
testb
mov
or
mov
cmpl
les
and
aad
jg
push
add
xchg
xor
jnp
mov
mov
ret
pushf
mov
push
out
es
lret
pop
call
dec
pusha
orl
add
jnp
mov
cli
aaa
add
mov
call
rolb
dec
test
add
fcmovnu
mov
add
add
or
pop
jp
incl
push
or
or
or
or
or
adc
adc
push
adc
imulb
lret
or
pop
sbb
adc
adc
mov
jbe
adc
add
data16
or
aas
mov
inc
add
or
xchg
add
add
adc
shlb
inc
inc
add
js
pop
loopne
pop
outsl
inc
mov
jnp
cmpsb
jb
imul
add
add
incl
adc
pop
and
xor
inc
mov
adc
xor
gs
dec
js
xchg
jne
pop
adc
add
and
add
fimull
inc
sbb
inc
sub
xchg
mov
jne
inc
add
test
pop
dec
xor
shlb
xor
pushf
into
add
adc
cmp
incl
jmp
adc
push
adc
pop
popa
jno
and
adc
stc
add
or
xor
adc
mov
and
roll
test
sub
scas
fiaddl
or
js
sub
std
or
add
adc
sbb
cli
and
mov
jg
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
fisttps
aas
mov
mov
or
jns
xchg
jg
inc
repnz
addr16
out
or
push
push
incl
shlb
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
pop
dec
clc
aad
add
sbbl
adc
mov
mov
pop
pop
mov
jg
popl
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
incl
test
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
call
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
decl
int
arpl
push
out
or
test
push
sahf
pop
clc
sti
jg
jno
lock
jg
in
call
sarl
xor
hlt
and
xchg
jmp
sbb
subb
add
dec
cld
jmp
in
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
outsl
jg
mov
stc
loope
mov
sar
andl
aas
icebp
testb
mov
ljmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
sbb
mov
dec
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
ljmp
adc
aaa
xchg
in
add
inc
adc
loope
aaa
dec
outsl
mov
or
icebp
aas
std
cli
push
push
push
idivl
pushl
sub
inc
scas
inc
mov
jg
je,pn
sub
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
add
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
jmp
imul
pop
hlt
lret
add
add
lea
jg
gs
std
xorb
jg
out
add
das
pop
pop
pop
shlb
loopne
fucom
out
sarb
sbbl
jno
or
sarb
mov
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
jg
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
lcall
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
pushl
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
pop
lock
stos
dec
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
clc
repnz
cmp
fmull
enter
jecxz
scas
inc
stc
sub
in
pop
mov
sub
mov
dec
incb
fidivl
std
loop
aas
mov
or
cld
inc
or
mov
cmpsb
push
pop
jg
add
jg
mov
pop
mov
test
mov
mov
iret
push
mov
push
push
sbb
stos
icebp
pop
incb
jno
mov
jg
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
clc
xorl
paddsw
push
or
add
mov
aas
fsubrl
lock
or
sbbb
mov
add
push
sbb
pop
cld
push
push
and
mov
adc
inc
aas
loope
pop
in
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
fbld
data16
pop
nop
mov
inc
sti
arpl
daa
lock
jg
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
fsubr
fistps
lds
fidivrl
jg
stos
ljmp
ss
add
dec
mov
sub
jge
xor
lahf
les
xchg
ds
sbb
cld
addl
sbb
jp
mov
lahf
outsl
int3
push
sbb
pop
dec
shrl
lock
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lcall
fsubs
shl
dec
jp,pn
adc
mov
adc
out
lcall
insb
mov
pop
shl
cld
mov
adc
stos
pop
jg
lcall
fistpl
sub
sarb
adc
xor
pop
rcr
dec
mov
jmp
jmp
lea
jp
jnp
jecxz
adc
inc
lds
call
pop
adc
imul
or
inc
pop
xor
rorb
and
add
jg
incl
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
jg
movsb
insb
or
and
xchg
fidivrs
push
xor
add
insb
test
aas
repz
sbb
lock
add
mov
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
push
ror
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
call
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
or
jne
pop
cld
or
dec
ss
clc
aas
fcmovu
lods
movsb
or
repnz
mov
das
or
xchg
imul
aad
or
pop
in
cmp
jmp
mov
sbb
xor
hlt
dec
mov
mov
aas
mov
jg
incl
fdiv
mov
sub
addr16
sbb
cld
daa
jp
std
mov
fucomi
adc
cltd
or
mov
ret
nop
cmp
push
loop
cmc
das
incb
lock
pop
pop
div
cld
idivl
xlat
add
scas
stc
lahf
loope
js
or
jae
jmp
idivb
fbstp
out
xchg
add
out
sbb
xchg
mov
loope
mov
cmpsl
popf
sbb
xchg
mov
fbstp
push
daa
outsl
das
outsl
ss
cmpsb
cmp
call
pop
mov
decb
adc
mov
or
adc
call
shrl
popf
dec
or
add
fs
inc
add
loop
out
mov
aaa
std
fildll
xchg
inc
sbb
xchg
hlt
andb
mov
aas
icebp
ret
ror
sbb
xor
or
aaa
inc
adc
lds
adc
aas
pop
clc
loope
notb
mov
lahf
jp
dec
add
xlat
in
cmp
xchg
sbb
or
iret
fdivrl
xchg
lcall
decb
js
pop
gs
into
sarl
pop
out
jg
jno
xor
loop
ret
cmp
shll
sbb
inc
aas
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
mov
pop
mov
outsl
pop
std
jg
add
pop
stc
push
dec
out
fstpt
mov
enter
es
pop
add
jl
jo
fsts
dec
or
add
jg
xchg
sti
push
sti
pop
inc
or
push
push
push
nop
mov
bsf
popf
test
and
mov
rcl
lods
sub
cmpsl
add
addb
addb
or
add
add
mov
sub
mov
add
mov
cmp
js
push
jg
add
rcll
test
js
add
pop
dec
orb
mov
push
inc
test
xchg
cmpsl
adc
roll
scas
jle
dec
lds
jno
jg
mov
lock
mov
dec
and
sub
pusha
or
jno
mov
jnp
xchg
movsl
push
daa
add
xchg
dec
scas
imul
push
and
cs
push
movsb
push
movsb
stc
mov
push
and
stos
push
and
push
test
and
fistl
imul
push
inc
pop
pop
add
scas
dec
lods
push
mov
pop
sbb
add
shr
mov
add
push
ds
les
push
mov
ljmp
add
insb
or
lret
imul
imul
pop
clts
imul
into
mov
jbe
fldenv
in
subb
push
mov
stos
pop
mov
mov
ss
mov
jbe
add
jo
mov
push
shll
add
outsl
push
shll
push
jo
push
fidivrl
iret
outsb
or
push
ret
mov
sbb
jns
out
jge
fisttps
aam
xorb
ljmp
movsb
push
add
mov
cmpl
jae
shlb
mov
push
jge
sub
jne
push
aam
clc
imul
add
mov
or
dec
add
sbb
push
data16
inc
xchg
ja
aaa
add
push
push
shlb
lret
insb
pop
rep
stos
aas
add
ja
push
loopne
lods
sti
push
xlat
jne
add
ja
push
pop
fsub
mov
aad
push
xlat
ja
js
push
jns
or
mov
jp
inc
push
fidivrl
sarl
adc
push
fldl
insl
mov
inc
jmp
ljmp
xchg
insl
inc
ja
in
xchg
sub
xchg
xor
xchg
ss
ja
setbe
xor
mov
jmp
ss
aaa
push
lcall
push
pop
jnp,pt
cmp
pushf
cmp
popf
xchg
popf
aas
jbe
mov
push
sahf
inc
push
lahf
inc
lahf
mov
fdivr
idivb
mov
add
fadd
add
cld
out
iret
repz
hlt
clc
stc
cli
aas
iret
repz
cld
std
incb
jecxz
insb
lock
mov
jae
add
imul
popa
push
add
pop
add
int3
data16
pop
add
pop
or
add
pop
sbbl
push
add
or
add
add
insb
mov
or
or
test
test
dec
stos
stos
cmpsl
or
push
sbb
or
pop
pop
adc
xor
lods
add
pop
or
int
stos
femms
lods
lods
pop
aad
mov
mov
add
scas
insl
inc
jo
jnp
pop
pop
adc
and
add
push
lods
adc
sbb
adc
fwait
sbb
scas
scas
scas
scas
sbb
add
sbb
mov
nop
cmpsb
jns
mov
push
mov
add
and
mov
lock
jb
mov
mov
and
and
lods
xchg
mov
add
cmp
mov
adc
pop
sub
mov
xor
mov
push
pop
daa
mov
sbb
mov
inc
and
aas
cmp
pop
cmp
cmp
add
or
mov
pop
xor
pop
or
int3
in
int3
push
or
add
pop
push
fists
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
push
push
jmp
xor
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
jbe
cmp
jl
jge
jno
lcall
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
fwait
decl
mov
sub
dec
ja
jns
dec
fidivs
test
jb
adc
xor
adc
jp
pop
dec
add
adc
mov
fdivrs
lsl
xor
scas
aas
adc
or
out
jg
jle
xchg
pop
push
dec
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
ja
dec
mov
cs
xor
mov
sti
xor
pop
jbe
dec
sbb
outsl
dec
and
push
mov
xchg
add
mov
jo
push
inc
mov
cmp
mov
inc
add
xchg
sahf
jae
xchg
jp
inc
dec
popf
lock
add
mov
aaa
jbe
add
xchg
jb
fcmovnu
dec
push
push
bound
mov
mov
jmp
popf
inc
push
sahf
mov
insb
add
outsb
insl
fcmovnu
mov
xchg
pop
push
test
cmpsb
mov
cmpsl
mov
movsb
jae
add
jb
shll
das
pop
push
mov
push
rorb
add
lcall
fwait
testl
into
dec
mov
add
ja
sahf
adc
jg
jbe
fistpl
imul
mov
int
stos
push
add
and
es
js
mov
testb
mov
shrl
insb
pop
outsb
lret
repz
outsl
ror
push
ds
adc
aam
sbb
jg
add
xchg
fisttpll
lock
xchg
data16
add
xchg
adc
mov
lcall
arpl
sahf
jae
jnp
mov
jb
out
insb
push
std
jbe
jg
jle
or
jecxz
or
push
aad
push
divb
fildl
adc
push
mov
pop
addb
fwait
mov
sbbl
test
test
sbb
test
into
mov
mov
push
xchg
nop
and
out
xchg
add
in
xchg
lock
sub
sub
divb
xor
push
xchg
repnz
xor
subl
sahf
xor
lcall
fdivrs
pushf
cmp
lock
imul
cmpsb
scas
jo
test
sahf
mov
inc
es
shrb
roll
push
lgs
int
mov
mov
out
jl
insl
sarb
sarl
push
movsb
mov
into
add
addr16
hlt
adc
push
dec
out
inc
movsb
xchg
lods
je
dec
daa
and
sub
add
mov
femms
or
das
in
or
or
es
push
adc
add
push
add
add
ds
add
cld
mov
mov
mov
xor
ds
xchg
push
mov
pop
pop
sbb
mov
pop
sbb
push
add
and
loopne
int
mov
ds
mov
aas
and
xor
xor
repnz
push
adc
aas
aas
cmp
adc
add
repnz
add
lods
addb
inc
inc
mov
inc
cmp
out
and
dec
mov
dec
aas
adc
ds
xor
dec
jge
arpl
test
mov
pop
cmp
ds
add
mov
lcall
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
mov
movsb
movsl
mov
lcall
sub
gs
sub
sub
sub
mov
ss
and
inc
mov
push
push
push
push
push
imul
push
jo
add
pop
push
push
push
imul
ljmp
pop
imul
nop
cltd
mov
mov
call
decl
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
xlat
or
lds
or
push
rolb
add
add
sti
mov
incl
out
lcall
adc
or
push
push
add
cmc
repz
push
repz
push
aas
add
sti
mov
add
add
mov
add
mov
or
jg
push
mov
fnstsw
repnz
sti
fistpll
into
xchg
addr16
add
pushf
add
mov
push
jns
imul
bound
push
arpl
mov
or
or
push
push
dec
lret
js
into
xchg
mov
add
mov
mov
test
scas
xchg
js
jecxz
push
and
out
mov
insl
cmp
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
jle
mov
lcall
leave
jbe
negl
mov
int3
fst
es
push
lret
loopne
mov
lahf
push
std
into
fdivrp
lods
adc
imul
xchg
add
shrl
add
jle
jge
or
adc
add
bswap
adc
dec
dec
in
enter
dec
add
pop
add
push
dec
or
adc
cmp
jbe
sti
pop
adc
dec
or
add
push
adc
add
inc
or
pop
pop
cmovg
sarb
stc
inc
push
dec
sbb
inc
adc
mov
dec
sbb
dec
add
std
push
jg
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
jg
insl
push
and
adc
sub
xor
xor
sub
stos
dec
loope
sub
xor
mov
add
jbe
mov
mov
mov
add
inc
and
push
outsl
add
lods
xchg
ja
add
and
jbe
sarl
orb
jmp
lock
xlat
sbb
incl
pusha
mov
adc
sysret
or
cmpb
pusha
movsl
ds
xor
in
pop
inc
jb
lock
hlt
and
or
xorps
push
and
inc
jg
ja
add
outsl
int3
inc
andb
sbb
ret
pop
lahf
and
addb
jg
xor
sar
mov
cli
fists
mov
adc
adc
jle
adc
push
mov
inc
test
inc
mov
jo
adc
mov
addl
push
sbb
jg
xchg
or
add
and
mov
xchg
mov
inc
cmp
pop
inc
push
cld
jg
and
enter
inc
loopne
jg
std
pop
inc
add
ja
jg
sbb
and
sub
dec
sbb
jg
enter
jle
roll
data16
sbb
add
subb
pushl
incl
push
add
add
data16
arpl
fisubs
push
test
jg
xor
sub
push
pusha
jg,pt
fcomps
mov
lods
add
pop
pop
mov
jle
cltd
lea
sbb
sbb
xchg
push
call
mov
stc
mov
lret
imul
and
adc
mov
lcall
xor
jg
pop
cmp
addl
shlb
scas
data16
push
push
and
and
cmpsb
sub
incl
push
adc
jmp
pop
mov
jg
jle
ljmp
notb
stos
pop
push
stos
pop
stos
pop
pop
mov
in
popf
pop
add
daa
aas
aaa
pop
xor
pop
pop
add
pop
xor
push
jle
add
pop
inc
push
lcall
jle
sbb
jne
jle
push
in
je
pusha
dec
xchg
push
bound
add
mov
push
mov
les
arpl
pop
insl
xchg
popa
das
push
mov
aam
out
mov
xchg
push
dec
inc
push
and
notrack
jae
scas
dec
jno
and
test
aam
sub
push
inc
lea
into
push
fnstenv
fidivrs
jne
push
push
jne
pop
push
jbe
test
push
jnp
push
jp
dec
or
push
js
dec
jbe
fisttpll
add
mov
inc
call
pop
es
or
jbe
outsb
decl
cmp
jle
and
daa
aam
incl
ss
test
pushl
dec
xchg
dec
ja
xchg
inc
subb
mov
insl
adc
xchg
push
inc
call
dec
mov
adc
outsl
push
sahf
inc
out
mov
mov
mov
aas
popf
inc
push
or
mov
pushf
cmp
data16
push
xchg
xor
xchg
xor
sub
sub
nop
daa
ss
repz
sarb
in
mov
xor
aaa
outsb
lcall
stos
test
sbb
cmpsl
addl
ja
xor
inc
sahf
xchg
rclb
or
pop
cs
add
aam
rclb
ja
iret
or
mov
xchg
mov
test
ja
cmpl
inc
divb
mov
add
adc
inc
pusha
dec
in
testl
cwtl
fsubrs
insl
sbb
add
outsl
orb
dec
inc
jns
mov
add
negl
orl
lea
out
lds
xchg
xor
call
xchg
inc
and
cmp
lock
cmp
push
jmp
cmp
icebp
or
std
punpckhwd
push
in
add
mov
cmpb
decl
add
pop
testb
dec
push
mov
mov
pop
push
inc
push
call
push
mov
xor
dec
cli
push
idiv
xchg
pop
adc
add
into
arpl
call
add
mov
incb
add
pop
jge
adc
xchg
pop
lcall
or
mov
jge
call
cld
pop
in
sbbb
dec
xchg
stos
mov
sbbb
out
adc
xchg
pcmpeqd
adc
lcall
or
loope
push
push
mov
mov
call
inc
flds
incl
decl
decl
sub
gs
push
addb
pop
decb
cmpsb
pushl
lcall
mov
scas
dec
jae
inc
outsb
decb
mov
and
inc
clts
add
sub
lods
iret
jle
adc
stos
insl
xor
sti
out
jbe
push
inc
xchg
cmpsb
push
incb
dec
or
pop
push
jb
arpl
incl
adc
mov
arpl
fdivrp
mov
sub
push
sub
jbe
xchg
pop
sti
push
std
ljmp
and
mov
call
inc
xor
mov
sub
push
inc
test
arpl
xlat
jg
mov
idiv
loop
push
dec
dec
xchg
and
sbb
lcall
incl
ficoml
pop
pop
inc
seto
ficoms
aaa
mov
stos
push
push
shll
jecxz
mov
roll
dec
testl
incl
ljmp
movsb
ljmp
lahf
inc
mov
xchg
testl
pop
mov
aaa
push
pop
sahf
es
fwait
in
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
lcallw
cs
dec
mov
out
add
and
int
insl
dec
out
push
shrb
rcl
outsb
rcrb
shll
push
push
jb
mov
das
push
iret
insl
into
dec
and
dec
dec
xchg
jmp
stos
xchg
dec
xor
push
push
jmp
fisubl
cmp
add
pop
int
repnz
call
popfw
cmp
aas
call
push
cwtl
xor
leave
xor
xchg
push
push
aaa
push
xchg
fisubs
xor
push
es
cmc
ficoml
xchg
xchg
testb
jnp
sub
call
ljmp
test
data16
ds
les
int3
fimuls
xchg
hlt
outsl
push
and
fcmovbe
js
std
faddl
data16
fstpt
push
jnp
jp
or
jl
push
fimull
or
jl
push
jge
fldcw
xor
jg
es
jbe
adc
fidivrl
push
mov
repnz
repnz
jae
pop
fidivrl
push
adc
int
mov
jnp
jge
jb
out
inc
jl
cli
int3
outsb
nop
negl
and
mov
stc
sbbb
aad
add
mov
adc
adc
outsb
add
push
sbbb
jnp
lahf
lds
decl
mov
addl
orb
out
xchg
aas
jg
and
xchg
out
push
sub
iret
out
mov
out
xchg
clc
push
neg
xchg
inc
sub
jg
and
ss
pop
cld
mov
jno
sub
jg
mov
icebp
mov
jg
jns
bnd
inc
daa
jg
mov
ja
jle
inc
push
loope
xchg
cld
jp
es
mov
jge
incb
out
xchg
and
orb
stos
push
add
pop
jmp
orl
mov
icebp
nop
sub
cs
cmpsb
push
push
fsub
pop
push
adc
push
int3
decl
dec
jle
mov
jne
out
jg
arpl
clc
jbe
and
push
pop
push
pop
aam
in
into
push
pop
or
scas
decl
push
xchg
mov
lcall
jns
lock
lods
mov
push
jmp
xchg
jmp
mov
add
push
xchg
mov
pushl
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
push
and
aaa
mov
add
ja
inc
or
aas
xlat
push
cmovno
lret
push
subb
movsl
sub
push
pop
movsl
sub
dec
lcall
insl
mov
add
sbb
push
inc
lahf
push
lock
adc
call
mov
jmp
sub
pop
iret
inc
test
pop
push
sbb
imul
and
or
inc
or
add
fcomps
push
mov
jne
ljmp
add
adc
add
xchg
test
aas
sub
add
add
roll
insb
popa
add
add
add
and
insl
jo
arpl
test
aas
add
popa
push
or
mov
adc
test
or
mov
push
pop
js
aaa
xchg
fimuls
pop
mov
sbb
test
rcll
xchg
test
inc
jmp
mov
jns
std
paddq
push
popa
ljmp
jb
inc
jecxz
add
adc
scas
pop
dec
mov
add
or
mov
jmp
sub
rolb
add
mov
adcl
jmp
xorl
aaa
add
fcmovb
rcrb
sub
sbb
adc
adc
popa
shlb
pop
mov
xor
jb
insb
mov
inc
add
inc
mov
add
lea
inc
jno
add
add
add
mov
or
gs
add
add
xor
sbb
bound
rcrl
flds
jnp
sub
lcall
cmp
lahf
push
shrl
rcrb
add
fdivs
adc
outsl
shrb
jo
xor
dec
xor
ret
xor
and
imul
sub
push
mov
fwait
ljmp
pop
pop
dec
insb
out
sbb
aas
incl
sub
dec
inc
mov
shll
or
insb
jne
addr16
bound
xor
inc
jnp
nop
outsb
test
rcrb
or
add
insb
popa
and
xor
icebp
push
xchg
sbb
mov
lds
ss
pop
push
sti
popf
xchg
icebp
or
cwtl
push
mov
xchg
aad
cmp
push
mov
pop
add
popa
xor
ret
lea
stos
xor
sub
in
push
dec
in
dec
mov
sbb
inc
pop
xor
mov
mov
cmp
fcmovnb
jo
add
jne
jbe
inc
cmpb
outsl
das
jecxz
add
xchg
ret
pop
pop
adcl
dec
es
add
push
cmp
xor
push
roll
ret
add
lcall
cmp
arpl
imul
sbb
jg
pop
shrl
jge
cmp
adc
js
cmc
mov
or
and
jecxz
xchg
mov
xor
or
push
add
pop
aad
dec
sub
sub
je
popf
xchg
or
jo
jae
xor
jno
or
and
addl
pop
int
mov
lods
ret
in
out
fisttpl
imul
mov
mov
inc
loope
add
inc
jg
mov
adc
pushf
mov
addr16
xor
inc
mov
je
xor
add
push
cmp
insl
fxch
mov
rolb
or
inc
arpl
sub
jne
sbb
arpl
shll
sub
adc
add
pop
sub
and
and
push
aad
or
mov
xor
sub
pusha
push
idiv
inc
mov
inc
fnstenv
mov
imul
mov
ja
inc
aam
test
sbb
out
cmp
cmpsl
mov
sub
and
inc
and
jnp
psubsw
sbb
push
ds
fsts
jbe
inc
es
insb
cs
js
mov
dec
push
jb
or
pop
sub
mov
psllw
fs
dec
inc
imul
divb
push
sbb
or
insb
lods
imul
popl
push
outsl
jo
jb
push
cli
fwait
push
mov
or
nop
stos
dec
inc
mov
dec
dec
and
jae
sub
adc
ret
inc
mov
mov
jns
dec
loopne
lods
cwtl
imul
push
sbb
mov
ret
std
fnsave
inc
or
xor
add
inc
pop
xor
inc
lock
mov
adc
mov
inc
jne
outsb
inc
sbb
in
lods
pop
xor
pop
and
inc
je
insl
dec
outsb
shlb
testl
add
rcrl
lods
mov
ss
xor
int3
loop
pop
shll
lcall
or
movsb
jnp
imul
inc
or
push
adc
shll
mov
jl
fidivrl
es
cmp
mov
inc
fisttps
movsb
outsl
xchg
add
and
jne
inc
lahf
imul
mov
inc
cwtl
or
sub
and
inc
inc
push
sub
outsb
sbb
call
jo
sarb
loope
data16
jns
in
mov
push
mov
daa
push
push
lret
ret
nop
xchg
fistl
inc
mulb
int
lock
cmp
je
sub
mov
add
jo
inc
stos
sbb
pop
xor
cltd
testb
movsb
cwtl
das
cmp
das
lea
scas
inc
inc
hlt
mov
adcl
insl
sbb
mov
add
fs
push
cltd
hlt
out
dec
mov
imul
cs
lcall
push
addr16
jp
sub
mov
subb
jo
sbb
xor
mov
arpl
pop
jo
outsb
sub
mov
mov
scas
mov
jo
pop
xlat
adc
xchg
xorb
adc
fsubl
xorb
and
inc
in
adc
sbb
sbb
adc
mov
mov
jbe
adc
add
adc
add
lock
pop
out
mov
sbb
scas
int
insl
dec
inc
push
xorb
push
and
or
xchg
shll
cld
cmp
sbb
enter
arpl
test
pop
shlb
repz
push
and
or
mov
xor
roll
inc
sbb
sub
push
mov
mov
xchg
mov
mov
sbb
and
inc
cmp
push
test
push
out
test
in
push
xchg
cmp
daa
outsb
pop
add
rcr
dec
fildl
sub
push
jne
xor
pop
or
pop
lods
add
dec
jo
xchg
add
mov
mov
inc
adc
mov
xor
outsb
rolb
pop
sbb
cmc
outsl
or
arpl
rorb
out
jno
lcall
sub
inc
test
add
fnsave
add
mov
dec
imul
sub
pusha
adc
test
inc
lcall
push
cmp
mov
inc
in
adc
loop
jnp
add
add
faddl
orb
lahf
mov
push
inc
add
sub
outsl
fsubs
add
jno
sbb
std
pop
add
xchg
movb
mov
pop
pop
shll
inc
dec
push
nop
mov
dec
insb
add
inc
insb
aad
lock
xchg
add
dec
in
dec
notl
mov
nop
cli
cmp
adc
push
pop
sahf
push
test
loope
inc
outsl
fdivrs
mov
xchg
pop
cmpl
sbb
fimuls
add
xchg
and
add
test
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
inc
add
inc
add
