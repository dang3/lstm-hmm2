fcomp
decl
lock
inc
add
mov
or
adc
std
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aam
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
je
mov
mov
sahf
mov
les
fidivl
mov
xor
in
push
push
mov
add
xor
das
dec
and
outsb
push
cs
jle
or
sbb
enter
sbb
xor
mov
adc
push
lea
push
ficoms
push
add
fwait
sbb
add
or
sub
adc
cmp
roll
dec
add
jg
and
add
push
pop
sub
add
pop
push
cmpb
out
cmpsl
clc
negl
inc
shlb
add
inc
hlt
push
and
sbb
out
or
jmp
sbb
jo
pusha
mov
adc
mov
rcrl
and
mov
add
push
or
inc
lock
add
cmp
lret
lds
insb
mov
sub
or
and
cmpb
push
fcomp
loopne
sub
mov
jns
pop
mov
adc
cmpb
fucom
mov
ret
push
mov
xorb
add
ss
mov
sbb
pushf
xor
sete
jp
push
dec
into
test
dec
fdivp
push
enter
je
jnp
or
cmp
pop
fstpt
push
les
add
push
or
push
xor
cmp
add
adc
xchg
add
sbb
cmovle
pop
push
addl
sub
and
sbb
mov
inc
aam
xor
push
cmp
repnz
inc
push
mov
lea
or
mov
dec
sub
std
dec
add
loope
push
sbb
dec
or
pop
sbb
adc
xor
idiv
rcrl
sub
push
mov
and
sbb
mov
jmp
jb
jne
clc
pop
jge
mov
xchg
pop
out
loopne
inc
pop
cwtl
mov
pop
ret
xor
add
mov
push
or
xor
int
push
add
and
cmp
lods
jl
cmpsl
adc
inc
les
leave
decl
cmp
rcrb
mov
pop
push
inc
mov
sub
mov
cld
lea
sbb
jl
or
xchg
iret
je
and
shl
lcall
jp
or
and
push
int
and
push
loop
mov
cmp
mov
fwait
mov
ficomps
jbe
das
dec
or
add
popa
out
lock
in
dec
ret
out
rol
shrd
call
inc
mov
andb
fstpl
test
pop
mov
or
dec
push
push
or
or
jle
pop
push
movsb
sbb
inc
hlt
nop
test
pop
add
sub
or
push
out
mov
gs
cmp
add
fwait
sub
imul
mov
mov
je
or
cmp
and
xor
xor
mov
lock
add
gs
inc
push
lea
push
push
movsb
fsubrs
cltd
fistps
cld
push
and
xor
fwait
push
mov
pop
xchg
push
jl
in
dec
jg
dec
or
test
push
adc
sbb
pop
inc
add
push
mov
add
adc
mov
jb
sub
pop
aas
sbb
cmp
pop
and
pop
and
js
sub
dec
mov
pop
sbb
sub
push
shrb
cmp
out
mov
pusha
push
push
es
mov
push
or
push
add
out
add
cmp
add
or
jbe
dec
sbb
xchg
pop
push
pusha
sub
jns
fprem1
sete
test
test
in
sub
add
nop
mov
orb
xor
adc
jne
loope
dec
insb
pop
cmp
divl
xor
and
push
cmp
je
test
test
lds
dec
jp
punpckhbw
dec
push
clc
add
jne
mov
inc
out
test
jne
push
jle
or
and
cwtl
add
push
nop
mov
and
or
mov
push
inc
xor
add
push
jbe
icebp
sbbb
inc
into
sub
xchg
mov
mov
addr16
push
dec
shll
push
xor
pop
mov
push
ljmp
daa
mov
push
push
fs
mov
jl
scas
dec
push
cmp
cltd
cmpsl
lods
cmp
push
inc
xor
push
cmc
or
jmp
cmpb
cmp
fcomps
jo
pop
jle
push
sbb
ret
jno
pop
jns
xchg
cmpb
pushf
push
negl
mov
shll
movsb
jno
sbb
pop
lea
cmp
mov
faddl
cmpsl
xchg
inc
sbb
push
and
push
and
adc
adc
leave
pop
movsb
mov
movb
das
dec
fwait
dec
inc
and
push
mov
xor
mov
adc
and
inc
add
adc
fiaddl
sub
push
jmp
and
mov
xlat
int3
xor
push
mov
cmp
mov
adc
pop
pop
jno
xor
adc
sbb
add
loope
or
mov
data16
loopne
lea
data16
stos
jno
lcall
out
jg
scas
js
mov
jns
add
test
xchg
stc
clc
aam
or
mov
aas
mov
xor
fcoml
jmp
push
sarb
cld
mov
adc
fstl
testl
sbb
inc
mov
inc
fmulp
call
xchg
int3
adc
adc
dec
daa
add
adc
xor
or
ret
loopne
sbb
data16
mov
cmp
and
mov
mov
test
in
push
mov
sarl
pusha
adc
and
aaa
push
repnz
sbb
loopne
icebp
lea
pop
test
jl
and
xchg
aad
sbb
xor
dec
mov
insl
aam
jno
push
push
pop
loop
inc
loop
xchg
inc
push
int
mov
mov
shrl
test
jg
int
push
cli
jmp
cmc
inc
add
bound
scas
stos
mov
pop
pop
and
int3
fcmovb
add
add
lahf
lock
mov
push
jp
push
push
xchg
and
adc
sub
outsb
in
fstpt
popf
test
xchg
add
insb
xor
cmpb
xchg
out
lret
sbb
sbb
sahf
outsb
push
icebp
sub
or
sbb
jg
inc
inc
adc
jle
jne
mov
push
mov
xor
loope
aam
popa
mov
sbb
push
and
sub
sti
test
je
or
xorb
out
push
lret
or
mov
mov
popa
inc
pop
fadds
shl
subb
add
adcb
pop
scas
into
mov
inc
add
loopne
add
mov
stc
aad
lds
push
call
sbb
call
shll
cmp
call
inc
cmp
jl
xlat
ret
outsb
inc
fdivrp
add
push
sbb
scas
cmp
push
js
jne
sbb
jbe
push
push
xor
or
sbb
decb
movsl
or
adc
xchg
dec
mov
je
mov
mov
dec
sub
icebp
push
jo
loope
rorb
loopne
inc
fbld
and
jne
stos
push
and
mov
and
int3
xchg
jle
lahf
divb
cli
into
sbb
jmp
ss
mov
lea
sti
ljmp
add
jne
sub
push
push
inc
sbb
in
cs
adcb
pop
push
dec
rcrb
adc
fists
or
and
js
jg
lods
or
fs
insb
jne
adc
add
pop
dec
es
lea
fcmovnu
addl
sub
test
add
jge
xor
and
push
mov
cmp
jl
xor
xchg
pop
insb
pop
pop
ret
mov
jbe
or
mov
fisttpl
jl
rcrl
mov
rcr
mov
lcall
ficomps
or
test
arpl
push
loope
push
out
aaa
adc
lea
imul
cmp
xchg
or
sar
ja
test
mov
std
sbb
jge
push
in
loope
bound
or
mov
stos
mov
jle
mov
mov
cmp
pop
negb
inc
clc
mov
lea
push
jo
pop
fmuls
sarb
movl
lods
call
ja
add
jmp
insb
fcoml
add
push
outsl
or
mov
cwtl
jl
inc
jo
stos
jle
loope
test
add
add
dec
pop
ret
and
or
push
fldcw
clc
enter
jbe
je
cmpl
insb
jge
ror
and
sub
add
out
movl
sti
push
pop
or
xor
or
cmp
push
loope
loopne
dec
push
rclb
les
pop
cmp
fdivrl
pop
pop
push
ds
jne
jo
push
pushf
mov
mov
cld
mov
or
lret
cld
in
mov
repz
cmp
ja
push
clc
lea
push
push
popa
adc
dec
or
clc
push
pop
jnp
mov
add
xchg
dec
pushf
adc
push
pop
inc
mov
adc
adc
sub
in
jb
loopne
filds
pop
or
xor
push
push
or
xchg
or
cmp
pop
push
push
lea
sbb
outsb
mov
adc
subl
scas
cmp
shlb
or
or
data16
out
sub
pop
sbb
adc
adc
pop
adc
out
into
mov
pop
jecxz
jnp
or
shl
mov
lock
test
icebp
mov
shrl
xchg
mov
pop
std
loop
push
fstpl
add
sub
or
cs
sub
call
decb
cmp
je
cmpl
lea
jl
mov
mov
jne
push
imul
enter
fidivs
dec
test
push
sub
mov
jg
hlt
push
fistpl
pop
adcb
or
pusha
call
adc
mov
inc
or
arpl
es
jmp
mov
xlat
cmp
sbb
or
mov
and
incb
push
addr16
fldcw
dec
mov
ret
aaa
or
inc
inc
or
mov
adc
ret
dec
jg
mov
sub
pop
mov
push
jne
fdivrs
pop
or
add
push
push
clc
add
lods
sbb
xchg
push
pop
outsb
fldt
pop
push
push
insl
xor
mov
sub
int3
dec
push
mov
mov
add
stos
and
adc
adc
nop
mov
rol
pop
hlt
add
fnstsw
jmp
inc
add
dec
adc
clc
ret
push
rclb
push
lods
mov
lea
lds
pusha
test
inc
scas
test
sbb
das
cmp
or
cmp
cmpsb
jo
sbb
cs
add
sahf
cmp
add
or
es
ret
and
pop
mov
movsl
pop
mov
and
adc
adc
push
out
inc
jnp
cmp
xor
cltd
ret
mov
enter
rcll
adcb
out
pop
mov
mov
or
add
ret
or
adc
mov
cmpsl
int3
mov
push
or
inc
or
adc
inc
mov
inc
or
mov
lahf
out
mov
lock
hlt
cmp
cli
lret
adc
clc
xor
rcl
rorl
add
add
cmp
shrl
lds
xor
loop
add
clc
mov
jecxz
rclb
inc
sub
mov
jb
xor
add
fldcw
imul
stos
les
and
mov
mov
das
jle
add
inc
pop
pop
push
xor
push
inc
fwait
sub
jmp
lahf
mov
popa
lcall
jb
mov
pmaxub
add
mov
insb
pop
pop
pop
mov
sub
lods
fstl
lock
mov
push
pop
jae
je
in
jge
lcall
mov
jecxz
pop
lea
mov
xchg
mov
adc
xor
sbbl
frstor
pop
mov
push
data16
sub
sbb
push
mov
push
inc
adc
pop
roll
cmp
cmp
mov
daa
in
and
or
cwtl
xchg
shr
or
push
test
push
sbb
and
aam
enter
negb
lret
data16
mov
int3
mov
pop
repz
xor
sti
aad
clc
movsb
push
push
add
adc
pop
sbb
sarl
or
adc
aaa
testb
xor
lods
jge
cmp
jne
xor
push
push
dec
pop
outsb
fildll
mov
add
sub
xlat
push
lea
inc
cmp
lea
inc
fisttps
mov
test
insb
mov
test
or
jecxz
pop
or
rcll
xchg
aad
jo
aas
inc
adc
fisttps
test
or
ja
adc
pusha
cmpb
pop
mov
adc
fstpl
and
pop
repnz
sbb
inc
shll
incl
add
add
test
into
push
sbb
pop
inc
mov
jno
loope
fs
push
call
mov
and
xor
cmp
fiadds
ja
fwait
test
and
je
or
mov
sbb
push
jge
test
xor
push
push
movsb
addb
rol
xor
scas
xchg
call
adc
sarb
jbe
push
adc
sub
or
lahf
out
dec
cmp
in
cmpl
mov
mov
sbb
ljmp
or
jmp
sar
mov
shr
add
jne
and
cmp
pop
orl
sbb
sahf
pop
cmp
jecxz
and
cmpb
adc
pushf
adc
fidivs
je
orl
sub
jne
cmp
sahf
add
push
mov
ret
call
jne
popa
aas
mov
sahf
divb
movb
ud2
ret
sbb
je
iret
fwait
imul
inc
dec
adc
xorl
icebp
or
stc
or
and
cmp
cmp
mov
decb
xchg
sbb
mov
add
mov
loopne
xchg
or
enter
leave
and
pop
pushf
cmpb
cmp
shrb
fldt
xor
or
jp
hlt
pmulhw
mov
sarl
and
aaa
push
inc
sbb
adc
sbb
in
mov
jge
popf
jns
lds
mov
fistl
sbb
inc
sbb
jmp
in
xchg
fldz
movl
sahf
or
mov
stc
sbb
mov
scas
sub
int3
xor
mov
sbb
je
cld
jne
scas
dec
sbb
lock
cmp
leave
aaa
push
xor
aas
push
jl
out
jne
repnz
shll
mov
addl
adc
pop
and
adc
jg
sbb
push
pusha
loope
push
adc
mov
mov
or
clc
out
dec
rcll
add
adc
in
push
ljmp
push
mov
xchg
sahf
shrl
push
incl
dec
dec
mov
mov
lea
push
ficoml
push
add
push
lea
cmp
xchg
push
dec
aam
mov
inc
les
mov
sahf
mov
xchg
pop
lods
sbb
or
sbb
push
cwtl
jmp
adc
sbb
push
cwtl
add
je
cli
push
aad
js
jle
add
fiaddl
pop
fidivrl
mov
nop
xchg
fldt
add
dec
push
nop
add
add
lock
push
aad
shll
push
jle
ficompl
add
pushf
xchg
sub
ret
xor
xchg
je
sub
or
icebp
push
cmpl
mov
sbb
xchg
mov
pop
ret
jle
or
inc
inc
and
push
cld
mov
xor
sbb
mov
adc
add
fadds
mov
stc
movsb
shl
inc
pop
and
dec
call
jnp
out
sbb
xchg
inc
push
imul
and
je
cmpsb
loop
cltd
sbb
out
dec
cmp
push
push
xor
xor
addb
sub
or
bswap
setne
shlb
movsb
add
dec
dec
and
push
pop
repz
mov
fcompl
dec
in
mov
pop
add
add
cwtl
rorl
mov
je
lea
add
lock
ds
inc
inc
add
mov
xchg
pushf
push
mov
mov
cmc
and
dec
sahf
pop
mov
test
mov
pop
pop
jl
sbb
sub
push
push
cmpl
loopne
mov
cli
adc
xchg
and
test
je
lcall
sub
ret
push
push
movl
mov
mov
fdivl
inc
mov
push
push
mov
mov
insb
push
dec
dec
mov
push
jle
inc
loop
xor
push
inc
dec
sbbb
and
sub
dec
sub
cltd
out
inc
cld
sub
sar
add
mov
xor
outsb
in
mov
dec
sub
mov
add
sahf
inc
add
push
add
into
cmp
xchg
sbb
pushl
pop
push
and
push
xor
adc
xchg
fadd
push
jns
mov
adc
cmp
xor
cmp
inc
mov
adc
xor
lds
push
nopl
icebp
adc
pop
push
ret
pop
ret
lds
jecxz
inc
neg
sbb
mov
ja
jge
call
pusha
adc
xchg
pop
mov
jg
push
pop
xor
push
addb
adc
je
fstpl
cwtl
push
fnstsw
push
shlb
fs
push
add
inc
clc
movl
xlat
push
out
mov
sbb
lret
xor
xchg
loope
fidivrs
loop
cmpsl
adc
push
out
ficoml
lock
xchg
adc
or
mov
pusha
jmp
cwtl
add
jmp
out
icebp
mov
xor
push
push
push
and
push
add
mov
aas
cs
jo
lret
push
mov
mov
das
aam
ret
cmp
mov
fsubs
xlat
loop
pop
shlb
mov
addr16
clc
add
pusha
jne
sbbl
out
mov
fs
shll
out
xchg
jmp
pop
or
jmp
cwtl
jb
repz
pop
cmpsl
adc
rolb
inc
sbb
xor
pop
mov
cmp
xchg
xchg
pusha
mov
dec
fisttpl
or
dec
mov
pop
flds
shlb
mov
ds
mov
popa
icebp
pop
scas
xor
mov
mov
push
lods
jno
add
push
xchg
mov
add
sbbb
idiv
push
jne
push
enter
mov
inc
and
lcall
or
lock
jb
pop
jbe
icebp
or
pop
push
fstpl
icebp
mov
out
orb
push
fwait
imul
jge
inc
lods
mov
or
ret
enter
sub
sub
xabort
jns
lods
and
xchg
push
mov
xor
nop
add
incl
mov
or
lods
push
dec
sbb
dec
lret
push
push
mov
test
jo
push
addb
xor
lods
dec
inc
inc
lahf
push
rclb
ret
xor
pop
push
pusha
jbe
sub
test
jge
push
push
nop
sti
add
or
pop
pop
sub
push
push
lea
mov
pop
scas
pop
push
lea
add
pop
push
daa
xchg
mov
push
cmp
or
js
jmp
jns
cmp
jno
xchg
addb
or
push
test
pop
inc
add
inc
cmp
pop
lcall
inc
addl
mov
dec
add
cmpsb
sbb
add
ret
mov
add
dec
mov
daa
cmp
dec
aad
push
and
jo
push
mov
mov
xor
js
je
push
mov
bound
adc
pop
test
aaa
faddl
xor
aas
inc
rcrb
lcallw
inc
fldl
fsubr
lock
or
add
push
mov
rorl
outsl
inc
fmull
or
jb
es
push
rcll
movsb
and
dec
lock
adc
mov
add
add
push
les
dec
ds
push
or
cmpsl
sbb
lds
pop
adcb
and
aam
ret
out
daa
mov
or
dec
inc
mov
jecxz
push
add
push
mov
scas
add
cmp
shlb
inc
cmp
scas
push
loop
lock
cmpsb
loope
sbb
cmp
fs
jo
es
push
rsqrtps
loope
add
cmpb
jno
test
and
adc
adc
stos
adc
fs
inc
xor
pusha
fadds
mulb
addb
push
xchg
sbb
push
lds
pop
inc
addl
cs
cld
iret
mov
jge
add
je
jmp
out
dec
mov
jge
xchg
lock
push
stos
and
sub
sub
rcrl
adcl
test
fldcw
dec
inc
cmp
dec
push
mov
jns
mov
push
clc
dec
or
stos
xchg
add
jnp
vshufps
ret
xor
cmp
add
xor
bound
int
dec
dec
sbb
adc
mov
int3
int3
dec
push
push
push
cmc
dec
mov
xor
xchg
fcom
push
mov
sahf
leave
add
sti
out
dec
cmp
push
sbb
rolb
pusha
mov
cwtl
or
jno
mov
ret
cmpl
add
enter
inc
push
mov
ret
cwtl
dec
pop
sbb
and
sbbl
xor
add
jno
rcrl
or
sub
jl
sarl
loop
add
clc
or
fstps
xor
pop
adc
jl
dec
dec
gs
dec
add
xchg
int
adc
add
mov
out
add
rorl
adc
out
sar
mov
shr
add
mov
imul
js
repnz
push
lahf
adc
in
jle
in
sti
testb
jmp
test
sub
sahf
cmc
sub
mov
out
push
loop
stc
add
nop
adc
mov
enter
lea
je
decl
push
cmpl
fwait
test
mov
xor
nop
lahf
sbb
pop
adc
add
ret
ficomps
loopne
lods
xor
pop
xor
clc
sti
lea
or
shl
mov
and
movsl
outsl
sbb
lea
or
and
inc
dec
call
dec
lea
add
mov
sbb
inc
mov
movsb
push
jnp
or
out
data16
daa
pushf
or
pushf
sub
mov
sbb
jmp
jg
adc
fstpt
cltd
idivl
je
add
aaa
ds
mov
sbb
jl
jp
cmp
jbe
popf
jne
std
mov
jl
insl
arpl
mov
mov
adc
test
or
jbe
add
xchg
mov
mov
adc
sbb
mov
and
inc
mov
add
popf
imul
dec
sub
cmp
or
out
or
jmp
mov
lea
mov
add
xchg
mov
sbb
push
faddl
mov
xor
mov
sub
xor
mov
fdivrp
loop
jge
shll
mov
test
sbb
mov
mov
mov
jns
inc
push
cmp
xchg
cmp
add
adc
mov
cmp
jne
js
out
fidivl
mov
lods
add
mov
loopne
pop
repnz
in
add
mov
xchg
add
mov
sbb
js
leave
jge
dec
mov
enter
lret
scas
call
mov
aad
sbb
je
mov
sbb
enter
xchg
mov
call
inc
or
xchg
mov
lret
xor
mov
mov
xchg
xchg
enter
and
cmp
pop
xchg
xor
daa
pop
push
dec
add
sub
adcl
movsl
jno
sub
add
rcl
jnp
inc
jl
inc
pushl
loope
sbb
add
dec
and
invd
and
xchg
jnp
and
mov
sub
add
mov
aam
push
inc
outsl
mov
or
and
push
jmp
or
sbb
lock
sahf
mov
or
ret
popa
or
and
enter
dec
les
mov
into
or
rcrb
cmp
stos
mulps
push
test
dec
cmp
add
loope
mov
or
jbe
add
add
mov
pop
addb
daa
ret
push
test
push
fcoms
out
xchg
fucomip
dec
or
push
add
push
insl
adc
mov
jae
push
lcall
dec
and
fstpl
push
rolb
xorl
push
or
mov
adc
push
push
inc
fsubrs
inc
leave
fimull
movsb
jle
mov
push
push
sbb
mov
xchg
adc
pop
test
push
jmp
mov
and
sub
lea
dec
xchg
add
add
sbb
ret
popa
and
enter
push
dec
mov
repnz
inc
leave
inc
push
jle
jne
xchg
lret
push
pop
lahf
ret
and
notb
shll
and
lahf
jb
jb
or
or
and
xchg
popa
or
push
clc
pop
cli
add
push
clc
push
out
es
cmp
setb
insb
push
mov
sub
cmp
setae
repnz
cmp
lcall
adc
sbb
mov
xor
xorl
mov
punpckldq
sub
aas
inc
push
dec
sarl
aam
lea
push
adc
inc
pop
adc
push
movsl
push
or
insl
es
pop
pop
fistpl
lahf
mov
pop
jecxz
push
sbb
aas
stos
mov
xor
push
ret
ss
cmp
xchg
jp
jnp
inc
push
adc
sbb
jno
outsb
mov
aam
popf
xchg
in
andb
incl
lds
xchg
inc
ss
push
xor
xchg
inc
push
push
dec
push
sbb
or
jg
vmwrite
in
mov
xor
and
adc
iret
jl
lcall
push
inc
pushf
out
push
pop
jns
incl
jno
pop
cmp
ja
movzbl
ret
lcall
mov
cmp
mov
jo
divb
in
fdivs
add
add
mov
add
xlat
dec
nop
push
add
add
jl
mov
inc
and
and
leave
jnp
ret
ds
adc
push
cmp
inc
xor
xor
movl
ja
pop
pusha
test
es
jmp
sbb
pop
push
mov
nop
lret
xor
lret
jo
mov
in
cltd
and
repz
and
jo
xchg
push
and
push
bound
add
orb
push
adcl
or
mov
xchg
rolb
mov
add
imul
je
cmp
cli
mov
add
xchg
mov
or
dec
sbb
or
lea
sbb
mov
inc
out
mov
xor
dec
mov
sbb
mov
push
jne
cmpsl
fldt
jo
bound
xchg
mov
dec
ja
push
adc
subps
push
pop
or
push
hlt
mov
xchg
mov
rclb
mov
add
dec
xchg
push
pop
in
mov
push
pusha
shl
mov
pop
ret
aaa
adc
dec
or
adc
nop
and
leave
es
jne
sub
je
arpl
jbe
jne
push
dec
fsubp
push
push
xorl
push
and
mov
adc
sub
mov
push
subb
cmpsb
std
out
imul
outsl
int
xchg
out
enter
xchg
or
sbb
enter
insl
sbb
adc
dec
mov
push
cmp
lods
shll
push
aad
leave
or
lods
jp
dec
aaa
jg
cwtl
jo
pop
jb
inc
inc
pop
nop
mov
test
inc
sbbb
dec
and
sti
and
mov
xor
cmp
and
lea
inc
xchg
js
pop
test
es
bound
loopne
fcmove
push
push
mov
outsl
dec
or
lods
cld
sub
push
or
ret
cmc
cmpb
faddp
or
or
rorb
add
add
add
fimull
fcmovnu
int
mov
sbb
leave
add
adc
fcmove
adc
push
fisttpl
adc
and
fisttpl
adc
mov
push
outsb
xchg
inc
or
fldenv
jb
mov
or
add
jne
adc
loope
add
lret
or
test
aam
or
cli
push
xchg
call
mov
fwait
mov
adc
jno
and
test
lods
add
mov
loopne
addb
add
push
mov
fs
popf
fmull
cmpsb
adc
add
mov
in
adc
push
mov
loop
sbb
idivb
mov
inc
ss
es
pop
movl
mov
test
push
shrb
or
daa
push
mov
add
data16
mov
bound
adcb
pop
insl
loopne
dec
xor
sub
cmc
or
cmp
and
push
adc
sbb
cltd
mov
movsb
pop
push
mov
daa
and
lret
mov
dec
jge
out
jmp
cs
sbbb
mov
ljmp
loopnew
xor
shrb
dec
sahf
mov
mov
mov
fists
sub
imul
lahf
in
fisubrl
push
cmp
mov
push
add
mov
sbb
insl
push
push
sbb
and
mov
pop
mov
loope
fstps
ss
sub
push
adc
mov
mov
iret
sbb
jp
sbb
mov
test
add
adc
sahf
or
cmp
mov
test
rol
push
stc
fsubr
pop
add
and
dec
divl
adc
ds
adc
test
sbb
test
aad
jle
bound
repz
int3
add
push
cld
bound
cmp
push
sbbl
push
push
popf
jo
std
stc
cmp
mov
jl
push
jns
mov
push
mov
mov
adc
push
cmc
adc
push
into
movl
fmull
pop
pushf
jge
jne
lock
mov
leave
dec
lret
sub
xor
mov
mov
push
shl
pop
mov
adc
add
lock
xor
test
mov
mov
xchg
je
movsl
test
andb
xlat
inc
jmp
jae
or
push
push
inc
mov
or
shll
jne
add
dec
mov
pop
pushf
je
ret
mov
addl
rclb
in
pop
or
add
push
push
and
cmp
cmp
or
add
roll
adc
fldcw
aad
or
jmp
fmull
pop
mov
sbb
push
rorl
sbb
and
pushf
sbb
ss
sarb
repz
xor
loope
push
inc
push
jle
jbe
into
add
adc
shlb
xchg
add
jge
and
sbb
mov
xor
push
test
mov
cmp
aam
pop
sbb
add
and
dec
adc
jbe
mov
into
clc
xor
push
nop
aaa
cli
mov
adc
sbb
or
jne
add
cmp
pop
add
mov
je
sub
std
rolb
adc
add
sbb
cmc
stos
inc
or
popf
mov
stc
bound
mov
inc
and
xor
cmp
dec
gs
and
and
and
adc
fildl
dec
and
int3
mov
subb
daa
jmp
lahf
jns
or
nop
dec
mov
mov
xor
outsb
pop
mov
dec
test
pop
jge
stos
xchg
pop
mov
xor
mov
sub
inc
sub
fisttps
nop
aaa
sbb
mov
push
sbb
addb
sub
xchg
sub
cmp
push
xchg
xor
fs
stos
pop
mov
fsts
test
in
push
push
or
push
sub
xchg
mov
in
cs
in
sbb
fistpll
pop
arpl
add
ljmp
and
mov
mov
inc
adcb
inc
and
inc
push
pop
rolb
mov
sub
sbb
add
popa
les
push
nop
aaa
sbb
push
mov
cs
nop
pusha
add
cltd
addb
jnp
loop
add
sbb
andl
inc
pop
sbb
pop
pop
adc
and
add
add
fwait
sub
cmp
imul
pop
sbb
in
jo
push
cmp
push
mov
push
nop
and
ljmp
push
sub
xor
pop
dec
dec
out
xor
pop
add
cmp
clc
adc
pushf
aaa
xor
xor
daa
out
test
add
mov
leave
inc
sub
ljmp
dec
mov
repz
cmp
adc
add
push
and
les
pop
mov
jb
pusha
cmp
push
sub
mov
dec
wrmsr
sahf
cs
or
cld
fidivl
pop
and
lea
jnp
jnp
shrb
xchg
xor
adc
adc
je
jmp
xor
push
popa
xorb
mov
xor
je
test
cmp
inc
mov
cmpb
daa
or
cmp
sub
xchg
pop
cli
insb
testl
stos
adc
push
pop
xor
leave
into
mov
insl
xchg
adc
sbbb
jmp
mov
mov
jge
push
or
pusha
aad
or
movl
push
int
and
cmp
cltd
dec
sahf
dec
cmp
sub
cmpsb
inc
imul
seto
in
mov
or
add
adc
inc
pusha
pop
add
mov
pop
mov
popa
jo
sub
sub
pop
push
mov
mov
testl
inc
movb
cmp
test
imul
clc
xchg
add
pusha
faddl
icebp
sbb
pop
sub
fdivrl
addr16
push
and
jle
and
test
or
add
psrad
pusha
in
push
inc
cmp
sub
cld
ss
aad
fldt
add
cmp
scas
mov
push
in
mov
xchg
pop
add
mov
rolb
xchg
push
popf
adc
pushf
lret
loopne
push
pop
add
xorl
ljmp
rcrl
jno
fs
out
loope
or
push
clc
mov
pop
std
pop
in
and
std
push
into
imul
push
jp
and
pop
xchg
add
mov
mov
cmp
fld
dec
jp
cwtl
stos
pop
fwait
outsl
fwait
xor
add
add
fdivs
cmp
mov
mov
and
pusha
pop
call
push
sub
fstpt
adc
adcb
dec
mov
xchg
test
dec
xchg
or
sub
push
push
xor
in
and
test
in
arpl
imul
push
shll
jno
addr16
lock
and
inc
pop
pop
loop
mov
pop
xchg
in
and
leave
push
test
je
inc
adc
add
jecxz
mov
sbb
insb
sub
inc
je
or
push
mov
pop
or
adc
movsb
shlb
popa
adc
or
cmp
mov
pop
or
pop
pop
adcb
and
fs
jno
adc
cmpsl
push
inc
dec
gs
gs
addl
ror
les
mov
or
popa
xchg
sub
roll
sbb
push
std
std
into
test
xor
xchg
sbb
dec
add
add
es
mov
into
mov
sti
jg
pop
mov
xor
cmp
pusha
cmpsl
cmp
lods
enter
push
push
mov
adc
lea
push
cmp
mov
or
dec
enter
adc
xor
enter
adc
add
adc
test
cmc
pop
xor
pop
enter
and
xor
shlb
gs
fildll
and
adc
xor
cwtl
jae
adc
nop
nop
adc
xchg
dec
push
inc
ret
pop
xor
and
add
inc
and
dec
test
mov
jo
push
and
and
nop
adc
adc
jnp
adc
fstpt
loop
xchg
xor
imul
jo
js
push
adc
push
ss
and
add
inc
push
in
test
add
pop
and
xchg
mov
nop
mov
inc
or
test
add
cmp
add
jmp
popf
push
xchg
std
movsb
xchg
adc
add
push
dec
sbb
xchg
cmp
add
popa
adcb
sti
loop
push
sub
or
mov
mov
inc
sbb
xorb
lahf
lock
xor
and
inc
fucompp
jmp
mov
cmp
in
pop
and
and
out
sbb
or
enter
in
sbbb
and
and
adc
test
jns
pop
or
movsb
xor
inc
lcall
dec
add
ja
lret
jno
mov
inc
lods
rdtsc
pop
sub
into
mov
stos
xorl
push
dec
sub
and
sbb
mov
cmp
das
pop
xor
push
cmp
adcl
add
pop
mov
orl
out
jnp
out
pusha
sub
mov
jp
int
adc
jmp
fst
jmp
add
add
cmp
jae
in
add
into
mov
dec
jae
or
call
dec
out
mov
inc
es
or
xchg
popf
sarb
push
pop
sbb
mov
push
mov
and
mov
ds
mov
out
add
jbe
jno
pop
inc
add
mov
xor
aam
or
push
jbe
and
or
inc
lcall
push
inc
xor
push
xchg
add
and
test
shlb
lret
arpl
mov
pop
add
mov
loopne
popf
cmp
pop
sub
sub
mov
mov
pushf
dec
insb
je
jno
fldt
iret
stos
mov
pop
frstor
xor
test
and
jp,pn
jg
jne
out
adc
daa
nop
xchg
inc
mov
sub
lea
je
aas
mov
and
jle
dec
clc
and
or
jge
push
adc
push
lock
fwait
mov
mov
dec
out
rorb
decl
jge
mov
ret
jg
pop
mov
clc
or
and
loop
test
je
dec
jl
jg
pusha
arpl
lock
xor
jne
add
out
imul
pop
shl
lea
mov
jmp
mov
lea
out
fidivrs
pop
push
mov
push
in
dec
dec
cmp
push
push
or
adc
pop
jl
xlat
push
push
cmp
insb
and
sub
inc
repnz
xor
cs
add
lock
clc
push
loop
or
inc
add
xchg
pop
cld
jmp
and
cmp
nop
add
push
jbe
add
int3
call
adc
test
js
je
call
mov
and
sub
xor
shll
and
adc
add
aas
mov
les
fdivrs
xor
cmpsl
xorl
mov
xchg
out
jns
add
and
add
push
leave
adc
aad
jmp
lods
add
sub
jg
jecxz
jb
lea
push
dec
sbb
ss
shl
pusha
cmp
adc
or
loop
mov
xor
fsubrs
add
dec
and
jno
and
sub
add
dec
sbb
push
dec
inc
xor
shlb
sbb
test
dec
push
or
inc
in
mull
jo
add
mov
mov
aam
out
js
je
xor
ror
push
push
imul
and
es
pop
pop
jo,pt
aam
push
xchg
loope
pop
sub
jecxz,pn
loopne
or
inc
mov
cmp
addl
mov
pushf
dec
xor
call
push
stos
inc
add
add
jo
push
or
xchg
icebp
add
add
add
adc
inc
pusha
ljmp
je
sub
fs
jae
lods
adc
das
outsb
popa
loopne
mov
push
mov
inc
imul
cmp
pop
adcb
out
push
mov
sbb
push
inc
pusha
pop
pusha
js
sbb
ja
stos
scas
ret
sbb
mov
ret
insb
jle
aas
js
mov
lahf
add
mov
ds
dec
cld
lea
sub
mov
sarb
dec
jo
sbb
ficomps
dec
in
jo
pop
lea
je
mov
add
add
int3
cmp
lcall
aad
inc
sub
xor
dec
loopne
into
sbb
inc
push
cmpb
sbb
and
rolb
lock
cmp
mov
rorb
add
push
add
or
mov
mov
ret
and
inc
push
out
sbbl
inc
sbb
push
or
subb
shlb
mov
sbbl
xorb
cmpsb
push
lahf
or
push
inc
mov
inc
leave
and
add
adc
orb
es
icebp
xlat
adc
sub
pop
add
mov
xorl
dec
hlt
jno
cmpsl
xchg
jmp
pop
out
mov
test
cmp
sub
xchg
pop
dec
les
mov
xor
in
adc
mov
cmp
add
ret
je
inc
je
adc
push
aas
push
push
push
std
mov
push
and
xor
cmp
test
jne
push
shll
push
xchg
jmp
shll
push
push
sti
inc
mov
add
mov
inc
fmull
push
mov
test
sahf
and
or
outsb
jecxz
xchg
mov
push
jmp
mov
fistpl
je
clc
xor
xchg
inc
add
jns
js
icebp
push
ja
sete
mov
daa
push
and
mov
dec
or
and
adc
daa
in
dec
pushf
add
subl
push
jns
add
push
mov
add
sub
push
xor
sbb
mov
jne
mov
test
ret
pushl
dec
pop
inc
sub
je
or
clc
orl
push
repnz
inc
jg
pop
pop
xchg
addb
push
test
cmc
push
or
inc
mov
dec
jnp
jb,pn
mov
cmp
lock
sub
test
int3
add
mov
push
inc
xor
inc
cmp
mull
test
add
lea
out
dec
loope
xor
fwait
ss
and
out
and
out
sbb
lds
lahf
pop
or
jb
rorl
dec
inc
jl
lds
pop
pop
mov
xchg
out
lock
push
mov
adc
sbb
loopne,pn
sub
mov
rorl
popl
sbb
mov
xchg
imul
setge
sub
cmpsl
shlb
sub
sub
cmp
movsl
stc
and
add
inc
out
push
jns
or
xor
cmc
fcoms
pop
vmaskmovpd
fcomps
inc
andl
xchg
and
and
and
cmp
mov
pop
iret
cmp
lahf
mov
das
add
jg
and
test
xor
daa
test
sbb
or
jno
jno
adc
adc
sub
adc
inc
mov
xchg
add
je
mov
push
jle,pt
sbbl
adc
inc
push
sahf
or
shlb
xchg
pop
cmp
insb
aam
dec
aaa
inc
adc
pop
push
and
add
adc
cmp
add
inc
stos
xchg
fs
call
loopne
cltd
or
popf
stos
xor
cwtl
fstpl
add
pop
or
loope
jns
lea
cmpsb
xor
mov
add
movsl
jo
inc
push
push
enter
icebp
mov
test
xor
jo
dec
lahf
jb
push
leave
xchg
adc
xorl
add
sahf
arpl
or
adc
push
inc
andl
ficoml
adc
inc
mov
loop
or
add
sbb
notl
xchg
stos
dec
or
sbb
and
fistpll
testb
fcompl
add
lret
loop
loope
add
rorl
mov
xor
mov
mov
out
movzwl
or
ret
xor
insb
sub
mov
xchg
fldl2e
add
jmp
inc
pop
dec
mov
pop
inc
rcll
ret
loopne
add
or
jg
pop
cmpsb
mov
xor
mov
ret
xchg
insb
add
nop
inc
repnz
add
push
dec
push
jg
dec
out
mov
mov
imul
hlt
cmp
jne
sbb
inc
jl
cmp
les
into
ja
pushf
push
aas
mov
push
push
push
ret
imul
fiaddl
rcrl
leave
divb
testl
subb
test
adc
xchg
sub
pop
pop
leave
cwtl
sbb
jae
sub
mov
cmp
jmp
outsb
add
or
lea
jge
push
push
add
fisttps
imul
adc
pop
int3
push
add
dec
push
mov
or
fidivrs
mov
iret
jno
pushl
mov
or
add
mov
sub
hlt
popf
and
sbb
sbb
setb
pusha
clc
mov
pop
sub
xchg
out
inc
add
xor
cmp
dec
and
or
sbb
inc
imul
jb
lods
lea
or
jp
or
mov
cld
dec
lea
sub
je
or
jp
mov
out
cwtl
lea
and
decb
mov
icebp
xor
gs
add
sub
sarb
dec
sub
push
mov
idiv
push
xorb
lret
lret
add
cmp
push
rolb
ljmp
mov
dec
hlt
jge
add
or
cmp
sbbb
fildl
inc
inc
xchg
and
sbb
lds
cltd
push
mov
outsl
pop
aas
jno
enter
pop
xlat
sub
push
es
xchg
or
ret
add
push
sahf
jl
sub
inc
mov
push
jg
push
add
push
out
jne
icebp
add
push
ret
enter
push
lods
in
bound
cld
sub
loopne
add
add
mov
inc
nop
or
shrb
jo
mov
or
mov
push
test
test
or
fs
leave
push
stc
inc
xor
pop
add
mov
adc
or
mov
xlat
push
fadds
repnz
hlt
xchg
push
push
pop
and
hlt
push
adc
and
dec
or
ret
jg
sbb
and
mov
sbb
adc
and
cmp
andb
shll
xchg
stos
jae
adc
imul
adcl
jge
jnp
inc
insl
inc
jle
js
pop
jg
mov
ret
aas
cmp
movb
cwtl
js
adcb
orb
jp
int3
sub
xchg
lahf
aas
cmp
or
stc
mov
test
jg
adc
and
scas
cmpsl
leave
add
cmp
push
or
pusha
popf
pop
scas
adc
test
insl
jne
and
es
cmp
sbb
inc
inc
daa
sbb
test
mov
decl
mov
movsl
jl
mov
add
lea
cmp
jle
lock
mov
inc
imulb
lock
mov
add
ss
sahf
pop
pop
mov
push
ljmp
popf
or
fdiv
add
mov
pop
sahf
cmpsl
push
lea
jp
fwait
adc
orl
inc
int
or
dec
push
push
dec
addr16
outsb
push
outsl
stos
push
flds
fbld
test
push
add
sarl
pop
mov
or
repnz
hlt
xchg
or
mov
mov
sbb
push
cmp
ret
cmp
pop
pop
mov
jmp
jl
add
ret
pop
ret
fs
dec
or
loope
mov
jbe
shrb
decb
add
mov
and
xchg
jmp
sub
mov
pop
mov
push
and
aam
imulb
shr
rolb
or
je
pop
mov
shrl
mov
jbe
mov
jb
fbstp
addr16
push
cmpsb
xchg
and
jo
add
add
sub
insl
sbb
mov
pop
movl
rolb
aas
mov
adc
inc
or
inc
adc
sub
stos
pop
jl
adc
inc
shll
adc
mov
nop
sbb
push
dec
xor
and
mov
add
sub
push
push
test
push
or
push
pop
ret
loopne
in
pop
or
push
jecxz
js
push
cs
ret
or
shrb
add
sub
xchg
pop
sub
insb
dec
dec
jp
push
andl
xor
sub
sub
mov
lahf
das
stc
addl
dec
mov
xor
push
push
add
mov
flds
xchg
fiaddl
mov
xor
pushf
push
push
fwait
mov
data16
dec
test
push
aam
test
pop
xor
push
lds
add
out
inc
jmp
mov
jbe
sub
xchg
in
pop
sub
mov
add
iret
xor
mov
ret
leave
rorl
jns
xor
paddsw
ds
popa
sub
scas
loop
push
mov
mov
sbbb
push
sbb
xor
push
jne
mov
inc
add
lret
aas
sub
jmp
sub
jne
inc
or
push
push
fcoms
mov
push
mov
dec
or
sbb
xchg
clc
daa
test
lgs
in
popf
or
cmp
push
push
add
jp
inc
dec
jg
push
xchg
sbb
stos
or
push
mov
jno
add
sub
out
dec
cmp
lock
dec
add
push
xchg
sub
or
dec
xchg
incl
test
add
cmp
arpl
mov
pop
inc
rcrb
fwait
sub
xchg
sbb
and
adc
adc
pusha
repz
loope
push
cmp
pusha
and
int
in
mov
fs
or
addr16
push
adc
scas
sahf
xor
repz
shrl
mov
dec
mov
inc
andb
or
negb
test
mov
mov
js
shll
jl
mov
inc
pushf
aam
xchg
into
add
sbb
add
sbb
dec
and
inc
lcall
add
and
stos
add
mov
pop
cli
pusha
or
push
scas
shl
xchg
mov
arpl
or
xor
inc
shrb
inc
adc
js
shl
cltd
sbb
inc
sub
and
pop
pusha
xchg
call
add
xor
pop
es
scas
sub
sbb
mov
adc
cmp
mov
xchg
adc
xor
mov
cmpb
and
in
ret
adc
pop
add
dec
dec
roll
inc
pop
ljmp
pop
pop
jecxz
mov
add
outsl
or
lahf
sub
push
lock
sub
and
stc
pop
fcoml
stos
cmp
or
cmp
xchg
xor
int3
push
fdivrs
xor
mov
inc
stos
aas
mov
lods
insl
or
pop
mov
repz
xor
jge
ret
jne
pop
jle
pop
jne
ret
push
int3
mov
push
add
popf
test
sub
fwait
adc
xchg
jns
pusha
pop
lahf
ds
or
xor
dec
pop
call
cmp
aas
inc
sub
decb
gs
jae
add
jnp
lock
mov
sbb
push
test
icebp
add
shrl
mov
push
shlb
inc
adc
adc
and
push
fidivrs
sbb
cmp
loope
lods
mov
sub
push
dec
and
incl
test
and
les
xchg
stos
jg
loop
or
mov
lock
xor
scas
lret
push
xorl
in
pusha
mov
push
nop
repnz
movsb
and
add
push
dec
lret
inc
push
push
aam
in
pop
cmp
add
xor
cmpsl
inc
xchg
push
dec
and
add
sbb
sub
ret
inc
test
push
push
fistps
inc
xor
add
dec
jp
mov
add
shlb
or
das
daa
add
dec
pushf
arpl
adc
mov
or
or
jbe
mov
stc
and
mov
add
pop
dec
pop
lahf
lock
or
xchg
add
shrl
nop
jb
cltd
push
popa
xchg
inc
or
xlat
mov
sti
js
or
mov
test
stos
pushf
mov
out
aas
or
jns
ds
push
pop
sub
sbb
orb
sub
mov
das
mov
add
xchg
cmp
lock
or
dec
push
or
or
std
add
jnp
ret
test
ds
jbe
ficoms
fwait
xor
add
mov
xchg
push
or
outsl
push
pop
call
mov
add
mov
push
sub
movl
adc
mov
loopne
clc
mov
cmpsl
sub
ss
cmp
data16
jo
add
jae
scas
xor
xchg
and
or
adc
add
xor
and
outsb
dec
sub
orl
xchg
mov
cmp
filds
push
pop
push
test
pusha
inc
lods
push
push
xchg
push
push
mov
fldl
popf
lds
pusha
leave
xchg
mov
adc
sub
shlb
add
mov
mov
add
xor
push
repnz
add
add
mov
aad
push
xchg
pushf
ret
xchg
mov
cwtl
and
jle
jg
imul
or
jl
inc
push
push
out
add
cmpsb
push
push
mov
mov
mov
mov
stos
or
and
jmp
cld
xor
dec
aam
inc
or
flds
sub
dec
mov
adc
into
mov
adc
fdivrs
push
orl
push
add
in
jg
lea
push
push
inc
sub
dec
adcb
outsb
pop
imul
cmpsl
jbe
scas
lcall
loop
in
jmp
sti
sub
imul
add
in
add
mov
add
fbld
cld
mov
sub
or
jge
lret
xlat
push
dec
jo
or
push
lcall
das
cmp
sahf
or
loopne
lahf
push
push
and
aas
jmp
inc
sub
sub
lea
add
pop
push
push
push
push
loopne
ret
lods
push
push
push
push
and
and
aam
sub
add
add
push
movb
mov
nop
ret
xor
fsubr
lds
js
ret
jb
inc
data16
or
mov
js
jg
pop
ret
data16
add
pop
add
or
push
push
imul
inc
add
or
ret
mov
dec
insb
enter
mov
aam
push
rorl
ret
add
sub
je
test
rol
sbb
inc
mov
ret
add
inc
jo
js
mov
or
pop
rol
shlb
pop
xchg
hlt
ljmp
std
insb
add
jb
adc
and
out
push
or
ja
gs
sub
push
popa
test
or
idivb
inc
adc
jae
sahf
xchg
mov
pop
xor
stos
or
sbb
pop
dec
add
aas
les
and
push
xchg
ret
add
cmp
push
sbb
jp
sahf
add
jle
dec
add
mov
or
push
adc
xor
lock
clc
fistpl
xor
pop
mov
clc
push
push
ds
sub
adc
pop
adc
pop
test
add
sarl
push
xchg
inc
lds
sbb
push
push
pop
dec
mov
mov
jge
or
mov
mov
pop
das
arpl
or
mov
add
sbb
nop
adc
sbb
decb
mov
dec
add
shll
mov
sbbl
dec
pop
or
out
cltd
sbb
inc
push
xor
cld
inc
or
pop
push
call
push
daa
outsb
jne
not
popf
push
ret
mov
or
pusha
ljmp
push
push
mov
sbb
pop
and
int
pop
sub
ret
add
cld
xor
iret
repz
xor
cmp
add
mov
enter
mov
push
and
push
jnp
ja
inc
dec
jmp
xor
outsl
add
push
push
mov
pop
xor
sub
xchg
pop
or
and
mov
or
rclb
ret
and
jg
addr16
shlb
call
add
jnp
mov
lock
push
call
xor
push
les
mov
cmp
pop
push
lahf
adc
ret
out
lods
sub
sar
and
test
sbb
fimull
pop
lahf
shrl
mov
dec
shll
adc
movsb
fwait
incb
push
push
mov
daa
scas
or
inc
clc
xor
push
aam
xchg
pop
mov
movl
dec
lock
icebp
pusha
in
clc
in
pop
add
sarb
push
ret
inc
dec
push
push
mov
pusha
xchg
test
dec
lock
dec
inc
sbb
mov
out
dec
dec
lock
dec
movlps
scas
or
cltd
cmp
or
pushf
inc
scas
fisubrs
addr16
fnstenv
je
inc
jnp
add
clc
or
jnp
jae
mov
and
push
cwtl
and
cmc
outsl
inc
adc
fcompl
inc
fcoms
push
mov
or
outsb
or
cmp
and
lret
mov
call
loope
fnstcw
mov
push
mov
sbb
xchg
dec
cmp
and
movl
sbb
pushf
ret
js
sti
mov
movsb
cmp
ret
dec
imul
rorl
cld
roll
push
cmp
jne
mov
call
adc
jns
lea
jne
push
push
push
adc
loope
push
dec
sbb
pop
cmpsb
mov
mov
push
sti
clc
sub
pop
stos
xchg
lfs
loopne
mov
lea
inc
mov
cli
pop
je,pn
jo
js
mov
xchg
test
movl
jae,pn
mov
or
mov
fwait
pop
aas
inc
jl
ljmp
sbb
js
mov
cmpsb
pop
push
dec
loope
adc
imul
and
jg
add
dec
pop
subl
push
mov
or
or
sahf
inc
add
mov
mov
loop
or
lcall
mov
pop
fcomps
clc
cli
and
or
mov
or
sub
lods
mov
add
out
icebp
inc
cmp
outsl
xor
xor
fst
fidivs
mov
in
pushf
pop
cmp
fs
je
mov
movl
add
daa
inc
inc
ljmp
sbb
adcl
hlt
shll
lret
sub
jp
lea
ret
sbb
cmp
ja
push
test
jg
and
cmp
mov
test
test
jg
push
pop
mov
clc
outsl
out
sbb
push
inc
sbb
daa
mov
xor
dec
jo
sbb
bound
pop
dec
loop
or
xchg
jp
cs
ja
add
add
inc
push
pop
and
js
jmp
sub
inc
cmp
push
mov
jo
movsl
jne
mov
cmpsl
add
push
sub
push
subb
push
push
mov
pushf
adc
push
add
cmpsl
or
cmp
pop
cmc
and
nop
push
hlt
mov
xchg
lcall
lods
push
loope
inc
pop
and
mov
dec
dec
jmp
nop
std
push
in
imul
stc
push
and
push
push
jl
ret
and
std
jne
jp
mov
xchg
mov
sti
leave
repz
inc
xchg
dec
add
xchg
cmp
add
push
movsb
stos
sub
iret
or
adc
mov
cli
nop
int
fisttpl
dec
push
lds
dec
mov
sub
out
and
dec
loop
test
cmp
popa
aas
lea
sarb
mov
inc
mov
sbb
xchg
inc
jl
sbb
add
ljmp
test
mov
push
bound
aad
iret
pop
cli
mov
push
push
mov
add
fldl
and
xchg
pusha
push
movsb
pop
dec
add
scas
mov
sbb
pop
jmp
or
jge
ss
and
sbbl
mov
outsb
imul
stos
inc
push
mov
push
inc
je
imul
mov
add
push
jo
and
cmp
add
pop
adc
push
pop
inc
xchg
sub
jmp
add
in
cmpl
roll
inc
push
movsl
mov
push
push
pop
or
push
enter
sub
push
mov
mov
mov
sbb
fs
repz
popf
dec
mov
rorl
jmp
sub
int3
jp
add
sbb
out
jno
pop
or
sub
sbb
push
pop
xchg
fdivl
fiaddl
cmp
fildl
push
clc
xor
lock
push
pop
cwtl
xor
or
mov
push
insl
xor
mov
shll
adc
and
shlb
adc
jne
push
cmpsl
xor
sub
push
loopne
pusha
inc
insl
inc
movsb
push
stc
and
std
iret
loopne
or
sub
jle
clc
push
insl
or
push
xorl
aam
add
ja
lret
dec
arpl
sub
into
adc
movsl
adc
adc
cmpl
call
sahf
loopne
insb
pop
inc
push
or
add
addb
add
out
gs
je
dec
clc
add
ds
pop
popa
inc
jbe
sbb
adc
hlt
shrb
rcrb
jne
outsl
js
daa
repnz
jmp
and
or
or
sahf
dec
push
mov
push
cmc
lret
adc
jmp
push
addr16
lock
dec
pop
mull
fmuls
cltd
in
inc
sbb
ret
cmpsb
xchg
les
mov
inc
cmp
inc
sub
mov
aaa
pusha
and
dec
cmp
or
mov
inc
push
test
rcll
dec
push
jmp
stos
ljmp
repz
mov
and
and
dec
arpl
mov
sti
inc
lret
and
xor
jmp
sarb
dec
out
or
test
les
mov
cmp
jbe
aad
add
jmp
and
pop
lahf
cmp
fs
outsb
test
lahf
ds
hlt
xor
inc
mov
sbb
sub
lea
jns
adcb
pop
mov
dec
cltd
mov
in
or
push
pop
divl
mov
call
pop
mov
push
xor
insb
cmpb
stos
std
or
mov
pop
test
xor
or
add
je
mov
mov
xor
mov
mov
cmp
jp
clc
lea
popf
inc
mov
dec
adc
mov
and
jo
xor
lods
rorl
inc
push
mov
jbe
ds
jp,pn
enter
and
popa
push
xchg
jl
and
push
or
cmp
xchg
mov
aad
outsl
xor
push
enter
aad
push
xor
mov
icebp
ficoml
sbbl
dec
and
andl
bound
fbld
mov
nop
stos
or
add
inc
fs
dec
je
sbb
push
sbb
sub
xor
sub
sub
push
and
hlt
pop
es
shlb
adc
xor
dec
in
push
jmp
nop
vmwrite
push
push
add
in
jge
sub
mov
shrb
mov
add
sub
mov
mov
and
pop
xor
ret
push
scas
lea
aas
push
xchg
in
xchg
mov
cmp
ljmp
pop
dec
push
mov
sub
pusha
ss
int3
xor
mull
add
mov
mov
lods
lea
push
mov
jg
insb
push
and
sbb
enter
das
mov
outsl
push
jl
inc
dec
lcall
testb
sbbl
or
xor
scas
inc
cmp
mov
pusha
lock
repnz
mov
add
jge
sbb
scas
lret
leave
clc
dec
xor
aas
push
push
pop
pop
adc
sub
aaa
and
adc
add
fcoms
push
cmc
add
adc
cltd
adcl
js
outsl
and
sbb
das
bound
dec
pushf
sbb
jecxz
pop
and
repz
sub
sbb
xchg
mov
bound
test
add
mov
mov
add
pop
cmp
sub
sub
lods
xor
addr16
iret
js
rorb
inc
sahf
push
mov
shr
xor
add
and
imul
in
mov
loop
mov
rolb
jo
pop
adc
sarb
push
sbb
xchg
jl
incb
or
cmpsl
pusha
addl
add
inc
add
inc
dec
mov
sub
les
scas
mov
mov
into
hlt
xor
jbe
mov
sbb
loop
push
shlb
dec
add
aaa
fsub
cmpb
mov
call
iret
mov
push
fwait
aaa
inc
fs
or
outsb
inc
jl
pop
push
or
mov
inc
lea
movsb
push
movsl
hlt
shll
pushf
enter
cmp
jno
and
push
dec
push
inc
jmp
inc
inc
ret
adc
dec
push
or
leave
orb
pop
flds
cmpsl
stc
mov
clc
rolb
mov
and
ss
dec
sub
and
arpl
cs
push
xor
int
jmp
push
push
test
arpl
inc
add
movsl
add
imul
adc
xchg
fs
lock
or
mov
sbb
pop
pusha
scas
xor
push
jle
jbe
movsl
xor
inc
movsb
add
xchg
push
push
lock
sub
sbb
in
or
sbb
push
call
popa
and
mov
xchg
xor
call
pop
pop
add
pop
sub
js
cmp
movsl
jge
std
test
push
ret
arpl
test
or
jmp
sub
push
push
frstor
push
bt
sub
xchg
jge
test
adc
lds
jne
cmp
inc
add
insb
sub
or
arpl
sbb
xchg
in
repnz
rcr
xchg
or
sub
push
leave
data16
push
adc
sbbb
and
hlt
xchg
jle
fs
in
sbb
in
pusha
int
adc
pusha
sbb
int
push
pop
or
jecxz
pop
inc
arpl
pusha
cltd
lret
push
adc
push
lea
in
pushf
mov
xor
in
orl
dec
pop
add
mov
outsl
mov
cmpsl
or
inc
lods
xchg
stos
dec
lahf
push
sbb
call
inc
or
and
sahf
popa
adc
mov
xor
aam
xchg
and
hlt
lock
cmp
outsb
les
shr
add
inc
sbb
jo
or
mov
fs
push
xor
pop
dec
inc
cmp
aam
sub
jg
mov
loopne
and
add
mov
jmp
popa
mov
orl
hlt
and
push
call
or
push
lea
sbb
xor
cmp
pop
cld
cmpl
push
push
in
and
xor
rorb
popa
pushf
stc
je
mov
aaa
pop
xlat
pop
in
push
fucomi
das
lea
mov
popa
sbb
mov
insl
jb
call
cmp
push
rorb
ret
lock
je
mov
addl
cli
popf
inc
and
sbb
repnz
popa
pop
mov
mov
or
mov
mov
push
sub
or
sub
dec
push
dec
call
or
mov
popf
adcb
jl
xchg
inc
in
adc
sub
sbb
popa
fmuls
cmp
xlat
sub
jb
popa
and
out
mov
loop
movsb
or
push
push
jle
add
push
aam
aam
data16
daa
fdivp
jb
test
and
adc
out
sbb
sbb
or
mov
inc
das
adc
push
fisubs
gs
pop
movsl
adc
repz
movsb
aad
aad
movsl
and
adc
test
aad
sub
stos
test
mov
mov
popa
push
es
xor
sarl
adc
je
inc
cmp
icebp
push
es
sub
adc
inc
test
adc
jo
jg
jle
adc
mov
mov
sbb
addr16
mov
xor
inc
xor
aas
cmp
xchg
and
cmp
inc
push
sbb
dec
js
loop
test
ds
lea
mov
inc
xchg
pop
mov
test
clc
mov
xor
divl
rcll
ret
shr
adc
push
push
adc
jge
push
push
push
or
enter
mov
sbb
xlat
xor
inc
xchg
leave
sahf
add
xor
or
sub
cmp
sbb
add
cltd
pusha
add
mov
pop
je
sub
cmp
xchg
sbb
pop
les
ds
fs
jae
loopne
push
lahf
es
in
dec
into
test
mov
and
mov
mov
adc
dec
dec
imul
xlat
sub
fldenv
add
cwtl
aas
shufps
pop
cli
sbb
loopne
out
outsb
sub
ljmp
push
sbb
dec
pop
cmc
stos
sahf
and
inc
inc
dec
test
sub
inc
mov
fidivs
pusha
push
xchg
inc
pop
loope
lock
adc
jg
push
push
push
cmp
imul
adc
nop
xchg
or
push
sub
xor
ds
mov
mov
inc
pushf
cmp
or
adc
mov
push
and
jnp
jno
push
adc
or
sbb
pop
jmp
cmp
jne
push
jl
push
pop
adc
orl
push
jmp
test
lods
int3
daa
dec
inc
or
add
std
sbb
cmp
decb
push
pop
xchg
std
inc
fbld
inc
je
mov
movl
inc
sub
mov
ffreep
rorl
or
addb
test
xchg
repnz
push
test
cmp
mov
cmp
je
clc
adc
movb
cmpsl
pop
popa
pop
movsl
pop
push
sub
data16
call
fsubl
hlt
mov
mov
mov
loop
fs
loopne
jp
mov
sub
xor
mov
sub
adc
xor
pop
jl
shrl
xlat
pop
popa
mov
jnp
mov
dec
add
js
xchg
and
fiaddl
shlb
sub
add
or
nop
data16
push
sbb
cs
pop
fs
push
call
in
shlb
sub
gs
push
mov
ficoms
jg
or
lea
push
lea
push
inc
push
xor
popa
rorl
lods
popa
imul
lahf
add
xchg
adc
jnp
push
cltd
pop
and
sub
and
cmp
and
stos
cmp
add
sub
inc
jl
adc
cmp
or
mov
pop
mov
cltd
shlb
jge
inc
or
adc
sub
add
and
ljmp
out
lods
shlb
mov
hlt
jbe
and
testl
and
or
sbb
or
or
and
and
mov
xchg
scas
sub
or
inc
dec
jns
cmp
xchg
sub
stos
jbe
bound
fs
inc
iret
push
addr16
sbb
nop
cmp
pop
sbb
lea
mov
inc
dec
hlt
jg
xor
push
jg
cmpb
jne
ret
inc
inc
inc
xor
imul
mov
push
fcmovnb
pushf
test
push
sbb
sub
aas
iret
adc
or
xor
fucomip
push
pusha
sub
dec
pop
repnz
jg
inc
push
inc
sub
call
jmp
cmp
xor
sbb
xor
push
mov
mov
xor
std
lock
subl
into
ss
or
ljmp
mov
push
fcmovbe
xor
add
lds
push
test
inc
or
add
pop
push
xchg
cmpsl
add
sub
popa
xor
add
dec
cmp
and
aas
fistps
mov
jge
pushf
xchg
fidivrl
mov
push
lea
cwtl
sti
mov
push
movsl
mov
pop
fcoms
push
jecxz
lods
jg
xor
mov
lods
test
lods
lods
mov
ret
jmp
push
adc
pop
lock
jae
ret
push
push
outsl
lret
or
add
ror
aad
push
jne
imul
xchg
lret
sbb
or
add
pop
push
cmp
xor
lret
sub
push
xchg
out
pop
cwtl
dec
movsl
mov
pop
test
and
push
std
dec
jne
push
repz
nop
aas
pop
inc
push
pop
and
xchg
sub
push
sarb
sbb
lods
jmp
lahf
call
and
or
sub
push
mov
mov
in
dec
push
sub
sub
adc
sub
adc
xchg
loopne
clc
bound
pusha
shrl
loope
mov
mov
dec
scas
mov
xor
push
fisttpl
data16
xor
inc
add
cltd
push
mov
dec
xchg
push
pop
mov
push
pop
xchg
mov
or
adc
sbb
xchg
push
xchg
adc
push
call
imul
sub
inc
iret
cmp
jne
subl
les
adc
adc
dec
cmp
jmp
adc
jp
cli
ret
or
repz
outsb
dec
mov
push
jmp
std
or
movsb
je
int
je
hlt
pop
inc
add
jb
repz
gs
adc
out
xor
mov
lcall
inc
inc
arpl
loopne
sbb
ss
mov
dec
lea
mov
inc
and
push
adc
push
sbb
sbb
xchg
cmp
and
arpl
and
andl
hlt
or
cs
orl
pop
jno
xchg
ja
cmp
inc
mov
dec
inc
daa
cmp
imul
test
es
mov
mov
ret
aad
or
cltd
and
fsubr
pop
mov
push
push
je
lea
jmp
pusha
icebp
int3
sub
loop
pop
data16
jo
xchg
ja
push
push
sbb
and
in
gs
dec
add
mov
imul
jns
imul
test
xorl
push
mov
repnz
and
sub
adc
loop
jno
push
and
and
mov
add
dec
stc
cmc
mov
sbb
cmp
daa
push
popa
jno
add
mov
inc
bound
mov
inc
adc
mov
dec
and
inc
adc
dec
arpl
lock
mov
stos
subl
and
repnz
sub
hlt
pusha
add
in
jl
fs
les
inc
lahf
and
pop
and
dec
es
dec
into
sbb
sbb
jmp
cmc
and
test
repnz
loopne
loop
mov
addl
fisttps
test
push
dec
xchg
or
inc
mov
push
push
inc
pop
loopne
inc
sub
push
push
aaa
sahf
push
cmp
and
sbb
sarl
mov
mov
sbb
add
inc
insl
mov
ja
ss
fcompl
dec
lret
cmp
dec
add
test
add
ficompl
push
in
mov
and
mov
test
ss
xchg
and
mov
movsl
std
add
jne
ss
add
mov
adc
inc
jle
jb
xor
dec
int3
pop
inc
push
aaa
and
and
or
add
fwait
stos
fiadds
add
adc
cltd
fstpl
add
jae
push
outsb
sbb
in
fs
jmp
test
pusha
or
clc
rcr
movsb
sti
in
rcrb
ja
dec
or
xor
int
dec
pop
add
fldt
xchg
scas
or
and
pop
sub
stos
mov
in
sbb
sub
jg
add
js
dec
repnz
xor
jle
imul
orl
adc
jnp
mov
add
mov
sub
sbb
jmp
fmuls
leave
rol
xchg
adc
and
cmp
xchg
lock
push
enter
mov
lods
xchg
sbb
inc
pop
cmc
push
call
test
push
mov
xchg
push
lods
adc
inc
lock
push
je
or
or
jl
aad
cmp
mov
dec
scas
stos
aam
outsb
hlt
mov
bound
jmp
jmp
push
fcoms
xchg
and
mov
dec
xlat
jge
lods
sbb
sub
jo
sahf
inc
loopne
xor
cwtl
sbb
bound
and
mov
and
aam
and
cmp
adc
add
outsl
push
daa
pop
jmp
inc
sbb
ret
push
inc
int3
cmp
or
or
enter
imul
nop
popa
adc
sbb
mov
mov
imul
cmp
cmp
adc
dec
dec
pusha
mov
lods
in
and
and
push
icebp
and
rclb
inc
cli
mov
cld
imul
fs
cmpsl
cmpsl
or
sbb
add
jne
xor
cltd
and
inc
dec
cmpsb
jns
aas
in
add
jl
adc
xor
jp
mov
lret
or
inc
or
outsb
jno
cs
repnz
cmp
adc
and
aad
or
sbb
push
lcall
cwtl
pop
dec
cs
in
mov
mov
inc
cmp
incb
dec
push
push
test
test
addl
pop
clc
mov
adc
pop
mov
xchg
add
fbstp
lea
cmp
jne
cmp
aaa
add
lea
cmp
xchg
mov
mov
jmp
xor
mov
inc
add
or
fldt
push
push
or
in
cmp
sbb
sbb
push
fwait
adcb
ficomps
and
mov
repnz
push
mov
gs
xor
movsl
cmpl
sarb
mov
push
jle
and
add
sbb
sub
mov
hlt
jmp
jge
outsb
sbb
add
repz
imul
shrb
mov
pop
mov
pop
lcall
sbb
sbb
sbb
lods
and
or
clc
fsubp
test
xchg
lea
rolb
xor
jae
mov
outsb
cltd
mov
inc
add
sub
push
out
shll
test
sub
cmpsl
in
push
cmc
test
cli
js
das
push
sbb
das
push
mov
cmp
inc
mov
je
jmp
jge
sub
cmc
mov
fsub
and
sti
cmp
mov
je
mov
cmp
mov
jle
inc
test
mov
subb
mov
cmp
pushf
outsb
xchg
add
sbb
jns
stos
or
pop
shrb
cmpsb
xor
push
mov
sarb
dec
in
push
and
add
jl
mov
lcall
adc
or
pop
mov
movsb
dec
mov
mov
lcall
jecxz
sbb
loopne
mov
js
push
je
jns
mov
xor
stos
add
inc
scas
mov
cmp
test
xor
mov
push
negl
andl
test
sub
mov
or
jnp
and
leave
out
sbb
inc
add
mov
nop
fs
mov
push
push
cmpsb
add
cmp
xor
imul
mov
mov
mov
or
sbb
adc
es
push
inc
push
sbb
sub
sbb
inc
cmp
cltd
movsb
push
mov
sub
enter
xchg
and
push
push
push
or
jmp
cmp
ret
push
push
cli
mov
or
aaa
push
mov
shrb
hlt
xor
push
mov
adc
and
add
bound
and
daa
mov
fadds
mov
fsubr
xor
adc
adc
shrb
mov
cmp
and
leave
adc
sub
or
and
xor
push
dec
dec
adc
sbb
pop
mov
push
xchg
add
jns
xchg
jns
add
mov
mov
addl
sub
js
or
xchg
and
inc
pusha
lds
call
mov
popa
jecxz
cmp
jne
or
ss
cli
stc
jb
sbb
add
cmp
jae
xchg
xor
into
mov
jmp
xor
mov
cmp
sub
or
push
push
or
sbb
push
inc
in
pop
xor
adc
fistps
rorb
mov
in
cmp
cmp
inc
shlb
fstpt
outsb
add
das
call
pop
or
adc
pop
inc
add
cmp
jl
pop
outsb
cwtl
std
xor
mov
pop
mov
mov
mov
mov
jmp
push
lcall
lahf
or
movb
testl
add
xchg
xchg
pop
push
push
test
adc
lods
jo
inc
xor
mov
pop
sub
loope
adc
inc
popl
std
xchg
cld
mov
mov
xor
add
stos
add
loopne
movsb
sbb
pushf
and
sahf
xor
xor
dec
pop
repz
sbb
aam
mov
dec
dec
cmp
hlt
or
xor
cs
xor
jo
sub
sub
push
adc
cmp
push
scas
mov
mov
push
pusha
loope
inc
cmp
or
mov
into
js
mov
mov
inc
sbb
and
add
mov
sub
dec
inc
or
fwait
and
test
mov
scas
mov
cmp
hlt
inc
scas
ss
or
mov
or
push
mov
mov
mov
push
dec
or
mov
ss
test
pushf
pop
clc
pop
idivl
icebp
and
push
loopne
dec
push
add
pop
or
dec
or
or
add
adc
inc
loopne
mov
cmp
stos
sbb
andps
add
inc
push
adc
mov
cltd
or
sbb
pop
aas
xchg
cmp
addl
orb
daa
sbb
jo
xlat
movsb
sqrtps
xor
in
es
push
mov
pushf
xlat
jo
sub
mov
adc
jecxz
rcrl
sbb
or
sub
movl
repz
inc
jb
lea
je
xchg
jge
sub
cmovno
add
adc
adc
cmp
into
pusha
mov
adc
mov
mov
stos
inc
cmp
dec
xchg
fimuls
add
sbb
enter
mov
push
or
xchg
psrlq
mov
mov
push
lcall
adc
add
mov
add
pop
sbb
imul
push
cmp
push
jmp
call
cmpl
xchg
dec
push
add
sub
mov
xor
jecxz
movb
adc
lea
sub
test
mov
orl
leave
jnp
ret
je
inc
push
adc
dec
dec
adc
scas
xchg
out
adc
pop
lods
inc
add
mov
test
leave
adc
inc
sub
add
adc
sub
push
push
loop
mov
loopne
xlat
xorb
jmp
aaa
sbb
dec
fidivrs
mov
add
cmp
cmp
add
jb
push
leave
sub
jg
adc
add
sbb
mov
sub
adc
les
test
lahf
or
inc
jb
jge,pn
or
ret
pop
push
push
je
mov
mov
fidivrl
and
out
inc
sub
int3
xor
or
lret
sbb
add
push
push
nop
add
add
and
and
add
sub
dec
xor
xor
add
inc
cmp
push
push
nop
lret
inc
or
inc
push
test
pcmpgtb
mov
inc
add
push
adc
dec
xor
sbb
inc
int3
lea
mov
adc
daa
cmp
mov
or
bound
enter
nop
and
aam
mov
sbb
js
add
dec
mov
or
fsubl
dec
adc
fistpl
movl
sbb
lar
sahf
in
popa
mov
xor
and
push
leave
pop
cmp
add
inc
mov
push
bound
mov
push
ds
ret
sbb
sbb
dec
pushf
pop
jmp
mov
dec
lcall
stos
movsb
mov
mov
and
mov
xchg
and
call
ja
add
inc
or
insl
test
cmovbe
int
rorb
inc
int
rorb
inc
or
rorb
and
xor
push
and
add
or
sbb
adc
rorb
and
or
mov
inc
xchg
aas
sub
adc
addl
pop
jb
scas
cld
add
add
or
and
mov
mov
in
hlt
cmpsl
test
pop
faddl
push
mov
test
add
jne
cmpsl
or
xor
les
sbb
adc
ret
fisubl
pop
and
jne
orl
scas
jl
icebp
push
push
testb
mov
jne
fsubl
mov
lock
push
push
dec
lea
push
sub
cltd
dec
out
sbb
inc
jp
rol
cmp
sahf
add
cli
lahf
push
or
xlat
push
sar
add
movsl
mov
mov
adc
adc
push
push
push
cmpsl
add
xor
adc
in
jne
aam
sbb
fstl
and
and
in
sub
and
inc
inc
fsub
add
and
inc
dec
sbb
and
cwtl
sbb
and
popl
popf
add
arpl
jmp
jb
gs
mov
mov
pop
push
lds
sub
pop
movb
mov
xchg
mov
sbb
sbb
cltd
dec
inc
push
cmp
xor
std
sbb
mov
push
dec
dec
or
ret
jg
mov
cmp
jge
push
push
push
push
repz
push
sub
or
nop
leave
push
arpl
sbb
mov
clc
dec
hlt
and
xchg
inc
rolb
jmp
ja
push
cmp
push
mov
pop
cmp
jle
sub
or
sub
sbb
cmp
or
lock
inc
dec
popa
push
shrb
push
sbb
adc
and
sbb
sbb
in
and
sbb
push
addb
in
adc
add
and
sbb
mov
in
jmp
push
add
nop
stc
lahf
shr
inc
in
inc
push
setg
and
pop
xor
out
add
bound
arpl
lods
je
cmp
es
push
sar
lahf
test
add
mov
xor
mov
adc
mov
add
and
jl
je
add
mov
stos
adc
lret
push
xchg
lods
adc
lock
push
push
and
mov
sbb
adc
clc
add
ret
cmp
aas
inc
jl
adc
out
cmp
sar
pop
ret
xchg
push
push
push
nop
adc
and
lods
sbb
icebp
inc
or
push
movl
sbb
out
fcmove
fs
mov
cmp
jae
push
ljmp
xchg
push
xor
rolb
mov
mov
pop
jb
movq
scas
lcall
scas
inc
test
sahf
nop
mov
loop
inc
dec
jp
push
es
inc
fadds
mov
dec
in
xchg
fcoml
sbb
popa
mov
inc
mov
movsb
sbbb
mov
cmpb
push
cmp
hlt
nop
push
loopne
pop
inc
insl
in
lcall
dec
faddl
dec
in
push
inc
dec
push
adc
inc
in
js
jmp
mov
shr
and
mov
icebp
push
call
lea
add
ss
je
rolb
cltd
sbb
inc
sarb
movsl
xor
xor
dec
cltd
pop
insl
xchg
inc
add
and
cmpl
push
push
pop
sub
jo
mov
sub
or
jne
add
loope
mov
pop
mov
push
lea
popa
insl
out
adc
cmpb
lock
jne
push
ficompl
int3
movb
popa
mov
or
or
aaa
lea
das
hlt
lea
add
les
adc
jmp
lea
mov
dec
push
inc
pop
int
mov
xchg
lea
rcr
pop
loop
cmp
sub
push
adcl
dec
inc
xchg
mov
sub
daa
sar
sbb
jge
jae
push
and
sti
jmp
mov
and
sub
xchg
and
jb
js
fwait
call
cld
test
xor
pop
xor
add
push
es
inc
dec
and
lea
inc
sub
adc
push
cmpsl
or
mov
or
and
mov
sbb
add
xor
jo
jo
or
push
pushf
jo
sub
movsb
mov
in
fs
les
add
mov
rolb
dec
pop
mov
fiadds
cmpsl
sbb
or
mov
xor
mov
inc
or
out
jne
leave
sub
or
xchg
mov
insl
xlat
mov
add
fwait
inc
cmp
adc
test
add
pop
dec
cs
inc
and
and
dec
sbb
xchg
inc
push
cvttps2pi
cmp
inc
adc
dec
adc
inc
loope
adc
sub
mov
aam
xor
outsl
lret
push
test
test
call
imull
insl
jl
xchg
sub
jl
aaa
rolb
ja
test
cmp
in
xlat
rorb
mov
pusha
jle
xchg
jo
sbb
es
js
add
jb
add
cmp
daa
push
cld
jo
add
movsl
rorb
sbb
test
shrl
xchg
jo
aas
fs
cltd
test
outsl
adcb
mov
dec
js
pop
adc
push
std
add
add
cltd
imul
xchg
ds
pop
push
push
stc
repz
sbb
or
inc
jno
inc
pop
cmp
int
adc
add
xor
sub
std
dec
sbb
add
inc
jle
pushf
int
and
adc
pop
pop
sbb
xchg
dec
pusha
sbb
inc
cmp
xor
cmp
ljmp
lcall
icebp
xor
dec
lcall
subl
cmpsl
pop
fs
add
push
fcmovnb
sbb
push
jne
adc
ret
cmp
imul
cmp
lods
xchg
movsl
xlat
pop
pop
sbb
sbb
dec
xchg
jg
lret
sbb
movsl
cmp
push
movsb
repnz
pusha
jmp
es
xchg
lret
sbb
mov
pusha
enter
push
enter
dec
cmp
pusha
sti
add
mov
pop
ds
inc
mov
xchg
push
jns
stos
cmp
data16
and
cmpsb
cmp
cli
jmp
push
push
jnp
aaa
xor
pop
lea
test
fldenv
orl
loop
insb
push
add
dec
repz
insb
mov
and
cltd
jo
push
cmp
and
pusha
or
in
inc
in
mov
imul
sbb
adc
adc
push
std
mov
or
jecxz
fdivl
dec
adc
out
dec
pop
imul
pop
arpl
push
cs
loope
cwtl
test
dec
add
pop
imul
pop
or
dec
in
xor
cltd
sub
adc
mov
lahf
pop
movups
adc
sbb
notb
aam
and
clc
jl
mov
js
add
mov
add
pop
popf
in
dec
in
adc
inc
and
arpl
adc
shlb
loop
pop
or
js
dec
sub
mov
add
hlt
mov
or
inc
push
pop
pop
imul
push
add
and
add
push
push
imul
add
adc
pop
jns
sbb
stc
fistpll
test
les
es
add
arpl
jmp
sbb
stos
pop
dec
mov
enter
mov
push
dec
or
adc
or
mov
shll
mov
js
je
or
adc
jns
lds
clc
ljmp
es
add
ret
adc
xor
leave
enter
cmp
inc
fiadds
push
mov
cmp
sub
mul
push
cmp
lcall
sub
xchg
lea
je
or
addr16
adc
fidivrl
inc
push
imul
adc
or
sub
sbb
imul
adc
add
andl
lock
adc
mov
insb
inc
xchg
cmp
push
orl
aas
sub
shll
rorb
xor
dec
add
sbb
aam
out
mov
inc
inc
sub
jns
repnz
test
sbb
mov
fcmovnu
sub
lcall
push
jp
sub
lahf
fsts
jne
add
lea
jg
or
sbb
adc
sub
dec
dec
lock
hlt
or
jg
xchg
orb
adc
cmp
add
mov
jp
adc
pop
mov
aas
repnz
push
sbb
xor
pop
cmp
xor
adc
mov
cld
addr16
cltd
cmp
and
out
adc
mov
pop
loopne
pop
pop
sub
pop
xor
stos
iret
add
add
and
push
adc
sbb
push
adc
mov
pop
ja
cmp
sbb
cmc
pop
or
add
cld
push
outsb
punpckhbw
movsl
pop
fwait
dec
test
sbb
cwtl
test
push
andb
jo
and
adc
jns
nop
mov
ret
and
and
ljmp
or
sub
xchg
push
sbb
xchg
xchg
cmp
sbb
cld
frstor
jl
dec
push
imul
clc
sbb
sbb
inc
cmp
sub
or
scas
je
or
mov
test
movsl
dec
push
clc
les
cli
xchg
xchg
cmp
xlat
xchg
sbbl
push
and
fwait
mov
cmpsl
and
push
jp
mov
hlt
fdivrl
jmp
test
orb
nop
cmpsb
cld
ret
fdivrl
adcl
mov
mov
xorl
mov
add
or
or
adc
sub
mov
add
adc
enter
add
xchg
dec
int3
push
mov
xor
je
push
cmpsb
inc
arpl
incb
sarb
les
inc
pop
repnz
addl
movsb
jb
push
push
jne
sub
test
add
add
movsb
cmp
nop
sbb
mov
jae
add
gs
js
sub
das
rclb
pop
xor
pushf
fs
sbbl
inc
insb
sbb
adcb
shr
inc
xorl
mov
cmpsb
mov
sbb
push
and
sub
es
fiaddl
aaa
sbb
andl
mov
fdivrs
jo
add
stos
inc
cs
sub
push
js
mov
je
pushf
or
cmp
daa
inc
leave
xor
adc
je
pop
inc
je
arpl
mov
adc
ja
dec
jle
mov
and
sub
divl
ds
push
pop
jmp
sbb
lds
add
push
cltd
out
sbb
cmp
lret
jl
in
scas
les
mov
and
je
mov
mov
push
jl
mov
and
dec
add
inc
add
test
or
mov
andl
pop
imul
inc
lds
push
and
pop
push
and
cmpl
push
or
push
push
mov
movsb
adc
mov
cmp
mov
inc
jmp
sbb
pop
sub
sbb
mov
decl
adc
subl
xor
dec
adc
pop
es
pop
or
test
test
sbb
inc
mov
add
ret
sbbl
fimull
jne
mov
cli
mov
arpl
sub
mov
aaa
pop
sbb
shll
pop
rorb
sbb
das
add
cmp
aam
add
test
push
das
add
adc
push
push
mov
mov
add
gs
jno
jo
push
push
imul
jne
adc
and
jne
sbb
ret
enter
shll
push
add
mov
push
sbb
ret
inc
xor
aad
cwtl
xchg
or
mull
xchg
out
inc
cmpsl
mov
and
lcall
les
xchg
or
xchg
and
mov
arpl
inc
lock
das
inc
dec
jne
add
movb
enter
test
pop
adc
jb
or
xchg
cmpsl
or
dec
mov
jae
or
pop
shlb
pop
adc
cmpsl
pop
insl
ret
inc
add
ds
ds
arpl
pop
sub
jl
mov
xor
mov
xor
iret
arpl
cmp
dec
out
inc
mov
insb
scas
test
lods
js
test
jno
push
les
and
mov
jnp
sar
rcll
xor
xor
pop
mov
fldt
sub
stos
popa
sub
adc
dec
inc
ja
sti
push
in
aam
mov
sbb
adc
sub
push
popa
sbb
pop
popa
stos
push
push
pop
push
aam
sbb
dec
popf
adc
pop
mov
subb
loopew
repz
and
dec
push
pop
mov
cmp
inc
push
or
sbb
or
and
into
sbb
movzbl
imul
adc
pop
subb
sub
arpl
pop
lods
mov
pop
push
inc
inc
cmp
leave
fwait
mull
adc
cmp
xor
in
xor
aas
sub
jbe
or
cltd
fiaddl
fisttpl
push
cmpb
orl
in
push
push
loope
xchg
mov
clc
loope
push
jmp
push
xor
cmp
push
inc
pusha
loopne
gs
mov
inc
sub
mov
and
sarb
pop
push
arpl
inc
cmp
push
push
jle
fldt
add
icebp
das
idivb
test
outsl
xchg
into
xor
lock
xor
inc
lahf
push
add
bound
xor
add
sub
xchg
mov
ret
push
es
popa
inc
mov
sbb
sub
cmp
daa
sub
loopne
jne
cmp
je
pop
add
adc
pop
cli
cmp
xchg
movb
jmp
inc
pop
dec
fucom
lods
and
add
repz
pmaxub
xchg
mov
cs
ljmp
push
dec
xlat
jb
adc
cmp
test
xor
sbb
lods
mov
and
and
ret
cmp
jae
nop
les
mov
sbb
sub
fisubl
enter
icebp
lods
mov
movsl
push
or
insb
jg
shlb
sbb
push
cwtl
pop
jb
cmp
repnz
mov
sbb
shlb
push
loop
imul
mov
fwait
add
push
pop
les
sub
add
and
xor
stos
pop
subl
inc
add
dec
movsb
sarb
imul
xchg
ficoms
push
push
jnp
push
movsl
push
xor
inc
jne
sub
dec
xchg
test
adc
aam
sub
xor
dec
rclb
mov
lds
add
or
inc
sbb
inc
pop
adc
pop
xor
sub
and
cmp
adc
add
inc
push
push
xchg
push
lar
and
outsl
adc
dec
sub
sub
nop
fwait
pop
ret
leave
or
jne
push
lods
push
jbe
sbb
mov
push
outsl
mov
add
pusha
jle
popf
and
mov
xor
push
insl
fs
or
cs
xor
inc
mov
and
jmp
cmp
jnp
push
lock
mov
cmp
jne
sbb
sbb
leave
idivl
movsb
push
cmpsb
push
push
lret
inc
dec
enter
adc
and
xor
push
jmp
push
hlt
scas
jp
sub
add
aam
rorl
pop
test
jo
mov
lret
lods
mov
inc
insb
leave
push
call
jge
xchg
adc
mov
lea
fisttps
pop
push
fcoml
sbb
add
inc
lock
xor
jecxz
push
add
xchg
sbb
fnstsw
jl
mov
cmp
pop
sbb
xor
pop
jo
dec
jecxz
mov
mov
imul
pop
add
cmp
stos
mov
mov
mov
dec
xchg
xorl
lock
aam
js
pop
pop
call
xor
pop
jb
aaa
les
mov
push
test
pop
sbb
cli
adc
or
clc
xor
gs
push
je
xchg
sub
jmp
popl
pop
in
adc
push
cmp
push
cmpsb
sbb
aaa
rcll
or
outsb
sub
push
cmp
jae
push
push
jle
scas
cmp
aaa
imul
icebp
or
add
fldt
and
mov
test
js
xor
xchg
jne
pop
push
or
in
or
fnstenv
cmp
test
popf
mov
incl
aad
cmp
add
dec
pop
dec
dec
or
pop
inc
mov
stos
adc
aaa
cmp
xor
xchg
jp
or
push
addb
pop
sbb
inc
jge
and
data16
pop
pop
jnp
int
adc
test
inc
inc
sahf
xor
add
cmpsb
xchg
or
sub
and
enter
add
add
pop
jbe
mov
nop
mov
sub
movsl
aaa
push
rorb
add
ljmp
add
dec
ljmp
or
lahf
popf
stos
add
or
jle
sub
push
dec
jle
jge
mov
jge
movzbl
sbb
in
xor
inc
bound
ret
js
mov
or
xchg
mov
bound
sbb
bound
mov
push
sub
pop
aaa
jmp
pop
push
shr
test
xor
cmpsb
test
cmp
je
sub
jle
xor
int
loopne
pop
pop
iret
push
mov
mov
mov
push
aas
sub
leave
inc
ja
xchg
subb
in
mov
roll
mov
xorb
xor
pop
hlt
jle
push
in
xor
xchg
add
mov
lret
and
shr
mov
mov
add
or
dec
and
adc
push
push
or
jb
jp
jl
add
mov
sbb
repnz
add
pop
push
mov
popa
iret
std
cmp
add
push
push
mov
out
jecxz
loopne
sbbl
or
in
xchg
or
loopne
mov
jno
adc
dec
and
mov
sbb
sub
pop
or
mov
inc
lea
jno
add
jne
outsb
sub
pop
sub
adc
cmp
iret
and
dec
xchg
stos
imul
pop
xor
pop
lock
dec
je
pusha
xchg
pop
cmp
jo
mov
insl
sub
sub
add
jne
jg
push
dec
aas
push
incb
loopne
fdivs
sti
adc
adc
push
and
mov
or
sbb
mov
add
test
out
xchg
mov
mov
test
pop
jmp
or
inc
xchg
or
inc
push
cwtl
bound
ja
mov
pop
inc
dec
sub
test
push
push
push
cwtl
sub
jp
lods
adc
or
mov
ficoml
push
or
jl
sbb
js
aam
popa
test
dec
xor
jo
insb
dec
and
nop
cmp
pusha
or
push
inc
pop
add
int3
pop
dec
push
or
sbb
dec
sbb
inc
and
and
xor
inc
pop
les
mov
dec
rcrl
test
ret
loop
and
add
inc
adc
cmp
imul
pop
and
nop
mov
aaa
xor
pop
add
and
xor
sbbl
hlt
aas
movsb
or
jne
cmp
loopne
sub
je
jecxz
cmp
xchg
stos
or
add
leave
and
and
mov
lods
fs
stos
dec
test
or
and
mov
fwait
js
lahf
rclb
sub
xorb
inc
mov
adc
add
mov
mov
and
push
aaa
sub
es
push
decl
mov
lea
and
ljmp
jb
adc
add
loopne
sub
pop
or
mov
sbb
out
mov
mov
jl
sub
or
mov
add
inc
push
adc
mov
inc
mov
adc
add
push
mov
lea
xchg
push
sbbb
call
cmp
jle
jle
mov
xchg
or
adc
mov
sbb
or
add
fs
insb
lahf
push
adc
inc
fildll
pop
arpl
jns
cmpb
leave
adc
push
pextrw
jnp
nop
push
sahf
mov
notl
mov
ds
cs
ljmp
sti
aam
dec
popf
and
stos
push
mov
cmp
pop
fmulp
ret
or
dec
and
sarb
sti
dec
aas
xchg
out
das
dec
add
ret
adc
stos
pop
cmp
in
mov
cmp
inc
imul
sub
hlt
aam
xchg
cmp
aam
scas
dec
and
jae
cmpb
sub
or
pop
mov
jns
fnstenv
pop
test
repnz
pop
xlat
test
pmuludq
adcl
jecxz
mov
add
or
movsl
mov
sbb
xchg
addb
jo
rcrb
sbb
mov
cmove
add
scas
and
jmp
inc
shrb
sub
je
push
jne
lea
mov
rcll
testl
add
jo
inc
jge
cmpl
or
pop
mov
dec
dec
push
push
mov
pop
mov
insb
xorl
jp
js
mov
sub
sbb
ja
mov
loop
dec
mov
in
ljmp
mov
movsb
push
and
inc
les
mov
pop
jge
add
test
mov
push
pop
jmp
mov
clc
dec
xor
mov
sub
inc
and
pop
xor
pop
add
xor
setp
je
mov
test
xchg
and
mov
daa
push
mov
shlb
hlt
sub
dec
and
mov
xchg
leave
xor
add
addl
jb
sub
cmp
cmp
and
xchg
xchg
out
or
ret
xor
mov
das
xchg
es
cwtl
dec
push
add
stc
decl
inc
mov
sub
pushf
add
inc
mov
lock
inc
and
cmp
push
sub
push
les
or
mov
jecxz
dec
loope
sub
dec
pop
mov
sbb
ss
js
ret
sbb
pop
daa
and
xor
push
mov
mov
test
inc
mov
ficoms
sbb
popa
dec
add
jb
test
cli
cmp
sub
imul
and
shlb
jns
jmp
je
push
inc
xchg
or
pusha
iret
push
inc
xor
insb
es
or
shll
rcll
rcr
js
mov
push
sub
mov
or
jb
imul
cmpb
dec
cmp
lock
pop
das
neg
fnstsw
shll
mov
faddl
lock
fldt
inc
cmpsb
mov
adc
pusha
rcll
mov
pop
jl
lahf
mov
or
add
inc
xor
pop
cmp
pop
xchg
sbb
pop
enter
je
mov
add
repnz
mov
sub
int
fsubrl
mov
lret
adc
push
xchg
add
push
repnz
ret
sbb
addb
and
in
mov
mov
stos
bound
inc
xchg
cltd
and
cmp
and
xor
lcall
inc
cmpsb
xchg
sbbl
cmp
mov
dec
push
add
xlat
jo
orl
pop
movl
adcl
sbb
movsl
or
and
mov
pop
dec
inc
or
inc
inc
add
dec
jnp
or
popa
add
inc
shrl
jns
sub
pop
aam
add
pop
cmp
mov
sub
push
dec
sub
subb
cmp
mov
fs
inc
daa
dec
scas
and
cltd
inc
stos
and
jb
cmpl
mov
ds
xchg
cmp
adc
pop
lods
or
test
mov
repz
or
hlt
lods
inc
jle
xchg
mov
adc
lock
testb
sub
cmp
adc
push
lahf
mov
sub
jo
xor
subl
adc
or
xor
mov
cltd
sub
sub
ret
adc
sbb
repnz
push
push
push
add
movsb
sbb
nop
push
sub
push
and
and
sub
xchg
fwait
sub
add
add
pop
shrl
add
insb
mov
rdmsr
push
leave
shll
adc
mov
adc
xor
mov
push
xchg
nop
cmpsl
inc
gs
nop
cld
and
adc
lahf
movsl
fwait
outsb
pop
or
sbb
icebp
dec
jbe
in
cmpsl
lods
or
shl
xor
mov
call
outsb
add
movsl
lcall
aad
add
push
stc
add
insl
cltd
inc
jno
out
and
sbb
adc
and
push
mov
mov
std
mov
add
add
mov
dec
xor
test
xchg
icebp
mov
inc
xchg
lods
orb
add
sahf
and
pop
test
push
ret
cmp
popf
int3
test
pop
shll
adc
clc
sbb
push
add
js
iret
xor
lea
dec
sbb
inc
nop
adcb
movsl
jnp
mov
cmp
and
call
mov
sbb
mov
cmp
sub
pop
cmp
pop
pop
pop
jp
dec
jno
adc
in
mov
in
adc
int
stc
lds
subb
addr16
push
pop
roll
mov
jae
inc
sbb
add
add
mov
inc
sub
jg
adc
cmpsb
outsl
jecxz
movsl
popa
or
and
movsl
insl
mov
xchg
insl
or
inc
stc
inc
push
or
shr
jb
repnz
and
and
test
add
pop
iret
stos
inc
les
mov
sbb
mov
xchg
push
mov
or
inc
arpl
push
push
mov
sti
invd
or
push
popf
xlat
sub
call
clc
inc
in
outsb
js
insb
sub
push
in
mov
fsubrs
add
adc
pop
arpl
dec
sbb
and
lock
add
mov
and
in
push
add
test
mov
xchg
or
test
pushf
push
push
sahf
and
push
cltd
adcb
sbbb
adc
push
sbb
jns
add
push
add
dec
sub
add
adc
or
and
add
add
push
or
pop
cwtl
pop
push
xchg
sbb
nop
sbb
sbb
mov
jne
mov
pop
pop
and
and
in
hlt
aam
xchg
out
dec
je
pop
push
cmp
push
xchg
aad
loopne
xor
xchg
sbbb
adc
cmp
pop
lret
push
push
adc
fs
leave
enter
xchg
adc
imul
jne
inc
out
outsb
and
xor
loopne
sti
mov
mov
mov
mov
mov
and
enter
rcl
mov
inc
and
mov
inc
pusha
cld
pop
sbb
add
pushf
lea
dec
mulb
sbb
test
int3
push
sub
push
cmpb
insb
cs
sub
adc
jb
or
aaa
or
jns
adc
add
or
daa
pop
and
es
and
dec
push
dec
cltd
dec
inc
popa
add
rolb
and
stos
push
iret
pop
int
add
pop
cmp
movsl
stos
add
push
sbb
pop
xchg
fnstenv
add
inc
out
in
and
inc
mov
or
add
rolb
and
inc
cmpsl
xchg
fistpll
sub
imul
pop
loope
mov
push
inc
cwtl
dec
test
mov
mov
jne
es
shlb
xor
rcl
xor
or
sbb
fcomip
push
das
inc
push
sbb
add
mov
pop
add
or
mov
inc
xchg
pop
push
pop
push
add
add
popf
sbb
inc
mov
dec
jbe
add
dec
jl
hlt
xor
and
push
ss
add
cmpsb
xchg
and
nop
mov
ret
push
pop
dec
leave
nop
aam
pop
adc
shl
mov
testb
into
aam
je
dec
sub
aam
sbb
push
mov
and
or
inc
cmp
pop
test
add
test
or
push
xchg
xchg
fwait
dec
mov
gs
sbb
xor
aam
adc
xorl
xlat
xchg
pop
xchg
push
push
cmp
jmp
mov
add
adc
addb
cmp
daa
pop
push
or
inc
inc
mov
and
addr16
xor
dec
dec
adc
or
xchg
push
loopne
push
movsb
adc
daa
jbe
push
or
jns
or
lahf
or
push
push
es
icebp
pushf
hlt
push
push
mov
sub
mov
sub
push
adc
nop
ds
dec
enter
xchg
adcl
add
xchg
stos
repz
fidivl
pop
and
dec
jmp
dec
pop
and
or
or
or
sbb
mov
xor
cltd
pusha
daa
adc
mov
inc
jl
adc
out
mov
pop
mov
dec
adc
dec
pusha
imul
lods
dec
out
adc
mov
and
inc
or
repnz
jns
mov
in
inc
out
xchg
insb
cli
mov
rorb
aaa
sbb
int3
push
and
sbb
repz
arpl
sbb
fcom
sbb
xor
scas
fs
shrb
fs
rorl
jb
mov
pop
push
pusha
add
punpcklbw
sbbb
dec
and
push
and
mov
iret
add
jae
mov
adc
and
xor
repnz
and
add
aam
fmull
adc
enter
add
test
in
adc
pusha
mov
or
subl
sub
push
cmc
mov
sub
jmp
pop
xor
fs
jg
cmp
jb
fs
push
jbe
xchg
movsb
cwtl
movsb
cwtl
fs
xorb
dec
fsubrs
aam
or
je
add
lock
xor
sub
filds
jl
and
mov
jge
popl
inc
xor
cmpsb
rol
lea
repz
imul
or
or
jle
or
movsb
push
inc
pusha
or
jge
push
or
xor
adc
cmp
inc
add
mov
mov
push
dec
notb
xchg
sub
dec
dec
cmp
xor
dec
mov
std
ret
adc
adc
les
push
add
bnd
cmp
add
or
sbb
push
jmp
sbb
jb
cmp
add
test
pop
sub
cmp
sahf
jecxz
cmp
ret
orl
push
xchg
outsb
dec
cmp
mov
push
push
inc
mov
test
inc
inc
cmp
iret
fucomi
in
inc
clc
cmp
in
test
fisubrs
cmp
inc
fcomps
cmp
push
add
push
hlt
or
push
outsb
mov
inc
mov
sbb
adc
arpl
pop
popl
dec
sub
mov
cli
icebp
mov
xorb
push
push
jl
or
fwait
sub
jo
stos
push
js
add
scas
and
xchg
inc
and
add
cmpb
fadds
xor
repnz
iret
add
lods
inc
ret
adc
dec
aas
int
push
xchg
mov
orb
cmpb
sbb
mov
add
sub
lret
subb
loopne
imul
push
gs
mov
add
bound
fimull
or
xor
dec
dec
push
xchg
push
pusha
mov
lea
lods
clc
int
cltd
orl
xor
leave
xor
jnp
jb
movsb
jne
add
nop
dec
arpl
push
mov
ret
xchg
fistpll
or
jl
and
push
shlb
mov
mov
daa
pop
addb
lods
mov
dec
mull
and
cmp
jns
add
popa
gs
mov
jge
xchg
adc
adc
mov
xchg
mov
mov
ljmp
mov
push
mov
insb
sbb
add
adcl
mov
popf
test
pop
or
rcll
out
sub
push
imul
mov
inc
insb
je
cmp
fdivrp
adc
rorb
cmc
repnz
pusha
mov
mov
push
mov
pop
sbb
xchg
or
mov
cld
adc
shrl
pop
push
dec
rolb
shlb
and
add
pop
scas
cltd
add
sub
in
pusha
shrb
mov
push
dec
nop
pop
dec
sbb
mov
shrb
cmp
popf
fs
dec
push
push
push
sub
aas
adc
jmp
inc
cld
aas
jp
push
sbb
ret
pop
sub
imul
and
es
and
dec
test
cmp
dec
mov
inc
inc
dec
adc
cmp
shll
xor
dec
mov
out
ret
adc
and
mov
jns
inc
and
loopne
bound
dec
push
xchg
mov
jno
mov
adc
push
mov
sub
iret
mov
inc
pop
lods
jno
jns
les
mov
cld
sub
leave
leave
orl
sbb
or
dec
sarl
mov
inc
mov
add
sti
cmp
and
mov
and
and
sbb
push
test
pushf
sub
adc
push
lahf
cmp
push
cmp
sub
push
push
rcrb
enter
push
add
inc
or
insb
cmp
xchg
push
mov
or
lea
mov
push
inc
loopne
fsub
sub
cmpsb
sbb
xchg
ret
sbb
pop
in
nop
cmp
jb
fdivr
in
adc
iret
mov
cltd
cmp
add
push
push
pop
js
test
xchg
ss
and
pop
mov
aaa
add
scas
inc
xor
push
sbb
pop
cmp
push
lahf
arpl
push
rcrl
xchg
pop
inc
mov
pop
mov
sbb
or
jmp
aad
mov
cwtl
fimull
aam
adc
aaa
mov
pop
loope
or
lret
inc
pop
pushf
lahf
jle
sub
scas
inc
push
mov
imul
and
adc
or
sbb
cmp
sbb
mov
ja
mov
rorb
iret
shll
sub
and
mov
push
adc
and
cltd
push
mov
lock
xchg
scas
push
mov
and
pop
jo
or
scas
jecxz
mov
xor
outsb
cmp
pop
push
push
add
repz
xor
push
aas
and
cmp
stos
movsb
insl
push
push
dec
das
add
add
lcall
xchg
data16
dec
adc
iret
or
iret
push
cmp
dec
push
xor
repnz
and
and
jo
mov
xorl
loope
dec
mov
pop
pusha
mov
mov
out
clc
sbb
pop
bound
push
popa
insl
push
mov
cld
mov
jecxz
adc
xor
adc
push
dec
xor
pop
lods
sbb
mov
mov
pop
hlt
push
cmp
jae
in
xor
jb
andb
push
jmp
movsb
sbb
mov
mov
notl
cmp
stos
add
fidivrs
pop
inc
jne
mov
insb
sbb
mov
in
dec
jmp
mov
test
pop
xchg
adc
or
fs
cmp
sti
rcrl
cs
push
ja
int
or
int3
add
mov
sbb
cmp
sbb
adc
add
das
adcl
push
adc
dec
scas
cmp
jecxz
aam
inc
jo
push
sub
mov
aaa
lcall
xor
dec
pop
adc
insl
loopne
add
std
ret
insl
popf
call
xchg
adc
loope
gs
push
push
and
jne
push
das
mov
mov
xchg
mov
jecxz
shrl
adc
add
cmpsb
cs
push
pop
sub
add
and
mov
inc
mov
pushf
xchg
pop
stos
inc
lock
xor
push
popa
and
sbb
imul
or
cmp
sub
std
adc
or
bswap
inc
add
lea
outsb
and
xchg
bound
adc
shrb
inc
xor
notb
stos
dec
ret
sbb
bound
lea
in
push
pop
mov
cli
add
std
jb
push
and
dec
jns
adc
mov
or
mov
push
lods
popf
cmpsl
shll
xor
push
xor
fistps
aaa
pop
sub
pop
push
or
sbb
cmp
cltd
adc
and
data16
sub
test
inc
imull
inc
mov
and
lds
clc
adc
inc
inc
pusha
or
or
ret
in
pop
and
lea
pop
adc
das
xor
adc
xor
mov
push
mov
arpl
nop
dec
or
rcll
rcr
inc
adc
shrl
and
inc
fwait
mov
imul
cmpb
sub
mov
add
dec
lcall
push
dec
loope
jl
sub
and
jmp
in
adc
sbb
pop
dec
stos
movsb
shlb
in
or
and
push
push
mov
jno
rorb
jns
ret
adc
push
lods
pop
das
xchg
push
adc
or
test
sbb
aas
and
inc
adc
sbb
or
jb
xchg
sbb
imul
push
sbb
add
imul
out
adc
xchg
jnp
jae
mov
pop
rcr
xchg
pushf
call
mov
std
jl
add
dec
push
and
bound
push
pop
call
imul
xor
add
fsubrs
mov
ja
sub
jbe
mov
push
ret
jg
push
test
into
add
mov
jbe
sbb
add
ficomps
mov
fmull
inc
lahf
inc
cld
mov
push
outsb
insl
push
dec
sti
add
std
dec
sbb
jnp
and
sub
cmp
jb
insl
jns
mov
iret
aam
insb
lock
orb
rcrb
adc
insb
add
pop
out
pop
dec
addr16
sub
pushf
jae
sbb
push
mov
outsl
add
and
jne
movsl
add
xchg
push
adc
xchg
dec
and
int3
popa
inc
cmp
push
test
push
sub
sub
das
dec
jnp
mov
cld
jae
cmp
push
and
lret
adc
add
adc
pop
out
add
pop
push
pusha
flds
jo
rcr
mov
add
insb
fstps
sub
sbb
pop
add
adc
mov
lods
cltd
adc
adc
xor
fcmovu
pop
sbb
and
or
sub
dec
add
sub
in
cld
push
mov
mov
lahf
andl
adc
lods
iret
xor
mov
scas
adc
push
xor
cltd
and
adc
shlb
nop
lret
or
xchg
and
aam
filds
test
adcb
push
add
pop
mov
into
adc
lods
cmp
xlat
sub
imul
insb
mov
inc
jns
pop
push
or
add
ljmp
shlb
push
inc
scas
xchg
mov
pop
cs
shlb
gs
ret
in
add
lea
and
mov
push
fs
lds
sub
mov
pop
mov
icebp
mov
sbb
dec
orb
lret
mov
jbe
les
lock
mov
sub
add
popa
in
adc
and
ja
test
jle
cmp
lock
dec
dec
push
mov
daa
nop
imul
lea
addb
xor
and
mov
les
cli
in
sbb
es
jle
dec
enter
and
fdivr
in
in
inc
enter
inc
inc
nop
es
push
xor
fdiv
mov
mov
adc
loope
or
pop
lcall
and
mov
aad
cmp
xchg
cmp
enter
sbb
clc
add
add
inc
pop
push
xchg
mov
fdivrl
mov
mov
push
test
mov
outsb
xor
sub
cmp
sbb
in
or
mov
add
xchg
data16
js
jp
add
dec
in
push
sbb
lods
inc
loopne
enter
test
push
or
sub
mov
loopne
rclb
inc
and
pop
mov
xchg
and
loop
dec
sbb
or
shr
jge
ss
or
mov
mov
push
pusha
push
push
shl
adc
je
cmp
sarl
pushl
or
je
push
je
lods
es
scas
arpl
loopne,pn
lods
fistps
popa
mov
adc
inc
mov
push
mov
dec
sub
ss
lret
push
ret
pop
mov
dec
enter
cmp
cli
test
daa
sbb
ret
cmp
mov
push
daa
inc
rolb
or
shlb
shl
push
je
shl
stos
xor
test
ret
add
lds
fs
ds
test
adc
aam
xor
add
incl
aas
and
ljmp
jle
xchg
pop
mov
nop
ja
xor
movsb
adc
paddw
in
pushf
std
aas
push
adc
and
icebp
jmp
outsl
enter
xchg
inc
nop
inc
mov
adc
push
mov
mov
pop
xchg
add
outsl
mov
bound
xchg
or
dec
test
xchg
pop
aas
xor
inc
xchg
or
and
inc
and
mov
xchg
jmp
orl
test
pushf
jne
inc
faddl
inc
xchg
add
xor
push
xchg
dec
xlat
std
mov
insb
gs
les
add
cmpsl
icebp
mov
push
push
lret
jne
sub
or
xchg
shll
mov
or
mov
dec
mov
mov
std
ret
inc
int3
push
fsubp
rcrb
sbb
sbb
out
push
popf
loopne
imul
jecxz
enter
or
in
cmpsb
sub
ud2
insl
inc
mov
lock
lods
lock
in
cmp
mov
insb
mov
les
and
imul
sbb
pop
mov
inc
int3
or
xchg
and
loope
mov
and
dec
pop
je
xchg
aaa
test
lret
sbb
cmpsb
mov
and
int3
mov
sub
pop
clc
hlt
sub
sub
rcl
and
add
cmp
xor
xor
fsubs
push
xchg
faddl
xchg
fwait
inc
pop
outsl
fcmove
mov
add
xchg
out
mov
mov
inc
fstl
je
add
mov
and
sub
sarb
inc
xlat
mov
inc
fdivl
push
dec
cmp
in
adc
sahf
xchg
xor
adc
mov
insb
rol
lahf
and
jnp
in
xchg
jbe
mov
jmp
inc
mov
inc
and
push
fstps
dec
push
loop
test
fiaddl
inc
adc
mov
pop
and
mov
mov
dec
aam
rolb
push
shlb
mov
popa
stos
adc
or
adc
bnd
push
sub
inc
cmpsl
xchg
dec
sub
imul
test
aaa
inc
pop
xchg
xchg
cmp
add
inc
insb
xchg
lahf
out
imul
mov
pop
js
jl
add
jae
inc
int
push
ss
adc
repnz
std
or
push
sbb
mov
inc
popa
adc
lods
or
popl
mulb
in
xchg
fmul
xorb
aam
jge
testb
je
xchg
add
xchg
add
adc
cli
outsl
pop
add
pushf
mov
jae
inc
insb
je
push
sarb
rolb
mov
fsubrl
push
stc
arpl
subl
pushf
cltd
test
push
pop
mov
int
push
jge
adc
mov
adc
add
mov
or
inc
rorb
aam
test
faddl
lret
gs
je
mov
sbb
jae
sbbl
int
or
test
aam
cmp
je
push
dec
dec
jg
dec
cmp
jne
xor
sbb
ds
add
js
pop
mov
shrb
roll
fsubl
mov
sbb
dec
cmp
push
sbb
inc
xor
mov
dec
or
mov
ret
add
mov
add
jbe
mov
inc
sbb
ss
xor
repnz
mov
push
add
dec
push
inc
jg
aam
add
push
rolb
shlb
adc
fs
and
js
inc
inc
sub
adc
xchg
lahf
decb
pop
lea
xor
or
push
xor
dec
jmp
add
ret
lods
lret
cmp
mov
jecxz
and
sub
pop
sub
loopne
inc
cmp
hlt
jmp
adc
addb
fs
jmp
or
mov
cmp
sbb
addl
cltd
ss
fadds
mov
xor
mov
movsb
push
rcrl
xor
or
loope
xor
loope
adcb
or
daa
test
jl
add
imul
sub
cmpsb
sbb
or
ret
sbb
sar
jmp
fcoms
stc
push
outsb
insb
pushf
push
shlb
nop
dec
adc
dec
mov
cltd
jl
sub
inc
mov
jge
mov
jmp
sub
lds
jne
cmp
mov
out
push
jne
int3
jnp
push
sbb
pop
sbb
mov
mov
push
mov
cmp
push
push
adcb
aas
iret
mov
adc
add
lods
push
out
int3
cmp
mov
push
add
sub
jne
cmp
adc
dec
stos
popf
and
sub
mov
incb
or
sbb
les
jmp
lock
add
sbb
push
and
pop
cs
inc
sbb
jmp
dec
stos
xor
inc
test
jo
cmc
and
js
inc
stos
sub
adc
cmp
and
test
mov
xchg
daa
mov
and
add
add
xor
mov
into
lods
cmp
loope
xor
add
shrl
subl
mov
pushf
pop
adc
mov
rorl
adc
adc
movsb
push
sub
mov
push
jb
bound
sbbl
or
mov
add
ret
push
je
push
sbb
mov
jnp
sbb
cli
push
sub
push
repnz
adc
inc
adc
push
jmp
add
movb
add
pop
dec
sbb
and
sbb
cld
out
jmp
or
ja
test
xchg
push
sub
insb
inc
xchg
sbb
mov
pop
int3
jmp
cmp
push
mov
inc
shrb
out
push
jl
andb
mov
or
inc
dec
add
adc
add
add
and
add
js
dec
cmp
dec
enter
call
jnp
fists
or
xchg
push
cmp
or
repnz
addr16
push
jle
cld
add
cmp
or
dec
adc
or
push
jns
add
add
daa
cmp
idiv
fld
iret
inc
jne
lcall
or
fstpl
mov
rcl
ret
push
fwait
sub
cmp
aam
inc
shrb
rclb
jge
push
xlat
mov
loope
mov
adc
hlt
xchg
push
add
push
es
cmpsb
add
adc
fsubp
and
imul
fcoms
test
mov
pop
inc
push
out
movl
cmp
inc
pushf
mov
and
pop
sub
push
int3
inc
pusha
das
inc
inc
inc
enter
jns
push
pop
cmpl
xor
test
push
mov
ret
dec
push
das
imul
push
pop
xchg
push
or
mov
mov
push
and
pop
and
sbb
inc
andl
cli
add
sbb
jecxz
test
adc
and
lods
int
lcall
dec
push
add
mov
clc
push
or
sbb
addr16
dec
mov
orl
jb
xchg
fcom
divl
and
add
or
sbbb
inc
pop
mov
stos
inc
mov
cld
lock
jecxz
inc
pop
aad
mov
insb
and
mov
xchg
cmpsl
inc
add
inc
xor
xor
sub
iret
mulb
mov
jmp
add
movsl
pop
cmp
mov
rcrb
cmpsl
pusha
xor
pusha
cmp
mov
and
add
fs
xor
je
lret
xor
or
push
or
fistpll
scas
leave
xchg
loope
xor
stos
movsb
push
sbb
bound
xchg
mov
dec
push
push
rcrb
cwtl
flds
adc
in
or
mov
and
push
jl
xchg
adc
add
mov
mov
repnz
push
ds
mov
cltd
cmp
and
add
or
and
sbb
jno
dec
sbb
mov
aam
fadds
cmp
out
add
inc
mov
sbb
or
loopne
push
lret
push
jo
ret
outsl
insl
sbb
es
mov
cli
xchg
push
push
mov
leave
add
xor
insb
or
movsb
xchg
xor
pusha
shl
jnp
mov
jmp
jl
push
and
or
adcb
or
mov
pusha
dec
adc
xor
test
subl
or
xor
jle
repz
aas
cmp
sbb
inc
or
es
add
stos
dec
sub
movsl
in
mov
or
xor
adc
adcb
xor
insb
and
lcall
sub
mov
pop
sbb
ja
scas
mov
push
mov
nop
cmpsb
sbbl
sub
nop
insb
mov
add
mov
iret
aas
out
pushf
sbb
push
idiv
mov
push
jne
cmp
jb
sub
jmp
push
std
sub
push
pop
dec
pop
cmpl
push
setl
movzbl
push
out
test
lods
flds
stos
scas
inc
inc
mov
mov
add
les
shll
push
add
add
adc
ds
add
popa
adc
lds
dec
jo
movsl
sub
sahf
and
in
add
dec
push
divb
fs
push
push
cmovbe
mov
xchg
inc
cmp
lahf
jmp
push
sbb
cmp
cmp
inc
lea
push
jne
inc
mov
aaa
push
in
push
fs
test
arpl
cmp
inc
xor
sbb
pop
sbb
inc
adc
pop
or
adc
push
adc
mov
sbb
cmp
xor
push
inc
pop
imul
int
add
test
and
jb
pop
pop
mov
inc
mov
push
push
push
jecxz
nop
dec
pop
jmp
and
test
xchg
adc
addb
push
mov
push
add
add
sub
ds
sub
cwtl
add
xchg
fs
sbb
dec
ret
fimuls
cmp
cs
push
cmc
xor
push
push
ja
out
push
rorl
adc
cmp
lods
sub
cs
add
and
sub
das
xor
push
orl
adc
inc
inc
cmp
das
inc
xor
sub
fs
pop
sbb
jle
jnp
enter
or
insl
or
sti
push
adcl
sbb
inc
or
mov
xchg
push
or
inc
nop
lret
sbb
or
les
push
sub
cmp
xor
inc
sub
or
mov
xchg
ja
outsl
dec
ficomps
cs
inc
imul
mov
in
add
or
sbb
mov
aam
fistpll
xchg
and
nop
jl
push
or
les
pop
insl
insl
faddl
push
and
add
icebp
mov
jae
xor
inc
dec
push
and
popf
sbb
xor
push
in
or
mov
jl
test
jle
add
push
jle
xor
decb
cmp
jb
pop
add
push
mov
js
loopne
cmp
mov
mov
inc
jo
lock
sbb
out
cwtl
inc
lea
or
out
das
and
add
push
adc
popf
inc
add
xorl
sbb
dec
mov
pop
mov
enter
push
fisubs
dec
hlt
jo
lea
lods
push
mov
mov
or
cmp
pop
jne
adc
cmp
sbb
push
insl
cmp
lcall
jg
daa
repz
in
xchg
jo
dec
push
gs
imul
mov
incl
mov
pop
xchg
test
cmp
dec
cs
push
jnp
xor
out
sbb
lahf
sbb
add
leave
mov
mov
sbb
sbb
push
inc
inc
iret
sbb
xchg
test
push
add
xor
test
or
xchg
adc
xor
sub
decl
pop
sbb
sub
inc
xor
and
push
or
sub
inc
out
adc
jne
or
xor
cli
loop
je
jbe
and
test
add
push
dec
jecxz
inc
sub
dec
sub
adc
cmp
in
add
pop
dec
fucom
decb
dec
jmp
inc
adcb
adc
push
mov
sub
pop
jg
shlb
push
push
pop
push
dec
xor
push
ret
push
sub
ljmp
nop
stos
adc
xchg
sbb
enter
push
dec
and
jmp
cli
sbb
ss
sub
push
jg
adc
cmpsb
pop
push
mov
inc
jne
pop
adc
iret
scas
mull
call
loopne
xchg
adc
repz
jg
pop
fnstcw
das
shrb
fmuls
push
aas
push
imul
jg
jno
pop
xor
sub
or
sbb
dec
jno
or
add
add
mov
add
pusha
add
push
add
leave
sbbb
push
inc
pop
ljmp
xor
add
add
mov
jl
js
add
push
loop
js
pop
and
sub
jecxz
lea
icebp
xchg
cmpsb
pop
jns
adcl
adc
and
xor
cs
testb
push
sbb
add
daa
jl
adcl
adc
loopne
adcb
nop
call
or
test
xchg
sbb
lea
add
push
sub
inc
dec
js
add
and
adc
nop
lret
dec
mov
cmpsl
test
cmp
jb
ret
sub
inc
shrb
sub
cmp
xchg
or
push
imul
imul
call
dec
dec
or
sbb
sub
add
inc
cmp
add
fcoml
push
mov
pop
and
dec
xchg
jo
and
in
test
jae
xchg
dec
dec
adc
subl
pop
jmp
fwait
add
test
jns
add
add
xor
inc
push
add
enter
mov
adcl
mov
xor
cmpsb
rclb
das
and
pop
sti
pusha
addr16
push
dec
mov
mov
or
loopne
enter
adc
pop
enter
dec
pop
jnp
cs
inc
cmp
push
in
jl
data16
imul
jae
iret
xor
pop
xor
or
push
push
aas
dec
mov
push
add
test
push
adc
imulb
pusha
and
cmpsb
loopne
cmp
pop
push
sub
adc
leave
dec
enter
inc
push
cmpb
add
inc
xor
push
pop
xor
aam
sbb
test
push
pop
jne
sub
mov
roll
fcomps
arpl
pop
jns
mov
rolb
add
test
popf
or
popa
lods
add
icebp
movsb
push
add
out
sahf
sub
movsl
dec
xchg
mov
pop
and
insb
jo
leave
lds
mov
rcrb
fildll
or
call
push
xchg
push
mull
gs
pop
push
arpl
xchg
unpcklps
inc
das
add
aad
inc
out
inc
and
pop
add
inc
ss
test
iret
test
movsl
cmpsl
mov
or
out
push
mov
ja
pop
dec
sub
or
xchg
mov
and
sub
or
adc
test
imul
fldl
inc
daa
xor
in
xor
int
adc
sub
cmp
popl
daa
pop
ret
pop
pop
or
jb
add
cmpb
je
cs
jle
aas
push
and
inc
add
xor
xchg
adc
mov
mov
aam
loopne
inc
pusha
xchg
int3
and
sub
adc
mov
das
jg
les
ret
mov
mov
daa
adc
stos
cmp
sbb
hlt
ja
pusha
jle
mov
add
jne
enter
fimuls
add
test
mov
push
aad
lret
jge
jg
mov
xchg
add
add
dec
mov
dec
add
jle
cmp
jl
lea
in
push
push
add
fistpll
pop
push
sbb
clc
xorb
add
add
mov
int3
cmp
push
push
xor
sub
sub
addl
lahf
addr16
aam
sub
xchg
movsl
aaa
cli
xlat
jl
xchg
shll
lahf
fidivl
jo
out
add
arpl
push
push
test
mov
mov
out
add
or
pop
inc
js
mov
das
or
add
ret
jg
scas
adc
jmp
dec
enter
sbb
imul
or
sub
jo
test
mov
dec
xchg
mov
je
cmp
sbb
dec
xor
jo
push
out
test
rclb
fimull
dec
xorl
cs
nop
jbe
test
jbe
paddusw
sub
cmp
insl
aas
lock
dec
lret
sub
aad
loop
mov
dec
inc
inc
and
rclb
test
add
sub
mov
cld
mov
jbe
mov
adc
mov
xor
orl
loopne
push
test
test
test
add
inc
lcall
sahf
into
int
push
xor
cmp
rclb
into
test
cmp
stos
out
mov
scas
sub
fbld
test
lahf
dec
jo
adc
stos
sub
adc
mov
mov
lock
nop
shll
enter
inc
test
mov
sub
jne
jp
sbb
push
and
mov
nop
add
jo
push
add
loop
fs
leave
sub
nop
dec
fisttps
push
or
xchg
mov
loope
jne
jae
fidivrs
cmp
adc
jp
push
in
push
movsl
mov
add
xchg
out
setns
in
pop
loope
adc
sub
mov
jno
pop
lcall
ljmp
xor
mov
or
out
and
pop
lcall
xchg
and
cmp
lea
bound
jb
fmull
ret
push
add
mov
add
xor
pop
pop
movsb
jnp
in
push
push
push
fadds
jno
fldcw
movzwl
xor
inc
fldcw
xchg
ds
stos
pop
add
outsb
push
or
adc
add
cmp
or
cmp
dec
inc
or
fidivrs
adc
incb
mov
jne
loope
pop
es
pop
add
push
xlat
inc
mov
mov
loopne
xchg
push
and
rol
loop
xchg
add
mov
cs
sub
push
ss
mov
push
mov
jb
add
mov
shl
adc
std
in
adc
sbb
imul
sbb
pop
decb
lods
push
fcompl
pusha
push
mov
into
cmp
jbe
or
rcl
das
dec
out
jmp
cmc
int3
or
lahf
add
fwait
gs
add
aad
movsb
sub
or
push
sub
sbb
sub
sbb
pop
push
lods
jmp
mov
push
mov
fildl
mov
inc
adc
add
mov
les
fmulp
inc
mov
icebp
lret
leave
iret
test
ljmp
fmuls
push
sbb
sbb
sar
or
adc
sub
divb
add
stc
je
repz
pop
into
cmp
movl
inc
or
or
fstp
cwtl
shlb
repz
jne
push
xor
add
push
or
test
sbb
dec
or
xchg
pop
inc
out
or
lods
repnz
pop
or
jg
shrb
shlb
pop
cmp
sub
cld
sbb
push
sbbb
or
bound
sub
hlt
ja
jge
mov
jmp
xchg
mov
mov
mov
fs
std
mov
enter
mov
cwtl
add
es
outsb
jae
mov
lea
iret
loopne
enter
subl
push
and
add
add
or
push
adc
data16
pop
add
push
push
and
clc
xor
pop
xor
jo
xchg
or
push
xor
xor
or
add
mov
push
call
cwtl
lea
xlat
cld
aas
add
ss
ds
sub
test
sub
push
pop
xor
inc
xchg
push
xchg
movsl
in
push
lds
pop
xor
call
pop
mov
leave
cmp
pop
ret
push
punpckhdq
fchs
push
pop
js
lock
xchg
pop
imul
out
pop
roll
je
push
dec
mov
xorb
or
bound
pop
xor
je
push
push
cld
mov
cmp
add
sbb
lds
push
mov
xor
add
dec
cmp
jg
mov
xorb
lea
in
flds
cmp
pop
jmp
filds
cmpb
jl
lea
pusha
ja
push
push
inc
clc
pop
into
and
mov
outsb
cmc
pop
mov
xchg
rorl
mov
add
adc
insl
sub
inc
in
shrl
sbb
popf
add
movq
sub
and
dec
fsubs
add
push
push
jl
ljmp
or
mov
sarb
cld
adc
loopne
cli
aas
inc
sbb
ds
add
insb
hlt
mov
imul
pop
xor
mov
cmp
fwait
pop
push
mov
push
push
call
ficoms
imul
int
std
dec
xchg
cmp
cmpl
mov
xor
inc
push
push
jbe
lock
lahf
sarb
call
ret
cmp
rol
clc
mov
mull
xor
out
lcall
pop
or
add
fadds
push
loopne
lea
push
push
std
pusha
jl
adc
jl
mov
fnstenv
mov
cld
push
in
or
adc
adc
cmp
pop
cwtl
adc
adc
sub
aam
jbe
mov
xor
pop
and
jl
pop
or
jecxz
sbb
in
or
mov
mov
sti
mov
dec
pop
jmp
pusha
or
and
lock
stos
inc
cld
push
mov
add
push
mov
and
inc
mov
push
mov
sbb
mov
push
out
in
pusha
aaa
mov
xor
filds
incl
je
jmp
add
sub
jne
push
push
add
jle
out
inc
push
inc
mov
cmpsb
xchg
cmpsl
sbbl
aas
bound
pop
sbb
jo
and
inc
and
call
or
inc
jae
in
addb
mov
xor
lahf
fadds
or
cmp
push
test
clc
and
inc
or
or
imul
push
or
dec
add
add
pop
rcrb
stos
dec
aam
xchg
dec
cld
in
pop
dec
xchg
and
mov
push
das
adc
and
pushf
mov
hlt
test
insb
loopne
bnd
mov
testb
add
pop
icebp
adc
cli
pop
in
pop
xor
outsl
jne
add
lret
adcl
pop
test
insl
pop
and
fidivrs
push
add
lock
cmp
inc
popf
stc
adc
push
cmp
jo
outsl
ljmp
int3
stos
pop
add
dec
test
aam
cmp
mov
test
or
cltd
adcb
inc
mov
lock
subl
mov
insl
movsb
lock
jb
sub
and
mov
and
sub
jne
mov
pop
call
pusha
cmc
sbb
std
add
sub
in
rolb
and
pusha
repnz
fisubl
js
out
jbe
adc
cmovno
jno
xchg
xor
jns
jge
inc
cmpsb
or
sub
push
sub
push
outsl
fisubrs
add
jmp
nop
cmpsb
pushf
push
das
or
sub
mov
iret
and
push
or
mov
mov
call
and
pop
ss
imul
pop
push
adc
sub
mov
adc
xor
je
jns
lock
rcll
ja
push
adc
enter
push
pop
pop
ret
shr
or
fxch
fstpl
imul
push
rcll
and
inc
or
fdivrs
cmp
inc
mov
into
jg
mov
fsubrs
push
lret
inc
loop
push
bound
cwtl
xor
idivl
pusha
lcall
test
aaa
cmp
cmp
sub
mov
pop
push
mov
sub
pop
add
idivb
mov
mov
mov
pop
dec
test
mov
push
cmp
cmp
in
sbb
pop
sbb
mov
shrl
sub
int
or
ljmp
sbb
cmpsb
jg
rcrb
loop
cld
push
pop
push
add
xchg
shlb
sbb
adc
sahf
mov
lods
hlt
push
push
sti
jne
push
inc
test
je
pop
in
adc
mov
jmp
adc
xor
loopne
mov
in
test
shrl
add
dec
shl
sub
insb
clc
mov
cmp
call
aad
xchg
sbb
rcrb
fs
push
adc
pop
sub
push
cmpsb
fistl
add
jge
mov
loopne
push
xor
mov
mov
mov
pushl
outsl
sahf
and
pop
mov
test
pop
test
dec
sbb
push
sbb
adcl
daa
bound
pop
je
outsb
add
xchg
and
orl
inc
or
aas
insb
mov
ds
sbb
lea
out
pusha
push
loope
push
mov
or
mov
and
add
add
xchg
sarb
imul
dec
shlb
push
imul
or
mov
das
or
dec
ret
mov
sbb
xor
loopne
xchg
inc
in
jnp
fisttpll
cmp
mov
sbb
mov
mov
jbe
test
loopne
pop
cli
cmp
lcall
loop
test
mov
and
jno
or
fisubs
mov
sbb
mov
push
mov
nop
or
enter
into
cmp
lret
imul
inc
sbb
adc
sahf
jo
fwait
pop
cmp
loopne
adc
sbb
push
jmp
or
jae
mov
pop
mov
roll
daa
mov
mov
xor
outsb
dec
imul
adc
xor
jl
js
push
lret
and
pop
or
std
arpl
pop
in
mov
or
ljmp
mov
xor
ja
cmp
add
mov
inc
es
add
hlt
lcall
fwait
pusha
shrl
sbb
in
enter
and
pmaxub
outsl
jmp
out
adc
clc
mov
and
aam
or
ss
pusha
push
and
adc
js
and
fsubs
jne
mov
std
mov
jo
test
bound
loopne
jmp
jno
pusha
push
enter
dec
stc
repnz
xor
insl
jne
cs
add
push
jae
arpl
xchg
out
dec
push
out
jnp
je
inc
or
push
or
mov
xchg
dec
insb
jne
or
cmp
push
push
aas
cmpsb
inc
xor
inc
sbb
mov
lea
mov
jo
psubsw
mov
pop
cmp
je
mov
push
jo
mov
inc
add
cmp
je
push
jp
mov
fidivs
push
or
fcompl
pop
pop
push
push
shl
sahf
in
and
stos
and
inc
cmp
add
fwait
popf
sbb
jnp
dec
fnstsw
mov
push
pop
jb
push
push
pop
hlt
inc
mov
sahf
xchg
rorb
dec
mov
push
fmuls
nop
pushf
cmp
and
pop
push
add
fucom
sbb
push
sub
push
push
adc
xor
xor
fstpl
sbb
jnp
rcll
add
mov
sbb
mov
stc
leave
ja
call
js
cmp
jne
add
mov
or
adc
jmp
out
loopne
pop
imull
mov
push
and
mov
lret
mov
mov
jbe
push
mov
push
out
nop
push
out
shr
hlt
insl
inc
cs
add
popf
popa
pop
mov
mov
mov
mov
fmul
subb
adc
pop
adcb
push
out
aam
adc
or
sbb
push
pusha
shlb
je
movsl
cltd
ss
into
iret
iret
call
cmpsb
cwtl
cmp
std
or
add
mov
inc
int3
pop
fwait
jge
dec
inc
mov
pop
imul
scas
sub
push
and
idiv
add
aam
adc
mov
dec
xchg
int
adc
and
cmp
sar
mov
push
xor
pop
mov
sub
add
and
sbb
add
and
and
xor
add
and
pusha
push
cmp
dec
jae
and
stos
mov
add
add
sbb
push
outsl
dec
sbb
test
fidivrs
clc
adc
and
test
dec
jo
add
sub
js
pop
push
xor
aam
mov
clc
inc
inc
mov
inc
ret
cmpsl
pop
sahf
testl
ss
add
sub
popa
std
xchg
pop
sti
add
filds
push
jbe
cmp
sbb
and
push
adcb
xchg
lret
or
xchg
add
cli
push
ja
cmpb
push
sub
jle
mov
pop
out
shll
mov
sbb
pop
mov
movsb
mov
or
hlt
xchg
mov
xchg
scas
push
pop
xchg
add
sbb
adc
or
adc
test
mov
mov
mov
adc
xor
sbbl
pop
fsubl
shll
jo
shlb
in
push
inc
ljmp
add
and
nop
add
cmc
test
lock
insb
pop
jne
lea
add
pop
mov
dec
or
adc
pusha
rclb
lret
notb
lock
or
ret
inc
sbb
out
cmp
cmp
mov
adc
cwtl
cmp
lods
pop
outsb
push
mov
das
or
rcrb
repnz
out
add
std
dec
jb
iret
cmp
pop
dec
lcall
push
clc
add
mov
inc
xchg
out
ja
sbb
fnop
add
sub
add
mov
lock
fcmove
sub
mov
mov
lock
addb
cs
jne
lahf
mov
lea
xorl
insl
bnd
fwait
pop
push
mov
mov
sub
addr16
pop
mov
add
push
or
icebp
inc
mov
push
movsl
push
inc
add
add
aad
leave
adc
mov
cmp
xor
and
mov
mov
fdivs
lret
clc
rorl
movsl
cmp
or
jmp
cmp
xor
data16
iret
cwtl
dec
xchg
pop
or
inc
xchg
pop
inc
xchg
lea
dec
sub
pusha
std
pop
or
push
push
jmp
js
pushf
adc
push
clc
add
addl
sub
pop
xor
mov
or
pop
lock
and
sub
dec
enter
inc
mov
call
xor
push
call
push
xchg
inc
clc
add
mov
je
rolb
pusha
push
popa
add
int3
mov
scas
jo
pushl
je
push
and
mov
adc
out
orb
mov
lock
pop
jnp
or
dec
notl
outsl
adc
adcl
inc
orb
movsl
mov
mulb
sub
fs
enter
insb
mov
test
movsb
mov
adc
insb
aaa
add
les
xchg
push
ja
sub
sbb
add
cmp
divb
mov
or
mov
mov
add
push
pop
cmp
je
xor
stos
aad
push
rclb
sti
push
sub
cmpsl
js
xchg
inc
pop
xchg
jmp
lea
pop
cwtl
repnz
push
xor
dec
leave
add
inc
sbb
sub
push
add
lock
or
into
adc
lock
xchg
xchg
or
lock
and
jnp
cmpsl
addb
outsl
test
jo
into
ret
stc
cmp
add
xor
ss
mov
out
sarb
mov
add
push
mov
dec
mov
into
lea
testb
mov
sub
cs
testb
xchg
mov
outsl
leave
aam
je
rorb
cmp
sbb
sbbl
push
arpl
add
jp
icebp
and
sub
test
test
ljmp
pop
sub
repz
addb
scas
call
jo
and
inc
subl
jns
push
sbb
push
imul
clc
adc
jge
jne
cli
push
mov
xchg
sahf
outsl
dec
xchg
data16
dec
call
mov
push
adc
outsb
and
xor
jo
popf
jl
add
or
rorb
push
sbb
pushf
cwtl
ficomps
sub
sub
pop
lock
test
sub
jo
cmp
push
inc
lock
add
js
mov
out
push
and
dec
push
xchg
mov
push
pop
cwtl
push
test
push
adc
add
lea
sbb
lret
push
or
int3
lret
sbb
cmpsb
pop
imul
add
adc
xchg
push
fld
movsb
fcoms
cli
les
out
xchg
pop
xor
pop
add
push
add
popa
lock
xchg
inc
fs
adc
call
sub
jns
pusha
dec
jnp
and
sbb
sbb
xchg
mov
inc
add
mov
inc
std
mov
test
and
sbb
or
adc
pop
les
pop
dec
and
jo
push
sbb
dec
jb
aas
ret
pop
loopne
or
imul
add
es
std
shlb
jne
jge
sbb
jg
inc
mov
test
ret
add
pop
lea
xchg
subb
rolb
pusha
pop
pop
inc
rcrl
arpl
or
mov
adc
and
pop
push
fs
sbb
push
or
leave
sarl
fcmovnb
xchg
loope
pop
into
jecxz
inc
and
pop
lock
mov
loopne
cmp
setne
lret
add
test
loopne
lret
mov
or
and
cld
mov
out
pop
add
cmpsb
cmp
cmp
xor
pusha
jno
sbb
or
int3
fsub
adc
mov
add
fsubr
mov
cltd
cmpl
mov
cmc
push
add
pop
or
add
popa
mov
aad
pop
ror
dec
fcoms
mov
jo
mov
sti
mov
xor
shrl
stos
mov
xor
fbstp
dec
pop
mov
movsl
add
idivb
je
mov
mov
push
pop
data16
andl
out
jo
push
adc
scas
lock
or
mov
ljmp
inc
cmc
mov
xor
aad
add
test
push
fildl
mov
test
lret
test
push
ss
aaa
push
jnp
dec
fadds
and
pop
aas
mov
mov
or
test
inc
mov
iret
dec
shll
jae
add
push
push
push
push
je
iret
insb
pusha
and
lahf
cs
or
push
insb
sbb
mulps
inc
cmp
add
push
push
iret
push
dec
cmpb
sbb
sub
sbb
imul
pop
ret
xchg
or
sub
out
stos
imul
js
and
push
adc
sbb
adc
sub
addr16
pusha
pop
mov
mov
push
aas
cmp
jl
or
pop
stos
push
aaa
inc
addr16
test
ljmp
aad
pop
mov
orb
mov
and
xchg
pop
imul
ret
xchg
imul
test
xor
adc
lock
cmp
push
xor
imul
test
pop
ret
push
in
pop
and
into
dec
mov
mov
out
aam
std
decl
insb
test
in
xchg
cs
pop
add
xor
mov
stc
dec
mov
lods
push
inc
xchg
mov
xchg
dec
xor
call
mov
mov
shlb
imul
push
push
jo
bound
test
nop
push
mov
pop
cmp
xchg
jno
int3
or
mov
push
xor
push
or
sub
push
inc
push
loope
pop
cmp
fmull
cmp
mov
insl
enter
lret
jle
shrb
push
and
ret
in
lods
xchg
fbld
in
inc
mov
les
shrb
imull
jmp
push
rclb
es
and
cmp
jecxz
and
sbb
cmpsl
mov
xchg
adc
lock
cmpl
addl
cmp
je
xor
lea
out
fisttpll
and
xorl
test
xor
dec
pusha
inc
pop
inc
xchg
out
popl
dec
adc
andl
pop
faddl
inc
add
shrb
outsb
jl
aas
pop
addr16
sbb
inc
jmp
pushl
xchg
iret
call
inc
lea
lods
xor
lods
daa
cmp
ss
or
out
and
rcll
mov
rcl
mov
xor
ret
insb
pop
test
push
idivb
sub
or
out
fldt
add
mov
jl
andl
push
push
and
pop
sbb
rorl
je
popf
jne
pop
cltd
add
xchg
je
pop
loopne
jecxz
xchg
imul
dec
xor
pop
sahf
push
xchg
dec
push
test
adc
xor
xor
dec
shrb
aad
add
test
rcll
sub
mov
mov
stos
mov
test
mov
mov
sub
inc
dec
mov
sbb
xor
mov
push
or
call
sub
adc
sbb
add
xlat
shr
pop
add
inc
dec
insb
dec
sbb
pop
dec
adc
pop
inc
xchg
xchg
mov
adc
inc
add
daa
sbb
fdivs
lods
sbb
add
sbb
out
jmp
pop
cwtl
hlt
push
fnsave
mul
push
nop
or
xchg
push
xor
lock
movb
je
fwait
call
call
mov
cmpb
orb
add
add
imul
sbb
or
jle
jle
add
xchg
adc
mov
add
mov
jl
loope
xor
xchg
push
sbb
imul
movzbl
scas
mov
dec
mov
cltd
push
mov
mov
mov
push
adc
inc
lret
in
scas
push
mov
leave
cmpsl
repnz
inc
add
mov
test
add
mov
mov
mov
and
cmp
add
enter
xor
aaa
inc
mov
add
outsb
sbb
shrb
mov
cmp
push
push
test
adc
cltd
add
scas
xchg
jbe
aad
push
cmp
fistps
fs
inc
inc
fdivs
cmp
and
dec
fbstp
pop
mov
call
movhps
scas
xor
jne
mov
jmp
aaa
movl
dec
push
fs
into
mov
addr16
mov
xchg
mov
cmp
mov
shl
lcall
dec
jnp
ret
pushf
pushfw
inc
xlat
adc
aad
pop
repz
test
rcl
mov
fdiv
fmuls
mov
pusha
and
je
and
dec
pop
add
pop
dec
arpl
aaa
dec
push
jo
jmp
lods
add
xor
insb
movsb
mov
outsb
pop
push
push
pop
push
rorb
mov
imul
mov
sub
xor
insb
mov
cwtl
mov
mov
mov
je
adc
icebp
push
pusha
into
jne
cmpb
shrb
out
ljmp
shrl
jno
leave
pushf
mov
lcall
push
nop
add
jb
jbe
cmp
add
in
mov
adc
mov
inc
cmc
jno
lock
daa
cmp
je
push
xchg
mov
push
xchg
je
lock
lret
mov
inc
movsb
adc
je
mov
andl
inc
test
inc
mov
xor
or
add
pop
rorb
jl
addr16
push
add
xchg
movsb
pop
mov
push
clc
test
lea
mov
cmp
push
loope
sub
mov
jo
in
rolb
mov
sub
adc
push
mov
hlt
push
add
or
inc
popf
andb
or
ss
xor
mov
xor
cmp
fldcw
and
je
mov
aam
test
dec
push
ret
push
or
jae
out
xor
mov
add
es
sub
sbb
xor
dec
insb
mov
pusha
mov
insb
divl
dec
push
push
push
pop
pop
mov
dec
insb
add
mov
pop
add
mov
sub
int
lods
adc
sbb
movsb
lods
add
dec
sti
pop
jge
adc
sbb
pop
lret
mov
cmp
jne
or
ja
mov
loope
push
xorb
rolb
ret
pop
xor
shr
push
push
mov
shlb
aad
add
push
mov
test
dec
jp
mov
add
and
aas
mov
xlat
fdivl
xlat
push
xchg
pop
push
bts
fucomi
jne
popf
inc
cli
push
cld
xabort
jle
or
inc
aas
adc
pop
adc
inc
insb
shr
sbb
jge
add
jns
push
les
cs
or
adc
loop
or
insl
jp
sub
or
pusha
insb
std
mov
sbb
mov
in
adc
out
xor
gs
adc
add
jb
jge
pop
mov
cmp
or
loopne
push
mov
sbb
mov
adc
pushf
repnz
mov
push
sbb
push
pop
adc
sub
lret
lods
movsl
xlat
jbe
jne
add
jns
sbb
in
mov
lea
sbb
jle
push
push
dec
or
int
mov
mov
pop
xchg
call
dec
xlat
or
xor
inc
andb
shlb
push
int3
inc
shrl
inc
add
icebp
or
rorl
push
mov
sahf
and
out
movsl
addl
movsl
adc
insb
insb
sbb
or
cltd
hlt
or
push
mov
fdivrs
rcll
add
inc
xor
mov
push
cmp
add
pop
adc
roll
dec
sub
adcb
sbb
enter
add
dec
jnp
adc
push
in
push
sub
push
pop
mov
add
push
lea
or
leave
addl
je
aaa
jbe
adc
or
lea
sub
aas
mov
pop
sub
add
arpl
sahf
xchg
out
add
js
mov
es
pop
sub
xor
mov
aas
scas
or
cmp
call
dec
pop
loope
mov
lcall
sub
xchg
inc
iret
stos
push
push
xchg
or
aas
adc
push
push
mov
or
push
mov
or
add
cmp
jno
addl
push
js
dec
jb
cmpsl
inc
push
dec
add
mov
dec
int3
movsb
push
ret
call
dec
push
stos
cmp
pop
or
cwtl
push
push
add
adc
dec
add
or
sbb
or
pop
sbb
and
sub
or
and
idivb
xor
aaa
mov
mov
div
sub
inc
aam
out
pop
push
pop
jecxz
lods
pop
or
mov
ror
sbb
push
pushf
lods
cs
nop
rcl
push
into
lret
mov
push
push
or
inc
loope
and
les
or
call
loope
xchg
loope
and
rcl
xchg
fnstenv
sbb
xor
sti
lods
sbb
push
jmp
or
xchg
int3
sub
dec
sub
push
dec
in
dec
aam
into
or
mov
pushf
push
sub
jge
fisubs
je
clc
mov
shl
inc
mov
testl
test
xor
or
iret
pushf
lock
shll
int3
or
push
adc
mov
movsb
inc
mov
cmpsb
add
int
xchg
inc
mov
leave
xchg
mov
stc
xchg
push
jae
push
push
adc
jae
movsb
es
jl
movl
gs
push
push
add
or
lods
mov
test
into
rolb
push
push
push
js
xchg
add
add
mov
shll
ss
sbb
bound
gs
adc
jb
cmp
push
testl
mov
shll
fcmove
xor
mov
push
rolb
and
addr16
add
arpl
mov
add
inc
and
dec
pop
inc
mov
lods
push
cmc
xchg
mov
out
push
cmp
mov
inc
or
sub
jb
fs
pop
aaa
adc
push
fldenv
dec
lds
shrb
mov
rol
sbb
in
xchg
mov
aad
push
in
daa
loope
dec
addr16
push
inc
test
pusha
daa
testl
jns
dec
pop
or
cmpsl
xor
xchg
mov
pop
xor
fsts
or
dec
pop
dec
mov
pushl
push
adc
push
adcl
and
mov
shl
add
ret
divb
lods
leave
sti
les
pop
aaa
lods
adc
pop
call
nop
push
and
mov
out
jle
ljmp
jne
ret
add
mov
outsl
or
and
sti
dec
ja
je
or
je
or
sub
sub
ret
adc
cmp
stos
roll
es
or
ds
mull
movsl
xor
jne
lcall
mov
ja
push
push
jmp
cmp
sub
cmpsl
push
adc
adc
dec
push
push
cmp
jo
jp
inc
push
lds
mov
pushl
lock
or
jbe
loop
into
push
jmp
aad
and
mov
es
loop
rorl
mov
movsl
std
jbe
cli
gs
add
je
cs
sub
cmp
clc
mov
adc
rcll
in
pop
test
shlb
rcrb
dec
rolb
xorl
add
sbb
inc
mov
mov
push
inc
mov
jl
or
fistpll
jp
cmpl
cmc
sarb
add
clc
add
aad
inc
push
adc
in
mov
or
jl
aaa
frstor
or
push
adc
push
jo
pop
inc
sub
jmp
jo
or
xor
ds
jge
add
dec
pusha
subl
inc
or
push
popa
nop
push
cwtl
sbb
and
out
aaa
mov
stc
pop
and
pop
inc
aad
cs
test
ret
add
cld
out
push
fmuls
movsb
xchg
cltd
pop
cli
rcll
push
ret
cmp
pop
inc
call
dec
mov
inc
das
mov
mov
add
and
scas
push
push
cmp
stc
sti
je
int3
sub
mov
or
inc
push
dec
mov
dec
sub
cmpsb
dec
sub
cltd
adc
inc
fdivrs
xor
mov
mov
push
out
fs
push
stc
popa
mov
stos
xor
or
sbb
xchg
sub
xor
jo
loope
mov
dec
mov
into
mov
inc
add
les
cwtl
mov
mov
inc
push
cltd
mov
adc
test
adc
daa
xchg
fisubrl
es
add
shrb
pushl
add
cmp
or
dec
call
shll
cmp
call
push
faddl
mov
xchg
outsl
inc
and
insb
rcrb
in
movsl
push
scas
dec
sbb
xchg
xchg
inc
xchg
cld
ret
in
jae
pop
mov
rcrb
add
xor
pop
push
push
mov
fwait
xor
aam
rcrb
nop
int3
aam
inc
and
adc
push
rolb
mov
dec
lods
pusha
lea
rolb
adc
xchg
idivl
mov
inc
push
fistps
loop
jmp
sbb
add
scas
nop
jno
or
mov
pop
or
ret
cmc
inc
sub
loope
fmuls
out
popa
push
jnp
je
mov
adc
or
aad
repz
pop
jmp
in
jl
movsb
xor
or
jmp
jle
add
mov
sbb
push
dec
ret
dec
rcl
jp
js
push
call
hlt
jnp
pop
sbb
sarl
and
push
cmp
adc
faddl
pop
mov
mov
push
mov
call
repz
fldt
daa
mov
xor
inc
enter
js
inc
push
jne
add
xlat
sbb
test
loopne
dec
in
cmpsl
imul
cmp
in
add
data16
lods
js
subb
roll
push
jo
push
cs
subb
xchg
sbb
and
je
rorb
xor
and
and
fs
mov
adc
and
movl
in
lods
inc
or
mov
add
lods
stc
fwait
aaa
adc
dec
sub
and
sbb
cmp
clc
sub
jle
pop
jb
xor
or
push
lret
add
push
xchg
mov
add
in
fcoms
adcl
pushf
lods
test
ljmp
cmp
in
sub
push
les
imul
pop
add
add
sbb
hlt
call
xor
add
or
cld
cltd
add
gs
shlb
in
mov
xor
stos
gs
pop
and
push
or
gs
cli
jne
out
pop
jp
outsl
mov
cli
andl
pop
mov
mov
mov
lea
rclb
or
xor
dec
mov
hlt
mov
fistpl
jecxz
mov
dec
pop
push
push
cmp
and
inc
adc
add
xor
mov
shlb
aaa
push
xor
dec
push
pushf
push
push
mov
push
xor
int3
add
cmp
push
or
or
push
push
cmp
jae
mov
loopne
shlb
push
cmp
pop
dec
and
std
xchg
cmp
adc
dec
or
mov
jg
jo
push
sub
add
outsl
mov
sti
or
or
iret
or
or
add
les
sub
add
mov
cld
dec
addl
ficoms
cs
repnz
imul
push
movsb
dec
popf
ret
sarl
ljmp
js
je
loop
adc
shlb
or
test
popf
xor
outsb
sarb
sbb
sbb
sbb
inc
adc
xchg
jbe
fadds
and
add
ret
sbb
inc
jecxz
scas
into
pop
dec
adc
and
add
inc
or
cmp
adc
push
xchg
cli
and
pop
outsb
xor
outsb
and
sarl
jnp
test
scas
adc
fadds
add
xor
movb
push
mov
and
xchg
test
xchg
sub
inc
cmp
xchg
jle
test
sbb
pop
mov
xor
mov
pop
loope
sbb
in
adc
ss
rorl
imul
cmp
pop
pop
sbb
pop
and
test
push
push
test
dec
inc
data16
jbe
pushf
sub
loopne
lock
pop
push
dec
add
testb
dec
aaa
or
cmp
insb
add
sbb
out
jns
lods
sbb
pop
fisubrs
adc
push
test
or
in
icebp
icebp
mov
aaa
stos
or
adc
adc
and
pop
sbb
je
rorb
aam
je
and
push
mov
xchg
mov
sub
cli
call
popf
jle
add
fsts
adc
mov
rcrl
jnp
add
jne
or
xchg
les
dec
jg
mov
mov
xor
fmuls
inc
gs
add
and
add
rolb
ljmp
add
pop
je
or
push
cmp
or
pusha
out
cwtl
test
add
cmp
jp
inc
rclb
dec
sbb
mov
fucomp
add
sub
in
dec
adc
cwtl
jge
cmp
dec
dec
or
add
push
pop
fst
sbb
fs
sbb
fldt
and
clc
dec
adc
fiadds
and
adc
clc
push
inc
cmp
cmp
stos
sub
push
mov
inc
sbb
pop
dec
and
pushf
push
adc
and
cld
push
adc
inc
adc
lods
sbb
cld
push
xor
dec
cmp
or
fildl
popf
shr
push
jmp
jmp
dec
enter
sbb
mov
imul
sbb
mov
nop
push
sub
sub
lods
sbb
fsubs
cmp
ja
mov
je
dec
out
add
int
push
lahf
push
aam
sbb
dec
lock
push
xchg
jno
dec
and
add
repz
and
daa
push
push
or
xchg
and
nop
jl
or
sub
push
sub
lret
and
pop
push
xchg
or
sub
aaa
inc
pop
lea
or
xchg
add
inc
mov
xchg
and
push
cmp
dec
xor
inc
mov
push
push
sub
xchg
adc
leave
xchg
cmp
xor
and
add
pushf
and
sbb
push
jb
xor
dec
xchg
repz
or
push
cmp
push
sbb
push
or
ret
cmp
jns
cltd
xchg
fmuls
push
insb
add
in
sbb
repz
pop
add
dec
xor
sub
loope
hlt
enter
mov
in
dec
cld
cmp
add
add
adc
add
inc
pop
push
jl
mov
jb
sbb
cmovno
fs
ds
scas
push
push
sbb
rol
shll
add
adc
dec
int
imul
dec
cmpl
leave
stos
pop
or
ret
dec
add
adc
call
pcmpeqw
mov
push
sub
push
xor
xchg
sub
add
or
and
dec
and
mov
and
jmp
pushl
sub
mov
scas
and
sbb
jecxz
outsl
adc
mov
xor
mov
mov
sar
mov
push
and
lcall
mov
bound
sub
cmp
add
or
dec
dec
stc
fdivr
test
daa
push
mov
testb
xor
fmuls
mov
loopne
xchg
jae
add
push
dec
loopne
sub
mov
mov
ficoml
adc
xchg
pop
pop
xchg
out
push
xor
arpl
lea
jl
loopne
filds
in
push
in
push
cs
dec
scas
in
call
dec
call
cmp
xor
jo
cmp
scas
add
pop
mov
sbb
jmp
shl
loopne
mov
leave
xchg
fimuls
or
add
and
cmp
repz
or
daa
and
or
or
sub
jne
pop
add
or
test
and
and
or
mov
in
jo
and
xchg
add
xor
js
xchg
jbe
add
ljmp
dec
xchg
pop
push
js
mov
lret
or
adc
aam
popf
cwtl
insb
dec
push
dec
or
rcll
movl
call
mov
and
lea
stos
sti
sub
dec
sbb
ljmp
jbe
inc
mov
xor
lds
fiaddl
cld
add
mov
mov
inc
and
jns
jne
push
fldl
mov
cmp
dec
push
inc
scas
popf
lret
in
insb
push
int3
mov
mov
cld
cmp
or
in
inc
adc
nop
or
stos
pop
and
and
lret
arpl
mov
mov
jb
xor
sahf
in
push
xchg
sbb
jae
mov
dec
sahf
inc
adc
jl
cmp
fdivs
leave
inc
mov
push
shl
pop
cmp
jne
pop
adc
aad
shlb
pop
cmp
jge
sub
cmp
cmp
sub
jmp
push
or
xor
loopne
lret
adc
in
pop
and
jae
inc
punpcklbw
loopne
jl
repnz
aaa
sbb
sub
enter
add
andl
jg
pop
push
lods
mov
sbb
sbb
ret
dec
xchg
and
or
and
decb
adc
aad
lods
xchg
js
adc
flds
mov
dec
or
inc
add
inc
into
jle
subl
or
das
gs
fcompl
enter
outsl
xor
adc
sbb
ljmp
lret
pop
or
adc
ror
add
push
inc
in
mov
push
dec
cmp
push
adc
arpl
inc
inc
or
ja
fstpt
xor
imul
mov
jne
scas
xchg
dec
jmp
mov
push
push
dec
rclb
call
imul
stos
and
push
lods
or
ret
jnp
jnp
cmp
jns
mov
cmp
sbb
pop
imul
addb
lret
mov
lods
test
mov
cmp
jbe
mov
xor
ret
push
xor
pop
xor
push
lds
mov
cmp
mov
iret
cmp
popa
xorb
sbb
js
imul
inc
jno
xchg
and
nop
test
leave
mov
cmpb
jns
mov
shlb
dec
clc
push
inc
mov
push
or
sub
stc
outsb
inc
dec
dec
jle
shrl
jne
test
dec
out
push
cmp
mov
jge
jo
add
mov
cmp
push
jo
fcomps
lock
pop
adc
fwait
aaa
arpl
sbb
leave
inc
out
decb
mov
cmp
jbe
xchg
lea
mov
push
lea
in
jb
or
pop
jae
inc
dec
inc
xor
mov
mov
pusha
fwait
in
push
xor
nop
mov
add
jmp
sbb
add
sbb
xor
test
rorb
push
xchg
cmc
sbb
push
fdivp
es
fidivl
cmp
cmp
mov
sbb
std
xor
inc
jmp
ja
shll
or
cmp
push
push
push
mov
adc
jle
or
mov
push
cmpsl
pusha
xchg
ret
test
loopne
int3
cld
push
pop
cmp
adc
or
popa
loop
sub
sti
lea
out
fdivs
andl
push
push
dec
sbbl
cmovp
iret
or
add
mov
adc
jmp
dec
gs
lahf
add
add
xor
xchg
icebp
sbb
mov
push
and
popa
or
lea
jmp
push
xchg
inc
xor
lahf
movsb
inc
aas
or
and
fsubs
push
add
scas
add
movl
fsubrl
add
xor
xlat
sbb
push
ds
adc
or
mov
jne
fisttps
or
rolb
inc
adc
jo
add
out
jns
cmpl
gs
lcall
push
test
and
xor
sbb
out
aam
movsl
xor
in
cld
mov
rclb
dec
add
sbb
insb
jnp
jnp
xchg
sbb
pop
scas
push
add
xor
bound
sub
loopne
scas
iret
cmpsl
add
arpl
enter
pop
test
cmp
int3
js
imul
mov
push
mov
and
ds
inc
cmp
push
or
xor
adc
or
nop
aam
mov
movsl
icebp
lea
push
pop
mov
rep
mov
adc
mov
sti
push
or
lea
pop
cmp
dec
mov
data16
jg
push
sbb
push
fs
sbb
cmpsb
rcll
ja
jge
mov
adc
addr16
mov
lret
ss
out
pop
ret
push
mov
ret
or
push
push
mov
jl
loope
negb
es
mov
cmp
jecxz
jb
xchg
dec
pop
in
and
mov
pusha
push
mov
mov
sbb
test
inc
shlb
sbb
push
xor
and
mov
andps
cmp
mov
xor
push
loop
pop
or
popa
mov
mov
je
push
cmp
test
or
xchg
stos
ljmp
push
ret
fiaddl
and
sti
add
rcrl
std
mov
ljmp
pop
test
push
call
clc
inc
loope
xor
dec
imul
pop
out
inc
and
jbe
je
rcr
clc
lea
ret
push
xor
pop
push
cmp
sbb
in
loope
and
push
jb
mov
inc
pusha
cmp
flds
sub
or
mulb
push
cmp
and
lret
xchg
pop
or
cwtl
mov
stos
cmp
pop
push
cld
push
xor
sbb
sbb
inc
je
cmpsl
hlt
popf
mov
jp
inc
sbb
mov
cmpb
test
mov
jo
adc
je
lods
sbb
sbb
test
jo
mov
dec
sub
push
sbb
inc
push
pop
stos
fsubr
ret
xor
imul
cmp
nop
sbb
out
rolb
or
or
insl
sbb
insb
lock
jecxz
push
mov
aam
lock
jle
dec
add
jmp
inc
add
inc
out
push
aas
je
lea
mov
ret
in
push
shll
push
dec
jle
mov
hlt
iret
push
aad
pop
inc
push
addr16
ja
rcr
dec
add
lahf
xchg
lret
sub
or
mov
gs
lret
cmp
inc
in
inc
add
dec
and
jo
out
je
and
dec
popf
jmp
sbb
sbb
push
or
addb
sbb
add
fidivl
pop
mov
push
fs
push
or
add
shlb
jno
incb
pusha
rcll
or
cmc
xchg
adc
imul
lods
fimuls
mov
pop
ljmp
add
adc
push
insb
pop
int3
rclb
push
adc
out
push
icebp
pop
or
push
sbb
es
xor
push
movmskps
aad
sbb
inc
push
inc
mov
jp
jle
add
fcoms
or
xchg
out
or
push
rcrb
pop
pushf
mov
adc
mov
xor
loopne
add
test
dec
and
cmp
jmp
lods
pop
call
sub
mov
or
lret
mov
je
cmp
jae
push
subb
addb
and
add
adc
divb
mov
dec
sub
or
xchg
sbb
movl
inc
pop
mov
imull
lret
pop
lock
jnp
stos
pop
shlb
mov
int
or
cmpsb
inc
xor
fwait
cmpsl
sub
or
sbb
cmp
jae
loopne
movsl
cmp
not
and
jno
mov
sbb
andl
mov
adc
pop
push
push
or
jae
push
inc
cld
mov
sbb
dec
jae
xlat
lcall
adc
dec
lock
adc
inc
inc
cmp
je
inc
sub
sbb
xchg
adc
das
add
outsb
test
cmp
push
dec
xor
shrb
jb
xchg
lcall
repz
arpl
sbb
pop
rcr
sbb
xor
xor
andl
push
and
ficoml
test
loopne
sbb
push
jp
hlt
leave
clc
push
mov
add
pop
int3
js
daa
ret
mov
sete
mov
jo
in
mov
jmp
or
jns
jns
inc
test
shlb
add
loopne
sub
cmp
xor
mov
subl
inc
xor
and
pop
mov
push
cld
clc
ror
push
pop
iret
xor
je
into
add
lret
loop
sub
pushl
jnp
pop
adc
push
dec
push
lret
call
xor
dec
push
adc
xchg
fdivrs
mov
push
and
shl
cmp
call
mov
add
push
push
adc
out
mov
push
sahf
push
mov
movsb
lock
push
in
xchg
and
sbb
movsl
insl
add
mov
aas
mov
adc
jno
incl
push
es
cmp
leave
sbb
cmp
adc
bound
inc
adc
arpl
cmpsl
mov
pop
mov
sbb
add
inc
test
sbb
sbb
and
rol
jle
cmpb
jne
push
loopne
mov
inc
orl
js
bnd
rorl
xor
or
int3
push
jno
addr16
outsl
outsl
push
scas
cli
mov
jge
je
pop
and
add
testl
mov
add
lock
jl
orb
gs
aam
and
push
jecxz
fbld
push
icebp
subb
bound
sbb
and
push
inc
fnstcw
cmp
mov
pop
sub
sbb
sub
jo
dec
mov
into
call
roll
pop
pop
mov
adc
addr16
pop
add
sub
mov
mov
hlt
jl
movb
mov
orl
test
movsb
or
jge
shrb
es
push
jb
das
dec
pop
add
xor
pop
add
xchg
das
pusha
aam
fisubl
inc
adc
stos
push
sbb
add
pop
xchg
inc
or
lock
in
pushf
loope
push
cmp
in
cmc
insl
insl
push
adc
rcrl
cmp
pop
cmp
dec
push
call
push
cmp
sbb
mov
or
add
dec
outsb
cmp
je
add
test
inc
adc
out
adc
push
aas
inc
sar
cmp
jbe
or
add
inc
or
jmp
ret
and
lock
adc
rcl
out
sub
jecxz
addl
push
aam
jp
repz
mov
je
cmpsl
xchg
jecxz
cmp
pusha
xchg
jmp
cvtps2pd
dec
inc
decb
add
lock
lea
mov
fdivp
mov
repnz
pop
and
mov
pop
dec
outsb
lock
push
mov
sbb
jnp
xchg
pop
insl
sbb
jl
pop
in
mov
pusha
lea
lock
jne
mov
ds
addl
xor
je
pop
sbb
leave
inc
ficoms
or
or
adc
push
jo
mov
out
dec
pop
cmp
hlt
adc
sbb
mov
adc
xor
pop
inc
or
inc
dec
xor
pop
shlb
in
adc
inc
negb
xchg
push
pop
add
jmp
dec
ss
jp
imulb
arpl
dec
add
jne
sub
cmpsl
cwtl
outsb
sar
lea
jp
cmp
push
mov
push
push
mov
sub
cmp
jb
pushl
mov
aas
or
into
pop
or
pop
jmp
add
xor
jae
adc
sbb
inc
test
in
and
sarb
adc
jmp
or
mov
ds
add
bswap
movsb
cmp
mov
pop
dec
imul
lock
pop
add
fcmovne
mov
repnz
loopne
je
mov
jle
pop
mov
loopne
add
pop
jmp
leave
mov
jo
das
sub
jmp
pop
lock
mov
xor
pop
xor
jmp
cmpsb
sub
inc
sub
dec
and
inc
xor
sbb
inc
and
and
stos
mov
xchg
inc
push
sbb
jecxz
add
mov
in
push
dec
test
cli
jge
daa
xchg
and
dec
adc
insb
sbb
inc
gs
sbbl
push
cmpsb
adc
daa
or
and
push
sub
and
leave
and
pop
insl
stos
fdivl
mov
leave
adc
xchg
arpl
or
adc
mov
sub
or
fldt
in
andb
dec
ja
cmp
insb
inc
xor
ja
dec
add
add
outsl
testl
inc
push
jb
pop
or
or
pushw
sub
outsl
sbb
inc
outsl
nop
mov
xor
xor
prefetcht1
mov
shrb
adc
bound
dec
and
mov
jge
sub
jbe
dec
sbb
and
mov
pushl
mov
out
fwait
hlt
add
in
mov
testl
add
inc
sbbb
aas
and
sbb
and
sbb
sbbb
mov
sbb
andb
es
push
sbb
or
daa
cmp
push
cmp
push
sub
push
mov
das
jmp
sub
in
jnp
int3
cmp
pop
push
push
xor
add
xor
mov
push
and
and
xor
or
jo
loopne
xor
mov
mov
dec
lahf
xor
fcmove
fstpt
in
xadd
cld
or
ss
or
pusha
push
cmp
dec
cmp
jecxz
adc
adc
or
xor
jge
adc
adc
cmp
cmp
inc
mov
scas
xchg
mov
sub
movl
jno
es
sbb
scas
dec
xor
push
cmpsb
dec
and
sti
adc
add
adc
add
jecxz
adc
push
add
adc
adc
shrb
push
aaa
xchg
cmpsb
imul
ja
inc
addb
inc
jl
xor
loope
test
adc
sysexit
ja
add
add
mov
mov
mov
push
iret
mov
push
out
arpl
imul
imul
mov
dec
fldt
push
and
xor
fcoms
jae
inc
push
add
inc
adc
mov
inc
data16
add
push
add
xor
js
ds
pop
adc
mov
test
out
je
stos
fnstenv
fbstp
in
movaps
mov
fs
push
clc
add
add
sbb
rcr
sbb
mov
add
push
add
fbstp
in
sbb
pop
paddsb
xor
lock
cmp
mulb
out
inc
fldcw
je
mov
mov
or
fwait
pcmpgtd
das
adcb
add
pop
cmpb
rcrb
jae
jne
sbb
sbb
out
dec
call
xor
aaa
test
in
inc
call
sbb
je
les
sbb
lods
push
dec
dec
mov
or
dec
sub
xchg
lock
cmpb
jae,pn
rcr
aam
outsb
mov
pop
sbb
xor
or
fmul
and
cmp
dec
dec
adc
insb
jmp
inc
or
add
cmc
outsb
shlb
lock
inc
movsb
add
adc
mov
fildl
lock
fwait
jno
push
pop
mov
push
push
call
dec
cmp
jg
sub
adc
outsl
sub
sbb
or
icebp
jae
dec
sub
dec
pop
sbb
add
sub
int3
adc
jbe
push
inc
sarb
dec
outsb
pmulhuw
andb
pop
rorl
mov
push
xor
jo
sub
aas
test
xor
ljmp
inc
push
push
cmp
sub
test
pop
data16
or
adc
dec
cltd
add
repz
and
ss
iret
insb
and
test
push
pop
mov
xor
push
adc
add
or
xor
andl
xchg
loopne
loope
movsb
cld
or
and
dec
sub
adc
or
or
mov
mov
movsl
sub
js
jns
cld
lock
jmp
inc
xchg
repnz
jbe
loop
stc
out
cmovbe
sub
mov
lods
xchg
or
adc
adc
in
xchg
lock
pusha
hlt
inc
and
or
sub
jmp
jne
pop
repnz
bound
xor
xchg
inc
fiadds
or
hlt
loope
lock
out
shrb
mov
or
pop
repnz
nop
lret
and
repnz
push
or
ljmp
push
js
sarl
aaa
and
or
shrl
or
and
lock
shll
lock
cmp
fcoms
mov
sbb
and
push
mov
ret
shl
push
lahf
add
decl
cmp
mov
cmp
jl
cmp
jle
cmp
mov
jp
or
pop
inc
cmp
aas
lods
mov
icebp
sub
inc
pop
cmp
pushf
cmp
jge
mov
pop
and
cmp
jl
push
repnz
cmp
je
cmp
je
jne
pop
xchg
mov
daa
je
sbb
iret
jae
imul
pop
jmp
pusha
add
jl
mov
mov
sub
add
jno
mov
or
insb
shrb
pushf
pop
mov
push
lock
enter
lock
and
jbe
mov
jmp
shl
decl
hlt
jge
and
aaa
sub
jb
cmp
jne
movl
shl
sbb
jo
icebp
push
clc
pop
ret
inc
dec
aam
mov
and
cld
xor
or
js
ja
lea
cmp
ss
mov
cld
xchg
xchg
pushf
repz
orb
push
jne
nop
xchg
mov
imul
xchg
shrb
mov
jo
nop
cli
ja
inc
in
jo
sahf
jle
data16
fldl
nop
xor
pop
rorb
sub
stc
fstl
xchg
adc
add
fmuls
pop
mov
pop
shll
inc
fisttpl
xchg
mov
leave
cli
mov
jo
jl
call
push
mov
movsb
loopne
xchg
jle
or
xchg
dec
push
aad
leave
fdivrs
cld
or
push
lea
mov
fiaddl
inc
test
cmp
pop
add
popl
call
add
jo
loopne
dec
je
bound
or
fcmovnb
sub
pop
dec
xor
mov
shlb
xor
mov
jnp
das
sbb
fadds
add
add
out
mov
nop
or
push
pop
jbe
js
pop
pusha
mov
pop
mov
inc
add
sbb
push
mov
mov
sub
jge
jo
aad
xor
enter
or
stc
xor
adc
or
push
pushf
mov
dec
je
adc
adc
icebp
push
xor
or
xor
pop
push
call
push
jne
jae
je
xor
or
scas
loope
pop
mov
push
inc
push
mov
je
lret
cli
je
sub
mov
shrl
or
loop
rclb
ret
mov
js
addb
inc
inc
jle
and
xor
add
cmp
cmp
and
adc
mov
mov
cmp
ja
sub
iret
call
push
in
adc
adc
xchg
orb
cmc
mov
sbb
jnp
loope
jl
por
sub
add
cmpl
in
pop
xchg
add
xchg
inc
movsl
pop
fsubp
ret
fadd
jno
sub
dec
pop
fucomi
adc
mov
jae
cmp
stc
push
test
jns
frstor
push
mov
adc
fisttpl
in
xlat
loop
push
les
sarb
add
into
mov
pop
and
or
ds
sub
pusha
ljmp
xor
sbb
ret
pop
xchg
and
ss
sub
or
mov
call
fwait
sahf
repz
test
adc
or
pop
mov
cmp
inc
push
mov
sbb
pop
ficoms
clc
fistpll
mov
mov
test
je
or
je
push
test
add
jg
pop
rolb
pop
push
repnz
inc
push
mov
loopne
jg
rol
xchg
int3
inc
mov
ja
lea
xor
and
push
repnz
fs
jge
pop
mov
jle
dec
add
and
sbb
stos
push
jne
in
popaw
adc
insl
inc
inc
mov
pusha
push
inc
repnz
mov
int
jne
sub
jne
insl
hlt
fidivs
fwait
aad
fs
cltd
clc
or
repz
jo
fs
inc
outsl
lock
rolb
push
lods
add
inc
push
dec
pop
test
or
stos
and
xor
pop
jg
arpl
jb
mov
mov
rclb
dec
sbb
adcb
mov
std
push
insb
sub
movsl
or
jo
ficomps
jmp
jbe
fsub
add
sbb
pusha
mov
adc
xchg
sub
movl
jle
and
mov
sub
repz
add
xchg
ret
pop
push
or
push
push
jae
sbb
popa
or
sahf
sub
sti
in
pop
test
inc
hlt
pop
adc
inc
dec
sbb
mov
or
inc
dec
sti
stos
lods
ud0
push
hlt
jg
mov
sub
popa
ret
aas
repz
cmpb
je
xor
sbb
repnz
mov
orps
adc
mov
call
xor
jl
and
in
out
push
or
decb
xchg
xor
mov
lret
pop
ret
inc
dec
pop
jo
jne
xor
mov
push
jg
mov
mov
xchg
push
cmp
loopne
inc
or
lods
pop
pop
test
pop
mov
sbb
mov
mov
imul
inc
add
adc
cwtl
stos
aam
mov
sub
bnd
push
cmp
loopne
xchg
stos
jge
pop
sub
mov
insb
add
ficoml
mov
mov
data16
add
push
adc
rorl
gs
add
xchg
mov
jne
dec
pop
xor
fisttpll
test
cmp
in
push
loope
add
xchg
push
mov
cmp
add
mov
pop
dec
clc
ret
jmp
or
pushf
xor
negb
mov
xor
pusha
movsb
pop
stos
pop
mov
sbb
push
xchg
adc
mov
push
cmp
xorb
xchg
mov
lea
or
es
rcrl
or
inc
inc
addl
inc
mov
push
adc
and
jmp
in
pop
mov
push
jnp
orb
cmp
out
lods
js
sbb
jae
test
mov
sbb
push
inc
fnsave
xchg
sbb
mov
divb
mov
xor
mov
incl
mov
dec
inc
andl
dec
popl
pop
jle
ret
popa
aaa
pusha
mov
dec
pop
sub
js
sbbb
mov
fsubr
jp
jl
cmp
push
fldl
pop
push
push
fstpl
daa
stos
sbbb
inc
data16
mov
aaa
adc
adc
jne
cmp
iret
iret
push
divb
or
jne
or
cld
jecxz
lock
dec
pusha
loopne
fldz
add
pop
andl
rolb
in
fistpll
je
and
or
pop
leave
push
and
lea
movq
push
xor
cmpsb
add
jg
aam
arpl
shlb
jnp
fstl
jecxz
loop
clc
push
fbld
movsl
movsl
lea
movsl
mov
add
jnp
ss
les
aas
sbb
enter
sbb
movsb
dec
push
lea
inc
and
mov
xor
add
push
jo
pusha
mov
test
inc
ffree
jge
jne
push
cmp
pop
cmp
inc
in
out
fstl
or
fimuls
sti
movsl
shld
ja
fisubl
push
insb
andb
xor
popa
mov
daa
push
and
mov
scas
push
aas
std
cs
fmull
push
push
fiadds
movsb
sbb
neg
jbe
daa
mov
pop
jbe
lock
push
mov
and
adc
ror
sbbl
cmp
int
push
mov
les
and
mov
shrb
cmp
outsb
enter
js
jmp
push
xchg
or
push
sti
xor
pop
sub
pusha
popa
in
push
add
sub
xchg
push
push
clc
adc
adc
inc
dec
call
adc
mov
loope
mov
mov
or
cmp
enter
repnz
pop
mov
sbb
push
in
push
pop
push
sub
ja
add
dec
mov
lods
adc
popa
arpl
add
aaa
push
sub
xor
dec
or
sbb
testl
pop
out
xor
pop
pusha
mov
add
jmp
jns
orb
imul
mov
inc
test
add
and
imul
in
add
xchg
xchg
or
or
or
std
icebp
jo
adc
sbb
or
mov
or
add
leave
enter
fmuls
sub
scas
js
pop
inc
jo
loopne
nop
and
push
mov
inc
push
or
adc
sub
add
andb
push
ror
jb
jb
enter
jb
jb
mov
cmp
jge
adc
lock
add
push
adc
outsb
arpl
push
aaa
or
and
push
dec
or
mov
adcl
push
push
cmp
xor
jns
mov
ret
cs
cld
mov
pop
add
push
ret
jle
sub
adc
push
arpl
fcmovb
inc
fbld
cmp
cli
shlb
or
add
or
push
push
adc
jle
cmp
and
cmp
jno
cmp
jl
repnz
add
xor
adc
xchg
mov
push
leave
jge
in
hlt
iret
and
jl
add
jo
movsw
into
fistps
add
dec
roll
andb
add
test
imul
push
popf
push
jno
adc
rcrl
add
jo
ud2
sarl
rolb
mov
mov
inc
pop
and
mov
mov
xchg
lea
cmc
sub
pop
scas
jmp
xor
lcall
dec
cmp
push
mov
cwtl
mov
repz
inc
outsl
mov
xor
pushf
pop
test
insb
add
bound
mov
xchg
pop
lods
hlt
xchg
mov
je
ret
xlat
sahf
in
std
mov
push
xor
inc
lea
adc
fistl
out
pop
cltd
inc
or
loopne
inc
sbb
out
jne
sbb
sbb
out
arpl
ret
iret
xchg
cmp
sbb
arpl
lock
ljmp
xor
mov
call
filds
inc
sub
adc
loop
adc
mov
mov
sbb
dec
adc
sbb
mov
cmp
pop
jle
pusha
inc
mov
dec
add
lcall
dec
inc
push
pusha
js
dec
pop
pop
inc
cmp
sub
or
popa
clc
and
pop
rorb
mov
cmp
and
clc
push
pop
push
enter
xchg
sub
loop
idivl
add
mov
jb
scas
out
jno
push
addl
xlat
movsb
cmp
ret
pop
sub
xchg
ja
push
and
iret
sub
shrl
sbb
movsl
xor
xor
pusha
vpunpckhbw
orb
jmp
pusha
xor
inc
or
xor
in
adc
divl
jp
cmpsl
mov
pusha
fwait
enter
mov
lea
gs
mov
or
push
das
and
xchg
mov
popa
or
outsb
cmp
iret
pop
fmuls
lods
adc
int
sbb
cmp
push
jge
faddl
outsb
dec
clc
ja
in
imul
add
or
jo
cmp
adc
inc
ljmp
pushf
push
sbb
sbb
push
mov
pop
js
mov
rcr
js
sbb
push
jo
mov
xor
or
call
add
dec
cmp
push
jg
push
cmpsl
add
push
push
xchg
jle
cmc
and
cmpsl
add
stc
leave
sub
imul
xchg
pop
jnp
xor
jne
test
pop
or
repnz
out
div
xchg
fsubr
push
test
xchg
push
lods
adc
scas
push
cltd
and
or
pop
and
lahf
sbbl
arpl
lahf
sub
test
sbb
iret
sub
lahf
xor
bound
push
pop
test
orl
add
sub
dec
loope
push
fists
or
inc
cwtl
push
mov
je
test
je
ds
and
into
dec
call
sahf
add
les
inc
and
rcrb
jb
cmpsl
xor
imull
dec
addl
movups
cld
rol
and
mov
pusha
push
mov
mov
cmp
mov
push
mov
or
js
leave
xlat
jp
push
popa
loopne
out
daa
and
movsl
cs
mov
andb
pop
mov
adcl
inc
outsl
fsubrs
ja
mov
adc
mov
arpl
addl
movsl
pop
xorl
test
addr16
push
mov
add
mov
push
cmp
js
inc
adc
add
xorb
push
push
movsl
jl
jmp
push
push
pushl
pop
mov
and
and
mov
insl
mov
enter
jecxz
mov
adcb
mov
adc
push
lock
ljmp
add
testl
call
push
and
movsb
jo
mov
dec
add
dec
adc
add
lods
les
inc
adc
mov
pop
adc
popl
add
aam
sahf
xor
cs
loope
xor
adc
fcmovb
sbb
xchg
lcall
fistps
mov
sbb
push
sbb
into
mov
adc
addr16
gs
or
dec
out
orl
pop
xchg
call
mov
adc
lds
mov
test
test
pop
pop
lods
stos
adcb
sti
pushf
cmp
shrl
pop
mov
add
shr
andl
add
cmp
jo
dec
das
ss
or
mov
jb
cwtl
cli
stos
lods
fistl
add
pop
popa
or
push
adc
lea
pop
xchg
sbb
add
add
jne
popf
clc
jno
push
jbe
cld
fimull
and
out
push
mov
aam
dec
push
sbb
dec
ret
add
stos
push
add
dec
enter
scas
mov
xchg
cld
mov
cmpsb
push
test
cltd
push
pop
dec
jp
mov
jnp
add
aaa
insb
dec
ja
aad
dec
add
push
fisttpll
dec
add
add
sub
dec
mov
add
jne
inc
sub
mov
scas
inc
inc
mov
push
adc
inc
sbb
push
popa
dec
jmp
addb
xchg
cmp
push
jmp
jmp
and
or
cmp
cmp
inc
lock
sub
push
icebp
sti
jg
loope
clc
clc
or
pushl
dec
add
js
or
cmp
outsl
jo
js
syscall
mov
sbb
test
jno
dec
int
arpl
scas
push
mov
add
ss
pop
decl
jmp
enter
mov
ret
push
movsb
add
je
xchg
push
add
clc
mov
sarb
fisubrs
add
test
add
add
popf
add
push
push
pushf
enter
ja
pushf
pop
sbb
pusha
lods
jns
ret
std
cmpb
jo
pop
dec
adc
mov
or
sbb
and
xor
inc
sub
in
stos
add
xorb
push
adc
cmpsb
andl
mov
cmp
xchg
or
lods
cmp
pop
hlt
mov
lock
xchg
and
test
mov
dec
cli
pop
test
sub
inc
and
inc
push
pushf
ds
cmpl
sahf
mov
scas
sbb
or
or
mov
sub
or
inc
cmp
adc
je
xor
xor
and
fs
lock
and
das
sbb
int3
add
or
and
xchg
sbb
pop
leave
or
vpminsw
jecxz
mov
or
leave
ja
sub
or
cmp
push
daa
sbb
inc
in
insb
adc
or
sbb
stos
jnp
and
in
test
nop
insb
push
sub
shrb
into
sub
in
shll
and
push
popa
sbb
call
icebp
mov
shrb
jne
add
push
lock
push
pop
sub
ss
xor
add
xchg
sbb
ret
add
pop
test
adc
arpl
int3
pop
cmp
js
sub
or
mov
sbbb
push
push
pop
dec
xor
insb
mov
dec
push
cmpsb
dec
popa
lahf
cli
je
idivl
adc
cmp
add
stc
jge
inc
test
xor
push
jg
xorl
and
and
mov
ss
jg
sub
cmpsb
stc
rorl
orb
push
xor
je
sub
mov
and
push
or
lea
das
add
std
mov
gs
add
jecxz
add
test
add
adc
add
push
sub
sub
sub
es
jecxz
lret
repz
mov
inc
ss
pop
sub
fsubr
ljmp
mov
rorl
js
jl
push
xchg
clc
mov
shrb
imul
mov
and
xchg
cmp
mov
loop
pop
adc
cld
cmpsb
int3
icebp
add
cs
loopne
dec
cmpsb
clc
inc
push
mov
sub
fld
std
sbb
orl
fstps
sbb
adc
adc
push
cltd
mov
sbb
xchg
insl
or
sub
mov
in
pop
out
mov
jle
cs
jecxz
sbb
ja
push
or
insb
jno
mov
add
mov
xor
dec
mov
ljmp
push
inc
ss
lods
cwtl
lcall
fsubrp
push
push
pop
scas
out
mov
xor
xchg
xchg
enter
mov
mov
xchg
xor
rcl
sarl
xor
lcall
pop
test
shll
ret
insl
adc
add
or
cmp
call
and
notb
outsl
jmp
div
inc
cmp
jae
xor
and
inc
sbb
lods
add
inc
add
pop
dec
inc
daa
ljmp
mov
xorl
gs
jg
stos
sti
jmp
imul
movsbl
add
inc
mov
cli
ds
fldl
icebp
mov
jne
push
aas
clc
push
cmp
je
addb
add
fs
addl
push
aad
add
inc
les
movsb
push
outsl
scas
and
push
adc
int3
test
jmp
test
and
mov
aad
cmp
loopne
sub
loop
inc
cmpsl
sbb
sub
mov
adc
ficoms
inc
dec
jns
sub
filds
pop
inc
outsb
popa
jmp
ss
imul
loop
popa
and
stos
and
and
pop
ret
sysenter
xadd
xchg
into
adc
add
insb
mov
sub
inc
sbb
cmp
push
adc
pop
outsl
ds
pop
sarb
sub
inc
or
pop
push
jl
dec
sub
popa
mov
fstpl
fldl
sar
push
fnstsw
test
je
and
add
jo
cmp
clc
mov
or
fldl
sbb
addl
and
aas
and
sub
sbb
fsubrl
push
paddsb
inc
or
adc
nop
jge
fldz
out
cmp
mov
aaa
js
ljmp
fsubrp
inc
cmp
pop
jge
push
push
or
fldl
mov
jo
imul
outsb
add
add
and
xor
fsts
and
add
outsb
adc
sub
jg
je
dec
je
add
es
or
mov
imul
inc
push
ss
or
pop
push
push
das
sbb
adc
and
push
ljmp
pop
rolb
int3
aam
call
nop
add
pushf
sbb
xor
push
cmp
iret
dec
sub
mov
add
adc
sbb
outsb
movsl
push
xchg
adc
add
push
stc
scas
dec
out
push
in
and
sbb
popf
and
push
mov
and
daa
jg
inc
adc
push
es
insb
pop
jle
xchg
mov
adc
shlb
dec
adc
add
scas
or
sbb
add
pushf
push
push
shll
cld
adc
and
loopne
push
scas
or
adc
jl
or
or
cmp
mov
lret
and
mov
and
scas
int3
scas
sbb
cmp
aaa
lret
lret
sysexit
and
or
sub
pushf
adc
xor
lret
cmp
push
jecxz
inc
xchg
inc
lock
les
std
push
ret
insb
nop
and
lock
pop
pop
movb
fwait
cmpsl
and
push
push
jns
and
push
push
nop
sbb
das
xchg
adc
xchg
or
dec
or
xchg
pushf
adc
sub
jl
adc
je
xchg
in
aam
push
push
xchg
inc
hlt
or
or
divb
push
ja
jb
adc
push
push
push
push
inc
push
and
mov
pop
push
ror
jne
adc
stc
jecxz
adc
adc
adc
cltd
jae
inc
sarb
ja
jbe
xchg
and
lods
push
sbb
repz
sub
dec
pop
jo
cmp
repz
mov
sahf
cmpsl
stc
or
out
sahf
out
jno
xchg
movsb
fsubp
jns
mov
xlat
call
out
sahf
ja
sub
dec
pop
sahf
out
sahf
jo
xchg
mov
jns,pn
movsb
push
or
sbb
and
mov
pop
sbb
shll
xor
mov
dec
gs
xchg
mov
in
sbb
add
and
arpl
mov
push
dec
mov
push
add
subb
push
add
cltd
movsl
xor
jnp
push
leave
push
pop
fwait
lcall
jl
popa
xor
xchg
loop
inc
clc
rorb
test
mov
push
mov
sbb
mov
and
adc
popa
enter
add
xor
mov
cmc
js
sub
fwait
and
sti
ret
test
add
dec
lcall
hlt
add
inc
rcll
pop
das
js
sbb
daa
push
mov
sub
ficoms
push
xchg
iret
stos
push
enter
dec
and
mov
push
imulb
pusha
mov
jl
mov
dec
call
add
lods
lds
sbb
push
and
add
and
mov
filds
hlt
mov
imul
mov
aas
add
mov
mov
pop
loopne
sub
hlt
mov
addr16
mov
ja
add
add
cmp
xor
movsb
scas
jle
sub
in
ds
imul
ret
pusha
dec
rorb
repz
xchg
lret
ret
out
in
push
popa
add
push
sbb
call
dec
in
add
jno
cmp
out
adc
xchg
push
notb
sbb
es
outsl
in
das
and
mov
mov
adc
loope
and
cmpsb
add
xlat
mov
fs
add
andb
addr16
js
int
aaa
mov
xor
faddl
add
cmp
adc
jnp
push
pop
repz
outsl
add
mov
daa
xchg
lock
pop
and
add
out
pop
or
loope
push
jmp
sub
or
or
and
imul
or
inc
and
adc
xor
repnz
mov
test
mov
lret
stos
jne
inc
ret
loopne
pop
nop
push
push
cmp
push
inc
es
movsl
ret
push
icebp
popa
and
in
pop
in
shlb
cmpsb
xor
jb
mov
add
xchg
or
cmp
inc
adc
and
push
fs
sbb
hlt
dec
mov
mov
or
push
xchg
push
dec
adc
sbb
pop
mov
stc
cltd
xchg
add
movsl
xchg
or
sti
lock
icebp
dec
ss
mov
into
mov
lock
and
and
xor
iret
and
mov
in
add
cmp
xchg
push
arpl
sbbb
sub
mov
subb
leave
or
jecxz
arpl
lds
and
mov
pop
dec
addr16
dec
adc
add
cmc
push
hlt
jbe
add
test
dec
or
mov
sub
and
jne
icebp
adc
jo
clc
insl
int3
fwait
mov
imul
aam
sbb
adc
cmc
mov
enter
ret
pusha
sbb
mov
mov
adc
test
adc
and
adc
xchg
add
or
loop
mov
js
and
shll
leave
adcb
jmp
adc
enter
addr16
orl
push
xor
jo
sbb
aad
push
std
cmc
dec
fisttpll
xchg
jecxz
jae
clc
mov
or
aad
ljmp
and
or
ja
test
add
mov
sahf
lahf
add
or
rorb
call
or
lahf
sbb
nop
idivl
dec
adc
test
xor
ret
pushf
xchg
xor
pop
sbb
mov
adc
or
xor
xor
mov
stos
and
adc
in
add
subb
sahf
and
in
or
and
add
xorb
dec
mov
mov
add
sub
test
jge
test
pop
sahf
sub
sbb
cli
decl
or
cmp
aaa
or
jecxz
sbb
or
fs
dec
add
andb
push
xlat
cmpsl
sbb
adcb
mov
xor
in
rcrl
or
shl
add
add
xor
jle
xor
ret
test
test
iret
lret
add
jae
push
push
or
push
xchg
cmp
mov
loope
cmpsl
inc
mov
add
and
mov
or
xchg
xor
mov
imul
bound
pop
mov
adc
les
int
or
lea
dec
andb
aam
sbb
shlb
in
cmp
inc
mov
push
add
add
or
xchg
popa
sub
xchg
push
imul
pushf
nop
jo
push
cmc
fsincos
dec
js
shl
pop
adc
into
xlat
mov
arpl
xor
dec
aam
imul
ljmp
inc
xchg
push
push
add
push
or
pusha
sbb
push
xlat
sahf
fsubr
add
daa
cmpsl
orb
shrb
add
clc
xchg
mov
aad
mov
mov
inc
inc
jno
mov
xchg
sbb
sbb
aam
sbb
xor
shll
out
lcall
sub
jne
fldl
fucomi
push
push
mov
fmull
or
fstl
sbb
sub
dec
sbb
ret
aaa
inc
add
stc
jo
je
push
jp
add
shll
call
and
inc
mov
in
cwtl
pop
xchg
aam
mov
push
mov
inc
sub
sub
lret
mov
loopne
adc
test
adc
pop
lods
push
dec
push
inc
dec
sbb
inc
adc
mov
mov
add
push
push
xchg
mov
xor
in
js
andb
dec
imul
push
andb
leave
in
and
test
mov
add
inc
enter
push
or
xchg
pop
xchg
ret
ret
les
mov
cmp
loopne
jae
stos
inc
inc
jbe
adc
pop
jmp
adc
xchg
add
dec
testl
inc
mov
insl
cmp
dec
or
jmp
sti
sub
and
add
sbb
pop
lock
adc
pop
in
rorl
or
lea
adc
popa
lods
mov
adc
int
call
lret
xchg
int
push
ljmp
js
pop
stos
adc
jecxz
repz
rorb
or
call
loopne
subl
add
aam
dec
outsb
mov
xor
sub
cmp
decl
adc
jl
xor
jmp
cmp
jl
or
sbb
popa
out
decl
jp
adc
cmp
cmp
je
mov
mov
push
add
adc
jmp
movb
mov
push
cltd
pop
idiv
hlt
sbb
inc
cmpsl
cli
mov
push
les
movups
sbb
xchg
nop
xor
mov
cmpsl
pop
xchg
mov
mov
mov
jo
ljmp
jmp
orl
add
dec
inc
push
lock
stc
push
lock
hlt
incb
sub
sbb
mov
cmp
cmp
inc
repnz
push
mov
dec
faddl
pop
cmc
mov
enter
icebp
loope
jne
notb
or
push
inc
cmp
push
push
arpl
imull
inc
push
dec
les
mov
imul
fisttpll
enter
mov
lea
fistpl
adc
cmc
or
js
int3
pusha
shlb
xchg
rorl
mov
gs
adc
movsl
or
lea
jl
insb
or
or
shll
test
xor
mov
cvtpi2ps
repz
call
mov
sbb
sub
sbb
jmp
push
push
and
lods
dec
lods
adc
shlb
outsb
push
dec
fwait
lcall
jecxz
mov
push
sbb
out
je
push
pop
pop
or
pop
inc
or
lock
in
and
push
jge
jecxz
subb
addr16
pop
sbb
cmpsb
jns
xor
enter
movsb
js
enter
in
push
dec
and
sbb
push
xchg
pop
and
in
repnz
push
push
sbb
mov
xor
mov
sbb
icebp
and
es
les
push
dec
imul
repz
aam
mov
aam
inc
mov
dec
inc
dec
aam
shr
mov
and
push
out
xchg
or
inc
loopne
or
xor
mov
nop
fisubl
push
add
in
mov
lret
pop
daa
pop
xor
sub
or
jns
ret
aaa
stc
adcl
mov
in
adc
inc
adc
xor
int
fisubs
dec
jb
mov
and
dec
nop
pop
cwtl
dec
jb
mov
jb
leave
adc
stos
mov
sub
leave
leave
movsb
pushf
xchg
mov
stos
jl
int3
ret
fwait
in
mov
pop
leave
add
jb
push
pop
pop
mov
inc
add
push
scas
add
fcoms
sbb
ret
sti
sbb
mov
jo
and
scas
push
in
sbb
xor
mov
xor
mov
push
inc
sti
fmuls
leave
or
dec
rol
push
push
movsb
dec
inc
mov
mov
fldz
ret
repz
mov
xchg
jecxz
inc
mov
or
jno
mov
add
mov
scas
test
xor
fcoml
dec
adc
into
test
inc
xor
insb
lock
fs
lods
and
vcvttsd2si
or
inc
mov
mov
ljmp
mov
pop
enter
fadds
ds
pop
pop
pusha
pop
into
xchg
push
or
jae
xchg
add
xchg
shrb
mov
or
inc
xchg
popf
xor
aam
fidivrl
pop
fcoms
loop
outsb
popa
ljmp
scas
xchg
jnp
in
push
add
or
pushl
in
jecxz
fsubrs
xchg
push
int
mov
and
sub
test
in
rol
xor
sbb
inc
jb
cmc
lock
mov
insl
cmc
add
mov
dec
or
adc
mov
nop
jae
int3
pop
cltd
cmp
push
xor
dec
cmpsb
xchg
fs
jecxz
adc
and
mov
mov
xor
ret
add
add
xchg
push
cmp
adc
jnp
mov
adc
sub
fsubrs
sub
ds
add
aam
xor
dec
or
movsb
and
and
cmp
jp
out
push
or
pop
dec
and
push
inc
sub
pop
mov
sbb
or
dec
bound
mov
int3
add
pushf
mov
xchg
add
xchg
pop
popa
sub
loop
xor
push
jp
fwait
loope
orb
dec
cltd
testb
sub
and
jl
sbb
pop
fisubrs
hlt
and
or
or
add
push
imul
cwtl
adc
sub
fcomps
mov
stc
and
in
adc
push
setle
or
push
ret
sub
sub
in
and
clc
pop
adc
sbb
pop
sub
inc
pop
sahf
dec
call
inc
out
test
stos
loop
outsl
mov
jb
fsubrs
cmp
ja
and
imul
pop
xchg
shll
sub
cmp
push
push
movsl
lods
sbb
ds
sbb
mov
or
cmpsb
clc
loop
bound
sub
decl
xlat
lret
and
sbb
jb
push
mov
int3
cmp
aam
pop
xor
push
pop
jmp
add
arpl
inc
call
add
pop
incl
jl
insl
enter
pop
adc
lret
sub
cmp
test
push
or
jmp
mov
fwait
push
pop
xchg
sbb
inc
je
stc
and
and
loopne
mov
cmp
faddl
sahf
add
xlat
pop
cli
inc
lds
cli
pminub
cmp
stos
mov
push
loopne
push
sbb
mov
cli
or
inc
test
mov
add
sbb
xchg
mov
cmp
sarb
sahf
push
jmp
push
xchg
inc
cwtl
arpl
push
lcall
loopne
inc
pop
jns
xor
fisttpl
ret
js
movsl
mov
jecxz
lcall
js
jns
movsb
sbb
rcll
sbb
adc
loopne
sarl
cmc
adc
push
pop
cmpl
cs
cmp
ljmp
inc
pop
mov
mov
test
popa
push
cmc
clc
push
xor
hlt
inc
push
cltd
adc
pushl
pushf
pop
outsb
adc
rorl
popa
inc
fs
xchg
cwtl
inc
mov
push
xchg
call
aam
insl
fwait
push
nop
loope
ja
fsubrs
iret
pop
xor
jo
ljmp
sbb
cmp
cmp
mov
mov
shl
insl
mov
repz
xchg
inc
mov
dec
push
je
or
out
loop
mov
sub
shr
outsb
es
test
sub
xor
and
sarb
sbb
loopne
inc
rclb
ret
cmp
out
out
je
cmp
ds
sub
pop
or
mov
aas
cli
adc
pop
push
pop
pop
xor
aam
loopne
loopne
pusha
out
push
outsb
push
mov
mov
filds
mov
aam
or
add
mov
daa
pminub
xchg
jne
ja
insl
add
xchg
jmp
pop
into
mov
add
jb
jl
xchg
cmp
subl
or
cmp
push
gs
push
cmp
in
cmp
inc
cmp
xchg
sub
xor
ljmp
pop
stc
jns
lret
sbb
adc
cmp
dec
inc
sarb
mov
insb
and
scas
mov
or
dec
or
pop
leave
push
and
pop
push
bound
add
lcall
in
je
sub
dec
loope
inc
imul
cmc
xchg
xchg
jge
pop
std
test
mov
inc
push
subl
testl
jle
pop
dec
fwait
movsl
fbld
rcrb
movsl
je
jl
cmp
jle
dec
inc
add
xchg
dec
and
mov
fwait
xchg
jge
xchg
sbb
mov
cmpsl
sbbl
in
add
dec
sbb
and
lret
int3
lods
add
sahf
sub
mov
sub
add
in
push
add
xchg
cwtl
cmp
roll
pop
mov
and
jle
add
or
mov
ljmp
imul
lret
or
and
add
sub
or
add
mov
das
add
out
loopne
rcr
and
cmpb
push
xchg
pop
dec
test
lcall
test
add
enter
add
mov
or
jne
loopne
push
sbb
call
or
cwtl
or
jle
movsl
loope
aaa
push
mov
xchg
and
pop
pop
rcrb
mov
cmp
icebp
lea
dec
xchg
push
mov
sub
push
pushf
sub
or
addr16
or
fdivrs
mov
in
and
imul
sarb
int3
div
scas
push
cltd
or
leave
xor
push
aam
dec
es
push
jno
and
dec
testb
icebp
aam
fisttpll
inc
in
addr16
in
push
add
cmpsb
cwtl
push
jmp
out
imul
push
mov
es
and
movsb
ds
orl
or
loop
or
pushf
lods
in
lock
add
arpl
jl
loop
push
rcrb
rclb
or
es
loopne
mov
gs
push
icebp
jne
jns
sbb
in
push
or
mov
daa
sbbb
dec
add
js
fimull
sti
cmp
mulb
inc
xor
mov
in
or
or
fwait
xor
xchg
in
popa
es
jo
adc
pop
mov
xchg
add
daa
push
pushf
ror
add
dec
xchg
scas
adc
aad
and
mov
insb
loopne
add
gs
mov
adc
sbb
dec
andl
push
fcompl
addl
sbb
ljmp
push
lods
mov
inc
pop
lret
sub
jge
jb
shll
pop
mov
add
push
cltd
jb
or
test
cmp
mov
pop
pop
mov
andb
xchg
js
cmp
sti
inc
adc
push
or
pop
inc
mov
addl
ret
dec
inc
inc
cwtl
clc
lock
push
dec
jb
sub
cmp
xor
xchg
push
inc
cmp
jae
mov
mov
incl
pop
mov
add
jmp
push
sub
xor
push
or
mov
sub
or
repnz
push
or
xchg
inc
mov
lret
punpckhdq
jo
clc
cmpsb
lock
pop
mov
sbb
shll
or
pop
cmp
je
fstps
fs
dec
push
inc
rcrb
cmp
leave
jecxz
jns
es
les
out
arpl
add
and
bound
mov
dec
pop
xchg
mov
mov
jecxz
mov
clc
pusha
dec
or
push
leave
out
gs
outsb
aam
divl
sub
sbb
pop
shlb
or
js
leave
or
movsb
std
in
aaa
pop
mov
and
push
sub
or
cs
xchg
adc
pusha
or
mov
push
pop
add
push
sbb
bound
cmp
inc
push
mov
inc
pop
adc
shlb
xor
into
repz
sub
adc
js
in
add
xchg
nop
imul
or
adc
pusha
cmp
mov
cmp
or
filds
cmpsl
loopne
lods
lock
jl
jge
fcmovnb
lret
stos
push
dec
jb
fwait
addl
dec
scas
mov
ja
loope
iret
mov
imul
jo
adc
adc
sbb
out
lcall
cmp
pop
pop
xor
test
inc
push
and
fsubrs
adc
sbb
pop
pop
addr16
xor
enter
inc
and
stc
and
or
shll
lods
sbb
inc
ficompl
bound
movsb
mov
movl
sub
mov
mov
jge
imul
push
pop
arpl
shll
inc
fwait
movsl
leave
push
nop
or
mov
xor
dec
jb
stos
dec
inc
mov
lds
jne
aam
xchg
rcr
mov
nop
xchg
shl
pushf
pop
mov
jecxz,pt
sub
or
mov
movl
jne
inc
pusha
add
sbb
mov
lcall
jl
addb
orl
icebp
mov
mov
imul
add
movsl
dec
cmpb
xor
fdivrs
inc
out
mov
out
sbbl
or
jmp
aas
loope
cmc
mov
ljmp
add
int
ds
add
jp
notb
das
mov
iret
mov
loop
mov
inc
sub
test
mov
or
add
jnp
ja
in
jne
inc
pop
fnstcw
xor
out
inc
and
dec
addr16
pop
or
mov
dec
mov
push
or
or
sub
sbb
push
fdivrs
or
or
inc
jb
insl
push
enter
sbb
or
imul
addl
mov
xor
inc
cld
or
dec
cltd
inc
lret
pop
add
ficoml
push
cwtl
mov
lods
and
mov
lds
xchg
ds
xor
add
push
and
daa
push
add
xor
leave
xor
sbb
and
cs
shrb
orl
pop
stc
xor
mov
or
jmp
out
or
fisttpll
std
sub
jo
add
adc
int
iret
in
jecxz
jl
dec
sbb
sub
adc
pop
add
add
loope
mov
sbb
jo
push
mov
shll
pop
jo
push
add
sbb
inc
scas
push
inc
sbb
cmp
fwait
stc
xor
push
fisubs
ss
mov
or
jae
push
inc
movsb
lcall
sbb
ss
jbe
mov
add
test
xor
shl
xchg
les
xor
or
ss
js
movsl
pop
mov
or
enter
push
scas
das
imul
or
dec
and
mov
inc
cmpsl
mov
adcl
ror
iret
lret
pop
push
shll
sub
loopne
or
inc
sbb
push
imul
push
dec
mov
pusha
adc
inc
dec
inc
cmpsb
arpl
and
std
and
sbb
ljmp
adc
andb
sbb
xor
in
cmpsl
and
push
push
and
push
sbb
shrl
mull
add
push
sub
and
pop
lods
lods
jmp
ljmp
pop
test
fidivl
shll
add
inc
iret
lcall
loop
jo
ja
add
addr16
and
sub
mov
leave
xadd
test
or
outsb
xor
subl
stc
jno
sub
hlt
cmp
add
cmp
push
lock
xlat
in
lods
sub
clc
addl
pop
sbb
inc
mov
pop
inc
lret
add
jl
pop
push
lods
xor
xchg
sti
iret
push
jo
sbb
imull
sbb
testb
scas
pop
imul
or
mov
loop
and
jmp
movsb
xor
add
test
xor
xchg
cltd
push
push
add
repnz
add
and
add
mov
aad
and
inc
insl
arpl
or
mov
or
rolb
mov
dec
dec
push
sbb
push
mov
cmp
and
inc
or
adc
push
xorb
addl
loopne
push
cwtl
xchg
pop
sbb
or
or
sub
mov
test
adc
ja
mov
inc
test
push
pop
adc
negl
test
xor
ja
push
push
pop
push
ret
dec
out
subb
add
push
or
fists
sahf
clc
mov
mulb
hlt
push
and
sub
and
movsl
sub
cmp
xchg
sbb
cmp
cmp
adc
xor
int3
aam
mov
loopne
mov
add
ret
adc
leave
mov
pop
ljmp
mov
or
das
sbb
push
cmpl
add
lcall
and
insb
cmc
xchg
cmp
cs
stos
mov
inc
cmpl
ret
inc
incl
xchg
push
or
inc
arpl
mov
adc
or
mov
cmp
pop
push
dec
mov
nopl
mov
rol
push
or
push
jb
test
xchg
push
cmp
rorl
jp
mov
hlt
pop
or
ds
cmp
cmpsb
mov
adc
push
xor
push
jbe
out
pop
push
mov
clc
mov
lock
cmp
ja
or
sbb
dec
jmp
mov
pop
mov
push
add
add
cmp
and
jbe
imul
mov
adcb
add
inc
dec
pop
cmp
stc
stc
shl
and
push
js
adc
jb
jmp
xor
inc
xchg
cld
or
outsb
jmp
adc
jecxz
and
sti
stos
lock
pop
and
pop
cmpl
xor
js
inc
fcomps
lea
cmp
jo
bound
frstpm(287
xchg
icebp
jb
jmp
in
notl
sbb
fildl
jmp
pop
inc
add
rol
test
ja
xchg
add
cwtl
dec
jl
jne
mov
add
push
mov
or
or
xor
pushf
or
js
loopne
stos
jb
loopne
daa
xor
subb
mov
and
add
int3
add
iret
nop
pop
data16
mov
add
rcrb
adc
jo
jo
loopne
movsl
repz
or
cmp
pop
in
test
xchg
insb
jae
das
insl
andb
add
sbb
and
or
js
mov
add
sbb
ljmp
fmuls
sub
and
push
pop
movsl
pushf
insb
inc
test
mov
push
mov
cli
dec
sub
popa
xlat
sbb
cmc
adc
add
adc
dec
and
mov
mov
xchg
in
xor
add
pop
call
dec
and
ret
aad
xorb
dec
sti
ficoms
adc
or
and
ja
mov
xor
add
lods
add
push
and
in
fldl
hlt
dec
pop
popa
and
fdivrs
add
add
sub
pusha
mov
lods
push
mov
sbb
xchg
xchg
inc
ds
push
sub
popf
add
lock
or
mov
lock
ret
cmpsl
imul
push
or
inc
xchg
and
sub
xchg
pop
je
pop
outsl
lods
pop
xchg
pushf
test
or
out
faddl
sub
and
or
dec
dec
popa
outsl
push
loop
jle
add
outsb
push
mov
dec
adc
test
and
add
push
mov
popf
rorb
mov
subb
arpl
adc
push
add
add
rorb
fninit
movsb
xchg
and
sub
xor
cmp
sbb
loope
inc
inc
aam
cmp
cltd
and
xor
ret
push
ds
add
mov
popa
lods
sbbl
movsl
test
push
jp
rorl
xlat
idivb
sub
sbb
mov
les
xor
and
loopne
aaa
mov
or
cmpsl
cltd
sub
fsubrs
rolb
mov
ret
push
lahf
dec
cwtl
inc
orl
dec
js
inc
push
or
add
xor
lea
dec
add
cltd
dec
xchg
pop
clc
xchg
fdivs
inc
jmp
aam
andb
inc
aaa
loopne
add
aad
pop
addb
test
push
xor
ret
mov
pop
rorb
sbb
sbb
js
push
or
adc
scas
xor
int3
lret
add
scas
add
popl
adc
mov
mov
loop
lock
and
xchg
mov
loopne
out
lods
add
inc
pop
fwait
xchg
mov
xchg
dec
shll
lahf
loopne
adc
add
aad
cwtl
and
in
es
loopne
or
push
imul
pop
out
mov
rcll
jmp
dec
mov
push
or
add
xor
les
adc
or
pop
leave
inc
ss
je
xor
dec
xchg
imul
bound
dec
rolb
nop
mov
shl
inc
xchg
xchg
xchg
adc
mov
iret
mov
int3
incl
mov
imul
add
out
mov
pop
daa
add
fmul
mov
pop
cmpsl
lret
stos
adc
test
ret
and
int3
pusha
out
push
test
pusha
cmp
xlat
pushf
pop
sub
xchg
das
push
adc
or
and
add
loopne
ret
xor
or
mov
add
xchg
movsb
inc
rcll
push
xorb
jo
mov
push
sbb
popf
test
into
mov
pop
mov
cmp
jb
imul
or
nop
arpl
push
cwtl
int3
rol
xor
popf
xbegin
jne
in
add
or
add
je
jg
inc
or
xchg
testb
push
pushl
add
lods
xchg
xor
sbb
and
mov
movsb
fdivl
adc
fisttps
iret
xor
xor
outsb
mov
dec
imul
inc
dec
push
mov
scas
movzbl
push
or
dec
movsl
push
test
insl
sub
xchg
jmp
jbe
rcrl
mov
and
or
xor
pop
push
inc
sahf
push
imul
push
outsl
sti
push
push
push
jmp
and
or
mov
rcrb
or
scas
jbe
adc
jo
andl
mov
add
movl
ret
xchg
mov
lea
fistpl
movsb
popf
out
mov
mov
inc
rcrb
mov
sub
mov
je
add
loop
dec
stos
cmpl
or
sub
push
xchg
call
cmp
cmp
jbe
cmp
jbe
mov
sbb
mov
int
xor
add
into
aas
jae
out
push
adc
ds
mov
sub
push
add
or
fildl
pop
push
sub
addl
sbb
fadds
cmp
jnp
add
jne
push
aad
fcmovnb
inc
push
sub
decl
xor
mov
mov
push
sub
mov
push
jle
xchg
stc
cmp
mov
cmp
or
xsavec
das
or
push
in
xchg
mov
mov
add
les
dec
roll
add
jle
test
push
mov
sbb
int3
and
and
adc
popa
add
bound
xchg
negl
mov
xchg
sub
subl
stc
and
cmpsb
imul
or
xchg
outsb
mov
pop
ss
adc
mov
sub
aas
dec
arpl
jge
push
push
inc
dec
adc
arpl
push
and
fsts
adc
test
xchg
and
and
adc
aaa
lahf
or
add
mov
outsb
mov
aad
lret
push
les
lods
lock
mov
and
add
lret
push
add
clc
jle
pop
mov
push
fstpt
jmp
and
loope
sbb
mov
nop
daa
sbb
push
push
scas
pop
adc
and
into
bsf
dec
mov
mov
jmp
test
sbb
fsubs
and
jne
mov
lock
and
movsl
or
outsb
sbb
add
inc
mov
and
adc
xor
test
sete
movb
and
int
xchg
jnp
mov
ret
cmp
rclb
inc
xor
in
and
loope
rolb
mov
jmp
mov
arpl
dec
rcr
stc
pop
cli
push
xor
and
lea
add
jne
pop
mov
rep
out
in
dec
sti
mov
bound
push
andl
xchg
mov
inc
sti
adc
stc
xchg
ret
adc
jae
test
pop
insb
jmp
push
adc
insb
sbb
mov
in
lock
inc
mov
aas
jg
rorb
nop
cltd
testl
add
movsb
aaa
jge
arpl
loopne
jmp
sbb
clc
inc
lea
push
lock
jne
lret
sub
adc
inc
pop
sbb
stc
inc
dec
out
std
push
cmp
adc
or
add
sub
mov
dec
xor
andl
repnz
aas
inc
aad
loopne
ja
push
mov
and
mov
loop
mov
jmp
inc
add
and
insl
das
lret
jo
dec
mov
sahf
div
xchg
dec
mov
mov
testb
lock
and
in
scas
mov
test
or
adc
pop
add
mov
sbb
popa
xor
sub
loope
movsl
mov
ret
jecxz
pushf
push
xor
xor
dec
aas
cmp
inc
lea
lret
in
sbb
push
add
sub
addr16
lcall
cld
ja
mov
sbb
pop
inc
push
lret
push
and
movsl
or
inc
mov
adc
push
aas
call
mov
mov
popf
cmp
std
mov
push
js
dec
popf
mov
adc
jp
jge
push
or
mov
rol
sub
inc
sar
cmp
das
sbb
sete
push
push
popa
cmpsl
in
sbb
cmp
mov
mov
sbb
jo
inc
fisubs
or
mov
xor
popa
adc
xor
sub
or
sti
push
mov
sub
movsb
js
adc
mov
cmp
xlat
mov
sbb
in
jo
jle
add
mov
xchg
nop
mov
dec
inc
dec
pop
pop
mov
push
cs
out
and
ret
jecxz
pop
cmc
es
out
popf
jge
movsb
push
adc
pop
clc
jne
loopne
test
or
cmp
lods
add
cmp
xor
and
add
mov
pusha
and
daa
pop
push
push
adc
jne
inc
and
test
cmc
pop
scas
insb
ds
bound
push
or
and
cs
jl
pop
out
mov
shll
sub
dec
stc
shll
push
pop
cmp
adc
jns
cmp
sbb
cmp
push
popa
jecxz
fadds
pusha
mov
sub
cmp
das
push
mov
adc
mov
xlat
push
imul
inc
shr
push
push
or
test
add
loope
in
imul
packsswb
dec
in
inc
push
jg
jp
shll
or
push
stos
icebp
push
or
add
ret
xor
ret
and
ret
outsb
sub
push
xchg
stos
icebp
adc
movsb
mov
xor
push
sub
lea
ret
jge
xchg
ja
mov
jge
int
aas
xor
cmp
ljmp
jne
lock
cmp
or
int3
int3
lods
insb
int
jae
mov
xlat
jl
mov
pop
inc
cmp
call
icebp
push
mov
addb
movsl
rorl
jge
aam
fwait
push
cmp
jbe
mov
call
shr
out
jb
fisubs
lret
sub
mov
vmread
xchg
enter
js
in
mov
or
insl
shl
push
ffree
cmc
mov
pop
movl
add
aam
push
ss
adc
adc
inc
mov
push
stc
lock
mov
leave
pop
jp
mov
dec
mov
xor
mov
ljmp
ret
push
xchg
insb
sarl
push
push
or
std
mov
out
inc
iret
dec
pop
mov
fwait
mov
cmp
sub
add
push
push
xchg
data16
sub
sbb
adc
in
std
test
add
sbb
push
scas
mov
cmp
sbb
pop
mov
loop
hlt
or
push
dec
std
cmp
lcall
inc
sbb
sbb
push
mov
jl
mov
ds
std
inc
cmp
repnz
adc
and
add
mov
pop
pop
mov
sti
sbb
rep
movsw
push
cld
movsb
popa
sub
push
and
jg
jg
or
mov
shr
mov
inc
mov
imul
incb
movb
cmpb
insb
dec
loopne
js
and
and
push
pop
rcrb
sbb
in
lret
ja
sbb
mov
mov
ss
push
out
add
jb
in
mov
and
push
cld
je
lock
sahf
push
push
dec
pop
sbb
xchg
lea
jmp
sbb
mov
sub
jmp
sbb
adc
cmpsl
es
shlb
cwtl
jae
lock
lods
lods
jge
inc
add
call
sub
addr16
dec
or
ja
dec
test
or
push
push
pop
jo
mov
sbb
sbb
dec
cmpsl
push
imul
mov
daa
jecxz
push
inc
sbb
or
and
or
jno
cmp
push
add
mov
rorb
lods
mov
add
rcrb
dec
add
xor
mov
cmpsl
and
or
mul
out
fildl
adc
push
leave
leave
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
fucom
out
jmp
and
jne
fwait
daa
push
lds
add
pop
int
test
adc
push
sbb
push
and
sahf
out
sahf
dec
push
pop
gs
jns
out
je
jle
mov
jns
out
xchg
xchg
pushf
mov
cmpsb
stos
mov
mov
jns
leave
into
rcr
fbstp
out
loop
sub
add
testb
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
dec
or
and
gs
js
push
sub
loopne
or
jge
xchg
add
or
and
int3
rclb
or
jecxz
lds
mov
add
pop
sub
and
pusha
lock
je
inc
sub
jae
xchg
or
js
pop
nop
imul
in
push
fistpl
mov
mov
data16
imul
pop
dec
add
fsubrs
add
pusha
adc
mov
mov
sbb
dec
js
mov
popf
mov
xorb
xor
lret
jae
xchg
sti
add
push
xchg
pushf
xchg
adc
or
test
in
lret
or
sbb
add
jne
push
out
cmp
lock
je
push
sbb
pop
mov
adc
inc
mov
add
add
adc
add
jp
popa
jmp
xor
fadds
inc
pop
popa
jl
nop
js
sbb
adc
sub
or
push
cmp
imul
dec
repnz
mov
xor
into
insl
pop
js
dec
xchg
jecxz
cmp
insb
lock
dec
or
and
mov
std
and
jge
lock
sbb
fcoms
cs
test
push
jmp
push
mov
cmp
pop
sahf
rolb
inc
sbb
or
push
ss
sub
sbbl
add
movsb
bound
jne
or
sti
push
push
push
pop
loopne
or
popa
aas
jne
dec
mov
jbe
cmp
xchg
pop
pop
jmp
or
add
sbb
sbb
ljmp
aas
inc
mov
or
fcmovnb
inc
lcall
loopne
mov
sbb
sbb
dec
and
inc
test
inc
xchg
jns
adc
and
jno
or
or
jl
mov
xchg
adc
je
pushf
xor
gs
lock
jbe
xchg
xchg
jmp
adcb
clc
popf
in
rclb
sub
and
or
cmp
push
sub
adc
inc
sarb
adc
adc
inc
mov
push
dec
xor
cltd
mov
and
pop
stos
add
dec
add
cmp
jnp
push
mov
fmull
push
cwtl
loope
or
xchg
enter
in
je
push
mov
gs
mov
pop
push
push
in
test
lods
push
add
ret
or
lcall
xor
ret
add
sbb
or
sbb
shlb
lock
call
mov
add
dec
repz
ret
pop
dec
sti
and
jo
lret
hlt
adc
cmp
stos
jecxz
mov
mov
xchg
xchg
loopne
cmpb
pop
adc
jmp
les
add
push
xor
in
inc
and
pusha
sbb
movsl
cmpl
rol
enter
mov
popa
int3
sbb
dec
shll
int3
enter
imul
outsb
or
add
fcomps
xchg
add
or
stos
icebp
andl
in
xor
daa
outsb
cmp
jbe
push
cmpsl
push
bound
adc
xchg
inc
xchg
cmp
jne
cmpsb
rolb
outsb
fwait
add
in
mov
add
jb
cmp
into
or
dec
cmp
xchg
pop
pop
push
repnz
testb
pop
std
cs
xchg
mov
shll
add
pop
mov
bnd
nop
push
clc
popa
dec
inc
cmp
add
inc
cmp
loopne
sub
in
push
mov
les
dec
negb
lock
xchg
out
sbb
loopne
sub
fs
shl
sbb
xchg
xor
in
add
and
enter
xor
or
lds
shl
testl
sti
ret
negl
shlb
push
dec
orb
mov
and
les
push
pusha
add
xchg
pop
push
call
push
or
pop
pusha
xchg
or
push
push
mov
add
mov
jp
dec
lret
pusha
cltd
fnstsw
pop
adc
ss
ret
stos
xor
push
push
insb
cmpsl
flds
mov
mov
icebp
aaa
mov
xor
xchg
pop
das
dec
lods
xor
adc
loope
loope
jo
fwait
or
rcrb
cwtl
and
arpl
arpl
mov
addl
xchg
adc
call
rclb
sbb
nop
sbb
mov
mov
sbb
je
dec
dec
pusha
jo
lods
fdivl
xchg
daa
mov
repz
pop
pop
popa
xchg
xchg
adc
pop
add
test
jo
inc
mov
xchg
and
jmp
xor
sub
jns
insb
call
mov
rorl
and
sbb
sub
xor
mov
push
leave
sbb
psllq
popf
loop
lret
mov
inc
mov
icebp
out
push
and
adcb
xor
sub
inc
or
and
mov
aas
sarb
je
dec
cmp
aad
dec
mov
sub
add
stos
pop
sbb
mov
je
in
jmp
pop
mov
cmp
pop
insb
sbb
nop
mov
arpl
lea
pop
negl
or
je
xor
mov
cmp
jp
fisubrs
jp
dec
rolb
xchg
add
push
dec
loope
add
jle
hlt
jmp
pop
inc
push
or
jne
cmp
or
je
and
sti
or
adc
fisubl
rcrb
shrb
mov
mov
mov
xchg
in
adc
xchg
jb
push
in
xchg
xchg
mov
inc
and
sti
call
push
push
ror
inc
popf
lcall
shlb
inc
push
and
out
mov
dec
inc
mov
cltd
jne
adc
push
cmp
or
jbe
addl
sub
inc
xchg
lahf
scas
cmpsl
jl
ja
mov
dec
xor
jl
pop
adc
ss
imul
and
pop
faddl
add
push
and
arpl
divl
sub
popl
js
pop
and
addr16
mov
mov
and
push
add
testb
jp
xor
xor
push
inc
jb
xor
pop
jg
adc
mov
push
divl
std
pusha
or
mov
orl
sbb
loope
daa
xchg
sbb
or
and
xor
sbb
leave
and
and
adc
mov
add
pop
mov
div
and
jl
push
pop
cmpb
scas
jo
lret
sbb
lret
inc
pop
pop
cmp
or
or
stos
sti
pop
dec
push
xor
cmp
jle
mov
add
fbstp
fnstenv
pop
mov
js
lea
loope
stos
cmp
jae
sub
push
jp
cmp
imul
cmc
add
jg
or
cmpb
jge
cli
scas
xor
sub
movsbl
mov
adc
out
adc
inc
sbb
and
dec
ret
add
movzbl
sub
pop
cmpsl
in
imul
xor
shl
inc
popa
cld
xor
add
xchg
pmulhuw
mov
and
push
es
xchg
aas
cwtl
pushf
nop
xchg
inc
push
fdiv
mov
fs
add
test
fldl
and
frstor
jg
mov
frstor
pop
enter
xchg
lret
aam
or
xor
loopne
or
popf
push
push
mov
and
in
sbb
int3
es
cmpsb
or
sub
and
popf
inc
test
pushl
jno
loop
lea
cwtl
mov
push
mov
test
pop
ret
jl
in
and
xchg
je
and
and
add
push
incl
cmp
jl
sub
lea
cmp
test
add
adc
xor
lea
cmpl
push
sbbl
fstpt
es
iret
pusha
call
cmpsb
repnz
lods
sub
inc
pop
pop
and
test
imull
jnp
stos
xchg
lods
push
pop
jl
jmp
out
push
inc
jne
lods
adc
add
sbb
call
mov
je
or
pop
jne
jge
and
insl
lret
adc
adc
jmp
rorl
js
lock
dec
int3
daa
cltd
js
jp
mov
das
sub
mov
xchg
insb
je
js
or
mov
sbb
test
fwait
sbbb
mov
sub
or
mov
and
cmp
cmpsb
or
push
xor
push
lret
loop
push
pop
cmp
or
pusha
loopne
cli
movsl
int3
repnz
cld
cwtl
add
mov
lea
push
xchg
jecxz
pop
push
fistpl
sbb
mov
dec
pop
push
and
sub
xor
hlt
mov
decb
pop
add
pop
pop
sub
bound
xchg
call
adc
adc
je
cmp
jne
push
inc
pop
inc
push
out
les
inc
push
fcompp
inc
dec
sbb
sbb
push
and
mov
push
mov
xor
adc
xor
hlt
push
clc
mov
movsb
outsl
nop
mov
loop
or
mov
pusha
fadds
cld
mov
cmpl
xor
cld
inc
in
and
push
ret
sub
lock
adc
xchg
mov
jnp
call
lcall
xchg
mov
loope
or
bound
push
ss
inc
cwtl
add
dec
out
mov
or
xor
xchg
xchg
loope
mov
sub
mov
jnp
popl
inc
xchg
addr16
jge
dec
int3
mov
mov
jb
or
call
xor
xor
je
pop
push
shrb
pop
aad
and
sub
jne
push
dec
cmc
ds
adc
jl
adc
scas
adc
mov
bound
sub
add
pop
add
inc
mov
inc
sbb
dec
loopne
subb
arpl
sbb
test
push
push
mov
into
pop
imul
pop
xorl
test
jne
pop
xor
jl
insb
jno
lock
lds
clc
or
pusha
mov
loop
push
and
test
adc
inc
ret
push
repz
rorl
lret
xlat
cmp
push
and
sbb
xor
push
or
xor
push
jno
iret
sbb
jo
and
roll
negb
shrb
aad
ss
ljmp
xchg
and
push
jno
mov
add
push
pop
insl
popa
mov
or
pop
or
into
or
cmp
inc
sbb
aam
out
adc
std
loop
sbb
add
add
sbb
or
fistpll
js
add
or
movsl
andl
inc
and
hlt
and
scas
movsb
jmp
pop
sarl
jne
movsl
pop
mov
jbe
mov
xchg
and
or
dec
test
xchg
test
insb
add
xor
mov
lcall
add
cld
fists
fsqrt
add
jmp
lret
sbb
pop
sub
and
pop
es
xchg
call
dec
pop
dec
jbe
mov
aaa
test
mov
in
push
cs
jmp
sub
lret
les
fsubrs
lcall
adc
sbb
mov
rorb
loopne
iret
cmp
jmp
insl
je
add
add
pop
ljmp
jns
jne
jnp
fwait
add
sarb
add
lea
xor
and
pop
sbb
push
adc
pop
imul
or
gs
out
xchg
test
es
stc
ret
in
add
and
pop
and
xchg
pushf
jns
mov
rolb
adc
rcl
mov
xchg
icebp
cmpl
dec
dec
cmp
mov
mov
dec
inc
pop
fstps
js
invd
sub
push
pop
loop
mov
inc
daa
push
repz
add
inc
cmpsl
sub
lock
add
lret
sbb
add
lock
repnz
and
addl
add
jae
push
or
test
mov
push
add
ret
sbb
lods
sub
mov
or
lods
push
mov
shrl
and
sahf
lods
cmp
test
push
push
cmpsb
add
xor
add
inc
and
cwtl
in
orl
inc
push
sbb
out
push
cs
push
sbb
mov
sbb
or
sbb
out
xchg
clc
imul
ss
inc
cwtl
popf
aas
push
fnsave
mov
add
fstl
fldz
fcomp
filds
roll
sbbl
faddp
push
insb
jp
jp
mov
inc
inc
test
or
hlt
mov
enter
xchg
xchg
dec
jo
lock
or
xor
lock
inc
test
test
adc
cmpsb
nop
adc
js
pop
inc
sub
sbb
push
test
jge
xchg
or
push
outsl
inc
imul
xchg
icebp
mov
mov
mov
fistpl
bound
in
fs
mov
inc
test
lcall
pop
cmp
dec
sub
iret
add
pop
ss
xor
cmpsb
arpl
fwait
inc
jge
push
or
lock
test
outsb
imul
xor
push
cld
push
jp
jecxz
fmuls
push
mov
imul
sar
lahf
out
fimuls
enter
out
sahf
imul
xor
loopne
in
fadd
jnp
lods
lahf
push
dec
rorl
mov
sub
adc
ret
inc
scas
lret
sub
cmp
inc
sub
sbb
sub
push
ljmp
xchg
jl
stos
ret
gs
cmp
push
jmp
icebp
xorb
inc
xor
push
mov
daa
lods
mov
loopne
mov
and
add
imul
inc
add
gs
mov
push
aas
out
push
jmp
or
mov
dec
add
add
mov
mov
rcrb
push
sbb
cs
nop
cwtl
loopne
add
movsl
movsl
pop
jp
inc
jo
out
popf
and
or
cmp
std
je
js
mov
shlb
and
jno
testb
and
sub
arpl
les
pop
sti
outsb
ss
mov
pop
sub
add
movsl
sti
inc
sti
add
push
cld
clc
add
or
inc
jae
add
aaa
add
jb
jbe
test
out
jmp
cmp
insb
pop
inc
ficompl
je
test
dec
cmp
jb
push
and
mov
jb
adc
dec
js
sahf
or
mov
xchg
lock
xchg
cwtl
adc
or
dec
cmpsl
mov
dec
hlt
cmpsb
test
outsb
cld
orb
pusha
sbb
imul
sub
popf
jmp
lea
xchg
jmp
hlt
sahf
xchg
popa
pusha
cs
pop
jp
jbe
push
stos
mov
or
adc
cmpsb
in
imul
inc
add
mov
add
enter
fs
fadds
lock
mov
mov
inc
pusha
rorb
call
push
pushl
push
add
sbb
mov
sub
or
popf
nop
lcall
or
sbb
sub
inc
in
and
pop
push
jnp
cmove
es
mov
mov
stos
jge
cmp
jne
js
pop
sub
nop
shrb
sbb
adc
cmp
movsb
add
aaa
test
movsb
xor
insb
shlb
shlb
rcrb
or
mov
lods
add
sbb
pop
xor
push
jmp
cmp
call
ret
cmp
in
and
cmpb
or
xchg
in
xor
push
enter
out
mulb
out
xor
add
mov
adc
fcomp
sub
and
cmp
add
lret
sub
add
and
repnz
push
jb
psraw
and
push
fnsave
outsb
popa
pop
jbe
push
mov
jl
dec
stos
enter
dec
push
push
mov
orb
pop
dec
xchg
setg
sub
dec
ljmp
cmpsl
outsb
idivb
dec
xchg
dec
pop
add
sbbl
les
push
mov
pop
push
inc
ret
sub
setb
rolb
xor
sub
adc
dec
out
mov
testb
mov
inc
inc
adc
push
pop
inc
ret
mov
pop
insl
dec
data16
mov
sub
and
add
loope
inc
scas
call
je
and
push
push
fs
pop
dec
xor
rcr
inc
aam
xor
lret
clc
enter
mov
imul
and
inc
movb
jge
pop
movsl
in
push
stos
mov
dec
mov
js
subl
cmp
push
add
in
xchg
cmpsl
push
push
inc
in
lock
inc
fiadds
xchg
ljmp
cmp
adc
insl
popa
dec
add
cs
add
gs
lock
test
mov
mov
jno
pushf
mov
pop
cmp
in
adc
dec
push
mov
cs
inc
pop
push
rorl
push
orb
int
or
ss
push
mov
test
add
mov
fisubrs
adc
jo
push
adc
xchg
inc
ljmp
movsb
icebp
mov
add
add
stos
mov
adc
icebp
xchg
sbb
bound
dec
fidivrs
push
pop
push
aam
dec
or
inc
nop
xchg
faddl
sub
mov
and
sahf
or
inc
or
sbb
push
ret
adc
popa
inc
dec
or
add
mov
pop
mov
loopne
sub
mov
xchg
cmp
pop
les
or
call
movsl
cli
jbe
sub
pop
addr16
stc
pop
stos
sub
inc
sub
das
loop
xor
fldl
pop
and
push
daa
or
push
cs
pushf
sbb
mov
jge
push
pop
dec
lods
pop
inc
sub
sbb
add
push
jae
jmp
push
in
pop
inc
mov
mov
sub
enter
xchg
sub
fmuls
push
out
and
in
add
push
add
inc
xor
add
push
sub
movhps
xchg
dec
roll
pop
cli
pop
shrb
aaa
lock
xor
jnp
aaa
adc
lock
cmp
push
dec
xchg
adc
movsb
popf
mov
mov
push
repz
mov
test
mov
enter
inc
loope
cmpsl
sub
add
out
sbb
xchg
cld
lret
add
repnz
inc
nop
out
test
imul
pop
cwtl
mov
add
lods
pusha
add
in
shlb
add
bound
add
lahf
push
mov
or
adc
sub
jb
or
les
dec
jae
or
xchg
mov
push
inc
rclb
mov
dec
rclb
sbb
cmpsb
xlat
mov
inc
inc
lea
mov
and
daa
sub
jge
rolb
call
shll
mov
sub
mov
xor
xor
and
test
jb
jae
jnp
sub
test
cmp
pop
push
dec
scas
aad
movsl
and
in
sub
push
movsl
add
inc
loopne
push
in
std
jl
int3
push
insb
subl
test
xchg
jmp
stc
fnstsw
sbb
xchg
push
paddd
or
rorb
loopne
aas
inc
dec
loopne
arpl
add
inc
dec
adc
push
shll
imul
cmpsl
dec
xor
and
jge
push
fsubl
imulb
popa
pop
push
mov
fcoml
adc
mov
loop
add
idiv
add
push
dec
mov
and
inc
out
ss
inc
sub
sbb
push
into
addr16
mov
enter
or
push
adc
les
mov
mov
shr
or
lret
and
loopne
aam
fnstsw
rcll
pop
repnz
or
leave
movsl
loope
pushf
insl
orl
dec
and
adc
fisubrl
xchg
sbb
inc
test
fadd
jns
and
adc
rorl
xchg
xorb
ja
adc
xchg
test
mov
push
and
adc
into
mov
rcrb
mov
add
aaa
mov
jmp
lret
inc
or
dec
lods
mov
jo
inc
xor
sub
leave
jecxz
out
call
and
pop
jo
pop
sbb
roll
pop
inc
sbb
pop
sarb
or
das
dec
push
test
je
xchg
imul
pop
subb
mov
clc
daa
pop
and
jo
adc
outsb
xor
rolb
jo
xchg
jo
arpl
mov
mov
clc
repz
sbbb
and
adc
mov
inc
mov
and
test
ljmp
aam
or
dec
or
or
sub
shl
push
dec
jae
pop
sbb
dec
pop
mov
and
pop
inc
mov
out
push
add
mov
icebp
cmp
and
inc
push
mov
negb
sub
jmp
aam
pusha
pop
or
inc
es
cltd
mov
pop
jmp
mov
das
mov
and
sbbb
xchg
bound
sub
je
pop
sub
stos
adc
adc
push
or
jge
movsb
push
inc
push
pop
sbb
jle
ret
dec
push
mov
cmpsl
push
repnz
mov
lret
pminub
das
sarl
fs
xor
xor
iret
sub
sbb
loopne
fsubr
mov
leave
nop
mov
aad
fs
push
push
or
push
je
push
cmpb
inc
movsl
xor
loopne
push
je
es
push
mov
cltd
movb
adc
adc
clc
rcr
pop
aam
rclb
daa
pop
push
filds
xor
or
rcrb
je
inc
cmp
fs
xchg
pop
sbb
and
sub
xchg
or
jl
and
orl
sub
lea
mov
add
adc
add
lcall
popf
and
std
push
loopne
je
into
in
movzbl
add
mov
jno
sbb
mov
test
shlb
ret
and
push
shrl
xor
subb
leave
cwtl
in
inc
mov
aam
fdivp
popa
push
mov
mov
adc
sbb
mov
aas
or
clc
add
inc
aas
aam
insb
and
mov
sub
jmp
shrl
aas
add
ja
push
inc
dec
sbb
mov
push
pusha
sub
push
enter
or
scas
sub
mov
or
add
imul
enter
mov
push
dec
push
sbb
aam
xchg
fidivrl
pop
div
or
hlt
rorb
push
aaa
movsb
mov
enter
jne
jne
mov
enter
or
or
and
cmpsb
out
and
fldt
xchg
fstpl
and
fs
add
mov
andb
jmp
repnz
mov
ret
imul
adc
test
icebp
fidivrl
sahf
jge
in
mov
mov
dec
jg
mov
loop
scas
add
push
lods
fcom
push
xchg
icebp
int
shrl
gs
rcrb
mov
cmp
dec
ret
xchg
adc
add
cmpsb
dec
pop
dec
icebp
rclb
sub
sub
xor
xor
sbb
dec
das
adc
xchg
or
std
pop
les
movsb
mov
es
arpl
pop
rclb
mov
pop
push
test
add
data16
xlat
mov
push
or
mov
mov
push
xchg
mov
inc
fldcw
sub
loopne
shll
cmp
insl
fdivl
mov
inc
ja
lea
mov
ja
mov
mov
mov
sbb
les
pop
roll
sub
push
pop
int3
cld
test
loopne
fdivr
inc
add
scas
outsb
and
jo
mulb
and
popf
add
dec
hlt
pusha
lahf
divl
pop
in
je
push
xor
add
ja
xor
iret
inc
stos
rolb
jae
jns
cs
sbb
pop
test
inc
loopne
pop
mov
test
adc
clc
pop
mov
mov
jo
or
pop
mov
xor
movsl
mov
popa
sub
sbb
or
mov
inc
add
mov
or
lret
inc
mov
xchg
inc
ret
push
sahf
mov
lea
pop
jg
adc
lcall
xchg
sbb
push
dec
cmp
xor
int3
aad
mov
ja
xor
adc
pop
mov
xor
mov
int3
mov
sbb
jb
add
dec
shlb
fs
mov
arpl
adc
push
adc
rolb
jmp
push
sbb
pop
jo
xlat
sbb
add
mov
lea
ror
pop
jmp
pusha
jb
or
pop
mov
rolb
ljmp
adc
push
ret
and
cmp
add
jg,pt
dec
xchg
mov
dec
shl
sbb
fstp
inc
popf
rcll
lcall
add
and
ficompl
out
icebp
imul
or
add
cltd
jbe
notb
lock
fs
inc
mov
in
fisubrs
or
mulps
sub
cmp
sub
je
out
or
fdivl
adc
in
mov
xor
loopne
cmp
jmp
add
or
push
adc
in
pop
inc
rcrb
jo
mov
add
enter
ja
sbb
pop
imul
jnp
sub
ret
push
adc
repnz
popa
hlt
das
push
or
popa
mov
dec
xchg
cli
mov
jne
repnz
xchg
push
leave
push
mov
add
push
fidivrs
xor
sub
iret
leave
mov
call
adc
call
dec
pop
dec
add
adcb
mov
push
arpl
or
sarb
fsubl
fistl
or
xor
mov
popa
test
push
mov
mov
push
jb
mov
pusha
fdivrl
fiadds
lods
int
gs
into
cmp
popf
in
add
pop
adc
push
sbb
std
xchg
add
mov
push
add
dec
movsb
pop
cltd
cmp
sub
je
sbb
pop
test
mov
in
pushl
popa
dec
cld
adc
mov
stos
mov
or
jmp
pusha
js
sub
movsl
mov
sete
adc
cmpsb
jne
sub
sub
loope
or
js
jmp
inc
mov
mov
or
into
movsb
imul
mov
fcoml
sbb
cmp
xor
loop
or
xchg
adc
or
and
hlt
xchg
shl
cmpsl
sub
adc
pop
pop
jno
sbb
pop
ret
push
push
sub
int3
stos
cld
cli
or
je
or
or
inc
push
pop
xchg
aad
imul
std
ret
jg
mov
sub
mov
fidivl
push
add
lea
hlt
adc
pop
cmpsl
mov
push
pusha
in
pop
adc
mov
test
mov
dec
hlt
lods
mov
hlt
cmp
jge
cmp
mov
inc
push
mov
test
sarb
rcrb
mov
xor
std
push
mov
shll
inc
inc
jmp
inc
fs
sub
pop
aas
cmp
pop
push
add
add
mov
pop
xor
iret
dec
jmp
test
dec
sbbb
div
sub
imull
push
sub
aam
jmp
scas
arpl
cli
inc
cmpsl
cmc
push
push
jmp
push
add
daa
push
add
jl
mov
movsb
leave
adc
loop
push
es
push
xchg
jo
les
or
aam
pop
in
mov
or
and
in
je
cltd
dec
in
lret
mov
xor
pop
ja
aad
xchg
mov
test
arpl
mov
pop
dec
mov
rolb
pusha
dec
xlat
bound
pop
lods
dec
mov
inc
repz
adc
or
sbb
mov
and
andb
push
stos
fcompl
movsb
push
cmp
mov
inc
mov
enter
rcr
outsl
fcoms
jnp
nop
mov
mov
adc
jo
test
push
imul
ret
mov
adc
nop
in
clc
aaa
or
xchg
or
je
mov
xchg
jae
outsl
pusha
iret
pop
insl
push
sub
lret
test
mov
adc
addr16
add
xor
pop
les
lods
push
fwait
out
add
jle
xor
aas
aad
sbb
call
or
nop
sbb
xchg
pop
cmp
xorl
mov
sbb
push
sbb
sbb
mov
jmp
adc
arpl
and
lock
mov
loopne
add
aad
fdivrs
sbb
inc
in
pop
ret
call
sub
add
popa
ja
adc
dec
adc
xchg
xchg
jne
sti
and
add
jbe
daa
nop
lock
push
cmc
in
mov
fnstsw
add
mov
adc
loop
push
pop
xchg
lea
andb
push
or
call
mov
movsl
xlat
cmc
roll
lock
fisubrs
dec
push
mov
call
rclb
repnz
dec
jecxz
xchg
aas
je
xchg
sub
insl
mov
jne
insb
rorb
ss
mov
imul
sub
test
std
dec
pop
cmp
jns
fistpl
cmp
xor
xor
dec
enter
fcomp
mov
sub
mov
ljmp
jno
loop
cld
or
sub
or
push
popf
mov
cs
mov
or
inc
xchg
fdivl
push
lret
adc
push
jle
loope
xchg
mov
sbb
rcrb
mov
sub
loop
pop
test
rorl
das
test
test
icebp
adc
xor
jl
dec
imul
or
testl
add
push
je
out
fst
xor
shr
xor
std
mov
fsubrl
in
jp
pop
add
mov
test
sahf
ds
xor
popf
mov
shr
cmp
jbe
add
jmp
add
mov
pop
call
xchg
int3
les
and
xorl
in
enter
sub
jl
sub
push
lea
movsb
sub
dec
pop
loope
add
adc
in
or
dec
loop
shlb
lock
jnp
mov
lock
jge
push
cli
loop
fsubl
dec
push
mov
adc
mov
loopne
in
out
inc
mov
jno
add
loopne
xor
loop
or
or
jnp
loope
dec
fcomps
jg
push
jb
push
adc
mov
cmp
icebp
or
mov
bound
loopne
mov
or
in
inc
in
in
push
scas
sub
mov
loope
mov
les
insl
outsl
push
adc
xchg
idivb
push
loope
mov
xor
pop
out
roll
mul
jmp
jne
jns
inc
add
pop
xor
rorl
adc
push
pusha
adc
mov
imul
sbb
loopne
sub
add
dec
stos
xchg
sbb
dec
jmp
pop
push
cmp
push
add
push
stos
sub
and
cmp
jge
cmp
js
inc
push
add
push
adc
dec
add
and
and
add
add
out
or
popl
add
insb
add
sbb
add
push
jecxz
mov
sub
mov
push
pop
sub
lea
ret
or
and
out
inc
enter
jmp
sbb
inc
or
orl
sub
inc
enter
push
mov
and
sbb
xchg
popf
adc
sub
mov
addb
adc
popa
insb
or
xor
add
adc
sbb
xor
add
and
sbb
xor
sub
mov
mov
or
enter
fbld
movsb
xor
adc
lods
repnz
lret
add
or
mov
nop
add
aam
adc
stos
and
xor
inc
mov
mov
push
sub
test
mov
mov
jmp
xor
jl
mov
mov
push
push
int
adc
cmp
sbb
je
xor
sub
or
pmulhuw
dec
adc
popf
xor
daa
pop
adc
cmp
fsubrp
push
xor
or
pop
adc
mov
and
movsb
adc
sub
mov
popa
inc
pop
adc
stos
pop
jbe
jg
pop
adc
inc
cmp
jne
push
inc
sub
pop
mov
fistpl
cmp
shll
adc
add
dec
enter
or
or
push
push
ds
sbb
sub
adc
call
outsb
dec
icebp
repnz
push
dec
sub
push
fwait
je
in
je
rcrb
pop
or
int3
mov
adc
jle
xchg
add
add
jecxz
xchg
add
pop
into
push
adc
add
mov
popf
sbb
cmc
jp
test
and
bound
sub
pop
sub
daa
add
jge
inc
out
leave
push
push
insb
imul
lahf
jmp
adc
sbb
movsb
push
das
adc
mov
rorb
fistpl
pop
xor
inc
insl
jl
sub
das
and
int3
push
arpl
inc
andb
push
je
es
push
call
xchg
int
inc
jne
mov
aam
xchg
pop
dec
or
test
cltd
mov
push
cwtl
sub
sar
xchg
cltd
dec
push
push
pop
sbb
sub
lock
and
test
cld
pop
in
sub
dec
or
sbb
and
sub
sbb
adc
mov
mov
or
xor
push
or
out
xchg
or
mov
inc
enter
xor
int3
cmp
and
add
cld
mov
adc
jne
movsl
mov
add
or
out
cld
push
and
sub
mov
loope
psrld
pshufw
push
inc
mov
mov
pop
inc
or
adc
dec
adc
or
mov
and
clc
cmp
imul
jge
jge
test
adc
and
mov
sub
int
stos
push
pop
in
mov
cmpsl
in
sbb
add
lods
xchg
push
repnz
and
scas
sub
add
add
bound
inc
loopne
outsb
ret
push
adc
add
cmpsb
sbb
add
inc
scas
mov
pusha
jl
sbb
xchg
and
sahf
add
call
imul
push
adc
in
xchg
shrl
xchg
jg
sub
jns
insb
je
adc
xchg
mov
cmp
jne
push
xor
loopne
cmp
dec
call
inc
leave
dec
xor
jbe
xchg
rol
inc
xchg
fisubs
mov
xchg
cwtl
add
dec
sub
push
mov
arpl
loopne
jl
popf
add
rcrb
adc
cwtl
loopne
dec
imul
mov
outsl
push
and
ret
stos
andl
imul
sti
fs
imul
loop
ja
push
or
inc
jmp
cwtl
mov
push
xchg
mov
sub
push
stos
add
inc
add
ja
push
cltd
in
sarb
xchg
inc
repnz
add
mov
dec
je
popa
mov
push
incl
js
mov
add
mov
lock
adc
push
or
and
movsw
je
add
in
push
jecxz
jb
cli
xchg
lahf
nop
movsl
icebp
jl
rorb
sbb
sub
sbb
push
xchg
cmpsb
inc
mov
lea
aas
xor
and
mov
fldz
pop
or
lret
jne
push
add
jmp
lds
push
fstpl
xchg
inc
or
dec
adc
push
psubsb
add
sub
xchg
mov
je
push
dec
mov
add
test
fdivrl
out
adc
add
inc
mov
dec
sub
cmc
cmp
les
movsl
pop
adc
xchg
xor
fisubrl
inc
add
xchg
add
pop
aam
enter
push
and
pop
fs
sbb
push
push
in
stc
test
and
ljmp
jbe
lods
mov
lret
xchg
mov
push
add
push
insb
sbb
mov
cmp
stc
push
mov
inc
jle
adc
jle
push
add
push
incl
sbb
xchg
sub
sub
inc
lea
jp
movsb
mov
sub
push
add
sti
adc
mov
and
add
xor
and
xchg
popf
xor
leave
push
inc
insl
xchg
loope
mov
movsb
stc
pop
xchg
cld
in
mov
das
sbb
inc
pop
rorb
sbb
add
ret
rorl
js
sbb
dec
jl
adc
addl
inc
mov
jl
insl
sub
loope
xchg
sub
sub
xchg
and
fbld
dec
push
clc
jle
push
bound
push
mov
or
pcmpgtw
sahf
mov
icebp
mov
orb
or
test
adc
add
lds
xchg
dec
and
inc
mov
mov
push
scas
mov
or
or
ret
jle
pop
add
outsb
mov
mov
inc
mov
cwtl
push
xchg
dec
loope
jp
push
ret
push
inc
pop
sbb
js
pop
adc
js
cmp
mov
adcl
pop
sbb
adc
mov
push
mov
jmp
inc
shl
dec
adcl
add
roll
mov
outsl
adc
jp
aam
push
mov
adc
in
outsb
pop
dec
orb
push
or
in
cld
pop
push
dec
xor
fisubs
push
pusha
and
hlt
push
rcr
aas
sarb
push
movb
lods
xchg
mov
ret
xchg
add
pop
inc
mov
cmp
popl
xchg
and
push
hlt
sub
jns
lock
xor
xlat
inc
push
inc
xlat
pop
cmp
cli
addr16
imul
add
ret
mov
ja
ss
dec
pop
mov
dec
movl
jl
sti
or
xor
lcall
nop
js
call
add
jne
daa
lock
jecxz
sub
pop
pop
xchg
inc
mov
ficomps
jae
push
inc
and
sbb
notl
pop
push
outsl
push
push
insb
aam
cmpsb
jo
jb
aas
xchg
push
lods
add
push
xor
mov
test
pushl
adc
inc
nop
aam
mov
adc
subb
pusha
push
loop
or
ret
jl
les
int3
push
in
addl
cmpsb
pusha
sbb
or
and
add
push
mov
push
dec
rolb
inc
push
mov
out
or
add
inc
imul
jo
or
in
adc
cmp
sbb
inc
sub
daa
ret
and
pop
push
sbbl
xchg
das
jae
adc
sub
mov
dec
mov
cmp
cmp
cmp
adc
pop
rcrl
sub
or
stos
and
cmp
jns
shrl
push
stc
pusha
or
lret
or
icebp
call
xchg
push
jl
popa
or
test
push
cmp
add
cmp
mov
push
and
push
cmp
adc
xor
push
stos
adc
adc
adcl
add
adc
fcomps
push
int3
push
out
inc
pushf
cld
les
inc
dec
incb
lret
mov
jg
call
mov
icebp
inc
push
adc
push
pop
test
rolb
data16
cs
jp
in
dec
fisttpll
jne
test
xchg
mov
add
xchg
adc
inc
fadds
jp
pop
pop
jl
sub
push
je
ret
xchg
stc
bound
adc
sub
lea
xchg
leave
and
adcb
mov
inc
jo
jmp
pop
sbb
pop
jmp
jg
sub
das
cmc
jge
out
and
dec
lock
mov
movsl
adc
adc
movsb
push
fbstp
jecxz
mov
stos
cmp
mov
cmc
ret
testb
test
cli
xchg
xor
mov
pop
mov
pop
mov
shlb
dec
add
mov
rclb
dec
dec
xchg
lock
adc
popl
jp
sbb
or
cmpb
orb
or
mov
subb
add
pop
je
in
dec
daa
popa
mov
imul
daa
mov
sub
pop
push
sbb
jo
pop
adc
pushl
ret
push
in
xor
pusha
mov
rol
scas
clc
decl
mov
ror
xor
shr
xor
es
mov
rol
xor
shr
fcmovbe
decl
xor
add
add
add
loopne
out
fcoml
bound
ret
jne
push
or
and
xor
add
add
es
pop
aam
sub
jge
add
imul
or
push
cwtl
repnz
mov
fisubrs
jmp
iret
add
xor
and
and
xchg
push
aam
push
inc
sbb
push
imul
repnz
sub
fmull
pop
push
sarb
push
loopne
xlat
ret
rcl
pusha
sub
clc
add
add
add
xor
fsubr
sarb
test
xor
enter
sub
ljmp
rol
rol
out
add
in
imul
loopne
add
xor
sbb
dec
shl
aam
in
sub
sbb
xchg
xchg
bound
cwtl
xchg
xchg
mov
rcll
les
mov
sub
fadd
cs
cltd
call
xor
loopne
loopne
inc
sub
dec
in
in
loopne
adcb
imul
pop
xor
or
add
cmp
inc
add
or
push
xor
and
and
loopne
or
data16
stos
xor
aam
add
dec
andb
adc
cmp
or
inc
jo
pop
subl
ficoms
adc
mov
dec
push
sub
xor
adc
call
jne
mov
filds
cltd
or
leave
fimull
inc
fadds
pop
jbe
call
add
lret
push
clc
jp
jle
pusha
xor
xlat
add
gs
fdivrs
dec
xor
rolb
call
in
rclb
mov
popa
jle
inc
mov
push
sub
adc
clc
jo
cli
push
and
popf
stos
adcb
or
aaa
cmp
inc
lcall
pop
push
cmp
adc
shr
mov
add
cli
stos
mov
and
xor
rolb
rclb
rorb
dec
shll
add
loopne
add
lahf
jo
add
sbb
adc
xor
in
and
xorl
and
add
push
xor
cmp
sbb
sub
imul
pop
sub
mov
movsl
cmp
sahf
push
add
and
rol
push
or
and
nop
out
dec
pop
xchg
or
mov
xchg
pop
pusha
xchg
in
pop
scas
movsl
mov
or
arpl
rolb
dec
pushf
loop
adc
fs
andl
inc
xchg
lret
dec
dec
icebp
iret
enter
stc
mov
adc
pop
dec
mov
cwtl
jp
movsb
dec
imulb
imul
loopne
mov
cmpsb
sbb
jo
adc
in
add
imul
push
pop
lds
inc
les
movb
pushf
out
pop
add
sub
mov
aaa
adc
cmp
jb
clc
and
aaa
sub
fistpl
lcall
pop
cmp
lea
pop
xor
cli
inc
stos
fcoml
mov
decl
sub
mov
mov
fnsave
fidivrs
or
or
mov
adc
fisttpll
insl
and
into
inc
jae
inc
inc
fsubl
mov
or
xchg
loopne
lea
jmp
add
sub
sub
pop
add
mov
ret
dec
or
mov
dec
jne
mov
ficomps
loope
lock
rolb
jl
sub
mov
in
fisttps
jbe
or
aam
dec
ljmp
sti
dec
mov
jae
push
pop
fadds
mov
stos
or
mov
ljmp
fidivrs
dec
pusha
outsl
pop
loopne
ror
mov
testl
mov
mov
adc
or
bswap
ss
cmp
lds
xor
cmp
ja
ret
xor
xchg
cmpsl
cmp
aaa
popa
data16
addb
outsb
add
dec
je
add
push
sbb
mov
fcmove
test
mov
push
inc
adc
pop
lds
or
cmp
call
je
mov
mov
xchg
imull
mov
cmp
je
or
jo
mov
popa
cmp
jne
adc
in
or
sbb
mov
push
dec
inc
lea
inc
mov
pop
dec
xor
das
xchg
cmc
testb
jne
jmp
call
add
xor
jne
adc
jbe
cli
xchg
push
add
test
loope
stc
inc
cmp
fs
dec
inc
addb
stos
push
inc
and
mov
mov
jecxz
pop
mov
adc
mov
pop
dec
mov
out
adc
clc
lahf
sti
jnp
lock
ret
fsubr
mov
lea
inc
mov
sbb
hlt
and
sarl
or
cmp
negb
rcrb
cmp
notb
mov
cmp
mov
cli
clc
je
jo
je
inc
rcr
jb
or
ja
insb
push
inc
mov
scas
sbbb
inc
cli
pusha
stos
je
in
mov
push
lret
pop
movsl
sti
nop
jno
test
loop
xchg
mov
cmpsb
lods
testl
xorb
stos
rcr
data16
jb
sbb
xor
jb
cmp
dec
rcrb
add
fsubr
adc
aas
les
and
and
dec
hlt
xor
xchg
movsl
fwait
adc
test
sbb
rolb
pusha
pop
adc
test
mov
or
add
pop
jae
mov
jmp
dec
shrb
movsb
push
xor
inc
sub
xor
push
outsl
pop
fildl
cmp
push
inc
jmp
pusha
sbb
push
adc
dec
int3
sbb
fistpl
or
jge
and
jle
fwait
fwait
fwait
sub
jle
sub
sub
and
pop
cmp
jl
imul
test
sub
inc
ret
jp
jb
jbe
mov
popa
test
fwait
and
or
loop
ja
je,pn
test
jne
je
outsb
and
add
mov
sub
andb
add
xor
into
or
bnd
xor
inc
loope
inc
incb
inc
jns
inc
dec
push
push
push
mov
inc
and
je
add
je
mov
ja
fistpl
ss
push
mov
pop
push
popl
add
inc
es
and
ss
jne
lds
mov
repnz
add
push
fisttpll
enter
xchg
js
fildll
cwtl
mov
or
xor
pop
popf
or
mov
inc
cmp
adc
jno
cmc
jo
cli
ljmp
sbb
out
xchg
jb
test
sub
cwtl
lods
sbb
xchg
add
push
jno
mov
xor
xor
push
aaa
popf
test
push
inc
lea
hlt
pushl
sub
mov
add
pop
jb
andl
pop
cmp
mov
in
fmull
clc
or
xchg
sbb
pop
cwtl
xor
mov
mov
mov
out
dec
mov
incl
addr16
fsubs
push
push
lret
fadds
inc
and
jae
out
push
push
cmpsb
mov
insl
pop
jmp
mov
test
or
in
push
fsts
sti
mov
nop
or
jnp
fisttps
mov
subb
push
jle
jbe
push
and
inc
ss
adc
xchg
ds
pop
add
pop
test
movb
loope
pop
jecxz
lds
mov
jb
add
inc
mov
mov
scas
jl
add
cmp
add
push
sbb
loopne
adc
sub
or
in
cmpsb
xor
fdiv
and
popa
imul
clc
hlt
inc
xchg
push
push
add
addr16
push
lods
aas
or
les
xchg
jbe
lcall
enter
loopne
push
movsl
add
sub
pop
or
mov
adc
jbe
add
fwait
jecxz
dec
adc
mov
call
mov
std
push
lods
mov
pushl
push
mov
in
movsl
and
mov
push
outsb
pop
pop
jo
cwtl
add
and
shll
sbb
in
jnp
xchg
xchg
jne
lahf
jne
cmpsl
in
cwtl
addl
xchg
xchg
cmp
cmp
or
jne
add
ds
push
leave
mov
cmp
or
xchg
cmp
or
mov
or
xor
and
xchg
js
sbb
adc
or
idivb
faddp
inc
or
inc
je
rclb
sub
aam
push
sbb
xor
imul
add
and
push
loopne
pop
adc
jge
sub
mov
cmp
add
sahf
inc
and
inc
adc
push
push
fdivl
rclb
add
hlt
adcb
xor
jmp
sbb
dec
push
das
bound
mov
in
testl
xor
sub
or
sbb
rcrl
mov
fcomps
hlt
add
xor
cmp
je
mov
cmp
inc
mov
inc
jnp
sub
inc
inc
xchg
lcall
cmp
ss
aaa
sbb
dec
cltd
cmp
add
daa
or
loope
xchg
add
scas
add
cmp
dec
cmp
jo
push
push
or
push
and
inc
fsubp
add
fs
insb
jne
jl
sub
jae
xor
sbb
xorb
stos
inc
incl
mov
pop
or
addb
ret
pop
adc
lcall
mov
in
je
or
jne
push
loopne
pop
cmp
push
sub
ret
mov
inc
jp
add
inc
lods
je
mov
addr16
dec
mov
jne
movsb
push
fcomp
in
adc
or
lods
cmp
pop
loopne
xchg
sbbl
jo
and
add
in
jns
adc
movb
lods
test
push
divl
add
enter
sahf
arpl
lahf
in
das
lds
jmp
inc
push
sbb
lahf
popa
in
adc
pop
je
pop
mov
mov
push
push
shll
call
aaa
mov
adc
dec
les
andb
mov
imul
pusha
mov
orl
sbb
cs
lret
xor
cmp
lcall
and
and
clc
add
mov
push
rolb
inc
cmp
ficoml
pop
jb
ds
icebp
das
xor
push
jo
rcll
imul
fadds
cmp
add
in
jbe
outsb
jns
jbe
ja
and
movq
mov
xchg
in
xor
mov
xor
cmp
in
cmp
fists
cmp
add
sbb
pop
mov
in
movsl
nop
dec
mov
add
xchg
xor
rcrl
lds
pop
jne
sub
xchg
xchg
inc
push
das
loop
daa
flds
ds
std
inc
pop
sbb
lods
sbb
jo
xor
mov
mov
adc
mov
lock
fldcw
test
pushf
add
add
loop
jle
xchg
sahf
push
test
mov
jmp
aam
shrb
jecxz
sub
jbe
sahf
inc
int
dec
insb
dec
fsubl
push
cmp
sahf
orl
xchg
mov
sbb
xchg
ficomps
or
inc
insl
add
data16
js
ljmp
xor
lock
pop
push
cli
xor
cs
cmpsl
out
jne
sbb
dec
movsb
or
xchg
pop
imul
and
add
or
pop
and
push
movzwl
mov
inc
es
push
push
fistpl
orb
in
clc
jne
and
shll
pop
popa
fs
pop
punpckldq
pop
pop
les
cmpsb
hlt
xchg
les
xchg
js
pop
inc
shll
lret
add
cmp
bound
pop
inc
jmp
rorl
cmp
and
cmp
or
jne
mov
shr
in
daa
push
adcl
add
jo
cmp
mov
pop
sbb
sbb
fisttpl
pushf
xchg
mov
dec
sbb
orl
xlat
xchg
and
xor
icebp
pop
mov
or
sbb
sub
mov
clc
xor
data16
mulb
ljmp
adcl
daa
clc
les
jns
add
enter
cmp
mov
jbe
adc
and
or
arpl
xchg
ret
or
or
ret
and
lahf
xchg
push
or
lea
push
or
xorl
jp
or
inc
inc
or
push
inc
pop
stc
mov
sbb
rcr
add
push
ret
dec
xchg
pop
fisubrs
hlt
jo
and
xorl
sbb
cmp
cld
or
negb
mov
and
adc
lock
sahf
or
dec
scas
dec
cld
testb
notb
aaa
jbe
mov
and
out
or
jnp
pop
sbb
int
adc
loop
fs
or
jg
xor
hlt
jo
and
insb
push
pop
mov
mov
jnp
adc
mov
adc
add
test
dec
xor
push
adc
cmpsb
imul
cmp
fbld
lcall
dec
aam
mov
sbb
outsl
push
sbb
sbb
jmp
cmp
aaa
in
movsb
adc
inc
add
dec
lea
dec
and
pop
mov
loop
xor
stc
add
cmp
push
or
push
into
addr16
test
pop
pop
pop
and
xor
pop
roll
inc
mov
outsb
imul
cmp
dec
xor
lds
lret
pop
xor
add
lock
and
outsb
or
aaa
and
xchg
pop
push
jl
cmpsl
fcmovb
imull
and
adc
jnp
fimull
xchg
testb
dec
add
dec
add
lock
popa
insb
fs
inc
inc
ja
ja
mov
leave
xchg
dec
sbb
and
int
or
popa
sub
lret
pop
addl
dec
jmp
fimuls
pusha
ljmp
add
sub
rcl
xor
and
dec
fstps
or
hlt
adc
mov
test
adc
inc
in
adc
push
and
sub
repz
or
mov
inc
dec
sbb
sbb
ss
cltd
mov
push
adc
mov
scas
or
sti
loopne
mov
mov
and
push
inc
dec
sbb
cmp
lods
jp
jnp
imul
inc
cmp
sub
rclb
sbb
cmp
lret
pop
mov
sbb
test
sub
incl
out
loope
and
adc
mov
ret
fisttpl
and
iret
sbb
dec
jle
es
movsl
push
inc
and
push
out
push
and
cs
mov
arpl
ja
xchg
or
testb
repnz
sbb
std
daa
cmpl
or
pop
pop
push
js
bound
into
inc
sub
push
pop
fisubs
push
push
into
notb
gs
xor
and
ret
add
rol
jae
insb
mov
mov
outsb
div
xor
add
pop
ss
pop
clc
icebp
lea
mov
notb
nop
mov
mov
insl
lods
xchg
jle
call
mov
pop
aam
fisubl
sub
mov
insl
cmp
stos
mov
mov
clc
sbb
jmp
inc
loop
fadds
ss
lcall
testb
and
jne
orl
inc
int
or
scas
inc
add
test
pop
push
test
lahf
jae
jae
cli
mov
pop
lds
jmp
jge
pop
addl
add
imul
xor
mov
daa
jns
jo
les
pushf
push
outsl
popa
aad
jnp
pop
add
sub
lret
in
lods
mov
into
mov
inc
or
dec
shlb
repnz
cs
add
mov
push
or
jns
push
add
push
adc
sbb
or
pop
mov
or
push
out
sub
adc
sub
sbb
imull
lock
incl
lret
lock
inc
sub
hlt
je
cmp
jbe
mul
mov
fs
aaa
clc
in
adc
xor
add
adc
sbb
push
ret
jp
in
repnz
push
adc
lcall
xchg
inc
in
ficoml
arpl
clc
repz
push
or
adc
scas
int3
jmp
xor
jle
movsb
cli
xchg
iret
adc
jbe
mov
insb
push
push
les
fisttpll
cld
push
dec
or
in
mov
mov
or
jecxz
dec
add
push
add
sub
je
and
add
movsb
inc
jnp
sub
cmp
push
cmp
fs
cmp
lcall
push
sbb
inc
dec
fmuls
mov
mull
stos
xor
lods
fld
pop
out
lahf
std
jne
xchg
shlb
pop
mov
or
stc
leave
fabs
inc
mov
test
sub
push
das
es
pop
fwait
out
jbe
sub
add
sbb
push
jae
push
or
fs
xchg
add
iret
jmp
scas
es
test
push
notb
sub
stc
outsb
add
dec
dec
dec
and
xor
enter
int3
xor
mov
pop
mov
mov
xchg
xchg
sbb
addl
pop
inc
je
lea
pop
notb
fcompl
add
int3
adc
fwait
mov
sti
movsb
jne
fsubs
dec
xchg
mov
xor
popa
popa
arpl
les
ss
notl
dec
daa
stc
cmp
dec
pushf
movsb
and
adc
mov
add
inc
and
lods
pop
addr16
js
adc
or
sbb
xor
add
adc
or
cmp
push
subl
dec
adc
mov
push
leave
sub
cmp
lret
jbe
sub
add
rclb
add
sahf
push
cwtl
test
sbbb
out
add
ds
mov
test
insl
add
adc
jb
xchg
mov
mov
ja
jmp
dec
mov
fs
lret
and
mov
popa
stos
lcall
xor
dec
insb
push
pop
xor
or
test
pop
test
mov
cmp
xchg
mov
je
sub
sbb
add
lock
lods
sub
xor
xchg
inc
push
add
popa
mov
adc
scas
xor
or
dec
dec
lock
or
cmpsb
cmp
push
add
xor
or
sbb
push
xchg
pop
jno
xchg
pop
xor
mov
pop
cmp
pop
popf
add
leave
or
add
mov
sub
inc
adc
xor
jbe
jmp
fcom
xchg
mov
add
inc
jmp
pop
lea
xor
push
cmpl
jecxz
test
cmp
enter
xchg
mov
mov
jbe
popa
sub
dec
inc
add
inc
out
adc
push
mov
aas
dec
loop
loop
pop
cmp
sub
cmc
je
cmpl
sub
inc
and
sbb
inc
cld
call
mov
adc
dec
stos
cmp
push
mov
jno
imull
push
les
mov
pop
inc
ss
cmp
add
dec
stos
test
add
stc
ja
and
jne
fmul
jb
pop
mov
test
insl
jne
mov
not
fadds
gs
mov
inc
push
fcmovb
push
mov
repz
les
dec
loopne
cmpsb
aad
js
rcl
dec
mov
mov
cmc
pop
mov
in
xchg
idiv
add
mov
sub
push
test
lea
scas
push
negl
shlb
sub
ljmp
stos
repnz
and
xor
push
push
and
sarb
and
push
icebp
push
shlb
scas
cmpb
jl
inc
xlat
jmp
mov
lcall
rclb
pop
rolb
fisttpll
xor
adc
push
xchg
popw
insl
int
sbbl
mov
or
or
adc
cmp
and
imul
jmp
fiadds
jo
add
jl
add
inc
out
xchg
call
cmp
jne
jbe
dec
cmp
lret
and
orb
mov
dec
stc
pop
mov
adc
mov
adc
pop
cmp
orl
pop
push
mov
adc
enter
push
add
and
push
add
inc
arpl
mov
mov
mov
bound
xchg
or
mov
xor
or
popa
gs
shll
cmpsb
fwait
imul
insb
pop
and
loope
sbb
adc
inc
das
push
ljmp
pushf
rolb
popf
rorb
adc
mov
mov
sub
rclb
mov
add
and
adc
mov
pop
lcall
push
dec
mov
add
cmp
mov
cmp
ret
push
outsl
cmpsl
mov
mov
mov
inc
jnp
orl
lods
cmp
loop
das
cmp
decb
sbb
push
test
pop
xchg
stos
outsb
jmp
test
fst
sbb
push
pop
sub
andl
sub
jmp
or
icebp
add
push
and
and
cmp
jge
mov
mov
mov
mov
imul
popa
sbb
outsl
adc
mov
pop
in
xor
mov
and
xchg
sbb
add
cmp
fcomi
sbb
sbb
leave
ret
push
in
sbbb
inc
sub
or
push
clc
dec
pusha
inc
stos
icebp
enter
jle
call
insb
stos
inc
movb
pop
jno
xlat
push
mov
pusha
mov
inc
stc
aam
fs
addl
inc
add
cmp
ror
cmc
push
jle
and
or
add
push
les
std
pop
inc
and
outsl
ret
lcall
mov
je
out
jbe
push
inc
pop
pop
jmp
and
or
dec
out
and
lea
cmp
sub
insb
das
pusha
cmp
mov
aas
xor
jbe
push
xor
or
sbb
les
sti
mov
mov
mov
dec
inc
push
or
inc
loope
pushl
mov
rclb
movsb
jmp
rclb
lods
cwtl
mov
movsb
adc
loope
je
xchg
test
test
adc
xchg
lds
inc
mov
xor
mov
enter
inc
xlat
sahf
or
loope
and
mov
xor
and
push
adc
arpl
std
xchg
adc
push
adcb
mov
mov
in
pop
add
outsb
call
mov
in
inc
push
mov
pop
rcrl
adc
or
adc
pop
sbb
xlat
or
ret
mov
or
cwtl
arpl
xor
add
js
and
notl
test
mov
jns
fildl
jmp
test
inc
adc
jmp
aaa
lret
aas
dec
rol
insl
push
leave
scas
and
pop
jmp
mov
add
ret
loope
lcall
adc
mov
push
add
sarb
mov
cmp
mov
cld
push
push
jl
in
inc
push
sub
enter
push
pushf
xor
pop
xor
leave
ret
pop
mov
and
jnp
orb
fs
or
addb
sub
add
add
stos
ret
dec
aam
sub
mov
dec
pop
xchg
pusha
loope
aaa
lea
pop
pop
cmp
fsubs
push
add
mov
pop
push
mov
dec
loopne
fs
mov
imul
aam
mov
subl
add
inc
mov
add
aam
jnp
pop
or
and
rorb
sbb
or
leave
xchg
xchg
cltd
xchg
or
imul
xor
enter
sub
pop
mov
mov
pop
sahf
outsl
xor
js
adc
je
jl
sub
popl
shl
xchg
gs
sahf
push
mov
or
test
jmp
mov
loope
lock
push
insl
inc
add
jbe,pn
xchg
xor
and
add
adc
ljmp
shlb
ss
mov
xchg
or
cmp
nop
sub
sub
dec
sbb
mov
add
iret
jle
dec
popa
mov
cmp
xor
jo
scas
inc
test
xor
pop
xchg
push
push
addb
inc
pop
mov
adc
popl
sub
xor
adc
add
test
jne
jnp
pop
popa
or
xchg
adc
jbe
pop
cmp
prefetch
or
push
push
mov
add
and
dec
inc
xchg
xchg
dec
cmp
cmpsl
or
jp
push
jmp
sub
ret
add
pop
pop
in
and
jl
jmp
adcl
stc
jl
xor
or
in
adc
mov
jnp
lock
jge
sbb
in
cmc
xchg
ret
insl
std
mov
lea
imul
mov
sub
movsl
inc
out
mov
stos
daa
mov
idivb
dec
lea
jmp
cmpl
lcall
repz
stos
sbb
push
and
and
mov
cld
mov
sub
xlat
insl
pop
xor
sub
scas
sbb
movsl
mov
inc
pushf
and
fiaddl
fists
lock
scas
push
sbb
push
push
scas
je
lods
lret
stc
or
bound
pop
push
push
incl
adc
pop
insb
js
xor
mov
push
je
dec
cmpsb
or
ss
ucomiss
jl
int3
push
sub
jg
lock
ja
mov
inc
pop
add
clc
mov
cmpsb
ror
sbb
pop
aas
mov
cmp
or
cwtl
mov
mov
pop
add
add
and
pop
shll
fidivl
aam
repnz
fcompl
xor
push
fdiv
xchg
jbe
sahf
addl
dec
cmpsl
mov
insl
or
icebp
test
mov
push
inc
hlt
pop
xchg
stos
cmpsl
push
shrl
push
dec
jmp
or
mov
xor
fwait
shr
sbb
rorl
mov
or
push
data16
add
jo
je
sbb
xchg
push
stos
lods
jmp
sub
add
adc
sbb
mov
jbe
add
or
call
xor
adc
je
push
mov
sub
loopne
jp
sbb
in
and
inc
shlb
inc
sub
cld
sbb
sbb
or
cmpsl
les
inc
jo
test
das
cmp
mov
and
sbb
sbb
and
aam
or
pusha
xor
in
je
xor
or
mov
insb
mov
ret
sub
xor
test
lock
pop
ljmp
xchg
movsb
dec
inc
inc
rcll
push
cmp
out
pop
mov
aaa
dec
incb
or
test
fdivs
adcb
or
in
xor
or
jnp
pop
arpl
mov
add
add
movsb
cmp
shlb
in
inc
jns
addr16
dec
dec
dec
clc
jne
mov
push
test
adc
adc
add
add
pushf
cmp
mov
push
subl
push
pop
xchg
sbb
xchg
mov
hlt
ret
enter
jns
or
inc
cmpsb
dec
push
add
es
pop
imul
cmp
cmp
jae
fsubs
push
aam
sbb
jno
push
adc
hlt
jne
push
js
xchg
addl
sub
mov
loopne
jne
mov
push
pushf
stc
push
xchg
or
mov
movsb
sbb
lock
add
clc
pushl
xchg
jne
inc
mov
xchg
daa
ret
xchg
mov
pop
push
js
ret
movsl
popf
rolb
xchg
xchg
lret
xor
inc
movl
cmp
push
mov
inc
mov
adc
cmpb
adc
lea
mov
pop
mov
mov
loope
and
adc
jb
sub
inc
adc
test
data16
movsl
adc
xchg
xor
sub
pop
dec
test
pop
call
add
push
xchg
lea
mov
xor
aam
sbb
xor
push
cmp
adc
add
jge
in
push
mov
push
mov
or
dec
inc
jne
arpl
push
pcmpgtw
pop
cwtl
aaa
ficoml
jmp
roll
inc
cmp
insl
iret
push
in
mov
pop
add
cmp
lea
sbb
fisubs
sbb
in
jae
leave
rolb
lret
ret
mov
lea
aam
jecxz
dec
adc
jne
int3
adc
and
add
in
push
xchg
push
mov
xor
xchg
mov
mov
test
cmpb
repnz
pop
sub
inc
adc
leave
rcrb
jle
xchg
dec
cmp
sti
jne
xchg
jns
cli
pop
push
pop
or
jle
mull
push
mov
add
add
pop
pop
jno
sbb
xor
test
cmp
inc
inc
cmp
stos
imul
in
jg
repz
sub
cmp
je
call
idiv
pop
mov
nop
lret
int3
inc
std
xchg
imul
aam
cmp
jb
iret
mov
outsb
pop
dec
je
xor
imul
sbbl
push
inc
adc
mov
sub
inc
outsb
mov
nop
sbb
sbb
nop
inc
and
outsb
push
data16
jg
pop
aaa
sub
pop
hlt
xchg
jmp
sbb
dec
fidivrl
xor
in
jp
adc
stc
xlat
mov
imul
ret
or
adc
and
dec
pop
ret
push
out
into
jo
adc
sub
and
rorb
test
sbb
dec
mov
mov
push
insb
jnp
shlb
push
nop
call
call
cmpb
mov
cmp
adc
imul
addb
xor
outsb
mov
mov
jbe
test
inc
jo
lds
push
test
stos
mov
xor
sbb
push
mov
sub
je
lods
lret
add
pop
mov
arpl
pushl
adc
push
pop
push
add
pop
je
hlt
gs
mov
in
xchg
xor
pop
ljmp
xchg
xchg
xchg
cmp
push
sbb
inc
cmp
jl
add
jae
cmp
push
pop
cmp
push
sahf
adc
and
test
push
jecxz
and
or
insl
pop
cmpb
jne
arpl
call
jae
cmp
test
shlb
mov
inc
cmp
cmp
test
out
loop
or
jns
jecxz
and
inc
lcall
test
orb
inc
xor
fmuls
ret
leave
iret
and
push
addl
inc
sub
notl
test
lea
sahf
mov
mov
mov
es
lock
in
adc
in
push
or
or
mov
jno
loopne
push
pop
pop
add
add
loopne
cmpsb
lds
int3
push
dec
jmp
mov
mov
mov
sbb
int3
push
pop
pop
adc
jb
iret
call
pop
add
leave
push
cmpsl
push
lea
sub
push
mov
and
andl
add
push
and
roll
lea
xchg
in
inc
shlb
shlb
shll
adc
xor
cmp
cs
out
in
jl
stos
mov
test
cwtl
or
adc
je
mov
roll
push
inc
jb
push
mov
pop
popa
pop
sub
bound
call
ffreep
pushf
add
jge
jmp
clc
jno
or
add
pop
mov
or
lods
or
icebp
ja
add
jne
push
cmpsl
and
lret
cmp
jns
sbbl
sti
mov
pop
imulb
adc
sub
popa
jno
jbe
popf
rol
test
jmp
jnp
and
ficoml
aam
test
push
or
jne
dec
fmull
mov
test
in
in
xchg
and
sub
mov
cltd
xor
out
dec
fdivs
mov
pop
ret
dec
xchg
and
pop
mov
mov
mov
sub
ror
bound
dec
mov
in
xor
out
pushl
jmp
mov
and
cltd
imul
in
push
push
ret
adc
add
dec
pop
ret
xor
inc
xchg
into
jo
cmp
cwtl
dec
pop
cmp
mov
roll
lret
push
dec
add
je
jo
sub
push
std
adc
cmpsl
xlat
add
call
iret
xchg
cmp
add
add
cltd
sub
inc
mov
jmp
lods
sbb
insb
mov
or
inc
je
dec
dec
push
jge
stc
lea
pop
in
lea
sarl
outsl
sub
cmp
mov
in
loope
xor
shlb
or
nop
loopne
xchg
rcrb
pop
imul
loope
cmp
notb
insb
ror
mov
or
pop
mov
sub
out
add
cwtl
xchg
mov
mov
nop
or
enter
cmpsb
int3
sub
xor
clc
push
insb
and
push
adc
popa
jbe
add
sarl
addb
cmpsb
js
fwait
addr16
idiv
push
push
incb
mov
xor
sbb
push
int3
in
fadds
sbb
repz
ret
imull
mov
lock
jb
mov
and
or
xchg
sbb
ljmp
in
xor
lock
orl
shl
rorb
pusha
sti
mov
mov
and
insb
adc
cld
pop
xchg
movl
das
lock
jb
fildl
push
fisttpll
sbb
add
xor
or
xor
sarl
test
pop
bound
push
jmp
xchg
lods
cmp
pop
cli
lea
iret
or
adc
inc
cmpl
and
imul
adc
or
inc
arpl
rorl
loope
sbb
xchg
mov
mov
dec
cmp
pop
pop
loopne
jmp
dec
lods
or
xor
and
les
clc
int
push
jmp
sub
push
adc
cmc
sub
add
ja
fsubl
test
jno
jo
pusha
js
mov
iret
bnd
repz
or
outsb
mov
cmc
ret
push
jae
lea
push
sub
and
inc
shll
inc
stos
sti
adc
add
or
orb
dec
pop
ret
inc
nop
aaa
pop
sar
or
adc
pop
jmp
sbb
adc
cmp
jne
or
cmp
xor
fnstenv
inc
jmp
push
jp
sub
sarb
lea
add
inc
adc
add
test
add
loop
fsub
sub
test
subl
js
movsl
mov
pop
mov
iret
fmull
mov
add
pop
inc
push
pop
adc
push
add
inc
test
and
xchg
dec
repnz
add
add
sbb
insl
incl
add
lea
xchg
lcall
iret
push
and
jbe
add
sub
sbb
mov
pop
pop
enter
rorb
pop
aaa
pop
mov
or
xor
pop
test
dec
or
jae
lahf
daa
cmp
or
adc
and
in
or
jle
xor
cltd
mov
push
and
or
adc
std
cmp
ja
cmpb
push
je
or
xlat
insl
xor
sbb
and
mov
lret
add
lods
gs
les
push
outsb
cmp
movsl
push
sub
unpcklps
mov
lods
inc
fimull
cmp
sub
push
inc
push
loop
scas
or
add
js
call
ret
pop
fdivs
or
push
and
or
stos
xchg
mov
outsl
mov
adc
shlb
lea
cli
ja
cmpb
fsubrl
imul
ret
push
enter
xchg
mov
add
imull
push
popw
cs
ret
add
sbb
mov
popa
popf
jmp
cmp
jne
push
imul
add
mov
mov
push
adc
and
aaa
lea
or
lret
lret
aam
or
cmp
and
test
loope
or
aaa
cld
xor
in
in
or
movl
or
test
inc
daa
mov
or
mov
ret
loop
mov
cmp
test
adc
xchg
jmp
test
push
test
div
sbb
pop
and
sub
mov
adc
pop
test
pop
xchg
mov
push
adc
dec
adc
xorb
mov
mov
add
imul
inc
xchg
push
pop
adc
inc
or
adc
imulb
aaa
push
hlt
inc
cmp
add
daa
push
or
adc
add
daa
mov
xor
adc
and
xor
inc
fsts
mov
xchg
jp
sbb
outsl
cmp
ret
leave
cmpsb
jbe
cmpl
pop
pop
mov
mov
xor
xor
pushf
addr16
mov
mov
pusha
add
add
dec
loope
xchg
adc
loopne
addr16
xor
lea
add
add
in
inc
inc
or
cmp
pop
scas
call
mov
nop
lahf
add
mov
sbb
stos
dec
add
add
pop
mov
leave
testl
mov
fwait
dec
xchg
es
dec
inc
pop
testb
xor
dec
sbb
in
sbb
mov
dec
jne
or
aaa
or
jl
mov
xchg
bound
pushf
pop
mov
fstps
xchg
pop
adc
sti
xor
mov
adc
adc
test
pop
sbb
pop
imul
sbb
xchg
fdecstp
push
mov
mov
sbbl
adc
dec
loope
lea
jae
rcll
add
or
sub
and
add
inc
nop
test
adc
mov
ret
testl
mov
xchg
cmp
xchg
js
jge
jo
mov
or
sbb
inc
dec
imul
xor
sub
adc
andl
add
inc
sub
adc
int
movsb
jle
jne
loope
sbb
mov
push
clc
sbb
pop
insl
adc
subb
adc
xchg
sbb
insl
cmp
xchg
adcl
add
jmp
in
dec
movsb
add
subb
mov
cmc
in
sbb
add
and
mov
test
test
add
xor
add
or
add
repnz
add
addr16
or
add
add
in
push
or
add
push
lret
imul
jge
and
mov
xchg
loopne
mov
xor
mov
outsb
or
sub
or
or
filds
call
enter
lock
pusha
sub
mov
mov
imul
jp
jl
fnstsw
cli
test
cmp
xchg
lock
pop
sub
add
sbb
mov
mov
aam
sbb
pop
cwtl
xor
pop
sub
dec
mov
jne
insl
xchg
or
mov
fdivr
addl
std
or
xchg
mov
pusha
mov
adc
xor
pop
add
dec
add
add
rcrl
imul
or
cmc
inc
nop
fnstcw
jge
jo
mov
cmp
jle
push
shr
dec
cmp
and
adc
sub
pop
add
mov
insl
sti
emms
or
shlb
or
adc
sbb
rcrb
adc
add
push
mov
sbb
sbb
shlb
jle
cwtl
or
cld
ss
jns
mov
cmc
xor
pop
ret
push
fwait
loop
icebp
das
push
or
push
jl
mov
cmp
in
leave
dec
rclb
jnp
inc
das
inc
loopne
adcb
dec
orb
fstps
sub
cmp
movsl
cmp
cs
jmp
sbb
pop
in
mov
sbb
cmp
push
lea
stos
insl
mov
lahf
std
test
ficomps
movntps
das
add
sbb
jp
inc
cmp
pop
sbb
jge
inc
inc
xor
mov
lock
nop
or
jp
mov
mov
mov
ret
mov
mov
sbb
loope
and
add
mov
enter
shl
add
loope
shl
xor
mov
mov
movsl
les
fidivrl
mov
test
sar
and
adc
sbb
push
adc
lea
sub
ja
add
fnstenv
mov
or
sbb
imul
cmp
or
adc
insb
mov
lods
or
dec
xchg
mov
or
and
loope
lock
sar
mov
inc
cmc
push
rolb
je
aas
xor
or
mov
shlb
ret
addl
cmpsl
fnstenv
adc
mov
popa
test
adc
test
lods
cmp
icebp
and
sbb
pop
jl
inc
faddp
test
pushf
adc
sbb
cmp
stos
xlat
iret
sti
cmp
adc
sub
xor
add
icebp
cmp
sbb
test
adc
ljmp
loop
xchg
adc
or
jns
push
aaa
addb
in
stos
dec
ljmp
mov
pop
dec
in
outsb
adc
sub
add
iret
lds
rol
xchg
jns
lds
cmpsl
or
or
pushf
dec
mov
ficoms
or
pop
pusha
shl
xchg
jo
pop
adc
daa
mov
in
cmpsb
xchg
andb
mov
mov
dec
xorl
in
add
xchg
xor
xor
mov
inc
adc
xor
addr16
sub
fldcw
ds
lea
push
push
or
jg
jle
push
loopne
jns
sahf
jbe
ss
jmp
push
js
or
aam
mov
jmp
das
cmp
je
sub
cmp
out
sub
std
push
and
inc
adc
add
and
fs
lret
dec
inc
shll
mov
testb
in
push
dec
xchg
pop
push
ret
xor
sub
jecxz
or
xor
scas
pusha
cmp
jne
push
popa
mov
and
or
and
bound
mov
fninit
adc
and
aad
testb
insb
xor
inc
sub
cmp
add
xchg
xor
inc
sbb
ret
and
dec
jnp
pushw
sbb
mov
popa
in
push
mov
sub
jecxz
add
ret
mov
or
pop
jmp
rorb
addb
push
or
cmp
inc
loopne
sub
sahf
xor
lock
mov
pop
or
pop
or
stc
ljmp
or
sub
sbb
and
jl
xor
adc
mov
mov
or
jo
inc
pop
pop
fstps
or
outsb
in
inc
or
jg
ja
add
sub
leave
sub
mov
inc
enter
mov
stos
cmp
jl
add
jns
cmp
or
loopne
inc
or
xchg
sbb
and
or
mov
pop
inc
mov
push
jno
loopne
push
jnp
int3
pop
push
gs
adc
mov
sbb
fmuls
fldl
addr16
movsb
dec
and
mov
js
jge
test
sbb
xor
pop
mov
subb
mov
or
ficoml
dec
lods
pop
push
mov
mov
sbb
xor
dec
cli
dec
fdivl
push
sbb
rolb
jnp
mov
xchg
daa
sbb
imul
push
push
call
das
test
xor
xlat
ljmp
cmpl
jnp
fcoms
test
sti
pop
push
dec
xchg
and
pop
mov
lea
inc
rcll
adc
sbb
cwtl
push
cmp
cltd
sub
xor
shr
xchg
add
fcompl
mov
add
cwtl
and
lods
test
mov
sub
fbld
adc
jecxz
jne
sbb
cmpsl
out
push
repnz
je
dec
paddb
inc
push
xchg
add
insb
fcmovbe
mov
add
sub
add
insb
push
mull
imul
jo
out
cmp
jle
dec
bound
jmp
movsb
icebp
js
leave
movzwl
inc
cmp
in
mov
sbb
jmp
push
push
inc
sub
pop
andb
insl
pop
fnstenv
adc
loope
loopne
jno
jmp
bnd
inc
xchg
jne
repz
add
sub
sub
or
sub
arpl
daa
and
insb
mov
or
sub
push
loop
insb
xor
mov
test
aam
inc
sub
add
push
loopne
dec
in
or
push
nop
sub
les
add
addl
jmp
push
subb
mov
lods
out
push
or
shrl
insb
lods
jne
inc
dec
cmp
pop
addr16
addl
lret
jne
sub
je
fstpl
add
add
add
jecxz
adc
inc
inc
push
sub
imul
cmp
je
push
sub
mov
testb
je
cmp
mov
shl
addb
add
int
ret
sub
shll
adc
add
loopw
out
add
mov
sub
loope,pn
push
mov
adc
lock
loop
xchg
inc
xchg
inc
or
jg
push
pop
mov
push
add
add
push
sub
loopne
jae
dec
sbb
mov
or
jmp
fisubrl
jl
dec
mov
mov
in
push
push
idiv
and
jg
add
push
add
and
hlt
cmovg
push
cmp
push
mov
and
fisubrs
add
or
lret
xor
hlt
xchg
jle
push
add
clc
jg
cmpsl
xor
add
push
push
mov
cmp
or
leave
or
inc
or
push
pusha
divb
add
fistl
popf
jno
mov
dec
fmull
push
add
mov
xchg
pop
subb
push
xlat
pop
mov
jbe
scas
rcrl
std
add
fs
lock
enter
or
testb
or
cmp
sbb
or
loopne
loop
sbb
roll
add
cmp
clc
sbb
lea
push
sbb
inc
lock
and
push
pop
ret
mov
sbb
lret
pop
push
xchg
shrb
cmp
pop
fisttpll
xchg
adc
stc
jmp
outsl
clc
jle
cmpsb
add
sbb
jmp
test
dec
pop
pop
xor
sub
leave
fcompl
rcrl
inc
add
pusha
dec
add
mov
mov
xor
cmpl
loop
jne
push
sub
add
and
fsubl
addl
aaa
les
add
add
jae
cmpsl
loopne
lods
enter
lods
sbb
sbb
aaa
dec
sbb
cmp
adc
lret
jns
push
or
sbb
cmp
jb
js
cmp
sbb
dec
loope
inc
mov
mov
jnp
loopne
xchg
mov
mov
in
mov
sub
jno
push
sub
add
outsl
js
stc
testb
jo
jmp
and
or
push
mov
sbb
mov
pop
fwait
add
add
and
xlat
add
cs
add
mov
mov
pop
inc
jne
fucomip
xor
addl
or
sbb
or
and
fisttpl
loopne
aas
add
sbbl
jne
pop
subl
leave
sub
push
pop
mov
and
jb
xchg
pop
xchg
adc
or
or
adc
shll
popa
and
out
pop
leave
xor
mov
add
js
mov
rorb
es
adc
mov
pop
mov
clc
sahf
cmpl
jle
roll
ljmp
or
inc
test
xor
push
cwtl
sbb
push
jl
popa
sub
xor
les
sub
lock
in
or
subb
and
fcmovnb
int3
mov
roll
jb
int3
and
lds
adc
inc
in
dec
repnz
repz
and
inc
add
insb
add
clc
adc
jbe
dec
leave
push
lea
loopne
and
icebp
cmp
mov
xchg
cmp
sub
je
or
jno
inc
enter
pushf
cmp
aam
adc
adc
push
popa
mov
aas
pop
in
popa
push
add
add
pop
in
jle
test
push
fwait
jo
dec
pop
lahf
loopne
push
or
push
arpl
cltd
pop
fidivl
xchg
or
loopne
xor
jg
lret
vpaddw
loopne
ficoms
ss
pop
push
ja
mov
jmp
cmc
inc
cmp
sbb
je
je
add
in
inc
mov
jo
cld
pop
push
out
es
ds
jb
dec
fisubrs
fisttps
ja
mov
pop
pop
loopne
dec
push
ds
jae
ss
jns
adc
pushf
xchg
call
jg
pop
test
and
mov
xor
sti
nop
xor
rcrb
mov
jnp
and
loope
or
adc
ret
ss
and
mov
nop
js
xorl
daa
fiadds
pop
pop
ret
sub
test
andb
lds
add
sbb
popf
out
in
add
in
cmp
dec
jnp
imul
sbb
gs
inc
push
adc
adc
out
jb
add
adc
cmpsl
dec
jmp
in
adc
dec
xchg
push
mov
lods
andb
scas
pop
xchg
mov
fnop
pop
dec
cld
and
sbbb
add
push
lock
mov
addl
mov
in
push
sbb
mov
sti
and
sbb
or
mov
cmp
jecxz
push
outsb
mov
inc
inc
inc
dec
clc
scas
inc
add
pop
jb
cmp
addl
dec
sbb
test
fists
xchg
push
jo
js
pop
adc
or
jp
adc
sub
loope
or
mov
daa
pop
xor
pop
cld
cmp
push
jg
mov
push
push
mov
add
and
xchg
mov
repnz
adc
in
push
adc
rolb
ret
xor
push
pop
jmp
addr16
rorb
adc
mov
sbb
mov
insb
or
out
iret
xchg
sub
jne
je
jmp
or
ret
jno
mov
dec
sub
sub
movsb
dec
out
adc
movsb
bound
outsb
inc
sbb
movlps
test
jae
cmp
push
clc
add
mov
arpl
clc
xor
ljmp
enter
imul
add
jnp
inc
cmp
mov
xchg
sub
aaa
and
pushf
outsb
cmp
leave
dec
inc
push
sbb
pop
pop
and
pop
push
sbb
adc
pop
mov
push
and
ja
and
inc
cltd
push
ds
out
ljmp
or
dec
and
pop
inc
lods
adc
in
mov
dec
js
addl
sbb
subl
cs
nop
jmp
dec
jnp
arpl
dec
inc
cld
das
mov
and
icebp
mov
in
lahf
pushf
push
jge
jne
or
push
mov
or
adc
cltd
sbb
jmp
cmpsl
and
int
or
xchg
shrb
jmp
jecxz
insl
and
test
and
sub
arpl
pop
xchg
sbb
cmp
jne
and
lds
out
inc
sbb
pop
ja
cmp
adc
jmp
adc
aad
sub
call
fwait
inc
xor
dec
sbb
mov
shll
and
mov
mov
shlb
add
cmp
or
adc
in
dec
mov
pop
mov
or
rcrb
mov
loopne
js
and
dec
push
sbb
jbe
or
jecxz
pushw
int3
movb
pop
mov
push
lcall
data16
or
jne
mov
mov
and
xchg
mov
jg
dec
test
cltd
mov
add
movd
movaps
das
mov
out
clc
jae
xor
jle
xor
cli
rclb
or
ror
test
or
jge
repz
or
jg
cli
fldt
and
fstl
jnp
mov
rorl
int3
push
std
mov
ret
or
add
adc
cld
add
sub
outsb
sarl
add
jbe
roll
add
adc
addps
int
idivl
adc
fcmovb
sbb
sbb
inc
pop
xlat
in
cmpsl
nop
xchg
mov
sbb
leave
inc
insl
addr16
ja
bound
add
mov
and
shll
icebp
lret
mov
jg
sub
xchg
adc
pop
test
in
jle
jg
jle
xor
push
mov
add
push
jns
jns
jns
pushf
pop
pop
in
mov
and
icebp
loope
or
loope
jecxz
mov
cmp
ja
jno
sub
xchg
jecxz
outsb
xchg
pusha
test
popa
xchg
sbb
and
jbe
adc
mov
mov
or
cwtl
addb
mov
sub
or
rorb
out
test
xchg
push
loope
outsb
bound
ljmp
sbb
and
cs
mov
or
es
mov
inc
inc
sarb
mov
aam
mov
les
pop
jmp
mov
mov
cmp
jne
add
mov
or
fists
and
push
stc
imul
popf
rolb
mov
pop
sbb
jo
cmpsl
or
cmp
enter
pusha
sub
and
sbb
add
or
popf
sahf
pop
ret
rcrb
hlt
jp
pop
and
push
inc
aam
xor
mov
jp
lock
outsl
and
cmpsl
push
add
xchg
jmp
push
sub
ret
adc
xchg
clc
push
sub
icebp
xchg
adc
xchg
inc
repnz
mov
cmp
movsb
jl
ljmp
mov
or
adc
jne
inc
cmp
inc
xor
movsl
fidivrs
in
mov
bound
mov
push
push
adc
add
nop
in
shll
das
out
sub
pop
mov
mov
aas
or
pop
inc
inc
cmp
cmp
lahf
mov
push
add
loopne
jnp
arpl
dec
adc
iret
fwait
adc
cmp
lret
div
add
es
or
add
push
inc
rorb
roll
stos
mov
xorl
imul
adc
or
fnstsw
das
mov
xchg
jle
dec
push
rcrb
enter
sbb
sub
add
ret
jg
shl
shlb
fisttpl
push
pop
or
inc
pop
add
mov
mov
scas
jmp
push
rol
inc
inc
cmp
jge
mov
cwtl
sbb
dec
xchg
jg
jmp
test
leave
mov
stos
mov
xchg
mov
push
mov
in
movl
cs
mov
enter
or
xchg
sub
inc
or
test
jo
je
add
cmovs
or
orl
xor
mov
dec
clc
popl
out
pop
push
mov
cltd
out
adc
lret
and
jns
xor
mov
jo
xor
xchg
fiaddl
stc
add
inc
push
mov
jg
into
lea
stos
mov
xor
mov
sbb
pop
push
jo
or
adc
loope
sysenter
popf
jo
or
loopne
fs
dec
mov
loopne
repz
data16
jne
negb
add
jmp
mov
mov
mov
adc
or
cmp
add
sbbb
je
sub
jle
bound
mov
mov
fmull
scas
cmp
and
sbb
push
add
cmpsl
inc
imulb
arpl
inc
in
mov
hlt
lcall
sub
xor
pop
div
into
jae
dec
enter
inc
imul
xor
and
jbe
in
sub
sub
outsb
mov
daa
push
movsb
add
adc
fidivs
sub
pop
pop
push
or
cmc
push
push
sarb
sub
outsb
rorl
cmp
data16
ficomps
push
push
jecxz
or
pushl
xorb
out
xchg
popf
dec
push
adc
xchg
add
daa
fcoms
negb
decl
int3
or
movsb
xor
ret
adc
sbb
push
push
test
insl
jecxz
in
pusha
jb
lcall
vmwrite
sbb
lods
inc
rol
push
dec
jge
jb
adc
sahf
adc
push
loope
jge
mov
xor
adc
ljmp
dec
inc
push
leave
rcrb
test
inc
test
pop
shrb
push
ficompl
add
jnp
subb
adc
cwtl
fdivrl
rol
inc
call
cmp
add
push
lds
sbb
mov
mov
sbb
enter
cmp
fmuls
and
sub
std
mov
loopne
out
add
cmp
jb
mov
test
in
sbb
ss
lods
push
adc
test
sub
add
push
cmpsb
fcompl
sub
fidivrs
jbe
pop
ds
or
pusha
adc
mov
test
lds
mov
or
out
dec
popa
jmp
jae
sub
sbb
pop
push
sbb
rcrb
in
add
jno
or
addr16
and
or
into
arpl
sub
pop
mov
sbb
and
fistpl
mov
and
je
hlt
mov
dec
jp
lods
into
mov
testb
inc
mov
or
adc
xchg
mov
or
mov
dec
jmp
pop
sub
je
inc
jnp
or
scas
cli
pushf
push
fmul
adc
push
jmp
inc
stc
aaa
sbb
adc
adc
scas
xor
sbb
xor
lock
stos
insb
inc
push
incb
rorb
ret
jmp
inc
pop
adc
push
or
inc
adc
or
adc
pop
jae
or
and
mov
dec
pop
mov
in
inc
movsl
cli
or
fsubr
pop
add
and
or
scas
adc
xor
sub
and
lds
push
dec
jl
push
dec
adc
icebp
push
les
adc
nop
out
cmpsl
or
cmp
sub
push
ljmp
xchg
into
mov
dec
mov
in
mov
adc
jge
sbbb
pop
cmp
pop
aad
push
rorb
sti
or
dec
inc
stc
push
psubw
adc
mov
arpl
das
pop
sbb
ret
mov
mov
mov
or
stos
dec
or
rorb
pop
and
icebp
mov
inc
stos
jmp
add
les
mov
sub
push
dec
inc
cmpsl
mov
lock
adc
and
pop
jne
pop
clc
lahf
or
push
push
lret
adc
testl
movsl
test
inc
call
subl
test
push
sbb
adc
js
outsb
and
push
xor
mov
pusha
sti
xor
pusha
mov
and
in
mov
sbb
xchg
in
mov
mov
and
inc
mov
popf
js
and
add
je
test
test
add
sub
bound
sub
xchg
vextractf64x4
test
mov
push
dec
ss
push
pop
add
enter
add
daa
mov
add
adc
and
imul
jno
jle
add
add
pop
push
flds
add
sahf
xchg
mov
or
sbb
push
pop
jb
cmpb
or
or
pop
enter
or
sub
cmp
or
pop
xchg
inc
enter
loop
or
enter
or
or
in
jns
add
push
nop
addr16
push
ja
jae
inc
push
push
rsqrtps
jb
fimuls
pop
adc
fwait
sub
fdivs
adc
inc
or
mov
adc
add
lcall
adc
xchg
add
pop
adc
adc
xor
mov
push
iret
enter
push
push
pop
pop
movsl
mov
sbb
cmp
sbb
cmp
pop
enter
sbb
jb
jb
sbb
sbb
dec
in
mov
jb
sbb
push
and
bound
sbb
sbb
sbb
and
pop
pop
and
incl
add
sub
cmp
or
xor
add
cmp
xchg
add
std
mov
and
icebp
and
mov
ljmp
add
cmp
je
lcall
shr
jns
push
ret
adc
aad
cmp
enter
mov
cmp
fwait
out
rol
sbb
add
fmulp
dec
call
nop
adc
dec
dec
cwtl
jmp
xor
ljmp
jmp
jmp
incb
in
in
cltd
sbb
out
repnz
sahf
enter
out
out
jge
inc
enter
out
pop
lock
imul
in
icebp
icebp
ud1
sahf
repnz
std
repz
hlt
hlt
cmp
pushf
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xor
cmp
pop
testl
cmp
clc
clc
inc
push
fsubs
clc
cltd
adc
iret
in
repnz
stc
lock
cli
cli
sbb
sbb
iret
sti
sbb
jb
jns
stos
cld
cld
cld
je
mov
xchg
aaa
cld
push
packuswb
cmp
std
xor
sbb
add
adc
ret
inc
or
and
mov
adc
in
cmp
scas
cmpsb
adc
es
jecxz
xchg
pop
add
std
sti
in
in
push
in
fdiv
inc
bound
daa
push
sub
sbb
out
xor
call
jns
sti
sub
dec
jae
and
lret
add
jmp
in
add
cli
popf
cli
dec
in
rcrl
push
fsubs
out
cltd
push
lock
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
sar
add
stc
and
jns
lcall
pop
mov
sbbb
inc
repnz
out
clc
dec
push
cmp
cmp
mov
cltd
mov
sub
orl
mov
dec
dec
and
sbb
cld
sub
mov
frstor
scas
lret
add
mul
pop
ret
xchg
pop
leave
shl
scas
idivl
inc
in
mov
out
out
xchg
add
out
out
xchg
pop
leave
and
and
dec
in
rcrl
and
sub
shl
das
xchg
inc
pop
pop
mov
xchg
notb
insb
out
xchg
inc
testb
sub
or
jno
imul
loop
push
mov
pop
xchg
cmc
jno
jns
jae
pop
jmp
push
push
dec
cmc
div
imul
cmp
int3
jns
and
cmp
clc
clc
jecxz
or
xchg
hlt
stc
popa
cmp
xchg
hlt
cli
cli
jno
jno
xchg
or
sbb
das
pushw
data16
cmp
out
push
push
jo
test
lahf
pusha
adc
xor
jb
or
or
repz
xchg
inc
pop
subl
xchg
pop
pop
lcall
mov
repz
add
pop
push
sbb
xchg
bnd
and
mov
xchg
repnz
and
mov
in
in
cmc
mov
repnz
andl
and
aaa
xchg
mov
mov
mulb
xchg
pop
dec
jo
icebp
jb
ret
xchg
pop
pop
test
cmp
sub
cmc
cmc
adc
and
add
jecxz
ljmp
test
popf
lock
cmp
lea
jns
jne
push
lock
mov
push
lock
push
leave
xlat
and
test
ss
imul
mov
out
xlat
push
pop
cmovno
jns
push
fcoms
inc
int3
add
les
add
inc
mov
jp
push
jnp
nop
mov
adc
jne
dec
jo
adc
dec
add
loopne
or
sahf
and
jmp
mov
pop
add
and
aas
mov
add
sarl
and
and
adc
jno
xchg
and
adc
cmp
data16
pop
loop
add
insb
ss
iret
push
je
fcoms
mov
sahf
cmpsl
fxam
push
dec
sub
repz
adc
jle
sbbl
inc
mov
leave
rorl
jge
and
add
ljmp
jle
rolb
add
push
mov
add
filds
jb
test
mov
into
or
push
je
int
lret
inc
push
imul
xchg
cld
stc
push
cmp
add
mov
add
mov
push
and
popa
clc
or
fs
lods
daa
movsb
lock
cld
lock
add
dec
ret
test
xchg
push
adc
inc
ss
adc
xchg
fmuls
cmp
xor
inc
decl
lea
fdivs
fistpll
cmp
push
sbb
mov
testb
sub
stos
pop
repz
add
sbb
cs
ret
adc
gs
repnz
add
xor
inc
inc
shlb
or
inc
add
stos
cmp
dec
mov
mov
fnstenv
xor
push
ret
sahf
mov
add
neg
xchg
add
push
pop
lcall
addb
loopne
cld
testb
adc
imul
lret
add
stos
mov
call
ljmp
add
sbb
and
loopne
pop
adc
ljmp
insl
test
push
outsb
and
sub
in
inc
mov
add
ret
adc
nop
stos
lea
in
cmp
adc
mov
test
add
pop
inc
jecxz
push
call
ret
out
adc
cmp
hlt
fwait
aas
ja
jb
pop
ja
add
jle
clc
test
pop
inc
inc
inc
inc
and
cmp
divb
push
ja
jmp
jb
jne
lods
test
mov
push
inc
and
cmp
add
movsb
lret
cmpsb
and
clc
mov
jo
cmp
sbb
jne
cmpsb
or
pop
mov
sbb
repnz
je
pop
roll
addl
pop
cmp
add
push
enter
add
cmp
or
std
adc
enter
data16
xor
cmpsl
add
xor
push
inc
inc
ret
mov
add
stos
adc
push
inc
mov
sbb
leave
or
lods
push
mov
out
push
mov
lea
mov
push
push
ret
push
into
pop
sti
inc
add
int
popf
test
xlat
pushl
lea
cmp
jne
orl
sbbb
jne
sub
add
roll
xchg
sbb
call
and
cmp
push
push
in
lret
sarb
mov
push
pop
in
insb
or
and
adc
mov
adc
pop
jne
dec
add
add
lds
sbb
dec
add
adc
lret
or
div
sbb
add
lret
cld
xor
sbb
pop
idiv
fidivs
lret
sub
cmp
cs
and
adc
pusha
fwait
pop
sbbl
enter
movsb
xchg
sub
adc
push
sub
and
mov
icebp
add
or
pop
mov
mov
inc
movsb
cmc
mov
sbb
mov
cmp
lock
pop
cmpsb
jo
or
xchg
je
sub
es
testb
aaa
shll
adc
mov
mov
pop
les
adc
les
daa
das
in
rcr
addb
sbb
pop
mov
mov
sbb
push
push
loope
add
xchg
pop
cmp
add
je
pop
cltd
pop
jg
cmp
adc
popa
push
mov
push
repz
es
cld
fisttpl
sbb
dec
or
out
lea
subb
add
sbb
test
int3
push
cmp
jne
mov
outsb
sahf
out
push
cmp
jne
es
jne
insl
insl
out
call
ljmp
xor
push
or
jns
ficomps
pop
jmp
adc
jmp
std
fs
xor
push
sub
pop
and
xor
inc
inc
xchg
inc
popa
mov
or
sub
shr
repnz
mov
and
das
mov
repz
pop
adc
sub
xlat
add
pusha
cmp
adc
or
pusha
test
lea
lds
std
or
sub
leave
inc
or
inc
roll
add
ja
add
and
nop
adcl
adc
cmp
xchg
cwtl
ja
and
addl
pop
dec
std
dec
push
fimull
inc
enter
pop
add
repz
sub
and
es
roll
orl
rolb
imul
scas
lcall
jmp
mov
cmp
mov
pushl
jne
or
or
cmp
sbb
sub
push
add
enter
hlt
fsubs
lcall
sbb
cwtl
adc
xor
pop
and
add
inc
add
inc
and
and
daa
xor
inc
dec
loop
sti
xor
push
sub
mov
add
jo
add
ret
jmp
lret
clc
mov
add
sbbb
pop
bound
stc
imul
push
adc
stos
add
testb
icebp
insb
subl
out
push
xor
das
enter
fimuls
popf
mov
push
mov
mov
mov
jns
inc
adc
add
inc
or
push
iret
imul
imul
sbbl
lret
add
sbb
push
insb
mov
cmp
andb
shlb
out
aas
lcall
pop
test
jbe
mov
adc
or
repz
push
std
movsl
jmp
dec
or
cmp
insb
out
push
movb
xor
push
iret
jnp
cmpsl
push
fdivs
push
and
mov
pop
push
mov
or
xlat
xor
add
mov
jnp
dec
push
dec
add
xchg
mov
xchg
add
push
movsb
rolb
sub
ds
repz
or
clc
xor
rep
mov
mov
call
iret
repz
lock
hlt
callw
clc
clc
cld
scas
lds
dec
add
fldcw
jnp
add
pop
push
push
lcall
pop
sti
sbb
insl
and
push
fcompl
jbe
push
lea
jl
cld
or
std
cld
out
loopne
divl
adc
mov
adc
nop
xchg
daa
stc
xchg
mov
sub
xor
hlt
setnp
fidivrl
add
out
add
xchg
push
jbe
out
add
cmpsb
and
push
add
nop
dec
dec
addr16
sbb
jno
add
ljmp
mov
or
push
movsb
lods
mov
mov
sbb
out
sahf
sbb
sbb
adc
out
adc
or
int
nop
out
add
lock
mov
or
push
or
ss
sub
xchg
cmpsb
push
add
pop
punpcklbw
xchg
daa
ja
test
bnd
push
dec
js
or
push
mov
mov
incl
inc
decl
jne,pn
mov
adc
es
push
cld
cmp
xor
test
pushl
push
cltd
pop
idiv
add
mov
pusha
or
call
out
in
aaa
cltd
cmp
dec
mov
mov
xor
rcrl
jmp
mov
dec
into
cmp
and
mov
aaa
loop
push
mov
dec
xchg
pop
xor
jmp
inc
adc
or
das
inc
inc
pop
xchg
idivb
rolb
test
xchg
lods
xor
add
fucomi
add
test
je
jb
push
or
dec
dec
je
push
push
aam
push
pop
adc
jne
negl
je
pop
insb
adc
adc
imul
push
xchg
out
dec
inc
push
mov
inc
daa
movsb
sbb
xchg
cmp
das
sbb
add
inc
add
mov
xchg
lods
filds
jp
push
js
loopne
sar
xor
cltd
add
dec
dec
adc
or
dec
push
imul
pop
pusha
mov
bound
stos
mov
push
xchg
test
in
jmp
push
mov
sub
aaa
mov
sub
insl
or
aas
shrb
jge
push
push
cltd
pop
idiv
pushw
jle
ret
push
xchg
cli
ds
xchg
inc
out
cmp
and
inc
push
mov
jmp
or
rorb
mov
cmp
pop
imul
pop
mov
fs
jmp
mov
insl
mov
sbb
xchg
orb
or
sbb
push
mov
pop
insb
sub
sbb
sbb
and
cmp
inc
das
aam
mov
mov
pop
incb
inc
jns
adc
shll
add
mov
sti
cmp
push
pop
sub
sub
in
shufps
add
outsl
add
loopne
cmp
add
and
pusha
data16
push
pop
xchg
push
cmp
mov
jmp
jge
add
pop
je
sbb
jl
and
popl
lret
std
jmp
scas
jno
mov
mov
or
dec
jo
mov
je
dec
inc
and
push
add
jge
mov
mov
add
sub
push
loop
mov
lahf
pop
pop
mov
cmovne
or
fisttps
push
fs
or
ret
jno
inc
mov
push
aaa
adcl
mov
sbb
loopne
mov
stc
pop
push
adc
push
adc
xchg
inc
jmp
push
pushf
pop
pop
cmp
mov
xor
jmp
and
xor
mov
imul
adc
push
movsb
xchg
aaa
outsb
and
pusha
movsl
shll
cmp
or
push
hlt
mov
or
push
adc
data16
ja
and
and
inc
adc
or
cmp
or
add
call
in
push
jnp
sbb
imul
in
insl
mov
int3
dec
ljmp
xchg
imul
pop
jg
cmp
clc
push
pop
or
insl
loope
fdivr
cld
and
hlt
dec
js
orl
test
test
aam
add
jge
push
decl
inc
jg
jbe
lods
push
mov
sbb
mov
fistl
add
lock
das
jl
clc
mov
inc
inc
cmp
je
cmpsb
mov
movsbl
cmp
adc
add
lods
popa
imul
and
or
xor
adc
insb
inc
pop
cmp
mov
push
mov
incl
faddl
imul
mov
push
inc
sbb
cwtl
or
sub
lret
sbb
lods
mov
and
jnp
sub
mov
or
out
mov
sbb
or
xchg
dec
push
pop
pop
push
lret
or
add
lods
sbb
dec
sub
or
fildll
mov
test
aas
lock
xchg
adc
test
incb
pop
cmp
je
mov
je
mov
dec
mov
dec
imul
int3
sub
add
push
subb
inc
int
dec
add
fs
pop
addb
cs
ja
cli
frstor
sub
cmovs
or
hlt
push
lret
push
dec
sahf
sbb
mov
add
fildl
dec
dec
mov
jl
and
sub
lea
popa
bound
mov
mov
popa
dec
or
pusha
pslld
sub
cs
dec
jmp
ljmp
repz
inc
or
push
popf
and
adc
sub
rorl
mov
ret
sbb
dec
xchg
in
cmp
sub
xor
mov
in
pop
push
xchg
ret
in
adc
and
in
adc
add
inc
sub
mov
popa
xchg
cmp
je
jecxz
test
push
rcrl
orb
call
lods
test
sbb
mov
or
ss
out
ret
sbb
inc
lods
adc
sti
push
jmp
cmp
je
xchg
fisttps
pusha
cmpb
jne
inc
inc
call
enter
mov
inc
jle
orl
mov
out
sub
cltd
pop
stos
call
jmp
xor
leave
cmp
pop
pop
sarl
ja
inc
jmp
push
pop
cli
pop
add
add
adc
xor
pmulhuw
decb
and
jne
and
enter
xchg
ds
inc
add
and
fstps
aad
pusha
leave
pop
mov
sub
fldz
pop
xor
adc
in
mov
or
and
adc
and
gs
test
or
pop
test
mov
rolb
adc
sbb
inc
cltd
jns
lock
rcr
loopne
add
push
push
jle
push
add
sbb
pop
xchg
ds
jmp
pop
arpl
xchg
rcl
push
pushw
jno
fs
push
clc
mov
inc
mov
pop
roll
push
cmp
push
std
mov
dec
add
mov
pop
rcrl
cld
adc
lods
sub
das
mov
shlb
sub
in
or
fdivrs
pushf
jo
into
dec
pushf
jbe
fists
outsb
jbe
js
adc
lock
jl
in
cmp
add
out
inc
jo
xor
dec
adc
push
xor
andl
inc
inc
cwtl
or
mov
daa
xor
sbb
or
shlb
sub
add
and
inc
ret
xchg
jno
gs
clc
push
mov
jnp
sahf
enter
xchg
add
ror
cmp
gs
adcb
sub
xor
push
aam
pushf
enter
in
push
sub
jmp
push
cltd
or
inc
dec
lcall
std
data16
xchg
enter
push
sbb
or
adc
sub
dec
or
das
adcb
or
fwait
xchg
pop
jmp
aas
sbb
cld
arpl
imul
xchg
xorb
cmp
xor
mov
ja
xor
sub
cld
shrb
adc
adc
xchg
adcb
and
loopne
add
or
inc
dec
rolb
scas
add
shlb
lret
mov
lea
cmp
ja
jbe
dec
ljmp
pop
pusha
js
mov
fcomi
adc
cmp
xorb
ret
adc
dec
xchg
jle
push
sub
xchg
loope
and
lea
pop
pop
cmp
inc
adc
pop
lcall
xchg
cmp
mov
inc
das
icebp
cmp
push
pop
jecxz
mov
xor
rcrb
dec
mov
je
lods
lock
adcl
or
call
out
and
pusha
sbb
enter
add
sub
rcll
cmpb
sub
sub
test
dec
dec
jg
gs
xor
sbb
addb
inc
movsl
push
pop
fstps
push
ret
xchg
ljmp
mov
add
enter
hlt
inc
push
pop
adc
and
pop
mov
and
sarb
incb
scas
mov
dec
jo
push
sub
mov
neg
mov
inc
jge
mov
dec
cli
or
add
jmp
cmp
or
adcl
mov
lock
pop
cmp
jb
scas
add
jb
lahf
mov
mov
dec
dec
mov
inc
or
or
or
or
sbb
ret
shlb
or
add
dec
sbb
icebp
sub
push
cmp
addb
popa
shll
jne
adc
adc
orl
data16
lret
cmpsb
addl
icebp
sub
divl
or
jg
add
mov
shr
mov
addl
cmpsl
mov
add
inc
xchg
int3
and
test
lock
imul
cs
out
clc
fdiv
and
mov
pop
jle
xchg
adc
movsb
jb
pop
ljmp
sub
dec
xchg
lock
cmp
push
jnp
subl
push
clc
pop
ljmp
adc
xchg
test
push
xchg
and
and
daa
sub
mov
movl
jl
mov
adc
ret
sarl
xorl
and
rolb
imul
mov
push
shl
mov
add
mov
dec
mov
icebp
lea
push
adc
push
pop
dec
ss
adc
enter
add
imul
rolb
ret
es
and
add
insb
xchg
lret
jo
push
xor
add
sbb
or
sub
or
add
add
fldenv
inc
das
add
or
jo
or
adc
jae
jo
adc
or
pusha
inc
call
inc
sbbl
or
shlb
add
out
cmp
das
xchg
cmpsb
cmpsb
pop
cmp
lcall
or
lea
push
pop
or
addl
sbb
lods
add
or
dec
cld
std
add
fists
mov
push
push
fldl
adc
ret
adc
in
subb
add
ljmp
or
mov
fstl
rcrb
sbb
dec
loopne
aaa
repnz
xchg
jne
adc
rclb
sub
xor
mov
pop
mov
call
adc
lock
and
cmpsb
ret
push
add
mov
jb
and
sbb
shll
je
add
iret
xor
lods
sbb
mov
pop
outsb
xor
pushf
testb
push
fs
inc
mov
inc
mov
mov
mov
sti
sbbb
or
push
lea
dec
xchg
mov
pop
pop
clc
enter
adc
add
xchg
cli
les
push
insl
jl
jg
pop
fsubrs
loope
ds
insl
and
xor
and
add
hlt
xchg
mov
pop
push
mov
scas
movsl
or
lock
and
push
adc
mov
or
rcrb
pop
adc
das
and
sbb
push
scas
sarl
mov
sub
outsb
add
and
lock
cmp
fisttpll
push
or
push
lods
lret
test
test
inc
pop
sub
xchg
fnsave
adc
xchg
xchg
sub
sub
push
or
xchg
inc
sbb
sbb
adc
popl
paddsb
push
out
mov
pop
test
jnp
jmp
mov
mov
mov
or
xchg
push
add
cmp
stc
ds
mov
faddl
sarl
push
mov
cmpsl
or
loopne
call
testb
leave
or
sub
js
dec
sub
jp
xor
popa
mov
dec
mov
dec
cmpsl
repnz
adc
or
test
xchg
pop
nop
and
dec
loope
in
jl
mov
mov
aas
add
jle
shl
and
insb
add
mov
cld
pop
into
pop
sub
mov
add
mov
inc
dec
jne
lea
int3
repz
push
inc
jle
mov
stos
leave
shr
pop
scas
jmp
outsl
sbb
sti
mov
mov
out
pop
hlt
mov
and
and
add
lea
pop
or
add
sub
adc
adc
xchg
or
addl
je
popf
ja
inc
push
cmp
cld
fidivl
stos
mov
aas
mov
and
sub
push
cmp
push
push
cld
test
dec
and
adc
xchg
pop
int
jbe
incl
sbb
jmp
and
je
inc
ret
and
or
adc
adc
aad
xor
jo
jmp
mov
mov
mov
scas
and
and
sti
aas
lods
add
or
push
roll
cmp
add
ljmp
push
je
inc
dec
ret
lret
or
enter
clc
mov
mov
idivb
or
shlb
not
and
movb
push
sbb
inc
push
cmp
adc
stos
clc
dec
jns
xorb
cmp
jo
les
or
pop
insb
push
cld
add
sbb
mov
jmp
jbe,pn
xchg
imul
sub
or
mov
test
mov
cmpsb
push
sbb
aam
fmull
cmpsb
inc
cmp
std
jne
ror
mov
fsubr
fldt
stos
push
inc
popf
es
add
inc
add
mov
ds
mov
xor
mov
inc
dec
mov
or
add
pop
std
push
ret
mov
jbe
sub
adc
out
into
std
fidivl
push
push
dec
add
or
aam
shrb
scas
into
dec
fwait
push
push
and
xor
nop
sbb
inc
rolb
loopne
ret
push
lret
push
call
add
jne
scas
push
add
cmc
das
mul
test
inc
cmc
lea
lahf
in
leave
xor
lea
xorl
mov
shlb
jmp
loopne
adcb
cmp
lcall
mov
ret
outsb
jne
outsb
incl
inc
add
jb
mov
ljmp
cs
fidivs
ret
je
or
adc
mov
inc
push
sbb
jmp
xor
inc
dec
jne
mov
inc
sbb
cmpsb
fbld
sbb
jle
cmp
xor
cltd
inc
push
push
adc
or
inc
dec
jne
shlb
cwtl
icebp
jnp
movsb
mov
add
xchg
or
jmp
or
loop
cmp
and
lahf
in
adc
pop
push
dec
loopne
adc
add
mov
mov
mov
mov
push
cwtl
aam
or
and
ss
insb
test
jmp
inc
sbb
sbb
mov
add
je
scas
mov
ret
lcall
push
inc
cmpsb
cmp
dec
push
ss
rorb
dec
cli
add
ljmp
repnz
and
fs
push
or
pop
inc
inc
outsl
or
adcl
sub
jmp
xor
xchg
idivl
cmp
dec
sbb
mov
inc
xor
fwait
xlat
add
push
divb
push
sub
jmp
adc
jno
es
inc
mov
mov
and
push
add
flds
mov
leave
cmpl
rclb
push
inc
mov
cmpsb
cmpl
adc
cmp
fisubrs
or
cld
mov
pop
and
sbb
cmp
pop
pushl
mov
out
imul
sarb
rolb
fiaddl
les
popa
fwait
sub
subb
and
rcrb
cwtl
shrb
fistpll
aam
pop
push
push
sbb
js
cwtl
sub
inc
in
xor
test
pushl
out
jle
or
pushf
add
push
cmpl
add
insb
add
push
pop
cmp
sahf
inc
add
rclb
pop
test
dec
or
movl
in
es
addb
dec
ja
sbb
notb
mov
mov
lea
in
xchg
and
aaa
cmpl
sbb
or
cmovne
mov
movsl
sub
ss
and
adc
xor
movsl
adc
xor
dec
xor
or
aam
sub
lods
and
jl
push
and
jmp
clc
xchg
in
and
adc
mov
sbb
adc
js
mov
push
inc
ret
sbb
jo
xor
test
mov
ds
cltd
inc
cmpb
inc
sub
rcll
adc
ficomps
in
pop
sbb
int3
mov
and
push
bound
jnp
sub
rol
cmp
gs
sbb
mov
and
scas
cmc
lcall
sbb
xorb
lret
sub
mov
add
cmc
cld
insl
fldl
xchg
call
in
sbb
cwtl
sbb
inc
and
add
adc
push
push
mov
mov
inc
aas
push
inc
push
and
push
mov
dec
cs
dec
push
xorb
cmovbe
mov
inc
cwtl
and
push
xchg
and
mov
insb
sub
fstpt
cld
push
jo
lds
or
inc
mov
xorl
loope
xor
dec
inc
push
add
mov
in
cmp
shlb
shll
mov
jnp
cmp
inc
cmp
outsl
mov
dec
xchg
inc
pusha
fcom
jb
das
inc
sub
or
sbb
ret
dec
push
xchg
pop
xor
push
push
movsb
pushf
or
mov
imul
rolb
jnp
lcall
les
mov
and
mov
xor
xorl
rol
repz
lahf
rdmsr
clc
inc
and
add
nop
xchg
sbb
nop
add
nop
cmp
inc
cwtl
lds
cmp
cmp
mov
xor
js
push
ud0
push
adc
push
sub
dec
xor
fiadds
aad
insb
and
pop
cmp
adc
test
rorb
mov
jge
mov
inc
xor
or
pop
add
cs
push
mov
test
mov
pop
jle
pushf
cwtl
xchg
pushf
push
cmpsl
jae
cmpl
imul
lahf
aad
pusha
cmpsb
and
daa
test
mov
jno
push
xor
sti
push
int3
dec
ja
mov
out
mov
mov
fwait
popf
je
xchg
ss
mov
es
cmp
loopne
aaa
add
mov
inc
push
xchg
mov
mov
je
inc
add
das
pusha
sbb
ja
movsb
hlt
xchg
aaa
jmp
add
mov
cmp
roll
das
mov
sub
pop
pop
imul
std
pop
pop
pop
popf
aam
sarb
clc
jns
jns
or
test
movsl
rclb
cld
jns
mov
fimuls
inc
mov
call
cmp
dec
cld
adc
sub
aam
push
popl
xchg
and
out
fcomps
lea
mov
add
mov
rolb
popa
dec
ret
cmp
in
jle
popa
pop
js
jmp
jge
dec
loop
inc
bound
fists
push
push
mov
add
insb
or
jmp
aas
add
or
sub
incl
fadds
loop
sub
nop
adc
pop
or
pop
sbb
jmp
mov
or
pop
scas
xchg
adc
hlt
pop
hlt
pop
mov
jmp
fadds
sar
cmp
repz
test
ret
ret
xor
scas
adcl
sub
cmp
stos
mov
pusha
mov
pop
pop
nop
movsb
push
enter
icebp
push
lock
pop
nop
pusha
insl
adc
add
repz
push
push
pop
fs
add
jecxz
je
pusha
pop
ds
int
inc
mov
int3
pusha
add
mov
and
clc
or
or
sbb
push
adcb
test
pusha
roll
mov
shll
jmp
call
js
or
add
jnp
mov
or
shlb
add
pusha
imul
adc
rorl
jge
inc
mov
sbbb
cmp
int3
push
mov
pop
and
push
mov
push
or
and
adc
sbb
adc
or
dec
add
scas
xor
and
ret
testl
aas
xor
sbb
hlt
fdiv
fldl
imul
and
cltd
shlb
inc
mov
cmp
mov
enter
cmp
inc
or
je
insb
popf
or
dec
dec
adc
loope
jae
and
or
dec
lcall
sbb
push
jge
jmp
subl
addb
je
lods
insl
adcb
movl
ficoms
push
adc
mov
pop
out
inc
xor
add
adc
inc
test
adc
push
je
dec
push
jno
cmp
or
test
or
inc
xchg
or
jb
sbb
pop
sbb
and
cwtl
outsl
push
xor
hlt
push
rolb
lock
pop
je
mov
xor
ret
mov
or
shr
jle
test
ja
enter
pop
inc
call
sub
cmp
rorl
push
mov
jno
sbb
inc
sbb
int
pop
mov
and
mov
push
inc
and
or
add
lock
faddl
and
adc
sub
int3
loopne
mov
pop
cs
iret
sub
cmp
mov
or
or
inc
addb
pop
adc
push
loope
les
or
sbb
xchg
fimull
dec
mov
pop
add
jg
lea
inc
cmp
inc
push
cmc
mov
adc
mov
dec
push
int3
push
imul
dec
inc
push
push
inc
pushf
or
daa
jmp
and
cmp
mov
inc
lock
dec
inc
and
out
in
add
pop
adc
loop
sub
ret
xchg
fildl
int
pop
mov
mov
or
lock
test
mov
mov
or
jecxz
push
cmp
aaa
dec
adc
ss
dec
mov
pop
and
cltd
push
xchg
scas
xor
mov
adc
jbe
push
xchg
test
inc
shrb
push
fstl
inc
pusha
outsb
pop
inc
ret
xor
push
aaa
cmp
call
in
xor
mov
add
dec
xchg
jo
push
inc
push
jle
push
inc
pop
jge
js
sub
inc
add
xor
mov
movsb
or
mov
sub
pop
adc
cli
add
add
inc
inc
jp
mov
mov
and
aas
xor
shlb
xorb
sbb
and
push
push
push
fldl
mov
js
or
mov
je
add
bound
pop
lock
cmp
in
mov
in
hlt
fadd
fdivrs
cmp
loope
mov
or
dec
fnstsw
mov
mov
cmpsl
bound
inc
cmp
leave
test
in
or
call
or
inc
cld
pop
and
sub
dec
sub
in
dec
loop
push
mov
lea
cs
ja
mov
or
mov
loopne
test
mov
sbb
pop
sar
pop
mov
shrb
add
mov
in
jmp
aam
clc
sbb
lret
or
stos
push
dec
or
je
or
dec
inc
pop
daa
xchg
adc
cltd
mov
push
pop
add
ret
out
pop
andl
nop
cli
sub
cmp
mov
adc
cmp
aas
mov
sub
arpl
mov
pop
stos
lret
or
ja
movsl
mov
dec
enter
es
out
pop
enter
movsl
hlt
hlt
out
sub
stc
in
je
or
inc
rcrl
out
je
lock
test
ret
insb
nop
sbb
sub
adc
addr16
loop
in
adc
and
pop
or
enter
add
orb
enter
movsl
pop
cltd
sbb
fs
or
lret
out
imul
data16
sbb
js
pop
jl
xor
xlat
je
mov
inc
cs
mov
jb
pop
dec
fs
or
sbb
mov
inc
je
pop
push
in
jmp
int3
or
mov
ret
add
add
imul
cmp
loop
and
push
dec
nop
and
jae
or
test
sbb
xor
stc
xchg
pop
hlt
aaa
loope
ja
cwtl
das
mov
adcl
mov
out
ret
pop
sbb
dec
and
in
add
outsb
and
dec
sti
dec
sub
in
ret
sub
test
and
pop
push
mov
add
push
insl
xor
stos
cmp
mov
js
negl
lahf
xor
movsb
pusha
mov
push
movsb
xchg
pusha
ss
cmp
cmpsl
add
mov
mov
add
push
mov
pushl
xchg
xor
mov
icebp
or
sbb
jge
lcall
mov
inc
insb
cli
inc
cmp
pop
or
sbb
xor
jecxz
mov
adc
je
add
ret
out
pop
jns
push
sbb
xor
pop
imul
jo
add
add
aad
sub
addr16
scas
or
repnz
push
outsb
je
test
jns
sbb
inc
je
or
push
xor
jae
rcr
test
mov
push
clc
je
pop
movsb
xchg
add
mov
jb
xorb
je
xor
lds
jecxz
rcr
adcb
xor
into
ficompl
add
pop
test
mov
jne
mov
out
pop
mov
pop
jle
insl
cmpl
incl
js
or
mov
int
or
imul
out
call
sub
cwtl
sti
outsl
inc
fildl
cmc
mov
sub
lock
lea
mov
sti
inc
xor
mov
subb
sbb
movsl
push
dec
sub
pop
test
scas
popf
or
sbb
dec
subb
sub
inc
orl
pop
int
hlt
outsb
mov
xorb
cld
jp
adc
decb
xor
das
test
rclb
aaa
push
xor
cli
xchg
xchg
enter
push
scas
clc
inc
test
inc
loop
xorb
dec
aad
push
sbb
inc
or
insb
mov
outsb
adc
or
ss
je
cltd
push
dec
sub
je
or
jl
and
movsb
jae
jno
roll
neg
jecxz
nop
rcrb
push
jbe
popf
jmp
or
sbb
dec
idiv
mov
add
pop
mov
or
jne
and
into
mov
sti
lret
adc
push
inc
pop
les
bound
add
cld
add
stc
cmp
xchg
dec
icebp
pop
lcall
dec
jmp
pop
xchg
loop
mov
sub
inc
cmp
ret
cwtl
aas
je
into
cmp
push
and
dec
shlb
xor
cmc
push
jmp
mov
ret
inc
les
jmp
dec
jo
neg
add
inc
hlt
repz
cmp
push
je
gs
pop
add
mov
dec
add
dec
jl
jecxz
jmp
orb
jmp
test
cli
adc
stos
mov
adc
enter
fisubrs
popf
fcoml
or
pop
sub
adc
shl
push
jp
dec
xor
dec
fdivrl
lea
stos
aas
jle
or
add
push
jbe
dec
ret
sub
push
fdivs
add
cmp
push
add
xor
in
fistps
jae
push
rcll
pop
popa
jle
sbb
xchg
sub
mov
jg
cmovns
nop
lea
cli
and
push
and
and
cmp
add
push
cmp
das
xchg
les
adc
icebp
sti
and
movsl
daa
pop
mov
fiaddl
in
sub
movsb
cmp
adc
add
pop
or
and
mov
mov
lock
jle
push
add
push
xchg
icebp
imul
mov
fidivl
ss
rcrb
sbb
scas
mul
and
or
aam
sbb
inc
add
sub
xchg
jp
jge
idivb
pop
jo
cld
dec
hlt
add
lea
inc
xor
dec
pop
test
ret
repnz
inc
push
jp
jl
and
andl
mov
decl
mov
ljmp
inc
dec
popa
test
rcll
movb
sti
or
jl
push
pop
popa
lcall
push
aas
out
fcomps
mov
xor
pop
or
xchg
pop
add
mov
rcrl
mov
xor
pop
insl
shl
push
xor
sbb
aas
cmc
sub
mov
setg
pop
dec
sti
jmp
push
lea
addb
add
adc
adc
jb
imul
shrb
sub
add
fs
or
add
mov
mov
in
adc
ss
pop
lcall
sub
jbe
push
or
adc
enter
jmp
push
inc
sub
xchg
scas
jl
rorl
sub
rclb
enter
inc
cltd
pop
inc
push
ret
push
mov
sub
stos
cmpb
shr
mov
imul
jge
add
add
adc
dec
or
lret
jae
xor
sbb
mov
outsb
mov
push
cld
ds
jmp
int3
dec
jne
sar
dec
cmp
jbe
push
pop
dec
loopne
imul
inc
orb
and
mov
shr
lea
not
and
decb
jne
mov
sbb
lea
xor
mov
push
pop
add
inc
or
add
add
cmpsb
push
add
push
or
mov
sub
jmp
clc
and
mov
push
shlb
mov
sar
xor
dec
pop
cmp
pop
mov
clc
imul
je
jp
jbe
int
push
jo
jno
jno
mov
pop
decl
and
add
jbe
push
xor
das
mov
xor
cmp
push
jle
pop
xor
push
mov
ficompl
leave
xchg
mov
fs
fidivrs
rcrl
ret
mov
int3
inc
adc
negl
pop
dec
or
adc
fdivrl
pusha
mov
mov
inc
mov
mov
and
ret
sti
or
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
dec
jo
inc
inc
xor
inc
and
and
scas
iret
push
or
adc
stos
pusha
xchg
xor
subb
lsl
scas
jge
jp
push
call
aas
gs
push
or
dec
and
sbb
mov
inc
aas
jnp
add
decb
adc
inc
add
jge
cmp
and
call
jne
push
push
mov
or
jg
mov
push
mov
and
cli
insb
dec
adc
add
ficompl
add
cmp
testl
mov
outsb
bswap
pusha
mov
adc
imul
xchg
outsl
out
push
adc
xchg
js
add
xchg
adc
les
adc
xchg
inc
mov
fisubrl
inc
adc
pop
and
xor
adc
aas
pop
rclb
sahf
int
jmp
xorl
mov
andb
lds
pop
sarb
and
ret
mov
mov
je
add
inc
push
mov
mov
imul
pushf
push
incb
pop
enter
lock
or
hlt
or
push
push
out
notb
sub
imul
clc
mov
cmp
sub
shr
pop
clc
aaa
push
xor
orl
orl
jno
nop
cld
or
adc
fiaddl
lock
movl
or
xchg
add
insl
out
shlb
add
adc
fs
inc
cli
push
pop
or
sahf
pop
mov
mov
decl
nop
dec
inc
jne
or
lds
clc
aad
ljmp
jl
dec
sti
or
adc
loopne
or
push
mov
addb
sbb
pop
dec
and
icebp
push
hlt
or
out
adc
sbb
out
call
cmp
mov
stc
add
mov
loopne
push
int3
push
pop
mov
xor
adc
pop
inc
stc
sbb
push
mov
add
ds
add
cmp
nop
xor
negl
or
push
jns
divb
add
das
mov
pop
inc
sub
adc
pushf
int
mov
sar
dec
mov
cs
fstpl
jae
sbb
lea
cmp
xor
push
xor
jle
mov
pop
test
push
pop
adc
adcb
sbb
iret
xlat
fildl
js
and
and
js
sbb
imul
adc
inc
insb
xor
or
mov
aam
cwtl
and
and
clc
jo
dec
xchg
subb
lea
mov
mov
sub
dec
insb
pop
xor
push
rcll
dec
jp
movsb
pop
dec
bound
mov
ret
add
cmp
jns
add
push
mov
ret
fisttps
mov
sbb
fbstp
cmp
dec
ficoms
add
lock
loope
lea
mov
mov
jbe
add
mov
push
cmp
shlb
lods
decb
into
mov
out
cmp
jo
xor
jns
dec
push
sbb
sbb
out
adc
adc
lock
pop
and
cld
call
push
dec
push
push
push
jge
or
out
adc
mov
or
lock
stos
dec
or
or
and
and
or
and
rolb
xchg
ret
adc
add
call
sbb
ror
jne
fidivrs
add
jbe
pop
lock
aaa
arpl
orb
addr16
mov
and
outsl
jae
push
sub
shr
lods
cmp
je
mov
dec
shlb
and
fsubl
cmovae
pop
iret
jne
xor
pusha
sub
cmp
push
les
dec
push
ficoms
in
jmp
pop
jbe
repz
mov
and
jne
mov
mov
and
leave
inc
test
inc
push
in
sub
or
out
icebp
sbb
fdivrl
mov
cmpsb
mov
add
xchg
add
stos
inc
sbb
iret
push
stos
inc
cmp
repnz
and
mov
mov
sub
jne
or
or
sub
dec
mov
addr16
pop
pusha
dec
bound
dec
jmp
and
and
imul
je
leave
xor
adc
into
push
or
das
pop
xor
and
sub
jge
jle
mov
push
ret
out
or
mov
cld
or
sbb
inc
or
push
mov
inc
inc
mov
ja
push
lcall
sahf
aad
or
add
scas
and
or
lods
lods
test
lea
ds
sbb
mov
into
cmp
and
call
add
jmp
jmp
xchg
sbb
loopne
fisttps
pop
jb
or
xorl
cld
jno
add
mov
shll
jbe
loopne
and
mov
sti
decb
popa
sbb
rolb
mov
jp
mov
push
sub
out
nop
mov
and
test
icebp
mov
add
andb
shlb
dec
mov
pop
repz
sbbl
xchg
cld
in
cmp
cmp
sub
add
push
mov
pop
push
add
pop
adc
fidivs
mov
test
repnz
cmpsl
dec
fcoms
adc
push
iret
mov
or
push
mov
inc
loop
sbb
push
dec
cmpsb
add
sarl
faddp
sti
fisubrl
sbb
std
lahf
sub
adcl
icebp
loope
divl
sbbl
pop
jne
push
rcrb
pop
mov
std
mov
sbb
mov
pop
sub
aam
das
testb
movsl
inc
js
ret
inc
push
or
pop
mov
jp
aaa
inc
andb
or
or
xchg
sub
and
xor
fists
int3
push
mov
imul
or
je
mov
sbb
fsubrs
mov
fsubrs
fwait
or
pop
push
cs
cmpl
cs
lcall
in
and
mov
stos
inc
sub
aam
jne
lock
loopne
or
push
jmp
dec
sbb
xor
insb
adc
je
inc
jns
adc
cmpl
mov
xor
inc
stos
push
cs
sbb
inc
xlat
pop
inc
inc
add
les
pop
dec
push
pop
cmp
sbb
popf
call
dec
aam
hlt
mov
test
push
and
pop
xor
pushf
sbb
mov
sbb
jge
xchg
pop
lock
jmp
jns
imul
int3
test
in
pushf
mov
je
add
cmp
mov
dec
dec
inc
rorl
subb
xchg
imul
test
enter
mov
sub
sub
repnz
or
xor
pop
jae
mov
jge
out
jb
shlb
pop
shrb
in
lods
or
push
outsl
pop
mov
outsl
sbb
xchg
sub
xor
arpl
sub
pop
cmp
lea
jge
leave
jb
jb
jge
scas
and
hlt
fisubrs
loopne
mov
jb
jae
push
inc
pushf
push
adc
push
fistpll
insb
jne
jp
jbe
mov
and
pop
pop
sbb
jg
mov
add
cmp
fldt
cmp
inc
adc
or
sbb
cmc
jmp
add
dec
xor
dec
xor
cmpsb
mov
ret
in
and
in
xchg
mov
leave
add
call
add
xchg
pop
and
xchg
jo
jge
test
fwait
dec
dec
dec
gs
cmpsb
call
and
mov
inc
push
and
in
cmpsl
jl
jl
daa
daa
xchg
lret
neg
lret
test
scas
sbbb
adc
inc
rcrb
fs
pop
aad
mov
ror
jg
sbb
add
mov
mov
jnp
cmpsl
dec
sahf
es
pop
mov
cltd
mov
inc
mov
in
jb
shr
xchg
or
mov
mov
scas
jbe
js
push
hlt
xchg
inc
push
cmpsb
in
xchg
push
lods
rclb
push
inc
call
inc
in
repnz
push
and
rol
and
shlb
loopne
inc
loop
in
in
push
inc
les
les
test
jb
test
popa
mov
inc
int3
test
loope
lahf
data16
cmp
mov
or
sysret
je
or
sbb
mov
sbb
and
test
cmpsl
stc
cmp
dec
test
orb
inc
ss
notl
mov
jnp
jne
cmp
sub
jbe
push
or
xchg
add
lock
lret
jne
out
ret
mov
sub
xchg
and
jno
fstl
pop
jne
out
je
popa
in
dec
rcll
and
mov
xchg
mov
add
or
inc
cmp
or
addl
push
lods
inc
jno
jle
mov
mov
cmp
push
mov
add
es
push
jnp
adc
add
adc
mov
sbb
or
test
aaa
cmp
add
add
push
cmp
imul
cmp
out
insl
xor
adc
push
xchg
add
xor
xchg
frstor
xchg
cmp
flds
ret
xchg
stos
add
mov
ss
out
add
add
mov
mov
add
jmp
add
test
js
add
in
mov
cmpsl
ficompl
shrb
adc
pop
inc
add
mov
or
ficomps
aaa
inc
cld
push
mov
fadds
stos
sbbb
dec
cmp
push
add
rolb
je
fstl
imul
test
rorl
stos
and
or
not
and
pop
or
and
cmp
and
pop
mov
or
out
push
clc
add
shll
std
incb
enter
lcall
icebp
cmpsl
mov
mov
cmp
cmpsb
inc
popa
cwtl
xchg
clc
lret
je
pop
call
sbb
add
in
rcrl
dec
pop
inc
test
rcrl
int
inc
inc
fisubl
push
movsl
xchg
dec
pop
in
dec
je
push
or
dec
fmul
fidivrl
jno
dec
fstpl
fstpl
push
fldl
rcrl
push
or
xlat
push
mov
aad
test
enter
ja
fisubrs
push
leave
pop
jmp
jo
push
fwait
in
mov
dec
jge
mov
xchg
pop
in
cmp
das
cmp
imul
xchg
dec
je
add
and
sbb
lret
push
sti
fnstenv
lcall
xchg
insl
ljmp
outsb
imul
add
xchg
aas
int
adc
add
cmpsb
mov
stos
xchg
rorl
inc
xor
jno
mov
or
add
jae
sbb
call
hlt
lock
sub
jmp
adc
pop
push
call
popa
add
fstl
push
shl
push
icebp
inc
cs
xor
jne
mov
cmp
repz
lock
mov
and
sub
lahf
aas
lret
mov
push
push
adc
imul
xor
mov
and
pop
in
or
fildl
insb
lock
push
test
das
pop
lods
subb
jne
xchg
in
mov
out
cmp
sbb
and
inc
pop
push
cmp
jmp
ja
std
inc
jmp
push
push
xchg
jmp
inc
faddl
sub
and
push
jmp
test
fmull
jae
dec
pop
fadds
cmp
push
fcom
and
sbbl
mulb
imul
cmp
adc
paddq
mov
nop
adc
inc
sbb
lods
push
inc
aas
xor
loopne
hlt
out
mov
xlat
aas
test
cmp
push
xor
mov
test
pop
out
mov
outsl
ss
xor
test
aas
mov
leave
aad
add
jl
mov
movsb
test
mov
mov
int3
shlb
call
test
shlb
mov
lea
xchg
shl
inc
into
jne
cmp
pop
push
dec
cmpsl
lret
mov
inc
sub
xchg
add
incb
ss
movsl
jnp
push
repnz
jne
dec
sbb
cli
fldt
jecxz
sar
lea
testb
or
xchg
stos
mov
cmp
xchg
test
xchg
mov
mov
cmp
ds
mov
pop
lock
inc
or
stos
in
enter
sub
add
ret
ficoms
std
lods
out
prefetchw
sahf
and
mov
leave
jae
pop
mov
lock
xchg
xchg
into
sbb
cmp
dec
dec
push
pop
or
shlb
fs
adcl
test
mov
cmp
ficompl
mov
stc
or
out
popa
mov
je
fcoms
and
xchg
es
sti
push
mov
mov
push
push
cli
arpl
movsl
dec
cmp
mov
rcrb
dec
pop
scas
pop
adc
and
push
dec
pop
mov
jne
mov
filds
sbb
movsl
lods
rcl
cmpsb
inc
push
imul
outsl
rclb
lds
js
das
xor
cmpsb
pop
lods
cmp
push
bound
ret
fwait
ds
leave
xor
outsb
xchg
mov
lea
lods
sub
in
arpl
mov
movsb
fs
daa
iret
outsl
lea
call
sub
adc
test
xor
xchg
or
popf
sub
adc
inc
sti
push
inc
cmp
pop
inc
xor
popf
in
mov
in
inc
jge
mov
add
jno
inc
fisubrl
jne
xor
xor
sbb
mov
jno
adc
testl
push
lock
enter
push
mov
rcr
jns
xor
mov
sahf
add
mov
mov
jecxz
imul
xchg
jbe
and
lock
enter
jnp
jmp
mov
sub
jno
or
or
or
insb
pop
mov
and
je
divl
dec
or
pop
insb
movsl
fsubrl
or
adc
nop
or
xchg
xchg
dec
sti
jecxz
xor
dec
lock
or
sbb
cmpl
daa
sub
subl
push
jnp
std
adc
sub
jno
add
mov
xlat
cli
and
roll
aam
jno
xlat
xor
push
add
jb
mov
lods
rcll
std
aas
mov
mov
push
mov
push
dec
sahf
std
push
mov
sbb
stos
sbb
xor
daa
push
xor
std
inc
mov
ret
pop
jbe
lret
nop
std
lds
mov
lea
test
std
out
imul
lods
sbb
dec
mov
cmp
clc
xor
subl
push
push
mov
pop
mov
std
mov
lret
dec
movb
mov
mov
imul
mov
push
movb
sbb
test
jg
jecxz
cwtl
pop
push
rcl
sbb
add
xor
push
sub
mov
mov
dec
pushf
cmp
cmp
icebp
adc
and
sbb
xchg
adc
std
mov
jns
std
xor
popf
imul
test
mov
std
inc
sbb
dec
daa
in
fsts
aad
push
popa
dec
push
fidivrs
or
dec
data16
test
dec
fdiv
sub
test
sub
je
xchg
mov
add
mov
pop
sar
sahf
loop
pop
lock
xor
push
sub
aaa
mov
sbb
jmp
jo
sbb
jge
int3
cmp
jnp
sub
push
addl
adc
dec
test
imul
jo
xchg
xchg
in
std
dec
cmpl
sbb
bound
mov
movsb
adc
shlb
jmp
push
inc
lret
jne
cmp
push
dec
inc
adcl
mov
mov
fdivr
adc
subb
dec
pop
and
push
je
nop
xchg
and
add
std
loope
mov
and
add
xchg
lcall
cmpsl
fsin
mov
inc
add
xchg
push
and
sahf
int3
xlat
sbb
push
mov
movsb
jb
xor
add
popf
mov
sarb
mov
and
cmp
jae
mov
clc
jg
sub
cmp
ja
inc
xchg
loopne
mov
scas
add
in
sub
cmp
mov
lods
imul
mov
sbb
int3
lock
test
push
inc
ljmp
mov
push
pop
lods
sbb
mov
add
aad
mov
xlat
push
test
inc
xchg
or
stos
jno
and
mov
ficoms
adc
inc
scas
bound
adc
pop
and
xchg
inc
sbb
sbb
int3
les
imulb
or
sahf
dec
aad
or
movsb
xor
push
dec
sub
ljmp
xchg
pop
xchg
push
xor
pushf
inc
repnz
sub
sbb
xchg
and
xchg
pop
fwait
adc
adc
inc
leave
lcall
mov
inc
lea
xchg
add
js
arpl
dec
sub
mov
insl
jno
push
jns
fwait
mov
pop
sbb
popf
and
inc
clc
fs
lret
out
push
cld
lcall
and
sbb
pop
pushf
pop
repz
pop
mov
dec
inc
and
pushf
and
inc
jb
pop
mov
lock
aam
dec
pop
xchg
loop
jb
into
dec
aaa
movsb
push
mov
mov
xchg
imul
dec
hlt
and
mov
add
and
pushf
movsb
mov
push
aas
dec
mov
leave
adc
mov
incl
cmpsb
or
add
nop
nop
nop
in
or
jecxz
cmp
loop
cmp
int
mov
push
je
stc
inc
push
mov
xchg
jg
jge
adc
inc
add
cmpsl
push
shrl
imul
sti
ss
and
pusha
sbb
loopne
test
push
pop
shlb
insb
clc
jne
subl
ljmp
lock
add
das
pusha
pushf
pusha
es
ja
add
push
sbb
inc
lds
add
inc
aaa
xchg
push
and
and
arpl
ret
mov
into
mov
or
mov
and
push
pusha
mov
fsubrs
dec
and
sbb
xor
lock
adc
or
xor
test
into
out
test
xchg
stos
jl
dec
cmp
dec
movb
pop
and
or
or
mov
or
inc
jmp
pop
cwtl
outsl
mov
test
je
mov
xor
bound
cwtl
insl
icebp
cmp
je
cmpsl
mov
sbb
shrb
loop
dec
xchg
and
jle
popa
add
mov
and
mov
sbb
xchg
shll
fucomip
stos
bound
cmpsb
lock
xchg
adc
add
lahf
ret
inc
les
mov
mov
cld
lods
or
inc
ljmp
rcrb
scas
mov
sbb
rcrb
inc
mov
divb
mov
inc
ret
pushl
or
add
add
pusha
stc
and
lods
mov
sbb
cwtl
lahf
or
ja
xchg
sub
mull
jmp
add
je
hlt
pop
sbb
xchg
daa
clc
inc
push
inc
sbb
jae
das
popa
lcall
cmpsb
icebp
lods
add
repz
xchg
jae
test
or
les
rolb
jecxz
push
xor
lds
adc
mov
or
add
mov
mov
adc
push
lds
lock
mov
or
and
clc
adc
stc
pop
jmp
bound
movb
addr16
push
daa
dec
mov
inc
push
rorl
inc
fists
or
rol
dec
push
mov
jl
sbb
adc
ror
mov
pop
add
dec
inc
dec
lcall
mov
mov
cmp
movl
nop
lret
sbb
adc
js
in
stos
add
push
mov
xor
rolb
pop
xor
jo
cmc
push
push
rcll
pop
arpl
jge
rol
pop
sarl
sub
fstpl
push
or
jo
or
push
adc
xchg
mov
sti
mov
cmp
out
inc
cmp
push
sbb
xor
push
pop
push
fcompl
dec
mov
je
repz
aas
pop
mov
lea
add
stos
clc
nop
cld
mov
push
mov
or
subb
jb
out
mov
cltd
lea
lea
cmp
mov
cmp
jb
mov
ret
and
and
mov
sub
inc
cmp
roll
loop
xor
sbb
add
add
mov
mov
jl
jno
push
mov
sbb
hlt
add
or
js
cmp
or
sub
adc
mov
sub
int3
lahf
jb
sbb
mov
and
movsl
cwtl
xor
movsl
arpl
sub
and
fs
ds
dec
xor
and
mov
sub
push
stos
arpl
jl
pop
sbb
push
pop
mov
pop
adc
rorl
imul
nop
mov
jne
inc
mov
adc
fmuls
popa
xchg
or
sbb
rcrb
icebp
inc
cmp
add
fistpl
add
inc
cmpsl
jns
pusha
incb
inc
and
movsb
adc
insb
dec
cli
push
test
cmp
lods
roll
xchg
jge
imul
jle
mov
cmp
xor
js
jg
cmp
jl
mov
mov
jle
cmp
aad
lret
sbbl
pop
scas
or
orl
xchg
xor
xchg
inc
test
cmp
push
mov
push
cmp
pop
js
or
es
leave
push
sbb
lods
and
adc
daa
sbb
dec
mov
dec
or
mull
sbb
push
cmp
sbb
pop
xor
imul
pusha
ret
stos
and
pop
inc
fstpl
add
cmp
xor
in
je
add
push
cmp
addl
lock
or
push
ret
fdivrs
add
shll
fs
pop
pop
cltd
mov
sbb
add
test
or
pusha
pushl
mov
daa
insb
add
pop
xchg
xchg
mov
and
je
pop
xor
mov
sbb
jmp
mov
push
xchg
push
push
mov
mov
push
or
add
and
fcompl
rcrl
cmp
insl
mov
test
popf
push
in
sub
adc
add
or
je
aas
ss
xor
dec
mov
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
in
jbe
lret
jge
mov
mov
pop
mov
mov
out
jno
mov
fisttps
add
fs
push
dec
jmp
mov
insb
enter
mov
ss
or
xor
inc
jns
cmp
pusha
mov
add
lcall
jl
mov
das
popa
loop
sbb
data16
dec
lcall
or
sbb
push
scas
adc
mov
pop
ret
pop
and
push
add
add
push
adc
mov
adc
sbb
lret
je
es
fdivrl
or
and
shl
push
adc
cmp
outsb
xor
lret
pop
and
or
stc
xor
test
pop
mov
and
divl
and
sbb
arpl
out
jne
imul
test
insb
inc
mov
cmpsb
out
cmp
je
out
out
dec
jb
adc
xchg
ja
mov
pop
addr16
outsb
or
mov
and
loop
repnz
ret
push
add
sbb
test
test
pop
mov
pop
inc
inc
cld
pop
pop
adcb
sub
scas
inc
and
cmp
hlt
cmp
and
adc
cmp
xchg
xchg
hlt
mov
dec
fs
mov
lods
or
testl
inc
insb
adc
in
sub
and
add
mov
sbb
add
imul
pop
cmpsl
or
mov
push
pop
inc
mov
cmc
pop
test
mov
and
mov
push
outsl
lods
or
cmp
mov
ljmp
sub
clc
cs
adc
jmp
popa
add
ja
cmp
xor
scas
jo
int
push
xor
xor
fisubs
stos
xor
xrelease
out
xchg
jne
adc
daa
sbb
lea
repz
cs
sbb
pop
dec
add
arpl
stc
push
imul
movsb
dec
push
out
mov
push
lds
cwtl
insb
jne
inc
or
in
fsubrs
movsb
sbb
idiv
mov
inc
and
inc
push
lock
call
lock
jb
push
mov
xor
fs
mov
test
fs
movb
pop
xchg
mov
sub
jmp
and
xchg
add
outsl
or
dec
in
loop
pop
ja
cmp
jl
adc
ss
jmp
xor
les
pop
paddd
adc
add
push
test
test
enter
pop
je
or
pop
ficomps
xor
fmul
je
or
cwtl
fs
adc
aas
shl
jnp
mov
ret
add
bound
pop
sbb
xchg
xchg
inc
or
je
lock
adc
repnz
push
push
pop
leave
test
jp
into
inc
add
push
test
pop
icebp
pop
add
popa
adc
mov
les
cwtl
mov
sub
pop
sarl
sbb
mov
pop
inc
mov
out
imul
and
imul
sbb
mov
mov
es
stos
nop
dec
cli
mov
jae
push
push
mov
mov
push
mov
ljmp
sub
sub
push
push
lods
scas
sti
les
jecxz
or
ret
jo
add
sbb
jle
pop
lea
cltd
xchg
shrl
mov
dec
icebp
adc
inc
inc
mov
and
jo
sbbl
out
loopne
xorb
adc
mov
lods
sahf
cmp
cmp
inc
inc
or
jne
repnz
add
push
sar
xchg
into
or
frndint
hlt
and
and
and
cmp
adc
xor
cld
pop
roll
sbb
ret
mov
pop
push
inc
sbbb
andb
sbb
sarl
enter
sti
or
out
sbb
add
cwtl
dec
dec
push
dec
sbb
fwait
loope
or
xchg
add
sbb
mov
pushf
push
mov
inc
push
pop
push
dec
and
rclb
mov
or
rep
xchg
add
rorb
or
or
mov
and
push
and
xor
ret
mov
or
in
cmp
int3
mov
jge
mov
rolb
and
test
mov
jl
mov
jmp
pop
sbb
clc
sub
add
aaa
and
lea
add
and
and
jp
add
ds
sarb
jg
cmpsl
mov
adc
jle
daa
add
mov
adc
mov
or
xor
push
lcall
popa
cmp
sar
and
shl
jp
ret
loopne
xor
and
lods
aad
inc
add
and
mov
leave
inc
and
sti
lcall
test
adc
fs
xorl
stc
in
or
xorb
jb
dec
ret
xchg
adc
xchg
fs
ret
gs
add
xor
repz
in
push
aaa
xor
ds
mov
popa
push
add
ss
add
or
je
and
movl
jl
mov
loope
pop
pop
or
xlat
adc
in
les
divl
mov
ja
dec
out
mov
mov
mov
inc
jmp
push
xlat
adc
push
xor
add
dec
lret
rorl
mov
data16
stos
mov
jbe
pop
fadds
adc
lock
not
sub
rol
add
mov
imul
lock
jb
rcrl
inc
xchg
lock
ret
sub
inc
enter
pop
aam
or
jmp
je
shl
movsl
sti
mov
jg
jg
adc
and
push
push
sub
lea
cmpsl
test
xchg
popa
sar
call
add
xchg
xor
sub
add
add
jo
push
cmp
xor
cmc
roll
lret
sub
insb
or
push
jo
sub
add
sarb
test
cmpsb
jge
hlt
rep
ss
neg
cmpsb
jmp
sbb
movsl
addr16
lock
push
data16
andb
xchg
pop
sub
sbb
test
mov
inc
push
dec
and
mov
xchg
icebp
shrl
xchg
add
adc
lods
fidivs
dec
data16
popa
push
mov
in
and
test
ret
cmp
cltd
jecxz
push
dec
test
pop
jg
add
cld
addr16
testb
add
ds
push
mov
mov
lods
adc
das
outsb
movl
jns
lret
jae
out
push
adc
pop
sahf
lret
inc
mov
insb
andb
repnz
adc
push
mov
in
or
pop
hlt
mov
pop
xor
loop
add
mov
cmp
sub
outsl
shll
outsl
push
push
dec
adc
push
and
jl
xor
push
pop
out
std
outsl
inc
or
jbe
jle
pushf
imul
ja
mov
jno
inc
test
sbb
push
cmp
ret
mov
or
mov
add
or
dec
shl
dec
test
adc
ja
into
and
call
mov
mov
dec
sub
arpl
or
pop
add
sub
dec
imul
add
sub
lock
in
lock
sub
movsb
add
mov
inc
adc
fnstcw
jp
or
adc
mov
jmp
add
mov
pop
idivl
push
inc
mov
pop
add
mov
hlt
push
lea
inc
pop
scas
lret
adc
sti
push
sub
test
xor
fwait
mov
mov
lcall
lahf
cmpsb
jne
jo
add
pop
and
leave
fs
adc
cmp
je
adc
aam
fmull
and
lar
insl
push
int
push
iret
add
or
sbbb
pop
fadds
movsl
in
mov
arpl
pop
leave
test
inc
iret
decl
cmp
push
cmp
sbb
dec
and
mov
adc
push
push
fiaddl
mov
mov
jg
addr16
sub
inc
pop
mov
sub
pushf
outsb
sbb
aas
add
insb
jae
dec
jmp
or
sbb
push
or
push
mov
lret
cmpsb
or
sarb
sbb
fxch
fnstcw
add
sub
sub
adc
fcmovb
inc
movsb
push
and
push
sbb
lret
test
nop
int3
inc
ljmp
push
or
data16
mov
jmp
adc
outsl
jo
pop
mov
add
fdivs
adc
lods
pop
test
or
add
mov
push
xchg
cmpsb
rorb
fcompl
sub
mov
aam
or
mov
test
jno
jecxz
pop
fwait
pop
aaa
or
lock
lock
outsl
sar
pop
imul
call
xor
adc
adc
inc
jmp
hlt
pop
inc
fsubr
test
jbe
jne
imul
jl
push
shrb
push
sbb
dec
add
push
inc
enter
loopne
mov
and
adc
adc
loope
sbb
inc
push
mov
popa
mov
adc
xor
push
sbb
aaa
std
loop
xor
push
ja
cld
and
ja
dec
incl
mov
in
rolb
loope
loopne
sub
mov
or
sub
add
sub
fs
rclb
cld
or
mov
and
or
push
in
movsb
xor
int
rol
push
sbb
mov
sbb
add
sbb
cmc
stos
dec
lret
or
ret
xchg
idivb
inc
push
push
cmovnp
adc
test
mov
add
mov
je
testb
je
subl
in
sub
or
dec
test
loopne
adc
sub
andl
cwtl
iret
and
jp
jb
push
push
mov
adc
daa
sub
jg
insb
push
pop
add
or
fldt
cmp
je
dec
mov
add
adc
fisubl
mov
xor
add
out
adc
lret
add
dec
aas
pushl
enter
jecxz
mov
mov
jmp
or
dec
shr
xchg
jns
stos
jmp
sahf
lcall
mov
dec
cmp
test
cmp
or
adc
cmpsl
and
inc
sbb
inc
mov
andb
sub
jmp
test
mov
dec
in
je
push
xchg
xor
aas
and
add
divl
push
clc
lods
inc
shrb
jnp
mov
inc
or
xchg
sbbl
sbb
iret
add
sub
lock
add
push
jl
push
dec
loopne
jle
mov
or
add
add
js
push
or
sti
jg
add
pop
aas
loope
leave
nop
stos
jle
cmp
add
inc
push
aaa
pushf
sbb
sbb
add
bound
xor
push
adc
inc
or
stos
mov
lock
jg
dec
adc
arpl
pop
jl
stc
mov
lcall
pop
mov
or
fstl
movsl
call
fneni(8087
pusha
lcall
push
loope
cli
call
loope
sub
push
test
mov
ret
jp
sub
enter
mov
mov
shlb
mov
fwait
sbb
aaa
and
push
clc
add
push
je
mov
iret
mov
loop
outsl
mov
sbb
gs
pop
cmp
jle
dec
dec
pop
pop
aas
addl
sbb
cmp
je
mov
sub
jg
inc
fdivrs
mov
xchg
xor
push
xchg
jbe
addl
or
adc
shlb
xor
pop
jl
and
pop
lock
sbb
xor
mov
add
rcl
cmpl
cmc
inc
cmpl
inc
push
pop
xor
mov
out
rorb
sub
fistps
push
scas
push
nop
sbb
sbbl
rorb
mov
jmp
or
add
inc
cwtl
or
test
xor
andb
mov
inc
insl
push
sbb
or
push
add
inc
and
cmpsb
mov
dec
pop
mov
lods
and
sbbb
std
sbb
jo
repz
test
ret
inc
push
nop
pop
jnp
pop
je
adc
push
cmpl
adc
inc
add
arpl
or
pushf
cmp
or
and
fidivl
je
mov
and
push
mov
cmp
icebp
and
sbb
sub
pop
add
or
test
and
leave
mov
movsl
cmpsb
or
enter
mov
inc
repnz
nop
lcall
xchg
adc
div
xchg
leave
shr
push
std
add
xor
cs
jo
cmp
fcoms
and
add
jmp
xor
inc
xor
add
mov
or
sub
aaa
or
sub
jne
push
stos
mov
xchg
cmp
leave
push
icebp
cmpsb
outsl
adc
sbbl
dec
or
or
repz
xor
test
jns
jge
xlat
cmp
fbstp
out
jb
aas
sbb
popa
pop
je
pop
cmc
and
fisubl
cmp
inc
rorb
inc
and
add
popf
push
add
rorb
jb
xor
mov
pop
add
aaa
jl
mov
inc
pop
les
mov
add
les
jecxz
jns
out
test
inc
jne
clc
push
sbb
or
push
cmp
mov
lods
mov
jb
lea
insb
adc
mov
sbb
movsl
push
or
pop
xchg
pop
in
dec
dec
dec
dec
test
sbb
inc
enter
pop
mov
mov
mov
pop
std
mov
jmp
push
into
adc
or
pushf
mov
mov
ja
mov
add
repnz
push
paddw
xlat
jns
xlat
sti
mov
jne
jmp
frstpm(287
or
jo
jae
push
arpl
ljmp
shlb
mov
pop
mov
rol
scas
pop
jle
xchg
xchg
push
xorb
push
sub
inc
add
or
and
cmpsl
inc
mov
dec
push
jbe
push
or
aam
mov
jecxz
test
jle
add
cltd
dec
loopne
xchg
daa
mov
and
call
xchg
adc
jg
xorl
mov
insb
aam
jb
sub
push
adc
popa
mov
jbe
add
cmpsl
or
pushl
ret
sbb
jg
adc
orl
call
lret
pop
hlt
jno
xchg
xorb
andb
xor
add
rolb
xchg
xchg
jno
mov
movsb
addl
negb
std
jb
inc
dec
sahf
loop
mov
test
or
cmp
notl
repnz
mov
sub
push
xor
or
lock
mov
out
jbe
add
es
lret
mov
xlat
inc
cmc
clc
push
mov
ljmp
dec
nop
push
add
imul
jno
into
dec
and
insb
mov
xlat
je
cmp
jg
adc
shll
testb
or
fcoms
dec
imul
andl
loopne
jge
push
jmp
inc
lahf
popf
push
and
lcall
cmpl
sub
pop
adc
daa
mov
sbb
push
js
adc
cmpsb
in
push
pop
push
cmp
shr
jmp
jno
xchg
xchg
das
xor
les
inc
sub
mov
mov
pop
cmp
adc
insl
outsb
sbb
insb
add
bound
or
es
jmp
sub
sub
call
dec
sbb
in
mov
or
xor
mov
lock
or
mov
lsl
jmp
push
pop
push
push
std
out
int3
push
inc
shr
rcr
shr
rcr
or
div
out
mov
iret
pop
dec
adc
inc
mul
pop
jb
cmp
add
push
jbe
dec
sub
sbb
xor
xor
or
fcmove
fcmovb
adc
jle
iret
dec
or
adc
rol
fcmovb
andl
push
add
dec
inc
rolb
pop
mov
jne
mov
je
es
mov
js
ljmp
dec
xchg
dec
jg
jmp
push
cmovl
inc
pop
dec
sbb
push
dec
add
add
test
sbb
jne
lea
cmpsb
push
xor
imul
mov
mov
loope
cmp
sbb
outsl
mov
loop
sub
test
ret
mov
jns
pop
cld
cmp
adc
adc
jbe
and
pusha
push
push
dec
sub
sbb
ficoml
and
push
pop
push
inc
inc
sub
icebp
hlt
push
hlt
shlb
jne
lcall
stos
pop
jl
mov
sub
adc
cld
sbb
daa
mov
mov
inc
pop
push
pop
movsl
push
adc
clc
ficoms
lret
push
lahf
push
pop
inc
cs
push
shll
inc
pop
inc
inc
mov
push
xor
pop
sub
sbb
dec
in
mov
sahf
je
xchg
cli
adc
outsb
dec
lea
lea
or
inc
lret
adc
in
movsb
es
inc
jne
push
sbb
jmp
popl
ret
fxch
pop
push
pop
nop
push
mov
and
push
sbb
push
mov
mov
inc
mov
ljmp
lea
sub
or
or
loop
mov
clc
xchg
jle
mov
pop
sbb
cli
shrl
inc
or
cld
cmp
xor
out
sti
lock
fldt
lret
cmp
imul
pop
dec
dec
insb
push
adc
adc
add
pusha
cld
inc
add
ret
xorl
daa
or
adc
pushf
fsubrl
ss
pushf
pushf
pushf
pushf
sub
xor
sub
pushf
pushf
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
add
dec
pusha
fs
dec
jo
js
in
sbb
inc
sbb
test
and
mov
xchg
cwtl
pushf
leave
and
dec
mov
cs
je
sub
xchg
add
sub
add
loopne
fldt
popa
pop
xor
pop
mov
or
call
adc
in
adc
add
hlt
sbb
clc
dec
dec
xor
and
and
adc
flds
std
and
push
out
insl
enter
mov
or
leave
push
xor
inc
ret
cmp
push
int
shrb
inc
dec
jne
fwait
les
sbbb
xchg
lret
sbb
nop
insb
fldcw
or
add
je
in
add
pusha
jl
adc
js
fidivl
mov
dec
and
push
shrb
mov
fcoml
int3
dec
bound
mov
cs
std
add
aaa
add
inc
add
add
jo
testb
xor
inc
pop
cltd
add
pusha
fwait
pushf
sarb
nop
cmp
fdivs
orl
pop
cmp
mov
das
je
sub
push
push
je
lret
jbe
xchg
loopne
xor
ret
shr
dec
dec
out
xor
rcr
mov
lea
push
jle
test
in
push
popf
ss
xor
add
sub
sbb
cwtl
cmp
pusha
push
test
mov
cmpsb
aam
shufps
add
je
push
pushf
sbb
pop
inc
fnstsw
inc
inc
xchg
testb
divb
xlat
test
xor
or
sbb
dec
lret
test
in
repz
lods
adc
ret
cmp
adc
ud1
add
sar
push
and
rorl
push
xchg
dec
popf
and
outsl
cmp
add
pop
or
sbb
sar
inc
movsl
mov
mov
and
call
adc
imul
clc
inc
adc
jmp
cmpsb
shl
push
or
mov
les
test
jg
iret
push
mov
xor
or
cmp
xor
and
add
push
or
sarl
jmp
loopne
push
cmc
insb
pop
pop
addl
aam
cmp
or
popf
test
pushl
push
mov
push
or
jo
das
jmp
enter
xchg
jl
sbb
push
xor
mov
dec
xor
loope
andl
pop
push
or
cmpsb
shlb
xchg
and
xor
aas
mov
mov
adc
movsl
into
push
push
jb
lods
movsl
dec
xor
dec
pop
mov
aam
rcr
add
mov
rcr
in
pop
inc
popl
lock
push
cmp
xor
mov
cmpl
jecxz
inc
inc
push
pop
or
push
lea
push
and
out
lahf
divb
jl
pop
and
fcmovnbe
sti
mov
or
sbb
mov
inc
adc
inc
insb
mov
and
iret
in
inc
cwtl
sbb
adc
sarb
insb
or
dec
popf
add
mov
inc
sbb
jmp
dec
ljmp
add
pop
mov
out
ds
pusha
dec
addb
hlt
andb
inc
popf
jo
xchg
pop
addl
cwtl
mov
mov
inc
mov
push
push
dec
adc
jmp
rcrb
or
lods
mov
inc
cld
outsl
sub
adc
push
hlt
mov
add
andb
stos
jmp
fcos
cmp
ret
lret
add
cmp
fsubs
ret
push
lret
loop
dec
dec
cmp
xor
orb
jmp
push
dec
inc
adc
leave
cmp
inc
jo
addb
inc
or
dec
lods
jnp
int
pop
lea
cmp
dec
mov
push
jne
popa
mov
jl
jg
dec
sub
sarl
mov
dec
cmp
test
sahf
cmpl
push
lods
pop
sbb
test
rolb
popf
loopne
out
push
add
ljmp
js
sub
inc
cmp
cmp
push
xchg
push
add
addl
movl
push
call
dec
je
daa
inc
dec
xor
xor
test
pop
lock
mov
clc
pop
cmp
fwait
adc
les
jb
outsl
lahf
xor
mov
sbb
in
js
dec
add
pushf
movsb
sti
or
ret
jl
shrb
lret
out
mov
jmp
xchg
mov
jge
jbe
andl
mul
sbb
cmp
mov
pop
mov
or
js
lds
adc
lods
sbb
fmuls
sub
and
loopne
cmp
mov
testl
sbbl
or
incl
sub
xor
xor
pop
pop
jmp
dec
add
add
cmp
cmp
rcrb
adc
lods
push
orl
xlat
push
or
loopne
cmp
add
adc
add
dec
dec
in
add
push
jo
mov
orl
dec
stc
pop
xchg
cmp
cmp
sbb
mov
add
xchg
push
xchg
sub
nop
cmp
addb
test
xchg
hlt
and
mov
push
mov
scas
dec
nop
adc
js
fs
std
jno
mov
sub
pop
mov
sub
xor
test
je
add
jmp
add
repz
cli
mov
mov
sub
pushf
aas
lea
mov
dec
ret
ret
mov
lods
adc
dec
mov
mov
mov
cs
ljmp
inc
cmp
adc
xor
jle
xchg
fidivrs
xor
filds
inc
cmpb
outsb
or
jg
add
das
or
mov
cmp
pop
pop
push
test
daa
popa
dec
test
pop
mov
mov
nop
fmul
je
xlat
test
aam
sbb
mov
push
jo
jo
sub
and
fdivp
aad
aaa
ljmp
mov
add
push
loop
dec
or
sbb
inc
jmp
and
sbb
pop
mov
pop
lods
loopne
xchg
jmp
unpckhps
psrad
je
cmp
or
ljmp
mov
inc
add
xrelease
inc
and
std
mov
ljmp
add
mov
xchg
sub
xor
in
fldenv
xor
push
and
and
xor
sbb
dec
sbb
scas
fcmovu
mov
bound
and
out
sti
stc
mov
push
pop
inc
xor
ret
and
pushf
cli
out
sbb
insb
mov
dec
iret
imul
fldl
mov
jl
js
std
into
and
pop
xor
rcl
cmp
xor
adc
xor
sbb
out
sbb
incb
lock
dec
rolb
dec
or
outsb
adc
mov
add
jge
mov
pop
mov
inc
pop
testb
and
arpl
mov
cmp
lods
jbe
add
arpl
mov
adc
jge
les
mov
addr16
pop
dec
push
mov
xchg
addb
adc
sub
pop
loopne
jne
add
mov
nop
jge
and
adcb
push
movb
jecxz
lods
pop
int3
pop
pop
push
dec
call
mov
and
cmp
call
fwait
xchg
add
clc
je
xor
add
movsb
imul
cli
or
lock
jecxz
xor
js
scas
dec
cmp
mov
mov
add
jmp
and
push
enter
jl
inc
jbe
iret
mov
js
pop
sbb
push
add
into
movsb
mov
popa
add
xor
jmp
enter
inc
ds
cmp
in
adc
roll
push
les
mov
fwait
lcall
testl
lret
push
jecxz
out
cmp
ret
add
and
mov
bound
jle
ret
sub
pop
pop
test
sbb
cmc
cmp
and
pop
add
adc
sbb
push
gs
sbbl
inc
inc
andl
xor
dec
lock
rolb
fildl
aas
mov
mov
mov
cmp
cmp
push
mov
imul
inc
jle
sub
daa
hlt
adc
adc
loope
data16
imul
subb
lea
sub
adc
insb
dec
push
dec
ret
dec
pop
mov
mov
jae
mov
fnstsw
or
sbb
jecxz
jo
rcrl
sbb
dec
rcrb
and
lea
sub
sbb
pushf
mov
subb
jl
int
notb
rolb
mov
subl
mov
pushf
cld
dec
xor
sub
dec
jnp
add
aas
repnz
dec
outsl
or
das
adc
inc
clc
jb
es
dec
into
jl
pop
and
mov
out
and
or
jecxz,pn
add
xchg
mov
inc
push
repz
jae
inc
and
add
mov
sbb
or
in
orb
mov
movsb
pop
pusha
cmp
inc
adc
shlb
sbb
jbe
push
mov
inc
divb
push
xor
pop
push
mov
or
ror
enter
inc
lcall
outsb
std
jmp
fwait
stos
cmpsb
add
pop
loopne
or
add
inc
pop
lods
aad
roll
aam
mov
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
add
inc
add
movsb
fbstp
scas
and
data16
pop
idiv
add
cs
je
test
mov
adc
imul
jp
js
and
or
dec
mov
or
test
push
or
mov
repz
push
mov
xchg
popa
xchg
cs
test
and
add
cmp
pop
sahf
or
ja
loop
and
shll
dec
xor
mov
xor
and
shr
in
and
add
jmp
mov
add
mov
add
add
jns
xchg
test
add
and
xlat
push
add
test
add
je
fcmovnb
shll
or
sub
jbe
sti
mov
add
std
or
jmp
inc
and
mov
add
jl
and
jecxz
aaa
xor
pushf
jge
add
or
imul
jmp
loopne
xor
push
jcxz
sub
mov
mov
mov
loope
flds
and
adc
pusha
mov
pusha
loope
pop
sub
adc
movsb
into
dec
and
adc
push
jns
fstp
ds
cmpsl
push
cmpsb
cmp
imul
mov
jns
js
push
addr16
and
or
xchg
sub
adc
sti
add
add
out
test
fisttps
ret
dec
mov
push
xor
aaa
and
jne
orl
scas
jmp
push
mov
push
jmp
pop
testl
out
and
cmpb
fidivl
pop
sbb
jmp
push
and
inc
add
outsb
testb
add
inc
mov
sarl
inc
push
flds
fisttpll
pop
push
addb
add
dec
jecxz
or
clc
mov
push
cmp
fcmovnb
pop
fwait
lock
in
pop
sub
jl
inc
neg
ljmp
and
mov
sti
lret
inc
bound
or
xchg
push
aaa
in
push
jle
sbb
out
rcr
sbb
test
inc
jl
add
add
jmp
sub
sub
jmp
sub
cmp
nop
jns
push
sbb
test
push
adc
negb
int
sti
hlt
add
pop
loope
or
jnp
addl
fstpl
mov
inc
mov
or
jle
repz
faddl
push
add
inc
ror
div
sbb
sub
add
adc
nop
dec
push
test
enter
adc
sbb
jp
dec
in
mov
sbb
shl
out
mov
push
jno
jp
push
sahf
jmp
pop
loopne
sub
fsubr
xchg
mov
cld
xchg
and
mov
and
push
jmp
adc
pop
xorb
sbb
lock
jg
xchg
sbb
pop
test
jg
test
push
jmp
or
add
and
out
fsubl
insl
outsb
dec
add
and
pop
movzbl
adc
out
dec
sub
or
test
cmp
je
inc
loop
or
daa
loopne
or
adc
scas
add
sub
and
and
rolb
sub
hlt
pusha
and
leave
push
jle
cmpb
pop
mov
add
and
pop
push
add
lods
fst
or
fsubrp
fwait
jno
mov
scas
inc
and
jo
popf
in
pop
add
or
dec
xchg
jmp
xchg
rcrb
adc
add
pop
mov
faddl
sbb
mov
inc
insl
sbb
imul
aas
and
xor
cmp
and
ficompl
push
or
mov
dec
and
sub
cmpsl
mov
and
dec
loop
jns
cltd
stc
nop
es
es
ljmp
jae
and
add
adc
or
mov
pop
sub
mov
adcb
inc
int3
dec
stos
mov
clc
out
xor
adc
cmpw
rolb
inc
fcmovbe
or
sahf
push
inc
sbb
jg
or
int3
ds
gs
jmp
clc
sti
sarb
add
ljmp
adc
loope
mov
ret
fadds
into
xchg
fdivrs
cwtl
in
pop
gs
or
pop
test
mov
imul
pop
or
mov
aad
icebp
sbb
inc
sti
cltd
ret
or
or
stos
inc
add
or
push
test
and
and
sbb
je
mov
cld
push
imul
jno
pop
jl
sbb
sub
shr
loop
pop
sub
ret
enter
aad
push
jo
rol
fstsw
adc
sbb
loop
inc
fldenv
roll
fwait
and
or
push
or
insl
or
or
push
push
mov
fldt
mov
sahf
adc
int3
and
sbb
aaa
sbb
stos
les
or
jle
call
xor
sbb
inc
bound
mov
lods
mov
inc
pop
cmp
rolb
inc
xchg
scas
push
jno
xchg
adc
xchg
and
xchg
or
inc
mov
cmp
dec
or
cmp
jbe
data16
push
aas
out
add
pop
add
es
lods
cmc
or
les
imul
push
push
pop
punpckhbw
data16
cmp
shlb
xor
cmp
sbb
lea
xor
push
ret
data16
push
sub
or
jmp
mov
inc
and
out
fstpt
in
adc
push
jb
mov
cmp
jo
sbb
pop
sub
je
sub
mov
out
push
cmp
psubq
xchg
push
jb
push
push
xor
mov
fbstp
jnp
or
or
loope
insb
inc
adc
sub
js
inc
add
or
mov
push
push
nop
in
lods
xchg
adc
cmpw
inc
inc
dec
and
or
icebp
sub
dec
and
pop
aad
cmc
dec
push
outsb
cmc
cmp
or
fidivs
insl
andl
sbb
or
sbbb
jmp
aas
daa
adc
xorb
mov
add
cs
scas
cwtl
pop
test
jne
push
add
lret
mov
stos
stos
pop
enter
stos
pop
pop
mov
testb
add
cmp
ret
cmp
pushf
cmc
and
add
dec
pop
push
dec
jns
mov
add
mov
clc
push
push
pop
lock
inc
shl
andl
shl
not
test
add
pop
rorl
or
jmp
dec
cltd
insb
pop
and
mov
out
pop
jge
scas
mov
inc
push
into
sbb
shlb
lea
xor
repnz
sub
or
jb
cmp
cli
out
mov
mov
dec
cmp
add
neg
enter
incb
jae
add
mov
mov
adc
and
push
sub
and
jge
push
inc
sub
loopne
and
out
roll
mov
jl
shll
cmp
dec
dec
stos
inc
hlt
jae
mov
add
cmp
jo
push
aam
xor
cmp
sub
loop
xor
rorb
add
je
pop
aad
lret
and
push
cld
cli
orb
popf
je
mov
and
aaa
jno
adc
ds
push
or
or
lock
push
push
sbb
jl
inc
shl
getsec
adc
mov
sub
sarb
add
mov
je
mov
sub
adc
popa
pop
int3
or
ret
in
mov
mov
clc
hlt
test
pop
push
adc
sub
lcall
lea
in
insb
pop
fmull
std
mov
sub
movsb
pop
data16
sbbb
inc
icebp
xor
pop
jbe
movsb
loop
push
mov
lock
or
or
xchg
jecxz
dec
ss
mov
xlat
cmp
shrb
mov
or
inc
mov
sbb
pop
out
push
push
mov
mov
stos
gs
popa
subb
dec
out
loop
lea
iret
and
mov
inc
jno
cmp
pop
cld
sbb
add
ret
jge
jmp
pop
scas
shl
add
pop
dec
nop
scas
loopne
loopne
add
add
push
call
lret
mov
jne
jns
or
rcrb
pop
pop
xchg
sbb
pop
enter
add
inc
jb
sub
add
stc
xchg
cmp
nop
mov
add
add
sbb
or
sbb
pusha
add
jl
push
cmpb
xchg
push
mov
jl
lds
inc
mov
addr16
stos
xor
push
adc
add
mov
or
imul
jne
test
or
pop
fisttps
or
cmp
add
or
jmp
xor
or
lock
lods
pop
clc
fistps
enter
cmp
ja
push
dec
jmp
inc
inc
add
sbb
in
mov
cmp
into
add
test
xchg
dec
mov
pop
add
stos
mov
test
add
jmp
pop
ds
pop
or
sbb
mov
jmp
adc
push
lock
mov
adc
xchg
scas
adc
lods
mov
inc
jle
mov
cmp
push
xor
incb
dec
push
cld
sub
push
jbe
mov
jo
pushf
push
cmp
fs
ljmp
sbb
stos
insb
pop
aam
sbb
mov
ret
push
sub
pop
push
insb
inc
mov
cmp
inc
fistpl
pop
cmp
mov
mov
jbe
nop
add
jne
xchg
negl
js
jae
imul
sbb
mov
cmp
jmp
and
xlat
mov
call
decb
out
push
cmp
mov
adc
gs
in
orl
and
cmp
push
and
mov
xor
mov
mov
jmp
je
inc
scas
sub
fisubs
mov
sbb
mov
call
in
dec
jmp
adc
add
inc
imull
mov
dec
mov
jmp
ficomps
jmp
dec
sbb
orb
mov
sbb
imul
mov
push
xor
cmp
jbe
inc
or
jecxz
add
pushf
jmp
push
cwtl
mov
xor
mov
mov
ficompl
es
or
loopne
xor
xor
es
jg
push
cwtl
jge
neg
add
mov
outsl
lcall
xlat
test
cmp
adc
cmp
adc
nop
sbb
jmp
ret
jno
mov
jge
jle
lock
xor
jne
inc
imul
notl
inc
jg
scas
inc
in
dec
test
lcall
mov
sbbl
les
pop
and
repz
mov
pop
add
add
dec
or
enter
mov
mov
into
mov
mov
ret
and
push
in
and
rorb
out
mov
andl
adc
sbb
and
xlat
ja
ja
pop
or
pop
mov
mov
mov
stos
movb
testl
push
sub
and
jne
gs
push
test
into
jne
inc
or
push
lock
cmp
cmp
jne
hlt
int3
add
lock
mov
test
rcrl
loop
add
pop
lret
dec
sarl
push
push
lea
mov
jl
popa
add
sub
call
dec
lock
ja
outsl
push
push
data16
subl
lcall
sub
sub
or
loopne
stc
jg
add
xchg
add
aam
pusha
test
js
mov
clc
xchg
mov
loopne
xor
add
or
shr
and
pop
push
rcll
mov
xchg
jne
bound
or
adc
inc
mov
fmull
les
add
mulb
mov
sti
jmp
fcom
insl
fadd
loopne
shr
or
mov
xchg
aam
rcrl
mov
mov
pop
mov
enter
andl
mov
inc
adc
jge
cmp
dec
fistpl
add
ficompl
sar
pop
add
pop
insb
in
jne
dec
lock
push
call
mov
push
jnp
mov
and
dec
jbe
pusha
push
fmull
sahf
nop
dec
ja
sbb
out
orb
cmp
jp
test
or
sub
push
xchg
das
lret
into
jmp
scas
mov
add
sbb
dec
and
les
jae
cmp
int
je
int3
test
popf
adc
das
sub
add
add
loopne
negb
add
push
push
movups
les
cmp
bound
inc
gs
test
xchg
xchg
add
fcmovnb
mov
inc
add
push
cmpsl
jns
out
or
lods
aam
int
push
and
push
nop
data16
out
push
shll
movsb
push
enter
jmp
icebp
cmp
add
adc
adc
push
mov
xor
fcoms
cmp
or
cmp
inc
pop
in
push
in
stos
or
test
sbb
xlat
sahf
mov
xchg
adc
inc
cs
or
packssdw
ss
cmp
je
or
out
mov
incl
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
add
out
add
out
mov
add
call
mov
cmc
pop
xchg
add
je
out
clc
sbb
pop
adc
call
mov
xor
sbb
mov
adc
add
mov
push
sub
sub
xor
adc
push
add
and
lret
sbb
ret
inc
cmovae
test
rcrb
or
pop
xchg
mov
cli
jne
ret
mov
mov
fdivs
or
add
push
lods
adc
dec
xchg
das
mov
hlt
or
pop
je
setg
sub
in
clc
add
mov
mov
cmp
adc
aas
sub
movb
movsl
das
add
inc
jle
jo
sub
add
push
clc
lds
mov
es
pop
out
sbb
loop
lock
ljmp
lret
jmp
sub
add
push
xor
fldt
mov
add
inc
inc
mov
inc
out
cmp
add
mov
fs
in
test
cld
xor
push
or
jne
dec
or
sub
add
xor
fidivs
nop
test
lods
loope
repnz
or
xchg
sbb
lcall
push
roll
ret
cmc
and
nop
insb
sbb
add
add
and
out
outsl
loopne
rolb
ret
jbe
xchg
clc
fndisi(8087
inc
sar
enter
aam
sub
adc
out
sub
into
lahf
adc
lahf
xor
shlb
enter
adc
inc
addr16
inc
inc
pop
pop
push
in
mov
inc
add
xchg
cmp
add
add
mov
inc
std
dec
xor
sbb
push
mov
jge
adc
mov
add
sub
xchg
fldl2t
call
mov
jge
xchg
mov
pusha
add
adc
pop
push
add
clc
sub
jbe
mov
enter
mov
orb
in
sub
or
loopne
dec
sar
lea
fcompl
dec
testb
enter
add
int
ret
adc
pop
push
xor
sbb
enter
xor
loopne
js
push
mov
push
sub
push
dec
mov
xor
leave
and
add
cmpsb
movb
in
or
xchg
and
popf
fcmovb
mov
fwait
jbe
sbb
neg
sbb
jecxz
loop
mov
jg
ret
daa
xor
or
jne
pop
dec
je
sarl
add
mov
or
push
sarb
loop
sbb
inc
xor
pushf
xor
xlat
or
and
adc
xor
pop
pusha
fsubrs
xchg
lcall
dec
fadd
and
mov
push
movswl
shrl
and
and
data16
adc
xor
cmpl
outsl
mov
ret
mov
add
and
adc
dec
shrd
push
jle
pop
pushf
int3
ss
ss
mov
push
cmpsl
clc
mov
or
jg
outsb
cmp
nop
stc
inc
add
dec
lret
cltd
pop
shr
out
xchg
clc
sub
mov
adc
or
mov
inc
call
push
pusha
and
mov
arpl
push
or
xchg
lock
sti
xchg
out
and
mov
rorl
sbb
js
jg
clc
push
or
jmp
cmp
inc
adc
neg
cmp
mov
lock
and
aas
or
or
nop
sbb
add
jbe
mov
mov
mov
cs
push
jg
lods
jb
outsl
in
rorb
pusha
and
xchg
pop
or
or
lods
jo
lcall
gs
and
cmpsb
stc
test
inc
test
dec
pop
es
mov
or
or
movsl
xchg
lahf
sbb
shll
sahf
jne
loop
rol
cmc
call
lock
xor
mov
and
sub
stos
fiadds
pop
xchg
add
inc
inc
and
inc
adc
push
daa
jp
mov
jge
mov
jne
and
xchg
jl
pushw
outsb
popa
push
mov
pop
xor
sbb
or
mov
xor
xchg
adc
testl
or
mov
inc
or
xor
mov
pop
push
shlb
in
repz
cmp
jg
scas
push
or
inc
lret
jbe
xchg
push
dec
test
dec
test
lea
add
jle
imul
jmp
jmp
insl
cmp
adc
cld
cld
jl
xorl
or
jle
dec
mov
inc
rolb
push
mov
xorl
sarl
clc
gs
or
pop
or
jne
loope
outsb
lret
add
je
inc
je
testb
jmp
xor
adc
push
push
in
add
add
aad
repnz
or
inc
inc
das
mov
dec
sub
repz
adc
loop
and
adc
call
jne
fmull
insl
push
pop
clc
fstps
inc
loop
xor
in
ds
jecxz
xchg
shl
and
jecxz
rol
adc
pop
js
or
and
cmpsl
mov
pop
arpl
cmp
ds
cmp
dec
push
lahf
add
inc
push
popl
outsl
clc
jmp
push
or
push
jb
fcomps
scas
lcall
mov
cmpb
jne
jp
push
test
jb
push
dec
push
iret
jge
rcll
dec
loop
sub
add
hlt
jmp
push
aam
rclb
cmp
mov
popf
shlb
sbbl
sbb
fnsave
lahf
dec
push
sub
push
xor
sahf
add
jne
popf
ret
pop
and
enter
aaa
test
mov
aaa
sub
in
insb
inc
cmp
nop
or
mov
jbe
sub
xor
imulb
mov
movsl
xchg
cs
inc
mov
xchg
add
adc
mov
inc
xor
mov
push
lret
jns
pop
int3
sbb
test
push
or
push
data16
xchg
push
pop
dec
push
mov
je
jno
dec
push
sbb
push
jl
pop
lea
push
and
out
nop
and
cmp
xchg
inc
les
cmp
mov
mov
add
mov
jge
pusha
jg
sbb
adc
ss
pop
cmp
inc
cmp
add
gs
xchg
outsl
int
test
pusha
mov
fnstcw
xor
out
pop
cmp
mov
mov
icebp
mov
mov
pop
mov
ja
add
xor
push
lret
aam
aas
jp
dec
jne
push
push
jmp
or
jmp
negb
dec
mov
or
ljmp
adc
addl
inc
shl
sbb
and
pusha
push
sbb
outsb
push
mov
mov
hlt
or
popf
mov
pusha
add
add
es
lret
ss
sub
sbb
mov
adc
inc
adcl
sbb
jbe
mov
insb
pop
jl
arpl
into
push
dec
xchg
xchg
or
jbe
xchg
push
stos
fdivrs
mov
mov
dec
push
add
jno
mov
cmp
pop
sub
mov
xor
pop
rcrb
cmc
iret
mov
or
js
cwtl
push
jp
imul
or
or
mov
dec
jecxz
xor
lea
adc
movl
pusha
push
adc
icebp
ret
add
xlat
inc
mov
cmp
xchg
add
sbb
imul
xor
ds
je
pop
and
add
fisubrs
jl
dec
fiadds
jnp
clc
arpl
or
add
pushl
cmp
jns
dec
cld
sbb
inc
jmp
pop
add
dec
push
add
dec
lods
fmuls
cmp
sti
and
push
or
sub
push
or
cmp
pop
shlb
movd
mov
mov
mov
enter
jo
and
fsin
mov
imul
jne
enter
nopl
fucomp
das
adc
cmp
jge
mov
add
adc
repz
xchg
sub
jg
mov
push
test
jo
jmp
mov
xchg
andb
cmp
ljmp
cwtl
pop
mov
jge
fisubrs
sbb
mov
dec
movsb
fabs
mov
das
sub
jmp
xchg
je
bound
ret
pop
mov
or
ljmp
inc
jmp
push
mov
sbb
lds
pushf
adc
movzwl
sub
sbb
sub
xlat
sbb
mov
es
push
pop
xchg
cmp
jo
aam
sbb
mov
es
es
mov
leave
js
dec
xchg
jb
loope
jo
outsb
adc
adc
xchg
mov
sub
pop
add
jmp
pushf
leave
xor
and
xor
or
loop
adc
icebp
dec
movsl
push
outsl
cmp
les
cmp
jo
pop
inc
icebp
xchg
xor
xor
lods
aad
lock
gs
mov
jo
xchg
adc
scas
xchg
sti
mov
dec
cmp
cmc
aas
add
adc
or
jp
shr
add
or
sub
mov
fistps
and
out
pop
or
mov
add
add
or
bound
scas
push
aad
jl
cmpsl
sti
in
stos
mov
push
aam
and
shll
add
int
add
int3
cld
push
cli
cltd
mov
fnstcw
inc
loop
and
lret
mov
dec
testl
mov
add
jo
add
ss
lods
or
mov
cs
push
sub
adc
fwait
repnz
and
and
push
push
push
cmp
iret
adc
out
pop
mov
jbe
lret
pop
jo
daa
jle
fcoms
jmp
cmp
mov
adc
pop
xor
add
shl
andl
adc
aad
pop
mov
cltd
test
adc
ds
cli
pop
xchg
in
stos
imulb
or
test
subb
test
adc
aam
mov
or
inc
loop
test
dec
xlat
cmp
push
cmp
adc
jne
jecxz
icebp
sti
pop
mov
lods
pop
add
insb
lock
negb
add
fstl
jne
inc
cmp
test
push
cld
sub
mov
sbb
jmp
pusha
push
ljmp
into
adc
stos
nop
inc
negb
ljmp
jns
xor
inc
mov
shrb
fldl
mov
push
jle
stos
sbb
inc
xorb
roll
les
or
gs
add
mov
ja
mov
pop
in
ljmp
je
cmp
lock
jl
cmpb
jl
xor
jo
movsl
mov
test
xor
inc
xchg
adc
xchg
push
fsts
cwtl
or
aad
push
aam
add
adc
inc
push
push
mov
push
push
pop
ljmp
iret
dec
mov
or
inc
inc
adc
fnstcw
pop
lods
leave
and
adc
or
fisubs
ja
and
dec
enter
pushf
mov
call
mov
dec
add
and
clc
loopne
or
or
scas
lar
test
jne
xlat
flds
xchg
shll
mov
or
test
je
mov
xchg
push
scas
or
xchg
and
xchg
or
xor
add
add
adc
mov
stos
jne
push
jl
or
mov
or
hlt
mov
les
jae
pop
and
inc
or
aad
mov
pop
int3
add
push
xor
das
hlt
iret
push
in
imul
inc
push
neg
lahf
ja
lock
sbb
sub
inc
fnstcw
jns
sbb
xor
xchg
fwait
aad
adc
or
sbb
push
push
dec
imul
rcr
aad
icebp
and
adc
jne
fs
insb
cmp
pop
jne
pop
pop
pop
ret
mov
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
fimull
mov
jmp
das
ljmp
lock
je
push
mov
je
cld
add
xchg
push
cmp
fbld
aaa
mov
adc
mov
mov
sub
push
test
push
nop
ss
xchg
push
sbb
xor
push
sbbb
or
int
sbb
into
jbe
jns
movsl
add
jmp
bound
jne
cmc
aam
sbb
out
std
cmp
daa
push
or
adc
inc
cltd
and
ds
lods
pusha
loop
push
and
fwait
mov
push
es
xor
out
adc
inc
insl
test
adc
adc
gs
or
cmpsl
sahf
mov
stos
cs
fidivs
sbb
cld
and
jno
ss
dec
pushl
dec
out
ss
hlt
mov
inc
add
adc
inc
or
movsl
adc
arpl
jne
cmp
testb
and
jmp
fists
or
jg
jmp
je
inc
mov
mov
mov
xchg
in
pop
je
test
fisttps
add
out
push
cmp
ja
add
cmp
adc
fcomps
loopne
or
push
jge
je
mov
cmp
pop
xor
pop
add
add
add
push
aad
mov
mov
addl
and
in
fbld
outsl
sbbb
sub
fimuls
inc
dec
sbb
lea
inc
imul
je
fildll
test
test
aaa
jnp
sbb
and
jb
inc
sub
dec
aaa
dec
xchg
inc
xor
jo
push
leave
pop
dec
xchg
jne
sub
aaa
ss
insb
popf
adc
js
xor
jmp
arpl
aam
aad
dec
fistps
sbb
pop
adc
add
jmp
inc
imul
int
sarb
movsb
rcrb
push
pop
sub
xor
adc
add
dec
xchg
xchg
or
dec
insb
add
test
add
sbbl
jmp
mov
inc
iret
pop
nop
out
jg
jg
mov
push
rcl
sahf
out
sahf
rcl
aad
xlat
fmuls
jns
fstpt
rolb
and
mov
idivl
xor
inc
add
repnz
data16
jne
rorl
imulb
push
push
jl
mov
or
add
in
mov
mov
add
push
push
push
push
clc
xor
mov
lahf
xor
push
pop
sub
push
and
push
je
test
and
call
cmp
sbb
push
sbb
push
jnp
push
sbb
and
add
push
rolb
push
popa
lods
pop
pop
pusha
cld
dec
push
mov
imul
or
jmp
lret
lea
imul
lea
sar
mov
mov
mov
pavgb
nop
sbb
mov
mov
mov
test
sbb
inc
pushf
cmp
lock
dec
mov
call
inc
add
adc
sti
add
xchg
fisubs
stos
pushf
hlt
add
push
jp
mov
fildl
fs
dec
ret
test
test
mov
lock
inc
adc
push
ljmp
or
mov
and
lea
pop
adc
movsb
subl
jae
xchg
ja
add
cmpb
and
or
pop
mov
aaa
repnz
in
ljmp
loopne
inc
or
fimuls
mov
and
add
fadds
outsl
rolb
test
rolb
push
mov
or
cs
loopne
mov
ds
dec
xchg
mov
int
or
cwtl
dec
push
sub
mov
movsb
cmp
cmp
push
lret
movsb
sub
inc
xchg
mov
xor
mov
jge
jl
fdivl
and
rorb
inc
or
jle
jle
inc
test
fiaddl
xor
add
or
and
inc
or
and
add
or
adc
pop
dec
gs
push
lret
cmpsl
mov
movl
lods
or
fs
shrl
mov
out
mov
jmp
dec
adc
iret
and
lods
lock
div
jns
lret
cli
inc
cli
div
xchg
loopne
adc
loop
add
sbb
add
loopne
pusha
outsl
mov
mov
pop
adc
dec
dec
js
aam
dec
sbb
shll
inc
adc
leave
mov
xor
mov
xorl
rolb
xchg
cmpsb
mov
mov
xor
xor
mov
inc
add
mov
xchg
mov
mov
sub
push
sub
loop
out
sbb
cmp
imul
das
add
mov
mov
sbb
xchg
push
and
xor
dec
or
outsb
das
sub
jne
fdivrs
aam
mov
inc
test
dec
and
jge
mov
mov
pop
adc
dec
xor
and
scas
call
push
jns
fidivrs
cld
lea
fcmovu
mov
mov
adc
shr
inc
add
lods
dec
les
rolb
cltd
add
sahf
idiv
sbb
movsb
add
sbb
idivb
mov
test
push
push
sbb
mov
out
and
jge
adc
enter
jecxz
shll
sub
dec
les
stc
add
jne
sub
fnsetpm(287
loopne
mov
mov
add
mov
repz
jge
insb
cwtl
jno
ja
sub
insb
sbb
movb
inc
mov
sbb
popa
mov
add
push
nop
cmp
outsl
cmp
cli
es
notb
adc
or
dec
cmpsl
sub
cmpsb
pop
shr
dec
jl
sub
fisttpl
mov
push
shll
test
jne
sbb
neg
and
insb
jle
inc
imul
or
loopne
loopnew
xchg
pop
add
call
mov
mov
or
and
pop
pop
push
into
je
out
sbb
cmpsb
clc
loope
and
xchg
mov
insb
push
cmc
movl
roll
sub
loopne
push
movsl
faddp
dec
into
or
add
sub
cmpsb
push
pop
ret
mov
rcll
xchg
clc
js
add
enter
xor
cmp
push
shlb
push
dec
frstor
add
pop
sub
and
mov
sbbb
in
into
or
mov
inc
xchg
orb
test
in
std
lahf
mov
dec
nop
dec
mov
dec
cmp
jge
sub
andb
stos
cmp
movb
dec
cmp
arpl
mov
add
dec
add
add
fadds
xchg
push
add
push
movsbl
dec
adc
divb
int
pushf
adc
push
lcall
lret
or
mov
sahf
inc
jbe
jge
and
movsl
test
add
add
add
and
ret
fstpl
ja
adc
aad
push
mov
shll
lea
andl
into
push
imul
outsl
fs
shr
add
je
sbb
push
or
cltd
scas
dec
test
scas
add
adc
inc
xchg
sbb
pusha
inc
ret
push
mov
and
push
ret
pop
insl
xchg
dec
lret
xchg
adc
or
jae
orl
pop
mov
out
addb
iret
xor
andb
xchg
into
pusha
inc
dec
xor
jmp
mov
rcrl
xor
cmpps
or
mov
push
sahf
push
jg
cmp
inc
push
pop
jae
cmpsb
shlb
lret
or
add
ja
xor
add
or
add
sbb
push
je
pop
pop
jmp
fcomps
adc
xlat
test
pop
scas
push
add
pop
and
mov
loope
and
and
xor
inc
jge
popa
cmp
mov
ret
or
fs
pusha
insb
in
sub
lcall
cld
mov
cld
or
movsb
dec
xorb
loopne
xchg
sbb
inc
stos
jg
sarl
inc
subl
cmp
jge
and
add
stmxcsr
add
pop
test
into
or
add
or
cltd
xchg
data16
add
into
into
jle
pusha
mov
lret
je
and
sbb
inc
jg
into
into
into
mov
push
and
pop
sub
out
icebp
push
out
push
pop
nop
pop
cwtl
pop
xchg
mov
push
mov
adc
not
and
or
pop
adc
mov
add
outsl
in
ret
dec
inc
pop
lcall
add
leave
lahf
pop
test
addr16
add
or
adc
push
add
sbb
mov
and
inc
dec
scas
push
imul
or
sub
jmp
lret
leave
dec
in
lret
cwtl
inc
lods
xchg
push
xor
xchg
adc
cmp
push
scas
cltd
fiaddl
sub
inc
pusha
adc
push
sub
pop
rcll
cmpsb
loope
insb
and
jl
fmul
cmp
rsqrtps
push
mov
and
cmp
and
sbbl
jmp
add
jle
inc
ret
fsubrp
shrb
push
adc
sbb
xlat
jle
and
daa
test
lds
sub
fadds
add
jge
xor
xor
or
cmp
js
icebp
scas
dec
addl
push
jl
sbb
xor
add
or
adc
cwtl
orb
cmp
inc
jmp
and
dec
or
and
jb
add
mov
je
push
xchg
inc
or
fisttpl
scas
outsb
cmp
jbe
inc
inc
fsubrp
jmp
pop
sbb
dec
xchg
daa
inc
mov
lcall
jo
jbe
mov
loope
into
test
rcr
add
xchg
sub
aam
fbstp
mov
loope
adc
rolb
xchg
orb
test
and
mov
imul
andl
loopne
xchg
pusha
scas
ret
addr16
stc
sbb
jbe
nop
jnp
inc
pushl
push
leave
scas
adc
test
ret
mov
dec
push
xor
mov
push
mov
pop
popf
in
xchg
mov
ss
mov
xchg
and
add
add
sbb
xor
inc
jp
test
ret
mov
shlb
sub
cmpsl
rclb
fcoml
fsubr
mov
dec
mov
dec
xchg
inc
lods
lret
sbb
clc
pushl
dec
and
jge
sbb
jae
fwait
xor
push
pop
push
imul
sub
out
add
jle
pushf
and
push
push
adc
push
repnz
or
push
shll
jb
mov
rorb
rclb
std
adc
js
sub
adc
jo
movq2dq
jo
add
add
cs
imul
out
push
xor
cmp
and
lods
and
push
push
xlat
movsl
adc
gs
test
pop
loop
adc
mov
xchg
sub
fimull
push
sbb
pop
lock
sbbl
cmp
stos
dec
adc
or
and
scas
bound
push
inc
aas
lods
sbb
adc
jmp
xchg
cmp
pop
lock
jbe
pop
pop
rolb
push
mov
push
faddl
outsb
nop
lret
sub
and
push
fcomps
or
and
inc
mov
inc
pop
add
or
test
add
idivb
or
mov
jo
adc
cmp
test
shll
insb
cmp
jns
outsl
add
sbb
and
sbb
xor
adc
call
mov
popl
loopne
movsb
push
adc
jl
and
xor
jno
cmp
or
int3
ds
pusha
fs
lods
in
pop
xchg
mov
pop
xchg
std
insb
lret
nop
stos
jae
fsubs
icebp
insl
cmp
loopne
in
loope
jmp
dec
loop
sbb
jp
movsb
fisttps
cwtl
mov
push
sub
js
adc
and
push
movsb
or
mov
mov
cmp
push
sbb
inc
js
push
loope
mov
clc
fcompl
rcrl
loope
std
dec
and
sub
add
sbb
sub
or
hlt
push
mov
rorl
or
ljmp
push
and
pop
adc
cmpsb
inc
hlt
mov
les
xor
add
add
fwait
push
pop
shlb
adc
push
mov
mov
test
mov
add
testb
push
push
or
mov
add
or
push
xchg
nop
sbb
xchg
or
adc
pop
orb
or
adc
les
add
fdivl
adc
jne
into
daa
fildll
and
daa
and
test
aam
es
imull
in
mov
mov
inc
dec
imul
cli
xchg
mov
add
inc
mov
js
push
xchg
mov
and
ret
mov
and
jl
dec
sub
popa
stos
outsl
cmpsb
div
cvttps2pi
mov
or
jmp
xchg
pop
je
daa
or
and
insb
sar
push
nop
push
inc
cmp
jmp
fsts
and
cwtl
push
xor
lahf
cmp
insl
xchg
or
dec
xchg
jmp
cmp
xor
ficoml
test
adc
pop
in
and
xchg
and
jmp
int
inc
mov
inc
sti
arpl
lods
popf
lcall
unpcklps
or
jl
int3
les
stc
mov
das
jae
loope
push
ljmp
sbb
ret
addr16
or
enter
lock
orl
or
nop
imul
mov
mov
adc
leave
in
aad
js
popl
xor
push
xchg
testb
and
pop
daa
addr16
dec
add
test
add
xor
mov
shlb
enter
or
test
or
jne
cs
mov
jge
mov
and
sbb
pop
call
mov
insb
call
jb
mov
in
adcb
lock
in
xor
pop
and
ret
pop
add
dec
pop
fsubs
lahf
add
xchg
cld
or
adc
jne
aad
inc
jb
mov
cmp
js
pushf
or
pop
in
pop
dec
mov
adc
mov
sub
cmp
cmpsb
cmp
stc
pop
outsb
xchg
inc
adc
imulb
mov
dec
lods
push
jmp
pop
or
and
mov
sti
pusha
pop
dec
shr
cmp
lods
dec
sbb
pop
sbb
dec
sbb
jae
pusha
fisubl
out
and
andb
fwait
cmpsl
jb
inc
add
mov
or
add
dec
sub
mov
xor
sbb
call
popa
inc
pop
xchg
les
push
and
dec
jnp
in
cmp
xchg
in
pop
pop
popa
fcmovnbe
xchg
and
in
setnp
lfs
fadds
mov
push
xor
iret
loopne
outsl
fsubl
lock
push
adcl
sub
dec
push
sbb
hlt
add
add
pop
mov
jne
inc
cli
es
mov
cld
fcompl
sbb
xchg
lahf
cmp
rorl
dec
dec
push
scas
js
in
popl
push
in
jmp
dec
cmpsb
dec
cld
dec
or
or
xchg
sub
shll
cmpsl
mov
mov
movsl
bound
adc
loopne
sub
aam
cltd
mov
dec
aam
mov
xor
cmp
or
out
shrb
sub
gs
push
mov
dec
xor
and
adc
xor
and
and
leave
and
dec
xor
and
dec
xor
inc
mov
dec
fs
fld
insb
add
jle
lahf
jge
sbb
add
pusha
add
add
add
nop
add
aam
data16
loopne
lret
clc
hlt
out
push
jb
inc
cld
xchg
inc
fimuls
lock
call
lock
pop
adc
mov
mov
push
add
pushl
scas
push
dec
test
mov
arpl
shrb
shlb
aam
fildl
fsubl
int3
aad
and
xchg
or
shlb
dec
push
nop
add
push
jmp
inc
lods
call
in
loopne
fs
jno
aam
in
mov
loope
sbb
adc
rclb
pop
aad
imul
mov
dec
mov
test
add
je
xor
xor
mov
push
fisttps
hlt
pusha
dec
pop
dec
sbb
sbb
jbe
das
pop
call
mov
sbb
inc
call
lods
mov
into
jg
loopne
jb
inc
leave
insb
imul
adc
cmpsb
dec
aam
in
in
call
in
fsubrs
adc
xor
in
call
push
adc
insb
fmull
insl
jo
insb
stos
or
in
out
cmpsb
sbb
call
in
sub
adcl
popa
adc
cwtl
or
inc
rorl
insl
adc
adc
out
in
rcll
insl
mov
popf
inc
outsb
popf
rdtsc
leave
mov
jg
gs
xchg
xlat
movsl
aad
pop
mov
popa
insb
and
in
nop
idivb
test
leave
and
xchg
cli
jno
and
outsl
outsl
jnp
mov
or
mov
xorb
out
xor
int3
out
in
jl
test
jmp
lcall
enter
out
call
repz
jo
lods
push
addl
jo
fcom
add
dec
push
pop
mov
ss
mov
arpl
das
nop
and
addr16
lock
jno
mov
shrd
mov
cmp
enter
aad
cmp
cmpsl
sbb
movsb
lods
push
xchg
jecxz
jb
ds
inc
arpl
cmp
ret
dec
ret
sbb
add
fcoml
rorb
jae
push
imul
push
mov
xchg
faddl
mov
push
ret
mov
cld
shll
mov
insb
mov
xchg
idivl
jno
lock
je
xor
call
enter
cld
aam
push
test
addr16
xor
movsl
or
adc
mov
fsubs
daa
inc
lahf
mov
jne
sub
xchg
push
pop
call
xor
push
mov
movnti
xorb
or
sti
test
inc
jbe
outsb
mov
sub
xorb
xchg
dec
in
aaa
pop
sbb
and
fdivr
sub
dec
xchg
fcoms
aas
push
xor
add
xchg
dec
push
sbb
jp
mov
jmp
pusha
sub
push
xor
out
jbe
hlt
inc
fisttps
imul
sub
jl
notl
pop
dec
cs
cltd
pusha
inc
add
leave
mov
adc
inc
push
in
xchg
jg
pop
int3
js
js
add
adc
outsl
call
test
jb
xchg
mov
sti
les
dec
sub
dec
xchg
cmpsl
mov
adc
jmp
or
dec
rclb
add
imul
add
jg
fmuls
loop
mov
sbb
lods
mov
mov
push
cmp
dec
movsb
nop
add
movsb
jbe
rol
add
jne
test
sbb
div
int
push
pop
jp
mov
push
pop
adc
push
mov
mov
arpl
fsubrl
pop
leave
mov
mov
and
lods
dec
push
fldenv
cld
lea
pop
jmp
mov
lods
mov
in
mov
cmp
push
mov
arpl
jnp
sub
push
popa
sub
cli
add
cmp
nop
and
in
in
inc
push
cmp
or
or
cmp
nop
or
or
mov
nop
inc
or
push
or
inc
lods
addr16
xchg
and
sti
sbb
mov
push
lea
jge
aam
cmp
insl
xchg
push
scas
mov
inc
inc
or
shll
sbb
push
sbb
jle
loopne
inc
es
aam
dec
push
sub
xor
xchg
leave
aas
jp
arpl
in
fdivrs
lods
push
mov
dec
and
lcall
cmp
test
addl
xor
setns
test
or
xchg
cwtl
mov
inc
xchg
lods
nop
and
in
add
je
in
aad
ficoml
das
and
pop
lock
call
fwait
lea
xor
movsl
faddl
adc
arpl
dec
push
into
or
sub
les
vpmullw
or
push
in
subb
fadds
add
adc
adcb
shrl
xchg
inc
shll
jae
ja
xor
std
int3
or
add
sti
mov
sbb
movsl
or
leave
shll
and
loopne
aad
dec
cmp
pop
lock
sub
mov
xorl
inc
orb
adc
cmpsb
sbb
xlat
lods
dec
outsb
adc
enter
dec
sarb
mov
cwtl
sub
dec
mov
insb
mov
dec
outsl
movsb
popf
dec
add
inc
lcall
mov
adc
lods
or
scas
xor
pop
sub
mov
sbb
pop
and
mov
mov
sbb
outsb
xchg
movsb
xchg
nop
popf
sbb
xor
xchg
rep
mov
test
mov
int3
scas
mov
or
cmp
mov
pop
pop
xchg
or
xchg
enter
test
repnz
cmp
xor
jne
dec
adc
pop
repz
fld
movsl
subb
insl
shrl
sub
and
movsl
xor
test
shll
cmpsb
in
sub
mov
movsl
push
test
sbb
imul
scas
sub
mov
mov
xorl
or
ret
call
lock
jg
dec
xchg
inc
into
in
push
test
pusha
xchg
mov
test
in
xor
lds
sub
test
and
cmpsb
inc
mov
or
mov
add
jmp
fnsave
adc
mov
mov
jns
in
adc
outsb
loopne
sbb
mov
inc
mov
add
roll
push
xor
add
jl
leave
fwait
add
les
push
sub
mov
push
aam
aas
shlb
mov
cmp
popf
rol
adc
xor
fdivl
inc
lea
ror
fsubrl
sbb
daa
pusha
sub
test
enter
fucomip
cmp
mov
xchg
sbb
jns
sarb
adc
ret
add
adc
xlat
dec
xchg
pusha
xchg
andb
xor
push
xchg
add
mov
call
inc
lret
pop
ja
in
cmp
mov
adc
in
test
sub
shlb
inc
sub
lds
nop
iret
int3
fisttps
cltd
adc
enter
mov
mov
aas
iret
jg
andl
ret
rorb
in
lods
test
lds
adc
xchg
jnp
call
fsubrs
sub
dec
mov
pusha
rclb
and
or
or
xchg
sub
push
adc
adc
inc
test
xchg
jecxz
xchg
ja
add
test
rorb
jno
pushl
je
xchg
out
xchg
mov
and
xor
fwait
and
pushf
and
stos
mov
or
lock
in
sti
add
sbb
sti
enter
and
sbb
jg
out
pop
mov
jbe
mov
cmp
push
push
sub
dec
xchg
mov
mov
enter
sbb
in
xchg
mov
xchg
insl
nop
xchg
xchg
cwtl
jne
pushf
dec
xor
aaa
test
fsubrl
das
fadds
pop
jne
shl
int3
and
dec
ror
les
sub
mov
in
sbb
loope
ret
sbbb
lds
xchg
lahf
loopne
mov
cmp
inc
lcall
nop
fwait
movsb
add
mov
cwtl
mov
nop
lret
jl
mov
sub
mov
popa
orl
fadd
dec
fcmove
insb
out
insb
adc
jo
out
insl
mov
push
fs
adc
pusha
ret
pusha
out
out
cwtl
pusha
jp
cwtl
pop
loopne
mov
xchg
mov
pop
sub
mov
rorb
dec
mov
cmpsl
pop
cltd
std
movsb
in
add
inc
push
in
popa
lods
cltd
xor
dec
enter
xor
pop
mov
or
push
lcall
bound
popf
test
mov
je
inc
jnp
fwait
mov
popa
call
lock
loopne
lock
push
add
xchg
test
push
dec
pushf
in
lret
icebp
mov
pushf
loop
inc
cmpsl
pop
pop
or
fs
jmp
dec
cmp
pusha
inc
pop
pop
add
movsb
ficomps
adc
popf
rorl
lods
sbb
or
scas
cwtl
inc
nop
inc
movsb
arpl
in
push
xor
rcl
gs
xchg
inc
aas
hlt
bound
lds
leave
roll
ret
sub
cmp
enter
aam
ret
jo
aas
es
loop
or
out
addb
lcall
or
pusha
xlat
mov
repnz
fmuls
lahf
or
lods
jbe
mov
or
nop
cmp
mov
or
in
mov
sbb
enter
pop
xchg
pop
or
or
xor
or
mov
stos
pusha
fildll
in
adc
push
add
mov
add
pushf
lret
mov
aad
enter
add
les
pusha
jae
insl
dec
repnz
sbb
cltd
js
add
pusha
stos
aam
aas
jmp
outsb
xchg
int3
int3
aad
aad
xchg
fadds
push
xchg
pusha
pop
jb
enter
xchg
pop
add
and
mov
ficoml
jne
aad
pop
xchg
sub
xchg
add
xchg
xor
int3
fldl
popa
push
sub
jns
int3
and
jg
imul
ljmp
pop
outsb
push
mov
aam
int3
imul
adc
arpl
or
and
out
scas
or
xchg
jg
shrl
jbe
dec
dec
adc
push
xchg
xchg
dec
int3
mov
fsubrs
inc
insb
dec
mov
adc
mov
data16
sub
fdivrl
nop
inc
xor
jnp
sub
mov
je
mulb
lods
fucom
sub
dec
adc
or
insb
js
mov
xlat
cltd
add
or
pcmpgtd
add
shlb
movsb
nop
inc
es
nop
pop
mov
cltd
and
das
ret
or
adcl
cmpsb
pop
xchg
mov
push
scas
inc
inc
sub
in
add
mov
add
enter
enter
insl
inc
mov
or
cwtl
or
mov
mov
mov
ljmp
loope
sub
repnz
pushf
test
shlb
aas
cld
cmpsl
call
je
int
test
xor
faddl
les
pop
inc
fwait
push
dec
ja
test
xor
or
test
dec
xor
int
push
xor
fsub
sbb
xor
or
add
movsl
int
push
in
jmp
mov
test
inc
les
mov
xor
lcall
mov
test
push
xor
pushf
movsb
lods
imul
leave
insl
xchg
push
andb
jb
nop
dec
cwtl
sbb
inc
imul
xchg
fs
lock
sbb
and
inc
repnz
pop
pinsrw
ret
inc
lock
lods
test
test
gs
sbb
push
aaa
jge
pop
push
movsb
lods
fmull
sbbb
aam
add
nop
inc
mov
cmp
sti
or
es
or
out
and
mov
mov
inc
mov
and
sysenter
xor
jge
int3
lods
dec
mov
xlat
in
mov
lock
repz
sbb
in
sbb
add
xchg
sbbl
les
mov
cltd
orb
sub
das
aam
xchg
inc
in
adcl
pusha
leave
cmpb
repnz
cmpb
test
fcoml
mov
cmp
xchg
invd
cltd
movsl
fsubrs
das
fildl
inc
sahf
add
or
or
or
xorb
out
mov
mov
inc
fsubs
inc
add
mov
sbb
push
iret
inc
adc
push
pop
invd
xor
xchg
sub
and
mov
mov
call
pusha
and
or
dec
xor
mov
adc
imul
call
mov
adc
cltd
mov
inc
inc
or
xchg
sbb
clc
xchg
sbb
les
in
sub
jae
mov
add
xchg
pop
xor
fbstp
ret
and
or
movsl
lods
dec
or
xchg
aam
mov
or
loopne
ret
fsubs
mov
sbb
loopne
add
mov
jne
push
icebp
nopl
insb
aas
fwait
sbb
xchg
or
xchg
jbe
insb
xchg
inc
adc
inc
add
fdivrs
or
sub
mov
mov
movsb
nop
push
inc
or
call
or
sub
push
adc
arpl
gs
adc
mov
and
mov
leave
mov
jne
cmp
add
test
adc
sub
mov
aad
stos
subl
call
xchg
dec
mov
push
test
andb
jmp
xchg
push
rorl
mov
fdivp
push
push
jmp
sahf
add
sub
and
es
pop
mov
fldt
popf
inc
jmp
xchg
inc
lcall
movsb
pop
out
pushf
xchg
dec
xor
adc
fs
imul
pusha
push
cmp
cltd
dec
inc
jo
int
in
mov
clc
inc
fs
fcoms
or
ljmp
dec
fwait
pusha
les
adc
inc
jnp
mov
test
inc
mov
jbe
sub
xor
mov
adc
leave
and
int3
enter
xor
jo
sbb
inc
jo
sbb
in
fisubrl
mov
xor
jecxz
mov
adc
je
orl
xchg
push
or
cmp
adcl
inc
add
adc
mov
mov
jg
movsb
or
adc
test
test
js
mov
imul
loopne
xchg
sub
sbbb
mov
rcr
mov
pop
or
fs
push
dec
push
pop
pop
pop
pop
push
push
mov
movsb
sarb
inc
imul
or
test
sub
gs
mov
test
cmp
nop
jmp
push
rol
add
bound
mov
add
sbb
mov
pop
cmpb
imul
shlb
les
push
dec
mov
sub
mov
lret
lods
test
je
adc
rorb
loopne
rorb
or
sub
in
pop
mov
test
mov
dec
pusha
jb
lods
or
add
js
add
cs
or
aam
aam
mov
fdivrl
mov
popa
mov
call
test
in
shlb
xchg
adc
sbb
push
lds
fidivl
sub
inc
mov
cmp
adc
aad
aad
sbb
pusha
dec
rcll
jae
scas
adc
or
dec
in
pop
hlt
lock
les
in
jmp
mov
out
mov
notb
adc
adc
push
adc
daa
xchg
in
cld
popa
inc
cs
or
fcom
shlb
lds
inc
sub
outsl
paddq
push
and
pop
jo
jnp
fdivrl
add
dec
fisubl
push
inc
sti
insb
adc
pop
or
jb
jo
sbb
cli
mov
sti
leave
and
push
cld
cli
scas
fs
cltd
movsb
or
cmp
dec
daa
cltd
in
cmp
add
movsb
sbb
and
jae
lods
je
sti
mov
cmpsb
or
inc
cmp
imul
inc
enter
inc
or
pop
shll
insl
sub
inc
and
scas
jb
cli
call
nop
test
test
adc
lods
iret
mov
pop
mov
and
rorb
pusha
adcb
loopne
les
adc
rcll
xchg
iret
das
jmp
push
inc
mov
jmp
fucomi
sbb
imul
leave
push
add
subb
gs
jmp
cmp
xor
jmp
loopne
sbb
add
pusha
or
lods
movsb
xor
lret
inc
inc
call
push
fadds
into
movzwl
icebp
imul
and
xor
add
popa
sbb
or
in
idivb
mov
rcrb
mov
aad
push
imul
out
loopne
and
add
jle
adc
add
loopne
dec
push
dec
push
ds
push
dec
repnz
push
fbld
jne
push
dec
mov
mov
andl
xchg
dec
es
adc
push
out
push
int
push
jno
dec
pushf
mov
adc
dec
add
lods
mov
dec
push
lds
sbb
dec
sbb
aaa
adc
aam
mov
loope
jo
fs
ret
push
mov
xlat
jl
out
stos
cmp
popf
loopne
mov
inc
test
pop
and
lret
jns
iret
sti
jo
xorb
add
mov
and
push
ljmp
jbe
pop
hlt
inc
add
push
inc
add
xchg
jnp
fldt
in
inc
cmc
push
mov
push
incl
inc
sub
ljmp
cld
fldl
addr16
fistpl
or
jnp
mov
add
jns
mov
and
scas
mov
push
mov
pushf
cwtl
mov
or
dec
dec
dec
dec
dec
dec
dec
dec
and
sbb
ljmp
popa
bound
gs
imul
jo
jb
je
jbe
js
cld
jg
jp
xor
xor
sub
pop
pop
das
mov
rcll
xchg
adc
clc
push
or
cmp
rclb
cmpl
dec
repz
push
ret
push
loopne
out
call
push
cmpsl
dec
out
ret
push
imulb
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
push
mov
es
gs
xor
cs
insb
push
bound
inc
sti
mull
insb
pop
popa
je
outsl
outsb
push
cmpb
int3
push
sbb
cli
mov
xor
add
push
incl
sub
or
in
outsb
mov
jb
js
je
jb
jle
mov
insl
add
outsl
add
add
add
sbb
cmp
push
gs
jb
sbb
xor
popa
mov
popa
jb
mov
pop
imul
dec
xor
xor
out
mov
cmp
sub
dec
and
jns
add
das
das
push
jl
ja
add
push
inc
inc
gs
insl
fmull
dec
outsl
jbe
dec
arpl
fucom
ret
push
push
jo
sub
addr16
dec
jne
out
sbb
xchg
mov
insb
and
pop
stc
dec
popa
jb
push
inc
pushf
jae
sahf
insb
adc
xchg
jae
cmp
jns
jg
xor
cwtl
inc
push
jne
xor
xor
daa
push
scas
clc
sti
sub
sbb
dec
js
push
jne
into
cmp
insb
xchg
pop
dec
inc
push
mov
jbe
push
popa
das
jo
or
dec
jno
fcomip
mov
adc
cmp
pop
fldl
sbb
dec
faddl
sub
xchg
or
cmpsl
jmp
sub
sub
sub
cs
movsl
cmp
cmp
ds
inc
sbb
das
pop
pop
push
pusha
fcomi
cmpsl
test
jnp
jge
jg
cmp
inc
mov
cmpsl
test
cs
and
push
fdivrl
dec
movl
jge
push
inc
insb
jae
cs
cmp
jne
inc
sbb
jo
inc
mov
xor
leave
fidivs
insl
and
jb
jbe
dec
push
push
fcmovnu
into
sbb
inc
sbb
lock
mov
and
add
xor
sbb
dec
cmc
stos
outsb
push
jo
imul
insl
test
hlt
lcall
jo
test
lods
xchg
idivb
and
mov
and
imul
sub
push
insb
xorb
inc
fnstenv
pop
popa
and
daa
mov
jne
pop
cmp
insl
and
insl
push
xchg
sub
insl
inc
cs
xor
outsl
or
dec
rclb
jo
lcallw
out
mov
add
xchg
and
or
jnp
or
imul
push
out
pop
or
fs
adc
cltd
xchg
mov
je
mov
and
push
ds
pop
adcl
fidivrl
add
and
mov
jns
push
daa
sub
cld
dec
inc
and
das
arpl
cmp
arpl
dec
popa
sub
gs
lret
mov
fiadds
inc
xchg
inc
jns
push
insb
imul
rcrb
push
loopne
lcall
nop
andl
inc
mull
push
push
fistps
sub
lcall
sbb
rorl
pop
fs
xor
hlt
adc
sbbl
cwtl
cmp
aaa
ja
inc
cmpsb
sub
pop
mov
fs
adc
add
inc
sbb
push
mov
jne
push
gs
push
xor
mov
je
int3
inc
jle
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
cmp
xor
ljmp
imul
loop
fsubrl
outsb
popa
pop
or
mov
rorb
xor
push
push
leave
nop
inc
insl
imul
call
pop
xchg
cmp
xorl
lods
xchg
cmp
fstpl
and
pop
push
cmp
addr16
jae
sbb
scas
xor
fsubl
inc
jo
jo
sub
sbb
lock
push
imul
xchg
add
pop
dec
jmp
jo
mov
and
cmp
cwtl
ja
pop
imul
out
inc
inc
and
dec
data16
ret
jg
lcall
loopne
mov
cmpb
dec
cmp
rol
das
lret
jno
lock
cld
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
data16
shrl
cmpsb
gs
mov
dec
add
xor
pop
jle
push
jg
js
jae
je
xchg
pop
addr16
dec
pop
add
add
sbb
inc
xor
jne
sub
xor
sub
cltd
xchg
adc
adc
add
add
add
add
and
xchg
pop
push
cld
push
pop
pop
or
aaa
ds
push
pop
hlt
and
or
jge
out
pusha
push
js
or
sub
imull
add
add
addb
int
mov
add
xchg
test
add
outsb
shr
push
orb
jle
push
push
and
ficomps
jb
int3
push
cmp
insl
into
jo
add
dec
xor
lock
push
stos
fisttpl
jo
dec
and
or
sbb
daa
iret
lea
mov
nop
xchg
xchg
icebp
js,pn
xchg
rol
fiadds
test
dec
sub
adc
adc
mov
pushf
lock
add
pushf
jo
or
cs
ret
dec
pop
out
or
pushf
je
nop
sahf
push
pop
push
xor
pop
bswap
pop
ficomps
int3
sbb
or
mov
or
add
stos
in
sub
dec
add
add
in
in
addl
mov
cmp
mov
mov
dec
cmp
inc
add
add
stos
pusha
pop
xorb
cs
sar
adc
mov
lods
sbb
add
pop
test
pop
add
jle
aas
sub
addb
xchg
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
ljmp
mov
mov
mov
mov
mov
mov
ret
enter
dec
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
jmp
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
imul
adc
call
shll
inc
aas
lcall
fists
int3
fisubl
movsb
inc
sbb
jae
jb
bound
dec
popf
mov
popa
mov
outsl
mov
repnz
pop
outsl
lcall
popa
addr16
outsl
js
push
push
inc
push
mov
sbb
and
insb
gs
outsl
popf
mov
mov
daa
add
mov
aam
insb
in
dec
imul
fcmovnu
and
jb
jo
ds
and
adc
into
dec
inc
jb
jns
daa
pop
bound
mov
mov
push
cmp
pusha
aad
lcall
addr16
cmp
add
sub
outsb
pushw
mov
arpl
pop
sbb
pusha
inc
jbe
push
jecxz
jnp
push
lahf
fs
mov
fisubl
dec
clc
popl
jle
dec
sti
cmp
push
js
push
and
pop
es
dec
test
xchg
lahf
lock
mov
outsb
and
push
pop
in
push
stos
push
jae
cmp
cmp
insb
call
mov
imul
ja
inc
pusha
movsl
push
mov
xchg
xchg
inc
push
push
push
push
dec
divl
dec
push
jne
repnz
mov
push
mov
mov
fildll
xor
aas
jg
loope
mov
imul
call
mov
jg
push
sbb
fs
in
pop
sbb
shlb
add
jl
mov
pusha
jns
pusha
push
or
inc
aad
pop
das
je
cmc
fcomps
outsl
xchg
daa
xchg
sahf
negb
mov
popw
pop
cmp
jnp
jg
cmp
add
ds
sub
fcmovnbe
cmp
pop
jle
sub
jnp
dec
imul
sub
jo
push
xor
divl
xlat
mull
mov
dec
in
mov
aas
dec
pop
pop
nop
cmpsb
shrl
addr16
push
jb
imul
push
ret
sahf
sbb
push
cwtl
pop
popa
pop
sbb
push
inc
xor
sub
adcl
rorl
cmp
repz
xchg
hlt
loopne
stc
cmp
repz
sahf
data16
fdivr
fnsetpm(287
les
pushf
outsb
xchg
icebp
push
nop
mov
sahf
out
sahf
mov
int
push
jmp
push
inc
and
into
xlat
insb
push
or
pusha
push
lock
in
jl
cmp
call
sahf
neg
ror
les
dec
push
dec
push
inc
inc
jns
out
cmp
xor
sub
jns
out
and
adc
iret
repz
add
sarb
jl
cmp
clc
fmulp
repz
inc
push
mov
ds
repz
cmp
add
fnstsw
out
lock
movsb
jl
jl
out
sub
in
shlb
iret
pushf
jo
sub
cmpsl
pop
push
cmpsl
and
inc
lahf
mov
mov
outsb
push
xor
add
jbe
data16
add
mov
mov
outsl
daa
scas
bound
dec
mov
sbb
je
popf
addr16
xor
es
xchg
jp
lods
pcmpgtw
xor
add
jle
push
insb
cmp
inc
inc
dec
jae
int3
push
mov
je
mov
sbb
inc
dec
inc
cmp
mov
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
addl
mov
push
loope
mov
scas
xor
jnp
inc
loop
mov
ds
sahf
jg
inc
pop
adc
clc
lret
sbb
jb
cld
dec
jg
jge
arpl
cmp
adc
dec
scas
jp
stc
jno
in
fstl
mov
and
aas
repnz
xchg
cmp
dec
imul
lret
add
inc
mov
notb
mov
push
test
sub
fwait
ss
sbb
pop
lcall
ds
xor
incb
int3
dec
dec
xor
dec
popf
pavgb
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
and
xchg
lret
sahf
icebp
mov
cld
or
mov
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
jne
out
pop
leave
loop
mov
xchg
dec
xchg
scas
lods
push
outsl
adc
push
xor
cmpb
or
icebp
nop
adc
pop
pop
repnz
inc
aas
fistpl
lret
es
sbb
or
or
jnp
or
insb
mov
jns
mov
fstl
mov
dec
push
push
push
inc
inc
or
outsb
jbe
push
mov
jl
and
adc
and
cmp
inc
lds
js
loope
gs
inc
test
int
sbb
push
dec
loope
out
push
sub
mov
pop
push
pop
fistpll
adc
inc
push
sub
cmp
pop
sub
sbb
inc
push
push
aaa
push
adc
sti
fildll
xor
aaa
add
sbb
push
sbb
sbb
inc
cmp
sub
dec
push
fdivrs
fildl
dec
jno
jb
jbe
xor
inc
pop
fwait
jge
lcall
pop
std
mov
pop
sub
pop
inc
sbb
push
push
push
push
inc
sub
in
rcr
mov
push
aas
dec
sbb
inc
sbb
adc
in
and
lods
fs
daa
aas
add
push
in
jg
enter
and
and
or
sub
sahf
loopne
inc
ss
and
cmp
cmp
or
jnp
std
int
decl
dec
sbb
or
dec
inc
cmp
pop
and
or
ret
aaa
nop
dec
dec
pop
sub
jge
inc
pop
dec
pop
ds
imul
outsb
sbb
or
sbb
ds
xchg
push
adc
or
or
push
or
ss
push
cmp
or
sub
push
mov
mov
add
inc
sbb
ds
sbb
and
addr16
popa
inc
sbb
dec
push
ds
fisubrl
sbb
xor
cmp
rol
or
sub
int3
xor
xor
push
fadds
outsl
pop
dec
jle
xor
sub
inc
and
js
dec
call
imul
repnz
push
mov
jmp
mov
sbb
and
es
pop
push
gs
xchg
inc
push
push
or
or
push
push
or
add
inc
mov
sub
or
inc
jl
pop
dec
in
sub
adc
adc
jo
inc
and
cld
ret
fistps
and
sbb
adc
or
pop
adc
nop
dec
cwtl
in
push
fisubrl
pop
adc
jo
shlb
xor
cmpsl
stc
push
nop
xor
inc
push
mov
out
fdivp
rcl
add
push
push
xor
and
or
outsl
jg
push
pop
iret
cmp
mov
pusha
scas
push
inc
out
sbb
and
es
hlt
sbb
inc
inc
cwtl
push
mov
xor
movsb
inc
pop
ds
aaa
xor
cmp
outsl
insl
mov
pop
int3
lods
lahf
inc
popa
outsb
lret
test
popa
bound
add
imul
bound
fistpll
cvttps2pi
out
ja
push
inc
jo
adc
xorb
jns
shl
aaa
push
push
dec
repz
jo
lock
ja
repz
jo
daa
push
push
push
neg
ja
inc
push
push
push
push
adc
ds
outsb
or
sub
pop
pushf
adc
loop
lds
les
push
push
pusha
ds
sub
push
pop
int
cs
add
pop
add
or
notl
cmp
push
sbb
cmp
pop
push
push
jnp
push
js
inc
jbe
mov
in
out
ja
inc
pop
or
xor
sbb
pop
dec
nop
inc
repz
inc
jmp
pop
fisttpll
dec
sahf
mov
cmp
xor
inc
add
dec
stos
data16
rcr
jmp
fnsave
clc
push
add
add
jb
and
lds
cwtl
pop
push
push
insb
push
and
and
fmuls
and
push
sbb
or
lods
sub
pop
pusha
sbb
fisubrs
adc
cmp
sbb
sub
adc
pop
add
in
mov
inc
mov
push
fidivs
cmp
cmp
pop
sbb
ss
sbb
adc
xor
out
loope
sbbl
adc
add
mov
cmc
mov
scas
jge
xor
hlt
outsb
scas
sbb
pop
adc
inc
test
mov
or
sbb
or
jl
pop
cmp
in
xchg
inc
cmp
sub
pop
fwait
sub
and
push
push
jnp
aam
dec
das
push
cmp
cmp
push
daa
cmp
jae
cmp
add
adc
jecxz
push
mov
cltd
adc
popf
mov
push
sub
or
or
popa
xchg
daa
and
in
cmpsl
sbb
and
mov
negl
inc
sbb
jle
mov
inc
sarl
cld
sub
add
push
cwtl
mov
outsl
inc
xor
and
mov
dec
lds
xor
inc
sbb
and
ds
dec
js
in
pop
inc
sbb
inc
push
push
sub
jbe
add
orl
xor
ja
adc
in
pop
push
pusha
lea
fstpl
es
push
imul
xor
push
push
pop
out
sbb
and
pop
cltd
into
scas
daa
push
xchg
xlat
int
xor
in
pop
mov
fcompl
adc
mov
inc
adc
dec
lock
jmp
xor
mov
dec
iret
push
pop
push
gs
jo
lcall
incl
and
lahf
sbb
scas
xor
dec
repnz
out
fidivrl
in
adc
push
sbb
adc
fistl
dec
movsb
xor
dec
aas
xor
scas
adc
and
jbe
pop
cmp
push
xchg
xor
sbbl
push
cmp
xor
popf
push
cs
dec
out
dec
mov
gs
loopne
adc
adc
sub
sti
mov
adc
pop
add
bound
pop
mov
nop
mov
push
xor
xor
add
sub
pop
inc
mov
adc
adc
aas
sub
or
loopne
add
sahf
imul
rorl
sub
jnp
adc
jmp
inc
addl
pop
daa
sub
sbb
xchg
imul
and
insb
pop
adcl
push
mov
sti
sbb
sbb
sub
fwait
aaa
adc
jg
das
xor
adc
inc
inc
call
push
cmp
std
xor
inc
or
pop
sub
nop
movsl
out
movsb
cli
inc
push
call
in
js
sub
data16
push
push
jae
ja
and
es
push
das
add
mov
mov
dec
push
and
out
mov
mov
add
sbb
enter
sub
cmpsb
cmp
pusha
shl
es
sub
aaa
dec
rclb
loope
add
stos
xlat
imul
pop
mov
pop
data16
ret
xor
adc
push
push
ret
add
push
add
cmpsb
shlb
dec
les
xor
push
push
cmp
push
loop
mov
add
mov
fidivrs
movsl
loop
pop
sbb
inc
push
add
adc
mov
inc
adcb
mov
xchg
decb
mov
insb
outsl
jb
bound
jnp
xor
addr16
add
push
and
jae
popa
arpl
sbb
scas
aas
lds
adc
scas
daa
ficoms
ljmp
and
xor
js
es
add
and
orl
push
sbb
xor
rol
out
sarl
push
push
pusha
jmp
jp
sti
aaa
pop
inc
add
xor
fcoms
aas
push
fsubs
imul
pop
inc
cmp
adc
testb
inc
adc
or
sub
add
inc
sbb
sub
push
loopne
pop
sbb
pop
fcoms
push
xorb
push
pop
and
sbb
pop
mov
sti
clc
je
fistl
push
shlb
loop
mov
mov
ds
jle
or
mov
push
add
xor
movsl
mov
push
cmp
push
mov
adc
add
or
adc
and
test
pop
fwait
add
xor
gs
inc
inc
inc
xchg
outsb
dec
mov
insb
or
icebp
or
jle
iret
sbb
outsb
add
scas
inc
xor
stos
push
jno
mov
pushl
dec
add
sbb
mov
inc
push
pop
fisubrs
or
push
xchg
adc
adc
cmp
adc
push
call
mov
pop
or
or
dec
lds
outsb
adc
push
push
pop
add
jle
pop
mov
push
or
loopne
inc
dec
sbb
or
jl
aaa
add
aaa
cmp
scas
lock
adc
jo
lahf
cmpsl
popf
loop
adc
push
xor
icebp
idiv
jnp
repz
hlt
xlat
push
testb
sub
xchg
sar
daa
and
lods
or
mov
mov
cmp
push
les
sbb
in
push
jo
out
dec
cwtl
push
shl
mov
pop
inc
jo
cmp
push
lret
lock
pop
xor
enter
mov
addr16
push
sub
adc
push
mov
iret
sbbb
push
push
out
addb
outsl
and
das
and
dec
pop
pushf
xchg
adc
mov
pop
ss
sub
js
lcall
inc
sbb
sbb
push
adc
pop
xor
jo
and
push
inc
mov
inc
cltd
or
add
adc
adc
push
loop
bndstx
mov
or
int3
pop
and
cmc
and
add
and
pop
pusha
pop
and
inc
pop
cmpsl
sbb
mov
jp
sbb
jg
jmp
cmp
bts
daa
xchg
jns
push
and
mov
sub
pop
dec
inc
inc
sbb
push
mov
sub
daa
mov
adcl
sub
cmp
int
mov
inc
mov
push
pop
fidivs
mov
mov
cli
inc
das
pop
mov
and
jno,pt
sub
add
cmp
push
pop
dec
scas
pushf
inc
mov
pop
mov
testb
jo
jg
dec
or
push
or
inc
movsb
cwtl
popf
es
sub
cltd
push
repnz
add
insb
mov
or
js
xor
push
jns
xchg
cmp
lahf
test
in
xchg
adc
pop
pop
push
out
cmc
sub
cmp
add
cs
dec
push
sub
inc
sbb
or
add
and
push
or
fistps
sbb
and
adc
adc
lock
loope
in
push
fmuls
stos
jne
push
scas
push
dec
pop
cmp
sbb
mov
fimuls
jg
add
lcall
lods
pop
fdivrs
and
or
jge
xor
inc
andb
int3
filds
lret
cmp
cmp
cmp
push
imul
xchg
mov
mov
in
sbb
adc
fisttpl
imul
fcmovnbe
mov
pop
sub
ds
nop
mov
outsl
jnp
adc
sub
add
xchg
fidivs
or
mov
movsl
movsl
sbb
sbb
loope
adc
fstpl
jmp
adc
and
mov
pusha
test
sarl
sbb
movsl
sbb
push
jae
and
in
js
aad
push
xor
push
flds
dec
sbb
cmp
leave
adc
out
pop
mov
test
adc
push
insl
cmp
repz
add
jle
aaa
addl
xor
test
inc
enter
mov
jle
adc
je
xchg
dec
das
pop
push
inc
sbb
pop
lcall
cmp
test
loop
cli
aas
loope
push
push
sbb
dec
push
cmp
push
pushf
or
pop
sub
cmp
xchg
push
dec
jg
or
scas
fidivrl
lock
xor
add
inc
pop
push
inc
ret
push
cmp
nop
xchg
dec
cmpsl
xchg
outsl
test
dec
ret
imul
pop
sub
sub
test
ja
add
addr16
or
sbb
test
jge
inc
sbb
and
mov
cmpsl
aam
inc
daa
pop
push
in
pop
es
pop
loop
push
mov
xor
add
movsb
xchg
pop
mov
pop
in
cmp
xor
arpl
inc
inc
xchg
xor
sub
or
push
xor
iret
clc
out
xchg
wbinvd
and
sbb
or
push
imul
aam
dec
insb
add
sub
sbb
fadds
icebp
aaa
loope
fistl
mov
inc
xchg
add
aaa
lock
es
sar
lods
mov
sub
insb
gs
mov
imul
add
outsl
jb
jp
mov
bound
add
hlt
loopne
mov
out
add
adc
and
sub
in
and
mov
or
cld
outsb
adc
stos
jecxz
sahf
out
push
adc
sbb
sahf
out
inc
push
addr16
jl
mov
cltd
or
xchg
add
pop
push
add
mov
adc
sahf
lods
adc
adc
jns
and
sub
ss
int
xor
inc
mov
mov
mov
fisubs
mov
popa
xchg
sbb
fldcw
test
sub
add
or
pop
adc
pop
add
fwait
int
mov
pop
adc
push
push
dec
data16
insb
str
add
inc
stc
das
incl
add
pop
nop
leave
push
mov
lret
lret
push
and
loopne
iret
ss
adc
repz
int
xor
rcr
pusha
es
fcomip
mov
push
and
ret
js
in
push
icebp
push
inc
out
test
lds
mov
out
add
icebp
mov
dec
push
dec
dec
jge
mov
shlb
mov
mov
outsl
outsl
and
sbb
ljmp
mov
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
pop
sti
mov
mov
sub
sub
mov
xchg
mov
mov
ds
pop
sbb
inc
mov
dec
fdivr
lds
mulb
sbb
mov
pop
mov
xchg
pop
shl
dec
push
pop
adc
das
in
pop
adc
in
cmc
xor
aaa
xor
dec
cmp
orb
xchg
pop
mov
inc
arpl
and
push
inc
jb
mov
mov
outsl
push
dec
imul
addr16
scas
pop
nop
pop
subb
cs
push
mov
dec
sahf
dec
inc
xor
xor
out
cmp
cmp
inc
iret
and
sahf
add
loopne
movups
rolb
insb
inc
int
mov
js
cmp
ds
add
and
lock
jle
pop
int3
loop
lods
lea
or
sub
fnstcw
cmp
xor
mov
xor
xor
inc
xor
xor
inc
xor
inc
push
xor
sub
jge
xchg
bound
xor
out
adc
push
outsb
add
shlb
rcrl
cmp
imul
das
js
out
xorb
insb
inc
arpl
dec
pop
dec
xor
jb
cmp
bound
je
bound
imul
test
ds
adc
lret
or
roll
ret
sub
mov
mov
mov
push
lahf
inc
mov
jae
test
mov
das
xchg
insl
adc
xlat
das
stos
pop
icebp
mov
sub
out
sub
and
mov
loopne
in
sbb
sbb
dec
iret
mov
jo
xchg
lea
pop
jg
movsl
sbb
and
or
push
pop
adc
inc
js
ja
cld
xchg
add
repnz
or
lcall
sbb
and
inc
push
xor
jns
mov
xor
inc
inc
sbb
cmp
daa
xchg
jae
and
nop
test
or
inc
or
lahf
inc
in
das
shrb
push
push
mov
jecxz
dec
mov
adc
pushf
out
add
inc
outsb
inc
add
pop
dec
inc
jl
fcmovnu
sti
imul
push
enter
lahf
idiv
pop
inc
inc
outsl
push
pop
xchg
jno
in
repz
pushf
subl
sbb
push
xchg
mov
adc
inc
push
pusha
jno
idivb
pop
test
mov
mov
es
pop
inc
ds
popa
and
xor
lods
inc
inc
or
data16
mov
cwtl
cs
pop
cmpsb
push
mov
mov
sysret
jmp
repz
sti
dec
jnp
adc
inc
scas
jns
pop
xor
es
cmpsl
and
add
dec
mov
imul
pop
push
xchg
outsl
fs
cmpsb
mov
mulb
push
shl
jns
cmp
lcall
sahf
data16
dec
icebp
and
cmp
pop
cltd
nop
pop
fwait
inc
dec
insl
fnstcw
sub
es
in
jns
sbb
xchg
sbb
cmp
push
mov
jge
xchg
out
sbb
inc
into
xor
fwait
pop
push
push
gs
ja
mov
shll
sub
idivl
sti
pop
inc
push
push
insl
xchg
sysret
mov
fisttps
sarl
dec
jmp
push
lods
cs
cmpsl
stc
cmp
pop
xor
adc
neg
sarl
push
or
aaa
es
mov
xor
sbb
push
das
outsb
sti
mov
stos
xor
repz
scas
pop
push
add
cmp
imul
push
andb
repnz
and
and
imul
lock
imul
repz
and
push
test
mov
out
and
lcall
or
xor
jl
movsb
int3
jns
iret
repz
movaps
inc
idivl
out
jl
mov
adc
popf
sub
or
aad
pop
dec
loop
sub
and
cs
adc
and
and
rcrb
push
push
mov
testb
xor
adc
mov
mov
pop
push
sbb
add
idivb
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
or
adc
cs
mov
add
inc
je
pop
add
cltd
jmp
mov
stos
inc
aaa
inc
out
imul
addl
adc
aas
inc
push
sbb
daa
inc
sbb
je
push
cmp
ja
aaa
push
imul
and
insl
aas
jae
fisubl
out
rcl
push
add
push
negl
ss
dec
cmp
dec
cmp
sahf
ss
push
ljmp
cmpsb
dec
add
pop
imul
inc
outsl
insb
pop
sub
dec
pop
je
jns
mov
fisttps
jp
das
pop
xacquire
push
rclb
pop
jne
ds
or
retw
out
scas
sbb
mov
ja
pop
mov
test
push
jo
enter
das
add
and
dec
dec
cmp
or
jnp
push
ds
mov
sbb
popa
insl
jo
repnz
ja
cmpsb
pop
insb
je
push
addr16
push
jle
jo
jae
es
outsl
and
aas
cmpb
sub
and
cmpsb
call
lods
mov
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
cmp
ds
ss
inc
push
sbb
lods
fistl
adc
loop
scas
or
push
dec
inc
inc
add
js
iret
dec
or
lahf
mov
add
jle
sbb
adc
cmp
cmc
test
fs
and
push
sub
inc
push
add
ds
or
pop
inc
pop
sbb
xorl
cmp
push
sub
push
xorb
ss
sub
dec
dec
jl
add
sbb
adc
adc
add
push
out
addb
inc
add
lods
add
js
sbb
mov
cltd
pop
ds
sub
test
push
and
sbb
sub
in
adc
mov
in
xchg
mov
or
pop
jbe
js
and
jns
or
jl
rcll
push
jae
jge
mov
and
push
push
stos
test
mov
cli
pop
sbb
sub
das
sbb
or
or
push
sbb
fmuls
inc
cmp
shlb
jmp
ret
sahf
cwtl
sbb
and
mov
daa
dec
aaa
inc
ds
and
and
jae
mov
push
jo
sbb
and
inc
inc
iret
xchg
xor
sbb
mov
lahf
xchg
xor
sbb
lods
daa
sbb
insl
and
mov
stos
xchg
jo
rcrb
sbb
push
or
lods
daa
jge
adc
push
das
divl
pop
sub
push
iret
lret
sub
mov
and
pop
movsb
mov
or
push
jno
mov
mov
imul
popa
daa
pop
sub
add
push
das
dec
fisubl
adc
fimuls
adc
rorl
sbbb
push
adc
pop
cmp
les
mov
icebp
mov
or
or
sub
mov
outsl
pop
pop
mov
pop
cltd
daa
sbb
xchg
outsb
ficoml
orb
fmulp
pop
addr16
stos
adc
jg
jno
sbbb
insl
push
or
arpl
add
lret
out
shrl
insl
and
mov
subl
mov
shll
add
outsl
lret
into
inc
inc
dec
in
sbb
and
add
add
mov
adc
test
xor
xchg
cmp
add
sub
mov
and
popl
fildl
cmp
jns
and
inc
outsb
inc
jo
xchg
js
fisttpl
jo
es
clc
adc
jns
popa
cwtl
lret
add
mov
cwtl
cmpsl
roll
stc
ds
pop
in
adc
movhps
pop
jno
test
and
loope
push
fisubl
mov
ljmp
je
cmp
das
jbe
adc
pop
inc
sbb
xor
sub
shlb
mov
jbe
push
cmp
pop
add
adc
add
cmp
push
jp
or
jae
es
addr16
out
inc
addr16
pop
cmp
bound
inc
addr16
ja
jb
aaa
ret
negb
adc
and
inc
jbe
pop
jnp
mov
sbb
sub
sbb
test
aad
test
das
sbb
orb
fsts
repz
and
and
xchg
sub
inc
mov
sbb
sbb
test
adc
add
loop
push
add
adc
movsb
mov
adc
add
inc
jb
cltd
adc
pop
inc
fwait
add
sub
clc
inc
jae
ret
jmp
push
xor
aaa
ficoms
sbb
faddl
test
aas
push
dec
jo
jle
gs
ret
jno
add
nop
inc
or
divl
adc
xchg
sub
dec
cmp
cltd
pop
xchg
je
pop
xorb
push
sub
in
pop
and
dec
mov
dec
adc
cmp
sbb
mov
sbb
mov
push
mov
dec
inc
push
pop
dec
dec
inc
pop
push
dec
sbb
in
addb
xor
jnp
mov
les
sbb
mov
or
ficomps
sub
dec
mov
lods
rcl
fcoms
inc
dec
sub
pushf
pop
mov
shll
mov
into
mov
adc
add
xor
sub
fisubl
loopne
insb
negb
inc
lret
mov
mov
inc
jb
push
addl
sahf
xchg
das
adc
adc
mov
aaa
fisttps
xor
jmp
les
jg
pop
inc
aas
rcrl
pop
add
je
and
xchg
inc
mov
cmp
jbe
test
inc
push
pop
testl
push
pop
jnp
bound
sbb
or
sahf
push
xor
or
lods
push
pop
in
adc
outsb
jno
notl
loopne
push
mov
add
push
arpl
add
loopne
subps
pop
sub
and
jbe
lods
and
sub
add
cmp
inc
sub
mov
das
cltd
cli
sub
jb
jo
or
xor
aam
jbe
inc
adc
xor
shrb
fisubrs
filds
ljmp
or
fiaddl
std
and
es
cltd
ljmp
cmp
loop
pop
inc
add
mov
cmp
dec
push
dec
sbb
addb
add
sbb
push
and
ljmp
loopne
push
adc
sbb
sbb
sub
inc
and
pop
add
std
decl
lock
and
push
push
inc
cmp
sub
push
inc
dec
add
dec
or
cmp
mov
and
adc
and
inc
sar
call
insl
fsubr
and
es
cmp
adc
adc
adc
mov
push
sti
jg
inc
inc
push
add
and
and
add
add
or
adc
lcall
inc
sbb
push
push
and
es
pop
xor
cs
sbb
sbb
dec
cmp
cmp
pushl
dec
inc
pop
pop
and
push
add
sub
cmp
or
xlat
mov
adc
in
jne
cmpb
ret
mov
dec
or
scas
add
adc
push
xor
pusha
cmpsl
and
push
push
push
add
inc
inc
cmp
lahf
inc
mov
cmc
ret
imul
sub
cmp
adc
mov
sub
pop
popa
adc
add
adc
adc
repz
sub
cmp
inc
imul
mov
or
stos
stos
inc
pop
shll
and
pop
inc
dec
mov
bound
dec
inc
pop
mov
jecxz
adc
ljmp
xor
jbe
mov
out
push
jb
cli
dec
jo
sar
push
jg
aaa
aaa
adc
in
add
dec
push
dec
add
xor
add
outsl
adc
inc
sub
mov
or
pop
pop
inc
pop
push
or
push
daa
pop
test
divb
leave
testl
pop
or
sbb
cmp
inc
stos
nopl
mov
iret
jne
pop
daa
pop
daa
pop
push
sbb
or
incb
pop
es
pop
add
decl
pop
and
or
das
mov
inc
aaa
jno
sti
shlb
cmc
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
inc
sahf
adc
jge
push
je
mov
andb
fwait
shrl
fwait
in
inc
mov
bswap
and
sub
ljmp
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
mov
nop
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
mov
call
push
sbbl
int
pop
insl
ja
cmp
jge
mov
add
pop
cmp
push
cs
call
xor
dec
outsb
sub
jp
ss
inc
push
es
aas
jne
and
xor
incl
dec
jae
sub
sub
and
imul
dec
sub
aaa
push
jl
and
lcall
dec
push
imul
insb
inc
inc
push
jns,pt
daa
jnp
xor
lcall
pop
xor
rcll
xor
xor
xor
out
pop
inc
xor
and
aaa
inc
push
inc
jg
mov
inc
ss
cmovb
pop
dec
lods
scas
sub
es
test
sahf
and
sbb
popa
adc
jo
scas
outsl
test
mov
and
xor
sub
roll
addr16
cwtl
ds
cltd
jmp
inc
scas
bound
pop
sub
push
xchg
int
pop
dec
int
mov
rol
sbb
jbe
subl
jae
push
xlat
inc
xor
aaa
mov
add
adc
xorb
neg
leave
cmp
inc
sahf
sbb
cwtl
lods
sbb
lods
pop
sub
inc
add
nopl
or
aad
shlb
push
xor
xor
jp
push
jp
ja
cmpsl
nop
inc
mov
outsl
mov
dec
push
push
adc
push
dec
or
adc
sbb
sahf
push
mov
add
pop
bound
mov
loop
sub
adc
push
dec
mov
push
sbb
adc
icebp
add
sub
pop
cmp
lds
push
scas
testb
loop
pcmpgtw
pop
popa
jg
mov
rcll
jge
push
push
cmpb
and
mov
mov
sub
adc
adc
and
popa
jg
add
push
mov
mov
jle
cmp
pop
cmp
cmp
sbb
data16
add
inc
arpl
sbb
xor
or
add
sar
and
sub
lods
enter
xchg
push
adc
popf
or
xor
mov
test
pop
dec
pop
pop
xchg
dec
or
or
dec
les
pextrw
sbb
in
xor
js
xor
imul
pop
insl
gs
cmp
mov
cmp
mov
add
cmp
adc
out
push
inc
aad
mov
push
ljmp
xor
push
out
push
xchg
push
lret
xchg
dec
cli
inc
rclb
outsl
insb
push
push
popa
je
push
clc
xchg
push
popf
insl
out
cmp
mul
fstp
je
pop
add
adc
mov
cld
fstl
or
pop
push
gs
scas
and
push
lods
out
rorb
mov
or
push
mov
aaa
pop
les
sub
movsb
shlb
push
xor
adc
inc
sub
call
shufps
cmp
and
outsb
popa
add
push
out
fcmove
dec
out
cmp
fmull
data16
in
sbb
inc
int3
sbb
shrl
fs
mov
lcall
icebp
aaa
mov
and
sbb
lret
pop
jge
xchg
cmpsl
mov
push
mov
pop
int3
xlat
cmp
loopne
adc
or
adc
add
scas
dec
add
mov
popa
dec
or
add
add
ja
jb
pop
sti
pop
mov
jae
inc
jne
sbb
test
cmp
pusha
or
pop
dec
das
cwtl
mov
test
push
or
test
ds
jl
adc
push
test
movsl
adc
or
popf
sbb
or
jbe
xlat
call
xor
daa
cli
push
aas
mov
hlt
xchg
jo
pop
sbb
or
stos
loope
adc
cs
fsubs
push
dec
ss
lds
hlt
incb
sbb
bsr
icebp
fiaddl
cmp
cmp
cmp
aas
add
sub
scas
sub
lcall
add
pop
push
pop
repnz
dec
popa
mov
cmp
pop
adc
ds
push
ljmp
and
test
push
pop
pop
jnp
pop
and
inc
xor
out
xchg
call
sahf
out
or
mov
dec
sbb
xor
inc
pop
into
cmp
xor
test
inc
pop
movsb
cltd
add
iret
scas
pop
movsb
add
mov
xor
xchg
imul
or
push
out
test
add
ljmp
popa
xor
inc
je
gs
add
pop
pop
pop
jb
mov
lea
pop
aas
dec
sbb
es
pop
pop
lods
xorb
pop
pop
pop
push
lcall
sbb
insb
jnp
pop
dec
pop
movsl
lcall
rep
sub
cs
dec
push
stos
push
push
cmpsl
rcll
cmp
xor
pop
push
inc
cs
std
xor
cmpsb
pop
mov
pop
inc
mov
inc
add
push
pop
inc
dec
and
and
mov
aas
pushf
aas
add
sub
inc
dec
imul
sahf
rorb
inc
and
inc
add
or
xor
fistpl
dec
cmp
add
jne
jg
movsl
inc
fwait
adc
adcl
cs
mov
xchg
mov
sti
dec
in
enter
jae
push
popa
mov
bound
outsl
dec
outsl
enter
and
ror
andb
imul
dec
outsb
push
je
scas
cmp
inc
insb
fistps
push
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
dec
sahf
xor
jb
gs
mov
adcb
pop
daa
dec
enter
push
dec
jb
xor
loopne
inc
aas
dec
mov
nop
lcall
loop
inc
add
je
adc
clc
lods
daa
jb
add
addl
int
jno
nop
lret
push
adcl
aaa
inc
adc
jns
jb
sbb
sub
adcl
add
adcl
loop
jnp
pushf
enter
jae
mov
addr16
add
cmc
sbb
mov
push
fidivrs
out
je
adc
jl
out
cs
mov
das
push
mov
add
mov
clc
inc
mov
dec
or
mov
xchg
and
push
or
push
mov
push
lods
sub
cmp
xchg
add
adc
cmpb
sbb
dec
mov
dec
inc
cmp
adc
xchg
ljmp
xchg
cmpsl
jno
jns
adc
ret
sbb
pop
shlb
repz
sub
lods
jno
sub
pusha
cmc
sbb
push
inc
sub
xlat
sbb
sbb
lret
pop
stos
popa
sub
arpl
add
add
sub
inc
insb
dec
mov
jb
sub
fiaddl
loope
sbb
sub
cmp
addr16
shlb
outsl
jge
sbb
inc
dec
popa
mov
outsl
xlat
outsl
lret
mov
mov
imul
mov
mov
and
push
push
das
xor
xor
jmp
and
or
pop
inc
aaa
jbe
pop
sbb
mov
popa
mov
jbe
add
sbb
jl
jne
outsl
insl
pop
xor
dec
and
xor
push
stos
out
fildl
mov
dec
dec
dec
inc
mov
or
jae
outsb
or
mov
andb
rcrb
flds
imul
aaa
xchg
fsubrs
sub
push
mov
imul
movsl
mov
in
fmuls
add
pop
inc
mov
xadd
cmc
inc
jo
addr16
mov
inc
fbstp
inc
adc
cmpb
pop
js
aas
stc
jo
wbinvd
movsl
push
dec
add
bound
push
mov
xchg
leave
repz
jbe
lock
xor
add
lods
ds
iret
mov
mov
and
movsb
fmul
negl
push
clc
xchg
adc
mov
and
ror
popf
or
xor
stc
pusha
in
lods
add
daa
test
pop
jnp
mov
xor
inc
add
andl
test
inc
add
loopne
jg
dec
outsl
jb
mov
mov
inc
push
jb
push
inc
cmp
sub
and
add
adc
push
add
push
and
xorb
mov
xchg
ja
iret
repz
rolb
ss
iret
repz
dec
movsb
mov
dec
repz
cmp
int3
mov
pop
in
pop
push
inc
cmp
iret
repz
cmp
mov
inc
in
cmp
push
mov
mov
jl
test
cmp
or
dec
pushf
aaa
add
push
adc
adc
out
out
dec
xchg
inc
clc
dec
push
lahf
out
ficoml
add
fmuls
sahf
out
xor
pop
cmp
add
sub
add
popa
fdivs
mov
call
cmp
inc
mov
adc
mov
add
sub
and
jg
sbb
ja
add
or
xchg
dec
mov
repnz
dec
outsl
fmull
das
fs
lock
or
push
and
dec
xchg
filds
xor
dec
or
inc
js
leave
jae
mov
fistpll
dec
jnp
mov
outsl
cmp
ss
add
js
add
dec
adc
pop
fs
xchg
cmpl
cmp
lods
push
outsl
or
dec
xchg
add
xchg
mov
cmp
or
imul
in
pop
scas
or
pushl
out
jb
and
xor
jae
inc
cmp
cmp
ficoml
xor
cmp
sub
inc
scas
mov
int
sbb
aaa
sarb
or
subb
faddp
cmc
dec
cmp
dec
push
loopne
or
push
movsb
cmp
or
nop
xchg
or
cmpb
adc
mov
shlb
xor
sbb
ja
mov
or
xor
popa
imul
fildll
sbb
loopne
and
nop
or
nop
and
dec
or
jo
mov
or
shll
out
mov
js
aas
daa
add
callw
cmpsl
adc
push
sub
inc
xchg
aaa
int3
inc
or
mov
insb
fcompl
in
add
and
mov
sbb
inc
cmovle
inc
mov
jae
push
push
inc
push
pusha
inc
loopne
inc
xor
jnp
jg
push
test
mov
ficoml
inc
xchg
or
mov
cs
adc
or
in
shlb
cld
inc
or
or
sbb
or
cmp
inc
outsl
push
adc
outsl
jg
test
xchg
daa
int
mov
push
jl
push
faddl
cmp
lcall
inc
push
andb
push
xlat
scas
clc
mov
adc
adc
push
inc
or
sbbb
int
jns
dec
cwtl
inc
mov
aad
scas
add
xlat
or
loope
les
shrl
xchg
adc
fimull
pop
xor
mov
testl
and
add
jns
sub
cld
add
rcr
scas
call
dec
xchg
shrl
aaa
sub
pop
cmpsb
xchg
or
aaa
fs
xchg
or
bound
add
jb
jecxz
adc
add
xchg
xchg
lods
pop
jb
in
cld
jg
xchg
cmp
pop
add
mov
add
es
push
mov
pushf
lods
in
sahf
lods
mov
mov
in
dec
sub
rorb
incl
and
fdivs
das
outsl
add
ss
pop
adc
jno
fdivs
pop
addb
in
ret
push
xchg
inc
aaa
add
pusha
push
dec
negb
cmpsl
add
add
iret
adc
xlat
andb
add
rol
dec
out
movsb
mov
or
add
loope
push
sub
xchg
mov
sarl
push
fmull
dec
xor
dec
movsb
push
xor
ljmp
cld
inc
dec
rcrl
or
cmpsl
mov
or
adc
out
mov
jl
push
xor
mov
add
adc
xchg
pop
or
fisttps
or
dec
cs
mov
add
push
xor
add
ss
pusha
shrb
dec
lahf
js
ss
scas
add
mov
inc
mov
popa
out
popl
fiaddl
dec
lahf
sbb
pop
addr16
pop
or
test
cld
scas
in
outsb
daa
or
fdivrs
seto
pop
outsl
mov
push
adc
in
add
addr16
imul
add
mov
mov
mov
daa
sub
inc
dec
iret
jnp
in
cmp
sub
dec
mov
mov
orb
add
cmp
mov
ja
int3
outsl
movsb
adc
push
dec
outsb
hlt
dec
jo
sub
xlat
shlw
sahf
mov
add
dec
push
dec
push
push
mov
arpl
pop
mov
daa
adc
sbb
mov
mov
add
iret
sarl
fiaddl
dec
sbb
repz
sar
dec
inc
jns
out
pop
js
mov
out
sbb
aas
bound
stos
aaa
dec
push
andb
cmp
push
shll
inc
imul
lock
out
sahf
out
subl
int
push
jl
sub
sahf
push
mov
in
sbb
push
lcall
es
bound
out
jge
ret
jmp
push
int
jns
jbe
mov
jbe
out
cmp
fimull
pop
dec
xchg
push
pop
inc
jno
ds
repz
int
sbb
repz
out
clc
sub
push
jno
imul
pop
fsin
cmpsl
stc
cmp
xor
mov
sarl
in
imul
jl
pop
int3
cwtl
repz
leave
or
or
idivl
cmp
adc
push
xchg
jns
dec
repz
pop
push
lahf
out
cmp
out
repz
out
push
lahf
call
ds
mov
je
sarl
jmp
and
sarl
lea
out
xor
jae
jno
aad
jb
repz
jno
lock
lock
out
cmp
ljmp
jl
insl
jbe
lcall
fiadds
js
ds
jns
mov
jns
pop
jp
int
imul
rep
push
jl
jge,pn
jl
out
cwtl
add
jg
lahf
out
mov
adcb
cmpsl
stc
dec
addb
lcall
arpl
roll
test
int3
mov
cmpsl
loopne
xchg
sub
mov
mov
mov
iret
repz
cltd
mov
fucom
imul
insb
lahf
test
lea
mov
int
stc
aaa
xchg
mov
jo
dec
repz
dec
cwtl
andb
out
pushw
mov
movsl
fwait
call
or
jle
out
cmp
add
pop
xchg
int
lahf
dec
repz
cmp
lret
out
ds
sub
test
mulb
test
mov
push
adc
out
fldt
aad
data16
int
repz
xorl
popa
pop
test
dec
inc
xchg
pop
inc
rorb
into
cwtl
dec
aaa
mov
add
push
add
pop
mov
addr16
addr16
leave
repz
xchg
add
es
push
lret
push
addr16
pop
paddq
inc
jnp
pop
dec
out
inc
aas
lret
test
icebp
int3
pop
fidivrl
ds
jmp
and
hlt
jbe
sbb
mov
add
mov
sbb
mov
inc
fcmove
ja
dec
or
or
shlb
in
mov
enter
das
cmp
ss
push
adc
jns
pop
popa
jne
adc
lock
and
aas
int3
in
inc
repnz
push
cs
aas
mov
pop
inc
pop
jg
dec
les
pop
xor
push
fildll
cmp
mov
ss
mov
pop
orb
pop
cmpsl
fmuls
int
mov
xor
mov
mov
mov
adc
or
adc
pop
aas
test
sbb
jne
push
into
cs
hlt
push
mov
cmp
inc
mov
addr16
getsec
pop
mov
shlb
cmp
fists
xor
ljmp
pop
rolb
shl
push
dec
fdivp
ds
bswap
lahf
pop
push
je
dec
jb
push
test
cmpsl
xlat
pushf
push
in
loop
and
dec
jno
lods
hlt
outsb
enter
insl
dec
jbe
xchg
aas
sbb
inc
nop
mov
aas
int3
bound
pop
add
inc
cmp
xor
shlb
in
dec
pop
add
sbb
pop
pop
call
pop
nop
or
and
inc
add
jo
pop
push
pop
push
das
sub
or
mov
dec
repnz
pop
xor
push
pop
cltd
xchg
add
lds
mov
in
cmpsb
push
push
out
and
in
nop
stc
inc
adc
add
and
jg
inc
pop
jnp
mov
jnp
mov
pop
mov
iret
repz
add
xchg
xchg
mov
test
in
in
xchg
in
hlt
in
xor
dec
rcll
xor
cmp
imull
push
jb
fstpl
sbb
sub
nop
daa
xchg
dec
lock
pop
dec
dec
leave
mov
pop
enter
pop
scas
addr16
pop
lock
int3
pop
mov
ficoml
push
push
scas
and
adc
push
enter
pop
iret
or
enter
adc
inc
mov
cmp
daa
iret
add
mov
or
test
loopne
add
add
pushf
cmp
cld
pop
dec
repnz
sub
inc
cmp
inc
jo
pusha
pop
sbbb
cltd
or
enter
enter
dec
inc
iret
sbb
jb
dec
fmull
push
add
lcall
or
setl
jns
pop
push
xchg
dec
inc
or
pop
pushf
in
jo
add
mov
dec
jne
xchg
cmp
pop
add
fwait
insl
and
sarl
dec
push
aam
filds
in
add
and
sbb
dec
sbb
jb
cmp
dec
cmpsl
push
adcb
jb
pop
data16
jbe
xchg
pop
jb
aam
jb
jb
test
dec
pop
jb
sub
into
fisubrs
pmuludq
push
in
mov
sbb
mov
jl
mov
push
or
mov
movq
and
fcmovne
xchg
out
add
xchg
dec
mov
das
sbb
jl
inc
mov
xchg
xchg
xchg
bound
push
mov
pop
mov
mov
cmp
bound
pop
jb
cs
arpl
les
dec
push
aaa
push
addr16
push
cmp
arpl
and
xchg
pop
lods
arpl
mov
arpl
and
push
and
add
nop
out
ljmp
and
fs
enter
xchg
rsqrtps
push
dec
mov
push
das
push
dec
outsb
adc
lods
fs
xchg
fs
dec
pop
fmull
xchg
clc
fs
gs
xor
mov
dec
xchg
gs
mov
clc
push
add
push
sbb
mov
das
push
cmp
push
repz
mov
or
repz
or
jl
xchg
repz
xchg
setge
repz
repz
mov
mov
adc
adc
adc
cmp
cmc
pop
add
shl
jns
sbb
fildl
rclb
and
dec
mov
push
jo
es
xchg
pop
mov
addr16
mov
jbe
inc
pop
stos
int3
inc
ja
cmp
push
push
jbe
add
js
loopne
lea
inc
push
mull
daa
xchg
xchg
pushf
adc
aam
aaa
push
mov
push
inc
push
xchg
add
and
mov
aas
xor
ja
lahf
inc
push
push
inc
jg
es
xchg
js
scas
push
movsb
outsb
pop
pop
and
lahf
fisubl
int3
lock
add
cmp
ja
imul
inc
push
filds
outsl
mov
xchg
adc
sbb
xchg
scas
daa
xchg
dec
leave
mov
and
mov
and
loopne
xchg
xchg
adc
pop
push
push
sbb
fisubrs
and
das
xor
add
and
in
sar
push
mov
test
push
add
add
icebp
xchg
mov
imul
xchg
add
inc
dec
imul
out
and
imul
div
mov
iret
or
add
leave
leave
jae
mov
nop
shlb
xchg
es
out
pop
ss
xchg
adc
in
cmovbe
xor
cmp
dec
sahf
add
clc
cmp
ret
popf
inc
es
mov
cmp
sub
cwtl
and
jmp
xchg
pop
push
shrb
pop
pop
push
cld
cmc
xchg
pushf
dec
pop
sub
pop
push
leave
cltd
pop
and
pop
mov
pop
in
mov
cmpb
mov
adc
and
insl
insl
outsb
inc
xchg
mov
cmp
jnp
cmp
ss
ja
jb
pop
leave
fs
pop
aas
imul
addr16
xchg
addr16
iret
mov
leave
pop
push
loop
outsl
call
inc
and
xchg
sbb
outsl
outsl
setb
adc
cmp
das
dec
pop
push
pop
pop
pop
imul
add
leave
inc
repnz
mov
loopne
call
and
movl
cld
test
mov
xchg
jo
dec
push
test
cmp
sbb
adc
sbb
ss
xchg
pop
enter
pop
inc
xchg
jmp
pop
psubq
pop
pop
pop
pop
or
pop
sbb
pop
pop
pop
pop
pop
sub
pop
cmp
pop
pop
pop
pop
pop
dec
pop
push
pop
pop
pop
arpl
pop
pop
pop
imul
jnp
bswap
leave
leave
dec
femms
or
leave
or
or
leave
leave
leave
leave
pop
push
add
leave
add
add
pop
and
xchg
in
jbe
addr16
rcrl
dec
and
cmpsl
or
hlt
push
add
leave
mov
pop
sbb
lea
push
pop
pop
xchg
mov
ja
ja
jb
cmp
cltd
filds
in
mov
int3
pop
daa
aam
fcoml
in
in
push
push
hlt
mov
das
sahf
cld
or
testl
and
add
dec
xorps
mov
into
das
pop
pop
enter
outsb
fnstsw
jg
add
pushf
push
shld
xchg
lods
mov
or
aam
orb
mov
mov
out
in
les
cmovle
adc
stos
push
inc
mov
and
std
push
aas
push
cmp
pop
push
or
jne
pop
or
mov
push
or
sarb
jb
loope
pop
pusha
punpcklbw
pusha
pop
push
add
xchg
out
sahf
xor
sub
das
sahf
push
or
pop
pusha
or
jb
dec
test
mov
movsb
xchg
fists
shr
icebp
stc
pop
fldz
out
add
or
lahf
adc
in
stc
sahf
sbb
and
loopne
adc
fbstp
cmp
movl
mov
jne
cmp
mov
xchg
xchg
xchg
cmp
popa
popa
bound
bound
xchg
xchg
xchg
xchg
bound
bound
bound
mull
das
xchg
addr16
fnstcw
xchg
jl
add
add
xchg
js
ss
enter
arpl
jns
jns
fucomi
orl
cltd
xchg
sub
cmp
add
outsb
ud1
arpl
pop
and
push
fistpll
xchg
adc
xor
cmp
inc
fs
fs
fs
xchg
dec
jnp
xchg
nop
fs
in
jb
jb
enter
into
icebp
jbe
aas
call
clc
fs
in
pop
add
jp
pop
leave
jae
push
add
pop
jb
ljmp
addr16
xchg
into
leave
mov
pop
xchg
mov
cmp
add
lahf
fsts
data16
and
inc
dec
and
dec
addr16
mov
repnz
pop
jno
jecxz
mov
mov
push
imul
add
pop
mov
jnp
push
lahf
jmp
jbe
adc
iret
inc
into
cmc
in
in
pop
lock
data16
xchg
and
adc
addr16
dec
jne
addr16
or
jl
cmp
dec
lcall
arpl
addr16
and
jns
test
adcl
movsl
mov
push
sub
sahf
or
or
repnz
jmp
jmp
repnz
push
dec
repnz
jge
sahf
ja
jne
add
in
mov
push
add
ret
in
fsubrl
pop
out
psadbw
ss
stc
adc
imul
fiaddl
fisttps
into
lock
jnp
incl
out
pop
xchg
cs
add
cmp
imul
cld
ret
icebp
pop
push
pop
push
jg
xchg
pop
aad
inc
push
or
das
xchg
inc
jp
scas
dec
sbb
jg
xor
mov
mov
ja
push
add
ja
jg
into
dec
xor
push
imul
mov
cs
mov
and
das
imul
inc
das
dec
cmp
in
push
or
or
loope
repz
outsb
imul
sbbb
sahf
push
xchg
mov
pusha
xlat
or
adc
outsb
and
pop
ja
insb
xor
in
in
jns
push
pop
fists
pushf
ja
jae
mov
add
leave
fcom
mov
daa
xchg
addb
insl
dec
addr16
aaa
insl
inc
dec
cmc
ss
insl
pop
das
jno
xlat
jns
inc
repnz
mov
jl
dec
sahf
fcmovnb
push
add
pop
pop
pop
sub
insl
icebp
insl
stc
insl
add
enter
outsb
movups
outsb
cmp
popf
add
mov
outsb
cmp
mov
pcmpgtw
and
outsl
jne
jge
test
or
pusha
subl
cmp
outsb
xchg
ror
sbb
outsb
loopne
outsb
jns
jns
out
lock
clc
outsb
add
outsl
outsb
fnsave
adc
pop
ud2
pop
or
dec
dec
or
pop
push
dec
dec
dec
dec
add
out
dec
sbb
sbb
sbb
out
xor
sbb
out
dec
pop
push
daa
daa
dec
and
push
repz
js
cmpsb
subb
jns
sub
mov
pushf
cmp
add
fisttps
out
ss
dec
iret
or
mov
movsb
fistpl
lar
and
out
mov
xchg
add
fcmovne
repz
packsswb
cmp
pop
cmpsl
push
aam
pop
jo
jb
mov
out
mov
scas
rorb
xor
sahf
enter
or
sub
or
jo
mov
pop
nop
leave
repz
invd
adc
sbb
xchg
int
push
adc
xchg
sub
and
ja
pop
and
adc
in
xchg
jno
and
and
jno
leave
xrelease
or
sub
lock
clc
movl
sbb
pop
inc
out
push
jns
dec
mov
mov
daa
fmuls
xor
sbb
push
add
pop
jb
jb
outsl
daa
xor
sub
or
mov
add
daa
es
sbb
pop
iret
jb
jo
fdivrp
mov
pop
cmp
xchg
call
xchg
int3
mov
gs
and
dec
dec
fimull
jae
outsl
in
inc
je
xorb
repz
popf
pushf
pop
rcr
loopne
push
jo
cmp
cmpsl
push
xchg
mov
test
je
fisubrs
je
push
aas
push
mov
sub
cld
mov
push
mov
je
arpl
mov
je
sbb
and
mov
mov
mov
sarb
sahf
cmp
and
iret
add
or
pop
test
sbb
mov
scas
pusha
xor
ss
xlat
mov
inc
dec
push
jne
inc
fwait
mov
les
inc
pop
fs
jae
jns
je
push
or
setg
scas
das
pop
mov
xor
dec
dec
fucom
paddsw
pop
inc
mov
add
repz
pushf
adc
out
popf
cmp
xor
cmp
inc
push
dec
dec
adc
cmp
sahf
push
adc
jbe
adc
pusha
test
iret
mov
mov
jbe
psubsb
scas
jbe
shl
jns
paddw
scas
pop
cmp
sbb
lea
push
icebp
scas
stc
push
pop
add
push
shrl
lea
sub
inc
push
das
dec
push
pop
in
fisttpll
add
ja
popa
push
jae
lahf
ja
xorl
das
das
mov
ja
ja
and
scas
cmp
and
addr16
stc
push
inc
pop
mov
fistpll
aaa
dec
jmp
pop
xor
repnz
cmp
dec
inc
js
cmp
and
addr16
add
outsl
pop
leave
orb
das
pop
lcall
js
pushf
pop
mov
int
add
fucom
paddsw
mov
out
pmaddwd
std
push
or
fiadds
adc
inc
outsl
dec
nop
nop
and
pop
nop
ja
and
xor
lahf
mov
pushf
ljmp
pop
fs
pop
jns
jns
jbe
cmp
jne
jge
test
sahf
push
cmpsb
jns
nop
nop
jns
dec
and
add
loope
dec
icebp
push
jnp
es
add
nopl
xor
or
adc
jp
sahf
ja
pop
and
ds
iret
repz
add
dec
adc
jns
push
jp
cmp
je
lea
out
sahf
out
movsl
add
add
mov
hlt
fdivrs
pop
fs
das
jp
scas
push
xchg
fisubl
lcall
les
add
rolb
nop
inc
push
repnz
popf
dec
in
pop
lock
fistps
mov
insb
ja
pop
mov
addr16
xchg
fildl
jg
rcr
fstpt
mov
add
jnp
lret
movswl
jl
jl
xchg
pop
and
or
int
cmp
xchg
scas
add
xchg
sbb
sbb
nop
xchg
pusha
jl
push
jb
jl
jl
jl
jl
aad
or
stos
jl
mov
repz
mov
jl
jl
push
or
repz
loope
in
or
adc
jge
or
pushf
aas
sbb
jge
xchg
leave
out
test
push
add
nop
inc
into
lock
enter
and
jge
jge
jge
pop
je
call
clc
cmp
cmp
sbb
mov
pop
or
xchg
or
jl
add
xchg
and
das
sub
and
ss
jle
jle
insl
in
pop
jle
jle
pop
push
xchg
and
pop
jb
jp
cmpb
mov
pop
lcall
invd
xchg
jle
in
fisttpll
shlb
movsb
mov
adc
add
or
prefetcht0
sub
inc
push
leave
pop
inc
loopne
and
loopne
daa
xor
fdivrl
pop
pop
jmp
fmulp
repz
push
add
out
xchg
popf
iret
test
xor
push
cmpsb
js
andb
mov
inc
orb
or
subb
jns
insl
je
jg
push
mov
test
sarb
daa
mov
fimull
loop
ljmp
pop
push
pop
sbb
outsb
sbb
pop
clts
and
aad
sbbl
sahf
fcmovne
xchg
cmpl
adc
pop
adc
js
jns
push
jb
jb
data16
mov
pop
aaa
lods
pop
push
out
and
pop
mov
and
jb
daa
aaa
cmpsl
clc
add
cli
fnsave
adc
push
dec
sbb
enter
xorb
push
or
dec
aaa
jns
inc
pop
adc
jg
inc
subb
fsubrs
ja
jg
lahf
lcall
stos
mov
imul
ret
repnz
jne
lret
ds
pop
jnp
cmp
jns
inc
pop
mov
mov
or
cmpl
iret
or
and
gs
lahf
jbe
cmp
add
nopl
in
sahf
out
add
or
sbbl
mov
jbe
push
sub
xchg
adcl
outsb
pop
mov
mov
gs
shll
add
push
enter
push
ja
cmp
daa
dec
pop
dec
xchg
fsubrs
xchg
in
push
mov
fldt
leave
cmp
add
stc
mov
test
sub
test
mov
fnsetpm(287
test
out
push
add
jmp
cmp
addb
push
les
pop
lsl
sahf
xchg
ja
mov
loop
gs
mov
inc
cmpsb
xchg
int
clc
popf
test
xor
fisttps
das
xchg
xchg
dec
and
aas
pushf
pushf
je
xor
add
or
lret
lret
push
push
cmp
insl
mov
lret
push
xchg
pusha
aas
push
rorb
or
js
push
jns
out
adcb
sbb
sbb
dec
sahf
xlat
js
xchg
sahf
push
jns
shrd
mov
popf
out
push
daa
int3
scas
xchg
adc
push
je
sub
mov
fwait
pushf
xchg
add
ficomps
add
add
mov
or
repnz
push
or
or
sahf
out
enter
fsubrs
stos
lock
jecxz
scas
jmp
repz
adc
and
and
ja
and
sub
push
leave
test
mov
mov
test
mov
mov
mov
mov
in
xor
jo
jecxz
mov
inc
mov
faddl
pop
js
orb
mov
test
mov
repz
or
or
iret
dec
mov
fldcw
add
daa
jmp
pop
and
adc
insl
and
mov
lahf
pop
dec
pop
mov
mov
xchg
xchg
xchg
add
mov
and
xlat
mov
mov
enter
movsb
mov
inc
push
das
dec
push
add
cmp
mov
imul
or
pop
mov
iret
xchg
daa
push
dec
jns
daa
pop
ror
add
mov
clc
adc
aas
mov
es
xchg
xor
mov
inc
mov
jb
xchg
jo
mov
nop
push
mov
mov
rcr
mov
jae
mov
into
cmp
push
aaa
mov
out
ss
mov
pop
inc
or
dec
aaa
sahf
out
or
jne
fs
lock
das
orb
mov
in
in
mov
fisttpl
outsb
pop
mov
jmp
testb
fmull
incb
mov
dec
arpl
dec
dec
enter
xor
cmp
daa
pop
pusha
sbb
push
jns
sbb
setl
push
xchg
out
cmp
enter
out
repnz
out
dec
stc
stc
dec
jne
and
cwtl
cmpsb
and
push
add
cmpsl
daa
xchg
xchg
dec
pusha
and
in
mov
out
sahf
fldt
dec
cmp
out
std
nop
add
add
dec
xchg
mov
jns
jmp
xchg
das
xchg
mov
repnz
xchg
pop
xchg
bound
dec
inc
jle
lcall
cld
fnstsw
vpmullw
divb
mov
or
jns
out
or
or
in
jp
or
or
xchg
dec
das
pop
arpl
xchg
cmpsb
xchg
iret
adc
cltd
pop
mov
dec
pxor
es
repz
mov
in
mov
in
in
xchg
rclb
in
in
jmp
notb
in
in
push
xchg
push
xchg
push
xchg
es
das
das
aas
jecxz
xchg
fbstp
xchg
inc
xchg
dec
xchg
das
das
jg
outsl
push
xchg
bound
das
das
jne
jge
mov
pop
iret
repz
nop
and
iret
repz
and
iret
repz
iret
repz
fsubrl
out
repnz
cmpsl
fwait
cmp
cvttps2pi
xchg
lahf
xchg
pop
iret
or
dec
adc
or
loopnew
mov
push
xchg
fisttps
push
das
pusha
xchg
push
dec
mov
pop
mov
xchg
lods
xchg
mov
mov
fisttpll
add
pop
cmpsb
xchg
int
ficoms
inc
inc
inc
xchg
xchg
xchg
cmp
cmp
je
cmp
cmp
cmp
cmp
in
cmc
psllq
xchg
or
iret
adc
fucomi
mov
dec
aas
push
psllq
xchg
jno
das
lods
sbb
dec
outsb
daa
iret
sbb
fcomps
and
and
xchg
mov
mov
aas
push
push
daa
jb
dec
ds
xchg
cmova
dec
cmp
iret
jae
sub
xchg
cs
iret
jae
fwait
mov
jbe
cmp
out
maskmovq
negl
xor
incl
cwtl
push
aaa
lsl
pop
push
cmp
push
enter
cwtl
pop
cmp
mov
add
mov
xchg
js
xchg
scas
jg
xchg
out
push
add
fsubrs
mov
icebp
psubw
cltd
repnz
out
add
xor
dec
dec
scas
push
pusha
mov
in
out
je
pushf
pushf
pop
mov
shll
add
mov
add
and
iret
repz
aaa
add
dec
outsb
pop
pop
arpl
outsb
leave
repz
ud2
jns
test
xchg
fisttpl
mov
xchg
out
mov
xchg
out
jns
ljmp
pusha
iret
or
or
frstpm(287
add
pop
sub
xchg
out
jns
inc
pop
dec
loopne
jns
pop
and
add
into
jns
test
and
cld
push
jg
lock
cmp
push
repnz
push
mov
pushf
and
pushf
mov
push
add
inc
cs
iret
jae
dec
dec
push
push
pop
jp
ja
pop
pusha
push
or
leave
repz
cmpb
mov
seto
dec
sahf
ja
cwtl
mov
jns
leave
repz
adc
lar
ficoms
pushf
out
enter
shrb
pop
add
inc
sbb
imul
jns
enter
repz
add
add
in
push
mov
mov
adc
add
xchg
xor
mov
repz
shlb
outsb
mov
leave
pop
data16
pcmpeqd
jl
mov
mov
in
mov
mov
pop
and
in
in
xchg
pop
cmp
hlt
cld
xchg
fcompl
sahf
daa
comiss
add
xor
inc
dec
sahf
dec
mov
notrack
mov
jp
mov
ja
mov
in
mov
and
in
lds
cmp
clc
add
inc
dec
and
lahf
sub
xor
pushl
mov
outsl
pop
pcmpgtd
add
pushf
cmp
jbe
jle
push
leave
jae
leave
mov
dec
outsb
pop
mov
repnz
fabs
cmpsl
push
cld
cmp
inc
add
or
adc
adc
xor
sbb
xchg
xchg
jns
outsb
daa
inc
xchg
dec
push
add
xchg
out
pop
add
jns
mov
xchg
lcall
stos
add
dec
mov
mov
outsb
daa
mov
in
in
cmc
paddw
add
out
jns
pop
sbb
lahf
or
xor
mov
fldl
pop
mov
leave
jae
je
mov
outsb
daa
pop
fwait
mov
jl
mov
aas
push
sbb
out
divb
das
xchg
out
insb
sbb
jmp
mov
pushf
fildl
pop
pop
pop
cmpsb
js
cmp
fs
mov
cwtl
fmul
jl
mov
mov
out
mov
loopne
enter
jle
mov
js
and
lret
sub
out
daa
daa
jnp
push
add
add
repnz
out
mov
mov
repnz
hlt
mov
jmp
movsb
out
and
sub
xchg
xchg
xchg
xchg
movsb
push
movsb
bound
xchg
xchg
movsb
andl
xchg
xchg
xchg
movsb
scas
movsb
mov
jbe
rorb
sbb
in
in
sbb
pop
push
sahf
out
in
adc
shrb
sahf
out
fldt
xchg
iret
cmp
push
xor
movsl
ret
or
jns
xchg
outsb
aas
fsub
movlps
cmp
cmp
in
sub
cmp
cmp
repz
ds
cmp
repz
inc
push
jne
cmp
repz
addb
ficomps
inc
mov
iret
cmp
out
push
dec
stc
add
leave
repz
push
dec
wrmsr
dec
cs
in
in
dec
and
cmp
repz
push
push
push
pop
xchg
fcmovne
repz
addr16
jge
sahf
xchg
xchg
mov
daa
dec
aaa
subps
daa
aad
fucomip
cmpsb
ja
ljmp
enter
cmpsl
cmpsl
push
add
out
add
cmp
in
add
jo
xor
pushf
js
cmpsl
cmp
mov
lock
jg
cmpsl
add
or
sbb
cmpsl
jg
cmpsl
mov
iret
shlb
push
cmpsl
repz
repz
sbb
sbb
loopne
sbb
and
jg
test
test
mov
and
test
iret
jae
mov
sahf
ja
cmp
mov
dec
call
pop
cmp
xchg
cmp
push
in
mov
jno
daa
cld
out
loopne
and
sbb
test
test
test
repnz
mov
add
adc
jb
sbb
and
jno
sahf
or
xor
in
or
dec
test
cmp
xchg
aas
fisttps
cwtl
test
mov
and
loope
test
lods
cmp
jmp
repz
call
decl
stos
pop
mov
push
leave
repz
add
push
pop
inc
add
in
in
push
mov
pshufw
jnp
xchg
cmp
mov
enter
cmp
ficoms
jmp
pmuludq
adc
repz
adc
sbb
sbb
repz
sbb
dec
xchg
out
fwait
nopl
push
iret
cmp
bound
insl
js
and
mov
cltd
movsb
outsl
scas
mov
mov
jg
push
leave
sub
lods
sahf
out
cmp
push
add
add
cmp
in
add
push
add
sahf
pop
lods
inc
iret
in
in
xchg
orb
mov
push
movsb
fwait
cmp
fiadds
out
add
or
scas
imulb
lods
push
lods
adc
push
jns
out
adc
adc
adc
jns
out
adc
adc
sahf
push
inc
dec
pop
push
pop
fwait
cmp
repz
mov
mov
pop
jl
sahf
out
mov
and
push
and
movsb
push
lods
out
repnz
fidivs
iret
repz
iret
sub
jge
sbb
add
in
outsb
movb
xor
mov
or
add
mov
das
nop
ret
jns
enter
scas
pop
inc
push
add
push
gs
dec
mov
das
xchg
dec
scas
in
sahf
aaa
scas
or
out
mov
push
mov
rolb
call
push
les
rorb
repz
push
add
add
add
leave
repz
add
iret
repz
or
js
mov
sbbl
cmp
xchg
setle
scas
pushl
scas
mov
inc
mov
scas
mov
outsl
sbb
lds
mov
mov
daa
iret
repz
arpl
into
insl
xorb
mov
mov
cmp
out
xlat
dec
mov
dec
loop
in
pop
push
xchg
jae
jge
lsl
pushf
loope
sbb
mov
sahf
xchg
outsb
mov
or
push
push
dec
dec
dec
pop
data16
pop
sahf
ja
mov
push
sbb
stos
aas
mov
rcrl
push
xlat
in
ds
repz
and
and
mov
neg
inc
adc
pop
and
sahf
out
xor
cmp
xchg
out
pop
fs
outsl
mov
ds
sbb
mov
jo,pn
and
pushf
mov
mov
mov
shlb
push
cmp
pop
lock
or
outsb
xor
push
pop
or
adc
sbb
repz
pushf
and
wrmsr
adc
adc
outsb
and
out
dec
mov
mov
das
pusha
daa
iret
mov
push
es
repz
js
cmpb
jmp
push
and
and
iret
leave
repz
enter
sahf
out
fsubrs
sub
sub
mov
push
sub
or
adc
sub
and
add
in
dec
sub
xor
lss
scas
ss
enter
xchg
gs
or
push
add
cmp
sbbl
sub
push
adc
sbb
jne
jmp
aas
inc
push
sub
sarb
inc
sbb
scas
pop
inc
add
dec
aaa
jbe
inc
dec
aaa
daa
inc
pop
adc
icebp
dec
leave
cmp
adc
push
inc
cmp
repz
repz
sub
sbb
imul
enter
out
sahf
in
aam
repz
out
int3
enter
mov
mov
mov
out
sahf
mov
jns
out
push
dec
inc
sub
inc
sbb
icebp
or
lock
or
fistps
mov
mov
xchg
outsl
push
add
setle
jns
add
add
xchg
out
pop
or
or
mov
or
xchg
ja
scas
adc
adc
adc
and
cmp
inc
push
addr16
in
jbe
das
push
xorps
jns
outsb
das
insl
push
and
fildl
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
pop
sbb
add
nop
adc
and
and
and
std
mov
stos
mov
shrb
test
adc
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
test
shll
mov
mov
add
mov
in
call
nop
pop
jle
adc
push
ficompl
fnstcw
mov
fidivl
rcr
fsubp
stc
jb
jle
scas
inc
sbb
mov
push
mov
sub
or
pop
add
inc
popf
neg
cld
inc
xor
out
pop
popa
pop
dec
fiaddl
pop
jle
push
pusha
imul
xlat
incl
xchg
pusha
stos
popa
mov
pop
das
mov
cwtl
or
cmp
mov
lock
les
or
or
adc
into
adc
jns
out
adc
jns
sbb
hlt
int
mov
sbb
repz
mov
lret
lret
inc
or
js
lret
sahf
jnp
jns
jp
push
cld
dec
out
mov
into
sar
les
push
loop
xlat
sub
call
test
in
test
pop
mov
js
nop
test
stos
outsl
and
push
inc
dec
xchg
xchg
cwtl
pop
push
adc
loope
jo
icebp
addr16
mov
push
pop
inc
jg
lcall
xchg
sbb
outsb
cmp
pop
pop
sub
push
mov
pop
xor
fisubrs
mov
notb
cmp
inc
pop
jg
in
dec
lods
out
and
inc
lods
stos
ja
sub
add
xorb
inc
add
adc
xchg
adc
sbb
xor
repz
mov
jl
add
add
and
clc
loop
mov
or
mov
ds
shl
cmp
push
and
push
or
add
sahf
idivl
loopne
push
hlt
sahf
out
iret
sbb
adc
rcrb
enter
jns
rclb
and
jns
out
and
jns
and
test
out
jg
cmp
movups
movsb
aad
daa
xor
xchg
xorb
dec
mov
incl
xor
sbb
jg
sahf
xlat
popa
pop
cmp
pop
js
sarl
mov
repz
xor
mov
dec
insl
add
sbb
cmpsb
xchg
pop
ja
mov
jns
xor
das
push
dec
insb
pop
mov
das
mov
mov
pop
enter
inc
enter
pushf
or
ret
mov
adc
repnz
adcb
sbb
leave
sbb
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
in
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
pushl
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
decl
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
push
pop
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
call
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
jmp
loop
and
add
out
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
lcall
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
pushl
enter
cmp
popa
mov
popa
push
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
jmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
jmp
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
dec
cld
enter
fmuls
mov
push
pop
inc
enter
cmp
pop
inc
push
dec
jnp
mov
dec
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
jmp
aad
mov
rclb
mov
sub
mov
sbb
repnz
repz
test
ficompl
jmp
mov
hlt
movl
inc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
insb
fdivs
jne
pop
ljmp
iret
or
shrl
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
pushl
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
mov
xchg
sbb
push
sub
insb
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
push
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pushl
cld
sti
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
lcall
ret
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
mov
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
lcall
or
add
mov
das
es
lds
or
add
mov
cmpsl
call
ret
shlb
jg
sub
scas
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
jmp
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
decl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
incl
imul
push
js
or
push
addl
mov
stos
pusha
std
cmp
cmpsl
notl
pusha
rorb
imul
push
call
scas
fcompl
fldenv
filds
aaa
insb
sbb
ja
mov
fidivrs
mov
jmp
out
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sbb
out
add
lcall
pop
sbb
leave
xor
pop
push
les
iret
repz
push
xlat
fcomp
cmp
repz
fcmovnu
fstp
iret
and
in
call
jmp
repz
repz
cmc
div
repz
clc
stc
cli
sti
cld
add
jmp
or
inc
cmpsl
popf
add
lahf
iret
add
cmp
les
dec
bound
jbe
inc
popl
mov
inc
insl
negb
push
popa
je
push
pop
test
out
and
mov
push
ret
inc
dec
sub
fisttpl
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
jg
or
xor
bound
jnp
push
dec
popa
push
inc
jbe
pop
sub
add
insb
imul
push
insb
gs
push
dec
inc
test
add
push
inc
test
jb
pop
rclb
push
je
mov
xor
in
hlt
gs
je
scas
ss
xor
gs
adc
cmp
mov
gs
push
cmp
push
adc
or
shlb
pop
subl
jns
call
dec
insb
nop
pusha
add
pop
popa
xchg
cmp
cmp
insb
aaa
aas
inc
push
adc
mov
sub
or
cltd
and
jae
and
fidivl
inc
aas
adc
sub
nop
pop
inc
inc
es
add
ficomps
xor
push
je
mov
inc
add
ds
lcall
inc
inc
stos
cmp
iret
int
sbb
call
xor
inc
subb
loop
xor
inc
outsb
fistl
push
popa
mov
dec
jge
iretw
mov
xor
or
mov
xor
addr16
clc
inc
imul
xchg
into
pop
jo
pop
sti
push
in
jl
cmp
push
mov
jg
aaa
and
dec
push
push
add
sub
add
outsl
pop
insl
sbb
mov
aam
sbb
rcll
dec
mov
push
add
lret
lahf
mov
out
jb
and
inc
and
xor
jo
lahf
or
xchg
outsl
outsl
test
mov
pop
in
add
push
jno
cmp
push
mov
stos
lds
and
nop
test
pop
cmp
pop
sub
mov
or
cmp
mov
jo
push
test
push
outsl
insb
jns
adc
jb
push
add
je
inc
fcmovnu
push
inc
outsl
arpl
insb
lahf
mov
inc
push
bound
dec
mov
lods
ja
inc
jbe
add
jg
les
ja
dec
xor
dec
movl
pushl
add
fs
xchg
jg
inc
sbb
jle
je
and
aaa
rclb
xchg
arpl
or
mov
inc
push
sbb
sbb
aas
push
rclb
inc
std
mov
pop
bound
outsb
arpl
mov
aad
imul
sub
aaa
pop
sub
inc
xchg
pop
adc
inc
fistpl
xlat
sub
inc
and
orb
add
adc
and
pop
daa
adc
ljmp
mov
sbb
add
pushf
sti
repz
adc
decl
fstpl
lahf
les
loop
popa
pop
and
pop
or
jecxz
cmp
jl
ljmp
in
dec
jge
xrelease
es
jns
cmp
in
cwtl
xor
fwait
sub
sub
jmp
orb
into
pop
insb
sbb
push
fsubs
jmp
mov
jmp
sub
nop
ret
adc
imulb
lods
sbb
pcmpeqd
mov
lcall
and
fwait
add
jl
xor
push
cs
xor
xchg
out
xorb
pop
nop
xor
dec
fadds
sub
lcall
lds
std
das
push
add
jb
shlb
movsb
movsb
jl
cmp
outsl
sahf
int
loope
mov
pushl
in
jnp
xchg
psraw
xorb
xor
js
outsb
das
call
ljmp
sar
aad
xor
mov
fidivrs
cmp
mov
or
movsb
dec
mov
dec
cmc
mov
aas
lret
ficompl
pushf
insl
gs
pop
push
push
and
lea
ljmp
loopne
cmp
es
and
xlat
dec
rcll
pop
cmp
push
push
sti
xorl
pop
dec
scas
out
mov
out
lret
cmp
test
into
xchg
inc
add
jl
mov
add
cmp
fwait
outsb
mov
jb
push
outsl
add
popl
inc
or
pop
out
idivb
mov
int
outsb
lcall
clc
add
add
mov
and
sbb
dec
jbe
and
add
ljmp
cld
je
mov
push
adc
cmpsb
cli
sbb
xchg
in
arpl
xchg
fsubs
pop
lret
inc
pop
mov
jmp
xor
dec
cmp
mov
stc
fdiv
fsts
jnp
repnz
stc
add
lcall
pop
push
lret
cmp
jp
ror
sbb
aas
xchg
fwait
incl
xor
xchg
test
test
fiaddl
mov
mov
fbstp
je
scas
xchg
pop
sahf
movsl
hlt
push
inc
arpl
add
frstor
push
cld
wrmsr
fs
cmp
fistpll
pop
shlb
ljmp
pop
shlb
ja
jnp
test
mov
pushl
push
xor
xchg
or
xor
fmul
cmp
loop
sbb
imul
jmp
mov
or
out
or
std
test
and
add
jg
call
cs
jg
mov
sub
dec
jbe
sbbb
scas
inc
lret
push
cld
push
fildll
pop
rcl
ss
adc
mov
lcall
mov
outsl
mov
jbe
pop
inc
inc
cmpsb
call
mov
lret
pop
xor
call
mov
adc
mov
cli
ja
mov
push
pop
negl
lods
or
fcomip
jmp
add
fcompl
addb
inc
in
ss
dec
cmp
jg
jmp
imul
and
dec
mov
ror
call
pop
insb
push
jbe
adc
lods
jns
loope
movsl
mov
andb
sbb
sub
dec
loop
inc
sbb
push
hlt
lods
pop
mov
test
xchg
adc
mov
sbb
mov
dec
sbb
and
mov
xor
pop
pusha
mov
cmp
xor
loope
pushl
mov
cmp
push
sub
les
test
ss
cld
mov
sbb
inc
mov
pusha
idiv
ds
mov
push
xchg
add
and
sub
outsb
es
sarb
sbb
pushl
jecxz
fisttpl
in
mov
jecxz
fidivs
cmovge
dec
fldenv
inc
mov
iret
xor
or
jmp
std
js
repnz
jle
push
ss
test
movl
and
filds
outsl
aas
or
std
cmp
mov
cmp
cmpsl
pop
push
xchg
movsl
mov
lret
push
repnz
cmc
push
push
insl
mov
psrlq
imul
sub
xchg
call
pop
inc
rol
mov
int3
mov
mov
xchg
notb
adc
lock
mov
push
xlat
insb
daa
xor
fisttpl
lock
int
leave
jb
jns
jno
mov
clc
sub
movsl
jns
inc
ss
and
dec
inc
lcall
adc
jp
jle
xchg
jmp
adc
cmp
mov
dec
int3
in
sbb
cmpsl
out
call
jg
mov
xchg
pop
cmp
stos
pop
cmp
jns
push
pop
push
pop
popa
dec
inc
rcl
pusha
mov
ljmp
and
push
mov
or
lods
out
mov
xor
mov
push
mov
out
mov
sub
sbb
fs
fisubl
imul
out
mov
push
inc
mov
loopne
mov
cs
es
push
pop
icebp
jge
jl
xchg
andnps
ficoml
jecxz
dec
push
ffree
testb
scas
or
pop
mov
mov
jg
dec
pop
cmpsl
xlat
mov
nop
push
mov
loopne
or
sbb
movsb
leave
mov
ljmp
stos
pusha
js
fbld
and
loope
push
rorl
testb
mov
stos
ljmp
ljmp
mov
das
stos
sub
add
daa
sahf
rolb
int3
and
aam
jle
cld
pop
pushl
sub
xchg
cmp
mov
ljmp
lock
mov
mov
lret
ret
movsl
push
jns
shlb
mov
lcall
cmpsb
and
adc
mov
push
or
jecxz
lcall
call
insl
cwtl
test
cltd
hlt
add
cmp
aaa
psubsw
jge
dec
or
inc
xchg
sub
sahf
dec
in
push
add
out
movsl
xchg
push
icebp
jbe
insb
jns
pushf
into
push
add
push
test
fcomip
incl
fdivrl
dec
push
push
stos
sub
or
cltd
sub
incl
jp
xchg
add
pop
jmp
std
dec
push
inc
jle
jo
xchg
cmpsl
das
icebp
push
lcall
incb
pop
dec
sub
adc
and
std
and
fbld
sbb
mov
incb
popl
mov
dec
mov
sub
sbb
ljmp
iret
dec
add
and
push
outsl
mov
sbb
ljmp
mov
sbb
stos
ud0
pushl
lahf
mov
out
push
inc
leave
outsl
cmp
lret
add
frstor
mov
mov
ljmp
adc
fwait
push
mull
pop
rolb
dec
std
dec
not
sbb
sub
scas
jle
jg
mov
movsb
js
or
ficompl
out
lahf
adc
jmp
jno
xchg
dec
xchg
aam
mov
mov
stos
lds
lds
push
das
xchg
cld
jmp
pop
incl
imull
lret
sbb
dec
aad
cmp
mov
cmp
xchg
jl
ljmp
into
or
push
push
ret
adc
in
sbb
dec
dec
xor
loopne
push
mov
inc
pushf
jno
iret
sub
mov
and
xchg
inc
enter
mov
pop
sbb
enter
cmp
dec
xchg
push
loop
fadd
jbe
lock
in
add
lcall
jle
in
sub
adc
xor
lcall
xchg
pop
mov
sbb
pop
sahf
xor
mov
in
lret
adc
lcall
incb
add
mov
cld
repz
hlt
ljmp
push
push
lret
test
xor
out
mov
loop
lods
scas
adc
xchg
rclb
lcall
insl
stos
hlt
std
lds
cmp
aad
in
rolb
mov
mov
lcall
xorl
call
iret
mov
ljmp
test
and
push
decb
adc
push
and
mov
aas
insb
lea
push
inc
mov
sbb
jnp
mov
lcall
and
into
psrlw
dec
push
add
stos
in
addb
leave
add
jg
daa
push
xchg
pop
in
and
lods
push
orb
clc
inc
pop
shlb
mov
das
es
xor
aaa
jle
insb
sub
ret
out
add
or
push
in
or
adc
orl
lock
shlb
int3
mov
sub
icebp
and
scas
mov
dec
je
in
push
mov
hlt
movsl
outsl
jg
bound
pop
call
outsb
dec
jb
loop
mov
decl
scas
dec
in
stos
mov
xor
pop
pop
jno
fsts
jp
xor
decl
arpl
fmul
inc
cmp
ljmp
fdiv
and
lcall
movsl
jmp
test
and
xchg
pop
mov
xor
gs
inc
and
fcompl
outsl
popa
sbb
pushf
inc
daa
add
daa
inc
ja
cmpl
jne
mov
movsb
aaa
std
ljmp
jg
xor
lahf
mov
imul
mov
xchg
cmp
call
inc
sbb
fidivrs
inc
repnz
sub
mov
in
popa
cmp
mov
pushl
add
roll
leave
adc
adc
lods
lahf
push
inc
arpl
scas
xchg
test
inc
arpl
fisubs
xlat
test
incb
cmc
inc
adc
adc
lds
addb
or
push
lcall
lcall
xchg
dec
das
and
leave
mov
add
icebp
mov
push
dec
imul
jg
mov
cmc
push
adc
das
scas
insb
jg
or
pop
cld
cmpb
pusha
push
outsl
pushl
out
xor
arpl
enter
jg
fistl
and
ss
pop
jnp
mov
jo
ja
je
jmp
addr16
movsl
pop
cmp
dec
and
lcall
cmpsb
out
hlt
das
addr16
add
in
dec
mov
clc
push
inc
mov
inc
mov
inc
femms
fsubrl
add
sahf
push
enter
jmp
or
es
mov
bound
xor
in
daa
pop
xor
add
adc
lcall
dec
lcall
mov
xchg
clc
mov
adc
out
inc
incl
int3
mov
and
inc
outsl
out
fmul
inc
je
mov
mov
into
lds
push
sbb
test
ss
rol
ljmp
test
adc
pop
sbb
bound
stc
pop
addr16
or
mov
ret
sahf
ss
popa
mov
fcoms
cli
hlt
syscall
pop
cmp
mov
pop
sahf
arpl
jp
out
xchg
imul
cltd
xadd
decl
bound
scas
shl
out
loope
cli
add
jp
arpl
ljmp
hlt
outsb
jg
or
aam
das
jle
cmp
bound
cmp
xchg
add
cwtl
mov
popf
pop
add
sarl
lcall
cmp
nop
push
loopne
fwait
xchg
mov
jno
jbe
sbb
adcb
mov
adc
jno
mov
enter
xchg
mov
jns
call
xchg
icebp
jns
out
sbb
data16
movsb
clc
clc
movsl
rorb
inc
mov
push
fdiv
mov
mov
sbb
dec
push
aas
test
mov
or
sbb
decl
add
mov
dec
movsb
push
clc
fbld
dec
inc
jmp
movsb
test
ret
div
dec
adc
xchg
dec
jne
loope
lods
and
loop
or
dec
leave
out
popa
enter
testl
dec
inc
mov
sub
arpl
mov
pushl
sbb
dec
aas
mov
push
ret
repz
dec
cmp
popf
repz
cmp
jbe
or
jmp
mov
clc
out
mov
push
in
shll
xor
popa
push
inc
mov
dec
in
mov
pop
loopne
xchg
or
cmc
cmc
das
fisubrs
fcoms
call
mulb
xchg
repz
mov
in
fstl
mov
jnp
xchg
loope
mov
int3
dec
xchg
movsl
push
fdivrs
stos
mov
in
xor
test
pop
pop
xor
dec
or
fadds
call
pop
xchg
jbe
ja
mov
popf
dec
clc
adc
pop
xchg
insl
mov
jg
out
and
gs
cmc
mov
gs
lock
cli
add
xchg
cmc
incl
or
xor
inc
shll
lock
or
data16
sahf
cli
and
mov
push
iret
leave
inc
ss
clc
test
movsb
hlt
js
popf
mov
ljmp
lods
sarb
addr16
test
notl
mov
jmp
ja
out
das
mov
outsl
roll
jmp
xlat
adc
pop
decl
sbb
mov
das
cmpsl
lcall
test
jmp
mov
add
sub
aaa
in
dec
push
in
inc
std
fsubrl
sarl
mov
scas
mov
sub
lock
pop
mov
or
mov
or
push
lahf
rcll
call
std
xchg
es
xor
lea
mov
jnp
push
xor
add
call
std
mov
or
and
test
fistps
aas
out
in
mov
push
sbb
ficoml
in
mov
cmc
xchg
mov
imull
xchg
push
outsl
outsb
pop
jmp
xchg
bound
adc
inc
and
mov
fs
aas
shrl
jmp
idiv
xchg
hlt
pop
fisubrs
inc
and
data16
mov
xor
inc
push
stc
sbb
mov
inc
loopne
mov
sub
lret
fs
nop
fcoml
pop
pop
sbb
decl
addr16
mov
daa
rcll
iret
xor
push
or
mov
fistpll
xor
mov
call
jae
pop
inc
xor
mov
data16
push
fnstenv
jo
les
aam
in
xchg
mov
jg
mov
push
leave
rcl
bound
popa
in
fsubrs
sub
xchg
lahf
push
jp
mov
sub
xor
jp
push
dec
insb
out
leave
cmp
adc
cmp
lcall
dec
mov
in
popf
pusha
sbb
xor
lret
add
pop
or
push
add
lcall
xchg
dec
jge
push
shl
mov
test
popa
cwtl
mov
mov
daa
push
sar
jmp
inc
jne
test
int
mov
xchg
int3
icebp
stos
aam
aam
inc
xchg
das
lcall
decl
repz
push
push
push
jl
mov
add
or
inc
mov
sar
decl
adc
jge
repz
mov
and
adc
adc
jg
pop
cmp
iret
scas
ret
aas
add
adcb
mov
mov
loop
jg
jo
sbb
fldt
arpl
call
lcall
inc
cltd
jae
sub
in
mov
test
sbb
push
and
pushl
std
into
enter
xchg
push
mov
imull
leave
xlat
xlat
add
lcall
mov
andl
push
or
es
sbb
cmp
jl
adc
mov
xor
movsb
xor
mov
dec
pop
add
pop
cmp
dec
xchg
test
sub
ja
mov
std
xor
popa
mov
cmc
incl
pop
push
insb
push
fnsave
js
xchg
dec
stos
mov
daa
dec
mov
dec
mov
xchg
out
xchg
push
jmp
mov
xchg
push
pop
clc
pop
pop
std
decl
xchg
add
jne
mov
push
or
adc
decl
popf
in
mov
inc
fcmove
pusha
ret
cltd
cwtl
hlt
lea
mov
pop
cltd
jbe
mov
lea
xorl
cmc
adc
xor
jmp
popf
adc
push
aam
inc
aam
stos
in
ljmp
inc
push
mov
mov
aaa
jae
out
sbb
add
xchg
sub
xor
aad
push
pop
mov
dec
or
adc
xchg
or
lret
fldln2
mov
movsb
mov
jg
hlt
inc
sub
sbb
js
dec
xchg
nop
mov
sub
add
jp
das
clc
incl
jbe
mov
loop
movsl
pop
add
pop
lods
lahf
cmp
mov
pop
mov
xor
jmp
pop
sarb
ficomps
xchg
pushf
xchg
sub
jo
test
jmp
sub
movsl
mov
fcomip
test
mov
sbb
jmp
dec
adc
mulb
push
or
aam
lds
xor
jp
inc
jmp
and
cmp
fdivs
fisttpll
loopne
in
in
rcr
cmp
xor
in
in
xchg
in
clc
jp
inc
lcall
and
jne
push
cmc
xlat
test
sbbb
mov
mov
add
dec
push
ss
insb
cld
ljmp
dec
sbb
pop
mov
sub
push
ljmp
push
xor
movsb
and
pushl
mov
jg
mov
cmpsl
dec
bnd
add
xlat
push
push
mov
dec
xor
dec
ds
int3
inc
enter
daa
fidivs
cmc
fsubs
jg
push
xchg
adc
repz
out
bound
call
pop
lcall
incl
inc
mov
sub
mov
mov
subb
jge
daa
loopne
or
mov
std
and
cmp
or
in
je
repnz
icebp
dec
sub
arpl
iret
gs
mov
cld
call
cmp
or
mov
adc
pop
pmulhw
test
dec
repnz
ljmp
push
enter
cld
test
jl
insb
pop
sbb
push
and
mov
loope
jp
lods
mov
rcrb
mov
outsl
add
add
or
and
xchg
jge
fiaddl
jne
jno
or
ljmp
push
popa
inc
dec
test
scas
xchg
stc
sahf
cwtl
ljmp
loop
iret
xchg
hlt
pop
or
imul
into
jl
xchg
mov
pop
and
cmpsl
mov
addr16
cli
and
add
mov
mov
jno
stos
inc
loope
push
sti
pop
int
mov
push
stos
cli
mov
mov
jg
js
pop
xor
sbb
mov
fucomp
mov
mov
xor
push
int
mov
shll
out
xor
loope
fisttpll
icebp
mov
jbe
mov
jg
or
pop
cltd
mov
inc
pop
mov
cmp
and
out
imul
addr16
test
inc
cli
pushl
fsubp
mov
and
pushf
mov
and
popf
fimuls
shlb
mov
mov
and
jge
xchg
in
clc
add
adc
sbb
xchg
lds
sbb
cmp
adc
std
ljmp
dec
movsl
cmp
das
test
lods
xchg
lods
rcrb
addb
push
xchg
decl
cli
pop
pop
or
push
sub
add
out
rolb
btcl
negb
sub
outsl
cli
decl
and
push
xlat
inc
xchg
and
shl
out
es
incl
aas
sbb
push
pop
jge
or
mov
dec
xchg
sbb
sub
ljmp
xchg
inc
jb
cmp
ljmp
push
pop
push
adc
iret
dec
mov
incl
rcrb
mov
cmpsb
jle
push
gs
cli
adc
imul
mov
mov
sub
pop
dec
adc
inc
push
cwtl
nop
leave
jnp
mov
sbb
movsl
adc
arpl
std
xor
jmp
aam
sbbb
push
sbb
sbb
sbb
incl
and
lock
aas
xchg
jno
pop
sbbb
decl
shrl
in
pop
addb
dec
dec
imul
shl
cli
jmp
jge
mov
jmp
ret
gs
pop
negl
jle
inc
lret
incl
push
or
popa
cs
repnz
fsubrs
ret
dec
test
sar
jns
add
jns
mov
jmp
les
js
lods
mov
icebp
mov
push
sar
cs
push
loope
push
ja
lcall
sub
mov
sbb
incb
jmp
jmp
ret
cmpsb
inc
and
mov
sub
push
lea
fcomip
jmp
sub
dec
xchg
mov
test
xlat
xchg
or
in
ss
ljmp
daa
mov
mov
shrb
jbe
mov
cmpsb
push
mov
mov
mov
sbb
xor
icebp
loop
adc
mov
cli
inc
cld
pusha
xor
incl
push
cmpsb
insb
notb
enter
xor
pop
mov
sbb
mov
cs
jg
repz
adc
sub
js
pop
cld
adc
iret
out
adc
stos
shll
push
outsl
inc
cmp
cmp
add
xchg
cmp
fnstcw
mull
addr16
iret
out
or
mov
mov
jns
hlt
ljmp
jnp
push
pop
sub
movsb
dec
xchg
cli
or
xchg
dec
xor
gs
aaa
fistpll
incb
fists
cmp
xchg
dec
xor
push
add
fldcw
pop
cmc
outsb
add
fwait
in
in
jmp
cmp
jmp
or
decb
jb
daa
lret
mov
mov
je
lcall
ljmp
push
push
xchg
add
adc
in
jns
loop
mov
jnp
arpl
mov
or
lods
push
in
mov
sahf
out
aas
dec
cs
dec
orl
int3
push
or
push
xchg
int3
cmpsb
and
or
dec
in
mov
pop
shrb
aad
shrl
adc
fs
cmp
lds
cmpsb
push
and
xchg
add
es
inc
stc
jmp
sti
fists
cs
fs
push
inc
call
and
pop
int3
dec
scas
adc
in
jns
pop
adc
ror
mov
js
inc
cs
lcall
cmp
cmp
xor
mov
sub
add
cmp
fistl
mov
add
push
and
rclb
pop
pop
push
divb
test
jmp
mov
es
sub
out
sbb
mov
xor
add
ret
ja
je
pop
rorl
jnp
dec
es
jmp
incl
push
je
dec
sbb
sbb
imul
and
mov
lods
negl
inc
hlt
mov
mov
decl
jno
leave
out
leave
cmp
cli
js
jp
cld
sbb
fucomp
fdivr
lock
in
leave
ret
jecxz
arpl
pop
add
xchg
or
mov
lock
lret
in
or
out
loop
out
adc
outsl
in
pushl
call
int
xchg
fmull
daa
or
subl
fadds
pop
fldt
enter
out
mov
insl
in
add
stc
mov
stos
int3
outsl
xchg
cmp
jmp
shrb
dec
pop
jae
or
xchg
sbb
mov
jp
es
pop
mov
call
xor
and
cmp
outsl
mov
cmp
add
loop
jns
or
scas
je
ja
scas
cli
call
sarb
mov
outsb
pop
or
out
pop
inc
aaa
or
push
fildll
or
rclb
gs
insl
dec
dec
push
incl
lods
das
sbb
out
lea
push
jb
mov
je
push
push
lret
fimull
mov
lods
mov
clc
incl
ficompl
sbb
ret
sbb
insl
push
xchg
sbb
push
mov
clc
or
push
ja
js
outsb
mov
ljmp
cmp
adc
data16
xchg
or
mov
dec
jne
push
dec
ret
dec
lahf
aas
fstps
lods
out
pop
mov
stos
out
inc
cwtl
cmp
jg
xchg
cltd
jmp
in
bound
mov
das
test
cltd
push
xor
jmp
or
mov
packuswb
push
sbb
jmp
and
pushl
mov
xor
fwait
lock
mov
popf
inc
dec
mov
cmp
mov
pusha
add
jp
call
enter
inc
cmpsl
jp
inc
add
pusha
lcall
mov
out
pop
add
cmp
cli
adc
sbb
mov
adc
mov
lcall
pop
fldt
shrb
or
out
xor
loopne
pop
incl
aaa
scas
xchg
popa
pushf
lahf
dec
out
enter
cltd
lahf
iret
or
dec
addr16
or
call
or
pop
jnp
lods
into
xor
cmc
add
lds
call
scas
mov
lods
adc
dec
lcall
pop
stos
out
and
jmp
enter
or
call
scas
dec
imul
push
test
icebp
jae
int
jo
pop
mov
xchg
xor
in
inc
test
sbb
pop
mov
push
pop
sbb
push
or
ljmp
xor
and
lods
enter
push
cmp
push
pop
roll
lcall
or
sbb
push
sbb
mov
ds
xor
pop
scas
fadd
sub
ljmp
clc
lcall
add
mov
inc
push
pop
inc
jg
sarl
data16
loopne
sbb
xor
sub
push
mov
pop
gs
xchg
outsl
mov
nop
repnz
clc
jg
add
lret
and
inc
sub
and
sahf
hlt
fnstsw
add
test
mov
sub
jecxz
in
and
xchg
and
push
push
push
and
cwtl
xchg
gs
pusha
push
xor
sbb
cmp
inc
adc
fldcw
fwait
push
mov
pushl
ja
fimuls
jmp
cld
push
repnz
fisubl
rorb
push
add
loopne
call
fldcw
jb
mov
push
inc
wbinvd
jae
jns
les
shl
enter
jns
push
jg
into
push
push
les
sbb
daa
lret
adc
sahf
pop
shll
out
and
or
test
stc
jnp
out
jmp
fisubl
lods
ja
test
mov
shr
sub
sbb
adc
jg
adc
in
popa
sub
out
lcall
mov
or
add
test
gs
sub
loope
cmp
ja
inc
addb
out
je
mov
pop
mov
cmp
fildl
and
gs
hlt
sub
jmp
or
push
clc
adc
mov
sub
scas
leave
loopne
je
decl
inc
and
mov
aaa
movsl
sahf
cltd
or
inc
push
cmpsl
sub
cmp
xchg
adc
pop
adc
sbb
dec
xlat
repnz
aaa
adc
add
push
or
imul
pop
std
mov
ja
ficoms
shll
stos
dec
nop
js
in
ljmp
jle
nop
movsl
xchg
jle
cmp
pop
outsl
jecxz
mov
push
add
je
idivl
pusha
mov
jg
jnp
repnz
xlat
pop
jo
pop
mov
jmp
mov
aad
mov
lret
aas
fsubrs
adc
push
sar
jb
mov
jg
xchg
cmpsl
inc
mul
testl
inc
inc
stc
fmuls
xor
xchg
decl
pop
insb
into
pop
xchg
out
mov
xchg
gs
push
fucomi
rorb
arpl
lcall
test
imul
mov
add
adc
sbb
jg
movsl
cld
rolb
mov
stos
int3
cld
jmp
hlt
das
mov
aaa
mov
jp
mov
add
mov
cmpsb
sub
pop
jmp
sbb
mov
mov
jmp
pop
sbb
dec
out
out
push
movsb
cmc
mov
mov
jae
aaa
push
add
popa
mov
inc
out
xor
ljmp
subb
mov
cli
fcoms
pop
mov
xor
ja
call
fmuls
jg
or
or
shll
les
sahf
or
scas
add
cmpsb
dec
repnz
pop
and
jbe
adc
loopne
and
jg
and
or
push
or
or
push
sti
xchg
test
dec
sarb
popf
aam
xchg
pushf
in
out
inc
cmp
aaa
xor
shll
call
and
dec
pusha
mov
jmp
cmc
push
in
and
xor
popf
stc
fiadds
incl
daa
jmp
clc
sub
loopne
xlat
mov
ret
xchg
jecxz
lcall
push
cmp
ljmp
push
sub
lock
add
mov
stos
inc
adc
lcall
xor
das
ljmp
dec
xchg
mov
sub
mov
pop
and
jbe
push
les
sar
jmp
in
fsubrp
jae
mov
jle
mov
je
scas
pusha
rorb
adc
repz
fs
pushl
cltd
inc
aad
xchg
mov
sub
mov
push
add
xchg
inc
xchg
add
xor
xor
mov
inc
mov
inc
mov
pusha
jge
mov
xchg
mov
ljmp
dec
out
dec
pushf
mov
sbb
sub
jbe
jg
call
not
pop
pop
add
std
pop
pop
or
cmp
call
fildll
outsl
iret
lea
add
and
out
stos
push
out
add
cmpsl
dec
ja
call
mov
scas
sub
test
hlt
adc
or
cmp
in
push
addr16
xor
iret
push
push
arpl
sbb
push
xchg
and
stos
inc
cwtl
lods
aad
mov
mov
inc
hlt
insb
fistps
shl
push
and
imul
mov
ret
add
jns
incl
jnp
or
ja
jns
pop
mov
lcall
mov
xchg
jo
add
sub
rcll
adc
cld
stc
and
xchg
push
xlat
and
mov
ljmp
adc
adc
add
push
leave
xchg
jns
jo
push
sbb
aaa
sbb
cmp
lcall
pusha
fdivrp
mov
and
lcall
shlb
mov
cltd
dec
adc
in
shlb
call
repz
cmc
mov
loope
out
pop
or
xchg
decl
pop
jp
mov
xor
jmp
iret
and
xchg
pop
out
adc
xorl
or
xor
mov
das
sbb
dec
aas
in
mov
test
adcl
incl
into
fcomp
in
cmpsl
mov
inc
xor
jns
sub
sbb
jne
clc
shrb
and
ljmp
mov
mov
cmc
add
and
xchg
dec
stos
lahf
std
adc
mov
mov
loope
xor
sar
call
sub
xchg
push
cs
mov
clc
bound
imul
subb
xchg
das
decl
das
lods
mov
outsl
imul
push
and
mov
iret
fldcw
lods
decl
insb
loopne
push
aad
repnz
push
xor
xchg
rol
int3
jl
test
shl
pop
mov
or
cld
pushl
sub
pop
jne
filds
insb
and
fs
xchg
popa
rcrb
fbstp
mov
js
cmp
mov
in
das
pop
idiv
decl
mov
xchg
dec
xchg
pop
jge
sub
je
cltd
lea
inc
and
test
incl
stos
inc
cmpsl
in
pop
cwtl
imull
and
iret
ds
movsl
inc
hlt
push
nop
loop
adc
push
sbb
lcall
push
adc
pop
mov
fidivs
rcr
test
hlt
xor
and
dec
push
out
push
sbb
rcl
js
xchg
test
arpl
in
daa
inc
ljmp
or
in
lock
ljmp
mov
rcr
call
push
pop
fists
shrb
test
jmp
cmp
decb
mov
mov
fcom
push
outsl
cmpsb
lods
pushl
inc
adc
mov
adc
ljmp
fsubr
pop
out
in
jns
nop
push
cltd
dec
out
pusha
ret
test
jmp
dec
sahf
setle
xchg
mov
repz
mov
and
push
out
xor
sub
ret
pushl
fcomp
jne
pusha
popa
and
jnp
xchg
mov
lcall
xlat
cli
inc
idiv
inc
cmpsb
cmp
data16
mov
call
int
push
pushl
test
clc
jo
inc
sub
mov
mov
insl
lods
mov
jmp
add
push
xor
jne
inc
loop
in
add
xchg
and
lret
adc
pushl
mov
jg
test
loop
fistps
repnz
xor
sahf
sbb
mov
adc
sbb
mov
test
fildll
and
aam
js
std
push
xor
sbb
add
adc
cmpsb
iret
sub
lret
push
cmp
scas
add
mov
hlt
imul
movsb
pop
cmp
pop
xchg
cmp
sub
ljmp
sti
add
pop
mov
out
push
inc
mov
sbb
hlt
decl
aam
add
lds
data16
jmp
pop
xchg
push
mov
leave
subl
out
mov
jmp
cmp
pop
adc
sub
pop
mov
enter
dec
xor
das
adc
xchg
adc
jg
incl
test
dec
pop
lcall
cmpsb
pop
repz
les
decl
stos
push
js
leave
cmpsb
or
jnp
in
jo
shlb
mov
jmp
inc
mov
push
cmp
jbe
repz
jp
mov
sub
cmpb
fcomip
pop
test
in
or
sbb
mov
sbb
shlb
sub
pushl
or
ret
ljmp
jg
add
repnz
call
mov
outsl
and
xor
stc
shlb
ret
adc
lock
rcrl
cld
cmc
adc
sub
cmp
aas
data16
dec
push
cmp
cmp
repz
xchg
sbb
aam
pop
sbb
incl
xlat
aad
addr16
je
inc
scas
or
dec
inc
sarb
pop
sarl
jae
jmp
jp
pop
dec
out
mov
inc
sub
popa
cmpsb
call
test
aas
jge
and
jle
push
mov
sbb
jecxz
outsb
aad
xchg
leave
mov
and
mov
fcomip
jmp
push
sub
mov
xchg
in
lahf
add
cltd
jl
pop
pop
decl
jmp
stc
test
dec
js
fdivs
cmp
dec
dec
pushl
std
decl
jge
jl
fnstsw
aam
test
lret
sbb
icebp
mov
out
or
xor
and
pusha
pop
notb
jg
fs
int
lahf
mov
sti
mov
xlat
std
jle
dec
pusha
cmp
mov
fsubs
push
push
mov
pusha
je
jo
lea
ja
or
add
dec
dec
cld
icebp
aaa
scas
xchg
out
shrb
xchg
mov
mov
int3
je
or
bsr
je
in
pushf
sub
mov
fdivr
lcall
mov
imul
fnsave
cli
add
int
lods
pop
xor
add
stos
dec
jo
mov
jmp
inc
filds
scas
and
sbb
jp
and
outsb
xorb
jne
js
aaa
inc
not
sarl
lcall
sub
stc
outsl
pop
pop
add
stc
test
xchg
mov
fcmovb
xchg
mov
mov
jl
lea
out
pop
inc
es
incl
xor
xchg
outsb
xchg
mov
fwait
sub
roll
stos
and
pushl
outsl
pop
and
imul
call
mov
xor
xorl
stos
aad
mov
push
cmpsb
adc
test
cmpsb
sbb
icebp
or
push
pop
pusha
dec
mov
and
inc
shlb
mov
int
mov
push
xor
cmc
xchg
shr
mov
jecxz
das
dec
subl
pop
sbb
and
fdivr
lcall
outsl
jmp
sub
enter
push
jns
jmp
roll
js
test
lret
loop
outsb
cmpl
pop
and
pushl
fs
jl
inc
pminsw
lret
stos
cmp
out
aad
mov
add
mov
lcall
in
in
mov
imul
in
pop
push
ret
pop
out
pop
xor
mov
movsl
mov
decl
aam
xchg
sbb
jo
cld
bound
and
popa
jmp
or
shlb
in
mov
mov
pop
pop
sbb
ja
inc
inc
loop
sub
jbe
in
std
jg
inc
stos
cmp
xchg
xor
mov
out
fnstsw
adc
xor
aam
mov
jg
pusha
adcb
push
push
test
push
cmp
jmp
fs
pop
xchg
shr
add
push
std
cmp
aaa
mov
aaa
adc
pop
int
mov
lock
imul
xor
mov
jae
or
sub
fcoms
gs
hlt
dec
and
mov
das
adc
pop
xlat
rorl
adc
cmp
jno
int
daa
or
push
cld
fisubrs
jae
int3
xchg
or
lock
and
xor
lcall
sbb
fnstcw
sbb
adc
in
lcall
cld
sbbb
pop
lcall
jg
test
adc
add
nop
add
imul
sub
test
inc
or
jle
cmp
pop
push
jnp
mov
sbb
mov
and
test
pushl
inc
sbb
inc
inc
mov
jns
mov
pop
inc
insl
xchg
jns
cmp
outsb
lcall
mov
lock
dec
mov
scas
mov
jmp
sbb
idiv
adc
mov
xchg
and
fstl
jo
neg
cmpsl
ljmp
mov
push
add
fldenv
and
shll
and
adc
mov
mov
sbb
jmp
sbb
mov
mov
or
inc
aas
jno
dec
push
fwait
jecxz
scas
xchg
cmp
decl
adcl
dec
and
ds
incl
inc
or
mov
cld
pop
stos
loope
scas
and
sbbb
aaa
pop
int3
cmp
push
call
mov
dec
mov
xor
jbe
jge
adc
stc
notl
mov
les
popf
dec
jg
test
add
mov
clc
cltd
out
shl
cmpsl
rorl
shrl
mov
sub
mov
fs
pusha
insb
dec
ss
xor
sbb
cwtl
sbb
cmp
hlt
adc
hlt
out
shlb
loope
pop
xor
inc
lret
int3
mov
out
mov
into
loopne
sub
adc
or
mov
ds
fdivrs
and
mov
js
push
inc
es
mulb
in
fsub
and
fcomps
sbbl
push
lods
mov
cltd
jp
cmp
or
decl
and
mov
lret
pop
movsb
subl
or
bound
pop
loop
jmp
add
test
arpl
sub
and
pusha
iret
pusha
sbb
xchg
into
fcom
xor
jmp
mov
xor
cld
sbb
orb
mov
mov
push
fadds
pushl
dec
pop
out
xor
mov
cwtl
mov
faddl
or
mov
pop
pusha
mov
loopne
clc
xchg
fs
xchg
insl
sub
bound
pusha
incb
sbb
mov
je
fmuls
shrl
push
call
jl
add
outsb
sarl
test
js,pn
push
into
mov
xor
pop
hlt
pop
adc
arpl
dec
inc
repz
xchg
dec
mov
scas
cld
xor
ljmp
lcall
outsl
dec
sub
ret
sbb
clc
mov
orl
mov
push
mov
jne,pn
pusha
decl
ror
jle
jne
mov
rcrl
das
or
jmp
mov
loopne
out
dec
cmp
lret
jae
cmp
mov
add
in
mov
dec
jae
push
mov
push
iret
sahf
fnstcw
or
shll
ljmp
psubq
push
inc
outsb
add
xchg
cltd
fidivrl
sarl
jne
sub
jno
sbb
pushl
std
jo
mov
lods
fildll
pop
sbbl
sbb
dec
or
pop
ficoms
adc
fstpt
xchg
lcall
cmp
push
mov
rcrl
cmp
adc
cmp
rclb
iret
adc
movsb
inc
push
pop
sub
cmp
xchg
mov
mov
call
lds
dec
jae
pushl
dec
inc
jb
xorb
mov
push
dec
je
jae
out
dec
out
dec
sub
aam
daa
push
lret
lret
cmp
arpl
lods
dec
aaa
sbb
shll
loopne
cmpsl
lret
fidivl
push
pop
xchg
aam
jge
jl
mov
push
dec
fistpll
jns
call
orl
xlat
jb
add
xchg
fisubrl
cltd
test
cmpsb
scas
scas
incl
iret
lds
imul
xchg
call
sub
jnp
shrl
call
sub
daa
cmpsb
cmpsb
js
mov
rcrb
mov
pop
incl
or
pop
std
pop
or
int3
push
mov
ljmp
sar
sub
lock
sahf
sub
sahf
es
fcmovnbe
jmp
mov
or
xlat
pop
mov
cwtl
stc
and
or
inc
cmp
pop
inc
xor
sar
mov
out
push
les
clc
loopne
testl
rcll
shlb
adc
or
and
sbb
pop
call
jmp
movsl
out
loopne
jbe
outsb
jle
mov
push
push
push
aam
and
das
adc
repnz
stos
mull
xlat
dec
movsb
stc
rcrl
insb
adc
lret
mov
mov
imul
push
inc
test
cmp
punpckhwd
and
mov
lcall
jp
and
inc
bound
ret
adc
jecxz
or
lret
mov
std
jo
ret
xchg
jns
xchg
pop
inc
mov
jns
lods
cmp
lods
and
adc
arpl
lods
pop
push
push
cli
mov
loope
test
mov
xchg
add
xchg
outsl
jns
shrl
cltd
sub
addl
pushl
mov
or
jl
clc
jns
inc
sub
pop
cmp
xchg
or
sahf
out
adc
jmp
mov
outsl
in
xlat
iret
push
mov
shll
mov
je
jge
aad
xor
std
pop
fstpl
inc
or
pop
inc
loopne
call
outsl
cmp
jo
jecxz
sub
mov
xchg
aas
or
jo
mov
insl
push
xchg
adc
jg
hlt
xchg
fildl
fmuls
lods
dec
not
and
fstpl
call
movsl
jle
sub
adc
inc
pushf
inc
insl
mov
dec
sbb
cwtl
sbb
pop
call
outsb
dec
roll
imul
fmuls
xor
cmp
mov
mov
mulb
fisttps
dec
xchg
imul
push
sbb
fcomip
add
dec
add
jecxz
inc
es
cmp
pop
jmp
sub
xchg
out
cmp
sub
gs
cli
mov
imul
xlat
incl
arpl
int3
pop
push
lcall
pop
xor
fs
jg
pop
or
mov
in
ffree
mov
dec
and
sub
fmull
movsb
fs
iret
inc
aad
ljmp
ds
cmp
xor
xor
xor
std
add
ljmp
mov
or
addr16
push
cwtl
mov
add
decl
xor
mov
icebp
cltd
adc
out
xor
jbe
movsb
test
ljmp
insb
lret
inc
inc
dec
mov
or
notl
lcall
sub
pushl
ljmp
jmp
mov
mov
cwtl
repz
inc
jno
inc
scas
push
mov
out
cli
pushl
mov
sbb
fmull
int3
sbb
in
inc
push
or
push
es
jecxz
iret
ret
or
push
add
mov
outsl
jmp
cs
test
call
loopne
adc
faddl
loop
mov
nop
cmp
lret
nop
add
cmc
mov
jae
jmp
ljmp
sbb
adcl
lods
sbb
stos
outsb
xor
xor
xchg
std
pop
ret
mov
pop
sbb
mov
cmpsb
in
shl
ljmp
mov
sbb
cmpsl
std
aam
jne
cli
lds
push
sub
fistps
sbbb
inc
pop
adc
ds
ljmp
pop
mov
stos
sub
lcall
sub
mov
xor
cmpsb
mov
push
sub
idiv
decl
dec
shlb
push
insb
mov
xchg
aas
sbb
pop
jbe
pop
repnz
pop
clc
jmp
int
loope
stos
pushf
stos
sub
lahf
sbb
and
shll
mov
sbb
adc
pusha
sti
mov
aas
ss
popl
push
hlt
repnz
call
jl
jecxz
aaa
dec
ljmp
std
pop
insl
lcall
pop
test
aam
scas
xchg
push
idivl
mov
add
outsl
insb
jmp
fadds
sub
movsl
pop
push
pop
lock
popa
clc
lods
cli
imul
or
dec
adc
ja
jmp
add
cmpsl
out
or
pop
dec
fwait
adcl
nop
and
stos
das
and
adc
add
inc
popf
or
pop
xchg
sub
pop
sub
jmp
mov
dec
stos
xchg
sbb
lods
push
es
incl
mov
outsl
mov
or
jg
cmp
shrb
mov
sub
mov
inc
pusha
imul
xchg
notb
add
movsl
int
mov
jbe
jnp
mov
dec
test
dec
xor
sbb
insb
and
rolb
add
rcrl
ret
xchg
xchg
jmp
out
repz
push
rcll
aas
inc
mov
aam
dec
jne
cmpsl
inc
fwait
adc
pushf
das
rorb
cmp
stos
push
jp
imul
imul
mov
jnp
repz
push
and
xorl
pop
sub
inc
or
std
divl
and
and
mov
mov
cli
pushf
test
dec
incl
es
inc
ss
add
dec
sbb
sbb
inc
xchg
sarb
jg
decl
lock
cmp
jns
sahf
pop
adc
adc
andl
or
jp
sub
imul
sbb
repnz
not
movsb
repnz
call
leave
subl
clc
icebp
lret
rol
mov
adc
mov
jo
or
daa
loope
add
int3
add
push
movsb
or
cmp
icebp
ret
pushl
pop
add
out
push
das
int3
loope
add
idivl
inc
es
ja
pop
sbb
cmpsl
mov
jb
cmp
rorl
cli
adc
xor
push
push
insl
push
and
jmp
int3
jb
cmp
pop
fistl
jp
scas
xor
insl
inc
mov
pop
push
fcmovbe
fcomip
insb
inc
pusha
and
ljmp
js
mov
pop
jp
mov
mov
mov
dec
in
rorb
cmp
cli
ds
sahf
scas
adc
mov
test
mov
out
lret
push
push
xchg
pop
dec
movsb
addr16
jg
mov
push
les
mov
enter
jbe
xlat
or
dec
cmp
xchg
insl
bswap
mov
mov
outsl
lea
xor
in
xchg
sti
into
cld
inc
adcl
mov
shrl
sar
fdivr
jns
test
mov
push
mov
xor
or
jg
jmp
xor
xchg
pop
jbe
clc
cmp
movsb
pop
cmp
jns
ljmp
jl
pop
xchg
cmp
mov
jmp
in
xchg
shl
insl
mov
push
mov
xor
cld
aaa
hlt
push
sub
mov
sub
pop
jge
cmpsb
rcrb
mov
mov
mov
jg
inc
dec
push
pop
jl
dec
call
mov
ret
outsb
cs
call
insb
shll
add
push
inc
jl
jnp
lock
add
outsb
fidivs
imull
js
sub
pushl
lock
leave
xchg
add
cmp
mov
dec
inc
push
fstl
push
nop
sbb
inc
mov
jae
nop
insl
arpl
inc
inc
out
mov
sub
fwait
ret
call
xchg
cltd
or
add
push
mov
xor
xchg
cmp
pushl
std
imul
jbe
popf
mov
xchg
pop
fs
lds
jle
aam
inc
test
xor
test
movsl
es
icebp
ret
clc
xor
je
jmp
in
jp
int
jbe
xor
inc
dec
ljmp
hlt
xlat
inc
cmp
repnz
ljmp
jecxz
test
mov
test
cli
fists
push
dec
cld
push
lret
push
mov
push
iret
in
fisttpl
les
xchg
fcoms
loope
std
mov
test
mov
mov
mov
jg
ljmp
test
jle
or
lea
xchg
sub
add
pushl
movsb
push
inc
add
dec
pop
out
or
xor
push
adc
mov
out
mov
push
jmp
cs
xor
xchg
ja
sbb
sbb
loope
jo
insb
hlt
push
stos
mov
lcall
fmul
mov
mov
fprem1
mov
out
fimull
cmpsl
negb
jle
inc
jl
loope
stos
cld
pushf
lea
notb
stos
adc
mov
add
arpl
inc
jp
data16
sbb
jnp
test
inc
out
xchg
stc
mov
lcall
pop
push
mov
lcall
mov
xchg
or
pushl
stc
cmp
outsl
ret
daa
shrb
adc
icebp
enter
fwait
loop
xchg
cmp
cmp
jmp
ds
xor
call
sti
and
pop
hlt
mov
jo
or
data16
mov
jg
xor
repnz
push
push
fs
in
fcmovnb
incb
jns
cmpsl
mov
neg
lcall
in
icebp
or
mov
adc
je
xorb
out
inc
pushl
jmp
jecxz
ficompl
ds
fmull
xlat
cli
add
mov
imul
pushl
adc
aad
daa
in
daa
ds
sbb
or
sti
shll
pop
scas
cli
incl
ljmp
jne
mov
adc
jo
or
push
cmc
push
dec
leave
mov
mov
mov
pop
xchg
frstor
mov
cld
insl
fs
dec
push
adc
jo
or
and
scas
vminss
fildll
daa
sbb
lea
and
sbb
out
aad
pop
scas
jnp
ja
stos
popf
jl
and
cmpsb
inc
xchg
sbb
jmp
add
ds
add
xchg
xor
inc
dec
das
sbb
xor
jge
icebp
mov
inc
pop
sar
jmp
mov
dec
clc
jg
xchg
sbb
je
call
xor
repz
ljmp
pop
outsb
data16
add
fstl
mov
jmp
stos
lret
jp
mov
out
push
in
popf
aam
adc
cmpsb
stos
aas
mov
cli
ret
in
mov
xorl
mov
mov
jle
sbb
incl
xchg
gs
insl
sarb
mov
push
pop
xchg
mov
add
call
sub
mov
push
add
adc
aam
cltd
int3
add
jg
xchg
jle
dec
mov
mov
clc
xlat
xor
popf
ljmp
jno
cli
or
aad
mov
xchg
lcall
aaa
pusha
stos
cltd
test
dec
repz
or
sbb
decl
mov
ret
leave
test
in
inc
out
insb
shrb
push
je
test
or
mov
mov
cmc
test
add
mov
jb
jbe
mov
jnp
rclb
lret
fdivrp
inc
test
fs
insb
pusha
and
pushl
jae
dec
and
mov
jbe
leave
jp
lret
push
scas
iret
pop
mov
mov
lcall
dec
mov
addr16
sbb
sbb
sbb
shlb
mov
les
incl
les
jmp
outsl
aaa
and
mov
cmp
popf
sub
cmp
fdiv
lea
pop
gs
repnz
xchg
jns
dec
mov
xchg
sbb
or
ja
or
mov
nopl
adc
cmc
ret
stc
test
mov
push
pop
ficoms
and
test
sbb
ds
aad
imul
test
int
mov
decl
call
sahf
dec
and
out
inc
xchg
jg
dec
xchg
and
shlb
mov
mov
outsb
jbe,pn
loope
jmp
mov
call
test
and
div
mov
xor
fs
cmp
aaa
cmpsl
aaa
pop
js
mov
xchg
cmpsb
xchg
sahf
aam
decl
loope
sub
int3
jo
enter
pop
or
jae
lcall
push
pushf
addl
ds
sar
clc
sti
iret
dec
inc
push
dec
imul
xchg
jnp
cmpsb
test
mov
bound
das
jmp
bound
data16
test
lret
fsub
adc
mov
movsb
mov
int
adc
fildl
cs
pop
add
lret
inc
cltd
push
fdivl
push
scas
xor
lahf
adc
mov
es
xor
hlt
xlat
je
ret
xor
mov
jno
in
jbe
xchg
inc
ret
push
fidivrs
mov
sbb
fisttpl
pop
sbb
jbe
xchg
sbb
push
push
cwtl
lods
shl
dec
ficompl
out
cmp
int3
mov
lock
sbb
adc
incl
les
pop
mov
adc
or
pop
xchg
push
mov
mov
decl
in
xchg
ret
mov
into
pop
inc
adc
subl
jae
and
sar
call
mov
lret
out
leave
cwtl
pmulhuw
imul
cmp
outsl
jbe
mov
pop
std
mov
dec
inc
lods
scas
std
nop
inc
push
ljmp
mov
fsubl
ss
fsub
rep
dec
in
clc
and
decl
xchg
daa
test
pop
inc
mov
cs
jg
lods
adc
adc
sbb
mov
fistpll
jbe
sahf
enter
and
clc
jmp
push
mov
jbe
jb
out
inc
jp
ljmp
pop
inc
push
mov
clc
dec
lods
mov
sti
mov
add
cwtl
rol
nop
dec
dec
jecxz
enter
addl
inc
mov
mov
push
mov
rolb
inc
mov
jmp
push
out
mulb
ljmp
xchg
cmc
loope
aam
daa
popl
incl
rclb
push
and
adc
movsl
insl
rorl
mov
inc
test
sbb
pusha
lret
jp
pop
loopne
call
ljmp
sbb
fs
push
mov
push
adc
test
movb
fwait
xchg
dec
jl
jg
xchg
in
ss
mov
pushl
push
hlt
push
inc
js
cmc
sahf
fldt
or
jnp
stos
dec
in
pop
or
pushl
imul
mov
mov
cmp
mov
xor
adc
movsb
pop
and
pop
test
push
aad
cmp
dec
mov
lahf
xor
loopne
enter
jns
xchg
fldenv
xchg
jge
sub
ja
fisttps
jmp
mov
xchg
jno
mov
mov
enter
pop
cli
mov
or
repz
cmp
ljmp
test
inc
pop
cmp
outsb
xchg
lret
push
loopne
sbb
insb
and
ljmp
dec
int3
and
sbb
jnp
sarl
sub
or
jg
push
fidivl
or
mov
decl
movsb
repnz
mov
sub
pop
add
xchg
gs
mov
mov
mov
decl
mov
mov
sbb
les
xor
inc
idiv
lahf
pop
push
adc
pushl
clc
out
repz
xor
cltd
dec
cmp
dec
rolb
push
xor
mov
ficoml
pusha
in
mov
sti
push
or
rcrb
push
xchg
fiaddl
addl
in
xor
push
shl
mov
jg
ror
lock
add
ret
mov
cli
or
lcall
jg
sbb
sbb
push
mov
pop
cmp
cmpsb
sbb
lahf
dec
idivb
ljmp
stos
fwait
or
ja
mov
cs
cld
sub
cmp
bswap
sub
lcall
push
aaa
pop
xor
test
daa
mulb
pusha
cmp
pop
push
and
dec
cmp
in
out
leave
call
std
call
dec
sar
aas
pop
jnp
mov
push
sti
int3
mov
aas
into
mov
dec
pop
in
popf
jl
pop
dec
insl
push
repnz
mov
lret
repz
into
mov
int
in
decl
cmp
jne
xchg
mov
f2xm1
outsl
lods
push
adc
cli
jns
pop
mov
jge
out
cli
fucomi
push
in
ret
dec
mov
and
mov
ljmp
mov
bound
icebp
push
call
pop
adc
into
jp
xchg
insb
xchg
cs
es
and
iret
cmp
lods
jbe
mov
nop
dec
add
jmp
jo
adc
inc
add
push
popf
fdiv
stos
mov
inc
decl
shr
incl
push
sbb
dec
dec
scas
or
in
pop
repnz
decl
addr16
mov
hlt
and
ljmp
cmc
call
addr16
mov
cmpsb
push
jge
sbb
sub
stc
or
call
inc
int3
dec
jg
adc
jmp
pushf
inc
xchg
sub
push
dec
inc
lods
lea
shl
and
dec
dec
mov
in
das
mov
push
sbb
dec
sbb
enter
adc
xchg
dec
jmp
dec
jno
xor
inc
int
scas
jg
mov
out
shr
xor
mov
adc
mov
ja
daa
jge
push
xor
pushf
push
or
mov
pop
inc
or
loope
dec
mov
frstor
icebp
data16
std
loop
pop
mov
pop
cmc
out
mov
or
mov
loopne
fxch
jg
pop
xor
jmp
adc
add
aaa
xor
jl
out
dec
sti
loopne
adc
cmc
fisttps
xor
mov
fsts
icebp
pop
rclb
fisttps
and
sarl
jns
fwait
xor
dec
mov
push
mov
mov
jmp
jge
mov
loopne
adc
test
clc
or
cmp
decl
mov
int
mov
jno
sbb
or
idiv
pushl
mulb
aas
inc
out
js
mov
rcl
xchg
call
push
mov
cli
jmp
cmp
adc
jo
or
or
cmp
and
sbb
pop
mov
or
push
push
push
xchg
leave
lahf
jecxz
or
dec
nop
mov
pop
mov
sub
jns
js
decl
rcll
ret
imul
stos
xor
lea
inc
inc
inc
or
push
dec
shl
popa
ljmp
sbb
cld
adc
sahf
rol
into
into
or
sti
dec
mov
in
pushl
cld
pop
test
sub
cmp
push
mov
js
push
add
pop
and
scas
xchg
rcll
js
fsubl
push
imul
out
test
mov
jo
daa
addr16
es
testb
gs
jb
scas
or
fidivrl
mov
pop
inc
stos
cmp
add
call
in
nop
lock
lcall
ror
mov
pop
pop
gs
inc
pop
xchg
and
push
and
repz
fistps
and
gs
mov
test
push
popf
je
lcall
sbb
sbb
push
mov
cmpb
dec
pop
js
adc
adcl
ljmp
shrb
and
xchg
add
push
jbe
sub
push
inc
or
jns
lock
push
push
ret
pop
stos
ret
mov
dec
aas
xor
in
fnstenv
mov
push
pop
pop
outsb
divb
stos
imul
dec
or
push
push
dec
mov
incl
imul
roll
in
test
xor
hlt
incl
sar
arpl
hlt
icebp
outsb
icebp
pop
push
mov
push
sarl
popa
je
add
adc
jle
iret
mov
inc
jl
dec
push
mov
jo
cmp
jnp
xchg
add
xor
sbb
cli
incl
push
imul
push
sbb
imul
fistl
pop
and
pop
xor
hlt
jecxz
cmpsl
iret
fsubl
incl
int3
cmp
test
sahf
andl
ret
out
pushl
inc
test
cli
incl
mov
fldcw
jge
icebp
xor
pop
adcl
mov
in
cmp
jns
mov
repz
pop
int
scas
mov
jmp
out
jb
jl
mulb
jae
mov
pushf
jns
mov
pop
sub
cmpsl
rcrb
inc
and
lods
dec
rcll
jp
cli
mov
clc
add
sar
mov
loopne
enter
jl
mov
inc
xorb
inc
in
push
mov
sbb
jge
mov
jnp
arpl
out
xchg
testb
fcmove
jg
lock
out
push
inc
es
mov
arpl
push
mov
ljmp
sub
mov
nop
pop
dec
mov
loope
sub
mov
mov
scas
mov
inc
scas
xor
mov
int3
fstps
lds
adc
xor
rcrl
lahf
sub
incl
orb
cmp
sbb
popf
adc
xchg
mov
jnp
outsb
sbb
decl
in
sub
mov
cmp
or
movsl
xor
xchg
hlt
dec
pop
arpl
movsl
inc
mov
sub
test
lret
movsl
test
fldl
mov
nop
dec
insl
aas
cwtl
sbb
cmp
xchg
inc
ss
rorb
mov
call
enter
jbe
sbb
shll
mov
mov
dec
fidivrl
push
xorps
cmp
incl
push
xor
sarl
fisttpll
sbb
loopne
addr16
inc
mov
mov
pop
or
lcall
push
mov
enter
inc
lret
pusha
mov
outsl
loopne
inc
cld
mov
cmp
jae
xchg
and
loop
inc
or
fnstsw
or
andl
push
outsb
ss
cld
push
or
incl
mov
repnz
mov
mov
repnz
mov
cli
pushl
cwtl
cmp
push
rorb
bnd
pushf
xor
mov
push
out
lds
mov
fisubl
lret
jo
lods
inc
les
and
inc
into
xchg
xor
mov
rorb
push
pop
movsb
hlt
fiadds
push
mov
in
call
popf
ds
sub
lcall
sub
lcall
int
out
fwait
test
insl
or
mov
mov
and
mov
pop
mov
jg
insb
lret
out
mov
pop
aad
add
dec
stc
test
addr16
xlat
shl
sbb
sti
incl
inc
cltd
push
cwtl
fbstp
inc
mov
aas
out
stos
leave
rorb
scas
jle
dec
fs
insb
inc
or
mov
pushl
repnz
mov
in
ljmp
dec
pop
push
roll
hlt
push
pushl
adc
pop
into
xor
xchg
dec
or
and
sbb
pusha
scas
cmc
xor
push
mov
scas
addr16
lods
lret
jp
pop
int
rorb
jecxz
insl
leave
int
lret
lods
fdivs
mov
dec
xlat
int
outsb
cmp
mov
lcall
adc
adc
xor
add
jno
push
xchg
pop
and
clc
xchg
mov
leave
imull
std
ljmp
enter
aaa
ljmp
bound
sub
aam
xlat
sub
jmp
sbb
cltd
adc
fcomi
and
cli
or
es
pop
push
fst
xchg
repnz
aaa
dec
ljmp
rclb
ss
outsl
jg
mov
dec
add
mov
adc
sahf
xor
jnp
jmp
mov
inc
outsb
mov
movsb
mov
mov
push
call
xor
call
lret
or
xor
mov
jg
dec
mov
pushl
call
aam
sub
mov
out
cmpsb
popa
lcall
int3
xchg
jmp
call
loope
ds
pusha
ss
sbb
adc
outsl
mov
xchg
xor
fmulp
aas
out
lods
int
lcall
cli
clc
scas
fmull
data16
dec
std
aaa
ljmp
andb
scas
mov
dec
fcomps
insl
loopne
inc
ret
bound
out
clc
enter
jns
bound
rcrb
pop
outsl
adc
call
bound
jmp
pop
cld
fsubrs
mov
test
pusha
mov
hlt
push
repnz
cmpsb
adc
xor
xlat
add
fcompp
cmp
aam
add
int
xchg
subb
lahf
jecxz
xlat
lret
popf
cmp
xor
fcmovnb
xor
push
hlt
add
push
out
push
mov
add
aad
jecxz
mov
ljmp
mov
fcmovnbe
addr16
aad
ror
mov
mov
jnp
ds
dec
cmpsl
cmpsb
cmp
push
push
xor
pushl
push
cmp
imulb
adc
popf
adc
jb
lahf
lret
jmp
je
repnz
inc
mov
pop
ret
ficoms
fld
lods
jg
inc
out
ds
call
mov
xorb
js
popa
movsl
sti
shll
jmp
add
scas
in
or
dec
test
xchg
and
pop
in
js
out
xlat
mov
ljmp
dec
cmpb
mov
mov
jb
mov
xor
fildll
mov
ja
cmpsb
jns
add
les
mov
decl
decb
outsb
mov
insb
cmp
ficomps
int
pop
test
cld
call
jb
pop
adc
ss
rcl
mov
std
jo
lods
mov
ret
ljmp
xor
push
push
pop
cs
pop
fsubp
add
jge
fidivl
int
or
mov
mov
inc
dec
pushl
repz
bound
cmp
sub
arpl
push
lret
jge
push
fisttpl
push
mov
sahf
sbb
jmp
cmp
push
int
xchg
mov
mov
push
ja
sahf
push
call
js
dec
hlt
xchg
ret
cmp
es
sub
dec
movsl
pop
outsb
stc
andl
daa
jmp
xor
es
dec
or
sub
add
inc
sti
and
or
or
addr16
xor
leave
leave
shll
mov
pushl
jecxz
pop
adc
pop
mov
popf
test
popa
mov
cmp
inc
sar
pushl
aam
aas
sarl
imull
jmp
cmp
mov
fdivr
pop
lcall
xor
ss
xchg
inc
loope
jnp
add
and
cli
add
pop
lea
incl
sahf
js
cmp
mov
mov
cmp
stos
pop
imul
int
push
incl
mov
sub
pop
out
loopne
pop
push
sahf
add
pusha
jmp
rcrl
leave
mov
dec
sti
xor
icebp
add
jg
test
lcall
lods
inc
les
sbb
iret
sub
shl
test
mov
xor
jo
cmp
jg
shlb
pop
cmpb
sbb
daa
xorb
and
bound
lcall
mov
enter
cltd
aas
gs
repz
push
sbb
jns
mov
xchg
add
sbb
mov
pop
js
das
out
add
jp
stos
inc
push
push
pop
add
adc
in
lret
mov
add
pop
clc
xchg
push
push
arpl
pushl
cld
pop
cmc
test
inc
cwtl
ja
ret
cld
stos
add
shlb
ljmp
lcall
adc
dec
shr
cld
inc
push
fs
les
in
cs
call
test
cmpsl
aas
and
incl
add
sub
mov
cmp
ret
shll
mov
push
push
stos
decl
push
aaa
pop
lret
jp
inc
ds
je
adc
jmp
xor
sub
inc
lds
push
cli
in
in
mov
hlt
adc
cmp
or
ja
mov
xor
mov
lcall
fsubrs
or
aaa
and
and
cmp
lret
lcall
out
pop
leave
lock
fdivs
mov
sarb
sub
inc
loopne
push
fisubs
jbe
ret
mov
mov
or
mov
lods
pop
pusha
xorl
lcall
and
sbb
jbe
shlb
add
xchg
dec
lcall
inc
push
and
jne
divl
mov
hlt
dec
out
les
or
dec
jecxz
inc
xor
dec
scas
xchg
ljmp
ficomps
repz
mov
inc
sar
dec
std
call
and
jns
pop
repz
mov
jno
decl
xchg
cli
push
adc
adc
cld
mov
fwait
lcall
fs
cwtl
test
mov
ja
movsb
mov
lret
ds
test
mov
mov
push
xor
insl
xchg
gs
loop
pushf
mov
clc
decl
mov
in
clc
dec
repnz
mov
iretw
ret
sbb
mov
sub
and
mov
pop
ds
test
adc
sbb
jg
push
push
push
fxtract
lahf
pop
cmp
stos
mov
jecxz
jae
addr16
stc
push
inc
je
inc
in
mov
sbb
xchg
aam
or
pop
in
cwtl
jg
jo
pop
jno
push
in
inc
out
xorb
push
inc
inc
dec
xchg
shrb
jo
movsb
push
cs
gs
lret
mov
push
hlt
cmp
mov
mov
mov
subb
faddl
or
fildl
xlat
mov
push
and
adc
dec
insl
push
xor
mov
movsl
hlt
add
incl
mov
aaa
jge
loop
or
popa
push
or
loop
ss
or
lcall
lret
out
lea
imul
sarb
scas
xchg
rol
mov
xor
std
lcall
xor
incb
lcall
stc
test
inc
sarl
mov
mov
jge
aaa
inc
and
popf
cmp
dec
xchg
aaa
orl
call
or
cmpsl
aad
ljmp
pop
mov
push
cmpsb
sub
sub
arpl
cmp
loopne
mov
sahf
out
dec
insl
pop
push
aam
insl
in
pop
mov
pop
aam
cmp
mov
pop
mov
or
sarb
aas
loope
gs
and
mov
adc
insl
imul
jmp
ds
test
mov
lds
call
xlat
popf
rol
sbb
in
cmp
sub
std
je
push
bound
push
xchg
push
fcom
sbb
dec
adc
jmp
loopne
push
popf
xchg
imul
insb
inc
cs
fisttps
imul
sub
mov
out
shl
mov
idiv
dec
jo
bnd
into
mov
pop
and
mov
mov
repnz
enter
std
std
incl
loope
push
sbb
mov
mov
sbb
ficomps
pop
andl
mov
insb
adc
push
popa
lahf
mov
sbb
pusha
pop
nop
aad
jnp
and
xchg
cli
adc
jle
jb
stos
push
jbe
incl
pop
in
stc
outsb
loop
scas
pop
dec
pop
rcrb
dec
or
dec
add
mov
dec
mov
cwtl
inc
or
jl
in
mov
lret
and
filds
push
and
adc
cli
xor
mov
stos
mov
inc
xor
mov
ljmp
mov
sbb
jmp
dec
or
add
and
sarl
ljmp
lock
out
rorb
add
xor
mov
xchg
dec
pop
or
loope
pushl
lods
ljmp
sbb
insl
push
or
repz
jp
out
fucomip
add
lods
stc
ljmp
dec
push
xor
lock
aas
xor
imul
daa
mov
cwtl
or
aaa
std
jg
gs
frstor
es
mov
mov
sti
decl
sti
mov
movsl
je
jno
mov
movsl
pop
or
icebp
out
sbb
jg
jl
mov
jge
jns
stos
cli
enter
js
cli
sbb
dec
adc
popf
clc
pusha
mov
psubsb
sti
pop
mulb
stos
lock
pop
adc
sbb
repz
jge
lahf
lock
loop
ss
xor
mov
sbb
in
dec
jge
push
mov
inc
xchg
in
hlt
inc
dec
test
lahf
lret
loop
lds
rcrb
repnz
adc
cli
xorl
mov
sub
xor
insb
lahf
ret
adc
mov
cs
mov
scas
add
scas
or
xor
clc
cmpsb
mov
xchg
ds
lcall
incl
loopne
ss
sbb
les
pop
imul
test
movsl
add
cmpsl
jmp
cmpsb
cmp
les
aas
movsl
pop
dec
inc
cmpl
mov
fcomps
xor
jmp
aaa
xor
dec
jge
xchg
dec
popa
adc
out
push
sbb
leave
xor
aaa
std
call
mov
adc
mov
testb
inc
push
mov
das
and
fdivrl
cld
jo
scas
mov
push
add
out
xbegin
mov
xor
cmpsb
jno
add
inc
add
ds
dec
push
mov
dec
inc
push
movsb
push
pushl
sub
pop
hlt
ret
dec
mov
nop
adc
repnz
icebp
push
lcall
cld
insl
cmpsl
sti
pop
xor
push
dec
repnz
mov
negl
mov
mov
jg
call
cmpsb
out
adc
xchg
jecxz
and
call
out
or
jg
dec
inc
mov
pop
jp
inc
xchg
jecxz
inc
pop
jmp
xchg
xchg
jb
outsb
mov
sbb
cli
jecxz
int
dec
adc
pusha
inc
ja
incl
cmp
push
daa
push
push
and
fsubs
outsl
nop
enter
add
sarb
in
insb
imul
lcall
dec
mov
call
xchg
push
mov
xor
xlat
and
clc
cmpsl
push
mov
push
sbb
ljmp
std
rcl
push
movsb
fsubl
jecxz
ljmp
ljmp
push
pop
lret
lock
out
cmp
add
incl
or
xchg
xor
test
push
adc
divb
mov
adc
mov
fwait
je
fadds
decl
fsub
push
stos
and
push
insb
xor
sbb
pop
hlt
push
aas
xor
inc
and
mov
jle
sub
add
add
outsb
test
popa
sbb
pop
test
cli
fidivrl
pop
push
daa
test
dec
cmc
jnp
cli
fstpl
data16
mov
mov
scas
and
dec
push
jae
push
call
std
insb
xchg
in
cmc
mov
mov
push
xchg
test
loop
sub
sbb
cwtl
xchg
jae
lods
mov
and
adc
lcall
rclb
jle
mov
inc
fs
call
ss
dec
and
inc
mov
pop
outsl
enter
fwait
cmpsb
mov
jecxz
pop
into
mov
call
repz
popf
std
fnstcw
inc
dec
daa
mov
gs
movsl
jae
clc
call
popa
ficoml
jo
fdivrl
stc
lcall
dec
cltd
or
dec
dec
ljmp
mov
test
repnz
xorb
mov
xchg
jne
add
dec
nop
or
jg
add
ja
cmp
dec
jecxz
mov
xorb
add
es
incl
cmp
int3
mov
inc
sub
sub
inc
outsb
adc
add
lcall
mov
imul
sbb
or
sub
cmp
cltd
leave
pop
js
call
mov
cs
loop
sbb
or
pop
mov
cltd
shrb
aad
leave
jns
adc
and
pop
inc
ljmp
dec
pop
jmp
jmp
insb
in
fnstenv
insl
loop
imul
sbb
fistpll
ljmp
pop
sub
jp
pop
pop
loop
or
scas
add
and
js
adc
jge
cmp
pop
mov
call
jae
xchg
outsl
add
popf
lods
enter
das
int
mov
push
mov
push
push
call
push
xor
lcall
incb
pop
sbb
mov
int
sbb
lods
call
xchg
lret
shll
shll
pcmpeqw
lcall
movsl
ret
out
loopne
dec
inc
jmp
push
aad
mov
push
jno
xchg
addr16
scas
outsb
js
decl
inc
sbb
mov
mov
aad
push
push
bound
mov
jmp
xor
push
int3
mov
jbe
outsb
loopne
add
pop
int3
fucomip
stc
or
jg
xchg
add
mov
ja
add
push
and
stc
jns
jb
push
sub
fbld
and
xchg
out
repz
xchg
cmc
test
or
out
cli
call
leave
and
clc
push
inc
xor
xor
loop
jnp
call
cld
shl
int
fnstenv
jae
pushf
movsl
xchg
int
sarb
lcall
pop
xchg
pop
and
inc
pusha
jnp
ja
lock
sbb
nop
xlat
mov
pop
lods
sub
mov
sbb
scas
mov
out
jle
xchg
xor
decl
sbb
mov
jno
jg
incl
and
stos
fdivr
or
cmp
das
stos
jno
add
inc
ljmp
pop
lock
lahf
mov
fsubl
and
fists
in
dec
movsl
push
jl
xchg
clc
bound
adc
pop
das
clc
les
jmp
decl
sbb
inc
test
ljmp
push
stos
cmp
xor
push
push
mov
sbb
lods
pop
dec
mov
push
cmp
scas
sbb
sbb
testb
imul
dec
xchg
sub
xor
std
decl
movl
or
xchg
pop
loope
mov
lock
test
dec
mov
xor
pop
cmc
in
scas
nop
mov
in
sbb
mull
dec
lcall
jmp
add
das
aam
rorl
shll
sbb
sbb
popa
pop
jp
add
test
shld
mov
lcall
push
jg
sub
jge
xlat
cmp
mov
and
fcomi
gs
mov
mov
adc
fld
push
js
inc
rolb
add
outsb
sub
jmp
pusha
cwtl
cmpsl
jnp
xor
js
mov
xlat
out
and
pop
pop
pusha
or
push
pushf
ds
ljmp
push
mov
pushl
fidivs
scas
sub
popa
iret
mov
add
fs
repz
cmp
jg
rcrb
xchg
test
ret
scas
sub
loop
bound
sti
xchg
mov
push
pop
aas
call
jecxz
test
mov
rclb
jnp
pop
jmp
pop
nop
ud0
ljmp
xor
adc
jnp
cs
inc
iret
clc
mov
dec
and
pop
adc
decl
mov
push
pop
push
in
cmp
add
andb
dec
cmpb
sub
mov
push
std
or
cld
clc
ja
mov
mov
jne
jo
add
push
or
inc
loopne
pop
jecxz
setns
inc
lahf
and
jg
pop
aam
cli
mov
ds
mov
and
xchg
rcl
push
ret
xlat
jns
jmp
xchg
push
ljmp
pop
add
pop
sbb
cmp
or
adc
jo
les
pushl
insb
mov
push
pop
or
lods
cwtl
dec
es
cmpsl
mov
push
mov
cmp
adc
jmp
aad
inc
mull
cli
mov
cmpsl
in
js
pushl
lea
adc
jl
inc
std
adc
jae
fnsave
xchg
call
sub
call
cmpb
repnz
ja
mov
mov
inc
mov
pop
fsubrs
in
jmp
frstor
jecxz
cmp
mov
mov
mov
mov
and
ljmp
shrb
mov
hlt
rcrb
adc
repz
fstpl
loopne
cmp
aam
push
into
das
ret
mov
shlb
xor
xchg
jl
decl
jne
repz
insl
push
inc
push
fwait
mov
xlat
rorb
dec
fstp
rolb
pop
adc
mov
fwait
jecxz
stc
xchg
in
test
sbb
cmp
sbb
fs
push
leave
cli
fwait
stos
loop
jecxz
push
xchg
leave
scas
ja
scas
clc
jo
outsl
test
lcall
sbb
inc
cs
cmp
sbb
cmp
xchg
cmp
xor
sbb
ss
sbb
in
ss
mov
mov
leave
sbb
clc
roll
leave
mov
test
dec
sti
jmp
push
xor
inc
jmp
inc
cli
mov
jb
xchg
out
pop
shll
jbe
xchg
std
fcoml
popf
pop
xchg
jne
mov
roll
data16
loope
jg
mov
pop
shll
sahf
push
out
aam
inc
in
adc
push
loopne
lcall
sub
decl
inc
cwtl
scas
mov
loope
dec
andl
xlat
jle
push
cmc
sti
inc
jmp
ret
and
cmp
dec
lret
xchg
xor
test
mov
rcr
aam
stos
stos
lcall
xor
sbb
pusha
fdivrl
mov
cmp
push
or
icebp
ret
jae
push
pushl
inc
lds
inc
mov
dec
push
adcb
and
cli
sbb
sbb
ret
inc
loopne
add
addl
aaa
stc
jae
xchg
mov
je
fwait
xchg
jg
decl
sbb
sarb
pop
jno
pop
std
lcall
sbb
shl
and
fdiv
daa
cmp
xor
lcall
ret
cltd
shl
pop
pushf
adc
xor
imul
jne
mov
ja
clc
jmp
add
add
jle
shll
jmp
leave
in
lret
pop
push
cmpsb
pop
shl
fadds
jmp
jle
mov
adcl
leave
jmp
jmp
shlb
cld
inc
in
leave
outsl
scas
bound
sbb
cmpsb
mov
call
hlt
mov
and
lods
push
imul
stos
inc
call
loope
popf
sub
pop
lods
in
mov
inc
arpl
jo
pop
cmp
aas
call
pop
xchg
push
mov
lock
xchg
mov
shll
fsts
jmp
repz
jg
dec
and
xor
mov
mov
and
bound
lcall
jle
push
mov
sub
fwait
dec
stos
mov
xchg
add
out
adc
notl
stos
das
adc
dec
stos
xlat
jecxz
jmp
aaa
loop
inc
xchg
cld
mov
jg
sub
ret
push
sub
adc
imul
sbb
pop
push
inc
incl
mov
xor
jns
je
cmp
and
sbb
mov
xchg
push
jns
adc
jmp
roll
test
mov
sbb
sahf
shr
shlb
push
fsubrs
lcall
adcb
pop
ja
dec
loop
inc
fistpll
icebp
test
in
call
outsb
enter
aas
sti
push
call
sti
pop
adc
cld
stc
jecxz
push
jp
cmp
test
push
jge
jne
sub
push
icebp
sbb
loope
out
sbb
pusha
imul
pop
std
bound
lods
insl
jno
shr
pop
jbe
lock
sbb
lcall
xor
mov
in
xchg
insb
mov
sti
mov
clc
dec
pop
es
jo
xchg
cwtl
and
sar
inc
cmpsl
xchg
shl
arpl
adc
xor
scas
gs
sbb
or
ret
lcall
jl
mov
test
adc
sbb
incl
mov
iret
stc
mov
sub
ds
lock
daa
dec
cmc
popa
inc
fs
scas
jmp
aaa
add
sarl
mov
jb
pop
mov
fdivr
clc
in
push
jecxz
aaa
ja
push
push
mov
push
cmpsb
pop
xchg
push
xor
xchg
inc
out
xchg
cmp
loope
ljmp
pop
imul
pop
dec
movsb
pop
cwtl
sub
lcall
cmp
lods
sub
movsl
dec
jp
adc
sbb
adc
dec
ljmp
test
test
push
int3
inc
call
dec
add
pop
outsl
mov
clc
push
mov
mov
js
cli
fcmovb
push
jp
lods
sbb
sbb
popa
push
sbb
and
xor
jp
sub
xchg
and
ljmp
or
popl
and
ja
sbb
andb
or
jle
fiaddl
incl
and
das
sbb
mov
and
imul
cltd
rorb
cs
ljmp
lock
inc
xchg
clc
push
dec
loop
push
nop
int
rclb
jne
out
mov
adc
cmp
sti
decl
and
lahf
dec
or
movsb
sub
in
jle
adc
jo
push
cld
enter
decl
mov
arpl
or
pop
jno
adcl
outsl
in
cmpsl
push
jle
xchg
gs
pop
in
pop
addb
imul
icebp
xchg
neg
arpl
mov
jg
decl
popaw
jg
aas
cmp
mov
xchg
fiaddl
lret
inc
dec
repz
adc
fdivs
dec
in
insb
pop
iret
dec
jno
in
loopne
push
push
dec
pop
jne
mov
jmp
mov
and
sahf
leave
push
xchg
cmp
add
jns
mov
mov
pop
mov
je
decl
dec
clc
movsl
aad
and
test
sbb
sub
ljmp
mov
dec
or
in
add
stos
cmpl
sub
shrl
mov
call
cmc
xchg
or
sub
dec
mov
aad
lods
out
out
outsb
mov
dec
out
add
ljmp
clc
pop
psrlq
adc
jo
dec
stos
push
xchg
mov
dec
in
or
cmp
and
outsb
cli
imul
sub
frstor
pusha
sub
xor
push
icebp
xlat
inc
cli
mov
aaa
push
out
xor
stc
fsubl
popa
xor
mov
aad
sbb
sbbb
cmp
adc
test
jo
and
incl
add
and
or
fs
loop
sbb
xlat
mov
aad
lcall
les
stos
mov
mov
jns
xchg
sbb
sub
loop
aas
jmp
loopne
or
js
loop
test
lods
test
inc
call
daa
push
shrl
mov
lahf
cmp
cmpsb
xchg
js
jmp
mov
decl
sahf
mov
lods
fldt
jg
jecxz
out
scas
movsb
stos
orb
mov
mov
mov
popf
mov
mov
jmp
call
cli
and
in
cmpsb
es
sbbb
fnstcw
mov
jmp
imul
xchg
cwtl
out
mov
loope
jge
les
mov
sarb
loope
jae
adc
es
arpl
les
int3
and
addr16
pop
clc
fildl
xchg
stos
je
stc
or
pop
sahf
dec
out
mov
andl
into
sbb
std
jns
mov
mov
mov
aam
negl
mov
mov
ljmp
xor
push
pop
push
das
add
negb
xchg
clc
mov
outsl
call
gs
inc
and
test
dec
mov
lcall
jno
sub
sar
call
push
mov
cltd
and
push
and
inc
sbb
in
outsb
adc
add
cmovp
dec
adc
fdivs
xor
mov
xlat
cmp
das
pop
sbbl
xchg
sub
cmp
call
mov
aaa
test
mov
aam
lcall
je
sub
lret
or
push
sbb
ds
mov
xor
out
xchg
ljmp
clc
incl
gs
stc
pop
mov
cltd
xor
test
jnp
sub
jg
fnstsw
add
jb
jb
push
pop
fwait
cmp
cld
insb
add
dec
js
pop
adc
cmp
sub
jns
nop
push
jle
sarl
inc
dec
jbe
dec
out
test
sbb
push
inc
push
inc
rcrb
call
arpl
popa
int
or
ret
mov
shlb
cmp
push
mov
iret
and
add
enter
mov
adc
push
pushl
jb
xchg
mov
aaa
mov
and
push
out
dec
mov
std
mov
mov
das
cli
lcall
sub
sbb
jp
dec
pop
std
jge
mov
mov
cmp
in
std
xchg
bnd
cmp
adc
adc
scas
pop
xchg
lcall
je
inc
or
shrb
dec
and
dec
faddl
data16
ja
call
pop
fldenv
mov
shr
fs
push
fld
pop
scas
ja
int
add
insb
inc
incl
rcr
call
add
cmp
xchg
add
adc
pop
inc
adc
mov
fdivs
or
ljmp
imul
out
mov
leave
sbb
in
xchg
ljmp
add
xchg
push
and
mov
aas
inc
test
mov
push
addr16
out
pop
notb
mov
imul
loopne
mov
clc
sbb
jl
xchg
outsb
jb
insl
and
mov
dec
jno
decl
jno
cmp
and
daa
stc
cmp
and
movsb
cmp
dec
adc
lret
pushl
loopne
cmp
sarb
aas
test
fnstenv
jp
pop
xchg
insl
jnp
outsb
inc
dec
inc
cmp
out
mov
movsl
xchg
arpl
jnp
fisttpll
lret
lret
jle
pop
xchg
or
cld
jmp
inc
cld
inc
cmpl
es
movsl
outsb
xchg
iret
dec
xlat
pop
xchg
outsl
lcall
sbb
inc
inc
inc
xchg
and
outsl
pop
int
mov
hlt
adc
mov
xchg
ljmp
and
loopne
ret
sbb
inc
add
test
shl
add
push
es
decl
leave
stos
adcb
mov
sbb
mov
int3
jp
and
movsl
lock
cmc
cmpsb
jl
addr16
ljmp
dec
and
cmp
mov
in
cmc
fcoml
mov
xchg
dec
add
push
cld
pop
push
and
int
scas
sbb
lahf
or
fdivrl
jg
pop
lea
cmc
imul
in
mov
add
dec
test
outsb
jo
push
mov
sar
movsb
fcoml
scas
pop
jecxz
in
movb
incl
je
cmc
imul
aad
gs
xchg
fcomps
stos
shlb
fcoml
sbb
push
shrl
dec
and
pop
adc
xchg
outsb
ljmp
in
ret
jmp
mov
shl
shll
jae
xor
push
adc
mov
jmp
ds
bound
rolb
inc
add
cmp
mov
shrb
fdivp
fwait
lret
push
lcall
fwait
lret
je
std
adc
mov
xchg
mov
call
cld
ficoml
arpl
test
aaa
mov
and
add
jmp
xlat
xchg
rorb
push
out
or
in
dec
adc
lcall
js
aas
inc
jle
scas
mov
pop
jb
pop
popf
lahf
lret
lahf
xchg
hlt
stos
push
fdivp
std
shl
sti
in
lods
xchg
or
and
lahf
pop
jmp
sahf
cmp
sub
inc
mov
aaa
mov
push
fisubl
add
call
std
mov
mov
ds
dec
sti
in
mov
sub
das
jno
rorl
scas
dec
xor
jg
nop
mov
fnsave
mov
inc
aaa
icebp
cmp
popf
out
push
cmp
jmp
decl
lock
gs
int
fidivl
ret
adc
dec
sub
sbb
sbb
mov
cmpsb
pop
pop
std
cs
movsb
cmp
mov
and
xor
ljmp
jecxz
jmp
mov
fimuls
ror
lods
push
push
inc
popf
or
xor
mov
cmp
aad
or
ja
adc
int3
cltd
test
dec
xchg
call
clc
mov
fsubs
aam
outsb
push
jecxz
or
int3
cmc
decl
xchg
push
mov
cmp
push
push
lret
push
dec
jmp
inc
xor
les
adc
xchg
fcomip
mov
mov
add
cmpsb
cld
lret
mov
pushl
pop
and
xor
xchg
jae
mov
out
movsb
sbb
pushl
shll
add
mov
add
das
rorb
insb
pop
mov
rcr
icebp
ljmp
sub
sti
xlat
cmp
jp
add
jge
pushf
dec
jl
into
dec
jmp
push
mov
jmp
xchg
adc
iret
xchg
cli
sbb
pop
sar
jmp
and
decl
xchg
repz
test
cmp
mov
mov
sti
xor
shll
jmp
rcrl
mov
xchg
push
leave
sub
mov
jb
fldl2e
and
pushl
lret
add
xlat
ret
xchg
add
arpl
mov
or
mov
icebp
jl
mov
mov
xchg
inc
jnp
ret
push
xchg
sarl
pop
insb
jno
inc
push
adcb
push
divl
das
or
divl
pop
sub
lcall
rorb
andl
fcompl
mov
mov
ret
das
shrl
or
std
mov
add
jns
or
sarl
fs
into
dec
icebp
aam
or
fyl2x
or
aaa
loop
dec
addr16
dec
sbb
jmp
popf
inc
adc
test
add
mov
movb
ljmp
lock
stc
cmp
jns
sub
sahf
xor
sar
mov
or
jns
cwtl
or
cmp
mov
mov
scas
cli
mov
jmp
movsl
sbb
or
dec
iret
sbb
push
sar
loopne
lahf
and
push
imul
mov
lcall
xlat
dec
push
fwait
or
call
pop
sbb
sbb
mov
daa
sub
push
xchg
ljmp
push
gs
shlb
inc
les
adc
imul
mov
jg
es
xchg
mov
push
mov
dec
jmp
inc
aad
or
in
roll
stos
mov
adc
mov
inc
jo
lret
decl
mov
add
scas
inc
mov
add
mov
adc
push
dec
mov
call
out
push
inc
sbb
testb
add
icebp
pop
and
ds
stos
and
add
mov
and
push
popa
lret
cmp
rolb
out
inc
xor
cmp
sar
daa
mov
mov
imul
ret
decl
decb
movsl
test
mov
adc
sahf
lds
xlat
jae
leave
movsb
and
add
insl
loop
out
ljmp
orl
enter
ja
shrb
and
insb
lcall
add
out
sbbl
adc
inc
lods
sarl
icebp
dec
loope
add
sahf
xor
inc
mov
sub
jmp
mov
adc
scas
mov
fs
out
xchg
es
jmp
sub
repz
push
or
call
xchg
xorl
xor
inc
push
push
push
xchg
stos
clc
loopne
push
int3
jle
xorb
call
xor
mov
or
fcmovnu
jecxz
cmp
fisttps
add
mov
jae
lock
mov
shl
fcomps
lods
or
mov
fcompl
pop
lock
sub
cli
int3
int
push
xchg
and
shrb
out
mov
lds
decl
in
mov
push
mov
pop
leave
pushf
gs
adc
js
jb
cld
jp
testl
fs
pop
pop
adc
lea
cmp
pop
loopnew
sar
ljmp
mov
hlt
repz
push
and
sub
xchg
sub
inc
ja
cmp
ljmp
fmulp
stc
push
cmp
cmp
lea
and
or
sbb
test
ror
jp
jmp
out
jns
repnz
mov
jecxz
mov
mov
test
loope
add
cld
mov
fisubrl
pop
fdivrp
push
nop
int3
ret
jg
inc
sti
xchg
push
dec
add
push
or
cmpsl
pusha
push
inc
cmp
sbb
decl
mov
add
or
and
mov
sbb
mov
adc
ds
jg
mov
into
xchg
mov
jae
jp
jne
loopne
xor
packsswb
out
lcall
sub
mov
inc
push
in
je
out
cld
jnp
dec
xlat
pop
push
cld
adcl
pop
cmc
push
imull
stc
push
mov
rcrb
leave
mov
mov
sub
lcall
test
cmp
pop
mov
test
dec
sub
test
cld
addr16
call
xor
cmp
mov
cld
mov
shl
das
pop
sbb
in
lcall
das
mov
push
jbe
test
out
and
cmp
xchg
jae
cmpsb
cmp
ret
fmul
ljmp
adc
roll
ja
bound
push
jne
jo
mov
fcom
or
cmp
in
jae
ds
je
nop
int
in
inc
sbb
inc
push
mov
sub
imul
sbb
adc
loope
fsubrl
test
mov
xor
xor
int
push
mov
push
std
mov
dec
adc
imul
nop
mov
in
dec
or
push
inc
shll
insl
mov
clc
xlat
sub
pop
fcompl
test
xchg
daa
aam
int
aad
shrb
cmpsl
inc
cmp
repz
lcall
or
lcall
push
jnp
and
inc
sarb
sub
fisubs
pop
jb
jnp
jnp
or
fwait
jg
and
aam
lods
popf
mov
adc
lods
cwtl
cld
sub
push
pop
ljmp
sub
fcomp
dec
sub
and
decl
xchg
adc
leave
test
jbe
lods
stos
dec
cmpsb
out
push
ljmp
popa
dec
mov
call
lds
out
jecxz
pop
jecxz
mov
xor
dec
push
mov
inc
fdiv
test
pop
sub
mov
insb
sub
push
loopne
xor
sub
ljmp
pusha
iret
adc
jge
dec
jo
mov
mov
add
mov
lcall
fs
test
xchg
ss
iret
jg
jb
mov
pushl
xor
sub
movsb
hlt
push
add
jo
xorl
xchg
xchg
gs
pushf
test
insl
cli
in
mov
adc
add
add
and
andb
pop
push
push
leave
test
mov
jmp
outsb
dec
rolb
lret
xchg
jg
fs
hlt
jae
sahf
adc
icebp
mov
fsubs
mov
mov
pop
mov
xchg
call
stc
jmp
clc
orl
cmpsl
xchg
dec
jge
test
cld
outsb
mov
clc
out
push
mov
test
dec
pop
cli
ljmp
push
repz
mov
leave
cmp
fcoms
sub
inc
push
cmp
shll
pop
sub
das
push
sbb
pop
cmp
sbb
fcomip
outsl
clc
orb
shlb
jl
add
int3
gs
icebp
mov
mov
call
lret
pop
pop
jl
inc
cs
subl
jl
cmp
std
dec
cmpl
arpl
push
and
sub
sbb
pop
add
xor
std
test
adc
ljmp
clc
call
mov
imul
cmpsb
jl
sbb
pushl
fists
nop
in
adcl
lds
cmpb
out
test
scas
xchg
xchg
fildll
sub
enter
add
notrack
ret
cmp
lds
jle
stos
ds
pushl
in
icebp
push
popf
jns
movsb
xchg
push
test
mov
ljmp
fistpl
dec
or
mov
bound
lahf
js
dec
push
repnz
add
inc
aam
mov
cltd
daa
fwait
mov
loopne
mov
mov
shll
mov
ljmp
xchg
aaa
cmp
addr16
leave
jae
mov
faddl
xor
cmp
das
sbb
sub
push
lcall
into
xchg
repz
lcall
repnz
push
and
jge
mov
pop
dec
pop
xlat
mov
mov
loope
rclb
cltd
out
mov
push
loop
hlt
insb
hlt
and
out
incl
cmp
insb
push
fsubr
test
xchg
xchg
add
int3
dec
sbbb
xchg
or
incl
pop
cmpl
lcall
push
mov
push
lds
cmc
pop
push
cmp
jmp
imul
or
mov
mov
pop
sbb
push
jecxz
adc
out
leave
mov
imul
das
cli
in
call
aam
sbb
mov
or
fcomps
jno
cmp
mov
pushl
mov
xor
xor
pop
shr
mov
xchg
mov
subl
ds
in
lahf
repz
dec
je
jb
and
addr16
adc
and
mov
fistl
fstp
cs
fldl
js
sub
jns
xchg
insl
cmpsb
pop
mov
inc
mov
aaa
mov
clc
incl
adc
sti
mov
aaa
daa
hlt
xor
or
adc
cmpsb
in
jns
mov
inc
int3
fdivrp
insb
inc
int
fwait
test
imul
adc
jmp
js
sbb
lods
mov
sti
cmp
ja
dec
nop
lea
pop
les
add
mov
fcoml
les
incl
insb
lret
xorl
xchg
fcmovnu
imul
negb
daa
scas
cmp
in
jge
push
in
inc
or
xchg
test
rcrl
pop
or
fcoml
adc
jg
lcall
pop
leave
out
pop
adcb
adc
push
and
decl
push
adc
adc
fiadds
in
xchg
add
push
ljmp
rcr
repz
push
push
xor
push
xchg
pop
push
push
out
push
push
filds
pop
into
repnz
inc
xorb
sub
pusha
insb
mov
bound
popa
mov
mov
mov
ljmp
movl
outsb
xchg
sahf
inc
into
xor
jns
shlb
cmp
test
or
or
repz
lret
lea
shrb
repz
cmp
lcall
in
jmp
lea
jg
es
xchg
adc
pop
hlt
ss
lcall
aam
adc
fsub
loop
rolb
pop
or
sbb
pusha
scas
addr16
cwtl
lods
jb
incl
loopne
pop
call
xor
xchg
xchg
jo
adc
mov
aad
jne
out
mov
rcll
stc
or
and
cmpb
xchg
hlt
int
rorb
push
inc
mov
jbe
cmp
movsl
sub
dec
mov
addr16
popa
std
push
or
add
sahf
out
inc
add
out
cli
fsubrl
pop
lods
idivb
push
or
ljmp
incl
xchg
push
sti
jg
adc
jnp
das
and
shl
cmpsl
and
push
push
and
adc
or
lods
sbb
repnz
ror
xorl
xchg
outsl
add
push
in
iret
les
std
fldt
mov
mov
mov
repnz
ja
addr16
cmpsb
fs
mov
cmp
in
mov
lahf
mov
mov
xchg
add
ficompl
aad
ljmp
pop
cmp
shll
int3
ljmp
fldt
dec
jecxz
call
mov
mov
test
and
sarb
add
adc
jmp
mov
fmuls
lods
inc
outsb
sarb
or
hlt
and
addl
jmp
cwtl
mov
inc
xchg
xchg
adc
cs
xchg
icebp
xor
test
pop
cmp
inc
cmp
or
ss
jp
insl
jns
movsl
jecxz
dec
pop
cwtl
mov
jmp
push
xchg
or
out
adc
pop
xchg
loop
test
lcall
mov
push
clc
add
cltd
ret
jae
out
sbb
int
insl
jno
lods
sbb
ljmp
push
icebp
lret
pop
cs
jo
add
mov
ficompl
or
push
int
repnz
sti
std
int3
jmp
es
adc
std
pop
imull
pop
pop
xchg
mov
sbb
xchg
lahf
push
decl
xchg
adc
mov
or
in
rolb
ret
jp
push
add
or
mov
fnstcw
fwait
sub
add
pop
jl
jne
xor
pop
mov
adc
mov
jno
jmp
mov
mov
pop
mov
insl
mov
cwtl
dec
bound
mov
push
les
mov
dec
adc
jb
or
mov
adc
test
cld
sub
inc
adc
inc
dec
sti
cmp
mov
rol
cmpsb
cmc
sahf
inc
xchg
fdivrp
out
mov
bound
lock
mov
sub
push
icebp
mov
push
in
ss
inc
int3
lods
jmp
dec
sti
xchg
mov
or
push
fnstcw
xchg
mov
jne
cmpsb
add
mov
jecxz
dec
daa
push
cld
push
xorl
xchg
out
pop
jo
lock
fdivr
fcomip
jo
rclb
int
cli
outsb
mov
in
or
mov
mov
out
fcomip
jmp
or
push
add
pushf
adc
or
icebp
out
inc
jmp
cmpsb
mov
add
cmc
inc
sbb
int
addr16
adc
incb
pop
inc
dec
int
test
and
pop
and
ret
aad
cmpsl
divl
jg
ret
cmp
and
push
and
repnz
jmp
jge
outsb
test
pop
out
or
lret
out
std
nop
and
subb
pop
adcl
inc
test
aam
adcb
fprem
xchg
sub
xor
cli
loop
dec
dec
dec
and
sub
cli
jge
mov
gs
fstpt
xlat
xchg
lahf
repnz
adc
or
cmp
sub
stos
bt
cwtl
mov
mov
jae
or
jle
push
add
inc
popa
lock
clc
pushl
out
shll
mov
or
popa
adc
push
push
sti
insb
hlt
push
push
dec
subb
jnp
scas
imulb
lcall
jl
dec
xchg
insl
loope
or
pop
call
aaa
pop
sbb
sbb
add
pusha
and
xor
lock
psllw
sbb
test
fistps
pop
fs
adc
ljmp
pushf
insl
inc
int3
shll
insb
ret
and
in
jnp
push
sub
inc
adc
lret
mov
sub
jnp
sub
aaa
sbb
dec
and
mov
cmp
ljmp
jp
mov
fwait
jno
mov
scas
ljmp
push
icebp
pop
js
mov
inc
je
loope
cmpsb
push
imul
inc
adc
xchg
sar
mov
mov
xchg
dec
sub
mov
jae
iret
das
mov
add
cmc
ljmp
add
jnp
mov
into
lods
pop
sub
mov
xchg
sub
mov
jnp
mov
loopne
add
test
xor
sub
mov
mov
cmp
in
sub
dec
daa
lahf
or
rcl
mov
stos
xor
cmp
dec
lcall
inc
jge
psllq
mov
lds
in
sbb
sub
push
decl
dec
add
mov
xchg
push
repz
push
dec
jns
rcll
jmp
jmp
call
push
dec
aaa
pop
fbstp
pop
jp
jl
decl
mov
mov
stc
inc
jp
jo
push
cli
adc
mov
out
clc
jmp
xor
inc
pop
mov
ds
add
mov
fldt
hlt
or
ljmp
lods
mov
pop
mov
enter
loope
push
mov
mov
lds
pushl
mov
js
repz
lods
pop
hlt
aas
testb
dec
in
jnp
mov
mov
lcall
fs
pop
loope
inc
pop
and
mov
sub
jmp
ljmp
adc
fsub
scas
mull
rol
mov
push
cmp
js
aas
and
xchg
jne
imul
ret
jne
xchg
sub
mov
mov
movsl
push
xlat
xor
mov
sbb
pop
inc
insb
stos
inc
mov
icebp
dec
ficoms
cmp
mov
mov
das
jb
pusha
movsb
lods
sub
shll
lods
pushf
pushl
cmpsb
jge
and
jecxz
xor
addr16
or
stos
imul
sub
mov
call
aas
aam
imul
loope
fnsave
andl
cmpsb
cmp
test
xchg
dec
mov
push
xchg
xor
andb
xchg
in
mov
mov
outsb
ja
iret
lea
leave
cmpl
cld
dec
or
fwait
mov
decl
mov
dec
addr16
insl
enter
or
dec
mov
ljmp
enter
sbb
dec
in
aaa
mov
stc
sti
mov
jge
movd
push
mov
jmp
inc
push
js
sbb
pop
cld
and
jne
sub
rolb
xor
cmp
incl
pusha
std
mov
xchg
mov
jl
int3
adc
and
sti
sar
decl
aaa
push
shl
pop
cmpsb
xlat
sahf
adc
dec
mov
cmpsb
adc
sub
dec
xchg
jmp
aaa
ljmp
xlat
push
mov
and
jmp
movsb
out
lcall
incl
adc
mov
pop
and
lds
and
nop
mov
lret
daa
or
sub
inc
push
pop
mov
rorl
dec
ds
pop
orl
repz
xchg
pop
push
mov
incl
xchg
repz
xchg
test
mov
movb
xchg
mov
movsb
sbb
mov
sub
dec
push
adc
das
mov
adc
mov
add
fnsetpm(287
mov
in
incl
mov
push
sbb
adc
cmc
sbb
outsl
out
jae
sbb
in
mov
or
push
shll
mov
outsb
decl
mov
cli
lods
in
cmp
repz
out
sbb
or
mov
mov
mov
mov
lods
ja
lock
enter
decl
sahf
in
jmp
test
xchg
pandn
or
jnp
mov
mov
adc
lahf
div
adc
jmp
push
aam
mov
test
jg
incl
xor
fisubs
fdivl
fsubrl
pop
lods
adc
icebp
mov
outsl
jg
out
insb
inc
ss
mov
int
es
cmp
sar
lcall
je
stos
pop
in
xor
mov
pop
enter
xchg
fsub
mov
push
es
xor
mov
popa
or
mov
push
mov
int3
test
aad
pop
pushl
into
dec
jecxz
int3
mov
mov
dec
jae
xchg
leave
pop
in
mov
pop
mov
jo
jle
jl
out
cmpsb
daa
cmp
sbb
mov
sbb
inc
int3
testb
sarb
andl
popa
mov
mov
ljmp
push
cmp
cmpsb
xchg
dec
insb
in
adc
outsb
sbb
fildl
sbb
clc
jno
xchg
ljmp
cmp
gs
or
mov
mov
push
sbb
push
push
mov
and
mov
lods
decl
leave
adc
sbb
ror
xchg
adc
cltd
mov
call
pushl
and
bound
clc
gs
subb
pop
xor
push
sbb
insb
mov
adc
insl
ds
iret
sub
jmp
mov
and
call
sub
lcall
loop
xor
mov
sbb
adc
pop
xor
ja
test
cmpsb
aam
cmp
stc
ja
dec
mov
sbb
ljmp
test
or
scas
les
mov
in
cmp
bound
stos
jmp
sahf
xor
scas
pusha
mov
pop
in
xor
aad
test
pusha
cmpsb
jg
fisubrs
aam
outsl
dec
jae
mov
bound
add
ljmp
mov
mov
dec
roll
add
lea
jg
in
stc
jg
fs
nop
movsb
rolb
jmp
scas
into
lahf
sar
adc
lcall
and
dec
cmpsb
in
call
repz
inc
cmpsl
pop
cmp
fsubrl
xchg
loopne
fistpll
rcl
mov
call
jecxz
xchg
and
movsl
sbbl
jg
lret
nop
cmpsl
cltd
mov
mov
nop
adc
call
loop
lret
cld
xor
adc
inc
sub
shrb
dec
leave
dec
loop
incl
push
das
and
push
jecxz,pn
outsb
decl
mov
xor
inc
int3
mov
jo
push
xchg
sub
jns
xor
sti
add
insb
lock
inc
rclb
mov
xchg
cltd
inc
fidivs
and
push
jne
pop
jmp
push
xchg
xchg
popf
insl
push
cld
sahf
scas
repnz
rcrl
sub
mov
call
xchg
call
add
cmp
xor
mov
ret
inc
mov
call
repnz
and
mov
in
lahf
cld
mov
std
jge,pn
xlat
hlt
js
add
cwtl
out
ljmp
scas
add
push
iret
jae
sbb
mov
imul
push
cmpsl
daa
lcall
and
inc
test
xlat
push
inc
andb
cmpsl
cmpsl
dec
adc
stos
mov
call
outsb
push
mov
sbb
out
stc
call
int3
adc
out
fldcw
scas
xor
sbb
jg
outsb
mov
xchg
mov
fs
dec
iret
aaa
inc
popf
stos
mov
or
jmp
mov
or
cs
mov
inc
pop
mov
decl
jb
xor
lret
sub
push
and
mov
mov
push
sub
inc
shll
dec
ljmp
jmp
les
cmp
test
out
push
xchg
ret
js
rolb
decl
cmc
mov
loopne
cmpsl
sahf
daa
jle
mov
pop
pop
hlt
aad
mov
test
mov
addr16
inc
adc
lcall
cwtl
movsl
cmc
mov
adc
mov
jp
mov
sbb
iret
sbb
gs
ljmp
xor
inc
push
xor
fsubs
mov
dec
xor
cmp
xchg
ljmp
add
cmp
test
and
pushf
jnp
inc
std
ret
inc
pusha
pop
enter
adc
mov
stos
leave
clc
lcall
xchg
std
aaa
or
mov
push
test
jmp
bound
cwtl
ljmp
mov
add
xor
and
ljmp
fists
push
cmp
pop
imul
lahf
or
loop
xchg
daa
out
cmp
decl
call
push
sub
cs
cmp
fiaddl
xor
xchg
xchg
add
jge
lcall
cmp
pop
in
sbb
std
es
jmp
mov
mov
jl
in
and
jmp
or
add
xor
pop
dec
pop
mov
js
xchg
popa
xor
lock
jmp
fimull
adc
xchg
push
rorl
mov
fidivs
pop
xor
lods
jns
call
aam
sti
sub
outsl
cli
js
sbb
xchg
loopne
push
outsl
and
pop
je
movsl
call
jmp
repnz
mov
dec
pop
cmp
mov
sub
fsubrl
mov
decl
and
lea
out
sub
mov
mov
ds
cmpb
jmp
mov
jp
jo,pt
adc
pop
decb
aam
jl
mov
mov
ror
int
minps
xor
cmp
dec
out
addr16
test
pop
dec
imul
sti
jmp
dec
int3
jne
in
pop
sahf
mov
add
out
mov
or
ljmp
ljmp
rorb
dec
mov
repnz
cmpb
jg
push
subb
xchg
mov
es
or
mov
mov
cltd
mov
jbe
cmp
test
jl
xchg
sbb
call
cld
pushl
fcoms
jl
std
push
scas
sbb
sub
imul
push
clc
decl
xlat
mov
ja
push
les
sub
xchg
jl
add
lret
mov
testl
nop
xor
jne
jne
filds
inc
inc
mov
adc
daa
neg
test
mov
pop
mov
mov
dec
decb
mov
and
jae
inc
and
loop
cmpsb
sub
outsl
stos
fnsave
xlat
andb
pop
xchg
roll
cmp
mov
inc
test
cmc
push
pop
sub
pushl
lods
sbb
pop
pop
mov
rorb
aad
incl
mov
imul
int3
rcll
setno
outsb
call
sbb
lcall
mov
pop
ficomps
icebp
idiv
lcall
lds
in
pusha
or
dec
les
jle
mov
or
mov
mov
lods
adc
or
cmpsb
arpl
lock
mov
ljmp
push
insb
fwait
and
cwtl
test
call
and
or
pusha
mov
add
xor
jg
ljmp
cltd
and
movsb
or
sub
cs
cli
push
lret
jb
fs
mov
mov
hlt
mov
pop
nop
jns
out
dec
pop
aam
test
jg
jl
scas
pop
ret
adc
insb
cmp
mov
mov
xchg
inc
loope
mov
dec
pop
pop
shrl
cli
loopne
andl
out
dec
inc
loope
nop
jno
pusha
jg
cmp
loopne
jns
movsb
sub
xor
jno
cld
cmp
ja
outsl
les
dec
or
jp
xor
mov
icebp
fstpt
in
jnp
xchg
or
push
sub
push
adc
jns
es
and
xor
stc
sbb
aaa
repz
dec
push
scas
int
pop
jno
sub
clc
pop
or
mov
jp
jmp
mov
jb
or
stos
inc
add
cltd
mov
loop
dec
stc
cli
sbb
pop
iret
xchg
imul
add
xchg
xor
popa
jbe
add
loop
pop
cmpsl
jns
push
xlat
inc
frstor
sarb
ljmp
repnz
fcompl
pop
add
lods
inc
adc
pop
repnz
lods
fiaddl
out
xchg
jmp
push
mov
loop
js
pop
stos
insl
xor
fld
push
push
push
xchg
jb
or
jmp
and
xchg
ds
mov
add
cmp
or
test
jns
ljmp
xchg
call
outsb
adc
xlat
or
gs
movsb
out
movsl
cwtl
lcall
fistl
clc
lahf
cld
decl
inc
or
jo
pop
into
stc
cltd
mov
xchg
lods
pushl
xchg
aaa
sbb
or
push
sbb
push
jbe
mov
xchg
inc
push
neg
fstp
fistpl
loopne
jmp
dec
pop
insb
shll
add
fwait
add
mov
mov
out
jmp
clc
inc
or
dec
daa
cmpsl
out
test
mov
adc
sub
out
mov
mov
jbe
js
test
mov
jl
mov
cmc
addr16
arpl
sub
or
aam
in
test
icebp
decl
jmp
mov
inc
sbb
fs
and
xchg
test
xor
lods
call
pop
das
clc
or
xchg
add
mov
clc
in
lock
lcall
sub
mov
test
lahf
sub
cmp
stos
clts
pop
cwtl
cmp
icebp
in
pushf
push
int3
fadd
call
mov
scas
popa
stos
enter
sub
mov
cmp
aam
jg
stc
pop
popw
inc
pop
sub
outsl
mov
aam
divps
out
shl
sbb
dec
stos
rclb
loopne
pop
stc
daa
pop
icebp
xchg
push
sbb
sbb
fimull
call
push
rclb
and
pusha
sti
mov
xchg
cli
js
or
outsl
jp
push
ret
test
lods
sbb
fcomip
ljmp
rcl
and
repnz
jle
js
cmp
popa
mov
cmpsl
test
pushl
sbb
add
addr16
push
push
mov
mov
jns
jno
cmp
cld
ljmp
dec
leave
pop
stos
out
repnz
xchg
inc
jg
scas
and
dec
add
fs
pushl
adc
lods
pop
push
xor
xchg
rol
loope
pusha
gs
jl
fwait
mov
dec
lods
scas
scas
sbb
push
fsubr
and
jb
xor
mov
pop
std
jmp
pop
cmpsl
jo
test
lods
in
xchg
idiv
mov
adc
cwtl
rcr
outsb
pop
cmpsb
lcall
sub
bound
into
jmp
mov
call
pushf
cltd
scas
sbb
pop
and
sub
xchg
icebp
push
mov
stos
pop
ss
aaa
mov
add
mov
mov
pop
dec
mov
dec
test
lock
pop
scas
sbb
cmp
call
leave
aad
lcall
in
js
xor
push
daa
aaa
lcall
pop
cmpsl
scas
gs
test
in
mov
push
lcall
mov
shll
inc
mov
hlt
arpl
jp
call
outsl
hlt
adc
cmpsb
fnstcw
lcall
jle
and
addr16
sub
fisubs
sahf
sub
cs
imul
inc
outsb
push
inc
mov
mov
leave
push
sbb
sbb
sub
incl
dec
lods
xchg
xchg
adc
sub
cmp
lea
lahf
les
mov
add
dec
ret
aas
cld
jbe
push
inc
and
clc
inc
add
mov
pop
bound
sbb
jecxz
push
and
outsb
arpl
sbbb
and
and
ljmp
pop
pushf
loopne
jmp
pop
imul
push
shl
lcall
lcall
mov
movsb
jne
inc
pop
push
addb
pop
inc
test
les
jmp
incl
lock
test
adc
dec
mov
loopne
pushf
jns
adc
push
sub
xchg
in
adcl
jl
inc
pop
push
mov
mov
lods
outsl
sub
adc
mov
insl
in
call
adc
test
fyl2x
xor
mov
jp
inc
add
in
sub
xchg
pop
clc
decl
clc
movsb
dec
dec
pushf
xor
add
jge
ljmp
mov
cwtl
jg
scas
dec
lods
xchg
mov
xchg
icebp
inc
push
fwait
jge
adcl
mov
cld
jns
inc
mov
sub
and
lods
fs
pop
ljmp
decl
fnstsw
stc
mov
mov
sub
push
mov
pop
jne
outsb
ud0
or
sbbl
js
fidivrs
and
mov
mov
jae
ljmp
sub
sub
or
rcrb
cmp
lahf
sub
sbb
decl
rolb
xchg
cmp
imul
dec
xchg
sbb
and
lret
xchg
dec
mov
fisubs
outsb
pop
ficomps
repz
icebp
fwait
jl
adc
adc
out
add
push
and
pop
and
incl
cld
ljmp
cmp
insl
shrl
popf
mov
mov
mov
add
addr16
lcall
inc
rclb
aam
xchg
imul
jge
mov
int3
add
jmp
ret
sbb
jns
add
inc
mov
sti
add
push
sbb
data16
in
fdivs
sbb
incl
inc
add
aaa
dec
fdivrp
movsb
xor
dec
pop
insl
cld
push
and
movsb
rclb
lods
addr16
nop
loop
std
jnp
nop
es
ret
aad
js
pushl
cmpb
aad
mov
dec
arpl
push
xchg
fsts
loope
jg
lcall
pop
fcoml
ja
xor
outsb
cmp
test
push
mov
push
mov
xchg
cmp
std
std
or
dec
jg
xchg
lcall
mov
int3
sub
rcrl
xor
add
cmp
jmp
in
jmp
jecxz
jne
aaa
xor
jnp
addr16
add
push
jne
imul
stc
aad
xchg
sbb
jae
rorl
in
int
jecxz
mov
das
lahf
fidivs
dec
popa
and
test
adc
push
into
inc
mov
dec
psubsb
mov
lret
lret
add
cwtl
mov
sbb
outsl
push
lcall
mov
mov
sub
fdivrs
test
sahf
pop
je
sti
shrb
jns
popf
mov
icebp
cld
ljmp
push
cmp
sbb
pop
lods
jo,pn
incl
and
nop
out
arpl
fs
cld
mov
mov
xchg
xor
ss
int3
lcall
xchg
das
fs
out
fiaddl
lret
dec
pusha
subb
pop
mov
jg
and
xchg
and
jo
shrl
xor
xchg
fsin
pushl
sahf
push
repz
xchg
cld
outsl
inc
shr
lock
jp
mov
and
imul
ljmp
bound
pop
push
xchg
adc
rcll
lret
pop
pushf
sub
call
sub
js
fistpl
sub
push
loop
loopne
push
jecxz
sbb
stos
push
lret
ljmp
es
lods
push
mov
movl
dec
in
sbb
or
in
inc
add
jb
lock
pusha
xchg
cwtl
cmp
popa
sti
inc
nop
mov
push
das
sarb
in
sbb
jp
cmp
lods
outsl
xchg
iret
pop
inc
dec
scas
shlb
jb
inc
push
jmp
es
jle
in
movswl
xchg
ja
dec
sar
and
pushf
xchg
lods
insb
imul
enter
cli
pusha
add
dec
mov
jge
xor
mov
in
and
dec
cli
cmp
test
cli
mov
test
jmp
jne
es
push
aas
cltd
lock
xor
das
pop
clc
daa
scas
pop
lds
cmp
cmp
fdiv
pop
fcompl
inc
out
mov
pushl
imul
push
inc
aad
xchg
aas
lock
loope
call
xor
jns
loopne
xchg
decl
inc
cmpsb
cmp
pop
fisttps
sub
out
shll
mov
ljmp
push
fninit
adc
out
mov
push
jge
cmp
cmp
inc
dec
pop
push
aaa
adc
loop
jmp
mov
dec
int
ret
faddp
push
cmpb
add
mov
ljmp
ljmp
fnsave
pop
std
mov
mov
pusha
inc
stos
push
popf
ljmp
cs
fisttpll
adc
addr16
rcrl
cmp
pushf
outsl
jne
dec
mov
incl
popa
cmp
dec
lds
out
std
mov
push
fmull
out
imul
push
in
mov
incl
xchg
cwtl
jle
call
filds
sbb
add
negl
and
jbe
dec
xchg
sub
pushf
bound
cmp
ljmp
je
and
jno
cs
dec
add
sbb
mov
push
jle
fdivs
push
iret
ficoml
sbb
jl
cmpsl
jmp
into
movsl
dec
cmp
mov
mov
pushl
std
sbb
jl
sub
jnp
pusha
or
dec
fcoms
sub
addr16
in
inc
fsubrs
ret
jmp
mov
add
mov
popf
loope
push
int3
hlt
xor
out
leave
cli
loop
in
nop
ja
aas
dec
pop
mov
aaa
lock
dec
cwtl
int3
popf
cld
inc
pop
push
push
inc
clc
ljmp
push
cmp
in
mov
cmpb
and
lods
xchg
xchg
fnsave
inc
mov
lds
sub
mov
sar
lcall
ret
jp
push
mov
iret
add
sub
cmp
sti
jg
lcall
mov
jo
punpcklwd
in
insl
jecxz
imull
sbb
push
jg
ljmp
int3
cmp
mov
fldl
adc
lock
fldcw
mov
jmp
call
pop
movsb
dec
xlat
fadd
jo
push
inc
icebp
repnz
mov
aaa
cmp
pusha
outsl
lcall
jle
js
enter
xlat
pop
inc
jl
push
mov
dec
leave
push
mov
insl
pop
hlt
iret
inc
ljmp
cs
pop
jl
mov
fwait
cmp
jg
das
xor
iret
xchg
call
ljmp
sbb
movb
xchg
and
or
mov
lcall
loopne
inc
push
dec
cmp
or
jle
aam
in
xchg
in
fwait
test
xchg
dec
outsl
push
fs
sbb
out
cmp
and
xor
and
push
ja
fucom
lcall
mov
jg
mov
xor
ljmp
sbb
leave
inc
mov
ror
mov
outsb
scas
stos
pop
in
call
push
xchg
mov
shll
call
mov
test
jp
cmp
rolb
xchg
jo
jge
push
jo
pusha
insl
out
pop
fs
incl
pop
ss
add
mov
pusha
nop
mov
loop
lcall
lea
inc
data16
in
out
lds
les
push
mov
hlt
aas
jne
dec
mov
xchg
sbb
cmpsl
add
dec
push
outsb
sbb
iret
push
cmc
pop
mov
sbb
test
sub
fwait
dec
ja
push
xchg
sub
adc
dec
xchg
clc
mov
testl
dec
or
mov
push
jo
inc
xchg
xchg
jbe
mov
stc
in
call
fsubl
push
mov
mov
sbb
xchg
fiadds
lods
mov
imul
clc
hlt
xchg
shll
mov
mov
mov
or
mov
push
mov
decl
dec
lds
lahf
sub
jge
adc
jae
add
xchg
and
js
dec
cmpsl
rcrl
xor
lods
mov
inc
lock
insb
sti
test
cmp
ja
inc
icebp
cs
dec
jl
sub
xor
xchg
mov
cmp
in
pusha
test
pop
pop
stc
outsb
leave
insl
mov
sub
cli
mov
dec
add
sub
out
sub
test
mov
sub
ljmp
outsb
xlat
imul
insl
and
lret
aas
mov
pop
push
pushl
sub
loope
lods
mov
rorb
push
iret
dec
inc
insl
push
lods
call
decl
xor
pop
ss
adc
sarb
mov
jg
push
dec
pop
stc
bound
and
dec
or
mov
mov
add
xlat
xchg
loope
clc
jecxz
mov
sbb
cmp
mov
push
lods
push
dec
add
insl
mov
lock
mov
push
pop
or
adc
cs
ljmp
mov
pop
call
movsl
xlat
mov
dec
lahf
stc
ret
mov
push
scas
lods
ljmp
in
bound
repz
pop
push
lret
adc
and
lret
sbb
cld
enter
or
push
mov
pop
ljmp
testb
xchg
dec
mov
fs
dec
jmp
ljmp
rol
xor
mov
out
jnp
xor
and
xchg
loopne
aas
mov
xchg
pushf
cs
jmp
jecxz
lret
push
out
xor
lcall
adc
jne
jbe
xchg
repz
inc
cmp
mov
mov
and
mov
cmp
sbb
mov
xchg
incl
push
je
dec
sbb
jg
es
imul
fidivrl
sub
fstps
neg
jl
inc
pop
jg
jmp
push
outsl
lds
pop
scas
lods
mov
mov
sbb
in
mov
sub
incl
push
cwtl
in
outsl
mov
xchg
jae
js
cmpsl
xor
push
test
fiaddl
ds
aad
push
mov
decb
adc
cmp
ja
and
aas
jo,pt
dec
loopne
add
nop
mov
test
scas
mov
mov
or
call
or
and
scas
inc
sbb
and
rcrb
or
test
cmpsb
cwtl
or
sbb
movsl
add
cmp
cmc
sar
mov
dec
clc
jmp
adc
cmc
icebp
dec
mov
mov
psubd
icebp
cltd
cld
test
cli
insb
mov
mov
mov
icebp
into
pop
lahf
int
fnsave
leave
dec
loope
add
and
xchg
inc
jne
adc
in
ljmp
inc
xchg
mov
add
mov
cmpsl
dec
mov
xor
or
mov
sub
icebp
aam
jno
push
insl
clc
fcompl
pop
sbb
dec
xchg
xlat
ljmp
ljmp
jb
leave
jecxz
faddl
insb
bound
gs
notb
mov
addr16
nop
ljmp
inc
andb
adc
scas
aam
mov
loopne
mov
loopne
insl
les
in
call
cmpps
mov
or
or
lcall
popf
cmpsb
cli
xor
cmp
decl
fcomps
xchg
arpl
jecxz
outsl
cs
inc
dec
daa
ss
or
call
mov
push
add
ret
icebp
mov
cmpsl
adc
sub
sbb
jp
cld
outsl
cli
in
rcrl
push
mov
push
mov
pop
fsubl
mov
add
fcomps
cmpl
jo
fstpt
std
data16
lds
outsl
jp
cs
or
sbb
cmp
popf
mov
lret
adc
push
mov
push
lcall
mov
fsubr
mov
mov
ds
ljmp
inc
xor
xor
jg
mov
xor
dec
mov
jg
call
adc
cwtl
ret
jg
inc
mov
out
loope
or
aaa
xlat
xor
call
fwait
movsb
enter
mulb
pop
rcrl
jne
fwait
sub
mov
cmp
or
mov
gs
rclb
mov
stos
xchg
pop
sub
movsb
insb
mov
in
push
add
pop
or
mov
add
adc
clc
fsubrs
stos
dec
jle
mov
and
incl
je
mov
push
and
fsub
rolb
jg
cmp
mov
cmp
sub
lods
arpl
fdivrs
and
pop
cs
xchg
les
jg
mov
popa
adc
aas
addr16
clc
cmp
inc
pop
ja
lcall
mov
loop
addb
jns
push
sub
fildll
loope
iret
push
ficoms
jmp
loop
jb
inc
aaa
xchg
sbb
mov
lods
sbb
mov
test
sti
out
test
call
xor
jbe
mov
popf
lods
cld
fisubl
movsb
mov
mov
jp
cmp
stc
add
ret
cli
adc
nop
imul
pusha
enter
pop
hlt
ljmp
xchg
movsl
sbb
mov
pop
out
pop
cmc
lcall
movsl
sub
jmp
jg
lock
pop
lahf
or
addr16
inc
jg
sbb
mov
outsl
jg
mov
adc
mov
cmc
pushl
push
pop
sbb
ljmp
mov
adc
decb
lcall
cmp
push
les
mov
frstor
inc
or
repnz
fldt
les
pusha
mov
mov
fwait
pusha
pop
cmp
rorl
sub
scas
out
push
xor
shrb
js
jg
push
xlat
or
pop
call
jmp
jmp
ljmp
xor
mov
subl
decl
dec
jecxz
stos
push
in
inc
shl
call
call
pop
mov
ss
call
inc
push
mov
xor
popa
mov
ljmp
enter
jg
pop
hlt
decl
dec
or
push
and
outsb
inc
mov
repz
lcall
dec
movl
pop
inc
adc
xchg
mov
mov
fbstp
call
mov
js
popf
sub
daa
jns
add
mul
pop
bound
ss
popf
inc
mov
jmp
pop
arpl
fcomi
dec
fsubl
arpl
jg
mov
inc
clc
push
adcl
pushl
xchg
hlt
jne
push
adc
pop
std
ret
stc
sub
call
add
jb
cmp
cmp
push
cmpsl
inc
jno
loopne
and
dec
mov
lds
mov
mov
ror
dec
cmc
and
add
movsb
xor
in
fisubs
jmp
insl
mov
or
std
jmp
mov
enter
arpl
dec
popf
jmp
sbb
or
sahf
lods
pushf
push
push
pop
into
mov
dec
push
repnz
lock
and
rorl
loopne
insl
test
cmp
outsl
sbb
fs
lcall
mov
dec
xchg
leave
pop
cmp
mov
pop
mov
xchg
mov
dec
push
testl
mov
cmp
mov
icebp
pop
inc
cmc
sbb
gs
cmp
cmp
int3
out
sbb
lock
shrb
mov
cmp
mov
inc
sub
inc
push
dec
push
rol
loope,pn
mov
movsb
xchg
popf
xor
mov
push
iret
out
jno
xchg
cmpsb
das
clc
jg
jns
inc
add
popa
mov
adc
flds
mov
std
mov
adc
jmp
inc
sarb
lods
or
mov
mov
out
mov
mov
jno
xchg
mov
js
test
jp
and
loopne
incl
push
fnstcw
leave
xchg
mov
mov
inc
dec
mov
or
incl
sub
mov
mov
xchg
outsl
push
out
lret
fucomp
inc
icebp
inc
xor
ljmp
jnp
pop
push
ljmp
rorl
orl
call
push
in
and
movsl
jg
xor
fisubl
aas
out
xchg
push
cli
jmp
scas
mov
aad
mov
hlt
nop
lcall
xchg
inc
mov
decl
ljmp
cmpsb
pushf
dec
pop
mov
jo
xlat
lcall
ljmp
sti
or
je
leave
jne
mov
out
cmc
sarb
cli
lahf
fs
out
cli
sbb
adc
add
daa
xchg
add
rcll
jg
jo
inc
sbb
push
dec
frstor
in
sbb
pop
inc
lods
inc
jnp
mov
push
jecxz
pushl
cltd
adc
pop
inc
jo
aam
mov
ljmp
imul
dec
dec
sar
lock
dec
dec
push
adc
je
push
fwait
gs
and
js
incl
cld
pop
mov
dec
outsb
cld
dec
icebp
pushf
outsb
rclb
je
decl
sbb
ljmp
jl
lods
or
mulb
subb
pushl
into
jo
lods
jae
jb
rclb
loope
mov
xchg
decl
mov
inc
push
lret
sahf
insb
cmpsl
push
mov
xor
xchg
pop
ds
mov
pop
sub
test
sub
loope
scas
jge
loop
add
inc
popa
cmp
fisttps
das
pushf
push
sbb
ljmp
and
jl
mov
int
mov
into
roll
mov
icebp
incl
mov
cwtl
call
push
adc
jnp
inc
call
shl
clc
fs
xchg
or
jmp
dec
fcmovu
mov
icebp
push
pop
pop
bound
xor
cmp
and
or
cmp
incl
xchg
pop
xchg
add
xchg
xor
scas
movsl
lock
and
movsb
mov
pop
shlb
or
in
stc
lods
fs
fwait
andb
add
call
jae
ror
arpl
cld
lcall
aam
mov
test
imul
xchg
cmp
inc
sub
je
fs
je
jo
aam
xlat
sub
sbb
sub
jmp
jmp
jmp
outsl
adc
jo
pop
outsb
dec
add
fistpll
mov
cmc
inc
push
sbb
cmp
incl
mov
add
mov
xchg
xchg
cltd
cmp
das
push
mov
scas
add
push
pop
jb
mov
std
inc
movsb
call
adc
nop
or
aaa
mov
sbb
and
or
test
jmp
pop
or
dec
push
pop
js
push
add
cmp
fwait
sahf
push
lds
inc
leave
mov
loope
jno
lcall
sbb
pop
fcompl
std
cmpsb
mov
shll
cli
mov
ljmp
mov
sahf
daa
cmp
and
lods
add
xlat
aaa
popa
pop
pop
adc
into
out
mov
decl
dec
jb
pop
test
cmp
movsb
enterw
mov
mov
add
call
xor
and
lcall
out
and
lcall
pop
inc
cmp
inc
mov
rcrl
out
dec
popa
jle
dec
mov
or
daa
or
jmp
shr
inc
xor
lret
insb
pop
pop
cmp
pushl
faddl
mov
mov
cli
lret
mov
es
in
movsl
shrl
mov
ljmp
movsl
in
ret
xor
jo
lds
dec
out
push
les
test
mov
clc
ret
or
pop
fs
cmp
daa
sub
or
cmp
call
xlat
nop
jbe
xchg
icebp
jbe
aam
adc
test
jp
int3
mov
fbld
data16
inc
pushl
push
mov
pop
mov
adc
and
popf
adc
inc
lahf
pop
add
jge
push
mov
mov
lret
push
adc
sub
mov
scas
sub
dec
lcall
jmp
mov
lea
mov
lods
push
fldt
mov
dec
ds
cld
outsb
sub
mov
cmp
dec
adc
mov
cmp
sbb
daa
cmp
lcall
fnsave
inc
imulb
sbb
movsb
lea
mov
cld
mov
int3
dec
scas
or
popf
mov
xchg
dec
flds
and
call
std
xchg
pop
add
cmpsb
cmp
pop
sbb
mov
es
mov
xchg
inc
scas
pop
call
mov
jbe
mov
pop
into
inc
inc
mov
xlat
jnp
cmc
js
adc
xor
fildl
enter
push
das
inc
mul
repnz
inc
aam
orb
lret
jmp
call
cli
stos
or
pop
push
add
push
ljmp
lcall
sub
ss
scas
inc
sbb
lock
inc
sbb
sub
cmp
cmpsl
lahf
push
lret
and
arpl
outsb
or
rol
jmp
popa
lcall
enter
jge
fisttps
sbb
dec
out
cmp
jg
jae
xor
test
mov
idivb
in
sahf
dec
push
mov
pop
lock
sahf
out
icebp
lcall
mov
arpl
mov
adc
jmp
pop
clc
or
sub
inc
mov
pop
les
aad
addr16
lret
or
sbb
mov
in
decl
pop
fidivs
mov
xchg
jp
xor
jb
scas
cmpsl
add
jmp
add
and
xor
jge
cmpsb
sub
fildl
dec
pop
pop
loop
fbld
test
pop
aam
addr16
jae
mov
mov
fwait
je
mov
xor
and
daa
xchg
cs
or
test
fcomip
sbb
mov
xor
jnp
xchg
loopne
push
addb
mov
fsubrs
call
mov
addr16
es
jo
add
jb
push
das
mov
sahf
push
pushl
sarb
cld
jb
cmpsb
sti
movsl
add
ret
mov
inc
push
loop
and
jmp
lock
sbb
sub
les
pushf
rorl
bound
sbb
jbe
cwtl
scas
scas
or
pushl
adc
and
xchg
or
mov
das
jns
cld
mov
pop
jmp
scas
jp
fadds
mov
imul
cmpsl
fldcw
jge
daa
jne
rol
in
cltd
mov
mov
dec
push
hlt
xchg
pushl
aas
push
mov
fldl
sub
subb
sbb
push
push
movsb
in
and
cmp
test
gs
inc
push
push
lds
sbb
stos
jmp
jo
ljmp
mov
sbb
fidivrs
cltd
ljmp
cwtl
inc
bswap
or
jbe
iret
add
dec
mov
loopne
jg
repz
nop
fnstenv
jge
cmp
in
js
mov
sub
mov
nop
push
leave
dec
rcr
cmc
pushl
hlt
cmp
cs
sbb
out
mov
jo
fisubs
jmp
stos
aaa
mov
xor
pushf
out
and
repz
aas
shrb
aad
je
ret
cmpsl
xchg
pop
inc
ljmp
sti
cmp
pop
xor
pop
cmp
shlb
lret
adc
mov
pop
pushl
test
scas
aam
mov
dec
pop
loope
xor
mov
lret
in
incl
das
inc
mov
inc
clc
mov
push
xor
xchg
stos
dec
adc
mov
mov
leave
push
add
jno
in
or
add
or
mov
mov
decl
jle
testl
jae
in
insb
inc
push
dec
fs
xchg
inc
movsb
scas
fstpt
inc
mov
cmpsb
add
ds
sahf
inc
stc
dec
and
lcall
mov
ret
cmp
xchg
in
popf
xchg
pop
out
int
push
ret
jp
inc
daa
outsb
pop
ss
push
pop
call
arpl
jecxz
out
mov
pop
out
push
xchg
out
mov
in
sub
cmp
lock
adc
jge
out
test
dec
fdivr
jmp
mov
mov
and
cli
jecxz
insl
scas
stc
jae
xchg
jno
jmp
inc
or
cli
adc
mov
in
sub
pushl
mov
gs
mov
mov
xchg
or
flds
and
lret
pop
idiv
lcall
push
aas
in
adc
data16
sbb
pop
xor
mov
adc
dec
pop
cmp
incl
pop
popa
mov
jbe
popf
xor
cmpsb
loope
pop
or
push
mov
clc
mov
jne
out
negb
incl
mov
jae
movsl
lahf
bound
mov
repz
mov
push
ljmp
xchg
push
call
and
xlat
bound
cmp
clc
fimuls
aas
call
popf
popa
lock
test
push
cwtl
in
sub
stc
popa
insl
test
sub
decl
cmp
cli
ror
popf
dec
imul
mov
push
in
hlt
test
dec
pop
popa
cmp
xchg
push
jl
dec
int3
jnp
es
orb
jge
adc
sbb
mov
add
push
and
test
mov
ljmp
xor
fwait
aaa
xchg
stc
push
jle
and
dec
sahf
jbe
add
jmp
lret
pop
jbe
push
mov
negl
lods
cmp
jns
mov
xor
mov
sub
enter
pop
xchg
mov
fsubrs
bound
pop
inc
addb
test
pushl
pop
mov
push
pop
pop
int
paddd
lods
loop
fmulp
dec
inc
int
mov
inc
mov
cmp
xchg
jle
bound
cmp
xchg
push
add
cmp
mov
jg
and
pop
sub
cmpb
rcll
jae
xor
decl
rolb
lcall
mov
add
lods
lcall
inc
push
fs
add
pushl
pop
mov
push
adcl
test
sub
mov
or
leave
lods
cltd
inc
es
cmp
cmpsb
decl
sub
fisubs
lgs
ds
xchg
dec
jmp
mov
add
movsb
jb
and
aam
test
mov
add
xlat
inc
cltd
decl
mov
jnp
adc
xor
jnp
test
fwait
das
cmpsl
es
inc
push
std
call
cld
adc
jbe
push
imul
jns
push
faddp
hlt
or
mov
in
cwtl
sub
jb
and
sbb
mov
imul
scas
and
inc
mov
jmp
or
adcb
xchg
push
out
arpl
jp
stos
cmp
jo
mov
xchg
mov
pop
fldt
or
xchg
mov
scas
aas
mov
push
cli
lods
pop
or
adc
xchg
cmp
sbb
mov
sar
sbb
jmp
dec
sub
mov
sbb
gs
cwtl
mov
mov
push
xor
out
fsubrs
or
add
push
cwtl
jb
loop
clc
mov
mov
and
decl
ret
sub
mov
lcall
xor
mov
loop
sti
xchg
movl
lcall
push
adc
push
sub
or
dec
pusha
sub
fisttps
and
sub
aad
and
jl
pop
ret
ss
das
mov
sub
cmp
imul
pop
or
into
push
popa
in
insb
cmp
int
lock
push
popa
mov
das
test
inc
outsb
dec
aad
test
pop
mov
das
cwtl
pop
adc
add
cmp
call
stc
lds
lret
cmc
loope
cmp
popa
cmpsl
sub
mov
cmp
popf
mov
popa
repz
in
test
sub
cmc
jle
loopne
xlat
insl
lock
jg
test
or
push
pop
aas
adc
inc
lods
out
hlt
and
xorb
lcall
leave
jl
addr16
pop
fs
imul
add
or
jmp
call
dec
nop
push
shlb
repz
call
xchg
and
mov
mov
mov
lock
lcall
pushl
mov
jg
xchg
jo
test
bound
iret
sub
loopne
rorl
lcall
cwtl
pop
pop
mov
cmp
xor
jp
hlt
call
pop
mov
inc
sar
jmp
aad
imul
iret
cltd
mov
out
fildl
sub
shrl
mov
ljmp
loope
into
pop
pop
js
daa
clc
inc
sbb
test
lcall
movsl
xchg
sbb
or
dec
dec
es
xchg
leave
pop
daa
loopne
fsubp
js
jg
decb
fs
mov
fwait
jp
or
xchg
int
movsb
lret
aad
lcall
push
xchg
cld
inc
pop
lahf
loope
das
mov
inc
push
pop
hlt
daa
ret
call
lock
push
xor
adc
pop
jne
mov
lods
adc
incl
jecxz
cltd
shrd
jnp
cmp
pop
mov
pop
cmpsl
or
popf
pop
mov
scas
jl
jb
mov
lods
pop
out
call
stos
jecxz
cs
cmp
jno
cmp
sbb
pushl
iret
adc
popa
and
mov
mov
pop
popf
push
cltd
jnp
dec
mov
lcall
xchg
out
ret
inc
cmp
ljmp
pusha
int
test
xor
pop
icebp
movsb
jo
ret
pushf
and
cltd
or
sbb
out
jo
mov
sbbb
out
cld
jne
and
les
in
loopne
fbld
outsb
out
dec
push
movsl
mov
inc
cmp
jg
push
cs
and
rorl
in
adc
jnp
jmp
jle
mov
lcall
xchg
jl
push
or
cli
test
adc
hlt
scas
lcall
stos
ficoms
push
mov
push
jp
add
dec
xor
fdivrs
mov
sar
lcall
mov
mov
imul
jmp
into
add
out
adc
jg
mov
adc
mov
xor
xchg
xor
xlat
mov
lret
adc
jmp
and
fwait
xor
push
inc
les
fdivl
in
cmpsl
cld
add
adc
lods
iret
mov
data16
mov
xlat
into
inc
xor
cmp
jo
stc
pop
call
mov
lea
pushl
jmp
xor
sub
jo
cld
adc
movsl
sbb
mov
mov
jmp
jb
fistps
test
dec
loop
test
fwait
arpl
sarb
sub
xchg
dec
test
push
fsubs
jne
sbb
jl
mov
js
adc
insl
adc
sbbb
fildl
andl
ds
sub
push
stc
push
xchg
and
ljmp
lods
jmp
in
adc
popa
out
cli
subb
mov
mov
adc
pop
add
lcall
lods
pop
repnz
mov
pop
out
jge
ja
iret
stos
cmp
add
out
mov
or
add
call
inc
or
jno
ja
inc
fstl
rclb
inc
or
pop
call
in
or
xor
xor
imul
mov
call
imul
std
add
jmp
push
dec
mov
inc
mov
or
cwtl
push
inc
mov
mov
nop
and
lcall
call
in
sub
in
xchg
sub
lcall
xchg
lock
lods
xchg
pop
xchg
jbe
decb
cli
scas
jmp
out
in
test
cmp
dec
sarb
icebp
mov
daa
adc
cmp
mov
shr
cmp
fadd
jmp
inc
ljmp
xorb
sar
mov
pop
mov
jecxz
push
cmpsb
xor
jg
out
xor
ljmp
jmp
cmc
jmp
out
inc
orb
pop
fimull
movsb
in
or
call
jne
inc
call
test
inc
xchg
adc
xorb
mov
cld
test
sub
inc
or
fidivrl
mov
movsl
xor
jo
arpl
mov
mov
and
mov
lcall
push
adc
mov
dec
adc
hlt
imul
xor
fdivrl
icebp
cmp
insb
cmp
mov
mov
andb
mov
fwait
mov
push
cltd
push
and
fs
cmpsl
lret
fucomp
pop
and
mov
popa
jmp
adc
punpckhdq
fwait
outsl
sar
addr16
pop
insb
inc
repnz
push
mov
lea
pushl
clc
jp
aas
repz
clc
popf
mov
jb
cmp
mov
lret
cmp
xchg
dec
mov
sub
cmp
xor
or
into
bound
or
mov
push
lods
lahf
dec
outsb
scas
loopne
outsl
xchg
shll
ja
jecxz
sahf
add
fldt
je
push
aad
iret
xchg
scas
mov
test
ss
out
bound
adc
pusha
pushl
scas
push
addr16
popf
shr
cmovp
fs
xchg
xlat
rorb
jb
ret
inc
bound
dec
mov
hlt
in
add
push
push
ds
iret
test
jp
out
cmp
dec
xchg
cld
daa
mov
add
pop
jnp
ss
dec
out
push
or
clc
xchg
imul
call
cmc
push
std
push
jecxz
jg
xor
mov
add
lods
xchg
sar
ljmp
and
iret
xchg
mov
cmp
xchg
scas
call
imul
adc
xor
cmpsl
cmp
adc
incl
cmp
arpl
outsl
or
sub
loop
lcall
push
or
jne
outsb
dec
test
repz
xlat
outsl
das
pop
std
das
es
cltd
adc
and
cmp
add
dec
sub
push
or
mov
ret
dec
jecxz
mov
mov
sub
in
leave
adc
push
push
fadd
cmpsb
and
xor
in
mov
stos
incl
xchg
mov
sub
xor
pop
push
xlat
mov
arpl
jns
nop
iret
mov
std
fldl2t
pop
inc
dec
lret
out
test
test
call
cwtl
pop
pushf
mov
cmp
stc
xor
inc
scas
mov
push
mov
add
cli
xor
inc
testb
sub
push
into
jle
loop
xor
mov
lcall
mov
lock
aad
shlb
sub
pop
jno
in
mov
imul
mov
cmp
sub
lahf
outsb
stos
out
jp
imul
cld
decl
and
mov
mov
sbb
addr16
adc
sbb
add
add
push
ja
jbe
sbb
mov
mov
pop
aam
inc
in
loop,pn
repz
roll
mov
loopne
mov
sbb
sti
ret
sub
pop
pop
jno
les
push
lcall
iret
pop
sub
and
pop
stos
add
pop
cltd
jg
stos
not
push
cmc
push
mov
lods
pushl
or
xchg
aas
lahf
cs
cltd
pop
cmpl
hlt
jp
mov
jne
inc
mov
or
inc
daa
clc
jl
out
jnp
mov
pop
sbb
sahf
mov
andb
mov
cmp
add
movsl
pextrw
cmp
inc
sbb
es
lcall
imulb
push
dec
sti
testl
test
pushf
nop
jno
push
adc
jmp
mov
xor
mov
mov
lea
mov
dec
jp
mov
lcall
sahf
rorl
adc
mov
jmp
mov
add
pop
mov
ret
adcb
imul
jmp
mov
insb
pop
popa
loopne
in
xor
pop
cmp
mov
fildl
je
and
popl
cmp
in
call
decl
jl
dec
xchg
and
out
nop
lods
fimuls
sbb
push
mov
mov
fmulp
orl
into
jg
leave
mulb
push
lcall
pop
jnp
addr16
popa
or
nop
or
pop
jl
and
mov
jg
aad
ljmp
push
stos
or
xor
ja
movsl
shlb
push
inc
mov
call
sub
scas
jp
loope
xor
imul
icebp
call
dec
adc
mov
mov
decl
cmp
xchg
or
lret
sahf
pushl
cltd
xor
mov
jg
mov
out
adc
jg
rolb
lret
ljmp
xor
test
xchg
daa
outsl
test
sbb
cmp
or
aaa
or
pop
adc
ljmp
mov
mov
lcall
mov
cmp
jmp
lcall
push
ljmp
jle
outsb
push
int
leave
mov
push
std
mov
dec
shl
cmpb
mov
jecxz
lea
scas
jp
and
dec
sbb
daa
pop
xchg
lods
ret
decl
mov
out
jle
adc
xchg
xor
xchg
dec
add
xchg
jg
pusha
push
inc
lahf
jne
mov
ljmp
inc
cs
aaa
std
jg
and
sbb
outsb
pop
cmp
jae
push
cmp
mov
inc
add
mov
dec
hlt
adcb
fcompl
push
ljmp
mov
mov
popa
cli
popa
stc
push
addb
aam
iret
xchg
inc
lcall
and
push
sahf
pusha
testl
sub
out
rclb
sahf
out
fsts
sbbl
jno
push
cltd
mov
out
in
and
pop
insl
sub
daa
in
incl
dec
xor
push
add
ds
outsb
xlat
testb
sahf
loopne
jmp
jg
fstp
notl
icebp
jno
add
ds
pop
sbb
xchg
testb
fisubrl
outsb
lcall
inc
popa
addr16
test
or
cmc
xchg
push
xchg
test
sub
int
pop
enter
lcall
inc
mov
jo
sub
mov
stc
cmp
push
push
ret
test
inc
pop
test
lahf
inc
or
out
lock
push
sub
call
lods
add
hlt
mov
or
and
xchg
hlt
inc
inc
adc
pop
hlt
aas
ficompl
fwait
sub
arpl
in
scas
les
ljmp
je
lcall
ffreep
jno
fdiv
fwait
pushl
add
dec
mov
repz
aaa
push
pop
test
sarl
outsb
sahf
js
lds
in
mov
addr16
mov
push
mov
mov
leave
mov
outsl
jb
lret
in
adcl
jmp
movsl
sub
add
repz
mov
divl
ds
movsl
cmp
or
icebp
or
xor
dec
dec
mov
aam
mov
ret
das
cmp
ret
sahf
xor
sbb
leave
fldcw
cmp
sahf
sbb
call
push
xchg
sahf
mov
rclb
jne
xlat
fiadds
jg
fstps
fisttpl
decl
test
int3
adcl
xchg
into
scas
inc
into
xchg
cmp
mov
fistl
incl
lea
iret
repnz
and
mov
jg
xchg
mov
ss
roll
fidivrs
ljmp
or
jnp
testb
cli
js
push
xor
and
dec
or
ljmp
rorb
lret
sti
jge
loopne
adc
mov
dec
cld
mov
cmp
lahf
lods
push
mov
adc
ss
fcomip
fisttps
push
jmp
lods
inc
fcoms
bound
xacquire
xchg
in
cmpsb
add
ljmp
push
inc
leave
lods
fadds
jl
sarb
jmp
cwtl
dec
addr16
xor
push
pop
ret
add
mov
mov
cmp
inc
add
test
lea
cmp
mov
xor
fadds
or
sbb
in
mov
cs
mov
inc
pop
pop
lcall
in
mov
pop
dec
imul
or
lret
pop
decl
out
and
cmp
outsb
jle
ficomps
lret
fisubrs
sbb
sub
outsl
pop
hlt
mov
mov
inc
scas
out
add
lods
cli
mov
jbe
decl
lock
lea
pop
mov
pop
cli
push
xchg
cmp
jo
ljmp
xor
cli
repnz
shr
es
inc
push
call
mov
xor
incb
movsb
repnz
hlt
incl
and
cmpsl
adc
jno
inc
fucom
es
xor
imul
lcall
sbb
pop
jmp
movsl
jmp
dec
dec
inc
or
out
stc
and
and
cltd
clc
mov
push
negb
sahf
ljmp
daa
mov
fs
imul
mov
jg
pop
dec
fprem
mov
jmp
pop
pop
cmp
arpl
xlat
lcall
leave
ljmp
dec
test
xor
fwait
jnp
scas
loope
lret
out
incl
dec
mov
push
mov
or
mov
imul
inc
ret
in
fwait
pop
sub
in
arpl
add
fsubr
arpl
divb
or
das
clc
jmp
fbstp
lea
in
cs
pop
int
int3
jmp
es
aaa
aaa
dec
std
dec
outsb
push
or
rcrb
inc
frstor
jg
add
xchg
dec
stos
jecxz
and
ljmp
lcall
test
pushl
sub
push
lret
xor
lock
cmp
sbb
aaa
int
mov
jge
lea
xor
lods
push
and
mov
cwtl
fldenv
cmpsb
data16
xor
stos
arpl
shrb
xchg
cmpsl
push
jg
dec
mov
xor
ret
lods
insl
add
daa
stos
dec
jmp
pop
push
add
aaa
dec
jmp
imul
mov
aaa
fwait
push
sub
mov
mov
adc
fistpll
pop
data16
pop
hlt
pushl
cwtl
push
add
int
jg
pushf
xor
ss
lds
mov
scas
fidivs
iret
insb
cwtl
int3
sub
jno
jbe
sahf
cmc
adc
popa
add
and
dec
call
outsb
pusha
testl
mov
std
incl
aaa
pop
xlat
std
mov
sbb
popf
stos
xor
pop
jecxz
xchg
inc
std
iret
pmulhw
mov
in
pusha
stos
mov
mov
std
adc
mov
adc
xchg
mov
fwait
xlat
enter
psrad
push
ds
cmc
mov
enter
clc
xchg
sarb
xchg
pop
inc
pusha
fbld
pop
mov
hlt
call
enter
sbb
adc
jle
add
ret
jl
js
add
jae
repnz
arpl
test
jp
incl
mov
cmpsb
call
incl
mov
push
stos
jae
sbb
inc
xchg
inc
je
push
lods
jmp
decl
cmpsb
fmul
ret
sahf
push
inc
cmp
mov
mov
sbb
xchg
mov
lcall
inc
or
mov
sub
dec
push
insl
cmp
cmp
sub
xor
outsl
std
fwait
dec
push
orl
pop
imul
shlb
pop
or
mov
addr16
incl
addr16
dec
dec
push
imul
cmp
push
xor
add
jns
fsubrl
or
je
lcall
fistpl
add
lods
pop
ljmp
sub
pop
push
cld
and
inc
gs
fcomip
incl
lods
sarb
rcll
aam
xor
cmp
cmc
and
and
lods
stos
inc
mov
jmp
fdivr
sbb
mov
andl
adc
mov
adc
jp
popa
mov
loope
cmp
ret
rcrb
cld
add
mov
xor
sbb
or
add
call
jge
cwtl
popf
leave
and
ret
mov
stc
sar
cmp
lock
lock
fldenv
add
cltd
sbb
sbb
lods
iret
adc
dec
xchg
ret
pop
dec
xor
decl
or
or
xor
shr
xchg
cld
leave
and
dec
cmc
loopne
inc
repnz
in
popa
jg
sub
push
outsl
push
xchg
pop
mov
sti
fcom
jo
add
adc
aam
outsl
scas
std
lcall
adc
pusha
jns
pop
fwait
sub
adc
inc
fisubrs
inc
dec
xchg
sub
rorl
jle
fldenv
daa
jns
inc
jmp
stos
pop
jge
pop
xlat
add
jo
stos
out
cwtl
push
inc
cmp
jecxz
ljmp
jbe
stos
jle
movsl
adcl
cmp
addr16
pushf
mov
enter
push
xchg
mov
in
mov
adc
std
pushl
stc
mov
repnz
leave
inc
insl
mov
cmc
dec
je
iret
call
sub
mov
xchg
in
mov
cld
pop
cltd
pop
adc
sbb
decl
in
inc
or
orb
push
sub
outsb
movsl
pop
sub
xchg
or
inc
cld
popf
out
clc
sbb
or
popf
push
push
pushl
mov
cmp
xchg
xor
push
dec
mov
call
aam
aas
fiadds
cld
dec
or
adcb
cmpsl
mov
jmp
push
jecxz
lcall
mov
xchg
push
push
cmp
jnp
negl
loop
cmp
mov
lods
push
mov
push
cld
testb
andb
mov
cmpb
in
mov
imul
rclb
mov
cli
sbb
test
pop
dec
aaa
adcl
adc
xor
mov
cltd
out
loopne
cmp
call
movsb
mov
add
and
sar
out
pop
jmp
dec
scas
and
mov
aas
mov
mov
mov
test
adc
ss
loopne
ret
movsb
xlat
pop
jg
jge
sahf
push
push
inc
cmpl
push
jns
cmpsb
ffreep
xor
pop
cmc
stc
push
in
lahf
push
mov
ror
inc
lock
cli
loope
dec
sbb
mov
mov
testb
call
test
jg
hlt
xor
pop
mov
inc
mov
fistl
lds
cmp
fldl
cmc
stos
lret
jnp
pop
ret
ret
outsl
bound
incl
leave
das
cmp
pop
test
insl
jecxz
dec
iret
addr16
dec
mov
popa
inc
jae
mov
push
cld
call
jg
mov
adc
xor
into
lahf
add
btc
cmp
sar
fucom
xchg
insb
sub
test
cli
lds
mov
lods
ljmp
loope
pop
xchg
loopne
xchg
out
xor
ljmp
lcall
jno
icebp
push
mov
lods
cmc
pop
push
movsl
jle
jmp
pushl
pop
push
lea
jmp
inc
stos
dec
sbb
pop
cmpsl
inc
pushl
add
into
addr16
mov
out
pop
mov
dec
adc
ror
sahf
mov
nop
mov
mov
push
pop
mov
daa
loopne
addr16
cmp
xor
loopne
mov
repnz
inc
outsb
dec
ljmp
cmc
enter
mov
sub
and
lea
mov
inc
out
clc
ljmp
mov
nop
xor
test
popf
aaa
sbb
jmp
call
adc
xor
rcll
rclb
and
int
mov
or
push
hlt
decl
or
mov
packuswb
stos
cmp
add
cld
repz
push
inc
jae
imul
daa
cmpsb
decl
fdivs
outsb
pop
mov
xor
cld
xchg
cmp
jae
lock
movsb
inc
sbb
imul
fldenv
dec
jp
cmpsb
add
ljmp
loope
xor
rclb
enter
dec
sub
out
and
mov
pop
iret
jb
roll
adc
inc
addr16
push
fisttps
incl
and
std
insb
test
test
ljmp
test
sahf
mov
dec
jnp
add
jae
mov
push
jmp
out
test
mov
cli
out
cld
pop
pop
push
pop
filds
ss
jmp
xor
test
out
ret
clc
lcall
xchg
cltd
cmp
imul
adc
decl
testl
pop
xchg
bound
pop
dec
js
pop
mov
inc
xor
incl
add
mov
xchg
repz
scas
cli
loope
cmp
mov
cmp
sub
outsb
ret
clc
sub
and
clc
inc
adc
fldcw
ljmp
ret
rcrl
inc
loopne
divl
sbb
jge
xchg
fwait
adc
gs
jbe
push
imul
jns
cs
xchg
cli
stc
inc
jecxz
lds
dec
nop
shlb
pop
and
mov
push
jle
push
or
lea
sahf
xor
mov
jle
pushf
insl
call
loopne
repnz
pop
sbb
std
sub
or
adc
repz
mov
pusha
sarb
xor
mov
je
push
outsb
cli
stos
push
cmp
ljmp
sarb
or
sub
pusha
add
fstpt
add
add
or
pop
pop
push
or
mov
decl
or
or
or
or
adc
adc
push
adc
pop
sti
aaa
xchg
sub
or
pop
sbb
adc
adc
adc
add
fimull
add
or
adc
pop
adc
es
test
inc
add
dec
add
fwait
std
add
and
add
sahf
add
les
movsl
inc
push
out
add
or
loope
mov
jb
jg
shrb
add
add
push
adc
in
mov
jno
xor
inc
inc
adc
xor
cmpb
or
mov
lea
aam
push
or
pop
sub
mov
jg
popa
and
xor
inc
sbb
sub
pop
adc
ret
sbb
sub
add
pusha
xor
jmp
add
inc
pushf
into
add
adc
cmp
jg
jne
adc
push
adc
pop
popa
jno
and
das
push
xchg
mov
lock
loope
add
mov
inc
xor
pusha
and
scas
fiaddl
or
js
pop
add
lret
rcr
cld
mov
xchg
and
sub
sarb
xor
aas
imul
fdivrl
add
mov
mov
and
loop
mov
dec
or
xchg
jecxz
pushf
ret
ja
pop
dec
sbb
out
cmp
xor
and
jmp
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
scas
or
xchg
pusha
add
std
or
rolb
add
lds
cld
cli
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
imul
mov
movsl
jecxz
pop
mov
lcall
clc
cmpl
jg
or
insb
sub
addr16
out
jmp
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cli
cmp
fisubrl
in
mov
orb
int3
lcall
fs
ljmp
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
fcomps
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
mov
fcom
inc
sbb
ss
cmp
push
out
in
and
imull
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
call
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
ljmp
mov
call
sarl
xor
hlt
and
xchg
jmp
call
in
inc
sbb
add
pop
jb
xchg
pushl
in
push
mov
sub
pop
mov
jl
rorl
adc
imul
stos
hlt
push
add
stc
loope
mov
mov
sar
andl
aas
icebp
testb
mov
aas
stos
pop
xor
jns
mov
in
repnz
jno
pop
sub
pop
jne
jg
scas
cld
or
push
inc
sbb
paddb
inc
mov
lcall
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
cmp
mov
pushf
lock
jae
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
fists
fnstsw
push
push
idivl
cmp
sub
inc
ljmp
pop
jg
je,pn
sub
jg
imul
mov
mov
inc
es
jmp
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
adcb
mov
cmp
cmpsb
in
fistl
das
jmp
xchg
pop
clc
pop
hlt
sub
movsb
pushl
add
lea
jg
gs
std
xorb
jg
jg
addr16
adc
ret
das
pop
pop
pop
shlb
pop
cmc
decl
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
pushl
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
std
jmp
sbb
push
shrl
mov
push
mov
adc
and
sbb
xchg
mov
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
jmp
mov
enter
add
cld
call
js
cmp
scas
ljmp
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
clc
add
enter
popa
in
pop
or
mov
xlat
lcall
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
jmp
stos
adc
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
pop
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
jl
adc
pop
cld
addl
adc
and
data16
cmp
fmull
enter
jecxz
scas
sub
icebp
jmp
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
idivb
fadds
jg
mov
aad
test
mov
incb
xchg
movsb
mov
iret
push
aas
js
pushl
push
sbb
stos
icebp
pop
incb
jno
adc
push
jg
inc
jecxz
sbb
sarl
adc
loopne
sar
push
mov
cld
std
stos
jge
push
cmp
dec
push
in
aas
mov
push
imul
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
inc
jecxz
femms
rcrl
shlb
jb
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
std
mov
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
lcall
cmp
cld
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
xor
rorb
and
mov
lods
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
or
mov
movsb
insb
or
and
xchg
sub
insb
test
aas
repz
outsl
cs
out
lock
in
jmp
stc
out
mov
clc
push
std
mov
inc
js
or
fists
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
push
loop
faddl
xchg
lcall
jne
fwait
jbe
mov
rorl
aas
lods
je
mov
leave
inc
lods
movsb
or
repnz
pop
pop
mov
jl
call
mov
add
cmpsl
lret
pop
in
cmp
fwait
mov
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
or
aas
das
rcrb
mov
sub
addr16
sbb
cld
or
adc
cltd
or
mov
ret
and
cmp
das
incb
lock
pop
pop
div
cld
idivl
inc
and
fs
loope
rcl
sbb
jmp
stos
cwtl
cmpb
fbstp
out
xchg
add
mov
jg
out
icebp
mov
loope
mov
cmpsl
popf
inc
outsb
clc
inc
sti
mov
fbstp
or
cltd
mov
outsl
das
rorw
cmpsb
cmp
jg
fwait
lock
xor
decb
adc
mov
sbbb
dec
adc
call
mov
iret
or
sbbb
mov
inc
add
rcrl
or
aaa
std
fistpll
dec
inc
sbb
xchg
rorl
sahf
mov
aas
icebp
ret
ror
sbb
enter
inc
adc
adc
sub
mov
pop
clc
loope
ficompl
in
loope
mov
lahf
jp
dec
add
xlat
cmp
push
adc
fbstp
xchg
flds
iret
fdivrl
xchg
lcall
decb
js
pop
gs
push
dec
shll
jg
pop
out
jg
or
mov
cmp
xor
arpl
out
iret
jg
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fmull
lock
add
mov
mov
add
cli
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
dec
xchg
pop
add
push
push
adc
daa
icebp
push
lahf
sti
incl
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
mov
hlt
sbb
aas
inc
pop
add
or
add
push
sti
pop
cltd
mov
inc
dec
push
mov
push
mov
in
sub
mov
int3
pop
iret
add
push
jp
add
dec
addb
adcb
jge
push
add
adc
or
and
push
mov
cmpsl
cmc
add
dec
jno
lret
xor
mov
inc
or
filds
or
push
aaa
and
jne
jo
imul
pop
imul
add
addl
mov
inc
out
sub
and
adc
and
mov
adc
fadds
popa
fldl
cmpsl
cmp
dec
shrl
sbb
mov
sbb
in
fcmovnu
pop
push
outsl
outsl
insb
push
push
xchg
jo
push
test
dec
and
gs
push
imul
jo
inc
push
cs
inc
outsb
shlb
je
into
inc
pop
push
mov
adc
dec
jne
ss
push
js
stos
pop
inc
fists
es
or
mov
lea
sub
jae
pop
out
jbe
imul
fiaddl
push
es
movsb
mov
and
sbb
insl
insl
sbb
movsb
or
inc
gs
mov
mov
dec
jb
sub
imul
bound
repz
push
outsb
dec
xor
inc
imul
inc
push
pop
mov
push
push
cmp
xor
imul
mov
outsl
jp
and
jae
icebp
inc
pop
and
pushf
bound
inc
rorl
jo
push
cmp
outsl
mov
pop
ds
insb
jne
mov
jne
mov
shll
push
push
xor
filds
add
dec
pop
in
insl
or
push
fildl
and
mov
cmpsb
sbb
push
pop
push
out
and
loopne
popa
arpl
add
in
jb
push
gs
das
push
jns
cmpb
jae
dec
loope
xor
push
pop
xchg
push
movb
mov
jnp
dec
dec
xor
das
cmp
roll
les
insb
popa
pop
inc
add
lds
or
dec
cvtdq2ps
pop
mov
sub
jo
push
dec
inc
dec
sbb
sbb
jne
test
xchg
insb
jae
arpl
adc
ds
lret
jg
out
das
pop
arpl
and
mov
repnz
push
gs
popa
inc
in
lret
xor
orl
xchg
sub
pop
clc
cmpsb
push
outsl
popw
push
add
out
xor
sar
adc
push
inc
xchg
push
jne
mov
dec
adc
mov
in
movsb
push
sbb
clc
push
jae
enter
idivb
lock
xchg
dec
jmp
inc
je
mov
push
push
testb
stos
or
iret
lret
and
fs
arpl
lods
xor
push
push
cmpsl
push
je
ja
mov
push
xchg
jg
pop
mov
ja
sub
cmp
and
inc
popa
es
mov
les
subl
sbb
mov
push
sbb
inc
xchg
rcl
or
adc
outsl
jns
int
rcrl
js
mov
and
addr16
jne
xlat
mov
adc
fisubrs
push
inc
nop
pusha
pop
outsl
inc
iret
sti
inc
fadds
cmpl
adc
ret
mov
cmp
insl
adc
xchg
sbb
stc
mov
add
fldt
xor
xchg
adc
jns
mov
adc
aaa
stos
xor
xor
iret
inc
fdivrl
pop
push
mov
outsl
pop
iret
push
push
dec
outsb
pop
mov
pop
pop
mov
loopne
gs
in
lcall
inc
in
inc
out
adc
lcall
jecxz
inc
leave
jo
adc
jae
xor
or
dec
sbb
lcall
inc
fs
mov
jecxz
movsb
jo
and
pop
inc
mov
sbb
popa
sbb
mov
inc
sub
pop
pop
push
pop
jno
push
fisubs
lods
repz
pop
adc
pop
sub
mov
sbb
or
push
outsl
fxtract
jecxz
cmpsb
dec
sbb
js
inc
jbe
test
dec
push
ret
cwtl
adc
add
fwait
ss
ljmp
xchg
and
jns
push
pop
aaa
orb
pop
mov
stos
push
and
inc
mov
add
cltd
rorl
xchg
shlb
sub
arpl
sbb
push
pusha
fs
add
adc
cmp
jb
jg
out
scas
and
inc
insb
or
jae
cmp
adc
lods
cmp
or
inc
pop
xchg
sbbl
fdivs
mov
mov
push
aaa
adcb
xor
insb
pop
idivl
outsb
fisttps
fdivs
pop
nop
popa
fbld
and
rolb
mov
scas
addr16
and
push
outsl
repnz
mov
inc
jb
and
pop
xchg
into
jo
mov
lds
arpl
loope
std
inc
imul
or
sahf
fs
push
mov
push
mov
outsb
add
cmp
lock
insb
jle
mov
out
out
punpckldq
inc
dec
xchg
cmpsl
inc
dec
stos
mov
shll
dec
jae
jno
mov
sbb
in
nop
lea
jb
mov
leave
jl
lods
ret
mov
cmp
and
dec
inc
cmp
sbb
fldcw
xchg
jle
scas
push
loopne
mov
leave
ret
sar
mov
xor
and
out
dec
push
push
pop
xor
shlb
add
in
dec
sarl
push
adc
in
dec
and
xor
scas
dec
jnp
or
dec
outsb
dec
in
push
dec
rcll
xchg
jnp
mov
pop
add
add
mov
int
mov
xchg
movsb
shll
sub
popf
cmpsb
xor
push
xchg
mov
inc
add
add
pop
adc
pushf
jo
sbb
rcr
imul
andl
outsl
inc
fs
mov
mov
sbb
adc
xlat
incl
insb
inc
jae
jo
sbb
inc
cmc
inc
jb
rcr
push
and
daa
cwtl
mov
sbb
or
mov
cltd
xchg
imul
pop
cwtl
push
xchg
cmpsl
loopne
inc
rclb
sbb
jmp
je
or
and
or
jb
mov
xchg
and
push
or
mov
int3
pop
lock
imul
add
push
adc
stos
jo
aaa
pop
insl
popa
stos
adc
jp
jo
test
mov
lret
nop
scas
arpl
pop
sti
xor
aas
imul
sbb
gs
daa
icebp
mov
inc
cld
ja
shll
push
shlb
sub
xchg
jmp
push
add
jb
xchg
orl
test
fnstsw
insb
repz
sarb
adc
popa
popa
imul
js
pop
xchg
mov
and
shlb
and
jmp
pop
sbb
add
sbb
sub
outsb
rol
xorb
imul
incl
xchg
adcb
test
push
mov
pop
push
dec
and
mov
xchg
icebp
xor
mov
enter
rol
adc
inc
mov
imul
or
add
mov
lds
outsb
aas
adc
mov
test
mov
sahf
mov
pop
popf
mov
outsb
mov
add
pop
fistl
mov
lods
int
and
roll
dec
xchg
mov
ret
ret
or
add
pop
stos
jne
pop
jmp
mov
cmpsb
roll
inc
mov
data16
fs
je
roll
cmp
xor
rcrb
sbb
sub
inc
mov
mov
dec
cld
adc
lahf
loopne
add
or
call
out
add
sbb
iret
stos
lock
imul
push
push
inc
out
adc
xlat
incl
and
sbb
fdivrl
icebp
mov
test
pop
adc
or
mov
lock
cmp
mov
and
jo
add
pop
enter
icebp
jae
ds
lret
push
das
sub
int
adc
jmp
and
rcrl
cmp
pop
insb
sbb
mov
add
inc
mov
ret
pop
add
mov
inc
mov
jmp
addr16
fwait
divb
add
call
mov
push
add
or
push
add
lret
add
pop
int3
hlt
jge
mov
push
cmp
inc
pop
dec
addb
and
add
and
add
and
outsl
sbb
jb,pn
popa
adc
add
sub
lods
cmpsl
gs
bound
out
insl
dec
ss
push
dec
sub
aam
rcrb
jb
push
xlat
out
idiv
out
lcall
das
pusha
push
or
dec
xchg
and
add
add
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
dec
inc
add
add
