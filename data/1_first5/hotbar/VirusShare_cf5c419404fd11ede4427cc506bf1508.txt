divl
in
mov
mov
sarb
lea
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
xchg
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
cmpsl
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
xor
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
lahf
push
mov
andl
push
mov
enter
add
mov
emms
inc
cld
add
xor
mov
mov
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
push
mov
add
incl
sti
inc
add
add
call
jle
add
mov
mov
jmp
push
mov
lock
add
sahf
or
sbb
pop
pop
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
sub
outsb
sub
adc
push
push
cwtl
in
add
mov
add
inc
mov
push
add
data16
mov
sbb
push
push
lods
or
pop
inc
add
fdiv
fistpl
fldt
inc
add
test
mov
ds
je
pop
add
pop
mov
push
cmp
loopne
cmp
rorb
sbb
cmp
sbb
push
sbb
cmp
add
push
add
sbb
pusha
les
xchg
dec
sarl
mov
add
sub
in
mull
pop
pop
sub
jl
mov
push
popf
call
cltd
ss
sbb
adc
xor
js
in
push
push
mov
jg
push
sub
inc
mov
pop
idiv
fcoml
push
mov
pop
jge
mov
jmp
rorl
movsl
push
pop
and
push
inc
inc
dec
push
jae
jno
and
andl
push
add
inc
inc
data16
jb
xchg
jecxz
inc
xor
inc
andb
int
not
fnstcw
jbe
loop
sub
ljmp
jae
ret
out
push
adc
mov
add
hlt
fisttpll
ds
add
divl
cwtl
and
jo
sub
push
jae
mov
jb
das
push
fnstsw
add
pop
jnp
addb
or
mov
sbb
mov
test
jnp
repnz
sbb
pop
push
and
lahf
getsec
out
add
addl
mov
push
icebp
xor
js
int3
inc
sbb
outsl
pusha
shrb
adc
lcall
iret
mov
and
mov
push
mov
inc
add
lock
push
pop
adc
cld
mov
call
mov
and
inc
dec
mov
push
enter
add
xchg
cmpsb
sbb
je
or
enter
and
sub
pop
nop
xlat
cmp
and
std
repz
mov
push
mov
ret
andb
mov
aam
push
add
aam
aad
adc
ss
push
inc
mov
int3
push
mov
int3
pop
pop
or
jo
insb
clc
dec
nop
in
xchg
in
push
mov
sbb
xor
dec
prefetcht2
loop
jle
add
test
test
jne
push
adc
in
nop
dec
xor
sbb
lds
outsb
push
fidivs
push
xor
adc
sbb
sub
test
setne
shll
iret
dec
cvttps2pi
cmpsb
mov
xchg
repz
jmp
push
and
adc
and
and
cmp
dec
andl
or
adc
fstl
rcl
pop
adc
scas
addb
sbb
pop
jb
push
jns
push
pop
push
aaa
adc
int
outsl
fcomp
pop
sbb
sarl
jle
xchg
addr16
popa
mov
xchg
jnp
add
jmp
and
xchg
mov
sbb
leave
repz
pop
jae
push
mov
push
pop
dec
mov
pop
mov
mov
test
xchg
xchg
pop
and
push
in
mov
push
push
test
mov
or
jle
jo
out
mov
or
jo
push
push
push
push
adc
clc
mov
ret
testb
mov
add
aaa
fwait
jns
and
pusha
push
mov
in
lock
mov
and
jge
loope
push
mov
sub
xor
push
mov
pop
pop
jle
movsl
cltd
mov
fmull
test
jl
or
icebp
stc
test
mov
mov
or
pusha
rclb
mov
pop
lods
stos
rorb
lea
push
add
jle
sbb
je
inc
dec
pop
mov
lea
in
stos
push
mov
aaa
je
xchg
mov
adc
cli
mov
cmpsl
arpl
js
jno
les
mov
mov
mov
das
add
dec
mov
inc
or
push
daa
fisubrs
mov
inc
mov
lret
insl
sbb
int3
xor
or
or
mov
mov
xchg
cmp
and
inc
and
cmp
lret
out
pop
aad
aad
pop
cmc
push
stc
ret
bound
mov
pop
insl
daa
push
mov
xchg
push
cwtl
fisubrl
iret
mov
sbb
bound
sti
dec
in
xor
data16
leave
ret
push
mov
xchg
mov
fcompl
jbe
fcmovu
push
mov
insl
lcall
in
daa
sbb
sub
std
ljmp
mov
push
lock
sbb
jle
jne
pop
mov
sub
inc
inc
fs
outsb
cld
stos
fistpll
je
sub
dec
pushl
pop
in
mov
or
insl
adc
push
xor
mov
pop
sti
test
je
mov
lds
ljmp
push
push
push
mov
cmp
inc
ja
push
sub
ljmp
xlat
mov
test
jne
fs
inc
cmp
iret
lret
jl
jmp
pop
push
xor
imul
push
pop
push
pop
test
jmp
sub
test
pop
mov
ret
mov
mov
xor
inc
sbb
mov
ss
mov
or
sbb
mov
daa
ds
ja
orb
stos
push
ljmp
jns
add
add
push
dec
push
sub
test
scas
push
mov
xor
jl
push
mov
cmp
adc
jg
pusha
adc
adc
pop
ret
push
data16
or
sub
shll
sub
or
push
push
dec
int3
pop
mov
sub
scas
stc
test
jne
pop
ja
add
adc
cmp
push
cs
out
dec
mov
testb
add
pop
or
jne
js
sub
pop
cmp
mov
mov
jge
jmp
inc
or
loopne
movb
mov
rcr
sbb
lea
push
mov
imul
cmp
ja
add
jmp
mov
adc
pop
jbe
jno
or
mov
and
pop
leave
ret
icebp
cmp
cmp
aaa
xchg
notb
je
or
std
cli
out
mov
add
inc
outsl
dec
mov
jmp
inc
pop
cmpb
nop
int
push
mov
jne
pusha
jo
pop
mov
jmp
xchg
in
addl
push
repnz
inc
pop
das
clc
ja
pop
push
ja
lea
decb
pushl
cmp
int
jnp
push
xchg
pop
popaw
clts
aas
mov
gs
pop
pop
arpl
adc
cmp
add
or
xor
out
mov
clc
nop
test
je
and
add
rolb
pop
js
or
adc
mov
fcoml
movsb
mov
push
rorl
jle
je
push
push
push
dec
mov
ret
sarl
lret
xor
push
push
push
popl
adc
and
pop
xchg
mov
mov
shlb
ret
or
mov
adc
xchg
shrl
leave
add
add
addl
cmpl
push
sub
push
mov
in
pop
cmp
mov
fs
cmp
je
cmpl
rcr
jl
mov
cmp
jne
push
push
imul
pop
mov
jmp
fmuls
xor
dec
lds
aas
ss
cmp
leave
push
inc
sub
rorl
ss
jge
xlat
flds
inc
aaa
fidivrl
cmp
lods
loope
clc
jg
inc
fimuls
movb
sub
aaa
out
mov
int3
mov
and
add
lods
adc
xchg
mov
inc
or
shlb
adc
ret
nopl
popa
or
sbb
movb
les
jmp
inc
pop
and
clc
es
and
adc
in
insl
and
mov
adc
test
das
mov
dec
push
push
call
outsl
sub
push
fmull
inc
cmp
cs
inc
aam
ss
pop
sbb
push
cli
pushf
mov
push
fsubrp
xchg
adc
clc
mov
mov
mov
mov
cld
push
adc
lods
inc
fwait
sub
inc
or
pop
cmp
pop
lret
loop
adc
addr16
cmp
sbb
add
cmp
ljmp
js
add
push
cmp
outsl
mov
mov
ret
ret
mov
mov
and
femms
inc
cmp
push
sub
test
push
jmp
sarl
push
mov
add
xor
jbe
inc
add
inc
mov
rorl
add
push
inc
adc
pop
dec
cmp
dec
jnp
mov
jge
dec
jle
ficomps
dec
push
or
fisubl
and
mov
iret
lods
stc
or
adc
lret
jge
sarb
iret
iret
rcl
cmp
xlat
popf
es
or
scas
adc
or
inc
rorb
or
es
adc
or
jb
mov
sahf
xchg
mov
push
out
push
je
or
fistpl
into
dec
out
mov
sbb
lea
cmp
and
sti
xchg
sbb
add
adc
jmp
jp
add
mov
jecxz
push
movl
outsl
cmp
dec
adc
sbb
and
sti
jp
jnp
and
test
je
push
pop
cltd
lds
std
xchg
mov
add
and
push
xor
outsl
aas
pop
loopne
mov
add
mov
push
push
pop
and
sbb
sar
ret
cmp
or
arpl
push
pop
or
sbb
mov
out
ret
or
xlat
das
lahf
jb
das
or
ret
add
iret
rolb
int
push
push
movsb
js
adc
scas
cmp
mov
adc
pop
jae
mov
or
push
and
and
repnz
and
das
sbb
shl
ja
sbb
ret
xor
push
je
jl,pn
ljmp
jbe
into
adc
pop
jp
jno
loope
ss
push
ficomps
dec
or
add
lcall
pop
push
mov
lods
dec
or
out
std
outsb
les
xor
cmp
ja
xchg
or
mulb
imul
stc
adc
cmp
popf
push
repz
cmpl
push
cmp
mov
js
mov
push
cltd
pop
notl
push
mov
mov
xchg
cmp
push
pop
and
jb
jmp
js
push
pop
mov
xchg
sbb
mov
cmpsb
fwait
push
adc
pop
sub
add
push
push
jbe
call
push
cmp
ret
cmp
and
jmp
mov
add
push
pop
dec
je
bound
je
sub
vmovsd
ja
mov
dec
cmp
scas
dec
or
jo
leave
jmp
sub
aas
or
xchg
xlat
ret
int
jp
jecxz
fcomip
inc
addr16
jne
mov
rolb
rorb
insb
xor
xchg
jo
lea
add
mov
scas
jmp
std
stos
adc
sub
mov
daa
jp
or
clc
adc
push
mov
or
loope
push
mov
push
sbb
mov
mov
jg
cld
adc
loopne
push
or
sti
sbb
push
push
sub
jo
js
outsb
pop
jecxz
scas
sbb
in
aas
push
in
daa
adc
xchg
mov
divb
jmp
cmp
je
cmp
xor
fs
sbb
leave
jle
movsl
imul
andl
or
in
and
jmp
sbb
in
xchg
push
push
and
sub
and
mov
stos
jmp
data16
sbb
mov
fs
push
dec
sub
iret
repz
xchg
rcr
push
sub
dec
repz
push
push
jge
mov
lret
aad
cmc
jp
cmp
cmp
cmp
lock
adc
push
push
pusha
aaa
cmp
adc
and
cmp
or
clc
movb
sbbl
adc
cs
xchg
adc
hlt
test
push
das
fisubs
dec
mov
pop
push
lea
push
sbbl
xor
xchg
fdivrp
cmp
mov
in
aam
les
addr16
or
xchg
dec
push
inc
in
mov
lahf
jge
mov
cld
adc
movl
push
popf
ret
in
imul
ja
push
sbb
xchg
dec
xor
mov
jo
and
dec
dec
ficompl
add
fsts
dec
add
and
mov
ja
mov
sub
jo
cmp
sbb
add
xchg
pop
pop
leave
adcl
cmpsb
add
or
cmpl
nop
add
nop
sub
lret
mov
sub
xchg
sbb
lret
sbb
dec
repz
mov
adc
icebp
mov
movsb
insl
sub
je
movsb
inc
push
push
stos
popf
aad
and
adc
cs
aam
clc
mov
shlb
outsb
es
js
mov
hlt
adc
mov
pop
mov
test
jb
jbe
in
add
nop
addr16
jg
jnp
push
push
push
mov
loope
inc
mov
aas
aaa
lock
adc
test
pushf
push
sub
or
es
movsl
shlb
fsubs
test
pop
mov
lea
je
mov
fildl
jo
mov
addl
push
faddl
push
jle
jne
mov
sbb
push
push
push
mov
mov
pusha
adc
mov
test
outsb
xor
pushf
jecxz
lcall
inc
and
push
xor
decl
lock
mov
adc
dec
adc
rcr
out
insb
push
push
dec
lea
or
test
cmp
je
dec
call
cltd
sub
sar
add
mov
push
bound
in
dec
in
insl
sti
int
cmp
push
mov
add
mov
inc
adc
xor
cmp
pop
leave
int
rorb
mov
push
lret
loope
add
pop
ret
jo
sub
repz
mov
add
or
sub
test
pop
push
and
sub
xchg
gs
sub
ds
mov
pop
aad
push
push
cmp
adc
lahf
mov
xor
fistps
jmp
int3
push
inc
icebp
adc
data16
out
pop
andl
aad
xor
xchg
shlb
add
inc
cmp
les
or
push
int3
xor
insb
cwtl
xchg
adc
mov
ss
lea
jg
mov
sbb
and
test
aas
mov
xor
sbb
sbb
popf
push
mov
pusha
ljmp
rcr
mov
inc
xor
pop
adc
xchg
push
sub
mov
sbb
jge
je
push
mov
fdivrl
jmp
pushl
and
test
pop
sbb
pop
loopne
incl
and
jo
inc
sub
outsl
lods
aas
mov
ret
hlt
aaa
jmp
cmpl
je
cmpl
mov
dec
je
test
sub
mov
sbb
jmp
mov
in
insl
pop
push
add
push
pop
push
leave
adc
js
in
push
mov
push
loopne
mov
mov
pop
push
cld
bound
mov
js
push
jnp
stc
test
mov
dec
rcll
sub
cmp
hlt
or
add
lock
jne
mull
fldz
cmp
inc
enter
and
insb
movb
in
pop
aas
mov
xor
mov
cmp
aam
out
cmp
xchg
jmp
fs
ljmp
jns
add
sub
mov
loopne
mov
and
popf
push
mov
xor
dec
xor
push
mov
test
and
cmp
or
dec
sbb
lea
pop
jle
pop
add
mov
jbe
adc
cmp
insb
ret
lahf
xchg
fldcw
push
shlb
jmp
and
push
sub
shll
or
nop
or
movl
jns
lret
dec
loope
adcl
je
xor
nop
add
daa
push
cs
lret
cmp
sub
pushf
xor
ds
je
cmp
or
dec
add
mov
pop
sbb
loope
and
sub
rcrl
daa
addb
xor
cmpl
pop
push
and
inc
mov
data16
lock
sbb
test
icebp
sub
repnz
sub
inc
xor
cmp
ret
dec
fldl
fmull
pop
push
add
shrl
sbb
idivl
xor
cmp
ret
rcrl
add
lock
adc
or
mov
test
jae
mov
pop
ds
rorb
cmp
ds
mov
push
shll
or
lds
and
push
pop
loope
push
test
dec
push
ficoml
add
dec
add
or
mov
mov
rcl
stos
fcoms
pop
dec
dec
or
sbb
mov
adc
pop
add
or
js
ret
cmp
in
jge
das
add
add
andb
sbb
jo
push
inc
mov
xor
test
dec
adc
adc
pop
pop
test
sbb
je
cmpb
scas
iret
mov
aaa
cwtl
pop
roll
lock
xchg
or
push
cs
sub
push
nop
flds
cmp
pop
mov
pop
pop
cmp
push
or
cmp
jmp
nop
push
mov
mov
mov
pop
inc
shlb
stos
je
dec
mov
push
push
loope
clc
inc
loopne
push
adcb
sbbb
mov
rcrb
cmp
aam
mov
outsl
and
sbb
cmp
imul
out
jo
xor
dec
call
jecxz
mov
sbb
push
sub
xor
aas
jle
cwtl
or
loopne
adc
jo,pt
fwait
sbb
cmp
ds
mov
add
cld
ret
or
js
or
nop
popa
mov
adc
jl
dec
inc
dec
mov
lock
adc
push
inc
jge
mov
fcomip
sti
push
pop
push
out
dec
subb
dec
jmp
xor
idiv
stc
int
jle
mov
fwait
inc
jp
mov
add
bound
jne
loopne
jbe
aad
mov
mov
push
les
jo
insb
cmpsl
int
mov
xchg
pop
push
in
adc
sbbl
push
adc
add
mov
or
out
es
pop
pusha
rcrb
lods
sti
sub
mov
je
test
pop
lea
cltd
idivl
mov
inc
mov
xor
das
push
mull
pusha
jl
cmpl
jnp
sti
push
mov
sbb
mov
cmp
mov
jbe
lahf
xor
out
xchg
pushf
sbb
and
lods
lea
clc
add
pop
cld
idivb
imul
cmp
or
jmp
icebp
addr16
jge
jmp
mov
pop
hlt
fildl
mov
or
add
sbb
sub
xor
dec
lock
or
stc
mov
jle
lret
rolb
pop
add
pop
add
ficomps
cwtl
fsubrp
or
xchg
pop
jl
jmp
jno
sbb
inc
mov
mov
or
clc
fidivl
jmp
outsb
sub
mov
out
xchg
pop
xchg
inc
jne
pop
lahf
push
sbb
jl
dec
call
mov
fmull
test
lea
or
add
stos
cli
jl
cld
push
and
clc
mov
pop
addb
mov
cmp
in
jne
push
lahf
je
je
xor
imul
mov
pop
and
pop
pop
sub
sbb
mov
add
loopne
nop
adc
cmp
leave
xchg
push
test
add
add
arpl
clc
test
call
cmp
adc
inc
pusha
outsl
out
pop
mov
or
push
pushf
and
shll
cmp
cmp
aaa
sbb
xchg
adc
mov
pop
lock
clc
aaa
push
rolb
leave
push
leave
movsb
add
push
pop
je
daa
fstp
inc
pop
push
jg
loopne
adc
push
mov
push
mov
xor
add
sub
xor
pop
mov
push
jns
pop
ret
mov
shrl
out
mov
dec
add
push
xor
push
and
or
aaa
movsl
mov
scas
roll
mov
orl
add
adc
push
outsl
inc
adc
lock
outsl
mov
add
test
inc
sbb
in
addb
add
js
add
fsubs
lahf
cmp
add
push
pop
adc
mov
and
loopne
icebp
and
mov
xchg
cmp
fmull
inc
adc
add
push
xor
mov
or
ja
xchg
mov
pop
xchg
and
lahf
rolb
mov
jo
cmp
jno
cmp
sub
pop
mov
pop
adc
movsl
loope
mov
add
push
addl
sub
clc
setb
test
jne
mov
mov
pop
imul
sub
sar
xor
and
adc
sub
add
rcll
fimuls
mov
je
sub
pop
je
call
jmp
jmp
mov
mov
nop
int
rcr
add
hlt
mov
dec
mov
call
mov
xor
dec
add
xor
and
cmp
and
jmp
hlt
cmpsb
aam
pop
adc
shrb
mov
mov
ret
ret
shrb
and
out
push
sarb
call
adc
cs
add
and
insl
xor
push
aas
fisttpll
lcall
int3
ljmp
in
or
and
push
je
and
je
into
icebp
mov
shr
hlt
pop
or
in
ret
mov
jo
lods
loopne
lea
hlt
cmpsl
mov
and
std
leave
adc
mov
or
add
arpl
fs
sub
add
movl
mov
call
lock
popf
pop
imul
popa
pop
add
push
push
push
shlb
add
ret
cltd
adc
aaa
inc
rcll
and
outsb
addl
dec
lods
jb
setne
xchg
out
mov
je
mov
les
mov
ret
mov
push
sbb
mov
jmp
gs
clc
arpl
sbb
jecxz,pn
mov
mov
rcrb
pop
clc
and
push
outsl
fisubs
imul
shll
cmp
mov
xchg
je
repnz
and
lahf
sbb
mov
mov
adc
or
nop
or
add
push
incb
xor
sbb
inc
or
cld
push
ror
inc
push
add
add
sbb
jl
sub
mov
push
test
lock
ss
mov
inc
mov
out
mov
call
loop
xor
mov
mov
repnz
mov
mov
call
or
mov
enter
punpckhdq
pop
dec
shrl
xchg
lea
rol
inc
cmp
jecxz
imul
xchg
iret
fadds
pop
push
jbe
iret
push
push
xor
and
popa
insl
test
mov
in
or
push
xor
filds
scas
lea
je
xorb
cs
jge
cld
repz
adc
and
test
dec
sbb
cmp
in
stos
push
push
cmp
or
fistpl
leave
stos
ret
adc
or
addb
add
mov
and
stos
and
add
adcb
pop
in
icebp
fldt
mov
jne
push
test
pop
bound
stos
mov
icebp
mov
icebp
push
mov
scas
add
inc
rcr
jmp
add
cs
popf
jge
jno
inc
arpl
mov
dec
clc
rcll
cld
cmp
je
into
in
bound
pop
movl
andl
and
mov
les
cmpsl
mov
sbb
pop
call
sub
and
sub
sarb
imul
clc
repz
xchg
mov
adc
add
and
shrb
push
jl
mov
in
daa
add
mov
pop
jo
pushl
fdivl
in
in
lock
mov
adc
add
std
adc
jge
jl
bound
adcb
adc
mov
nop
aam
in
mov
aas
lds
lock
and
mov
mov
mov
roll
push
aam
sub
scas
adc
fdiv
popa
rcrb
scas
shlb
sbb
arpl
or
ljmp
or
sbb
push
and
adc
lret
arpl
in
aam
add
loopne
push
sbb
lods
cmpsb
adc
pop
cltd
loop
and
int
bound
pop
aam
push
xorl
or
add
neg
push
repnz
cmpsb
shll
insb
and
fsubrp
jo
jge
and
out
or
in
sbb
pop
mov
fbld
aam
push
lods
popf
xor
pusha
or
addl
adc
or
rcrb
push
mov
pop
add
mov
pop
mov
mov
mov
subb
sbb
mov
cmpsl
mov
mov
add
jp
xor
bound
call
bound
inc
inc
and
pop
inc
fldenv
leave
inc
mov
stos
loopne
sbb
fsubr
mov
mov
jecxz
lods
mov
jmp
loope
jbe
lods
xlat
add
lds
ss
shll
dec
sub
adc
and
push
shll
aaa
lcall
loope
call
movsb
push
shlb
idivb
jo
setg
xor
or
jne
mov
js
cmp
adc
sbb
jl
add
push
xchg
in
push
sub
mov
dec
pop
mov
inc
xchg
cmpsl
pop
into
rcll
aad
push
sbb
dec
or
pushf
popf
dec
in
test
and
and
add
popf
pop
inc
jnp
push
loope
out
stos
shr
pop
dec
ret
int3
adc
push
sbb
mov
shlb
sarl
rolb
mov
aas
es
xchg
addr16
add
add
add
jmp
in
dec
rorl
dec
or
andl
cmp
fdivs
das
push
mov
or
call
xor
int
stos
dec
shlb
subb
and
push
test
push
repz
mov
push
inc
and
shr
insb
push
rolb
dec
leave
or
and
or
rolb
mov
sub
xchg
shlb
sbb
inc
pusha
insb
push
mov
mov
add
xchg
mov
sub
fwait
pop
sub
or
sbb
push
add
bnd
jns
jmp
sldt
leave
mov
adc
leave
rep
dec
pop
adc
sub
and
sub
pusha
and
leave
or
rorb
sub
jnp
push
jmp
in
lret
out
push
ljmp
repz
ss
ja
sbb
fcoml
cltd
sub
pop
aam
les
xor
test
iret
mov
or
xor
sub
mov
adc
xor
xor
scas
in
dec
xchg
push
lods
inc
inc
inc
lahf
fisttpl
aaa
or
jne
ds
jmp
andl
sbb
push
adc
xor
or
lret
pusha
pop
cld
or
xor
int3
mov
rorl
shrb
lods
sbb
sub
jp
jl
jl
jne
xor
xor
incb
add
add
add
fcmovne
jecxz
cs
int
xor
pushf
repnz
outsl
outsl
cmp
adc
or
push
sbb
sbb
ret
and
or
xchg
sub
jbe
sbb
popf
sub
adc
push
sub
push
mov
popw
xor
rorb
mov
xchg
outsl
aad
xchg
sbb
inc
js
jo
push
pop
stc
sub
adc
and
pushf
push
adc
pop
and
jl
adcw
pop
enter
jne
pop
and
mov
push
sbb
dec
das
hlt
mov
xchg
pop
mov
mov
jl
lcall
and
pop
mov
ja
adc
cmp
cli
insl
in
mov
mov
jmp
jo
outsl
cld
mov
mov
push
pop
add
lret
sub
mov
add
inc
lea
adc
add
rcrb
or
addr16
xchg
loopne
xchg
jne
orl
data16
arpl
sbb
outsl
testb
pand
fs
push
pop
cmp
imul
push
mov
push
rcrl
cmp
call
ss
test
xchg
inc
sub
or
rclb
pop
dec
movl
repz
xor
inc
in
inc
cs
xor
cli
add
in
pop
adc
jb
repz
or
sbb
add
add
cmp
sti
xor
and
loope
push
sub
add
or
fdivrl
ja
dec
gs
les
or
lret
test
xchg
inc
sahf
lret
adc
push
cmp
call
jb
inc
add
jb
or
inc
sub
sbb
in
cmp
sub
xchg
sub
inc
lcall
adc
es
add
lds
popf
out
jb
insl
inc
mov
push
inc
push
sbb
int
pop
enter
or
in
add
int3
xorl
in
adcl
fsts
and
adc
adc
sub
jns
push
inc
or
fcmovne
cmpsl
mov
test
fadds
inc
and
sahf
out
add
add
xchg
push
push
add
je
lret
iret
orl
rorl
adc
popa
test
inc
push
xlat
or
cli
mov
mov
pop
sub
adc
ss
xor
push
pop
xchg
int3
pop
aam
sti
xor
gs
push
xchg
lea
adc
xchg
sub
test
scas
loopne
and
and
pop
dec
adc
fst
mov
outsb
inc
xchg
cmp
adc
pop
dec
sahf
sbb
push
test
sbb
loopne
mov
dec
inc
lret
push
addr16
xchg
inc
shll
sub
cli
mov
and
cmp
add
test
or
negl
addr16
rolb
icebp
xchg
mov
out
repnz
nop
je
sub
jne
jecxz
mov
xor
jge
fwait
je
pushw
mov
aam
xchg
pusha
mov
pop
or
dec
lods
out
sub
adcl
mov
rclb
imul
xchg
pushf
add
bound
sbb
push
or
jne
push
mov
mov
dec
adc
pop
sbb
jb
sbb
and
loop
push
xchg
dec
in
mov
and
sbb
inc
shrb
mov
jge
pop
stos
movsb
mov
add
push
adc
or
mov
inc
lods
test
pop
arpl
push
push
jmp
push
cmp
pop
popa
sbb
and
aas
enter
movsb
call
pop
pusha
add
sbb
mov
sbb
fldenv
mov
adc
adc
push
inc
cmc
pop
mov
lds
and
jbe
bound
es
jl
push
daa
js
push
fwait
cmpsb
add
js
pop
adc
or
test
dec
leave
or
jmp
dec
loope
push
add
add
mov
mov
pop
gs
loop
inc
cmp
sbb
fildl
jge
adc
cmp
jns
pop
xchg
xchg
mov
lock
lea
stc
in
clc
lock
mov
add
mov
popf
adc
pop
sbb
adc
addr16
scas
rclb
pusha
add
cmp
into
movsb
cs
loope
pop
hlt
pop
pop
out
add
sbb
sub
push
sbb
cmpsl
or
dec
dec
loope
add
add
inc
imul
shr
into
popa
aad
cmpl
jmp
insb
sbb
push
out
sti
cwtl
fistps
sbb
push
and
repz
lret
js
jecxz
sub
enter
cmpb
jge
ret
xchg
arpl
lret
sbb
xchg
sub
mov
test
lock
adc
scas
mov
testb
pop
lea
imul
push
push
in
test
addb
sub
dec
cmp
incb
mov
sub
jmp
xor
sub
in
imul
pop
fs
or
mov
mov
lods
sbb
mov
sbb
movsl
xor
fwait
mov
and
xlat
jb
imul
cmp
rcr
sbb
sti
test
sbb
xchg
scas
push
push
mov
pop
sub
add
mov
cmp
push
jmp
ret
adc
or
rolb
adc
add
and
mov
mov
data16
in
inc
mov
data16
dec
jns
cmp
setne
inc
loopne
pop
repz
sti
aas
push
push
push
test
das
sub
jmp
mov
cmp
jne
push
repnz
testl
andl
test
rolb
call
pop
outsb
add
push
mov
adc
nop
mov
sub
inc
jns,pn
daa
push
mov
mov
inc
fs
nop
push
and
push
push
fwait
cvtpi2ps
xor
mov
sbb
mov
inc
add
and
xchg
jb
lahf
and
push
daa
xchg
arpl
add
push
sbb
sub
loope
add
or
push
and
or
dec
push
movsl
test
ror
movsl
xlat
push
mov
sbb
fsubrl
push
sbb
add
shl
inc
sbb
add
mov
xor
xchg
std
addl
jge
cs
jae
push
push
lods
popa
lahf
out
je
xor
or
insb
lock
les
test
sub
imul
shll
xchg
and
lret
pop
sub
or
sub
mov
lret
sbb
and
or
fwait
lret
inc
stos
lret
push
add
nop
cmpsb
lcall
adc
cmpsb
pop
clc
xchg
fisttps
inc
add
jne
add
pop
mov
xchg
lea
ret
sbb
fs
je
xor
xchg
jbe
cltd
fcomps
ret
mov
lods
stos
pop
popa
stos
repnz
scas
xchg
xor
daa
add
xchg
push
rolb
pop
insl
mov
aam
scas
scas
repz
popf
cmc
push
jb
fdivp
outsl
push
xor
pop
push
loope
lds
jmp
mov
xchg
out
or
mov
push
adc
inc
into
push
mov
xchg
imul
loope
inc
loopne
xor
dec
ror
cmp
mov
hlt
jle
push
ljmp
sub
cmp
mov
test
jo
push
test
popa
mov
loopne
sbb
xor
inc
jge
imul
mov
test
adc
push
adc
rcll
loop
mov
ret
push
sub
scas
hlt
insb
and
sbb
add
push
roll
mov
cli
inc
push
adc
xor
jne
test
pop
lock
pop
lods
ja
shlb
mov
repz
push
push
push
mov
repz
push
sbb
into
movsb
mov
sbb
outsl
mov
sub
pushf
jl
add
xchg
mov
push
push
mov
test
adc
xchg
xchg
stos
push
js
sub
mov
inc
add
push
sub
lods
inc
add
cli
rorb
mov
mov
pop
add
mov
sahf
sub
aas
test
push
cmp
mov
pop
movsb
add
insl
daa
and
mov
jnp
sete
test
lret
add
jecxz
ret
shr
cmpsb
cmp
out
sub
xor
jae
and
ret
xchg
aad
loope
mov
lret
into
lock
push
adc
shll
sbb
lcall
lea
add
cmp
jae
push
lds
mov
dec
and
add
cwtl
shl
and
shll
adc
push
add
push
in
inc
inc
mov
mov
jg
ljmp
jge
mov
rorl
or
sbb
push
outsb
and
decb
jecxz
jmp
jmp
in
xor
push
ljmp
pusha
pop
aas
or
inc
je
test
jl
mov
cmp
dec
insl
mov
jg
loope
shl
cs
cwtl
test
push
jmp
add
pop
mov
hlt
mov
out
inc
loop
xchg
aaa
or
adc
mov
sub
and
ljmp
fldenv
xor
sbb
push
sbb
lock
or
loope
xchg
inc
xorb
and
sub
pusha
push
dec
fwait
pop
mov
es
xorb
imul
xchg
fimull
sbb
ret
loop
xor
fs
movsb
mov
mov
mov
bound
cld
clc
mov
ret
leave
pop
sub
inc
mov
shll
xlat
sbb
inc
and
lcall
mov
cli
cmp
cmp
testb
stos
add
dec
inc
js
fdivr
roll
sub
cmp
dec
call
pcmpgtd
sahf
push
mov
lret
ret
loopne
jne
xchg
push
idivl
idivl
pop
push
ds
shll
dec
iret
divb
movsb
add
push
pop
mov
xchg
stos
xor
jge
xchg
sbb
and
or
push
cmp
cli
aad
sarl
andl
andl
or
lock
movsb
test
ret
push
lea
or
push
or
mov
pop
mov
jp
fimuls
mov
decl
test
sub
in
fldl
scas
sub
push
fcomps
int3
mov
add
sbb
push
cmpl
cli
jbe
cmpl
cltd
and
jo
jne
xchg
and
inc
lods
fidivrs
jne
lock
fsub
jmp
mov
jmp
sbb
bound
ljmp
add
add
mov
pop
shrl
ret
andb
xchg
sbb
jmp
inc
mov
cwtl
ss
xor
adc
les
mov
pop
push
add
sbb
xor
pop
mov
jo
xor
enter
adc
dec
adc
sbb
add
pop
or
outsb
push
push
pop
mov
lret
mov
xchg
and
add
ljmp
and
int
std
jbe
inc
pop
adc
inc
push
xor
add
and
adc
jp
jno
orb
lds
adc
scas
aas
add
or
cmp
loopne
sbb
jbe
or
sbb
pop
jbe
pusha
arpl
push
pop
shrb
push
enter
jne
mov
das
xor
inc
wrmsr
and
in
aam
and
and
mov
push
ljmp
in
cmpsl
sbb
mov
dec
in
push
pop
daa
int
cltd
scas
test
imul
test
xchg
sub
cld
dec
push
cmp
pusha
pop
popf
in
popa
cmp
pushf
mov
popf
lods
test
loope
mov
cmp
jbe
flds
or
dec
sbb
imul
nop
dec
mov
push
stos
icebp
jo
add
jbe
or
fadds
scas
mov
and
push
xor
outsb
sti
adc
rorl
sbb
mov
jge
push
mov
test
je
outsb
and
push
jl
js
lock
push
adc
dec
test
sbb
cmp
sub
cmp
cmp
sub
pushf
lock
push
adc
fisttpl
push
lods
add
orb
mov
popa
je
sub
sti
cwtl
adc
xchg
and
jmp
call
insl
push
int
call
cmp
dec
add
mov
push
lods
in
push
adc
add
test
mov
cmpsl
push
scas
inc
pop
push
gs
sbb
jae
jecxz
call
push
mov
or
sbb
push
jmp
fists
add
inc
xor
xchg
adc
adc
push
add
inc
jl
hlt
movsb
xchg
push
push
sub
pushl
sub
xchg
inc
adc
enter
xchg
push
leave
and
adc
adc
sub
mov
or
and
pop
or
or
cmc
jmp
sbb
push
cmp
adc
pop
fs
cmp
inc
sbb
dec
or
sub
rorl
sbbl
push
rorb
adc
ficompl
in
and
jmp
add
push
add
mov
pop
ja
enter
les
cmp
or
jp
dec
add
pop
xor
and
popl
or
push
lea
or
push
mov
or
sbb
add
inc
cs
add
pop
adc
std
adc
scas
rol
add
jle
insl
add
sub
push
call
and
shlb
mov
repnz
adc
add
mov
fwait
inc
jbe
icebp
inc
ljmp
es
sbb
dec
or
scas
mov
icebp
jno
push
jl
push
pop
jo
cmp
jb
sub
adc
push
cmp
or
or
loopne
mov
adcb
arpl
clc
cmp
negl
adc
stc
xor
imul
xchg
pop
outsl
dec
or
mov
pop
test
testl
jecxz
pusha
bswap
sbb
shrb
insb
popa
mov
xor
inc
pop
push
arpl
imul
jmp
cmpsb
insl
xchg
push
fs
jle
and
mov
sbb
push
mov
loopne
add
push
mov
sbb
sbb
nop
xlat
repnz
cs
pmaxub
push
or
inc
dec
imul
dec
mov
pusha
adc
push
sub
and
jne
jo
jmp
xor
xchg
sbbb
pop
xchg
fcoml
in
scas
or
fisttpl
mov
mov
enter
xlat
int
leave
pop
or
sub
orl
rcll
push
mov
leave
sub
jae
iret
add
sahf
pop
imul
test
jl
adc
lods
dec
mov
sub
push
sub
sub
jae
cmp
call
aam
dec
fdivrs
ret
les
scas
xor
inc
test
mov
cmp
push
push
mov
jmp
mov
sub
jne
xor
push
imul
adc
cld
cld
in
mov
or
jge
push
lock
pushf
add
pop
dec
inc
mov
add
or
xor
test
xlat
nop
in
add
push
mov
push
xchg
lea
push
lock
rcrb
lret
cld
sub
mov
imul
jo
or
sbb
jg
and
lock
call
outsb
xor
cmp
loop
pop
rol
pop
mov
shr
adc
jp
mov
je
imull
icebp
add
iret
push
push
add
sbb
fcoml
pop
mov
fstp
fstps
dec
jp
mov
add
push
xor
les
or
push
mov
andb
lods
hlt
add
jo
enter
xorb
dec
sbb
inc
movsl
xchg
out
inc
pop
pop
pop
cmp
add
mov
jne
sbb
adc
sub
sbb
ja
push
mov
pop
shlb
dec
cwtl
rcll
imul
movsb
das
subl
cmp
push
int3
xchg
add
clc
ja
cwtl
push
mov
push
call
ret
outsl
xor
lahf
lock
push
mov
orb
ficomps
push
push
sub
rcll
jmp
mov
sti
mov
dec
lcall
test
clc
insb
fldcw
inc
jbe
sbb
push
sub
fwait
mov
and
add
nop
jp
adc
pop
inc
xchg
or
in
jl
push
jae
stos
add
or
fcoml
or
xchg
add
pop
mov
or
sub
or
mov
mov
cmp
je
push
aaa
fs
lock
push
push
jle
fucomi
arpl
cmp
sub
push
sbb
jp
sbb
mov
int
negl
or
adc
sarb
pusha
push
es
or
xlat
push
add
cmpsb
jne
push
adc
mov
sbb
pop
sarb
fwait
xor
mov
add
lret
push
clc
add
hlt
push
in
fildl
in
lret
sbb
push
test
and
ficoml
ret
fldl
mov
pop
push
adcl
mov
sbb
and
lock
test
mull
test
ja
in
decl
xchg
push
test
in
push
push
cmp
je
sbb
cmpb
fcoml
xchg
mov
or
rcr
inc
mov
push
shlb
fnsave
push
mov
jp
int3
xor
lret
dec
sti
add
ret
jmp
pusha
xchg
push
xchg
dec
sub
mov
mov
dec
jp
jns
int3
testb
call
aad
in
imul
cli
loopne
mov
rorb
dec
xor
gs
int3
stos
dec
decb
jnp
aam
and
imul
cli
cmpsl
push
mov
adc
lock
pop
xchg
push
xor
cmp
mov
pop
or
and
fs
mov
adc
mov
loop
adc
add
jb
pop
sarb
or
ss
dec
in
ret
dec
jmp
xchg
pop
shl
rorl
cmp
fistpll
js
lea
in
cmp
je
cmp
je
cmp
jne
add
cmpsb
mov
in
xchg
ja
cmc
je
and
call
mov
gs
or
fdivr
jmp
outsl
outsb
pop
mov
cmp
xor
daa
clc
ret
adc
mov
pop
clc
push
ret
jns
add
cld
ds
mov
testl
jmp
rolb
lea
cmp
jne
mov
adc
add
push
xor
mov
mov
or
pusha
xor
xor
add
stos
cld
test
fidivrl
jo
xor
cld
add
es
or
xor
pusha
sub
movsl
ret
and
add
or
out
clc
aaa
xor
push
icebp
mov
jb
cmp
ja
in
ja
int3
sub
sbb
inc
add
out
popa
push
ret
fcmovu
push
push
mov
call
add
mov
mov
pushf
mov
data16
mov
push
inc
adc
andl
mov
or
jmp
jge
cmpsb
in
xor
push
mov
mov
cmp
add
mov
cmp
xchg
pop
je
cmp
jne
mov
sbb
add
repz
jp
dec
inc
clc
inc
mov
pop
dec
xor
test
fildl
movsb
jne
jmp
testb
mov
add
sbb
cli
cmp
jbe
cmpsl
aam
add
lea
mov
in
mov
fs
dec
inc
jmp
inc
and
cmpsb
push
pop
rorb
xor
pop
mov
mov
pusha
sub
ret
dec
shrb
pusha
test
xchg
clc
clc
aaa
fwait
inc
lahf
xor
je
mov
lea
dec
lods
sahf
clc
test
sbb
and
mov
dec
xor
jle
mov
inc
cmpl
inc
cmp
jne
notb
cmpb
insb
loope
jno
jne
clc
je
sub
inc
fdivl
inc
jb
or
ja
fsubrs
enter
push
xchg
test
cld
add
stos
cmp
cmp
push
icebp
push
dec
outsb
femms
ds
jb
cmpsb
inc
sub
popa
loop
jne
cmp
push
jno
push
test
mov
lcall
orb
fsubs
mov
push
lret
aaa
jb
cmp
rol
pop
shl
add
jmp
cwtl
aas
sub
jne
and
dec
hlt
add
je
fs
jne
xor
fildl
lock
test
sub
push
mov
or
add
pop
jae
aaa
sbb
jmp
dec
shlb
cld
jbe
test
mov
or
push
mov
daa
xor
call
loope
mov
adcb
repz
in
aaa
or
cmp
jg
or
jge
int
int
inc
aaa
or
jle
es
sub
sub
jp
jle
jmp
cmp
jl
pop
jle
pusha
out
cmpb
add
jp
jb
jbe
mov
mov
test
fwait
and
or
jl
jle
je,pn
test
jne
je
outsb
and
test
add
lcall
das
cli
fwait
sbb
adc
movb
inc
mov
push
sub
add
and
or
sub
shlb
mov
push
mov
inc
and
je
jnp
dec
hlt
adc
add
jecxz
jmp
mov
add
adc
es
dec
and
or
jl
push
loop
test
push
movl
sub
mov
pushf
pushl
push
scas
or
dec
push
adc
push
daa
fistl
add
mov
sahf
or
ret
cmp
adc
or
ret
je
add
mov
pop
in
out
lods
push
sbb
xor
push
sub
outsb
cmpsl
outsl
lahf
push
inc
mov
movb
popf
mov
lea
xchg
push
sub
add
pop
jb
sbbl
decl
pop
cmp
mov
daa
jb
adc
xor
imul
and
xor
cwtl
jne
pusha
lock
stc
jne
stos
dec
daa
mov
add
ds
push
push
mov
inc
movb
jae
outsb
je
xor
cmp
jo
pop
or
xchg
adc
aam
cmp
ficoml
fstps
add
mov
jl
add
or
pop
mov
xor
add
stc
and
and
inc
xorb
ss
data16
sub
mov
inc
xor
hlt
mov
aam
xor
pop
mov
lods
sbb
lcall
add
inc
inc
shr
pop
popf
xor
es
jl
add
cmp
sbb
test
pop
sub
mov
cmp
push
or
mov
cmp
lock
pop
xlat
cld
xchg
popa
hlt
es
pop
pop
add
inc
xchg
xchg
pop
sbb
ror
mov
movsb
inc
sub
addl
inc
add
out
add
pusha
sti
pusha
jb
cs
inc
or
dec
jae
pop
lock
dec
adc
jb
arpl
mov
xchg
out
inc
push
push
pop
data16
and
mov
xchg
rcrb
cmpsb
insl
mov
add
mov
icebp
addb
and
xchg
inc
call
in
xor
xchg
lret
mov
lahf
jne
addl
addb
xchg
les
xchg
mov
xchg
or
jne
iret
push
es
xor
leave
mov
or
or
xchg
or
xchg
add
nop
inc
sar
test
and
or
cld
add
setne
out
inc
ja
mov
xor
imul
push
cli
push
sbb
cld
jmp
push
jecxz
xor
ljmp
mov
es
ljmp
sub
lock
out
and
jne
adc
push
push
fdivl
jne
sbb
andb
cmp
jnp
das
movl
cld
sbb
das
bound
or
sbb
sti
dec
adc
sarb
push
insb
mov
add
pop
inc
inc
push
js
jnp
inc
lcall
fcomps
movsl
pop
sub
shr
sbb
je
lock
push
fxsave
lds
add
inc
mov
mov
loope
jge
pop
and
aaa
sbb
mov
inc
int
or
shll
push
lcall
shr
insb
in
fsubr
cmp
in
test
push
push
cmpl
xchg
adcb
in
push
call
fsubrs
jl
sub
pop
inc
cmp
jge
mov
outsl
push
test
inc
pushl
jmp
pop
pop
mov
aas
je
lea
cmpb
cmp
jne
les
pop
shrb
aam
adc
repz
cmp
sub
sub
lcall
and
orb
dec
sahf
ja
loope
push
jmp
test
movsb
push
adc
sub
fchs
xor
jg
xor
jg
lock
jmp
add
mov
loop
add
and
rclb
test
add
popa
addr16
enter
lahf
fsubl
iret
js
das
ret
or
push
push
sbb
cmp
cmp
xchg
pop
push
sahf
push
sub
cmp
cmp
orl
inc
push
jne
ret
shlb
pop
cmc
test
mov
mov
sbb
out
cmpsl
xor
test
in
xchg
mov
sub
xor
jge
xchg
cmp
inc
mov
jns
push
fsubrs
mov
add
psubusb
ret
push
lret
push
push
inc
adc
push
mov
add
push
jmp
add
push
mov
sti
adc
cmp
scas
and
inc
cmp
rorl
loopne
jbe
cmp
loope
sub
xor
pop
push
movsl
loopne
fadds
jb
pop
sub
xor
pop
cs
lret
xor
cmp
cmp
add
cmp
push
sbb
daa
add
adc
cmp
or
or
push
add
fwait
aam
or
clc
in
add
adc
dec
lahf
enter
rolb
rolb
cld
mov
push
sahf
push
dec
cmp
mov
aam
loopne
jb
jle
sub
push
fsubs
in
cmc
jmp
dec
arpl
push
push
push
push
and
xchg
add
push
rclb
popf
inc
sahf
jmp
cmp
insl
pusha
mov
pop
lea
or
and
or
sub
jl
orl
lods
adc
or
add
add
out
pop
inc
dec
movl
mov
sub
es
int3
add
shl
mov
pusha
mov
inc
ja
dec
pop
repnz
test
mov
enter
test
or
or
subb
lcall
pushf
js
movsb
or
jg
or
jmp
pushl
inc
push
push
shl
cmp
loopne
in
jne
cld
in
add
lcall
fistpll
or
fadds
add
or
lods
push
mov
test
hlt
cmp
adcl
push
cmpl
adc
mov
cmpsb
imul
xlat
shrb
sub
jmp
pushl
add
rorb
mov
lea
mov
in
mov
je
push
mov
and
cmp
scas
jne
lods
bound
xchg
je
in
jo
mov
insl
cmp
mov
dec
add
insl
sbb
and
fs
push
xchg
rclb
pushf
imul
inc
inc
in
in
in
xchg
add
loop
add
in
negl
push
xchg
out
push
sahf
sub
push
orb
pop
jp
aam
lods
push
xchg
and
dec
stos
sarb
mov
shrb
push
adc
loope
push
xchg
shl
or
clc
call
adcb
gs
daa
adc
loopne
or
mov
pop
enter
or
mov
imul
push
lds
adc
inc
out
pop
mov
or
enter
cmp
test
add
cmp
push
ret
icebp
xor
adc
sub
push
cmp
pop
jae
push
cmp
mov
rcr
add
xchg
push
jns
loopne
jns
xchg
push
mov
pop
sub
repnz
push
jl
cld
fcmovb
arpl
or
push
cld
cltd
inc
mov
in
adc
pop
or
scas
fnstsw
test
dec
or
mov
into
ret
sub
lret
and
sbb
int
adc
loop
gs
or
jg
pop
xchg
fisubs
jmp
pop
inc
ljmp
pop
mov
mov
or
add
add
or
imul
adc
dec
sbb
push
xor
xor
roll
cmp
and
mov
nop
push
sbb
aam
andb
xchg
dec
mov
cmp
std
test
sbb
add
lret
cmp
add
sub
sbb
push
and
orl
xchg
xchg
aas
push
push
mov
sub
mov
push
test
mov
rorl
xchg
dec
cmp
ljmp
pop
in
sti
shl
cmpsl
push
mov
add
jbe
xchg
or
or
mov
popf
mov
rol
inc
imul
in
add
pop
xor
movsl
add
sbb
int3
stos
push
mov
pop
inc
clc
xor
or
or
cwtl
andl
lods
sbb
jl
push
or
orb
imul
sti
add
ja
push
sub
mov
inc
les
add
or
in
aad
mov
xor
pop
les
test
rorb
add
icebp
mulb
push
sbb
movb
popl
and
in
pop
push
inc
pop
cmp
adc
cmpsl
scas
int3
les
cmp
orl
imul
ss
xchg
xchg
out
push
je
or
xchg
sub
lret
jle
pop
icebp
cmpsl
inc
cwtl
push
push
add
shlb
mov
inc
push
xor
or
adc
add
mov
adc
jbe
dec
inc
data16
jo
inc
push
or
add
movsl
push
loope
push
and
test
sarl
push
and
dec
mull
jle
fcompl
pop
push
insl
loop
in
pop
pop
pop
push
or
jns
and
rorb
xchg
jecxz
push
xlat
push
push
pop
cmp
push
sbb
xchg
push
adc
jno
sub
out
and
push
lods
mov
addr16
jp
mov
or
adc
add
stc
pop
add
ja
pop
push
xchg
popf
cwtl
add
xchg
dec
pop
nop
push
push
pop
pusha
xor
and
mov
clc
jo
pop
dec
xor
scas
mov
int3
ss
xor
and
xchg
push
and
dec
inc
push
flds
pop
pop
push
add
mov
es
xchg
or
cmp
adc
popa
es
sbb
daa
rep
cmp
test
dec
sub
mov
pop
neg
pop
pusha
adc
adc
add
jp
hlt
push
add
and
mov
mov
dec
mov
jnp
pop
add
mov
xchg
ret
sub
and
xchg
lock
lcall
ja
aas
adc
dec
icebp
loope
in
ds
orl
fisttpll
sbb
cmpsl
cmp
adc
les
lcall
int3
cmpsb
push
pop
or
mov
sbb
scas
and
loopne
dec
bound
pushl
call
mov
push
shlb
repnz
filds
dec
jb
push
enter
pop
jne
icebp
pop
or
pop
outsl
mov
mov
adc
cmp
or
xchg
push
inc
iret
cmp
adc
cmp
adc
fbstp
adcl
mov
aad
or
jno
adc
adc
fisttpll
or
pop
in
jns
xchg
dec
mov
pop
inc
outsl
ljmp
or
push
sbb
or
daa
add
pop
and
add
test
stc
pop
sbb
mov
pop
pop
adc
enter
adc
inc
loope
cltd
or
outsb
sbb
mov
and
lock
repz
lea
mov
add
addb
xor
or
rol
adc
sbb
pop
or
adc
sbb
popa
cmp
push
orb
inc
clc
and
push
cmpsb
movb
dec
push
and
pushf
cmp
inc
movsl
push
cmp
sbb
or
mov
sbb
pushf
ret
inc
pop
pushl
push
inc
push
cmp
inc
inc
popa
push
add
sbb
add
dec
dec
iret
test
push
pop
and
subl
inc
aaa
test
lahf
pop
fsubl
clc
and
scas
lea
pop
push
enter
ret
pop
mov
xor
test
and
push
ja
movsb
insb
iret
xor
sbb
sbb
xchg
cmp
xor
cli
loopne
fs
push
call
add
xor
loopne
hlt
mov
push
jne
cmpl
lea
test
and
xor
mov
push
push
inc
push
ljmp
push
dec
or
mov
push
cmp
or
and
sbb
shlb
sbb
sbb
fadds
in
test
adc
daa
cmp
or
pop
leave
and
xchg
int3
sub
icebp
sub
add
and
push
mov
icebp
inc
ljmp
jb
or
sbbl
cltd
jno
xchg
cwtl
sub
imul
adc
mov
data16
push
jmp
cmpsb
jg
shlb
ss
cmp
inc
rolb
mov
lea
in
sub
loop
and
test
movntps
in
test
add
fldl
pop
xchg
push
cld
dec
push
in
mov
sahf
cmpb
and
or
xor
fists
ss
dec
ds
in
adc
xor
rol
dec
popl
xchg
mov
mov
sbb
nop
sbb
push
xor
out
xor
ret
aad
popa
sarl
cmp
jmp
pop
in
sbb
into
pusha
daa
add
or
das
lahf
pop
imul
aad
shrl
arpl
dec
sbb
sub
add
enter
mov
lcall
adc
and
ret
jne
cmp
xor
mov
ss
repnz
aas
push
mov
or
fdivr
mov
push
inc
push
push
xor
hlt
push
or
push
cmp
jg
xor
mov
js
stos
pop
nop
mov
lods
dec
popa
cltd
out
mov
sub
or
pop
inc
dec
loop
mov
jge
mov
out
sbb
push
dec
adc
inc
adc
pushf
add
mov
mov
dec
mov
jbe
jmp
in
push
cmp
jecxz
out
cwtl
sahf
sub
push
in
pmulhw
in
xor
sar
adc
adc
or
or
aas
imul
and
and
xor
mov
add
and
and
mov
ss
jge
sahf
jae
movb
shl
movsb
adc
xchg
or
mov
xchg
xor
mov
daa
xor
and
adc
mov
enter
push
xor
mov
sti
test
rcrl
add
aam
aam
jle
xor
test
inc
or
ljmp
call
outsb
xor
stos
add
mov
mov
jbe
or
jbe
lret
out
in
rcr
and
shlb
int3
dec
es
in
adc
jno
or
bswap
leave
mov
scas
jo
xor
mov
lock
and
jecxz
ficompl
push
jae
xor
sbb
movsl
xor
push
xchg
adc
cli
int3
or
loopne
inc
mov
insb
decl
lea
mov
xor
lsl
push
or
pusha
jo
pop
push
aad
inc
mov
fisttpl
imul
adc
jp
mov
xor
mov
push
lods
add
push
imul
loop
test
cwtl
loopne
iret
or
inc
ss
push
rclb
iret
sub
leave
or
pop
sbb
sbb
pop
ja
xchg
outsb
ljmp
push
nop
loopne
jno
xor
sub
inc
sbb
xchg
mov
mov
sub
aaa
jmp
pop
imul
xor
mov
xor
pop
xor
push
pop
in
push
add
bound
cld
add
adc
push
inc
lock
adc
add
addb
cmp
mov
lock
rcr
pop
fldl
cmp
lods
pop
jae
stos
dec
rolb
test
mov
cmp
out
sbb
cwtl
call
les
and
xchg
repnz
addb
xchg
xor
call
sub
jbe
sub
fistpl
xchg
mov
int
cmpsb
pop
sub
add
inc
xor
lcall
cmc
lds
jmp
xchg
loopne
sti
inc
xor
or
push
jle
adc
cmp
outsb
and
push
push
dec
adc
out
cmp
mov
jmp
and
fildll
push
or
leave
jl
pop
shlb
shlb
mov
push
jmp
lock
clc
daa
outsl
cs
inc
insb
out
add
stos
inc
add
mov
sahf
xor
into
add
and
and
data16
call
and
jb
sbb
push
add
add
mov
js
popa
lock
inc
or
sub
add
dec
cld
sub
jge
adc
sub
add
xchg
dec
lcall
dec
in
mov
lahf
mov
xor
dec
sbb
xchg
pusha
icebp
xchg
std
insl
push
inc
inc
inc
pop
push
mov
lods
xor
cmpsl
inc
lods
sub
jnp
cmpsb
jmp
or
lmsw
enter
jmp
xor
clc
jb
adc
jle
xor
inc
mov
loope
push
pop
xor
movsl
mov
pop
call
mov
mov
inc
mov
adc
les
enter
pop
pop
pop
pop
pop
rclb
aam
fmuls
fdivrl
sub
sub
mov
fdivs
jne
enter
inc
push
iret
sub
call
sbb
adc
push
scas
lds
cmp
mov
rorb
ja
jno
in
push
outsb
cmp
mov
fs
or
test
rolb
add
mov
or
fwait
mov
movsl
sahf
jne
ret
pop
jns
lods
xor
rclb
or
andl
push
xchg
std
lret
jbe
xor
mov
inc
inc
cmpsl
rolb
pushf
fidivrs
cmp
mov
dec
push
fnstenv
xor
dec
jp
or
pop
pop
lahf
adc
push
add
mov
adc
add
jmp
movb
pop
or
lock
movsb
jns
mov
dec
orb
add
adc
push
inc
push
int
sub
ret
in
pop
add
push
or
cmp
insb
cmp
mov
xor
test
shll
push
pop
or
test
mov
mov
fadds
fcompl
fstpl
mov
and
cmp
ret
xor
nop
or
add
or
add
or
shl
mov
push
add
mov
adc
movsb
jb
cmp
mov
in
jge
cmp
jne
dec
ret
push
mov
inc
data16
push
test
cmp
xorb
xchg
sbb
or
aas
mov
and
jle
push
adc
cmpsb
mov
xor
js
clc
loopne
imul
inc
xchg
lock
ret
mov
movb
xchg
pusha
out
js
xchg
push
push
push
and
mov
iret
popa
inc
mov
test
jo
fisubl
dec
movsl
add
mov
mov
dec
xor
push
push
bound
dec
mov
adc
inc
les
mov
jg
or
adc
sbb
or
fs
xchg
or
loop
repz
hlt
imul
mov
mov
outsb
jecxz
pop
xchg
out
push
or
test
or
push
push
addl
cmp
jbe
cmp
jbe
mov
sbb
pop
push
inc
mov
fstp
dec
fcoms
lock
mov
jg
enter
sbb
adc
add
inc
movsb
xchg
dec
or
hlt
mov
and
mov
sbb
jg
xor
push
mov
adc
pop
lea
mov
aad
popl
insb
cmp
scas
lea
jg
or
fdivrl
mov
push
push
movsw
clc
invd
unpckhps
add
movsb
push
adc
inc
es
push
or
std
jmp
pop
lods
fistpl
jge
adc
ss
bound
sub
test
mov
xchg
jmp
add
je
push
xlat
arpl
ret
mov
ret
or
push
pop
scas
mov
xor
cmp
sahf
jnp
movl
lcall
jne
mov
push
daa
jne
loop
push
jne
adc
sbb
and
and
mov
out
pusha
jle
jmp
out
leave
jb
roll
mov
cwtl
sbb
insl
or
push
mov
test
xor
lahf
cmpsl
jp
or
or
or
int
inc
xor
subb
test
je
out
negb
jbe
mov
inc
cmp
jb
jmp
adc
xchg
lea
test
shl
test
fldln2
cmp
call
ja
daa
fstps
and
dec
imul
dec
sbb
sbb
xor
rcll
sub
mov
jae
mov
dec
sbb
and
sub
es
sub
mov
fdecstp
sbbl
jno
frstor
popa
fimull
mov
mov
add
nop
mov
push
dec
mov
xchg
pop
loopne
xor
ret
inc
mov
aas
imul
cmp
mov
push
test
dec
dec
inc
lea
sub
cld
lds
jno
dec
or
mov
cmp
jns
xor
out
pop
es
stos
xor
sbb
shlb
repnz
mov
jge
or
xchg
add
mov
pop
scas
xor
les
cmpsb
push
mov
shl
es
dec
push
mov
jl
rcr
or
jmp
fwait
pop
in
or
cld
cmp
hlt
dec
mov
push
sbb
pusha
add
mov
jae
sbb
xchg
and
sub
fadds
std
test
xlat
dec
jnp
lahf
cmpsl
rclb
ja
sbb
push
mov
test
jl
add
int3
jp
adc
dec
xor
pop
and
pushf
xchg
mov
mov
outsl
mov
cld
and
or
mov
sbb
pusha
int
adc
pop
shlb
pop
push
loop
es
cmpsb
xor
mov
sub
sahf
push
xor
sar
js
test
or
mov
scas
mov
rolb
addb
ss
hlt
insl
jb
lods
xor
or
cmp
sbb
mov
pop
dec
mov
jmp
ljmp
inc
cmpb
inc
faddl
inc
add
sbb
ret
and
rcrb
cmp
adc
in
or
jmp
or
mov
sbb
mov
inc
lahf
mov
xchg
adc
jno
gs
mov
int
sub
and
pop
or
ss
mov
ss
mov
aas
out
andl
xor
fsubrp
jge
cmp
into
or
pop
add
pop
sub
add
testb
pushf
lods
push
push
adc
sbb
pusha
scas
jo
push
je
or
pop
ret
add
mov
adc
or
adc
mov
cmp
mov
mov
sub
into
mov
sarb
jmp
pop
lock
xchg
lret
insl
cmp
mov
data16
cmc
add
fistpll
mov
icebp
adc
or
or
or
int3
sub
in
xor
adc
orl
lret
xchg
jg
or
pop
adc
divb
imul
or
adc
adc
sbb
dec
cmp
ljmp
push
xchg
rcrb
or
clc
dec
or
inc
sub
xchg
fsincos
fld
jle
inc
push
push
aas
fldenv
std
inc
mov
sub
add
icebp
add
jmp
dec
push
xor
adc
push
xchg
pop
xor
push
add
rclb
cmc
outsb
cld
aaa
pop
inc
add
dec
add
push
push
mov
mov
sub
pop
pop
inc
jge
pop
adc
jne
xchg
add
push
rcrl
cmp
adc
out
les
cld
insl
push
incl
dec
cmp
loopne
je
cmp
jbe
adc
and
icebp
adc
mov
je
aam
adc
pop
pop
xchg
or
cmp
sub
and
dec
pusha
int3
pop
sahf
mov
shl
das
sbb
inc
sbb
adc
loope
dec
xchg
cmc
insl
sub
mov
mov
inc
sub
insb
push
fildl
aam
sub
mov
js
jb
icebp
or
lea
or
popa
push
and
rclb
mov
mov
and
mov
cmp
xchg
lods
fwait
xchg
jo
inc
fmull
xor
cmp
add
jmp
movsb
push
xorl
or
mov
ret
mov
iret
insl
and
lea
aam
js
test
testb
sub
mov
cmp
in
cmp
xor
pextrw
lods
push
pop
add
or
dec
jns
shl
enter
push
enter
sbb
mov
mov
sbb
pop
pop
mov
mov
jg
adc
ds
jno
nop
inc
adc
notl
add
lock
jg
or
jb
xor
and
or
mov
jmp
aaa
lret
pop
in
jle,pt
clc
cs
mov
jp
add
adc
sbb
push
cmp
or
lea
jbe
je
je
pop
add
mov
mov
adc
push
stos
adc
cld
out
imul
cmpsl
in
je
stos
inc
cld
push
aaa
jmp
jmp
push
inc
xor
pop
cmp
jmp
or
adc
xor
cmpsl
outsl
xlat
inc
repnz
add
loopne
divl
loopne
lock
call
xor
push
outsl
and
pop
or
sbb
mov
insl
pop
mov
mov
add
cmp
xchg
sarl
cwtl
fdivl
mov
and
xchg
fdivs
outsb
enter
insl
push
movsl
or
data16
pop
dec
sbb
ja
mov
xor
or
mov
mov
imul
jmp
and
loope
dec
nop
or
call
pop
test
shll
into
rorb
out
mov
fisttps
int
les
inc
cmp
jp
sti
mov
jnp
and
add
bound
mov
inc
jge
jnp
andb
dec
in
lahf
ss
push
mov
jne
mov
xchg
aam
lods
loope
rolb
xor
xchg
int3
test
mov
test
pop
push
insb
std
jle
jne
adc
jmp
push
add
inc
je
rolb
out
stos
pop
xchg
sbb
xchg
xchg
sarb
ljmp
xor
mov
iret
gs
mov
cmp
es
add
adc
sub
js
std
in
inc
icebp
fs
jmp
ret
jns
popa
adc
mov
or
nop
sub
mov
fildl
fadds
call
add
xchg
add
outsl
or
in
xor
adc
jbe
inc
cmp
cmp
ja
mov
cmp
aam
push
xor
outsl
push
xor
mov
jne
add
in
cmp
mov
cmp
or
rclb
enter
cmp
inc
scas
mov
loop
aas
mov
pushf
sahf
jmp
orl
push
push
out
dec
call
mov
jb
idiv
lcall
add
mov
cmp
jae
lea
jmp
cmpl
stos
fldcw
inc
out
repz
add
insb
and
nop
mov
sub
adc
mov
inc
aam
sub
sub
mov
and
cmpl
dec
sarl
filds
push
lea
xchg
mov
and
pop
fwait
hlt
push
push
rcrb
xchg
call
and
push
push
dec
arpl
mov
pop
mov
and
rol
pop
mov
pop
addb
adcl
sbb
and
inc
loop
jb
sub
mov
push
lahf
out
mov
push
xor
add
push
les
cmp
movsl
pusha
add
pop
or
xchg
daa
enter
pop
inc
or
xor
xchg
sbb
add
sub
dec
insl
inc
fcompl
xor
cmp
mov
roll
lock
nop
xor
mov
cmp
fcomps
hlt
fwait
shrl
call
stc
mov
jae
cmpsl
pop
jp
xor
ja
rcl
sbb
loopne
sbbl
je
or
vmread
lea
fdivrl
jb
jo
jmp
xor
lret
sub
scas
lods
pop
loopne
jae
in
push
pusha
addl
add
xchg
pop
mov
es
sbbl
add
dec
rcrl
sub
adc
fwait
or
in
adc
sub
cmp
push
jbe
mov
bound
orl
lods
cld
subb
std
push
add
cmp
cltd
add
inc
movsb
and
add
sbb
cmp
cmpb
pusha
adc
push
pop
add
adc
or
sbb
mov
int
daa
dec
xor
aad
adc
or
xor
adc
sti
push
mov
andl
dec
xor
adc
sar
or
aam
jns
pop
pop
pop
xchg
andb
push
clc
dec
les
and
pop
xor
inc
cld
add
lahf
pop
pusha
filds
xchg
lret
or
mov
loopne
jnp
cmp
dec
jge
mov
adc
cmp
push
divb
dec
rorl
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
or
andb
push
push
out
cmp
pop
pusha
jo
stos
sbb
mov
inc
dec
rorb
repnz
or
clc
hlt
hlt
popa
iret
popa
in
jb
inc
pop
lods
adc
and
movsb
pop
pop
or
mov
push
cmp
call
adc
sbb
fxtract
jne
xchg
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
push
fldenv
add
in
add
or
imul
xlat
cld
clc
pushl
cmp
pushf
fadd
fldl
lea
mov
mov
jne
sbb
sub
dec
clc
aam
adc
orl
data16
or
xor
mov
movl
jg
push
mov
sbb
and
je
mov
je
cmpb
adc
mov
add
jb
inc
and
pushf
lea
adc
or
loope
adc
inc
adc
xor
adc
xor
adc
je
xor
in
cmc
lods
pop
daa
sahf
jae
jne
repz
xchg
leave
inc
inc
jo
ja
scas
lock
mov
pop
and
movsb
cmpl
jne
cmp
dec
lea
push
out
jp
mov
jae
dec
hlt
movsl
push
xchg
push
addb
jne
lea
cmp
fstp
pop
pusha
sub
imul
push
jne
sub
das
push
jmp
cmp
lea
pushl
jne
push
push
test
loopne
or
dec
sti
mov
icebp
iret
xor
mov
outsl
cli
adc
xor
loopne
outsl
cltd
ret
sub
push
cmpsl
lock
pop
data16
cmp
shlb
fists
loopne
and
lret
push
dec
push
inc
adc
xor
push
movzbl
push
mov
or
push
xchg
es
mov
ret
xchg
stos
sahf
in
clc
xchg
dec
test
xchg
jge
mov
cmp
mov
jb
loope
push
pop
push
or
mov
inc
call
loop
nop
rcrl
or
cmpsl
jg
pop
xor
adc
mov
or
mov
mov
mov
inc
mov
add
push
fmul
cmp
inc
insl
inc
jne
xor
test
push
out
js
test
or
mov
iret
xor
stos
jmp
lea
jge
mov
add
mov
test
lds
fildl
fldcw
adc
dec
adc
mov
sbb
sbb
jae
push
repz
popa
data16
jns
clc
andl
dec
mov
and
inc
movl
decb
xorl
insb
jno
sbb
cmp
es
mov
call
cmpb
push
mov
adc
addb
mov
mov
xor
pushf
mov
loope
outsl
mov
mov
ret
jmp
sbb
and
ret
jo
sub
or
adc
out
mov
subb
or
xchg
push
icebp
sbbl
fiadds
dec
adc
hlt
into
jmp
leave
movsl
aam
lea
inc
xchg
pop
xchg
pop
push
dec
lret
mov
jnp
sti
sub
icebp
or
mov
jb
push
inc
xor
mov
cmp
pop
rol
sub
cmp
addr16
icebp
lret
clc
and
jle
aam
out
sbb
cmp
pushf
lock
shlb
inc
add
hlt
add
add
enter
mov
cmovb
mov
lock
add
push
mov
xchg
cmp
dec
clc
jmp
inc
add
iret
aaa
xchg
ficompl
sbb
movl
add
mov
lea
sahf
mov
fidivrl
adc
mov
cmp
pop
mov
and
daa
in
add
adc
sub
inc
mov
testb
sub
out
add
mov
ds
repnz
rolb
sub
stos
cmp
pop
xor
or
add
jp
push
js
cmp
xchg
arpl
sbb
push
in
iret
cmpsb
loopne
inc
push
adc
push
mov
je
jp
push
add
andl
test
add
movsb
inc
test
jge
inc
sbb
test
inc
hlt
call
xor
sbb
adc
out
or
cmp
adc
push
pop
mov
adc
out
in
jl
cmp
jmp
dec
iret
mov
clc
mov
xor
or
test
mov
mov
inc
jl
cs
cmpl
xchg
out
mov
add
jge
jmp
adc
jno
repnz
sbb
shll
and
or
repz
dec
and
jne
sbb
or
sbbl
sti
ret
xchg
inc
mov
popf
or
test
adc
xor
lea
les
imul
movl
and
mov
xlat
mov
test
pop
push
repz
pushl
cmp
xchg
in
fimull
push
xchg
and
pop
push
adc
adc
fwait
sub
pushl
sub
pop
push
and
cli
loope
sbb
mov
mov
mov
loopne
cmp
insb
in
mov
fdivrp
mov
xor
test
jp
aam
popf
xor
push
xchg
jo
and
xchg
outsb
and
jno
rcll
xchg
mov
loope
lcall
xchg
mov
pop
jnp
roll
int
dec
add
mov
mov
and
xchg
dec
xlat
clc
inc
call
iret
xchg
cmp
add
add
cltd
sub
inc
mov
xor
sub
cmp
push
add
sbb
fdivl
xor
adc
push
lods
outsb
pop
fisubrs
js
lea
inc
push
lea
cli
sub
push
movb
aaa
inc
pop
xchg
ret
shrl
leave
xchg
lods
loopne
inc
cmpsb
and
imul
lcall
add
xchg
mov
cmpsl
mov
jmp
mov
lea
inc
dec
int3
cmp
jae
sub
xchg
loopne
adc
pop
stos
sbb
cs
adc
ljmp
iret
mov
cmc
xchg
rorb
fstpt
inc
es
pop
aad
cmp
fstpt
add
mov
jnp
arpl
inc
inc
mov
xor
sbb
or
sti
mov
or
leave
test
pop
or
fstpl
call
pop
xor
out
push
push
add
xchg
pushl
sub
cltd
pop
push
mov
int3
add
mov
mov
add
add
cld
jb,pn
roll
out
mov
scas
and
sub
enter
adc
cmp
jne
or
add
add
scas
push
and
dec
sub
add
test
sbb
lds
inc
mov
sub
xchg
xchg
je
mov
adc
fucomip
sub
cltd
add
inc
cmpl
jmp
mov
imul
or
and
xchg
ljmp
xchg
or
add
and
xchg
inc
cmpsl
aad
jl
fucompp
int3
inc
mov
or
and
and
xchg
sbb
sub
ret
mov
add
insl
loop
pop
pushl
jmp
add
mov
int
jg
pop
in
pop
loop
push
cmp
aas
mov
mov
fcoml
mov
or
mov
or
mov
push
out
subl
mov
mov
ja
jg
sbb
cmp
jne
cmpb
ret
push
loop
push
add
dec
cmp
xor
push
adc
loopne
imul
divb
ja
push
inc
jbe
dec
lock
inc
pop
jns
or
adc
jp
xor
mov
lock
xchg
scas
test
push
shr
incb
push
cmp
jae
inc
jmp
push
mov
lock
or
mov
es
inc
mov
aaa
push
mov
aad
movb
adc
les
fdivrs
ret
mov
ja
push
add
addl
or
int
addr16
and
pop
test
test
dec
mov
dec
in
jecxz
xchg
push
push
sbb
mov
cwtl
or
jle
in
rcrb
pusha
aaa
or
mov
loopne
ficompl
lods
fisttpl
jmp
xchg
mov
lds
push
xchg
push
lret
sahf
addb
data16
in
fwait
or
in
insb
adc
or
mov
mov
inc
or
or
and
and
outsb
push
ret
jae
xchg
add
mov
popa
or
or
xchg
inc
add
adc
and
xchg
outsb
mov
mov
je
mov
cli
fwait
push
jb
adc
ja
cmpb
push
push
dec
sbb
or
or
xor
sbb
or
ficoms
jo
cmp
fsubs
mov
cmpb
add
mov
fadds
cli
mov
add
cmp
outsl
mov
pop
push
inc
or
add
in
adc
es
mov
aam
xor
lds
fidivs
movb
aaa
jmp
mov
adc
in
fcmovnu
shlb
lea
cli
ja
cmpb
out
daa
subl
push
xor
nop
adc
inc
pop
sbb
jbe
xor
pop
adc
push
pushf
or
in
mov
std
pop
or
jne
mov
dec
xchg
push
addr16
test
fsubl
subl
mov
add
in
popl
pop
in
inc
insl
inc
jge
add
sbb
add
sbb
rol
xchg
sub
sbb
jns
insl
pop
outsl
inc
inc
add
mov
xchg
icebp
mov
iret
xor
aam
inc
mov
adc
call
pop
inc
das
push
cmp
jne
pushl
lea
orl
jmp
mov
mov
shl
dec
cmp
lea
jl
mov
mov
das
and
xor
jns
mov
sub
int
rep
ret
jne
jmp
rcll
dec
cld
lock
sbb
cmp
mov
and
add
push
and
inc
adc
add
xchg
mov
pop
test
push
mov
dec
or
xor
sub
inc
adc
jbe
pop
and
and
or
mov
into
sbb
dec
push
sub
orb
lock
dec
sub
adc
rolb
sbb
pusha
mov
or
faddl
and
vmovsd
insb
push
push
sahf
xor
inc
add
je
cld
push
jns
cmc
push
mov
pop
mov
in
sub
mov
adc
inc
xlat
movsl
stos
rcl
adc
and
or
imul
mov
jne
fsub
mov
movsb
cmpb
or
fadds
mov
test
push
insb
lock
or
cwtl
xor
test
push
pop
cmpsb
movl
bound
lahf
aad
pop
gs
or
fcoml
and
xor
fdivrl
mov
jo
add
jbe
pop
ja
mov
adc
aas
xor
push
cmp
cld
out
jg
or
aam
rolb
or
or
ret
rorl
sarb
js
insb
cmpsb
mov
loopne
adc
push
add
rcl
test
jne
inc
rclb
sbb
ja
cmp
sbb
xorb
xor
xchg
int3
add
push
js
jle
adc
packsswb
mov
sub
es
adc
scas
mov
movsb
sbb
std
xor
fistpl
pop
add
jne
call
xor
roll
pop
jns,pn
in
jmp
mov
iret
rcrb
rcl
jecxz
popf
dec
stos
test
leave
arpl
sbb
arpl
or
test
cmp
in
into
or
cwtl
addr16
enter
xchg
mov
neg
or
js
or
roll
loope
pop
push
pop
xor
or
and
push
jmp
call
jbe
push
dec
dec
inc
and
dec
in
inc
adc
mov
and
add
in
int3
mov
add
test
lods
je
enter
inc
movsb
scas
push
iret
out
push
repnz
je
push
adc
lods
jl
inc
push
and
push
inc
sbb
push
sbb
out
jmp
arpl
sbb
imul
or
lods
pop
shr
bound
push
ret
xchg
pop
fisubrl
jge
jno
jle
push
cli
popf
and
jmp
lea
inc
rorb
xor
add
or
hlt
or
sbb
sarl
sahf
addr16
mov
add
add
cwtl
jno
outsl
pop
cmpsb
fld
push
leave
lock
add
je
add
and
sbbl
inc
aaa
dec
pop
adc
jp
pusha
sti
mov
fld
mov
and
mov
dec
jmp
push
mov
jns
add
or
mov
sbbb
fs
lods
movsl
jmp
in
jne
mov
dec
sbb
orb
ss
fisubl
or
xor
add
leave
push
lea
pop
mov
pop
ret
jmp
or
fsts
push
sub
ret
mov
das
loopne
jg
cmp
rorb
lahf
pusha
mov
rorl
rcrb
and
mov
rcrb
mov
pop
jl
xorb
mov
pop
call
test
fcoms
test
repz
movsb
sbb
lds
lods
add
sub
pop
dec
popa
adc
jns
mov
lea
or
push
aaa
lret
aaa
mov
insb
les
in
lock
dec
sti
fmuls
add
adc
add
loopne
mov
movsb
daa
nop
int3
incb
aas
pop
jle
xor
addr16
hlt
daa
int3
mov
cld
pop
dec
dec
test
inc
vprotd
dec
imul
inc
adc
mov
sbb
xor
sahf
in
add
dec
mov
or
mov
mov
pop
dec
push
sbb
leave
imul
inc
mov
nop
adc
inc
ret
cmp
les
inc
sahf
push
in
sbb
in
and
xor
pusha
or
nop
dec
movl
add
sub
push
inc
iret
out
dec
lcall
sbb
xchg
in
push
sub
data16
in
loope
sti
mov
add
fisubrs
mov
add
xor
iret
pop
add
pop
daa
jmp
ret
or
lock
icebp
mov
lods
fildl
out
adc
lea
push
cmpsb
lods
ljmp
inc
lods
dec
repnz
loopne
sub
xchg
js
outsb
pop
and
jmp
or
dec
mov
imul
imul
sub
pop
loope
lahf
aam
push
mov
mov
int3
pusha
adc
sub
mov
lods
push
push
subl
es
mov
lea
push
or
or
subl
adc
outsl
enter
dec
dec
pop
aaa
test
scas
sub
jae
dec
lods
fadd
lret
lgs
push
jns
cmp
loopne
push
in
les
adcb
movsl
cmp
subl
dec
xchg
push
push
in
jmp
pusha
xchg
jp
pop
pop
lods
shl
inc
enter
xchg
adc
aaa
lea
inc
shr
shrb
pop
inc
sub
cmp
loope
nop
popa
push
adc
stc
or
cmp
push
mov
cmp
int3
test
xchg
ja
mov
ljmp
xchg
lock
je
push
mov
bound
lock
call
mov
scas
cmp
js
xchg
mov
mov
push
je
push
cli
sub
outsl
add
inc
movb
push
lea
daa
xchg
add
test
push
mov
cmpsl
call
es
iret
or
mov
push
mov
mov
fwait
or
dec
cmpsl
sbb
dec
lock
dec
cmpsl
movsb
adc
inc
pop
sbb
lods
cmc
sbb
je
mov
sub
das
xor
shlb
mov
cmp
call
cmp
jl
jno
or
lcall
mov
dec
sarb
sbb
mov
test
jnp
mov
add
sbb
push
or
inc
and
je
ret
push
lock
test
xor
jnp
leave
inc
dec
rorl
mov
sub
je
adc
mov
mov
mov
xchg
sbbb
fiadds
inc
cmpl
loope
pop
xchg
jge
mov
das
imul
aaa
int3
fcoml
mov
shll
sub
cmp
call
add
or
jnp
push
xchg
push
adc
dec
cmp
lret
add
push
dec
add
mov
insl
lret
jne
jecxz
sbb
sub
pop
pop
in
push
daa
in
and
lock
xor
andl
pop
leave
pop
aam
mov
iret
daa
inc
pop
or
movsl
push
lcall
sub
mov
aad
xor
cli
lret
mov
cmp
mov
leave
add
cld
fs
adc
add
and
add
shlb
add
dec
enter
push
xor
or
mov
mov
xchg
xor
cmpsb
cmpsb
sbb
adc
nop
sti
sbbb
rcrl
adc
rcll
std
lcall
outsl
jne
push
cs
xor
fucom
and
sti
xor
add
mov
jo
comiss
adc
shrl
movsl
push
pop
jmp
mov
sbbl
mov
jo
pop
dec
add
repz
popf
inc
dec
sahf
cld
test
push
add
adc
jg
ret
jne
mov
cmp
jb
mov
add
push
addb
inc
mov
mov
aaa
sbb
push
cmp
mov
mov
or
lret
lahf
sbb
mov
je
jl
inc
add
push
fldcw
test
clc
or
hlt
lods
ret
aas
or
mov
lea
rclb
mov
mov
mov
add
dec
idiv
add
dec
mov
je,pn
mov
stos
hlt
adcl
add
inc
add
add
jmp
mov
push
add
pop
mov
mov
sbb
mov
and
adc
add
sbb
lahf
data16
lock
lcall
adc
mov
call
out
and
test
or
xchg
test
sbb
aam
mov
push
sar
test
hlt
cmpb
or
mov
fwait
mov
jg
fisttpl
adc
sti
mov
andl
lea
sbb
dec
mov
stos
subb
lahf
jb
repz
mov
xor
or
add
aaa
or
and
pushf
and
mov
push
or
sub
push
push
addr16
cltd
pop
mov
mov
sub
xchg
es
push
adc
imul
or
popf
push
pop
cmp
js
insl
test
mov
or
rclb
sti
mov
stos
add
hlt
incb
mov
mov
inc
ja,pn
test
aaa
sbb
mov
inc
in
and
mov
ss
and
inc
inc
cmp
jecxz
push
insl
mov
fld
push
ljmp
jnp
es
xchg
cld
add
insb
cwtl
insb
xor
cwtl
add
pop
outsl
mov
fs
les
sub
sbb
mov
fwait
mov
out
sbb
jb
frstor
inc
aam
jecxz
dec
cmp
add
out
setp
outsl
push
jo
sub
int
fsub
int3
aas
sahf
adc
push
int
fcompl
xor
sarl
sbb
in
adc
std
and
int3
pop
ja
jnp
pop
mov
mov
push
sbb
loopne
nop
nop
sbb
or
mov
or
xor
jb
mov
sub
cmpsb
fisubrl
fdivrl
push
mov
dec
and
and
fiadds
mov
sub
cmp
in
or
push
popa
sbb
dec
fwait
mov
fs
scas
iret
fldenv
and
insb
add
sti
pushf
mov
popf
insb
or
lret
in
sbb
or
xlat
sbb
sub
xchg
xchg
add
sbb
pushf
push
dec
and
push
cmp
xor
xchg
lret
xor
cmp
dec
sub
xchg
cmp
inc
or
cmp
push
fs
jb
punpckhbw
inc
insb
push
mov
sti
repz
adc
add
les
lods
xor
or
std
and
int3
rcl
jg
xor
loopne
mov
mov
xchg
lcall
fsubrl
dec
fcomp
movsl
mov
push
movl
add
pop
mov
clc
aas
popa
test
cmp
push
add
addb
loope
andl
and
std
int
mov
fildl
popf
pop
mov
sbb
fs
push
fs
enter
xchg
mov
add
adcl
loop
aaa
adc
in
out
and
mov
jg
and
inc
and
cmp
xor
sbb
enter
adc
enter
or
ret
or
clc
add
adc
sbb
or
xchg
in
sbb
fadd
std
cld
push
xchg
xor
add
dec
cli
orl
push
in
inc
and
or
mov
mov
dec
pop
pop
sub
add
mov
push
add
mov
data16
out
dec
and
push
pop
push
fs
pop
cld
pop
sub
adc
cmp
inc
andl
jmp
cmpl
push
dec
push
sub
imul
push
mov
add
xor
mov
ja
nop
adc
xchg
or
rclb
pop
mov
pop
jb
dec
push
sbb
push
clc
fwait
adc
pushl
pop
push
pushl
and
lahf
inc
sbb
xor
clc
ret
cmp
cmp
pop
xchg
add
sbb
push
pop
or
xor
mov
add
inc
push
jmp
lea
mov
ret
mov
jo
mov
xchg
add
lods
out
cmp
je
movsl
xor
xchg
mov
push
inc
push
dec
push
pop
add
sbb
in
or
add
sbb
jns
push
sub
addb
mov
fisttps
fs
pusha
and
push
xchg
xchg
dec
aas
mov
ss
xor
sarl
adc
sbb
push
shr
hlt
or
pop
cmp
push
cs
add
xchg
sub
incb
clc
cmpsb
repz
pop
je
mov
orl
test
dec
dec
out
dec
shlb
lods
push
add
mov
or
mov
inc
adc
cmp
mov
loop
add
add
pop
or
sbb
roll
aas
cld
mov
pop
ret
add
cld
icebp
shll
mov
pop
popa
inc
mov
fsubr
and
xchg
inc
cld
xchg
push
test
add
test
xchg
pop
inc
int3
int3
loop
popa
mov
pop
sbb
inc
xorl
xor
test
sti
insl
push
inc
and
mov
mov
rorb
push
dec
sbb
inc
sub
cmp
mov
jb
xchg
xor
xor
adc
push
or
xchg
or
inc
adc
mov
out
imul
or
xor
or
inc
ljmp
pop
mov
out
jg
pop
add
stos
call
mov
and
imul
inc
mov
adc
inc
test
push
inc
cld
cli
jmp
mov
push
cmp
jae
sarl
adc
add
jmp
mov
and
or
loop
xchg
bound
loop
sar
sbb
pop
add
add
inc
xor
xchg
push
adc
jno
sub
mov
lea
dec
mov
pop
jae
sub
xchg
jge
insb
mov
add
aaa
and
xor
inc
mov
addl
mov
jo
adc
and
sub
test
sbb
and
mov
cmc
sbb
or
fs
lock
adc
inc
dec
xchg
popf
test
pop
lea
inc
or
rorl
cmp
add
imul
subl
and
lea
cmp
or
out
pop
shrb
orl
fdiv
pusha
push
cmpsl
or
andl
and
into
repz
add
add
push
sub
out
sti
xor
js
clc
xor
out
rorb
mov
cmp
mov
xorl
movsl
xor
and
lcall
dec
js
in
aam
clc
jo
sbb
dec
out
shlb
roll
hlt
jne
ja
jae
dec
push
ja
mov
inc
and
xchg
sbb
jbe
adc
stos
push
lock
sar
sub
push
icebp
js
in
pop
jo
js
sbb
hlt
shlb
mov
sub
push
test
inc
pop
test
mov
adc
lahf
cli
xor
fistl
pop
or
push
jmp
jecxz
fistpl
pop
jnp
dec
cmp
push
in
sbb
sub
lret
sbb
inc
popf
fcoms
or
and
inc
and
sbb
jae
adc
out
addr16
lods
push
pusha
sbb
lcall
sbb
js
adc
xor
adc
xchg
adc
add
test
adc
inc
dec
push
mov
mov
pusha
pusha
loopne
lahf
mov
stos
cmpsb
loope
xor
push
fldenv
mov
aad
fsubrs
mov
or
lcall
mov
test
add
jl
dec
test
cmp
xor
dec
insl
and
icebp
lods
in
dec
pop
push
xorb
pop
fisubs
outsb
push
movsb
mov
inc
push
mov
pop
orl
loope
call
loop
stc
inc
outsb
or
or
mov
add
pop
and
and
movsb
cmc
xor
pop
and
shrb
or
and
xor
ss
inc
pusha
xchg
xor
ret
orl
inc
stos
fmulp
jnp
orl
scas
sbb
leave
inc
add
push
das
je
stos
adc
pop
or
rclb
inc
or
inc
push
ficoms
push
jle
cmc
xchg
mov
pop
sub
icebp
das
dec
mov
inc
leave
inc
aam
mov
cmpsb
jle
out
cmp
or
jo
jg
mov
pushf
lods
dec
cmp
pop
repz
test
mov
ret
popf
push
call
lock
stc
jo
and
divb
jecxz
jns
int3
shrb
or
mov
xor
jmp
cli
and
xor
nop
arpl
enter
push
or
or
mov
test
jne
neg
and
lods
or
add
inc
pop
lock
ja
pop
hlt
std
orl
pop
lea
inc
data16
das
or
in
sbb
call
xor
sub
ret
mov
mov
mov
xchg
add
cmp
push
lret
cld
push
cmp
add
xchg
mov
push
xchg
push
push
add
jbe
sbbb
shlb
push
jnp
cmp
in
rcrb
adc
sysenter
mov
cwtl
int3
sahf
xor
push
pop
mov
xchg
cmpl
adcl
or
inc
add
stos
int
sbb
or
test
jae
ret
ror
and
pop
cmp
movsl
mov
inc
fsubrs
xchg
leave
in
call
daa
movzbl
jmp
mov
dec
repz
pop
nop
addr16
mov
xor
dec
cs
inc
pop
lods
mov
insb
xor
or
in
xchg
add
mov
fsubrs
sahf
test
bnd
push
push
or
sbb
sbb
xchg
dec
jae
jne
mov
out
xor
fildl
push
dec
sbb
jecxz
aas
orl
mov
daa
stc
cmp
sbb
orb
add
jno
repz
decl
aam
psubq
cmp
adc
fs
popf
ror
aaa
pop
out
cltd
mov
and
mov
sub
outsb
jbe
mov
add
out
test
mov
test
imul
ljmp
jge
bswap
dec
xorb
nop
inc
out
push
adc
fiadds
mov
orb
incb
inc
add
sbb
daa
add
pop
mull
lods
and
dec
jge
imul
jae
jmp
movsb
adc
sbb
pop
push
cwtl
dec
mov
fnsave
fs
mov
mov
mov
inc
icebp
lock
mov
jns
xor
mov
ret
dec
js
sbb
mov
aad
pop
xlat
test
mov
fwait
xchg
add
out
add
jl
inc
mov
ljmp
pop
xchg
ret
jge
push
stos
lods
jecxz
push
roll
les
adc
xchg
or
stc
daa
pavgw
jae
gs
sbb
inc
dec
dec
sbb
mov
aam
push
add
mov
stos
ss
mov
sbb
push
loopne
lahf
repz
adc
or
jmp
cmp
or
jg
lods
lea
rorb
dec
xchg
jo
ret
jne
aad
sbb
jl
clc
adc
data16
and
outsl
lahf
in
movsb
xchg
mov
scas
xchg
in
push
sbb
xchg
fdivr
and
inc
cmp
pop
inc
out
add
add
or
lea
inc
daa
daa
int
push
xor
popa
or
icebp
sub
push
andl
jns
jp
sbb
and
sbb
bound
add
into
lret
mov
aas
add
jb
gs
and
mov
pop
ret
fs
insb
sub
add
push
mov
lcall
sbb
add
mov
dec
add
addr16
ja
push
xchg
inc
sub
xor
xor
sub
xchg
inc
or
inc
ficompl
dec
enter
inc
pusha
mov
lock
add
mov
mov
in
mov
and
jae
fsubl
adc
push
mov
cmpb
sbb
les
arpl
xchg
test
mov
es
add
or
lret
leave
movsl
mov
fs
mov
adc
inc
or
or
hlt
lods
and
xor
mov
cmp
je
mov
xchg
push
addl
xchg
and
iret
leave
clc
jo
lcall
and
mov
add
cmp
scas
and
mov
mov
fwait
cwtl
subl
and
sub
popa
adc
dec
sub
jle
add
cmpsb
imul
dec
imul
pop
push
jnp
lret
pusha
pop
sbb
orl
jo
adc
fcomps
daa
lods
gs
cmpsl
dec
or
and
outsb
mov
xchg
and
and
mov
push
cmp
inc
or
in
int3
mov
test
or
popf
add
cmp
nop
xchg
push
in
call
out
stc
lea
mov
jmp
cmp
lar
loop
sub
add
push
ds
inc
out
fs
jmp
lret
std
inc
enter
add
lret
xor
push
pop
sub
xor
rcr
add
cwtl
sbb
enter
mov
in
rclb
add
inc
dec
xor
jge
sbb
pop
nop
inc
mov
iret
adc
xor
movsb
jo
ss
rcll
cmp
add
xchg
or
xor
add
add
cmp
lods
call
sbb
push
inc
mov
loopne
jbe
mov
or
repnz
xor
clc
dec
xor
push
cmp
and
adc
sub
inc
mov
cld
ret
cmp
sbb
lea
xchg
rclb
and
cmpsb
jne
push
sbb
or
sbb
xchg
inc
xchg
mov
int3
sti
test
xor
push
int3
push
mov
mov
add
or
rorl
orb
xor
stos
adcl
inc
loopne
xor
jmp
xor
add
cli
rorb
cmc
scas
pop
daa
or
jne
insb
jne
add
add
mov
push
and
adc
or
mov
and
xor
pop
adc
or
fsubrl
fsubl
jmp
push
enter
cwtl
push
jns
mov
inc
scas
add
cmpb
xchg
mov
or
imul
sbb
cmpsb
or
cmp
addr16
sbb
sbb
jmp
push
jmp
popa
lea
inc
add
mov
dec
mov
insb
je
jae
lea
xchg
movsl
lods
sub
mov
dec
cwtl
outsb
xor
sbb
xchg
sbb
pop
push
inc
pushl
daa
call
enter
cmp
jle
cmp
xor
mov
ret
cmp
out
push
mov
add
aaa
mov
fcomi
lds
popa
sbb
adc
fsubrs
rcrb
or
add
rcr
mulb
es
mov
jne
outsb
pop
mov
dec
pushl
dec
pusha
mov
mov
mov
mov
sbb
cs
mov
xchg
mov
cli
or
pop
icebp
mov
push
loop
adc
daa
adc
inc
incl
pop
sub
add
and
je
out
adc
popa
roll
jge
sbb
cmpsl
bound
movsb
cmp
movsb
inc
and
shlb
ror
mov
in
jb
and
in
cwtl
push
repz
repnz
pop
pusha
xchg
sbb
movsb
and
ss
leave
lds
ss
mov
add
pushf
cmp
mov
enter
mov
jg
add
jb
add
and
mov
mov
mov
inc
lret
int
inc
ja
sbb
gs
arpl
add
fcomps
inc
pop
fmuls
in
jle
pop
dec
insb
in
lock
or
push
mov
push
stc
loope
sbb
out
dec
pop
add
rcr
out
ret
out
sbb
or
das
push
iret
adc
and
in
sbb
inc
sub
mov
mov
inc
bound
nop
js
or
mov
bound
sbb
sbb
call
push
sub
movl
ss
hlt
inc
int3
fildl
push
in
inc
call
adc
jnp
mov
cmp
sbb
stc
jnp
pop
ret
fs
dec
add
fidivl
pusha
rorl
pop
cmp
cmpsl
add
add
sbb
in
sub
pop
lea
dec
rclb
aaa
dec
or
sbb
sbb
push
dec
mov
adc
pop
mov
into
loopne
testl
leave
and
les
add
mov
sbb
add
adc
rcr
stos
arpl
cmpsl
inc
jns
pop
adcb
fistpl
xchg
push
mov
jae
add
xchg
das
orl
inc
bound
sbb
lock
add
cmp
cld
xor
jp
push
mov
sub
arpl
mov
xor
push
xchg
popa
and
or
push
cmp
add
out
loope
and
out
leave
jecxz
arpl
or
cmpsl
add
and
int
mov
dec
gs
jmp
mov
sbb
sub
mov
sbb
mov
hlt
add
inc
pop
add
das
ret
cmp
mov
adc
push
lcall
cmp
push
inc
pop
hlt
cltd
fisttpll
sub
xor
in
movsb
jb
adc
adc
push
and
bound
add
ror
lret
in
adc
mov
and
cwtl
jb
cmp
outsl
sub
sub
and
sbb
push
mov
or
sub
sbb
mov
mov
popa
push
in
push
scas
loopne
sbb
scas
or
sbb
pop
inc
sbb
sbb
rcrl
push
sbb
inc
and
ds
push
pusha
dec
aad
inc
mov
cmp
lods
sbb
pop
mov
add
inc
arpl
and
imul
mov
scas
loopne
test
push
xor
rorb
xor
and
mov
incl
mov
cmc
jne
mov
or
jns
sub
sahf
rolb
test
iret
lods
out
testl
es
movsl
push
jae
push
addl
loopne
out
xchg
xchg
pop
jp
push
mov
pop
or
mov
sbb
xchg
inc
fs
xchg
gs
sub
and
rclb
xlat
mov
mov
lret
pushl
jmp
test
js
rolb
lret
jge
bound
cmpsb
dec
jl
je
jg
mov
and
cmp
jo
aaa
enter
jne
and
jmp
jae
xor
pop
and
push
add
push
pushl
aaa
pushl
addl
xor
in
sub
ficoml
inc
mov
mov
mov
and
or
dec
pop
shll
add
sub
fdivrl
and
adcl
notl
inc
mov
imul
or
xorb
pushf
add
and
and
jns
and
or
in
test
enter
arpl
daa
lret
adc
jle
inc
sbb
test
or
sub
jge
or
pushf
mov
stc
push
adc
stc
daa
cmp
lds
push
cli
ud0
insb
sub
fwait
xor
push
pop
sbb
adc
enter
fsubl
push
mov
push
shrb
xchg
mov
xchg
and
or
leave
ret
xor
int
mov
adc
or
sbb
mov
sbb
stc
outsb
pop
les
cs
inc
out
sbb
rcr
ds
inc
call
push
xlat
jno
push
and
pop
add
ja
addr16
xor
mov
inc
das
push
subb
adcb
dec
ds
sbb
loopne
xor
dec
or
xchg
mov
iret
out
xchg
insb
sbb
sbb
cmp
subl
fs
push
jb
repz
adc
pusha
pop
repnz
mov
pop
rorb
mov
mov
push
mov
lcall
sbb
gs
movb
ret
add
or
sbb
mov
xchg
pop
lret
push
push
bound
loope
xchg
sub
xchg
divl
add
mov
xor
pop
test
mov
movsl
ja
xchg
or
jno
and
loop
in
repnz
add
push
pop
xor
std
mov
outsl
push
jb
icebp
inc
cwtl
dec
mov
mov
lea
jecxz
or
mov
push
sbb
pop
mov
xor
pop
sub
push
sbb
aas
xor
add
adc
xor
mov
shlb
inc
fcmovb
pop
sub
aaa
mov
add
insl
pop
mov
cmp
mov
shr
cmp
add
inc
add
cmp
fwait
jecxz
fdivrs
push
pushf
adc
jmp
loopne
and
sbb
nop
add
sub
popf
inc
dec
aas
cmp
nop
sbbl
cmp
hlt
xlat
or
adc
cmp
xchg
dec
jb
jae
subl
je,pt
sbb
lea
sbb
add
push
outsb
das
shlb
push
add
loopne
xchg
mov
dec
mov
jno
sbb
or
and
xor
and
mov
inc
scas
xor
jecxz
popa
inc
push
rcrb
lea
cmpl
sbb
mov
pop
bound
sbb
jnp
and
jmp
dec
mov
cld
in
daa
movb
push
jl
mov
xchg
xor
rol
mov
inc
shll
stos
cmp
rcll
sub
mov
stos
or
insl
je
sbb
xchg
push
or
nop
inc
sbb
int3
fiadds
nop
daa
jne
mov
jle
inc
hlt
sub
mov
mov
dec
andl
inc
push
xor
mov
and
and
push
inc
daa
and
xor
sub
sbb
stos
mov
xchg
rorl
dec
and
popf
dec
lods
test
adc
pop
in
hlt
xchg
xchg
cmp
scas
add
loope
js
sahf
dec
pop
mov
cmp
mov
lods
test
sbb
in
cmp
mov
push
inc
outsb
push
lods
aas
movsb
mov
lods
add
xchg
sbb
or
pusha
xor
popf
or
fsubl
jae
in
xor
xor
dec
mov
pop
shll
adc
sarl
or
mov
mov
fcompl
enter
push
or
daa
test
mov
ljmp
pushf
std
mov
aaa
jns
jle
sub
pop
jle
adc
ljmp
adcl
int
and
enter
in
push
sahf
lahf
pop
mov
add
add
aam
test
je
push
jae
push
in
jle
rorl
jp
enter
add
jg
push
sub
arpl
dec
cld
rorl
loope
in
cmpb
cwtl
mov
dec
jmp
sbb
sub
xor
decl
icebp
push
mov
xor
aad
jg
cwtl
fwait
or
test
ret
adc
imul
inc
int3
dec
sub
xorb
fwait
shll
fcom
mov
push
les
pop
xchg
mov
push
push
dec
in
aam
and
js
add
cmpsl
add
push
xor
ret
cmpl
mov
rolb
push
sbb
jne
aam
lcall
aad
mov
push
xchg
jae
cmp
clc
mov
push
mov
loope
jg
jo
push
adc
mov
idivb
pop
fcmove
jl
cmp
and
pop
add
imul
mov
cmpsb
test
lods
imul
int3
sub
fildl
inc
sub
test
jno
icebp
xchg
gs
xor
add
mov
add
movsb
les
or
mov
mov
xor
and
inc
insb
dec
adc
mov
outsl
lock
notb
inc
mov
push
dec
jg
jmp
adc
add
mov
inc
jo
aam
repnz
cmp
pop
xchg
xchg
loopne
inc
gs
push
mov
sub
cmp
inc
repnz
and
inc
jae
or
mov
adc
ficoml
cli
adc
orb
xchg
xchg
sti
mov
or
add
or
pop
xor
xchg
mov
dec
push
scas
add
and
test
pop
jnp
adc
pusha
push
dec
mov
out
xor
mov
lahf
sub
rdpmc
sbb
lods
fwait
mov
xchg
push
or
inc
sub
xor
addr16
dec
cmp
adc
in
imul
mov
jno
and
loope
scas
sub
fnstsw
sub
aad
lock
mov
add
xor
movsb
xchg
or
xchg
jne
cmp
push
push
pop
or
mov
or
jp
and
push
arpl
add
adc
jecxz
inc
imul
sub
mov
or
jge
cltd
push
xorl
mov
test
adc
subb
push
cmpsl
pop
cmc
faddl
jle
inc
das
ret
mov
and
les
sbb
or
je
inc
inc
and
data16
leave
mov
add
push
push
adc
mov
cs
mov
xor
pop
and
sub
or
xchg
inc
jge
stos
jg
jp
dec
leave
pushf
rolb
lea
testb
xor
out
movl
xor
jle
inc
lret
ret
dec
cmp
jae
add
filds
aad
jnp
sub
dec
inc
sti
mov
or
and
pop
dec
movb
or
inc
rcrl
add
sbb
mov
int
sub
sub
mov
add
insb
fstps
lods
mov
decl
fstps
mov
jo
add
and
and
adc
imul
inc
sti
sbb
mov
mov
cltd
push
jge
xchg
push
pop
adc
mov
push
jp
rorl
shl
adc
push
mov
mov
pop
inc
push
or
pop
repnz
lods
mov
add
sub
aaa
mov
inc
xor
push
sbb
push
mov
adc
imul
outsb
cmp
sub
inc
lcall
insb
lea
mov
lea
add
mov
and
jecxz
shlb
sbb
lahf
mov
pop
pop
add
and
sub
insb
ljmp
mov
push
sbb
mov
out
pop
sbb
and
adc
mov
mov
mov
or
mov
sbb
adc
pusha
mov
movl
add
jg
push
xchg
rolb
inc
xchg
adc
push
pop
dec
imul
push
iret
arpl
mov
mov
push
inc
fsts
sbb
dec
mov
push
inc
xchg
cmp
ljmp
ljmp
clc
push
sub
leave
repz
jp
sbb
sbb
mov
in
leave
xor
pop
imul
out
test
and
dec
rorl
xor
das
lods
mov
and
sub
xor
inc
push
xchg
xor
pushl
add
add
xor
sub
xor
sti
push
addr16
in
pop
or
dec
push
mov
ret
ja
outsb
cmp
ja
cmp
jne
mov
pop
mov
ljmp
mov
or
or
je
push
inc
mov
and
clc
pop
pop
shrl
aas
push
cmp
jne
push
fisubs
js
lock
movsb
js
pop
mov
or
daa
shrl
jns
push
aas
jmp
push
dec
mov
sahf
sbb
loope
loop
rcrb
mov
and
clc
inc
arpl
hlt
pop
xlat
dec
adc
mov
mov
xchg
call
jp
or
cld
insl
adc
pop
or
or
gs
dec
loope
adc
int3
push
ss
or
push
jno
inc
xchg
push
icebp
xor
inc
popa
and
rolb
test
mov
bound
cs
jnp
mov
adc
cmpsl
faddl
inc
sbb
arpl
mov
or
mov
xor
jecxz
subb
sbb
xor
sbb
mov
popa
cwtl
mov
add
cld
es
enter
aad
pop
hlt
cld
or
sbbl
mov
push
jae
jmp
cld
popa
add
inc
add
inc
in
push
jns
pop
imul
and
popf
or
mov
pop
push
ds
nop
clc
decb
loopne
add
cmp
fcmovnbe
and
ret
push
inc
arpl
scas
and
pop
and
jb
and
jae
pop
pmulhuw
or
mov
inc
or
sbb
incb
xchg
pushl
push
sub
xor
cli
mov
mov
movsb
push
inc
xor
arpl
mov
inc
xchg
inc
mov
pop
adc
nop
or
lods
xor
push
cmpsb
mov
in
mov
jmp
pop
mov
and
add
ja
add
iret
add
jne
jns
inc
mov
sub
lods
popa
insl
sub
movsb
mov
sbb
push
add
add
and
mov
cmp
fstpt
test
push
mov
add
pusha
sub
ficoml
rorb
mov
movsb
jecxz
sub
and
adc
inc
mov
aad
cmp
and
push
lea
xor
mov
sarl
xor
pop
push
subb
sbb
fwait
jmp
jl
decb
les
mov
out
xchg
jne
push
mov
add
movl
add
mov
adc
jbe
mov
imul
push
mov
adc
mov
xchg
cmp
dec
dec
cwtl
mov
mov
imul
jecxz
jbe
and
pop
push
xor
and
mov
aad
inc
xor
adc
fs
inc
and
inc
xchg
mov
cmp
dec
cmp
pop
ss
mov
push
rol
xchg
clc
cld
cmp
pop
jnp
pop
dec
aaa
repnz
xor
lcall
shl
or
aam
or
bound
and
dec
leave
shrl
inc
and
cltd
js
cmpsb
in
adc
mov
dec
and
movsl
add
movsl
out
sub
dec
push
inc
and
mov
sub
dec
mov
ja
and
mov
sub
sub
add
push
stos
add
jbe
cmp
sbb
sar
xchg
and
push
add
push
stc
dec
ret
loope
xchg
xchg
add
mov
dec
dec
pop
mov
dec
ja
js
cmp
jne
cmp
jne
push
dec
sete
inc
push
fs
les
std
int
add
insb
mov
loopne
pop
xor
xchg
xchg
sub
in
and
push
popf
lods
xorb
imulb
ja
adc
sub
test
in
movl
cmpsb
mov
xor
imul
jmp
and
xchg
iret
fsubrs
lea
enter
mov
nop
mov
sub
sub
sub
pop
cmp
xchg
cmp
jne
cld
into
adc
into
cmp
fadd
fmuls
shlb
pop
xor
xchg
mov
mov
movl
cld
mov
push
mov
jle
cmp
jle
pushl
sub
inc
inc
enter
adc
xchg
pop
lea
adc
pop
ret
or
adc
cmpl
mov
add
movb
sbb
add
jnp
cli
pop
jno
push
jae
ret
decl
ret
sbb
push
jo
or
push
sbb
or
mov
adc
jo
movsl
cs
rorl
lods
and
in
add
pop
mov
out
dec
dec
add
push
or
hlt
add
jbe
leave
fst
movsb
pop
pop
mov
or
cwtl
adc
push
cld
xchg
mov
add
sbb
cmp
mov
push
cmp
xchg
cmp
sub
ja
inc
jne
pop
and
jb
das
inc
mov
or
je
jecxz
mov
fsubp
mov
push
mov
push
sub
inc
jo
mov
sub
mov
sbb
add
jle
pop
xchg
jne
pop
push
adc
xor
in
add
test
pop
add
lea
mov
enter
xor
sbb
dec
in
or
inc
vmovss
mov
push
lea
adc
clc
and
popf
mov
ret
test
sbb
lea
inc
jp
adc
push
and
test
xchg
dec
dec
or
stos
cmp
mov
int3
sub
sub
stos
sub
jae
adc
jnp
rclb
xor
push
jo
notb
gs
ljmp
shll
pop
aam
and
jo
adc
and
sbb
push
out
adc
pop
lcall
aam
aad
in
aas
xor
inc
pop
jmp
push
add
cmp
popf
add
push
push
pop
leave
sub
adc
fisubrs
hlt
fildl
lcall
lods
inc
loope
inc
push
xchg
insl
les
dec
xchg
sbb
inc
pop
or
nop
push
push
dec
dec
mov
mov
pop
sbb
fiaddl
sub
ret
add
pop
xor
int3
push
nop
xchg
inc
in
imul
test
outsb
xor
rcrl
js
or
dec
sbb
xor
into
test
mov
lret
test
fiadds
in
add
call
dec
aaa
mov
imul
adc
cmp
push
mov
fyl2xp1
add
add
enter
clc
addb
aas
mov
in
rcrl
pop
or
lock
adc
das
inc
or
fists
es
pusha
das
in
and
add
and
adc
pop
sbb
xor
inc
lret
add
arpl
loopne
sti
lea
inc
mov
lock
xor
lods
or
inc
mov
out
adc
inc
sub
pop
mov
jne
cmp
pushf
rorb
cmp
mov
dec
push
add
and
xor
pop
sbb
icebp
dec
dec
loop
mov
adc
xchg
xchg
jecxz
movb
mov
lock
xchg
xor
cmp
sub
in
mov
or
fstl
inc
shrb
mov
jbe
sahf
xor
adc
inc
or
lret
jns
pop
dec
loopne
and
sbb
pop
jno
test
adc
cli
push
clc
sbb
mov
jnp
and
mov
jl
jno
push
mov
inc
ds
jo
ret
int
add
mov
mov
nop
mov
pusha
jo
dec
adc
dec
stos
mov
fnstcw
sub
ret
mov
add
shr
jne
mov
jo
push
cmp
push
repnz
lock
push
inc
stos
sub
enter
es
outsl
or
or
and
shrb
or
pop
or
addl
push
xchg
addr16
es
push
daa
les
adc
cvtdq2ps
push
jb
jmp
je
ret
or
inc
adc
cmp
imul
push
popa
add
jmp
push
jp
pop
je
jmp
add
sub
xchg
fidivs
clc
sub
lods
add
stc
jecxz
fisttpll
push
fbstp
mov
mov
incl
push
push
and
inc
xorl
cwtl
and
inc
push
imul
inc
jecxz
push
add
push
daa
jmp
push
cwtl
subl
pop
cmp
adc
push
loopne
add
pop
jo
scas
adc
loopne
mov
sbb
adc
pop
add
mov
xor
in
xor
ret
mov
stos
push
ja
push
mov
sub
and
add
mov
loop
mov
push
inc
dec
push
or
mov
inc
ficoml
jo
jg
push
cmpb
jne
inc
pop
aam
push
stos
xchg
add
dec
sub
vpmaxsw
inc
cltd
dec
je
and
xchg
pop
mov
and
cmp
sub
test
inc
jecxz
into
xorb
and
push
enter
sbb
in
inc
and
push
orb
out
sbb
mov
mov
shll
mov
push
ljmp
fsubl
flds
hlt
pop
fmull
and
adc
push
icebp
rorl
mov
dec
pop
addl
add
xlat
stos
add
rolb
push
xor
jae
xor
aas
pop
sub
jne
in
mov
call
idivl
xor
sub
fcoml
lret
jne
or
icebp
dec
lock
sbb
sub
and
stos
or
rcll
xchg
or
pop
data16
adc
hlt
iret
jb
xchg
pushf
pop
fwait
dec
pop
add
sbb
push
test
or
mov
fimuls
and
fimuls
dec
insl
mov
ss
outsb
inc
jns
jmp
adcb
or
mov
add
repnz
mov
jmp
sbb
mov
and
lds
loopne
rcrl
sub
imul
or
dec
shl
jns
ja
in
mov
and
mov
pusha
sub
shrb
inc
testb
push
jno
xchg
arpl
sub
outsl
es
and
sub
pop
out
jl
out
sub
pusha
sub
mov
inc
jb
pop
sbb
xor
iret
xor
sub
js
bts
adc
adcb
mov
aad
testl
add
sbb
adc
je
lock
cmp
jge
ss
and
add
add
loopne
insb
enter
or
dec
ret
fisubl
pop
aam
push
dec
dec
dec
jne
mov
fbstp
push
in
movb
inc
in
fsubrp
push
pop
cltd
ds
jge
dec
dec
push
jle
or
arpl
ss
pop
fwait
push
cmpl
xchg
shr
sbb
in
mov
in
add
sub
ss
mov
mov
xor
add
addr16
ja
ret
nop
sub
fsub
mov
mov
mov
xor
sbb
cmpb
scas
add
mov
data16
xchg
and
sbb
xchg
mov
xor
out
dec
jmp
addr16
pop
dec
popf
push
in
dec
pop
mov
inc
fists
loope
rorl
add
subb
inc
mov
scas
adc
push
cs
jg
clc
sti
lock
movb
push
dec
clc
sub
dec
fscale
cmp
pop
jl
pop
je
push
cmp
dec
mov
aam
add
fdivl
mov
adc
loopne
or
pop
les
mov
stos
popf
inc
lcall
push
mov
cmp
outsb
mov
subl
aaa
pop
lea
insb
pop
faddl
pop
inc
jne
cmp
icebp
jae
push
mov
mov
push
sti
or
pshufw
hlt
dec
pop
pop
mov
cmpsb
std
cmp
mov
test
add
or
out
mov
and
enter
add
mov
or
nop
mov
dec
or
inc
push
jle
popf
sbb
or
mov
and
pop
sub
and
push
mov
sbb
jl
sti
mov
mov
repnz
inc
cmp
jb
mov
fstl
dec
or
cwtl
inc
fstpl
mov
push
push
divl
cmp
incl
add
xor
and
jmp
cmp
adc
jne
xor
inc
lret
loope
cmp
xor
sahf
fwait
js
addl
pop
xor
ja
pop
adc
sub
cmpsl
mov
inc
mov
push
test
sub
test
iret
shl
push
dec
or
or
sub
sub
and
mov
xchg
int
jns
jmp
test
test
cmp
inc
mov
or
jno
loope
test
add
test
and
add
adc
or
jo
mov
movsb
cwtl
fwait
inc
sbb
in
fsubrs
mov
rorl
adc
andl
in
loop
xchg
mov
sub
adcb
push
jbe
test
xchg
dec
sbb
sub
out
adc
or
mov
inc
add
push
subb
insb
push
add
push
or
push
dec
or
dec
ret
push
hlt
mov
dec
mov
jl
cmp
shlb
inc
rorb
pop
cmp
pusha
cmp
push
jecxz
sbbl
outsl
cwtl
or
inc
ljmp
jmp
add
in
add
pop
mov
jmp
adc
dec
rcrb
mov
rorl
pusha
ja
adc
int3
iret
push
ret
cwtl
inc
loope
test
std
and
pop
test
add
test
bound
adc
xor
and
roll
mov
mov
int3
mov
ss
push
test
nop
enter
stos
jle
dec
cwtl
push
outsl
or
clc
sahf
cmp
mov
jmp
xchg
jbe
adc
add
xor
fadd
push
mov
imul
aam
cmpb
int3
xchg
or
mov
mov
and
into
xchg
push
dec
inc
inc
aaa
sahf
jmp
clts
pop
int3
jo
push
adcb
loop
push
fisubl
js
xchg
and
dec
sbb
jne
xchg
test
in
dec
mov
inc
imull
push
fisubl
cmpsl
popf
hlt
stc
xchg
add
outsb
adc
outsb
jns
sub
push
jecxz
js
and
jg
adc
or
sbb
shll
push
es
mov
add
xor
cmp
mov
out
adc
cwtl
icebp
mov
adc
cli
xor
out
push
jmp
dec
pusha
cmp
pop
sub
inc
or
jb
and
inc
addr16
adc
and
cmpsl
ret
pop
xchg
in
push
fdivrs
sub
dec
fs
cmp
mov
add
xor
xchg
stc
and
pop
cli
addw
sub
push
adc
test
je
test
sbb
lods
or
cmp
leave
ret
xor
add
push
mov
inc
aam
std
scas
xchg
inc
clc
movsb
or
es
cmpl
data16
or
ret
adc
ss
sbb
mulb
cwtl
add
mov
fcomps
mov
nopl
mov
add
popf
mov
or
in
int3
test
mov
movsb
addr16
inc
stos
and
scas
orb
sbb
adc
cmp
jge
pop
dec
enter
daa
addr16
pop
inc
fstl
adc
sbb
sbb
rol
jmp
andl
leave
in
sbb
xchg
push
mov
dec
sbb
jb
ljmp
push
sub
stos
add
add
jge
mov
inc
push
mov
push
leave
add
mov
in
pusha
and
mov
pop
cmp
je
jmp
icebp
outsb
das
xlat
sub
popa
outsb
ds
jnp
dec
add
jle
mov
mov
fdiv
lret
mov
inc
xor
sub
in
inc
adc
pop
jmp
push
xor
fcmovnb
push
mov
push
mov
pop
add
movl
adc
xchg
mov
add
dec
int3
or
ds
or
leave
inc
mov
adc
lods
pushf
nop
inc
in
add
add
jge
xor
adcb
icebp
rcrb
or
add
movb
mov
sbb
mov
data16
xchg
pop
das
add
inc
dec
push
in
in
add
leave
clc
cmp
setne
lea
outsl
jle
push
arpl
loope
xchg
cmc
xor
out
mov
push
xor
or
add
lock
add
push
mov
ret
jmp
push
addr16
mov
add
push
push
icebp
and
stos
addr16
ljmp
push
pop
pop
int3
data16
inc
or
call
mov
push
call
insl
lock
mov
jp
inc
sbb
dec
xor
imul
rclb
fdivrl
call
xor
call
add
lods
add
into
cmpsb
cs
aam
cmc
or
sub
lds
mov
inc
lock
adc
loop
inc
daa
push
xor
mov
mov
xor
or
sub
decl
push
sub
push
mov
dec
add
inc
or
mov
cmp
mov
cwtl
pushf
cmpsb
movsb
lahf
inc
lods
xor
jp
sub
sarb
jbe
lock
sub
fildl
lods
sub
aad
pop
pop
adc
push
push
mov
pushf
inc
sbb
iret
mov
rcll
inc
int
les
push
adc
test
inc
push
in
pop
pop
ret
sarl
das
push
fxch
fst
or
and
xlat
push
rorl
sbb
cmove
jmp
mov
or
and
push
ret
push
pop
jnp
ret
ljmp
push
cmp
add
bound
xor
notl
jl
mov
pop
mov
dec
add
dec
or
ret
test
add
cmp
outsb
divl
xchg
out
push
idivb
mov
mov
sub
push
or
push
jo
imul
mov
push
outsb
adc
jmp
jb
mov
pop
shr
and
je
push
es
test
cmpsl
fadds
ret
mov
mov
pushf
loopne
cmp
fstp
pop
mul
xor
push
or
push
or
mov
xchg
pusha
or
push
jle
shr
int3
test
sbb
adc
xlat
int
jbe
gs
mov
je
rcrl
push
ret
push
jns
mov
or
test
outsb
jne
push
cmp
mov
dec
movb
mov
push
add
xor
dec
popa
jbe
scas
faddl
lea
or
mov
adc
inc
mov
push
add
pmaddwd
adc
xor
push
and
xchg
inc
rorl
inc
jmp
mov
pop
mov
leave
loopne
xchg
push
dec
inc
lods
rorb
sbb
push
sbbl
xchg
mov
add
or
rclb
mov
das
inc
out
out
inc
adc
pop
inc
sti
loope
push
push
lea
aaa
dec
je
enter
inc
adc
mov
mov
inc
aaa
xor
sbb
in
xor
pop
sub
aam
mov
mov
mov
addb
int3
xchg
xor
push
nop
loopne
lock
sub
cmp
test
pop
dec
insl
test
lret
mov
shll
test
xorb
pushf
mov
divl
cld
mov
iret
jb
rcr
ficompl
adc
jae
or
insb
and
mov
inc
loop
insb
mov
push
mov
ret
mov
xor
lret
and
shl
rorb
jl
test
test
mov
lea
nop
adc
jmp
and
push
push
mov
call
loope
xor
mov
pop
cmp
lods
adc
dec
bound
push
add
inc
mov
sbb
jbe
dec
push
dec
adc
push
insb
pop
inc
loop
lock
push
xor
add
loop
dec
jo
dec
mov
call
lds
xchg
xor
adc
lret
je
pusha
push
mov
hlt
loop
pop
xchg
xor
lea
adc
push
fildl
xor
psrld
or
jmp
push
mov
pop
out
lock
popf
jmp
in
pop
fnsave
push
dec
in
les
and
jge
inc
add
sbb
pushf
pop
mov
mov
adc
jne
sbb
pop
sub
pop
decb
add
not
mov
push
rol
je
mov
xor
jne
sahf
add
push
sahf
das
iret
repz
arpl
push
idivb
je
inc
or
push
std
mov
iret
or
and
jle
cmp
push
push
scas
or
sub
sbb
hlt
lea
xor
scas
xchg
jnp
cmc
scas
ja
popf
pop
push
sub
cmp
push
int3
cmp
push
and
mov
cwtl
cli
or
or
out
push
or
shlb
in
les
dec
addb
sbb
adc
fsub
negb
insb
movb
negl
pop
or
jge
data16
sub
add
je,pn
push
pop
cmp
jmp
inc
mov
xchg
rolb
adc
dec
mov
or
into
outsl
shll
and
pop
xor
sbb
pop
mov
push
push
jo
faddl
lcall
sbb
and
push
test
movsb
sub
push
jae
in
lcall
inc
adc
cmp
and
scas
xor
mov
cmp
jne
in
outsl
cmc
jnp
or
lea
stos
or
outsb
sub
mov
lea
push
orb
or
adc
jge
xorl
lock
movsb
sub
sub
in
shrb
rclb
and
fstps
dec
add
into
ret
test
pop
dec
lea
adc
inc
and
add
cmpsb
imul
imul
cs
dec
push
or
call
add
jle
cmpsb
cwtl
aam
or
dec
jnp
or
xchg
cmp
xor
addr16
scas
sub
ljmp
les
cmpsl
sbb
adc
add
loopne
add
dec
mov
pushl
xchg
xchg
mov
push
fadds
sbb
orb
je
or
orb
orb
pusha
push
dec
rcrl
loope
notb
int3
ret
ret
xchg
loopne
data16
sbb
pop
cmp
aas
xor
pushf
adc
xor
adc
and
or
ljmp
sbb
xchg
test
sti
in
arpl
sub
adc
push
or
inc
or
mov
add
sub
add
xchg
fbld
jmp
das
cltd
pop
imul
sbb
je
and
sbb
push
lret
or
jl
add
sbb
aas
arpl
push
inc
mov
inc
jo
inc
shll
mov
push
or
shr
mov
push
or
mov
pop
dec
loope
add
in
or
push
or
add
shl
inc
imul
jne
dec
inc
iret
in
mov
mov
insl
sub
insb
sbb
sbb
mov
mov
ffree
incl
add
shl
ret
mov
adc
xchg
add
inc
out
int
aaa
test
xchg
pop
jne
lea
orl
testb
or
xchg
popf
orps
mov
or
lret
notb
or
out
test
and
inc
push
inc
fdivrs
inc
and
adcb
adc
xchg
pop
outsb
lahf
scas
add
or
sbb
incb
repnz
out
dec
jb
das
add
iret
cmp
shll
ljmp
stc
sarb
inc
xor
insl
jmp
rclb
out
movsb
add
mov
imul
sub
xchg
jl
mov
stc
lock
cmp
dec
out
lock
stc
je
icebp
jne
ds
rcll
xorl
mov
movsl
dec
fwait
pop
lahf
mov
xchg
cmp
add
je
aad
inc
sub
add
add
cli
mov
push
ljmp
or
stc
int3
outsb
jne
push
mov
jge
push
inc
sahf
mov
bound
lret
clc
cmc
dec
cmp
xchg
or
les
cmp
std
les
arpl
cmovl
in
les
and
sbb
pusha
mov
mov
ret
ds
or
xor
les
sbbl
bound
push
lea
pop
or
mov
pop
xor
sub
hlt
jecxz
mov
test
add
loop
and
xor
enter
xchg
or
pop
or
push
inc
pop
xchg
sub
sbb
xchg
je
pusha
push
lea
add
int
iret
mov
scas
jo
icebp
and
push
and
mov
adc
daa
loop
xor
add
inc
neg
adc
popa
mov
push
sbb
sub
xchg
and
sbb
rcrl
nop
mov
je
pop
fs
xchg
inc
pusha
pusha
insb
adc
sbb
push
loope
push
inc
cltd
mov
mov
insb
xor
mov
ja
pop
add
dec
mov
jg
std
mov
je
cmp
je
mulb
mov
push
cmp
inc
and
iret
je
xor
pop
or
dec
call
dec
icebp
push
insb
push
sub
inc
pop
xchg
jmp
lea
push
addb
loopne
dec
leave
add
imul
add
dec
js,pn
lock
adc
dec
inc
cs
lock
lock
mov
jmp
dec
jmp
ja
jbe
sti
push
push
adc
mov
or
jl
xor
cmp
push
mov
mov
push
repz
push
test
into
add
push
mov
and
ja
cmp
clc
and
mov
push
sub
adcl
push
leave
inc
push
je
jae
dec
shlb
mov
mov
sbb
sbbl
or
cs
and
fimull
ret
out
in
jns
dec
xlat
test
je
test
ljmp
sbb
loop
adc
push
inc
push
jbe
adc
xchg
addr16
and
adc
mov
adc
mov
popa
nop
insb
clc
push
push
jge
mov
jo
jne
ljmp
addr16
imul
or
popa
pop
cmpl
mov
push
pop
mov
xchg
call
insl
lds
xchg
stos
or
xchg
addb
cwtl
fidivrs
sbb
lods
sub
push
sub
pusha
loopne
sbb
jnp
fwait
sbb
add
fimuls
sahf
lret
push
cwtl
xorb
dec
push
lea
add
jo
aam
mov
adc
imulb
sbbb
fcmove
push
or
sbb
xor
add
adc
pushf
jl
sarb
js
mov
and
les
out
lock
pop
adc
adc
push
lock
cs
and
fs
sbbl
push
jp
push
pop
arpl
subl
imul
nop
ds
ret
adc
adc
ja
repnz
inc
std
mov
xor
inc
mov
or
push
je
push
dec
repnz
or
arpl
insb
xor
sbb
dec
inc
idiv
add
pop
loopne
or
test
ja
aaa
xor
xchg
adc
or
jnp
mov
clc
sbb
sbb
jg
aad
mov
cmpb
cmp
mov
sub
imul
loope
sub
hlt
push
mov
inc
mov
xchg
adc
and
aam
sbb
inc
or
jb
add
push
or
pop
jo
sbb
push
pop
enter
into
jecxz
lock
adc
adc
and
in
cmp
ds
dec
lods
inc
sub
clc
aad
str
xchg
push
movsb
and
lea
xchg
shll
fs
cmp
xchg
lods
xor
push
or
popa
sbb
lret
cmp
sub
fsubr
push
or
fisubrs
ja
jl
pop
push
les
push
sbbl
cmp
xor
shlb
sub
mov
jo
sub
add
lret
pop
out
lods
xor
cmp
or
mov
clc
mov
xchg
mov
xchg
pop
pusha
xor
adc
cld
mov
out
loopne
cwtl
jge
fwait
adc
pop
jo
push
out
jo
push
cli
or
shrl
sahf
cmp
push
xchg
or
xor
popa
cwtl
bound
sub
dec
and
mov
jmp
inc
cmp
cmp
inc
fs
jne
test
aaa
ljmp
push
aas
mov
orl
add
cmpsb
jnp
inc
int
popf
daa
jae
pop
sahf
xchg
imul
push
inc
lcall
or
test
rcrb
xchg
das
adc
cmp
xchg
hlt
aas
aam
pop
lea
push
push
setge
sub
in
adc
dec
push
add
push
imul
mov
cs
xor
dec
or
jp
aaa
pusha
sbb
mov
sahf
adc
popa
sub
stos
sbb
stos
add
insb
test
arpl
mov
ljmp
imul
test
and
cmp
enter
orb
rorb
xchg
jmp
sbb
fwait
xchg
push
push
xorl
aad
test
inc
cli
sbb
icebp
jecxz
xor
call
movsb
adc
call
inc
pop
data16
test
push
call
ss
das
loop
call
cmp
dec
inc
dec
sub
jg
ret
adc
adcb
or
inc
xchg
xor
mov
cmp
rdmsr
shrb
fwait
insl
mov
test
mov
xor
call
mov
push
or
sbb
push
pop
sub
or
cmp
cwtl
test
cli
enter
xor
push
xor
scas
jo
xor
push
lea
push
inc
shr
nop
push
and
dec
xchg
sbb
add
orl
add
mov
and
bound
mov
sub
inc
sbb
sub
stc
std
cmpsb
mov
ficompl
rclb
xor
or
cmp
je
xor
inc
repz
xor
or
scas
add
inc
mov
mov
xor
test
shr
or
adc
inc
in
addl
lcall
insb
xor
sahf
cld
sub
pop
inc
xchg
dec
jno
andl
pop
fs
inc
pop
bound
xor
inc
jo
add
push
fiaddl
xchg
aam
movsl
iret
push
call
ljmp
test
pusha
lahf
loopne
cmc
ss
push
inc
add
fdivl
pop
or
push
mov
sub
pop
pop
pop
pop
xchg
inc
idivb
insl
sub
and
jge
add
jl
andl
lods
enter
sbb
insl
cmp
sbb
and
mov
sbbb
es
xchg
cwtl
pop
add
ficoml
cmp
xor
dec
xor
pop
push
xchg
jecxz
xor
in
adc
push
jo
rorb
xor
dec
scas
mov
xchg
inc
cmp
xchg
imul
test
inc
mov
stos
push
scas
lret
fdivrl
movsl
jl
pushf
push
mov
and
inc
dec
cmp
sbb
xor
xchg
adc
add
adc
push
in
push
outsl
shll
pop
add
mov
insb
dec
dec
adc
jecxz
xchg
pop
inc
push
inc
cmpsb
xchg
loope
call
and
xchg
shrb
jmp
addl
pop
pop
es
mul
adc
push
sbb
or
mov
popf
push
popa
je
pop
cmc
jbe
aas
or
stos
mov
cmp
cmp
jmp
xor
add
sbb
testb
scas
add
mov
aas
or
iret
int3
xor
and
xor
jne
loopne
xchg
into
sbb
mov
popa
loop
cld
inc
dec
ja
pop
bound
cmp
ret
mov
push
mov
mov
push
dec
lret
stc
push
imul
pushf
mov
add
movsb
xor
aas
fstpl
mov
xor
xchg
and
cmp
sbb
inc
add
dec
lahf
aaa
add
and
add
fistps
xchg
sbb
push
aas
push
push
test
mov
add
mov
je
xor
mov
jne
rol
fbstp
add
cmpsl
mov
lods
cmp
jne
xchg
push
aas
movsb
adc
call
xchg
dec
fmull
push
push
inc
cmp
push
mov
inc
jo
inc
fwait
add
inc
push
xchg
adc
push
fs
pop
nop
jmp
sbb
sbb
mov
push
xor
lods
ret
add
in
adc
push
pushf
data16
xlat
adc
aam
mov
or
adc
fucomi
neg
adc
mov
inc
loopne
add
inc
push
leave
mov
stos
test
call
pop
push
jmp
adc
pop
mov
inc
popa
aam
ja
xchg
add
jmp
repnz
dec
ficompl
out
mov
push
push
lea
sub
pop
xor
add
not
imul
pop
mov
fisubrl
mov
add
test
push
push
mov
cld
mov
add
addb
lock
jb
sbb
or
aas
pushf
xor
or
push
add
inc
test
or
cwtl
gs
push
in
sub
xor
andl
leave
inc
inc
add
pushf
test
jo
cmp
xor
gs
pushfw
mov
push
push
pop
icebp
movsb
adc
cmpsb
daa
es
add
mov
inc
popa
add
sbb
sub
rclb
ss
movsb
pushf
stos
add
inc
add
icebp
or
push
mov
xchg
pop
fldl
or
mov
movsl
aam
pop
mov
es
je
ljmp
lock
cmp
outsb
inc
je
mov
pop
and
pop
clc
xor
cmp
test
test
add
push
fidivl
sbb
mov
aaa
pop
mov
or
jae
sbb
daa
loopne
push
sbb
xchg
add
add
xor
sub
inc
cmp
adcl
notl
mov
pop
lret
fstps
cmc
dec
insb
add
mov
ret
xor
add
lods
sub
adc
sbb
sarb
jmp
jge
adc
pop
and
out
testl
jne
sbb
xor
cs
imul
dec
mov
dec
push
mov
aaa
test
mov
nop
xorb
sub
add
sahf
sbb
add
adc
shll
aas
push
sub
xor
ficoms
imul
cld
cld
mov
xor
movb
dec
in
jle
rcl
sbb
pop
adc
mov
insb
shr
inc
add
pop
enter
adc
cmp
dec
js
pushf
sbb
inc
xchg
fwait
sahf
loope
sbb
stos
pusha
insb
std
mov
sbb
mov
lret
dec
int
pop
push
sbb
xor
imul
lret
pop
sbb
in
push
cmp
rol
cmpsl
lret
fimull
and
je
push
add
push
pop
adc
lcall
mov
shlb
sarb
pusha
mov
jnp
jge
jecxz
push
test
sbb
inc
xchg
fisttps
xchg
repnz
mov
test
push
pop
add
mov
push
or
jno
pop
insb
xor
not
adc
cs
cmp
xor
jns
shl
or
add
sarl
pop
jmp
mov
mov
movsl
addl
insb
loope
cmp
sbb
rcl
adc
jg
call
daa
dec
test
inc
add
cmpsb
notb
jne
push
popa
push
sub
shrb
je
and
loop
pop
dec
sub
ss
jbe
jne
adc
add
mov
adc
push
xor
jmp
ret
sti
sub
pop
mov
lea
mov
mov
sub
xchg
inc
aaa
jbe
add
es
outsl
or
dec
sub
fs
cmpsl
or
or
xchg
fmuls
inc
mov
add
jg
jns
bound
divb
dec
in
lods
xor
fs
std
or
ret
fnstcw
jo
dec
mov
sbbb
sarb
je
cmp
and
xor
jno
pop
scas
stos
push
loopne
in
ficomps
cltd
adc
cmp
push
adc
cmpsl
loop
push
jmp
aam
shrl
xor
adc
or
fs
mov
sahf
mov
cmp
mov
push
jp
or
lock
ret
in
lea
bound
rclb
push
stos
cmp
inc
mov
push
jmp
shrb
push
call
and
sub
adc
adc
add
pop
or
ret
xor
inc
sbb
pusha
or
adc
mov
in
inc
pusha
inc
cmp
push
pop
dec
testb
mov
mov
jecxz
mov
pop
movsb
sub
pop
push
pop
dec
dec
adc
mov
lret
jnp
pop
push
pop
testl
cmp
xchg
inc
and
in
cmp
call
inc
mov
or
dec
or
jbe
ds
cmpb
loope
or
or
gs
sbb
xchg
mov
jmp
or
fs
sub
adc
lret
sub
insb
add
aam
push
inc
mov
add
fnstcw
xorl
mov
push
add
adc
jle
xor
or
sti
ss
and
ja
push
inc
xchg
dec
lret
fsts
and
cmpsb
add
les
jbe
xchg
out
jo
mov
addb
or
jae
push
push
fsubrl
imul
sbb
sbbl
cltd
in
lods
jmp
pop
pop
push
push
aam
loopne
push
or
add
es
shlb
dec
in
nop
xchg
mov
pop
lea
sub
dec
add
sbb
add
test
push
gs
inc
lcall
jb
testl
addr16
js
rclb
jnp
mov
mov
mov
push
rclb
adc
pop
sub
xor
mull
inc
and
dec
pop
lods
push
push
les
lods
xlat
add
push
lret
mov
add
xor
rcrl
aaa
adc
push
push
and
and
imul
pop
xor
sub
in
pop
pop
lea
sub
cmp
je
push
cltd
outsl
xor
das
jo
in
mov
ds
mov
xor
or
loopne
or
push
push
in
in
add
add
push
cmpl
insl
je
add
daa
adc
dec
pop
add
inc
les
dec
add
ret
negb
andl
xchg
pop
pop
or
in
and
adcb
mov
iret
mov
enter
sarl
cmpsb
jne
ret
outsl
loopne
dec
leave
push
mov
bound
outsb
mov
or
je
or
sub
xchg
lods
adc
adc
movsl
cmp
push
or
add
push
mov
add
xchg
sbb
mov
les
jmp
cmp
fidivl
adc
adc
xchg
xor
inc
adc
inc
mov
lds
movsl
pop
sbb
xchg
sub
outsb
dec
mov
jne
cmp
loopne
cmp
mov
in
rorb
cmp
inc
call
mov
and
movsl
mov
gs
add
je
cmp
ret
outsb
push
pop
cmp
mov
add
pop
jg
adc
insb
adc
and
xor
push
add
fnsave
or
or
movsb
inc
and
cmpsb
or
jmp
inc
lods
imul
addl
sub
ljmp
add
add
int
pop
nop
adc
in
sti
xchg
mov
mov
daa
mov
push
adc
sub
mov
adc
fiadds
sti
mov
or
pop
mov
inc
push
fmull
cmp
lock
or
xor
movl
push
enter
jge
or
mov
ds
mov
and
paddsb
mov
loopne
or
mov
imul
cmp
adc
lea
nop
aaa
add
push
cmc
insl
fmuls
aam
adc
push
add
mov
inc
push
inc
push
sub
dec
in
sbb
cli
push
cmpsb
dec
movb
loopne
mov
add
cmp
test
sub
aam
fcomp
cmp
adc
xor
push
push
cmp
ret
enter
fs
mov
ljmp
adc
clc
inc
test
icebp
fdivrl
lock
mov
pop
imul
pusha
sahf
push
sbb
jl
nop
add
add
movsb
dec
vpsubd
les
enter
jecxz
inc
mov
sub
mov
xor
inc
leave
ret
ret
dec
sarl
rorb
lahf
dec
push
mov
pop
fdivrs
repz
pop
lcall
incl
dec
repz
push
test
lds
loopne
loopne
cmc
dec
fisubl
movsl
push
cltd
cmpsb
pop
jge
mov
xchg
mov
mov
xor
xor
fsub
add
mov
push
aam
aam
or
fdivs
push
xchg
in
rcll
lods
sahf
clc
aaa
add
push
push
push
xlat
cmp
push
ret
jns
cmpsb
shll
push
xchg
and
dec
shrl
cmp
mov
sar
xorl
addb
adc
push
pop
or
lahf
add
adc
push
push
cmp
fcmovu
xchg
in
mov
sub
dec
lret
dec
adc
fisubl
mov
sbb
sbb
sub
test
and
pushf
popa
push
mov
xchg
adc
push
sbb
in
or
into
xchg
dec
lcall
adc
dec
pop
sarb
sbb
subl
dec
dec
lahf
shrl
add
push
inc
xor
and
call
add
adc
mov
dec
js
pop
mov
sarb
push
mov
les
dec
dec
imul
mov
sub
or
xchg
inc
push
jne
add
push
fdivl
push
lahf
dec
in
leave
ret
sub
sbb
int3
sub
add
cmp
cwtl
mov
fcoms
push
leave
pop
popa
xchg
mov
nop
orl
outsl
rcrl
je
and
rcll
pop
inc
aam
lock
sbb
cld
jle
jbe
dec
movl
xor
orb
roll
adc
inc
jmp
loope
sub
and
add
cmp
jg
mov
out
das
or
add
mov
sub
movsb
loope
mov
sub
orb
jbe
or
push
add
fistpll
aas
xor
sbb
dec
sub
pop
or
lcall
lea
outsb
call
mov
incl
and
decw
xchg
pop
aas
inc
inc
test
xchg
inc
inc
fs
add
pop
ret
adc
push
jno
sub
jmp
lods
into
pop
in
shll
ja
cli
scas
cmp
shll
mov
mov
dec
xchg
adc
loope
push
loop
sbb
xor
dec
mov
dec
dec
push
xorl
sub
push
mov
or
push
int
xlat
xor
add
ja
xor
inc
test
inc
add
test
pop
cmpb
push
pop
loopne
mov
int3
pusha
push
push
mov
cmpb
xchg
rcrb
dec
mov
push
mov
or
xorb
sahf
in
push
cmp
lds
lea
inc
arpl
dec
ret
adc
inc
nop
pop
xchg
clc
or
es
jg
mov
add
in
sbbl
mov
sti
out
add
es
shl
dec
lods
add
aaa
dec
imul
mov
gs
lods
cmpsb
cmovnp
call
push
xchg
movsb
jg
punpckhbw
add
les
add
lea
xchg
xor
cmc
dec
or
clc
adc
ja
add
jl
sbb
sub
mov
pusha
inc
repnz
add
and
or
or
sub
movsl
inc
mov
mov
and
jo
push
jl
add
adc
push
jecxz
and
xor
pop
add
sahf
cmpsb
flds
enter
xor
pushf
sbb
rcrl
lock
adc
lock
sub
xchg
movsb
xor
xor
inc
inc
fwait
mov
les
sbb
stos
xchg
mov
ss
and
dec
push
pop
sbb
lea
sbb
or
clc
push
jmp
mov
sbb
andl
add
mov
pop
test
mov
jl
movsl
sbb
or
and
stos
stos
jecxz
xor
in
push
jo
fucomp
pop
inc
jle
into
fidivs
sbb
rorl
int
aaa
stos
sbb
pop
jge
ljmp
es
sbb
pop
pushf
bnd
mov
or
dec
add
or
inc
sub
stc
shrl
push
jb
mov
push
adcb
xor
jnp
dec
adc
mov
xchg
je
pop
or
adc
push
sbb
adc
push
adc
packssdw
dec
xchg
out
jle
es
fsave
push
jo
nop
add
and
mov
js
add
mov
inc
std
dec
or
dec
dec
test
adc
mov
or
push
cmp
pop
imul
dec
mov
or
test
movsb
mov
shlb
cld
push
cmp
adc
push
pushf
lcall
popa
lds
leave
call
dec
adc
inc
xor
fidivrs
dec
lock
js
les
push
and
sub
add
mov
ss
push
add
mov
cld
adc
jmp
push
ja
mov
adc
lea
push
jmp
push
sub
nop
and
sbb
pop
fists
jmp
mov
andl
inc
rorb
addr16
iret
push
mov
dec
mov
in
mov
sub
mov
insb
mov
adcb
push
fsubr
dec
or
je
dec
into
xchg
aas
fbld
add
es
shlb
adc
add
sbb
push
jge
testb
mov
and
sbb
add
cmp
push
into
push
and
or
xchg
sub
in
out
sbb
sub
pop
push
inc
sub
jg
xchg
cwtl
or
xchg
add
test
in
mov
push
pop
mov
cmp
push
sub
and
mov
adc
ror
xor
sbb
dec
xchg
cs
cmp
stc
pop
sbb
push
inc
scas
xchg
cmp
cwtl
push
sbb
mov
mov
sbb
test
or
inc
inc
fwait
inc
xchg
or
lahf
xchg
mov
pop
or
push
mov
sbb
xor
inc
nop
mov
or
xchg
flds
enter
aam
push
xchg
lahf
xor
in
gs
mov
call
mov
dec
push
mov
lahf
ret
sbb
nop
push
xchg
int
mov
lcall
lods
jns
dec
jae
stos
rorl
push
mov
out
pushl
add
clc
ret
ja
sub
jne
inc
pusha
xchg
mov
push
push
add
jecxz
addb
mov
add
sub
sbb
mov
jmp
pop
push
imul
lods
mov
cld
js
mov
adc
je
lret
mov
out
out
add
pop
in
sbb
iret
push
sbb
mov
movsl
loopne
sbb
dec
or
jecxz
push
das
fsubrs
sbb
or
push
daa
pusha
sbb
mov
cmp
mov
test
add
lds
call
loopne
popa
mov
xor
mov
pop
or
adc
out
mov
repnz
mov
sbb
and
out
mov
loopne
in
push
in
jb
adc
in
push
mov
call
nop
hlt
cmpsl
cltd
cmp
testb
in
dec
mov
orl
adc
and
pushf
xor
pushf
fdivp
or
pop
dec
xchg
push
repnz
push
xchg
jecxz
add
insb
mov
stc
rclb
callw
push
adc
cmp
lea
add
xor
daa
push
mov
bound
sub
add
cmp
fnstenv
clc
mov
xchg
add
sub
inc
je
push
cmp
push
rcrb
pop
fcoml
xchg
add
dec
rcr
in
pop
fiaddl
cld
int3
jb
adc
fnstcw
mov
test
adc
test
repz
sub
les
mov
sbb
and
mov
int
sbbb
pop
cmp
sarl
in
inc
push
mov
cmpsb
sbb
add
jnp
add
inc
xchg
mov
xchg
xchg
bound
nop
rcr
or
into
aam
lods
sub
sub
add
insl
ret
loopne
cwtl
dec
popf
add
aam
leave
sarb
jge
es
pop
inc
adc
sbb
mov
mov
push
sub
add
rorb
movsl
gs
fdivl
and
out
adc
dec
mov
cmp
subb
xchg
pop
sbb
les
jl
pop
je
cmp
jae
mov
mov
mov
xor
out
pop
data16
pusha
sub
or
mov
adc
jmp
jl
inc
fcoms
test
mov
mov
dec
mov
stos
push
push
rolb
push
cli
pop
push
bound
aaa
outsb
or
cmc
es
js
sub
add
aaa
call
mov
add
adc
push
and
or
jge
xor
xchg
push
jge
sbb
sahf
cmp
dec
adc
or
vmread
dec
aam
adc
dec
pop
movsb
or
push
jmp
mov
std
nop
mov
aad
insl
imull
rcrb
lcall
pop
mov
mov
adc
in
and
daa
and
inc
adc
adc
xchg
andl
inc
xor
mov
mov
dec
outsl
mov
enter
je
push
sbb
sub
adc
ljmp
mov
dec
jmp
outsl
mov
pushf
xchg
shlb
sbb
lret
sub
dec
mov
mov
jecxz
sahf
push
out
dec
push
insb
enter
adc
subl
lahf
test
sbb
cmp
jns
add
gs
jge
hlt
nop
xor
xor
fsubs
scas
ret
jne
lret
mov
cmpb
cmc
imul
out
shll
push
leave
push
xor
aad
mov
push
lret
and
repnz
cmp
add
adc
mov
dec
sbb
sbb
add
lock
mov
enter
dec
sbbl
insb
mov
cld
sub
adc
jo
or
mov
xchg
orb
mov
cmp
dec
push
stc
add
inc
test
lds
cmpsl
call
add
mov
cmp
push
inc
or
pop
and
push
jmp
sub
int
xor
inc
rcrb
inc
pop
pop
jbe
mov
mov
scas
or
mov
cmp
jbe
push
lea
in
pop
adc
dec
mov
pop
inc
out
push
pusha
nop
inc
push
mov
jno
inc
mov
pop
sbbl
or
mov
in
sbb
daa
dec
xor
popa
sbb
xchg
dec
sbb
push
xchg
movb
cld
inc
fdivrl
mov
push
aaa
cmp
push
dec
push
dec
sbb
pop
pushf
cli
adc
mov
mov
outsb
daa
inc
xchg
xor
rclb
rorb
je
push
cmpl
add
push
push
dec
and
sbb
sub
and
inc
adc
adc
and
add
add
sub
test
sub
or
loopne
pusha
jge
pop
cmp
fdivs
xchg
out
pop
andl
negl
mov
mov
outsb
les
xor
iret
or
or
or
aaa
mov
cmp
fistpl
mov
adc
inc
loopne,pn
and
xor
enter
mov
fwait
lea
jno
mov
dec
lea
mov
jne
adc
xor
or
push
adc
push
add
cmc
jge
xor
mov
pusha
test
imul
jbe
inc
jno
in
mov
add
pop
sbb
in
xorb
mov
movups
into
mov
rcr
adc
push
pop
mov
sbb
mov
inc
movsb
pop
ret
sbb
imul
out
rcrb
pop
and
in
xor
and
pushl
decl
andl
inc
aam
add
pop
push
fst
mov
adc
dec
jmp
push
stc
pop
mov
hlt
fcoml
rcl
dec
jmp
iret
or
or
pop
and
dec
add
or
dec
imul
lea
pusha
xchg
lods
jnp
push
fisttpll
popa
leave
test
mov
adc
pushf
aam
push
xchg
push
mov
cmc
mov
dec
dec
shrl
dec
sub
sub
push
sbb
inc
pop
mov
clc
lock
mov
dec
sbbl
or
xor
out
inc
jo
jns
mov
addb
jnp
pusha
dec
adc
ret
pushl
mov
sub
repnz
add
and
sahf
push
insl
xor
fnstenv
sgdtl
or
xchg
loope
add
adc
dec
mov
movsl
add
enter
sub
sub
jg
add
inc
lret
or
add
popa
and
add
push
and
fsubs
shl
or
lods
daa
test
mov
sbb
fsts
inc
mov
sub
stos
jmp
testb
sbb
push
jecxz
adc
ja
imul
outsb
push
clc
roll
pop
js
pop
xor
cld
clc
and
mov
cld
sub
xchg
jno
addr16
mov
insl
movsl
pop
cmpsl
xchg
pop
mov
and
sub
inc
ja
int3
lea
ret
push
xor
imul
inc
inc
cmp
jb
jg
sub
dec
mov
shll
lods
cmp
dec
dec
and
fildll
cmp
jmp
loope
pop
cwtl
daa
pusha
leave
or
pop
sub
dec
mov
mov
rorb
mov
pop
mov
cld
push
xor
clc
das
sbb
neg
sbb
inc
je
xlat
shlb
jns
jne
pop
push
inc
imul
enter
lods
negb
push
pop
cmp
leave
mov
sub
movsl
cmp
insl
inc
sbb
leave
test
movsb
add
push
push
sub
add
inc
push
pop
mov
insb
push
mov
jl
test
push
cmp
adc
inc
sub
jg
int3
mov
sub
mov
ss
adc
or
cmp
cmp
sub
dec
add
jmp
ret
add
lret
aas
jne
mov
out
or
das
xchg
and
shll
push
jb
add
lds
imul
mov
cli
insb
stc
repnz
xor
jns
jns
xor
cmp
push
jl
dec
hlt
dec
inc
sub
dec
lods
add
and
scas
fidivrl
sub
pusha
lock
inc
add
mov
inc
cmpsb
lock
movsl
sub
and
mov
sarb
decl
jno
sbb
stos
or
push
push
nop
scas
bound
push
lods
fisubs
mov
xor
xchg
inc
ret
adc
mov
dec
mov
cmc
or
nop
cmp
fidivrl
xchg
icebp
pop
or
push
sbb
es
jl
inc
push
mov
mov
nop
mov
add
add
add
push
add
add
mov
dec
jp
out
ficompl
lcall
pop
daa
test
mov
or
cmp
push
loope
daa
int3
rolb
or
mov
add
movsl
dec
into
int3
push
pop
out
inc
popa
inc
push
bound
dec
divl
cld
cli
daa
movsl
outsb
in
jl
ja
cmp
add
iret
add
push
push
pop
xchg
mov
jnp
add
pop
add
dec
xlat
rcl
or
push
or
inc
adc
xor
inc
fldcw
push
popf
jne
pop
cmp
sub
std
pusha
xchg
and
mov
inc
out
pop
lea
sti
rep
bound
inc
lret
sub
adc
outsb
or
sbb
cmp
jae
mov
mov
lock
add
sbb
call
arpl
mov
jnp
and
jne
mov
mov
jae
push
push
mov
xor
push
mov
testb
dec
adc
push
cmpsl
data16
or
roll
sub
sub
loop
ljmp
pop
sbb
lock
inc
mov
xchg
testb
mov
add
jle
inc
xchg
pop
mov
loope
push
daa
inc
or
cmp
jne
adc
dec
cld
sub
rolb
in
andl
push
pusha
movsb
adcb
dec
insl
sub
lods
mov
pop
hlt
add
cmp
adc
jbe
jo
pop
add
cmp
pop
adc
add
cs
xor
ret
addl
sub
sub
bswap
sub
lods
pop
xchg
push
xor
aas
repnz
inc
pushf
pop
mov
mov
inc
rcrb
clc
pop
test
or
stos
xor
add
das
xchg
lret
loop
ljmp
clc
adc
push
push
dec
lret
sbb
sub
call
mov
push
not
dec
hlt
adc
mov
push
aam
dec
and
call
adc
add
jecxz
dec
imul
or
sub
fldl
es
mov
mov
inc
inc
and
or
hlt
sub
pop
mov
adc
jno
incl
in
test
push
sub
cmpsl
dec
rclb
mov
jo
mov
adc
push
push
and
add
jmp
add
sub
inc
xor
mov
pop
lock
and
sarb
dec
jne
adc
push
inc
push
fdivr
mov
lods
stos
add
xor
bound
bnd
sub
lock
inc
sbb
or
int3
fs
mov
cmpl
xor
and
je
dec
or
sub
mov
or
mov
xor
mov
dec
shrb
cmp
pusha
xor
push
icebp
push
sub
sbb
nop
xchg
fsubs
roll
jmpw
sub
lods
aad
mov
ret
sub
xor
add
test
in
in
sub
mov
lods
cmp
lea
in
dec
sub
out
inc
sbb
clc
adc
les
xlat
add
pop
nop
and
jge
shrb
bound
mov
sbb
add
andl
sub
push
subb
add
push
in
ret
loope
mov
adc
push
adc
mov
stos
adc
pushf
or
cmp
rol
aas
bound
dec
adc
je
or
jmp
outsb
cmp
je
sub
mov
sbb
fldenv
push
clc
sub
sar
cmp
jbe
or
add
hlt
mov
jmp
ret
mov
scas
pusha
in
inc
sbb
push
add
jecxz
shlb
faddl
ljmp
in
mov
add
rorl
mov
dec
ljmp
push
lods
and
mov
fiadds
add
cmpl
mov
fiadds
or
lock
icebp
mov
fiaddl
mov
ljmp
cmp
pop
pop
pop
jl
pop
in
pop
pop
mov
pusha
lea
jne
mov
inc
es
pop
in
subb
pop
cmpsl
testb
test
add
sbb
fs
inc
iret
push
push
aas
imul
sub
inc
stos
pop
inc
add
mov
sarl
pop
push
adc
sbb
mov
rolb
test
jmp
push
adc
pop
cs
testb
push
mov
enter
arpl
push
in
sbb
dec
add
jne
sub
or
incb
mov
jae
add
sub
add
into
xchg
call
jb
pushl
mov
lock
loopne
or
jmp
inc
adc
or
clc
jae
adc
and
cmp
pushf
add
inc
and
push
dec
icebp
movsb
sahf
or
mov
push
adc
lods
adc
les
out
add
dec
adc
cltd
lods
insb
lods
add
lods
dec
int
adc
inc
and
xor
test
lahf
imul
mov
lods
shrl
mov
enter
mov
dec
and
cmp
and
pop
clc
xchg
subl
mov
adc
pop
daa
or
cmp
jb
and
or
in
insb
jb
daa
mov
fnsetpm(287
mov
mov
fcmovnb
imul
and
sbb
and
or
xchg
fisttpl
sub
sub
movsb
cmp
mov
cmp
adc
mov
adc
add
add
mov
icebp
adc
addb
or
and
or
aad
adc
pop
arpl
cmp
cmp
and
dec
mov
pop
insl
and
push
daa
add
or
es
add
nop
jno
dec
iret
aam
sub
jno
aas
inc
push
shrb
pop
pop
mov
inc
rolb
and
inc
xchg
rcrl
nop
inc
push
nop
xor
dec
push
nop
inc
push
and
push
nop
inc
test
movsb
es
nop
inc
push
sub
daa
and
enter
sub
and
enter
pop
enter
test
in
std
mov
pushf
cmp
in
add
push
shrb
add
and
hlt
ss
js
std
xor
or
xor
mov
mov
pop
jle
jnp
pop
movsb
lahf
hlt
xchg
movsl
lea
jns
xchg
push
not
stc
sbb
xchg
mov
sti
test
fldenv
push
push
add
mov
or
xchg
inc
fbld
add
adc
pop
sbb
les
add
shlb
icebp
dec
imul
add
adc
inc
adc
sbb
adc
add
loop
dec
data16
fsts
or
punpcklbw
mov
pop
adc
and
sub
or
adc
mov
cmpsl
ror
cmp
pop
or
shlb
mov
frstor
push
jnp
xchg
adc
push
push
sbb
mov
loop
dec
popa
mov
pusha
test
enter
pop
sbb
push
adc
les
jmp
orb
jecxz
add
fstpt
clc
adc
pusha
ret
xchg
or
adc
and
aam
out
push
push
call
mov
call
orb
data16
add
inc
test
es
ds
pop
sti
adc
sbb
fsubrl
fadds
push
and
lock
sub
leave
xchg
cmp
enter
sbbl
pop
addr16
add
outsl
push
lods
lods
loopne
lock
cld
jne
push
scas
fldcw
or
sub
lret
mov
adcb
js
mov
mulb
xor
sub
jo
push
loope
pop
cmp
push
xor
subb
aam
rcll
ja
jne
and
mov
je
daa
add
push
inc
pop
pop
orb
sbb
or
or
mov
cmp
sbb
xchg
leave
rol
mov
sbb
mov
xor
and
mov
jg
xchg
subl
push
mov
aam
sub
or
xor
jmp
cmp
test
inc
jecxz
xchg
cmc
dec
adc
push
aaa
jmp
mov
cmp
inc
sub
mov
push
jmp
or
ljmp
pop
clc
sahf
mov
out
push
mov
and
jle
push
movb
pop
sub
jo
repnz
or
imul
dec
or
iret
filds
rolb
call
dec
ds
lods
mov
aam
mov
xchg
push
inc
leave
je
or
imul
inc
cmp
inc
testb
add
out
rcrl
repz
jp
jmp
add
subl
outsl
clc
int3
mov
or
shlb
in
sbb
or
iret
mov
fsubrl
or
pop
test
mov
inc
mov
or
jmp
push
adc
andl
les
mov
and
adc
rorb
fcoms
mov
inc
mov
push
dec
mov
in
in
and
push
hlt
cld
repnz
mov
andb
pop
clc
xor
insb
inc
shl
orl
xchg
pop
daa
ljmp
and
fcomps
shl
pop
imul
std
cld
hlt
lahf
inc
jae,pt
cmpsl
or
push
in
cmpsl
pop
test
iret
push
jge
sub
and
cmc
ds
iret
xchg
push
insl
and
lock
or
xlat
sbb
imul
sub
mov
add
and
daa
or
push
mov
popa
jmp
cmp
jl
cmp
jle
cmp
push
jp
or
pop
mov
fnsetpm(287
cmp
mov
inc
pop
sbb
cmpsb
cmp
iret
sti
in
mov
pop
and
cmp
jl
cs
or
je
cmp
je
jne
pop
imul
mov
cs
iret
and
push
enter
popa
test
leave
add
sub
add
rorl
in
sbb
negl
lahf
sarb
mov
loop
mov
or
enter
sarb
dec
jl
add
mov
in
add
out
mov
pop
loop
fdivrs
and
or
adc
filds
inc
push
orl
mov
pusha
adc
cmc
add
insl
std
call
mov
mov
cmp
inc
shlb
fidivrl
ss
flds
xor
sub
or
adc
loopne
mov
fimuls
xor
popf
aam
lods
pop
mov
sub
push
pop
loope
loopne
mov
push
pcmpgtd
push
add
xchg
je
add
sub
in
xor
call
sbb
push
sbb
pusha
clc
loope
dec
push
mov
sbb
or
adc
jb
insl
dec
and
cmp
test
inc
es
jo
push
cmp
pop
push
pop
adc
pop
pop
push
or
pushf
cmp
inc
lret
and
out
xor
push
add
fistl
xor
mov
and
inc
dec
or
adc
out
pop
pop
pusha
fs
or
add
sbb
push
sarb
ret
scas
fmull
push
sbb
sub
stc
or
add
mov
push
mov
inc
mov
add
cli
xor
cmp
insb
adc
jnp
jne
jo
or
mov
push
aad
adc
jle
iret
lods
push
adc
or
add
lea
jno
xor
sbb
push
inc
pop
cmpsb
ret
jo
out
cmp
push
cmpsb
xor
sbb
pop
mov
fs
pop
rclb
ret
sbbb
lea
sub
jle
and
jmp
ret
pop
or
push
push
outsl
pop
mov
sbb
les
mov
pop
lods
outsb
push
xor
aad
popf
mov
sub
dec
rolb
pop
xlat
jbe
jmp
outsl
por
pop
enter
and
add
inc
mov
and
dec
add
xor
fwait
adc
and
lret
push
inc
sbb
jmp
gs
dec
adc
and
lea
xchg
cmpsl
xor
dec
or
mov
ja
adc
mov
in
icebp
das
sub
inc
and
stos
das
aad
arpl
aaa
and
sub
mov
aaa
add
xor
arpl
or
outsl
rorb
jo
dec
fisttpl
add
test
pusha
dec
xchg
movsl
mov
and
jge
nop
inc
xor
add
je
lea
aam
mov
leave
or
mov
fsubrl
rorb
and
daa
je
cmp
adc
and
pop
push
inc
add
push
sbb
mov
dec
ret
subps
inc
adc
adc
jne
xor
jle
or
jle
dec
arpl
sti
add
and
sbb
sbb
sbb
insb
mov
add
leave
push
repnz
jmp
sub
cmp
cmp
rorl
inc
mov
cmp
inc
sbb
push
push
insb
or
inc
rol
fcoms
fadds
sub
mov
xor
mov
mov
jle
or
push
pushf
in
mov
mov
and
jno
roll
xchg
mov
cwtl
sbb
sbb
dec
fs
fistpll
pushf
test
xchg
add
mov
lock
add
lret
xorb
mov
adc
aaa
push
jecxz
mov
cmpsb
out
movsl
mov
mov
xor
movsb
scas
add
fsubrs
repz
loopne
setle
or
push
ss
or
push
sbbb
sub
push
lds
xchg
sbb
mov
push
out
dec
or
inc
aaa
popf
add
jl
mov
aaa
pop
mov
jg
mov
pushf
cmpsb
int3
popa
fwait
aas
sub
sub
test
mov
sbb
push
sbb
inc
pmaxsw
or
xor
loope
add
or
sub
repz
pop
pop
sub
stc
sub
lea
add
lret
pop
ret
testl
adc
add
push
cwtl
nop
inc
or
pop
sar
out
cmpsl
stos
sub
shrl
or
mov
jbe
push
push
adc
call
mov
mov
push
lock
adc
sub
dec
pop
subb
jbe
pop
jo
pop
cmc
add
lret
sarb
dec
inc
push
pop
xorb
sahf
mov
lret
pop
mov
or
or
xchg
adc
add
jo
cwtl
dec
mov
pop
inc
in
or
and
jns
sub
ss
lea
push
jmp
into
jo
lret
mov
xchg
jle
push
inc
add
push
cmpb
outsb
lret
xor
push
rclb
jmp
xor
ss
add
lea
sub
adc
jo,pn
pop
and
or
xsavec
mov
jo
push
cs
sarb
or
jmp
shlb
pop
fs
adc
cmp
pushl
jae
cmp
in
out
dec
sbb
push
test
test
rclb
aaa
div
je
jecxz
ret
inc
cli
daa
sub
loopne
test
insb
es
inc
test
push
sub
xchg
adcl
movl
push
test
sub
or
rcll
push
and
scas
inc
adc
call
mov
testl
pop
dec
jnp
adc
dec
in
mov
cmpxchg
push
cmp
fistl
inc
add
bnd
push
divb
or
cld
cmp
clc
jne
or
jne
or
add
je
cld
jmp
pop
andl
xchg
add
mov
prefetch
or
mov
and
xchg
sub
or
jle
inc
out
push
out
mov
xchg
mov
mov
or
aam
arpl
push
xorl
adc
jecxz
fdivrs
push
lock
mov
xchg
decl
push
xlat
pop
adc
xor
xadd
add
fmuls
adc
jg
mov
push
lea
mov
movsl
xor
jo
dec
fsubrl
inc
fstl
ret
jbe
add
aam
mov
pop
mov
fisttpll
add
loopne
sti
movsl
pmaxub
or
lcall
inc
jle
push
and
js
pop
inc
pop
sub
dec
add
fsts
add
out
aaa
inc
rcr
jb
push
jmp
sub
pop
je
jecxz
add
shrb
add
shll
daa
jo
pop
sub
popf
xor
inc
xor
sbb
and
in
out
xchg
mov
add
jb
push
add
ret
sti
pop
and
dec
add
sub
imul
popa
mov
stc
fwait
adc
push
es
mov
adc
and
dec
sahf
xchg
imul
push
movsb
repnz
xor
das
dec
pop
and
rcr
insl
shll
insb
pop
fwait
dec
fmulp
mov
in
mov
or
sbb
push
push
clc
ja
adc
rcrb
popf
test
adcl
inc
pop
add
es
sbb
add
lods
negb
mov
pop
fimuls
push
inc
add
inc
jno
add
mov
adc
or
shrb
sahf
out
or
or
adc
nop
enter
je
jnp
jo
fs
push
jns
or
rclb
adc
insb
inc
cmc
imul
sbb
and
or
cmp
inc
push
jnp
mov
imul
push
sbb
es
add
adc
pop
daa
pop
or
adc
fiaddl
adc
dec
es
dec
mov
lods
dec
and
sbb
add
jno
cmp
or
and
incb
ja
fcomi
sbb
xor
or
sarb
sbb
testl
add
hlt
or
mov
push
int
push
sub
jns
sbb
push
push
sub
adc
lds
mov
popa
mov
loop
lret
adc
xor
mov
repnz
cmpsl
pop
push
je
lea
push
cli
pusha
inc
into
fcmovnu
jae
scas
icebp
inc
sbb
ret
popa
add
add
or
incl
mov
aam
inc
add
fs
and
add
add
add
or
push
pandn
dec
add
test
push
push
cmp
pop
mov
mov
push
mov
sub
push
pop
dec
cltd
in
adcb
push
icebp
dec
in
jmp
in
jne
dec
inc
in
add
sarl
addl
mov
loop
cmp
adcl
jne
push
div
movsl
or
and
cmp
mov
add
in
or
cs
mov
xchg
mov
call
or
or
loope
lcall
dec
pop
and
sub
pop
rcrl
jne
mov
out
sub
and
mov
pusha
arpl
sbb
cmp
ss
inc
lds
mov
add
inc
insl
mov
icebp
inc
add
loopne
cmp
add
add
push
sbbb
dec
lret
add
test
and
jle
adc
movsl
dec
mov
push
adc
inc
cwtl
mov
mov
fidivrl
cmp
jb
jg
in
ja
push
pusha
fildll
pushf
lcall
pop
or
add
in
mov
cmp
xor
inc
pop
add
adcl
pop
lcall
lods
adc
or
push
xor
pop
jmp
ja
push
insl
fmul
inc
out
jbe
enter
push
sub
pmullw
push
push
sub
loope
hlt
stos
sbb
jb
adc
ret
inc
pop
add
shl
popa
xchg
add
pop
xchg
push
or
daa
and
or
push
jo
xor
xor
jo
sahf
fs
ljmp
adc
inc
or
or
cmpsl
or
pop
insl
out
add
push
loope
adc
clc
pop
inc
mov
cmpl
push
cmp
jecxz
ret
push
movsl
orl
imul
or
in
in
pop
or
and
sbb
adc
outsb
enter
in
and
icebp
inc
or
mov
scas
shlb
push
xchg
cs
inc
hlt
das
push
dec
xchg
adc
daa
xlat
pop
adc
data16
lods
or
ja
mov
sbb
test
push
pop
xor
movhps
mov
and
movsl
adc
addb
movsl
test
popf
push
imul
add
dec
jno
addl
or
inc
rclb
sti
lds
add
jg
mov
sub
adc
sbb
mov
xor
xchg
lea
lds
shr
adc
xor
movsl
mov
movsl
adc
push
insl
push
jo
mov
xor
push
insl
add
sub
push
xchg
xchg
orl
cmp
xor
popf
cmp
xchg
jnp
pop
inc
and
mov
jnp
leave
mov
inc
and
add
imul
jp
shlb
lock
lock
push
sbb
or
addr16
cmp
ret
push
pop
ss
imul
sbb
jne
sbb
push
je
push
stos
xchg
add
mov
enter
ljmp
add
cmpsb
popa
mov
add
inc
cmp
shrl
jmp
mov
jl
push
pop
inc
inc
pop
rclb
xchg
fs
popa
int
mov
mov
cwtl
add
ss
js
xor
jmp
pop
add
add
fisubs
add
cmc
test
and
inc
dec
or
xchg
cmp
sahf
push
ret
jecxz
ss
stos
mov
mov
and
push
mov
add
bound
push
sbbb
int3
cmp
add
pushl
cmpsl
repnz
cmp
out
testb
or
sbb
and
and
or
cmp
mov
dec
sti
cmpl
push
mov
out
sbb
inc
sbb
mov
ret
cmpsb
push
pop
push
sbb
sub
push
jo
fldcw
cmpb
jo
add
ret
dec
dec
je
xor
into
jne
call
adc
mov
adc
and
adc
cmp
mov
jg
inc
push
ret
lea
xor
clc
xchg
rcr
fwait
pop
mov
jo
cmc
mov
test
lds
adc
addr16
rolb
cmc
adc
push
movsb
dec
add
xchg
hlt
jp
add
push
icebp
call
sbb
add
mov
mull
xor
mov
add
xchg
es
cmp
dec
xor
std
and
mov
imul
jl
in
and
jne
outsb
or
imul
and
inc
xchg
jo
jmp
pop
loopne
rcrb
jbe
xchg
mov
dec
cld
adc
and
sub
jg
dec
pop
ja
adc
push
add
rolb
pusha
bound
jo
scas
xor
pop
lods
push
scas
icebp
fiaddl
add
inc
pop
or
sbb
cmpsb
mov
and
lods
inc
xor
fistpll
sahf
dec
sahf
out
mov
aam
inc
loopne
add
xor
aas
mov
rolb
scas
in
pop
pop
jns
mov
in
and
cmp
pop
leave
add
push
shr
ret
inc
stos
inc
lods
fisttpl
ret
xchg
in
loopne
adc
xchg
xchg
lea
clc
or
pushl
inc
sub
push
mov
xor
cltd
jo
cmp
cs
aaa
cmp
push
xor
sbb
out
in
cmp
dec
inc
or
push
leave
fwait
sub
cmpsl
mov
mov
pop
cmp
popa
or
lds
inc
les
inc
dec
sub
insl
adc
add
or
push
or
sbb
add
dec
pop
sbb
out
test
rcrl
mov
mov
xor
sub
and
rcrl
dec
ja
pop
xor
pusha
lods
or
lods
and
inc
or
xchg
arpl
ss
enter
dec
inc
test
xchg
xchg
lret
inc
movsb
or
pop
inc
addb
ret
and
xchg
imul
ret
and
and
imul
sbb
or
xor
enter
mov
es
cmp
mov
jmp
je
xchg
lcall
sub
sub
pop
and
in
adc
inc
sbb
and
mov
pop
cmc
sbb
bound
mov
xor
xchg
dec
sarl
lds
sub
or
pop
or
outsb
pop
gs
fisttpll
rcrb
ret
and
adc
pop
repz
and
push
mov
sbbl
and
jmp
and
outsl
or
lcall
adc
inc
push
dec
cmp
js
sbb
mov
ret
loope
fwait
insb
imul
daa
and
mov
daa
daa
dec
xchg
add
bound
repnz
and
add
mov
inc
cmp
loope
les
xchg
inc
mov
or
lret
add
in
ficompl
insb
imul
outsl
push
xor
cmpsl
mov
sbb
mov
adc
xchg
add
adc
jg
add
inc
jb
adc
mov
fs
sbb
test
sbb
xor
lods
add
in
mov
dec
ds
ret
or
adcl
sub
les
nop
push
das
daa
push
orb
add
or
jnp
add
sahf
addl
mov
push
pusha
push
add
or
test
sbb
cmp
aam
jg
sbb
fisttpll
fstp
xchg
loopne
xor
mov
fs
or
ss
xchg
movsb
inc
aam
fadd
dec
lock
mov
and
add
pop
std
and
jmp
cmp
and
lcall
fldenv
loop
adc
int3
jne
test
pop
shlb
sbb
sbb
sub
sbb
push
add
sbb
push
aaa
and
into
aas
inc
dec
pop
xor
and
xor
inc
out
or
sahf
mov
push
adc
inc
jmp
push
push
adc
cmp
sub
test
sub
push
mov
mov
rol
movsb
incb
jnp
test
lea
pusha
mov
loope
fmuls
cmpsb
outsb
inc
mov
aam
daa
in
or
add
push
push
xchg
inc
xchg
cmpsb
push
xchg
xchg
or
ljmp
cmp
and
sbb
sub
mov
xor
push
inc
jecxz
xchg
loop
lock
or
iret
rorb
cli
shll
adc
jnp
add
or
xor
cwtl
add
pop
addr16
les
mov
xchg
inc
cmp
jae
adc
mov
out
inc
push
push
mov
lock
movsl
fs
sbb
sbb
ret
stos
dec
pop
gs
imul
mov
or
lcall
adc
or
push
cmp
test
xchg
jmp
rorl
les
or
pop
inc
imulb
nop
and
adc
xor
les
pop
and
lahf
outsl
iret
mov
ret
jmp
pop
fs
imul
rolb
ret
pop
adc
orl
push
das
aam
or
cmp
or
test
lods
ret
into
jo
mov
add
push
push
sbb
sbb
pop
mov
push
jne
jmp
sub
add
dec
mov
mov
mov
mov
call
in
ss
stos
jnp
inc
lahf
stc
outsb
pop
cmpsb
cmp
add
push
jno
push
inc
shll
jbe
adc
cmp
je
testl
dec
nop
xchg
rol
lret
xchg
loop
mov
int3
dec
cld
lods
mov
push
dec
fstp
mov
mov
push
sbb
add
divb
push
fnstsw
test
je
and
fiadds
pop
mov
ficoml
or
xchg
fcomps
push
or
pusha
add
add
clc
and
lods
in
fsubrl
push
mov
adc
fldz
out
cmp
sbb
xchg
sbb
and
pop
fsub
pop
fsubrp
mov
dec
add
bnd
mov
inc
in
clc
push
jg
xor
test
mov
add
mov
stos
and
push
shlb
add
xchg
movsb
xchg
mov
adc
sub
dec
je
add
and
mov
add
pop
xor
mov
roll
pop
fisttps
or
lahf
fstpl
test
sub
sbb
pop
jmp
inc
pusha
in
push
adc
hlt
lret
fbstp
jmp
movsb
ss
sub
iret
lret
jmp
push
jmp
and
pusha
sub
xor
adc
int3
lret
xchg
push
enter
and
dec
in
mov
sbb
mov
rorl
or
repz
jmp
push
adc
lea
jg
or
adc
dec
add
sbb
outsb
xor
xchg
inc
pusha
push
shrl
dec
adc
push
test
rolb
outsb
in
or
adc
iret
jp
adc
fwait
and
adc
or
outsb
fdivrl
jge
push
mov
in
lahf
push
push
add
push
inc
fmulp
dec
inc
mov
sbb
aaa
repnz
and
lds
int
pusha
test
add
in
sub
push
aaa
enter
lods
cmp
or
sbb
or
ja
daa
lret
push
lods
sbb
mov
subb
push
in
cs
and
jnp
in
xchg
xchg
sbb
sbb
gs
or
pusha
add
xchg
or
sbbb
fstl
in
pop
cmp
pop
movsb
leave
push
or
fs
push
push
enter
aam
sub
xchg
fldl
psubb
mov
add
sbb
sbb
mov
adc
or
gs
sbb
aas
mov
inc
xchg
insb
pop
adc
push
insb
xchg
fstl
sbb
ja
xor
xor
lds
push
push
pop
pop
pop
or
and
repz
fisttps
push
ja
xchg
cmp
repz
mov
loop
lcall
sbb
out
jno
sahf
sahf
out
sahf
lods
mov
cmp
sarl
adc
das
ds
repz
pop
insl
jle
iret
repz
pushf
lods
mov
push
into
and
mov
imul
mov
lods
testl
movsb
pop
aam
xchg
mov
jmp
add
inc
mov
pop
add
xlat
shlb
jno
xchg
jl
ja
in
xor
mov
sbb
adc
or
pop
push
addb
test
popa
in
int
inc
cs
add
pop
subb
jne
stc
cmp
mov
adc
and
and
popa
and
mov
mov
mov
fisttpl
lds
fs
iret
sbb
popf
lock
adc
gs
and
movsb
inc
and
js
sub
lahf
stc
enter
outsb
aaa
int
cmp
push
les
add
push
xor
inc
mov
xor
sbb
fstl
cmpsl
iret
ds
jb
rclb
mov
push
sub
in
outsb
push
or
mov
sbb
fs
adc
shlb
mov
popa
xchg
push
mov
fs
mov
aam
subl
add
add
or
push
and
lods
outsl
mov
add
sub
and
dec
mov
mov
xor
enter
cmp
cltd
cltd
add
push
dec
insb
jmp
cltd
and
sub
jle
jnp
sarb
xor
add
popa
test
call
jb
jnp
sbb
andl
in
xor
adc
xchg
popl
sbbb
mov
lds
jb
pop
loope
adc
lret
or
leave
test
or
bound
stc
add
out
cmp
repnz
lock
jno
rol
ret
adc
stos
add
inc
js
add
adc
add
shrl
shl
rclb
test
push
out
jb
xchg
out
aaa
lret
or
iret
add
aaa
mov
in
sahf
daa
or
nop
adcl
ja
inc
shl
inc
inc
jae
push
dec
movsb
mov
or
sbb
push
sbb
cmpsb
xchg
stos
pop
nop
loope
fistl
and
or
sub
jge
add
call
mov
shrl
add
ret
leave
xchg
adc
sub
push
xor
mov
fs
xchg
jl
mov
inc
ret
adc
push
jne
mov
in
mov
add
les
int
push
adc
cmpsl
enter
mov
lahf
les
sahf
mov
movl
in
lds
ret
bound
in
push
cltd
shr
adc
inc
sub
fisubl
lret
add
jge
mov
adc
bound
adc
cmpsl
jo
sbb
cmp
or
add
sbb
adc
int
jmp
andb
adc
aad
in
lea
or
loope
add
mov
fs
or
je
sbb
int
roll
sub
mov
aas
sbb
fimull
insb
fldenv
or
sbbb
mov
xchg
imul
or
imul
inc
and
aam
cmpsl
xchg
in
les
and
add
stos
mov
pop
jo
jne
jecxz
and
ja
adc
jo
mov
andb
mov
stc
pop
cmp
push
int
push
push
mov
pop
adc
and
add
scas
pusha
lods
ret
cltd
sub
cmp
pop
pop
mov
and
adcb
sbb
mov
imul
or
xchg
test
stos
or
cltd
add
xchg
cmp
jle
ret
orb
cmp
sbb
in
pop
jge
or
add
jb
add
in
cs
lret
imul
mov
push
repnz
mov
xchg
or
insb
out
xor
sbb
pop
pop
sbb
dec
inc
xor
or
pusha
push
inc
pop
xor
lods
lea
mov
and
ds
push
inc
cmpsl
popf
js
insl
stos
xchg
mov
inc
lds
aad
fstpt
mov
xor
dec
add
add
inc
add
sub
jl
mov
and
roll
push
push
push
jg
mov
test
jmp
xchg
xchg
sub
outsl
pop
pushf
push
cmpl
dec
mov
jno
or
and
popa
push
push
jno
or
xorb
push
jo
pusha
push
jecxz
add
in
adc
pushf
and
shll
add
add
add
push
ret
add
arpl
xchg
cmp
push
add
xor
xor
mov
sarb
xorl
xchg
pop
cmp
insl
stc
mov
xor
sbb
push
add
push
adc
or
add
cmp
nop
bound
and
mov
pop
add
out
enter
ja
adc
mov
or
jns
jge
loope
test
pusha
je
outsl
dec
inc
lock
or
out
xor
mov
fwait
dec
inc
mov
dec
push
xchg
mov
loope
sbb
fnstenv
mov
push
out
jge
adc
xor
push
addl
leave
sub
cmp
dec
mov
push
imul
lods
aaa
je
and
xor
shlb
pop
sub
stos
add
dec
adc
adc
rol
outsl
xor
rcll
jl
cmp
aas
or
popf
sub
pop
adc
insl
cmpsl
jne
add
push
or
sub
push
sbb
or
pop
or
fildl
sbb
add
pop
pop
push
mov
mov
sbb
cmp
shlb
jp
add
add
mov
mov
fneni(8087
sub
mov
movsb
fwait
stos
mov
es
popa
mov
push
lea
lret
lea
in
sub
es
icebp
adc
mov
push
imul
fs
pop
pop
inc
inc
lahf
cmp
test
cmp
or
cmp
xchg
adc
insb
mov
lret
ja
sbb
mov
add
outsb
addl
fldenv
loopne
add
pushf
test
pop
int3
lea
jmp
fimuls
lock
ja
and
xor
jbe
inc
inc
add
mov
add
push
fistpl
dec
shrb
or
and
adc
add
add
push
inc
pop
pop
iret
mov
fdivl
or
or
orb
arpl
inc
pop
shl
movb
test
jecxz
add
pushl
stos
adc
inc
xor
cmp
mov
pop
and
mov
push
mov
fisubrl
fcompl
jle
inc
add
orb
or
adc
jl
pop
imul
jl
or
sbb
popa
jp
adc
sti
mov
push
cmp
je
mov
mov
push
add
inc
jmp
movb
jg
loope
mov
push
pop
cltd
idiv
pusha
fistpll
xor
mov
out
ljmp
jno
int3
aaa
push
xchg
lret
and
mov
movsl
popf
xor
sar
ret
push
outsl
add
add
push
sbbl
and
imul
xchg
push
dec
xor
call
sti
push
add
xor
push
or
push
cmp
in
in
hlt
cltd
nop
cmpsl
rolb
pop
and
cmp
cmp
in
cmp
mov
dec
fadd
jnp
mov
adc
lds
push
fdivs
movsb
fldcw
cmp
sbb
sbbb
mov
sbb
sarl
and
push
dec
shll
mov
test
in
jmp
pop
push
les
push
pop
push
adcb
lds
push
shll
mov
insl
and
mov
cmp
mov
add
mov
clc
or
scas
pop
test
xchg
cs
je
int
sub
fmull
pop
jb
push
lcall
mov
add
fcoms
adc
lock
pushf
adc
pop
xchg
inc
jo
rorl
pop
lods
adc
mov
mov
sub
cmp
mov
lea
cmp
lret
inc
mov
gs
cwtl
inc
xor
jmp
jns
in
pop
jle
mov
rclb
dec
ljmp
pop
stc
jns
cwtl
xor
jle
imul
in
cmp
sub
daa
fadds
sbb
mov
out
add
sbb
jae
out
cltd
fmul
inc
sub
dec
imul
in
nop
push
fsubrs
fs
mov
adc
ja
dec
stc
movsb
mov
push
push
jecxz
out
and
pusha
shlb
and
push
jp
sbb
test
xorb
data16
popa
aaa
and
jae
dec
in
mov
stc
sbb
adc
aaa
push
sbb
dec
ds
cli
dec
adc
sub
nop
dec
sub
add
jno
jge
dec
push
movsb
movsl
xor
inc
cmp
add
sbb
push
fs
mov
imul
sbb
and
inc
adc
es
movsb
pushf
xchg
pop
xor
mov
jo
enter
or
xchg
push
arpl
call
jns
sub
shlb
sbb
fucom
jge
pushf
int3
loopne
xchg
and
lea
mov
and
mov
clc
push
enter
fisttpl
insl
das
mov
sub
dec
ret
add
jge
pop
test
into
push
pavgb
adc
addr16
mov
ficoml
inc
sbb
setb
or
incb
or
cmp
insb
fildl
add
filds
mov
mov
pop
pop
leave
add
mov
or
xor
aam
dec
sbb
rol
add
jl
icebp
test
nop
cmpsb
stc
incl
add
or
int
nop
enter
pop
pop
mov
pop
mov
and
jo
adcl
in
in
fcoms
insb
sahf
jl
or
mov
enter
loopne
fidivrl
inc
push
cmpsl
lret
stos
bound
push
lds
mov
mov
daa
add
adc
into
jge
push
xor
push
mov
inc
testb
psubd
mov
adc
mov
fcmovnbe
call
mov
or
addl
push
and
cwtl
cmp
das
mov
and
and
jbe
jp
and
scas
xchg
rol
frstor
push
andb
xchg
mov
adc
scas
xor
push
dec
into
xchg
mov
mulb
fistpl
sub
fsubrs
lcall
sub
inc
dec
sub
lock
es
pop
adc
xor
and
cmp
xchg
popa
dec
dec
mov
sbb
sub
jp
mov
add
inc
sbb
and
lahf
arpl
mov
and
daa
xchg
mov
push
pop
adc
push
jmp
push
and
test
fnsave
jge
push
nop
sub
jg
or
sub
imul
inc
jmp
ss
sbb
call
imul
jo
fs
in
add
dec
cmp
rcrl
es
and
sub
out
add
scas
xor
and
loopne
cmp
push
mov
lock
out
sti
jge
mov
sub
cmp
ja
dec
push
movsb
addb
rcll
inc
pusha
ret
mov
pop
gs
movsbl
and
adc
loopne
add
lcall
inc
inc
hlt
jae
pop
adc
movsb
test
pop
mov
aad
or
bound
rorb
push
xlat
jmp
or
shlb
call
imul
xchg
sbb
adc
mov
mov
mov
cmpsl
pop
dec
pop
fsubl
xorl
add
jecxz
shrb
mov
cmpsb
in
xchg
or
mov
inc
pop
mov
inc
imul
xchg
rcl
addb
fnstcw
sahf
push
push
mov
mov
pop
pop
fisttpl
mov
je
cmp
fisttpll
sbb
cli
or
or
nop
jl
paddq
leave
inc
mov
cmp
mov
xor
adc
inc
or
aam
jge
test
or
daa
aad
jns
enter
fcomp
in
scas
pop
push
jno
adc
inc
dec
dec
push
push
xchg
cmovg
add
cltd
aam
arpl
sbb
shlb
sbb
or
add
cmp
in
push
mov
bound
or
inc
jmp
int3
inc
or
push
push
sub
fdivrs
jns
pusha
ja
cmp
add
nop
inc
nop
adc
ss
and
and
xchg
cmp
mov
adc
enter
xor
adcl
add
loop
iret
outsb
push
xchg
stos
add
sbb
test
stc
mov
rcll
or
mov
sbb
dec
dec
aas
push
sbb
jbe
stc
inc
adc
out
je
cmp
inc
leave
ljmp
xchg
sete
adc
jnp
pop
ror
pop
in
add
mov
cmpsb
adc
xor
test
rolb
inc
popa
fmuls
inc
jmp
test
push
add
insl
adc
movsl
and
sub
add
jge
bound
xor
jne
ja
adc
xor
jmp
daa
insb
cmc
or
cmp
xchg
dec
in
cmp
adc
lea
rorl
cmp
mov
cmp
push
cmp
sub
loope
cmp
scas
pop
mov
sub
cmc
pop
cmp
push
sbb
adc
cmp
push
stos
mov
leave
push
mov
mov
add
arpl
and
sahf
pop
jne
das
add
lar
add
addb
push
inc
lahf
das
cmpsl
sub
xchg
xchg
xchg
jne
in
push
cmp
mov
ret
inc
fsubrs
fldenv
ja
adc
jl
adc
xlat
xchg
mov
mov
add
xor
pop
or
es
inc
xor
sub
test
pop
aam
dec
pop
add
inc
jle
or
shrl
cmp
ss
pop
jns
push
adc
mov
and
and
adc
mov
xchg
sbb
adc
aaa
nop
xor
pop
sub
sub
or
jmp
aas
cmp
lods
inc
cld
inc
add
jo
imul
cmp
add
dec
in
mov
pop
imul
cmp
mov
inc
mov
aaa
pop
jo
fists
xor
and
call
imul
pop
hlt
fsts
pusha
add
loopne
outsb
jne
ret
and
xor
ret
loopne
xchg
cltd
xchg
jg
inc
add
in
mov
cmp
pop
sbb
or
ret
sti
or
cs
out
popa
test
rclb
cwtl
cmp
adc
inc
pusha
aam
push
fmuls
inc
or
pop
or
add
and
call
daa
pop
les
or
mov
popf
ss
inc
dec
jecxz
sarb
jl
icebp
out
push
roll
ret
dec
add
adcb
adc
push
adc
mov
iret
adc
push
pop
dec
mov
shrb
push
jo
fs
pop
aam
sbb
and
les
lods
pop
jnp
add
daa
lahf
lret
out
imull
adc
cltd
inc
add
add
test
pop
add
je
arpl
popf
rcrb
clc
pop
push
or
cs
mov
lret
push
mov
adc
fistl
mov
mov
addr16
adc
inc
lea
sub
daa
ja
adc
jno
push
mov
imulb
inc
jo
xchg
lock
and
pop
jg
pop
pop
mov
jmp
and
sbb
mov
mov
int3
dec
sbb
daa
rorb
movsb
add
fwait
mov
sbbb
in
push
push
mov
push
xor
mov
imul
js
mov
fs
cmp
jne
or
mov
lods
out
movl
ljmp
xor
push
stos
test
cmp
adc
ret
dec
jge
fimuls
mov
cmp
add
inc
lret
push
cltd
jb
or
aam
shrb
pop
cwtl
adc
aad
test
fistpll
add
cmp
sarb
pop
add
cmpl
jne
push
cmc
dec
ds
add
ljmp
pop
inc
or
test
xor
cs
dec
xor
jb
testb
jae
mov
xchg
mov
insb
mov
pop
mov
dec
dec
insl
mov
jmp
pushl
dec
adc
or
out
jnp
mov
xor
pop
iret
cli
push
fadd
jnp
or
mov
stos
fildll
adc
popl
adc
test
add
testb
cs
flds
filds
lds
xor
inc
xchg
leave
ret
xchg
call
movsb
shr
aam
mov
push
sbb
add
sbb
int
xor
adcb
mov
and
mov
ja
mov
add
ret
inc
sbb
cmp
je
das
clc
or
cli
pop
and
pop
and
lret
aad
sub
add
aad
mov
sub
add
rcll
add
push
int
and
cmp
insb
or
cmp
in
push
fistpl
adcl
call
or
push
mov
cmp
cmp
xor
push
mov
imul
loopne
push
gs
xor
std
dec
ja
test
add
add
lods
xor
mov
and
ds
sbb
lcall
es
xlat
push
sbbb
sarb
sbb
adc
pop
ljmp
sub
je
sub
into
pop
or
sbb
mov
cmp
cmp
mov
push
sbb
and
push
and
cmp
sti
int
xor
into
xchg
push
push
out
adc
jns
cmp
sbb
xacquire
push
xor
add
sub
dec
repnz
outsb
dec
inc
add
push
ret
sahf
add
pop
add
push
and
pop
cmp
adc
orb
or
sbb
sub
or
cmpl
test
lock
sbb
mov
mov
pushf
xor
add
movsl
movsb
stos
xor
scas
je
pop
dec
fadds
add
fiadds
movsb
or
hlt
xor
cmp
testl
inc
dec
and
add
cmp
aam
push
push
inc
loopne
enter
inc
cmp
es
jmp
add
push
scas
cmp
in
adc
add
and
or
xor
dec
stc
iret
in
and
mov
inc
adc
adc
sbb
cmpsb
adc
dec
test
or
adc
scas
mov
push
or
pop
add
arpl
mov
enter
sub
mov
sbb
pop
pushf
push
lahf
enter
mov
aad
or
and
cmp
pushf
je
jne
sub
add
icebp
cmp
das
xchg
test
xchg
jb
or
lock
push
add
dec
fsubrl
add
pop
xchg
mov
scas
add
jb
and
xchg
mov
xorb
adc
je
adc
ret
leave
add
sti
test
test
adc
les
mov
sbb
sbb
dec
aam
lods
popa
mov
pop
cmp
adc
sbb
push
in
movhps
mov
xchg
sub
pop
or
add
dec
cmpsl
or
test
rcrb
jge
ja
test
test
in
add
add
fsubrl
or
lods
sbb
inc
sbb
cmpsb
inc
clc
cmp
cmp
mov
cmp
dec
js
cmp
and
lods
xchg
clc
xor
mov
xor
stos
adc
fadd
dec
push
ss
cmpsb
cmp
pop
and
push
lock
je
push
jo
adc
or
stos
rcll
jp
gs
xor
insb
loopne
lods
cmp
xor
inc
sub
inc
lret
or
divb
jmp
sub
sub
add
fcoms
pop
xor
jns
push
pop
data16
sub
ja
js
stos
jge
ret
jne
mov
and
fidivrs
xchg
imul
js
lods
cmp
xor
dec
outsb
push
outsb
and
popa
and
enter
and
xor
and
vpunpcklwd
sub
outsb
dec
jg
sub
pop
stos
sbb
pop
and
data16
fnstsw
es
and
test
imul
or
or
es
sbb
orb
adc
in
aad
sbb
sbb
dec
scas
pop
push
pusha
or
fcomp
push
mov
jb
sbb
lcall
loop
call
push
sbb
and
in
sub
mov
cmpsl
int3
dec
je
push
nop
pop
fisttpl
flds
adc
roll
test
add
popa
add
sbb
jnp
daa
dec
mov
push
sub
mov
into
ret
repnz
pop
jge
push
mov
push
adc
sbb
rolb
leave
inc
and
bound
push
cmp
test
sbb
std
and
insl
pusha
adc
lahf
popa
sub
cmp
ficomps
adc
push
lahf
xchg
push
add
cmp
stos
cmc
adc
dec
dec
dec
dec
imul
cmp
dec
adc
inc
push
or
or
xor
or
inc
and
test
movsb
out
or
mov
add
inc
ret
cmp
push
dec
cmp
and
mov
sbb
or
add
repz
aad
jnp
icebp
xor
push
or
dec
clc
call
xchg
adc
stc
jo
in
les
inc
dec
rorl
inc
jne
ret
inc
mov
jne
dec
lahf
xchg
pop
test
xor
jbe
inc
dec
xor
xchg
subb
push
and
push
lods
cld
add
sbb
daa
adc
das
push
sbb
out
sbb
jo
mov
mov
and
pop
imul
push
and
insb
pop
popf
mov
aaa
test
dec
mov
push
shll
imul
ja
adc
incl
inc
add
xchg
xor
mov
and
jecxz
xor
xor
std
insl
dec
and
test
inc
cmp
inc
jb
pop
pop
inc
sbb
ljmp
movsb
shr
push
ss
xchg
push
or
pop
ret
push
or
add
lea
xchg
pop
scas
sbb
and
or
ds
dec
sahf
mov
pop
mov
ds
cmpb
loopne
sbb
or
call
insl
mov
ja
mov
gs
adc
test
into
into
sbb
lds
mov
test
popf
mov
shlb
clc
dec
pop
psubw
jle
or
ja
cmp
sahf
inc
sbb
nop
xchg
and
dec
mov
in
add
clc
and
jecxz
in
stos
fsubl
add
push
pop
cmpl
xor
push
jno
add
push
sbb
into
shl
or
inc
cmp
jb
jmp
lret
repz
sbb
xor
sbb
dec
jo
notb
push
ljmp
test
xlat
cli
mov
pop
mov
or
lret
cmp
mov
dec
scas
xor
pop
sbb
mov
xchg
pop
sub
sbb
les
sbb
mov
add
add
cmpsb
push
sub
rol
rclb
dec
cmpb
test
xchg
jl
push
dec
das
insl
es
add
and
or
pop
and
and
mov
fildl
out
sbb
or
pop
push
ret
mov
sub
sbb
movsl
mov
pushf
adc
daa
mov
inc
xor
cmp
lea
cs
push
ret
inc
xchg
adc
popl
mov
test
push
cmp
adc
mov
cmpsb
mov
jo
les
dec
sbb
pop
xchg
mov
xor
pop
scas
pop
dec
sti
ficoms
mov
ret
je
pop
push
push
dec
xor
fcoml
inc
xchg
push
add
pop
inc
sahf
mov
dec
add
ss
xchg
pushf
lret
frstor
and
inc
cmp
jmp
xor
add
dec
pop
xchg
sar
add
loopne
xchg
fucomip
and
mov
frstor
faddl
addr16
loopne
mov
testl
or
fldl
scas
push
add
pop
rclb
popa
loope
dec
test
adc
out
decb
jb
inc
lea
sub
ret
pop
push
xor
fs
xlat
mov
rcrl
fiadds
fldenv
dec
jg
jno
jo
jbe
sahf
cmp
xchg
clc
dec
dec
scas
scas
cmpl
aas
add
inc
pushl
pop
inc
jmp
popa
sub
fwait
aad
mov
push
and
add
xor
addr16
inc
dec
mov
xor
pop
lea
mov
and
sbb
and
add
dec
push
or
test
cmp
sbb
ss
andb
repnz
and
faddl
pop
imul
imul
fmull
mov
es
out
or
outsb
add
aam
fsubs
mov
add
push
mov
int3
icebp
shlb
sahf
inc
cmp
fnstcw
xor
add
stos
push
das
mov
in
jb
xor
in
loopne
xor
pop
pop
mov
and
mov
lcall
push
loopne
mov
and
inc
and
dec
aaa
inc
adc
es
hlt
nop
mov
sahf
call
stos
pop
lret
call
sub
mov
stos
mov
insl
mov
pushf
popa
imul
xchg
and
push
leave
cmp
xor
sub
pop
cltd
dec
adc
and
cmpsb
jns
jno
outsb
arpl
mov
cmpsl
adc
dec
mov
pop
or
and
cltd
push
inc
mov
sbb
sbb
test
xchg
mov
push
sbb
test
dec
push
adc
jne
cmp
fwait
dec
mov
inc
pushl
jl
ficoml
and
mov
xor
and
cmpsb
imul
icebp
mov
outsl
mov
pop
inc
mov
aam
or
sub
or
fsubrl
push
out
push
push
inc
or
mov
mov
mov
stc
test
jl
push
imul
sbb
lock
add
and
and
decl
xor
ljmp
add
adc
rorb
not
nop
adc
xor
jo
dec
push
jge
inc
dec
mov
inc
push
mov
adc
xchg
popa
pop
shlb
xchg
push
push
and
lods
add
or
jmp
mov
dec
xchg
stos
movsl
inc
sub
ss
clc
push
sub
repnz
jo
cli
or
sub
jmp
jmp
call
push
cmp
in
ja
inc
mov
and
add
mov
mov
mov
push
cmp
add
dec
adc
js
mov
push
inc
dec
adc
adc
mov
push
mov
aad
sbb
add
pushf
and
leave
mov
inc
add
int3
sbb
ret
pop
jb
jmp
push
js
adc
cmpsl
mov
adcl
adc
cmpsb
icebp
in
fwait
scas
pop
pop
jo
mov
mov
je
js
add
or
inc
xchg
imul
mov
int3
add
pushf
pushf
rolb
inc
dec
sbb
add
cmpsb
mov
push
add
mov
lahf
test
pushf
push
and
pop
xchg
aaa
and
xchg
or
mov
and
sbb
test
xorl
add
adc
and
sub
fbld
dec
cmpsl
or
adc
test
sbb
mov
inc
lock
inc
or
shl
mov
adc
or
push
xchg
sbb
adc
sbb
xchg
aaa
mov
mov
lret
mov
jge
cltd
add
push
shr
mov
ror
jns
xchg
fsubrl
mov
mov
lods
cmpsl
mov
mov
add
cmp
mov
shlb
xchg
repnz
or
icebp
inc
xor
sbb
jb
push
pop
into
into
add
stos
xor
pop
lods
and
iret
ret
or
push
int3
push
and
dec
push
jne
fidivs
inc
hlt
push
or
or
ds
push
aam
call
adc
test
aaa
jbe
testb
push
pop
fs
inc
adc
pop
adc
xchg
jecxz
iret
rep
popa
std
ss
nop
lret
and
and
fmul
push
loope
inc
xor
and
mov
sub
xchg
int3
mov
jnp
aad
adc
lods
mov
aaa
mov
lea
push
ret
sahf
les
faddl
sbb
bound
mov
aam
jmp
ret
bound
pop
adc
pop
mov
jge
arpl
add
xor
lea
loopne
add
push
insl
mov
mov
or
rolb
out
stc
hlt
sti
fisubs
push
je
sarl
jmp
or
or
sbb
pop
mov
push
outsl
xor
into
and
movsl
mov
negl
jnp
mov
int
and
dec
pop
cmp
mov
jmp
dec
add
pop
sti
mov
add
into
dec
mov
movsl
std
cmp
jmp
xorb
sbb
dec
add
jne
lock
in
ds
lcall
push
rorb
insb
push
insl
mov
call
leave
push
cwtl
xor
add
and
sub
enter
neg
pop
sbb
cmp
shrb
xchg
adc
dec
inc
mov
add
test
add
in
mov
repnz
mov
in
popa
mov
mov
in
ljmp
in
ds
popf
jmp
dec
insb
rorb
and
mov
dec
or
push
dec
mov
jg
lods
sbb
adc
mov
sarb
inc
add
bound
ja
jle
test
add
add
and
test
ja
cmp
and
sbb
mov
or
sarl
testb
cmpl
xor
jp
xor
adc
loop
inc
xor
add
rclb
mov
add
cmp
dec
sub
loop
out
movsl
es
or
cmp
sti
test
dec
mov
mov
adcb
dec
popf
lahf
adc
jmp
mov
mov
int3
and
loop
test
mov
inc
add
add
sbb
mov
fs
in
xchg
add
scas
xchg
orl
sub
cmp
sbb
rorl
popa
fdivrs
mov
push
add
cmp
movswl
dec
mov
inc
into
lcall
dec
mov
call
push
push
push
push
push
call
cmp
inc
push
pop
mov
rcll
loope
dec
sbb
adc
in
cmpsb
mov
add
jmp
mov
loop
movsb
fisttpll
inc
pop
sarl
shll
jmp
add
lods
push
icebp
clc
add
mov
or
inc
jns
add
ret
outsl
push
pop
dec
xor
dec
fistpll
add
sub
push
adc
add
das
dec
and
ljmp
xor
iret
mov
mov
cmp
push
rclb
loope
inc
pushf
add
enter
or
or
jmp
movsl
cmp
movsl
mov
popa
adc
and
lock
nop
add
mov
test
jns
popf
mov
fldl
addb
lods
xor
popa
repnz
mov
mov
rolb
xchg
cmpb
and
les
shr
mov
mov
push
push
movq
sarb
xchg
enter
notb
push
push
leave
cli
insl
jbe
jmp
shl
cmp
cmc
mov
sarb
lret
pop
dec
sbb
sub
clc
sub
inc
loopne
fdivrs
adc
adc
in
pop
fdecstp
cmp
out
cmp
int3
mov
sub
adc
jb
cmp
ljmp
gs
insb
dec
cmp
xchg
aas
icebp
cmp
pop
mov
lret
sub
pusha
sub
jp
insl
xchg
pop
cld
push
push
push
repnz
fcoml
daa
rcrb
add
add
nop
pop
fnsave
int
scas
inc
cmp
push
and
test
push
loope
loop
hlt
or
cmp
adc
mov
mov
stc
inc
cmp
stc
sbb
int3
std
dec
add
jno
repnz
das
jb
jo
leave
add
mov
push
add
pop
pop
cmpsl
inc
cld
mov
movsl
movsw
push
xchg
or
mov
xor
mov
mov
adc
ljmp
out
dec
mov
inc
mov
adc
movb
inc
mov
and
xor
rcrb
jg
push
cmp
sti
push
pop
rclb
dec
cmp
movsbl
int3
mov
sahf
mov
push
push
mov
scas
dec
add
jb
and
daa
push
cld
je
push
push
scas
lret
sub
xchg
push
or
sbb
mov
mov
push
popa
sbb
dec
outsl
jle
mov
sarl
inc
add
push
shlb
mov
or
insl
test
dec
or
fs
pusha
jnp
xchg
dec
cmp
jl
jnp
inc
mov
cmp
inc
mov
lahf
xor
ror
les
inc
or
or
pusha
mov
ss
aad
cmp
mov
cmp
push
push
lock
xchg
lock
test
sbb
addb
ja
jmp
mov
push
inc
push
mov
cmp
repz
jb
xor
push
add
add
jb
jb
push
pop
or
or
jnp
or
jbe
jmp
mov
jmp
push
jmp
por
jmp
mov
jmp
adc
push
adc
dec
adc
dec
mov
jmp
push
jmp
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
jmp
push
jmp
pop
jmp
and
or
and
or
jmp
and
ucomiss
add
add
cmp
mov
scas
cld
in
push
dec
repz
in
cmc
std
add
iret
repz
and
cmp
repz
inc
dec
push
iret
repz
push
pop
pop
imul
js
addb
xchg
xchg
fwait
mov
movsl
stos
scas
or
add
in
or
and
or
or
push
movups
adc
adc
sbb
add
push
sbb
push
pop
and
and
aas
xchg
call
inc
andb
push
insl
cmp
push
adc
add
mov
add
push
iret
rclb
hlt
pop
pop
add
mov
dec
mov
add
popf
mov
mov
arpl
cmp
jo
icebp
push
out
add
or
adc
sub
das
or
int
loopne
add
pop
push
movsl
push
cmp
je
popa
test
push
pop
adc
dec
dec
mov
xchg
and
das
loopne
fldcw
lahf
adc
aad
push
and
xchg
add
aam
insb
xchg
add
pop
mov
adc
sub
imull
bound
pop
push
nop
addr16
pushf
cmpsl
ret
mov
dec
or
hlt
xor
sub
lret
xor
pop
mov
xor
mov
add
add
add
push
inc
pop
jmp
pop
sub
cwtl
add
call
jns
rorb
jl
or
bound
adcb
mov
adc
sarb
sbb
popa
cmc
std
jp
mov
lahf
add
adc
cmc
subl
loop
scas
push
xor
add
sub
das
fstpl
jmp
xor
push
dec
pop
inc
jecxz
pop
test
sbb
andl
add
pop
push
jne
fists
stc
push
push
push
pop
loopne
popa
loop
inc
or
sti
out
js
ljmp
mov
out
mov
jmp
mov
jne
and
push
or
in
push
jne
jno
aas
inc
cli
insl
test
add
mov
xchg
movw
add
xchg
mov
test
ret
fcompl
cmpsl
loopne
jne
loopne
testl
dec
or
loopne
push
push
push
mov
add
out
je
dec
sahf
jnp
sub
pop
lahf
cld
push
clc
xor
nop
lock
je
xchg
clc
pop
cmp
sub
in
push
xor
imul
push
fdivrl
dec
xchg
cmp
cmp
pop
adc
outsl
ret
sub
add
mov
jmp
adc
cmp
rolb
and
outsb
pop
pop
inc
orl
mov
les
lock
mov
js
mov
mov
inc
adc
roll
xchg
xor
ds
out
pusha
sbb
push
push
sbb
add
mov
clc
xlat
cltd
or
xor
mov
xor
test
jl
out
bound
loope
mov
push
sub
mov
or
loop
sbb
adc
pop
add
inc
dec
in
test
pop
rcl
scas
jmp
ret
inc
mov
nop
dec
inc
or
ja
lock
movsb
mov
popl
rclb
lcall
add
push
cmp
adcb
push
sub
aaa
leave
or
jae
xorb
imul
loopne
enter
imul
and
test
scas
xchg
or
lret
add
xor
icebp
xorl
shlb
and
add
fimuls
je
aam
jne
push
add
mov
fsubl
lods
ret
stc
jno
push
insl
add
mov
ds
les
rcrb
loopne
push
enter
jb
xchg
mov
add
nop
addl
repnz
mov
add
enter
xor
jno
add
add
push
les
mov
je
into
push
ja
addb
xchg
cld
jmp
ds
sbb
xchg
add
nop
dec
ret
and
sbb
add
add
loopne
or
sbb
mov
comiss
and
cwtl
sbb
adc
lret
jae
les
push
enter
jns
or
testl
add
push
add
mov
dec
loope
mov
inc
inc
inc
test
mov
sbb
stos
push
rcr
rcrb
push
les
scas
out
pop
mov
xor
pop
push
push
imul
add
cwtl
mov
push
outsl
cwtl
outsb
fcoml
pop
mov
pop
bnd
adc
mov
test
xchg
dec
inc
xchg
mov
cli
or
leave
iret
lahf
test
shlb
jno
xchg
sbb
jo
cmp
and
ret
dec
or
fldl
pop
lcall
aas
jo
cmpb
push
pop
std
add
and
inc
pushf
sub
add
sub
and
add
or
lods
js
sub
dec
push
or
add
loopne
imul
sbb
xor
sbb
or
je
lods
xchg
and
sub
add
inc
outsl
xor
pop
mov
repnz
sbb
daa
or
bound
inc
arpl
rolb
dec
xchg
push
mov
push
adc
sbb
sub
pop
rolb
cmp
fwait
push
mov
popa
int3
dec
scas
or
jo
push
pop
inc
mov
faddl
adc
adc
mov
mov
jne
dec
mov
lcall
jmp
pop
icebp
and
dec
adc
fcmovnb
fwait
ss
lea
scas
mov
xchg
inc
adc
jo
ret
sub
in
fcoml
adc
bound
cmpxchg8b
cwtl
dec
push
pop
sub
enter
fucomip
sub
cli
iret
mov
aas
xlat
cmp
jne
mov
pop
inc
pushf
and
or
je
adc
inc
cmp
jl
movsb
mov
inc
inc
sbb
movb
pop
cmc
sub
js
xor
xchg
inc
notb
in
or
es
pop
adc
mov
adc
push
dec
mov
and
jp
jo
loopne
xor
lods
mov
outsl
loope
and
or
mov
jne
jnp
push
cmp
imul
scas
push
add
mov
in
jp
push
loope
push
inc
jb
pop
jae
pop
das
cmp
xchg
imul
xor
rcr
fadds
and
pop
lock
mov
and
pusha
repnz
cmc
or
mov
pop
or
dec
pop
mov
push
sbb
jbe
xchg
fwait
mov
les
dec
outsl
add
test
xor
inc
adc
add
sbb
inc
popa
xor
lock
sbb
mov
push
icebp
pop
adc
or
sbb
sahf
or
aas
xor
shlb
pop
xor
sbb
inc
ficomps
or
sub
push
xor
push
fs
sahf
push
push
cvttps2pi
in
inc
push
sub
adc
in
cmpsb
dec
adc
add
imul
stos
sarb
xchg
add
push
push
xor
push
sub
mov
xchg
push
adc
pop
xor
xor
shl
inc
add
sahf
enter
mov
int3
inc
rolb
nop
fldl
fcomps
fs
fsub
pusha
adc
xchg
push
push
pop
orb
in
lock
xchg
inc
jbe
loopne
hlt
rolb
clc
mov
pop
shrb
inc
or
dec
sub
adc
dec
mov
and
sub
cmpl
pop
fdivr
sbb
movsb
dec
in
ror
dec
or
pop
inc
push
pop
push
pop
push
add
mov
cld
insl
and
add
push
test
enter
lds
inc
push
mov
xchg
je
jl
and
mov
push
or
sahf
fldcw
sub
lea
es
lret
je
dec
cmp
or
cmpl
popf
push
and
jle
sub
xor
orb
std
daa
jae
jmp
lods
sub
and
test
sti
outsl
and
add
jl
jmp
xor
cltd
sub
ds
xchg
sbb
adc
out
es
mov
sti
and
popf
jge
cwtl
and
and
xchg
add
faddl
add
sbb
cmp
and
int3
mov
mov
sahf
andl
insb
je
ret
cmp
js
cmp
add
jl
outsb
sbb
push
fwait
cmpsb
loop
sub
imul
sub
or
push
jno
insl
call
repnz
pop
ret
push
loope
add
addb
hlt
cmp
jl
xchg
pop
ret
pop
jno
cli
mov
mov
pusha
test
adc
xor
or
mov
js
test
pop
pop
add
pop
push
adc
aam
xor
inc
cmpb
adc
or
das
inc
js
add
pop
mov
clc
les
mov
orl
je
test
adc
xchg
sti
mov
cmp
and
dec
cltd
lock
add
clc
mov
ljmp
push
mov
cmp
push
and
addb
sub
or
lret
add
cmp
aaa
out
loope
or
std
mov
xchg
aas
int
test
lock
rcl
cwtl
in
bound
data16
movsl
or
pop
pop
fucomp
cmp
add
push
push
mov
xchg
pop
jl
inc
les
inc
add
adcb
dec
push
lds
dec
cmpsl
in
jge
mov
les
cmpsb
imul
mov
xchg
push
stos
pop
mov
inc
out
push
test
xor
sbb
clc
aas
jne
push
arpl
dec
lock
push
clc
adc
mov
xor
or
and
xor
push
adc
lods
cltd
dec
popa
mov
dec
mov
adc
or
movsb
sub
dec
aaa
jns
push
shrl
rcrb
push
xor
jno
xor
js
ja
inc
xchg
mov
xor
xor
mov
loopne
xchg
nop
scas
and
cmp
or
shlb
push
jmp
sbb
add
inc
filds
fsubs
cmp
xlat
jmp
inc
xor
popa
loopne
lods
test
mov
xor
inc
inc
sub
add
xchg
aam
push
mov
cmpsl
and
dec
or
add
and
inc
push
movsl
mov
test
lret
mov
push
scas
cltd
insl
jbe
jb
adc
mov
adc
adc
sbb
jae
mov
inc
mov
pop
xchg
lret
sbb
outsl
xchg
xchg
and
pop
pop
and
xchg
inc
jecxz
mov
add
and
pushl
push
pusha
add
xor
inc
insl
xor
insl
mov
mov
add
cmp
rolb
loop
shrb
push
cwtl
inc
cmp
clc
fstps
add
aaa
lods
ds
movzbl
imul
daa
insl
pop
movsb
or
popf
xchg
add
pop
in
mov
jmp
pop
cwtl
sbb
fs
divl
pop
mov
add
sub
cmp
push
sub
loopne
test
cmc
test
fwait
jmp
jo
sets
or
adc
jnp
mov
ror
popf
inc
mov
jmp
pop
jbe
xchg
jle
out
xchg
jb
jbe
add
sub
lret
jno
add
popf
or
add
aam
mov
std
mov
imul
sub
adc
cs
push
jg
push
loopne
inc
inc
add
jnp
js
in
dec
fisttpll
and
cmp
arpl
aas
scas
push
rolb
xor
xor
push
ss
jle
hlt
movsb
jae
lock
shrb
pop
sub
cmp
lret
dec
push
sub
dec
ret
jmp
inc
ret
mov
outsb
sbb
mov
xchg
sbb
mov
cmp
xchg
data16
repnz
push
cwtl
or
cmpl
adc
or
in
mov
dec
shl
jle
mov
sub
or
pop
rclb
bound
call
cmp
jae
je
call
mov
lea
pop
movsb
push
jo
cli
xchg
rorl
add
pop
cmp
clc
movsbl
mov
inc
cmp
jbe
mov
cmp
sub
decl
test
rcll
push
sbb
and
inc
pop
fisttpl
cs
add
sbb
add
mov
aam
jns
iret
pusha
xor
push
shll
and
xor
lret
push
dec
mov
or
mov
mov
fstps
lods
xor
daa
popf
dec
sahf
xchg
clc
jmp
and
enter
and
out
sbb
sbb
and
nop
subl
and
or
add
fwait
and
push
or
xchg
dec
lock
fwait
cmp
repz
sub
push
mov
leave
cs
pop
add
push
mov
push
aas
add
inc
dec
sbbb
add
sub
out
icebp
lods
adc
push
popa
push
add
add
jg
jns
add
fstl
fldz
fcomp
fnstsw
mov
pusha
in
fucomp
pop
fsubr
pop
faddp
cmpsl
or
push
stc
fstpl
cld
mov
or
adc
adc
sub
negb
or
adc
enter
adc
ret
pop
hlt
xlat
hlt
xchg
jl
cmp
or
jns
push
lea
jge
jmp
loop
inc
sbb
stc
jne
sbb
sbb
mov
mov
push
icebp
adc
test
lret
rcll
push
add
cmp
scas
and
mov
out
ret
jg
jnp
rcr
sub
cmp
in
push
sahf
and
mov
gs
mov
aaa
and
sub
mov
bound
sbb
mov
pop
addl
add
add
enter
adc
inc
cmc
and
cld
leave
js
inc
scas
jmp
and
ficoms
in
ja
jp
jp
mov
mov
sahf
scas
mov
or
mov
clc
imul
test
jnp
jl
int3
loopne
shr
dec
push
pop
test
mov
sti
add
pop
inc
clc
fsqrt
clc
call
xor
lock
jl
jle
push
sbb
adc
pusha
ret
cmp
or
push
push
test
mov
and
pop
or
jmp
xor
jecxz
rol
data16
sbb
aam
dec
xor
sbb
xor
push
aam
je
xchg
rolb
dec
jl
xchg
rcr
or
xchg
out
dec
testl
push
pop
add
dec
or
fisubl
pop
adc
movsb
iret
mov
cltd
and
or
or
rolb
arpl
ret
shrb
pop
je
lock
lea
sti
in
es
push
es
daa
push
imul
add
add
jl
add
fdivl
sbb
jo
add
aaa
add
sbb
push
jmp
imul
push
jns
test
sbb
daa
stos
cld
add
push
and
scas
inc
daa
dec
pop
jb
adc
or
add
jnp
pop
adc
add
adc
push
test
imulb
push
sub
fmuls
shlb
pop
das
xchg
stc
push
xor
sbb
jmp
xor
sarb
rorl
in
jo
or
or
xor
jne
insb
sbb
lods
arpl
inc
jmp
sub
dec
mov
adcb
jae
inc
add
adc
xlat
cld
xchg
and
adc
or
push
or
test
push
je
dec
mov
add
test
sbb
and
movsl
imul
or
xor
pop
xor
inc
pop
push
mov
je
pcmpgtw
push
sub
mov
pop
dec
jmp
out
dec
dec
or
xor
and
cltd
test
loopne
rcrl
aas
mov
jno
mov
push
loope
enter
sbb
add
adc
test
add
aam
adc
add
fbld
xor
push
jmp
mov
xchg
adc
mov
mov
dec
fcom
add
mov
pop
pop
xchg
jno
fidivrs
fstpl
inc
lret
add
fdivs
pop
pop
push
shlb
mov
dec
or
fmull
loopne
lds
imul
push
mov
and
je
or
adc
dec
jb
jb
xor
jo
pop
jg
and
push
outsb
popa
pop
jbe
sub
push
push
xor
jb
jp
push
mov
push
mov
add
lds
aam
icebp
pop
push
push
xchg
fucomp
push
push
push
dec
xchg
or
outsb
sbb
pop
mov
bound
stos
adc
inc
movsb
or
and
mov
outsb
enter
imul
jg
jecxz
stc
inc
add
mov
lods
add
mov
or
lock
add
jle
loop
pop
push
loop
rcll
leave
mov
or
shlb
dec
outsl
mov
cmpsb
sbb
mov
xor
add
pop
push
push
push
mov
js
popf
and
setns
mov
sbb
mov
jbe
and
cmc
mov
pop
adc
in
ljmp
mov
cmp
test
xchg
sbb
call
movsl
cmp
push
mov
mov
enter
dec
jo
out
jo
test
aad
int
xchg
test
in
xchg
jno
in
or
push
fs
sub
insb
loope
cs
test
daa
push
push
mov
ret
shufps
ret
sbb
repnz
lcall
and
pusha
and
xchg
push
mov
and
insl
fmuls
clc
data16
inc
mov
xchg
add
int3
pop
and
out
pop
xchg
push
lock
or
or
pop
sbb
cltd
jo
xchg
or
or
ret
inc
iret
test
mov
add
jns
push
xor
add
loope
cmp
xchg
cmp
add
subl
pop
jo
jecxz
ficoms
dec
or
dec
les
repz
enter
push
inc
loope
add
repz
aam
add
cmp
xorb
call
push
cmp
xor
push
add
cwtl
pop
xorl
push
adc
jbe
add
push
sbb
add
xor
in
mov
push
mov
pop
mov
cmp
dec
mov
shlb
cmp
adc
jbe
cmpsb
or
mov
jge
push
shl
fiaddl
sub
and
add
cmpsb
loope
sti
or
into
push
stc
jo
js
mov
rorb
hlt
sub
xchg
pop
test
xlat
scas
pop
sti
or
add
inc
sub
movsb
sarl
inc
pop
push
adc
ffree
push
scas
jmp
sub
mov
out
loop
mov
push
push
ret
or
push
fisttps
and
xor
clc
mov
cmp
les
mov
add
or
push
rcrb
pop
filds
shlb
or
dec
iret
sbb
mov
push
outsb
adc
test
jno
adc
push
or
jnp
in
mov
hlt
push
lret
ficoml
scas
dec
lods
xchg
pusha
mov
adc
jp
sub
cmpsb
xchg
ja
or
sub
inc
jb
mov
xchg
pop
lret
sbb
in
dec
nop
scas
and
mov
and
mov
mov
add
xor
or
and
je
mov
lahf
add
adc
push
clc
cmp
dec
adc
cmc
and
gs
loop
add
add
popa
or
cmpsb
cmp
jb
xlat
mov
add
mov
pop
sub
lret
incl
in
jae
nop
adcb
inc
sbb
shlb
addr16
mov
pop
in
push
incl
cmp
adc
ret
je
adc
push
or
sahf
mov
stc
sbb
xor
sbb
add
paddd
imul
mov
movlhps
push
or
lods
insb
mov
cld
cwtl
and
pushf
push
das
add
add
dec
fisubl
xchg
mov
sub
fsub
pop
imul
call
in
rorl
scas
mov
aad
jmp
pop
lea
add
dec
and
cmpsl
dec
pop
and
js
das
xchg
ds
popf
fstpt
mov
inc
dec
or
dec
sbbb
add
add
js
cmp
adc
add
lret
adc
sub
mov
imul
ret
sub
popa
loopne
cmp
push
call
and
sub
aas
or
cmp
pusha
xchg
push
adc
push
xchg
es
sub
inc
sbb
imul
mov
xchg
mov
cmpsl
push
lret
add
cmpsl
cs
mov
fistpl
xrelease
cmpsl
push
in
sub
adc
fidivs
je
xor
and
pop
xchg
pusha
sbb
and
pop
jo
push
add
adc
mov
jns
and
sub
xor
add
or
inc
jl
je
xor
fmull
sub
icebp
movsb
and
enter
and
movsb
or
loopne
dec
ret
inc
xchg
cwtl
sbb
add
addb
outsl
or
xor
xor
inc
xor
jmp
test
inc
imul
faddp
mov
jle
sub
jns
mov
or
int
jl
adc
pop
aad
xor
mov
enter
add
pop
and
in
in
jno
adc
push
mov
sar
loope
cmpsl
add
jecxz
je
pop
scas
jns
push
sub
pop
adc
mov
mov
lods
shrl
scas
rcr
xchg
aas
or
data16
enter
dec
enter
adc
xchg
jo
jle
jb
sbb
push
outsb
cmp
sub
pusha
cmpsb
add
mov
xor
insl
inc
hlt
xchg
xchg
pop
imul
sbb
sti
sub
xor
lcall
push
adcb
sahf
xchg
or
add
cld
cmpsb
jg
push
rcrl
out
xchg
cmp
test
push
rolb
mov
rolb
sbb
mov
in
fs
dec
dec
push
push
cli
or
dec
push
sbb
inc
xchg
loopne
mov
inc
loopne
push
in
push
nop
and
jge
rsqrtps
mov
dec
pusha
add
push
loopnew
orb
inc
jg
mov
add
or
or
mov
cmp
inc
aas
jmp
popf
inc
in
cmp
mov
and
sub
xchg
fdivrs
sub
mov
fs
test
addb
and
dec
xor
hlt
sub
je
out
add
das
dec
lods
lahf
pop
mov
mov
call
movzbl
test
pop
push
popa
loopne
and
sbb
or
sbb
incb
and
push
jl
mov
lods
pop
test
and
test
sbb
mov
mov
mov
cmp
push
dec
sub
add
mov
push
mov
popf
add
or
add
daa
jne
xorb
fcomps
lret
sub
adc
adc
test
adc
daa
add
add
ret
pop
imul
xor
xor
test
push
movsb
test
push
or
adc
cmp
in
shll
and
dec
xlat
hlt
movsb
js
or
iret
cmpsb
and
pop
xor
gs
call
xorl
incb
test
mov
loopne
push
je
or
je
call
mov
mov
sbb
sbb
mov
xorb
ss
jne
mov
and
adc
pop
popa
loopne
int3
add
andl
or
mov
cwtl
ficompl
add
insl
add
ljmp
mov
pop
mov
jo
xor
jo
fwait
sti
mov
add
inc
push
lea
lods
xchg
stc
pop
js
loop
popl
jp
scas
dec
mov
or
call
mov
mov
sahf
push
mov
inc
pushf
or
push
push
nop
jmp
add
mov
test
mov
sbbl
cmp
jmp
inc
mov
mov
xchg
mov
lea
stos
mov
adc
mov
cmp
inc
adc
mov
rcll
xor
sbb
fs
fidivs
or
mov
xchg
leave
loopne
lea
incl
fistpll
lea
cmp
mov
cld
pop
aaa
add
or
mov
jmp
add
popa
hlt
xchg
fwait
push
pop
nop
pop
jmp
enter
mov
insl
aam
addr16
jle
push
cwtl
std
pop
sub
in
cmp
mov
xchg
jno
add
lret
jp
sub
xor
inc
jbe
int
nop
mov
stos
cli
adc
push
push
cmp
add
insl
or
xchg
or
adc
add
enter
xchg
cwtl
xchg
clc
sti
pop
or
loope
dec
mov
or
sub
std
or
movsl
ja
clc
or
rolb
std
push
sbb
cmp
xchg
loop
xor
jne
adc
or
scas
mov
mov
and
add
or
push
add
psubsb
loop
push
lea
pop
jnp
mov
xorb
cmp
xor
movsl
mov
adc
push
mov
lea
cmp
cmpb
mov
popl
pcmpeqd
fimuls
pand
jns
jno
pop
inc
pop
cmp
pusha
ja
jb
mov
loope
xor
pop
sbb
imul
pop
jo
or
adc
pusha
pop
lcall
xlat
inc
add
adc
insb
adc
pop
or
inc
xor
push
sbb
outsb
cmpsl
mov
ret
push
nop
pop
and
test
test
sbb
xchg
out
icebp
jbe
test
jp
in
mov
add
push
test
and
test
in
pop
lret
dec
jmp
cmpsb
xor
enter
inc
push
or
jle
insb
test
rcrb
in
mov
fcmovb
icebp
pusha
inc
mov
andb
test
push
or
sbb
shll
mov
inc
sub
cld
sub
inc
lret
outsl
pusha
les
jno
xchg
sahf
out
and
test
gs
ficoml
mov
in
mov
test
hlt
push
mov
mov
mov
leave
or
pop
sbb
in
add
inc
mov
shl
cwtl
cmp
lret
mov
das
add
jg
lods
dec
or
pop
insl
stos
mov
cmpsb
popa
les
das
adc
cmp
into
enter
aas
ret
bound
add
mov
loop
loop
mov
mov
lcall
lret
xor
loopne
call
insb
test
add
mov
jg
adc
add
sub
adcb
xor
pusha
cmpsl
mov
push
rclb
mov
xor
and
ret
rcll
cmp
push
pop
mov
les
popf
lods
push
pop
xor
push
xorb
xchg
mov
add
fbld
pop
mov
js
lret
mov
push
xchg
divl
push
pop
dec
adc
lahf
movsb
pop
jb
push
iret
in
jb
sub
push
jmp
or
add
mov
adc
mov
sbb
xchg
lods
cmp
je
out
lcall
pcmpeqd
pop
push
and
or
pop
iret
ljmp
lock
sbb
xor
clc
sbb
pop
mov
or
shlb
adc
mov
push
sbb
mov
xchg
xor
js
and
add
jmp
sbbb
iret
mov
cmpb
pusha
add
and
xchg
lcall
sbb
pop
dec
add
andl
mov
sub
enter
iret
data16
push
scas
test
cmp
jg
mov
sahf
dec
cmp
or
push
add
ja
mov
cmp
scas
jbe
cli
pop
ja
ja
cmpsl
mov
pop
and
aaa
mov
jge
test
cmp
sbb
jb
sbb
adc
push
xchg
sbb
xor
xchg
out
push
pushf
xor
sti
imul
das
push
shll
inc
inc
jmp
inc
fs
test
xchg
xchg
sub
pop
inc
cmp
and
sbb
mov
add
inc
int3
daa
push
jmp
test
pop
add
popa
xlat
repnz
or
sub
fcmovb
ja
loope
fisubl
stos
arpl
inc
mov
and
popa
fnstcw
cli
jno
dec
adc
jge
pop
in
rol
mov
jo
aam
daa
in
xorl
pop
add
push
cs
pop
jno
and
and
xchg
cmpsl
aam
xchg
mov
ljmp
add
push
mov
push
movsl
shr
mov
xchg
xchg
dec
xlat
pop
insl
fcoms
cmc
bound
mov
adc
xor
adc
mov
xor
call
lods
pusha
dec
and
adc
fdiv
pusha
out
cmp
std
mov
shrb
faddl
and
stc
shrb
insl
mov
sbb
enter
add
stos
jnp
adc
aam
ret
and
insb
and
push
scas
xor
sbb
js
je
mov
mov
cs
imul
push
push
dec
clc
or
sbb
ficomps
jl
outsl
fcomps
adc
jle
sub
fisubrs
nop
pop
mov
mov
shlb
mov
fs
shlb
rclb
xor
cmp
pop
mov
sarl
xor
iret
push
fdivrs
mov
push
mov
and
add
and
mov
loop
addl
jge
and
out
dec
adc
add
mov
push
jp
aaa
fisttpll
cs
sub
in
xor
clc
lahf
dec
pop
shlb
loop
jbe
sub
or
inc
ljmp
dec
xor
test
xchg
lea
cmp
xchg
add
test
lahf
stos
scas
xchg
les
cmpsb
inc
pusha
or
or
int3
insb
icebp
push
push
loope
pop
mov
xlat
xor
dec
clc
sarl
xlat
test
mov
addl
sub
mov
dec
mov
fidivrl
sub
in
push
sub
jle
fmuls
adc
insb
inc
jle
aaa
add
sbb
lea
add
pushf
push
cmpb
cmp
rorb
movsb
aaa
inc
test
fldl
pop
cmp
jmp
das
xchg
dec
sarb
xchg
lock
rorb
cmp
lods
jle
xor
shr
xor
fidivrs
fistps
push
not
loop
test
movsl
sbb
xlat
pop
lcall
cmp
test
mov
shr
cmp
fmull
pushl
add
jmp
add
mov
or
and
and
addb
or
inc
push
ja
bound
mov
add
inc
add
xchg
xor
mov
fsubr
xor
or
fadd
xchg
pop
sbb
andl
inc
push
call
pop
lcall
pop
adc
cltd
sbb
and
jge
clc
adc
push
jl
pushf
jo
hlt
push
push
mov
stos
or
add
lea
jmp
sbb
mov
add
jb
push
hlt
dec
cwtl
mov
xor
enter
lahf
aaa
xor
and
or
xchg
test
inc
bnd
cmp
push
push
adc
mov
fs
add
sub
repz
and
and
inc
inc
ret
push
inc
inc
and
jp
push
lret
pop
pop
jecxz
shrl
or
out
leave
ja
jnp
inc
add
mov
daa
mov
imul
sub
and
shlb
adc
xchg
jmp
xor
pop
xchg
rorl
sbb
xor
cmp
and
xor
sub
into
add
mov
shlb
xor
mov
rorb
lds
sub
rcrb
rol
lods
fimuls
es
outsl
pop
mov
stos
inc
add
xor
repz
mov
test
sti
sub
sbb
cmp
mov
push
jno
cmp
jmp
and
push
stos
cmp
sub
jns
mov
inc
sahf
adc
mov
xchg
sti
lret
pop
push
cmp
inc
jae
in
outsb
cltd
fdivrs
xor
mov
xor
push
aas
lods
inc
add
sbb
mov
add
cmp
inc
cmp
push
adc
push
orl
orl
and
jnp
or
push
rclb
xlat
lea
lea
push
inc
inc
and
sub
daa
or
shr
ficoms
pop
dec
mov
outsl
add
cmp
out
out
and
xor
int3
jmp
lea
popa
sahf
or
adc
je
dec
cwtl
push
fadd
xorl
das
inc
mov
enter
push
sub
sbbb
add
rorl
add
iret
push
and
test
and
icebp
aaa
stos
sub
ffreep
mov
cmp
popf
push
lds
dec
sbb
jbe
subl
sbb
xchg
add
dec
les
sbb
lods
dec
andb
rolb
stc
mov
jo
js
mov
xchg
adc
add
mov
in
pop
and
nop
nop
add
inc
int3
xchg
or
and
test
aam
cltd
push
roll
and
int
ljmp
jl
mov
push
pop
or
daa
adc
and
inc
mov
daa
add
adc
pop
or
mov
push
test
cmp
push
mov
dec
test
pop
mov
adc
fildl
jmp
fstpl
repz
xor
mov
scas
inc
andb
or
mov
jnp
or
test
mov
mov
or
inc
pop
rcrl
sub
insb
aam
xchg
xor
sub
jns
add
sub
and
fxch
fisubrl
movsb
test
lods
gs
movsb
stos
adc
fs
add
jmp
and
mov
add
mov
ret
mov
aaa
aam
or
push
pop
les
mov
enter
xor
int3
in
rclb
imul
movsb
cmp
das
cmp
jne
icebp
sub
sub
or
popa
out
and
mov
push
fidivl
imul
movsl
xor
adc
pusha
lods
insb
loope
call
pop
mov
repz
nop
test
ret
inc
dec
leave
repz
dec
push
xor
lods
pusha
xor
and
mov
insl
add
xor
in
cmp
repnz
sbb
mov
or
enter
xchg
sbb
loopne
ja
sbb
add
fs
mov
pushf
add
lods
add
pop
in
mov
sbb
push
inc
add
or
jecxz
or
ds
addb
push
push
adc
adcl
mov
jb
mov
or
subl
pop
mov
cmp
mov
and
sahf
push
dec
dec
cli
adc
es
notb
divb
jle
add
shrb
add
jmp
fldcw
clc
mov
arpl
sbb
inc
push
cmp
sub
in
test
jge
xor
inc
mov
test
fsubrl
mov
aaa
push
sbbb
xlat
and
fmull
cmp
aam
gs
and
mov
icebp
lock
scas
stc
out
insl
popa
pop
xchg
das
in
push
push
cmc
jo
frstor
xchg
mov
dec
cmp
outsb
or
add
nop
data16
popf
in
mov
xchg
adc
xor
lret
add
aas
cltd
push
test
lods
mov
cs
adc
sub
cmp
je
jbe
inc
mov
push
mov
dec
je
or
and
mov
xchg
pushf
jecxz
jne
cld
sub
addl
jmp
shrb
nop
pop
mov
jmp
nop
push
jmp
cmp
insb
pop
jecxz
add
addr16
and
movsb
rcrl
stc
mov
xchg
cmpsl
xchg
les
push
and
inc
xchg
outsb
fcompl
push
jmp
xlat
cmp
pop
fsubrl
out
daa
call
adc
inc
arpl
or
ss
or
mov
add
test
mov
orl
cmp
push
sbb
dec
push
or
loopne
fwait
rcl
push
add
dec
idivl
pusha
pusha
fcoml
iret
mov
mov
adc
push
insl
and
jns
adc
adc
ror
mov
mov
pushf
mov
out
sbb
in
sbb
insb
test
add
add
sub
adc
or
push
ss
dec
xor
sub
aaa
jo
les
jne
lock
mov
out
sub
push
loope
ljmp
dec
ljmp
push
ja
jbe
out
mov
xor
jle
icebp
adc
sbb
xchg
test
add
and
movsl
or
push
mov
or
inc
add
lea
bound
sub
lea
push
pop
dec
xlat
hlt
dec
addl
out
repz
mov
ja
lcall
std
in
pop
inc
inc
fsubl
adc
std
test
sub
shlb
mov
jnp
es
inc
mov
clc
mov
decl
inc
adc
dec
cmp
fdivs
lcall
enter
jl
pop
dec
push
cmp
mov
pop
dec
xchg
clc
and
xorl
jle
rol
daa
add
add
dec
push
cltd
inc
mov
xchg
ficoms
inc
enter
dec
mov
add
cmpsl
sub
fadds
pusha
sti
mov
pop
mov
je
es
cmpsl
jge
popl
push
data16
pop
jb
or
mov
cmp
push
shl
xchg
sub
push
and
imul
roll
in
or
add
rolb
test
lea
pop
mov
pop
leave
fcmovbe
test
sbb
push
call
inc
push
adc
cld
sub
test
orb
or
cwtl
dec
and
cwtl
sbb
sub
test
or
or
add
sub
push
and
daa
lock
fxch
xor
movsl
mov
test
lods
sbb
test
jecxz
mov
lods
dec
sub
pop
xlat
mov
jg
divl
jns
and
add
push
fisubrl
pop
cmp
add
add
addr16
fstl
mov
push
lcall
push
inc
add
pop
or
lea
ret
mov
xor
es
push
icebp
dec
enter
int
nop
js
dec
fsubrl
lret
and
cmp
add
lret
fidivrs
pop
dec
fiadds
pop
xchg
pop
push
cwtl
mov
std
outsl
push
push
outsb
dec
js
cli
daa
adc
push
push
in
push
inc
fcom
cmp
add
adc
fs
add
in
push
jl
mov
push
pushl
stos
fimull
add
mov
shll
fdivl
scas
lds
sbb
in
jl
add
sti
push
push
in
xorl
call
xchg
mov
and
test
xchg
push
sti
je
push
inc
popl
es
shl
push
sbb
adc
and
cltd
jmp
sbb
pshufw
loopne
jmp
inc
aam
cmp
stos
adc
push
test
sbb
dec
inc
add
aam
mov
flds
fsubp
pop
repnz
loopne
inc
arpl
insl
enter
push
xor
add
push
in
add
pop
pop
gs
stc
es
enter
push
or
dec
xor
testl
pop
rcrb
imul
les
push
or
push
pop
xchg
adc
add
push
mov
add
xchg
inc
cmp
ret
adcb
repz
in
add
cmpsl
adc
xor
and
divl
int3
call
dec
es
inc
push
adc
push
rclb
pop
shl
jmp
sbbb
xchg
sbb
mov
dec
hlt
les
ffree
cwtl
push
test
sbb
test
add
adc
fsts
push
pusha
lcall
adc
out
push
and
iret
push
adc
cmp
cmp
push
cltd
adc
int3
mov
adc
pop
or
pusha
add
loopne
and
ljmp
dec
pop
shrl
loopne
repz
lock
lods
xor
push
cld
add
loop
push
sbb
imul
inc
int
xchg
mov
mov
xor
push
mov
stos
addb
lret
ds
or
push
rolb
dec
cmc
aad
ss
ret
imul
xchg
mov
dec
imul
add
and
les
xor
enter
pusha
shrb
orl
pop
dec
dec
add
push
dec
xor
mov
or
out
ret
jl
or
adc
testb
mov
js
push
dec
shrb
sub
test
mov
or
fidivs
lea
xchg
push
in
xor
das
test
mov
rol
mov
ror
ljmp
xor
shr
xor
es
mov
rol
xor
shr
xor
add
add
dec
add
mov
lcall
iret
or
jae
or
and
not
and
xor
add
add
outsb
adc
popa
sub
sub
add
in
push
push
bound
repnz
mov
fisubrs
dec
iret
add
xor
and
and
xchg
push
aam
or
cmp
mov
rorb
repnz
test
mov
mov
and
not
ret
rcl
add
push
jo
testl
hlt
add
cmp
cmpsb
xor
fsubr
sar
or
push
aam
call
subl
sub
ljmp
rol
rol
out
add
push
lret
xor
fcomp
rcrl
loopne
dec
xor
jb
xor
in
call
movsb
shl
in
push
cmp
sub
bound
xor
sbb
push
bound
pop
push
and
mov
pop
aaa
mov
subl
xor
cltd
xor
dec
shr
xor
cwtl
loopne
xchg
lret
in
in
and
nop
loopne
cmp
dec
lcall
in
mov
ret
inc
flds
or
int3
cmpb
cltd
add
in
push
xor
and
and
out
out
loopne,pt
or
xor
sbbl
push
test
add
or
cmp
jo
ret
push
mov
add
adc
daa
xor
xor
adc
inc
adc
push
cmpl
js
jne
mov
filds
cltd
push
inc
subl
jbe
call
pop
dec
ret
lret
push
clc
jp
push
xor
pop
cs
add
gs
fdivrs
inc
dec
rorl
inc
call
and
pop
lret
test
aam
mov
xchg
cmpsl
adc
and
stos
adcl
nop
pushf
aam
es
lcall
nop
cmpsb
imul
inc
pop
inc
shr
rolb
or
cli
xor
stos
sub
sub
jge
shlb
dec
xorb
dec
shll
dec
loopne
call
pusha
lahf
jo
add
and
xor
or
int
leave
dec
push
dec
sbb
xor
xor
push
push
xor
rolb
cmp
add
add
push
pop
cmp
or
nop
sub
sahf
push
add
or
push
or
pop
and
rorb
fs
pusha
mov
pusha
mov
movsl
mov
sbb
pop
rorb
adc
and
roll
loop
in
addl
jl
dec
dec
inc
inc
sub
icebp
stc
stc
stc
or
pop
dec
mov
xchg
inc
dec
jb
mov
or
fdivl
loopne
loopne
or
lret
fwait
and
add
and
in
push
adc
cmp
xchg
push
dec
adc
cmp
out
aas
pop
add
sub
mov
jl
ret
add
inc
inc
pop
pinsrw
les
pop
fildl
sub
lea
sbb
adc
enter
add
mov
mov
je
rolb
or
or
mov
adc
jbe
mov
or
cmp
inc
jae
mov
add
sub
xor
push
loopne
lea
jmp
mov
jl
sub
out
mov
add
jecxz
mov
or
mov
dec
jne
pop
inc
bound
push
loope
lock
iret
dec
add
xchg
sub
mov
sub
jbe
or
movsb
push
mov
fs
adc
push
or
jae
shl
or
xchg
sub
sub
stos
or
stos
fisttps
sbb
insl
mov
ret
mov
outsl
pop
loopne
roll
mov
notl
ss
mov
sbb
out
adc
mov
testl
or
enter
sbb
dec
movsl
push
inc
add
add
out
ja
stc
scas
pop
mov
inc
or
sbb
out
or
movsl
pop
leave
adc
and
sbb
xor
sub
pop
xchg
ret
pop
dec
shrb
adc
push
ja
ret
les
mov
and
loopne
xchg
mov
push
dec
or
mov
adc
xchg
add
rep
or
sub
xor
xor
shrl
sub
jmp
mov
adcb
clc
andl
push
dec
or
cld
lret
mov
jl
addr16
pusha
mov
dec
add
xor
dec
inc
mov
cmp
jo
mov
sub
inc
inc
test
sbb
shrl
xor
lret
cmpsb
add
ss
lock
movsb
or
pusha
ljmp
add
and
sub
pusha
xor
sub
and
push
mov
cmc
jmp
pop
ret
mov
cli
or
call
and
sub
mov
dec
call
scas
push
or
lea
je
jo
mov
ret
jmp
pusha
push
mov
mov
pop
fisubs
sbb
lods
push
add
pop
cmp
inc
cmp
sub
cmp
mov
mov
push
sub
pop
add
std
add
outsl
push
push
cmp
scas
xchg
loopne
mov
and
lea
jae,pt
inc
es
or
add
loop
xor
cmp
adc
insl
loop
arpl
insb
pusha
xlat
lret
push
pop
fwait
ret
or
and
cs
xchg
cld
cmpl
or
icebp
sbb
sub
inc
sub
mov
imul
sbb
push
ret
mov
or
dec
fndisi(8087
ficoml
gs
xor
xchg
sub
mov
mov
add
jmp
cmp
add
sub
scas
cmp
mov
dec
repz
inc
xorb
pop
add
popa
sbb
add
fidivs
dec
shlb
jno
inc
and
jle
cmp
adc
loopne
mov
mov
sbb
loope
hlt
aas
es
test
int3
jle
pop
add
sub
outsl
cmpsl
lock
pop
cmp
push
or
pop
rcll
or
or
testb
movsb
aam
add
out
mov
gs
insb
loopne
pop
inc
xchg
add
pop
inc
mov
xchg
nop
rcr
inc
cmp
mov
mov
xorl
sub
movsl
pushl
rolb
xlat
pop
add
jnp
pop
add
lret
lret
movsl
push
mov
fdivrl
inc
or
dec
js
xor
or
mov
jns
cmp
jne
fdivs
push
jae
dec
int3
cltd
lods
mov
ds
add
mov
push
outsl
cltd
js
adc
jbe
ret
aaa
adc
sub
push
and
addr16
jno
pop
cmp
xchg
ljmp
and
pop
sbbl
xor
push
sbb
mov
cmp
in
and
mov
jo
popa
or
mov
push
mov
out
jge
xchg
jbe
add
mov
hlt
out
dec
lret
enter
movsb
fs
addr16
push
movsb
push
and
add
xchg
filds
jbe
mov
push
and
es
mov
adc
or
or
xchg
mov
or
dec
add
in
cmp
adc
or
push
fmuls
xor
sub
or
fistl
push
xadd
sbb
jnp
or
add
add
add
dec
inc
lcall
and
push
inc
add
arpl
loopne
loopne
add
lock
punpckhdq
push
mov
roll
out
jbe
push
push
mov
sbb
mov
jae
push
xor
rcl
pop
cmp
jmp
dec
jbe
je
adc
enter
mov
stos
mov
insl
movsl
iret
push
add
outsb
lret
sub
nop
mov
enter
lods
jbe
cmp
mov
fidivl
xchg
dec
mov
mov
push
lods
fistpl
bound
popa
cmp
inc
push
insb
aas
mov
cmpl
idivb
testl
ret
clc
inc
xlat
sahf
in
push
jne
dec
dec
imul
mov
mov
sbb
fs
ret
ret
and
mov
push
adcb
inc
mov
nop
or
or
sti
mov
adc
xor
or
outsb
popf
adc
or
sbb
dec
mov
and
addl
mov
fiaddl
pop
insl
jb
ss
out
sub
cmp
mov
jbe
sub
add
sbb
jmp
xlat
mov
movsl
movsb
push
pop
cli
mov
fstl
ljmp
mov
sub
push
adc
mov
dec
mov
mov
fisubrs
push
cmc
add
adc
adc
xchg
dec
add
ljmp
scas
xchg
ljmp
cmp
stos
sub
push
cmpsb
mov
insl
or
pusha
xor
sbb
dec
mov
mov
mov
cmpsb
hlt
sub
clc
push
xor
jns
and
sub
jbe
pop
insl
add
rolb
adc
repz
sbb
pop
adc
mov
mov
insl
or
inc
jle
add
xchg
dec
mov
shr
in
roll
rclb
dec
xor
dec
loopne
loope
pop
cmp
xchg
and
add
pop
je
cmp
adc
sub
sbb
or
sub
mov
push
dec
sub
adc
es
dec
lds
add
jl
scas
bound
dec
pop
add
inc
or
jl
inc
pop
pop
adcl
mov
pop
aas
imul
cmp
ja
incl
fdivs
ss
cmp
jb
mov
add
adcb
inc
mov
rclb
inc
add
push
inc
rcrb
and
fnstenv
fcompl
push
or
jmp
mov
pop
push
and
stc
add
pop
mov
ret
dec
out
adc
cmp
nop
lods
sub
ret
dec
cs
lahf
mov
sbb
mov
jmp
push
scas
mov
jo
mov
dec
xor
insl
icebp
aas
cmp
int3
jmp
lods
ret
mov
enter
fiaddl
mov
or
add
enter
add
jo
mov
add
loopne
or
push
shrb
stc
loope
lahf
fs
mov
mov
cs
or
lret
cli
aas
jmp
fisttpll
mov
sub
mov
movsl
adc
es
mov
mov
mov
adc
lods
add
mov
inc
dec
mov
pop
sub
int
xchg
lds
imul
mov
mov
rorl
repnz
adc
jae
mov
xor
pop
pop
dec
ret
int
iret
add
add
imul
sbb
mov
cmp
je
loope
shll
or
pop
push
movsb
mov
idiv
push
scas
add
divb
push
inc
cmp
jl
pop
std
push
jne
fsubrs
or
jle
adc
aaa
ret
push
xor
lods
sbb
ja
mov
adc
push
fstps
add
xor
sbb
sbb
dec
clc
or
push
xor
xor
aas
add
sub
xchg
or
pop
fcoms
push
jl
arpl
adc
testl
cmpsl
ja
popa
mov
or
aaa
mov
push
jne
data16
mov
and
or
fsubs
cmp
xchg
sbb
fcomp
stos
inc
cmp
adc
movsb
push
ja
rol
and
add
das
in
cmc
movsb
mov
in
inc
xor
inc
cli
mov
in
pop
or
sbb
add
mov
jo
notb
inc
cmp
add
add
mov
lock
mov
shr
shl
add
cld
mov
loop
xor
mov
mov
fadds
movsw
movsb
mov
adc
aaa
aam
test
jl
lds
adc
fidivrs
sub
stos
mov
lea
add
xchg
pop
add
sub
imul
addr16
push
fs
add
ror
fs
test
xor
sub
push
cmp
adc
test
dec
sbb
sar
jl
cmpl
data16
shlb
pop
or
enter
xor
aas
scas
lods
inc
loop
and
dec
or
mov
icebp
fisttpll
push
mov
push
shll
inc
call
icebp
dec
cmpsl
xchg
mov
mov
mov
mov
loope
shrl
push
mov
mov
and
sub
mov
icebp
cmp
or
inc
js
mov
stos
add
adc
or
aas
mov
push
or
mov
add
inc
inc
jmp
push
ds
test
xor
cmc
std
mov
adc
out
jae
fs
xchg
lret
and
add
inc
adc
mov
xchg
push
leave
add
in
mov
mov
lcall
inc
andb
jo
adc
lods
mov
mov
andb
xchg
shlb
mov
sub
daa
or
roll
push
sub
mov
aad
rcrb
xchg
push
mov
pop
inc
aaa
inc
adc
test
pop
dec
sub
add
jmp
int
ss
insl
push
and
enter
pop
push
test
or
jg
loop
jmp
push
js
fisttpll
lods
and
pop
and
out
int
add
mov
loopne
mov
aas
sub
add
adc
out
push
push
xchg
popa
sbb
outsb
push
call
push
dec
push
push
mov
mov
push
ret
adc
lods
jno
jecxz
in
jae
mov
sbb
mov
outsl
push
inc
jmp
sbb
xor
mov
fptan
insl
xchg
pusha
leave
mov
sub
inc
add
mov
inc
cmp
jo
dec
fiadds
clc
xchg
xor
and
lahf
testb
pushw
sbb
mov
popa
adc
mull
int
add
lret
ret
push
orb
cmp
sbb
pop
jmp
imul
rorb
push
or
or
push
pop
sarl
inc
in
mov
fidivs
sub
mov
stc
and
pop
test
push
fsubrl
cmpsb
int3
pusha
shlb
and
adc
jo
into
dec
mov
cmpb
add
push
adc
or
nop
out
adc
add
sub
sub
xlat
jp
cmp
dec
mov
jmp
add
repnz
mov
pushf
out
loope
or
rcrl
inc
push
and
push
pop
shrb
and
test
aam
cltd
icebp
mov
gs
or
ret
push
jbe
adc
dec
inc
mov
push
adc
dec
out
mov
loopne
clc
into
ret
fmuls
dec
xor
xlat
pop
add
bt
xchg
mov
or
sbb
mov
mov
mov
inc
xor
test
xor
mov
rcll
adc
je
inc
push
xchg
pop
scas
loope
xor
jg
push
mov
jp
packsswb
addb
out
sbb
cmpl
cmp
mov
pop
push
sub
out
jp
aaa
cmp
push
pop
lods
inc
push
mov
push
push
sbb
lods
xchg
xor
xchg
cmp
fsts
add
fcompl
cltd
call
add
in
mov
test
push
xor
add
adc
lds
cmp
sbb
cmpsl
dec
xchg
sbb
mov
or
inc
lcall
and
or
testl
dec
aas
jo
pusha
cld
add
out
cmp
jle
push
icebp
rcrl
and
or
mov
mov
cmp
in
xorb
inc
bound
in
mov
jne
push
inc
sub
in
cmp
jo
push
in
lret
push
or
pop
jo
jo
mov
jmp
or
add
popf
imul
ret
arpl
incl
insb
mov
or
clc
push
mov
hlt
push
insb
inc
or
or
or
push
jae
inc
adc
adc
mov
aas
or
fs
sub
inc
jo
jne
addl
ficoml
into
or
xorl
dec
lods
or
movsb
push
subb
inc
adc
add
ss
push
call
xor
movl
jle
inc
or
rorb
shlb
pop
lcall
cmp
je
push
stos
sub
adc
testb
je
cmp
mov
push
add
push
add
sub
sbb
cmp
mov
jmp
sub
jnp
movsb
push
cmp
jne
push
adc
add
and
out
ds
mov
sub
int
add
or
pusha
mov
or
xchg
add
imul
sbb
xor
cmp
inc
jg
sub
loopne
mov
dec
and
movb
call
jno
dec
ret
adcl
in
push
sbb
jne
jg
cwtl
sbb
push
add
test
test
jl
add
dec
aam
in
cmp
insl
cli
imul
pop
jo
and
push
pop
adc
or
test
inc
hlt
push
push
mov
mov
test
sbb
or
inc
add
push
mov
subb
fdivl
xchg
adc
sbb
cli
push
add
push
push
sbb
push
add
mov
xchg
cmpsl
pop
mov
mov
xorb
push
in
dec
lahf
sub
xlat
pop
mov
add
lcall
dec
std
add
incl
nop
pop
ret
fistps
rorl
sbb
sbb
push
es
add
repnz
aaa
clc
test
add
cmp
leave
jmp
scas
or
lea
push
sbb
adc
mov
dec
adc
and
or
inc
bswap
push
adc
cmp
jne
data16
xchg
pop
pop
or
dec
add
dec
xor
cmpl
push
dec
pop
mov
mov
mov
imul
and
xor
cmp
out
std
cwtl
nop
inc
dec
xor
add
ss
sub
cmp
push
js
inc
xchg
or
cmp
loop
or
jb
fdivs
fists
je
je
jne
push
xchg
cmp
aam
inc
sub
xor
xchg
subb
sbb
std
lahf
fisubrs
aaa
les
jae
pop
cmpsl
xor
orl
test
mov
stc
sbb
mov
xchg
sbb
sub
push
sbb
sbb
fiadds
sti
aam
hlt
ret
sub
mov
pop
stos
push
jg
pop
sbb
fldt
or
xor
movl
cltd
push
and
ret
addb
xor
sahf
inc
cmp
or
or
adc
mov
inc
xor
adc
adc
out
xlat
test
pop
mov
cmp
add
cmpsl
int
and
and
or
out
mov
jmp
dec
shll
push
jno
outsl
ret
int3
add
test
lods
add
mov
add
xor
jne
add
pop
repnz
jle
rolb
xor
insl
pop
add
sbb
cmpl
mov
in
and
adc
pusha
add
je
jmp
xchg
and
add
adc
mov
cld
pusha
adc
cmp
cmp
shll
jnp
mov
push
leave
inc
xchg
orb
push
jecxz
and
or
or
insl
add
jl
inc
add
scas
rorl
popa
pushf
ljmp
sub
outsb
and
inc
stc
add
pusha
dec
jb
cmp
cmpsb
adc
sar
inc
pushf
gs
cmp
adc
or
jmp
inc
fcmovnb
mov
mov
xchg
clc
cmp
insl
loopne
ljmp
and
das
dec
add
adc
mov
push
dec
mov
xor
mov
mov
xor
or
dec
aad
dec
jmp
adc
xchg
jg
pop
or
push
or
inc
bound
xchg
xlat
scas
adc
dec
adc
and
repz
push
imul
jbe
sbb
scas
or
jne
popa
jmp
pop
inc
push
lret
mov
adc
push
arpl
pop
xor
inc
enter
js
fld
data16
jmp
xorl
stos
xor
adc
pextrw
and
pop
jle
jo
test
mov
jo
je
adc
lods
imul
xchg
push
add
push
push
adc
loopne
in
cmc
adc
or
nop
es
lods
jb
std
push
or
stos
nop
ret
mov
inc
cmp
aaa
cmp
mov
je
adc
push
fs
pop
sub
adcl
fisubrs
ffreep
out
jno
fucomi
add
ja
push
dec
push
ds
jae
xor
add
and
inc
sbb
mov
adc
cld
inc
sahf
nop
enter
xor
sti
pushf
ja
or
inc
pop
mov
sbb
xor
outsl
add
jo
cmp
hlt
loope
ret
push
dec
push
inc
lods
lds
test
dec
adc
adcb
pop
ret
or
xor
or
adc
jno
sbbl
pop
sub
in
in
push
jp
js
push
aam
mov
dec
jnp
lea
adc
and
cmp
mov
iret
inc
push
out
jb
loop
mov
and
jmp
in
cmpsl
dec
xchg
push
mov
dec
mov
lea
mov
je
add
lcall
jbe
rolb
or
push
and
and
inc
sarb
xchg
icebp
jge
dec
movsb
jbe
mov
cmp
cmpb
inc
inc
push
cmp
in
mov
clc
pop
push
lock
lahf
sub
les
and
jp
push
test
xor
add
mov
mov
sub
shrd
aam
testb
push
dec
daa
ss
cmp
jmp
push
push
mov
mov
inc
cmp
je
inc
or
sub
mov
imul
int
adc
cmp
jmp
push
dec
jo
dec
leave
xor
push
dec
adc
popa
insb
sbb
mov
movsl
or
in
je
inc
or
pop
pop
test
sti
je
jmp
or
push
dec
sub
dec
out
jns,pt
lds
mov
inc
sbb
filds
xor
les
sub
cli
jg
jmp
rcrb
inc
xor
mov
xor
and
pop
icebp
jnp
and
fisubrs
loope
inc
cmp
mov
or
sub
aaa
mov
scas
pushf
fwait
push
dec
andl
test
leave
dec
inc
inc
pop
movl
cmpl
mov
sbb
adc
inc
adc
cmp
and
dec
jl
xchg
lock
and
sub
mov
jb
in
fdivr
and
inc
jmp
daa
cwtl
push
lea
jmp
push
add
dec
insb
push
jb
loop
dec
aad
pop
in
pushf
push
inc
sbbl
lods
jl
mov
push
push
mov
mov
adc
cmc
add
shrb
int
cltd
adc
pop
cmpsb
insl
and
xor
mov
les
xchg
daa
push
xchg
cmp
test
and
push
xchg
test
cmp
mov
mov
xor
cmp
je
cwtl
pop
ja
dec
je
push
rol
mov
jno
add
fcomps
xor
dec
shr
or
jbe
inc
xor
lds
and
pop
fstpt
test
mov
shl
sbbl
insb
call
in
add
jge
add
loopne
sub
and
shlb
push
fcompl
js,pt
xor
sub
sbb
dec
add
shrb
movsl
js
jle
shlb
scas
xorl
insb
mov
jle
inc
sbb
and
sub
lock
scas
pop
clc
or
subb
scas
fdivrs
cmp
mov
and
clc
jg
cmpl
and
test
movd
movaps
int
push
enter
shlb
jle
xor
ljmp
lret
je
sbb
repz
or
jg
mov
sub
mov
and
in
add
adc
jnp
jo
cli
aam
ret
or
add
adc
mov
scas
mov
add
fadd
roll
add
ficompl
addps
int
add
jnp
fcmovb
sbb
sbb
sub
fistpl
loop
push
dec
xor
sbb
in
fs
imul
cmp
lret
stos
add
cmp
xchg
inc
xchg
xor
xor
push
inc
mov
incl
loopne
xor
aam
adc
sbbb
pop
stc
push
push
ret
jge
mov
jge
sub
push
ret
jge
pop
ret
add
pusha
aad
fldl
imul
movsl
call
jb
pop
inc
or
lret
mov
cmp
mov
xor
fnstcw
or
rorl
ret
adc
jne
clc
loopne
add
sti
xchg
icebp
rorl
sbb
push
rep
mov
lock
dec
ljmp
aas
xor
ret
shl
inc
filds
int
jnp
and
mov
add
pmaxub
add
clc
jb
subb
push
pop
push
pop
and
test
jbe
cmovs
scas
push
mov
jmp
inc
inc
adc
or
repz
and
movsb
sub
cmp
jb
dec
add
xor
xor
lea
dec
clc
fdivp
push
sbb
and
pop
pop
int
pop
popa
lock
or
scas
adc
mov
dec
gs
add
inc
add
add
fwait
or
push
orb
jo
aas
iret
repz
mov
mov
out
sahf
out
call
out
sahf
lock
hlt
clc
clc
cld
sti
test
jno
lret
add
fnstcw
jmp
int
call
mov
shll
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
xchg
or
inc
das
scas
fimuls
sub
stc
sub
into
jnp
pop
nop
push
push
js
mov
fcmovne
jl
mov
add
sahf
inc
push
out
push
and
dec
dec
mov
mov
addr16
add
ljmp
mov
push
cld
push
add
out
lcall
das
out
sahf
pop
aaa
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
clc
mov
or
push
adc
add
mov
icebp
pop
cmp
dec
lods
ja
inc
movsb
pop
call
jbe
dec
mov
pushf
and
mov
sub
mov
cld
mov
in
or
fbld
insb
jl
scas
add
negl
push
xchg
mov
jg
push
sbb
cmp
rcrb
sbb
add
gs
push
inc
inc
sub
push
mov
jmp
pop
sbb
fistpll
je
mov
mov
inc
jmp
outsl
cmp
jne
mov
pop
jecxz
lcall
add
leave
adc
das
or
pop
pop
xchg
notl
es
cmp
dec
sub
sbb
je,pn
xchg
sbb
cmpsl
shlb
xor
sarb
loope
push
sbb
sub
adc
jne
popf
into
pop
adcb
jo
inc
mov
and
push
sbb
add
pop
sub
hlt
das
loopne
sbb
lock
mov
das
iret
and
sub
and
popa
and
pop
sahf
push
pop
add
push
les
test
inc
push
xchg
aas
mov
scas
ss
add
push
cli
adc
decl
inc
cmp
jne
inc
cmp
dec
xor
jne
call
adc
movb
cwtl
sub
mov
mov
out
and
pusha
jmp
and
add
rorl
dec
movsb
mov
fadds
inc
inc
cmp
cmp
insb
cmp
or
sbb
cmp
and
xchg
arpl
dec
jns
dec
repnz
push
add
push
push
xchg
gs
sub
pop
or
mov
or
push
mov
bound
mov
sbb
and
into
or
dec
inc
hlt
cmp
pushf
inc
movsl
or
aaa
sbb
pop
push
add
enter
sub
sarl
sub
add
ret
mov
adc
loope
shlb
dec
leave
sbb
jb
mov
or
or
inc
pop
cmp
mov
mov
push
movsb
push
rol
inc
jno
std
inc
inc
cmp
aam
lret
jne
sbb
sti
jg
xchg
and
adc
add
sbb
add
or
insb
aaa
push
mov
outsl
sub
fsubr
and
and
xchg
rclb
mov
inc
or
or
out
testb
add
sbb
sbb
les
mov
stos
and
test
cmpsl
and
hlt
repnz
add
xchg
or
jne
dec
sbb
add
lidtl
jge
jae
cmp
and
roll
lea
daa
xor
shrb
xor
mov
push
or
cmp
inc
and
rclb
cmc
cmp
fwait
incb
xor
mov
movb
cld
dec
jecxz
adc
mov
ljmp
dec
cli
or
add
jmp
or
mov
inc
jl,pt
lock
int3
jbe
mov
fcmovu
xchg
inc
dec
sub
add
jmp
pushf
call
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lret
ret
das
fisubrs
jne
dec
ret
pop
lret
add
sbb
rol
push
cmpsl
sbb
cmp
adcb
aad
arpl
mov
out
dec
fistps
icebp
ljmp
cmp
jb
lea
sbb
and
mov
sti
jg
shlb
push
cld
jne
mov
push
cmp
jne
dec
rcr
cmp
jne
call
addb
fsub
or
divl
adc
push
dec
jmp
adc
jmp
jns
sahf
cmp
std
jmp
cld
cld
es
cltd
ret
pmaxub
xchg
ret
adc
push
jb
push
inc
hlt
in
cmc
push
movb
shr
stc
mov
or
mov
xor
mov
shll
mov
jb
testb
adcb
pop
xor
jo
adc
or
stos
sub
aad
dec
std
adcl
or
push
or
sub
adc
adc
add
adc
orl
mov
sub
push
dec
xchg
lea
mov
mov
aas
enter
add
add
fists
nop
add
into
and
ljmp
pop
jg
add
mov
mov
js
mov
jno
ja
lods
inc
ret
push
push
push
push
lock
popa
and
icebp
mov
pop
sub
sub
inc
jmp
lret
fcoml
jle
adc
jno
push
push
pop
div
jb
and
adc
push
imul
mov
clc
xchg
jne
or
jmp
pop
sub
cwtl
pop
mov
pop
adc
push
mov
and
pop
imul
and
cld
push
sub
sub
pop
gs
or
adc
fsts
ret
mov
pop
add
sub
mov
mov
idivb
adc
and
add
mov
das
clc
cmc
loope
mov
pusha
or
mov
mov
jmp
adc
test
dec
pusha
mov
add
and
cli
or
data16
lods
push
mov
adc
jle
cmpl
pop
pop
cli
rcrl
inc
fucom
cmp
xor
decl
xor
cmp
jne
orl
jmp
adc
jne
jl
push
ljmp
and
mov
jg
mov
dec
or
les
pop
and
pop
and
adc
insb
adc
pop
jne
dec
and
fwait
add
add
lds
clc
sar
adc
lret
or
test
and
popf
and
mov
jmp
dec
mov
je
mov
sub
cmp
ja,pn
sbb
add
dec
leave
cmp
jae
push
outsb
loopne
daa
movsb
inc
and
mov
and
dec
test
push
je
push
les
push
or
aaa
lret
adc
flds
inc
cld
das
mov
mov
sbb
or
xor
or
jne
jbe
inc
mulb
dec
scas
je
inc
lgs
je
mov
pop
movb
sbb
mov
mov
int
in
rolb
sbb
mov
movsb
or
xchg
fs
xchg
cmp
push
push
dec
loop
add
sub
sub
xchg
add
mov
mov
and
pushf
test
loopne
stc
pusha
and
imul
mov
jp
jge
stos
mov
pusha
mov
fbstp
dec
or
femms
pop
sub
test
jo
adc
inc
stos
or
add
setle
and
push
loop
jne
testb
xchg
rolb
adc
push
ret
push
sub
adc
sbb
sbb
decl
mov
inc
inc
data16
push
inc
test
mov
clc
dec
pop
dec
sbb
out
je
or
je
hlt
sbb
mov
xchg
adc
inc
mov
mov
sbb
rorb
push
cs
xchg
adc
ficompl
fstpl
ds
push
aas
push
add
pop
push
jmp
pop
das
push
adc
adc
fwait
push
scas
jmp
jne
stos
lock
fs
sbb
insb
out
push
sbb
sbb
push
movsb
ret
inc
mov
stos
and
adc
jbe
or
clc
adc
and
fs
add
mov
add
dec
ret
pop
pop
or
xor
mov
and
push
jb
xor
sub
pop
xor
insb
pop
jae
fwait
or
fs
xor
fidivrs
testl
enter
mov
adc
fidivs
sub
adc
fists
add
inc
icebp
mov
sbb
jne
add
loopne
outsb
call
hlt
je
inc
cmp
jb
lea
push
adc
push
popf
lret
pushf
dec
ss
add
mov
dec
test
mov
and
jbe
jae
pop
fnstcw
mov
mov
enter
or
lahf
ror
dec
xor
push
mov
or
mov
iret
sti
jne
xorl
push
out
test
loope
ja
sbb
xchg
sub
mov
int
push
or
pop
jmp
pop
adc
cmp
cmp
xchg
push
or
mov
or
in
sub
add
push
sub
insl
dec
or
or
xchg
jae
rorl
and
pop
mov
xchg
sbbl
and
aam
inc
fdiv
add
mov
cltd
mov
mov
cmpsb
ss
xor
or
cmp
adc
mov
loop
mov
and
mov
add
push
and
mov
sub
mov
pop
ja
add
xchg
push
clc
push
push
push
rolb
popa
icebp
jno
imul
push
movsl
push
sbb
or
adc
mov
rorl
fdivl
adc
ja
cmpl
loopne
xor
inc
jno
mov
hlt
aas
adc
sub
xchg
shlb
ficomps
xor
addr16
add
push
add
stos
shrb
lret
dec
cmp
lods
fwait
jle
push
xor
xchg
aad
push
ret
insb
popf
xor
pop
call
int3
push
dec
test
pop
jg
cmp
push
fstpl
pusha
jb
pop
sbb
jo
cs
rorl
in
jnp
hlt
ret
xor
repnz
into
push
lahf
mov
pushf
pop
or
and
out
jecxz
push
sub
mov
xor
inc
push
outsb
sbb
xor
mov
push
pop
je
push
imul
add
ss
sbb
add
ljmp
sbb
ja
add
push
mov
mov
js
cmpl
addr16
pop
fadds
sarb
jno
sub
inc
fmull
sub
push
inc
je
push
mov
mov
enter
pushl
push
jp
mov
imul
cltd
fdivr
and
mov
cmp
je
cmpsb
fdivl
push
out
inc
faddp
out
sbb
xor
push
lock
mov
movsb
jnp
push
jno
and
ss
loope
mov
adc
pop
idiv
adc
add
xlat
aas
je
mov
dec
mov
sub
sbb
pop
shrb
lret
loope
imul
sub
scas
movsb
lret
fidivrl
adc
push
iret
push
xor
sub
pop
or
cwtl
dec
add
and
test
cmp
jne
or
rolb
xor
or
je
repz
mov
subb
mov
cmp
add
xor
mov
and
rcrl
int
in
rolb
xchg
mov
xchg
testb
add
mov
mov
aad
pop
fisttpll
jmp
mov
sarl
mov
push
push
and
repnz
push
loopne
inc
cwtl
xor
pop
pop
adc
adc
mov
add
cmp
andl
push
daa
mov
sbb
ljmp
push
jbe
out
call
adc
out
add
mov
inc
loope
ljmp
movsb
ret
popf
ret
js
and
xlat
cltd
mov
sar
pop
loop
xor
pop
add
add
mov
mov
or
or
adc
inc
cs
xor
adc
inc
cltd
test
adc
add
enter
mov
push
jo
ret
scas
cmp
adc
cmp
mov
pop
dec
or
adc
ret
add
jle
loop
les
push
outsb
inc
add
mov
jae
in
adc
jmp
cmpsb
push
and
mov
xchg
push
int
mov
aad
xor
adc
mov
out
pop
iret
push
push
pop
jle
pop
mov
cmp
je
movzbl
add
sub
je
lahf
ret
lea
and
or
adc
imul
add
add
repz
daa
add
cmp
enter
pop
add
cmpsl
add
jno
je
lret
add
jns
add
flds
xor
mov
push
pop
and
enter
push
pop
rclb
jb
or
inc
push
nop
out
or
addr16
jns
sub
jns
push
nop
or
or
xchg
cmpsb
repnz
add
or
repnz
or
add
sbb
cwtl
push
push
enter
ja
push
cvtdq2ps
inc
push
adc
pop
adc
inc
push
fcoms
fwait
sub
adc
ret
enter
adc
adc
mov
add
adc
adc
aaa
jb
cltd
adc
inc
push
js
push
push
and
sbb
push
pop
pop
enter
xor
sbb
lcall
sbb
push
nop
out
call
cmp
push
inc
sbb
sbb
test
pop
sbb
repnz
cmp
add
push
pop
enter
push
pop
pop
jne
xchg
mov
and
ret
sub
cmp
nop
push
fldt
add
cmp
xchg
jg
loopne
repnz
pop
pop
inc
add
inc
clc
mov
cmp
cmp
in
in
jno
repnz
sub
rol
lea
fdivp
xor
aad
cmp
push
nop
out
mov
mov
jns
out
jb
pusha
shlb
call
mov
aaa
call
mov
out
cwtl
jmp
ror
repnz
enter
in
in
mov
cltd
mov
and
enter
out
jb
jb
jge
sbb
inc
lcall
inc
push
nop
lock
icebp
nop
addr16
pslld
or
pmaxsw
repz
hlt
hlt
rorl
pusha
jnp
push
fdiv
fwait
mov
iret
enter
testb
divl
dec
push
jns
std
clc
clc
clc
cltd
cmpb
pop
enter
cld
cli
cli
iret
push
and
and
sbb
stos
cld
in
fcoml
je
cld
push
lds
mov
ss
xor
repz
leave
std
sbb
adc
ret
dec
rorb
sub
add
lahf
je
ljmp
pop
xor
lock
dec
push
es
jecxz
ja
inc
mov
in
push
inc
push
fdiv
inc
and
daa
insb
nop
or
sti
out
out
cltd
inc
pop
and
outsb
call
das
xchg
sti
sub
sbb
pop
jmp
jmp
mov
cli
in
add
xchg
cmp
cli
popf
cli
rclb
sbb
imul
or
in
repnz
das
cli
push
cli
push
cmp
jmp
ss
repz
sar
pop
and
push
stc
sbb
pop
xor
fstpl
cwtl
xlat
movsl
test
fwait
mov
add
stc
or
pop
and
clc
cmp
lret
sti
sti
enter
cltd
mov
mov
inc
adc
push
in
sbb
cmp
and
xor
sub
mov
fldl
xchg
pop
icebp
mul
pop
rolb
scas
idivl
or
mov
out
out
and
insb
out
out
and
mull
negl
sti
imul
ljmp
negb
mov
imulb
inc
add
sbb
popa
imul
cmp
pop
pop
and
push
adc
add
sbb
rclb
jno
les
xchg
cmc
loop
repnz
pop
xlat
movsl
test
div
jns
jne
cwtl
fwait
and
jbe
inc
clc
clc
jecxz
sbb
hlt
jno
imul
loop
push
xchg
hlt
pop
jne
adc
xchg
push
hlt
sbb
das
pushw
data16
jns
hlt
idivl
jo
sti
push
or
pusha
adc
ds
call
adc
loope
repz
and
mov
repz
inc
or
test
mov
inc
repz
push
jno
andl
xchg
xchg
mov
bnd
imul
popf
dec
push
mov
xchg
repnz
pop
jo
sbb
cs
in
cmc
je
dec
push
and
add
addl
pop
loope
sbb
xchg
icebp
icebp
js
testb
nop
jo
icebp
jb
xchg
icebp
cmp
sub
cmc
cmc
daa
xchg
inc
fdiv
add
jecxz
in
test
jns
mov
popf
lock
jb
sbb
cmc
jne
repnz
xorl
jne
and
push
lock
xchg
scas
and
test
ss
dec
cli
test
imul
repnz
sub
out
scas
mov
in
cmovno
push
repnz
add
add
mov
enter
dec
add
adc
fwait
push
jnp
and
adcl
or
dec
add
jmp
icebp
sbb
dec
add
dec
scas
out
mov
int
aas
push
stc
cli
push
inc
add
push
push
clc
pop
sbb
jge
pop
imul
push
fstps
pop
pop
data16
ds
imul
scas
push
out
lcall
and
insb
ss
dec
mov
xchg
push
popf
push
mov
cmpsl
add
rorb
sbb
push
jp
or
pop
mov
push
or
xchg
dec
add
lahf
adc
test
mov
push
lock
cs
sbb
inc
cwtl
jge
push
dec
pop
add
ss
push
push
rorb
arpl
sbb
adc
or
xor
xchg
mov
je
add
fcmovnu
and
fmuls
and
add
insb
sub
jnp,pn
or
clc
dec
xchg
xchg
lods
pop
pop
cmp
add
or
lea
jecxz
or
adc
movsl
cmpl
sahf
jge
inc
into
sub
add
adc
xchg
in
addl
add
adc
es
mov
nop
daa
push
mov
mov
scas
cld
add
xor
jne
insl
xor
test
mov
push
or
pop
and
and
pop
inc
inc
inc
inc
or
inc
sub
cmp
add
or
enter
out
out
mov
adc
pop
inc
and
mov
adc
popa
js
in
popa
js
xchg
add
push
cmp
dec
outsl
cmpsb
or
adc
mov
adc
je
pop
shll
pop
mov
add
sbb
pop
cmp
loop
notb
je
rolb
xor
orps
push
jl
and
jne
in
push
xchg
sahf
movsb
sarl
pop
inc
ja
push
inc
test
xor
pop
shrb
sub
jmp
mov
add
inc
rolb
add
adc
xchg
fs
rorl
adc
or
xchg
mov
push
int
adc
stc
aad
sub
jecxz
lret
lods
mov
adc
jne
mov
mov
inc
inc
cmp
mov
add
sbb
mov
ret
out
jns
mov
dec
mov
wrmsr
int3
addr16
cli
push
mov
pop
sbb
cmp
ja
and
jno
push
les
fs
add
and
cmp
jmp
adc
mov
fs
sub
ljmp
testb
in
adc
clc
cmpl
push
or
je
roll
rcll
shr
stos
add
testb
fstl
loopne
insb
sahf
add
push
add
js
or
mov
test
mov
add
mov
addr16
inc
and
adc
cwtl
pop
add
rcrl
push
xor
dec
mov
das
into
xchg
fmuls
out
jg
mov
mov
incl
inc
decl
jne,pn
xor
nop
lock
repnz
sarb
sbb
mov
cmp
mov
jbe
push
cltd
pop
idiv
xor
mov
or
pusha
xchg
cmp
dec
mov
dec
mov
mov
xor
sub
jmp
cmp
jae
dec
jbe
popf
adc
mov
jbe
popa
loop
push
mov
dec
ljmp
add
sub
cwtl
dec
add
sbb
movsb
pop
out
flds
jg
add
aaa
daa
inc
push
mov
sbb
add
mov
add
test
je
pop
mov
je
dec
je
push
push
jne
mov
jle
testl
adc
pop
and
jbe
xor
imul
push
mov
fnstsw
push
mov
inc
pop
mov
cmp
cmp
or
movsb
cli
and
xchg
xchg
mov
sbb
pushf
cltd
addb
mov
xor
pop
dec
popa
es
dec
cltd
sbbb
pusha
push
pop
test
mov
adc
fisubl
and
mov
stos
xchg
or
mov
test
mov
fidivl
jo
jle
sub
sub
clc
push
idivl
jge
add
pop
cltd
pop
idiv
xor
ret
push
xchg
inc
fldt
jmp
out
cmp
push
inc
push
jmp
or
xchg
inc
shlb
lret
pop
imul
bound
adc
fs
jbe
insl
pop
fcmove
movsl
mov
sbb
pop
mov
or
je
insb
aaa
shlb
sub
sbb
sbb
sbb
jae
mov
rorb
es
and
inc
adc
or
incl
pop
pop
sti
bound
sub
sbb
fisubrs
push
push
mov
insl
pop
lds
js
dec
and
jae
loop
jg
cmp
push
mov
in
push
pop
xchg
push
cmp
loope
push
jmp
jge
pop
je
sbb
jno
out
cmp
jle
test
pop
shlb
mov
adc
outsl
mov
das
inc
ja
jo
mov
je
dec
push
lock
dec
jne
mov
jmp
out
rcr
inc
inc
adc
mov
push
pop
inc
xchg
or
shrb
push
and
cmp
jne
or
mov
out
aaa
subl
inc
sub
jl
test
pop
push
adc
mov
rorl
jg
mov
pushf
add
jp
ret
and
adc
enter
je
mov
flds
cmpb
ret
add
cmpl
xor
cmpsl
insl
and
or
mov
push
cld
inc
clc
test
adc
outsb
aam
mov
loopne
adc
adc
mov
jns
or
out
call
pop
inc
icebp
push
stos
out
jecxz
insb
sub
pushl
inc
add
ljmp
nop
ret
xchg
rorb
cmp
jmp
pop
push
add
lret
adc
xchg
add
cmp
sbb
loope
push
inc
and
sbb
cmp
inc
decb
mov
add
decl
inc
jg
jne
xor
je
gs
adc
xchg
xor
and
pop
mov
das
shlb
clc
mov
inc
inc
cmp
je
xchg
mov
enter
cli
orb
adc
add
fidivrl
dec
mov
dec
popa
aaa
test
and
push
test
add
cmp
stos
mov
incl
call
xchg
adc
sbb
add
inc
sbb
push
or
pop
push
ret
jnp
dec
push
pop
sbb
lods
mov
pop
cld
mov
or
shll
jbe
push
add
dec
push
cwtl
add
push
bound
sbb
add
sub
lea
dec
sub
mov
addr16
test
pop
js
add
pop
test
adc
dec
cmp
and
cmp
je
pop
cwtl
les
inc
roll
sbb
add
shll
pop
pushf
inc
or
sub
mov
add
push
pop
inc
pusha
in
es
shll
pop
add
or
cli
frstor
fistpl
dec
movsb
jb
adc
in
fldenv
mov
adc
clc
test
mov
jns
ror
add
sub
into
not
pop
pop
lea
js
and
jmp
dec
mulb
pop
lcall
jmp
das
cmpsl
add
add
push
dec
sbb
movl
aaa
push
fnstsw
loopne
icebp
pop
and
and
push
stos
jno
dec
sbb
ret
imul
call
xlat
jns
xor
fiadds
in
or
adc
hlt
test
push
scas
xchg
xchg
rcll
jns
and
stos
ret
xchg
push
dec
cmp
roll
xchg
call
mov
in
push
inc
in
mov
add
cmpsb
add
cld
push
mov
cmp
inc
push
jmp
cmp
pop
in
mov
cmpb
jne
inc
inc
int3
jmp
mov
scas
test
inc
inc
ja
push
insl
imul
or
jge
cltd
scas
loope
add
push
push
cs
mov
xor
call
imul
ja
rolb
scas
inc
jmp
aas
pop
push
jmp
sub
adc
dec
test
enter
jmp
sbb
add
add
das
xchg
fbld
pop
jnp
aam
fldz
xlat
xor
adc
push
dec
push
out
jmp
stc
fcoms
rolb
mov
fwait
rep
push
pop
mov
sahf
movsb
icebp
sar
add
in
inc
cltd
or
lock
mov
iret
lock
push
imull
pop
aas
mov
sbb
pop
and
adc
jmp
pop
arpl
xchg
imul
fs
movsb
cld
shll
push
inc
jmp
jae
pop
adc
std
mov
inc
add
sub
scas
add
fisubs
add
lock
cld
adc
test
mul
sbbb
daa
or
es
outsb
or
jg
xor
in
inc
adcb
jbe,pt
jbe
in
push
push
js
adc
cmp
and
cmpb
add
jae
mov
js
sub
adc
and
pop
xor
je
jle
sbb
xor
imul
or
call
cmpsb
in
and
scas
ret
fsubs
js
insl
clc
addr16
xchg
and
shll
fiadds
popf
sahf
enter
mov
adc
insl
sub
xchg
cmp
xor
cmp
push
aam
pushf
enter
pop
out
pop
sub
push
cltd
fucomi
jmp
mov
xchg
or
adc
dec
lcall
std
data16
les
and
insb
sub
dec
sbb
adc
adc
add
js
lods
adc
bound
jae
shrl
pop
arpl
jo
cmp
xchg
cld
arpl
imul
cmp
mov
ja
sbb
sub
sub
xchg
int3
push
insb
pop
add
and
and
dec
push
cmpb
xchg
push
xchg
add
faddl
ror
inc
scas
or
cmp
jge
adc
push
ja
inc
mov
sbb
ja
cmc
mov
mov
or
push
mov
fisttpl
loopne
jle
sbb
ret
mov
test
add
cmp
sbb
repnz
inc
out
sub
jg,pt
popl
fidivs
pop
mov
lcall
xchg
cmp
nop
add
cmp
push
sub
pop
xor
shlb
rcll
rcr
shl
hlt
mov
jno
inc
sub
movl
dec
scas
lock
enter
sbb
sahf
inc
pop
gs
int3
cld
sub
data16
push
incl
ret
adc
fs
push
mov
mov
or
lret
enter
mov
sub
inc
sub
ret
inc
add
ss
in
xor
ret
jecxz
dec
and
les
or
sbb
ss
mov
mov
adc
insb
push
lea
loopne
out
into
inc
cmpb
add
imul
pop
cltd
in
add
sub
test
push
xchg
sbb
mov
je
dec
cmc
cmp
or
push
dec
or
in
shrb
mov
shll
mov
pop
repz
sti
sbbb
fildl
lea
dec
xchg
xchg
pop
es
cmc
mov
xlat
mov
or
jp
jg
jl
jg
pop
fsubrs
into
jno
cmp
cmp
jle
push
sbb
jo
leave
push
add
test
fidivs
imul
nop
imul
push
pop
mov
rcll
ja
call
xchg
xor
test
orb
push
and
dec
sub
fs
test
or
lock
jno
add
cmp
in
stos
or
push
adc
pop
das
fsubrl
pop
sub
pop
ret
mov
adc
pop
sbb
and
mov
stc
or
add
loopne
jns
adc
popl
outsb
xor
add
inc
into
mov
icebp
roll
mov
add
cmp
xor
add
lcall
nop
inc
add
adc
fmul
adc
adcb
pop
nop
in
sub
dec
cmpsl
test
push
jo
sahf
sub
inc
push
push
std
pusha
cld
sub
icebp
je
push
pop
or
jns
sbb
add
adc
sub
push
clc
push
sbb
pop
outsb
adc
mov
push
sahf
or
pop
or
shl
push
inc
loopne
or
pusha
stos
add
sub
mov
insl
add
testl
sahf
or
insb
rclb
pop
test
and
in
sbb
mov
xor
stos
sbb
test
jg
hlt
mov
and
and
lea
push
dec
les
lock
dec
xorb
rcrl
lods
xor
or
mov
mov
cmp
shll
cld
push
mov
pop
cs
add
push
xor
sub
push
cmp
inc
outsb
jae
inc
inc
cld
pop
movsb
imul
adcl
orb
test
movsb
lods
jmp
and
je
and
lahf
mov
nop
mov
adc
add
loope
aad
jmp
mov
ds
out
sbb
pop
mov
or
rorb
ja
lret
xchg
idivb
add
jmp
cmp
push
and
and
jmp
add
add
sub
arpl
or
jl
ja
mov
pop
mov
or
ja
mov
cmp
cmp
mov
ds
inc
xor
mov
inc
aaa
lock
cmp
add
cld
cltd
jno
add
or
aam
jns
pop
insb
push
cld
jecxz
adc
jo
dec
mov
or
or
cmp
mov
mov
sub
mov
cmpsb
push
sub
push
movsb
repz
xchg
inc
cmp
iret
sbb
std
jne
loopne
fldt
popf
cmpsb
ret
enter
bound
and
sarb
and
orl
or
mov
or
insl
pusha
mov
jnp
outsl
pop
mov
mov
mov
push
lock
test
adc
out
into
std
add
in
push
fidivl
push
jmp
sahf
lods
or
loope
dec
push
add
in
push
or
push
inc
pop
jne
loope
inc
ljmp
call
jbe
add
decb
test
cmp
imul
test
and
lea
sub
jmp
add
sub
inc
xor
push
loopne
andb
sar
or
lcall
add
mov
inc
cli
jne
mull
add
jge
add
sbb
js
jb
mov
xor
inc
and
cmpsl
movsb
cmp
push
outsb
inc
adc
or
mov
xor
mov
inc
inc
inc
dec
jne
mov
adc
cmp
insl
mov
add
and
loopne
js
xor
inc
push
mov
inc
dec
jne
out
mov
enter
push
or
dec
adc
hlt
lds
adc
push
jnp
test
xor
xchg
loopne
and
xchg
in
sub
call
out
inc
shlb
das
mov
xor
mov
test
mov
aam
add
inc
sub
loopne
dec
orb
ljmp
pop
ss
cld
aas
or
sub
jbe
inc
and
shrl
push
jne
insb
sub
cmp
in
addb
test
test
xor
fldl
or
xchg
std
and
fs
push
or
loop
hlt
xor
icebp
std
outsb
xor
lret
pop
sub
jmp
xor
add
mov
mov
add
cmp
pusha
push
scas
mov
push
jmp
adc
jno
es
jo
jmp
xchg
inc
data16
ds
and
loope
add
sub
lret
cmp
fists
push
and
pop
movl
adc
daa
and
icebp
dec
jnp
or
in
or
push
iret
dec
sub
enter
pop
adc
inc
out
add
pushl
movsb
cltd
cld
inc
mov
dec
in
pushf
sbb
int3
call
sbb
sub
or
and
std
or
and
rcrb
cwtl
shlb
aam
pop
cmp
mov
push
cwtl
mov
jne
cli
jae
aaa
mov
lea
or
push
cmpl
pusha
or
fs
pop
mov
push
push
cmp
mov
clc
push
dec
decl
jne
sbb
imul
push
loop
xchg
add
push
add
push
sbb
mov
lea
and
mov
aaa
cmpl
andl
push
pop
ret
jo
testl
mov
xor
clc
sub
sbb
sbb
dec
xor
je
punpckhwd
push
mov
push
sbb
push
add
pop
in
or
and
push
sub
dec
lock
or
sbb
xchg
loope
insb
loope
add
mov
mov
xchg
test
je
jmp
push
ficomps
sbb
push
pop
mov
sti
rclb
sbb
and
jnp
stos
sbb
push
cmp
shlb
add
daa
mov
pop
adc
and
jb
mov
push
add
ss
fisubl
cmc
dec
mov
lret
mov
cmpsl
out
add
call
sub
mov
dec
addr16
nop
loope
cmp
push
push
push
mov
out
xor
mov
fnstcw
cs
or
push
cmc
aam
lcall
xchg
test
inc
push
push
ret
mov
sub
jns
insb
push
cld
push
jo
push
sub
mov
mov
sbb
mov
or
inc
cmp
xchg
jbe
imul
cmpsb
insb
in
cmp
and
mov
and
mov
jg
mov
cmp
sarl
mov
dec
pop
fcoms
xor
jne
popf
or
dec
push
add
lods
lds
cmp
movsb
pushf
xchg
aaa
test
lods
sbb
dec
add
dec
add
adc
dec
add
mov
movsb
fwait
xor
pop
sub
adc
or
movsb
movsb
nop
repz
xchg
xor
clc
dec
dec
add
sub
enter
cmp
sbbl
popa
int3
loop
cmp
data16
cmp
pop
sbb
pushl
xchg
inc
jmp
ds
rorl
sbb
and
in
stos
mov
je
jle
or
out
or
and
jg
push
push
adc
rolb
push
dec
stc
mov
xchg
mov
pop
test
mov
cwtl
out
and
cmpsl
dec
mov
push
jge
shlb
or
xor
hlt
pop
daa
test
jge
mov
test
dec
ja
dec
insb
lcall
aad
or
imul
mov
inc
inc
gs
lret
pop
pushf
cwtl
mov
pushf
loopne
jb
pop
pop
mov
xchg
xchg
push
shll
mov
and
and
jo
fwait
hlt
push
pop
loope
movsb
jp
inc
and
leave
sub
andl
aam
lea
popf
insl
out
sbb
mov
roll
mov
mov
or
fcoml
sti
mov
mov
mov
clc
or
repnz
enter
shrb
pushf
popl
aam
jle
sarl
rcl
aaa
dec
cld
adc
sub
or
cmp
aam
xchg
mov
test
inc
inc
outsb
fadds
jno
mov
ret
mov
test
xchg
in
jge
ret
pop
jmp
jge
jns
adcb
sub
icebp
mov
aad
xor
ret
js
push
out
stos
add
jmp
mov
dec
repz
es
mov
inc
mov
js
and
mov
add
sahf
iret
push
dec
sbb
sub
push
push
js
mov
add
add
sahf
out
fildl
loopne
rorb
out
enter
add
push
jmp
sbb
sub
push
mov
mov
push
movsb
lea
mov
fadds
add
mov
enter
mov
repz
jnp
pop
push
fs
je
add
mov
inc
mov
mov
xchg
or
add
aaa
cmpsb
inc
jl
lods
cmpsb
sbb
push
cs
xor
hlt
push
push
mov
lahf
inc
test
dec
pusha
jmp
lods
js
mov
pushf
dec
or
xor
inc
ret
cli
dec
scas
push
mov
notb
pop
repz
dec
rorl
jge
inc
mov
adc
test
push
movsb
lret
test
punpcklbw
add
jmp
pusha
pop
inc
loop
les
cmpsb
and
adc
aas
adc
and
add
add
and
inc
lea
or
xchg
cmc
cmc
stc
and
xchg
idivl
lock
lea
mov
lret
mov
fdiv
mov
out
pop
shr
fwait
xlat
add
xor
and
push
enter
imul
mov
je
mov
xorb
adc
inc
pusha
jae
sbbl
jl
or
xchg
roll
push
push
jge
or
lods
imul
sbb
and
inc
mov
and
jne
lock
insb
or
push
adc
and
or
ss
sbb
jbe
push
dec
pusha
addb
sbb
adc
push
inc
jmp
out
jne
jnp
sub
outsb
cmp
sbb
xchg
aaa
push
and
outsl
push
mov
addr16
aam
mov
loope
lds
sbb
fisttps
jle
test
ja
enter
or
out
ffree
pop
pop
sbb
sub
clc
mov
rcrl
push
mov
std
dec
in
lds
sbb
hlt
jecxz
insl
pusha
push
inc
sbb
or
test
lock
fsubl
push
adc
add
sbb
add
daa
xchg
xor
adc
les
pop
test
add
mov
and
adc
jle
test
or
in
xchg
fmull
pop
leave
bound
mov
lret
shrl
ljmp
stos
test
cmpsl
and
add
push
inc
xchg
lret
rclb
loope
and
xor
call
jne
jb
inc
pop
sbb
shlb
pop
je
mov
cmp
add
shrb
popa
movsl
icebp
mov
mov
insb
mov
jg
sbb
inc
or
test
inc
sbb
xor
push
dec
push
clc
xchg
rorb
test
push
or
xor
dec
ss
push
cmp
fisubrl
cmp
adc
pop
insb
shrb
lcall
inc
cltd
adc
jbe
push
inc
scas
adc
popf
sub
or
pop
xchg
inc
aaa
out
inc
adc
cmp
pusha
pop
divl
in
loop
ret
jl
lock
jbe
dec
into
fimuls
sbb
test
dec
ljmp
jns
add
jnp
or
or
push
jmp
push
fwait
sub
pop
mov
add
add
andl
add
dec
push
and
fidivs
cmp
ret
and
and
xchg
push
push
or
or
fnsave
dec
jmp
ficompl
and
inc
popf
mov
lret
sbb
push
and
push
or
adc
dec
outsb
add
add
inc
and
mov
ja
test
jg
mov
inc
push
push
mov
pop
sub
mov
jb
insl
mov
movsb
xchg
negl
sbb
inc
inc
jns
mov
cmpl
jo
xor
pop
dec
or
notl
je
xchg
adc
adc
xor
mov
rorb
popf
in
mov
clc
aam
fdivrl
fsubs
mov
adc
pop
sbb
sti
lods
cmp
test
cmpsl
or
xchg
pop
repnz
fbld
leave
test
in
or
call
or
or
nop
dec
mov
inc
cld
pop
dec
mov
imul
or
jl
dec
icebp
pusha
loopne
sarl
out
sbb
sar
pop
mov
movsb
mov
rol
bnd
inc
push
lea
cli
mov
loopne
cs
fsubs
lret
pop
movl
mov
into
dec
or
je
sbb
scas
pushf
pop
pop
cs
mov
add
icebp
sbb
mov
or
adc
in
sub
aam
out
mov
lret
add
sub
clc
push
or
push
imul
lret
or
cmpsb
xor
movsl
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
xor
mov
cmp
push
or
inc
insb
je
adc
into
pusha
lock
test
adc
ds
loopne
sub
adc
sbb
pop
fcmovnu
pop
mov
mov
pop
or
xor
mov
inc
outsb
jg
dec
xor
cwtl
nop
push
inc
movsl
jg
jmp
iret
in
jb
or
imul
xor
cmc
jne
js
movsl
loope
and
je
inc
and
push
mov
mov
push
sbb
mov
jecxz
pop
add
sarb
push
sbb
jle
inc
je
scas
pop
xor
pop
push
or
lcall
inc
or
fdivr
shr
pusha
dec
call
sbb
pop
test
je
push
jae
imul
xor
in
mov
lock
xchg
mov
xchg
mov
adcl
pop
sbb
fdivrl
mov
in
or
test
mov
pusha
imul
inc
fiaddl
push
into
mov
ficompl
push
inc
enter
rcll
add
push
insl
cmp
roll
negl
mov
aam
hlt
dec
lret
add
cmp
fdivs
dec
rolb
int3
sti
push
mov
mov
pushl
jno
push
mov
mov
jne
setp
or
mov
inc
imul
lret
dec
mov
pop
int
jmp
xor
add
push
xor
jns
lock
push
sbb
mov
outsb
jo
push
pop
fsqrt
add
add
into
add
xor
jmp
ret
lods
cld
jno
clc
outsb
je
test
fwait
cmp
push
insl
push
enter
subb
add
insb
fistpll
xor
mov
add
adc
movsb
xchg
adc
or
pop
pushf
fldenv
jecxz
mov
or
adcb
ret
mov
mov
mov
jmp
cmp
jle
insl
loope
fldl
cmp
lock
pop
repnz
mov
in
sbb
xor
int
or
add
or
sub
scas
cmp
xor
adc
ret
pop
cmc
mov
sub
jmp
sub
mov
js
mov
mov
mov
lea
stc
lcall
pop
xchg
cwtl
inc
call
sbb
dec
nop
push
clc
add
and
sbb
adcl
push
mov
aam
outsb
mov
gs
jae
addr16
decb
mov
dec
inc
daa
add
adc
ret
aas
fildll
pop
data16
push
sbbl
xor
push
lret
push
popf
out
mov
jne
push
and
in
je
adc
mov
mov
cltd
jmp
aaa
outsl
lret
clc
popa
int3
je
cltd
loopne
and
je
mov
test
pusha
pop
jl
jae
adc
in
adc
in
dec
dec
adc
pop
fisubl
fistpl
jge
inc
sbb
lahf
cmp
rorb
lret
pop
mov
or
out
lods
cmp
jne
and
lea
mov
push
inc
test
and
movsl
arpl
and
cmp
aas
xor
or
xchg
clc
sahf
add
mov
outsb
rcrl
xchg
sub
inc
cmp
add
ret
into
adcb
cmp
jg
shlb
xor
ss
push
mov
jmp
dec
or
mov
xchg
adc
sub
xor
test
pop
mov
and
push
mov
xor
push
sub
push
test
dec
and
mov
adc
adc
cltd
sub
sub
pop
shlb
in
mov
test
xor
lea
sbbb
or
adc
sub
push
mov
xor
lods
rol
movsl
push
fdivs
jno
rcr
aaa
cmp
or
pushf
push
shll
nop
popa
jle
sbb
mov
dec
add
and
cmpsb
aam
cmp
cwtl
loope
mov
add
les
testl
push
xchg
out
xchg
loopne
call
adc
les
insl
mov
mov
xor
in
sub
movsb
cmp
dec
xchg
lock
xchg
subl
xchg
add
sub
js
mov
out
mov
inc
add
xchg
push
dec
test
testb
dec
pop
ss
fdivrs
push
jecxz
adc
or
dec
cs
inc
dec
or
sub
jo
in
mov
cmp
int
idivb
lahf
mov
ds
lea
add
cmp
push
dec
rolb
test
jmp
xchg
insb
and
rolb
and
lcall
mov
into
push
mov
cmp
push
pop
mov
push
shr
pop
xor
cmp
mov
push
pop
imul
adc
cltd
push
aas
out
pop
jo
mov
xor
pop
xor
adc
pop
dec
mov
dec
jge
mov
les
jmp
daa
push
push
xor
cmp
jmp
clc
inc
int3
jmp
push
xor
les
add
por
add
mov
clc
lock
enter
lods
gs
dec
inc
inc
imul
dec
or
mov
xchg
xor
or
sub
add
jbe
adc
push
xor
push
mov
jo
or
adc
imul
add
jmp
movsb
sub
mov
jb
rclb
sbb
add
clc
and
sub
dec
sarb
jnp
mov
inc
pop
psrld
cmovns
cld
cmp
xor
xor
cmp
mov
mov
ret
inc
push
or
jne
sar
dec
cmp
jbe
push
pop
sbb
dec
mov
dec
or
lock
in
rolb
mov
shr
lea
not
and
decb
jne
test
scas
jp
and
adc
mov
add
push
pop
add
mov
add
push
or
cld
add
pop
rolb
and
push
or
mov
jmp
clc
and
std
pop
mov
shlb
and
sti
add
mov
dec
pop
cmp
out
lret
pop
adc
cmp
and
xor
pop
push
xor
jno
mov
fsubrs
and
roll
clc
jne
sub
out
loopne
insl
pop
dec
loopne
mov
xor
push
jle
pop
dec
add
lret
movsb
mov
jns
ret
addr16
and
sbb
lea
out
or
inc
mov
loopne
sub
adc
mov
je
stos
add
inc
mov
mov
pop
lret
sbb
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
into
ss
mov
add
dec
inc
push
repz
pop
scas
mov
pushf
push
shll
sbb
xchg
sub
or
fidivs
push
call
aas
gs
push
or
lret
movsb
mov
or
mov
sub
dec
inc
adc
inc
dec
hlt
test
xor
and
push
mov
mov
and
adc
int
cs
movl
enter
mov
adc
jnp
divl
cmp
ret
insl
or
mov
or
in
das
mov
pushf
pop
mov
xchg
inc
rcl
inc
lock
data16
inc
adc
and
mov
jge
addl
inc
mov
les
dec
pop
ror
lahf
test
stos
cmp
xor
cmp
push
cmp
icebp
pushf
int3
movsb
adc
push
fistl
xor
add
fwait
orl
inc
imul
addb
pop
mov
lea
mov
add
inc
inc
lret
ljmp
test
incb
cltd
fcmovb
clc
pop
mov
pop
loop
dec
jne
or
rcl
lret
loopne
in
sbb
popa
cwtl
lea
js
cmp
insb
cli
inc
sub
shr
mov
repnz
clc
jp
fldenv
js
adc
mov
push
jne
fst
call
push
add
sub
sbb
iret
dec
jne
je
clc
add
dec
bound
cmp
dec
mov
adc
out
icebp
cmpsl
mov
sahf
mov
sahf
pop
mov
mov
push
shlb
fimuls
jne
or
add
pop
jge
and
not
and
into
xchg
adc
int
xor
sbb
sub
or
mov
push
outsb
xchg
mov
dec
cld
xor
cmp
jl
mov
and
pushf
jle
orl
cmp
cmp
jle
mov
add
scas
add
mov
int3
push
pop
xor
clc
adc
mov
aam
stc
sbb
clc
rolb
push
cs
es
add
cmp
nop
dec
or
int
add
push
jns
push
nop
jge
sub
add
xchg
sub
lods
std
lret
lods
adc
pushf
sar
dec
mov
ljmp
pop
lea
int3
sub
jg
shll
mov
pop
cmpsb
repnz
pop
push
pop
adc
add
lcall
adc
and
js
push
ja
and
sub
adc
inc
insb
xor
out
push
pop
int
inc
clc
mov
sub
jl
movsb
mov
inc
inc
or
das
outsb
in
cmp
inc
dec
insb
pop
xor
push
sar
add
jp
movsb
pop
add
adc
xor
xor
insb
sahf
loope
cmp
dec
je
xchg
jecxz
xor
push
mov
push
or
fcmovu
ja
push
push
dec
ficoms
add
pusha
push
xor
adc
dec
outsb
pusha
cmp
icebp
mov
inc
jbe
inc
cmp
mov
mov
mov
cmp
lods
decb
lret
pop
into
mov
pop
sbb
xchg
push
addb
or
mov
push
add
cmp
cmp
fmull
aas
push
push
push
jge
in
out
cmp
push
jo
in
or
subb
pop
rolb
push
nop
cmp
and
dec
fwait
js
decb
xlat
push
ret
adc
fildl
pop
int3
mov
sbb
jne
leave
jae
cmpsb
jmp
jnp
add
xor
cmp
fimull
aaa
arpl
jo
mov
mov
and
mov
sub
xchg
dec
pop
or
std
fimull
jle
pushl
sbb
in
cli
push
sbb
and
mov
dec
pop
popa
push
add
iret
jne
inc
jno
shld
outsb
xchg
cmc
mov
add
out
mov
fsts
dec
mov
and
jne
mov
repz
cld
test
and
leave
inc
test
inc
push
mov
adc
pushf
mov
sub
icebp
sbb
fdivrl
push
inc
xchg
dec
add
xchg
adc
iret
push
outsl
adc
test
cmp
xor
pop
mov
lea
jne
bnd
in
hlt
and
jmp
jp
mov
sub
bound
dec
push
and
mov
clc
into
xor
push
lcall
adc
mov
int3
inc
pop
mov
xor
add
sbb
mov
push
out
or
dec
call
or
inc
or
inc
or
push
mov
in
lret
mov
pop
or
stos
call
lods
sahf
aad
shrl
push
lea
dec
js
sbb
dec
jne
cmp
or
push
ds
orl
xor
xor
sbb
loopne
outsb
cmp
lock
pop
jb
or
xorl
lock
cmpb
sub
and
mov
pusha
add
test
icebp
cmp
xor
jp
push
push
or
or
pusha
loope
sub
mov
fisubrs
jns
dec
mov
push
add
movb
pop
data16
es
add
sub
scas
orl
xchg
ds
and
cmp
sub
add
jbe
add
push
mov
jno
gs
inc
or
sbb
or
call
push
and
xchg
push
in
rorb
mov
push
out
sub
xchg
inc
add
ret
push
xor
fiadds
sti
pop
fsubrs
mov
lahf
pushl
clc
mov
adc
pop
ret
imul
pop
lods
inc
push
lahf
jne
push
adc
adc
mov
fldl
adc
movsl
lret
xor
push
mov
das
jnp
fcoms
loopne
cmc
inc
js
dec
add
push
jmp
jno
cmp
insb
cmpsl
pop
jl
or
adc
jle
xchg
bound
nop
clc
hlt
and
lock
insb
int3
push
divl
dec
or
iret
sub
movb
add
call
lods
aam
hlt
and
xchg
dec
mov
mov
jne
pop
xor
or
sarb
outsb
push
cli
fnstcw
jmp
movzwl
sub
shl
or
int3
test
lea
jnp
xchg
in
je
cmp
mov
decl
rorl
subb
xchg
imul
test
movsl
or
mov
pop
lcall
mov
frstor
fs
push
sbb
jns
out
lods
or
and
sub
push
inc
mov
jo
adc
add
xchg
or
rcll
add
add
sbb
sbb
xchg
arpl
ja
push
pop
adc
lea
xchg
pushf
xchg
lods
or
add
scas
and
hlt
ficomps
mov
and
icebp
or
in
sbb
pushf
xor
mov
aas
insb
jne
jp
mov
adc
and
sbb
sbb
jg
add
lret
enter
xor
cmp
mov
add
daa
pop
or
push
jae
or
jmp
int3
les
add
std
jae
xchg
clc
xor
dec
ret
test
shll
lea
cs
movsl
stos
dec
and
sbb
adc
sub
sub
xor
push
mov
sti
call
push
mov
leave
enter
test
sub
push
sbb
stos
push
fmulp
xor
lret
and
xadd
dec
push
mov
call
xor
mov
xor
inc
stos
loop
xchg
cmp
incl
fimuls
cld
test
lret
dec
pop
xor
lock
test
mov
leave
dec
in
shr
and
mov
pop
in
inc
cmpsb
adcl
xchg
repz
dec
leave
test
in
sbb
push
test
xor
or
call
and
scas
in
and
ret
inc
xchg
les
mov
sarb
loop
in
enter
repz
inc
and
in
sub
pushf
sbb
test
in
push
dec
popa
mov
xchg
test
ret
adc
mov
popa
pop
add
mov
or
xor
and
cli
xor
insb
mov
iret
sarl
mov
push
test
xchg
outsl
or
adc
daa
cmp
sub
push
jg
movsb
cltd
daa
lods
xchg
sub
inc
js
push
mov
lock
addr16
ret
mov
cltd
sbbb
push
inc
js
xchg
stos
add
lods
dec
inc
or
fwait
repnz
xor
xchg
and
dec
rorb
shl
or
test
shll
or
sbb
jmp
lods
inc
mov
das
mov
or
mov
imul
ret
inc
xchg
mov
xor
sahf
or
shr
lds
repz
pop
test
or
or
insb
xlat
out
fisttpl
fsubs
push
adc
and
adc
in
cmpsl
jne
cmp
add
hlt
hlt
out
je
stc
mov
aaa
inc
cld
push
or
add
aaa
pop
add
dec
mov
adc
testl
push
pop
and
cs
rol
int3
pop
mov
push
sbb
push
or
shll
enter
xlat
or
pop
cmp
addb
and
mov
jo
add
cli
sti
cld
dec
inc
shll
daa
test
xchg
add
cli
xchg
icebp
adc
cmpsb
xor
jg
shlb
add
push
jecxz
push
pop
sub
sbb
dec
mov
fucomi
add
jno
je
xor
test
pop
mov
fldl
outsb
jg
or
add
call
mov
push
mov
and
cmp
lcall
jns
pop
jmp
jo
push
dec
xchg
imull
add
mov
pop
cmp
call
dec
xchg
dec
je
inc
fsubrs
sbb
mov
fnstenv
lcall
incb
mov
pop
ret
popa
insl
push
sub
sbb
fnstcw
stc
fwait
add
adc
jmp
lret
scas
repnz
ficoms
test
lock
push
hlt
lock
stos
repnz
push
call
shlb
shl
push
adc
aaa
jne
das
jnp
mov
and
inc
lock
out
add
mov
jns
out
push
sarl
fistpll
pop
lahf
out
icebp
andl
add
push
mov
xchg
enter
push
push
sti
dec
dec
inc
sbb
or
call
jg
adc
add
push
rcrl
pop
hlt
lods
clc
jne
sbb
xchg
jnp
and
inc
jle
push
and
inc
leave
ret
clc
add
movsb
sbb
jg
jb
push
xchg
jmp
inc
push
add
mov
sub
adc
and
or
aas
push
sbb
adc
clc
push
fmull
les
cmp
inc
jp
cmp
test
jne
push
push
orl
out
outsb
cmp
lcall
and
add
adc
bound
or
dec
push
shlb
push
add
popf
xchg
mov
xchg
cmp
out
out
xchg
push
sub
mov
mov
outsl
mov
jne
sti
ret
or
aas
mov
clc
aad
add
or
mov
testl
xchg
lret
test
sbb
rcl
das
cmp
mov
lods
std
mov
shl
into
jne
dec
pop
mov
push
pop
mov
dec
pop
add
incb
add
or
mov
add
jne
dec
sbb
test
loopne
sar
lea
testb
sub
inc
adc
pop
mov
orl
loopne
mov
testb
mov
sbb
std
mov
or
adc
shlb
stos
mov
popa
test
push
mov
xchg
std
lods
outsb
iret
and
nop
hlt
and
mov
pop
cs
dec
ror
lock
loope
sbb
mov
dec
dec
push
pop
or
pop
cs
pop
add
andl
add
mov
cld
cmp
mov
cmp
pushf
jno
jmp
and
enter
xor
lods
es
sub
mov
mov
mov
dec
je
or
inc
mov
dec
mov
cmp
lahf
xchg
bound
insb
jne
inc
sub
xchg
imul
aad
pop
and
enter
cmp
jne
cld
xor
pop
stc
push
enter
cmpb
xor
xchg
inc
sti
adc
in
cmp
push
rclb
int
lds
loope
xchg
cmpsb
js
pop
lods
loope
xchg
xchg
rorl
fmuls
push
leave
and
test
lret
push
lea
dec
outsb
mov
jecxz
int
inc
push
mov
leave
repz
call
addb
pop
lret
add
cmpsl
ret
js
and
xchg
cli
andb
add
cld
sti
mov
pushf
push
inc
cmp
cld
pop
lcall
dec
cmc
cmc
int
inc
mov
das
mov
mov
inc
fidivl
xor
pushf
xor
push
adc
mov
jg
testl
dec
or
or
cwtl
lret
fcmovbe
jns
mov
mov
sahf
add
jne
sbb
jns
lahf
push
hlt
std
sub
cmp
es
mov
jmp
mov
sub
cmpsb
sbb
jno
or
mov
xor
cmp
je
add
cwtl
cmc
mull
insb
and
xchg
or
cmp
imul
jns
in
mov
inc
repnz
xor
mov
sbb
lock
xor
shll
addr16
in
lret
std
fdivr
adc
adc
ret
insl
inc
mov
iret
lret
mov
test
jecxz
inc
push
add
xchg
pop
sahf
out
xchg
pop
cmp
je
repz
jb
std
call
repnz
jb,pn
push
mov
pavgw
std
push
xchg
fdivrs
testb
push
daa
jbe
std
inc
mov
imul
lds
sub
pop
mov
std
out
data16
imul
mov
das
cmpb
pop
imul
int3
mov
cs
sbb
push
out
xor
ds
mov
xchg
roll
cld
mov
mov
out
lcall
push
push
xchg
mov
aad
test
cmpsb
mov
daa
imul
pop
xchg
add
xor
sbb
inc
inc
adc
sub
cmp
and
addr16
cmp
mov
sbb
push
jb
std
lock
xor
cmp
fwait
or
test
jne
loopne
mov
leave
std
inc
repz
xchg
mov
popa
cmp
push
fdivrp
or
ds
data16
add
lods
push
sub
test
sub
movsb
das
in
jmp
dec
insb
fwait
cmc
and
add
sar
push
push
sub
xor
cmc
int
cmpsl
push
sub
sub
or
adc
and
cmc
loope
out
int3
cmp
pop
cmpsl
pop
sahf
push
addl
mov
dec
test
mov
xchg
pop
enter
jns
inc
cwtl
dec
repnz
dec
cmpl
or
enter
pop
bound
cmp
push
movsb
adc
add
clc
pop
movsl
popa
inc
push
inc
lret
inc
sub
sub
into
push
dec
dec
hlt
or
enter
fdivr
das
push
and
jno
push
push
and
xchg
je
cs
nop
xchg
std
std
std
lods
pusha
push
loopne
xchg
faddl
xchg
aaa
fsubrl
movsb
bound
mov
nop
jns
inc
add
jns
out
push
stos
or
push
pop
movsl
jb
xor
mov
and
pop
in
and
add
cmp
lea
jno
mov
into
inc
cmp
push
icebp
lcall
adc
sub
cmp
ja
add
lods
inc
stc
leave
and
inc
fyl2x
or
lock
cmp
clc
nop
pop
pop
pop
fistpl
loope
shrl
xchg
int3
outsb
jae
xor
leave
ljmp
dec
push
rcll
lods
lock
pop
pop
add
mov
sub
xor
arpl
test
in
xor
sbb
jl
movsl
call
leave
call
push
mov
lret
or
or
leave
xlat
stos
jb
adc
and
cmp
leave
aam
fs
les
out
xor
push
imul
arpl
pushf
sbb
lret
lret
dec
push
cmp
test
test
popa
pushf
inc
xchg
add
or
movsl
les
lods
test
leave
or
es
inc
xor
cmp
popa
jecxz
cmp
leave
ds
pop
test
leave
ds
loope
sbb
cmp
jns
fwait
mov
cmp
test
lods
fwait
jg
xchg
cmpsl
add
mov
mov
enter
dec
cs
inc
pop
ficompl
and
repz
mov
fdivs
xor
xlat
pop
mov
dec
add
inc
lea
push
aaa
and
lods
movsb
push
mov
daa
mov
imul
inc
push
movsb
sbb
xchg
push
mov
enter
dec
xor
xchg
dec
cmp
or
test
nop
or
test
test
sub
mov
pushf
pushf
nop
cltd
xchg
xchg
sub
cmpsb
add
lods
or
push
xchg
xchg
xor
dec
push
frstor
mov
je
jmp
test
jns
jg
ljmp
roll
daa
roll
pop
mov
rcl
sarb
dec
pop
pop
imul
aam
mov
out
jge
icebp
adc
nop
push
sub
scas
sbb
jg
adc
and
inc
add
push
test
shrb
mov
inc
push
lods
adc
cltd
cmp
sub
or
push
loop
testb
lods
ljmp
lret
pop
cwtl
add
sub
or
and
add
sub
jbe
scas
mov
rep
ss
neg
pop
addr16
cmpsb
jnp
lock
push
add
mov
into
inc
sub
mov
xchg
test
sbb
pop
sbb
jge
or
pusha
fwait
int
outsl
push
push
dec
adc
loopne
or
pop
xor
dec
push
ds
out
cmpsl
pop
outsl
inc
or
jbe
jle
push
test
outsl
ja
cmpb
dec
mov
mov
sbb
mov
das
push
mov
ret
xor
lret
and
daa
cmp
lods
rclb
test
and
call
mov
sub
push
rcll
jne
inc
lret
sub
ja
loope
xchg
shll
fprem
lcall
inc
rep
es
je
xor
sbb
adc
ficomps
and
and
or
adc
lock
test
sbb
add
sbb
add
pushf
pop
vcvtps2pd
dec
data16
imul
outsb
lret
xor
jo
dec
push
cld
jne
pop
sbb
cltd
aad
xchg
into
ret
add
jl
icebp
sbb
loop
outsb
divl
xchg
daa
sbb
mov
imul
dec
sbb
add
dec
adc
jl
in
mov
mov
sub
cmp
fistpll
inc
mov
jne
push
mov
fsubrs
es
or
dec
jae
jb
cmp
loope
sbb
adc
data16
into
mov
jl
les
sub
xchg
xchg
or
cli
cld
push
mov
lods
xlat
icebp
pop
pusha
outsl
mov
test
je
divl
adc
xor
cmp
je
aaa
mov
sbb
fdivl
mov
and
jle
popa
add
mov
and
mov
jae
cli
push
mov
and
stos
bound
mov
insb
mov
mov
cmpsl
jo
ficompl
orb
pop
les
dec
outsl
stos
popf
inc
cs
add
shlb
ljmp
jmp
stc
movl
sub
mov
jmp
in
inc
add
pop
and
cmp
push
jmp
jo
fs
xchg
fdivl
add
jp
ret
lahf
or
mov
xchg
into
adc
inc
loop
inc
or
jnp
xchg
addr16
add
je
hlt
daa
int
or
clc
inc
push
inc
sbb
jae
testl
es
ss
fdivr
mov
test
lret
test
es
les
pop
xor
xchg
pop
pop
mov
add
push
iret
mov
jae
push
mov
or
fldl
push
xchg
stos
mull
add
jl
xchg
inc
push
pop
idiv
cmp
push
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
jg
int
dec
adc
inc
mul
pop
jb
cmp
or
fistl
jbe
dec
sub
sbb
and
cld
adc
or
fcmovu
fcmovu
or
fxch
push
push
sub
add
inc
sbb
in
xorl
inc
and
mov
jmp
jge
and
sbb
and
adc
or
xor
stc
adc
push
push
sarl
lds
push
es
mov
adc
push
and
jns
or
and
pmuludq
sub
add
sbb
or
clc
in
xchg
adc
mov
and
add
xchg
frstor
shll
fsubl
add
test
punpcklwd
dec
sub
enter
sub
out
xlat
mov
add
and
mov
jbe
test
dec
lret
mov
fwait
cmpsb
cmova
dec
sbb
cmp
mov
inc
cmp
les
jne
jno
call
jb
pop
or
fildll
aas
adc
lret
push
adc
test
or
jae
push
sub
test
mov
jne
inc
sahf
div
sbb
jl
incb
popf
out
adc
pusha
mov
sbb
pop
adc
dec
mov
dec
adc
push
sbb
cs
push
sbb
pusha
xor
dec
mov
push
mov
cld
sbb
ret
lds
add
in
pop
push
fwait
xor
cmp
jo
mov
adc
push
and
and
add
lret
js
xor
push
xchg
xor
mov
mov
add
sub
enter
add
pop
sbb
adc
adc
fwait
daa
stos
add
push
sbb
add
push
xor
pop
sbbb
sbb
push
jo
test
jge
in
daa
ret
sar
add
sarl
or
test
add
inc
lock
js
adc
add
pop
adcl
xor
aad
inc
cmp
push
pop
pop
push
idivl
loope
insl
mov
fisubrl
jl
mov
jo
repz
gs
push
pop
and
stc
add
xchg
add
arpl
pop
ret
sbb
or
shll
adcb
shrb
sarb
adc
iret
pop
lahf
adc
jmp
fcomps
jecxz
push
adc
add
loopne
xor
ret
icebp
ljmp
movsb
add
xor
jo
and
or
and
add
nop
adcl
inc
clc
cs
xor
push
out
cmp
je
imul
repnz
daa
mov
out
push
aam
xchg
pop
addr16
adc
cld
pop
and
outsl
and
cmp
ret
and
xor
mov
mov
xor
ficoms
dec
push
mov
lcall
setl
hlt
add
lods
hlt
icebp
push
dec
in
repnz
pusha
pusha
or
mov
pop
mov
or
je
cmp
cmp
jb
insb
mov
jg
pop
mov
and
cmp
roll
push
dec
sbb
mov
jo
ret
jg
sub
push
shlb
inc
inc
fcmovnu
adc
or
push
movsb
inc
inc
sbb
hlt
inc
adc
or
jp
jo
jb
inc
sub
or
pop
ficompl
pushf
lahf
push
push
sub
jmp
or
clc
lcall
pop
and
or
add
xchg
add
push
cs
daa
push
xor
push
mov
iret
inc
and
pop
xor
sbb
leave
movsl
mov
stos
pop
dec
sub
xchg
cmp
js
notl
arpl
mov
cld
mov
mov
push
and
or
aam
fcmovnb
or
fisubl
cmc
or
push
ret
sub
arpl
enter
pop
scas
test
xchg
fidivl
aaa
and
xchg
into
inc
lds
out
adc
out
in
js
xchg
pop
add
or
sub
rorl
add
mov
and
leave
and
mov
or
cmp
or
and
imul
cmp
gs
sbbl
pop
orl
or
ds
mov
sbbb
popl
push
cmp
push
aaa
sbb
jo
inc
lock
dec
or
or
int3
loop
mov
mov
sub
dec
or
pusha
int
push
xor
movsb
xchg
push
repnz
imul
mov
adcl
ret
inc
roll
hlt
add
pop
outsb
leave
test
insb
cmp
test
nop
or
jne
js
dec
test
loopne
or
lock
sti
cltd
jo
shll
or
sub
jne
fnstcw
sahf
push
jne
fadd
mov
xor
jmp
les
movsl
test
and
mov
jmp
xchg
add
cmp
lock
dec
je
cmp
sti
adc
scas
mov
mov
in
dec
or
je
scas
addr16
pop
sti
inc
mov
cmp
shlb
push
in
push
in
adc
add
mov
add
jnp
mov
push
or
je
and
pop
mov
mov
jne,pn
sbb
inc
mov
inc
ja
and
fwait
sub
adc
jbe
sti
mov
cmp
jge
mov
mov
lods
xor
push
stos
adc
xchg
mov
xor
fmull
push
or
imul
int3
and
pop
add
dec
sbb
pop
aam
push
adc
fs
outsb
sbb
and
mov
rcrb
in
dec
cwtl
jne
pop
rcrb
jmp
je
gs
xor
fildl
sub
lds
mov
negl
cmp
sub
js
and
cmp
or
ja
bound
and
cmp
jbe
dec
hlt
lock
push
cmpsb
andb
inc
jge
aaa
dec
jno
push
pop
bndstx
ja
cwtl
cs
and
jo
imul
into
add
loope
rcll
mov
dec
dec
or
sbb
mov
xor
mov
in
adc
sbb
mov
add
insb
inc
cmp
mov
ljmp
popf
loopne
sub
subl
inc
popa
pushf
sbbb
xor
pop
push
sub
test
cs
mov
and
repz
jmp
enter
lds
loopne
daa
mov
scas
mov
dec
add
add
add
in
aam
fcom
fimull
out
mov
movl
xchg
mov
add
adc
repz
fdivs
out
mov
push
push
jmp
incl
dec
or
jp
mov
push
cwtl
inc
push
adc
roll
movb
addr16
push
xchg
leave
and
jne
mov
stc
test
push
or
popa
adc
xchg
add
inc
jge
mov
ja
cmp
stc
pop
and
ss
jmp
xor
mov
dec
inc
inc
adc
add
or
rclb
inc
inc
inc
xor
stc
pop
es
jb
popa
push
add
rolb
push
mov
jg
les
in
mov
adc
add
push
sbb
adc
incb
outsl
sub
and
xchg
pusha
loopne
inc
mov
sub
ror
inc
add
xor
out
push
mov
cmp
call
outsb
ljmp
cwtl
insl
popa
popa
pop
or
sbb
mov
mov
insb
xor
jmp
mov
sbbb
mov
icebp
xchg
or
push
cld
add
inc
iret
xor
stos
je
jae
inc
dec
mov
dec
rorl
push
ss
adc
mov
dec
pop
sub
push
addl
hlt
sub
clc
or
push
popl
add
mov
inc
or
loop
popl
jne
pop
ljmp
or
push
dec
add
jo
or
xchg
stc
out
jb
mov
call
pop
mov
cmp
dec
inc
inc
or
jne
scas
shrb
repnz
cmp
push
roll
mov
jo
add
hlt
arpl
pop
insb
dec
mov
xchg
and
outsb
sub
pop
clc
dec
dec
jb
xlat
push
xlat
call
subb
in
shlb
pop
sbb
addb
sub
ret
inc
test
sbb
inc
sti
or
out
push
push
out
int
pop
or
inc
add
dec
jo
loope
fildl
xor
or
push
sub
and
pushf
xchg
lods
pop
ljmp
push
pop
push
dec
add
or
dec
add
fiadds
or
add
int
popf
orb
or
or
push
and
rcrl
cmp
inc
mov
mov
shll
js
push
pushf
pusha
sbb
pop
enter
mov
sub
sub
cmp
mov
push
jl
pop
pusha
jo
arpl
sbb
cmp
je
cmp
rorl
add
nop
and
sub
andb
and
push
cmp
daa
adc
mov
sar
sarb
jg
popf
clc
mov
addr16
adc
test
jle
xchg
add
xorb
push
mov
dec
xchg
or
pop
mov
ljmp
jmp
clc
add
out
add
and
lods
test
inc
add
and
mov
jae
or
sti
incl
hlt
inc
adcl
cmpsb
hlt
loopne
push
xorl
push
cmp
push
addb
sbbl
and
push
push
or
testb
and
or
adc
inc
mov
aas
push
insb
sahf
cli
or
xor
rorl
aam
inc
idivb
add
adcl
sub
mov
pop
and
arpl
push
add
jbe
sub
pusha
stos
inc
sub
adc
dec
movsl
or
mov
les
aaa
and
inc
mov
les
jmp
shlb
test
sub
xor
adc
rclb
cmp
loope
lock
pop
or
imul
dec
adc
ret
jmp
test
adc
loopne
or
xor
sbb
mov
push
roll
dec
loope
mov
sub
cmp
cmp
inc
mov
stos
adc
jb
jecxz
aaa
xchg
pop
xchg
dec
add
ret
sub
lahf
sbb
mov
cmp
ljmp
jns
lock
mov
imul
adc
neg
xor
jle
mov
popa
push
mov
into
bound
daa
mov
aam
sub
or
scas
or
test
dec
fdivrl
nop
lock
mov
sbb
movsl
test
add
stc
fsubl
jbe
push
jae
sbb
movsb
and
add
adcl
jle
js
adc
inc
inc
pop
sahf
lret
repz
jl
adcb
sti
leave
inc
pop
test
ds
cmpsl
repnz
inc
nop
inc
xchg
aam
add
repnz
lock
cmp
mov
sub
adc
cmp
add
add
sbb
lods
outsb
hlt
push
jne
add
data16
inc
mov
jno
add
rcr
and
sti
or
add
sarb
mov
dec
cmpsb
push
pop
and
add
push
cld
push
push
xchg
inc
and
jb
add
mov
xlat
xor
insb
pop
in
pop
iret
dec
shl
and
ss
xor
out
int
xchg
lret
fsubr
mov
fcmovne
clc
cmpsl
and
mov
mov
ss
or
arpl
pop
push
push
sbb
js
push
jae
add
and
es
sbb
add
xorl
inc
dec
or
sbb
cmp
pop
cmp
jg
add
fwait
and
jmp
or
test
xor
add
shrl
push
dec
repnz
or
fwait
sbb
imul
and
sbb
ja
xor
add
sub
btc
sub
aam
fsubr
push
ss
adc
xor
stos
sti
shll
and
xor
call
call
cmp
jne
sub
adc
outsl
mov
pop
mov
repnz
jae
adc
pop
outsb
popf
mov
sar
mov
rcr
out
push
faddl
fcomp
push
rcrl
sub
push
mov
mov
add
inc
mov
aaa
leave
test
ret
cs
das
dec
loop
push
xchg
dec
ljmp
jg
mov
xor
cmp
inc
jmp
scas
mov
pop
jbe
cmp
imul
add
or
aas
sbb
enter
mov
mov
lods
rcr
mov
sbb
fsubs
popa
int3
insb
add
mov
adc
cmp
mov
add
imul
mov
cmp
ja
jnp
push
ja
cld
and
add
push
ja
xor
push
or
and
cmc
or
in
stc
aas
shll
mov
in
sbb
movl
mov
sbb
fldenv
inc
sub
mov
movb
push
xor
cmp
clc
mov
push
add
pop
or
into
or
sbb
sbb
in
sub
or
out
cmpl
push
popf
and
stc
sub
push
nop
and
and
jle
sbb
lea
cmp
jbe
enter
jge
jg
mov
push
add
mov
or
or
cmp
mov
jle
cmp
jl
test
gs
je
enter
loopne
inc
mov
and
adc
std
jp
push
pushl
clc
int3
xchg
mov
cmp
and
mov
or
inc
lahf
call
in
int
xlat
mov
dec
je
sub
mov
adc
sub
push
lods
cmp
push
push
jne
inc
sbb
jecxz
jbe
cmp
or
sbb
sbb
mov
sub
rolb
cmpsl
arpl
mov
and
xor
or
push
xor
mov
xor
mov
nop
lret
ret
inc
jecxz
cmp
add
add
push
jl
push
jl
dec
add
mov
or
add
add
outsb
or
xchg
js
sti
jg
aas
add
insb
jns
sbb
lea
daa
sbb
pushf
sbb
mov
test
add
cmp
add
bound
push
push
adc
int3
adc
addr16
pop
dec
sahf
xchg
andl
aas
jae
and
cmp
jl
pusha
mov
mov
mov
sub
sbb
int
gs
xchg
gs
sub
fdivrl
cs
fneni(8087
adc
shll
loope
inc
xchg
mov
ret
and
jl
gs
add
xorb
push
push
js
sahf
gs
lea
sbb
inc
addr16
loope
fdivs
aaa
inc
mov
sbb
inc
push
clc
and
test
fists
stc
xchg
jp
outsl
mov
call
sbb
dec
cmp
pop
dec
or
pop
adc
inc
or
sbb
je
cli
jle
lcall
jbe
dec
cmc
fs
shlb
dec
jmp
lods
add
insb
inc
adc
mov
andl
or
add
lea
aam
jne
or
rolb
into
enter
cmp
inc
push
lret
ret
and
jne
fisubrs
movsb
push
mov
pop
push
cmpb
js
out
sub
shl
push
mov
testl
movsl
cmp
adc
ret
es
pop
add
cmp
mov
pop
mov
add
or
cld
mov
jle
lock
push
out
pushl
mov
cmc
repnz
pause
shll
loope
shrb
adc
push
cmp
out
xorb
cmpb
test
je
addr16
scas
pop
movsb
filds
push
pop
cmpl
aam
shlb
dec
jl
mov
jmp
cmp
or
je
or
imul
sbb
mov
movb
testb
cmpsb
add
xorb
mov
adc
or
popa
jmp
lods
xchg
or
xorb
and
mov
cmpsb
pop
call
dec
int
pop
adc
adc
adc
pop
imul
or
jne
mov
aam
jno
push
or
bound
or
sbb
cmp
inc
xor
dec
sub
test
mov
aaa
mov
fsubrl
pushf
sbb
add
jo
inc
les
xchg
xchg
pushl
mov
jmp
push
icebp
enter
jmp
xorb
mov
mov
outsl
sub
or
jns
popa
and
test
mov
in
fdivl
sbb
stc
pop
je
pop
xorb
push
and
or
xchg
test
gs
mov
jb
lds
or
inc
cmp
jae
push
cmp
jl
mov
inc
fadds
adc
inc
sbbl
jmp
pop
lock
jne
clc
push
mov
sbb
add
or
repz
dec
addr16
push
ljmp
jno
xchg
mov
adc
inc
add
mov
bnd
add
cmp
mov
pop
jp
leave
mov
icebp
push
sub
mov
xor
fwait
sbb
add
int3
xchg
mov
xor
dec
sbb
adc
lods
mov
jo
adc
shll
jne
in
mov
add
std
jne
jmp
frstpm(287
sbb
mov
or
push
arpl
jne
das
sbb
ret
pop
out
stos
mov
sarb
add
jl
les
xchg
push
scas
xor
inc
sbb
sub
inc
and
subl
sub
bnd
punpckhbw
aam
mov
and
add
bound
sti
clc
dec
sub
lock
sub
xchg
popa
mov
add
jg
dec
js
add
hlt
outsb
lods
adc
insb
aam
push
je
enter
in
pusha
jbe
sub
sbb
decl
xor
dec
jg
adc
ja
fld1
orl
sub
mov
lods
loopne
fdivl
xor
xlat
or
sbb
mov
aas
nop
popa
rcll
sub
push
push
pop
scas
out
pop
push
sbb
std
jb
xor
jg
xchg
or
pop
test
ret
test
cmp
mov
push
ljmp
sub
push
or
andl
and
lock
es
enter
lcall
adc
clc
push
mov
ljmp
xor
inc
mov
imul
cwtl
mov
dec
and
ss
mov
xlat
je
cmp
aas
repnz
shll
testb
mov
inc
add
movsb
adc
pop
cli
add
xorl
mov
iret
dec
mov
movb
je
mov
cmpl
sub
pop
adc
mov
cwtl
pop
push
pop
push
or
xchg
adc
outsb
lret
add
adc
push
xchg
push
dec
shr
jmp
das
xor
adc
mov
cmp
inc
cld
pusha
in
outsl
jecxz
push
mov
inc
cmp
mov
pop
test
mov
cld
jle
in
inc
inc
mov
fstpl
pop
jmp
push
add
mov
pop
pop
adc
dec
sbb
imul
mov
lods
or
imul
pop
and
and
and
cmpsl
dec
pop
sub
sbb
pop
neg
dec
outsb
je
xchg
cli
adc
pop
push
xor
lea
or
les
out
int3
cmp
fucomi
mov
cmp
divl
push
sbb
test
ja
push
dec
je
jo
mov
icebp
adc
sbb
adc
nop
push
xorb
hlt
orl
imul
add
sub
pusha
sub
mov
mov
xor
mov
rcrl
insb
test
rorl
cmp
xor
out
lds
aas
inc
shrb
inc
jnp
dec
pop
mov
push
pushf
inc
or
push
adc
mov
repz
imul
cmp
ss
in
and
sub
loope
in
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
enter
js
dec
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
sub
mov
je
pop
add
mov
add
lock
lds
fbstp
jle
or
imul
and
dec
jae
fwait
adc
or
rorb
and
or
mov
nop
or
xchg
std
adc
enter
pop
and
scas
fcompl
mov
pop
fs
adc
ret
sbbb
mov
dec
rolb
dec
jne
out
movsb
xchg
inc
adc
or
xchg
add
sbb
dec
mov
nop
cmp
call
and
adc
push
fnstenv
dec
cmp
inc
dec
sbb
add
les
push
dec
add
mov
clc
xchg
rcrl
aam
addb
ficompl
lret
call
cmpsb
test
add
push
lea
jne
pop
sahf
cmp
dec
inc
movsb
dec
or
add
mov
adc
test
pop
cmp
inc
shlb
or
inc
cmp
adc
xchg
and
loope
ret
idiv
pusha
add
test
add
fmuls
in
mov
xchg
mov
popf
and
sbb
rcrl
inc
lcall
pusha
bound
xor
sbb
jle
jbe
dec
pop
je
push
pushf
xlat
lret
rolb
or
mov
push
dec
and
jb
test
jge
dec
add
or
add
sbb
aas
push
gs
addr16
add
and
cltd
or
cmp
roll
enter
int3
add
jbe
or
or
push
sbb
push
mov
add
mov
or
pushl
push
or
adc
pop
mov
ret
xor
and
jg
addb
dec
jbe
js
les
adc
rol
xchg
out
or
loopne
int
add
and
or
fucomi
sbb
and
add
and
or
push
popf
pop
ja
xor
into
decl
inc
adc
adc
pop
mov
or
xchg
js
add
jl
cmp
jle
jb
push
mov
push
sub
jp
or
sbb
xor
push
pop
inc
cmp
or
clc
add
loope
xchg
push
call
push
xor
pop
inc
add
xchg
and
and
sti
inc
and
scas
xchg
push
insl
add
sbb
popa
inc
push
movsl
xchg
imul
mov
rorb
clc
mov
sahf
sub
mov
mov
xor
cmp
xor
mov
or
ljmp
loopne
xor
push
push
test
push
lea
push
and
pop
adc
cmp
inc
mov
add
sar
ret
mov
or
xchg
pusha
mov
sbb
xor
aad
adc
pop
ret
adc
adc
or
xchg
shll
xchg
inc
insb
rorl
test
mov
push
inc
pushl
mov
add
jns
dec
sub
mov
cmp
inc
popf
pop
and
lcall
pop
int
test
inc
ss
mov
xchg
test
out
in
jbe
adc
mov
pop
cmp
in
lods
outsl
dec
sbb
mov
andb
mov
mov
cmp
jle
add
stos
jmp
push
add
or
out
lret
add
ret
pop
fstpt
mov
lret
push
push
jnp
push
mov
adc
inc
call
jmp
push
dec
rolb
add
push
cmp
pushf
es
inc
pop
pusha
xor
loop
lods
jnp
imul
test
push
movsb
push
or
lahf
xor
dec
sub
rol
shl
cmp
mov
inc
incl
cmpsb
int
xorl
push
or
add
add
or
scas
sub
setnp
mov
ds
rorl
add
hlt
ficoms
inc
int
push
jmp
punpckhdq
dec
mov
push
je
cmp
test
clc
fsubs
cmp
sbb
popf
pusha
scas
fisttps
cmp
sub
add
sysenter
sbb
xor
inc
dec
add
sub
mov
roll
jl
iret
dec
and
jmp
xchg
mov
and
movsl
aad
sub
mov
cmp
mov
adc
cmpsl
clc
adc
or
inc
mov
adc
cmpl
fmuls
push
pop
push
icebp
xchg
and
inc
pop
ds
mov
cmp
movb
jmp
fs
dec
pushl
pop
jl
in
movsl
dec
add
in
and
xchg
loop
inc
cmp
jg
repnz
mov
inc
inc
shlb
adc
xchg
cmpsl
mov
or
add
inc
nop
aas
mov
shrb
dec
stc
pop
xchg
cmp
mov
adc
into
xchg
push
rdmsr
addr16
xchg
sub
addb
dec
and
into
sub
pop
lock
ror
or
sub
out
shrb
mov
jno
roll
xchg
cmc
adc
mov
sub
test
jns
je
add
adc
lret
jmp
or
and
stos
push
sti
mov
bnd
lea
mov
cmp
fildl
xor
rclb
cmp
shlb
push
test
jne
mul
pop
push
fnstenv
fidivrs
xor
sub
mov
fprem
shl
cmpb
mov
jg
icebp
ret
or
or
icebp
pop
or
pop
mov
sbb
leave
pop
test
mov
cmp
flds
cmp
push
xor
push
add
cmpsl
or
sub
and
push
pop
pop
pop
add
ret
or
clc
push
scas
inc
scas
adc
clc
or
sbb
jmp
sbb
xor
cwtl
mov
popa
add
push
jo
dec
jmp
unpckhps
aaa
and
sbb
or
jne
in
sbb
mov
aam
mov
mov
sub
xor
cmc
xchg
hlt
push
push
pop
movsl
add
mov
lock
sahf
insl
sbb
or
dec
push
and
mov
aaa
xor
and
scas
repnz
loopne
mov
shll
ret
aaa
fwait
push
mov
ljmp
mov
insl
sub
dec
out
pushf
cli
sbb
pop
sub
inc
mov
sbb
inc
js
or
add
rcl
mov
cmp
mov
xor
pop
cmp
xor
nop
divb
mov
sub
mov
mov
dec
or
sbb
daa
sub
pop
xchg
adc
push
cs
mov
dec
pop
inc
movsb
xchg
clc
pop
dec
sbb
push
pop
cmp
divl
lock
pop
jl
orb
in
call
sti
stos
jge
addr16
pop
fs
xor
test
push
adc
lahf
ficomps
push
xor
lret
mov
testb
pop
adcb
shrd
lods
pop
pop
and
sub
jbe
inc
and
jg
add
in
enter
add
xchg
xor
clc
je
or
pop
xor
add
lcall
lcall
lock
add
inc
and
mov
dec
cmp
push
jmp
sub
rorb
and
inc
inc
jmp
cmp
shlb
test
mov
js
add
js
pop
sbb
push
add
into
push
add
popa
add
mov
test
mov
clc
add
inc
lret
adc
adc
sub
test
push
push
lret
xchg
pop
nop
test
data16
dec
idivb
mov
jmp
imul
jecxz
arpl
mov
loop
jle
loopne
adc
jl
mov
sub
je
movsl
adc
push
pop
pop
pop
adc
jmp
movsl
cmp
and
pop
add
push
pushf
sub
sbbb
push
sbb
adc
pop
push
mov
jnp
push
cmp
sub
rclb
mov
push
fistpl
cmp
dec
call
icebp
aaa
movsb
faddl
stos
popa
gs
pop
sbb
dec
cmp
movsl
jae
pop
pushf
sti
repz
add
std
sub
sub
jno
add
mov
insb
dec
mov
dec
pop
mov
outsl
cwtl
or
mov
cmp
aam
inc
dec
cmp
or
daa
ret
sbb
pop
mov
inc
pop
pop
sub
sbb
rorb
pushf
mov
orb
cld
sub
push
mul
ljmp
and
int
jbe
mov
mov
jnp
pop
subl
dec
cmp
rorb
into
aas
arpl
jbe
repnz
das
adc
mov
dec
rorl
into
jl
push
jle
das
add
xor
sub
clc
jle
mov
js
add
in
add
xchg
pop
gs
pop
adc
mov
add
data16
adc
les
imul
jnp
iret
nop
xor
popa
jmp
xchg
add
inc
xor
jp
icebp
jne
and
mov
bound
leave
movsb
add
xchg
ja
out
mov
jmp
xor
mov
or
push
es
adc
inc
push
adc
mov
pushf
pop
mov
xor
pop
sub
add
je
push
popf
ds
cmp
cmp
mov
adc
data16
pop
testl
add
dec
repnz
rclb
inc
adc
cmp
es
int
rorb
js
fisttps
or
push
mov
test
push
mov
pop
add
lock
sahf
dec
cmp
mov
mov
test
and
add
sbb
repnz
mov
adc
nop
and
shll
enter
dec
xor
adc
or
mov
cmp
shr
add
jmp
fmul
and
and
and
push
js
sbb
cmp
adc
or
adc
test
xor
mov
inc
adc
je
push
sahf
mov
sbb
or
add
mov
and
sbb
leave
add
std
or
jmp
inc
popf
mov
mov
cld
mov
and
mov
jecxz
jge
add
or
jmp
jns
cwtl
cli
mov
test
and
mov
xor
sub
jge
je
add
and
adc
add
fistpll
ret
pusha
mov
pusha
loope
pop
pusha
and
jl
push
es
and
jecxz
pop
fstp
xor
inc
fidivrl
pusha
pusha
les
cmp
sub
push
addr16
sub
repnz
fiadds
push
es
adc
sti
add
fists
test
fisttps
or
cmpb
xchg
xor
in
dec
jne
lods
stos
mov
jmp
push
mov
xor
adc
mull
dec
fsubrs
push
subb
xorb
sbb
jmp
push
and
xchg
fsubr
imul
xchg
icebp
out
inc
flds
fldl2e
fisttpll
xor
pusha
fstpl
push
or
shrb
adc
mov
out
cmp
cwtl
push
cmp
fs
icebp
mov
insl
gs
sub
ficoms
addl
add
sti
cmc
push
or
or
pushf
insl
mov
mov
aaa
cs
lods
sbb
xchg
mov
sbb
loopne
adc
les
sbbl
sub
sbb
leave
jp
push
or
psubusw
xor
xor
int3
adc
mov
xchg
jge
add
pop
sub
test
cmp
lret
xchg
and
ljmp
fstpl
xor
add
stc
into
jbe
or
mov
repz
faddl
push
adc
add
jb
cld
push
or
repnz
xor
test
mov
lahf
adc
shrl
inc
sbb
pushl
orl
fchs
pop
push
loopne
mov
push
or
pop
lds
sahf
jmp
pop
movsb
roll
aam
push
inc
add
mov
decb
push
and
jbe
lods
inc
aam
sub
or
mov
push
add
mov
jg
add
movsl
add
jb
pop
test
test
lock
add
or
push
push
adc
pop
loopw
in
xchg
scas
or
movzbl
es
fcoml
iret
xchg
or
stos
icebp
mov
je
pusha
inc
loop
je
jl
push
add
daa
or
mov
sbb
mov
fisubrl
add
adc
or
inc
xchg
push
pop
sbb
dec
mov
mov
add
stos
sub
adc
add
mov
add
out
call
and
mulb
inc
or
pusha
cmp
xor
mov
loope
add
xchg
or
or
sbb
sub
scas
adc
mov
pop
mov
in
adc
loop
mov
stc
test
pop
and
lea
push
or
int
sbb
adc
sub
cmpl
pop
adc
add
loopne
int3
adc
mov
ja
jb
fnstsw
or
cmp
mov
pusha
add
jg
jae
pop
push
fsubs
jecxz
push
mov
vcvtps2pd
mov
push
cmp
mov
adc
add
pop
inc
jl
loope
ret
sahf
aad
test
push
jp
loope
lret
clc
lock
or
dec
inc
mulb
ljmp
and
enter
clc
cmpsl
pushf
je
sbb
sbb
sub
xchg
and
jg
push
pop
fadds
into
mov
es
pop
ja
rclb
xor
aad
mov
jne
jne
dec
pop
sub
aad
icebp
and
pop
push
sbb
shll
push
or
push
fs
dec
inc
add
or
std
add
dec
push
out
mov
push
rcrb
mov
cmp
push
add
out
shrl
shr
loop
pop
or
xchg
ljmp
mov
fsave
mov
adc
inc
loopne
insl
cwtl
and
xor
push
or
insl
or
push
mov
shrb
mov
enter
sbbb
fwait
int3
and
push
mov
ficompl
inc
adc
and
push
cmp
sbb
call
mov
mov
mov
adc
je
jmp
addr16
mov
loopne
inc
xchg
scas
push
out
mov
and
es
mov
je
mov
and
xchg
ret
repz
in
out
add
pop
adc
mov
add
mov
insl
jmp
or
add
and
pop
test
neg
mov
shlb
and
cmp
mov
pusha
cmpsl
lock
mov
out
insl
push
inc
test
sub
and
das
repz
sbb
push
jnp
add
inc
ds
and
xor
adc
sub
xchg
cmp
push
xorl
pop
push
cli
pusha
enter
mov
adc
fnsave
je
psubq
xchg
mov
ljmp
das
pop
add
or
or
mov
mul
andl
dec
gs
add
adc
ljmp
sub
movsb
ljmp
mov
dec
cmpw
outsb
inc
mov
inc
inc
fdiv
inc
inc
jl
mov
dec
cmp
cmpsl
inc
pop
adc
xlat
jg
dec
or
fchs
dec
shlb
loopne
jle
es
and
aas
sub
add
mov
jg
test
push
daa
mov
pop
test
jne
ret
mov
hlt
mov
sub
stos
test
or
jno
dec
mov
or
aam
xor
mov
rcrl
cmp
rcrb
movsl
pop
dec
jns
dec
xchg
loopne
lea
mov
pop
subb
inc
shl
pop
dec
or
mov
pop
pop
inc
and
in
pop
aam
loop
rolb
adcl
std
rorb
jmp
push
cltd
insb
pop
and
mov
shlb
testl
insb
sub
icebp
mov
dec
dec
jbe
dec
mov
add
mov
or
jb
cmp
cltd
js
sbb
dec
cmp
outsb
das
lods
add
bnd
incb
jae
mov
rol
mov
adc
jns
xchg
cs
and
and
or
popf
cmpsb
movb
push
add
hlt
ljmp
sti
cmp
dec
dec
stos
inc
and
daa
test
pushf
rsm
xchg
cmpsb
test
aam
xor
cmp
inc
inc
pop
rorl
cli
or
mov
out
and
ret
cli
sub
not
in
popf
je
inc
or
fisubl
iret
pop
ds
icebp
cmpsb
and
push
or
jne
shl
rorb
and
and
mov
jl
loope
mov
add
pop
sub
sarb
je
mov
movsl
data16
les
jno
inc
mov
lahf
cltd
inc
dec
mov
hlt
test
jb
jno
jmp
addb
sub
sbb
push
dec
add
cli
wrmsr
inc
sbb
adc
loop
fs
push
pop
xor
pop
lds
movsb
xor
divb
mov
dec
jns
inc
xor
enter
inc
or
sbb
ret
jecxz
add
loope
dec
mov
push
cmp
add
jo
mov
andb
loopne
mov
je
adc
sbb
loopne
loopne
jl
pop
andl
push
mov
pop
movsb
xchg
adc
loopne
jo
and
mov
or
into
jle
lods
cld
sbb
dec
xor
jge
aas
sbb
subb
scas
shl
dec
xchg
xor
mulb
and
or
inc
mov
push
jp
mov
stc
and
inc
or
xchg
bound
pop
pop
xchg
add
xchg
sub
sub
adc
adc
nop
inc
daa
xor
adc
in
xchg
adc
or
repz
sub
adc
xchg
cmp
or
sbb
xchg
mov
or
sbb
sub
dec
and
fcmovbe
movsb
push
xor
push
adc
es
mov
or
shll
xchg
inc
xchg
ljmp
mov
movsb
outsb
mov
lods
mov
lcall
cmp
in
jne
inc
jmp
mov
sub
push
loope
or
xchg
add
pop
int3
mov
sub
cmp
ja
push
dec
jmp
test
mov
push
cmp
rolb
add
je
adc
aas
mov
adc
imul
ljmp
jmp
andl
jmp
cmpsl
dec
mov
lods
jbe
mov
adc
fsubr
ljmp
mov
push
fidivrl
push
inc
jle
cmp
push
xor
sarl
orl
bound
xchg
xchg
lods
mov
add
shrb
pushf
push
jp
sbb
add
push
jmp
sarb
dec
mov
jge
sbb
dec
ja
mov
ret
outsb
mov
mov
pop
jge
pop
jnp
jae
cmp
test
hlt
jbe
nop
mov
adc
dec
dec
jae
popa
inc
cs
imul
sbb
gs
pop
mov
scas
inc
add
outsb
mov
dec
decb
dec
lods
out
push
sub
ja
adc
gs
orl
lods
jnp
or
pop
push
and
andb
cmp
mov
jo
test
mov
and
call
mov
shll
push
add
inc
test
nop
mov
roll
jbe
clc
push
push
testw
mov
push
mov
add
rcr
hlt
pop
test
lds
fwait
mov
mov
mov
imul
mov
fbstp
adc
or
jecxz
ret
jmp
mov
jmp
push
cwtl
pop
pop
inc
mov
mov
push
mov
dec
sub
or
push
hlt
dec
dec
lods
sbb
inc
lea
and
pushf
xor
sub
jge
xor
dec
adc
aaa
dec
sbb
test
stos
out
mov
cmp
adc
mov
jmp
jmp
fstp
in
xchg
mov
jge
jle
add
sub
xor
adc
push
addr16
add
mov
test
mov
mov
sarl
push
mov
addr16
inc
mov
sbbl
rorl
push
mov
dec
mov
cmp
push
orb
or
mov
and
sar
mov
mov
decb
ret
and
adc
rcrl
into
nop
shlb
ja
dec
mov
sbb
ja
or
or
aad
lods
mov
pop
movb
testl
jne
enter
jne
outsb
or
jne
test
into
jne
aaa
or
mov
or
cmp
cmp
jne
pop
lcall
jne
paddsw
add
inc
cwtl
or
or
sub
les
or
push
movsb
push
loope
jp
scas
sbb
cld
lea
cmp
or
mov
ja
mov
add
xor
mov
sub
sub
dec
sbb
stc
jg
add
xchg
push
add
js
inc
lret
add
nop
mov
gs
lods
add
or
shr
insb
and
push
out
jge
sbbb
jg
or
aaa
and
pop
adc
inc
mov
les
push
xchg
jno
notb
mov
outsl
mov
adc
dec
fcom
insl
fadd
loopne
shr
or
das
dec
lods
jge
shl
call
push
aam
aam
shrl
push
das
int3
mov
mov
rolb
and
or
sub
lcall
cmp
add
ficompl
shlb
in
cmp
sti
pop
test
in
fiadds
push
call
mov
mov
cmp
les
jo
fdivl
adc
mov
add
ja
orb
push
sbb
cmp
sub
add
lret
into
sbb
scas
push
xchg
rclb
addr16
dec
and
les
and
add
xchg
or
push
lret
das
sub
add
jo
fiadds
sub
data16
add
adc
les
bound
inc
push
pop
roll
xchg
xchg
add
pop
pop
imul
add
push
and
push
imul
in
cmp
sub
out
sahf
dec
lods
call
or
add
push
sub
mov
popf
jmp
inc
add
fwait
test
pop
jne
movsb
lods
arpl
pop
push
add
or
inc
mov
mov
shrb
es
rorl
dec
pop
cmp
or
dec
in
push
stos
and
dec
pop
push
xchg
xchg
pop
jnp
adc
inc
cs
or
ss
lods
jge
push
cmp
je
or
out
mov
dec
cmp
adc
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
adc
stos
mul
pop
add
fcompl
addr16
xor
sub
or
cmp
pop
jae
push
jae
outsb
filds
sarl
sbb
pusha
or
pop
shlb
in
ret
xor
cmc
sub
push
xor
push
pop
dec
lods
and
jnp
add
mov
adc
gs
shlb
scas
jge
jmp
xor
insb
add
rolb
hlt
mov
addr16
pop
mov
cmp
je
test
fdivs
or
add
mov
fwait
dec
adc
push
and
push
pop
je
setg
lahf
test
out
clc
add
mov
add
hlt
and
cmp
mov
je
jge
add
jle
push
inc
xchg
js
cmp
ficompl
js
push
xorb
mov
es
jnp
xchg
pushf
sbb
loop
lock
add
lcall
jmp
sub
add
adc
inc
pop
jne
cmc
xor
lds
dec
add
mov
cs
xor
add
les
sub
xchg
fs
pop
negl
ret
or
adc
push
pop
sub
add
mov
prefetcht1
dec
outsl
xchg
inc
add
pop
dec
jle
movsl
xor
les
jbe
mov
aam
inc
and
rol
and
or
jmp
subl
shlb
data16
dec
adc
jge
mov
sub
adc
lahf
adc
sbb
cmp
movsb
in
shlb
jo
add
xchg
push
sbb
nop
js
mov
sub
xor
inc
std
add
icebp
or
jno
and
jle
ljmp
sbb
push
jno
ret
jge
xchg
imul
arpl
fpatan
iret
in
jmp
push
cmp
popa
cmp
or
je
xor
adc
cmp
add
inc
and
lret
lret
mov
push
out
xor
mov
or
sar
or
add
lea
outsl
loope
out
add
shl
dec
test
movsb
mov
xorl
aaa
dec
cmp
pop
push
xor
and
enter
cmp
adc
js
push
pushf
imul
loopne
das
xor
leave
and
add
mov
xchg
inc
and
popf
movsb
or
dec
fwait
pusha
mov
inc
neg
sbb
jecxz
fdivr
das
jle
lock
ret
daa
xor
or
jne
pop
cmp
inc
inc
adc
sahf
add
mov
or
inc
cmp
ss
sbb
adc
xchg
and
add
add
or
fldl
add
ja
sub
nop
test
or
test
xchg
movswl
les
lea
faddl
jl
add
xchg
jbe
add
icebp
ss
add
shrd
cltd
push
addb
cmp
fbstp
jge
sbb
fdivl
clc
mov
or
cmp
mov
stc
inc
add
dec
jmp
or
sub
xchg
ret
or
dec
leave
or
insb
incb
adc
loopne
push
xor
rolb
pop
cmp
scas
or
bound
lcall
xor
jo
mov
and
dec
and
add
outsl
push
mov
or
fbld
lods
dec
jb
push
sub
or
fidivrl
push
xor
loope
mov
lock
or
sub
shll
push
or
fdivrl
add
jbe
mov
sbb
not
mov
cwtl
sub
jne
jg
lods
jb
fsubrl
dec
inc
dec
pop
or
jae
and
lcall
add
daa
subl
adc
add
cmpsb
stc
mov
jno
in
or
es
add
test
or
cmp
jbe
mov
in
adc
loopne
jb
sbb
push
or
mov
and
adcl
xchg
sbbl
and
pop
or
push
sub
inc
sub
xor
jge
loop
inc
daa
mov
jne
jl
push
mov
cs
push
xchg
pop
imul
stos
pusha
daa
pushf
add
cltd
out
into
les
push
xchg
pop
sbb
rclb
cmp
mov
cmp
push
mov
adc
sub
ds
xchg
add
repz
mov
push
cmp
mov
lret
jbe
adc
push
sbb
xchg
lea
mov
and
push
push
insl
dec
add
insl
cmp
mov
jl
jle
out
xchg
fimuls
inc
or
mov
mov
aam
inc
shr
loop
inc
fsubs
sbb
nop
call
jge,pt
fldt
jle
gs
or
pop
data16
lret
ds
out
cmp
lea
popa
je
inc
je
dec
pop
xor
mov
and
xor
jmp
mov
inc
push
adc
cmp
sbb
or
lcall
mov
or
mov
enter
and
sbb
fldl
fdivl
fmull
insl
push
pop
clc
fstps
or
mov
fs
jecxz
inc
push
shlb
add
rolb
adc
lahf
stos
cmp
xor
push
and
and
xor
decb
arpl
and
pop
adc
xor
dec
mov
sbb
push
mov
inc
inc
ja
xchg
cltd
shlb
jmp
jmp
xor
mov
cmpb
jne
jp
or
ss
dec
cmc
pop
rcl
jae
lds
xchg
sub
add
hlt
mov
hlt
jb
stos
mov
das
movsl
xchg
cmp
addb
hlt
dec
jo
dec
jmp
lahf
xchg
ss
mov
aad
cld
dec
fisttpl
lahf
dec
push
sub
and
sub
pop
mov
mov
sub
push
mov
xor
mov
aaa
sub
pop
cmpsl
sub
push
cli
sub
push
cmp
aaa
dec
fwait
je
sub
shlb
or
sub
mov
dec
das
int
pop
inc
mov
addb
adc
mov
lds
pusha
lret
mov
cmpl
push
add
push
or
push
xchg
push
pop
sbb
dec
push
mov
jno
adc
sbb
imul
pop
pop
call
rorb
xor
test
inc
pushf
xor
lret
or
mov
mov
adc
sub
xor
cld
pusha
mov
jle
adc
ret
testb
adc
or
jecxz
daa
aas
int
lock
sub
adc
jl
xchg
iret
cmp
inc
mov
sarb
mov
nop
add
cmp
xor
dec
das
gs
or
aam
fisubs
or
jmp
testb
je
push
ljmp
and
roll
xor
xor
sbb
xchg
stos
int
jae
movsl
pusha
push
xchg
cmp
jne
loop
cmpsb
outsb
test
adc
add
fimuls
xchg
rorl
rcll
dec
mov
sbb
add
push
sbb
es
icebp
sbb
aas
xchg
push
push
mov
mov
jp
arpl
and
push
into
push
leave
push
pop
sub
aad
add
cmp
pop
icebp
in
cld
cwtl
adc
fs
daa
mov
or
push
sbb
jo
push
movsl
add
mov
fldenv
jns
jne
test
xchg
iret
mov
icebp
cld
hlt
fsts
cmp
lock
or
sub
mov
rcl
xor
pop
and
imul
jo
shl
or
xor
aaa
mov
loopne
cmp
jge
not
and
dec
adc
loopne
xor
or
das
in
mov
lock
and
adc
sub
push
arpl
and
xor
cmp
sbb
inc
jmp
fbld
and
add
and
mov
cmp
mov
aaa
xor
cmp
inc
test
data16
sub
sub
jle
push
push
cmp
mov
xor
fs
mov
outsb
push
prefetch
adc
jmp
inc
add
ljmp
jp
les
fldl
inc
fstps
das
adc
fidivs
pop
testl
ror
dec
dec
pop
adc
lock
sub
mov
push
loope
jnp
mov
or
jge
xchg
adc
xchg
pop
mov
lcall
aaa
test
xchg
mov
dec
movsb
mov
pop
sarl
sub
jmp
push
test
leave
js
adc
sysexit
sbb
xchg
ffree
ljmp
inc
jmp
test
adc
xchg
ja
leave
xchg
add
adc
xor
stos
fimuls
nop
cmp
inc
sub
fcoml
sub
mov
lods
rclb
inc
sub
test
jb
ret
jmp
xor
and
out
mov
sbb
mov
leave
js
dec
push
insb
jecxz
jb
mov
jo
out
push
inc
and
adc
xchg
mov
adc
sbb
sbb
xor
mov
xor
ret
or
dec
xchg
lods
push
loop
insl
mov
jge
adc
or
sahf
xchg
and
mov
adc
sub
add
push
cmp
pop
mov
add
adc
and
int
mov
dec
cmp
lea
or
adc
pushl
add
or
outsb
imul
fcmovb
jmp
std
add
pop
or
mov
add
add
or
bound
scas
push
cmp
add
in
inc
test
or
sbb
mov
fildl
je
add
adc
xchg
adc
adcl
inc
loop
and
lret
mov
dec
testl
mov
add
jo
add
ss
stos
or
mov
cs
push
sub
adc
repnz
and
loopne
lock
push
push
jbe
enter
stc
mov
decb
jo
cmp
sub
inc
or
call
cli
xor
add
or
shl
andl
adc
sbb
cwtl
push
add
incl
stos
imulb
or
test
push
sysret
xchg
lret
je
aam
cmpb
loop
test
sub
inc
cmpsl
cmp
xor
loope
fsubl
mov
sub
in
push
cmp
fstpl
push
add
sbb
sbb
cmpsl
sbb
sub
jne
xorb
push
ljmp
mov
enter
cli
fbld
jns
push
std
or
push
adc
dec
inc
fiadds
adcl
cli
cld
inc
fsubl
mov
les
or
pop
cmp
or
insb
outsb
pop
mov
jbe
sub
mov
lock
jl
cmpb
jl
xor
or
je
cmpb
idiv
insb
xor
inc
xchg
adc
into
push
xlat
push
subb
inc
shrl
pop
inc
dec
inc
push
push
mov
push
push
and
pop
nop
iret
arpl
lods
loopne
inc
inc
adc
sahf
ss
and
adc
stos
adc
fisubrs
call
jmp
gs
adc
or
mov
call
pop
insl
andb
adc
enter
rcrl
xchg
dec
out
or
test
jb
add
adc
push
fcmovu
add
shll
dec
pusha
mov
loope
dec
jo
or
hlt
scas
or
ds
aam
add
hlt
inc
dec
dec
pop
pop
test
push
jl
jne
mov
jmp
movsl
xor
sub
xor
insl
mov
sub
les
adcl
cmp
scas
incb
mov
aad
xor
in
sub
inc
inc
out
or
xor
fdiv
fiaddl
sbb
and
repz
inc
sbb
or
or
sbb
adc
sbb
push
push
inc
and
fldenv
fcomi
sbb
xor
dec
sbb
sbb
and
or
inc
fisubrl
dec
jns
fwait
dec
jne
add
pop
adc
icebp
mov
adc
lods
rcl
ljmp
dec
and
shr
test
pop
aam
stc
mov
pop
shl
idiv
and
cld
je
xchg
ds
pop
divb
or
and
es
jg
push
mov
sbb
mov
add
xchg
stos
mov
or
es
loop
cmpsl
roll
xchg
test
je
push
or
into
jbe
push
and
jns
aas
jp
cmc
push
add
cmp
mov
add
and
rolb
mov
cmp
add
xchg
or
rcll
sbb
mov
sbb
and
push
lods
xchg
xor
gs
or
or
test
push
int3
dec
fstpl
push
push
cld
and
cs
int
dec
pushl
dec
fidivs
orl
add
jge
sub
xor
xor
in
leave
jne
cmc
fdivs
adc
testb
lock
xor
push
sub
leave
je
and
movzbl
mov
push
inc
clc
scas
out
es
mov
je
les
lahf
idiv
int
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
inc
shll
leave
adc
arpl
xchg
xor
idivl
pop
pop
inc
ljmp
mov
add
push
inc
add
scas
ret
loop
add
ja
push
xchg
addb
pop
lahf
rorb
xor
pop
pop
add
mov
sbb
or
jmp
imul
mov
fdivs
push
push
inc
loop
jecxz
mov
test
adc
mov
jb
ror
ja
lret
lods
movsl
enter
js
sub
sbb
in
mov
xor
std
add
in
adc
push
and
in
aam
ja
jmp
mov
pusha
mov
adc
mov
rorb
pop
test
lods
fwait
xlat
mov
jno
cmp
pop
mov
pop
inc
sahf
test
outsb
pop
sub
xchg
xchg
movsb
dec
xchg
xchg
xor
sbbl
add
in
sbb
mov
sti
pop
and
add
inc
shlb
sbb
inc
mov
or
add
pop
jle
popa
pusha
test
outsb
ror
jns
out
push
rcl
rcl
aad
jns
out
xlat
fcomp
dec
adc
fstpt
mov
lods
nop
data16
movb
jmp
or
movsl
mov
into
pop
adc
mov
jne
cmp
test
shlb
or
add
mov
mov
add
push
inc
inc
loope
bound
fistpl
aas
leave
mov
mov
and
or
push
bound
sarl
in
ja
test
jo
jmp
icebp
adc
mov
push
xor
push
xor
push
fwait
std
inc
test
adc
add
add
pop
xor
rorb
lcall
sub
call
imul
lea
add
mov
inc
js
mov
ss
neg
jmp
test
pop
addr16
out
loop
push
pusha
inc
xor
pushf
sub
adc
sbb
into
call
push
mov
xchg
test
adc
sti
add
es
pushf
push
add
or
inc
shr
or
add
push
or
jne
shlb
lock
fucomp
clc
push
mov
shl
pop
sti
cmp
mov
and
lea
pop
sbb
subl
jae
xchg
xchg
dec
pop
add
pop
inc
lods
fmuls
push
jns
adc
mov
in
fstpl
jns
ljmp
les
or
mov
xor
rcr
inc
dec
mov
dec
jge
mov
rolb
push
mov
push
lea
les
insb
dec
xchg
mov
or
or
or
sub
or
ret
movsb
sarl
repz
addl
add
cmpl
mov
shll
add
clc
jle
jle
jne
test
add
or
mov
sar
loopne
icebp
aaa
in
and
hlt
rorb
push
push
inc
fsubl
push
lret
movl
xchg
xchg
pop
mov
lods
ss
sub
insl
clc
in
out
mov
mov
or
dec
inc
push
push
adc
dec
add
lock
xchg
lock
idiv
cli
inc
push
in
sub
div
les
or
or
mov
movsl
xor
call
mov
adc
mov
sub
ret
push
lods
sub
andl
leave
push
pmaxub
and
mov
rolb
lcall
mov
rcrl
mov
in
sbb
push
cmpsw
add
push
cmp
repnz
push
push
sub
loop
out
jae
jmp
mulb
jb
push
pop
mov
mov
repnz
or
call
mov
push
cmp
fdivrs
aam
in
push
sbb
inc
inc
test
dec
ss
xor
xchg
mov
mov
mov
xor
xchg
mov
mov
sub
cld
lea
fcmovu
mov
mov
push
push
add
add
lods
sarb
pop
roll
and
movsl
add
jns
sbb
xchg
add
sbb
mul
sbb
jp
negb
test
push
sbb
jge
or
orb
jge
inc
pop
and
lock
ret
sbb
adc
ljmp
in
pop
rcll
pusha
mov
fstl
add
sub
insb
loope
les
inc
add
sbb
adc
inc
add
add
push
nop
aad
sbb
sbb
cmp
adc
or
cli
es
out
adc
leave
add
or
stos
ret
shr
pop
add
hlt
cmp
mov
jb
push
rorl
test
jne
sbb
adc
xor
fiadds
inc
imul
rcrl
loopne
pop
movsb
mov
loopne
fsubr
and
dec
jbe
pop
add
and
into
movb
mov
push
adc
sub
push
sti
push
int
aas
and
xchg
mov
xchg
or
or
mov
add
sub
add
into
out
enter
js
cmpl
stos
rclb
jbe
xabort
fimull
js
add
enter
pop
loopne
lret
daa
pop
push
shlb
add
testl
jne
incl
mov
add
in
into
or
mov
inc
hlt
rcll
inc
in
rcr
and
dec
nop
dec
mov
dec
cmp
jge
pop
cmc
cmpsl
push
sub
cmpb
or
add
dec
cmp
jae
mov
add
add
fadds
add
adc
inc
pusha
repnz
jmp
add
or
dec
xor
mov
adc
and
add
push
add
cwtl
jbe
ret
adc
fisubl
enter
or
push
fcoms
test
out
sub
mov
mov
sub
inc
xchg
push
or
adc
fisttps
jmp
shll
xor
xchg
push
or
cmpsb
mov
add
or
pop
pop
scas
add
adc
jo
dec
mov
inc
jo
pop
mov
dec
dec
xor
xor
xchg
or
jae
fcmovnb
push
aas
test
lret
lret
shll
cmp
xor
into
jne
xchg
xchg
pusha
inc
mov
call
add
rcrl
mov
add
ret
jne
or
cmpl
rorb
sbb
inc
push
pop
jae
or
movsl
test
adc
and
mov
or
mov
mov
push
je
dec
pop
jmp
pop
push
inc
adc
xlat
dec
pop
add
and
into
jne
cli
and
and
and
xchg
sbb
inc
jge
and
xchg
imul
ret
or
add
or
nop
jp
adcl
cld
xor
cld
cld
mov
xorb
or
or
notl
inc
stos
jg
or
out
add
xchg
xchg
je
or
aam
adc
out
andl
stmxcsr
jnp
push
sub
bound
cltd
ss
or
xor
int
add
or
adc
into
mov
xchg
cmp
mov
mov
dec
sahf
pop
out
xor
inc
jg
into
into
mov
mov
outsb
popf
inc
inc
pop
sub
push
pop
xor
aaa
nop
pop
cwtl
pop
mov
cmpb
shlb
add
aas
movsl
test
dec
mov
push
lcall
out
ret
pop
test
add
repnz
add
add
adc
test
and
lret
dec
repz
je
and
imul
sub
pop
mov
sub
sbb
lret
dec
dec
lret
push
xor
rcrl
xchg
push
add
mov
push
dec
mov
and
xchg
sbbb
or
add
sub
mov
lods
pop
fmul
adc
imul
cmp
mov
xor
push
fcompl
adcb
cmp
mov
add
mov
xor
ficomps
push
sbb
mov
and
daa
orl
or
and
push
movb
adc
jge
addr16
or
scas
mov
lea
pop
or
jmp
push
dec
scas
sub
push
mov
dec
sbb
xor
and
adc
xchg
mov
insl
add
or
int3
inc
jmp
adc
dec
sub
cli
or
add
jo
or
out
je
push
call
mov
mov
cmp
jbe
inc
inc
int3
call
jle
testb
imul
adc
out
ljmp
jo
jbe
addr16
jmp
or
sbbl
outsl
enter
aam
fcomip
test
add
movsl
rolb
ret
jns
ret
dec
mov
movl
xchg
shlb
sub
pop
cmpsl
sbb
jnp
rcrl
jmp
and
mov
add
xchg
aas
sbb
in
push
cmpb
pushl
cmp
fbld
inc
test
je
test
xchg
nop
push
xor
mov
addr16
pop
popf
lret
inc
push
fcoms
fs
sbb
xchg
cmpl
mov
test
xchg
shl
cli
shlb
movsb
jo
dec
fcoml
dec
dec
or
int3
out
pusha
xchg
dec
inc
sbb
clc
hlt
xor
stos
jg
pop
inc
add
adc
pop
jge
lea
xor
pusha
push
pop
rolb
ss
imul
popa
add
movsb
xchg
lods
cmpb
jl
and
xor
subb
cmpsl
popa
push
popa
push
adc
dec
mov
adc
adc
push
add
inc
addr16
outsb
cs
or
jae
add
mov
cmp
jmp
push
push
xlat
xchg
or
cltd
push
mov
pop
mov
cmp
lods
fsts
add
sar
sub
das
jp
pushf
jmp
xor
mov
xor
or
inc
hlt
or
inc
push
jne
push
inc
push
shlb
lods
movsb
mov
loopne
push
xchg
gs
sub
mov
fisubrl
lcall
sbb
dec
mov
fmull
push
outsb
inc
add
jbe
fsub
mov
xor
xchg
rolb
xchg
jno
jle
pop
add
sbb
clc
mov
sub
mov
outsl
stos
mov
and
sbb
dec
sbb
dec
rorl
fldt
notl
jge
adc
sbbl
mov
sbb
xor
mov
call
push
sub
pop
sbb
dec
ficomps
push
nop
mov
lea
xor
jbe
mov
int3
aad
js
adc
repnz
xor
mov
push
add
fsubs
outsb
and
loopne
jmp
dec
loop
outsl
subb
fisttps
lcall
sub
test
mov
js
mov
rcl
pop
andb
or
adc
sbbl
inc
js
jno
or
xchg
test
sar
fcompl
xor
imul
imul
jle
adc
sbb
les
and
cmpsb
mov
push
lcall
sbb
dec
pop
data16
inc
hlt
xor
jbe
fsubs
sub
and
push
adc
or
add
push
mov
scas
mov
testb
js
jno
push
testb
push
push
add
mov
or
sbb
xchg
mov
rorb
sub
adcl
sub
test
add
cmpb
sub
gs
daa
fs
adc
cmp
test
adc
gs
clc
nop
mov
sbb
aaa
adc
data16
jp
xorb
mov
ja
mov
dec
pop
xchg
ret
das
cmp
pop
or
mov
mov
and
loop
or
loope
and
mov
mov
aad
push
out
cvttps2pi
mov
test
cmc
push
dec
fbstp
add
fld
adc
mov
push
xor
adc
jmp
fsts
jno
outsl
cwtl
mov
xor
ss
add
jmp
cmp
fcomp
pushf
fstpl
adc
test
cmpsb
pop
or
pop
push
xchg
push
push
jge
pop
cwtl
cs
sub
mov
or
xor
outsl
movsb
xchg
or
dec
in
iret
mov
js
push
out
mov
or
fdiv
push
incb
gs
addr16
movsb
add
call
in
inc
ds
nop
imul
in
mov
data16
jb
nop
mov
push
mov
shl
jbe
cmp
or
inc
mov
push
jb
lret
add
cld
fsubp
cmp
dec
dec
xor
pop
fcmovbe
push
or
shlb
cmp
addl
call
insl
test
test
adc
lock
lock
rcll
jp
fsts
call
nop
and
mov
in
aam
adc
jo
shlb
sti
add
adc
js
push
repnz
jecxz
mov
inc
jne
adc
mov
and
adc
jge
jge
sub
cltd
adc
dec
sbb
jne
cmp
sub
inc
inc
adc
pop
jg
jge
xchg
lret
mov
push
stc
lret
mov
pop
fcoms
rorl
jle
xorb
lret
push
enter
cmp
or
xchg
cmp
bound
and
or
push
jg
test
in
sti
xor
mov
or
and
pop
fiaddl
cmp
inc
adc
call
fwait
aam
clc
sbb
les
test
pop
dec
in
xchg
in
pop
mov
push
mov
pop
pop
dec
outsb
push
in
movups
xor
jne
out
xor
sub
insl
push
test
fcoms
mov
repz
xchg
fmul
leave
adc
pop
xor
lock
lahf
xchg
jl
lret
pop
hlt
add
aad
mov
or
sbb
xor
pop
xor
add
fisttps
pop
and
sbb
and
popl
mov
jmp
dec
cmpsb
dec
dec
dec
or
or
xchg
je
call
cmpsl
aam
cmp
pop
sub
es
xchg
test
or
imul
fsubr
xor
cmp
test
adc
dec
adc
and
aad
sub
leave
xor
cmp
xor
and
inc
dec
int
and
fs
ds
insb
out
add
fldt
shll
rol
sbb
mov
sbb
int3
lods
sbbl
add
fwait
mov
in
jne
dec
dec
in
dec
movsl
test
jb
sbb
aad
jmp
bound
dec
rolb
aam
lods
sub
pop
leave
and
jnp
jno
or
mov
adc
sbb
cwtl
push
pusha
and
aaa
les
nop
jmp
or
or
or
or
and
ret
shl
mov
insl
dec
push
mov
dec
adc
movsl
jecxz
jmp
aam
and
pushf
in
mov
or
cmp
pop
sub
jae
mov
sbb
arpl
mov
imul
xchg
sub
jo
adc
adc
and
aam
mov
mov
in
dec
cmp
xor
call
iret
call
sub
pusha
mov
jbe
xor
xchg
push
or
inc
xchg
in
adc
add
or
sbb
lock
inc
rorl
mov
daa
ret
mov
lgs
mov
mov
mov
xor
add
dec
fdivl
dec
sbb
adc
mov
push
jb
int
cli
pushf
jnp
inc
je
mov
mov
in
cwtl
stos
dec
lea
mov
out
mov
leave
out
pop
int3
out
sub
dec
jae
mov
js
xchg
fisttps
push
mov
add
dec
clc
fldt
and
sub
mov
pop
mov
out
and
insl
mov
mov
jnp
xchg
inc
jo
adc
dec
push
fistl
pushf
mov
test
lods
xchg
xchg
xchg
xchg
mov
mov
xchg
rol
int3
je
scas
xchg
rcl
and
cmp
repnz
loopne
sbb
sbb
or
scas
ret
xor
ret
cwtl
in
cwtl
pusha
adc
pop
sub
mov
pop
nop
dec
push
jne
cmp
nop
pop
leave
mov
stos
pop
fsubs
xchg
sub
push
inc
dec
scas
fmull
or
mov
mov
outsb
pushf
jo
rep
mov
mov
sub
adc
movb
inc
push
push
jnp
cmp
mov
adc
mov
adc
stc
pop
push
jb
outsl
fdivrs
mov
xchg
loopne
test
mov
jbe
mov
movnti
std
mov
add
fisttpll
sti
or
push
jns
nop
xchg
pop
fsubrs
insl
fisttpll
imul
leave
xchg
mov
fmull
xchg
add
outsb
ret
sbb
pop
es
imul
push
dec
bound
mov
shrl
fs
sub
xchg
out
sbb
adc
outsb
shll
pop
cltd
pusha
inc
add
xchg
je
js
bound
xchg
and
adc
and
xchg
test
aam
push
or
push
xor
sub
and
shlb
rclb
sub
dec
cmp
nop
pop
movnti
and
add
stos
aaa
cmp
and
cmpb
nop
adc
xor
and
mov
add
jne
mov
sbb
sub
add
mov
or
add
jno
cwtl
sub
xchg
loopne
nop
pop
pop
lcall
imul
stos
inc
and
add
push
pushf
or
fidivrl
arpl
pushf
call
cltd
jbe
cmp
fs
and
sbb
lcall
push
inc
mov
sbb
enter
or
enter
or
jmp
mov
in
aaa
adc
fwait
lods
or
fisttpll
sbb
mov
cmp
addb
pushf
inc
add
ror
nop
popa
test
xor
inc
fst
add
cmp
dec
sub
inc
ret
sbb
xchg
push
jb
xlat
enter
mov
dec
in
xchg
test
mov
jno
popf
jns
mov
pop
jl
cwtl
cmp
cmp
les
xchg
aam
in
jp
add
loope
test
into
cmp
fnstenv
cwtl
movsb
adc
loope
nop
decb
sahf
std
popa
mov
aam
fmul
lock
aam
mov
lahf
mov
sbb
and
cmp
je
in
cmp
scas
or
js
jne
fiaddl
lock
mov
jmp
push
rcl
dec
add
push
imul
xor
std
enter
push
jae
inc
sti
push
xchg
inc
mov
and
das
cmp
leave
pop
lret
shll
mov
xchg
mov
int3
adcl
les
lods
movsl
xchg
xchg
xchg
fisttpl
xchg
xchg
xchg
sarb
mov
cwtl
mov
pushf
out
dec
outsl
pusha
jmp
rol
mov
cmc
and
push
xor
add
dec
lret
mov
inc
xor
dec
inc
in
or
loopne
and
cmp
mov
or
test
push
mov
mov
xor
mov
or
jnp
mov
lods
xchg
pop
stos
mov
mov
in
aam
pop
mov
xor
adc
test
aad
movsb
stos
or
sub
xchg
aam
and
push
jg
movsl
stos
cmp
sub
movsl
jno
stos
cwtl
cmp
cmpsb
inc
rorb
cmpsb
popf
orl
inc
outsb
sbb
jne
pushf
in
repnz
jbe
and
test
in
lock
popa
adcb
aam
andb
lahf
add
test
cmpxchg
test
jo
push
rolb
push
popa
inc
mov
jns
jb
movsl
mov
sbb
sbb
inc
pop
call
cmp
xor
test
sub
push
test
add
dec
mov
test
rcl
shlb
jo
dec
in
xlat
loope
push
or
aaa
jno
scas
adc
xor
adc
in
arpl
movsb
mov
cmpsl
lods
xchg
cwtl
ss
enter
int3
insl
outsb
dec
les
push
sbb
aas
rdtsc
lds
dec
int3
sub
das
ror
push
mov
fdivl
subb
add
stc
loopne
sbb
sbb
les
scas
std
sbb
jecxz
ret
xorl
add
mov
std
filds
das
or
dec
jnp
adc
mov
mov
mov
xchg
test
xchg
dec
xor
cwtl
mov
test
mov
daa
xchg
out
dec
in
and
mov
shlb
or
fcoms
add
mov
jne
aaa
loope
sbb
fdivl
enter
test
inc
push
fwait
movsb
xor
rclb
scas
and
fsubrl
mov
mov
ret
repz
lods
sub
ror
aam
stc
les
pusha
cmp
imul
and
and
xor
andl
fmuls
inc
enter
loopne
or
outsb
pusha
and
dec
adc
jae
xchg
cmp
adc
fwait
es
imul
adc
pop
nop
call
mov
mov
dec
inc
dec
lock
lock
xor
enter
mov
lea
dec
sub
and
outsl
adc
jno
in
xor
loop
mov
fcomps
mov
xchg
flds
shlb
inc
adc
test
add
mov
insl
mov
movsb
jno
lods
leave
jl
xchg
fmull
test
xchg
out
inc
cld
mov
mov
cmpsl
or
or
xor
adc
mov
xchg
mov
mov
pusha
std
and
and
mov
fs
and
pop
insl
nop
out
adc
and
pusha
out
mov
jne
sbb
loopne
popa
enter
daa
sarb
das
les
pop
xorb
loop
xchg
test
or
in
sub
push
mov
fcompl
xor
dec
enter
dec
sbb
pop
mov
gs
jns
xchg
adc
inc
adc
fisubrl
sbb
jecxz
mov
sbb
stos
imul
lods
aad
mov
enter
gs
mov
mov
add
xchg
iret
mov
mov
lea
ja
mov
mov
mov
adc
adc
inc
xchg
in
sbb
sbb
or
adc
in
dec
lret
and
pop
out
loopne
inc
xchg
mov
in
xchg
push
mov
fistl
sbb
push
scas
in
dec
rorb
filds
aad
inc
pop
inc
push
inc
cmpsl
sub
sub
xor
sbb
fcoml
add
les
push
add
popa
inc
das
cmp
add
stos
mov
push
jge
imul
mov
adc
push
inc
pop
jmp
push
adcb
fisubs
xor
out
inc
and
sub
cltd
bound
es
call
out
jmp
xor
cmp
push
cmp
call
inc
dec
jno
int3
loope
sub
or
or
mov
decl
push
pop
xor
mov
ljmp
push
dec
test
in
cmpsb
mov
inc
ret
in
mov
dec
jo
pop
les
loopne
dec
push
push
cmove
leave
or
jl
dec
pop
push
pop
pop
push
pop
cmp
push
add
stc
and
std
xor
add
lcall
sub
loope
dec
adc
daa
dec
jae
sbbl
fbld
mov
inc
add
sbb
inc
popf
out
xor
out
in
sub
gs
cs
add
add
mov
cmpb
inc
or
in
lret
adc
adc
adcl
xchg
mov
cmpsl
pop
pop
and
nop
js
ret
shlb
or
loopne
cmp
fsubr
jne
out
shrb
lods
mov
int3
nop
or
in
leave
mov
adc
in
or
lods
fldt
sbb
and
adc
sbb
push
call
pop
in
pop
push
pop
add
outsl
nopl
lea
shr
fwait
scas
pop
and
xor
jl
enter
call
dec
lods
fwait
stos
jo
ss
inc
add
push
jb
sub
addb
inc
pop
dec
es
cwtl
pusha
fs
xchg
dec
mov
cltd
in
mov
pop
jb
stos
xor
int3
enter
or
mov
sub
fld
lds
adc
test
sarl
les
pusha
loopne
loopne
pop
xchg
sbb
jb
jmp
mov
mov
pop
and
push
fdivs
inc
mov
inc
fcoms
adc
popa
inc
push
cltd
and
adc
and
insl
mov
adc
in
jge
nop
mov
mov
lret
adc
in
leave
xorb
add
or
orb
or
leave
xor
xor
jnp
xchg
lret
inc
test
in
rclb
dec
and
leave
inc
jo
pop
inc
jg
cmp
jg
or
sub
add
nop
xlat
push
nop
cmp
xchg
push
pop
lsl
and
sti
or
inc
xor
add
dec
jb
jno
push
add
add
enter
or
push
enter
in
sbb
inc
loop
movsl
popa
leave
lahf
mov
mov
mov
shlb
and
sub
gs
sbb
add
and
dec
ficoml
push
sbb
mov
rclb
jne
cmp
xor
sub
mov
sub
call
mov
mov
dec
add
test
push
or
sbbl
sbb
scas
push
loope
test
push
mov
aas
mov
mov
add
shll
aas
jb
sub
test
je
mov
cmp
sub
adc
push
stos
movsl
lea
add
and
cmpsl
adcb
or
lds
ss
push
sub
cmp
push
xor
inc
adc
rclb
pop
rol
call
inc
adc
fdivrs
aam
push
mov
roll
loopne
dec
insl
mov
jne
jmp
jb
pusha
nop
addl
inc
popa
cmp
stos
push
push
pop
faddl
stos
aam
and
jno
fnstcw
adc
rorl
addb
pop
fdivrl
fcoms
xchg
imul
in
and
sbb
adc
or
cmpsb
dec
xor
or
enter
rorb
ss
lods
sbb
sbb
pop
imul
add
inc
fsub
adc
sub
sub
cmpsb
pusha
or
xor
inc
add
mov
hlt
scas
dec
push
mov
push
mov
mov
call
jo
lds
jl
push
push
int3
cltd
insl
shll
lahf
mov
scas
and
push
adc
ss
push
adc
push
addr16
cmp
int
lods
sub
push
add
cs
cmp
pop
aam
xor
and
dec
xlat
xor
test
xchg
js
xchg
xchg
xchg
shrb
fildl
xlat
mov
inc
jno
jmp
repnz
fcomp
jo
mov
scas
in
les
push
jne
xor
mov
int3
xchg
clc
push
nop
add
push
ljmp
mov
or
fcmovne
sar
add
pop
add
mov
rclb
or
adcl
mov
add
mov
or
mov
pop
pop
rolb
pop
sbb
lods
roll
leave
cltd
xchg
xor
mov
push
push
mov
xlat
aas
mov
and
adc
mov
jo
sbb
insl
mov
clc
add
imul
push
clc
inc
in
mov
dec
mov
aad
pop
xor
jmp
mov
mov
lds
jae
sti
clc
mov
mov
or
sbb
xor
cltd
loopne
ljmp
fnstcw
sbb
sbb
and
adc
or
xor
jb
sbb
stos
add
jne
repz
xchg
jns
mov
and
xor
movsl
jmp
xorl
dec
cwtl
shrl
loopne
adc
cmp
cmp
rorl
test
fildll
fmull
sub
mov
fsubs
dec
xchg
mov
push
pusha
sub
dec
les
cmp
dec
fistpl
xchg
dec
scas
lods
cltd
je
cmp
orb
mov
add
lea
pop
insl
pop
enter
aad
pop
push
insb
adc
filds
faddl
dec
lock
pusha
outsb
inc
add
ret
imul
xor
and
mov
pop
fisubl
movsb
push
push
int3
cmp
push
add
push
and
cmp
add
mov
lcall
xor
mov
hlt
mov
cmpsl
std
add
lock
fildll
mov
pop
adc
add
pusha
or
test
lea
cmp
push
add
push
xchg
mov
mov
sub
xor
sub
and
sbb
mov
sbb
sbb
sbb
inc
pop
jb
mov
test
push
and
cltd
adcb
loopne
or
push
mov
shrb
sbb
int3
cmp
xor
and
dec
jmp
repz
adc
xor
sarl
push
outsb
cli
sarl
loopne
add
adc
add
push
add
add
inc
add
sarl
dec
repz
sbb
xor
cld
aad
or
push
jbe
and
add
mov
jns
gs
xchg
mov
fsin
mov
inc
add
addl
ds
jnp
in
inc
xor
enter
pushl
cmp
dec
mov
fistpl
or
jnp
mov
add
fimull
pop
and
xadd
jnp
leave
or
adc
out
leave
ljmp
cmpb
or
and
insb
aam
sahf
out
pop
push
dec
pushl
add
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
or
pop
pop
lcall
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
decl
cmp
sub
daa
adc
mov
rcll
xchg
adc
push
pop
mov
decl
cmp
rclb
cmpl
divl
pop
push
jo
adc
iret
repz
mov
add
push
dec
outsb
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
ss
insl
xor
es
gs
xor
cs
adc
bound
and
popa
je
outsl
outsb
push
mov
push
lds
rdpmc
add
cmp
add
pop
sub
test
inc
out
loopne
outsl
jb
js
je
jb
gs
outsl
cmp
or
outsl
add
add
add
fistpl
repnz
push
gs
push
je
in
or
popa
mov
outsb
mov
jbe
dec
xor
xor
lahf
ja
or
insl
insl
cmp
dec
and
jns
add
das
das
adc
push
dec
into
mov
roll
inc
inc
gs
insl
bound
daa
mul
jle
dec
outsl
jbe
dec
arpl
push
jo
sub
push
pop
inc
jne
jne
dec
jne
xchg
lret
ret
mov
inc
jo
imul
add
loopne
bound
inc
insb
adc
jae
scas
cmpsl
xchg
popl
outsb
jns
jg
addr16
sbb
jb
xor
xor
lods
and
daa
push
scas
clc
sbb
fisttpl
dec
js
push
jne
xchg
jae
cmp
dec
inc
ds
popa
das
jo
mov
insl
pop
fisttps
jb
inc
lock
push
push
test
incl
push
pop
add
sbb
out
pop
mov
loop
fcos
dec
jno
lret
and
sub
sub
cs
adc
aas
dec
movsl
cmp
cmp
ds
inc
das
inc
push
gs
pop
je
cmp
jl
jle
add
arpl
test
mov
cmp
dec
and
push
pop
or
ficomps
xor
rorl
jae
cs
shll
jne
inc
inc
mov
out
and
and
testb
dec
dec
push
push
sbb
outsb
out
dec
dec
inc
sbb
and
push
insl
xchg
add
xor
sbb
push
jo
xlat
dec
jg
imul
insl
pop
mov
cs
inc
mov
xchg
testb
push
fs
orl
pushf
iret
lcall
xorb
inc
popa
and
int3
mov
mov
sbb
xor
jl
fcmovb
and
insl
push
xchg
xor
aas
xor
addb
dec
rolb
pushf
lcall
jae
add
dec
movsb
dec
mov
and
or
push
rcr
mov
sbb
jp
push
pop
into
hlt
xor
gs
bound
stos
mov
je
and
add
test
push
ds
fwait
leave
sbb
loopne
outsl
add
pusha
mov
outsl
push
or
sub
sub
arpl
pop
and
jb
cmp
arpl
andb
mov
sti
into
fiadds
inc
xchg
insb
imul
out
xor
int3
or
or
push
lcall
mov
addb
jo
cmpsl
jns
push
fistps
push
shlb
sbb
orl
hlt
pop
dec
cmp
and
add
mov
ja
outsl
ds
cmpsb
sub
fs
jo
cli
jbe
mov
test
xchg
push
mov
xor
push
xor
pushf
jne
das
mov
mov
or
xor
out
inc
jle
dec
je
xlat
outsl
push
or
arpl
jecxz
xchg
cmp
cs
xchg
cmp
insl
cmc
xor
or
push
or
pop
das
imul
pop
or
sbb
inc
jno
rclb
inc
wrmsr
pop
leave
nop
inc
insl
imul
cmp
lods
subb
ja
in
ss
push
xchg
cmp
push
fstpl
pop
push
cmp
mov
jne
jae
xor
aad
sub
fsubl
sbb
sub
daa
sbb
jb
lock
lret
inc
sub
pop
dec
imul
jmp
jo
and
push
insl
mov
inc
imul
ret
jno
inc
and
dec
cmp
dec
data16
jg
lcall
loopne
loope
movsl
inc
add
cld
sti
mov
rol
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
gs
push
loope
mov
xor
jg
pop
jle
popa
js
jae
je
pop
xor
xchg
dec
pop
add
add
xchg
sbb
inc
jae
imul
xchg
sub
adc
adc
add
add
add
cld
mov
xor
cmp
pop
or
aaa
out
xchg
pop
push
ds
push
pop
hlt
and
or
pusha
add
jge
adc
js
or
sub
add
imull
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
ficomps
push
jo
cld
les
cwtl
add
push
loopne
push
mov
cmp
int3
js
jo
daa
iret
in
int3
rorb
sbb
iret
and
pop
jb
nop
xchg
pop
xchg
sbb
cmpsl
jecxz
adc
icebp
pop
push
adc
sub
dec
pushf
lock
pop
pop
add
ret
adc
cs
pushf
cmp
pop
or
pushf
jo
je
push
xor
out
nop
sahf
push
pop
xor
jl
cmp
cmp
pop
mov
mov
and
stos
in
or
and
add
test
add
xchg
add
in
addb
cmp
mov
dec
push
push
inc
mov
add
add
orb
push
shrl
lods
popf
adc
aaa
add
roll
dec
or
and
add
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
jmp
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
push
xchg
sbb
mov
inc
sbb
sub
add
shll
add
push
insb
aas
ljmp
or
add
ja
inc
mov
jae
jb
bound
dec
stos
xchg
jbe
cmpsl
inc
ss
popa
mov
repnz
lods
mov
lea
dec
in
fstpt
popa
addr16
outsl
js
push
push
inc
push
mov
rolb
and
insb
gs
jne
pop
addr16
dec
mov
daa
add
insb
divb
dec
imul
mov
jb
jo
ds
and
inc
test
les
daa
pop
mov
and
mov
addl
or
outsb
xchg
cmp
outsb
push
push
mov
sub
fstp
add
push
fdivrl
aad
push
lahf
fs
xor
or
xchg
mov
mov
or
gs
or
and
pusha
es
dec
dec
and
mov
pop
xchg
jae
push
cmp
pusha
ja
or
call
push
adc
das
outsb
gs
mov
adc
jbe
xchg
insb
inc
push
push
push
push
dec
testl
fnstenv
repnz
mov
pushf
mov
or
dec
jge
cmp
add
jg
imul
inc
call
inc
pandn
and
jae
inc
push
shll
xor
jg
popa
jl
mov
rcll
jne
adc
jns
pusha
push
or
stos
push
addr16
das
je
outsl
lods
jo
mov
xchg
daa
xchg
mov
cmpsl
cmp
pop
cmp
cmp
repz
repz
push
das
push
sub
divb
es
jle
sub
sub
mov
jnp
addr16
sub
sub
xchg
loopne
push
cmp
call
cmp
ficompl
pop
pop
cwtl
dec
adc
jb
sbb
push
jb
imul
jo
ss
lret
cmp
sbb
xor
es
sub
jo
sub
int
fisttpll
lahf
sub
or
inc
add
clc
add
cmp
repz
aam
shlb
add
sti
push
in
negl
ss
ja
push
xchg
repz
jnp
push
mov
ds
je
inc
or
add
xor
data16
das
push
fs
jns
adc
mov
testl
out
pop
push
push
push
sbb
adc
sahf
repnz
push
cmp
sahf
repnz
out
xor
sub
and
aas
out
jns
or
add
incl
repz
sarb
mov
incb
mov
iret
jo
inc
inc
cmp
sahf
cmpsl
stc
cmp
cld
std
lock
jns
out
movsb
jl
sub
repz
repz
rcrb
sub
push
mov
lcall
fisttpl
outsb
push
xor
movsl
add
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
jns
sub
sbb
je
ljmp
dec
sti
push
lods
pcmpgtw
xor
add
jle
push
js
inc
lods
insb
ds
inc
dec
jae
fldenv
mov
sub
divl
sbb
dec
inc
dec
xor
inc
dec
enter
dec
dec
push
push
ret
push
dec
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
aaa
outsb
fdivr
incl
popa
into
mov
mov
adc
outsb
mov
pusha
mov
ds
pop
adc
clc
lret
sbb
stc
lcall
jge
arpl
cmp
adc
dec
scas
jp
mov
or
in
fstl
mov
and
in
pop
xchg
cmp
dec
imul
lret
add
int
incl
mov
mov
sub
fwait
ss
out
paddsb
int
jns
ds
xor
incb
int3
dec
decl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
call
shrl
pop
and
xchg
lret
sahf
icebp
mov
cld
or
decl
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
pop
hlt
stc
aas
pop
leave
loop
mov
xchg
dec
xchg
scas
lods
inc
clc
or
push
xor
daa
in
out
mov
pop
pop
repnz
js
aas
and
es
or
or
add
lahf
push
dec
push
push
adc
or
outsb
jbe
daa
add
out
mov
pop
and
inc
pop
push
push
gs
cmp
and
imul
sbb
push
dec
push
sti
jmp
sub
mov
dec
or
sub
add
sub
sti
lcall
push
adc
add
and
or
add
sbb
lsl
sbb
jge
imul
add
adc
sub
inc
sub
jno
idivb
test
pop
pop
add
and
add
out
jbe
inc
add
dec
sbb
pop
push
and
sub
sub
or
mov
div
push
push
push
push
add
inc
aas
cmp
add
sbb
sub
add
mulb
ret
push
pop
or
pop
fimuls
mulb
pop
or
dec
mov
das
add
out
out
or
push
xor
sbb
jnp
or
das
loopne
cld
ljmp
inc
dec
daa
inc
add
pop
xor
add
pop
dec
push
push
or
xor
push
xlat
insl
mov
cmp
daa
pop
jge
popa
inc
push
test
add
pop
neg
mov
push
add
or
aas
leave
xlat
and
add
pop
sub
addb
lea
mov
rclb
and
sbb
pop
sub
inc
or
cmp
cmp
push
add
add
sbb
pop
out
fsts
inc
sbb
cmp
add
das
sbb
sbbb
add
pop
cmp
outsb
jo
and
sbb
int3
and
inc
and
mov
clc
mov
xor
adc
js
sub
stos
pushf
imul
pop
xchg
push
push
mov
fnstsw
call
inc
and
cmp
jae
xchg
das
and
sbb
cmp
push
pop
pop
inc
das
mov
add
ss
das
daa
clc
push
add
push
inc
dec
mov
notb
ja
push
push
sub
clc
xchg
mov
inc
add
jnp
jg
and
fs
adc
dec
cwtl
in
push
cmp
cmp
in
sbb
xor
repz
jns
addl
jg
fwait
push
lahf
cmpsl
pop
in
iret
ret
in
jecxz
jnp
cmpsl
std
jg
sub
add
cmp
sub
sbb
fs
dec
das
sbb
dec
hlt
xsave
or
mov
data16
pop
pop
rcpps
adc
push
popa
push
out
jbe
sbb
push
add
push
popa
adc
lods
adc
popl
or
popf
fildl
dec
bound
xor
and
push
or
cmp
sarl
push
jo,pt
pushf
mov
lret
push
add
inc
dec
cmp
repz
popa
jnp
mov
lahf
out
call
aas
into
lds
sti
cmp
mov
adc
pusha
shll
pushf
sub
les
add
stos
pop
fdivl
scas
cs
mov
xlat
push
add
cmp
sbb
adc
js
inc
into
aad
push
sub
or
pop
or
sbb
xor
push
cmp
pop
sti
jp
push
fisttpll
dec
and
notb
push
cmpsb
rcpps
push
dec
fcoms
pop
pop
aad
jb
and
pop
dec
add
dec
movsb
add
jb
pop
inc
pop
pop
push
pop
mov
pop
inc
and
pusha
cmp
dec
add
push
fildll
sub
pusha
sub
adc
sldt
in
sub
mov
push
in
out
cmp
and
cmp
fimuls
pop
out
cmp
ja
loop
jae
xlat
or
sub
rorl
xor
out
pop
and
jecxz
cli
jo
inc
or
mov
scas
int3
and
fstpt
fs
cmp
pop
sbb
hlt
outsb
scas
adc
xlat
pop
cmp
xorl
ret
pop
rolb
out
ret
popa
test
jl
push
cmp
and
xchg
push
fs
sub
cs
insb
push
int
and
es
inc
dec
das
sbb
cmp
push
pop
orb
and
icebp
cmp
sahf
adc
pop
cltd
jnp
shr
xor
sub
or
push
xor
add
push
xchg
pop
inc
jnp
jb
sub
rcll
push
cmp
pop
xchg
pop
scas
sbb
sub
nop
mov
outsl
push
or
loope
adc
add
sbb
stc
and
fistps
enter
push
ja
push
inc
xor
pop
xor
pop
sub
sub
in
sbb
pusha
mov
or
push
mov
pop
push
push
inc
pop
or
subb
mov
push
iret
daa
in
sub
mov
or
lods
sub
add
sub
cmp
ds
sti
inc
out
cmp
dec
or
push
les
lods
mov
aas
add
pop
push
scas
sub
mov
sbb
sbb
inc
sub
add
cmp
lds
das
jne
rolb
insb
jne
es
and
scas
ss
mov
dec
inc
lret
push
repnz
mov
pop
adc
dec
push
mov
subb
mov
inc
int
jo
jecxz
and
mov
add
xchg
xor
jg
mov
push
pop
mov
mulb
cmp
and
andb
inc
daa
test
es
pusha
sbbl
sarb
pop
sub
or
or
add
add
sbb
ss
inc
ja
jo
push
scas
imul
ret
cmp
inc
imul
adc
decb
add
push
pop
inc
pop
ja
std
lock
cmp
adc
adc
xorl
ss
push
loopne
cmp
or
ret
ss
dec
outsb
rcrb
insl
and
fnstcw
mov
mov
jecxz
sub
lods
pop
or
ja,pt
and
out
jae
insl
popa
imul
push
push
fiadds
outsl
jo
mov
data16
iret
push
ja
or
in
adc
push
in
outsb
repz
repz
aam
scas
jne
out
add
add
pop
les
add
add
or
ja
dec
inc
pusha
das
in
and
ds
je
sub
jg
and
xor
xor
pop
sub
push
mov
sub
sub
inc
sub
sub
inc
jg
icebp
inc
sbb
pop
rcll
inc
dec
pop
dec
or
jnp
out
adc
xor
fs
inc
sbb
or
iret
mov
incl
xor
xchg
or
push
push
ds
rolb
call
sub
push
inc
sbb
push
popa
ret
or
addl
call
les
stos
jnp
adc
rorb
aaa
add
jl
ret
outsb
aaa
sub
add
aam
pop
add
and
mov
adc
es
ss
xchg
sbb
pop
pop
aaa
pop
adc
sub
adc
sub
sub
loopne
data16
negb
rcr
jg
insb
outsl
jb
bound
xchg
insl
sbb
std
push
push
je
and
jne
add
mov
je
jo
or
pop
jae
and
fmuls
mov
add
add
jae
pop
outsl
ret
int
push
jo
cmc
nop
cltd
sub
fisubrl
sbb
and
push
push
das
xor
xor
dec
xchg
or
stc
fucom
mov
sub
add
add
mull
pusha
out
sub
mov
mov
and
dec
mov
js
subl
je
xchg
jae
push
loope
pop
adc
andl
push
inc
jb
fdiv
data16
xchg
jb
outsl
imul
ficoms
ret
push
gs
fistl
mov
sub
cs
sub
scas
mov
test
mov
mov
inc
das
sbb
inc
push
das
inc
adc
dec
inc
add
mov
ss
sbb
clc
das
xor
xor
hlt
mov
inc
pop
sbb
cs
add
push
pop
pushf
std
sub
mov
xchg
cmp
fnstenv
adc
es
div
sub
sysexit
int3
add
jle
sbb
into
or
pop
xor
pop
cmp
sbb
mov
cmp
sub
xor
xor
cmpsb
lret
or
into
leave
sbb
push
data16
and
bound
enter
test
roll
inc
and
dec
sub
pop
enter
pop
data16
les
mov
adc
adc
mov
cmpsl
pop
jo
push
iret
inc
inc
sbb
mov
push
pop
xchg
inc
push
jg
loope
push
inc
dec
sub
mov
add
psubsb
fwait
pop
push
es
or
stos
sub
es
inc
jbe
dec
pop
xor
pop
jnp
sub
cmp
popf
pop
sub
ds
xchg
lret
add
adc
add
pop
addr16
in
xor
sbb
mov
adc
adc
push
and
aaa
sub
sbb
movsl
push
and
adc
push
les
dec
cli
movsb
push
lock
sub
call
push
loopne
jmp
cmp
loope
outsb
loop
mov
push
cmpsb
in
push
or
daa
jecxz
lock
sbb
pop
or
pop
daa
or
cmpsl
inc
loop
xchg
push
jo
inc
data16
push
bound
mov
loope
clc
or
sbb
mov
inc
jge
xchg
inc
inc
or
or
rcl
mov
ret
out
outsb
mov
orb
dec
jnp
sbbl
xor
sub
or
adc
add
stc
sbb
jno
ja
or
sbb
pop
jae
lea
cmp
mov
inc
outsl
aad
dec
fwait
or
test
push
cs
lock
and
sub
not
jo
call
inc
mov
syscall
lea
pop
add
sbb
xchg
add
mov
and
rorl
add
mov
mov
out
loope
sub
inc
push
adc
enter
inc
add
mov
and
push
jecxz
push
sbb
sub
pop
fwait
jae
inc
bound
das
mov
and
mov
jo
rclb
and
cmp
jle
and
lods
jne
push
test
cli
aad
fsubrl
push
sub
push
inc
xor
add
jle
rcpps
inc
mov
call
add
xchg
cltd
push
ss
lret
lea
add
push
dec
sbb
inc
pop
or
lea
lret
pop
pop
jge
ljmp
cmp
xor
sub
es
add
push
dec
add
dec
cmp
push
inc
pop
or
inc
cmp
cld
jge
mov
es
xor
or
or
int3
xor
pop
sub
and
pop
je
pop
loope
les
xchg
xor
les
xchg
fisttps
std
inc
lods
pop
push
inc
cmp
mov
sahf
es
rcll
aaa
adc
add
push
dec
cmp
sbbb
pop
inc
cmp
mov
shll
sub
adc
adc
push
and
sub
push
shlb
push
adc
adcl
mov
push
imul
push
xchg
cltd
or
es
mov
pop
xor
cmp
sub
pop
ja
sbb
and
mov
insl
adc
xor
push
or
xorl
movsl
getsec
mov
sbb
adc
popf
sbb
fs
out
adc
or
inc
xor
pop
sbb
cmp
stos
shrb
daa
aaa
cmp
xor
adc
fimuls
xchg
fstl
in
add
push
mov
cmc
bswap
addl
test
shll
sub
aaa
orl
pop
xor
pusha
les
pop
xchg
cmp
push
arpl
outsl
lea
lret
lret
mov
call
ds
pushf
cmp
sub
out
mov
ljmp
xor
pop
les
push
cmp
insl
sarb
pop
mov
or
lock
dec
push
sbb
ret
cmp
or
aas
inc
loop
inc
popf
pop
shlb
add
daa
cmpsb
add
pop
negl
or
pop
xor
xchg
push
push
sub
jecxz
gs
ss
inc
dec
test
loop
and
sbb
pusha
popf
pop
outsl
pop
shrl
daa
push
sub
mov
mov
cltd
sub
dec
add
and
stos
sbb
cmp
sub
aaa
imul
fsubr
sbb
das
sbb
push
ss
das
adc
pop
jecxz
jl
inc
cmp
dec
aam
lods
imul
testl
push
icebp
aaa
mov
daa
movsb
and
sub
mov
lock
pushl
imulb
je
jo
insb
or
ja
fs
mov
pop
loope
popa
push
push
pop
cmp
inc
lds
push
cmova
lcall
mov
jle
inc
xchg
push
sbb
inc
add
inc
inc
insb
ds
xchg
adc
mov
fldcw
dec
inc
dec
mov
dec
sarl
push
dec
loope
dec
push
data16
jle
xchg
stos
adcb
enter
leave
push
jp
jmp
mov
out
add
icebp
mov
dec
push
dec
dec
std
ljmp
cmpsb
ds
shlb
mov
mov
fwait
lcall
dec
sbb
ljmp
mov
ljmp
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
insb
decl
cli
mov
sub
sub
das
in
decl
mov
ds
pop
sbb
imulb
and
jle
jo
fsubs
ljmp
sbbb
test
xor
dec
xchg
pop
shl
dec
push
bound
sti
inc
add
pop
adc
incb
push
and
xor
aaa
xor
cmp
insl
xchg
addb
pop
push
hlt
inc
shll
lea
out
cmp
pop
push
dec
imul
xlat
cs
pop
inc
sub
xchg
pop
jb
sub
adc
add
lock
cmp
loopne
rolb
xchg
xchg
out
dec
mov
pop
or
mov
insb
int3
add
inc
js
cmp
adc
outsb
addr16
pop
push
inc
xchg
jo
loop
clc
xchg
push
push
dec
pushl
jns
cmp
xor
xor
sub
sub
mov
xor
inc
push
xor
add
jbe
out
adc
push
outsb
add
les
js
push
das
js
out
and
lahf
subb
loope
xchg
dec
dec
jp
out
test
adc
stos
cld
decl
je
bound
mov
das
sub
ss
and
stos
and
adc
add
addl
lock
jg
ja
and
add
sub
das
je
mov
sbb
mov
cmp
xor
add
sub
add
fs
fcmovbe
iret
test
rcl
cmp
adc
push
xchg
xchg
jle
add
popl
adc
push
pop
dec
xchg
dec
dec
ss
ss
inc
and
lock
inc
push
fcoml
push
inc
imulb
mov
sub
jge
cmp
xor
or
or
cld
inc
and
outsl
adc
add
cwtl
xor
inc
mov
sbb
push
push
and
adc
in
das
pop
add
test
lea
mov
dec
mov
je
inc
addr16
insl
repz
fisubl
pop
dec
mov
int
mov
pop
jno
cmpsl
rorl
jge
cmp
inc
outsl
mov
mov
push
rcr
into
mov
push
pop
rclb
shl
cmp
inc
scas
mov
rcl
pop
jnp
iret
fwait
je
cmp
and
shll
fldt
jl
ds
ret
push
stc
ljmp
bound
daa
mov
push
mov
push
mov
jns
xchg
or
rcr
lahf
xlat
dec
insl
daa
push
aas
pop
fidivrl
scas
inc
nop
es
fisttpl
in
cmp
dec
cmpl
push
pop
and
out
sahf
push
es
fldcw
fcoms
xchg
ret
jl
jnp
cltd
les
orb
push
jb
jns
lcall
jno
jns
sahf
out
ljmp
ds
enter
nop
push
mov
xchg
jecxz
jnp
repz
pushf
dec
xor
jmp
push
jmp
ds
mov
rolb
or
sti
mov
mov
mov
repz
lods
lret
push
fldl
out
push
mov
imul
popl
xchg
cmpsl
mov
daa
into
sysret
outsl
dec
movsl
pop
aaa
loopne
push
sarl
xlat
push
push
jg
into
jns
notl
pusha
popf
cmpsl
fnstcw
out
jne
sbb
mov
mov
jae
arpl
mov
outsb
xlat
cmp
out
jns
xchg
call
dec
repz
and
adc
ret
imul
cmpsl
jg
mov
out
repz
sarl
push
mov
cmpb
repz
inc
cmc
xchg
xchg
mov
out
jl
cmp
test
imul
jmp
test
cmp
shll
pop
subb
or
popf
idivl
pushf
mov
mov
jns
out
dec
jae
in
loop
jg
xchg
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
testb
xor
adc
mov
mov
pop
push
cmp
add
idivb
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
or
adc
cs
mov
add
xor
pop
add
sahf
int3
dec
pop
inc
mov
lcall
push
push
jae
push
stos
or
popa
aas
inc
out
add
daa
fbld
mov
or
inc
imul
cmp
sbb
dec
fisubl
pop
aam
sbb
jae
les
dec
cmp
dec
mov
out
imul
insl
pop
fcmovb
inc
or
push
in
in
xchg
push
insb
pop
push
scas
cmc
mov
jmp
aaa
push
loop
out
push
fisttps
jp
das
push
pusha
sbb
sbb
xchg
outsb
fstpl
fsubr
inc
jbe
iret
push
pop
shlw
dec
or
push
dec
mov
ja
movsb
push
ret
mov
inc
cmpb
ja
push
xchg
push
sahf
push
adc
sbb
ds
inc
js
xor
shlb
popa
insl
jo
in
into
movl
addr16
jo
jae
fildll
jne
and
aas
cmpb
ja
fisttpl
and
cmpsb
mov
aad
push
or
cmp
xor
xor
xor
fwait
jge
xor
xor
xor
xor
cmp
push
add
xor
push
inc
cmp
scas
insl
sub
dec
cmp
ss
adc
sub
bound
sbb
or
stos
pop
xor
mov
cmp
add
xor
imul
sub
test
add
and
sub
es
shll
scas
and
lock
fstpl
xchg
and
addr16
pop
sub
inc
add
testb
inc
add
mov
add
daa
clc
or
orl
or
sub
pop
js
movsb
or
sbb
mov
and
js
rcrl
mov
dec
bnd
dec
push
lcall
and
pop
xor
loope
enter
xor
jnp
sub
ret
sti
sub
push
or
push
jbe
xchg
inc
or
shufps
int
xchg
sub
push
cs
fnsave
jo
in
jmp
inc
and
and
ljmp
das
push
sbb
int3
adc
jl
fdivrs
push
pop
add
push
rcr
pop
ja
adc
add
jnp
pop
xor
ret
jbe
sbb
adc
sbbl
ds
sub
jae
ficompl
jo
ficomps
add
and
jnp
addr16
aaa
lahf
xchg
adc
adc
fldt
mov
stos
sbb
fisubrs
fsubs
lods
daa
jge
xchg
mov
or
das
divl
icebp
pop
xorl
jne
and
jno
mov
mov
imul
popa
daa
pop
xchg
push
sub
das
dec
rorb
loope
iret
push
ss
cmp
or
repnz
pop
dec
cmp
and
mov
or
adc
das
mov
js
fiaddl
fsubrl
js
lahf
pop
xchg
outsb
cmpsb
pusha
adc
pop
cmp
sub
test
addr16
lea
jg
sti
add
aam
push
popa
pop
sbb
pop
int
enter
movl
and
mov
sbb
ja
sbb
outsl
lret
xor
dec
lds
and
or
sub
add
fcoml
add
or
subl
jle
fadd
push
and
iret
pop
fdivl
mov
push
xchg
fnsave
loopne
jns
and
rolb
xchg
fistl
adcb
mov
xchg
mov
clc
pop
jmp
adc
add
popa
mov
stc
adc
add
pop
in
inc
mov
push
ja
xchg
dec
js
adc
loope
es
and
es
das
das
push
test
pop
sub
lock
mov
add
push
adc
pop
and
es
sti
dec
mov
and
adc
and
push
xchg
inc
or
or
negb
iretw
xor
das
sub
sub
add
data16
cwtl
adc
adc
adc
sbb
mov
sbb
jl
mov
or
mov
jo
inc
shr
inc
or
test
popa
test
mov
sbb
add
and
adc
pop
loope
xor
and
icebp
in
adc
push
pushf
push
cmp
nop
pushf
push
cmpsb
sub
dec
shlb
call
inc
out
and
adcb
adc
mov
dec
lock
inc
or
sub
push
xchg
inc
cmp
mov
push
or
aam
out
add
and
cli
sbb
push
scas
dec
or
fldcw
push
movsb
lods
pushf
push
ds
imul
inc
sub
or
and
sbb
cwtl
cmp
add
rcrl
imul
or
ret
test
pop
jb
int3
push
and
nop
sbb
sbb
or
loop
push
mov
mov
xor
xorl
mov
lock
in
dec
rorb
adcb
xor
or
push
or
das
imul
pop
inc
hlt
or
cmp
cmpsb
sbbb
fsubrs
xor
mov
loopne
xor
and
mov
cmp
pop
xor
int3
push
inc
push
and
sbb
shrb
aam
inc
adc
push
mov
adc
inc
adc
loope
or
dec
fdivl
jp
jno
lahf
popa
hlt
adc
xchg
push
sub
cmp
and
icebp
xchg
inc
insl
cmpsl
inc
mov
pop
mov
das
jo
daa
and
inc
sbb
out
imul
notl
or
stos
xor
inc
notl
popa
xchg
test
add
repz
adc
pop
sbb
iret
repz
push
andl
repz
add
or
fwait
int
roll
or
insb
ss
or
adc
neg
data16
adc
sbb
and
sub
xor
fidivrs
fwait
inc
mov
mov
mov
fldcw
mov
popa
xchg
sbb
int
mov
sub
add
or
repz
add
int
adc
push
push
dec
str
data16
lea
and
pop
adc
lcall
xchg
jmp
arpl
inc
pop
pop
cs
and
inc
dec
mov
roll
test
adc
lods
arpl
or
xchg
rcrb
xlat
cmp
jo
inc
or
adcl
jl
pop
dec
ja
jbe
fs
xor
xor
lock
bound
jl
cmp
dec
add
out
repz
or
inc
dec
pop
adc
adc
push
and
sbb
xor
push
pop
das
add
adc
xor
jg
loopne
cmp
push
pusha
xor
sub
dec
add
inc
inc
pop
push
push
pop
and
dec
sub
pop
dec
wbinvd
daa
mov
xor
pop
push
pop
push
push
xor
sub
pop
loopne
call
sub
sub
add
push
cmp
cmp
dec
and
sub
add
push
lret
out
jg
incl
push
sbb
es
adc
sub
xor
adc
add
inc
pop
mov
es
sbb
cmp
xchg
mov
out
jo
sbb
push
and
adc
dec
sub
pop
and
inc
inc
and
pop
sbb
pop
cmovs
pop
std
jmp
inc
adc
sbb
sbb
pop
push
or
push
cmp
push
dec
or
mov
xlat
flds
test
jo
loope
cmp
inc
dec
mov
das
insb
subb
jbe
or
push
xor
pop
or
sti
cli
pop
mov
cmp
push
adc
dec
rcl
mov
xchg
xor
inc
cmp
cs
sbb
mov
ret
cmp
js
out
dec
xor
punpckhbw
sub
add
xchg
adc
stos
sub
jl
icebp
dec
xchg
push
push
dec
sub
and
inc
mov
test
mov
lret
sub
lret
add
test
popa
pop
mov
add
or
jl
push
dec
loope
cmp
js
push
push
inc
mov
dec
xchg
add
call
scas
sti
sbb
mov
sub
jl
aas
es
sbb
sbb
das
sbb
daa
push
punpckldq
and
in
inc
xchg
mov
push
into
in
dec
mov
ja
pop
inc
stos
test
mov
aaa
pop
sbb
pop
daa
dec
and
push
ss
and
clc
sbb
sbb
dec
pop
push
inc
ss
testl
xor
inc
add
xor
rcr
push
xor
pop
add
add
xor
in
mov
inc
push
inc
cs
sub
pop
cmovb
pop
ss
lahf
dec
push
shrb
lcall
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
ljmp
add
adc
jge
push
je
mov
andb
fwait
inc
shrl
xchg
out
popf
rorl
mov
jmp
dec
fsubrl
stc
pushl
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
call
and
cs
insl
sub
adc
or
or
cs
ret
sub
call
dec
data16
mov
call
cltd
test
push
lcall
adc
shll
dec
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
lcall
out
orb
adc
enter
mov
mov
movsb
mull
stc
mov
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
fnstcw
pop
addb
xor
je
inc
dec
pop
cmp
cmp
and
push
push
jb
dec
push
cmp
jbe
pop
imul
jae
xor
sub
lcall
inc
push
daa
xor
outsl
inc
pop
ja
cmp
dec
cs
xor
or
and
adc
lcall
push
jns
or
dec
dec
and
ds
jno
enter
add
lcall
fbld
in
dec
inc
lods
sub
pop
jb
add
xor
sti
lret
andb
std
in
pop
js
hlt
scas
bound
pop
lahf
cmp
xor
cmp
fstpt
dec
xor
arpl
add
sarl
sub
adc
sub
inc
dec
or
xor
and
cmp
daa
ret
adc
and
mov
adc
push
xor
pusha
mov
mov
sub
sbb
adcl
cmp
mov
adc
xor
inc
sub
xor
jp
push
and
lods
ja
cmpsl
dec
jnp
or
mov
pusha
int
sub
adc
sbb
xor
sbb
sub
mov
add
je
int3
mov
inc
sub
mov
adc
sbb
mov
sub
sbb
pop
cmp
ds
mov
gs
push
mov
rcrl
jge
or
andb
pop
and
or
jb
or
in
add
aaa
sub
adc
pop
xchg
push
sub
inc
iret
inc
sbb
add
pop
pop
pop
divb
mov
fs
sub
xlat
xor
cmp
push
pop
icebp
sbb
nop
rcll
cmp
movsb
rolb
sahf
add
mov
enter
xchg
push
sub
lds
or
and
fisttpll
or
inc
add
popf
mov
outsb
outsb
je
xor
mov
js
xor
jae
popa
insl
lods
jo
into
cmp
je
or
add
lods
add
and
sub
into
inc
aad
cmp
xor
insl
loop
cmp
sub
mov
out
testb
jno
lcall
je
popa
mov
insl
js
cmp
inc
adc
pop
inc
adc
testb
add
or
pop
push
gs
mov
aaa
inc
lds
cmp
or
mov
push
push
les
mov
movsb
lret
xor
adc
or
add
mov
iret
push
inc
sub
add
sbb
mov
test
and
fmull
inc
bound
daa
inc
sbb
sub
xor
adc
sbb
xlat
add
roll
sbb
ss
shr
clc
pop
scas
dec
js
push
dec
jle
insb
lcall
dec
dec
pop
pop
push
inc
into
or
push
mov
dec
shrb
stos
inc
dec
popa
dec
stos
pop
push
adc
das
ja
jb
pop
repz
sbb
sarl
pop
inc
jne
mov
xor
nop
or
xchg
cmp
leave
js
inc
push
pop
popa
push
sub
mov
jg
inc
dec
test
or
cmp
insl
pusha
adc
or
push
dec
mov
call
or
insl
mov
aaa
daa
cli
test
pop
xor
xchg
jo
sub
or
lahf
or
aad
push
mov
imul
in
xchg
mov
push
add
movsl
adcb
pop
sbb
lgs
test
push
aas
mov
cmpb
iret
flds
das
push
and
pop
scas
xor
xchg
push
fsubs
pop
push
mov
loop
aas
je,pt
mov
lods
add
push
push
cmpsb
sbb
xorl
sbb
push
push
rcrb
mov
mov
aam
mov
inc
lods
dec
cmp
pop
xor
or
pop
inc
outsl
sbb
adc
cmc
ja
out
inc
sub
std
cmp
xor
pop
sub
push
insb
sahf
or
jmp
jg
sbb
jmp
in
outsb
sbbb
and
sbbl
and
add
push
into
or
scas
xchg
fwait
pop
push
pop
add
and
dec
adc
dec
fldt
insl
pop
movsl
cmp
call
fildll
push
dec
inc
test
sti
push
fadds
push
addl
jge
shrd
and
xor
push
dec
rclb
inc
lock
add
xor
and
mov
sub
sub
jnp
xchg
les
jo
outsb
inc
and
jnp
push
pop
add
cmp
xchg
sub
and
add
inc
aaa
scas
sub
jne
or
mov
sub
jb
in
sub
dec
sbb
bound
sti
dec
jae
push
popa
cli
outsl
pop
cmpsl
mov
dec
outsl
and
pusha
xor
jp
mov
inc
push
bndstx
and
sbb
pop
mov
insb
mov
push
pusha
std
fstpl
inc
push
pop
js
xlat
sub
gs
popa
adc
aaa
aam
inc
negb
mov
jb
add
inc
xor
and
test
dec
out
lret
jne
add
sbb
or
add
and
dec
add
inc
js
pop
insb
push
adc
add
loopne
sbb
jno
or
jo
neg
ret
in
popf
and
sub
mov
inc
add
dec
sub
nop
add
aas
xchg
jg
jne
pop
es
xor
mov
adc
les
insb
dec
adc
push
add
adc
push
and
hlt
or
or
inc
and
add
sti
add
and
adc
andb
adc
cwtl
push
in
stos
push
pop
jnp
int3
xchg
cmc
lmsw
xchg
inc
sub
pop
jl
inc
xlat
imul
push
outsb
sub
sbb
mov
sub
or
hlt
adc
lcall
insb
cmp
subb
lahf
js
add
ss
loope
andb
cmp
dec
test
movsl
outsl
xlat
std
inc
or
outsl
or
add
inc
sbb
imul
scas
xorb
xchg
push
and
push
shlb
mov
das
lods
insb
dec
add
orb
xchg
dec
inc
xadd
sbb
inc
jle
adc
mov
inc
mov
es
lock
insl
pop
jnp
adc
cmpb
aas
mov
jo
movsl
push
dec
add
jae
nop
loopne
sbb
fistpl
jbe
push
inc
pop
cmp
aas
jbe
addr16
add
test
adc
mov
movsb
cld
daa
popf
push
insb
jl
or
sbb
xor
mov
xchg
outsl
ror
insl
and
push
aaa
pusha
lahf
add
pop
imul
daa
mov
cltd
nop
push
mov
das
adcl
pop
in
hlt
aas
stc
jbe
adc
cwtl
sbb
lods
push
daa
dec
inc
leave
xchg
pop
leave
inc
cmp
leave
xchg
pop
xor
xchg
pop
leave
xchg
and
pushw
push
xchg
daa
and
and
push
rcrb
mov
mov
lock
gs
out
lcall
cmp
repz
sbb
pop
and
in
pop
xchg
jns
repz
jl
pop
pop
sahf
pop
pop
ds
repz
cmp
push
jl
or
jl
out
pop
aam
fcompl
int
ds
movsb
mov
js
and
mov
sarb
or
xchg
sbb
adc
jae
dec
inc
std
das
mov
mov
les
push
shrb
sbb
jl
or
cmp
xchg
xor
cmp
add
popa
ret
xchg
clc
mov
or
jnp
notl
push
and
out
push
fnstenv
add
scas
jbe
pusha
jg
jg
add
jne
mov
sbb
add
scas
rorb
push
inc
add
inc
jl
add
pop
das
cmp
inc
pop
pop
leave
mov
dec
outsl
add
enter
inc
sbb
and
test
leave
and
cmp
or
pusha
pop
ss
adc
sub
and
dec
xor
xchg
sbb
push
jl
pop
scas
add
jo
or
insb
out
popl
scas
fs
xor
enter
pop
mov
roll
push
lds
xor
lds
add
mov
fdivs
in
nop
and
xor
cltd
fcomps
jns
mov
int3
and
je
insb
dec
in
mov
pop
sbb
cmp
rolb
mov
scas
push
pop
pop
insb
pop
push
mov
cmp
les
lahf
subl
leave
adc
mov
jg
add
mov
inc
mov
and
ja
or
jns
pusha
sbb
xchg
testb
pop
fs
jo
fildll
popa
sub
add
and
pop
jb
subb
enter
push
mov
sub
push
pop
jbe
add
inc
mov
popa
scas
add
sub
out
jmp
or
filds
adc
and
lcall
sub
sahf
push
repnz
sbb
outsl
fdivs
in
idiv
cld
push
add
daa
and
add
xor
push
pop
cmpsb
mov
mov
xlat
push
je
jbe
fwait
loope
das
push
cmp
jg
push
enter
movsb
imul
lods
pusha
pop
sbb
xor
dec
pusha
and
sub
imul
repnz
ja
sbb
pop
popa
push
xchg
outsl
jg
cmp
mov
imul
enter
leave
mov
scas
cld
push
or
lock
pop
stc
into
rorl
arpl
movsb
mov
stos
loopne
nop/reserved
or
mov
and
dec
mov
jb
bound
and
or
popa
pop
in
jbe
enter
add
xlat
orb
or
arpl
lods
fsubl
mov
add
movsb
and
inc
arpl
addb
ficoml
notl
adc
outsl
and
add
cmp
cmp
clc
arpl
push
popa
addl
nop
push
sbb
aaa
mov
shlb
and
xchg
xorl
cmp
icebp
dec
clc
and
ret
or
fs
mov
inc
or
xchg
sbb
jg
and
dec
jns
mov
mov
add
jg
test
leave
dec
add
push
jb
iret
int3
aam
les
add
sub
and
push
inc
push
or
dec
mov
enter
mov
cs
adc
nop
popw
mov
pop
adc
aaa
add
add
dec
aaa
in
xchg
sub
cmpsl
add
xor
xlat
add
mov
dec
sahf
iret
mov
daa
pop
out
les
or
add
sarl
lods
aam
dec
xchg
out
lcall
push
xor
repz
loopne
les
xchg
dec
pop
jp
mov
pop
mov
in
sub
or
cmp
das
mov
push
mov
outsl
add
enter
or
dec
ss
in
or
sbb
dec
cs
sar
jns
xor
add
ss
pusha
shrb
imul
scas
add
aam
inc
mov
popa
out
popl
fiaddl
push
sbb
pop
addr16
pop
or
test
xchg
pop
insl
cmp
fwait
push
enter
int3
push
xchg
subb
fdivrl
adcb
fs
mov
cmp
mov
xlat
xor
mov
mov
daa
cmp
pusha
mov
or
dec
insb
push
test
adc
dec
sar
adc
inc
mov
imul
imul
outsb
in
addb
mov
outsl
ds
fdivl
pop
add
adc
mov
outsl
inc
and
sub
xlat
stos
push
movd
add
negb
pusha
js
mov
pusha
xchg
mov
aas
pop
fildl
and
sub
ja
insb
or
lods
or
cld
dec
push
jae
cmpsl
out
lcall
orb
sahf
fwait
sar
jns
cmpb
repz
mov
hlt
and
sahf
out
inc
mov
stc
cmp
rorl
xchg
fldt
repz
cmpsl
ja
adc
imul
jle
inc
int
jns
fs
mov
add
lcall
sub
jns
mov
out
mov
mov
scas
addl
lcall
sub
mov
add
dec
repz
test
std
xchg
sahf
out
cmp
in
adc
sarl
inc
pusha
mov
mov
push
mov
fst
jl
mov
mov
mov
fucom
imul
out
xor
out
ds
jo
inc
repz
mov
nop
sub
sbb
cmp
xchg
out
cmp
ja
push
pop
xchg
fsubp
xchg
xchg
push
addr16
cmpsl
stc
cmp
xor
iret
sarl
pop
jmp
xchg
bound
dec
cwtl
jb
ds
mov
fstps
pop
fwait
xor
out
inc
gs
pushf
sti
cmp
cmpsl
stc
push
popf
imul
sahf
cmpsl
stc
add
jns
dec
repz
lret
iret
mov
mov
push
iret
shrl
movsb
adc
cmpsl
stc
cmp
cmp
iret
sarl
dec
cmpsb
jmp
out
mov
in
jo
cmp
repz
stc
push
lods
insb
mov
lcall
and
sarl
xchg
scas
flds
push
out
lcall
leave
out
xor
in
cmpxchg
xchg
and
dec
mov
mov
mov
push
js
lahf
out
mov
mov
and
push
aam
mov
xor
rorb
push
jecxz
adc
dec
loopne
roll
cmp
addr16
jl
mov
adc
dec
cmp
repz
cwtl
lret
vshufps
iret
dec
repz
lret
dec
repz
lret
insl
call
cmpsl
fnstcw
fnstsw
adc
insb
fisubrs
cs
aad
iret
rorb
xchg
arpl
dec
inc
add
fildl
jno
pop
add
push
add
jbe
cmp
ret
jmp
addr16
ja
dec
sahf
xchg
out
std
add
nop
rorl
js
cmp
je
movsl
add
pop
paddq
or
sahf
loop
inc
aas
pusha
sbb
rcrb
int3
in
mov
notrack
and
and
popf
xor
pop
jae
testl
sbb
adc
iret
shlb
loopne
pop
fs
pop
enter
mov
in
scas
mov
push
pop
cld
dec
adc
subb
out
xchg
pop
mov
add
jg
add
push
addb
fsubs
dec
mov
and
fbstp
ds
insb
jnp
mov
jae
aas
mov
daa
or
mov
arpl
mov
iret
cmp
in
push
in
xchg
dec
lods
fisubl
aas
mov
hlt
cmpsl
hlt
aas
mov
inc
sub
push
cli
iret
xor
adc
std
lea
xchg
push
pop
aad
pop
je
jge,pn
inc
lcall
inc
mov
insl
inc
mov
aaa
pop
cmpsl
mov
inc
insb
push
daa
jl
and
pop
mov
mov
add
or
dec
xchg
scas
sbb
push
movlps
enter
ds
add
cld
lahf
sub
hlt
xchg
pushf
in
ja
or
pop
inc
and
jnp
pop
dec
adc
shl
push
xor
sbb
and
push
enter
sub
sub
rorl
and
jg
pop
in
scas
push
pop
jp
fimull
daa
pop
aas
xchg
daa
mov
push
mov
cmp
pushf
js
lret
iret
ficomps
mov
push
inc
mov
inc
push
add
das
adc
adc
dec
nop
and
jns
jns
jns
jns
mov
sub
testb
xchg
cmp
out
and
popa
jb
jl
iret
adc
jle
mov
fbstp
leave
out
hlt
jns
int
iret
cmp
outsl
xchg
daa
xchg
iret
add
jp
jns
cltd
in
xchg
jns
jns
jns
and
in
and
add
jne
in
sbb
testl
daa
and
jno
push
enter
inc
rclb
leave
and
sub
or
scas
mov
inc
sbb
inc
outsl
loop
mov
push
jl
cs
sbb
xor
fs
ss
out
mov
add
cmp
lret
inc
ja
cmp
out
cmp
push
daa
dec
push
les
scas
shll
nop
andb
jp
int
fdivrs
jns
out
push
add
add
add
add
push
sysret
sbb
cmp
or
cmpsl
in
inc
out
imul
frstor
push
daa
insb
scas
cs
xchg
add
or
inc
dec
les
push
addr16
jle
sbb
es
mov
dec
and
fcmovnbe
xchg
jg
enter
incb
jl
push
jl
addr16
push
jl
jl
push
je
xchg
and
inc
jl
jl
in
xchg
xchg
pop
outsl
enter
mov
xchg
xchg
stos
mov
sbb
jbe
into
inc
fisttpll
in
in
pop
fucomi
cmc
paddw
jge
jae
dec
sahf
pop
jo
push
add
and
clc
loope
cmp
xchg
mov
xchg
jge
mov
jge
out
add
leave
inc
jo
push
leave
inc
inc
out
das
pop
inc
lods
addl
push
mov
mov
jle
mov
cltd
sbb
mov
adc
sbb
push
xorb
xor
mov
add
dec
fdivl
xchg
lods
sub
and
cmp
add
insl
and
iret
inc
xor
sbb
inc
jb
inc
sbb
xchg
cmp
or
and
pushf
cwtl
subl
jg
call
jg
jg
pop
jg
leave
dec
mov
clc
orl
xchg
popf
movsl
xchg
inc
test
js
daa
cmp
mov
aaa
in
cmc
enter
add
or
mov
xorb
inc
orb
repz
or
arpl
outsb
cmp
repz
jns
test
repz
repz
setp
movsl
iret
repz
adc
cmp
repz
adc
iret
repz
add
repnz
cmpsb
sbb
sbb
xchg
jl
pop
inc
push
add
test
fdivrl
add
xchg
and
roll
add
aaa
mov
orb
cmp
dec
movsb
xchg
mov
fsubs
xchg
sbb
popf
clc
scas
or
inc
xchg
xchg
ret
dec
cs
jge
test
in
test
mov
fcmovne
mov
and
outsb
and
out
orb
cmp
pop
or
and
and
cltd
and
inc
pop
into
into
inc
mov
iret
cmp
dec
push
cmpb
aaa
add
mov
daa
jl
inc
push
in
ret
jne
mov
aaa
push
cmpl
jg
xchg
iret
cmp
test
dec
adc
out
mov
inc
pop
jo
aas
add
or
sbb
das
push
cmpsl
mov
leave
dec
es
das
xchg
imul
test
and
add
jae
rorl
cmc
test
jns
es
test
dec
es
cmp
mov
hlt
mov
mov
xorb
imul
sahf
fisttpl
push
lfs
mov
out
stos
pop
leave
mov
ja
sbb
jb
xchg
xchg
xchg
in
pop
popa
addr16
cltd
dec
ds
test
mov
cs
imul
iret
mov
mov
xchg
push
rorb
dec
jb
or
das
pushf
xor
dec
xchg
frstpm(287
push
xchg
add
mov
ret
xchg
loopne
mov
dec
mov
sub
jmp
out
or
and
cmp
mov
cmp
jnp
orl
cmpsb
scas
mov
mov
mov
mov
lret
lret
lret
mov
mov
mov
mov
lret
lret
lret
testb
mov
lret
lret
lret
push
mov
mov
mov
mov
cmp
mov
pop
pi2fd
cmp
cmp
or
or
cmp
cmp
or
push
add
add
add
in
xor
add
mov
pop
xchg
jle
jp
mov
nop
xchg
add
mov
xchg
aam
or
cmp
mov
mov
test
daa
rorb
dec
dec
cs
fbld
jbe
jae
enter
xchg
repz
push
sahf
cmpsb
or
mov
pop
scas
scas
mov
leave
jae
dec
fsts
xchg
pushf
loope
pop
stc
mov
mov
or
shlb
add
cmp
leave
cld
dec
sub
iret
pop
outsl
in
cmp
push
movq
xchg
ja
jg
or
lahf
or
popf
out
xchg
imul
jno
shlb
add
mov
faddp
out
or
inc
mov
aas
jns
add
movsb
imul
inc
movsl
add
jnp
or
pusha
ja
adc
sub
lock
iret
daa
daa
xor
fildl
js
jg
push
push
adc
mov
mov
or
pop
dec
dec
mov
push
mov
fsubrs
xchg
push
cmpsl
xchg
out
in
in
mov
enter
and
add
jmp
jns
cmp
sbb
and
xchg
and
das
lea
lea
out
fmulp
push
lea
push
popw
sahf
out
sahf
jno
jl
xchg
jns
out
xchg
or
repnz
ss
js
add
jb
leave
leave
repnz
or
sbb
push
mov
mov
inc
mov
mov
mov
rclb
jns
lea
mov
pop
cli
lar
or
push
adc
or
in
repnz
rdmsr
cmp
xlat
or
inc
loopne
ja
xlat
pop
mov
faddl
add
flds
dec
sahf
fistl
or
nop
xchg
addl
cmp
xchg
inc
xchg
cmp
fsub
fsubrl
rolb
clc
in
jns
iret
lds
in
pop
lods
hlt
xchg
jg
sub
adc
loopne
aaa
sub
daa
dec
lahf
xchg
and
inc
nop
dec
nop
push
nop
xchg
pushf
in
popa
nop
jo
test
cltd
xchg
mov
xor
and
xor
xchg
adc
cli
nop
lar
push
loop
xchg
decl
adc
xor
out
pop
and
insl
pusha
add
popf
out
cwtl
push
add
and
add
lret
dec
ds
pushf
loope
add
lcall
pop
xchg
pop
repnz
push
xchg
iret
pop
xchg
into
lock
jno
jl
incl
inc
xchg
xchg
popf
xchg
out
test
sub
mov
or
nop
lcall
in
cli
lret
lret
inc
mov
movups
lret
lret
es
xor
push
inc
aaa
rcll
or
fwait
nopl
jb
jne
adcb
pushf
pushf
mov
mov
out
or
fwait
xchg
sbb
xchg
add
rorl
pop
and
outsb
pushf
xchg
xchg
cmp
pop
ja
insb
lea
add
push
or
xchg
cmp
xchg
pop
or
mov
xchg
mov
sub
add
daa
pop
popf
mov
call
js
pop
mov
jl
inc
pop
popa
ret
cmp
add
adc
enter
cmp
inc
push
add
fdivrs
ja
sahf
das
cmp
in
mov
fwait
push
add
ltr
stos
xchg
sahf
ja
cmp
push
or
cmp
rorl
or
or
and
sahf
jecxz
aas
inc
mov
push
xchg
push
xchg
daa
xchg
daa
adc
and
lahf
ja
push
pop
leave
and
and
daa
test
pushf
sub
rolb
cmp
mov
dec
outsl
mov
das
adc
xchg
iret
inc
adc
cwtl
inc
pop
add
stos
jecxz
daa
push
pusha
mov
jb
cwtl
lea
add
repz
add
jb
aad
ds
cwtl
cwtl
nop
mov
stc
add
xchg
xchg
cltd
adc
sub
xor
dec
xchg
xchg
xchg
xchg
cltd
push
cltd
pop
cltd
popa
cltd
imul
ud2
pop
or
in
in
or
push
add
add
add
sahf
out
sahf
jno
jns
sbbl
sbb
je
out
mov
iret
jae
mov
and
and
leave
es
rcrl
cmp
daa
hlt
cltd
or
and
mov
ja
lcall
lcall
fwait
xchg
pop
xlat
or
xchg
xchg
add
movsb
mov
push
add
dec
mov
out
jns
dec
dec
idiv
incl
shll
cmp
pop
fwait
setnp
loope
addr16
fwait
mov
add
add
mov
in
or
xchg
add
adcb
push
sahf
mov
data16
pop
cmp
xchg
cmpsb
add
scas
fwait
pop
movsb
insl
ficompl
das
ljmp
repnz
scas
and
push
out
scas
std
dec
popa
or
nop
xchg
int
movsb
or
fisttpll
sub
jns
stc
add
dec
pushf
push
pushf
popa
pushf
jns
jns
insb
pushf
ja
sbbb
cwtl
pushf
mov
pushf
jns
jns
les
pushf
ss
xor
inc
movsl
rcll
push
cmp
mov
popf
inc
dec
add
js
push
pop
popf
lahf
popa
popf
xchg
test
sbb
jb
popf
test
mov
fcoml
sbb
push
enter
jg
popf
ficomps
sahf
fucomi
psadbw
add
inc
andb
jb
sub
ja
xchg
das
dec
cmpsl
nop
and
cmpsl
pop
cmpsl
xchg
xchg
out
imul
sahf
outsl
xchg
cmpsl
movsb
xchg
xchg
or
scas
ja
enter
mov
add
xchg
cmp
sbb
cmpsl
and
mov
aas
pop
xor
xchg
xchg
xchg
push
pop
data16
mov
add
pop
leave
mov
pushf
pop
and
lret
repnz
adc
std
push
mov
insl
sbb
aas
push
cmpsl
xchg
punpcklwd
xchg
test
jb
mov
cmp
leave
cmpsl
scas
push
add
mov
iret
or
or
cmp
jns
out
or
lahf
out
testl
testl
pop
pop
mov
unpcklps
test
jns
pop
mov
sub
je
jae
jnp
cmp
pop
add
inc
push
pop
stos
add
or
ja
stos
scas
mov
pop
mov
dec
cmpsb
or
stos
lahf
out
mov
outsl
adc
add
repz
add
repz
repz
or
pusha
inc
cmp
pop
mov
push
stos
test
es
iret
add
aam
repnz
or
pop
in
add
jb
scas
outsb
push
jg
mov
in
pop
mov
pushf
loope
mov
mov
fildl
bound
fisttps
push
test
xchg
outsb
daa
cmpsb
cmpxchg
pop
xor
fwait
pop
push
or
jno
sub
movsl
jae
add
jo
sbbl
lods
subb
movsb
or
sahf
aaa
jb
movsb
sbb
fldenv
lar
movsb
xor
lea
pop
movsb
lcall
andl
jmp
test
pop
jo
loopne
mov
sarl
out
pop
fnstcw
or
or
cmp
mov
movsl
or
leave
mov
dec
scas
sub
repz
add
push
lret
lret
and
movsl
xchg
mov
leave
insl
movsl
scas
mov
sbb
push
pushl
sahf
fildl
iret
add
daa
out
out
movsl
repnz
out
mov
inc
hlt
push
jns
mov
add
add
add
cmpsb
jbe
enter
and
cmpsb
cmp
xchg
mov
jbe
cmp
addr16
jl
cmp
in
xchg
popf
movsl
push
add
lidtl
add
mov
iret
repz
mov
xor
sysret
cmpsb
aad
xchg
cmp
aaa
push
leave
or
dec
cld
fs
cmpsl
mov
je
inc
jb
add
cmpsl
lods
mov
sub
fiaddl
fsubs
addr16
daa
cmpsw
pop
outsb
cmpsl
jbe
fmulp
xchg
cmpsl
jle
xchg
add
out
xchg
out
cmpsl
inc
imul
pop
jmp
rcrb
or
leave
push
loopne
leave
rcr
loope
out
sbb
fdivr
pop
or
in
call
jl
cmp
test
add
mov
jb
cmp
test
cmp
sahf
out
add
pop
test
and
cmpb
stos
inc
cwtl
mov
das
fildll
mov
iret
mov
add
cmp
cmpsb
mov
and
push
or
into
into
sahf
pop
cli
add
adc
sbb
pop
inc
push
jle
test
stc
dec
mov
test
jns
jns
test
push
jns
sahf
out
adc
adc
sahf
out
mov
out
fimuls
stos
test
popf
or
int
aad
aad
mov
pop
out
in
rdmsr
xchg
insb
push
into
push
cmp
stos
and
xor
and
xchg
stos
xor
inc
jns
out
push
or
push
or
jns
out
or
push
inc
adc
mov
jbe
xchg
mov
mov
stos
lahf
inc
pop
mov
das
lahf
jmp
mov
idiv
stos
cmc
sbb
mov
dec
jne
pop
pop
add
adc
push
xchg
or
mov
shlb
or
enter
clc
mov
stos
lahf
jbe
cmp
stos
xor
in
sahf
out
add
adc
fisttpll
add
stos
mov
mov
or
testl
in
mov
mov
sti
add
das
xchg
arpl
cmp
inc
lods
pop
pcmpgtb
add
in
daa
xchg
xchg
lahf
add
dec
cs
shr
lods
sbb
and
shrd
cmp
mov
negl
push
add
es
negb
dec
cwtl
or
lsl
mov
mov
repnz
mov
pop
jo
xchg
dec
push
jmp
adc
pop
push
or
cmp
outsl
jo
into
leave
mov
das
rcl
dec
outsb
mov
cltd
inc
scas
rorl
pop
lods
lods
pop
mov
lods
js
xlat
mov
push
loopne
repnz
aas
and
lea
mov
jns
dec
mov
inc
dec
repnz
mov
aaa
leave
rcrl
push
mov
in
daa
mov
ja
cld
and
outsl
in
mov
scas
daa
scas
das
push
add
mov
add
aas
scas
xchg
divb
dec
scas
or
mov
jp
subb
les
loopne
in
mov
dec
aaa
cmp
sidtl
out
sbb
jg
mov
cmp
jb
pop
pmulhuw
mov
jne
cmp
in
insl
xchg
fildl
sarb
sbb
pop
push
lahf
adc
decl
mov
leave
inc
xor
pop
mov
sub
mov
iret
leave
rep
minps
add
add
iret
repz
add
in
fwait
add
jns
mov
fmuls
out
mov
add
enter
jns
rcr
loopne
cmp
in
call
or
sti
sahf
adc
pop
ud2
push
or
or
mov
data16
pop
leave
jae
cld
data16
in
dec
outsb
pcmpeqd
push
xchg
xor
aas
test
sahf
out
mov
pushf
cmp
jbe
aas
ljmp
mov
incl
mov
push
dec
or
orb
mov
insl
in
xchg
mov
mov
mov
bswap
leave
leave
leave
push
pop
js
leave
leave
leave
leave
mov
in
in
add
in
in
bound
out
adc
pop
in
mov
in
popf
cmp
add
sbb
sbb
mov
sub
mov
or
dec
mov
ret
jb
inc
jo
inc
mov
mov
mov
leave
inc
repnz
jmp
add
in
mov
mov
pop
and
dec
pop
or
push
mov
xchg
and
mov
mov
jne
xchg
xchg
adcl
in
mov
cmp
mov
sti
add
or
mov
mov
mov
sub
jp
dec
push
divl
mov
xchg
jl
outsl
adc
inc
dec
lock
pop
jle
xchg
xchg
mov
dec
xchg
mov
rcll
notb
add
sbb
and
cmp
inc
mov
xchg
xchg
xchg
lahf
jg
mov
jge
out
xchg
mov
pop
cwtl
jns
out
and
jns
out
and
jns
and
in
sahf
out
sub
or
sub
cvttps2pi
adc
sbb
cs
sbb
rcr
push
inc
pop
cmovs
out
aaa
pop
pop
add
cmp
rorl
das
push
pushf
push
xchg
mov
jbe
mov
pop
invlpg
jns
daa
add
fmulp
or
leave
push
repnz
out
test
pop
mov
leave
leave
leave
inc
pop
jae
leave
leave
leave
leave
movsl
lods
in
cmp
leave
in
hlt
paddb
jns
addr16
mov
leave
leave
in
in
and
inc
pusha
popf
cmp
leave
jle
sbb
lfs
xchg
int3
ljmp
out
jns
and
and
pop
in
dec
sahf
es
sub
test
mov
xadd
xchg
out
sub
dec
sahf
ja
loopne
call
mov
lahf
xor
and
xor
outsb
pop
leave
jecxz
mov
fs
add
in
and
lahf
iret
xchg
out
popf
fstpt
xchg
add
hlt
jmp
mov
pop
add
daa
mov
cmovs
je
out
pop
imul
and
xchg
add
add
lods
mov
jns
outsb
repnz
or
or
repnz
out
cli
add
dec
ficoms
push
sbb
dec
sahf
out
adc
push
push
dec
sahf
out
pop
push
jne
dec
sahf
out
sbb
out
jns
mov
in
dec
ret
fdivrs
jmp
leave
or
pop
jo
xchg
lret
sub
into
rorb
cmp
dec
cs
push
push
out
jns
pop
pop
pusha
push
sahf
jo
js
push
or
cmp
jmp
femms
ds
sets
leave
repz
jmp
push
adc
lar
sahf
out
pop
rorb
jns
fsubs
push
lret
dec
mov
lret
sbb
and
int3
sti
mov
add
push
fcmovne
in
repnz
and
jae
push
sahf
sub
inc
rorl
xchg
mov
rol
mov
mov
movd
leave
lods
mov
lcall
sub
test
leave
hlt
cld
add
xchg
dec
fisubrs
inc
daa
ret
aaa
push
add
cmp
inc
cmovg
jns
fiadds
pop
or
orb
mov
cld
mov
dec
ds
add
into
or
cmp
cmpsb
int
pop
ret
xchg
jbe
sub
push
add
leave
repz
dec
add
pop
push
in
cmp
arpl
rclb
sahf
ds
xchg
cmpsb
scas
mov
push
sub
cmp
cltd
dec
fabs
jmp
icebp
pop
addb
inc
sbb
and
les
xor
les
sahf
pop
add
ja
mov
iret
jae
add
xchg
xchg
les
sarb
ffreep
lret
pop
outsl
mov
in
loop
ljmp
sti
add
andb
out
lds
out
xchg
add
cld
jo
pop
jb
jb
mov
cltd
dec
mov
movnti
cs
out
xchg
out
fsts
incb
cmove
inc
rcl
das
ds
enter
add
cmp
cltd
dec
fs
je
out
pop
jo
je
cmp
xchg
xchg
pushf
or
out
jbe
movl
cs
out
add
clc
mov
enter
sub
dec
and
add
imul
add
dec
aaa
syscall
mov
lret
lret
stos
mov
rol
lret
lret
lret
lret
xlat
loop
in
xbegin
flds
enter
outsl
sbb
and
pop
pop
pop
pop
das
enter
enter
pop
pop
pop
pop
enter
enter
pop
pop
pop
xchg
xchg
enter
aaa
jns
out
push
mov
mov
dec
sbb
leave
leave
leave
sbb
pop
push
cmp
leave
leave
adc
jae
jb
aam
ljmp
push
push
xor
xor
out
push
push
xor
xor
out
sahf
out
aaa
ss
aaa
sahf
out
sahf
dec
cmp
arpl
jns
out
outsb
cmp
test
jns
out
ds
mov
inc
cs
inc
rorl
faddl
repz
out
repnz
std
dec
fmull
ds
adc
pop
sub
repz
pushf
xor
dec
dec
cmp
jns
sqrtps
imul
cmp
fisttps
int
js
mov
jb
lret
xlat
pop
fisttps
stos
mov
lret
dec
xchg
push
in
iret
sbb
and
cmp
insl
in
lret
xor
xor
xor
leave
repz
enter
adc
fs
xlat
xlat
push
daa
daa
inc
add
mov
daa
mov
daa
daa
dec
mov
clts
mov
daa
daa
rcr
lret
lahf
loopne
push
repnz
lret
mov
add
xlat
xor
aas
aas
or
adc
mov
jbe
or
int3
lahf
sub
xor
fbld
xchg
shll
int3
lahf
sbb
pop
inc
out
fidivs
int3
mov
int3
mov
in
mov
jl
jg
xchg
fucomi
in
rcrb
shlb
mov
psllq
mov
in
mov
cvtpi2ps
xor
inc
dec
push
popa
pushf
dec
pop
sahf
adc
sbbb
adc
repz
mov
sbb
cmp
sbb
sbb
vmwrite
xchg
sbb
and
out
in
sti
push
and
into
adc
repz
fmull
sbb
push
xor
jae
popf
cmp
dec
das
push
into
jg
sub
into
scas
sahf
out
pop
push
add
iret
cmp
lds
add
jl
iret
or
or
inc
mov
clc
add
sub
xor
push
add
add
cmp
push
pop
popa
syscall
jns
test
or
iret
mov
push
jp
iret
aas
iret
pop
das
das
lahf
loopne
mov
iret
cmp
repz
adc
out
popf
in
lock
sbb
mov
push
rorb
push
adc
out
ret
push
sbb
jg
and
cmp
shl
push
push
and
shlb
mov
fwait
add
je
and
jo
inc
jmp
sub
inc
pop
ss
fsubrl
rcr
fmul
and
cmp
shlb
jns
ja
cs
add
mov
sar
call
or
hlt
cmp
faddl
ss
cmp
pop
inc
ds
dec
rcl
arpl
add
cmp
outsb
add
out
sahf
movsl
iret
repz
je
pop
add
or
cmp
psrlw
repz
repz
out
repnz
loopne
and
popf
rcl
push
das
xchg
out
sahf
cmp
sub
rcll
scas
pop
pcmpgtw
das
push
test
test
push
rcr
sub
pop
mov
mov
cmpxchg
mov
jns
mov
sarb
out
fmuls
iret
jae
negb
adc
shrl
push
adc
shrl
iret
repz
or
pop
ss
add
jg
shll
rorl
ficomps
addr16
outsl
iret
dec
test
setge
aas
push
add
cmp
repz
mov
daa
iret
repz
fucomip
das
out
gs
cmovo
or
or
daa
mov
push
and
sub
inc
cmp
repz
dec
adc
repz
push
outsb
pop
mov
sbb
dec
sahf
ja
push
sbb
mov
rorl
out
pop
mov
jns
leave
rcr
push
and
and
cmp
sahf
repnz
popf
cmp
in
adc
pop
push
sub
xor
jns
out
sub
sub
push
push
in
daa
iret
mov
xor
pusha
packssdw
xchg
mov
jns
mov
cmp
xor
stos
push
ret
or
xor
add
je
aas
xchg
mov
cmp
sbb
cs
mov
cs
inc
push
xchg
push
and
xor
sbb
mov
dec
stos
inc
xchg
inc
aaa
fadds
sub
outsb
daa
iret
cmp
push
push
add
jns
out
sbb
dec
sahf
out
or
or
jbe
xchg
fdivl
or
rorb
in
adc
adc
adc
and
in
jbe
pop
inc
inc
push
and
fistl
push
xorps
sub
and
fmull
sbb
push
pop
andb
pushf
fsubrl
cmpb
test
xchg
jbe
repnz
sahf
mov
loopne
cmpsl
mov
into
aas
xlat
dec
sub
js
pop
data16
rolb
dec
and
push
inc
cmp
cmp
repz
sub
cmpsl
stc
cmp
sbb
clc
call
sahf
call
aam
sahf
out
ror
enter
leave
repz
mov
sahf
out
ficoms
insb
pusha
jns
out
push
push
dec
inc
sub
pushf
ret
or
push
test
push
int3
add
nop
lret
adc
and
xor
stc
std
mov
push
aad
add
adc
clc
test
add
movsb
add
fsts
jns
and
clc
mov
loopne
inc
jle
test
shll
mov
inc
mov
pushl
add
mov
sbb
in
mov
mov
push
add
mov
xchg
outsl
mov
xor
fcomp
loopne
jb
jle
das
or
divb
inc
sub
push
dec
scas
or
sbbb
dec
cmpsl
mov
hlt
mov
jle
inc
aaa
push
pop
mov
xchg
fsubrs
sub
pop
das
mov
pop
cmpsb
add
add
add
lock
out
xor
out
push
or
adc
out
adc
cmp
rep
adc
cmp
sbb
hlt
in
sbb
sbb
out
cmp
fsubr
and
and
cmp
cmp
ljmp
mov
sbb
push
les
jecxz
cmpsb
aas
rcrb
mov
cs
push
add
pop
or
jnp
sub
or
sahf
or
inc
add
adc
orb
cwtl
out
push
xorb
xor
push
mov
jle
fcomps
push
push
xchg
sbb
outsb
cmp
pop
daa
lcall
neg
cmpsb
call
jg
mov
stc
mov
and
jnp
sub
divl
shlb
inc
add
jmp
lret
outsb
inc
icebp
or
push
sbb
sbb
and
add
pop
out
jns
out
and
add
xor
repz
or
lock
pop
lock
out
jns
mov
push
or
add
push
cld
repz
loopne
push
hlt
sbb
adc
rcrb
enter
out
rclb
and
mov
lods
and
movsb
es
nop
xor
in
clc
mov
push
fwait
orb
inc
out
xor
mov
xorb
inc
cmp
xorl
jg
cmp
out
push
pop
js
mov
sti
cmp
out
adc
xor
add
or
dec
cmp
pop
ja
adcl
dec
das
stos
dec
popf
out
dec
insb
xchg
jnp
jmp
das
mov
add
cli
or
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
jg
cmp
sub
in
adcl
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
call
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lds
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
mov
clc
repz
mov
subb
fwait
xchg
and
and
mov
int3
add
sti
aas
jno
or
mov
pop
jmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
jmp
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
incl
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
jmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
in
fs
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
ror
add
cmpsb
fmuls
out
pop
jns
mov
je
inc
inc
push
dec
test
jnp
cmpsl
pushl
insl
add
ja
popa
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
outsl
call
add
std
test
movsl
cli
test
xor
leave
mov
insb
jg
fdivs
jne
filds
or
shrl
push
ficoms
push
xlat
enter
jmp
mov
and
mov
cltd
xchg
mov
mov
or
or
and
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
call
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
ljmp
xor
test
xchg
sbb
push
sub
insb
fs
add
lcall
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
inc
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
and
sti
pop
popa
mov
into
pop
cmp
mov
jg
xor
dec
adc
ret
movsb
sti
hlt
shrl
imul
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
ljmp
adc
mov
and
jg
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
incl
pop
mov
shlb
mov
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
ds
or
or
push
in
lcall
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
dec
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
jg
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
sbb
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
mov
outsl
and
ja
int3
loopne
mov
push
add
das
es
lds
or
pop
mov
cmpsl
call
ret
shlb
ljmp
fs
es
pushf
mov
insl
add
ss
jmp
addr16
jb
call
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
out
clc
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
lcall
sar
imul
push
js
or
push
addl
mov
cmp
addr16
notl
pusha
rorb
imul
scas
fcompl
aaa
inc
cld
fldenv
filds
aaa
pusha
sbb
test
jg
mov
jmp
push
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
mov
data16
dec
popa
les
sub
test
mov
or
sbb
add
sub
pop
cs
dec
xor
pop
mov
sub
mov
add
inc
push
xlat
repz
repz
fcmovu
fmul
repz
fstp
loop
in
cmp
jae
call
repz
in
in
repz
cmc
idivb
repz
clc
stc
cli
sti
pop
popa
mov
inc
aas
sub
sysenter
ja
inc
cmpsl
push
mov
cwtl
and
iret
push
dec
xor
inc
push
addr16
je
add
out
imul
inc
insl
bound
test
sbb
inc
ss
sub
jle
je
push
cltd
out
push
pop
aas
and
inc
dec
jg
sub
inc
jns
xor
pop
inc
cmp
pop
bound
xor
outsl
insl
sti
pushl
cmp
popa
arpl
cmp
arpl
or
xor
sti
xor
bound
popa
jl
sti
imul
jbe
pop
insb
imul
xchg
insb
gs
push
dec
testb
sub
inc
or
push
inc
push
mov
dec
scas
xchg
das
xchg
push
je
scas
push
cmpsb
lods
test
push
jbe
adc
aas
sub
xlat
xor
inc
bound
gs
inc
push
push
ret
push
adc
sbb
pop
sub
out
and
cli
xor
insb
popa
jns
sub
xor
pop
dec
insb
insb
pusha
lods
imul
mov
or
je
aaa
aas
mov
test
inc
push
inc
aas
pusha
lds
add
aas
movl
jae
daa
xor
das
pop
or
and
les
inc
push
fcmovu
insb
sbb
inc
pop
fnstcw
jae
inc
inc
inc
add
mov
push
scas
add
stos
cmp
in
inc
int
push
dec
cmp
inc
subb
loop
xor
fs
ja
lcall
jno
in
dec
jge
iret
mov
add
add
mov
arpl
add
addr16
out
push
clc
xchg
into
pop
jo
jnp
in
lea
pop
jg
ljmp
cmp
add
add
push
sbb
sub
sbb
rcll
dec
aam
mov
xchg
lret
mov
rcr
lahf
xchg
out
addb
inc
jb
addr16
dec
push
dec
popa
jo
sahf
xchg
lahf
push
outsl
outsl
mov
outsl
pop
in
pop
rolb
or
pusha
sti
mov
in
pop
cwtl
sbb
sbb
nop
test
pop
cmp
rcll
arpl
cmp
pop
pop
inc
mov
jo
test
xchg
xchg
lea
lock
outsl
insb
jns
das
push
add
push
cmpsb
fcmovnu
push
shll
addr16
outsl
arpl
mov
pmovmskb
dec
mov
inc
push
bound
ja
inc
jbe
stos
jmp
les
movsl
jg
push
dec
xor
sbbb
jecxz
das
or
dec
xor
jg
inc
jo
addb
popa
xorb
sbb
adc
lods
xor
pop
inc
dec
test
fs
cli
or
aas
adc
aas
adcb
outsb
rclb
inc
push
inc
cmc
sub
bound
outsb
arpl
and
xchg
sub
pop
push
jnp
cltd
pusha
in
insl
mov
add
aaa
inc
jne
push
rcll
adc
push
xorb
mov
adc
add
mov
or
push
push
push
add
dec
aas
lcall
movl
inc
fdivr
pop
adc
dec
inc
dec
sbb
pusha
jg
std
fiaddl
add
add
or
mov
or
pop
pop
push
or
or
or
or
or
adc
adc
cmpsb
push
lock
adc
push
add
pop
sbb
adc
adc
adc
add
data16
or
pop
adc
inc
add
pusha
mov
pushf
jo
add
and
add
sahf
add
les
add
mov
shr
sbb
cmp
decl
call
xor
adc
pop
and
xor
inc
mov
adc
cmp
and
bound
js
add
mov
pusha
xchg
xorb
jbe
fsubs
xchg
sub
sbbb
add
addl
add
inc
or
cmp
adcb
sub
add
pop
adc
adc
or
pushf
into
add
cmp
scas
adc
mov
or
adc
push
adc
int
mov
adc
or
xchg
mov
lock
add
and
adc
inc
mov
mov
dec
rorl
scas
fiaddl
or
aaa
cwtl
adc
dec
cmp
lret
inc
fists
xchg
and
sub
std
cmpsb
xor
aas
imul
pushl
fdivrl
add
mov
mov
loopne
mov
fsts
rcrb
orb
mov
cmp
and
add
cmp
xor
inc
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
mov
inc
xchg
pusha
add
std
or
incl
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
inc
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
push
js
push
stc
or
xchg
jg
or
push
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
call
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
std
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
ljmp
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
das
fcomps
add
pop
jb
mov
mov
push
mov
sub
pop
mov
jl
rorl
adc
xlat
gs
jg
hlt
push
add
stc
loope
aad
outsl
jg
mov
sar
andl
aas
icebp
testb
mov
jg
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
ljmp
cli
push
inc
sbb
paddb
inc
mov
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
mov
push
push
idivl
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
fnstenv
inc
push
sub
xchg
pop
clc
pop
hlt
sub
outsl
pop
mov
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
loopne
fucom
out
sarb
sbbl
jno
or
sarb
mov
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
jg
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
lcall
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
pushl
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
pop
lock
stos
dec
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
dec
xchg
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
std
les
cli
adc
and
lahf
fdivr
stc
int3
mov
mov
mov
pop
mov
std
loop
shrl
mov
dec
incb
fisubrl
aas
mov
mov
jo
or
cld
inc
or
pop
jg
add
jle
pop
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
std
jg
call
dec
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
sar
cmp
push
jbe
mov
imul
dec
cmp
sti
push
push
in
aas
mov
fsubrl
shlb
loope
lock
and
pop
imul
add
push
sbb
sar
add
push
and
mov
adc
inc
aas
push
rcrl
inc
pop
rolb
pop
inc
jb
fistpl
adc
call
ljmp
nop
mov
inc
sti
arpl
daa
std
or
sbb
pushl
ret
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
mov
incl
fsubr
fistps
lds
fidivrl
jg
stos
incl
jb
add
dec
mov
sub
jge
xor
lahf
les
inc
mov
sbb
cld
addl
adc
cld
lcall
mov
lahf
outsl
int3
push
sbb
sti
incl
mov
jle
xchg
popa
out
out
outsl
xchg
mov
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
lcall
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
xchg
cmp
shl
cld
mov
adc
icebp
outsl
js
pop
jg
pop
shrb
rcl
jg
adc
xor
inc
sti
lcall
fisttpl
sub
jmp
lea
jp
jnp
jecxz
jg
add
ds
pop
adc
imul
or
inc
pop
xor
mov
sbb
subb
iret
mov
in
xor
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
clc
jmp
and
xchg
fidivrs
clc
fistps
insb
test
aas
repz
outsl
lock
in
jmp
stc
out
cmp
aaa
mov
clc
push
std
mov
subb
or
mov
xchg
decl
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcrb
out
pop
or
or
dec
ss
aas
lods
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
fistps
jno
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
and
aas
mov
mov
out
cmp
or
addr16
sbb
cld
daa
jp
cld
jbe
adc
cltd
or
mov
ret
nop
push
sub
add
lock
pop
pop
addl
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
add
mov
fbstp
out
xchg
add
out
icebp
mov
loope
mov
pop
leave
xchg
cmpsl
popf
sti
mov
fbld
mov
outsl
das
push
in
jge
out
ret
cmpsb
cmp
call
xor
decb
jbe
add
decb
dec
adc
sbb
jo
call
popf
iret
jb
jo
or
mov
cmp
int
add
push
pop
aaa
std
ja
test
dec
inc
das
js
xchg
xchg
fimull
ret
and
pusha
dec
ror
sbb
aaa
inc
push
pushf
jecxz
adc
shrb
adc
aas
pop
clc
loope
loope
mov
lahf
jp
pop
inc
push
jg
jmp
lods
mov
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
add
movsb
loop
dec
sarl
pop
out
jg
jno
ret
shll
cmp
jmp
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
inc
mov
in
sbb
xchg
imul
jmp
outsl
jmp
add
mov
daa
jmp
faddl
mov
inc
push
jae
lcall
push
imul
pop
stc
push
dec
adc
jmp
cmp
mov
mov
enter
inc
add
decl
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
incl
mov
mov
fildll
fsubrl
dec
add
or
inc
or
add
jle
sti
push
sti
pop
inc
dec
push
mov
fs
push
cmp
call
dec
int3
pop
iret
and
add
jge,pn
dec
push
push
leave
and
or
pushl
fistl
jl
mov
and
cli
aas
cmp
or
into
lods
lret
scas
push
clc
jns
pushl
inc
push
popf
add
lcall
jle
pop
push
hlt
and
sbb
xor
and
jmp
test
test
lret
lock
mov
mov
fwait
lods
mov
xchg
decl
jmp
fwait
pusha
and
out
cmc
test
jb
sbb
cmp
decl
mov
rcr
dec
xchg
cs
xchg
in
pusha
pop
jo
mov
mov
xchg
inc
dec
jne
hlt
or
outsl
xchg
adcb
or
sub
xlat
dec
cmpsl
or
jmp
aaa
imul
push
xchg
lea
fs
jb
jb
xchg
leave
mov
repnz
call
shlb
les
fidivrs
pop
loope
stos
dec
xchg
push
and
sub
out
push
xorb
jmp
stos
in
add
mov
out
loopne
cmp
dec
aam
jns
addb
add
mov
decb
cmc
add
inc
loop
lahf
sbb
jne
loope
pop
mov
test
jg
ffree
cmp
jmp
daa
imul
bound
cld
repz
mov
xlat
lret
push
jg
xor
mov
ljmp
mov
add
je
imul
pushf
pop
imul
and
addr16
movsl
decl
nop
push
insb
lods
jg
cmc
adc
test
movsb
mov
ljmp
aaa
add
xchg
sub
sub
cmp
fsubrl
loop
gs
push
jbe
enter
jbe
test
icebp
xchg
sub
lods
inc
mov
mov
std
stos
call
pop
push
pushl
dec
sub
repz
fdivr
dec
das
jmp
jle
mov
jmp
std
lds
incl
test
call
ret
test
xchg
sub
push
ret
aaa
inc
stc
add
pushl
push
sbb
les
inc
shlb
xor
imul
push
sub
dec
push
das
rcrb
dec
sti
xor
data16
push
in
add
aam
push
fists
ljmp
push
sub
inc
insl
push
jnp
icebp
push
xor
rorb
popa
pusha
int
sub
clc
mov
pop
cmpsl
cmp
inc
lock
mov
mov
sub
or
jmp
sbb
enter
out
xchg
and
addr16
push
cld
sbb
pop
mov
aaa
add
dec
loop
xor
call
pop
sub
repz
mov
jbe
test
mov
pushl
xor
sbb
xchg
or
das
mov
data16
xchg
push
push
inc
mov
lcall
addr16
std
pop
xorl
jbe
pop
movsb
idiv
aas
sbb
out
mov
pushl
ret
jb
push
mov
test
rcrl
add
aas
mov
lods
lret
ret
mov
or
jp
mov
jo
and
mov
sbb
in
inc
mov
or
loopne
pop
add
inc
stos
in
and
outsb
mov
cmp
push
aam
ret
cmp
cmpsb
mov
pop
data16
test
je
daa
sub
jmp
xchg
xchg
decl
push
jp
ja
push
shlb
sub
adc
imull
flds
sbb
and
mov
and
lods
push
imul
inc
iret
pop
lcall
inc
pop
loopne
pop
hlt
push
in
js
xor
negb
repz
push
in
jmp
mov
and
push
dec
not
dec
pop
inc
data16
loopne
lcall
repnz
and
pop
popa
imulb
cmpsb
cltd
shll
inc
inc
repz
jae
fidivs
xchg
xchg
push
fildll
incl
call
mov
decl
loop
mov
movsb
jne
or
call
mov
xor
jl
or
inc
cmp
incl
pop
movsl
loop
xchg
out
cwtl
mov
stos
sub
icebp
sub
pop
dec
test
pushl
jmp
pop
imul
cmp
loopne
push
movsb
test
cmovo
pop
mov
or
std
cltd
mov
inc
sub
lock
insl
pop
jo
lret
xchg
lods
jbe
mov
mov
cmp
sub
sub
loopne
jne
aaa
pop
cmc
mov
loope
in
cli
sub
mov
pop
pop
push
pushl
lds
lock
inc
add
mov
cltd
sub
cmp
stos
and
mov
mov
xchg
loop
dec
int3
aas
and
scas
mov
ret
sub
cmp
cwtl
in
jg
stos
iret
aaa
push
cltd
mov
mov
stos
ds
sbb
and
je
pop
mov
incl
in
daa
mov
sbb
int3
mov
dec
rorb
adc
sbb
loopne
pop
adc
jmp
xor
das
dec
jnp
fwait
jmp
imul
cmp
test
fwait
jg
xchg
inc
in
movhps
decl
sbb
loop
inc
sbb
push
insl
lds
dec
das
scas
lret
addr16
or
loop
daa
inc
sbb
cmp
jg
add
sarl
in
pop
pop
repnz
and
in
decl
hlt
cmp
in
mov
call
pop
xor
repz
push
lret
mov
push
push
push
outsl
test
inc
es
jbe
jnp
rclb
sbb
ret
in
mov
incl
inc
pop
push
add
xor
pop
test
xchg
mov
popa
xchg
sub
sbb
inc
xor
dec
mov
xchg
push
outsb
mov
push
add
das
shl
or
lcall
jbe
mov
fisttpll
mov
ljmp
pop
xchg
dec
mov
jg
inc
stc
adc
sub
pop
scas
nop
cmpsl
stos
adc
dec
push
sbb
xchg
mov
dec
dec
lret
add
sbb
fldcw
inc
sbb
fadds
cmc
jmp
dec
in
je
dec
or
stos
pop
loope
cmp
mov
in
addl
mov
dec
add
mov
aas
sbb
mov
cld
dec
jae
loopne
movsb
int3
cmp
dec
jmp
decl
jo
xchg
jl
push
out
xchg
nop
insl
and
mov
nop
jno
roll
lcall
into
movsl
sub
jp
lret
push
cmp
int3
subl
leave
test
das
push
es
pop
cmc
inc
test
repz
aaa
in
adc
lcall
jg
mov
push
cmc
lahf
mov
sub
add
fsubl
add
lahf
sbb
test
incl
cmp
enter
imul
xchg
mov
xor
cmp
xchg
sbb
std
imul
outsl
xor
add
mov
push
lret
jns
out
add
mov
and
call
fcompl
idiv
mov
push
add
adc
pop
inc
inc
add
mov
aad
lock
cld
mov
testl
aas
jns
movsbl
inc
pushf
pop
rcrb
push
pop
mov
inc
dec
add
call
iret
mov
cmp
or
ljmp
stc
cmp
aam
sbb
and
push
push
mov
das
dec
fs
rclb
pushl
mov
mov
pop
sub
shlb
mov
vpcmpgtd
mov
mov
jno
ja
out
mov
and
push
test
addr16
push
test
dec
cli
call
pop
sbb
fsubrl
add
push
push
lret
mov
arpl
or
push
fstl
jno
repnz
inc
fwait
mov
aaa
std
ljmp
mov
sub
pop
push
lahf
xchg
int
pop
ficoms
mov
inc
mov
pop
outsl
ljmp
mov
ret
jg
dec
filds
add
sbb
test
inc
call
adc
ljmp
jno
sbbl
sub
cmp
dec
stos
out
pop
jmp
xchg
in
rcrl
fdivp
lods
mov
popa
enter
gs
jnp
mov
sbb
pushl
cld
fcmovnbe
xchg
ret
mov
dec
mov
mov
push
sbb
jmp
js
pop
sbb
xchg
push
inc
jle
jl
push
loop
mov
xchg
push
daa
cli
cmp
push
decl
lock
jle
mov
pop
neg
insb
lods
adc
and
dec
cmp
out
loop
mov
sbb
and
ret
jmp
jo
mov
mov
idivb
or
adc
push
cmpb
mov
cmp
sub
jp
in
jo
rcpps
fistps
pop
icebp
mov
iret
fidivs
icebp
push
cld
inc
movsl
add
fcomip
testb
push
in
test
test
jmp
pop
adc
stos
ror
outsb
adc
mov
incl
aam
les
mov
jno
lahf
aaa
hlt
popf
into
cmpsl
mov
mov
fcomps
adc
jns
push
jmp
ficoms
mov
test
fmuls
xchg
cmpsb
mov
pusha
adc
mov
cmp
add
cli
daa
rclb
push
cld
roll
decl
ljmp
outsb
lods
imul
sub
sti
jge
and
mov
insb
add
lcall
aaa
and
jecxz
mov
and
jb
sub
cwtl
pushl
jg
ljmp
cmpsb
out
push
push
mov
mov
xor
add
hlt
rcl
fldcw
cli
jg
cmc
int3
cmp
jg
fbstp
je
add
and
adc
lcall
sti
mov
aas
lods
rep
inc
or
or
dec
out
pushf
idivb
sbb
cwtl
inc
jne
call
mov
jmp
inc
ss
cmp
cltd
rcrl
call
je
sub
sub
and
mov
sbb
sbb
dec
sub
sbb
test
jl
hlt
pop
sbb
stos
adc
gs
les
cmp
lock
cli
mov
lcall
jg
push
aas
jae
jnp
xor
jl
loop
dec
add
cmpsl
push
jg
inc
jns
add
repnz
incl
aad
lret
jb
push
rol
into
pushf
stos
mov
mov
pop
pop
xor
lock
lcall
sbb
popf
addr16
sbb
pushf
out
xchg
cwtl
scas
mov
add
test
lcall
mov
jae
mov
dec
xor
jno
mov
scas
ljmp
jbe
js
imul
xchg
xchg
aad
mov
leavew
rcrl
ret
mov
arpl
stc
pop
pop
roll
adc
and
nop
in
mov
dec
adcl
hlt
mov
cmp
pop
push
je
xchg
or
ljmp
jmp
xchg
lock
loopne
test
sub
mov
shl
aas
lods
dec
mov
sub
jb
ret
in
jg
incb
imul
xchg
fwait
and
mul
rcrb
adcb
mov
int
jg
jmp
fxch
fwait
dec
pop
sahf
inc
std
adc
aam
pop
incl
hlt
call
mov
mov
out
loop
sub
add
cwtl
leave
cwtl
iret
adc
into
adc
jno
ljmp
repz
in
ds
cltd
jmp
notb
or
arpl
pop
je
fwait
pop
and
ljmp
lods
imul
xor
jecxz
call
insb
psrad
outsl
sahf
movsb
fwait
sbb
in
shl
clc
push
pushf
lods
jo
ljmp
sub
pop
mov
adc
sbb
xchg
xchg
test
sahf
push
cmp
sub
ljmp
lcall
lock
cwtl
cmc
inc
std
hlt
mov
xor
fidivrs
jg
jl
push
cmp
int3
jb
lods
and
bound
jg
clc
repz
push
in
cmp
cwtl
popf
mov
test
jp
inc
aad
rorl
lahf
jnp
test
repnz
pop
xchg
pause
adc
lcall
dec
call
jae
xchg
call
dec
xor
pop
mov
adc
push
jne
mov
push
les
dec
cmpsb
sbb
ljmp
inc
jo
add
outsl
mov
jb
pop
adc
loope
push
xchg
and
lds
clc
mov
or
jo
sar
aad
mov
stc
xchg
lock
popa
mov
dec
cmp
insl
out
fcomip
vmaxss
cmp
lods
addr16
sub
xor
mov
add
test
call
addr16
or
lock
in
xchg
stos
xor
xchg
mov
mov
xchg
cmp
sub
mov
xor
fistpll
cmpl
sub
sbb
lret
enter
jmp
lret
adc
push
mov
mov
sti
mov
rorb
cmp
jmp
lods
push
insl
data16
mov
dec
out
fidivl
and
mov
repnz
jle
jmp
dec
hlt
jmp
and
js
cmp
or
cwtl
in
sarb
pop
out
xchg
push
push
loop
mov
ret
imul
out
das
sub
pop
xchg
in
test
mov
lock
add
test
mov
jg
loopne
xchg
gs
xchg
testb
dec
cld
xchg
loope
lcall
xchg
jo
lods
jle
cmp
xor
fucomp
push
es
sub
decl
aam
mov
mov
mov
lock
mov
dec
lahf
jae
sub
aaa
mov
xchg
incl
rcrb
or
cld
mov
xor
ja
jae
dec
pop
sub
lock
adc
cmp
add
mov
mov
xchg
out
inc
jnp
sub
in
push
adc
leave
jnp
in
mov
or
dec
scas
jge
mov
xor
cmpsb
pop
cmp
ret
lcall
adc
sub
cmp
sub
subl
fptan
test
incl
aam
mov
push
pop
in
add
ss
jge
in
jecxz
xchg
pop
insl
dec
adc
dec
or
test
sar
jo
sbb
clc
addl
mov
lcall
and
fiadds
xchg
incl
fldt
add
fldcw
gs
idivb
push
mov
dec
xchg
clc
decl
xlat
and
mov
fdiv
lcall
xorl
add
cmp
popa
mov
push
push
shl
sub
fdivrp
lcall
ds
add
movsb
cmpl
outsl
and
mov
push
or
fidivl
incl
jne
cmc
mov
stos
mov
sti
incb
and
out
test
or
add
jmp
sub
inc
jnp
inc
iret
and
mov
call
in
je
sub
fucom
inc
push
fisttps
mov
push
mov
inc
ja
cld
lcall
hlt
int3
mov
xor
push
aas
push
mov
and
push
pop
xlat
lret
int3
dec
repnz
es
shlb
pop
lock
add
inc
testb
mulb
outsl
cmp
jg
ljmp
inc
xor
jle
test
test
xchg
inc
std
mov
add
inc
pop
call
std
aad
enter
pushf
xor
pop
test
pop
or
shlb
inc
push
mov
lcall
sbb
mov
ja
imul
sub
jb
cmp
push
adc
movsb
lea
jae
in
call
pop
lods
lmsw
lcall
cmp
inc
mov
mov
mov
dec
adc
mov
in
pop
jge
clc
jno
test
ret
sti
in
ljmp
js
and
cmp
push
add
sub
loopne
cmp
ljmp
cmpsb
push
or
sub
mov
pusha
in
or
xchg
mov
inc
push
mov
cmpsb
mov
rorl
lret
dec
js
aam
aam
popa
push
and
jmp
fcoms
lock
mov
xlat
movsl
push
shr
rcrb
pop
push
dec
push
pop
dec
cmp
jmp
daa
daa
cmp
ljmp
popf
cmp
jb
scas
shl
jg
dec
ds
jmp
and
outsl
inc
or
fs
mov
out
sub
outsb
mov
sbb
call
sbb
fwait
or
lcall
insl
jge
ficoms
mov
popa
pop
cmp
jno
jmp
mov
ficomps
jl
lret
xlat
outsb
adc
mov
cltd
mov
aam
inc
mov
in
test
cmp
jo
leave
mov
ljmp
imul
iret
ret
cmp
pusha
sub
scas
mov
xlat
pushl
mov
lret
aas
push
sub
iret
stc
push
mov
sbb
fcomip
jmp
adc
mov
cmpsb
add
and
lahf
jnp
std
cld
fcoml
cmp
sbb
imul
insb
faddp
aad
std
cmp
loopne
aaa
cmp
clc
test
and
sti
adc
xor
lcall
nop
mov
je
sbb
push
test
arpl
pop
lods
outsb
cmpl
decl
int
push
cwtl
inc
stos
dec
mov
fsubr
mov
dec
movsl
push
jb
xchg
ss
loopne
rcrl
dec
mov
mov
adc
adc
sbb
shrb
push
scas
ljmp
mov
andl
mov
mov
ljmp
jne
add
nop
fidivl
cmpsl
out
shlb
push
lret
ret
je,pt
sti
repz
sbb
call
pop
repnz
wbinvd
jmp
inc
dec
cmpsb
mov
aaa
cmc
and
leave
mulb
inc
ss
lcall
pop
jmp
shlb
jl
cmpl
orl
ror
popf
pop
cmc
jg
in
add
mull
and
mov
and
pushl
scas
cmp
loop
test
push
ret
les
jl
into
movhlps
cmp
adc
cltd
inc
repnz
call
cmp
mulb
ret
dec
jne
rol
into
sub
rcrb
xor
adc
pop
jg
inc
xchg
or
push
out
sub
xor
lcall
jmp
push
cmp
shr
lods
sti
pop
into
xor
ljmp
incl
cmpsl
cwtl
add
adc
sub
jg
hlt
popf
dec
repnz
xchg
outsb
addb
fcmovnb
out
cld
mov
mov
mov
stos
cld
cmp
std
push
lods
xorb
out
out
pushl
and
adc
mov
xchg
push
cli
push
jo
cmp
cwtl
dec
es
aad
leave
inc
jno
fisttpll
movsl
leave
xchg
sar
es
iret
jae
push
cmc
xchg
xor
cli
in
mov
sub
cmp
ljmp
push
mov
lahf
enter
pusha
rcrl
jge
pushl
dec
adcb
mov
test
fisttps
cmc
sub
cs
adc
xlat
pop
sub
and
bound
mov
pusha
cmovbe
outsb
sub
inc
lret
out
jbe
sbb
mov
mov
xlat
js
insl
gs
sbb
ss
in
jge
sub
cmp
fsubrs
enter
cmp
mov
int3
shr
test
inc
dec
lahf
sub
lcall
lods
jb
xor
test
jb
pop
nop
loopne
dec
cwtl
and
sub
adc
pushl
pop
inc
out
jno
lea
cmpsb
jae
mov
inc
add
subl
stos
call
test
sahf
mov
push
jo
stos
mov
rclb
inc
clc
xchg
jnp
lods
pop
jp
adc
xchg
shrb
pushf
mov
pop
jbe
into
or
add
aaa
idivl
sbb
orb
inc
inc
dec
rep
mov
aas
adc
jbe
xchg
jno
push
mov
sbb
in
inc
mov
jo
repz
stos
push
movsb
dec
out
pop
pop
mov
incl
sub
fcoml
jo
jmp
popa
dec
xchg
mov
sar
decl
lock
xchg
or
mov
adc
mov
addr16
add
mov
cltd
aad
lock
cmp
xchg
sbb
test
inc
insl
lret
xchg
jbe
cmp
ljmp
cli
add
fimuls
mov
in
jbe
xchg
adc
mov
dec
adc
jg
shll
mov
cwtl
mov
inc
rorl
cmp
fstpl
ljmp
pop
into
mov
cmp
cs
mov
cmp
lock
test
add
enter
call
lahf
fstpl
pushf
pop
pop
arpl
mov
mov
jno
push
imul
ljmp
xchg
aam
push
pop
lods
jne
push
fsubl
std
in
push
xchg
mov
frstor
mov
rorl
call
call
loope
or
ja
mov
push
ljmp
ss
paddusw
pop
cltd
push
std
add
nop
cld
pop
add
mov
ljmp
jb
pushf
stc
insl
mov
les
hlt
repz
movsl
rclb
call
xor
test
push
xchg
lods
cmc
sub
mov
cmpsl
push
fcmovnbe
pop
jmp
test
popa
xchg
xor
aas
xchg
data16
cmc
add
inc
inc
mov
mov
pop
movsb
mov
jle
lret
cmp
add
imul
cmpsl
mov
shrl
pop
nop
fisttps
leave
push
ret
mov
fwait
sub
sub
cmp
clc
pop
mov
in
adcl
stc
jle
pop
or
stos
das
lea
cmp
pcmpeqb
jns
push
pushf
mov
ror
popa
das
sub
sbb
mov
call
xchg
mov
dec
inc
mov
jne
xor
fnstenv
inc
fsubl
cmpsb
push
aaa
std
cli
dec
sti
andb
and
jbe
xchg
adc
jl
ljmp
jmp
in
sbb
pop
scas
and
out
int
lret
adc
lcall
inc
int
notl
pop
fsubrl
mov
repnz
arpl
call
push
sbb
mov
aam
push
mov
nop
aad
adc
popa
call
push
mov
xor
fstps
shll
sti
add
insb
fldl
incl
xchg
fidivs
inc
push
mov
nop
mov
repz
imul
dec
ret
cltd
cmp
pop
dec
stos
dec
movsl
loopne
pop
mov
and
add
cld
lock
incl
sbb
inc
adc
sub
repz
mov
xchg
cltd
push
jg
mov
push
insl
mov
and
mov
mov
call
cmp
xchg
cmp
daa
cmp
pop
lahf
mov
push
push
mov
cmp
push
xor
lcall
ja
mov
addl
add
mov
push
gs
call
jmp
push
aas
push
sub
sub
cwtl
imul
das
adc
jb
push
xchg
mov
inc
in
pop
out
je
jge
mov
fs
loop
fisttpl
fistps
imul
ljmp
scas
dec
jae
cmp
ret
pop
jo
or
sbb
orb
data16
imul
mulb
pop
inc
int3
and
ffreep
pop
add
inc
pop
inc
jge
imul
pushl
mov
test
sbb
mov
xor
jbe
aam
idivb
xchg
jg
incl
dec
mov
sub
add
add
mov
lcall
pushl
xor
fildll
adc
add
push
xchg
rorl
lret
lcall
into
int3
jmp
cmp
popf
aaa
pop
imul
cld
push
jmp
popf
jne
push
imul
daa
sbb
fldl
jno
or
adc
fmuls
jp
fisubrs
sub
lcall
mov
xchg
jns
cmpsl
out
das
add
notl
insl
jmp
inc
mov
int
sub
jp
ja
mov
int
lcall
fadd
lahf
inc
imul
mov
popa
pop
inc
jp
mov
xchg
lea
and
push
arpl
aas
mov
and
test
aad
jnp
jmp
dec
add
repz
add
cmp
lds
clc
movsb
push
sbb
testb
and
push
push
ljmp
adc
gs
lcall
cli
sbb
popf
inc
js
sbb
jge
xor
pop
jp
xlat
cmp
popf
push
icebp
incl
clc
mov
test
inc
call
dec
int3
jle
cmp
mov
jmp
xlat
fistps
mov
mov
xchg
jnp
fsts
cli
fcomip
jg
sub
dec
aaa
ret
cmc
out
mov
pusha
mov
or
cmp
mov
inc
mov
leave
push
cmpsb
add
mov
inc
aaa
sbb
ljmp
imul
loop
lret
add
xor
jne
mov
push
mov
lret
mov
fucom
imul
and
xor
xor
and
aam
outsl
xchg
test
stos
and
call
jae
and
roll
ljmp
inc
js
fsubs
inc
push
imul
xchg
and
xchg
stos
pushl
pop
fstpl
or
and
cs
cmp
xor
addr16
or
cli
out
enter
add
cmpsl
loope
in
cmpsb
sarl
call
jae
enter
cli
jmp
pop
lods
test
push
jmp
jmp
jnp
pop
dec
aam
jmp
sbb
mov
adc
fwait
add
jno
jmp
fcoms
test
xor
decl
into
mov
sysexit
adc
xchg
rcrb
cmp
loop
decl
push
xchg
or
inc
movsl
icebp
mov
mov
add
push
hlt
popf
jg
mov
mov
mov
lcall
and
movsl
mov
lcall
das
lcall
jl
push
and
fidivrs
dec
and
bound
inc
mov
and
push
xchg
mov
sub
std
xchg
cmpsb
mov
push
push
lahf
mov
push
sarb
cmp
sar
ljmp
clc
ret
iret
add
and
push
add
data16
lcall
fstpt
cmp
incl
push
mov
hlt
lods
and
negl
inc
test
mov
enter
imul
jmp
leave
jne
dec
cld
push
insl
or
jecxz
xchg
jecxz
push
or
out
jo
cmp
out
in
call
mov
std
mov
add
xchg
xor
movl
pop
cmc
jmp
push
pusha
push
into
adc
jge
ret
push
sbb
mov
aam
cwtl
push
mov
mov
mov
and
loopne
mov
cmp
or
cmp
cltd
pop
add
cwtl
xchg
sub
lret
popf
xor
xor
or
decl
xchg
xor
xchg
pop
mulb
xchg
stos
xor
mov
mov
hlt
in
jo
aas
jne
ljmp
xchg
pop
nop
xchg
jns
idivl
loope
clc
pop
add
jmp
push
ds
loopne
sub
icebp
clc
mov
jg
es
pop
sbb
lock
adc
push
fs
jg
cmpsl
aam
xchg
add
and
xchg
pop
loopne
push
lcall
jne
inc
idivb
out
cli
mov
fnstsw
into
int
jbe
fadd
nop
das
adc
out
mov
jnp
mov
jl
inc
inc
jmp
add
push
sub
aam
sub
or
mov
mov
gs
sahf
mov
hlt
dec
fs
push
rolb
loopne
aad
js
insl
pop
out
inc
fwait
jae
and
inc
cld
jle
dec
filds
mov
rorb
adc
mov
mov
pop
dec
push
fsubp
jno
cmp
icebp
mov
mov
jle
jo
mov
je
test
push
out
pop
aam
and
jg
xchg
mov
mov
pop
jle
xor
jle
or
or
lahf
lcall
cli
xor
mov
and
add
adc
ljmp
je
cmpsb
mov
int3
xor
dec
xchg
cs
inc
push
cld
cli
mov
xchg
outsl
decl
dec
sbb
movsb
repnz
in
std
clc
scas
adc
lahf
mov
cmp
and
incl
cld
cmp
dec
stos
stos
sub
xor
jl
jb
inc
mov
mov
decl
xchg
mov
add
xor
scas
gs
insl
fnsave
push
shrb
decl
dec
fwait
and
mov
mull
ljmp
dec
pop
cli
fcomip
dec
dec
sarb
lea
in
test
adc
incl
push
dec
jo
or
cs
adc
in
sbb
mov
lea
inc
cltd
faddl
sarl
dec
es
into
pop
xchg
push
dec
push
test
ret
mov
pusha
ljmp
push
pop
shrb
push
int3
lret
jns
cld
push
jge
add
in
or
mov
aas
call
pop
pop
clc
fcmovu
xchg
cwtl
or
rclb
cmp
mov
mov
shrb
push
add
in
jg
inc
mov
lock
cmp
fcmovnb
stos
mulb
mov
sub
adc
ljmp
xchg
push
ja
popa
cld
cmpsb
xchg
jl
lret
das
mov
pop
out
jg
mov
or
jo
and
into
inc
out
xchg
and
loope
xchg
jmp
xor
ljmp
movsl
dec
adc
scas
mov
sahf
push
js
pop
pop
loope
jl
xchg
ljmp
in
push
pop
jle
push
fs
sahf
aas
mov
inc
dec
and
xchg
sub
add
ljmp
sbb
cmp
aas
push
jae
lcall
add
lcall
mov
pop
sti
lcall
sbb
into
mov
push
ficompl
fidivrl
push
pop
and
ljmp
pusha
popf
addr16
repnz
js
adc
xchg
aam
leave
cltd
das
push
les
cmp
lods
push
xor
add
sub
ja,pn
cmp
repz
aam
hlt
jnp
dec
ljmp
jecxz
dec
repnz
fsubp
fs
jb
pushf
push
mov
in
pop
cmpsl
hlt
mov
lcall
mov
in
push
iret
ficoms
dec
iret
sahf
mov
outsl
aas
loop
fbld
sahf
mov
decl
shlb
sbb
xor
fstpl
inc
int3
mov
pop
pop
in
filds
call
inc
push
push
aas
fwait
stc
mov
xchg
movsb
push
push
mov
hlt
inc
xor
jmp
jne
mov
bound
xchg
hlt
mov
add
imul
fists
sub
push
jne
push
add
sub
fildl
test
lcall
xor
test
mov
pop
push
leave
mov
mov
jne
insl
inc
mov
lcall
sarl
and
or
nop
or
mov
inc
pop
cld
mov
in
decl
cmpsl
loopne
pop
mov
add
push
pusha
addr16
mov
pop
enter
xchg
aam
jbe
ficompl
icebp
jmp
dec
push
dec
xor
movsl
ror
lds
les
or
scas
pop
iret
xor
push
jle
dec
mov
call
int
inc
mov
or
mov
jmp
mov
sbb
inc
sub
jecxz
jge
xor
sub
jbe
pushl
fwait
mov
jo
mov
push
cmpsl
jbe
mov
xor
add
ja
push
mov
jmp
cmp
fists
jecxz
mov
ret
jmp
mov
sub
incb
ljmp
push
push
push
pop
cli
mov
jo
nop
out
pop
enter
in
int3
jle
fiaddl
mov
pop
xor
mov
pushf
cld
clc
xchg
xchg
scas
shlb
add
cmp
ljmp
pop
dec
aaa
shld
mov
mov
mov
popl
outsl
out
mov
mov
cmpsl
cs
xor
push
stc
sbb
das
dec
rorl
imul
mov
lcall
push
into
out
xlat
std
xlat
adc
dec
out
sub
lods
imul
jno
mov
or
jecxz
decl
cmp
mov
inc
lea
push
enter
lea
in
pop
lret
decl
jno
add
in
and
inc
and
and
xlat
push
push
dec
insl
lock
adc
pusha
popa
out
inc
jp,pt
lret
sub
ljmp
mov
iret
das
int
push
sbb
adc
xchg
pop
sti
adc
pop
js
into
and
call
test
fsubr
jne
sbb
nop
sahf
push
fiaddl
imul
cmp
sub
sub
lret
xchg
dec
ss
dec
or
pop
lret
or
add
test
fcomps
cmovle
insb
pop
adc
mov
mov
loope
cli
xor
xchg
xchg
shr
and
into
jg
inc
int
lds
jge
dec
sub
daa
xchg
lock
mov
outsb
mov
lcall
jmp
mov
addb
shll
pop
shl
jmp
xchg
jmp
or
mov
fsubrl
pushf
fsubrp
lret
dec
add
sbb
test
jg
push
pop
cmp
insl
mov
lock
mov
add
pop
dec
sbb
imul
mov
in
fcomip
inc
jnp
jne
std
fldcw
es
cmp
fisttps
push
test
stos
aad
mov
lcall
mov
mov
jl
or
ljmp
popa
cmp
mov
add
clc
lahf
leave
cmpsb
sub
mov
pop
adc
into
or
lcall
shll
jne
stc
pop
stos
push
call
and
pop
sbb
xorl
jge
sub
pop
jae
jecxz
ljmp
aaa
loopne
shrl
rcll
cmpsb
scas
bound
or
and
push
nop
repnz
js
push
pop
mov
mov
inc
in
lods
lcall
adc
pop
cmc
call
push
xor
jne
hlt
cld
movsb
pop
mov
fdivrp
dec
sti
cmp
lret
decl
xchg
sbb
push
mov
and
inc
cmpsl
sti
imul
sarl
out
jbe
lcall
loope
sbb
jo
pop
sbb
lods
push
pusha
hlt
sti
sub
lods
add
jecxz
fcomip
inc
popf
ljmp
or
sbbb
xchg
cmp
mov
aad
push
lods
cmp
arpl
cmpsl
mov
addr16
stos
xchg
add
mov
ja
xlat
sbb
mov
mov
ljmp
pop
test
cmp
call
repz
mov
lahf
js
mov
mov
xor
leave
pop
xchg
decl
inc
pop
sar
mov
out
sbb
push
push
cwtl
ja
xchg
outsl
dec
jae
mov
dec
push
mov
cs
dec
inc
xchg
sbb
call
outsb
scas
popf
clc
pushf
mov
mov
stc
lret
xor
mov
or
lcall
rclb
push
ljmp
pushf
adc
les
dec
and
gs
incl
lcall
pop
movsl
sbb
cmp
cmpsb
fucomp
xchg
hlt
ficoms
jg
inc
ss
or
dec
sub
imull
mov
lret
int3
ss
and
call
add
lret
adc
mov
push
std
cwtl
inc
gs
stc
jle
mov
xchg
xchg
fsubrl
dec
cmp
repz
stc
aaa
dec
sub
xchg
mov
jle
aad
dec
pop
dec
jo
addr16
ljmp
lods
cmp
test
loop
mov
inc
ljmp
push
add
incl
in
mov
jno
cmp
ljmp
push
mov
arpl
push
pop
mov
iret
ljmp
xchg
adc
sti
cmp
add
and
lock
inc
icebp
push
xchg
push
test
pop
jg
jmp
cmp
sub
lahf
addr16
mov
pop
cmp
jl
cli
decl
xor
push
jg
fstpt
lcall
pop
lods
std
xor
cmp
call
mov
dec
bound
cmp
inc
adcb
test
sub
cmpl
inc
cltd
add
out
es
in
mov
push
std
mov
inc
inc
data16
xchg
aaa
mov
xor
push
sbb
mov
popa
sub
pop
iret
add
cmp
inc
pop
jg
sub
lahf
hlt
imul
out
fstps
add
xor
jp
and
movsl
into
dec
loope
fwait
mov
lcall
xchg
xchg
push
mov
jp
fsubrs
and
push
insl
lcall
ljmp
addl
dec
or
scas
pop
fists
push
or
pop
mov
inc
mov
mov
pop
mulb
fnstsw
hlt
pcmpgtw
lods
add
xchg
mov
jg
and
ficoml
jns
lock
push
xor
movsb
add
sbb
dec
push
add
mov
cmp
jb
inc
sarb
add
cli
dec
push
ja
decb
decl
cmp
push
dec
lock
jns
add
nop
sub
pop
dec
mov
decl
dec
filds
mov
adc
imul
dec
xor
data16
decl
iret
or
dec
xchg
dec
outsb
call
xchg
fwait
jge
stc
jb
fwait
jle
sub
push
into
jmp
scas
xor
lods
adc
push
push
mov
iret
jg
ljmp
xlat
call
adc
lcall
negl
test
cmp
in
adc
mov
inc
sub
test
decl
mov
notl
loop
imul
xor
stos
xchg
sub
lret
and
aas
repnz
cwtl
mov
add
pop
test
mov
and
adc
loop
or
adc
gs
jae
aam
push
ja
mov
incl
mov
mov
andb
movsl
or
rcl
call
cmp
sub
stc
mov
jno
mov
push
dec
cs
int3
aaa
sub
les
jns
jo
call
sbb
stos
pop
pop
xor
pop
or
xchg
ret
test
int3
out
add
inc
ja
sarl
mov
dec
clc
lock
ja
and
mov
fwait
sti
xchg
das
cli
jmp
sbb
ja
push
imul
mov
and
cmp
insb
jae
lcall
mov
ljmp
add
js
sub
cli
mov
sub
pop
cmp
decl
sub
iret
mov
push
push
push
sbb
stos
mov
xchg
stos
push
fcomi
jbe
outsl
in
xor
xchg
fwait
xchg
sbb
incl
js
add
mov
push
mov
jb
xor
addr16
xlat
or
das
movsb
jb
jle
dec
stc
push
xchg
xchg
dec
cs
push
lea
repz
add
xchg
imul
fs
addr16
and
jl
mov
stc
adc
in
out
jg
pushl
jg
mov
dec
bound
sbb
shll
pushl
popa
mov
addr16
test
mov
xchg
xchg
rolb
xchg
movsl
fwait
mov
inc
jge
jecxz
push
sub
cmp
cmp
pushf
mov
xchg
mov
jmp
inc
pusha
inc
nop
add
test
lods
add
outsl
lcall
push
lods
cwtl
push
adc
shl
fdivs
and
sar
xor
and
repz
xor
push
push
fisubrs
pop
mov
pop
dec
test
mov
add
ret
in
idivb
frstor
insb
sbb
lahf
mov
lret
mov
rorl
out
cli
decl
sub
mov
mov
inc
jp
sbbb
scas
cli
decl
loop
punpckhbw
push
movsb
js
mov
daa
adc
iret
dec
push
inc
adc
push
shll
xchg
enter
mov
call
push
cwtl
pop
xchg
leave
jp
roll
fdiv
pop
sbb
decl
and
jnp
inc
insl
adc
mov
std
into
mov
in
xchg
add
clc
pushl
cltd
orl
inc
push
push
mov
pop
sar
in
inc
jg
popa
std
mov
xchg
or
outsb
adc
push
repz
jmp
xlat
cli
fsubrs
push
mov
test
sub
subl
in
clc
ret
jg
dec
mov
ss
mov
mov
add
mov
call
jbe
gs
ljmp
mov
in
not
lock
mov
mov
lahf
enter
add
jmp
popa
rcl
adc
das
mov
lahf
fcos
ljmp
bound
mov
adc
lea
xchg
jne
sahf
dec
sbb
inc
stc
outsl
scas
adc
inc
pusha
or
or
les
and
xor
adc
outsl
cli
decl
xchg
ljmp
ja
repnz
cs
jno
std
mov
mov
xor
push
shr
lods
sbbl
xchg
mov
iret
loop
orb
test
push
jge
dec
cltd
dec
sahf
test
mov
scas
adc
jmp
leave
pop
cmpsb
or
or
movsb
mov
int3
adc
mov
loope
push
in
scas
jb
clc
mov
and
bswap
push
pop
ljmp
jp
stc
xor
cmp
mov
loope
cmp
and
inc
dec
inc
std
ljmp
mov
mov
lods
and
fwait
call
xor
dec
and
daa
or
ret
scas
movsb
push
rolb
jle
jmp
xchg
std
jmp
sub
push
shl
lcall
jnp
push
mov
lahf
shll
cmp
push
sub
shlb
add
mov
push
dec
sub
mov
xchg
pop
scas
imulb
inc
inc
sbb
fs
ljmp
add
outsb
push
mov
cli
sahf
xchg
std
lock
add
mov
or
jnp
lcall
add
push
cmp
aas
mov
cmpsb
lea
mov
stos
ret
cld
adc
sahf
inc
ficomps
cli
dec
sub
test
faddl
push
insb
movsb
daa
and
ljmp
adc
loop
lods
hlt
mov
mov
inc
xchg
mov
xchg
pusha
movsl
fcmovnu
cmpsl
xchg
cmpsb
cmp
mov
decl
dec
andb
call
jle
faddp
sub
or
jno
push
hlt
pushl
bound
jmp
add
scas
jl
mov
jecxz
inc
push
rcrl
decl
test
ficoms
outsb
sbb
pop
int3
divb
push
out
jbe
jg
sti
sub
push
jl
ljmp
addl
cmp
mov
xchg
add
inc
jg
pop
loopne
inc
aas
mov
jge
aaa
lret
jp
ljmp
call
lods
aaa
push
inc
outsb
jns
fisubl
jg,pn
mov
js
out
add
gs
cmp
xchg
push
inc
mov
mov
jmp
cmp
imul
fldenv
and
sahf
mov
hlt
sbb
jg
stos
mov
or
scas
das
lahf
xchg
popf
orl
fimuls
add
rclb
mov
sbb
push
mov
jae
mov
outsl
cli
movsl
aad
jo
push
test
xor
inc
fsub
pop
jl
ljmp
repnz
add
cwtl
xor
int3
add
and
mov
cmp
imul
sub
jmp
out
negl
loop
xor
mov
jb
lcall
aad
mov
push
in
cmp
cmp
rorb
ss
and
cmp
add
mov
aam
lods
and
xlat
pop
sub
adcb
mov
sub
stos
fucomp
or
inc
sub
sbb
inc
adc
loopne
mov
incl
in
aaa
cmpb
stc
jl
mov
xor
mov
mov
sub
hlt
iret
lret
pushl
and
dec
adcl
xor
iret
add
pop
fstpl
dec
ljmp
daa
int
push
lahf
xchg
xorb
dec
xor
scas
arpl
jmp
sarb
outsb
fstpl
mov
imul
xchg
fsubrl
jno
and
cld
fdivr
decl
in
adc
push
jle
cmp
jmp
sub
outsl
xchg
iret
inc
mov
call
lock
in
rcr
std
cwtl
mov
xlat
sbbl
dec
ljmp
push
cs
add
pushf
ljmpw
push
push
pop
rcll
xor
mov
jmp
jle
add
and
sbb
adc
mov
adc
inc
fisttps
mov
inc
push
pop
inc
mov
dec
push
das
addr16
inc
mov
arpl
ffreep
dec
push
imul
mov
cli
test
push
decl
dec
jl
mov
lock
test
sbb
and
scas
jns
aad
loope
cmp
std
call
test
imul
fsub
mov
jl
pop
and
cwtl
loope
pop
dec
lock
jmp
fistpll
inc
add
sbb
in
xor
rcll
or
adc
cmp
nop
popa
arpl
mov
mov
incl
bound
mov
lods
xor
push
fs
add
dec
outsl
cmpsb
add
icebp
outsb
mov
fs
pusha
or
cmp
mov
loopne
cmc
lret
and
arpl
lcall
dec
add
sti
dec
push
and
lock
push
popa
push
push
clc
inc
adc
jb
jmp
mov
sbbb
pop
inc
dec
fidivrl
iret
in
idiv
out
cmp
iret
call
xchg
outsl
test
popf
mov
cmp
xor
and
jle
loopne
lods
pslld
incl
pop
iret
stos
sbb
mov
cmpsl
ss
adc
bnd
jecxz
cmpsl
pushl
lea
cmc
aaa
rcr
mov
and
std
sbb
and
aas
pop
cmp
aam
mov
loope
cli
mov
out
push
out
xchg
lods
mov
pop
xor
idiv
inc
ljmp
cmp
es
xor
inc
jecxz
mov
in
jnp
test
push
shufps
lcall
cltd
jne
rclb
jae
adc
movsb
add
dec
das
sub
sbb
nop
cmp
jecxz
dec
arpl
jmp
or
cmpsl
xor
push
cli
add
bound
and
jo
and
ljmp
xchg
fcom
testb
pop
mov
push
sub
ds
aad
xchg
xchg
nop
out
or
pop
dec
adc
popf
or
fistl
cmp
incl
dec
pusha
pop
fdivrs
repnz
jae
das
jmp
add
or
lcall
das
icebp
mov
sbb
fmulp
lcall
pop
shr
jns
sbb
lods
cmp
sbb
call
lahf
pop
cli
cmpsb
mov
inc
xchg
xlat
jo
push
jns
cmp
bound
ljmp
cmp
lock
insl
mov
inc
inc
mov
int
div
nop
incl
or
and
xchg
rolb
pop
jno
cwtl
mov
xchg
call
addr16
sbb
adc
out
bound
mov
ljmp
cmp
hlt
push
xchg
shll
ljmp
fstpt
call
into
cltd
sahf
mov
inc
xchg
sbb
cmp
cmc
xor
sbb
inc
push
jnp
adc
pop
push
cmp
mov
mov
call
aad
and
loope
cmpb
xbegin
lcall
pushl
jle
adc
loope
mov
popa
popf
inc
jmp
ficompl
iret
mov
jmp
fnstenv
xor
fwait
xchg
das
and
pusha
mov
scas
mov
adc
mov
ljmp
mov
test
add
xchg
fs
stos
imul
and
inc
shll
push
mov
imul
jecxz
mov
int3
rolb
jns
mov
pushl
push
dec
lahf
jno
xchg
insb
es
ljmp
addb
stc
cmpsb
in
cmp
add
cwtl
sbb
ljmp
clc
and
sub
dec
cmc
add
insb
push
mov
push
adc
call
je
cmp
pushf
cmc
imul
jmp
adc
xchg
cli
adc
push
sub
mov
decb
jl
int3
jbe
add
cmp
and
and
ja
in
loope
in
cwtl
xchg
xor
hlt
pop
out
and
sbb
pop
cld
incl
in
dec
mov
mov
test
push
xor
aas
mov
mov
in
ljmp
ret
jl
adc
in
icebp
dec
repz
in
mov
fistl
push
mov
imulb
mov
and
cmp
and
call
out
or
lret
sub
jge
and
sbb
sbb
call
dec
hlt
xchg
xchg
and
xchg
dec
inc
xorl
mov
mov
jp
pushf
ljmp
sbb
lcall
ret
xchg
cmp
adc
xor
jns
ret
leave
notb
cmp
ss
sbb
call
in
cmp
test
rcrl
pusha
push
xchg
push
stos
mov
xchg
mov
lahf
cs
mov
int3
imul
ret
faddl
add
divl
xor
clc
cmc
fcomip
xchg
mov
out
out
inc
call
ret
add
xchg
push
test
lcall
xchg
addb
mov
iret
sarb
ret
mov
stos
xor
inc
cwtl
pop
jns
jle
mov
sub
mov
shr
pop
fs
ja
stc
jb
sbbb
jle
int3
mov
ss
ljmp
sub
mov
fnsave
aaa
sbb
popf
decl
out
dec
aam
fcmovnu
dec
aaa
pop
movsl
add
popf
subl
lds
mov
cld
push
fidivs
add
push
jp
movsb
xor
sbb
jno
decl
fnstsw
xchg
imul
negb
outsb
mov
push
scas
cmpsb
js
stc
outsl
push
imul
cmpsl
add
inc
and
xchg
js
sub
in
jns
jg
cmp
call
cld
je
sub
mov
or
out
and
xchg
inc
xlat
je
movsl
js
leave
mov
call
std
in
adc
inc
imul
scas
cmpb
inc
pop
sub
divb
or
mov
jmp
and
xchg
push
movsl
lock
mov
call
xchg
stos
push
add
ds
and
cmp
data16
jns
mov
or
aaa
ljmp
mov
mov
gs
push
pushl
and
aaa
fistps
jnp
movsb
out
call
imul
sahf
mov
adc
decl
jmp
pop
xor
mov
and
inc
jne
loopne
mov
lods
call
dec
repnz
mov
movsl
xor
shll
add
and
mov
xor
bound
test
cs
mov
fstpt
mov
aas
fisubl
jl
pop
mov
adcb
cmp
xor
fs
cld
das
sar
loope
or
push
out
ficoml
sti
in
aam
dec
sub
xchg
call
ljmp
xchg
in
dec
adc
add
lods
inc
or
sarb
mov
icebp
adc
call
test
roll
lret
push
dec
lar
ficompl
jne
push
push
adc
ret
mov
inc
outsl
shlb
jge
daa
inc
leave
les
and
adc
inc
std
pop
cmp
cmp
inc
push
vmovapd
fdivr
decl
add
test
mov
pop
add
push
mov
mov
lcall
lcall
mov
cmp
pop
push
mov
fisubrs
shrb
mov
lods
pop
icebp
ret
mov
cs
les
mov
test
mov
push
jnp
jno
je
xchg
dec
dec
fcoml
fdivl
xlat
jecxz
lds
js
pop
lods
pop
and
orb
cmp
pop
fwait
push
rol
ret
hlt
mov
ds
test
mov
adc
mov
and
call
mov
jmp
pop
sbb
in
xor
push
cmp
xor
rorl
test
sub
lods
ror
adc
pushl
pop
adc
xchg
in
mov
mov
jmp
aad
sbb
sub
xchg
xor
movsl
cmp
fidivl
pushl
dec
mov
out
dec
daa
lods
out
inc
mov
decl
arpl
xor
incl
loope
cmp
cmp
pop
aam
pop
xchg
pop
push
cltd
imul
shlb
testb
and
into
push
adc
push
test
mov
rcrl
pushl
jno
pushf
push
mov
push
es
mov
dec
or
aad
cmp
cmpsb
adc
sar
lcall
and
in
shr
sbb
subl
cmp
lcall
push
inc
mov
push
push
cli
jp
and
test
stos
jecxz
sub
pushl
inc
push
cmp
cmpsb
jbe
pop
das
sbbb
or
push
xchg
push
or
adc
mov
mov
jo
add
cmp
decl
into
scas
gs
out
jo
enter
imul
jmp
jmp
aaa
pop
jmp
mov
outsb
inc
sbb
cli
adc
mov
xor
mov
cmp
decl
into
inc
push
cli
sbb
add
addr16
sbb
push
stc
push
inc
dec
cmpsl
adc
cli
inc
add
cmc
ret
dec
inc
std
dec
ret
es
pusha
adcb
out
sbb
pop
or
push
in
call
sbb
add
push
js
outsl
dec
and
sub
int
fsubrs
stc
bound
ja
ret
std
dec
sbb
adc
xlat
into
loope
fcomip
ror
xchg
scas
ret
cmpb
jns
xor
dec
jmp
pushl
cmpsl
sub
dec
fimull
decl
xchg
cmpb
insb
xchg
push
inc
jo
call
fisubrl
daa
inc
xchg
fsubl
cmc
pushl
push
stc
push
inc
shrl
cmpsb
cmpsb
loopne
lcall
xchg
cmp
lcall
mov
aam
out
mov
mov
pop
inc
adc
inc
cli
jno
loop
loopne
stc
push
cmc
pop
cmp
movsl
ret
or
lcall
imul
xor
jmp
bts
lods
mov
pop
mov
push
xchg
jg
inc
cli
dec
add
pop
xor
adc
or
jl
ffreep
outsb
cmp
cmc
repnz
in
xor
dec
scas
imul
lea
adc
dec
int3
mov
inc
mov
mov
adc
sbb
cs
testl
jo
or
add
lcall
push
div
lds
add
in
sub
sbb
mov
fsts
mov
pusha
out
movsb
test
test
lcall
loop
out
lcall
dec
add
imul
mov
xchg
gs
std
stos
lret
push
sub
ljmp
inc
mov
jae
mov
jmp
addr16
jg
loopne
les
jns
shrl
out
out
xor
ss
push
jmp
jle
add
aas
aam
fcoms
lock
es
jae
xor
dec
jb
dec
inc
mov
cld
aaa
cld
call
sbbb
xor
sub
jno
mov
xor
lcall
mov
stos
mov
inc
pop
cmp
inc
jmp
cmp
inc
and
decl
fldt
sub
dec
xchg
sub
adc
jb
xchg
jns
xor
cmp
decb
mov
jmp
cmpsl
cmc
and
mov
roll
xor
mov
incl
jns
mov
push
fmull
pop
or
sbb
es
lods
xchg
push
sub
cmp
jecxz
ljmp
repz
mov
insb
scas
pop
lahf
mov
cmpsl
andl
or
scas
cli
mov
fimull
lods
mov
mov
lds
fidivrs
sbb
add
jmp
out
jge
shrb
data16
pop
in
jge
fiaddl
shlb
push
pop
fists
roll
das
sub
ljmp
jmp
sbb
shrl
out
movsb
les
and
mov
incl
cli
js
test
pop
inc
and
adc
fisttpl
xor
sbb
pop
cmpb
cli
sub
mov
cmp
xchg
mov
ds
jmp
stos
lret
lods
mov
jge
jle
mov
adc
test
test
pop
jo
and
add
jle
lret
es
jge
mov
ljmp
icebp
xchg
iret
and
adc
adc
cld
cmp
adc
rcrb
insb
mov
dec
sbb
sbb
insl
mov
push
adc
subb
mov
cld
fucomip
sub
xor
jno
cmp
jno
push
cmp
shll
loopne
out
cli
lahf
mov
adc
out
cmc
in
popa
insl
outsl
sti
fnstcw
pop
push
push
nop
add
push
dec
xchg
inc
push
jb
lret
push
je
into
mov
push
or
sbb
leave
push
cmp
jmp
subb
test
pushf
dec
clc
mov
daa
insl
push
aad
leave
sub
call
cwtd
lods
push
jmp
jno
add
rclb
mov
inc
cmpl
mov
xchg
jmp
or
fimuls
iret
mov
jl
mov
sahf
mov
lea
and
inc
movsl
add
call
mov
mov
dec
jno
or
iret
xchg
sbb
lcall
mov
mov
in
repz
ja
lock
cmp
mov
in
icebp
mov
aam
mov
mov
pushl
mov
into
push
fistpll
sbb
pop
mov
push
push
push
cmp
lock
daa
dec
ljmp
and
clc
adc
gs
pusha
mov
mov
pop
mov
mov
dec
cmp
adc
stos
int3
hlt
je
jle
data16
fstp
cmpb
cmp
and
shlb
jmp
shll
add
jnp
daa
bound
cli
daa
inc
jp
push
lahf
push
xlat
data16
pop
dec
cmp
decl
jmp
ret
dec
out
push
call
push
dec
hlt
enter
mov
fs
call
decl
xchg
jno
data16
add
push
or
xchg
out
call
stc
mov
jnp
sbb
test
sub
xchg
js
dec
pop
fdivr
decl
lods
cmpsl
jno
xchg
stos
mov
in
pop
orl
and
rorl
push
outsl
cli
and
cltd
ljmp
mov
xlat
hlt
rcll
arpl
cmp
inc
cwtl
and
mov
xchg
cmp
inc
call
jle
in
dec
mov
xor
aaa
xchg
jge
in
dec
dec
fxch
sub
decl
mov
xor
mov
mov
xchg
fsubs
fs
cmp
pushl
dec
adc
jb
push
push
mov
xor
lock
push
inc
xchg
add
lds
or
pop
pop
jmp
call
cmp
push
test
aas
mov
dec
xchg
xor
loop
sub
pushl
pop
sahf
cld
mov
or
ret
mov
pop
fiaddl
push
adc
mov
arpl
adc
into
bound
mulb
dec
insl
subb
jo
mov
inc
lock
sub
sti
and
jmp
ret
mov
ljmp
ds
dec
add
jmp
pop
inc
sbb
rclb
or
call
xchg
stc
insl
imul
xchg
add
lds
int
in
sbb
insl
ret
xor
lret
push
ret
clc
fnstcw
pushf
outsb
jae
dec
inc
sub
inc
filds
in
push
in
ror
call
call
mov
fcmovnb
sbb
and
cs
adc
jb
imul
insb
cld
jmp
je
jno
rolb
rolb
pop
notb
push
call
inc
lret
jge
std
lcall
jb
stos
test
push
test
enter
stc
push
cmp
je
mov
fistps
push
cmp
sub
nop
pop
movsb
out
lahf
call
fcomip
jl
mov
lds
push
xchg
lea
sbb
lods
adc
mov
aam
dec
cmp
pushf
cmc
loopne
push
mov
sbb
lret
pushl
stos
roll
rep
and
enter
pop
or
sub
mov
arpl
lods
dec
mov
inc
dec
mov
imul
mulb
pop
in
pop
and
cld
fstp
or
mov
push
push
mov
int
cltd
adc
aaa
push
fistpll
out
inc
inc
or
cmp
int3
or
and
xlat
inc
jp
pop
adc
xchg
mov
sbb
pushl
lret
mov
xor
jo
call
pop
repnz
loop
xor
dec
xlat
add
pushl
test
xor
jae
sbb
mov
movsl
enter
out
pushl
pop
xchg
subl
scas
lahf
pop
fildll
xorl
jb
jecxz
loopne
push
mov
fcmovnbe
cld
ret
push
dec
rorb
je
add
pop
fwait
das
subb
in
push
sub
xchg
fisttpl
shlb
lcall
arpl
ret
in
call
loop
js
clc
inc
out
mov
bound
and
jmp
lcall
icebp
dec
sahf
lods
test
ret
repnz
test
push
int
scas
cmp
test
sbb
cmpsb
push
rclb
sbb
pop
jns
mov
mov
xor
adc
sub
and
pop
pop
mov
push
adc
decl
pop
rcrl
add
mov
js
in
or
or
or
callw
ljmp
lea
xor
and
cmp
incl
in
scas
lock
pxor
fdivrl
push
les
int
movl
ret
ljmp
neg
push
inc
adc
mov
push
lret
ret
jl
rol
and
jmp
xor
pop
jmp
cltd
mov
mov
divb
pop
pop
or
out
inc
xchg
xchg
decl
jmp
mov
icebp
add
ficompl
out
xlat
addr16
inc
and
test
rcrl
ljmp
mov
add
in
fidivrs
outsb
dec
inc
cmp
sub
test
dec
fincstp
jge
shll
ss
popf
int3
sarb
sahf
fistpll
inc
jg
lcall
sub
pop
notb
in
mov
stc
out
pushl
mov
cli
imul
test
inc
mov
sbb
lock
icebp
outsb
jns
cmpsl
adc
jge
decl
cmp
mov
nop
sbb
call
test
call
sbbl
pop
fildll
and
mov
into
mov
fisubs
movsb
mov
push
adc
rclb
sarb
xor
lods
xchg
mov
sub
sub
cmp
out
cwtl
xchg
fwait
decl
or
mov
and
sub
imul
clc
push
filds
icebp
lret
enter
shl
sbb
push
push
imull
xor
std
adc
mov
mov
cmpl
lods
push
rolb
mov
adc
adc
incl
lcall
es
xlat
test
dec
adc
adc
fwait
mov
pop
and
fdivrl
xor
jmp
cmp
xchg
inc
das
test
bnd
xchg
jb
lret
imul
cmpl
call
cmp
out
pop
icebp
jo
clc
fildll
int
ljmp
fdiv
or
decl
push
pop
movsl
pop
mov
jns
and
adc
pushl
incl
out
sub
ljmp
test
iret
push
jp
and
scas
shl
xlat
push
add
pop
cs
out
xchg
cmpsb
inc
inc
sub
dec
mov
insb
sahf
insb
dec
or
jg
inc
mov
mov
mov
lea
in
sar
sti
mov
jno
hlt
hlt
pushf
rcrb
andb
cld
cmpxchg
sar
jmp
shlb
lods
push
ret
fidivl
sbb
push
incl
xor
lock
loope
por
inc
push
ss
dec
cld
dec
ds
jg
xor
or
ja
add
mov
les
mov
pushl
mov
fs
xchg
jge
push
adc
arpl
mov
int
push
incl
push
scas
popa
lahf
jle
sbb
xchg
leave
ds
mulb
cltd
arpl
sbb
clc
jecxz
cwtl
je
es
decl
mov
push
in
scas
lock
pop
cmpb
ljmp
imul
inc
sbb
lahf
imul
pop
je
inc
push
faddl
xlat
xor
push
pushl
push
adc
xor
popf
test
pop
addr16
pop
cld
incl
jae
ret
fcomps
ljmp
test
jg
enter
iret
add
sub
adc
adc
and
cmpsb
gs
clc
fwait
js
sarb
xor
out
adc
incl
outsl
mov
lahf
mov
in
mov
out
adc
cmp
ljmp
add
sbb
push
shll
sub
mov
fmulp
cmpsb
lcall
dec
jl
jno
jns
jo
lcall
sar
cs
sbb
clc
je
push
insb
daa
neg
lods
dec
lods
cmp
mov
sahf
movsl
mov
cltd
pop
jmp
inc
cmpsb
insl
imul
lret
cmp
loopne
fcomip
incl
je
sub
mov
jge
movsl
sbb
pop
and
xchg
mov
stos
adc
icebp
push
xchg
gs
jae
xor
add
movsb
jo
ret
push
ljmp
xor
jle
aad
in
mov
mov
out
test
lret
ret
xchg
mov
orb
sbb
jl
lcall
int
and
ud0
lcall
sahf
sub
or
fsub
adc
imul
push
jb
in
out
push
incb
add
scas
fcmovnb
jecxz
outsb
jno
movsb
test
lods
jg
fcmovnbe
shll
mov
jecxz
ror
sub
cltd
sbb
icebp
incl
cli
ljmp
aam
popa
outsb
xor
movsl
fistpll
adc
cld
out
adc
je
test
pushf
arpl
pop
fdiv
push
call
and
out
cltd
push
lea
fidivrl
cld
push
add
lret
std
inc
and
aas
add
decl
inc
xchg
cmpsl
and
scas
lcall
leave
pop
pop
sti
mov
add
ljmp
shl
inc
pop
sbb
pop
outsl
cmp
je
in
dec
jmp
lock
lock
mov
add
test
mov
xchg
enter
pushl
cmp
pop
mov
jns
fstp
mov
cltd
repz
sahf
jg
pop
inc
mov
push
lock
arpl
ds
into
shrl
pushl
imul
xor
mov
dec
push
scas
aaa
xchg
dec
stos
call
loope
pop
out
xlat
mov
jmp
xchg
jb
pusha
in
les
divl
mov
repz
cmp
incl
cmp
test
jge
pop
xor
testb
jbe
lock
cmp
inc
xchg
std
pop
xchg
mov
test
test
inc
push
add
scas
and
jo
adc
push
xchg
out
popa
mov
inc
cli
mov
adc
call
jmp
and
into
ret
cltd
jg
dec
imul
pop
fwait
clc
stos
pop
out
xor
jae
cmp
mov
aas
adcb
xchg
add
popa
pop
add
repnz
mov
lcall
out
xor
mov
sbb
xor
enter
fwait
xor
lds
idiv
lcall
mov
les
outsb
lret
shl
mov
pop
ret
xor
decb
inc
inc
adc
mov
and
xorl
or
or
incl
add
inc
stos
mov
inc
pop
sbbl
test
out
loop
pop
and
mov
inc
pop
cmpsl
push
lods
mov
add
mov
xchg
lcall
jnp
or
or
lret
insl
stc
pop
xor
mov
sbb
add
jb
cmp
lcall
aas
nop
add
jb
or
je
out
mov
or
inc
insl
dec
inc
inc
movsl
test
dec
inc
mov
in
pop
stos
or
push
push
rcr
mov
mov
test
imul
inc
out
mov
hlt
outsb
sub
clc
mov
fisttpl
mov
adc
mov
jl
and
js
dec
jmp
pop
cld
test
mov
subb
mov
adc
cmpsb
outsl
cmp
sub
mov
call
stc
pusha
repz
sbb
mov
jno
xchg
pop
popf
inc
sub
loop
repnz
adc
inc
dec
es
push
pushf
popf
mov
xchg
ficompl
mov
sub
in
not
lock
jmp
add
xchg
leave
push
iret
jmp
out
jo
pop
jns
cli
incl
rcrb
repz
hlt
sub
pushl
int3
cmp
fistl
dec
xor
sbb
mov
add
jg
add
jnp
pop
aam
hlt
inc
movsb
setns
sbb
insb
repz
lcall
xor
cmp
xor
out
jns
dec
jmp
push
xchg
sbb
idiv
aas
cwtl
and
fcoms
jge
int3
lods
clc
add
dec
inc
test
icebp
add
sub
lcall
lds
pop
pusha
adc
inc
pushf
or
sbb
mov
lea
dec
pushl
dec
mov
xchg
cmp
in
jne
xor
xor
lcall
hlt
call
setnp
xor
sbb
sub
ja
stos
adc
sub
sarb
int
lds
pushl
and
push
xor
pop
in
addr16
or
mov
ljmp
and
sahf
sub
int3
inc
stc
mov
jo
adc
scas
jge
mov
jmp
sub
cmp
rcll
inc
cmp
add
ljmp
loop
mov
scas
xchg
fcmovnb
xchg
dec
je
ret
lcall
pop
dec
adc
inc
js
or
fisubs
xor
loop
imul
call
push
rcrl
mov
inc
xchg
shll
enter
es
push
out
cwtl
mov
lcall
mov
push
aad
push
xlat
and
push
adcb
fcmovu
sub
mov
mov
repnz
dec
inc
lods
mov
outsl
pop
bound
sar
ss
nop
lret
fcompl
sahf
repz
in
or
pop
lods
inc
xchg
sub
lcall
and
lret
nop
rclb
pop
cmp
mov
xor
mov
pop
lahf
and
movsl
xor
mov
xor
jecxz
mov
pop
adc
das
out
mov
call
sbb
ss
cmp
cld
dec
or
test
or
jecxz
dec
jl
incl
stos
pop
mov
aas
aas
out
popa
idivb
addl
shr
aad
pusha
xchg
dec
stos
sub
js
insb
and
mov
sbb
xor
mov
call
fdiv
les
sahf
mov
jnp
and
aaa
out
jae
inc
inc
dec
int3
sbb
in
insb
xor
dec
xchg
daa
dec
adc
out
dec
imul
or
enter
fcomps
inc
int
mov
dec
xor
or
fcoms
push
movsb
xlat
push
lea
pop
insb
inc
aaa
dec
hlt
pop
fs
jg
andb
pop
mov
ljmp
jae
pushf
push
jbe
dec
add
mov
sbb
scas
mov
loope
add
sub
scas
gs
mov
jg
sti
push
and
call
pop
loope
or
pushl
add
outsl
rclb
or
out
outsl
dec
or
dec
mov
ljmp
das
jbe
xchg
dec
rorb
push
outsb
lea
mov
sbb
fnstenv
call
inc
pop
push
xor
xchg
cli
andb
insl
mov
lea
push
push
sub
mov
rcrl
dec
jno
mov
add
mov
pop
sub
aas
loop
ljmp
movsl
sub
notl
lods
pop
sbb
outsl
daa
jno
loopne
add
xchg
inc
sar
call
add
mov
mov
push
iret
or
push
mov
sub
inc
outsb
dec
pop
or
outsb
lods
stos
ffreep
cmp
dec
mov
jne
sub
call
js,pt
lock
jbe
xchg
jbe
cld
cmc
out
jbe
and
xchg
pop
nop
xor
mov
imull
pop
add
loopne
push
mov
sbbl
adc
pop
pusha
daa
lcall
sub
and
mov
mov
ret
add
shlb
jmp
ljmp
inc
add
jl
cmpb
cmpsb
rclb
pop
pop
add
pusha
or
lock
stos
adc
jl
and
mov
mov
decl
jmp
popf
cs
movsb
dec
mov
leave
xacquire
test
hlt
xor
ljmp
or
icebp
push
adc
sub
popf
lahf
rol
incb
call
std
pop
aas
stos
stc
jne
ret
sti
mov
add
pop
ret
jecxz
int
jb
push
cld
std
lret
stos
or
push
dec
pop
dec
test
xchg
and
adc
push
in
jmp
test
out
fmul
test
mov
rcl
push
sbb
fdivl
xor
std
call
icebp
inc
jnp
aad
cltd
adc
xchg
stos
outsl
int3
jno
movsb
mov
filds
fdivr
imul
gs
add
lret
or
lret
push
fdivrp
call
adc
call
cmp
clc
pop
xchg
loope
mov
and
outsl
add
icebp
ficomps
lcall
into
adc
xchg
out
xchg
sbb
mov
jecxz
hlt
dec
imul
test
sbb
lcall
es
outsb
mov
leave
inc
push
sub
call
pusha
das
sub
push
jno
aad
mov
in
jmp
in
into
ljmp
sub
sbbl
lret
popa
orl
xchg
lcall
jmp
inc
ljmp
dec
cld
clc
jecxz
mov
stos
insb
jle
aaa
js
xor
repnz
push
std
adc
outsb
arpl
push
mov
xor
in
lcall
mov
push
push
push
xlat
cmp
jle
adc
lret
sbb
and
popa
fs
and
inc
mov
je
pop
jnp
adc
mov
fs
xor
and
mov
ficoms
xor
roll
sbbb
jecxz
sub
pop
out
inc
call
ret
push
sub
fidivl
repz
addl
push
add
fisubs
setb
xchg
mov
fistpll
ja
sarb
xchg
jl
mov
mov
pushl
shr
add
leave
hlt
fdivrl
aad
outsb
sti
add
movsl
jge
incl
fwait
adc
int3
sahf
xor
mov
mov
lcall
or
pop
mov
mov
pop
push
mov
sub
cmp
jmp
cmpsb
fmull
sub
rcrb
clc
in
cmpsl
jge
out
jo
cld
daa
incl
icebp
jns
cltd
into
mov
pop
movsl
in
cmp
loopne
ja
adc
xor
or
mov
mov
add
mov
shlb
cmp
aas
outsl
inc
repz
daa
aam
jl
xchg
repz
pop
push
ljmp
mov
mov
sbb
add
insb
sub
xor
adc
push
fidivl
ja
and
mov
ljmp
mov
mov
imul
into
sbbl
out
loope
dec
mov
cmpsl
lods
pusha
sbb
mov
aad
ljmp
ret
stc
or
jle
adc
call
jne
jns
insl
int
call
jl
jns
adcb
or
xor
idivl
adc
pop
call
movsb
stos
xor
ret
xchg
push
fistl
stc
adc
adc
aas
jae
lret
inc
inc
cmp
mov
sti
fs
cmp
lock
dec
and
ljmp
mov
lock
xor
sub
sub
shlb
or
lods
shl
shlb
fidivrl
sbb
call
mov
push
push
je
cli
aas
daa
and
push
sub
push
jno
dec
dec
ljmp
shlb
jae
lret
sti
lahf
nop
mov
lock
mov
movsb
sbb
movsb
mov
mov
pop
mov
push
cmp
hlt
gs
lcall
jl
mov
inc
ljmp
iret
xchg
test
pop
and
xor
pushf
ljmp
cmp
faddp
or
mov
cltd
rolb
imul
jmp
cmp
cmp
add
aas
in
adc
jmp
hlt
test
mov
xor
das
jmp
cli
pop
insl
xchg
out
sti
inc
icebp
pusha
fwait
andb
add
inc
pop
lcall
cwtl
in
testl
pusha
cmpsl
xor
stos
push
mov
in
mov
test
ret
sbb
xor
inc
addr16
movb
mov
dec
ljmp
sahf
repz
aad
fwait
clc
orb
lds
mov
aas
lock
xor
cmp
sbb
dec
je
lds
addr16
fsubrl
dec
js
call
fisubs
push
jbe
out
adc
loop
imul
aaa
mov
push
das
xor
clc
clc
leave
xchg
mov
mov
push
fmull
pop
mov
push
orb
out
xor
cmp
insl
sbb
outsb
mov
pop
ja
std
ret
mov
call
call
in
and
sub
fwait
mov
sub
push
ficompl
arpl
test
sbb
out
fnstenv
fs
jne
and
js
out
mov
cld
lcall
xchg
lret
test
inc
inc
jg
mov
lods
aas
xchg
jle
rcll
push
call
or
xchg
dec
out
mov
lock
add
add
lcall
ret
aaa
stos
jae
mov
push
out
adc
out
hlt
mov
in
xor
and
popa
cld
mov
call
adc
in
mov
inc
imul
inc
sbb
xor
pushl
loope
in
xor
loop
into
scas
xchg
or
cmp
pushl
int3
and
movsb
mov
or
shll
ss
sbb
push
call
enter
sbb
add
fnstenv
dec
js
or
jae,pn
mov
clc
loop
aam
dec
shlb
sbb
movsl
aad
xlat
push
jp
clc
iret
cs
jmp
dec
or
or
andl
movsb
les
or
mov
sbb
sub
pop
out
jno
jmp
lods
flds
xor
and
xchg
jg
mov
add
loope
daa
lcall
push
enter
decl
mov
cs
fisubs
dec
popf
mov
fimuls
and
xchg
mov
ud0
fnstcw
cmc
xor
cs
cmc
mov
lea
ret
push
jecxz
sub
ljmp
jmp
and
fdivr
pop
outsb
adc
or
inc
fs
sub
fbld
incb
repz
inc
lea
jg
push
aaa
clc
int
scas
inc
push
or
dec
popf
cmp
jns
push
mov
jg
xor
push
jp
dec
loopne
decb
pop
push
ljmp
lcall
adc
std
hlt
pop
inc
aam
mov
dec
adc
pop
loope
call
xchg
and
mov
fs
inc
sti
cmpl
push
aam
xchg
cli
mov
cli
pushl
mov
andb
mov
jbe
dec
pop
fs
insb
cmpsl
ljmp
cmp
adc
sub
adc
lahf
sbb
fs
mov
jno
sub
push
mov
pop
mov
xchg
xchg
es
pushl
push
fcomps
sub
pop
movsl
test
sbb
ret
jp
xchg
cwtl
jns
add
adc
ljmp
adc
loopne
dec
xor
aas
mov
mov
icebp
movsb
cmp
cmp
das
cli
in
dec
scas
dec
outsl
addl
pop
mov
js,pt
jne
adc
mov
ljmp
push
jbe
inc
jae
add
xor
or
lcall
nop
xchg
int
cmp
ljmp
sbb
filds
mov
repnz
ret
pusha
add
out
lret
ljmp
sbb
rcrl
imul
and
push
aam
add
cli
cmp
mov
dec
sbb
insl
scas
ss
out
inc
ja
pushf
inc
sub
decl
in
lods
ret
add
and
jge
jl
stos
js
xor
repz
inc
aas
test
incl
jmp
test
sar
ljmp
roll
adc
sbb
fcoms
lods
gs
push
insb
or
jmp
sub
aaa
aas
aas
adc
frstor
call
imul
fnstsw
lcall
adc
push
sbb
outsb
mov
and
int
inc
mov
add
call
lods
mov
loope
push
out
xchg
roll
cmpsl
mov
ret
test
push
mov
mov
push
out
clc
decl
and
lea
je
filds
mov
jmp
popf
aaa
jp
jecxz
imul
jle
pop
ljmp
sarb
add
fld
sub
das
adc
fidivl
push
push
mov
sbb
cs
pop
sub
jg
data16
mov
sub
push
xlat
ja
jge
in
js
push
xor
jmp
inc
incl
out
sahf
std
test
and
leave
dec
std
sbb
clc
test
pop
sbb
movsb
test
inc
push
mov
adc
shl
pop
jl
repz
nop
push
out
mov
shrl
cmp
sub
cmpsb
sti
fcomip
ljmp
jp
mov
jns
cmp
in
lds
aad
xchg
loope
test
shrb
push
cltd
xchg
lcall
inc
pop
pusha
sbb
call
mov
xor
stos
push
cmp
jae
lods
mov
sahf
jge
out
mov
mov
ds
clc
cmpsb
pusha
mov
cmp
lcall
sub
jmp
mov
daa
pop
fnstenv
cld
adc
daa
shrl
outsb
mov
mov
out
repnz
mov
jae
push
ret
fadds
pop
mov
pop
or
out
push
arpl
cwtl
rcrl
loop
pop
add
dec
adc
and
xchg
hlt
or
sub
test
iret
xchg
in
leave
imul
jl
pop
sub
fdivp
lods
insl
jecxz
jl
xor
cmp
pop
inc
mov
sub
int
leave
and
pop
test
pop
inc
adc
mov
inc
cmpsb
xor
imul
xchg
mov
lods
jne
loope
lret
lcall
movsb
pop
xchg
sbb
loope
pop
mov
push
lret
push
jno
js
xchg
pusha
adc
fs
inc
pop
and
xor
arpl
dec
jecxz
out
dec
shlb
jmp
pushl
cmpsb
add
enter
mov
stos
mov
stc
loop
mov
stos
pop
lock
and
or
mov
jb
nop
xlat
inc
pushl
aad
test
push
call
clc
nop
ret
call
jae
mov
fstpl
out
cmpsl
pop
std
inc
test
aaa
xor
mov
pop
loopne
negb
jno
or
push
imul
ljmp
cmp
pop
push
mov
sbb
dec
movsl
jo
rcrb
pusha
xchg
gs
dec
jecxz
mov
pop
or
out
sbb
imulb
clc
push
shr
js
daa
sub
and
dec
insb
pusha
aaa
imull
stc
mov
sub
mov
or
mov
in
les
lds
push
fldenv
ret
mov
loope
add
fistl
adc
push
mov
cmp
in
xor
sub
sbb
decl
scas
sbb
push
cmpsl
fldt
cmp
outsl
push
adc
stos
pusha
idivl
push
jns
decl
adc
push
inc
sub
jo
repz
or
lods
jle
xchg
dec
jnp
shlb
and
pop
inc
xor
test
xchg
mov
negb
push
push
xchg
push
push
shll
inc
inc
add
mov
fildll
add
and
hlt
inc
fcomi
mov
fsubp
iret
mov
mov
xchg
pop
cltd
icebp
pop
mov
cwtl
jne
sbb
cmpsb
or
ror
decl
cmp
and
jb,pt
outsb
lret
movsl
cmpsl
sub
out
xchg
aam
in
mov
cmp
adc
lea
inc
jl
out
gs
loop
test
jae
cli
stos
lret
push
ret
je
dec
cmp
les
aas
fs
push
xor
jmp
pop
jl
and
mov
sti
sarl
push
inc
xchg
addl
mov
test
std
stc
adc
hlt
xor
xchg
lock
or
leave
push
xlat
movsb
loopne
or
call
mov
test
mov
leave
mov
outsb
lock
xchg
repz
sar
dec
mov
cli
mov
imul
addr16
hlt
push
jp
fbstp
stc
sti
pop
sahf
bound
mov
cmpsl
scas
shrb
lods
into
cmp
sbb
out
push
out
mov
mov
pop
pop
ljmp
pushl
mov
xchg
sbb
addb
adc
adc
fsubrl
cmp
xchg
push
lcall
xor
push
mov
pop
mov
mov
lcall
xchg
push
jp
add
inc
cmp
sub
push
test
adc
adc
cmp
ret
mov
cmp
mov
hlt
mov
xlat
out
inc
lahf
clc
inc
lcall
xchg
stc
imul
and
ljmp
mov
jnp
sbb
or
lock
xchg
sub
push
frstor
sbb
dec
push
icebp
ret
out
xor
cltd
jae
scas
cmpb
cld
popf
add
xor
out
lea
add
sbbb
lock
or
cs
bound
dec
or
pop
insb
push
andps
add
fstpt
lret
addb
sbb
jb
or
cmp
add
and
pop
jle
es
jo
imul
or
cmpl
enter
imul
inc
pop
sbb
add
inc
push
push
add
das
cmp
shlb
mov
sub
xor
inc
imul
sub
push
or
push
dec
gs
ret
ljmp
outsl
outsl
insb
push
push
outsb
popa
jo
push
cmp
push
xchg
rcll
outsb
fisttpl
push
pop
jnp
mov
test
push
or
fs
xchg
clc
or
imul
es
xchg
movsl
dec
jne
js
sbb
mov
arpl
inc
hlt
and
ficompl
popa
insl
and
and
mov
cmp
inc
jns
push
imul
popa
jb
std
lods
pop
adc
cmp
push
es
ljmp
dec
jecxz
mov
andl
imul
and
or
adc
int3
int3
insb
cmp
inc
jl
loopne
sub
outsb
imul
dec
cmp
insb
stos
sub
enter
sub
outsl
iret
adc
flds
inc
out
pusha
popa
sub
inc
sbb
clc
mov
adc
out
bound
je
inc
inc
sbb
push
fisubs
dec
imul
mov
mov
ds
insb
jne
addl
mov
shll
mov
xchg
xchg
dec
push
inc
sbb
in
insl
adc
push
fildl
and
sub
ss
mov
pusha
jnp
push
jne
or
andl
mov
and
arpl
mov
jns
mov
inc
jae
lods
mov
fcoml
int3
mov
push
fldlg2
shl
hlt
fs
inc
jecxz
js
inc
in
dec
cwtl
popa
or
or
xor
adc
popa
scas
cmp
inc
enter
or
dec
packuswb
push
pop
pop
mov
sub
push
stos
inc
dec
sbb
aad
dec
or
inc
loope
dec
leave
cmc
mov
adc
jns
add
sahf
push
loope
xchg
test
or
and
mov
push
popa
inc
adc
xor
pop
pop
sti
jo
or
outsl
popw
push
dec
adc
mov
mov
mov
inc
ss
and
das
test
inc
push
ljmp
xor
shl
push
stos
pop
dec
inc
dec
or
sub
popa
fildl
or
pop
mov
int
or
fsubrs
mov
jno
repz
xchg
lods
sbb
xor
js
fs
inc
xchg
jg
jp
test
push
sbb
mov
cmp
xchg
inc
popa
es
mov
push
cmp
mov
fistl
push
jg
sbb
dec
inc
mov
add
cmpl
call
orb
aas
or
outsb
adc
outsl
jns
or
adc
push
test
sbb
outsb
sbb
pushf
xchg
and
sbbl
aad
and
pop
jns
inc
je
xorb
push
inc
inc
out
sti
pusha
pop
insl
inc
sub
inc
push
xchg
pop
into
mov
sub
mov
jne
ja
jo
or
jl
pop
mov
add
ss
adc
jns
daa
sbb
outsl
push
stos
add
shl
dec
sub
and
cmp
push
xchg
or
lret
fiadds
add
push
sub
xlat
test
test
xchg
add
push
stc
pushf
push
jne
pop
xchg
inc
inc
fmuls
push
addl
add
cmc
push
jo
jae
mov
das
mov
inc
inc
add
test
cmp
jnp
rcl
mov
inc
seta
mov
lea
mov
inc
adc
imul
adc
cmp
outsb
push
jo
jno
outsl
add
add
lock
dec
inc
arpl
decb
inc
sub
out
mov
sbb
cmp
dec
gs
jne
imull
mov
movlps
xchg
arpl
sub
cs
movsb
jp
mov
stos
ds
pop
adc
or
mov
pop
loopne
and
pop
jl
pop
movsl
inc
sbb
jae
and
xor
sbbl
pop
mov
aad
popa
sbb
mov
lods
test
xorl
int3
outsb
lds
mov
pop
mov
dec
mov
je
and
sbb
inc
jb
and
or
lahf
nop
nop
inc
cs
inc
inc
gs
arpl
pop
sbb
cmpsl
imul
aam
fs
pop
mov
fucom
mov
push
inc
insb
jle
lods
fsubrp
jge
dec
addl
and
inc
jae
jno
aad
xor
fcoms
jb
lods
lock
adc
js
inc
loopne
inc
or
and
xor
sbb
testl
push
les
and
xor
movsl
xchg
push
or
inc
out
test
mov
cmp
inc
dec
push
push
pop
xor
rcrb
lock
adc
enter
out
adc
push
adc
and
and
cmp
xbegin
insl
dec
outsb
dec
push
scas
imul
jnp
cld
insl
repz
lcall
dec
add
mov
lcall
xchg
movsb
dec
adc
add
or
movhps
imul
push
orb
mov
add
adc
in
dec
inc
or
pushf
rcr
push
js
jl
inc
jb
and
sub
jl
insb
and
subl
dec
add
in
and
inc
pusha
sub
jb
push
jb
mov
ljmp
inc
or
jp
popa
xchg
iret
push
repz
jo
aad
mov
jo
rorl
dec
sahf
and
xor
sub
test
or
stos
icebp
xchg
mov
inc
and
and
push
jo
repnz
stos
lret
mov
pop
push
lret
or
jo
pop
scas
ret
fcmovbe
test
push
cmpsl
push
arpl
negb
cmpsl
jb
push
adc
add
inc
adc
and
mov
sub
pop
push
push
adc
sahf
inc
fildll
arpl
dec
pop
pop
xor
or
sub
add
call
dec
loopne
add
div
inc
jl
push
and
orb
popa
sub
push
sbb
in
pop
gs
xchg
xchg
popa
sub
xchg
shlb
xchg
and
mov
xor
push
adcb
popa
and
paddsw
gs
sbb
imul
jg
xchg
ja
inc
rol
push
inc
sbb
cmp
sahf
out
push
push
mov
cltd
lret
rcrl
adc
sub
sbb
adc
repnz
pextrw
pusha
shl
dec
insl
fs
dec
bndstx
lods
xlat
xchg
arpl
sbb
jo
dec
movsb
xchg
pop
push
mov
mov
inc
adc
push
dec
mov
pop
push
aam
jno
inc
cmp
outsb
shll
pusha
adc
xchg
mov
xchg
inc
jno
jbe
cmp
xor
fists
bound
jg
outsb
cmp
lea
lea
sub
nop
addr16
lods
sub
pop
adc
push
popa
mov
idivb
pop
push
stos
xchg
lea
mov
pop
nopl
inc
outsb
adc
outsl
rol
insl
cmp
sbbl
into
ja
pop
mov
xchg
addr16
ret
push
lahf
enter
jb
les
adc
js
and
repz
inc
push
mov
lcall
push
inc
out
in
add
jbe
sub
ljmp
jmp
xchg
lods
pop
xchg
dec
push
ja
imul
pop
sub
push
js
add
jl
data16
mov
mov
jo
add
jmp
sti
testl
sbb
les
pop
add
jns
mov
les
aaa
sbb
jns
or
enter
or
lret
movsl
mov
dec
dec
dec
add
adc
pop
shlb
pop
inc
add
punpckhwd
push
shr
jne
adcb
or
add
fbstp
loope
jl
push
add
fisubl
xchg
xchg
pop
push
mov
and
mov
dec
push
sbb
mov
and
add
ljmp
jb
popa
adc
das
mov
rcrl
push
push
into
push
out
inc
and
test
push
sub
add
jb
push
cmp
pusha
dec
cwtl
push
push
lahf
add
xchg
test
mov
pusha
out
out
add
xchg
and
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
