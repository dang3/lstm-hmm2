divb
in
mov
mov
push
push
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
adc
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
and
inc
cld
add
jmp
test
jne
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
repz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
gs
add
mov
imul
adc
mov
cmp
daa
movsl
push
fcmovnb
les
pushl
cltd
cld
dec
push
mov
add
cmp
add
push
add
aaa
mov
fsubl
push
cwtl
sbb
mov
mov
mov
cmp
lock
add
jg
out
andl
mov
push
sub
mov
hlt
cs
addl
add
sbb
sub
xchg
mov
add
pop
adc
or
das
mov
cltd
imul
imul
lret
clc
shll
cmpsb
cmp
lea
aaa
ret
data16
call
sub
add
push
insl
loopne
data16
sbb
inc
mov
lea
mov
adc
cmpl
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
mov
and
or
ret
test
push
jl
inc
mov
jp
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
scas
imul
dec
push
loope
int3
fisttpl
sahf
add
shr
dec
cmp
je
out
sti
mov
fdivrs
fs
add
pop
push
scas
dec
testl
scas
mov
push
insl
sbb
jl
clc
movl
bound
mov
aaa
mov
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
jg
add
gs
sti
mov
mov
xor
dec
gs
clc
mov
pop
ret
arpl
xchg
pop
mov
jge
arpl
cli
or
mov
dec
add
clc
sub
enter
pusha
xchg
xor
in
mov
in
adc
sbb
or
xadd
movsl
push
xorl
sbb
std
mov
js
mov
cmp
jg
mov
cltd
loopne
adcl
ret
pop
dec
push
mov
shlb
mov
pop
adcl
test
push
jg
pushl
mov
sub
push
mov
sar
imul
std
push
cmp
ja
adc
pop
dec
clc
add
push
ret
fndisi(8087
std
fisubl
scas
jmp
pop
in
sub
cmpsb
add
leave
pop
imul
add
stc
clc
icebp
loop
lds
js
mov
mov
cmpl
or
push
fucomp
sub
cmp
jge
dec
cmp
add
or
add
pop
cltd
sub
shr
enter
mov
or
inc
ret
cwtl
and
push
test
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
adcl
rolb
inc
add
lea
add
adc
lea
xorl
xor
insl
int3
pop
hlt
into
mov
aam
sbb
jnp
sub
push
cmp
cmp
cmpsl
mov
pop
adc
cld
fsubrs
mov
sbb
jmp
lock
or
test
jle
cmp
mov
inc
xor
rcrl
ret
or
inc
icebp
and
sbbl
push
push
xchg
jno
sbb
aas
pop
or
loop
pop
jmp
loope
mov
inc
sbb
sub
pop
sub
xchg
or
and
lcall
mov
adcb
idivb
pop
jbe
dec
and
andb
cmp
xor
cmp
cmpsl
std
push
xor
push
push
sar
push
push
adc
sub
cmp
jle
mov
out
scas
clc
pop
add
pushf
cmpl
je
push
cmp
cmp
adc
push
ret
jae
push
cmp
sub
pop
lret
or
mov
jb,pt
pop
add
xchg
mov
dec
xor
ret
lea
ljmp
ljmp
clc
push
push
push
push
jecxz
fadd
pop
lock
jmp
xchg
call
add
fsubrl
mov
lods
lods
ret
cmpsb
out
cmp
jo
inc
sub
lds
out
ret
aad
aaa
pop
pushf
pop
js
sarl
push
pushl
cmp
push
mov
lea
cmp
jne
push
push
add
adc
jo
pusha
cmc
testl
mov
or
pop
addb
pop
pop
incb
or
mov
jne
cmp
fnstenv
add
jo
adc
cli
pop
add
clc
mov
cld
stc
sbb
fiaddl
add
add
dec
fstpt
xchg
sub
jae
add
gs
mov
rcll
lods
mov
mov
js
mov
data16
mov
jb
or
xchg
add
out
js
outsl
popa
pop
out
or
pop
push
pop
push
sbb
ds
movl
out
xchg
or
sub
sbb
add
push
xor
jns
in
xchg
pop
push
in
loope
push
dec
add
add
loop
mov
test
pusha
add
jl
dec
lea
sar
popf
lea
push
add
push
mov
xchg
ret
xchg
ret
xor
inc
out
fsubrl
adc
nop
mov
mov
cs
scas
push
movsl
cmp
stos
lock
ret
push
cmp
ret
sarl
pop
cmp
je
xchg
outsl
sub
xchg
or
jne
imul
ret
mov
pop
mov
xchg
fadds
mov
insl
push
leave
jb
cmp
adc
sbb
and
push
into
sti
stc
mov
stos
push
in
mov
aam
daa
cmp
js
or
movsl
mov
fs
std
jl
mov
or
adc
out
and
idivl
cs
jno
add
or
jp
lods
or
cmpsl
mov
jae
sbbl
orb
jno
add
or
add
mov
mov
loopne
jbe
adc
sub
push
imul
add
movsb
dec
or
xchg
ret
and
out
mov
mov
arpl
push
xchg
sbb
mov
repz
out
push
sbb
jl
adc
xor
pop
xor
rol
fadd
push
xor
sub
call
mov
inc
pop
jb
add
sub
add
lock
sub
je
dec
je
push
adc
or
or
inc
shll
mov
ret
or
mov
ret
inc
jbe
loope
repz
popa
xor
pop
adc
pop
notl
negb
mov
clc
push
push
mov
push
das
fcomps
cli
xor
fadds
cmp
andl
pusha
jl
mov
andl
sbb
shl
test
mov
or
xchg
out
shrl
jae
jae
mov
sarb
xor
sbb
xchg
nop
insl
pop
pop
stos
outsl
xchg
add
mov
clc
testl
sbb
or
or
sub
or
fcomp
js
and
adc
popa
add
push
js
sbb
dec
call
je
inc
sbb
mov
sar
mov
dec
in
inc
pop
xlat
andb
ficomps
decb
add
test
lea
jge
push
negl
lret
movsl
push
pop
sti
sbb
and
adcl
xor
lret
sub
adc
js
inc
push
pop
les
fs
lock
call
movsb
lahf
cmp
clc
mov
pop
sbb
adc
aaa
pop
sbb
xor
in
and
lret
mov
js
or
ret
pop
adc
psubb
mov
xor
clc
jbe
pop
mov
sub
jmp
mov
dec
jns
mov
push
pop
daa
movsl
xchg
addl
movsb
daa
xchg
addr16
sub
and
into
push
inc
jo
or
mov
je
inc
mov
icebp
into
scas
mov
xchg
adc
mov
push
int3
test
xor
push
mov
pop
pop
pushf
sub
cmp
xchg
das
aas
push
inc
adc
jmp
jo
aam
in
jae
lds
adc
adc
leave
cmpl
imull
pop
adc
lahf
xor
jno
dec
xchg
jp
outsb
push
push
or
mov
xor
dec
cs
mov
lea
sub
ds
push
push
push
xchg
xor
out
jne
sarl
orl
cmpsl
lret
and
mov
out
cmpsb
mov
ljmp
push
lock
lahf
pop
push
mov
scas
xor
mov
inc
call
push
push
das
icebp
or
pop
mov
in
sbb
sub
push
in
push
outsl
lea
loopne
testb
jp
add
push
mov
rcrl
adc
ret
in
jmp
repnz
and
je
or
push
sbb
sbb
add
add
les
in
cmp
lahf
in
or
in
add
in
nop
jmp
ret
push
in
cmp
int3
xor
mov
jge
mul
aam
jge
decl
inc
adc
xor
and
lods
fsubr
out
add
ud1
xor
lock
insb
xchg
lock
xor
repz
loopne
aam
inc
aaa
mov
sahf
mov
ret
push
mov
or
and
add
fdivrs
mov
repnz
incl
add
add
fldt
pop
jbe
inc
pop
je
lea
insb
mov
pop
push
fcomps
clc
test
movb
jb
jl,pn
movsb
std
dec
and
pop
push
cmp
movsb
jmp
les
out
and
push
push
sbb
aaa
jnp
xor
sbb
pop
les
ret
je
push
stc
arpl
lret
enter
fcmovnb
mov
nop
mov
xchg
cwtl
or
cwtl
mov
mov
inc
or
jmp
scas
dec
jle
push
xor
add
xchg
test
dec
lods
add
mov
mov
xchg
pop
cltd
mov
mov
push
sahf
fs
and
lods
loopne
je
dec
adc
mov
push
test
cmp
fisttpll
add
lock
xor
sub
sbb
mov
fcoml
dec
out
xor
out
sti
rcrb
shlb
out
cmpb
stc
or
outsb
int
dec
movsl
test
push
jmp
rclb
in
inc
rcl
mov
mov
inc
cs
movsb
pushf
push
jb
cmp
and
repnz
mov
int3
sbb
inc
sub
int3
les
enter
sahf
sbb
enter
xor
rol
rol
inc
cs
mov
fs
mov
and
cmp
movsb
call
pusha
sbb
dec
push
jo
fstpt
out
dec
push
dec
jmp
ja
sub
loopne
add
lods
into
add
mov
sbb
sub
jno
jo
pusha
push
mov
ror
mov
xchg
push
jo
sarb
call
loopne
push
or
dec
pop
sbb
fwait
and
push
addb
or
out
insl
aas
hlt
sub
pop
push
xor
sbb
inc
push
inc
adc
pop
enter
jnp
imul
and
popa
xor
in
lret
pusha
out
in
sbbb
xlat
mov
and
and
push
mov
lds
push
aas
jno
xor
out
movsb
and
push
aaa
adc
dec
sbb
std
movsb
xor
jnp
mov
clc
out
mov
xchg
jnp
xchg
lea
int
mov
push
sbb
insl
or
and
ret
dec
imul
mov
mov
adc
movsl
sub
rclb
cmpl
push
adc
and
jge
add
mov
nop
out
mov
adc
pop
or
dec
mov
adc
data16
loopne
adcl
jne
mov
fcmovne
add
insl
fisubl
fbld
xor
lret
shll
std
adc
or
in
lahf
mov
test
inc
or
adc
pushf
mov
das
dec
aaa
popw
clc
dec
or
mov
jo
push
sbb
scas
and
jl
in
cmp
mov
or
test
sbb
mov
movsl
adcl
mov
mov
test
inc
rcrb
inc
adc
sub
mov
cli
movsl
jno
pop
pop
or
stc
dec
pop
lods
fimuls
fsubr
into
xchg
mov
aaa
addb
lods
in
pop
mov
add
mov
jecxz
push
hlt
sub
push
in
push
nop
mov
sbbl
pop
enter
push
mov
test
sbb
loop
leave
mov
neg
pop
dec
jne
cwtl
or
jno
jnp
push
xchg
cmpsl
inc
test
cmp
push
sbb
popf
mov
sbb
add
iret
js
cmp
mov
mov
les
mov
andb
pop
nopl
cmp
inc
rcrl
sub
fs
imull
pop
push
add
jg
cmp
je
or
je
xor
push
push
or
adc
je
fimull
js
xchg
push
cmp
aad
push
pushf
hlt
push
add
and
jp
xchg
jecxz
daa
add
cmpsb
mulb
mov
pop
push
mov
cmp
aaa
cmp
test
xorb
and
sbb
and
fstpt
sbb
jle
mov
aaa
push
push
pop
in
sub
push
fs
sbb
test
rcrb
into
pusha
lock
pop
int3
mov
cld
cli
adc
and
std
push
pop
mov
mov
mov
jne
pop
push
xor
push
sahf
sub
mov
aas
andb
mov
add
add
and
in
cmpsb
test
xchg
and
daa
rcr
and
and
pop
cmpb
jo
xchg
sbb
mov
pop
shl
cmpsl
and
cmp
push
daa
cmp
negb
pop
rcr
mov
incb
mov
push
push
adc
rcrl
sbb
adc
int
icebp
mov
scas
sub
pop
and
push
sub
ljmp
sub
push
test
pop
pusha
cwtl
das
add
shll
xor
ret
test
movsb
ljmp
outsb
sti
in
or
stos
add
add
add
jno
roll
pop
stos
out
daa
xor
test
arpl
adc
push
lods
mov
int
lret
and
xchg
sub
or
mov
add
mov
inc
sub
loope
mov
and
data16
inc
add
mov
xchg
xchg
push
rolb
mov
cmpl
test
rclb
faddl
push
test
jb
inc
dec
push
push
jle
cmpsl
or
mov
fmuls
push
or
cmpsl
mov
or
mov
push
sbb
fdiv
xchg
clc
popf
cmp
pop
and
xchg
pushf
dec
test
mov
sub
ret
shlb
sub
push
inc
lret
dec
mov
cmp
push
enter
nop
dec
cs
mov
shrb
pop
xchg
dec
sbb
cmp
xor
fidivs
sbb
or
cmp
mov
gs
fisubrl
roll
inc
push
lods
testl
push
inc
repnz
loopne
cmp
and
and
movsb
ret
and
xor
stc
pop
outsl
dec
dec
xchg
cmpl
sbb
cmp
mov
call
adc
xchg
sbbl
xor
pop
mov
mov
or
pop
and
xor
movsb
adc
xor
and
or
or
add
push
mov
js
mov
scas
mov
adcl
ja
or
int3
std
movsl
popf
fiaddl
js
mov
add
and
dec
ret
cmpsb
insb
lahf
imul
or
push
pushl
xor
sbb
inc
adc
mov
cmp
fsubl
das
in
adc
data16
pushf
cmp
mov
fidivrs
or
xor
je
clc
ds
push
push
cmp
cmc
and
push
outsl
or
mov
or
je
pop
call
jo
adc
jne
push
sub
lahf
test
adc
or
push
mov
dec
in
movsl
jmp
cmp
pop
sbb
xor
and
lds
add
ret
invd
jge
mov
add
stc
xchg
lock
mov
and
dec
jge
pop
pop
push
int
repnz
out
jmp
loopne
cmp
add
or
scas
fcmovnb
dec
adc
add
sbb
mov
pop
pop
lock
jmp
push
push
in
orl
out
lret
pushf
cmp
sbbl
loope
js
xorb
outsl
scas
jo
das
test
mov
pop
mov
add
add
and
daa
sub
and
out
mov
push
fbld
loopne
mov
ja
ljmp
xchg
inc
out
or
test
or
mov
pop
into
add
std
data16
les
cmp
jne
or
je
addb
clc
push
out
jb
mov
mov
loopne
scas
xor
jg
jecxz
dec
out
mov
es
and
negl
inc
faddl
lahf
sub
dec
xchg
add
pushf
add
dec
xor
out
call
push
jne
or
xchg
cmp
jbe
adc
push
add
and
std
mov
jbe
clc
rolb
sub
repz
je
jg
hlt
xor
lea
cmp
cld
sub
loop
out
or
inc
out
test
aad
dec
and
or
ja
xor
or
inc
or
movsb
add
push
mov
push
or
mov
aaa
mov
inc
jg
andb
mov
or
pop
push
outsb
les
or
push
aas
xor
add
je
adc
aam
fcoms
mov
adc
sub
call
push
push
in
rolb
mov
mov
lock
idivl
ss
jmp
jge
imul
push
jmp
cs
js
add
or
in
pop
lret
mov
mov
popa
mov
test
add
inc
pop
push
xor
xchg
in
outsl
xor
sbb
xchg
push
adc
add
or
test
ljmp
inc
mov
sarl
movl
pop
cmpb
push
aaa
adc
ret
jle
jmp
in
adc
xchg
push
push
mov
push
jg
push
push
mov
sub
ds
mov
pop
jo
pop
paddusb
pop
jle
clc
mov
push
push
sbb
sarb
add
clc
incb
and
xor
imul
sub
aaa
push
stos
movsl
sbb
leave
add
jge
scas
inc
fbld
jne
loopne,pt
faddl
push
jo
xchg
sbbb
cmpw
jne
loopne
loopne
fisttps
adc
sub
mov
inc
outsl
or
in
in
add
fildl
mov
mov
cmp
call
jle
mov
xor
adc
or
push
add
mov
jne
pusha
ss
add
add
stos
dec
cmc
int3
mov
mov
add
pop
pop
popa
popf
test
add
or
ror
ds
rclb
jns
or
mov
lds
add
es
out
dec
in
sub
push
sub
fmull
jp
fsubrl
rolb
lock
imul
jg
in
loopne
pop
cld
loopne
xorb
xchg
or
add
and
cwtl
or
dec
fcomps
sub
and
sub
and
or
cwtl
sbb
push
or
cmove
or
popf
and
add
loopne
pop
mov
or
mov
loopne
cli
mov
or
mov
popf
in
rorb
mov
and
and
pusha
scas
sbb
cmpsb
push
in
sbb
xorb
lods
jecxz
and
mov
inc
mov
push
pop
sahf
pop
push
add
and
test
call
sub
imul
cld
call
and
mov
cmpsb
sbb
test
sbb
inc
js
cmp
inc
mov
or
adc
pop
call
push
inc
dec
insl
xchg
add
cwtl
iret
inc
pop
jo
jbe
mov
jl
or
push
jg
add
test
je
sbb
sbb
cmp
or
mov
dec
psrlw
movlps
sub
mov
cmp
push
and
fmull
pop
out
add
xor
sub
fcoml
push
mov
mov
int3
and
in
mov
inc
fcoms
xchg
in
fsubl
in
mov
mov
xor
xor
cmp
je
pushl
call
mov
pop
ret
shr
movzbl
push
adc
ret
push
push
inc
push
sbbb
mov
lods
xlat
in
xchg
mov
mov
sbb
je
inc
jl
cmp
nop
popa
xchg
mov
movb
or
gs
das
mov
sbb
fstpt
ss
pop
gs
sahf
push
xor
add
pop
or
xor
mov
mov
popa
cld
sbb
js
jmp
jle
daa
fs
fs
aaa
mov
push
push
mov
gs
std
cmp
jg
mov
mov
jmp
or
dec
arpl
rcrb
sub
aaa
sbb
enter
xchg
adc
cmp
jecxz
stos
lea
add
cmp
imul
js
outsb
sub
cmp
xor
outsb
pop
insb
add
sbb
jge
scas
add
ret
push
pop
jmp
jecxz
cli
or
add
sbb
sbb
in
and
lret
mov
je
daa
and
in
mov
jmp
shrb
cld
jne
xor
adcl
inc
adc
lock
jbe
loopne
xor
cmpb
jae
mov
hlt
lea
cmp
add
int
inc
call
test
je
push
mov
je
add
adc
lock
cmpl
fcomps
cmpsb
lock
mov
imul
add
jo
js
aaa
call
jg
push
push
push
jnp
adc
pop
cmp
inc
shl
clc
imul
shll
into
popa
nop
add
mov
fsubrs
xor
adc
sbbb
lea
ljmp
cmp
scas
jae
test
adc
stos
fwait
push
iret
mov
lret
jo
leave
add
pop
jb
mov
mov
mov
jb
xor
mov
dec
jge
xor
inc
js
jb
adc
cli
out
incl
outsb
cmpsb
hlt
pop
pop
outsb
inc
in
inc
jg
mov
js
inc
dec
hlt
jg
hlt
or
sbb
push
sub
add
mov
xchg
xchg
mov
lahf
xchg
add
pop
sbb
dec
inc
pusha
push
push
pop
mov
insb
adc
push
push
mov
fdivs
add
sbb
hlt
or
xchg
mov
insb
call
jns
sub
jl
cld
cmp
jl
repz
push
xor
push
pop
cmp
push
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
mov
push
push
xchg
dec
mov
add
or
shrb
jns
pop
mov
rcll
stc
scas
inc
adc
push
je
aaa
mov
lcall
or
rcrl
mov
push
mov
aaa
cmp
xorb
sbb
or
pop
cmp
sub
movb
and
xor
pop
and
pop
sub
scas
adc
loopne
or
adc
mov
daa
fs
adc
ljmp
insb
adc
mov
push
fcompl
ret
je
push
mov
add
cmp
lods
out
movsl
dec
xchg
cmp
xlat
lret
jae
adc
inc
sub
xor
or
mov
xchg
sub
add
push
xchg
jmp
icebp
jb
adc
fs
jne
cmp
je
cltd
loopne
pop
jbe
movb
push
sbb
or
push
push
and
sbb
mov
icebp
sbbb
or
int3
xor
test
repz
adc
push
out
ret
push
test
and
setne
shrb
ret
jne
pop
lock
pop
mov
add
fcmovb
add
adc
aam
add
clc
jg
jo
bsr
mov
test
mov
jmp
sbb
pusha
cwtl
or
adc
add
cmp
data16
and
orl
mov
lret
lds
inc
mov
add
pop
add
pop
or
cmpsb
dec
lock
mov
adc
sub
cmp
pusha
jmp
clc
addb
xlat
add
adc
in
jne
jns
loopne
cmp
lcall
jmp
push
mov
add
push
ret
add
sub
or
push
sahf
push
push
inc
test
jb
add
adc
inc
icebp
and
flds
mov
inc
or
insb
jp
pop
cmp
les
sar
mov
cmp
lcall
je
test
xor
cs
push
loopne
sub
mov
ret
insb
cld
dec
push
lea
jbe
mov
inc
push
pop
push
mov
mov
and
and
hlt
ret
js
movl
mov
sub
cmp
jno
in
add
dec
mov
xchg
je
dec
push
inc
cmp
xchg
imul
inc
data16
loopne
and
sub
pushf
nop
or
jle
jle
dec
mov
lea
sbb
sbb
xchg
mov
scas
mov
rcll
push
sub
sbb
push
pusha
or
xlat
lret
andl
or
lods
sub
loop
lods
pusha
push
or
xchg
jecxz
inc
push
xor
sub
shlb
in
incl
out
or
dec
sub
sarl
pop
fldt
or
inc
mov
add
and
or
push
aad
add
inc
mov
repnz
jb
xor
dec
mov
sbb
or
inc
xchg
call
pop
cmpsb
mov
adcl
insb
fs
cmpsl
repnz
push
test
test
sbb
loop
lret
cmpsl
push
and
fnstenv
or
or
inc
repnz
push
xor
pop
ficoml
pop
add
inc
xor
jo
clc
inc
subl
inc
or
jo
mov
xchg
pop
mov
sarl
jo
pop
mov
push
xchg
and
mov
cmp
add
xchg
pop
add
sub
or
ljmp
sub
jb
and
clc
lods
in
sub
mov
divb
mov
pop
nop
mov
shlb
mov
push
mov
cmpsb
and
dec
push
push
and
add
and
adc
stc
sbb
add
mov
jl
dec
mov
test
ficomps
pop
inc
sahf
out
push
js
add
inc
movsl
nop
xchg
push
add
add
pusha
repnz
lret
cmp
add
inc
push
mov
pop
hlt
mov
stos
lock
inc
es
stos
cmc
gs
rcl
mov
mov
jb
inc
sub
clc
sub
mov
dec
scas
adc
sub
adc
cmpsb
jge
out
int
lea
mov
add
lock
test
pop
sbb
xor
xchg
outsb
in
xchg
fistps
or
sbb
pop
mull
add
inc
or
and
int3
dec
lcall
outsb
jns
cmp
daa
adc
js
pop
xchg
inc
adc
mov
dec
adc
or
cmp
sbb
or
push
jbe
fsubs
ret
sub
and
and
cmp
sbb
and
in
sbb
push
fildll
lods
sub
pop
pop
cli
push
push
arpl
sub
js
or
lock
repnz
in
inc
ret
xchg
shll
cmp
adc
sbb
and
stc
fmull
dec
pop
jbe
cmpl
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
jmp
loope
fstl
pop
mov
pop
dec
push
fldl
mov
xor
addb
insb
push
jbe
xor
jmp
cmp
cmp
aaa
cld
fucomp
pop
inc
jmp
sub
dec
je
adc
or
sub
test
das
movsb
mov
dec
push
shl
divl
adc
mov
fadds
add
cmp
jmp
push
rcll
rcr
pop
jne
mov
push
push
add
push
mov
xor
decb
and
sbbb
loop
xchg
rclb
orb
inc
loopne
and
fnstsw
fmull
sub
push
mov
jg
pushf
call
jne
add
test
add
push
aaa
xchg
jl
insb
push
xor
push
push
daa
pop
mov
jo
js
scas
lea
inc
mov
ret
pop
sub
mov
sarb
jmp
cmp
je
cmp
pop
and
shlb
leave
adc
cli
jge
lahf
mov
cmpsb
sbb
fstpl
imul
jmp
sbb
and
push
cmp
pop
mov
adc
jmp
xchg
or
pop
scas
hlt
ljmp
push
push
mov
dec
repz
cmp
inc
jo
adc
iret
repz
out
push
jg
sbb
mov
mov
add
pushw
add
cmpsl
sub
mov
xor
push
pusha
lea
adc
sub
jl
fsubrl
mov
fadds
mulb
insb
dec
movb
pop
jae
mov
sbb
xchg
pop
jge
icebp
mov
push
dec
push
mov
push
lea
push
lea
push
push
push
push
add
push
lea
and
dec
cmp
outsl
and
add
dec
mov
inc
test
or
cltd
lahf
test
push
push
push
arpl
arpl
pop
push
jo
movl
add
mov
or
sbb
insb
add
fwait
add
adc
popa
sbb
cmc
dec
lcall
jg
aaa
lods
popa
cmpb
inc
xor
add
sub
inc
out
xchg
popa
dec
mov
fldcw
fadd
inc
jno
in
and
dec
adc
cwtl
movsl
dec
dec
adc
aas
and
mov
in
movl
add
fnsave
jle
cmpsb
push
lahf
and
pop
iret
sub
and
mov
cmp
pusha
insb
outsl
sbb
push
or
outsl
add
ss
outsl
aas
sarb
das
push
add
add
push
or
subb
jae
ret
dec
adc
and
push
repz
daa
sub
adc
rcrb
call
call
mov
xor
icebp
fldl
insb
sub
cmp
push
loop
xor
inc
push
fnstsw
inc
lea
negb
sub
into
push
mov
scas
aam
inc
cmp
push
push
push
cmp
pushf
mov
imul
stc
sbb
pop
dec
pop
rolb
mov
lea
inc
jl
sbb
mov
mov
add
repz
ret
sbb
adc
xor
pop
outsl
push
andb
xchg
pop
push
jl
add
faddl
inc
icebp
jmp
jne
int3
push
xor
sbb
lea
aam
mov
adc
dec
fildl
cmp
mov
clc
and
push
or
add
dec
xor
sub
ret
dec
loope
sub
rorl
mov
scas
negl
mov
mov
cld
int3
cmp
jne
push
sub
xchg
push
push
in
pop
fadds
jo
xor
push
rcr
pop
mov
push
rclb
rolb
mov
fwait
lret
jo
out
enter
mov
cmp
jne
call
push
or
andb
adc
or
stos
or
mov
or
rcl
iret
sub
les
mov
jle
pop
push
dec
lock
div
push
dec
aaa
mov
jo
push
dec
push
push
adc
sbb
jge
fisubrs
inc
dec
sub
imul
dec
jmp
sub
icebp
push
sub
in
fcomi
fwait
in
jmp
mov
add
mov
inc
adc
adc
dec
rorl
loope
add
mov
adc
mov
imul
mov
sub
fcomps
in
sub
cmp
fistps
cmp
lock
fidivrs
add
and
pop
mov
sub
into
in
xor
pop
or
push
dec
dec
cmp
dec
inc
sarb
or
push
push
pop
imul
mov
mov
xor
adc
fimull
leave
and
pop
in
mov
cmp
iret
leave
out
add
pushf
hlt
mov
pop
out
jl
test
push
fsubs
test
pop
dec
mov
push
inc
scas
and
add
add
dec
adc
punpckhdq
idivb
lahf
lock
pushl
and
adc
pop
jp
mov
mul
lahf
sbb
dec
pop
xchg
jo
pop
orl
mov
jo
lock
mov
in
push
mov
call
adc
adc
ja
mov
dec
sbb
push
cs
mov
fadds
in
int3
outsl
fcoml
mov
scas
inc
lods
pop
push
push
inc
xor
dec
cmp
pop
cwtl
bound
lret
mov
add
ret
inc
movsb
add
cmp
je
cmp
mov
scas
jl
sbb
repz
repz
push
inc
add
sbb
xchg
inc
adc
ja
or
sbb
or
mov
adc
es
xor
sbb
push
jne
movb
jmp
cmp
adc
icebp
pop
repz
popf
movsl
fldz
xor
and
mov
inc
jl
push
mov
sub
mov
shlb
push
xchg
mov
lods
push
sub
mov
xchg
sbb
xor
rolb
test
and
jl
std
and
fimull
popf
sub
mov
fisubl
push
push
dec
or
js
sbb
aad
jne
es
hlt
add
push
adc
mov
push
mov
cmp
iret
push
adc
sbb
enter
cltd
add
daa
dec
push
sub
idivl
xor
cmpsl
in
sbb
add
adc
cmp
xor
sub
pop
cmp
mov
inc
sarl
push
sub
dec
or
adc
mov
stc
mov
or
sbb
sbb
inc
push
and
push
push
lret
ja
jbe
jl
xchg
andb
jbe
or
sbb
mov
and
xchg
push
or
inc
shlb
movsl
sbb
test
add
sub
popf
cwtl
imul
push
fldl
fmull
pop
mov
call
xchg
shrl
push
push
add
mov
aaa
movsl
mov
mov
cmp
push
stos
adc
jp
cli
ja
mov
mov
mov
es
andl
xor
xchg
in
push
in
ds
js
icebp
push
ret
push
rol
sbb
adc
xor
cli
dec
pop
pusha
daa
stos
adc
fmuls
call
add
repz
or
pop
test
pushf
fiaddl
mov
jb
sarb
test
push
mov
adc
push
adc
mov
push
jle
add
loopne
aaa
push
pop
cmp
pop
sbb
pop
push
sbb
or
jne
cs
sub
push
push
mov
fnstsw
jmp
adc
sbb
and
adcl
repz
mov
push
push
shrl
dec
xchg
andl
push
cli
or
push
icebp
ret
xchg
pusha
mov
adc
insb
push
push
addr16
jmp
gs
popa
push
sbb
push
push
lods
push
sub
push
jecxz
adcl
sbb
addr16
or
out
push
out
mov
imul
mov
in
dec
mov
dec
fidivrl
xor
push
mov
xor
pop
jl
mov
cltd
mov
lea
aas
lock
cs
dec
adc
pop
enter
inc
les
or
sub
incl
jge
mov
idiv
push
mov
push
mov
ljmp
idiv
push
add
adc
in
cli
test
cmp
jp
fstpt
mov
ss
mov
sbb
rcrb
rclb
imul
scas
mov
dec
dec
divb
jge
add
and
rcrb
lock
jle
fldlg2
or
out
sbb
pop
pusha
push
js
ret
pusha
pop
insb
xor
sti
sub
or
mov
je
call
sbb
mov
add
das
adc
inc
popa
adc
pop
outsb
pusha
js
out
mov
mov
or
xchg
arpl
mov
lock
test
jle
cmp
cli
mov
fwait
xor
pushf
movb
jge
sahf
dec
sbb
dec
lea
jg
cmp
cld
jl
xchg
sub
cmp
mov
dec
nop
or
out
insb
mov
scas
sub
hlt
mov
test
jns
out
sub
push
faddl
fdivl
xor
mov
fnstsw
loopne
stc
mov
sub
mov
mov
sbb
pop
add
les
cmp
pop
jl
jmp
into
pop
je
sbb
mov
and
insl
cmpb
or
clc
fidivl
jmp
push
xor
push
dec
xchg
cli
stos
outsb
lods
iret
push
pop
mov
pop
jne
pop
pop
movb
add
repnz
mov
xchg
jmp
mov
movsb
stos
shrl
add
mov
aam
push
inc
jmp
inc
aam
clc
lea
jns
and
cmpsl
je
pop
andl
gs
jbe
fnstenv
je
or
inc
pop
and
xchg
test
jmp
out
xchg
stos
cmpsl
bound
out
dec
dec
lods
pop
push
pop
pop
into
pop
leave
mov
cmpsl
lock
lock
pusha
stos
sub
je
mov
add
add
in
sbb
inc
add
sub
repnz
mov
adc
int
sbb
loope
xchg
addr16
dec
jns
and
cmp
jle
arpl
sti
or
sbb
push
movsb
aaa
clc
int
adc
push
leave
adc
pop
ljmp
rolb
dec
adcl
movsl
push
out
push
mov
lea
push
mov
push
add
arpl
hlt
pop
mov
add
lea
addl
shll
or
dec
or
dec
or
add
cmp
inc
cmpsl
adc
xor
mov
mov
add
cmpsl
aad
lock
sub
shrl
addr16
inc
pop
or
adc
mov
incl
add
xchg
fsubrl
mov
inc
and
jl
pusha
adc
fs
hlt
xchg
lods
push
push
pop
int3
out
shll
pop
popf
dec
inc
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
ret
out
mov
popa
inc
mov
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
inc
add
add
cmp
push
lock
mov
dec
adc
data16
push
lea
push
lods
mov
dec
pop
aaa
and
jle
je
push
fnstcw
pop
out
sbb
push
fldl
add
push
xor
dec
mov
mov
jecxz
or
mov
hlt
and
mov
push
fs
int
dec
cmpsb
sbb
in
pop
lret
shrl
inc
mov
shrb
xlat
das
push
scas
lock
pop
xchg
pop
add
in
inc
sub
rcrb
adc
loopne
clc
lret
mov
add
mov
aas
sub
pop
jmp
arpl
outsb
jmp
push
adc
adc
rcr
jp,pt
in
aas
jmp
test
scas
and
dec
dec
jl
pop
lahf
clc
push
sti
xor
mov
sbb
pavgw
dec
pop
inc
dec
and
cmp
fisubs
neg
or
inc
rcr
push
pop
jle
test
jb
xchg
stc
outsb
int3
xor
adc
sbb
and
xor
adc
scas
in
fiaddl
cmp
aaa
rcrb
das
std
int3
stc
fisubrs
push
loop
pop
jno
push
xor
jmp
cli
xchg
inc
inc
dec
gs
call
mov
in
andb
add
daa
imul
cli
pop
xor
lods
add
loop
leave
jae
sub
pop
push
in
in
movsb
jb
pop
fmuls
lods
mov
xchg
mov
lret
add
fmuls
jne
xchg
or
adc
outsb
xchg
icebp
add
add
je
out
inc
pop
and
shl
popf
sbb
and
fistpl
sub
les
push
stos
rorb
cltd
test
lahf
or
call
inc
daa
fsubrl
push
iret
xor
mov
sbb
punpckhbw
push
sbb
push
cmp
mov
sbb
push
test
das
jmp
loopne
arpl
push
inc
aaa
push
add
or
je
jnp
out
jo
cmp
movsb
imul
push
push
outsb
sahf
lods
int
sarb
xor
insl
and
push
or
mov
pop
push
add
mov
cmpsl
adc
fcmovnu
push
insb
popf
or
imul
nop
jnp
gs
and
testl
and
jne
mov
sub
push
lcall
clc
sbb
xchg
pop
inc
pop
cmp
jmp
dec
mov
inc
andl
daa
aam
dec
cmp
mov
sbb
out
ret
je
xor
mov
mov
or
loop
dec
mov
jmp
sti
mov
and
sub
and
mov
outsb
pushf
jge
add
or
popa
xchg
inc
pusha
inc
xor
inc
xchg
scas
cmp
cmpsl
xchg
sub
cmpsb
add
js
cmp
jge
mov
xchg
testb
rorl
pop
or
cmp
pusha
jle
call
or
xor
sahf
pop
std
fsubr
sbb
popf
cmp
xor
jns
fadds
out
cmp
xchg
data16
pop
mov
sbb
mov
jns
or
stos
shlb
push
dec
mov
cmp
xchg
iret
andb
add
jo
sub
cld
inc
cmp
sete
adc
loope
adcb
inc
sbb
adcl
push
ret
mov
mov
jo
mov
mov
out
mov
or
jno
sbb
and
add
subb
bnd
and
fwait
mov
popf
xor
loopne
add
sbb
mov
int3
sbb
adcb
arpl
fwait
hlt
js
pop
into
lods
push
adc
ret
jnp
rclb
mov
outsb
addl
jge
pop
hlt
cs
in
pop
or
or
xchg
xor
xchg
std
imulb
mov
sbb
iret
call
cld
jnp
test
sbb
ss
mov
cmp
push
repz
and
mov
daa
push
xchg
push
or
fdivs
fwait
test
add
push
add
adc
mov
add
fidivs
add
mov
in
mov
jne
lods
adc
inc
mov
pop
adc
jno
mov
clc
mov
sbb
adc
mov
sbb
lock
jns
int
in
repz
in
call
ja
fdiv
in
or
clc
xor
daa
adc
jns
pop
pop
arpl
push
mov
shlb
popa
dec
loopne
fs
jge
sbb
insl
enter
or
pop
inc
pop
pop
jle
jge
push
repnz
test
or
push
xor
or
dec
dec
dec
addl
mov
jno
xchg
or
push
sbb
aaa
add
jo
enter
shl
jae
push
sbb
test
clc
clc
sub
test
cs
dec
call
push
and
lock
hlt
add
in
or
dec
clc
pushf
adc
lods
pushl
xor
push
xor
xchg
push
push
add
std
lock
dec
cld
sub
lock
aaa
mov
clc
pop
sub
dec
inc
jge
cmp
jmp
das
hlt
mov
jmp
jge
out
or
jbe
xchg
jbe
add
push
push
add
push
outsl
or
sbb
and
jp
adc
js
clc
adc
sub
mov
es
arpl
fbld
inc
in
jb
hlt
test
js
das
sub
jg
mov
lock
dec
push
cwtl
add
jb
pop
jb
mov
jb
ret
jno
lret
ret
hlt
mov
test
pushf
mov
jno
push
sbb
pop
or
pop
push
mov
mov
sub
adc
push
enter
xor
xor
in
jg
add
mov
mov
sbb
add
or
nop
pop
aaa
xor
lsl
jg
push
lea
push
jl
push
push
jp
adc
push
cmp
pop
inc
psubsb
push
mov
xor
sbb
jo
mov
jl
ja
pop
mov
jmp
pushf
mov
xor
or
inc
js
push
push
fistps
outsl
shl
sbb
xchg
je
sbb
call
jl
nop
into
lock
xlat
ss
mov
loopne
inc
sbb
hlt
jae
adc
sti
and
jbe
mov
add
sbb
inc
push
notl
int3
adc
add
xor
enter
push
sub
xchg
jb
and
mov
pop
mov
ret
inc
rcrb
xchg
push
pop
mov
jne
sbb
paddb
movsb
lea
andl
fmull
mov
pop
jo
push
je
mov
pop
adc
clc
fdivrl
add
add
lock
mov
dec
inc
stc
xchg
dec
sub
adc
jg
xor
sub
mov
hlt
push
xchg
arpl
dec
xor
lcall
cmp
push
mov
imul
inc
addl
shlb
jns
jg
pop
loope
jb
push
jg
aas
inc
test
out
mov
je
sub
push
pop
popa
xchg
push
xchg
leave
add
xchg
or
sahf
push
loopne
dec
jmp
mov
jb
adc
jns
into
fs
dec
jp
adc
mov
add
dec
or
test
mov
loop
mov
ljmp
pop
add
pop
inc
jb
test
aam
cmp
iret
mov
sbb
xchg
xchg
adc
sbb
inc
pop
jns
aaa
sbb
pop
arpl
test
movsb
adc
mov
sbb
aas
xor
and
add
mov
add
adc
dec
pop
daa
daa
push
adc
out
ret
fs
mov
push
jnp
mov
adc
mov
and
xor
rcrb
filds
cmp
add
cltd
lods
xor
add
mov
jnp
mov
fdivs
mov
inc
test
add
dec
jbe
pushf
out
xchg
mov
xchg
pop
aad
imul
cmp
sub
movl
pusha
gs
lcall
adc
sbb
popf
nop
stc
xchg
pop
mov
sbb
fisttpl
lret
and
nop
add
andb
incb
add
fadds
enter
push
jno
sub
cmp
outsl
pop
mov
mov
flds
dec
sbb
fstps
push
int3
test
or
xor
adc
sbb
mov
repnz
adc
inc
or
lcall
scas
add
or
sub
xor
jle
xchg
xchg
push
mov
cli
mov
fimull
ret
movb
test
add
cmpl
addr16
js
test
jo
mov
pop
inc
add
add
xchg
ffreep
sti
push
jno
iret
nop
lea
adc
ss
imull
add
jnp
xchg
outsb
and
adc
xchg
test
and
cwtl
pop
add
cmp
test
lcall
sarl
test
add
add
mov
mov
lea
or
inc
imul
pop
or
enter
adc
xchg
or
mov
sub
test
test
mov
mov
loope
testl
leave
and
adc
push
dec
or
cmpsl
pop
mov
cmpb
inc
cli
xchg
mov
pop
out
pop
loopne
inc
mov
lret
loope,pt
dec
push
push
cmp
nop
cmpl
mov
je
inc
mov
mov
mov
dec
xchg
mov
js
dec
fdivrs
movsb
fwait
xchg
daa
fsub
jle
push
hlt
mov
adc
cmp
cmp
mov
jo
adc
stos
mov
adc
jmp
movsb
add
divb
cltd
aad
in
add
sti
sti
mov
xor
jb
call
pop
jb
sti
cmc
push
fsub
in
sbb
jl
enter
inc
into
cmp
stos
mov
mov
and
mov
mov
mov
inc
popa
repz
mov
jne
ret
inc
sub
lea
into
sahf
je
loop
cmc
je
sbb
stc
sbb
add
xor
test
js
imul
jmp
repnz
and
adc
jl
xor
movsb
cltd
nop
mov
nop
nop
mov
movsl
fiadds
pop
xchg
dec
cs
sbb
and
sub
pop
incl
and
add
jne
push
cmp
aad
add
leave
and
enter
mov
int3
push
dec
scas
sarb
shrb
xchg
inc
jle
mov
sbb
mov
inc
and
jle
xor
add
cli
jle
add
adc
js
sahf
sbb
movzwl
push
mov
pop
pop
mov
inc
push
ret
push
pop
mov
repnz
xor
push
xchg
cwtl
icebp
adc
inc
aad
call
cs
rcrl
cmc
sbbl
mov
dec
adc
inc
or
xchg
sbb
push
aam
testb
push
mov
scas
sahf
addl
lock
mov
push
pop
lcallw
xchg
fs
lock
add
mov
cmp
lret
mov
lods
or
ret
aas
pushf
fdivrs
fbstp
add
adcb
xor
test
adc
xchg
push
pusha
add
lock
ret
cmp
and
push
mov
sbb
or
rol
pushfw
mov
push
add
lea
lea
or
icebp
inc
add
mov
adc
loope
sbb
in
incb
add
mov
aaa
mov
cmp
mov
enter
lea
loopne
mov
inc
xor
fdivr
or
sub
xchg
push
hlt
pusha
insb
stc
roll
ret
ret
adc
add
shrl
mov
nop
inc
ret
jecxz
lcall
jo
in
xchg
outsl
add
xchg
dec
lea
dec
jbe
jo
add
cld
mov
or
mov
add
inc
out
pop
mov
ss
iret
aam
popa
jb
inc
add
add
pop
imul
mov
insb
or
inc
in
and
xorb
push
outsb
push
sbb
iret
divb
dec
fdivrs
add
rcr
negb
test
mov
xlat
pop
data16
or
enter
insl
les
dec
inc
add
and
mov
pushf
ja
or
inc
lret
daa
mov
lds
nop
push
jg
xor
and
fildll
xchg
push
gs
inc
or
mov
fs
imul
jno
popa
dec
arpl
jns
dec
mov
push
add
xchg
and
lea
sarb
jle
pop
inc
jo
aad
test
sahf
or
mov
push
mov
or
push
leave
rcll
pop
pop
add
mov
bound
add
xorb
or
movsb
mov
sbb
adc
enter
mov
mov
mov
dec
test
pop
pusha
into
pop
dec
or
ret
pop
in
mov
fldenv
fs
int3
fidivs
andl
inc
inc
or
sarl
mov
testb
xorl
loopne
add
or
stc
xchg
and
ljmp
add
pop
add
pop
dec
loope
pop
adc
sbb
loope
xchg
jge
or
cmp
inc
adcl
xchg
div
mov
dec
inc
leave
cmp
ficompl
paddusb
xor
insl
leave
pop
pop
inc
pop
dec
dec
cmp
cmp
call
sbb
jle
inc
adc
test
add
popa
push
lods
xor
push
jne
jnp
and
or
inc
icebp
sbb
sbb
stc
sahf
xor
mov
pop
pop
or
rcrb
jno
jge
sub
cmpl
lcall
add
push
pop
cmp
je
mov
mov
movsb
xorl
or
sbb
xor
dec
fcomps
mov
mov
stos
pusha
and
push
or
inc
jo
add
popf
or
mov
mov
cmp
lea
fisttpll
and
cmp
cmp
push
add
sub
mov
xor
sbb
mov
sbb
rol
rorb
ss
add
fsubrl
mov
daa
int3
sub
jnp
scas
ret
sub
fsubrl
call
adc
loopne
mov
dec
imull
pop
lods
fcoms
aas
aam
lret
in
inc
jle
daa
das
sbb
jae
test
xor
es
rorb
push
shl
sub
mov
or
sbb
dec
sahf
jbe
into
int3
xor
loop
sbb
dec
or
sqrtps
xchg
cmpsl
adcb
push
pop
fsubl
pop
insl
faddl
fiadds
rorb
push
out
mov
mov
fsubrl
add
pop
ror
pop
movsl
je
lcall
stos
out
fwait
aad
dec
call
mov
add
ret
push
popa
xor
fmuls
loopne
or
pop
fldl
pop
pop
dec
cmp
in
or
add
je
sub
pop
xor
adc
lods
pop
mov
push
jbe
add
iret
mov
pusha
pop
dec
xor
scas
or
or
out
leave
mov
xlat
adc
push
decb
and
lds
bound
pushf
testb
js
and
fsubrs
lret
rorb
push
or
in
shll
rolb
push
jl
push
cwtl
lock
nop
mov
les
push
movsl
or
addb
adc
or
jb
fadd
nop
mov
inc
not
les
mov
pop
outsl
add
ret
ljmp
push
mov
xor
divb
in
inc
lock
jnp
out
push
or
and
jae
xchg
in
fisttpl
jge
cmp
pusha
lods
sbb
int3
lods
push
dec
adc
xor
fs
ds
xchg
js
pop
push
xor
xchg
int3
push
push
cli
xchg
xchg
push
adc
push
fildll
add
es
das
add
mov
xlat
addl
test
les
daa
and
xchg
je
lahf
sub
push
jae
cmp
mov
xchg
push
mov
mov
mov
push
sbb
bound
sub
add
and
or
jp
xorl
aad
clc
add
cmp
sub
mov
mov
dec
and
js
fbld
jbe
add
icebp
sbb
lods
int3
add
jecxz
pop
add
ds
call
sub
push
arpl
jno
loopne
dec
xorl
add
or
add
or
sub
fadds
or
xchg
mov
sbb
jo
sub
sbbb
xchg
outsl
cmp
and
xor
iret
clc
pusha
shrb
add
fcoms
cmc
test
xchg
mov
roll
or
inc
dec
stos
into
in
mov
jbe
xchg
loope
adc
out
or
sub
inc
sbb
mov
push
ret
xchg
dec
pusha
repnz
or
add
pop
xchg
iret
and
dec
movzwl
mov
sbbb
or
push
inc
inc
loop
add
ret
lcall
xchg
leave
add
push
or
int3
out
sbb
or
mov
addl
fbld
imul
xchg
pop
movb
push
lret
mov
xor
inc
jbe
call
aaa
loopne
or
add
fsubrl
aam
jb
pop
incb
xorb
sbb
xchg
shl
add
cmpb
addr16
jmp
icebp
je
cmp
ja
push
arpl
loop
and
loope
clc
je
jp
mov
xor
clc
ds
push
xchg
lock
sti
lea
push
lea
push
inc
push
movsl
dec
xor
push
push
femms
scas
pop
add
stc
add
sbb
inc
cltd
daa
dec
lret
cmp
jl
mov
hlt
int3
or
jge
cmp
jle
pop
sub
push
jle
roll
shlb
cmp
jne
add
sti
test
ds
push
add
lahf
insb
cmc
add
push
lods
push
lods
cmpsb
mov
dec
sbb
out
test
out
out
pop
xchg
jo
cmp
je
sub
push
jns
push
xlat
push
mov
insl
fcmovnu
movhps
xor
add
fstps
lock
sar
push
ret
outsb
add
test
jmp
sub
dec
bound
in
pop
adc
cmpsb
dec
or
or
sub
in
sub
lea
pop
sbb
out
push
dec
or
in
out
push
mov
sub
or
mov
jae
es
mov
fmuls
dec
pop
jb
test
call
sti
call
scas
xchg
movsl
or
dec
xor
adc
adcl
push
mov
pop
imul
sub
cmp
mov
inc
add
mov
sub
xchg
test
in
insb
add
mov
jbe
ret
loop
nop
cmp
jmp
or
ret
or
neg
or
rolb
out
shrb
cmp
je
pop
sar
sbb
jbe
push
mov
mov
loope
fbstp
mov
xchg
inc
mov
in
insl
rcll
cmp
jb
pop
pushl
rcrb
xor
je
loopne
ss
out
mov
sbb
jecxz
repnz
sub
jne
push
sub
dec
and
cmpl
push
ret
in
out
dec
or
mov
shlb
in
addl
jb
imul
shlb
imul
stos
jae
xor
jne
popa
adc
call
or
aaa
jne
insl
mov
xchg
fldl
jb
lret
dec
adc
sbb
jg
inc
ret
or
push
cmp
je
xor
fbld
daa
adc
mul
seto
mov
enter
scas
inc
and
jmp
mov
mov
mov
push
xor
and
iret
shl
mov
sbb
cmp
xchg
mov
mov
data16
aaa
lock
mov
fadds
movsl
mov
fdivs
pop
ret
imul
mov
cmp
inc
adc
mov
scas
je
jo
cmp
rorl
cmc
scas
push
inc
icebp
jecxz
xchg
sub
inc
or
cli
push
arpl
inc
sbb
adc
mov
or
and
adc
inc
add
andl
mov
shl
test
add
clc
js
push
inc
shrb
pop
xor
cmpb
clc
and
cmp
or
cmp
push
mov
shr
push
xor
adc
add
sbb
aam
callw
dec
mov
mov
mov
cmp
or
addr16
or
loop
xor
sarb
lock
push
cs
lock
jbe
add
ds
daa
inc
xchg
into
sub
push
mov
inc
in
mul
icebp
sub
call
clc
adc
or
rcl
out
addr16
dec
lods
sub
faddp
jmp
jl
cmpsb
fcomip
cmpsl
ret
out
push
test
je
cli
jmp
mov
aam
js
shll
negb
inc
cmp
jae
add
sub
cmp
mov
pop
or
mov
xchg
push
pop
cmp
jne
and
or
adc
adc
ja
je
push
hlt
xor
jmp
push
pusha
xor
adc
test
cmp
xchg
les
and
in
lcall
addb
cmp
add
push
dec
or
lret
mov
sbb
or
mov
push
or
dec
xlat
jecxz
or
int3
imul
je
pop
xor
jns
or
jl
mov
jne
bound
lea
lret
jno
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
jbe
cmc
add
mov
pop
cmp
out
lods
dec
or
and
push
clc
dec
lahf
jae
paddd
or
xor
mov
cwtl
pusha
or
push
or
mov
push
mov
shl
cmpsl
addl
fisttpll
pop
push
sub
adc
ror
cmpb
sub
lods
pop
push
cmc
push
fwait
or
add
mov
loope
cs
push
dec
add
pop
out
cmp
testl
push
pop
aad
add
mov
mov
jo
push
mov
push
je
push
pop
xchg
int3
shrb
popa
and
sti
xchg
push
push
inc
add
lods
rcll
xor
sub
push
adc
inc
push
jl
push
sub
mov
push
test
dec
sub
and
clc
push
push
cmc
push
aam
xchg
idivb
push
push
inc
lret
out
sub
repz
pop
cmpsb
xor
subb
arpl
xchg
xor
subl
mov
inc
jp
push
bound
push
in
ljmp
add
push
push
jbe
insb
mov
neg
push
mov
ret
mov
adc
pop
out
jne
rclb
testl
mov
jmp
js
or
int
in
mov
pushf
fldcw
and
mov
test
sbb
aad
stos
outsl
bound
adc
outsl
jae
mov
ret
inc
push
and
push
loope
outsb
enter
jnp
xchg
loop
cmp
mov
xor
lods
unpckhps
and
imul
xchg
and
ud1
fbld
ja
dec
das
fimull
jmp
cmp
daa
cmp
dec
lods
or
push
push
int3
push
sub
pop
dec
lock
add
push
pop
dec
mov
push
cmovle
jae
add
movsl
nopl
jno
inc
adc
fistpl
mov
js
mov
es
jnp
inc
cmp
sub
sbbl
push
inc
adc
sbb
es
shrl
mov
iret
sbb
dec
js
mov
outsb
add
mov
mov
lahf
jb
sbb
fwait
inc
pop
lcall
pop
adc
shlb
mov
dec
push
cli
push
inc
sbb
add
sbb
dec
pop
mov
push
or
mov
pop
push
je
jo
jb
and
pop
fs
lahf
cmp
sub
add
jmp
lock
aaa
or
leave
ret
push
fs
cwtl
xchg
fbld
repnz
lret
jbe
mov
frstor
cs
bound
cmp
xchg
addb
add
push
test
sub
push
iret
cli
adc
dec
je
orl
ljmp
push
dec
cmp
insl
dec
add
jmp
test
lea
mov
shrb
test
les
adcb
add
les
into
inc
cmp
insl
or
scas
aam
mov
popf
add
xorb
add
cmp
or
add
xchg
fimull
xor
insl
jae
mov
mov
cmpsl
mov
lock
test
adc
fdivrs
and
mov
orl
mov
fs
sub
cmc
sub
sbb
imul
mov
dec
inc
and
lds
loop
movsl
xor
jnp
adc
dec
das
mov
inc
push
cmp
jne
push
lock
cmp
sbb
sarl
cmp
pop
setae
add
cmp
iret
mov
add
xchg
mov
loopne
jo
xchg
arpl
or
push
xor
adc
repz
adc
dec
enter
lea
jbe
adc
insb
xor
xor
mov
nop
mov
mov
shrl
leave
lea
shl
mov
add
movsb
hlt
enter
clc
adc
or
int3
pop
nop
sbb
cld
push
movb
dec
xor
js
in
mov
loope
inc
fadds
push
sbb
loope
movsl
aaa
cmp
jp
sbb
rcll
sbb
jae
mov
hlt
add
pop
inc
outsl
adc
out
sbb
inc
aas
sub
or
mov
dec
insl
sbb
xor
movsb
imul
testl
cltd
pop
lea
pop
mov
cs
push
hlt
lea
push
add
xchg
jnp
cmpsb
call
dec
jo
dec
insl
ss
sub
lds
mov
loop
mov
inc
mov
rolb
aas
loope
or
loopne
inc
or
cmpsb
aaa
push
xchg
and
sub
ja
popa
nop
pop
and
and
inc
inc
add
sbb
jne
mov
ret
xchg
enter
mov
test
push
pop
inc
or
xchg
int3
pop
pop
push
mov
push
sub
jl
adc
and
sbb
push
loop
int
std
loope
stc
dec
mov
dec
addr16
sbb
fdivr
faddp
cmp
arpl
or
add
or
or
lret
push
push
sub
sub
adc
lcall
xchg
pop
aad
push
or
outsl
mov
mov
adc
sub
cmp
xor
daa
std
cmpsb
mov
cmpsl
and
mov
xor
iret
ret
dec
adc
pusha
or
test
dec
mov
lods
cmp
cld
jmp
mov
add
pop
push
and
add
jbe
mov
test
rorl
hlt
clc
pusha
fnsave
push
adc
sbb
popa
ret
pop
or
inc
popa
or
cld
sbb
lods
and
imul
jp
repz
inc
mov
jmp
movl
ret
daa
imul
lea
gs
inc
inc
add
lahf
ja
mov
test
scas
movsl
dec
push
stos
mov
in
test
sbb
loopne
sarl
push
push
inc
outsl
or
add
sbb
adc
sub
aaa
fimuls
clc
js
sub
fdivs
je
adc
pop
hlt
xchg
add
add
mov
mov
jne
adc
pop
push
mov
test
rcll
and
push
rcrl
dec
mov
or
dec
xor
nop
or
add
ret
movsl
cmp
shll
pop
jg
cmp
enter
fnsave
push
fsubrl
lea
push
les
out
jmp
inc
push
jo
inc
ljmp
orb
std
mov
out
and
add
mov
mov
inc
jo
pusha
inc
pop
fcompl
popa
mov
or
inc
inc
push
les
bound
push
fs
arpl
adcb
push
mov
loope
xchg
lahf
dec
cmp
int
lods
in
dec
cmp
xor
fsubs
pop
adc
nop
or
in
mov
inc
cmpsb
and
or
or
notl
inc
or
jbe
nop
push
adc
push
lods
mov
ret
jne
cmp
add
jmp
cmp
ret
mov
addb
mov
mov
lock
in
and
adc
xor
xchg
or
lea
shlb
cmpl
cmp
in
jo
inc
mov
test
push
pop
ljmp
xchg
mov
or
mov
out
inc
in
repnz
inc
jnp
cltd
mov
xor
inc
popa
daa
mov
cmp
xor
dec
andb
inc
push
scas
lret
add
ret
cld
inc
push
and
mov
popf
mov
push
sbb
mov
out
adc
rorb
mov
xchg
inc
fwait
cmpsb
xchg
jmp
mov
cmp
add
add
xchg
cmp
mov
xor
fstp
sbb
mov
loope
or
mov
add
js
xor
sbb
dec
mov
lea
and
and
imull
cmp
push
xor
popa
sub
cmp
sub
js
cmc
add
insl
and
xchg
mov
xlat
push
adc
bound
inc
or
jne
or
out
and
jno
lret
in
xchg
or
lds
aas
dec
shll
sbb
xor
push
xor
jl
adc
xor
sbb
push
ret
mov
cmpb
scas
test
adc
add
xchg
sub
outsl
jnp
orl
push
push
test
and
or
mov
mov
sahf
sbb
jne
lahf
xchg
pop
mov
cmp
mov
adc
or
out
xor
lcall
adc
movsb
add
sarl
sbb
cld
dec
mov
add
into
push
xor
push
andl
jo
jle
push
push
or
or
push
icebp
add
push
rcrb
adc
out
pushl
aas
fsubrs
push
cmp
push
adc
jle
cmp
jae
jecxz
aaa
sbb
push
jno
fsubr
aam
out
adc
and
shlb
push
cmp
push
pop
mov
adc
pop
or
jns
std
hlt
add
cld
mov
push
push
push
sub
add
test
ljmp
aas
sti
nop
cmpsb
add
cmp
dec
rclb
sub
dec
mov
insb
push
push
push
lea
xchg
sbb
outsb
jp
sbb
mov
mov
inc
or
leave
roll
cli
cltd
mov
push
dec
out
mov
xor
inc
pop
hlt
movsl
jge
aam
movsl
ret
adc
lods
movsl
pop
pop
push
mov
adc
xchg
adc
and
pop
mov
popa
adc
jmp
push
scas
ljmp
adc
and
xor
mov
cld
and
cmpsl
sub
adc
and
and
adc
adc
enter
and
inc
adc
sub
dec
test
mov
mov
imul
enter
sub
xor
add
sbb
fmull
inc
dec
cmp
movsb
or
mov
clc
dec
jp
popl
mov
add
mov
orb
or
push
mov
xor
xchg
pop
inc
or
fistps
fsubl
sbb
fcoml
out
push
push
outsb
mov
xor
test
mov
inc
mov
jb
aam
pusha
and
inc
aam
lea
mov
mov
mov
mov
mov
orl
add
sub
push
ret
mov
mov
xlat
nop
dec
sbb
or
std
in
scas
pop
xlat
dec
in
jno
lea
call
push
mov
es
xchg
imul
es
jg
das
mov
fimuls
mov
cltd
add
pop
inc
dec
sarb
sub
int3
push
or
cmc
cltd
icebp
mov
mov
sbb
cmp
testl
subl
cmc
xorl
xor
int3
sbb
movsl
sub
out
adc
lods
subb
adc
mov
les
add
and
mov
pop
dec
jae
fdivl
mov
inc
jo
repz
dec
test
out
cmp
lods
call
adc
or
int3
and
std
mov
stc
popa
or
xor
add
into
mov
mov
add
push
mov
out
pop
nop
add
sbb
inc
call
cmpl
aam
dec
ret
mov
jmp
dec
rorl
in
orl
jge
lods
lret
pushf
mov
pop
cmp
dec
xlat
scas
sub
ret
out
cmp
ja
push
cmp
das
invd
test
inc
aas
loop
cltd
arpl
push
movl
movsb
or
sbb
in
dec
in
xor
pop
imul
pop
aam
mov
mov
adc
mov
jge
and
cwtl
add
pop
adc
mov
addr16
ja
jmp
aad
aam
or
and
sbb
testl
dec
shl
push
mov
rorb
push
dec
jne
mov
mov
mov
pop
scas
xor
adc
push
and
push
mov
sbb
rorb
add
stc
xchg
jp
mov
leave
mov
push
int3
pop
sbb
mov
repz
iret
push
ficompl
xchg
pushl
sub
js
mov
xchg
jge
and
and
in
andl
fcomi
loopne
in
mov
daa
sbb
nop
out
sub
mov
divb
dec
mov
lea
cli
jb
adc
or
cltd
test
or
loop
sub
cmp
rorl
pop
ja
xchg
pop
inc
push
lea
lods
jmp
test
je
mov
mov
add
xor
mov
dec
cmp
xor
xor
dec
repnz
aaa
cmpl
and
push
cmp
pop
mov
lods
mov
cld
lea
add
shlb
lock
and
mov
cmp
incb
aas
adc
and
ret
pop
mov
add
out
je
jp
test
sub
dec
push
inc
mov
xor
xor
orb
mov
sub
outsb
sub
dec
int3
or
das
loop
test
inc
jmp
xchg
fiadds
in
inc
lea
push
cltd
cmp
inc
mov
xlat
lods
mov
cmp
push
mov
push
fistl
movsb
lock
cltd
aaa
test
into
cld
insl
aad
sbb
shr
and
push
je
aaa
add
dec
pop
js
shrl
mov
push
das
andl
es
test
add
adc
fsubl
push
jmp
jmp
adcb
xchg
pop
sbb
dec
jnp
and
adc
jo
lea
sarb
fs
add
ret
popa
add
cmp
incl
inc
adc
mov
cmp
inc
jns
aaa
jne
scas
push
mov
xor
xchg
fidivs
sbb
push
bound
jae
adc
push
xchg
js
inc
lock
or
fcmovnbe
adc
dec
dec
bound
dec
mov
stos
in
cmp
mov
pop
adc
lock
scas
add
push
add
jne
sbbl
test
inc
sub
data16
and
inc
cwtl
adc
add
inc
adc
push
and
sub
mov
daa
loope
lret
ja
mov
adc
pop
or
jae
fs
add
push
mov
pop
lods
in
mov
nop
or
divl
dec
or
adc
xorb
sbb
pop
clc
ffree
and
jg
ja
jge
adc
inc
xchg
mov
mov
or
mov
push
inc
cmp
jl
lret
test
push
les
inc
pop
daa
sbb
or
pop
rorb
inc
sub
xor
xor
adc
pusha
mov
popf
and
add
pop
clc
mov
mov
adc
shll
mov
mov
insl
adc
or
dec
adc
dec
lea
adc
cmp
adc
adc
pusha
xchg
test
or
pusha
imul
mov
mov
mov
jae
repnz
rorl
mov
dec
jo
lea
xor
add
loop
clc
pushl
fistpll
sbb
test
cmp
cmpb
je
push
adc
push
add
test
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
dec
inc
or
ret
arpl
or
xchg
ret
jmp
adc
mov
mov
inc
xchg
and
and
loope
cld
mov
inc
outsb
and
jae
lret
sarb
int3
cmpsl
aas
shrb
mov
loope
daa
inc
jmp
push
mov
xchg
push
add
mov
push
jae
xor
pop
testl
inc
dec
jbe
rcrl
xchg
fmull
sub
das
out
mov
popf
dec
mov
pushf
in
push
mov
lock
test
cmpsb
mov
push
je
xchg
mov
loope
mov
imul
sbb
pop
cwtl
adc
adc
js
push
sbb
cmpb
add
inc
enter
jns
sbbl
cmp
inc
movlps
xor
outsb
xchg
shlb
aam
dec
and
dec
cmp
nop
mov
sbb
cmp
inc
xchg
sbb
pop
push
test
in
xchg
lock
cmp
lea
adc
xchg
sti
sbbb
adc
aas
mov
cli
sbb
cmp
rorb
pop
adc
sub
xor
push
or
push
outsl
ja
inc
mov
xlat
add
jae
and
cmp
mov
insl
cmp
cmp
mov
bound
in
imul
mov
stc
push
stc
sbb
adc
dec
scas
pushf
test
cmpsl
cmp
mov
jb
pop
sbb
push
mov
aad
mov
ljmp
cwtl
ja
jno
stos
ds
push
jne
cmp
outsl
inc
and
mov
mov
jns
shll
push
inc
push
aas
xor
ss
mov
inc
fisubrl
cltd
in
aas
cli
insb
adc
push
cmp
pop
dec
dec
and
add
add
pop
push
in
mov
push
out
push
inc
add
fstps
movsb
shll
andb
adc
sbb
xchg
cmp
mov
add
add
and
sbb
and
cmp
and
jl
in
in
fsubp
sbb
lds
dec
mov
xorb
and
sub
sbb
or
es
fidivrs
dec
out
pop
push
lock
fstps
sbb
jb
add
adc
sbbl
inc
addl
lret
pop
pop
and
js
orl
add
mov
dec
add
cmp
sahf
mov
fstps
dec
roll
adc
sbb
add
push
adc
aaa
sbb
xor
dec
pop
pop
jb
in
mov
pop
xchg
xchg
pop
std
aas
mov
jle
movl
or
xchg
inc
push
nop
bound
cmp
push
cmp
jo
adc
pushf
andl
and
add
and
pop
fsubl
adcb
xchg
inc
cmp
and
and
and
adcb
pop
or
xor
xlat
sub
mov
vmwrite
rorb
add
or
int3
js
pop
and
cmp
daa
adc
scas
sti
sub
or
add
sub
and
mov
add
imul
cmp
dec
jmp
icebp
inc
mov
subl
mov
mov
mov
pushf
dec
jo
out
das
cs
inc
sub
clc
xor
xor
sbb
nop
pop
xor
and
enter
lea
sbb
xor
and
pop
push
orl
popf
adc
lods
inc
push
sub
nop
sub
pushf
inc
inc
shlb
aaa
ss
and
dec
xor
idivb
je
jae
mov
cmp
int3
jno
jp
push
cmp
in
stos
adc
pop
je
cwtl
xlat
sbb
xor
dec
xchg
sub
lock
sub
or
call
cmp
insb
shrb
mov
test
iret
xlat
adc
xchg
idivl
or
cmpsl
jge
shl
pop
mov
mov
push
gs
div
adc
pop
fnstenv
insb
cmp
and
daa
fisttpll
cmp
mov
inc
push
jmp
sub
shlb
add
sarb
push
adc
cmpsl
testl
and
mov
inc
lea
cmp
imul
es
jecxz
int3
jecxz,pt
xor
mov
xlat
dec
adc
add
cli
push
adc
inc
or
ret
pusha
pop
jb
loopne
insb
jb
or
xor
ds
or
nop
clc
jnp
add
mov
fisttps
mov
mov
sbb
mov
ljmp
leave
stc
cmpl
xor
mov
dec
xchg
gs
fistpll
xchg
mov
mov
mov
icebp
add
movsl
mov
jge
xlat
scas
lock
out
mov
push
negb
pusha
popf
or
popf
sbb
rolb
adc
cld
lods
xlat
rcr
xor
mov
in
dec
push
cmp
gs
or
inc
mov
mov
je
es
hlt
popa
pop
push
push
test
aam
or
dec
pusha
jb
add
add
dec
ds
sbb
push
orb
sbbb
iret
or
mov
movsb
and
mov
sub
jmp
push
testl
sahf
icebp
dec
xchg
xor
movsl
bound
daa
pop
mov
add
push
sbb
xchg
aaa
xlat
inc
test
fwait
cwtl
cmp
lcall
xor
divb
mov
add
cmp
mov
js
mov
adc
pop
or
xlat
push
pop
mov
pop
or
pop
jge
cmp
jg
xchg
add
ret
push
stos
push
in
pop
xchg
push
cmpsb
or
popa
cmp
pop
mov
mov
cmpsl
cmpsb
jae
mov
pop
call
sub
lret
mov
and
push
xor
ret
add
test
fnstcw
inc
loop
cmp
pop
adc
iret
xchg
inc
loope
push
mov
push
mov
mov
aas
xor
das
mov
and
divb
sbb
push
push
sub
out
jae
xchg
lea
mov
pop
jb
int
in
push
in
int
ds
push
sbb
enter
jb
or
and
mov
cld
and
push
xor
and
mov
das
pop
iret
or
and
sbb
and
mov
push
jne
and
inc
inc
and
jecxz
rorb
js
sub
dec
rcll
call
daa
sub
cmp
xchg
stos
sub
mov
sub
pusha
mov
jb
inc
xchg
and
mov
cmp
xchg
pop
adc
sbb
xor
jbe
mov
pop
nop
out
mov
pop
mov
in
notb
sbb
dec
inc
xchg
mov
pop
xor
mov
ss
mov
outsb
test
jne
dec
and
sub
mov
and
cs
mov
mov
sbb
outsb
imul
jge
mov
jns
push
push
or
pop
adc
or
mov
pusha
fiaddl
fadds
adc
and
nop
inc
add
add
movsb
sbb
adc
xor
bound
adcl
ljmp
add
insl
fwait
dec
add
subb
rorb
pop
xor
repz
test
adc
adc
sbb
add
pop
movsb
or
in
xchg
jp
and
jno
je
jnp
inc
aaa
and
out
cmp
bound
dec
in
sbb
xor
jnp
mov
imul
pop
push
shl
pop
pop
jno
scas
lock
add
or
sti
popa
bound
or
mov
movsb
out
and
pop
sub
push
add
ror
loop
inc
sbb
into
fdivl
pop
inc
adc
sbb
jmp
in
adc
xor
xor
cmp
insb
adc
xor
mov
lods
mov
fdivs
add
mov
sub
stos
shl
inc
sbb
sub
jle
loop
inc
pop
push
xor
jbe
push
dec
lret
dec
sub
icebp
test
adc
xor
dec
add
pop
test
aam
pop
ret
les
jmp
inc
inc
or
or
push
test
xchg
sbb
ss
faddp
adc
pop
sbb
divl
or
cmp
cmp
je
inc
xlat
adc
and
rol
sbb
mov
add
add
adc
out
int3
push
pop
loope
mov
mov
mov
andb
es
bound
mov
imul
xor
in
push
sub
rorb
cmp
daa
test
loop
popa
call
sub
popa
dec
lods
imul
imulb
aas
jnp
cmp
mov
fs
fidivrs
or
xchg
or
add
shrb
add
aad
lods
mov
je
push
fisubs
call
shll
inc
mov
or
out
jbe
mov
xchg
pop
orl
scas
mul
lret
push
notl
push
pushl
and
ja
cmpb
push
ds
dec
fdivs
push
sbbb
repnz
inc
sbb
pop
aaa
jno
pop
push
nop
and
repnz
movsl
les
aaa
jo
and
xchg
fs
es
pop
jecxz
mov
inc
and
test
pusha
xlat
inc
incl
punpckhdq
loopne
shlb
iret
mov
cmpl
repnz
dec
mov
jne
xor
aaa
cltd
fcmovb
aaa
add
aaa
loop
push
in
inc
push
push
xchg
dec
lret
push
andl
es
push
pop
movl
xchg
and
mov
mov
mov
lods
jge
jo
pop
lea
lods
imul
adc
cmp
inc
fidivs
movsb
mov
rcrb
test
inc
pop
push
je
rclb
jecxz
push
pop
xchg
mov
dec
cmc
test
adc
jge
mov
dec
js
jns
mov
ret
icebp
jae
jle
pop
xchg
sbb
adc
jo
mov
lea
into
mov
cltd
and
bound
pop
cwtl
js
add
mov
cwtl
sbb
pop
in
xchg
popa
cli
and
mov
dec
pop
inc
in
insb
dec
xlat
cwtl
adc
mov
jo
push
inc
dec
push
inc
jmp
mov
imul
dec
insb
notb
add
xor
adc
sbb
mov
inc
jle
fistl
orl
movl
pop
cmp
test
fs
sbb
jno
es
mov
inc
jb
push
add
and
stos
mov
idiv
pop
pop
and
inc
out
mov
mov
cmp
xchg
mov
jno
and
mov
mov
jb
or
sbb
insb
mov
aam
xor
pop
xor
push
mov
or
xchg
xor
cmp
jmp
aam
cmp
jae
aas
and
lds
iret
stos
imul
lods
push
add
push
daa
add
sahf
add
ss
fs
or
test
inc
and
in
pop
mov
add
in
inc
es
fdivr
jg
adc
cmp
jle
cld
jae
inc
add
outsb
mov
inc
outsb
loope
ficomps
ss
add
stos
loopne
ret
cmp
cmp
pop
cltd
insl
ficomps
push
js
push
or
cmpb
loope
loope
loopne
and
cltd
out
dec
add
outsl
add
xchg
les
cltd
add
add
lock
adc
fsubrl
pmaddwd
sub
daa
stc
or
and
repnz
xchg
cmovo
cwtl
jne
xchg
sub
add
loopne
push
rcll
pop
push
int3
ja
xor
push
mov
ret
pusha
xchg
sbb
cmp
sbb
mov
and
cmp
mov
adc
jb
add
lea
out
orb
add
fs
movsl
push
int3
test
inc
lods
push
and
jp
pop
lds
pop
sbb
mov
mov
dec
cmp
mov
or
add
pusha
pop
or
sbb
shll
test
and
sti
repnz
add
push
ss
inc
stos
push
sbb
push
pop
xor
add
push
add
sub
jge
andl
push
add
mov
xchg
dec
iret
inc
mov
add
cmp
xor
adc
jns
dec
dec
jmp
jl
fisttpl
inc
in
sbb
inc
addl
add
add
push
sbb
pop
inc
mov
jbe
pop
or
lock
jne
push
pop
dec
sbb
xchg
add
adc
adc
pop
inc
movl
sub
xchg
push
ja
movsb
adc
sti
cwtl
mov
out
xor
loopne
cmp
lods
pop
adc
adc
push
adc
xchg
mov
inc
lea
inc
pop
dec
adc
mov
push
or
xor
and
popf
adc
pop
inc
scas
or
testl
push
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
adc
push
cmp
inc
nop
clc
cwtl
sbb
mov
xchg
inc
negb
out
popf
mov
sti
inc
jnp
hlt
mov
sub
scas
das
nop
pop
adc
and
push
push
in
cmp
jae
pop
push
test
xor
sub
sbb
push
daa
mov
sbb
jle
xchg
sahf
incl
push
sbb
push
xor
lock
mov
leave
sbb
cmp
push
fdivr
adc
dec
cmp
inc
sbb
rcll
dec
cmp
adc
movsl
xor
add
adc
scas
sub
or
or
or
pop
mov
add
pop
mov
sub
dec
movsb
cltd
fcoms
dec
sub
adc
push
sub
sub
jmp
or
sub
fwait
rorb
fchs
xor
cmpsb
and
adc
mov
loop
xor
mov
inc
bound
inc
aas
add
xor
inc
cmp
sarb
and
mov
cmp
fnsave
jmp
dec
adcl
out
std
xor
das
sbb
fistpll
aam
or
inc
mov
pop
loope
mov
push
in
push
mov
add
inc
or
cltd
pop
or
cmpsl
mov
cmp
and
fisubl
and
dec
repz
in
aam
mov
stos
xor
sbb
pop
imul
adcb
and
add
xor
sub
pop
ret
or
sbb
dec
add
xchg
lods
xor
lods
add
sbb
xchg
icebp
pusha
inc
rolb
repz
pop
adc
or
pop
rorl
or
cmpsb
or
add
fsts
add
sbb
push
adc
test
dec
je
pop
sbb
cwtl
cli
cmp
addl
inc
cmc
and
add
es
cmp
mov
orb
mov
xchg
inc
inc
push
mov
add
cmp
nop
out
jbe
sub
add
xchg
data16
add
xchg
pop
ds
push
and
add
jo
fwait
add
aas
or
jmp
pop
pop
pop
divb
je
enter
imul
mov
or
add
mov
movl
sbb
subl
mov
cmp
jle
push
nop
loopne
fstl
xorl
cmpsb
push
insb
push
sbb
aas
sbb
sub
fiadds
enter
mov
roll
jnp
arpl
fimull
mov
aas
or
push
sti
or
xchg
cmp
xlat
mov
cmp
je
push
insb
and
insb
jo
into
adc
jo
pop
xchg
pop
out
cmp
and
sub
orl
icebp
add
cmp
pop
mov
sub
dec
dec
fildl
dec
xor
xor
add
inc
xor
add
adc
xchg
xchg
inc
popa
adc
ds
xlat
push
stc
mov
sbb
repnz
sbb
lock
sub
sbb
add
in
sub
mov
dec
or
add
xor
cmpsb
enter
dec
rorb
enter
sbb
bnd
push
adc
xchg
cld
add
mov
mov
enter
add
add
dec
add
ror
or
mov
inc
xchg
push
lret
xchg
or
pusha
bound
jae
fisttps
push
lahf
inc
roll
pop
xor
push
lock
ljmp
or
sub
nop
push
call
or
popa
adc
test
rcrl
push
xchg
push
decl
mov
pusha
int3
add
mov
in
adc
push
std
mov
jge
pop
mov
out
cmpb
xchg
mov
sbb
jp
jno
mov
sub
mov
jo
out
inc
into
jle
cmp
or
pushl
push
dec
scas
loopne
cmp
inc
jno
subl
add
cwtl
push
popa
mov
adc
add
pop
push
shll
mov
jmp
xchg
cmpsl
imul
ret
sbb
cmp
adc
loope
cmpsl
bound
cli
or
cwtl
sbb
lds
inc
and
mov
mov
lahf
push
push
adc
loopne
sbb
or
lea
aam
fisubrl
mov
faddl
push
adc
decl
add
sub
mov
mov
orl
movsbl
insb
call
cmp
jne
jae
pop
loopne
je
or
je
adc
fwait
cmp
push
arpl
sub
adc
jmp
cmp
mov
hlt
push
inc
sbb
rolb
pop
dec
add
jl
cmp
adc
pop
mov
je
lret
pop
mov
pop
jns
orl
loope
push
imul
xor
xchg
test
lods
xchg
aas
lea
in
add
loop
sbb
inc
dec
iret
xchg
dec
cmovnp
repnz
fisubl
xor
adc
mov
inc
pop
roll
js
dec
cmp
sub
or
lret
movsl
mov
dec
shll
in
sub
push
sub
cmp
xchg
repz
sbb
mov
shl
push
xchg
sub
adc
inc
or
movsl
enter
add
hlt
and
add
subl
imulb
push
ja
sarb
sti
sub
imul
cmp
jmp
push
add
in
xlat
mov
movsl
loopne
ret
mov
lods
ljmp
or
inc
int
mov
iret
dec
iret
dec
pop
sbb
dec
ds
push
call
dec
je
push
jg
sbb
sbb
repz
insl
test
sbb
or
jmp
dec
and
lock
shl
mov
pushf
mov
in
sbb
xchg
push
inc
je
push
lahf
sbb
sub
add
mov
cmp
leave
pop
adc
adc
sub
sbb
hlt
xor
xor
and
adc
loope
push
lea
or
pop
or
push
div
test
mov
inc
mov
repz
cmpsb
test
sbb
xchg
push
clc
cmp
sub
iret
adc
push
mov
push
or
jae
shlb
test
in
movsl
cmp
test
pusha
leave
xor
mov
push
in
test
daa
dec
and
mov
das
insb
mov
dec
pop
mov
jle
or
mov
mov
add
movl
xchg
mov
gs
roll
arpl
mov
movsl
popf
es
or
mov
xchg
adcb
pusha
push
call
clc
add
mov
mov
call
adc
push
add
cmp
and
push
sub
adc
adc
and
cmpsl
out
xor
jne
or
negl
jp
movl
loopne
mov
sbb
js
inc
adc
jp
pusha
je
cmp
pop
andb
add
cmp
add
push
mov
sub
add
xchg
push
push
test
mov
sub
and
fisubrs
xchg
jge
add
sub
cld
adc
bound
movsl
add
add
pop
ss
or
push
mov
inc
jns
pusha
or
cmc
adc
test
orps
xor
adc
es
sub
sub
lods
loop
mov
sub
je
and
jg
lret
clc
push
add
push
push
push
push
leave
push
or
nop
pop
xor
mov
lcall
mov
xchg
icebp
adc
mov
std
pop
mov
nop
call
sub
dec
fs
jne
dec
ret
aas
mov
je
pusha
mov
xchg
pop
mov
sbb
cltd
xor
loop
dec
push
and
les
pusha
cmpsb
or
push
sub
or
mov
repnz
xchg
nop
cmp
pop
mov
movsb
mov
nop
cs
insl
inc
jmp
and
sub
fdivrs
xor
addr16
sub
test
pop
and
mov
cmp
movsl
sti
xor
imul
jbe
inc
fidivrl
mov
cwtl
lcall
adc
gs
lea
inc
add
sbb
fs
rcrb
ret
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
sbb
popf
enter
movsb
push
adc
sbb
add
sbb
push
push
push
add
cmp
add
sub
jl
and
cmp
cmp
stos
pop
pushl
add
push
es
and
or
movsb
mov
inc
lea
iret
add
sbb
dec
mov
stos
cmp
adc
xchg
imul
cmp
adc
adc
js
jo
pop
xor
outsl
xchg
inc
enter
js
ret
cmp
stos
das
sbb
pop
mov
add
test
sbb
pop
jo
inc
in
and
add
sarb
test
lret
mov
push
shll
sti
test
xchg
lret
cmp
or
or
stos
xchg
inc
jne
mov
jle
clc
jo
or
jnp
add
dec
fidivrl
push
xor
and
or
loopne
ljmp
lea
dec
adc
or
in
mov
xor
adcb
mov
mov
addl
push
out
jg
push
leave
cmp
cmc
movb
xchg
jo
xor
mov
inc
add
cmc
faddl
insb
fmull
icebp
dec
pop
ja
inc
movsb
inc
ja
or
pop
addl
xor
xchg
test
das
and
shr
les
lods
ds
into
in
std
test
and
cmp
test
inc
jmp
and
dec
movsb
je
add
in
push
int3
mov
inc
push
cmp
repnz
adc
sbb
and
push
fbstp
in
fidivs
add
dec
pop
clc
jmp
cmp
sub
inc
shlb
jmp
sbb
or
pop
int3
je
scas
dec
sbb
ficoms
pop
push
aad
pop
lcall
loope
xchg
push
stos
mov
dec
inc
cmp
je
push
mov
adc
sbb
dec
mov
ret
fs
cmp
xchg
xchg
cmp
dec
mov
add
cmp
je
sbb
xor
mov
adc
cmpsb
xchg
mov
ret
mov
fsubp
and
test
and
dec
cld
test
jge
push
loope
aas
jg
cmp
xchg
pusha
sub
push
mov
sbb
lret
test
pop
adc
inc
pop
mov
jg
adc
test
dec
add
in
cmp
mov
push
xchg
into
imul
nop
lea
adc
insb
push
shr
lea
flds
pop
cmp
fchs
jmp
test
pop
mov
mov
loopne
or
jo
lea
sbb
xor
xor
insb
lea
rolb
fs
mov
add
mov
jo
test
shlb
fs
out
mov
inc
sbb
rorl
adc
imul
jg
jle
add
cmpw
sbb
cmpb
mov
sbb
push
pop
add
fucomip
movsl
ss
push
pop
mov
add
sar
sub
jle
cmpsb
push
je
bound
out
mov
jns
adc
sub
cmp
es
add
sbb
xchg
xor
push
add
iret
inc
jb
sub
dec
dec
dec
push
shlb
dec
sub
jl
sub
jmp
fdivrp
testb
std
lcall
dec
movzwl
cmpl
push
adc
xchg
fimuls
pushf
rorl
cli
and
repz
jecxz
inc
and
testb
out
add
inc
andb
fisubl
daa
sahf
scas
mov
xchg
mov
jo
xor
out
add
ljmp
enter
add
rol
dec
cmp
shrb
sysret
push
mov
push
test
ss
push
bound
pop
enter
jne
jb
fs
push
cmovg
add
enter
pop
push
pop
push
dec
xor
aad
mov
jo
cmp
lock
jle
xor
daa
mov
in
pop
adc
sbb
push
add
lods
mov
adc
adc
jns
orb
pushf
push
mov
shlb
loope
jge
outsb
or
cmp
sbb
or
rolb
outsl
shlb
adc
xlat
gs
jo
sub
movsl
push
mov
or
adc
rolb
mov
adc
mov
ret
jbe
inc
pop
mov
xor
xor
lock
roll
les
or
ss
add
and
cmpsl
fwait
sbb
pop
mov
add
adc
dec
inc
iret
js
repnz
mov
cmpsb
adcl
scas
in
add
insl
dec
or
mov
sub
push
add
mov
jb
enter
pusha
sbb
shll
sbb
and
lret
out
push
adc
inc
push
out
and
sbb
test
jns
push
js
mov
dec
adc
and
pop
and
sbb
dec
jl
adc
psadbw
cmpl
pop
je
or
adc
jmp
and
shlb
and
mov
shl
fsub
inc
movsb
ljmp
sub
mov
imul
fstpt
push
mov
cs
ss
hlt
mov
inc
lea
mov
jecxz
loopne
mov
adc
addb
imul
xchg
cs
dec
add
and
shrb
and
push
les
add
push
and
mov
inc
icebp
xlat
aas
push
scas
mov
js
sub
push
mov
add
cli
and
jnp
dec
pusha
fnsave
jno
ja
nop
jle
sbb
icebp
in
and
push
rolb
sbb
inc
sub
add
mov
dec
lods
inc
xchg
insb
mov
xor
aad
and
and
adc
inc
sarl
cli
dec
mov
inc
fsubs
int3
sub
pop
sub
mov
addl
in
fcoml
in
fbstp
shrb
adc
clc
lods
push
mov
sub
jns
test
sub
dec
mov
enter
adc
fiadds
mov
mov
jae
sub
sub
shlb
shl
dec
in
push
inc
aaa
mov
cmp
xor
jmp
push
push
das
adc
ret
addl
or
and
pop
ljmp
test
mov
sti
pop
dec
test
xchg
mov
cli
incb
or
mov
or
pusha
adcl
pop
adc
or
xor
add
nop
xchg
xor
stc
scas
mov
add
dec
mov
daa
cmpsb
or
or
mov
jns
and
movsl
lahf
stos
pop
aaa
adc
inc
mov
xor
push
cmp
pop
scas
aam
add
mov
push
push
push
dec
sub
data16
pop
push
or
push
iret
xor
sbb
push
jnp
and
sub
mov
imul
mov
push
add
sub
inc
mov
dec
cmp
test
pop
scas
dec
repz
cld
lds
jne
push
call
sbb
sub
jne
js
stos
imulb
push
test
aaa
pop
cmp
inc
sub
pop
adc
inc
lret
xchg
mov
in
push
pop
fisubs
loope
and
sbb
lods
sub
hlt
lea
or
mov
call
pop
pop
or
pop
movsb
xor
adc
jae
mov
xchg
mov
sarl
xlat
jp
rcr
aaa
lret
in
pop
sub
cmp
int3
into
shrb
add
xor
and
and
enter
or
daa
call
and
mov
adc
mov
jl
push
stos
cmc
cmpl
movsl
inc
mov
add
sbb
mov
fadds
outsl
push
xchg
loopne
push
push
cmpsl
lock
mov
dec
or
mov
mov
mov
das
add
cmp
and
push
lahf
movsl
rcrb
cmp
add
ja
mov
push
or
add
cltd
bound
fxch
arpl
addl
icebp
push
sbb
adc
add
or
sbb
cmp
inc
jbe
jmp
and
psrad
lea
popa
inc
cmp
fsubs
jmp
and
lea
push
mov
jne
cmp
das
jae
outsb
or
xor
pop
fdivl
test
adc
pop
mov
lods
movsb
imul
or
xor
leave
loope
mov
rclb
mov
mov
mov
js
lods
push
mov
push
push
pop
repz
mov
cmpsb
adc
scas
imul
mov
popf
rcrb
in
jg
push
andb
xchg
xor
andb
push
adc
mov
cwtl
jmp
push
jg
lods
clc
repz
cmp
outsb
or
out
pop
push
push
aaa
add
rol
pop
push
sbb
pusha
dec
push
out
mov
pop
sub
push
subb
pushf
pop
and
idivl
outsb
std
pop
icebp
gs
or
xor
and
jmp
cmp
jne
mov
jb
or
lods
sbbl
ss
lods
push
leave
push
dec
jo
sbb
xor
cwtl
call
jno
adc
leave
push
inc
js
stos
mov
inc
adc
pop
push
in
incb
dec
and
inc
or
movsb
rcl
mov
jecxz
jmp
stc
and
inc
and
and
test
adc
sub
xlat
xchg
adc
test
pop
dec
sar
rcll
sub
cmp
and
rcrl
lea
adc
cld
jmp
dec
mov
inc
mov
psubusw
xchg
or
xor
je
fld
clc
pushf
inc
mov
jo
lods
roll
pop
loope
pop
xor
mov
mov
es
and
stos
test
adc
roll
add
out
dec
sub
shlb
push
mov
mov
ret
pop
dec
pop
arpl
test
or
or
mov
add
ja
fldcw
adc
inc
adc
fdivrl
adc
sbb
push
sbb
loop
in
mov
xchg
and
insl
inc
ljmp
or
and
ret
push
or
or
push
ret
mov
sub
aaa
pop
or
lds
push
add
mov
push
mov
push
add
mov
fiadds
dec
pop
mov
sbb
loop
scas
sub
lea
sub
outsb
xlat
mov
mov
and
or
jne
push
shrb
aad
xchg
and
and
or
pop
and
inc
mov
lea
stos
loopne
repz
jb
or
push
xor
mov
popa
xor
jbe
push
mov
js
leave
cmp
mov
add
xor
cmpb
pop
xor
or
push
dec
push
out
mov
test
push
or
mov
adc
fimull
add
sbb
dec
loopne
cmp
hlt
clc
or
mov
aam
popf
or
shlb
adc
test
push
outsl
sbb
sub
push
and
add
xor
js
inc
lea
outsb
in
mov
push
add
or
or
lret
pop
outsl
mov
in
ss
adc
nop
test
cmc
or
imul
pop
aam
rolb
sbb
cmpsl
xchg
xlat
mov
push
xor
test
adc
or
or
adc
inc
pop
loopne
andl
xor
nop
and
mov
fistl
out
adc
mov
mov
fildll
addr16
pop
jno
lods
push
add
loope
push
sbb
mov
andl
pop
mov
ds
jge
popf
push
sbb
cmpsl
add
inc
inc
jae
adc
jne
pop
sbbl
inc
movsl
push
mov
testb
or
imull
das
or
cmp
xor
xchg
aaa
cmpb
out
dec
sbb
pop
and
subl
pop
mov
movsb
fimuls
pop
pop
lea
int3
cmp
mov
cmpsl
repz
shrb
dec
and
rcrb
fmull
imul
invd
lcall
xor
sbb
add
mov
mov
and
sbb
push
fwait
mov
add
ss
shl
lock
ss
mov
xorl
pop
xchg
arpl
sub
add
sbb
pop
add
sub
jns
push
movsb
mov
sbb
subl
jp
inc
xlat
popf
cld
icebp
mov
push
sub
stos
in
and
call
pushf
orb
adc
in
dec
mov
ljmp
movsb
pop
push
jg
and
cmp
data16
xor
push
jbe
iret
daa
aas
rcrb
inc
or
jno
jecxz
jge
jmp
lock
lods
mov
flds
pop
add
pop
and
ljmp
mov
std
sbb
loop
loop
pop
add
mov
sbb
repnz
pop
pop
xchg
xor
sbb
test
shl
push
movsb
add
sub
xchg
add
jle
ficoms
add
lea
mov
lea
les
pop
scas
lea
push
inc
bound
or
adc
adc
or
add
movaps
jne
add
loop
or
mov
inc
push
mov
aad
arpl
mov
aaa
decl
fwait
xchg
sub
imul
mov
insb
cwtl
jecxz
loop
fcoml
jns
lea
dec
jb
and
jmp
pop
test
or
fbld
jno
push
pop
dec
push
out
loopne
adc
mov
mov
add
adc
sub
sbb
inc
cmp
inc
jge
pop
das
aaa
jb
and
pop
hlt
sub
jl
lds
and
jmp
aad
and
test
mov
push
or
jno
cmp
mov
cmp
nop
fsubrp
sub
inc
pop
mov
jno
inc
fcoms
lods
jbe
fs
mov
cmc
outsb
xor
push
xlat
or
jnp
xor
imul
pop
lock
adc
shlb
dec
and
add
pusha
push
loope
movzwl
add
push
sub
pop
pop
sbb
mov
mov
rolb
aad
pop
int
push
push
inc
sbb
inc
nop
in
mov
or
pushl
rcrb
out
mov
xchg
push
pop
add
dec
mov
xchg
daa
jne
bound
sub
clc
enter
aaa
adc
fisttpl
sub
std
cltd
rolb
insl
push
mov
mov
xor
push
into
addr16
out
dec
insl
add
or
add
ficompl
mov
mov
jg
aas
sbb
push
scas
xchg
sub
xchg
movsl
imul
rorl
out
xor
imul
xchg
cmp
in
xor
mov
call
adc
add
repnz
cmpsb
lods
and
mov
mov
ds
cs
movsl
push
mov
inc
clc
and
dec
or
push
movsl
xor
pusha
push
es
or
insl
xchg
inc
fidivs
and
jmp
add
adc
movsl
les
outsb
inc
clc
push
insl
xlat
adc
cmpsl
push
mov
sbb
jbe
pop
cmc
xor
sbbl
mov
mov
popa
and
ret
and
stos
dec
cs
pop
mov
pushf
pop
add
dec
xchg
pop
jno
sbb
or
jo
cmp
adc
lea
lcall
pop
xorb
xchg
mov
adc
jae
inc
xor
outsl
pop
test
sub
das
xchg
scas
adc
sbb
inc
ljmp
push
adc
jmp
dec
loop
sbb
loop
cmc
xchg
dec
add
pop
push
mov
popa
jo
pop
and
scas
addr16
push
jno
add
rclb
adc
dec
cli
adc
andb
mov
es
outsb
xlat
jge
mov
scas
jns
das
add
inc
icebp
push
xchg
or
sub
rol
sbb
mov
fimuls
inc
sub
xchg
and
cltd
clc
into
xor
gs
filds
cmp
aad
jo
dec
cmp
nop
sub
xor
and
dec
mov
aaa
jp
xorb
out
jb
and
sub
adc
sbb
xor
jmp
push
aaa
sbb
dec
mov
dec
inc
add
lock
mov
pop
push
dec
sbb
rorb
push
outsl
or
add
inc
push
sbb
aam
ja
xadd
sti
clc
shl
push
ret
jmp
rclb
in
fmull
movsl
adc
pop
jne
push
ret
and
addb
or
xchg
push
and
pop
adc
xchg
icebp
or
inc
sbb
mov
mov
test
mov
pop
push
or
dec
loope
push
rclb
jmp
lock
add
rcll
mov
jge
nop
adc
and
mov
xor
dec
fldl
cwtl
inc
jbe
push
dec
fisttps
loope
ja
lds
dec
in
nop
imul
or
rolb
fldcw
lods
ret
push
and
jne
stos
push
push
aas
jmp
movsb
imul
dec
and
inc
add
sbb
add
outsb
arpl
mov
cmp
or
adc
push
test
and
roll
les
xchg
insb
push
mov
add
ret
xchg
add
test
dec
adc
stc
fiadds
sub
js
mov
test
lock
mov
add
push
pop
jo
inc
cmp
inc
add
push
mov
dec
jmp
movl
icebp
mov
scas
mov
add
ss
xor
or
ljmp
leave
out
pop
imul
mov
aam
loope
mov
out
shll
loope
je
sbb
adc
mov
jg
cmp
push
xorl
adc
mov
mov
add
pusha
lea
adc
adc
push
push
jl
or
fucomi
sbb
sub
sbb
pusha
sbb
lahf
and
mov
sub
inc
jmp
shrl
fadds
jl
adcb
xor
inc
cmp
mov
sub
fsubl
xor
or
leave
fisttpll
mov
cvttps2pi
mov
shl
outsb
lods
and
xor
mov
and
and
mov
inc
ret
popf
rolb
xchg
mov
add
or
or
pop
movsl
push
out
cmp
aas
int3
sub
into
push
mov
out
shrl
push
rolb
fs
pushf
xchg
subb
xor
loopne
push
stc
lahf
or
push
and
jle
loop
add
jne
das
fdivrs
sub
insl
adc
mov
add
jg
push
insb
mov
cmp
mov
rol
pop
dec
mov
xor
mov
sbb
shl
jne
mov
int
mov
cmp
je
enter
push
pop
sahf
test
ret
or
ret
inc
add
add
add
and
or
pop
testl
pop
or
or
xchg
or
pop
or
pop
mov
add
adc
jl
loope
push
push
mov
mov
pop
pop
sub
push
push
roll
popa
sbb
out
fstps
jp
jp
sbbb
fiaddl
xchg
test
imul
and
mov
cltd
lcall
cs
mov
iret
shlb
orb
daa
push
std
out
adc
or
test
and
or
ja
lcall
adc
dec
xor
sbb
test
add
jl
cltd
mov
adc
push
cmp
jno
fsts
dec
sahf
mov
adc
xor
push
inc
mov
ret
sub
mov
and
aas
mov
iret
push
sub
lea
push
or
cmp
mov
mov
inc
adc
adc
popw
jo
and
cs
mov
les
dec
add
mov
and
shl
add
adc
popa
and
push
xor
mov
push
jno
cmp
adc
push
dec
dec
cmpsb
dec
fcoml
test
add
pop
xchg
or
push
subl
and
popf
push
stos
inc
and
shlb
xor
fnstsw
lret
and
rep
repz
dec
sub
pop
adc
pop
lods
pop
fstpl
adcb
mov
sbb
imul
jo
test
cmp
or
mov
add
xchg
mov
pop
xor
push
xor
js
arpl
mov
in
add
sahf
pop
les
xlat
mov
sub
es
call
mov
in
adc
sbb
rcll
xchg
or
inc
test
jnp
fwait
lea
pop
imul
push
lcall
and
sbbb
mov
adc
lcall
inc
pop
mov
test
int3
cmpsl
adc
jecxz
bound
ja
inc
movl
push
aas
popa
pop
or
inc
adc
fldz
and
pop
imul
sbb
es
and
sub
fstpl
push
or
inc
pop
movsb
ss
enter
push
xchg
inc
fidivl
mov
testb
lea
push
insb
push
adc
adc
pusha
mov
pop
lcall
inc
sub
adc
pop
cld
push
or
push
shlb
add
scas
in
das
sbb
fmuls
push
xor
mov
mov
int3
dec
data16
lea
fsubs
pop
mov
mov
cmpsb
mov
xor
adc
pop
mov
or
int3
sbb
stc
or
adc
add
jg
faddl
jg
fdivl
je
push
cmpsl
sub
lcall
cli
jg
mov
push
cmp
push
cmp
jle
cmp
jp
push
cmp
fisttps
push
inc
add
add
inc
jmp
and
movw
inc
xchg
adc
pop
sbb
cld
les
inc
or
fs
pop
idiv
lock
inc
mov
adc
cmp
mov
or
mov
add
or
jnp
inc
lock
das
addb
add
fstps
add
jbe
mov
lds
outsl
xor
ret
dec
mov
data16
and
pop
aas
xchg
addl
inc
xor
dec
cli
fnop
shll
movsb
jmp
mov
sbb
sahf
and
leave
dec
in
pop
adc
and
cmp
dec
test
movsl
push
xor
and
int
cmp
push
cmp
mov
addr16
pop
xor
test
inc
cmpsl
add
stos
and
into
inc
shrl
in
insl
iret
cmp
inc
lock
pop
push
loope
nop
inc
adc
pop
sub
aaa
pop
pop
pop
in
xchg
xchg
les
addb
subl
sub
or
orb
mov
movsb
push
add
adcb
adc
in
scas
push
push
ror
dec
and
push
mov
adc
popf
je
pop
pop
lock
out
jl
outsl
mov
jno
pop
adc
dec
pushf
jno
adc
add
push
data16
xorb
or
cmpsl
mov
mov
movsb
xor
stos
xchg
and
sub
shll
or
mov
imul
adcb
sub
jmp
enter
xor
lods
mov
popa
mov
mov
lods
add
movnti
loopne
jne
mov
shll
dec
sbb
and
leave
enter
sbb
adc
pop
and
sbb
pop
insl
dec
popa
mov
xor
and
cmpsb
add
test
push
inc
fwait
mov
inc
sbb
stc
add
test
lods
sbb
sub
or
jnp
sub
sub
lods
fstl
adcl
ljmp
test
sub
adc
sub
mov
into
cmc
push
shlb
arpl
stos
test
pop
or
repz
or
mov
and
pop
enter
inc
inc
add
pop
add
adc
jmp
and
in
mov
jo
or
adc
mov
nop
fstps
aas
pop
add
xor
hlt
inc
add
adc
lea
in
xchg
sbb
ret
lock
sub
inc
xchg
push
sub
daa
add
in
push
jecxz
fwait
push
and
push
jge
lret
xor
pop
mov
dec
adc
push
fcompl
loope
push
bound
sbb
xchg
cmp
mov
mov
subl
sbb
push
mov
mov
cli
pushl
inc
adcl
push
add
icebp
or
adc
add
loop
orb
sbb
inc
sbb
pop
aas
pusha
popf
xor
push
sbb
cmpsb
insb
push
cltd
pusha
xchg
add
pop
xor
jecxz
dec
add
pusha
rorl
inc
inc
cmpsb
in
inc
push
cmp
jp
movsl
orl
inc
xchg
add
lods
pusha
mov
inc
add
fadd
push
pop
aaa
lock
jp
add
fistl
xchg
pop
or
lds
enter
icebp
mov
mov
add
pminsw
dec
adc
push
fcompl
jo
mov
or
jp
sbb
push
xorb
cli
push
rcrb
xor
ret
int3
inc
std
imul
push
xchg
or
sbb
jbe
jb
mov
and
std
jb
test
push
and
sbb
flds
adc
imul
imul
inc
rclb
pop
les
in
inc
outsb
shlb
addr16
testb
pop
jbe
jne
stc
push
ljmp
mov
xchg
mov
sbb
pop
mov
fsts
fcoml
hlt
pop
fisttpl
add
inc
leave
xchg
add
xchg
shll
mov
sbb
rcll
xor
add
scas
dec
add
push
mov
ret
dec
mov
sub
jnp
popf
lcall
lods
addb
adc
lods
popa
push
push
sbb
and
pop
pop
bound
cmp
mov
rcl
pop
xchg
add
rclb
add
jno
mov
call
pusha
xchg
inc
or
and
jo
ret
lahf
frstor
jle
xor
push
add
ret
sbb
adc
and
dec
jl
and
cmp
push
pop
hlt
cmp
jle
outsb
pop
popa
jae
pop
sbb
pop
add
std
ja
dec
cmp
push
mov
xor
in
orb
or
out
mov
popf
add
push
sub
mov
mov
xor
inc
call
idivb
loopne
les
nopl
add
adc
push
fldl
push
sbb
icebp
neg
loope
fimuls
fstpl
and
ja
es
into
fstpl
pop
jns
lods
lods
mov
lods
mov
pop
or
jge
mov
xor
pop
fsub
pop
fsubrp
dec
push
pop
js
xchg
outsb
or
push
push
dec
addr16
push
pop
xchg
sbb
andl
fdiv
mov
nop
mov
mov
inc
jl
push
or
std
scas
sub
and
call
addb
adc
or
add
je
mov
pusha
dec
xchg
jns
stc
jge
or
add
leave
push
mov
out
fidivs
out
shlb
and
sti
pop
xor
inc
insl
push
jo
mov
dec
fs
sub
or
mov
enter
inc
xor
ja
push
mov
jno
sarb
pop
call
and
iret
mov
mov
pop
push
inc
shlb
push
ret
setbe
add
push
dec
xor
or
mov
arpl
lods
or
andl
scas
push
cli
cmp
pop
cmp
jb
stos
xor
shld
add
inc
ja
call
icebp
push
cs
ja
lea
push
push
and
push
rorl
sub
push
je
clc
or
add
push
leave
adc
mov
and
add
mov
sbb
cmp
rorb
adc
insb
test
push
inc
add
pop
pop
cmpsl
push
push
mov
leave
pop
add
sub
nop
ffreep
shlb
gs
lahf
cmpsl
roll
insb
dec
push
mov
mov
shlb
add
xchg
push
leave
push
and
sarl
imul
adc
mov
mov
jge
stos
xor
add
or
xorb
jb
test
bound
dec
inc
cmpw
jne
cmp
and
cmp
imul
inc
push
jl
mov
fdiv
mov
add
sti
jg
stc
std
mov
or
mov
iret
add
leave
out
data16
push
push
push
push
push
jl
push
dec
inc
aad
sub
pop
adc
add
xchg
add
imul
lret
add
push
ds
push
outsb
sbb
or
sbb
adc
fadd
jecxz
sub
popa
in
or
arpl
jnp
mov
outsl
push
test
xchg
add
inc
inc
dec
pusha
pop
mov
dec
lea
or
adc
or
sub
mov
mov
imul
push
sarw
mov
sub
mov
pop
mov
adc
ss
jp
shrl
mov
mov
and
std
ja
inc
xchg
jmp
fdivrs
nop
in
xor
mov
cltd
cmp
push
lock
push
adc
rclb
xchg
add
arpl
add
fwait
insl
and
addl
pushf
xor
aam
gs
les
push
sub
dec
xchg
and
or
pop
vandps
pop
xlat
cmpl
sbb
add
bound
push
test
inc
push
sbb
push
xchg
sti
pop
pushf
movsl
movsb
mov
adc
xor
dec
and
ret
pop
add
int
xchg
xlat
je
mov
shlb
movl
jne
cmp
and
lods
movsl
out
rorl
xor
add
sub
aaa
pop
jb
int3
cmc
jbe
test
push
mov
ret
loope
shlb
sbb
add
sti
pop
sbb
or
add
pop
fidivrs
outsl
orl
jbe
and
add
ljmp
inc
jge
les
or
mov
ret
cmp
insb
xorb
or
sbb
add
push
cltd
fisubrl
inc
in
lcall
push
inc
cs
push
xor
and
outsb
push
push
cmp
sbb
jnp
dec
adc
pop
push
pop
test
or
je
adc
add
out
loopne
mov
and
call
jnp
dec
add
mov
stos
adc
fdivrs
in
adc
ret
mov
sbb
cmp
or
insb
rclb
mov
mov
push
jno
jge
insb
mov
and
and
verw
rclb
inc
adc
inc
jecxz
fs
push
dec
sti
mov
mov
dec
je
add
sbb
ret
aam
push
dec
jne
lret
sub
and
or
push
or
add
inc
cmp
rclb
push
push
lods
out
sub
pop
push
scas
fdivr
les
or
push
shlb
ja
test
mov
sub
xchg
and
add
test
test
in
cmp
push
addr16
mov
hlt
push
cmpsl
push
fs
pop
sub
cmp
nop
inc
xchg
mov
invd
pop
xor
enter
cwtl
int3
fsubl
int
and
push
pop
ds
cld
push
and
dec
and
les
jb
fdiv
adc
cmp
nop
cmp
cmp
nop
inc
mov
and
sbb
xor
enter
jo
mov
mov
push
cmp
andb
push
and
mov
daa
gs
xor
out
push
cmp
pop
arpl
jns
out
ja
mov
lahf
test
cmp
repz
add
repz
repz
iret
repz
pop
imul
repz
movsl
scas
mov
repz
jmp
adc
inc
adc
lret
insb
stos
push
or
fstl
xor
add
inc
aam
test
pop
rcl
mov
add
add
adc
adc
mov
push
mov
sarl
int
rol
popa
jno
rorb
xorl
loopne
mov
add
es
mov
jo
pusha
lods
inc
cmpsl
pop
or
mov
adc
mov
push
sti
cmp
daa
add
out
fcompl
nop
loope
cs
push
nop
sbb
test
pop
mov
mov
xchg
mov
pop
faddl
jo
mov
or
sbb
inc
jb
int3
loope
sbb
dec
mov
xchg
pop
xchg
mov
dec
pop
loope
pop
adc
or
clc
add
pop
sbb
jle
sti
push
les
inc
ja
rorb
xor
lea
cld
pop
sbb
ficomps
cmp
push
scas
lock
movsb
sub
add
insl
add
xchg
ljmp
inc
and
mov
es
jl
or
or
and
stos
insl
xchg
test
push
popf
lea
push
gs
xor
clc
xchg
jb
call
enter
mov
lret
inc
pop
pop
mov
or
enter
pusha
adc
cwtl
pop
and
adc
shlb
xchg
or
scas
xchg
out
and
js
xor
jmp
push
pop
mov
sti
add
sbb
adc
aaa
out
inc
push
nop
add
test
pop
sub
fwait
xor
pop
xor
mov
xor
or
pusha
ret
inc
or
popf
jae
rcll
subl
loopne
movb
movhps
popa
xlat
inc
push
enter
das
adc
les
cmpl
cmpl
cli
or
lds
pop
movsb
loop
test
jmp
ss
xchg
divl
sub
int3
cmc
inc
outsb
js
cmp
add
mov
sub
inc
xchg
pushf
divl
sarb
je
icebp
push
jge
movsb
ja
push
mov
xor
lods
and
in
push
mov
rcr
call
pop
mov
dec
fisubrl
push
and
lods
push
das
mov
xchg
fsubrs
dec
adc
xor
dec
xor
mov
lret
dec
xor
repnz
xor
mov
mov
xor
in
scas
jecxz
and
mov
lcall
lcall
jo
dec
lcall
dec
lcall
push
mov
stos
imul
pop
fwait
sub
add
ss
mov
stos
js
popf
mov
repnz
jl
add
lds
jl
adc
mov
lret
jl
and
nop
insl
xlat
jg
pop
mov
inc
les
mov
popa
outsb
and
pop
jmp
mov
inc
or
pop
sbb
stos
push
cmp
dec
adcb
add
lahf
pop
inc
mov
loopne
mov
imul
ja
imul
gs
add
int3
xchg
inc
scas
add
int3
nop
and
fs
xchg
mov
xor
cmp
xchg
and
loopne
adc
or
sbb
sub
add
and
test
es
inc
mov
js
xchg
inc
imul
or
jg
es
inc
adcl
pop
fisttps
xor
gs
push
mov
cmp
sbb
fstps
inc
cli
xchg
cmp
or
pop
cwtl
xchg
addl
jb
das
adc
ss
adc
rorl
inc
xchg
mov
pop
cmp
int3
mov
xlat
push
cmp
stc
cmp
in
dec
pop
movsb
push
scas
out
or
push
sbb
inc
push
and
pop
and
es
and
in
aaa
xchg
loope
mov
nop
mov
dec
inc
push
adc
daa
cmp
in
push
inc
lcall
inc
mov
inc
push
sbb
ret
sub
ret
outsl
into
mov
xor
movsb
sbb
jle
pop
scas
inc
outsl
jnp
and
imul
pusha
dec
add
arpl
mov
lods
and
adc
lock
rclb
nop
mov
pop
adc
or
sbb
sub
dec
mov
and
into
and
fsubs
or
scas
adc
mov
adc
mov
rorb
aam
and
scas
inc
and
xchg
rclb
pop
je
mov
out
aas
sbb
pop
push
mov
call
leave
ds
sbb
dec
and
lods
mov
adc
aas
pushf
add
addb
popf
adc
mov
punpcklwd
es
andl
push
pop
arpl
inc
xor
jecxz
push
insb
rclb
ret
loopne
sbb
insl
mov
pop
xchg
fimull
mov
lods
test
insl
movsl
lea
push
enter
mov
imul
repnz
iret
ret
fistl
int
js
push
pop
fiaddl
cltd
adc
in
fiaddl
rcrl
mov
in
push
cmp
mov
fmull
and
pop
and
adc
pop
mov
jno
jl
sti
xchg
push
fsubp
mov
add
ds
repz
fsubs
lock
int
shll
es
adc
enter
int3
jb
in
xor
push
push
pop
xchg
push
adc
fcoms
je
daa
add
push
sbb
nop
stos
and
sbb
es
push
imul
sbb
inc
lcall
sub
mov
js
mov
addb
clc
jno
test
leave
or
nop
out
inc
fildll
daa
nop
shlb
negl
test
push
aam
sbb
push
int
xchg
mov
daa
xlat
shr
inc
cmpsb
mov
adc
cwtl
ret
dec
adc
sub
push
fs
cwtl
sbb
xor
nop
fisttps
sbb
dec
xchg
and
adc
dec
dec
jo
push
xor
push
pop
cltd
in
andl
adc
roll
out
fcomp
addb
test
dec
aas
or
jno
test
pop
xor
add
cs
sahf
push
jmp
adc
pusha
rolb
add
lock
mov
enter
pop
cli
call
movsl
push
js
repz
iret
or
inc
push
cltd
add
je
sbb
faddl
ljmp
push
jb
imul
int3
push
repz
xchg
call
or
xor
add
jbe
sbb
sti
dec
dec
xchg
pop
fsubrs
arpl
push
inc
push
sub
or
rorl
or
push
jbe
rolb
pop
adc
mov
mov
or
outsb
adc
loopne
and
mov
mov
sub
stos
push
or
bound
jno
in
lea
pushl
adcl
movsl
inc
stos
cs
sar
mov
ljmp
mov
pop
pop
scas
outsl
jb
dec
mov
scas
mov
sbb
cmpsb
loopne
mov
rcrl
fwait
in
mov
imul
fisubrl
rolb
jmp
nop
dec
arpl
push
inc
arpl
push
mov
pop
push
add
and
sbb
xor
pop
push
mov
jo
xchg
and
sub
mov
xor
negl
and
dec
xchg
lods
mov
orl
lods
push
movsl
add
pop
sub
mov
inc
aad
mov
enter
mov
orl
add
add
pop
push
add
mov
add
cs
repnz
outsl
push
cmp
sub
or
sub
sub
sbbl
add
daa
mov
jbe
loopne
push
push
mov
and
test
or
sbb
jno
ret
and
stos
add
xchg
nop
add
nop
push
sbb
cmp
sbb
add
nop
add
pop
add
shrb
adcb
and
xchg
adc
and
adc
sub
dec
jne
push
orl
push
loopne,pn
aas
nop
pop
mov
mov
sub
cmp
fldcw
movsl
fs
and
in
aam
cmp
and
lret
sbbb
push
adc
mov
jmp
add
roll
sub
inc
dec
jl
mov
push
movsb
cmpsl
xorb
dec
clc
cmp
enter
mov
lea
sti
xchg
pop
cmpsl
inc
push
ret
adc
mov
ret
cmp
inc
mov
and
test
xor
sbb
popf
xchg
pusha
cmp
push
mov
pop
ljmp
mov
xchg
sub
and
sarb
test
cmp
test
sbb
sub
testl
push
por
and
aam
dec
cmp
dec
sbb
into
sub
icebp
pop
jl
jns
mov
flds
mov
and
mov
cmp
xor
jl
pop
ljmp
test
cmp
cmp
sub
push
negb
mov
inc
je
push
push
and
or
sbb
dec
inc
pushf
push
lret
cmovp
sub
jb
mov
in
inc
icebp
jg
lahf
pop
xor
lock
push
addl
jb
adc
lods
mov
xor
inc
xchg
mov
hlt
xor
cmp
add
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
xchg
add
jl,pt
mov
inc
lods
ret
mov
subl
or
test
or
inc
hlt
cmpsb
div
adc
enter
jae
inc
add
nop
cmp
ljmp
iret
je
mov
dec
shll
mov
scas
push
hlt
shrl
dec
clc
stc
jns
push
inc
sub
xor
xchg
pop
mov
pop
popa
inc
lods
adc
loop
shrl
flds
mov
dec
jg
adc
sbb
cmpsb
inc
fdivrs
sarl
pushf
cmp
or
push
jg
add
insb
mov
adc
call
jae
adc
dec
pop
push
add
jp
adc
mov
sub
js
shll
int3
loopne
or
ret
dec
adc
add
pushl
push
jb
xchg
adc
jno
or
push
fsub
sbb
adc
or
mov
push
aad
cmc
xor
jb
jg
add
add
jmp
xor
dec
pusha
fsubrl
add
aaa
mov
ds
jl
or
ud0
cmp
add
and
mov
movb
movsbl
shr
mov
push
ret
cld
mov
and
mov
dec
shrl
inc
mov
leave
jne
pop
or
loope
cld
movsl
nop
enter
rclb
pcmpgtd
adc
sub
mov
dec
mov
sbb
or
pop
dec
mov
mov
inc
add
push
lds
push
shrb
dec
iret
adc
push
mov
add
test
sub
sti
pop
enter
ja
je
mov
rolb
sub
inc
lock
or
sub
or
cmpb
je
dec
and
sbb
push
push
insb
xchg
and
test
or
into
scas
sub
mov
pusha
pop
or
aas
mov
jge
dec
fcoml
dec
std
jo
cmp
ja
push
add
mov
in
mov
ja
pop
mov
fdivrs
enter
js
fidivrs
push
leave
and
push
xchg
pop
fadd
or
jbe
mov
and
ret
jns
or
testl
fyl2x
mov
inc
push
shll
dec
xchg
sub
dec
inc
xchg
cwtl
cmp
lea
xor
shlb
mov
es
sbb
fsts
mov
mov
insb
rcrb
mov
push
cmp
pop
andl
add
mov
cmp
adc
or
inc
lods
ja
push
lods
adc
shrb
xor
clc
and
sbb
iret
or
add
pop
js
xor
insl
mov
pop
movsl
xchg
or
xorb
jne
add
push
sbb
add
or
mov
jle
mov
dec
dec
dec
ret
mov
clc
mov
popa
xchg
gs
sbb
scas
fistps
daa
into
mov
or
jle
call
dec
arpl
push
mov
adc
ja
out
rolb
xor
push
adc
mov
das
cmp
or
cmp
dec
in
and
adc
sahf
fdivp
push
inc
sbb
rorb
dec
push
fadd
sbb
jne
call
outsb
movsl
jnp
push
test
and
rcrl
aam
lea
add
pop
nop
and
in
ret
xchg
test
dec
repnz
and
je
xor
sub
and
out
or
cmp
push
or
cmp
sbb
insl
adc
sbb
rorl
and
jmp
jb
push
add
repz
jb
js
test
lods
mov
mov
dec
loope
clc
cmpsl
je
stos
mov
aam
xor
mov
shll
cmp
and
inc
pop
insb
mov
push
sub
inc
and
jo
xor
enter
jmp
pop
je
push
les
xor
ljmp
je
sub
cmpsb
js
jmp
in
cwtl
fadds
cmp
jmp
add
fs
add
sub
mov
adc
loop
test
shr
jecxz
lea
sbb
sbb
inc
movsb
xchg
cmp
scas
lods
test
in
lret
popa
test
repz
xchg
or
dec
hlt
sbb
testb
push
xor
jne
je
inc
dec
call
sarb
xor
test
js
cmp
hlt
add
mov
lret
sub
les
and
inc
cmp
fcoms
fidivl
or
les
popf
cmp
pushf
adcl
cmpsb
negb
sub
xchg
and
int3
push
enter
xor
mov
xor
xor
rcrb
test
insl
in
sub
lea
sub
dec
mov
sub
imul
pop
fsubs
mov
xor
cmp
shll
mov
xlat
and
popf
sbbb
pop
dec
xchg
jmp
rolb
mov
insb
shlb
pop
cmpsl
ffree
push
sbb
mov
xor
lods
bnd
ror
aad
or
lret
clc
inc
das
je
aad
xchg
mov
sti
lea
or
or
mov
inc
enter
sahf
fsubrl
hlt
aas
cs
in
mov
cmp
sti
jne
es
sub
cmp
sti
xchg
shr
mov
sbb
or
pop
lods
or
int
fcmovnbe
xor
add
or
cmp
sub
pop
adc
and
pusha
sbb
lds
jle
sbb
dec
sbb
or
insl
rorb
out
inc
and
and
inc
and
adc
or
cli
sti
test
in
push
cmp
ret
ja
mov
jbe
cmp
adc
mov
add
push
imul
or
mov
cmp
push
loop
test
cmp
mov
adc
push
call
add
mov
add
xchg
movsl
inc
dec
loope
ret
ret
inc
loopne
addl
stos
adc
sbb
add
subb
and
mov
inc
cmp
cmp
adc
jne
daa
aas
iret
iret
mov
or
jne
or
jne
and
cmp
clc
push
mov
ljmp
mov
mov
lods
sbb
add
or
sbb
add
inc
dec
inc
or
inc
dec
rdtsc
test
rorb
les
inc
xor
fstl
mov
mov
lea
repnz
lea
les
jno
sti
lea
ds
sub
je
mov
xchg
daa
or
inc
push
pop
aam
ret
jnp
sbb
xchg
sbb
sub
sub
dec
push
shrb
and
shlb
cmp
mov
mov
or
cmp
das
lea
add
push
jae
pusha
movsb
mov
fdivs
imul
ds
or
lret
into
jne
fstl
dec
sub
jnp
jmp
fcom
loopne
shrb
int
jb
adc
mov
xchg
push
jl
mov
cli
sti
xor
push
sbb
pop
rorb
cmp
inc
loopne
or
dec
ss
stos
push
xchg
rol
shrl
pop
aas
add
call
xorl
mov
mov
xchg
fwait
sets
xchg
mov
xchg
data16
mov
enter
fs
xor
jne
ror
ret
in
lods
and
enter
data16
pushl
mull
mov
mov
push
inc
pop
jle
push
mov
inc
sbb
jo
xorb
jg
push
add
cwtl
pop
data16
sbb
mov
jbe
add
mov
fmuls
rorb
notl
push
mov
inc
subl
adc
sub
xor
xchg
xchg
mov
mov
adc
jo
add
dec
and
ret
popf
stc
addr16
xor
push
and
push
jmp
push
or
mov
pop
xor
mov
push
mov
rcr
cltd
imul
mov
scas
adc
pop
push
jmp
rcr
sub
push
and
or
das
mov
adc
mov
sbb
lea
cmp
loope
ret
stc
xchg
mov
mov
push
jge
in
insl
pushf
outsl
push
mov
sbb
dec
subb
negl
mov
je
arpl
add
inc
fs
lea
repz
in
and
repnz
xchg
pusha
sbb
das
jecxz
jb
pop
inc
or
pop
dec
addl
dec
mov
loopne
pop
lret
push
push
adc
das
and
xor
and
cmp
cli
cmp
je
cmpsl
lds
sbb
cmp
and
xor
sbb
cltd
fsubs
frstor
mov
inc
push
dec
push
adc
cmp
arpl
inc
sbb
adc
xlat
leave
mov
sub
pop
xor
push
cltd
nop
cltd
push
sbb
or
outsl
push
adc
mov
adc
xor
push
in
push
add
inc
and
add
xor
and
add
mov
and
xchg
sbb
popf
ret
es
xor
inc
sub
xor
rcl
xor
sbbb
movsb
insb
mov
jae
mov
mov
rolb
xchg
nop
pop
cmpsb
push
jge
jno
mov
mov
les
add
add
and
sbb
push
out
imul
mov
lea
movsb
jno
cmc
nop
xorb
popa
add
mov
fwait
inc
pop
adc
std
xchg
pop
mov
js
call
scas
fnstenv
je
push
or
inc
ficompl
lcall
sbb
xchg
add
mov
jne
mov
shlb
lock
testl
adc
out
pop
test
add
int
leave
mov
lret
movsl
and
int
sbb
dec
jbe
mov
loopne
rcrl
ljmp
mov
test
les
xchg
pop
cwtl
add
xchg
ffree
call
je
xchg
cmp
mov
movsl
jne
jno
or
cwtl
add
mov
int
and
sub
mov
mov
mov
stc
mov
loopne
mov
lcall
call
xor
push
jb
add
or
dec
sub
mov
std
xor
fsubrs
mov
mov
pop
repz
mov
dec
sbb
xor
mov
inc
adc
mov
jl
inc
push
mov
pcmpeqd
add
cmc
add
je
mulb
ja
xorl
imul
movl
push
mov
mov
push
adc
xchg
pop
or
mov
aaa
or
daa
add
je
cs
cmp
sbb
in
lods
add
push
jne
pop
xorl
inc
cmp
es
jne
mov
inc
or
cmpsl
ljmp
xor
cld
mov
or
adc
cpuid
cmp
xor
jnp
xor
frstor
adc
lret
mov
dec
ret
daa
fsubl
and
repz
mov
pop
movsl
mov
shrb
imul
mov
subb
rorb
mov
popa
call
add
xor
jae
js
cld
pop
push
negb
adc
and
cmp
mov
shrb
sub
aaa
loopne
dec
add
mov
stc
mov
aaa
jo
add
nop
rorb
adc
cmpsb
xchg
pusha
add
inc
jecxz
imull
testb
lea
mov
xchg
fs
mov
sbb
call
jmp
out
mov
mov
sar
call
sbb
push
jae
fdivrl
push
mov
add
addl
xor
or
sub
repz
adc
rcr
mov
sbb
lods
adc
push
je
jo
jno
or
xchg
dec
or
lods
mov
cmpsb
popf
test
orb
sub
pushl
clc
stos
icebp
adc
rcr
sbb
sbb
or
push
mov
imul
pop
lret
xchg
cmp
xchg
or
pop
inc
adcb
jne
or
enter
sbb
xchg
shlb
aad
or
lods
sub
cmp
testl
adc
push
and
add
stos
sub
or
xor
aas
mul
pop
add
ljmp
and
test
sbb
inc
sub
and
stos
movsb
ret
and
mov
leave
mov
push
je
movsl
ja
or
jne
nop
popf
or
xor
pop
lret
jle
cmp
je
or
jb
rolb
push
aas
inc
mov
sbb
sete
inc
cmp
push
clc
aam
rcrl
cld
and
ds
add
js
hlt
jae
movsbl
sbb
daa
in
xchg
sbb
fwait
shrb
sbb
lcall
enter
ret
incl
incl
jmp
shl
or
add
inc
cmp
jl
xor
data16
or
and
add
sar
add
jmp
sub
cwtl
hlt
clc
xor
loopne
sahf
pop
xor
ss
cmp
jecxz
aad
lock
inc
jne
enter
adc
sub
lock
mov
mov
dec
jne
fs
sbb
cs
lea
inc
lock
arpl
inc
push
movhps
lcall
push
push
xorb
fimuls
movsb
ret
or
inc
add
inc
adc
sbbl
adcb
jl
movsb
add
decl
mov
decb
cmp
push
add
mov
out
mov
pop
cli
js
inc
mov
cltd
in
std
add
dec
jne
and
faddl
add
arpl
xor
shl
sbb
hlt
dec
sahf
xchg
add
or
mov
adc
cld
popa
add
add
lods
hlt
pop
pop
adc
scas
xchg
insb
inc
je
cmp
lock
mov
pop
sbb
pop
cmpsl
pop
and
push
xor
in
push
xor
push
push
jnp
adc
or
xchg
out
mov
or
fwait
mov
xchg
xchg
and
sahf
or
stos
fildl
mov
adc
add
push
inc
cs
bound
lods
add
insb
jecxz
rcrb
jmp
push
jmp
mov
push
cmp
or
jae
faddp
push
push
out
fcomps
xchg
mov
xor
push
pop
add
jmp
push
push
ds
in
push
push
and
xchg
pop
add
popa
scas
push
and
pop
dec
out
mov
push
pop
xchg
outsb
or
inc
sbb
rolb
js
push
push
pusha
mov
push
jne
hlt
dec
es
ss
jns
sbb
mov
push
push
xchg
mov
xor
iret
shrl
adc
sbb
add
xchg
push
push
mov
sub
mov
pop
adc
in
popa
test
jge
and
rorl
mov
adc
mov
iret
push
lcall
faddl
mov
cmp
test
rol
push
fnstcw
test
fwait
mov
fimuls
insb
cmpb
mov
xlat
fs
push
cmp
pop
test
std
and
pushf
cli
push
and
das
call
pop
das
push
orb
adc
pushf
jne
repz
dec
push
mov
lods
mov
push
cmp
mov
jecxz
pushf
mov
rorb
int3
add
aam
aad
mov
dec
or
gs
xchg
xchg
shlb
or
mov
adc
mov
add
imul
aam
imul
sbb
add
add
shlb
push
push
pop
aam
mov
mov
push
and
mov
call
push
jmp
mov
nop
adc
adc
add
mov
xchg
cs
pop
fwait
sbb
ret
mov
fidivl
pushf
add
add
int3
int3
mov
xor
sbb
roll
cmp
cld
jecxz
mov
cmp
loopne
sbbl
and
repz
je
xchg
lods
cs
fcomps
adc
cmpsl
call
out
das
andl
inc
pushf
fs
and
roll
sarl
xor
imul
pop
xor
jns
loop
jle
movsl
imul
mov
aam
leave
xchg
or
xchg
dec
popa
test
pop
or
and
push
xor
stos
sarb
jge
bound
sub
fidivrl
loopne
fdivrl
pop
jge
sub
mov
mov
jmp
je
cmp
daa
mov
mov
call
or
mov
decl
mov
or
roll
out
test
sbb
lret
xchg
mov
mov
pop
or
rolb
insl
pop
push
pusha
pushf
xor
or
mov
inc
sub
add
int
inc
cmp
mov
mov
cwtl
movsb
jmp
dec
push
roll
stos
in
scas
adc
adc
cmc
mov
mov
mov
adc
les
push
inc
cvttps2pi
xor
cmp
lret
iret
popf
push
pop
leave
jge
mov
es
or
hlt
dec
add
clc
sub
gs
inc
inc
mov
jo
hlt
nop
pop
mov
int
std
and
cmp
mov
jae
fwait
pushl
or
xchg
mov
scas
sti
loope
mov
clc
pop
mov
sarb
pop
iret
mov
push
push
adc
int
inc
sub
mov
inc
or
ja
mov
jl
hlt
mov
add
push
fsubrl
fisubl
mov
clc
add
mov
add
decl
mov
mov
inc
mov
mov
cmp
jl
lahf
sub
addl
das
ja
jecxz
xor
pop
sub
push
icebp
or
orb
imul
fisttps
mov
pop
or
mov
fisubl
add
and
icebp
mov
cld
push
leave
push
xor
mov
inc
ds
popa
pop
adc
pop
add
stc
fwait
jb
xchg
mov
in
pop
cwtl
outsb
mov
adc
test
push
dec
aas
enter
add
cmp
mov
cmp
sbb
leave
movsl
and
in
pushf
nop
dec
in
mov
xor
lret
and
mov
push
sub
sub
subb
and
inc
sahf
mov
cmp
inc
pop
sti
inc
push
enter
push
cli
mov
ja
lahf
repz
addr16
scas
and
add
mov
popa
xchg
inc
imul
loopne
and
xor
or
xor
lods
das
mov
dec
mov
xor
and
adc
add
rcll
ret
pop
sub
mov
and
mov
xor
add
push
cmp
ljmp
fmull
je
das
jl
mov
pop
adc
adc
mov
iret
xchg
pusha
and
shll
lcall
dec
pusha
aaa
sbb
lea
fsubp
incl
cmp
jbe
cmp
jbe
mov
sbb
pop
dec
add
mov
pop
incb
ret
sub
popa
mulb
insl
mov
xchg
mov
dec
sbb
mov
add
fisttpl
sbb
add
mov
icebp
cmp
push
adc
daa
push
fsqrt
mov
push
call
push
push
push
cmp
insb
jmp
and
jp
pop
rcll
xchg
dec
push
mov
sbb
test
pop
ret
and
je
hlt
enter
nop
nop
sbb
ficoml
cwtl
test
stc
inc
mov
clc
cmpl
cltd
call
jns
js
push
and
je
lea
dec
movsb
mov
loop
push
xor
fistl
cwtl
or
sub
pushf
inc
test
movsl
lods
jl
stc
add
int
rorb
lret
cmpsb
mov
or
add
in
mov
dec
and
push
or
inc
cmp
lods
test
mov
mov
mov
sbb
sbb
cmc
lock
mov
xor
pushf
jmp
add
lret
scas
add
adc
call
mov
adc
mov
lcall
stos
ret
movsl
imul
loope
das
push
lods
lods
add
cmpb
insb
mov
and
add
rcrb
cld
xchg
cmpl
int3
sbb
ja
movsl
mov
pop
in
out
test
aad
movsb
leave
push
inc
enter
stc
sbb
fidivrl
and
mov
and
sub
xor
or
adc
adc
outsl
xor
shlb
outsb
and
fstl
nop
mov
std
adc
jo
sbb
ficoml
rcll
loopne
ss
and
dec
sti
lock
nop
push
dec
stos
xchg
dec
dec
cmpl
add
ret
shrb
stos
jle
add
cltd
add
ret
scas
add
push
aam
loopne
and
add
mov
sub
stc
cwtl
or
cmp
mov
add
out
out
fdivl
mov
je
add
punpcklwd
mov
fistpll
mov
in
mov
hlt
jl
mov
lods
cltd
mov
xchg
movsl
shlb
out
jg
cmp
mov
jge
loope
jp
push
push
dec
fwait
movl
aas
push
xchg
add
add
jmp
push
push
mov
add
cmp
pop
fdivl
nop
add
adc
inc
add
sub
push
insb
jnp
mov
sub
cmpsl
mov
jae
cmp
insl
ret
pop
je
add
and
push
out
in
pop
shrl
sub
mov
and
and
xchg
pop
pop
js
loop
and
add
into
fwait
int3
add
addr16
fnstsw
pop
mov
outsb
out
int3
test
inc
or
jmp
jmp
cwtl
clc
gs
fldl
loopne
shrl
and
mov
jb
mov
pop
rolb
jmp
ja
dec
fs
shr
and
xchg
dec
mov
adc
inc
scas
push
imul
sbb
xchg
xor
push
push
hlt
or
mov
mov
mov
mov
jne
insl
adc
push
dec
dec
cld
psrlq
push
pushl
mov
mov
das
jle
pop
cmp
jbe
push
push
sbb
fsubr
sub
cmp
pop
push
sbb
faddl
movsb
or
or
mov
adc
repnz
out
xor
ds
cmpsl
or
push
pop
cmp
sub
bound
xor
daa
sbb
pop
clc
jne
mov
mov
push
inc
call
mov
leave
dec
xchg
push
sbb
cmp
sub
out
sub
shlb
sub
or
bnd
push
into
jo
in
cli
mov
sbb
adc
fisttpl
popa
jle
push
call
cmp
sbb
mov
and
mov
mov
cmp
pop
lock
or
mov
test
dec
aaa
add
sub
xchg
lds
cmp
jae
inc
jmp
add
icebp
mov
dec
loope
hlt
dec
jbe
testl
pusha
sub
jno
or
jo
mov
in
xor
xor
repz
in
cmpsl
xor
xchg
aaa
jnp
push
dec
adc
and
xchg
mov
dec
and
xor
nop
lock
sub
fs
xor
jl
movb
or
dec
sbb
mov
sub
daa
and
mov
movsb
ds
and
fdivs
out
daa
jge
inc
mov
mov
cmp
das
insb
pop
jmp
xlat
mov
into
adc
enter
popa
pop
sub
lret
xor
fidivl
or
fmuls
mov
pop
ret
push
xor
test
mov
push
pop
adc
pop
les
outsl
aas
stc
das
mov
push
iret
jle
icebp
adc
lea
push
or
mov
or
pop
pop
aaa
inc
xor
mov
dec
xor
push
cmpsb
dec
xor
shll
xchg
push
xor
jae
mov
add
add
xchg
dec
xor
dec
add
and
cmp
insb
lods
cmp
and
sub
add
dec
pop
lods
sarb
mov
mov
push
inc
leave
pop
pop
sbb
push
outsb
cwtl
outsb
shlb
or
lods
jne
jg
data16
jbe
sub
and
es
popa
jne
mov
iret
adc
fwait
sbb
dec
push
aam
loopne
or
and
lahf
ret
pop
adc
adc
cwtl
sarb
mov
mov
test
mov
xor
shlb
xor
adc
inc
outsl
sbb
push
movsb
sarl
dec
cmp
sbb
jb
movsb
push
pop
enter
aam
pop
popf
fcompl
dec
jnp
push
addl
les
push
sbb
imul
ret
in
ret
cmpsb
xchg
adc
inc
fadds
int
roll
jo
arpl
mov
mov
ja
addl
sub
sub
push
enter
adc
or
rorb
cs
inc
and
lock
pop
cmp
or
inc
loopne
pop
test
rorl
pusha
xorl
int3
add
mov
ja
loopne
pushl
es
popa
adc
xor
adc
jmp
pop
or
loope
jmp
jge
push
fcoml
loopne
mov
jmp
pop
mov
notl
add
jmp
add
push
cmp
insb
mov
js
mov
cwtl
stos
add
scas
movsl
les
outsb
mov
lea
push
movsl
fs
test
lock
loope
add
push
dec
and
jge
mov
push
stos
or
adc
loope
push
and
add
xor
or
fcoml
movb
sbb
jmp
xor
cmp
in
cmpsl
inc
inc
mov
inc
inc
sbb
out
popa
push
ret
rcrl
adc
push
mov
add
andl
add
insb
mov
loopne
mov
push
inc
xchg
add
adc
xchg
or
jns
dec
cltd
dec
jl
dec
je
mov
and
xorl
mov
mov
adc
filds
or
mov
cmp
repz
fists
cmp
je
cmp
jne
mov
sbb
add
mov
push
push
mov
pop
dec
cmp
jns
or
cmpsb
mov
sub
inc
adc
je
negl
js
or
fnsetpm(287
cld
cmp
jbe
push
lea
or
jmp
loope
cmp
je
sub
inc
jmp
inc
and
xchg
cmp
and
mov
and
cmp
add
mov
mov
cld
test
out
aam
mov
loopne
outsb
testb
add
inc
add
xchg
jmp
cltd
add
mov
jl
sub
cld
inc
xchg
cmp
add
push
jl
mov
insb
outsb
hlt
cmpb
bound
clc
imul
clc
je
sub
lods
push
shrl
data16
ja
js
sub
mov
dec
stos
sub
jge
push
push
adc
rol
mov
or
mulb
xor
mov
jge
jmp
loopne
jne
mov
ficompl
in
cmp
or
lds
mov
push
mov
ljmp
loop
add
iret
data16
inc
shrb
shl
add
jmp
dec
iret
lock
and
cmpsb
and
or
adc
rorl
test
jne
xor
lock
mov
test
mov
or
push
fdivrs
push
mov
jmp
dec
shlb
mov
sub
lods
and
sti
loop
andb
mov
loopne
mov
push
fistl
or
lret
int3
inc
jg
or
jge
sti
and
cmp
xor
and
mov
jle
sub
sub
and
pop
or
jl
or
jle
pusha
cwtl
inc
test
jg
jbe
lea
cmp
jbe
push
hlt
pop
fisttps
outsb
lock
pop
add
je,pn
test
lods
or
pop
add
or
jb
clc
add
and
push
xor
xor
loope,pt
es
adc
movb
inc
call
sbb
lret
and
orl
mov
jno
mov
inc
and
push
push
adc
sbb
mov
adc
jae
or
sbb
sbb
push
lcall
jbe
clc
push
pop
jl
lds
adc
push
fdivl
xor
pop
pop
mov
jmp
mov
mov
xor
orb
shll
mov
jnp
pop
inc
push
subb
movsl
insb
je
icebp
popf
in
ret
add
nop
je
repnz
jne
xor
sar
jne
push
push
inc
sahf
mov
loop
push
push
imul
dec
test
xchg
mov
jg,pn
mull
mov
cmp
aad
mov
and
jbe
push
push
inc
ljmp
popa
and
xor
or
int3
mov
cmp
sbb
lock
cmpsb
or
ljmp
push
andb
call
xchg
mov
lods
add
sbb
add
sbb
or
jne
xchg
xchg
and
cmp
lds
mov
andl
or
xchg
add
aaa
jp
mov
jne
hlt
ret
sbb
mov
add
mov
les
push
movl
push
adc
dec
push
pop
cli
or
xor
push
lahf
inc
mov
movsl
xor
insb
cli
bound
inc
xchg
push
mov
mov
sbb
int3
add
sbb
pop
add
mov
insb
enter
push
mov
aas
add
outsb
cmpl
xorl
test
push
pushl
push
mov
mov
jo
test
outsb
fsubr
jae
sti
jo
cmp
movb
scas
push
or
add
or
das
pop
push
jne
lods
es
dec
lea
addb
jb
pop
sub
sub
pop
push
inc
jae
negl
fbld
jbe
sbb
dec
pusha
mov
ret
sahf
filds
sti
inc
inc
fwait
inc
ficoml
pop
ja
push
sbb
push
sub
cmp
jno
test
test
dec
push
or
cmc
mov
mov
push
movsl
xchg
mov
pop
adc
xchg
sbb
mov
clc
pop
je
test
dec
or
inc
inc
jmp
xor
push
fs
inc
shll
adc
add
sbb
and
push
sub
mov
and
sub
mov
lods
inc
xchg
or
mov
icebp
in
clc
mov
or
sbb
lea
sbb
add
rol
icebp
push
sbb
inc
push
in
push
pop
rorl
stc
loop
or
add
iret
loopne
and
je
push
aaa
xor
out
les
add
push
add
and
leave
add
pop
add
les
xor
in
inc
add
add
add
or
sti
pusha
jb
xchg
mov
cmp
mov
adc
cmpsb
xchg
lret
add
ds
js
daa
push
adcl
push
gs
inc
mov
jmp
xchg
sbb
das
sub
push
and
gs
xor
push
ljmp
pop
pop
mov
repnz
adc
bound
aas
push
arpl
push
cld
inc
inc
push
push
popf
in
sbb
cmpsl
inc
pop
xchg
addl
addb
xchg
cltd
pop
xor
xchg
pop
sbb
movsl
cltd
inc
in
and
fimull
or
rclb
push
fstpl
dec
cmpsb
popa
jb
pop
or
testb
xchg
pop
xchg
rorb
fs
push
add
push
pop
out
push
sbbl
and
cmp
movb
mov
aas
incb
jbe
or
int3
shlb
enter
sub
ficomps
or
add
out
mov
lods
testl
rcrl
ret
cwtl
cmpl
dec
push
xor
aaa
loope
cmp
add
int3
or
or
push
push
inc
dec
mov
aad
cli
xor
sti
xor
insl
jnp
das
movl
add
js
scas
into
cmpl
movsb
ds
xchg
andl
out
add
inc
sub
pop
fcmovu
cmpsb
or
sub
xchg
inc
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
dec
out
inc
mov
fcmovb
jne
adc
or
adcl
mov
setle
mov
hlt
mov
iret
push
pfmin
cmp
adcb
adc
sub
push
mov
or
ficoms
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
or
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
jg
jne
jmp
xor
in
sbb
sub
into
call
mov
aaa
push
adc
addl
mov
sbb
pop
lea
fldl
add
je
mov
ficoms
in
sub
push
jno
inc
mov
push
imul
repz
jmp
insl
into
jno
mov
jae
scas
jg
and
lret
sub
mov
daa
mov
addb
sti
inc
repz
sub
decb
adc
cmpl
andb
dec
or
pop
pop
xchg
addb
and
mov
mov
pop
pop
fs
shl
push
inc
bound
faddl
decb
or
rcrb
add
push
push
ret
lahf
rolb
push
mov
push
mov
lcall
ret
push
movsl
aas
sbb
les
inc
mov
xchg
pop
in
out
adc
xchg
sub
push
add
push
jno
xchg
xlat
push
push
push
push
jb
pop
cs
pop
pop
pop
loope
lret
in
pusha
or
or
cmpsl
rorb
mov
xor
add
ret
addb
xchg
addl
andnps
movsl
push
les
jbe
add
dec
and
out
roll
mov
jg
cwtl
mov
jmp
mov
add
rcll
lret
mov
lcall
adc
popa
cmc
es
push
sbb
push
in
leave
clc
or
inc
adc
ror
adc
sub
sbb
les
sarb
pusha
fdivs
call
cs
add
daa
mov
into
cmpsb
inc
loope
xor
es
je
flds
sbb
ljmp
sbb
jae
or
inc
push
dec
pop
imul
push
pop
jmp
shr
mov
je
aam
je
into
or
push
mov
jmp
mov
mov
and
adc
or
push
cmp
or
mov
lock
test
lock
pop
aam
popf
mov
insb
sub
sti
es
sti
jo
dec
and
dec
push
pop
movsl
cmp
mov
pop
mov
sub
inc
or
cmp
test
sbb
ffree
ret
data16
inc
xor
lret
pusha
cmp
and
push
mov
je
mov
cmp
push
jo
add
ss
in
xlat
push
inc
sbb
dec
out
pop
inc
stos
add
adc
mov
xor
mov
adc
je
sbb
mov
mov
cmp
je
push
aas
cs
inc
jb
mov
mov
and
add
sbb
pop
push
pop
js
add
sub
sbb
fs
adc
fildl
rcrb
into
sbb
jbe
push
adc
shlb
jne
or
mov
add
adc
call
lcall
insl
jnp
mov
cmp
jne
or
and
in
pop
jbe
jo
inc
bound
xchg
mov
int
imul
sbb
ficoms
shlb
orb
daa
pop
dec
mov
cmp
inc
lcall
sbb
je
or
incl
cmp
rcl
and
push
pusha
or
movsb
scas
lods
adc
sub
sbb
push
jo
mov
clc
jne
push
xor
aaa
or
int3
mov
rcl
add
rcrb
mov
cmc
pusha
je
divb
push
cli
insb
mov
mov
fisubrs
inc
or
or
data16
jne,pn
sbb
jmp
imul
mov
push
xchg
rorl
inc
hlt
add
lock
hlt
add
lock
or
push
mov
loope
ror
loop
inc
inc
mov
hlt
cmp
ljmp
add
pop
enter
pop
gs
push
jae
jb
les
enter
dec
mov
mov
cltd
icebp
or
jecxz
mov
aas
and
add
outsl
mov
push
jecxz
and
add
adcb
inc
xchg
jg
fdiv
push
xchg
add
fisubl
mov
or
jmp
inc
mov
movsl
orl
int
and
call
pop
xchg
jbe
jne
addr16
fnstenv
hlt
test
test
or
je
adc
jno
push
mov
out
cld
mov
jbe
mov
inc
pusha
scas
xchg
adcb
int
cmpb
jns
pusha
shlb
xor
lock
and
loop
icebp
mov
movsl
movsw
lret
push
add
loopne
and
test
add
or
sbb
and
lods
mov
adc
adc
in
adc
cmp
dec
pop
sbb
push
adc
fstp
adc
push
test
pusha
es
push
xor
ja
je
adc
jns
loope
bound
adc
or
out
dec
inc
dec
clc
jmp
sub
jmp
sbb
push
push
or
mov
test
or
mov
jo
push
mov
sub
add
int3
in
jne
jbe
adc
jbe
arpl
and
add
jo
scas
inc
shlb
inc
pop
and
sbb
inc
pop
fldenv
dec
lods
dec
mov
cmpb
sbb
dec
dec
dec
jne
jns
push
cmp
sbb
xor
dec
sbb
sbb
push
push
adc
lds
in
shr
ja
jmp
mov
add
loopne
cmpl
cmp
xchg
idiv
xor
int3
xor
inc
shlb
inc
aam
repnz
ds
fdivs
ss
pop
or
push
push
int3
pop
and
lods
out
in
adc
imul
lock
aam
ds
mov
and
sbb
fidivrl
sub
cmp
or
push
jbe
jp
rcr
ljmp
mov
test
fs
push
mov
ret
aaa
xchg
daa
inc
mov
xchg
xchg
inc
cmp
jl
jmp
pop
add
add
mov
popa
push
movl
lods
ret
add
aas
mov
push
repnz
jmp
adcl
xor
mov
sarb
sar
ficompl
clc
stos
xchg
or
leave
mov
dec
scas
mov
insb
xor
sub
add
xor
sbb
and
ds
je
and
stos
clc
int3
mov
sbb
fadds
cmp
or
pusha
aaa
orb
cld
dec
loop
clc
inc
push
xor
jp
jge
xchg
sarb
ds
ds
inc
ja
pop
lret
push
push
xor
pop
lods
or
jmp
push
dec
or
loop
mov
push
in
dec
nop
testb
pop
int3
or
cmpsb
bound
js
ret
or
nopl
dec
je
sbb
mov
loope
push
sbb
shll
hlt
sub
pop
loope
lret
mov
out
sbb
sbbb
xor
out
cmp
imul
inc
sub
clc
int3
inc
push
pushf
data16
inc
xchg
inc
xchg
sbb
jmp
fsubp
xlat
mov
or
jae
sbb
call
pop
leave
sub
dec
jg
clc
pop
mov
cmp
fstps
add
das
loope
push
fs
sub
cs
fdivs
adcb
add
push
sub
adc
push
push
fdiv
or
inc
or
cmp
repnz
mov
and
and
jge
jmp
mov
cwtl
jle
jne
test
jo
popa
inc
dec
nop
push
add
push
pop
pop
fists
loopne
mov
sbb
add
fnsave
clc
xchg
aam
test
adc
inc
nop
mov
jno
ja
call
jo
movb
cltd
jo
push
add
in
orb
int
inc
cmp
push
std
xchg
or
fsubs
push
mov
push
in
dec
cmp
stos
inc
inc
lock
add
cmpb
iret
mov
mov
push
nop
loopne
shll
inc
out
ja
stos
pop
movsl
mov
xchg
shrb
dec
loopne
xchg
sahf
or
fisubl
or
orb
cmp
cli
pusha
popa
popa
add
sub
scas
inc
jle
sub
cmpsl
or
push
xchg
and
jbe
lret
repz
xor
scas
sub
adc
xchg
or
int3
out
or
adc
jo
xlat
inc
sbb
dec
cli
xor
mov
or
lock
fsubrs
aam
sahf
cmpsb
add
mov
xchg
add
mov
add
xchg
cmc
lret
pop
loopne
popa
inc
sahf
and
add
push
dec
addl
jl
push
leave
fdivl
dec
subl
add
test
or
iret
pop
andb
or
adc
add
popa
adc
pop
js
in
lock
cli
incl
jo
cmp
adc
jbe
push
and
jbe
jp
xlat
mov
push
pop
sbb
sbb
pushf
fs
or
dec
xchg
cmp
lock
arpl
movl
push
ret
add
jae
dec
xor
and
adc
enter
push
add
cmp
inc
popa
insb
and
sbbl
inc
mov
data16
add
aam
inc
sbb
cmp
ljmp
sbb
jnp
arpl
add
cmp
inc
xor
add
xor
scas
dec
jo
jns
popf
pusha
sbb
or
jnp
lds
mov
mov
pop
jge
addr16
lret
lds
inc
inc
popa
fldcw
sub
sbb
xchg
jecxz
dec
shrl
push
ret
pop
lret
ret
xchg
rorl
or
inc
sub
or
mov
cmp
add
mov
add
cmp
sbb
dec
aam
jge
dec
fidivrl
outsl
ss
xchg
nop
xlat
mov
data16
pop
mov
fidivs
xchg
push
or
sbb
rcrl
sub
rolb
push
or
sub
jge
jge
fs
or
pop
ja
imul
leave
mov
clc
or
mov
xchg
and
adc
inc
push
and
lea
xorl
dec
jnp
daa
test
mov
cmp
push
and
or
and
inc
sbb
push
movb
push
fs
lahf
xchg
pop
rcr
fwait
js
xor
cs
and
dec
cmp
jnp
aaa
pop
jae
inc
mov
mov
dec
call
or
or
xchg
push
and
sub
mov
push
test
std
dec
add
xchg
mov
insl
icebp
fsts
push
xchg
mov
rcll
ret
hlt
repnz
mov
sub
mov
pop
inc
or
and
inc
fimull
dec
jbe
fldt
mulb
add
fucomip
jb
sub
dec
aam
mov
and
push
call
adc
insb
pushf
jne
js
shlb
in
push
pop
in
mov
insb
dec
js
sbb
pop
mov
sbb
dec
fwait
jl
aaa
ret
out
insb
add
push
mov
sbb
mov
inc
cmp
sbbl
push
jnp
nop
sahf
jmp
jge
sbb
mov
add
lods
or
bound
scas
xchg
imul
das
push
imul
inc
pop
aaa
mov
test
repnz
or
bound
jo
add
jae
mov
mov
and
inc
fcoms
jns
mov
jnp
pushf
js
sbbl
outsb
cli
jnp
add
adc
and
insb
out
xor
mov
and
cmp
pop
ss
xchg
insl
test
cltd
cli
dec
pop
mov
inc
lods
add
int
mov
inc
out
out
inc
shlb
sbb
dec
push
jns
pop
push
lds
xor
mov
stc
mov
lcall
sbb
enter
push
fcoml
dec
mov
pop
or
popa
push
in
nop
sub
hlt
mov
xor
fsubrl
pop
jmp
adc
lret
mov
xchg
and
adc
xor
into
out
sbb
bound
es
adcb
sub
clc
add
fildll
fcoms
rorl
and
hlt
movd
inc
jbe
adc
inc
jmp
std
insb
xchg
mov
jle
pop
add
icebp
or
jbe
cmp
inc
loopne
inc
in
fildll
adc
add
fbld
xor
cmc
rorb
sub
add
jge
pop
sahf
pop
jbe,pn
fdivl
ret
imul
mov
add
or
insb
sbb
jbe
add
jge
jp
xchg
mov
shll
pusha
adc
push
pusha
push
dec
push
pop
inc
xchg
add
sbb
orl
mov
cmp
pop
push
aam
jne
cmp
push
fsubr
adc
inc
dec
outsb
mov
and
cmp
mov
dec
jp
mov
push
movsb
rorl
jno
and
sub
shr
mov
pop
mov
or
mov
bound
stos
mov
js
adc
pusha
lldt
hlt
dec
pop
ja
test
push
cmp
xor
dec
dec
pop
mov
or
test
add
mov
iret
jmp
mov
hlt
adc
sub
cmp
outsb
and
mov
add
add
dec
lods
lods
xchg
push
bound
or
cmp
dec
add
fsts
loop
cltd
outsl
test
push
push
or
push
sub
xchg
sbb
fldenv
cmp
cmp
paddq
cmpl
pusha
loopne
cmp
fs
pop
cmc
jnp
fiadds
and
fisubl
inc
sub
rcrb
mov
sub
pop
fcompl
andl
pop
imul
and
and
jne
mov
stos
sub
sti
les
push
popl
xor
mov
lods
aad
outsb
and
xchg
mov
xor
push
mov
xor
aad
inc
pop
loop
sub
cmp
rcrb
add
sub
add
cmp
pop
or
add
fstl
ljmp
aaa
push
inc
push
rclb
xchg
cmp
jb
mov
add
sbb
adc
inc
push
adc
mov
rcrb
jb
aad
mov
pushf
push
test
subl
sub
inc
mov
js
jmp
scas
xchg
cmp
jp
and
xchg
hlt
jne
je
hlt
push
or
out
xor
call
pop
dec
add
inc
pop
ss
mov
push
pop
mov
dec
cmp
push
and
sbb
fcmovnu
sbb
sbb
or
sbb
sarl
jmp
ret
inc
pop
adc
ret
shrb
push
sub
push
lcall
pusha
add
xchg
pop
adc
xchg
inc
pop
sub
js
adc
push
adc
push
test
xor
adc
jb
gs
fcoml
adc
xchg
je
pop
inc
dec
xor
fidivrl
ss
int
sti
inc
cmp
aaa
jmp
mov
push
mov
jp
pop
add
lods
cld
ljmp
pushl
push
ds
fbld
cmp
ja
neg
sbb
inc
mov
mov
dec
jge
gs
enter
ss
mov
mov
sar
aas
mov
iret
cmp
mov
fs
or
pusha
xchg
lods
mov
jl
lret
jmp
adc
push
adc
xor
cmp
push
inc
add
imul
imul
inc
cs
inc
adc
xor
adc
xchg
dec
cs
jb
in
adc
adc
or
sbb
clc
push
pop
and
cmpw
je
cmp
subl
out
inc
inc
shrl
sub
or
xor
test
add
ljmp
and
setbe
or
aad
into
out
nop
mov
cmpsb
xor
mov
fildl
push
jg
in
sbb
jl
inc
and
das
jmp
cmp
mov
sub
dec
sti
jge
cld
cmp
bound
sar
push
sbb
mov
pop
jecxz
es
rorb
in
mov
mov
cmc
mov
and
ljmpw
stos
cmp
sbb
jmp
jle
and
add
push
pushf
out
gs
insb
pushf
xchg
test
inc
ds
add
xor
add
sbb
mov
subb
xor
mov
jne
lods
popf
dec
adc
movb
pop
mov
addl
dec
andl
sbb
dec
pushf
out
add
lea
jne
out
xor
mov
xor
push
inc
jne
lret
mov
inc
aam
fbld
movsl
es
fadd
push
mov
repnz
mov
push
or
mov
mov
and
insb
aam
mov
and
out
pop
mov
inc
or
push
fnstcw
dec
ret
pop
out
es
xor
dec
cmp
orb
aad
adc
mov
ret
and
cmpb
fstpt
adc
adc
inc
sbb
push
adc
push
xlat
fld
rolb
std
nop
loopne
mov
sub
test
add
movb
movsb
pop
aad
movd
push
inc
mov
popf
xorl
dec
stc
mov
lea
sbb
xor
cs
cld
or
pop
add
ja
adc
cmc
pop
xchg
in
scas
jmp
cmp
sub
shrl
push
movsb
sub
or
test
push
mov
repz
fdiv
push
mov
and
out
mov
cmpb
push
and
xchg
dec
into
pop
ds
test
jo
pop
lock
pop
iret
out
fsub
mov
ficoml
nop
add
filds
cmpsl
mov
sbb
rolb
fcmovb
add
and
jmp
push
js
xor
xlat
ret
leave
cmp
mov
in
out
adcb
aaa
pusha
pop
xchg
mov
push
and
mov
cmp
push
cld
addl
inc
std
pushf
cmpsb
cmp
push
push
sub
sub
shlb
jmp
mov
mov
rorb
add
addr16
jno
xor
xchg
mov
dec
stc
shll
rcll
mov
dec
jmp
or
sub
and
or
mov
arpl
xor
push
push
mov
mov
in
rolb
repnz
cmp
sahf
popa
lea
mov
in
mov
loopne
pop
adc
add
test
clc
mov
inc
test
stos
into
test
cmp
xchg
repz
add
xchg
inc
sar
loope
dec
adc
roll
push
push
mov
cmpl
sbb
in
pop
push
mov
sbb
add
or
pop
ret
and
rorl
xchg
sbbb
dec
or
fisubs
sub
and
rorl
aad
inc
push
into
or
push
push
loope
sbb
xor
pop
mov
cmp
aam
and
push
sbb
std
cmove
mov
loopne
sub
xor
dec
xlat
sbb
rorl
jnp
jmp
mov
push
std
or
add
outsl
push
add
push
fcoms
mov
push
bound
pop
cmp
repnz
ret
sbb
adc
mov
add
and
xchg
lods
add
sub
add
es
js
test
lods
mov
mov
mov
in
xor
xor
dec
adcl
dec
ljmp
shl
scas
repnz
mov
sbb
mov
push
stos
add
andl
push
mov
xor
pop
sbb
adc
inc
popa
out
cmp
test
add
and
dec
jle
aad
add
mov
or
mov
ret
mov
sub
mov
repnz
lea
pusha
ljmp
pop
xchg
leave
fld
mov
orb
dec
inc
cltd
sub
arpl
mov
shll
adc
inc
and
adc
test
add
mov
xchg
push
mov
pop
lcall
into
push
ljmp
clc
mov
mov
adc
push
jne
mov
dec
sub
sub
adc
call
mov
pop
pop
inc
add
inc
jmp
push
lret
or
clc
pop
add
push
adc
js
repz
add
or
lea
das
sbb
pop
xor
or
bound
or
dec
adc
adc
dec
shrb
jle
and
jl
jmp
sbb
movsb
mov
or
cmp
mov
inc
and
add
or
insb
xlat
ret
sub
adc
mov
dec
dec
or
fidivs
dec
jmp
inc
data16
or
rcr
xchg
pop
push
inc
rcrb
jns
divl
push
icebp
fadd
jae
lea
jmp
cmpl
sub
shll
inc
out
pop
dec
or
push
lcall
enter
pusha
mov
rclb
pushf
mov
sbb
cwtl
clc
sub
push
mov
pop
lahf
imul
inc
jae
fisubrl
sbb
fs
xchg
lahf
jbe
loopne
jae
push
adc
mov
add
mov
jg
cmp
jns
or
adcb
or
daa
push
push
pusha
add
movsb
inc
cmp
out
xchg
dec
xchg
sub
call
decb
push
sbb
jge
call
adcl
popf
subl
xor
pop
ja
inc
lock
or
or
lods
push
nop
popa
mov
xchg
dec
jle
mov
push
push
mov
sbb
mov
cmp
hlt
xor
bound
add
and
dec
cmp
mov
mov
mov
mov
sbb
mov
xor
mov
add
test
push
js
inc
addl
push
push
push
cwtl
xchg
shll
sbb
inc
or
cmpsl
sbb
mov
cmp
mov
cwtl
iret
xchg
imulb
jbe
stc
xchg
test
outsb
or
fsubrs
lea
ja
xchg
adc
sub
pop
add
mov
js
test
mov
sbb
stos
mov
fldl
adc
xchg
dec
jb
dec
jmp
fwait
push
mov
jp
add
insb
jae
pop
leave
lods
packuswb
loopne
loopne
jno
sub
push
push
mov
mov
scas
ljmp
into
lea
cmp
inc
and
add
cmp
pop
and
cmp
adc
nop
nop
nop
add
je
loope
push
cwtl
lock
cmpl
int3
push
or
shr
cltd
mov
add
mov
jae
push
bound
js
fiadds
daa
fidivrs
and
sub
jmp
in
sbb
inc
cwtl
test
aas
adc
xchg
sbb
xor
aas
add
testb
adc
subl
mov
pop
or
insb
and
mov
ds
cmp
data16
mov
rorb
jbe
or
je
ja
mov
test
dec
fdivr
jne
test
imul
imul
cld
cmp
in
stos
add
or
loopne
call
mov
imul
jb
add
mov
and
call
cmp
add
mov
cmp
jae
stos
add
inc
sbb
inc
pop
jl
jne
push
js
fldt
clc
shl
cld
loopne
fnstenv
mov
add
sbb
and
repz
popa
inc
cltd
dec
fmuls
and
scas
out
sti
mov
ja
push
cmp
and
inc
pushf
add
in
or
fdivr
lea
fadds
pop
sahf
lret
in
pop
pusha
push
xchg
adc
or
hlt
neg
sbb
and
bnd
mov
mov
push
sub
push
adc
insb
les
mov
lcall
xchg
pushf
test
js
adc
pop
add
dec
adc
xor
cmpl
push
xor
and
jecxz
pop
fwait
add
into
out
insb
fistpl
stos
in
fstl
in
mov
outsl
cld
jge
jge
add
cmp
jbe
or
jne
push
testb
cmpsl
mov
jle
in
aaa
hlt
mov
das
data16
lret
rol
xchg
popa
shll
jmp
sbb
addl
dec
adc
lods
insl
sarl
jecxz
mov
jp
sbb
add
fists
ja
cwtl
sbb
imul
lock
in
scas
jne
loope
lods
adc
je,pn
jge
js
push
mov
fisubs
mov
mov
jg
push
pop
ljmp
mov
add
xchg
and
xorb
imul
or
cltd
sarb
inc
popa
and
movsb
cmp
bound
or
or
daa
add
andl
jmp
sub
ffreep
sbb
leave
pop
inc
mov
xor
push
sbb
nop
ds
sbb
or
dec
outsb
fcmovnu
inc
sbb
pop
xor
or
cmpl
add
insb
xor
ret
mov
jecxz
push
mov
out
push
ret
test
rcll
cld
push
or
sbb
test
idivb
or
inc
clc
nop
inc
inc
mov
push
movsb
arpl
add
test
jmp
and
xchg
xchg
sbb
and
xchg
mov
dec
pop
cmc
inc
cmp
fs
addr16
addr16
sub
lea
ds
inc
xor
cmp
cld
dec
ret
inc
xor
or
sbb
sbb
and
fistpll
insl
mov
jb
cmp
jae
jmp
imul
lods
pop
cli
and
pop
push
sbb
clc
adc
or
pop
mov
loopne
aas
xor
mov
cmp
jle
add
xchg
aaa
sbb
jae
addl
xchg
mov
add
dec
jno
outsb
dec
cmc
xchg
loopne
ret
std
sbb
sbb
rolb
subb
add
mov
jg
lods
test
xor
add
mov
call
xchg
es
jmp
and
dec
xor
or
and
cmp
rcrl
sbb
sbb
xchg
in
sahf
add
jp
cmpsl
dec
dec
mov
fld
sub
jne
push
lahf
xor
adc
sbb
jle
test
pop
movsl
fsubl
xchg
pop
pop
jae
and
jge
arpl
pop
imull
fucomip
cmp
pop
inc
mov
packsswb
test
arpl
fdivl
ja
rcl
inc
scas
xor
and
bound
int3
adc
ret
add
pop
rcrb
add
loopne
or
push
je
mov
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
sbb
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
mov
and
rcr
mov
ret
or
je
les
push
sub
xorl
clc
fwait
xor
in
in
jno
dec
mov
add
xor
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fmull
add
xor
mov
imull
or
xchg
pushf
push
adc
adc
and
in
mov
pop
mov
adcb
test
mov
imul
fdivrs
cmp
inc
jle
push
push
out
xchg
addb
push
lret
mov
in
lea
add
in
mov
mov
into
and
std
add
or
rcl
ret
mov
xchg
or
xchg
int3
rcrl
cmp
jb
mov
sbb
mov
mov
sub
push
roll
jbe
test
lea
fistps
in
or
xchg
add
xor
aaa
mov
pushf
xor
je
xor
sub
cmp
xchg
fcoms
movl
dec
adc
or
adc
jae
lea
ss
dec
ja
cmpb
jne
fidivl
mov
out
jmp
add
or
push
jae
stc
jno
jp
push
jnp
arpl
enter
lea
out
xchg
rcrb
sbb
divl
jge
sub
pop
push
das
mov
test
mov
lea
fists
aam
or
scas
or
xor
jmp
push
dec
subb
sub
dec
and
fcomps
dec
ja
push
xchg
inc
test
push
adc
add
mov
push
dec
das
shl
or
add
inc
pop
cmpsb
pop
inc
sub
in
push
sbb
adc
out
and
mov
je
ret
pop
add
mov
mov
mov
jae
adc
addb
insb
jmp
imulb
ds
outsl
mov
testb
push
das
dec
adc
sub
inc
push
lods
and
movsb
xor
add
jae
jne
lret
ds
lea
cmp
jle
fisubrs
pop
movsl
sub
popf
outsb
call
xchg
shll
adc
fisttps
shr
nop
and
adc
jecxz
mov
jne
or
add
add
xor
stos
cltd
adcb
ret
fcoml
loop
loopne
lahf
mov
test
lret
inc
add
jl
sub
mov
aad
sbb
mov
dec
or
and
inc
cmpl
test
jne
adc
pop
xor
js
sub
shrb
and
data16
rorl
out
pop
add
inc
add
add
iret
adc
enter
inc
jmp
push
je
mov
or
dec
add
push
jmp
les
orl
rcll
shl
incl
xchg
shlb
enter
add
ss
adc
cld
out
xor
sbb
mov
push
gs
add
outsb
out
adcb
push
or
push
push
mov
mov
sub
adc
js
dec
ret
out
push
jae
lea
push
sub
stos
and
lods
sbb
ret
push
sbb
cwtl
dec
push
stos
xchg
cli
faddp
lahf
inc
ja
cmp
pop
ret
adc
dec
jle,pt
enter
ret
lods
fdiv
ficoml
jge
fisttps
leave
out
xchg
imul
je
sarl
xor
fnstenv
inc
jmp
push
cmp
cmp
movsl
je
sub
pop
pop
lea
addr16
test
xor
pusha
xchg
add
jns
dec
inc
mov
movb
add
or
push
jb
sub
and
out
push
sti
fsubrl
aad
jns
mov
cld
call
popa
cltd
divb
jnp
std
add
cmc
dec
in
sti
jl
mov
sbb
inc
push
adc
and
cmp
push
xchg
sub
mov
cmp
jb
inc
sbb
enter
out
cld
popa
add
test
jbe
scas
and
cli
mov
lret
and
xlat
pushf
mov
push
mov
addr16
push
xrelease
push
aad
xor
sti
and
and
dec
or
add
cltd
add
jo
dec
insb
sub
divl
or
pop
cmp
cmp
scas
jge
cmp
cmp
dec
and
pop
pusha
hlt
lret
inc
outsb
cmpb
xchg
fisubrl
push
add
insl
test
push
mov
cmp
inc
scas
jnp
sub
push
inc
or
add
stos
adc
es
lock
push
cltd
adc
push
xor
sbb
cli
cmp
loopne
pop
call
out
cmc
imul
or
pop
push
add
push
pop
arpl
addr16
mov
addr16
push
dec
sbb
push
lods
imul
or
adc
xor
lock
push
adc
mov
add
mov
add
dec
mov
inc
mov
sub
loop
sbb
arpl
int3
or
pusha
icebp
mov
xchg
add
cmp
push
mov
xchg
jmp
insb
bound
cmp
imul
add
inc
out
repnz
adc
push
cmp
pop
pop
sbb
shlb
pop
jl
xor
push
lea
ret
js
cmc
js
sarb
addb
mov
push
not
jbe
cmp
adc
sbb
ret
dec
aas
lods
jg
mov
je
mov
iret
sbb
pushl
sbb
or
lahf
push
mov
cmp
inc
adcl
ret
daa
and
imul
sbb
inc
lret
pop
sbb
dec
ret
mov
mov
xchg
or
dec
jo
add
cmp
add
mov
sbb
jecxz
xchg
or
in
rolb
fsts
mov
shll
aas
mov
adcl
jmp
add
jp
int3
mov
jmp
aaa
add
test
sbb
or
in
pop
rol
inc
les
lods
loope
sub
and
jo
repz
idiv
pop
adc
or
mov
dec
sub
lods
mov
mov
adc
insl
mov
xchg
mov
and
outsl
sarl
push
fmuls
pop
pop
sbb
dec
xchg
leave
sbb
push
xchg
in
leave
xchg
mov
fmuls
sbbl
xchg
fists
push
mov
add
push
pop
rolb
push
mov
adc
push
dec
popf
and
stos
cmp
test
or
xor
adc
push
push
loope
inc
add
pop
push
inc
inc
push
rcrl
jnp
pop
and
clc
rcr
push
xchg
add
xor
subb
in
mov
cmpsb
xchg
xchg
imul
xchg
pop
scas
cwtl
or
push
int3
adc
inc
rorb
lock
subb
add
sub
add
in
test
insl
sub
lret
sti
jo
shrb
add
pop
movsb
and
out
std
push
or
inc
aas
sbb
add
clc
mov
adc
or
test
outsb
movsb
mov
stos
adc
adc
inc
cmpl
arpl
push
dec
or
or
ret
rorl
sub
or
xchg
lcall
add
push
add
sub
sarl
pop
in
xlat
xchg
ret
or
or
int
pop
adc
mov
mov
sub
push
push
inc
mov
mov
sahf
jecxz
xor
adc
fcoml
sbb
cs
mov
push
andl
add
loopne
punpckhwd
or
pushf
and
pop
fwait
jae
daa
jae
mov
dec
test
out
test
sahf
ficoms
aam
cmp
ror
call
sub
dec
mov
mov
add
xor
add
xchg
or
mov
xchg
mov
push
sub
pop
push
mov
mov
jle
cmp
js
push
or
or
inc
dec
std
inc
icebp
roll
das
jmp
cmp
add
adc
clc
push
push
pushf
xchg
adc
js
pop
sbb
cld
push
jge
adc
js
js
mov
test
lock
mov
test
cmp
mov
sbb
add
pop
and
fbld
xchg
or
jecxz
sbb
push
xor
mov
dec
je
mov
add
jb
and
adc
push
push
push
add
pop
push
adc
mov
sbb
addb
iret
into
or
rcll
adc
mov
outsb
int
sub
and
xchg
fcmovb
add
pop
fstpl
jle
mov
in
mov
dec
leave
mov
outsl
ret
or
and
inc
dec
sbb
adc
add
and
jo
lods
jo
outsl
loop
or
sub
stos
movsb
cmp
pop
or
jp
xchg
test
push
mov
rolb
push
fisttps
jb
xchg
push
cli
push
jb
cmp
and
ret
push
dec
xor
xchg
cmp
xchg
test
sbb
jmp
mov
cld
push
adc
cld
js
pop
sti
and
mov
add
sti
add
xchg
dec
dec
clc
rolb
xchg
xor
rorb
loope
mov
jne
insb
add
sbb
loopne
jne
mov
pop
pop
mov
push
sbb
clc
popa
add
movsb
xchg
jge
mov
push
mov
jo
push
and
mov
js
adcb
daa
jge
adc
cmp
out
mov
sarl
mov
cmp
jmp
mov
cmpsl
loope
push
pop
jl
int3
add
subl
into
add
cmp
sbb
gs
aam
push
testl
jne
mov
pushf
movsb
dec
and
cli
push
jne
ja
les
jmp
and
dec
cmp
lahf
mov
lock
sub
push
sub
decb
inc
or
mov
into
mov
mov
inc
mov
dec
test
call
dec
jecxz
push
repnz
jno
aam
and
int
nop
and
jne
mov
push
dec
push
cmp
divb
out
inc
pop
shlb
pusha
mov
and
mov
mov
in
movsb
push
mov
pop
cmp
mov
mov
ja
jmp
into
out
push
loope
add
lock
out
dec
xor
add
add
ljmp
or
pushw
adc
rol
stc
sbb
push
mov
ret
dec
inc
and
jbe
movsl
adc
leave
and
aaa
mov
leave
pop
gs
out
sahf
in
test
aas
lea
add
mov
cmpsb
fsubrs
mov
add
xor
jmp
pop
adc
lret
iret
sub
shrb
cmp
or
notb
shlb
inc
add
test
mov
inc
mov
push
dec
imul
stos
sbb
inc
sbb
int
cmpl
dec
in
xor
pop
and
mov
adc
and
adc
andb
in
xchg
rcll
loop
jno
mov
sub
xchg
ret
js
je
dec
push
jge
jbe
pop
in
jmp
adc
data16
and
or
adc
rcll
and
push
sub
jo
adc
rolb
or
popf
sub
sub
imul
les
lret
cmp
fcmovu
js
mov
mov
mov
push
xor
rolb
dec
mov
cmp
mov
pushl
shlb
sub
or
push
pop
or
dec
or
dec
push
pop
adcl
mov
inc
in
mov
cmpl
pop
push
shrd
stc
lods
daa
cmc
and
inc
adc
or
lock
push
push
dec
enter
cmp
jl
mov
dec
sbb
add
jle
dec
dec
sbb
pop
sub
shl
push
mov
rclb
mov
add
les
test
shll
jne
fadd
xchg
ret
mov
add
mov
or
add
lcall
jno
add
jne
or
ret
or
pop
mov
push
or
jne
jne
pop
push
pusha
rorb
mov
mov
push
ljmp
fimull
lods
xor
cmp
adc
lea
adc
je
iret
sarb
lret
fadds
xchg
out
add
cwtl
xchg
fcoms
shrl
push
cld
shrb
notb
popa
inc
add
mov
lret
in
dec
add
jne
sbb
rorb
push
je
sahf
inc
gs
push
xchg
jae
out
xchg
push
jnp
hlt
jne
xor
sarb
sub
mov
adc
mov
push
push
cmp
mov
jge
fiaddl
outsb
popa
mov
adc
das
mov
jp
or
mov
inc
out
push
sbb
cmp
pop
mov
dec
scas
lcall
inc
sahf
sbb
mov
enter
clc
xchg
loopne
jg
sbb
sbb
pop
jnp
mov
js
push
cmp
push
out
add
ret
fisttpl
adc
iret
mov
lret
adc
or
inc
out
pop
sub
repnz
jmp
dec
aam
push
sar
andl
push
inc
inc
inc
lock
sbb
rolb
push
jne
dec
cli
iret
xchg
mov
or
pop
sub
sbb
jne
add
jns
xor
push
xor
fdivs
jne
or
sbb
dec
faddl
insb
jne
push
cmp
push
add
push
call
jmp
mov
mov
xor
jo
scas
adc
or
cmp
je
add
pop
enter
or
or
pop
jne
andb
je
aam
mov
or
add
add
mov
jp
clc
xchg
cmp
push
hlt
dec
jne
jnp
push
cmp
xchg
loope
cli
push
cmp
lea
call
or
je
mov
mov
and
cltd
fidivs
fidivs
inc
ja
pop
pop
sbb
in
push
mov
inc
aas
cmc
push
loop
pop
mov
inc
and
sbb
shrl
fdivl
cmp
sub
mov
cwtl
push
stc
mov
pop
cwtl
cmp
jne
call
ret
ret
movsb
insb
mov
lret
cmp
addr16
push
mov
negb
test
add
add
test
or
or
mov
and
add
rolb
rorl
setb
enter
jns
sbb
outsb
push
in
mov
dec
or
add
mov
popf
sub
js
inc
nop
out
mov
pop
dec
mov
or
mov
mov
and
lcall
xor
adc
push
lcall
insb
jo
sahf
xor
pop
pop
mov
or
call
stos
xchg
cwtl
in
xor
or
mov
dec
int3
mov
inc
cmp
fldcw
shlb
scas
sub
sbb
rol
jbe
ret
ror
add
lret
mov
and
pop
movb
sbb
or
popa
pushl
sbb
xchg
jae
dec
dec
dec
push
fadds
sbb
orb
je
or
orb
orb
pusha
push
push
shll
cmp
mov
jp
push
not
jge
xor
inc
mov
push
add
cmp
imul
cmp
gs
dec
pop
sbb
mov
and
test
mov
stos
pop
pop
sub
daa
arpl
pop
adc
out
sub
add
addl
dec
les
add
test
in
lea
xor
cli
nop
push
and
and
pop
mov
inc
sbb
rorl
sub
cmp
mov
dec
int
sbb
and
ret
mov
mov
mov
je
sti
mov
push
jl
mov
and
xor
js
xor
in
push
sub
cmp
jne
mov
test
inc
sub
push
jo
add
mov
clc
add
shl
ret
mov
sbb
pusha
and
sbb
xor
xchg
push
je
aaa
fldl
mov
jne
das
cmpl
sub
sub
or
inc
dec
adc
imul
cmp
pop
mov
test
or
je
add
test
test
fidivrs
das
call
sbb
sar
lds
add
std
dec
jb
lods
cmp
dec
jo
sub
push
mov
test
les
mov
daa
xchg
inc
scas
add
mov
stc
push
jne
mov
sub
mov
xchg
and
or
ss
cmp
je
xor
fisubl
inc
xchg
ja
fwait
aas
add
push
lahf
jo
cld
xor
fs
adc
add
sahf
loopne
sti
xor
adc
cli
js
ficoms
invd
push
mov
adc
or
pusha
sbb
pop
mov
and
push
inc
cmp
aam
add
push
movsl
sbb
sbb
jo
rclb
jmp
cmp
cmp
addr16
dec
add
mov
sbb
dec
ds
ds
inc
dec
shr
dec
dec
or
cmp
adc
mov
outsl
push
pop
or
es
push
movsl
xor
xor
xorl
pop
xor
or
lret
pop
les
sbb
jecxz
push
adc
rorb
jp
enter
repnz
jb
and
adc
mov
mov
dec
aaa
loopne
jb
sbb
lea
out
push
mov
cmp
jo
pushl
pop
scas
neg
and
mov
adc
add
mov
lock
adc
add
cmp
lock
inc
js
shlb
sbb
je
pop
cmpsl
add
mov
je
cltd
test
jae
fs
nop
xchg
inc
inc
pusha
insb
insb
or
fs
jmp
xor
loop
cmp
jl
icebp
mov
testl
je
cmp
je
popf
add
push
lea
in
and
mov
sub
lea
mov
hlt
sti
push
sub
jo
mov
inc
and
jo
pushf
jne
sbb
push
roll
push
rclb
adc
adc
mov
push
lock
fs
cld
lock
cmp
jmp
stos
ret
ret
push
push
pop
hlt
cmp
out
into
jns
push
sbb
mov
push
mov
faddl
sub
in
or
notl
sahf
mov
add
push
and
insl
inc
mov
jge
lret
sub
cmpsl
push
adc
movsb
cmp
xor
push
lock
sahf
push
flds
inc
std
and
pop
mov
loopne
push
push
test
or
xor
push
xchg
cmp
dec
mov
loopne
mov
pop
pop
mov
sbb
mov
and
shrb
jne
adcb
jae
mov
les
leave
adc
in
insb
test
push
test
popa
ds
loopne
addl
mov
xchg
xor
test
iret
xor
lock
adc
sbb
in
imul
mov
outsb
cmp
xlat
stos
or
inc
or
in
jle
cwtl
fidivrs
adc
sub
xor
and
cmp
jl
jle
pop
shll
js
push
and
push
fmulp
cwtl
dec
push
lea
inc
mov
push
out
adc
add
lea
dec
pusha
inc
ss
or
sbb
lcall
pushfw
add
in
xor
fcoms
and
orl
add
push
jge
adc
fadds
mulb
loop
pop
or
sub
adc
dec
adc
sbb
mov
fdiv
or
cmp
jp
sahf
and
fcompl
cmp
sahf
xchg
push
push
loopne
add
loopne
jo
es
gs
lds
cmpb
daa
dec
pop
xor
loopne
cmc
inc
popa
fs
add
cmp
es
mov
sahf
and
outsb
stos
push
pusha
add
mov
mov
add
mov
adc
mov
mov
or
xchg
adc
or
add
xor
mov
lods
bound
or
xor
sub
or
addl
inc
or
je
popa
fwait
pushf
sbb
lods
ja
adc
nop
push
adc
cmp
xor
adc
cltd
aam
and
xchg
sbb
cs
stos
push
lea
and
ficoms
cli
sub
push
or
mov
js
dec
inc
in
push
sub
sub
insb
push
in
inc
push
or
ja
adc
fiadds
loopne
push
pop
mov
mov
cmpl
dec
mov
xchg
lds
fmuls
aad
fcoml
jmp
dec
jp
je
push
fmull
stos
mov
xchg
pusha
xor
push
jnp
pop
in
xor
push
sahf
xor
xor
lcall
xor
xor
dec
add
fwait
xor
dec
pop
mov
movsl
add
bound
push
add
jl
push
dec
mov
sbb
and
insb
lea
push
adc
daa
or
mov
mov
cmp
jne
call
xchg
lock
or
jp
push
or
jmp
xor
test
imul
sbb
pusha
aaa
cmp
and
mov
stos
sbb
cmp
repnz
push
int
pop
fdivp
sub
pop
test
jne
mov
sub
mov
and
subl
divl
sub
lcall
scas
iret
test
adc
ja
jl
repnz
in
dec
push
clc
andb
inc
sub
push
sub
mov
adc
adc
test
cmp
sti
and
lods
mov
and
or
mov
ret
jae
fstpt
adc
fsubl
xchg
jae
or
and
stos
add
xchg
or
rcrb
inc
jg
adc
sbb
jae
pop
lret
sbbl
fdivrs
arpl
jo
or
cmp
adc
jnp
adc
out
mull
pop
loope
xchg
add
jp
push
add
push
cs
or
fcmove
int
pop
push
and
adc
adc
shll
add
adcb
test
cmp
lea
jbe
or
or
imul
push
test
subb
aaa
pop
dec
xor
call
or
rolb
sahf
push
mov
xor
cmpsb
mov
xor
sub
xlat
or
mov
xor
insl
push
push
push
or
or
pop
pop
jo
push
jbe
pop
clc
xchg
sbb
mov
mov
or
subl
xchg
lgdtl
sbb
xchg
pop
dec
sbb
sub
add
out
xor
out
inc
sub
inc
xor
sub
dec
push
xor
xor
pop
sbbl
js
or
mov
fwait
sub
cmp
dec
js
mov
adc
js
sub
cwtl
push
push
push
popa
cmp
fistl
xor
mov
rorl
mov
std
js
ljmp
shl
push
sub
dec
pop
lcall
adc
rolb
movsb
push
and
or
inc
in
jmp
test
sbb
push
add
rcrl
lods
stc
inc
cmc
inc
popa
mov
addb
icebp
inc
outsb
jmp
pushl
ret
and
mov
pop
add
push
jmp
sub
mov
mov
inc
sub
sub
roll
and
lods
imul
lods
xor
xor
mov
pop
sub
mov
shr
fistpll
gs
adc
ret
sbbb
fs
addr16
add
outsb
inc
jae
mov
xor
jecxz
call
dec
xor
pop
jo
jle
xor
push
call
fcomi
xchg
inc
xor
sub
push
fcoml
fbstp
push
insb
mov
mov
or
xchg
cmp
pop
adc
or
fwait
cmp
sub
andl
inc
rcll
shlb
leave
adc
xor
je
push
mov
or
shl
push
loopne
xor
pop
jmp
mov
ljmp
mov
push
fdiv
bound
xor
inc
inc
addr16
inc
push
adc
addb
xchg
call
dec
sbb
or
mov
jp
sub
xchg
fs
push
pop
lock
sbb
mov
push
insl
push
sub
pop
push
ret
aas
xor
pusha
cmp
jne
lock
sub
dec
ja
imul
and
subb
testb
je
jbe
cmp
or
add
jg
cmp
jl
loope
xor
std
jne
loopne
fistl
orb
inc
push
add
pop
hlt
push
push
sbb
sbbb
inc
or
mov
leave
pop
adc
xchg
push
cltd
fcmovb
cmc
mov
mov
jnp
xor
test
leave
add
mov
aas
xchg
add
mov
xor
xchg
add
inc
push
sbb
mov
dec
addr16
movsl
sarl
aaa
mov
sub
clc
xor
jle
push
jecxz
push
movsl
push
loope
ret
mov
pop
movd
lock
or
cmp
mov
cmp
cld
push
test
push
lock
mov
push
cmovle
sub
mov
inc
cmp
mov
mov
push
mov
mov
lret
jnp
mov
xchg
sbb
mov
inc
mov
mov
fsubp
sbb
fbld
neg
adc
and
and
daa
mov
ret
stos
or
mov
inc
pushf
jmp
es
xlat
dec
imul
push
pop
push
jg
mov
push
cwtl
imul
cld
or
cltd
idivl
push
cmpb
jbe
lds
add
inc
xchg
xchg
js
mov
add
ret
adc
and
push
daa
mov
jb
pop
add
or
sub
je
mov
push
fwait
iret
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
lea
lcall
inc
pop
adc
aad
or
mov
sub
outsb
jbe
js
cld
sbb
iret
adc
jp
add
and
dec
jp
pop
andl
cli
add
sub
jo
xor
lods
je
xor
push
mov
push
and
or
inc
cmp
popa
jp
sub
push
and
and
cli
sub
scas
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
bound
or
insb
mov
cwtl
adc
inc
ljmp
data16
notl
pusha
adc
jne
movsl
xor
add
shl
push
mov
mov
jnp,pn
adc
adc
sbb
sti
inc
cmp
jge
adc
setns
sbb
leave
sbb
or
jne
pop
jmp
xor
jp
pop
mov
xor
add
pop
pusha
test
movsb
xchg
jo
test
enter
xor
xchg
or
add
add
add
pop
adc
sbb
bound
shll
aas
aad
inc
imul
imul
mov
mov
cli
push
cld
sub
push
add
xchg
dec
pop
movsl
jge
and
inc
insb
shr
cmpl
inc
add
out
push
rclb
ficoms
cmp
sbb
add
dec
inc
sbb
mov
add
jg
mov
mov
inc
jmp
mov
repz
es
rolb
xchg
out
in
sbb
xchg
ss
mov
es
in
add
jne
sbb
sub
push
arpl
pop
adc
add
repnz
fisubrl
jns
hlt
sbb
pop
cmp
fdivl
dec
push
int
dec
add
inc
lods
jnp
xor
mov
insl
mov
mov
adc
das
push
or
bsf
and
push
test
jb
arpl
sub
not
bound
and
lock
push
adc
test
rorl
jmp
insl
insl
mov
mov
mov
or
inc
push
inc
push
pop
pushf
data16
xor
ds
call
add
xlat
ja
inc
addr16
test
jg
inc
xor
or
aas
and
inc
movsl
xor
je
sahf
jbe
and
adc
jne
lods
adcb
call
add
je
pop
lock
iret
jmp
push
imul
ret
and
pop
mov
mov
mov
mov
pop
adc
add
inc
xor
ds
add
jbe
sti
pop
sbb
xchg
aaa
ret
jbe
pop
sbb
es
push
mov
sahf
pop
and
or
call
jo
push
in
sbb
cs
push
or
adc
or
adc
inc
jo
sti
dec
sbb
jl
das
das
dec
inc
and
push
xchg
or
loop
test
pop
mov
push
insl
add
jo
int3
cwtl
xor
push
mov
pop
adc
cmp
hlt
lret
nop
jo
inc
mov
mov
push
loope
fwait
push
mov
addr16
jmp
adc
mov
add
adc
push
stc
sbb
jb
cmp
push
add
and
sbb
sbb
adc
shll
dec
xor
cmpsl
jno
or
fists
dec
dec
fcomps
push
dec
pop
inc
sub
xor
jbe
xchg
in
adc
xchg
mov
insb
aad
fs
xchg
dec
push
push
mov
filds
repnz
pop
testl
sbb
iret
rol
dec
es
hlt
call
dec
mov
sbb
dec
or
and
jo
cmc
sub
jle
pop
xchg
gs
sbb
jae
sub
shll
sbb
pop
jae
jmp
or
xchg
test
inc
dec
sub
or
loope,pn
or
push
je
lret
add
jl
push
idivl
mov
jl
fstps
add
outsb
arpl
inc
test
add
testb
jle
loopne
jle
xor
or
jl
neg
ret
ret
out
ret
rorl
adc
mov
je
xchg
and
fcoms
loopne
cs
adc
pop
gs
jo
push
push
insb
and
insb
js
movl
pop
pop
push
push
jl
inc
fs
or
dec
dec
pusha
outsl
and
in
bound
sbb
and
mov
cmp
mov
or
xor
or
cmp
push
jge
inc
cld
jo
ljmp
jl
jb
xorl
lret
sub
sub
in
or
cmp
add
sbb
mov
dec
push
mov
cmp
sbb
insl
push
lret
mov
jno
addl
rorb
inc
pop
out
loop
test
mov
mov
mov
adc
sub
jno
lods
test
adc
xchg
in
daa
xchg
js
mov
in
loopne
cmp
daa
pop
push
lods
mov
lret
insb
lock
push
or
lea
adc
insl
push
add
pop
rorl
inc
mov
sbb
ret
push
pop
add
shl
cmpsl
in
lahf
ret
xor
ret
lahf
adc
sti
xor
mov
gs
sbb
lcall
sbbb
inc
pop
nop
push
mov
andl
pop
xor
nop
dec
lea
je
movsb
rcr
outsb
or
je
or
sub
add
sti
das
adc
rorl
jle
dec
test
movsl
push
or
add
adc
jne
sahf
addr16
popa
or
mov
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
loop
adc
or
add
adcl
pop
aam
cld
jbe
mov
call
jmp
aam
inc
push
push
dec
je
mov
cmp
enter
dec
inc
adc
adc
es
sub
dec
mov
ds
pusha
pop
fcomps
xor
adc
pop
repnz
xor
mov
loopne
shrb
call
aad
dec
sbb
pop
popa
icebp
bound
pop
lcall
sub
ret
and
jns
and
jno
dec
je
sub
jne
sub
or
jl
pop
dec
add
adc
jp
mov
mov
add
ds
or
ret
push
adc
inc
dec
add
shrb
mov
pop
ds
cmc
xor
sbb
inc
ret
enter
cmp
dec
adc
add
push
test
mov
cmp
loopne
add
push
shr
push
push
or
and
add
adc
lds
gs
test
imul
fsubl
dec
or
ret
pusha
mov
ds
idiv
in
orl
or
push
lret
add
add
out
call
add
inc
sbbl
push
push
rcll
dec
dec
insb
fisttpl
lret
adc
or
mov
imul
fcompl
add
les
jno
xor
dec
mov
cmpl
pop
cmp
and
in
scas
inc
add
add
add
sub
adc
add
das
mov
dec
cwtl
leave
test
enter
scas
dec
je
fmul
in
add
pop
mov
and
jecxz
aad
dec
sub
std
js
lods
mov
add
ret
push
sub
in
dec
sbb
nop
push
xor
int
testl
pop
cmc
dec
lcall
dec
sbb
pop
sub
cmc
cmp
clc
xchg
push
jo
cmp
mov
push
mov
loop
rclb
aas
and
adc
movl
aam
cmovae
pop
nop
sub
das
xchg
pop
adc
in
xchg
push
push
lret
pusha
xchg
dec
adc
mov
sbb
mov
add
lods
or
sbb
sbb
leave
divl
iret
sar
dec
imul
or
scas
mov
push
cmp
mov
or
adc
rcrl
leave
clc
push
movsb
xor
and
ret
dec
jl
jl
mov
dec
pop
xor
out
xchg
mov
cs
movsl
sub
cmpsb
faddl
data16
push
daa
or
sbb
inc
push
xor
inc
rorl
pop
sub
icebp
pop
inc
fcoml
in
call
loop
in
testb
mov
adc
mov
xchg
clc
aam
jo
inc
pop
mov
push
dec
xchg
cld
sbb
adc
js
push
pop
sub
orl
addb
and
push
daa
adcb
dec
ret
rcl
xchg
lock
movl
imul
sbb
outsb
xchg
lcall
xchg
push
ficoms
sbb
dec
lahf
rcrb
sub
aaa
test
pop
and
sub
or
add
cmpl
outsl
repnz
adc
shlb
inc
inc
les
jbe
aaa
or
jl
add
add
sub
adc
xor
fldt
lods
rolb
mov
inc
filds
and
pop
push
je
jno
fildl
scas
push
gs
xchg
xchg
mov
pop
push
inc
leave
je
rolb
add
jo
fdiv
mov
in
add
imull
sub
sub
notb
add
call
inc
xor
xor
aaa
divps
rcrl
sbb
mov
xchg
mov
or
xchg
pop
adc
mov
mov
inc
xor
and
dec
daa
test
incb
in
daa
add
adcb
nop
ja
fidivrl
sbb
mov
cmp
mov
arpl
mov
mov
shlb
out
pop
push
pop
sbb
jl
push
xor
adc
jle
mov
mov
adcl
mov
data16
dec
test
add
scas
frstor
or
data16
adc
xchg
out
pop
lock
mov
xchg
lods
or
push
mov
scas
push
stos
cmp
ret
push
ja
push
mov
dec
dec
mov
cmpsl
sub
adcb
loop
lock
mov
add
push
or
push
enter
enter
ret
mov
pop
lock
or
popl
add
sub
xor
jecxz
dec
inc
mov
add
pushf
mov
add
or
sbb
lahf
arpl
xchg
pop
cmp
mov
adc
enter
jne
xor
adc
jmp
push
push
les
movsb
insl
inc
test
mov
add
mov
push
test
in
or
pop
test
rcrb
push
js
popa
fsubs
mov
aaa
xor
adc
cmp
int
sti
or
mov
sti
sarb
sbb
inc
fiadds
sbb
fsubl
std
and
mov
in
adc
iret
inc
xlat
dec
dec
xor
jne
add
and
cmp
mov
adc
pop
xor
push
xchg
mov
push
daa
lea
test
mov
add
imul
sbb
inc
adc
test
and
pusha
sub
divb
scas
inc
popa
das
jno
sub
into
jle
test
add
mov
xchg
pop
adc
push
jnp
lods
mov
lcall
ss
adc
js
or
test
pop
fsub
dec
pop
inc
and
sub
cmp
in
add
push
aaa
sbb
push
das
sub
dec
or
pop
enter
adc
imul
sub
adcl
or
or
packssdw
sti
cmpsl
int3
sub
jb
push
adc
jnp
mov
adc
loop
pop
cmp
xchg
int
in
addr16
cmp
mov
shll
xchg
loope
mov
sub
and
pop
mov
adc
mov
ds
or
or
in
push
push
pushf
lock
add
sbb
adc
aaa
test
jns
leave
nop
dec
dec
or
lahf
inc
and
and
and
daa
inc
out
or
push
lock
push
es
cmp
je
testb
mov
popf
andl
dec
mov
dec
jo
in
sbb
push
or
sti
and
les
sbb
pop
xchg
push
mov
dec
mov
push
dec
call
pop
je
mov
inc
cmp
mov
sbb
clc
mov
jle
mov
sahf
rclb
or
mov
xorl
lods
push
sbbb
add
leave
call
add
jo
rcrb
sub
adc
dec
outsb
sti
xor
outsl
sbbb
jp
jle
loope
test
mov
movb
xchg
subb
clc
pop
mov
gs
stos
or
dec
jp
lock
inc
cld
inc
adc
and
std
or
inc
lea
cmp
or
popf
std
and
shlb
mov
pop
cmc
adc
stos
cltd
push
das
pop
orl
adc
dec
or
gs
push
and
sbb
adc
imul
stos
pop
mov
dec
or
ja
fcoml
inc
adc
scas
xchg
and
sbb
nop
xor
and
xchg
add
jmp
cmp
in
or
jne
jle
add
inc
and
pusha
sub
sbb
fnstenv
sub
mov
xchg
int3
push
mov
push
roll
push
adc
lea
data16
cmp
data16
cmp
add
shll
insb
or
xchg
jne
fs
enter
jns
int
insb
inc
jne
dec
and
cmpl
add
gs
and
sbb
sti
dec
jmp
push
cmpb
cmpb
int
call
adc
mov
and
out
and
cmpsl
insl
jle
insl
push
pop
xchg
das
outsl
sahf
out
push
or
inc
cmpb
movsl
ljmp
dec
adc
dec
sub
jne
push
mov
or
popf
call
push
and
and
adc
std
mov
js
inc
pop
mov
push
sbb
into
mov
repz
jno
xor
jae
pop
pop
dec
test
mov
push
enter
lods
pop
jbe
lods
mov
push
cmp
movsl
movsl
push
or
sbb
sbb
xor
push
movsl
jb
in
add
xchg
or
mov
scas
filds
push
movsb
push
loope
jmp
add
es
sbb
mov
daa
push
dec
fcompl
dec
push
pop
cmp
add
jg
std
aaa
add
jno
iret
dec
je
cltd
fdivl
inc
in
fcomip
test
in
add
jp
in
test
xchg
call
test
in
and
mov
push
testb
or
cmp
or
loopne
cmp
add
pop
in
in
mov
loopne
loopne
add
rol
xor
push
loopne
loop
sbb
push
mov
sbb
add
cmc
add
pop
imul
and
sahf
std
ljmp
in
movsl
bound
sbb
popf
dec
pop
sub
add
sub
adc
mov
pop
out
or
fidivl
call
pop
pop
mov
inc
xlat
aaa
imul
mov
adc
add
scas
adc
pop
and
movsb
inc
mov
add
jl
inc
ja
or
rcr
cmc
xchg
aam
adc
mov
mov
cmp
add
mov
mov
js
push
gs
cmpsl
jmp
cmp
inc
add
js
ror
pushf
ds
jae
ror
dec
int
xchg
shl
sub
ret
insb
jns
or
xchg
cmp
cmp
mov
addl
add
add
push
cmp
add
cmp
push
iret
mov
adc
jl
imul
pushf
lcall
dec
or
fstl
stc
add
pop
ret
pop
scas
pop
cmp
jne
sbb
pop
mov
je
or
xchg
pop
cmp
pop
rclb
mov
add
pop
lea
push
hlt
push
or
lahf
adc
push
push
mov
loope
mov
add
lock
or
out
inc
lahf
ja
cli
popa
or
cmp
js
dec
sub
push
and
or
xor
and
iret
cmp
nop
out
into
in
or
pop
jne
add
cmpl
cmp
idivb
lods
test
repz
mov
les
les
outsb
dec
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
xor
dec
push
push
mov
jb
and
mov
push
xlat
test
mov
or
add
call
loop
push
mov
inc
lds
and
push
and
pop
int
fwait
lret
ja
dec
mov
inc
mov
arpl
or
bts
adc
enter
sub
cwtl
sub
movsb
addl
add
subl
das
mov
push
out
pusha
movsl
push
pop
repz
push
out
das
aaa
sub
add
rcll
scas
cltd
xor
leave
push
xor
enter
in
xchg
cmp
lods
dec
xorb
pop
add
mov
outsl
jno
mov
cwtl
inc
lock
add
add
xchg
mov
cld
pop
and
push
sbb
push
pop
xchg
adcb
test
xchg
xchg
in
clc
dec
sbbl
leave
rcl
and
xchg
push
sub
sub
notl
jo
add
mov
cmp
push
ret
jae
lock
pop
pop
jmp
pusha
mov
cs
inc
testb
mov
push
xchg
dec
cmpb
sub
push
lea
cmpsl
push
in
aad
std
xchg
pusha
jns
mov
adc
or
adc
les
sub
sub
repz
lock
push
pop
repnz
ficoms
in
aas
ja
push
pop
dec
rcrb
inc
int3
mov
lods
cltd
jp
push
mov
lods
mov
ret
inc
and
outsl
cmp
loopne
mov
jne
andl
aam
clc
lds
jbe
mov
lds
cwtl
sub
or
push
push
inc
mov
jmp
and
insl
cld
je
pushf
jbe
inc
mov
pop
daa
mov
sbb
xor
testl
stos
adc
dec
mov
inc
xor
sbb
mov
jle
xor
or
sub
add
icebp
push
sbbb
adc
push
iret
cmp
rcll
push
lds
mov
lds
in
jle
adc
mov
mov
mov
and
pop
adc
mov
jg
or
int
cmp
in
xor
leave
mov
mov
mov
sub
adc
add
xor
or
cmp
mov
or
sub
clc
jmp
sub
fsubs
sub
or
mov
xor
push
loopne
ffreep
mov
in
and
aad
pushf
mov
lds
lods
pop
inc
lret
stos
mov
push
rolb
sbb
lods
mov
inc
pop
fisttps
and
or
pop
scas
rorb
dec
add
das
xlat
add
pusha
scas
adc
and
fiadds
aaa
sbbl
push
mov
push
stos
test
xchg
mov
shll
xchg
insb
pop
sbb
xchg
mov
shrl
jo
push
add
popa
dec
faddl
pop
add
rorl
push
sub
xor
dec
or
push
adc
xor
or
adc
sbb
js
or
decl
and
fld
mov
sbbl
ret
sarb
in
sbb
add
sbb
or
add
cmpl
js
jnp
jo
mov
dec
adc
xor
xchg
imul
lock
xor
mov
js
or
push
hlt
test
xor
in
into
les
and
mov
je
cmc
adcl
data16
sbb
sub
jne
or
pusha
adcb
push
test
js
insb
es
push
or
test
jl
push
push
inc
or
pop
add
sub
test
ljmp
mov
sub
inc
xchg
push
cmc
or
sub
repz
ret
incl
xchg
in
ljmp
clc
rcll
sbbl
cld
pop
cld
imul
call
clc
pop
stos
mov
xchg
inc
pop
add
das
out
adc
and
lea
movsb
pop
adc
push
aam
pop
fdivrs
pop
inc
inc
cmp
jb
cmp
pop
outsl
outsl
test
in
xchg
cmp
adc
cli
jb
mov
leave
nop
sbb
dec
add
repnz
lock
loopne
or
inc
jnp
loopne
test
fisttpll
dec
inc
in
rolb
pop
gs
dec
das
mov
nop
loope
sarb
add
ret
jbe
inc
sti
jl
test
cmp
mov
sahf
jg
jecxz
push
mov
mov
sub
mov
aam
pop
outsl
and
pop
mov
add
or
icebp
jg
shrl
shr
not
shlb
push
imul
mov
push
cwtl
push
es
xor
push
je
cli
shl
inc
js
bound
jmp
or
add
ds
mov
or
xor
pop
pop
push
mov
cmp
inc
push
dec
mov
clc
fiaddl
pop
and
jecxz
push
js
clts
add
jg
or
inc
add
loopne
cli
pop
iret
fidivs
les
test
dec
cwtl
add
or
or
mov
push
push
pop
rorb
jbe
cs
pushf
push
mov
rcl
xchg
stc
mov
mov
mov
inc
sub
mov
and
cmp
cwtl
sarl
push
pop
data16
iret
inc
adc
sub
or
ss
and
pop
push
and
daa
and
add
and
inc
mov
fs
cmc
dec
loopne
cmp
or
cmp
sti
adc
arpl
imul
js
nop
movb
push
insl
leave
rcll
and
cmp
cmp
cmp
xor
push
mov
jmp
xchg
xrelease
pop
mov
rorb
push
xor
jle
dec
sub
adc
or
pop
call
xor
xchg
xor
je
testl
xchg
pop
mov
ret
jno
cmp
pop
lea
rep
imul
xor
or
add
in
out
or
sbb
cmp
jae
pushf
pop
js
xor
and
inc
sbb
sub
add
mov
and
jg
adc
pop
push
push
inc
push
push
icebp
cmp
cmpsb
xlat
push
and
push
mov
imul
movsb
mov
push
xchg
data16
fisubrs
jo
xor
sub
and
popa
lea
outsb
pop
adc
pop
ja
sbb
mov
mov
insb
xor
andb
adc
es
ja
insl
push
xor
test
mov
scas
push
outsb
sub
adc
lock
xor
or
js
dec
rolb
push
jp
xor
iret
test
fildll
mov
jae
and
pop
mov
adc
push
push
jne
popa
mov
das
cwtl
add
lea
xchg
shl
xchg
testb
push
dec
roll
push
data16
lock
mov
mov
push
arpl
adc
push
insb
and
sbb
or
imul
dec
call
decl
in
dec
or
push
push
jl
ret
dec
xchg
push
in
mov
and
mov
adc
adc
arpl
adc
cmp
test
js
add
inc
mov
sbb
roll
das
mov
outsb
sbb
and
sarb
dec
jne
xchg
jge
sbb
cmp
bound
adc
push
dec
es
jnp
inc
sbb
subps
push
mov
ja
add
pusha
cmp
dec
ss
adc
sub
in
adcb
adc
mov
mov
mov
or
mov
dec
js
adc
clc
adc
ret
addr16
adc
add
and
into
cmp
and
cmpl
jnp
and
add
mov
add
rcll
pop
add
and
push
clc
jbe
pop
mov
sbb
jo
and
out
clc
test
push
xor
dec
adc
subl
dec
xor
and
inc
or
add
movsl
mov
inc
cld
mov
sub
sar
cmp
repnz
add
rorb
call
jmp
xchg
mov
dec
dec
jg
mov
mov
sbb
and
sub
jecxz
leave
mov
and
es
adc
push
adc
in
rcl
jp
xchg
add
ret
jg
out
movsl
jnp
ret
sub
mov
fdivl
cmp
xchg
pop
mov
mov
mov
or
push
xor
dec
push
xchg
push
int3
xor
mov
mov
fstps
cs
adc
sub
adc
dec
ret
and
shr
cmp
sbb
sbb
hlt
addb
jecxz
les
jl
sbbb
pop
mov
sbb
jne
mov
push
push
lods
sub
add
push
xchg
es
jl
jno
shll
sbb
je
mov
mov
jle
scas
add
push
add
or
jne
pushf
sbb
test
adc
in
push
xor
cmp
add
lea
pop
push
adc
aaa
or
inc
jmp
push
in
push
mov
ss
mov
stc
adc
in
fsubrs
incb
shr
pushw
mov
jae
push
dec
shll
jae
jb
jae
shl
out
xor
lret
adc
es
hlt
jae
and
mov
jae
jg
aad
add
ret
addl
or
mov
bound
or
mov
icebp
dec
push
pop
jb
push
inc
cli
sub
inc
push
nop
push
loop
add
add
adc
movsb
sbb
mov
rolb
xchg
cltd
sub
mov
push
cltd
jle
xor
aaa
xchg
adcb
flds
mov
in
cmp
cltd
fs
push
into
sbb
pop
cmpsl
add
push
adc
cli
paddsw
xchg
jne
fdivs
test
shlb
or
test
sbbl
shr
or
jbe
add
rorl
mov
push
outsb
shll
mov
in
call
sbb
pop
mov
push
push
pop
xchg
mov
inc
cmp
pop
and
ds
lock
xchg
out
mov
subl
jne
adc
xchg
arpl
cmp
and
add
or
push
cmp
fsubs
and
or
xchg
inc
sub
xchg
adc
sbb
arpl
adc
arpl
cmp
nop
or
sub
sbb
insl
shll
mov
dec
insb
jmp
inc
ret
sub
fwait
adc
cmp
dec
lret
and
inc
movl
fistpll
das
aas
or
sbb
push
pop
movsb
cmp
push
fistl
sub
je
je
and
inc
lods
fucomi
sbb
loope
or
sub
sub
adc
pop
pop
ret
and
inc
in
loop
dec
xchg
mov
adc
test
inc
out
pop
xor
nop
fwait
dec
int3
push
and
or
shrl
xchg
sbb
xor
lock
xchg
jg
and
sbb
cmp
cmp
inc
push
cld
sub
push
cmp
mov
sub
sub
subb
test
bound
or
push
cmp
jle
cmp
pop
mov
cmp
inc
push
add
and
mov
add
aas
xor
or
xor
mov
mov
lods
cmc
sbb
lea
leave
jmp
xor
or
cmpsb
xor
in
pusha
adc
cs
push
mov
out
push
stc
adc
adc
leave
in
fs
sbb
pop
incb
xchg
adc
mov
or
jne
and
mov
fmuls
push
fsubrl
pop
inc
mov
imull
mov
orl
mov
and
in
fnsave
push
dec
imul
daa
push
sahf
inc
adc
rolb
ss
sti
adcb
lds
imul
mov
imul
cmpsl
cltd
movsb
lahf
enter
je
int3
inc
out
jns
loopne
in
aam
jo
sbb
sbb
mov
or
pop
lock
cmp
incb
std
sbb
hlt
mov
and
mov
xchg
hlt
ja
push
inc
pusha
stos
movsb
jo
enter
pop
and
pusha
mov
in
rol
inc
cmp
pop
add
dec
push
mov
pop
add
xchg
rcll
sbb
shlb
pusha
insl
add
lock
pop
jp
punpckhdq
sbb
add
cmp
add
jne
sub
or
adc
mov
mov
bound
dec
aaa
mov
lock
vpcomb
push
js
add
xchg
sbb
pushf
lcall
adc
mov
fsubl
push
adc
ds
mov
daa
shl
fisubrs
push
or
aas
xchg
mov
push
add
dec
xchg
jo
rclb
sbb
xor
or
add
push
jne
push
cmp
mov
push
cmp
push
inc
xchg
sbb
mov
xor
pushf
dec
movsl
popf
in
dec
sub
pop
jb
les
sahf
pop
adc
push
inc
add
mov
test
inc
mov
push
test
xor
aaa
lds
sarb
pop
pop
and
sbb
push
pop
pop
sub
test
push
xorb
xlat
and
jns
sti
bound
pop
inc
roll
or
mov
mov
xchg
dec
dec
or
imul
imul
lahf
dec
rol
insb
mov
xchg
test
add
lock
inc
nop
scas
cmp
dec
fmull
rcll
into
add
xor
mov
inc
popf
add
add
aam
test
lcall
mov
push
add
lock
pusha
sub
adc
stos
popf
push
leave
popa
cmp
xchg
or
mov
mov
mov
mov
mov
loope
jno
lcall
cs
push
adc
ret
mov
mov
xor
andb
xor
cwtl
add
or
dec
lahf
mov
cmp
lret
nopl
push
stos
pop
jnp
dec
push
out
add
xchg
or
inc
in
adc
sub
push
mov
fdivr
aam
add
sbbl
insl
or
lar
icebp
pop
push
pop
mov
jecxz
scas
inc
mov
lcall
and
xor
pushf
cwtl
or
into
cmp
adc
dec
or
push
ret
xchg
dec
pop
clc
jl
mov
adc
dec
dec
or
adc
test
loopne
jbe
jmp
lahf
adc
addb
nop
adc
push
add
pushf
add
xchg
cld
in
fwait
inc
add
push
fldz
fdivrl
sbb
pop
mov
inc
scas
sbb
fidivs
outsb
int3
add
jo
mov
mov
push
inc
cmpsl
loopne
ret
jg
pop
add
movsl
and
push
xchg
aas
pop
or
dec
cmp
add
fneni(8087
std
adcl
mov
rorb
push
xchg
sub
leave
int
add
and
loop
adc
add
xchg
pop
push
push
mov
data16
jmp
push
iret
jmp
stos
mov
sarb
mov
inc
jmp
or
dec
push
cmp
je
sahf
inc
inc
incl
pusha
mov
cli
xorl
push
mov
popa
push
xchg
sub
shrb
mov
mov
clc
bound
push
jno
movsb
xchg
mov
pop
popf
fwait
jo
mov
jmp
popa
mov
in
loope
es
adc
push
ljmp
ret
inc
dec
cmc
les
dec
into
int
sbb
xchg
hlt
sbb
jns
adc
or
adc
sub
dec
jb
jecxz
push
sub
loopne
jmp
lods
xor
jmp
push
pop
and
loopne
dec
mov
shll
and
lahf
pop
sbb
sbb
in
or
add
mov
sub
fs
daa
xchg
movsb
cmp
add
pop
loope
dec
imul
daa
sbb
xchg
push
test
lods
mov
call
sub
into
and
popa
add
add
sub
sub
add
and
shlb
roll
xchg
mov
testl
or
rclb
lea
fdivl
loope
push
aam
and
or
out
loopne
mov
arpl
mov
loope
push
or
add
adc
pushf
outsb
sub
and
mulb
mov
sti
push
pusha
mov
mov
mov
mov
pop
pop
outsb
std
push
xor
sub
push
aam
and
outsb
mov
push
outsl
lods
add
into
ds
xlat
push
add
adc
add
mov
mov
inc
outsl
mov
in
lahf
jp
das
and
and
ds
adc
les
xchg
jmp
add
add
arpl
cmpsl
sub
cmp
and
daa
add
xor
sahf
in
push
adc
or
lahf
sbb
mov
pop
adc
lds
mov
lahf
and
enter
int3
popf
push
test
dec
push
test
or
xchg
rorb
push
push
sbb
pop
adc
loope
cmpsb
pop
mov
mov
rorl
and
inc
sbb
cmpsl
inc
mov
jno
adc
or
adc
es
jp
mov
inc
sbb
mov
stos
xor
inc
ret
push
pop
repz
lods
push
fdivs
adc
jnp
dec
dec
movsb
push
ja
push
cli
jo
add
mov
push
or
mov
mov
pop
inc
cwtl
sbb
sbb
sbb
lds
mov
sub
outsb
push
ljmp
xchg
or
rclb
call
mov
dec
add
shlb
inc
add
mov
out
cmpsl
in
dec
or
shr
pop
dec
mov
add
inc
cmpsl
lret
push
sub
add
movsl
inc
cld
rcrl
mov
sbb
xlat
push
scas
jbe
and
and
rclb
lea
es
pop
ss
inc
test
nop
mov
test
mov
mov
lret
or
fisubs
cmp
and
fwait
dec
or
in
arpl
and
xor
jnp
mov
pop
incb
pop
xor
mov
or
xchg
xchg
ja
mov
push
push
sub
mov
dec
js
sbb
data16
int3
mov
pop
sahf
dec
xchg
imul
xchg
fadds
sbb
xchg
lea
cmp
inc
xchg
lret
sub
adc
dec
outsl
shlb
lret
or
call
ret
insl
loop
mov
in
xchg
xchg
inc
les
or
clc
faddl
testl
test
clc
inc
push
push
cwtl
jmp
jmp
aad
adc
scas
dec
xor
xor
jns
or
lods
xor
ljmp
mov
xor
enter
push
add
neg
sti
cwtl
mov
shr
or
rolb
jo
nop
ret
add
xbegin
pop
inc
push
inc
imul
pop
or
push
mov
popa
test
add
mov
lahf
fistl
xchg
lock
pop
je
sub
dec
sub
xchg
jne
cmp
jmp
push
and
in
mov
pop
mov
nop
xchg
cmpsb
adc
mov
or
pusha
cld
mov
loope
mov
dec
test
sub
call
test
mov
or
fdivrl
inc
daa
clc
mov
enter
in
mov
mov
or
dec
jp
movsb
rclb
xor
dec
js
test
or
jbe
cmp
jmp
imul
lcall
mov
and
ds
movsb
cltd
lea
dec
adc
adc
aaa
mov
jge
mov
push
js
hlt
fcompl
cmc
or
lea
jbe
xor
dec
stc
jbe
mov
xchg
sub
mov
jmp
mov
lods
scas
outsl
push
pop
jg
sbb
mov
cwtl
jp
jge
mov
add
sub
adc
mov
flds
cmp
mov
sub
mov
xchg
sbb
sbb
sti
pop
and
jge
cmc
sbb
pushl
rclb
ret
lcall
das
inc
xor
pop
in
or
pushf
add
movb
pop
adc
and
xor
jle
in
cmp
andb
cmp
mov
and
subl
addr16
sub
call
jmp
xorl
cld
dec
addb
add
pop
mov
lret
adc
mov
outsl
xlat
push
push
repz
test
adc
mov
je
roll
add
jo
push
movsl
and
inc
testb
mov
les
pop
cmpsl
mov
fcomi
dec
and
and
icebp
sbb
ret
inc
fisubs
inc
add
push
jno
xlat
or
push
pop
movsb
fwait
movsb
mov
cld
sub
mov
shll
mov
mov
inc
test
dec
jno
stos
incb
fldcw
ss
out
mov
cmp
leave
dec
xchg
mov
or
or
mov
mov
mov
dec
or
test
out
sti
pop
sub
mov
mov
add
and
hlt
lea
mov
push
xor
pop
inc
inc
inc
popf
dec
and
push
jl
lret
push
sbb
xchg
stos
dec
pop
push
das
je
cmpl
enter
adc
int
inc
mov
pop
sub
push
idivb
and
fs
repz
add
inc
incl
xor
testb
xchg
push
add
movsb
dec
push
fsubr
and
push
pop
push
mov
push
and
pop
ja
jecxz
pop
push
add
xchg
cmp
dec
pop
sbbb
inc
mov
call
pop
test
sub
jns
mov
adc
bswap
xor
xchg
adc
call
rcrb
push
in
or
dec
cmp
mov
cmp
adc
mov
inc
test
and
scas
sbb
cmp
in
add
pop
or
add
cmp
call
sbb
decb
or
scas
inc
mov
aaa
or
nop
mov
mov
jmp
jns
inc
outsb
lock
cmp
incb
adc
sub
sbb
cs
aad
xorb
pop
ret
pusha
dec
xchg
nop
adc
fmuls
in
shll
dec
fs
ret
test
js
mov
and
inc
fs
pop
push
cmpsl
or
nop
ret
mov
or
lods
pusha
std
les
mov
adc
je
data16
hlt
add
imul
mov
jge
jle
mov
and
jg
outsb
adc
insl
fldt
or
outsb
add
push
setle
call
inc
adc
jle
xchg
sti
xor
or
push
outsb
and
pop
bound
fisubs
sbb
gs
sbb
lock
orb
or
ja
shr
jge
cmpsb
dec
cmp
or
jp
sbb
sub
sub
fs
inc
jmp
inc
pop
jns
jns
addr16
or
dec
and
jne
je
les
add
add
iret
orb
and
add
into
test
inc
mov
push
push
add
or
sub
lret
jmp
test
cmpsb
adcl
inc
mov
cwtl
pop
jns
jnp
or
mov
fwait
les
and
call
insb
in
inc
adc
in
fdivp
and
loopne
push
dec
iret
mov
add
js
jbe
push
add
sbb
pop
adc
push
mov
mov
movzwl
dec
sub
push
push
mov
fldz
or
jl
xchg
mov
aam
in
scas
lods
sub
adc
in
pop
stos
jp
sbb
push
int3
adc
push
ror
push
lcall
lcall
inc
mov
jns
push
lea
push
cmp
fcomp
xorb
sbb
pop
add
and
sub
or
out
jo
imul
andl
fcoml
shlb
jns
or
pushf
in
push
pop
imul
sub
rcl
repnz
push
adc
xorl
push
dec
out
add
popa
inc
add
jl
sbb
xchg
outsb
ljmp
in
lods
jo
xlat
jg
cwtl
add
sub
nop
cltd
xchg
add
mov
fcmovne
cmp
add
cwtl
sub
pop
jo
pop
add
test
jge
mov
inc
inc
lcall
and
shlb
pop
outsl
push
js
and
sbb
xchg
test
aad
imul
add
cwtl
fsubs
lcall
mov
adc
lods
mov
mov
cmp
push
orl
test
insb
imul
mov
dec
lcall
fwait
mov
sub
xchg
ret
jmp
adc
nop
cs
xor
lahf
or
rcr
lcall
test
push
adcl
mov
pop
xor
cmc
inc
mov
push
test
hlt
push
into
cmp
test
inc
arpl
rolb
adc
add
je
jbe
or
pop
aaa
cli
and
pop
jno
inc
xor
sbb
sub
test
gs
sbb
das
dec
pop
cmp
inc
push
lea
sub
imul
scas
lahf
adc
ret
popf
cltd
sti
jle
sub
mov
add
cmp
xlat
push
call
mov
lret
add
inc
or
mov
jp
push
es
sub
sbbb
xlat
popa
xor
imul
in
and
mov
jle
or
jno
add
sub
loope
sbb
mov
lods
cmp
out
test
mov
dec
push
pop
pusha
insl
lea
or
inc
icebp
mov
mov
xor
loop
xchg
xor
shr
add
fiadds
adc
in
loope
mov
sub
aad
or
ljmp
mov
cmp
call
dec
pop
pushl
add
jmp
add
dec
cmp
inc
xchg
mov
and
aaa
arpl
mov
loopne
inc
inc
movsb
adc
mov
sbb
imul
rolb
and
pop
push
inc
xor
stc
add
xchg
mov
or
call
sarb
mov
nop
and
xchg
test
and
rorl
pop
loope
imul
mov
movhps
xor
inc
inc
insl
xor
idivl
adc
or
dec
mov
scas
stos
dec
jl
fidivrl
faddl
inc
ficompl
xor
mov
xchg
les
rclb
cltd
cmp
jo
mov
sub
adc
icebp
push
leave
sub
arpl
inc
mov
push
jb
sub
adc
mov
jns
lods
mov
add
inc
enter
sbb
stos
cbtw
arpl
add
outsb
cmp
sti
adc
jg
and
stos
ret
xchg
push
leave
or
scas
and
push
and
into
add
pop
cmp
lcall
mov
add
shld
xchg
cmp
mov
leave
or
add
and
cld
jge
mov
add
fmull
cmp
dec
cmp
gs
je
push
xchg
cwtl
jno
add
cmpsl
sarb
ret
push
pusha
int3
js
movsb
aam
sub
mov
cs
test
pop
push
add
jmp
jge
xor
add
mov
orl
pusha
int
adc
sub
cmp
mov
nop
pop
dec
aas
mov
push
push
mov
and
pop
fnsave
xor
lock
cmp
push
adc
jmp
insl
add
sti
and
xor
sub
xchg
clc
inc
mov
mov
add
test
push
daa
popf
mov
jo
dec
cmp
lock
push
dec
xor
push
push
mov
sbb
int3
ds
or
js
push
cltd
nop
inc
push
femms
or
js
mov
popa
sub
add
adc
addl
mov
adcl
xor
ljmp
inc
sub
xchg
mov
push
repz
sahf
out
int
push
pop
fcoms
xchg
lods
xchg
xchg
or
dec
inc
in
inc
es
or
push
push
or
mov
dec
push
inc
cmp
jns
mov
mov
or
adc
in
xor
mov
add
mov
je
sti
movsl
mov
lods
cmc
test
fsubrs
aam
test
inc
test
inc
adc
pop
and
shl
in
jb
roll
cmpsb
mov
add
rcl
imul
fdivl
xchg
loopne
add
cmp
imul
xchg
dec
push
push
xor
sub
or
and
sbb
pop
sub
push
push
pop
stos
mov
inc
cmp
cltd
sbb
subb
cwtl
xchg
outsl
mov
popa
frstor
mov
push
pop
dec
sbb
ss
push
add
cld
push
inc
lock
mov
mov
arpl
cli
ret
adc
jp
pop
sub
repz
jnp
ret
push
add
or
fs
js
jb
enter
fdivs
add
outsl
dec
lock
cmp
push
push
sub
dec
ds
dec
xor
inc
add
pop
mov
jns
push
sti
push
add
sbb
jae
pop
pusha
dec
imul
inc
es
inc
test
insb
or
lret
push
add
add
aam
shrl
dec
jl
add
fldcw
lods
pusha
sub
stos
test
inc
imul
pop
push
xchg
add
jns
lcall
mov
mov
scas
xchg
lcall
xchg
mov
push
dec
nop
in
mov
or
mov
mov
mov
mov
repz
sbb
xor
dec
fdivrl
xorb
push
std
cmp
add
inc
cwtl
cmpsb
push
jo
adc
out
jns
orb
inc
push
mov
mov
cmp
mov
push
lock
add
nop
les
sub
shrl
lods
mov
cli
push
incl
lods
shl
out
addl
jne
sahf
push
xchg
sbb
and
add
mov
xchg
jl
adc
add
and
cmp
push
sbb
add
push
adc
mov
adc
dec
cli
inc
jge
fcoms
add
mov
lcall
sub
xor
adc
dec
xor
and
add
ds
jl
orb
lea
insb
je
sbb
outsl
inc
fists
dec
std
sub
jne
push
mov
test
lret
pusha
cmp
and
sbb
sub
mov
xor
sub
dec
les
leave
das
orb
add
lods
insl
jo
bound
xor
test
xchg
add
sub
add
push
inc
jcxz
jo
cmp
ja
mov
sub
popa
xchg
adc
mov
lods
jne
mov
xor
clc
or
mov
lcall
clc
push
mov
loop
pusha
out
mov
dec
shrb
movsl
pusha
mov
loope
mov
call
cwtl
xchg
cmp
xchg
roll
mov
in
cmp
add
lcall
in
jo
and
and
clc
loopne
mov
loopne
inc
and
lahf
mov
cmc
push
jne
test
test
decb
imul
inc
andl
and
push
imul
jmp
push
sub
dec
sbb
push
cmp
and
mov
das
cmpsb
not
rclb
gs
mov
xor
test
adc
xor
pop
rcrb
test
adc
mov
ljmp
les
imul
clc
arpl
xchg
add
sbb
movsl
or
adc
xor
mov
adc
jge
push
pop
mov
jecxz
push
jo
pop
xchg
movsb
cmp
loopne
data16
inc
ret
jb
ret
dec
push
jecxz
jne
and
or
punpckhdq
xchg
and
mov
pop
in
fisttps
pop
call
pop
and
ja
push
push
fwait
sbb
adc
or
addr16
pop
mov
bound
add
sub
iret
fs
repz
fwait
xchg
add
cmp
test
push
jl
pop
push
inc
jae
jne
pop
and
cmp
imul
sbbl
sbb
push
and
enter
cmp
pop
xchg
rorl
unpcklps
pop
jecxz
ds
call
pop
add
sbb
add
xchg
int3
xchg
inc
daa
nop
mov
or
inc
sub
xchg
sbb
repz
aam
add
push
das
or
cmpxchg
cmp
fbld
jmp
fldl
jp
push
shll
lret
sbb
sbbl
aad
lock
stos
mov
sbb
nop
mov
subl
movsl
push
push
movsl
out
faddl
aas
xor
fstl
cmp
loopne
outsl
sub
xchg
jp
fldl
pop
fsubr
pop
faddp
andl
pusha
insl
mov
sbb
xchg
push
ret
outsl
xchg
adc
fsubrl
test
das
daa
push
or
mov
adc
lods
add
test
add
pop
adcb
sbb
sbb
and
jge
jg
xor
add
mov
mov
out
xor
mov
sub
fiadds
iret
sub
test
mov
or
jmp
loope
cmp
dec
push
push
inc
inc
test
loope
xchg
mov
adc
mov
inc
out
rolb
std
lcall
mov
sub
mov
int3
dec
sbb
call
add
leave
sub
rclb
js
out
pop
jne
pop
in
sub
mov
add
into
movsb
lock
and
cmp
jmp
mov
cmp
jge
and
dec
add
inc
and
sub
movl
subb
pushl
push
add
adc
adc
and
imul
cmpl
xchg
pop
add
cmp
sub
pop
and
adc
mov
pop
or
cmp
inc
fldl
or
imul
inc
add
xchg
add
popl
repnz
mov
adc
sub
data16
das
mov
movb
pop
add
sub
pop
rorb
jo
jmp
cmpsl
lods
lods
cmpsl
xchg
sub
push
cli
inc
mov
fs
mov
jno
adc
jmp
or
ret
mov
or
decl
inc
adc
lea
jns
cmp
pop
xchg
jae
or
int3
addl
xor
xchg
shlb
mov
or
xchg
pop
lahf
dec
xchg
jmp
movsb
inc
xchg
xchg
cltd
adc
jo
or
jge
add
fldcw
pop
jle
and
or
add
in
mov
loope
arpl
xchg
sahf
sbb
fnstsw
add
dec
and
adc
dec
dec
sbb
test
mov
cmc
out
sub
pop
stos
xor
and
insl
gs
xor
fcoms
icebp
or
dec
add
mov
add
lds
js
subb
push
inc
insb
add
addl
mov
dec
mov
fsubl
inc
aam
mov
ret
push
cld
ret
fxch
inc
add
lds
mov
mov
shll
mov
mov
ret
pop
enter
mov
xorl
push
adc
jno
xor
and
arpl
rcl
cmp
lods
mov
pop
push
add
cs
pop
inc
xchg
jb
inc
sub
enter
push
lret
sub
mov
lea
inc
popa
push
xchg
clc
sub
sbb
js
shl
mov
and
adc
lock
mov
loop
bound
repz
gs
pop
in
push
hlt
dec
dec
dec
or
aas
lock
push
push
adc
mov
fwait
stos
mov
adc
inc
daa
jp
stos
mov
js
insl
out
enter
adc
and
push
inc
sub
shl
xchg
jno
push
add
leave
rclb
xchg
daa
xchg
pop
pop
xchg
in
mov
clc
test
xchg
mov
push
jl
dec
ja
mov
xor
and
or
sti
les
imul
xchg
inc
inc
push
dec
enter
push
je
push
lods
jmp
jg
mov
mov
add
lret
or
add
cltd
ja
mov
xchg
lret
cmp
jge
hlt
lds
add
ret
inc
xor
lcall
push
adc
leave
add
std
dec
ret
adc
mov
mov
push
imul
or
push
lret
call
push
and
ljmp
or
lods
in
xor
mov
sbb
dec
lea
add
dec
dec
jp
dec
push
mov
shrb
push
bound
jne
enter
in
cmp
fisubrl
sub
pop
or
or
mov
jl
mov
add
js
in
mov
clc
push
fistpll
pop
lods
xor
loopne
orl
test
jp
aaa
sbb
mov
mov
insl
movb
and
add
mov
cwtl
inc
inc
sti
push
cmc
jmp
cmpl
xor
popa
int
add
pop
shlb
aaa
xor
ljmp
clc
test
dec
arpl
xchg
or
out
rorb
cltd
pop
xlat
jmp
insl
adc
adc
xchg
push
imul
push
sbb
test
je
loopne
push
hlt
push
outsl
adc
test
mov
test
xchg
inc
insb
or
xor
push
cmp
or
lods
fwait
ljmp
cmp
call
cs
adc
cmp
or
mov
iret
sub
sahf
dec
xchg
shlb
sbb
pop
mov
leave
test
xor
xchg
lds
popf
dec
push
push
dec
or
xchg
xchg
inc
movsl
scas
xor
aas
sbbl
aaa
push
in
cmp
orb
inc
push
shll
xchg
aas
xor
addb
jne
or
or
xchg
lock
sub
cmp
sub
pop
add
push
cmp
sbb
push
setl
xor
idivb
or
lahf
jnp
add
test
mov
mov
lret
repz
or
inc
andb
and
xchg
push
fisubs
adc
push
mov
loopne
mov
jle
into
daa
mov
mov
push
mov
in
roll
fcoms
pop
fsubr
aam
lods
imul
xor
dec
cmp
stc
enter
xor
add
mov
sbb
in
js
sub
ret
fmuls
xchg
xor
inc
int3
mov
cmp
mov
or
mov
icebp
jne
lcall
xorl
push
sti
or
nop
dec
enter
jo
add
adc
sub
rcr
push
add
std
leave
sbb
enter
jbe
test
push
mov
push
pop
jne
add
pop
cmp
ret
sub
and
clc
jl
and
sub
int
xor
dec
sbb
rcrb
repz
loopne
rorb
pop
dec
add
dec
leave
pushf
jl
nop
loopne
inc
dec
fwait
iret
xor
xchg
sbb
add
and
push
les
push
sbb
inc
add
jb
testl
sbbb
or
dec
cmpsb
ss
lcall
aam
clc
pop
sbb
sarb
shl
mov
lahf
or
mov
cmc
mov
fs
push
stc
inc
scas
ljmp
pop
ljmp
pop
pop
push
push
test
stc
cmc
adcb
insl
bound
das
jnp
ficoms
jne
into
push
jb
enter
or
leave
or
mov
pop
mov
idivl
xor
add
sbb
in
add
setg
test
and
or
loopne
shlb
sbb
push
add
push
hlt
jge
or
or
in
inc
lock
popa
scas
pop
aad
orb
call
jp
or
cmp
shlb
movsb
in
and
rcrb
dec
mov
mov
fistps
ds
xchg
xor
call
aaa
jmp
roll
movsb
shrl
sub
mov
or
inc
sarb
dec
faddl
mov
mov
xchg
push
cmpsb
mov
pop
push
push
sbb
scas
jecxz
cmp
fld
rcr
push
arpl
shrl
int3
ret
jb
enter
lods
daa
sbb
outsl
clc
inc
das
lret
mov
data16
jno
dec
loop
pop
jmp
push
inc
jno
push
shrb
mov
lahf
cmp
cmp
lods
mov
push
dec
je
sub
loopne
test
xor
les
or
pop
sarl
and
pop
popa
pop
movsb
pusha
cs
push
xor
shll
xor
cmp
push
or
loopne
jg
lds
lock
xor
lds
xor
mov
loop
cltd
gs
adc
pop
add
in
sub
shrl
pushf
xor
and
pop
imul
bound
loope
popa
fidivrs
je
jl
push
rcl
push
ficoms
inc
jmp
adc
mov
add
cmp
sbb
sbb
mov
mov
adc
add
cmp
mov
mov
dec
jg
xor
inc
and
xchg
sbb
xchg
jge
loop
loopne
fbld
je
mov
and
insb
aaa
push
dec
xor
adc
lea
pusha
notl
pop
pop
cmp
std
lret
sub
push
xor
pop
add
inc
loope
cmp
add
iret
jnp
cmp
inc
inc
dec
push
sbb
push
and
mov
or
push
cmp
jle
pop
sbb
jbe
clc
insb
sbb
inc
andl
dec
xchg
dec
test
adc
xchg
sub
aaa
pop
lea
ficomps
xchg
xorl
push
fs
push
das
mov
pop
or
loopne
and
rclb
xor
call
ficomps
sub
xor
jno
aas
sbbb
and
cmp
sub
cmp
pop
or
add
loop
or
or
xchg
mov
push
push
push
inc
xor
in
or
std
sub
push
cmp
cmp
in
in
jl
xor
push
xor
fdivs
and
repz
adc
add
xchg
pop
or
or
ret
jb
or
jmp
cmp
or
inc
cmp
dec
jne
add
sub
cmpsb
mov
je
adc
adc
add
push
shlb
iret
out
jle
jl
dec
ret
push
inc
ss
adc
and
aas
push
sub
pop
and
lock
orl
and
inc
pop
adc
jecxz
xchg
push
and
cmc
mov
push
push
jne
xchg
mov
sbb
notb
addr16
nop
push
push
inc
mov
rolb
mov
imul
dec
inc
dec
add
aaa
jbe
addb
cmp
push
pusha
aaa
inc
jl
pop
ret
pop
pushf
xor
ss
sub
add
pusha
dec
sub
ds
inc
sbb
test
pop
rolb
sahf
cltd
lea
pop
movsl
mov
mov
inc
mov
fsts
jns
je
sub
or
or
dec
pop
js
and
pop
cmp
jl
xor
lret
into
xor
or
inc
dec
dec
cmove
fsubs
aam
in
sub
dec
push
jo
sub
cmpb
es
jl
addr16
ja
insb
push
pop
enterw
rorb
fldt
std
mov
mov
push
pop
je
push
sbb
mov
cmp
inc
pusha
pop
inc
cmp
or
mov
adc
push
xor
xchg
in
xchg
loopne
cltd
cmp
je
or
jns
pop
sbb
repnz
push
jmp
push
sbb
data16
je
jl,pt
mov
jmp
int
stos
xor
sbb
lock
jne
jl
push
adc
das
sub
orl
gs
xor
mov
cmp
insb
lea
rcll
cs
or
xchg
outsb
add
mov
push
pop
and
xor
les
ljmp
xor
push
inc
add
gs
or
stc
rcrl
pop
add
nop
xor
das
or
lods
pop
push
movb
inc
mov
or
and
insl
cld
mov
lock
push
add
xchg
stos
push
clc
and
clc
mov
and
xchg
ljmp
adc
pop
mov
daa
dec
in
pushf
insb
add
add
sbb
rolb
in
das
add
jge
fldl
xor
add
add
sbb
mov
mov
mov
jle
pusha
adc
test
adc
iret
aas
mov
adc
mov
and
pop
ret
mov
push
ret
dec
cmp
loope
push
jp
lret
ja
sar
mov
jg
fcmovnb
mov
push
inc
ss
or
mov
pop
insl
popa
out
mov
adc
cmpl
cmp
lods
dec
inc
add
or
push
cmp
rclb
xchg
inc
xchg
pop
mov
sub
adc
fidivrl
push
cmp
adc
data16
jne
adc
push
jp
add
mov
cwtl
dec
je
stos
popf
jnp
andb
dec
mov
mov
ret
and
pop
sbb
call
sub
push
or
aaa
cmc
adc
dec
jecxz
and
mov
dec
lea
pop
fsubr
mov
divb
jmp
lret
add
insl
fcomp
dec
sub
or
cmp
inc
shrb
jne
push
jmp
cmp
xchg
mov
and
push
sti
bound
sub
and
sbbb
and
mov
in
xor
movsb
imul
mulb
clc
inc
adc
xchg
push
and
adcl
adcl
mov
pop
inc
mov
cmpsb
shr
adc
scas
fisubl
mov
ljmp
push
mov
loop
push
les
lcall
jge
mov
cmp
iret
or
inc
insl
inc
sub
sbb
cmp
sbb
imul
jae
dec
test
dec
sahf
mov
test
mov
add
jecxz
dec
int
scas
add
shlb
jne
mov
mov
xchg
jecxz
pop
xchg
inc
pop
cltd
pusha
inc
pusha
rorb
add
pop
push
or
jp
push
or
cmc
scas
or
or
test
pop
stos
inc
loope
shrl
fwait
pop
adc
and
jns
push
stos
fstpl
scas
popw
movsb
mov
mov
jmp
pop
xchg
adc
test
icebp
dec
pop
dec
insl
lea
sub
adc
cmp
ret
stos
pop
daa
or
nop
loope
and
add
jp
push
add
and
test
pop
ja
inc
dec
push
xor
call
push
mov
push
nop
inc
sub
and
insl
push
inc
popa
je
dec
push
arpl
aam
fisttpll
dec
push
inc
adc
push
add
inc
cmp
cmp
mov
stos
xorb
les
cmp
iret
jge
or
sub
inc
jmp
sub
aad
adc
mov
stos
inc
int
ret
loopne
dec
in
dec
mov
mov
sub
loope
mov
push
sub
test
jmp
popl
ja
movsl
rcl
add
and
mov
add
and
scas
dec
jae
pop
or
xlat
sub
outsb
gs
pop
adcb
or
add
jbe
ret
push
gs
sub
or
push
aad
imul
xor
jmp
inc
call
push
pop
das
sarl
inc
jle
call
sub
jno
add
lret
mov
sub
outsl
stos
add
cmp
fldenv
pop
ror
jae
or
jg
jbe
sbb
jmp
inc
dec
or
shr
movsl
jg
cmpl
popf
shrb
pop
add
imull
pop
add
daa
nop
jecxz
jl
movl
inc
gs
jnp
popa
ret
cmpl
lahf
sub
xchg
repz
jo
and
sarb
rclb
xchg
enter
icebp
cmp
repnz
jecxz
int
fdivrl
jmp
inc
lahf
or
cltd
mov
inc
cmp
rolb
jl
push
push
push
adc
sahf
bound
add
sub
push
call
push
mul
pop
sbb
xor
hlt
stos
adc
lea
mov
adc
dec
mov
mov
scas
mov
add
in
add
adc
add
push
add
in
in
out
shlb
fbstp
jmp
pop
xchg
cmpsb
push
xor
jnp
mov
push
pop
add
or
jl
nop
in
xchg
call
xchg
aam
cmp
or
add
add
stos
xor
or
or
xchg
das
push
push
xchg
push
jnp
scas
sbb
jb
push
push
pop
push
cltd
movsb
xor
je
add
insl
inc
xchg
add
es
sbb
xorl
lock
rorb
mov
mov
adc
xor
call
int
mov
or
outsl
sub
jmp
push
and
pop
insl
popa
push
icebp
inc
and
adc
lcall
aad
mov
sbb
add
inc
pop
or
and
cmpl
mov
hlt
cmp
cmp
cmp
or
push
int
mov
lea
nop
stos
xor
jmp
pop
insb
mov
push
adc
daa
mov
add
xchg
notb
xor
push
in
sub
out
mov
push
cmp
mov
adc
gs
jl
fsubs
mov
test
icebp
leave
add
cwtl
dec
out
jg
or
or
push
add
push
push
mov
pusha
push
push
xor
or
jo
inc
push
jb
adc
dec
insl
pushf
adc
jno
test
inc
scas
or
or
test
arpl
sub
je
xor
js
and
push
in
rorb
push
cli
ss
gs
enter
sbb
test
or
mov
std
daa
in
inc
inc
dec
hlt
add
rolb
push
test
push
push
leave
test
femms
sub
popl
call
lock
add
jae
add
sbb
add
mov
mov
inc
or
add
adc
sbb
adc
push
lea
or
insl
push
lret
cld
add
mov
cmp
inc
fbld
mov
loopne
mov
and
add
lahf
int3
ljmp
ret
addb
xchg
push
push
lock
add
add
mov
adc
adc
pop
cmp
jno
movsl
add
jecxz
push
or
and
xor
incl
add
outsb
mov
cwtl
adc
xchg
push
dec
adc
push
xchg
popa
cmp
mov
cmc
adc
cwtl
or
adcl
push
add
push
cli
xchg
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
push
sub
jbe
push
jmp
adc
push
in
push
lea
in
test
test
and
mov
adc
les
sbb
inc
imull
cli
adc
test
dec
adcl
ljmp
mov
xor
call
lahf
adc
push
fwait
inc
rcr
ret
pop
ja
adc
lret
fsubrl
push
adc
and
aas
push
dec
jg
fdivrs
mov
mov
mov
push
add
in
aaa
fisttps
rclb
mov
ljmp
out
xchg
out
in
inc
push
gs
aam
outsb
movsb
mov
stos
sub
in
les
lcall
mov
jbe
cmpsb
je
xor
mov
mov
int3
mov
mov
jb
or
or
or
cmp
imul
sbb
fdivl
out
fs
dec
scas
pusha
mov
adc
sbb
mov
dec
push
sarl
pop
sbb
xor
clc
inc
mov
xor
or
lods
das
push
push
xor
or
cltd
or
mov
pusha
inc
notb
pop
push
rorl
sti
push
mov
fimull
cld
jo
adc
sbb
mov
ljmp
and
and
and
jnp
je
xor
pop
sti
pushl
xchg
insl
and
test
jne
or
mov
not
xadd
mov
in
sarl
adcb
popa
stos
mov
add
sbb
push
pop
push
mov
lock
stos
ds
push
adc
clc
mov
sahf
addb
pop
lock
sub
cmpsl
push
sbb
sbb
imul
add
push
and
add
les
mov
lods
stos
mov
lea
jbe
inc
push
push
mov
push
enter
pop
iret
add
leave
cli
push
loopne
out
out
lods
shl
push
mov
push
jnp
cs
movl
inc
int3
in
movzwl
push
cwtl
cmp
jo
xor
mov
sbb
or
insl
add
pushf
jl
cmp
jecxz
push
out
sbb
or
jl
sbb
jle
sbb
cmp
enter
iret
repnz
jbe
mov
pop
insb
dec
subb
imul
stos
cmp
pop
adc
jne
xchg
repnz
jl
js
popa
cmp
or
dec
sub
scas
jp
mov
or
add
movb
outsb
popf
hlt
or
cmpb
inc
xchg
rcl
or
int3
inc
cmp
adc
mov
mov
and
lods
pop
dec
and
add
loopne
je
sub
mov
push
push
std
clc
sbb
sbb
push
inc
xchg
cld
movsb
xlat
or
jmp
cmp
ret
adc
ljmp
fildl
fcompl
movsb
pushf
add
jmp
xchg
test
or
adcb
or
jg
push
ljmp
mov
fsts
jo
enter
fimuls
jne
movsbl
pop
push
jbe
sub
cmp
mov
adc
and
je
push
cwtl
mov
movsb
pop
pop
es
loopne
lods
sub
icebp
shlb
je
add
bound
pop
test
dec
cmp
lea
pop
aas
adc
pop
ret
xchg
sbb
or
jle
fmul
push
and
or
mov
mov
pop
xchg
pop
jnp
push
cmp
jl
cmp
xchg
test
out
dec
lcall
mov
sub
clc
pop
mov
mov
mov
push
jge
mov
call
or
push
jbe
inc
hlt
out
mov
or
pop
push
shlb
push
dec
ja
mov
addb
xchg
scas
add
movsl
inc
push
std
repnz
daa
in
movsl
repnz
add
daa
daa
daa
add
daa
or
jmp
or
jmp
or
fwait
fwait
fwait
fwait
jno
jmp
push
jmp
por
jmp
fwait
fwait
fwait
pop
adc
pop
adc
push
adc
dec
adc
fwait
fwait
fwait
fwait
dec
adc
aas
pop
jmp
sbb
fwait
fwait
fwait
fwait
xor
jmp
sbb
es
fwait
fwait
fwait
fwait
and
pop
pop
jmp
and
add
dec
fwait
or
inc
cmpsb
push
fcompl
and
test
push
sbb
ss
mov
xor
add
rorb
jmp
jns
xchg
int3
aam
out
sahf
fsub
in
hlt
cld
add
jns
testl
sbb
and
sub
cmp
out
inc
inc
dec
dec
push
out
sahf
out
pop
arpl
push
out
sahf
jb
jl
pop
jmp
push
enter
add
and
or
or
push
movups
adc
adc
call
sbb
sbb
push
pop
and
and
aas
dec
test
jb
xlat
xorb
rolb
std
icebp
int
dec
sbb
pusha
sbb
iret
aam
sub
cltd
scas
mov
xor
push
jo
fstpt
xor
pushf
les
je
popl
rcl
orl
loopne
out
aas
test
pop
add
push
pop
cli
sbb
and
mov
mov
xor
decl
sbb
aam
dec
inc
orb
inc
jo
cmp
or
bound
loopne
inc
jb
fimull
in
lret
lods
add
mov
hlt
and
adc
fdivrl
out
ds
xchg
jb
setnp
xchg
shll
sti
adc
loop
lods
inc
jmp
xchg
test
pop
adc
cmp
sub
sbb
cltd
push
mov
test
fstps
sub
repnz
mov
es
mov
add
sub
push
dec
rclb
xor
jmp
cmp
and
repnz
pop
mov
addl
xor
add
xor
sub
pusha
aad
push
lea
cli
inc
aaa
aaa
in
mov
ljmp
mov
mov
mov
ret
xchg
flds
or
insl
lods
lods
pop
adc
sbbb
mov
fistpl
lds
jmp
jge
mov
test
lret
shr
test
ds
jno
push
outsb
mov
mov
xchg
stc
ja
lea
imul
lret
mov
jle
arpl
mov
mov
inc
rolb
dec
sbb
mov
mov
lock
xor
add
xor
xor
add
pop
inc
push
sub
sarb
shll
or
sbb
pop
daa
push
scas
jne
repz
rolb
xor
add
pop
mov
xor
and
pop
les
lods
sub
in
push
rcrl
add
inc
pop
or
test
stos
xchg
sbb
shrb
sbbb
je
sarl
insl
pop
mov
mov
inc
sbb
scas
lock
andb
jb
adc
addl
jno
jne
lret
push
add
mov
and
and
fwait
or
loopne
enter
out
push
mov
mov
arpl
xchg
mov
adc
iret
cmp
insl
mov
push
and
xor
movl
cmp
add
lahf
imul
xchg
add
mov
movl
sub
mov
push
add
push
inc
adc
pop
push
movhlps
dec
pop
push
cwtl
mov
push
adc
mov
rclb
mov
xchg
ss
adc
lods
in
inc
cmp
jl
sbb
or
xchg
cli
mov
mov
xchg
jle
shrl
cmp
add
cli
pop
dec
add
es
lea
cmp
inc
jg
and
imul
insb
or
js
xor
data16
js
sbb
in
add
mov
inc
mov
or
push
mov
outsl
or
icebp
jl
dec
sti
pop
fisubrl
push
js
test
jae
imul
nop
pusha
and
dec
in
mov
hlt
mov
and
movzbl
push
push
xorb
movb
sub
adc
jmp
mov
inc
js
cmp
inc
pop
push
inc
push
xor
xor
ss
sbb
sbb
mov
leave
sbbb
data16
mov
sbb
push
je
push
insl
pop
hlt
push
mov
lahf
cltd
ja
jmp
sbb
jbe
orb
fwait
and
imul
test
push
push
je
inc
dec
mov
mov
mov
or
dec
popa
dec
enter
pop
in
add
and
add
pop
and
out
imul
dec
fcomps
fcomps
fstpl
push
push
sbb
mov
pop
ficoml
mov
je
inc
dec
sti
js
adc
push
data16
test
test
add
pop
and
sub
jl
aad
pop
fists
push
mov
inc
add
ss
add
mov
arpl
push
dec
loopne
dec
adc
addr16
cltd
sub
mov
movsl
rolb
push
aaa
cmpsb
xor
test
pop
mov
add
adc
or
inc
add
and
xchg
mov
std
xchg
fstpt
sbb
xor
xchg
mov
jge
lret
rolb
pop
ja
mov
and
ljmp
push
jmp
stc
adc
fists
jmp
add
adc
dec
add
inc
dec
pop
pop
or
fld
fcomps
push
pop
icebp
test
test
je
int3
loopne
xchg
insb
mov
neg
xor
inc
xor
cmp
xor
scas
insb
in
popf
icebp
jne
push
lcall
and
or
out
lds
test
push
ret
popa
outsl
dec
fwait
push
or
int
in
mov
inc
push
mov
sbb
leave
out
test
or
pop
imul
inc
push
push
lock
jb
adc
in
mov
add
cmpl
test
sub
cmp
cmpsb
mov
lea
lock
or
cmpsb
inc
call
aad
jo
jl
rorb
push
cmp
or
jnp
popa
sbb
sbb
push
imull
cld
lds
cmp
lods
cmp
and
sbb
dec
addr16
ds
xchg
sub
inc
les
adc
loop
outsl
dec
js
psrlq
pop
mov
in
pop
mov
push
and
jmp
stos
sbb
adc
movb
push
adc
xchg
es
inc
bound
mov
adc
jg
cmp
or
inc
nop
clc
cmpsb
mov
add
es
mov
and
inc
and
add
mov
add
and
int
push
repz
or
push
add
movsb
sub
sbb
xor
dec
shll
cmp
inc
popa
shlb
rorl
jl
pushf
scas
int
sub
stc
push
jl
ret
pop
ret
add
dec
adc
jns
add
dec
fnstenv
das
cmp
das
dec
test
lods
adc
push
mov
shll
jmp
mov
jae
xchg
mov
cld
jo
dec
movb
aas
mov
mov
push
sbb
rclb
or
lea
outsl
fisttpl
sbb
push
pop
dec
sbb
push
xchg
adc
cmpsb
jmp
hlt
je
inc
mov
and
and
data16
loopne
inc
inc
pop
mov
es
pop
in
je
add
lods
loopne
sub
mov
sbb
fldl
cmp
inc
push
push
jnp
push
adc
sub
adc
pop
add
ljmp
mov
push
ret
jl
sub
add
adc
xchg
popa
shrb
dec
adc
cld
jae
enter
sbb
sti
adc
and
and
pop
jnp
and
into
push
scas
add
lock
xor
adc
or
mov
pop
push
je
mov
inc
loop
clc
stc
cmpb
inc
xchg
lret
add
xchg
inc
dec
inc
lock
test
lds
pop
and
mov
inc
pusha
in
dec
sbb
adc
ds
lds
mov
std
xchg
mov
packsswb
insl
lcall
xchg
paddd
mov
popa
arpl
push
xor
insb
lds
mov
insb
in
aam
jo
or
out
imul
inc
push
sti
lock
push
sub
sbb
push
jb
mov
lahf
and
and
enter
xor
outsl
mov
ss
mov
dec
cmpl
push
add
and
out
push
push
or
nop
push
pop
out
sub
sub
jle
in
xor
xor
mov
mov
push
and
imul
cmp
push
test
jb
test
mov
xor
lea
xchg
lahf
adc
inc
dec
pop
add
adc
add
iret
inc
and
test
lods
adc
hlt
jmp
push
imul
loop
rorb
sbb
pusha
mov
add
loopne
xchg
fwait
out
adc
cmp
fistpl
cmp
dec
jae
leave
leave
sbb
mov
arpl
ret
movb
cmp
pcmpeqw
and
or
push
fsubr
or
dec
mov
out
sbb
cld
dec
sub
or
jle
jecxz
lea
mov
sbbb
pop
outsl
out
lea
push
les
and
push
mov
sbb
mov
pop
xchg
movsb
ss
or
repnz
jg
add
xchg
fstl
push
cmp
mov
push
cmp
fisttpll
bound
dec
test
fldl
cmp
fiadds
sbb
out
and
lock
sub
add
add
das
pop
cmp
je
cmp
pop
sbb
or
sub
jo
dec
xchg
mov
pusha
leave
xor
fdivrl
fists
jge
mov
lock
adc
ds
pusha
mov
mov
or
cli
add
int3
cmpb
xchg
or
add
xor
dec
mov
mov
xchg
cs
fstpl
test
insl
xor
into
xorb
test
cmp
mov
pop
fidivrs
sbb
adc
stos
stc
inc
lea
sbb
popa
adc
cmp
jns
cmp
or
or
pop
js
arpl
xchg
push
lods
xchg
add
in
lods
add
push
in
fnstcw
add
aaa
bound
movzbl
imul
or
or
dec
mov
das
pop
repnz
sbb
cmp
pop
cmp
orl
push
mov
pushf
les
cmp
or
push
lea
jle
mov
pop
cmp
movsl
lods
lcall
push
cmp
jge
mov
xor
sbb
pushf
mov
add
xchg
lods
testl
lret
pop
cltd
lahf
bound
pusha
inc
push
shlb
dec
scas
or
out
gs
clc
clc
cld
add
dec
cmpsl
jae
movl
lahf
lret
or
push
add
add
cmpsb
test
jg
jle
shll
add
dec
je
add
adc
cmp
in
jmp
aas
dec
or
mov
shr
sbb
loopne
lret
ret
rol
dec
ljmp
xor
dec
adc
xor
movsb
das
push
push
lds
ret
mov
fbld
out
add
in
cwtl
push
xor
or
je
push
mov
dec
inc
add
out
loop
sbb
xor
xchg
repnz
mov
ret
add
jmp
sub
push
in
add
push
add
jne
sbb
jnp
mov
adc
mov
lea
cmp
cmpsb
roll
xor
add
fwait
adc
inc
inc
test
xor
inc
and
ja
ljmp
jmp
clc
das
xchg
rol
idiv
inc
inc
imul
pop
gs
adcb
rol
mov
sbb
pop
loopne
and
popa
mov
pop
loopne
loopne
pop
sbb
aas
cmp
mov
outsl
push
roll
mov
mov
lcall
cmp
dec
jge
dec
add
mov
test
adc
adc
pop
out
push
or
aaa
sarb
in
clc
jae
sarb
mov
outsb
gs
jae
mov
lods
dec
jmp
mov
add
inc
mov
aas
pop
pushf
jbe
dec
mov
mov
aaa
cld
cmp
je
cmp
push
cmp
jne
inc
jne
add
into
decb
shlb
es
push
or
dec
add
jb
mov
je
ret
rol
flds
cmp
jne
push
dec
add
loop
dec
call
jne
mov
pop
cmp
xchg
cmc
aas
sarb
cmovp
push
mov
add
xor
pusha
inc
mov
jp
jl
or
jg
cmp
mov
jmp
and
mov
jmp
inc
jl
inc
jg
aaa
imul
add
shl
dec
mov
sub
mov
rcrl
jns
mov
mov
outsl
adc
sahf
or
incb
addb
xchg
xor
lret
out
push
push
rcrl
pop
fprem
out
or
sbb
sbb
stos
mov
mov
pusha
scas
and
push
pushl
push
pusha
stos
sub
push
push
inc
cmp
mov
jl
pusha
mov
jg
push
out
fcomi
ret
fs
imul
mov
xor
andb
inc
lods
iret
dec
jl
aaa
lcall
rcll
xchg
inc
xor
xchg
popa
addl
shrl
pop
das
movsb
add
push
lods
xor
xor
fsubs
inc
cmpb
pop
inc
push
inc
mov
mov
shlb
idivb
call
daa
mov
in
rolb
sbbb
mov
push
push
dec
cmp
add
js
xor
ja
in
pop
mov
pop
push
rclb
les
push
cmp
or
ret
push
inc
xor
je
pop
xor
xor
add
or
or
push
cmpsb
inc
adc
daa
aaa
or
add
push
cmpsb
push
clc
mov
lods
ja
mov
arpl
jl
push
loop
cld
jne
mov
mov
cld
mov
xor
imul
faddl
invlpg
imul
xchg
adc
cmp
jne
xchg
lret
leave
or
rcll
mov
addb
adc
xchg
loope
lret
ret
pop
jg
sbb
das
imul
mov
lds
cmpsl
lea
mov
jp
adc
movsb
push
add
dec
cld
mov
dec
cwtl
add
and
rcl
or
shlb
mov
sub
jge
jne
imul
sbb
sbb
push
add
xor
adc
inc
js
push
shlb
sbb
inc
inc
mov
push
movsl
and
movsl
rcr
or
push
arpl
lcall
or
add
std
mulb
call
mov
xorb
pop
push
data16
icebp
jmp
push
rolb
mov
adc
add
out
mov
ss
sbb
stos
dec
in
cmp
mov
imul
jmp
jb
push
jl
fsts
mov
dec
dec
or
mov
jle
pop
jne
push
movb
xor
and
hlt
mov
sarl
outsb
nop
rorl
push
cmp
push
andb
pop
xor
mov
jbe
movsl
push
and
imul
dec
dec
mov
sbb
push
xor
pop
stc
cmp
cmp
add
notl
xor
cmp
outsb
xor
and
push
or
insl
inc
or
or
je
movsl
xor
sub
or
lea
inc
mov
sub
jle
leave
enter
movb
jbe
cwtl
jmp
jmp
add
push
jmp
add
scas
jns
les
outsb
std
cmpb
jne
mov
lods
mov
mov
push
arpl
and
cmp
clc
sbb
inc
mov
cmpsl
cmp
mov
add
lods
test
test
xlat
mov
xchg
mov
rcrb
mov
xor
popa
ja
inc
mov
push
cld
cmc
mov
xchg
mov
nop
loope
arpl
rcrb
cmp
sub
mov
enter
or
xchg
pop
sbb
shll
pop
repnz
lret
or
insb
jnp
or
arpl
pop
adc
insb
filds
ss
push
addb
and
dec
shll
rclb
mov
in
ljmp
mov
mov
or
loopne
dec
dec
and
arpl
clc
mov
inc
mov
push
jp
mov
sub
jae
inc
sbbl
ret
loopne
or
gs
insb
je,pt
inc
or
pop
or
scas
or
add
data16
imul
push
les
ds
cmp
xor
or
lods
inc
pushf
in
imul
lods
adc
insl
arpl
push
add
adc
cmp
xlat
ss
sti
fistpl
lret
push
jo
js
js
push
jnp
into
out
negl
push
push
push
dec
shl
jmp
mov
or
push
mov
and
sub
dec
xchg
sub
adc
xchg
call
xor
sub
rcrb
mov
pop
adc
and
xor
mov
inc
fwait
xorl
jmp
mov
jg
aam
test
sub
and
lret
sahf
mov
sub
pop
cli
shrl
push
jae
cmp
loope
xor
in
lcall
inc
xor
cmp
jb
pusha
hlt
cli
sub
jmp
push
dec
incl
sbb
lcall
mov
push
je
ret
imul
sbb
test
or
push
or
add
mov
jnp
push
and
pop
mov
xor
fistl
xor
adc
aam
xchg
mov
push
ret
xchg
mov
jne
and
lea
and
pop
mov
out
inc
rolb
jne
rol
sub
pop
sub
cmpb
add
sub
imul
inc
push
scas
push
inc
rclb
inc
das
dec
sub
pop
fsubl
lret
mov
dec
sbb
pusha
add
orb
push
pusha
js
jo
mov
int
orl
nop
jecxz
call
jecxz
xchg
daa
jmp
push
fbld
ret
push
or
arpl
cwtl
je
and
xchg
js
xchg
rcl
xor
insb
mov
push
add
rorb
lds
in
pop
and
add
add
pop
mov
cmp
add
jbe
add
push
int3
cmp
nop
dec
addb
pop
xchg
sub
pop
xor
and
sbbb
add
add
push
pop
data16
bound
repz
add
jno
clc
adc
dec
sbb
data16
add
out
repz
mov
leave
mov
into
je
mov
lret
ja
jmp
jno
call
sub
jmp
sbb
sbb
cmpsl
cs
jo
push
test
mov
fsubr
mov
mov
imul
fdivs
in
stos
push
pop
aaa
mov
je
sub
jmp
and
dec
inc
mov
mov
je
xor
cmc
add
ret
stos
addb
dec
mov
jle
dec
inc
sbb
imul
cmc
in
sbb
cmc
mov
jno
or
add
fists
mov
pop
adcl
or
imul
mov
test
adc
pop
mov
jns
and
dec
insl
loop
push
xchg
cwtl
sub
mov
vunpcklps
push
sub
or
ret
mov
int
lret
push
dec
stos
mov
xor
mov
sub
mov
in
into
add
outsb
xor
pop
mov
cmpsl
xor
lock
loop
or
jmp
bound
mov
mov
push
mov
mov
dec
cmp
nop
pop
or
xchg
jl
sbb
sbb
or
jno
or
pop
or
mov
push
sahf
xor
pushf
aaa
int
mov
movsb
xchg
movsb
push
out
xlat
test
call
xchg
inc
inc
adcb
int
cwtl
or
outsl
push
push
dec
cmp
cmp
sbb
push
int
test
push
and
shll
movl
xchg
or
push
xor
test
addl
push
aaa
or
or
xor
sbb
and
pop
jae
in
adc
insb
add
and
add
sub
fwait
or
orl
aaa
pop
xchg
pop
fdivl
adc
adc
mov
ja
mov
mov
aam
xor
add
adc
push
sbb
adc
push
mov
or
jnp
sub
call
cmpl
ret
jbe
pop
js
movsb
imul
push
mov
or
cmp
lret
or
or
insl
sub
lds
mov
pop
mov
sbbb
or
sbb
mov
inc
imulb
pop
pop
and
iret
pop
cmc
ss
pop
add
sarb
xor
sarl
cmp
pop
or
movsb
pop
cld
push
xchg
mov
xor
jmp
fiaddl
or
or
mov
inc
inc
call
xor
push
mov
js
or
push
testb
xor
pop
rcrl
sbb
jns
pusha
cmp
mov
ret
add
rol
pop
jno
test
pop
test
mov
subb
inc
rorb
inc
and
or
inc
pop
add
adc
insb
stc
adc
cs
adc
lcall
inc
in
adc
pusha
mov
rorb
adc
push
jne
push
or
popf
je
pop
inc
push
and
adc
and
push
adc
xor
sbb
ss
adc
jo
jno
adc
lahf
jo
xor
dec
inc
xchg
sbb
inc
or
jo
sahf
popa
pop
orb
adc
xchg
inc
or
and
sub
in
sub
sbb
int
movsb
pop
imul
mov
mov
and
adc
add
xchg
and
mov
push
cs
or
add
inc
or
mov
dec
addr16
cmp
sub
lret
push
inc
dec
sub
push
icebp
out
cwtl
adcl
adc
out
idivb
insl
dec
adc
add
addr16
mov
adc
mov
cmp
rcll
and
repz
cmp
push
adc
mov
jl
ficoms
jne
cmp
mov
cmpl
dec
cs
inc
jne
mov
push
jae
mov
adc
gs
out
jns
cli
jne
push
pop
inc
test
or
xor
lock
fidivs
ss
adc
icebp
xchg
add
jmp
lea
test
js
mov
gs
ret
dec
and
jle
xchg
cs
or
sub
insl
push
fisubl
sub
in
add
add
xor
push
dec
dec
mov
lcall
in
jle
ret
and
cmp
cmp
jge
loopne
mov
js
sub
xchg
popa
push
jbe
sub
add
call
inc
xor
stos
shlb
scas
jae
sub
jecxz
rcll
sub
adc
in
and
cmp
sbb
loopne
jmp
jne
xrelease
jno
mov
pop
or
adc
pop
addb
dec
insl
test
sub
jle
xor
out
jae
cmp
pop
mov
push
push
push
cwtl
jmp
xchg
or
loopne
fs
or
push
xor
adc
push
decb
adc
shrb
pop
mov
dec
mov
push
hlt
fildl
inc
cmp
fdivs
jp
adc
mov
add
mov
push
daa
add
out
mov
add
iret
mov
rorb
or
shr
fiadds
leave
data16
mov
jecxz
cmc
pusha
inc
jnp
dec
sbb
in
inc
add
sub
or
les
bound
and
jns
mov
in
scas
stos
pop
aaa
xlat
sub
hlt
int
and
sbb
adc
sbb
jae
dec
cmpsb
outsl
popf
cmp
ja
in
jae
clc
sti
push
data16
push
or
xchg
push
dec
cli
inc
sbb
je
fs
fidivl
fnstenv
mov
add
sbb
and
loop
jmp
add
inc
sarl
inc
sub
push
movsb
loopne
fwait
lods
add
fiaddl
clc
add
dec
xchg
push
js
jno
js
outsl
push
cmpsb
xchg
outsb
or
adc
pop
mov
outsl
cmpl
je
xor
pop
inc
fdiv
fadd
pop
mov
add
add
jbe
shll
popf
xchg
movsl
push
sarl
scas
add
fisttpl
sub
aad
lods
mov
xchg
dec
adc
add
push
mov
mov
push
pop
mov
sbb
int3
sub
push
les
loopne
insb
sbb
repz
sbb
pop
je
jmp
shlb
mov
cmp
aas
xor
xor
das
xorb
sub
push
int3
push
cs
inc
ret
or
cmp
call
mov
adc
loopne
or
pop
or
push
jmp
mov
pop
in
mov
ds
or
mov
lcall
shrb
inc
jmp
cmp
add
mov
jp
add
push
push
imull
test
movsl
push
inc
fsts
sub
sarl
sar
dec
xor
push
xchg
mov
mov
popf
xor
jo
jbe
jmp
add
std
cmpb
sub
stos
inc
mov
jb
ffree
and
jmp
push
or
fwait
sahf
xchg
test
cwtl
add
xor
mov
inc
inc
adc
pmulhuw
je,pt
sar
out
mov
xor
dec
cld
mov
jge
cmp
mov
push
push
push
mov
jmp
and
xor
push
jg
sub
aad
inc
sbb
call
xor
push
leave
lret
inc
sub
js
sub
movsb
shrb
shlb
push
push
in
pop
jae
sbb
popa
orb
dec
push
adc
and
les
push
or
xchg
cmovne
aam
or
sub
fwait
rol
push
push
shlb
add
add
mov
inc
push
je
cmp
jbe
push
or
or
dec
mov
jmp
das
or
jecxz
jecxz
pop
push
movl
cltd
pop
ret
adc
in
mov
insl
adc
or
or
insb
cmp
cli
pop
inc
fisttps
and
mov
inc
cli
pop
mov
mov
sub
test
enter
or
or
cmp
or
add
jne
lcall
cmp
aas
clc
adc
scas
xchg
mov
sub
inc
jo
mov
pop
stos
ljmp
test
add
lock
andb
cmp
adc
rorb
inc
and
loop
add
or
data16
add
pop
in
sbb
orl
insb
sbb
and
lret
sti
sub
mov
pop
ja
shll
mov
sbb
push
xchg
inc
jb
mov
sbb
mov
pop
mov
lret
jne
mov
mov
mov
adc
jg
jbe
sub
or
inc
push
xor
pop
div
outsb
inc
mov
lea
pop
push
nop
in
and
mov
xchg
dec
mov
dec
outsl
mov
lahf
and
mov
loopne
inc
inc
jnp
lea
cmp
cwtl
add
jmp
mov
add
xchg
pop
adc
shll
aas
sbb
testb
mov
jo
shll
inc
stc
in
push
orl
cmpsl
and
and
ja
jne
or
sbb
dec
push
scas
std
mov
stos
cmp
shll
je
adc
sub
sub
jne
test
lea
adc
out
adc
add
das
pop
lods
insl
jp
xor
fidivrl
clc
int3
inc
dec
dec
mov
or
mov
imul
or
jb
loopne
xor
cmpl
lahf
call
pop
cmp
jb
neg
and
je
sub
mov
lret
jmp
les
sub
or
rorl
lret
or
add
stos
mov
dec
ljmp
ret
or
js
aam
mov
call
push
movsl
sar
lock
jp
in
shll
mov
add
or
push
jne
sub
sbb
es
dec
xor
sbb
cli
movb
mov
or
add
adc
mov
stos
out
pusha
cwtl
scas
pop
sub
adcl
and
fld1
fwait
pop
lds
ds
and
clc
jg
fs
imul
or
pusha
jmp
movq
movaps
push
push
push
enter
shlb
jle
and
mov
sar
rcl
lret
imulb
cmp
and
lret
or
outsl
push
bswap
jg
ljmp
and
push
add
ret
xlat
mov
add
je
mov
ljmp
fxch
fadd
roll
jbe
and
mov
or
pop
enter
loopne
repnz
idivl
ret
adc
dec
sbb
iret
arpl
pop
test
jge
inc
push
shlw
add
lock
stc
or
movsb
and
add
rolb
sti
pop
mov
pop
add
add
xorl
test
mov
lret
or
int3
jmp
addr16
int
lret
sub
ret
adc
std
cld
inc
adc
inc
add
and
push
push
and
movsb
int3
or
test
mov
jae
pusha
inc
dec
ret
dec
pusha
cli
adc
pusha
fildll
cmp
jmp
push
sarb
decb
mov
push
sub
add
jno
inc
clc
ja
mov
jbe
aad
jmp
adc
jne
inc
cmpb
out
adcb
fcmovnb
xor
adc
cld
aaa
pusha
mov
inc
inc
and
adc
fistpl
jne
arpl
arpl
lret
cmpsb
ljmp
mov
les
pop
popf
stc
jmp
mov
and
mov
xor
jp
xchg
and
mov
xlat
pop
xor
sub
mov
cmp
xor
xor
adc
cmp
outsb
nop
mov
push
pop
push
and
mov
aaa
pop
push
cmpb
jmp
push
jns,pn
push
pop
fwait
popa
test
xchg
push
mov
cmp
jne
inc
les
adc
lods
jo
mov
sbb
sbb
movb
rorb
addr16
cmp
jb
sbb
sbb
sbb
jo
test
daa
test
dec
out
ss
pop
dec
std
mov
cmp
in
lret
pop
dec
xchg
push
cmp
dec
and
adc
inc
sbb
cmp
jmp
add
xchg
xor
ucomiss
dec
push
mov
push
push
les
or
or
insl
adc
add
jmp
jl
aas
and
hlt
push
dec
or
mov
nop
mov
or
mov
inc
pop
dec
adc
adc
jbe
or
pop
cmp
dec
sbb
icebp
cmp
mov
cmp
cmp
cli
adc
adc
push
push
popf
inc
sub
fdivrl
pop
cs
push
bound
or
insl
mov
clc
mov
in
movsl
shrb
rorb
data16
data16
add
add
mov
sub
je
pop
mov
cmp
insl
ss
add
push
cmp
enter
push
pop
repz
adc
pop
cmp
sub
jecxz
jns
adc
xchg
pop
shr
arpl
pop
pop
ret
loop
icebp
mov
jae
rolb
roll
lret
rcl
mov
inc
mov
adc
scas
mov
sbbl
wrmsr
in
pop
inc
inc
shl
andl
jne
insl
mov
pop
cld
sbb
dec
fsubl
sub
out
addb
jne
cmp
loope
xor
mov
cmp
leave
xchg
js
fbld
rol
loope
or
cmp
jne
dec
jmp
rcrl
out
pop
cmp
xor
jne
inc
aaa
push
lds
mov
push
loope
dec
test
sbb
cmp
test
jno
cmp
pop
fnstcw
adc
dec
push
rolb
inc
stos
push
or
fbstp
lock
mov
mov
cmp
cmp
and
jno
jmp
and
lock
fmul
push
dec
pop
pop
jne
mov
test
mov
cmp
jb
stos
pop
ljmp
rep
jmp
mov
adc
fxch
insl
add
cs
dec
cmp
rclb
imull
in
adc
xor
and
imul
or
xor
inc
add
add
mov
sub
jge
mov
nop
into
xchg
dec
cmpsb
nop
inc
xor
fiadds
mov
sahf
testl
test
cld
lahf
je
inc
mov
mov
call
repz
lock
hlt
adc
iret
repz
clc
cld
ret
lock
adc
lea
add
sbb
repz
in
lock
or
or
nop
inc
pop
pusha
sbb
and
loop
mov
sbb
lea
jl
cld
jl
daa
mov
cld
out
pop
dec
mov
fsts
xchg
xchg
xchg
stc
sub
pop
nop
jo
inc
cmp
push
xchg
push
mov
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
addr16
dec
mov
fs
adc
push
and
xor
loop
cmp
inc
push
dec
aaa
sbb
repz
sbb
sbb
adc
repz
or
or
dec
enter
inc
insb
and
push
test
xchg
cmpsb
push
add
pop
punpckhbw
xchg
daa
ja
arpl
cltd
push
mov
push
sysret
inc
cmc
cmpl
push
out
test
inc
ret
jmp
fnsave
inc
push
ret
pop
adc
fidivs
sub
hlt
add
in
xchg
sbb
cmp
andb
sbb
push
push
cltd
insb
sbb
pop
iret
dec
adc
sbb
orb
ds
cltd
adc
inc
lea
es
ret
cmp
js
push
shll
sbb
jl
pop
int
jne
iret
pop
cmp
and
jmp
or
push
inc
mov
mov
push
pop
mov
test
lret
inc
sarb
imul
pusha
nop
enter
pop
es
or
nop
lock
dec
mov
movsl
inc
cmp
cmp
fcomps
and
lret
fisubl
or
jno
inc
cltd
inc
dec
sbb
daa
mov
lcall
pop
ror
jle
insb
bound
insb
ss
sbb
jbe
sub
adc
jle
cmp
pushf
mov
or
add
lea
cmp
or
jmp
ja
mov
sub
cmp
jne
push
adc
ja
cmpsb
pop
or
add
mov
ret
adc
add
hlt
push
inc
insb
dec
cmp
aas
cmp
mov
xchg
mov
jecxz
daa
or
adc
icebp
pop
xor
fcoms
jne
test
icebp
xor
dec
pop
pusha
inc
jge
add
adc
mov
loope
add
mov
rcr
inc
mov
fadds
jbe
test
call
and
push
stc
push
pusha
push
inc
aas
pop
and
mov
add
xor
sub
jns
ja
pop
jg
or
xchg
andb
shlb
mov
adc
or
ret
jle
enter
jnp
pop
pop
cmpl
or
mov
mov
cmp
or
cmp
push
pop
popl
cmp
jmp
icebp
mov
cmpsb
dec
or
push
push
rorl
add
sub
pop
pop
inc
rorb
add
add
es
mov
bound
repz
dec
scas
add
inc
rorb
mov
sahf
flds
and
mov
frstor
mov
pop
ret
mov
pop
js
push
sbb
mov
fisttpll
ss
jmp
push
sub
inc
repz
cs
push
pop
pop
or
cmp
lds
or
pop
lods
call
xor
fs
pop
gs
push
fisubrs
push
popf
test
ja
add
jne
push
shl
push
fsubs
mov
sub
mov
loopne
ja,pt
pop
jbe
lea
adc
sbb
pop
xchg
xor
nop
orl
inc
out
leave
push
sbb
shlb
xor
jb
xchg
sahf
fwait
push
push
clc
jbe
add
inc
shlb
push
mov
invd
xorb
popa
mov
pop
js
jmp
push
add
sbb
add
mov
jo
ja
jnp
adc
jbe
divb
add
dec
out
mov
pushf
pop
xchg
dec
xchg
xchg
push
jae
cmp
cld
cmp
xor
adc
outsb
add
cmp
mov
add
push
ds
pusha
mov
cmc
inc
push
test
sub
add
jmp
mov
lret
push
cmpsl
add
loopne
adc
add
inc
js
fisubl
sbb
add
mov
repnz
rclw
or
rolb
cmp
xchg
sbb
test
shl
rolb
inc
ret
data16
sbb
xlat
lea
add
lock
aam
adc
dec
ret
out
or
mov
inc
faddl
lods
pusha
andb
adc
sbb
push
add
lret
push
sbb
add
rcr
bound
int3
dec
push
aam
ret
mov
add
adc
add
inc
cld
daa
dec
jne
jmp
dec
repnz
push
xchg
jb
popf
mov
popa
and
sbb
mov
pusha
xor
adc
pop
pop
xor
xor
enter
aam
mov
sub
add
clc
out
push
in
xchg
jno
dec
mov
jae
pusha
or
outsb
into
out
add
cmp
out
push
and
cmp
jne
mov
push
cmp
jne
out
outsb
sahf
es
jne
call
lock
inc
insb
aam
adcl
jb
xlat
aam
or
dec
or
adc
sahf
lahf
jmp
std
push
xor
lods
cmp
sub
scas
adc
in
dec
jecxz
nop
adc
adc
inc
inc
inc
clc
out
test
xor
lahf
cmp
or
xchg
stos
push
fdiv
mov
mov
jo
jle
dec
cmp
lret
jne
pop
mov
stos
push
adc
and
rclb
push
push
pop
inc
mov
add
leave
lea
adc
or
pop
add
adc
add
pushf
jbe
sbb
pop
std
dec
dec
xor
xchg
pop
xor
or
and
pcmpgtb
pop
dec
dec
push
pop
loopne
sbb
test
sbb
pop
adc
cmp
mov
loope
cmpl
jg
add
push
dec
ffree
pop
dec
jge
push
adc
add
mov
xlat
xchg
and
and
mov
je
mov
inc
sarb
xchg
or
jg
add
mov
pop
or
mov
cmp
outsl
loopne
add
dec
imul
sbb
outsb
loopne
push
push
pop
into
xchg
and
aaa
jo
mov
or
ja
jae
out
sbb
loopne
and
loopne
push
add
lea
outsb
jno
sbb
scas
and
jno
xchg
scas
mov
mov
push
jmp
xor
xorb
clc
pop
insb
sbb
addl
lock
push
in
jae
cmp
cmp
call
cltd
mov
add
mov
xchg
fimuls
mov
push
adc
repnz
mov
jmp
imul
sarl
in
mov
mov
jle
sub
testl
mov
rorb
or
adc
or
push
add
int3
ret
fdivs
fbld
mov
mov
fmuls
lock
and
sub
das
ret
or
and
mov
sbb
push
or
sub
icebp
add
pushf
jno
mov
stos
lock
add
and
adc
dec
jne
xor
cltd
insb
pop
mov
push
lcall
xchg
jmp
rol
icebp
jg
incb
mov
inc
je
mov
lea
neg
mov
lock
mov
or
add
jmp
or
mov
inc
inc
cmpsl
jnp
fs
mov
roll
mov
pop
add
mov
sbb
fdivr
inc
cmp
jb
jns
jge
orb
inc
cld
dec
fmuls
add
inc
pop
ret
push
add
sbb
or
add
or
jbe
clc
popf
sbbl
xlat
adc
add
add
and
add
jmp
fsubrs
mov
mov
into
and
xor
in
addr16
mov
stc
addl
xor
jo
xchg
rolb
or
mov
dec
add
mov
ds
sahf
mov
inc
adc
sub
sbb
out
cmp
je
xor
div
cmp
and
faddl
aam
xchg
pop
dec
cmpsl
add
inc
mov
inc
lret
sbb
mov
loopne
inc
aaa
adc
inc
pop
loop
out
xor
bound
lock
mov
iret
dec
lea
insb
inc
or
jl
and
outsb
sahf
sarb
out
push
mov
or
rclb
pop
dec
mov
mov
flds
xchg
sub
loop
pop
mov
imul
inc
jmp
cmp
sbb
jmp
adc
jne
sub
leave
sbbb
out
cmpsb
xlat
adc
mov
adc
fimull
into
cmp
movsl
lret
adc
add
inc
jns
out
or
and
adc
adc
pop
mov
fidivrs
pop
lods
adc
mov
push
aam
xor
or
dec
mov
and
je
lret
or
or
xor
and
jmp
addb
test
aam
add
or
jp
push
jbe
push
add
xchg
dec
movsb
and
call
jmp
push
lea
in
aad
push
adc
shl
cld
std
mov
nop
dec
inc
cltd
sbb
mov
push
adc
add
sbb
add
xor
dec
in
push
add
lods
les
jmp
push
insb
dec
push
jmp
push
inc
mov
push
sub
lcall
xor
pop
inc
or
jne
mov
mov
push
inc
mov
jne
fs
add
rolb
add
and
inc
sbb
add
or
rorb
lds
inc
push
push
test
inc
imul
adc
add
or
adc
or
xor
xchg
cmpb
adc
notl
mov
insb
sbb
xor
jb
ljmp
jne
faddl
push
imul
push
dec
jno
cmpb
add
nop
nop
jbe
inc
or
icebp
lea
push
adc
or
jbe
ss
adc
push
push
pop
cmp
or
push
test
clc
mov
call
jb
clc
xchg
push
es
cld
or
pop
or
mov
or
loop
lock
jne
mov
or
fisttpl
add
sbb
repz
mov
jmp
dec
lods
in
or
xor
inc
inc
inc
enter
adc
mov
les
in
in
in
inc
xchg
jns
mov
rclb
testb
call
icebp
jmp
mov
push
inc
sti
or
pop
loope
mov
mov
add
sbbl
mov
or
push
sarb
xchg
arpl
clc
inc
hlt
mov
xchg
adc
in
dec
nop
jmp
sub
lods
inc
mov
loope
scas
add
fdiv
lret
repnz
mov
add
incl
and
dec
es
mov
mov
xchg
push
or
adc
push
test
or
gs
clc
push
adc
rcrb
cmp
adc
xchg
add
data16
adc
mov
push
into
and
test
xor
xchg
shlb
dec
testb
shrb
jo
pop
sbb
jne
ja
lar
mov
or
xor
test
or
jb
das
dec
sbb
cld
lahf
sbb
mov
push
jge
imul
push
dec
rcl
sub
and
in
jmp
movl
pushf
out
loopne
in
rcrb
or
sub
je
push
insb
push
retw
add
mov
add
jecxz
xor
or
jne
pop
jae
or
push
sub
pop
mov
pop
aad
sti
decl
mov
loop
or
sub
pop
xor
movsl
ljmp
xor
inc
xorb
rol
pusha
or
cltd
xor
loope
enter
aad
or
dec
loopne
dec
ficompl
pusha
add
rclb
aam
mov
push
xchg
xchg
mov
addr16
cmp
pop
jp
arpl
mov
mov
cmp
push
in
sbb
fdivp
or
adc
or
repnz
add
or
iret
cs
testb
mov
in
and
xchg
loopne
mov
insb
andl
scas
rolb
adc
nop
cmc
pop
push
and
push
push
cmp
sub
mov
loopne
into
jbe
and
lods
or
cmp
inc
sub
jg
jo
mov
dec
fcoms
pop
jno
mov
je
adc
faddl
inc
repnz
clc
adc
fs
sub
jmp
daa
scas
dec
jge
adc
dec
sbb
movsb
add
popa
jnp
dec
sbb
jbe
fidivrl
jmp
dec
je
add
or
fisttpll
sti
shrl
pop
pop
cmp
bound
negl
push
sbb
add
jmp
sub
push
mov
push
push
int
mov
jmp
push
mov
ss
push
lea
push
test
and
imul
jbe
arpl
rol
inc
xchg
lcall
push
push
addr16
jne
mov
add
addl
and
pop
inc
out
xchg
inc
jne
cmp
arpl
pop
imul
scas
loope
rcll
add
cmp
and
jl
roll
cmovp
ret
cmp
inc
pop
mov
push
mov
add
add
or
sbb
loopne
or
js
jbe
leave
add
ja
out
pop
rorb
add
inc
sti
xchg
pop
dec
pop
jne
punpckhdq
sub
and
push
mov
cmp
pop
or
sbbl
push
fdivs
sbb
xor
or
mov
dec
xor
jne
or
orb
jmp
cmp
jae
jbe
push
movl
adc
sub
sbb
and
add
push
add
pushl
mul
mov
add
add
fwait
addl
pop
iret
xchg
sbb
xor
cs
pop
call
jbe
cmp
fsubrl
int
pop
lcall
sbb
dec
and
sbb
shl
jg
mov
mov
pop
jle
jo
cwtl
pop
fdivs
push
pusha
ss
dec
xchg
cli
or
lea
pop
jle
jo
xchg
and
dec
pop
and
jo
jns
jae
addr16
arpl
pop
imul
jmp
push
decl
das
pushl
cmp
sub
push
pop
or
in
dec
push
sbb
outsb
dec
dec
call
adc
push
pop
sub
loopne
orb
and
cmp
push
dec
sub
sub
enter
ja
inc
imul
cmp
lret
push
cltd
testb
add
sbb
push
inc
lods
test
cmp
mov
insl
or
cmp
incb
push
or
or
add
inc
fdiv
pusha
movsb
je
inc
data16
cmc
fcomip
mov
pop
sub
adc
stc
xchg
clc
pop
push
mov
mov
cs
mov
mov
fs
mov
jmp
loopne
inc
sub
movsl
dec
pop
call
dec
dec
jns
pop
imul
out
add
jl
cmp
cmp
mov
les
mov
jmp
dec
fiaddl
cmp
or
mov
push
or
inc
inc
add
add
push
xor
js
call
and
xlat
je
xor
lock
jp
aam
jb
adc
push
je
push
mov
pop
sets
push
mov
pop
ror
inc
push
cmp
mov
push
fldl
pop
enter
add
cmp
imul
mov
lret
inc
dec
ror
mov
add
dec
test
pushf
aad
pusha
xchg
sub
aaa
jle
daa
sbb
push
arpl
orb
pushl
pop
loop
rorb
roll
shlb
push
cs
sbb
xchg
cmp
jl
enter
mov
push
mov
scas
and
and
and
mov
stc
mov
mov
and
mov
jl
inc
subb
jge
cli
xchg
dec
ljmp
lcall
lret
movsb
add
mov
addr16
sub
leave
push
sub
adc
or
or
popa
test
jo
dec
in
cltd
jge
call
dec
push
and
dec
pop
pusha
cmpsl
mov
jmp
jne
sub
lahf
or
adcb
jl
lods
cmpb
enter
add
stc
and
sbb
dec
cld
jmp
dec
loopne
jnp
push
mov
push
jo
or
push
mov
add
push
mov
add
fs
dec
outsb
ja
or
jbe
mov
rorl
push
dec
call
adc
inc
pop
inc
push
lock
jne
push
inc
ret
dec
jmp
pop
push
in
add
or
dec
leave
cmp
xlat
repnz
lcall
cmp
cmc
fsubrl
adcb
sar
jmp
jbe
loopne
inc
jnp
in
adc
mov
adc
jno
fistpl
fisttpl
pop
bound
or
bound
data16
push
add
popa
jns
push
or
leave
sbb
aad
es
xchg
dec
lret
mov
ds
xlat
xchg
add
push
aad
mov
dec
and
push
push
inc
ljmp
adc
arpl
dec
lret
inc
jne
je
jne
out
aam
nop
or
mov
ljmp
ljmp
incl
aaa
or
push
sbb
or
orb
je
jns
ds
jmp
adc
fdivl
inc
enter
loopne
pop
icebp
cmp
pop
nop
lock
incl
call
jno
mov
push
cmp
fnsave
mov
ds
mov
clc
fimuls
inc
in
or
push
add
add
mov
push
push
add
push
ss
sbb
add
push
rolb
sti
in
lea
or
push
push
leave
incb
fmull
mov
clc
lret
mov
inc
or
outsl
pop
xlat
mov
rcrl
mov
cld
rol
cli
add
add
bound
lock
je
add
testb
jne
push
sbb
stc
adc
pusha
pop
inc
ss
mov
loope
test
or
shrb
jne
out
ds
lods
and
pop
movsl
stc
nop
or
sub
push
xor
aam
push
test
dec
pop
popf
push
or
or
jmp
test
outsb
daa
sahf
je
movsl
fimull
mov
sub
loopne
fstl
push
pop
mov
adc
mov
sbb
mov
sbb
push
xchg
xor
jbe
mov
rcrb
xor
jns
icebp
pop
mov
repnz
adc
imul
rcll
mov
jns
inc
pop
or
add
xor
pop
pop
push
std
call
cmp
rcrl
cmp
sub
cli
and
jle
int
sbb
xor
jge
xorb
mov
test
mov
rcrl
mulb
enter
andb
jl
jb
pop
je
sbb
pop
std
movb
jmp
insl
test
ss
xor
sub
std
add
and
add
sub
stos
push
jo
or
je
clc
mov
or
fmuls
or
repnz
inc
or
dec
loope
dec
cwtl
adc
dec
xor
cmp
insb
jge
call
or
lods
in
mov
js
je
jo
cld
lods
cmp
cwtl
or
mov
and
popl
jbe
lods
test
add
mov
fsubrs
test
in
add
adc
mov
dec
adc
cmp
xchg
sub
mov
sti
and
ror
inc
inc
cli
in
sub
sbb
ljmp
pop
outsb
fadd
inc
push
or
mov
xchg
xor
xor
movsb
xorl
or
cmpsb
rorl
xorl
andl
testb
xorl
addl
sub
fcomps
insl
cmp
mov
or
jns
popf
enter
shrb
les
add
cmp
mov
sub
dec
cld
xor
inc
adc
loope
mov
in
xchg
int3
push
gs
push
cmp
repnz
xchg
in
and
cli
xchg
mov
pop
mov
push
add
xchg
sub
lcall
pop
jmp
ja
cmp
rcr
int3
int3
add
inc
inc
push
in
jne
imul
add
mov
add
fisubs
or
xchg
outsb
jb
mov
cltd
jecxz
lahf
fsubs
test
jge
inc
arpl
sbb
rcrb
push
mov
adc
jbe
push
inc
or
test
add
imul
pusha
lcall
and
sbb
push
sarb
in
push
pop
divl
xchg
ds
push
inc
js
movsb
mov
adc
dec
movsb
push
js
sbb
in
sbbb
pushf
or
adc
adcb
jns
mov
add
jbe
rcrl
mov
arpl
orl
out
add
cmp
and
nop
pop
or
push
lock
adc
jbe
fnstsw
and
ret
testb
push
test
add
outsl
dec
arpl
and
in
and
in
cmc
dec
arpl
orl
push
cmp
pop
xchg
test
dec
add
dec
pop
ret
test
mov
cs
lret
gs
mov
mov
mov
cmp
jne
sub
shlb
pop
stos
test
sub
jp
xor
in
mov
lcall
les
add
rcrl
shll
lods
or
pop
add
cmpl
js
sti
les
loope
mov
mov
movsbl
sbb
sub
clc
out
test
xor
pop
sar
pop
lods
movsb
mov
xchg
push
dec
mov
subl
lea
frstor
fdivr
add
shlb
jns
lret
fcoml
je
or
je
or
mov
mov
fldcw
add
cmp
lret
add
lret
jnp
adc
test
dec
sti
mov
adc
xchg
sub
pop
jo,pn
cli
shll
notl
arpl
pop
adcb
lea
ja
es
andl
enter
pop
sbb
pop
hlt
stc
cmp
lock
pusha
sub
aad
test
fsubp
ds
fsubl
sbb
sub
adc
xlat
in
out
and
js
add
add
adc
sbb
xor
movsl
mov
incl
insb
cmp
sbb
imul
lcall
shlb
adc
mov
add
call
mov
add
add
sub
mov
sbb
sbb
jle
inc
je
pop
push
or
mov
ret
mov
mov
inc
adcl
xchg
addr16
push
lock
and
push
cmp
imull
xor
ret
test
xchg
push
aaa
add
aaa
aam
mov
sbb
adc
add
and
and
in
ret
add
jl
mov
push
mov
sub
in
mov
mov
mov
fldl
mov
cmpsl
xchg
inc
inc
push
insl
cmp
or
xor
xor
decb
xor
ret
xchg
and
mov
xor
pop
cmp
aam
test
inc
dec
push
jo
jae
mov
leave
or
aas
addr16
or
pop
lcall
mov
sete
testl
jge
xor
pop
dec
mov
imul
xor
lea
lahf
jnp
je
jns
sbb
je
test
sub
outsb
jo
jmp
mov
adc
jmp
repnz
je
or
sub
rol
mov
fsubrs
outsb
shrl
je
xor
and
fistps
pop
xor
mov
push
add
dec
xchg
and
xchg
pop
add
adc
popa
mov
jns
sbb
or
and
hlt
test
add
ret
add
mov
shll
mov
addr16
mov
jmp
cmp
jle
icebp
sub
pop
popa
mov
cmp
adc
add
push
lock
dec
or
mov
pop
sub
shr
push
push
insb
test
jb
push
and
adc
add
fisubrs
in
inc
sbb
xor
mov
sub
repz
jecxz
stos
sbb
jnp
adc
push
push
push
scas
data16
push
pusha
pusha
cmp
call
icebp
xchg
cmpb
jne
xor
add
stos
sbb
and
hlt
sub
dec
sbb
cld
pusha
cld
or
jbe
cmp
push
inc
daa
add
push
arpl
loop
mov
jno
push
pop
je
ret
jecxz
jbe
mov
inc
mov
rcll
jo
or
inc
cld
jmp
and
cmpsl
or
cltd
divb
add
inc
rcrb
or
jl
adc
ljmp
cs
neg
mov
sub
xor
pop
orb
jnp
or
sbb
movl
mov
mov
inc
and
lea
sti
loop
sbb
loopne
loope
mov
inc
test
xchg
add
push
cmp
data16
clc
adc
mov
cmp
dec
jmp
sub
jno
out
xchg
sub
inc
cmp
add
aad
pop
cmpsl
into
addb
cmp
shlb
add
movb
inc
jmp
movsb
adc
push
mov
or
out
xchg
mov
pop
push
repnz
inc
push
ret
jge
add
js
pop
std
scas
sub
jle
ret
add
sub
sub
push
sub
mov
fmuls
mov
decl
adc
in
jle
cmp
cmpb
sub
xor
jg
jo
push
sub
test
pop
and
pop
dec
cmpb
lods
add
test
mov
xchg
sub
pusha
jnp
jo,pn
sub
aam
push
pusha
lock
sub
dec
push
sbb
jae
das
or
mov
out
sahf
mov
lret
fstps
mov
daa
sub
jns
jmp
pop
cwtl
xorb
pop
and
xor
inc
mov
mov
xor
inc
clc
jge
mov
adc
daa
pop
mov
sbb
pop
clc
cmp
sar
movsb
adc
sbb
outsl
addr16
mov
into
jge
sub
notl
add
add
test
push
repnz
jns
out
sbbb
into
test
cwtl
enter
inc
aam
push
mov
dec
sar
cmp
cmp
les
jmp
sbb
pop
xchg
rclb
shll
int3
daa
repnz
push
xor
push
jne
cmpsb
mov
pop
pop
pop
imul
hlt
xchg
repnz
add
mov
nop
bndldx
or
sbb
stc
test
jge
cmp
sbb
xor
mov
or
and
fdiv
mov
mov
add
sub
dec
mov
inc
bound
idiv
pop
mov
or
test
xor
jl
lea
xorl
sub
cwtl
fsubrl
and
pop
loope
add
ljmp
int3
rol
shr
push
rol
adc
mov
add
lret
cmp
xchg
jecxz
xchg
pop
rclb
jne
add
dec
jge
addl
aas
pop
jge
sub
push
test
adc
inc
dec
mov
lahf
sti
sbb
pushl
insl
and
lahf
xchg
test
jp
add
push
mov
stos
mov
stos
push
clts
xorl
loopne
popf
adc
jmp
inc
xor
leave
lret
loopne
loopne
loopne
pop
adc
out
sub
or
movsl
push
ljmp
imul
lock
or
adc
leave
sub
movsb
or
sbb
pop
sbb
mov
adc
sbb
jge
int3
mov
or
lds
inc
mov
jp
jb
enter
sbb
add
add
mov
jno
sbb
mov
outsl
or
testl
ret
mov
sbb
cmp
mov
push
lods
mov
pop
lcall
pop
rolb
outsb
pop
mov
mov
sub
mov
rolb
pop
push
outsl
ss
or
pop
jge
roll
jbe
sbb
enter
movb
sub
jle
or
das
adc
mov
xor
mov
fs
ds
addl
push
push
call
clc
ds
into
pop
push
add
add
xor
outsb
mov
mov
lock
inc
push
pop
idivl
mov
sub
jbe
inc
cmp
test
aaa
or
sti
std
and
add
add
incl
add
pusha
cmc
jo
pushf
add
mov
nop
sbb
das
sub
pop
lldt
jo
xchg
dec
push
mov
psllw
inc
test
add
mov
out
push
inc
push
lahf
sbb
pop
xchg
sahf
pop
push
ret
fistps
mov
pop
jl
rolb
mov
enter
mov
pop
lahf
insb
int3
push
push
mov
imul
mov
ret
rorb
rol
cmpsl
popf
push
mov
sub
add
xor
pusha
push
xchg
lahf
gs
sti
adc
add
lock
ret
and
or
outsb
mov
xor
enter
adc
xchg
inc
push
lds
ret
add
xor
inc
xchg
or
loopne
scas
test
scas
data16
icebp
xchg
add
adc
cld
mov
inc
imul
sti
sbbb
mov
pop
dec
cld
dec
xchg
fs
ret
push
andl
fcomp
call
or
dec
push
adc
icebp
push
into
pop
and
jno
cltd
and
sbb
jmp
fucomi
leave
add
add
add
add
cmp
push
call
push
out
xchg
sbb
mov
and
jo
pop
and
push
rclb
dec
addr16
lock
sub
mov
pusha
orb
sub
imul
aaa
cmp
icebp
outsb
xlat
adc
lods
lret
test
mov
add
jo
cld
xor
jmp
push
inc
cli
dec
imul
and
push
jno
adc
dec
xchg
pushf
rol
and
lcall
testb
jne
push
cmp
or
add
fsts
cli
fstpl
sub
pop
sub
jbe
or
je
and
lods
clc
hlt
jno
push
mov
inc
sbb
sub
shlb
cmp
mov
mov
iret
ret
or
pop
xchg
dec
in
les
push
ret
enter
pop
add
mov
popf
and
data16
fidivrs
cli
pop
ja
stos
jmp
stos
mov
jo
mov
sbb
xor
sub
sbbb
or
ret
pop
ja
pop
inc
sahf
mov
sbb
cmp
xor
and
push
ljmp
outsb
test
rorb
xchg
clc
push
aas
pop
sti
lods
add
sbb
mov
push
test
dec
les
fcmovnbe
or
inc
call
jmp
push
pusha
cmp
leave
jecxz
jne
and
scas
and
fistpll
and
mov
icebp
cmp
push
mov
cmp
jbe
scas
popa
fdivrl
or
pop
and
add
sbb
mov
das
xor
pop
inc
cmp
xor
cmp
dec
xchg
xchg
xchg
xchg
inc
cmp
es
sub
cmpsb
inc
mov
sub
dec
inc
in
sbb
imul
cs
lea
mov
sub
jmp
mov
adc
and
nop
call
push
sbb
mov
adc
test
aad
inc
fcoms
and
adcb
int3
nop
dec
sub
dec
adc
mov
and
and
call
jecxz
or
pmulhuw
pop
mov
and
add
xchg
addr16
mov
mov
andb
sbb
js
sbb
enter
in
mov
jg
jns
int3
add
mov
mov
mov
dec
sahf
pop
mov
mov
sbb
call
sbb
movsb
mov
xchg
mov
mov
or
mov
addr16
dec
push
push
cltd
in
sbb
mov
addr16
lret
lods
lret
enter
mov
call
call
push
cwtl
lods
enter
pop
dec
ss
sub
loopne
push
enter
repz
push
nop
lret
fmul
les
nop
cwtl
aam
in
ret
lods
cs
lcall
aam
pop
sub
xor
shrl
add
and
sbb
sbb
in
ja
leave
in
outsb
push
nop
mov
sbb
daa
pop
lods
icebp
call
and
pop
scas
test
jp
or
xchg
fadds
cmc
and
add
nop
loop
inc
add
xchg
push
adc
out
sahf
cmpsl
outsl
mov
xchg
sub
push
add
lods
std
inc
cltd
scas
add
push
mov
or
push
jbe
pop
xchg
lea
jae
test
cli
insb
pop
mov
ret
test
dec
subb
lret
jp
cltd
ret
xchg
in
and
scas
sub
dec
fwait
adc
add
and
in
lods
mov
adc
mov
ret
jge
mul
and
das
mov
or
das
adc
or
xchg
or
loop
add
jmp
adc
adc
push
jns
add
shr
lds
or
xchg
push
cli
jbe
cmp
jne
or
and
push
inc
out
ljmp
jo
push
jb
or
outsl
xchg
or
push
nop
sbb
sarl
add
xchg
sbb
jbe
out
add
add
mov
mov
inc
clc
pop
add
jmp
sub
push
test
or
dec
or
or
adc
push
aas
xor
and
inc
and
dec
adc
mov
loopne
pop
not
add
adc
rcrl
fs
add
sti
sub
mov
mov
inc
jl
sub
add
mov
sbb
sbb
int3
mov
addb
adc
into
jl
mov
xchg
xor
mov
add
hlt
mov
xor
mov
insb
es
sub
movzbl
add
dec
sbb
shr
or
push
and
mov
sbb
push
dec
xor
fnstsw
or
cld
ficoms
push
push
sub
dec
lea
in
inc
sub
cmp
inc
int
or
cld
mov
jno
xchg
int
mov
cli
push
sbb
lods
jmp
xchg
into
add
and
and
sti
nop
mov
adc
mov
idivl
mov
sub
mov
ja
test
cmp
and
mov
test
cli
sbb
and
xchg
or
jmp
sti
jge
sbb
jb
in
add
add
mov
popa
inc
jo
jg
or
fdivrs
je
rorl
jmp
mov
cmp
mov
js
push
dec
fidivrs
mov
mov
jns
pop
insb
push
insb
lods
xchg
push
jmp
jmp
shll
xor
mov
jg
cmp
jne
movl
inc
and
in
cmp
std
jne
mov
or
cmp
les
lea
sbb
flds
sbb
jl
pop
mulb
adc
add
push
push
cmpl
jnp
mov
or
push
sbb
mov
sbb
decl
cmp
into
jb
or
and
rclb
jmp
mov
push
dec
fwait
nop
add
and
nop
adc
inc
mov
rolb
jnp
xchg
pop
cmp
or
push
call
loope
push
das
shl
jne
aam
popa
push
mov
leave
inc
pop
loop
mov
lods
imul
loopne
mov
cmp
jmp
outsb
enter
dec
mov
fs
cmpb
adc
testl
add
ljmp
add
popl
in
jo
inc
hlt
jge
add
jb
xchg
ret
outsl
inc
xchg
and
jne
push
lock
add
pop
orb
jo
out
imul
icebp
mov
xor
or
sbb
jle
jnp
or
push
rol
leave
or
inc
dec
jne
mov
fildll
inc
scas
dec
addb
cmp
into
notb
add
mov
inc
sub
imul
in
inc
shrb
inc
mov
pop
mov
in
sub
adc
and
jp
pusha
sub
sti
xorb
and
xchg
lock
pop
jno
pop
pop
lea
xor
pop
adc
stos
inc
popa
dec
dec
cmp
out
orl
dec
sbb
xlat
testb
insb
ljmp
add
or
dec
fldl
jl
or
sub
mov
xor
lock
add
out
jl
sbb
or
sbb
inc
jmp
xor
mov
dec
sbb
mov
xchg
xor
add
mov
cmp
and
jno
ljmp
mov
push
aad
xor
cmp
fs
inc
mov
add
xorl
push
push
scas
test
and
test
add
outsl
lret
mov
xor
sbb
mov
test
adc
lea
or
cmpl
xor
adc
aaa
cmpl
ret
lea
loope
adc
andb
jae
add
dec
push
call
xor
pop
sub
sub
popa
add
test
loopne
push
je
cmp
call
arpl
pop
add
mov
lods
pushl
imul
out
pushf
cld
mov
lahf
das
adc
jno
inc
inc
sbb
sub
xchg
xchg
fadds
loopne
call
sbb
and
sarb
aas
and
cwtl
dec
rorb
daa
sbb
aas
ljmp
sub
adc
into
or
pop
cld
test
das
mov
inc
add
add
movl
aaa
push
icebp
or
cmp
xor
das
add
sbb
sub
cmp
mov
adc
js
sbb
pop
xchg
dec
test
es
or
ret
push
pop
sbb
adc
lock
in
jle
xor
mov
sub
mov
clc
add
std
pusha
xor
leave
cltd
jmp
lcall
cmpsb
shr
push
dec
jb
ret
out
or
push
inc
xor
and
or
inc
sbb
xchg
and
push
into
mov
test
mov
test
push
push
push
inc
outsb
ja
ret
xor
mov
iret
dec
adc
and
push
fwait
add
inc
movl
pusha
pop
inc
adc
cmpsl
lods
sub
ja
stos
popf
lods
inc
or
add
jg
loope
xor
or
fwait
inc
out
xor
cmp
push
push
sbb
pop
arpl
mov
adc
in
push
imul
and
add
ret
in
lcall
pop
dec
or
xchg
add
mov
cmpsl
cmp
ds
add
push
push
scas
inc
cltd
xor
jnp
mov
push
or
xor
sarb
pop
cltd
pop
call
iret
push
adc
mov
jns
push
push
sbb
roll
sbb
sbbl
sub
enter
dec
and
cmpsl
add
and
sbb
jns
jmp
dec
and
cmpsl
dec
popf
xchg
mov
jbe
and
pop
cmp
test
scas
popf
fiadds
mov
pop
sbb
popf
jge
jecxz
outsb
push
adcl
adc
out
xchg
es
lcall
out
lret
and
mov
mov
mov
pushf
cmp
sub
in
sub
pushf
or
or
cmp
and
mov
fisttpll
test
mov
push
mov
mov
test
or
lret
jp
sub
push
ja
in
xor
pop
movsb
pop
nop
arpl
pop
xor
pop
jl
in
arpl
outsl
pop
push
jne
cmp
or
push
sbb
sbb
into
pop
mov
xor
jne
lea
push
add
cmp
mov
sub
rorb
or
push
int3
js
or
mov
vmovd
out
dec
and
fnstcw
push
cmp
sbb
cld
pop
rorb
sub
lsl
sbb
or
incb
fsubrl
pop
pxor
push
push
rolb
xor
scas
jg
lods
mov
shr
je
mov
jg,pt
push
inc
adc
and
inc
adc
jo
mov
or
loope
jne
shlb
pop
imul
sub
add
xor
mov
je
sbb
mov
xor
fcmovne
or
push
add
sbb
add
jne
outsl
mov
sbb
cli
pop
pop
ret
mov
arpl
scas
sbb
shll
fstpl
push
mov
bound
add
cli
shr
add
leave
inc
repz
pop
jb
push
sbb
jg
jne
push
push
popf
jecxz
notb
hlt
pop
testb
ss
test
add
dec
ret
adc
push
mov
push
pop
and
not
and
or
mov
mov
lahf
lock
mov
push
xchg
add
movb
cli
adc
add
ja
sbb
push
cmp
punpckldq
sbb
ret
sbb
add
sub
xor
test
mov
mov
and
lods
add
fdivs
fidivl
or
sbb
insb
jns
cmpsl
faddl
add
jb
loopne
into
adc
aaa
mov
push
fldl
or
add
rcl
inc
repnz
adc
or
mov
mov
in
jno
ja
imul
xchg
fbstp
popa
loop
fadds
mov
jns
add
das
add
pop
cmpsb
adc
sbb
dec
add
outsl
pop
pusha
mov
sbb
adc
jns
clc
add
add
dec
mov
mov
adcl
pusha
mov
fld1
or
sbb
test
rcrl
je
pop
dec
stc
cmpsl
xor
pop
or
imul
jmp
cmp
adcb
mov
mov
lahf
lret
mov
mov
bound
cld
and
dec
clc
fstl
mov
xor
adc
xchg
jne
dec
mov
adc
lock
faddp
push
insb
nop
or
push
sub
imul
mov
mov
cwtl
push
push
pop
push
addr16
test
or
es
add
add
fsub
neg
mov
inc
push
cmp
dec
inc
es
mov
pusha
jne
inc
add
xchg
orb
xchg
sbb
adc
sti
add
pusha
push
inc
inc
add
dec
mov
je
push
cltd
jmp
inc
and
adc
fstl
pop
and
or
inc
test
sub
clc
jb
fucompp
aas
ds
jp
xchg
and
ret
mov
out
and
push
push
test
jmp
push
sub
add
cld
decl
push
mov
adc
sbb
lret
mov
test
cli
xchg
hlt
jne
divl
adc
push
ret
gs
pop
dec
cmp
fldenv
xor
jle
mov
pop
add
and
mov
std
jne
push
mov
shll
fucomip
stos
bound
adc
mov
mov
mov
testb
xor
lret
aaa
fs
shr
sbb
mov
roll
push
pusha
push
mov
ret
xchg
dec
loope
mov
in
iret
or
push
lcall
cmpl
test
xor
dec
lcall
enter
add
ret
or
push
test
ret
sarb
xchg
add
jae
and
inc
jne,pt
repz
mov
add
mov
push
inc
testb
xchg
add
rclb
stc
sbb
xchg
pop
clc
add
mov
xchg
dec
test
mov
jae
lahf
push
or
mov
xchg
out
push
cmp
add
adc
dec
xchg
sub
jb
es
mov
mov
shl
xor
cmpsl
jae
xchg
pop
cs
out
mov
test
sti
jo
pop
xor
popa
pop
cmpsl
mov
push
pop
cs
int3
pop
add
addl
loopne
mov
ret
add
mov
mov
cmpsb
imul
sub
loope
pusha
sub
mov
dec
es
lods
es
cwtl
sub
test
mov
insl
mov
or
inc
push
or
sbb
sbb
pop
lods
mov
sub
and
adc
mov
ss
cmpb
movl
ja
cmp
inc
xor
dec
inc
imul
jmp
outsl
loope
fnstcw
pushf
cmpsb
rcl
pop
leave
mov
dec
dec
inc
stc
andl
mov
mov
push
dec
inc
mov
jae
lea
push
push
or
dec
scas
cmp
inc
push
clc
fs
sub
xchg
loope
jp
aam
or
push
or
push
rolb
or
push
xor
div
push
push
inc
add
hlt
std
test
mov
dec
xlat
push
or
imull
pop
vcmpsd
dec
xorb
add
stc
mov
jo
cmpsb
test
gs
sbb
dec
and
mov
mov
movsb
loopne
aad
mov
cmp
xchg
aad
scas
push
rcl
jns
or
mov
cwtl
add
and
scas
je
movzwl
sbb
xchg
inc
inc
add
push
sbbl
mov
pop
dec
scas
jge
enter
mov
and
push
fwait
jno
xor
add
mov
loopne
add
addl
adc
fwait
test
sub
and
add
mov
push
sarb
inc
lcall
and
sub
add
xlat
ret
pop
sbb
pop
add
pop
inc
outsl
pop
add
insb
loope
call
push
mov
pop
push
add
ja
push
jne
cmp
mov
mov
pop
call
mov
aaa
inc
jle
mov
sbb
mov
popf
inc
push
sarb
mov
pop
jbe
sbb
mov
in
push
mov
dec
mov
stos
dec
mov
mov
int
push
adc
lea
mov
or
subb
pushf
or
sub
cmpb
push
inc
pop
cmpsl
js
cmp
stos
mov
jo
and
into
sub
mov
push
in
xchg
fwait
jmp
inc
daa
add
jg
sub
jo
inc
add
dec
push
daa
sbb
nop
aad
test
addr16
push
ret
sbb
add
sub
rolb
dec
or
sub
sbb
dec
add
push
repz
ds
xchg
into
lcall
sub
jecxz
test
or
incl
stc
sbb
cli
or
inc
bound
sub
frstor
or
dec
cs
sub
rcrb
pushf
jmp
push
mov
mov
inc
push
cmc
roll
push
rol
imul
psubq
or
jmp
test
sbb
jmp
and
dec
movsb
test
sbb
jg
mov
cmp
cmp
lahf
jmp
repz
mov
dec
mov
sbb
add
fstpl
fisttps
jno
insb
cmc
loope
sti
fsts
adc
test
and
xor
fstpt
sbb
jl
or
mov
je
push
push
mov
and
push
mov
rclb
int3
nop
popa
or
mov
ret
test
jo
or
shr
int
adc
xor
lret
inc
pop
imul
outsb
adc
cmp
xchg
or
daa
pop
mov
mov
mov
in
push
lea
dec
scas
cmpsl
and
push
push
sarl
js
mov
push
mov
cmp
ss
and
push
cs
mov
movsb
mov
add
mov
movb
pop
xor
lea
pop
pop
sub
pop
sub
sub
pop
sahf
out
popf
mov
js
pop
pop
xchg
or
xchg
int
mov
mov
loope
jns
shll
hlt
repnz
out
and
test
iret
jmp
lret
mov
arpl
sbbb
test
aam
push
lea
pusha
xchg
icebp
inc
scas
movsl
cmp
pop
fldt
mov
pop
aad
mov
in
mov
imul
mov
adc
mov
xor
push
jecxz
aad
inc
mov
mov
int
xchg
mov
inc
aaa
add
push
enter
test
or
dec
xchg
inc
push
xchg
xchg
lret
ljmp
and
xchg
and
test
pop
lea
mov
jecxz
in
mov
push
fisttpl
xchg
mov
movsb
dec
dec
dec
cmpl
aad
mov
mov
sub
in
fdivs
and
dec
scas
xor
xchg
aad
shrb
and
rep
es
fcomps
clc
mov
sub
lods
dec
push
add
mov
inc
popf
add
xchg
stos
icebp
ret
jg
sbb
xchg
xchg
xchg
mov
and
test
mov
nop
add
xor
inc
dec
aaa
leave
jne
test
shrb
movsl
push
andl
stos
lods
lods
add
jne
dec
mov
or
test
hlt
adc
add
add
ret
push
imul
adc
sbb
xor
xchg
add
inc
cmp
rorb
orb
adc
mov
pop
inc
clc
xor
jle
sub
jnp
rclb
les
imul
push
xchg
xor
bndldx
add
add
pop
push
mov
and
cmp
inc
push
mov
cmc
push
sbb
popa
or
add
jmp
cld
sbb
mov
push
jmp
xchg
add
xchg
mov
cwtl
add
push
jg
mov
jnp
ficoml
and
lock
ss
mov
or
or
xchg
and
sub
rorb
mov
and
push
push
testb
shlb
or
jne
loop
les
insl
sbb
and
imul
push
adc
push
mov
push
push
adc
je
nop
inc
and
mov
dec
add
adc
push
dec
or
jno
and
repz
and
xlat
std
mov
jg
ljmp
and
outsl
push
sub
repz
dec
adc
push
and
and
out
lcall
inc
or
adc
lahf
push
jbe
jle
dec
addr16
lahf
out
ja
jo
mov
pusha
push
mov
and
mov
pop
cmp
lea
lea
mov
rolb
mov
xchg
sbbb
lock
mov
fidivl
lods
enter
and
ljmp
ret
mov
mov
lret
ret
cmpl
call
rolb
jne
test
pop
add
and
into
add
mov
dec
lret
add
mov
or
loopne
in
outsl
cmp
push
dec
or
rorl
imul
jge
inc
loope
cmc
add
inc
xchg
icebp
sub
xor
test
bts
jmp
mov
adc
daa
jp
sbb
xor
mov
and
rcrl
cmp
aaa
cld
scas
inc
xchg
jne
cmpl
jne
inc
adc
push
sub
and
cmp
and
cmp
or
mov
sbb
sbb
roll
mov
pop
jg
cmp
rcll
mov
push
mov
mov
add
xor
adc
clc
iret
mov
push
inc
and
test
cli
add
sbb
sbb
mov
rorb
es
pop
addb
test
jle
andl
or
stc
mov
jl
mov
adc
popa
aas
aas
pop
inc
cmpl
pop
subl
xchg
test
xchg
test
lret
dec
cmp
sub
cmp
je
lret
add
and
inc
roll
sbb
pop
roll
sahf
pop
loop
mov
rorb
push
push
and
stc
mov
loopew
ja
mov
mov
sbb
or
mov
stos
jo
rcll
or
jno
aad
push
mov
add
mov
aam
popf
ret
cmpsl
push
cmp
mov
push
lcall
mov
inc
push
xchg
fadds
sbb
mov
lods
and
outsl
mov
ret
jbe
add
adc
inc
sbb
jne
cmp
lea
pop
add
incl
mov
les
jno
pop
pop
pop
add
out
add
jne
dec
adc
or
add
inc
xlat
add
aas
adc
pop
orl
or
ror
rolb
push
stos
add
xor
adc
push
push
pop
pop
mov
sbb
mov
ror
movl
cmp
xchg
mov
enter
or
jne
dec
rorb
inc
rclb
xchg
mov
push
fnsave
dec
add
sub
ficoml
movsl
adc
js
pop
jp
add
inc
cs
je
cmp
xor
add
js
scas
insl
movzbl
js
and
fs
push
mov
push
pop
dec
insl
mov
loope
test
shll
push
push
inc
xor
int3
pop
andl
adc
fcmovnb
ljmp
adcl
loope
cmc
push
test
outsb
sbb
xor
and
add
xor
mov
fstps
adc
or
sub
ret
into
xchg
push
mov
add
push
push
push
jl
jae
jb
push
sbb
aas
in
jae
lea
add
add
xchg
ja
cld
mov
lock
daa
cmpl
andl
pop
mov
daa
mov
mov
sub
sbb
push
pop
cmp
into
js
push
je
cltd
sarl
push
sub
lea
out
sbbb
pop
or
lods
or
xor
xor
pop
dec
mov
jge
inc
push
xorb
fadd
mov
fwait
enter
pop
mov
or
push
fadds
mov
movw
std
incl
or
movb
xor
rcrl
sub
cmpl
push
push
int
adc
jl
pop
call
test
sub
push
add
push
mov
push
sub
jl
fidivrs
sbb
fnstsw
mov
or
push
addl
pop
lret
std
scas
add
andb
push
xor
xor
dec
aas
cmp
or
rorb
and
sbb
roll
sub
shll
inc
ljmp
adc
sbb
pop
pop
push
testb
sbbl
aas
push
prefetch
or
stos
cmp
lock
push
add
xor
xor
mov
pop
push
mov
dec
xor
inc
jo
sbb
dec
or
mov
repz
jne
xor
push
orb
jmp
push
incb
push
negb
or
pop
sub
hlt
add
stos
inc
sub
push
mov
andb
xor
mov
inc
jmp
aam
adc
jbe
js
daa
je
push
mov
movl
pushf
mov
adc
addb
test
pop
idivb
mov
add
add
push
in
and
push
es
sub
jge
jl
test
out
mov
cmp
call
xor
add
jmp
je
dec
test
cwtl
mov
cld
xor
inc
sbb
rcll
aam
lock
add
lret
sbb
xor
imull
and
or
inc
mov
bound
lock
mov
add
rorb
test
jb
mov
adc
jae
xor
mov
mov
inc
pop
repnz
push
sbb
sahf
sbb
pop
pop
push
sub
push
lock
aas
fs
jb
mov
push
cltd
in
int
dec
jbe
pop
mov
dec
movsl
out
add
fistl
out
dec
jnp
rorb
xor
leave
mov
arpl
or
pop
mov
jnp
sbb
xor
fwait
es
repnz
mov
jnp
incb
cmp
fldt
loopne
daa
jg
push
mov
xor
add
add
sarb
xor
fistps
adc
lcall
inc
cmp
pop
inc
dec
inc
push
cs
pop
push
adc
dec
push
inc
adc
cld
inc
inc
xorb
pop
pand
xorb
adc
sbb
cwtl
dec
cmpsl
xchg
movl
addb
push
push
out
push
or
shlb
push
clc
stc
pusha
or
mov
cmp
push
add
adc
imul
xchg
push
xor
adc
push
or
les
inc
or
orb
test
mov
stc
or
addb
adc
fstps
ret
xchg
xchg
xorb
push
sub
cmp
hlt
mov
xorb
sahf
divb
xchg
test
mov
sbb
cmp
jle
jp
adc
dec
cmp
push
mov
not
push
dec
hlt
jge
inc
push
sbb
les
mov
pop
and
or
xor
and
subl
loop
test
in
sbb
xchg
shrb
sbb
data16
adc
push
cld
sti
std
into
test
idivl
xor
pop
mov
addr16
outsb
jno
inc
int3
hlt
in
out
fistpl
loopne
xor
pop
xchg
aam
inc
sahf
mov
mov
scas
inc
xchg
mov
test
in
es
and
and
fwait
loopne
sub
mov
adc
mov
inc
jns
clc
xchg
mov
dec
ja
sub
sub
sbb
pop
sub
fmuls
push
jmp
fcomip
mov
sbb
les
cs
sahf
clc
lock
jb
pusha
xchg
add
and
or
push
xchg
xchg
adc
insb
dec
mov
adc
loopne
sub
mov
out
pop
lea
adc
test
or
orb
sbb
scas
lahf
mov
adc
fdivs
or
enter
add
lock
je
jb
mov
pop
xchg
fadds
ret
sub
xor
jmp
pop
push
and
testb
sub
outsl
push
or
fcoms
jnp
out
fisttps
push
lock
mull
lsl
jmp
push
loopne
ficomps
push
inc
shr
rcr
shr
rcr
or
sub
jno
mov
repz
dec
push
jg
outsb
lahf
adc
out
jb
cmp
or
cmp
or
cmp
add
sbb
adc
push
shrl
cld
or
fimull
hlt
lret
pop
test
iret
pop
ret
adc
xchg
sbb
inc
sar
jbe
add
jmp
pusha
aam
and
inc
jmp
mov
das
xor
in
sub
sbb
mov
cwtl
pavgw
into
rolb
xchg
or
inc
jp
mov
mov
or
mov
push
cmp
pop
mov
rcrl
xlat
sahf
stos
in
loope
xchg
xchg
jecxz
mov
mov
push
daa
push
add
mov
inc
pop
les
les
inc
push
arpl
outsl
xlat
mov
jbe
adc
out
mov
sub
jo
push
jae
cmp
nop
roll
jmp
insl
push
inc
lock
xor
sbb
inc
cs
cwtl
xchg
clc
loop
jmp
dec
or
mov
ret
mov
or
pop
inc
adc
and
add
mov
push
dec
sbb
lret
lods
ret
xchg
jo
add
test
aaa
test
sub
inc
adc
adc
add
insb
std
xchg
jne
xor
sub
arpl
xchg
cmp
inc
mov
pusha
sub
test
pop
or
aaa
cwtl
es
fiadds
cmpl
decb
dec
inc
test
push
imul
imul
add
inc
and
xor
pop
lcall
or
data16
nop
push
push
adcl
add
xchg
mov
loopne
pop
pop
push
xor
ss
inc
xchg
in
rcrb
imul
add
lret
in
fdivs
fwait
loope
and
sbb
lock
fbld
movsb
add
cwtl
push
push
popa
push
xorb
ja
sub
jne
dec
je
mov
xor
xorb
add
xchg
adcb
mov
or
addr16
sbb
mov
push
sbb
pushl
adc
add
and
or
imul
pusha
or
jl
addb
or
sarb
testl
in
fstl
add
sub
mov
adc
sub
push
jbe
test
mov
adc
imul
dec
push
xchg
int3
lret
mov
push
inc
popa
ucomiss
mov
mov
cmp
adc
outsl
mov
push
stos
push
pusha
sahf
jae
jne
pushf
lret
and
inc
add
adc
test
xchg
inc
rorb
imul
add
arpl
aam
sub
inc
inc
add
push
aaa
lea
jbe
mov
ds
sub
inc
out
addr16
xchg
imul
xor
cmp
hlt
jno
ljmp
punpcklwd
jne
imul
bound
test
movsb
fldt
cmc
aas
sbb
xor
and
in
movb
dec
addl
mov
inc
lock
xor
icebp
xor
cwtl
dec
xchg
shlb
test
jne
push
adc
jo
mov
and
add
add
sti
mov
stos
into
mov
xor
inc
mov
pop
sub
xchg
xor
pop
push
cmp
jge
mov
xor
jae
xor
dec
and
jae
push
and
mov
xor
jl
pop
addl
or
and
movsb
lahf
sub
stc
xor
pop
dec
fwait
hlt
repz
rclb
adc
add
xchg
psubd
push
sbb
pushf
or
les
and
sub
iret
idivb
and
arpl
cwtl
cmpb
in
jp
xor
mov
push
and
sub
jo
inc
rcll
orl
test
inc
sub
xor
or
adc
add
pop
enter
inc
imul
push
gs
mov
pop
repz
cmp
or
insl
lock
jp
rcl
lock
fs
ja
mov
lods
stc
loopne
addr16
pop
sbb
subl
mov
xchg
mov
mov
cmp
adc
push
add
jb
scas
call
addr16
jbe
sti
or
and
or
xor
mov
jle
test
jo
cmp
add
std
fnsave
lea
lea
or
test
int3
ds
in
mov
jno
push
sbb
dec
sbb
add
and
dec
pop
inc
add
cmc
mov
xor
andl
enter
lea
push
out
imul
das
and
add
sub
jno
adc
fsubs
pop
jno
push
jb
jne
adc
push
mov
push
dec
test
push
dec
cmp
shrl
cmp
ds
xor
push
and
jmp
push
loopnew
add
insb
enter
xor
outsl
or
test
xor
in
ret
jl
jl
test
shld
push
test
sbb
inc
dec
mov
dec
mov
cmp
sbb
dec
mov
sub
sub
arpl
hlt
add
push
pop
xchg
add
inc
stos
inc
xor
scas
ds
cmp
mov
addb
dec
mov
cmp
xchg
sub
mov
scas
popl
pop
call
insl
and
dec
out
data16
es
pop
pop
shlb
addl
insl
testb
je
sub
jo
mov
subl
bound
test
and
mov
jmp
or
rcr
lret
lcall
cmpsb
jl
test
cmpsb
pop
pop
or
mov
dec
addb
pop
gs
or
inc
adc
add
dec
pop
or
cli
clc
xchg
test
fsubs
lock
fprem1
cmp
lea
je
and
adc
test
adc
push
push
adc
or
out
push
push
inc
mov
fisubrl
test
das
outsb
adc
mov
push
sbb
jbe
sahf
sub
orl
push
xor
out
inc
fsubr
das
pusha
inc
jmp
xor
lahf
mov
mov
mov
nop
pop
cmp
pand
js
sub
inc
mov
daa
add
sub
or
cmp
cmc
gs
pop
lods
inc
pop
imul
mov
or
loop
rcrl
pop
ret
cmp
loop
and
mov
popa
jecxz
cmp
jb
or
xchg
inc
jmp
push
mov
cs
push
or
xchg
dec
push
repnz
test
or
adc
and
mov
insb
add
cmp
hlt
mov
test
sub
sub
adc
cmpsl
jl
and
cmc
and
fsubl
inc
mov
movsb
andl
jmp
mov
jb
test
stos
popf
add
mov
and
fildll
push
test
fdivrl
das
cwtl
cmp
lods
or
cld
jle
sub
cmp
xor
add
arpl
push
in
jbe
bound
punpckhbw
cmp
rcll
jnp
fimuls
lock
inc
fs
pop
loop
sbb
mov
sub
shll
add
mov
pop
jge
negl
cmpb
shr
scas
jbe
nop
add
jne
out
dec
jae
in
je,pt
jmp
mov
or
pusha
cmp
push
jmp
and
out
add
xchg
rclb
bound
pop
push
sub
xchg
adc
dec
cwtl
xor
sbb
push
push
and
push
sub
cmp
mov
pusha
popa
cmp
sub
mov
cmpsl
gs
loopne
je
mov
dec
pop
add
test
nop
mov
mov
js
cld
mov
jo
repnz
cmpl
pop
orb
or
xchg
call
mov
dec
loop
repnz
and
lea
cmp
mov
push
jg
cmc
jecxz
sub
pop
pop
push
push
inc
jmp
cmp
mov
xor
dec
loop
dec
mov
dec
xchg
hlt
dec
ret
mov
mov
push
dec
clc
and
pushf
push
push
push
pop
cmc
fsubrs
cwtl
jge
add
adc
sub
jl
fcompl
cmp
stos
testl
mov
push
add
fldln2
inc
jle
mov
xor
jne
stos
adc
dec
cmp
add
push
fsubrp
lods
sarl
add
mov
ret
pop
mov
sbbl
roll
mov
jb
inc
jge
mov
fdivrs
lea
enter
cmpsb
xorb
out
or
jne
mov
mov
out
mov
mov
sbb
inc
imul
addl
mov
mov
push
or
mov
mov
mov
xlat
std
mov
mov
testl
out
jne
adc
cmp
jo
test
into
fiaddl
jne
inc
or
cmp
sbb
push
sahf
cltd
mov
dec
mov
nop
jbe
fsubrs
pop
pop
clc
cwtl
xchg
test
push
pushf
insb
sti
es
inc
push
lea
lcall
fisttpl
mov
adc
rorb
cld
sub
mov
cmp
jb
pushf
loopne
adc
inc
ja
mov
incw
cmpl
insl
mov
inc
pushf
test
mov
or
sbb
sti
jg
add
sbbb
xchg
loop
bound
push
sub
pop
aam
gs
call
testb
shr
das
shr
aas
or
push
sahf
pop
mov
bound
or
adc
inc
mov
inc
inc
addb
jne
add
negb
jg
sbb
shrl
shl
shr
or
mov
shl
call
pop
jne
outsb
inc
xchg
dec
inc
mov
mov
insl
or
ja
push
xorl
cmp
test
sub
rcr
jo
jnp
fiaddl
mov
cmovp
push
out
jmp
pop
sub
lods
mov
mov
nop
test
push
ret
mov
loope
xchg
dec
int3
int3
jmp
jp
jp
xchg
or
daa
mov
and
lret
into
jmp
lods
cmpsb
icebp
add
jbe
mov
dec
and
les
int3
and
mov
jp
lret
mov
xchg
out
add
loopne
negb
add
pushw
push
movups
les
pop
mov
inc
mov
inc
mov
xchg
xchg
add
hlt
mov
repz
sub
in
dec
andb
fcoms
dec
or
push
mov
fmuls
pop
add
sbb
push
mov
or
add
testb
lock
add
inc
inc
dec
jecxz
stos
push
push
clc
addr16
dec
pusha
pop
int3
sbb
lods
adc
fldl
jo
pop
cmp
xorl
aam
test
jo
test
shll
xor
sbbb
mov
addl
fstpl
jne
add
adc
push
fcomp
jecxz
int3
or
pushf
mov
ficomps
jb
dec
in
push
adc
rclb
es
mov
or
mov
adcl
sysret
imulb
mov
xchg
xchg
es
jge
mov
lods
sub
mov
cs
jecxz
lahf
mov
mov
and
and
cs
mov
icebp
pushl
add
mov
dec
adc
push
or
shll
pop
add
or
adc
pop
adc
sbb
div
shrl
adc
frstor
dec
cltd
addr16
cld
push
or
cmp
xor
fidivs
adc
xor
loope
iret
jmp
sbb
faddl
mov
inc
add
pop
sbb
popa
sbb
shll
mov
jne
push
add
rorl
lea
int
lock
loope
adc
test
sbb
in
stos
aaa
adcl
jmp
ret
push
xchg
loopne
jmp
dec
xor
push
mov
mov
in
mov
pop
push
pop
cld
add
loopne
fists
cld
cmp
xor
cmp
je
pop
jmp
dec
sbb
push
lea
jmp
xchg
iret
add
leave
sar
mov
xor
or
testb
rcr
movsb
dec
adc
aaa
mov
pop
fwait
sbb
or
bound
cmp
xchg
push
and
rclb
push
cltd
lods
adc
pop
ret
ljmp
dec
pop
add
add
inc
pushl
or
js
mov
dec
pusha
cmp
or
xor
and
xorb
jns
push
sub
and
xchg
push
add
ret
jbe
imul
addr16
mov
pop
test
iret
or
mov
add
mov
aaa
xor
adc
push
hlt
mov
andl
loopne
and
or
inc
and
test
out
lret
add
mov
enter
adc
push
mov
ret
xchg
adc
lret
cmp
nop
lock
call
jmp
ret
out
dec
inc
outsb
mov
inc
xlat
test
dec
hlt
in
lcall
inc
cmp
fwait
jnp
push
imul
or
adc
add
dec
or
push
xor
jns
pop
add
fiaddl
outsb
emms
cmp
mov
pop
mov
int
pop
imul
push
test
mov
cmp
mov
aas
pop
mov
add
and
xor
loop
shll
add
or
jle
repz
insl
jmp
daa
push
es
mov
dec
iret
test
pop
dec
je
outsb
ja
xor
mulps
ret
inc
add
fbld
cmp
js
lahf
fldl
mov
inc
mov
sbb
mov
imul
sbb
mov
mov
stc
clc
mov
and
mov
std
ds
rclb
insl
repz
cmp
mov
daa
clc
push
imul
mov
adc
addl
pop
imul
xchg
and
mov
fisttpll
jbe
nop
jno
js
daa
ret
sub
add
incl
push
movsb
push
andl
or
in
pop
jns
pop
aaa
ret
add
bnd
sbb
loopne
data16
jle
xchg
or
adc
cmpl
add
pusha
aad
in
mov
movl
mov
adc
cmp
adc
sbb
shlb
or
mov
push
or
adc
lods
jne
pop
call
add
call
push
mov
daa
stos
mov
mov
dec
outsb
test
mov
mov
jg
jmp
loope
dec
hlt
inc
mov
pop
mov
in
dec
xchg
adc
stos
ja
outsb
lock
aas
push
jae
adc
xor
cmp
sub
xchg
add
lcall
jne
adc
sub
push
mulb
ret
mov
and
jno
xchg
push
inc
je
xor
cmp
sbb
or
adc
dec
jmp
or
rclb
push
sub
lods
cmp
test
pop
test
icebp
in
dec
arpl
xlat
or
in
js
jno
xchg
call
inc
ss
mov
pop
sbb
and
cmp
fdivl
adc
inc
outsb
mov
push
and
or
out
or
adc
mov
test
add
xorl
push
push
mov
dec
cmpsb
mov
roll
pop
pushf
push
dec
aam
mov
pop
adc
and
ret
mov
and
cmp
pop
shll
add
push
rcrb
loop
pop
hlt
loop
movsl
xchg
and
and
pop
xor
pop
xor
adc
sbb
mov
mov
add
push
jmp
test
push
pop
adc
cmpsl
xorl
pop
jl
jmp
cmpl
insl
or
js
pop
sbb
sbb
push
jmp
stos
popa
or
inc
push
push
les
pushl
add
adc
aam
sub
js
les
enter
and
inc
inc
push
cmp
and
adc
movlps
pop
adc
push
inc
push
mov
or
sbb
or
fsts
xor
mov
dec
sub
lret
xor
movsb
lock
jge
mov
and
add
xchg
insb
mov
rol
fldcw
imul
gs
cmp
enter
adc
data16
ret
dec
mov
pop
andl
and
sub
pop
mov
add
add
push
add
inc
inc
pop
pop
shl
mov
cld
mov
mov
adc
cmp
or
mov
jl
sbb
andl
ss
out
fs
out
in
mov
mov
cmp
fsubrs
push
and
inc
ret
icebp
or
push
pop
cltd
mov
push
jne
push
notl
cmpsb
aas
out
int
xor
pop
jb
cs
push
or
addb
imul
sarb
adc
rorb
shlb
insl
mov
sbb
insl
push
dec
push
or
adc
or
sbb
insb
pop
jne
pop
push
pcmpeqw
lods
and
add
xchg
cmp
mov
jmp
sbb
vmread
push
adc
mov
ret
lea
ficoms
std
popf
pop
dec
es
cltd
adc
fistps
int
ss
js
imul
dec
ljmp
push
cmp
sub
imul
add
sub
jb
imul
dec
or
ret
loop
movsl
pushl
xchg
orl
push
mov
aaa
adc
or
cmpb
pop
sub
dec
jecxz
dec
int3
push
or
jne
jge
mov
or
hlt
push
shrb
mov
jnp
xor
repnz
add
xchg
jb
jmp
nop
das
inc
lods
mov
je
shlb
into
std
shlb
jmp
mov
in
imul
push
mov
mov
sub
push
jno
outsb
and
sub
cmp
fistps
or
xchg
sub
addl
xor
adc
inc
mov
add
and
jne,pn
sbb
mov
mov
dec
push
or
adc
add
fnstsw
mov
mov
mov
and
xchg
jmp
leave
ss
loop
icebp
hlt
pop
xchg
add
lods
ret
sub
loopne
jmp
cwtl
repnz
push
dec
add
aaa
sub
mov
push
adc
fs
jecxz
jbe
or
jg
or
xor
jp
xor
sbb
inc
cmp
roll
adc
sub
dec
sbb
test
test
adc
bound
fwait
pop
call
jno
or
push
xor
sbb
jno
push
stc
jb
push
inc
pop
and
add
mov
inc
mov
xor
stos
sub
call
test
lahf
push
push
sbb
sbb
test
loope
pop
or
mov
dec
cmp
jmp
cs
mov
lods
push
cs
test
sbb
or
inc
and
adc
add
jae
add
push
out
sahf
es
adc
nop
subl
test
popa
test
scas
adc
dec
push
ret
mulb
add
mov
xchg
push
jp
jge
pushf
or
xchg
addb
fwait
rcl
pop
or
xor
push
add
push
aas
cli
shlb
repnz
xor
or
insb
sbb
push
cwtl
mov
ret
push
sub
mov
test
cmp
xchg
mov
clc
or
dec
in
dec
cmp
mov
add
push
loop
xor
mov
inc
in
xchg
sub
add
ss
xor
xchg
pop
mov
push
in
ja
cwtl
xor
cmpl
xor
daa
test
sti
mov
jle
lods
loopne
xor
xlat
mov
mov
fwait
or
dec
push
push
dec
jne
gs
hlt
stos
out
rcrl
and
add
adc
je
pop
cli
test
or
adc
je
cmpsl
xor
jae
or
inc
and
xchg
into
les
in
in
and
out
test
popa
jg
data16
loop
cmp
outsl
aam
sub
xor
push
push
in
mov
xchg
ds
adc
jns
sub
jo
cmp
dec
cwtl
and
clc
sbb
inc
push
fists
mov
or
cmp
lret
push
or
jbe
cmp
adc
ss
in
and
sub
loopne
in
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
insb
jo
adc
jb
js
dec
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
shlb
and
enter
cltd
pusha
sarb
leave
and
loopne
xor
and
call
xchg
dec
lock
clc
xchg
inc
dec
xor
add
add
fiaddl
or
gs
adc
adc
sbb
dec
xor
and
sub
xor
and
xor
dec
shll
inc
gs
cltd
jbe
xchg
dec
dec
mov
xchg
dec
es
pop
pop
jo
daa
cltd
pusha
sbb
add
pop
lcall
mov
dec
xor
or
shlb
and
sbb
lcall
and
adc
sbb
pushf
dec
xor
int
mov
rorb
cmp
mov
inc
rolb
rol
dec
enter
int
int3
dec
mov
mov
pop
xchg
adc
or
push
jo
lcall
ret
jmp
sbb
or
dec
or
popf
movsb
xor
xor
dec
sub
inc
or
pushf
xor
pop
push
or
jo
mov
xchg
push
dec
push
sub
and
jmp
lret
and
add
xor
in
or
or
out
jb
or
shll
dec
xor
adc
divb
leave
and
shr
xchg
fildl
add
gs
fcoms
js
in
test
adc
or
inc
xchg
icebp
pop
push
dec
je
mulb
shll
mov
lea
or
mov
loop
mov
push
mov
clc
incb
mov
pop
adc
lock
and
mov
mov
jl
and
jecxz
sbb
push
dec
jae
add
or
rcrl
aaa
adc
and
mov
xor
sub
aaa
jge
je
mov
loope
flds
and
pop
adc
fistpll
pusha
mov
pusha
loope
pop
sub
xor
sub
adc
psrld
pusha
fldl
xchg
insl
out
pop
dec
jmp
jne
and
inc
or
jns
dec
in
or
add
add
test
filds
andl
xchg
sub
mov
rol
das
repz
sub
call
and
dec
add
fcompl
imull
add
stos
add
out
and
orb
call
pop
sbb
cltd
js
es
push
and
or
fwait
adc
jnp
inc
flds
fstps
jmp
frstor
pop
adc
outsl
loopne
and
push
das
aam
hlt
adc
jbe
lock
jg
pop
and
imul
adc
sub
push
xor
dec
xor
push
xor
mov
int
sar
rorb
cltd
push
inc
xor
sbb
call
or
fldz
cmp
push
jg
rcr
lock
pop
jp
jmp
sub
sub
jmp
pop
jb
pusha
sub
push
or
psubusw
xor
test
into
adc
mov
scas
addb
sbb
mov
mov
je
rorl
mov
nop
or
xchg
push
adc
fstpl
or
cmpsb
mov
xchg
cmp
cmp
jp
repz
lret
test
inc
rcrl
js
call
movsb
mov
or
repnz
movsl
imul
xchg
and
cli
shrl
mov
popl
orl
fchs
mov
mov
push
cld
nop
pop
lds
pop
jmp
pop
cs
nop
addl
icebp
sbb
jl
pushf
pop
lcall
scas
mov
add
push
lcall
push
jecxz
mov
jle
push
add
xor
xchg
add
sar
sub
fisubs
sbb
cmpsb
lret
add
xchg
lock
sbb
mov
mov
add
out
inc
add
vaddps
push
fcompl
popa
je
pop
sbb
filds
or
call
or
sbb
sbb
add
hlt
pop
mov
adcl
and
pushf
sub
stos
push
push
cmp
push
scas
js
inc
or
dec
pop
fstpl
test
xor
jmp
jno
or
fidivrl
leave
dec
inc
and
or
ret
push
add
or
add
or
dec
andb
adc
cmp
icebp
jo
data16
outsb
sbb
pop
cmc
lods
daa
mov
fsubrl
xchg
or
lock
mov
mov
ret
daa
aas
pushl
pusha
add
cltd
adc
and
scas
cwtl
mov
jbe
push
das
ss
mov
xor
sbb
mov
test
sub
pusha
mov
mov
daa
sub
jl
push
jnp
rolb
loopne
in
andl
imul
push
cld
sub
mov
mov
clc
xor
pusha
mov
or
stos
dec
imul
divb
cld
enter
or
sbb
outsb
dec
inc
ljmp
decb
mov
nop
out
and
pop
add
pop
or
and
jbe
mov
and
xchg
lods
andb
test
js
enter
fnstenv
loopne
rcr
pop
fldcw
pop
out
fisttpll
iret
mov
xchg
aad
mov
pop
and
mov
icebp
das
pop
sbb
jg
lcall
dec
pop
lcall
push
lods
pop
mov
out
mov
push
jp
sbbl
xor
push
imul
and
fsubrs
inc
aam
mov
push
push
push
movsb
scas
movsl
movsl
and
sub
das
push
and
jnp
test
icebp
jge
movswl
sbb
loop
daa
and
mov
fldcw
or
mov
and
rorb
data16
testb
or
insl
or
push
mov
cwtl
or
sub
mov
test
fcoms
ja
and
sbb
adc
or
ret
nop
call
shrl
jmp
leave
mov
addl
mov
je
inc
icebp
call
je
scas
xsaveopt
xchg
hlt
sub
mov
mov
jo
mov
and
loope
mov
pop
out
jmp
mov
test
nop
mov
adc
lock
cld
and
mov
sbb
fwait
clc
add
int
jbe
add
adc
roll
testb
lock
mov
je
or
push
jns
sarb
aad
push
add
adc
adc
xor
adc
xor
mov
mov
mov
mov
or
adc
inc
clc
add
add
jo
into
ljmp
push
add
lret
je
mov
and
xor
xor
out
sti
jbe
nop
les
test
les
movsb
inc
inc
arpl
jg
adc
std
jle
or
or
loope
cli
test
adc
in
add
loope
rcrl
cmp
add
mov
push
adc
cld
cmpsb
dec
or
insl
xor
imul
dec
push
or
std
mov
jecxz
sub
push
dec
push
mov
sti
add
lret
loopne
rorb
addb
pop
pusha
sbb
dec
lock
stos
jp
pop
pop
les
lock
sete
sub
out
cmp
add
sub
pop
add
ret
lret
adcl
pop
jns
dec
or
inc
lea
pop
pusha
pop
fs
shrl
rolb
ds
call
not
test
ret
jmp
cmpl
add
repz
mov
mov
shll
and
iret
loopne
adc
iret
add
ss
jbe,pt
dec
mov
add
inc
fcompl
or
cmp
pop
xchg
clc
sbb
dec
cmp
adc
loopne
das
pop
adc
fidivs
mov
cwtl
and
repnz
add
pusha
adc
adc
add
subl
jl
fcomps
lea
cld
testb
enter
cwtl
je
inc
mov
or
cmp
loope
or
inc
ljmp
add
enter
xchg
dec
xor
cmp
jl
push
movsl
das
sbb
andb
mov
lret
sub
sub
testl
jb
mov
and
loopne
push
ds
push
or
and
aam
out
mov
adc
jl
inc
imul
inc
fsubl
in
sub
and
jmp
push
sbb
mov
or
dec
jns
mov
xchg
in
push
rcr
cli
push
sbb
lods
sbb
test
pop
push
jl
repz
mov
out
rorb
or
inc
rcrl
rdtsc
lea
cmp
push
cli
loop
wbinvd
mov
jmp
push
and
jb
test
clc
movl
xor
pop
mov
and
shl
loopne
pop
sbb
push
aas
mov
lock
or
shll
and
xor
mov
xor
mov
mov
arpl
sub
popa
outsb
pop
push
sub
dec
add
mov
lock
add
into
out
es
lea
out
inc
cmp
sub
mov
in
xchg
jge
pusha
and
add
std
lods
shl
test
xor
xor
pusha
dec
or
fiaddl
pop
lock
add
inc
fs
cmp
popa
inc
dec
inc
push
fisttps
dec
test
jmp
jne
and
or
mov
cmp
adc
push
push
xchg
pop
or
push
inc
push
leave
enter
xchg
cs
mov
push
jne
inc
adc
les
and
dec
adc
nop
sub
sbb
dec
adc
inc
dec
and
jne
lret
adc
xchg
jmp
inc
sbbl
mov
icebp
cmp
mov
cld
jb
nop
jp
mov
ss
inc
mov
adc
or
repz
dec
fisubrl
insb
xchg
out
xchg
add
jo
push
sub
push
pop
xchg
cmp
sti
mov
cs
or
ss
cmp
je
or
clc
jg
inc
xor
mov
dec
cmpb
je
mov
push
idiv
sbb
sbb
add
or
mov
fwait
pop
mov
imul
call
rorl
jp
outsb
cmp
jle
inc
inc
or
sub
mov
and
pop
sbb
dec
add
adc
or
adcl
xor
xchg
add
push
negl
popf
push
add
adc
arpl
cmp
pop
add
adcb
jecxz
xor
andl
jne
xlat
sete
pop
roll
inc
loope
dec
fdivs
or
add
xchg
xor
inc
rclb
pop
sbb
sbb
vpmacsswd
add
mov
popf
mov
cmpl
mov
and
sub
dec
jmp
clc
pop
lods
jo
cld
mov
inc
or
mov
sub
sbb
add
add
add
xchg
push
push
and
sub
add
add
push
in
jmp
shrl
sub
loopne
inc
mov
mov
mov
fadd
sbb
andb
push
out
pusha
bound
xor
hlt
cs
or
add
add
add
xor
pop
into
adc
add
in
xor
push
pop
cmp
push
xor
ret
push
push
mov
xor
xchg
or
fs
inc
pop
inc
in
inc
xchg
cmc
daa
sbb
iret
ret
jmp
sbb
jmp
adcl
jge
xchg
sub
adc
mov
xchg
mov
mov
and
push
adc
shlb
push
lret
lea
sub
sbb
and
sub
push
cmp
push
jmp
mov
jno
lds
pop
push
mov
lret
and
push
fadd
xor
dec
push
mov
xchg
pop
jl
into
jge
pop
dec
fcoml
and
call
xchg
mov
mov
fdivrs
xchg
push
daa
lea
jp
adc
loopne
push
cmp
mov
les
or
mov
je
sub
mov
push
imul
push
cmp
xchg
dec
fcompl
sbb
ret
cmc
fiadds
mov
or
scas
cmpb
loope
push
int
xor
cmp
mov
test
enter
js
subb
push
mov
lods
fists
dec
xor
cli
pop
sub
leave
and
add
insb
movb
ret
mov
and
mov
push
inc
popf
neg
sbb
loopne
dec
ja
stos
mov
cs
adc
jg
ret
repnz
add
call
add
xor
xor
sahf
cmpb
subb
pop
pop
adc
mov
inc
xor
mov
jb
mov
xor
xor
fisubs
pop
sub
or
or
push
xchg
mov
sub
adc
push
add
inc
push
and
sub
xorl
rcrb
and
ret
dec
imul
sub
jbe
lods
clc
dec
jge
insl
cld
add
hlt
shrd
sbb
mov
cmp
inc
sti
jge
jge
sbb
clc
cwtl
xlat
xchg
faddl
add
data16
jg
sbb
inc
and
xor
out
add
cltd
sbb
cld
sub
lea
cmpb
or
shll
inc
mov
adc
sub
insb
xor
push
lock
or
sbb
push
sbb
push
and
ljmp
sarl
jg
xor
jl
or
jmp
mov
sub
fimull
sub
loop
jl
lea
jb
mov
subl
sub
add
mov
sub
in
lock
sarl
std
cli
sarb
add
push
scas
mov
dec
pop
or
xchg
movsb
xchg
cmp
jo
xor
add
add
jnp
or
lods
ja
dec
fnstsw
push
loopne
test
sbb
sbb
les
cmp
mov
and
mov
cmp
add
add
or
sbb
jle
mov
push
sbb
mov
pop
mov
lock
sahf
fwait
adc
xchg
orb
jns
neg
les
inc
or
or
roll
dec
cli
ret
aaa
push
lods
lods
roll
push
sbb
inc
mov
inc
repnz
push
xchg
shrl
push
add
js
repnz
je
aad
sub
cmpsl
inc
and
roll
sub
sbb
loopne
sbb
stc
cmp
mov
lock
add
pop
push
divb
push
cmp
pop
das
inc
nop
push
push
inc
out
mov
xor
push
dec
cmp
leave
clc
dec
or
sbb
push
push
push
sub
sub
push
adc
pushf
push
ret
jmp
adc
sub
pop
int3
cmpl
inc
push
add
popf
jmp
add
add
mov
ds
or
movsb
fstps
in
gs
or
pop
data16
cmpsb
mov
sbb
inc
mov
je
inc
je
dec
sbb
and
pusha
xor
cmp
bound
sub
and
fs
je
xor
mov
popa
sub
or
mov
mov
inc
mov
xor
push
imul
adc
cmp
lods
pop
inc
je
sbbb
push
sahf
inc
test
and
out
test
and
daa
push
adc
push
cmp
out
sbb
jp
testl
pushw
xchg
sarl
ss
rolb
mov
out
push
push
push
sub
mov
cmp
notl
sbb
je
mov
hlt
ja
mov
popl
enter
lea
push
pop
test
push
jns
mov
add
sub
fwait
pusha
cmp
ret
js
nop
inc
sbb
push
pop
pop
aam
aam
pushl
xor
arpl
sub
inc
cltd
mov
push
leave
shll
sarl
push
push
push
dec
pop
xor
inc
ljmp
xchg
sub
push
sub
insl
outsb
inc
cmpl
movsl
add
mov
xchg
inc
ljmp
inc
rol
test
jmp
insl
push
push
iret
test
sub
mov
cmpl
adc
xchg
push
or
push
call
mov
push
mov
ss
or
mov
jne
sub
or
icebp
gs
mov
pop
push
rcr
pop
out
dec
and
pop
cmp
or
jb
movsb
cmp
jge
xor
ja
adc
je
dec
je
dec
inc
out
pop
push
push
jmp
or
jmp
aaa
xchg
test
xorb
orl
sub
fistps
mov
repz
js
ret
add
add
rcl
or
data16
shr
js
int3
or
and
andb
xorb
inc
or
mov
or
dec
xor
cmp
das
jne
adc
push
and
xor
and
cmp
je
cmpsl
mov
jp
mov
test
int3
mov
adc
sbb
je
mov
adc
add
sbb
cmp
or
into
sub
xor
sub
fld
mov
dec
js
sub
jno
lret
cmpl
dec
xchg
sbb
or
xor
shlb
sbb
add
mov
add
inc
add
dec
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
sbb
clc
shr
add
or
inc
pop
jp
out
pop
add
out
pop
or
mov
push
push
adc
notb
loop
shr
lret
add
mov
notb
outsl
leave
ss
add
add
xchg
adc
push
add
fidivrl
mov
lods
lods
leave
inc
jbe
add
jl
in
mov
cmp
or
dec
inc
sub
xchg
pop
push
addl
mov
and
inc
fisttpl
cmp
pop
test
adc
pop
or
xor
lret
dec
in
into
clc
xorb
dec
push
mov
sub
stc
pop
sbb
mov
int3
mov
ficompl
dec
shlb
lret
pusha
cmpsb
sbb
xchg
xchg
movsb
add
es
scas
or
lock
cli
fiadds
adc
xor
and
push
adc
dec
fsub
fdiv
imul
add
cli
jne
mov
rclb
popf
sbb
mov
test
add
ret
fiaddl
pop
inc
mov
shll
aaa
mov
or
leave
adc
sbb
nop
xorb
ficompl
pop
jb
shlb
xchg
adcb
sub
inc
repnz
imul
xchg
nop
sbb
test
pop
jns
icebp
cmpsb
dec
push
sub
je
xor
cwtl
sbb
add
sbbl
test
add
lret
jbe
decl
es
cmp
and
push
dec
dec
mov
jns
or
or
add
add
add
stos
mov
mov
mov
nop
cmp
sbb
fs
or
cs
jmp
loope
pop
pop
cli
add
mov
push
jp
or
ljmp
inc
xchg
sbb
pop
outsl
das
pop
outsl
inc
sub
sub
les
pop
inc
ja
lods
imul
and
xor
or
xchg
clc
xor
fbld
adc
gs
repnz
cmpb
add
les
cmp
je
add
xchg
and
pop
int3
jge
icebp
add
inc
sbb
dec
cmp
mov
je
mov
or
ss
push
add
leave
cmp
pop
inc
test
ds
out
cmpl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
adc
repnz
icebp
popf
mov
pop
iret
cmp
mov
fdivrs
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
lea
sbb
out
movsb
adc
cmpsb
sbb
bound
ds
frstor
sub
or
jg
xchg
adc
cmpb
jl
xor
hlt
cmp
push
xor
add
rolb
fstl
inc
popa
psubw
inc
sbb
inc
push
insb
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
mov
or
aam
cmp
sub
jmp
rcrb
push
jne
cmp
jne
imul
jmp
dec
add
jbe
out
dec
fdivr
into
adc
rorb
push
cltd
or
adc
and
xor
clc
out
roll
leave
add
or
je
mov
iret
push
add
mov
or
cli
xor
cmc
xchg
shl
mov
mov
push
push
sahf
jne
andb
jb
call
and
xor
inc
add
dec
adc
mov
lret
js
out
dec
and
xor
adc
adc
add
clc
popa
mov
add
mov
lock
icebp
cmovnp
inc
inc
push
neg
neg
sbb
lahf
ja
sahf
sub
inc
sbb
or
sbb
mov
enter
xorl
push
push
inc
dec
pop
add
fcomi
and
adc
adc
and
mov
addl
mov
mov
daa
pop
pop
pop
aam
das
fidivl
shlb
and
lods
rcl
ljmp
dec
and
shr
sub
arpl
push
sub
std
push
idiv
and
maskmovq
cld
lock
je
pop
or
mov
add
add
and
add
lret
inc
push
pop
pop
aaa
into
add
shlb
test
xchg
int
inc
sbb
dec
lahf
enter
inc
incl
jo
push
or
aad
inc
xor
cmp
jbe
aas
pop
cli
sbbb
adc
aam
push
xchg
and
sbb
push
daa
or
push
rcll
cmp
dec
inc
inc
sub
add
or
into
mov
mov
sub
sbb
jo
jp
ret
gs
in
cmp
rcrl
cs
ljmp
cld
inc
ss
inc
mov
sub
pop
add
cmpsb
jnp
inc
inc
jns
cmp
out
cld
mov
adc
ficompl
pop
lods
test
adc
add
pop
push
jo
and
mov
mov
enter
fs
xor
cmp
aaa
dec
jae
mov
push
xchg
rolb
and
das
adc
es
mov
je
das
subb
and
jb
xchg
jns
cmp
ja
add
cmp
adc
cmp
jne
inc
je
pop
inc
shll
leave
adc
mov
sbb
add
jl
pop
pop
je
push
adc
adc
xlat
push
fdivs
adc
sbb
fstl
and
pop
stos
mov
test
or
or
fdivr
aas
dec
push
pop
push
movb
jmp
or
push
mov
aaa
ss
cmp
mov
in
test
mov
or
mov
add
xor
sub
adc
cmp
ficomps
xor
pop
mov
into
testb
jno
subl
sbbb
add
test
test
mov
sti
cwtl
call
push
and
pushw
cmp
push
add
pusha
mov
add
cmp
mov
pop
dec
push
imul
cmp
shr
shr
inc
imul
lea
or
mov
dec
fisubrs
or
mov
jnp
data16
es
ljmp
and
push
cwtl
sbb
jb
mov
cwtl
inc
insb
mov
adc
imul
sub
addr16
cwtl
mov
adcl
push
and
jl
cmp
ret
or
dec
jle
roll
repnz
add
loopne
adc
xlat
mov
mov
mov
sti
fldt
and
lea
inc
xor
adc
cmpsl
add
into
sahf
mov
pop
cmp
lock
dec
adc
cmp
xchg
iret
imul
testl
in
ljmp
aad
inc
mov
cmp
clc
mov
jne
lea
and
cwtl
rolb
push
and
lea
gs
push
xor
xchg
les
add
dec
push
adc
inc
and
scas
movsb
mov
or
ret
movsb
sub
sbb
mov
pusha
cmpsw
aad
dec
insb
xchg
mov
mov
imul
push
lods
and
mov
cmpsb
rorb
add
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
sub
inc
mov
jle
int3
sar
mov
mov
test
pop
shr
or
mov
dec
xor
pop
jp
jge
rcl
jnp
lock
dec
and
jnp
repnz
dec
div
add
xorb
xor
sub
test
loopne
nop
orl
mov
cli
adc
and
pop
cwtl
ficompl
scas
mov
dec
jg
and
mov
push
fidivl
fldcw
enter
jg
or
divb
cmpsl
mov
xor
sbb
cmp
ss
inc
repnz
shlw
loop
out
aam
rcrb
dec
add
enter
bound
adc
out
sub
daa
xchg
inc
imul
or
mov
fcom
and
call
jbe
push
sbb
dec
sub
sbb
mov
adc
dec
add
pop
notb
test
and
or
fmull
call
mov
and
mov
mov
add
push
cwtl
mov
mov
sbb
add
testb
adc
rcll
xchg
adc
jg
or
and
and
add
xchg
lret
out
or
cltd
add
mov
inc
cs
add
jb
or
cmp
jne
jne
adcl
pusha
or
nop
sbb
lret
mov
jp
or
add
sbb
ret
fs
sub
mov
jle
jo
sbb
movb
push
cmc
pushl
xor
call
pop
outsb
call
add
call
fldenv
or
push
inc
leave
sbb
shl
sarb
sbb
pop
cli
pop
inc
rorl
mov
sahf
mov
and
das
adc
neg
and
call
insl
call
mov
push
loopnew
fcoms
mov
pusha
lea
push
and
mov
push
in
mov
movsl
out
popf
cmp
add
dec
aaa
stos
mov
push
sar
sub
sbb
ds
dec
mov
movsl
mov
mov
popf
sbb
lock
inc
dec
enter
int
stos
xor
jae
add
inc
xor
aas
call
es
add
dec
add
mov
inc
ljmp
jmp
sub
inc
sub
jge
pop
cmc
cmpsl
push
sub
cmpb
or
add
dec
cmp
repnz
inc
dec
add
add
fadds
dec
inc
mov
sub
ret
jp
push
lock
jmp
divb
int
or
cmp
mov
jbe
mov
lret
test
add
push
mov
fs
test
mov
in
adc
add
add
in
dec
push
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
mov
adc
or
lods
or
or
mov
xchg
add
pop
jne
or
pop
xchg
lcall
dec
push
in
inc
xor
ret
sbb
adc
mov
mov
xor
push
imul
pop
mov
ret
lock
pop
mov
mov
iret
movsb
repnz
lret
into
pusha
inc
push
je
inc
fidivrl
scas
jp
pop
pop
add
testb
or
pop
ret
mov
adc
push
loopne
add
cmp
rolb
cmp
or
or
adc
and
pop
jo
fsubl
fisubl
test
mov
je
aaa
jecxz
or
pop
or
inc
call
insl
add
mov
adc
jne
and
and
jl
add
test
pop
loop
jge
out
and
push
dec
std
add
or
ret
and
and
cmp
dec
nop
clc
mov
adc
xchg
test
sbb
sbb
or
push
scas
inc
jo
push
orl
mov
shll
xchg
mov
and
ret
rcl
or
or
add
mov
lock
repnz
test
ds
into
or
add
or
adc
xchg
mov
mov
mov
repnz
out
sbb
xor
inc
jg
into
shll
mov
push
test
pop
sub
push
js
aaa
js
nop
pop
sahf
pop
add
add
shlb
or
sbb
mov
dec
pop
stos
cmp
pop
inc
push
mov
js
mov
hlt
dec
lea
sub
leave
lahf
pop
xchg
out
xor
ds
adc
add
arpl
movsb
pop
stos
ret
mov
mov
cmp
popf
imul
or
mov
inc
sub
jmp
mov
sbb
jmp
stos
shrl
push
xor
xchg
pop
mov
test
sarb
dec
dec
or
aas
mov
int
cmp
add
clc
jbe
sbb
xchg
sbb
push
xchg
sbb
ds
rcr
xchg
sarl
push
test
hlt
add
in
cmpl
enter
cmp
cs
inc
jo
andl
lods
and
icebp
enter
je
inc
adc
dec
sub
loope
mov
out
je
mov
repnz
ljmp
mov
cmp
jb
cmp
jbe
dec
enter
sub
jmp
push
dec
xor
pushf
xchg
loopne
bound
insb
mov
mov
leave
mov
push
push
or
cli
sub
ret
pop
push
divb
aam
inc
popf
repz
and
or
loopne
in
or
jb
popf
test
mov
popa
and
mov
loopne
test
cmp
pushl
pop
jl
pop
push
and
push
push
je
inc
insl
mov
pop
and
sbb
pop
icebp
mov
fsub
adc
imul
mov
mov
pop
adc
mov
xchg
out
xor
shrl
push
push
xor
andl
cmp
les
jne
cmp
cs
push
cmp
sbb
push
mov
out
xlat
or
ret
hlt
cmp
add
or
pop
aam
fldenv
sub
bound
ficompl
xchg
pop
jmp
push
outsl
push
aas
mov
add
cs
sbb
inc
notl
cmpsl
mov
add
dec
inc
xchg
push
js
jl
mov
adc
dec
fidivrl
loope
aaa
cmc
lods
aam
inc
inc
pop
loopne
pop
and
orb
call
xlat
inc
push
ret
push
add
mov
cmp
sub
aad
xor
mov
pop
pop
xor
ret
mov
adc
or
inc
loope
and
pusha
gs
sbb
mov
je
in
sbb
xor
xchg
std
mulb
test
sbb
xor
jp
mov
xchg
push
push
push
scas
sub
add
push
push
jl
lods
dec
lea
pop
mov
insb
movsl
enter
pop
pop
mov
xlat
cltd
mov
addb
lock
dec
mov
mov
clc
sub
je
inc
cmpsb
loopne
jmp
sub
fs
movsb
jnp
scas
cmpb
sub
js
push
xor
add
lcall
or
dec
sbb
inc
or
push
push
insl
push
cltd
mov
iret
xor
mov
xor
mov
push
mov
sub
add
sbb
xor
loopne
clc
shlb
sbb
hlt
push
sbb
je
subl
scas
sbb
lret
sbb
xlat
jnp
popa
push
mov
pop
cmp
clc
inc
aam
jbe
lahf
push
push
mov
imul
mov
mov
movsl
rorb
test
xor
sbb
in
push
and
jle
inc
das
cmp
adc
push
adc
lret
cmc
add
and
mov
cmp
cmpb
loope
cmp
add
repz
hlt
add
cwtl
dec
cli
and
sub
sbb
dec
mov
shlb
pop
rcll
push
push
or
out
jmp
sbb
push
push
mov
clc
outsb
pop
or
mov
mov
xor
mov
sub
enter
insb
add
or
push
xor
cltd
mov
push
add
jb
add
adc
clc
jbe
jo
xor
sbb
sub
push
and
dec
insb
aas
mov
and
cwtl
pop
sub
lea
rol
ror
push
inc
sub
add
aas
loopne
or
bound
insb
popa
es
xor
in
adc
shl
push
cmc
ss
add
xchg
lds
sub
cltd
mov
mov
cmc
gs
add
dec
fcoml
adcl
xchg
push
add
push
sub
ror
int3
nop
push
ljmp
dec
mov
sbb
inc
movsb
roll
lods
xchg
or
insl
cld
mov
loopne
sub
xchg
loopne
and
popa
sbb
inc
in
push
test
adc
xchg
jnp
xor
jo
mov
int
ret
add
push
cmp
sbbl
adc
cwtl
cmp
mov
xor
xchg
cmp
or
push
jno
fidivs
in
or
into
inc
adc
imul
and
lsl
lock
and
loopne
and
adc
add
sbb
sub
mov
scas
lock
cs
mov
aam
mov
repnz
cmpsb
imul
add
in
bound
dec
sbb
mov
insl
clc
pop
adc
popf
and
push
int3
sarb
sar
incl
lock
das
dec
inc
gs
add
pop
ret
bound
push
popa
sub
mov
xor
orb
push
fistpll
or
adc
data16
xor
inc
and
into
adc
jo
jmp
push
vpcmpgtw
sbb
adc
adc
imul
sbb
das
roll
add
imul
and
dec
adc
movsl
loopne
pop
arpl
imul
fidivrl
roll
loope
fsubrp
push
addr16
jb
andb
dec
inc
imul
add
inc
mov
and
jle
aas
or
rolb
fisubs
movsl
jge
adc
mov
sbb
cmp
insl
stos
mov
ja
jbe
jge
add
mov
jne
push
xlat
cwtl
jns
mov
dec
stc
sbb
aad
xor
sub
repnz
mov
jg
adc
lock
adc
lcall
sub
mov
mov
mov
shl
cmp
js
rcrb
mov
popa
mov
jo
int3
into
lock
ljmp
in
jecxz
ds
ret
dec
mov
pop
add
pop
aaa
push
push
cmp
ret
sub
inc
outsb
ret
inc
and
push
sub
ret
dec
stos
lods
scas
pop
jb
lea
and
leave
jp
or
push
sbb
sub
push
add
pop
fs
mov
sbb
in
pop
aaa
mov
mov
lcall
sub
loopne
pop
cmp
clc
ret
xor
mov
xor
cwtl
bnd
or
decl
insb
das
or
mov
inc
mov
jg
jae
pop
adcb
lret
xchg
addb
bound
cmp
push
mov
cmp
ja
pop
inc
inc
hlt
xor
push
cmp
jl
or
pop
add
adc
pushl
mull
int
shr
rcrb
cli
sbb
jns
jecxz
ds
add
cltd
testl
mov
push
cmp
js
in
ret
xchg
mov
xor
lcall
or
xor
jne
inc
sbb
inc
push
aas
inc
xor
or
mov
lcall
mov
inc
filds
lods
mov
jl
sbb
add
or
test
getsec
test
jbe
add
fidivrl
pop
outsb
sub
test
sbb
or
push
add
add
stc
jg
aas
scas
addb
add
add
add
sbb
aam
nop
fidivs
sbb
xor
push
add
aas
shll
xor
push
mov
fsubl
add
fs
pop
jl
testb
bnd
push
sub
xchg
or
icebp
sub
or
sbb
ret
cmpsl
adcb
test
xchg
inc
cmpsb
lcall
pop
or
pop
pusha
js
adc
push
les
sti
fcomps
lret
adc
mov
mov
loope
out
repz
loope
fdivs
add
loop
push
xchg
push
lods
and
inc
cmpxchg
outsl
andb
imul
xor
cmpl
push
cmpsb
pop
adc
inc
or
sbb
mov
push
sbb
dec
sbb
jg
out
dec
shrb
dec
rol
add
xor
dec
cmp
mov
and
inc
adc
imul
cmpsb
jmp
and
jae
push
pop
outsb
fcomps
pop
mov
movsl
push
stos
cmp
repz
cmpl
out
sbb
mov
movsl
and
lcall
sbb
scas
out
ret
fisttpl
or
shll
dec
add
test
in
test
lret
mov
andb
adc
or
dec
imul
test
dec
fbld
or
xor
lods
dec
inc
addb
cmp
pop
inc
stc
repnz
and
mov
add
adc
es
push
js
ds
test
je
xor
aam
addl
jg
mov
movsl
jl
cli
dec
push
push
jmp
cmp
or
xor
cmp
push
mov
xor
mov
sbb
jmp
outsl
sub
add
sbb
add
jp
jmp
inc
push
mov
sbb
push
ss
and
add
mov
adc
cli
and
jecxz
or
or
adc
icebp
and
dec
or
jecxz
dec
jmp
pop
dec
jne
push
bound
adc
loopne
push
or
sbb
pop
add
or
hlt
or
je
adcl
push
pop
fdivl
mov
mov
aaa
push
hlt
cmp
lds
enter
dec
repz
inc
cs
arpl
inc
loop
dec
or
dec
inc
add
xchg
jns
mov
or
lret
scas
daa
loopew
inc
sbb
test
loope
in
sub
and
test
repz
mov
lahf
in
xchg
lea
ret
subb
inc
hlt
push
cli
push
jb
mov
or
inc
sbbb
or
inc
inc
dec
aaa
jl
mov
mov
add
push
hlt
jle
cmpb
sub
sbb
lock
jne
add
xchg
mov
xchg
add
fcmovb
mov
or
jge
jb
arpl
or
sbb
push
push
push
xchg
pop
mov
stos
or
jle
jl
mov
fildl
cmp
aad
add
bound
mov
sbb
xor
xlat
cwtl
test
ret
imul
sbb
adc
sarl
test
xchg
daa
xchg
push
rorl
stc
push
mov
std
hlt
jne
adc
add
push
outsl
inc
jmp
mov
mov
inc
out
gs
fs
pop
test
push
pop
lock
jle
outsl
dec
in
js
dec
add
xor
mov
inc
cmp
jne
and
sub
adc
or
and
das
push
mov
pop
add
xchg
push
jg
push
and
addb
adc
cmp
cmp
or
or
fcomps
mov
push
jecxz
jge
push
test
mov
or
xorl
cld
pop
shll
nop
lea
mov
and
mov
and
push
loope
dec
add
jge
pop
add
sbb
adc
add
dec
jg
adc
cmpsl
push
iret
jg
jmp
xor
sbb
jge
mov
orb
mov
xor
push
and
sub
adc
cmp
push
sub
jb
or
clc
and
cmpsl
push
repnz
je
loope
gs
pushf
and
sub
push
pop
push
pop
sub
mov
or
push
adc
hlt
pop
cmp
scas
and
add
cmp
gs
adc
cli
stos
add
es
test
xor
js
sbb
mov
insb
and
mov
adc
fidivrl
lods
and
into
pop
mov
mov
xlat
je
cmp
add
adc
cmp
jb
testb
add
lcall
adc
mov
push
rol
jge
push
jmp
inc
pop
mov
push
sbbl
je
cmp
sbb
jb
icebp
cli
cmp
jbe
clc
push
push
or
and
dec
in
push
mov
push
sti
sarb
pop
imul
jmp
das
xor
push
gs
repnz
cmp
jbe
or
mov
and
dec
mov
cmp
je
fstpl
cmp
in
es
jmp
fs
cmp
xor
push
inc
pop
pop
adc
inc
sub
psadbw
sub
mov
mov
lret
push
mov
sbbl
or
inc
stc
add
std
hlt
or
fadds
jle
pop
in
sbb
mov
repnz
pop
sbbl
repnz
xor
jne
add
adc
add
add
adc
sbb
add
enter
xchg
fldz
push
xor
add
outsl
imul
adc
inc
shlb
fidivl
insb
fdivs
cs
mov
out
pop
test
pop
and
inc
xchg
lock
fxch
ffreep
mov
mov
fildll
roll
rcl
cmp
jmp
cwtl
gs
clc
mov
xor
in
aad
add
ror
insb
pop
xor
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
sbb
cmpsb
pop
and
pop
mov
mov
xchg
sbb
inc
mov
pop
and
or
sub
inc
and
popa
lea
mov
shrl
sarb
xor
and
call
pop
bound
xchg
adc
adc
mov
sbb
sbb
dec
cmpsb
inc
mov
jmp
lock
adc
shlb
jl
xchg
lret
or
jl
adc
leave
add
or
outsb
adc
pop
cmpsl
add
adcb
dec
loopne
sbb
mov
dec
fimull
in
lock
dec
xor
in
lock
mov
nop
imul
fs
cld
loopne
es
push
in
pop
fisubrl
inc
jmp
adc
je
cmp
cwtl
ret
dec
push
adc
xchg
mov
in
xor
inc
and
cmc
movsl
in
xchg
cmp
mov
jb,pn
cwtl
dec
mov
xchg
roll
sti
inc
and
push
orb
aaa
popf
add
inc
adc
nop
arpl
call
jo
jbe
test
filds
sbb
in
orb
rcll
lock
add
ret
or
in
insb
add
insb
stos
pop
add
and
sbb
lock
pop
mov
js
out
jnp
push
outsl
ja
test
dec
mov
sbb
fwait
in
lcall
popa
enter
movsb
mov
enter
out
adc
adcb
or
push
xor
pop
ret
arpl
out
mov
sbb
dec
leave
cmpxchg
mov
pop
push
imul
addl
cmp
sbb
les
mov
dec
imul
test
jns
faddl
adc
cs
enter
or
inc
add
jge
fmuls
rol
call
icebp
jae
fiaddl
les
shll
out
es
xor
rol
jo
adc
inc
nop
lcall
loope
pop
cmc
int3
movsl
mov
mov
cld
outsb
push
push
jno
pusha
fs
dec
xor
jo
dec
xor
je
jl
nop
arpl
stos
sbb
and
ret
sbb
adc
in
repnz
mov
lea
loop
mov
sub
adc
mov
xchg
shlb
roll
adc
fcoms
test
movsl
mov
inc
enter
xrelease
pop
pop
movsl
inc
cmpl
movsb
mov
enter
sub
xchg
in
scas
test
jno
sub
inc
mov
sbb
dec
mov
repnz
adc
rorb
hlt
gs
xchg
iret
fs
js
lods
add
cmp
fstpl
mov
testl
lds
xchg
xor
sub
outsl
mov
lret
out
arpl
or
lahf
cltd
xchg
mov
xchg
inc
enter
mov
movsl
adc
in
sti
or
inc
sbb
xchg
or
inc
fwait
bound
mov
push
js
adc
data16
daa
mov
inc
cmc
xchg
adc
adc
or
in
and
jmp
testl
mull
jbe
imul
or
cmp
leave
clc
xor
jnp
negl
pop
insb
ja
ss
inc
mov
pusha
push
sbb
add
jne
pop
mov
test
imul
imul
stc
inc
imul
xor
push
pusha
shll
fnsave
dec
insb
imul
or
push
hlt
mov
lock
ret
lods
xor
daa
jno
and
cmp
rol
cmpsb
andb
ret
cmp
mov
or
add
push
rcl
add
jne
lahf
add
movb
adc
cmpsl
dec
or
push
push
call
test
inc
mov
cld
out
sub
fidivrl
loopne
je
cld
call
push
pop
adc
repnz
mov
and
dec
fs
sub
and
ret
dec
pop
xor
shrb
jno
sub
inc
jb
scas
scas
adc
or
ret
test
rol
ja
fcompl
cmp
sbb
cmp
incb
rcrb
xor
push
xor
dec
dec
lcall
mov
jo
imul
sbb
and
addr16
cmp
mov
fwait
clc
repnz
pop
aaa
xor
test
mov
loopne
jl
in
and
inc
fwait
mov
or
and
loope
in
or
mov
pop
in
xor
sbb
pusha
lea
movsl
xor
cmp
lahf
mov
inc
sub
adc
sahf
dec
in
or
add
jbe
lods
loopne
fcoml
rcrb
xchg
pop
fucomi
addr16
add
leave
pop
aaa
nop
xlat
sbb
xchg
and
clc
cltd
and
pop
aaa
nop
xchg
inc
push
leave
xchg
decb
jbe
lea
push
in
xor
daa
in
xchg
nop
mov
xor
sbb
or
mov
mov
enter
fsubr
rorl
pop
nop
inc
repnz
add
fsubs
enter
xchg
scas
push
mov
push
sub
pop
xchg
xchg
or
xor
pusha
mov
inc
fisubl
fcoml
and
pop
jne
aam
or
mov
in
cmp
lock
dec
xchg
pop
sub
fsubs
cmpb
and
adc
shlb
pushf
gs
or
cmp
nop
dec
or
or
xchg
inc
push
or
or
dec
push
mov
and
xor
xor
cmp
int
adc
add
mov
in
test
sbb
lods
xchg
or
xor
and
or
add
add
int
in
add
push
int
adc
inc
dec
pop
movsl
sbb
test
push
pop
xor
mov
adc
sbb
mov
imul
aaa
adc
sbb
cwtl
mov
sbb
sub
shlb
mov
mov
jnp
sbb
xor
pop
jge
sbb
lods
rcr
in
outsl
add
inc
cmp
fdivl
loope
mov
nop
sbb
or
cwtl
popa
inc
adc
shll
imul
iret
mov
dec
shlb
adc
add
enter
jae
fmull
fwait
xor
outsl
dec
fiadds
sbb
and
adc
jo
mov
movaps
jae
inc
jne
insl
aam
or
rorl
enter
or
adc
or
pop
dec
xor
fadd
fmuls
scas
popa
insl
fsubrs
rcrb
add
and
mov
call
test
stc
jbe
cmp
sub
mov
sbbb
subb
test
push
sub
xchg
or
mov
inc
or
insl
mov
insb
inc
in
push
out
fwait
cmp
pop
gs
or
inc
xchg
stos
shll
jno
rorl
loopne
add
or
psllw
mov
mov
nop
xor
mov
xor
shl
inc
or
add
or
add
or
es
or
jne
mov
dec
inc
sbb
and
push
adc
fisttpl
mov
je
mov
stos
fdivs
pop
push
ret
lock
ret
cs
xchg
dec
xor
push
mov
xchg
outsl
dec
vmwrite
shrl
push
out
js
xchg
inc
dec
dec
inc
call
loop
sbb
stos
lods
imul
push
es
stos
or
daa
es
pop
into
inc
mov
sbb
mov
cmp
in
aaa
adc
sbb
in
sub
sub
or
adc
test
outsb
cmpsl
pop
or
and
pop
adc
or
nop
test
mov
popa
push
lods
in
les
mov
ret
sbb
adc
mov
in
pop
push
add
sbb
jb
inc
lods
div
cmp
inc
ret
cmp
add
cmp
mov
adc
or
sbb
stc
or
and
cmpsb
sbbb
and
cwtl
xchg
imul
mov
pusha
mov
fmull
adc
daa
aam
ret
adc
or
mov
and
push
push
adcb
and
les
les
cmp
sub
xor
pop
jnp
push
jge
dec
pop
jnp
loopne
inc
int3
out
rorb
pop
mov
push
aam
enter
add
mov
inc
icebp
mov
mov
mov
jl
jg
adc
loopne
pop
adc
push
sub
and
insb
dec
sbb
add
push
lea
inc
jmp
mov
xlat
dec
adc
test
fdivrl
ljmp
nop
and
sbb
mov
std
mov
test
or
or
sbb
dec
aaa
in
mov
fsubrl
or
fcom
fidivs
int3
das
unpcklps
xor
pop
cs
adc
mov
mov
ret
addl
and
fsub
cmc
call
xor
adc
cmc
and
cmc
pop
sbb
dec
cmpsb
sbb
cmpb
pushf
mov
sbb
adc
aad
insl
mov
lret
xchg
sub
pop
mov
sbb
outsl
cwtl
jae
sbb
push
imul
cmp
fdivl
inc
and
sub
das
pop
outsl
mov
ja
sbb
mov
and
movsb
fdivr
add
dec
enter
and
ret
xchg
fnstcw
jo
lds
bound
and
xchg
or
inc
pop
push
sbb
cwtl
pusha
mov
sbb
mov
sub
iret
mov
sub
mov
in
sbb
cmp
stos
add
ja
or
dec
adc
pop
nop/reserved
movsb
std
sub
fcomp
cmp
mov
adc
inc
or
sub
lret
or
adc
lods
cltd
mov
andb
xchg
nop
push
and
imul
out
shll
pop
adc
add
sub
in
dec
push
aaa
mov
adc
in
aam
mulb
enter
cli
notb
cmp
sbb
xor
adc
das
int
or
js
addr16
sbb
pop
in
jae
sub
dec
js
popf
jp
add
mov
add
lds
imul
add
xchg
sbb
and
dec
push
sub
mov
jo
push
aaa
mov
or
iret
add
imul
inc
jo
fucomp
arpl
sbb
jne
xchg
and
dec
inc
shll
pusha
and
xor
roll
rorb
fbld
pop
jmp
std
enter
icebp
add
fsubs
adc
or
aad
jp
dec
call
mov
adc
inc
in
push
cmc
and
fdivl
fdivl
popa
std
xchg
rcll
in
movsl
nop
outsl
push
loopne
and
lock
cmpsb
sbb
dec
push
inc
imull
addr16
mov
cmpsl
addb
and
je
js
rorb
pop
adc
hlt
and
ljmp
and
xlat
ucomiss
mov
mov
xchg
sbb
roll
sarb
test
fldt
sbb
push
inc
sarb
orl
in
in
loopne
mov
inc
jb
and
jno
and
pop
daa
int
or
or
fldl
rcl
leave
and
out
adc
fsubl
cwtl
sbb
test
xchg
rolb
int
sbb
push
sar
adc
fiaddl
fcoms
shlb
add
add
rclb
mov
adc
and
xor
movsb
sbb
fimull
adcl
add
imul
leave
add
aam
mov
cmp
daa
lahf
cltd
jo
add
xchg
xchg
in
sbb
test
nop
popa
mov
call
add
divl
or
mov
xadd
push
xchg
sub
mov
dec
int3
in
or
pop
xchg
ret
clc
sub
sti
cmp
inc
add
mov
sbb
cmpsb
jbe
add
in
gs
in
push
xor
jne
sub
shll
mov
fwait
pusha
iret
jl
push
andps
mov
test
or
sbb
movups
rclb
mov
test
in
addb
test
xchg
pop
and
in
sub
dec
sub
mov
cmp
or
add
cmp
dec
mov
dec
leave
in
in
mov
lods
cltd
mov
lods
test
sbb
sub
xor
lock
jle
test
pop
aad
mov
adc
inc
scas
jge
nop
inc
lcall
sbb
popf
movsb
loope
xor
fsubrl
pushf
mov
and
jmp
inc
dec
mov
jne
leave
cmp
inc
dec
inc
orl
add
aam
loopne
or
pop
les
jno
xchg
xchg
inc
xor
adc
das
fucomp
or
sub
imull
xor
inc
mov
dec
mov
sub
leave
and
cmp
inc
addb
mov
push
out
xchg
sbb
rclb
enter
test
das
inc
cmp
ret
nop
adc
inc
lods
inc
jo
xor
cltd
inc
fcoms
jg
lahf
mov
imul
enter
cld
or
cmp
pop
loopne
adc
or
daa
in
dec
je
stos
int3
sbb
loop
jns
jno
xchg
test
fdivs
sub
mov
xor
xchg
stc
add
xor
mov
push
pop
lds
or
jne
jo
daa
or
and
push
mov
push
add
add
adc
dec
fsubrl
bound
xchg
fdivs
xor
xchg
sbb
fdivr
call
loopne
or
jo
inc
and
adc
rcrb
dec
ret
xchg
andb
dec
sti
cs
movsl
int
insb
push
push
xor
jmp
push
addl
lea
adc
es
clc
adc
xchg
xchg
movsb
loopne
cmp
or
ss
and
push
cmp
enter
add
mov
lods
add
fisttpl
xor
adc
xchg
push
push
insl
sbb
adc
fs
dec
cmpsb
adc
dec
es
and
sbb
es
sbb
inc
es
fs
cmp
sub
add
xor
mov
push
sbb
aam
cmp
adc
push
cmp
mov
or
add
test
pop
jno
int
inc
enter
in
jo
sbb
xchg
rorb
aaa
push
jno
jo
popa
cs
orl
mov
cltd
fdivrs
mov
inc
sbb
adc
xor
sbb
cmp
je
mov
xlat
mov
es
test
repnz
jne
xor
cmp
sbb
xor
adc
flds
cltd
nop
outsl
lods
test
mov
or
shll
sti
lea
inc
and
mov
sbb
enter
pop
sbb
jmp
mov
lock
int3
cmc
int3
or
les
rcl
lahf
sbb
loop
aam
out
push
jo
mov
cmp
add
adc
leave
mov
xchg
pop
pop
adc
and
mov
mov
icebp
mov
outsl
or
rorb
mov
pop
shrb
pop
dec
push
sbb
call
or
in
xor
aam
inc
sub
fmull
xchg
fdivs
or
mov
cmp
mov
and
sbb
aas
pop
mov
pop
loopne
mov
popf
inc
push
or
adc
inc
push
or
bound
test
shll
pop
dec
inc
xchg
mov
add
sbb
add
mov
mov
test
push
shl
dec
stos
or
cmpsb
xor
dec
adc
enter
shlb
jmp
imul
sbb
and
pusha
and
stc
ret
add
aam
addb
sti
test
cmpsb
cmpsb
sub
mov
sub
popa
loopne
in
jns
nop
sub
sbb
insb
mov
jbe
enter
dec
inc
outsl
xchg
jge
lds
mov
in
push
or
or
fcomps
es
sub
push
jb
enter
shlb
nop
loope
addb
mov
pop
nop
inc
lahf
or
in
mov
xchg
aas
add
pop
or
mull
push
push
imul
cmp
xchg
imul
mov
or
or
inc
nop
pusha
rolb
test
and
mov
in
mov
and
sub
add
ret
in
ja
nop
data16
inc
or
adc
les
int
ljmp
add
int
lods
or
and
pop
mov
jg
jns
or
orl
dec
inc
xchg
add
pop
xor
cmp
enter
dec
aam
mov
or
pop
pop
in
push
aam
pop
aam
bound
aaa
andl
mov
pop
fsubr
fists
mov
fsubrl
jo
arpl
mov
xchg
hlt
pushf
adc
enter
dec
int3
push
cmpl
gs
add
leave
cmp
xchg
or
fcoml
adc
mov
or
inc
dec
jne
ret
jbe
and
sub
push
pop
adc
dec
rorl
mov
and
inc
mov
cwtl
adc
imul
sub
or
jb
nop
xchg
mov
and
arpl
jo
jmp
pop
xchg
xchg
popa
push
pushf
enter
shlb
lods
test
mov
mov
sbb
test
in
inc
outsb
shrd
xchg
xchg
rcrb
leave
leave
int3
enter
fcmovne
leave
mov
mov
xchg
xchg
nop
orb
jo
add
pusha
paddusb
out
xchg
or
xchg
bound
and
pushf
push
repnz
loopne
sbb
dec
mov
mov
inc
sbb
iret
dec
xchg
or
xor
push
cmp
je
dec
scas
mov
push
out
jl
inc
inc
shll
sbb
fnsave
leave
jl
aam
pop
and
push
je
enter
sub
jge
inc
imul
jge
and
loopne
aaa
or
ret
addb
sub
nop
ds
inc
pop
pop
pop
enter
aam
adc
and
aam
imul
jmp
cmc
or
adcl
push
push
nop
mov
adc
jno
inc
mov
rorl
ja
test
jo
aaa
cmp
ret
cwtl
sbb
pop
lret
adc
insb
rolb
xchg
push
pushf
mov
xchg
cs
add
sbb
loope
and
lods
popa
in
repz
dec
pop
aas
dec
push
shrd
pop
sbb
add
and
arpl
shlb
and
daa
gs
hlt
xchg
and
shlb
jns
cmp
cmp
xor
rorb
adc
sbb
and
dec
and
push
cltd
fdivrl
pusha
imull
jecxz
xchg
add
sub
dec
gs
aad
dec
cmp
dec
ss
leave
pop
sub
or
insl
or
inc
push
rcrb
sbb
scas
sub
inc
pop
adc
push
insl
dec
pop
nop
mov
push
mov
add
leave
mov
and
inc
and
stc
mov
sbb
add
invd
mov
aas
adc
outsl
fsubrs
adc
shlb
inc
or
or
jmp
mov
les
std
sarb
sbb
sub
nop
mov
test
sub
adc
test
mov
pop
ret
and
out
shrb
xchg
sbb
xor
xor
add
pushf
mov
mov
adc
cltd
rclb
rclb
fmul
stc
rclb
sub
les
mov
and
dec
mov
enter
jo
cmpsb
or
or
fs
mov
xchg
movsb
pusha
insl
xor
dec
inc
jno
xor
ror
aas
inc
dec
push
jbe
xor
jb
int3
pushf
push
xchg
sub
shrl
or
leave
bound
push
jle
sub
sbb
movsb
adc
mov
mov
push
inc
pop
add
jns
cmpsl
adc
repz
cltd
jbe
or
insb
push
sub
or
jbe
mov
das
insb
mov
das
add
nop
xchg
sbb
dec
xor
mov
mov
sbb
push
push
nop
orb
push
mov
std
jo
out
lods
movsl
pop
sbb
sarl
je
jo
lock
inc
jmp
add
or
sbb
mov
sbb
insl
fwait
sbb
mov
or
sub
and
dec
in
adc
pop
in
pop
push
and
adc
mov
sub
cmp
inc
sub
lahf
in
xor
leave
fbstp
leave
add
adc
adc
lods
jbe
dec
sbb
sub
in
adcb
push
popf
mov
mov
test
add
pushf
cld
icebp
sar
xor
mov
repz
cmpsb
lahf
pop
xchg
inc
inc
test
and
lods
adc
ret
or
in
ret
in
mov
enter
push
or
xchg
mov
lds
sbb
rcr
xorb
or
loopne
sbb
and
iret
fstps
call
and
scas
dec
insl
inc
adc
leave
sub
out
sbb
mov
aaa
mov
inc
mov
and
add
shlb
lods
movsl
aas
out
sbb
jmp
push
jnp
fdivl
sub
lock
pop
rcll
jnp
in
cmp
repnz
pop
sub
cltd
jbe
pop
cmp
inc
cmp
push
sbbl
xor
sbb
xor
xor
lods
dec
dec
pop
jmp
push
push
dec
dec
pop
sbb
or
adc
add
pop
pusha
inc
mov
adc
fistps
imul
adc
loope
pusha
mov
in
mov
xchg
adc
add
xor
ss
lods
jge
jb
lods
inc
xor
or
or
pop
fstpl
pop
xor
adc
addl
test
mov
sbb
fwait
popl
and
push
push
cwtl
aam
adc
adc
or
inc
sub
or
ljmp
adc
pop
and
cs
loopne
dec
inc
xor
add
push
sbb
sub
imul
gs
ret
lods
arpl
xor
mov
adc
bound
sbb
mov
nop
add
xorl
sar
pop
daa
cmp
fs
dec
imul
in
pop
dec
push
nop
pop
enter
call
in
mov
xchg
fstpl
repnz
dec
cli
inc
mov
jmp
lcall
enter
push
fsubs
scas
test
push
leave
repz
lods
cmp
je
sbb
std
and
cmpsb
lret
inc
add
sbb
xor
mov
xor
push
int
jne
dec
cmpsb
arpl
js
push
sbb
es
or
cmp
movsl
dec
mov
and
or
add
adc
push
pop
inc
roll
fs
cmp
add
sbbb
pop
xchg
ss
and
js
ret
add
fdivr
mov
cmp
inc
int
mov
push
mov
xchg
mov
bound
shrb
or
je
test
bound
xor
ret
jmp
adc
sbb
xchg
inc
add
xor
pop
or
fadds
and
imul
rclb
adc
lods
adc
xchg
cwtl
mov
icebp
movsb
pop
inc
jno
mov
push
inc
push
pop
lea
xchg
or
pop
mov
and
cmp
arpl
stos
or
ficompl
mov
inc
mov
jne
imul
add
call
in
xorl
mov
mov
scas
mov
fisttps
mov
shlb
or
cltd
adc
iret
push
movsb
shl
push
mov
xor
scas
sbb
fmull
nop
lret
aam
addr16
in
inc
push
lret
cmp
jne
cmp
cmpsl
mov
mov
add
sub
push
fdivp
movl
add
das
scas
movsl
fwait
xchg
add
and
push
jl
xor
insb
push
pop
wbinvd
imul
mov
rcrb
fnstcw
mov
or
add
out
and
loopne
push
and
ret
bound
cmp
mov
rcrb
sbb
aam
or
and
and
pop
cmp
xor
xor
or
in
jl
jmp
jl
push
sub
push
or
mov
mov
mov
pop
adc
pop
mov
mov
lahf
movsb
pop
inc
mov
jmp
add
pop
out
sahf
xlat
jl
push
xchg
mov
cmp
and
sub
dec
pop
cmpb
int3
out
mov
cmp
push
and
add
mov
insb
xchg
int3
cmpsl
push
cmpsb
mov
mov
out
lods
cmp
aas
cmp
push
mov
cmp
add
inc
orb
jnp
std
pushl
mov
add
adc
mov
rcll
xchg
adc
or
pushl
decl
cmp
adc
mov
test
add
nop
add
into
pop
adc
ds
jnp
test
xor
xor
mov
out
call
push
add
loopne
ret
ds
mov
sbb
xor
lidtl
pop
sub
inc
xchg
int
outsl
push
bound
and
insb
outsl
arpl
imul
jg
sub
jb
sub
popa
arpl
jne
jb
outsb
je
add
divl
add
push
insl
adc
mov
testl
imul
cld
jnp
mov
mov
add
add
pop
mov
jne
les
inc
and
jb
clc
out
out
add
add
add
add
or
es
add
inc
xor
inc
push
add
or
pop
fdivrs
push
add
pop
dec
mov
and
push
insl
cmp
je
je
and
jae
dec
sti
mov
adc
insl
push
loopne
out
loopne
xorb
or
fnsave
out
mov
lret
sbb
popa
aas
imul
ds
jp
outsl
cs
in
fisttpl
mov
gs
fsubrp
imul
out
outsl
jmp
loopne
rcrb
add
pop
neg
in
lret
stos
insl
sub
push
imul
scas
cmp
jne
rol
mov
sahf
xchg
sbb
sub
mov
sub
insb
lcall
repz
loopne
popa
pusha
lahf
popa
push
outsb
jnp
into
jecxz
arpl
or
loopne
pop
inc
daa
dec
jbe
cs
ja
push
fbstp
outsb
bound
fidivrl
adc
sbb
jo
arpl
mov
mov
insl
mov
xchg
xor
cmpsb
pop
mov
das
jb
jo
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
sbb
xchg
add
mov
push
and
out
jns
test
push
adc
adc
repz
std
adc
adc
push
sbb
jns
out
cld
sbb
clc
sti
cmp
sbb
cli
sarl
xor
lahf
stc
mov
iret
repz
out
idivl
jns
jp
adc
jae
push
cld
pop
cmp
out
mov
aaa
add
data16
jp
inc
mov
sarb
add
push
mov
dec
jb
fcmovne
add
pop
mov
jl
adc
imul
mov
or
pop
mov
shll
fiadds
fwait
cmp
dec
add
fdivrl
xor
outsb
das
pop
add
and
add
das
das
and
pop
mov
mov
dec
inc
and
sbbl
popa
jmp
je
dec
idivl
stc
lock
aas
dec
inc
lea
sbb
popa
jnp
outsb
clc
ds
daa
outsl
and
pop
pop
dec
and
pop
xor
neg
fsubrs
out
iret
jns
out
shr
arpl
iret
and
mov
push
arpl
pop
cmpsl
imul
jp
jae
push
and
sti
ss
dec
jne
dec
pop
mov
push
ds
test
iret
mov
pop
enter
jg
cmp
cmp
sub
fs
dec
and
push
das
das
jns
push
dec
push
arpl
arpl
bound
dec
outsl
jbe
pop
mov
testl
jo
sub
addr16
push
dec
jne
xchg
outsb
xchg
inc
jo
cmpl
jb
jg
bound
out
mov
adc
pushf
jnp
cmp
xchg
fnsave
out
addr16
popa
je
jb
xor
std
adc
jae
push
gs
sbb
insl
mov
outsb
and
jbe
out
pop
dec
inc
aas
add
inc
arpl
jnp
mov
dec
add
insb
jae
push
push
mov
push
popa
insb
jne
inc
inc
sub
pop
dec
xor
stc
and
ljmp
sub
sub
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
pop
sub
decl
dec
dec
dec
dec
dec
dec
scas
push
push
mov
ja
jb
pop
pop
pop
pop
shl
mov
arpl
addr16
insl
outsb
outsl
jo
add
hlt
mov
jns
jnp
jge
jg
adc
incl
dec
popw
loopne
pop
ds
jnp
add
orb
sar
lret
jno
std
aas
incl
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
inc
pushw
outsl
das
cmp
std
jae
push
add
jo
xor
popa
js
addl
jne
pop
dec
pop
sbb
out
sbb
adc
je
sub
sbb
adc
adc
add
add
add
add
and
dec
movsb
jo
push
pop
push
add
xor
pop
mov
addr16
hlt
and
add
pusha
push
mov
pop
js
or
cmp
add
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
pop
sub
push
pusha
movsl
pop
into
pop
aam
mov
mov
and
push
xchg
adc
pop
pushf
inc
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xor
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
sbb
rdtsc
ss
js
dec
dec
inc
dec
inc
adc
sbb
push
nop
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
jns
out
push
inc
add
sub
add
cmp
lock
stos
cmp
push
push
mov
jns
mov
lods
test
out
jns
out
xchg
nop
mov
repz
cmpb
xchg
pushf
jae
shll
aas
mov
repz
repz
pusha
pop
pop
push
push
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
adc
lcall
fmul
out
sahf
out
mov
sub
repz
add
or
movsb
jl
cmp
repz
dec
inc
xor
jns
out
or
or
shlb
mov
or
or
repz
int3
test
push
xor
cwtl
ja
fwait
jg
push
add
lock
mov
add
sub
sbb
and
aaa
sbb
dec
cmp
test
addl
add
add
sbb
and
xchg
sub
push
add
pop
inc
add
add
push
adc
ja
in
je
lcall
or
fcomps
push
pop
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
lret
push
div
clc
stc
cli
sti
cld
mov
and
sub
inc
test
call
push
jmp
dec
test
rclb
pop
outsb
inc
test
je
data16
pop
shrb
jns
push
xor
add
icebp
scas
push
insl
fiaddl
data16
aaa
push
dec
cmp
dec
arpl
inc
insb
fs
iret
push
sbb
je
xor
jmp
xor
push
vmread
out
pushf
pcmpgtw
xor
push
inc
xor
dec
push
push
dec
and
push
and
inc
dec
cmovns
ljmp
filds
adc
sub
adc
jo
mov
mov
mov
out
xor
jnp
inc
loop
mov
ds
in
pop
jnp
adc
clc
lret
sbb
jb
sti
idivb
jge
arpl
cmp
jg
das
in
sti
adc
fisubrs
and
cmp
dec
repz
iret
lret
add
inc
mov
mov
int3
push
test
sub
fwait
ss
sbb
pop
ljmp
pop
jns
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
lcall
outsl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
ljmp
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
decl
out
fcoml
mov
or
insb
mov
out
leave
ljmp
mov
dec
test
shrl
decl
pop
lock
hlt
mov
sahf
xchg
dec
add
scas
lods
dec
lock
fdivs
repz
xor
pop
mov
pop
pop
repnz
in
xor
and
es
mov
flds
sbb
cvtdq2ps
cwtl
test
cmp
pushf
orl
sbb
inc
jmp
sarb
fildl
sub
mov
add
add
xchg
and
lods
cmovg
inc
shlb
out
xchg
pop
and
das
and
pop
fwait
imul
outsb
addr16
jbe
xchg
ja
push
jae
lret
mov
and
adc
in
data16
scas
orl
add
cmp
out
mov
lock
adc
aas
inc
mov
pcmpeqw
jl
push
fdivrp
or
shlb
daa
daa
je
xchg
jo
sub
insb
add
je
xor
xor
jmp
xchg
lret
test
cmp
ret
mov
testb
add
aad
jae
test
cs
cmp
or
jl
adc
outsl
imul
inc
and
jae
jae
insl
xchg
arpl
fs
pop
fadd
xorb
imul
jmp
cmp
push
jg
push
fcoml
fbstp
sub
aaa
lock
adcl
jg
mov
mov
push
push
daa
jnp
cmpsl
mov
jbe
cmp
ret
xchg
inc
jecxz
inc
mov
ret
dec
sbbb
jns
inc
dec
aaa
sbb
xlat
jg,pn
dec
sub
js
jmp
cmpsl
lock
dec
xlat
adc
jmp
mov
js
sub
push
lds
cmpsl
out
add
and
es
jnp
out
cmp
pop
pop
mov
test
push
mov
lcall
jge
push
pop
sti
arpl
es
es
sti
cmp
divl
cmp
and
daa
out
inc
inc
mov
cli
je
sub
insl
ret
dec
jbe
sub
mov
aas
xchg
gs
sbb
xchg
cs
jp
xchg
ja
pop
jecxz
pop
jge
inc
jnp
mov
dec
mov
jns
imul
fcoms
lods
out
inc
addr16
imul
negb
daa
je
xor
shrl
pop
pop
aas
mov
dec
arpl
daa
pop
arpl
add
fnsave
pop
gs
jne
repnz
inc
xor
and
or
and
mov
push
fistps
pop
inc
push
xchg
cmp
mov
add
push
pusha
sbb
outsl
imul
add
arpl
stos
push
mull
lret
sub
inc
sub
or
xor
ss
ret
pop
mov
fucomip
add
cmp
add
mov
jo
into
ds
clc
icebp
loop
jecxz
addr16
push
xor
and
pushw
repnz
arpl
call
adc
loop
or
sub
dec
popa
jae
and
mov
out
and
loopne
cld
xor
pop
loopne
jae
ja
out
sahf
push
test
and
push
adc
aaa
pop
outsb
outsl
or
add
mov
loope
pop
mov
pop
aad
dec
outsl
push
sub
or
inc
lods
or
sti
sub
jne
call
add
dec
dec
sub
cwtl
pop
aas
dec
imul
cmp
pop
inc
call
mov
jecxz
out
inc
and
test
das
sbb
and
push
addb
js
test
push
pop
mov
jb
sub
sbbl
out
cmpb
pop
sahf
fimuls
mull
jae
hlt
mov
mov
addr16
lret
and
ss
es
clc
es
bound
jge
outsl
mov
stos
and
aas
jmp
les
mov
outsl
inc
cmpb
mov
aas
shll
inc
xlat
pop
mov
test
ja
es
int
jo
orl
mov
push
inc
jnp
sbb
loope
pop
mov
insb
xchg
pop
push
jnp
inc
inc
sbb
sbb
je
cwtl
aas
imul
inc
ss
mov
or
mov
dec
sbb
pushf
fwait
push
pop
je
ret
iret
pop
pop
por
pop
icebp
aas
insb
aas
pop
sbbl
mov
das
outsl
mov
dec
cmp
lods
pop
adc
sahf
push
aas
pop
pop
push
pavgb
sbb
inc
jle
mov
mov
mov
loopne
mov
jl
fistpll
and
punpckhwd
sbb
fstpt
and
addr16
bound
sbb
imul
sub
cs
mov
jl,pn
cmp
bnd
jo
or
gs
jl
lds
es
jecxz
adc
jl
pop
jnp
xor
imul
jmp
es
pop
icebp
into
adc
add
push
cmp
pop
ja
outsb
mov
cmpsl
outsb
cs
pop
cmp
push
jecxz
pop
shlb
loop
cmp
jno
xchg
filds
fsubl
insb
sub
lret
jl
addl
cmp
mov
jae
or
lock
adc
lea
scas
ds
stos
sub
iret
imul
dec
pop
adc
jl
lods
xor
ret
sbb
adc
mov
cmp
es
addr16
push
imul
add
xchg
inc
xlat
incl
outsl
sbbb
xchg
rol
fstpt
dec
bound
popa
xor
pop
dec
out
xchg
inc
inc
or
jno
xchg
out
push
jns
jae
jae
sbb
inc
inc
sub
dec
adc
mov
negl
mov
add
mov
sbb
imul
pop
in
sar
pop
divw
push
xchg
insb
mov
push
inc
aas
popa
pop
popa
sub
xchg
pop
push
mov
es
fcompl
jle
outsl
das
addr16
mov
dec
push
pandn
push
sub
aam
jne
inc
push
mov
jl
dec
push
ficompl
pop
cmp
adc
hlt
xor
sbb
inc
add
push
fsubr
leave
mov
ss
or
pop
sti
ss
push
data16
es
rcll
push
push
loopne
es
xchg
push
ds
insl
add
outsb
xor
ret
push
negl
shlb
push
or
sahf
divb
aam
jnp
inc
stc
test
dec
pop
mov
ds
xchg
push
in
pop
push
cmp
jbe
jecxz
test
cmp
cld
xchg
mov
push
repnz
mov
push
push
push
sbb
pop
jnp
push
sub
jns
jnp
cs
push
push
jae
sahf
out
out
rcll
cltd
mov
jl
out
aad
cmpsb
mov
pop
mov
outsb
dec
loope
out
or
pop
aaa
dec
and
lods
push
sbb
popf
push
aas
pop
jae
shlb
ja
jo
jns
jecxz
sbb
testl
mov
dec
xchg
and
arpl
add
fwait
dec
mov
xchg
subl
aas
jo
inc
or
popa
push
jae
and
pop
pop
fs
and
test
shll
push
gs
insl
pusha
push
popa
jne
or
lahf
mov
push
dec
bound
xor
pop
sub
and
push
cld
jle
jae
mov
repz
testl
je
das
mov
xchg
pcmpeqw
cmp
roll
push
xor
je
int
cmp
mov
rcrl
pop
jl
sbb
pop
bound
cmp
gs
push
fimuls
ds
out
stos
test
mov
jb
sahf
jb
into
fidivl
add
and
inc
sbb
shll
cmp
and
and
arpl
loop
std
jge
arpl
cmp
fs
adc
or
push
mov
jnp
or
enter
adc
pop
das
cmp
imul
dec
outsw
sub
ja
add
popf
push
adc
cmp
sbb
movsl
xchg
jae
frstor
push
mov
popf
mov
ljmp
mov
inc
fwait
push
cmpsl
xchg
push
scas
out
pop
loop
ja
inc
push
ja
push
pop
inc
push
adc
add
dec
fsubs
sub
orl
ss
stos
pop
pop
and
xlat
jp
and
pop
push
and
cmpl
shll
cmpsl
add
pop
xor
adc
aaa
and
pop
ds
out
jmp
nop
push
fdivrl
mov
dec
mov
jle
sub
pop
adc
dec
call
push
push
xchg
or
decl
aaa
imul
jg
hlt
xchg
aad
sbbl
icebp
out
sbb
add
and
cmp
pop
bound
cmpsb
call
outsb
and
inc
fiadds
jecxz
das
push
push
fiaddl
imul
arpl
mov
data16
data16
pop
dec
jnp
or
add
iret
rcl
xchg
sahf
mov
pop
push
sti
pop
sbb
adc
bound
pop
pop
mov
xorb
rorb
dec
jg
and
push
loope
stos
sti
insb
addr16
stos
push
inc
mov
adc
pop
repz
lea
pusha
imul
mov
push
mov
xor
xor
fimuls
outsl
mov
push
sub
mov
pusha
mov
xchg
add
outsl
rol
and
mov
lods
lea
or
stos
jno
jnp
repz
adc
push
sbb
dec
sub
iret
imul
mov
jae
jnp
mov
arpl
dec
fildl
or
fbstp
pop
bound
jo
xchg
arpl
inc
lahf
inc
cmp
fisttpll
loope
jb
fs
mov
and
add
mov
sahf
iret
out
fisubrs
adc
pop
sbb
sahf
sub
jge
out
mov
cmp
out
cltd
or
xchg
cmp
sub
push
addb
add
lods
subb
jns
data16
fisubs
sub
xor
inc
mov
neg
jnp
mov
mov
mov
data16
popa
xchg
add
shrb
ret
sub
data16
insb
shrb
xchg
pop
adc
lods
push
sahf
and
adc
sbb
fwait
int
xchg
rclb
lret
str
insb
add
stc
das
insl
stos
and
incl
xor
stos
push
lods
xabort
mov
push
adc
ss
daa
adc
es
and
repz
pop
mov
data16
fiaddl
shll
je
add
outsl
pop
add
aas
das
das
ret
xchg
push
dec
ficomps
pop
or
aas
rclb
sbb
sub
negl
pop
and
ja
or
mov
stos
jp
inc
outsl
inc
push
and
aas
sbb
jne
add
xchg
dec
inc
lods
adc
cmp
xchg
imul
stos
and
fs
mov
jb
jg
aaa
or
outsl
jo
jo,pt
movsb
fwait
addr16
stos
adc
outsl
cmp
xlat
cmpsl
dec
push
sbb
popa
insl
dec
xchg
arpl
rcrb
or
jne
xchg
push
aas
push
dec
imul
xlat
sti
scas
xchg
add
push
movhps
jb
or
stos
dec
cmp
mov
fwait
or
aaa
arpl
xor
shrl
and
cmpsl
push
test
stos
clc
sar
cmpsb
pop
sub
cmp
inc
sub
cld
dec
jecxz
mov
enter
imul
outsb
jae
sbb
or
sti
repz
pop
or
xchg
call
imul
inc
push
imul
push
add
aas
roll
jno
jo
mov
aaa
jecxz
mov
pop
ret
and
pop
jae
jb
loopne
adc
das
sbb
imul
das
ret
das
xor
pop
inc
and
mov
cmp
mov
ret
fcmovnb
push
or
sbb
dec
xchg
into
sbb
out
push
sub
adc
outsb
add
add
lahf
arpl
pop
mov
scas
jp
cli
mov
arpl
xor
pop
mov
inc
outsb
cmp
cmp
mov
cmp
add
movsl
jecxz
mov
shrl
arpl
lahf
sti
mov
ret
cmp
adc
cmp
adc
jns
pop
xchg
push
divl
mov
jnp
jb
xlat
loope
push
outsl
pop
push
ficoms
mov
cmp
dec
xor
add
fisttps
jmp
aas
pop
shr
je
lahf
aas
xor
notb
rcrb
cmp
pop
inc
outsl
daa
test
pop
ja
push
pop
iret
imul
mov
mov
xchg
pop
test
fildll
xchg
je
sub
fcompl
xor
inc
jg
sbb
xchg
out
dec
dec
sub
cmpsb
iret
mov
fbld
inc
int
pop
add
out
cmp
arpl
stos
cs
xchg
clc
sub
add
push
dec
sbb
imul
lock
sub
loopne
push
fwait
push
jae
jle
inc
mov
add
xor
sub
aaa
shl
or
xor
mov
ljmp
loope
lds
inc
dec
daa
inc
mov
add
add
ss
add
or
loop,pn
sti
mov
enter
dec
ret
push
or
push
aaa
pop
push
ljmp
inc
loopne
mov
lahf
outsb
xchg
sarb
cmp
xor
adc
sbb
ret
insl
xchg
inc
mov
adc
vcvtps2dq
xchg
pushf
mov
rorl
push
xchg
push
inc
push
jmp
test
add
popa
mov
dec
mov
inc
inc
stos
adcl
sbb
push
ret
cmp
addr16
stos
scas
dec
pop
cmp
test
ja
and
pop
mov
pop
jae
arpl
push
or
and
pop
rorb
bnd
sub
push
or
push
dec
cmp
int3
scas
mov
mov
mov
mov
iret
sub
imul
inc
mov
pusha
in
es
movlps
popf
lock
sub
mov
push
push
mov
or
and
mov
addl
dec
les
jmp
pop
mov
repz
push
mov
stos
push
scas
add
add
testl
dec
dec
gs
call
outsl
iret
jp
fldl
dec
add
inc
insb
dec
inc
jp
jnp
xchg
xor
nop
dec
rolb
mov
fistpll
cmp
and
ja
mov
or
xlat
fadds
scas
test
push
or
cmp
xchg
add
filds
imul
fnstenv
push
mov
ficoml
adc
adc
sub
aad
pop
cmpsl
fnstcw
mov
mov
jmp
int
sbb
xor
out
fwait
sbb
ss
and
and
mov
out
fldl
push
push
fsubrs
mov
stos
mov
xor
pop
inc
dec
add
call
cmp
and
aas
lret
stos
jno
and
inc
les
aas
pavgb
adc
jo
push
sub
dec
lods
push
mov
pop
xor
cmc
imul
and
pop
add
inc
cmp
or
add
sbb
ficompl
dec
xchg
sub
insb
movl
mov
es
adc
sarb
test
or
mov
mov
out
xchg
pop
sarl
sbb
or
dec
jo
jnp
nop
dec
pop
aas
or
das
sbb
cwtl
jno
xchg
out
sub
outsl
mov
dec
les
adc
cmpsl
xor
cld
stos
and
inc
das
and
or
fbstp
stos
pop
xlat
or
imul
popa
dec
jecxz
adc
xlat
and
dec
sub
xchg
adc
and
xor
stos
or
bound
jae
add
mov
mov
jno
mov
scas
sub
push
adc
fisttps
popa
popa
mov
jnp
jge
scas
negb
lods
inc
jbe
push
ret
inc
push
and
sti
and
or
repnz
add
sbb
pop
lea
inc
scas
rclb
mov
or
sbb
les
adc
sti
mov
mov
insl
arpl
js
aaa
bound
pop
mov
pop
pop
push
in
rolb
andb
in
jns
out
out
inc
jg
cmpsb
pushf
inc
dec
pop
and
stos
in
cltd
lods
pop
dec
and
mov
xchg
sbb
mov
je
push
xor
cmpsb
xchg
push
leave
sub
mov
dec
xor
mov
nop
inc
sub
pushf
push
leave
stos
in
clc
mov
and
in
mov
pop
xchg
mov
mov
leave
push
xor
mov
push
sub
mov
dec
pop
and
stos
in
cltd
xorb
and
mov
sub
loopne
mov
in
push
jb
dec
nop
cmp
xchg
test
dec
xor
test
push
leave
push
pop
or
lods
leave
daa
loope
sbb
mov
mov
cmp
jg
lods
or
push
aas
inc
push
and
outsl
xor
pop
sbb
mov
pop
rorl
cmpsb
ret
mov
or
test
nop
ret
insl
sub
inc
jb
aad
inc
xchg
iret
dec
lcall
pop
dec
sub
xlat
inc
xor
jo
dec
out
dec
lods
fwait
pop
pop
pop
push
inc
mov
outsb
xchg
nop
or
adc
mov
pop
inc
lods
aam
inc
repz
dec
inc
aam
sub
push
dec
cmpsl
fisubl
inc
aaa
mov
or
dec
les
or
xchg
adcl
jae
push
sbb
xlat
push
movsl
mov
out
fwait
mov
orb
or
xor
shlb
movb
aaa
or
push
xor
addr16
adc
xchg
and
fildll
xor
jg
rcrl
scas
cmpsl
lahf
mov
pop
inc
sub
test
inc
mov
dec
push
and
mov
nop
cmp
sti
mov
loope
aaa
push
in
nop
pusha
stos
ljmp
out
aaa
xchg
iret
pop
call
inc
and
or
bound
push
xor
adc
add
arpl
lahf
or
aas
pop
gs
add
push
fwait
aas
jmp
push
or
jbe
adc
addr16
rcll
ja
mov
xorl
scas
pop
sbb
inc
enter
daa
push
sbb
pusha
mov
push
icebp
jecxz
pop
push
jg
jbe
inc
dec
orl
aam
jg
add
aas
insb
jae
and
add
sub
pop
add
popa
xor
sbb
and
inc
inc
add
sub
out
jnp
sub
pop
or
pop
sbb
pop
sub
sbb
or
loopnew
cmp
jb
test
popl
and
xchg
cmp
out
xor
pop
jne
addr16
bound
adc
je
or
mov
je
push
cs
sub
lcall
dec
adc
dec
imul
mov
push
fbld
mov
push
into
jns
pop
sbb
jnp
les
in
ss
pop
int3
faddp
dec
dec
bound
jae
js
outsl
icebp
into
imul
and
mov
dec
jnp
add
mov
mov
ljmp
and
adc
pop
ret
rolb
stos
outsl
lock
jae
push
into
add
fmull
ret
ja
negl
xchg
incl
push
push
lcall
mov
jp
shl
mov
outsb
dec
pusha
push
jl
pop
add
rcll
clc
imul
and
bound
mov
add
cmp
xchg
rolb
pop
jb
push
push
push
add
inc
xchg
imul
or
add
popf
aam
pusha
lcall
scas
outsl
sub
or
addr16
add
pop
push
scas
test
inc
inc
cwtl
add
add
push
mov
xor
cmp
cltd
dec
divl
xor
push
shrb
pop
rclb
xor
cmp
cmovno
cmp
xlat
ret
fs
cmp
adc
out
xor
pop
sbbb
out
mov
sbb
ja
jb
insb
fiadds
rolb
pop
pop
jg
cmp
test
je
stos
xor
fwait
mov
mov
cmp
cmp
shll
push
and
xlat
mov
lea
dec
inc
arpl
lcall
xorl
xchg
in
add
icebp
and
dec
es
dec
pop
sbb
out
ret
push
fimull
xorl
cmp
imul
push
ret
out
imul
cmc
arpl
push
and
xchg
mov
insl
xchg
repnz
out
mov
xchg
cmp
inc
push
fidivrl
fs
dec
sub
loopne
jnp
into
xor
pop
jecxz
pop
fimuls
shlb
or
inc
lock
jle
js
xor
cmc
adc
inc
cmp
out
dec
xchg
xchg
jbe
dec
or
testl
jbe
pop
pop
in
fimull
dec
mov
bound
xor
loop
incb
shll
ja
mov
xchg
outsb
add
loope
cmp
push
cmpsb
xchg
xchg
ds
ja
retw
pop
fwait
xchg
out
lods
scas
inc
data16
xor
fidivrs
jo
lcall
out
adc
inc
mov
inc
addl
dec
daa
jbe
rol
out
push
push
mov
mov
pop
out
loopne
fbstp
packssdw
inc
pop
pop
mov
push
test
ss
outsb
pop
push
push
xor
mov
jb
das
inc
pop
dec
es
js
lods
loope
add
and
scas
mov
pop
push
sysexit
mov
adc
dec
cs
sahf
push
outsl
push
in
jecxz
cmp
cli
push
push
insl
sub
jnp
push
scas
push
insl
mov
inc
ja,pn
fisubrs
cli
xor
push
jp,pt
jp
jbe
iret
jnp
ds
fiaddl
jg
cmp
ficomps
dec
xchg
jp
lock
pop
outsl
pop
outsl
es
out
dec
xor
xor
pop
or
outsl
jb
pop
enter
lods
inc
jb
dec
sbb
mov
cmp
lcall
inc
push
stos
rclb
sbb
outsl
outsl
shlb
test
jo
aam
jnp
jle
push
adc
js
xor
xor
sub
fiadds
add
fcomi
mov
push
dec
and
sub
mov
jne
or
add
or
add
mov
mov
adc
cmp
pusha
lahf
ror
xchg
mov
cwtl
xor
adc
cmpsl
nop
xlat
subl
imul
and
arpl
les
addb
out
scas
pop
add
repz
xor
lahf
and
add
push
mov
das
lahf
add
mov
sbb
lahf
inc
xchg
add
fwait
jmp
sbb
dec
xor
xor
mov
dec
outsb
mov
xor
hlt
mov
imul
in
push
cmpsl
pop
xchg
addl
lret
push
adc
mov
insb
outsl
popa
cmp
call
js
add
inc
das
aas
insl
add
lods
mul
jno
je
sahf
add
sub
or
add
cmpsl
addr16
or
pop
pop
iret
push
and
push
push
sti
stc
pop
scas
dec
mov
sbb
or
dec
aaa
out
dec
push
pop
dec
loopne
loop
jb
mov
gs
sbb
scas
xlat
arpl
orb
ja
fidivl
arpl
ja
pop
mov
arpl
xchg
jb
xchg
pop
repz
es
push
test
out
lea
dec
cs
add
es
jns
add
mov
jmp
js
push
stc
mov
jne
jo
arpl
xor
and
pushl
xor
xor
push
adc
movsl
or
inc
ficoms
inc
adc
fwait
pop
test
push
adc
je
jae
sbb
dec
adc
xor
push
pop
mov
lods
add
fcoms
cs
iret
das
push
sub
das
inc
sbb
outsl
add
cltd
js
lock
lahf
jmp
xlat
jmp
fildll
pop
inc
jl
jg
add
addl
adc
sbb
sbbl
dec
movsl
es
scas
lods
push
and
cmp
mov
insl
das
push
inc
stos
or
and
and
sti
dec
cmp
outsl
popa
fldt
shl
sbb
iret
mov
and
cmp
xchg
pop
out
loop
inc
daa
and
adc
mov
iret
jecxz
fst
inc
pop
dec
stos
push
xchg
push
scas
add
lock
dec
push
insb
inc
iret
fbld
dec
insb
push
xchg
dec
push
dec
arpl
jae
daa
jbe
shrb
dec
imul
outsl
pop
push
push
cmp
das
repz
lods
add
xlat
aaa
mov
push
fs
cmp
inc
push
mov
add
sub
dec
mov
dec
cmp
adcb
push
out
add
add
dec
pop
sbb
add
das
mov
mov
mov
inc
aas
addb
addr16
outsb
imul
or
sub
mov
mov
hlt
les
ret
push
out
out
sbb
outsb
mov
add
push
push
out
push
lds
inc
cmc
fadds
lds
push
xor
inc
adc
cld
mov
pop
shlb
mov
mov
mov
and
mov
add
adc
idiv
call
cltd
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
mov
pusha
or
mov
sub
sub
pop
repnz
mov
sbb
mov
ds
pop
sbb
lods
sub
and
jle
jo
fsubs
push
pop
test
xor
dec
xchg
push
sarl
pop
pop
cmp
jg
xchg
in
pop
push
and
xchg
mov
mov
jecxz
dec
xchg
dec
sub
dec
or
or
pop
test
inc
jmp
add
inc
xchg
inc
sbb
xchg
push
mov
push
dec
fs
pop
leave
jae
pop
inc
sub
xchg
pop
jb
and
test
imul
out
cmp
inc
les
dec
dec
mov
dec
xchg
adc
pusha
js
outsl
repnz
xor
or
adc
mov
out
inc
pop
dec
push
or
xor
mov
rclb
cmc
sub
inc
pop
fwait
ret
push
add
add
mov
cmp
ss
cmp
sub
pop
xor
inc
adc
inc
push
xor
filds
mov
inc
addr16
js
jmp
mov
inc
les
imul
pshufw
pop
imul
or
pop
inc
dec
xchg
push
decl
xchg
pop
mov
daa
bound
je
bound
loope
sbb
push
or
mov
mov
adc
aas
sbb
pop
mov
daa
sbb
aas
aaa
push
mov
cmp
fiaddl
xlat
adc
mov
add
rorl
cmpb
dec
dec
mov
jnp
or
mov
fidivs
add
iret
insl
dec
movsl
mov
xor
outsb
das
addr16
dec
cmp
add
mov
push
or
cli
ret
sti
cmpsb
push
jp
jne
inc
call
lock
push
mov
pop
test
fists
sub
mov
and
out
mov
fisubrl
push
pop
jb
sahf
mov
fimull
mov
test
inc
jmp
dec
jg
pusha
dec
aam
push
shll
bound
pop
xor
fbstp
popa
pop
andl
dec
or
sti
pop
mov
push
mov
xchg
push
pop
or
dec
inc
arpl
test
sbb
pop
repz
mov
xor
bound
adcb
pop
movsb
loopne,pn
dec
loopne
push
mov
imul
cmpsl
fnstcw
sbb
fnstcw
xchg
xchg
cli
xor
cmp
xchg
int
xor
fstl
mov
pop
push
mov
in
insb
lahf
xlat
insb
ds
test
jbe
xchg
xor
or
fmuls
jnp
mov
mov
mull
addb
popf
xor
jb
xor
into
sbb
cli
aas
pop
or
and
dec
scas
aaa
clc
shlb
or
adc
movsb
iret
dec
bound
out
xor
mov
push
aaa
mov
mov
mov
push
push
jl
negl
push
loop
push
cmc
stc
cmp
lahf
cmpsl
fnstenv
cmp
dec
mov
lods
sbb
inc
ljmp
pop
push
jecxz
and
sahf
idivl
adc
jle
out
jne
aaa
mov
push
rcll
and
sahf
imull
push
cmp
add
mov
push
lea
mov
mov
cmp
js
push
xchg
push
repz
ret
pop
mov
lock
dec
pop
push
jle
loopne
xchg
fsts
fisttps
cmp
xlat
fcoml
jbe
or
jnp
sbb
xor
flds
out
imul
mov
out
fistpll
scas
push
sahf
push
lods
pop
mov
sahf
int3
into
and
xchg
jg
mov
ss
repz
out
inc
movsb
push
ret
inc
push
inc
and
mov
cmc
push
inc
ds
jge
dec
fisttps
dec
sbb
idivl
sbb
ret
jle
ds
roll
cld
dec
jg
jecxz
dec
push
outsb
cmpsl
stc
cmp
cwtl
lret
dec
xor
jbe
leave
repz
ja
push
movsb
dec
into
clc
pop
dec
out
sahf
cmpsl
and
jp
dec
repz
mov
inc
outsb
mov
cmp
inc
iret
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
fcomps
imul
pop
mov
and
push
mov
add
idivb
imul
int3
push
and
pop
sbb
enter
cld
cmp
adc
repnz
iret
jbe,pn
jg
pusha
or
les
aaa
das
add
imul
xor
nop
cmp
or
or
and
cld
cmp
push
clc
push
add
mov
iret
rcr
fimuls
aas
dec
ja
outsb
outsb
jp
xor
push
js
xor
mov
pop
insl
cmovs
xor
sbb
ja
xor
jp
pop
xchg
mov
outsl
xchg
fcmovbe
lods
xchg
fildll
rcrb
stos
cwtl
lret
dec
jo
add
cmpsl
iret
dec
js
rclb
dec
lock
push
cli
inc
outsl
aam
push
popa
je
inc
addl
adc
fstpt
xchg
pop
inc
mov
out
data16
pop
push
ficoml
mov
mov
stos
fmull
mov
es
push
xchg
adc
cmp
fisubrs
rorl
pop
sub
or
mov
lahf
pop
sub
pusha
pop
mov
pop
addr16
xchg
push
hlt
jg
push
testb
or
outsb
loopne
add
outsl
daa
std
adc
xlat
xchg
mov
pop
pop
push
jo
inc
mov
sbb
pop
dec
dec
jno,pt
push
aas
inc
jecxz
push
mov
mov
xchg
sub
in
iret
dec
lods
frstor
push
xchg
push
sbb
inc
fs
arpl
sub
jb
mov
dec
xor
jmp
movntps
xor
push
add
outsb
sysexit
ja
lcall
inc
mov
jg
mov
add
jbe
jo
xor
mov
movsl
dec
cli
jle
sbb
outsb
push
jnp
or
inc
rcrb
xchg
push
aas
aaa
inc
inc
pusha
sub
scas
lock
dec
enter
or
lods
mov
adc
or
imul
stos
adc
xor
repnz
rol
dec
sub
adc
fisubrl
aas
sbb
iret
inc
xchg
or
iret
mov
sbb
inc
addr16
xor
add
gs
ljmp
pop
gs
add
sbb
add
das
mov
pop
rcrb
xor
add
fmull
addr16
xor
fisttps
test
jae
lods
adc
sbb
das
jp
psubq
test
mov
ja
jo
icebp
movsb
insl
dec
xlat
das
xchg
addl
add
sub
pop
pop
mov
jbe
push
mov
daa
mov
rcl
outsl
aaa
imul
xchg
das
testl
iret
xchg
inc
lock
jb
das
cmpsb
pusha
mov
pop
sbb
insb
sub
das
pop
pop
insb
sbb
jne
pop
xchg
inc
dec
add
mov
pop
pop
sbb
push
jecxz
jo
add
pop
jmp
sub
arpl
out
jbe
inc
mov
inc
pusha
pop
push
testl
xchg
push
add
adc
mov
inc
pop
subl
pop
adc
jo
jo
and
sub
push
jae
xchg
add
inc
fcmovbe
push
in
push
pop
adc
dec
pusha
pop
add
das
adcl
ss
xlat
aas
pop
pop
xorl
aas
add
cmp
jg
in
jge
pop
cmpsb
inc
inc
push
inc
lret
imul
xchg
sbb
cmp
dec
aam
cmp
pop
or
ret
pop
mov
mov
inc
fadds
lock
into
psrld
mov
mov
js
mov
push
pop
mov
inc
ss
inc
pop
daa
jecxz
fistpl
imul
xor
dec
add
stos
mov
xlat
and
sub
jg
cmp
fildll
iret
pop
adcb
push
inc
cwtl
sbb
cmp
test
out
xor
daa
movb
das
adc
and
fstpt
mov
es
insl
jo
je
add
addr16
incb
aas
jo
jae
daa
pop
jno
outsl
xor
and
and
jg
mov
and
pop
pop
sub
cmpsb
jns
addl
gs
jmp
xor
and
inc
ja
sbb
dec
out
lock
mov
jae
mulb
icebp
push
pop
cmp
dec
pop
inc
sub
dec
fstpt
fimuls
imul
movsb
jo
outsb
push
sbb
jne
or
pop
inc
sti
inc
mov
data16
mov
js
into
push
notl
arpl
nop
or
pop
stos
pop
or
lods
inc
daa
ret
aam
sub
dec
insb
lds
and
push
adc
adc
pop
into
dec
call
push
mov
ljmp
scas
dec
push
das
cmpsl
push
nop
dec
outsb
pop
pop
pop
dec
cmc
fistps
dec
push
push
addr16
adc
add
loop
inc
push
aam
jns
jb
adc
mov
sub
push
ret
mov
pusha
or
add
out
inc
outsl
outsb
or
jp
inc
addr16
inc
insb
fmuls
aaa
xchg
jp
pop
daa
sahf
and
inc
loope
mov
pop
cmpsb
jb
popa
dec
or
ds
mov
mov
jp
push
pop
outsl
inc
push
dec
inc
dec
push
sbb
and
xchg
add
add
jge
inc
mov
jg
popw
mov
ret
jbe
add
pop
add
pop
add
sbb
into
add
ja
popf
ja
add
insb
jnp
and
inc
push
pop
xor
and
das
ds
das
sbb
cmp
mov
and
imulb
daa
daa
daa
push
and
out
in
jg
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
insb
in
fs
scas
sbb
or
cs
and
inc
add
insl
and
inc
pop
imul
or
mov
mov
push
sbb
xlat
ds
shll
push
popw
push
cmp
sbbl
aaa
push
add
jge
loope
fistl
add
push
stos
and
add
jg
fidivl
add
data16
push
jl
add
pop
popa
mov
mov
ja
gs
sub
lds
push
mov
and
push
loopne
mov
mov
bound
push
nop
cmpsb
scas
popl
mov
add
mov
stos
adc
arpl
popa
dec
jl
scas
aaa
pusha
inc
mov
or
pop
outsl
jbe,pt
or
or
cmpsl
mov
daa
push
lcall
sub
ficoms
fcoml
mov
or
sbb
or
push
ficompl
scas
js
add
inc
jb
ljmp
pop
inc
or
das
adc
outsl
arpl
popa
rcr
enter
and
and
arpl
fcomp
cmp
je
and
cmp
je
and
push
xchg
movsb
outsl
je
mov
popa
stos
adc
or
dec
cs
mov
imul
sub
sub
push
rolb
jae
js
and
dec
inc
cmpl
pop
and
push
push
ret
outsb
sub
js
outsl
fs
gs
in
imull
je
mov
adc
sub
add
pop
outsl
insl
jne
or
pop
bound
xchg
fiadds
les
pop
lods
add
cmp
and
icebp
inc
je
bound
aaa
inc
jl
jno
insb
pop
jbe
ret
aas
cmp
pop
inc
popa
imul
inc
into
aaa
arpl
mov
outsl
jo
insb
in
cmp
dec
sub
inc
loope
sub
mov
cmp
inc
or
inc
xadd
aas
or
cmc
inc
cmovo
lcall
cmp
pop
fldt
nop
jo
maxps
loopne
or
mov
hlt
test
inc
inc
ud2
pop
orl
bound
aaa
daa
imulb
add
sbb
lods
movsb
inc
mov
cmp
ds
in
push
push
sbb
fimuls
daa
dec
hlt
daa
fisubrs
jns
add
push
adc
sub
add
outsl
pop
iret
dec
movsl
aaa
sti
es
lahf
add
das
inc
push
or
xchg
mov
cwtl
movsb
inc
daa
movsb
jns
mov
inc
mov
jecxz
sub
cmpsl
fnstcw
push
xor
cmp
jns
fsubrl
fidivrs
test
add
lods
shlb
dec
ja
add
mov
das
jle
out
fstl
xor
sub
mov
outsl
inc
cmpsb
push
sub
outsl
add
jge
repnz
addr16
leave
mov
add
negl
adc
add
mov
cmpsl
lahf
test
mov
loopne
inc
pop
jb
arpl
xchg
cwtl
dec
imul
pop
test
out
cs
dec
in
jb
dec
enter
push
dec
xchg
js
mov
movsb
jl
dec
sahf
or
jl,pn
enter
frstor
aas
add
and
cmpsl
adc
and
sub
je
inc
daa
in
fsubrs
or
pop
mov
insb
aas
daa
repnz
mov
addr16
push
movsb
and
push
dec
sahf
mov
xchg
mov
cmp
adcb
testb
cwtl
inc
scas
ss
dec
add
out
inc
stos
push
int3
sub
add
mov
mov
inc
rol
mov
mov
scas
ja
dec
or
lock
or
or
cld
adc
das
inc
test
stos
jo
mov
push
pusha
das
sbb
dec
jl
mov
aad
push
jb
out
testb
aaa
push
jns
lock
push
loopne
mov
lods
mov
mov
daa
mov
xchg
jo
sbbb
and
mov
nop
out
daa
aam
int3
nop
or
in
aam
mov
test
push
bound
fsubr
push
and
cld
xchg
cmp
lcall
outsb
insl
dec
scas
mov
jo
xchg
in
sbb
pushf
testl
fcompl
in
fidivl
rcll
lahf
and
sbb
add
cmp
lahf
rolb
ja
add
insb
pusha
mov
out
mov
inc
sahf
or
insb
xor
add
xor
jl
in
pusha
or
or
sbb
sub
lahf
pusha
pop
bnd
ja
mov
enter
mov
jae
mov
pop
repnz
mov
test
cld
add
fistl
mov
mov
mov
cmpsl
cld
or
push
mov
iret
xor
pusha
je
push
push
cmpsl
jg
mov
movsb
mov
scas
mov
cmpsl
cmp
clc
or
add
pusha
clc
sahf
or
pop
mov
jo
nop
or
mov
lods
jg
mov
mov
es
les
mov
sahf
or
mov
lock
out
push
add
cmpsl
in
insb
pop
enter
lods
dec
mov
cmp
test
test
imul
dec
jl
or
lods
rorb
enter
adc
lock
cmp
lock
out
mov
stos
ficoml
dec
das
inc
sahf
ja
enter
nop
out
mov
or
in
clc
in
xor
lahf
hlt
add
clc
test
in
lods
xor
stos
mov
push
lahf
dec
lahf
or
imul
test
in
sahf
xchg
movsb
push
inc
icebp
mov
mov
lods
dec
push
push
clc
mov
push
add
aam
sub
cmp
dec
mov
test
nop
out
pop
jg
loopne
mov
mov
in
jl
scas
shlb
hlt
mov
out
push
fcoms
rolb
hlt
dec
enter
push
dec
mov
rep
sub
dec
insb
xchg
jl
fidivrl
mov
rcr
fmuls
ja
clc
pop
enter
fsubr
mov
andb
movsb
inc
enter
stc
pop
loopne
mov
push
inc
mov
or
lahf
or
cmpsl
sbb
jo
xchg
mov
mov
adc
jae
iret
test
aam
jb
iret
call
pop
enter
mov
outsl
sub
cmp
addr16
ja
shrb
in
js
shl
mov
ja
lock
adc
push
fdivrl
sub
push
fwait
nop
data16
mov
jbe
dec
loop
or
pop
mov
mov
pop
push
inc
jg
jns
pop
inc
js
jb
jo
rcrb
ds
mov
and
rcl
mov
jnp
mov
dec
int3
push
daa
addr16
adc
lahf
int3
inc
ja
repnz
inc
lock
mov
inc
and
lock
movsb
jns
pop
movsb
sbb
clc
or
or
icebp
or
mov
push
insb
mov
push
addl
pop
repnz
lods
lahf
jo
pop
pop
adc
inc
cwtl
daa
ds
repnz
cld
adc
cwtl
inc
jg
dec
mov
dec
mov
lahf
push
add
int3
inc
ja
inc
push
int3
add
push
mov
mov
push
add
nop
xor
inc
pop
add
lahf
dec
inc
in
in
and
mov
negl
pop
push
test
pusha
imul
mov
dec
nop
mov
or
lahf
nop
inc
inc
sahf
pop
imul
fsub
call
mov
in
inc
fsubr
sub
adc
cmp
lahf
in
inc
int
pop
pop
ja
adc
mov
push
mov
test
pop
add
inc
rolb
lahf
mov
add
adc
and
lahf
rep
sub
mov
repnz
enter
mov
test
mov
and
loopne
ds
jb
shl
shlb
outsl
inc
and
xor
lahf
in
mov
adc
jo
dec
cmp
jb
lahf
pusha
inc
mov
and
test
rolb
enter
add
fcmovbe
push
aam
adc
xchg
inc
loopne
pop
aad
outsl
aas
dec
enter
jg
cmp
jns
testb
nop
cwtl
rcr
cmp
out
enter
cwtl
sub
outsl
aaa
and
ret
fiaddl
mov
xchg
clc
outsl
and
fistpll
pop
ret
mov
add
pop
insb
dec
addr16
iret
add
ljmp
add
ret
mov
or
in
pop
sub
lock
call
rorb
mov
or
aas
daa
fiadds
daa
cmp
pop
ret
insb
push
lods
insb
add
xchg
js
mov
lods
pop
movsb
scas
push
imul
xlat
mov
dec
and
mov
xlat
inc
fadds
adc
mov
mov
mov
in
and
ja
inc
insb
ja
jo
outsb
mov
outsl
push
jns
outsl
dec
movsb
test
mov
shll
outsl
bound
push
and
pop
int
daa
aas
insb
sbb
addr16
pop
shrb
adc
lahf
xchg
int
pop
ja
daa
clc
mov
mov
mov
xor
sub
push
sub
push
dec
aaa
mov
inc
pop
mov
or
int
cmp
push
add
lcall
sub
adc
dec
repz
hlt
int
test
sahf
out
push
cmp
lret
enter
iret
cmp
lret
ds
repz
cmp
push
je
cmp
jns
iret
and
or
out
ljmp
jg
jns
insl
aas
add
call
lds
jo
and
inc
jle
fnstenv
fbld
ss
mov
add
enter
sahf
out
movsb
cwtl
add
mov
add
jge
jae
mov
adc
cwtl
flds
add
enter
pusha
jg
add
push
arpl
ja
mov
and
xchg
dec
das
jbe
and
fadds
pop
leave
and
pusha
mov
in
nop
leave
mov
shrl
leave
mov
inc
jl
adc
out
jg
call
sbb
fildll
mov
cmp
or
mov
and
and
lods
scas
add
push
popa
ljmp
leave
and
xor
and
pop
cld
fbstp
cmc
push
out
cmpsb
aaa
push
lret
lcall
mov
je
pop
scas
insb
push
lods
fs
outsl
mov
dec
enter
cmp
or
push
sbb
fbstp
insb
and
sub
and
sub
rcrl
add
js
sahf
sub
or
sub
int3
aam
push
fsubrp
push
sub
rcrl
leave
add
sbb
or
ja
or
push
out
int
jg
push
lods
add
in
pushf
pop
shrb
int
and
fmul
outsl
add
and
out
add
and
into
inc
xchg
jmp
popa
sub
ficomps
mov
scas
fcoms
xchg
outsl
mov
add
ss
mov
daa
call
mov
insl
mov
ss
lods
jb
push
mov
rorl
daa
addr16
ficoms
es
orl
pushl
fistpl
fsubl
mov
push
test
adc
push
xor
outsl
mov
pop
add
aaa
adc
sub
xchg
sbb
loope
fcmovb
ret
add
rolb
mov
testl
jb
shlb
pop
push
push
outsl
jg
movsl
scas
sbb
punpckldq
movsb
out
jle
add
scas
push
je
dec
cmp
push
rcl
sub
push
or
stos
dec
dec
ja
xchg
fmuls
xchg
test
or
mov
in
sarl
pop
in
shrl
adc
xlat
or
decl
notb
xchg
daa
add
or
sahf
push
enter
dec
adc
adc
add
pop
mov
rclb
mov
or
aaa
and
add
add
shl
push
scas
jo
clc
push
test
lods
fs
aaa
mov
push
lods
xor
mov
addr16
mov
sub
ja
in
outsl
js
inc
mov
add
loop
pushf
loopne
xor
inc
aam
pusha
pop
subb
or
lods
pop
movl
mov
dec
sahf
mov
lock
sub
add
cltd
nop
pop
and
xor
aad
pusha
and
cs
dec
and
call
fdivr
pop
inc
push
lods
push
jo
das
outsl
aad
lods
in
aaa
push
jl
stos
pop
int3
clc
aad
loope
stc
cmp
ss
cmp
sbb
leave
adc
xor
add
jns
and
fs
movsb
cmpsb
jo
mov
or
iret
lods
fs
pushf
xlat
add
loopne
sahf
iret
xchg
fldcw
sub
daa
or
add
faddp
fwait
adc
push
mov
push
cmpsl
jge
fadds
mov
lock
out
fdivs
mov
pushl
lahf
or
cmpsl
push
jb
push
aaa
or
jno
adc
or
xlat
movsb
dec
adc
dec
sub
outsl
add
or
dec
dec
sahf
sbb
or
sbb
xchg
dec
add
ss
pop
jb
pop
lock
xor
dec
fsts
scas
add
sbb
push
cmp
jb
push
lock
lock
add
lahf
loopne
add
addr16
shlb
xlat
out
sub
or
lock
outsb
jnp
inc
fisubl
push
dec
daa
aas
xor
pop
add
gs
daa
fbld
scas
fbstp
icebp
dec
adc
mov
ficoml
stos
and
divl
pop
push
fs
fcmovu
add
adc
inc
jmp
fcmovne
inc
lock
test
stc
push
ja
mov
mov
inc
cs
mov
mov
mov
ja
fadd
mov
push
dec
push
xchg
das
fmul
mov
pusha
ja
dec
hlt
jl
xchg
or
mov
mov
addr16
xchg
sub
imul
jecxz
push
in
pop
jo
mov
xor
out
filds
insl
xor
stc
cmp
xchg
mov
lahf
out
sahf
popa
mov
ds
repz
mov
sahf
out
xor
jne
div
cmp
repz
jno
out
lcall
out
ds
jae
sbb
sarl
in
jne
repz
stc
cmp
mov
lret
ja
jns
cmpsl
cmp
mov
lahf
clc
push
js
jb
cmp
ds
jns
push
mov
lcall
ret
xor
notb
jnp
int
jl
out
sahf
and
xchg
stc
xor
repz
mov
jmp
jle
sahf
out
dec
mov
ds
roll
xlat
pop
sbbb
out
lock
ds
shr
orb
dec
push
popf
clc
sub
jb
sarl
fiaddl
jle
ficomps
xchg
iret
sarl
pop
mov
adc
popa
iret
mov
sbb
push
leave
in
sub
repz
repnz
repz
repnz
lea
jns
jbe
stos
in
cmp
repz
stc
or
xchg
jl
out
ljmp
imul
cmc
adc
out
setbe
ret
cwtl
imul
leave
add
sahf
out
cmc
imul
fwait
jge
iret
repz
lock
repz
popf
pusha
sbbl
cmp
cmp
or
cmpsl
fnstcw
inc
mov
lahf
out
cmp
filds
iret
repz
fcoms
movsl
ss
out
cltd
mov
jns
iret
repz
dec
cmpsl
jns
repz
out
and
jl
out
test
stos
sarl
iret
xor
repz
iret
rep
push
jb
out
lcall
clc
out
cmp
xor
xchg
repz
jl
aam
mov
mov
repz
mov
test
mov
leave
hlt
daa
mov
jl
cmpsl
bound
repz
out
mov
mov
test
std
dec
mov
sahf
cmpsl
stc
push
mov
mov
cld
das
mov
imul
rorl
mov
out
in
rcrb
sahf
out
rorl
ret
fldcw
iret
lcall
leave
jge
dec
mov
lret
int3
enter
insb
mov
push
inc
aam
arpl
fmuls
into
sbb
fnsave
push
mov
pusha
out
xor
dec
incl
outsl
dec
sub
mov
nopl
cs
mov
leave
sarb
bswap
aas
test
cmp
inc
pinsrw
pusha
adc
ja
push
in
loop
stos
fstp
jne
or
pop
pop
aaa
int
mov
into
inc
pop
mov
cltd
nop
push
rclb
inc
dec
mov
dec
js
sub
and
fs
fadds
fimuls
dec
ss
incl
aas
jns
adc
push
mov
das
inc
jo
test
out
stos
inc
pop
jecxz
xchg
lods
jns
imul
in
push
jo
jmp
lahf
xchg
jmp
sub
pop
pop
out
repz
je
push
dec
std
setb
cmp
pop
add
mov
nop
inc
lret
add
unpcklps
pop
movl
cmp
push
and
xor
xor
xlat
pop
jb
in
cmpsl
push
lods
push
fldt
sbb
mov
pop
jl
mov
push
pop
push
faddl
push
jmp
pop
inc
lods
cmpl
and
mul
popl
pop
bound
insb
push
lahf
leave
or
dec
pop
sahf
push
pop
das
pop
cmp
push
dec
out
out
out
adc
fbld
inc
fistpll
inc
jno
xlat
loopne
pop
dec
popa
xchg
aaa
test
push
push
popa
out
jmp
jle
flds
nop
scas
sub
sbb
or
les
scas
inc
pop
add
call
pop
inc
test
jb
fistpl
inc
js
push
faddl
aas
add
cmp
es
mov
add
rclb
int3
lahf
shrl
jmp
leave
push
dec
aam
ja
data16
ret
sub
ja
push
fwait
mov
sbb
leave
inc
sbb
jns
jmp
push
daa
pop
ja
mov
test
mov
daa
ljmp
loopne
and
lods
cmp
lock
mov
outsb
filds
dec
lods
pop
fmuls
mov
mov
xchg
je
jno
negb
xchg
xchg
adc
mov
dec
cs
dec
push
int3
lds
xchg
jl
test
out
dec
jb
inc
adc
sbb
aam
pop
push
mov
xchg
inc
repnz
or
in
jmp
outsl
xchg
sbb
jb
outsl
jb
jge
pusha
mov
notl
movsl
pushw
or
push
scas
push
push
cltd
sub
jbe
testl
rcrl
aam
push
and
mov
in
addr16
in
mov
in
mov
orb
out
in
xchg
dec
adc
sub
cwtl
in
aas
loopne
add
dec
sahf
xchg
mov
in
dec
adc
pop
push
out
inc
jb
and
adc
mov
push
pop
leave
loop
iret
repz
add
add
add
pop
in
pop
push
je
and
sbb
cmpsb
and
enter
out
push
mov
push
cmp
addr16
xchg
fsubl
or
pop
addr16
and
decl
leave
mov
push
out
mov
aam
or
iret
ja
lock
sbb
mov
out
push
adc
and
cmp
add
dec
lock
jb
dec
xor
jl
sarb
jg
and
pop
cmpsl
xchg
out
in
in
lahf
cmpsl
scas
push
add
sub
mov
mov
cs
in
loop
ljmp
add
jae
mov
sub
cmpsl
outsb
mov
insl
cmp
cmpsl
push
pop
pop
leave
add
xchg
add
fwait
xchg
into
adc
xchg
jae
iret
cmp
cmp
add
cmp
lret
push
or
repz
loopne
jmp
testb
hlt
push
dec
je
push
jne
xchg
cmp
cmp
inc
inc
pushf
out
cmovle
pop
inc
repnz
xchg
add
adc
xchg
push
mov
repnz
jns
jge
and
or
cld
repnz
stc
add
dec
xchg
sbb
push
fs
pop
leave
enter
pop
and
xor
or
jne
jb
enter
jne
jne
jne
mov
push
jne
jne
jne
mov
mov
xchg
out
fnsave
cmp
fbld
jns
test
scas
call
xchg
pop
and
and
pushf
push
mov
test
dec
test
or
cmc
out
push
jbe
dec
inc
push
fnstsw
addr16
push
daa
jg
add
mov
femms
bound
ja
push
mov
mov
pop
dec
or
pop
xchg
movsb
sarl
push
js
fsub
and
lods
aas
in
adc
mov
or
cmp
jae
popf
sub
add
and
pushf
daa
mov
inc
adc
cwtl
lock
xchg
cmpsb
mov
testb
ja
into
jb
xchg
divl
divl
pop
imull
cmp
jae
ja
scas
sbb
mov
mov
push
cltd
js
notl
dec
pop
xor
adc
aaa
mov
stos
mov
pop
push
mov
xchg
leave
or
orl
daa
jne
popf
xchg
mov
daa
ret
lret
add
push
addr16
fisubrs
or
xchg
pop
jns
jns
jns
and
jns
add
stc
jb
js
jae
cmpsl
je
push
fisttpll
push
daa
test
loopne
aaa
push
pop
jge
mov
lea
stos
in
addr16
mov
mov
xor
movsb
xchg
and
sbb
inc
cli
fistl
xchg
jne
js
cwtl
cmp
loopne
lock
loope
adc
nopl
and
sti
inc
jp
dec
dec
outsb
fisttpll
mov
xchg
mov
out
xchg
fsubs
xor
aad
aam
daa
fisttpll
mov
in
jp
movsb
and
or
inc
cld
adc
sbb
xchg
sub
xchg
cld
scas
movsl
add
nop
cwtl
sub
decl
add
jnp
mov
push
iret
repz
aas
push
add
add
repz
pop
mov
out
cmp
adc
std
inc
out
dec
mov
add
jne
push
pop
mov
adc
xchg
std
enter
pop
pushf
sub
icebp
pop
jae
xchg
mov
fmull
xchg
mov
mov
popa
pmullw
pop
push
cmp
push
push
mov
pop
in
push
push
test
mov
cmpsl
push
dec
inc
jb
inc
int3
je
sub
into
out
maskmovq
mov
pop
sbb
push
cmp
add
pop
inc
inc
mov
xor
xchg
mov
mov
scas
aad
xchg
or
mov
or
fiaddl
mov
or
orb
aaa
add
popf
mov
mov
mov
mov
sbbb
nop
xorb
add
pop
insl
mov
test
aaa
adc
add
cmp
inc
movl
incl
inc
push
daa
xor
push
jo
mov
add
xor
daa
push
testl
mov
ja
cwtl
fistpll
xchg
push
adc
in
cwtl
or
test
hlt
aam
les
add
fwait
in
add
daa
dec
mov
xor
fsub
addr16
jb
loope
add
pop
cmpb
mov
pop
push
add
cmp
repz
xor
int3
icebp
xchg
adcb
mov
xchg
cmovb
dec
leave
add
adc
ja
mov
or
test
push
daa
daa
add
call
scas
lock
or
subl
mov
rorb
sub
xchg
sub
add
ficoms
add
xchg
daa
xchg
push
lret
pop
mov
pusha
push
out
cwtl
mov
vpand
lahf
ljmp
rolb
insl
sub
push
push
push
test
inc
int
fisubrl
push
inc
ja
mov
pop
iret
jl
roll
xchg
test
cmc
lea
test
or
mov
add
daa
test
or
pushf
in
das
test
test
mov
cmpsb
jo
jne
and
movsb
pop
dec
insl
adc
leave
dec
pop
xor
sbb
add
outsb
push
cmp
push
dec
punpckldq
mov
test
in
sbbb
add
cwtl
scas
in
pop
clc
ss
daa
les
fcmovne
mov
xchg
push
ja
xchg
mov
add
pushf
jp
cmp
xchg
xchg
hlt
das
or
push
fisttps
ficoml
ud0
cmpsb
loopne
mov
ja
push
repnz
jne
cmp
pop
inc
add
pop
scas
jae
inc
pop
cmpsl
push
push
xor
das
xchg
lock
lock
scas
mov
mov
pop
leave
leave
inc
repnz
or
cmc
sahf
addr16
add
add
in
in
dec
sub
aaa
inc
das
dec
jecxz
iret
dec
or
cmp
data16
das
outsb
push
or
test
leave
repz
lcall
mov
ds
inc
repnz
or
pop
sub
mov
add
add
out
xchg
mov
mov
fnsave
xchg
push
negl
cmp
test
pop
shll
inc
daa
or
or
loope
dec
jb
mov
mov
adc
imul
fsubl
xchg
xlat
jae,pn
or
in
push
sahf
mov
dec
push
jecxz
inc
xor
xchg
cmp
xchg
ja
mov
inc
fbld
loope
js
daa
mov
test
adc
dec
stc
fistps
dec
sahf
scas
add
or
insl
loopne
test
outsl
mov
dec
push
push
inc
push
pusha
pop
adc
pop
dec
mov
pushf
in
push
int
mov
cmp
leave
fwait
mov
fisttps
cmpxchg8b
iret
xlat
push
dec
repnz
cmovl
jo
push
or
les
jg
pop
daa
cmp
ja
addr16
push
add
jp,pn
cmp
add
add
sbb
cmpsb
das
fisttps
mov
mov
mov
addr16
hlt
inc
adc
pop
mov
add
cmp
repz
inc
add
icebp
add
scas
outsb
mov
mov
dec
xchg
mov
jb
inc
pop
push
lds
int
shlb
aad
xchg
into
test
ds
ror
scas
and
inc
mov
popl
push
jbe
shrb
into
jle
addr16
push
mov
adc
pushf
jecxz
leave
icebp
decl
nop
sbb
push
xlat
inc
push
mov
adc
jmp
jae
daa
jle
inc
cmp
es
adc
mov
sahf
xchg
out
ja
xchg
leave
add
jb
mov
jmp
or
adc
xchg
ja
xchg
mov
and
inc
xor
mov
push
jbe
adc
jnp
iret
mov
rorl
fistpll
push
mov
cmp
cmp
add
ficomps
add
repz
out
testb
mulb
sahf
push
xchg
push
xchg
pop
push
sahf
out
sahf
or
or
in
dec
adc
inc
fucom
jns
adc
push
unpckhps
xchg
out
push
pop
push
data16
xchg
xlat
mov
leave
xor
call
mov
xchg
fildll
popf
cmp
mov
add
push
inc
adc
insl
in
mov
xchg
xor
aas
setns
loop
xchg
pop
sub
dec
cmp
xchg
jmp
pop
jb
mov
mov
std
syscall
xchg
or
je
aam
xlat
cmp
adc
pop
mov
daa
push
cmp
jmp
xchg
ja
add
pushf
je
movsl
push
shrd
scas
dec
or
lds
int
mov
paddsw
cmovle
add
xchg
mov
js
je
dec
lahf
pop
cmp
negl
pop
inc
sub
shll
pop
xchg
jg
fimuls
ljmp
loope
mov
adc
hlt
xchg
shrl
js
pop
and
and
in
sbb
or
enter
pop
rclb
jne
mov
pop
sub
add
push
testl
enter
add
aad
iret
sbb
xchg
xchg
cs
lahf
out
jns
jns
outsb
mov
pop
lcall
fmull
adc
mov
repnz
scas
mov
iret
out
add
stc
add
loopne
inc
xchg
xchg
pushf
fdivrs
cmp
add
enter
dec
sbb
xchg
inc
xchg
iret
sbb
ficoms
add
arpl
mov
lea
iret
popf
push
mov
repz
or
insb
or
xchg
or
sbb
ja
or
dec
pushf
out
add
push
inc
xchg
xchg
mov
jo
cmp
repz
lahf
or
or
mov
or
or
ljmp
sub
cld
das
add
mov
in
sub
mov
xorl
cwtl
cmp
daa
in
cwtl
xor
leave
sub
add
cmp
xchg
sarb
xchg
push
cwtl
cmpsl
push
sub
ljmp
jbe
jbe
and
imull
cs
xchg
out
je
sarl
mov
mov
mov
cltd
hlt
sbb
cwtl
jmp
cwtl
fcmovne
mov
sbb
and
pushf
xchg
xor
jg
xchg
daa
pop
enter
add
fidivl
mov
ja
cltd
daa
movsb
push
rclb
out
pop
mov
xchg
mov
mov
cmp
hlt
xchg
ljmp
aaa
lcall
xchg
outsb
mov
add
push
out
jns
cmpsl
decl
or
pop
movsl
popa
sahf
xchg
lcall
push
pop
mov
xlat
mov
add
aas
jle
push
add
or
add
xor
shld
fistl
xchg
pop
enter
mov
pop
dec
and
jecxz
lcall
add
or
push
repnz
push
cmp
inc
repz
pop
pop
add
mov
leave
gs
pcmpeqw
or
cmp
cwtl
push
das
cvtpi2ps
xlat
pop
mov
and
int
fstsw
call
cmpsl
push
enter
mov
sbb
push
pushf
sbb
pushf
dec
push
pop
pop
sahf
pushf
pop
and
xchg
cltd
pushf
sub
pushf
inc
xchg
xchg
or
mov
add
int3
incl
loopne
daa
cmp
popf
adc
movsl
xor
addr16
in
ja
dec
jnp
dec
cs
fistl
scas
popf
iret
das
loopne
add
imul
pop
fs
pop
leave
mov
push
jb
inc
imul
push
pop
cmp
into
inc
fwait
add
subl
iret
add
in
and
out
xlat
and
leave
in
filds
repz
pop
inc
lahf
and
add
xchg
pop
jo
xor
paddd
lahf
fmull
pop
cmpsl
ja
xchg
cwtl
push
out
dec
and
cmpsl
push
and
pop
rclb
lahf
lcall
mov
fisttps
mov
fisubs
mov
add
cs
ja
cmp
or
jno
push
cmpsl
fisttpl
or
pop
cmp
sahf
popf
push
mov
iret
sbb
and
mov
aas
out
psadbw
cmp
dec
sahf
add
push
mov
ja
push
push
das
mov
aas
mov
dec
sahf
out
bound
push
jb
mov
jmp
xchg
xchg
add
jecxz
cmp
ds
cmc
lahf
std
repnz
syscall
mov
push
sbb
leave
subl
sahf
and
push
pop
dec
mov
lcall
in
into
repz
add
repnz
aam
sub
mov
nopl
xor
cmp
ds
fimuls
pop
arpl
jns
testl
cwtl
lods
mov
fwait
daa
push
fisttps
out
pop
out
maskmovq
decl
pop
movsb
insl
xor
pop
femms
add
movsb
mov
in
xlat
or
push
ja
lcall
fst
pop
jne
pop
jge
push
aas
push
and
aas
iret
test
in
in
mov
mov
pop
jb
enter
sub
mov
sti
lsl
jb
movsl
addb
mov
iret
xchg
fidivrs
pop
imul
orl
lock
and
in
xchg
pxor
mov
xchg
add
pop
inc
mov
cmpsb
sub
mov
xchg
xchg
iret
leave
gs
sub
nop
sets
cmpsb
mov
mov
daa
daa
mov
lret
rorl
fninit
jmp
lods
nop
imul
in
cmpsl
push
nopl
add
shll
cs
ds
cs
addr16
cmpsl
or
imul
sub
das
pushf
movsb
lods
xchg
mov
mov
xchg
imul
xlat
pandn
xchg
icebp
xchg
add
or
fsubl
xchg
shll
sub
addr16
into
inc
repnz
add
mov
jmp
jbe
ljmp
mov
fmull
out
stos
push
xchg
mov
ret
fiadds
mov
sahf
xchg
lret
or
sbb
or
add
adc
sub
fcmovne
dec
dec
push
pop
xchg
in
mov
seto
in
in
lcall
js
shll
fistpll
stos
unpcklps
das
add
lahf
pop
aas
repz
dec
stos
mov
iret
add
js
ds
cmp
subl
lods
mov
and
push
xlat
cs
dec
je
scas
das
add
or
adc
sbb
add
sub
jnp
cmovle
faddl
add
das
xchg
pop
pusha
or
das
pushf
cmpsl
mov
pushf
pushf
mov
enter
jns
dec
pop
rcr
push
or
cmpsl
mov
pop
or
sahf
pop
push
and
ds
xchg
out
dec
push
adc
cmp
fbstp
adc
pop
and
pop
or
das
jl
fstpl
add
mov
xchg
jmp
xlat
enter
push
add
lods
dec
shll
lods
iret
nopl
in
mov
lods
ljmp
sbb
divl
rorb
push
add
mov
clts
push
xchg
pop
cmp
repz
or
popf
mov
mov
outsb
mov
lods
adc
xor
scas
aas
leave
jnp
repnz
push
add
jecxz
pop
scas
outsl
clc
mov
inc
out
inc
xor
je
dec
add
loopne
orb
lcall
push
ret
cs
mov
xlat
rorl
push
iret
jecxz
daa
xchg
iret
sbb
or
fsubs
push
add
in
xor
xor
jns
push
add
scas
xchg
dec
insl
pop
mov
scas
sub
push
gs
lcall
pop
ror
fwait
pushf
pushf
rcr
xchg
xchg
out
loopne
lock
xchg
pop
sub
mov
xchg
mov
outsl
mov
fsubl
dec
addr16
daa
pop
pop
addr16
fmull
movq
jg
cmp
xor
stos
cmp
aad
push
mov
iret
mov
xor
outsl
or
into
leave
int
xlat
nop/reserved
inc
jo
xchg
daa
pop
xsaveopt
mov
nop
xchg
mov
mov
xor
add
pop
mov
es
shlb
loopne
pushf
sub
int3
xor
cmp
xor
je
pop
xlat
int3
out
divl
push
push
ss
add
ss
mov
mov
ljmp
mov
mov
aas
outsb
fstpl
inc
iret
push
minps
repz
push
jns
leave
repz
mov
sahf
out
stos
or
xchg
ror
push
sahf
out
sahf
loope
in
adc
adc
sarl
adc
jns
out
and
jns
cmp
inc
sbb
je
out
pop
sbb
sbb
adc
pushf
adc
adc
cwtl
pushf
pushf
pushf
femms
or
pop
sub
ss
push
das
mov
out
cmpl
add
mov
dec
sbb
jl
dec
ja
mov
push
daa
test
jp
aam
rcr
mov
mov
movsb
mov
mov
and
lods
and
lsl
sbbl
push
aaa
es
pop
xor
jne
mov
push
ja
imul
xchg
das
mov
mov
test
dec
les
bnd
add
mov
lea
std
mov
mov
push
enter
mov
aaa
xor
dec
addr16
inc
mov
cwtl
iret
add
xchg
int3
jns
leave
leave
add
in
add
jbe
jb
movzbl
push
daa
pop
mov
inc
repnz
ja
xor
xchg
rcr
leave
dec
push
pop
pop
mov
daa
daa
pop
sub
iret
in
in
push
add
jecxz
pop
and
enter
arpl
xchg
add
test
jg
idivl
iret
mov
adc
sbb
add
cmp
sub
pop
xor
or
leave
repz
or
push
or
sahf
out
push
or
lea
pop
adc
xchg
insb
inc
cmp
mov
dec
inc
xchg
sahf
xchg
xchg
fildl
hlt
cmp
xchg
pop
je
adc
loop
in
iret
clc
mov
rolb
in
outsl
js
cmp
add
scas
cmp
mov
push
dec
cmp
add
fwait
cmp
in
push
push
add
sahf
orb
or
adc
mov
cmp
or
xchg
mov
mov
mov
xchg
daa
ds
daa
push
inc
mov
dec
outsb
daa
rorl
fabs
mov
jmp
mov
mov
adc
pop
mov
sub
fmull
gs
pcmpeqw
xchg
cmp
jge
add
jecxz
mov
aas
push
fadd
iret
pop
in
mov
mov
roll
incl
in
jge
out
cmp
mov
fldl
lsl
mov
mov
add
mov
inc
aaa
jmp
adc
push
mov
inc
jo
andl
test
mov
jecxz
paddb
fs
sbbl
or
xorl
cmp
inc
mov
aas
pop
push
push
add
lahf
mov
repnz
pop
add
pushf
cmp
or
or
subl
jnp
and
adc
es
iret
in
mov
loope
xchg
dec
dec
jmp
jb
dec
jmp
jae
in
ja
test
setle
fstl
push
add
leave
leave
rorl
push
movsb
lods
iret
leave
leave
leave
mov
enter
pushf
pushf
cmp
loop
hlt
mov
lahf
ror
mov
pop
mov
iret
rcrl
addr16
ljmp
jge
xchg
mov
mov
stc
loope
pop
push
scas
sarb
outsb
syscall
push
push
loope
cmp
invd
in
negl
or
lock
xchg
mov
mov
aaa
movhps
mov
pop
mov
outsb
mov
jb
mov
add
adc
movd
inc
call
mov
mov
aas
cs
xchg
leave
decl
andl
cmp
js
pop
daa
mov
iret
xchg
cmp
or
mov
push
pop
sbb
adc
mov
dec
mov
mov
or
or
xor
lcall
mov
adc
pop
push
ficoml
ja
dec
scas
fisttpll
paddusb
xchg
jl
mov
mov
push
inc
xor
shlb
inc
ds
xchg
xchg
fstpl
mov
lahf
mov
rcl
shl
pop
ja
xchg
ficompl
add
je
ljmp
cwtl
pushf
add
repnz
stc
xchg
xchg
rolb
adc
and
rcll
andl
sarl
inc
rorl
insl
daa
mov
orl
push
add
clts
mov
test
iret
enter
rol
rorb
jmp
pmuludq
in
insl
divb
out
add
pop
dec
andps
ljmp
fs
insb
jns
in
jg
dec
or
adc
or
mov
outsl
cvttps2pi
iret
repz
adc
cmp
inc
cs
movups
jl
pushf
pushf
fcompl
test
repz
es
jae
pop
mov
out
in
int3
push
and
fsubr
es
mov
in
movaps
jns
out
sub
sub
iret
repz
sub
adc
sbb
fdivp
cmp
and
dec
sub
enter
ret
xor
pop
je
inc
pop
ret
out
addr16
mov
pusha
pop
sbb
mov
dec
inc
sarl
or
in
outsb
in
add
push
ja
ret
subl
xchg
int
mov
pop
sub
les
movlps
and
leave
addr16
dec
les
xchg
push
out
push
add
jmp
rorl
add
cmpsl
insb
pop
paddsw
jns
pop
jbe
orb
xchg
dec
lcall
cmp
push
fmuls
loopne
call
adc
adc
adc
cmpsl
stc
add
pop
out
sahf
out
sub
sbb
sbb
push
sbb
out
pop
sbb
sbb
out
jp
test
sahf
out
sahf
mov
cwtl
and
jns
and
and
out
int
fisubrl
xchg
out
sahf
in
out
sub
add
aas
push
pop
push
jg
lahf
mov
mov
incl
and
cmp
repz
and
iret
repz
push
fs
iret
repz
jl
test
repz
repz
xchg
push
pushf
iret
repz
adc
mov
adc
or
mov
movb
push
leave
push
iret
repz
sub
testl
iret
repz
add
cmp
repz
pop
or
inc
push
adc
js
sahf
test
sbb
repnz
or
pushf
cmpsb
mov
xchg
and
mov
cmp
enter
in
test
out
sbb
enter
pop
sbb
out
and
sbb
out
sahf
out
inc
sbb
jns
pop
pop
imul
mov
das
test
outsl
cwtl
mov
jbe
iret
mov
mov
or
ror
dec
fsts
iret
repz
adc
adc
iret
sbb
lock
add
or
unpcklps
repz
sbb
and
repz
repz
xor
cmp
repz
or
push
pop
pop
cmp
sarl
pop
push
add
mov
test
das
xchg
leave
pop
leave
cmp
push
jg
dec
lds
fsub
jbe
aad
push
xchg
out
mov
add
sub
cmc
pop
cmc
lahf
std
cmp
inc
pop
mov
push
iret
repz
or
and
adc
in
outsb
cmovne
leave
leave
pop
addr16
jns
out
sahf
or
inc
repnz
pop
cmpsl
lret
loop
xlat
push
add
push
daa
fimull
add
mov
lret
lret
cs
pop
in
push
lret
bndstx
daa
daa
mov
das
sub
cmp
cmp
daa
dec
push
divps
jns
iret
adc
push
adc
fcmovne
in
xchg
xchg
das
lahf
xchg
xchg
xchg
xchg
cmpsl
scas
mov
out
sahf
xchg
iret
sbb
sahf
xchg
in
and
clc
lret
and
push
push
int3
es
mov
out
add
ss
ds
test
cmp
dec
push
iret
mov
push
js
and
pxor
mov
cwtl
dec
mov
popf
cmp
mov
mov
je
scas
push
push
scas
jecxz
loop
popf
out
jg
add
or
cmp
xchg
jno
decl
add
repz
xor
aas
dec
popf
cmp
repz
pusha
cltd
jns
xchg
out
or
insl
push
js
jns
out
adcl
adc
jns
xchg
scas
mov
sarb
fucomi
fisttpl
out
icebp
sbb
repnz
out
pop
into
adc
sbb
sbb
sub
iret
jae
dec
push
and
iret
jae
cmp
jne
and
daa
xchg
daa
mov
in
mov
int
in
sahf
out
cs
das
stc
sub
dec
icebp
add
outsl
xor
iret
jae
outsb
aaa
pop
outsl
push
add
flds
iret
push
sahf
out
sahf
add
add
and
pop
orl
daa
iret
repz
or
in
in
mov
sahf
out
in
xlat
fists
out
repz
pop
notl
cmp
pop
dec
rorb
push
adc
push
cmpsl
fwait
cmp
pop
sbb
nopl
push
dec
das
rolb
mov
insb
dec
dec
dec
dec
je
xchg
xchg
sahf
rorb
sarb
sarb
leave
leave
push
repnz
repnz
out
fisttpll
push
or
mov
and
rcr
cmp
or
dec
rcrl
or
dec
pop
aaa
jns
prefetch
jl
in
jbe
fstpl
jg
lahf
test
mov
sahf
out
fidivrs
push
js
cmp
in
psubw
rclb
iret
repz
aas
fisttpl
sbb
sbb
cmc
dec
fmulp
xchg
rolb
rorl
push
sbb
repnz
sbb
rcrl
sarl
rcrl
dec
sarl
adc
sub
sub
sub
fdivl
jg
sub
push
sub
repz
pop
das
imul
repz
xor
mov
stos
sahf
ss
aaa
ret
cmp
cmp
cmp
aas
jg
cmp
out
sahf
idivl
aas
iret
in
adcb
into
inc
cmp
repz
inc
in
icebp
in
in
leave
repz
decb
aam
push
aam
popf
out
fisubs
push
adc
add
jo
scas
and
arpl
iret
mov
and
ja
mov
add
outsb
mov
jne
mov
aam
mov
add
iret
repz
add
mov
les
or
or
sbb
hlt
or
jns
aad
push
bndstx
sub
out
adc
push
repnz
mov
pop
adc
jb
jns
sbb
setp
cmpsl
mov
in
mov
mov
and
jne
leave
in
in
psubb
push
pop
leave
out
ja
push
jns
jbe
pop
add
dec
push
jle
pop
jle
mov
dec
sahf
ja
push
add
cmp
stos
add
jns
xchg
out
loope
in
in
arpl
filds
xlat
or
in
xlat
xlat
dec
xor
cmp
adc
es
repz
adc
adc
iret
pop
push
addr16
jb
sahf
out
cmp
mov
sbb
jns
test
out
and
cmp
lret
aad
lret
repz
jmp
sahf
out
mov
outsl
add
push
or
pop
mov
and
das
jo
repnz
mulps
fbstp
push
cmp
ss
pop
xchg
fmuls
iret
repz
add
repz
leave
add
jbe
fninit
aas
jmp
repz
inc
leave
jecxz
sti
fsubr
mov
cltd
fstps
lahf
outsl
sub
fxch
dec
leave
repz
push
push
push
pop
push
es
repz
or
mov
sahf
out
psubusw
in
jnp
xchg
sbb
pop
ficompl
mov
push
adc
push
sbb
lea
fsubp
fidivl
push
sbb
sbb
sbb
out
arpl
jo
sahf
out
sahf
mov
xchg
and
jns
and
gs
outsb
iret
xlat
out
in
fisubrl
stac
push
inc
jg
into
xchg
dec
sbb
pop
inc
cwtl
mov
loopne
daa
sub
jecxz
outsl
push
fisttpl
add
repnz
decl
add
push
xchg
lret
fisttpl
sahf
out
or
xchg
xchg
jle
fistpl
or
cmc
aad
iret
push
adc
xchg
fcmovnu
scas
add
push
bswap
sahf
cmp
sbb
adc
cmp
cmp
mov
push
sbb
dec
hlt
jbe
pcmpeqw
jg
rcrb
inc
outsl
sub
cmp
jg
fdivrl
in
jg
fsubr
push
pop
icebp
ret
xchg
cmpsl
fwait
wbinvd
stc
add
das
jns
aaa
cmp
fnstsw
adc
or
in
in
sub
aaa
push
adc
jbe
pop
push
jne
fistpll
out
pop
sbb
dec
sahf
out
sbb
test
push
iret
repz
mov
mov
lahf
xchg
movd
frstor
call
dec
icebp
fldl
fsubp
jns
cmp
pop
add
cmp
jnp
add
pop
dec
jns
out
push
push
or
insb
je
out
ja
orb
repz
repz
cwtl
adc
adc
mov
ficompl
femms
repnz
lock
mov
std
fimuls
fists
fistpll
push
cmp
xchg
out
pop
sub
jg
fistpll
xchg
mov
in
sahf
out
and
inc
loopne
orl
sub
test
nop
bound
pop
test
aas
arpl
fs
pushf
arpl
inc
out
ficoml
loop
fbstp
enter
fisttps
loopne
loopne
stos
sbb
daa
hlt
cmpsl
pop
cmp
mov
loopne
loopne
cmpsl
fildl
mov
loopne
pop
syscall
repz
xchg
mov
cmp
es
or
frstor
pop
loopne,pt
fldcw
in
cmp
sbb
loope
adc
sbb
cmp
jae
daa
xor
iret
repz
pop
mov
iret
jae
sbb
int3
cs
dec
sahf
out
sbb
cmp
jbe
psrad
loop
push
push
and
leave
repz
imul
repz
daa
xchg
sub
pop
das
sub
sahf
ja
cmp
mov
push
das
int3
daa
fucom
jns
xlat
movhps
mov
loop
in
clc
push
shlb
stc
add
push
wrmsr
push
sub
dec
loope
lahf
pop
punpckhwd
cmp
mov
fwait
dec
and
fs
fistpl
dec
jecxz
jns
ja
movsl
test
jg
pushf
das
cmpsl
push
mov
mov
das
lret
jns
xchg
out
loopne
or
ja
insb
cmp
sbb
out
in
sahf
adc
das
cmp
adc
popf
cmp
push
das
pop
punpckhbw
in
in
sahf
pop
jae
jle
setle
mov
jae
jns
iret
pminub
in
sbb
cmp
xor
aas
lock
and
push
sub
repz
pusha
sub
jbe
jae
iret
fisubrl
das
lock
ficomps
stc
cmp
push
out
push
xor
sbb
in
dec
daa
xor
sbbl
push
mov
out
in
in
iret
cmp
xchg
testl
push
sbbw
or
pop
out
add
pop
mov
pop
xchg
out
xchg
xchg
fwait
movsl
add
push
lods
inc
mov
das
paddsw
dec
fisttps
leave
leave
out
out
mov
in
into
sbb
mul
adc
sbb
out
test
das
xlat
pusha
imul
mov
pxor
adc
mov
push
test
mov
es
push
rclb
add
ss
or
mov
nop
inc
ficomps
add
aas
inc
push
and
pop
add
sub
inc
inc
add
inc
add
sub
aaa
mov
aaa
xlat
cwtl
lcall
repz
mov
sbb
iret
push
or
or
fstl
aaa
or
outsb
imul
daa
mov
adc
and
cmp
inc
push
addr16
das
push
femms
outsb
mov
push
mov
insl
push
and
sbb
push
pop
andb
fildl
aas
addl
sub
popf
movsb
fbld
sbb
pop
data16
cld
or
push
mov
mov
test
ss
mov
push
add
test
ljmp
inc
pop
or
adc
mov
add
movsb
pushf
cmp
pusha
cmpb
cmpsb
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
aas
and
ficompl
pop
fisubrl
xor
fcomp
loopne
and
jle
jns
xor
je
jns
out
insb
push
jns
push
dec
inc
xor
and
out
sbb
adc
or
jl
out
add
cld
add
iret
repz
hlt
lock
iret
jnp
add
push
mov
repz
repz
mov
iret
pusha
push
pop
out
pop
pop
aas
dec
mov
cmp
in
sahf
xor
and
push
cld
add
out
in
fadd
mov
out
sahf
out
nop
mov
sahf
jo
pop
pusha
pop
push
dec
repnz
repz
xor
add
repz
push
fmul
mov
ds
add
pushw
jl
push
push
inc
mov
pop
cmp
icebp
mov
popa
sub
pop
stos
pusha
test
add
fnstenv
sbbb
adc
mov
pop
incl
pushf
mov
adc
sbb
push
xor
push
add
or
lods
pop
and
cwtl
xchg
mov
jl
xorb
icebp
call
push
mov
push
inc
jg
lcall
call
inc
loopne
sgdtl
push
pop
je
leave
adc
jg
mov
addb
add
pop
mov
add
add
es
or
testl
das
outsl
pop
adcl
rclb
pop
cs
mov
fadds
nop
fildll
add
fadds
orl
mov
dec
xchg
add
out
xchg
es
mov
push
adc
repz
sbb
push
sbb
dec
sahf
out
lcall
cmp
sarl
or
repz
notl
xor
mov
adc
mov
mov
sahf
idivl
int3
or
adc
cmp
sbb
adc
adc
or
cmp
imul
push
and
and
cmp
repz
and
iret
fsubrs
mov
test
insl
cmp
orb
inc
pop
inc
mov
shll
xor
jl
pop
mov
subb
inc
cmp
popf
rol
xorl
fistl
cmp
pop
js
repz
xchg
mov
repz
xor
dec
insl
add
push
pop
ja
sahf
out
xchg
mov
bnd
or
dec
insb
dec
jl
adc
inc
pop
jb
xchg
add
or
pop
repnz
mov
adc
enter
xchg
cwtl
push
and
sbb
push
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
pushl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
decl
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
decl
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
jmp
mov
subb
fwait
xchg
and
inc
aas
xor
repnz
int3
add
aas
jno
or
dec
inc
inc
or
aas
pop
fs
dec
lea
aas
ret
sar
ljmp
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
inc
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
pushl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
jmp
push
ja
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
aam
fmull
call
test
incl
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
sti
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
leave
inc
ficomps
frstor
nopl
jo
and
push
mov
jg
pop
add
inc
je
inc
mov
push
dec
addr16
pop
and
dec
dec
gs
std
inc
push
dec
inc
aaa
xor
jg
or
insl
mov
insb
cmp
roll
inc
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
push
stos
insl
imul
insl
bound
aas
inc
es
insb
imul
dec
push
popa
sub
sub
cmp
pusha
add
rclb
push
inc
dec
push
mov
pusha
push
mov
jo
jb
push
and
inc
test
out
dec
inc
gs
gs
mov
ds
les
arpl
mov
fwait
inc
or
sub
dec
outsl
push
dec
pop
sbb
push
push
jmp
xchg
out
or
mov
popf
ret
in
cmpsb
das
add
pop
das
inc
imul
and
fcoms
aas
dec
sbb
sbb
inc
dec
daa
fbstp
jae
imul
xor
sub
inc
inc
jg
inc
jns
dec
loopne
dec
mov
push
push
les
imul
push
cmp
xor
lods
mov
jb
jns
ljmp
cltd
dec
in
xor
mov
inc
sbb
push
add
inc
out
dec
push
dec
dec
sbb
add
jbe
dec
dec
scas
movsl
cmpsb
test
sub
xchg
int
movsl
cwtl
or
cli
adc
add
popa
jne
arpl
inc
jnp
in
dec
dec
add
push
bound
push
mov
int3
xchg
jns
pop
mov
or
mov
sbb
sbb
inc
xchg
push
inc
mov
js
cli
dec
test
mov
mov
push
pop
inc
fisubl
loope
mov
idivl
push
push
push
notl
imul
mov
push
dec
outsl
push
jb
addr16
lds
das
push
xor
push
clc
jp
nop
stos
inc
mov
dec
adc
jp
jg
push
cmp
push
insl
cmc
mov
outsl
push
inc
arpl
push
nop
push
push
push
cmpsl
repz
push
pushf
pusha
out
mov
sub
jg
or
fistpl
shll
rolb
mov
data16
mov
add
cmpsl
or
pusha
pop
xchg
lea
pop
fisttpl
ja
mov
pusha
inc
arpl
les
pop
pop
pop
sbb
aam
push
stc
lahf
push
jl
add
ja
shll
scas
std
push
push
mov
cmpsl
push
dec
dec
je
mov
xlat
dec
push
xchg
aad
lahf
inc
inc
sub
add
in
sub
stos
orb
mov
adc
jg
adc
pop
ret
stos
leave
or
sub
push
nop
lods
mov
mov
or
or
orl
push
dec
push
test
dec
dec
dec
adc
or
pop
cli
dec
dec
data16
mov
aaa
fcoms
cmp
fldl
and
imul
dec
push
pop
push
jne
les
inc
stos
andb
pop
sbb
inc
push
or
outsl
addr16
sbb
push
iret
inc
mov
pop
les
ret
cmp
andb
xchg
inc
out
and
out
push
dec
sahf
out
cmp
sbb
mov
out
mov
andb
int
adc
mov
arpl
pop
push
add
jae
cmp
push
jo
cmp
je
lahf
decl
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
lcall
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
decl
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
jmp
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
sar
ljmp
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
lock
pop
xchg
add
or
or
call
xchg
adc
stos
sbb
data16
pushl
push
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
call
xor
pushf
test
xchg
sbb
jmp
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
push
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
jg
mov
aam
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
incl
lods
sarb
add
in
add
pop
dec
or
cmp
add
daa
call
adc
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
jmp
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
decl
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
ljmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
fmuls
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
dec
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
inc
sub
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
push
mov
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
fcomip
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
roll
hlt
mov
mov
loop
mov
ljmp
jle
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
or
add
push
sub
mov
or
sbb
mov
out
add
xchg
testb
pop
bound
das
xchg
jne
fistpl
xor
push
imul
insb
imul
xlat
jmp
push
and
pop
inc
jbe
push
jns
arpl
add
push
outsl
arpl
ja
subb
push
inc
insl
jns
dec
adc
cli
outsl
insl
addr16
insb
mov
xchg
fildl
cwtl
nop
cmpsb
xlat
mov
jp
push
add
cmp
imul
cmovns
clc
inc
insl
bound
inc
out
push
jo
jne
inc
inc
inc
js
fadd
mov
push
dec
orl
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mulb
mov
push
dec
inc
or
in
or
add
ror
rcl
flds
inc
popa
insb
ljmp
cs
fs
test
ss
jbe
divb
aad
arpl
or
inc
test
test
xor
inc
loopne
and
push
lock
aaa
addl
mov
test
nop
mov
push
xorl
sub
dec
mov
je
aaa
roll
fidivrs
inc
push
bound
add
ljmp
mov
and
jae
popa
jne
and
xor
scas
pop
inc
aas
dec
push
mov
inc
adc
xor
mov
es
inc
inc
inc
add
insl
test
adc
ds
imulb
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outsb
jne
pop
insl
inc
add
mov
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
sbb
popf
sbb
push
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
pushf
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
mov
lds
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
jo
push
inc
mov
push
pop
push
and
push
loopne
insb
jns
das
insb
jmp
loopne
and
xor
test
test
aad
nop
adc
insb
adc
or
bound
sub
addr16
test
push
divl
mov
adc
xor
popf
xor
mov
insb
sbbb
sub
imull
adc
add
lods
fwait
js
idiv
fcom
mov
shrl
scas
imul
hlt
push
mulb
push
pop
add
jns
or
sub
inc
sub
arpl
inc
adc
movsb
fidivs
inc
aaa
adc
nop
sbb
cmp
fcoms
cs
push
fwait
cmp
outsb
cwtl
jb
repnz
adc
orb
add
adc
orb
dec
xorb
sub
outsb
insl
loopne
adc
inc
dec
pop
nop
movaps
dec
xchg
mov
nop
fimuls
pop
mov
mov
insb
addb
add
add
sbb
je
loopne
add
jne
mov
inc
dec
push
and
cs
sbb
mov
lods
loop
popa
incl
lea
mov
lret
mov
out
ud0
jmp
repnz
in
push
pusha
ljmp
lret
jo
mov
cli
push
cld
push
imul
add
inc
es
add
dec
in
imul
and
add
sbb
insb
daa
int
sub
adc
adc
add
arpl
add
mov
cmp
sbb
add
js
xor
xor
push
test
stos
and
sahf
mov
mov
inc
lcall
push
loop
fildl
add
pop
add
addl
and
mov
add
les
lods
add
rcrl
jb,pn
mulb
shlb
movsb
lret
mov
dec
mov
fs
dec
or
rcrb
rol
xlat
out
add
sahf
or
sub
test
push
jo
iret
repz
sbbb
inc
icebp
add
sti
xchg
xor
xchg
dec
pushf
insl
test
mov
mov
jmp
xor
or
rorb
jno
sbb
ljmp
or
icebp
sub
or
add
pop
jle
mov
dec
sbb
cmp
ljmp
add
jbe
and
pop
movsl
mov
loopne
cmpsb
cmp
jno
int3
fucomi
gs
add
or
fisubs
jne
jno
dec
out
jmp
mov
mov
mov
shll
or
call
sbb
sbb
rcll
loope
add
nop
scas
mov
and
push
pop
addr16
hlt
mov
and
lds
ds
bound
les
add
sbb
or
lret
or
hlt
test
out
sbb
pop
out
mov
sbb
out
mov
mov
sbb
push
movzbl
or
pop
mov
mov
nop
fadds
fidivl
lods
call
imul
mov
mov
cmp
jbe
mov
pop
je
popa
push
out
xchg
mov
push
sub
pop
mov
pushf
inc
nop
test
add
inc
sub
push
cs
mov
dec
pop
push
adcb
loopne
jbe
lea
inc
call
and
loopne
call
sbbb
push
add
outsb
and
jb
jp
mov
clc
pushf
and
cmpsl
pop
mov
aad
or
out
insl
xor
push
inc
imul
add
adc
xchg
int3
inc
pop
rclb
pusha
imul
hlt
and
lds
ret
mov
dec
and
mov
sub
sub
inc
adc
insl
sbb
loopne
or
mov
movsl
add
movsl
fisubrs
xchg
mov
sar
xor
data16
imulb
fs
push
add
pop
enter
xchg
sub
push
push
fwait
push
pushf
out
mov
or
mov
leave
push
xchg
mov
mov
fmull
pop
add
jmp
dec
or
push
mov
sub
test
cmpsl
das
pusha
clc
xor
test
je
sahf
loopne
movsb
sbb
push
ret
sub
dec
pop
pop
and
sbb
pop
cltd
test
sti
lea
mov
test
jo
pop
cmpsb
aam
push
mov
aas
mov
cmp
mov
push
jecxz
call
pop
inc
test
movb
mov
in
dec
adc
add
push
mov
sub
insl
aam
lea
fs
mov
gs
loope
sub
add
pop
push
or
in
orl
mov
in
add
and
or
clc
orb
je
xorb
repnz
mov
xlat
hlt
or
mov
jp
sbb
cmpsl
sbb
shll
inc
dec
xor
dec
jge
in
push
int3
out
add
jae
aas
adc
popf
xlat
jno
push
dec
and
jmp
loopne
ljmp
and
push
imul
divl
push
inc
push
push
insb
faddl
xor
jo
sub
fildl
adc
lahf
push
mov
movsl
nop
mov
pop
addl
sbb
lds
insb
fcoml
xor
andb
or
outsl
add
es
cltd
inc
fcompl
or
lea
inc
es
jp
push
loopne
push
jge
call
mov
jp
push
or
pusha
jl
add
call
fiaddl
frstor
push
gs
mov
addr16
xchg
sbb
test
ja
in
adc
add
addl
js
cmp
int
sbbl
lret
xchg
pop
jl
or
std
imul
cld
and
xchg
je
mov
add
mov
jb
mov
call
add
repz
xchg
and
sbb
sti
scas
xchg
or
and
clts
jae
jp
xchg
adc
adc
push
gs
sub
enter
or
push
pop
clc
or
inc
inc
cmp
cmc
loope
call
call
aam
or
call
mov
push
pop
jne
xchg
lea
xor
mov
ljmp
mov
nop
cmpsl
adc
out
hlt
jno
xchg
jmp
fs
push
mov
inc
lock
push
dec
call
pop
sbb
call
shrb
sbb
or
ds
ss
ja
pop
mov
xchg
xchg
xchg
sbb
icebp
ja
sbb
push
inc
into
pop
in
xorb
dec
dec
rorl
loopne
add
adcl
add
mov
xchg
mov
shrb
sbb
sbb
mov
cmp
adc
and
mov
dec
jbe
in
shl
or
je
xchg
hlt
ficoml
cmpsb
xlat
pusha
cmpsb
rolb
xor
mov
sbb
rorb
lea
adc
xchg
mov
pop
testl
or
mov
iret
jae
push
push
jecxz
ret
aam
mov
cltd
jo
aad
testl
rorl
sbb
fstps
aas
insl
jbe
xchg
rorb
pop
push
negb
push
pop
lahf
ret
lods
mov
movsl
gs
pop
test
mov
sub
arpl
subl
push
hlt
push
fistl
xchg
push
into
xor
dec
or
push
adc
pop
loop
jo
mov
mov
jmp
pop
ss
push
adc
cmp
jne
and
lods
xchg
ds
add
push
mov
sbb
and
jne
lock
in
xchg
sbb
push
sbb
je
add
sbb
sbb
loop
fsubs
push
inc
sarb
fistl
push
push
push
xchg
adcb
lock
xchg
mov
sbb
mov
movsl
sbb
pusha
push
int3
call
push
push
cmp
add
and
jp
je
cmp
jmp
addr16
jb
sti
or
xchg
pop
push
orl
aaa
insb
sbb
jb
fstl
out
cmp
xor
test
idivl
ds
xlat
rolb
addr16
xchg
loope
cmp
test
jne
add
out
lea
jno
rol
adc
in
pop
cmp
sub
mov
lea
popa
sub
call
mov
add
sub
daa
rclb
rorl
add
shll
xchg
add
out
add
dec
out
repnz
lea
stc
xlat
call
jb
hlt
fdivrp
xor
pushf
ss
test
pop
nop
mov
sbb
insl
sub
xchg
xor
mov
mov
jecxz
pop
mov
pop
psubsw
push
sub
ds
xor
shll
inc
call
jnp
call
int3
or
cmpsl
xor
or
or
sub
add
mov
push
jle
xchg
les
adc
pop
mov
pop
jb
dec
es
mov
push
mov
enter
sub
or
mov
rep
mov
cmp
adc
std
sub
movsb
push
dec
dec
out
mov
cmc
dec
shll
mov
jbe
jle
rcll
and
and
adc
leave
sarb
mov
cmp
jne
popf
xchg
hlt
sbb
pop
lretw
dec
jno
cmpsl
lods
xchg
rep
push
pop
lahf
xchg
pop
pop
mov
inc
aas
pushf
shlb
shl
xchg
hlt
mov
inc
push
add
sbb
sbb
ret
xchg
dec
je
ljmp
ljmp
mov
popa
mov
dec
add
and
fistpll
je
mov
add
scas
sbb
les
sahf
pop
fistpl
or
enter
ljmp
push
xor
mov
movsb
repnz
dec
mov
cwtl
adc
xchg
aad
stos
sahf
pushf
data16
imul
ljmp
dec
jnp
fiaddl
mov
gs
in
lret
push
loopne
or
ljmp
sub
decl
js
mov
dec
dec
popa
mov
std
sub
pop
ficoms
or
insl
movsl
lods
dec
add
push
or
xchg
scas
dec
adc
mov
cwtl
push
or
ss
sub
push
jae
jb
loopne
and
cmp
jle
xor
pop
jmp
adc
ljmp
push
mov
sbb
gs
cmp
pop
fldenv
in
in
push
add
pop
push
and
pop
jb
mov
inc
pop
and
and
pop
dec
sub
push
mov
divl
pop
xchg
loope
and
cmp
jo
dec
in
push
sub
in
in
shrl
pop
mov
or
xor
test
push
insb
cmp
pop
ret
mov
sub
mov
pushf
and
in
xchg
lods
mov
rcr
in
mov
push
adc
mov
pop
mov
inc
add
stos
bnd
inc
pop
mov
les
mov
adc
jmp
in
mov
jne
je
in
pop
sahf
sbb
in
in
add
ret
fwait
testl
icebp
movsl
add
sub
or
pusha
push
mov
ret
imul
es
cmpsl
adc
test
fistpll
push
fists
ja
mov
pop
test
mov
mov
cmp
lods
push
xor
jb
cmp
fidivrs
push
jbe
xor
sbb
push
cmp
rolb
mov
ficompl
xor
xor
xchg
cmpsb
adc
jmp
sub
push
mov
ljmp
inc
enter
cmp
data16
mov
fldl
les
adc
test
cmp
mov
lods
dec
xlat
push
push
mov
jecxz
repz
sub
ret
lea
call
add
les
xor
dec
adc
jbe
lods
ret
and
and
aas
jle
cmp
and
add
jne
icebp
adc
push
cmp
lods
adc
pop
jb
jb
add
add
sbb
xchg
pusha
inc
inc
sahf
in
adc
fdivrs
pop
negl
scas
jns
or
add
sub
ds
or
add
mov
mov
jne
push
add
add
out
enter
add
and
clc
dec
xor
or
dec
rolb
xorl
sbb
or
mov
jge
mov
inc
and
dec
in
inc
add
inc
dec
pop
mull
js
and
je
or
or
je
mov
push
test
cltd
or
pop
jmp
loopne
outsb
test
and
or
inc
inc
dec
sub
xor
xchg
push
sbb
xor
lods
sub
or
mov
imul
call
stos
popa
adc
xor
sbb
lods
jbe
dec
push
cld
icebp
movsb
or
scas
cmc
int
inc
popf
rorl
dec
sbbl
add
cmp
and
or
mov
push
cltd
lock
and
mov
xor
inc
pop
mov
mov
add
scas
jne
xor
push
nop
push
add
popa
imul
insb
mov
popf
mov
mov
clc
mov
cmp
jne
push
roll
lea
fwait
jne
cli
and
inc
mov
rorb
adc
pusha
test
hlt
repnz
ror
adc
dec
inc
inc
inc
ss
jbe
add
mov
je
bound
jnp
jecxz
adc
mov
std
xlat
or
sbb
out
push
xor
add
sbb
cli
sbb
inc
shll
push
xor
cmp
call
sub
dec
shll
aas
jmp
mov
test
xor
xchg
inc
fdivp
inc
adc
in
andl
adc
pop
push
gs
sub
test
mov
adc
std
adc
std
add
push
push
jl,pt
leave
adc
cmp
dec
add
pop
fisttpll
ja
cmp
bound
sarb
mov
add
cmp
mov
enter
and
jne
inc
outsb
rcl
jl
mov
movsl
out
add
sarb
adc
mov
test
mov
or
pop
add
int
sub
out
mov
add
add
orb
ffree
dec
cmp
push
xor
ss
lods
mov
roll
xchg
int3
and
in
loopne
or
sbb
sub
inc
push
push
pop
add
jl
adc
cmp
adc
cmp
jne
sub
xor
hlt
popf
jnp
xchg
mov
pop
adc
xor
cld
fcmovnu
xchg
cwtl
inc
jecxz
push
mov
in
int
push
push
call
pop
jge
push
es
sub
inc
and
test
xor
sbb
sbb
xchg
rorb
xor
ret
push
sbb
sub
or
enter
outsl
jne
or
in
std
jmp
or
pushl
add
addb
in
pop
mov
in
or
or
xor
sbb
cmp
or
sarb
mov
pop
sbb
pop
rolb
ljmp
mov
shll
mov
push
xor
or
sahf
add
push
pop
add
fdivs
adc
and
push
dec
mov
fidivs
sbb
pop
repnz
add
mov
sbb
cmp
jl
pop
jne
mov
jmp
or
shll
clc
or
push
or
and
es
or
js
add
lahf
dec
out
mov
pusha
push
xor
dec
xchg
loope
sub
push
popf
cmp
and
adcl
mov
sbb
addb
add
jne
in
call
out
pop
dec
fst
into
loope
xchg
ljmp
sbb
push
call
incl
mov
cmp
add
nop
add
call
nop
imul
cmpsl
sbb
mov
fst
mov
mov
hlt
push
push
mov
lea
inc
fs
adc
xchg
stos
fistl
jnp
aaa
push
fucomip
cmp
je
cmp
jbe
pop
xor
mov
xchg
jne
adc
sub
insb
push
jbe
and
push
and
std
enter
pop
jbe
or
push
jnp
sbb
cmp
testl
push
push
mov
cli
adc
jo
fadd
jo
jo
and
loope
ret
test
inc
jmp
pop
je
imul
inc
scas
push
lea
add
xchg
test
mov
and
clc
mov
mov
aas
or
aaa
xor
and
ja
push
enter
jmp
push
call
cmp
mov
call
cmpb
cltd
adc
pop
mov
shll
into
call
or
sbb
sbb
adc
sub
adc
add
cs
stos
loopne
sti
push
or
or
loope
or
pop
dec
jle
test
cmpsb
int3
daa
inc
or
push
sub
mov
dec
out
test
js
cmp
cmp
pop
push
lea
mov
cs
je
jl
les
or
into
xchg
aam
mov
data16
push
dec
sar
push
push
cmpsb
aam
test
fstpt
mov
fsubrl
call
fwait
push
shll
movsl
dec
mov
inc
mov
shlb
mov
scas
aaa
in
lcall
js
push
push
jno
adc
pusha
jecxz
pop
in
add
push
or
push
push
sub
sub
pop
mov
push
xchg
or
sub
imul
jnp
push
mulb
mov
jmp
push
ficoms
pop
mov
ja
mov
cli
mov
and
ja
das
arpl
inc
ja
addps
sub
lock
dec
push
hlt
fnstenv
mov
adc
jne
clc
and
cmp
scas
add
or
je
mov
sbb
std
mov
and
adc
mov
pop
adc
sub
push
sub
or
sbb
dec
push
into
xor
outsb
dec
xor
mov
add
enter
mov
fstl
call
imul
push
push
imul
or
sbb
fdivs
addr16
sbb
mov
rcll
sbb
sbb
sbb
jno
jne
into
cmp
dec
or
jecxz
sub
push
cmp
jne
push
scas
mov
push
pop
and
and
je
int3
cmp
xchg
dec
decb
es
jns
outsl
xorl
ret
adcl
adcl
jae
jecxz
inc
push
sarl
jo
mov
call
rorb
dec
and
ljmp
pop
cld
push
fmull
jne
setb
push
sar
inc
xor
jmp
pop
sbb
and
xor
sub
jmp
scas
fiadds
xchg
push
dec
jl
js
negb
icebp
and
dec
sub
xabort
scas
dec
xor
fxtract
jmp
clc
xchg
add
pop
xorb
movsb
inc
pop
ret
mov
cmp
popa
inc
and
push
xchg
add
xchg
movsl
mov
or
pop
xchg
fimuls
xor
lcall
jne
add
neg
mov
repnz
in
movsb
jmp
pop
sub
lret
sbb
push
popf
cmp
dec
or
dec
xor
jge
call
call
cmp
add
icebp
movsl
adc
cmpl
nop
mov
or
pop
bound
call
push
xchg
arpl
scas
add
mov
sbb
xor
insb
sbb
je
repnz
or
mov
cmp
in
mov
pushf
or
cmp
test
ret
ss
test
out
inc
and
adc
inc
mov
mov
push
mov
or
add
add
lock
push
dec
lea
or
pop
mov
orb
xor
mov
icebp
mov
cwtl
inc
jl
and
les
inc
xchg
nop
push
decl
or
decl
dec
jne
movzbl
add
fwait
mov
aam
nop
insl
mov
add
jbe
jge
xchg
stos
incl
nop
adc
or
sbb
xchg
movsb
xchg
shr
mov
pop
dec
mov
or
outsb
mov
mov
push
cli
sub
add
cmp
sbb
and
ja
inc
sti
sti
stos
mov
lea
inc
xor
inc
pop
rol
dec
dec
and
popa
mov
shlb
out
add
add
in
xchg
aam
movsb
test
imul
and
and
loop
jnp
sub
dec
sub
push
sbb
call
inc
push
push
call
xchg
push
dec
cmp
dec
inc
sbb
ja
movb
xchg
xchg
stos
inc
je
clc
cmp
dec
mov
push
rclb
aas
dec
mov
mov
dec
inc
mov
enter
sub
fcmovb
or
aas
mov
fdivl
das
repnz
xchg
adc
pop
inc
arpl
mov
or
or
inc
inc
fistpl
cli
mov
cwtl
ret
lea
out
mov
mov
push
mov
insl
arpl
and
adc
pop
mov
mov
shlb
insb
inc
mov
xor
and
push
xorb
cmovns
je
loopne
add
test
jecxz
insl
jecxz
mov
xchg
pop
pop
mov
add
insl
jecxz
mov
mov
or
and
mov
cmp
adc
dec
cmp
rorb
movsb
push
outsl
mov
mov
pusha
inc
cmp
pop
cmpsb
mov
xor
dec
cmpsl
sahf
icebp
sbb
or
or
inc
aas
push
out
call
dec
ds
call
xorl
jmp
cmpsl
jecxz
cmp
dec
aas
fwait
out
pop
aam
inc
adc
cmp
call
mov
call
int3
pop
mov
xchg
mov
mov
pop
leave
imul
mov
das
jle
decl
stos
sti
popa
mov
or
pop
psubsb
stos
jno
call
clc
scas
pop
jmp
dec
arpl
data16
aad
cld
xchg
pushl
cmp
jmp
shrb
xchg
sbb
or
push
xchg
rcr
xchg
addr16
aam
enter
pop
push
into
cmp
dec
jae
sub
fimull
and
insl
jmp
sub
inc
jmp
je
sbb
and
push
shll
push
mov
mov
mov
sbb
or
adc
leave
test
pop
pushf
or
lock
mov
or
or
pop
mov
push
pushf
mov
mov
test
and
arpl
mov
incb
mov
stos
shll
dec
cmpsb
add
movsl
or
cld
aad
es
add
ljmp
sarl
je
jmp
adc
jmp
push
xchg
imul
add
cs
mov
iret
pop
fadd
jmp
or
and
mov
ficomps
cltd
and
adc
push
inc
and
js
shrb
int3
pop
outsl
push
push
xor
jbe
and
imul
xor
push
push
push
sbb
rcll
dec
fistpl
scas
or
push
clc
icebp
enter
outsl
pop
aaa
or
pop
ret
shr
aad
cmp
movsl
adc
add
add
dec
addr16
inc
adc
addr16
and
add
push
inc
inc
ja
push
mov
push
xchg
pop
shlb
push
mov
je
loopne
addr16
aaa
and
adc
pop
addr16
inc
inc
cs
addr16
mov
test
sub
sub
mov
test
xchg
nop
popf
addr16
addr16
into
imull
jmp
ret
push
inc
test
inc
or
push
inc
mov
inc
fs
mov
cmp
pusha
nop
push
in
nop
je
mov
push
les
sbb
rclb
mov
or
push
sub
movsb
repz
sbb
or
lsl
jns
cmp
push
push
push
sbb
call
inc
pushf
adc
daa
sbb
lock
daa
or
nop
add
and
dec
and
dec
outsb
add
inc
popa
inc
mov
or
iret
repz
ror
mov
inc
imul
or
push
adc
popa
dec
out
inc
or
add
add
call
outsb
adc
inc
xchg
lock
or
leave
adc
mov
sbb
lahf
insb
and
sar
pushf
push
pop
jmp
outsb
or
xor
xor
xor
sub
cs
cmc
inc
or
lahf
ret
lea
inc
xor
push
pop
add
and
add
add
or
mov
add
in
sahf
divl
je
xchg
add
mov
add
cmp
push
jb
push
gs
pop
xchg
out
addl
sub
or
or
and
add
or
shll
fisttpll
or
pop
lcall
or
inc
scas
in
or
or
in
je
push
or
sbb
lods
xor
xor
adc
pop
adc
or
adc
jns
adc
int
das
nop
xchg
push
adc
ja
adc
xchg
adc
xchg
sub
sbb
in
sahf
push
push
inc
pop
rcrb
pop
and
sbb
and
sti
mov
xchg
cmp
fcompl
sbb
jb
mov
dec
in
lcall
sbb
sbb
jns
jo
xor
cmp
xchg
cmp
pop
push
push
add
xchg
inc
negb
pop
ss
add
sub
mov
mov
movl
xchg
cmpb
jmp
cwtl
ss
xchg
push
in
push
in
imul
cmp
rol
adc
in
jns
in
in
out
sub
jns
mov
imul
call
and
movhps
push
repnz
mov
cmp
cmp
cmp
push
jmp
xchg
mov
push
aad
imul
xchg
in
fsubp
aad
in
cmp
mov
mov
xchg
out
int
add
or
je
lock
dec
icebp
cmp
mov
das
jnp
inc
sahf
xchg
stos
or
test
hlt
hlt
imul
pop
hlt
xchg
std
cmc
cmc
cmp
cmpsl
div
pop
enter
negl
gs
clc
clc
clc
or
aas
stc
stc
and
xchg
cmp
cli
cli
add
iret
sti
sti
fdivrp
cld
mov
je
cld
push
push
nop
shlb
out
leave
jnp
std
xor
sbb
sub
fsts
and
and
jmp
ljmp
shll
xchg
or
jb
inc
stos
mov
or
jecxz
jecxz
in
xor
xchg
xor
ficoml
dec
push
cmpl
cmpsb
loopne
adc
inc
or
out
lea
xchg
scas
call
pop
sti
adc
dec
adc
push
sbb
setb
push
cltd
or
jmp
and
mov
lcall
jns
xor
cltd
and
cli
or
jae
repz
sbb
sbbb
cli
stc
loopne
repnz
stc
imul
stc
div
divl
xchg
xchg
clc
cltd
sub
nop
mov
rclb
sbb
mov
xchg
or
cmp
mov
in
jmp
mov
jb
test
out
test
push
pop
aad
xabort
jmp
mov
lcall
jns
xor
pushf
and
and
aad
imul
xchg
in
aad
fdiv
out
mov
sbbl
jb
imul
ljmp
push
jmp
testl
testl
mov
into
mul
sub
nop
mov
movsb
mov
repnz
and
repnz
inc
repz
setb
sub
or
lcall
div
mov
add
mov
clc
clc
xor
pop
cmp
push
pop
pop
cmc
cli
cli
inc
mov
mov
pop
repnz
cmc
cli
hlt
sub
inc
repz
pop
lock
push
jo
adc
mov
adc
sti
push
movsl
jmp
loope
repnz
loop
pop
hlt
shll
or
cmp
hlt
in
add
repz
leave
and
repz
xchg
cmpsb
jb
or
and
repz
inc
xlat
dec
repz
out
inc
or
in
xor
in
xlat
repnz
repnz
cmp
test
cmp
icebp
mov
icebp
das
xchg
pop
jns
sbb
adc
repnz
repnz
dec
xor
mov
icebp
test
cmp
leave
sub
int
jne
stc
mov
dec
icebp
xor
jb
icebp
or
out
lock
mov
cmp
scas
lock
jp
jmp
or
jo
out
push
sub
ffreep
push
inc
insb
scas
div
push
loope
inc
cmp
cmp
inc
add
mov
adc
mov
jne
ret
mov
jb
jne
stc
xor
dec
icebp
dec
add
movsb
xchg
inc
movb
mull
and
call
jmp
dec
dec
filds
or
dec
push
nop
push
jns
adc
int
imul
add
insb
adcl
push
cmpsl
fldcw
push
repz
mov
jns
pop
insb
sbb
push
push
aad
in
sahf
negl
push
dec
outsb
or
inc
cmp
faddp
mov
inc
push
xor
pushf
dec
mov
xchg
xor
and
lea
inc
cmp
bound
lods
shll
lret
push
ret
ficompl
pop
sub
push
pop
loope
and
adc
lods
jle
loope
movsb
inc
jmp
shrl
out
fists
push
orb
push
aaa
xor
sbb
movb
sub
push
xor
ret
cmp
inc
jecxz
sbb
sub
xor
push
or
ficomps
fwait
mov
pusha
mov
daa
pushf
pop
call
test
hlt
ret
xchg
insl
inc
xchg
in
jmp
mov
pop
add
sub
push
push
fsubl
call
nop
adc
dec
sbb
push
lret
adc
adc
adc
xchg
push
or
push
divb
xchg
lret
mov
pop
xchg
sbb
movsl
mov
cli
adc
outsb
dec
push
js
loopne
cmpsb
das
pop
xor
stos
adc
push
ss
cmp
sbb
adc
jp
jmp
ret
mov
daa
sub
jmp
movsl
sbbl
icebp
pusha
push
xchg
add
cwtl
add
shr
mov
dec
ret
pop
and
mov
add
inc
add
add
es
xchg
pop
xchg
push
and
sub
js
mov
adc
sbb
sbb
and
pop
sub
mov
push
or
adc
add
mov
adc
or
inc
adc
mov
xor
inc
dec
pop
inc
hlt
and
inc
pusha
push
imul
add
or
sbb
mov
rcll
rolb
es
mov
sysenter
je
lret
cmp
shlb
xor
stos
push
lods
clc
add
or
pop
push
push
movsl
xchg
xor
aaa
sarb
pop
sbb
sbb
or
iret
dec
add
adc
popa
add
cmp
sbb
or
jno
or
add
mov
repnz
add
xor
rorb
sbb
or
jb
xchg
push
inc
cmp
insb
xchg
sub
int
pop
xchg
xchg
mov
jmp
xorl
sbb
sbb
mov
inc
xor
jmp
push
sahf
push
scas
sbb
mov
inc
adc
pusha
mov
cmp
mov
test
into
outsb
mov
jmp
nop
mov
dec
out
mov
inc
jb
or
cmp
jb
jb
sub
sbb
push
loop
push
xor
and
push
aam
dec
mov
xor
xchg
add
mov
add
pop
mov
rolb
rclb
mov
pop
imul
xor
shl
mov
andb
rcll
dec
xchg
dec
xchg
cmc
add
aam
and
imul
insb
pop
fs
and
aam
mov
cmp
nop
inc
mov
stc
in
pop
rorl
mov
dec
addr16
inc
jp
aam
ds
sahf
les
mov
cmp
inc
inc
push
xor
cmp
mov
adc
or
loopne
push
xchg
sbb
shll
xor
mov
add
add
ljmp
xor
insl
jmp
cmc
xor
jmp
pop
and
adc
xor
imul
xorb
mov
rclb
enter
lea
xor
mov
rorb
or
or
shlb
jb
movsl
leave
inc
sbb
mov
xor
sub
add
add
sub
testb
ja
mov
ss
jnp
mov
iret
dec
cmp
add
push
bound
xchg
call
lock
popa
aas
xor
add
xor
xlat
movsl
sub
add
inc
cltd
ja
adc
xchg
cltd
add
inc
les
cltd
pop
test
cs
mov
sbb
and
ror
cltd
add
dec
movsl
mov
xchg
dec
mov
mov
adc
cltd
scas
xchg
jo
rclb
imul
jmp
xchg
and
push
cwtl
cs
ficoml
ret
or
mov
loop
pushf
xchg
je
adc
xchg
lods
mov
sahf
adc
loope
xchg
test
nop
sbb
push
xor
cmp
test
add
cmpsl
and
push
lds
test
mov
or
lcall
cmp
js
je
loopne
mov
mov
sbb
lahf
call
scas
pop
test
test
test
add
cmp
jl
pmaxub
test
enter
in
loope
push
roll
stos
je
test
xor
mov
jne
test
mov
inc
inc
test
into
pop
test
cmp
pop
test
fs
test
mov
cwtl
addl
fs
xor
jbe
mov
loopne
lds
test
out
cli
enter
shrl
bound
es
mov
nop
xchg
cmpsb
push
test
mov
mov
push
add
inc
mov
cmpsl
adc
shrb
and
hlt
inc
test
mov
shlb
subl
stos
inc
aaa
roll
mov
shlb
sub
cmp
icebp
mov
push
add
addl
je
test
mov
or
dec
aaa
xor
sub
rolb
mov
xor
mov
fidivl
out
imul
and
xorb
daa
add
imul
test
ret
imul
xchg
pop
test
daa
rcl
cmpl
mov
addl
push
test
mov
adc
movsb
subb
add
ljmp
popa
cwtl
pop
sbbb
into
mov
test
inc
inc
inc
sbb
mov
addl
test
fistpl
mov
adc
mov
push
test
jnp
test
cmpsl
jns
ffree
inc
inc
test
add
aaa
or
pop
or
aad
out
add
daa
mov
or
loope
mov
shrb
test
xor
test
dec
test
or
int
jl
push
mov
ss
xor
jbe
add
push
stos
mov
pop
and
inc
aaa
rcl
test
rcl
imul
dec
stos
cmp
mov
inc
jo
push
xor
test
or
pop
xlat
sbb
aad
orl
mov
and
inc
adc
mov
cld
add
sti
lret
outsb
sbb
add
test
and
lret
sub
test
loopne
dec
cmp
shlb
pop
jb
or
test
sbb
or
mov
xlat
loope
add
out
nop
mov
inc
mov
and
je
cs
sbb
add
stos
test
inc
or
test
shrb
push
pushf
xchg
sbb
repnz
mov
xchg
out
push
test
xchg
xchg
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
js
push
lds
dec
pop
cmp
popf
and
or
adc
lret
call
adc
push
rolb
aaa
popa
jo
lods
mov
loope
cli
cmp
cmp
addl
jno
ds
cli
xchg
icebp
leave
jmp
xor
lea
fistpl
push
les
dec
and
dec
test
mov
mov
repz
mov
in
pop
xchg
jmp
xlat
or
inc
out
push
mov
adc
mov
movb
cmpsb
testb
sub
mov
inc
push
mov
inc
push
in
fbstp
cmp
jbe
xchg
jmp
test
inc
inc
into
test
loopne
jmp
test
jp
push
pusha
xorl
or
addr16
push
rclb
add
inc
dec
inc
pop
nop
imul
pop
adc
push
mov
test
sarb
mov
xchg
loope
inc
jnp
add
pop
stc
xor
xlat
jae
mov
and
les
sbb
or
or
mov
inc
sbb
dec
test
or
pushf
or
sbb
nop
je
cmp
pop
pop
jle
or
push
and
pop
sub
iret
nop
je
test
mov
cmp
dec
test
scas
add
push
test
int
dec
test
pushf
data16
push
jp
push
mov
in
push
and
mov
lret
test
push
sub
sbb
leave
ret
dec
ret
movsl
push
push
out
or
mov
jp
call
dec
icebp
rolb
jl
shlb
aam
in
cli
pop
cmp
lea
mov
iret
add
mov
mov
add
jne
test
lea
dec
rcrl
es
test
inc
inc
iret
add
sbb
dec
add
fwait
or
push
divb
movsb
push
hlt
out
or
xor
into
jmp
subb
xchg
xor
adc
push
lcall
fstps
popa
dec
xor
sub
xchg
loop,pn
push
sbb
jmp
or
cmp
pop
call
xchg
fimuls
call
out
sbb
jmp
and
inc
mov
cmp
push
push
jbe
or
cwtl
push
push
shll
je
sub
int3
popa
dec
push
push
inc
leave
dec
cmp
add
mov
push
rcrb
mov
xchg
push
mov
sbb
fcmovnu
jne
xchg
push
inc
sub
add
xchg
or
mov
jo
mov
xchg
nop
push
push
push
xor
add
push
xor
mov
nop
into
loopne
push
sbb
or
ret
nop
or
push
jmp
hlt
lock
cmp
clc
cs
call
movsb
shll
scas
jbe
xchg
lahf
pop
xor
call
sub
mov
cwtl
sbb
dec
xchg
xchg
rorb
xchg
xchg
xorb
and
cltd
push
xchg
inc
pusha
or
je
mov
xchg
add
mov
inc
cs
fnsave
push
xlat
xchg
inc
or
call
pop
adc
add
inc
xchg
adc
sbb
test
add
adcl
mov
mov
xchg
aaa
push
inc
xor
addl
inc
mov
pop
adc
insl
fdivl
cmpsl
outsb
jae
lea
jle
push
cmp
adc
add
call
loop
call
pop
jmp
cmp
je
mov
sub
mov
and
xchg
sbb
lahf
dec
dec
sbb
xor
sbb
imulb
dec
xor
xor
loope
add
mov
imul
sbb
adcl
pusha
addl
pop
gs
jo
sub
push
cmp
sub
pop
inc
sub
repz
mov
and
sub
mov
add
arpl
and
movsl
dec
adc
pop
adc
out
mov
imul
sub
ljmp
and
inc
pop
adc
in
mov
stos
repnz
cs
mov
dec
inc
jg
nop
inc
and
cmp
pop
dec
in
push
ljmp
mov
ret
push
inc
call
pop
rol
add
ss
inc
imul
sbb
inc
rcr
add
xor
dec
inc
mov
test
or
lahf
push
movb
xor
jmp
mov
add
cmp
inc
jmp
dec
jmp
xor
cmp
pop
das
push
inc
inc
adc
mov
or
inc
jmp
inc
inc
mov
je
pop
es
pusha
add
cmpb
pop
add
and
or
mov
mov
cmp
fs
stc
add
adcl
test
push
inc
or
je
sbb
and
movsbl
and
cmp
xchg
pusha
pusha
adc
or
ja
sub
pop
inc
add
xor
out
outsb
test
jmp
add
mov
popa
adc
push
popf
pop
pop
push
adc
ss
iret
mov
test
and
in
mov
enter
sbb
mov
cmp
xor
push
inc
cmpsb
xor
insb
rolb
dec
div
cld
mov
fsubrp
or
xlat
outsb
mov
hlt
push
sbb
inc
shl
test
pop
jb
jne
lods
sarb
lret
fisubrs
testl
push
push
or
inc
jecxz
cltd
test
xlat
dec
popf
cmpsl
add
xchg
shlb
add
enter
jne
cwtl
loopne
push
adc
push
add
ret
push
sar
inc
push
adc
sbb
jl
call
mov
lret
xchg
pop
pop
push
lods
sub
hlt
dec
fistpl
sbb
sbb
inc
fistl
out
cmp
pop
test
mov
xlat
nop
mov
movsb
sbb
dec
sbb
sbb
dec
arpl
bound
xorb
inc
and
pop
add
filds
cmc
add
in
sub
inc
adc
leave
dec
xor
xchg
mov
xchg
ds
inc
cmp
in
push
xchg
nop
orl
dec
xor
out
or
push
xor
sahf
mov
dec
orl
add
and
emms
and
or
xchg
sbb
mov
mov
je
adc
stos
mov
ss
adc
mov
mov
sub
dec
sarb
mov
push
stos
loopne
push
and
movsl
xor
xlat
cmc
fists
cwtl
and
lret
nop
les
sbb
mov
mov
leave
rorb
xor
leave
cmp
xchg
sbb
imul
ja
leave
sbb
xchg
push
or
cmp
leave
xchg
insb
ss
adc
leave
jbe
pop
inc
out
ds
pop
add
push
out
shrl
inc
xor
inc
fs
leave
sbb
xor
and
push
mov
jmp
push
call
fnop
leave
rcrl
out
roll
mov
mov
xor
inc
scas
data16
xorb
sbbb
pop
rcrl
sti
sub
aas
dec
pop
and
inc
mov
cmp
andl
sbb
aas
xchg
or
enter
enter
fimull
nop
lret
lret
and
enter
aad
mov
mov
and
cmpsb
sub
mov
xchg
or
leave
rorb
dec
adc
leave
jns
mov
leave
and
jb
ret
or
fnop
pusha
sub
or
ljmp
fbstp
je
sbb
ljmp
ss
mov
xchg
leave
fs
orl
inc
leave
into
data16
inc
sbb
sbb
push
inc
ss
leave
nop
rol
dec
and
fxch
add
je
leave
inc
ss
sbb
mov
xor
lods
and
dec
mov
push
leave
or
xor
mov
fwait
mov
leave
adc
push
or
jb
inc
fs
leave
push
cmc
imul
fsubr
sahf
inc
test
aam
push
call
push
pushf
imul
and
jbe
out
jne
cmp
insb
push
call
xchg
mov
mov
rcrb
call
adc
lret
outsb
push
sbb
out
cmp
movb
xor
lret
xchg
ret
mov
mov
push
je
push
mov
inc
adc
inc
fst
sub
cwtl
daa
add
and
lea
outsl
je
add
push
sbb
add
and
adc
shl
ds
or
push
push
inc
or
lock
add
inc
mov
push
call
pop
mov
jbe
mov
pop
push
xchg
sbb
adc
or
xchg
sub
es
xor
addl
sbb
xor
sbb
push
mov
mov
xor
mov
push
sbb
mov
or
adc
les
sbb
pop
mov
out
lods
adc
push
int3
sbb
xchg
push
mov
jno
pop
sbb
or
push
jno
push
sbb
int3
push
into
outsb
les
push
mov
scas
push
pop
push
push
stos
loopne
movsl
in
inc
pop
stos
xor
add
pop
adc
addr16
cvtdq2ps
imul
cmp
mov
jmp
and
addl
es
aam
pop
push
add
xchg
pop
fisttps
stos
dec
hlt
push
mov
int3
inc
enter
inc
sub
dec
arpl
xor
add
popa
mov
pop
cmpsl
sarb
callw
mov
adc
mov
testb
adc
dec
mov
inc
idivl
pop
rol
add
lret
sub
and
pop
and
and
jb
call
les
pop
add
rcll
and
xor
jnp
int
lods
push
mov
xor
scas
movsb
ljmp
inc
pop
pop
xor
pop
mov
mov
call
nop
sbb
pop
imul
lcall
nop
inc
jecxz
cmp
inc
fxch
mov
and
sbb
dec
mov
mov
pop
fadds
mov
pop
pushf
pop
adc
adc
mov
ds
sbbb
hlt
pop
mov
mov
pop
adc
cs
xor
adc
pop
ret
les
pop
movsb
xor
and
mov
jb
pop
bound
pop
push
xchg
pop
sub
testb
or
test
mov
or
mov
in
out
add
pop
test
xor
mov
xchg
and
les
sbb
inc
pop
adc
inc
enter
inc
jno
test
pop
inc
jp
mov
lods
jb
bound
pop
mov
pop
ffreep
bound
mov
pop
sub
mov
test
cmp
jbe
pop
pop
rclb
and
add
push
popf
sbb
pushf
or
call
jo
mov
jo
inc
dec
sub
lds
aaa
or
aam
sbbb
adc
test
inc
push
inc
out
mov
lds
sub
or
adc
sbb
sub
push
mov
cmp
pop
mov
pusha
pop
xorl
push
dec
rcll
adc
daa
dec
lret
les
fs
pop
bound
jb
pop
mov
push
mov
mov
aaa
and
xor
mov
mov
mov
insl
pop
bound
aaa
call
mov
scas
sbb
xor
cmpsb
cmp
dec
xor
cmp
cmp
xor
cmp
jecxz
sbb
pop
and
cmp
popa
sub
addb
sbb
xor
movsb
cmp
cmp
inc
idiv
cmp
cmp
xchg
adc
shr
cwtl
cmp
adc
pop
cmp
arpl
ret
shlb
xchg
loope
fnstcw
cmp
or
xchg
in
inc
xor
fiaddl
pop
pushf
sbb
nop
mov
dec
or
call
cmp
add
adc
mov
and
sbb
dec
cs
add
jp
aas
paddusw
push
push
flds
or
fs
and
cmp
cs
add
xchg
lsl
hlt
dec
push
add
cmovo
loopne
push
addps
inc
arpl
add
shlb
mov
inc
inc
psubq
adc
cmc
and
divl
inc
inc
push
sub
inc
add
jp
psubsb
inc
inc
insl
mov
incl
dec
inc
psrld
inc
inc
mov
adc
bound
dec
enter
inc
mov
or
push
or
cmp
call
roll
neg
and
and
add
cld
andl
sbbb
dec
xor
xchg
push
pop
enter
sti
jae
and
imul
dec
inc
sti
sbbb
popa
jle
dec
inc
inc
nop
sti
push
mov
add
imul
rcrb
inc
inc
add
and
xchg
push
sbb
adc
imul
rclb
xchg
sbb
dec
lea
sti
sub
push
subl
repnz
or
xchg
notl
xchg
or
pusha
inc
adc
fcomps
pop
je
mov
imul
push
repnz
popa
pop
in
mov
or
cmp
add
xchg
aaa
lock
or
and
inc
in
dec
inc
notl
cmp
push
aaa
jnp
enter
push
mov
loopne
mov
or
cmpsb
mov
xchg
rcl
aaa
pusha
cmp
push
fcoml
mov
andb
fs
mov
adc
test
das
bound
push
adc
push
bound
call
loope
in
outsl
nop
test
aaa
mov
or
sub
jnp
aaa
push
mov
and
pop
adc
mov
and
hlt
cmp
call
sub
mov
mov
stos
sub
xchg
pusha
test
mov
fldl
je
and
xor
sbb
dec
or
push
or
inc
or
aas
xor
fstl
call
ss
cmc
sbb
call
das
push
jle
sub
add
call
lock
inc
out
xchg
call
call
sub
int
inc
call
mov
dec
call
push
call
jl
call
pusha
call
in
xchg
test
jge
call
je
jl
je
gs
pop
jl
push
imul
adc
xchg
dec
in
cmp
xor
nop
sbb
cwtl
add
jb
pop
sub
movsb
in
stc
mov
xchg
dec
in
ret
les
push
cs
mov
xchg
dec
in
pop
mov
mov
jae
push
push
pop
call
mov
lock
xchg
dec
in
es
sbb
in
mov
add
gs
leave
or
leave
gs
test
adc
lret
sbb
sbb
and
pop
sub
xchg
lret
sub
xor
jb
pop
xor
cmp
sub
push
inc
push
test
dec
cmp
xchg
dec
ja
xor
push
adc
mov
pop
add
jo
push
adcb
push
test
xchg
data16
or
dec
lcall
mov
and
mov
adc
mov
js
adc
xor
jl
sbb
xor
push
and
mov
enter
cli
cmp
int
movsb
inc
test
rorb
jae
push
xor
mov
dec
or
dec
mov
movl
pop
push
inc
push
or
mov
inc
push
inc
and
lock
mov
jnp
je
xchg
mov
lcall
cmpsl
xchg
sub
mov
adc
dec
push
rorl
pop
mov
inc
sub
shl
pop
mov
imul
or
adc
xlat
pop
outsl
test
shlb
inc
cmp
mov
mov
adc
push
add
dec
adcb
lea
push
pop
adcb
lea
inc
lods
mov
pusha
add
jb
bound
lods
push
mov
adc
call
mov
insb
imul
rcrb
mov
add
mov
testb
out
pop
sbb
das
add
inc
push
and
movsl
movsb
inc
shlb
dec
add
cmpb
lcall
ret
push
iret
movsb
add
sub
aaa
push
push
dec
sbb
jno
es
mov
mov
movsl
xchg
or
push
mov
test
mov
and
mov
enter
mov
inc
orl
pop
mov
mov
mov
stc
mov
in
dec
push
mov
push
scas
je
mov
pop
push
or
lcall
inc
mov
es
add
test
fs
mov
xor
divl
or
and
test
sub
mov
sbb
xchg
repnz
xor
fs
mov
push
nop
shlb
push
aaa
dec
mov
mov
arpl
lods
mov
xorl
outsb
andl
aam
flds
fucomp
inc
cmp
daa
sbbl
orl
out
bound
test
xor
gs
mov
pop
adc
jecxz
push
jae
rclb
adc
mov
loop
sub
pop
cmp
mov
pop
cmp
xchg
mov
pop
mov
pop
or
push
sub
lods
or
pop
fwait
dec
das
dec
leave
and
sub
dec
push
cmp
je
mov
jo
mov
call
dec
push
mov
dec
push
xchg
xchg
mov
loopne
pop
inc
xorb
dec
jmp
xchg
xchg
dec
adc
xor
pop
mov
add
sub
xchg
outsb
sub
cmp
dec
jmp
xor
mov
pop
inc
dec
dec
pop
cs
cmpsl
xchg
xchg
fiadds
daa
pop
call
push
jnp
repnz
shlb
pop
jns
xchg
rcrb
pop
push
push
pop
pop
push
pop
cmp
pop
cwtl
xchg
andb
dec
xorl
pop
and
shlb
in
pop
inc
lahf
jo
pop
and
das
sub
lods
fwait
shlb
xor
pushf
test
movsb
or
fldl
rorl
or
and
add
sbb
dec
adc
sbbb
push
test
adc
adc
xchg
out
jno
and
sbb
sbb
inc
mov
lods
xor
inc
movsl
or
dec
js
adc
sti
xchg
jmp
icebp
gs
leave
lods
scas
cwtl
andb
shll
push
ret
imulb
mov
nop
dec
mov
ret
mov
out
or
adc
pusha
push
dec
daa
pop
push
mov
daa
cwtl
push
dec
inc
fucomi
or
daa
bound
add
adc
rorb
arpl
adc
xchg
add
and
and
in
pushl
pop
push
movsb
andl
and
imul
pop
lods
loopne
dec
aaa
inc
xor
xor
xchg
popa
or
sbb
repz
cs
push
xor
out
xor
mov
dec
xchg
jge
jecxz
loop
sbb
mov
addr16
and
or
nop
xchg
negl
mov
jnp
dec
push
mov
lea
lcall
stos
xor
nop
outsb
addb
ret
mov
out
push
mov
push
xchg
push
or
add
pop
pusha
inc
or
pop
add
outsb
mov
cwtl
adc
add
pop
jl
add
xchg
popa
pop
mov
xchg
pop
inc
cmp
pushf
loopne
fs
or
adc
inc
notb
add
add
imul
xor
lods
push
pop
dec
mov
xor
pop
push
pop
mov
add
sub
lock
push
pop
dec
pop
add
jmp
mov
pop
test
push
cld
add
add
sahf
adc
mov
jb
popf
ret
mov
lea
push
mov
dec
push
pop
or
mov
mov
add
or
add
mov
scas
dec
ja
and
inc
and
and
cmp
mov
sbb
rolb
jo
lods
or
add
call
inc
icebp
andb
xor
or
adcl
sub
shrb
inc
mov
into
cwtl
add
jle
pusha
nop
pop
mov
add
out
incb
or
lcall
add
dec
xor
inc
dec
or
inc
sbb
inc
dec
adc
mov
mov
add
rolb
into
push
pop
fcmove
xchg
ret
add
lds
jp
sbb
cmp
adc
scas
dec
inc
aaa
adc
test
add
sti
mov
jno
cmp
sub
cmp
out
add
mov
pop
dec
push
add
add
sbb
inc
aaa
sbbl
sar
nop
sub
nop
mov
addl
mov
add
add
sti
rorb
sbb
sti
mov
or
pop
adc
add
daa
cli
cmp
pop
in
dec
and
adc
sbb
adc
clc
aam
pushl
stc
push
mov
fstl
adc
add
stc
cld
sahf
je
aam
jg
push
mov
and
dec
xchg
outsl
rcll
test
and
sbb
movsb
xchg
rcll
add
pop
roll
rcrb
dec
xor
movsb
inc
and
push
movsl
xor
mov
sbbl
or
mov
cwtl
mov
shll
mov
or
and
mov
cs
or
adc
rcll
push
add
sbb
sub
and
roll
shll
or
roll
or
cmp
sub
shl
sahf
gs
inc
add
or
stos
sahf
sbb
push
gs
dec
push
push
xor
inc
or
hlt
popl
fistpl
jg
or
jg
cwtl
inc
out
mov
jns
or
arpl
in
popf
sbb
mov
out
call
movsb
fs
mov
fdivrs
jnp
popf
out
pop
pop
fstl
ffree
adc
stos
push
js
sub
inc
dec
inc
xchg
bound
hlt
cld
sbb
and
jb
mov
mov
adcb
fistpl
adc
add
mov
aam
sub
movsb
aam
jle
call
push
push
add
mov
sub
movsb
mov
fwait
repz
adc
in
dec
test
stos
xlat
fwait
xlat
sub
loop
jnp
add
mov
dec
out
adc
lea
call
out
adc
adc
jb
insl
adc
nop
ficompl
push
push
push
lcall
movsl
sbb
pop
inc
and
ret
pop
sbbl
jns
xchg
adc
xlat
ret
push
add
test
and
and
or
and
adc
adc
movsb
repz
and
pop
mov
movsb
add
and
lea
addr16
inc
cmp
addr16
push
sbb
push
pop
jb
lret
int
mov
test
dec
mov
shl
add
dec
and
addr16
sub
cmp
jo
and
and
ret
dec
adc
addr16
rorb
jmp
enter
rorb
fcomps
mov
rclb
dec
dec
iret
inc
add
add
cmp
ds
repz
add
or
sbb
out
sahf
out
scas
sahf
mov
out
sahf
bound
sub
or
iret
sarl
call
out
fisttpll
lods
push
mov
out
jns
push
inc
push
push
sub
cmp
sti
sahf
push
nop
movsb
push
push
xchg
jl
out
cmp
cmpb
push
push
pop
dec
cmp
sbb
out
push
repnz
fmulp
mov
test
mov
ret
into
sbb
cmp
cmp
repnz
loop
jns
cmpsl
stc
sbb
sarl
sahf
mov
sbb
repz
mov
out
ds
and
pop
jns
out
data16
nop
sahf
out
sahf
out
mov
fsubrp
js
negl
push
inc
push
sarb
adc
out
jb
jle
sahf
cmp
sbb
rol
loop
clc
adc
mov
imulb
push
cmp
aaa
je
fs
push
mov
sub
daa
pop
mov
mov
mov
lahf
jae
jae
fwait
insl
jbe
push
cwtl
cmpsl
insl
mov
iret
aad
imul
add
xrelease
test
scas
test
shlb
xchg
clc
mov
cmp
ret
add
mov
xchg
push
cmpsb
es
pop
jle
inc
push
push
jge
xor
orl
stos
dec
lcall
pop
jb
pop
aaa
rclb
pop
lock
mov
mov
dec
xchg
es
jb
inc
js
xor
adc
xor
xchg
or
aaa
outsl
lea
or
or
bound
add
xchg
push
out
mov
and
mov
fidivrl
push
mov
loop
or
das
repnz
mov
loope
mov
sub
xor
inc
stos
int3
and
daa
sbbb
das
push
cmpl
imul
bound
jmp
jae
adc
aaa
cs
outsl
and
ficomps
pop
data16
add
mov
das
cmp
mov
aaa
pushf
mov
jg
arpl
ret
or
daa
std
jmp
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
lret
sub
and
jb
inc
and
push
jg
push
sbb
pop
dec
sti
rcrl
and
pop
dec
imul
call
rcrb
pop
inc
jne
outsb
je
test
fistl
pop
inc
js
sti
ss
inc
xor
mov
xor
xor
cmp
sub
inc
inc
xor
xor
xor
jge
sti
scas
push
cmp
inc
stos
xor
ss
mov
mulb
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
adc
mov
aam
lahf
lret
ret
cmp
jne
test
push
jo
or
pop
xchg
xor
pop
push
movsb
ss
xor
or
push
and
cmp
aaa
adc
xor
inc
pop
dec
add
addl
sbbb
push
xchg
shll
inc
push
dec
and
in
mov
std
cmp
ss
pushf
xor
add
adc
or
outsl
mov
dec
add
cltd
loopne
pop
adc
push
pop
fwait
popa
ret
push
dec
hlt
imul
ficoml
pop
push
sub
jae
inc
push
inc
out
adc
repz
out
sub
out
cmp
ds
inc
mov
lods
sahf
add
mov
outsb
lods
and
hlt
scas
or
dec
testl
xchg
add
push
or
das
mov
insb
outsl
xor
imul
movsb
fimuls
movsb
inc
je
push
push
lods
mov
and
sbb
sbb
jo
rcll
mov
popf
mov
fldt
inc
imul
imul
arpl
insb
mov
xchg
js
les
data16
ret
or
adc
pop
push
inc
adc
inc
and
xor
or
pop
insb
xchg
pop
push
gs
push
pop
add
mov
lock
jg
jp
sbb
or
inc
out
push
and
outsb
ret
daa
sub
jnp
jg
nop
mov
imul
imul
js
daa
jp
mov
scas
scas
je
dec
fs
mov
push
imul
push
jo
or
pop
sbb
and
test
push
dec
out
sbb
inc
test
dec
aas
pop
fbld
pop
arpl
inc
cs
push
push
mov
cwtl
xlat
push
add
ja
cmp
je
outsb
outsl
jno
inc
or
popa
imul
mov
xor
pusha
mov
outsb
dec
sarb
adc
or
orb
pop
push
add
data16
sub
sub
mov
lahf
jno
movb
or
mov
inc
jg
mov
jo
and
xchg
pushf
add
sbb
push
pusha
and
ret
or
inc
out
add
popa
shrl
xlat
push
loope
adc
out
add
cmp
inc
adc
orb
out
jns
iret
or
add
mov
das
scas
xchg
cmpb
das
xchg
adc
xor
out
push
sbb
sbb
sbb
iret
repz
sbb
std
sbb
pop
repz
push
das
push
pop
nop
cld
and
push
and
jns
iret
jae
cld
stc
jp
push
cld
fdivr
pusha
xor
repz
stos
stos
sbb
lcall
test
stos
lahf
mov
and
cwtl
xor
aad
xor
test
dec
sbbb
xchg
ds
cmp
ret
scas
cwtl
xor
es
add
repz
push
adc
push
cld
or
in
iret
repz
int3
les
movsb
xor
jl
out
nop
mov
mov
jl
insb
push
fs
pop
mov
cmp
repz
dec
inc
inc
cmp
out
sahf
push
xor
sub
and
sahf
out
and
adc
repz
out
or
cld
or
repz
clc
hlt
call
iret
repz
movsb
nop
jo
jns
iret
repz
lock
int3
mov
jns
out
insb
inc
sub
iret
sarl
or
push
fcom
les
repz
cwtl
js
sub
out
add
add
or
out
sbb
add
call
iret
repz
mov
loop
iret
inc
jmp
mov
scas
pop
adc
inc
cmp
test
sahf
test
addl
inc
xor
out
xor
sub
inc
mov
out
mov
pop
push
inc
dec
cmp
outsl
and
push
inc
adc
add
xchg
pop
add
adcb
add
jecxz
mov
sub
adc
mov
mov
leave
and
inc
pop
fimull
or
scas
dec
sbb
cmpsb
andb
push
ja
pop
int3
dec
adc
jmp
bound
mov
arpl
shrl
lret
data16
mov
addb
inc
insb
mov
xchg
xchg
call
sbb
add
pop
js
shrb
icebp
or
mov
pushf
andb
rolb
ret
jns
mov
filds
andb
add
incl
movl
fwait
out
inc
cmp
cs
lock
jg
pop
jne
pop
stc
ret
push
shlb
dec
add
jne
imul
test
cld
and
mov
arpl
imul
pop
jb
pop
push
gs
or
jo,pn
bound
inc
mov
cmp
xor
neg
add
push
push
insb
das
stos
push
adc
inc
das
scas
in
outsl
jl
add
jmp
cwtl
lahf
add
das
pop
insb
adcb
cmp
shrb
ds
inc
jo
xor
shlb
add
add
repnz
mov
insb
pop
sarb
jg
or
adc
push
cmp
mov
ss
jnp
adc
sete
int3
data16
stc
mov
aas
add
cwtl
pop
and
xlat
jns
mov
xchg
jecxz
rcr
sbb
jbe
sti
cltd
ss
lcall
aam
pushf
adc
push
test
adc
aaa
push
movsb
mov
or
push
popf
sbb
fidivrl
push
aas
xchg
adc
call
enter
xor
les
aaa
mov
jo
popf
dec
aam
aas
xrstors
enter
inc
add
mov
outsl
pinsrw
xchg
iret
fcmovnbe
mov
movsl
mov
sarl
jbe
in
sets
push
aam
insb
adc
fs
pop
loopne
dec
mov
mov
sahf
loopne
fidivs
int
daa
lock
enter
ss
dec
mov
push
xor
xor
sahf
push
mov
adc
xchg
addb
movsb
cmp
arpl
sbb
daa
ltr
adc
lcall
scas
pop
push
and
gs
dec
dec
add
push
push
add
decb
push
outsl
ja
xor
jle
ret
jb
bound
sub
pusha
pop
leave
mov
mov
pop
daa
movsb
and
and
add
fidivrs
or
lods
inc
stc
mov
fucomip
ficomps
mov
dec
mov
push
add
orb
mov
mov
jae
arpl
add
outsb
scas
mov
push
add
add
or
jnp
xchg
add
push
mov
filds
push
popa
jae
push
jae
push
sub
nop
push
adc
jae
rcrb
push
push
inc
shll
mov
push
jnp
lret
out
adc
cmp
xchg
xchg
loopne
push
inc
sbb
add
roll
add
xor
dec
mov
ret
adc
mov
pop
das
push
test
or
cmp
pop
xchg
push
jo
jb
jns
imul
jge
test
movsb
sbb
imul
push
push
lods
loope
mov
push
sbb
sub
inc
scas
imulb
push
sbb
in
loope
adc
jge
pop
push
inc
pusha
inc
cmp
mov
inc
out
mov
inc
imul
or
xchg
mov
mov
add
pop
add
cmp
sbb
fbld
jne
negl
lods
gs
notb
cli
or
test
adc
mov
sub
or
push
stos
outsb
es
pop
xor
fdivrl
xchg
shll
and
daa
and
pop
xchg
or
sarb
push
fs
lahf
xor
fnsave
dec
inc
ret
xor
and
inc
cs
sti
mov
jle
test
clc
and
call
or
mov
xor
ret
roll
and
sbb
xchg
push
add
sarl
xchg
jno
je
outsl
mov
rclb
lds
pop
insl
loopne
stc
add
push
pop
rorl
xor
orb
push
jbe
mov
mov
pop
das
xor
dec
dec
pop
add
sub
jns
xchg
fs
lds
push
lret
and
bound
push
outsl
pop
rol
jl
xchg
jle
cmp
dec
and
roll
push
push
add
add
and
xchg
scas
sbb
xor
lock
cs
add
fistps
mov
push
mov
out
push
mov
mov
nop
jge
push
adcb
arpl
inc
jmp
enter
dec
xchg
jne
inc
js
aaa
dec
inc
dec
pop
mov
xchg
or
aas
inc
cmc
push
xchg
test
sbb
adc
adc
or
sbb
push
add
inc
jp
xlat
push
add
mov
stos
iret
add
jo
jo
mov
jno
lock
loopne
pop
mov
fs
sub
mov
push
addb
ds
sub
push
jo
in
ror
jno
cmp
push
fs
scas
inc
jnp
xchg
pop
roll
in
xchg
xchg
add
cmpsl
ljmp
dec
imul
adc
out
jno
add
iret
pop
add
fcom
xor
out
shll
cmpsl
add
push
pop
sbb
mov
xchg
xchg
or
sbb
and
jns
push
jle
popa
insb
cld
inc
jae
push
sar
adc
sbb
je
ja
pushf
ret
push
testb
outsl
xor
into
add
add
dec
aam
lcall
mov
out
pop
sub
jnp
insb
sbb
add
out
jle
sub
rcll
xor
out
push
dec
sbb
and
pop
outsl
mov
pop
ficomps
mov
push
frstor
mov
fwait
xchg
adc
ja
scas
scas
sub
push
jecxz
push
mov
xor
or
or
in
aam
jl
dec
das
lret
jae
mov
add
pop
pop
push
insb
popa
cmpsl
shl
push
sbbb
push
setle
or
push
iret
icebp
or
fidivrs
and
add
sub
mov
jns
adc
daa
imull
test
mov
mov
mov
pop
add
add
gs
cmp
iret
dec
int
imul
sti
movsb
push
pusha
stos
fsubrl
ret
xor
jo
pusha
adc
xor
hlt
mov
push
jo
or
xchg
orb
test
mov
daa
sub
fs
add
push
dec
mov
push
push
mov
out
or
or
clc
out
lock
enter
repz
mov
lods
test
pop
mov
pushf
cwtl
xchg
nop
mov
jns
out
js
push
cmp
pop
push
inc
cmp
and
iret
repz
sbb
cld
in
lock
adc
call
mov
enter
cmp
repz
mov
repz
push
cmp
sub
sbb
iret
repz
or
cld
in
hlt
jns
out
in
in
int3
mov
lods
mov
mov
js
out
jns
fs
inc
sub
and
adc
repz
jmp
adc
inc
test
push
dec
pusha
arpl
pop
adc
push
roll
push
jmp
push
mov
daa
adc
or
cmp
out
testl
lock
push
leave
xchg
add
nop
dec
or
aaa
addr16
sarb
push
aaa
cpuid
push
push
push
imull
lret
jbe
add
pusha
pop
testb
push
mov
add
add
dec
add
push
addl
daa
inc
add
mov
dec
inc
aaa
inc
inc
jne
jecxz
mov
sahf
inc
xorb
add
out
les
dec
push
pop
jo
add
pop
add
in
cmp
adc
inc
pushf
push
and
outsb
jbe
xchg
dec
cmp
push
pop
cmpsl
lret
sub
mov
and
jbe
and
xchg
or
scas
lahf
fs
loop
xor
xor
ds
je
flds
xor
xchg
or
jae
pop
and
xor
rcrb
mov
sbb
cmp
inc
js
and
sub
or
and
pop
or
adc
pop
jne
popa
fadds
jae
popaw
insb
into
dec
pop
mov
mov
adc
push
sbb
jmp
push
inc
push
fcmovnu
aad
inc
add
inc
pop
pop
adc
fistps
and
aam
add
xor
xor
sbb
bound
loopne
sbb
pushl
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
pushl
sub
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
mov
adc
dec
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
lock
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lea
clc
aas
lock
idivl
or
add
and
dec
xor
xor
outsb
xor
popf
xor
xor
xor
jmp
xor
xor
xor
mov
xor
xor
xor
xor
push
decl
out
xor
xor
xor
xor
xor
xor
fidivl
decl
mov
les
fnsave
out
xor
mov
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
lods
aaa
mov
cmp
ljmp
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
ud0
cmp
cmp
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
filds
jle
cmp
jo
test
mov
aas
adc
xor
inc
shr
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
ljmp
pushl
aam
jmp
hlt
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
push
aaa
inc
aaa
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
hlt
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
adc
sbb
aas
inc
aas
pop
aas
ja
pusha
pop
decl
xor
pop
xor
push
aas
clc
jo
cltd
xor
xor
xor
xor
xor
xor
ret
call
cmpsb
push
xor
xor
lcall
clc
xor
cld
push
xor
test
mov
mov
nop
xor
out
in
xor
out
cli
pop
scas
clc
xor
cmp
pop
clc
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cs
das
mov
cmp
std
cmp
cmp
call
pop
sub
sbb
cmp
cmp
punpckhbw
cld
ds
fidivrl
jmp
xor
jg
and
cmp
ss
ss
xchg
cmp
cmp
lcall
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
inc
aam
cmp
cmp
adc
dec
aas
push
xor
ljmp
mov
cmpb
aas
sarl
aas
in
out
out
jo
call
xchg
xor
xor
xor
jg
loop
xor
fisubrl
xor
loop
push
pushl
and
xor
xor
mov
xor
xor
scas
std
std
call
xor
cmpsb
data16
ss
add
or
aaa
and
fildll
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
call
mov
aaa
xor
cmp
xchg
outsl
cmp
jne
mov
push
mov
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
push
call
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
ret
mov
cmp
sub
xor
cmp
jg
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
aas
cld
cmp
dec
cmp
addr16
lea
scas
cmp
cmp
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
jns
loope
mov
movsl
aas
stos
aas
mov
mov
rcrb
pop
xor
lcall
aas
xchg
les
fidivl
in
or
adc
decl
xor
xor
xor
xor
mov
xor
xor
xor
xor
ja
xor
xor
xor
mov
jl
cmpsl
xor
xor
jmp
lock
lcall
xor
xor
mov
pushf
xor
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
sbb
scas
cmp
loope
add
cmp
fdivrl
aaa
cmp
mov
shl
xor
mov
xchg
movsb
cmc
fisttps
nop
cmp
cmp
cmp
scas
call
mov
jle
push
or
xor
cmp
sar
xor
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
xchg
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
call
adc
mov
sbb
ds
xor
xchg
ljmp
pop
inc
xor
xabort
cld
or
xor
xor
xor
jl
clc
xor
fiadds
aaa
ret
lcall
lock
jmp
repnz
or
cmp
pop
cmp
jge
mov
lcall
cmp
jbe
xchg
cmp
cmp
cmp
mov
lcall
and
cmp
cmp
fdivrs
push
aas
jne
mov
pop
popf
mov
or
mov
fwait
xor
cmc
cmc
xor
xor
dec
or
repnz
aas
hlt
or
ljmp
xor
pop
std
jg
adc
es
dec
ss
outsb
notb
ss
in
ret
ljmp
cmp
cmp
mov
jo
cmp
cmp
decb
imul
cmp
test
mov
adc
cmp
cmp
dec
cmp
cmp
jae
sar
cmp
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
inc
cmp
orb
pop
ds
ds
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
pop
add
rol
cld
filds
xchg
xor
xor
pop
xor
xor
cmp
clc
xor
xor
xor
xor
xor
xor
xor
mov
xor
push
ljmp
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
ljmp
aaa
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
ljmp
pop
adc
jbe
cmpl
cmp
cmp
mov
pushl
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
mov
push
sub
jne
adc
xor
jg
loop
xor
xor
jg
xchg
xor
xor
xor
addb
pop
cld
xor
xor
ljmp
jne
loopne
adc
adc
sbb
sbb
sub
test
ljmp
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
jecxz
jno
ljmp
cmp
ljmp
and
aaa
into
cmp
inc
xor
xor
mov
jl
mov
decl
negb
mov
mov
mov
mov
in
test
lods
xor
xor
xor
cmp
dec
add
cmp
cmp
xor
cmp
inc
cmp
cmp
jno
cmp
push
rcrb
cmp
clc
mov
cmp
jl
cmpb
cmp
add
inc
aad
cmp
rcr
cmp
mov
ljmp
fdivl
lock
lods
ds
add
or
adc
add
pop
stos
sbb
and
and
sub
sub
xor
pop
jg
cmp
inc
cmp
cmp
pop
cmp
lock
insb
cmp
je
jl
cmpb
jne
or
mov
nop
xchg
cwtl
mov
push
mov
aas
inc
mov
push
aas
push
aas
xchg
aas
push
jg
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jbe
cmpsl
filds
xor
xchg
xor
lcall
clc
xor
xor
inc
xor
xor
cwtl
xor
unpckhps
cld
xor
xor
xor
cmpsb
cmp
ret
xchg
mov
jb
inc
adc
cmpsl
icebp
xor
andb
add
jg
dec
testb
or
ss
sahf
int3
shlb
jmp
fdivl
loopne
in
call
ss
ss
add
add
or
mov
aaa
adc
adc
aaa
sbb
and
and
sub
sub
call
aaa
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
inc
clc
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
or
loopne
into
mov
dec
mov
mov
loop
mov
aaa
les
enter
shlb
aam
fdivs
fcompl
in
les
push
out
aaa
hlt
xor
aaa
add
cmp
adc
adc
sbb
jbe
arpl
mov
ret
fdivrl
call
ret
mov
cmp
cmp
mov
cmp
sub
cmp
cmp
cmp
cmp
push
pop
jne
jo
je
jl
test
ret
decl
mov
cmp
mov
mov
cmp
adc
and
jmp
std
xchg
add
call
out
xchg
in
sahf
repnz
shufps
lock
es
mov
insl
es
mov
jne
icebp
es
dec
push
add
rclb
dec
push
add
test
lret
push
addb
xor
int
add
xchg
fsubs
push
add
inc
lgs
dec
or
xor
test
mov
inc
dec
xor
addb
xor
dec
mov
pop
jo
sub
sub
outsb
iret
jnp
inc
and
dec
mov
add
fildll
sahf
add
fists
sbb
inc
and
inc
adc
push
pop
mov
jnp
loope
sub
sti
add
push
mov
add
je
mov
or
and
push
and
or
leave
aam
enter
dec
push
lea
outsb
push
shl
jb
pop
in
or
push
sbb
xor
push
mov
loopne
jp
les
push
pop
fistpl
in
std
les
fisubl
xor
push
mov
jae
loopne
adc
adc
cwtl
pop
push
push
push
cmp
mov
das
inc
mov
jb
xor
dec
ret
lret
insb
pushf
loopne
or
jge
push
and
pop
rcr
mov
movsb
test
pop
xchg
xor
sub
jne
orl
or
push
cwtl
mov
xchg
jns
xlat
ds
mov
and
and
xor
cmp
and
push
sbb
imul
xor
push
sahf
je
cmp
outsb
int3
inc
roll
and
fcomps
inc
jp
add
fbld
ss
or
xor
mov
and
mov
mov
cmp
and
and
ja
add
lea
mov
add
cmp
jnp
lahf
xchg
fildl
and
lods
add
xchg
in
inc
adc
lock
jae
pop
outsb
push
push
xchg
or
or
mov
dec
daa
adc
lea
push
push
pop
jb
xor
cmp
xor
js
rclb
sti
xchg
or
inc
push
push
call
push
xchg
movsl
xor
les
gs
add
cmp
inc
push
mov
mov
sub
fidivs
inc
cmp
andb
call
sbb
dec
jecxz
repnz
js
push
add
pusha
popa
sbb
jge
or
mov
mov
adc
add
xor
ret
and
jno
call
call
mov
inc
and
push
inc
jmp
add
mov
pop
subl
jl
pusha
dec
gs
mov
js
or
and
lock
cs
push
loop
fs
add
adc
add
adc
es
rcll
jg
pop
add
sbbb
push
adc
push
or
add
inc
add
dec
test
push
ja
jmp
pop
decl
sub
or
jge
aad
and
mov
or
xchg
xor
loope
add
xchg
mov
inc
or
movsl
dec
mov
inc
pop
mov
push
fldt
or
je
imul
jno
lea
out
fldt
or
sbbb
and
clc
or
add
lret
prefetchw
or
add
and
jo
pop
pop
or
or
leave
pop
xchg
add
mov
or
rorb
mov
pop
add
fyl2xp1
lods
popf
jnp
dec
test
sbb
and
push
mov
pusha
xor
loope
loopne
dec
adc
or
jge
sbb
sti
out
call
push
or
pop
sbb
dec
push
rorb
pusha
lret
push
mov
push
sbb
inc
adc
loope
push
xchg
adc
imul
adc
and
inc
adc
dec
pop
add
push
sub
sbb
hlt
sub
inc
test
sbb
dec
mov
push
test
sub
xor
lea
push
lea
pop
mov
cmp
lret
mov
mov
pop
cmp
xor
or
mov
pop
test
outsl
pop
mov
test
adc
pop
cmp
loopne
or
push
lea
lock
idiv
dec
xor
add
jbe
push
sbb
sub
jl
pop
xor
ret
fdivl
addb
push
pop
mov
add
or
sbb
into
sub
add
scas
mov
push
push
jno
cmpsb
xchg
pop
icebp
ds
call
add
pop
cmp
add
roll
rolb
xchg
test
ja
loope
adc
push
ja
dec
jo
lods
in
adc
dec
and
add
movsl
adc
sbbb
lret
ret
push
dec
add
sarl
pop
push
in
imull
les
add
add
push
add
dec
lret
or
movsb
pushf
test
fs
or
sub
mov
mov
mov
xchg
jge
pop
mov
add
ja
xor
mov
bound
sbb
adc
ss
fisttpl
xor
cmp
push
pop
int3
xor
pusha
orl
dec
xor
leave
inc
scas
or
mov
xor
sbb
add
sub
sub
mov
jae
add
inc
mov
cltd
or
sbb
es
sbb
cmp
enter
stos
push
adc
test
mov
dec
test
lods
test
test
add
pop
sub
out
cmp
ljmp
push
push
mov
adc
dec
jecxz
xor
mov
insb
dec
pop
jge
jo
fadds
in
or
lret
sbb
pop
push
push
lret
mov
loop
sub
pushf
pop
mov
dec
pop
inc
mov
loope
mov
mov
xchg
push
push
mov
mov
push
lods
jae
push
push
subl
loope
add
clc
push
xor
pop
pop
ret
jp
mov
or
push
push
xchg
or
pop
mov
xor
or
adc
dec
adc
cmp
out
scas
sbb
xor
xchg
push
ds
rorl
push
pop
cli
popa
arpl
das
adc
sbb
dec
enter
inc
dec
add
push
pop
jb
push
inc
sbb
lret
mov
mov
pop
sbb
or
pop
notl
mov
mov
clc
or
add
adc
ss
mov
adc
mov
pop
mov
scas
fcoml
dec
mov
or
lret
jb
and
ja
outsb
dec
enter
mov
jle
sub
push
dec
jo
push
adc
loop
lods
sti
pop
call
enter
adc
inc
jmp
pop
scas
aam
or
ret
call
adc
xchg
jne
addr16
gs
mov
push
and
test
pop
xor
gs
push
add
test
les
aaa
and
inc
sbb
inc
inc
rorl
push
mov
stc
inc
sbb
push
push
or
or
dec
test
popl
das
insl
inc
jg
inc
test
lods
sbbl
js
or
sbb
sbb
adc
mov
adc
mov
cmp
or
xor
and
pop
and
or
xchg
xchg
and
adc
call
or
mov
mov
add
dec
push
mov
dec
inc
mov
mov
mov
mov
add
inc
jns
add
mov
push
shr
andb
ds
or
push
pop
inc
inc
notl
nop
mov
loopne
mov
leave
call
dec
ret
rorl
cltd
rolb
xchg
movsl
pop
ss
test
jo
mov
and
ja
mov
mov
rorb
cmpsl
jae
inc
pop
test
xchg
pop
pop
test
addl
and
cmp
nop
nop
push
adc
fisubrs
hlt
lret
adc
mov
cmpsl
dec
mov
xchg
fs
pop
repz
repz
dec
inc
cmp
or
pop
orl
jmp
push
push
push
xchg
cmpsl
fstps
out
sbb
lret
and
out
es
inc
cmpl
xor
push
push
jl
lods
or
push
and
fcoml
push
cmpsl
mov
push
fsubr
jns
out
loopne
lock
add
add
gs
cmpsl
jns
fwait
and
or
inc
pop
adc
lods
add
xlat
push
test
sbb
nop
push
bound
stc
push
or
pusha
mov
pushf
or
sbb
hlt
and
mov
in
jns
adc
add
mov
les
pop
mov
mov
pop
or
pusha
hlt
push
hlt
mov
sub
test
pop
push
cmpsl
mov
add
pop
aam
xchg
add
lcall
cs
adc
sub
nop
cmpsb
jns
sub
sub
xchg
add
rcrl
sub
sub
and
xor
sub
sub
lret
sub
sub
sbb
int
cmp
sub
sub
xchg
xor
sub
xor
sub
sub
sub
sub
sub
imul
dec
shrl
sub
xchg
push
and
test
xchg
mov
or
mov
add
jp
or
movsb
loope
sbb
jns
mov
loopne
je
push
mov
js
jae
out
inc
fistl
stc
push
es
pop
jmp
lret
scas
mov
add
push
sahf
sbb
cltd
lret
addr16
sub
mov
sub
outsb
inc
psubsb
push
inc
or
inc
shrb
punpckldq
or
inc
sub
call
inc
repz
mov
inc
sub
adc
mov
adc
mov
sub
rolb
es
jo
ds
loop
sub
inc
iret
push
xchg
mov
inc
nop
adc
add
push
inc
cmpb
sarb
iret
add
shll
adc
mov
sub
je
mov
aas
and
ljmp
add
xor
inc
sub
mov
or
bound
ja
inc
loopne
inc
pop
nop
inc
add
in
cs
inc
out
shrl
ret
call
movb
and
xor
pop
cltd
mov
nop
out
nop
add
bnd
mov
imul
xor
js
pop
pop
mov
mov
cld
add
cmp
jns
push
and
mov
xchg
mov
jns
adc
mov
pop
add
adc
and
js
xor
cmpsl
aad
js
roll
mov
es
andb
outsl
jns
adc
data16
mov
or
aaa
xchg
lock
jns
sub
jbe
jns
sbb
dec
and
loop
fwait
es
into
daa
jns
pusha
dec
dec
and
sub
sbb
ficoml
and
inc
sbb
jns
adc
ja
xchg
jns
ljmp
icebp
sbb
xchg
cwtl
jns
mov
icebp
outsl
cltd
adc
push
fs
inc
popf
sarb
fbstp
push
push
xchg
inc
inc
xchg
jp
enter
insl
xchg
and
outsb
cmpsl
push
and
mov
fs
mov
mov
or
call
push
pop
inc
add
out
dec
rolb
adc
push
in
inc
mov
pop
jns
enter
inc
enter
xchg
iret
mov
mov
pop
add
xchg
inc
or
inc
push
jne
sbb
add
mov
test
mov
pop
xchg
and
ja
push
jne
inc
mov
inc
fs
inc
push
in
fsubrp
scas
and
ror
dec
mov
jl
mov
mov
lret
inc
pop
add
loopne
inc
pop
inc
outsb
push
xchg
inc
fstpl
inc
mov
lret
int
mov
test
stos
and
inc
push
jne
mov
inc
and
mov
test
jmp
inc
push
sub
inc
inc
inc
adc
orl
push
or
cmp
sub
das
inc
fs
cmpsl
push
nop
inc
adcl
outsb
mov
testb
xor
ret
or
fwait
and
icebp
mov
mov
and
sbb
inc
movsb
jbe
movsb
jnp
add
fcoms
jb
aaa
rorb
cmp
test
cs
xor
repnz
flds
ret
mov
into
xchg
cmp
mov
mov
dec
or
mov
inc
add
es
je
dec
dec
int
in
fidivl
test
mov
cmp
mov
adc
xor
add
and
xor
and
xchg
push
ds
mov
sub
mov
loope
xor
shlb
mov
js
pop
in
xor
mov
sbb
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
dec
sbb
add
je
or
mov
fs
cmp
and
adc
popf
lods
sti
adc
cmp
enter
fwait
and
data16
sbb
xchg
mov
or
and
cmp
push
out
or
xor
jo
inc
push
mov
bt
jo
gs
sbb
adc
cmpsl
dec
sub
mov
mov
cmp
mov
sbb
cmp
mov
cmpsb
test
jae
and
or
addr16
push
xchg
lock
or
xor
pop
fldt
xor
std
call
nop
pop
push
aad
inc
xor
stos
inc
lahf
enter
and
movsb
push
je
cld
xchg
aad
std
sub
xor
leave
lahf
sbb
adc
andb
cmc
mov
ficoms
and
add
push
mov
push
repnz
dec
mov
mov
jecxz
mov
xor
repz
xchg
inc
add
das
mov
gs
sub
jmp
mov
leave
add
sahf
and
call
popa
add
jne
daa
loope
mov
dec
pop
loope
inc
les
push
mov
dec
lock
add
repz
or
push
add
push
mov
int3
pop
fcoml
movsl
imul
test
pop
inc
add
fistpl
enter
jnp
nop
xor
pusha
jp
pop
adc
jns
hlt
push
dec
loope
xor
add
lahf
call
add
loopne
cltd
inc
or
sti
loopne
mov
and
out
roll
add
jbe
fcoml
cs
xlat
or
movsl
dec
push
mov
mov
rcll
jnp
xchg
and
mov
roll
push
dec
jge
inc
arpl
loopne
call
adc
sarl
adc
ret
pop
xor
ljmp
bound
dec
push
pop
stc
push
fdivs
mov
mov
sub
push
stc
outsb
jno
js
stc
pop
cmpsl
inc
pop
mov
xor
sbb
stc
xchg
ds
in
dec
push
call
repnz
or
and
std
lea
in
fisttpll
dec
leave
out
clc
adc
frstor
addl
xchg
push
pop
or
js
adc
or
daa
fnstsw
and
pop
push
icebp
fdivl
push
add
aas
mov
or
jne
ret
pop
jmp
xchg
popa
pop
movsb
jmp
pushf
rorb
add
sub
fisubrs
lahf
in
je
add
fcmovnu
fistpl
frstor
fistl
adc
out
aas
dec
or
push
mov
lock
add
xchg
repz
sbb
adc
and
iret
aam
cmp
adc
push
inc
adc
call
lahf
ret
insb
mov
jecxz
lds
mov
add
inc
repnz
pop
and
adc
fldl
ret
call
dec
mov
and
fdiv
je
mov
and
sarb
test
jb
imul
js
jl
aam
je
addb
mov
lock
and
inc
push
and
leave
and
sub
mov
push
rol
aad
lret
inc
jbe
or
or
lret
jo
add
or
or
jno
and
enter
ljmp
pushf
rcrl
notl
add
and
imul
stc
sub
or
sbb
jmp
mov
mov
sbb
pop
nop
inc
mov
and
xor
sub
test
adc
sub
add
xchg
and
dec
push
sbb
adc
imul
pop
inc
lods
adc
adc
adc
repz
sbb
hlt
xchg
pushf
mov
adc
fdivl
daa
mov
xchg
or
loope
pusha
cmp
in
adc
or
adc
pop
xor
sbb
sub
sbb
sahf
add
push
add
pop
into
cmpb
adc
fxch
and
rcll
pop
rcll
dec
dec
sbb
arpl
xchg
shrb
or
movsl
shlb
mov
add
push
add
adc
mov
xchg
add
addb
adc
mov
insl
or
incl
pop
mov
hlt
dec
movhlps
enter
inc
mov
outsb
fcmovb
das
mov
je
lcall
xchg
mov
xchg
cmp
pusha
shrb
sub
js
push
inc
and
xor
fldl
jmp
movsl
fwait
sub
fisttpl
adc
push
push
pop
adc
mov
orb
push
call
sub
adc
xchg
out
shrb
rcr
mov
int3
or
bound
dec
fimuls
dec
mov
adc
push
mov
dec
jb
mov
ret
shl
stos
push
jne
dec
fcoml
testl
dec
pop
adc
rcll
jb
ss
push
xor
push
add
inc
sahf
iret
inc
aaa
and
dec
in
adc
fisubrl
test
dec
cmp
jp
dec
sarb
sub
mov
das
lcall
lods
inc
dec
pop
insb
push
mov
dec
dec
out
scas
outsb
pop
inc
mov
call
cmp
rcr
les
lds
fdivl
mov
adc
xlat
push
pop
sub
pop
dec
in
test
imul
frstor
pop
or
loopne
sarl
push
dec
mov
xchg
mov
push
xchg
addb
aam
aaa
sbbb
mov
call
push
pop
aam
cmp
pop
loop
fmul
aam
ljmp
push
mov
iret
es
outsb
push
pop
outsb
ret
xor
test
pop
xchg
in
mov
aaa
test
push
pop
push
outsb
push
stos
mov
aad
pop
xor
cmp
ret
jge
pop
inc
push
in
mov
lods
jecxz
jp
mov
mov
mov
ljmp
add
mov
in
dec
jo
pop
sarb
xlat
jno
jns
adc
sbb
sbb
stos
pop
hlt
aam
je
rcrb
push
adc
jns
cmpl
enter
aaa
test
push
or
pop
xchg
sbb
xchg
and
push
and
pop
test
and
xchg
pop
dec
or
cmp
mov
or
add
xchg
or
arpl
mov
jmp
adc
inc
fs
call
jb
dec
leave
in
loopne
orl
jecxz
jb
adcb
xchg
mov
lret
pop
pop
pop
push
jo
jb
push
bound
pop
mov
inc
mov
cmp
and
sbb
add
sti
mov
lret
lret
lret
lret
loopne
fdivrs
lret
lret
lret
lret
sarb
mov
mov
mov
leave
lret
cmpb
mov
push
mov
push
jb
mov
and
cmp
sbb
mov
cld
mov
leave
inc
push
jb
mov
in
pop
jns
mov
jb
sbbl
mov
inc
push
jne
push
pop
mov
push
mov
push
jb
xorl
sub
leave
inc
adc
sbbl
out
mov
push
jb
mov
and
cmp
mov
lods
mov
sbb
xchg
mov
leave
inc
push
jb
mov
in
pop
jns
mov
jb
sbbl
and
call
jb
stc
or
mov
or
enter
xor
ja
dec
nop
or
sarl
inc
or
inc
outsb
xchg
mov
add
int
dec
xor
sbb
pushf
xor
daa
push
sbb
inc
xor
mov
adc
and
int
dec
adc
cmp
or
and
stc
mov
shlb
out
xor
dec
ror
dec
cli
cmp
mov
dec
cmp
mov
add
or
add
addb
mov
nop
or
mov
cmp
sub
es
mov
dec
movl
sbb
or
leave
xchg
sub
stc
mov
dec
dec
repnz
je
aam
dec
inc
popf
adc
or
mov
sub
dec
push
mov
hlt
imul
testl
pop
icebp
push
lcall
insb
or
aas
inc
sub
test
add
rolb
cwtl
xchg
mov
pop
jg
bound
test
ljmp
inc
push
cmp
push
mov
sub
dec
push
jns
inc
iret
cmpsb
addb
sub
nop
and
xchg
dec
mov
or
xchg
outsl
in
inc
sbb
hlt
add
outsl
inc
xchg
mov
mov
outsl
xor
nop
outsl
js
mov
outsl
mov
nop
and
xchg
push
inc
jl
dec
movsb
stos
outsl
mov
cmp
fbstp
xor
outsl
fistpll
popf
loop
movsl
outsl
leave
rcr
jo
sarb
outsl
mov
sub
cmpsb
sub
mov
jle
and
outsb
pop
pop
mov
and
and
outsl
xor
and
dec
xor
and
inc
push
xchg
outsl
testl
sub
nop
fstps
popf
frstor
xchg
or
outsl
lods
xchg
dec
push
mov
outsl
and
aam
fs
scas
outsl
mov
imul
pop
mov
movsb
push
pop
mov
lcall
test
lret
fisubrl
int3
or
xchg
scas
rcrb
mov
dec
je
outsl
nop
movsl
rcrl
sbb
push
pop
outsl
pop
mov
mov
mov
outsl
in
jbe
ret
shll
outsl
test
fwait
pop
jo
shlb
pop
rorb
stos
push
jno
enter
es
enter
je
in
rclb
pop
hlt
ror
inc
outsl
xor
lock
mov
fdivrs
mov
cld
mov
cwtl
adc
sub
cmpsl
dec
and
push
pop
outsl
mov
and
pop
jp
outsl
je
iret
rorb
movsl
ja
mov
dec
sbb
out
nop
outsl
inc
sbb
pop
mov
outsl
push
pop
mov
push
pop
sbb
loope
sbb
and
outsl
nop
and
lcall
nop
pop
sbb
xor
outsl
xlat
sub
adc
pop
xor
rcrb
mov
adc
pop
lods
fs
add
push
aas
outsl
dec
aaa
mov
and
mov
outsl
cmp
mov
in
pop
mov
jmp
push
push
outsl
add
jp
out
outsl
nop
and
into
jnp
call
popa
nop
test
outsl
pop
sbb
fsts
cmp
sahf
popa
aas
outsl
jle
sub
out
xchg
arpl
mov
aad
outsl
popl
stos
inc
xchg
outsl
sub
push
push
mov
mov
pop
mov
inc
xchg
outsb
inc
test
cld
nop
movsl
cmpsl
cmpsb
jg
xchg
or
mov
mov
push
adcb
enter
xor
jo
push
push
and
jne
ss
enter
outsl
mov
sub
pop
jno
cmc
or
outsl
shrb
pop
fidivs
xchg
outsl
dec
sbb
dec
push
or
push
inc
stos
push
xchg
ljmp
cltd
cmp
lock
enter
stos
shlb
das
xchg
repnz
je
xchg
loopne
and
rcrb
and
jmp
outsl
jb
std
and
loop
lods
sub
adcb
aad
mov
mov
sbb
popf
cmp
outsl
nop
mov
pop
int
outsl
add
inc
or
and
sbb
loop
cmpsl
cmpsl
sbb
mov
xchg
enter
jg
fs
movsl
repnz
and
movsl
roll
outsl
lahf
mov
outsl
pop
ret
nop
movsl
outsl
stc
add
outsl
sub
insb
sub
in
cs
xchg
repnz
mov
nop
movsl
sbb
jno
adc
rcrb
outsl
fimuls
pop
jmp
outsl
addr16
scas
or
outsl
lahf
loope
jno
pop
dec
adc
ja
jb
inc
xchg
inc
out
jno
shlb
test
hlt
dec
popl
or
shlb
outsl
xchg
and
outsb
adc
pop
sbb
inc
mov
addr16
call
sahf
inc
jb
aad
or
into
lcall
and
mov
mov
xchg
out
lcall
mov
mov
cltd
jmp
inc
iret
mov
rorl
inc
mov
pop
iret
lea
adc
loop
sti
add
xlat
insb
dec
imul
dec
fwait
enter
clc
xchg
andb
xor
scas
ret
pop
lcall
cmp
xchg
cmpsl
sbb
shlb
test
in
mov
xor
clc
icebp
pop
adcl
std
inc
mov
cltd
push
sbb
out
mov
and
mov
mov
and
jle
pop
cmpsb
push
xchg
jmp
jnp
bound
fdivrl
mov
add
xor
cmp
jnp
cmpsl
push
cs
pusha
out
cmp
jo
aam
add
sahf
out
sahf
adc
push
bound
jns
out
mov
lahf
out
out
add
cmp
push
fs
cwtl
cmpsb
ds
repz
ret
or
jns
out
push
sub
dec
pop
out
sahf
out
jo
cwtl
scas
dec
repz
loopne
push
stos
and
iret
repz
push
pusha
insb
jbe
cmp
repz
adcl
push
int
jns
daa
adc
adc
push
int
xor
sub
ljmp
dec
repz
cli
push
fcoms
sbb
aad
dec
repz
outsb
cmp
jl
push
lea
int
repz
mov
mov
add
cmovb
add
iret
adc
pop
clc
mov
push
mov
cmp
or
add
test
mov
push
adc
push
adc
xchg
iret
rorl
sbb
sbb
xchg
out
sahf
out
sbb
sbb
mov
xchg
push
push
pop
sahf
mov
and
cmp
out
and
js
jns
imul
cmp
sahf
call
daa
shrb
and
add
push
push
inc
push
pushf
xor
addr16
fs
or
in
mov
add
cltd
or
xor
sbb
repz
out
cld
xchg
hlt
call
iret
int3
enter
iret
repz
mov
cmp
repz
iret
repz
mov
cmp
repz
jo
push
repz
pop
pop
push
push
iret
repz
dec
dec
inc
inc
cmp
cmp
repz
xor
sbb
lcall
in
out
sahf
out
movsb
test
dec
jmp
and
inc
popl
shlb
pop
dec
dec
inc
xor
imul
mov
int3
lahf
out
sahf
lods
test
in
lea
iret
repz
movsb
js
xor
jg
push
add
in
mov
mov
adc
add
mov
or
pop
push
test
sbb
add
add
daa
stos
pop
notl
xor
push
push
add
jbe
mov
inc
pop
xor
jne
shrb
inc
sub
dec
es
ja
ja
push
add
bnd
add
and
sub
sbb
sub
into
or
add
and
and
xchg
mov
push
daa
jnp
push
mov
push
jo
jbe
jne
mov
inc
add
inc
xor
iret
test
mov
fiaddl
jg
das
xor
inc
push
pop
pop
addr16
add
fsubrs
sbb
xor
add
roll
call
adc
add
aas
jb
or
cs
test
cmp
jge
and
fmuls
cmp
cmp
push
adc
pop
inc
inc
fwait
push
lods
push
out
aas
sbb
dec
dec
mov
add
stos
dec
rorl
insb
mov
aas
mov
push
int3
xchg
pop
xorb
mov
ja
stos
push
fsubl
popa
orb
mov
mov
fcmovne
pop
or
unpcklps
xchg
add
imul
adc
xchg
nop
imul
xchg
jne
dec
test
mov
insl
inc
imul
push
pop
cwtl
pop
push
add
push
adc
outsb
cmp
icebp
int
sti
fiadds
iret
jb
cs
jbe
ud2
jno
jge
out
sub
xchg
movsl
add
lea
cs
testb
aaa
mov
jle
sub
lea
xlat
lahf
imul
cmpsl
daa
scas
cld
subb
jo
daa
add
stos
pop
mov
mov
outsl
jne
push
push
arpl
push
dec
mov
mov
and
loop
arpl
mov
or
rorl
xor
inc
mov
bound
test
cwtl
gs
push
add
and
or
or
sbb
sbb
xor
dec
shrb
es
lea
and
and
rcrl
sub
mov
mov
test
mov
or
sbb
fwait
mov
sbb
mov
sub
sbb
addr16
cmp
cmp
cmpsl
adc
adc
mov
mov
insb
sub
mov
and
or
insb
movsb
imul
push
mov
sbb
xchg
mov
sbb
cmp
and
xchg
js
add
sbbl
mov
add
cmp
mov
or
aad
nop
test
sbb
inc
pop
sub
add
sbb
inc
sahf
cmpsl
push
ficoms
pushf
cwtl
jns
out
xchg
nop
mov
je
pop
push
pop
dec
inc
cmp
repz
cmp
xor
repz
repz
and
sbb
stc
cmp
sbb
add
xchg
hlt
xchg
iret
repz
push
enter
repz
lods
test
mov
mov
jl
je
repz
push
insb
push
fs
push
dec
mov
repz
adc
in
xchg
cmp
repz
mov
repz
repz
sahf
out
fidivrs
jo
pop
inc
cmp
iret
cmp
and
adc
lock
jns
out
loopne
mov
sahf
out
insb
pop
add
adc
dec
test
pop
dec
pop
cmpsl
mov
mov
adc
sahf
push
notb
pop
ret
push
push
push
pop
lea
add
cmp
mov
jmp
jbe
inc
xchg
cs
call
leave
pop
jg
in
pop
enter
mov
pop
jbe
and
subl
mov
pop
cmpsl
fcoms
sub
aas
imul
pop
mov
or
mov
mov
incl
and
rolb
sbb
loopne
xor
lds
decb
xor
mov
dec
jnp
iret
xor
xor
sahf
xor
add
xchg
xor
xor
aaa
fbstp
arpl
outsl
test
sub
cmp
cmp
cmp
dec
sbb
or
push
cmp
andb
and
mov
cmp
cmp
dec
cmp
icebp
cmp
lahf
cmp
mov
pop
ret
and
pop
ds
ds
stos
mov
aas
fs
imul
aas
jecxz
call
jg
xchg
mov
and
sub
xor
addl
xor
push
inc
inc
xor
ret
mov
repnz
xor
xor
and
daa
xor
filds
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
push
test
fs
xor
xor
icebp
pop
sar
xor
xor
and
sub
sub
xor
das
xchg
ljmp
mov
repnz
ss
xor
xor
or
sub
dec
xor
push
mov
mov
mov
icebp
pushl
xor
xor
xor
xor
and
sub
insb
ss
xorl
orl
ss
jp
test
jg
aaa
cmp
insb
cmp
leave
call
xor
cmp
sbb
sbb
and
and
pop
mov
xor
jp
test
mov
mov
repnz
icebp
adc
fdivs
cmp
pop
dec
cmp
test
stos
push
cld
in
ret
ret
arpl
cmp
dec
cmp
cmp
cmp
enter
inc
idivb
cmp
cmp
push
xor
cmp
enter
mov
cmp
dec
sbb
filds
inc
ds
ds
ds
cmp
dec
xchg
ja
clc
cmpsl
aas
mov
aas
repnz
pop
lcall
push
xor
mov
jle
xor
sbb
mov
repnz
xor
aam
jg
mov
dec
in
dec
xor
cmpsl
lds
mov
stc
xor
xor
test
lret
push
add
nop
jno
mov
jg
call
cmp
cmp
pop
cmp
js
jle
pop
add
xchg
cmp
cmp
xchg
into
in
incl
mov
inc
dec
ss
cmp
xchg
dec
idivb
xchg
xchg
gs
sti
cmp
inc
xchg
push
xor
jnp
subb
cmp
cmp
cmp
cmp
mov
push
sbb
loopne
in
jmp
lock
test
jno
ljmp
push
sbb
movl
mov
cmp
cmp
cmp
cmp
cmp
sub
icebp
ds
push
ds
ds
clc
es
adc
or
cld
and
dec
aas
push
aas
or
push
cmpsb
sbb
pop
fidivl
test
emms
ret
out
xor
inc
daa
sub
fwait
push
xor
pop
es
cmc
xor
xor
shlb
inc
in
clc
outsl
cli
xor
insl
xor
test
cli
xor
cmpsl
mov
adc
adc
jg
xor
dec
aaa
jnp
mov
clc
aaa
add
or
cmp
aaa
lret
push
cmp
xchg
jecxz
inc
cmp
out
xchg
shrl
lcall
mov
cmp
pop
cmp
outsl
clc
adc
sub
jno
ja
mov
aas
testb
adc
cmp
cmp
cmp
cmp
scas
inc
aaa
dec
push
addr16
cmpb
xchg
mov
cmp
cmp
sbbb
sub
mov
mov
inc
outsl
popf
xor
aas
or
js
lock
xor
adc
xor
push
cmpsb
xor
xor
jmp
sbb
xor
jns
mov
out
xor
aas
push
adc
sbb
das
ss
mov
mov
aaa
pop
mov
pop
cmp
push
mov
lret
aaa
ret
cmp
cmp
cmp
pushl
ret
push
fisubl
imul
cmp
cmpsb
cmp
icebp
pop
cld
cmp
cmp
test
lahf
cmp
aas
iret
aas
loope
inc
cmp
lahf
sbb
sub
cmp
xor
test
xchg
mov
leave
clc
int
fbstp
icebp
push
push
rcll
sbb
xor
pop
mov
xor
xor
xchg
ss
aaa
gs
cmp
cmp
cmp
xchg
icebp
cmp
and
clc
aad
pxor
adc
emms
ret
cmp
xchg
into
sub
sbb
push
cmp
cmp
jb
add
mov
mov
lcall
jns
out
dec
pusha
or
or
adc
pop
mov
sub
jo
je
jl
pop
mov
mov
nop
sbb
xor
fnsave
mov
add
mov
mov
mov
or
data16
in
xchg
pop
hlt
push
add
stc
int3
inc
orl
push
mov
mov
xor
orl
mov
mov
fcmovb
xor
int3
xor
out
inc
orl
pop
sub
rcrb
xor
xor
adc
xor
jl
and
xor
ret
clc
sbb
push
xor
xor
xor
mov
push
je
jg
rorb
xchg
xor
std
inc
movsb
xor
shlb
pop
inc
pop
sbb
shlb
fsubs
lods
popa
or
jl
nop
xchg
xor
fwait
add
xchg
jp
cmp
xor
push
push
dec
punpckldq
push
push
push
cmp
dec
add
push
cmp
or
jb
pop
daa
cwtl
aaa
pop
lock
out
fsubrs
xor
inc
xor
cmpl
xor
xor
mov
lret
shl
add
jae
lea
pop
xor
xor
mov
movsb
inc
pop
sbb
js
xor
pop
stos
loope
or
sbb
daa
mov
dec
in
mov
pop
hlt
in
xor
dec
xor
rorw
mov
jb
xchg
std
xor
cmp
lock
inc
xchg
dec
xchg
push
lcall
jg
push
jp
xor
xor
xor
xor
xor
xor
and
mov
xlat
test
lods
addr16
push
push
sahf
and
test
xchg
push
and
mov
xor
mov
mov
inc
pop
jo
nop
ljmp
dec
push
movups
fdivr
add
cmp
dec
les
rolb
or
jo
fldt
sahf
mov
add
or
pop
pop
push
jmp
or
or
or
or
or
adc
adc
push
adc
fidivrl
or
pop
sbb
adc
adc
adc
outsb
mov
add
or
adc
pop
adc
std
or
sub
rolb
or
xchg
add
add
adc
dec
fwait
sahf
add
add
xor
add
add
cmp
data16
jg
adc
xor
adc
pop
and
xor
inc
mov
adc
xor
orb
fs
mov
inc
sub
mov
add
inc
pop
sub
xchg
xor
rolb
jecxz
popa
adc
aad
nop
ret
or
xorb
lahf
add
pushf
into
pushf
add
jmp
mov
pop
scas
cmp
adc
fwait
incl
lods
push
adc
pop
popa
jno
and
adc
mov
mov
and
push
lock
loope
icebp
or
push
or
mov
sbb
addb
loopne
scas
fiaddl
or
js
mov
or
std
or
lcall
das
add
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
mov
pushl
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
aaa
mov
mov
xchg
jg
or
insb
sub
addr16
call
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fisttpl
clc
cmp
fisubrl
in
mov
orb
int3
lcall
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
call
sbb
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
push
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
pushl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
call
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
push
mov
inc
mov
sahf
pop
jg
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
decb
jmp
sbb
add
ret
out
pop
jb
mov
or
push
mov
sub
pop
add
arpl
dec
jp
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idivb
aad
or
mov
scas
fadds
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
ljmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pushl
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
clc
xor
jmp
xchg
pop
clc
outsl
pop
dec
fistl
hlt
lret
movsb
add
lea
pushl
jg
gs
std
xorb
jg
aad
adc
ret
call
loopne
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
or
mov
cmp
pop
les
cli
mov
mov
inc
arpl
stos
mov
lcall
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
jg
call
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
ss
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
lock
decl
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
mov
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
lcall
into
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
incl
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
pushl
and
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
clc
mov
repnz
cmp
fmull
enter
jecxz
stc
int3
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
pop
jo
pop
ret
cmpsb
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
call
mov
push
push
sbb
stos
icebp
pop
incb
jg
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
mov
clc
xorl
mov
imul
dec
sahf
cmpl
mov
aas
mov
fsubrl
orb
and
jg
ret
push
clc
xchg
pushf
mov
repnz
movsb
push
and
mov
adc
pop
in
loope
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
pop
lock
data16
pop
nop
mov
call
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
push
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
das
ss
stos
pop
add
dec
mov
sub
jge
jbe
ds
xor
lahf
les
sbb
sbb
cld
addl
clc
incl
in
stc
mov
lahf
outsl
int3
push
sbb
pop
imul
pop
test
bound
xchg
cmpsl
out
outsl
xchg
inc
test
in
jge
popa
push
test
aaa
cld
jg
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
mov
clc
daa
out
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
jg
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jg
jecxz
adc
inc
lds
push
pop
adc
imul
inc
fwait
clc
decl
sbb
inc
pop
xor
rorb
and
pop
in
ljmp
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
ds
clc
in
movsb
insb
or
and
xchg
fidivrs
pop
rcl
add
insb
test
aas
repz
sbb
lock
clc
hlt
push
paddsw
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
lcall
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
insl
and
inc
adc
inc
loopne
test
out
rolb
pop
or
jne
pop
cld
or
dec
ss
lods
movsb
loope
push
add
mov
mov
call
cmpsl
lret
push
mov
in
cmp
jmp
mov
inc
clc
fildll
lock
jmp
hlt
dec
mov
es
clc
aas
fcom
inc
aas
mov
jg
mov
sub
addr16
idivb
mov
sbb
cld
daa
jp
std
adc
cltd
or
scas
cli
inc
clc
mov
ret
nop
cmp
das
incb
lock
pop
pop
testb
sub
cmc
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
or
je
jge
inc
sti
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
das
xchg
or
mov
fbstp
push
or
es
inc
enter
out
test
fwait
cmpsb
cmp
call
xor
decb
in
cli
or
mov
mov
and
xor
mov
sbb
sbb
dec
or
mov
cmp
int
add
push
pop
aaa
sbb
fisttps
or
mov
mov
aas
enter
icebp
ret
ror
sbb
aaa
adc
adc
shrb
add
aas
pop
clc
loope
loope
mov
lahf
jp
sub
ficompl
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
adc
cmp
into
nop
mov
sarl
pop
out
jg
jno
ret
add
cmp
call
lock
sbb
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
cmpsb
ds
inc
mov
in
sbb
xchg
imul
cld
scas
mov
sbb
mov
daa
jmp
fcoml
mov
push
jae
popa
lds
outsl
pop
hlt
dec
add
pop
stc
push
dec
out
fstpt
mov
enter
cwtl
popf
pop
add
fsts
push
shrl
data16
add
pop
inc
add
enter
push
push
nop
mov
dec
push
iret
and
add
mov
ret
jae
rclb
mov
fisttpl
out
imul
stos
cltd
fsub
lret
lea
and
std
xor
loopne
aas
loope
mov
inc
std
add
call
and
sbbl
cmpsb
leave
or
or
js
xor
sub
pop
outsl
jmp
sub
repz
sbb
faddl
fnsaves
out
sarb
test
scas
pop
add
or
leave
xchg
ja
lods
sarl
adc
pop
add
stos
add
mov
push
inc
cmpsl
cmpl
ret
testl
loop
clc
xor
xor
jg
pusha
push
push
stc
dec
outsb
mov
sbb
in
lcall
dec
adc
lcall
insl
call
out
loope
adc
cwtl
notl
jl
addr16
stos
jbe
inc
cmp
pop
cmp
fidivrs
sar
inc
cmpsl
lods
stos
scas
xlat
cmp
add
aas
arpl
cmp
pop
push
lret
sbb
test
jge
push
mov
and
nop
ljmp
adc
cli
incl
fwait
and
arpl
orl
fisubl
ljmp
add
pushf
cmp
repz
xchg
sbb
iret
lods
xor
out
jns
mov
xor
daa
cmp
mov
push
stos
cld
mov
xor
xor
call
cmpsl
fstpl
xor
pop
xchg
jmp
repnz
inc
dec
gs
mov
incl
shrl
orb
test
es
es
jg
lea
jmp
pop
adc
xlat
ljmp
cmp
hlt
fstpt
mov
or
dec
cmpsb
jmp
out
push
cli
pushl
ret
cmp
imul
sti
into
xor
jnp
enter
sbb
out
out
aaa
sbb
jmp
cmpl
in
mov
lods
jl
jmp
orl
sub
cld
stos
cwtl
cmc
gs
push
pop
repnz
cmp
fdivrp
xchg
clc
adc
mov
jne
cs
add
movsl
nop
add
sbb
pop
rcll
dec
lret
orb
pop
jbe
subl
inc
xchg
mov
add
ljmp
sahf
xchg
sbbb
adc
mov
pop
push
mov
subb
pusha
jecxz
pushl
push
jge
lds
leave
adc
push
in
fisttps
jae
mov
ljmp
mov
mov
cmpsb
mov
xchg
mov
sbb
addr16
out
outsb
std
push
into
lds
lcall
movsl
lods
insb
xchg
inc
mov
xor
jmp
repz
or
push
mov
icebp
xlat
jbe
dec
insb
es
mov
arpl
push
jmp
fcoml
push
or
jle
fwait
or
cli
aam
xor
cmp
inc
cmpsl
out
jbe
xor
fwait
popa
loopne
dec
mov
cmp
pop
jns
jmp
cld
fsubs
fisttpl
pop
es
insl
out
test
rcrb
cmp
ljmp
gs
push
dec
adc
xor
xchg
xchg
jo
xor
ja
adc
cwtl
jns
and
adc
outsl
jp
sbb
call
ljmp
xor
inc
bound
mov
ret
gs
mov
fiadds
or
sahf
call
out
cwtl
mov
and
jecxz
xor
in
and
xor
and
test
decl
and
jns
push
addl
jns
call
in
les
nop
lcall
repz
and
arpl
push
stc
xchg
mov
cwtl
sub
pop
push
test
orl
lcall
popf
dec
dec
push
movsl
aas
addr16
mov
mov
or
js
push
inc
bound
or
call
pop
cmp
dec
aaa
scas
or
mov
scas
sub
mov
icebp
decl
aas
inc
sub
je
testb
cltd
dec
xlat
add
rep
lret
incl
lret
ret
subb
fs
mov
cmp
mov
cmp
cmp
outsl
sbb
mov
push
fstl
loop
push
loope
inc
push
jecxz
sub
imul
loopne
push
cmp
jmp
fcompl
cmpsb
mov
jg
add
outsl
push
cmp
shl
stc
xor
cltd
hlt
mov
in
lret
sbb
cmp
cmc
cli
cmpl
mov
fidivl
or
scas
loop
dec
pop
aad
add
and
jmp
mov
sbb
fdivrs
mov
pop
jl
mov
cmc
out
jge
xchg
dec
clc
xor
mov
js
cmpsl
and
push
icebp
jnp
outsl
mov
cmp
scas
insl
scas
negl
cmc
mov
xor
adc
cmpsl
inc
pop
cmpsl
lock
xchg
lcall
insb
mov
push
and
jo
cmp
movsb
ljmp
lcall
push
std
xlat
or
jno
and
xorl
popf
fs
popa
daa
jmp
insl
and
sub
cmp
mov
cmc
push
pop
popa
ds
mov
enter
push
fistpll
sub
sub
dec
dec
cmpsb
add
cmp
push
pusha
mov
enter
cmpsb
int3
lcall
push
sti
std
gs
insb
sub
repz
test
dec
or
cmp
dec
jl
xchg
mov
sahf
mov
mov
int3
jne
popf
xlat
pusha
out
push
lods
mov
daa
pop
shrl
nop
daa
xor
int3
sub
mov
xchg
add
mov
hlt
jmp
fsubrl
xor
sub
add
inc
push
bound
mov
pushl
sbb
inc
fisubrl
cmp
bound
mov
movsb
enter
movsl
leave
ljmp
lret
imul
sbb
add
into
cmp
push
add
pushl
out
jb
mov
add
cmp
adc
jl
loopne
cmp
ljmp
lea
dec
test
push
scas
ret
and
bound
and
mov
call
std
ljmp
and
push
dec
push
xchg
cmp
aam
push
dec
inc
ds
repz
fwait
decb
in
clc
cld
shrb
and
movsl
scas
pusha
pop
or
lcall
cltd
mov
ja
divl
popa
mov
dec
xchg
fsub
push
xor
mov
jns
cmp
mov
xchg
lods
adc
sbb
je
fdivs
inc
vmovapd
out
popfw
test
jp
ret
jmp
movsl
loop
inc
iret
std
adc
cmpsl
ljmp
stos
pop
adc
mov
cmp
add
sbb
pop
mov
lcall
and
divb
aaa
stos
cli
push
pushf
mov
jnp
and
sbb
push
jmp
aas
xchg
outsl
add
jo
add
dec
push
repnz
or
test
pushl
mov
daa
add
add
stos
dec
das
lcall
call
mov
jg
out
xchg
lods
stos
lods
sub
jg
mov
rorb
xchg
idivb
adc
jmp
fld
dec
adc
mov
mov
dec
sti
ljmp
pop
decl
ljmp
pop
dec
outsl
push
mov
jmp
adc
ja
add
stos
sbb
cwtl
roll
das
std
cmpsl
cwtl
sbb
ret
xor
imul
xor
adc
mov
icebp
cmp
push
xchg
sbb
mov
insb
jae
dec
mov
lahf
fsub
aas
inc
clc
fsubrs
repz
jg
inc
iret
fidivs
scas
add
mov
mov
loopne
dec
mov
inc
mov
pushl
jp
dec
subb
scas
add
mov
dec
enter
sub
fbld
pop
cmp
jbe
mov
outsl
inc
mov
sub
push
jle
cmpsl
sbb
stc
sbb
iret
push
nop
sbb
popa
xor
cmpsl
mov
enter
cmp
push
clc
popa
mov
mov
adcb
lcall
pop
mov
ret
mov
xor
popf
repz
test
mov
adc
call
mov
pop
sub
rolb
lcall
das
dec
pop
or
jmp
js
cmc
loop
mov
imul
add
daa
xchg
jnp
jmp
cmc
inc
decl
dec
outsb
add
jl
or
cmp
jle
push
or
loop
repnz
sbb
test
call
lock
leave
cli
cmp
ljmp
inc
adc
inc
push
sbb
push
decl
cmp
push
sti
push
jge
into
jecxz
adc
int3
dec
dec
jle
call
cmpsl
fwait
xor
mov
cmp
pop
inc
and
pop
aam
hlt
cmp
lcall
cltd
jmp
dec
or
sahf
sub
or
and
jg
mov
and
dec
lahf
push
mov
jnp
scas
cmc
adc
test
lcall
add
dec
jo
cmp
das
stc
and
rolb
movsb
cmc
cmc
loope
sar
ljmp
push
or
in
arpl
inc
mov
xlat
insl
ficoms
aam
sbb
cmp
call
outsl
test
fbld
out
test
fdivrs
sbb
adc
pop
mov
push
popa
imulb
and
pop
loopne
mov
stos
jg
jecxz
ljmp
jo
mov
dec
dec
add
xor
dec
mov
test
mov
jmp
push
fcoml
jg
testl
mov
adc
addl
decl
jle
sbb
sbbb
cs
add
xchg
in
lcall
mov
shrb
and
inc
mov
jo
sbb
fcoml
pusha
incl
push
add
inc
pop
xlat
pushf
mov
shlb
xor
inc
push
xchg
dec
mov
cld
ljmp
dec
push
aam
add
lcall
scas
aam
divl
cltd
add
xchg
or
iret
cltd
jecxz
jne
fwait
in
frstor
out
outsb
testb
lret
jge
push
aas
in
jge
cli
test
int3
shl
out
xchg
iret
push
stc
xor
cmp
in
leave
push
into
mov
xchg
cmp
ret
fnstenv
data16
and
dec
jno
test
sbb
fnstsw
shl
add
cmp
xchg
dec
pop
mov
mov
decl
sbb
fcompl
std
rcll
push
outsl
cmp
xor
pop
lock
dec
cmp
cmpsb
mov
mov
jmp
sub
sbb
inc
or
adc
in
es
stos
es
incl
frstor
cld
into
out
push
not
cmp
jge
or
pop
out
test
mov
inc
shll
imul
xchg
inc
cs
shll
jae
mov
mov
mov
push
sbb
jg
and
push
sbb
data16
push
shrl
mov
pushl
and
std
insl
imul
mov
mov
sub
jns
aaa
sub
and
mov
fbstp
roll
lods
enter
ret
fcoms
test
or
mov
pusha
inc
sub
sti
lods
jns
push
or
fimull
repnz
inc
popf
xor
incl
test
aam
pushf
jecxz
or
sbb
ret
loop
dec
mov
incl
dec
fwait
lock
push
lods
adc
push
sub
divb
ljmp
mov
pop
or
sbb
mov
inc
adc
cmp
inc
ret
pushf
ja
mov
out
cmp
mov
int3
popf
xchg
or
leave
fwait
pushf
and
call
test
mov
xlat
outsl
arpl
jo
cltd
mov
dec
rolb
dec
insb
loop
outsl
gs
sub
es
xor
sub
xchg
imulb
mov
or
adc
push
fwait
push
popa
cmp
inc
fs
xor
into
loope
js
arpl
jmp
std
pop
mov
sbb
jmp
mov
aaa
inc
sbb
inc
mov
movl
enter
fcomip
sahf
iret
jg
movsl
mov
aam
fbstp
mov
scas
fbld
mov
loop
jae
aas
and
ficompl
out
jge
int3
push
adc
cmpsl
mov
jmp
pop
cmp
pop
cmp
cmp
or
ljmp
test
push
ret
cltd
push
pop
dec
inc
addl
dec
lahf
out
dec
insl
aam
ljmp
cmp
rcll
jmp
sub
ficomps
es
outsb
shll
or
out
and
jno
outsb
out
in
notb
push
xlat
jo
jns
inc
lret
or
data16
xor
call
sbb
inc
or
mov
aaa
cltd
lods
decl
lock
shl
dec
pop
jno
sub
mov
inc
sti
lods
jmp
mov
cwtl
adc
shll
movsb
and
clc
push
jle
dec
rclb
xor
hlt
jmp
push
test
mov
xchg
cmp
loop
call
ja
push
pop
dec
jg
lock
mov
adc
push
cmp
pop
imul
pushl
cmp
push
ret
imulb
cld
test
int
stos
push
movsl
out
lds
jl
or
shrl
inc
sub
aad
cmpl
fucomp
jb
decl
loop
aam
pop
je
mov
enter
lahf
or
decl
cmp
mov
loop
mov
or
jmp
es
mov
filds
mov
out
daa
dec
inc
mov
mov
roll
jmp
mov
ret
sbb
adc
inc
sti
lret
mov
jns
aaa
data16
push
jg
incl
xchg
adc
sub
pop
nop
ja
or
push
std
mov
cmp
dec
leave
sbb
test
insb
jmp
mov
shl
fsts
data16
pop
push
stc
pop
pusha
pop
pushl
pushf
push
into
out
je
fstpl
fmull
xor
scas
gs
clc
imul
mov
mov
fdivp
inc
mov
mov
mov
sbb
sbb
push
std
call
xchg
addr16
ret
rorb
mov
dec
and
lahf
mov
pop
rcrb
movsb
dec
xchg
push
adc
sar
scas
cli
repz
nop
sti
stos
jl
sahf
push
cmp
jl
jecxz
icebp
xchg
mov
pushl
insb
and
add
scas
sbb
shlb
sub
push
movsl
mov
push
aad
lcall
mov
into
sbb
pop
cmp
mov
clc
imul
adc
lret
in
mov
mov
cmp
pop
lock
mov
loope
mov
ja
mov
call
ret
mov
and
ror
xor
mov
ret
push
cltd
cmp
int3
cmp
incl
rorb
lea
inc
ja
test
loope
scas
xor
sti
cld
mov
incl
dec
push
xchg
push
mov
sti
xlat
sbb
cmp
dec
das
jl
add
sti
sahf
pop
mov
call
add
pop
adc
and
js
filds
ret
jp
inc
and
xadd
jmp
sbb
inc
xchg
rcrl
jns
jnp
inc
or
out
sbb
test
pushl
hlt
test
inc
ficoml
stos
fucomip
cld
es
cmp
in
push
sti
mov
jge
push
xor
and
lcall
and
or
sub
rorl
pop
fmuls
imul
add
cmc
incl
fidivs
pop
xor
xchg
sub
cmp
das
clc
fistps
cmc
inc
sete
or
mov
mov
mov
cmc
pop
push
pusha
or
aas
dec
push
sbb
pop
cmp
sbbw
mov
cltd
mov
add
or
cwtl
in
decl
fisttps
arpl
mov
es
mov
sub
cmpsl
or
xchg
add
movsb
xchg
jmp
out
push
pop
ds
ljmp
mov
pop
hlt
mov
inc
scas
ficoms
loop
enter
imul
cld
iret
xchg
in
cld
and
push
out
scas
mov
repnz
decl
movsl
out
aaa
ja
pushf
add
jg
cmpsl
add
fisubl
xlat
sarb
ljmp
xchg
subb
and
xchg
in
push
aaa
test
xlat
fldcw
lcall
fistps
idivb
loope
lret
daa
adc
jns
fiaddl
aad
adcb
es
fsubs
test
push
cmc
icebp
mov
xchg
mov
test
xor
jmp
push
mov
aas
lret
add
mov
lods
pop
aaa
sti
inc
mov
mov
mov
push
push
or
xchg
in
push
lds
mov
arpl
loopne
iret
fbld
jmp
out
jp
out
mov
inc
lcall
jg
movsb
movsb
shl
mov
aas
push
cli
int3
lods
sbb
cltd
call
jmp
mov
lcall
and
push
aad
cmpsl
in
aaa
int3
inc
int
sahf
mov
push
nop
mov
mov
int
and
scas
inc
test
es
js
lret
out
xchg
xor
das
xor
jmp
cmp
sti
stos
fmuls
jmp
mov
stos
incl
pop
jb
sbb
xorl
jmp
stos
js
xor
daa
pushl
jae
mov
xor
orl
insl
jge
call
cli
add
sbb
pop
cltd
mov
sar
ljmp
cwtl
or
ret
scas
cmp
lret
xchg
iret
or
out
jg
xchg
std
cmp
out
clc
incl
xor
sub
fdivrl
jg
adcl
xor
decl
cmpsl
adc
pop
enter
stos
jnp
push
out
test
fmull
pushl
inc
outsb
sub
pop
out
jbe
mov
lds
inc
push
sbb
dec
adc
decl
and
ret
loope
add
cs
push
pop
mov
jmp
pop
je
mov
sub
js
xchg
call
sbbl
ret
call
cmpsb
inc
cmp
je
mov
clc
xchg
jecxz
inc
xorb
mov
int3
imul
push
mov
push
adc
outsb
cld
mov
movsb
pop
idiv
scas
cmp
ljmp
clc
in
jmp
mov
mov
adc
and
sbb
divb
inc
lods
add
je
dec
lcall
inc
clc
or
push
ljmp
sbb
call
push
sbb
pop
decl
test
push
fnsaves
sub
mov
sahf
xchg
mov
adc
aas
adcl
pop
call
mov
xchg
idivl
dec
adc
iret
sbb
aaa
shl
adc
add
call
or
sub
std
jecxz
jno
fcoml
frstor
pop
mov
pop
cmp
enter
or
adc
fmulp
scas
cmp
je
incl
aad
mov
pop
test
inc
adc
into
dec
and
sbb
lret
inc
imul
jmp
in
push
sarl
pop
popa
mov
call
sbb
in
pusha
and
nop
mov
sbb
out
test
jge
add
inc
cli
push
xor
daa
jmp
call
lds
jp
cmc
jge
dec
out
and
dec
jecxz
out
ret
rcrb
cmp
lods
or
jne
aaa
pusha
lds
insb
push
ljmp
dec
call
dec
rol
dec
push
mov
push
dec
xor
pusha
mov
loope
jne
loopne
cli
les
das
adc
cli
jae
shlb
mov
adc
mov
or
ffree
push
das
or
cmp
inc
fcoms
mov
dec
lcall
add
arpl
push
ud0
pop
test
sbb
ljmp
test
mov
push
inc
hlt
inc
cmp
mov
call
test
ljmp
xor
pop
shrb
mov
pop
incl
or
lods
sbb
decl
scas
dec
enter
jge
cs
push
push
sarb
lret
int3
cmpsl
inc
dec
cld
push
jecxz
rclb
sub
cwtl
pusha
fcomps
sub
cmp
push
sbb
inc
or
les
sbb
sub
sbb
divl
insl
push
xchg
xchg
adc
sub
fwait
out
jae
cmpsl
xor
lret
mov
sbb
test
gs
mov
push
xchg
jmp
or
jg
test
insb
pop
cmp
loop
cs
mov
leave
pop
dec
add
push
mov
test
decl
mov
xchg
push
jae
int
xor
cmc
repz
xchg
addr16
push
jg
pushl
jge
out
add
mov
push
sbb
js
jle
cmp
incl
cmc
sbb
mov
mov
fimull
push
jbe
adc
fsubrs
jmp
loop,pt
mov
xchg
insb
push
out
mov
clc
clc
mov
fucom
sbbl
hlt
push
mov
jg
pop
das
ss
adc
cltd
push
stc
dec
cld
adc
mov
xor
inc
ljmp
out
jnp
dec
pusha
scas
lods
std
push
lock
mov
ds
and
test
fcomip
cmp
mov
aaa
idiv
sarl
fisttpll
pushf
mov
or
mov
lcall
pop
loopne
int
push
xor
mov
dec
mov
xchg
sub
lcall
or
lods
cmp
mov
mov
imul
test
mov
les
jmp
adc
adc
dec
addr16
decl
aad
ja
xchg
lahf
enter
cmpl
push
dec
jg
inc
xchg
sbbl
in
lock
push
push
pop
xor
add
call
mov
cmp
xor
or
mov
and
cltd
out
out
jb
push
or
add
jmp
dec
or
fcoml
mov
cmp
xor
dec
cwtl
xchg
mov
push
xor
incl
xlat
stc
pop
nop
aad
xor
lods
lock
pop
push
imul
ficoml
sbb
sub
jp
rolb
jecxz
inc
sbb
sar
push
mov
cmp
push
mov
fistps
out
jne
outsb
adc
sbb
mulb
pushl
sti
mov
push
mov
jp
xor
daa
push
mov
sarb
pop
jns
add
call
je
and
dec
loop
cmp
dec
dec
divl
mov
push
mov
jg
loop
addb
and
pop
ds
add
inc
fnstenv
mov
push
dec
call
decl
in
xchg
jg
mov
pop
mov
add
popa
imul
jmp
int3
rorb
sar
scas
mov
or
xchg
push
dec
pop
inc
add
xchg
sbb
incl
rcrl
xchg
ss
repz
dec
mov
push
inc
sbb
test
dec
adc
std
adc
cmp
xchg
pop
insb
pop
xor
decl
popf
push
mov
push
add
xchg
sub
sub
jb
dec
scas
push
in
aaa
cmp
addr16
mov
xor
js
daa
or
xor
stc
in
xchg
lea
push
push
inc
push
sbb
sub
lret
shlb
repnz
sub
mov
fdiv
scas
mov
lods
push
insb
jle
mov
fnstenv
movsl
cltd
mov
push
loope
jl
and
or
jnp
arpl
inc
mov
mov
lods
ret
push
jmp
and
or
test
pushl
outsb
fs
mov
lcall
and
xchg
test
incl
movsl
push
mov
or
bound
cli
mov
jle
insb
sub
xchg
inc
jmp
dec
stos
cmp
aaa
adc
pushl
xor
stos
movsb
ror
sti
lahf
testb
call
adc
sbb
aam
sub
or
shrb
push
push
inc
mov
and
add
jmp
rcl
push
cmc
push
stc
movsl
fildl
loop
in
addr16
push
mov
fwait
decl
fists
in
mov
or
jp
pop
push
cmp
lds
ljmp
sbb
hlt
lea
enter
sub
push
sbb
cmp
mov
iret
mov
adc
cmp
jle
xchg
test
cmp
ljmp
outsl
movsb
adc
data16
adc
push
dec
xor
xchg
and
ljmp
mov
pop
call
jecxz
out
cmp
mov
or
jmp
out
call
xor
mov
repnz
sub
mov
mov
pop
push
ljmp
icebp
jno
clc
xor
ja
ret
sbb
decl
test
mov
push
cmp
pop
cmp
push
push
icebp
adc
dec
inc
mov
cmp
adc
std
pop
push
pop
xchg
imul
movsl
mov
into
push
jns
in
pop
incl
cld
dec
sbb
ret
daa
mov
sbb
fwait
mov
sub
aaa
pop
mov
std
aaa
jecxz
inc
int
jle
cmpsl
ss
push
xor
fdivrl
add
push
mov
lods
fstl
aas
addr16
cmp
jnp
int3
push
loop
incl
sbb
das
dec
jae
and
inc
les
mov
push
xor
sbb
push
int
or
push
push
daa
adc
cli
int3
aam
sbb
and
push
mov
ljmp
lock
xchg
jne
or
or
mov
push
add
cmp
fs
out
clc
cmpsb
ret
ret
cs
xchg
shll
outsl
clc
mov
xor
mov
push
sbb
sbb
or
xchg
dec
fsub
mov
or
xchg
xchg
mov
call
jo
push
clc
loope
lods
lret
lods
pusha
lods
data16
cmp
xor
loopne
insb
scas
das
fnstcw
adc
pop
jb
popf
sbb
mov
xchg
mov
shrl
pop
adc
jae
jg
jmp
enter
repnz
lods
inc
mov
jle
sbb
cld
sbb
pushf
decl
lock
cwtl
cld
cmp
sbb
mov
dec
xchg
mov
add
xor
xor
push
adc
and
out
inc
out
aad
pop
arpl
xchg
cmp
push
dec
cs
push
sbb
lea
cs
in
push
sbb
jg
cld
mov
stc
xor
xor
imul
testl
inc
cmpsb
stc
mov
nop
out
leave
inc
pop
xor
sahf
leave
idiv
dec
add
cld
and
ljmp
dec
mov
jns
stc
pusha
cmpsl
sbb
stos
sahf
pop
inc
je
jg
jmp
push
cli
or
dec
fidivrs
mov
in
or
loop
push
sub
ret
push
clc
movb
jmp
inc
ret
push
out
jg
clc
ss
incl
inc
mov
jns
in
dec
mov
adc
cmc
and
adc
insl
out
jg
or
test
sub
rorb
pop
mov
jno
ljmp
icebp
xor
push
add
cmpsl
mov
add
mov
stos
test
ljmp
clc
cmc
ret
xchg
rcrl
add
hlt
sub
sub
pop
test
mov
jg
incl
cmp
nop
jl
cs
int3
xchg
xor
stos
mov
inc
decb
ret
jmp
icebp
and
adc
mov
gs
inc
fstl
sub
cmp
mov
out
lcall
lret
pop
popl
imul
jmp
xchg
or
movsl
sbb
xor
call
mov
aaa
nop
movsl
mov
adc
cld
out
jbe
aad
jmp
jnp
xlat
jbe
testl
ljmp
ret
repz
addr16
stc
adc
ljmp
mov
cmc
arpl
stos
js
aas
cmpsl
jb
jl
stc
ljmp
jo
arpl
dec
ja
out
icebp
xchg
adc
call
out
pop
faddl
push
mov
lret
and
sbb
jmp
flds
hlt
mov
rolb
shll
xor
dec
pop
int
mov
lock
stc
aad
xchg
enter
pushl
cmp
fldcw
adc
push
mov
mov
inc
js
jl
inc
fdivr
jg
push
pop
sahf
ret
mov
jecxz
shll
lea
sbb
aad
cmp
jecxz
mov
stos
imul
mov
jae
adc
rcll
mov
sub
xor
decl
adc
scas
icebp
clc
dec
incl
xlat
inc
ja
out
xchg
cmp
or
inc
jns
into
sbb
cmpsb
mov
fistpl
js
push
sbb
jbe
je
jg
lods
pop
dec
movsb
cmp
cli
call
mov
outsb
xor
rcrb
jp
cmpsb
jo
xor
in
aas
sbb
outsl
cmp
incl
push
aad
pop
add
sbb
cs
add
cltd
int3
mov
push
ljmp
mov
hlt
jecxz
push
dec
inc
popf
aam
pop
adc
xchg
pop
out
pop
inc
imul
decl
add
jg
pop
lea
int
dec
outsb
fstl
dec
jecxz
sarl
cmp
lcall
insb
push
mov
cmpsl
mov
testb
and
cmc
jb
jno
add
int3
xor
ret
scas
imul
pushl
dec
xchg
lock
pop
cs
mov
inc
jmp
les
sbb
add
cmp
jg
fbld
cwtl
xor
push
mov
mov
lcall
cwtd
or
pop
adc
leave
outsl
pop
aas
mov
mov
pushl
aas
decl
insl
fisubrs
and
out
lret
lahf
hlt
mov
decl
mov
jg
hlt
cmp
lret
dec
cmp
test
push
cmpsb
ret
lret
lcall
adc
outsl
mov
fwait
push
inc
outsb
popa
addb
outsl
mov
lret
stc
les
stos
sub
sbb
das
dec
es
in
jae
int3
sbb
loopne
cmp
fwait
adc
cmpsb
jmp
dec
lds
fsts
ja
jmp
or
jg
xor
mov
add
cwtl
data16
mov
bound
stc
loop
xchg
dec
shlb
fistl
pushl
mov
loope
cs
adc
push
imul
inc
inc
cmpsl
mov
aam
std
ljmp
jns
adc
out
inc
loop,pt
pushl
aad
fsts
xchg
push
or
xchg
and
add
fldl
fsubl
sub
xchg
dec
sub
jmp
mov
inc
popa
fistpll
sbb
push
std
cmpsl
inc
cmp
cmpsl
inc
mov
shlb
jmp
push
cld
mov
je
dec
addl
insl
repnz
call
xchg
sub
fcmovnu
je
pushf
aaa
je
insl
lea
xchg
movsl
mov
js
push
mov
pushl
mov
in
cltd
push
imul
in
sub
fmul
pop
and
mov
ljmp
outsl
cwtl
sub
cmp
xchg
mov
je
and
incl
jmp
data16
jbe
push
mov
lahf
or
mov
test
push
adc
sub
loop
cmp
fcmovnbe
fcoms
xchg
cld
into
divl
mov
mov
dec
push
adc
stc
jg
hlt
sbb
in
lcall
in
adc
push
cmp
shl
rcrb
jmp
int
cltd
mov
decb
push
lahf
outsl
cli
pushl
adc
pop
xchg
arpl
int3
or
push
inc
loopne
aaa
mov
push
jg
mov
mov
fmuls
std
dec
mov
push
mov
testl
lods
loopne
sbb
mov
lods
jl
mov
adc
stos
jge
pop
outsl
aas
imul
adc
push
jmp
into
ljmp
rcrb
inc
push
sbb
sub
pusha
jno
shr
push
lods
xchg
dec
cmp
pop
xchg
inc
cltd
ret
inc
pop
stos
mov
mov
jne
jge
clc
mov
mov
fdivrl
jmp
jge
xor
iret
xchg
pushf
out
sbbb
ret
aad
ja
mov
incl
jmp
jbe
out
mov
sub
inc
lcall
ljmp
outsb
int
jo
xchg
mov
stos
cmpsb
jns
cs
inc
sbb
or
in
fdivs
decl
lock
icebp
movsb
sbb
add
inc
add
stc
cmc
mov
out
mov
scas
incl
cld
pusha
jb
mov
test
jae
aam
add
lods
repnz
pop
pushl
or
shrl
imul
outsb
jnp
pop
xchg
ljmp
cwtl
mov
fwait
xchg
pop
addb
insl
je
data16
imul
xchg
stos
repz
push
std
mov
out
sbb
jb
aaa
movq
push
push
adc
in
pushl
sub
jp
sbb
xchg
jo
push
mov
outsl
adcl
cmpl
xor
pop
jg
dec
stc
jle
enter
jmp
rorl
decb
movsb
or
fcmovne
sub
and
jmp
push
sahf
movsl
add
pushl
divb
cmp
outsb
movsl
ret
jno
mov
and
pop
mov
and
jno
or
loopne
xchg
lock
insl
pop
shlb
inc
aam
lods
enter
mov
sar
std
aaa
jp
les
push
mov
cli
fbld
fcomip
or
js
stos
and
xchg
test
in
xor
mov
jmp
pushl
sbb
or
push
xchg
insb
dec
hlt
scas
out
lret
pop
ret
mov
inc
dec
mov
test
mov
lahf
in
in
loope
jae
add
gs
les
xor
mov
pop
xor
jmp
mov
repz
orb
imul
sar
ret
out
fnstcw
jecxz
cld
insb
ss
call
sbb
or
mov
cmp
add
into
in
sbbb
ret
cmpsb
lcall
gs
jl
lret
and
xchg
adc
push
jecxz
pop
pop
cwtl
test
fcomip
in
add
fadds
jecxz
mov
out
push
ret
out
lcall
lcall
call
lds
pop
gs
sbb
out
pop
movsb
push
lahf
and
pop
jne
ja
adc
lret
mov
clc
arpl
pop
dec
mov
mov
xchg
push
push
inc
jb
mov
pop
sub
pop
je
push
mov
fwait
daa
adc
lds
scas
jne
or
ljmp
lods
adc
fs
pop
add
jno
aas
cwtl
push
mov
flds
inc
or
sub
dec
std
ss
pop
ja
push
imul
dec
mov
pop
pop
mov
sbb
and
xchg
xor
xchg
pop
lods
and
mov
sub
dec
push
les
incl
push
sbb
test
dec
sub
cmp
add
fsubs
loope
mov
popf
out
pop
js
ljmp
sbb
ljmp
mov
and
dec
push
fdivl
cmp
jns
mov
sbb
loop
mov
xor
sub
rol
pop
pusha
jns
decl
movsb
outsb
int
xor
adc
roll
xchg
int
jle
rorl
cmpsb
mov
call
pop
dec
mov
push
xor
push
dec
mov
andb
imul
mov
loope
addb
mov
xchg
in
je
dec
push
sbb
xchg
xchg
mov
enter
jmp
mov
enter
int
cmp
shl
imul
rcrb
test
std
jmp
mov
push
mov
sbb
lahf
adc
fs
add
mov
xor
outsl
clc
jmp
js
push
pop
jo
sub
js
loopne
sbb
mov
rol
and
mov
scas
cmp
pop
insb
dec
loope
jnp
fdivrl
or
leave
push
push
jl
lock
addr16
or
xor
mov
stc
imul
arpl
pop
aaa
lock
pushl
mov
int3
test
in
mov
pop
jne
sti
jg
sbb
paddb
test
lcall
xor
add
sbb
cs
or
adc
mul
add
call
sbb
jp
leave
push
mov
sub
jnp
ljmp
cmp
inc
stos
lock
pop
shll
repz
mov
out
orb
test
xor
data16
lcall
fnsave
out
or
cmp
repz
fcomip
adc
xchg
imul
out
insl
mov
xchg
scas
pop
mov
out
ret
decl
ja
jnp
outsl
jg
ret
mov
or
movsl
leave
mov
cmpb
bound
aam
ljmp
mov
outsl
gs
add
call
pop
adc
iret
das
rcrb
jge
sub
jbe
adc
pop
inc
jle
dec
sbb
andb
jmp
jmp
sbb
push
cmc
bound
jp
pusha
cli
ljmp
mov
lods
add
mov
push
test
adc
xchg
pushf
xlat
and
jmp
sti
test
inc
or
and
in
pusha
pop
and
fcom
aam
pop
jne
int
add
push
xchg
pop
cmpsl
pop
iret
cmp
daa
mov
add
xchg
cmpsl
inc
or
xchg
add
and
imul
decl
push
sbb
dec
lea
add
inc
cld
call
icebp
shl
out
lahf
orl
pop
loopne
aad
mov
xchg
sbb
sbbl
decl
mov
aad
ljmp
fs
cli
jne
xchg
mov
mov
push
pushf
lcall
test
es
leave
arpl
mov
inc
outsl
pop
pop
mov
ljmp
test
lret
out
inc
or
fisubs
ret
push
ljmp
jne
fstpt
or
pop
sbb
mov
sub
jno
lods
stos
jmp
pop
out
jg
add
xchg
out
lcall
ja
xchg
xchg
mov
xchg
pop
mov
mov
mov
mov
cli
in
fsubl
scas
pop
call
loop
xchg
xor
jecxz
int
cld
pcmpgtw
imul
mov
adc
call
jo
sbb
test
xchg
inc
sbb
pushl
jno
adc
imul
jecxz
testl
mov
mov
cmpsl
push
jb
cmpsb
hlt
mov
inc
sub
push
incl
mov
xchg
inc
adc
add
add
imul
fisubrl
pop
and
in
sub
xor
push
cmp
push
and
icebp
addr16
dec
mov
jo
jecxz
add
lods
scas
push
inc
jmp
add
ret
les
lcall
stos
inc
inc
xchg
push
push
mov
jl
jno
xchg
std
mov
pop
movsb
inc
cmpsl
dec
sarb
call
aaa
push
sub
scas
clc
mov
lret
aad
xor
daa
lods
fiaddl
jge
mov
lret
rorb
adc
lret
or
idivl
or
stos
xchg
adc
add
push
dec
repnz
adc
adc
js
hlt
das
sbb
movsb
shl
mov
sub
sbb
or
cmp
stc
andb
jp
push
das
or
pop
push
test
pop
addr16
pop
sti
pop
adc
fcompl
fldl
lods
inc
and
inc
adc
leave
pop
lods
movsb
sub
jne
sbb
call
push
mov
adc
pusha
jg
les
sbb
in
incl
lds
inc
adc
test
loop
bound
push
das
push
and
dec
push
adc
clc
incl
clc
jae
in
xchg
gs
iret
sbb
hlt
mov
idiv
into
call
repnz
xchg
je
dec
out
imulb
mov
or
call
xor
enter
stos
decb
sub
jle
adc
lret
xchg
call
call
push
shrl
lret
xor
stos
cld
push
mov
loope
mov
ud0
or
jnp
jle
xchg
add
pop
insl
lock
in
dec
cs
inc
repnz
decl
or
sub
and
mov
loopne
insl
mov
push
sbb
push
pop
push
cli
jg
adc
dec
dec
in
ss
sbb
adc
mov
ds
ds
mov
jmp
idivl
imul
add
push
mov
mov
sbbl
jno
imul
stos
fiadds
and
ss
ret
sbb
data16
pop
loopne
ljmp
sbb
test
into
loop
loope
hlt
scas
cmc
sbb
psllq
and
xchg
arpl
nop
daa
or
jmp
push
rorb
lcall
ror
sbb
in
add
inc
cmp
lcall
dec
jmp
daa
icebp
jle
pop
jo
shl
adc
icebp
testb
pushl
push
pop
xchg
add
xlat
cmp
pop
lret
pop
jbe
ret
cmp
mov
lea
push
jns
int3
fwait
insb
mov
call
or
jno
cwtl
and
pop
inc
push
or
sbb
aam
mov
adc
push
outsb
incl
je
pusha
jg
lods
adc
sbb
jno
jmp
ret
call
pusha
movsl
sbb
cmp
or
sub
das
jb
repz
pop
imul
mov
or
ret
in
pop
sub
add
in
mov
inc
mov
cli
pop
pop
add
pushf
test
xor
xchg
add
mov
iret
ja
incl
es
out
out
leave
out
call
and
mov
jmp
loopne
stc
push
cmp
sbb
inc
aaa
inc
cmpsb
rcr
fs
iret
mov
pop
out
lea
ljmp
dec
xor
imul
add
or
mov
loop
mov
popf
jbe
out
mov
lret
js
mov
call
in
pop
aas
push
je
inc
pop
incl
xchg
leave
pop
push
xchg
test
icebp
dec
mov
mov
pusha
mov
mov
mov
add
icebp
lds
lcall
mov
rcrl
fildl
stos
sbb
cmp
pop
cmc
call
das
in
sbb
out
push
push
xor
inc
mull
inc
sbb
jp
add
stc
test
pop
popa
pop
pop
subl
xor
mov
push
sub
incl
fsubs
es
adc
aad
xor
pop
mov
call
scas
outsl
jns
call
loopne
imulb
inc
push
pusha
insb
mov
mov
fdivs
xor
cs
push
shll
shl
or
sub
leave
decl
iret
push
dec
movsb
dec
mov
cld
dec
mov
in
pop
ja
and
fdivr
lcall
jl
scas
pop
mov
jae
jo
mov
inc
xchg
in
movsb
ja
cmp
hlt
mov
ljmp
orl
jns
mov
lcall
dec
shlb
ljmp
enter
mov
xchg
leave
push
adc
mov
shrb
fsubrs
decl
test
ja
aad
mov
sbb
mov
sub
xchg
aad
aaa
cmp
divb
iret
es
loope
jp
dec
push
mov
push
or
lods
mov
int
clc
call
cltd
lret
std
mov
std
xchg
push
cld
push
lahf
sub
mov
dec
mov
adc
sbb
loopne
jne
push
or
push
mov
pusha
push
pop
pop
xchg
aam
std
mov
mov
or
adc
insb
adc
nop
stos
lret
incl
pop
adc
pop
jno
jmp
movsl
xchg
xchg
jns
fbld
jmp
xchg
jp
xor
push
jmp
cmpb
scas
call
dec
dec
out
movsl
pop
ss
int
ljmp
and
scas
mov
insb
jo
cmc
into
rorl
imul
jnp
sub
stos
mov
dec
daa
xor
rolb
xorb
push
lods
lea
daa
lcall
add
mov
cmp
xchg
stos
inc
stos
or
pop
std
ja
jg
push
int3
add
not
cmc
mov
std
leave
jge
inc
dec
testb
add
adc
in
mov
out
jo
push
mov
stos
je
jnp
jg
das
rcrb
enter
decl
ds
xchg
fimuls
imul
mov
test
and
add
sub
dec
cmp
ds
nop
push
scas
sbb
jmp
fmull
je
aas
shr
dec
mov
decl
pop
lahf
push
pop
push
out
mov
xchg
lods
xchg
add
add
push
repnz
pop
es
lcall
popa
or
pop
inc
sub
and
decl
xor
push
imul
fidivrl
test
dec
stc
push
pusha
shr
icebp
xchg
loopne
arpl
leave
adc
sub
jne
jmp
pop
push
stos
or
inc
lea
pop
sahf
mov
sub
into
test
adc
and
incl
fnstcw
cmp
xchg
push
shl
leave
sti
mov
mov
leave
inc
and
sub
decl
mov
popa
enter
out
ljmp
je
jb
punpckldq
in
insl
std
call
jo
jae
jl
jecxz
outsl
mov
rol
data16
mov
xchg
outsb
mov
pusha
add
adc
pop
mov
clc
fld
insb
es
fnstenv
call
pop
orb
aas
xor
xor
adc
mov
mov
push
paddq
iret
xor
incb
cmc
xchg
fsub
xchg
cmp
pop
xchg
mov
lods
mov
jno
push
ljmp
xlat
jecxz
push
loope
inc
push
negb
nop
mov
popf
call
shrb
mov
addr16
inc
insb
push
push
ljmp
iret
adc
stos
lcall
sbb
jmp
loop
dec
rorl
call
xor
pop
inc
mov
insl
push
adc
dec
loop
test
int3
clc
add
loopne
dec
adc
cld
out
or
jb
mov
lret
xchg
lcall
and
jp
movsl
mov
cwtl
mov
mov
ljmp
lods
stos
pop
filds
mov
leave
orb
ret
mov
fiaddl
mov
out
mov
pop
popl
sub
fwait
push
push
or
xchg
repz
pushl
mov
pop
xchg
repnz
push
rolb
mov
cltd
rcrb
lcall
aaa
mov
lock
cmp
push
xchg
ret
out
in
jle
mov
ljmp
push
xor
xchg
sbb
dec
jg
loopne
out
test
lods
jmp
dec
bound
movsb
sub
insl
xchg
push
jp
divb
mov
ljmp
push
lret
lods
cmp
xchg
loopne
xlat
sar
push
xchg
ljmp
into
lods
iret
pop
loop
popa
scas
out
repnz
mov
mov
call
sbb
addr16
sysenter
test
cmp
push
xor
push
and
push
mov
decl
and
cmp
inc
movl
jg
shl
enter
mov
call
mov
pop
loope
jne
scas
test
rol
xor
push
add
sti
dec
ret
inc
dec
xchg
mov
incl
adc
sub
push
mov
mov
xchg
xchg
cmp
mov
and
leave
mov
out
addr16
loop
ja
test
dec
sub
sub
add
mov
dec
out
pop
scas
and
std
push
mov
add
lcall
push
out
pop
adc
clc
fstp
pop
jge
and
rorl
icebp
xor
sbb
mov
mov
ljmp
popa
fmuls
xchg
dec
push
push
adc
ds
inc
mov
mov
lret
or
fiadds
dec
pop
and
dec
fwait
push
out
adc
fildll
lods
xchg
es
sbb
fistps
mov
out
incl
rorb
arpl
push
jbe
popf
insb
jb
inc
pushl
call
jno
sahf
mov
test
dec
rcrl
stos
xor
ljmp
pop
mov
mov
shl
scas
xchg
xor
and
incl
ret
clc
fld
fldcw
xor
add
call
loopne
lea
cld
sbb
inc
xchg
mov
sub
outsb
sar
ljmp
pop
push
int
in
push
add
dec
sbb
mov
pusha
loopne
dec
and
das
sar
xor
cmp
xchg
xchg
sbb
sahf
and
ljmp
mov
push
ficoms
sbbb
loop
leave
js
les
ffreep
je
loop
or
pop
mov
aaa
or
xchg
jo
cmpsl
andl
mov
int
dec
pop
in
pop
sub
sbb
adc
add
and
ljmp
push
add
in
jecxz
mov
mov
add
dec
xlat
popl
or
jbe
jmp
inc
mov
jp
ret
mov
jge
sub
sub
push
xor
or
sarb
jns
addr16
ss
jg
mov
dec
test
xchg
test
out
jl
sub
add
incl
xchg
or
dec
push
div
mov
aam
adc
enter
mov
jp
and
push
int3
ljmp
mov
dec
and
sbb
pause
pop
xchg
dec
aad
fs
mov
add
cli
push
scas
or
xchg
mov
mov
daa
daa
and
pop
shll
push
ficomps
flds
xchg
sub
cmc
cmp
sbb
jmp
inc
jns
scas
sub
bound
into
cmpsl
fadd
jecxz
mov
mov
fisttps
lcall
mov
xchg
push
lock
outsl
stos
pushf
imul
adc
adc
add
idiv
stos
pusha
jge
ret
add
lods
in
lea
pop
jnp
aaa
cmp
outsl
clc
dec
cmp
adc
and
popa
mov
jmp
loope
daa
push
cmc
mov
call
add
test
mov
or
nop
sbb
pushf
out
ret
jmp
pop
cwtl
and
lods
pop
cmp
and
pop
jmp
out
sub
or
push
xor
incl
jg
dec
pop
sub
ret
ja
stos
fldt
lea
push
xor
adc
lcall
adc
xor
inc
mov
sbb
nop
lcall
jmp
ret
je
std
xor
push
inc
xchg
cmp
or
jecxz
and
jmp
push
push
lret
icebp
faddl
outsl
fnsave
adc
sub
mov
xor
inc
nop
or
or
int
jecxz
dec
and
dec
les
adc
sar
in
mov
stc
mov
test
scas
push
push
xchg
push
mov
and
pop
lea
lcall
icebp
mov
fwait
add
cmp
sbb
sub
lds
sbb
push
mov
adc
ljmp
sub
or
inc
lret
insb
int
jl
jae
cmp
loop
dec
imul
sbb
fwait
mov
inc
cmc
lock
xchg
movsb
fnstenv
dec
es
imul
call
and
ficoml
popa
out
push
subb
pop
shlb
sti
dec
mov
dec
dec
fcoms
xor
jmp
sbb
aas
xor
cmpsb
icebp
out
cmp
lcall
fwait
inc
add
divb
pop
xchg
jmp
cmp
push
sbbl
push
ja
fsubs
loopne
ja
int
mov
jmp
push
pushf
mov
outsl
imul
aam
push
push
and
xacquire
jmp
cmpb
stc
test
adc
scas
pop
pop
lret
jmp
and
ljmp
cld
inc
dec
xchg
xchg
nop
dec
dec
xchg
fisubl
pop
fadds
addr16
fildll
call
out
adc
clc
outsb
repnz
xchg
sub
adc
adc
enter
incl
mov
mov
sti
mov
fisttps
outsb
mov
incl
pusha
adc
xchg
fwait
mov
outsb
pushl
cwtl
sbb
lods
sub
js
test
mov
jmp
inc
pop
xor
cli
arpl
sarb
fldenv
ja
cmp
out
testl
decl
lret
or
mov
insb
gs
mov
jae
mov
in
ds
decl
clc
mov
pop
enter
popf
cwtl
jbe
mov
push
mov
mov
call
sbb
dec
das
mov
sbb
add
sahf
out
pop
ljmp
int3
pop
push
inc
inc
lcall
sub
xchg
mov
neg
ljmp
movsl
jae
mov
jmp
bound
sbb
sub
mov
mov
jnp
inc
bound
cli
fdiv
adc
push
aaa
add
incl
and
ljmp
mov
ja
and
jp
mov
and
xor
jl
in
call
mov
mov
mov
xchg
rcrb
push
mov
call
push
pop
add
adc
hlt
push
or
or
jnp
pop
outsl
inc
addr16
ljmp
xchg
out
fisttps
mov
jb
stos
cli
in
cs
add
loop
inc
add
ret
test
inc
fwait
stos
pop
fwait
sub
ljmp
inc
adcb
movsl
fdivrp
andl
push
mov
lcall
aas
popf
enter
sub
popa
sbb
les
pop
sbb
push
mov
sbb
push
decl
or
mov
jmp
mov
sbb
dec
cmpsb
sahf
lcall
ss
cmpsl
mov
sti
sbb
xchg
push
and
rcll
in
jmp
je
jle
aad
lret
fstpt
outsl
cmp
in
mov
pop
xorb
decl
inc
in
clc
adc
mov
repnz
orl
add
out
sar
pop
loop
hlt
imul
cmp
js
popf
add
pop
vgatherdps
lahf
adc
hlt
in
fdivrp
ljmp
or
sti
call
mov
aas
lahf
lea
cld
mov
or
imull
push
test
incl
cli
and
rsqrtps
les
dec
lods
fbld
inc
lret
dec
sub
ja
insb
incl
adc
and
push
fidivrl
daa
cmp
out
dec
movb
mov
xor
aaa
repnz
movb
fbstp
jo
or
orl
sub
add
cmp
push
or
cmc
incl
sahf
cs
xchg
mov
cltd
scas
push
add
fs
call
shr
insl
and
dec
roll
pushf
shlb
cld
cmc
mov
push
push
xchg
mov
and
bound
lcall
mov
mov
movsl
popf
leave
jecxz
xchg
jg
call
cmp
aad
fs
fisttpll
mov
xchg
jnp
mov
inc
in
scas
mov
aaa
dec
push
inc
filds
lods
xchg
call
mov
jno
mov
push
test
lods
pop
bound
aad
pop
pop
sti
mov
movsb
cmp
add
movsb
jno
out
outsl
fdivs
inc
adc
mov
mov
mov
ret
lods
sub
mov
adc
sar
jmp
test
and
dec
aaa
cmp
addr16
fadd
in
nop
sub
incl
daa
gs
sarl
jle
cli
vaddsubps
cmp
lock
sar
ljmp
enter
push
mov
jae
sbb
jge
pop
out
sbb
das
and
push
sbbb
xchg
pushf
adc
in
hlt
lea
call
push
pusha
out
fisttpll
cmpsl
insb
mov
ja
outsl
mov
and
gs
xchg
loop
push
lock
jmp
jmp
jg
cmpl
add
in
dec
je
lds
cmp
fisttps
lods
mov
shl
mov
test
scas
xor
cmp
mov
enter
lcall
pop
push
stc
xor
imul
lret
xor
mov
inc
call
out
inc
rorl
mov
popf
xchg
sub
mov
lods
rcrl
je
aam
insb
in
and
inc
loop
add
jmp
push
shll
outsb
xor
daa
fcomps
inc
insb
insl
ret
pop
push
mov
mov
jmp
add
dec
sub
adc
popa
mov
cmp
pop
add
aaa
dec
ret
push
dec
mov
enter
rolb
pusha
jno
in
imul
imul
outsb
or
fdivl
jl
push
ljmp
leave
cmp
shrl
sbb
pushl
fmuls
loop
sti
pushl
push
sub
jae
nop
push
jecxz
dec
in
testl
ljmp
cli
dec
mov
loope
xchg
push
jb
leave
mov
aad
pushf
or
xchg
cltd
fstpl
cmp
iret
pushf
push
mov
int
sub
rcrl
repnz
xchg
loop
ljmp
mov
mov
cld
adc
arpl
ja
sbb
mov
push
adc
stc
ret
rolb
idivb
or
sub
insb
out
pop
cli
mov
aas
imul
call
pushl
xchg
and
test
je
push
xor
mov
incl
adc
cmp
jmp
or
outsb
imul
mov
inc
lods
outsl
das
mov
fsubl
and
jbe
inc
mov
insb
lcall
xchg
push
call
pop
or
xchg
or
mov
or
incl
test
dec
pop
insb
and
loopne
sub
jecxz
jl
mov
cwtl
popa
data16
incl
das
not
stc
aas
and
int3
jno
and
subb
xchg
inc
mov
dec
adc
cs
arpl
push
daa
dec
xchg
pop
mov
fists
xor
dec
jge
clc
stos
incl
int3
cmp
sbb
andl
into
and
or
dec
repnz
sub
inc
cmp
pop
lcall
jo
mov
sub
or
pushf
stc
mov
push
pushf
adc
enter
lret
mov
fcomp
mov
sti
movsb
and
xor
sbb
push
std
jg
push
gs
insl
inc
xor
mov
pushl
std
pop
xchg
loop
cs
std
mov
fnstenv
pop
pop
add
push
xor
push
add
repz
popa
push
push
pop
cmp
imul
stos
fwait
or
popf
lcall
sarb
cltd
push
lcall
loop
pop
int3
popf
aaa
div
sti
and
and
test
mov
in
jmp
int3
cmp
cltd
fmuls
mov
rolb
add
incl
cmp
shlb
pop
mov
cli
push
std
mov
xor
mov
pusha
push
loop
mov
incl
out
enterw
push
jno
lods
xor
ljmp
xchg
and
inc
mov
pop
sbb
xchg
xor
call
jp
xor
outsl
mov
divb
lea
or
mov
scas
cli
ret
in
cli
movsl
mov
xchg
les
push
aad
mov
test
lcall
out
pop
push
sti
into
xor
push
add
xchg
into
out
xor
movsb
js
pop
or
dec
mov
mov
fidivl
pop
xchg
idivl
in
jge
jle
dec
cmp
fwait
dec
push
je
pop
je
jno
js
rolb
pop
cld
cmpsb
xlat
pop
rcrl
add
test
adc
pop
mov
mov
negb
pop
adc
cmpsb
cmp
adc
push
stos
aam
mov
call
test
push
mov
imul
cli
pop
es
lds
lret
loop
xor
mov
sbb
les
or
mov
mov
test
lods
ljmp
fisubrl
add
mov
dec
arpl
inc
sbb
stos
inc
in
test
ret
push
jbe
pushl
std
inc
jno
repz
out
ljmp
push
jl
xchg
cmc
imul
cmc
adc
xchg
cmp
fistl
inc
xchg
fwait
xor
adc
call
test
dec
mulb
xchg
mov
cmp
scas
clc
mov
lods
ret
adc
repz
xchg
cmp
je
and
adc
push
sets
sbb
sbb
cld
dec
arpl
pop
enter
call
hlt
aas
rclb
loope
lods
jae
xchg
movsl
in
shlb
clc
add
lahf
pop
mov
scas
loopne
pop
mov
xchg
dec
pushl
sub
mov
push
inc
mov
jmp
ljmp
cmp
mov
lret
aam
fistpll
repnz
push
bound
pop
ss
sub
dec
rorl
imul
cmp
pop
push
push
add
cmp
push
jmp
fnstsw
sbb
adc
incl
cmp
imul
icebp
mov
lods
pusha
dec
lock
iret
cmpsb
cmp
call
mov
sahf
movb
or
aam
sub
pushf
mov
dec
lahf
cmp
fstp
dec
shrl
mov
gs
mov
int
test
js
call
test
or
std
aas
jo
hlt
cmp
mov
in
jo
or
lds
enter
mov
adc
and
out
or
dec
xchg
inc
push
mov
js
out
sti
iret
cltd
add
mov
add
or
gs
addr16
aaa
incl
cmpsl
push
mov
mov
ds
push
xor
jne
cltd
push
lds
jmp
aam
shll
shll
xor
add
mov
inc
pop
xor
loope
out
push
enter
push
jecxz
or
xor
dec
lods
xchg
fisubl
cs
fdiv
push
lcall
lahf
lods
mov
mov
cmpsb
push
mov
fsqrt
xchg
mov
sub
call
mov
jbe
adc
mov
xor
sbb
and
xor
adc
xchg
enter
push
out
lcall
sbb
xor
cmp
mov
add
inc
lcall
ror
loop
ret
leave
out
clc
decl
xor
dec
imul
cmp
mov
add
call
sarb
and
inc
inc
iret
cld
mov
xchg
in
mov
inc
daa
loop
pushf
pushf
cmc
cmp
test
cmp
fcomip
incl
add
cs
sbb
ucomiss
arpl
cmp
jg
clc
fbstp
in
xchg
or
inc
test
data16
shll
loop
jmp
pop
sub
add
icebp
mov
and
cld
jbe
xor
jb
mov
push
div
dec
loope
mov
decl
pop
ljmp
in
jae
aaa
and
sbb
popf
push
out
jle
xchg
incl
xchg
sub
pop
dec
repnz
mov
pop
mov
inc
fisubl
sub
imul
call
shlb
imul
je
cmpsl
stos
cmc
imul
outsl
clc
fs
jmp
pop
fcmovbe
mov
push
arpl
or
incl
and
sbb
rcrb
test
mov
nop
loop
mov
adc
loop
mov
notl
pushl
and
mov
sub
imul
jno
dec
mov
lret
incl
or
and
cmp
out
out
push
sbb
xchg
lock
incl
pop
pop
fmulp
inc
jbe
ljmp
xchg
popa
shll
pop
pop
idiv
scas
es
dec
lcall
unpckhps
adc
mov
stos
loop
scas
scas
arpl
or
inc
pop
and
pop
pop
mov
and
jle,pt
insb
adc
mov
lock
popa
add
sahf
sbb
jecxz
popf
mov
dec
ljmp
lods
outsl
dec
shl
mov
stos
sub
cmp
inc
fisttps
mov
in
test
orl
xor
cmp
dec
leave
xchg
pop
dec
shlb
fwait
pop
pushf
push
leave
and
fucomi
push
inc
or
movsb
pop
and
inc
cld
xchg
xor
dec
or
incl
outsb
bound
cli
or
es
push
adc
outsb
popa
sub
test
fcmovnu
fisttpl
incl
sar
mov
pop
jo
pop
mov
cmp
lock
pop
mov
fldt
ret
notl
push
dec
push
mov
dec
mov
mov
lcall
lds
or
mov
xor
xor
enter
iret
shl
dec
cwtl
pop
inc
fcomip
decl
xor
testb
dec
sub
jmp
and
inc
aad
xor
shl
cld
cmpsb
inc
les
subb
sbb
push
in
fstp
sbb
andl
pop
js
pop
pop
daa
test
faddl
push
mov
mov
or
in
mov
push
jnp
rorb
lds
test
sbb
iret
or
add
mov
ret
pushl
ds
mov
lods
mov
mov
loopne
sub
call
outsl
decl
and
jmp
and
outsb
stc
xchg
sbb
hlt
jle
pop
daa
pop
mov
fmuls
lods
shl
dec
jecxz
mov
inc
fistpll
mov
je
mov
call
aad
imul
xchg
and
ss
ficompl
push
rolb
add
sar
jmp
rol
sub
rorb
mov
cmp
not
stos
shrb
or
push
lcall
ja
add
cmp
incl
dec
push
xorl
arpl
hlt
inc
shrl
push
loop
in
cmpsb
mov
mov
and
jecxz
lcall
push
mov
xor
into
cmpsl
add
adc
jmp
addr16
sahf
mov
jp
stc
repnz
adc
outsb
test
push
cli
popa
js
stc
pop
xchg
mov
iret
imul
inc
sub
movsb
xor
clc
pop
sub
mov
pop
pop
jne
cmc
cmp
push
fimull
inc
cmpsl
lods
mov
aam
aam
mov
xchg
xor
cmp
ja
xchg
xlat
clc
xchg
push
sbb
pop
xor
sbb
dec
dec
mov
xchg
pop
gs
xchg
sbb
pushl
xchg
cmpsl
lret
inc
mov
pop
sbb
add
cmp
pop
idiv
call
sub
dec
sbb
push
adc
fildl
outsl
push
and
jmp
sbb
mov
out
cmc
pop
push
addb
jmp
dec
adc
jb
fcoms
cld
cmp
insl
pusha
pop
add
test
jnp
arpl
cmp
ljmp
xchg
lea
adc
push
std
cs
lds
dec
stos
and
jmp
out
das
mov
push
jo
aas
and
jg
nop
sbb
lods
push
adc
or
and
insl
cmp
cmp
mov
loopne
int
test
add
loopne
mov
jmp
dec
in
sahf
out
jne
pop
dec
rcrl
mov
scas
sub
cld
ljmp
adc
adc
or
sahf
sub
test
icebp
addl
shlb
out
std
adcb
test
sub
pop
cmpsb
outsl
cltd
mov
fiadds
scas
add
inc
mov
decl
lock
mov
mov
push
in
addr16
add
jmp
cmp
mov
test
mov
jo
insb
pusha
leave
arpl
mov
xchg
imul
cmp
rcr
pop
xor
rolb
adcb
sbbl
xor
enter
out
incl
je
aas
push
fnstsw
fildll
sub
or
inc
pop
pop
repnz
jmp
sbb
jb
scas
movsb
insl
loopne
mov
adc
ret
fscale
loopne
dec
or
daa
loop
pop
cmp
imul
inc
dec
add
addb
sbb
ljmp
lcall
push
mov
jle
inc
push
dec
push
or
stc
jmp
jnp
ljmp
ret
loop
push
rclb
mov
pushf
inc
push
sbb
call
pop
imul
and
inc
ret
insb
cmp
mov
fwait
sub
cmpl
add
loopne
pop
xchg
or
iret
ficompl
and
ljmp
xchg
pushf
xchg
aas
mov
incb
mov
mov
adc
roll
xor
jmp
in
cmp
dec
adc
aaa
rolb
jg
out
push
sbb
sub
cmp
jg
cmp
fwait
roll
mov
stos
in
push
out
sbb
dec
xor
ljmp
addb
mov
and
pop
xor
scas
mov
mov
mov
fcomps
decl
jbe
jle
cmp
movsl
gs
xchg
stc
arpl
jmp
loope
sbb
pop
cmp
das
clc
ljmp
xlat
mov
ficomps
mov
push
fwait
jg
add
js
xchg
and
insb
mov
push
std
xlat
cmpsb
add
loope
jmp
cltd
cld
lods
mov
jp
ljmp
jg
addr16
adc
out
adc
add
xlat
movsb
lods
cli
pop
mov
stos
adc
sbb
or
incl
iret
mov
cltd
pop
pushf
cmpsl
pusha
mov
jns
ret
fldenv
dec
ret
mov
popf
cwtl
jmp
fbld
push
ret
add
pop
jno
das
decl
movsb
in
out
dec
pop
ret
repnz
lods
dec
xor
jmp
add
pushl
in
dec
lcall
push
jmp
dec
icebp
fildl
daa
push
pop
push
cmpl
push
std
ljmp
xchg
loope
push
inc
rolb
jo
inc
shlb
mov
and
ljmp
jae
sbb
and
sahf
out
sub
fs
decl
pop
pusha
adc
xchg
std
mov
lcall
sub
xchg
dec
inc
mov
dec
pop
nop
leave
ud0
call
push
and
pop
jl
xor
outsb
scas
cmpsl
enter
ljmp
sbb
sti
and
sub
fisttps
cmc
stos
in
push
mov
dec
pop
idivb
mov
mov
push
inc
cmp
sbb
push
outsl
shll
movsb
arpl
ljmp
pushl
add
cmc
out
or
pop
imul
incl
cmp
cmp
bound
xchg
in
and
hlt
cmpb
dec
fstl
movsb
jg
pop
int3
add
jle
push
js
das
loopne
bound
adc
jmp
mov
jp
pop
xchg
fs
aad
sbb
inc
insl
push
loope
push
cmp
imul
dec
mov
rcrl
inc
inc
in
sbb
js
add
hlt
lds
mov
iret
pop
in
les
mov
stc
mov
or
fwait
ljmp
push
in
imul
push
sbb
xorl
aam
jbe
jbe
dec
stos
sti
lods
push
incl
les
sub
mov
adc
dec
mov
inc
enter
int
ss
incl
shrb
dec
fwait
cmpsl
pop
in
adc
fisttpll
stc
dec
mov
cmpsl
cld
inc
into
push
ret
lea
adc
fidivl
sbb
adc
cli
leave
iret
call
mov
ficoms
rclb
pushl
les
shr
imul
jg
leave
fmull
jecxz
mov
stos
stc
inc
lcall
dec
loop
imul
ja
inc
mov
or
hlt
mov
cs
mov
decl
mov
mov
mov
xchg
push
shll
sarl
or
incl
sub
test
cmp
lea
jb
ds
push
idiv
call
jl
cmp
test
aaa
mov
push
jmp
sub
les
incl
fists
decb
in
mov
sbbl
fisubrl
insb
outsl
lahf
sub
and
mov
lahf
js
imul
ljmp
push
push
dec
hlt
orl
xor
sbb
inc
sbb
pop
in
mov
popf
and
mov
xchg
repnz
dec
dec
xchg
ficompl
inc
hlt
insb
mov
lcall
pop
jo
repz
ds
dec
cmp
faddl
pushl
dec
movsl
xor
jmp
xor
dec
lds
sbb
xchg
aad
in
addr16
hlt
pushl
xchg
stos
dec
fcomps
negl
ljmp
jp
and
inc
sub
or
mov
xchg
dec
mov
imulb
daa
clc
enter
test
xchg
outsl
decl
jp
ss
fists
cmpsl
ljmp
iret
fstpt
xchg
call
cmp
pop
dec
mov
in
mov
xor
add
jno
mov
xor
lcall
push
mov
push
repnz
iret
int3
cmp
adc
lcall
enter
mov
enter
and
scas
pop
enter
lods
in
add
test
add
jge
dec
and
loopne
scas
add
cmp
into
addr16
outsl
cmp
adc
aaa
call
ja
in
and
adc
mov
or
insb
pop
aas
mov
insl
xor
lcall
incl
or
jp
dec
imul
dec
and
ret
xor
push
ja
fnstsw
sub
or
push
sbb
call
lcall
shll
lcall
inc
sub
and
add
loope
sub
sarb
lcall
insb
mov
pusha
push
mov
dec
cs
adc
jg
pusha
sbb
xchg
pop
cmc
incl
shrl
add
jp
or
inc
inc
fidivrl
lcall
lds
inc
aad
ret
in
dec
jns
mov
nop
repz
mov
aaa
mov
mov
adc
pop
ror
repnz
jo
jmp
sub
cmp
add
sti
fwait
xlat
fsubr
xor
push
push
or
in
mov
js
stos
insb
subl
rcll
pop
mov
call
dec
sbb
mov
adc
push
js
cmpsb
mov
imul
cmp
cmp
jg
call
mov
aas
popa
hlt
sahf
pop
fistl
sti
push
nop
push
stos
xchg
cmp
shrl
pushl
lret
popa
mov
xchg
adc
iret
xchg
in
loop
sub
or
fstl
mov
sub
mov
ljmp
mov
pop
js
imul
popf
jbe
cmp
cld
or
mov
lcall
push
mov
lds
stc
test
arpl
and
xchg
prefetch
push
lcall
scas
movsb
iret
outsl
insb
lea
imul
in
mov
pop
jmp
shl
fwait
lret
push
je
inc
js
sti
mov
movsb
push
pop
rorb
xchg
decl
ds
xor
jl
mov
mov
outsl
jle
jmp
lods
int
fadd
call
outsl
pop
std
insl
xchg
dec
and
push
fisttps
cmp
jg
inc
cmp
out
pop
mov
dec
repz
jmp
inc
dec
popa
std
adc
test
ljmp
cmp
sub
sbb
add
sub
inc
push
jbe
cli
test
pushl
mov
adc
or
les
cmp
or
sahf
mov
adc
lea
sub
lcall
bound
ret
shrl
xor
adc
inc
pop
mov
mov
cmp
sti
push
call
cli
stos
inc
inc
clc
cmp
push
ds
bnd
xchg
cli
jbe
repnz
rcrb
test
out
movsl
cld
xlat
gs
pop
add
pop
xchg
xchg
mov
cld
mov
jecxz
inc
mov
xlat
imul
jmp
leave
out
arpl
sti
cmpsb
mov
das
paddsb
pop
xlat
mov
cmp
sti
pushl
test
jbe
sti
mov
adc
add
inc
clc
loop
add
or
call
sbb
notl
mov
sarb
js
sub
decl
or
loope
int3
mov
lahf
pop
adc
sbb
outsl
popf
xchg
pushl
sahf
test
sub
outsb
xchg
ret
dec
xor
adc
push
lds
xor
icebp
incl
add
xchg
loop
and
popf
rclb
and
movsl
out
and
pop
xchg
icebp
xor
mov
movsl
les
cmp
fidivrl
aam
and
inc
stc
dec
in
fisttps
add
mov
jns
jne
mov
pop
mov
ljmp
xor
fisttps
mov
add
outsb
gs
xchg
mov
add
test
and
pop
mov
das
or
and
push
mov
mov
push
gs
sti
arpl
imul
push
fmull
adc
and
out
lock
jmp
pop
cmc
mov
stc
aas
fwait
test
stos
pop
out
cmp
inc
jmp
mov
outsb
loope
sti
loope
xor
repnz
ss
mov
sti
push
or
adc
icebp
adc
aam
cltd
mov
cmp
fst
loopne
push
push
pushl
jg
mov
aaa
cli
fistpl
or
ds
push
scas
mov
movsb
out
std
push
hlt
lock
cli
or
les
mov
int3
cmc
push
hlt
mov
pop
sub
pop
sub
and
pushl
sub
aad
adc
sbb
ror
pop
sub
jg
decl
xor
lods
call
xor
sahf
std
xorl
sbb
testl
test
xchg
xor
jmp
shlb
popa
test
je
jge
mov
and
mov
loopne
mov
fcomps
popf
xchg
cmpsb
xchg
pusha
imul
mov
mov
push
adc
fldl
gs
je
add
in
sub
cmp
rclb
xchg
and
ss
test
ljmp
and
dec
lret
inc
or
stc
cmpsb
int
and
mov
jl
sub
mov
jne
push
mov
jl
cmp
jl
lcall
adc
lods
mov
in
cs
out
call
jmp
pop
testl
into
jbe
shll
pop
or
in
mov
pop
xchg
outsb
test
adc
pop
lock
mov
lds
pop
das
icebp
pop
call
aad
hlt
xorb
fs
lcall
jecxz,pn
lock
arpl
into
cmc
ss
jae
or
sti
or
xchg
call
lods
dec
pop
mov
nop
inc
imul
mov
xchg
std
das
inc
or
push
idivb
push
std
ljmp
and
sub
push
mov
pop
icebp
cmp
shrl
int3
lock
ret
pop
mov
pop
cs
jg
daa
add
pop
sbb
mov
daa
out
pop
and
mov
jne
or
push
jg
insb
std
or
xchg
xor
mov
call
out
mov
mov
shl
jnp
mov
in
jl
dec
and
clc
jl
xchg
cmc
sbb
mov
inc
mov
pushl
jp
test
cmp
cld
aam
add
scas
lods
imul
add
cmc
pop
mov
push
inc
and
sbb
push
mov
push
dec
in
dec
sub
out
mov
push
ficoml
mov
xchg
pop
mov
mov
cmp
fwait
inc
call
jmp
ljmp
cwtl
jl,pt
adc
inc
add
cmc
mov
jnp
mov
jmp
mov
call
sbb
fsubs
popa
pop
popa
mov
scas
clc
call
incb
or
imul
lahf
pop
cmpsl
inc
test
sub
popf
pop
in
push
pop
cli
call
sbb
mov
aad
ret
jg
jno
pushf
and
mov
cld
sbb
call
mov
pusha
test
jl
sbb
test
orb
clc
out
mov
shr
lods
loopne
mov
icebp
fwait
pop
ljmp
incl
mov
sbb
lea
ja
das
insb
lock
mov
sub
sbb
lret
inc
or
incl
stos
sbb
cmpsb
xor
in
and
xor
pop
clc
aas
lretw
test
inc
mov
push
in
xchg
dec
sub
scas
enter
nop
enter
ljmp
rcrb
add
aas
cmc
cmpsb
shl
inc
lds
es
test
cmp
ljmp
ret
rclb
in
sub
cwtl
pop
cmpsb
aas
stos
dec
cmc
inc
loop
jle
push
and
pop
gs
pushl
test
out
push
insl
xorl
mov
call
add
mov
cwtl
dec
and
xchg
popf
mov
decl
jle
cmp
out
cmpsl
push
sub
fmull
add
movsl
loop
lret
mov
mov
incl
loope
xlat
nop
movsb
mov
mov
cmp
xor
mov
rcrl
sti
adc
jl
cld
push
dec
cmp
mov
nop
lock
jne
into
mov
dec
cmp
jg
adc
jecxz
int3
iret
fadd
rclb
test
xchg
mov
jmp
mov
scas
inc
add
inc
inc
fnstcw
cmp
pusha
pop
test
fimuls
std
out
push
repz
and
je
lahf
insb
xor
sub
pusha
jg
xor
ds
adcl
test
or
inc
dec
mov
inc
nop
fcoms
fldenv
adc
std
pop
jne
fsubs
mov
pop
push
adc
dec
pushf
sub
push
mov
push
pop
lods
dec
xchg
cmp
lret
or
push
jmp
movsb
js
les
rcrb
cmpsl
fildl
pop
sub
xchg
xchg
rol
adc
cmp
pushl
add
lods
cs
mov
insl
ds
rorb
sbb
adc
repnz
aaa
jnp
mov
jle
push
cld
decl
pop
andl
mov
adc
xchg
cmp
fsubrl
scas
lock
add
cmp
pushf
xchg
fwait
xchg
lea
les
lret
lcall
push
notl
mov
aam
jns
adc
loopne
ljmp
dec
out
mov
jp
data16
call
aas
push
adc
pop
outsb
sub
pop
mov
idivb
in
or
mov
in
sub
nop
adc
das
ljmp
test
inc
pop
xor
xchg
jmp
jmp
lea
dec
ret
repnz
daa
dec
test
jp
jecxz
int3
aas
leave
pop
mov
mov
mov
shll
xor
orl
or
mov
ljmp
es
lahf
mov
fs
lret
sbb
push
lahf
adc
mov
fdivrs
pushl
inc
xchg
rcrb
test
push
lds
mov
or
ror
mov
cmp
sti
adc
int
lds
mov
mov
dec
xchg
mov
mov
inc
out
jne
cmp
cmc
vfnmsub132ps
cld
fs
cmc
popa
mov
imul
mov
je
incl
rol
gs
pop
mull
nop
cmpsb
xor
xor
hlt
add
mov
push
jb
inc
fmull
push
cmp
lcall
clc
ficoms
iret
int3
dec
mov
xor
call
lret
ficompl
fdivrl
ljmp
lahf
dec
rorl
loop
add
mov
xchg
mov
popf
fwait
jge
call
test
call
jl
ds
imul
push
and
cmpsb
mov
and
xlat
mov
nop
add
icebp
cltd
push
out
and
call
pop
add
push
mov
ss
popa
aas
pop
sub
adc
mov
lret
call
sub
cmpsb
stos
mov
add
xlat
xchg
fdiv
imul
add
fwait
mov
inc
jp
pushl
popa
ret
adc
ds
or
add
mov
lcall
ljmp
cmp
arpl
adc
dec
mov
xchg
jl
mov
std
inc
mov
loope
or
mov
xchg
and
cmp
lods
lea
mov
push
out
mov
mov
mov
callw
and
inc
jns
call
push
aas
inc
mov
sbb
out
rclb
push
pop
fwait
sbb
jg
xchg
add
lea
cmp
xor
mov
loopne
push
mov
in
popf
and
mov
push
xor
loopne
pmaxub
mov
decl
int
push
push
lods
jo
sub
fs
gs
add
test
call
lds
outsb
test
inc
jp
int
test
dec
mov
jg
jo
outsb
pop
int
and
in
xor
push
pop
push
push
adc
lcall
cli
ret
fdivl
cltd
test
jg
dec
adc
mov
mov
inc
enter
jle
fstpl
fwait
jecxz
cmp
psubb
sub
inc
bound
mov
add
lock
nop
mov
ret
incl
add
dec
sub
xorl
loopne
pop
cmc
ljmp
outsb
stos
adc
pop
out
lea
add
nop
ret
and
or
push
and
outsb
jne
fwait
jae
enter
ljmp
dec
icebp
aad
loop
aaa
jl
repnz
sbb
push
clc
inc
jmp
ljmp
cmp
mov
dec
jo
sbb
adc
out
inc
cltd
mov
xchg
pop
xchg
decl
lds
cli
jae
push
loope
mov
push
addr16
jo
mov
incl
mov
idivb
add
fnsave
mov
test
adc
jl
out
lock
daa
out
popa
les
or
cmp
adc
ja
lcall
decb
cmp
cmp
xchg
ss
xor
xchg
pop
cltd
lock
rol
or
inc
add
incl
jno
ja
dec
xchg
in
pop
xchg
popa
cmp
xchg
add
mov
adc
mov
jo
aas
lret
lret
mov
lods
push
ljmp
test
push
daa
and
les
testl
adc
scas
cli
jmp
mov
fcomp
pusha
cmpsb
push
insb
mulb
mov
or
push
sub
add
das
cli
ljmp
mov
cmpsl
push
pop
inc
pop
push
les
xchg
jb
mov
in
pop
popl
call
xor
mov
fst
mov
cmpl
jns
mov
test
decl
stos
add
sub
xchg
rcr
inc
jns
stos
jnp
in
lcall
or
mov
ficoml
add
xchg
int3
cmp
inc
xor
dec
pop
add
out
clc
push
scas
jecxz
mov
cmp
movsl
cmp
adc
dec
dec
xchg
fistl
test
adc
jmp
addr16
push
repnz
in
mov
xlat
es
sub
test
inc
and
lret
dec
cli
scas
negb
cmc
mov
rorl
out
pop
xchg
fnstcw
xchg
sbb
decl
inc
adc
roll
std
clc
push
mov
xor
ljmp
push
jmp
cmp
das
shll
enter
sbb
andl
xor
cmp
cwtl
gs
andb
in
lcall
adc
pop
jmp
in
mov
push
push
js
adc
sbb
and
fnstsw
fcomip
mov
or
sbb
cs
mov
in
jae
dec
movl
sub
adc
pop
aas
push
sbb
xorb
add
add
push
push
incl
test
push
add
add
mov
in
repz
or
aad
loope
adc
decl
pop
dec
xchg
cmp
int
jmp
mov
or
aad
push
js
lcall
lret
cmpsl
add
pop
push
sti
jge
sub
cmp
loope
bound
push
add
mov
repnz
cmp
push
cmp
movsb
jmp
pop
js
mov
repnz
lret
lods
fisttps
xor
decl
cmpsb
jae
arpl
or
call
cmc
mov
mov
out
sahf
cmpsl
adc
jmp
mov
imul
cmp
ror
bndldx
cwtl
cmc
mov
xchg
fistpll
sbb
leave
decl
das
dec
and
adc
push
movsl
mov
inc
dec
cmc
mov
push
pop
jp
ljmp
jle
test
sbb
es
sub
lcall
pop
mov
push
add
mov
aaa
push
push
pop
dec
pop
dec
xchg
jae
sti
out
in
cltd
scas
inc
sbb
jg
xchg
push
push
fidivl
cmpsb
test
mov
out
push
pop
adc
lcall
incl
out
stc
loop
out
sbb
jb
stos
sarb
xor
sbb
fldl
call
mov
inc
jb
outsb
push
test
and
pop
or
pusha
push
scas
mov
xchg
mov
push
insl
bswap
and
dec
cmc
mov
stos
pop
decl
daa
lock
fcomps
add
int3
cltd
in
out
clc
fsubl
mov
repz
and
loope
sub
push
stc
in
fldcw
xchg
fdivl
pop
lock
adc
sub
lret
and
inc
pop
adc
xchg
dec
iret
hlt
pop
push
call
outsb
in
adc
xor
cmp
push
sub
or
dec
loope
inc
add
cmp
dec
mov
mov
mulb
loope
leave
stos
cmp
fisubl
notb
xor
stos
or
data16
dec
mov
xor
pop
repz
lcall
pop
int3
into
sub
sub
mov
in
rorl
jno
and
xchg
xchg
call
xchg
es
mov
ds
cwtl
lods
cltd
cmc
loope
xchg
and
mov
xchg
adc
or
pushl
cltd
in
jl
cli
or
add
in
rcll
xlat
pushf
or
or
xorb
pushf
shll
sbb
call
mov
test
adc
cmp
inc
out
pop
mov
mov
pop
lahf
ljmp
aad
jl
jge
into
jge
fbld
fwait
jl
push
inc
adc
call
jno
push
ljmp
xor
scas
fdivr
pop
mov
xchg
cmp
daa
or
cmpsb
aaa
cld
ror
inc
push
sbb
fidivrs
dec
inc
cmp
cli
jmp
loopne
xor
mov
pusha
imul
and
sub
adc
adc
push
cmp
xorl
filds
out
xor
repnz
ljmp
and
rcrb
dec
insb
cld
pop
iret
pop
movsl
sbb
jge
cltd
adc
push
enter
lret
fistps
dec
fstps
fisubrs
imul
add
out
mov
cmp
cltd
jmp
lahf
push
pop
pop
mov
lods
repnz
lret
push
out
jge
jbe
es
xchg
dec
xor
dec
dec
push
jp
xchg
sbb
out
or
push
out
mov
cwtl
imul
insl
jbe
jno
dec
xor
shrl
incl
adc
mov
iret
outsl
xor
out
jno
popfw
cli
orl
inc
xchg
je
mov
pushl
test
bound
sbb
adc
fsts
and
aaa
cmp
scas
jmp
or
mov
cwtl
ds
in
fwait
in
mov
dec
push
stos
lods
sub
in
jmp
jne
out
std
daa
insl
in
pusha
es
out
push
or
inc
es
cmp
mov
jge
fiadds
push
cli
incl
dec
pop
mov
jnp
xchg
int
scas
cmp
push
js
aaa
outsb
scas
adc
add
repz
mov
jmp
inc
push
xor
out
decl
mov
enter
sbb
imull
adc
cld
xchg
sub
jmp
add
dec
fiaddl
dec
or
push
lret
icebp
mov
mov
cmp
sub
xchg
decl
jmp
push
mov
out
dec
push
mul
jo
cli
mov
adc
lcall
and
js
iret
sbb
insl
pusha
std
pop
add
jl
pushf
hlt
sbb
jbe
push
enter
incl
and
pop
pusha
sbb
cli
jb
adc
icebp
pop
aad
je
dec
mov
lock
inc
aaa
subl
ficomps
lret
mov
dec
ficoml
xchg
in
std
lcall
es
lods
push
pop
insb
push
nop
jbe
cltd
push
push
fwait
loope
and
loopne
decl
and
cwtl
scas
outsb
dec
inc
xchg
pop
sbb
sahf
push
hlt
jg
fsubrs
std
ljmp
decb
out
jno
mov
test
jle
or
cltd
out
mov
out
gs
js
mov
or
scas
lds
test
and
mov
cmp
xchg
shrl
incl
lcall
inc
push
jns
fcoml
mov
push
sbb
xchg
call
inc
lods
sbb
dec
mov
pushl
push
mov
cmp
jle
pop
je
and
sbb
jb
push
mov
xor
ja
lcall
out
mov
lahf
xor
cltd
ljmp
xchg
clc
jb
xor
in
jl
xchg
push
xor
fildll
notb
push
into
lea
sar
decl
push
shl
pinsrw
data16
cmp
and
xchg
xchg
jbe
adc
lds
inc
cli
lcall
cmpsb
mov
dec
sbb
dec
pop
xor
das
into
sub
inc
xchg
loop
mov
js
movsb
xchg
mov
cmp
mov
dec
jle
mov
in
xor
jnp
or
and
imul
rcll
push
scas
sbb
lret
push
jo
lret
sub
das
or
push
add
imul
loopne
pop
and
in
bound
sub
mov
lods
jne
cwtl
cmc
lods
pushl
xor
mov
cwtl
sub
icebp
push
add
cmp
xchg
lcall
mov
pop
pop
jge
lcall
movb
out
push
xor
fst
idiv
repnz
jae
nop
add
addb
jmp
loopne
inc
stc
push
sub
les
mov
dec
js
cmp
pusha
inc
jp
mov
das
movsb
cmc
mov
daa
in
push
mov
jecxz
divb
pop
inc
pushl
cld
sbb
add
mov
and
xchg
mov
aam
addr16
divb
xor
pushl
sbb
loope
pop
insl
jnp
adc
sub
in
sbb
jg
sub
fptan
and
mov
pop
ret
jne
movsb
pop
cld
sbb
decl
pop
lods
leave
dec
jg
dec
sbb
sub
repz
mov
js
out
fwait
mov
xor
jbe
fwait
and
xchg
dec
test
fsubrl
jb
dec
mov
loope
and
mov
push
jl
mov
out
sbb
movsl
xor
fimuls
ljmp
mov
popl
cmp
cmp
std
shll
addl
mov
aaa
and
or
idivl
call
in
push
jecxz
int3
jecxz
mov
int
sahf
cmp
popa
aas
push
inc
imul
mov
sub
cmc
pop
cwtl
pop
inc
mov
popa
inc
aad
mov
push
rcrl
sub
sub
mov
lods
fcmovu
es
shrl
sbbb
lret
push
test
imul
decl
xchg
sbb
push
insl
xor
xor
loop
mov
push
sbb
xchg
pop
push
ja
inc
loop
push
clc
cmc
jbe
in
enter
fs
inc
cld
xorl
jne
adc
ljmp
mov
movsl
inc
push
adc
adc
div
jne
cmp
fs
mov
jmp
dec
lret
dec
mov
cmpsb
subb
mov
lret
and
out
mov
lcall
sahf
fiaddl
mull
or
jmp
test
cmp
out
pushf
pushl
into
push
mov
dec
and
add
xchg
lret
pop
adc
lret
dec
push
or
std
sbb
mov
adc
sbb
inc
mov
fcoms
jno
sti
call
dec
mov
add
ss
jnp
cmc
int3
adc
mov
test
cli
push
pop
inc
sbb
das
dec
fwait
outsl
sub
and
out
push
jmp
mov
xchg
jl
cld
test
add
testb
mov
incl
dec
xor
xor
dec
sbb
test
add
mov
dec
xor
pop
in
js
loop
mov
pop
repnz
sbbb
repz
sbb
rolb
mov
mov
decl
in
out
ljmp
shrl
xchg
stos
pop
mov
mov
cld
adc
mov
mov
sbb
cmp
jmp
pop
sti
cmp
pop
dec
mov
ljmp
ja
dec
sbb
and
rorl
scas
movsl
add
incl
cld
call
fidivl
adc
ds
pop
dec
mov
pop
mov
stos
pop
addb
dec
lock
xchg
cmpsb
test
subl
outsl
pop
sti
adc
test
lea
lahf
lock
mov
leave
popf
shll
xchg
dec
in
push
push
inc
ret
cmp
fdivrl
pushl
pop
out
add
xor
lcall
jp
sbb
sbb
fildll
jg
lds
jmp
ret
sbb
push
outsl
mov
push
add
mov
mov
mov
decl
mov
lock
xchg
ficoml
add
in
xchg
jo
shrl
mov
sbb
and
inc
dec
pushl
ss
jo
adc
int3
lcall
and
sbb
push
pop
and
mov
movsl
data16
data16
xchg
sbb
sub
test
and
incl
sub
xor
inc
shrl
gs
sbb
dec
add
xchg
aam
rorb
and
cmp
jmp
jmp
test
push
push
dec
push
sets
cli
mov
clc
inc
fstpt
fcompl
mov
mov
inc
dec
jmp
roll
shrl
icebp
loop
cltd
scas
xchg
cmpsl
xchg
jmp
jge
jmp
sub
push
aam
mov
pop
jl
inc
pop
push
es
incb
lcall
sbb
test
jb
and
inc
or
repz
out
mov
adc
in
pushl
out
enter
mov
jae
pusha
add
int3
fcompl
test
decl
negb
lahf
or
aam
push
inc
sub
repz
imul
dec
loopne
call
mov
jl
repnz
xchg
cltd
mov
test
mov
fwait
insl
je
loopne
dec
add
dec
xchg
aam
imul
mov
adc
in
add
fucomip
movsl
ds
xor
cmc
sub
mov
jmp
scas
mov
inc
mov
xorl
out
cmp
pusha
and
pop
mov
pop
movsb
es
in
and
add
mov
or
sbb
pop
stos
sbb
gs
popf
inc
outsl
jo
ret
jo
or
jecxz
pusha
std
lcall
xchg
out
into
or
loope
or
add
mov
xlat
xlat
cmpsb
stos
jnp
out
incb
repnz
jnp
jmp
sub
mov
dec
push
dec
lock
mov
pop
xchg
lock
cltd
nop
add
jg
sti
mov
and
add
pop
lret
sub
sub
add
in
pop
imul
lcall
jae
cli
adc
cmp
repnz
stos
xor
loop
add
xor
cmpb
jge
jg
pop
or
andl
xor
push
dec
fcomi
push
mov
xchg
pop
jne
std
aas
sbb
pop
std
ljmp
prefetchnta
jbe
sbb
push
gs
dec
xchg
clc
jl
cmpsl
daa
ret
jmp
add
cmpb
repnz
cmp
stos
mov
add
push
int
nop
ljmp
call
xor
addr16
ret
fnstenv
xor
mov
push
lea
xlat
push
decl
inc
pushl
das
jp
js
push
and
rorb
decl
aas
jmp
pushf
in
sbb
sbb
xrelease
inc
jecxz
out
sbb
ljmp
out
cmpsb
adc
add
push
into
sbb
enter
pushf
push
sbb
mov
lcall
stos
push
mov
stos
mov
or
push
push
das
stos
out
jle,pn
lcall
and
shlb
adc
outsb
mov
jle
cmp
sbb
out
xchg
cmp
add
incl
adc
pop
xchg
int
out
repz
cmpsb
xor
ljmp
ds
fsubr
xchg
dec
mov
aaa
or
add
pushl
in
and
cli
mov
mov
loopne
pop
sti
lahf
mov
incl
test
sub
and
cmpsl
xorb
rolb
cmpsb
daa
mov
imul
out
mov
jg
mov
adc
xchg
shl
pop
push
xor
pop
jae
jo
data16
decl
pop
adcl
lahf
fdiv
and
push
sti
sub
mov
scas
mov
cmp
pop
cmp
insb
dec
push
push
stc
int
mov
insb
shrb
repnz
jmp
mov
mov
jmp
les
scas
push
imul
adc
mov
fcomp
and
xor
int3
add
xor
fbld
jns
movb
and
and
mov
aaa
rol
pop
push
add
push
xorb
incl
and
cltd
dec
into
rorb
out
mov
out
inc
fcom
ret
jg
jno
mov
stos
sahf
pop
in
xor
jge
and
push
or
in
push
shlb
add
das
cli
sbb
loope
ss
mov
add
mov
loop
sahf
mov
ljmp
rcrb
jnp
movsb
popa
sbb
lahf
mov
dec
aaa
adc
jnp
and
loop
dec
mov
push
push
cmp
subl
mov
pop
in
incl
push
inc
inc
ljmp
loopne
xchg
aaa
jmp
adc
mov
fsubrl
nop
jmp
jp
cmp
jno
ds
sti
fidivs
adc
test
pop
dec
dec
sar
or
mov
mov
cmpsb
fildll
cld
stos
fiaddl
mov
inc
pushf
jg
inc
rorb
dec
dec
push
xchg
lcall
jnp
shlb
inc
jg
pop
sub
ret
and
pop
push
inc
sbb
lea
cmp
push
pop
fs
or
jg
incl
push
xchg
and
jo
dec
push
mov
ret
dec
cmc
test
mov
mov
mov
aaa
pushf
cmp
push
hlt
in
clc
pusha
xchg
sbb
std
lock
decl
and
movsb
or
lea
lock
cmp
inc
shrb
mov
popf
add
pop
cmp
lcall
jae
lret
lods
and
out
jb
xor
lock
js
dec
mov
adc
pushl
or
mov
mov
mov
jmp
sbbb
xchg
jmp
jmp
add
lcall
or
std
loopne
jb
ss
out
pop
or
mov
call
stos
xchg
bnd
lea
pop
mov
push
das
hlt
test
mov
sub
lcall
subb
cmp
cmp
or
mov
inc
and
jg
mov
popl
or
jge
push
dec
fmul
mov
pop
rclb
jmp
xchg
xchg
inc
push
loopne
das
mov
mov
mov
jmp
xchg
mov
sbb
add
adc
mov
and
insb
or
mov
mov
cs
add
test
leave
cli
dec
je
xchg
enter
jp
sub
mov
pusha
shlb
decl
sub
xchg
push
in
mov
dec
test
lods
out
sub
adc
decl
pop
mov
xchg
mov
pop
or
push
dec
add
or
pop
jge
lcall
dec
call
or
pop
push
mov
push
in
push
cli
add
stos
arpl
nop
mov
pop
cs
jb
pop
icebp
daa
loop
or
outsl
cmp
dec
sbb
cld
jmp
mov
mov
jg
fcos
ljmp
lds
mov
dec
inc
sti
and
or
outsl
push
mov
ljmp
fnstsw
mov
pop
fwait
jle
ljmp
sub
test
xlat
xor
decl
icebp
js
je
mov
cs
aaa
popa
loope
sub
and
pop
rcrl
inc
dec
sbb
ret
out
lahf
cwtl
das
lahf
sub
imul
aaa
push
cltd
jp
inc
in
mov
insb
idivl
xchg
aad
and
pop
ljmp
lcall
sar
pushl
loope
inc
test
fldenv
popa
push
inc
mov
cltd
ljmp
bound
push
sbb
and
mov
int
scas
mov
pop
out
and
call
pop
cli
into
aad
push
mov
pop
and
mov
add
push
add
in
jmp
adc
fistpll
fdivs
mov
bound
scas
hlt
es
imul
decl
cmp
xchg
aad
mov
xchg
test
sbb
popf
dec
imul
ljmp
sub
lock
leave
cmp
test
inc
sub
xchg
xchg
lods
jecxz
aaa
outsl
or
ljmp
fcoms
jge
popa
jb
fidivs
jecxz
out
out
cmp
aas
jno
pushl
push
mov
mov
iret
into
hlt
jne
lret
lret
add
cwtl
and
xor
ljmp
ret
fdivs
inc
mov
mov
js
push
stos
dec
daa
adc
hlt
cmpsl
rcrb
cmp
sti
in
or
dec
cmp
fmulp
jnp
sbb
push
mov
cmp
ljmp
jl
xchg
mov
pop
pop
loope
bswap
icebp
out
jg
ret
and
aad
mov
call
cmp
je
and
xor
cwtl
cmpsb
xchg
jb
xor
test
sahf
insl
mov
popf
ja
incl
mull
inc
mov
fisubl
test
inc
testb
pop
dec
xchg
lods
ljmp
mov
scas
xchg
jae
inc
inc
lods
int
xchg
jmp
push
inc
fs
ds
mov
loop
cmpsb
outsb
push
xchg
jb
mov
data16
sti
ljmp
and
xor
pop
jo
xchg
popa
cmp
mov
fistpll
rclb
or
adc
sbb
jae
mov
push
cwtl
cmp
and
cmp
cld
jmp
sbb
sbb
push
imul
aam
sub
jp
pop
jnp
decl
popf
xchg
xchg
int
outsb
mov
add
test
push
in
bound
fists
loope
jmp
es
sbb
fstpt
movsl
in
in
cld
jbe
jae
cmp
inc
jae
jbe
ds
nop
sarl
mov
sub
icebp
push
sar
pushl
ret
imul
mov
roll
adc
adc
dec
repnz
cmpsb
mov
aas
icebp
add
outsw
cld
add
ror
addb
jle
jge
dec
shr
ret
mov
mov
stos
dec
jge
mov
in
dec
inc
jmpw
inc
jns
cli
es
icebp
push
in
imul
mov
xchg
es
pushl
jg
push
mov
das
fstpt
out
nop
mov
aaa
jbe
adc
sahf
data16
fdivr
lcall
pop
daa
ds
add
pop
pop
fcoml
push
xor
insl
repz
ficoml
stos
bts
fistpl
push
dec
xor
in
pushf
fs
jle
pop
jmp
insb
adc
hlt
adc
fwait
xchg
clc
adc
jle
iret
xchg
setb
jae
jmp
add
cwtl
jmp
nop
outsl
push
cmp
dec
mov
out
cmpsb
push
scas
cld
jg
inc
outsl
mov
mov
insb
cmp
dec
dec
ljmp
out
xchg
push
repz
adc
add
pop
out
test
test
iret
iret
jecxz
cmp
sarl
sbb
mov
decl
scas
push
jne
cmp
mov
out
xchg
inc
push
fstpl
cld
push
mov
lcall
popf
insl
enter
push
push
nop
ja
cld
int3
xor
push
std
jp
icebp
addr16
je
pop
imul
pop
scas
push
mov
lret
scas
xchg
fldenv
sub
cmp
jl
push
inc
jo
call
xor
push
mov
std
adc
in
mov
jmp
xor
clc
or
rol
lcall
lods
mov
dec
lcall
std
push
xchg
push
pop
mov
loop
sahf
add
loope
jg
dec
jg
mov
imul
cmpl
adcl
lcall
int3
inc
xchg
inc
jno
repnz
and
mov
or
mov
sbb
pop
jecxz
and
dec
adcl
int3
imul
fldcw
push
fs
push
addr16
lahf
scas
pushf
adc
push
sti
mov
mov
cmc
das
push
shll
jp
mov
or
testl
push
inc
enter
insl
sbb
pop
shrl
push
popf
add
xchg
jmp
es
sbb
fsubrp
aaa
pop
pop
negl
jle
pop
stos
pop
test
add
cli
push
enter
cli
dec
or
mov
sub
test
mov
rcl
je
mov
pushl
jne
nop
add
test
nop
pop
loopne
mov
popf
jmp
ss
stos
mov
xchg
call
sbb
xor
push
mov
mov
add
sbb
mov
mov
fdivrs
cld
js
dec
adc
pop
dec
shr
adc
and
subb
ss
mov
out
push
lcall
and
daa
dec
outsl
subl
ret
call
mov
fiaddl
icebp
add
xchg
adc
fisttpll
js
mov
xor
std
pop
loopne
flds
xor
dec
mov
mov
or
pop
adc
add
sub
movsl
push
imul
mov
arpl
lock
inc
sahf
je
hlt
sub
out
lock
lds
cmpsl
sub
dec
je
push
or
dec
cmp
pop
sub
mov
lcall
popf
and
jo
das
lret
fimull
imulb
dec
and
loop
jno
stos
lahf
ret
loopne
mov
paddusb
std
mov
xchg
pop
les
and
js
mov
push
call
dec
jbe
int3
dec
inc
dec
push
test
fdivr
imul
loop
lods
bound
jbe
jp
movsl
out
flds
enter
and
push
ljmp
fldl
mov
or
mov
incl
gs
aam
xlat
mov
mov
dec
mov
popf
in
push
sbb
decl
add
adcl
stos
daa
and
cmp
inc
cmp
test
scas
imulb
fwait
sub
test
call
lods
ficoms
xchg
data16
jle
fidivrs
stos
aam
lods
data16
fwait
insl
sbb
push
cs
push
mov
add
xchg
lods
xchg
jecxz
leave
call
jl
push
push
cmp
or
das
xchg
xchg
fnstcw
or
int3
rorb
test
mov
xchg
xor
idivl
mov
xor
mov
mov
clc
sub
jmp
sub
jge
scas
pop
cwtl
jns
jmp
and
mov
xchg
inc
sbb
movsb
cld
lock
ja
sbb
push
cmpsb
loop
dec
xchg
shr
cmp
lcall
call
aaa
jmp
push
cli
hlt
pop
js
das
dec
aam
scas
add
mov
push
out
jge
adc
push
mov
aas
lahf
or
inc
push
jmp
call
dec
cmp
lcall
loopne
mov
int3
addr16
mov
pop
jmp
jbe
in
addr16
incl
insl
pop
rcll
lods
sti
inc
sbbl
fiadds
cli
mov
stc
rclb
xchg
dec
add
mov
cmpsb
adc
jae
inc
scas
popf
ret
add
jl
pusha
sti
notb
mov
insl
adc
arpl
insl
mov
fwait
subl
ds
jg
cmp
jle
cmc
sbb
sub
mov
sbb
and
call
xchg
out
and
xor
shll
lods
or
push
dec
call
call
mov
cmc
or
dec
mov
lcall
imul
fnsave
mov
adcb
lret
sarb
mov
xchg
js
jb
sbb
mov
incl
inc
xchg
and
stos
outsb
jns
sarl
je
sub
in
decl
mov
sbbl
cld
mov
aam
outsl
xchg
cltd
ljmp
add
mov
pop
cltd
sub
hlt
mov
xchg
or
pusha
pop
sub
out
dec
pop
pushf
adc
jmp
pop
push
mov
lret
stos
inc
xor
xchg
insb
or
movsb
aas
fcoms
mov
incl
and
jg
fcompl
int
xchg
insb
cmp
and
or
out
nop
sub
ret
nop
lods
int3
mov
arpl
shrb
int
mov
adc
icebp
test
fcomip
mov
mov
in
lods
inc
movsb
mov
sbbb
sub
and
cmp
add
lock
pushl
jne
sub
cmp
gs
ja
pop
pop
xor
shlb
incl
movl
sbb
test
pushl
push
mov
or
add
fdiv
out
mov
rorb
cli
fcomip
data16
fs
nop
cmpsb
sbbb
sub
mov
out
push
insl
in
das
ret
mov
cwtl
jp
and
outsb
subb
out
fcoms
in
fwait
nop
movsb
orl
pop
dec
sbb
adc
stos
jp
stos
sub
cs
mov
dec
mov
ljmp
add
push
push
xor
inc
sahf
mov
in
ds
call
call
cld
mov
aaa
nop
cwtl
cmc
push
adcb
cs
add
cmc
mov
mov
arpl
jg
push
cwtl
mov
jb
cld
cmp
incl
pop
popf
xchg
addr16
mov
mov
insl
push
stos
std
std
jmp
pushf
ret
push
mov
outsb
pop
jle
out
mov
cmp
cli
cwtl
js
jl
push
jns
add
mov
loop
movsb
mov
nop
sub
aas
jp
and
cs
fcos
lcall
cs
nop
addr16
pop
std
jo
jmp
fwait
iret
pop
inc
cld
daa
sub
daa
pusha
push
jno
or
cmp
mov
das
inc
mov
cmp
clc
cwtl
mov
lea
cmp
bound
pop
lcall
repz
cmp
clc
jp
ds
loop
add
mov
add
push
pop
and
cmp
icebp
pop
hlt
call
lock
aas
mov
rcrl
add
paddb
in
repnz
incl
push
sub
pop
push
cmp
shlb
pop
mov
fcomps
sahf
xlat
xchg
cmpb
inc
scas
roll
pop
jmp
add
sbb
test
jge
mov
test
xchg
dec
sbb
pop
adc
lds
fcoml
ljmp
mov
mov
mov
cmp
andl
add
out
in
stos
daa
jae
lcall
xsha256
cmpsb
push
xchg
sbb
scas
mov
mov
jle
sub
ljmp
scas
xor
dec
inc
inc
movb
add
repnz
adc
push
xor
adc
jmp
jmp
sbb
fucomp
jb
dec
andl
cld
and
adc
or
pushl
mov
xlat
sbb
loopne
sahf
loop
dec
or
inc
cmp
mov
lcall
lret
mov
and
jg
push
insb
inc
fmull
loopne
lcall
fwait
aaa
jbe
sub
and
incl
or
lds
mov
loop
fbld
jmp
pop
aam
dec
jnp
es
mov
test
push
popa
in
jmp
incl
push
adc
lahf
test
push
imul
das
adc
mull
cltd
cmc
ljmp
hlt
and
xor
mov
inc
xor
sub
mov
cmc
sub
lcall
fisubl
xchg
mov
dec
add
shll
inc
sbb
movsl
dec
adc
cmpsl
mov
outsb
mov
pop
mov
and
fcomps
mov
int
call
rcrl
add
sarb
xor
push
in
jp
xchg
pop
push
out
mov
fdivs
shrl
mov
add
cmpsb
mov
xor
lahf
ret
push
cld
popf
xor
adc
fcompl
jmp
jnp
xor
in
cltd
shrb
jae
fldt
xor
ja
popf
mov
fmuls
daa
outsb
fcoml
pop
cmp
rol
xchg
addr16
lret
push
ret
pop
add
call
pop
pop
or
push
lods
dec
loop
out
sbb
shll
imul
adc
pushl
cltd
arpl
in
push
rcrb
cmp
dec
pop
fs
cmc
cmp
outsb
aad
dec
jp
or
push
je
xor
icebp
out
in
jmp
inc
sti
sti
jp
xchg
sub
push
daa
mov
hlt
dec
inc
mov
ficoml
lcall
incl
pushf
arpl
pop
pop
push
in
cwtl
xor
cwtl
or
dec
lock
jmp
adc
out
incb
iret
aad
movsb
daa
jne
sbb
or
sarb
lock
repnz
insl
dec
addr16
push
fisubl
test
add
jg
pushl
int3
dec
mov
nop
out
mov
push
mov
push
insl
ret
pushl
cmp
cmp
repz
shrb
sbb
mov
daa
add
loope
decl
mov
push
mov
mov
or
mov
jb
or
loope
adcl
pop
push
mov
lcall
sub
xor
push
mov
out
mov
sbb
pop
stos
jbe
addr16
loop
mov
decl
jnp
xchg
mov
fnstcw
xor
jg
push
xor
mov
mov
sahf
cmpsl
and
sti
cmp
jno
idivb
inc
mov
xchg
or
mov
clc
push
cmp
jns
lcall
jne
push
ds
incl
pop
adc
xchg
jge
ret
dec
fwait
sub
and
cmp
mov
pop
cmpsl
arpl
pop
aam
ss
das
andb
jg
or
in
pusha
stos
nop
lock
out
addl
jp
call
jmp
cltd
arpl
fisttps
add
or
jge
mov
mov
cmpsb
outsl
popf
stos
dec
mov
cmp
mov
aam
int
sbb
add
mov
arpl
movl
adcb
call
div
mov
mov
pop
pop
cmp
jo
clc
pop
mov
push
incl
push
fadd
sbb
scas
or
add
loop
xor
in
loopne
fs
xor
icebp
push
inc
sub
fimuls
das
cltd
xchg
sti
aas
dec
jno
fcmovnbe
mov
addr16
mov
or
rclb
push
jns
sub
jmp
loopne
pop
ss
mov
insb
mov
jge
cmpsb
movsb
push
inc
mov
push
mov
inc
stos
inc
test
ds
cli
ljmp
mov
inc
cmp
lock
ficomps
mov
and
mov
jnp
in
push
or
lret
push
push
incl
scas
adc
inc
fs
mov
cmp
push
mov
mov
and
clc
call
xor
jecxz
cmp
jnp
sbb
data16
into
jle
add
or
shl
ss
jp
ja
xor
stc
adc
fbld
in
ss
mov
popf
dec
add
loopne
jg
jae
push
and
addr16
or
sub
cmpsb
mov
mov
xor
pushl
mov
enter
cmp
jp
cli
mov
inc
sbb
cld
fcos
mov
pushf
mov
or
fdiv
aam
mov
gs
iret
loop
pop
jp
xor
loope
jmp
mov
mov
mov
setae
cli
inc
add
mov
lcall
inc
sub
cmp
push
pop
mov
pop
ss
push
or
add
jmp
and
xorb
insb
dec
popa
jmp
clc
mov
xor
xchg
aad
ja
and
cmp
mov
cmpsb
mov
cld
inc
jg
push
dec
inc
add
or
push
push
sbb
repz
ljmp
and
add
dec
cmp
xchg
insb
sub
popa
lcall
clc
cmp
cmpsl
adc
data16
adcb
jmp
jmp
sub
decl
lock
add
cmp
push
cs
jno
and
iret
sbb
out
iret
jg
movsl
mov
xchg
out
pop
xchg
cmpsl
jl
pop
outsl
movsb
js
jb
jmp
popf
xor
cmpsb
std
pop
lods
sub
lcall
jge
and
sub
mov
and
mov
mov
mov
ljmp
ds
scas
data16
insl
ds
js
test
lea
mov
pushl
adc
outsl
xor
lahf
iret
jp
test
bnd
icebp
mov
aad
call
jno
xor
xchg
lret
call
mulb
inc
push
stos
push
shll
mov
jmp
inc
mov
mov
dec
les
mov
mov
dec
insl
fldcw
sahf
mov
xchg
into
adc
push
out
insb
pop
dec
dec
fwait
lcall
jmp
push
in
jae
fdivs
inc
cltd
aam
dec
dec
aam
stos
push
cmp
js
push
sbbl
int3
push
dec
pop
outsb
inc
xor
xor
lods
in
mov
pusha
cltd
mul
rolb
push
jnp
sbb
insb
mov
call
and
std
sbb
sahf
sbb
or
fsts
imul
shlb
sub
andl
inc
add
mov
xchg
outsl
call
jae
fstps
les
push
cmc
xchg
jne
jle
dec
push
out
testl
dec
mov
in
jnp
mov
pop
cmp
pop
sbb
push
mov
xor
sub
orb
out
out
andb
mov
sub
popf
xchg
out
add
jb
and
outsb
and
dec
scas
and
sbb
fdivr
jl
or
jo
add
adcl
cld
push
imul
mov
in
pop
dec
add
xor
xor
shlb
leave
jo
push
jp
cmp
loop
push
push
jnp
aaa
cld
scas
sbb
xlat
les
mov
and
jg
call
fildll
push
dec
mov
scas
lahf
das
sub
push
roll
cli
jmp
jnp
movsl
jnp
xorb
lods
push
shll
std
iret
xchg
lcall
int3
sahf
inc
or
imul
cli
xchg
test
lcall
push
push
fs
dec
inc
outsb
imul
inc
dec
test
xor
movsb
lret
dec
mov
lcall
xor
ss
clc
sti
inc
std
stos
out
cmpsb
hlt
frstor
push
push
lock
pushl
ljmp
hlt
adc
xor
sbb
dec
push
daa
jge
and
test
test
imul
add
mov
push
imul
add
int
jmp
incl
mov
push
lcall
std
push
nop
ja
pop
xor
mov
lcall
adc
push
push
xchg
jnp
mov
rcr
push
scas
shll
xchg
mov
call
mov
mov
aad
mov
rclb
jle
je
jmp
mov
scas
mov
pop
push
out
push
and
aaa
std
mov
ret
clc
rolb
addr16
in
sub
mov
xchg
sar
decl
je
cltd
xchg
lods
pop
in
pop
iret
or
shl
mov
inc
or
test
push
sub
pop
insb
fcompl
xor
fisttps
xor
mov
shrl
or
negl
aad
mov
dec
outsb
fcomp
les
cmp
aas
outsb
mov
in
sub
push
dec
and
call
xchg
xor
jb
ret
lret
arpl
mov
gs
fs
popf
movsb
loopne
incl
mov
fsubr
xor
sub
xlat
sub
and
decl
sub
icebp
jbe
loop
das
mov
in
mov
mov
cmp
and
mov
inc
push
dec
arpl
or
push
cmpsl
icebp
mov
mov
cmp
push
insb
jbe
jl
push
shlb
mov
jecxz
xor
xchg
insl
xchg
mov
jno
mov
and
mov
pushl
adc
cli
fisubl
add
push
loopne
inc
and
bnd
decl
pop
ljmp
mov
mov
iret
xor
inc
and
cmp
adc
jl
sbb
sub
imul
add
xchg
add
cli
decl
lea
or
jne
pop
fldt
jp
sbb
jmp
xchg
fldcw
or
sbb
adc
jmp
in
fwait
xor
push
lods
lcall
xchg
sbb
popf
xchg
and
xchg
arpl
scas
push
mov
mov
das
repz
roll
sub
jo
lods
inc
or
jg
pop
xlat
mov
adc
stos
inc
or
ljmp
clc
nop
jo,pn
push
pop
or
rcrb
loop
cwtl
mov
ljmp
push
out
inc
stc
icebp
jmp
mov
in
pop
inc
pop
repnz
insl
in
fidivrl
adc
sar
fistpll
dec
xchg
jmp
or
incl
add
jle
lret
add
mov
push
loopne
sbbb
jge
jecxz
leave
fmul
jnp
ljmp
inc
or
fnsave
je
mov
jb
lea
pop
loopne
inc
jmp
into
pop
xchg
cmp
mov
loope
sub
mov
adc
dec
push
in
cli
push
shl
mov
sti
jno
ljmp
js
mov
pop
icebp
cmp
outsl
dec
bound
add
xchg
add
shlb
cmp
hlt
gs
mov
call
in
gs
gs
ja
mov
inc
ret
push
add
mov
inc
cmp
dec
xchg
cli
stos
mov
sub
bound
les
stos
clc
mov
addb
movsb
call
out
shlb
pop
lcall
pusha
std
or
int3
clc
mov
inc
roll
fdivr
mov
xor
dec
ss
pop
mov
mov
cld
pushf
andl
lahf
jae
jp,pt
push
mov
pop
mov
cmc
xchg
ret
aam
mov
call
fcompl
mov
int
push
cmp
or
iret
sti
pop
aas
jle
or
sub
mov
lcall
int3
inc
and
push
inc
scas
arpl
mov
jae
jno
sub
pop
ja
incl
jle
ret
sti
dec
xor
dec
pop
mov
jns
cld
add
movsb
mov
repnz
decl
and
popf
mov
pop
xor
clc
shlb
xlat
fs
decl
loop
jbe
xor
inc
fistps
fwait
dec
std
add
aad
mov
jb
cltd
int
cmp
mov
jne
xchg
mov
aam
test
push
lock
sbb
mov
in
cmp
arpl
scas
inc
or
and
fdivr
fcomip
fcoml
sbb
mov
dec
cmp
in
cmp
daa
or
lcall
mov
xor
jnp
or
push
cmp
in
add
pop
or
insl
dec
out
clc
mov
push
push
adc
cli
add
push
mov
add
jnp
fcomip
mov
or
aas
cmpb
cmpsb
loop
and
sub
cmp
pushf
mov
shr
fisubrs
movsl
lcall
outsl
or
dec
cmp
and
jae
test
das
ja
fldcw
je
gs
mov
cli
mov
pop
fistpl
in
and
dec
add
adc
or
lret
ja
popf
cmpl
sub
and
xor
push
xchg
xchg
mov
iret
or
xchg
push
jl,pt
leave
xchg
pop
ds
icebp
js
es
mov
stos
xchg
mov
clc
pop
xchg
jbe
cmc
jl
adc
mov
jge
int
cmc
jmp
mov
movsbl
mov
jge
iret
and
je
arpl
lods
ret
lcall
jp
fisttps
pop
push
es
ljmp
std
fistl
outsl
test
scas
xor
cmc
incl
and
aam
std
sbb
out
cmpl
fdivs
mov
jmp
cli
das
inc
sub
ljmp
call
ds
mov
enter
push
dec
cmp
icebp
jmp
cmp
int
cs
clc
mov
or
inc
lds
pusha
xchg
sbb
iret
sub
xchg
lods
push
outsb
fsub
jp
and
xchg
pop
or
mov
jle
pop
in
push
add
dec
pushl
xchg
inc
std
sbb
bnd
xor
int
sbb
in
gs
xchg
push
xor
test
fcomip
lcall
xor
add
fstp
leave
jbe
test
push
inc
test
outsb
and
clc
jns
jp
mov
jae
les
push
and
push
or
pop
or
inc
stos
mov
scas
fs
xchg
movsl
push
cmp
stos
lcall
arpl
add
ljmp
xchg
xchg
push
sbb
rcll
loopne
xchg
xor
lea
mov
lcall
aaa
testl
mov
xor
subl
jmp
mov
sti
pop
mov
xor
cmp
jl
mov
pop
ljmp
jo
sbb
dec
leave
int3
es
and
andb
cmc
fcmovne
xchg
or
mov
sar
fsubl
cwtl
sbb
or
cmpsb
imul
lcall
js
sub
popf
dec
fwait
jne
mov
aas
pop
dec
arpl
fisttps
data16
std
sub
movsl
jge
jne
sbb
lods
pushl
pop
jp
pop
push
cmpsl
clc
or
or
mov
rcr
jg
out
cld
idiv
incl
dec
out
jo
mov
jmp
and
push
adc
je
fisttps
pushl
loopne
adc
jmp
push
mov
rcl
jns
add
out
in
mov
jg
fdivrl
lret
cli
sbb
adc
movsl
xchg
sti
push
jnp
add
das
int3
decl
cmp
jns
sbb
lods
call
loopne
or
int3
cmpsb
mov
sbb
ljmp
xchg
dec
cld
push
dec
imul
mov
fs
jp
sub
fdivl
aam
lcall
mov
aad
test
out
pop
fists
sub
xor
inc
adc
or
jns
mov
sub
das
clc
inc
out
sub
or
and
xor
rorl
mov
pushl
pop
sbb
roll
xor
in
jbe
cmp
jecxz
push
or
aas
mov
push
mov
inc
icebp
push
aam
aaa
xor
test
incl
data16
daa
adc
mov
cmpsb
add
movsb
std
idivl
cmp
mov
jns
and
std
repnz
out
jae
cmp
shr
leave
lods
xorb
mov
or
mov
sub
jne
loopne
arpl
xor
ljmp
aas
cli
push
fisttpl
add
xor
andl
lahf
jno
sub
ljmp
xchg
pop
sarl
inc
mulb
sub
xchg
push
jmp
sbbb
ja
out
adc
fists
sub
lret
push
divb
mov
jmp
out
ss
stc
xor
add
outsl
movsl
ret
xchg
inc
das
xchg
pop
imul
dec
push
enter
xlat
mov
incl
add
ljmp
xor
jno
ret
push
jae
jl
xchg
add
adc
popf
mov
push
ljmp
mov
mov
ss
add
mov
lods
pop
push
gs
cltd
mov
scas
cmpsl
rol
pop
subb
xor
push
cmp
add
pop
ljmp
mov
cmc
xor
inc
pop
cs
ljmp
daa
mov
sbb
dec
test
add
pop
scas
push
mov
mov
sbb
jle
aas
jnp
mov
sub
sbbb
and
into
push
cwtl
cltd
lahf
or
cwtl
fnstsw
push
sbb
jg
cld
in
or
out
outsb
test
pushl
mov
cld
adc
dec
stos
insb
xchg
dec
lods
out
jecxz
rorl
subl
ljmp
faddl
inc
push
imulb
mov
adc
cmp
dec
aaa
lahf
lahf
cmp
cmp
cmp
xchg
imulb
sub
xchg
fdivr
ds
ljmp
mov
out
xchg
mov
nop
inc
push
pop
das
push
ret
mov
xchg
mov
mov
cli
and
pushl
fmul
mov
jns
mov
or
lock
fwait
ret
jp
sub
loop
sbb
xor
fldt
shl
sti
pushf
ljmp
sti
pop
mov
fcompl
jmp
push
jle
xchg
std
imul
cmp
outsl
or
hlt
adc
pushf
cmp
add
orb
mov
cmp
push
mul
fdivrl
adc
mov
loopne
jb
adc
or
aas
or
jmp
lock
decl
mov
xor
out
ret
mov
psubd
shr
push
cmp
std
test
lcall
cmp
pop
adc
jecxz
incl
test
sub
nop
xor
mov
push
pop
xchg
push
pop
inc
in
dec
jns
sar
mov
loope
test
jb
cwtl
inc
mov
jmp
push
sarl
fwait
pushf
and
dec
mov
mov
push
aam
shr
out
mov
aad
cmp
aam
mov
pushl
adc
ss
lods
cmpsb
leave
into
xlat
les
mov
decl
adc
add
inc
loop
in
pop
or
jge
decl
xchg
lds
aad
int3
and
rcrl
push
inc
fnstsw
pushl
jns
ret
adcl
mov
push
add
cmc
cmp
pop
push
daa
dec
mov
push
push
and
std
xchg
xor
cld
in
push
shl
and
loop
pushl
aas
scas
mov
jb
add
mov
movsb
push
rcrb
mov
idivl
dec
lods
and
fcmovnu
xchg
dec
movsl
les
and
sub
xchg
pop
xchg
ljmp
cwtl
inc
and
cs
aaa
cmp
dec
xor
fldl
call
call
or
pushf
adcb
xchg
cli
test
cmc
dec
jge
add
lcall
pop
or
jg
inc
adc
js
mov
pop
fdivr
ljmp
jb
xchg
outsl
xchg
mov
dec
mov
outsb
test
xor
idivb
dec
push
sub
adc
ret
out
push
xchg
jbe
push
jl
push
incl
loopne
call
stos
data16
push
sub
mov
add
in
ljmp
clc
add
ss
cmp
out
xchg
je
or
jl
cmp
gs
pop
mov
add
popf
popa
repz
into
lods
sub
cmpsl
in
frstor
call
aad
cmp
cli
adc
fcoms
fistpll
pushf
adc
in
and
pop
and
in
dec
popa
insb
fdivrs
push
adc
cmp
pop
push
dec
in
mov
repnz
call
dec
jp,pt
ja
and
andb
inc
filds
mov
jb
or
in
xchg
add
cmp
mov
pop
cmp
data16
dec
lods
cmpsb
jbe
push
ret
xchg
xor
jns
add
pop
movsl
xchg
cmc
mov
call
enter
fwait
loop
xchg
mov
xor
fldt
push
aaa
sub
push
push
sbb
lcall
mov
sbb
pop
and
xor
push
xor
sbb
lds
inc
cmp
sbb
sbb
ljmp
xor
xchg
fsubrl
cwtl
lods
xor
fwait
mov
adc
call
adc
cmc
cmp
pop
mov
mov
insl
rorb
mov
push
imul
out
fisttpll
pop
cmc
mov
std
mov
sti
daa
inc
movb
lcall
cltd
sbb
cmpsb
in
jns
push
lds
leave
and
pop
loope
rcll
mov
test
pop
in
pop
mov
cmp
jbe
mov
cmp
xor
push
push
ljmp
sub
xchg
scas
pop
mov
stc
xor
lcall
pop
mov
stos
rcrb
cltd
inc
int3
mov
fiadds
lcall
jae
sub
and
gs
and
inc
std
cmc
xchg
lods
mov
in
lock
incl
lret
aaa
cmp
push
pop
dec
lcall
mov
xchg
jg
out
std
jo
daa
notb
std
xor
or
add
movsl
sti
ljmp
clc
push
jne
mov
adc
lret
pop
jg
mov
sbb
sub
adc
xlat
jl
cmp
fisttpll
xchg
lods
in
add
or
aam
and
sbb
pushl
xchg
fs
aam
imul
xchg
pop
test
pop
js
hlt
mov
pushl
mov
add
addl
mov
insl
sub
xchg
ljmp
decl
fnsave
dec
pushf
jno
or
dec
mov
mov
icebp
cmp
mov
pushl
push
cld
inc
ss
les
pusha
jp
rcl
cmpsb
mov
ds
jmp
mov
add
negl
sub
sbb
lcall
xchg
lret
sbb
in
popa
pop
adc
pop
cmp
jmp
or
pusha
mov
dec
pop
lods
stc
push
jl
and
xchg
push
cltd
mov
add
push
ljmp
jp
mov
push
mov
mulb
sahf
sub
loopne
cld
js
dec
loopne
xchg
rcrb
call
dec
ljmp
mov
or
js
cmp
sub
call
xor
xchg
outsb
push
ds
jo
ret
adc
pusha
ss
pushl
mov
imul
fucomip
rclb
xor
and
adc
cs
fs
call
and
sub
or
jns
arpl
shl
cmp
loopne
sbb
lcall
cwtl
pop
out
int
adc
adc
push
jp
add
add
loopne
pop
clc
test
fcoms
mov
mov
cmp
call
repnz
outsl
pop
and
xchg
pusha
or
jmp
or
cmpsb
iret
or
or
decl
popa
loop
push
lret
sub
popf
inc
mov
jmp
lcall
stos
cmpsb
jl
seto
fsubs
enter
xchg
or
xchg
adc
xor
push
clc
incl
pop
js
jmp
mov
das
in
and
push
pop
out
repz
icebp
pop
mov
das
sar
push
sbb
pop
jmp
bound
sbb
xrelease
mov
call
aad
mov
hlt
rorb
xchg
mov
cmp
dec
jbe
cmp
incl
jp
jle
mov
xor
adcl
mov
xchg
push
cld
pop
fmull
movsb
pop
ljmp
imul
mov
nop
push
ljmp
lea
cld
inc
scas
int3
lret
pushl
pushf
cmp
jbe
into
stos
imul
adc
leave
push
stc
std
inc
fsubrs
push
leave
inc
int
orl
or
sbb
cvtps2pd
dec
arpl
test
push
js
sbb
inc
lds
mov
dec
sub
ficomps
jb
or
push
loope
cmp
inc
and
loope
mov
call
daa
out
cs
sbb
xor
fidivs
lea
outsb
push
fistps
xor
decl
inc
sub
fcoms
cmpb
inc
subl
adc
test
fildll
and
cmpsb
xor
insl
fwait
ss
xchg
dec
enter
std
mov
std
mov
nop
out
jno
fst
stc
clc
imull
mov
mov
add
jb
or
std
jg
adc
xor
push
and
mov
pusha
cli
loope
das
mov
cmp
ljmp
adc
mov
jns
and
leave
dec
mov
inc
sub
add
ljmp
dec
ljmp
lret
pusha
cmp
lret
or
push
inc
sar
incl
subb
xor
sub
mov
repz
sbb
fstl
cs
test
pushl
push
xor
add
pushf
add
out
subl
inc
addr16
lcall
fisubl
cld
mov
xchg
or
jno
orb
fdivrl
pushl
cmpb
push
sbb
jb
mov
xchg
aaa
ds
mov
fdivrp
incl
mov
rorb
daa
xchg
mov
mov
in
lret
mov
incl
dec
stc
lea
and
mov
inc
into
lea
dec
push
jge
sarb
decl
frstor
clc
out
nop
popf
es
add
inc
xor
mov
push
cs
mov
push
sub
cwtl
addr16
outsl
cmpsb
add
scas
adc
sub
mov
popa
popa
adc
jmp
outsb
add
in
rcl
cmp
fwait
out
mov
cmovle
aas
std
loopne
daa
sbb
insl
or
xchg
iret
bsf
mov
movsl
add
or
fcoms
in
cmpsl
jecxz
stos
lcall
lods
pop
rorl
outsb
les
into
xlat
adc
add
xchg
ljmp
stc
or
and
mov
loop
les
in
add
fldcw
cld
ljmp
pop
push
sub
fmul
cmp
sub
inc
sti
je
shrl
add
in
inc
cmpsl
bound
inc
sahf
mov
ds
mov
push
adc
ds
fistpll
ret
mov
jmp
pop
pop
xor
lret
adc
test
sbb
sub
sar
lcall
and
add
cmp
int3
aas
and
out
dec
int3
fwait
push
pop
mov
fucomp
adc
decl
scas
imul
flds
add
push
push
mov
mov
and
xchg
cmc
incl
sub
and
xchg
test
cs
inc
cli
and
mov
xchg
cmp
fcompl
test
addr16
lea
ljmp
scas
movsl
fwait
mov
dec
xorl
rcrb
sub
push
sbb
scas
cmpb
jmp
push
cld
inc
mov
sbb
rclb
jno,pt
pop
adc
xchg
loope
sbb
or
or
lods
ficomps
pop
repnz
xchg
out
pushf
push
xchg
mov
xor
data16
sbb
and
and
aas
insl
mov
stc
fs
pop
stc
loope
jl
stc
call
xor
mov
mov
add
outsl
or
jbe
jl
jp
cmp
cmp
inc
das
adc
mov
jmp
ljmp
jl
mov
dec
mov
insl
test
mul
pop
outsb
pop
or
adc
in
jno
call
mov
dec
outsb
popf
out
iret
sub
cltd
fs
ret
mov
stc
inc
or
dec
pop
jae
sub
jnp
mov
jns
mov
lea
xchg
push
xchg
mov
mov
pop
push
xor
cs
cld
stos
stos
clc
or
in
in
xor
int3
movl
adc
fs
aas
outsl
addr16
andb
lea
cs
jle
clc
icebp
out
fcoml
out
shl
dec
mov
jmp
cs
mov
xchg
cli
lds
stos
nop
push
mov
cld
jmp
pop
and
icebp
fs
insb
pop
push
jl
push
in
pop
loope
mov
incl
add
pop
clc
jb
jg
pop
test
fs
and
jmp
fwait
pop
jb
mov
int
push
shlb
dec
or
out
jl
mov
lcall
jecxz
inc
adc
cmp
sbb
stc
adc
or
in
cli
push
dec
iret
xor
inc
nop
cwtl
jmp
xchg
sub
jb
mov
cmp
sbb
and
push
std
mov
sbb
and
in
mov
pop
adc
pop
push
fisttps
jmp
xor
add
fs
in
leave
pop
lods
dec
imul
in
cmp
andl
js
adc
sbb
cwtl
pop
or
les
xor
inc
loopne
jmp
mov
stc
or
xchg
pop
cmp
stos
jecxz
cmpsl
and
mov
ljmp
cmp
pop
xor
mov
xchg
lret
mov
xlat
js
rcll
clc
inc
enter
pop
jo
pushl
loop
cmp
push
test
pop
sbb
cld
sub
or
sbb
imul
ljmp
outsb
decl
jecxz
pop
out
push
out
iret
fstps
test
sar
cli
push
cmp
pop
jmp
insl
xchg
int
add
subl
push
cmp
call
enter
xor
xchg
jnp
sub
dec
cmc
inc
pushf
push
xchg
push
fstl
in
mov
adc
lret
mov
popa
dec
stos
sub
test
jbe
ficompl
mov
push
addl
in
les
aas
es
ljmp
xchg
dec
addr16
cmp
sbb
pop
mov
inc
ja
cmp
ss
mov
incl
xchg
xchg
pop
sub
push
ds
fisubs
clc
addr16
imul
pusha
jg
push
adc
push
sbb
call
insl
and
jmp
int3
push
add
pop
fwait
mov
or
sti
xchg
inc
mov
adc
push
mov
cmp
popa
icebp
pop
xor
in
mov
je
stos
stc
xlat
daa
push
sub
mov
mov
fcomip
ds
sbb
lret
push
or
frstor
adc
das
pop
loop
pop
loopne
lock
ljmp
and
in
pop
jbe,pt
stos
mov
dec
shrl
xchg
push
xchg
pusha
ljmp
push
xor
andl
sbb
rep
ret
sub
jmp
jg
mov
test
add
mov
inc
or
ret
xchg
mov
scas
cli
lcall
mov
mov
mov
push
xchg
icebp
dec
fsubl
shrl
incl
and
xchg
out
push
sub
jmp
mov
stc
leave
sbb
mov
inc
mov
xchg
mov
test
into
cmp
adc
fdivrs
jge
andl
test
ljmp
xchg
shlb
sbb
mov
add
mov
push
pop
push
mov
int
sti
push
mov
inc
stc
push
adc
inc
or
cmp
or
pop
lods
jecxz
mov
mov
fs
aam
dec
insb
pop
or
lcall
je
pop
push
inc
addr16
stc
sbb
je
inc
cmp
loope
and
xchg
or
xor
into
daa
mov
sbb
fnstsw
jge
adc
loope
cmp
stc
cli
sbb
lcall
loopne
cmp
xchg
mov
hlt
out
test
call
shll
insl
std
xchg
cmp
fidivrl
lcall
push
mov
icebp
incl
cld
xor
sarl
inc
ja
adc
fidivrl
mov
pushl
mov
lret
repz
rol
cmp
sbb
inc
outsl
sahf
fdiv
and
adc
shll
push
movsl
jnp
xchg
mov
push
and
rclb
mov
decl
jbe
sbb
dec
and
jo
add
pop
or
mov
jbe
sbb
das
or
mov
out
adc
stos
sahf
add
push
mov
mov
dec
jb
jle
icebp
lcall
push
mov
mov
insb
or
inc
cli
inc
jb
pushl
hlt
sarb
xchg
jle
addr16
jp
or
mov
ret
sti
xchg
inc
inc
mov
jmp
pop
shrb
aas
lods
cmp
scas
es
jg
add
and
incl
push
pop
loope
xchg
out
jp
dec
cmp
pop
dec
arpl
inc
rcll
cmp
mov
clc
mov
stc
mov
test
mov
jle
push
and
push
sahf
xchg
dec
jnp
sub
adc
fstpt
pushf
dec
mov
mov
call
aam
xchg
push
cld
xor
sbb
testl
pop
mov
mov
mov
sbb
mov
push
mov
jp
dec
dec
pop
adc
cwtl
mov
jb
sbb
cmpsb
xor
loope
add
pop
lcall
sub
push
fisubrs
dec
lret
mov
in
inc
shll
ret
mov
or
and
xlat
test
jbe
sub
and
fstp
stos
and
int3
sbb
outsb
or
xor
stos
mov
jcxz
cltd
push
pop
dec
xor
dec
mov
mov
sub
in
inc
ljmp
and
pop
ret
and
inc
bound
mov
or
test
lcall
into
ljmp
int3
sahf
jl
aad
outsl
hlt
test
loopne
xchg
sar
jns
mov
clc
mov
dec
scas
xchg
cld
cld
mov
jmp
pop
movsl
sbb
inc
lret
mov
stos
mov
pop
lret
push
push
dec
and
sti
aas
lret
aad
or
cmpsb
inc
loope
jns
add
mov
mov
push
mov
xchg
test
out
clc
jmp
leave
das
fcompl
bound
mov
mov
mov
repz
call
push
les
out
add
ja
xchg
nop
xor
pop
in
out
xor
push
add
pop
enter
pop
hlt
decl
xchg
fdivp
jp
fs
enter
int
push
fptan
ret
ret
dec
clc
jmp
mov
mov
push
xor
scas
pop
bnd
aaa
push
iret
dec
and
sti
call
orl
pop
lods
and
cltd
imul
outsb
ljmp
inc
nop
cli
xchg
hlt
vxorps
aam
xlat
lahf
push
stos
mov
xor
fildll
cli
cld
mov
idiv
scas
fisttpl
mov
aas
mov
addr16
das
xor
xchg
bound
inc
mov
pop
push
xchg
jg
and
add
repz
cltd
inc
call
ja
push
das
cli
push
and
int
in
add
fwait
and
imul
mov
fdivs
jle
or
jg
icebp
addr16
mov
leave
cld
push
test
cmc
pop
loopne
push
jl
push
dec
push
jp
shrl
out
fildll
mov
outsl
mov
push
sub
aas
mov
in
out
sbb
pop
lods
scas
push
cmc
dec
jg
movsb
xor
mov
inc
addr16
mov
add
test
std
jg
call
fisttpl
push
ror
jl
jbe
out
rcrb
test
sub
fcomip
push
inc
push
or
repnz
pushf
push
jmp
lcall
cmp
cmp
sub
mov
cmp
cmp
sahf
xchg
fcompl
cmpsl
jno
into
mov
aas
mov
inc
mov
out
push
or
loope
daa
mov
in
push
lock
ljmp
inc
sti
mov
or
sbb
dec
pusha
je
cs
pusha
or
aaa
cmp
sbb
cmpsb
out
jne
adc
sub
loop
stos
xor
inc
adc
jmp
imul
pop
shlb
push
dec
mov
xchg
inc
push
mov
mov
mov
dec
clc
xor
mov
pusha
shrb
sti
xchg
or
enter
jb
lcall
mov
and
push
xor
outsb
sub
mov
adc
fadds
not
push
daa
adc
ficompl
mov
and
xor
fstl
and
mov
mov
sbb
jmp
or
inc
sub
in
fcmovne
aaa
dec
int3
xchg
pusha
lcall
sarb
rcr
jge
shr
or
cmp
xchg
sahf
inc
shlb
fnstenv
popf
and
jl
frstor
repz
imull
push
xchg
lods
call
push
lret
rorb
call
push
cmpb
mov
pop
pushl
and
cmp
cmp
leave
sahf
add
shrb
dec
mov
sar
ficoms
push
inc
lcall
xlat
push
push
das
xchg
shrl
mov
sub
xor
jbe
lcall
outsl
test
lods
repnz
pushl
xor
cmp
jmp
sahf
mov
mov
sbbb
pop
push
cmp
decl
ret
aam
cmpsl
faddl
fimull
xchg
add
aad
repz
daa
je
mov
pop
jno
mov
xchg
pop
fld
ds
jl
ret
or
rcll
jmp
pushl
mov
mov
in
lods
mov
sti
mov
jno
mov
lret
dec
ljmp
les
pop
cld
enter
sbb
incl
push
mov
jmp
dec
mov
push
cli
xchg
shrl
scas
jnp
pop
ja
adc
ljmp
cmp
aad
xor
rcrl
sti
ffreep
outsl
mov
jecxz
pushf
pop
pop
dec
mov
and
rcll
inc
test
adc
xchg
gs
enter
sub
in
loopne
das
push
mov
add
cmpb
jmp
cli
decl
gs
icebp
notb
jmp
xor
sub
and
or
aas
fcoms
mov
sub
lahf
cmp
mov
mov
ret
mov
and
dec
test
in
dec
aad
xchg
bsr
pop
cld
incl
loope
or
adc
and
fcoms
sub
loop
inc
cmp
dec
add
shr
mov
mov
pop
xchg
xchg
adc
xchg
mov
mov
icebp
push
xchg
mov
ljmp
adc
mov
cmp
sbb
scas
clc
jg
dec
sbb
mov
subl
cmp
jae
add
cmp
mov
enter
mov
mov
popa
rol
xor
cmc
in
popf
sbb
sar
ljmp
or
xlat
pop
adcl
xor
popa
or
mov
mov
inc
pop
adcb
xchg
xchg
addb
daa
push
lcall
cmp
mov
inc
outsb
movsb
dec
sub
outsl
rcrl
push
xchg
dec
mov
jg
sbb
test
jmp
jp
jb
xchg
add
jecxz
xchg
and
call
dec
stc
add
jns
mov
pop
cwtl
inc
in
divl
int
mov
test
outsl
push
mov
cmp
in
es
jge
adc
push
fcomip
lds
adc
dec
xchg
mov
shll
mov
jns
fnstsw
or
dec
inc
hlt
push
lods
jae
jl
add
sbb
jl
icebp
push
sbb
sti
ja
xchg
cmp
in
lahf
push
xchg
adc
imul
incl
testb
aaa
lcall
lods
adc
test
jmp
decl
sbb
xchg
jno
push
mov
cmc
push
and
imul
mov
decl
sbb
and
fwait
adc
enter
mov
mov
add
inc
mov
jo
cmp
adc
aaa
outsl
add
int
arpl
sbb
pop
inc
pop
mov
xchg
pushl
cld
jmp
push
mov
lds
enter
add
mov
adc
call
cmpsl
sbb
fucompp
iret
sub
mov
inc
jge
in
inc
jl
hlt
aaa
popf
inc
or
call
lods
and
outsb
inc
aas
ror
mov
mov
mov
nop
sub
jne
ret
pop
or
dec
push
push
add
dec
adc
rclb
jecxz
adc
push
lods
ret
or
js
or
mov
incl
ljmp
jecxz
mov
call
enter
cmp
inc
imul
psadbw
imul
pushf
adc
call
cld
cli
shlb
xchg
add
sti
push
ljmp
mov
int
pop
sub
test
and
xchg
testb
inc
mov
add
mov
jmp
mov
inc
inc
insb
andl
mov
int3
mov
jmp
and
push
leave
call
popa
sub
test
mov
ss
cwtl
clc
outsl
out
lcall
incl
mov
daa
test
in
mov
fistpll
mov
fucomi
push
jle
je
push
aaa
les
dec
test
sbb
loop
lret
int3
jg
sti
enter
mov
pop
add
mov
fidivrs
clc
inc
push
add
les
mov
xlat
call
imul
dec
daa
jmp
out
test
aas
xor
aaa
add
fisttpll
push
and
int3
stos
xchg
pusha
incl
fs
jbe
and
xchg
pop
cmp
mov
mov
loopne
and
dec
mov
dec
out
cmpsl
addr16
das
mov
sub
stos
ja
pop
push
push
sahf
push
rclb
and
cld
sub
cmpsl
aaa
push
adc
cmc
dec
sub
loopne
imul
or
cmpsl
addb
ror
mov
xchg
push
push
push
mov
addr16
mov
add
push
lods
push
mov
cmp
test
xor
stos
cmpsl
or
and
adc
push
insb
inc
sbb
int3
scas
out
lret
and
push
and
out
cs
push
testb
stc
lcall
rcll
test
add
in
scas
xchg
mov
and
popf
ja
xchg
cli
lret
pop
nop
call
and
jl
add
cmp
inc
dec
aaa
mov
xchg
push
ljmp
push
lret
cli
pushl
out
pop
in
jmp
or
ficoml
push
cmpb
sub
icebp
out
dec
sbb
lret
adc
mov
dec
into
aad
mov
add
movsb
mov
fwait
clc
fwait
jmp
pushf
mov
ret
inc
call
sbbb
incl
lods
lret
cld
add
loope
dec
sub
dec
mov
pop
add
xchg
iret
mov
inc
movsl
nop
jbe
aas
push
jp
mov
in
push
inc
inc
rcll
out
add
cmp
sti
xchg
in
incl
push
pop
fisubs
ds
xchg
std
lret
stos
or
push
lods
sbb
mov
movswl
push
shll
jg
arpl
rolb
arpl
add
pandn
or
pop
ficoms
aaa
push
lcall
inc
loope
pop
mov
pop
mov
xchg
loopne
cmp
pop
inc
in
mov
mov
cs
hlt
sub
or
jp
in
ror
data16
lcall
pop
dec
ja
xchg
hlt
sbb
and
cld
inc
cmpsl
dec
sti
das
cmp
aam
insb
adc
out
scas
nop
mov
in
outsb
or
push
push
mov
inc
data16
data16
addr16
adc
dec
scas
dec
outsl
fcomip
inc
test
sbb
xchg
or
dec
push
fisubl
insb
mov
incl
pop
cmpsb
sbb
es
out
push
sub
cli
mov
sbb
fsubp
js
mov
jo
push
add
cs
jbe
notb
fdivr
incl
pop
mov
outsb
or
fistps
pushl
pusha
xchg
lock
js
nop
fwait
xchg
and
sahf
push
divb
lods
sub
into
in
jmp
aam
call
mov
je
dec
ljmp
arpl
addl
enter
aam
enter
add
jmp
mov
aad
jecxz
lods
fldcw
clc
inc
cmp
mov
dec
mov
push
test
sub
sub
mov
int3
pop
mov
xchg
ja
mov
or
inc
mov
mov
mov
in
push
andl
fistpl
decl
jmp
sbb
aam
outsb
decb
sti
shlb
sbb
decl
mov
jl
mov
sahf
loop
jl
cmp
mov
fstl
xor
stos
pushl
sti
mov
add
xchg
repnz
fwait
popf
and
adc
mov
push
pop
mov
jns
sub
int
ret
aas
sbb
out
repz
sbb
mov
mov
aaa
dec
xchg
sub
jge
ljmp
call
xor
call
dec
or
hlt
icebp
rclb
pushl
sbb
leave
addr16
sub
pop
sub
pop
hlt
decl
in
adc
out
test
dec
mov
std
cwtl
cmc
xor
je
pushf
loopne
lea
xchg
adc
in
mov
dec
mov
pop
and
push
call
sbb
test
in
mov
push
scas
and
subl
adc
incl
jb
pop
mov
gs
mov
xchg
iret
or
push
fisubrl
ljmp
incl
mov
and
sub
pop
in
loop
shlb
lods
xchg
outsl
add
mov
push
cmp
inc
sub
jmp
push
push
repnz
nop
push
push
adc
ret
gs
ss
sti
sahf
mov
pop
leave
jne
nop
incl
pop
adc
jns
ret
push
lret
or
sub
in
je
adc
ret
lods
js
mov
jmp
sar
int
insb
test
xchg
xchg
add
pop
fisubl
xchg
mov
inc
mov
cmpsl
insl
lcall
jmp
sbb
xchg
cmp
mov
pop
mov
pop
aad
push
and
sub
jg
incl
mov
cmp
inc
enter
in
retw
incl
dec
std
loopne
pushl
mov
jmp
enter
lock
mov
jns
pop
push
pop
ljmp
test
ficoml
pop
jmp
xchg
rolb
sub
enter
fcmovnb
inc
add
jmp
mov
xchg
push
sub
add
decl
sbb
jecxz
mov
jge
cmp
xchg
std
jl
jo
add
jg
push
leave
clc
sub
add
fcomp
inc
jg
ret
mov
jg
jmp
and
xchg
pop
stos
sti
mov
add
test
call
sub
shlb
inc
sahf
mov
stos
jmp
lea
add
cltd
xor
int3
mov
cmp
pushl
stc
sbb
pusha
jae
adc
xor
push
icebp
xchg
fidivrl
dec
test
sti
mov
or
mov
inc
sbb
sarb
pushl
push
push
aam
stos
movl
mov
loop
sbb
addl
movsb
jnp
xchg
mov
out
sahf
mov
adc
jl
jns
pusha
pushl
mov
sub
dec
pusha
inc
adc
add
lret
pusha
lods
loopne
inc
loop
ss
repnz
fidivrs
int3
cmp
fdivs
fwait
insl
into
mov
imul
lods
fsubrl
sub
les
mov
lock
sub
stc
adc
pop
mov
xchg
faddl
call
cmc
xchg
mov
adc
fincstp
cs
and
push
add
xchg
sub
or
rcl
pusha
mov
and
cmp
add
loopne
xchg
sbb
mov
mov
add
push
aad
jg
ss
mov
call
or
test
mov
mov
add
imul
sbb
into
jp
mov
mov
aaa
add
lods
iret
leave
dec
cmpsb
mov
test
incl
mov
xlat
pop
int3
test
adc
ss
xchg
add
loope
xchg
pop
mov
rcr
mov
shrl
jmp
sbb
xchg
int
lret
adc
pop
push
mov
inc
aam
xlat
pop
test
pop
dec
lcall
xor
orl
jns
sahf
jg
xor
cmpsl
lods
jbe
aam
inc
repz
call
add
mov
push
and
pop
int3
xor
mov
sub
and
fwait
fbstp
sub
repz
push
sbb
out
shr
loopne
jns
decl
jmp
mov
push
lcall
in
outsb
sub
or
movsb
loopne
incl
aaa
pop
xchg
xchg
or
scas
mov
cli
fistps
mov
pavgb
call
cwtl
andnps
or
scas
loop
fsub
in
cmpsb
add
pushl
pop
clc
shrl
into
ficoml
push
mov
xchg
push
lcall
movsb
push
test
addr16
daa
mov
mov
push
test
pop
imul
pop
out
es
addb
leave
push
and
hlt
push
xor
and
decl
loopne
iret
out
scas
or
fdivrp
or
test
jo
sbb
push
ds
fldcw
test
lock
dec
xor
scas
clc
rolb
loopne
sub
mov
ljmp
mov
add
push
icebp
pop
stos
xchg
jle
clc
repnz
mov
repnz
cld
decl
hlt
mov
sub
push
test
push
adc
sbb
xchg
incl
jbe
cld
stos
sbb
sub
leave
or
stos
or
sub
icebp
mov
call
or
cmpsl
cltd
jno
sub
imul
sub
dec
jne
nop
je
nop
dec
adc
add
decl
sbb
enter
ficompl
push
enter
or
das
shll
out
sti
add
lcall
mov
outsl
je
nop
pop
push
inc
mov
add
adc
jmp
jae
fstp
lcall
add
in
and
les
test
mov
jg
jmp
adc
fisubrl
out
pop
add
in
mov
test
sbbl
jnp
jmp
into
fs
orb
out
adc
xchg
mov
rcr
jg
enter
cmc
jg
mov
int
imul
js
enter
fildll
fwait
iret
in
inc
inc
mov
ja
xchg
aaa
jge
inc
inc
pusha
sarb
add
sarl
inc
dec
imull
pusha
mov
rcrl
imul
das
es
insl
call
cmp
mov
jo
jle
mov
pop
or
add
cmp
mov
notl
jmp
sbb
push
fs
loop
lret
ret
jmp
push
add
ljmp
dec
imul
sbb
mov
adc
pop
sbb
jmp
stos
jno
cs
xor
outsb
mov
xchg
xchg
insl
mov
icebp
incl
mov
fidivs
movb
jge
fdivl
out
leave
pushf
fcomip
scas
and
pop
js
mov
filds
mov
rolb
pop
cmpsb
mov
mov
out
decb
adc
mov
shlb
mov
and
lahf
out
hlt
dec
adc
dec
leave
jp
cltd
stos
mov
incl
add
and
aad
sub
adc
pop
adc
lea
pushf
incl
adc
jl
dec
insb
or
and
pop
mov
clc
pop
in
xlat
aaa
movsl
pushf
aas
or
jmp
repz
cmp
inc
adc
aaa
push
in
push
mov
cld
dec
enter
xor
popa
or
ljmp
mov
push
loop
shlb
or
data16
inc
pop
andb
inc
cltd
aad
cmp
or
dec
push
rcrl
jg
pop
mov
sub
movsl
and
pop
mov
cltd
mov
sbb
push
push
icebp
push
or
pop
popf
andb
inc
xor
or
mov
jl
roll
mov
scas
push
vpaddusw
and
sbb
mov
insb
cwtl
and
aaa
inc
mov
jmp
and
cmp
push
pop
mov
subb
or
loop
mov
icebp
scas
xchg
comiss
adcb
xchg
ss
mov
imul
lcall
jg
dec
cwtl
adc
lods
jg
js
push
js
sahf
push
xor
les
add
sbb
std
dec
inc
jb
inc
cmp
dec
je
mov
movsb
jnp
jo
sti
push
sti
fcoms
outsl
pushl
xchg
cmpsl
stos
sahf
insl
jbe
sbb
fdivp
push
xor
out
popf
sub
fs
push
mov
pop
out
jle
push
fisttpl
scas
dec
std
std
adc
out
mov
aam
or
outsb
xchg
call
mov
mov
xchg
clc
add
sbb
lods
or
scas
jmp
outsb
jg
pop
icebp
pushl
insb
sub
roll
adc
iret
imul
adc
and
pushl
lcall
in
adc
mov
fdivl
mov
jg
xchg
fildl
mov
cmp
dec
adc
lock
dec
push
sub
xor
mov
decl
pop
push
lock
mov
xchg
lds
into
lods
sbb
or
clc
xchg
pushl
std
ja
jns
pop
jns
cs
insb
or
daa
xchg
mov
mov
in
ss
sbb
ficoms
pop
je
repz
sub
xor
mov
mov
mov
incl
and
iret
push
and
inc
cmp
xor
add
sub
dec
xor
hlt
fmuls
pop
call
stos
mov
push
shll
and
sub
mov
repz
imul
ja
lods
out
loopne
mov
insl
fsubs
add
addr16
out
popa
mov
loopne
sbb
outsl
mov
adc
stos
xlat
or
stos
push
xchg
mov
cmc
add
or
aaa
mov
mov
lret
decl
lock
sti
scas
in
jle
test
stos
lods
out
add
test
jmp
test
xchg
jmp
pop
lahf
cmp
push
pop
xchg
xor
mov
rcll
xorb
out
loopne
out
in
mov
xor
jg
pop
call
xor
jmp
icebp
xor
jge
gs
pop
inc
aad
pop
in
in
jbe
adc
dec
fildl
adc
ja
and
movsb
adc
adc
dec
mov
pusha
xchg
sub
xchg
stc
adc
sub
sub
and
jg
or
and
loop
dec
jo
mov
rcll
mov
fcoms
pop
ss
jmp
inc
test
push
add
sbb
mov
lahf
cwtl
and
inc
into
sub
addb
rcr
pop
rcrl
xchg
adc
pushl
dec
cmovg
cli
mov
je
xchg
adc
loopne
test
fdivrp
mov
mov
pop
or
mov
sub
sbb
addl
mov
add
incl
bound
shrb
jbe
insl
pop
sahf
cltd
ret
sub
mov
js
jp
cmp
push
dec
shl
add
popa
mov
fistps
mov
inc
arpl
repnz
push
lcall
and
adc
cmp
ret
push
and
ret
aam
aad
call
icebp
dec
mov
jecxz
stc
repz
cmpsl
cld
call
aaa
loop
jmp
jg
jp
xor
fisubrs
mov
ret
cmp
xchg
sub
mov
push
mov
jp
xor
adc
xchg
adc
lret
add
sarl
inc
inc
mov
sub
mov
mov
mov
and
fsubrl
dec
ljmp
add
jns
out
sub
add
shr
mov
aas
divb
ret
pop
std
lcall
shrb
into
jmp
shl
mov
mov
jl
ljmp
adc
repnz
dec
leave
mov
adc
cmp
in
adc
push
std
call
mov
movsl
cmpsb
pop
divl
jg
cli
or
out
lcall
mov
in
xlat
cmpsb
scas
outsb
int
adc
cmp
les
addl
sub
pushl
jo
outsb
movsl
sub
call
mov
push
stos
adc
push
cld
decl
gs
dec
mov
mov
rolb
pusha
adc
xchg
cli
mov
jg
sub
xor
xchg
or
jnp
in
jae
fdivp
out
insl
icebp
testb
insb
shll
xchg
xor
mov
xor
adc
fsubl
imul
out
ja
decl
pop
mov
cmpb
in
push
popa
shrl
or
sti
lcall
decl
cli
sub
leave
adc
lret
icebp
push
xor
or
cmp
daa
dec
inc
push
fcoms
cmc
inc
jbe
sub
ds
in
pop
pop
pushl
in
pop
add
jp
popa
sub
in
push
dec
cmpsl
push
or
cmp
rcrl
int
into
sbb
mov
scas
inc
pop
jmp
mov
outsl
mov
neg
adc
cmp
and
add
jmp
nop
clc
xor
jbe
mov
sub
call
repnz
in
inc
and
das
push
cmp
cltd
mov
js
in
jp
pop
js
sub
div
cmc
in
jno
loopne
dec
dec
in
fisubrs
or
xchg
push
ljmp
xchg
bound
addr16
and
je
lods
adc
pop
lcall
and
outsl
push
int3
shll
ret
pop
jne
xor
xchg
jb
rolb
psubsb
decl
ror
adc
push
jb
shl
pop
je
jb
pop
repz
imul
ljmp
push
xchg
std
mov
cltd
sub
stos
push
stos
lcall
add
fcoms
mov
enter
dec
mov
xor
mov
lcall
jno
lock
loop
sbb
rorb
rolb
ds
mov
sub
add
in
jmp
push
push
jnp
lret
jge
xor
popa
mov
je
jnp
movsb
test
ljmp
jmp
mov
sbb
lcall
jbe
mov
jecxz
mov
inc
add
repnz
xlat
pop
call
rorl
in
stos
dec
sarb
or
js
adc
xor
cmp
xchg
lock
icebp
mov
jl
cltd
sbb
lock
pop
mov
pushf
sbb
lcall
imul
adcb
mov
inc
mov
adc
xchg
adc
mov
jne
mov
fcom
imul
jle
push
into
add
outsb
rcrb
push
rclb
decl
xchg
jle
mov
sub
sbb
adc
incl
push
mov
in
sbb
mov
xor
xor
popf
aad
iret
fildll
decl
je
mov
add
addb
aam
test
sub
mov
gs
dec
test
inc
push
bound
cmp
mov
cmc
ljmp
sbb
inc
and
popf
push
sbb
aad
lods
pop
push
repnz
pop
and
ret
fisubrl
clc
call
aaa
adc
push
insb
inc
pushf
or
push
jne
pushl
dec
jbe
pop
sbb
jae
sub
add
xchg
ficomps
loopne
ja
push
push
or
lret
mov
or
xchg
insl
dec
jg
fcmovne
sbb
xchg
xchg
fcos
jg
mov
sahf
leave
and
ret
ja
out
outsb
dec
inc
xchg
fistl
cmp
repz
lcall
dec
mov
pop
outsl
push
mov
roll
call
pop
fwait
jg
cmp
aam
popf
stc
rolb
insl
pop
nop
xchg
sbb
fdivl
fs
lcall
jmp
shr
ret
ja
mov
fldenv
add
xchg
pop
movsb
pushf
incl
rclb
pop
popf
and
cmp
call
bound
xor
jmp
xchg
popf
les
cmp
repz
sub
xor
call
cmp
sub
mov
in
push
and
sti
movsb
xor
inc
das
shrl
ljmp
loopne
sub
jl
add
xor
es
sub
adc
push
mov
lcall
out
mov
adc
and
cmc
fmul
push
sbb
pushf
jl
clc
push
stos
jle
jno
dec
lret
call
dec
rorb
loope
mov
mov
scas
cmc
cwtl
dec
add
std
into
sub
mov
mov
decl
add
sarb
insb
pop
sahf
cmp
out
pop
ffreep
andb
mov
inc
movl
cli
rcl
jb
pop
xchg
les
ds
imul
in
dec
ret
adc
lcall
and
inc
or
pushf
add
les
jp
push
movsb
mov
call
sbb
call
fisubs
cltd
xchg
add
pop
xchg
push
ss
mov
incl
and
and
pop
push
inc
jl
push
iret
fildll
or
mov
lcall
adc
adc
jmp
out
sbbl
scas
add
mov
pushf
test
movsb
adc
and
dec
jb
pop
xchg
pushl
push
jmp
and
mov
lods
fwait
push
jo
cmp
dec
pop
sbb
shlb
xor
loope
inc
and
aaa
cmp
fcmovnbe
orl
jnp
imulb
fdivrl
inc
call
mov
pop
xchg
lretw
xchg
sbb
xchg
shll
mov
lcall
pop
xor
lret
push
popf
push
addb
adc
das
dec
pushl
loopne
xchg
pop
pusha
cmp
aad
cmp
rol
out
insb
xchg
nop
push
pop
out
add
cmp
mov
or
das
sub
jno
decl
adc
mov
rol
sbb
dec
mov
add
push
andl
je
test
in
xor
fdivs
cld
jne
mov
bswap
fdivrs
dec
stc
test
dec
xchg
or
lret
movsb
mov
mov
mov
test
sub
ds
lahf
push
outsb
mov
shr
inc
jle
cltd
les
popf
lds
xchg
push
testl
push
sub
dec
ret
xlat
movsl
jecxz
sbb
cmp
jmp
jecxz
ljmp
sahf
fstpl
ljmp
dec
mov
jmp
sbb
xor
call
xchg
daa
sub
popa
call
inc
ljmp
xlat
arpl
xchg
incl
inc
test
mov
inc
loopne
xchg
cltd
adc
cmpb
nop
test
fdivs
dec
ja
mov
je
sub
add
orl
icebp
rcl
jno
push
cmpsb
pop
call
push
test
dec
or
or
cmp
push
scas
out
je
push
lahf
out
sbb
outsb
xchg
mov
popf
cs
jmp
jg
push
push
into
mov
mov
out
test
mov
imul
pop
cmp
add
imul
lret
mov
ret
or
aam
mov
ds
stc
test
scas
setp
loope
or
insb
xchg
gs
cmpsb
out
aaa
rcrb
in
cmp
lret
push
mov
lret
rorl
mov
scas
cli
dec
pop
ss
movsb
push
adc
mov
ja
rolb
ficoml
add
outsb
sbb
sti
adc
aam
repnz
add
xor
stos
push
sbb
jmp
xchg
pop
outsl
in
jns
xchg
sbb
pop
adc
dec
pusha
idivl
imul
lds
or
shr
test
adc
fst
sub
and
jbe
mov
mov
jne
repnz
into
adc
mov
adc
xchg
jne
mov
call
std
xchg
xchg
call
mov
and
aaa
push
call
ljmp
incl
jo
iret
cltd
je
fwait
movsl
inc
push
mov
push
or
jmp
fists
bound
aam
mov
fdivrp
mov
mov
cmc
add
decl
in
xchg
and
push
mov
mov
sub
sub
xchg
aas
sbb
xchg
stc
sbb
mov
xlat
and
mov
inc
xor
mov
fwait
cwtl
jns
in
pop
fbld
mov
xchg
mov
imul
adc
jl
pop
mov
lea
add
adc
inc
xor
jmp
xchg
push
pop
imul
jb
push
daa
cs
sub
call
cmp
adc
pop
lret
jb
fstpl
pop
mov
repz
dec
insl
sub
stc
cli
in
jmp
xchg
orb
mov
jb
xchg
lcall
pop
pop
dec
adc
lods
imul
xlat
popaw
pop
test
inc
insl
mov
and
mov
fstpt
mov
or
dec
lahf
sub
orl
dec
test
mov
ficoms
test
push
jge
xor
dec
clc
sahf
nop
dec
sbb
incl
cltd
cmp
lods
daa
les
data16
aad
push
mov
pop
lahf
outsl
add
push
xchg
pushl
cmpsl
sbb
or
shl
repz
cmp
push
lds
test
incl
xor
fs
outsl
mov
jno
ret
and
mov
adc
pushl
dec
mov
dec
rcll
mov
xchg
stos
js
adc
add
and
adcl
pop
add
xor
ret
out
out
call
pop
cli
push
ret
xchg
mov
cli
scas
fsubl
jb
push
cmp
mov
enter
clc
add
out
lret
cmp
xchg
in
mov
mov
cmp
add
mov
sahf
add
jnp
sbb
je
jmp
add
pop
push
push
mov
in
pop
sbb
adc
jp
add
incl
cmp
dec
inc
cmc
icebp
dec
in
fmull
add
jp
dec
pop
js
push
mov
fisttpll
and
xchg
add
pushl
adc
mov
jg
mov
mov
add
xchg
shll
and
inc
add
jnp
movsb
lock
in
dec
jle
mov
push
inc
imul
sahf
loopne
mov
jg
lea
sti
mov
and
xchg
fsubs
enter
cmpsl
mov
jg
pop
call
add
push
shl
mov
aaa
filds
outsl
adc
ljmp
lahf
int3
jne
lea
mov
push
inc
cld
incl
jbe
mov
or
loop
mov
xchg
test
stos
jecxz
dec
aas
stos
sub
stc
xchg
push
jmp
outsb
xchg
lea
inc
jmp
popf
mov
out
mov
and
adc
sub
lcall
jnp
inc
out
rolb
dec
cli
test
xor
fwait
pop
test
jp
test
ljmp
inc
shrb
add
test
pop
adc
inc
lret
pop
xor
and
dec
js
adc
decb
and
sub
fildll
mov
xchg
cltd
mov
mov
fld
rorl
adc
clc
push
sarl
add
test
js
in
call
cs
jbe
push
dec
jl
ficomps
out
add
mov
lcall
out
pop
sbb
pop
inc
mov
jb
jp
cmp
fdivr
mov
call
sbb
and
push
lods
and
pop
adc
push
decl
mov
mov
jns
push
maxps
shl
xchg
fdivrs
int3
lret
addr16
cltd
inc
sti
mov
call
loopne
imul
fdivl
and
jle
jp
mov
pop
or
mov
jmp
fs
out
loope
iret
test
lret
pop
add
mov
mov
decl
in
xor
jecxz
insb
dec
testl
les
sub
add
mov
inc
pushl
cld
jmp
out
sahf
push
add
pop
and
push
sub
add
mov
mov
pushl
out
xchg
dec
decl
hlt
pushf
xchg
mov
ret
fwait
repz
xor
or
decl
stc
sub
in
fwait
lahf
adc
pop
mov
jno
push
dec
lcall
dec
jg
loopne
sbb
hlt
icebp
mov
cmp
sbb
dec
mov
push
lret
lcall
add
adc
ss
loop
dec
dec
mov
in
adcl
lock
imul
xor
addr16
repnz
xchg
pop
insb
mov
lcall
jecxz
jae
lcall
or
imul
push
sub
int3
pop
ljmp
sbb
and
popa
rcrb
scas
pusha
popf
out
xchg
jge
insl
mov
stos
adc
les
adc
inc
xor
sub
subb
test
scas
jno
mov
xchg
ljmp
popl
stos
shrl
jge
mov
roll
add
inc
mov
push
rcrb
sub
in
push
lea
pushl
hlt
in
adc
cmp
jbe
cmc
test
rorb
xchg
lret
data16
or
clc
out
xchg
inc
std
xchg
and
test
pushl
xchg
dec
test
jl
scas
or
lahf
mov
xchg
std
or
push
xchg
lahf
fdivrp
call
pop
mov
and
pop
pop
mov
sub
in
cmp
call
ljmp
push
repnz
inc
loop
loope
inc
mov
mov
pop
mov
decl
adc
pop
xor
mov
mov
je
ret
xchg
pop
in
push
pusha
jle
es
jg
decl
jo
mov
xchg
dec
sbb
roll
dec
mov
pop
lds
lcall
mov
jnp
lret
movsl
jg
lock
aas
cs
jne
mov
frstor
insl
sti
lock
dec
in
mov
xchg
les
jmp
lds
enter
xor
xchg
push
cmp
mov
inc
icebp
add
dec
cld
xchg
and
adc
incl
push
fdivrl
jle
pop
push
out
mov
dec
movsb
loope
push
es
outsb
je
incl
jmp
adc
sbb
insb
adcl
sub
lock
cmp
out
push
and
inc
xchg
mov
mov
and
sahf
cmp
jg
jbe
mov
rcll
in
stc
repnz
dec
sti
repz
ja
ret
scas
push
xor
cmpsl
and
mov
pop
cld
pop
sub
pop
imul
cltd
push
inc
add
xchg
movsb
pop
fcomip
lcall
cli
ja
fwait
jmp
adc
mov
popf
shlb
nop
cwtl
jae
fs
ret
sar
inc
and
adc
insb
jbe
jae
pop
cmp
pop
inc
push
test
pop
std
mov
cld
adc
mov
xor
mov
cs
lds
fwait
into
lcall
je
mov
in
sub
les
je
mov
adc
insb
divl
decl
stos
mov
pushf
mov
mov
adc
push
push
ds
xchg
pop
les
inc
cmc
xchg
sub
test
sub
inc
lods
push
pushl
outsl
movsb
hlt
or
aaa
call
fstl
pusha
sahf
loope
cld
mov
aam
push
shll
sti
jg
lcall
sbb
mov
sbb
fwait
and
out
push
ljmp
subb
or
test
mov
cli
sti
or
xor
clc
mov
jmp
ss
push
xor
pop
inc
ljmp
mov
cmpsb
cli
sbb
push
and
testb
out
push
das
push
inc
mov
xchg
dec
sti
push
xchg
fmull
out
popf
push
icebp
repnz
sbb
xchg
loope
fisttps
test
jg
dec
test
lds
push
xor
fcmovu
dec
dec
dec
jbe
xchg
ljmp
enter
dec
and
adc
mov
shlb
ljmp
cmp
cmpsb
xchg
imul
mov
shrl
sub
lahf
cs
lcall
rclb
dec
jle
repnz
xchg
inc
rorb
pop
sbb
jp
js
jmp
pop
adc
daa
mov
aaa
dec
sahf
cmp
lods
xchg
mov
sub
fimull
pop
push
shr
xchg
out
imul
cltd
nop
adc
cmc
inc
pusha
fimull
lock
incl
sbb
aam
adc
mov
daa
jl
stos
push
or
test
subb
or
xor
inc
dec
lods
jle
imul
lds
jb
mov
testb
xor
icebp
rolb
dec
lods
movsl
sub
cs
in
xchg
daa
sub
lcall
and
jno
jns
in
loopne
hlt
jne
sbbl
pop
or
ljmp
rcrl
cmp
call
mov
adc
mov
leave
dec
sar
rcll
enter
inc
out
nop
lret
sbb
mov
cld
jp
incl
cs
int3
mov
add
pop
fidivl
inc
inc
lds
sbb
ss
cmpsl
cmp
mov
or
ss
mov
test
bound
incl
pop
sti
dec
aam
inc
sarl
xchg
sub
push
add
iret
fsubrs
loop
pop
shlb
mov
mov
cmc
sub
lret
jmp
loopne
es
fnstcw
insb
jnp
je
or
adc
and
sbb
inc
gs
mov
cmp
cmpl
and
mov
addb
mov
aas
ljmp
nop
and
idivl
test
cmpsb
adc
and
scas
xchg
inc
cmp
jae
xchg
push
iret
lods
divl
mov
decl
repz
lcall
ds
ljmp
decl
sub
outsb
push
lret
add
push
or
or
aas
popf
xor
add
clc
inc
inc
mov
sti
test
mov
gs
and
daa
mov
pop
es
xor
pop
lds
mov
push
mov
outsb
mov
mov
nop
fsts
cmp
rcrb
sbb
jmp
daa
out
inc
sub
jge
pop
lock
xchg
fcmovne
inc
int3
mov
add
mov
sar
push
dec
inc
ds
xor
pushf
insl
pop
jp
mov
sub
add
jmp
shl
popl
and
push
pop
xchg
xor
dec
lret
repnz
call
test
les
inc
xchg
in
add
ret
or
fs
sbb
sbb
jbe
shl
test
mov
in
sar
decb
insl
adc
push
xlat
aaa
and
xor
lahf
cmp
mov
dec
test
adc
ficompl
std
scas
jnp
ret
in
fs
push
rol
sar
mov
or
lret
gs
lods
outsb
xchg
mov
adc
std
jb
jno
pushl
add
pushl
sbb
out
fs
ds
sbb
cltd
sbb
jle
fcomp
movsb
jle
mov
sub
pop
scas
sbb
in
pop
popf
xor
ja
mov
jmp
fcomip
addr16
jno
cli
dec
std
test
or
jge
push
jnp
imul
adc
lcall
in
pop
adc
jbe
add
or
mov
hlt
xor
jg
imul
mov
insb
mov
fbld
inc
mov
pop
fwait
popa
outsb
push
pop
gs
leave
or
imul
enter
adc
jmp
mov
cwtl
les
xchg
or
cwtl
ret
push
jge
add
mov
lods
cld
aas
lock
pushl
and
cltd
push
rclb
divl
mov
adc
jle
jp
insl
ja
sbb
add
fisttps
push
mov
sbb
mov
adc
sub
inc
jo
outsl
fcompl
and
sub
decl
and
and
pop
lcall
mov
cmpsl
mulb
cwtl
incl
push
push
inc
or
pop
push
dec
dec
jp
xchg
xchg
jne
jp
pop
scas
testl
in
dec
jb
test
sbb
loop
repnz
xor
xor
je
xor
sti
shll
incl
adc
push
push
sarb
dec
shrl
sahf
sub
vdivsd
incl
pop
sub
jbe
data16
push
notl
mov
jns
icebp
xchg
popa
mov
stos
ja
inc
jg
test
fsubrs
sbb
mov
push
repz
jge
arpl
imul
cld
lea
fisttpl
inc
lds
jae
dec
ds
add
fwait
into
adc
dec
es
add
pop
cmpsl
lods
lcall
mov
pop
or
fcompl
mov
pop
mull
ucomiss
decl
fwait
shrl
xor
sub
sub
aam
xlat
pop
out
cli
jg
pop
rorl
xchg
xor
cmpsl
mov
iret
dec
loop
jmp
incl
rorb
xorb
mov
sbb
pushf
push
mov
jnp
pop
push
cmp
shlb
out
in
xchg
cmp
sub
and
jle
fidivrs
jg
clc
xor
scas
jmp
inc
loop
fmuls
ja
fisttpl
stos
in
out
cli
lcall
stos
cld
dec
push
outsl
cmpsl
mov
cld
push
stos
dec
add
pop
push
inc
scas
fildll
or
push
in
mov
into
sub
jbe
xchg
loopne
aad
mov
mov
negb
inc
adc
jbe
mov
rclb
mov
imul
add
mov
addb
sarb
shlb
push
incl
imul
or
sub
xor
lret
int
sub
cmp
icebp
inc
cltd
lret
or
dec
scas
inc
lods
jle
pop
xorb
arpl
incl
cmp
sbb
push
xor
lahf
cmp
pop
imul
and
mov
out
inc
popa
lods
adc
jge
popf
imul
ljmp
sub
rclb
daa
inc
mov
mov
add
jno
int
mov
cltd
clc
cmpsl
dec
jmp
jo
pop
jb
xor
lret
int
adc
clc
jb
nop
jle
clc
clc
xchg
stc
ljmp
push
aaa
cli
movsb
or
inc
adc
lret
adc
jae
and
push
and
js
movsl
jns
pop
jl
inc
or
add
int3
and
addr16
decl
dec
aas
fwait
inc
repnz
mov
xchg
jo
lcall
cmp
mov
jg
bound
int
pop
in
movsb
loopne
es
xchg
pop
mov
mov
pop
in
and
jns
dec
addr16
shlb
test
mov
xor
mov
add
and
adc
sub
ljmp
xchg
sub
loope
adc
les
mov
int3
xchg
push
decl
lcall
iret
dec
jge
pushf
and
in
rep
lret
loopne
pusha
inc
ss
int3
outsb
cld
and
sbb
mov
jle
mov
and
test
leave
cmc
and
call
cmp
mov
or
js
negl
xchg
inc
sbb
mov
sbb
loopne
iret
in
test
stos
push
lock
mov
or
popf
mov
mov
addb
stos
jo
enter
xor
not
mov
add
and
dec
mov
pushl
mov
pop
imul
aaa
add
push
pop
adc
or
hlt
stc
jo
decl
sarb
pop
push
popf
stos
xchg
ds
xchg
add
fcmovne
mov
imull
push
enter
call
clc
pop
test
shlb
fsubrp
in
arpl
fneni(8087
outsb
pushl
stc
mov
orb
and
das
movsb
out
cmp
xor
adc
xor
lcall
aam
or
or
test
push
insb
test
sub
inc
mov
sub
pushl
push
shlb
decl
mov
out
xor
in
cmpsb
cmp
jp
shll
popf
lahf
xor
fdivp
add
lcall
cmp
in
add
xchg
pushf
nop
push
and
pushf
hlt
mov
call
je
and
icebp
fstps
push
fldl
ffreep
dec
or
aam
inc
mov
inc
dec
xchg
mov
pop
mov
movsb
or
ljmp
mov
insl
loop
xchg
mov
gs
sub
fwait
ljmp
and
pop
stos
pop
inc
sbb
nop
hlt
mov
mov
loope
lcall
xchg
jge
sbb
xchg
ror
mov
dec
fsubrp
aaa
push
les
inc
pop
out
adc
push
addr16
push
push
fists
mov
jmp
das
xchg
fisttps
adc
jmp
mov
push
das
call
mov
xchg
pushl
xor
fildl
pop
xchg
jl
jl
pop
cmp
stos
xchg
sbb
cmp
out
ds
fwait
js
lock
in
int
cmp
test
push
push
cmp
ffree
xor
pushl
add
jp
push
adc
call
fwait
inc
out
mov
scas
iret
fidivs
mov
cld
cs
mov
dec
data16
data16
outsl
lods
lahf
and
mov
loopne
jle
xor
cld
scas
shr
push
xor
mov
inc
jg
lcall
mov
cli
adc
cmp
ficompl
sbb
inc
inc
out
jecxz
call
shr
and
xchg
movsb
add
jle
into
push
lea
adcl
cmp
ja
dec
enter
std
pusha
push
scas
jmp
pop
add
dec
clc
inc
insl
xlat
pusha
fcoms
cmpsb
shr
ftst
sub
pop
fadds
addr16
jmp
inc
mov
mov
flds
out
sub
adc
xchg
lods
inc
leave
push
pop
data16
jne
in
jmp
stos
lock
add
mov
fnstsw
mov
outsl
inc
imul
sbb
rcll
or
mov
lock
inc
pop
scas
mov
jmp
jecxz
aas
fcomip
lcall
adc
pop
call
jnp
jmp
mov
test
call
mov
pop
sub
push
jae
cmp
jmp
xchg
sub
and
ljmp
leave
mov
xchg
bswap
inc
cmc
sub
cmp
mov
scas
out
roll
loopne
mov
insl
test
in
sbb
lret
scas
mov
cli
arpl
aaa
xchg
mov
shll
mov
inc
dec
fbld
je
pop
pusha
ljmp
call
mov
sbbl
cmp
dec
arpl
cmpsl
dec
push
data16
pop
add
scas
inc
pusha
xchg
fsubrs
mov
xorb
jg
cli
sbb
out
cld
lea
iret
sahf
shlb
stos
sub
jmp
cmp
add
out
adc
mov
gs
pushl
mov
lret
iret
daa
sub
pop
pop
ljmp
mov
cmpsl
jbe
out
into
add
lds
cmp
adc
mov
mull
decl
inc
stos
sub
insl
lea
xchg
sbb
mov
sub
fisubrl
ss
andb
lcall
insl
je
insl
jno
add
repz
xchg
adc
mov
js
es
dec
xchg
xchg
xor
mov
ficomps
mov
idivb
fwait
popa
loope
xor
aas
adc
lea
ja
inc
je
shll
inc
pusha
sbbl
lods
jp
roll
mov
pop
add
jns
cmp
in
stos
lcall
out
je
aam
dec
cwtl
or
jl
pushl
aam
mov
xchg
mov
pop
or
cmpb
lcall
aas
out
cmp
loop
pusha
hlt
cltd
imulb
faddl
mov
aas
int3
xor
xchg
stos
lret
out
mov
dec
rcll
or
clc
into
push
addb
add
jg
mov
and
cld
push
cmp
jg
jno
jecxz
cltd
gs
mov
xchg
fcomip
jmp
in
and
out
ror
cld
fimuls
loop
lds
pop
mov
dec
lcall
sbb
xchg
imul
cmp
adc
cmp
lahf
pop
int3
mov
sub
stos
push
cmp
or
sbb
dec
loopne
push
incl
mov
fiaddl
jo
addr16
js
stc
xchg
cli
jg
jb
pop
xchg
dec
not
in
movsl
push
rep
ds
andb
mov
gs
dec
fsts
xor
bound
mov
mov
js
out
arpl
xchg
aad
jmp
repz
lock
mov
mov
scas
mul
push
lret
add
mov
addr16
jge
inc
cmp
inc
dec
sub
ljmp
loope
clc
push
pushf
ret
cmp
lds
or
bound
scas
clc
jg
ror
fldenv
iret
mov
ffreep
pop
cmc
in
decl
and
mov
mov
int3
clc
jg
adc
lea
stos
dec
pop
test
jo
or
cmp
call
jg
adc
pavgw
mov
xchg
fprem1
mov
inc
push
sbb
fdivr
mov
or
dec
push
les
mov
mov
push
push
aad
clc
pop
out
divb
ljmp
icebp
ds
mov
js
pop
daa
push
addr16
mov
jnp
roll
push
lea
repz
stc
aam
test
inc
push
pop
sub
sbb
push
outsl
inc
out
fwait
or
decb
dec
lods
bound
push
scas
bound
pop
test
cmp
jl
inc
xor
cmpsb
cmpsl
add
push
xchg
cmpsb
cmp
movsb
das
sar
xchg
imul
popl
cld
and
cmp
andb
frstor
cmp
adc
andl
pop
jne
fidivrs
jle
fimull
mov
incl
rcl
sbb
lock
pop
push
cmp
es
pop
pop
fbld
or
jns
pop
lcall
lcall
jle
adc
mov
psubd
icebp
cwtl
fsubr
cli
call
bound
ret
push
add
jmp
pop
inc
fcoml
and
inc
push
xor
xor
dec
adcb
sbb
rorb
push
imul
into
sub
jge
ds
jmp
adc
pop
loopne
hlt
movsl
aaa
mov
into
xor
add
cld
mov
fiadds
jg
push
outsl
push
es
sahf
push
daa
cmp
out
add
lret
xchg
inc
cltd
jne
and
pop
mov
add
and
mov
adcl
clc
fdivrs
call
ja
mov
pushf
int
pop
aad
or
mov
pop
clc
rol
pop
pop
mov
adc
pop
fisubrs
ret
test
aad
or
sbb
cmp
nop
xor
incl
sbb
notl
lret
cmp
sub
movsb
iret
lret
and
xor
decl
xor
jb
push
jge
or
lcall
orb
cli
or
and
das
clc
rolb
jecxz
mov
jg
mov
in
inc
mov
repz
xor
and
mov
movsb
in
mov
shrl
negb
loopne
mov
cli
lcall
ljmp
mov
testb
pop
das
sbb
xor
inc
push
repz
mov
scas
repz
test
mov
mov
ds
dec
fisubl
inc
mov
jmp
mov
int
or
test
das
mov
sti
jns
mov
sarb
lcall
decl
jmp
inc
inc
stc
push
push
data16
scas
sub
out
push
pop
cli
sbb
out
ljmp
xlat
sub
hlt
push
test
cmpsb
loope
imul
mov
dec
arpl
mov
sbb
mov
ljmp
movsb
std
adc
int3
cli
popf
out
adc
sbb
and
lcall
mov
sub
and
jae
jecxz
int
dec
test
fsubrp
dec
pop
gs
out
jns
or
mov
mov
jae
fwait
inc
cmp
jns
xchg
mov
xor
sub
jne
mov
push
ret
fidivrl
pop
fwait
test
enter
mov
mov
push
and
arpl
push
outsl
ja
lahf
push
mov
lock
jl
ret
pop
loopne
inc
rcr
jns
idiv
incl
dec
in
jnp
aas
imul
sbb
addb
push
divb
stos
sbb
xor
pushl
cltd
fnstcw
scas
pop
mov
dec
fsubr
movsl
jge
out
cmp
jecxz
inc
rcrb
decl
cmp
dec
dec
pop
or
xchg
jl
or
add
out
inc
scas
push
xor
ljmp
xchg
loope
es
pop
subl
scas
cmp
mov
pusha
shll
sahf
cltd
jmp
cmpsl
rcrl
xchg
and
and
jb
mov
lcall
out
dec
movsb
pop
mov
adcl
dec
aam
cmp
inc
cmp
cmc
and
or
lcall
cmc
xchg
mov
xchg
cmp
sahf
dec
insb
or
popf
jp
mov
aam
and
ljmp
insb
or
inc
push
xor
adc
push
cmp
jnp
mov
cmp
push
jbe
insl
imul
rorl
out
push
pop
lahf
ds
push
or
jecxz
inc
roll
xchg
xor
pushl
rcrb
adc
xchg
pop
loop
pop
or
iret
data16
and
adc
mov
inc
and
jmp
cmp
ss
test
or
pop
push
cmp
clc
pushl
push
cmpsb
fcompl
add
and
call
cmp
pop
xchg
xchg
scas
ja
xchg
add
sbb
faddl
xchg
lea
dec
sarl
cmp
loop
fsubl
es
jp
addr16
aad
lahf
or
imul
push
popa
lret
jmp
and
ljmp
adc
lods
in
scas
push
cmp
mull
sti
ljmp
std
sbb
popa
gs
jg
pop
jnp
inc
push
nopl
pop
in
test
in
inc
shrb
jne
inc
cmpsb
mov
loop
sbb
sarl
push
sbb
je
ljmp
pop
lret
repnz
std
jae
scas
fisttps
push
mov
cmp
xrelease
adc
dec
and
cmpsl
adc
push
cmp
and
mov
jg
and
fisubs
out
mov
sbb
cwtl
push
lcall
jmp
pop
or
inc
jg
xor
adc
repnz
push
mov
rcl
icebp
add
out
cmp
sbb
fildll
xor
xor
mov
pop
pop
jecxz
ret
das
push
sbb
cs
adc
and
mov
pop
adc
xchg
icebp
ljmp
int3
pop
push
and
out
fcomip
ljmp
cs
dec
mov
sub
call
xor
add
mov
mov
js
insb
das
int3
mov
aas
call
mov
push
cld
inc
xchg
popf
lcall
fcmovbe
cmpsl
inc
in
rcr
xor
push
int3
dec
cltd
mov
sbb
jg
dec
and
js
adc
cs
outsl
sbb
push
pop
add
pop
mov
dec
stc
inc
subb
push
and
enter
das
mov
lock
ljmp
inc
in
addr16
cmpsl
jp
jp
cmp
inc
adc
xor
fsub
cs
cmpsb
sbb
lock
inc
aad
xlat
cmp
out
push
jae
rclb
sub
bound
out
outsl
jge
js
loope
imul
cmp
decl
out
sbbl
scas
mov
pop
cmp
jae
xchg
lahf
xorb
sub
adc
mov
es
das
mov
and
fnsave
mov
lock
xor
leave
cmp
stos
das
cli
mul
adc
cmp
loop
repz
prefetch
xor
incl
mov
stos
pshufw
in
push
subl
aad
jns
sahf
iret
lret
loop
out
ds
fcomps
fiaddl
pop
scas
jg
dec
cmp
jecxz
shr
repz
rol
sbb
aad
mov
mov
out
jmp
out
dec
jge
mov
in
lret
push
mov
mov
cmp
in
ds
jge
mov
test
xor
and
call
cld
and
sub
sub
je
xor
push
imul
sub
enter
mov
clc
repnz
pop
into
xchg
and
icebp
mov
lds
sub
mov
stos
das
add
push
addr16
mov
movsl
and
mov
lds
lds
xlat
mov
jbe
lock
adc
or
popa
fldl
loope
mov
or
out
in
push
xchg
mov
cmp
ret
lods
shlb
inc
xchg
xchg
jne
decl
cmpsb
loopne
addb
xchg
fnstenv
loope
popa
dec
sahf
jg
push
lcall
mov
incl
int
scas
push
add
cmc
inc
push
mov
cmp
shrb
mov
stos
mov
and
gs
add
mov
sbb
inc
dec
popa
into
sub
sbb
jnp
cli
and
xchg
int3
ficompl
scas
das
mov
jg
decl
icebp
sbb
je
rolb
mov
or
push
testl
lret
cmc
int
jg
lret
sub
dec
and
lods
sbb
push
sub
push
pusha
jge
dec
jmp
stc
pushl
out
sub
out
xchg
xchg
fistpll
jae
jns
cs
jp
sti
pop
pop
popa
dec
in
jno
sti
clc
pop
cmc
xorl
or
out
fistpl
lahf
adc
decl
cmp
mov
test
cmp
pinsrw
jmp
adc
mov
fcomip
jmp
push
js
lods
cmpsb
and
es
inc
push
cmc
sub
gs
lods
cmp
cmp
sbb
scas
jb
push
loop
je
mov
loope
bound
lcall
and
decl
push
imul
in
scas
or
adc
ds
push
inc
ja
mov
fidivl
nop
push
stos
and
int3
pushl
adc
out
xchg
out
loop
mov
roll
into
push
or
jl
hlt
scas
cmp
inc
mov
lcall
js
add
sub
fcoml
in
and
jbe
popf
sarl
cmpsb
push
or
mov
sbb
jmp
out
push
and
mov
in
dec
sarl
test
mov
pushl
or
lret
fcmovu
mov
mov
add
inc
nop
in
sti
lcall
push
xchg
xchg
adc
mov
adcb
dec
lods
lcall
add
add
mov
jbe
sub
loop
hlt
pop
incl
xchg
test
in
fistps
xchg
pop
rorb
in
sub
cwtl
pop
aaa
std
mov
dec
or
jp
mov
cwtl
add
jmp
mov
xchg
iret
mov
ja
stos
stos
mov
ss
adc
lcall
int3
mov
xor
orl
cld
lcall
mov
cmp
ror
cmp
push
pop
fs
jge
mov
call
fmul
or
mov
jge
or
aam
call
inc
fs
or
jecxz
adc
sub
out
nop
ficompl
pop
push
les
add
pop
popf
add
jp
add
seto
ret
in
lcall
ljmp
adc
or
enter
add
hlt
int3
das
sub
fucomip
mov
call
test
in
addr16
pop
xchg
cmp
push
outsb
ret
jmp
clc
lds
fstl
xor
mov
jmp
lret
dec
stos
ficomps
pop
jb
sbb
call
decl
jae
pop
ret
mov
addr16
pop
jmp
decl
mov
mov
mov
test
inc
mov
decb
fldcw
add
jb
sbb
mov
mov
inc
cmpsl
xor
lods
jns
sbb
lret
add
xor
cmp
repz
push
fcoms
dec
clc
push
aam
leave
icebp
xchg
push
je
push
call
call
test
cmpsl
add
xchg
test
jne
xchg
jecxz
cmp
loop
fdivs
popa
incl
ficomps
dec
int3
pusha
dec
popf
cmpsb
pop
test
divb
push
xlat
or
call
jae
jmp
jbe
addr16
jp
mov
bound
and
ljmp
lcall
cmpsl
clc
or
mov
out
fbld
jnp
jb
dec
pop
push
movsl
dec
or
inc
decl
jge
aas
lea
push
jbe
cltd
or
jp
ret
hlt
loop
enter
pop
nop
jmp
mov
push
dec
mov
jb
mov
sub
mov
adc
inc
ljmp
jbe
mov
push
add
jo
test
inc
xchg
shlb
sbb
mov
xlat
out
stc
push
call
lret
jg
sub
jb
and
rclb
pop
push
inc
and
rcll
mov
push
pop
sub
dec
fstpt
jno
cmpsl
fadd
stos
sbb
imul
jg
and
lahf
mov
push
fnstcw
clc
imul
jg
jb
push
lods
aam
adc
push
dec
or
icebp
cli
int
movl
cld
decl
or
mov
xchg
in
lret
loope
dec
mov
jb
call
adc
push
cmp
arpl
jle
dec
inc
add
inc
dec
mov
push
fisubrs
jno
cli
jge
popf
mov
jecxz
popa
xchg
cmpsb
jno
mov
daa
ss
rclb
in
mov
sub
call
add
cmp
add
xchg
lret
cmp
call
push
fwait
xchg
mov
or
repz
mov
cld
repnz
mov
mov
jmp
and
mov
loope
leave
ret
push
in
daa
or
mov
dec
popf
and
cmpsl
movsb
call
in
mov
shlb
shll
mov
lcall
or
nop
push
sbb
adc
shrl
jnp
je
enter
lcall
mov
mov
insb
jl
enter
mov
pop
fstpt
jae
xchg
sbb
fldl
shrl
fcoms
push
cltd
add
jge
or
fwait
mov
icebp
or
cmp
arpl
popl
clc
lcall
faddl
lock
lcall
add
mov
inc
lret
add
mov
aas
and
dec
xlat
sub
dec
or
call
enter
dec
jbe
ja
mov
mov
dec
nop
inc
and
addl
pushl
xchg
lea
shll
ret
and
cmp
or
std
mov
pushl
mov
call
scas
daa
shlb
xchg
lahf
in
je
frstor
jecxz
aas
ror
sbb
leave
dec
fcmove
push
xor
ss
lcall
cmp
push
je
pushf
addl
loope
and
sub
fldt
xor
out
xchg
and
xor
rorb
dec
or
pop
jb
test
test
mov
leave
arpl
mov
ljmp
jmp
and
fpatan
out
jbe
adc
jmp
incl
sbb
dec
stc
das
clc
ljmp
adc
dec
add
ds
jge
test
leave
lret
lock
call
sbb
test
test
loopne
imulb
mov
xchg
testl
imul
and
jl
inc
xchg
cmp
add
call
call
sbbl
xchg
push
xchg
xchg
cmpsb
sbb
and
jns
pop
jge
mov
mov
cmpsb
adc
mov
add
or
dec
xor
mov
jg
cmc
incl
popa
loop
cmpsb
and
fcoml
add
insb
mov
inc
mov
fdivrl
mov
int3
insl
mov
or
out
push
mov
popf
jp
xchg
out
pop
inc
xor
negb
ss
pop
cmp
adc
pop
ljmp
in
cltd
jno
jae
jmp
fdivrs
xor
jmp
xor
and
loop
call
inc
imul
cli
jecxz
mov
and
mov
inc
jae
and
arpl
push
lcall
mov
jg
loopne
mov
adc
xchg
lock
and
mov
ljmp
cmc
movsl
and
je
ljmp
out
andb
movsl
leave
out
stc
enter
call
into
call
sahf
sub
mov
out
or
jo
repz
sub
mov
fidivl
loopne
xchg
mov
fidivs
jge
add
jmp
call
sub
xchg
mov
push
mov
fs
sbb
scas
jae
call
fdiv
fs
testb
lods
cmp
lods
adc
lahf
js
pushl
jno,pn
das
pop
shl
cld
in
cmp
lock
repz
mov
lcall
inc
cltd
ficoms
mov
sbb
leave
pop
out
mov
icebp
lcall
mov
enter
xor
es
icebp
add
aaa
dec
add
pushl
push
pop
inc
out
aad
add
roll
sarl
mov
jg
push
cld
dec
stos
in
pop
std
addr16
adc
outsb
mov
nop
insb
mov
adc
mov
fisttpl
clc
pop
mov
pop
pushf
jb
xchg
sbb
push
add
lods
stc
and
add
add
inc
mov
outsl
pushl
cmp
adc
insb
decb
mov
mov
scas
push
adc
and
loopne
cmp
inc
fisubrs
shr
pop
cld
add
push
pop
jmp
xchg
mov
push
mov
lds
stc
insl
loopne
ret
sbb
pop
cmp
outsl
sti
cltd
ljmp
es
mov
aam
ds
pop
cmp
test
not
movsb
lahf
pushl
adc
or
push
mov
inc
mov
and
jmp
add
mov
aad
lcall
push
mov
cmp
and
jle
idivb
jmp
aas
popf
leave
jmp
or
aam
stos
cmp
sub
outsl
mov
cmp
sbb
sar
std
pushl
decl
push
fst
and
cmp
cmc
ljmp
mov
std
call
push
push
rorl
pop
xchg
mov
outsb
popf
cltd
movsl
test
sbb
mov
pushl
cld
mov
ret
cs
adc
popa
pop
stos
jmp
sbb
jg
push
add
ljmp
jo
or
nop
and
inc
mov
xchg
inc
jle
sub
mov
cmp
jb
mov
mov
bound
ja
cmp
decl
sbb
ret
inc
ds
test
mov
in
ss
sti
add
jmp
inc
cmc
jg
test
mov
daa
fwait
dec
imul
cmp
sahf
sub
aam
mov
gs
cmp
fcomip
pushl
mov
adc
pop
rorl
inc
decb
push
mov
incl
out
into
setg
pop
movl
jbe
push
rol
ljmp
xchg
lcall
stos
cld
xor
or
pop
stos
push
adc
icebp
mov
jmp
or
inc
sar
int3
inc
les
jmp
push
ljmp
inc
ret
into
dec
sub
mov
mov
stos
movsl
xlat
out
push
std
mov
inc
shll
in
jbe
aad
incl
test
jmp
in
cmpl
mov
mov
mov
shl
mov
hlt
and
cmc
ret
or
xchg
xchg
aaa
das
cmc
and
inc
sti
incl
jmp
push
inc
leave
xchg
sbb
iret
bound
in
mov
mov
cwtl
xor
jae
push
fildl
iret
push
hlt
imul
sbb
inc
cmpsl
sub
xor
rcrb
pop
cmp
pop
aaa
adc
enter
sti
cld
xchg
ljmp
fucomp
dec
cmp
mov
pop
sbb
add
fbld
pop
lcall
imulb
mov
pop
out
push
pop
ds
jl
imul
jo
dec
cmp
cmp
fisttps
out
js
rolb
jecxz
cmpb
aaa
adc
scas
lea
jecxz
decl
imul
mov
xchg
cmp
adc
push
pushl
pop
hlt
mov
cltd
imul
mov
sbb
aam
jo
xchg
pushl
sarb
cwtl
push
mov
scas
repnz
sub
push
stos
adc
lcall
pop
loopne
imul
lret
insb
addr16
adc
jmp
aam
mov
js
push
jl
call
jmp
xor
into
push
push
xorb
push
sbb
test
movsb
ljmp
mov
fistps
sub
or
jg
push
pop
fcmovu
cmp
std
loope
in
outsl
jl
call
jmp
jl
mov
sbb
fdivs
sbb
adc
sub
pushl
mov
mov
pop
and
dec
cltd
push
scas
mov
in
add
push
cli
mov
nop
mov
int3
lcall
test
mov
xor
pushl
cmpsl
js
ror
jg
inc
push
xchg
roll
mov
insb
into
adc
js
enter
fcomp
fcomip
cmp
dec
es
jnp
pop
mov
jge
inc
xchg
into
inc
adc
scas
fs
lret
push
loopne
jnp
mov
mov
xchg
cmc
or
scas
dec
js
ljmp
jmp
mov
dec
inc
dec
pop
inc
inc
xchg
mov
movsb
lea
push
push
or
or
pop
dec
sahf
ja
push
decl
xor
push
push
shll
adc
mov
loope
imul
jg
lcall
dec
xor
int3
ds
rcrl
mov
ficoms
lods
into
push
or
test
jnp
rorl
mov
insl
sbb
add
jmp
inc
push
sarl
int
sub
repz
stos
lret
push
out
out
fnstsw
pop
imul
push
jne
xchg
or
inc
scas
out
dec
outsb
push
lock
add
pop
dec
xor
cli
out
xor
xchg
fs
pop
add
sbb
push
aaa
iret
cmp
jnp
decl
xor
or
xchg
jns
add
adcb
inc
les
ljmp
adc
add
push
fwait
cwtl
call
and
das
ret
mov
incl
jae
cmp
add
adc
sub
nop
xor
cmp
ret
jmp
cli
mov
jl
dec
push
mov
call
in
ljmp
mov
add
fwait
or
mov
jmp
adcl
sahf
mov
mov
cwtl
jbe
fs
aaa
stos
xor
pop
pop
gs
cmp
or
lcall
sarl
clc
pop
add
dec
into
fstpt
adc
dec
inc
dec
ja
push
adc
push
mov
inc
xor
mov
dec
call
ljmp
xlat
insb
xor
mov
notb
dec
or
and
pushl
negb
ret
dec
inc
aaa
lret
push
xor
mov
outsl
nop
lods
add
hlt
bswap
jmp
loope
jns
sbb
loop
jae
dec
je
int3
cmp
pop
lods
pop
cmp
mov
push
lcall
pop
lret
sti
pop
aam
add
in
sub
daa
ret
add
fyl2xp1
outsl
and
sbb
or
cmp
inc
inc
cmp
mov
sub
pop
push
icebp
sbb
adcb
pop
ss
dec
dec
aas
cmpsb
out
sbb
add
pop
jmp
arpl
shrl
pop
cmpl
add
lds
xchg
sub
or
decl
cmp
fnsetpm(287
frstor
les
xchg
inc
mul
jbe
cwtl
xchg
inc
cmpsb
popa
sar
ja
call
add
xchg
cmc
lods
sarl
stc
popa
push
jg
call
mov
cwtl
lock
bound
ja
out
lret
push
gs
dec
sbb
clc
mov
ret
rolb
add
shll
and
and
incl
out
pop
call
imul
xor
push
movsl
xchg
inc
cmp
mov
and
mov
lods
pop
dec
ds
daa
jb
dec
mov
xchg
inc
xchg
push
decl
mov
or
daa
mov
and
jns
jg
sbb
stos
fwait
ds
das
mov
inc
lahf
lock
xchg
push
lock
inc
lds
mov
fs
lock
mov
push
test
outsb
jmp
data16
dec
inc
cmpsb
pop
mov
jmp
mov
shlb
jmp
push
xor
stc
pop
std
jg
sub
mov
xor
mov
jo
xchg
fldt
clc
aaa
dec
scas
cmpsb
pop
fsubrl
jle
jg
push
xchg
lea
or
lea
push
push
enter
mov
push
popa
js
insl
inc
pop
xor
ljmp
incl
insb
inc
sbb
js
pop
or
les
mov
cmc
mov
mov
jae
jg
ljmp
sbb
mov
jg
aaa
jne
lea
cmp
sti
ljmp
pop
add
adc
jmp
jno
mov
lock
leave
int3
int3
and
scas
clc
call
sti
popf
jbe
clc
sbb
lahf
mov
fistl
push
jle
sbb
and
jmp
in
push
scas
pop
lahf
pop
movsb
rclb
jb
aad
mov
dec
cld
call
nop
pop
arpl
lea
dec
push
outsl
addr16
sub
cmp
repnz
push
ljmp
mov
jle
mov
in
or
or
xor
shrb
mov
xchg
lcall
sbb
pop
inc
fwait
push
adc
add
mov
lcall
or
add
xor
adc
inc
xchg
pop
jns
out
and
mov
inc
filds
push
mov
rorb
call
je
test
jmp
adcl
push
call
and
mov
out
jl
out
inc
dec
scas
xor
and
cmc
clc
dec
int
dec
inc
push
outsb
ljmp
testb
in
incl
outsb
inc
or
repz
pop
pop
fcomps
mov
xchg
mov
add
js
jmp
mov
aam
shll
mov
leave
fisubs
xchg
mov
cmp
jmp
sub
leave
or
xor
mov
test
aam
lcall
adc
pushl
and
push
sbb
mov
xchg
jge
inc
dec
jne
xchg
jg,pt
out
add
jg
lock
or
stos
pop
sahf
pusha
jo
push
stos
out
out
lcall
andl
out
sbb
jnp
sbb
push
mov
pop
pop
adc
sbb
dec
add
mov
sub
test
in
frstor
out
or
jbe
or
gs
punpcklwd
ljmp
pop
sbb
in
sub
jo
scas
call
add
jp
out
inc
cmp
jb
lods
and
in
add
sti
out
adcb
call
test
add
lcall
cli
int3
lock
mov
out
xor
js
clc
decl
stc
mov
shlb
inc
jo
outsb
scas
jge
insl
cli
call
lods
imul
cli
cmp
cmp
clc
lcall
push
xor
xchg
push
popf
ret
and
aas
into
hlt
sti
lcall
mov
xchg
mov
cmp
insl
fcmovnb
sub
dec
jmp
or
mov
sahf
sbb
adc
pop
pop
nop
lret
sub
or
incl
inc
fdivrl
xor
adc
iret
sub
add
bound
jns
nop
mov
dec
es
in
insb
mov
xchg
in
idiv
aam
xor
push
push
lcall
mov
rorl
sbb
aam
sub
xchg
sbb
insl
call
movsl
das
or
pushl
sbb
dec
inc
mov
fimull
lods
and
xchg
jge
cmp
push
fcompl
sbb
xchg
jg
call
out
add
cmp
movsl
inc
dec
mov
sub
incl
movsb
mov
inc
pop
xor
jae
addr16
push
xchg
push
movsb
pop
mov
test
lret
or
sub
cwtl
jg
loop
shll
pushl
xor
sbb
iret
inc
orl
jmp
fwait
std
pop
or
idivb
out
outsb
daa
pop
ret
sub
push
fcomps
loope
dec
xchg
add
lahf
mov
stos
es
scas
hlt
push
in
mov
push
in
mov
insb
xchg
aaa
fmuls
rorb
lahf
int3
in
jg
dec
mov
adc
mov
mov
aam
mov
dec
faddl
xorb
add
jmp
cli
push
call
pop
ja
imul
aad
gs
push
jns
dec
imul
decl
lahf
xchg
jmp
jno
int3
adc
pop
jno,pn
mov
lcall
fdivp
inc
xor
xchg
cmc
add
push
movsl
fimuls
outsl
mov
inc
push
cmp
idiv
pushl
aas
add
pop
negl
sbb
repnz
into
jge
jecxz
sbb
xor
mov
add
stos
lret
arpl
iret
stos
jne
ljmp
decl
sub
and
ret
test
pushf
pusha
jl
mov
cmpsb
jecxz
jns
imul
iret
mov
clc
lcall
lahf
mov
shrl
movswl
ljmp
push
sbb
push
and
and
xchg
mov
pushf
inc
test
lcall
lods
sub
push
imul
jp
sbb
lcall
cs
scas
pop
xchg
call
stc
aam
pop
outsl
ss
outsl
clc
and
adc
mov
fstl
mov
out
das
adc
into
jbe
xchg
or
and
jge
pop
icebp
fimuls
mov
sti
test
push
dec
lods
cli
jmp
shrl
xchg
movsl
pop
xlat
in
mov
adc
loopne
out
ljmp
loope
out
and
fstl
jmp
xchg
rorl
test
lds
sbb
cld
add
movsl
push
pushf
out
jg
incl
push
push
xchg
es
inc
mov
enter
icebp
loopne
lcall
jns
adc
xchg
add
mov
cmp
test
lahf
cmp
das
out
dec
xor
xor
enter
sub
popa
dec
mov
mov
push
std
jmp
repz
mov
jno
adc
mov
xchg
adc
out
pop
loope
outsb
mov
push
rcll
ret
cmp
mov
mov
cli
jmp
mov
call
push
cs
je
testb
dec
leave
ffreep
scas
lret
fwait
push
pop
cmp
mov
jmp
push
lock
push
xchg
stos
test
pop
dec
push
jnp
ljmp
pushl
scas
cltd
mov
xlat
inc
or
xchg
imul
cmp
call
mov
xor
push
jecxz
add
cmp
push
out
push
sahf
daa
inc
pushf
lock
inc
andb
lea
les
cmp
int3
ja
ds
dec
mov
push
sti
pushf
inc
fimuls
icebp
mov
clc
pushl
mov
call
push
or
enter
mov
push
ds
jmp
lods
xor
mov
js
jg
add
push
decl
nop
push
test
lods
or
clc
cmc
sub
lds
sub
jmp
stos
pop
and
cmpsl
adc
mov
add
pushl
cld
jg
stos
jecxz
jge
mov
int3
icebp
call
or
pop
jmp
pop
add
call
pop
inc
outsb
divb
divl
ljmp
in
inc
mov
mov
mov
into
lods
adcl
mov
sti
test
lcall
fisubs
out
out
aas
loope
dec
into
mov
iret
mov
adc
inc
ljmp
xor
and
std
xor
testb
cltd
mov
faddp
fs
fisubl
inc
imul
inc
sbb
add
scas
cmpsl
stos
push
fsubp
and
fidivl
pop
cltd
pop
inc
sub
insb
scas
cmp
pop
sahf
push
and
jns
aas
push
pop
je
je
ljmp
xor
outsb
test
popa
adc
repnz
test
mov
jg
mov
inc
sbb
and
xchg
das
cwtl
adc
es
mov
mov
jg
fdivrs
into
mov
sub
push
add
imul
sbb
add
divl
loope
out
sbb
bound
inc
pusha
enter
fnsave
pop
jl
lcall
sbb
repz
pop
pusha
pop
mov
pop
test
mov
pop
xchg
pop
imul
out
loopw
arpl
mov
pop
cmp
aas
inc
jne
jecxz
fisttpll
push
sbb
les
xor
or
jge
je
rcl
lcall
add
adc
pop
dec
mov
push
sti
lcall
lock
cmpsb
inc
jle
insb
cld
jg
jg
cmp
fs
adc
pop
jnp
inc
push
lods
inc
sarl
mov
test
lea
jmp
lock
pop
xor
stos
cmc
xor
lea
gs
decl
push
jmp
add
cmp
sub
fcomip
dec
bound
adc
jmp
mov
int
push
dec
repz
push
fldl
adc
xor
cmp
or
cld
lret
adc
enter
in
aam
nop
pop
sbb
jg
das
ret
js
orb
push
cltd
aas
add
mov
outsb
jbe
and
inc
fdivl
cld
sbb
aad
sub
lahf
ret
lds
cmc
decl
mov
fstpl
ss
xchg
lret
les
sbb
das
add
aam
loope
test
xchg
jne
sub
stc
xchg
test
insb
test
daa
lahf
push
cmp
mov
xor
or
dec
clc
lret
push
sahf
pop
adc
mov
cmp
xchg
xor
xor
push
cmp
mov
call
mov
pop
mov
add
mov
fs
fmull
sahf
in
cwtl
nop
xor
mov
incl
xchg
out
inc
test
in
mov
and
movsb
pop
pop
or
and
push
jbe
in
sub
ljmp
clc
lea
pop
adcl
fidivl
push
xor
inc
jp
cld
dec
cmp
repnz
xchg
xor
iret
loope
mov
jp
and
jo
jl
arpl
lcall
mov
gs
mov
and
into
aas
test
scas
push
loopne
ljmp
jl
inc
addr16
lock
jnp
movsl
hlt
outsb
inc
fs
mov
jg
dec
les
sub
aam
lods
mov
add
outsb
push
lcall
lcall
popa
dec
lods
add
adc
or
sahf
rorl
outsb
mov
cmpsl
jmp
popf
in
sbb
jmp
pop
cmpb
jmp
rcr
and
pushf
sbb
mov
pop
leave
adc
push
in
xor
sub
dec
sbb
cmp
fdivr
mov
pop
xor
xorb
mov
cmp
or
ret
lods
cmp
test
ljmp
mov
xor
mov
xor
or
mov
aad
and
push
fadds
jmp
mov
std
cli
ss
push
idiv
jg
xor
rcll
popf
inc
rolb
pushl
jecxz
adc
movsb
je
and
adc
aas
stc
jnp
mov
adc
sbb
incl
mov
inc
aam
jb
dec
cmp
pop
lahf
pop
stc
mov
mov
aad
push
mov
lods
insb
jmp
mov
clc
test
testb
sbb
rcll
mov
icebp
jmp
fidivrl
stc
in
jle
jl
add
mov
adc
jg
mov
xor
leave
dec
outsb
loop
push
addr16
pushl
js
aas
sahf
int
dec
ljmp
mov
loopne
sbb
jmp
es
pushl
push
clc
mov
mov
pushf
out
add
push
adc
xchg
xchg
in
orl
movsb
or
add
mov
adc
movsb
adc
shll
rep
cwtl
ljmp
jbe
dec
xchg
dec
sbb
cld
adc
adcl
jle
jg
mov
mov
outsl
and
jae
pop
inc
call
fists
lock
jg
push
sahf
mov
dec
inc
bound
aad
in
outsl
into
lods
loope
cli
decl
notb
push
out
sar
call
xor
jno
popa
loop
and
int
dec
std
repz
cmpsb
xlat
jmp
ss
mov
mov
mov
pop
pop
dec
jg
jae
cmp
loope
hlt
imul
mov
push
and
movsl
popf
aad
ljmp
bound
and
data16
call
pop
jae
test
jno
in
pop
mov
lcall
decl
mov
and
adc
dec
cmp
mov
icebp
aad
lea
jle
loopne
jg
fmuls
dec
lret
iret
xchg
movsl
dec
xchg
mov
icebp
mov
int3
aaa
pop
and
sub
and
das
xor
inc
pop
pop
pop
push
pop
pushf
in
stos
lret
adc
clc
xor
dec
add
lahf
push
fcompl
int3
mov
jb
pop
inc
and
add
faddl
inc
jbe
xlat
int3
and
and
aam
adc
pop
fidivrs
jo
xlat
pop
call
mov
xchg
mov
fwait
jo
mov
dec
push
pop
loop
and
jle
stc
popl
cmpsl
stos
mov
jns
push
pop
ror
jbe
idivl
or
xor
les
vmread
ljmp
xor
adc
andb
sub
les
lcall
pop
dec
sbb
aaa
xlat
mov
push
lcall
insb
stos
lods
jmp
dec
repz
mov
fildl
cmpsl
or
dec
push
lods
das
inc
pop
dec
std
dec
xchg
clc
lods
xor
cmp
fs
jg
imulb
les
or
inc
or
adc
aam
mov
incl
or
imulb
mov
and
or
sub
push
mov
call
mov
pop
jns
aas
mov
iret
cmp
cmp
mov
mov
les
dec
fwait
pop
push
aad
inc
ja
cmp
repnz
and
and
cmpsb
or
fcomps
push
pop
cli
int
lcall
arpl
pop
cmp
fistpll
ffree
pop
dec
jae
icebp
add
ljmp
pushl
std
mov
mov
mov
loopne
push
dec
pop
and
decl
fnstsw
jp
pop
mov
or
sub
daa
xchg
xchg
pop
xchg
cld
imul
ljmp
in
cmp
out
push
xchg
mov
inc
test
subl
dec
jp
in
mov
pop
pop
rcrb
sti
aam
arpl
or
mov
call
stos
fcmovnb
xchg
sub
cmc
jns
mov
bound
outsl
cmpsb
jb
pop
inc
mov
mov
dec
fists
jl
shrl
mov
into
mov
push
in
mov
or
lahf
pop
das
xchg
inc
cmc
pushf
sbb
jb
lds
scas
mov
jge
cmpsl
nop
ret
decl
lea
bound
cmp
mov
incl
xlat
fistpll
adc
cltd
xchg
xchg
mov
adc
mov
sbbl
ljmp
movsb
push
jmp
mov
xor
je
ss
push
arpl
cmp
xlat
aaa
std
jmp
mov
jnp
sbb
pop
xchg
mov
loop
lock
jg
inc
adc
cmc
rolb
stc
cmp
movsb
xchg
test
pop
lock
lcall
adc
js
lea
out
bound
cmp
fcmovb
and
pushl
jg
call
push
adc
sahf
popa
jle
out
jns
aaa
inc
add
adc
cmp
mov
lret
dec
movsb
ja
mov
aas
loop
xchg
ds
push
push
sbb
icebp
arpl
ds
popa
jo
sbb
mov
imul
or
cmc
dec
jbe
inc
dec
cmc
sbb
leave
mov
push
xor
out
jp
clc
mov
dec
xor
nop
xchg
cmpsb
leave
mov
sbb
jg
ret
lods
pop
pushf
call
mov
popa
jne
int
fsubrs
insl
notl
loope
jmp
lea
fisttpl
mov
mov
mov
and
jmp
mov
out
jl
pop
arpl
mov
mov
lods
mov
pop
cltd
push
xchg
sbb
aam
decl
and
adc
lahf
ds
shll
xchg
sbb
inc
lahf
mov
jne
mov
push
ja
adc
push
jl
or
test
cs
into
call
incl
or
mov
adc
inc
les
jge
jle
xchg
inc
pop
sbb
mov
sarl
jmp
inc
notl
cmpsb
jo
inc
mov
daa
mov
loopne
rorl
jg
pushl
cmp
adc
nop
daa
or
lea
ss
push
and
ljmp
add
out
add
shll
fbld
jl
shll
shlb
subl
or
cmp
jl
in
xor
mov
fdivrs
call
push
fcmovnb
xor
test
inc
pop
sub
jne
call
fimuls
es
jae
add
xchg
out
lcall
sahf
icebp
sub
push
jbe
xchg
sbb
fiaddl
fistps
pop
inc
push
lock
add
loop
xchg
jp
rcrl
movsb
in
mov
xchg
stos
inc
dec
xchg
inc
sbb
insb
xchg
jo
icebp
pop
dec
jo
daa
ds
paddw
test
lcall
and
jne
dec
push
inc
in
inc
add
cltd
sub
jbe
add
push
jmp
mov
jmp
xor
and
inc
test
arpl
push
jl
push
lret
stos
ret
in
ljmp
movsl
fs
mov
popa
in
ljmp
in
in
imul
mov
dec
pop
sbb
inc
lds
push
lahf
mov
std
enter
cld
inc
movsb
lea
icebp
inc
or
imul
pushl
cmp
mov
jp
push
jno
sub
daa
sti
insl
clc
ret
dec
fdivr
out
fadds
jmp
in
fstpl
xchg
cld
push
fcos
movsl
or
ret
mov
push
mov
mov
decl
out
popl
pop
lret
mov
lcall
repnz
icebp
mov
scas
aam
inc
xor
pop
mov
inc
in
out
incl
lcall
and
pushf
push
popf
lret
pop
lods
ljmp
fcomip
jmp
pop
stc
mov
in
xor
hlt
filds
cli
xchg
push
mov
test
lcall
cmp
mov
mov
mov
mov
in
cs
jne
jb
mov
dec
xchg
dec
or
xlat
rcrb
or
iret
dec
inc
es
lods
mov
scas
and
mov
nop
cmc
jmp
push
push
or
stos
inc
out
scas
out
jnp
mov
cwtl
lret
sub
jmp
mov
rorb
jb
mov
in
xchg
xor
push
and
pop
icebp
mov
and
lods
or
jne
fisubs
stos
jge
dec
movsl
filds
lret
inc
or
add
adc
pushl
repnz
lret
mov
cmp
shl
or
ljmp
xchg
mov
loopne
push
scas
xchg
sub
aam
in
data16
pop
mov
repz
xchg
mulb
repz
sbb
enter
imulb
cli
fwait
outsl
lock
arpl
mov
or
jl
mov
fs
sbb
inc
xchg
outsl
pop
out
fists
jge
lods
push
jae
xor
pushl
daa
roll
push
fistpll
mov
cmp
add
imul
and
ds
cld
jns
cmpsb
aaa
push
cld
jno
cmc
inc
ja
aaa
inc
and
lahf
cltd
xchg
ss
decl
and
lret
and
aad
sub
ret
lea
addr16
fcomip
decl
mov
std
dec
call
mov
xor
adcb
push
mov
dec
scas
ljmp
cmp
inc
lds
testl
nop
iret
aas
jle
push
or
jbe
or
ret
sub
mov
fstl
mov
lcall
test
out
adc
jae
xchg
and
pushl
lar
cli
repz
dec
test
loopne
push
je
dec
dec
outsl
pop
jno
xlat
jp
cmc
stos
and
mov
pop
xor
add
mov
decl
jl
lods
movsb
inc
xorb
lahf
mov
add
mov
aas
add
shr
clc
mov
mov
push
loope
out
push
push
stos
pop
loope
call
sbb
test
mov
mov
mov
sarb
mov
loope
out
incl
lea
stos
ljmp
pop
cmp
outsb
lret
and
or
pop
loopne
lcall
push
aam
hlt
or
jnp
pop
add
xchg
cltd
mov
dec
pushf
pop
pop
pop
imul
pop
jp
or
sub
bound
and
cltd
or
cltd
fnstsw
idiv
inc
shlb
adc
pop
adc
fwait
add
loopne
push
out
mov
imul
fmul
lcall
jne
push
xchg
cmp
je
repz
adc
mov
lcall
data16
loopne
add
mov
and
add
mov
ljmp
push
sarb
int
or
push
cmp
jl
cwtl
xchg
cmp
lahf
shlb
ljmp
test
mov
xchg
outsl
jnp
xchg
jmp
add
mov
scas
ja
push
sbb
pop
xchg
pop
xor
fwait
lret
dec
pop
aas
and
ljmp
mov
aaa
clc
lahf
push
sub
lea
jmp
les
rorl
dec
add
in
lock
out
sahf
xchg
das
jl
popa
pusha
fs
or
add
inc
aam
inc
stos
mov
mov
ds
dec
pop
das
clc
pushl
mov
data16
loopne
out
mov
fs
mov
shll
jmp
pusha
fistpl
loopne
notb
inc
nop
rcll
fstl
sbb
dec
aam
out
push
or
pop
out
and
xchg
dec
dec
dec
xchg
push
cs
jg
add
inc
aaa
or
movsl
popf
enter
dec
push
add
cmp
or
lods
bound
jmp
cmp
lahf
add
mov
notb
insb
jle
or
hlt
aam
ljmp
ss
ja
fs
jmp
popa
popf
push
mov
ljmp
adc
lods
jo
cmc
std
rclb
jne
in
outsb
xchg
cmp
lea
sbb
cli
fcomip
js
mov
inc
outsl
outsl
sbb
pushf
jge
mov
mov
jne
call
sub
jp
pop
pop
adc
pop
repnz
jg
push
mov
mov
sahf
out
aaa
lea
push
xchg
stos
das
pop
dec
jl
daa
mov
stc
jae
imul
pushl
bound
dec
loopne
out
adcl
jne
insb
add
cltd
ds
pushl
in
nop
sub
enter
outsl
and
mov
test
enter
in
decl
jge
xlat
jae
insb
inc
adc
xor
xor
mov
xor
push
sub
outsb
test
fildll
decb
movsl
push
push
insl
fnstsw
pop
aam
addr16
rcr
mov
incl
push
mov
xchg
push
dec
and
outsl
push
in
scas
inc
shlb
lcall
pushf
mov
out
je
decl
pusha
dec
jp
js
shll
cmp
pop
fcom
xchg
inc
push
lret
ds
flds
test
fstl
out
lods
jne
dec
xorl
mov
ds
cmp
pushl
push
decl
mov
aas
roll
out
mov
adc
dec
push
aas
mov
pop
lcall
decl
and
xchg
sub
jmp
scas
lcall
inc
dec
push
dec
int3
andl
enter
pop
mov
fdiv
xor
ljmp
cmc
adc
adcl
dec
mov
stos
mov
mov
cmp
fs
dec
add
jl
xchg
push
sub
nop
pushf
sahf
stos
sar
out
pop
add
mov
aas
pushf
cwtl
mov
lods
add
sub
adc
incl
jmp
fs
lds
int
sbb
outsb
adc
mov
pop
cmp
inc
xchg
out
ds
mov
int
mov
mov
repz
cmp
pushl
mov
push
scas
ds
jns
test
cmp
xchg
call
loope
insl
ret
inc
inc
loopne
ror
test
jmp
iret
ja
dec
lahf
hlt
leave
xchg
jmp
or
ljmp
iret
and
dec
xchg
or
jmp
aam
iret
or
sbb
pop
dec
lret
repz
addr16
add
andl
inc
pop
std
repz
fdivrl
and
sbb
mov
shrl
push
insl
lret
push
cmp
sbb
mov
adc
out
fildll
ljmp
or
stos
pushf
cmpsb
es
push
jmp
mov
pop
out
inc
js
mov
cs
xchg
xchg
stos
sub
cld
ret
and
shll
ljmp
mov
test
add
lea
pop
mov
imul
add
pop
mov
cmpsb
mov
lods
int3
ret
or
mov
scas
lret
sbb
jbe
push
rcll
testl
call
loopne
sbb
pop
ret
xor
aas
flds
repnz
popa
sub
dec
cmp
test
cmp
lcall
xchg
or
jl
and
push
dec
stc
subb
push
jle
pop
jmp
jge
lock
decl
dec
xchg
std
pop
mov
lods
push
jg
stos
mov
aam
pop
mov
fsubs
pushl
js
outsl
mov
cmc
dec
cmp
jnp
jns
cs
fchs
inc
adcl
lods
test
decl
and
inc
and
xchg
mov
aad
into
sbb
dec
inc
jne
mov
jb
lahf
decl
pop
cmpsl
movsb
loopne
testl
sbb
sbb
sbb
xor
mov
add
jnp
push
orl
movsl
xlat
mov
incl
imul
imul
mov
jnp
push
cmpsb
repnz
or
decl
into
outsb
adc
popf
xor
push
lret
addl
push
cld
mov
jp
mov
repz
dec
test
test
movsb
xchg
push
imul
push
insb
sbb
fidivl
orb
lds
adc
cwtl
js
inc
jg
out
clc
scas
incl
pop
lret
push
pop
out
mov
into
mov
cli
lcall
jle
cmp
outsl
out
imul
sub
jg
nop
jmp
cli
or
out
pop
mov
mov
add
bound
push
jnp
push
aad
jle
pop
xchg
cmp
and
mov
sarl
or
rorb
aas
cli
ljmp
push
cld
inc
in
push
adc
push
mov
hlt
mov
cmp
sbb
inc
jp
jmp
inc
idivl
mov
jecxz
lock
and
imul
xchg
jl
aam
jmp
jmp
out
stos
loopne
dec
inc
push
jne
xchg
sbb
inc
mov
adc
cmpsl
ljmp
mov
call
aas
jnp
pushf
rcr
sbb
push
adc
jno
hlt
sbb
mov
fimuls
int
xor
and
or
imulb
jl
jnp
xlat
je
insb
or
sbb
inc
cmp
movsb
ffreep
popa
push
movsb
nop
xchg
pop
lea
jae
divb
cmp
mov
in
dec
rol
lret
bts
cmp
mov
xchg
stos
push
fildl
sub
lods
lock
test
add
or
inc
jne
or
test
xor
fisttpl
ljmp
xchg
dec
movsb
out
push
lahf
dec
xor
pop
cs
adc
xchg
xor
incl
jmp
loop
jl,pn
leave
and
or
shll
loop
insb
sub
incl
sub
jmp
idivl
add
and
jmp
or
decl
popa
lret
xchg
sub
iret
pop
mov
scas
hlt
xlat
sub
incl
xlat
fcmovb
mov
int
fldenv
out
in
xor
lret
call
xchg
je
push
adc
jmp
les
arpl
fmuls
ljmp
ss
addr16
inc
popa
cwtl
test
aam
push
inc
clc
xor
cld
jo
mov
gs
aaa
lods
or
mov
icebp
addr16
leave
cld
dec
es
call
mov
fisttpl
insb
sbb
movsl
icebp
out
sub
pop
xor
shll
stos
outsb
incl
cli
data16
cwtl
jg
xor
je
mov
mov
ljmp
in
jecxz
mov
imul
push
jl
mov
mov
test
mov
movsb
sar
mov
je
loop
jg
and
sub
mov
lds
add
outsb
jle
fcomip
jg
mov
xor
mov
cmp
mov
cmp
ret
aam
and
mov
or
pusha
mov
jmp
sahf
inc
jno
int3
sub
pop
mov
movsb
std
cmp
loop
imul
outsb
xor
jg
loopne
cld
xchg
xchg
pop
movsl
or
popa
cld
add
popf
sbb
fisubs
jnp
mov
ljmp
push
ret
jl
loope
mov
xor
sbb
inc
loopne
push
out
lahf
jg
inc
dec
into
cli
fstpt
ljmp
into
sbb
shrl
fwait
decb
push
or
xlat
add
mov
incl
xchg
gs
add
cmpb
ret
leave
mov
ret
mov
lcall
xchg
mov
pop
add
mov
mov
mov
push
add
decl
pusha
pop
nop
jl
or
mov
pop
sbb
or
xchg
lea
sub
inc
nop
jae
aaa
lods
xchg
mov
and
cmp
insb
imul
stc
pop
jmp
incl
xor
jmp
lret
outsb
jmp
call
lcall
jno
push
pushf
or
mov
mov
mov
dec
and
lret
stc
mov
int3
repnz
xor
push
inc
icebp
pop
inc
ja
fwait
aas
cmpsb
push
adc
call
pop
push
dec
mov
jbe
icebp
cmp
or
cmp
das
add
sahf
nop
incl
pop
push
in
decb
xor
dec
aas
or
push
push
add
jmp
dec
lods
adc
pusha
mov
popf
jle
dec
hlt
mov
imul
ljmp
or
shr
lods
push
test
or
orb
mov
sbbb
ljmp
jne
loopne
xlat
mov
ret
lock
mov
cmpb
test
stos
pavgb
dec
js
xchg
daa
shll
inc
sbb
mov
call
mov
xlat
test
imul
lahf
xchg
and
sub
push
iret
or
mov
shrb
data16
lea
mov
rcl
addr16
mov
cmp
lds
aad
xchg
stos
ljmp
and
call
setge
xchg
ret
and
xor
cld
inc
outsb
aaa
shlb
cmp
fistpll
jg
push
sbb
jl
mov
mov
cmp
mov
or
lcall
vprotb
mov
lcall
sbb
cli
test
mov
stc
cmpsb
and
nop
lds
fcomp
lahf
push
dec
jecxz
lods
add
lods
in
iret
loope
in
sbb
insb
push
cmp
cmp
push
ja
lock
incl
movsb
xchg
or
mov
pop
jae
lret
pop
push
test
decl
inc
push
xchg
icebp
jmp
inc
arpl
or
aad
ss
fs
aas
jg
fmuls
adc
sbb
or
enter
cmpsl
mov
imul
roll
and
stc
push
ret
dec
mov
jmp
ret
aaa
xchg
out
sbb
test
or
jmp
nop
test
push
popa
sbb
es
inc
or
jge
push
add
fcomip
and
dec
imul
jecxz
inc
mov
sbb
in
in
das
sarb
shlb
js
push
pop
and
rorb
pushf
dec
out
fwait
hlt
jmp
dec
dec
sahf
lds
sbb
adc
xor
cmp
push
insb
mov
mov
or
xchg
mov
mov
mov
fs
int
fs
fdivrs
mov
inc
dec
mov
sub
xchg
mov
mov
jecxz
out
jb
mov
outsl
int3
add
push
push
dec
push
scas
adc
cld
incl
add
push
mov
mov
movsb
stc
iret
sbb
jo
or
lcall
nop
xchg
les
loop
jne
mov
cmpsl
lretw
mov
in
jecxz
jle
mov
adc
repnz
push
cmp
lock
insb
cwtl
fisttps
shrl
dec
lret
adc
or
icebp
pop
jmp
ljmp
outsb
outsl
popf
sub
dec
push
inc
inc
cmpsl
jbe
sbbl
sub
sti
hlt
daa
cmp
mov
cltd
cmpsl
mov
ret
cs
outsl
mov
mov
xchg
pop
and
push
adc
xlat
aas
and
jecxz
mov
dec
rep
mov
call
mov
inc
movsl
xchg
or
push
test
loope
in
cmp
cli
dec
std
ss
data16
pop
add
addr16
sub
in
out
clc
incl
fsubrl
add
xchg
sub
dec
lods
push
jmp
and
mov
cwtl
jne
sti
and
push
sub
adc
pop
mov
insb
sahf
ret
add
inc
fdiv
stos
cmp
dec
pop
and
sahf
enter
jno
out
sar
decl
jae
ljmp
or
and
adc
mov
mov
dec
sub
pop
pop
lea
inc
hlt
les
mov
sti
mov
mov
test
dec
mov
cmp
mov
mov
incl
insl
leave
mov
fnstcw
les
jl
movsl
and
xlat
out
mov
lods
xor
xchg
xor
jns
repz
mov
aaa
std
mov
cmp
inc
std
sbb
in
jno
adc
sub
outsl
cli
mov
shrb
pop
cmp
pop
fldt
pop
dec
sar
pushl
std
inc
xorl
or
sbb
jl
div
insl
rolb
lret
inc
aam
loopne
aaa
or
addb
mov
lret
js
pop
popf
bound
clc
mov
gs
push
lret
mov
pushl
inc
repz
mov
sub
inc
sbb
xchg
jmp
in
push
jmp
shl
xor
inc
pop
cmpsl
enter
rorl
ljmp
pop
repz
mov
sub
push
loopne
ret
out
mov
pushf
mov
jmp
sti
xchg
cmpsl
sub
iret
incb
dec
pop
inc
fs
les
jmp
ja
cmpsb
fadds
fidivrl
xchg
pop
enter
jg
lcall
scas
dec
jg
cmp
xorl
or
lcall
inc
bound
sub
imul
subl
mov
pushl
push
mov
daa
pop
xchg
inc
cltd
psrld
sahf
cmpsl
push
jecxz
inc
movsb
cmc
or
or
out
push
pop
dec
pop
cs
scas
mov
movsb
mov
scas
jmp
fcomip
pushl
aas
cmc
pusha
shlb
cld
and
in
mov
inc
nop
into
xchg
add
push
or
push
jecxz
or
jg
ljmp
sbb
jl
scas
ret
sub
js
sahf
insb
jg
mov
push
xchg
imul
hlt
add
fmull
in
cmp
loope
les
ljmp
data16
jbe
push
add
popf
adc
rol
adc
pop
pop
add
ljmp
lea
std
push
push
mov
jbe
loopne
jbe,pn
jg
mov
dec
shrl
mov
cmpsb
dec
push
inc
jg
mov
xchg
pop
or
push
mulb
add
decl
mov
outsb
push
insb
ljmp
inc
mov
adc
fwait
pop
jp
scas
hlt
lea
hlt
cmp
jne
mov
decl
jbe
jecxz
and
and
xchg
mov
movsl
iret
inc
mov
mov
frstor
jmp
ror
nop
jge
scas
xor
in
nop
ljmp
jecxz
adc
mov
test
lcall
jmp
shrb
jbe
nop
imul
in
aas
pop
jb
int3
fcomps
push
mov
mov
dec
das
nop
cmpl
xor
xchg
push
mov
add
pushl
push
test
in
js
mov
out
mov
sbb
les
cli
movsl
mov
decl
adc
cmc
cld
or
fwait
sub
sahf
xor
sar
in
sahf
fcmovb
push
outsb
push
out
leave
xchg
ss
insb
xor
out
push
fmul
mov
fcomps
xchg
hlt
lcall
or
sub
cli
inc
mov
lcall
sbb
mov
sti
repz
repz
pop
lods
add
ljmp
lcall
mov
frstor
and
adc
dec
cmp
sar
clc
xlat
inc
sahf
add
cmp
jne
mov
sbb
ljmp
loop
xor
mov
xchg
mov
movsb
loop
fucom
test
xchg
out
pushl
stos
jecxz
jo
pusha
dec
pop
or
ds
push
je
xor
test
mov
arpl
test
fimuls
xchg
sti
adc
or
ja
popf
mov
outsb
pop
dec
xchg
mov
scas
call
pop
popa
push
in
popa
sbb
jg
xor
adc
sbb
stc
inc
adc
push
mov
mov
nop
xchg
lcall
movl
repz
lret
clc
scas
jl
in
icebp
jno
cld
cmpsb
popf
push
lods
jb
and
cmp
cmp
inc
pop
testb
popa
jl
add
in
movsl
adc
push
sarb
sub
add
sti
adc
not
out
clc
push
ljmp
mov
jo
addl
decl
sub
lods
scas
mov
cmp
xor
cmp
popf
sbb
mov
push
cmp
cmp
decl
aam
rol
xchg
inc
stos
xchg
pop
fistps
mov
enter
mov
xor
mov
xor
pop
push
jge
xchg
enter
ds
pop
lcall
mov
lods
aaa
sar
jg
sti
ljmp
js
loopne
in
cmc
ret
xchg
clc
sbb
sub
cwtl
or
pop
js
xchg
pop
nop
push
dec
pop
dec
test
push
xlat
or
inc
lock
dec
mov
insl
aam
lock
lcall
dec
sub
out
inc
push
inc
roll
or
out
or
cmp
or
out
xor
cmp
outsb
pop
mov
sarb
into
dec
jo
pop
faddl
push
or
inc
xor
stc
dec
fmuls
cs
and
incl
jl
test
pop
lcall
out
xchg
mov
insb
and
push
adc
call
pop
sbb
or
mov
add
jmp
pop
std
add
aad
or
inc
inc
inc
mov
ljmp
testb
cld
icebp
mov
sub
lret
mov
push
mov
mov
xor
mov
jns
lods
cmc
xor
sahf
push
mov
mov
xlat
mov
jecxz
fbld
scas
add
dec
and
push
adc
jg
adcb
out
mov
in
xchg
cmp
mov
pop
mov
scas
add
loop
ja
dec
push
icebp
movsl
out
cld
jg
push
mov
nop
mov
test
pop
ret
and
mov
fists
loopne
outsb
outsl
mov
mov
mov
outsb
mov
pushl
data16
icebp
cmp
push
popf
mov
bound
hlt
scas
mov
mov
call
fs
sbb
sub
dec
dec
dec
movsb
add
lcall
jg
mov
mov
push
xchg
sarb
jno
andl
mov
test
bnd
das
cs
ljmp
mov
mov
mov
cs
dec
stos
movsb
stos
add
test
loope
decl
ret
mov
loop
call
cmp
dec
ss
mov
ljmp
cmpsl
fnsave
mov
push
movsl
decl
mov
mov
mov
les
or
sub
aaa
jl
mov
sub
shll
xchg
subb
repz
les
cmp
mov
add
push
pop
jg
xlat
ljmp
pusha
jmp
pop
pushf
mov
test
push
gs
testb
or
and
mov
mov
sub
mov
sbb
mov
shrb
dec
js
sahf
and
mov
xchg
or
add
dec
sbb
jns
out
mov
loopne
out
and
decl
and
insb
mov
pop
inc
jle
dec
mov
cld
jmp
or
mov
sbb
les
lret
and
or
pop
sbb
dec
dec
cmp
pushf
mov
lds
data16
mov
dec
or
pop
clc
dec
mov
inc
daa
adcb
loopne
jmp
cmp
mov
pushl
sbb
or
and
jmp
decl
lock
lea
pop
leave
push
aaa
lods
idivb
les
mov
cwtl
or
cmp
cmp
test
sbb
or
lahf
scas
add
addr16
imul
jbe
sub
rclb
pop
dec
and
out
iret
data16
repz
gs
aad
incl
xchg
mov
test
inc
lcall
popa
fldt
or
decl
arpl
repz
dec
int
iret
notb
sub
cli
lods
cltd
cmp
mov
pop
loope
push
cmp
scas
ljmp
sub
mov
fnstsw
pop
jle
sbb
das
pop
cmp
cmpsb
mov
jle
cmp
call
xchg
sbb
sub
ret
jne
mov
call
mov
fsubs
mov
and
push
inc
orb
lret
addb
movsl
or
orl
or
sub
in
lds
cli
das
movsb
popl
mov
fildll
out
in
lcall
nopl
mov
mov
decl
lock
jl
ss
dec
jmp
test
sbb
xor
hlt
add
push
nop
cmp
mov
inc
jmp
jge
lods
mov
jl
mov
shlb
jb
stc
repz
and
ljmp
repnz
sahf
int3
inc
mov
lods
incl
int3
adc
push
sbb
adc
mov
jb
int3
inc
cmc
loop
mov
pusha
idivb
xchg
out
addb
push
dec
mov
mov
inc
movsl
dec
mov
cmp
xor
cmp
cli
subb
xlat
adc
or
es
ljmp
add
add
dec
sbb
in
fwait
mov
inc
shrb
sub
nop
enter
jecxz
inc
loope,pt
mov
sbb
or
popf
pop
mov
inc
aam
push
scas
cmpsb
lcall
cmp
mov
inc
add
cmpsl
or
mov
cld
call
jno
aad
cmp
xor
mov
test
pop
mov
enter
enter
insl
fdivrs
adc
xadd
test
mov
push
roll
inc
jg
mov
lcall
mov
jns,pn
sub
cltd
adc
insb
add
adc
loop
add
fcomps
decl
jmp
cmp
add
xchg
mov
in
mov
lods
idivl
xor
lahf
xchg
xchg
jecxz
fisubl
jp
mov
lcall
xchg
cmp
lahf
push
mov
pusha
sbb
cmp
and
inc
ljmp
push
dec
xchg
jb
inc
negl
mov
sub
lahf
push
les
jg
mov
fisttpll
mov
sbb
mov
pushf
fldenv
lcall
in
cwtl
push
fimull
pusha
mov
lock
add
cmpsb
push
insl
xchg
push
dec
fisubl
addr16
decl
leave
xchg
icebp
cmp
int3
mov
int
repnz
cmp
cld
lods
and
decl
cmp
jbe
pop
jl
add
xchg
push
out
rcrb
and
and
popf
cltd
lds
cmpsl
ljmp
pop
sub
jge
ljmp
inc
mov
cmp
xchg
fs
das
sbbb
dec
call
aaa
imul
mov
jle
insl
or
fsub
add
ljmp
jno
hlt
xor
sub
jp
mov
aaa
adc
push
cmpl
icebp
and
mov
iret
cmp
gs
mov
clc
lcall
sbb
sahf
test
ja
push
or
inc
xor
imul
incl
test
mov
shrb
sub
jae
inc
inc
in
dec
imul
call
push
cmp
pop
pop
jg
movsb
adc
sar
cltd
nop
or
mov
dec
lcall
push
add
mov
mov
push
add
outsl
decl
and
imul
mov
loopne
fcomip
mov
inc
in
pop
xor
inc
cwtl
adc
dec
loopne
dec
mov
leave
out
jb
or
fstpl
enter
addr16
negl
and
enter
clc
std
das
mov
xor
push
insl
test
cmp
sub
sub
ljmp
decb
sub
xchg
mov
lret
gs
in
jle
repnz
call
movsb
stos
xchg
ret
mov
mov
jne
aaa
jo
push
dec
xor
mov
lods
movsl
es
pusha
jg
lock
insl
subb
aad
jmp
ljmp
mov
rcrb
xchg
xlat
dec
cmpsb
add
out
or
push
or
sbb
scas
idivb
adc
push
es
shrl
or
pushl
fsubrs
jle
fwait
inc
or
inc
and
gs
insb
dec
mov
movsl
int
pop
aam
enter
lcall
addr16
jne
push
pushf
lahf
sub
pop
jb
add
js
adc
ret
and
ljmp
jl
sub
push
or
inc
pop
loope
mov
in
jg
lea
and
in
lret
rcll
in
ficoms
dec
and
mov
es
pushl
fs
movsl
pop
fwait
pop
ret
xchg
dec
pop
and
aas
aaa
inc
js
in
leave
das
xchg
or
pushl
push
pop
mov
loop
jl
mov
int
roll
xchg
adc
sub
push
in
xor
jmp
repnz
sahf
xchg
fdivl
outsb
push
mov
decl
sbb
popa
add
adc
fistpl
mov
cmc
dec
leave
dec
lcall
jmp
jb
dec
xchg
mov
xchg
int3
dec
fcompl
rcrb
fcos
incl
orb
push
xchg
mov
imul
mov
adc
lock
jl
mov
decl
lret
call
mov
sbb
std
pop
pop
out
imul
ret
ja
cli
ret
movsl
loopne
lods
push
xchg
sbb
fcomps
cwtl
fbstp
std
fucomip
sbb
jne
dec
xchg
sub
xor
xlat
mov
xchg
jecxz
and
push
imul
call
cmc
xchg
out
mov
shl
dec
dec
lods
das
dec
dec
test
insb
adc
mov
divb
xor
xlat
nop
pop
mov
pop
xchg
shlb
add
xchg
bnd
insb
daa
in
jmp
add
pushl
subb
sbb
ljmp
bound
dec
mov
lods
and
or
push
mov
ljmpw
lcall
cmpsl
cmp
aad
ret
popa
dec
push
call
bound
or
dec
add
decl
lods
cltd
ret
and
mov
mov
ljmp
adc
inc
or
ds
xlat
loopne
nop
sub
dec
lret
dec
scas
cmp
push
push
js
insb
and
enter
and
cmpsl
jge
out
mov
inc
add
xchg
adc
lret
or
ret
sub
insb
leave
loope
loopne
jns
inc
jge
dec
loope
cmp
ljmp
inc
inc
mov
movsl
fcomi
xchg
mov
push
loope
fnsave
mov
insb
bound
pop
jle
jno
cs
decl
cmp
or
cli
pop
pop
dec
and
data16
cmp
xchg
xchg
mov
outsl
call
fmul
ret
mov
roll
push
les
pop
or
jg
pushl
fs
mov
insl
mov
sub
leave
dec
inc
mov
dec
cli
push
test
ljmp
jae
inc
xchg
mov
into
lods
push
or
mov
inc
pop
mov
and
pop
fimuls
fwait
push
test
aas
jmp
dec
loop
pop
into
scas
ret
sbb
rcrl
adc
cmp
mov
in
sub
jp
jb,pn
adc
pop
xchg
clc
mov
call
fs
addb
xor
int3
sbb
xchg
mov
mov
adc
xchg
adc
dec
xchg
add
adc
divl
call
std
imul
loope
in
js
mov
dec
jbe
fwait
mov
adc
ds
push
push
std
inc
popa
int
ret
pop
cs
shlb
mov
loop
movsb
cli
int
inc
lods
mov
out
add
test
je
sub
inc
inc
mov
hlt
mov
dec
data16
dec
call
loopne
jo
push
jge
ret
scas
shrl
xchg
sar
pop
mov
pop
xchg
or
das
repz
push
or
sub
and
rclb
dec
aad
pop
sahf
add
adc
xor
dec
clc
mov
lcall
dec
push
jns
mov
imul
add
jbe
ja
jg
inc
div
xor
je
lods
out
lcall
ret
jmp
push
loopne
fildll
data16
imul
jae
testl
mov
out
pop
inc
lcall
lds
stc
arpl
stos
and
lds
mov
in
incl
insl
inc
pushf
vpmacsdql
xor
arpl
jmp
mov
std
add
pop
movsb
call
ja
inc
ds
stos
sbb
jle
aas
add
call
and
jmp
inc
cld
mov
adc
test
jg
and
and
mov
mov
pushl
pop
mov
and
ljmp
jg
jns
call
xor
cwtl
add
pop
aaa
je
idivw
mov
xchg
das
test
decl
jo
aaa
sbb
push
in
inc
addb
sbb
sahf
xor
in
mul
aad
mov
mov
decl
lds
gs
out
cmpl
test
fldcw
loopne
das
sub
inc
jp
imul
sbb
inc
sub
pushl
clc
mov
jecxz
sti
push
pop
in
xchg
sbb
sub
sub
pop
mov
or
lcall
mov
aaa
and
movsl
mov
jp
fbld
cmp
push
fnstenv
xor
cwtl
ja
mov
mov
test
outsl
idivl
jmp
cmp
jl
into
fwait
jnp
xor
popf
push
cwtl
dec
and
jmp
nop
popa
fs
ds
push
and
or
popf
xchg
xchg
push
adc
lret
movb
pushl
imul
test
lods
outsl
and
cmpsb
andl
mov
inc
repz
ret
pushl
lods
mov
das
jecxz
dec
adc
push
xchg
mov
int3
leave
sub
mov
jmp
adc
xor
mov
roll
mov
bound
lret
jb
mov
xchg
dec
lcall
jae
mov
mov
pusha
outsb
sbb
mov
je
ljmp
aam
jns
pop
push
sbb
rolb
xchg
fimuls
cmpsl
pop
lcall
jg
fisubl
mov
mov
enter
pusha
test
cwtl
lods
out
fdiv
stos
flds
subb
ja
fs
cli
mov
or
sbbb
mov
xchg
lods
cs
es
mov
push
push
in
xor
jg
cmpb
mov
sbb
xchg
loop
out
pushl
or
and
rcll
sbb
xchg
repz
and
sar
pushl
mov
insb
add
push
and
jp
mov
jns
fldl
ss
push
clc
pop
dec
mov
jmp
arpl
mov
ror
test
mov
mov
fs
push
dec
push
sub
pushl
repz
arpl
mov
xor
xchg
shll
push
inc
loopne
adc
fdivrp
pop
push
fistpl
add
mov
ljmp
jl
hlt
test
aaa
lcall
negb
and
pop
jecxz
fists
sbb
add
mov
or
mov
adc
rcl
popf
repnz
jmp
pmovmskb
out
loopne
pop
cmc
adc
orl
xchg
js
ja
shrl
mov
insb
aam
pop
sti
jno
enter
jp
cmp
stc
xor
lahf
sbb
sbb
jne
xor
jg
or
xchg
mov
push
jmp
inc
lret
clc
out
sub
mov
test
loopne
incl
xchg
or
rcrb
in
xchg
xor
loop
mov
clc
lret
stos
adc
ljmp
xor
push
xor
iret
and
repnz
lods
adc
aad
jmp
clc
dec
mov
into
out
jmp
xorl
xchg
into
push
mov
jg
lcall
cmpsb
adc
or
mov
xor
movsb
popa
cld
imul
inc
fidivrl
icebp
lds
loope
inc
pop
add
ljmp
popf
xor
fcoms
jl
insb
sbb
ss
mov
xor
repz
pop
and
in
pushf
stos
pop
fisttps
sub
mov
pop
jno
cmp
push
pushf
out
cmp
fstpt
mov
in
mov
dec
clc
xchg
lret
fimull
xchg
and
jmp
js
fisttps
je
clc
push
std
decl
fisubs
shrb
repnz
pusha
loopne
cmp
cmp
cmp
push
outsl
aad
popf
mov
imul
ljmp
dec
sbb
xlat
bound
ret
mov
movsb
xchg
push
adc
add
addr16
mov
jae
sub
ljmp
decl
pop
clc
fbstp
dec
fildll
loopne
dec
sbb
or
ljmp
jg
jmp
stc
es
insb
xlat
insl
mov
xor
mov
lahf
push
dec
mov
mov
insl
jmp
out
insb
or
jle
movsl
shlb
sar
mov
rorl
andb
cmpsb
test
or
xor
fwait
cmp
pushf
data16
inc
hlt
or
shll
in
shlb
test
stc
add
das
mov
inc
xor
push
inc
mov
push
sub
imul
out
inc
cmp
cwtl
in
sbb
cmpsl
insl
push
pop
lret
push
mov
insl
insb
adc
das
xor
repnz
push
cmp
cmp
shl
jl
mov
fstpt
lret
xor
ds
arpl
pop
inc
jno
mov
out
into
adc
clc
outsl
add
sub
clc
push
out
pop
out
out
fwait
xchg
cmpsl
sub
test
and
fidivs
fidivrs
mov
in
xchg
popf
cmc
add
pushf
push
sbbb
repnz
dec
add
out
pop
lcall
in
and
fldcw
jbe
jl
add
mov
mov
xor
arpl
ja
sub
imul
cmp
aad
sub
xchg
loopne
lcall
pop
pop
cmpsl
cmp
push
es
pusha
mov
cmpsb
mov
mov
add
divb
loop
adc
jbe
inc
pop
xchg
mov
cmp
lret
mov
subl
fisttpll
pop
add
jmp
inc
shll
andb
jge
adc
out
sbb
call
ljmp
or
sbb
ss
sbb
adc
mov
inc
mov
dec
or
cld
pop
fidivrs
sub
pop
push
dec
into
data16
add
cmp
adc
add
push
jp
push
loopne
decl
cmp
sbb
subb
fwait
pop
adc
test
or
and
lcall
push
pushf
insl
fsubrs
push
loopne
pop
out
jno
das
aad
iret
rorb
push
mov
push
cmp
jno
dec
mov
pop
dec
cmpsb
inc
outsl
inc
enter
push
mov
sub
dec
sub
push
dec
movsbl
loop
and
ret
ljmp
pop
mov
lods
repz
out
xor
cmp
lcall
insb
sbb
dec
lock
inc
mov
push
cmp
leave
mull
ret
ds
les
pop
mov
lods
popa
mov
jae
xchg
mov
jle
sahf
sar
ljmp
jnp
mov
inc
push
or
mov
jge
loopne
sbb
jg
cwtl
sahf
loope
test
cmpsb
sub
in
ljmp
pusha
aad
ss
lcall
adc
adc
push
mov
xor
ljmp
xchg
mov
push
mov
mov
add
pop
inc
xorb
and
add
addb
mov
and
incl
or
add
fcom
push
mov
add
mov
jg
add
pop
in
dec
add
ret
add
add
rcr
or
dec
orb
push
test
push
test
iret
push
and
or
scas
jle
roll
lock
pop
pop
imul
pusha
das
call
mov
mov
jnp
xchg
movsl
push
idiv
int
daa
add
xchg
dec
and
cmpsl
push
and
cs
mov
push
movsb
push
movsb
inc
scas
push
and
stos
push
and
in
cld
pop
push
push
test
and
imul
push
icebp
in
push
push
inc
pop
pop
add
mov
pop
sbb
fistps
pop
sbb
inc
mov
pusha
sbb
mov
imul
push
adc
fs
mov
stc
int
or
lret
imul
imul
imul
sub
lret
mov
jbe
insb
sub
fdivs
mov
stos
pop
scas
mov
cmpsl
stos
mov
or
jbe
add
jo
mov
push
shll
add
outsl
push
shll
push
fidivrl
iret
outsb
or
push
cs
adc
jns
out
jge
fisttps
fists
xorb
ljmp
movsb
push
add
mov
or
jae
shlb
mov
pop
rorl
out
push
push
push
add
jne
push
aam
jle
push
add
mov
sub
ss
pop
dec
add
pop
neg
sbb
data16
inc
xchg
fnsave
add
push
push
shlb
lret
fcmovnbe
cmp
stos
aas
add
ja
push
mov
xlat
jne
add
ja
push
pop
mov
sub
xlat
ja
js
push
or
fidivrl
push
jp
jp
inc
push
fidivrl
lds
ja
fldl
cs
mov
ret
jmp
ljmp
fcmovnbe
fisttpll
in
xchg
sub
xchg
xor
or
push
setbe
xor
fstpt
cwtl
aaa
push
lcall
xchg
sahf
in
push
cmp
pushf
cmp
popf
xchg
fst
insb
fistpl
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imulb
movl
repz
add
lock
hlt
clc
stc
iret
repz
cli
sti
cld
std
incb
pop
and
jo
add
mov
jae
add
imul
popa
push
add
pop
add
mov
insb
add
pop
add
push
add
or
push
mov
mov
add
fistpll
mov
add
add
or
or
pop
sti
inc
repnz
test
or
push
mov
aam
sbb
adc
adc
lods
add
shrb
pop
stos
femms
lods
lods
pop
mov
lods
dec
mov
add
scas
insl
sbb
stos
lods
pop
pop
adc
and
mov
add
xchg
in
pop
scas
sbb
scas
scas
scas
scas
sbb
mov
mov
and
mov
pop
push
mov
inc
push
xorl
lock
and
mov
mov
pop
and
push
xor
pop
mov
and
shrl
pusha
fwait
and
sub
mov
popa
xchg
cld
test
mov
repnz
and
mov
in
mov
mov
ficomps
cmp
in
or
mov
cmp
push
mov
add
mov
pop
xor
pop
addr16
add
out
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
xor
aaa
in
std
xor
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
pop
dec
loopne
adc
xor
jbe
cmp
outsb
pop
clc
jl
jge
jno
add
pusha
lcall
push
cmpb
jo
mov
inc
xorl
mov
xchg
jmp
call
lcall
mov
mov
inc
sub
mov
je
push
bound
js
mov
push
xor
jne
je
addb
jg
push
pop
rol
jbe
push
xor
add
add
mov
inc
or
push
inc
pop
dec
jle
xchg
pop
outsl
jns
push
dec
add
push
mov
cmpsb
push
mov
imul
js
xor
xor
ja
push
ja
jb
cs
xor
mov
push
icebp
pop
inc
add
jbe
dec
sbb
jle
and
push
mov
xchg
in
rcrl
pop
push
inc
mov
cmp
mov
inc
add
sar
enter
xchg
jp
inc
dec
popf
mov
aaa
dec
lock
lret
push
push
bound
pop
mov
mov
inc
jmp
push
sahf
mov
insb
add
outsb
add
xchg
xchg
pop
push
pushl
cmpsb
dec
push
dec
push
movsb
jae
add
std
add
shll
outsl
pop
xlat
pushf
push
rorb
pop
imul
lcall
push
rep
mov
dec
push
add
ja
sahf
jbe
add
out
mov
sahf
push
add
add
ds
push
add
mov
jp
add
js
mov
pop
ja
int
test
shrl
insb
pop
outsb
push
outsl
inc
jns
imul
lret
mov
sbb
aam
sbb
jg
fiadds
fisttpll
lock
mov
in
mov
outsl
es
bound
out
arpl
push
insl
dec
cli
pop
loopne
iret
sahf
mov
jb
mov
xchg
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
fildl
adc
faddl
pop
subb
testl
faddl
sbb
test
in
mov
push
xchg
nop
and
fwait
add
in
xchg
lock
sub
sub
pop
sbbb
scas
outsb
out
xchg
das
push
xchg
mov
outsb
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
sub
aam
jle
push
cmpsb
mov
jo
test
sahf
rcrb
mov
shrb
fmul
mov
lgs
int
iret
cmpsb
sub
cmpsb
sarb
rorl
mov
popf
mov
ret
data16
pushf
sahf
and
add
addr16
dec
xor
jne
out
je
dec
addb
cltd
sub
incl
push
or
or
or
es
and
adc
push
adc
push
add
add
jg
adc
ds
add
mov
adc
aaa
test
sbb
imul
mov
mov
mov
sti
aad
mov
push
add
and
lods
pop
or
and
cs
mov
xorb
sub
fldcw
out
cmp
aas
in
inc
sahf
aas
cmp
cmp
pop
sahf
sub
sarb
mov
sbb
inc
jbe
xorl
inc
jle
cmp
scas
xor
dec
mov
out
ds
jle
aas
adc
jbe
dec
sti
ds
xor
dec
inc
test
mov
push
jg
in
imul
ds
mov
ds
lods
stos
test
mov
sti
test
cmpsl
cmpsb
cmpsl
add
test
mov
lods
std
fistpl
daa
sub
sub
sub
sub
jg
adc
ss
and
inc
mov
ljmp
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
call
xchg
xchg
xchg
mov
nop
test
insl
popf
mov
lcall
cmpb
jl
js
jg
test
jb
jae
pop
adc
sti
addl
out
push
rolb
add
shlb
or
incl
push
add
cmc
repz
dec
xor
jg
outsl
andb
push
aas
add
xchg
pop
cmp
test
mov
add
mov
push
mov
and
mov
repnz
jg
fistpll
addr16
add
pushf
add
mov
push
in
lcall
pop
imul
fs
decl
or
jae
js
into
xchg
add
mov
cwtl
add
cmpsb
mov
test
scas
xchg
js
in
and
out
scas
insl
stos
insb
mov
sub
sub
xchg
push
mov
addr16
push
nop
sub
xchg
xor
xchg
xor
mov
fcmovnu
xchg
outsb
lcall
leave
jbe
idivl
fidivrl
shlb
iret
push
lret
push
test
std
into
adc
mov
imul
insb
ss
lods
xchg
add
test
jg
jle
jge
adc
sar
bswap
adc
dec
dec
dec
jmp
dec
dec
dec
add
pop
add
push
dec
or
adc
pop
in
cmp
adc
dec
or
add
push
jl
aas
jbe
dec
inc
add
or
pop
pop
cmovg
jle
stc
addb
inc
and
dec
and
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
jg,pt
xor
aaa
aaa
inc
add
lret
dec
daa
and
sbb
sbb
sbb
and
add
dec
ss
xor
sub
sub
dec
adcb
mov
fwait
test
mov
add
mov
mov
mov
mov
fnstenv
mov
add
outsb
mov
push
add
sarl
push
add
push
popl
test
roll
outsl
mov
cmpsl
add
mov
inc
sarl
orb
jmp
adc
mov
fstpl
incl
andb
outsb
sysret
mov
es
xor
dec
ret
jmp
sbb
lock
pop
inc
jb
hlt
cmovbe
push
or
push
jg
push
and
ja,pn
pusha
inc
add
int3
inc
sbbb
jg
sbb
ret
push
push
lds
add
out
cli
mov
xor
pop
cli
fists
adc
adc
and
addr16
test
mov
inc
xchg
jg
fdivrs
das
sti
jb
adc
mov
jle
sbb
sbbl
sti
add
xchg
and
jg
inc
and
inc
jg
pop
cmp
mov
inc
idivb
inc
cs
push
cld
jg
loopne
add
jle
in
and
cmpsb
std
ja
nop
pop
inc
add
adcl
and
std
dec
dec
mov
pop
jg
enter
jle
add
inc
pop
data16
enter
sub
xchg
mov
push
decl
add
add
add
jg
add
arpl
mov
jg
pusha
xor
sub
add
jg
push
pop
add
pop
mov
fsubs
sbb
inc
jmp
sbb
scas
incl
add
incl
repnz
mov
lret
imul
add
add
mov
adc
stos
push
add
pop
add
andl
rorb
push
data16
mov
sub
jg
rorb
inc
shrb
adc
movb
rclb
cwtl
mov
push
inc
push
ss
pop
push
jg
or
orb
mov
test
jmp
stos
pop
stos
mov
ficompl
pop
pop
add
daa
inc
pop
mov
insl
leave
add
jle
enter
add
test
inc
mov
inc
mov
cmp
decl
dec
xchg
push
bound
mov
sldt
mov
mov
cmp
push
arpl
mov
push
mov
dec
xlat
out
call
push
inc
lea
shlb
lcall
dec
or
dec
xchg
nop
pop
xor
and
mov
inc
lea
push
dec
jns
pop
or
fnstenv
add
push
jne
xor
jbe
and
fwait
out
push
jnp
push
jp
neg
fnstenv
push
js
dec
jbe
pop
add
cmp
jne
mov
mov
or
sbb
push
daa
aam
ljmp
jle
push
daa
hlt
iret
dec
incl
push
in
outsb
ss
jmp
call
xchg
shr
call
dec
or
neg
xchg
dec
mov
sbb
out
xor
inc
mov
xchg
popfw
aas
popf
inc
push
pushf
cmp
adc
sub
out
insl
fwait
mov
xchg
xor
xchg
xor
sub
sub
popf
mov
nop
daa
ss
cs
and
xor
push
lcall
bound
dec
pop
fnstsw
mov
xor
inc
xor
je
sahf
movb
and
sbb
es
adc
pop
cs
add
mov
xchg
push
ja
dec
movsb
fidivrl
pop
inc
or
jp
ja
imulb
push
aaa
mov
add
add
and
adc
xchg
addl
sub
inc
mov
and
les
outsb
roll
notl
push
orl
lea
cld
lcall
push
xchg
inc
and
cmp
lock
inc
lods
pop
sarb
pop
cmp
icebp
idivl
or
imul
add
mov
jmp
test
dec
out
pop
jns
adc
dec
push
mov
and
jbe
push
push
sbb
xor
cmp
push
xor
std
sar
push
sub
jmp
syscall
mov
sub
xchg
insb
push
sbb
pop
xchg
dec
sar
es
lcall
or
mov
sub
daa
cld
pop
das
pop
push
inc
fildl
add
push
adc
out
sub
and
vpcomub
lcall
or
pop
adc
xor
adcl
ds
mov
ljmp
or
inc
incl
sahf
or
lret
sub
jmp
int
add
mov
cmpsb
call
sbb
sub
ljmp
jp
xchg
out
add
sub
inc
dec
mov
nop
pop
adc
iret
data16
incl
imul
out
mov
or
pop
add
xchg
jo
or
incl
in
push
and
xlat
ficoms
nop
decl
sub
or
sti
inc
pop
in
in
std
ljmp
or
mov
call
call
jmp
sbb
pop
cmpsl
pop
in
mov
pop
stc
lgdtl
call
jg
cmpsb
mov
out
cli
notb
loop
inc
pop
mov
cwtl
inc
call
dec
push
jmp
call
es
addl
rcll
lods
mov
xorps
adcl
mov
pop
jnp
push
shll
roll
rorb
inc
and
ret
pushl
dec
out
adc
adc
ljmp
insb
push
mov
push
inc
inc
fcomp
mov
pop
inc
pop
mov
mov
movsb
dec
push
stos
push
popf
inc
sub
mov
inc
cs
scas
imul
add
and
cmpsb
add
push
out
push
shrb
shll
shrb
es
shlb
add
push
push
in
das
push
iret
insl
pop
and
out
int3
daa
outsl
pop
imul
push
push
push
stos
movsb
sub
ljmp
incl
inc
ljmp
mov
jge
pop
add
repnz
xchg
aam
jmp
pushf
cmp
insb
and
aas
decb
cwtl
xor
dec
inc
push
xchg
jmp
push
aaa
push
lcall
insl
es
push
xchg
es
xchg
xchg
xchg
notb
sub
push
xchg
aam
pushl
sub
inc
jmp
mov
fimuls
jmp
pusha
sub
fcmovbe
js
std
faddl
dec
fstpt
push
jnp
jp
fnsave
testb
jl
or
jl
add
movq
es
jbe
fwait
cltd
std
jle
repnz
push
dec
push
dec
repnz
repnz
jae
fistpll
pop
fidivrl
push
mov
jnp
jge
hlt
in
and
cli
int3
outsb
nop
negl
and
shll
pop
add
push
or
jne
push
adc
adc
or
imul
cmp
jnp
lahf
dec
es
incb
in
inc
and
orb
jg
outsb
call
xchg
out
push
sub
iret
out
mov
cli
jns
outsb
test
jbe
clc
push
idiv
fidivrs
or
inc
sub
jg
mov
icebp
sub
outsb
orl
push
adc
sub
add
mov
icebp
and
mov
inc
daa
jg
mov
inc
and
mov
das
aas
jp
es
xchg
ds
xorb
cmpb
jmp
mov
inc
jg
push
sub
xchg
dec
in
sarb
pop
push
imul
push
xor
jge
idiv
push
fmuls
dec
push
push
fsub
pop
jmp
inc
push
int3
out
sub
mov
fidivrl
push
xchg
mov
decl
pushw
pop
push
pop
dec
sbb
or
scas
call
ds
or
jge
lcall
jns
fwait
in
jg
mov
push
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
jb
in
lret
jg
out
mov
or
add
pop
push
out
jns
add
ja
jp
xchg
cli
inc
or
sysexit
enter
and
jno
dec
adc
push
shlb
add
push
and
xchg
add
cmp
mov
addb
addb
ret
xchg
shrb
sbb
xchg
and
adc
push
lret
adc
sbb
xchg
cmp
adc
out
insb
mov
sbb
push
lcall
push
or
and
dec
sbb
push
sbb
aad
add
aad
pushl
andb
and
inc
add
and
push
adc
inc
cld
rcll
cwtl
loopne
add
jno
mov
add
add
dec
shl
inc
push
gs
jo
js
add
add
or
mov
adc
sbb
dec
add
adc
mov
cmpl
or
sub
aaa
xchg
mov
xor
insl
xor
dec
test
add
loopne
or
xchg
inc
jmp
lahf
jo
das
sbb
or
fstpl
push
inc
insl
ret
add
imul
ss
cmp
addl
push
jno
gs
add
imul
jno
sbb
inc
push
jno
add
add
or
jno
inc
mov
cmp
sbb
jno
adc
push
jno
cmp
inc
cmp
sbb
lods
and
inc
cmp
popa
pop
popf
in
fistpl
jne
popa
shlb
xor
xorl
fwait
or
or
jno
or
fadds
sbb
add
filds
mov
mov
inc
push
jno
cmc
add
add
sbb
inc
and
xor
mov
pop
loop
lcall
lahf
push
lea
rcll
xorb
rcrb
inc
push
push
outsb
dec
push
outsl
loop
popa
ret
ss
xor
or
sahf
pop
sub
sahf
fstps
ljmp
mov
dec
insb
out
inc
imul
sbbl
sub
mov
in
insb
jne
addr16
push
icebp
in
in
and
sbbl
add
sbb
jecxz
test
sbb
movsb
lret
and
arpl
pop
cmpsl
inc
adc
ret
xchg
push
pushf
mov
add
bound
fiaddl
imul
pop
push
sbb
xchg
aad
rcll
mov
sbb
inc
dec
aad
push
add
negb
lret
es
xchg
push
mov
in
push
dec
in
xchg
xor
adc
sbb
pop
or
mov
xor
pop
sbb
sub
or
mov
jbe
dec
outsl
mov
movsb
pavgw
adc
pop
subl
insb
push
xor
dec
sub
cmp
add
pop
xor
scas
jo
inc
mov
and
add
lcall
xlat
arpl
add
inc
fldenv
jg
bound
stos
adc
pop
pop
iret
add
jbe
mov
xchg
xor
adcb
aad
and
cmp
add
pusha
stos
fildl
jp
xchg
lea
adc
jmp
roll
pop
xor
fists
cmp
push
dec
push
lods
pop
lods
jb
pop
test
orb
sub
fcomp
inc
imul
dec
adc
push
loope
mov
cmc
test
insb
cmp
jg
inc
push
inc
les
jge
cmp
xchg
mov
pushf
push
inc
ret
add
cmp
dec
fstps
mov
xor
in
sub
and
jno
dec
push
hlt
loopne,pn
arpl
inc
add
xchg
cltd
ss
pop
rorb
fldt
dec
add
pop
jo
cmp
out
xor
push
xchg
adc
xor
mov
aam
and
imul
xchg
insl
pop
imul
mov
cmp
sarl
insl
sti
dec
imul
push
enter
and
sahf
inc
psubsw
sbb
push
ds
test
inc
insb
cs
cpuid
loopne
bound
js
push
jb
inc
mov
sub
mov
inc
jl
add
inc
imul
xchg
jge
push
pop
mov
ret
mov
ja
insb
imul
jbe
daa
push
fs
shlb
push
outsl
jo
jb
fisubrl
sub
mov
ret
iret
dec
inc
mov
stos
dec
and
mov
xchg
loope
adc
sub
sarl
adc
cmp
push
sbb
push
les
xor
imul
div
dec
push
add
xor
add
pop
xor
cmp
lods
and
sub
inc
jne
outsb
inc
sbb
jnp
xchg
or
xchg
inc
pop
inc
je
insl
mov
jge
dec
outsb
dec
adc
arpl
ss
imul
sub
mov
push
js
loop
xor
mov
pop
add
add
sbb
mov
movsb
sahf
imul
or
or
xor
roll
push
adc
dec
adc
mov
lahf
mov
push
es
cmp
outsb
sbbl
sbb
push
inc
movsb
outsl
xchg
add
and
jbe
push
and
jbe
and
pop
mov
jo
sbb
push
ficoms
ficompl
jns
daa
adc
cmp
es
ret
imul
mov
jg
push
test
mov
jmp
nop
inc
stos
pushf
test
or
or
jecxz
addl
inc
sbb
add
mov
roll
aad
cltd
movl
ret
jo
sarb
add
and
jno
scas
and
adc
gs
xchg
out
add
andl
mov
nop
push
xor
push
mov
mov
xor
xor
dec
pusha
es
ret
mov
push
dec
sbb
ljmp
outsb
push
inc
xor
mov
in
pop
lret
inc
lock
sub
enter
mov
cmp
mov
pop
test
lock
xlat
adc
sub
sbb
fistl
mov
loop
lea
xor
push
dec
mov
enter
cmp
andb
and
jno
cmpl
add
xor
or
adc
pusha
pop
add
push
insb
in
loop
sub
push
mov
push
outsb
aad
insl
dec
inc
dec
nop
mov
adc
test
adc
xor
push
rorl
adc
push
arpl
test
popa
push
cltd
push
pop
xor
push
popa
les
aas
outsb
fisubs
sbb
inc
addr16
lds
sbb
mov
nop
fs
mov
loope
jns
sbb
lods
push
cwtl
dec
and
pop
mov
arpl
push
jg
aad
sbb
cmp
daa
outsb
pop
mov
rcr
nop
mov
mov
xor
imul
lea
addb
jbe
test
or
fidivrl
jnp
loop
lea
rcll
js
mov
cmpb
push
lret
sbb
add
sub
mov
bound
sbb
pop
push
or
arpl
cmp
lcall
mov
out
inc
test
dec
dec
ja
imul
shll
add
aaa
and
shl
pop
or
ss
mov
push
cmp
mov
push
xchg
cs
cmp
sub
fsubl
mov
push
ljmp
or
lock
inc
ret
jle
inc
or
inc
mov
imul
enter
push
mov
cmp
fcmovb
add
push
pop
mov
lock
push
movsb
add
adc
add
xchg
sbb
add
adc
push
push
xchg
add
xchg
push
mov
push
jecxz
mov
data16
inc
push
jbe
rcrl
rcl
mov
mov
ret
mov
jns
or
data16
add
fidivrs
and
ret
jg
inc
or
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
