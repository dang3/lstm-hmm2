divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
inc
mov
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
push
pop
inc
push
adc
and
dec
push
fcomi
insl
roll
les
pushl
cltd
push
mov
fistl
dec
mov
mov
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
jo
rcrb
adc
mov
mov
cmp
sbb
sub
dec
rcrb
mov
or
bound
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
add
insl
xlat
or
pop
pop
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
inc
loopne
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
adc
cmp
push
in
popa
and
add
inc
dec
push
mov
aaa
pusha
out
jmp
or
sbb
enter
fisttpl
sahf
add
shr
dec
cmp
je
out
sti
mov
fdivrs
fs
add
pop
push
scas
dec
testl
scas
mov
push
insl
sbb
jl
clc
movl
bound
mov
aaa
jge
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
jg
add
gs
sti
mov
mov
xor
dec
gs
clc
mov
pop
ret
arpl
xchg
pop
mov
jge
arpl
cli
or
mov
dec
add
clc
sub
enter
pusha
xchg
and
in
mov
in
adc
sbb
or
psraw
movsl
push
xorl
fdivrs
mov
cmp
jg
mov
xor
sbb
inc
ret
in
sbb
push
push
adc
adc
pop
cmpsb
sub
mov
push
jmp
cmp
push
mov
sar
dec
lea
push
add
jge
ja
adc
cmp
clc
add
push
mov
lods
jmp
pop
ret
outsb
test
jl
mov
add
stc
clc
icebp
loop
lds
iret
lock
push
std
jle
mov
cmpl
or
push
int3
jmp
incb
sub
sbb
jge
sub
stc
or
or
fisttps
add
pop
cltd
sub
shr
enter
mov
mov
pop
xor
cwtl
pop
les
decb
cmp
jl
cmp
jne
insb
mov
fldt
add
xor
jbe
mov
testl
adc
inc
add
lea
cmp
adc
lea
orl
push
xor
push
jnp
sti
into
mov
aam
cli
cmpsl
bnd
sub
fdivrs
cmpsl
mov
scas
out
fidivl
cld
fsubrs
jl
mov
leave
jge
mov
cmpsb
or
adc
lock
jle
cmp
mov
inc
sahf
loopne
clc
fdivs
jecxz
dec
inc
icebp
add
jo
scas
push
add
xchg
pushl
mov
pop
iret
jmp
push
stc
loop
pop
mov
inc
addr16
cmp
sbb
stos
push
je
push
jbe
daa
xlat
loopne
es
and
push
mov
hlt
adcb
ret
std
jbe
aaa
and
cmp
lods
or
or
mov
xchg
cmp
mov
sar
push
push
adc
cmp
jle
mov
pusha
or
pushf
adcl
clc
add
cmp
cmp
jae
push
cmp
je
adc
sub
mov
andl
ret
add
jb
pop
dec
icebp
dec
push
add
xchg
pop
leave
mov
fcoms
jnp
ljmp
loopne
cmp
mov
or
push
push
push
push
rcrb
or
inc
jno
adc
or
cmpsb
mov
or
imul
and
adc
add
and
inc
sub
imul
adc
mov
in
push
std
add
xor
cmp
push
mov
fildl
sub
jne,pt
push
stos
sbb
lock
push
add
fidivl
in
js
push
mov
mov
or
rorb
je
pop
pop
fdiv
mov
mov
jg
mov
jne
cmp
mov
je
add
fwait
test
fcoml
jo
movsb
dec
sub
mov
repz
in
mov
push
lret
add
sbb
mov
out
scas
and
fistpl
cwtl
mov
ds
add
mov
or
dec
mov
mov
fdivr
lret
xchg
mov
out
test
mov
dec
pop
les
cmpsb
ffreep
pop
out
or
or
je
push
mov
lock
pop
sbb
jl
movl
out
xchg
pop
cmpsb
bound
inc
sub
sbb
add
push
xor
cmp
addl
add
add
pop
shlb
add
add
icebp
xlat
pop
add
xor
mov
xchg
aad
dec
xchg
pop
jg
popf
lea
push
add
push
outsb
xlat
cmp
xor
sub
push
cmp
push
nop
mov
cs
sbb
push
scas
dec
sbb
mov
jg
xor
call
ljmp
cmp
je
xorl
jne
or
jne
imul
jl
mov
jbe
pop
mov
nop
test
insl
into
mov
cmp
ljmp
ds
loope
sti
and
aam
testb
aaa
movsl
mov
jle
pop
shll
mov
jnp
mov
cmp
adc
enter
jge
xor
and
jg
inc
and
in
fmull
cmovne
sub
add
or
sub
mov
push
ret
mov
pop
ficoml
jle
mov
mov
push
imul
or
mov
ret
jbe
pop
idivl
insl
jecxz
xchg
sub
ret
jno
or
lahf
scas
mov
out
decb
adc
test
test
add
xor
sub
call
push
mov
mov
inc
xor
jb
add
cld
fstl
mov
js
or
ret
je
dec
je
ret
jns
sbb
adc
or
adc
and
shll
js
hlt
or
adc
sub
gs
push
repnz
inc
fmuls
ljmp
hlt
addr16
adc
sub
adc
add
fadds
mov
in
xlat
and
and
popaw
jl
cmc
subl
sub
and
sub
push
wrmsr
js
mov
jne
and
or
pop
subl
pop
push
test
addr16
xchg
lods
mov
insl
xchg
add
jle
sub
lret
ljmp
insb
rorl
dec
and
movsl
or
dec
or
imul
sub
js
and
adc
repnz
and
pop
add
xchg
in
dec
fcoml
or
xor
adc
pushl
out
neg
sbb
clc
ss
rolb
mov
jnp
sub
mov
rorb
sbb
mov
xor
cmpb
sub
movsl
subl
out
pop
je
pop
ds
and
sbbl
mov
dec
sub
xchg
mov
shrb
scas
pop
js
jecxz
or
scas
call
xchg
lahf
cmp
rcrl
add
pop
sbb
nop
add
sbb
sbb
cmp
js
jl
ret
pop
adc
sub
mov
mov
push
aas
pop
mov
imul
push
stc
sub
or
dec
jne
mov
push
loopne
ret
mov
inc
add
cltd
in
movsb
sub
and
sbb
dec
sbb
or
nop
outsb
add
mov
je
mov
or
push
pop
imul
xor
ficoms
pop
pushf
sub
fldl
fmuls
jno
xor
jmp
mov
in
jae
add
mov
out
sub
mov
cmp
out
aad
cs
jno
nop
jle
fadds
sbb
clc
xor
add
lcall
es
cmp
adc
cmc
or
xchg
xor
out
in
ss
jne
sbb
sbb
pop
sahf
out
dec
jmp
mov
daa
sbb
add
mov
loopne
bound
sbb
mov
lea
xor
mov
inc
call
push
xor
xor
loope
jp
sbb
pop
std
orb
push
add
in
jecxz
ret
or
lea
imul
or
push
out
cwtl
fimuls
jne
ret
mov
lods
mov
in
ret
jmp
repnz
je
insl
lock
scas
or
inc
mov
cmp
imul
aam
xor
scas
adc
mov
in
cmp
imul
push
in
sbb
dec
jmp
addr16
jb
ret
push
xor
fadds
aam
jge
decl
repnz
loope
inc
adc
or
out
out
add
loope
add
subl
xchg
lock
int3
add
loopne
pusha
xor
test
xchg
scas
push
cltd
sahf
mov
cmpl
jno
mov
mov
or
xchg
add
fdivrs
mov
add
add
add
insb
push
jnp
fldt
pop
jbe
inc
pop
je
in
mov
lcall
adc
push
dec
aaa
insb
movups
mov
mov
inc
xchg
adc
stos
inc
mov
mov
and
mov
push
sbb
out
fucomip
push
pop
neg
sbb
pop
les
ret
je
arpl
mov
dec
mov
jmp
inc
dec
leave
jae
mov
and
adcl
cwtl
cwtl
mov
mov
xor
orl
xchg
xchg
push
xor
or
je
nop
cmpsb
sti
lock
test
dec
leave
lods
lods
add
mov
mov
nop
sub
adc
cmp
fs
in
jns
jecxz
lods
loopne
je
xor
lock
lret
imul
insb
sub
jnp
std
mov
jl
add
mov
in
mov
out
pop
loopne
jge
out
sti
shrb
shlb
mov
cmp
sub
adc
push
sbb
int
movsl
test
adc
rclb
sbb
sbb
rclb
mov
push
repnz
xchg
ret
movsb
mov
pushf
push
pushf
pushf
sahf
inc
lcall
push
fs
mov
int3
loope
inc
push
sbb
int3
leave
jae
lea
enter
dec
enter
inc
mov
rol
sahf
inc
lcall
sbb
adc
mov
inc
xor
mov
jmp
sbb
xor
dec
pusha
sbb
enter
cmp
jmp
in
sub
sub
add
pop
push
popa
andl
lock
scas
sbb
sbb
add
inc
pusha
and
mov
sbbb
insb
rorl
dec
add
add
push
addb
sub
cmp
xor
sbb
mov
inc
push
inc
adc
in
cs
jnp
cmp
push
mov
loopne
fdivl
aam
lret
mov
jo
in
sbbb
fst
roll
jge
push
cwtl
and
adc
aas
mov
daa
xor
and
push
dec
punpckhwd
ficoml
push
push
dec
lahf
xor
sti
xor
test
testb
movl
mov
outsb
adc
sbb
lods
fistpl
adcl
rolb
cmpsb
cmp
in
sub
rclb
adc
jae
pop
add
je
jge
sti
jecxz
ret
daa
add
je
or
cwtl
xchg
int3
and
rorl
jmp
cmp
and
inc
mov
fcmovne
push
stos
icebp
add
push
jmp
enter
push
jns
xor
lret
sbb
and
dec
lds
and
cmpsl
jg
cmp
mov
push
adc
fldl
sbb
das
clc
dec
or
pop
sbb
mov
fisubrl
jo
push
sbb
dec
cmp
sahf
and
jl
adc
or
cmp
mov
in
lret
adcl
mov
lret
in
mov
je
cmp
push
push
mov
inc
adc
lret
or
cwtl
lds
movsl
jno
rcl
imul
jne
fdivl
leave
mov
into
adc
cmc
xor
inc
adc
pusha
pop
mov
jle
add
mov
sub
inc
jne
adc
push
adc
imul
pop
pop
sub
xor
inc
iret
sbb
loop
xor
dec
jne
shlb
jnp
dec
ds
test
push
ds
sbb
push
sbb
popf
jb
jb
lea
or
add
ret
inc
rorl
rolb
and
pop
nopl
jl
loopne
pop
stc
or
cs
sbb
orb
mov
clc
add
add
rclb
or
addb
or
inc
ds
movsb
pop
cmp
in
xchg
adc
in
pop
and
or
mov
push
roll
ret
or
add
push
in
mov
jl
cmp
loopne
xchg
cmp
aaa
xorb
js
test
sti
es
insl
jge
mov
aaa
push
cmp
add
push
pop
in
lahf
sbb
test
stos
cmp
mov
iret
cwtl
pusha
cmp
movsl
lock
cmp
dec
test
cmp
adc
jg
std
push
pop
mov
jne
jmp
add
sahf
lock
shrb
mov
mov
inc
shl
pop
shlb
mov
and
test
out
push
and
and
push
sahf
inc
push
add
push
jbe
pop
jle
push
xorl
xchg
pop
pushf
aam
mov
add
adcl
lock
and
mov
or
pop
mov
add
daa
es
or
sub
cltd
test
js
add
test
mov
data16
sti
scas
sub
pop
sub
nop
mov
xor
ljmp
sub
sub
xchg
sbb
inc
adc
xorb
mov
inc
lret
ret
test
xchg
push
xchg
or
scas
cmp
push
stos
add
in
and
repnz
pop
mov
push
xor
daa
notl
outsl
pop
xor
adc
test
push
lret
mov
lods
mov
int
push
and
push
loope
fsubs
jne
adc
inc
shlb
rcrb
out
and
mov
adc
sarb
mov
lret
xchg
sbb
movsb
sub
mov
cmpsl
xchg
add
push
add
add
shr
or
mov
and
inc
in
push
push
sbb
xor
mov
fdivrs
cmpsl
cmp
or
je
test
mov
popf
clc
scas
inc
leave
sarl
push
sub
pop
and
dec
sub
xor
dec
mov
loopne
in
cmp
dec
testl
das
push
mov
cmp
xchg
daa
or
xor
test
dec
xlat
popa
aam
sbb
xor
mov
gs
ficompl
push
sbb
outsl
inc
xor
outsl
pop
lds
jno
loopne
sub
xor
mov
jae
mulb
add
fs
cmp
stc
pop
cmc
inc
repnz
xor
ficoml
mov
mov
cmp
add
ret
mov
inc
leave
inc
je
adc
add
adcb
push
in
lea
push
mov
jns
and
mov
sbb
xor
fwait
xor
mov
cmp
jae
scas
mov
js
pop
mov
mov
mov
int3
adcl
test
popf
fildl
inc
fiaddl
xor
popa
xor
subps
lahf
add
xlat
cli
pushl
adc
cmpsl
mov
push
lahf
faddl
pusha
and
mov
push
je
mov
jo
adc
pop
dec
mov
jge
adc
je
cmp
hlt
push
fists
call
inc
jl
push
mov
fistl
dec
add
pop
call
dec
clc
jne
push
sub
jp
mov
mov
push
mov
lods
in
movsl
xchg
loopne
pop
jmp
cmp
push
mov
in
push
add
add
and
jge
mov
add
add
out
cmp
mov
stos
push
loopne
adc
mov
pusha
mov
inc
rolb
ret
add
ret
push
add
mov
mov
cmpb
push
inc
test
call
jae
jbe
scas
outsb
lret
add
popf
push
pushf
lods
mov
xchg
outsl
cmpl
push
cmp
rclb
cmpsl
nop
or
push
icebp
or
into
out
or
push
sbb
arpl
and
aaa
mov
jp
bound
setne
or
in
inc
push
and
mov
popl
fst
outsb
mov
pop
out
jne
or
je
sub
shlb
mov
sub
subl
sub
adc
inc
out
sub
push
add
and
inc
faddl
dec
add
pop
pop
or
xor
push
insl
dec
xor
test
jne
jbe
loope
or
xchg
cmp
addl
add
loopne
std
mov
not
add
jbe
clc
sub
repz
je
mov
shlb
dec
push
lods
sbb
std
push
fsub
push
out
movsb
roll
je
aad
imul
or
aaa
fnstenv
or
inc
or
gs
xchg
lcall
xor
xor
push
push
adc
aas
fiaddl
mov
mov
or
mov
push
outsb
les
or
das
and
int3
mov
lods
mov
or
shll
int3
or
or
inc
je
jbe
push
in
xchg
sub
test
mov
jnp
lock
xor
repz
dec
je
sub
fiadds
pop
jmp
jge
imul
push
jmp
adc
xor
xchg
or
push
xor
iret
mov
stos
pop
lea
add
add
push
bound
add
das
xor
das
mov
gs
jno
inc
sbb
je
lock
mov
xor
inc
mov
rorl
push
cmp
xor
push
or
daa
push
push
cld
mov
loopne
ret
jle
rorb
pop
mov
push
cld
push
fistl
mov
popa
add
mov
sahf
jne
in
paddusb
jp
pop
add
pop
jle
pop
xlat
ret
or
cmpsl
sarb
push
xchg
pop
clc
add
cmp
dec
dec
lcall
adc
jo
stos
adc
aam
sbb
mov
jne
fwait
roll
lods
fistpll
xchg
or
push
add
fcoml
jne
lahf
insb
add
rorb
sbb
inc
roll
inc
adcb
ret
call
aam
das
test
test
xchg
dec
imul
outsb
dec
ret
push
insb
mov
jbe
pusha
ss
add
fadd
cld
aaa
dec
mov
ljmp
popf
jge
mov
add
or
inc
repnz
cmpsl
xchg
cmp
cwtl
movsb
ljmp
call
add
or
or
nop
dec
pop
test
push
and
or
fsubrl
rolb
test
imul
loopne
pop
cld
loopne
add
and
enter
fisttpll
xor
lahf
call
push
pusha
lcall
mov
sbb
xorl
or
pop
in
nop
and
pop
sub
mov
cmp
cli
in
mov
fiaddl
mov
adc
pushf
mov
jp
or
test
fs
fldenv
xchg
sbb
sbb
cmp
inc
sub
add
xor
nop
adc
lds
sbbb
sbb
mov
andps
push
sbb
push
call
ficoml
mov
rcll
addl
test
iret
stc
add
mov
adcl
mov
loopne
mov
cwtl
push
sbb
xor
call
subb
popa
or
sub
arpl
pop
sbb
and
dec
lock
inc
dec
es
loopne
addb
mov
lahf
enter
xor
push
icebp
data16
add
xor
mov
cmp
pop
pusha
mov
es
mov
and
rclb
mov
aam
fcoms
fmull
lret
out
loopne
in
mov
mov
xor
inc
ret
jg
cmp
je
pushl
push
js
sti
ja
jae
cmp
ret
shr
movzbl
push
adc
push
ret
push
push
inc
repnz
sbb
pop
insl
mov
mov
rcrl
cmp
cmp
xchg
add
cmp
inc
mov
push
gs
pop
xor
sbb
out
aaa
sbb
push
xor
les
pop
or
add
sbb
pop
jb
or
mov
jecxz
arpl
sti
jle
or
pop
daa
mov
sbb
dec
decl
jg
mov
mov
jmp
add
pop
push
leave
enter
pop
and
cmp
ljmp
adc
popa
jns
mov
mov
inc
cmpsl
pop
mov
ss
cmp
rorl
sbb
aaa
outsb
sub
cld
subl
adc
sbb
sbb
pop
jo
xor
ret
xor
mov
mov
push
stc
add
mov
and
mov
pop
cmp
je
lds
ficomps
fwait
enter
sub
jne
xor
dec
movsl
cmp
adc
lock
mov
xor
clc
cmp
cmp
cmp
jae
mov
aad
cld
inc
hlt
lea
ja
xor
pop
sub
test
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jo
in
cmp
jg
push
push
push
cmp
push
pop
cmp
inc
nop
mov
clc
shll
into
popa
nop
add
mov
int3
sub
xor
adc
inc
outsl
add
lea
ljmp
cmp
loopne
daa
push
test
adc
imul
lret
jo
enter
leave
add
mov
mov
mov
jb
hlt
cmpsl
mov
cmpsl
cmp
dec
lahf
inc
js
imul
cli
out
adc
jecxz
mov
cs
jle
out
jns
and
dec
hlt
jg
mov
or
je
sub
add
sbb
movb
and
xchg
add
fsubr
add
inc
and
push
jne
lahf
ror
push
sarl
or
fmuls
mov
add
pop
test
lock
or
cmp
jl
repz
cmp
neg
jmp
repnz
xor
push
xor
cld
inc
aam
ret
or
fnstenv
push
pop
jbe
pop
add
add
inc
adc
or
xchg
dec
js
sub
popf
jge
sahf
shrb
jns
pop
mov
rcll
stc
scas
inc
adc
push
je
aaa
mov
lcall
or
shll
mov
xchg
jle
addr16
or
xor
sbb
fcompl
cmp
std
push
cmp
clc
pop
pop
cld
inc
xor
int3
or
test
hlt
add
add
cli
add
hlt
mov
or
ss
jae
dec
fs
fnstsw
inc
cmp
insb
add
aas
adc
fadd
je
push
and
scas
mov
ljmp
subb
jae
movsl
test
mov
sbb
adc
sub
fsub
pop
pop
icebp
loop
jno
mov
mov
fs
jne
cmp
je
fists
pop
jbe
movb
fldl
or
and
rorb
adc
fnstsw
or
sbb
mov
enter
push
sbb
imul
ret
mov
add
and
adc
push
repz
insl
adc
setne
shrb
mov
jge
pop
mov
push
rolb
push
test
adc
mov
clc
jg
jo
bswap
call
cwtl
dec
or
push
inc
lock
sti
or
shlb
call
inc
adc
and
cmp
mov
cmc
loopne
js
push
jmp
les
inc
in
jmp
adc
inc
dec
clc
adc
push
ret
dec
lock
data16
shll
mov
jo
jno
pusha
adc
mov
out
or
cwtl
sar
mov
sub
orb
push
add
movsb
sub
cmp
sbb
inc
shrl
cld
es
push
dec
add
aaa
clc
xor
test
inc
push
stos
in
add
adc
or
or
adc
add
dec
xor
jo
cli
mov
sub
call
sar
or
jl
xor
mov
dec
ret
pop
or
add
insb
cld
cmp
lea
jbe
insl
pop
or
mov
push
test
push
pop
hlt
pop
or
adc
xchg
je
inc
or
das
or
add
movl
sub
add
cmp
out
adcl
inc
and
jb
les
mov
lods
fcompl
add
ss
es
inc
loopne
add
add
enter
ret
xlat
jecxz
jb
dec
adc
daa
in
dec
scas
cmpsb
call
in
mov
add
movb
rcll
push
pusha
rolb
push
das
push
or
lock
and
or
mov
cmp
sahf
xchg
xchg
xchg
xchg
or
jecxz
lods
shlb
add
clc
sub
decl
test
push
out
sub
fldt
jne
pop
sub
or
nop
subl
cmpsb
aad
in
dec
push
and
adc
pop
cmpsb
jp
xchg
in
pop
mov
call
cmp
add
xchg
loope
xchg
fsubrs
push
fildll
dec
sahf
test
test
lret
leave
inc
jo
cmpsl
fsts
movsb
inc
or
push
inc
xor
add
jo
repnz
jo
inc
push
sub
popf
or
in
mov
push
sbb
jl
jmp
add
rcll
popa
add
dec
push
and
leave
mov
adc
and
enter
cmpb
stc
dec
sbb
dec
punpckhdq
jle
mov
cmp
pop
dec
dec
cmp
push
into
je
dec
or
repz
or
cltd
cmp
adc
push
fldl
out
mov
es
inc
fwait
hlt
mov
jb
adc
and
movsl
stos
insl
aaa
fwait
jns
test
inc
sub
lcall
push
in
and
scas
adc
xor
cmpps
and
das
cwtl
lret
aaa
movsb
mov
repnz
cmpsb
add
mov
test
or
inc
and
loopne
and
or
push
repnz
leave
mov
dec
cltd
in
leave
adc
test
int3
push
lock
mov
push
push
mov
add
or
and
sahf
xchg
add
adc
lods
sub
sbb
pop
sub
imul
xor
sbb
adc
pop
daa
xor
jb
push
js
lret
fwait
in
mov
adc
push
cwtl
enter
inc
sbb
or
push
inc
sub
jbe
and
and
mov
and
sbb
and
push
cmp
xor
add
push
fildll
pop
pop
sbb
push
push
push
inc
sbbl
push
push
inc
shl
enter
das
in
inc
ret
es
adc
divl
push
cmp
popf
cmpl
rorb
ret
cmp
ja
mov
in
shrl
pop
negl
mov
cmpsl
jno
lock
cmp
add
push
pop
vandpd
sbb
pop
mov
pop
cmp
or
mov
insl
lret
push
lods
push
ret
aas
pusha
adc
mov
out
lret
pop
ljmp
pop
sub
jne
sub
or
je
adc
in
jge
adc
push
push
out
dec
ss
std
or
mov
adc
mov
xchg
hlt
or
push
out
leave
jmp
imul
jecxz
jne
nop
jle
bound
cld
mov
add
push
mov
xor
jnp
int3
and
or
mov
mov
cmp
xchg
ficoms
add
pop
push
mov
mov
pop
inc
dec
pop
mov
mov
xchg
or
push
jg
clc
xchg
insb
push
xor
push
push
daa
pop
pushl
test
cltd
lea
cmp
and
in
popl
sbb
mov
jp
mov
dec
sbb
jae
mov
movsl
imul
sti
jbe
jg
fldz
andl
and
dec
xchg
outsb
jmp
sbb
and
test
adc
jmp
xchg
mov
pop
scas
enter
insl
push
dec
jne
cmp
mov
repz
out
jmp
or
neg
arpl
pop
dec
or
adc
outsb
jg
sbb
mov
mov
add
pushw
and
nop
ljmp
fstl
lea
enter
adc
sub
push
lret
test
rorb
fmuls
pusha
cmpps
xchg
sbb
mov
lahf
push
push
or
xchg
lahf
push
jle
xchg
pop
jge
sbb
out
mov
mov
sub
cmp
in
push
pop
push
lea
push
push
push
push
add
push
lea
xor
jns
icebp
push
sbb
add
dec
mov
inc
test
add
setns
jbe
jg
movsb
lea
add
fcmovb
pop
pusha
push
hlt
mov
rcrb
xor
add
insl
nop
jbe
xlat
push
js
je
push
cmp
xchg
movsb
sbb
push
aam
push
sbb
mov
movl
adc
sbb
or
cmp
xchg
pop
leave
pop
repz
ret
cmp
dec
dec
adc
mov
mov
cmp
cmpsb
mov
mov
adc
cmpl
cmpsb
pop
test
jmp
push
inc
adc
push
or
sub
fadds
add
dec
add
aas
imul
repz
add
mov
inc
jae
fwait
lea
mov
inc
dec
jmp
repz
mov
xor
sbb
shlb
in
xor
in
test
jl
mov
in
pop
add
je
jecxz
sub
loop
add
push
cli
loop
lea
test
int
test
mov
cmp
dec
ljmp
sub
les
mov
pushf
jl
stc
gs
sbb
sub
rolb
mov
lea
inc
adc
inc
jl
sbb
push
mov
jg
cmp
test
lret
xor
popa
rolb
xchg
sub
aam
das
in
enter
add
ror
push
ret
add
fcoml
adc
add
jle
sbb
loopne,pn
fildl
dec
pop
sub
mov
cmpsl
aas
fdivr
ret
mov
mov
add
dec
les
mov
pop
out
incb
cmp
jne
push
sub
xor
lods
and
xchg
fdivrs
xchg
xor
rcr
pop
add
lea
push
loopne
add
test
fwait
push
mov
jo
out
enter
add
sbb
cmp
pushl
call
push
jge
es
mov
mov
add
pop
es
les
shrb
mov
mov
and
fistpl
dec
lock
lock
dec
jg
pop
mov
push
test
cmp
fsubrl
lds
fisubrs
inc
dec
sub
push
cmp
in
dec
jmp
sub
out
sub
in
fnstenv
push
mov
add
mov
inc
adc
data16
pop
xor
xchg
in
and
lods
and
dec
loopne
mov
push
mov
pop
lcall
and
dec
fcomp
sub
mov
loopne
push
add
mov
neg
sbb
fldenv
shl
and
jo
sub
xchg
dec
pop
mov
pop
xchg
lock
shll
push
dec
dec
mov
cmp
or
iret
js
hlt
and
xchg
push
scas
mov
jg
cmpsb
push
fimull
leave
and
push
push
ss
scas
out
cmp
adcb
ret
push
repnz
mov
test
push
and
mov
jge
pop
xchg
add
or
add
imul
sti
scas
and
push
cmp
mov
jmp
pushl
and
adc
in
push
stos
test
loop
sbb
test
xchg
jo
pop
mov
and
mov
pop
push
sbb
mov
mov
push
mov
adc
jns
outsb
jle
cmpl
jne
pushl
nop
push
mov
jmp
subl
push
xorl
fs
popa
adc
mov
scas
or
add
mov
dec
jno
adc
or
add
pusha
add
iret
sub
cmp
je
imul
mov
ret
ret
push
sahf
repz
popa
in
add
stos
stc
mov
pop
inc
lret
jo
add
ja
popa
sbbl
sbb
imul
xor
sbb
push
jne
movb
add
cmp
jne
popf
adc
mov
fldz
xor
push
push
loop
jo
movb
jle
addr16
dec
aas
mov
xor
xchg
outsb
jmp
test
xor
outsl
mov
or
jg
add
emms
mov
or
lcall
sub
mov
sbb
cmpsl
or
push
sbb
mov
or
jge
ror
push
adc
mov
mov
push
sub
push
adc
enter
dec
adc
add
push
xchg
call
lods
test
pop
lahf
test
add
sti
test
add
ja
mov
ret
dec
inc
or
mov
sbb
shll
add
push
sbb
sub
push
lea
and
test
cmpsb
adc
clc
mov
pop
sbb
xor
in
add
hlt
enter
push
lret
into
shr
mov
rcll
enter
xor
pop
adc
and
jge
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
add
jle
inc
pusha
fsubrl
xchg
test
pushf
push
and
push
xchg
and
out
push
push
push
aaa
movsl
roll
mov
push
stos
mov
jp
dec
sbb
cli
scas
fiadds
add
shll
imul
add
rorb
pop
into
popa
inc
or
in
ja,pt
lea
xlat
sbb
into
xchg
adc
pop
xor
adc
fmuls
or
mov
call
iret
adc
dec
or
nop
test
cmc
fs
mov
adc
dec
es
fadds
xchg
xlat
push
adc
xchg
push
mov
add
xrstors
cmpb
xor
je
push
pop
test
cmp
cli
pop
push
sbb
jnp
jbe
jmp
inc
fdivs
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
or
imul
mov
addb
push
xchg
cmp
adc
pop
pop
cltd
scas
xchg
push
popa
push
sbb
mov
mov
jecxz
add
cli
sbb
shlb
out
add
insl
lea
or
mov
jle
fidivrl
shlb
push
or
dec
cmpsl
mov
push
jl
jl
mov
cltd
mov
lea
mov
push
rol
or
movsb
add
inc
les
ret
add
cmp
jge
out
mov
outsb
mov
idiv
push
mov
push
push
mov
jno
aam
ret
xor
idiv
imulb
add
in
cli
jnp
aam
fstpt
pop
dec
mov
push
add
orl
push
das
mov
xchg
mov
xchg
popa
inc
inc
dec
xor
repz
jge
add
push
sub
in
mulb
loop
fldz
push
fstpl
push
pop
clc
arpl
jge
mov
sub
clc
je
popf
hlt
ja
ficomps
lea
cltd
idivl
fistl
jp
xor
mov
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movsl
fisubrl
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outsb
sti
pop
xchg
sub
cmp
or
or
js
decl
out
insb
mov
hlt
fists
sti
fildl
mov
test
jns
faddl
or
test
fdivrp
mov
sub
mov
lea
test
mov
inc
fidivrs
cmp
add
pop
sbb
push
insl
pop
movsb
cmpb
or
clc
fidivl
jmp
add
dec
subl
cli
outsb
lods
iret
xor
ret
pop
jne
mov
pop
pop
movb
push
repnz
test
jmp
imul
push
or
mov
ret
mov
aam
pop
mov
js
xchg
and
fsubs
add
pop
push
jbe
pusha
push
gs
fadd
lcall
inc
pop
scas
fs
and
cmp
sbb
test
aad
dec
push
dec
out
push
pop
pop
into
pop
push
dec
bound
out
push
cmp
test
lock
ret
lods
sub
sub
data16
imul
in
add
inc
stos
inc
frstor
repnz
xor
fdivs
fcompl
sbb
loope
pop
iret
shll
imul
jns
xor
jnp
and
cmp
jo
jne
sti
mov
push
add
inc
popf
movsb
xchg
adc
fldenv
leave
pusha
pop
leave
pop
xor
add
push
jge
int
scas
xchg
ljmp
or
sbb
inc
inc
dec
rorb
mov
and
test
in
lea
and
outsl
jne
shrl
fnstsw
dec
or
dec
or
add
cmp
and
loop
mov
inc
fcmovbe
iret
js
and
andl
shlb
adc
lahf
push
add
cmpsb
jle
add
imul
pop
sub
icebp
sub
insl
xchg
xchg
mov
or
xor
xchg
dec
scas
jb
xor
sbb
sbb
ljmp
push
sub
cmpsl
adc
fs
pop
jnp
jmp
pop
int3
out
pop
inc
sbb
popf
dec
sbb
rol
pop
sbb
pop
je
mov
pop
or
xor
and
loopne
push
jl
and
daa
pop
adc
and
repnz
into
dec
stc
mov
mov
xchg
shll
cmp
gs
xor
loopne
add
icebp
inc
inc
push
add
push
add
inc
jae
clc
push
sub
clc
setb
test
mov
mov
sub
cmp
pusha
je
xor
cs
clc
fisttps
andl
push
lea
push
lods
aaa
addb
das
xor
mov
je
push
fstps
pop
inc
sbbb
pop
sub
outsb
dec
add
mov
xchg
inc
dec
and
mov
or
mov
hlt
xchg
in
or
add
in
fidivs
mov
lret
shrl
adc
xlat
das
push
jp
push
inc
scas
push
pop
outsl
es
xchg
pop
add
and
add
adc
arpl
mov
mov
sbb
mov
mov
mov
out
dec
sub
iret
popa
sub
pusha
sbb
add
cld
imul
push
push
add
pusha
rcl
mov
in
aas
jmp
test
push
xor
pop
sti
sub
inc
inc
and
sbb
pavgw
in
pop
js
and
cmp
ficomps
not
or
inc
rcr
push
pop
jle
popl
jb
mov
and
das
sbb
mov
inc
xor
adc
jb
adc
xchg
inc
les
out
push
add
jmp
sub
pop
js
test
inc
add
add
inc
sub
jno
sbb
and
mov
insl
je
incb
xorb
cmpsb
xchg
call
and
and
and
gs
xor
lods
dec
cwtl
loope
pop
clc
pop
jb
jae
push
in
enter
movsb
pop
fmuls
add
es
lret
adc
mov
shlb
hlt
aam
pop
and
xor
int3
add
imul
add
pop
shrb
popf
sbb
pop
sarb
sbb
push
les
push
dec
gs
stos
test
add
sub
popf
jo
mov
mov
in
mov
mov
push
sbb
sahf
sbb
adc
dec
pop
xlat
pop
rcrl
sbb
daa
lahf
cld
pop
test
ljmp
and
cld
mov
pop
xchg
push
ret
insl
test
or
and
sub
dec
cmp
inc
and
movsb
cmp
cmp
outsb
mov
imul
mov
adc
rcrb
mov
cmpsl
pop
push
sbb
adc
inc
mov
aad
sbb
inc
push
jae
out
popf
movsb
ja
fsubr
sbb
xor
sti
jbe
cmp
enter
adc
jne
mov
shlb
push
bound
je
daa
or
xchg
icebp
insl
and
pushl
push
lret
pop
shrb
scas
mov
xchg
out
mov
add
decl
fs
aas
and
test
je
je
or
jp
mov
and
stc
pop
mov
ja
push
dec
mov
jmp
dec
mov
sub
and
insl
inc
jge
mov
lcall
dec
add
xchg
inc
pusha
inc
xor
shlb
xchg
sub
ss
sub
leave
js
sar
jmp
mov
mov
mov
cmp
sbbb
fwait
add
push
pusha
jle
call
cli
or
std
mov
or
fsubr
sbb
jns
fcomps
outsb
je
mov
xchg
or
in
mov
sbb
xor
or
aam
fwait
mov
push
mov
cmp
pop
lock
cmp
in
mov
add
shl
jg
loope
cmp
sete
adc
loope
lock
and
hlt
mov
push
and
stos
fsubs
mov
or
pushf
dec
cmp
add
push
sbbb
adc
mov
add
scas
dec
sbb
and
adc
xor
rolb
mov
movsb
push
repnz
dec
add
sbb
mov
rcrl
int3
sbb
mov
push
jecxz
push
clc
insb
jl
hlt
js
pop
int
add
lods
pop
pop
dec
add
shlb
xlat
sub
sub
pop
push
adc
loope
or
xchg
push
call
pop
shrb
or
mov
inc
pop
sbb
mov
push
jge
out
cmp
fcoms
ss
std
mov
or
cmp
daa
push
xchg
push
or
sub
test
loopne
xchg
add
jmp
mov
cmpsl
xor
inc
push
jnp
cmp
pop
lods
enter
adc
push
pop
pop
les
sbb
mov
mov
in
adc
ret
and
outsb
xchg
or
in
repz
in
push
lret
adc
dec
xor
fdiv
in
and
mov
jns
pop
xchg
fdivrs
pop
arpl
xchg
cmpsb
sub
adc
add
and
lock
rorb
dec
fcompl
fistps
xchg
jle
jge
js
sarb
adc
mov
mov
adc
out
test
je
and
or
sub
cmpsl
shll
jno
xchg
mov
into
inc
or
ss
mov
or
stc
repnz
enter
outsb
dec
dec
push
notb
clc
clc
sub
mov
xchg
lret
xchg
mov
xchg
mov
sbb
test
pushl
push
lea
lret
xchg
rcrb
lea
add
and
roll
dec
xchg
nop
jg
addb
outsb
lods
hlt
das
jl
in
jmp
das
hlt
mov
mov
or
jbe
or
push
push
add
push
outsl
or
sbb
gs
rorb
addr16
jp
push
hlt
loopne
clc
adc
sub
jp
dec
imulb
mov
mov
popl
jl
inc
inc
in
jb
hlt
fwait
sarl
das
sub
jg
mov
ret
xor
dec
pop
enter
mov
inc
push
add
dec
lret
cwtl
or
pop
shrb
clc
aaa
xchg
adcl
clc
mov
sbb
pop
xor
cmpl
pop
push
mov
rolb
adc
push
xor
and
xchg
xor
and
pushf
or
cld
jbe
movzwl
and
inc
push
shrb
sub
cmp
push
lea
push
mov
pop
pop
cmp
rcll
int
inc
or
jbe
pop
push
mov
push
test
fdivl
adc
add
lock
jmp
ljmp
subl
popa
mov
or
or
pusha
loopne
sbb
aam
jle
movsb
add
pop
out
aaa
inc
pop
jb
or
mov
push
mov
daa
sbb
mull
test
xor
and
mov
push
add
xor
inc
inc
push
test
cld
xchg
add
enter
xor
push
sub
xchg
pop
mov
call
rcrb
mov
xchg
push
leave
ret
xchg
push
pop
inc
or
mov
sub
paddb
add
cmpsb
add
fmull
xchg
mov
xchg
pop
inc
fcompl
push
test
ds
lock
addr16
movl
mov
inc
stc
xchg
dec
sub
adc
pop
and
sub
mov
hlt
push
xchg
arpl
dec
xor
data16
mov
mov
imul
jns
inc
cmpl
pop
loope
sbb
jge
outsl
xchg
push
mov
aaa
mov
mov
shr
xchg
jno
popa
xchg
or
movsl
fnstenv
inc
add
add
sbb
jg
lds
int3
jmp
mov
mov
or
outsl
jbe
xchg
pop
or
mov
sbb
add
icebp
mov
test
mov
aam
ljmp
pop
add
test
or
sub
cmovb
sbb
add
sbb
clc
xchg
mov
sbb
sbb
mov
pushf
mov
in
cmp
les
das
sub
aas
xor
js
in
or
and
cmp
sub
adc
push
adc
jge
insb
pop
fs
mov
push
jnp
mov
xchg
fnstcw
adc
mov
xchg
rorb
mov
push
add
or
clc
jecxz
adc
mov
int3
shlb
adc
push
and
sbb
mov
sub
jecxz
out
xchg
aad
inc
mov
sbb
dec
sbb
inc
sub
imul
add
gs
push
repz
popa
lcall
jle
pop
dec
popf
push
jp
lea
dec
add
nop
add
lret
jo
add
add
add
lea
xchg
push
aaa
imulb
add
and
ret
push
xchg
orl
fstps
pop
int3
xor
adc
mov
enter
sbb
inc
or
lcall
add
sbb
sub
lock
int3
push
fstl
mov
mov
insb
fadd
test
mov
sbb
add
cmp
test
mov
mov
or
add
iret
nop
fimuls
xor
cltd
mov
sbb
out
mov
jmp
xchg
test
mov
pop
cmp
test
push
pop
iret
aam
sub
sub
adc
idivl
cwtl
aad
pusha
lock
aaa
lea
or
fdivr
mov
into
mov
dec
push
pop
or
imul
or
inc
inc
push
or
push
push
ret
psrld
pusha
enter
xor
cltd
in
add
or
or
fs
mov
pushf
cmc
jbe
pop
mov
jb
fwait
xor
out
add
inc
mov
lock
push
or
cmp
or
cmp
mov
je
arpl
faddl
mov
lret
shll
lods
dec
xchg
mov
or
cmpsl
lock
movsb
fwait
insb
jo
rcll
inc
dec
pushf
mov
adc
adc
sub
mov
jo
adc
loop
jne
rcll
subl
sub
flds
sbb
or
mov
gs
xchg
dec
mov
fsub
sub
in
test
pop
jns
aad
jb
lcall
mov
xchg
cmp
xchg
sub
cmp
repz
push
push
add
lea
sbb
push
outsl
adc
inc
negl
in
adc
push
aaa
add
sbb
add
add
push
add
daa
sub
pop
push
push
sahf
inc
mov
jl
fs
mov
adc
adc
add
add
pop
dec
sbb
mov
loopne
incl
and
add
aam
cmp
fwait
aad
outsl
add
xchg
inc
xor
jle
xor
push
aad
cmp
push
or
push
inc
sbb
mov
inc
pop
jle
xor
add
cli
jle
add
and
loope
sbb
movzwl
push
mov
pop
pop
mov
clc
adc
mov
or
mov
inc
fwait
lods
les
mov
cwtl
xor
jle
add
shrl
lea
dec
xor
mov
rorl
dec
adc
inc
or
mov
xchg
mov
mov
add
jns
xor
lahf
pop
cwtl
add
test
scas
push
arpl
ret
fs
lcallw
add
lock
int
add
mov
ret
subb
mov
pushf
mov
cmp
iret
push
jb
in
add
adcb
or
adc
xchg
popa
add
lock
ret
mov
mov
sbb
jae
int3
lret
movsl
xor
cmp
pushfw
mov
ja
add
out
or
outsb
fadds
scas
enter
es
in
and
addl
and
popf
and
cmp
std
aaa
mov
cmp
ja
mov
mov
mov
outsl
sbb
loopne
mov
inc
faddl
loopne
sub
cli
insl
sub
roll
roll
dec
jo
dec
ret
push
mov
subl
push
loop
push
dec
rolb
jo
in
jne
jle
out
lea
cli
dec
jbe
and
clc
adc
inc
add
inc
out
ds
sub
cmp
ss
iret
aam
ret
addl
jmp
ss
gs
movsb
xchg
shl
in
and
adcb
adc
hlt
add
aas
or
dec
fdivrs
add
sahf
mov
out
lret
test
mov
xchg
or
enter
sbb
movsb
loop
andl
sbb
fsubp
inc
dec
lea
inc
lret
lock
cmc
and
orb
bound
enter
push
pop
mov
pop
fiadds
rorb
pop
imul
jno
popa
dec
arpl
jns
dec
mov
pop
aaa
mov
sldt
xchg
faddp
imul
add
sub
adc
loope
dec
or
mov
dec
sahf
cmp
push
lock
mov
push
jae
daa
cmp
push
inc
in
fcmove
fwait
add
orb
shlb
push
movsb
rclb
call
adc
jl
push
push
mov
mov
mov
pusha
mov
pop
loop
push
xchg
das
dec
and
xchg
cmp
rol
push
push
add
push
jmp
mov
bswap
jmp
aaa
pop
pusha
xor
adcl
add
mov
adc
xchg
push
xchg
and
add
sbb
or
add
pop
loope
dec
and
inc
xor
call
adcb
jl
leave
adc
ds
outsl
repz
notl
rcll
int
adc
cmp
insl
popf
dec
sahf
mov
xor
pop
pop
and
pop
push
mov
imul
pop
fs
mov
test
or
xor
lods
imul
fistpl
xlat
xor
push
pop
jnp
adc
leave
push
dec
cmc
sbb
sbb
stc
mov
lret
enter
rcrb
jno
xlat
pop
ret
jae
mov
and
incl
jne
push
pop
cmp
je
xchg
mov
xor
sbb
stos
or
push
and
inc
pushf
dec
dec
dec
rorb
rorb
pop
enter
cmp
mov
lea
ljmp
in
insb
test
adc
and
sbb
inc
aam
jge
and
push
je
leave
and
das
adc
add
cmp
mov
sub
sub
push
test
pop
sub
loopne
nop
mov
cmc
test
mov
sub
jnp
mov
mov
mov
fsubp
insb
jge
std
inc
xlat
jp
jg
loopne
insl
faddl
cs
aam
mov
sbb
inc
xchg
xchg
das
fcoml
sub
adc
sub
pop
dec
loope
pop
jns
insl
pop
fucom
imul
dec
sub
mov
or
sqrtps
fsub
xlat
cmp
cmc
push
xor
in
pop
lret
adc
test
sub
pusha
push
repnz
int
sbb
fsubrl
enter
and
inc
test
or
push
push
pop
stos
into
mov
mov
mov
lock
loopne
rclb
mov
push
adc
add
push
test
dec
fcomps
loope
mov
inc
mov
sub
lea
mov
sub
and
or
jnp
mov
mov
xchg
test
lods
leave
mov
iret
fs
sbb
sti
mov
push
push
orl
push
cld
and
lea
pop
and
fsubrs
xchg
out
pushf
lret
rorb
push
mov
inc
xor
push
out
or
ljmp
je
insb
rcrb
loope
popa
sbb
push
or
cmp
das
sub
inc
ss
movsb
dec
pop
or
or
shrl
mov
or
add
test
xor
add
dec
test
jbe
mov
js,pn
push
jnp
or
popa
movsl
sbb
mov
enter
ja
fisttpl
rclb
stos
cmpl
sub
scas
int3
pusha
int3
xchg
ret
lret
andl
or
jl
xchg
jnp
push
lret
int3
push
jae
xchg
aas
dec
jle
push
adc
and
push
mov
es
add
mov
xor
icebp
mov
fildl
addb
inc
enter
or
xorl
adc
cmp
clc
push
mov
xor
add
bound
add
mov
jmp
adcb
dec
cmp
rorb
aad
push
sub
mov
pop
gs
mov
adc
repz
sub
lret
ds
bound
push
pop
mov
sub
sbb
lods
js
dec
hlt
sub
push
arpl
movsl
sar
jne
jo
add
inc
mov
pop
jb
push
rcll
sbbl
cli
push
ss
mov
sbb
or
popa
sub
push
push
imul
clc
hlt
sub
fnstenv
add
and
or
adc
add
notb
push
inc
xchg
into
push
xchg
cmp
lock
jp
adc
sti
loope
clc
out
or
lcall
bound
mov
andb
push
ret
xor
int3
in
add
lods
pop
jbe
sarl
pop
push
pop
cmc
cmp
scas
movzwl
mov
sbbb
push
rclb
int3
push
inc
inc
ret
add
jae
addr16
fcoms
or
adc
jmp
or
out
adc
jne
inc
jp
loop
test
inc
outsl
mov
pusha
mov
in
push
loopne
pusha
xchg
into
mov
ret
mov
jecxz
push
orb
inc
mov
add
fdivrl
add
lock
add
fiadds
push
add
add
pusha
add
push
je
cmpb
push
cmpsl
sub
jnp
ja
and
dec
xorps
mov
push
add
dec
loope
clc
je
cmp
clc
call
addl
sub
lea
out
adc
push
lea
push
inc
push
test
dec
inc
pop
rol
adc
sbb
dec
sbb
imul
cmpsb
lahf
dec
lret
cmp
jl
cmp
dec
hlt
int3
xor
sarl
pop
fbld
pop
shrl
repz
jle
mov
cmp
jne
sti
dec
or
or
push
out
pop
out
insb
cmc
add
push
mov
repnz
aaa
or
out
ljmp
pop
ja
ret
pushw
push
mov
out
cmp
imul
aas
pop
mov
sahf
adc
push
sar
lods
mov
leave
sub
or
bound
lods
stos
cmp
pop
adc
mov
jl
in
xor
mov
fldcw
fisttps
js
bound
push
dec
or
in
out
adcl
mov
aad
mov
fdivrs
fwait
add
ja
cmp
add
dec
jg
or
cmp
call
sub
cmp
incb
ja
pop
add
test
push
dec
addl
cli
hlt
mov
or
out
lock
je
push
add
lods
push
cmp
cwtl
dec
push
icebp
mov
add
sub
faddl
cmp
in
or
ret
mov
mov
jb
neg
xchg
cs
add
inc
dec
cmpl
popa
rorl
mov
data16
ljmp
test
mov
dec
add
inc
pushf
aaa
nop
xor
jge
xchg
scas
insb
add
jmp
adc
xchg
lock
adc
push
jo
repnz
mov
mov
add
push
lods
pop
sar
fwait
lock
loopne
leave
adc
jbe
inc
cmp
xchg
les
or
cmp
shrb
and
out
push
push
mull
adc
xchg
jo
push
push
int3
jno
imul
push
lock
leave
add
inc
add
xchg
or
in
shll
mov
ja
insb
adc
push
adc
aaa
or
jp
mov
pop
sub
jne
adc
and
add
inc
bound
roll
test
or
inc
inc
mov
adc
inc
pop
lods
jmp
aas
faddp
jmp
jl
ret
lods
push
test
je
sbb
ss
cli
jmp
mov
pop
jno
cmp
push
inc
cmp
jae
add
sub
add
cmp
test
pop
ret
push
test
push
mov
sbb
mov
jge
or
inc
orl
dec
out
inc
lock
sub
andl
push
sar
xchg
lea
sub
mov
push
rorl
popa
xor
lea
push
mov
cmp
je
loope
inc
sarl
outsl
add
sbb
scas
enter
je
pushf
dec
and
and
inc
loop
shll
pop
sarb
pop
repz
push
jge
push
sub
popa
xchg
cmp
test
adc
add
pop
lea
ret
out
sbb
inc
out
dec
lcall
cwtl
cmp
add
mov
cs
lock
or
dec
and
mov
inc
jp
mov
pusha
push
loopne
dec
mov
in
add
mov
adc
push
mov
neg
push
popl
ret
mov
mov
pop
out
jne
in
and
jge
inc
push
push
mov
pushf
mov
add
mov
int
push
cmp
sbb
push
cltd
pop
jo
nop
aaa
pop
das
lods
mov
mov
gs
xchg
sbb
adcl
fwait
pop
push
sbb
call
rorb
push
leave
aas
loope
sbb
mov
cs
and
pop
dec
xchg
pop
cli
std
cwtl
pop
inc
pop
daa
xchg
add
fs
ds
or
dec
xor
popf
jnp
xchg
outsl
mov
jno
sub
xchg
sbb
sbb
shlb
mov
testl
in
xor
cmc
sub
xchg
inc
faddl
dec
lock
rolb
add
jnp
mov
std
xor
ret
pop
inc
add
mov
push
add
jecxz
or
ret
push
xor
inc
fcmovnu
xchg
mov
cmp
jnp
aaa
sbb
pop
add
or
jmp
rcrl
adc
pop
iret
fisubrs
sbb
xor
xor
jnp
push
mov
dec
js
jl
sbbl
test
inc
add
ja
mov
lods
push
inc
mov
gs
xlat
xchg
push
inc
pop
jg
adc
or
negb
push
or
xchg
pop
sub
push
je
jo
push
cmp
insb
push
nop
mov
dec
lahf
or
ja
jmp
into
nop
jmp
dec
pop
inc
push
cmpsl
leave
ret
push
clc
cmpsb
gs
cmpsl
loopne
mov
cmp
test
mov
dec
pop
les
sbb
test
sub
or
cmp
aas
je
orl
fwait
cmp
dec
rcll
xchg
mov
push
mov
jbe
jle
mov
and
mov
dec
sbb
or
sbb
data16
cmpsl
jl
popf
shrl
pop
sbbl
and
jbe
mov
popf
dec
pop
dec
loopne
pop
add
push
fiaddl
push
jecxz
in
sub
lock
add
and
xor
fimull
mov
es
insl
and
sub
inc
push
cld
lea
int3
dec
rclb
and
imul
sub
or
push
js
pop
add
imul
sbb
push
and
adc
sub
or
pop
lds
test
adc
dec
sub
out
inc
push
lcall
sti
inc
jne
lds
mov
loopne
lods
imul
push
ja
cmp
mov
add
and
xchg
arpl
lods
cmc
xchg
xor
adc
repz
adc
push
lea
xchg
mov
mov
insb
xor
aam
lods
xor
dec
or
sub
and
enter
sub
adc
bswap
lea
cs
dec
pushf
mov
adc
ljmp
movsl
jo
lcall
and
push
dec
xor
js
push
jo
popa
sub
movsb
jo
push
cmp
or
loopne
cmp
outsl
sbb
jae
rorb
movsb
mov
dec
mov
and
daa
dec
fisubrl
fsubrs
and
or
push
dec
insl
sbb
xor
lods
jmp
gs
dec
push
adc
testl
cltd
pop
popf
lea
bt
pop
popf
add
or
push
push
hlt
lea
push
add
xchg
jnp
mov
xchg
rcrb
insl
rorl
mov
loop
jg
push
jns
jns
rolb
mov
add
dec
and
inc
or
cltd
push
andb
sub
cmpl
and
adc
mov
sbb
add
pop
rol
mov
push
sub
mov
aas
push
push
pop
xchg
cmp
pop
sbb
cmp
out
and
mov
push
cmp
fimull
or
add
out
mov
sbb
ljmp
clc
rcr
sti
faddp
inc
add
mov
pop
pusha
orl
cmp
inc
inc
lar
lret
bound
lcall
xchg
pop
lds
je
and
fs
dec
and
adc
pusha
jb
sbb
sub
es
mov
std
lods
add
test
and
iret
xor
dec
adc
push
and
cmp
cmp
mov
mov
push
testl
pop
and
das
pushl
or
mov
loopne
adc
fisttpll
hlt
add
js
sub
and
jae
ret
inc
xor
sub
sbb
mov
add
inc
or
adc
lret
ljmp
inc
xchg
xchg
mov
dec
xchg
lock
add
xchg
sub
xor
lods
or
scas
push
daa
ds
ja
push
sbb
adc
test
or
dec
in
push
dec
pop
adc
call
sbb
mov
les
or
sub
aas
sbb
push
jge
adc
dec
sar
js
loop
movsb
out
jbe
in
mov
mov
mov
adc
cmp
mov
negb
jp
jne
adc
pop
push
mov
shlb
lea
hlt
add
push
imul
int3
movsb
ss
roll
dec
adc
or
mov
movsb
adc
push
add
fs
cli
sbb
imul
and
push
xlat
enter
stos
xor
push
jle
sub
lea
fadd
jle
xchg
jmp
inc
pusha
lods
cmp
inc
jp
add
loopne
jnp
inc
test
or
xchg
add
jge
jecxz
sub
add
adc
iret
inc
pop
jg
sub
inc
push
dec
adc
or
jo
out
add
xchg
dec
sbb
add
add
inc
and
dec
in
es
imul
iret
cmpsl
xor
mov
add
in
sub
fs
mov
sbb
cltd
or
notl
inc
or
xlat
push
test
push
test
and
jne
xlat
push
pop
daa
nop
jo,pt
in
mov
scas
loope
adc
mov
int3
jae
mov
aam
mov
mov
arpl
bound
out
ss
xchg
mov
add
pusha
ja
mov
mov
cmp
sbb
cmp
inc
mov
not
fdivl
add
push
mov
movsb
jecxz
mov
mov
sub
out
inc
das
in
jns
push
push
sbb
adc
in
xor
mov
popf
dec
fnsave
mov
push
mov
mov
pop
mov
sbb
inc
pop
sub
loope
and
lcall
sbb
mov
xor
dec
nop
pop
pusha
pop
add
inc
mov
cmpsl
xlat
cwtl
mov
dec
es
xchg
adc
in
add
add
jmp
sub
xchg
rcll
pop
testl
add
inc
sub
or
insb
mov
pushf
mov
sbb
pop
adc
inc
xchg
das
lea
mov
stc
cmpsb
les
fiadds
mov
mov
popa
into
cwtl
shll
dec
xor
insl
and
inc
aam
mov
sub
ret
fcmovbe
push
adc
mov
mov
ja
sub
shrb
aad
mov
ret
push
dec
shll
push
jecxz
push
xor
pushw
test
sbb
jl
fdivs
test
shll
xchg
rolb
mov
cmp
in
cmpb
pop
mov
xor
jle
dec
or
out
jnp
orl
push
push
insb
or
and
push
inc
sub
jb
les
dec
or
pop
cmp
pop
sarb
add
mov
jp
xor
sub
mov
das
or
mov
bound
dec
jo
xor
pusha
jne
jg
jne
cmp
lea
add
push
icebp
add
pop
dec
mov
mov
and
adc
push
inc
sub
lods
loop
sub
push
or
loopne
push
xchg
jo
push
aad
xchg
inc
cmp
pushf
adc
jle
cmp
jae
cmp
test
inc
inc
or
fsubr
aam
out
rcrb
out
sub
pop
ds
movsl
ja
enter
std
cmc
sub
and
inc
dec
lock
ret
movswl
test
jmp
add
roll
xchg
jmp
mov
sarl
movsb
cmp
dec
rclb
dec
insb
push
push
push
ds
dec
mov
nop
rcrl
cmp
cmova
or
pop
scas
adc
cmpsb
arpl
mov
mov
pop
sub
and
dec
out
mov
xor
inc
add
movsl
jge
aam
test
adc
push
pushl
int
and
sub
pop
test
cmp
add
and
das
pop
dec
jmp
or
inc
mov
stos
and
add
adc
addb
cld
ljmp
cmp
push
inc
sbbl
pop
adc
and
enter
jmp
test
orl
mov
mov
or
mov
insb
enter
test
or
shrl
fs
fsubl
ror
cmp
inc
dec
cmp
mov
mov
cmpsl
addr16
mov
add
insb
pop
sub
push
mov
xor
pop
inc
jl
fistps
movsl
shll
sbb
scas
xchg
dec
sbb
mov
ret
cmp
pusha
push
xor
inc
xchg
sbb
inc
xor
adc
aad
in
dec
pusha
ret
subl
js
in
jge
add
hlt
mov
add
mov
dec
jle
arpl
orl
sbb
out
push
lret
sub
sbb
pop
inc
daa
push
fists
cmp
hlt
int
scas
pop
je
incb
dec
in
jno
lea
lea
sbb
jb
mov
and
or
xor
pop
imul
int3
mov
mov
sbb
psrad
mov
aaa
add
xor
rolb
rol
int3
push
pop
fisttps
mov
ret
loope
push
js
movsl
mov
int
ret
cmp
loopne
popa
pop
jecxz
dec
imul
les
sbb
mov
out
lods
cmp
jne
subb
adc
sbb
push
incb
add
add
fs
into
fnsave
mov
lret
repz
cmp
push
fidivl
call
mov
int3
test
adc
push
mov
inc
add
xor
faddl
add
aaa
mov
pop
nop
lret
dec
in
push
adc
or
ud0
popa
insl
fdivr
roll
pop
je
mul
aam
lds
imul
aas
mov
addr16
cmpsl
in
pop
cmp
js
rolb
jl
jmp
imul
icebp
mov
cmp
push
icebp
sbb
sub
add
jl
jae
ljmp
cmpsb
mov
inc
adc
jne
es
add
mov
shlb
sarb
mov
popa
add
mov
mov
or
jge
and
les
xchg
add
add
inc
loopne
fiadds
jmp
aad
pop
movsb
xorl
or
inc
adc
mov
test
icebp
fists
jecxz
push
xor
dec
push
je
dec
jne
and
mulb
jmp
xor
adc
push
and
adc
les
jmp
cld
pop
mov
xchg
dec
sbb
jp
cmp
leave
popa
fwait
loop
adc
lods
jno
out
xor
repz
mov
pushl
dec
js
js
ficoms
test
sbb
fildl
inc
setno
adc
inc
lcall
fdivrl
lea
cli
jb
adc
loopne
xchg
rorb
xlat
into
dec
outsb
jl
test
lea
cs
das
cmp
xchg
ss
scas
lods
xor
jle
loopne
adc
pop
and
or
inc
pop
sbb
or
mov
and
cmp
mov
push
repnz
mov
sbbl
sbb
adc
xchg
repz
or
add
or
push
test
testb
int
inc
jl
scas
pusha
xor
ds
je
addr16
mov
out
movsb
sbb
sub
inc
xor
adc
sub
lock
jno
rcll
or
call
repnz
pop
push
in
and
aaa
cmp
cltd
xor
mov
or
sarl
cmp
push
jo
mov
or
sbb
test
movsb
push
cmp
xchg
popf
mov
cld
push
std
cwtl
and
push
je
add
mov
rcl
inc
loope
roll
xor
sbb
xor
xor
sbb
or
xchg
pop
sbb
dec
jnp
and
jmp
sbbl
lea
mov
xchg
pop
rol
call
ss
pop
scas
jno
incb
adc
mov
scas
cmp
shr
iret
jno
ret
movsb
push
push
dec
sbb
xchg
sbb
bound
push
adc
push
inc
cmp
cmp
lock
push
or
pop
mov
aaa
movsb
rorl
mov
loopne
xchg
xchg
or
mov
push
cmp
jecxz
cmp
movsl
mov
dec
les
fdivl
inc
sub
in
xchg
rorb
xchg
adc
imul
adc
push
and
sub
adcl
push
mov
cltd
ja
mov
adc
adc
xor
outsl
pop
dec
add
push
mov
pop
ja
lods
in
into
shl
idivl
pusha
cld
js
and
mov
sbb
and
mov
or
jge
outsb
imulb
or
jno
inc
cmp
mov
movl
dec
sbb
dec
imul
mov
push
pushf
push
sub
dec
jl
int3
addr16
loope
sub
mov
push
js
jo
enter
insb
mov
scas
mov
xor
xchg
or
dec
das
mov
shll
in
imul
and
xlat
sbb
js
test
or
js
andb
xchg
sbb
dec
pop
insl
jnp
push
pop
jae
inc
popf
fmul
mov
add
sub
out
popf
das
insl
xchg
xchg
or
mov
fisubs
inc
cmp
add
cli
push
cmpb
je
imul
popf
push
xor
leave
xchg
movsl
dec
sbb
cmpsb
mov
sub
lods
or
fadds
push
fdivrl
pop
aam
inc
adc
call
xor
int
sub
mov
std
dec
popa
shrl
mov
popf
mov
mov
fmuls
cli
and
mov
inc
cmp
mov
or
sub
jae
enter
xor
lods
cs
shr
repz
push
add
pop
imul
add
pop
fmul
aam
inc
dec
add
pusha
pop
cmp
jl
push
xchg
shrb
das
inc
dec
data16
fistpl
adc
push
mov
sbb
out
test
cmpsb
mov
pop
ss
outsb
inc
pop
subl
int
flds
iret
sbb
mov
insb
add
ja
std
aaa
push
sbb
add
inc
dec
mov
jns
mov
test
cmp
out
stos
inc
dec
xor
aam
mov
jmp
cli
dec
inc
or
cwtl
sbb
test
pop
push
test
popa
addr16
lea
jae
sbb
arpl
in
jnp
jge
lea
cli
sbb
mov
fistps
cld
pop
adc
sub
add
shrb
outsl
ja
inc
je
xlat
sub
mov
cmp
mov
sarl
cmp
cmp
mov
roll
adc
cwtl
out
nop
iret
adc
dec
cltd
rorl
addl
mov
shll
pop
inc
pop
rcrb
pop
cmp
stos
repnz
or
aas
dec
cwtl
je
les
jg
fs
outsl
inc
mov
mov
cmc
test
call
fstl
inc
xchg
push
filds
lods
xchg
xchg
xchg
aas
cli
insb
sub
fs
cmp
pop
mov
mov
add
and
add
roll
jge
scas
sub
out
cmp
push
cmc
test
jge
cmp
movsb
lcall
cs
fwait
xchg
cmp
stc
inc
mov
mov
add
nop
mov
add
mov
and
sub
xchg
outsl
jnp
sub
sub
xchg
test
xchg
js
xchg
mov
jb
mov
jecxz
jmp
xor
cmp
sbb
dec
out
pop
rcll
sbb
mov
xchg
cmc
add
adc
pop
loopne
inc
adcl
pop
add
movb
aaa
loopne
sub
xor
shr
sbb
and
pop
xchg
int
sub
and
or
ja
adc
cmp
cmp
adc
cmp
or
push
test
add
sti
dec
in
dec
pop
add
shll
aas
movl
repnz
inc
pop
mov
xchg
add
mov
inc
push
jp
push
dec
push
xchg
adcb
andl
in
xor
push
push
imul
mov
push
sub
xor
mov
and
xchg
sbb
or
adc
push
xor
sub
or
daa
cld
pusha
adc
shlb
icebp
push
int3
js
mov
pushf
es
sub
xor
lea
or
aaa
sub
mov
mov
scas
adc
pop
movsb
mov
push
cmp
scas
and
mov
mov
inc
mov
loopne
fidivl
subl
mov
out
movl
out
and
clc
xor
add
mov
sbbb
xor
cs
mov
in
xor
xor
xor
and
shl
and
or
popf
pop
and
push
pop
popf
adc
or
add
cmp
push
pushf
pushf
inc
aaa
lods
or
jmp
jnp
arpl
dec
cmp
je
jae
es
jae
mov
sub
inc
int3
jno
jb
jge
jno
stos
adc
or
movsb
mov
cwtl
sbb
inc
cwtl
xlat
dec
xchg
cmp
push
mov
or
pop
fisubs
xchg
mov
xchg
jne
lea
sbbb
rolb
xor
dec
sub
lods
mov
jne
mulb
pop
or
icebp
adc
and
mov
and
pop
push
mov
or
push
enter
cmp
roll
mov
sub
xchg
xchg
out
sbb
add
inc
adc
xor
cmp
aad
lea
rorl
pop
add
lret
push
lahf
sarl
adc
cmp
or
imull
push
mov
rolb
rcrb
adc
out
fwait
clc
xchg
sbb
xor
adc
cmc
jbe
loopne
and
or
lea
mov
xor
sti
xor
sub
lahf
enter
adc
rcr
jb
lds
pop
or
add
or
fldl
inc
pop
mov
fistpl
fdivs
testl
outsl
imul
jbe
jl
sbb
pop
push
xor
lea
mov
jle
rorb
icebp
and
lahf
mov
adc
clc
sub
shlb
fildl
notb
rcl
cltd
push
xchg
or
xchg
xchg
cmp
nop
cmpl
and
xlat
test
scas
xchg
xor
cmp
push
jne
lret
or
loope
shrb
jl
inc
je
and
sti
ret
mov
outsl
lea
inc
sub
adc
add
mov
ret
clc
cs
or
mov
pop
or
dec
adc
jge
lret
aaa
lea
jae
addl
sbb
jb
pop
sub
pop
movsb
push
and
sbb
in
fadds
pop
and
lock
shr
cmp
repz
add
xor
stos
insb
in
divb
mov
je
aad
dec
roll
dec
adc
por
pop
shll
rcll
notl
add
shrl
jge
jbe
pop
cs
push
cmpsb
and
popa
ss
adc
mov
jae
mov
xorps
dec
insl
mov
icebp
jno
and
push
xor
imul
sub
cmpl
cmp
fsubp
push
cmp
pop
test
push
sbb
js
push
dec
push
sbb
sbb
and
cmpsl
jle
enter
nop
pop
in
sub
sbb
cmp
lea
cmp
mov
pop
daa
testb
and
leave
and
push
sbb
fdivr
push
sbb
pop
and
repnz
push
inc
mov
nop
dec
and
and
das
and
dec
sbb
and
sbb
and
daa
inc
mov
cmp
and
mov
je
rcll
xchg
call
xchg
sub
push
lds
push
sub
and
stos
jae
sub
and
mov
jae
enter
sub
sbb
push
das
and
icebp
pop
ret
mov
xchg
aaa
arpl
stos
mov
jg
dec
push
push
sbb
mov
pop
leave
and
dec
fdivs
das
add
lods
jae
sbb
inc
mov
addl
loopne
pop
adc
out
outsl
jle
dec
mov
and
les
adc
and
ja
and
mov
lcall
inc
or
push
loop
pusha
lea
aad
fsubs
insl
inc
lcall
dec
dec
xor
add
xchg
xor
add
mov
loopne
adc
inc
mov
cmp
inc
testl
or
push
inc
inc
adc
push
or
stos
in
adcl
fsub
arpl
push
imul
dec
fsubr
mov
pop
pop
or
test
dec
jnp
inc
ret
or
and
inc
in
xor
cmpsl
sbb
popa
in
push
in
ror
sbb
loopne
js
xor
jl
in
lahf
dec
rcrb
cmp
sbb
xor
loope
dec
ficompl
mov
push
add
inc
sbb
into
faddl
push
ficoml
mov
shll
out
adc
adc
in
loopne
add
push
rclb
push
out
test
push
cmp
loopne
add
je
mov
hlt
lret
int3
dec
sub
stos
imul
ja
negb
fsubrl
pop
push
xor
sub
icebp
inc
test
push
dec
daa
add
push
data16
js
adc
xor
push
les
test
xor
push
icebp
or
jl
js
fstps
ds
testb
and
faddl
cwtl
call
pusha
testb
fdivrl
sub
inc
xlat
adc
hlt
push
push
adc
or
sub
cld
cltd
stc
adc
lcall
mov
jo
fisttpl
das
cmp
testb
add
cmp
add
ja
lds
test
divl
jno
test
ret
int3
stc
xor
adc
popa
call
pop
xor
das
je
es
cmp
adc
es
pop
aam
push
pushf
movsb
jb
stos
andl
inc
inc
sub
or
xchg
pop
movsl
aad
shlb
sub
je
push
les
push
cmp
mov
sub
shr
push
mov
sub
or
fldl
cmp
ficoms
fisttps
jp
push
pushl
and
cld
dec
cmpb
fmuls
push
pop
jns
lahf
adc
sbb
popf
add
repz
mov
inc
cmpsb
jno
dec
mov
add
divl
mov
pushf
aaa
int3
sbb
data16
arpl
sub
and
std
pop
mov
inc
jne
push
loopne
out
add
and
jge
mov
out
add
inc
imul
roll
add
aaa
fs
aaa
add
je
push
inc
push
inc
and
push
es
push
andl
fsubrl
movl
cld
in
sub
sbb
jp
call
mov
pop
jge
pop
pop
hlt
roll
lods
pop
adc
mov
in
mov
or
xchg
mov
movsl
es
daa
int3
adc
fs
or
inc
or
lock
sub
inc
mov
adc
jo
loope
xor
jle
xlat
mov
test
js
scas
push
xor
mov
inc
pop
mov
mov
add
lods
sbb
loop
test
pop
dec
ja
dec
sub
adc
je
xchg
or
pop
cmpsb
test
mov
bound
in
jle
rorl
addl
sbb
mov
jo
cmp
bound
aaa
popa
ret
xor
adc
lds
fistl
enter
adcl
loope
icebp
and
inc
add
cmp
pusha
pop
movsl
push
inc
sbb
nop
popf
jg
mov
mov
add
add
movsb
inc
or
popa
ja
stos
mov
btr
std
mov
mov
sbb
adc
sbb
mov
mov
sbb
jp
mov
add
rdtsc
cmp
inc
sbb
pop
xor
enter
pop
dec
add
sbb
push
inc
sub
test
aad
jge
add
xchg
cmp
pushf
jo
adc
sub
mov
test
push
jbe
cwtl
sub
cmp
push
fs
inc
or
shll
fsub
cmp
jle
cld
push
scas
cmp
jge
mov
fcomps
addb
call
mov
cmp
aas
fdivp
push
or
pop
or
pusha
dec
ret
jmp
inc
mov
icebp
xchg
mov
mov
call
roll
jp
cltd
add
push
roll
aam
lock
push
add
int3
nop
stos
pop
loopne
cmp
cmc
adc
sbb
test
sbb
imul
add
push
push
in
repnz
dec
sub
add
les
daa
fistpl
xor
clc
add
push
xchg
adc
adc
xor
cmp
mov
fdivrs
cmp
xor
add
outsl
sbb
js
mov
or
jecxz
sub
push
push
inc
loope
pop
neg
inc
lods
add
pop
lret
push
ret
add
add
outsb
push
mov
in
or
push
ds
or
pop
lret
leave
inc
or
pop
insb
push
pusha
dec
or
xor
in
and
or
insb
sti
lock
inc
lods
push
add
lret
data16
xor
push
sub
xchg
je
repnz
xor
push
mov
out
add
imul
shl
out
add
cmp
sar
dec
iret
inc
sahf
test
dec
call
dec
dec
dec
in
adc
test
and
or
aas
dec
add
add
jbe
cmp
add
xor
dec
dec
push
adc
dec
rolb
xor
mov
sub
sub
lock
sbb
adc
or
inc
movl
sub
dec
test
dec
inc
xchg
loop
xor
lock
scas
inc
and
mov
pop
xor
adc
push
adc
xchg
mov
inc
lea
dec
ss
pop
test
ja
lods
push
mov
popf
or
sbb
adc
add
adc
pop
inc
notl
movsl
orl
adc
outsl
lret
test
xorb
je
inc
add
xor
pop
sbb
jns
in
popf
mov
gs
mov
hlt
mov
scas
xor
sbb
push
scas
push
insl
mov
push
mov
pop
cmp
outsl
testb
push
lea
pop
push
push
cwtl
sub
jnp
dec
sbb
mov
sbb
inc
sbb
out
aad
add
je
sahf
incl
rolb
lds
iret
leave
push
add
jecxz
repnz
and
shll
mov
movsb
lret
inc
inc
inc
sbb
loope
adc
test
dec
sbb
or
jmp
add
test
lahf
scas
inc
orl
push
sub
dec
imul
add
lcall
repnz
sub
jmp
test
addl
xor
adc
xchg
push
add
pop
call
dec
push
and
test
mov
repnz
out
pop
inc
aas
lret
xor
inc
cmp
ds
and
inc
cmp
fstpl
insb
and
or
decb
shlb
fidivrs
mov
fistpll
push
xchg
mov
lcall
ljmp
sbb
add
dec
jmp
inc
cmp
push
pop
cmp
mov
add
lea
inc
cmpb
fisubrs
ss
cmp
adc
dec
sbb
sub
sbb
sbb
dec
mov
inc
adc
sbb
push
pusha
jbe
jno
les
data16
push
sub
test
fcmovu
cmp
xchg
roll
fiadds
push
cs
mov
rcll
stos
lods
xor
add
adc
imul
push
inc
sub
cmc
cs
adc
pop
hlt
in
add
test
movsl
sbb
xchg
daa
push
mov
or
xchg
jle
lret
or
pop
cmp
jo
lods
add
and
dec
add
test
sbb
lret
xchg
sbb
les
idivb
ret
inc
inc
push
mov
add
cmp
xlat
out
push
add
inc
icebp
push
add
or
dec
add
add
fs
sahf
add
pop
lsl
inc
aaa
mov
shlb
push
fwait
xor
lea
ret
or
pop
pop
hlt
ss
enter
lret
mov
mov
mov
aaa
daa
or
push
movl
cwtl
xchg
push
cmp
movsb
fisttpl
sub
movsb
inc
das
icebp
jbe
mov
dec
jmp
jp
rclb
cwtl
push
inc
mulb
mov
add
and
scas
or
sarb
sbb
push
addl
xor
cmpsl
add
inc
xchg
fisttps
xchg
adc
movl
adc
call
mov
mov
mov
lea
pop
cmp
insb
and
imul
add
loope
mov
orb
mov
jecxz
or
scas
pop
aas
shl
and
outsb
or
cltd
ret
lods
add
dec
dec
xor
add
inc
and
dec
xor
inc
add
sarl
jg
nop
adc
lea
cmp
lret
out
cwtl
mov
mov
ss
hlt
repnz
sbb
and
add
sbb
push
or
in
test
rcrb
inc
jg
add
jns
jle
repz
in
ret
or
add
js
add
test
jns
pop
enter
add
add
adc
mov
lods
add
mov
stc
xchg
int3
adc
xchg
sarl
enter
popa
lea
out
or
mov
cmpl
fists
sbb
iret
gs
jl
xchg
and
orb
call
and
mov
add
adc
test
jecxz
xor
call
popa
sub
jmp
fcomps
adc
xchg
int3
arpl
or
fldcw
mov
sub
mov
jge
cmpb
test
shll
in
pushf
jecxz
popa
jecxz
or
sbb
cmp
or
pushl
mov
cmp
lods
movsb
inc
mov
jno
gs
cmpsb
ja
add
cwtl
sbb
push
dec
adc
fs
mov
andl
jmp
enter
adc
jbe
cmpsl
and
movsb
pop
jmp
sbb
push
mov
mov
and
push
push
inc
and
pop
fdivrs
ljmp
cmp
add
xor
fwait
jp
sbb
mov
xchg
aaa
push
adc
decl
cmp
jnp
lods
dec
imul
sahf
add
movsbl
adc
gs
jno
jne
in
es
xchg
je
or
je
adc
fwait
mov
inc
push
arpl
or
mov
mov
mov
hlt
push
inc
cmp
sbb
inc
mov
pop
dec
cmp
adc
pop
sbb
fmull
sbb
jbe
mov
sbb
xor
ret
popa
js
sub
and
and
mov
icebp
jge
aas
lods
xchg
aas
lea
pop
out
add
jno
add
inc
dec
iret
xchg
dec
dec
lods
repnz
fisubl
xor
adc
lods
or
roll
js
test
mov
popf
popf
or
xor
dec
shll
in
sub
push
sub
cmp
je
popa
sbb
mov
shl
adcl
inc
or
jns
imul
inc
test
movsb
add
and
push
neg
jbe
sub
loopne
repnz
push
mov
add
nop
xor
pushl
push
pop
test
add
mov
mov
mov
and
mov
push
xchg
and
mov
mov
imul
mov
repnz
push
sbb
mov
or
jo
std
data16
push
pusha
gs
popa
insb
push
ret
mov
dec
xchg
and
fwait
aam
add
out
js
nop
inc
mov
mov
in
mov
das
push
mov
sbb
mov
mov
pop
adc
cmp
push
mov
lock
and
arpl
movsb
sbb
mov
ret
fimull
mov
sub
cmp
adc
mov
dec
push
test
mov
hlt
leave
and
adc
pop
push
add
lret
jno
test
push
or
stc
sbb
dec
pushf
imul
out
es
adc
fnstenv
jae
add
jne
movsl
cmp
sbb
popf
jno
out
adc
in
test
adc
xchg
mov
xchg
jle
mov
jecxz
jnp
add
movl
push
ret
rcrb
hlt
mov
gs
loopne
frstor
mov
popa
pushf
mov
and
or
data16
or
mov
and
das
adc
mov
pop
js
test
inc
cmp
adc
add
pop
mov
xor
and
sub
jno
adc
gs
in
cmpsl
inc
out
inc
xor
jne
or
inc
mov
sub
inc
sub
test
movsb
sub
inc
dec
inc
adc
pusha
or
pop
cmp
int3
rcrb
jecxz
sub
add
cwtl
pop
cltd
add
or
dec
dec
add
sarl
adc
sbb
mov
fstps
pop
xor
sbb
jle
pop
ss
jge
add
sub
fsubrs
sbb
bound
movsl
add
call
rorl
dec
dec
mov
mov
inc
aas
fbld
in
nop
adc
push
and
mov
hlt
mov
in
mov
sub
jle
sarl
sub
movsb
stc
shl
sub
push
push
push
push
popa
in
dec
mov
int
ret
cmp
into
xor
roll
icebp
inc
jne
mov
std
call
sub
pop
clc
xchg
and
or
inc
ret
mov
loope
hlt
dec
inc
dec
xchg
xchg
inc
sarb
cmp
jle
or
lods
nop
pusha
stos
adc
push
dec
dec
xor
mov
pop
repnz
inc
mov
mov
jo
cs
mov
xor
xchg
loopne
xchg
cmpsl
sahf
scas
ret
cld
ret
mov
fucomi
pop
push
sub
ds
inc
push
xchg
js
cmp
cmpsb
out
cmp
das
pushf
lahf
pushf
jmp
push
inc
mov
pusha
mov
orl
hlt
adc
xchg
pushf
clc
sub
loop
inc
add
jo
pop
add
xchg
cld
mov
lods
fnstsw
mov
jecxz
or
fsubr
pop
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
test
enter
adc
mov
sbb
cmpsl
mov
aam
sbb
add
cmp
add
ss
cmp
insb
mov
outsb
push
push
add
push
and
repz
rcrl
movsb
pop
movb
add
iret
add
sbb
dec
or
sub
imul
cmp
xor
xor
call
lea
xchg
mov
jae
cmpb
sbb
push
roll
mov
or
popa
pushf
aam
mov
adc
jo
inc
jl
push
stos
imul
test
popf
mov
shll
sti
test
xchg
cli
jbe
cmp
or
or
stos
xchg
inc
jne
sahf
inc
fdivrl
clc
jo
or
jnp
add
sbb
mov
pop
loop
cmp
push
rcll
shl
add
loopne
ljmp
lea
dec
mov
insl
sbb
mov
roll
mov
push
out
sbb
cmpsl
sarb
in
movb
outsb
adc
jo
xor
push
mov
stos
rolb
in
xchg
insb
fmull
or
sbb
ja
or
icebp
rcrb
mov
or
mov
push
fcom
inc
inc
pop
mov
jecxz
ds
in
add
dec
sti
stc
cmp
insb
mov
mov
cmp
push
dec
dec
sti
pop
inc
jmp
and
dec
movsb
je
or
push
jge
mov
int3
aas
xor
mov
sub
add
sub
ss
hlt
jae
push
cld
push
out
rclb
mov
pop
dec
pop
sub
and
add
xchg
clc
dec
pop
jb
adc
or
pop
int3
je
sbb
add
mov
int3
pop
push
fcoml
in
and
cs
fstpl
dec
insl
je
loope
add
in
out
in
push
xchg
fldl
cld
inc
ret
xchg
dec
sub
daa
nop
ljmp
cmc
sub
cmp
je
sbb
nop
mov
xor
ss
cld
mov
xchg
mov
sub
popa
arpl
sbb
pop
mov
jge
push
les
pusha
cwtl
xor
sbb
mov
ja
lds
sub
call
shl
sbb
lret
test
sub
mov
cmp
jg
dec
sbb
dec
mov
in
pop
mov
mov
enter
fdivrl
ret
push
jge
jmp
in
shll
ffreep
inc
mov
fldenv
sbb
loopne
cmp
push
loopne
pop
rol
or
loopne
inc
mov
stos
or
mov
popa
fsubrp
inc
jb
sub
fs
scas
inc
shlb
mov
xor
cmp
test
mov
mov
mov
adc
push
adc
jle
add
cmpw
sbb
cmpb
pusha
sub
push
push
rclb
add
ss
jne
clc
jg
sub
mov
add
sar
je
mov
je
xchg
mov
add
jns
adc
pop
inc
xchg
push
adcb
add
or
sbb
int
sbb
or
add
iret
inc
jp
cld
shlb
jne
dec
dec
push
sub
loopne
pusha
jl,pn
sub
jmp
mov
mov
sbb
mov
pop
cmpl
push
xor
jnp
pop
or
iret
jae
stos
add
cwtl
add
xchg
sbb
cmp
or
add
add
fisubl
cmp
fbstp
or
jo
pop
adc
push
aaa
leave
adc
mov
sti
or
xchg
or
mov
fdivr
pop
shlb
mov
imul
cs
inc
roll
xchg
sbb
and
pop
and
lahf
push
and
jmp
dec
cmp
jne
jb
fs
push
cmp
sahf
and
lods
add
and
pop
aas
cltd
dec
pop
push
pop
xchg
dec
push
arpl
jb
jo
jnp
push
or
add
pusha
and
xchg
pushf
xor
jle
mov
add
or
pop
adc
push
jnp
mov
push
and
movsb
cmp
rcl
push
stos
fsubrl
mov
daa
adc
dec
popf
jge
push
inc
jo
inc
sbb
or
loopne
xchg
or
adc
mov
pop
mov
sbb
sarb
sub
or
stos
xchg
cmp
add
in
sub
or
adc
xor
inc
pop
push
sub
push
lock
je
or
adc
push
ss
push
sub
adc
mov
lea
fsubl
or
iret
mov
xor
adc
xchg
hlt
inc
in
add
push
inc
mov
mov
cld
cs
ja
sub
mov
mov
in
inc
inc
mov
nop
shll
xorb
outsl
pusha
xchg
lahf
daa
sti
in
outsb
es
rclb
stc
fwait
dec
and
push
sub
call
test
jns
jne
addl
adc
or
pop
bound
fisubrl
pop
dec
daa
addb
adc
push
cmpl
pop
je
or
jb
jnp
or
push
dec
jp
pop
call
inc
daa
stos
pop
lret
in
cmp
mov
test
jecxz
sbb
mov
adc
sbb
jl
jne
dec
insl
xchg
sbb
lea
ss
sbb
bnd
mov
xchg
js
test
jne
test
mov
test
or
mov
pop
test
je
push
and
cli
and
adc
scas
push
aaa
add
sub
aam
dec
mov
mull
icebp
dec
aas
mov
mov
cmpsb
push
jne
cwtl
call
fstpl
and
mov
pop
or
in
mov
shll
push
es
aaa
mov
lret
mov
xor
insl
bound
xchg
add
inc
bound
sarb
lock
mov
push
push
pop
add
push
xor
adc
mov
test
dec
xchg
lret
xchg
inc
cltd
aad
dec
and
mov
lock
enter
in
in
add
xor
xlat
mov
pop
inc
sub
mov
dec
push
inc
das
inc
and
dec
inc
ret
gs
inc
mov
nop
stc
scas
mov
xor
jae
sub
mov
and
mov
rclb
inc
loope
enter
nop
nop
imul
jmp
push
push
das
sbb
insb
cmp
push
idivl
add
xor
dec
pushf
and
loope
dec
and
push
lret
inc
test
pop
in
mov
cld
inc
push
inc
push
add
andl
cmpb
push
mov
mov
int3
jp
dec
cmp
push
adc
jnp
cwtl
test
xchg
out
pop
sub
cmp
fidivl
inc
je
add
or
mov
push
sbb
mov
dec
fildll
sbb
mov
insb
bound
cmp
dec
dec
push
pushf
pop
ret
test
orb
push
mov
dec
clc
push
dec
sub
lock
icebp
push
pop
pop
push
push
movsb
fcmovnu
or
popa
sbb
dec
shrb
in
inc
jmp
mov
pop
dec
pop
sub
jae
pop
dec
mov
dec
sbb
or
inc
inc
dec
inc
jb
jecxz
jne
jbe
aaa
repz
inc
jne
push
call
sbb
movsb
xchg
xchg
jne
sub
je
mov
in
inc
test
and
mov
icebp
mov
pop
fisttpll
sbb
add
inc
test
call
pop
pop
test
int3
push
sbb
insb
cmpsb
jae
leave
adc
mov
je
pop
add
cs
push
js
jge
mov
aaa
or
cli
push
in
xchg
inc
int3
push
rclb
inc
lea
pushf
add
inc
push
jnp
rclb
test
faddp
xchg
addb
pusha
sbb
xor
jg
rcrl
pusha
clc
repnz
push
cmpl
movsl
inc
inc
fists
mov
shl
push
testl
aam
loopne
ds
inc
outsl
jmp
or
push
sbb
cs
dec
dec
shr
inc
enter
enter
or
cmp
inc
push
and
cmpsl
movsl
rolb
cmpb
scas
xor
dec
dec
test
fadds
sbb
stos
int3
inc
inc
and
or
jnp
sbb
or
jle
ljmp
dec
push
jmp
add
cmp
test
inc
imul
js
ret
sub
fsubrs
lea
adc
xchg
adc
xchg
jne
cmp
and
push
and
adc
xchg
repnz
clc
push
xor
sbb
pop
sahf
and
xchg
mov
cmpsb
cmp
cmpsb
cld
hlt
xor
icebp
dec
adc
xor
or
rclb
mov
cld
jno
mov
les
push
loop
mov
sub
add
push
xor
punpckhdq
sub
call
add
inc
and
add
pop
or
adc
fcmovnu
lods
cmp
jmp
push
jg
lods
cmp
inc
cmp
icebp
inc
out
pop
test
cmp
mov
adc
add
add
rcll
mov
ds
push
or
xchg
icebp
sub
dec
and
mov
jle
mov
js
outsb
idivb
xchg
loopne
or
xor
and
jmp
cmp
jne
loopne
mov
sbbb
push
jbe
out
scas
jmp
ss
cmpsl
pusha
jp
push
pop
orb
sbb
decl
stos
pop
inc
cwtl
call
seto
neg
or
xor
cmp
loope
fdivrl
inc
mov
leave
sub
add
cmp
lock
shl
push
push
and
pop
fs
movsl
stc
or
jl
pusha
add
jne
push
dec
jmp
add
das
add
pushf
sub
cmp
into
jne
push
mov
arpl
cmp
leave
add
fisubrl
btr
ret
popa
fcmovb
cmp
or
ja
in
lcall
data16
jae
or
xor
adc
aaa
loop
mov
lret
je
mov
notl
fisubrl
pushf
es
sbb
sub
out
roll
in
popa
xor
add
scas
or
imul
loop
xor
jne
dec
ja
adc
js
push
add
ret
and
and
out
lods
dec
and
roll
rorb
inc
shl
dec
mov
push
sub
loope
xor
adc
dec
jns
mov
mov
xor
insb
mov
and
pushf
inc
lods
cs
iret
add
scas
jg
xlat
and
es
loop
incl
pusha
rorb
dec
or
insl
xchg
push
orl
xor
and
cld
insl
or
aas
inc
xor
outsb
push
sub
add
jbe
dec
sub
jns
ret
cmp
scas
imul
jo
ljmp
ds
adc
xor
sbb
fisubs
xor
cwtl
sbb
adc
into
repnz
push
loop
add
and
insb
andl
mov
daa
add
rorl
mov
in
add
flds
fcomp
shrl
add
hlt
in
xchg
pop
sbb
push
sbb
jae
rolb
mov
sbb
and
mov
inc
pop
adc
add
fisttps
pop
ret
xor
add
push
je
or
arpl
add
test
hlt
icebp
mov
clc
push
mov
sbb
push
insl
dec
add
les
jb
inc
je
push
inc
xor
xchg
pop
add
adc
bound
lea
fisubrs
loop
dec
sahf
mov
scas
sub
sub
adc
ret
xlat
mov
lret
add
and
xor
sub
inc
and
adc
inc
loopne
push
test
push
rcrl
xor
pop
sbb
sub
jb
cltd
xchg
and
mov
xchg
xor
mov
pusha
and
into
pusha
sbb
xchg
xchg
cmp
push
and
mov
cld
pushf
bound
add
subb
gs
idivb
push
or
xchg
adc
or
adc
push
adc
and
hlt
jg
xchg
shlb
add
or
mov
adc
add
loop
push
push
scas
mov
fdivs
add
inc
inc
mov
loope
lock
jno
scas
sbb
jl
mov
into
lret
pop
scas
or
xor
ss
cmp
and
or
dec
sbb
add
dec
and
xchg
jo
sub
daa
dec
dec
xchg
jg
cmpsb
xorb
push
or
push
push
nop
adc
fbld
or
sbb
inc
nop
and
mov
xor
pop
adc
insl
and
lock
pop
pop
loope
cmc
cltd
push
loope
sbb
adc
xorl
aad
sarl
inc
insb
aam
jmp
call
jmp
adc
jno
inc
repz
mov
lea
or
imull
mulb
cmpsb
cmp
sbb
lea
and
in
mov
pop
inc
ljmp
test
insb
out
xchg
aam
movsl
pop
cmpsl
or
daa
sub
mov
inc
cwtl
repz
jmp
mov
test
ret
les
adc
aad
jmp
xchg
scas
add
cmp
mov
and
fwait
mov
roll
lock
repz
ss
in
popa
loopne
iret
push
cltd
inc
mov
add
cmp
loope
sub
push
cmp
dec
cmpsb
and
push
dec
lcall
aam
inc
cmp
xchg
jp
hlt
jge
dec
popf
cld
icebp
mov
scas
pop
sub
stos
in
in
jmp
repz
or
or
popf
cmp
mov
dec
icebp
xchg
addl
aad
or
repnz
loopne
shrb
rol
mov
aas
adc
loope
pop
jge
scas
je
sbb
adcb
push
hlt
clc
add
jb
test
xchg
xor
or
push
les
sar
pop
ss
jl
outsl
add
mov
push
dec
lret
xchg
cmpb
and
ret
xchg
mov
add
sub
jecxz
or
xchg
ficoms
add
es
std
mov
mov
enter
das
sbb
daa
push
sbb
nop
dec
push
and
les
and
cld
add
add
mov
or
mov
sahf
mov
bound
adc
jae
cmpsl
adc
aam
xor
ret
mov
or
mov
cld
pusha
cmp
add
push
scas
adc
dec
dec
mov
sub
inc
mov
sbb
or
or
xor
andb
dec
cld
adc
hlt
adc
mov
mov
pop
adc
nop
lcall
addr16
add
push
pop
das
out
and
xchg
outsl
aaa
inc
adc
push
sbb
mov
pop
test
pop
dec
push
inc
jp
fcmovu
cmp
fsts
and
test
leave
inc
push
push
or
mov
inc
jno
cmp
or
fs
jecxz
lcall
lock
lods
add
popa
call
add
cmp
fstpl
or
data16
shr
push
pop
inc
loope
jo
adc
adc
rol
decl
sbb
roll
lock
mov
movsb
cmpsl
push
sbb
mov
pop
inc
sbb
test
sbb
sub
shlb
andl
mov
lods
jns
sub
daa
adc
xchg
stos
inc
mov
adc
pop
in
jp
or
shlb
adc
cmp
push
loopne
jp
xchg
xchg
fidivs
es
pop
cmp
add
adc
ja
sbb
mov
dec
mov
insb
insl
pop
sbb
add
or
xor
or
xchg
mov
jnp
shrl
rorl
in
clc
out
outsl
mov
push
jns
xor
jmp
push
sarl
mov
add
adc
sbb
sbb
adc
mov
cltd
pop
and
jle
movsb
pop
idivl
add
cs
icebp
mov
and
dec
fsubl
sbb
jl
xor
pusha
xor
adc
adc
inc
fisubs
push
adc
add
les
adc
dec
lea
clc
addb
push
mov
scas
push
pop
adc
ret
mov
mov
adc
xchg
test
pop
xchg
cmc
cmp
sub
push
outsb
xlat
or
xor
mov
les
pop
jae
add
fnstenv
pop
pop
sbb
or
jns
mov
mov
jae
mov
enter
adc
sub
mov
mov
sbb
fiaddl
xor
inc
lcall
in
inc
loop
outsb
add
sbb
push
add
push
mov
push
adc
pop
arpl
add
add
ret
rcll
add
dec
add
add
sub
cmp
sbb
dec
mov
mov
sub
scas
jns
das
icebp
andb
dec
sub
mov
sbb
and
dec
sbb
cmc
mov
enter
and
cmp
clc
popa
fsts
sbb
jecxz
mov
add
mov
mov
cmp
xchg
add
sbb
jb
in
aaa
mov
aaa
or
outsl
adc
push
xchg
sub
or
inc
dec
adc
adc
mov
clc
and
or
aaa
add
out
mov
push
fimull
jns
dec
inc
jge
clc
addl
dec
sbb
loop
jp
mov
or
sbb
cmp
push
shl
mov
rorl
pop
pop
and
aam
stos
and
or
lock
sbb
test
ds
movsl
movsl
pop
mov
sbb
bnd
push
or
adcb
and
repz
adc
sbb
icebp
lea
or
mov
test
push
push
mov
ja
mov
loope
ficoml
mov
cmp
outsb
dec
add
and
mov
push
sub
or
fistpll
mov
pop
push
push
mov
adc
int3
sarb
and
in
push
fisttps
ja
ja
lds
mov
mov
scas
int
and
dec
pop
fs
jp
sub
and
jne
lods
jp
aas
jmp
push
imul
int
jns
ds
sbb
xchg
pushf
add
adc
adc
dec
dec
test
mov
inc
and
mov
push
xor
fsincos
sub
leave
add
mov
add
test
dec
test
insl
les
mov
sbb
push
cmp
mov
jae
pop
adcb
stos
cmp
fs
sub
pop
pop
push
adc
jp
jae
loop
sahf
sbb
sbb
push
or
xor
pop
fucomi
sbb
movsb
add
xor
lock
jo
pop
in
je
sbb
jbe
nop
lock
cwtl
idivl
fldl
call
adc
jmp
add
in
add
test
dec
or
dec
dec
sub
adc
pop
xchg
les
xor
clc
or
sbb
adc
sub
sbb
pusha
sbb
lock
incl
ret
inc
test
and
push
mov
and
dec
in
mov
sub
outsl
cmp
push
sbb
or
sarb
test
mov
pop
mov
movaps
mov
sbb
or
mov
inc
jbe
adc
add
inc
or
pop
iret
and
out
fwait
push
sbb
dec
adc
add
and
lods
fs
or
pushf
ret
out
subl
into
push
scas
lods
pop
and
imul
pop
popa
mov
pushf
add
adc
sbb
sub
popf
or
imull
pop
add
push
jle
jne
sbb
loop
das
fcomps
or
mov
in
mov
add
pusha
pop
xchg
jg
push
xchg
cwtl
in
xchg
sub
fcomps
and
mov
hlt
aas
je
dec
sub
in
fimull
mov
add
sub
dec
mov
test
out
or
push
pop
inc
jle
ret
xor
bound
loopne
ret
add
add
xchg
sti
fsubrs
mov
movsb
add
add
lods
decl
mov
imul
mov
je
xchg
or
add
xlat
add
sub
push
fildll
pop
push
push
and
or
cmpl
and
push
push
push
iret
jo
pop
fsub
inc
sbbb
cmpsb
inc
fists
mov
mov
xchg
dec
adc
mov
loop
mov
mov
nop
rorb
pusha
xor
mov
cmpb
daa
push
add
or
pop
aaa
or
pop
inc
push
in
test
test
mov
inc
lcall
imul
call
pop
inc
in
mov
xor
movsl
popa
xchg
adc
ficoml
lds
jecxz
xor
mov
add
add
or
pop
mov
hlt
cmp
enter
cs
pop
xor
add
ljmp
iret
push
sub
lea
push
stc
bound
mov
xchg
inc
inc
adc
inc
sbb
cmp
hlt
and
test
adc
pop
mov
mov
jl
sahf
and
sbb
test
mov
test
loopne
mov
leave
mov
adc
add
cmpsl
pop
ret
adcl
subl
mov
mov
jno
sub
fisubs
in
lret
push
and
movsb
mov
pushf
lods
jns
lods
adc
stos
jg
bound
xor
add
push
lock
rorl
jmp
imul
pop
imul
mov
xchg
aam
xchg
or
adc
push
pop
xor
and
cwtl
cmpsb
loopne
arpl
mov
pusha
dec
pop
dec
cmp
icebp
call
scas
sbb
jmp
push
pop
in
add
fidivl
inc
dec
mov
push
loope
adc
and
cld
clc
lock
es
pop
imul
or
or
push
mov
inc
int
cld
stos
jb
bound
test
pop
sub
scas
movsl
iret
inc
push
inc
adc
jp
loope
ja
inc
sub
int3
aam
adc
cwtl
stos
inc
adc
lcall
sbb
and
cmp
loope
fbstp
pop
xor
cmp
adc
cmp
xchg
imulb
push
sbb
inc
mov
sub
mov
push
sbb
xchg
cmp
mov
gs
or
bound
adc
adc
jns
sub
xor
hlt
sarb
or
loop
in
das
sbb
fmuls
jb
cli
add
adc
add
push
mov
xor
inc
insb
fsubs
mov
push
sbb
call
adc
push
and
iret
inc
sbb
sbb
mov
mov
jg
jle
push
mov
fstps
push
jg
add
cmp
jl
push
cmp
push
cmp
jle
cmp
jge
jle
jp
push
cmp
cmp
inc
add
lahf
add
push
add
inc
jmp
inc
push
movw
sbb
repnz
jl
add
jecxz
and
push
cltd
pop
idiv
sahf
dec
pop
cmp
fidivl
or
mov
sbb
xbegin
mov
mov
mov
jnp
mulb
pop
orb
addb
dec
insl
jp
add
out
add
jbe
clc
test
arpl
add
or
repz
or
mov
mov
cmp
xchg
or
ficompl
xor
insl
sub
stos
lods
cmpsl
jecxz
scas
adc
sbb
jns
in
adc
and
daa
xchg
xchg
pop
adc
mov
cmp
cwtl
mov
jne
daa
int
cmp
nop
paddusw
repnz
or
cmp
mov
movsb
cmp
cmpsl
add
into
scas
fidivl
inc
adc
iret
jl
in
cmp
xchg
xchg
sbb
xchg
rcrl
and
or
shlb
adc
pop
pop
pop
xchg
mov
jl
les
test
rep
or
and
xor
add
insb
mov
aam
add
add
or
push
roll
xor
insl
or
nop
push
xor
jbe
jge
or
stos
mov
add
outsl
mov
rorl
fistpl
mov
movsb
fwait
add
push
push
data16
push
and
inc
nop
sub
or
test
mov
in
push
sbb
add
or
pop
xor
dec
sub
adc
or
add
pusha
imul
lret
fs
popa
adc
push
and
adc
adc
push
xor
inc
jno
push
cmp
inc
inc
js
loop
subb
lods
xchg
mov
jg
push
rol
nop
subl
sbb
scas
xchg
sbb
sbb
mov
dec
test
cwtl
push
adcb
cmpsl
sbb
jne
test
xchg
inc
xchg
adc
inc
fwait
aas
inc
inc
xor
xchg
stc
add
push
lcall
and
push
jo
pop
cmp
push
sarl
adcl
ljmp
mov
lret
out
cmp
adc
pop
sub
sbb
push
stos
sbb
std
cmp
inc
hlt
and
in
xchg
inc
loopne
sub
inc
or
and
loopne
cmp
xor
xchg
adc
mov
dec
cs
adc
outsl
leave
adc
andb
adc
mov
xor
aas
pop
add
insb
enter
add
sub
xchg
adc
lea
out
inc
xchg
sbb
rorl
push
push
sub
inc
cwtl
in
or
lea
pop
and
fs
lret
sub
push
push
push
loope
push
and
loope
adc
jmp
inc
mov
mov
repnz
ret
inc
jo
inc
mov
mov
push
nop
outsl
adc
mov
mov
or
add
inc
dec
add
xchg
sbb
push
cmp
or
add
aaa
inc
icebp
ficoms
inc
xor
xchg
xor
add
xchg
and
pop
xor
push
subb
insb
adc
loop
pop
enter
nop
add
add
sub
cmpsl
in
mov
pop
movsb
fsts
xchg
push
outsl
in
addl
add
push
stos
pop
lods
add
sub
lock
enter
fistl
sbb
pop
or
and
or
cmp
mov
mov
ret
sub
cmp
outsl
fadd
outsb
mov
mov
add
daa
movsb
lret
sbb
dec
dec
sub
rolb
xor
insb
test
or
inc
clc
and
cwtl
outsb
sbb
jbe
and
and
std
mov
fs
aaa
insl
mov
pushf
cmp
adc
stos
imul
test
add
pop
adc
pop
dec
cmpsb
add
sbb
pop
mov
addr16
popa
pop
fcoms
stos
cmp
jne
stc
mov
mov
mov
xchg
mov
pop
mov
cmpsb
sbb
push
add
xlat
hlt
pop
fistl
fildl
adc
loopne
ret
mov
into
icebp
push
shrb
mov
dec
sbb
add
shll
cmp
jne
daa
adc
add
gs
enter
xor
jnp
lods
pop
dec
cmp
inc
jg
adc
lods
and
dec
lods
popa
adcl
jmp
add
rolb
pop
pop
inc
push
add
shrb
or
xchg
jmp
notl
adc
test
adc
xor
xor
xor
pop
or
mov
dec
and
decl
ret
cmp
je
cmp
jle
push
push
jmp
add
jecxz
add
sbb
inc
shlb
jl
push
pop
pushl
mov
adc
cmp
push
xor
inc
pop
popa
jae
dec
sub
inc
inc
push
pop
add
gs
jmp
push
mov
xor
in
orb
or
out
mov
popf
add
push
adc
mov
mov
xor
inc
call
pshufw
les
nopl
sub
pop
lock
push
fldl
push
sbb
inc
jg
mov
pop
and
and
cmc
daa
add
into
fstpl
add
testl
pop
mov
mov
jo
jnp
xchg
add
int3
and
loope
add
jmp
leave
in
out
sub
subl
mov
rol
aaa
dec
inc
push
nop
mov
scas
mov
inc
int3
add
mov
lret
pop
jb
scas
sub
sub
jbe
fimull
shll
roll
jns
stc
jge
sbb
fdivrs
andl
pop
dec
inc
or
pop
xor
push
loop
cmp
stc
ret
sub
jle
inc
mov
dec
cmp
ja
addl
push
mov
fnstcw
sbb
and
inc
call
ret
sub
daa
add
inc
mov
into
insb
loope
jnp
in
add
mov
mov
adc
pushl
clc
sbb
clc
rclb
add
lock
stos
xor
shld
add
ja
jb
repz
ja
lea
push
push
and
and
or
lods
roll
push
mov
push
mov
mov
push
je
int3
pusha
or
or
or
pop
ja
cli
sbb
mov
ret
add
pop
pop
xchg
and
int
leave
outsl
adc
xchg
aam
push
jno
xchg
mov
rcll
push
outsb
or
dec
push
push
cmp
icebp
mov
fsubrs
add
xchg
push
or
ja
popl
ja
push
adc
push
dec
rcr
inc
jl
xor
andb
or
jb
fbstp
cmpw
jne
test
and
adc
cld
cmp
dec
push
push
sbb
jle
test
or
sti
jg
stc
std
mov
or
scas
sbb
cmp
out
data16
push
xchg
jo
push
push
sets
dec
cmp
inc
gs
aad
pushf
ret
mov
push
shlb
aaa
push
cwtl
aas
in
add
es
add
sub
add
sbb
lods
imul
sbb
or
jle
add
or
mov
pop
cmp
mov
gs
rcl
hlt
inc
dec
pusha
xor
push
push
or
pusha
int
movsl
add
inc
pop
jae
cmpsl
push
pop
pop
dec
or
push
cmc
sbbb
shll
test
or
pop
inc
arpl
adc
rol
mov
aam
pushf
ja
push
test
and
jae
movsb
jb
mov
std
mov
add
in
xor
pushw
pop
add
cltd
out
lret
fimuls
dec
adc
push
pop
mov
shll
pop
adc
mov
test
into
gs
daa
inc
adc
lock
or
mov
sub
xchg
lret
push
and
movsb
mov
mov
test
cmp
push
or
add
mov
pushf
in
mov
adc
xor
dec
and
ret
pop
add
bound
xchg
fisttps
add
mov
cli
push
push
pusha
cmp
mov
lods
jmp
popa
jno
xor
sub
cmp
int
or
jbe
test
push
cmp
mov
xchg
mov
push
or
jmp
pop
inc
arpl
inc
adcb
fidivrs
pop
and
pop
or
push
adc
pop
or
add
outsb
test
push
mov
sbb
popa
stos
xchg
sub
jp
fiaddl
movsl
mov
sbb
add
sub
and
lcall
pop
inc
cs
push
or
roll
outsb
push
and
rolb
fdivl
adc
jno
dec
sub
test
dec
cmp
je
adc
xchg
sub
shlb
jno
inc
and
int
add
pop
jne
mov
js
and
push
sub
adc
cmp
faddl
sub
fadds
fnsave
mov
fdivs
inc
aad
scas
jge
add
das
add
icebp
and
xor
fst
adc
fs
imulb
and
mov
dec
je
add
test
push
dec
jne
fdivr
dec
push
jmp
xor
adc
addr16
pop
xchg
jmp
or
pop
mov
push
imul
jmp
notl
sarl
les
dec
jmp
and
mov
jmp
jge
jmp
adc
mov
jmp
lea
mov
dec
mov
jns
and
xlat
cmp
hlt
push
sbb
in
dec
or
push
je
push
cmp
xchg
mov
enter
push
and
fcoml
inc
lcall
cld
cmp
fadds
and
dec
jo
nop
inc
push
pushf
fmul
and
cmp
dec
adc
and
cwtl
sbbl
mov
cmp
nop
sbb
push
jo
in
inc
nop
mov
push
lock
or
ficompl
sbb
rclb
inc
mov
out
sbb
lcall
iret
mov
ljmp
push
or
sbb
sahf
out
inc
push
pop
outsb
out
sahf
out
orb
stos
mov
enter
fwait
out
out
cli
push
add
repz
repz
sub
inc
mov
pop
push
scas
ljmp
and
inc
stos
push
inc
adc
aad
loopne
or
sub
push
sub
les
mov
push
jo
add
push
dec
or
or
adc
mov
sub
jl
and
jo
add
movb
xorl
dec
dec
add
fisttpll
fwait
or
lea
or
inc
sbb
cmpsl
lock
jno
mov
push
cmp
jmp
fs
sti
add
out
fcompl
fdivrl
nop
faddl
pop
lahf
test
ljmp
mov
pop
fsubl
pushf
or
dec
jecxz
pop
push
jae
push
xchg
push
sbb
int3
loope
and
dec
pushl
dec
xor
out
jnp
xchg
mov
sub
test
adc
or
inc
jecxz
in
pop
pop
sbb
sti
cltd
out
xchg
dec
mov
xor
push
cmpb
adc
jg
jge
jge
xor
push
cmp
push
scas
lock
xchg
mov
shlb
and
xchg
test
add
idivl
push
cmpsl
jg
inc
add
ror
xor
or
shlb
push
push
xchg
pushf
mov
fwait
sbb
cs
push
shlb
xchg
pop
enter
xchg
loope
or
mov
test
sub
adc
shrb
cwtl
pop
inc
subl
mov
decl
popa
mov
and
mov
pop
mov
les
add
push
orl
sbb
out
inc
push
and
add
test
pop
pop
fwait
xor
sub
pop
inc
out
sti
push
cmp
cmpb
xor
push
or
daa
add
ret
xchg
inc
add
jae
pop
movsl
xor
insb
jge
pop
addr16
xchg
push
inc
adc
add
enter
rorl
and
les
or
shl
outsb
and
add
push
pop
cmp
cmp
test
test
add
ss
in
inc
jle
mov
int3
sub
pop
lods
movsb
cmp
add
les
adcb
pop
nop
mov
in
icebp
push
jmp
push
mov
imul
xor
push
xor
adc
fs
lret
inc
fwait
shlb
mov
and
out
stc
es
das
mov
xor
in
push
pop
dec
sub
xor
and
rolb
enter
pop
rcll
xor
mov
rcrb
mov
inc
imul
and
mov
lcall
dec
lcall
dec
lcall
dec
lcall
add
push
int3
dec
add
mov
sbb
mov
popf
mov
hlt
push
icebp
jno
int3
jl
mov
push
cmp
xchg
aaa
daa
mov
loopne
mov
push
sbb
xlat
movsb
inc
orl
add
mov
push
xchg
pop
push
inc
in
lea
add
jl
adc
push
nop
push
pop
ljmp
pusha
xor
mov
imul
mov
sbb
imul
gs
inc
add
int3
pop
sbb
orl
xchg
rclb
sub
imul
and
mov
test
imul
ljmp
popf
nop
out
rcrb
mov
mov
shl
adc
or
es
sarb
scas
xchg
cmp
xor
gs
xchg
push
mov
sbb
push
jns
push
ficoms
cmp
into
pushf
xchg
or
pop
cwtl
mov
test
inc
in
mov
adc
rorl
imul
aad
int3
rcrl
outsl
cmp
lret
dec
int3
cmp
test
rcr
sub
dec
cmp
movsb
aas
pop
test
movsb
pop
ret
sbb
inc
in
push
push
aas
jbe
and
ds
pop
adc
aaa
or
or
and
mov
sarb
andl
ret
jecxz
push
inc
push
pop
icebp
push
lcall
and
rcrb
ljmp
scas
enter
xor
js
sub
xchg
jo
in
shr
cmp
sbb
inc
jno
es
push
dec
add
arpl
pop
sbb
and
inc
add
nop
mov
push
loope
sub
sbb
fiadds
aaa
insl
daa
ds
out
stos
mov
cmp
xchg
popf
pop
dec
mov
add
mov
dec
dec
add
mov
and
push
push
xor
sbb
push
adc
fidivrs
jg
pop
push
mov
clc
and
push
push
fldt
test
and
jo
and
mov
sub
mov
jo
xor
or
je
xchg
adc
es
pusha
lods
inc
pushf
subl
fistps
inc
add
cmp
push
ss
or
incl
mov
xchg
fnstenv
jmp
loopne
fcomps
inc
and
cmp
xchg
lods
sbb
fidivl
cmp
out
jns
ret
je
xorb
xchg
js
in
cmp
lods
or
sbb
mov
jbe
sbb
rcrl
or
in
push
cwtl
repnz
pop
int3
paddusb
and
pop
push
adc
adc
sub
inc
lds
lea
mov
scas
mov
inc
es
push
cmp
sarb
es
cmpsb
push
addl
add
movsb
rcrb
pop
xchg
cwtl
mov
fcoms
je
xchg
dec
sti
push
sbb
insl
inc
lcall
or
dec
sbb
jl
xchg
push
lcall
adc
sub
push
pop
pop
mov
sub
js
mov
addb
clc
jno
test
leave
or
nop
out
shl
inc
sbb
push
inc
daa
nop
shlb
testl
pusha
movsb
sbb
nop
lds
jmp
rorb
rclb
pop
adc
xor
enter
sub
cwtl
nop
dec
jno
enter
sbbb
and
or
or
pop
pusha
push
pop
leave
das
add
fdivl
sub
in
in
movsl
adcl
dec
pushl
and
or
push
push
add
sub
xor
test
mov
push
jmp
add
xchg
jno
push
push
inc
leave
cmp
lea
enter
pop
sti
mov
push
movsl
dec
xchg
add
or
jo
popa
mov
push
or
inc
popa
mov
or
mov
mov
jb
mov
mov
push
xchg
call
adc
aaa
push
sbb
outsb
jbe
sbb
out
xchg
push
push
inc
push
test
mov
or
push
jbe
rolb
ficoml
mov
inc
mov
or
and
scas
incb
lea
and
fs
aas
stos
lcall
mov
push
adc
rol
inc
mov
or
xchg
in
popa
popa
pop
fisubrs
adc
jbe
movsl
jge
sbb
insl
sub
cs
pushl
and
mov
cli
inc
pushf
jne
nop
pop
dec
stc
clc
lcall
adc
or
pop
sub
mov
pusha
sbb
scas
sbb
sbb
rolb
add
mov
mov
push
inc
pop
ficoml
push
mov
and
adcl
call
mov
xchg
and
push
and
inc
push
and
adc
xor
pop
xchg
cltd
push
pushf
xor
or
daa
pop
inc
mov
jl
sub
dec
aad
int
aaa
and
rolb
push
mov
je
jo
add
mov
add
insb
pop
arpl
mov
jbe
push
xor
xlat
arpl
cmp
sub
mov
pop
jle
xor
repnz
push
sbb
sub
mov
add
cmp
jbe
mov
adc
roll
jno
rclb
cmp
or
int3
xchg
push
in
push
push
sbb
inc
sbb
jmp
push
in
sbb
and
push
xor
jb
adc
cmp
and
adc
sub
dec
jne
push
popa
nop
mov
loopne,pn
aas
repnz
jne
jmp
fmull
mov
pop
sub
push
push
cmp
aam
add
and
sbb
pop
sbbb
inc
sahf
ss
adc
inc
dec
jae
rolb
add
outsb
jns
add
loope
clc
mov
lock
add
mov
lea
inc
or
sub
dec
paddb
pop
cmp
inc
mov
sahf
cmp
adc
fwait
ret
or
dec
push
push
mov
bound
or
mov
xchg
add
and
mov
out
pop
mov
cmp
jbe
sub
mov
sbb
loopne
push
pop
push
jmp
and
add
mov
aad
push
lods
lea
sub
add
jl
aad
mov
xor
xor
inc
inc
jl
add
sbb
stos
cmp
adcb
sbb
sbb
sti
lods
enter
and
pusha
ljmp
adc
js
lret
push
dec
jb,pt
scas
ss
mov
jg
lock
je
pusha
addr16
push
addl
fwait
push
xchg
pop
cld
xor
ret
adc
aam
dec
mov
jle
ficoml
cmp
jbe
add
icebp
adc
cmp
inc
and
cmp
ret
jl
or
aam
cmc
popa
pop
push
push
hlt
subl
or
iret
jne
adc
aam
pop
fiadds
repz
jnp
cmp
jae
inc
add
nop
cmp
sub
mov
iret
je
mov
dec
sarl
and
jmp
sarl
push
inc
xchg
adc
push
test
pop
mov
mov
xchg
adc
pop
test
fwait
adc
jae
jg
movsl
sbbb
popa
outsl
test
pop
mov
rcrl
aad
inc
adc
lods
dec
or
add
insb
mov
das
push
dec
push
jb
adc
dec
mov
test
addr16
mov
xchg
adc
rorl
divb
ret
sbb
cmp
pushl
sbb
inc
xchg
pop
dec
rorl
sbb
add
pusha
adc
aam
int3
mov
push
movl
pop
or
ljmp
inc
xchg
xchg
sbb
cmp
lcall
or
je
cmp
or
and
mov
xchg
lock
movb
movsbl
shr
mov
add
fcmovnu
mov
nop
inc
mov
leave
jne
pop
and
mov
shlb
jmp
adc
bound
test
mov
add
or
sbb
cmp
dec
sub
mov
out
insb
inc
inc
daa
push
mov
fs
inc
push
push
testl
sub
push
iret
adc
leave
mov
add
test
or
mov
or
sti
jb
cmpsb
mov
out
fldl
xor
mov
rorb
dec
inc
lock
ret
xor
sti
pop
ret
and
je
dec
and
movsb
popa
jg
add
push
push
fisttpl
cltd
mov
sbb
cmc
jmp
imul
or
lea
mov
mov
js
jge
and
add
push
push
test
jne
in
adc
cmp
and
and
dec
mov
loopne
mov
dec
enter
shll
add
pop
fadd
adc
adc
repnz
test
jl
push
test
mov
inc
sub
js
add
movsl
dec
sub
dec
mov
jo
dec
dec
push
popa
sub
push
lea
add
add
push
mov
sbb
fisttpl
sub
push
sbb
leave
mov
push
cmp
jle
es
xchg
cmpsb
rclb
add
add
mov
lret
ja
pop
sub
out
push
movsl
aad
lret
xor
insb
repz
sbb
iret
or
add
lock
mov
jbe
fisttpll
inc
loop
fcomps
cmp
pushf
add
in
jne
or
jb
add
or
cmp
pop
pop
mov
dec
or
movsb
push
aam
loope
and
roll
xchg
movsl
add
sbb
inc
popf
sub
fistps
or
pop
imul
arpl
push
add
orb
fnstcw
rolb
test
call
cltd
imul
inc
and
test
lret
or
push
or
and
popa
push
hlt
push
inc
sbb
shlb
adc
add
dec
push
lcall
jne
out
movsl
jnp
ret
leave
sub
adc
xchg
dec
jecxz
subb
call
aam
lea
or
leave
bndldx
and
or
ret
test
xorl
jns
add
and
xchg
iret
sub
add
sub
add
js
enter
imull
or
xchg
sbb
xor
fdivrl
int3
and
jne
pusha
inc
test
inc
jb
imul
sub
xorl
jp
mov
test
adc
cmpsl
je
stos
mov
test
lock
sub
adc
pop
cmp
lea
push
pop
test
push
sub
inc
sbb
or
jmp
push
test
push
les
push
les
iret
ljmp
call
adc
shl
les
pop
in
mov
jnp
daa
movsb
psubsw
add
add
ss
push
pop
or
xor
lea
lock
ret
sbb
push
or
sbb
jnp
adc
in
lret
popa
test
repz
dec
pop
ret
sti
sub
cmp
jbe
dec
push
xor
jne
je
inc
and
dec
dec
cli
cmp
jl
nopl
out
jp
sarb
cmp
hlt
add
pop
add
xchg
or
xlat
scas
xor
inc
loopne
adc
add
adc
mov
sub
xchg
flds
cmp
sbbl
nop
rolb
dec
int3
push
enter
and
divb
sub
test
add
ds
sbb
push
lea
push
cmp
inc
jne
cmpsb
xor
jmp
add
push
gs
add
add
xor
fiaddl
mov
mov
add
xor
movsb
fisttpll
call
rdtsc
loope
enter
sbb
jo
jge
sbb
mov
dec
mov
and
push
sub
aad
or
stos
pushf
and
inc
das
je
jge
frstor
sbb
mov
pop
imul
dec
enter
outsl
das
mov
push
sahf
fmull
ss
cs
in
lret
movsl
in
jle
cmp
call
jo
and
or
push
movsl
jno
loope
jle
ljmp
xchg
add
inc
pop
imul
mov
xchg
mov
push
sub
pop
sub
xchg
xchg
push
lea
inc
jle
sbb
pop
or
addr16
sbb
cmc
jno
rorb
ss
pop
lret
call
or
mov
clc
imul
nop
cli
mov
mov
ljmp
mov
jnp
mov
ds
shrb
pop
mov
ljmp
sub
add
inc
or
inc
icebp
out
jne
outsb
cmp
push
cmp
insb
pop
dec
jl
pop
add
mov
ficompl
inc
add
mov
les
pop
pop
test
cmp
test
outsb
push
jno
push
lods
cmp
push
loope
sub
loopne
add
pop
scas
push
fldl
hlt
insl
das
or
data16
cmp
popf
fbstp
inc
add
out
jne
daa
bnd
sahf
lahf
out
adc
hlt
jne
or
jne
or
inc
jo
clc
push
mov
sub
int
xchg
cmpsb
pop
js
pop
mov
ret
pop
aad
cmp
push
lea
jle
lock
dec
out
dec
movsb
jb
loop
pop
xor
push
stos
sub
icebp
jl
mov
fcoml
cli
insl
pop
mov
fstpl
lea
sti
lea
or
es
imul
movsb
jg
in
nop
ret
jnp
nop
xchg
repz
lods
and
inc
rolb
add
in
sbb
cmp
jae
dec
mov
or
cmc
int3
sbb
xchg
push
movsl
lea
dec
add
jae
aas
jmp
pusha
movsb
fnstenv
clc
adc
sti
pop
stos
lods
ds
or
jne
fstl
pop
insb
push
dec
sub
fcom
loopne
rolb
pop
lock
lea
jb
or
imul
cmp
loope
mov
aaa
icebp
in
cmp
push
mov
push
faddl
cmp
add
xchg
xor
xchg
fisubrs
nop
sbbl
push
xchg
insl
mov
shrb
or
and
sti
push
and
orl
mov
sets
imul
inc
sbb
int
mov
pop
xor
and
and
xor
fs
sbb
ficoml
xorl
xor
icebp
mov
fimuls
dec
sbb
pop
pop
inc
popa
xorb
jo
or
mov
pop
cwtl
data16
jae
adc
fcmovnb
shlb
or
fmuls
rclb
push
mov
ror
inc
addl
push
and
pop
nop
mov
sub
mov
mov
xchg
imul
mov
mov
add
fldl
pop
push
or
add
and
sub
fldl
push
mov
shlb
xchg
inc
fsub
push
in
icebp
cmp
int
lods
int
fwait
push
pushl
xchg
jge
mov
xchg
xor
sbb
mov
add
insb
or
cmpl
fcomip
imul
add
sbb
or
inc
fidivs
pop
adc
je
inc
adc
push
lret
popf
sbb
lcall
loop
sbb
pusha
xchg
icebp
jae
sbb
sbb
hlt
ret
repnz
mov
dec
xorl
out
cs
test
lock
dec
push
xchg
sbb
xor
xchg
js
repnz
nop
mov
or
cld
pop
adc
in
in
sbb
and
cltd
nop
adc
jbe
and
cmp
enter
lds
sub
es
fcoml
sub
pop
inc
pop
daa
xor
push
sbb
xor
outsl
push
inc
cs
es
cmp
push
inc
sub
jne
rorb
and
inc
and
xor
daa
shll
or
xlat
and
xor
sbb
call
dec
xlat
shlb
cmpsb
aaa
lret
push
cmp
sbbb
mov
movsb
push
lea
mov
dec
dec
mov
lret
and
push
inc
lcall
arpl
push
arpl
adc
push
je
adc
mov
push
orl
pop
rcrb
out
adc
pusha
ret
mov
mov
inc
sti
xor
xchg
xchg
adc
add
nop
orb
lcall
mov
or
xchg
mov
js
dec
clc
hlt
jg
je
push
inc
sub
add
inc
push
xchg
inc
sbb
fdivr
cmpsb
add
loopne
sbb
stos
jne
xor
movsl
addb
leave
mov
jne
movsb
jbe
lcall
leave
jmp
jo
mov
lret
sub
inc
jbe
sub
xor
cli
daa
loopne
mov
push
jbe
call
jae
push
mov
fsubrl
xor
add
and
call
je
xchg
scas
mov
imul
in
inc
dec
sub
add
nop
sbb
pop
fcompl
rorb
in
or
adcb
loopne
out
push
xor
call
push
fcompl
or
dec
or
std
xor
jbe
push
sub
and
mov
je
or
sbb
cmpsb
add
or
jo
adc
ficoml
adc
adc
jnp
mov
insl
push
jbe
or
dec
pusha
xor
clts
insl
sub
repnz
sbbl
imul
add
fadd
movsl
sub
push
ret
or
flds
mov
inc
rclb
loopne
adc
sub
push
into
dec
rclb
xchg
shll
stos
mov
adcl
jne
sub
aam
push
ljmp
cs
push
add
cld
sbb
or
push
in
adc
je
mov
iret
data16
bound
xor
jmp
adc
sbb
push
lret
add
ret
daa
fcompl
and
fisttpl
pop
xchg
test
add
loopne
pop
dec
sarb
and
clc
add
add
js
cld
pop
jge
sbb
je
adc
clc
rorb
stos
stos
cmp
mov
rcrb
js
push
sarb
dec
shrb
rolb
mov
sub
or
popa
adc
and
push
inc
jecxz
mov
insb
into
in
loope
movsl
lret
sbb
adc
lds
push
mov
sbb
cli
loop
call
jmp
out
push
push
add
je
mov
jmp
ficompl
xor
push
les
fdivrl
or
xchg
adcl
mov
add
aad
lods
subl
lods
lahf
repz
and
mov
and
adc
pusha
or
pop
jg
or
fistl
cmc
and
stc
lret
cmpsb
lcall
dec
sub
push
or
jmp
pop
inc
scas
icebp
inc
or
or
pusha
loopne
mov
add
lret
sbb
addr16
shrl
insb
cmp
sub
imul
mov
add
in
in
add
push
mov
sbb
add
and
dec
or
xchg
sub
add
pop
push
xchg
call
movsb
mov
or
aas
mul
pop
add
test
mov
lea
mov
clc
mov
pop
aaa
sbb
jb
jno
xchg
push
fsubrs
ret
or
outsl
push
je
movsl
ja
scas
adc
mov
icebp
je
or
inc
dec
mulb
xor
add
sbb
sub
ljmp
clc
out
mov
cmpb
ret
mov
jne
jae
movsbl
mov
add
sbb
mov
add
sbb
ja
jbe
pop
jmp
enter
call
sarb
lea
and
dec
inc
dec
add
or
jecxz
cmc
scas
incl
or
add
inc
cmp
mov
jg
jno
cli
cltd
and
add
sar
add
xor
mov
or
fistpl
pop
xor
ss
cmp
fldcw
loopne
jecxz
sbb
inc
jne
lock
lahf
enter
adc
or
jne
pusha
shll
fs
xor
ret
sbb
popf
ss
sbb
inc
push
jnp
sub
fimull
stc
add
test
jp
jbe
loopne
adc
jo
shld
or
pop
sbb
inc
adc
roll
pop
xchg
mov
arpl
insl
mov
cmp
jl
xchg
jle
insb
dec
popa
mov
ss
test
pop
inc
cli
js
inc
mov
add
dec
jne
mov
jb
and
arpl
scas
mov
xchg
rolb
repz
aam
repnz
add
aaa
lahf
push
ret
or
scas
add
cmp
mov
mov
sub
mov
sbb
and
rclb
adc
sub
insl
scas
adc
pop
insb
push
addr16
cmpsl
loopne
add
frstor
sub
stos
pop
add
jp
sub
in
mov
adc
or
int3
mov
sbb
add
sub
xchg
fsubl
and
out
adc
or
stos
sub
and
add
mov
sbb
inc
inc
push
loopne
loop
inc
dec
or
dec
pop
pop
push
jmp
mov
nop
lock
cld
pop
push
push
fsubl
xchg
out
fcomps
mov
int3
outsb
pop
pop
aas
pop
add
jmp
push
and
sbb
push
bound
repz
cmp
add
pop
das
pop
add
add
and
in
sub
pusha
arpl
xor
call
jle
js
addl
cmp
pop
les
cs
jns
push
push
xchg
test
in
xor
xor
or
stc
imul
enter
xchg
pop
mov
xchg
lea
mov
in
dec
or
lret
xor
push
and
shrl
hlt
in
notl
push
pushl
mov
pop
pop
push
cmp
xchg
mov
cmp
cmp
mov
jmp
rolb
fstpt
in
sbb
mov
cmp
test
lcall
jp
push
cltd
insl
aad
popf
cmp
je
aas
loope
call
push
test
shl
sahf
and
add
lods
mov
shl
dec
pop
dec
ja
pushf
add
push
scas
add
int3
add
mov
notl
rclb
dec
add
mov
xchg
mov
fiaddl
ficoml
push
test
shll
adc
aam
mov
sbb
nop
sbb
jl
mov
push
push
int
or
pop
aam
inc
mov
mov
xorb
push
cmpsb
in
lahf
aaa
jne
or
jmp
mov
pop
inc
sti
adc
push
pop
dec
mov
inc
pop
imul
aad
dec
cmp
int3
int3
sub
inc
xor
mov
sbb
inc
add
sti
lcall
adc
mov
loopne,pn
and
test
cmpsb
je
dec
or
aaa
lods
fsubrs
lods
les
inc
das
cmpsl
call
out
das
mov
movsl
aad
rcrl
fsubrs
cmp
sub
insb
push
rcll
sbb
and
jns
andb
mov
aam
leave
xchg
or
xchg
dec
popa
daa
lods
jle
rclb
pop
or
and
push
xor
mov
sbb
cmp
pop
sub
cwtl
loopne
shl
add
add
adc
xchg
cs
push
sbb
pop
lock
cmp
daa
movsbl
shl
call
push
xor
dec
test
push
mov
add
mov
test
xchg
mov
dec
out
test
in
orb
add
mov
inc
in
or
leave
test
pop
add
and
mov
aam
jno
leave
cmp
or
mov
add
xor
mov
add
leave
dec
push
xchg
rol
add
pop
dec
inc
repnz
addb
sarl
int3
dec
ljmp
sub
lea
les
adc
ds
addr16
xor
cmpxchg
lock
sbbl
jge
mov
es
sbb
cltd
pusha
add
xchg
or
pushf
daa
or
adc
loopne
in
adc
popa
pop
xchg
subl
or
rorb
cli
xor
mov
cmp
imull
cmpsb
mov
jae
test
in
ret
xchg
mov
cmpb
clc
pop
mov
add
add
mov
mov
ja
pop
stos
mov
std
pop
pop
les
inc
cmp
jo
cmc
hlt
mov
mov
dec
mov
mov
jg
push
mov
add
mov
add
movzbl
mov
roll
sbb
js
jl
dec
sbb
addl
dec
ljmp
iret
push
std
scas
mov
incb
mov
add
out
pop
or
mov
nop
bound
nop
add
or
jmp
pushl
xor
mov
inc
call
jne
pop
mov
jno
adc
rclb
jb
lea
mov
dec
xchg
rol
pop
adc
mov
shlb
pop
add
cwtl
fimull
xor
push
mov
add
add
fs
and
movsb
bnd
or
in
fs
and
or
nop
pop
les
ds
fucom
nop
pop
or
testb
fsubl
sahf
mov
cmp
push
enter
das
and
fbstp
pushf
iretw
test
sub
jnp
or
sahf
xlat
mov
les
icebp
popa
imul
push
mov
jo
movd
test
xor
into
cli
ret
xor
movsb
call
adc
add
pop
sub
rorl
push
and
xchg
push
clc
sbb
push
or
addr16
in
clc
mov
pop
clc
jmp
mov
sbb
push
adcb
iret
adc
add
or
jp
test
es
and
jb
cwtl
mov
cld
decl
in
stc
sub
ss
lea
cmp
jbe
cmp
jbe
mov
aad
lret
adc
enter
push
mov
add
repz
mov
sahf
xchg
cmc
xor
jbe
dec
add
jb
fcmovnb
lds
mov
mov
add
xor
and
das
and
mov
inc
icebp
cmp
xchg
movsl
inc
iret
push
aad
daa
push
adc
insl
jecxz
call
fwait
aam
mov
push
push
cmp
sbb
jmp
push
and
scas
or
dec
pop
movsb
test
pop
ret
and
and
jmp
sub
and
fstpl
cwtl
test
push
test
cmp
jae
push
sarb
call
call
and
sti
lea
mov
lcall
or
sub
pushf
and
mov
cmpsl
mov
mov
gs
cmpsb
mov
or
add
loopne
popf
sbb
xor
jnp
sub
mov
loope
dec
aad
lds
sbb
sbb
sahf
lock
iret
add
popf
aas
jb
movsl
xor
add
stc
xor
pop
add
arpl
dec
ds
add
rclb
aad
shlb
loope
pop
lods
add
inc
jp
and
roll
and
lcall
mov
pop
pop
and
mov
cmp
out
test
scas
jb
jmp
push
leave
or
push
push
inc
enter
ret
cld
pop
add
scas
and
loope
and
xor
xlat
or
adc
cs
inc
fs
push
mov
mov
adcl
mov
add
enter
lret
adc
loopne
mov
outsw
dec
sti
dec
test
mov
cmpl
inc
push
test
sbb
adc
inc
mov
pop
inc
sbb
scas
add
push
popa
aas
push
aam
pop
and
push
add
stc
xchg
or
pop
inc
dec
int3
test
adc
loope
mov
push
lea
mov
je
or
pop
call
fcmovnbe
cltd
mov
cmp
cmpsb
addr16
lar
popa
cld
pop
test
cmc
push
sub
decl
testl
cld
adc
mov
fwait
movl
aas
push
pop
adc
xchg
push
jbe
sarb
cmp
ss
inc
sbb
add
in
lock
jne
adc
inc
add
xchg
add
in
aaa
push
push
insb
or
sub
add
mov
testb
mov
adc
fiaddl
cs
in
and
xchg
in
pop
adc
adc
rcl
popf
jp
loope
ja
or
pop
orb
xor
and
test
adc
jae
lcall
rclb
aam
divb
or
jl
lock
fists
add
add
push
sbb
sti
push
movsb
je
mov
ss
mov
or
aad
pop
jmp
ret
shl
push
mov
jmp
push
stos
int3
pop
loopne
test
adc
iret
xor
subl
add
je
mov
mov
fimull
in
xorl
dec
ret
ret
mov
lahf
imul
adc
into
test
jp
loopne
push
mov
adc
pop
cmp
jbe
out
dec
cmp
cmp
pop
push
sbb
lahf
mov
add
mov
movsb
lret
mov
nop
cmpsl
or
cmp
pop
jmp
clc
bound
xor
repnz
jg
test
sbb
pop
clc
jne
mov
add
fs
add
fdivrs
iret
loopne
pop
mov
leave
mov
jl
out
fldenv
jne
or
imul
cmp
rcll
cmp
sbb
scas
dec
ss
adc
jne
pop
mov
jge
mov
pusha
or
in
add
mov
jmp
jg
repnz
xor
test
scas
es
dec
ret
cmp
sbb
out
sarl
jae
inc
jmp
add
dec
shl
mov
mov
jbe
testl
popa
and
decl
dec
pop
mov
decl
loopne
add
into
nop
repz
in
jmp
dec
sbb
and
in
pop
or
sbb
cmp
mov
xor
and
add
xchg
mov
push
mov
sub
movb
popa
dec
sub
sbb
xchg
dec
pop
add
mov
mov
lahf
xchg
adc
xchg
and
sub
jae
jns
pop
inc
shlb
das
mov
push
mov
icebp
sub
adc
mov
enter
and
mov
push
fmuls
insb
mov
ret
fcoms
sahf
test
mov
mov
out
pop
les
xchg
push
or
xor
mov
loope
movl
push
or
cmp
add
pop
adc
inc
xor
xchg
mov
dec
subl
andb
cmpsb
dec
xor
sbb
push
movsl
pop
adc
enter
add
add
pusha
dec
ss
test
jle
inc
pusha
push
ret
lods
xor
ret
ret
or
mov
sub
arpl
mov
mov
cmp
daa
add
or
rolb
mov
xchg
push
sub
test
shlb
adc
in
lods
jne
jg
xchg
pop
fucomi
bound
aad
mov
testl
imul
ret
mov
inc
sub
arpl
and
adc
or
inc
jo
add
xchg
xchg
nop
dec
pop
adc
inc
mov
sub
inc
dec
pusha
pop
mov
jne
mov
mov
add
cmp
or
mov
push
dec
rcr
inc
aas
sbb
pop
or
cmp
sbb
cwtl
lds
jb
mov
mov
mov
dec
mov
push
jnp
call
pop
adc
pop
and
push
or
dec
sti
lock
mov
in
ret
xor
fsubs
inc
add
pop
sbb
das
jp
mov
ja
gs
mov
cwtl
sub
cmc
inc
sub
jge
mov
mov
pop
xchg
enter
lahf
sub
adc
jo
inc
dec
pop
or
inc
xor
aaa
add
ret
push
ret
add
int3
add
mov
ja
loopne
mov
ja
push
loope
ret
push
fisttpl
stos
lods
arpl
cli
popa
insl
data16
sub
jbe
fcompl
adc
lods
loopne
mov
jmp
test
lahf
stos
mov
push
jo
jmp
pushf
in
add
leave
cmp
cmpsb
int3
repnz
mov
cwtl
mov
dec
dec
faddl
xchg
inc
ja
gs
iret
xchg
dec
nop
lock
pop
push
xor
scas
dec
mov
push
stos
or
adc
and
lods
inc
dec
or
push
xor
push
test
inc
push
fld
mov
lock
push
push
cmp
jb
popf
push
loope
cmp
inc
mov
inc
cmp
lcall
ret
jnp
dec
fs
mov
add
inc
insl
dec
pop
push
sbb
je
or
or
add
mov
push
inc
adc
jo
stc
hlt
pop
xor
fnstcw
dec
dec
je
jnp
push
gs
in
in
push
cmp
xor
cmp
je
or
jg
jne
mov
cmp
addr16
je
cmp
jne
mov
sbb
add
adc
lea
idivb
jmp
dec
mov
dec
xor
push
cmpsb
mov
sub
inc
and
xorb
lods
mov
sbb
cld
cmp
jbe
push
lea
insb
lcall
fidivl
out
add
or
les
xor
test
ficomps
mov
pop
adc
adc
out
clc
mov
jns
cmpsb
repnz
je
aam
mov
add
adc
into
ret
addb
push
xor
add
cmp
in
test
inc
pop
xchg
sub
cld
inc
xchg
cmp
jne
mov
insb
outsb
hlt
xor
fs
cmp
bound
pop
cli
mov
push
pop
xchg
adc
sub
jb
fdivs
das
push
mov
js
sub
jle
dec
sub
nop
lds
jge
in
adc
daa
cmp
mov
dec
or
notb
cmp
sahf
push
pushf
fisttpl
jmp
loopne
jne
mov
mov
mov
aam
stos
mov
movzwl
data16
je
mov
add
jae
movl
pop
inc
shrb
shl
add
hlt
or
adc
aas
insb
sti
and
cmpsb
and
or
adc
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
mov
fsubrl
pop
andb
push
sbb
ret
mov
push
add
or
int3
push
pop
aad
add
and
cmp
add
and
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
cwtl
inc
test
push
jbe
lea
cmp
jbe
push
hlt
popf
loopne
pop
pop
arpl
pop
add
fiaddl
test
jne
pop
mov
pop
roll
std
sub
jb
clc
add
push
xor
xor
fisubs
adc
movb
inc
call
and
dec
addl
rorb
xchg
data16
mov
inc
and
push
push
add
push
mov
add
mov
add
adc
cmp
xor
and
inc
push
lcall
jbe
clc
push
fs
xchg
lea
adc
push
in
jae
js
jo
hlt
dec
out
push
scas
aaa
mov
mov
shrl
or
push
rcll
leave
xchg
dec
inc
add
ror
les
ret
add
sti
inc
rclb
mov
aas
js
jecxz
or
add
movsb
lock
mov
pop
aam
pushf
cmp
test
xchg
mov
jg,pn
mov
push
fistpll
mov
addl
push
mov
sub
popa
inc
int
xor
loopne,pn
cwtl
or
add
jp
push
adc
push
mov
test
cmp
xor
inc
repz
ret
xor
push
mov
inc
and
mov
lock
pop
lea
add
sbb
roll
sbb
cmp
and
std
jmp
andl
orb
mov
cltd
or
jp
inc
jmp
mov
sbb
sbbb
sbb
je
ret
dec
shll
cli
push
pop
push
push
pop
push
movl
push
adc
dec
or
xor
jb
push
push
lahf
jbe
and
pop
iret
push
test
sub
insb
cli
bound
xchg
push
mov
mov
nop
mov
jne
test
mov
mov
xchg
adc
rol
enter
adc
int
shl
outsb
cmpl
xchg
sbb
je
pushl
add
push
mov
ja
and
call
fwait
cmp
push
pop
push
cmpl
push
dec
inc
add
shrl
psubd
cmp
xchg
cmp
dec
shlb
dec
movsb
push
mov
shlb
xor
and
jbe
out
in
lea
jge
push
gs
popa
iret
icebp
add
inc
inc
fwait
cmp
insl
dec
cmp
pop
pop
jo
dec
mov
cmp
mov
std
xorl
push
cmc
or
mov
push
movsl
xchg
loop
lock
add
xchg
sbb
mov
clc
pop
je
test
dec
xlat
loopne
rcll
jmp
xor
dec
inc
xor
rorl
xchg
insl
bound
sub
lods
and
xor
push
dec
mov
and
cld
pop
shll
ret
or
insb
inc
push
popa
icebp
in
clc
mov
jl
mov
lea
xchg
addl
cmp
sbb
inc
push
in
mov
adc
push
or
add
sahf
sbb
mov
push
aaa
ucomiss
les
add
leave
add
pop
add
mov
sub
push
add
sub
addr16
or
sti
pusha
jb
push
out
jno
mov
adc
int
push
cltd
roll
jbe
call
push
adcl
pop
test
mov
cmp
xchg
xchg
jno
fwait
das
dec
push
divl
and
gs
mov
or
push
xchg
ljmp
or
repnz
daa
adc
cmp
lds
add
jbe
push
push
popf
test
cmp
scas
xchg
addl
add
je
rcll
aam
movsl
es
jle
inc
lea
or
pop
sub
push
fisttpll
frstor
inc
bound
or
xchg
pop
pop
test
xchg
fs
xchg
add
xchg
push
jp
jae
sub
cmc
call
leave
jae
cmp
movb
in
outsb
and
int3
call
jecxz
push
jno
or
xchg
push
add
add
dec
push
addl
xchg
in
push
fcomps
ret
scas
jmp
sets
loop
push
es
xchg
xor
mov
add
lret
dec
mov
mov
imul
insl
jnp
das
divb
inc
lret
sbb
sbbl
cmpl
movsb
fcmovb
int
faddl
in
andl
aas
sub
sub
sub
movsl
rolb
test
xchg
push
jmp
sbb
sbbl
inc
je
fstps
cmp
ja
lea
inc
sbb
add
or
jne
daa
rcrb
inc
push
push
addl
sbb
scas
popa
pop
inc
jp
xchg
push
jge
pop
mov
push
xorl
dec
roll
out
push
cmp
adc
push
adc
insl
leave
lret
jbe
add
ret
add
ficomps
jnp
ffree
inc
xchg
mov
xchg
jne
fcmovnb
mov
mov
icebp
cmpsl
incb
inc
lods
fwait
shl
xchg
sub
in
cmpsl
mov
jnp
gs
xlat
push
aas
je
cmp
cmpsb
shlb
push
pop
jne
aam
sbb
flds
cmpsl
jne
push
imul
jbe
inc
pop
jne
pop
call
pmulhw
test
xorb
insl
in
xor
mov
or
push
jne
jmp
popf
andl
test
jbe
mov
inc
popa
sbb
push
sub
add
addr16
aaa
adc
pop
lea
mov
add
je
pop
in
push
cmp
subl
mov
andb
push
sti
mov
fdecstp
repz
jmp
pusha
mov
outsb
cmp
jae
scas
jg
add
cs
leave
pop
test
xchg
daa
mov
jg
dec
push
xlat
xchg
mov
sub
cmp
mov
decb
adc
cmpl
das
and
pop
loopne
rolb
movsl
mov
mov
push
pop
cs
lret
pop
pop
fs
push
scas
or
inc
faddl
ja
or
or
or
pop
popa
add
push
sub
and
ret
lahf
les
in
add
cmp
addl
adc
inc
push
dec
adc
ret
loopne
movsl
aas
add
inc
or
and
inc
mov
pop
xchg
add
push
sub
scas
loopne
push
jno
xchg
mov
push
push
push
pop
pop
cs
lret
pop
pop
pop
pusha
pusha
mov
or
push
cmp
pop
popa
cmp
or
sub
js
push
imul
dec
shll
sbb
clc
push
sbb
cmp
pusha
imul
mov
cs
mov
and
cld
aaa
mov
push
aas
jmp
push
cs
les
lcall
dec
inc
add
fstps
push
add
push
sbb
push
or
inc
adc
cwtl
push
sahf
xchg
ror
adc
inc
mov
mov
sbb
or
fdivrs
les
stos
stos
shlb
jbe
or
dec
jne
clc
jne
mov
push
xor
xchg
popa
jp
es
loopne
pop
xor
scas
sbb
ljmp
insl
sbb
incb
dec
cli
jp
push
pop
jmp
je
cs
shr
mov
je
jg
sbb
or
sti
and
add
xorb
xchg
mov
adc
or
cmp
es
fwait
sbb
mov
fnclex
je
lock
lods
xor
mov
mov
xor
insb
lret
es
sti
fiaddl
not
bound
pop
push
mov
movsl
push
jae
sub
dec
lock
mov
mov
xor
inc
dec
mov
mov
adc
cmp
cmp
mov
data16
je
shlb
lret
cmp
loopne
jmp
mov
je
mov
cmp
jne
ss
loope
adc
in
sbb
ljmp
fisttpll
adc
adc
or
xorb
ja
sbb
sbb
inc
mov
and
pop
sbb
pop
mov
nop
dec
mov
add
pop
push
imul
pop
add
icebp
jno
push
sub
jo
fs
adc
outsb
or
call
push
adc
ds
push
cmp
jne
mov
mov
pushf
adc
call
fcmovnu
add
shlb
xor
lock
jne
adc
outsb
sbb
pop
jbe
jo
sahf
add
cld
adc
pop
lcall
mov
sbb
ret
add
es
xor
xchg
jo
add
cmp
sub
sbb
xchg
bound
addl
jne
adc
add
incl
cmp
andl
rcrb
adc
hlt
xchg
dec
pop
pop
sub
mov
push
jo
mov
test
in
sub
es
lahf
mov
cmp
cmp
scas
hlt
cmpsl
inc
cltd
mov
cmp
in
je
divb
lret
fucomp
arpl
mov
repnz
arpl
jle
or
and
xor
ljmpw
adc
push
pop
push
add
cmp
mov
push
xchg
rorl
jmp
jo
inc
hlt
mov
lock
hlt
xor
lods
add
je
mov
mov
sbb
add
in
lahf
ret
mov
cmp
ljmp
aam
pop
enter
push
jae
pop
jb
les
lds
dec
mov
cmp
push
jecxz
mov
add
ret
lock
push
jecxz
outsb
outsl
mov
and
add
jl
inc
adcb
insl
inc
push
push
popa
lea
test
mov
orl
int
rcrl
push
pop
mov
cmc
cmpl
adc
shrl
push
rclb
hlt
test
push
add
leave
das
je
add
sbb
call
mov
out
adc
fisubl
fmuls
scas
pop
lods
xor
xchg
push
cmpb
jns
add
aad
cmpb
pop
mov
fsubl
or
lret
xchg
and
subl
or
adcb
mov
mov
leave
mov
cmp
fsub
push
adc
aad
imul
mov
pop
push
test
pusha
es
clc
mov
jb
jae
xor
add
and
mov
and
mov
add
clc
jmp
sub
stos
test
or
mov
test
or
mov
jo
push
mov
sub
add
fsubp
xor
jbe
adc
jbe
arpl
and
add
jo
mov
add
jbe
pop
sahf
clc
and
sbb
inc
pop
fldenv
dec
lods
dec
mov
cmpb
sbb
dec
dec
dec
jne
jns
push
cmp
sbb
xor
dec
sbb
sbb
push
push
adc
lds
in
shr
ja
jmp
mov
add
add
lock
jmp
dec
sbb
rcrb
lret
rorb
imul
fcoms
sbb
push
and
int3
pop
ss
loopne
sbb
mov
sub
or
aam
ds
pop
mov
inc
and
add
xor
sub
rcrl
dec
add
movsb
dec
fidivl
jp
pushf
fsubrp
push
mov
cmp
xchg
push
mov
daa
xchg
test
aaa
inc
mov
test
add
pop
pop
mov
sbb
mov
add
jl
movl
mov
lods
mov
lret
divb
je
push
cmp
cmp
out
and
xor
adc
jne
lret
pop
push
shlb
push
bnd
mov
jb
xor
lea
mov
sbb
dec
inc
mov
jge
test
daa
icebp
and
ds
rep
clc
int3
imul
test
aam
adc
add
and
pusha
lock
jmp
add
loop
pop
or
inc
push
xor
add
sarb
ds
ds
lret
mov
push
xor
ret
dec
shl
push
stos
mov
jmp
push
inc
leave
pop
loop
add
imul
subl
add
lret
pop
int3
or
aas
ret
add
adc
aas
sbb
pop
movsb
lock
or
hlt
push
in
jae
faddp
push
out
mov
jno
daa
sbb
aas
in
xorb
sbb
add
xor
mov
lea
push
fadds
or
shrl
inc
push
faddl
add
xchg
pusha
es
inc
clc
and
out
mov
mov
mov
sbb
sbb
nop
sub
sub
clc
pop
rcrb
mov
cmp
fstps
or
dec
add
fs
add
shll
loopne
repz
mov
or
or
mov
mov
dec
cmp
fidivrs
add
xchg
mov
xor
inc
pop
adc
jo
sub
jge
jle
jne
pop
and
test
dec
xorb
push
push
loopne
add
fnsave
pop
xchg
sarl
test
test
ja
push
iret
in
ja
cmovae
lods
cmpsl
jo
movb
cltd
add
push
je
or
jo
call
in
inc
cmp
popl
incl
xchg
clc
shlb
sub
push
fiaddl
add
mov
mov
rcrb
mov
mov
mov
sub
xor
scas
jge
frstor
dec
loopne
in
or
dec
bound
jnp
mov
add
inc
sub
addb
test
or
push
xchg
mov
cmp
outsb
jns
sbb
or
jecxz
rorb
scas
sub
ja
lret
jecxz
and
sahf
test
or
cltd
inc
out
mov
or
adc
and
push
cmpsl
mov
cmpsl
inc
jno
stos
shll
cmpsb
add
dec
adcl
js
push
pop
jo
add
lods
pop
push
pop
loopne
iret
adc
lret
adc
add
cmpsb
rol
xchg
xlat
data16
or
or
jl
push
leave
fsubrl
pop
lret
dec
xor
and
adcb
add
and
or
adc
insl
rorb
pop
stos
push
mov
sbb
test
add
popa
adc
mov
test
bswap
shl
push
incl
adc
ja
push
fcomp
ljmp
push
pop
sbb
adc
or
sbb
rcrb
add
mov
lahf
add
sub
push
movl
add
xor
inc
outsb
pop
mov
add
push
adc
cmpsb
push
ret
dec
sbb
xor
cmp
and
xor
mov
pop
loope
scas
push
sub
aam
jecxz
js
jae
sbb
inc
add
fildll
xor
cmp
inc
xor
pop
js
and
jo
js
rcrb
sbb
mov
pushf
pop
lds
pop
push
pop
sahf
add
or
mov
pop
leave
or
jns
sub
mov
stos
subb
jmp
xchg
stos
rorl
xor
pop
lret
or
or
mov
enter
or
sbb
mov
or
dec
loop
stc
dec
dec
scas
nop
xlat
aam
outsl
ss
mov
pop
mov
xchg
data16
or
fdivrl
mov
and
or
add
sub
sub
shrl
jge
addb
roll
mov
gs
pop
leave
jne
sbb
imul
jmp
and
adc
adc
pop
movl
and
adc
dec
push
sub
gs
movsb
inc
aam
inc
cmp
ljmp
sbb
mov
lock
call
pop
inc
dec
mov
or
sbb
cs
and
fwait
add
jae
inc
mov
mov
clc
and
xchg
dec
scas
sbb
adc
push
push
add
dec
and
sub
adc
dec
adc
dec
mov
mull
cli
xchg
or
xlat
mov
es
cmp
sbb
pop
into
sub
ret
mov
lret
inc
call
dec
popa
push
cld
pop
adc
lods
cmpsb
xor
dec
cmp
xchg
push
sbb
and
imul
and
addr16
jle
and
push
pop
push
sbb
leave
adc
sbbb
jae
in
jle
sahf
push
push
adc
subl
sbb
mov
je
add
dec
fsubr
insb
pushf
rcrb
mov
ja
sbb
mov
or
adc
inc
push
mov
nop
jmp
jge
adc
arpl
ret
aaa
addl
inc
bound
test
repz
lds
inc
jns
icebp
shlb
loopne
mov
popf
xor
and
repz
push
mov
and
shll
faddp
cmpl
add
adc
and
add
in
push
dec
adc
sub
lcall
jne
adc
orb
ljmp
dec
test
movsb
cmp
pop
ss
or
imul
dec
jge
ljmp
dec
lods
or
std
arpl
inc
mov
xor
dec
inc
loope
push
xor
xor
xor
push
roll
pop
jge
jmp
inc
jbe
push
sbb
fs
mov
ret
test
push
sub
push
loope
inc
inc
mov
nop
sub
popf
mov
xor
pop
or
cld
jmp
adc
push
xchg
and
lret
xor
outsl
push
negl
jge
bound
movsb
cmpsb
cmp
jo
cld
inc
fcompl
cmp
xchg
adc
inc
xor
add
mov
push
inc
jbe
cltd
dec
cli
cmp
fstpl
push
divl
sbbl
clc
jbe
cmp
inc
loopne
in
xchg
sbb
popf
filds
push
sub
sti
push
ljmp
pop
jbe,pn
fsubrl
in
jne
ret
mov
test
mov
sub
xor
xchg
mov
shll
inc
mov
mov
stos
adc
dec
dec
loopne
aad
mov
enter
cld
mov
enter
mov
jne
cmp
push
pop
enter
jmp
std
cwtl
xchg
mov
adc
and
xchg
fs
jp
int
test
test
mov
cs
inc
shrb
or
mov
sbbb
popa
fnstsw
sbb
incl
andb
sarl
push
and
inc
cmpl
std
jbe
cmp
jmp
mov
mov
push
mov
nop
lds
addl
push
imul
push
push
push
sub
test
mov
sub
daa
dec
movsb
cltd
sbb
xchg
cltd
push
or
push
mov
fwait
arpl
xchg
push
mov
adcl
pusha
fmull
xchg
subl
mov
ret
push
push
mov
bound
js
mov
push
add
sbb
pop
sbb
sbb
lods
add
mov
and
xor
sub
xchg
jne
stos
sub
popf
cmp
xchg
push
add
and
mov
dec
or
sbb
mov
lods
cmc
mov
or
push
mov
hlt
in
or
or
mov
sub
cmp
add
rcrb
jbe
sub
add
rcrb
mov
push
pop
mov
add
or
dec
stc
push
inc
pop
std
cmpl
sarb
outsl
cmp
jb
jnp
inc
popf
dec
ret
or
fwait
imul
add
push
xchg
cwtl
mov
dec
mov
or
dec
inc
jp
cmp
test
push
jb
pop
addr16
gs
mov
push
mov
jmp
cmp
jne
cmpsb
sub
je
hlt
sub
add
out
xor
addr16
inc
mov
ja
shlb
adc
adc
cltd
sub
push
ss
loopne
or
or
sub
and
cmc
fildl
subb
jne
ret
scas
cmp
add
or
sub
or
in
mov
or
adc
and
xchg
inc
mov
arpl
dec
mov
and
xor
ficoms
inc
mov
movsb
fisttpl
popf
lret
mov
xchg
push
ret
stc
enter
jge
lock
out
test
pop
add
je
gs
mov
lods
les
sar
push
pushl
push
imul
dec
test
negb
dec
addb
jp
cmp
cmpsb
sbb
cld
mov
cmp
clc
mov
mov
ret
add
xor
mov
add
in
rorl
adc
xchg
rorl
jge,pt
popf
loopne
adc
bound
xor
xlat
mov
push
inc
add
test
pop
mov
popf
add
push
lds
loope
push
pop
adc
cmpl
loope
adc
lret
and
adc
cltd
in
adc
adc
leave
and
jle
or
adc
idivb
and
stos
clc
push
push
add
popa
xchg
movsb
je
cmp
add
mov
inc
mov
lods
out
cltd
sbb
aas
inc
add
mov
or
inc
movaps
bound
aam
add
out
movsb
aaa
sbb
and
mov
mov
nop
dec
jo
pop
sub
push
mov
or
mov
sbb
addr16
in
cmp
jl
inc
and
das
jmp
cmp
pop
cmpb
mov
jecxz
loopne
cmp
bound
rcll
lahf
or
in
stc
cmp
pusha
es
add
lea
in
mov
pusha
stos
fdivrs
push
dec
pop
xor
addl
jmp
in
pop
sbb
out
daa
lret
xchg
insl
es
subb
add
xor
sbb
in
lods
inc
imul
jne
popf
notl
jle
movb
push
mov
addl
lret
fs
and
aam
inc
aad
dec
pushf
jecxz
pop
add
adc
and
add
mov
add
shlb
psllw
stc
push
mov
ret
mov
in
jb
iret
add
lds
mov
or
xor
and
mov
incb
inc
or
push
pushf
test
out
outsb
ret
fnsave
testb
mov
pop
dec
or
dec
test
mov
xchg
cmpb
xchg
mov
mov
ret
mov
push
cltd
pop
inc
jne
insb
jne
in
xor
jbe
lock
sub
mov
sub
stos
xchg
add
sbb
mov
sub
adc
push
mov
arpl
out
jmp
mov
loope
scas
dec
cmpl
cmp
cmp
into
or
pop
add
adc
sbb
xchg
lahf
xchg
clc
ljmp
xchg
jo
cmp
je
or
dec
push
insb
cwtl
das
sub
xor
out
sbb
push
out
mov
sahf
cs
push
mov
sub
into
adc
ret
mov
ret
pop
lock
pop
xchg
mov
mov
sub
add
sbb
pop
push
add
out
and
mov
sbb
or
pop
jp
or
push
aad
inc
fidivl
bound
mov
ds
mov
cmp
repnz
or
hlt
or
or
popa
pop
ds
nop
cmp
lea
push
in
test
or
add
pop
jle
jl
loopne
push
xchg
popf
sub
loopne
mov
add
mov
mov
dec
cmp
sbb
shll
enter
pusha
push
outsl
xor
sbb
cmc
adc
cmp
test
sub
pusha
or
rorb
rol
mov
add
aaa
cwtl
adc
add
mov
adc
xor
dec
sbb
dec
lcall
adc
or
movsl
icebp
mov
xchg
inc
mov
push
clc
imul
inc
or
sbb
or
repnz
mov
pop
popa
lea
andb
jbe
and
outsl
add
jno
mov
inc
test
ljmpw
fs
repz
add
xchg
into
or
test
je
push
push
mov
testb
push
push
mov
jecxz
jo
sbb
sub
popa
and
add
or
dec
in
mov
lret
pop
rcll
xchg
mov
or
int
jmp
imull
ss
out
outsl
and
inc
xor
loop
std
inc
in
lcall
psubw
mov
andb
fs
arpl
ud0
mov
cmp
scas
dec
roll
scas
dec
or
pop
das
sub
test
pusha
sub
push
fisttpll
das
lods
xchg
je
jae
and
pop
cmp
inc
mov
xchg
pop
inc
test
sbb
or
mov
adc
mov
dec
pop
push
sub
add
inc
and
inc
or
lds
mov
das
test
rclb
cmpb
cmp
out
mov
or
repnz
cmpsb
push
mov
mov
adc
mov
xor
push
stos
add
andl
sub
xor
pop
mov
adc
cmp
pop
clc
jecxz
inc
mov
dec
call
mov
pushf
mov
or
mov
mov
sub
mov
arpl
xchg
adc
cmpsb
lea
add
inc
or
loop
pushf
jge
pop
mov
enter
dec
inc
flds
arpl
mov
cmp
adc
push
sub
jecxz
test
add
dec
inc
inc
add
push
or
adc
pop
jmp
or
scas
pop
mov
cmpsb
jmp
ret
cmp
jne
std
adc
push
or
mov
sti
or
lret
in
push
add
cmpsb
int3
fucomp
into
xchg
fdivl
scas
push
pop
addr16
pop
jbe
lcall
push
lret
out
add
lahf
rolb
pop
add
add
or
push
repnz
nop
add
dec
bound
mov
sbb
push
enter
add
add
adc
lods
fsubs
shlb
xchg
mov
adc
inc
push
psubq
add
test
lock
imul
xchg
pop
add
rolb
dec
add
and
add
inc
adc
fcmovne
test
cmp
xchg
jmp
lods
or
cltd
or
and
mov
enter
pushf
std
fdivr
fnstcw
or
lock
insb
rol
sub
je
dec
adc
pop
orb
loopne
jns
aaa
push
jmp
inc
orl
jb
pop
xchg
add
cld
inc
rcrb
inc
in
mov
add
jecxz
jae
lea
jmp
cmpl
sub
shll
nop
pop
arpl
je
cmp
and
and
xchg
rorb
mov
jmp
test
adc
mov
add
pop
fwait
std
cmp
movsl
xchg
dec
imul
xchg
out
push
fidivl
pop
aad
or
hlt
or
bound
push
sub
dec
xlat
sbb
dec
daa
add
movsb
mov
pusha
cmpsb
pop
push
inc
and
pop
in
cmpsl
xchg
ja
jge
daa
call
push
jnp
rcrw
add
xor
cltd
sbb
scas
loopne
xor
dec
lods
cmp
sti
add
sbb
adcl
lods
pop
mov
add
and
and
loope
jb
lea
cmp
shrb
test
add
mov
push
lret
cmp
mov
mov
or
and
scas
and
js
sbb
mov
sbb
nop
mov
or
add
and
pushf
sar
movsl
push
je
cwtl
xchg
movsb
pop
pusha
sub
sahf
sub
xlat
cmp
mov
push
iret
xchg
fdivs
out
js
add
stc
xchg
jnp
dec
xlat
mov
outsb
or
fcoms
pushl
xchg
test
or
roll
rorb
fisubrl
sbb
fimuls
add
gs
pop
dec
jp
aam
lds
sub
xor
xchg
mov
cmp
lret
sbb
push
sub
cwtl
or
addl
or
and
xchg
and
add
cmc
std
xchg
mov
or
adc
add
nop
adcl
add
je
test
push
rcrl
cmpl
push
mov
add
daa
lea
lds
sar
jae
push
xchg
loope
sub
add
lea
xchg
jl
mov
xor
sub
sbb
lret
mov
inc
cmp
das
rclb
push
test
jb
bound
adc
lahf
cmp
jmp
rorb
loop
push
adc
pop
or
mov
jb
je
cmp
push
cmp
data16
pop
and
add
or
cmp
xor
or
je
test
dec
in
cltd
jbe
xchg
clc
jne
mov
push
test
mov
and
add
aaa
sub
add
cld
cmp
stos
sbb
mov
or
mov
repnz
xchg
sbb
hlt
hlt
jns
adc
popa
jb
lds
inc
scas
sbb
cli
xchg
pop
pop
mov
or
cmp
call
add
mov
mov
hlt
jne
push
js
cs
xor
sub
cmp
dec
shll
cld
lods
push
mov
adc
cs
repz
dec
rolb
dec
lock
inc
imul
mov
scas
out
or
ja
inc
fstl
inc
push
cmp
daa
pop
inc
in
sbb
lahf
add
dec
pop
and
and
mov
pop
pop
pusha
push
fs
xchg
and
inc
mov
scas
mov
hlt
imul
push
inc
sti
ficompl
shlb
shl
jo
movzwl
mov
push
adc
cmp
pop
ret
jnp
sub
enter
and
sbb
jl
js
xchg
inc
ljmp
vmwrite
inc
rcrb
sub
rorb
xor
insb
inc
cmp
mov
pushl
cmpl
jne
cmp
jbe
or
jne
mov
js
mov
lret
hlt
and
push
loopne
xor
ds
data16
push
xchg
inc
cmc
jmp
cmp
cmp
pop
jl
fdivs
or
add
cld
fs
icebp
pusha
sub
inc
sub
lea
cmpsl
mov
cwtl
sbb
push
movsl
ss
mov
sub
xlat
jne
mov
je
pop
loope
call
push
add
in
js
or
mov
or
test
pop
mov
in
mov
or
movsl
js
add
and
dec
add
xor
scas
push
xor
shlb
adc
inc
cmp
repz
shlb
cmpsl
push
shrl
xchg
ret
jnp
inc
jg
mov
jnp
cli
dec
ret
and
imul
push
xchg
push
mov
test
adc
inc
in
repnz
push
xor
add
dec
push
aam
mov
je
inc
jl
pop
shrb
and
clc
fcompl
adcb
out
and
sbb
test
aad
rcl
jne
jmp
cmpb
sbb
cmp
mov
outsl
out
insb
inc
sbb
pop
xor
or
and
cmpl
xor
add
call
scas
or
ds
cs
out
aad
call
clc
xor
in
fsts
rcll
mov
ret
addb
mov
pop
push
inc
rolb
ja
sub
loope
cli
cmpsb
pushf
cld
mov
outsb
lock
push
dec
mov
cmp
jmp
add
xchg
pop
adc
js
adc
mov
loope
test
mov
daa
scas
inc
cmp
jae
cmp
je
mov
enter
or
inc
cld
fadds
add
roll
cmp
and
add
xlat
aam
or
testb
add
inc
bound
push
add
and
sbb
sub
or
sbbl
cmp
es
je
cmp
inc
clc
pop
dec
add
push
lods
cs
cmovb
cld
sbb
mov
push
or
push
push
dec
lea
mov
mov
cli
push
jo
jl
cmp
adc
sbb
xchg
or
lret
jb
jno
addr16
mov
add
sbb
sub
add
mov
je
push
sbb
insl
ret
and
xor
in
ds
dec
js
xchg
test
rcrb
in
pop
sbb
sbb
add
inc
xchg
inc
incl
or
testl
jae
push
imulb
mov
std
sub
dec
xchg
nop
jle
test
push
movsl
jnp
rol
addl
dec
ffreep
mov
dec
gs
ds
mov
roll
adc
inc
scas
xor
or
pop
pop
and
jmp
ret
add
cmpsl
dec
lcall
add
sbb
push
je
roll
pop
pop
jl
push
jge
leave
enter
cmp
add
or
and
xorb
add
adc
and
sub
mov
pop
push
mov
mov
push
push
and
ret
adc
insl
sarb
mov
xchg
mov
inc
mov
mov
dec
push
xor
in
fs
cmp
jne
mov
out
andb
pop
push
aam
pop
je
punpckldq
sbb
fsubs
popf
sbb
cmp
lahf
add
xor
mov
out
es
xchg
adc
add
adc
mov
jp
pop
or
in
mov
mov
jmp
lea
orl
fdivrs
cmp
xchg
sbbb
test
lret
mov
out
pushl
cmp
rclb
std
mov
push
add
shl
inc
or
add
or
outsb
push
mov
xchg
xchg
or
sub
sub
pop
into
sbb
rcl
jb
mov
mov
cmp
mov
enter
adc
xchg
lea
fisttps
lods
pop
push
add
mov
test
sbb
add
popf
pushf
notb
pop
aaa
xor
je
xor
sub
cmp
in
xchg
cmpl
sub
sbb
je
dec
adc
adcb
lret
push
jae
lea
ja
cmpb
outsl
gs
shlb
jne
mov
jmp
mov
or
mov
jae
stc
or
sti
mov
mov
add
cmp
out
addr16
jmp
sbbl
pop
push
dec
or
pop
add
dec
mov
or
cmpsb
add
out
hlt
or
aam
xor
jae
xchg
xor
jmp
push
inc
sub
dec
and
mov
push
push
xchg
movsl
and
test
push
adc
add
mov
mov
dec
imul
add
aaa
lods
pop
cltd
push
adc
divb
pop
push
sbb
adc
lock
mov
je
mov
cwtl
adc
push
adc
sub
adc
mov
inc
mov
push
hlt
sub
das
dec
and
sub
inc
push
pop
xchg
rorl
adc
insb
or
or
and
or
add
jns
sbb
sub
popf
hlt
aad
inc
mov
fisubl
mov
mov
fisttps
je
adc
or
fsub
add
dec
or
add
push
fldl
xor
push
repz
mov
lahf
data16
aaa
mov
addl
pusha
mov
cmc
aaa
adc
je
lea
cmp
rcpps
push
inc
aam
mov
mov
repz
push
lret
pop
sub
xor
inc
and
data16
dec
add
flds
push
jns
sub
lods
adcb
lods
jnp
scas
jmp
push
je
dec
add
in
mov
push
xor
or
or
icebp
clc
std
incl
mov
cmpb
add
aas
fldl2t
pushl
xlat
inc
loop
add
pop
add
scas
pop
scas
add
pusha
loopne
pop
push
mov
lds
push
mov
mov
fsubs
cmp
inc
js
mov
in
xchg
dec
ret
push
jae
lea
push
sub
add
shlb
adc
xor
adc
dec
inc
ja
or
dec
pop
ret
inc
shlb
test
scas
fdiv
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
outsl
jmp
xor
adc
push
sub
or
insb
test
cmp
mov
add
adc
sub
sub
out
push
mov
inc
sub
loop
mov
out
ret
jp
divb
mov
add
cmc
dec
in
sti
sbb
cmpsb
mov
push
jmp
cmp
sub
dec
mov
outsl
shll
shl
push
add
iret
jecxz
push
cmc
cmpsl
test
cmpsb
testb
cmp
enter
mov
pop
lret
arpl
push
mov
xor
mov
inc
test
mov
push
aad
xor
add
dec
fistpll
movsb
xchg
inc
ss
adc
add
inc
xchg
imul
sub
int
or
cmp
jge
out
or
mov
cmp
or
aas
lea
lahf
mov
cmp
jb
jo
aam
inc
bound
add
add
pshufw
out
jmp
sub
push
inc
test
add
adc
es
and
sub
and
insb
sbb
sahf
addb
jmp
arpl
sbb
std
cmc
imul
les
adc
jb
mov
into
test
jnp
add
push
xchg
arpl
fsubrl
cmpsb
imul
mov
int3
stos
inc
jl
jo
test
or
es
in
and
movsl
or
push
jp
push
and
orl
stc
jno
std
push
sub
inc
add
inc
add
aad
push
addb
push
inc
sbb
push
daa
sbb
nopl
cmp
rolb
sbb
ret
notl
lods
sub
bound
pusha
into
insl
clc
fs
add
cmpl
aam
or
mov
inc
jp
push
std
mov
push
mov
dec
pusha
fistpl
aam
aam
lret
pop
test
add
das
test
popa
int3
leave
push
out
or
lret
stos
xchg
or
dec
or
dec
sbb
dec
and
nop
sbb
push
sti
sbb
fs
mov
jl
ret
cmpsl
mov
xor
mov
sahf
fs
xchg
inc
aas
jo
dec
fwait
or
rol
bound
xor
xchg
sub
or
jb
testl
imul
in
xchg
push
cmp
sub
das
ret
add
ret
dec
lret
or
cmpl
pop
pop
jne
pushl
sub
enter
pusha
jo
or
cmpsl
adcl
insl
xchg
push
das
shrb
es
sbb
movsl
sbb
mov
push
mov
loopne
dec
xchg
inc
test
cmp
imul
and
xchg
gs
in
imul
or
push
lea
fs
cmc
mov
cmp
ret
sub
add
stos
add
sbb
test
sarb
rorl
cmp
nop
dec
rorb
ds
inc
pop
adc
shll
cmp
dec
inc
clc
mov
pop
adc
or
mov
dec
imul
insb
cmp
dec
inc
lods
test
mov
jnp
mov
test
xchg
add
lods
testb
jnp
enter
sbb
sbb
pop
push
push
aaa
imul
mov
and
outsb
ja
pop
jl
mov
xchg
mov
mov
mov
test
mov
sub
dec
dec
pop
push
dec
jmp
and
lock
dec
jnp
dec
inc
xchg
inc
push
rorl
cmpb
or
add
testl
scas
jle
jne
xchg
fadds
xchg
mov
cmpsb
xchg
inc
dec
scas
sbb
popf
and
cltd
or
das
lock
lock
mov
mov
inc
jmp
subb
push
loopne
jle
sti
or
sub
scas
push
mov
inc
out
add
or
test
sbb
mov
fsubrs
ja
xorl
aam
mov
stos
adc
adc
push
inc
shrl
sub
push
mov
push
or
xchg
pop
dec
test
cmp
jne
je
adc
push
mov
or
movsb
pop
push
push
cmp
dec
mov
or
leave
push
push
sub
scas
popa
mov
add
pushf
imul
or
cmc
push
inc
idivl
adc
push
ljmp
in
popf
leave
jb
mov
xor
mov
xchg
adc
cs
test
push
andl
jo
and
xor
mov
fcoms
fwait
ret
mov
cmp
push
push
cmp
inc
sub
mov
cmp
fbld
mov
lods
sbb
mov
add
inc
je
test
xchg
popf
mov
push
jo
xchg
dec
rcrl
pop
push
mov
decb
outsl
and
or
push
cmpl
push
or
jl
ret
cmpsb
das
jmp
add
or
sahf
dec
mov
aas
icebp
push
clc
push
in
adc
insb
cmc
adc
js
fdivrl
sub
push
lret
push
adc
adcb
rcl
fidivs
pushf
out
sbb
add
pop
push
mov
push
movsb
push
jb
jecxz
sbb
adc
je
loopne
dec
clc
mov
jb
clc
test
fisubs
dec
adc
push
push
lcall
push
add
clc
xrelease
fs
fmul
xorb
pop
xchg
cmc
jl
in
pusha
pop
adc
mov
sbb
add
push
push
outsl
inc
and
adc
outsl
cmp
mov
cmp
flds
fwait
adc
dec
pop
dec
and
shlb
sbb
add
sub
pushf
add
mov
or
xor
adc
sub
inc
into
push
cmp
inc
std
mov
lea
push
lds
enter
nopl
ja
bound
nop
movsl
sarb
push
add
daa
sub
insb
push
repnz
hlt
lea
add
mov
adc
mov
mov
sub
sbb
repz
ds
push
jo
push
adc
cld
in
movsl
lods
ret
js
mov
dec
fstps
lock
dec
enter
clc
xor
inc
push
mov
add
movsb
jne
into
add
clc
hlt
add
cmp
mov
add
and
lea
or
std
mov
sbb
fs
icebp
mov
js
mov
or
and
xor
pop
pushf
daa
jge
adc
mov
mov
sarl
in
popa
sbb
adc
or
bound
dec
fdivrl
pop
jl
subl
or
loope
sbb
gs
jne
nop
xchg
lea
dec
sub
jmp
xor
sub
int
aam
insl
rol
jg
xchg
xor
dec
inc
or
xchg
jg
inc
out
sub
push
sub
push
movl
adc
dec
add
inc
or
mov
dec
mov
cmc
lcall
mov
je
ja
pop
call
out
push
repnz
lea
imul
push
push
dec
push
cmp
xchg
js
push
hlt
inc
inc
dec
mov
mov
jg
mov
adc
mov
cmovle
pop
push
sub
adc
mov
mov
jmp
into
out
push
adc
shrb
shll
rclb
dec
xor
xor
stos
fstps
stos
push
cmp
mov
je
adc
sbb
das
outsl
push
xor
inc
call
jne
inc
mov
sub
pushf
xor
aaa
mov
leave
mov
or
aas
lea
and
sbb
pop
ss
mov
sub
dec
dec
jns
cmp
ja
adc
or
push
sar
mov
push
dec
adc
rcl
pop
adc
es
add
popl
movsl
movsl
lret
push
mov
in
rcrl
push
rorl
cmpsl
orl
and
cmp
push
bound
add
mov
or
nop
or
push
pop
mov
adc
xchg
or
sbb
movsl
mov
jle
add
aam
push
pop
movsl
adc
or
test
movsb
ret
sbb
push
adc
adc
jo
dec
push
sub
jno
pusha
lods
dec
inc
call
popa
jmp
imul
mov
imul
pop
dec
or
btr
inc
push
xor
or
cmp
ret
pushl
sub
les
rclb
dec
jmp
xchg
pop
push
xchg
scas
fs
push
imul
mov
push
cmp
pop
cmp
mov
inc
in
mov
pop
jns
jno
mov
pop
jae
adc
roll
sbb
push
dec
enter
jnp
cmp
pop
inc
adc
push
loopne,pt
sarl
mov
popf
dec
sbb
pop
je
out
loop
push
ror
xchg
mov
int
or
addl
int3
lret
sbb
rcll
loopne
mov
in
imul
xchg
or
push
jne
push
push
leave
in
jne
adc
ds
int
or
pop
mov
push
push
cltd
push
dec
icebp
mov
fisttps
decl
adc
jb
mov
cmpb
movsl
or
cmp
sti
xor
mov
add
rol
and
push
lret
loopne
cwtl
or
mov
scas
repnz
fcoms
scas
shrl
cld
testb
inc
add
icebp
daa
dec
add
xchg
shlb
lods
outsb
or
push
xchg
sar
mov
mov
sub
dec
fidivrs
push
and
xor
cmp
sub
mov
sub
in
push
jge
sti
ret
mov
or
mov
lea
xlat
adc
sbb
outsl
jp
or
or
mov
sbb
sahf
inc
push
imul
jae
scas
lcall
mov
fbstp
fmul
pop
mov
jg
ds
icebp
mov
mov
insl
pop
mov
push
push
rcll
cmp
sahf
test
and
jmp
cmp
dec
sub
insl
mov
lahf
cmp
sbb
sbb
sahf
flds
sub
insb
pop
push
sbb
add
adc
cmp
and
mov
aam
addl
xchg
adc
push
xchg
mov
rcrl
push
mov
sbb
push
and
dec
add
insl
jne
sub
sub
jae
sbb
jne
add
push
sahf
inc
push
push
je
xor
outsl
ret
cmp
sbb
dec
insb
jne
sub
adc
cmp
mov
popa
fnstsw
jmp
ficompl
mov
inc
and
in
jo
pcmpgtb
pop
stos
or
cmp
je
in
daa
jle
mov
or
jne
xchg
aam
lods
xchg
or
mov
add
xchg
cmp
sub
jnp
lds
cmp
push
inc
in
add
cmp
mov
xor
je
rclb
mov
dec
mov
loopne
mov
fidivs
arpl
pop
rcr
pusha
sbb
in
push
cli
pop
jmp
rclb
cmp
out
scas
sub
and
sbb
push
push
jo
jns
outsl
fsubl
sbb
or
xor
aaa
jecxz
hlt
stc
shll
cmp
jnp
icebp
dec
loopne
adc
or
lea
loope
mov
insb
nop
mov
mov
iret
out
xor
mov
push
mov
sahf
jge
mov
pop
dec
dec
or
sub
mov
or
sbb
jecxz
mov
push
shl
or
das
test
ret
into
in
loopne
push
cmp
shll
int
pop
add
adc
cmpb
sub
js
pusha
movb
inc
dec
dec
cmp
andl
pusha
imul
inc
add
sbb
cmpsb
imul
shlb
js
mov
movsl
jns
lea
fsubr
cld
test
push
cmpsb
cwtl
and
or
push
sti
or
add
dec
int3
pop
imul
mov
scas
cmp
shrb
and
adc
push
idivb
or
movb
sbb
sub
mov
sbb
xchg
xchg
jae
jbe
pop
push
fadds
sbb
push
fs
je
fs
push
fs
push
push
pusha
push
cmp
mov
jp
mov
adc
add
scas
mov
push
and
cmp
imul
out
fbld
sbb
dec
adc
push
mov
and
test
mov
pop
pop
sub
daa
addr16
pop
adc
adc
mov
test
jne
mov
gs
test
popf
ss
adc
lea
and
dec
xor
push
mov
add
add
jne
jmp
lock
jb
mov
imul
leave
jge
inc
dec
inc
push
ret
ljmp
pushf
mov
je
ret
mov
sbb
rorb
xor
push
shlb
test
in
push
in
dec
loope
outsb
dec
and
mov
dec
inc
sub
pop
pop
push
add
shl
ret
jb
frstor
mov
loope
leave
push
pusha
and
fwait
push
or
shrl
je
sub
fidivrs
jne
das
xorl
cs
lock
mov
inc
cltd
pop
jne
orl
loopne
daa
inc
dec
repnz
jmp
xor
jle
rorb
xchg
mov
xchg
mov
or
test
lsl
sti
dec
mov
stc
fisttpll
enter
sar
lds
add
xor
mov
xor
enter
shrl
mov
sub
xchg
les
mov
popf
push
push
scas
add
rolb
push
jne
mov
sub
test
adcl
dec
jne
cmp
mov
data16
cmp
mov
xor
repnz
cld
pop
adc
pop
lahf
jo
cld
xlat
or
dec
dec
adc
dec
mov
add
pop
add
sbb
js
or
push
test
or
mov
inc
xchg
push
call
ljmp
push
dec
ljmp
or
adcl
fwait
mov
aas
push
or
add
jmp
cmp
add
lods
pop
mov
or
aam
movsb
subl
pop
mov
adc
add
jne
or
dec
xchg
rolb
adc
add
xor
sti
insl
adc
outsl
mov
dec
adc
lcall
xor
sub
enter
sub
sbb
bound
test
or
jb
sbb
dec
aaa
adc
lea
add
mov
bound
pushl
pushf
and
sbb
jno
orb
xchg
sub
inc
sbb
fstpt
aas
inc
lock
sbb
sbb
cmp
cmc
mov
sub
cwtl
sub
mov
xor
insb
insb
mov
push
aaa
inc
out
movsb
xor
loope
cmp
inc
jnp
xchg
push
xchg
pop
test
je
cmp
je
addl
out
add
or
adc
push
push
arpl
call
adc
call
push
hlt
sti
push
sub
jo
mov
inc
and
jo
pushf
jne
test
sbb
push
roll
push
rclb
adc
adc
mov
push
lock
fs
cld
lock
cltd
test
dec
jmp
jecxz
std
jmp
mov
pop
xor
xor
scas
push
sbb
pop
xchg
sbb
ja
push
movsl
movswl
in
push
mov
imul
lret
add
push
and
shlb
lret
sub
xor
push
cmp
cmp
xor
ljmp
flds
pop
pop
sub
inc
sbb
sbb
adc
add
or
jl
iret
add
bound
fwait
and
bound
loop
test
pop
mov
popa
pop
lock
ja
mov
sbbb
push
jne
adcb
push
loopne
mov
cmp
sbb
push
dec
loop
jns
in
insb
int
loope
aam
test
popa
jecxz
js
sti
popf
jecxz
mov
sbb
aad
jmp
dec
adc
xor
test
je
push
mov
pop
js
in
je
mov
in
fiaddl
or
and
cwtl
fidivrs
push
sub
in
sbb
mov
sbb
lcall
xchg
data16
and
cwtl
dec
push
lea
push
pop
cwtl
push
out
pusha
or
mov
sub
push
or
cltd
add
sbb
xchg
jbe
push
data16
pop
fcoms
push
test
popa
and
shl
adc
cld
xchg
add
add
loop
pop
or
sub
adc
imul
mov
jno
icebp
jb
or
mov
jp
mov
inc
or
sbb
inc
adc
and
add
add
cltd
pop
pusha
sub
insl
dec
fidivrl
dec
cli
stos
sub
fdivs
dec
in
or
sbb
ljmp
notl
jge
int3
mov
jb
sub
stos
push
push
pop
xorl
mov
adc
cmp
lods
pusha
leave
jbe
mov
sbb
rolb
pop
rcll
or
cmp
push
sub
pop
popa
dec
popa
or
popa
ret
jmp
add
adc
and
xchg
push
popa
push
or
pushf
xchg
sub
push
adc
xchg
dec
dec
xor
and
adc
movsl
add
xor
faddl
fsubl
ds
cli
sub
pop
jmp
and
xchg
rorb
sub
mov
push
push
push
mov
mov
cmp
adc
fiadds
or
mov
add
jecxz
sub
inc
mov
fmuls
mov
sti
xchg
ljmp
dec
cmpl
pop
mov
jle
add
std
pusha
test
push
xor
icebp
rcrb
ds
lcall
and
daa
lret
dec
pusha
push
jo
mov
dec
pop
mov
movsl
add
mov
mov
popa
lock
ss
mov
sbb
and
insb
lea
push
adc
daa
rclb
inc
sub
jnp
aam
and
call
jb
xlat
fwait
sub
scas
ret
insb
or
insb
xor
in
bswap
or
xchg
cmp
and
mov
dec
sbb
fdivp
sub
hlt
sub
mov
ja
mov
jne
jns
pop
lcall
ja
movsl
sbb
and
push
roll
divl
dec
pop
ljmp
pop
lahf
push
cmpsl
adc
ja
jl
repnz
cmc
or
xor
sahf
mov
outsb
or
push
sub
sub
jbe
jnp
test
inc
sbb
push
and
inc
mov
int
inc
adc
fstpt
or
iret
adc
fsubl
outsb
dec
into
sub
adc
sbb
and
pop
fisubs
and
je
or
test
int
jp
sbb
shll
adc
mov
fdivl
or
test
pop
in
cmp
push
out
add
scas
push
dec
jnp
out
enter
sahf
xchg
add
call
cmp
mov
push
cs
in
int
or
push
loopne
outsb
in
and
xor
adcb
arpl
inc
xchg
pop
pop
cmp
jge
cmp
push
imul
xor
movsl
and
mov
call
call
sahf
push
mov
popf
or
mov
aad
lock
loopne
push
push
sub
call
xor
shll
xchg
push
xor
sbb
or
sub
orb
and
rcll
stos
sbb
pushf
adc
int3
add
push
rclb
inc
sbb
mov
pop
jmp
add
sbb
or
jnp
xor
cwtl
xchg
add
repz
and
ss
push
inc
xor
cmp
lcall
inc
push
sbb
jg
add
push
or
cmp
mov
mov
dec
adc
das
and
and
lea
sahf
lahf
out
icebp
push
push
push
std
push
inc
xor
hlt
sub
iret
aaa
add
fsts
std
jle
or
cmp
and
push
inc
test
push
jno
pop
lds
dec
xor
sub
push
push
inc
in
jmp
pop
and
xor
add
sub
inc
cmc
js
aas
xor
jmp
pushl
andb
pop
mov
aaa
call
lea
ret
sub
mov
ds
rol
mov
inc
xor
jb
shll
pop
dec
add
mov
dec
push
into
mov
cwtl
mov
pop
pop
mov
or
pop
bound
xor
sbb
cs
jl
andl
fmull
ret
hlt
adc
inc
sub
add
outsb
popf
mov
cmp
pop
mov
xchg
dec
cmpsb
jecxz
cmp
repnz
flds
pop
jo
push
mov
loop
ret
push
loope
inc
xor
orb
adc
fbstp
adc
in
clc
aam
nop
jo
or
out
mov
test
add
pop
leave
add
push
xchg
dec
adc
shlb
jo
xor
push
mov
or
and
push
push
or
mov
test
je
push
pop
out
adc
push
fsubrl
shll
mov
jmp
and
cmp
cs
sbb
push
sbb
inc
push
cwtl
add
fnstenv
rol
sbb
sbb
or
pop
movsb
add
cmp
sub
das
xor
push
or
mov
pop
lock
sub
push
mov
vmovups
and
mov
outsl
fs
cmp
mov
mov
xor
add
mov
testb
je
sbb
mov
aaa
xchg
lock
mov
dec
jl
loope
xor
push
ret
sbb
adc
cmp
inc
or
sub
sbbl
mov
inc
mov
arpl
adc
xchg
lcall
mov
in
cmp
test
sbb
roll
or
lret
add
dec
jo
out
ret
add
inc
push
dec
mov
pop
popa
add
movsl
mov
movsl
sarl
aaa
add
pop
leave
adc
pop
sub
ja
jno
movsl
push
push
js
xorb
arpl
aaa
and
or
or
adc
and
xchg
cld
push
loop
clc
lret
push
xchg
mov
out
or
or
xchg
dec
jecxz
sbbb
xchg
sub
mov
data16
xlat
and
push
xchg
mov
push
mov
test
neg
adc
add
loop
inc
mov
dec
mov
nop
push
jae
inc
pushf
jmp
dec
jl
adc
adc
test
dec
mov
push
push
inc
movsb
jp
add
imul
idivl
push
sbb
xchg
ja
mov
lea
sar
push
adc
outsl
mov
xor
mov
ret
dec
loopne
push
dec
in
mov
or
jmp
push
cmp
push
mov
or
lcall
push
orl
sbb
in
add
mov
xor
mov
sub
push
rcrb
add
popa
push
mov
mov
les
push
outsb
jp
js
xor
adc
lea
aam
cmp
in
and
adc
add
andl
ret
or
xor
mov
nop
ss
adc
mov
inc
mov
call
loope
addb
sbb
inc
loopne
jp
jbe
adcl
push
jp
inc
stos
and
sbb
adc
push
inc
mov
loope
das
in
pop
push
or
jae
inc
test
pop
pop
enter
dec
sbb
xchg
or
sbb
orl
cwtl
bound
add
or
insb
notl
pop
push
fidivs
dec
insb
add
push
hlt
outsb
fisubs
test
mov
mov
sub
adc
push
dec
mov
iret
inc
out
incb
adc
add
lds
push
mov
and
jp
pop
mov
xor
mov
xlat
dec
add
iret
imul
push
mov
sub
push
push
xchg
test
inc
mov
add
shll
aas
fcmovne
inc
imul
imul
mov
movsb
ficoms
inc
cli
push
cld
xchg
adc
add
jge
movl
shr
inc
add
push
sti
rolb
dec
and
das
or
adc
cmp
fiadds
loope
sbb
mov
insb
std
jg
add
pop
decb
mov
dec
repz
jno
in
dec
dec
push
stc
pop
insl
out
in
les
jae
movsl
addr16
stos
mov
es
sbb
pop
mov
sbb
mov
cmp
jmp
push
push
pop
adc
add
icebp
ret
repnz
add
jns
loop
mov
andl
testb
sbb
jae
xor
or
push
cmp
mov
pop
xor
or
or
push
mov
pusha
push
and
in
xlat
xor
aam
dec
xorb
push
andl
mov
jne
sbb
adcl
rorb
jmp
mov
out
and
insl
mov
add
sub
test
mov
pop
test
cmpb
addb
adc
push
ja
and
out
movb
ja
test
or
add
add
pop
in
sub
in
pop
adc
jno
mov
fnstenv
subb
inc
das
pusha
push
lret
js
js
add
dec
into
je
push
push
testl
mov
pop
mov
fisubrl
lea
cmp
pop
cmp
lock
push
xor
jle
add
inc
or
mov
idivb
addr16
das
dec
push
inc
sti
pop
enter
ret
jbe
daa
pop
push
insb
sub
mov
or
or
sbb
adc
ret
sbb
push
gs
test
add
in
sarb
adc
inc
jo
sti
mov
jo
sbb
inc
je,pt
ret
xchg
xchg
stos
repz
mov
adc
push
xor
mov
and
jmp
shrl
mov
cmpb
cmp
out
cmp
mov
shlb
je
cmp
inc
orl
mulb
jmp
sarb
shr
dec
int3
mov
xchg
stos
dec
add
daa
sbb
jbe
cmp
jbe
adc
test
and
xchg
adc
sbb
int
mov
mov
lock
cmpsb
fs
push
arpl
arpl
adc
push
adc
subl
jnp
inc
jbe
mov
les
jnp
aad
cmc
pop
dec
insl
sub
push
mov
push
ror
in
repnz
pop
testl
cmp
sbb
sbb
es
in
adc
hlt
call
pop
inc
nopl
dec
or
movsb
fdivs
filds
xchg
sub
jae
xor
cmc
aaa
sbb
popa
jo
loop
jle
add
cmp
dec
sub
and
add
orb
lret
add
jbe
push
jnp
and
pushf
inc
mov
jl
in
push
addb
sub
enter
jge
inc
ret
shrl
testl
aas
jnp
pop
jle
xor
or
jnp,pt
fadd
and
and
loope
dec
rcl
adc
mov
cmp
and
js
add
adc
xchg
adc
subb
jo
pusha
jp
jae
inc
pop
cwtl
psrld
daa
insb
js
lods
xor
mov
sub
pop
push
push
js
sbb
jl
out
in
dec
and
bound
dec
mov
mov
xchg
cmc
push
mov
pop
mov
pop
jecxz
dec
cmp
sbb
ficoml
cmp
jno
lods
xchg
insl
inc
jmp
andl
jb
xorl
lret
fdivrl
dec
adc
xchg
and
push
and
sub
xchg
mov
daa
inc
lea
aad
imull
test
dec
push
mov
cmp
push
sbb
xchg
cmpsl
mov
add
shrb
jns
aad
adc
pop
push
sbb
ret
mov
inc
sbb
aad
push
stos
sti
jle
inc
sbb
loopne
lea
lods
cmpsl
adc
out
cwtl
and
add
iret
add
in
pop
add
lret
mov
test
sbb
xor
enter
mov
sub
xchg
add
cmp
ds
jecxz
pop
xlat
pusha
rorl
xor
inc
sbb
outsb
test
ds
ret
cmpsl
adc
adc
lahf
push
insl
adc
adc
inc
jo
sbb
lcall
sbbb
inc
pop
nop
push
mov
andl
mov
addl
std
sti
dec
ja
je
or
je
or
sub
nop
inc
xchg
scas
or
stos
dec
aad
idivb
push
push
or
add
adc
jne
sahf
and
xchg
rcrl
jecxz
xor
jmp
cmp
adc
bound
or
cmp
inc
add
mov
sub
push
lret
ja
mov
testb
push
push
or
mov
push
lea
in
lds
test
inc
loop
rclb
sub
add
es
inc
or
repz
or
pop
std
dec
cmp
jmp
ret
andl
test
add
and
xor
pushf
cmp
aad
mov
cmpsb
push
or
or
lcall
push
daa
mov
or
jp
adc
sub
or
add
and
sbb
adc
fcmovnb
fs
ljmp
enter
dec
shll
or
push
adc
inc
dec
add
pop
jbe
dec
add
in
lods
popa
lahf
inc
test
push
insl
inc
and
cmc
aaa
and
or
jbe
mov
dec
mov
and
push
in
movsl
cmp
and
cmpsb
cmp
nop
sbb
dec
ja
jne
push
or
sbb
dec
mov
popa
fadds
cltd
gs
ret
add
or
push
fsubl
xor
and
incb
out
je
push
neg
add
cmp
xchg
nop
xor
push
adc
add
push
xchg
movsb
sbb
outsb
cmp
in
push
adc
imul
mov
push
push
rcll
sub
das
push
and
rorl
jbe
push
or
xor
ja
lcall
xchg
dec
roll
or
fsubl
push
inc
adc
movsl
xor
xchg
dec
push
dec
jg
xor
lea
iret
test
pop
push
les
cmp
sub
adc
xor
pop
add
mov
pop
test
or
adc
dec
push
mov
in
in
pop
mov
push
bound
mov
adc
sub
insl
sbb
dec
add
lods
adc
push
fcoml
sbb
nop
cmpsl
fsubrp
push
xor
testl
push
ret
pop
xor
xchg
push
cmc
fcoms
xor
les
or
les
mov
mov
mov
or
mov
add
cmpsb
jo
idivl
xor
mov
adc
mov
into
dec
aam
cmp
sub
js
jo
fucomp
pop
push
jnp
xchg
push
xchg
dec
adc
mov
sbb
mov
test
lods
adc
jmp
sti
mov
ljmp
div
cmp
sbb
or
adc
push
dec
rclb
sbb
add
or
inc
fidivl
mov
out
sub
cmp
insb
mov
dec
pusha
xor
adc
ja
push
fwait
icebp
ret
adc
sbb
add
and
xor
xor
enter
dec
mov
add
in
js
mov
in
notb
hlt
or
jne,pt
in
popa
xchg
data16
inc
orl
arpl
add
push
jb
sub
stc
and
in
jb
outsl
dec
and
je
daa
dec
ret
push
cmc
mov
fcoml
ret
push
out
movsl
jb
test
or
es
or
or
dec
dec
clc
pop
adc
lea
fadds
subb
imul
adcb
push
sub
xchg
outsb
imul
sbb
sub
push
pushl
repnz
leave
pop
lcall
xor
or
mov
dec
js
add
lock
and
xchg
mov
jecxz,pt
ret
fnstsw
int3
test
test
arpl
int3
cmpsb
cmp
lret
in
pop
inc
mov
push
gs
cld
mov
pop
push
inc
pop
sub
je
rcl
add
rolb
pop
je
adc
lock
cwtl
ljmp
mov
sub
sahf
sub
push
data16
roll
call
mov
aaa
in
mov
xor
xor
dec
sarl
xor
in
movsl
pop
shlb
test
and
incb
add
push
or
pop
mov
or
cmp
sbb
push
cmp
mov
sti
jle
test
mov
mov
mov
je,pt
or
std
push
and
mov
mov
popa
inc
and
adcl
mov
data16
mov
in
add
mov
sub
mov
test
out
pop
lock
sar
loop
sbb
or
xor
scas
dec
stos
cmp
adc
xor
mov
in
inc
jne
cmpsl
jl
mov
lock
mov
ja
out
add
outsb
adc
inc
js
mov
push
cmp
mov
arpl
or
popa
cwtl
sbb
ret
sti
and
test
stos
or
les
fisubrs
mov
inc
and
lahf
push
jmp
or
push
pop
jb
jmp
jne
xor
adc
inc
gs
or
mov
and
mov
xchg
sbb
addb
test
test
push
sub
jnp
js
je
add
es
jge
lock
jnp
mov
sti
or
cmp
out
jl
sbb
pop
jns
push
jl
push
sbb
add
add
pushf
std
and
insl
mov
iret
inc
xor
xor
mov
addl
sbb
repz
movb
cmp
add
and
inc
or
bound
jl
lret
cmp
cmc
add
rolb
loop
movsl
rolb
jmp
adc
add
adc
fsubrs
popa
and
mov
fmuls
dec
dec
jno
sub
and
sub
into
jle
pop
jbe
jno
add
mov
adc
mov
sbb
lcall
ss
adc
and
xchg
mov
mov
jge
or
adc
std
cmp
lcall
clc
inc
pop
or
sbb
push
das
cmp
xor
xchg
dec
das
push
ds
and
add
or
mov
bound
sub
popa
mov
dec
add
or
psrlw
mull
push
push
adc
std
popf
pop
mov
adc
loop
pop
cmp
xchg
int
in
addr16
cmp
mov
roll
and
shll
jecxz
mov
test
jmp
cmp
lea
xor
or
or
in
push
cmp
add
sbb
adc
aaa
test
jg
leave
nop
dec
dec
or
popl
shll
and
daa
inc
out
or
push
lock
push
es
cmp
je
negb
push
jge
push
mov
popf
or
test
dec
mov
and
dec
adc
or
sti
and
bound
lcall
cltd
jg
jge
fisttpll
push
repnz
pop
je
jbe
movsb
outsb
mov
into
inc
pop
mov
mov
add
ret
add
data16
dec
mov
fsubs
cld
jns
cmc
call
fcmovnb
or
xor
sbb
mov
or
pop
leave
call
add
adc
loopne
sub
sub
cmp
dec
and
sti
xor
mov
jbe
cmpb
and
push
data16
sbb
mov
iret
loop
sbb
aam
inc
adc
xor
jmp
jo
outsb
sub
outsl
xchg
movsb
adc
push
cld
inc
sarb
add
sbbb
cmc
pop
push
mov
cltd
push
leave
test
inc
push
cmpl
sbb
add
adc
movsl
jge
mov
mov
dec
or
bnd
insl
je
adc
xor
std
sbb
or
jb
pop
mov
and
in
add
jne
sub
enter
and
push
add
push
or
lea
xchg
push
imul
pusha
or
push
adc
sub
jb
mov
xor
nop
add
and
and
adc
out
adc
mov
or
out
cmp
xor
xchg
out
add
jne
dec
push
cmp
arpl
gs
in
pusha
dec
imul
cmpsl
jnp
dec
jmp
outsl
jl
xchg
add
dec
jmp
int
bound
fs
push
push
cmpsb
add
arpl
xchg
mov
pop
jmp
pop
and
repz
pop
xor
pop
push
add
popf
out
xchg
pop
cmc
movsl
dec
adc
les
or
inc
xor
call
inc
inc
mov
test
add
add
mov
and
pop
adc
dec
or
into
mov
mov
repz
push
ret
cmpsl
push
or
pop
push
sub
data16
data16
push
add
jbe
pusha
test
inc
iret
in
test
push
sbb
push
movsl
push
movsl
jb
cmp
push
xchg
lret
ret
dec
push
or
das
sbb
push
clc
scas
mov
inc
sbb
insl
les
enter
jg
insl
sub
addr16
xchg
into
gs
cltd
fadd
and
into
mov
in
add
jp
in
jne
cs
push
xchg
call
adc
stos
in
and
ret
orl
push
testb
push
out
test
call
pop
sub
arpl
adc
stos
push
dec
pop
dec
loopne
loopne
cmp
pusha
add
push
add
in
xchg
loopne
loop
add
or
lret
cmp
jne
cmc
add
loope
sahf
enter
icebp
push
jns
xor
sahf
push
and
pop
sub
or
test
and
adc
add
mov
pop
ljmp
cld
jne
into
aaa
sbbb
inc
pop
fs
mov
aaa
add
ret
lret
loopne
and
adcl
add
popa
int3
add
inc
cmp
ja
cmp
aaa
mov
adc
jecxz
es
cmp
subb
add
mov
or
lds
add
sahf
aam
jecxz
dec
xorb
sbb
loopne
and
jo
fwait
add
sub
out
push
shll
push
xchg
add
push
xor
push
adc
sbb
cmp
add
mov
aaa
push
lahf
pop
jmp
jae
push
jl
lcall
dec
or
pop
pop
outsl
add
push
mov
add
vunpcklps
jne
sbb
add
test
and
push
pop
and
scas
mov
add
pop
dec
and
aam
addl
mov
arpl
inc
notl
add
loopne
mov
orl
dec
and
fs
call
jg
js
dec
sub
push
and
or
in
or
xor
pop
inc
inc
icebp
cmp
jns
int
in
or
gs
insl
and
sbb
xchg
mov
je
lods
test
repz
jae
mov
les
jo
sub
or
jb
push
shrb
sbb
jns
xor
pop
jo
cmpsl
add
or
jbe
clc
sub
jge
adc
jo
and
cmpsl
xchg
sbb
in
mov
mov
ret
andl
add
in
and
call
pop
jb
fs
mov
pop
sub
add
inc
add
pop
js
mov
lret
mov
xchg
imul
add
popa
jo
sub
cwtl
ss
add
nop
outsl
adc
lock
xor
ret
pusha
fs
or
mov
repz
push
in
adc
xor
add
shll
push
leave
push
xor
shll
push
call
add
mov
or
cmp
jno
push
add
les
inc
xor
push
leave
lock
or
dec
dec
pop
sub
sbb
jne
repnz
cld
pop
xchg
mov
add
sbb
and
adc
add
dec
test
shll
dec
stc
add
test
pusha
imul
push
mov
push
sub
adc
jnp
lea
add
mov
cmp
push
loopne
mov
cmp
push
pop
pop
jmp
add
popa
insb
push
shlb
pop
mov
mov
cld
fldt
xchg
je
sub
sub
fsubl
sub
push
dec
stos
pop
imul
stc
xchg
pusha
enter
adc
inc
pop
fildl
fs
or
add
sub
add
lock
out
nop
setns
xchg
std
aaa
pop
xor
pop
aas
ja
push
pop
inc
pop
add
or
mov
rcrw
dec
xchg
add
mov
clc
fwait
adc
adc
jl
lock
js
jne
andl
ljmp
pop
loope
adc
sbb
inc
xor
jnp
rol
xlat
shll
call
aam
cld
je
bound
test
iret
shr
mov
aaa
loopne
sbb
ja
cmp
mov
sbb
and
xchg
repnz
xchg
jl
subb
clc
jbe
outsb
jmp
addr16
sub
push
push
ret
sbbb
add
jecxz
clc
movsl
pop
imul
push
lds
push
push
sub
test
sub
and
cmp
aam
cmp
insb
inc
and
orb
or
fistpl
cld
int
cmp
outsl
stos
shrl
mov
gs
inc
imul
sbb
fwait
adc
add
push
popf
pop
leave
or
cmp
push
insb
add
inc
or
cmp
adc
shlb
sub
fs
or
xor
cmovb
lods
xor
ffreep
sti
aad
mov
aad
sbb
pushf
mov
adc
dec
stos
xchg
xchg
es
or
xchg
xorb
in
cmp
dec
xchg
cmp
push
sub
clc
or
push
imul
xlat
jno
scas
movsl
test
adcl
push
push
call
fcoml
pop
cli
adc
arpl
xchg
test
rorl
mov
insb
pop
xor
add
inc
sub
jb
jo
aaa
push
fsubl
add
push
jg
cmp
push
popa
jno
insb
sbb
mov
xchg
mov
popa
push
repnz
adc
add
mov
adc
sbb
addl
mov
movsl
shrb
inc
pop
ret
movsl
and
push
sarb
cltd
sbb
test
sbb
or
add
push
jge
jp
push
dec
dec
dec
loope
arpl
imul
daa
or
push
aam
and
jb
sub
hlt
into
adc
filds
imul
push
sbb
je
inc
jmp
je
add
mov
ds
lods
push
jne
or
and
mov
mov
and
pop
cmpsb
sbb
rcll
or
and
mov
pusha
loop
or
and
popa
or
jmp
xor
xor
or
pop
add
lods
xor
lcall
mov
mov
fidivrl
clc
rorl
mov
std
ljmp
cld
das
cmc
mov
cld
sub
pop
scas
push
pop
push
mov
pop
add
jae
or
sbb
js
push
das
adc
push
fcom
add
pop
inc
inc
cmp
jb
pop
dec
dec
or
sbb
outsl
cmp
popa
and
ret
sub
xchg
mov
cmp
sbb
mov
pop
inc
leave
leave
add
jnp
dec
ret
shlb
inc
xor
lock
orb
inc
sbb
add
inc
push
inc
inc
sti
jl
test
mov
xchg
jg
mov
sahf
or
adc
faddp
jg
mov
sub
mov
and
pop
adc
test
clc
decl
stos
jle
dec
add
jmp
add
rcl
inc
inc
sub
push
imul
pop
or
es
xor
loop
sub
inc
movsb
xchg
xor
add
lea
sub
aas
hlt
je
or
repz
repz
fs
lcall
cmp
inc
jns
cmpsl
jns
inc
pop
dec
jl
cwtl
lods
cmpsl
dec
int3
je
adc
and
push
hlt
cmc
pop
or
jg
or
inc
add
adc
shlb
imul
mov
inc
mov
and
dec
test
xor
or
or
push
dec
inc
sbb
push
jb
mov
xor
push
mov
pushf
test
jne
movsl
add
pusha
add
xlat
mov
rol
sub
mov
adc
sub
sarl
push
pop
jne
in
addl
iret
inc
adc
lods
cmpb
inc
mov
or
fs
shll
pop
inc
lret
jno
push
dec
test
aam
and
or
push
in
mov
mov
call
sti
nop
ja
or
bound
js
sub
lea
xchg
andl
or
pop
jl
cmp
push
decb
mov
xchg
mov
mov
into
in
and
mov
dec
sub
or
sbb
adc
sbb
and
jge
je
pop
cmp
and
jge
sub
xlat
imul
mov
mov
pop
lea
loop
dec
sti
rep
hlt
inc
xor
jns
mov
sbb
jmp
sub
jae
push
shlb
add
fisubrl
sbb
arpl
dec
int
mov
adc
pop
push
pop
xor
push
push
xor
addr16
jae
cmpsb
xlat
push
and
push
mov
jo
jge
ficomps
dec
adc
loop
test
data16
inc
sub
add
sub
and
and
lock
push
aas
mov
mov
imulb
orb
mov
loop
add
ja
push
xor
mov
outsb
sub
and
lock
fwait
repnz
adc
or
test
dec
rolb
push
iret
mov
fcmovnu
das
lret
pop
push
add
add
in
jnp
pop
adc
push
push
jne
adc
sub
mov
mov
and
rcrb
out
xchg
mov
mov
or
add
jle
cltd
cltd
lock
dec
mov
push
or
xor
push
push
inc
xor
mov
or
jo
call
ficoml
push
push
pop
test
push
aam
lret
pop
call
mov
lds
pop
arpl
mov
push
fidivrl
add
mov
add
cmp
inc
xor
rolb
or
inc
and
sarb
dec
jne
xorl
decb
jp
inc
add
adc
push
loope
sbb
dec
mov
cwtl
pop
add
or
outsb
push
add
adc
inc
les
adc
sarb
ret
xchg
sub
pushf
rcr
add
call
clc
adc
adc
testb
sbb
push
movsb
add
mov
jnp
in
and
mov
nop
xchg
testb
push
dec
pop
push
adc
jnp
mov
jbe
mov
daa
movsl
jo
sbb
addb
cmp
dec
add
xor
dec
adc
xor
fnstcw
sti
xorb
test
jo
pop
pusha
or
push
sbb
sub
pop
lea
sub
sar
out
loope
rolb
rcrb
inc
movsb
jmp
cmp
xor
dec
dec
jg
mov
push
mov
push
add
jecxz
dec
xchg
push
arpl
jb
mov
xchg
push
or
adc
aaa
inc
sub
ret
push
ja
test
mov
and
lret
adc
and
popf
shr
or
push
sahf
or
xchg
push
int3
shll
mov
into
movb
adc
cmp
sub
adc
popa
ret
and
shr
les
loopne
xor
push
sbb
jl
and
adc
sub
xor
push
mov
fstpl
std
lods
sub
sbb
xor
or
subb
jno
lea
leave
adc
je
sbb
loope
mov
or
jo
add
js
sub
in
push
sub
fisttps
jne
pushf
sbb
xor
movsl
ret
fwait
sub
pop
lahf
adc
xchg
out
inc
push
xchg
add
insl
jge
adc
pop
mov
mov
aaa
inc
jle
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
push
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
rcl
push
push
lret
xchg
mov
dec
hlt
jae
mov
jg
push
pop
push
cmp
ret
adc
cs
das
icebp
sbb
push
push
mov
and
test
inc
inc
test
adcl
or
dec
sub
in
jo
cmp
add
adc
xchg
jbe
sub
mov
roll
xchg
cltd
inc
arpl
jmp
jecxz
aaa
popl
subb
ret
mov
jb
cmp
dec
xor
daa
jg
sbb
loope
xor
add
sub
imul
cmc
adc
daa
or
es
push
sub
and
jb
test
or
and
outsb
fildl
arpl
push
cmp
nop
or
or
nop
arpl
mov
ss
or
cmp
fnclex
mov
mov
mov
jmp
jmp
adc
xchg
push
jb
cmp
and
sub
addl
or
sarl
rol
jp
cmc
jl
pop
test
into
out
add
cmpsl
jne
shlb
sub
or
mov
push
je
and
fmuls
mov
add
dec
shlb
aam
or
and
xor
sbbb
mov
and
inc
mov
mov
dec
cmpsb
or
xor
and
add
lods
in
inc
xor
and
cmpsb
fs
cmpsb
and
and
adc
orb
push
dec
leave
orb
orb
daa
leave
orb
mov
sub
cs
and
ja
or
mov
jnp
in
pop
lahf
xor
in
jl
dec
gs
xor
shrb
ja
xor
or
xor
mov
mov
mov
sbb
cmp
or
sbb
sbb
or
in
inc
adc
pop
add
mov
jmp
adc
push
adc
or
pop
sbb
pusha
xor
sbb
cmp
or
test
aaa
stos
adc
mov
pop
mov
inc
movb
adc
jge
into
xchg
dec
or
mov
out
pop
ljmp
adc
jge
add
xchg
or
adc
fldl
fwait
mov
loop
mov
pop
mov
lds
jns
mov
lahf
inc
mov
cmpsl
jge
cmpsl
shl
fimuls
enter
jmp
xor
loopne
sarb
shr
aam
hlt
and
add
mov
call
ret
and
cmp
hlt
jns
mov
pop
hlt
mov
cld
pop
mov
push
push
pop
xor
pusha
stos
imul
test
add
xor
sbbb
and
push
cli
sbb
jno
pop
imul
add
sbb
stos
xchg
fistl
pop
add
pop
sub
outsl
push
add
pop
lock
aam
pop
inc
loopne
rolb
in
lock
inc
les
popa
fcoml
jne
ljmp
pop
loopne
and
popa
pushf
pop
ret
fs
es
xor
fiadds
xchg
sbb
push
push
hlt
ja
call
push
addb
scas
dec
pushf
into
or
adc
jo
add
fcoml
cmpsl
cmp
push
push
add
sbb
pushf
mov
inc
test
bound
push
add
movsb
add
addb
jbe
or
push
jne
bnd
jmp
cmp
fsubr
sbb
pop
out
scas
cmp
lods
jmp
add
mov
xor
fsts
xor
jb
jmp
pop
shl
xchg
or
jmp
or
add
mov
mov
sub
mov
aam
inc
ret
pop
push
shrl
or
adc
xchg
mov
pop
sub
adc
add
jne
test
pop
cmp
add
jecxz
pop
pop
add
dec
xlat
je
cmp
in
sub
dec
popf
inc
push
and
lods
sbb
mov
adc
scas
insb
mov
xchg
out
cmp
push
mov
shlb
js
or
push
adc
mov
mov
nop
mov
or
xchg
mov
rcrb
xchg
mov
add
mov
and
cmp
cmc
in
dec
xchg
inc
push
shr
or
mov
xor
xchg
sub
es
lcall
adc
call
sbb
cmc
aam
rcrb
dec
push
pop
sbbb
sbb
cwtl
jmp
push
ret
test
shlb
scas
rolb
or
jns
cwtl
movsb
mov
pop
les
cmp
and
stos
dec
jmp
cli
aam
add
fsubs
jno
adc
or
mov
mov
mov
mov
addl
sub
test
pusha
add
push
cs
sbb
jle
or
or
or
cs
lods
inc
or
clc
jl
mov
push
popa
mov
adc
clc
lock
jmp
push
adc
movb
pop
test
rcll
push
mov
stos
test
pop
out
loope
imul
out
imul
sti
or
inc
fnsave
sarb
pop
loopne
mov
imul
or
push
loopne
sbb
and
mov
sub
add
lret
push
or
shrb
add
push
inc
subb
loopne
xchg
orl
push
aaa
or
mov
sbb
and
leave
adc
lea
pop
push
push
lahf
loop
call
call
mov
jecxz
sbb
add
adc
dec
jl
sbb
je
scas
add
push
mov
jns
push
or
mov
orb
push
into
xor
ljmp
fdivl
xor
jle
xor
mov
xchg
mov
or
shr
adc
dec
in
lock
mov
cmp
cmpsl
lods
jne
stc
adc
dec
test
xlat
cs
into
dec
sbb
andl
mov
ret
pop
or
lock
test
jne
nop
loopne
out
movsb
push
popa
ljmp
xor
push
mov
int
loopne
mov
and
and
and
mov
or
mov
push
movsl
dec
sub
push
lea
push
adc
ss
test
lcall
rclb
mov
xchg
test
push
xchg
dec
imul
clc
loopne
push
lea
rorb
pop
shll
into
stos
jb
nop
fs
incb
mov
pop
shrb
inc
test
fwait
sub
int3
and
add
jo
fmull
data16
mov
gs
int3
or
xchg
test
sub
dec
loope
sub
negl
xchg
dec
orb
enter
repnz
push
arpl
inc
xchg
aam
aad
push
in
add
lret
xchg
add
in
lret
rolb
cs
lahf
les
inc
lods
xchg
js
in
shlb
mov
adcb
jnp
mov
push
push
pop
mov
xchg
mov
scas
push
popa
add
outsl
loopne
sbb
outsl
push
xor
test
xor
adc
gs
or
cld
and
xchg
inc
xor
xchg
jp
push
mov
xchg
add
loopne
sub
arpl
and
enter
sub
pusha
jbe
mov
js
ret
and
sbb
or
loopne
xchg
adc
add
lds
iret
loope
mov
xchg
aam
enter
push
xor
inc
rorb
or
push
push
lahf
pop
pop
in
orl
push
loope
sbb
push
pop
iret
push
adc
or
add
call
repz
sahf
lods
and
push
adc
stos
mov
xchg
js
mov
pop
mov
mov
cltd
push
test
adc
adc
test
sbb
lods
push
jnp
mov
or
push
lahf
call
pop
sarl
sbb
and
cltd
lahf
or
lea
and
inc
xorb
test
add
cmp
mov
or
jno
jp
ficoms
push
xchg
or
rclb
das
addb
push
xchg
mov
mov
xor
push
insb
and
dec
cmp
xor
dec
mov
add
add
aas
sub
xor
add
sbb
pop
cmp
xlat
push
pusha
outsl
mov
mov
mov
push
in
mov
fs
lea
movsl
or
adc
iret
enter
test
int3
inc
imul
mov
xor
push
and
sub
push
pop
add
lds
mov
imul
cli
inc
cmpl
add
pop
xor
xchg
xchg
out
and
cmp
ret
push
add
out
mov
subb
pop
jno
jp
inc
clc
ret
testb
sbb
pusha
sub
lea
cmp
sub
push
add
xchg
inc
dec
imul
jns
in
call
mov
fdivrl
stos
les
jecxz
and
rolb
loopne
cli
lcallw
ljmp
scas
xor
push
fnstsw
cmp
jbe
andl
enter
pop
call
push
xchg
push
inc
fisubl
sub
or
add
push
add
scas
enter
loopne
jnp
or
rolb
jo
add
rclb
inc
shr
fimuls
pop
or
push
mov
es
das
stc
sub
inc
adc
mov
dec
je
adc
loop
fidivl
jo
mov
pop
pop
push
fdiv
jp
lret
xlat
adc
test
mov
nop
pop
and
xchg
xchg
cwtl
pushf
and
cmc
add
mov
inc
add
mov
sbb
or
xchg
mov
xchg
sub
scas
adc
xor
jp
jecxz
mov
mov
out
loope
test
mov
sbb
sbbb
movsb
inc
ficomps
loopne,pn
rclb
xchg
loopne
std
mov
inc
or
bound
test
movsl
test
jge
xlat
cs
fidivl
scas
lea
in
idivl
movsl
or
push
pop
in
mov
movsb
add
xor
cmp
loopne
addr16
or
lea
mov
mov
ret
mov
or
push
lret
mov
ljmp
movsb
outsl
push
lock
dec
xor
imul
mov
mov
dec
xchg
jno
or
out
int
rcr
rorl
or
xor
push
inc
shrl
mov
sti
cli
pop
xor
pop
sbb
out
jle
stos
mov
hlt
lcall
loope
test
pop
add
rcrl
loopne
js
ret
xor
fwait
cli
sub
jns
pop
pop
subb
jnp
cmp
add
add
and
or
inc
or
fdivl
fimull
add
outsl
or
mov
pop
sbb
cmpsb
or
roll
push
jns
outsl
xlat
xor
fdivrs
push
push
repz
adc
sbb
in
addl
rorl
into
push
lock
push
xchg
ret
push
movsl
sub
adc
and
or
cltd
test
mov
sub
enter
lock
xlat
push
fisttps
call
push
outsl
inc
popa
jmp
das
mov
fs
pushf
or
loopne
test
loopne
rcll
jo
inc
je
push
inc
mov
ret
movsb
sbb
adc
addr16
sub
mov
cmpsb
or
bound
cld
iret
xor
ficomps
fsqrt
lea
ret
mov
loopne
inc
xlat
inc
and
inc
add
hlt
inc
jge
incl
jge
dec
rcr
mov
inc
inc
push
jl
sbb
popf
daa
lods
xchg
dec
pop
outsl
dec
pop
insb
xchg
mov
xor
xchg
push
into
std
sbb
test
scas
sbb
inc
sahf
and
jo
hlt
jge
and
dec
sub
jmp
add
adc
aaa
mov
xor
xchg
xchg
pop
addb
int3
out
xchg
mov
or
pop
pop
scas
rol
inc
xchg
jnp
xor
cmp
shl
mov
aaa
loopne
je
mov
add
inc
lahf
sub
add
sub
inc
test
decb
mov
push
lods
int
jle
frstor
rclb
test
sub
adc
outsb
mov
or
jmp
lcall
cld
jae
test
scas
pop
sbb
ret
cltd
xchg
add
jl
sbb
std
push
out
ret
inc
add
dec
popf
or
push
shlb
imul
decb
ja
enter
ret
jle
jl
adc
fidivrl
outsb
lock
push
enter
dec
loopne
inc
adc
test
xor
xchg
out
add
enter
sbb
inc
pop
out
xor
lea
cmp
sbb
jae
inc
in
fwait
dec
test
enter
hlt
mov
add
pop
add
mov
or
mov
cmp
pop
push
cmpsl
adc
and
jns
nop
adc
add
adc
and
ljmp
jmp
jmp
std
sbb
mov
mull
cmp
jg
lods
in
add
cli
jbe
or
fisubrs
outsb
add
push
jge
push
adcl
push
fucom
jnp
jmp
outsb
pop
and
pop
bound
jge
fs
mov
pusha
xor
inc
cmp
lock
or
shr
stos
andb
dec
cmp
ja
mov
mov
shlb
js
sbb
sbb
xor
jns
subb
inc
inc
jmp
inc
jo
add
pop
pop
jns
addr16
and
jne
add
mov
xchg
add
lret
add
xchg
insb
or
add
ljmp
add
fcoml
or
lret
js
dec
lret
jmp
pop
cmpsb
test
movsl
push
lods
test
mov
push
add
mov
or
dec
xchg
or
adc
sub
mov
mov
jne
cmc
mov
in
test
add
imul
xchg
loopne
fs
jmp
pop
adc
push
mov
movb
movsl
jl
push
repnz
cmpsl
bnd
fdivl
lods
pop
movsl
fsts
sub
cmp
mov
inc
pop
adc
adc
push
lods
movsb
cmp
lcall
cwtl
or
xchg
lret
in
inc
ss
and
push
pop
ret
push
add
in
push
fadd
shufps
add
and
jl
in
or
out
jo
pop
aam
andl
fcoml
rclb
jns
or
add
repnz
in
ljmp
xchg
adc
leave
cli
mov
dec
xor
loopne
adc
sub
lea
mov
imull
sbb
push
into
into
xchg
lcall
sbb
subb
mov
lods
add
mov
icebp
mov
pusha
pusha
aaa
jno
and
out
dec
push
cwtl
sub
jno
test
pop
push
inc
and
mov
cmp
jle
inc
mov
push
and
mov
mov
pop
outsl
mov
insb
push
adc
test
pop
jbe
jp
adc
jp
fldenv
out
mov
adc
push
or
mov
mov
pop
jl
push
sbb
and
mov
cmp
das
orl
inc
adc
or
mov
cmp
sbb
add
xchg
mov
and
jae
adc
pop
mov
sub
pcmpgtb
push
subl
test
push
xchg
rolb
cmp
inc
pusha
pop
test
mov
push
subb
roll
push
adc
and
insl
je
push
xchg
push
add
and
xchg
stos
pop
lret
inc
xor
inc
cltd
sti
test
xor
xor
fdivl
test
sbb
dec
pop
cmp
sbb
and
inc
aaa
jmp
jle
add
sub
sti
sub
add
arpl
or
xlat
aaa
mov
mov
mov
sbb
cmp
add
push
es
mov
add
push
xlat
outsl
call
imul
mov
mov
fdivs
mov
xchg
and
daa
out
pop
dec
out
dec
or
test
mov
inc
cmp
sarl
lea
mov
jg
mov
divb
rolb
int
xchg
xor
shr
xchg
push
movsl
mov
cmp
jb
mov
cs
fs
test
loop
jg
outsb
pop
cmp
call
add
aaa
jmp
add
pop
adc
insb
mov
and
dec
loopne
inc
inc
inc
jbe
push
movsb
adc
mov
cs
pusha
orb
in
push
dec
nop
adc
jl
in
mov
es
cltd
mov
cmp
mov
jne
loopne
enter
mov
in
jbe
shll
jo
xor
imul
jge
or
mov
or
test
add
fisttpl
movsl
daa
add
dec
orl
sub
das
movsl
test
sbb
push
rcr
pop
out
sub
les
test
inc
test
enter
jp
scas
shr
mov
mov
leave
sub
sub
call
aaa
adc
jb
testl
inc
imul
xor
sub
pusha
xchg
test
inc
add
test
push
jge
push
stos
xchg
jns
and
je
leave
mov
dec
push
push
fs
into
add
mov
loopne
xchg
xchg
shrb
pop
aas
cmpb
jbe
add
mov
dec
add
imul
sub
adc
xchg
adc
inc
sub
fwait
mov
scas
and
dec
cmp
sbb
push
mov
popf
dec
movl
stc
mov
int3
icebp
nop
push
or
repz
add
loopne
and
psubb
add
ja
daa
add
repz
adc
push
and
xchg
push
aad
adc
aas
inc
popf
push
dec
adc
in
push
add
xchg
flds
fnsave
lock
orb
fldt
icebp
jl
jmp
insl
add
addb
int3
push
jne
xchg
xor
mov
or
movsl
icebp
and
rcl
sub
push
daa
mov
ljmp
das
jo
aam
fsubl
ss
and
movsl
adc
xchg
int3
decb
inc
push
nop
roll
or
fs
or
loope
mov
inc
push
dec
lds
adc
jmp
push
jo
mov
aam
stos
adc
repnz
ss
and
adc
mov
repz
outsl
int
push
pop
fcoms
push
inc
jl
push
or
push
xor
inc
xor
mov
mov
mov
pushf
pop
les
cmp
mov
rol
mov
fmul
enter
push
in
and
ss
mov
xchg
jmp
push
cltd
lcall
das
aam
pusha
lea
jecxz
push
pop
jne
jecxz
xchg
scas
movsb
roll
insl
push
push
mov
les
pusha
mov
dec
pop
fdivl
add
add
inc
jbe
sahf
sbb
and
push
xor
loope
mov
in
ret
and
inc
fistps
pop
pop
leave
out
out
imul
push
inc
cmp
pushw
push
cli
pop
cwtl
sub
pop
push
xchg
sub
add
adc
mov
pop
xchg
clc
scas
or
data16
je
push
aaa
lock
mov
out
jmp
jno
push
ret
inc
iret
inc
jle
pop
mov
ret
call
cmp
repz
je
cmp
jle
mov
push
add
test
jae
add
push
into
idivb
jb
lods
push
xor
xchg
mov
clc
xchg
mov
test
insb
out
pop
mov
push
cmp
xchg
out
test
pop
push
ret
dec
call
jne
inc
nop
loopne
jne
sbb
clc
pop
adc
add
lds
jmp
sub
ret
scas
dec
outsb
test
dec
arpl
enter
fsubs
jmp
filds
adc
pop
push
push
xchg
add
sub
pushf
add
test
mov
mov
mov
pop
add
or
xor
jo
movsb
mov
movsb
mov
mov
scas
jns
aam
in
rclb
sahf
out
int3
xor
dec
add
mov
dec
add
jmp
dec
add
rcll
shll
fs
and
addr16
dec
rcll
push
dec
or
add
aam
jbe
adcb
rcll
push
sbb
dec
add
cli
test
lret
lods
loope
lds
inc
sahf
aaa
xchg
cmp
cwtl
orl
adcb
cltd
nop
or
jl
jl
mov
or
pop
add
sub
sub
mov
les
push
jmp
add
inc
imul
aam
call
pop
sub
xor
rorl
loope
sti
lods
aad
inc
popf
popa
in
push
rcrl
rcrb
mov
punpckhbw
insb
je
sbb
jg
hlt
sbb
sbb
jne
push
mov
adc
xor
repz
xchg
sbb
xor
push
mov
xor
mov
dec
mov
pop
shll
adcb
bound
pop
add
mov
dec
mov
push
inc
cmp
ds
mov
or
mov
mov
mov
aam
mov
mov
cltd
or
aaa
mov
mov
push
gs
adc
stos
gs
les
mov
ret
mov
sti
movsl
cmp
dec
mov
cld
push
push
pop
mov
in
sbb
jne
and
loopne
sub
and
jo
xor
rol
add
in
loope
dec
inc
icebp
add
out
clc
loopne
imul
push
jno
jge
ret
js
or
jno
test
mov
jne
mov
imul
cmp
push
adc
fadds
jmp
xlat
lods
dec
shlb
testb
mov
lods
jnp
loop
rclb
push
xchg
cs
pushl
mov
mov
rcrb
mov
cltd
pop
cmpsl
jb
add
mov
and
jb
fwait
les
xchg
add
pop
sub
mov
inc
dec
pushf
xorb
ret
push
mov
fwait
lock
jge
push
push
and
xor
sub
add
adc
ret
jmp
cmp
pop
and
push
and
or
cltd
dec
jecxz
and
sub
and
mov
jmp
pop
cmpl
sbb
or
js
push
mov
arpl
sub
add
and
sub
mov
in
repz
pop
daa
sub
cmpl
add
and
push
push
jmp
jne
pop
push
push
lret
xchg
mov
mov
push
bound
roll
inc
dec
add
and
jle
loope
ljmp
adc
ds
add
jmp
aaa
xchg
leave
cmp
push
aad
movl
inc
sbb
repz
adc
or
int3
sbbb
cmp
dec
push
jne
mov
jmp
sub
shr
shll
popf
sahf
pop
xlat
lcall
test
pop
les
gs
push
push
movsl
lock
hlt
fstl
mov
loopne
insl
xchg
push
cmpl
inc
clc
pop
fsubr
pop
fimuls
and
fstpl
lods
push
dec
cmp
cmp
inc
xchg
push
adc
data16
cmp
and
subl
mov
xor
movsl
sbb
test
dec
sbb
sub
pop
lods
les
testb
ljmp
out
pop
rcr
inc
and
sbb
out
fildl
mov
xor
xor
push
or
rorb
mov
adc
pop
clc
into
push
dec
mov
sbb
push
jg
pop
flds
add
cmove
and
std
decl
mov
lcall
int3
dec
sbb
cmpps
push
add
or
leave
sub
mov
jne
out
scas
es
in
sub
mov
add
popa
dec
or
and
xor
xor
pop
push
jmp
mov
cmp
jge
and
push
fs
sub
popa
popa
push
add
sti
pop
push
sub
ud0
add
xlat
lea
stos
fisttpll
in
out
popf
not
sub
cwtl
mov
test
mov
add
cmp
cltd
pop
shrb
dec
es
jne
xchg
fsubrl
rorb
into
inc
add
xchg
sbb
sbb
jns
inc
icebp
and
adc
and
orb
scas
bound
pop
mov
sar
into
mov
add
fnstenv
jmp
mov
aad
jp
pop
stc
sbb
pushf
dec
mov
jmp
adc
or
ret
movsb
dec
loopne
push
in
or
test
lods
push
decl
inc
nop
mov
call
mov
sbb
lea
pop
cmp
int3
dec
jne
push
xor
xlat
mov
mov
clc
mov
test
add
mov
push
mov
and
sti
enter
orl
pop
lock
sub
add
jle
pop
cmpsl
lods
pop
adc
pop
push
and
mov
mov
pop
leave
mov
ss
aad
sbb
mov
test
xorl
xchg
or
adc
inc
or
add
dec
push
fcompl
xor
insl
cmp
fidivs
jo
add
push
mov
push
fmull
push
dec
lods
orb
cwtl
xor
js
adc
or
add
add
nop
mov
adc
xorl
cs
adc
or
xchg
test
push
add
clc
dec
popa
aam
mov
pop
sbb
movsl
mov
mov
dec
loopne
and
and
pop
shl
orb
or
sub
adcl
daa
arpl
jmp
adc
ss
add
push
add
cmp
notl
mov
mov
xchg
push
lret
mov
mov
xchg
pusha
mov
lea
xchg
clc
xor
and
jo
lcall
pop
and
lock
and
clc
mov
repz
push
gs
sbb
push
add
lret
sub
inc
adc
cmp
stos
mov
inc
and
leave
jp
je
test
mov
push
out
enter
loop
in
push
dec
pop
inc
sbb
pop
stc
mov
push
pop
shlb
subb
dec
loop
pop
sub
adcl
push
jbe
jecxz
mov
jl
enter
mov
xchg
leave
leave
sbbb
cmp
nop
pop
jmp
inc
push
mov
das
fsubrs
push
lods
jmp
out
mov
mov
in
sbb
add
add
push
or
mov
or
jns
ds
xorl
pop
cli
bound
shl
mov
jg
pop
test
push
ret
leave
test
jmp
dec
sub
pop
sbb
dec
mov
fmuls
inc
adc
call
mov
add
fimuls
shlb
jne
lods
in
xor
mov
sbb
cmpsl
daa
fsubr
dec
pop
and
mov
mov
sub
adc
arpl
or
xor
ljmp
cmp
sub
pop
or
push
adcb
or
aad
push
aas
mov
ss
lods
xor
push
and
insl
loopne
adc
les
mov
popf
xchg
sbb
in
out
add
and
mov
mov
jmp
cmpl
dec
xchg
mov
xor
hlt
fstl
sub
test
mov
and
push
cmpsl
push
jecxz
pop
test
push
jns
dec
jmp
push
cmp
pop
inc
pop
and
mov
xor
xor
mov
fwait
mov
adc
jno
test
test
xchg
push
inc
add
mov
lret
adc
add
insl
popa
adc
dec
jns
and
cmp
ror
fwait
ljmp
cmp
call
ret
scas
cmp
iret
sub
inc
in
lock
dec
aam
cs
inc
push
inc
inc
lea
add
je
add
test
rclb
ljmp
in
ret
and
rcrb
aaa
push
in
lock
cmp
push
inc
push
gs
xor
jecxz
jo
sub
add
push
incb
push
jmp
outsb
leave
ret
ret
jmp
mov
or
and
pushf
dec
lea
pop
mov
inc
leave
jnp
add
sub
mov
dec
rolb
scas
loopne
leave
lock
das
rol
popa
inc
cmp
les
loope
mov
jle
into
jb
jle
daa
mov
xchg
jnp
cmp
in
gs
adc
fnstsw
enter
push
test
and
push
stc
cli
cmp
or
les
cwtl
mov
in
in
faddl
sbb
jbe
push
or
sub
pop
mov
add
int
jno
jne
xchg
cmp
icebp
jne
lcall
addl
cmp
daa
mov
enter
add
stos
or
pop
repnz
loope
xor
repz
ret
rorb
sub
xchg
fmull
enter
push
insl
push
xor
add
adc
and
popa
popa
jb
cmpsb
mov
add
xchg
mov
inc
dec
sbb
xor
rcrb
rcrb
xor
rolb
ret
leave
loopne
push
xchg
inc
dec
fwait
sbb
iret
xor
les
iret
and
les
leave
push
sbb
add
or
jb
add
lock
int
sbb
and
rcl
inc
aam
aaa
sarb
xchg
add
imul
mov
cmp
cmpsl
push
in
stc
inc
push
sbb
data16
popf
ss
push
pop
push
push
dec
dec
push
sub
lods
cmc
bound
bndstx
dec
ficoms
inc
ret
adc
add
or
jp
jg
arpl
or
add
loopne
add
or
roll
ret
pop
xchg
xlat
clc
stos
mov
sbb
push
add
push
hlt
jge
and
add
inc
sarl
mov
pop
shll
sbb
lahf
fsubrs
inc
or
call
mov
leave
pushf
ss
xor
mov
popa
out
cmp
sub
inc
cwtl
shlb
mov
ds
cmp
in
loopne
push
ret
cmc
pop
add
add
sbb
xchg
and
test
sti
add
xor
add
push
mov
and
xchg
inc
jbe
ret
cmpsl
mov
jb
xchg
in
scas
jecxz
add
out
call
sbb
mov
or
daa
inc
inc
ret
fcoml
xchg
cmpsl
push
es
clc
imul
adc
inc
and
xchg
xchg
cmp
cmpsl
xchg
mov
decl
es
mov
rorb
sub
add
lret
ret
inc
jo
cli
pop
loopne
ret
jg
je
sub
int
addr16
fs
sbb
mov
jge
mov
and
sahf
dec
roll
push
cmpsl
out
ret
and
push
jmp
loopne
jg
or
stos
into
les
add
aaa
inc
les
sub
mov
pop
add
add
dec
lds
or
xchg
add
pop
dec
test
imul
inc
pop
sub
inc
cwtl
or
or
inc
fistpll
inc
inc
cwtl
dec
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
push
mov
aam
mov
fs
xchg
and
imulb
inc
adc
push
mov
jge
std
xor
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
sbb
mov
dec
xor
loopne
jge
fildll
lea
mov
xlat
add
pop
cmp
jmp
lret
sub
push
xor
add
outsb
push
cmp
add
leave
fidivrl
inc
inc
dec
loopne
leave
les
sbbb
dec
adcl
out
loop
adc
jbe
sbb
jbe
and
sbb
inc
andl
insb
or
or
sub
pop
lea
popf
add
rolb
gs
clc
xchg
push
and
adc
pop
xchg
insb
ljmp
inc
add
pop
mov
and
sub
and
mov
cmp
loope
sarb
jmp
push
xor
in
loopne
and
dec
sbb
sub
inc
or
js
inc
cld
push
push
mov
push
in
imul
cli
std
sub
push
lret
dec
gs
or
cmp
daa
inc
sub
jl
xor
push
sbb
fdivs
sahf
add
or
inc
scas
in
sub
mov
mov
sahf
outsb
fst
and
cmp
and
dec
pushf
add
sbb
int
and
or
and
pushf
je
add
mov
pop
jo
adc
sub
rorl
iret
outsl
mov
ljmp
enter
pop
sub
push
push
dec
jle
and
mov
sar
add
or
sbb
push
inc
pop
adc
cmp
movsl
or
inc
push
aas
lcall
xchg
mov
popa
push
nop
push
push
inc
adcb
iret
sub
add
popa
dec
test
or
lods
sbbl
fists
dec
mov
cmpsl
fadds
pop
or
mov
scas
pop
pop
or
sbb
jo,pt
dec
add
sbb
rolb
add
insb
insb
jbe
pusha
lea
mov
adc
dec
jmp
pcmpgtb
and
lcall
nop
orl
or
push
incl
cmp
jl
xor
lret
into
push
push
dec
inc
dec
fdivs
jne
sub
lret
subb
dec
push
cmpb
es
sbb
into
jl
shrl
pop
data16
jecxz
inc
enter
and
jb
std
dec
jg,pn
mov
pop
je
push
mov
cmp
mov
pop
mov
cmp
or
push
xor
push
rorl
ja
jns
cltd
inc
and
pop
jne
jnp
push
addr16
pop
sbb
mov
push
jmp
push
sbb
outsl
xor
je
sub
dec
int
xchg
pop
stos
xor
les
push
jne
jl
pusha
dec
mov
dec
push
jge
les
mov
xor
insb
outsb
leave
in
sub
pop
andl
pop
sub
movsl
xchg
sahf
mov
mov
add
xchg
ret
clc
mov
add
sbb
pop
sbb
popa
mov
xor
or
stc
in
cwtl
sarb
push
pop
sahf
sbb
loop
jne
stc
js
add
add
adc
imul
test
aaa
sbb
dec
stos
cld
push
lock
push
shrb
aas
add
stos
or
push
clc
mov
inc
test
jbe
push
cs
and
js
pusha
test
dec
jns
add
outsl
pop
data16
or
leave
add
adc
adc
pusha
sub
inc
leave
aas
mov
add
add
add
or
dec
je
inc
or
mov
adc
adc
data16
mov
mov
enter
xchg
push
addr16
sar
mov
in
mov
jg
mov
push
or
xor
insl
popa
adc
mov
jne
mov
jge
pop
or
mov
jge
dec
inc
adc
add
loopne
lret
mov
incb
shrb
arpl
mov
mov
xor
push
cmp
fidivl
ret
mov
sub
adc
adc
jne
data16
inc
adc
add
mov
fcomp
rolb
movsl
dec
mov
mov
or
cmp
sbb
das
lea
pop
adc
fsts
or
xchg
cmc
adc
add
lea
rclb
and
rorl
ss
pop
fdiv
je
inc
add
fimull
lock
add
sub
ss
adc
cmpb
jne
push
jmp
cmp
xchg
mov
and
adc
pop
adc
insl
sbb
jo
testl
sub
add
test
and
lods
xor
inc
and
and
add
mov
lock
dec
or
sub
enter
les
adc
mov
mov
loop
cmpsl
and
shlb
add
mov
ljmp
mov
pusha
sbb
cmp
sub
rorb
fiaddl
mov
mov
nop
xchg
out
mov
xchg
mov
add
push
sbb
insl
divb
addb
mov
inc
add
or
pop
lods
xchg
and
jl
movsl
fscale
pop
test
and
movsb
subb
scas
std
movsl
xchg
push
or
or
dec
loope
test
cmp
pop
mov
adcb
push
dec
xchg
or
mov
cmpsl
or
addb
adc
pop
adc
sub
and
test
icebp
lea
or
and
sti
ss
fimuls
pop
pushf
inc
sbb
xorb
and
and
mov
adc
pop
enter
shll
inc
in
sub
or
popa
push
insb
imul
ret
rorl
test
mov
xchg
notb
xor
push
xchg
push
and
es
stos
movsb
xor
or
pop
add
adc
pushf
dec
sub
and
xchg
jne
outsb
xlat
push
pop
push
sub
lcall
dec
in
cmpl
push
cmp
nop
leave
pop
inc
loope
cmp
push
sub
in
es
pop
xchg
jmp
sbb
je
push
lret
dec
pop
call
ret
jno
insb
ljmp
mov
rorl
xchg
jne
cmc
adc
fld
inc
push
ret
mov
sbb
outsb
lsl
mov
xchg
fldl2t
adc
je
mov
xchg
jle
adc
add
call
add
dec
clc
mov
push
mov
xor
arpl
lea
pop
or
addl
jns
adc
inc
bound
jg
cmpl
popf
rolb
or
ret
ja
pop
add
ds
movl
push
mov
fwait
dec
inc
popa
ret
cmpl
lahf
add
push
es
leave
repz
xlat
sahf
and
inc
and
xor
out
icebp
adc
add
sti
lods
jmp
andl
repz
mov
xchg
cmp
jl
lahf
cmp
loop
push
push
adc
mov
adc
push
inc
jl
test
and
loopne
xchg
pop
fadd
push
xor
hlt
stos
cli
lea
mov
and
mov
mov
insl
bound
sub
add
add
enter
fisubl
lock
push
cmpsb
jmp
fists
push
mov
dec
jnp
pop
popa
nop
gs
dec
stc
or
leave
and
sub
add
jg
inc
popa
nop
dec
xchg
aam
arpl
pop
cmp
or
push
aad
loope
loope
jne
xchg
test
insb
jno
mov
mov
fs
pop
push
xchg
je
orb
cmp
dec
lock
sbb
push
pusha
xorb
cli
mov
mov
sbb
xor
or
out
fiadds
or
xchg
push
adc
or
icebp
mov
xchg
mov
xor
sub
inc
mov
sub
in
jne
daa
jo
or
and
jbe
je
xor
pop
xchg
push
pop
test
mov
sub
fs
in
adc
mov
xchg
fdiv
cmp
shl
movsb
xor
lea
jmp
lock
add
cmp
cltd
adc
and
push
enter
push
inc
mov
jmp
lods
cwtl
push
in
sahf
sub
mov
dec
pop
push
adc
sbb
dec
jne
fcoms
cmp
leave
mov
xchg
aad
dec
adc
rclb
mov
push
lret
push
push
sbb
pusha
push
push
xor
or
roll
or
cmpl
aaa
jo
adc
or
add
or
mov
sub
or
rclb
pop
adc
hlt
dec
or
push
js
sbbb
enter
dec
push
cli
pop
jb
cmp
xor
adc
mov
cmp
pop
enter
std
inc
xchg
inc
arpl
in
std
xor
repnz
scas
orb
pop
push
inc
xchg
inc
je
addl
mov
or
add
add
aad
adc
adc
mov
mov
or
adc
add
sahf
adc
and
aaa
loopne
or
cmp
sub
jae
push
inc
or
adc
xchg
or
xchg
loopne
adc
lahf
mov
jmp
add
push
mov
repz
sbb
mov
je
mov
lahf
popa
mov
add
xorb
stc
ja
sub
xor
js
in
and
cmp
xchg
dec
call
ret
add
mov
stos
and
aaa
push
in
inc
push
sahf
loope
dec
xchg
iret
dec
ret
pusha
stos
mov
lahf
push
cmp
sub
xlat
ret
add
inc
call
outsl
call
call
int3
cmp
push
imul
cmp
cmp
call
push
sbb
add
jne
dec
imul
ret
popa
test
push
jmp
in
push
lea
inc
outsb
adc
or
xor
in
add
pop
and
jae
test
xor
mov
cmpsl
mov
cli
adc
xchg
daa
add
fcoml
scas
fcom
push
inc
mov
add
push
inc
jecxz
insl
jg
and
sub
jmp
rorb
sbb
ret
es
pop
xchg
std
lret
fcoml
aas
aaa
adc
and
fdivrs
cwtl
xor
inc
int
mov
jp
mov
push
add
in
aaa
fisttps
rclb
mov
ljmp
out
xchg
out
bound
into
inc
jbe
sbb
in
push
les
les
mov
add
mov
jbe
mov
sbb
movsb
and
adc
adc
loope
mov
inc
mov
cmp
ss
sbb
push
jecxz
js
jecxz
sbb
roll
cs
fs
and
jno
or
ret
xor
sarl
pop
loop
nop
adc
or
and
movsb
jb
push
movsb
ja
or
xchg
pop
movsl
sbb
or
mov
or
adc
pop
push
rol
orl
mov
push
add
jg
mov
adc
stc
jne
add
fisttpl
pushf
add
add
inc
add
enter
mov
xor
pop
add
rcrl
lret
lea
push
cmp
lea
and
sub
and
shll
mov
mov
shrb
inc
or
clc
sahf
test
sbb
push
pop
push
cwtl
movsb
cmp
stos
inc
cmp
ds
push
adc
inc
ss
sahf
addb
cmpsl
jo
loopne
and
push
xchg
sarl
mov
or
mov
and
test
in
push
out
push
mov
je
cmp
cmpsl
jge
sub
jno
push
mov
push
enter
outsb
stc
push
jb
ja
into
jle
and
shl
mov
jo
loop
push
mov
and
inc
mov
in
movzwl
cmp
sbb
add
add
jl
cmp
and
icebp
pop
mov
or
jl
xchg
fisubl
cmp
out
shlb
cmp
mov
iret
mov
or
mulb
mov
dec
stc
mov
cmp
pop
adc
adc
sahf
sarb
incl
mov
add
mov
scas
jp
js
rolb
push
pushf
sbb
movb
fs
popl
cmpb
dec
inc
push
fs
enter
xchg
int3
inc
cmp
adc
mov
mov
das
pop
dec
pop
bnd
and
add
add
sbb
mov
mov
inc
repz
or
sbb
pushf
pusha
sub
sar
pop
inc
fcomp
adc
ljmp
mov
mov
test
jmp
cmpb
mov
adcb
adc
push
adc
add
outsl
push
out
mov
jnp
shlb
dec
movsbl
cmp
dec
sub
call
jno
clc
adc
jbe
push
paddb
mov
push
mov
add
push
adc
add
lret
fsubrs
insl
push
popa
xchg
pusha
lods
mov
inc
hlt
repnz
xor
in
jo
cmp
push
or
shr
sbb
xchg
xorl
cmp
fdivr
sbb
mov
mov
jo
push
sub
repz
mov
fs
movsl
jl
cmp
scas
das
enter
mov
mov
mov
sub
imul
stos
add
inc
insb
mov
cmpsb
sarb
call
add
pop
push
inc
hlt
out
jl
test
jo
xor
push
shrb
or
ja
popa
pop
push
add
lods
pop
repnz
sbb
lods
sbb
cmp
imul
add
add
cmp
cmp
fdivrl
cmp
or
jnp
or
jbe
jmp
or
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
fcompl
pop
pop
jmp
and
or
and
cmp
push
mov
mov
and
test
cmp
mov
mov
add
rorb
cmp
add
icebp
lock
and
cmp
cmp
gs
repz
jb
jl
repz
xrelease
repz
lahf
movsb
test
iret
repz
ret
shl
cmp
repz
fneni(8087
in
lcall
add
add
push
pop
or
and
or
or
push
movups
adc
adc
js
std
call
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
jnp
mov
insl
sub
fdivr
lea
int3
fiadds
inc
popf
mov
mov
xchg
add
adc
cmp
aam
rorb
test
xchg
push
loope
mov
les
xchg
cli
add
xchg
aam
lods
add
out
dec
int
mov
imul
sti
pop
or
xor
cwtl
nop
inc
cltd
mov
mov
cmpsb
out
decl
sbb
pop
cmc
adc
cmc
cmpsl
cmp
in
adc
mov
push
mov
sub
hlt
ljmp
lret
lods
ret
in
add
lock
jbe
cmp
out
mov
xchg
shll
cmpl
je
faddl
rolb
sbb
dec
cmp
sbb
or
push
mov
test
fstps
dec
dec
push
push
fdivrl
cltd
sub
push
jl
bound
sub
daa
cwtl
add
xchg
or
dec
in
push
pop
adc
sbb
ljmp
and
mov
and
xor
cmc
jl
mov
pop
inc
fidivrl
filds
add
sbb
and
clc
cmp
jo
adc
jne
loop
sub
pop
xor
mov
rcrb
push
sbb
sbb
mov
shr
add
pop
test
pop
xchg
or
shll
adc
cmpsb
aam
fcomip
mov
call
clc
ss
sbb
and
adc
ds
sub
mov
add
cmp
dec
daa
push
push
aaa
jmp
sbbb
movb
js,pn
ret
cmp
leave
in
cmpsl
pop
fldt
and
cmp
add
add
mov
add
stos
popa
sub
negl
jge
subl
mov
test
ds
or
push
mov
shr
jg
stc
ja
lea
imul
lret
enter
iret
stos
mov
stos
mov
sbb
stos
cmpb
dec
sbb
push
mov
lock
xchg
adc
jae
xor
inc
inc
or
and
enter
clc
out
adcb
or
jbe
push
mov
scas
jb
in
pop
add
ret
add
mov
push
and
test
pop
pop
xor
faddl
jns
es
lea
inc
in
rcrl
add
inc
pop
or
insl
fld
outsb
subl
lret
insl
enter
mov
push
lds
nop
mov
out
and
jno
dec
mov
lea
adc
fistl
or
push
add
or
mov
xchg
movl
add
add
sbb
aaa
adc
repz
lret
nop
or
jl
mov
jbe
xchg
jnp
sbb
and
push
iret
cmp
sbb
push
pop
imul
mov
daa
stc
mov
inc
and
pop
es
nop
insb
ljmp
xor
movl
sub
and
and
mov
xchg
mov
or
adc
out
and
and
add
sbb
xorb
inc
or
adc
mov
jl
xchg
sbb
fsubrs
mov
mov
mov
cmp
add
cli
es
negb
cmp
pop
jg
and
or
cmp
je
andb
mov
cmp
or
add
mov
inc
pop
xor
cmp
mov
fbstp
jle
dec
cmp
jl
dec
adc
mov
test
dec
jae
ds
nop
jmp
and
imul
movsb
fistpll
cmp
jae
movzbl
push
mov
lret
xchg
fmull
xor
lods
cmpsb
js
adc
jmp
mov
inc
roll
inc
in
lock
mov
add
ret
mov
inc
sbbb
dec
push
lods
add
and
push
je
jne
sbb
mov
cltd
ja
jmp
or
sbb
add
icebp
fwait
and
mov
ret
shlb
dec
mov
push
jecxz
jmp
nop
imul
add
cwtl
ret
test
push
ss
pop
mov
push
fdivp
js
jne
and
inc
stos
xor
clc
test
lret
mov
pop
fidivl
mov
ds
sub
or
rcl
add
mov
rcrb
add
pop
and
mov
and
jne
add
mov
inc
gs
cmpb
add
ja
push
xchg
xchg
rorb
popa
or
nop
in
cltd
sub
popa
mov
add
rolb
fsubp
push
subl
mov
and
aam
sbb
add
xor
push
sbb
and
pop
enter
enter
std
test
outsb
xchg
jno
xor
mov
mov
sub
xor
jge
sbb
cli
add
ja
clc
sbb
xlat
cmp
push
ljmp
adc
adc
jmp
jmp
xor
or
std
pop
jle
pop
test
inc
dec
pop
pop
movsb
repz
sub
inc
jbe
and
je
jmp
xor
rorb
fcoms
mov
push
and
jecxz
mov
mov
adc
push
out
push
fs
and
enter
movsb
pop
sbb
int
jno
push
or
cmp
push
mov
sbb
jge
mov
sub
jg
dec
mov
inc
push
push
aam
adc
sbb
jg
or
add
jge
test
test
and
bound
out
scas
pop
repz
lea
lock
aaa
lcall
inc
adc
ret
nop
cli
push
insb
adc
call
test
push
cmp
add
mov
jo
cmpsb
jg
adc
mov
inc
adcb
inc
test
mov
pop
pop
mov
rol
mov
imul
scas
daa
rcrb
in
pop
mov
dec
push
inc
inc
push
scas
pop
jmp
inc
dec
dec
mov
or
push
and
sub
mov
cld
add
call
push
add
movsl
xor
adc
inc
mov
dec
mov
imul
push
push
fcom
shrl
decl
cmp
mov
sbb
int
lsl
mov
sub
cmpsb
add
pushf
call
xchg
or
cmp
cmp
inc
dec
xchg
inc
rorl
shll
int
sub
add
inc
repnz
push
or
xchg
jecxz
adc
lea
sub
dec
fnstenv
or
pop
ja
fwait
adc
mov
paddusw
shll
cmp
or
adc
sub
pop
cld
cmpl
push
adc
mov
or
outsb
in
addl
mov
nop
pop
mov
dec
xor
xchg
cli
push
sbb
push
pop
arpl
daa
push
xchg
and
outsl
ret
cmpsb
jmp
hlt
je
inc
mov
and
and
data16
rolb
inc
inc
pop
fsubs
dec
xor
imul
je
adc
dec
xorl
mov
xor
push
or
xchg
aaa
movsb
push
ss
push
adc
push
mov
dec
imul
sub
sub
ljmp
mov
fs
les
or
or
lcall
and
je
adcb
adc
test
cld
lcall
xor
in
pushf
outsb
outsb
push
jnp
sub
loopne
jl
sub
jle
leave
ret
int3
mov
rcrl
das
adc
outsb
mov
mov
inc
xchg
lret
jb
or
inc
aam
ret
jmp
mov
sbb
jg
and
xchg
outsb
mov
in
adc
decb
dec
sbb
push
lds
movsb
imul
xchg
mov
fs
xchg
lcall
add
mov
dec
xor
dec
lods
pop
sub
dec
mov
fstpl
dec
or
imul
adcb
bound
es
rorb
xor
adc
popa
pop
leave
add
mov
xor
add
mov
lock
hlt
push
addb
out
push
push
or
add
cmp
sub
sub
pop
xor
xor
xor
mov
flds
xor
and
imul
and
or
insb
and
insl
lret
xor
dec
inc
outsl
shrb
iret
lea
push
adc
enter
nop
adc
loop
add
mov
inc
and
cltd
or
ljmp
dec
sbb
cs
and
and
ret
sbb
andl
add
loopne
xchg
push
jns
cmp
cmp
fistpl
cmp
cltd
fidivrl
fnstenv
mov
xchg
push
mov
les
cld
jne
push
cltd
or
mov
jle
out
mov
out
sbb
or
ja
inc
js
jle
jecxz
lea
nop
lods
add
in
sbb
inc
cld
outsl
jecxz
lea
push
mov
nop
and
test
xchg
push
movsb
adcl
aas
mov
mov
fildl
icebp
sbb
jne
xchg
fstl
xchg
ret
sti
push
sub
mov
in
push
ret
arpl
sbb
out
cs
sbb
and
lret
cmpb
mov
push
inc
push
sub
mov
pop
cmp
je
cmp
cmp
hlt
shlb
push
inc
pop
mov
fwait
inc
xchg
mov
andb
and
outsb
xchg
fimull
and
mov
jns
insb
mov
pop
jge
or
cmpb
xchg
or
lock
jge
ret
xchg
sbb
pop
or
push
jmp
fstpl
ret
sbb
bound
inc
cmp
inc
scas
add
dec
adc
xor
fidivrs
mov
inc
xchg
add
xor
cmp
pop
adc
xchg
in
xor
and
push
addr16
add
inc
popa
add
jo
imul
and
add
in
xchg
aas
movzbl
jp
xorb
je
mov
pop
repnz
pop
lcall
mov
push
push
pop
fcoms
push
mov
mov
movb
fstpl
stc
ss
fldt
mov
lea
daa
pop
dec
jmp
cmp
cmp
sub
push
cmp
push
add
xlat
jge
mov
inc
inc
inc
rcl
push
les
mov
pop
out
leave
lods
push
lds
jp
mov
cs
mov
popa
jbe
or
lock
lret
hlt
clc
clc
cld
mov
int3
add
repnz
or
push
add
popa
lcall
aaa
in
notl
dec
je
add
adc
aas
sar
cmp
dec
or
mov
shr
sbb
lcall
mov
sub
andl
cli
adc
js
mov
xor
sbb
aad
cli
or
cmpsb
adc
inc
enter
mov
ds
or
je
push
add
arpl
fwait
clc
out
loop
ret
mov
out
xchg
repz
mov
inc
add
jmp
sub
in
push
icebp
ljmp
add
push
add
jne
sbb
jle
mov
pushf
cmp
jo
push
cmp
into
roll
xor
add
xor
es
clc
xor
inc
andb
xchg
sbb
or
decb
incl
imul
mov
pop
rcrb
jb
fisubl
pop
xchg
rol
dec
dec
je
mov
add
subb
dec
or
cmp
mov
stc
push
xor
lods
add
adc
cli
cs
push
push
lock
mov
fistps
sbb
jne
jmp
daa
jecxz
aam
pop
out
push
cmp
loop
aaa
sarb
push
mov
cmpl
outsb
gs
jae
sbb
jmp
mov
sub
pop
jne
mov
inc
sub
mov
adc
cmp
je
cmp
push
cmp
jne
inc
dec
push
xchg
les
mov
sub
pop
andl
inc
xchg
pop
adc
flds
jb
mov
lock
ss
je
ret
stc
cmp
jne
jg
add
loop
cli
scas
push
outsl
mov
std
xor
dec
cmp
insl
add
inc
push
push
add
or
mov
orl
call
mov
jp
jl
or
jg
mov
jmp
and
out
dec
popa
push
jmp
inc
jl
fnstcw
in
jg
aaa
jp
add
shl
dec
mov
sub
xor
fdivrs
mov
mov
and
push
les
call
outsl
adc
test
or
movsl
xchg
icebp
fs
xor
xor
xchg
inc
rcrl
pop
ss
mov
inc
cmc
or
out
pop
ret
or
fs
pushl
ret
push
pusha
push
push
inc
cmp
pusha
mov
jg
ret
push
mov
imul
je
xlat
inc
mov
or
sbbb
cli
add
aaa
lcall
xor
dec
sub
decb
pushf
push
sub
add
lods
dec
mov
mov
jge
dec
in
shrl
pop
das
movsb
xor
xor
or
jbe
fsubs
inc
cmpb
mov
ds
pusha
adc
add
idivb
call
out
orb
rolb
and
lcall
or
scas
insb
add
mov
negb
adc
adc
cmp
cmp
ret
adc
test
add
mov
push
cmc
cmp
inc
lock
jne
cmpsb
pcmpeqb
insb
rolb
mov
or
fstpt
pop
push
push
clc
mov
fsubs
jecxz
imul
adc
pop
js
leave
cld
inc
jmp
bound
sub
inc
mov
add
imul
popf
or
cmp
jne
leave
or
cmp
mov
jecxz
push
mov
getsec
lods
imul
jecxz
add
lds
cmp
inc
iret
sbb
xor
shl
add
shl
lods
pusha
cwtl
dec
fcmovu
lods
dec
sbb
xchg
push
js
mov
add
mov
gs
mov
adc
incb
mov
lock
movsb
hlt
in
push
sub
jge
jne
popa
sub
pop
add
mov
mov
js
sbb
pop
push
add
push
test
test
pusha
dec
inc
cmp
and
test
pusha
mov
movsb
scas
je
inc
fs
adc
loop
mov
fimuls
pop
jp
arpl
jne
inc
push
mov
adc
push
fs
xor
icebp
jmp
rolb
arpl
adc
repnz
jne
sbb
and
mov
xchg
ror
xchg
subb
imul
or
gs
ss
fcomps
sub
jbe
jae
clc
popf
cmp
bound
push
movb
andb
test
cmp
sti
mov
dec
inc
incl
jp
sahf
dec
cmp
pop
aaa
xchg
lea
insb
and
les
add
add
pusha
pop
movsb
dec
sub
int
push
sti
movsl
ret
jnp
xor
pop
inc
imulb
stc
cmp
inc
nop
push
sub
add
inc
ds
cmp
rolb
xor
and
push
lret
inc
or
mov
mov
sub
mov
mov
xor
sub
mov
or
cmp
lock
movb
jbe
xchg
sub
inc
xchg
add
push
loope
add
jmp
mov
push
cmpb
jne
ret
mov
adc
or
test
test
jmp
xchg
push
outsb
insb
sub
shlb
dec
ret
stos
xchg
add
pop
in
mov
sbb
fdivrl
add
lods
and
push
xlat
mov
push
add
push
and
xor
dec
pop
jbe
push
xchg
test
xchg
mov
add
or
sbb
adc
mov
fnstsw
adc
mov
scas
pop
sahf
mov
std
jbe
mov
repnz
sbb
dec
xchg
jle
arpl
push
mov
ret
mov
out
push
addb
shrl
push
inc
mov
sbb
jle
add
aad
inc
mov
mov
dec
pop
lret
dec
and
popa
es
jne
enter
xchg
adc
mov
adc
jae
inc
pop
clts
xor
adc
fs
insb
je,pt
inc
adc
loopne
cmpsb
push
push
scas
xor
jl
jecxz
add
mov
pop
out
adc
add
sbb
xor
mov
movsb
bound
je,pt
xchg
fisttps
pop
lods
lods
inc
pushf
in
imul
xchg
push
cld
add
arpl
lods
pop
add
add
adc
cmp
xlat
fsubs
sti
shl
addr16
push
jo
add
lods
loopne
or
sbb
push
push
push
dec
shl
jmp
into
cs
xchg
pop
push
push
mov
dec
loopne
orb
cli
xchg
sub
adc
xchg
mov
pop
inc
push
sub
push
addr16
aam
das
inc
mov
or
xchg
add
mov
outsb
shll
call
cltd
push
in
sbb
aam
test
mov
push
push
leave
mov
add
inc
leave
mov
push
mov
inc
push
jae
cmp
mov
jbe
lock
inc
xor
cmp
jb
dec
cwtl
jmp
jno
aas
push
lds
add
fnstenv
xchg
inc
push
xor
test
pop
in
push
mov
mov
add
ret
mov
cmp
pop
mov
push
sarb
adc
push
loopne
pop
ljmp
lret
push
mov
scas
mov
adc
pop
and
pop
or
dec
adc
push
out
inc
sub
fwait
addr16
rclb
cld
rorl
xchg
minps
dec
cmpb
ss
add
pusha
fdivl
inc
push
scas
push
xchg
xor
push
mov
mov
mov
or
in
shlb
call
push
xor
ret
sub
mov
outsl
ds
push
jecxz
mov
jo
fildl
jmp
push
fistpll
xor
adc
les
ss
nop
xchg
js
pop
pop
in
adc
xor
add
inc
push
sub
arpl
flds
pusha
add
add
orb
rolb
iret
test
and
xorl
cmpsb
orb
aaa
mov
or
inc
inc
fsts
daa
pop
xchg
mov
or
cmp
jne
sbb
loopne
push
sub
icebp
xchg
cltd
pop
sub
bnd
sbb
mov
movb
fidivl
or
cmp
jge
sbb
adc
ja
jmp
mov
mov
xchg
lahf
pop
sbb
sbb
pop
cmp
cmp
and
out
rclb
and
movsl
push
sbb
xchg
push
dec
stos
push
add
fdivl
or
push
dec
pop
js
rorb
mov
je
inc
xchg
mov
add
outsl
cmp
pop
push
loopne
mov
jle
dec
inc
sbb
push
adc
xor
in
fnsave
dec
sbb
cmc
jno
or
cmp
xor
insb
fists
dec
movsl
ljmp
bound
fwait
xor
jno
push
dec
mov
cmp
add
jns
imul
ret
xor
je
bound
ja
mov
push
sub
cmp
ret
popa
pushf
fstpt
scas
cmp
push
arpl
mov
dec
xor
push
pop
daa
scas
lea
jns
sub
sub
inc
rcl
xor
pop
pop
enter
pusha
lock
dec
imul
push
push
pop
dec
pop
clc
jmp
ret
pop
adc
mov
inc
push
inc
cmp
xor
sub
push
nop
pop
adc
mov
xchg
xchg
sbb
sbb
jl
lock
or
or
mov
fs
cmpsb
and
aaa
movsb
es
pop
into
xchg
movsb
push
out
mov
test
loop
int
inc
addb
rcrl
add
fwait
push
add
jmp
pusha
cmp
test
xor
adc
and
mov
jo
push
movsl
stc
inc
add
or
test
push
xchg
push
ret
mov
sbb
add
or
xorb
mov
jnp
out
fwait
xchg
lret
adc
sub
or
inc
adc
addb
stos
add
sbb
inc
fsubl
setge
imul
punpckhdq
test
fsubrl
js
sbb
adc
fiadds
or
enter
jo
and
test
data16
and
ret
sub
push
and
mov
fadds
pop
pop
shlb
movsl
add
arpl
lods
cmp
lret
cmp
or
stos
mov
lds
adc
cmpsb
push
incl
xor
sub
mov
add
inc
jecxz
pop
pop
lret
ds
mov
stc
sbb
mov
ss
jne
xor
loopne
sarl
sub
in
lcall
fs
inc
and
sub
or
dec
adc
and
pushf
imul
adc
push
jb
test
mov
cmp
or
ret
dec
adc
push
cmp
imul
inc
in
or
shr
push
ret
sbb
outsl
sub
daa
cwtl
jecxz
test
pop
pushaw
cmp
mov
divl
aaa
rorb
inc
and
or
inc
pop
add
adc
dec
mov
or
push
or
adc
xor
or
stos
cmova
pop
jmp
rorb
cmp
aam
push
or
popf
and
or
pop
or
lret
scas
push
push
les
push
push
xorl
hlt
adc
and
jge
sarl
xor
dec
insb
inc
loop
mov
movl
pop
jo
adc
or
jns
nop
adc
and
adc
int
sub
jp
dec
dec
mov
lods
push
pop
insl
jl
cmc
and
loopne
dec
adc
insl
js
in
in
pop
pop
test
mov
push
dec
sub
push
nop
and
push
js
fnsave
push
and
xor
rcrb
cwtl
pop
adc
inc
mov
sbb
jle
inc
test
mov
sbb
jg
cmp
ja
add
rclb
je
sbb
xchg
data16
xor
and
es
jo
mov
cmpl
pusha
sub
inc
jne
fmull
outsb
outsl
pop
push
jae
cmp
jmp
inc
test
inc
cmp
js
pop
jo
sbb
addr16
push
loop
pmullw
sbb
ds
push
sbb
and
sbb
mov
pop
fs
daa
or
mov
mov
and
out
or
adc
sbb
pop
and
adc
sub
imul
and
fs
clc
xchg
movsl
inc
mov
movsb
pushw
in
cmc
and
adc
cmp
jge
fildll
das
in
mov
js
in
inc
or
dec
jl
jl
call
jecxz
inc
mov
roll
ret
mov
and
rorl
movsl
and
cmp
jmp
jne
xor
fs
inc
push
adc
pop
pop
jb
mov
push
pop
js
ficoms
in
push
pop
or
cmp
daa
cmc
and
jmp
cwtl
int3
rcrb
push
insb
add
push
jb
outsb
repnz
jae
dec
jb
insb
aaa
cmc
and
push
nop
das
mov
rorb
or
push
ret
rep
adc
data16
mov
mov
adc
fs
dec
sbb
in
adc
gs
mov
pushf
out
in
push
pop
and
sbb
mov
fwait
scas
stos
pop
jg
cli
mov
pop
sub
sub
jle
sbb
pop
insb
dec
mov
dec
jae
cmpsb
out
and
cmp
ja
xor
icebp
mull
jg
push
or
loope
incl
or
xor
mov
pop
inc
lcall
mov
enter
hlt
adc
divl
test
test
or
inc
jmp
inc
daa
or
fwait
mov
out
jbe
adc
sbb
add
movsb
lds
icebp
adc
pop
shrb
pushf
rorb
inc
pop
adc
rcl
rolb
or
test
repnz
cmpb
adc
push
loopne
cmpl
je
xlat
adc
ret
jg
cs
adc
icebp
sbb
adc
mov
mov
cld
cltd
add
sub
aad
sub
mov
push
add
pop
or
or
sub
out
and
or
xchg
negl
cmp
cli
xchg
sbb
sbb
adc
and
out
loopne
jmp
repz
jae
inc
xchg
or
add
mov
jo
add
xor
loopne
sbb
inc
lods
or
pushf
inc
adc
ret
divb
js
data16
add
and
lds
and
aas
pop
cmp
pop
js
add
pop
in
mov
pushf
or
call
enter
scas
jge
dec
aaa
push
pushf
ja
inc
jmp
pop
add
cmpb
sub
mov
xor
clc
imull
and
gs
mov
jne
sub
add
or
sbb
clc
dec
xor
popf
cmp
push
or
je
pshufw
mov
push
cld
sbb
ljmp
sti
mov
push
dec
push
sub
jo
pop
jae
push
cmpsb
addr16
adc
cwtl
add
les
dec
popf
into
popa
fisttps
jns
call
je
sar
shrb
push
xor
loope
and
inc
mov
popa
loop
inc
pop
push
push
cmp
sbb
int
cmpsb
pop
sub
push
mov
push
pop
cwtl
jp
jg
jmp
lods
or
clc
js
ljmp
add
test
inc
sub
mov
inc
cmpsl
push
mov
inc
movsb
mov
add
out
sub
and
fdiv
dec
pop
jae
test
enter
popa
dec
es
jl
push
adc
jl
adc
inc
mov
mov
or
sub
outsl
sub
popf
jne
fimuls
add
inc
push
rcll
mov
cmp
jbe
ret
lret
push
popf
enter
add
jmp
das
mov
inc
pop
push
lret
and
sub
sub
and
add
cltd
nop
sbb
cli
pop
inc
icebp
add
inc
daa
or
mov
or
je
inc
inc
les
daa
inc
icebp
in
mov
and
pushf
jno
inc
xor
dec
insb
xchg
or
in
sub
push
adc
js
xchg
xchg
or
dec
dec
jo
mov
dec
fs
inc
leave
out
xchg
je
fisubl
in
clc
aas
scas
xchg
push
sbb
sub
sub
inc
jo
ljmp
inc
insb
xor
mov
lea
loopne
rcrb
scas
push
loop
jno
mov
mov
push
rolb
stos
mov
outsb
data16
adc
rcl
pop
push
add
or
mov
int3
sbb
ss
or
pop
ja
shll
add
sbb
push
dec
das
jmp
lahf
lods
xchg
shlb
cwtl
mov
cmc
adc
mov
adc
outsl
ret
addr16
adc
in
cmc
fistpll
jle
push
xor
pop
div
rolb
lret
test
jb
or
and
mov
mov
pop
scas
mov
jmp
lods
inc
adc
adcl
adc
sbb
push
adc
xor
dec
shlb
push
mov
adc
lock
push
jmp
dec
loopne
mov
js
cmp
sbb
inc
fisttpl
sbb
and
dec
stc
push
inc
in
clc
orl
popf
xchg
cs
add
jne
or
or
adc
push
je
jmp
ret
jo
dec
xlat
outsb
push
shlb
adc
sub
sub
jne
push
push
insl
bound
adc
adc
xchg
add
or
lret
fidivrl
clc
int3
add
fs
mov
lcall
imul
mov
iret
jb
cs
xorb
xor
sti
ljmp
add
stc
cmp
jb
neg
and
je
sub
mov
out
lds
jle
sub
jne
mov
or
rorl
lret
or
add
stos
mov
dec
idiv
movsl
ljmp
jae
dec
fsts
call
push
ret
rclb
pusha
dec
jl
mov
or
xorb
fsub
or
jnp
push
das
stos
jne
sub
stc
xchg
xor
push
sub
rorl
and
cmp
insb
sub
xchg
sub
jb
or
scas
pop
push
pop
and
sbbb
jne
fnstcw
cmp
and
clc
jg
mov
push
jnp
sti
add
movd
movaps
mov
enter
fldt
shlb
jle
xor
cli
pop
cli
and
push
ror
test
decl
bswap
imulb
lret
or
jg
ljmp
adc
jnp
mov
mov
and
ret
or
incb
pop
inc
adc
mov
cld
pop
add
neg
roll
jbe
and
pop
sti
mov
int
sub
fcmovb
sbb
dec
pop
ja
adc
mov
pushf
push
mov
leave
iret
into
testb
out
orb
jg
add
rolb
pop
add
mov
mov
je
mov
jb
test
mov
push
dec
lods
mov
lcall
xchg
rol
std
add
cwtl
pop
fwait
rolb
and
pop
cltd
dec
cmc
movsb
faddl
and
setae
insl
popa
ficoml
dec
pusha
mov
lock
adc
ret
mov
jmp
push
push
pop
dec
mov
push
sub
add
dec
pop
shrb
idiv
ja
mov
aas
lea
je
adc
push
jne
inc
cmpb
out
orb
add
mov
inc
inc
into
xchg
and
loope
adc
or
lret
fmuls
cmpl
daa
mov
push
push
xor
ljmp
repz
into
clc
jmp
mov
sbb
pop
cmp
je
mov
push
xor
adc
incl
xor
add
out
mov
xor
sysexit
sbbb
in
cmp
adc
push
adc
popf
loopne
loop
adc
popf
ss
and
jge
jns,pn
push
pop
inc
or
mov
inc
push
jne
popa
imul
pusha
daa
mov
sbb
movb
and
lcall
sbb
leave
ret
jmp
or
adc
and
push
adc
cli
aaa
ss
enter
cmpsb
rcll
rorb
subl
aas
dec
adc
cmp
ficompl
jnp
je
push
pop
lcall
data16
rclb
inc
or
dec
inc
jns
rolb
inc
inc
or
cmc
hlt
pop
lret
mov
jecxz
add
adc
out
js
mov
add
jne
orl
ljmp
cs
push
pop
mov
inc
adc
dec
or
mov
inc
mov
and
int3
mov
dec
nop
sbb
push
adc
outsb
push
push
jp
inc
cmp
aas
push
sbb
pop
aaa
jmp
mov
adc
inc
loopne
xor
pop
lret
sbb
jmp
push
jl
je
shlb
sub
mov
roll
fists
sbb
or
scas
mov
jb
dec
push
mov
sub
or
rol
shlb
aas
data16
add
mov
add
adc
aam
testl
ss
push
jmp
add
mov
pop
movsl
push
movsb
pshufw
push
scas
push
dec
fidivrl
adc
adcb
pop
dec
pop
roll
arpl
sub
mov
push
rcl
add
pusha
cmp
cs
mov
das
mov
adc
mov
fwait
cwtl
jne
or
pop
inc
inc
ret
jl
hlt
pop
jl
adc
mov
cmp
insl
cmp
aad
jo
adc
jne
out
add
es
cmp
or
inc
xor
mov
cmp
mov
cld
in
dec
leave
es
loope
or
cmp
jne
dec
jmp
adc
aam
shl
xchg
mov
jne
inc
aaa
push
lds
mov
push
inc
xor
sarb
inc
retw
sub
fcmovbe
rcll
pop
inc
pushf
push
or
inc
stos
testl
ljmp
test
fsubl
cmp
xor
or
dec
jp
cmp
and
sbb
xor
pop
pop
jne
inc
inc
cld
push
mov
adc
negl
cmp
cmp
jb
rep
jmp
mov
add
stos
and
enter
aam
rclb
andps
push
xor
rcr
push
inc
add
inc
add
add
xor
in
lods
adc
cltd
outsl
in
inc
lea
push
dec
add
dec
cmpsb
nop
inc
xor
nop
dec
jae
xchg
mov
sahf
out
mov
movsb
push
pushf
xchg
mov
je
inc
mov
mov
call
out
in
lock
add
jns
hlt
clc
clc
cld
ret
lock
je
mov
lock
sbb
xchg
jns
jmp
or
nop
and
fildl
inc
cmp
sbb
lea
dec
scas
mov
pop
and
std
fmull
fwait
pop
cld
out
ds
neg
sarl
or
in
enter
stc
sub
jns
pop
nop
push
jo
xchg
mov
sub
add
push
adc
inc
push
out
push
add
lods
pop
push
mov
mov
fs
sahf
notl
xor
and
out
sub
cmp
jns
out
ss
sbb
adc
jns
out
adc
or
test
jns
or
add
lock
cmp
insb
push
je
cwtl
sub
push
add
inc
pusha
mov
pop
ja
je
push
pop
push
addb
cwtl
jbe
rcll
mov
jae
cmc
jmp
imul
clc
and
mov
add
mov
lahf
nop
push
cmp
fidivs
ljmp
add
push
lahf
lea
or
jp
leave
jb
push
push
inc
push
xor
sbb
adc
mov
push
push
movsl
or
rcrb
fdivr
inc
lds
inc
jl
pop
popa
popf
inc
pop
push
xchg
daa
test
push
pop
pop
adc
cmp
xchg
cmp
and
xor
pop
add
add
int
sub
mov
daa
inc
ret
int
push
test
imul
jae
xor
sarl
pop
inc
xchg
push
pop
popf
jmp
and
js
sbb
inc
xchg
inc
and
push
mov
xchg
sbb
jne
pop
and
and
mov
inc
dec
sbb
rcll
es
lcall
push
rcr
jle
pop
ss
xchg
arpl
sbb
dec
push
jbe
sub
dec
js
testb
cmp
pushf
mov
cmp
fadds
push
cmp
push
lret
sub
fimuls
jne
push
adc
or
mov
inc
mov
jne
pop
xor
sbb
jns
or
inc
insb
jb
je
jne
or
jbe
xchg
adc
xor
add
aaa
in
jecxz
rorb
test
movsb
jle
or
loope
mov
or
loop
sbb
adc
iret
es
jnp
ss
push
inc
xor
mov
add
test
je
jbe
jb
js
mov
add
adc
divl
je
push
inc
aas
pop
and
nop
adc
jg
cmp
inc
shll
jns
ja
pop
adc
andb
loop
mov
cs
or
and
or
adc
lock
inc
inc
ret
inc
les
xor
mov
je
adc
outsl
inc
xor
jmp
cmp
jne
pop
popf
inc
xor
push
or
cs
mov
popa
test
xchg
jb
jo
add
push
xchg
fistl
cmp
imul
push
adc
inc
push
lods
mov
cmpsb
xlat
adc
ljmp
jne
sahf
xchg
sub
lahf
pop
or
add
jg
roll
aaa
push
or
sub
ljmp
mov
adc
jmp
push
sub
loopne
dec
inc
lods
sub
ss
fs
or
popf
icebp
ds
je
or
je
std
inc
sub
adc
gs
add
cs
lret
inc
inc
pop
fiaddl
sbb
add
or
neg
push
fcoms
jg
fcoms
sub
fldt
sub
ja
pop
jbe
lea
adc
sbb
xor
repnz
and
leave
push
sbb
pusha
adc
dec
iret
int
push
clc
jbe
add
and
adc
out
fs
mov
pop
or
or
cmp
pop
lods
fcoms
jmp
push
add
sbb
sbbb
add
xorl
mov
int
or
jle
mov
cmc
je
andl
cmpsb
inc
inc
push
repnz
arpl
hlt
mull
push
aam
test
out
inc
fisttps
and
inc
rcrb
leave
push
sub
notl
arpl
jo
push
or
cmc
inc
out
mov
lock
jnp
push
push
add
loopne
adc
and
add
inc
js
inc
xchg
aam
adc
or
cli
test
or
rorw
rolb
push
test
shrb
cmp
rol
sub
lea
and
xlat
or
mov
add
out
pop
out
pusha
or
mov
pop
add
push
adc
fxch
scas
jo
rclb
push
outsb
sub
push
xor
inc
rolb
dec
cmp
sbb
mov
arpl
mov
add
aam
loop
or
dec
jne
jmp
xchg
adc
stos
shl
cs
push
loope
mov
dec
jne
mov
ret
xor
cltd
jo
scas
sahf
xchg
stos
push
cmpl
pop
xor
enter
lcall
pop
movsl
in
pusha
mov
insb
dec
mov
jo
mov
into
loopne
add
nop
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
bound
dec
call
aam
adcl
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fistpl
jmp
scas
adc
in
adc
adc
inc
inc
inc
mov
out
cmpsl
ds
test
xor
or
repnz
and
mov
mov
test
mov
lret
test
xorb
shr
mov
dec
and
push
repz
sub
or
pop
inc
js
adc
mov
inc
cmp
or
xor
inc
push
addb
inc
add
adc
or
mov
dec
dec
or
or
adc
in
pop
pop
and
and
pop
pop
insl
cmpsb
xor
dec
and
js
arpl
cmp
add
fiadds
mov
sbb
nop
xor
nop
dec
or
sarl
or
adc
adc
adc
dec
jge
push
add
mov
pop
add
xlat
xchg
dec
xchg
jne
fdivrs
sub
mov
je
mov
mov
cmp
jg
add
inc
sub
add
mov
loope
je
jg
jo
mov
adc
push
push
push
push
adc
sbb
into
cmpsb
and
mov
in
adcl
nop
push
xorl
xchg
out
lmsw
lea
sbb
or
jno
and
adcl
jmp
or
ljmp
clc
addl
pop
es
pop
lock
adc
sub
push
in
add
push
subl
mov
dec
adc
in
add
xchg
push
test
shlb
mov
add
rol
loope
add
insl
mov
ljmp
in
mov
add
mull
add
mov
repnz
idivl
clc
and
scas
mov
shlb
dec
shll
or
adc
or
mov
sbbb
add
je
add
fcoml
xchg
in
fmuls
lock
and
sub
and
add
or
sahf
adc
ficoms
jno
mov
sbb
jbe
xor
and
or
add
adc
sub
push
test
lock
int
fs
jne
pop
mov
push
adc
rcrl
inc
or
sti
mov
stc
and
mov
inc
je
mov
lea
neg
mov
mov
mov
sbb
or
add
jmp
or
mov
out
sbb
mov
or
sahf
sbb
scas
mov
pop
add
mov
inc
cmp
jb
jnp
add
jo
roll
orl
mov
pusha
pop
ret
and
push
mov
push
scas
adc
adc
gs
ret
iret
and
hlt
pop
push
sub
or
scas
shl
push
adc
xor
mov
divl
lret
scas
add
inc
dec
stc
addl
xor
add
loope
jne
and
mov
out
or
add
jne
pop
orl
inc
movsl
push
stos
ljmp
out
repz
mulb
pop
adc
jmp
pop
addr16
mov
sub
cld
sbb
add
add
aaa
adc
jno
and
xor
adc
or
xchg
rorb
jns
aas
aaa
or
jl
and
lret
push
add
les
cmpl
pop
ljmp
flds
mov
xor
inc
lods
icebp
mov
pop
mov
inc
jmp
cmp
sbb
data16
add
add
sub
pop
inc
pop
das
adc
mov
lcall
jg
arpl
push
xor
xchg
push
js
or
and
pop
or
adc
pop
mov
dec
add
mov
pop
push
ret
loopne
lods
adc
mov
mov
clc
dec
mov
and
je
sub
dec
loopne
or
lea
sbb
and
inc
stos
test
and
sbb
ret
or
push
jecxz
sub
add
fstl
sbb
and
dec
push
rcrb
scas
movsb
and
movsb
in
mov
mov
push
adc
shl
cld
xor
cltd
sbb
adc
sbb
test
inc
xor
or
call
out
inc
push
loop
rcl
push
mov
push
insb
dec
push
and
aas
pop
bound
sub
and
lock
jne
mov
inc
lock
mov
inc
mov
jne
fs
inc
or
les
add
lret
add
pusha
flds
push
and
lock
push
and
jp
xlat
mov
inc
lds
push
jge
inc
or
addl
xor
cmpsb
sbb
dec
or
pop
xor
push
andb
call
adc
dec
or
shlb
ljmp
jne
add
lock
or
push
dec
jno
mov
les
sti
add
scas
mov
jb
lea
push
mov
ja
or
adc
xor
push
pop
cmp
fiaddl
outsl
fwait
clc
mov
in
dec
je
inc
cmp
lcall
test
jl
pushf
xchg
mov
popa
mov
jne
jno
pop
sbb
pusha
sub
out
adc
pop
or
push
sub
shll
movsl
pusha
push
mov
mov
mov
in
mov
dec
add
push
testb
call
imul
push
mov
pop
aas
outsb
and
outsl
mov
mov
shrb
add
jmp
mov
arpl
mov
jle
lret
in
jp
mov
inc
add
clc
inc
hlt
sbb
mov
pop
sub
push
loope
cmpsb
inc
sub
sub
mov
add
inc
fdiv
push
loopne
add
in
sub
mov
mov
inc
shrb
nop
and
add
xchg
fidivrs
sbb
pop
push
adc
cmp
or
jnp
dec
je
add
rcrb
cmp
adc
mov
data16
push
or
push
mov
and
jmp
xor
add
loop
or
shlb
mov
les
fiadds
mov
rdpmc
mov
xor
push
adc
sahf
xchg
add
sub
pop
mov
push
jge
or
or
jno
rcrb
jbe
inc
shrb
jmp
movl
push
dec
adc
lods
sarb
push
push
push
aaa
jne
mov
push
data16
pop
addl
jnp
add
or
jne
pop
pop
pusha
sub
jbe
pop
cltd
pop
idiv
decl
jl
pop
les
add
pop
stos
scas
lcall
cltd
cmpsb
push
cmc
inc
xor
rol
imul
adc
mov
mov
adc
enter
pop
sub
ljmp
pusha
add
in
dec
test
pop
push
pop
inc
jmp
mov
mov
and
mov
push
dec
fdivrl
sarb
dec
rclb
repz
push
jle
adc
or
repnz
out
or
add
or
sbbb
divb
push
and
xchg
loopne
mov
mov
rolb
js
add
call
stos
push
fcoms
lock
push
in
add
sbb
adc
or
add
addl
mov
cmp
jb
sub
jno
fmuls
pop
sbb
bound
mov
mov
push
or
lods
idiv
adc
lods
popf
add
fs
jmp
daa
adc
inc
je
ss
pop
add
mov
sbb
popa
loopne
dec
ret
or
jbe
cli
dec
sti
xchg
push
movsl
jmp
dec
je
add
or
faddp
jp
pop
pop
cmp
bound
insl
popa
fs
sbb
add
jmp
sub
imul
sub
push
rcr
mov
xchg
add
sub
mov
pop
push
push
stos
push
mov
mov
lea
test
andb
xor
push
add
xor
arpl
xchg
pop
pop
clc
or
mov
push
push
addr16
clc
jbe
jne
mov
addr16
add
dec
roll
jne
xchg
dec
xor
imul
int
xchg
test
je
mov
in
sbb
and
test
movsb
dec
xchg
cmovp
pop
jns
je
mov
or
mov
loopne
xchg
push
mov
adc
cmp
add
ds
sarl
iret
or
js
jbe
xchg
pop
xchg
push
leave
add
ja
out
jns
pop
rorb
add
dec
pop
jne
punpckhdq
inc
xor
sub
cmp
call
pop
add
or
or
sub
jo
ljmp
sbb
push
jae
lods
pusha
xchg
or
pop
jns
jmp
cmp
jae
inc
jne
sbb
sub
adc
sbb
or
in
ds
add
adc
test
js
mul
mov
sbb
std
add
add
sub
bound
pop
test
sub
out
rclb
pop
call
insb
xchg
xchg
rcr
test
adc
test
jns
sbb
dec
jo
popa
shll
out
sbb
outsl
or
mov
pop
mov
mov
adc
pusha
dec
scas
lods
xor
xchg
cli
or
lea
in
or
xchg
and
dec
pop
and
nop
xchg
jo
addr16
rclb
int
add
mov
xor
or
pushl
cs
sub
push
pop
mov
sbb
ds
mov
outsb
dec
test
pop
sub
es
mov
pushf
rcl
add
push
dec
ret
push
jo
shlb
into
sbb
imul
cmp
lret
push
imul
dec
sbb
push
inc
test
pushf
xchg
lods
movsl
stos
sbb
mov
notl
cli
insl
or
cmp
dec
xor
ret
push
nop
loopne
xor
jl
inc
inc
cmovbe
jp
inc
data16
jge
sub
cmp
pop
sub
adc
stc
xchg
clc
push
xchg
mov
mov
mov
fs
cmc
mov
fs
dec
push
mov
cwtl
jmp
loopne
inc
push
mov
pop
adc
xchg
mov
shlb
out
rcll
xchg
add
cmp
sub
les
mov
jmp
cmp
or
mov
pop
movsb
inc
mov
jo
push
and
addr16
daa
mov
and
and
inc
xor
aas
lods
inc
lea
inc
cmc
or
insl
push
cmp
pop
sets
push
pop
sbb
pop
repz
push
loope
push
mov
jg
loopne
test
aam
nop
flds
dec
rcrl
mov
inc
fdivrs
mov
lret
inc
pushf
insb
sbb
aaa
xorb
stos
ja
and
mov
inc
leave
add
lds
mov
icebp
or
shrb
cwtl
jge
orb
or
loopne
in
scas
aaa
jb
adc
insb
jecxz
pop
mov
cwtl
ror
push
popa
push
mov
push
insb
scas
and
jmp
push
and
ss
mov
inc
sbb
cmp
xchg
jl
jge
mul
add
cli
mov
dec
test
cmpsl
stc
cmpsb
mov
movsb
sbb
inc
sbb
mov
sub
push
shrl
and
ss
dec
jo
inc
sbb
add
pop
in
call
add
and
dec
sbb
cmp
pop
pusha
cmpsl
sub
jne
jmp
shll
inc
stos
ret
lahf
or
andb
out
imulb
test
lret
stc
and
mov
out
or
dec
cld
jmp
adcb
inc
add
and
stos
in
push
int3
add
dec
add
scas
sub
inc
dec
pushf
ja
or
mov
cmpb
xlat
adc
push
dec
call
in
shlb
sbbb
cmp
adc
push
sbb
jmp
pop
mov
dec
pop
xor
pop
or
loopne
int
stc
xlat
repnz
jle
aad
xor
mov
jno
fsubrl
sar
aaa
add
and
es
xor
into
je
fcmovne
lea
fisttpl
fwait
bound
popa
jp
lea
pop
bound
data16
popa
jns
push
repnz
scas
orb
dec
and
sbb
mov
xchg
repnz
push
jne
mov
mov
and
testb
and
leave
arpl
and
mov
jnp
push
push
fs
gs
fs
or
loopne
mov
push
pop
test
sub
incl
insb
sahf
out
sbb
or
fs
pop
add
icebp
hlt
cmp
xor
jmp
nop
push
lds
data16
in
adc
mov
inc
fcoml
les
adc
cmp
fadds
cs
push
ficomps
inc
pushl
iret
repz
cwtl
mov
jo
iret
rcl
iret
out
xchg
in
push
hlt
addr16
mov
jo
lcall
mov
sub
push
xchg
push
test
jo
pop
cwtl
es
adc
sti
dec
push
dec
lahf
pop
xor
sti
xor
or
je
mov
das
ret
js
jmp
testb
jne
mov
xlat
leave
lea
jle
rcrb
mov
sar
push
loope
arpl
test
imul
mov
xor
pusha
jmp
push
and
jne
push
mov
mov
stc
gs
push
loopne
lea
inc
and
cmp
call
jne,pn
out
and
bound
call
adcl
push
inc
or
push
std
push
inc
sbb
rcll
push
ss
push
clc
stos
mov
test
cmp
insb
in
movsl
ficompl
mov
in
push
fstl
in
dec
jne
sub
mov
aam
data16
mov
inc
shll
icebp
push
shr
cmpsb
add
aam
or
or
test
icebp
sub
cmp
pop
lret
pop
sar
imul
shll
add
jae
or
mov
cmp
rolb
pop
push
std
pop
inc
or
cmp
rcll
or
pop
dec
jae
and
sbb
xor
jge
sub
adc
pusha
out
inc
xchg
jmp
out
test
mov
rcrl
cmpsb
adc
dec
les
dec
cli
mov
mov
adc
cld
inc
pop
mov
movb
jmp
fcmovnb
jmp
std
add
sub
pushf
or
lahf
push
sub
mov
rclb
clc
mov
mov
sbb
or
repnz
push
loopne
or
inc
repnz
and
adc
and
and
adc
sub
mov
or
cmpsl
mov
add
daa
shl
jo
pushf
mov
or
cmpsl
jne
dec
mov
push
pop
in
jns
sub
clc
pop
adcl
data16
inc
dec
adc
adc
mov
jo
stos
test
js
test
adc
jmp
fs
cmpsl
fmull
int3
imul
shl
push
pop
add
int3
xor
or
push
insb
xor
dec
or
pushf
sub
shlb
dec
mov
nop
pusha
jo
mov
andl
hlt
data16
sbb
dec
ret
push
arpl
xchg
xchg
xchg
iret
loopne
fcoml
cld
ss
xchg
sarb
or
mov
les
push
mov
les
add
sbb
shrl
aam
aaa
rclb
inc
adc
lock
adc
and
in
xchg
data16
mov
push
pushf
push
stos
or
insb
repnz
leave
jb
adc
cli
ret
or
add
add
xchg
hlt
push
inc
lods
jns
add
jmp
mov
ja
jae
mov
sbb
jne
xlat
add
and
movsl
jo
test
add
fiadds
pop
loopne
or
xchg
outsb
jb
mov
cltd
jecxz
mov
push
loopne
adc
xchg
xor
push
cmpl
add
inc
sbb
daa
push
fisubrs
adc
pusha
pushf
pusha
lcall
dec
inc
sbb
in
sub
pop
divl
and
pop
sbb
cmpsb
xor
ds
mov
dec
and
push
dec
pop
mov
js
test
sbb
dec
ljmp
pop
mov
in
rol
mov
mov
arpl
push
sbb
push
pop
stos
and
faddl
adc
shlb
and
adc
fnstsw
adc
lock
or
xorb
push
xchg
fstps
and
in
bound
or
add
push
jmp
push
and
hlt
insl
mov
dec
orb
cmp
cmp
jne
push
cmp
test
jg
das
nop
mov
xchg
mov
push
aam
daa
sub
or
dec
jge
addb
cmp
mov
lret
shl
fdivrs
loopne
cmp
add
addb
movl
xchg
test
test
cs
lahf
xchg
out
rclb
xchg
loopne
cmp
cmpsb
or
pop
sbb
dec
cmp
sti
movb
pop
lahf
lea
push
pop
ja
inc
lds
sub
testb
int
cmp
test
sbb
push
sar
pop
outsb
xchg
mov
movsb
loop
es
pop
mov
pop
jp
mov
sub
rcr
mull
pop
clc
les
lret
push
add
je
or
sub
mov
fldcw
or
add
xchg
lret
and
jnp
sbb
test
rorl
and
sti
mov
cld
adc
fadd
ja
fdivs
add
adc
push
adcb
imul
repnz
ja
pop
sbbl
mov
mov
mov
dec
es
pop
sbb
hlt
hlt
stc
addb
or
inc
insb
adcl
aad
test
xor
ds
jo
push
mov
add
in
out
in
adc
and
js
and
fadd
add
cmpb
and
xor
movsl
je
in
adc
incl
insb
cmp
sbb
imul
jae
and
pop
rolb
add
jmp
cmp
lea
in
das
add
mov
add
sbb
sbb
jae
movsl
dec
jle
inc
je
pop
push
or
and
add
mov
mov
inc
movsb
mov
and
dec
adc
adc
popf
fisttpll
push
arpl
notl
mov
js
xor
fisttpll
or
jne
das
mov
dec
pop
gs
add
jecxz
or
dec
and
in
ret
xchg
lret
xorl
clc
dec
mov
sub
loopne
mov
rorb
fldl
fsts
add
sbb
inc
inc
push
sbb
jl
insl
cmp
push
xor
pushf
sub
rorl
dec
mov
sbb
ss
popf
add
cmp
pushf
loope
adc
test
push
mov
mov
dec
mov
xor
mov
push
out
lds
minps
pop
mov
pop
lret
inc
lods
xlat
mov
jle
sbb
mov
dec
xor
dec
jp,pt
mov
xor
and
lea
out
pop
cmp
jns
movsl
sbb
ret
dec
test
sub
outsb
jo
jmp
or
ret
addr16
mov
pusha
je
or
sub
mov
outsb
test
insl
sbb
pop
mov
push
and
fisttps
jnp
scas
subb
xorl
push
xor
xchg
daa
sub
adc
jp
fisttps
mov
sbb
or
add
jp
fcoms
xchg
push
add
mov
sbb
cli
jge
movsb
addr16
mov
jmp
cmp
jle
mov
out
mov
cmp
scas
jo
jno
mov
pop
dec
movsb
push
test
popa
and
adc
or
shr
push
push
insb
dec
mov
dec
inc
cmp
mov
inc
cld
adc
sbb
mov
mull
push
xchg
sub
inc
sbb
orb
sub
repz
sbb
jnp
adc
push
push
push
scas
data16
push
pusha
pusha
cmp
call
lds
sub
adc
jmp
je
xor
hlt
sub
xor
cld
or
fcomp
cmc
rorb
add
push
les
mov
xchg
js
pop
push
push
into
sub
dec
and
jno
fisubl
inc
mov
rcll
loope
inc
lret
dec
adc
sub
dec
push
sahf
or
inc
cmp
add
andb
pusha
xchg
push
bound
fcoml
mov
push
jl
ficompl
cwtl
scas
jecxz
jnp
or
sbb
mov
jl
mov
mov
ja
andl
mov
or
ficomps
jbe
sbb
shlb
and
inc
push
das
add
stc
cltd
push
lret
iret
sbb
shll
ss
jns
repnz
sahf
add
clc
bt
sub
sub
inc
scas
xchg
mov
ljmp
sub
inc
into
orb
shlb
addr16
stc
add
inc
jmp
movsb
xor
push
jmp
dec
loopne
xchg
repnz
repnz
sar
ret
dec
inc
add
fwait
stos
pop
inc
add
js
inc
sub
mov
add
sub
fimuls
add
cmp
sub
dec
pop
push
mov
fcoms
mov
dec
sti
in
jle
cmp
and
dec
xor
pop
shlb
rolb
jg
and
addl
inc
idivb
test
lds
add
xor
add
jo
add
addr16
ds
addl
push
push
jle
cli
mov
test
loope
daa
rol
lret
lcall
sub
push
pop
int
fldcw
daa
cmpsb
mov
mov
add
arpl
add
add
les
fistps
std
out
movsl
daa
pop
mov
mov
inc
sbb
pop
push
cli
movsb
adc
cmp
xlat
std
mov
mov
jne
push
mov
pop
adc
in
mov
inc
sub
jb
and
jo
out
sahf
or
out
jno
sbb
xorl
push
push
xorb
repz
cli
movsb
nop
mov
dec
lods
sbb
xchg
and
pop
adc
xor
sbb
pop
mov
jp
adc
int3
test
repnz
pop
ret
adc
xchg
or
lcall
leave
or
mov
mov
cmpsl
repnz
dec
add
lds
push
test
push
addb
mov
pop
and
lods
ret
sub
cmc
dec
xlat
mov
pop
and
mov
push
push
or
in
or
movsl
in
add
test
loop
ss
mov
shll
iret
jb
imul
add
enter
ret
sub
cmp
sub
or
mov
sbb
loopne
test
dec
adcb
outsb
les
or
push
pop
or
mov
or
jmp
loopne
xor
out
in
mov
jge
ret
aas
sbb
fadds
or
mov
in
pop
test
sbb
pushl
insl
and
lahf
and
test
jp
add
push
mov
stos
mov
stos
loop
jmp
pop
push
faddl
adc
repz
push
adc
jmp
inc
loopne
pop
es
loopne
pusha
outsl
loop
cmc
jge
subl
mov
loopne
xor
imul
outsl
loop
cmpsl
or
adc
fbld
aas
mov
adc
add
xor
push
pop
sbb
jp
test
fwait
stos
jge
int3
dec
aam
lock
and
mov
out
andb
out
scas
add
jb
aad
fdivl
mov
inc
push
mov
insl
or
push
ds
sbb
jp
add
add
pop
out
and
pushf
and
xchg
addb
mov
mov
or
push
pop
pop
ds
mov
xor
popa
shrb
leave
mov
mov
cld
insb
push
sti
cmp
loopne
mov
xor
xor
ss
inc
push
sub
scas
arpl
jnp
roll
jbe
sbb
mov
sub
fcoms
push
inc
sar
lods
sub
lret
sbb
adc
mov
aam
sub
jne
lock
in
xchg
push
mov
popa
mov
sti
or
pop
push
add
arpl
lods
cmp
lock
inc
enter
es
mov
mov
ds
sbb
loopne
call
add
jecxz
in
sbb
outsb
sti
std
and
rorb
or
sbb
ret
cmc
jo
jo
shl
pop
mov
jecxz
sub
mov
les
jecxz
push
imul
xchg
inc
test
mov
inc
js
push
add
in
sahf
pop
push
ret
mov
mov
mov
jmp
cmc
or
pop
mov
push
add
faddl
add
push
pop
negl
addl
adc
lea
loopne
push
pusha
mov
xor
test
stos
sub
leave
sahf
dec
test
inc
lock
popa
std
push
mov
adc
fdivl
xor
ret
outsl
test
loopne
shlb
add
xor
dec
sbb
or
in
dec
mov
int3
sbb
sbb
enter
pop
or
or
out
sti
sbbb
push
fwait
pop
cld
dec
xchg
and
test
fsubrp
jge
loope
inc
mov
out
call
gs
jg
xor
or
adc
and
jb
hlt
mov
jo
jmp
xor
inc
rolb
xchg
and
fadds
mov
cmc
mov
add
dec
enter
insb
cs
cmpl
xchg
pushf
sub
je
rcl
enter
add
adc
lret
test
jae
mov
aaa
cmp
dec
adc
lret
test
mov
sub
divb
xchg
xchg
add
lods
add
cli
or
push
pop
xchg
mov
ljmp
and
dec
movsl
pop
les
jmp
and
rorb
mov
mov
test
add
lock
xor
mov
les
sbb
enter
pop
add
cmp
popf
lcall
sahf
jbe
cli
pop
ja
mov
fstpl
mov
jo
xchg
les
add
sub
sbb
add
mov
pop
shrl
lock
xchg
mov
mov
mov
cli
out
dec
pop
shrl
xor
and
in
data16
adc
mov
push
sub
pop
add
fdivs
mov
xor
mov
nop
inc
adc
stos
gs
cltd
jbe
mov
mov
and
hlt
adc
mov
push
jns
mov
inc
shlb
cmp
jbe
jne
jbe
or
pop
and
scas
cmpsb
sbb
notb
add
cmpsl
inc
cmp
mov
xchg
xor
fwait
cmp
inc
cmp
es
push
add
int
xchg
dec
mov
in
nop
xor
inc
lcall
rcll
cmp
xchg
mov
bound
mov
imul
push
jb
clc
adc
add
fmuls
cmpsl
test
stos
ret
mov
push
mov
or
call
push
cs
int3
xchg
and
inc
cmpsb
fwait
call
mov
mov
fwait
mov
sub
std
add
sub
enter
insl
and
push
add
xchg
pop
notb
sbb
in
mov
xlat
push
repnz
rolb
adc
mov
push
and
push
mov
stc
pop
push
dec
andl
call
push
cmp
xchg
sub
cmpsl
inc
xchg
sub
or
mov
mov
in
test
in
xor
mov
mov
sub
xchg
call
nop
fcompl
add
xchg
xchg
or
or
inc
stos
aad
nop
repz
dec
gs
bound
cmp
pop
call
aam
enter
nop
das
mov
nop
or
fsubs
adcl
mov
sti
xchg
aam
test
in
outsb
aad
test
xchg
pop
subb
daa
pop
lods
cmp
lods
cmc
imul
lods
push
push
mov
orb
adc
insb
lcall
mov
repz
addl
ror
adc
rcrl
or
daa
cli
les
jbe
daa
js
xchg
sub
pop
push
into
lret
inc
sub
dec
roll
xchg
ret
xlat
gs
add
lea
fwait
repnz
lods
mov
nop
outsb
mov
jmp
vmovhps
cmp
mov
mov
mov
das
add
cmp
rclb
adc
into
dec
add
dec
add
sahf
pop
vprotb
pop
shr
lds
cmc
mov
int3
jg
ss
dec
add
dec
iret
fildll
or
add
add
or
cmp
and
enter
or
jne
sub
dec
cs
inc
mov
xor
jo
push
fldt
sbb
rcrl
mov
sbb
add
bnd
movsl
add
fisttps
jmp
sub
lock
popw
or
add
ja
lret
mov
adc
or
insb
loopne
shl
mov
xor
mov
jb
mov
dec
lret
sahf
and
add
xchg
or
adc
rcrl
inc
xchg
inc
pop
sub
mov
pop
inc
outsb
call
adc
dec
popa
sahf
iret
imul
dec
xor
sbb
push
out
mov
xchg
sarb
imul
test
sti
inc
hlt
mov
mov
add
pop
orb
and
mov
add
fimuls
ja
sub
cmp
pop
pop
or
push
aaa
mov
rolb
push
xor
cmpsl
mov
loopne
ficoms
lret
cmp
stc
sbb
jnp
sub
adc
push
inc
inc
lcall
sub
jecxz
mov
call
push
sbb
lods
jmp
and
movsl
xor
mov
jbe
mov
loope
jmp
lea
lahf
push
push
insb
leave
sub
mov
adc
sti
fistpll
and
mov
dec
stos
mov
xchg
sbb
and
mov
mov
dec
jb
lods
lahf
push
pop
das
dec
aam
mov
adcl
jo
add
pushf
jg
and
ja
pop
xchg
jmp
std
push
stos
add
cmp
xchg
dec
sbb
js
pushf
pop
jno
sahf
sahf
out
mov
mov
addr16
dec
mov
insb
rcll
rorl
xor
and
push
cmp
sbb
adc
jne
movl
inc
mov
cmp
std
jne
mov
add
add
inc
lods
fstpt
jmp
xchg
push
inc
dec
or
and
andb
testb
xchg
cmpsl
mov
sbb
and
imul
mov
inc
rcrl
xor
into
std
fs
lcall
sbb
movsl
mov
push
in
nop
add
and
dec
aaa
inc
cmc
inc
mov
rolb
jnp
xchg
pop
cmp
or
push
call
loope
push
jnp
add
out
aam
fs
mov
leave
inc
imul
imul
cmpsl
jne
push
subb
adc
xchg
mov
sub
inc
jmp
jge
jle
loopne
cmpb
or
lcall
xor
faddp
add
cs
mov
jo
inc
xor
jge
add
jb
mov
test
inc
movsb
push
or
ja
sbb
mov
xchg
and
push
nop
les
inc
lahf
bound
xchg
sbb
rcrb
rcrb
push
mov
cmpl
inc
jbe
mov
or
or
inc
dec
jne
ss
xorb
cld
stos
mov
jmp
icebp
lret
addr16
jnp
cmpsl
cmp
iret
adcb
sbb
adc
aam
loopne
add
mov
sbb
lds
push
sbb
popa
int
xchg
cmp
adc
or
pop
mov
test
je
sarl
mov
lret
pop
es
pop
jno
xchg
dec
sbb
test
push
sub
cmp
es
push
pusha
mov
xor
xlat
testb
insb
ljmp
add
sti
add
add
push
lcall
or
clc
test
dec
jl
sbb
rorb
call
std
jnp
jge
mov
mov
into
jmp
lret
sbb
aaa
cmp
out
imul
out
and
ljmp
xchg
xor
xor
mov
and
mov
cltd
dec
jp
add
outsl
repz
loope
push
and
rcrb
and
jns
push
movsb
and
js
xchg
xchg
dec
cmp
js
sbb
mov
lea
inc
xor
cmpl
xor
add
cmpl
xchg
xchg
xchg
pop
ret
adc
sub
dec
addb
pushf
sub
pushf
inc
pop
jmp
test
add
pop
gs
decb
ret
add
mov
cld
inc
ret
je
mov
xorb
and
imul
mov
loop
lods
pushl
cltd
cmp
sbb
adc
lods
sahf
testb
sub
and
mov
fcmovu
mov
and
jl
xchg
insl
popf
shl
test
cwtl
daa
sbb
dec
enter
ljmp
popf
andl
pop
insb
and
cmp
inc
add
add
xchg
or
aad
jns
pop
test
add
pop
add
sub
xor
sub
fiadds
sub
cmp
mov
or
sbb
addr16
pop
je
addl
mov
sub
pop
icebp
add
in
addr16
test
jle
sbb
jo
outsl
xor
aaa
mov
aas
sub
sti
pop
pop
lcall
jp
push
dec
jb
inc
clc
jle
clc
ret
or
test
test
and
ror
les
hlt
inc
test
js
inc
test
test
imull
or
xor
aas
mov
scas
push
das
sub
aas
aam
outsb
loopne
vmread
addb
lock
test
add
add
jp
ficoml
cmp
popl
mov
add
jg
roll
fwait
lahf
mov
xchg
inc
jne
or
mov
sub
bound
pop
arpl
mov
popa
sbb
push
push
imul
std
and
adc
loopne
dec
xchg
clc
pop
dec
jg
push
mov
sub
push
push
inc
ds
aas
cmp
cltd
sub
fwait
inc
stos
xor
call
fnstcw
fnstenv
not
call
out
mov
adc
xor
and
es
mov
adc
sbb
in
push
cmp
inc
push
pmulhuw
pop
cmp
arpl
and
ds
push
adc
jecxz
adc
movsl
aas
jge
or
and
pop
cmp
xchg
cmpl
add
nop
mov
mov
jg
jno
mov
jge
adcl
push
fnstcw
or
movsl
push
fwait
pop
roll
cmpxchg
enter
xor
movsb
cmp
and
daa
pop
cmpsl
sahf
test
or
xchg
test
cmpsl
and
mov
in
mov
xchg
jo
into
mov
ljmp
dec
test
jge
inc
inc
stos
mov
and
fs
in
push
inc
pop
fldt
stos
add
inc
das
pop
jl
lock
xchg
arpl
push
add
in
adc
fwait
push
rcll
movsb
shlb
add
and
xchg
sbb
or
mov
xchg
and
mov
and
and
adc
xchg
add
sub
movsb
scas
add
loopne
or
test
mov
pop
out
inc
sub
mov
adc
js
push
xlat
jno
popl
xor
fs
cs
inc
lsl
sbb
or
inc
mov
sub
sbbb
pxor
push
push
lock
pop
or
cmp
loop
shr
je
movsl
sti
mov
fistpll
jg
push
inc
adc
and
xchg
dec
xor
pusha
jo
mov
lock
dec
jne
shlb
mov
sub
jmp
lea
or
or
divb
xor
fidivrs
add
push
sbb
add
jne
mov
je
sbb
cli
pop
pop
ret
lea
insl
cld
sbb
je
popf
fucomp
push
mov
bound
add
cli
shr
add
leave
inc
repz
pop
bound
push
inc
cmp
jb
cmp
dec
jecxz
in
adc
push
pop
mov
xchg
outsb
adc
and
adc
dec
fsubrs
adc
pop
or
and
not
and
or
mov
and
dec
sub
xchg
fildll
mov
mov
dec
je
pop
sbb
movsl
lahf
pop
add
push
mov
insb
pop
mov
and
movsl
sbb
push
add
ds
jp
imul
test
subl
je
push
or
lea
mov
mov
fadd
test
repnz
or
push
pusha
sbb
fwait
push
adcb
call
lock
adc
push
pop
push
xor
or
xchg
popf
aaa
enter
in
fidivrs
xchg
imulb
in
jl
popa
xchg
mov
inc
sbb
mov
jnp
jmp
das
add
pop
stc
lods
imul
cmp
sbb
je
or
add
cmc
clc
jmp
cmp
or
adc
jmp
add
push
sahf
ja
pushf
in
inc
mov
xorb
mov
call
mov
cmc
fmull
stc
sbbb
mov
das
sbb
mov
pop
aaa
jnp
jmp
adc
loope
pop
les
mov
adc
mov
adc
lock
xor
fstl
mov
shl
adc
rcll
jl
jne
lea
xor
fimuls
inc
pop
frstor
das
out
cmp
cmp
mov
idivl
outsb
ja
xor
adc
mov
cmpb
addb
pop
pop
frstor
jbe
mov
lock
inc
push
or
test
je
push
adc
nop
clc
inc
add
mull
sbb
pusha
or
and
pop
push
jbe
std
nop
je
push
cltd
jmp
inc
faddl
or
or
jmp
test
or
into
rcrb
testb
iret
mov
xchg
and
ret
and
push
push
test
mov
mov
fisttps
push
mov
push
lock
adc
jge
aam
jl
mov
test
cld
divl
adc
pop
xchg
and
pop
mov
push
sbb
inc
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
mov
sbb
or
add
adc
pop
pop
cmp
cs
lret
lret
test
js
pop
sarb
mov
std
mov
test
dec
adc
lds
dec
xchg
ret
jp
add
shll
nop
xchg
hlt
int
stc
psubsw
or
dec
ret
clc
pop
push
outsb
jno
idivb
in
xchg
rcrb
in
pop
xor
dec
or
mov
jle
mov
xchg
out
test
dec
pop
mov
cmpsb
es
inc
jb
mov
xorl
or
fdivl
jl
xchg
mov
add
xchg
jl
pushf
cmp
inc
lahf
dec
dec
jne
or
notb
add
xorl
addb
mov
lahf
ret
add
mov
in
xor
cmp
lea
call
add
sub
loope
arpl
push
or
insl
arpl
cmpsl
loopne
fiaddl
mov
sub
fwait
or
inc
loopne
ret
push
loopne
lahf
inc
fstpt
insb
jne
inc
sub
pop
aad
pop
std
sub
lret
and
ss
cmpb
jb
add
movl
je
mov
xchg
inc
hlt
icebp
xchg
cmpsb
shlb
cmp
push
jmp
movsl
test
pop
leave
xor
cmp
add
movl
mov
stos
pop
push
dec
loopne
adc
cmp
cmp
sub
scas
sub
ret
jp
push
clc
fs
jns
movsb
mov
pop
aam
into
ret
arpl
mov
or
sub
sbbb
or
sbb
cmc
push
inc
lea
scas
xchg
in
pushf
adc
imul
test
imull
popa
cwtl
fisubrl
mov
push
stos
pop
cmp
or
inc
cwtl
xchg
stc
sub
jnp
mov
lret
test
out
ret
movsl
add
jnp
shll
pusha
sub
rcrl
fcoml
je
jns
daa
mov
cwtl
das
loopne
in
add
xor
mov
cld
int
mov
mov
icebp
push
xorl
pop
sti
movsb
std
lea
enter
mov
subb
jno
sbb
inc
or
mov
or
adc
xor
lea
jp
pop
pop
add
adc
mov
mov
fbld
ret
sub
pop
hlt
add
mov
decb
jp
dec
lcall
std
and
xor
test
jecxz
js
lret
icebp
imul
xor
call
add
sub
pop
mov
dec
push
add
ja
mov
jb
inc
pop
arpl
add
cmpl
mov
rolb
loop
call
pop
mov
lret
mov
in
or
out
pop
lods
repnz
mov
imul
orb
sub
sub
mov
inc
rorb
pop
add
pop
cmpb
and
cmpsl
mov
inc
stos
sbb
xchg
lock
scas
test
mov
inc
daa
add
scas
jns
sub
sub
and
add
push
xor
popa
push
aas
stos
rcrb
xchg
out
scas
push
ret
sbb
inc
inc
inc
inc
push
adc
push
or
lret
inc
adc
enter
dec
inc
mov
pop
daa
inc
scas
daa
pop
jle
lea
xchg
and
lcall
push
push
or
sub
cmpb
pusha
popa
sbb
sub
dec
mov
or
jge
or
mov
jp
repnz
push
mov
push
mov
jmp
dec
les
in
cmc
rorl
dec
and
jle
jge
dec
jno
addb
push
sub
jge
test
sbb
jmp
test
sbb
in
push
or
jg
int3
cmp
out
or
jmp
push
clc
cmp
mov
dec
mov
movb
sbb
add
mov
or
rol
mov
lods
dec
sub
sti
fxch
adc
mov
mov
dec
lahf
fcomi
inc
and
jg
sbb
mov
je
nop
add
push
push
mov
cltd
aam
int3
xor
dec
nop
dec
lcall
sub
pop
dec
or
xor
jmp
int
nop
popf
movsl
mov
inc
mov
inc
add
adc
adc
adc
mov
cld
push
or
adc
pop
mov
lods
jo
pop
mov
mov
xchg
fistl
in
adc
mov
cmpsb
mov
mov
cmp
insb
sbb
test
push
cmpsb
fsubl
out
mov
cs
test
push
rol
sti
jns
sub
jle
add
push
sbb
add
adc
nop
mov
jne
dec
and
add
push
push
xchg
push
les
pop
dec
sub
xchg
int
imul
lcall
nop
jne
popa
mov
aas
xor
mov
or
movsl
mov
inc
xor
mov
push
mov
outsb
sub
mov
aaa
lods
lods
pop
fsubs
xor
lods
push
mov
and
lea
out
push
pop
pop
in
or
repnz
mov
dec
jb
xchg
xor
xchg
int3
mov
dec
jne
push
add
mov
jbe
addr16
jno
push
mov
pop
add
rorl
ljmp
aad
and
pusha
aad
movsl
insl
jne
repz
xlat
scas
outsb
insb
out
mov
xlat
jb
jecxz
xor
jecxz
dec
xlat
sbb
mov
xlat
adc
and
inc
xlat
inc
inc
mov
in
pusha
inc
inc
inc
aad
lds
ret
inc
aaa
add
mov
cmpsb
nop
sub
jbe
push
fldl2e
fs
lret
repz
mull
mov
inc
push
jb
jns
les
jno
inc
fcmovnu
inc
es
es
cmpsl
inc
push
dec
movsb
mov
and
cmp
outsb
fstpt
lods
outsb
cwtl
daa
xchg
dec
mov
pusha
fcompl
xchg
xchg
fstl
aad
adc
inc
mov
stc
aaa
add
mov
mov
mov
pop
lods
mov
pop
and
mov
sbb
movsl
dec
mov
xchg
mov
int
xchg
mov
mov
cmp
mov
push
enter
movsl
inc
jb
arpl
dec
pusha
fdivr
mov
leave
jne
iret
jecxz
fcompl
dec
iret
push
sbb
xor
movsb
test
push
jb
test
pop
enter
lods
minps
sbbl
rorb
sub
hlt
adc
out
fwait
out
movsl
mov
push
mov
jns
mov
add
movsl
inc
pop
adc
dec
div
mov
and
dec
mov
cmp
mov
xchg
ret
pop
je
addr16
jo
fwait
push
add
xchg
xor
bndldx
add
add
pop
push
mov
and
cmp
push
push
out
push
sbb
xor
sbb
popf
and
mov
push
popa
lret
add
mov
add
push
jg
mov
jnp
in
dec
add
dec
mov
sbb
pop
or
call
rep
shrb
lret
pop
fcomps
fs
xchg
testb
shlb
ds
inc
cltd
inc
loop
dec
pop
sbb
and
imul
test
hlt
mov
rclb
push
aam
jne
loope
adc
popa
and
mov
dec
add
xor
test
mov
xchg
push
repz
addl
shr
je
lahf
test
adc
fwait
std
outsl
xchg
lock
mov
or
pop
xor
ja
cmp
pop
dec
push
pop
outsl
inc
or
iret
outsb
push
jbe
jle
dec
addr16
iret
rep
ja
jo
int3
and
or
and
mov
pop
dec
in
xor
fistps
outsl
rorb
inc
out
mov
pop
call
push
jbe
mov
add
add
inc
or
aas
mov
or
push
negl
ret
mov
adc
shrb
lret
ret
mov
shr
add
popa
push
dec
les
jl
aad
xchg
adc
push
mov
lock
jge
and
rorl
insb
popa
or
mov
sbb
sub
push
mov
push
dec
or
sarl
cmpsl
je
addl
out
mov
je
or
bts
jmp
mov
cs
sarl
xor
les
pop
decl
test
dec
insl
jne
cmpl
idivl
add
inc
adc
and
cmp
and
in
pop
cmp
ret
pop
sub
or
fucom
ret
rcrb
mov
xlat
syscall
popf
addr16
pop
mov
push
cmp
lret
inc
rol
mov
dec
jbe
add
xor
and
mov
std
sub
mov
jne
cmpb
inc
mov
inc
loopne
pop
pusha
mov
inc
jns
clc
sub
mov
loopne
ret
andl
or
stc
mov
sub
adc
inc
fs
mov
cmpl
pop
subl
sbb
cmp
lea
in
inc
scas
cs
mov
jp
push
in
test
cmp
fs
pusha
addl
rcll
shll
shl
xchg
test
outsb
insl
loope
out
and
pop
cmp
mov
mov
sbb
mov
inc
rol
shrl
mov
fsubl
or
sbb
inc
cmc
out
and
or
jo
sub
or
xchg
dec
inc
dec
dec
enter
dec
or
jg
stos
dec
and
push
mov
pop
imul
adc
mov
jge
jmp
xchg
jmp
outsl
mov
gs
inc
fdivs
add
les
inc
sub
jecxz
push
shll
mov
inc
js
pop
add
incl
movsl
aaa
popa
xor
pop
insb
insl
ja
jecxz
pop
add
out
dec
jo
push
xlat
adc
int3
shll
and
cltd
inc
xor
push
adc
pop
orl
push
pop
inc
dec
pop
stos
add
xor
adc
pusha
xor
aaa
push
push
pop
pop
push
mov
mov
mov
lods
movsb
gs
pop
adc
jno
cld
enter
mov
or
dec
cltd
lcall
ror
pop
pop
sbbb
mov
je
or
out
sub
fidivrl
movsl
insl
inc
loop
adc
jmp
or
loopne
inc
cs
je
cmp
cmp
add
or
int
mov
js
and
cmp
push
clc
ljmp
popa
push
pop
jle
xorl
test
mov
adc
sbb
jnp
cwtl
inc
or
push
mov
stos
pop
xchg
and
cli
dec
sbb
adc
add
cmc
jmp
aam
les
xor
loop
mov
lods
pop
cmp
dec
enter
and
lods
dec
scas
decb
adc
mov
arpl
ficoms
cmp
sbb
jle
jae
jb
lcall
push
and
jae
lea
add
add
icebp
lret
pop
cmpsb
xor
push
lock
adc
orl
fisubl
dec
pop
push
test
loope
xor
add
dec
pop
add
negl
decb
js
push
je
cltd
call
clc
push
sub
lea
pop
inc
scas
dec
push
fnstenv
or
mov
mov
loop
int3
test
push
std
lahf
daa
add
push
push
pop
push
int
aas
sbb
fadd
mov
nop
xchg
rorl
mov
mov
lock
std
fnstsw
add
mov
adc
movb
xor
mov
xchg
pop
dec
inc
jle
or
cmpl
push
mov
mov
add
jl
aaa
call
mov
add
push
add
push
mov
push
inc
fidivrs
cmp
sbb
mov
add
addl
pop
lret
imul
faddl
add
xor
mov
cmp
or
rorb
es
jle
and
into
sub
shll
adc
cli
jmp
jno
mov
jle
sahf
inc
loope
mov
pop
pop
push
cmp
or
or
or
or
cmp
ret
add
xor
jmp
sub
push
fiaddl
addl
insl
xchg
leave
popa
lret
or
hlt
incl
clc
sbb
dec
jmp
push
insl
scas
mov
repz
push
mov
testl
sub
mov
push
pop
jmp
lea
jle
inc
gs
cmc
cmpsl
loop
sbb
cmpsl
pop
jmp
sub
push
aaa
xor
sub
mov
jne
jmp
mov
add
or
xor
push
mov
movl
mov
lds
adc
out
push
sbb
idivb
adc
adc
or
test
dec
push
push
pop
mov
mov
lcall
inc
mov
and
cmp
divl
addb
test
inc
je
sub
pop
adc
xor
pop
sbb
lock
aam
lock
push
xchg
ss
sbb
cmp
cli
dec
jg
fdivs
out
repz
add
inc
or
mov
add
fstpt
test
jb
sbb
jae
inc
aam
inc
jl
ret
mov
sbb
push
sbb
lea
pop
pop
push
sub
push
lock
nop
popa
cmp
jecxz
or
sub
xchg
int
dec
jbe
pop
mov
add
or
xchg
fistl
imul
sub
rorb
xor
arpl
in
xchg
xchg
das
push
push
jb
pop
iret
and
sbb
addr16
lret
push
add
jnp
incb
insb
fs
enter
loopne
daa
jg
cmpsb
push
cmp
xor
xor
add
into
jnp
xor
or
mov
pop
inc
mov
cmp
testb
mov
adc
jne
in
cmp
inc
dec
pop
inc
jl
repz
js
push
jae
adc
push
push
popf
push
mov
cmp
or
dec
addr16
fnclex
dec
sbb
xchg
dec
add
cmp
lock
add
jmp
add
or
fdivrp
movb
or
leave
inc
sub
icebp
cli
rclb
adc
push
inc
dec
ret
jne
lea
fisttps
sub
in
hlt
lock
pop
lock
and
or
adc
lods
test
sbb
addb
es
es
and
push
pusha
pop
test
inc
pavgw
add
dec
and
pop
push
adc
sub
pop
inc
and
add
stos
sub
lahf
sbb
cmp
jle
mov
dec
cmp
test
dec
inc
sub
shlb
hlt
jge
inc
push
sbb
popa
fdivrs
pop
and
or
mov
and
add
xor
mov
push
jo
sbb
nop
add
insb
data16
mov
std
into
xchg
enter
jecxz
aas
stos
xchg
addb
shll
jmp
out
mov
hlt
in
out
fucomi
sub
or
mov
es
sti
adc
ret
scas
test
test
jle
or
or
shlb
into
mov
dec
sbb
mov
insb
push
scas
mov
dec
ja
push
pop
ds
adc
push
inc
pop
dec
push
jmp
jns
sahf
testb
lock
insb
pop
or
jb
pusha
lods
and
or
push
push
insb
xchg
add
loopne
adc
orb
xor
outsb
adc
pop
lea
sub
and
sub
lret
sbb
push
inc
and
mov
mov
add
enter
ja
enter
add
jb
mov
pop
xchg
cmp
rcrb
popf
add
testb
pop
or
rorb
outsl
and
adcb
out
fucomip
inc
xchg
adc
push
lock
mull
sbb
xchg
lsl
push
loopne
ficomps
push
inc
shr
rcr
shr
rcr
or
sub
jno
mov
repz
dec
fs
outsb
nop
mul
pop
jb
cmp
or
cmp
or
cmp
add
sbb
adc
push
push
sub
or
ficoml
aam
cmp
iret
pop
ret
adc
xchg
sbb
inc
subps
rorl
jbe
add
lret
mull
lea
or
sti
mov
xchg
inc
in
sub
sbb
pop
fisubrs
mov
cwtl
pavgw
into
rolb
xchg
or
inc
jp
fldl
add
jb
sar
sarb
pop
fsubrl
sahf
or
sbb
call
sahf
stos
sbb
cwtl
pushl
in
in
add
les
loopne
mov
clc
or
push
inc
in
inc
push
jmp
dec
xlat
mov
mov
js
add
mov
push
xchg
sarb
xor
push
into
jmp
insl
rorl
or
xor
sbb
mov
popa
test
jl
insl
mov
shlb
clc
loop
and
test
jmp
dec
and
push
pop
ret
mov
nop
sbb
mov
data16
add
xor
rorb
jg
dec
inc
aaa
sub
push
pop
lret
jne
xor
jo
add
or
cmpsb
lock
inc
adc
iret
mov
cmp
mov
movsb
nop
paddq
sarb
cmp
mov
sbb
mov
shll
shll
es
fidivs
mov
pop
dec
or
push
loope
stos
xchg
inc
mov
inc
adc
mov
add
and
or
and
mov
push
jne
add
es
mov
sub
adc
pop
shrb
pop
outsb
push
iret
in
adc
push
jns
insl
mov
and
adc
jb
sub
sub
dec
rol
sbb
hlt
cmp
or
popa
clc
adc
inc
mov
jne
push
jo
push
adc
pop
ss
xorb
adcb
mov
or
addr16
sbb
mov
push
sbb
dec
cs
jb
add
out
ljmp
push
dec
subl
mov
popa
inc
xor
in
nop
jo
sti
inc
mov
sarb
sysenter
data16
cmpsb
not
jge
mov
sarb
ret
je
mov
ret
sub
sbb
xchg
fcmovnu
push
imul
add
rcl
movsl
sub
cld
scas
setge
sub
jl
or
mov
aas
jmp
adc
outsl
push
pusha
dec
in
cmp
adc
and
imul
and
insl
mov
dec
movsl
fisttpll
mov
adc
lcall
xchg
aad
nop
aam
lods
imul
js
sub
flds
fidivl
fcmovnu
jno
push
push
mov
mov
sub
inc
enter
sbb
movsb
icebp
sub
adc
xor
popa
subb
xor
xor
cmp
inc
jmp
faddp
lds
cmp
imul
add
push
pop
nop
outsb
jnp
push
cmp
xchg
push
adc
cmp
cmp
push
shlb
push
sbb
dec
call
cmp
shll
dec
call
adc
xor
sub
fcomp
mov
lahf
movsl
xchg
push
adc
cmpsl
rcr
and
add
lods
dec
or
push
stos
iret
mov
dec
sub
mov
pop
and
mov
es
cmp
jge
mov
lret
mov
xor
push
and
xchg
inc
bound
cmovno
or
sub
aaa
mov
cld
stc
sbb
mov
inc
movsb
dec
stos
mov
ret
add
dec
in
decl
cli
and
shl
sbb
pushf
sbb
xchg
add
mov
jns
and
cmpsb
ljmp
adc
push
cmpsb
cmp
xor
sub
pusha
mov
aas
nop
lcall
sub
pop
out
arpl
adc
orl
xor
sub
stos
push
je
adc
push
mov
ror
dec
pop
pop
xorl
arpl
fs
pop
mov
sbb
ss
sub
rclb
mov
stc
lods
mov
imul
addr16
pop
roll
imul
and
shlb
les
adc
ret
rclb
flds
add
out
nop
out
mov
and
mov
pop
sub
sbb
or
xchg
cli
adc
push
lea
lea
or
add
aas
pushf
and
add
xchg
cmpl
lods
test
aam
lock
add
mov
pop
xor
cmp
enter
sbb
dec
mov
xlat
cld
loopne
dec
pop
inc
mov
out
and
sub
jno
add
ret
pop
jno
push
ss
mov
ljmp
push
or
aaa
fwait
movsb
shrl
cmp
loope
xor
ds
pop
push
push
jns
jmp
push
ds
es
insb
adc
xchg
xorb
insb
dec
add
sub
icebp
mov
in
scas
jl
insb
popa
aam
popa
cvtpi2ps
inc
add
scas
sub
scas
mov
dec
xchg
cmp
and
rorl
and
arpl
pop
call
add
push
pop
push
or
xor
roll
or
add
or
shrb
push
daa
xor
jb
mov
scas
call
jno
sbb
movsb
mov
pusha
pop
pop
xchg
xor
xor
pop
stos
dec
mov
orb
test
or
cmp
push
or
sarb
sub
dec
pusha
outsb
mov
fdivrs
fmuls
clc
movd
and
mov
jmp
pop
lret
lcall
xorb
inc
popa
dec
loop
nop
mov
into
clc
das
xor
mov
pop
gs
orl
xlat
rolb
add
sbb
xchg
arpl
jae
pop
push
jge
ret
push
adc
faddl
sub
add
sub
and
repz
ss
mov
sbb
pop
test
das
xchg
mov
push
cmp
xchg
iret
adc
inc
sub
mov
push
sbb
xor
testl
jmp
lcall
pushl
leave
lcall
fistpl
mov
dec
jo
and
daa
add
sub
add
cmp
std
mov
pop
rolb
push
inc
push
orb
rorb
nop
push
dec
mov
imul
mov
cmpsb
mov
cmp
add
mov
outsb
push
lods
mov
cmp
andb
or
std
inc
jmp
push
mov
cs
push
or
xchg
sub
mov
popa
lea
and
orb
cmp
add
mov
add
push
mov
push
cmp
add
loop
push
sub
or
cmpsl
jl
into
incb
repnz
adc
adc
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fildll
cld
mov
das
cwtl
cmp
jle
sub
cmp
lock
push
jmp
dec
push
bound
shl
jbe
adc
inc
jnp
jo
jae
out
ficomps
lock
loope
sbb
adc
sbb
mov
pop
fs
sub
jmp
adc
mov
jge
mov
mov
add
sub
jne
out
dec
jae
imul
sbb
in
cmp
and
pusha
cmp
outsb
mov
out
xchg
dec
lea
bound
je
out
lahf
and
cmp
adc
inc
pop
cs
clc
add
mulb
stc
sub
cmp
cmp
movsl
jbe
sub
mov
xchg
inc
stos
loopne
add
push
fidivs
mov
jge
les
dec
fadd
nop
mov
push
dec
mov
jo
cmpl
inc
testl
adc
lret
jmp
mov
dec
dec
or
iret
xor
clc
cmp
and
or
lea
cmp
or
pop
pop
adc
jmp
cmp
cltd
sub
mov
loop
mov
dec
mov
dec
xchg
lock
jbe
lret
andb
jne
add
xor
or
fsubrs
cwtl
jge
push
mov
adc
dec
adc
lcall
cmp
cmp
mov
or
sbbl
mov
jmp
pop
cmc
outsb
call
xchg
inc
es
jle
jne
ret
ljmp
add
loopne
int3
pusha
fs
lods
sarl
add
adc
mov
sbbl
sbb
mov
jb
jne
shrb
jge
movsl
add
enter
cmc
and
xor
out
or
or
sub
mov
roll
rcr
sbb
inc
pop
push
pop
cmpb
addl
je
dec
pop
mov
push
or
pop
stc
sbb
or
gs
loope
and
pop
inc
add
js
testl
xchg
les
push
int
sarb
dec
into
ljmp
and
cmp
cmp
sbb
test
push
xchg
cmc
dec
xchg
nop
jbe
inc
rorl
clc
cwtl
xchg
test
fistl
lret
ret
jl
lea
lcall
test
mov
adc
jle
add
sub
dec
rorb
add
aas
lods
push
sub
mov
inc
ja
and
incw
cmpl
insl
mov
ss
and
imull
mov
sti
jg
andl
aaa
xor
ret
push
loop
sub
aam
gs
call
testb
shr
or
jl
or
push
sahf
gs
and
jg
or
mov
or
adc
inc
mov
sbb
mov
je
decl
fdivl
jl
fcom
insl
fadd
loopne
shr
or
mov
adc
sahf
dec
mov
jne
lcall
mov
sub
aam
loop
xchg
lcall
jne
ret
mov
sub
rcr
jecxz
push
xor
addb
or
push
out
mov
fisttpl
or
fisubrl
out
and
mov
pop
xor
push
mov
cmp
add
push
int3
jmp
sarl
or
daa
mov
and
push
dec
into
jmp
lea
pop
lods
mov
xor
cmp
jae
jno
xlat
xorb
dec
and
mov
sbb
xchg
xorb
lret
das
sub
loopne
movsb
xchg
out
negb
jns
sbb
movups
ret
adc
les
mov
inc
mov
js
test
add
mov
push
push
mov
fnstsw
iret
jnp
inc
push
xchg
loop
adc
jns
out
movsb
std
call
or
pop
or
fsubl
sub
push
mov
or
add
testb
mov
testb
push
xor
cmpsb
icebp
push
and
addr16
or
and
cmp
mov
mov
cmp
mov
push
aam
add
xchg
adc
push
xor
jl
push
cmp
pop
in
repnz
pop
push
aad
imul
jne
pop
pop
add
stos
test
inc
in
lods
mov
pusha
inc
sbb
dec
inc
test
add
sbb
mov
shl
or
mov
mov
stos
roll
push
lea
out
pop
imulb
es
lea
adc
sub
mov
add
and
mov
push
dec
xchg
fadds
fwait
mov
inc
pushl
mov
mov
divl
inc
push
jge
and
xor
ret
ret
xchg
loope
mov
cmc
loopne
and
int
rcl
ds
fcomp
mov
sar
push
or
sub
int
cmp
push
adc
sub
pusha
or
iret
jmp
sbb
faddl
adc
fbstp
mov
inc
ds
cmp
test
ret
mov
test
push
add
shrl
imul
cmovl
loope
adc
scas
add
in
mov
push
loopne
adcb
gs
or
movsl
dec
dec
stc
pop
push
xchg
push
mov
in
jmp
mov
cld
add
inc
push
imul
movl
test
js
inc
mov
pop
inc
mov
push
lea
add
std
incb
leave
sar
mov
aas
or
clc
fwait
orb
or
dec
adc
push
inc
dec
add
call
cmp
inc
cmp
lods
pop
psubd
lahf
xor
lcall
loop
pop
ret
adc
and
insb
rclb
orb
ljmp
inc
pushl
mov
jns
pop
dec
lahf
mulb
or
xor
push
push
aas
cmpsl
sbb
addl
push
push
sub
ret
lcall
jb
inc
mov
fisubrs
add
pop
mov
iret
fsubl
push
add
and
mov
mov
mov
andl
aaa
push
pop
push
test
inc
and
add
out
lret
add
push
push
pop
and
mov
test
lock
lock
add
call
jmp
cs
inc
shll
push
add
hlt
add
inc
shlb
insb
lods
jnp
jle
jns
cmp
lcall
inc
add
ja
or
push
test
push
andb
fidivl
inc
and
mov
and
mov
push
incl
cmpsb
int
push
jnp
imul
push
or
pop
daa
cmp
mov
aas
sbb
out
add
xor
rol
movsb
icebp
loopne
dec
sbb
jnp
sub
repz
push
jmp
inc
add
rcll
es
loop
pusha
dec
iret
test
sub
mov
mov
add
xor
sbb
cmp
inc
jl
jb
fistl
out
in
mov
inc
mov
sbb
dec
xlat
sub
mov
addr16
mov
jecxz
add
shlb
mov
mov
imul
fs
xor
jae
mov
pop
cwtl
mov
cli
or
shufps
push
inc
jl
adc
addl
cltd
bound
xchg
lock
out
sub
lea
dec
jge
mov
jne
cmp
ret
sub
sub
push
xor
fs
pushl
push
adc
sbb
in
pop
jo
or
jns
adc
fdivp
insl
push
jle
jg
sbb
mov
pop
cmp
test
test
push
mov
or
and
cmp
popa
add
nop
or
daa
sub
pop
andl
or
leave
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
adc
push
or
xchg
lock
popa
mov
es
mov
hlt
faddp
sub
sub
test
mov
faddl
or
add
jmp
subl
adc
and
jecxz
push
xchg
outsl
sbb
stos
xchg
aas
push
jae
adc
rcr
mov
lods
cmp
cmp
xchg
add
in
cli
fstps
insb
adc
sub
mov
pop
add
xor
test
adc
xchg
mov
loop
cwtl
inc
je
xor
and
mov
cmp
mulb
sub
enter
pusha
test
push
mov
dec
add
loopne
inc
stos
ret
icebp
jo
adc
in
pop
lds
xlat
xor
jns
rcrb
dec
or
or
lcall
pop
xchg
inc
adc
and
dec
and
aaa
adc
adc
adc
jb
int
icebp
sub
mov
cmp
int3
add
stos
push
push
or
fs
ds
and
sbb
push
xchg
pop
fcompl
xor
xor
push
ret
mov
insl
cmp
icebp
and
cmp
mov
xchg
push
and
sub
cmpb
adc
hlt
loop
aaa
xor
jmp
xor
stos
adc
mov
cmp
jbe
fldl
push
jmp
test
mov
cmp
cmp
rorb
jmp
addl
js
pop
sbb
jmp
stos
popa
add
adc
pusha
inc
cmp
inc
pushl
add
sbb
jl
ljmp
jb
test
inc
jl
enter
and
and
xchg
jae
adc
pop
xor
cmp
cmp
imul
mov
push
dec
clts
sbb
mov
dec
jae
jmp
and
xor
popa
jge
sahf
adc
jo
mov
pop
add
add
lock
fcoml
pop
pop
pop
cmp
pop
adc
pop
and
cmp
mov
test
jbe
movsb
dec
pop
cmpl
jb
sub
sbb
call
add
clc
pop
adcb
jmp
dec
and
addr16
mov
cmc
and
push
jecxz
pop
mov
mov
inc
dec
cmp
scas
ljmp
add
and
rcrl
push
loope
dec
out
andl
jle
notl
vorps
cltd
sbb
cmpl
inc
xchg
mov
js
inc
or
js
fdivrl
pop
cwtl
push
jne
push
pop
xchg
bound
pushl
pop
mov
or
addb
jecxz
inc
fistpll
inc
imul
popa
xchg
sbb
insl
push
dec
push
or
adc
or
sbb
insb
pop
jne
pop
push
pcmpeqw
lods
and
add
mov
or
adc
je
or
lea
dec
jo
mov
mov
arpl
enter
lods
pop
xor
pushl
outsb
and
jmp
movsb
push
sub
enter
addb
add
int3
push
cmp
lea
add
icebp
imul
add
jnp
push
jb
imul
dec
or
or
mov
int
xor
xchg
sub
lock
imul
add
cmpb
pop
sub
int3
pop
sbb
jns
or
jne
jge
sahf
call
xor
mov
or
push
movsb
rcrl
lret
shlb
mov
nop
dec
adc
loopne
mov
je
jae
mov
movsl
mov
jl
jmp
test
xchg
inc
test
inc
sub
adc
imul
sbb
pop
lds
in
xchg
cmp
lock
cwtl
pop
and
out
mov
pop
add
mov
cmp
jne,pn
push
mov
rol
inc
mov
neg
outsb
dec
fcoml
les
sbb
or
movsb
mov
sub
mov
push
push
icebp
mov
imul
xor
loope
jmp
cwtl
les
jns
and
aaa
test
and
sub
adc
push
adc
ret
and
orl
add
inc
dec
popa
jp
cs
adc
cmpl
cmpsl
mov
push
dec
sbb
or
mov
add
jecxz
dec
bound
sub
pop
xor
push
sub
hlt
adc
mov
stc
jb
sbb
add
cmp
inc
stos
sub
call
mov
lahf
push
cltd
rol
movsb
push
ja
or
clc
pushf
add
push
sahf
es
xor
mov
push
cs
push
ljmp
rcr
add
mov
sub
cmpsl
mov
jg
and
inc
orl
inc
sbb
je
jp
adc
rolb
lret
mov
sbb
cmp
test
jne
or
outsl
insl
mov
mov
movsl
xor
sbb
add
cli
jae
popf
lcall
mov
xchg
inc
cs
pop
insb
xchg
push
cwtl
mov
mov
or
fsubl
pushf
mov
cli
movsb
iret
test
or
push
je
inc
shrl
or
adc
cmpsl
push
or
push
push
sub
sbb
adc
cwtl
mov
mov
jl
imulb
mov
or
cld
inc
xor
les
stos
mov
mov
ja
cwtl
jnp
inc
movsb
sysenter
cmp
js
fstl
out
or
shlb
mov
sbb
rolb
mov
xchg
push
xchg
mov
outsb
push
dec
jne
stos
out
sarl
pop
and
mov
test
addr16
add
add
sub
adc
and
fisubs
sbb
cltd
pop
inc
mov
into
sbbl
test
in
adc
shl
xchg
jecxz
jle
cmpl
xchg
mov
inc
or
mov
movsb
jne
sbb
jae
fidivs
adc
cltd
dec
mov
stos
ret
rcl
in
and
pop
cmpsl
dec
vmovaps
subb
or
xor
leave
leave
leave
dec
or
adc
mov
enter
and
and
daa
daa
daa
daa
sub
xor
add
daa
cmp
dec
outsb
daa
insl
inc
and
inc
cmovs
dec
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
sahf
rclb
xchg
dec
xor
mov
xchg
cwtl
pushf
xor
and
mov
xchg
addr16
dec
es
cltd
ss
sarb
fs
dec
loopne
call
in
aam
xchg
dec
es
hlt
clc
cld
adcb
or
gs
imul
adc
sbb
es
fs
and
sub
cltd
fs
dec
xor
cmp
or
inc
gs
dec
xor
mov
dec
mov
leave
and
dec
pop
pop
pusha
stos
adcl
mov
or
movsb
push
or
and
or
xor
lahf
push
mov
shr
xorl
dec
mov
and
adc
sbb
sbb
and
and
cmp
cmp
mov
xchg
rolb
jb
in
dec
int3
or
mov
pop
imul
adc
jne
add
lcall
jmp
or
call
push
push
repz
xor
add
dec
sub
inc
or
sub
pop
push
or
adc
dec
push
sub
and
jmp
lret
and
add
xor
in
or
or
out
xchg
fstpt
not
xor
loope
sbb
divb
leave
and
shr
xchg
fildl
add
gs
push
out
ret
btc
js
in
test
adc
cmpsl
test
adcb
test
xlat
and
mov
and
je
hlt
mov
add
or
or
mov
mov
add
jg
jne
clc
incb
and
sbb
lock
and
mov
outsb
jg
in
and
aaa
jecxz
sbb
or
fsubrl
jmp
sbb
xchg
cld
jmp
or
pop
and
xor
sub
aaa
jge
and
data16
mov
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
xchg
add
movsb
xor
inc
jecxz
dec
sub
adc
fnstsw
pusha
push
sbb
pop
cmp
mulb
mov
sub
lock
or
repnz
adc
sti
add
push
cli
scas
cmp
out
test
fbstp
pop
inc
push
push
mov
rcrl
or
pop
je
dec
jne
orl
and
xor
or
push
mov
out
and
orb
out
mov
sbb
jmp
push
and
or
push
or
fnstenv
fdivr
inc
push
fstps
jmp
fisttpll
add
adc
fndisi(8087
test
push
hlt
adc
adc
pmulhw
pop
sub
jmp
arpl
cmp
push
imul
push
xor
test
mov
or
push
inc
call
fs
aaa
sbb
out
jne
adc
cmp
frstor
sarb
nop
lock
sub
sbbl
push
mov
or
jmp
fldcw
inc
test
into
adc
call
imulb
shrb
add
rorl
mov
sub
lea
insb
fists
popa
and
lea
cli
mov
stc
mov
jge
sarb
repz
ja
dec
sub
add
repnz
in
inc
rorl
cli
bnd
pop
sbb
xor
mov
pop
popa
mov
xchg
adc
cli
shrl
jl
orl
sbbb
loopne
into
push
xlat
outsb
or
mov
xchg
push
pop
cs
icebp
loopne
sbb
xor
jno
loopne
lcall
and
cmp
mov
sub
jle
push
add
sbb
mov
sbb
cmpsb
sub
add
add
xor
repnz
test
jb
push
add
mov
rcrb
lea
cmpps
clc
mov
ret
push
je
outsb
sbb
mov
dec
rcrl
call
pop
hlt
dec
mov
pop
and
lods
add
and
inc
loop
adc
sub
je
pop
pop
stos
pop
pop
aaa
addr16
pop
icebp
shlb
fisttpll
mov
add
cld
jmp
jno
les
inc
and
mov
adc
lock
push
and
xor
fisttpll
scas
add
pusha
jne
add
mov
sub
cmp
mov
data16
pop
in
push
mov
imul
jl
jp
ret
pushl
ss
sub
and
mov
mov
jbe
push
das
adc
inc
xor
pushf
arpl
sbb
jne
xchg
or
pop
xor
inc
lock
jl
push
jnp
and
dec
add
out
rorb
data16
je
xchg
inc
add
loopne
jecxz
push
mov
into
sbb
and
in
mov
sbb
clc
xor
sbb
hlt
or
mov
pop
mov
jne
sbb
je
and
add
ja
add
push
mov
and
loopne
movsl
sbbb
add
in
popa
sub
test
xchg
pusha
sub
lea
enter
add
fucomp
pop
fldcw
pop
mov
mov
xor
test
xchg
orl
adc
cmpsl
mov
daa
aam
sbb
or
mov
mov
aam
add
or
cmpl
mov
push
addr16
mov
pop
je
aad
xor
mulb
add
inc
sub
sub
push
push
pop
pop
or
push
sub
xor
imul
jnp
sbb
fstsw
movswl
sbb
loop
subb
inc
fnop
or
ds
and
rorb
pushaw
out
fs
or
insl
or
adc
jbe
mov
or
sub
nop
or
aam
test
fwait
xchg
jbe
cltd
fsubs
outsb
fwait
sbb
loopne
das
mov
nop
call
sub
xor
adc
loopne
scas
pop
add
inc
je
sbb
push
mov
push
inc
scas
xsaveopt
aam
test
fdivl
or
adc
andl
add
mov
and
insl
and
sub
cmpsb
rcrb
movsl
lea
sub
and
mov
sbb
mov
aas
and
jg
jnp
adc
push
lcall
test
data16
das
movsb
lds
mov
add
or
add
nop
stos
fwait
addr16
cmc
and
ja
cs
adc
xor
loopne
xchg
test
inc
mov
data16
add
add
or
pop
mov
add
adc
ja
loopne
jno
jo
aaa
addr16
xor
push
nop
lret
je
inc
or
orb
shll
push
and
mov
jbe
scas
inc
dec
loop
dec
add
popa
mov
sti
or
enter
shl
or
or
add
push
push
or
adc
test
add
adc
rcrl
cmp
mov
int
daa
xlat
push
adc
xorb
xor
test
push
or
sub
mov
lods
sub
adc
push
xlat
cmp
mov
loopne
test
jbe
jl
aaa
add
lock
stos
or
pop
or
xchg
ror
xchg
push
sub
add
cmp
insl
in
orb
pop
add
stos
and
cmp
ret
scas
scas
ret
dec
or
inc
lea
sbb
push
mov
lret
mov
rolb
incb
loop
rolb
cmpl
shlb
repz
aaa
idiv
pop
ficompl
pop
and
mov
out
mov
xchg
mov
loopne
adc
iret
jbe,pt
dec
lcall
add
pushf
or
xchg
inc
fmull
jb
cmp
sbb
adc
pop
sub
adc
pop
adc
push
loopne
cwtl
mov
outsl
sbb
das
dec
pusha
adc
sahf
jns
add
sarb
and
mov
mov
inc
aam
sub
lea
sub
rcl
imulb
jge
je
inc
in
aaa
je
mov
idivl
pop
or
mov
mov
or
mov
in
inc
xchg
xor
cmp
mov
mov
cmpl
das
jo
roll
push
loopne
fmul
shl
ja
clc
jae
and
push
fdiv
jp
lea
clc
sbbb
iret
push
ds
lock
push
or
out
push
xor
push
inc
lret
jo
rorl
and
xchg
add
sub
test
xchg
mov
or
aam
mov
jns
sub
lea
in
inc
push
push
rcrb
sbb
faddl
sbb
inc
cli
out
test
adc
pop
rol
out
rorb
or
inc
rcrl
rdtsc
lea
cmp
push
cli
loop
wbinvd
mov
jmp
push
and
jb
test
clc
movl
xor
pop
mov
and
shl
mov
aas
mov
adc
pop
jo
lea
fsubl
or
shll
and
movsb
dec
adc
pushf
xor
sub
clc
add
shll
and
dec
inc
add
out
rolb
lock
sbb
dec
into
out
jl
adc
jl
stos
iret
and
addr16
inc
mov
and
mov
push
xchg
jge
inc
add
mov
shl
test
xchg
mov
fildl
bound
lock
test
xchg
push
xchg
ret
jmp
jne
fcoml
mov
jae
jns
or
cltd
sbb
mov
test
adc
inc
adcl
adc
mov
dec
pop
jmp
je
pop
push
nop
sub
push
pop
data16
inc
dec
and
jne
lret
adc
xchg
jmp
inc
scas
adc
lahf
dec
mov
jne
cmp
outsb
and
fiadds
ss
mov
inc
mov
or
push
mov
rorl
mov
sbb
jp
pop
mov
in
push
xchg
jo
or
xchg
cmp
mov
cmp
insb
inc
cs
or
ss
pop
jmp
cmp
je
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
and
xor
data16
fcompl
fistpll
in
sbb
arpl
xor
outsb
add
mov
into
in
xlat
add
mov
add
adc
or
xchg
wrmsr
xchg
es
les
aam
add
popf
pop
fcmovu
jge
add
adc
jno
adc
dec
in
test
jle
setnp
add
sbb
fadds
loopne
jne
xlat
mov
or
jbe
or
add
sbb
cmp
cmp
xor
push
pop
sbb
out
sbb
rorb
xor
cmp
js
add
mov
popf
data16
sub
adc
aas
sub
sub
sarb
inc
movsb
jle
mov
push
mov
adc
or
mov
pop
cli
sbb
add
add
lods
fildll
or
and
add
add
mov
dec
shr
call
hlt
popa
adc
and
sarb
dec
jns
neg
movb
sbb
or
es
mov
pop
test
add
add
loope
pusha
clc
enter
into
pop
mov
sbb
push
push
push
daa
push
pop
cmp
inc
sldt
lds
ret
push
add
or
pop
xchg
xchg
popa
xchg
sbb
enter
pusha
sub
test
insl
stos
and
or
jl
cwtl
xchg
jge
xchg
sub
adc
jo
mov
adc
inc
push
push
adc
shlb
mov
lret
add
sbb
aam
int3
inc
rcr
push
jmp
sub
jne
pop
repnz
add
data16
push
push
mov
pop
fadd
xor
lret
add
jl
push
cmp
cmp
jge
sbb
pop
adc
and
mov
fiadds
mov
jbe
jns
push
push
daa
lcall
add
xchg
sahf
xchg
cli
sub
fcoml
cld
push
dec
add
lret
mov
je
fisubrl
lods
xor
imul
xchg
inc
lea
fcoml
pop
fcompl
sub
sub
enter
fiadds
or
mov
xor
dec
sbb
test
enter
js
cmp
mov
push
lahf
mov
fists
dec
sub
leave
xorb
shll
inc
push
xchg
scas
and
mov
ja
adc
popf
neg
sbb
mov
dec
scas
and
adc
jg
inc
xchg
cs
ret
sbb
shll
lret
add
bound
xor
xor
pushf
xor
cli
negl
adc
in
call
and
mov
jb
xor
pmaxub
xor
or
mov
ja
mov
push
hlt
nop
or
test
dec
rclb
pop
fsubl
push
clc
sub
sbb
movb
fsubrs
or
xor
cmp
sub
cld
add
lods
clc
dec
or
shrd
sbb
jge
xchg
or
dec
cmp
jge
inc
xlat
inc
sti
sbb
clc
cwtl
xor
xlat
xchg
faddl
data16
jg
in
inc
and
xor
out
mov
add
cltd
cld
sub
jo
lea
cmp
inc
mov
pusha
cmp
call
insb
xor
arpl
sbb
adc
lock
or
jo
ljmp
and
sbb
sbb
js
jg
jb
mov
fsubr
or
mov
neg
mov
cmp
sarl
cld
sbb
push
shll
mov
mov
add
mov
push
lock
sarl
push
jg
xor
jbe
mov
inc
dec
pop
or
push
xchg
inc
repnz
sbb
cmp
adc
in
in
ja
fnstenv
mov
lock
sbb
call
jbe
fistl
ds
jle
add
mov
cmp
or
jp
fimull
xor
xor
sbb
jle
in
idivb
cmp
push
sbb
mov
push
imul
push
inc
sub
add
dec
or
xchg
call
iret
cs
xchg
inc
or
or
inc
cli
ret
aaa
push
lods
mov
add
sbb
mov
adc
pop
push
xchg
fiaddl
mov
adc
pop
repnz
je
aad
mov
jbe
jl
test
add
rcrl
mov
and
mov
addb
jbe
and
sbb
sbb
jmp
andl
fs
push
divb
push
cmp
push
push
inc
out
sub
sub
add
test
xor
enter
push
pop
lods
insb
lods
push
dec
push
mov
dec
out
sbb
jl
aaa
loop
sub
inc
or
add
push
add
popf
jmp
push
pop
je
lea
inc
nop
fstps
sbb
mov
or
pop
data16
inc
fwait
repnz
popa
je
bound
fwait
push
inc
je
dec
sbb
xchg
cld
xorb
dec
jmp
adc
adc
popf
sbb
je
adc
je
mov
and
or
push
inc
das
mov
popa
cmp
cmp
or
mov
inc
shl
insb
mov
mov
ret
arpl
test
mov
mov
inc
test
imul
mov
xchg
lret
ds
push
adc
mov
cmpb
jne
int3
fidivs
sub
jp
testl
mov
orb
hlt
int3
test
jbe
jns
add
sub
bound
lahf
pop
aam
sub
loopne
cmp
add
push
mov
adc
inc
pop
push
add
idivb
mov
xchg
mov
sbb
cmpb
add
loopne
aaa
fbld
mov
mov
add
dec
aam
inc
test
fwait
or
test
and
icebp
inc
es
pop
incl
dec
sbb
mov
xor
sub
and
push
xchg
cltd
call
fcompl
lods
or
les
push
leave
rcll
movsb
xchg
aam
nop
cli
cmp
mov
or
push
fcomi
or
cmp
mov
test
jl
inc
ljmp
xchg
xor
mov
mov
fisttps
mov
adcl
add
clc
inc
or
or
push
sbb
dec
push
mov
adc
xlat
push
shlb
or
push
mov
pop
mov
shrb
dec
adc
or
enter
leave
and
test
dec
add
pop
xor
and
in
jge
lcall
je
dec
je
dec
push
push
jmp
ljmp
add
into
or
lcall
cltd
rclb
sbb
and
insl
repz
sbb
rcl
or
add
rsqrtps
push
jo
data16
lret
mov
cmp
jo
das
inc
dec
cwtl
add
or
outsl
xor
mov
sbb
jne
bound
cmpsl
add
xor
mov
sub
and
mov
mov
outsl
loop
orl
or
cmp
add
xchg
pushf
dec
pop
inc
adc
jl
jnp
and
adc
adc
je
fiaddl
sub
nop
into
sub
xor
pop
push
push
repz
test
jl
inc
sub
test
sub
xchg
and
mov
xor
or
pop
dec
clc
sbb
add
inc
adc
popa
xchg
call
dec
mov
rcll
cmc
imul
or
les
sub
stos
xchg
jge
shr
add
or
adc
sub
out
pop
or
mov
mov
lcall
test
and
add
mov
notb
lock
mov
mov
enter
jp
mov
adc
cmp
leave
inc
jbe
cld
shr
je
inc
jl
in
sbb
cmp
or
es
or
dec
pop
hlt
xor
mov
and
pop
or
repnz
or
and
cmp
add
out
bound
xor
ja
or
pusha
xchg
shll
mov
lea
push
cmp
movsw
cs
cmpsl
pushf
stc
mov
push
insl
dec
int3
outsb
lcall
mov
fstl
addr16
xchg
mov
add
add
adc
lock
cli
ficomps
adc
adc
and
xor
push
xorl
jl
loop
sub
shrl
jne
dec
push
mov
rcl
test
sub
push
add
push
jp
pop
pop
inc
mov
shll
inc
mov
sub
popf
push
ja
mov
outsb
xchg
das
sub
call
mov
lods
dec
mov
loop
leave
and
xor
das
fwait
push
daa
enter
or
loope
pop
inc
repnz
dec
mov
xor
inc
ret
ret
or
enter
xchg
addl
jecxz
lret
xchg
test
inc
sbb
xchg
dec
jo
adcl
xchg
cltd
sbb
inc
or
add
mov
stos
xor
test
fwait
lods
mov
push
and
jo
and
dec
xor
stos
sbb
enter
fildl
pop
test
movsl
add
mov
add
mov
sarb
or
icebp
xor
add
sub
fistpll
outsl
das
or
lea
mov
cmp
fsubp
xor
mov
int
pusha
clc
and
inc
xchg
inc
xchg
js
or
clc
sbb
or
inc
push
adc
repnz
orb
add
add
pop
je
xor
add
ret
sub
add
js
xor
ss
jecxz
fstpl
fsubrs
pop
mov
call
inc
jmp
ss
push
add
orb
outsb
jmp
pop
call
mov
jmp
push
sbb
add
shrb
push
ljmp
jb
cmp
sub
adc
mov
daa
pop
jecxz
jne
cmp
lock
add
call
mov
cmp
jle
inc
and
add
sub
je
dec
sub
pop
cmpsb
sbb
out
inc
pop
mov
inc
push
push
ret
leave
ss
js
cmpb
jl
shrb
jg
cmpb
je
jbe
int3
mov
inc
aam
push
fstl
test
add
sbb
flds
stos
and
add
push
jnp
and
push
dec
orb
cmp
push
inc
and
jo
pop
cmpsb
push
lods
test
ljmp
test
jne
cmp
jne
mov
lods
shrl
jmp
sarb
mov
adc
rorb
push
inc
mov
fcompl
fprem
out
shr
scas
xor
add
add
je
mov
add
or
stos
xchg
or
cltd
je
popa
xor
pavgw
mov
adc
sahf
jne
shr
daa
or
int
mov
add
and
dec
rcrb
mov
lret
add
and
dec
and
add
out
clc
add
pushf
push
fldl
bound
pop
add
or
jge
loopne
jecxz
inc
inc
push
neg
neg
sbb
sub
sbb
sbb
inc
sbb
data16
sbb
popa
adc
pop
gs
push
push
inc
and
fsts
add
inc
push
test
sbb
or
and
leave
dec
fsubs
mov
test
js
pop
pop
aam
mov
insl
mov
and
lods
rcl
ljmp
dec
and
shr
sub
mov
mov
lock
idiv
and
test
adc
cld
lock
je
mov
cmp
sbb
les
xor
ffree
jnp
lret
inc
into
add
pop
pop
lods
dec
sbb
in
jge
adc
adc
jne,pn
popa
enter
or
or
aad
loope
push
jbe
aas
orb
hlt
adc
and
aas
mov
or
push
pop
call
mov
add
dec
inc
jae
or
test
push
loopne
into
paddusb
mov
outsb
lahf
adc
xor
pop
or
cmp
ljmp
pop
lods
cmp
movsl
mulb
push
dec
lret
add
cld
inc
sub
daa
jne
out
aaa
add
or
dec
sub
cmpsb
scas
jge
insb
jnp
push
inc
jns
cmp
xchg
out
dec
xchg
enter
loopne
jne
pop
cmp
push
jmp
sub
add
add
pop
mov
xchg
ret
cmp
push
push
sub
lds
or
or
and
push
or
mov
je
adc
repz
pop
add
cmp
jb
cmp
ja
add
cmp
adc
mov
and
cmp
jne
shll
leave
adc
cli
mov
outsb
mov
jl
pop
pop
and
sbb
je
xchg
xchg
test
adc
pop
pop
bt
rorb
loopne
dec
lea
push
and
push
mov
push
test
and
sti
aas
cs
push
movb
jmp
or
cmpl
aaa
loope
rcrb
iret
cmp
imul
dec
movsl
pop
loopne
xchg
ret
pusha
callw
sti
movl
add
cmp
add
inc
pop
xchg
xor
jno
mov
divb
jne
push
adc
jp
cs
and
mov
mov
jl
inc
jb
stos
je
out
mov
dec
js
push
andb
sbb
fstpt
into
push
and
or
add
sbb
xorl
test
leave
adc
sub
add
jmp
lret
jg
imul
lea
sar
sarl
movswl
pop
int
mov
es
std
imul
sbb
dec
stos
mov
inc
cwtl
or
add
adc
push
pop
pop
push
and
xchg
dec
addr16
cwtl
mov
lcall
adc
rcll
push
jl
sub
decl
push
lcall
mov
iret
pushf
loopne
mov
in
mov
fcmovu
push
or
and
lea
inc
xor
adc
cmpsl
add
into
sahf
pusha
jecxz
imul
ja
cmpb
push
lods
jl
jmp
loopne
xor
mov
inc
call
in
ljmp
fs
inc
mov
cmp
outsl
sub
jne
lea
lea
in
test
addl
pushf
and
push
lea
pushf
loopne
or
cltd
cmpsb
xor
xchg
dec
push
sub
inc
sub
cld
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
popa
mov
jl
pop
aaa
dec
jnp
inc
lods
and
rorb
jl
repnz
push
jo
shll
fstps
out
mov
gs
add
shr
or
and
iret
push
loope
rorb
sbb
push
int
sarl
inc
arpl
sub
mov
cmp
or
pop
inc
mov
in
push
int3
shrl
loope
shr
or
mov
jp
or
dec
mov
nop
sahf
xchg
cmp
jnp
dec
dec
jmp
lock
dec
and
lcall
mov
sub
cli
inc
cli
div
mov
jbe
movsl
cmp
dec
dec
dec
and
mov
mov
mov
jge
sbb
in
dec
sub
adc
ret
add
pop
fisubrl
pop
aam
and
fcoml
xor
and
and
mov
sbb
idivb
dec
rolb
inc
push
xlat
mov
xor
popa
xchg
sbb
imul
push
sbb
loop
xchg
mov
and
enter
mov
pop
popl
dec
lods
fwait
dec
in
aam
rolb
mov
adc
jne
iret
in
inc
xchg
or
ss
shlb
fsubs
call
int3
sbb
xlat
jbe
dec
sub
sbb
mov
pop
call
test
xor
ret
push
jno
or
mov
and
fcmovu
mov
mov
insl
test
cwtl
mov
jg
addl
pop
mov
lea
adc
pop
rcll
add
into
and
jne
dec
and
stc
xchg
lret
jge
or
add
jge
cs
add
or
cmp
jne
push
push
add
jne
fnsetpm(287
pusha
or
loopne
sbb
jp
or
pusha
pusha
add
ret
fs
sbb
sub
mov
movw
add
inc
stos
mov
xor
adc
pop
outsb
js
fisubrl
ss
mov
and
or
dec
fadds
repz
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
sbb
ret
mov
add
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
inc
movsl
and
cli
aam
repz
xabort
push
mov
dec
enter
sahf
mov
insl
push
shlb
add
sub
test
jnp
or
call
add
cld
push
call
into
or
mov
inc
ljmp
add
or
lahf
mov
sub
jge
sub
cmpb
mov
or
movb
dec
cmp
add
sub
fisttps
incb
sub
orb
pop
daa
cmc
mov
call
mov
in
jp
jne
dec
mov
jb
add
inc
ror
cmp
add
cs
in
jbe
cmpsb
loop
mov
loop
add
push
pop
mov
or
ret
adc
or
sub
test
and
adc
mov
lcall
adc
lret
mull
or
or
js
push
outsb
or
or
add
repz
add
push
push
mov
rclb
mov
dec
push
ret
sbb
jae
sbb
mov
imul
push
ret
or
xchg
and
dec
movsl
adc
or
jae
fcmovnb
pop
pop
test
lret
lret
shll
cmp
xor
into
xor
inc
fidivrl
rcrb
fidivl
jnp
mov
ret
or
test
prefetchw
inc
sbb
loopne
mov
sbb
push
mov
or
add
lcall
or
or
add
xchg
add
mov
je
rol
das
push
and
pop
mov
lcall
add
add
adc
repz
and
mov
mov
jge
cmc
add
es
and
push
or
ret
cmp
das
inc
add
lds
shrb
and
jo
clc
mov
lock
je
jnp
or
cmp
scas
orl
adc
sub
subl
add
out
or
in
sti
pusha
adc
push
ds
test
add
or
add
or
xor
mov
adc
xchg
jp
mov
mov
iret
xor
sbb
xor
inc
jg
into
cmp
into
mov
dec
sbb
pop
sub
idivl
ja
pop
nop
pop
sahf
pop
mov
aam
cmp
aad
and
or
sbb
or
jmp
push
push
or
mov
aam
mov
pushf
hlt
add
leave
lahf
pop
xchg
cmp
out
jecxz
cltd
adc
add
xchg
lock
xchg
clc
stos
mov
call
ret
cltd
and
popf
ret
cwtl
sbb
lcall
sbb
lret
mov
pushf
jb
ljmp
push
xchg
pop
push
mov
mov
scas
add
roll
mov
lahf
mov
jo
xchg
mov
int
sarl
movsl
push
enter
mov
add
xchg
sbb
flds
lretw
mov
in
lea
scas
push
sarl
popa
fcom
fmuls
jge
push
test
push
add
jns
movsl
or
je
ret
or
adc
js
loopne
repz
sbb
or
insb
jno
adc
and
jbe
je
dec
sub
loope
inc
cld
jbe
cmp
je
mov
repnz
scas
push
hlt
mov
cmp
jb
cmp
jbe
dec
jl
aas
or
in
mov
mov
xchg
loopne
ss
imul
pop
inc
pusha
mov
ja
xchg
xor
aam
sbb
and
jle
pop
adc
les
and
inc
or
add
popa
test
pop
aam
sbb
mov
cmp
and
sub
pop
enter
cmp
pushl
lds
addb
aaa
sbb
divb
push
push
mov
pop
and
aam
test
into
mov
xor
xor
add
adc
rclb
pop
jne
test
cmpsl
push
xor
in
inc
pushf
push
subb
dec
xor
jne
fstl
hlt
sahf
ret
test
daa
aam
aad
adcb
cs
cmp
aaa
sbb
dec
mov
xor
xlat
add
mov
jmp
inc
pop
cmp
add
mov
fsts
mov
sar
cli
test
jmp
mov
subl
in
out
mov
dec
push
and
scas
dec
sub
and
test
fmull
inc
in
sub
lahf
inc
xchg
test
loope
aaa
adc
jg
or
add
call
pop
outsb
js
je
push
ret
push
push
cmp
lcall
push
or
sub
mov
mov
mov
mov
loopne
sbb
and
pop
gs
sbb
aaa
test
clc
lret
rcll
in
mov
add
jg
xor
ret
sti
add
xchg
xchg
nop
push
mov
popa
jo
inc
xchg
lahf
pop
js
aad
call
xor
push
fsubl
ret
enter
cmp
loope
js
mov
out
sbb
cmp
nop
lock
adc
mov
mov
loopne
jmp
add
fs
movsb
fists
out
push
rcl
ss
subl
push
sub
data16
loopne
pop
inc
xor
or
mov
jo
and
add
push
xchg
mov
iret
out
xchg
or
xor
lcall
xor
or
movb
sbb
icebp
adc
ss
adc
daa
loopne
insb
sbb
hlt
ljmp
push
pcmpeqb
or
jg
scas
sbb
insb
push
push
ds
out
aas
btc
cmp
jbe
pop
mov
push
les
pop
sub
pop
sub
mov
pop
aas
pusha
sbb
in
mov
inc
pusha
loopne
sbb
cmp
test
pop
test
js
add
jb
sti
pusha
mov
notl
fcomps
cmc
mov
nop
xor
insb
or
div
xor
loopne
jge
pop
and
les
ds
push
sub
sbb
lret
pop
mov
jne
push
push
xchg
andb
jnp
xchg
sub
jl
push
mov
add
push
xor
mov
add
xchg
dec
dec
movsl
dec
in
add
or
inc
pop
andb
lock
imul
shlb
ret
cmpsl
cltd
mov
ret
data16
inc
sub
mov
push
sar
xor
sbb
dec
pop
push
and
mov
and
pop
sub
mov
and
pop
rol
shll
stos
es
push
and
mov
cmpsl
lahf
inc
popa
xchg
pop
movl
out
xor
mov
jecxz
aam
insb
or
adcb
test
mov
dec
or
and
fs
mov
sub
add
mulb
xchg
push
add
sub
ror
dec
or
ljmp
jo
pop
sbb
sbb
or
push
rcl
lock
out
mov
arpl
test
push
loopne
pop
pop
xchg
cmp
fs
sub
sbb
mov
popa
cld
les
xchg
xchg
or
jno
pop
mov
sbb
inc
add
sahf
mov
data16
pop
mov
scas
mov
adc
lret
inc
dec
mov
sbb
xchg
jle
lret
or
sbb
dec
int
xor
or
into
inc
mov
xchg
popf
mov
adc
adc
rorb
push
xchg
addl
icebp
adc
aas
add
or
fwait
pop
pop
stos
pop
mov
repnz
add
cmpsb
add
adc
gs
xor
fisubrl
clc
pop
and
cmpsl
or
popf
pop
sbb
and
dec
push
sar
addb
insl
icebp
or
stc
push
aam
pop
pushf
enter
insb
es
sub
sbb
or
inc
sub
push
fisttps
mov
xchg
xor
std
data16
xor
inc
and
jmp
add
insb
jmp
push
adc
or
pop
xchg
adc
adc
adc
and
or
adc
adc
lock
test
xchg
xchg
push
mov
int3
dec
and
arpl
imul
fidivrl
out
les
mov
jmp
loopne
add
cmpsl
lock
imul
add
inc
mov
and
jle
aas
or
roll
fisubs
movsl
jge
adc
mov
sbb
cmp
insl
stos
mov
ja
jbe
jge
add
mov
jne
push
xlat
cwtl
fwait
add
int3
dec
stc
sbb
aad
xor
or
cmpb
dec
mov
jg
adc
lock
adc
lcall
jbe
mov
mov
mov
out
icebp
cmp
js
rcrb
mov
popa
icebp
call
aam
into
lock
ljmp
in
repz
pop
mov
ret
dec
mov
pop
aaa
add
push
cmpsb
adc
sub
movsl
leave
ljmp
jmp
add
sahf
andb
push
insl
dec
aas
leave
jp
js
or
lea
testb
or
in
add
pop
repnz
add
or
test
or
xlat
xchg
sarl
mov
jl
inc
inc
loopne
pop
cmp
cmp
pop
jns
mov
lret
int3
or
sbb
mov
fwait
inc
ret
adc
or
inc
mov
jg
mov
addb
cltd
lret
inc
cmp
cmp
or
cmp
pop
dec
inc
cmp
xor
cmp
fldl
fsubs
adc
mull
pushl
mov
push
cli
mov
mov
shlb
cltd
mov
fsub
testl
js
or
mov
push
inc
cmp
lcall
push
sti
xor
and
and
inc
sbb
push
aas
inc
or
mov
std
mov
sbb
inc
or
cltd
imul
je
call
sbb
stos
cwtl
aam
test
mov
add
pop
sarb
pusha
inc
push
xchg
je
ret
leave
push
or
add
push
jl
xchg
sub
add
push
add
add
mov
jg
sub
push
aas
lods
loop
andb
es
sbb
pushf
sbb
mov
xor
or
mov
fidivrl
push
add
jle
inc
push
fildl
or
inc
cli
adc
pop
jg
repz
add
fs
pop
jl
testb
repnz
outsb
xchg
or
sbb
xchg
rclb
cmp
iret
inc
addl
loopne
adcb
sub
test
add
inc
add
test
inc
ret
add
add
dec
or
scas
mov
mov
repz
mov
mov
and
inc
clc
xchg
jnp
push
push
lods
inc
pop
aas
push
nop
es
xchg
ficompl
jmp
xchg
and
dec
cmpsb
pop
adc
jle
jno
inc
or
sbb
push
sbb
adc
jle
cmp
jg
push
dec
rclb
imul
lock
sbb
and
jns
mov
adc
jmp
and
inc
outsb
fcomps
cmpl
lds
stos
mov
xchg
cmp
cmp
out
push
pop
xor
ret
movsl
and
out
rcrb
sbb
lods
lock
inc
scas
aaa
fisttpl
or
dec
repnz
inc
mov
xlat
add
jmp
inc
dec
add
adc
or
dec
push
mov
test
mov
dec
in
dec
or
mov
sub
rorb
ja
js
in
fstpl
stc
repnz
add
out
and
cmp
cmp
push
leave
jbe
insb
es
data16
dec
xorb
cmp
test
je
cmp
aam
push
pop
shrb
fcom
dec
rolb
pushl
jmp
cmp
or
and
fidivl
je
mov
and
push
mov
cmp
mov
iret
add
pop
add
lods
push
xchg
out
push
xor
sbb
push
ss
add
mov
lock
or
and
jae
push
xchg
adc
jg
cmp
dec
je
dec
addb
add
jno
pshufw
push
or
sbb
add
cmp
add
cmp
push
iret
xchg
inc
mov
xchg
lret
hlt
or
push
sub
mov
std
pushl
lds
enter
add
and
mov
cli
arpl
mov
add
add
sbb
stos
add
xlat
xchg
jle
in
loopew
cmp
sub
xor
xor
inc
aam
or
je
inc
movsb
add
popa
inc
mov
rolb
inc
hlt
push
rorb
cli
push
jb
dec
cwtl
or
inc
mov
scas
mov
cli
aaa
jl
mov
push
xchg
inc
mov
fwait
orl
cmp
cwtl
sub
add
and
rcrl
pop
add
cwtl
fimull
cli
dec
cmp
mov
lret
xchg
push
scas
arpl
pop
sbb
cs
and
mov
cmpsb
or
or
or
insb
jl
enter
andb
pop
cmp
ret
stos
xlat
bound
mov
mov
push
mov
scas
das
or
add
adc
rcll
push
ror
sub
xchg
mov
add
stc
push
insl
sbb
add
cmpxchg
jne
adc
fisttpl
or
mov
filds
es
pop
jo
push
pop
mov
popl
std
icebp
sbb
sahf
dec
add
notl
shll
sbb
mov
jno
adc
subl
loope
or
int3
and
mov
add
and
jbe
add
sbb
add
and
dec
jnp
das
mov
or
hlt
adc
pop
cld
pop
add
sub
jle
out
nop
lea
inc
sub
dec
fcomps
jbe
add
ds
cmp
jge
ljmp
fnsave
nop
ret
add
dec
jg
adc
adc
nop
xchg
adc
xchg
movsl
mov
fsubrs
ss
sub
mov
ljmp
jb
ret
jb
or
andl
mov
push
inc
scas
gs
xlat
push
fisubs
pushf
and
lahf
xor
test
adc
test
pusha
push
jno
and
jns
scas
xchg
arpl
bound
add
cmp
or
adc
or
inc
or
js
sbb
inc
movsl
pop
sti
push
pop
dec
test
add
js
es
cmp
xor
mov
jns
lods
and
out
pop
mov
mov
xlat
je
cmp
add
adc
cmp
jb
testb
add
lcall
adc
mov
push
rol
jge
push
jmp
inc
pop
mov
push
sbbl
je
cmp
sbb
jb
icebp
cli
cmp
jbe
clc
push
push
or
and
dec
in
push
mov
push
adc
jge
pop
imul
jmp
das
xor
push
jne
ljmp
adcb
inc
push
mov
test
mov
mov
adc
fnsave
pop
es
jmp
cli
jne
cwtl
jle
push
inc
pop
pop
sbbb
push
iret
pop
in
test
sub
mov
push
inc
sub
ss
insl
mov
and
xor
or
or
push
in
fldl
inc
bnd
push
mov
sub
shlb
xchg
pop
adcl
sub
or
add
inc
stos
xor
jne
and
enter
aam
push
inc
add
and
pop
lock
mov
add
subps
int
mov
aaa
xor
add
push
sub
sub
xchg
test
mov
dec
or
mov
xlat
push
fst
xchg
mov
and
aaa
adc
andb
je
pop
and
fld
adc
enter
push
xchg
mov
ds
cmp
jmp
cwtl
mov
inc
adc
les
adc
arpl
add
jle
inc
data16
sub
das
fcomp
jbe
bound
lods
mov
push
and
pop
sbb
bound
lods
pop
sub
mov
pushf
stos
pusha
inc
mov
pop
or
test
add
or
dec
in
sarl
mov
inc
mov
and
sbb
loopne
pop
hlt
mov
jb
callw
lock
fwait
and
jno
fbld
hlt
sar
and
xchg
pop
xor
push
sti
jns
mov
in
int
xor
sub
lret
adc
popa
shlb
jge
add
dec
in
ficompl
xchg
in
in
mov
lock
es
dec
in
inc
and
sub
mov
adc
mov
fmul
cld
scas
pop
rcrb
mov
add
leave
and
cmp
cmp
nop
add
test
xlat
mov
fmuls
push
repnz
in
xchg
imul
sbb
lods
insl
movsl
arpl
roll
add
rcr
mov
adc
loopne
popf
or
sbb
add
inc
pop
fsubr
icebp
xchg
sbb
out
in
addr16
loopne
pusha
sbb
nop
dec
frstor
dec
mov
inc
pop
in
dec
push
add
ret
addr16
lds
add
jbe
and
or
pop
inc
lret
and
jl
lcall
adc
adc
or
inc
adc
and
mov
insl
or
pop
push
cmp
push
filds
inc
lods
xor
dec
or
pop
cmp
sbb
call
pushf
sbb
add
cwtl
push
and
mov
sbb
cmp
in
or
loopne
jne
popf
in
loopne
mov
bnd
inc
pop
fdivrl
rolb
int3
and
or
sub
mov
movsb
test
shll
les
test
aam
add
loope
and
adc
dec
xchg
in
fsub
orl
xchg
mov
jns
lahf
cmp
outsb
insb
push
jno
pusha
cltd
fs
dec
fs
es
js
add
cltd
jl
pop
ret
xor
sbb
call
rcll
lea
cmova
jge
jnp
fisubs
dec
mov
dec
adc
and
mov
test
or
jbe
sbb
sti
gs
push
xchg
xor
or
jecxz
imul
xor
sub
aam
dec
xchg
enter
pop
les
leave
inc
scas
xor
cmp
jno
ret
pop
sub
movsl
and
push
lret
mov
pop
xchg
push
xor
cmp
xor
outsb
stc
les
add
pop
cmp
mov
and
stos
add
cmp
in
xchg
or
and
in
call
xor
stos
sbb
pop
in
mov
sti
inc
sub
xchg
dec
or
xchg
lea
add
adc
add
int3
aam
bound
cmp
adc
push
nop
or
sbb
adc
cmp
ret
imul
popf
lock
push
xor
out
addr16
rcl
adc
sub
loopne
xchg
jp
and
out
out
push
rcll
out
pop
jbe
and
dec
enter
mov
jnp
negl
pop
insb
jnp
cmp
mov
loopne
stos
dec
pop
loopne
or
jg
aam
push
loopne
pop
sub
pop
imul
in
aam
mov
add
sbb
in
out
sub
and
dec
mov
adc
jae
test
or
mov
pop
nop
push
jmp
add
and
push
cmp
mov
jg
jb
insl
and
push
adc
jmp
xor
loopne
stos
movsl
dec
push
bound
in
addl
or
sbb
jne
and
jo
pop
in
add
fbstp
ds
in
cmp
ja
xchg
mov
cmpsb
insb
push
call
jl
lahf
in
sub
in
xor
jmp
dec
pusha
adc
fcmove
pushf
dec
mov
add
fsts
push
repnz
push
jg
mov
dec
dec
dec
fs
sub
popa
xlat
ret
push
sub
das
je
add
or
jno
or
inc
or
push
or
ret
insl
cmp
out
cmp
subb
add
inc
mov
mov
in
nop
movsb
mov
mov
je
inc
and
cmp
sbb
out
lock
push
push
and
sbb
les
adc
in
fisttps
scas
pop
addl
jne
adc
pop
aam
rorl
or
daa
scas
lea
in
lock
or
mov
lock
loope
jns
adc
in
lock
sub
push
fs
xor
aam
sbb
or
je
lock
inc
loopne
das
in
jmp
icebp
sbb
xor
call
sbb
faddl
enter
cltd
cmp
add
xlat
in
sbb
xlat
mov
test
dec
ds
lods
loop
repnz
icebp
rolb
aam
push
in
in
push
pushf
cmp
leave
xchg
repnz
add
sbb
add
inc
sahf
je
jnp
inc
test
jns
pop
fcompl
sti
and
add
testl
cmp
repnz
jo
mov
repz
mov
je
arpl
xchg
nop
xchg
in
inc
scas
cltd
mov
mov
mov
cmp
lock
sub
movsl
icebp
sub
sbb
je
or
js
aas
add
loopne
aam
or
imul
in
or
cs
nop
or
or
scas
in
dec
or
lock
je
lcall
or
mov
cmc
insb
jae
nop
mov
adc
mov
xor
dec
xchg
test
rorb
in
out
cmc
fsubl
push
fs
inc
or
or
mulb
call
incl
or
fcomip
jae
push
insb
inc
frstor
xor
neg
mov
leave
mov
pop
fwait
push
and
adc
push
or
adc
in
std
mov
inc
lea
sbb
mov
js
ret
test
movsl
dec
inc
push
jecxz
pop
dec
test
std
pop
pop
enter
idivl
imul
es
sbb
adc
test
iret
push
pop
mov
fld
adc
loope
js
iret
imul
test
pop
add
inc
repnz
fs
stc
loopne
push
fadds
mov
xchg
sbb
icebp
insb
mov
call
inc
test
inc
aad
aam
push
loopne
xchg
dec
enter
dec
push
imul
push
adc
jl
stc
shrb
bound
ret
fmuls
das
rcrb
pop
sbb
cli
and
mov
push
icebp
mov
fimull
call
loop
cli
cmp
insb
ret
rclb
mov
xchg
subb
imul
add
loope
push
lahf
cmp
scas
dec
adc
jl
dec
cmovnp
pop
cwtl
mov
jne
mov
gs
sti
hlt
add
sbb
loopne
js
subb
sar
vmaxsd
sbb
std
xor
outsl
mov
xchg
mov
in
cld
pushf
in
inc
or
leave
enter
and
sub
or
cltd
inc
out
std
shll
aaa
sbb
xchg
in
and
sbb
rolb
std
test
incb
in
add
jecxz
daa
push
jecxz
mov
loop
push
jne
fdivs
loopne
pop
pop
jge
mov
aad
cs
or
mov
inc
test
sbb
adc
jmp
mov
fstp
pop
call
xor
or
imul
cwtl
dec
or
lahf
cwtl
xor
les
mov
add
inc
and
cwtl
mull
sbb
shll
mov
cmp
add
adc
in
sub
or
inc
lea
rcrb
int3
aam
cmpsl
in
pusha
jns
add
mov
mov
lods
das
push
add
dec
ret
push
cmpsl
popf
fnstenv
adc
mov
sbb
sbb
xchg
call
test
push
push
pushf
out
mov
add
adc
add
scas
roll
cmp
stc
out
and
andb
add
out
xlat
add
dec
sbb
adc
mov
dec
mov
mov
add
inc
xor
or
lret
insl
les
pinsrw
mov
in
shlb
inc
int3
mov
mul
test
iret
enter
adc
fistpll
mov
pusha
nop
lret
orl
rclb
pop
or
jp
push
inc
imul
leave
in
mov
pop
dec
std
loopne
xchg
cmp
xor
xchg
pusha
xlat
push
xlat
mov
inc
or
jge
pop
xlat
stos
sbb
xchg
pop
sbb
enter
pop
aam
fsubrs
dec
leave
loopne
pushl
mov
sbb
in
sar
mov
and
aad
add
lcall
and
jbe
lea
aam
push
lea
int3
das
punpckhwd
fcoms
aam
adc
sub
in
sub
add
bound
aad
add
jo
or
cwtl
adc
idivb
push
and
cmpl
cwtl
cltd
fs
imul
test
or
jae
pop
pop
test
add
mov
mov
add
jl
sub
inc
cmp
sbb
mov
pop
inc
mov
aaa
inc
imul
cltd
insl
mov
push
lahf
pop
movsl
ja
pop
lods
stos
sbb
ljmp
stos
pop
sbb
sub
sub
fnstcw
jmp
daa
fisttpl
sub
push
enter
or
aam
imul
int3
or
mov
inc
inc
pop
test
and
imul
pop
fcoml
mov
or
jmp
add
jle
shrl
int
std
push
fildl
lcall
adc
rclb
adc
mov
inc
adc
pop
fisttpll
xchg
adc
cmovbe
testl
test
jl
add
cmp
xor
je
arpl
js
pop
cmp
test
adc
mov
rclb
in
and
add
cli
notb
cmp
testb
sbb
loope
push
add
or
adc
cmp
jmp
adc
push
add
pop
inc
lret
int3
cmp
inc
dec
js
xchg
dec
pop
pop
jnp
loopne
or
mov
loopne
sbb
loop
ss
movsb
and
loop
pop
adcb
cmp
mov
in
jne
mov
les
adc
mov
pusha
rcrl
pop
imul
in
shlb
subl
std
int3
ss
add
out
add
xor
xchg
or
mov
xchg
ret
jge
clc
jnp
in
or
inc
adc
xchg
dec
mov
push
mov
xchg
sub
gs
add
sub
adc
fcompl
cwtl
mov
pop
sub
outsl
push
loopne
push
adc
jo
call
rcll
pusha
mov
fldcw
cmpsl
mov
mov
jl
sbb
dec
xchg
adc
popf
sbb
sub
inc
dec
cmpsb
dec
sbb
mov
adc
sub
inc
int3
sub
scas
or
aam
shlb
js
fnstenv
mov
sub
imul
mov
in
nop
pushf
mov
or
test
adc
daa
int
pop
rorb
lods
les
xchg
dec
dec
testl
and
fsts
enter
leave
fmull
sub
push
cmp
leave
push
arpl
jne
push
jecxz
insb
adc
adc
mov
mov
pop
pop
int3
in
mov
not
sub
add
enter
adc
out
sub
and
jecxz
cs
mov
imul
mov
add
pop
pop
dec
or
sub
xor
adc
scas
loopne
rol
rcrb
inc
push
adc
in
mov
sbb
repnz
sub
les
or
xchg
sbb
xchg
xor
sbb
in
add
mov
push
pop
adc
shll
lds
push
aad
in
stos
inc
xchg
add
sub
sbb
mov
sbb
mov
cmp
movups
sbb
test
test
add
push
pop
insb
mov
orl
or
sbb
lret
adcb
sbb
adc
add
add
or
in
sbb
jmp
add
and
pusha
inc
cmpsl
push
xchg
sbb
pushf
in
adc
out
cld
test
pusha
jb
lret
mov
leave
mov
gs
lcall
adc
sbb
je
mov
ret
xchg
and
mov
mov
stc
push
pop
scas
jge
cwtl
or
test
xor
mov
lret
push
stos
pushf
mov
nop
iret
in
cs
mov
and
and
add
cwtl
mov
mov
test
shl
movb
xor
lods
xchg
mov
fmuls
nop
and
or
mov
xchg
xor
inc
out
jbe
js
int
fcoms
mov
dec
subb
xchg
jo
jbe
cltd
push
out
orl
jl
pusha
dec
dec
sub
add
insl
mov
ret
nop
adc
jl
mov
std
xchg
adc
add
mov
adc
in
jge
in
addl
lcall
imul
push
jb
push
sbb
or
daa
pop
loopne
mov
and
push
int3
jb
dec
je
mov
aam
test
inc
push
xor
cmp
pop
push
movsb
jge
mov
mov
xchg
fdivl
cmp
and
jne
dec
jno
xor
cwtl
jo
call
fs
and
xchg
pop
adc
les
and
fmull
fsubs
dec
or
pop
mov
sub
fdivr
call
sub
mov
xor
and
push
or
cwtl
add
cmp
je
andb
inc
add
or
bound
mov
mov
jmp
mov
aam
jmp
jno
sbb
clc
test
sbb
pop
mov
js
xchg
movsb
sbb
insl
and
idivl
fmuls
imul
adc
push
mov
insl
in
pusha
pop
movb
xchg
dec
xor
xchg
dec
xor
and
sbb
dec
xor
and
inc
cmp
leave
and
inc
sub
sbb
pop
xor
and
mov
pop
mov
scas
sbb
shrb
incl
cmp
inc
enter
pop
movsb
jb
in
sub
test
adc
hlt
adc
pop
dec
and
cltd
or
enter
sub
mov
jo
push
adc
popa
inc
sub
mov
pop
jb
sub
or
jne
jno
xchg
std
popl
shlb
add
popa
adc
enter
test
sub
fisttps
adc
jmp
pushf
pushf
pop
xor
ss
enter
lcall
enter
pushf
dec
inc
es
dec
or
leave
test
pop
int3
rcl
xor
les
aam
and
rolb
pop
sub
sbb
push
xchg
inc
cmpsb
add
sbbb
sub
stos
adc
rorb
push
inc
and
shlb
jae
test
loop
xchg
cs
and
test
imul
faddl
fdivs
xchg
adc
pusha
dec
mov
adc
ret
sub
sarl
push
mov
pop
jns
mov
xor
movsl
out
int3
inc
and
and
mov
sbb
insb
jl
xor
inc
and
int
cmp
mov
sbbb
mov
or
test
or
mov
cmc
xor
push
or
xor
inc
or
loopne
push
mov
xor
mov
int3
lea
xor
jmp
jmp
dec
popa
insl
andb
mov
das
out
imul
add
aam
addb
sti
test
add
xor
in
xor
lds
fcoml
lods
mov
jbe
scas
jo
add
sub
in
movsb
push
push
jne
daa
in
sbb
dec
xor
test
into
testl
sub
enter
dec
adc
sbb
add
aam
test
in
loopne
pop
sub
pop
in
add
addr16
and
aas
xor
fwait
lods
adc
cmp
xor
fs
cwtl
mov
andb
jns
lahf
or
xchg
push
or
and
sbb
sub
mov
xor
add
add
test
cmp
xor
aaa
and
push
xor
adc
lcall
ljmp
adc
push
adc
fucomi
jb
pop
sbb
mov
cmp
sub
xchg
iret
loopne
shlb
test
or
bound
rclb
mov
loop
adc
insl
pop
aam
mov
mov
out
and
fcmovnu
das
jb
inc
rorl
mov
mov
icebp
mov
in
rclb
pushf
sarl
in
and
jae
aaa
sbb
xor
inc
cmpsb
add
inc
add
leave
cmp
std
jbe
jo
mov
and
and
or
cmp
and
test
jne
imul
shrl
push
dec
add
shlb
push
inc
jge
test
add
mov
cmpsl
xchg
sbb
sub
and
xorb
cwtl
adc
test
mov
rcrb
mov
dec
mov
xchg
jmp
enter
insb
sbb
xor
lods
test
lock
mov
mov
sbb
test
lods
mov
dec
outsb
inc
rcrb
xchg
bswap
enter
xchg
xchg
xchg
jmp
cwtl
sub
daa
daa
nop
orb
sub
fcoml
leave
insl
xchg
pusha
aam
rorl
pushf
out
insb
jnp
dec
dec
dec
ds
std
pushf
add
pop
jl
bound
add
xchg
lret
inc
mov
iret
jns
inc
scas
mov
sbb
out
jl
xchg
dec
sbb
xchg
inc
xor
and
jl
push
inc
jb
aam
je
call
rorb
das
sub
pop
sbb
es
mov
inc
popa
adc
inc
lret
xorl
mov
or
pop
enter
stos
popa
adc
inc
movsb
mov
aam
jne
imul
push
movsl
mov
iret
or
inc
jne
mov
fcomps
jmp
mov
imul
outsb
mov
cwtl
sbb
mov
sub
pop
jno
or
pushf
inc
jno
pushf
mov
add
enter
inc
pusha
jo
lods
push
imul
and
repz
inc
shrb
jo
cmc
inc
icebp
jge
fcoms
sub
cmpl
cmp
push
cmp
pop
data16
sub
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
not
xchg
imul
out
cmp
fwait
xlat
adc
push
shlb
xchg
xchg
dec
ss
mov
sub
mov
sbb
adc
test
push
pop
scas
adc
mov
sub
cmp
push
adc
xchg
dec
dec
div
inc
add
mov
sbb
leave
xchg
adc
and
inc
mov
in
stc
es
xor
shrl
sub
dec
test
fsubrs
sub
clc
and
xor
mov
lods
jmp
mov
shr
dec
lahf
aam
sbb
cmp
push
pop
xor
jns
lret
add
push
pop
shll
fiaddl
loope
test
shrb
sbb
xor
and
xor
pushf
mov
mov
adc
or
xchg
or
adc
mov
es
stc
les
sub
mov
mov
and
inc
movsb
test
xchg
cwtl
jl
xchg
dec
cmpsb
or
xor
fs
xchg
ja
movsb
pusha
insl
xchg
shlb
jno
int3
aas
xchg
xor
dec
push
mov
mov
xor
add
pushf
shrl
sub
aad
pop
or
fcoms
jo
leave
jle
bound
stos
sub
mov
lods
adc
mov
daa
push
rorl
jns
add
cmp
repnz
repnz
repz
sub
jno
adc
lcall
mov
pop
cwtl
das
sbb
orb
pushf
mov
dec
sbb
cli
inc
mov
pop
lods
pop
inc
inc
mov
pop
sub
dec
stos
push
cmp
jo
jbe
not
sbb
sarl
nop
add
lock
xchg
or
or
leave
dec
nop
insl
mov
xchg
lea
mov
insl
int3
daa
or
or
sub
repnz
insl
sub
push
and
movsb
popf
pop
in
adc
jne
add
jg
insl
ret
xchg
xchg
inc
in
sti
leave
in
loopne
fists
adc
inc
es
and
sub
jbe
sub
movsb
les
or
mov
aam
lea
dec
jb
cld
icebp
roll
in
inc
sar
or
lds
inc
push
and
xor
fyl2xp1
test
outsb
lea
jmp
es
or
in
xchg
pusha
pop
mov
enter
adc
or
adc
adc
sbb
xchg
shll
les
push
sub
add
fs
enter
fwait
sub
shll
fisttpll
sub
insl
inc
ljmp
sub
cmp
mov
lods
sub
aaa
scas
push
add
mov
rorb
inc
jnp
sub
out
sbb
sub
adc
jmp
mov
repz
aad
faddl
sub
mov
and
mov
mov
dec
sbb
push
repnz
dec
cmp
fildll
stos
inc
xchg
cmp
sbb
adc
and
xor
push
movsb
and
inc
pop
xchg
push
push
mov
push
and
sub
inc
mov
adc
test
pop
adc
sub
xor
mov
push
sub
xchg
add
mov
cmp
mov
inc
imul
xor
test
lods
inc
or
loopne
mov
xor
or
add
insl
pop
pop
dec
rcrb
movsl
or
add
adc
push
pop
divl
fwait
popa
and
test
and
fimull
adc
sbb
aam
adc
or
pop
movsb
lods
inc
sub
add
cld
add
pop
and
mov
mov
jo
xorb
sbb
dec
add
sbb
imul
pop
repnz
inc
insl
cmp
jp
bound
insb
xor
adc
aaa
ret
xor
std
xorl
add
pop
popa
and
loope
push
and
push
popa
rorb
rorl
pop
pusha
push
insl
mov
call
pop
adc
lcall
and
dec
cli
mov
adc
imul
shlb
ret
scas
mov
jns
test
cwtl
in
cmpsb
dec
lds
test
je
nop
cmp
adc
popa
shll
inc
inc
mov
or
imul
push
sub
and
std
pusha
cmp
js
or
fsts
sahf
sbb
mov
add
jl
and
inc
push
xor
inc
adc
mov
inc
sbb
add
add
pop
and
repnz
js
clc
fdivr
add
ret
sbb
inc
mov
mov
mov
xchg
push
xchg
bound
sbb
sbb
jno
xchg
or
xor
pop
je
cmpsl
adc
filds
insl
ret
inc
add
scas
pusha
inc
std
push
ret
leave
xor
or
subb
push
and
dec
push
shrb
adc
xor
rclb
dec
cmpsb
adc
orb
movsb
mov
pop
pop
inc
jge
adc
xor
or
pop
and
outsb
pop
mov
xchg
ja
aam
xchg
lods
lgs
jne
pop
pop
push
pop
mov
or
add
lock
push
flds
or
sbb
add
subb
adc
movsb
and
out
fcmovnu
outsb
aaa
sub
fmulp
rcrb
xchg
out
cmp
movsb
jnp
add
cmpsl
sbb
and
fcoml
xor
loopne
inc
js
jecxz
cmp
jl
dec
push
jmp
mov
frstor
mov
out
out
in
into
movl
pop
orl
sbb
aad
cs
add
stc
sub
xor
cmp
int3
sbb
and
add
add
mov
addr16
fcmovnbe
cmp
lea
push
and
scas
add
add
loop
xchg
scas
pop
push
and
sbb
lret
imull
loopne
fcomp
add
and
aam
call
or
adc
lret
add
in
je
xchg
mov
dec
adc
loope
jno
lcall
xchg
pop
push
or
push
push
and
and
enter
daa
pop
imull
mov
xchg
mov
add
sahf
sub
imul
mov
loopne
cmp
mov
xor
pop
outsl
fdivp
cmp
nop
cmpsb
rcr
push
adc
loope
repz
xor
add
jecxz
xchg
fldt
outsb
mov
push
shrl
pop
js
add
dec
es
mov
dec
in
and
push
rolb
clc
jnp
mov
add
idiv
or
adc
mov
rcll
xchg
adc
or
cmp
rclb
cmpl
jns
mov
test
add
nop
add
into
pop
adc
test
and
fidivs
push
mov
mov
add
mov
cwtl
xchg
movsb
lock
rdpmc
add
pop
in
adc
add
pop
sub
xorb
cmpsb
bound
and
insb
outsl
arpl
lret
aam
je
outsl
outsb
cmp
xor
gs
fildll
push
je
arpl
jne
jb
outsb
je
add
das
add
push
insl
jnp
sarb
push
dec
push
fsubr
in
call
inc
outsl
jb
js
je
jb
gs
add
or
idivb
add
add
add
jne
out
je
imul
dec
and
push
add
add
lds
es
add
jnp
mov
inc
xor
inc
push
add
aas
popf
inc
icebp
add
ss
dec
add
sub
push
insl
xchg
je
pop
pop
out
push
je
and
jae
dec
fisttpl
xlat
loopne
mov
cmpsl
insl
push
push
xorb
or
bound
fisubl
push
jne
imul
jbe
aas
imul
ds
jp
outsl
or
mov
dec
fs
lret
fidivrs
out
outsl
jmp
jo
sbb
arpl
xor
sub
fwait
stos
insl
sub
push
imul
scas
cmp
jne
inc
sub
data16
scas
loope
outsb
dec
sub
jecxz
insb
jp
sub
insb
lcall
repz
lahf
sbb
xor
push
outsb
inc
imul
arpl
or
sbb
addl
das
cs
icebp
push
cmp
outsb
bound
sub
push
arpl
mov
xor
je
loope
mov
mov
gs
fcoms
das
jb
ret
inc
sbb
fidivrl
cs
add
xor
loope
loopne
outsl
andl
mov
fidivrl
jg
xchg
cmpsl
popa
sub
push
mov
lahf
aaa
jg
jmp
iret
lods
inc
push
pop
fbstp
xchg
dec
fbstp
jne
jbe
jb
jne
stos
aad
jae
jbe
test
xor
fisubrs
js
das
rcrl
pop
or
pop
cmpsl
ss
ljmp
pusha
fwait
stos
lahf
outsl
aas
or
movl
or
push
mov
mov
xlat
aaa
roll
imul
jb
fs
imul
shll
push
jl
popa
jnp
xor
outsl
pop
sub
das
xchg
mov
add
pop
das
mov
sub
xor
jge
je
scas
cmp
mov
jg
sbb
lea
out
pop
push
pop
jecxz
push
push
push
inc
sbb
sub
shlb
xor
dec
addr16
das
inc
fmulp
add
out
js
and
out
enter
xchg
or
enter
sbb
adcb
sbb
mov
enter
clc
sbb
jl
repnz
and
fdivrs
xchg
and
jns
jp
cld
jmp
lcall
pusha
dec
lock
loop
add
mov
fldl
sub
pushf
aaa
xor
jb
xor
loope
fcmovne
or
cmp
adc
cmp
imul
ja
ds
mov
jge
xor
shll
cmpsl
push
fwait
cmp
push
in
test
ja
add
add
fucomip
fsubs
and
add
das
das
and
mov
shlb
dec
ljmp
pop
inc
and
and
inc
jmp
mov
addr16
idivl
aas
push
inc
sub
dec
inc
mov
ret
jge
push
mov
imul
scas
jne
outsl
dec
and
inc
das
insl
arpl
inc
pop
pop
imul
insl
insb
sbb
out
mov
cmp
arpl
insl
loopne
pop
pop
jp
data16
jae
push
and
sub
ljmp
fbld
insl
imul
ds
neg
iret
arpl
fdivs
mov
jg
icebp
add
cmp
cmp
idivb
sub
dec
and
jns
add
call
jle
das
das
jns
push
dec
push
inc
inc
arpl
bound
jle
pop
mov
dec
arpl
jge
ret
push
inc
jo
sub
addr16
xor
insb
jle
pop
in
xchg
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
out
jae
xchg
xchg
addr16
mov
mov
jb
xor
and
imul
int
daa
push
gs
sbb
dec
outsl
outsb
and
pushf
mov
push
jne
xchg
pop
dec
xlat
je
cmp
add
out
dec
or
jnp
mov
jae
shrb
fs
push
push
inc
push
popa
insb
jne
inc
xchg
jl
inc
inc
mov
cmpsl
and
ljmp
dec
daa
and
sub
sub
cs
xor
xor
xor
pushl
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
outsb
push
cmp
push
push
push
pushl
clc
pop
pop
pop
pop
pop
adc
popa
bound
gs
aaa
sbb
imul
jo
add
jbe
js
jp
jl
jle
leave
in
insl
xchg
dec
adc
lcall
loopne
fldcw
shlb
pop
add
orb
filds
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
cs
outsl
imul
je
lock
cmp
dec
ffree
movsb
jg
gs
xor
popa
js
mov
add
dec
pop
adcb
out
ret
cmp
sub
je
adc
add
scas
add
jg
sarb
add
add
and
push
stos
dec
loope
pop
push
add
xor
out
push
hlt
and
add
pusha
push
addr16
mov
add
or
xor
sbb
mov
outsl
mov
addl
ret
int
test
add
orb
sti
outsb
push
cmpb
push
and
sub
jb
insl
int
adc
push
jo
add
clc
dec
pop
pushf
add
js
push
outsb
imul
or
out
jo
lods
loope
les
lret
imul
adc
and
test
rorb
add
and
or
nop
xchg
xchg
es
and
xchg
mov
dec
add
cmp
mov
ljmp
push
stos
aad
mov
jmp
pop
repnz
sbb
dec
inc
sub
arpl
cmp
push
push
inc
sub
dec
inc
pop
dec
dec
arpl
in
inc
dec
inc
adc
notl
pusha
xchg
mov
mov
mov
rclb
dec
bound
je
outsb
data16
jbe
sti
xor
ss
out
je
xor
jnp
or
push
xchg
daa
pop
lea
mov
outsl
js
push
inc
xchg
jl
push
and
insl
jo
jo
and
fcmovnbe
xchg
cmp
dec
xchg
shlb
aaa
insb
les
mov
imul
mov
lods
add
ds
cmp
dec
inc
jb
jns
ss
and
ss
jns
mov
insb
and
not
or
jne
addr16
cmp
outsb
jle
jbe
divb
fnsave
mov
jo
or
jb
and
fisubs
je
xchg
pusha
inc
jbe
push
in
add
push
push
lahf
fs
insl
add
lods
jp
pusha
adc
push
popl
fadds
mov
cmp
push
adc
rcll
pop
daa
mov
dec
adc
mov
adc
outsb
mov
pop
pop
pop
push
push
jae
or
mov
aas
cmp
call
push
hlt
clc
addr16
sbbl
xor
outsb
gs
mov
data16
cmp
bound
push
push
push
dec
testl
xor
push
push
in
lods
fisttps
push
ds
inc
or
sub
nop
xchg
push
imul
push
pusha
wbinvd
pusha
jg
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
andb
popa
sbb
push
insb
roll
push
pop
fadd
sub
or
push
mov
pop
das
je
outsl
xchg
pop
aaa
daa
xchg
mov
data16
imul
or
ds
jns
imul
push
das
push
sub
js
sahf
jl
push
addr16
jle
imul
add
cmp
sub
pop
or
nop
ret
sbb
das
push
jb
pop
aaa
aaa
and
push
mov
xor
addr16
xchg
xchg
xor
pop
pop
jne
stos
addr16
push
jbe
pop
addr16
sbb
jo
ss
gs
inc
subl
imul
adc
sahf
sbb
dec
sbb
sahf
out
mov
out
pop
sub
popa
sub
push
jl
out
ficomps
fs
cmp
xor
rep
sahf
out
adc
cmp
call
dec
repz
mov
iret
repz
lods
test
sahf
idivl
cwtl
xchg
nop
mov
test
cmp
jns
addb
js
repz
jo
sahf
out
into
aas
mov
pusha
push
pop
pop
push
jns
out
push
dec
dec
inc
inc
out
sahf
out
cmp
sub
out
sahf
and
add
call
cmp
test
push
repz
call
sahf
out
pusha
push
dec
inc
iret
mov
sahf
xor
or
cld
in
sarb
iret
repz
mov
out
fidivrs
out
stc
lock
int3
stc
xchg
stc
mov
xor
mov
and
fdivrp
inc
clc
jle
mov
push
push
cmpsl
jns
add
and
sub
xchg
jae
sub
xlat
es
inc
addl
push
jg
add
stos
arpl
add
add
and
push
add
in
loopne
add
add
add
roll
inc
and
sbb
shll
push
pop
fisttps
jle
jg
or
or
test
mov
decl
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
ljmp
mov
mov
mov
mov
ret
enter
int3
int
dec
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
push
test
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
mov
and
sub
stos
jmp
dec
lea
adc
stos
add
pop
outsb
gs
popa
data16
add
cmpsb
pop
jns
movsl
mov
add
fiaddl
data16
les
push
arpl
insb
fs
sbb
dec
jne
je
xor
outsl
lods
mov
push
femms
loopne
lahf
pushf
pcmpgtw
xor
push
inc
adc
xlat
add
push
xor
push
dec
inc
dec
jg
inc
fimuls
dec
dec
inc
add
adc
sub
push
clc
jo
adc
lock
into
mov
mov
jnp
inc
loop
fsubs
in
outsb
mov
ds
pop
adc
clc
lret
mov
and
sbb
jb
jge
arpl
cmp
mov
jno
in
fstl
mov
and
sahf
jg
xchg
cmp
dec
imul
lret
shr
incl
inc
mov
mov
sub
fwait
repz
ds
sbb
pop
jns
ds
xor
incb
jg
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cld
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
ljmp
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
push
dec
mov
out
leave
ljmp
orb
mov
incl
add
scas
lods
dec
lock
xor
aas
mov
in
or
icebp
pop
pop
repnz
clc
outsl
sti
adc
es
mov
fcompp
add
add
pop
fcmovnb
pop
dec
push
dec
adc
mov
dec
jo
scas
mov
sbb
jmp
popa
sbb
push
into
mov
enter
xchg
and
adc
dec
jns
outsl
fdivrs
out
xchg
pop
pop
inc
mov
test
popa
mov
out
outsb
add
sti
es
jae
inc
jmp
and
insb
fildl
data16
scas
or
test
subl
adc
sbb
loopne
xchg
bound
jg
inc
mov
dec
aas
fs
pcmpeqw
sti
or
clc
jmp
daa
fistl
daa
je
addb
mov
aad
xchg
add
bound
jmp
xchg
fists
js
lret
xchg
ret
pop
or
or
testb
stos
test
add
ret
xlat
sbb
and
or
and
movsb
pop
xchg
addl
jae,pt
xchg
repnz
insl
jle
fs
test
mov
and
js
sub
mov
aas
out
push
push
pop
out
adc
push
mov
or
push
cmp
jnp
push
in
dec
mov
cmp
test
inc
jecxz
adc
jae
fwait
add
cmp
lcall
outsb
xlat
jg,pn
hlt
icebp
mov
mov
cmpsl
xlat
sbb
loope
mov
mov
xchg
jne
or
out
dec
mov
ja
inc
add
and
out
sub
cmp
pop
pop
mov
cmp
adc
dec
push
aad
cmp
imul
sub
lahf
es
es
sti
cmp
mov
dec
or
cmp
mov
clc
cmc
jmp
inc
arpl
push
lock
ret
dec
dec
call
push
loopne
mov
mov
dec
jp
xchg
add
aaa
pop
jecxz
xor
jo
jnp
mov
xor
mov
mov
pop
popa
out
inc
addr16
xlat
in
imul
data16
pop
pop
sti
mov
mov
arpl
daa
pop
arpl
mov
pop
gs
jne
mov
out
push
sbb
in
ja
arpl
jge
cmp
fistps
pop
or
ja
inc
mov
add
cmp
sbb
adc
aad
xor
aas
arpl
or
lret
sub
inc
sub
sub
out
daa
xchg
add
pop
fbstp
add
mov
inc
aas
into
ds
jecxz
or
addr16
dec
test
and
xchg
in
in
push
arpl
and
arpl
loopne
push
push
popa
dec
js
cmp
add
shr
cld
xor
rolb
xorb
pop
out
outsb
out
out
inc
neg
cmp
dec
aaa
fimuls
or
pusha
aad
fldl
push
push
pop
mov
dec
outsl
push
sub
xchg
sub
cmpsb
dec
je
inc
pop
sarb
inc
add
dec
pop
clc
xor
sub
imul
inc
call
xlat
les
jecxz
out
pop
or
xor
inc
test
lods
icebp
pop
push
push
cmp
mov
mov
jb
sub
xchg
push
sub
outsb
lods
add
and
jle
pop
pop
fucomip
pop
push
stos
inc
mull
jae
in
mov
mov
addr16
call
pop
insb
pop
scas
or
jo
and
mov
arpl
pop
pusha
adc
fadds
push
loope
outsl
inc
adc
fcoms
jno
ja
inc
xlat
jbe
lcall
fstps
push
mov
out
cmp
push
inc
jnp
sbb
jl
mov
insb
xchg
imul
inc
inc
sbb
sbb
imul
inc
ss
adc
loopne
mov
dec
sbb
adc
mov
pop
por
insb
aas
pop
sbbl
jecxz
scas
inc
bound
outsl
mov
sbb
pop
lret
ja
pop
mov
mov
cmpsl
xchg
inc
arpl
andl
pop
push
dec
or
testl
adc
mov
push
mov
inc
jl
jl
fisttps
inc
les
jl
adc
push
imul
jge
cmp
and
addr16
movb
bound
push
test
imul
mov
mov
jl
cmp
bnd
scas
jbe
jnp
gs
mov
es
jecxz
addb
pop
jnp
js
mov
jns
fidivrs
loop
insl
inc
mov
push
sbb
imull
pinsrw
outsb
cs
movl
jae
adc
js
jno
xchg
sti
cmpb
insb
sub
lret
loopne
lock
cmp
cmp
jae
roll
dec
adc
xor
xchg
imul
iret
lcall
push
xchg
jl
xchg
bnd
adc
pop
icebp
js
jl
xor
aas
push
xor
push
imul
or
and
cmp
mov
mov
push
mov
push
dec
xchg
cmp
pop
fstpt
insb
cmpsl
aaa
sbb
sub
cmpsl
daa
pop
jmp
or
push
in
cmp
fs
arpl
inc
inc
sub
inc
clc
mov
mov
mov
pop
cmc
icebp
push
lret
push
mov
icebp
das
out
pop
scas
jle
ret
jb
bound
divw
xchg
call
add
inc
aas
popa
sub
sbb
in
ret
aaa
es
ret
das
lods
inc
outsl
das
addr16
sarl
fildll
add
push
aam
mov
sahf
insl
or
mov
or
xchg
fimuls
loope
insb
or
push
aaa
add
movsl
pop
sahf
popl
testb
pop
pop
or
fisubrs
inc
inc
dec
push
mov
out
sub
mov
es
fwait
int
rcrb
push
in
inc
pop
inc
push
jnp
mov
lods
es
push
pop
ds
rol
or
imull
mov
jg
mov
ds
push
or
js
mov
dec
daa
hlt
inc
add
add
cld
data16
mov
jno
adc
dec
gs
inc
sbb
fwait
mov
dec
or
xor
push
push
inc
loopne
mov
es
xor
jg
iret
repz
scas
mov
pause
mov
outsb
out
sbb
pop
aaa
aad
and
test
pop
jae
out
lods
jg
jo
jns
add
inc
aaa
ret
mov
cmpsb
push
and
arpl
out
fwait
jno
push
pusha
subl
push
out
push
movsb
loope
scas
jae
xchg
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shll
jo
pop
and
dec
bound
out
sbb
sub
and
pop
jle
arpl
adc
push
orb
in
sahf
out
cmp
sbb
mov
lahf
fs
sbb
and
xchg
jmp
mov
jbe,pt
js
lods
dec
fdivrl
add
dec
pop
pop
xor
js
icebp
aad
jb
jno
je
cmp
fimuls
jo
jb
filds
lods
push
sahf
jb
jb
and
cmp
jae
sbb
and
and
idiv
pop
cmp
and
arpl
xor
cmp
fs
inc
sbb
mov
jl
inc
loop
mov
in
jne
je
ss
cmp
fildl
sbb
imul
sbb
jae
data16
aam
imul
adc
push
movsl
mov
xchg
aas
push
mov
add
pop
jne
xchg
sbb
cmpsl
sub
arpl
in
sub
scas
ja
inc
scas
fdivl
sldt
mov
outsl
js
rcrb
mov
scas
inc
subl
inc
dec
stos
pop
add
or
inc
cli
inc
or
mov
nop
test
insb
push
and
test
aaa
cmpsl
or
mov
add
add
xorb
pop
push
adc
cmpsb
pop
repnz
xlat
push
mov
pop
outsb
adc
ds
fidivl
push
add
popf
shr
mov
push
inc
push
push
xchg
or
jl
or
imul
and
and
stos
aaa
mov
iret
mov
xor
and
mov
loop,pn
fs
bound
cmpsb
call
movsl
and
inc
fiadds
jecxz
aam
mov
das
xchg
or
lods
dec
inc
aaa
inc
dec
add
pop
je
popl
test
dec
sbb
iret
mov
mov
outsl
mov
sti
cmp
push
les
adc
push
add
mov
pop
dec
jg
sub
stos
sti
push
sub
ds
sub
aaa
sbbl
repz
clc
iret
inc
fs
sbb
lds
shlb
pop
inc
outsl
sub
outsl
mov
das
xchg
add
outsl
push
loopne
mov
push
xchg
inc
mov
mov
scas
mov
in
cmp
ret
mov
add
sub
and
inc
mov
sub
imul
mov
jae
shrl
jp
jp
movb
fildl
notl
push
or
pop
push
bound
bound
xor
jmp
icebp
xchg
jge
dec
jb
fs
je
add
js
js
les
add
dec
inc
sahf
jns
mov
adc
pop
out
sahf
out
and
out
sahf
push
andl
imull
ljmp
xor
icebp
xor
cmpsl
pop
sbbb
or
lods
subb
das
adc
mov
jns
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
add
shrb
ret
sub
fldcw
shrb
xchg
pop
adc
push
adc
pop
add
int
mov
xchg
rclb
lret
str
mov
and
das
lods
adc
scas
incl
inc
fwait
je
push
fnstsw
and
int3
xchg
jb
icebp
loopne
pop
mov
sbb
xchg
push
pop
cmpsl
scas
dec
rorb
and
inc
daa
cs
add
pop
jl
cmpsl
outsl
aas
das
push
jno
add
push
repnz
dec
mov
out
pop
insl
xchg
jno
add
mov
sub
and
ja
stos
mul
pop
or
push
inc
outsl
mov
push
and
xor
push
imul
arpl
xchg
addl
test
sub
mov
fdivrs
ljmp
jb
mov
jns
sub
inc
inc
fisubl
fwait
and
add
mov
cmp
and
fists
adc
pop
ja
mov
filds
mov
jbe
imul
inc
sti
scas
mov
movsl
or
sbb
cli
jb
or
mov
sub
movhps
and
cmpsl
or
add
push
cs
and
push
mov
imul
or
aaa
sub
imul
js
je
inc
imul
xorl
mov
or
xchg
rcrb
push
stos
imul
out
mov
aas
mov
push
mov
inc
jae
mov
popf
sbb
and
daa
in
clc
orb
sub
ss
jg
and
mov
das
sub
push
popa
call
shll
fdivs
das
imul
jbe
pop
cmpsl
dec
push
xorps
shll
lret
test
xor
outsl
rorb
cmp
sbb
shl
push
fsubs
push
push
movsb
mov
adc
arpl
scas
hlt
adc
icebp
mov
cmpsl
data16
jmp
mov
sub
inc
sbb
iret
shll
push
outsb
dec
fs
lds
arpl
pop
cmpsl
jo
jno
xchg
add
dec
outsl
out
jecxz
lock
jg
push
inc
fwait
jbe
and
sti
pop
dec
lods
add
xlat
cmp
add
inc
push
pop
cmpsl
mov
jnp
jb
aad
aad
out
push
out
push
xchg
xor
adc
xor
add
jno
mov
addr16
xor
cmp
je
lahf
xorl
push
dec
xor
push
adc
add
pop
es
imul
jo
outsl
inc
outsl
aaa
jl
mov
repz
arpl
lahf
sub
or
pop
xlat
sbb
movsl
xor
inc
dec
pop
clc
stc
cmp
and
mov
aaa
pop
iret
mov
adc
scas
out
gs
push
push
adc
mov
aad
ljmp
mov
and
sbb
mov
push
arpl
imul
dec
call
fstpl
or
popf
xor
push
xor
sub
aaa
xor
stos
jp
xor
cmp
insl
das
outsl
push
inc
dec
arpl
or
inc
ss
adc
add
mov
sbb
lcall
fs
jo
push
sbb
dec
dec
push
outsl
push
adc
add
lock
lods
lcall
push
test
xor
pop
xor
call
lret
cmp
jl
pop
pop
pop
popa
xchg
xor
shll
stos
ds
xchg
mov
inc
mov
mov
or
dec
nop
push
loop
dec
rclb
test
push
adc
inc
cmp
rolb
mov
ja
xor
push
sar
xchg
mov
inc
arpl
out
pop
pop
and
test
out
inc
mov
cmp
xchg
push
cs
lret
xchg
cmp
iret
sub
mov
sbb
jnp
inc
es
movsb
mov
and
jb
lcall
push
mov
loope
pop
minps
aas
push
sbbl
loopne
sbb
add
mov
push
fidivl
sbb
test
xor
push
cli
jp
pop
scas
aaa
add
or
push
mull
adc
and
gs
pop
adc
pop
das
outsl
iret
jp
addr16
sub
jae
xchg
fisubs
cmpsb
insb
jnp
popa
and
xchg
fistl
scas
rol
add
fisttps
sbb
scas
dec
cmp
out
aaa
lods
add
nop
testb
pop
lock
mov
or
sbb
cmc
jb
jmp
mov
inc
dec
push
mov
mov
pusha
pop
dec
push
in
out
out
add
push
movsb
mov
lcall
jg
or
or
ljmp
inc
mull
fwait
mov
push
inc
xlat
and
and
scas
hlt
test
es
inc
lods
xchg
fcomps
inc
mov
xor
dec
inc
das
dec
mov
add
or
cmpsl
arpl
cs
stos
jno
dec
sbb
push
inc
and
jmp
jo
loopne
adc
push
filds
mov
lods
push
mov
pop
adc
sub
dec
sub
mov
test
mov
fiaddl
add
lods
mov
aam
pop
lds
repz
insb
mov
adc
pop
aas
mov
js
call
and
mov
mov
out
shll
dec
jo
sbb
or
aas
jno
nop
dec
or
das
sbb
mov
xchg
cmpsl
adc
push
les
add
test
stos
xor
and
loope
iret
btrl
stos
pop
xlat
pop
fldt
pop
sub
lods
cmp
rcrb
dec
xchg
or
pop
dec
xor
stos
mov
push
bound
push
mov
jecxz
jp
push
insb
cmp
fisubrs
push
addr16
punpcklwd
in
mov
mov
sub
push
das
ss
fs
pop
add
sub
add
inc
lcall
jmp
lahf
add
push
loopne
push
insl
pop
inc
mov
and
add
faddl
jecxz
jmp
push
mov
insl
arpl
bound
mov
or
sub
mov
in
xchg
push
xchg
pop
dec
mov
push
inc
aaa
cs
push
xor
repnz
pushf
dec
push
leave
push
jb
cld
lods
pop
cmp
mov
push
cmpsl
lods
les
push
jb
lods
rcrb
stos
fmul
push
jb
mov
scas
xchg
push
stos
in
stos
imul
cmpsl
fisubrl
inc
test
jb
pop
and
leave
push
add
mov
pop
push
lods
pop
cmpsl
or
in
cmp
test
movsl
jb
mov
movsb
shrb
stos
mov
addb
push
jb
xor
push
fbld
cmp
inc
mov
fs
mov
mov
mov
stos
scas
push
jb
mov
push
xchg
sahf
sahf
test
sahf
pop
repnz
push
fistps
push
leave
dec
cmp
cltd
xlat
mov
out
add
jg
or
push
aas
inc
bound
pop
pop
daa
fnsave
pop
rorl
call
inc
inc
pop
xorb
and
mov
push
xchg
mov
adcb
test
das
inc
xlat
push
ret
inc
xor
fimull
addb
ffree
push
je
and
test
dec
mov
jae
imul
dec
sbb
sbb
repz
dec
test
push
pop
inc
xchg
adcl
inc
push
aaa
xor
inc
mov
push
mov
sqrtps
orl
test
inc
sub
je
fcmovbe
push
out
or
xor
xchg
sbb
outsl
inc
mov
dec
xchg
daa
jb
sbb
or
push
scas
addr16
aad
fs
sub
xchg
fmuls
inc
addl
lahf
inc
loopne
jmp
repz
adc
aaa
cmp
xor
push
cmp
jb
jp
test
loop
sbb
aaa
push
lcall
mov
subb
aaa
sub
inc
iret
sbb
mov
scas
orb
push
mov
push
outsl
mov
cwtl
ss
rcrl
or
add
lods
pop
gs
sub
dec
fwait
aas
outsl
sub
mov
jg
aaa
addb
out
inc
test
pop
mov
imul
push
iret
inc
daa
push
sbb
daa
in
rorl
cmp
sub
inc
call
sar
outsl
outsl
jbe
inc
xor
mov
inc
pop
jg
jae
and
jae
and
add
fisttpl
divb
pop
and
xchg
push
sbb
inc
inc
daa
sbb
sub
in
or
pop
sub
add
lods
inc
and
ficoms
sbb
jo
dec
inc
popl
ret
adc
nop
xchg
fisttpl
ja
xor
cmp
pop
and
daa
bound
mov
je
jnp
mov
dec
sub
mov
les
cmp
movsb
imul
cwtl
pop
sti
xchg
xorl
adc
jae
aaa
xor
lock
dec
dec
bound
jno
add
aaa
outsl
dec
js
gs
and
mov
jo
in
jnp
stos
inc
cmp
or
iret
and
arpl
or
rolb
and
jl
repz
or
int3
add
daa
dec
xchg
push
xchg
jns
out
jb
hlt
xlat
push
fstpt
dec
and
push
inc
outsb
mov
mov
ret
out
inc
mov
sub
mov
dec
dec
in
movsl
fstpt
dec
aaa
rcrb
or
jmp
fwait
addb
sub
bound
pop
jb
popa
or
xchg
imul
fisttpl
add
xchg
fimull
mov
and
stos
fwait
scas
outsl
add
inc
pop
rolb
push
xchg
ret
lahf
pop
inc
aaa
adc
and
cmp
push
mov
aas
cmp
repz
xor
xor
out
or
xor
pop
jnp
dec
cmovno
fdivs
cwtl
dec
sbb
and
arpl
push
sub
mov
push
push
add
jns
lock
inc
cs
fiadds
pop
or
pop
jg
pop
movsb
adc
je
adc
push
and
xor
sbb
aam
mov
arpl
xlat
push
cmpsl
xor
push
dec
push
xchg
push
mov
xorl
mov
xchg
xorb
lock
and
dec
es
cmp
out
ret
push
in
sahf
sahf
push
cs
cmp
mov
xor
out
loopne
mov
arpl
push
or
pop
in
out
xchg
jnp
daa
jo
push
xchg
inc
xchg
cmp
in
fidivs
jae
fs
dec
roll
into
xor
pop
jecxz
scas
xchg
fcmovbe
pop
out
shlb
or
in
inc
mov
or
jmp
loopne
xor
inc
cmp
push
loope
xchg
jbe
out
sbb
fimuls
js
inc
push
bnd
ss
fidivl
dec
mov
bound
xor
pop
incb
ret
mov
push
mov
xchg
mov
ret
lds
cmp
push
cmpsb
jge
js
xchg
ja
retw
pop
fstpl
sub
xor
neg
loope
mov
js,pn
inc
mov
inc
mov
add
xchg
dec
fisubs
out
push
push
inc
out
in
mov
cs
sbb
packssdw
inc
pop
pop
mov
mov
es
ss
outsb
pop
push
push
xor
loope
clc
daa
dec
jb
das
inc
pop
dec
es
mov
mov
fbld
data16
idivl
or
sysexit
mov
xchg
aas
dec
cs
sahf
push
outsl
jge
xchg
push
insl
sub
fidivrs
mov
push
scas
push
insl
mov
inc
lds
mov
mov
push
jp
out
loope
outsl
ds
fiaddl
mov
jg
dec
das
xor
sbb
fidivrs
pop
outsl
pop
outsl
in
fstpl
dec
xor
xor
outsl
cs
cmp
push
dec
jecxz
inc
xchg
pop
addl
xchg
mov
dec
adc
in
add
mov
outsl
cmp
push
fwait
movsl
jo
adc
sbb
jle
or
add
sub
syscall
fidivrs
add
fcomi
hlt
pop
int
pop
bound
pop
inc
jnp
scas
add
mov
pusha
mov
adc
mov
or
popa
xchg
mov
mov
jne
mov
inc
cmp
pusha
lahf
ror
xchg
mov
cwtl
xor
adc
cmpsl
nop
xlat
subl
imul
and
arpl
les
addb
out
scas
pop
add
repz
xor
lahf
and
add
push
mov
das
lahf
add
mov
sbb
lahf
inc
xchg
add
fwait
jmp
sbb
dec
xor
xor
mov
dec
outsb
mov
xor
hlt
mov
imul
in
push
addr16
pop
xchg
addl
lret
push
adc
mov
insb
outsl
popa
cmp
call
js
add
inc
das
aas
insb
add
lods
mul
or
hlt
add
add
testb
addr16
iret
adc
pop
sbb
pop
add
mov
outsb
test
out
dec
mov
rclb
loop
jb
sub
jg
gs
sbb
mov
arpl
add
ja
mov
icebp
dec
mov
arpl
push
mov
push
xor
or
sub
push
repz
enter
test
inc
pushf
add
stc
fmulp
out
add
mov
and
push
cmp
jo
add
repnz
xor
add
jae
pop
xor
punpckhbw
inc
mov
out
inc
into
mov
fwait
push
sbb
pop
repz
cmp
jae
push
call
xor
mov
add
lahf
sub
push
insb
xchg
fcmovnu
add
mov
iret
das
push
sub
das
and
fisttpll
addl
mov
lahf
pushl
fildll
scas
and
test
cmpsl
add
movsb
inc
mov
orb
subl
sub
addr16
adc
scas
push
xor
sub
sti
and
cmp
mov
and
das
test
fwait
nop
mov
or
and
pop
outsl
popa
fldt
pusha
js
sbb
pop
xor
sub
popf
mov
xchg
ja
inc
mov
mov
jno
outsb
jmp
pop
dec
push
xchg
imul
inc
daa
jns
pop
and
mov
and
fists
and
test
mov
outsb
push
mov
xchg
sbb
mov
push
mov
mov
push
outsl
andps
das
repz
add
xlat
aaa
mov
ret
sub
dec
sbb
mov
add
sub
movsb
push
mov
inc
shrl
inc
add
add
lea
jmp
mov
inc
inc
aas
shlb
mov
xor
addr16
lahf
sub
ss
daa
mov
lret
fildl
faddl
add
dec
ss
in
push
enter
mov
push
push
xorl
mov
dec
mov
add
xlat
mov
or
or
jg
nop
and
mov
mov
pushl
push
and
mov
add
adc
xchg
mov
mov
lods
pop
out
decl
out
dec
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
jle
sub
mov
sbb
das
in
adc
pop
sbb
xor
mov
std
iret
mov
dec
fsubs
sbb
sar
jg
mov
pop
dec
xchg
jecxz
dec
fadd
adcb
pop
adc
mov
jbe
mov
xor
xor
mov
imul
xchg
test
outsl
or
daa
jae
cmp
xchg
rorb
cmpsb
popf
in
push
or
dec
fs
push
es
dec
inc
sub
and
in
dec
adc
add
daa
cmp
xchg
xor
cmp
inc
das
cltd
in
les
dec
rolb
pusha
xorb
and
mov
pop
inc
decl
mov
inc
jae
lret
jp
inc
dec
xchg
aam
or
or
loope
pop
jnp
pop
xor
pop
pop
shl
pop
popf
ljmp
xchg
cmp
mov
sub
adc
push
push
inc
out
jne
sbb
addl
cmp
xor
ljmp
popa
daa
add
add
and
dec
mov
push
xchg
imul
bound
je
bound
imul
add
or
pop
xchg
nop
cs
add
and
aas
mull
lcall
inc
call
cmp
add
jae
test
and
xlat
add
test
cmpl
popa
aam
pop
bound
push
add
push
andl
es
pop
dec
push
or
inc
push
scas
mov
lods
pop
jmp
je
aaa
push
pop
sbb
mov
xchg
outsb
inc
inc
lods
lods
packuswb
aaa
xor
inc
dec
fbstp
push
mov
mov
jne
sarb
iret
inc
call
add
clc
add
push
ss
fmuls
xlat
add
lock
push
add
pop
xor
mov
push
dec
dec
in
test
cmp
movsb
push
ret
push
mov
ljmp
mov
lcall
lods
inc
rclb
pop
dec
and
mov
dec
mov
outsl
cs
lods
les
aaa
dec
cld
orb
arpl
mov
cs
sbb
add
jno
insl
ficoms
es
cli
push
stos
adcb
repz
andb
push
fstps
inc
mov
mov
test
and
push
lods
pop
mov
push
mov
dec
insb
xchg
fmull
cmp
cmp
rcll
mov
outsl
repz
push
push
es
insb
mov
inc
ret
add
jae
insl
jg
int
inc
add
stc
push
jo
fcmovne
mov
jbe
xchg
rorb
add
push
sahf
daa
aaa
pop
in
jge
in
rorl
add
cmpsl
fdivp
add
and
add
push
and
cmp
push
jl
push
xchg
cmpsb
mov
fistpl
mov
and
dec
push
out
negl
push
divb
push
stc
rep
sahf
int
std
sub
xor
loop
iret
push
jno
pop
sbb
insb
inc
ss
pop
sbbl
daa
out
mov
jp
dec
xchg
faddl
mov
std
mov
sub
xorb
fpatan
sahf
in
push
cs
pop
addr16
in
flds
jo
inc
xchg
push
cmpsb
mov
jmp
add
push
inc
inc
jl
clc
loope
xchg
nopl
inc
mov
lret
sahf
dec
call
push
xchg
fnstsw
sti
jecxz
pop
inc
or
push
pop
xor
repz
addb
ss
jnp
push
and
push
cmp
sbb
fsubrp
jo
pop
inc
push
push
push
push
es
mov
jnp
out
js
xchg
pop
lods
xchg
cmp
addl
push
fs
repz
mov
add
test
iret
fdivr
xor
dec
jecxz
xor
xchg
ss
out
aaa
sbb
aad
iret
jmp
out
xchg
xor
ss
in
cmp
push
cmp
pushf
repz
out
lock
xor
iret
jp
int
cmp
cmp
out
mov
cld
cmp
daa
repz
repz
imul
mov
sub
push
lds
push
sar
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
imul
pop
mov
popa
push
or
scas
int
mov
leave
loop
and
inc
jbe,pn
pop
mov
je
lds
test
idivb
imul
hlt
pop
sbb
enter
adc
repnz
xchg
inc
repnz
iret
pusha
or
stc
bound
adc
add
insb
aaa
sub
and
insb
pmulhuw
or
es
clc
testl
or
in
or
ja
outsb
outsb
inc
mov
xor
push
js
out
mov
pop
xchg
jne
jbe
gs
cmp
dec
pop
xor
daa
ja
pop
xchg
mov
and
lods
xchg
pop
fildll
stos
cwtl
fisubrl
add
shrb
cmpsl
js
shrb
pop
push
dec
lea
push
dec
cli
inc
outsl
aam
addl
push
fadds
jg
inc
push
push
mov
xchg
inc
flds
sysret
mov
fidivrs
pop
call
lret
es
pusha
xor
sbb
dec
movsl
xorb
inc
or
mov
xor
mov
inc
lods
cwtl
xlat
out
adc
cmp
addr16
loop
mov
aaa
sbb
cmp
mov
outsl
xlat
xchg
mov
inc
mov
mov
xchg
mov
sub
arpl
mov
jecxz
xor
testl
popa
or
inc
fs
cmp
inc
jb
mov
divl
sub
out
and
dec
sub
fnstsw
add
push
mov
ja
mov
dec
jecxz
addps
dec
daa
push
or
lods
jmp
jo
xor
mov
movsl
sbb
outsb
push
jnp
and
movsb
sub
push
mov
cmpsb
aas
add
loop
aaa
dec
push
mov
sub
pop
das
jb
addr16
rorb
add
popl
add
fsubrl
mov
sbb
cmpsl
or
iret
inc
cmp
stos
lret
xchg
out
addb
inc
mov
jmp
push
push
jbe
incl
dec
loopne
rolb
das
and
inc
add
inc
xlat
xchg
inc
mov
es
pop
sbb
addr16
rcr
testb
jae
and
loopne
pop
mov
das
pop
mov
movlps
sbb
stos
dec
sti
emms
fcmovbe
je
pshufw
das
sbb
push
pop
jg
xor
add
iret
inc
jbe
sub
roll
jbe
pop
pusha
test
mov
in
loope
mov
popf
sbb
and
insb
insl
insl
dec
xchg
lods
pop
inc
das
iret
add
lock
xchg
jb
inc
fildl
pop
das
pop
push
insl
pusha
or
add
mov
mov
pop
pop
xorl
dec
push
pop
inc
addl
pop
adc
pop
inc
add
add
and
mov
mov
jbe
inc
add
push
and
sbb
lahf
imul
or
add
loopne
test
push
sub
sbb
push
repz
push
sbb
ficompl
mov
pusha
stos
or
push
pop
push
add
inc
fidivl
adc
xorl
inc
sub
mov
fadds
pop
xlat
aas
add
push
test
pop
outsl
clc
mov
aas
add
pushf
mov
cli
mov
mov
jg
cmpsb
inc
inc
push
inc
scas
sub
pop
cli
cmp
dec
pop
out
or
push
popl
pop
or
sarb
mov
pop
jnp
pop
jle
fimull
pop
sarb
pslld
cltd
ret
ret
mov
mov
xchg
push
pop
orb
addr16
ss
inc
pop
mov
dec
scas
mov
push
out
dec
add
jbe
mov
cmpsl
push
js
or
jg
or
mov
mov
testl
pop
pop
inc
lret
push
popa
data16
ss
jns
je
adc
enter
out
xchg
adc
and
cmp
jbe
lahf
outsb
xlat
es
insl
jo
je
add
addr16
jo
jae
daa
pop
jno
xchg
jo
jne
xor
push
jg
sbbl
and
fcomps
adc
push
in
aas
cmpsb
jns
je
jne
or
les
fstl
mov
das
dec
out
pop
fildl
addr16
dec
cmp
dec
pop
inc
pusha
sub
js
and
punpckhwd
arpl
outsb
push
sbb
pop
das
addb
sti
xorb
inc
jecxz
dec
loope
jmp
mov
or
pop
stos
or
adc
mov
sub
dec
adc
jae
enter
push
pop
adc
and
or
into
dec
push
mov
push
jmp
movsb
or
inc
and
sub
aaa
inc
fistps
add
push
add
addr16
push
aam
jns
jb
add
add
cmp
and
shlb
add
inc
outsl
outsb
leave
add
aaa
inc
insb
fcomps
ljmp
pop
add
loop
pop
cmp
cmpsb
jb
out
negl
or
push
add
aam
mov
push
pop
outsl
inc
push
call
inc
dec
push
xchg
add
add
andl
pop
mov
jg
pusha
mov
fcmovb
jbe
out
xorb
pop
add
add
push
add
and
mov
insb
jnp
mov
js
pop
outsl
popa
in
into
dec
fidivl
and
ds
das
sbb
leave
sbbb
mov
sarl
daa
daa
push
and
outsl
cmp
pop
inc
inc
inc
push
inc
pop
and
or
mov
add
aas
js
insb
cwtl
scas
sbb
pusha
ja
pop
push
and
pusha
insl
adc
les
sub
popa
and
xor
pop
gs
xlat
or
or
pop
cmpl
dec
aaa
push
mov
lret
int3
std
imul
rol
test
mov
mov
xlat
push
scas
mov
xchg
and
pusha
mov
lahf
int
jns
outsb
je
bound
sbb
mov
mov
pop
sbb
jbe
mov
loopne
cwtl
push
fcomp
jnp
xchg
sbb
scas
mov
add
inc
adc
das
sahf
in
mov
mov
xchg
add
jl
or
icebp
scas
sbb
add
push
sti
pop
mov
popf
outsl
out
clc
fdivs
outsl
cmpsl
push
push
mov
daa
incl
iret
jnp
or
push
sub
insb
pop
sbb
dec
sbb
push
pop
fstps
mov
or
push
in
or
push
sbb
jb
ja
add
or
out
push
imul
mov
xor
jne
pushl
and
bound
cmp
loop
cwtl
es
insb
jns
shll
movsb
je
and
popa
stos
fisubl
add
loop
sbb
sub
sub
push
cld
and
js
and
dec
inc
lahf
cltd
mov
push
or
pusha
movsb
push
js
outsl
mov
icebp
gs
jo
jns
iret
inc
mov
cmp
pop
insb
adc
pop
sbbl
popf
outsl
insl
jne
cwtl
lds
add
xchg
or
addr16
cmp
and
push
inc
je
bound
pushf
fisubl
aaa
inc
insb
pop
jbe
orl
imul
inc
inc
shrb
into
aaa
xor
loop
jo
xor
fcomp
dec
sub
iret
dec
jnp
ret
orb
inc
cld
outsb
out
or
inc
xadd
sbb
inc
cmovo
add
inc
mov
cmp
nop
jo
maxps
loopne
add
call
inc
inc
cs
adc
fisttps
adc
sbb
mov
xchg
sbbb
sbb
cmp
aas
add
xchg
sahf
inc
inc
lods
mov
es
add
add
adc
add
imulb
add
adc
pop
mov
mov
lcall
ja
mov
xchg
mov
cwtl
xchg
and
movsb
inc
daa
outsl
insl
stc
jo
inc
xchg
xchg
es
call
pop
xchg
outsl
clc
push
xchg
xor
xor
sahf
out
jo
in
addr16
pop
push
scas
fbld
push
test
out
push
pop
add
xchg
and
add
fldcw
pop
mov
dec
jnp
mov
inc
pop
xor
enter
inc
fisubrl
adc
in
popf
nop
inc
xchg
add
sub
pop
insl
xlat
xchg
cmpsl
add
es
cmp
and
xchg
and
fstpt
test
mov
loopne
cs
mov
mov
xchg
dec
mov
js
xor
and
inc
dec
js
adc
movsb
jl
xchg
cmp
mov
pop
jl
enter
dec
sbb
jae
es
adc
in
jns
cltd
and
sub
inc
sahf
imul
pop
fsts
insb
ds
mov
pop
daa
push
movsb
in
out
inc
mov
rclb
mov
lock
jns
mov
lcall
nop
or
add
in
fadds
push
int3
mov
aas
lcall
mov
mov
push
xor
scas
jbe
aam
movsl
and
testb
fwait
or
adc
loopne
nop
or
cwtl
inc
inc
jne
fimuls
mov
inc
sbb
cmp
negl
xchg
push
mov
add
out
fisubrs
push
out
lock
aas
nop
int
dec
loopne
pushf
sub
in
popf
pushf
cmp
inc
aas
addr16
cltd
fmuls
orb
adcb
add
mov
int3
aam
mov
xlat
cltd
popf
add
fcompl
push
and
cmp
scas
fst
adc
xlat
dec
jo
jnp
in
test
enter
int3
jnp
out
inc
pop
popf
faddl
in
mov
push
dec
cs
out
test
sahf
sub
cmp
pop
jnp
in
ja
lcall
jl
pop
enter
lahf
insb
xor
cmp
repnz
pop
enter
pop
sti
es
or
mov
dec
dec
and
mov
repnz
enter
mov
test
mov
and
subl
push
and
test
loopne
pop
sahf
mov
fwait
jg
cmpsl
pusha
je
in
sub
pop
repnz
jg
cmp
enter
nop
out
movsb
pusha
clc
in
fistps
stos
sbb
or
mov
cmpsl
mov
jo
mov
cmpsl
mov
and
lods
pusha
pop
enter
mov
repnz
mov
lods
add
pop
and
in
hlt
sahf
out
out
pushf
and
cmpsl
pop
insb
test
add
dec
push
cmpsl
jg
test
cmpsl
dec
pushf
lods
rorb
inc
ss
dec
dec
es
nop
pushf
js
mov
pop
adc
lock
jp
jb
mov
idivb
fs
mov
and
nop
or
movsb
mov
nop
out
cs
clc
in
pop
mov
hlt
movsb
add
testb
pop
popf
and
xor
notb
push
dec
lahf
jns
imul
in
sahf
or
or
fimuls
movsb
in
clc
orps
test
cmpsl
aam
movsl
test
movsl
cmp
dec
outsb
imul
cmpsl
loopne
sahf
or
mov
xchg
push
cmpsl
jl
outsb
and
sahf
adc
iret
hlt
addr16
cs
movsl
push
cmpsl
shl
dec
enter
and
xor
dec
mov
mov
addr16
cmpsl
jg
push
cmp
cmpsl
insb
js
cmpsb
mov
xchg
mov
insb
out
pop
repnz
nop
inc
movsb
enter
push
cmp
out
add
enter
int3
push
lds
cmpsl
sub
inc
aas
push
cmpsl
mov
cmpsl
sahf
stos
js
movsb
cmpsb
jo
xchg
aas
cs
pop
push
cmpsl
jo
sub
call
xchg
push
cmpsl
testb
nop
ds
test
push
cmp
nop
aas
ja
cs
lahf
shrb
inc
cs
or
push
lock
fsubl
pop
sbb
mov
out
jmp
mov
dec
test
andb
ja
dec
pop
inc
sbb
push
adcb
add
jg
scas
jbe
iret
js
rcrb
inc
mov
sbb
dec
enter
adc
and
fistl
add
push
inc
jg
mov
lock
int3
push
inc
sahf
fs
rcll
out
inc
lock
mov
insb
push
loop
push
push
inc
dec
and
sub
into
push
cmp
add
lahf
mov
add
jmp
pop
insb
sub
push
inc
jg
lock
xchg
and
inc
ja
repnz
nop
inc
cwtl
in
cld
insb
je
adc
inc
or
int3
jbe
rolb
movsl
lcall
sub
ja
mov
inc
nop
inc
lods
mov
jnp
mov
inc
mov
lcall
xchg
xor
fimuls
xor
lods
inc
push
pop
add
push
repnz
test
add
lods
mov
lods
movsb
add
add
mov
and
cld
iret
test
push
inc
fsubrs
jbe
inc
scas
cmp
pop
jnp
sub
ja
fimuls
scas
mov
mov
outsl
push
add
jl
inc
shlb
mov
lahf
inc
add
out
test
scas
and
or
bound
jns
lahf
mov
nop
nop
or
inc
mov
cs
mov
cs
or
out
mov
mov
push
xor
in
lahf
in
nop
out
adc
addb
pusha
enter
inc
mov
rclb
jb
pop
inc
mov
mov
addr16
adc
je
outsl
cwtl
push
jnp
dec
jbe
inc
faddp
es
mov
lods
pop
cwtl
aas
popl
fmul
orb
fs
add
enter
xchg
mov
adc
jns
xor
and
outsl
add
sbb
addr16
jbe
adc
xchg
add
push
roll
nop
add
fsub
cltd
pusha
fldl
popl
xchg
enter
or
mov
insl
in
push
sub
addr16
fimuls
pop
daa
mov
push
lods
mov
jbe
js
adc
xchg
call
addr16
xlat
shll
mov
outsb
and
shll
mov
mov
pushl
or
add
add
movsb
outsb
jl
dec
roll
ret
in
dec
dec
movsb
pop
data16
push
or
mov
xor
cmp
pop
xchg
adc
mov
mov
dec
sbb
addr16
or
addr16
pop
mov
or
lahf
fnstcw
pop
ja
daa
scas
clc
mov
jb
push
push
dec
inc
inc
push
jb
push
cmp
and
sub
push
jb
add
mov
sub
fidivs
sbb
mov
sti
es
cwtl
ss
es
insb
fisubrs
adc
jge
jns
test
jo
xchg
out
enter
mov
fsubp
mov
je
int
insb
sahf
cmp
mov
and
or
setno
push
mov
or
dec
adc
xchg
mov
mov
xchg
inc
leave
xorb
add
mov
stos
dec
add
in
add
and
out
jo
add
enter
pop
leave
in
add
mov
add
mov
pop
in
ja
pushl
cmp
hlt
jg
pusha
cmp
and
aaa
and
fs
push
leave
add
lods
pusha
inc
inc
mov
inc
mov
outsl
inc
outsb
add
inc
and
inc
mov
adc
outsl
add
mov
fistpll
pushf
cmpl
mov
and
mov
xor
ljmp
or
xor
push
mov
mov
lods
and
push
aas
aaa
fisttps
sahf
ja
fs
lods
je
scas
add
or
outsb
mov
out
push
jmp
cmp
xchg
out
mov
fldcw
fildll
dec
testl
ret
fmul
out
sti
cmpsb
pop
add
mov
mov
aaa
mov
mov
in
sub
jl
js
rcrb
sub
jle
mov
push
ja
dec
out
shll
out
add
lds
sub
add
fimuls
ja
int3
push
fcomps
stc
fildll
fbld
jmp
outsl
and
mov
ret
inc
xlat
aaa
dec
push
fisttpll
jbe
push
scas
add
outsb
xchg
out
dec
pop
bound
stc
sub
pop
add
pop
call
cmp
xchg
mov
mov
xor
testb
inc
incl
pop
fs
pop
xchg
jl
mov
es
movsb
rorl
outsl
adc
sahf
rcr
call
push
dec
push
add
in
scas
clc
and
popf
rolb
adc
inc
dec
pop
sbb
out
lds
sbb
divl
jns
ja
cmp
sarb
outsb
rclb
push
bound
mov
xchg
push
pop
daa
aaa
in
insl
shl
or
push
ret
fs
lds
pop
push
rolb
out
push
or
lock
fmuls
movsbl
ss
orb
mov
jb
jmp
shll
add
or
dec
mov
push
xchg
fisubrl
cmpsl
loope
dec
pop
mov
push
nop
dec
les
aam
and
in
inc
jno
pop
ret
ret
ret
add
inc
mov
and
ss
add
nop
iret
add
insb
add
mov
jo
clc
test
fs
mov
pusha
and
mov
xor
addr16
aaa
outsb
in
pop
in
pusha
and
pusha
test
les
repnz
add
enter
jle
outsb
adc
jg
leave
jnp
mov
jbe
xchg
arpl
jg
xchg
dec
fisubs
lods
add
mov
xor
cmp
nop
sbb
inc
mov
fildl
push
lods
imulw
ljmp
daa
mov
pop
int3
pop
clc
pop
or
mov
push
cmp
sbb
mov
aaa
push
mov
ja
xchg
fs
movsb
xchg
add
pushfw
push
push
jnp
xlat
addr16
lahf
or
daa
xchg
lret
pop
shlb
sub
mov
add
mov
push
cmp
mov
iret
rep
xchg
push
enter
dec
cmp
out
cmp
push
mov
or
cmp
or
aaa
or
fiaddl
push
add
fisttps
adc
pop
dec
pop
leave
sub
add
insb
and
fisttps
repnz
je
xchg
cmpsb
nop
add
fimull
add
add
aaa
mov
dec
pop
dec
xchg
int3
push
xchg
pop
scas
add
mov
outsl
cmp
fs
stos
and
inc
add
sahf
nop
das
push
popa
mov
dec
inc
rorb
adc
sub
xchg
scas
in
ret
mov
inc
push
cmp
mov
lretw
xorb
aas
das
xor
imul
filds
stos
mov
mov
addr16
mov
les
xor
xor
ja
fs
jnp
mov
adc
cltd
inc
hlt
test
shrl
pusha
aaa
dec
dec
and
test
lods
pop
enter
daa
mov
pop
jb
pop
mov
test
lock
add
in
mov
daa
push
jbe
int3
inc
push
dec
pop
andb
xchg
inc
ja
inc
push
lcall
xchg
mov
mov
fisttpl
xchg
xchg
nop
call
push
push
std
pop
lahf
out
subb
sbb
xor
test
sahf
out
sub
sahf
shl
int
out
outsl
cmp
out
ds
ljmp
jns
iret
repz
cld
sub
jl
out
aam
and
ds
mov
dec
jae
je
out
cmp
mov
sarl
clc
adc
pop
jl
cmpsl
stc
cmp
sbb
cmp
out
loop
js
pop
iret
mov
or
push
lea
fdivr
sbb
aaa
push
xor
out
jg
in
sbb
imul
mov
jl
repz
out
cli
pop
jge
int
jns
out
jle
dec
insb
xchg
jns
jge
mov
push
xchg
frstor
out
sahf
out
orl
adcb
repz
cld
inc
test
sbb
dec
subl
iret
repz
mov
ds
jns
jecxz
mov
repz
out
jns
cmpsl
stc
push
mov
mov
repz
aaa
jb
hlt
sarl
sbb
mov
mov
nop
je
popf
idivl
loopne
xchg
push
sbb
xlat
inc
xchg
jp
cmpsl
stc
cmp
or
dec
mov
sahf
dec
nop
out
dec
xchg
and
add
sub
lcall
stc
cmp
es
jl
and
sahf
addr16
xor
cmp
inc
popf
insb
mov
sahf
lcall
adc
jns
add
dec
js
mov
mov
and
push
sti
movsb
xchg
mov
add
dec
mov
iret
rcll
roll
repz
out
int
test
jbe
stc
cmp
mov
popf
cmpsl
stc
xor
fsubrl
stos
xchg
and
sahf
stos
loop
lods
xchg
push
push
imul
scas
jmp
cmp
out
adc
outsl
stos
repz
out
mov
enter
repz
dec
pop
mov
lahf
ds
ds
lret
mov
push
flds
jl
out
aaa
jp
call
out
mov
mov
imul
rorl
lahf
out
shlb
mov
lcall
mov
iret
lahf
xor
repz
push
mov
ror
jl
insb
cmpsl
sub
pop
fsts
jns
ret
ja
idivb
ss
mov
cltd
lret
int3
int
mov
fcomps
iret
outsb
inc
rolb
push
aam
je
dec
adc
fcmovne
nop
fmull
fstp
push
iret
push
loopne
aam
sahf
int
jecxz
out
adc
add
outsl
int3
nopl
mov
add
call
aam
pushf
popf
dec
fidivrl
outsb
sub
getsec
sahf
inc
jp
mov
rolb
in
fucomi
cmp
shlb
enter
pop
mov
inc
lock
inc
fwait
push
scas
pop
shlb
push
push
add
sub
jge
jnp
addb
aas
andb
aas
popf
push
call
mov
jg
adcb
xchg
xor
xlat
jle
fwait
in
repz
popf
cmpsb
jns
ret
scas
pop
mov
mov
xor
push
jo
setg
mov
fsts
outsl
out
jecxz
mov
sbb
in
pop
das
nop
adc
mov
push
imul
fildl
out
aas
add
mov
adc
add
data16
cmp
and
jmp
int3
js
in
inc
mov
mov
inc
sub
mov
inc
jl
mov
xchg
incb
pop
mov
pushf
push
scas
leave
in
pop
adc
add
aaa
or
repnz
mov
shl
cmpsl
dec
mov
jb
jl
xchg
adc
cmp
push
popa
lahf
dec
aas
jb
and
xlat
dec
xlat
pop
xlat
insb
in
and
ja
mov
push
lock
add
pop
push
bound
aas
idiv
dec
xchg
sbb
sub
add
out
aaa
lock
xchg
aaa
and
pop
pusha
addr16
inc
or
ja
in
push
dec
outsl
push
sub
inc
or
add
aad
push
mov
jae
insb
lret
pop
lahf
add
rorl
flds
in
adc
enter
leave
in
cmp
fadds
ja
xchg
adc
cmp
cmp
mov
dec
je
mov
mov
push
xchg
mov
in
jb
push
jo
adc
punpckhbw
cs
inc
cmp
pop
and
push
inc
lods
and
notl
mov
push
xchg
xchg
or
ljmp
dec
outsb
push
mov
xchg
dec
jl
add
inc
test
pop
and
sub
mov
dec
fcmovnbe
mov
and
jge
fcompl
daa
cmp
fmull
daa
sub
outsl
in
xchg
and
pop
sbbb
sbb
fsubl
scas
inc
xor
pop
mov
mov
in
sbb
iret
faddl
mov
daa
aam
mov
xor
adc
pop
xor
dec
fisttpll
xor
add
mov
in
imulb
aaa
ja
loope
pusha
and
les
or
add
xor
jne
leave
push
hlt
ficomps
and
mov
inc
mov
fidivs
sbb
mov
ret
add
add
add
leave
dec
movsl
pop
mov
icebp
push
mov
popa
pop
popa
and
cmpsl
jmp
push
cmpsl
fildll
leave
dec
sbb
jbe
dec
ret
inc
jb
cmpsb
aaa
fists
addr16
xor
pop
xchg
or
in
out
loopne
jb
mul
sbb
sbb
jg
push
xlat
bound
sub
jb
dec
bound
pop
add
mov
mov
xchg
cmp
and
imul
ror
leave
in
int3
cmpsl
aam
in
cmp
leave
in
hlt
loope
leave
in
in
jbe
pop
nopl
xchg
out
fs
add
inc
mov
sbb
xchg
mov
addr16
in
dec
sti
out
xchg
sahf
add
sbb
jb
pop
mov
or
or
or
aaa
pop
adc
dec
push
loope
fs
in
das
push
sub
xchg
mov
add
daa
cmp
test
and
add
fwait
outsl
loop
leave
mov
in
loop
daa
hlt
scas
push
mov
jecxz
jecxz
daa
dec
scas
mov
sti
adcl
das
mov
push
mov
add
add
xchg
and
add
add
jb
push
pop
arpl
outsb
out
or
out
lahf
test
mov
cmp
ret
pop
gs
in
ret
add
in
loopne
xchg
fsub
int3
daa
in
pop
and
jno
cs
mov
push
push
je
sbb
jl
data16
and
and
add
add
add
lea
neg
mov
sub
pop
fists
clc
xlat
dec
adc
or
addr16
out
cmp
mov
insb
fs
mov
cmp
or
in
and
daa
xchg
jp
fisttpl
inc
aaa
out
out
daa
dec
or
xchg
rorb
dec
push
sahf
add
ret
add
push
in
jno
call
in
call
push
gs
add
call
inc
dec
dec
icebp
stc
imul
jo
clc
dec
mov
inc
ja
jmp
jmp
imul
outsl
xor
popf
pushf
ja
mov
xchg
jb
dec
push
addr16
xchg
ljmp
daa
adc
xchg
xchg
ljmp
mov
pushf
cmp
adc
jne
cmpsl
ljmp
mov
test
lret
pop
jmp
cmp
sbb
jmp
and
xchg
sub
js
in
jbe
outsl
push
emms
addr16
pushf
xor
xlat
push
push
cmpsl
mov
test
mov
in
and
movntq
out
xlat
outsb
daa
xchg
in
imul
adc
jns
add
xchg
push
cmp
lcall
popf
scas
mov
add
mov
pop
inc
mov
decl
fs
in
daa
incl
test
out
pop
rolb
push
stos
test
inc
mov
ficomps
push
out
icebp
add
jb
enter
pop
add
add
sbb
sub
xor
xlat
inc
inc
jg
fildll
rorl
insb
mov
out
pop
mov
test
out
test
fldcw
in
insl
adc
add
leave
dec
adcl
mov
adc
out
adc
inc
cmp
aaa
out
inc
mov
call
and
pop
push
aas
leave
and
clc
jbe
outsb
pop
xchg
pop
lock
inc
jb
mov
scas
cmpb
jbe
mov
out
and
mov
mov
leave
inc
jb
insl
icebp
adc
cmp
scas
aad
test
leave
push
xchg
lret
xchg
jo
insl
pop
leave
and
popf
mov
aas
push
cmpsl
scas
filds
leave
inc
xor
shl
cmp
je
and
sub
xchg
in
and
bnd
fs
mov
outsl
push
add
xor
fiaddl
ss
push
or
in
inc
pop
sbb
push
jnp
scas
add
xchg
pop
push
imul
loopne
addr16
sub
aam
jb
push
adc
dec
inc
mov
add
add
cmp
inc
push
dec
push
or
leave
jecxz
pop
outsl
repz
orb
inc
push
add
cli
das
push
loope
test
fcomip
xchg
hlt
pop
sbb
mov
pmulhuw
fsts
roll
fiadds
mov
add
add
pop
cmp
sbb
and
lock
cltd
test
jae
fs
cmpb
mov
or
add
mov
inc
sbb
mov
fisttpll
leave
roll
pandn
out
pop
testb
je
push
pop
cmp
mov
inc
pop
sbb
test
not
xchg
outsl
dec
inc
mov
lcall
rcrb
add
or
dec
adc
fbstp
orl
adc
adcl
inc
unpcklps
inc
jne
idivl
pop
mov
mov
jbe
leave
mov
rolb
jbe
push
and
sub
ja
xor
sbb
aas
jbe
leave
inc
jb
daa
pushf
mov
enter
imul
push
pop
daa
ja
daa
pop
leave
stc
add
dec
out
ja
test
cs
bound
movsl
or
push
mov
add
or
addr16
inc
fwait
js
push
or
adc
sbb
add
cmpsl
push
ja
push
pop
pop
cmpsb
push
outsl
mov
push
ja
add
or
xchg
jle
cli
dec
xchg
mov
mov
pop
rolb
ror
xchg
add
cld
pushf
mov
mov
adc
mov
ds
xchg
daa
mov
pop
dec
push
push
pop
push
leave
enter
adcb
insb
mov
rcrb
adc
mov
in
push
lea
repz
addr16
ja
rclb
ss
rolb
leave
dec
add
pop
inc
mov
pusha
lahf
push
jp
andb
addr16
mov
xchg
add
adcl
sbb
xlat
fsub
xchg
add
imul
or
push
cmp
and
and
daa
testl
cmp
add
std
pop
jnp
xchg
push
adc
jbe
xchg
xchg
add
adc
test
add
mov
daa
xchg
movl
in
std
std
and
or
int3
daa
in
pop
aam
imul
and
in
lods
add
xchg
dec
mov
dec
sub
jl
cvtps2pd
jl
mov
push
mov
mul
jbe
jl
cmpsl
xchg
popf
movsl
add
mov
mov
mov
leave
inc
adc
cmpsl
jl
in
cmp
pop
push
jge
mov
pushf
sub
jge,pt
push
jb
fs
add
add
ja
dec
dec
jne
jg
aas
jge
sub
mov
fxch
inc
sti
push
add
out
sti
out
cmp
in
jle
add
adc
sbb
sub
aaa
push
inc
or
dec
je
jle
jle
js
and
mov
xchg
in
in
rcr
ljmp
aas
jg
inc
mov
add
cmp
punpckhdq
jg
in
xchg
and
jg
jg
mov
mov
mov
imul
adc
orb
push
add
ja
xor
in
inc
adcb
add
insb
add
mov
ja
pushf
fsubrl
enter
in
subb
out
sti
inc
add
outsb
daa
mov
sbbl
inc
mov
xchg
incl
push
imul
jno
jns
addl
or
test
rorl
push
rcr
adc
enter
jmp
stc
adc
ss
addb
or
adc
sbb
sbb
mov
addr16
insb
das
xorb
mov
add
popa
push
add
leave
dec
ja
mov
add
mov
xor
lahf
andl
cvttps2pi
daa
aaa
pop
add
out
in
push
add
dec
dec
mov
or
ljmp
testb
testb
fdivl
xlat
jbe
stos
jno
addl
dec
fisubl
cmp
pop
mov
cltd
or
pop
fmull
mov
inc
inc
in
in
jne
add
pop
hlt
cmovg
add
push
jo
cmpsl
shr
pop
add
aas
push
sti
leave
repz
add
or
lock
outsb
add
jg
enter
loope
adc
and
pop
add
testb
xor
test
add
fiadds
es
sub
or
or
into
add
in
add
sarb
mov
push
or
aas
pop
clc
daa
sbb
jg
jne
popf
inc
inc
dec
lahf
addb
or
aad
out
cmp
or
pop
xor
daa
nop
outsl
mov
jbe
into
pop
in
outsb
push
push
cmc
loope
push
in
shrb
sar
pop
enter
arpl
enter
pop
xchg
xchg
sbb
add
cmp
inc
call
xor
orb
cs
xchg
dec
nop
jbe
addr16
dec
xchg
add
mov
add
int3
push
faddl
in
or
stc
jb
or
or
mov
xchg
sbb
xchg
xchg
add
addl
and
lahf
push
scas
pop
in
xchg
and
or
xchg
jb
or
xchg
or
enter
sub
daa
mov
cmp
loopne
mov
stc
sahf
jne
notl
add
add
fsubl
adc
pop
jb
cs
jo
xor
in
push
je
dec
test
mov
movsl
enter
lods
add
dec
fwait
push
out
hlt
cwtl
inc
mov
push
or
mov
pushl
jb
mov
bndstx
or
dec
in
add
out
push
jg
dec
add
and
shrl
cmp
iret
lods
xor
in
mov
mov
pop
mov
addr16
dec
mov
mov
jo
push
jo
xchg
sbb
jae
insl
inc
push
push
pop
add
repnz
add
clts
in
and
fcoms
pushf
push
sub
fnstsw
xor
add
in
lahf
ret
fisttpl
dec
clc
outsl
clc
pop
mov
push
or
push
testl
pusha
lldt
push
in
cmpsl
fsubl
cld
imul
xor
mov
mov
mov
push
scas
mov
pmullw
repnz
mov
in
add
lea
jbe
jl
push
daa
mov
adc
inc
bound
mov
push
push
add
and
add
ds
mov
js
push
cmp
xchg
xchg
mov
test
add
out
mul
inc
xor
sbb
aad
enter
das
xor
xchg
adc
xchg
pop
pop
in
je
fs
adc
fwait
mov
xchg
jb
xchg
iret
xlat
cmp
lahf
mov
and
mov
mov
dec
mov
mov
adc
pop
jb
push
mov
xchg
pop
jb
je
pushf
mov
add
out
sbb
mov
fmull
jb
inc
push
sub
xchg
in
sbb
in
divb
movq
push
adc
cmpsl
lret
repnz
xor
add
mov
xor
cld
cmpsl
das
ja
jb
nop
pop
xor
dec
add
jo
sub
mov
adc
nop
xchg
and
xchg
push
cmpsl
push
cmpsb
mov
mov
add
aas
movl
enter
or
repz
cmp
enter
pop
push
adc
sub
cmp
pop
sub
inc
sbb
xchg
addr16
pop
add
add
push
add
dec
dec
inc
jne
test
int3
cwtl
nop
daa
xchg
add
jg
inc
xorl
icebp
mov
add
xchg
or
adc
xchg
add
push
xchg
xchg
xchg
and
fs
add
fnstcw
xchg
nop
nop
or
lahf
scas
jns
mov
add
add
pop
cmp
and
xchg
add
prefetch
push
leave
sub
sbb
nop
mov
push
dec
add
int3
fisubrs
jle
mov
xchg
fistps
dec
inc
sahf
mov
ret
pop
fidivl
fmull
dec
lock
sub
cmp
mov
jl
divps
and
push
data16
add
adcl
xchg
mov
and
leave
dec
or
in
adc
add
in
enter
outsl
push
aas
hlt
add
adc
sbb
xchg
jbe
dec
xchg
femms
daa
xchg
mov
fldcw
add
aaa
aas
cmpsl
xchg
inc
dec
sbb
xchg
das
cmpsb
push
leave
jb
addb
and
das
sbb
pop
out
push
xlat
xchg
push
repnz
fsub
add
lock
pop
xchg
add
or
rorl
dec
sbb
xchg
sub
inc
mov
xor
push
cmp
inc
dec
in
sbb
xchg
add
lret
ja
add
adc
dec
dec
mov
in
sbb
test
in
in
in
negl
cld
sbb
sti
push
daa
das
aaa
xchg
mov
fidivrl
xchg
fsubl
mov
xchg
push
mov
sahf
pushf
mov
jb
mov
addr16
leave
dec
add
push
lock
cwtl
pop
dec
and
xchg
cwtl
and
jb
leave
dec
sub
cmp
fildl
ja
outsb
add
xchg
addr16
fldl
push
add
and
mov
or
out
fcompl
push
sbb
sbb
push
jg
sub
aad
xchg
xor
push
cmp
push
out
jmp
pop
ja
leave
leave
in
and
and
fst
xchg
idivl
cmp
mov
pop
adc
dec
sub
cmp
dec
push
push
sbb
lcall
mov
mov
pop
pusha
outsl
lcall
ret
into
add
flds
in
kmovw
add
mov
adc
pop
mov
sub
cmp
pop
sahf
mov
popa
push
jp
orb
xchg
add
mov
cmp
pop
pextrw
mov
and
imul
test
shrb
pushf
pop
push
xor
dec
adc
add
add
cmp
add
dec
push
or
pusha
imul
orl
test
adc
mov
and
int
outsl
fsub
insb
lods
daa
mov
lahf
out
stc
pop
outsl
popf
add
mov
psrad
and
addr16
in
adc
test
in
xor
xchg
xchg
add
inc
shl
sbb
and
mov
jmp
ja
repz
add
addr16
pop
sahf
add
push
pop
or
adc
leave
enter
or
sub
sbb
fmulp
xor
mov
cmp
and
stc
rcrb
leave
leave
enter
das
add
add
cmc
pop
add
and
mov
test
mov
mov
push
pop
lahf
push
adc
cmp
xlat
mov
cmp
inc
pop
xchg
out
sub
inc
push
fisttps
push
or
cmp
pop
out
call
aad
and
out
mulb
dec
or
mov
in
mov
mov
mov
and
mov
mov
and
and
and
mov
aas
in
enter
add
add
in
in
push
pop
cmp
pop
and
out
mov
jmp
fsubrl
pushf
into
pop
fimuls
out
xor
pushf
out
imulb
leave
sti
lcall
cmp
lods
das
push
mov
inc
fildl
seta
movsb
push
pop
fs
insb
add
movsl
pop
sub
je
test
dec
in
loope
dec
aas
mov
push
cwtl
adcb
std
push
daa
lock
and
and
pop
es
lock
fstpt
aaa
je
inc
push
cmp
fs
mov
daa
cmp
dec
mov
popa
es
mov
xchg
fsts
pop
mov
mulb
mov
loopne
jl
or
or
and
pop
or
cmp
enter
adc
pop
adc
inc
mov
adc
adc
in
xchg
pop
nop
sbb
cmp
cmp
cmp
cmp
adc
cmp
cmp
adc
push
lret
cmp
add
daa
add
loope
in
aas
mov
cmp
out
mov
sbb
add
pushf
sub
inc
sbb
jb
enter
daa
add
add
add
bound
cmp
add
mov
rolb
mov
mov
push
popf
sub
push
sub
daa
insl
dec
jae
insl
lahf
jb
jg
dec
xlat
leave
mov
test
cmp
in
in
push
pop
lock
fisttps
sub
xor
cmp
xor
in
add
add
and
pop
sub
jl
movsb
cmp
xchg
xchg
shlb
into
hlt
cld
hlt
xchg
xlat
ret
pop
das
cmpsb
pop
and
frstor
sub
int3
sahf
pushf
pop
bound
xchg
push
in
sbb
pop
shr
pop
movsl
cmpxchg
fucomi
in
shr
fcomps
loopne
outsl
mov
cmpsl
aad
inc
mov
add
add
add
xchg
xchg
mov
sub
xchg
xchg
mov
cmp
or
dec
or
in
fstps
pop
arpl
lahf
in
jae
jae
adc
push
xor
xchg
sahf
adcb
cmpsb
scas
out
sub
pushf
fmull
ja
roll
xchg
pop
fcomip
add
add
jne
inc
in
insb
outsl
sub
imul
imul
cmp
mov
xchg
daa
and
add
add
imul
jae
or
testl
outsb
or
cmpsb
dec
mov
fildll
sub
mov
cs
push
push
push
test
repnz
in
add
jmp
cmp
stc
test
addr16
mov
test
mov
ja
aad
fcmovne
jne
jne
jb
dec
das
xor
cmp
mov
movsb
data16
in
lahf
jge
roll
mov
xchg
out
in
dec
push
xchg
mov
out
xor
cwtl
mov
out
add
sub
inc
subl
rsm
enter
mov
xchg
xchg
dec
mov
mov
pop
add
cmp
pusha
jg
xlat
repz
daa
addr16
jmp
stos
or
push
inc
and
adc
test
add
xchg
out
imul
dec
push
je
jb
enter
add
add
jbe
sahf
sahf
aas
sahf
pop
sahf
or
push
scas
or
add
pushf
mov
xor
jmp
inc
cmp
cmp
lods
adc
sbb
jb
pop
jo
pop
add
movsb
xor
movsb
fs
xchg
scas
mov
mov
push
mov
jb
add
add
xlat
cmp
cmp
fucomip
icebp
sti
dec
dec
inc
push
lods
add
adc
dec
daa
iret
adc
xchg
and
lods
dec
lods
push
lods
pop
dec
sbb
xor
jbe
cmpsb
adc
leave
test
in
push
sbbl
mov
fidivl
lds
rcrb
fcmovnu
add
out
pop
push
jb
xchg
xchg
or
scas
pop
or
or
je
jb
sbb
jb
jns
adc
sub
ljmp
fldt
xchg
pop
xor
pop
das
add
jg
inc
add
fistps
das
roll
int3
fsts
jnp
dec
outsl
jo
pop
outsl
push
xchg
je
out
lods
scas
mov
xor
ds
dec
repnz
inc
dec
jo
push
out
cld
scas
push
push
push
ss
mov
movl
push
inc
sub
popf
pushf
dec
push
cmpsl
push
mov
scas
jbe
pop
test
pop
mov
pop
nop
ja
sarl
xchg
pop
mov
mov
addr16
repnz
cmp
inc
jb
leave
push
dec
cmp
shr
leave
xchg
mov
imulb
dec
mov
lahf
in
leave
in
lret
fiaddl
psrad
sbb
jb
add
add
pushf
pushf
pushf
add
add
and
mov
or
ret
enter
adc
adc
pop
enter
adc
mov
adc
in
dec
mov
pop
cmp
fisubl
cltd
add
add
enter
mov
or
xchg
and
leave
or
mov
dec
and
sbb
mov
pop
mov
add
pmulhuw
mov
ds
je
daa
iret
ljmp
and
shrb
dec
data16
sub
femms
xor
mov
cmp
inc
adc
adc
and
daa
adc
mov
repnz
in
pushf
movsb
lods
sbb
mov
mov
pushf
pushf
bswap
push
and
fsubl
pushf
mov
in
dec
hlt
paddb
and
pushf
sub
adc
in
enter
sub
sub
jbe
jb
das
cmp
cmovl
test
mov
pmulhuw
notl
pop
pop
inc
aam
inc
fistpll
and
in
jecxz
or
xor
cmp
add
xor
add
inc
daa
mov
push
sub
cltd
movsb
lahf
mov
jmp
movsb
and
lds
xchg
pushf
jmp
mov
aad
daa
out
arpl
sbb
and
xchg
mov
xchg
xor
mov
outsl
pop
fidivs
repnz
divl
and
add
fcmovne
enter
lcall
and
mov
mov
stc
jb
lock
adc
xchg
and
adc
push
cmp
enter
sbb
pop
sbb
inc
mov
sbb
sbb
xchg
push
mov
xchg
and
cmp
and
and
shll
frstor
ljmp
sub
sub
and
push
daa
es
cmp
and
push
and
inc
mov
and
push
je
in
xchg
sbb
mov
inc
mov
xchg
sbb
in
xchg
and
dec
sbb
jb
or
dec
in
out
mov
inc
cmp
or
shld
mov
in
xchg
in
testl
push
add
pop
push
popa
pop
outsb
or
insb
femms
mov
xchg
or
and
mov
jb
adc
adc
adc
adc
xchg
and
adc
adc
cmp
adc
sbb
sbb
sbb
push
sbb
bound
insb
pop
jns
xorl
xchg
dec
popf
outsl
test
mov
mov
iret
ret
out
into
sbb
pop
xchg
and
loope
jmp
jb
lret
cld
adc
adc
and
sbb
push
sub
xor
in
xchg
or
or
or
sbb
push
or
insl
push
js
enter
cmpl
fcmovne
xchg
lahf
das
cmpsl
add
jle
ds
xchg
fcmovnu
in
daa
and
push
push
in
add
leave
xchg
pop
mov
or
leave
adc
sbb
jb
and
adc
mov
andnps
addr16
outsl
ja
sbb
pushf
mov
les
into
add
mov
in
loop
ljmp
lea
adc
sub
in
jbe
das
cmp
cmp
in
push
pop
arpl
outsb
adc
cltd
cmp
pop
xchg
pmulhuw
jbe
lahf
cmpsl
das
scas
mov
in
in
iret
xlat
push
sbb
repnz
add
xchg
xchg
daa
int3
invd
push
and
and
push
add
and
daa
inc
pop
dec
push
add
daa
popw
jo
jo
or
fcmovne
in
cwtl
push
pop
mov
pop
inc
daa
mov
mov
jo
test
mov
pop
scas
mov
add
jb
enter
add
mov
xor
or
jo
sahf
int3
sahf
test
push
mov
leave
enter
adc
lret
adc
loopne
psadbw
in
enter
sbb
pop
pop
xor
fs
sbb
cmp
jns
pop
pop
and
dec
inc
sahf
jp
test
xchg
daa
cmpsb
daa
mov
xsavec
daa
daa
daa
rcr
call
xchg
cs
das
mov
test
inc
mov
insb
push
dec
add
arpl
imul
add
add
loopne
jg
xchg
outsb
mov
jb
or
jb
jb
iret
xlat
fistpll
sbb
out
adc
mov
pop
push
nopl
cmp
in
adc
daa
sbb
sbb
mov
sbb
and
popf
dec
pop
inc
clc
shlb
xchg
xchg
xchg
jl
mov
sahf
cmpsb
scas
dec
shlb
mov
scas
or
and
testl
les
rorl
cmp
xor
pop
dec
or
xchg
cltd
inc
pop
iret
rcrl
or
jg
mov
pop
mov
mov
enter
pop
fsts
repnz
cld
cmpps
sbb
sbb
mov
add
pop
outsb
daa
and
and
pop
inc
dec
into
into
into
jg
dec
lahf
ret
pop
iret
ret
arpl
inc
sahf
fmull
and
aaa
sub
in
xchg
sub
pop
sub
sbb
outsb
das
jns
test
xor
xor
movsl
xor
repnz
fnstcw
sarl
ret
outsb
cmp
cmp
cmp
dec
cmpsl
ds
mov
mov
psrlq
inc
jmp
in
inc
les
inc
push
sbb
sbb
jb
es
rdtsc
adc
add
lock
pusha
lea
xchg
out
das
dec
lahf
dec
sbb
add
outsb
and
in
dec
mov
les
inc
mov
nop
outsl
push
fwait
add
add
xchg
push
mov
vmwrite
fs
or
stc
lds
adc
pop
push
movntps
cmp
adc
push
xchg
xchg
xchg
in
scas
push
push
mov
rsm
pop
mov
daa
and
sbb
and
dec
popw
repnz
shufps
pop
mov
es
pusha
repnz
push
pop
imul
jbe
cltd
xchg
xchg
mov
movsb
add
scas
add
fcmovne
enter
rcrb
fisttpl
jnp
in
out
or
movl
jge
dec
push
sbb
divb
xor
adc
push
adc
popa
adc
mov
and
sbb
xchg
fsts
sbb
xchg
mov
pop
enter
pmulhw
mov
jb
lock
and
push
outsl
adc
nopl
das
daa
sub
dec
enter
rcpps
daa
imul
push
cmpsb
push
pop
enter
mov
add
add
add
fcmovne
enter
push
jmp
aas
ror
pop
ljmp
or
dec
cwtl
leave
test
and
outsl
cmp
pop
inc
dec
add
fcmovne
enter
push
outsl
jp
jb
in
cmpsl
or
mov
cmp
or
adc
inc
and
adc
dec
into
ficoms
xor
scas
add
inc
inc
into
aas
sub
in
fptan
or
inc
sbb
pop
sbb
push
lea
and
fcmovne
enter
rorl
sbbb
out
std
lahf
lret
mov
test
adc
mov
sbb
dec
and
cs
adc
lret
cmp
stc
push
dec
add
fs
and
dec
jp
test
xchg
or
or
iret
cmp
cmp
or
jl
xchg
lret
push
sti
adc
or
adc
dec
dec
inc
push
sub
and
cmovl
das
sbb
adc
jp
test
push
dec
int3
pop
outsb
xchg
xchg
jbe
iret
push
enter
je
fidivrs
jmp
xor
in
pop
int
push
or
cmp
jnp
or
sbb
or
jbe
sbb
cmp
inc
cmovg
pop
xor
fs
pop
adc
addr16
jbe
aas
jg
lea
mov
jb
sbb
and
sahf
mov
enter
dec
stos
xchg
and
jmp
push
loopne
jnp
push
lods
push
into
or
pop
daa
out
sub
and
insb
dec
cmp
pop
xchg
xchg
mov
or
jno
jl
enter
or
xchg
or
popf
sbb
jb
adc
mov
fildll
ljmp
cmp
sbb
sbb
add
mov
and
sbb
sbb
mov
mov
pop
cmp
dec
add
jb
enter
and
and
cmp
xchg
stc
cmp
add
les
lock
pop
push
movsb
negl
jo
push
push
xchg
daa
mov
push
cmp
push
ljmp
jnp
add
bndstx
das
dec
mov
sub
dec
pop
in
daa
shlb
jb
mov
mov
xchg
add
jns
xor
pushf
cmpsl
mov
jbe
adc
push
enter
jge
repnz
fsubrp
leave
fldln2
jmp
push
and
pop
cmp
fs
adc
inc
adc
mov
sbb
fcompl
out
xor
xchg
repnz
pop
aas
rcl
inc
pop
xchg
daa
and
arpl
outsb
jns
jb
enter
es
xor
das
sub
jnp
jb
sub
fdivl
cmp
sbb
out
out
das
repnz
int
sbb
rorl
movlps
push
cmovbe
fidivs
das
pop
cmp
arpl
and
dec
jns
pop
test
xchg
pop
scas
inc
push
dec
shll
in
call
addr16
mov
lahf
lods
das
mov
cmpps
daa
iret
das
fimull
in
lock
daa
das
dec
sti
or
push
adc
leave
enter
sub
pop
xor
aas
mov
leave
in
dec
adc
push
bound
insl
vmread
pop
sbbl
cltd
and
outsb
pop
mov
leave
push
aam
and
fisttps
ljmp
mov
inc
dec
pop
add
mov
pcmpgtw
jo
jnp
jnp
mulb
sub
cmc
add
rdmsr
jnp
cmp
das
push
das
and
pop
sub
jnp
jns
xor
xchg
xor
in
jbe
das
mov
mov
pushf
aam
lahf
dec
iret
push
in
dec
pop
gs
inc
push
js
sbb
test
scas
iret
add
in
or
xlat
add
add
mov
or
pop
fsubrs
xsaves
setg
loopne
out
mov
xlat
pop
movntps
xchg
add
and
xchg
pop
or
jnp
enter
daa
pop
data16
dec
jmp
mov
cmpsl
pop
pop
or
cmpsl
in
iret
add
js
xor
daa
mov
jge
mov
inc
xor
push
adc
inc
inc
or
daa
out
push
xorb
adc
pop
xchg
cs
inc
push
mov
pop
stos
inc
add
cmp
xor
pop
inc
outsb
push
or
dec
aaa
pop
out
ficoml
aaa
xlat
add
cs
shrl
add
repz
sbb
jbe
repnz
or
or
mov
scas
or
adc
jbe
daa
push
adc
in
jbe
and
mov
in
push
addr16
das
push
xorps
insb
das
insl
push
and
fmull
sbb
push
pop
andb
pushf
fsubrl
cmpb
test
xchg
jbe
repnz
sahf
mov
loopne
cmpsl
mov
into
aas
xlat
dec
sub
js
pop
data16
sub
and
mov
mov
sbb
add
sub
mov
mov
outsb
or
test
mov
adc
daa
pop
lock
add
add
movsb
add
cmpsb
mov
pop
movsl
sbbl
ja
pop
shll
pmulhuw
jbe
inc
mov
inc
push
enter
mov
sbb
in
call
incb
mov
pop
ficompl
pop
ficoml
fidivl
rcr
fsubp
stc
jb
jle
dec
outsl
adc
xlat
hlt
jl
sahf
out
push
js
jo
push
fs
push
dec
inc
sahf
out
sahf
xor
and
adc
sahf
out
adc
add
sahf
out
fdivp
cld
push
clc
hlt
lock
jns
int3
pop
repz
mov
repz
xchg
mov
je
push
or
outsl
mov
xor
popf
out
sub
sbb
repnz
push
sahf
out
sahf
in
fadd
mov
cwtl
jnp
out
nop
mov
repz
push
inc
and
repz
sbb
add
cmp
repz
enter
push
xchg
cmc
nop
push
push
icebp
add
mov
add
es
or
je
inc
leave
pusha
pop
xor
stos
pop
cmpsl
mov
into
rolb
add
cmp
mov
fistpl
add
ja
ss
idivl
sbb
and
or
orb
loope
mov
in
add
xchg
and
xorb
icebp
jmp
push
push
mov
movq
mov
push
push
pop
out
popa
cmpsl
popa
cmpsl
rolb
add
push
fs
loopne
inc
mov
inc
xor
xchg
mov
sbb
arpl
add
add
push
mov
pop
imulb
mov
mov
int3
iret
push
sub
sbb
pop
or
fidivs
xchg
insb
push
enter
pop
jl
adcl
or
add
out
xchg
es
std
inc
mov
testb
inc
mov
sbb
add
pop
imul
cmc
clc
or
jb
paddq
aas
xor
mov
cmp
mov
int3
or
addr16
les
mov
xchg
mov
movups
or
add
mov
repnz
clc
and
and
and
and
in
fdivs
clc
shr
pop
or
orb
inc
pop
mov
scas
rorl
cld
subb
inc
cmp
es
sbb
fistl
cmp
pop
jns
out
xchg
mov
das
lods
jnp
jo
enter
insl
add
repz
pop
ja
iret
mov
bnd
das
or
dec
enter
pop
pop
mov
daa
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
incl
xchg
inc
push
add
inc
stc
mov
adc
mov
in
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
std
lcall
subb
fwait
xchg
and
repnz
xor
sti
aas
jno
or
mov
pop
fs
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
call
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
mov
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
std
jmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
xor
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
lret
std
orl
pop
ficomps
frstor
adc
cmp
test
inc
mov
sbbb
xlat
add
pop
repnz
push
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
or
cmp
mov
mov
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
cmp
pop
push
aas
dec
insb
imul
pop
add
iret
fadds
lret
adc
xchg
mov
daa
add
add
push
inc
dec
push
mov
dec
shr
jo
jb
push
inc
rorl
out
add
xor
gs
gs
daa
mov
and
inc
ds
arpl
adc
push
pop
sti
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
sub
and
xorb
aam
push
xchg
push
mov
add
pop
das
push
fs
or
sbb
aas
pusha
push
or
dec
imul
ret
inc
dec
daa
daa
and
imul
dec
jae
imul
xor
inc
jg
in
sbb
inc
inc
jns
dec
lahf
push
lcall
push
cmp
jmp
adc
data16
jns
add
inc
ljmp
cltd
dec
in
inc
movups
out
dec
push
dec
imul
orl
push
stos
sub
push
dec
test
push
mov
inc
adc
int
cmpsb
dec
inc
add
iret
push
xchg
inc
pop
dec
popa
jne
arpl
test
push
shrb
dec
pop
jae
addb
mov
add
sub
ja
inc
xchg
push
cmp
loopne
shr
js
cli
dec
sub
push
ss
push
sub
dec
negl
push
testl
imul
pop
arpl
outsl
push
mov
jbe
lds
das
sbb
test
outsb
or
lock
push
push
and
gs
stos
and
sbb
push
outsl
stos
push
pop
mov
push
push
adc
movsb
pop
cmpsl
pusha
out
ret
pop
jg
push
sub
outsl
xchg
andb
xchg
lock
frstor
hlt
or
push
add
andb
insb
and
xchg
pop
ja
andb
ja
sbb
sub
pop
sbb
and
roll
stc
lahf
fsubrs
scas
movsl
cmpsb
shll
xchg
push
dec
scas
mov
adc
add
inc
dec
or
stos
pusha
mov
add
sarb
jg
pop
jb
add
loopne
mov
iret
aas
jmp
pushf
add
stos
mov
adc
cmp
cmpsl
push
aad
arpl
test
inc
xchg
dec
xchg
mov
dec
dec
lret
test
fmuls
inc
lods
xchg
jae
fimull
mov
ja
mov
imul
and
jo
gs
jo
lock
adc
imul
outsl
addb
aad
iret
fwait
mov
pop
les
pop
ret
adc
mov
push
movsb
out
jg
repz
add
dec
xor
xchg
sahf
out
sahf
clc
fmul
mov
cmpb
adc
cld
mov
sahf
cmpsl
push
inc
sahf
outsl
push
pop
add
push
mov
decl
lahf
xchg
xor
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
test
jbe
adcl
adc
test
jmp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
incl
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
fdivrp
call
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
lock
mov
or
or
adc
lcall
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
mov
cld
push
movsl
in
lahf
xor
mov
stc
mov
or
mov
cmp
decl
xchg
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
lcall
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
aaa
cld
call
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
jg
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pushl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
call
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
decl
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
test
ss
sbb
push
imul
aam
loopne
rorl
call
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
cmp
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pushl
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
jmp
xchg
ja
int3
add
mov
das
es
lds
or
ljmp
add
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
pushl
xchg
insl
add
ss
jmp
addr16
jb
push
pop
orb
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
call
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
call
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
std
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
xor
out
add
pop
cs
dec
pop
mov
mov
mov
and
inc
jne
dec
popl
mov
adc
push
fimuls
je
insb
imul
sar
pop
inc
jbe
push
jns
arpl
arpl
ja
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
dec
adc
lcall
sub
ret
pop
outsl
xchg
push
inc
jl
xor
mov
dec
inc
js
xor
bound
cmp
inc
inc
js
lods
popa
adc
push
dec
orl
or
inc
jno
xor
pop
inc
cmp
mov
lcall
xor
aaa
cmp
popa
arpl
cmp
arpl
or
sub
gs
xor
lock
les
inc
jbe
pop
sbb
addb
push
dec
inc
popa
jnp
sbb
inc
or
ror
inc
sbb
xchg
test
fbld
inc
mov
mov
dec
xor
cmp
mov
bound
mov
gs
insb
xor
leave
and
sub
sbb
adc
push
movsb
out
and
insb
popa
jns
lods
inc
sbb
adc
push
dec
pusha
xchg
cmp
je
addl
jbe
ljmp
jg
and
jae
sbb
int
dec
mov
dec
pop
inc
aas
dec
enter
push
inc
aaa
inc
insb
outsl
ss
sbb
inc
pop
popl
mov
push
jae
pop
popa
jbe
inc
inc
inc
add
ds
inc
scas
add
inc
stos
pop
and
je
dec
push
dec
dec
lea
xchg
sbb
xor
inc
outsb
ficoml
inc
sti
mov
dec
jge
addr16
pop
xor
xor
or
push
pop
aad
add
addr16
push
xchg
into
pop
jo
or
ds
inc
cmp
adc
aaa
and
dec
out
imul
add
rorl
pop
mov
push
adc
lahf
push
xor
xor
push
mov
mov
sbb
xlat
inc
add
push
mov
adc
xchg
daa
inc
jb
and
cmp
sbb
cmp
dec
popa
jo
js
nop
sub
sub
outsl
add
in
dec
push
push
jno
and
adcb
shlb
loop
lds
pusha
jb
and
nop
test
pop
cmp
or
add
inc
and
push
push
cmp
and
movsb
lcall
jo
push
push
adc
outsl
insb
jns
mov
inc
and
inc
sub
fisttpl
or
nop
adc
inc
pop
stos
call
add
add
push
bound
lods
cmpsb
inc
ret
fidivrl
jg
ja
test
popa
xor
xchg
xor
or
lcall
add
testl
sub
lods
push
ret
xor
push
cmpsb
mov
push
testb
adc
in
pop
and
mov
movsb
adc
sahf
aas
sub
movsb
push
adc
push
pop
aaa
test
aaa
orb
loop
mov
push
outsb
cwtl
add
dec
pop
add
push
movsb
add
inc
and
or
inc
dec
and
inc
add
push
ss
inc
sbb
mov
push
push
pop
mov
movsb
push
ret
xor
cmp
clc
or
pop
mov
int
mov
orb
and
subb
outsb
outsl
je
add
mov
xchg
and
and
cs
cmpsb
mov
shrd
popa
incl
lea
in
bswap
std
repz
xchg
mov
out
ud0
jmp
repnz
in
mov
idiv
push
pusha
ljmp
lret
cli
push
xor
out
xchg
cld
push
imul
fistps
inc
es
add
dec
cmp
and
add
sbb
insb
cli
mov
cmp
adc
adc
add
xchg
cltd
sub
out
std
loope
mov
add
sbb
add
dec
or
push
test
mov
adc
pop
subb
insb
sub
push
loop
stc
and
loope
pusha
push
add
cwtl
inc
mov
pop
add
cs
lock
mov
lods
add
or
and
jb
inc
fmulp
xor
inc
inc
dec
lret
js
xor
cs
mov
leave
jbe
dec
or
rcrb
imul
adc
push
loopne
sahf
out
sbbb
inc
jecxz
and
pop
cmp
or
fistl
cs
jmp
add
lds
mov
lea
ss
aam
ss
or
or
push
and
add
ret
js
lret
xchg
xor
add
hlt
mov
adcl
mov
add
xor
push
xor
cli
negl
mov
dec
fucomi
gs
add
add
sub
js
movsl
testl
daa
shll
sbb
call
xchg
inc
jmp
or
mov
andb
mov
mov
sub
pop
adc
jl
les
mov
sub
test
or
push
push
pop
xchg
pushf
push
je
cmp
sub
adc
fnstsw
sbb
push
movzbl
or
rcll
inc
std
call
aas
les
xchg
sub
cmpsb
lds
cmp
jbe
mov
push
ljmp
pop
icebp
add
popa
inc
pushf
inc
nop
xchg
nop
push
or
add
sub
push
rol
adcb
sub
ret
stc
jmp
xor
movsl
mov
loopne
call
sbbb
push
add
outsb
popa
inc
jge
mov
clc
pushf
and
in
adc
clc
aad
or
jmp
mov
push
inc
imul
add
adc
rcll
sbb
ja
push
sti
addb
in
inc
add
and
sbb
lock
subb
movsl
push
inc
adc
mov
loopne
shlb
adc
add
movsl
clc
add
mov
roll
addb
imul
or
xlat
push
add
adc
push
push
or
xor
leave
push
or
in
push
leave
push
cmp
hlt
xor
pop
mov
popf
cltd
pop
add
or
mov
push
push
jo
aam
pop
andb
add
xchg
je
sahf
jp
sbb
mov
dec
pop
push
ret
or
dec
mov
sbb
add
sahf
lea
jbe
mov
mov
test
es
not
xchg
cmp
jge
lret
pop
mov
mov
es
cld
pop
mov
je
inc
test
movb
adc
mov
mov
jb
push
mov
mov
mov
and
sbb
loope
popf
or
mov
push
add
mov
xor
cmp
adc
je
rcl
fidivl
add
and
or
rclb
dec
pop
adc
add
repnz
aam
fwait
nop
mov
cmpsb
je
mov
lods
jecxz
repnz
mulb
mov
movsw
mov
test
lcall
gs
add
jae
aas
adc
in
mov
xchg
popf
cmp
push
dec
and
pop
ret
push
sbb
rolb
enter
push
imul
shll
js
push
inc
push
push
insb
fdivl
adcb
push
mov
push
mov
sub
sub
mov
push
cmp
hlt
add
or
cmp
or
mov
sbb
shlb
xor
or
stc
je
cltd
cmp
push
andl
sbb
cmp
jp
push
or
fbld
lock
or
negl
add
and
and
loop
pop
xchg
sbb
test
ja
jb
mov
mov
call
xor
mov
push
or
subl
jge
pusha
pop
call
dec
leave
cmc
stos
add
and
add
in
add
cmpsl
add
xchg
aaa
dec
insb
and
test
fsubrl
jecxz
cvtps2pd
xchg
rcll
xor
or
call
test
and
or
mov
hlt
call
movsl
repnz
or
call
test
dec
xchg
lea
xor
mov
lret
pop
rcl
scas
cmp
mov
add
dec
jecxz
sbb
jmp
inc
jns
fwait
mov
or
jmp
add
mov
pop
mov
xor
add
lods
mov
and
lahf
pop
sbb
ja
pop
mov
xchg
testl
push
idiv
fmull
sbb
push
nop
mov
in
dec
push
inc
inc
cmp
and
loopne
aad
xor
in
dec
imul
push
fs
sbb
sbb
push
je
cmp
fnstcw
fsubr
shl
or
jmp
ficoml
push
inc
push
xor
repz
sbb
movsb
sbb
cmpsb
mov
lea
push
pop
or
add
ret
sub
or
fcmovnbe
push
mov
pop
xlat
push
jecxz
inc
movzbl
adc
or
notl
adc
mov
inc
aam
push
pop
add
xchg
sbb
sub
movb
ja
fldcw
lds
lods
push
daa
mov
lahf
mov
movsl
popa
ret
gs
sbbl
adc
bound
or
cmc
subl
push
hlt
push
add
adc
cmp
xchg
cld
push
sti
xor
mov
inc
inc
or
mov
mov
add
push
cmp
jmp
add
xchg
push
xor
lods
push
lcall
jbe
in
in
push
add
ds
xlat
lock
sbb
push
sbb
sbb
sbb
pusha
loop
fdivr
mov
cmp
js
and
imul
push
push
dec
fdiv
xchg
adcb
loopne
loope
mov
xor
sbb
int3
call
mov
push
pop
cmp
fmull
sub
pop
inc
pop
jp
pop
addr16
orb
mov
and
add
inc
or
out
push
mov
fcompl
jb
call
dec
les
ds
mov
notl
je
xchg
xchg
push
xchg
test
in
adc
mov
push
adc
gs
jbe
cmp
mov
nop
add
ret
jmp
ss
or
mov
mov
je
sub
daa
shlb
imul
push
faddl
fiadds
out
out
repnz
sysenter
aad
fnstcw
cli
add
xlat
call
in
jl
fdivrp
xor
push
jno
sahf
xor
pop
loop
ss
or
sbb
add
es
out
mov
jecxz
pop
mov
and
jmp
sub
pop
ds
es
lret
xor
call
push
jge
mov
int3
or
mov
in
push
call
add
mov
dec
and
or
push
adc
leave
vmulsd
out
jne
lea
xlat
mov
add
add
mov
rep
push
sub
mov
sub
add
jecxz
je
ss
rcll
aas
mov
and
pop
and
cmp
jne
xchg
sbb
cmp
jne
or
scas
xchg
xchg
pop
pop
cmpsl
mov
mov
aam
push
push
pop
lahf
xchg
repnz
aad
shlb
or
sbb
mov
inc
mov
push
jp
lock
jb
dec
mov
ljmp
sbb
pop
push
pop
pop
add
or
popa
pop
sub
sti
mov
cmpb
xor
je
mov
mov
call
addl
push
dec
xchg
cmc
nop
movsb
pop
push
xor
ljmp
jb
adc
xchg
pushf
lea
push
ss
imul
into
rcl
divb
add
ret
lret
xor
jo
push
loopne
mov
cmpsl
cmp
mov
xor
aas
js
cmpsl
xor
mov
sbb
cmpsb
std
sub
adc
mov
enter
push
adc
push
push
or
insb
or
and
scas
push
leave
dec
adc
push
sbb
push
push
xchg
sbb
add
add
adc
call
inc
cmp
jle
jmp
pop
xor
push
adc
dec
decl
push
gs
in
pop
add
dec
in
in
imul
push
and
adc
outsb
adc
mov
jg
scas
adc
and
in
xor
sub
xor
mov
pop
or
and
sub
xchg
in
enter
les
dec
lds
push
shlb
pop
adc
nop
mov
ds
sbb
dec
dec
or
push
xchg
rcr
in
mov
fsub
jmp
mov
addb
cmp
xor
stos
repnz
mov
inc
inc
push
mov
mov
mov
in
mov
pop
xor
shl
aam
fsub
cmp
push
add
sarl
int
mov
lcall
mov
push
in
sbb
push
sbb
imul
popa
mov
in
mov
in
aas
mov
pop
fists
scas
aam
adc
out
adc
sbb
xor
jmp
sbb
jne
lods
mov
push
cmp
cmp
push
jbe
add
ret
inc
xor
xor
mov
dec
mov
xor
xor
jle
xchg
popa
xchg
cmpsb
adc
jmp
push
push
mov
out
fcomp
inc
test
push
jne
inc
enter
and
ret
data16
add
mov
and
jb
movswl
cmp
cmp
or
dec
in
mov
lods
lods
dec
xlat
push
push
mov
test
loop
lea
mov
push
jg
pop
mov
call
int
xchg
cwtl
add
push
pop
loop
in
dec
adc
or
and
cmp
int3
popf
xchg
lock
cmp
nop
adc
sbb
sub
clc
or
push
test
lods
adc
movl
pop
in
dec
mov
test
inc
pop
in
jne
cmpb
scas
jns
inc
adcb
or
push
icebp
or
pusha
ljmp
push
add
add
addb
hlt
loop
dec
push
sti
jno
dec
mov
mov
inc
addr16
jbe
clc
es
sbbb
cmp
mov
ss
inc
and
imul
inc
xchg
popa
inc
dec
pop
lahf
loopne
add
add
add
or
je
xor
fldl
leave
ret
sub
cmp
adc
or
loopne
add
outsb
fimull
sub
adc
lret
mov
insl
push
sub
ss
inc
lods
mov
pop
loopne
mov
lods
xchg
jle
daa
sub
or
jge
push
cld
xchg
ss
mov
cwtl
aaa
lret
les
popf
rorl
mov
int
nop
add
pushf
or
mov
mov
add
mov
les
jns
jne
sub
lods
jbe
or
mov
xor
mov
nop
push
add
outsb
orb
adc
mov
sahf
test
mov
cmp
jne
push
fnstsw
daa
cmp
adc
push
jge
mov
push
xchg
push
jbe
das
insl
inc
rolb
hlt
repnz
push
cmp
adc
dec
inc
pop
fucomi
xor
rcll
jbe
add
pushl
or
mov
inc
push
xor
enter
stos
std
std
iret
xchg
and
xor
pusha
adc
cmp
inc
sub
or
mov
shlb
mov
mov
sub
enter
movsb
repnz
loopne
or
push
push
push
push
jns
add
inc
adc
setb
pop
push
jo
cld
sub
repnz
sub
pop
dec
adc
std
stc
hlt
pop
mov
and
push
push
xor
sbbb
inc
ss
cmp
push
rorl
push
cmp
jge
jne
cmp
and
movl
sbb
pushl
or
push
mov
imul
push
sarb
push
sbb
fcoms
popf
test
xorb
lock
pop
add
add
fiadds
int
mov
add
adcl
xlat
jge
in
ret
dec
cmp
outsl
inc
jge
push
xor
mov
add
push
push
xchg
or
push
or
lea
add
sbb
push
inc
lcall
stos
daa
out
testl
pop
xchg
adc
shll
push
cmp
jne
rclb
mov
ret
mov
mov
aaa
inc
xor
cwtl
fisubrs
push
mov
push
call
int
pop
ds
or
xchg
jns
in
jbe
bound
mov
lea
jbe
cmp
push
sbb
lcall
push
mov
clc
push
or
enter
ret
and
jne
xor
je
std
jmp
and
xor
add
imul
or
mov
sahf
xor
mov
cmp
push
into
shlb
mov
popa
mov
and
mov
rol
imul
ljmp
sub
andl
test
or
out
push
rorb
and
in
test
xor
dec
sbb
add
or
mov
repnz
daa
dec
xor
adc
or
jne
mov
jmp
or
lods
shll
push
or
or
lahf
dec
out
cmpsl
or
push
lret
add
or
mov
push
jae
mov
push
adcl
xchg
push
addb
jno
inc
push
add
ror
or
pop
aam
in
pop
loope
xchg
ljmp
sbb
lea
shll
cmpsl
clc
bswap
mov
cmp
ss
mov
mov
inc
cltd
cmp
cltd
hlt
mov
rcrb
js
mov
mov
ret
jl
or
or
add
mov
cwtl
pop
stos
push
fucomip
and
cmp
je
cmp
jbe
xchg
xchg
hlt
inc
movsb
xchg
jne
outsb
pop
add
mov
nop
shrl
idiv
push
and
std
pop
jbe
test
das
xor
jo
jnp
sbb
push
in
mov
adc
clc
test
rclb
add
hlt
pushf
cli
adc
sbb
inc
and
outsb
es
sub
cmp
shr
push
or
pop
je
imul
xor
scas
push
aaa
stos
fwait
add
xchg
lock
mov
ret
jb
clc
mov
mov
rorl
xchg
mov
xor
test
sbbl
enter
adc
inc
aaa
push
mov
pop
hlt
in
fsubr
jo
push
sbb
lcall
adc
pop
mov
into
jmp
lea
lods
sbb
inc
adc
pop
add
dec
je
loopne
lods
stos
loopne
cltd
xchg
xchg
sti
push
je
dec
test
lea
dec
jle
test
sbb
in
ljmp
mov
lock
push
sub
pop
push
lea
insb
and
pop
xorb
push
xchg
xchg
push
sbb
data16
frstor
cmp
push
push
dec
push
and
in
pop
pop
fcoml
cmp
cwtl
popa
fsubrl
call
or
shlb
faddl
rcll
lcall
sahf
mov
add
fwait
jae
js
cltd
mov
loopne
repnz
lcall
add
or
push
dec
mov
adc
mov
pop
sub
mov
or
and
cltd
data16
imul
mulb
mov
xorl
adcl
sbb
cli
mov
nop
adc
popa
or
add
rorb
pop
movsl
add
mov
int3
dec
push
hlt
lret
xchg
shrb
adc
mov
add
rep
ss
clc
and
cmp
ljmp
push
inc
pusha
test
or
lods
fst
inc
mov
and
add
adc
sub
dec
ss
sub
or
ffreep
movsl
mov
or
jo
test
add
xor
mov
or
mov
jmp
iret
call
cmp
jmp
push
imul
pop
ss
js
addr16
sbb
popa
mov
negb
push
int3
sbb
jne
out
sbb
cmp
jmp
jnp
mov
ss
cmp
jne
push
jno
lea
jae
shll
enter
jecxz
decb
aaa
mov
mov
pop
push
mov
jmp
nop
xor
inc
enter
cmc
xor
sarl
aaa
and
fdiv
call
mov
mov
and
das
and
push
push
test
dec
setb
push
out
lcall
aam
pop
xchg
add
movsb
sbb
test
cmc
xchg
addr16
lcall
dec
jl
js
dec
stos
push
push
negb
and
jge
daa
push
dec
xor
lahf
and
fxtract
jmp
pop
xorb
cmp
sbb
inc
or
mov
sbb
cs
pusha
movl
push
cmp
mov
adc
add
mov
or
or
idiv
cmc
pop
xchg
jne
add
push
call
cmp
mov
movsb
jmp
js
sbb
fptan
push
je
and
insb
lret
ljmp
cmc
sbbl
cwtl
jmp
and
int3
or
sbb
jbe
icebp
mov
adcb
mov
lret
pop
bound
je
push
stc
sub
xor
lret
pushf
or
out
push
jbe
push
sbb
iret
sbb
jo
or
cmp
cwtl
or
popf
pushf
or
pop
mov
mov
cld
test
je
ret
and
push
push
inc
mov
jg
sbb
mov
inc
mov
inc
je
pusha
ja
cmp
jg
push
test
pop
dec
lea
daa
mov
call
or
pusha
pop
gs
mov
icebp
mov
or
pushf
andb
push
sti
push
jl
or
mov
cmp
fadds
dec
jne
movzbl
add
add
or
xor
movsb
gs
fcmovnb
nop
jp
imul
adc
test
pop
push
popf
add
dec
dec
ja
add
nop
sbb
sub
cwtl
shr
insb
jmp
in
scas
insl
or
je
mov
push
cli
sub
into
jno
test
xor
or
and
ja
cmp
mov
fcmovu
bound
jae
inc
pop
shrb
bound
dec
add
inc
dec
cs
shlb
lea
add
adc
jmp
cmp
push
and
call
insl
loopne
inc
dec
mov
adc
popa
call
dec
push
sbb
clc
xchg
push
push
call
mov
inc
repz
dec
aaa
and
push
aam
movsb
sub
dec
xchg
cmp
inc
je
js
sbb
clc
cmp
sbb
push
xchg
xchg
pop
aas
dec
in
movsl
and
mov
push
sbb
ds
shlb
push
xchg
adc
ljmp
js
xor
xchg
adc
pop
inc
sbb
mov
sbb
xchg
cmp
fcmovb
cli
xchg
sub
pop
push
mov
adc
inc
orl
inc
push
xchg
mov
xchg
xor
fiaddl
test
xor
xchg
add
ja
pushf
mov
sub
je
loopne
push
or
lds
outsl
sub
push
push
adc
pop
xchg
xor
inc
push
dec
push
sbb
and
xchg
shr
push
dec
pop
in
adc
inc
rolb
and
or
mov
in
push
pop
popa
pusha
jo
shl
xchg
dec
addr16
pusha
mov
mov
xchg
cli
or
or
mov
call
sbb
imul
mov
xor
jmp
cmp
sub
mov
dec
aam
inc
adc
je
jns
cmp
call
and
pop
dec
or
push
jl
pop
int3
pop
fs
hlt
insl
inc
xchg
mov
insl
ljmp
das
jle
fwait
adc
cmp
mov
mov
mov
pop
call
clc
pop
ficompl
pop
jmp
inc
jb
xchg
or
aaa
je
cmp
jmp
addb
sbb
ret
aaa
xchg
pop
mov
test
addr16
lcall
push
into
cmp
xor
jno
dec
dec
jmp
sub
inc
mov
rclb
mov
and
subl
push
sub
xchg
xchg
sbb
je
mov
repnz
sbb
or
adc
cmc
or
call
pop
adc
mov
and
ja
push
cmp
push
and
inc
fiadds
shlb
sub
aad
pop
push
xchg
push
push
es
cmpsb
out
xchg
add
movsl
push
and
cld
aad
es
into
push
shll
shlb
int
xchg
xchg
push
push
push
es
mov
call
out
jmp
iret
dec
push
mov
or
in
ficomps
and
cltd
and
push
fwait
xchg
lret
inc
push
inc
int3
xchg
js
sbb
push
push
shrb
pop
outsl
inc
jbe
push
imull
ret
push
enter
xor
sbb
xchg
xchg
push
push
jp
fistpl
loope
push
adc
enter
call
ret
push
outsl
pop
aaa
mov
cmpl
add
shll
call
or
in
je
mov
ja
and
push
push
enter
xchg
pop
shlb
loope
cmp
call
mov
nop
fnstenv
and
les
pop
inc
jno,pn
das
test
movl
test
out
add
sub
mov
dec
sub
nop
popf
addl
jno
lods
lret
call
nop
into
jmp
sub
nop
push
inc
or
push
inc
dec
cmp
fs
cs
pusha
nop
inc
out
out
push
in
nop
je
mov
rolb
nop
sbb
sbb
rolb
inc
or
iret
repz
sbb
or
mov
pop
orl
sbb
jmp
rcl
jns
inc
mov
adc
push
adc
divl
daa
lock
daa
pop
nop
add
and
inc
add
add
inc
inc
outsb
push
inc
repz
or
push
mov
mov
enter
add
inc
inc
inc
out
or
push
adc
bound
rolb
add
xor
push
out
adc
inc
push
or
out
in
or
adc
mov
mov
insb
sbb
mov
add
push
pop
jmp
cmp
je
mov
mov
sbb
repz
lahf
ret
fstpt
cltd
push
test
inc
xor
sahf
xchg
stos
insl
push
pop
add
out
dec
in
add
add
jbe
dec
dec
mov
pop
test
jo,pt
cmp
je
xchg
add
xchg
aaa
jb
mov
cmp
mov
mov
pop
pop
inc
xchg
mov
or
enter
or
add
mov
fisttpll
in
mov
or
mov
dec
or
or
or
jb
pop
and
pop
leave
xor
push
push
setp
add
adc
notb
adc
or
cmp
push
jnp
cmp
enter
int
push
adc
add
adc
sbb
pop
leave
adc
adc
enter
push
pop
enter
pop
pop
and
sbb
xchg
sbb
cmp
sbb
sbb
add
sbb
cmp
cmpsb
repnz
sbb
sahf
push
mov
sbb
pop
push
push
jg
cmp
inc
negb
pop
jne
add
add
popa
jmp
add
push
add
cmp
xchg
jmp
cwtl
xchg
jns
xor
push
in
imul
rcl
repnz
dec
push
ret
in
in
repnz
mov
push
repnz
out
in
fdivl
jne
adcb
adc
push
maskmovq
testl
ljmp
jmp
jmp
dec
pop
lods
call
in
repnz
xor
in
xchg
aad
xor
out
in
cmp
mov
sbb
pop
leave
out
xchg
out
or
nop
out
xorl
lock
dec
icebp
cmp
push
rolb
das
jnp
or
adc
repz
std
jnp
aam
hlt
hlt
imul
cmp
cmc
cmc
cmp
cmpsl
div
mov
or
popa
negl
gs
scas
addb
clc
clc
or
inc
stc
stc
and
dec
sahf
cli
cli
add
outsb
sub
nop
sti
fdivrp
cld
cld
je
mov
push
push
nop
shlb
mov
leave
repz
in
std
sbb
fs
lea
fldl
adc
jle
shll
xchg
push
std
or
or
fwait
or
jecxz
jecxz
push
shll
xchg
xor
sub
in
addl
sbbb
adc
inc
or
out
jb
inc
out
scas
call
cltd
sti
adc
inc
mov
cltd
or
out
jmp
xchg
daa
dec
pop
push
in
cltd
or
daa
or
cli
aad
imul
in
aad
mov
andb
cli
or
aas
repz
add
mov
leave
and
stc
xchg
cmpsb
jb
imul
mov
xchg
clc
in
repnz
cmp
mov
xor
sti
inc
scas
ss
sti
sti
xchg
or
scas
xchg
push
repnz
jmp
mov
cmp
scas
mov
mov
jl
daa
add
sub
aad
imul
shl
add
loope
clc
andb
and
imul
out
pop
push
xchg
push
fdiv
out
mov
negl
lret
imul
ljmp
push
jmp
pop
repnz
notl
mull
hlt
imul
out
push
inc
test
repnz
notb
mov
insl
repnz
repnz
inc
repz
pop
push
loope
testb
sub
test
mov
out
imul
iret
in
mov
dec
loope
cmp
jb
cmp
rcrl
jb
or
and
sbb
cli
hlt
subb
or
xchg
test
add
push
stos
into
jo
adc
push
ret
clc
sti
mov
loope
loope
scas
xchg
stos
jp
movnti
cmp
mov
in
pop
lret
or
pop
repz
setb
aam
mov
lcall
jmp
pop
mov
pop
pop
dec
repz
in
xchg
adc
pop
mov
pop
pop
repnz
repnz
add
or
jb
scas
dec
icebp
icebp
das
xchg
pop
inc
jb
sub
ds
mov
pop
repnz
dec
push
cmc
cmc
mov
icebp
mov
andb
icebp
or
jne
stc
push
and
test
dec
icebp
xor
andb
or
out
lock
mov
xor
ret
add
jmp
repnz
ret
fwait
push
sub
ffreep
push
inc
fcmovbe
dec
push
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
test
inc
add
jne
stc
mov
fld
xor
jmp
xchg
pop
ljmp
xchg
js
and
jmp
dec
or
push
nop
push
jns
xor
cmpsl
xor
or
push
add
dec
adcl
mov
jl
push
jecxz
repz
mov
sahf
jae
insb
sbb
push
push
aad
jns
imul
dec
xchg
gs
dec
outsb
or
mov
jno
inc
mov
xchg
mov
mov
rcrb
mov
jns
mov
cmp
and
sub
or
test
pushf
dec
jmp
sub
lock
adc
lods
jle
and
lcall
push
fists
push
orb
data16
jmp
mov
and
mov
push
xor
add
and
mov
idivl
lock
popf
mov
inc
jecxz
imul
add
pop
mov
lea
or
clc
pop
orb
daa
jl
call
sub
push
add
fildl
jmp
or
xchg
inc
add
push
in
pusha
adcb
fsubrl
call
jmp
je
push
lret
or
pushf
insl
adc
jmp
adc
jno
shlb
insb
push
xchg
and
xor
mov
cmp
adc
popf
inc
fcoml
push
dec
xor
pop
xor
stos
adc
jno
adc
test
adc
hlt
psubsw
cltd
ss
and
add
dec
cmp
dec
add
add
dec
cltd
test
shr
inc
add
inc
jmp
in
inc
inc
add
ret
xchg
pop
xchg
dec
xor
pop
pop
and
scas
test
lea
data16
xorb
adc
inc
mov
xor
ret
adc
mov
fnsave
xchg
mov
aaa
and
adc
leave
pop
rorl
inc
dec
pop
rorl
pusha
push
adc
sbb
or
sbb
int3
ret
adc
inc
xor
adc
xor
in
jns
add
in
inc
dec
aas
add
push
in
pop
mov
test
lods
clc
add
or
push
dec
pop
movsl
xchg
leave
fmull
inc
mov
add
mov
sarl
sbb
jg
cmp
je
xor
shlb
xchg
nop
in
xlat
loop
sub
jmp
push
and
sbb
and
and
sub
add
mov
mov
frstor
fs
pop
and
roll
and
adc
cltd
bound
int
call
add
mov
jmp
push
movsb
fwait
adc
adc
and
and
inc
xor
out
push
sbb
push
mov
mov
and
push
xor
or
out
pusha
add
adc
inc
mov
or
mov
cmp
jl
push
jnp
pop
and
nop
jmp
imul
inc
daa
daa
lea
and
sbb
in
push
push
xor
and
xor
andb
add
and
and
fnstsw
dec
pop
push
dec
sub
lds
adc
sbb
and
repnz
inc
and
and
or
and
xchg
or
je
inc
and
add
aam
lahf
xchg
push
mov
pop
xor
rcrb
nop
inc
inc
cmp
push
shr
and
nop
dec
mov
xor
test
ds
cmp
inc
js
and
and
cmp
mov
and
fnstsw
and
and
cmp
adc
and
push
mov
sub
and
and
nop
push
pop
pop
outsb
daa
and
test
test
insb
pop
xchg
or
add
pop
and
mov
loopne
mov
dec
and
add
mov
and
orl
push
jb
adc
sti
xchg
outsb
xchg
inc
and
lock
or
cmp
add
push
jo
hlt
movsl
dec
push
loop
and
clc
dec
rorl
data16
data16
imul
inc
inc
mov
and
iret
dec
out
or
pusha
push
cmp
in
aaa
popa
aas
xchg
and
xor
mov
movsl
sub
nop
sbb
cs
or
mov
and
cltd
inc
loopne
std
and
inc
adc
fnsave
cltd
cmp
nop
push
adc
cltd
sbb
test
cltd
add
dec
aam
pop
pop
cltd
vorps
aaa
fsubl
dec
mov
pop
hlt
cwtl
loopne
cltd
scas
jb
xor
test
push
xchg
adc
push
ja
sub
and
je
sub
cwtl
mov
and
cs
mov
cmp
or
dec
adc
jl
mov
xchg
adc
jmp
mov
push
sbb
lds
mov
sbb
push
mov
mov
inc
inc
subl
test
cmp
enter
mov
or
xchg
push
sub
push
shrl
cmp
or
mov
inc
mov
adc
call
dec
add
push
icebp
nop
mov
in
xchg
ljmp
dec
dec
testl
adc
in
loope
pop
fldl
mov
mov
sbb
lret
inc
inc
stos
xor
mov
add
je
lods
push
mov
nop
dec
or
mov
sub
pop
sbb
mov
push
push
sbb
sub
rorl
movb
jae
cmp
sbb
leave
loopne
imulb
push
mov
push
push
sbb
mov
adc
or
add
add
mov
nop
mov
ss
inc
ja
add
aam
mov
aas
cmp
adc
pop
sbb
cmp
mov
rorb
mov
sbb
jmp
stos
mov
sbb
addl
dec
sbb
fmul
sub
or
sbb
cmp
sub
push
mov
inc
mov
sbb
jl
mov
mov
xor
rcrb
adc
mov
imul
rcl
fwait
jno
sbb
nop
mov
js
lea
test
addr16
rorb
inc
inc
outsb
popa
call
jmp
mov
rcl
cmpl
sub
push
inc
inc
dec
xor
and
xchg
pusha
mov
mov
dec
add
sub
mov
nop
shr
mov
push
pop
popa
cs
inc
and
lods
into
mov
gs
mov
inc
sbb
sub
sbb
xor
je
es
sbb
cmpsb
push
mov
loop
push
out
xor
dec
cmp
push
sbb
xchg
aam
mov
or
or
dec
mov
rorb
sub
add
or
sysenter
fs
push
sbb
cmp
jae
mov
test
int3
sbb
roll
dec
lock
cmp
or
or
bound
add
ss
out
cmp
inc
inc
out
mov
cmpsl
sbb
ret
or
popf
push
ret
inc
mov
mov
or
dec
cmp
inc
jo
push
je
mov
orl
mov
fisttpll
jmp
xor
cld
add
sti
lret
cmp
out
mov
sbb
addl
cmp
and
push
mov
in
push
mov
sbb
sarb
mov
push
sbb
sbb
lock
scas
ret
jp
out
dec
push
adc
inc
push
or
je
add
je
sbb
pop
xor
xchg
push
mov
mov
js
addl
mov
sbb
xchg
bswap
imul
mov
out
mov
xor
sbb
sbb
sbb
sbb
pop
dec
rcrb
sbb
cmp
inc
lret
lcall
call
adc
loope
dec
push
popa
jo
push
or
cmp
cmp
daa
adc
xchg
mov
push
lods
pop
fdivs
mov
ffree
sub
push
inc
sarb
mov
and
pop
push
dec
gs
icebp
inc
imul
mov
ret
das
mov
push
jno
xchg
mov
xchg
mov
xlat
or
inc
out
push
mov
dec
dec
inc
gs
dec
pop
ret
mov
pop
out
inc
push
sub
sbb
cmp
push
dec
lock
jbe
lods
ret
sub
jmp
enter
adcl
pusha
add
mov
pusha
mov
stos
ja
ja
mov
xor
movntq
gs
add
jl
dec
fs
nop
sub
add
pop
sbb
add
jp
xchg
gs
sbb
or
xchg
enter
add
xlat
adc
xchg
dec
jae
mov
xor
les
shlb
pop
adc
and
mov
xchg
bound
insb
or
cmpsl
lcall
pop
in
or
test
or
in
sbb
push
sub
dec
test
or
repz
js
movsb
jnp
test
push
out
subl
add
xor
test
insb
cmp
push
test
aad
lds
mov
add
cmpsl
das
popf
push
sbb
dec
inc
mov
mov
leave
ret
ljmp
movsb
xor
out
or
call
pop
stos
xchg
push
shr
rolb
jl
loopne
or
in
cli
stc
test
sbb
ret
jg
dec
ret
or
mov
inc
push
jo
test
and
ret
sub
leave
xchg
add
adc
es
nop
push
cwtl
pusha
ret
add
mov
fwait
roll
das
push
loopne
or
pushf
scas
or
enter
cmpsl
loope
jl
inc
stc
push
js
add
notb
and
int
jbe
lcall
stos
xchg
fbld
dec
or
sub
or
mov
push
sbb
call
push
adc
and
jbe
fimuls
call
push
cmpsl
mov
addr16
and
inc
mov
out
add
push
cwtl
dec
addr16
sbb
sub
push
inc
xchg
ret
ret
aam
mov
mov
dec
or
rclb
dec
ja
mov
sbb
popa
out
fistpl
rcrb
mov
pop
push
mov
sbb
jnp
mov
jo
popa
mov
sub
xor
cld
push
sub
add
and
or
jmp
push
mov
imul
mov
movsb
shll
ja
sbb
push
popa
xchg
lahf
pop
dec
call
pop
jo
mov
dec
sub
xorl
inc
jne
and
clts
ja
xor
and
sbb
inc
inc
jne
inc
xor
or
inc
or
and
insb
inc
call
nop
jnp
aaa
jne
and
push
lea
push
adc
jne
nop
shlb
fs
dec
enter
sbb
mov
sub
mov
add
sbb
jne
call
cmp
jne
push
test
les
jne
mov
pop
adc
xchg
sbb
mov
dec
call
mov
add
xchg
mov
call
movsb
mov
cli
add
incl
jl
je
sbb
cmp
sahf
xchg
and
sub
push
aas
xchg
sub
inc
js
loopne
xchg
push
ljmp
pop
mov
cmp
adcl
sahf
dec
call
sbb
or
pop
push
lods
pop
push
jns
push
cmp
xor
rolb
add
mov
out
call
adc
or
fiaddl
adc
adc
test
out
sub
test
mov
lds
adc
add
fwait
add
repnz
push
cld
mov
nop
inc
and
fiadds
jmp
incl
xor
aam
mov
inc
mov
xor
push
inc
call
setl
inc
mov
and
call
add
fsubl
xor
and
or
jne
add
dec
jge
movb
push
mov
out
insb
cmp
xor
sti
fildl
cmp
inc
jmp
dec
jmp
xor
loopne
sbb
push
inc
inc
adc
ret
inc
jmp
inc
inc
inc
cltd
test
pop
je
pop
es
xchg
test
lcall
into
or
xchg
mov
ret
fs
stc
add
das
or
add
xchg
xorb
addl
or
je
addr16
or
cmp
and
cmp
pop
addb
mov
adc
into
call
xor
lcall
je
pop
add
ds
popa
adc
push
popf
pop
pop
dec
dec
nop
fldt
ds
fildll
adc
mov
mov
addr16
sbb
cmp
loopne
inc
notl
mov
mov
mov
dec
add
and
cld
shl
scas
xchg
xlat
mov
cmp
dec
add
inc
shl
cmpsb
jb
cmp
inc
mov
lret
fisubrs
jge
pop
fscale
add
push
push
or
inc
jecxz
or
adc
mov
jne
push
jne
and
dec
inc
fisttps
jmp
cmp
adc
jne
adc
fistps
dec
push
add
ret
push
sar
inc
push
adc
mov
pop
jl
call
xchg
cmp
dec
sub
mov
jo
jns
sub
hlt
dec
outsb
arpl
jo
arpl
cmc
inc
insl
inc
dec
imul
out
cmp
pop
cmpsl
push
add
nop
mov
or
sbb
inc
rorb
fstpl
and
ja
mov
xor
inc
and
inc
add
filds
cmc
add
scas
rolb
or
es
clc
xchg
mov
cmp
add
sahf
in
jmp
les
cmp
mov
out
out
and
sbb
or
jmp
jp
lock
sarb
lock
adc
test
out
lret
sbb
xor
lahf
or
andl
sbb
das
xchg
xor
mov
call
mov
gs
loopne
xorl
xor
aad
mov
shl
ror
xchg
scas
stos
loopne
push
inc
jbe
popa
push
xlat
cmc
fists
sub
fs
push
xlat
sbb
rol
push
push
sbb
test
testl
cmp
dec
mov
daa
xchg
or
testl
scas
gs
out
test
notl
leave
divl
pop
mov
jmp
repz
xchg
and
add
aaa
cltd
bound
sbb
je
or
or
loopne
cwtl
insb
call
mull
push
mov
fldl
pop
lcall
xorb
shrl
pop
rorl
dec
pop
and
inc
mov
popf
inc
pop
inc
mov
fstpl
pop
leave
xchg
cli
sahf
fs
repnz
ror
xchg
wrmsr
fnop
push
inc
mull
pop
aad
sarb
js
divl
push
xor
notl
mov
mov
mov
inc
add
mul
add
cwtl
insb
mull
mov
enter
or
push
test
shll
ljmp
fbstp
fsubs
fbld
ljmp
sub
mov
or
ret
add
gs
enter
sbb
push
mov
xor
notl
sbb
rcrl
sbb
or
testl
or
test
mov
push
sub
and
int3
xor
sbb
mov
divl
inc
dec
idivl
sbb
insl
jb
cwtl
add
cmpsl
or
fdivl
aam
push
mov
sbb
push
pushf
mov
mov
dec
sub
jne
cmp
test
call
orl
adc
dec
shlb
int3
inc
stc
xor
rorb
push
stc
cwtl
insb
call
stc
shl
inc
cmpsb
xchg
es
xor
in
push
fwait
jp
pop
adc
je
cmpsl
stc
cmp
push
mov
outsl
mov
ss
adc
daa
lds
adc
mov
adc
adc
adcl
dec
inc
xchg
mov
adc
daa
adc
adc
loopne
add
mov
push
call
push
mov
in
mov
mov
mov
loopnew
xor
jo
testl
loope
add
adc
sub
daa
push
xor
mov
andb
mov
mov
mov
sbb
mov
xchg
cwtl
scas
scas
push
mov
xor
cs
and
mov
push
sbb
xchg
mov
dec
lods
sbb
xchg
inc
leave
dec
jl
xchg
sbb
mov
push
xor
mov
popf
push
repnz
push
ss
outsb
and
mov
in
scas
push
pop
mov
inc
pop
sbb
mov
mov
pop
mov
add
packuswb
out
cvtdq2ps
aam
mov
testl
sub
movsl
mov
or
es
aam
pop
call
add
xchg
pop
fisttps
mov
mov
mov
cmp
push
sbb
cmp
adc
adc
mov
adc
cmp
cmp
loope
pop
test
loopne
cltd
movsb
pop
stos
cmp
add
inc
mov
dec
mov
and
cs
cmp
sbb
aad
bound
jb
xchg
cmp
loop
mov
dec
push
call
sub
cmp
loope
pop
test
rorl
rclb
sub
rcpps
cmp
mov
cmp
movsb
ljmp
lds
pop
xor
cmp
cltd
mov
scas
adc
subb
arpl
imul
pop
inc
mov
sbb
cmp
int3
mov
cmpsl
cltd
popa
mov
mov
loope
cmp
pop
test
inc
jbe
fadds
mov
xor
scas
mov
jbe
hlt
enter
cmp
call
cs
add
bound
sbb
cmp
mov
popa
movsb
xor
mov
mov
sub
jnp
mov
sbb
push
cmp
adc
and
aam
in
pop
test
add
lcall
sbb
sub
and
adc
and
mov
push
xor
xchg
and
add
push
mov
je
cmp
mov
mov
or
adc
ffreep
mov
adc
rorb
cmp
sbb
repnz
sbb
cmp
inc
cmp
xchg
sbb
add
add
push
popf
sbb
xchg
call
or
sub
dec
sub
fwait
test
int3
lds
rorb
aam
mov
sbb
xor
push
pop
outsb
out
in
lds
cmp
lds
mov
into
add
ficomps
mov
adc
cmp
and
sbb
push
lds
inc
sbb
sub
inc
push
int
call
cmpsl
dec
lret
mov
cmp
cmp
ret
mov
adc
sbb
sbb
pop
fldcw
insb
bound
mov
call
push
sub
mov
scas
dec
xor
mov
add
lds
mov
pop
adc
rcrb
or
rorb
and
mov
cmp
push
or
pop
jbe
call
add
nop
rorl
clc
cmp
cmp
xor
cwtl
cmp
sub
lods
bound
sbb
xor
sbb
xor
or
or
idivb
xchg
mov
fiaddl
pop
xchg
daa
xchg
cmp
or
les
in
call
popa
jae
les
out
mov
mov
dec
cs
aas
sbbl
push
push
jns
test
and
fs
pop
jae
pop
enter
mov
sbb
add
hlt
add
push
jno
nop
push
test
cmp
mov
pop
test
je
sti
mov
insl
sbb
xchg
mov
inc
pop
jae
nop
out
call
test
jle
adc
push
out
shlb
nop
dec
fs
test
push
push
bound
cmp
mov
outsb
adc
outsb
adc
outsb
adc
out
push
neg
or
and
add
gs
cwtl
insb
dec
pop
add
or
jb
jae
rcl
imul
and
push
xor
sbbb
pop
jle
cmp
cmp
ficoml
mov
or
and
adc
ret
dec
lea
adc
rcl
push
fistpl
fistpl
xlat
xchg
xchg
fisttpl
adc
lds
fucomi
mov
fildl
or
movsb
aam
fldt
or
pop
ljmp
push
dec
adc
jno
arpl
inc
xchg
or
in
loope
loopne
pop
loop
pop
in
nop
jns
movsbl
jno
jmp
dec
and
lea
mov
dec
enter
pop
inc
arpl
sub
add
mov
xchg
nop
jnp
loopne
mov
adc
cmpsb
sarb
js
pop
pusha
cmp
lods
inc
adc
aas
add
pop
mov
and
dec
xchg
les
dec
enter
or
jl
and
mov
in
test
outsl
nop
pop
dec
and
mov
inc
adc
sub
push
mov
inc
pop
pop
adc
push
and
pop
psubsb
inc
push
aad
je
fsts
inc
push
jo
cmp
fdivrl
xchg
or
sahf
stos
sub
pop
or
shll
and
pop
xor
call
mov
sub
call
sbb
adc
das
lahf
ljmp
call
mov
repnz
call
sub
add
call
pop
scas
xor
lock
call
fwait
push
test
call
mov
stc
sti
inc
call
mov
stc
repnz
movsb
lods
andps
movsl
pop
call
xchg
das
pop
mov
call
insb
stc
repnz
call
je
gs
pop
sub
jl
call
shr
inc
sbb
cmp
test
mov
nop
sbb
adc
sub
cli
lret
movsb
dec
dec
in
in
fxch
movsl
repnz
les
lods
int3
mov
pop
shlb
xchg
mov
xchg
lret
fdivl
lret
test
test
in
inc
aam
xchg
lret
lock
es
jns
pop
sub
cld
adc
add
add
leave
or
je
out
or
or
loope
adc
mov
mov
mov
stos
and
dec
in
lahf
sub
xor
jae
xchg
dec
in
push
xor
push
push
inc
gs
dec
out
rorb
cs
adc
and
or
pop
add
add
or
jo
pop
and
enter
mov
and
int
jo
xor
sahf
mov
jg
push
call
mov
je
data16
js
movsb
sbb
push
adc
inc
lcall
sbb
cmp
dec
push
and
sbb
cli
cmp
xchg
xchg
mov
sbb
imul
pusha
in
lods
mov
cli
mov
xchg
out
mov
push
mov
mov
add
push
inc
xchg
and
adc
xchg
shlb
xchg
je
rcrb
fs
lcall
sub
mov
sub
lret
insb
adcb
mov
lods
mov
rorl
sbb
or
mov
pop
lret
push
loopw
shlb
add
or
lret
mov
add
inc
mov
insl
add
add
or
insl
sbb
dec
xlat
insl
dec
fsubrs
or
push
cmp
cli
cs
pop
adc
add
inc
cld
push
imul
call
xor
mov
fnsave
mov
add
xor
or
pop
mov
popa
fsubrp
sbbb
mov
sahf
dec
ljmp
xchg
jp
ret
push
mov
sub
mov
sbb
push
or
push
jecxz
xchg
mov
push
inc
pop
mov
add
xor
shrb
addl
or
pop
lcall
rolb
je
ret
stc
mov
mov
or
or
cmpsl
pop
or
adc
adcb
push
or
dec
xchg
mov
out
imul
mov
add
inc
xchg
repz
jp
les
or
or
xchg
bound
or
fs
or
es
jmp
fs
ret
adc
fwait
mov
inc
xor
cmp
adc
inc
xchg
pop
pop
outsb
xchg
sub
fld1
inc
cmp
sbb
dec
lds
jne
cmp
mov
xor
mov
test
xor
cmp
lds
push
in
push
or
out
pop
mov
and
inc
cmp
movsb
fs
xchg
shlb
dec
and
sbb
rclb
mov
add
lods
pushf
xchg
xchg
sbb
mov
mov
dec
leave
dec
lea
fstl
pop
mov
push
call
inc
and
mov
mov
sbb
xorb
cmpsl
add
mov
lods
cmp
cltd
or
and
mov
add
sub
mov
orb
xor
lea
pop
and
pushf
inc
mov
add
xacquire
and
call
pop
rorb
mov
sbb
insb
cmpsb
mov
add
or
shlb
mov
sbb
and
ret
dec
mov
jge
sbb
mov
xchg
xchg
ret
or
adc
stos
lea
je
rorl
push
call
jns
call
sbb
xchg
adc
mov
jmp
adc
sti
lods
pop
xor
sar
xor
xor
push
test
ss
lea
mov
push
sti
test
addl
js
jmp
stos
push
sti
xchg
leave
bound
mov
adc
inc
push
ret
bound
pop
int
nop
mov
test
or
pop
add
ja
dec
add
pop
dec
sahf
adc
bound
cmp
sbbb
ficoml
rcrb
dec
mov
push
nop
push
push
inc
mov
mov
push
pop
and
inc
xor
or
xor
shrb
rcll
lods
test
or
loopne
fldl
xchg
adc
adc
adc
sub
mov
and
jo
adc
out
nop
push
xchg
and
and
mov
rcrb
ret
jge
mov
pusha
xor
gs
xor
inc
pop
lods
mov
mov
bound
mov
lea
lcall
stos
xor
or
and
and
and
orb
testl
imull
or
rolb
add
add
and
dec
xor
add
mov
mov
ret
popa
pop
insl
mov
pop
inc
sub
jno
cmp
pop
nop
inc
or
flds
adc
mov
in
addl
jmp
add
out
sub
jb
rolb
or
aam
mov
push
popa
or
jmp
sub
fnstenv
ret
cld
add
loopne
push
nop
jl
cmp
enter
jge
sub
cmpsb
cld
jb
xor
cmp
int
out
push
push
rolb
and
adc
sub
test
fs
adc
rcl
lea
loope
dec
inc
and
out
mov
mov
hlt
sbb
mov
call
daa
icebp
and
rcrb
fisttpll
lods
push
loope
dec
daa
sub
jbe
dec
andb
ror
add
and
jle
cld
rol
daa
loopne
mov
cmp
cwtl
daa
dec
and
fwait
daa
roll
xchg
daa
or
push
inc
daa
xor
shl
dec
xor
lcall
mov
nop
outsb
or
daa
xchg
rclb
enter
adc
dec
xorb
sub
sub
push
or
test
mov
fstpt
ja
cmp
pop
sbb
pop
mov
dec
fsubrs
xor
pop
jmp
or
xchg
adc
push
xchg
outsb
fistl
mov
adc
sbb
popa
dec
inc
or
mov
pop
shll
outsb
or
xor
mov
pop
sbb
add
leave
mov
pop
in
or
xchg
mov
mov
jecxz
and
xlat
clc
mov
push
out
cmp
adc
pop
push
jp
frndint
sahf
dec
jge
jg
push
mov
and
fs
nop
dec
mov
mov
mov
xchg
leave
shr
ds
add
pop
je
lods
adc
inc
or
push
pop
xor
mov
in
dec
and
or
mov
cwtl
mov
test
inc
cmp
push
in
leave
nop
mov
addl
xchg
and
sub
lahf
mov
fs
xchg
cmp
xchg
inc
xor
out
stos
xchg
inc
push
dec
stos
sahf
sbb
push
push
jne
gs
add
adc
inc
push
jo
sbb
jmp
pop
add
fistpl
inc
jno
fwait
jg
or
mov
mov
or
arpl
push
push
popf
xlat
mov
mov
or
pop
je
inc
dec
dec
testb
jnp
or
nop
xchg
out
mov
mov
out
pop
pop
fstl
sbb
or
stos
fwait
inc
loope
xchg
adc
xor
and
movsl
hlt
cld
sbb
sub
rcrb
imul
jne
fistpl
adc
mov
pop
mov
mov
pop
loope
ss
push
xor
dec
mov
cmp
insl
imul
jne
add
sti
fwait
repz
adc
ficoms
push
jo
repnz
xlat
int
and
push
jnp
es
jae
mov
dec
in
push
loope
mov
mov
adc
xchg
fwait
jge
push
xor
add
call
fwait
adcl
aam
cmp
or
mov
push
fisubl
jecxz
lock
fldl
inc
cmp
ret
adc
cmp
lcall
adc
xlat
ret
and
inc
push
push
add
add
pop
adc
push
or
jmp
inc
sub
xor
movsb
repz
mov
lret
inc
add
add
call
ret
adc
xorl
mov
and
mov
test
xor
cltd
cmp
cltd
and
xor
push
and
mov
cmp
jb
jo
mov
sbb
inc
jmp
or
test
mov
add
or
adc
cmp
mov
addl
repz
cmp
add
and
or
sbb
ret
mov
sahf
out
bound
sub
repz
out
clc
sbb
aam
jns
fcmovnu
push
mov
pushf
pop
push
lods
push
mov
out
clc
push
inc
push
push
sub
repz
jns
nop
movsb
push
push
xchg
jl
repz
fs
inc
cmpb
repz
repz
push
out
ds
sbb
repnz
fmulp
jnp
jns
mov
ret
into
repz
out
sbb
incb
add
es
loop
jns
iret
sbb
sbb
out
sahf
mov
sbb
iret
repz
pushf
scas
lret
sahf
out
cld
or
and
out
sahf
out
data16
nop
sahf
out
sahf
sahf
lods
mov
fsubrp
out
out
jns
push
ss
inc
push
ja
and
jle
repz
data16
sahf
mov
daa
rol
loop
clc
ja
sti
ficoms
imulb
push
cmp
aaa
je
fs
pop
icebp
jns
push
cmp
adc
daa
pop
sbb
push
jbe
add
push
cli
jbe
push
cwtl
cmpsl
insl
mov
iret
pop
sbb
repz
outsl
cwtl
imul
fldcw
les
push
and
push
cmp
pop
daa
cwtl
mov
jo
jne
gs
pop
pop
test
sub
xlat
inc
mov
stos
or
fisttpll
dec
ja
jb
pop
add
mov
outsl
cmpl
clc
xchg
dec
xchg
jno
mov
es
ja
aaa
js
xor
rcll
flds
aaa
outsl
or
jo
mov
pop
fsubs
lret
int3
out
pop
mov
xor
fwait
sub
sub
push
jl
push
dec
cmp
pop
or
das
outsl
push
or
imul
sbbb
mov
xchg
xor
mov
adc
push
stos
dec
jnp
mov
scas
arpl
bound
fadds
fcom
jno
or
and
inc
and
mov
inc
sbb
jmp
jae
icebp
jo
cs
outsl
adc
mov
daa
add
cmp
inc
dec
mov
cmp
mov
dec
or
das
jg
arpl
add
cmp
rsm
mov
dec
inc
push
push
inc
push
inc
pop
inc
int3
fwait
rcl
outsl
outsl
add
sbb
inc
sub
push
and
sbb
pop
dec
aas
in
cmc
and
pop
dec
imul
mov
jae
inc
jne
fdivrs
push
jecxz
inc
js
mov
je
ss
inc
xor
pushl
xor
xor
cmp
sub
inc
inc
xor
xor
mov
mov
xor
jge
xor
xor
inc
xor
xor
ss
pushl
sub
sub
cmp
xor
clc
inc
inc
xor
mov
adc
mov
lret
faddl
jne
test
xor
jo
lret
fidivrs
cmp
add
xor
or
push
loope
and
inc
aaa
adc
xor
inc
pop
dec
add
or
lods
mov
cmp
arpl
push
sbb
inc
push
inc
push
dec
and
fsubrl
cmp
ss
pushf
xor
inc
jno
rolb
dec
outsl
mov
addb
loope
and
sub
mov
ss
push
dec
hlt
imul
ficoml
pop
push
sub
jae
inc
push
inc
out
iret
sarl
xor
sub
out
cmp
in
xor
in
mov
lods
sahf
imul
add
movd
mov
push
into
hlt
outsl
iret
jo
ljmp
xchg
loopne
add
jg
mov
scas
lds
and
outsl
xor
jno
ljmp
push
movsb
inc
je
push
push
insw
int3
lret
push
inc
cmp
adc
mov
sbb
dec
push
in
cmp
sub
jge
mov
fldt
inc
mov
and
imul
sarb
insb
insb
mov
xchg
aaa
xchg
and
outsb
ret
or
mov
test
ss
inc
and
xor
rcrb
cmp
add
insb
arpl
and
pop
xor
imul
imul
pop
and
fnstsw
pusha
push
and
jl
jb
and
or
imul
imul
mov
or
je
dec
xchg
scas
imul
push
jo
jo
test
fildl
dec
fwait
pop
add
sub
sbb
dec
jp
push
cwtl
movsb
jmp
ret
cmc
cmp
arpl
inc
cs
push
push
push
add
ja
fldenv
fildll
adc
pop
xchg
push
popa
imul
add
ds
sbb
fdivl
pop
pop
add
inc
add
mov
mov
and
lock
test
mov
rolb
adc
pusha
sub
xchg
adcb
jg
adc
adc
sti
or
out
pushf
add
sbb
push
add
and
mov
inc
push
cmpsl
add
mov
mov
xchg
mov
adc
adc
fadds
cmp
repz
adc
orb
or
sahf
cmpsl
stc
loopne
adc
sub
mov
das
push
dec
repz
sbb
sbb
sbb
cmpsl
stc
cmp
call
iret
xor
pop
nop
cld
and
sarb
cli
js
jns
stc
iret
repz
jp
push
cld
fdivr
mov
out
mov
mov
test
mov
out
les
mov
and
mov
arpl
xchg
xor
mov
mov
and
ds
cmp
xor
mov
es
add
ds
adc
push
cld
or
in
out
sahf
fmul
les
jno
pushf
push
xchg
call
out
nop
mov
mov
jl
insb
push
iret
pusha
pop
mov
push
sahf
out
dec
inc
inc
cmp
iret
repz
xor
sub
and
cmp
repz
sbb
or
ds
repz
cld
or
out
sahf
out
call
out
sahf
mov
nop
jo
xor
repz
lock
int3
mov
repz
rep
inc
sub
adc
jns
iret
or
push
fcom
les
cwtl
js
sub
cmp
sarl
mov
fwait
loope
sbb
add
call
xor
out
cwtl
jl
dec
daa
dec
sbb
fistpl
xchg
dec
scas
pop
jo
add
pause
mov
mov
les
push
outsb
bound
add
adc
lret
sub
adc
add
adc
inc
dec
cmp
loop
fs
out
adc
or
add
test
out
sarl
pusha
push
jecxz
shll
gs
loop
add
mov
or
arpl
out
cmp
inc
mov
addl
adc
ret
push
ja
mov
jmp
inc
lods
ss
arpl
int
jno
stos
adc
mov
push
inc
add
mov
scas
jbe
sti
add
fbld
sbb
js
shrb
and
mov
pushf
andb
rolb
ret
jns
and
fwait
push
mov
push
xor
xchg
lret
inc
mov
jnp
out
cmp
inc
cmp
mov
add
pop
jne
pop
stc
sbb
sbb
pop
int3
shlb
jmp
add
jne
imul
and
arpl
jg
fmull
pop
outsl
mov
jo
push
or
sub
mov
push
xor
fcmovnu
mov
push
push
insb
das
inc
outsb
jne
subb
fstp
xchg
mov
cmpsl
ja
bound
imul
mov
jg
loopne
or
addr16
push
or
adc
or
adc
inc
scas
inc
push
mov
insb
inc
pop
insb
pusha
pop
sarb
jg
xor
das
fcoms
aam
adc
pop
mov
ss
sete
das
bound
int3
data16
daa
xchg
pop
sarl
jbe
js
in
or
pop
and
xlat
das
jbe
xchg
jns
pop
rcr
cmpb
dec
and
cltd
ss
lcall
sbb
pushf
adc
push
test
adc
push
mov
or
push
popf
addl
jl
in
push
aas
jo
loop
sbb
or
sarl
mov
or
mov
adc
and
adc
enter
loopne
xchg
leave
pop
outsl
jns
iret
fcmovnbe
xor
daa
fidivl
adc
jp
insb
adc
fs
push
sbb
pop
loopne
dec
mov
mov
sahf
loopne
jnp
jns
daa
lock
enter
dec
jecxz
dec
mov
dec
push
mov
dec
lret
xor
fcmovbe
and
push
jmp
add
sarb
inc
and
dec
imul
ret
lcall
out
bound
insb
push
lcall
scas
pop
push
and
gs
dec
dec
add
push
scas
aam
jg
add
push
outsl
ja
xor
jle
cs
lods
add
sub
and
ja
add
push
out
mov
mov
xchg
es
jecxz
and
add
cmp
mov
repnz
outsb
inc
lods
sub
cwtl
neg
ljmp
mov
mov
and
bound
xchg
dec
push
jb
lock
mulb
mov
inc
add
insl
jo
dec
pop
fs
push
add
loope
out
dec
add
xchg
add
push
mov
cli
add
jae
push
and
push
adc
dec
jp
ret
jae
push
sub
adc
dec
jb
inc
mov
push
ret
adc
cmp
adc
shll
push
repz
add
shll
add
leavew
dec
mov
ret
dec
inc
push
mov
pop
das
lcall
dec
or
cmp
jo
std
pop
push
jo
jb
jns
cmpsb
mov
ret
imul
pop
push
adc
jl
je
lods
cmpsl
xor
push
sbb
and
outsb
sbb
movsl
cmp
popa
jge
or
inc
pusha
inc
daa
fs
and
xchg
movsb
popf
and
inc
imul
mov
sbb
xor
stos
enter
ja
andl
fbld
negb
or
lods
gs
push
or
or
test
pop
fnsave
addr16
es
pop
movb
dec
xor
xchg
cmpsb
dec
jmp
test
push
nop
pop
push
mov
push
fs
addr16
mov
dec
xor
dec
pop
push
dec
xor
dec
test
gs
ja
push
adc
jle
sbb
inc
push
call
pop
adc
xchg
inc
callw
xor
ret
fimull
sub
inc
dec
cmpl
aas
das
xor
push
pop
outsl
mov
stos
mov
inc
add
stc
add
sub
mov
orb
insl
rorl
mov
sar
loopne
xor
dec
dec
pop
add
sbb
inc
jns
xchg
fs
adc
mov
lret
inc
sbb
inc
push
outsl
lret
pop
ficompl
dec
xchg
dec
and
roll
push
shlb
cwtl
shlb
sbb
push
mov
int3
or
mov
add
mov
out
add
test
jb
mov
ret
outsl
adcb
arpl
inc
jmp
enter
mov
push
aaa
dec
inc
dec
xchg
fwait
rcr
pop
or
aas
inc
cmc
lret
nop
in
sbb
mov
push
xchg
inc
mov
push
dec
or
inc
jp
fiaddl
pop
mov
stos
iret
add
jo
add
dec
add
add
sahf
movb
adc
jo
sub
push
cmp
adc
movsl
ss
clc
dec
pusha
push
jo
sbb
repz
in
xchg
and
arpl
push
into
pop
roll
in
xchg
lock
or
and
inc
cmp
mov
add
cmp
iret
pop
add
cmpsb
or
xchg
into
out
fcmovbe
add
outsl
inc
cmpsl
add
mov
mov
inc
adcl
jns
movaps
jns
cld
inc
jae
or
ret
add
je
mov
xorb
outsw
xor
sbb
add
mov
lcall
pop
mov
add
out
into
insb
sbb
rcrl
add
sub
pop
push
xor
sbb
shrl
fbld
lret
cltd
jmp
jno
rclb
ficomps
pop
fs
mov
push
popa
out
std
fwait
or
and
clc
cmc
mov
inc
cwtl
aam
push
jecxz
mov
push
pop
add
add
aam
lar
add
pop
imul
test
push
in
adc
mov
push
xchg
push
psllq
xor
popf
cs
mov
jp
add
sbb
icebp
add
sub
and
mov
push
pop
pop
add
dec
add
loop
test
imul
sti
mov
insb
push
fsubrl
sbb
xchg
jbe
addr16
pusha
mov
add
pop
hlt
add
loopne
mov
test
mov
push
inc
push
add
push
inc
xchg
or
daa
push
mov
nop
mov
stos
fsubl
push
adc
add
iret
repz
or
sahf
out
cmp
add
out
lock
enter
jns
out
mov
test
pop
mov
pushf
cwtl
xchg
nop
mov
js
push
out
pop
push
inc
cmp
int
jns
and
sbb
cld
in
lock
call
fsubp
push
fcom
enter
sahf
out
test
mov
jns
out
cmp
sub
int
jns
sbb
or
cld
in
hlt
cmp
repz
in
int3
mov
lods
mov
mov
js
idivl
fs
inc
sub
and
or
jmp
mov
and
test
mov
adc
mov
push
je
repnz
push
mov
adc
xchg
add
sbb
out
testl
lock
push
in
add
data16
add
and
mov
psrlw
lret
jbe
add
xor
push
add
mov
mov
inc
dec
pop
jg
fs
addb
in
inc
dec
pop
mov
add
xor
mov
mov
push
mull
and
dec
jmp
adc
dec
mov
xchg
icebp
and
inc
subl
and
addb
repz
push
pop
jo
andb
pop
add
in
cmp
or
and
adc
outsb
cmp
sub
dec
cmp
test
xor
lcall
jbe,pn
and
lret
add
xor
icebp
jg
xor
ds
je
in
add
mov
xor
lret
add
pop
and
cwtl
shlb
arpl
iret
stos
mov
imul
inc
loopne
ja
js
and
or
insb
and
pop
or
or
or
jb
jne
xor
addl
jae
popaw
insb
into
cmpsb
sub
stc
das
fmull
sub
sti
ss
sbb
jmp
push
inc
test
out
push
inc
add
inc
pop
pop
adc
ljmp
adc
aam
add
xor
xor
sbb
bound
loopne
lcall
xor
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
lcall
push
xor
xor
xor
xor
xor
xor
dec
xor
xchg
dec
xor
sub
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
cld
out
aaa
std
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
outsl
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
add
popl
cld
push
lock
idivl
or
call
xor
xor
push
xor
xor
js
popf
xor
xor
pushl
and
inc
xor
push
xor
xor
xor
xor
xor
xor
pop
incl
out
xor
xor
xor
xor
xor
xor
fidivl
incl
mov
les
fnsave
out
xor
pop
mov
ss
ss
ss
ss
aaa
sbb
jno
dec
paddd
aaa
loopne
add
or
pushl
sarb
inc
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
xchg
lcall
jl
cmpl
mov
cmp
push
adc
cmp
call
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
ljmp
pop
test
jo
test
mov
aas
adc
xor
pusha
cmc
incl
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
aaa
cld
inc
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jo
xchg
pushl
mov
mov
xor
xor
xor
xor
xor
xor
xor
push
aaa
jmp
sbb
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
clc
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
or
inc
aas
pop
aas
ja
pusha
inc
popl
xchg
pop
xor
push
pop
cld
xor
cltd
xor
xor
xor
xor
xor
xor
ret
decl
cmpsb
push
xor
xor
lcall
clc
xor
stc
cld
xor
test
mov
mov
nop
xor
out
in
xor
rep
std
sfence
xor
cmp
pop
cld
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
call
pop
jp
cmp
cmp
std
cmp
cmp
decl
sbb
cmp
cmp
xor
adc
aas
jmp
mov
cmp
ss
ss
xchg
cmp
cmp
or
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
call
cmp
cmp
cmp
adc
dec
aas
push
mov
cmpb
aas
shll
aas
lret
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
incl
leave
xor
xor
loop
xor
xor
xor
call
mov
xor
xor
scas
std
xor
cmpsb
data16
outsl
mov
dec
ss
add
or
aaa
and
aaa
dec
aaa
lock
decl
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
lcall
filds
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
fistpll
decb
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
ret
inc
incl
cmp
cmp
cmp
or
hlt
fstpt
loopne
in
jmp
out
cmp
repnz
mov
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
cmp
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
sbb
cmp
dec
cmp
addr16
pop
mov
xchg
cmp
mov
jp
jg
cwtl
ds
ds
mov
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
cmp
into
or
push
xor
insl
stos
jmp
mov
xchg
les
fidivl
in
lcall
adc
and
sub
cmp
jb
mov
xor
xor
xor
xor
xor
xor
mov
jl
outsl
sar
cmpsl
xor
xor
scas
jno
xchg
xor
xor
xor
fcomip
or
xor
xor
mov
ret
aaa
jmp
jmp
aaa
fwait
sahf
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fcompl
dec
fbstp
aaa
cmp
mov
mov
call
cmp
cmp
cmp
cmp
dec
rolb
xor
call
push
or
xor
cmp
bound
data16
push
outsb
aaa
jb
lcall
loopne
aaa
xchg
ja
js
jge
cmp
cmp
cmp
cmp
or
ret
cmp
cmp
jle
mov
ret
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
xor
cmp
ss
ss
fiadds
cld
cltd
aaa
mov
ret
aaa
jmp
repnz
or
cmp
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
jbe
xchg
ljmp
cmp
cmp
cld
cmp
mov
and
cmp
out
jmp
cmp
fdivrs
push
aas
jne
mov
or
push
ss
mov
fwait
xor
xor
dec
or
sub
push
repnz
aas
xor
divl
pop
aas
cli
xchg
mov
fsub
adc
es
dec
ss
outsb
outsl
clc
decl
ss
enter
in
and
cmp
cmp
popa
cmc
cmp
mov
inc
test
pop
sbb
cmp
pop
push
imul
cmp
test
mov
ret
cmp
dec
decl
cld
cmp
cmp
jae
aam
fnstsw
jecxz
imul
mov
cmp
pop
icebp
call
sarb
inc
cmp
cmp
mov
mov
and
push
cmpb
cmpsl
ds
ds
ret
orb
std
idivl
add
sbb
addr16
loope
out
and
xor
xor
incl
push
xor
aad
out
cmp
or
xor
xor
xor
xor
xor
pushl
mov
int
in
xor
xorl
add
xor
ds
pushl
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
jg
pop
mov
cmp
mov
cmp
cmp
cmp
push
clc
outsl
clc
cmp
cmp
cmp
cmp
cmp
cmp
adc
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
pusha
aas
add
test
fdivrl
loop
out
out
pop
rclb
mov
xor
adc
xor
jae
cmp
jne
das
xchg
movsl
jg
xchg
xor
xor
xor
cmp
xor
xor
cmp
mov
jbe
loopne
jmp
xor
sbb
sbb
sub
sub
nop
cmp
mov
mov
enter
sarb
aam
in
ljmp
repz
xor
aaa
and
call
into
cmp
inc
xor
xor
lcall
decb
lods
xor
mov
mov
xor
xor
fbld
xor
xor
cmp
sub
sub
xor
clc
jmp
cmp
cmp
cmp
pop
mov
cmp
fidivs
cmp
inc
cld
cmp
push
mov
push
mov
mov
cmp
mov
cmp
cmp
mov
pop
jge
in
call
dec
cld
push
add
mov
sahf
or
adc
sbb
and
and
sub
sub
aas
rolb
xor
cmp
inc
cmp
clc
jecxz
cmp
pop
cmp
cmp
insb
cmp
je
mov
cmp
cmp
xchg
cwtl
mov
sub
xor
inc
or
pushl
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shr
xchg
aas
loopne
clc
jbe
push
or
ljmp
cld
shll
pop
bound
clc
xor
xor
inc
xor
decl
xor
cwtl
xor
xor
xor
xor
cmpsb
aaa
loope
or
cmp
mov
or
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
hlt
aas
std
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
hlt
call
pushl
sbb
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
cld
inc
jg
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
popf
clc
and
nop
aaa
xchg
aaa
cwtl
into
mov
lcall
sbb
aaa
mov
mov
aaa
enter
shlb
aam
xor
icebp
aaa
fdivs
fcompl
in
out
or
loop
aaa
hlt
xor
aaa
hlt
add
or
mov
pop
adc
adc
sbb
cmp
mov
cmp
mov
cmp
pop
loope
cmp
cmp
cmp
cmp
sub
lock
cmp
cmp
cmp
cmp
cmp
push
cmp
jg
scas
lcall
pushf
cmp
test
lods
cmp
cmp
mov
cmp
lods
mov
push
add
call
jb
and
test
add
call
sahf
repnz
ud0
es
add
jmp
cmpb
jl
push
insl
es
icebp
addb
pop
shr
int
daa
mov
fcomi
testb
jns
sub
lret
push
orb
ds
add
add
mov
aad
popa
add
ficoms
ret
push
add
movsl
push
add
mov
pop
fbstp
mov
jae
sbb
pusha
cltd
mov
adcb
imul
int3
sub
sub
and
sahf
out
and
dec
mov
lcall
sahf
add
push
repnz
filds
es
loope
adc
sub
mov
dec
fisttps
mov
and
push
xchg
mov
push
sub
cmp
xchg
pop
test
add
dec
out
fnstcw
les
or
sub
and
dec
cmpsl
sbb
std
enter
out
lock
dec
push
jne
dec
ret
push
shl
andl
in
push
ret
adc
sbb
jne
push
mov
data16
les
or
push
ret
mov
mov
enter
sub
xor
adc
push
sbb
push
rcll
je
xor
addl
lods
dec
sub
mov
xor
or
xchg
push
and
pop
mov
lods
or
inc
dec
iret
pop
xchg
dec
sbb
xorb
out
or
pop
dec
sbb
in
xor
xlat
and
and
xor
jl
sbb
sbb
mov
jle
and
cmp
push
jecxz
inc
jp
add
dec
add
and
push
mov
in
ja
mov
inc
mov
mov
cmp
and
sbb
divl
lea
call
popf
pop
mov
mov
outsb
sub
cmp
xchg
or
add
add
cmp
push
adc
xor
sub
or
jae
push
dec
xchg
xorb
push
or
dec
outsl
mov
adc
lea
push
push
pop
jb
cmpb
or
dec
jne
jp
and
sarb
and
or
inc
andl
push
push
call
add
pop
cltd
jb
mov
ljmp
enter
pop
add
push
dec
and
push
dec
fcmovu
mov
cmp
addb
lret
outsb
and
aas
jmp
dec
xchg
cmp
js
sbb
cmp
inc
xchg
xorb
pusha
testl
nop
lret
test
lock
roll
mov
cmpsb
cld
inc
and
call
inc
jmp
lret
pop
and
push
sbb
and
sti
mov
adc
mov
mov
ljmp
lock
cs
push
ds
sub
adc
adc
add
or
add
andl
xor
add
movsl
mov
push
adc
orb
jl
sub
lea
jg
adc
dec
cld
sub
or
jge
shr
cmp
xchg
or
addl
add
mov
jbe
fmull
subb
orl
lock
call
aad
add
stos
add
mov
and
jmp
inc
lock
fildl
inc
mov
jge
xor
add
push
out
lret
mov
das
add
pop
pop
sbb
jns
leave
inc
or
leave
mov
or
mov
pop
add
popf
ret
sub
into
jnp
sbb
and
fsubr
xchg
lock
pusha
xor
loope
fldl
filds
or
jge
out
call
adc
mov
pop
adc
sub
xor
fidivrl
rorb
push
mov
push
sbb
push
pop
push
jbe
mov
xchg
movaps
add
adc
imul
xchg
fisttps
inc
enter
loop
rcrb
loope
pop
lcall
adc
pop
pusha
sbb
hlt
sub
rorb
outsl
das
dec
loopne
adc
push
loope
or
sarb
dec
adc
lea
push
lea
mov
or
pop
call
add
add
fcomip
push
outsb
or
mov
cmpsl
jl
mov
or
andb
mov
test
mov
cmp
mov
int3
mov
in
cmp
push
ja
out
idivl
xchg
lods
inc
decl
stc
jbe
xchg
sub
push
mov
or
xor
lret
add
mov
push
sbb
pop
mov
push
xchg
xchg
jg
or
lods
shll
xchg
cmpsb
out
cmp
xchg
mov
lods
xlat
call
scas
adc
xor
aaa
loopne
roll
rolb
mov
loope
adc
push
ja
not
push
int3
adc
dec
and
add
mov
adc
or
icebp
push
pushf
cmpsl
jge
dec
add
pop
push
in
not
mov
sub
add
add
mov
inc
int3
push
add
ret
sub
test
xchg
das
jl
lahf
sub
leave
xchg
jo
roll
pop
xor
add
xor
lods
xor
bound
jmp
xor
jmp
xor
in
cmp
xor
pop
int3
mov
adc
dec
pop
notb
push
mov
jo
add
ja
xor
fldl
xor
xor
cmp
xor
cmp
or
fildl
into
adc
or
inc
inc
adc
leave
out
adc
test
enter
nop
adc
pop
xchg
dec
sbb
push
sub
repnz
inc
movb
add
xchg
cmp
add
push
mov
push
sub
rorb
mov
push
mov
add
sub
mov
and
call
pop
dec
adc
out
sub
movsl
pushf
xchg
jne
xchg
adc
inc
adc
loope
xchg
push
inc
adc
jne
mov
jne
mov
and
adcl
push
mov
and
dec
xor
pop
jnp
push
cmp
or
xchg
mov
pusha
addb
sarl
sub
lret
lea
out
scas
outsb
xor
ret
rorl
sbb
mov
pop
das
adc
adc
adc
and
jle
sbb
sbb
jbe
bound
mov
push
jo
xlat
andl
je
int
pop
psubsb
pop
jae
movhps
sbb
testb
call
call
jns
sbb
or
inc
idiv
adc
int3
lar
adc
sbb
ds
cmp
adc
mov
sub
mov
or
lret
cmp
ja
daa
and
orb
dec
aas
in
adc
jo
push
jge
or
inc
pop
call
or
sahf
push
daa
fs
and
je
inc
or
xorps
push
call
adc
mov
daa
ds
gs
mov
adc
push
cmp
or
dec
adc
cmp
and
adc
or
and
inc
and
stc
inc
inc
or
sbb
mov
sub
inc
inc
jg
mov
push
or
lods
sbbl
and
sub
mov
lahf
sbb
adc
or
inc
push
jbe
push
mov
or
sbb
push
xor
repnz
mov
sbb
mov
sub
add
or
cmp
add
inc
mov
dec
push
or
and
imul
xor
mov
adc
inc
outsl
dec
inc
mov
out
dec
mov
andb
fwait
or
aaa
ds
jae,pn
pusha
pop
inc
pop
or
pop
mov
dec
call
pop
leave
cwtl
or
rcll
call
mov
adc
pop
jo
mov
enter
es
jecxz
mov
ss
cmpsl
jae
adc
pop
xchg
pop
andb
ljmp
jnp,pn
imull
nop
nop
push
adc
rolb
add
hlt
pop
lea
insl
les
cmp
repz
fs
pop
push
dec
inc
pop
mov
pop
imul
add
jmp
cmp
movsb
mov
push
sbb
lret
mov
adc
and
out
in
out
xor
pop
nop
xor
push
push
jl
or
pop
sub
orb
push
shrl
pop
mov
push
sahf
out
push
loopne
lock
add
cs
idivl
push
pop
cmp
int
inc
sub
xor
inc
pop
or
sub
cmpsl
push
adc
in
out
xchg
mov
inc
enter
stc
xchg
mov
rolb
push
jns
test
sbb
or
jb
hlt
adc
imul
mov
in
jl
mov
jns
push
mov
push
inc
push
call
ja
pop
pusha
mov
pop
or
pushf
sub
hlt
push
hlt
lds
pop
push
cmpsl
or
pusha
stos
ret
out
aam
adc
cmp
enter
sub
nop
cmpsb
jns
sub
push
xchg
add
dec
rcrl
sub
sub
and
sub
sub
sub
sub
sbb
jae
sub
sub
sub
add
xchg
sub
lcall
sub
cmpsb
imul
rcll
sub
sub
sub
dec
testb
sub
add
xchg
mov
sbb
and
ret
sbb
shl
mov
push
adc
push
mov
cmp
inc
js
inc
jmp
pop
stc
push
scas
or
push
lret
ret
lret
or
sbb
mov
inc
outsb
sub
mov
frstor
call
cmpsl
or
push
jge
bound
sub
and
sub
mov
mov
ja
inc
adc
inc
mov
adc
es
in
sub
push
in
pop
hlt
ds
shl
mov
inc
iret
push
xchg
in
mov
adc
rorb
inc
lds
inc
mov
mov
adc
push
sub
push
je
aas
and
sahf
sub
xchg
mov
push
je
xor
inc
xor
filds
mov
inc
cmp
or
jae
inc
push
jmp
out
adc
ret
call
cmpsb
inc
add
adcb
test
lcall
adc
movsl
fdivp
loopne
inc
ret
pop
mov
mov
mov
mov
test
aaa
leave
cmp
jns
push
or
mov
dec
jns
mov
sub
pop
add
mov
lret
lods
ds
js
roll
fdivl
xchg
jns
xorb
mov
dec
pushf
rorb
outsb
cwtl
jns
sbb
mov
xchg
mov
mov
sbb
jno
jns
sbb
xchg
js
into
daa
jns
and
dec
sbb
and
inc
andb
mov
add
inc
ret
xchg
jns
ljmp
icebp
sbb
and
jns
sub
or
sub
pop
aam
daa
popf
rorb
fbstp
aad
fs
daa
xchg
fidivrs
mov
daa
fcmovu
movsl
enter
jmp
outsb
or
dec
cmpsl
daa
mov
fs
mov
test
test
into
sbbb
addb
dec
mov
dec
gs
or
adc
xchg
inc
cmp
test
mov
xor
clc
or
and
mov
sbb
pop
mov
aam
mov
daa
pop
lcall
ja
pop
aam
daa
sbb
daa
les
add
inc
xchg
daa
mov
test
or
fmuls
mov
mov
xchg
cmp
fiadds
ja
daa
cwtl
dec
mov
mov
push
in
xchg
daa
loopne
adc
and
inc
xor
adc
lret
int
xchg
nop
fisttpl
aaa
and
xchg
stos
mov
mov
mov
mov
inc
mov
xor
dec
call
test
lret
adc
sbb
mov
test
inc
daa
mov
rcrl
das
push
nop
jne
and
aaa
rolb
or
dec
movsb
sbb
cmp
jnp
dec
sti
add
and
mov
mov
mov
and
je
xor
sbb
outsb
xorb
inc
cmp
pop
mov
mov
cs
into
clc
pusha
push
add
mov
mov
inc
jb
enter
add
push
test
inc
mov
or
xorb
inc
mov
movsl
data16
fiaddl
pop
adc
test
xorl
mov
pop
jl
hlt
sahf
mov
adc
sbb
xor
pushf
adc
add
dec
aam
negl
mov
loope
pusha
xorb
shlb
cmp
js
mov
stos
hlt
mov
and
and
cltd
sbb
xor
and
and
cmp
inc
cmp
and
and
sbb
pop
cmp
mov
xorb
and
and
and
dec
nop
mov
jo
mov
cmp
outsl
adc
enter
inc
pop
lds
mov
ret
add
jbe
call
jne
lea
push
flds
cmp
movsb
aad
std
jo
movsb
repz
inc
aam
jns
fstpl
sbb
test
aam
scas
sub
or
jb
aad
aad
jno
pushf
mov
mov
jmp
cmp
imul
pop
scas
or
inc
push
ja
in
xor
pop
movsb
pop
nop
arpl
pop
xor
pop
call
out
outsb
je
push
and
sub
aad
inc
lahf
nop
adc
enter
sub
inc
aad
cld
xchg
push
repnz
xlat
add
cmp
dec
lahf
or
push
sbb
cmpsb
xchg
sarb
mov
lcall
and
or
icebp
sub
ret
xor
sarb
repz
and
mov
sub
hlt
or
and
sub
fwait
in
sbb
fisttpll
adc
lods
mov
shll
xorb
push
nop
mov
adc
mov
mov
lcall
and
push
mov
xchg
sarb
dec
lock
pop
add
and
push
lret
push
pop
pop
adc
pushf
cmpsb
cmc
mov
mov
mov
xchg
dec
and
add
fistpl
psrad
pop
mov
push
rolb
pusha
ds
xchg
pop
jp
pop
hlt
push
dec
loope
and
cmp
lahf
pop
mov
jnp
das
rclb
jnp
sbb
xor
out
sbb
loopne
cmp
xchg
fsubr
jp
sbb
xchg
push
or
inc
jb
stos
xchg
mov
xchg
xchg
inc
cs
jmp
fwait
roll
fmuls
mov
mov
rolb
sar
loopne
clc
adc
mov
adc
jecxz
jmp
stc
ret
push
push
mov
mov
cmp
push
pop
lea
mov
fcoml
loop
icebp
push
aas
stc
xorl
lea
push
stc
stc
data16
xor
in
sbb
push
call
xchg
call
mov
adc
sbb
inc
fstp
setb
das
sbb
adc
fisttpll
in
pushf
xlat
mov
cmpsl
sbb
daa
stc
sub
xor
jns
sub
loop
mov
add
fmull
es
aas
popa
adc
cmpl
mov
jecxz
push
mov
aaa
sbb
sbb
stc
sub
gs
add
fildl
das
pop
jae
enter
adcb
inc
push
jne
sbb
lock
xor
or
and
enter
iret
aam
pop
leave
jns
adc
inc
adc
call
pushf
push
ds
mov
xor
test
sbb
jno
add
pop
sub
inc
bnd
adc
push
ret
call
and
jno
loop
and
or
fdiv
je
xchg
mov
cmp
push
movsl
sti
sbb
ret
xchg
js
jl
xorb
test
sub
shll
addb
mov
shrl
inc
mov
mov
rcr
fst
xor
jl
push
scas
je
jl
mov
mov
shll
dec
push
shrl
cli
mov
ret
adc
shrl
add
and
imul
stc
xor
or
sbb
mov
les
xchg
mov
add
inc
mov
or
xchg
nop
mov
or
hlt
les
push
pop
pusha
xor
mov
inc
cltd
cmp
xorb
pop
pusha
pushf
push
out
inc
xchg
push
fadd
xor
xor
sbb
addl
cmp
repz
inc
sub
mov
jae
pusha
fsubl
xor
pop
or
xor
xchg
or
out
add
xor
adc
adc
or
add
adc
or
add
adc
adc
cmp
in
jp
fldcw
aam
dec
push
xchg
in
roll
fnstenv
in
pop
rcrl
jns
fcomp
rorb
sbb
lods
adc
mov
stos
mov
sub
push
push
adc
sub
adc
push
inc
or
movsl
add
xchg
loopne
movsl
adc
mov
rclb
call
dec
movlps
inc
mov
roll
das
mov
test
lcall
xchg
xchg
int3
xor
outsb
adc
imul
or
push
rclb
push
dec
dec
jns
imul
flds
sub
rorb
add
aam
jp
or
push
call
sub
mov
je
adc
sub
jne
pop
rcl
push
sub
push
pop
repnz
adc
adc
ficompl
in
or
push
sbb
or
cmp
push
xor
faddl
dec
in
add
push
lret
pop
adc
cmpsb
and
ss
push
cmpsb
mov
cmpsl
or
aaa
and
dec
in
push
daa
jp
dec
cmp
sub
movsb
imul
jbe
push
dec
sarb
push
mov
xorl
das
lcall
ficomps
pop
insb
push
add
dec
dec
out
mov
lds
shrl
cmp
add
outsl
pop
mov
cld
dec
vpunpcklqdq
lds
and
sub
lds
outsb
push
inc
mov
pop
popf
addb
mov
inc
loopne
mov
aam
cmp
je
pop
addr16
or
sbbl
aaa
test
fdiv
pop
jmp
jne
call
push
push
aaa
pop
repz
cs
and
or
rorb
cli
jne
mov
sub
xor
cli
mov
pop
or
ret
pop
xchg
in
push
int3
pop
mov
aam
and
pop
push
xchg
sub
mov
sbb
es
jns
pop
pop
cmp
mov
inc
cmp
xor
mov
mov
jo
pop
mov
mov
or
rcrb
test
lods
sub
adc
mov
pop
shlb
pop
mov
jns
adc
cs
lock
push
jmp
push
pop
hlt
aam
mov
sbbl
adc
frstor
enter
push
push
dec
jecxz
loopne
in
or
dec
in
inc
add
loope
pop
test
jle
sbb
mov
iret
rclb
mov
xchg
lea
and
xchg
pop
pop
and
pop
cs
dec
adc
fcoms
pop
call
push
sbb
in
loopne
xchg
add
lea
leave
and
push
mov
pop
add
dec
pop
xchg
pop
pop
orb
mov
xchg
mov
push
mov
xchg
mov
xor
xchg
mov
adc
xchg
mov
lock
call
mov
repnz
mov
repnz
mov
mov
mov
push
pop
cmp
inc
pop
mov
sbbl
ds
push
jb
mov
and
cmp
pop
mov
nop
sbbl
mov
enter
lds
in
pop
cmp
mov
cmpb
enter
mov
sbb
and
ds
pop
jb
sbbl
pop
cmp
inc
stc
mov
sbbl
fdivrs
jb
mov
and
cmp
mov
mov
cmpb
pop
jb
mov
in
pop
cmp
mov
cmp
test
mov
or
idivl
jb
mov
clc
shll
cld
adc
or
sarl
and
scas
mov
cld
xchg
mov
add
int3
dec
ja
adc
gs
dec
xor
or
or
xor
daa
inc
and
das
xor
mov
sbb
dec
sub
cmp
stc
mov
out
push
xor
xor
dec
cli
cmp
dec
jae
ret
mov
dec
sub
add
add
adc
mov
inc
into
aad
jo
and
push
dec
push
rcll
and
mov
test
xor
sub
sub
and
repnz
ljmp
sub
data16
add
sub
push
mov
hlt
imul
dec
push
leave
sti
testl
arpl
pop
scas
aas
inc
daa
inc
fldl
sub
shrb
nop
inc
int3
cmpb
inc
lea
or
mov
add
xchg
inc
imul
imul
mulb
cmp
data16
ss
and
addb
into
dec
movsl
and
mov
or
dec
jmp
and
jo
sbb
addr16
xchg
and
inc
mov
dec
xor
fs
js
mov
dec
mov
fs
test
movsl
add
ljmp
push
dec
and
jb
dec
aam
dec
fbld
dec
leave
shlb
sbb
je
dec
mov
dec
dec
cmpsb
sub
push
xchg
jle
leave
pop
xchg
outsb
pop
xchg
out
cmp
and
loopne
inc
dec
xor
enter
or
inc
test
inc
xchg
decb
inc
mov
jmp
pop
addr16
and
and
inc
cs
or
dec
mov
dec
and
scas
xor
mov
xor
shlb
xchg
add
addl
sub
andb
shrl
dec
inc
xchg
adc
lret
fiaddl
out
mov
int3
xchg
test
orb
fs
mov
sub
cmp
in
enter
cmp
lock
pop
sbb
into
xchg
dec
nop
and
jbe
aam
call
and
add
fs
pop
fs
stos
push
cmpl
dec
sub
jl
je
dec
cmp
fs
add
push
dec
pop
hlt
push
xchg
nop
dec
xor
lock
or
ss
int3
fdiv
loopne
pusha
xlat
mov
cld
sub
ds
cld
sub
cmpsl
dec
xchg
cmp
fs
mov
jle
xchg
push
dec
and
fs
shrb
xchg
xchg
fidivs
dec
dec
sbb
inc
sbb
fs
dec
cmp
fldcw
loope
sbb
xchg
add
inc
xchg
sbb
lods
adc
bound
sbb
enter
xlat
mov
clc
inc
inc
call
ja
dec
dec
sbb
rorb
dec
pop
lods
nop
movsl
ret
jno
and
cld
dec
dec
aaa
mov
xchg
in
cmp
dec
cmp
jecxz
nop
movsl
dec
in
fs
jmp
cmp
dec
add
jmp
xchg
add
cmp
cmp
insl
mov
popa
nop
test
dec
pop
sbb
movsl
xchg
gs
cmp
jns
std
dec
jle
sub
mov
sbb
or
dec
popl
scas
push
pop
dec
sub
push
cmp
sbb
jbe
push
fs
pop
mov
lock
xchg
sahf
jg
xchg
xor
andl
sbb
mov
dec
add
cmc
cmp
out
xor
rorb
xchg
dec
and
sbb
jne
dec
cmc
or
dec
shrb
pop
jns
and
dec
sbb
dec
push
xor
addb
inc
test
ljmp
cltd
loopne
and
dec
xchg
push
rorl
je
stos
inc
dec
repnz
rcrb
and
rcrb
xchg
dec
jb
std
mov
sub
fidivs
adcb
aad
out
inc
dec
jne
and
jne
rorb
sahf
je
nop
movsl
dec
nop
mov
pop
int
dec
or
and
dec
jne
xchg
add
dec
popf
sahf
callw
and
test
pop
and
loopne
and
dec
mov
inc
add
dec
lahf
mov
dec
pop
ret
inc
xchg
dec
stc
adc
mov
xor
je
mov
sbb
xchg
repnz
mov
inc
xchg
outsb
test
jge
dec
add
dec
fimuls
pop
jmp
dec
addr16
mov
loope
in
adc
clc
jb
or
out
lds
dec
xlat
lods
dec
inc
xchg
adc
shl
sub
push
mov
data16
dec
xchg
and
dec
dec
cmp
je
xchg
out
inc
test
rolb
and
sahf
orl
int
into
dec
jb
cmp
and
xchg
out
push
dec
mov
add
test
jmp
or
mov
dec
and
inc
mov
and
xor
orb
xchg
inc
dec
mov
psubusw
jmp
dec
fwait
enter
call
movsb
mov
dec
shlb
pop
outsb
mov
lcall
cmp
push
sahf
data16
cwtl
adc
repnz
lods
popf
in
mov
xor
clc
pop
add
andb
sub
cltd
push
pusha
sub
jp
and
add
movl
sbb
movb
push
stc
mov
xor
shrb
js
mov
cmp
adc
aas
sbb
cmp
repz
pusha
jo
aam
jns
iret
in
add
adc
push
sahf
out
sahf
bound
mov
mov
test
push
xor
jb
repz
test
sahf
cmpsl
stc
cmp
or
push
sub
jns
out
dec
pop
data16
out
sahf
out
scas
loopne
iret
repz
push
stos
and
push
pusha
cmp
repz
jbe
xchg
movsb
xchg
nop
mov
dec
out
repz
repnz
lea
adc
addl
int
xor
andb
out
test
push
fmul
out
int
sbb
aad
outsb
cmp
jl
int
cmp
mov
test
call
push
movb
adc
sbb
add
mov
repz
clc
push
mov
add
repz
test
adc
adc
cmp
jmp
push
adc
xchg
sbb
sbb
cmpsl
stc
call
or
push
lcall
push
pop
sahf
mov
xor
cmpsl
xor
push
and
js
cmp
repz
sbb
add
hlt
call
inc
mov
inc
popa
push
sbb
and
mov
or
jb
pop
adc
aas
out
lea
push
xchg
or
xor
out
sahf
sub
add
xchg
hlt
cmp
repz
aam
repz
repz
mov
mov
movsb
mov
repz
nop
mov
repz
iret
repz
insb
push
cmp
repz
push
dec
dec
inc
repz
repz
cmp
xor
iret
repz
sub
sbb
or
sahf
out
lcall
jmp
out
fs
and
inc
popl
iret
repz
shlb
iret
repz
xor
clc
mov
out
call
repz
out
or
enter
ds
js
xor
rclb
jle
mov
mov
test
pop
add
test
mov
dec
test
pop
add
or
testl
push
inc
push
push
add
xchg
mov
xor
sub
push
xor
dec
enter
ja
push
in
shlb
js
inc
sbb
push
or
push
xchg
add
shll
and
aas
xchg
add
push
daa
and
mov
mov
inc
add
and
mov
insl
add
das
xor
inc
push
pop
pop
adc
jl
xchg
ficompl
mov
xor
test
or
push
mov
enter
and
das
fs
dec
jb
shlb
fsubrs
inc
pop
xchg
sbb
out
dec
xor
cmp
cmp
pop
pop
inc
fisttps
dec
loope
inc
out
aas
sbb
dec
adc
sbb
jg
shll
dec
pop
je
aas
inc
es
cmp
ret
repnz
pop
jo
dec
sbb
add
mov
dec
fstpl
dec
sar
mov
jne
aas
adc
pushw
pop
or
unpcklps
push
lods
lret
xchg
cmp
jl
pop
int3
das
les
xchg
nop
imul
dec
push
fildll
push
mov
push
insl
sbb
lock
aaa
add
aam
mov
adc
in
outsl
jbe
pop
mov
sti
fiadds
iret
push
sbb
or
jbe,pn
ud2
xor
inc
mov
ds
sub
xchg
movsl
add
repz
mov
sub
add
mov
mov
jno
jle
xlat
mov
adcb
dec
scas
cld
andb
pop
push
leave
sbb
sbb
pop
inc
aas
sarl
jne
xor
sbb
imul
mov
and
cltd
insl
and
sub
daa
sbb
push
inc
cmp
inc
sub
adc
jecxz
rorb
or
inc
and
rcrb
ror
push
sub
sub
pop
mov
inc
outsl
or
push
sub
xchg
rcrl
xor
dec
xor
adc
xor
xor
dec
fnsave
inc
push
fcomps
fnsave
inc
inc
arpl
add
adc
arpl
inc
arpl
inc
arpl
inc
cmpsl
push
adc
adc
lea
arpl
inc
xchg
and
add
shll
add
arpl
packsswb
inc
arpl
xor
push
xor
test
lea
arpl
rorl
incl
dec
xchg
shrb
faddp
fwait
cwtl
mov
mov
add
jbe
aad
stos
mov
subl
mov
and
lahf
cwtl
call
incb
xor
xchg
movsb
xchg
idivb
repz
pushf
cwtl
xchg
nop
mov
cmp
repz
pop
sahf
out
ficoms
inc
inc
cmp
jns
out
xor
sub
and
jns
out
sbb
adc
mov
hlt
xchg
in
push
in
fcompl
enter
test
pushf
out
pushf
mov
out
or
push
insb
push
fs
jns
repnz
push
dec
mov
push
and
sahf
out
out
add
in
xchg
push
enter
sahf
out
mov
mov
sahf
out
cmpb
push
cmp
cmp
push
adc
dec
repz
lock
loopne
mov
mov
xchg
insb
pop
mov
mov
adc
pop
push
sub
push
dec
lock
in
lock
xor
xchg
push
test
mov
das
add
mov
imul
mov
or
mov
or
xchg
test
pop
call
inc
mov
jg
in
pop
enter
or
lcall
cs
popa
popa
xor
daa
push
ret
ret
mov
aas
iret
sub
fs
add
add
verr
loopne
xor
mov
mov
call
sub
iret
xor
xor
sahf
xor
xor
xor
xor
xor
aaa
fbstp
and
clc
dec
sbb
cmp
cmp
cmp
notb
cmp
bound
push
xor
mov
decl
sahf
fdivrs
bound
cmp
xchg
mov
cmp
mov
and
pop
lcall
jecxz
data16
aas
fs
imul
aas
jecxz
call
sub
xchg
mov
and
sub
inc
xor
mov
sub
xor
push
shl
loope
sbb
idiv
push
mov
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
icebp
push
ret
clc
lea
xchg
xor
xor
xor
and
out
sbbb
xor
or
jg
xor
adc
sbb
sbb
mov
xor
xor
xor
xorb
xor
push
xor
xor
ss
xor
xor
xor
xor
xor
ljmp
mov
mov
mov
xor
xor
xor
xor
xor
and
sub
mov
mov
xorl
out
push
mov
sbb
aaa
cmp
insb
cmp
xchg
and
adc
lock
sbb
sbb
and
and
sub
xor
jp
idiv
xchg
repnz
cmp
inc
pop
mov
cmp
sbb
cmp
or
outsl
add
dec
cmp
cmp
inc
idivb
cmp
clc
mov
cmp
add
pop
cmp
ret
jbe
cmp
call
mov
cmp
ds
ds
ds
cmp
dec
inc
push
ret
aas
mov
mov
mov
aas
repnz
and
inc
xor
outsb
js
mov
xor
xor
or
xchg
xor
xor
sbb
mov
dec
xor
aam
fimull
xor
popf
xor
dec
xor
cmpsl
repz
xchg
xchg
outsl
test
lret
push
add
ss
pop
aaa
mov
aaa
incl
mov
outsb
pop
xchg
sub
cmp
jg
ret
cmp
js
jle
xchg
ret
push
mov
mov
ret
mov
jl
in
adc
xor
clc
pop
ss
cmp
imul
sbb
xchg
jb
cmp
cmp
fs
pop
ss
xor
jnp
adc
ljmp
cmp
cmp
adc
cmp
enter
es
in
mov
cmp
cmp
ljmp
adc
pushl
xchg
jp
insb
cmp
cmp
cmp
cmp
cmp
mov
fbld
xchg
and
cmp
push
ds
ds
clc
inc
loopne
xor
aas
and
dec
aas
push
aas
or
ss
push
bound
outsb
xor
sbb
popf
fidivl
test
clc
xor
fists
js
daa
loop
jg
mov
inc
sbb
in
cmc
xor
xor
sarb
scas
xor
inc
xor
insl
xor
test
arpl
xor
cli
xor
adc
cmp
loope
xor
aaa
jnp
inc
sbb
aaa
add
or
cmp
xchg
mov
inc
or
push
cmp
xchg
cmp
sbb
sub
cmpsl
sahf
inc
cmp
mov
mov
call
cmp
outsl
ss
sub
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
mov
push
addr16
cmpb
cld
sbb
mov
je
clc
fwait
sbbb
sub
pushf
sbb
inc
icebp
jmp
pusha
outsl
or
js
lock
xor
fnsave
out
test
loop
pop
push
cmpsb
aaa
sub
xor
add
xor
push
pushl
mov
out
push
adc
sbb
das
ss
mov
mov
test
ss
aaa
pop
dec
pop
cmp
mov
mov
lret
cmp
cmp
cmp
inc
xchg
mov
mov
mov
cmp
jg
cmpsb
cmp
cmp
cmp
test
lahf
cmp
jp
aas
mov
scas
pusha
add
ljmp
lahf
sbb
sub
cmp
xor
test
xchg
dec
pop
sub
mov
xor
sub
and
xor
pop
xchg
icebp
fwait
mov
inc
ss
ss
aaa
gs
mov
das
fcmovbe
cmp
cmp
cmp
cmp
scas
jbe
adc
sahf
jo
mov
xor
mov
adc
outsb
and
js
xchg
into
sub
cmp
jb
gs
jnp,pn
mov
int
push
clc
lcall
pusha
or
xor
lock
adc
and
lock
je
jl
sbbb
xor
cmpsl
xchg
or
mov
call
mov
movsb
jle
fnsave
scas
scas
lret
aam
in
mov
pop
hlt
push
fs
shlb
cmp
int3
out
add
scas
push
xchg
jo
js
jl
enter
mov
or
mov
fcmovb
xor
int3
xor
or
out
ljmp
call
shrl
test
xor
xor
adc
stos
sbb
dec
cmp
filds
inc
xor
push
xor
xor
mov
push
ret
orb
jl
nop
rdmsr
push
std
xor
movsb
xor
mov
mov
ret
sarb
fnsave
fsubs
outsb
sbb
xor
or
dec
xor
sahf
add
jle
jp
push
push
xor
push
mov
mov
int3
xor
lock
ret
cmp
dec
add
lret
fmull
mul
pop
daa
cwtl
out
fsubrs
mov
mov
xor
xor
xchg
or
xor
xor
xor
jnp
mov
mov
add
xchg
pop
xor
pusha
xorb
movsb
rol
fs
shlb
loopne
sbb
stos
sbb
cs
or
mov
out
xor
dec
xor
data16
xchg
icebp
add
sub
xor
jb
stos
in
psllq
xor
cld
cmp
inc
orl
push
xchg
dec
xchg
push
lcall
cli
push
jp
xor
xor
xor
xor
xor
xor
xchg
adc
pop
add
xor
addr16
jo
and
test
xchg
lods
and
jg
mov
xchg
xor
add
pop
jo
nop
ljmp
push
xchg
cli
mov
fdivr
add
inc
dec
or
movsb
inc
cmp
rolb
jo
add
add
add
add
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
fwait
std
or
inc
add
or
xchg
add
add
adc
jp
dec
add
dec
xor
add
imul
test
add
push
adc
call
pop
and
xor
inc
mov
adc
xor
cmpb
mov
hlt
jne
mov
sub
inc
aaa
adc
inc
pop
sub
icebp
movsb
xor
shl
sub
adc
test
ret
inc
or
xor
lahf
xchg
xor
into
add
adc
mov
ja
adc
add
adc
pop
popa
jno
and
adc
mov
or
mov
lock
loope
icebp
mov
or
push
mov
xorb
scas
inc
addb
js
das
mov
or
or
add
lcall
inc
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
add
mov
movsl
jecxz
cli
pop
mov
pushl
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
call
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
mov
incl
or
xor
lcall
mov
push
pop
mov
fistpl
mov
popl
movb
xchg
sbb
scas
adc
mov
pushl
sub
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
outsl
lcall
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
inc
or
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
jmp
rorl
mov
int
arpl
push
out
or
sub
push
sahf
pop
clc
sti
jg
jno
lock
jg
das
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
pusha
outsl
xchg
add
mov
or
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
sti
in
sbb
stc
loope
mov
sar
andl
aas
icebp
testb
mov
aad
pop
xor
jns
mov
in
repnz
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
push
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
dec
sbb
sbb
sbbl
into
andl
aas
loopne
cli
adc
xchg
fnstsw
in
add
inc
adc
loope
fisttpll
out
mov
std
cli
push
push
push
idivl
cmp
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sub
mov
cmpsb
orb
mov
js
jmp
xchg
pop
clc
pop
hlt
lret
ljmp
dec
movsb
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
loopne
fucom
out
sarb
sbbl
jno
or
sarb
mov
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
jg
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
lcall
std
aad
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
pushl
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
pop
lock
stos
dec
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
clc
repnz
cmp
fmull
enter
jecxz
scas
inc
stc
sub
in
pop
mov
sub
mov
dec
incb
fidivl
std
loop
aas
mov
or
cld
inc
or
mov
cmpsb
push
pop
jg
add
jg
mov
pop
mov
test
mov
mov
iret
push
mov
push
push
sbb
stos
icebp
pop
incb
jno
mov
jg
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
clc
xorl
paddsw
push
or
add
mov
aas
fsubrl
lock
or
sbbb
mov
add
push
sbb
jne
push
and
mov
adc
loope
xchg
lahf
or
push
rcrl
rolb
pop
bound
aas
fistpl
adc
call
jno
pop
jg
fists
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
call
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
ss
jg
jg
stos
pop
add
ds
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
clc
incl
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
sub
incb
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
cld
jg
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
aad
loop
lahf
mov
or
out
lcall
outsl
ljmp
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
jg
sti
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
in
xor
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
clc
jmp
and
xchg
fidivrs
clc
clc
fistps
insb
test
aas
repz
sbb
lock
in
jmp
ret
out
sbb
aaa
clc
push
std
mov
je
icebp
or
mov
lcall
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
outsl
pop
bound
dec
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
mov
xchg
imul
pop
in
cmp
cld
int
mov
fidivs
clc
adc
jmp
pop
inc
clc
jg
dec
mov
xlat
inc
incl
out
clc
aas
aas
mov
jg
mov
sub
addr16
in
idivb
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
icebp
scas
cli
inc
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
sbb
scas
or
loope
jae
jmp
adc
je
jge
fbstp
out
incl
jg
stc
add
out
icebp
mov
loope
mov
cmpsl
jb
das
xchg
popf
sti
mov
fbstp
enter
push
pop
aam
jge
out
cmp
or
test
call
xor
decb
adc
outsl
decb
dec
adc
call
movsb
out
cltd
add
sbb
mov
cmp
int
add
push
pop
aaa
std
sbb
inc
sbb
mov
mov
aas
icebp
ret
rol
enter
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
add
and
dec
add
sub
fidivl
xlat
rcrl
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
cmp
mov
adc
jo
sarl
pop
rclb
cld
jno
ret
fs
add
inc
sbb
call
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
ret
in
sbb
xchg
imul
add
scas
mov
std
mov
daa
jmp
faddl
push
adc
mov
int
popa
lds
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
pop
mov
add
fsts
xor
cmpb
nop
dec
sti
push
cs
pop
inc
add
or
insl
inc
mov
mov
iret
call
ret
cli
rcrl
mov
and
adcl
ret
dec
mov
dec
sub
push
in
adc
stc
out
sbb
iret
lock
push
cltd
inc
pushl
push
arpl
std
out
loopne
aas
in
int3
outsl
cltd
fisubl
cmp
jge
andb
fisttpll
sub
and
mov
lock
icebp
repnz
adc
leave
aas
loopne
lret
mov
mov
scas
jne
call
roll
pop
adc
add
out
cmp
push
arpl
sub
adcb
stc
frstor
add
cli
cli
fisttps
jns
fiadds
ficompl
aad
xchg
dec
mov
adc
outsb
mov
in
enter
mov
outsb
cmp
or
jbe
arpl
pop
dec
jbe
lret
fimuls
mov
push
xchg
incl
psubsw
ljmp
sti
leave
jecxz
stos
add
inc
shr
mov
test
pop
sub
pushl
inc
push
sub
mov
xchg
js
jecxz
push
out
pop
adc
pop
call
icebp
mov
mov
cmc
cli
dec
dec
cmpsl
hlt
mov
xchg
sub
mov
lock
call
cltd
cmp
xor
outsl
sub
testb
mov
fs
cmp
dec
add
lcall
sub
xor
inc
pop
bound
mov
adc
sub
scas
pushf
add
test
repz
lcall
mov
ja
sarb
ja
pop
xor
xchg
lods
movl
pusha
loop
lcall
les
lret
cmc
mov
cltd
push
ds
fildll
and
mov
push
stos
sbb
es
adc
and
mov
loopne,pn
lcall
test
xchg
test
cs
jbe
push
xchg
imul
push
das
mov
cmpsl
addr16
dec
adc
jmp
jnp
fs
add
inc
sub
fdiv
and
cmp
fistpll
enter
inc
lret
out
cltd
out
sub
test
lock
jmp
insb
jg
pop
xor
mov
test
int3
pop
lods
lret
aaa
stc
inc
nop
inc
push
and
mov
add
jg
jmp
clc
test
cltd
mov
repz
andl
add
or
cld
or
rcrl
icebp
mov
ss
outsl
push
hlt
sub
and
inc
pop
fstpt
rolb
dec
cmpsb
icebp
fists
sub
jae
xor
adc
sub
push
cmp
fsubrl
pop
lcall
adc
inc
cmp
sbb
inc
jns
loop
test
pop
addl
mov
lcall
push
lcall
int
pop
mov
jno
and
imul
add
stc
xor
mov
cmp
xor
int3
shr
lret
loope
add
ss
jmp
lret
loope
stos
cmp
xchg
ret
test
push
xor
cld
add
add
xchg
cmp
int3
jg
cwtl
add
push
ret
push
lock
jo
mov
call
push
icebp
aam
sarb
inc
xor
pop
sub
jae
scas
or
pop
xchg
dec
pop
cmp
pop
rol
pop
cmp
lods
dec
pusha
test
dec
cs
decl
rorb
sub
les
mov
adc
test
jb
incl
je
ljmp
sbb
addr16
xor
mov
lock
decl
inc
jmp
fwait
dec
push
dec
mov
and
jmp
sbb
mov
addb
sbb
repnz
mov
xchg
push
je
jnp
call
repz
pop
fidivrl
fwait
dec
icebp
mov
mov
arpl
cmpsb
call
jo
push
sar
in
jo
ljmp
fs
jbe
jae
mov
xor
das
insl
add
pop
lret
mov
mov
jmp
jb
in
sub
dec
sbb
es
jg
adc
loope
mov
in
stos
inc
cld
ljmp
clc
jecxz
push
ss
imul
filds
mov
aaa
mov
cmp
clc
push
sub
cmp
mov
lea
mov
aaa
jmp
gs
jp
sub
ja
aas
pushf
ljmp
ret
mov
inc
outsb
lret
xchg
out
lcall
or
jge
add
and
pop
inc
ret
adc
mov
add
call
int3
mov
ret
imul
aas
outsl
add
ljmp
sbb
mov
movsl
outsb
lods
imul
mov
mov
stos
mov
inc
pop
clc
or
sbb
pop
adc
xlat
cmc
inc
sbb
mov
pop
xorb
push
jl
dec
test
imul
mov
xchg
ljmp
cs
jne
jb
mov
sub
scas
test
lods
mov
psrlw
jmp
data16
roll
addr16
arpl
or
scas
sbb
jl
push
sbb
int3
sbb
adc
push
sbb
outsb
inc
icebp
loope
mov
in
jl
jo
mov
push
sub
fisubrs
and
sub
inc
or
sub
adc
pusha
jo
pushl
dec
xchg
sbb
jle
test
insl
mov
mov
call
mov
jmp
arpl
or
add
cmp
icebp
and
sub
pop
in
shl
test
icebp
push
jl
lods
in
stc
sub
pop
dec
pop
add
mov
repz
popa
outsl
xchg
mov
in
sahf
jl
inc
fiaddl
mov
cld
pusha
dec
sbb
lret
sub
out
mov
lcall
out
add
jb
mov
loopne
mov
into
dec
sbb
xor
xor
jg
mov
mov
std
cmp
out
inc
cli
nop
fdivs
sbb
ror
call
hlt
clc
dec
and
call
aam
imul
mov
pushaw
shll
dec
xor
or
rorl
mov
push
xor
xor
sub
test
cmc
loope
adc
xchg
lcall
adc
xchg
jg
jl
pop
inc
xchg
scas
in
loop
mov
sbb
sub
hlt
out
clc
add
adc
das
push
loopne
repnz
insl
cmp
ljmp
add
or
aaa
rcll
jg
push
movsl
cld
outsb
loopne
les
repnz
or
addr16
cmp
sub
hlt
mov
in
in
outsl
clc
incl
ljmp
mov
rcll
push
inc
adc
pop
jo
push
mov
test
rcl
popa
rorb
sbbb
ljmp
push
inc
imul
fnstsw
push
cwtl
pop
inc
movsb
insb
mov
lcall
jbe
iret
ljmp
and
inc
push
stc
lds
xorl
fbstp
in
jns
xor
xor
mov
add
mov
push
cmp
scas
ljmp
mov
cmpsl
mov
push
jne
mov
lea
pop
jb
negl
dec
es
mov
push
ss
mov
sub
adc
sbb
dec
mov
push
sub
sub
mov
pop
jmp
xor
xlat
sub
lret
jb
cmp
sub
test
cld
push
mov
mov
js
aad
jae
push
ljmp
out
fmull
loop
stos
cli
pop
sub
hlt
push
ficoms
mov
dec
and
gs
popf
das
sar
je
sbb
in
lock
jae
xchg
pop
int
mov
mov
es
call
std
incl
inc
js
gs
pop
cmpsl
or
mov
lods
test
pop
cmp
stos
lcall
mov
cmp
xchg
pop
lret
dec
sti
pop
dec
test
mov
mov
test
int3
stos
repnz
mov
dec
insb
and
xchg
pop
sti
jo
dec
xor
mov
jae
pop
pop
pusha
push
aad
cmpsb
fmull
mov
jp
cmc
lcall
push
and
xor
lods
push
mov
inc
adc
arpl
inc
es
dec
loopne
jecxz
pop
and
cli
and
sbbb
in
or
rclb
shr
xor
lcall
push
call
test
test
push
dec
cmp
mov
dec
jecxz
xchg
lcall
dec
lea
int
xchg
pop
sub
or
loopne
lcall
xor
iret
adc
xchg
adc
repnz
int3
xor
and
mov
orb
dec
xchg
mov
mov
mov
fiadds
sub
jnp
fdivr
ljmp
xchg
add
ja,pn
clc
mov
or
daa
dec
mov
jmp
jmp
or
and
xor
mov
pop
enter
rcrb
mov
out
push
je
hlt
pop
icebp
call
fcompl
or
jp
adc
fwait
movsl
enter
cwtl
jns
push
pop
and
pushl
cld
inc
sbb
xchg
jno
dec
inc
test
jle
mov
jmp
js
and
decl
loop
push
add
adc
movsl
mov
adc
pop
dec
adcb
out
add
xor
and
cmp
mov
inc
and
call
jecxz
push
rcl
pop
divl
inc
sub
and
fisttpll
xchg
xchg
inc
adc
lcall
cmpsl
and
stc
or
jmp
jg
lock
out
add
xchg
test
pop
hlt
repnz
mov
mov
cmp
jb
lds
ja
mov
xlat
cmc
clc
call
cmp
cmp
push
xchg
loope
insb
out
push
mov
push
mov
enter
inc
adc
decl
pop
jle
cld
std
lcall
and
mov
push
jge
enter
jne
pop
call
daa
xor
dec
iret
icebp
out
pop
push
movsl
std
cmp
pop
stos
ret
dec
cs
or
mov
mov
cmpsb
rorl
push
ds
and
fxch
adc
mov
mov
dec
mov
cmp
ljmp
and
and
sub
xchg
push
test
jp
fisttpl
negb
shrb
outsb
decl
jmp
fcomps
fsts
inc
sbb
daa
push
fisttpll
mov
push
lock
inc
das
in
sub
or
call
jle
fsubrl
mov
add
rorl
stos
push
push
jp
lcall
push
cmp
repz
adc
adc
xchg
and
push
dec
and
das
push
xor
ljmp
andl
inc
mov
xor
mov
incl
cld
sub
movsl
jae
xlat
mov
or
pop
add
xchg
push
cli
or
mov
int3
cltd
and
mov
shll
ficompl
sbbl
outsb
or
in
out
pop
adc
push
shl
std
frstor
dec
mov
jecxz
loopne
pushl
gs
jno
xor
pop
int3
popa
inc
lret
repz
push
les
pop
lret
icebp
dec
loope
mov
leave
sub
shrb
pop
decl
popf
dec
icebp
mov
lods
or
inc
jb
ljmp
loop
sbb
sbb
shlb
cmpsl
mov
xlat
ret
adc
add
testb
jg
ljmp
int3
sbb
ficompl
and
push
hlt
dec
imul
jl
mov
xor
lods
dec
mov
inc
xchg
cmp
dec
adc
or
mov
pop
imul
pushl
repnz
xor
mov
xor
test
stos
loopne
incl
xor
adc
ds
fyl2xp1
cwtl
pop
aad
inc
and
mov
popa
orl
lds
int
fwait
lahf
cmp
aas
inc
pushl
lods
loop
popf
add
fndisi(8087
push
and
out
mov
pop
mov
jo
addr16
ljmp
mov
cmp
aas
loop
jp
push
fdivp
stos
dec
fdivl
aaa
pushf
icebp
pop
cmpsl
add
pop
push
push
dec
or
xlat
or
pop
sub
fldenv
adc
das
xchg
fadds
cmp
dec
add
inc
sbbl
add
sbb
incl
fistpl
repz
repz
fwait
stc
add
xorl
dec
repnz
xchg
in
push
xchg
fs
dec
mov
ja
or
and
xor
or
mov
push
dec
int
jl
push
cmpsl
loope
out
xchg
mov
xor
aaa
in
mov
xor
rolb
jb
mov
cmp
test
fstpl
lods
sarb
pop
mov
fwait
arpl
insb
imul
jg
call
push
jnp
cmc
or
sub
and
xchg
lcall
inc
dec
adc
mov
mov
pop
ret
sarl
push
enter
pushf
test
xchg
and
xor
hlt
fidivl
sub
or
xchg
sar
lcall
push
std
and
scas
xor
out
push
mov
imulb
sub
or
call
or
add
pushl
mov
mov
negb
cmp
jo
cmp
and
pop
mov
add
cmp
ret
aaa
pop
push
push
mov
incl
pushf
rol
jmp
sub
cltd
cmpsb
pop
icebp
imul
mov
mov
mov
sub
jne
mov
xchg
cli
lret
xchg
xor
pop
aas
push
mov
aas
stos
mov
cmp
cmc
jmp
test
addr16
xor
pop
fdivp
sub
push
add
mov
incl
push
cltd
sbb
push
pusha
xchg
into
ds
xor
cmp
and
and
jns
add
dec
aad
sbb
fs
cmp
mov
add
push
xchg
movsl
js
mov
adcb
roll
loopne
pop
jb
flds
test
or
inc
push
jmp
outsb
push
push
aad
in
adc
decl
push
inc
mov
repz
sub
cmp
pop
call
mov
adc
fistl
out
je
cld
call
lods
xchg
mov
scas
pop
sub
and
jae
mov
orl
jg
loopne
jns
xor
shrl
ror
pop
cmp
ljmp
xchg
stos
ds
icebp
test
or
xor
shrb
inc
decl
cli
in
xchg
adc
popf
push
insb
mov
mov
sbb
cmp
xchg
cs
sub
mov
fstl
int3
and
cmc
pusha
dec
into
aad
push
cld
idiv
outsl
sbb
mov
jo
push
xor
into
push
and
fiaddl
in
add
mov
xor
mov
shll
mov
adc
and
sbb
in
loope
popf
push
outsb
ljmp
jg
dec
sub
popa
jae
fs
cmp
lea
inc
jp
lock
cmp
in
pop
ljmp
pop
int
aad
popf
xchg
outsb
mov
cmovbe
in
ljmp
and
push
pop
gs
repz
cmp
ds
cmp
in
jns
push
pop
test
jecxz
fcomip
or
sub
imul
mov
fnstenv
filds
movsl
jo
pop
add
sbb
mov
xchg
jmp
and
sti
mov
repz
xchg
cwtl
and
inc
xlat
adc
fistps
out
mov
cmpsb
jbe
push
lods
inc
jmp
dec
inc
xchg
scas
pusha
aas
inc
sahf
mov
fcomps
lret
or
inc
sbb
hlt
mov
je
sub
jmp
gs
incl
cld
add
jno
cmp
inc
sbb
pop
xchg
inc
xchg
or
xchg
lods
dec
in
sar
test
dec
xor
add
xor
inc
ljmp
lods
jg
iret
inc
arpl
jecxz
jmp
xchg
or
inc
scas
adc
lock
dec
test
jbe
pushl
xchg
xchg
out
adc
bnd
dec
test
arpl
bound
call
pop
sub
nop
aad
outsb
ret
mov
push
inc
shrb
push
dec
iret
fadds
xchg
cmp
mov
cmpsl
std
push
inc
call
mov
cmp
mov
push
incl
pop
loope
and
pop
xlat
in
lret
mov
sbb
stc
stos
sbb
lcall
mov
pushf
jp
adc
mov
aas
mov
lods
xor
mov
adc
mov
ljmp
sub
arpl
xor
mov
xchg
add
ret
push
cs
jmp
aad
xor
pop
addr16
divb
sbb
fldcw
int
pop
mov
lock
incl
into
addr16
xchg
push
push
out
outsb
out
mov
mov
inc
stc
push
mov
pop
pop
dec
jecxz
mov
xlat
jmp
test
sbb
mov
in
jl
std
inc
int3
jb
mov
enter
fsubrl
sbb
jmp
mov
cli
mov
mov
jg
ret
aam
adc
sbb
and
jmp
dec
mov
inc
xchg
es
out
mov
adc
enter
pop
repnz
mov
lcall
int
je
mov
sarb
push
fucom
cmc
xchg
mov
js
pop
or
dec
mov
push
fcoms
sti
pop
xchg
cmpl
sar
dec
cs
ljmp
clc
sbb
cld
rcl
add
loop
dec
clc
scas
mov
or
adc
inc
scas
pop
loop
xor
rcr
mov
imul
retw
pop
das
and
jmp
pop
adc
icebp
in
out
mov
mov
jp
mov
std
lods
sbb
out
test
call
lcall
add
sti
dec
sub
rorb
jb
jle
mov
movsb
rorl
repz
outsl
test
movsb
jo
test
loopne
lret
fnstenv
test
adc
fnstsw
add
add
pop
test
xor
inc
ret
loop
mov
fwait
xor
dec
mov
pop
adc
mul
imul
push
adcb
call
sbb
cmp
sti
pop
push
addb
movsb
cmp
fstps
outsb
push
lcallw
stos
stc
ljmp
incl
stc
cmc
popa
leave
fsincos
push
adc
std
jl
inc
mov
out
lods
pushf
dec
mov
jb
xlat
inc
and
xor
lret
pop
push
inc
fwait
idiv
fbstp
divl
les
push
ljmp
or
inc
mov
jmp
mov
adc
leave
dec
push
into
fs
sbb
pop
push
mov
xor
sub
pushl
insl
jmp
in
test
or
mov
clc
leave
shr
jl
in
jmp
and
insl
lods
dec
inc
xchg
and
dec
add
mov
scas
and
filds
xchg
cli
adc
or
xchg
dec
inc
aam
xchg
cwtl
out
cli
fstl
ljmp
call
jmp
jae
cld
mov
insb
je
xchg
es
aad
arpl
in
ljmp
lods
or
push
icebp
sub
sub
lock
xor
scas
fnstenv
and
movsb
xchg
adc
jno
xor
leave
testl
imul
mov
je
xor
dec
jae
incl
test
xchg
fmuls
outsl
mov
pop
mov
pop
jbe
mov
test
es
jge
frstor
sub
insb
cmp
jno
push
push
inc
loop
or
in
mov
jmp
xor
xchg
out
cmp
push
cmpsl
lods
jae
push
xor
cmp
dec
mov
incl
xor
sbb
push
xchg
jb
sub
ss
sub
cmp
call
jno
jo
and
ss
xchg
arpl
jbe
mov
fldt
mov
add
out
dec
push
push
and
bound
fcomps
xchg
adc
add
incl
jne
and
int3
fmull
fildl
xchg
mov
inc
lret
imul
sub
jl
rol
adc
jmp
out
sbbb
mov
out
repnz
les
dec
pop
decl
aas
test
rcrl
mov
sub
sti
jb
mov
mov
lcall
pop
push
or
insl
mul
cli
xchg
out
lods
mov
lcall
cmpsb
mov
lea
ja
add
mov
jno
loopne
popa
xlat
xchg
scas
jmp
movsl
xor
mov
lock
mov
mov
sub
sbb
adc
lcall
pop
dec
test
pop
outsl
sub
xor
nop
mov
push
xor
fstpt
clc
ljmp
cmp
jnp
insb
xor
inc
test
jne
or
pop
movsb
in
lret
mov
pop
std
out
les
lret
or
jl
jp
inc
pop
ret
mov
stos
mov
cmp
sti
sub
out
mov
and
jmp
cmp
or
xchg
jle
sbb
or
push
xchg
cmc
mov
enter
jg
movsb
jmp
das
pop
jecxz,pt
data16
mov
jmp
lcall
mov
pop
mov
sbb
xchg
jne
xchg
movb
decb
sbb
jmp
aam
pop
inc
jle
fidivrs
xor
mov
jnp
inc
jns
scas
adc
xchg
fisubrs
call
dec
adc
mov
shl
in
push
xlat
push
push
ja
andb
test
fadds
xchg
add
call
and
pop
xchg
test
jmp
jle
ret
jg
mov
and
aaa
lea
adc
ret
ljmp
pop
sbb
loope
ret
cmp
scas
or
imul
sub
in
pushl
mov
adc
cmp
icebp
dec
mov
cmpsb
test
dec
addl
ljmp
sar
out
adc
imul
xchg
or
imul
lcall
lret
aam
xchg
icebp
stos
ljmp
jbe
icebp
jmp
movsb
sahf
mov
jge
stc
insl
dec
jg
das
leave
jns
mov
pop
dec
adc
sti
xlat
repz
dec
xchg
dec
sbbl
xor
lahf
rcll
or
mov
cmpsb
test
ret
faddl
push
dec
insl
mov
inc
jg
movsb
fdivrl
pop
ja
jno
je
cld
dec
repnz
lcall
inc
es
sub
jp
mov
adc
scas
aas
imul
cs
aaa
pop
mov
ds
ja
mov
cmpsb
xor
out
add
mov
repz
stc
adc
push
push
pop
in
sub
pop
or
jmp
mov
jnp
and
pushl
mov
adc
ror
addl
cmpxchg
filds
ss
nop
jecxz
push
adc
pushl
iret
js
cmp
push
pop
mov
pop
jmp
cmp
loopne
int3
call
pop
pop
sbb
outsl
insl
xor
mov
pop
pushf
inc
movsl
and
decl
mov
xor
lds
cmp
jg
call
decl
mov
sub
call
pop
sbb
sbb
jae
idiv
mov
mov
pushl
lds
add
or
aas
loop
in
mov
jge
jmp
repz
push
jnp
jmp
add
or
mov
in
nop
cltd
cltd
lock
pop
in
imul
incl
loop
std
cld
xor
scas
ja
and
stos
mov
or
pop
test
das
dec
or
fwait
fs
ljmp
pushf
out
add
sub
push
mov
sbb
cmp
push
sub
pop
cmp
sbb
mov
xlat
cltd
imul
lret
cltd
imul
mov
lds
xchg
fwait
xor
mov
jecxz
sbb
test
idiv
sbb
jbe
and
fstpl
insb
out
sub
addr16
fcomip
sbb
mov
int3
sub
rolb
adc
cmp
sbb
jmp
cmpsb
daa
push
arpl
adc
out
or
sub
std
cmp
decl
lahf
inc
mov
shr
xchg
inc
push
subb
lret
stc
imul
lcall
fst
mov
sahf
test
xor
mov
or
daa
mov
or
lcall
or
stos
dec
inc
xchg
lea
aas
nop
sub
pop
dec
ficoms
rcr
addr16
jmp
leave
pop
jg
lahf
xchg
das
and
outsl
int3
fwait
aas
jle
mulb
shl
lret
jmp
rol
cmp
cld
adc
fcomi
pop
rorb
ftst
lret
push
mov
decl
xchg
xchg
notb
mov
xchg
imul
xor
push
sub
stc
mov
movsl
incl
add
xchg
stc
inc
mov
xorb
jecxz
sbb
test
mov
ljmp
lretw
movb
repnz
inc
and
aas
jmp
push
mov
loopne
leave
cmp
add
lcall
cltd
shl
pop
mov
lahf
outsb
jl
jbe,pt
jmp
repz
adc
pop
mov
mov
add
xor
mov
cmp
push
xor
pop
pop
dec
repz
lcall
adc
dec
cmpb
xchg
sub
xchg
fsubrl
lcall
call
mov
leave
ret
pop
mov
test
js
hlt
and
cmp
aam
mov
in
dec
clc
into
stc
shlb
add
in
jl
pop
pop
enter
sub
pusha
pop
aad
sbb
sbbl
fnstenv
scas
pop
dec
rcr
loop
and
sub
incl
sub
out
pop
sarl
arpl
and
ljmp
jmp
push
outsl
mov
adc
and
outsl
mov
cld
popa
fbstp
pop
xchg
rorb
outsl
fdivrp
ljmp
fdivrl
test
ret
jb
mov
icebp
outsl
hlt
add
sahf
rclb
inc
das
lret
mov
out
sar
call
mov
xchg
testl
mov
inc
cwtl
frstor
mov
inc
sti
fwait
imul
mov
mov
in
cmpsb
ja
mov
pop
ss
aad
rol
push
incl
testl
jno
ljmp
inc
movsl
sbb
ja
std
cli
ds
push
fstl
imul
fistpll
sti
andb
enter
or
sub
rcrb
rcl
inc
aad
dec
scas
stc
jbe
nop
and
lods
test
jno
pop
cmc
mov
jmp
in
ja
repnz
cmc
mov
mov
addb
lcall
lret
std
mov
aas
mov
inc
pop
xchg
xor
shrb
aad
imul
inc
lcall
test
cld
arpl
mov
push
lock
jl
mov
sarl
ret
ljmp
negb
pusha
adc
or
mov
jg
ja
mov
pop
jecxz
fiadds
mov
ds
cmp
pop
mov
rep
mov
add
ds
mov
jge
lahf
or
push
clc
dec
pop
jmp
or
mov
popa
incb
mov
call
loope
adc
fidivrs
xchg
lret
mov
fadd
xlat
dec
adc
fwait
jl
lock
add
add
out
shl
rorl
leave
test
xchg
fmuls
dec
outsl
lds
mov
mov
jge
push
daa
pop
fldt
es
enter
out
adc
lea
stos
out
jae
xchg
jb
enter
inc
add
pop
adc
cld
cmp
cmp
sarw
ljmp
fwait
and
pop
or
xlat
mov
jmp
out
scas
add
jge
push
xchg
adc
jg
jp
iret
cmc
mov
minps
inc
push
inc
pop
push
test
jl
aad
pushl
inc
imul
test
sub
mov
movb
pushl
jg
pop
shl
add
push
or
sbb
call
dec
mov
scas
adc
lahf
add
sar
pop
sub
jmp
decl
pop
lods
mov
imul
gs
or
movsb
popf
xlat
xchg
andl
jne
jmp
pop
lret
xor
or
pop
fucomi
cmc
cli
cwtl
lahf
pop
mov
push
xchg
cmc
xor
mov
imul
xor
sub
shrl
xchg
mov
xlat
pop
cmp
inc
inc
adc
aad
xchg
push
inc
lods
ljmpw
cmpsb
sub
movsl
xchg
imul
add
jbe
sbb
clc
popf
and
div
push
incl
and
fwait
icebp
add
mov
push
add
inc
pop
fs
cli
incl
sbb
aad
xchg
pop
dec
cli
pop
mov
cli
or
dec
lods
ljmp
pop
cwtl
insl
sub
out
stc
out
outsb
or
shl
or
xor
mov
ljmp
and
mov
push
jmp
cmpsb
pop
movsb
je
rolb
ljmp
mov
inc
call
add
cmpsb
sbbb
ret
stc
pushf
xchg
mov
xor
xchg
or
lcall
pushl
cmp
pop
lcall
xchg
xor
mov
inc
inc
add
loopne
invlpg
sbb
loope
xor
shlb
aas
dec
push
jo
pop
cmc
jg
xor
mov
mov
call
dec
sarl
shll
testb
or
pop
movsl
sbb
fcomip
xchg
in
roll
js
and
push
in
sub
mov
jg
shlb
pop
int
outsb
ror
popf
sar
lcall
aaa
dec
clc
inc
pushf
sub
sbb
je
mov
sbb
mov
gs
incl
sbb
mov
shlb
mov
pusha
fldenv
dec
pop
sub
push
push
fdivrp
mov
call
jmp
mov
fsubrl
cld
push
repz
jge
pushf
push
xor
repz
sti
repnz
dec
sbb
gs
inc
es
xlat
enter
jg
add
lret
adc
test
es
xchg
mov
call
xchg
jl
test
fwait
dec
sbb
movsb
add
arpl
sbb
mov
lcall
gs
cmp
dec
jbe
loopne
mov
insb
ret
ss
scas
cs
mov
push
pop
les
mov
mov
test
jecxz
loop
out
xchg
incl
push
stos
jnp
inc
fs
xor
adc
lcall
xor
jae
mov
icebp
mov
jle
shlb
sub
lret
in
jge
negl
jne
or
out
repz
sub
out
xchg
test
incl
std
lds
popf
jl
sub
enter
adc
movsl
adc
sar
jg
sti
fnstsw
aaa
and
push
adc
xchg
movsb
xor
add
je
jg
insl
pop
jmp
shlb
add
dec
push
xor
add
adc
mov
xor
incl
jbe
stc
loop
js
or
scas
jo
mov
jge
orb
lea
xchg
in
aas
dec
mov
mov
pushf
dec
or
or
push
fiaddl
leave
xchg
lcall
ds
divb
xor
jmp
sub
jo
mov
ljmp
decl
sbb
cwtl
jp
idivb
out
xor
cmp
xor
adc
xchg
cmp
cmp
adc
ljmp
inc
xchg
sub
jbe
cmp
dec
push
pusha
lret
sub
scas
or
cmp
cld
decl
jnp
fiaddl
cmp
jg
negl
xchg
xlat
fsubr
xchg
push
pop
pusha
dec
mov
and
inc
test
daa
jle
ret
pushl
sbb
or
xor
or
push
out
mov
jg
int3
inc
pop
int3
repz
push
xor
mov
push
and
ljmp
or
cmp
arpl
pop
cwtl
arpl
loope
in
hlt
shll
jmp
push
push
insl
inc
mov
adc
ljmp
jp
sar
xlat
cmpsl
xchg
rcrb
lret
loop
negb
mov
incb
sub
jmp
mov
in
test
sti
mov
sar
sbb
cmp
mov
aaa
lcall
sub
lock
fimull
xchg
push
or
or
or
call
scas
pop
add
out
dec
scas
sti
int3
call
xor
cmpsl
mov
pop
sbb
jle
push
in
loope
cs
decl
cld
mov
sub
cwtl
mov
push
jae
ljmp
or
movntq
out
out
fwait
and
addb
into
sub
xchg
paddd
and
ret
and
inc
adc
mov
stc
xor
sub
outsl
push
leave
add
push
repnz
rorb
inc
mov
test
jp
jae
sbbb
sbb
fcoml
mov
add
decl
out
int3
jge
insb
pop
ljmp
mov
mov
aad
loopne
lock
lcall
add
add
mov
push
jmp
call
sbb
idivb
or
inc
mov
pushf
outsb
movsb
aam
leave
js
cld
pusha
sbb
nop
hlt
sub
call
std
pop
popa
cmp
aaa
push
icebp
cmc
repnz
mov
stc
popf
cwtl
sti
jle
fwait
fmull
popf
bnd
push
mov
in
shll
adc
cmp
incl
pop
mov
jo
icebp
and
lret
scas
jno
sub
jecxz
push
ljmp
mov
in
push
in
imul
dec
insl
lds
mov
out
stos
sahf
stc
jg
jmp
fmull
testl
cmpsl
imul
jg
xchg
sbb
mov
xchg
pop
ret
sbb
adc
out
xchg
out
out
icebp
jnp
cli
mov
iret
sti
inc
mov
xor
addl
jecxz
cmp
ss
lcall
mov
in
lahf
and
neg
dec
enter
outsb
loope
xor
inc
mov
in
call
fisubrs
in
incb
and
lods
pop
sbb
inc
push
sub
push
xchg
add
inc
ss
stos
inc
roll
mov
or
loopne
movsl
xchg
mov
sbb
sub
lcall
das
andb
lahf
fimuls
or
jnp
dec
fisubrs
out
mov
out
aad
jmp
inc
push
negb
pop
pusha
xor
sbb
mov
cwtl
mov
out
into
decl
call
mov
lds
push
adc
mov
int
inc
out
jb
pop
scas
pop
jnp
loop
mov
aad
inc
notl
andl
pop
mov
adc
decl
adc
adcl
cltd
pop
and
hlt
mov
mov
or
enter
jnp
leave
shll
push
mov
pop
je
out
pop
jmp
call
lods
pop
jmp
mov
jns
out
arpl
lods
add
xchg
pushf
push
xchg
aad
mul
add
aas
xchg
sub
lcall
and
mov
xchg
scas
bound
sub
fstps
aas
push
cmpsl
cmp
les
or
pushl
push
xor
xchg
pop
mov
fnstenv
sub
pop
lcall
sahf
fidivl
pop
cmp
push
cli
sub
mov
inc
in
inc
incl
mov
mov
aas
dec
xchg
lret
mov
fcmovnbe
outsl
ljmp
popf
fsubl
aad
pushl
cmpl
cwtl
or
pop
stos
lea
jmp
popl
stos
aaa
or
lcall
and
adc
rorb
xor
mov
adc
jge
sti
lcall
push
jbe
mov
hlt
dec
jnp
adc
je
cmp
sbb
pop
or
and
call
xchg
hlt
cli
loopne
push
mov
jnp
adcb
pop
test
adc
or
mov
and
push
mov
push
call
xchg
adc
out
hlt
roll
or
push
dec
push
into
xchg
or
jmp
vprotw
outsl
loopne
loopne
aam
pusha
mov
js
adc
ret
mov
jbe
push
mov
xor
bound
cld
cmpb
out
add
cmp
mov
jmp
jae
shr
adc
loope
inc
xor
mov
cwtl
negl
cmp
leave
jmp
adc
dec
mov
lock
std
imul
mov
jb
sbb
jle
std
or
mov
adcl
push
or
mov
xor
jg
je
lods
dec
pop
push
sbb
jmp
jge
adc
dec
je
shrl
rolb
mov
bswap
les
cltd
xchg
ljmp
push
shll
jg
mov
pop
lcall
jbe
into
std
movsb
outsb
test
ljmp
mov
xchg
mov
cmc
or
in
and
add
or
pop
push
lcall
adc
pop
jns
mov
adc
cltd
lods
nop
sbb
xchg
movsl
test
jmp
xchg
inc
push
and
test
add
mov
xor
pusha
or
mov
fcompl
mov
xor
inc
pushf
xchg
loopne
popf
pop
and
lcall
hlt
cmp
mov
or
add
in
add
push
cmc
xlat
outsb
jle
inc
cmpsb
je
lcall
mov
aad
xchg
dec
pop
addr16
jno
mov
mov
mov
nop
xlat
jmp
incl
cltd
les
pop
push
int3
or
mov
out
cmp
xchg
lcall
mov
aam
das
xor
push
pop
mov
mov
cmc
fildll
loopne
mov
loop
inc
xchg
xchg
es
loopne
mov
int
lret
xchg
and
cmp
loope
hlt
aad
icebp
inc
push
add
aas
cmp
pop
int
loop
cmp
mov
mov
in
cli
mov
dec
xor
lock
push
and
ljmp
into
cmp
pusha
js
loopne
xchg
xor
aad
push
and
shll
decl
lahf
mov
daa
push
fnstcw
jns
dec
cwtl
ljmp
jmp
inc
push
pop
push
pop
pop
popa
aaa
or
jns
push
imul
mov
jns
pop
sub
aam
fstpt
dec
or
sub
in
js
shr
in
cmp
je
inc
lcall
decb
test
add
mov
mov
in
adcl
jae
in
std
outsl
sub
jle
dec
ds
repz
icebp
data16
aam
xchg
repz
ljmp
inc
decb
xchg
add
popl
hlt
inc
add
es
fstps
enter
out
pushl
pop
ret
jo
push
mov
mov
fisttpll
or
jecxz
push
iret
adc
movsl
jmp
jae
mov
push
addr16
popa
dec
xchg
pop
lods
add
add
xchg
jmp
inc
repz
les
xor
in
and
mov
sahf
xchg
movsb
jmp
loope
xchg
imul
sti
popa
lods
fsubrs
jg
in
lds
jae
movsl
sbb
mov
idiv
aas
inc
dec
add
mov
popf
in
dec
dec
fdivrp
pop
js
pop
scas
xor
mov
sbb
cmp
decl
jb
jmp
jo
and
jae
insl
and
inc
ljmp
jae
test
addb
stc
sbb
adc
dec
int3
xor
fisttps
loope
jne
int3
mov
cs
shrl
jg
in
ret
ret
clc
je
or
imul
sub
repnz
aad
push
fsts
hlt
call
xchg
xchg
jno
outsl
or
sbb
scas
sbb
add
pop
sbb
cmp
jnp
xchg
cmp
sub
and
or
adc
icebp
ja
rcrl
cld
test
inc
fstps
xchg
inc
add
fidivs
mov
jmp
call
jo
pop
cmpsb
pusha
iret
test
sub
jbe
add
xor
or
add
mov
mov
dec
push
das
les
adc
mov
adc
dec
jo
fnsave
outsl
ljmp
dec
cli
es
inc
out
pop
ret
aas
push
fisubrl
shl
mov
ja
jg
decl
imul
fisubl
scas
adc
push
dec
push
push
mov
dec
sub
je
mov
pusha
test
test
shll
inc
and
adc
arpl
out
incl
or
inc
jp
loop
inc
jg
jle
lock
ret
sbb
add
mov
jbe
aad
lcall
loope
lret
cmp
pcmpeqd
mov
rcl
in
int
jecxz
mov
inc
int3
call
dec
addb
outsb
cmp
xchg
enter
roll
scas
arpl
call
sub
fimuls
and
ficoml
lds
push
xchg
lret
adcl
sub
dec
add
sbb
fwait
pop
in
in
or
xchg
jbe
push
xchg
xor
mov
mov
mov
mov
adc
and
adc
inc
xchg
add
jg
dec
sub
mov
push
call
in
adc
cmpsb
pop
cmp
xor
scas
jg
in
test
mov
xlat
push
or
or
jle
mov
mov
scas
outsl
pushl
test
dec
jnp,pt
stc
dec
aas
stos
mov
in
xchg
add
jo
call
mov
add
xchg
addr16
mov
push
mov
push
daa
mov
xchg
xchg
ljmp
inc
pop
jae
and
sub
ss
lahf
add
out
mov
push
js
loop
ds
jnp
ss
mov
xor
or
xchg
pop
mov
inc
inc
aam
cmp
ljmp
lods
ss
fsts
cs
clc
fwait
or
mov
cli
in
xor
jb
push
rolb
rcll
mov
adc
mov
cmp
mov
sub
decl
gs
pop
push
inc
and
sbbl
or
loope
xchg
cmc
inc
mov
add
adc
ljmp
sti
dec
lods
popa
hlt
jae
sarb
std
call
mov
inc
insl
clc
inc
shr
sbb
je
inc
adc
aad
add
pop
repz
mov
sarb
in
aam
jmp
sub
pop
pop
stc
push
std
scas
mov
add
xchg
dec
outsb
xor
inc
pushf
into
sahf
into
in
push
out
call
pop
dec
pop
sbb
cmp
push
push
decb
out
sahf
adc
out
xorb
mov
mov
stos
jge
call
test
out
xchg
jne
sbb
outsl
mov
rolb
jmp
mov
scas
clc
cwtl
push
es
mov
addr16
sub
shrl
push
lret
lock
arpl
sub
xor
enter
jmp
inc
adc
aad
sti
lds
xorl
jnp
rorb
outsl
pushl
int3
dec
push
mov
xchg
stos
push
push
ret
lcall
lds
lock
jecxz
inc
aad
insb
jno
repnz
or
lcall
xlat
push
fwait
inc
add
inc
mov
xor
push
and
call
push
jb
xchg
lods
out
xchg
mov
scas
pop
cmpsb
push
push
mov
mov
sbbb
mov
xlat
mov
ror
push
rolb
test
and
mov
out
pop
jbe
ss
mov
inc
ljmp
and
pushl
ds
xchg
lcall
and
rolb
leave
test
mov
gs
call
push
xchg
dec
aas
push
push
insl
lock
bound
sti
add
or
fs
test
sbb
sti
stos
mov
test
mul
pop
cwtl
xchg
mov
jbe
fimuls
cltd
aas
adc
loope
sub
mov
test
cmp
mov
inc
shlb
add
shlb
pop
inc
test
add
pop
fs
or
js
mov
roll
lcall
sub
push
js
jle
imul
bound
and
pop
ss
lcall
sbb
cmpsl
movsl
int3
cmpsl
adc
and
cwtl
jb
pop
and
mov
and
addr16
ljmp
imul
add
pushf
jbe
sub
in
add
out
cli
nop
stos
sub
pop
das
pop
sub
xchg
aad
inc
pop
bound
lret
daa
push
rclb
ljmp
dec
adc
loop
imul
jp
fstpt
stc
adc
jmp
shr
push
std
imul
cmpsb
sbb
pusha
pusha
es
xlat
push
or
or
ficoms
or
dec
popa
sub
cmpsb
xchg
mov
lcall
inc
aam
cmpb
mov
jge
jmp
gs
orl
lcall
lock
or
cmp
cltd
push
test
pop
lods
pop
movsb
sti
xchg
mov
or
push
jmp
incl
sub
dec
pop
adc
int3
mov
pop
cmp
push
sub
gs
pop
inc
lcall
sbb
dec
sbb
popa
jg
call
popa
sbb
add
orb
add
iret
insb
shlb
decl
xchg
sbb
dec
push
lret
js
mov
rorb
fsub
ljmp
jmp
lcall
jo
pop
cmp
pop
mov
dec
push
pop
dec
add
pushl
jge
or
cli
dec
push
cli
sub
adc
inc
dec
test
call
fcmove
mov
call
or
scas
outsb
jg
or
cmp
sahf
call
jnp
ja
jmp
lahf
cmp
scas
inc
ds
xor
xchg
push
in
inc
arpl
aas
popf
fdivrl
lcall
or
scas
pop
sbb
sbb
fstps
test
jg
jg
lods
jne
mov
je
mov
cmc
sbb
mov
xor
mov
lcall
incl
or
je
inc
in
pop
cs
test
ljmp
mov
and
shl
xor
push
jp
lcall
mov
dec
ret
push
ss
xor
out
shrl
lahf
or
pop
aad
pushl
dec
rorb
jno
cmp
or
sbb
jno
cwtl
loop
or
push
pushl
xchg
xor
leave
inc
cmp
push
mov
xor
ljmp
adc
jmp
frstor
test
incl
cld
inc
mov
inc
aas
push
leave
scas
jl
and
mov
xor
cmp
mov
cmp
into
mov
rcrl
lcall
repnz
adc
inc
hlt
xchg
pop
mov
inc
xlat
out
cli
jmp
inc
fldt
xchg
fwait
pop
rol
jb
repz
mov
jno,pt
shl
mov
testl
adc
add
pusha
insb
cmpsb
sar
aad
or
sti
into
mov
mov
pop
and
jmp
lock
ss
ljmp
movsb
in
ret
sarb
movsb
fisubrs
dec
cwtl
inc
sub
movsl
sbb
add
jno
outsl
cli
call
push
push
xor
leave
mov
pop
es
jns
push
hlt
cmp
mov
mov
addr16
aas
jecxz
and
push
jb
fdivrl
xor
pop
in
loop
jno
call
cmp
int3
jecxz
pop
das
leave
xchg
arpl
into
push
add
inc
jnp
cmp
insb
jbe
cmpsl
and
mov
mov
popa
cmpsl
ljmp
fs
jmp
in
stos
dec
stos
push
dec
scas
test
xorl
sbb
cs
mov
subb
dec
mov
in
scas
rclb
dec
mov
or
ljmp
jne
and
mov
aam
int
mov
shrl
daa
xor
and
lcall
push
in
test
sub
xchg
scas
mov
pushf
lahf
jmp
jmp
call
sbb
pop
repz
lcall
addl
xlat
mov
in
je
incl
ljmp
add
xor
mov
fadd
xchg
and
sub
stc
inc
inc
scas
jle
lcall
or
inc
fs
outsb
cmp
les
imul
jnp
push
sub
call
sti
inc
jns
jnp
movsb
sub
xchg
addr16
cld
adcl
inc
scas
fildll
sbb
cmc
repz
inc
adc
clc
pushl
mov
mov
popaw
pusha
shll
inc
adc
ret
or
add
push
cmp
pop
mov
call
les
sahf
je
test
shll
jle
movsb
and
rcll
xlat
mov
lcall
or
fistps
fists
dec
or
dec
lcall
es
adc
clc
sub
lcall
push
ss
mov
ja
aam
add
mov
fdivl
bound
notl
cltd
into
repz
fcomip
lcall
pop
addl
push
icebp
stc
add
and
dec
lcall
mov
inc
icebp
jnp
popa
xor
jo
movsb
loopne
mov
lahf
shlb
cmc
fcomip
pushl
test
mov
adc
add
ficomps
xchg
clc
pop
mov
ljmp
test
push
shrl
or
jg
xchg
push
sahf
cmpsb
std
pop
adc
pushl
xor
sbb
ss
jg
and
daa
mov
sub
mov
jg
mov
js
add
jne
fs
or
mov
dec
jnp
cmp
sub
in
call
inc
mov
mov
insb
adc
pop
test
out
push
jbe
in
push
call
pushf
dec
lods
cltd
mov
and
cltd
and
loope
xor
xor
lret
jbe
aas
fimull
hlt
sbb
dec
sbb
jge
pop
adc
push
push
jns
das
jbe
adc
out
xchg
dec
aam
sarl
insb
lods
test
notl
packsswb
mov
fsubp
stos
mov
insl
mov
jns
add
mov
xchg
out
xor
subb
mull
clc
and
arpl
add
mov
sub
mov
lods
in
xor
lock
pop
mov
jo
pop
xor
bound
cmp
mov
rclb
in
sti
rcll
cmp
rorl
or
sbb
mov
insb
ficoml
xor
cmp
jmp
int
jecxz
pop
pushf
stos
inc
mov
xchg
sbb
inc
push
fs
repz
sub
sbb
mov
mov
lods
shll
ret
fcoml
enter
add
popa
fdivr
mov
insb
xchg
out
mov
out
ret
sub
mov
clc
hlt
into
out
jne
xor
mov
cld
call
mov
cmp
shrb
or
cmp
dec
jg
pushf
ret
out
and
push
repz
cmp
fisubrs
daa
nop
ljmp
xchg
es
movsb
gs
jg
enter
mov
xchg
push
addb
push
and
push
cmpl
ljmp
loope
out
mov
std
mov
ja
out
insb
adc
xlat
jecxz
lods
sub
fiaddl
jg
scas
and
inc
ret
pushl
or
dec
fwait
jne
fxch
mov
pop
sbb
fldenv
stos
fwait
in
xor
jg
decl
push
sbb
iret
mov
sbb
jl
jmp
pushl
jae
xor
xchg
jg
sbb
mov
stc
leave
out
mov
hlt
jns
les
aaa
cld
jmp
xchg
sahf
std
jne
sub
bnd
enter
xor
jl
mov
call
negb
and
sahf
scas
into
test
cmp
or
push
lahf
and
lret
pushl
sub
inc
mov
cmp
jne
pusha
iret
sbb
xlat
js
dec
jmp
xor
cmp
stos
stc
mov
negb
ret
mov
adc
bound
mov
or
call
mov
mov
dec
xchg
imulb
push
xchg
call
xchg
xchg
pop
cltd
lods
mov
popf
or
mov
outsb
popa
pop
push
xor
decl
xchg
push
fisubrs
mov
dec
sbb
inc
iret
je
out
out
mov
aas
jg
push
ljmp
popa
jecxz
dec
arpl
daa
cmp
add
dec
mov
pop
or
mov
mov
mov
sbb
nop
lock
add
dec
loope
daa
mov
shll
cmp
decl
ds
daa
testl
fiadds
scas
idivl
push
sbb
mov
push
leave
pop
pop
out
test
subb
push
ja
bound
aam
repnz
pop
js
int3
pushf
fcomp
mov
mov
and
jp
mov
dec
fimull
pop
aas
xlat
dec
addr16
inc
loopne
mov
movsb
jle
imul
test
jmp
inc
adc
pop
or
add
cmp
adc
mov
lcall
imull
sarl
sub
outsl
subb
testb
or
out
call
sub
xor
push
int
adc
push
fs
lret
pop
ss
push
je
clc
or
incl
add
vpunpcklqdq
iret
sub
jg
mov
repz
and
mov
cmp
mov
push
cmpsl
mov
ljmp
lahf
js
je
mov
xlat
pop
loope
fwait
adc
push
lcall
adc
lcall
call
xchg
js
sub
notl
arpl
and
imul
mov
mov
cmp
les
std
lds
jo
push
pusha
loopne
jb
lret
popf
sub
cmp
mov
mov
pop
ret
int
pushf
inc
out
mov
pinsrw
loop
or
filds
fcompl
sub
mov
and
sbb
lret
lret
mov
cli
scas
clc
call
stos
lds
xorl
leave
ds
dec
int3
sub
ljmp
lahf
scas
or
rcrb
mov
or
xor
lret
stos
cmpsb
jmp
shlb
xchg
mov
mov
jae
outsl
inc
xchg
test
daa
jnp
xchg
xchg
jae
dec
std
popa
decl
movsw
movsl
mov
ds
sbb
add
popf
dec
nop
clc
xchg
jge
jmp
data16
lcall
adc
cmc
movsb
hlt
cmp
jle
jb
adc
inc
or
sar
call
pushf
push
in
cmp
mov
fidivl
cmp
jae
shrl
ja
ljmp
add
lds
fimull
add
cmp
push
and
arpl
idiv
jmp
inc
and
sub
and
stos
pop
mov
ss
sbb
aas
loope
jp
popl
pop
mov
hlt
push
sti
xor
mov
cmp
push
loope
cli
mov
xor
ror
cs
xorb
push
cmp
out
push
xlat
bound
lea
xor
jle
in
mov
in
pushl
cli
stc
adc
push
add
test
mov
mov
decl
adc
xchg
sahf
fldcw
stos
in
pop
jge
push
and
push
dec
dec
movsb
xchg
pop
mov
inc
xchg
pop
pop
divb
repnz
das
mov
adc
incl
push
ljmp
add
jnp
pusha
cmp
les
fwait
cmpsb
sbb
xor
scas
sub
push
or
push
and
aam
popf
lods
daa
and
daa
fdiv
pop
out
leave
lods
lods
inc
rorb
adc
jb
pushl
gs
je
in
cmp
aam
dec
int
dec
mov
loop
jae
repnz
jg
sub
push
cmp
xlat
cltd
or
push
pop
and
bound
lcall
jecxz
ret
mov
ja
or
sbb
xlat
ja
pushl
ret
jae
adc
scas
or
addl
push
stos
push
add
or
call
cld
dec
movsl
jbe
add
fistl
bound
jno
xor
in
or
pushl
or
add
pusha
sub
cmp
ret
xchg
lcall
sub
daa
sub
enter
pop
inc
and
add
call
mov
cmp
pop
popf
cltd
and
jmp
jo
adc
xor
push
adc
mov
or
adc
mov
test
or
jmp
adc
push
pop
pop
daa
inc
sub
sbb
mov
add
cwtl
mov
mov
lcall
orb
push
inc
xor
lock
mov
add
mov
ljmp
shl
xchg
xchg
cmp
loope
lods
cwtl
mov
dec
xor
in
adc
add
fistpll
push
aaa
mov
mov
fwait
adc
xchg
add
mov
mov
test
lcall
inc
xchg
push
les
lea
dec
imul
movsl
lret
ljmp
or
pop
jmp
gs
fcom
push
ficomps
adc
cmp
fstps
fwait
in
push
callw
jle
or
push
mov
mov
loope
cmp
sar
dec
leave
cmp
icebp
es
decl
cmpsb
scas
mov
adc
ret
jbe
cli
mov
je,pn
cmpsl
adc
sub
fmuls
xchg
pushw
pop
das
cltd
jbe
and
or
and
aas
and
js
push
and
sub
std
iret
imul
ret
imul
jge
sub
cmp
fbld
lcall
push
xchg
sub
int3
repnz
mov
mov
lea
jno
sub
fs
xor
xor
sarl
sub
or
fnstsw
sbbb
pop
cmp
or
dec
incl
out
sti
xchg
and
pop
push
sbb
fdivrs
stc
add
sbbb
push
xor
mov
call
hlt
ret
aad
stos
int
shll
imul
pushl
or
jns
cmpsl
pop
nop
add
push
jae
rorb
inc
pop
sub
mov
pushf
test
add
xchg
movsl
ftst
loop
clc
push
mov
push
push
add
mov
decl
sti
push
aaa
fyl2x
and
movsb
sbb
add
xchg
jmp
or
popl
and
pushl
jae
js
push
jmp
mov
nop
mov
pop
negl
pushl
stos
add
pop
inc
mov
xor
std
stos
xchg
scas
popf
add
rorl
or
push
js
xchg
push
fildl
mov
push
in
pop
stos
mov
sar
jb
add
or
push
inc
decl
lock
iret
lds
les
cltd
lods
push
sbb
inc
insb
lds
imul
or
stos
incl
fsubr
lods
fwait
xchg
divb
mov
sbb
push
cltd
or
push
out
adc
ljmp
test
mov
stos
iret
adc
xchg
xchg
adc
addr16
lcall
and
sub
pop
jbe
cmpsl
fcoms
and
inc
shlb
insl
push
scas
fdivl
fnstenv
lcall
cwtl
jae
fbld
sub
pop
imul
pop
or
lock
sbb
hlt
jmp
inc
aas
sbb
shll
loopne
push
push
adc
popf
pushf
or
stc
mov
test
sub
cmpsb
das
stos
mov
mov
cmp
mov
das
cwtl
into
xchg
notl
cmp
jae
mov
fdivl
sbb
pop
mov
fldpi
xor
out
iret
jbe
mov
pusha
mov
ret
cld
adc
scas
mov
out
in
inc
sub
fstpt
lods
push
add
sbb
data16
addr16
xlat
add
jmp
mov
jne
lret
adc
lds
mov
outsl
into
and
es
push
nop
mov
decl
sbb
insb
xchg
mov
and
ljmp
adc
out
adc
mov
pop
inc
leave
and
lea
shlb
and
pop
dec
iret
and
cmpsb
shrb
add
jae
in
push
mov
pop
sub
mov
pop
push
fcomp
ljmp
ljmp
push
cmp
pop
xor
jle
xorl
fisttpl
add
scas
loopne
jp
test
or
es
sarb
fsts
sti
jle
push
cmc
pop
mov
sbb
mov
mov
dec
dec
lcall
call
scas
xorl
jnp
sbb
cwtl
lcall
adc
in
push
pop
or
ss
ljmp
mov
pop
pop
lahf
pop
mov
sahf
imul
fisubrl
sar
xlat
pop
cmp
push
jecxz
pop
cmp
or
cmc
mov
addb
sub
aaa
cmp
call
sub
push
loopne
or
mov
sbb
xchg
aaa
jecxz
jl
or
out
fbstp
in
jne
or
xor
mov
jl
ljmp
sbb
sbb
incl
cmp
sub
cmc
loope
loop
or
cwtl
out
mov
js
xchg
jg
insb
enter
push
cmp
mov
ja
mov
mov
mov
cmp
sub
cs
orb
jnp
sarb
mov
xchg
or
jo
xchg
in
popf
dec
mov
decl
pop
mov
ret
dec
cs
dec
popl
or
sub
in
sbb
dec
sbb
dec
add
jmp
and
out
movsb
add
fwait
mov
fcmovnbe
jmp
loopne
jmp
pop
ffreep
xchg
mov
cmc
loop
or
xchg
imul
test
xlat
mov
add
mov
xchg
in
fidivs
xchg
fidivrl
mov
mov
mov
outsl
pop
push
xor
push
outsl
hlt
dec
or
fwait
jmp
ret
mov
scas
sti
cmc
lcall
test
cmc
jg
ficoms
cwtl
outsl
mov
int3
mov
std
pop
sub
cmc
dec
aas
ljmp
mov
or
mov
add
push
into
ds
aad
xor
fwait
or
or
dec
ret
clc
jmp
fwait
adc
jge
jp
fildll
nop
pop
dec
dec
add
push
stos
and
in
sbb
filds
lods
jnp
lea
xor
inc
jmp
in
or
repnz
or
ljmp
ficomps
sub
insb
cld
mov
xchg
rcll
movsb
cs
mov
pushl
je
js
movsl
or
frstor
fsubrs
out
and
mov
push
out
call
cmp
arpl
sbb
dec
jno
xlat
cmpsb
sti
aas
pop
jecxz
mov
mov
decb
mov
pop
mov
sarl
les
es
lahf
fwait
pushl
mov
js
je
bound
sbb
fsubrl
in
push
xor
fisubrs
adc
call
mov
enter
faddp
fimull
incl
jecxz
jbe
push
push
pop
inc
and
unpckhps
add
repnz
out
add
jmp
int
mov
jns
push
ret
dec
adcb
pop
imul
dec
cmp
movsb
sub
add
lcall
push
dec
jb
shl
mov
int
mov
int
call
sbb
add
ljmp
icebp
mov
loopne
sbb
sti
pop
and
insb
mov
aas
cltd
lea
xchg
dec
movsb
popf
pop
das
fimull
shrl
xchg
imull
ja
jg
and
mov
mov
orb
js
pop
cmp
mov
je
dec
cwtl
mov
int
push
scas
addr16
jmp
inc
fdivrl
cs
mov
add
test
xchg
push
mov
add
cmp
fcmovnu
jg
popf
dec
scas
loopne
jecxz
push
clc
shl
adc
addr16
xchg
push
call
das
mov
lcall
aad
xchg
mov
jg
iret
scas
je
mov
lcall
daa
fstl
scas
leave
fsub
cmpsl
pop
icebp
xor
lcall
inc
cs
pop
adc
lret
adcb
push
cmp
inc
dec
pop
repz
mov
mov
sub
sbb
mov
adc
int3
xor
ss
mov
call
loop,pt
frstor
leave
insl
ss
and
mov
cmp
repz
jg
incl
or
fidivl
mov
cs
loop
jmp
mov
sub
push
add
aaa
add
jb
mov
test
call
jp
xchg
xchg
adc
sbb
jno
incl
test
repnz
imul
inc
andb
cmc
or
adc
mov
sbb
jbe
clc
xchg
mov
ret
lahf
subb
addl
push
xor
jg
dec
mov
aad
jb
xchg
inc
iret
dec
fiadds
pop
faddl
pop
mov
enter
ljmp
inc
jle
cmp
fdivrp
insb
sub
popf
aaa
ja
loopne
bnd
dec
es
pop
dec
xchg
and
rolb
lcall
mov
pop
cli
xlat
push
lock
xor
lea
jno
mov
ret
push
scas
call
ret
movsb
in
mov
adc
lods
mov
in
call
xorb
imul
add
call
add
adc
nop
push
test
rcrb
stos
fcmovnbe
lcall
jnp
sub
rcll
addr16
cmc
xor
stos
int
jg
or
mov
out
sahf
fdivs
mov
rolb
adc
outsb
rclb
incl
dec
rcrb
in
andl
add
adc
mov
sbb
jmp
pop
fcomi
xor
mov
cmp
inc
mov
sub
and
mov
jb
clc
or
ret
jns
rcrb
or
xor
inc
test
bound
fstl
hlt
jge
dec
ljmp
mov
arpl
mov
adc
pop
or
adc
ljmp
mov
lret
inc
mov
xchg
push
cld
clc
lret
push
arpl
in
pushl
in
fs
mov
dec
jne
lods
aaa
mov
dec
push
pop
aam
pop
xchg
jg
lcall
jmp
sbbb
sbb
or
adc
fwait
xchg
and
outsb
pushl
pop
xlat
leave
sbb
inc
mov
bound
sahf
pop
mov
push
jecxz
sbb
and
aaa
call
jp
mov
and
and
roll
xchg
testb
mov
add
in
es
xor
mov
pop
call
mov
shll
and
fidivrl
xor
aas
outsb
cmp
jecxz
pop
jmp
mov
notb
xchg
inc
dec
mov
sub
mov
fisubrs
scas
cli
pushl
and
push
lcall
mov
sbb
fst
outsb
insl
cld
mov
lcall
ds
imul
xchg
call
and
sarl
into
inc
or
sbb
add
adc
xlat
cltd
lcall
mov
in
ss
push
dec
sbb
loope
into
mov
lock
inc
cmp
jae
ds
ret
fxch
mov
xchg
gs
insl
or
decl
dec
mov
call
mov
mov
js
dec
insb
arpl
fcomip
jne
insl
push
les
out
hlt
pop
fdivl
aad
inc
dec
add
sbb
dec
out
mov
loop
xor
mov
lods
dec
cwtl
fdivrs
jb
cmp
lcall
in
adc
inc
sub
test
inc
movsb
daa
pop
shlb
or
in
sbb
push
decl
ficoml
ja
dec
mov
jle
dec
or
repnz
mov
inc
mov
popa
fdivrp
ljmp
mov
mov
sub
imulb
das
xchg
xor
push
xchg
les
outsb
push
jle
mov
jne
hlt
decl
out
mov
mov
mov
xchg
sbb
xor
jae
sarl
mov
mov
lock
fldcw
xor
and
enter
sub
decl
loop
dec
dec
xchg
adc
mov
or
addb
mov
out
push
push
cs
inc
out
out
ljmp
mov
ds
dec
lahf
getsec
or
dec
jmp
clc
dec
cmp
mov
gs
pop
sti
push
sub
xchg
in
fbstp
push
jno
sarl
push
data16
sbb
insb
lahf
shll
inc
add
mov
mov
add
xor
mov
mov
mov
xchg
insb
add
mov
mov
xchg
xor
or
mov
fs
jg
call
mov
and
add
jl
cmpsl
lret
ds
and
push
push
mov
ljmp
sarb
mov
aam
inc
pop
pushf
or
mov
shlb
inc
in
pushl
cmpsl
mov
out
lods
nop
pop
and
dec
psubq
sbb
stc
cmpsb
insl
clc
ljmp
iret
mov
mov
aaa
push
rorl
ljmp
dec
outsb
stos
jle
mov
jmp
jae
xchg
or
pop
into
aam
lcall
ja
shll
ljmp
sbb
jae
in
clc
repz
cmp
jns
jmp
push
addr16
and
test
ret
lcall
jge
mov
insl
int
movsl
pop
js
testl
add
call
push
iret
rol
cmpsl
add
sti
sbb
js
xor
xlat
jl
enter
hlt
shr
les
sub
adc
pop
cmp
cmp
mull
ljmp
inc
inc
or
aaa
cmpsl
mov
xor
lcall
andl
xchg
psadbw
lock
pop
mov
jp
xchg
add
push
in
add
outsl
cli
call
mov
xchg
mov
gs
mov
mov
cs
ljmp
push
adc
stos
sbb
je
into
dec
repz
push
or
enter
push
and
jmp
outsl
lock
sbb
inc
xchg
add
bound
jp
mov
das
cli
out
sar
and
std
movsl
dec
loop
cmpsb
inc
arpl
sub
int
and
jnp
lret
pushl
leave
mov
adcb
cmp
popf
jge
scas
icebp
xchg
call
inc
aad
sbb
popa
loope
inc
call
add
dec
scas
lds
xor
and
loopne
mov
mov
into
xchg
add
mov
sub
call
cmp
aad
pop
adc
test
stos
xchg
sarl
push
je
stos
mov
jg
inc
lods
negb
mov
push
cmp
negb
fsubrl
clc
insl
out
lret
mov
cs
cli
sbb
decl
cwtl
mov
data16
cmp
int
mov
sbb
lea
scas
shr
sbb
outsl
popf
or
jle
pop
push
or
clc
push
or
cwtl
std
int
shlb
mov
mov
pushl
sbb
xor
fnstcw
xchg
fs
mov
test
jmp
cmp
jb
jle
xchg
cmpsb
mov
arpl
xchg
pop
mov
pop
cs
sbb
ja
lcall
sub
xchg
shr
inc
xlat
push
mov
rolb
pop
cmc
aad
dec
call
inc
xor
adc
pushf
lret
enter
jb
push
in
pop
ljmp
sbb
aam
lcall
mov
stc
inc
stc
aas
pop
pop
pushf
cmp
jmp
cmp
cmp
xor
and
and
ror
xchg
mov
test
jl
adc
and
icebp
test
xchg
add
adc
popf
inc
xchg
cli
incl
fiadds
std
fcoml
inc
cltd
ret
ret
pushl
out
fsub
xchg
inc
mov
mov
dec
or
mov
lcall
mov
repz
out
orl
push
add
jae
and
and
incl
dec
daa
nop
repz
sub
stos
outsl
outsb
and
add
sub
mov
mov
icebp
sub
cs
shll
push
sbb
in
jge
inc
xlat
test
and
out
std
lcall
push
sbb
ret
push
mov
sbb
neg
cmc
cmpsl
in
adcl
lock
std
inc
lods
or
jmp
sub
stc
or
cmpsl
test
xchg
rorb
xor
enter
mov
sbb
je
inc
pushl
push
popf
call
mov
pop
sbb
push
push
jg
orl
gs
call
int3
test
xor
jno
lock
mov
inc
jl
push
add
mov
dec
popa
shlb
cmp
cmc
loopne
jecxz
stos
arpl
sbb
pop
loopne
es
jle
fisubrs
das
push
pushl
sbb
int3
pop
and
push
sub
out
into
cmc
lret
incl
arpl
sbb
xorl
imulb
test
pop
adc
gs
jmp
cmp
inc
cmp
fstl
jb
fwait
lret
lret
test
sbb
daa
jecxz
decl
push
sarb
stos
or
lock
lock
test
imul
push
sub
std
adc
test
stos
push
dec
xor
xchg
sti
cmpl
lcall
notl
jno
rcll
sbb
scas
loopne
jp
and
adcb
xchg
cwtl
push
repz
cmp
xchg
dec
jg
pop
rorb
cmpsb
ds
mov
xchg
mov
jno
xor
dec
imul
call
push
loopne
repnz
into
ja
xchg
addl
adc
add
jmp
jo
into
fimull
gs
call
popa
jp
test
incl
inc
popa
and
in
daa
xor
int3
int
mov
mov
pushl
pushl
mov
insl
mov
xor
int
dec
bound
cmp
sbb
frstor
push
in
mov
ret
test
xor
sti
push
enter
inc
loop
decl
inc
mov
sbb
and
insl
dec
inc
mov
mov
xlat
mov
jg
incl
fstp
lods
scas
or
fwait
call
push
add
shll
lcall
ror
pushf
jecxz
test
push
and
into
out
sub
decl
imul
imul
adc
js
addr16
push
mov
subl
decl
push
inc
mov
sti
pop
xchg
mov
inc
outsb
push
mov
fmulp
push
hlt
insl
movsb
ljmp
fidivs
outsb
mov
insl
cmp
and
pop
fst
addb
call
out
mov
push
notl
iretw
scas
cmp
pop
jp
iret
imul
lcall
mov
cmp
mov
out
cs
addb
out
jecxz
ss
mov
inc
jmp
cmpsb
lods
mov
xchg
mov
lcall
cmp
adcl
sar
call
mov
push
jb
loopne
xor
stos
jge
subb
mov
repz
mov
adcl
and
decl
and
imulb
aam
jmp
loopne
push
xchg
jmp
jne
inc
or
enter
and
xlat
arpl
push
aas
cwtl
mov
jg
bound
ret
mov
inc
jno
mov
daa
test
test
stc
or
jae
add
push
sar
lcall
push
xor
sub
mov
incb
and
in
stos
xchg
mov
jg
or
mov
mov
repnz
jbe
jmp
xchg
and
push
pop
xor
jp
xor
adc
jb
cld
fcos
pushl
cmpsl
nop
out
push
or
imul
icebp
adc
jbe
cli
jle
arpl
lock
in
mov
ret
xor
daa
negb
cltd
add
int
mov
mov
jns
and
call
daa
mov
loope
loope
jl
cs
sahf
popa
addb
push
pop
std
mov
push
jmp
mov
test
repnz
mov
pop
gs
cmp
mov
aad
pop
pop
lods
call
lock
ret
dec
pusha
xchg
sbb
sub
cwtl
lret
lahf
repz
std
decl
cmp
pop
or
dec
push
xchg
repz
pusha
call
fsubrs
jecxz
icebp
ror
inc
jno
out
xor
std
mov
cmpsl
inc
ret
add
gs
clc
jge
in
fdivrs
push
hlt
add
add
cmp
jp
mov
add
hlt
mov
cwtl
inc
sbb
lret
into
out
pop
movsb
adc
jmp
cmp
mov
xor
nop
scas
arpl
adc
incl
mov
or
mov
jg
mov
pop
loop
sub
loope
call
jecxz
inc
inc
jg
sbbl
xchg
adc
lcall
and
std
dec
xor
addr16
cmp
push
jns
lods
lret
popf
push
aam
xchg
fistps
decb
cmp
hlt
jp
sub
inc
faddp
clc
mov
rcll
movsl
mov
xor
jno
not
lods
dec
test
ljmp
mov
lcall
pop
adc
add
imul
mov
cmp
aad
out
jp
cli
test
fsubs
pop
gs
enter
outsb
ljmp
sub
cmpsb
ret
push
outsl
stos
pop
lret
sub
push
aaa
dec
incl
xchg
shrl
push
add
mov
xor
sbb
cmpsb
dec
out
das
sbb
incl
movsb
xchg
daa
imul
or
sbb
push
iret
jnp
iret
jecxz
aaa
cld
ljmp
mov
test
sbb
loopne
sub
jge
lahf
movsb
loopne
ja
enter
decl
stos
cmc
sahf
jno
sub
adcb
jb
andl
scas
in
cli
lret
in
jl
pusha
mov
out
cmpsb
lcall
mov
scas
popl
mov
mov
test
mov
mov
lahf
cmp
iret
mov
decl
xchg
xchg
lock
sbb
jns
sub
test
loopne
cs
sbb
dec
xchg
inc
pop
cmp
call
testl
in
mov
shrb
pop
int
inc
mov
mov
loope
cwtl
call
adc
popf
leave
std
jnp
jo
add
dec
les
sbb
adcl
lahf
outsb
mov
in
push
lret
sarl
aam
imul
decl
in
pusha
or
lds
ffree
das
xchg
jo
push
inc
xor
adc
out
clc
cmp
lock
stos
outsl
mov
lret
repz
jnp
cmpsb
inc
movsb
xchg
pushl
std
jmp
arpl
addr16
flds
dec
int
cs
stc
sub
mov
outsl
scas
cli
jmp
lret
sahf
out
clc
faddl
and
mov
push
adc
add
jo
shlb
scas
test
call
stc
or
dec
dec
stc
mov
gs
xchg
pause
pop
sub
pop
popa
out
lods
ficompl
filds
mov
cltd
mov
ret
cmp
ss
outsl
xchg
cld
lods
xor
adc
jne
cs
lcall
pop
call
mov
pushl
add
sti
fisttps
jo
xlat
jns
mov
cld
testb
sbbb
leave
aad
pop
xchg
mull
incl
mov
mov
push
in
jb
jns
add
outsl
popa
js
call
or
call
sbb
lret
sbb
into
mov
addr16
out
mov
jp
sbb
cmc
pop
hlt
dec
inc
inc
dec
mov
fcoml
icebp
or
cmp
mov
movsb
xor
adcb
mov
sub
nop
fidivrl
je
jmp
xorb
pop
and
mov
cli
test
add
mov
push
dec
xchg
push
mov
movsb
xor
lret
out
lcall
pop
je
inc
cmp
sbb
pop
dec
cmp
sbb
andb
movsl
shl
fucom
add
push
push
movsl
mov
mov
sbb
movsl
fs
xlat
dec
xchg
pop
aam
push
in
lea
cli
in
xlat
jo
addr16
lcall
pusha
xor
jo
dec
incb
mov
repz
jmp
enterw
sbb
lret
stos
xorl
std
data16
std
incl
test
inc
nop
add
lock
call
dec
cwtl
leave
imul
aaa
dec
inc
cmp
call
add
aaa
add
add
aas
in
call
sub
lods
fildl
mov
fwait
sub
ja
add
mov
js
pop
rcrb
pushl
push
leave
or
jb
push
jmp
out
or
addl
hlt
imull
pop
mov
mov
mov
jnp
loopne
push
ljmp
jge
ljmp
fnsave
mov
push
adc
enter
mov
mov
jg
add
mov
orb
cmp
mov
cltd
insl
jp
scas
lds
jno
icebp
incl
jg
pop
cmp
testb
test
icebp
roll
mov
adc
sub
sbb
movsl
xor
out
add
cmp
mov
or
dec
push
lret
int
cwtl
push
ljmp
outsl
cli
and
test
sbb
cmp
pop
stos
xor
cmp
dec
movsb
inc
incl
mov
sub
mov
orw
test
sti
push
and
mov
test
lods
inc
jmp
or
sbb
mov
test
enter
pop
call
xor
mov
jnp
jbe
repnz
mov
pop
jge
mov
aad
loope
incl
inc
sbb
test
test
lods
jge
pop
aaa
and
pop
push
mov
rol
outsl
decl
jns
sbb
lock
adc
jmp
xchg
aam
push
inc
and
loop
sbb
rcrl
jns
lock
ja
inc
aam
call
mov
les
dec
push
and
mov
jp
enter
push
pop
imull
stc
mov
dec
sbb
fsubrs
sti
sub
ficoml
lock
inc
out
aad
mov
ljmp
mov
push
xor
popf
insb
sub
repnz
dec
cwtl
dec
fcompl
inc
out
fstp
stc
adc
push
out
mov
xor
leave
add
pop
test
fwait
pop
int3
dec
mov
xor
das
adc
decl
fstpt
or
xor
pop
push
test
or
mov
add
ljmp
test
test
inc
xchg
sub
fadds
jmp
loopne
ljmp
jmp
rcrb
mov
cmp
xchg
xor
jbe
inc
inc
test
push
aas
fwait
mov
ljmp
ljmp
inc
mov
xlat
xor
movsl
decb
push
decl
jb
pop
add
test
cwtl
loop
inc
mov
cli
pushl
lret
ficoms
int
adc
imul
mov
inc
rorl
lcall
lods
aad
mov
mov
sub
aad
jb
lock
out
xor
lock
les
push
fisubrl
xchg
fdivrs
cmc
sbb
dec
std
mov
mov
inc
mov
loope
push
sub
pop
sub
push
lcall
hlt
mov
sarb
je
or
out
sti
jne
arpl
fdivs
ljmp
jp
mov
out
out
cld
enter
xor
jns
nop
xchg
jmp
shrb
lock
push
xchg
imul
mov
fwait
lcall
addl
cld
cmc
ljmp
repz
xchg
insb
insb
xor
stos
inc
stc
call
test
lods
dec
in
call
gs
push
sbb
scas
dec
bound
int3
std
jne
sbb
push
movsl
loop
js
out
psubusw
xchg
push
cwtl
mov
std
cltd
sub
mov
and
fwait
inc
jecxz
dec
jns
leave
movsl
out
stc
sub
push
push
xchg
into
decl
leave
push
xor
adc
ss
outsl
clc
call
jge
push
inc
adc
xor
pop
test
xor
jecxz
ljmp
daa
adc
sub
dec
out
je
in
popf
push
xor
sub
jl
pop
sub
xlat
scas
ljmp
cli
incl
pop
push
and
push
pop
jne
cld
ja
leave
clc
sahf
incl
cmp
mov
sub
add
lods
mov
pop
cmp
iret
adc
xchg
cs
shlb
dec
icebp
push
pop
aam
xlat
insb
repz
jecxz
int
loopne
in
aad
int
in
mov
cmp
js
mov
inc
pop
xor
nop
jg
xor
cmp
jle
insl
aas
sbb
in
mov
test
js
movsb
pop
data16
loope
call
push
mov
or
insb
inc
push
ss
mov
cltd
aam
addr16
mov
mov
pushl
adc
dec
in
clc
scas
bnd
xor
roll
xor
dec
aas
sub
push
xchg
iret
sub
stos
adc
jmp
or
ljmp
add
fadd
push
lcall
ljmp
jp
lds
lcall
stos
pop
pop
dec
or
cmp
jl
das
or
mov
sub
stos
ljmp
sbb
ucomiss
cmpsl
add
leave
scas
or
sbb
repnz
stos
xchg
sbb
ljmp
cmp
int3
leave
xchg
sahf
mov
push
call
mov
xchg
fcom
sbb
inc
mov
pushl
sub
jo
orl
rcrb
sub
mov
stc
insb
adc
mov
fistl
push
fsubr
cmpsl
nop
lods
mov
and
sahf
jo
xchg
adc
mov
inc
sbb
mov
pop
sub
lcall
call
imul
ljmp
xchg
popf
jecxz
imul
cmpb
mov
les
scas
into
out
clc
ljmp
sbb
and
xchg
adc
out
lret
arpl
mov
ds
dec
repnz
popa
push
xor
fnstenv
sub
jmp
lea
adc
shlb
mov
lret
xchg
mov
rolb
repz
mov
mov
stc
mov
adc
inc
lods
push
rclb
mov
scas
sarb
cld
jg
loope
and
mov
mov
xor
xor
pop
je
jp
dec
in
jno
imul
pop
lock
pop
push
adc
lods
fstpt
mov
int3
mov
clc
jle
or
mov
mov
jg
fdivs
clc
jnp
xor
xchg
mov
cmp
push
mov
incl
cltd
std
je
outsb
fildll
inc
lods
jns
into
mov
cmp
cmp
jb
mov
pop
bound
das
xor
into
mov
xor
lcall
decl
jae
mov
scas
sbb
out
add
lahf
outsb
inc
xor
in
cmp
jg
pop
adc
cmpb
in
dec
movsl
cmp
jbe
jnp
scas
test
jge
addr16
popfw
mov
cmpsl
push
mov
lock
clc
cld
mov
or
push
and
jp
repz
xor
ljmp
inc
pop
mov
clc
or
jge
fdivrp
jg
lods
pop
aas
fimuls
daa
sbb
into
xchg
push
lods
jb
cmp
pop
std
aaa
xchg
push
loope
jns
fwait
test
dec
cmp
push
sub
inc
xchg
add
incl
pop
flds
dec
fistps
add
das
les
lret
shll
call
lods
rorl
sub
push
jecxz
pop
pop
das
hlt
dec
pop
jmp
pop
je
cmp
mov
mov
test
mov
je
mov
mov
add
call
fcomps
ja
and
and
mov
in
stos
ja
dec
jmp
mov
push
sbb
fsubrs
xchg
test
ds
test
dec
repz
fcomip
test
pop
xor
inc
cmp
xor
sbb
cld
decl
mov
push
stos
push
jb
jle
sahf
xchg
int3
pusha
test
hlt
mov
call
lods
xor
mov
nop
dec
mov
cmpxchg
xchg
dec
ret
sbb
push
imul
incl
xor
push
inc
leave
inc
push
mov
push
int3
sub
push
testl
jmp
add
jmp
push
or
test
lods
movsl
sbb
mov
mov
or
call
cmp
loopne
stos
inc
lret
cwtl
in
push
sub
cltd
jp
sub
adc
int3
or
add
push
repz
cs
bound
sub
xchg
push
scas
pop
repz
decl
les
ss
push
loope
xor
push
xlat
mov
mov
sub
outsl
repz
pushl
cltd
or
cmp
lret
sub
sahf
pop
mov
and
les
imul
jno
jmp
dec
xor
popa
into
pop
gs
lret
and
loope
scas
and
xchg
pop
cli
ljmp
or
push
fs
sub
sub
sub
das
push
dec
out
push
and
dec
stc
dec
cmp
jmp
inc
adc
push
jmp
sbb
cltd
pop
decb
lcall
dec
dec
movsl
lret
push
mov
cli
mov
push
dec
inc
xchg
jns
xor
jbe
in
mov
cs
and
enter
lcall
adc
cmpsl
and
test
pop
add
push
xor
add
jo
shrl
push
pusha
xlat
xchg
int3
xchg
pushl
pop
sbb
push
and
in
mov
shrl
xchg
std
jns
or
pop
sbb
jg
add
arpl
outsl
int3
inc
pop
xchg
add
aam
shrb
push
cmc
daa
fldenv
hlt
pushl
ss
cmp
repnz
cli
dec
dec
dec
lcall
loopne
dec
cli
call
pop
add
dec
pop
xor
idiv
push
and
movsl
cltd
decb
test
ss
xchg
out
cld
outsl
cmp
mov
mov
and
mov
mov
lods
and
std
cmc
loopne
pushl
add
sbb
inc
jns
dec
mov
dec
mov
inc
inc
fdivr
mov
addr16
inc
outsl
loopne,pt
inc
push
cli
dec
mov
xchg
adc
stos
cwtl
test
push
ja
lcall
sbb
jbe
hlt
aaa
jno
jnp
fistl
call
or
add
mov
cwtl
shr
sub
cld
ja
xchg
inc
inc
mov
or
dec
bound
out
cmp
call
ret
loop
push
jecxz
mov
dec
pop
int3
lea
cmp
lods
inc
fmuls
jmp
rorb
imul
mov
pop
cwtl
enter
out
adcb
pushf
imul
popa
rcll
xchg
in
fidivrl
fisubl
mulb
iret
push
lcall
xchg
sbb
mov
or
cmp
inc
scas
xor
and
jmp
lcall
push
psubd
dec
data16
push
pop
cmp
or
sub
incl
lcall
and
xchg
mov
rcr
mov
jg
push
or
mov
jmp
pusha
lret
xchg
pop
notb
jb
call
test
cli
xchg
fimull
sub
push
mov
sub
call
sbb
movsb
jle
fdivrp
mov
cmpsb
jecxz
aas
pop
mov
ficompl
xchg
incl
mov
out
mov
xchg
push
or
dec
jnp
std
xchg
pop
mov
mov
push
or
cld
sub
lock
incl
sbb
popw
cmpsl
test
pop
test
in
cmp
mov
push
fidivs
cli
fdivrl
aad
ret
divb
xchg
sub
xchg
dec
inc
dec
test
inc
pop
call
sub
popa
jl
mov
out
call
shlb
xor
sub
xchg
or
push
pop
test
dec
mov
clc
xlat
test
and
sar
ljmp
pop
add
hlt
sbb
rcll
and
mov
jg
test
icebp
mov
jge
decl
or
je
in
cmp
cmpb
push
sbb
add
sub
in
in
decl
dec
xchg
or
xchg
out
jns
lcall
jg
mov
ds
cmp
out
cmp
jecxz
inc
mov
fistpll
test
jne
repnz
adc
push
and
aam
mov
pop
cmc
pushl
into
mov
shlb
inc
mov
xor
out
test
inc
ja
cwtl
imul
decl
sbb
lcall
mov
dec
mov
mov
mov
jecxz
jmp
rcll
xchg
mov
mov
mov
sbb
lcall
in
es
fistpl
mov
cltd
mov
push
sbb
ret
cwtl
roll
jg
es
call
popf
xchg
pop
movsb
stc
int3
push
int3
xor
mov
and
shll
jae
les
shll
mov
cmp
ljmp
and
test
std
jnp
push
inc
pop
dec
and
sub
mov
sbb
iret
sti
push
call
add
data16
mov
xchg
or
pop
sti
mov
ljmp
je
stc
or
mov
pop
mov
mov
adc
and
clc
jmp
push
sub
jg
bound
jge
lock
or
and
sub
test
decl
xor
jb
and
jmp
fdivrl
test
cmp
cmp
cmp
ljmp
mov
das
add
loope
insb
cmpsl
es
enter
sbb
imul
fstl
add
cmp
sbb
in
and
cmpsl
fistl
xor
cmp
aam
movsb
decl
call
stos
aam
mov
fwait
push
inc
les
and
aaa
std
jmp
adc
cld
rclb
lahf
mov
or
adc
lcall
lods
push
jae
or
aas
jp
jle
push
push
mov
sub
xchg
fildll
jae
lcall
test
std
jae
jnp
jmp
mov
or
jle
adc
pop
out
cli
lcall
adc
inc
jae
push
pop
aad
dec
nop
cmpsb
ds
sbb
push
sub
scas
aaa
cld
lea
lock
and
push
jge
nop
push
lcall
push
es
jns
adcl
cmp
jle
adc
pusha
jge
dec
decb
ret
pop
mov
fnstenv
pop
dec
dec
into
jne
jg
or
notb
scas
inc
ret
mov
popa
xchg
mov
cmc
jmp
sbb
add
aam
stc
lock
push
mov
push
fiaddl
jg
mov
roll
push
mov
pop
mov
inc
imul
jmp
or
test
cwtl
sbb
dec
les
jge
adc
jbe
sub
ljmp
jae
push
xor
fcom
ret
psllw
cs
mov
sub
jg
mov
sub
sub
cwtl
sahf
jns
and
sbb
sti
movsb
jl
shl
mov
mov
imul
je
dec
push
int3
inc
arpl
push
pop
cli
mov
lods
cmc
pop
add
and
mov
arpl
ljmp
sbb
das
out
int3
add
or
shlb
cltd
aam
mov
mov
stc
pop
or
adc
cmp
xor
lahf
push
xor
lods
or
push
push
repnz
push
decl
sub
divl
add
movd
in
lock
movsl
fadds
out
sbb
fmull
xchg
mov
fwait
inc
aad
dec
sub
mov
out
xchg
pop
mov
or
mov
decl
mov
pop
in
sbb
push
int3
ja
test
out
jmp
por
iret
in
jmp
inc
imulb
cmp
or
inc
adc
adc
jb
pop
je
inc
stos
adc
push
adc
pop
pop
imul
lcall
mov
jne
jmp
ffreep
aam
adc
xor
aaa
push
mov
aaa
cld
incl
andl
adc
hlt
test
or
inc
nop
mov
ljmp
addr16
fsubrs
fwait
nop
scas
sbb
std
add
jle
aaa
mov
fcomip
mov
xor
jb
in
ja
pop
adc
in
insl
mov
in
xchg
adc
sarl
int
cmp
test
pop
fisubs
fstpl
mov
cmp
mov
sti
addr16
xor
scas
in
fdivrl
imul
fnstsw
mov
xor
inc
aaa
lods
pop
and
cwtl
mov
pop
jmp
pushf
clc
decl
rorl
jo
mov
test
jnp
mov
leave
repz
stos
mov
sti
popf
mov
or
dec
loope
aam
xchg
movsl
jmp
jne
or
adc
sub
ds
lcall
and
xchg
stc
mov
pop
insb
cltd
shlb
add
pop
and
clc
ljmp
sbb
lds
sbb
and
dec
lcall
out
subb
shlb
enter
add
sbb
test
std
xchg
popa
fcomip
ljmp
push
mov
add
lds
mov
lcall
cmp
and
jae
jne
das
and
jo
lea
scas
in
inc
inc
or
adc
incl
sti
sub
push
leave
sbb
jo
pop
sahf
imulb
or
mov
in
jp
mov
dec
cld
pop
stos
loop
sub
mov
jmp
cmp
xchg
call
cmp
mov
inc
xor
xor
lock
xchg
or
push
xchg
push
imul
push
push
add
ja
pop
push
push
lahf
xor
stc
test
cmp
outsl
push
adc
jo
or
leave
mov
push
and
sub
mov
pushl
int
mov
ljmp
pushf
int
icebp
pop
push
push
inc
fcomps
mov
cmp
jg
fs
mov
inc
subb
xchg
jno
mov
cwtl
lods
cmp
ja
call
popf
sbb
cli
dec
iret
mov
jns
mov
inc
js
aas
push
ds
or
mov
or
sbb
jmp
pop
or
fnstcw
cmc
pop
loopne
rol
mov
dec
or
call
push
mov
pop
jo
fidivl
pop
pop
mov
lods
mov
xor
mov
scas
jg
ljmp
inc
or
test
cmpsb
mov
out
lock
fsubl
sub
ljmp
xor
int
nop
test
push
pop
dec
lods
loope
jmp
pop
lcall
xchg
inc
cli
push
ljmp
ffree
mov
in
ret
pop
pop
and
decl
xor
roll
mov
lcall
xor
jecxz
shrb
inc
data16
mov
mov
mov
jmp
je
shlb
or
or
nop
jno
out
or
cmp
cmc
rep
cmp
add
addr16
sbb
aam
jae
stos
fimuls
testb
fcomip
dec
mov
adc
imul
inc
nop
mov
das
insb
daa
cmpsb
mov
fisubrs
fdivrl
lock
or
loop
in
int3
nop
push
adc
das
mov
dec
scas
sahf
dec
call
fidivl
add
lret
or
outsl
adcl
pop
dec
or
decl
mov
fs
jg
xor
jg
into
bound
scas
xchg
cs
movsb
add
sbb
cmp
arpl
sti
insl
psubw
push
adc
cmpsb
cmpsl
xchg
or
sar
stos
pushl
cltd
xchg
fldenv
add
push
jne
repnz
mov
push
push
cmp
lret
inc
inc
cmp
xchg
mov
into
and
add
dec
jge
jle
fbld
stc
fimull
scas
stos
aas
mov
inc
outsl
pop
push
insb
sbb
lods
aam
push
sbb
loopne
jns
dec
and
jp
ja
dec
insb
clc
js
and
and
decl
arpl
pop
push
dec
xchg
sub
rcl
mov
add
mov
enter
pushl
lret
or
xorb
sarl
xchg
sbb
add
pop
jmp
lods
add
xchg
jge
or
sub
mov
adc
call
or
pop
and
mov
xor
fbld
pop
jns
inc
cmp
loop
dec
xor
push
test
aaa
push
sarb
push
pop
icebp
cmp
xchg
push
ja
or
jg
addr16
pop
cmp
std
aaa
mov
dec
into
adcl
incl
jg
xchg
mov
pushf
ljmp
add
and
lahf
int3
jg
incl
std
int3
je
addr16
inc
sbb
or
int
add
push
out
xchg
xchg
add
xor
jecxz
adc
orl
cmc
push
xchg
out
inc
mov
inc
pop
and
lret
pop
mulb
fdivrp
push
icebp
aaa
orb
mov
into
inc
fisubrs
jnp
jo
pop
fcoms
cmpl
call
or
sub
call
addb
pop
cmc
jecxz
outsl
and
test
frstor
mov
stos
xchg
adc
pop
xchg
mov
mov
push
aad
test
fucomip
push
std
jmp
test
icebp
inc
push
lcall
mov
adc
ja
cmp
mov
pop
xchg
movl
ret
enter
movsb
frstor
mov
fstpl
call
iret
out
imul
int3
cwtl
xchg
mov
push
js
dec
mov
dec
xor
cmc
dec
addr16
loop
push
lock
nop
xchg
adc
cmp
sar
decl
xor
popf
push
movsl
sub
mov
repnz
outsb
stc
addr16
faddp
sbb
dec
xor
push
push
adc
cwtl
movsl
out
ret
lret
jl
out
cmpsb
test
cltd
jg
loope
imul
ljmp
rcpps
jo
stos
push
movsl
cmp
cld
aam
aam
pusha
out
push
stos
sahf
aam
cmp
incl
lds
cmp
or
pop
mov
stc
int
cmp
adc
fnstenv
fsts
mov
lret
outsl
cli
fs
sti
clc
xchg
test
sbb
xchg
mov
and
test
fnstcw
mov
sti
imul
sub
in
mov
xchg
mov
lret
out
and
sbb
roll
in
adc
inc
and
mov
testl
or
out
out
xor
dec
lret
xchg
js
dec
push
popf
pop
xchg
inc
mov
shl
or
or
iret
ljmp
push
jecxz
icebp
rcrl
ja
mov
fcomip
ljmp
lock
lahf
and
repnz
jmp
mov
lahf
dec
mov
dec
cmp
popa
xchg
xor
push
ss
sub
in
xchg
mov
aad
mov
or
push
fisttpl
mov
dec
mov
stos
daa
rcr
mov
ds
adc
pop
jg
call
add
jge
enter
lahf
push
repnz
ja
and
out
ljmp
pop
decl
push
insl
pop
subb
lods
into
mov
mov
das
or
dec
out
jnp
shlb
cli
divl
mov
ljmp
add
cmpsb
scas
sbb
jno
mov
pusha
lahf
movsb
dec
ficoml
inc
les
lods
adc
pop
lahf
call
push
scas
pop
push
lcall
mov
dec
sub
hlt
int
jge
fidivrl
std
ficoms
aas
add
loope
js
or
mov
mov
loop
int
call
inc
stos
push
cmp
or
jae
jmp
push
out
sbb
jno
idivl
sbb
xchg
les
insl
nop
add
clc
movsb
mov
decl
daa
shrl
pop
sub
push
fadd
into
popf
add
inc
push
xchg
lcall
fstpl
xor
or
cld
fldcw
pop
xor
mov
push
cmp
rcrb
icebp
leave
mov
mov
cmp
arpl
jmp
sub
and
into
or
and
sub
sub
add
movsl
sub
loop
aas
loopne
sahf
imul
arpl
push
mov
clc
mov
jns
daa
sbb
push
nop
xchg
lret
sub
ds
xchg
cmp
pushl
loop
xchg
lods
push
mov
cmp
mov
mov
imul
decl
cmp
and
or
inc
sbbb
stos
pop
pop
mov
push
in
cmpsl
nop
pop
ljmpw
cmpsb
or
pop
jo
push
lds
xor
cwtl
xor
inc
je
push
repnz
jmp
leave
inc
xor
mov
mov
and
pop
mov
cwtl
cltd
fs
decl
or
fldt
jl
cs
adc
pop
push
pop
pop
sti
dec
sub
rclb
mov
js
xor
push
int
hlt
roll
fldz
and
incl
jbe
bound
outsb
sub
jno
ret
movsb
loope
mov
lcall
insl
ret
push
fstl
add
shrl
xchg
popa
lea
into
push
lcall
push
lea
leave
xchg
mov
xor
xchg
pop
lcall
mov
popf
pushf
xchg
lret
push
xchg
das
test
mov
call
icebp
push
imul
cwtl
adc
popf
cmp
sbbb
mov
mov
fmuls
jge
pushf
ud0
inc
je
xchg
call
shll
es
push
call
cld
xor
jle
fisubs
fstps
pop
stos
orb
mov
shlb
push
and
loope
jnp
cmc
lcall
imul
out
inc
jne
test
stos
cmp
or
loopne
jo
jae
cmp
add
imull
add
cmpsl
leave
incl
xorb
jnp
push
sar
repz
out
ljmp
cmp
sbb
cwtl
out
jo
fists
ret
jo
aaa
mov
cmp
mov
loope
cmp
nop
stos
hlt
push
mov
out
clc
rolb
dec
fnstsw
cmp
jne
mov
test
jecxz
xchg
xchg
test
inc
adc
adc
lcall
mov
fldenv
test
mov
xchg
mov
jg
mov
push
xchg
clc
ljmp
lcall
xlat
testl
sbb
flds
fildll
out
mov
out
mov
adc
outsb
sarb
cltd
add
xorl
or
bound
push
pop
lock
sub
mov
jg
cld
jge
insb
cld
stos
and
imul
dec
stos
jg
int
mov
fdiv
add
xor
mov
das
int
pusha
mov
into
add
mov
call
push
mov
insl
xor
sbb
inc
popa
add
cmc
enter
mov
xchg
fildll
ja
mov
call
xchg
nop
jmp
stos
add
fdivs
insl
jl
mov
leave
cmpb
int3
sbb
xchg
ljmp
cli
jg
pop
sub
imul
push
sub
sub
xchg
scas
mov
popa
cmpb
ljmp
mov
xor
enter
in
stc
shll
jmp
xor
xchg
outsl
notb
bound
mov
xor
mov
mov
pop
cmp
lcall
dec
pop
push
and
subl
or
push
icebp
mov
mov
sbb
xchg
dec
jnp
out
int3
dec
sub
xor
cmp
stos
jge
mov
popa
or
decl
cmpsl
pop
and
push
lret
outsl
mov
pop
rol
fcomip
call
pop
and
sub
adc
shlb
sub
fiaddl
mov
pop
mov
xchg
xchg
inc
push
jae
push
and
idivb
into
xor
pop
cli
inc
cmp
pushl
mov
xchg
outsb
pop
xchg
xor
mov
test
xchg
cmpsb
push
dec
sub
jle
add
iret
mov
push
mov
xlat
inc
adc
stos
enter
sbb
xor
clc
pop
cld
push
pop
cmp
ss
push
repz
fisubrs
in
mov
jmp
inc
cmp
add
pop
jle
stos
xlat
xchg
push
push
test
mov
mov
sub
xor
sbb
cld
add
lcall
and
pop
or
sub
jp
mov
outsb
hlt
mov
std
lods
cltd
clc
clc
pop
iret
cmpsl
jle
fisttpll
pop
add
ret
mov
inc
dec
pop
jmp
lcall
mov
daa
adc
cmpsl
daa
push
mov
add
roll
inc
jns
pop
cmp
jecxz
mov
adcb
inc
xchg
and
dec
inc
or
jmp
sbb
cmpsb
aad
inc
push
mov
jle
sub
mov
jl
in
cmp
ret
mov
fistpl
mov
mov
insb
cli
ljmp
bound
imulb
mov
inc
into
lods
loopne
sbb
adc
enter
js
ljmp
jecxz
jnp
loop
mov
pushf
repnz
sub
cmc
sub
adcb
mov
push
inc
and
xor
bnd
es
cmp
call
adc
mov
fcompl
mov
dec
pop
pushf
jg
jg
loopne
mov
subb
add
add
lcall
je
in
call
jg
lods
xchg
pop
add
movsl
sub
cmp
ret
inc
add
mov
inc
fdivs
sub
daa
mov
shrb
pop
xlat
dec
dec
clc
xor
jg
dec
stos
cmpsl
cmc
cmp
sub
int3
inc
inc
jp
pop
push
mov
int3
mov
fiaddl
ljmp
and
repnz
push
ficomps
lret
test
push
push
cmp
dec
xor
test
ja
fstpt
push
clc
cmpsl
pusha
lahf
jg
inc
iret
lods
imul
xchg
call
arpl
lcall
je
in
jnp
scas
add
out
sub
in
adc
cmpb
dec
aam
and
mov
cmp
inc
mov
jl
inc
das
sbb
ret
lods
js
lcall
decl
lret
push
jmp
dec
inc
scas
or
testl
test
xor
incl
lds
imul
sarl
adcb
sbb
decl
cmpsl
push
xchg
fists
int3
adc
aaa
fwait
mov
mov
cli
mov
repz
ja
add
pop
in
iret
or
jmp
ret
mov
popf
ret
incl
dec
or
orb
out
add
lods
fnstsw
mov
pop
sahf
cmp
ror
add
inc
popa
lea
mov
sub
inc
mov
xchg
in
ljmp
inc
pop
fisttps
jmp
and
movl
mov
popf
xchg
nop
adc
jbe
and
adc
aaa
mov
mov
jp
pushf
pop
test
pop
mov
fisttpll
sub
xor
jl
loop
inc
xor
inc
int
jg
ss
or
adc
dec
push
or
xchg
testb
mov
xor
sahf
jnp
mov
jl
fsubl
fcos
decl
xchg
adc
add
jg
push
xchg
test
ret
adc
xchg
push
xchg
sub
das
cltd
jg
mov
leave
push
in
cmp
sub
adc
xchg
or
push
mov
adc
push
mov
xor
mov
xor
adc
or
lcall
mov
mov
push
xor
inc
jle
add
sbb
orl
rcrb
popa
stc
insb
dec
shrb
ljmp
sbb
pop
gs
pop
leave
ficoml
icebp
ss
jle
fnstsw
add
dec
pop
add
mov
xor
adc
nop
jns
ljmp
jg
sti
pop
sarl
test
std
mov
inc
mov
jp
shlb
push
pop
and
sahf
ja
fisttps
in
inc
or
xchg
add
jecxz
or
je
mov
xor
in
bound
into
incl
jae
out
fsubr
loop
outsl
dec
stos
inc
dec
mov
jne
mov
or
test
pushl
stos
aas
movsl
pushf
add
mov
stos
addr16
lahf
lcall
call
push
push
jne
stc
cmp
shl
inc
daa
mov
mov
mov
mov
xor
imul
pop
loope
call
inc
daa
jp
mov
adc
fdivrl
out
stos
xchg
lcall
pop
lcall
sar
or
mov
lods
in
xchg
loope
sub
sbb
leave
dec
jmp
out
cld
call
sbb
in
shl
es
mov
fwait
xor
push
xchg
mov
jbe
lock
incl
xchg
fimull
das
loop
mov
ds
jge
lahf
fadd
repnz
lcall
adc
mov
movsb
bound
aaa
lds
int3
aas
lahf
sbb
std
call
mov
mov
enter
fs
sub
je
fs
mov
jg
std
fwait
mov
push
xorl
in
inc
xor
es
xchg
hlt
das
cmp
fsubrl
inc
ror
ret
pop
cs
pop
pop
mov
ljmp
clc
sbb
sbb
into
jge
lods
or
mov
xchg
add
cmp
push
push
mov
int
dec
xchg
ljmp
push
mov
ret
inc
test
xchg
outsl
pop
and
inc
es
inc
ss
cmpsl
stos
out
out
ljmp
jmp
outsl
outsl
mov
adc
jmp
out
add
arpl
xor
inc
cld
jmp
rcr
sbb
jp
in
mov
aas
jle
bound
fwait
ss
cltd
push
push
loopne
jl
jg
scas
mov
pushl
out
imul
cmp
jo
adc
push
push
adc
aad
fcomip
roll
lahf
scas
pop
movsb
test
sarl
jo
jb
push
push
imul
shll
or
sbb
mov
sbb
lods
mov
pusha
push
push
into
xor
add
out
clc
inc
and
outsb
popf
imul
jns
mov
je
mov
jmp
ffreep
mov
jle
adc
jg
fidivs
fisubl
js
mov
imul
or
inc
rorb
shll
sarb
jns
arpl
in
or
jmp
lret
mov
jne
xor
sbb
ja
addr16
mov
add
lods
dec
decl
cmp
adc
adc
test
popf
insl
add
mov
addr16
jg
jmp
cli
imul
inc
xor
and
mov
pop
inc
adc
mov
inc
and
xchg
inc
stc
inc
pop
fistpll
push
add
mov
dec
in
jmp
test
mov
mov
mov
add
aaa
pop
fdivr
dec
gs
sbb
fdivrs
add
cmp
adc
pusha
fnsave
or
push
or
jmp
imul
jns
add
sbb
add
sti
sbb
fistpll
add
mov
xchg
out
jmp
dec
repnz
jno
jno
mov
aam
fisubrl
ljmp
aas
inc
leave
mov
mov
lret
test
jbe
mov
or
scas
lret
push
clc
mov
push
sbb
xchg
lea
decl
test
sarl
shll
xchg
inc
repnz
and
push
and
pop
adcl
ljmp
jge
dec
lea
sti
adc
mov
lds
mov
pushl
dec
cmp
clc
xchg
push
sub
mov
ljmp
push
xlat
dec
sahf
jp
loop
jbe
call
clc
pop
push
xchg
addr16
rcrb
mov
push
inc
cmp
call
inc
add
mov
mov
push
or
int3
bnd
or
fidivs
adc
ljmp
lea
data16
leave
fstpl
pop
negl
or
lcall
dec
or
inc
jne
add
push
cmp
popf
pop
xor
lods
lods
xor
push
repz
stc
or
xchg
push
add
sbb
pop
getsec
ja
pop
mov
push
pop
int
in
dec
dec
call
loopne
jle
pushf
pusha
lret
stc
fcom
fadds
or
sbb
jmp
int
int
pop
mov
pop
and
js
inc
jbe
xlat
cmp
arpl
and
incl
cltd
dec
xchg
lret
hlt
outsb
jne
mov
scas
xchg
ljmp
insb
sub
das
mov
outsl
fimull
aam
mov
push
outsl
xchg
or
jmp
and
mov
clc
mulb
sbbb
jge
mov
leave
inc
in
call
adc
imul
mov
fsub
fucomip
es
cwtl
loopne
js
and
dec
mov
jbe
negl
sbb
dec
sbb
inc
pushf
sub
stos
mov
mov
ds
mov
incl
xchg
or
sahf
imul
xchg
lea
xchg
lcall
data16
and
loop
lahf
test
leave
ljmp
and
clc
int3
or
ljmp
aad
les
mov
jo
ds
dec
mov
lcall
insl
inc
fisubs
cld
add
dec
lret
gs
test
clc
pop
ss
insl
pop
cmc
ja
dec
add
adc
inc
cld
mov
sbb
je
call
std
jp
call
add
inc
add
mov
add
rcll
ljmp
xchg
sub
adc
iret
add
sbb
jmp
mov
push
jl
pop
stos
stc
xlat
lahf
jecxz
mov
ljmp
cmpsl
repz
test
andl
shlb
sbb
incl
xchg
les
pop
lret
xchg
pop
popa
mov
push
pushw
inc
push
inc
movb
sahf
js
repnz
int3
and
mov
sub
or
stc
movsb
imul
cmc
mov
decl
or
cmp
in
fs
mov
test
xorb
sahf
test
inc
sbb
call
push
enter
mov
imul
add
fmuls
iret
pop
sti
ret
mov
jmp
int3
cmpsb
push
pop
inc
cmc
addl
ss
jns
shl
add
divl
dec
mov
xor
rorb
in
or
fnstenv
mov
cltd
mov
ljmp
fiaddl
cmp
orl
lock
sahf
dec
pop
mov
mov
mov
ficomps
data16
ljmp
xchg
movb
cmpb
and
jmp
adc
insb
aam
iret
aas
push
jg
mov
mov
lcall
ljmp
inc
movsb
lcall
xchg
int3
scas
jl
adc
rcrl
fisubrs
adc
adc
or
inc
mov
pushl
sti
iret
or
iret
or
jp
or
cwtl
les
aaa
std
mov
mov
mov
push
fiadds
out
movsb
ds
xchg
call
pop
inc
in
mov
mov
jae
lods
pop
imul
je
addr16
jns
aaa
adc
repz
jmp
add
stos
mov
decl
mov
mov
xchg
jnp
aad
repnz
das
maskmovq
mull
lcall
mov
repz
ficompl
and
in
sub
data16
nop
jno
loopne
out
and
jmp
add
mov
inc
das
loopne
adc
pop
dec
cld
xchg
xor
std
in
popa
ficomps
call
inc
popl
push
push
mul
cld
lods
dec
test
inc
xor
xchg
dec
out
xor
incl
imul
movsl
pop
push
lcall
pop
and
mov
sub
push
les
add
cli
fildl
adc
cs
lock
test
std
bound
push
and
jmp
lods
cltd
fidivrl
mov
rclb
sub
vpunpcklbw
addr16
pushl
ja
mov
pop
xor
pop
mov
gs
fs
int3
dec
add
aam
dec
add
gs
push
push
nop
or
and
cmpsl
mov
iret
jmp
mov
inc
gs
inc
hlt
mov
xor
outsl
mov
ljmp
stos
and
mov
jnp
sti
mov
out
adc
xchg
icebp
pop
imul
daa
lcall
lods
sahf
cwtl
mov
andl
aas
int3
mov
xor
push
repnz
push
out
xlat
xchg
sub
jmp
cwtl
popa
bound
movsl
xchg
aam
pop
decl
mov
arpl
stc
sbb
fidivl
movsl
sub
pop
push
icebp
leavew
push
add
shl
jl
loop
and
and
lods
mov
decl
and
pop
into
mov
fnstsw
push
mov
data16
cmp
pushl
gs
and
adc
leave
mov
sti
repnz
arpl
xchg
jo
jne
ret
push
pushl
xchg
aam
push
sbb
ret
add
jmp
xchg
in
xchg
dec
ret
xor
xchg
pop
insl
dec
out
cltd
push
and
push
mov
js
xor
testb
push
pop
mov
call
jo
mov
test
adc
xor
and
and
loopne
mov
mov
pushl
mov
lcall
orl
adc
ljmp
mov
ds
cmc
push
dec
push
adc
fidivrs
jmp
sar
sbb
int3
sub
jecxz
out
adc
sbb
mov
pop
add
jo
cltd
in
lret
pushl
outsl
jmp
aad
scas
jno
mov
fcmovb
mov
out
sbb
ja
jo
mov
lret
lcall
in
mov
mov
push
scas
mov
das
movsb
cmc
or
xor
push
icebp
divl
mov
push
pushf
jmp
mov
jno
xchg
add
jmp
imul
pushf
adc
pushl
mov
decb
push
or
lcall
add
lcall
jl
xchg
mov
mov
fadds
or
jecxz
mov
aaa
adc
ljmp
je
xchg
mov
cmp
je
mov
bound
movsb
imul
push
es
enter
call
cmp
jl
adc
xlat
loop
out
insl
movsl
div
mov
mov
mov
popl
jmp
movsl
cmp
sbb
push
and
xlat
icebp
insb
xor
add
jge
mov
jne
jns
sbb
sar
lcall
dec
aaa
roll
icebp
in
pop
loopne
in
fstl
push
mov
xchg
inc
test
mov
mov
mov
pop
xor
mov
and
nop
lods
setb
ret
scas
jge
lcall
mov
pushf
sbb
push
xor
sbb
movsl
rcrl
mov
pushl
out
jecxz
jne
push
or
jg
nop
outsb
scas
push
cwtl
cltd
scas
int
sbb
ret
xlat
test
cmp
popa
inc
andb
pushl
cmpsl
inc
jl
add
sar
inc
cmpsl
pop
mov
out
pop
mov
lods
adc
fcomip
inc
push
ds
andb
cwtl
xchg
fldcw
mov
jg
sbb
call
cmp
rcrb
xlat
pusha
imul
ljmp
mov
stos
pushl
mov
xlat
jmp
stos
jno
sub
sbb
jnp
sti
adc
jmp
jge
not
jle
cmp
inc
pop
call
je
ss
xor
push
insl
xchg
xor
or
and
cmp
pop
jg
mov
scas
or
jno
dec
dec
mov
mov
or
sbb
aad
inc
inc
fbstp
dec
mov
incl
enter
pop
testb
mov
add
jge
loopne
mov
push
sar
leave
out
not
mov
sub
sbb
xor
mov
pop
cmc
decl
sbb
daa
pop
add
ds
mov
test
out
incb
sbb
das
sub
sahf
pop
sub
cmp
in
or
ljmp
lea
mov
push
das
sbb
cs
aas
jae
add
gs
call
cwtl
ds
fisubrl
int3
cmpsl
jae
mov
push
leave
ret
jo
repnz
out
dec
notl
fiadds
insl
inc
mov
jb
and
xchg
mov
ret
pop
ficompl
cmp
sbb
cmp
xchg
mov
shlb
lcall
mov
pop
xchg
cmpsb
jmp
lcall
xor
xor
mov
adc
movsl
cld
stos
stc
or
jmp
fstpl
mov
cli
aaa
dec
aam
inc
mov
ficompl
fsubl
stos
push
sbb
roll
push
imul
jmp
pop
mov
inc
adc
xor
ljmp
dec
pmulhw
bound
das
adc
or
jno
lea
xchg
or
xor
lcall
sub
mov
bound
adc
mov
ds
jmp
ds
divl
call
popf
out
cmp
mov
push
js
inc
popf
sbb
outsl
cmpsl
movsb
out
cli
sub
fnsave
lea
addr16
out
mov
jnp
mov
jge
pushl
nop
fiaddl
pop
test
bound
inc
mov
ficomps
test
into
lock
or
mov
push
mull
sub
push
sub
sub
faddl
jg
cmp
push
test
sub
cld
sbb
ds
testb
mov
inc
mov
or
jg
in
scas
mov
scas
mov
lcall
add
divb
dec
adc
pop
mov
subl
mov
sub
cli
repnz
jmp
mov
repnz
bound
outsb
xor
mov
mov
hlt
aad
incl
std
cmp
lds
test
xchg
and
mov
add
nop
pushf
xchg
aad
pushl
loope
cmp
push
or
push
clc
jg
jge
sbb
ljmp
lods
mov
lcall
in
xchg
aam
repz
dec
push
shll
in
fldcw
int3
xchg
iret
push
aam
pop
in
xor
dec
cli
cld
rcrl
push
popf
inc
xchg
cmp
cmp
or
stos
aam
mov
and
icebp
xor
adc
andb
and
cmp
lods
jmp
cmpsb
xchg
pushf
rcll
or
es
nop
pop
mov
scas
mov
lock
push
dec
mov
pop
mov
dec
les
iret
sbb
data16
xchg
lcall
dec
xchg
dec
lock
es
sbb
fcmovnbe
aam
das
or
decl
mov
push
int3
hlt
pop
push
cmp
sbb
ss
inc
jmp
iret
push
sbb
movsb
cmc
enter
out
cmp
ljmp
sbb
lcall
adc
lods
sbbl
pushf
push
call
xchg
fiaddl
pop
iret
arpl
insb
cmp
dec
cmp
dec
mov
pop
cmpsl
inc
std
add
and
out
incl
in
bound
xchg
popf
jae
dec
or
and
push
insl
xor
or
lcall
xorb
shlb
bound
adc
jecxz
inc
nop
or
popf
push
cli
iret
jp
fstps
or
jne
test
sbb
inc
pop
adc
jmp
cmp
shlb
adc
jb
addr16
fcomip
pop
sbb
loop
mov
push
sbb
mov
inc
pop
leave
outsl
scas
pop
jbe
insb
pop
push
ljmp
lods
jmp
nop
cmp
fnstcw
out
jbe
pop
std
mov
decb
inc
mov
into
or
arpl
xchg
dec
add
inc
xchg
out
push
adc
sti
popf
cmp
ljmp
iret
cwtl
ret
outsl
mov
inc
push
adcb
mov
xor
jmp
test
cmp
stos
ret
jge
xchg
enter
pop
cltd
call
push
ljmp
test
ret
call
or
pop
lfs
lock
icebp
sub
mov
decl
xchg
mov
inc
dec
loop
adcb
loop
imul
in
mov
push
daa
int
jge
sbb
rol
or
imul
ljmp
into
stos
jne
mov
mov
push
or
stos
lods
imul
pop
cmc
subb
js
cmpsb
scas
arpl
out
int
stc
cld
xor
push
or
xchg
push
pop
int
decl
sbb
push
xchg
pop
mov
inc
dec
xchg
movsb
cs
xchg
jmp
push
pusha
mov
inc
xor
cli
dec
mov
subl
sub
jge
add
dec
sbb
mov
lods
pop
inc
enter
incl
jb
fldcw
ffreep
mov
fstpt
mov
mov
pushf
adc
xchg
ja
dec
pop
imul
decl
loopne
adc
lret
fsts
test
inc
pop
icebp
jle
test
lock
sbbb
pop
cmp
ljmp
sbb
adc
cmpsl
and
pop
add
das
adc
cmp
and
inc
shr
aam
lcall
ljmp
insl
nop
jmp
decl
push
lcall
sar
addl
roll
jg
jmp
jp
cmp
jo
das
and
loop
sbb
mov
aaa
mov
call
dec
push
mov
ret
fstpt
adcl
movsl
xchg
inc
cmpsl
fcompl
test
ss
loop
movsl
xchg
push
adc
fcmovb
ffreep
cwtl
or
shll
lods
in
in
jle
jg
fcomp
sbb
or
cmp
mov
in
dec
andb
int
pop
push
repz
decl
lock
clc
addl
xchg
push
mov
sub
loope
cmp
test
inc
fisttps
pop
xor
imul
in
scas
cltd
add
xorb
or
fbld
loope
cmc
add
in
ljmp
cwtl
call
repnz
and
pop
pop
and
pop
pop
dec
add
xlat
sbb
xor
jnp
xlat
notb
mov
jmp
add
push
jno
sbb
cmp
pop
sub
in
sub
imul
pushl
loopne
add
fcomp
insb
jbe
aas
xchg
pop
adc
push
xor
out
jb
cmp
sub
cmp
fdivl
dec
repz
test
repz
fstpt
push
sbb
cld
push
int
data16
jl
xor
mov
test
fcomip
jg
stos
adc
sahf
data16
inc
pop
pushf
call
sbb
pop
adc
and
loop
clc
fistpl
xchg
jmp
sbb
loopne
imul
ljmp
mov
cltd
push
arpl
in
cmp
movsl
push
cmp
sbb
clc
lahf
mov
ret
aam
push
sbb
mov
push
cmpsl
out
cmpsb
jo
lcall
test
sbb
rol
cltd
dec
iret
mov
repnz
mov
mov
push
aad
lcall
fdivr
inc
repz
arpl
and
dec
fildl
andl
repz
jmp
push
sbb
jnp
sbb
out
fistl
sub
adc
push
das
mov
imul
cmc
mov
movb
dec
xchg
or
xor
dec
lea
out
cmp
orb
idivl
repnz
out
outsb
jae
mov
out
mul
jg
cmp
incl
mov
movsb
cmp
pop
pop
cmp
xchg
loop
lock
fcomip
cld
notb
mov
mov
lea
ds
adc
push
decl
mov
std
aad
sbb
push
mov
push
inc
pop
jae
sbb
in
sahf
xchg
into
or
pop
pop
add
or
push
aam
mov
mov
inc
call
lret
pop
iret
xor
or
pop
cmp
pop
in
sarb
jno
hlt
js
lret
add
xchg
sub
dec
fmul
inc
add
xchg
negl
bound
std
sub
ficoms
fdivs
call
mov
sbb
cwtl
jge
push
xchg
outsl
rorl
mov
call
mov
push
decb
jmp
cmp
pop
pop
enter
jns
push
fcmovne
xor
push
cld
lcall
daa
dec
xchg
mov
push
xchg
jecxz
mov
call
leave
mov
push
adc
jmp
popf
cmpsb
fisubl
shlb
in
sbb
add
cmp
mov
adc
and
pushl
in
lock
or
sbb
push
jo
dec
mov
push
inc
incl
into
imul
fcmovu
pop
cli
mov
mov
dec
push
iret
xchg
xchg
add
mov
push
mov
cmp
imul
cmp
cld
sbb
pop
mov
insl
divps
call
mov
loope
ljmp
mov
pop
subl
test
adc
je
sbb
in
ficompl
push
ret
and
adc
ljmp
movsb
sahf
mov
call
or
sbb
mov
mov
out
clc
jg
jbe
jne
inc
mov
fmulp
loopne
subb
pop
mov
xchg
int
out
mov
push
data16
fld
loope
stos
mov
decl
xchg
out
int3
add
inc
lret
and
movsb
out
cmp
jmp
push
jg
and
or
sti
xchg
popa
loop
pop
lds
sub
lcall
pop
cmp
jle
das
mov
pop
mov
sbb
adc
sbb
mov
std
adc
das
insb
sub
popf
adc
sub
andl
call
sbb
push
dec
or
mov
loopne
decl
dec
aam
push
leave
pop
les
add
xchg
xchg
xor
mov
in
adc
mov
fcmovu
mov
ss
sbbb
and
adc
outsb
dec
cli
push
and
sahf
dec
inc
mov
andl
imul
cmc
inc
stos
cmp
xor
lcall
mov
das
and
loop
daa
mov
repz
push
leave
imul
mov
sbb
ss
xor
lds
sahf
inc
push
pop
loopne
rcr
ret
aas
sub
cltd
mov
cli
push
cli
std
cmp
out
fwait
hlt
add
push
mov
decl
cmp
into
mov
fldcw
sbb
in
or
imulb
cmp
into
jecxz
jbe
pushl
hlt
sub
jb
arpl
fiaddl
stos
popf
pop
dec
pop
movsl
jg
push
scas
cmp
cwtl
mov
fwait
adc
js
mov
ljmp
jno
dec
xchg
jno
cmp
js
cmpsb
scas
sbb
call
inc
sub
dec
test
fstp
inc
stos
inc
shlb
daa
imul
in
add
ja
or
xchg
pop
cmp
mov
ljmp
or
icebp
jno
sub
les
and
and
pop
out
mov
lds
jmp
loop
sub
pop
aad
ss
mov
mov
sbb
mov
int3
or
xlat
sbb
pushl
popa
xor
ss
rolb
xor
adc
mov
jge
fimuls
pop
jb
and
xor
das
cli
pop
incl
push
sti
dec
dec
mov
and
scas
push
nop
add
pop
jb
mov
ret
mov
pop
in
jl
jl
out
xor
fimuls
mov
sbb
jmp
jae
stos
jae
lods
loop
or
dec
cmp
lret
shrl
mov
jle
popa
negb
mov
sbb
call
push
aas
inc
jns
jmp
test
sub
sub
dec
xchg
cmp
js
cmp
or
jle
decl
push
enter
adc
jbe
lock
dec
mov
fs
popa
mov
push
pop
hlt
repnz
ljmp
js
add
and
test
pushf
test
repnz
dec
loope
sbb
aas
push
popa
and
sub
imul
test
cwtl
or
lahf
repnz
dec
pop
mov
frstor
jg
sub
outsb
das
pop
cltd
outsb
ja
xor
jg
data16
ljmp
jmp
xlat
psadbw
xor
fwait
dec
add
ja
leave
es
shll
stos
mov
mov
call
cltd
cmpsb
decb
cmp
fsubl
lea
roll
push
rcl
sti
jb
xor
scas
call
rcrl
or
push
pusha
js
mov
mov
adcl
negb
push
rclb
mov
pop
adcl
loop
hlt
push
cmp
call
jecxz
fsub
adc
lahf
aas
packssdw
adc
push
sub
dec
and
fistl
or
stc
fprem1
clc
test
das
inc
outsl
in
leave
xchg
or
hlt
jmp
repnz
xor
pop
fadd
pop
pop
xchg
roll
pop
daa
inc
idiv
ljmp
rcrb
mov
xchg
mov
push
mov
push
mov
in
mov
add
push
mov
clc
aad
and
xchg
sti
sub
stos
jmp
scas
test
or
std
rolb
jo
add
adc
and
fisubrl
ds
rorl
incl
cmpsb
jne
push
test
and
jns
into
add
inc
add
mov
cld
mov
in
out
int
lret
arpl
fmul
xor
pop
rcrb
ljmp
xor
inc
adc
jns
sub
dec
cmp
jo,pt
loopne
por
jnp
jp
and
xchg
loope
call
mov
rclb
mov
xchg
mov
sar
ljmp
xchg
pop
outsb
push
pop
in
fidivrl
test
fildl
aaa
push
jle
ss
push
jbe
mov
cld
mov
aad
mov
icebp
stos
jbe
inc
sbb
icebp
lret
ja
jge
icebp
lods
pop
loopne
ffreep
arpl
dec
test
fsubrl
aad
fcmovnu
ljmp
cmp
in
pop
jecxz
lods
les
lea
add
jg
mov
mov
adc
xchg
mov
xchg
testb
test
popf
je
call
push
or
lea
push
xchg
mov
int3
push
in
ds
in
int
cmpsl
pop
and
decl
mov
jmp
push
inc
jb
popl
movsl
adc
jb
dec
or
push
in
cs
sbb
pushl
adc
sub
and
xor
nop
shll
push
aaa
sbb
push
popa
pop
add
int
cmpsl
cmpsb
icebp
inc
mov
dec
xchg
rcl
xchg
popa
add
sbb
call
fmuls
jle
add
inc
popf
jbe
mov
mov
push
daa
hlt
lods
ret
sub
insb
sbb
dec
aaa
sti
lcall
in
fldenv
sbb
and
pop
mov
mov
lret
push
pop
stos
cmpsb
adc
int3
enter
out
inc
scas
jno
pop
push
jg
incl
sub
test
aaa
int3
popa
dec
add
push
lret
cld
popa
enter
pop
decl
stc
and
pop
call
clc
cmp
les
mov
cli
into
lock
dec
xor
sbb
in
iret
daa
data16
adc
jmp
daa
stos
call
xor
jo
repnz
adc
mov
push
push
jmp
cmp
in
sub
out
fwait
fwait
and
dec
inc
sbb
ficomps
rcr
cmp
ljmp
sbb
fildl
stc
or
cltd
mov
jb
aas
pop
mov
mov
rclb
mov
insl
or
mov
jne
cmp
adc
sub
cs
push
stos
movsl
adc
cli
jl
dec
jno
mov
jge
sub
fwait
cmpsb
sbb
dec
or
adc
mov
lcall
or
ja
dec
pop
sub
faddl
lret
jae
fs
ljmp
xor
in
ja
aaa
mov
push
pop
fnstenv
je
fists
and
inc
pop
and
repnz
adc
mov
mov
pushl
lcall
and
xchg
imulb
push
or
mov
call
or
xor
imul
pop
ds
sbb
lds
xor
sbb
ljmp
gs
push
out
insb
mov
xlat
insl
or
lods
xchg
dec
push
cs
enter
pushl
das
jmp
or
test
aad
cmp
clc
out
sbb
popf
xor
push
xchg
and
xlat
repz
lcall
push
xchg
xchg
cltd
push
xchg
jno
xor
mov
into
in
xchg
dec
push
xor
scas
decl
jge
push
inc
jl
push
or
cmc
jnp
stos
or
call
repz
fs
sbb
les
mov
clc
mov
inc
jbe
rolb
mov
mov
inc
jb
inc
repnz
push
mov
pop
sbb
pushf
mov
pushl
cmp
mov
insl
pop
dec
popf
lock
or
dec
dec
out
push
mov
fbld
aaa
stos
pushl
sbb
scas
add
jg
ja
cs
mov
loope
push
dec
adc
sbb
push
sbbl
mov
fimull
xchg
aad
sub
sar
ljmp
sub
outsb
mov
cwtl
and
or
mov
and
test
mov
sbb
dec
pop
imul
in
incl
sahf
cmp
inc
mov
sub
daa
stos
push
aas
pop
and
ljmp
clc
decl
pop
ljmp
jge
dec
xor
sbb
or
call
sub
mov
sbb
sub
dec
and
add
pop
adc
push
xchg
call
aas
cltd
add
mov
insl
aaa
fldenv
jecxz
arpl
leave
mov
mov
sub
xor
jb
inc
dec
sub
mov
sbb
ss
jmp
jne
cwtl
sub
adc
sbb
pop
nopl
decl
je
xor
jl
aad
nop
test
mov
mov
outsl
adc
or
call
cld
xorb
pop
test
cmp
adc
cmpsb
scas
xchg
push
adc
test
jns
jb
dec
mov
out
or
sbb
leave
clc
xchg
mov
pop
pop
push
jmp
repz
cmp
xchg
and
xchg
ds
aam
mov
dec
mov
cld
sarb
inc
jnp
xchg
repnz
jnp
xchg
fisttpll
lcall
imul
add
aas
std
xchg
mov
in
jp
in
iret
jecxz
test
or
lock
jmp
push
in
pusha
add
mov
out
cmp
mov
jg
lret
fidivl
rcr
hlt
sahf
fnstsw
cmp
jne
outsl
cli
push
adc
xchg
nop
mov
mov
mov
or
sti
and
jmp
sbb
push
loop
ss
jbe
and
sbb
ljmp
das
jg
pop
aad
aas
cmp
scas
ficompl
push
mov
and
lret
repz
call
or
movsb
cmp
cmpl
jae
fiadds
mov
jnp
mov
fcomip
lcall
rorb
dec
cmp
in
or
jns
je
sub
cmp
enter
xor
jmp
adc
push
imul
jo
out
jecxz
test
adc
repz
sbb
jns
repz
cmpsl
ljmp
inc
push
jmp
pop
or
mov
mov
outsb
nop
sti
sub
push
jnp
inc
mov
inc
jne
cmp
sahf
add
bound
jl
mov
sbb
mov
push
dec
divl
xor
and
mov
xor
testb
test
jmp
shlb
sbb
sub
aaa
and
cmp
mov
jnp
rorl
in
add
imull
call
adc
idiv
mov
push
aas
lea
out
arpl
loope
sub
aaa
add
pop
daa
dec
mov
lcall
push
xchg
std
loope
pop
xor
mov
mov
dec
sbbb
fldt
jno
popa
mov
lods
sub
jnp
int
dec
rorl
incl
in
adc
int3
mov
jae
les
adc
jae
sarb
fisubl
push
inc
fcomps
mov
sahf
sbb
sti
xchg
movsb
mov
add
call
or
and
dec
movsb
jle
les
fcomip
ljmp
hlt
adc
fs
xchg
fidivrs
add
rorb
test
or
call
clc
and
ds
and
movsb
sbbb
lods
xor
test
ja
add
fisubl
mov
cld
push
and
mov
je
cs
mov
jbe
fiaddl
sarb
pusha
xor
test
and
or
add
xchg
cmpsl
rcrb
adc
pop
std
fmul
sti
mov
jne
lahf
mov
call
and
loop
test
popl
mov
jno
insl
jno
gs
not
push
call
adc
xor
inc
mov
pop
fdivrl
ljmp
decl
or
adc
xchg
clc
sahf
cs
inc
stos
or
sub
sbb
call
call
fsubr
or
icebp
cwtl
rcrl
es
pop
push
xor
sub
out
mov
and
pop
inc
and
setg
add
in
add
dec
xchg
xor
in
je
loop
cmp
lcall
adc
out
inc
push
loope
movsb
mov
fwait
and
adcb
fmull
cli
incl
add
sbb
outsb
xchg
xchg
adc
mov
xor
pop
push
popf
adc
jecxz
adc
movl
lcall
jae
call
cld
insl
fwait
test
xchg
adc
add
mov
push
fistl
xor
sub
xor
popa
xor
push
and
ret
incl
cld
and
in
adc
scas
jae
mov
jbe
jg
fwait
push
stos
push
jo
sahf
jne
mov
into
inc
sbb
cld
shrl
out
jno
xor
pushl
pop
stos
sti
add
movsb
lods
test
les
adc
jg
lods
xchg
out
das
jle
stc
adc
insl
push
sub
decl
outsl
fs
mov
lds
mov
mov
sub
mov
mov
mov
jmp
xchg
dec
xor
pop
jbe
push
cltd
ja
sar
mov
and
test
decl
xor
lock
nop
aaa
add
lret
dec
jg
jg
pop
sbb
cmpsb
or
mov
inc
adc
lret
imul
or
jbe
push
jo
xor
sub
scas
mov
jno
dec
sti
ja
xchg
insl
xchg
subl
sbb
js
mov
lcall
idiv
ljmp
and
mov
push
inc
inc
jl
outsl
ja
cmpsl
aaa
repz
andb
jp
int
jb
sbb
das
scas
leave
cmp
pop
mov
push
dec
iret
lock
sar
add
push
or
xchg
add
jmp
shrb
lcall
mov
cmp
push
scas
shrb
jge
decl
dec
inc
mov
or
inc
stc
gs
xchg
je
bound
das
pop
call
test
sbb
and
clc
push
and
xor
les
mov
ss
testl
mov
sbb
leave
pop
mov
sbb
lcall
mov
mov
dec
add
dec
mov
shrl
add
roll
repnz
jecxz
rcrl
aad
dec
pop
mov
imul
call
jmp
and
push
cs
pop
loopne
xor
and
shll
mov
mov
lock
sub
int3
lods
fidivrl
je
xor
dec
push
loop
gs
mov
mov
fdivrs
push
xchg
mov
mov
hlt
jp
pop
int3
add
fnstsw
and
fisubrs
mov
push
jnp
push
jg
sbb
fsubl
and
xchg
mov
mov
pop
shll
call
repz
mov
inc
adc
lcall
fiaddl
fs
ja
incl
dec
jp
test
insb
in
fwait
pusha
jge
dec
sti
nop
mov
or
dec
fists
les
lcall
das
fwait
bound
dec
jns
mov
clc
test
in
and
outsb
add
decl
rolb
subl
jo
lods
sbb
in
ljmp
and
xor
call
jle
dec
push
and
dec
out
or
mov
setae
mov
sub
cwtl
cld
xor
jns
scas
sub
call
jmp
sbb
pop
lock
dec
imul
loope
addl
jmp
dec
std
jmp
loopne
xor
cmpsb
fcmovb
int3
cmp
or
add
sub
mov
xor
test
and
xor
call
pushl
dec
gs
out
mov
add
jne
lods
call
jb
cli
decl
xor
dec
lds
adcl
lods
dec
push
inc
out
pop
or
cli
mov
loop
out
adc
in
gs
int3
in
fidivs
dec
cmovs
inc
mov
lahf
ret
adc
pushl
nop
fs
dec
ljmp
pop
popf
cmp
cmp
or
incl
lea
mov
and
push
jnp
stos
dec
ja
cwtl
lahf
fcmovnu
xor
hlt
jmp
xchg
insl
jns
ds
pop
cld
pop
aas
push
bound
ficomps
js
cli
xchg
dec
insb
fildll
mov
out
test
jg
xchg
xor
fwait
out
iret
sub
sbbl
movsb
cwtl
pop
sti
loope
lods
dec
push
mov
decl
fiadds
aad
mov
jmp
push
iret
sarl
incl
push
mov
fdivs
xchg
mov
and
lret
fsubrl
adc
jnp
iret
fstpl
leave
xorb
push
jno
dec
adc
cwtl
jns
sub
outsl
pushl
add
lods
jecxz
adc
xor
lds
xchg
in
data16
mov
daa
inc
pop
xor
push
hlt
stc
sbb
out
les
lds
pushl
xchg
ffreep
adc
pop
inc
subl
inc
hlt
add
sbb
fistpll
jmp
out
jns
adcb
push
aad
fcompl
in
xor
adc
fcmovb
cmpl
ljmp
fs
add
dec
jp
test
jl
inc
sbb
out
pop
cld
mov
cmp
aas
pusha
xor
ret
inc
fs
ljmp
in
pop
push
inc
roll
mov
in
push
dec
xchg
jne
test
push
out
cmp
lahf
scas
lret
xor
cmp
mov
dec
push
push
outsl
inc
cmpsb
test
gs
decl
pop
aaa
xor
and
inc
mov
shlb
xchg
jp
mov
call
decl
or
cmp
adc
out
inc
in
test
jb
cmp
cmpsl
push
mov
lcall
fiaddl
xlat
add
adc
lcall
dec
adc
decl
mov
int3
cmc
cs
sbb
xlat
test
div
inc
mov
push
lods
add
incl
shrb
push
mov
add
mov
test
lahf
cmc
jmp
daa
lock
les
jne
add
out
or
push
fistpll
or
push
jbe
adc
mov
and
dec
mov
outsl
fisttps
mov
outsl
add
ds
sbb
dec
dec
jmp
jae
call
or
xor
jg
movsl
enter
sbb
jle
sub
push
out
ljmp
insb
push
sbb
push
xor
or
push
push
loope
xor
pop
jmp
add
inc
jb
loopne
in
movsl
sub
divb
mov
fs
stos
ljmp
push
insb
add
and
jns
adc
outsl
dec
shrl
jmp
lcall
add
test
lret
or
scas
pusha
xor
sub
and
lods
mov
ret
xlat
fcmovnu
mov
add
mov
dec
lcall
fidivrs
pop
fidivrl
sbb
xchg
pop
sub
lock
aad
sbb
lcall
and
decb
js
push
mov
dec
cmp
ret
call
adc
jne
push
jmp
repz
mov
pop
jg
inc
mov
push
cs
out
push
int3
mov
fst
jno
out
push
in
cmpsl
adc
movsb
mov
jmp
pop
es
mov
xchg
mov
scas
test
into
mov
popa
push
jle
ljmp
inc
shrb
push
out
push
pop
fs
adc
fstps
pop
loopne
call
lret
add
fldl
outsb
pslld
pop
push
rcl
into
sub
std
xchg
lods
cmp
mov
int3
jmp
sub
sti
push
movsl
adcb
jmp
dec
bound
insb
dec
out
jle
push
aam
mov
cmp
pop
pop
movsb
fnstsw
hlt
lods
or
mov
push
jo
push
pop
sbb
aas
push
jg
pop
popa
lods
lock
enter
lods
cmp
outsb
add
imul
inc
dec
sbb
lock
cmp
push
out
sbb
mov
push
push
push
push
mov
incl
mov
xchg
pop
loopne
int3
ror
pop
pop
out
mov
adc
fisubs
sti
test
sub
jl
xchg
stc
xchg
sub
xor
jmp
mov
mov
es
stos
call
lds
hlt
pop
ss
mov
out
cli
sbb
stos
cmp
aas
mov
adc
mov
lcall
imul
add
jecxz
icebp
cmp
pop
rcll
lcall
call
pop
inc
xor
jmp
sti
mov
jb
push
out
jno
adc
cmp
in
jg
addr16
or
xor
enter
lds
cli
stos
lret
ljmp
clc
sbb
insb
sbb
fidivrl
loope
lods
xor
inc
aam
cmc
jge
cmp
xor
sbbl
xor
lods
or
dec
lods
insb
neg
xchg
mov
jb
movsb
mov
ljmp
rep
jle
sub
adc
xor
and
scas
xor
and
add
imul
mov
lcall
je
int3
mov
or
pushl
sbbl
addr16
les
mov
imul
scas
jg
xchg
cs
aad
clc
sahf
in
dec
xor
jmp
out
pop
ret
push
rcl
jmp
rcrl
imul
lods
into
jmp
cmp
inc
aaa
movsl
loopne
bound
fidivl
repz
adc
decl
sahf
loope
xchg
int3
lea
jle
repz
jmp
mov
cmc
mov
or
cmp
adc
xchg
cld
out
mov
pop
in
mov
fwait
in
mov
movb
and
call
je
in
stos
insl
sub
xchg
jg
jnp
push
pop
dec
insl
and
ret
les
cld
out
clc
push
xchg
incl
aad
ret
push
fmul
and
push
add
jl
pushl
adc
mov
and
or
mov
or
pop
lea
pushf
pop
cwtl
dec
insl
xchg
dec
stos
dec
clc
mov
cltd
sub
xchg
ds
ret
fcomip
in
mov
jg
sub
sbb
inc
mov
mov
fwait
push
mov
inc
jp
lods
loop
cmp
add
inc
jg
mov
pop
xor
in
jo
das
test
out
sarl
dec
and
loopne
loopne
incl
adcl
stc
push
pusha
jge
xor
dec
cmp
push
jo
in
and
clc
fwait
popaw
dec
das
adc
jbe
not
jbe
lret
mov
pop
je
jecxz
das
mov
inc
push
mov
cmp
ljmp
sbb
pop
aad
mov
dec
insb
fstps
inc
mov
daa
mov
sahf
cmp
xchg
push
xchg
imul
sbb
pop
mov
jp
insb
jg
clc
stos
std
push
cmc
fsubrl
sbb
pop
pop
pop
xor
mov
std
lcall
popa
mov
ds
sub
fstcw
dec
mov
push
adc
cwtl
div
mov
fistps
out
push
sbb
loop
add
call
dec
mov
shll
ljmp
in
cmp
jmp
stos
ret
iret
ret
fstps
sbb
incl
pusha
cli
and
cmp
mov
mov
push
or
and
incl
sub
adc
push
fs
sub
pop
cmp
push
cmp
ljmp
push
fadds
mov
inc
cmp
mov
gs
imul
leave
add
clc
ja
call
scas
jl
sbb
cmc
push
dec
cmp
mov
arpl
xor
xchg
mov
scas
jmp
pop
ret
inc
xchg
mov
jl
cmp
aad
push
xchg
pop
das
movsl
loop
stos
sub
decl
stos
pop
enter
mov
fs
sub
add
pcmpgtb
enter
cwtl
mov
add
lahf
jbe
mov
sub
pushl
jecxz
fs
imul
cmpsb
and
push
xchg
inc
stos
push
and
aas
sbb
dec
and
cmp
add
rol
push
cmp
jmp
loope
sarb
popa
cld
ss
jns,pn
mov
jge
push
xchg
xchg
jns
jp
mov
std
decl
push
testl
cmp
divb
add
je
incl
cmp
sbb
jle
add
std
incl
xlat
mov
aas
mov
sbb
xor
lahf
and
out
pop
cs
loope
out
cli
dec
aad
cltd
mov
jno
inc
lret
add
ljmpw
popa
adc
pop
lock
sub
bound
out
pop
adc
cli
addl
mov
ss
fdivr
lcall
jmp
mov
ja
mov
mov
mov
cld
call
dec
mov
xchg
adc
ss
pop
adc
jnp
fdivrs
xchg
bound
dec
add
scas
xor
loopne
lods
xlat
pop
icebp
add
sarb
dec
sub
sub
cld
lcall
jns
shlb
ja
mov
pop
ljmp
les
cmpsb
jl
xchg
cli
or
decl
sahf
jmp
rorl
out
fnsave
scas
sbb
sub
push
cmp
incl
xchg
stos
fcmovnu
movsb
mov
fbld
cmp
pushf
dec
sbb
mov
sbb
pop
leave
push
add
sahf
test
mov
in
aad
xor
push
mov
fildll
cmpsl
rol
aam
scas
sub
or
or
jo
mov
cmp
add
mov
xorl
arpl
arpl
decl
daa
push
lcall
pop
push
pop
repnz
cmpsl
ja
adc
test
jnp
xchg
xor
sbb
cmc
dec
sti
sbb
hlt
pushl
sbb
jmp
dec
mov
call
dec
mov
xchg
mov
jmp
incl
xchg
mov
loop
sarb
push
push
sub
xor
cwtl
mov
sbb
cli
xchg
lahf
out
mov
mov
call
sub
mov
pop
xchg
push
inc
push
rol
ret
je
outsl
mov
push
sbb
aas
rorl
lock
test
inc
lds
into
xor
jo
mov
inc
clc
xor
xchg
push
and
sbb
fxtract
hlt
mov
mov
ljmp
add
pop
fidivl
xor
iret
jno
ljmp
lods
sub
mov
test
xor
sub
add
lret
into
jmp
sbb
jne
imull
sub
in
xor
jmp
lods
jae
test
add
ljmp
ret
and
mov
mov
insb
mov
xor
push
cmpsl
stc
imul
out
dec
mov
cmp
mov
ss
shl
insl
cmp
pushl
mov
mov
mov
jbe
stos
testl
inc
imul
test
je
mov
mov
jns
test
ljmp
ljmp
adc
pop
sbb
sub
adc
jne
xchg
out
repnz
xchg
pop
imull
pop
jmp
nop
movsl
lock
decl
mov
ret
cld
mov
push
pop
and
inc
std
pop
je
rcrl
mov
xor
test
leave
jno
jmp
xor
incl
subb
add
mov
or
xlat
pop
jle
mov
ljmp
sbb
mov
and
xchg
loopne
xchg
cltd
ja
clc
add
mov
or
jne
or
outsb
test
adc
mov
add
jg
pop
lret
enter
mov
ja
ljmp
mov
pop
fsubrs
adc
daa
push
subl
ljmp
cwtl
mov
aas
mov
in
stos
es
lea
jns
mov
jg
sub
adc
mov
test
out
dec
pusha
pusha
xchg
test
and
jmp
pop
sbb
in
iret
into
shll
jne
xchg
sub
jb
ljmp
ss
das
out
xchg
jge
mov
push
movl
leave
jb
inc
scas
cmpsb
dec
iret
jmp
pusha
dec
enter
mov
lock
popa
shlb
adc
adc
pushl
pop
dec
fdiv
ds
xchg
inc
rorb
mov
add
fistpll
mov
sub
rcrl
rcrl
xchg
and
int
lcall
push
rol
push
jl
stc
int3
fadd
paddq
mov
push
test
lds
push
dec
fnstcw
pop
icebp
or
mov
or
jbe
mov
sahf
xchg
cmp
xchg
sbbl
or
decl
aaa
sbb
aad
push
mov
ss
dec
or
pop
popa
sbb
ljmp
jbe
or
xor
sarl
imul
sbb
push
mov
adc
test
push
rcrl
mov
adc
movsl
lods
cld
shll
call
mov
push
dec
jne
lds
fisttpl
leave
sbb
arpl
mov
push
mov
sbb
mov
aas
lret
rolb
cs
fcompl
sub
add
xlat
lock
adc
ljmp
lea
pop
in
popf
in
inc
pushf
xchg
push
add
push
jo
insl
cmp
dec
fmuls
dec
adc
inc
das
jg
fldl2e
mov
ficomps
mov
and
dec
movsl
int3
and
push
fimull
lcall
in
or
outsb
xor
pushf
in
mov
pop
out
cmc
push
jbe
jmp
mov
in
cwtl
fnsave
inc
clc
adc
mov
aas
lods
fwait
push
push
inc
cmp
insl
pop
mov
sub
jg
test
lret
add
add
sbb
cltd
xchg
mov
mov
repz
sbbb
mov
mov
lods
push
push
jo
cmp
or
outsb
aad
fiadds
pop
addr16
mov
jmp
push
mov
pop
pop
scas
and
ds
in
inc
jecxz
mov
jb
xchg
daa
mov
push
mov
pop
test
add
push
pop
adc
fs
and
sub
fldt
pushl
sahf
xlat
add
jnp
int
lret
pop
and
xchg
es
push
sahf
jnp
pop
js
sbbb
mov
lret
xor
and
nop
jg
or
ss
insl
jno
jg
ljmp
mov
dec
add
fcom
push
push
mov
push
sbb
fnstsw
lea
cld
test
sub
imul
or
pop
ret
lcall
fists
push
inc
mov
mov
jg
imul
push
mov
xchg
pop
cltd
rclb
or
inc
jmp
mov
in
addr16
ret
movsl
cmp
jmp
jns
inc
xlat
loopne
sti
adc
mov
test
pop
stos
or
scas
ss
cmp
aas
sub
sbb
stos
inc
int
in
in
jg
aas
imul
jmp
call
mov
adc
rcr
shlb
ljmp
jnp
icebp
cmpb
or
mov
inc
aaa
pop
mov
sbb
ficompl
int
aaa
clc
fisubs
fs
in
sbb
jae
xor
mov
xchg
jmp
sar
incl
int3
nop
dec
cmovge
sbb
ficompl
dec
clc
ss
inc
mov
jg
inc
std
jecxz
cwtl
and
popa
mov
dec
gs
ficoml
movsl
pop
fimull
adcl
or
in
jg
loop
cmp
and
addb
rcl
mov
call
movsl
orl
push
xchg
adc
cld
adc
imul
xchg
lcall
dec
xor
lahf
and
dec
inc
dec
dec
in
aam
xor
jmp
fmul
mov
vxorps
push
movsl
mov
or
push
filds
insb
scas
ss
outsb
pop
in
mov
call
pop
xor
xor
add
adc
das
cli
call
jb,pt
jp
push
dec
mov
xchg
mov
push
mov
ds
enter
jb
popl
jmp
push
fisubrs
mov
dec
sbb
adc
lahf
xchg
mov
arpl
jnp
xchg
int
mov
and
mov
pushl
cmp
iret
ret
cli
pop
push
popa
gs
pop
std
adc
cmc
pop
sub
xchg
call
popf
cmp
mov
ret
fists
insb
lock
cwtl
mov
imul
lret
adc
jg
lods
jmp
inc
test
pop
inc
cs
lcall
scas
mov
xchg
adc
idivb
and
roll
push
dec
mov
inc
incl
fadd
push
sahf
mov
push
and
rclb
xlat
pop
push
outsb
add
xchg
insl
lds
loope
ficomps
jbe
mov
ja
cs
sahf
pop
mov
mov
stos
rcl
sub
shll
jno
dec
aad
push
pop
les
mov
xor
addr16
lcall
push
ss
sbb
adc
inc
xor
jg
jb
xlat
int3
cmpsb
mov
mov
popf
add
xorb
cmp
jmp
cmc
ftst
inc
adc
pop
jle
dec
push
cmp
into
iret
cmp
sub
hlt
stc
push
scas
popf
xlat
push
sub
jg
jp
push
or
inc
int
imul
rolb
lahf
aam
jo
out
lcall
movsb
jmp
push
jnp
idivb
and
push
pusha
lret
add
sti
rol
cmp
xchg
mov
les
decl
sbb
inc
and
jmp
dec
xor
mov
mov
call
push
mov
cmpsl
shl
mov
inc
adc
mov
enter
jmp
inc
flds
or
rcll
fcmovu
cmc
incl
sub
xor
sbbl
scas
cmc
insl
xor
das
pusha
cmp
inc
in
test
or
jp
in
and
mov
pop
xor
popa
push
mov
mov
stc
insl
test
mov
std
fidivl
adc
and
jmp
movsl
push
mov
mov
push
inc
insb
aaa
lret
sarl
add
call
push
icebp
nop
lret
add
aas
xor
aas
shlb
adcb
pushl
test
daa
jbe
stc
les
mov
jmp
daa
sbb
popf
push
dec
push
cld
pushl
push
lds
rcr
adc
orb
lea
jp
push
ljmp
or
repnz
add
decl
gs
xlat
pop
sub
outsb
jbe
jmp
sbb
in
dec
icebp
insb
loopne
cmc
rcr
les
test
out
notb
dec
neg
lret
sub
or
add
lcall
mov
shrb
aam
out
xchg
pop
mov
inc
call
push
add
dec
gs
int3
lds
push
push
aaa
rorl
lea
push
adc
jmp
mov
xor
aam
sub
mov
scas
jne
dec
roll
sub
add
divl
mov
maxps
inc
jmp
cmpsb
shlb
xchg
filds
decl
xlat
jo
leave
sbb
jg
push
popa
mov
out
xchg
mov
out
or
jg
inc
stc
movsb
les
adc
imul
ss
int
xchg
pop
addl
adc
test
popa
stos
lahf
push
scas
jge
lret
ljmp
mov
bound
mov
jecxz
in
rcr
xor
push
mov
clc
xchg
aad
and
add
int
mov
enter
add
ljmp
inc
fimuls
add
push
cmpsb
mov
in
imul
adc
mov
adc
jmp
jg
inc
xor
ljmp
jnp
ficomps
mov
inc
sbb
ljmp
ret
push
shrl
frstor
stos
fsubp
xor
aas
bound
jg
mov
cmpl
ss
jl
sti
push
sarl
push
ret
mov
mov
jl
les
cld
and
mov
bts
in
adc
jmp
jo
mov
cmp
mov
ss
aaa
jo
cli
fsts
sbb
ljmp
cli
jmp
add
lret
fstps
xchg
mov
inc
jle
call
mov
mov
addr16
cmp
or
jge
stos
adc
jns
imul
incl
mov
lahf
insb
ljmp
sbb
lea
push
repnz
incl
or
and
jle
shr
fldenv
clc
rol
repnz
inc
cld
icebp
xlat
xchg
jge
mov
lods
mov
cmpsb
rcll
lods
int
pop
int3
rcrl
mov
out
fmull
shl
ss
cvtps2pd
xchg
and
call
sti
sbb
sbb
add
ljmp
mov
ret
xchg
aas
jge
pop
inc
jge
adc
mov
mov
decl
ljmp
push
js,pt
dec
adc
imul
jb
adcb
ljmp
stos
mov
scas
jae
dec
cs
ljmp
aam
cmpsb
xlat
outsl
add
jo
jl
dec
scas
push
movsb
stos
call
mov
or
scas
mov
mov
rclb
int
fdivrl
mov
lea
lcall
or
fdivr
scas
cli
lcall
adc
inc
dec
repz
sbb
or
push
push
mov
aaa
inc
lea
sub
adc
adc
lcall
imull
mov
decl
lret
cmc
dec
popl
xor
int3
sub
popf
mov
push
scas
roll
pushl
shl
scas
subb
add
push
pop
sbb
jno
push
loopne
mov
hlt
jne
jmp
in
lret
push
adc
mov
cmpsl
test
jecxz
into
sti
fcoms
mov
int3
fcmovu
cmp
sub
mov
stc
lret
xor
fsubrp
out
aam
bound
adc
loope
mov
or
jnp
and
jg
cs
out
xor
in
lock
hlt
cmc
adc
dec
jmp
jbe
decl
mov
mov
mov
outsl
ss
mov
xchg
test
incl
movsl
inc
sahf
mov
sbb
decl
insl
mov
test
lock
pushl
pop
negl
lahf
loopne
inc
mov
inc
adc
xchg
enter
and
mov
test
and
popa
inc
adc
shl
jbe
add
loope
rorl
decl
sub
test
cmc
pand
xor
cmpsl
xor
xchg
xchg
mov
lcall
dec
in
cs
js
cmpsb
mov
addr16
xchg
push
test
lcall
jge
push
jl
into
incl
negb
and
mov
nop
fistpll
call
lods
sar
add
push
pop
jae
xor
mov
fadd
pushl
outsb
shll
mov
or
outsl
mov
cmp
adc
xchg
mov
out
repnz
jge
icebp
in
cmc
sub
sarb
adc
pop
xchg
test
and
mov
sub
jmp
pop
insb
jns
mov
dec
cmpsl
mov
push
nop
xchg
pop
rcl
inc
sub
sub
cmp
incl
xor
shrb
lds
push
mov
pop
pushl
sbb
in
mov
pushl
xor
cmp
jbe
xchg
ficoms
js
movsb
cmpsl
push
or
scas
cli
scas
cmp
mov
inc
jmp
jle
add
add
cmp
and
push
orl
inc
sub
pop
or
out
inc
xchg
or
roll
flds
sbb
mov
cs
xchg
or
ret
nop
sbb
dec
cmp
add
mov
call
xor
mov
sub
jl
mov
or
jg
out
xchg
ljmp
js
mov
pop
shl
repnz
sbb
xchg
sahf
pop
adc
ds
arpl
jmp
adc
loopne
cmp
push
jl
pusha
scas
xor
mov
sarb
call
outsl
mov
arpl
fwait
dec
jnp
cwtl
jnp
xor
imul
mov
jmp
push
sahf
rcrb
arpl
add
xchg
fisttps
loop
jne
pushl
mov
popa
enter
lods
sub
inc
movsb
push
sub
mov
jg
pushl
cmp
out
je
hlt
dec
pusha
sbb
aas
push
xchg
or
repnz
cmp
hlt
mov
outsl
xchg
sbbl
xchg
out
jbe
or
call
ficoml
fisttpll
popa
fucomp
movsb
in
xchg
adc
test
int3
sarl
jle
mov
lcall
mulb
push
jle
jl
mov
ss
cwtl
and
jmp
test
loopne
out
loop
into
cmpsb
lret
jp
and
add
loope
pop
test
int3
cmp
ljmp
jae
add
adc
dec
sbb
les
inc
pop
fs
inc
cmp
sbb
xchg
mov
fsts
inc
call
ja
add
out
jns
adc
and
insl
mov
mov
lcall
fwait
mov
mov
adc
mov
dec
pop
adc
cld
inc
mov
cmpsb
jo
xlat
stos
sahf
leave
call
mov
pushf
shl
orl
fs
lret
std
xchg
cmp
inc
outsb
ja
dec
movsb
pop
adc
aad
xchg
stc
repnz
push
add
jo
testb
add
in
ljmp
loope
and
sbb
jmp
subl
leave
inc
sar
xchg
add
pusha
jmp
pusha
and
dec
fistpll
xchg
pop
inc
leave
and
mov
and
pop
addr16
jmp
sbb
cmp
in
shlb
pushf
adc
sbb
push
pushl
or
fstpl
filds
pop
lcall
mov
xor
call
jb
xor
inc
lods
cwtl
mov
add
mov
popf
lods
push
push
pop
repnz
xchg
push
adc
rep
add
ss
dec
cmp
and
mov
inc
xchg
js
push
insb
cs
call
or
mov
in
add
aad
lods
aas
inc
cmp
std
inc
js
lret
aad
ljmp
fisubrs
mov
insl
mov
cmp
mov
jg
mov
testl
xchg
sub
xor
xchg
outsb
push
mov
out
xchg
cld
fadds
mov
cld
in
push
inc
js
pop
cmpl
lcall
jnp
cmc
std
xchg
mov
mov
sbb
test
bound
mulb
lcall
xor
and
test
rcr
mov
and
es
pop
jae
clc
ljmp
sahf
aam
adc
adc
add
mov
pop
stos
mov
pop
sub
xchg
mov
adc
push
out
incl
xchg
add
sbb
testb
jo
dec
popa
dec
and
scas
dec
pop
mov
out
mov
aaa
std
out
mov
cmpsb
add
mov
outsb
sub
decl
and
loopne
scas
call
lds
cmp
outsb
adc
push
xor
cmp
mov
jp
in
scas
enter
mov
or
stos
or
add
push
or
cli
push
cs
not
sub
fisttpl
lds
jg
test
lock
ds
or
fs
sub
lcall
adc
sub
ret
pop
mov
inc
sub
xor
jmp
inc
shlb
xchg
mov
into
push
sbb
mov
mov
jnp
int
lcall
in
mov
call
and
push
mov
ds
rol
xlat
sbb
jp
cmpsb
mov
and
incl
insl
push
and
jp
jo
pop
lock
jmp
sbb
subb
mov
loope
pop
je
mov
or
push
sarb
or
lcall
cwtl
lds
stos
shr
jl
sub
pop
lret
cmp
mov
pop
xchg
testb
inc
inc
leave
in
sbb
and
jo
mov
aas
test
lcall
ja
ljmp
jae
in
roll
cmp
add
call
call
decl
and
popf
adc
dec
inc
jmp
cmpsb
inc
sbb
adc
mov
dec
push
repnz
mov
add
rcrb
jmp
ret
enter
mov
fsubrp
and
pushl
ss
mov
jae
fadd
jp
push
lds
or
cmp
mov
jns
and
loope
pushl
stos
pop
or
arpl
or
test
and
pop
das
decl
lock
mov
pop
sbb
mov
or
mov
das
cli
decl
inc
jl
mov
mov
fiadds
push
cwtl
push
mov
incl
rcrb
in
scas
pop
jle
xchg
mov
dec
mov
mov
test
pusha
int
pop
cld
stos
enter
lock
sub
mov
jns
icebp
push
dec
pushl
das
dec
and
adc
es
xor
test
dec
leave
mov
fsubr
scas
mov
sub
fidivrs
iret
sub
mov
outsb
inc
push
xchg
imul
lcall
jbe
xor
sbb
sahf
jmp
lock
roll
xor
and
xor
loopne
in
fwait
add
mov
ljmp
stc
mov
aas
mov
mov
adc
inc
inc
aad
pushf
std
call
into
jl
ret
add
popf
shll
out
mov
notl
orl
mov
ret
rcrl
sub
adc
movsb
or
mov
and
ret
pushl
inc
loope
inc
imull
push
divb
jmp
sahf
xor
mov
pop
sub
jg
jmp
dec
mov
into
dec
inc
inc
cld
idiv
ljmp
add
int
mov
shl
push
pop
dec
jmp
fcoms
inc
pushf
insb
adc
in
pushl
aad
jmp
mov
bound
rcl
adc
jmp
ss
filds
dec
xor
insl
pop
ss
fldl
iret
test
mov
in
sub
gs
jns
lods
cmp
les
iret
aam
shrl
cli
call
adc
jg
fildll
es
inc
out
lcall
incl
cmp
push
outsb
inc
fs
xchg
test
mov
fwait
and
in
sahf
mov
call
sub
testl
cli
sbb
or
pop
scas
sbb
decl
jl
je,pn
aam
dec
in
dec
ret
scas
and
ljmp
std
in
imul
adc
shrl
scas
insb
xchg
call
xchg
xchg
pop
das
mov
ljmp
imull
or
xor
dec
nop
inc
jb
push
test
and
pop
sti
lcall
lods
xor
sahf
sbb
fcomip
mov
sahf
cmp
iret
int
xchg
push
add
pop
stos
cmp
lret
addr16
mov
stc
fucomp
mov
popa
mov
sbb
aaa
out
sub
out
test
ret
loope
andl
in
xor
iret
add
mov
xchg
sti
frstor
sub
inc
cmpsb
nop
fdivl
fcompl
cmp
in
sti
jmp
add
pop
cmpl
test
ljmp
cmp
push
dec
je
pop
jmp
xor
jecxz
sub
sbb
imul
decl
mov
test
ljmp
outsb
mov
cs
mov
scas
mov
mov
mov
idiv
pushl
outsb
mov
into
movsl
pop
iret
and
roll
jecxz
stc
daa
lcall
lcall
mov
das
jp
pop
pop
mov
sti
cmpsb
cmp
fdivr
ljmp
aad
mov
ljmp
vpsubsw
roll
out
fcmovbe
jo
dec
push
orps
cmp
add
sub
jp
fnstsw
scas
sbb
aam
mov
movsb
out
xorl
nop
aaa
rcl
scas
xlat
ljmp
fistl
pop
mov
jnp
xchg
inc
daa
sbb
jp
test
adc
negl
out
ljmp
cmc
dec
inc
shl
inc
test
scas
fwait
or
mov
pop
cmp
es
dec
xchg
lret
stc
mov
jno
es
mov
mov
call
jns
jmp
push
aam
je
cmp
mov
pop
fs
xchg
hlt
pop
sti
xor
jp,pt
rcrb
dec
xchg
in
fcoml
add
out
repz
rcl
add
push
xchg
out
es
lcall
pop
bound
mov
xor
or
push
adc
push
sub
incl
scas
jbe
inc
dec
sub
rclb
jns
add
sbb
inc
mov
mov
dec
ret
mov
or
ss
sub
lds
add
outsl
hlt
incl
pop
sbb
pop
sbb
push
cmp
xor
ret
and
decl
dec
and
fwait
push
lcall
sub
dec
fsts
pop
adc
test
dec
call
mov
add
mov
inc
ret
cmp
xor
fadd
fsubs
aam
pop
sbb
jo
sahf
data16
lahf
cld
in
insb
shl
fwait
pop
cwtl
cmp
test
enter
add
in
push
xchg
push
in
fs
pop
fdivr
call
mov
int3
and
sbb
out
aaa
mov
lret
pcmpgtw
cwtl
xchg
mov
push
push
pop
adc
decl
pop
jg
pop
outsb
inc
mov
jle,pt
push
lahf
int
fdivr
daa
clc
mov
in
inc
outsl
mov
call
jg
xchg
iret
xor
int
jmp
add
fcmovbe
fistpll
fsubs
hlt
movsl
or
ljmp
or
jae
jmp
loopne
incl
imul
fsubrl
pushl
gs
addr16
inc
sub
push
cmp
adc
and
aas
pushl
or
lds
cmpb
int3
test
and
enter
lock
movsl
shl
mov
jmp
cmp
pop
lea
xor
mov
jle
xor
xorl
mov
mov
decl
data16
testl
mov
jg
testb
xchg
mov
gs
orl
call
fst
add
sarl
mov
pushl
push
sbb
orb
sti
mov
push
pop
clc
enter
clc
adc
cmp
imul
xlat
call
jbe
clc
cmp
cmc
mov
cmp
add
inc
rclb
call
ljmp
push
in
push
jmp
out
jl
cmc
mov
mov
inc
cld
or
pop
fcmovnbe
jo
dec
call
jno
mov
enter
push
xor
pushl
les
bound
cmpsb
sub
ret
sub
pushl
inc
ljmp
sbb
xchg
fimull
mov
nop
jnp
jnp
popf
clc
mov
call
mov
lods
sarb
stc
insl
mov
push
inc
js
loop
sbb
cld
orb
dec
dec
bound
jmp
mov
imul
outsb
leave
fistpl
std
or
imul
fcomip
push
data16
push
andl
loopne
leave
push
repnz
ficoml
sub
push
lcall
mov
push
aaa
mov
fucom
lock
nop
inc
mov
fcoms
mov
pushl
aad
push
popa
mov
and
xor
and
push
lods
int
sub
jmp
push
sti
loop
repz
sbb
mov
dec
xor
lahf
add
decl
pop
mov
ret
mov
je
dec
call
mov
inc
inc
insl
pop
pop
ss
pusha
sub
aam
xlat
cmpsl
pop
shl
in
jnp
das
clc
mov
push
jb
cmp
loop
xchg
xchg
push
je
pop
outsb
call
lea
mov
xchg
cmp
and
adc
cli
fcos
lcall
call
mov
pusha
jne
push
adc
dec
inc
xchg
clc
mov
es
mov
mov
xor
dec
or
add
call
adc
xor
inc
xlat
movsl
inc
mov
lcall
and
nop
push
pusha
xchg
or
mov
das
jns
decl
inc
idivl
mov
enter
jle
sbb
test
daa
ss
sub
popf
ss
fdivr
decl
adc
adc
push
cmc
xchg
roll
mov
fistps
pop
pushf
stos
dec
jmp
pushl
mov
dec
orb
js
test
jl
fwait
xor
fs
mov
fcomi
into
je
jmp
xor
jle
jmp
jbe
mov
push
jno
popf
jns
outsb
dec
jl
ljmp
into
mov
stc
jl
mov
aas
lods
jl
xchg
jb
jmp
or
mov
jg
fisubs
mov
in
ficomps
dec
hlt
inc
incl
nop
jo
gs
dec
imul
xorb
test
xchg
ja
cmpsb
adc
cmc
out
cli
incl
mov
loopnew
imull
sub
outsl
pop
mov
mov
xchg
into
xor
xor
push
xchg
pop
popf
dec
inc
lods
pop
es
or
stos
inc
sti
lret
fistpl
add
sti
push
or
push
stos
pop
hlt
add
pushl
and
out
cmpsl
fldenv
push
int
mov
jl
cmp
ficompl
insb
fdiv
adc
cmovae
out
cwtl
lret
mov
push
sti
in
mov
mov
xchg
dec
imul
lcall
mov
icebp
or
pop
pushl
and
mov
aas
jmp
mov
sbb
cmp
repz
movsb
sahf
xchg
dec
mov
mov
jbe
dec
xchg
ss
sub
inc
sub
pop
dec
push
icebp
cmp
movsl
cmp
lahf
lods
cmc
lds
add
mov
and
mov
icebp
jmp
jg
adc
sbb
aam
out
fcompl
push
xor
sahf
in
lret
pop
lret
pushl
push
sub
xchg
les
dec
out
cmp
std
pop
inc
sbb
jnp
mov
or
adc
adc
mov
pop
popa
stos
rclb
jg
in
add
inc
or
jp
and
in
dec
jmp
ljmp
clc
jg
fiadds
popa
add
adc
push
repz
lahf
mov
scas
jno
ljmp
or
pop
fcoms
sub
pusha
insb
xchg
mov
mov
out
or
jl
jmp
cmp
inc
pop
test
and
nop
add
popa
cmp
pop
or
mov
cwtl
sbb
popf
sbb
aad
scas
pop
mov
bound
push
xor
out
in
inc
lods
outsl
xchg
and
sbb
jg
sahf
iret
push
xor
dec
notb
inc
mov
insl
xor
jg
xor
sub
mov
pop
pusha
or
scas
push
sub
push
mov
test
mov
comiss
gs
jns,pt
mov
xor
mov
push
in
daa
jno
incl
and
cmp
mov
std
and
xchg
ja
int3
pop
dec
mov
cmp
lock
pop
ret
paddusb
push
into
fists
rorl
jo
in
add
out
cltd
test
aam
sar
ljmp
adc
and
pushf
jnp
jo
mov
pop
std
dec
mov
mov
pop
mov
cmp
mov
fbld
cmpsb
or
mov
clc
fcomip
rcrl
push
ret
jo
adc
xchg
fsubr
cli
lcall
adc
dec
in
adc
mov
cmp
jg
hlt
loop
or
pop
and
sbb
in
adc
inc
cwtl
inc
rcrl
decl
enter
adc
pop
jbe
mov
movsb
imul
cld
adc
fstl
xchg
and
into
not
push
xchg
cmp
call
sub
outsl
jbe
inc
in
mov
add
push
call
or
mov
sub
jno
lret
hlt
rcrl
jnp
nop
xor
jmp
outsl
ret
dec
stos
mov
shll
in
cmp
jl
jp
and
call
mov
mov
scas
add
cmp
inc
ja
dec
push
mov
shll
stos
pusha
mov
pusha
fbld
jns
pop
inc
cld
lods
stc
addr16
and
adc
mov
mov
cwtl
test
test
cmpb
je
pop
mov
mov
cmpsl
cmp
filds
xchg
pushl
xor
das
fidivrs
repz
pusha
inc
push
aam
sbb
jmp
aaa
jne
cld
shrl
call
loope
jmp
lock
xchg
std
stos
jl
icebp
or
push
loop
outsl
mov
mov
es
cs
test
popf
cwtl
xchg
aad
mov
or
insb
lods
push
lcall
call
add
pushf
rcll
dec
dec
inc
inc
mov
xchg
in
call
jmp
xchg
mov
adc
fstpt
outsl
and
iret
dec
fildl
sub
data16
ss
pop
pusha
incl
push
dec
mov
int
hlt
nop
dec
xchg
bound
movsl
jecxz
popf
jmp
lret
dec
decl
xchg
decl
mov
mov
test
fiadds
rcr
popa
xlat
std
pop
call
sbbb
popf
ljmp
mov
add
xchg
aam
jge
aad
cmp
inc
lret
das
xchg
rcll
lret
add
sub
fdivp
add
and
jg
cmp
push
sbb
test
mov
inc
leave
mov
dec
aad
cwtl
add
or
or
out
cmp
mov
loope
popf
inc
adc
rcll
data16
cld
loop
push
mov
fwait
push
call
in
rcll
les
call
test
int3
cmc
in
imul
mov
das
add
xchg
mov
adc
call
fs
push
add
std
mov
cmp
inc
mov
lods
jg
inc
or
push
dec
inc
jae
mov
sbb
lcall
adc
and
addl
cmp
mov
push
sub
xchg
and
outsl
cmp
ljmp
lcall
push
xchg
and
cmc
mov
fisttpll
repnz
and
ljmp
cmp
pop
repnz
mov
cltd
xchg
mov
test
icebp
ljmp
stos
sub
cld
fdivrl
push
pop
xchg
daa
xor
mov
sbb
pop
mov
mov
sbb
scas
cli
in
mov
int
pop
sub
clc
inc
mov
dec
xor
inc
push
jmp
sahf
sub
sub
out
cmp
xchg
mov
jo
jge
lret
cwtl
xorl
pop
movsb
mov
pop
pop
mov
sahf
scas
in
bound
pop
or
jbe
or
inc
sbb
ds
xor
mov
loopne
cld
out
ja
xor
xor
insl
out
pushl
cmpsl
xor
inc
pop
jns
sbb
and
jbe
fucomp
mov
sbb
stc
in
dec
pop
pop
pop
mov
ja
fwait
pop
or
sub
ss
stos
bnd
sbb
cmpsb
out
jp
adc
jbe
cmc
push
out
mov
inc
jno
jnp
pop
jmp
sbb
pop
or
lcall
mov
xor
adc
pop
lret
pop
out
sbb
sbbb
cmp
aam
cmp
xchg
mov
adc
bound
pop
shl
call
push
push
inc
in
dec
popf
jns
sub
rcrb
mov
push
or
jl
jmp
repz
sub
pop
cmp
cmp
fdivrl
push
das
inc
xor
push
adc
xchg
pushf
sub
mov
lea
out
test
inc
mov
cli
push
jmp
cld
cmp
cmp
outsl
nop
mov
xchg
fwait
rcll
xor
fwait
mov
incl
add
icebp
mov
lock
sub
sub
jl
nop
cwtl
or
mov
sar
lds
sub
decl
dec
fidivrl
mov
loopne
or
mov
iret
dec
mov
jno
adc
lds
jno
fdivrp
decl
movsb
or
jge
sahf
int
andb
das
inc
adc
enter
stos
ljmp
data16
fwait
push
adc
jbe
xlat
push
adc
lods
les
mov
cmp
stos
addb
cmp
inc
cmp
cli
sub
add
fisttpl
push
lds
hlt
cmp
fcmovne
sbb
jo
add
movsbl
in
iret
push
adc
shll
cli
jmp
xor
rorl
jb
cmpl
jmp
pop
je
stc
dec
fs
and
mov
xor
out
or
out
add
push
arpl
jmp
cmp
mov
push
or
cmp
jge
nop
out
rclb
in
xor
ds
fstpt
mov
xlat
adc
push
jae
jns
mov
adc
sub
jge
jno
imull
jnp
mov
int3
xchg
adc
jmp
and
jbe
push
jp
adc
sbb
or
shlb
lcall
push
pop
push
xchg
shll
out
push
cld
es
ret
jnp
pusha
ljmp
cld
xchg
clc
mov
mov
into
mov
cltd
bound
jg
loopne
ret
mov
add
cmp
mov
aam
jg
adcb
xor
jl
jno
dec
test
push
xor
lahf
mov
popa
sbb
mov
cmp
in
lea
sarl
incl
add
sbb
ss
push
cmc
add
stc
dec
pop
or
mov
cmp
sbb
sub
jmp
pop
enter
jo
in
lret
pop
pop
xor
in
dec
call
lcall
stos
mov
cmpl
cmp
ret
xchg
adc
push
outsl
jmp
add
add
dec
xor
dec
inc
fwait
cmpl
and
sub
pop
stos
add
xor
inc
or
cmpsb
mov
jmp
das
sub
arpl
pminub
ja
dec
cltd
dec
jl
lret
sub
xchg
decl
inc
das
scas
and
pop
and
xchg
in
int
and
xor
mov
shll
jge
pushl
ja
add
jbe
xchg
in
mov
sub
lods
cltd
daa
add
inc
adc
fwait
popw
scas
out
pop
shl
sbb
push
fdivrp
mov
xor
stos
sub
mov
jmp
pushl
hlt
pop
pop
sub
shll
movsb
mov
in
push
stos
xor
ljmp
mov
pop
outsb
arpl
xchg
out
inc
in
push
into
rcr
push
adc
inc
es
push
jbe
sub
pushl
fwait
aas
in
movsl
dec
or
mov
xchg
pop
fptan
adc
add
ret
mov
or
sbb
and
cmp
xor
repz
sahf
iret
inc
add
mov
lcall
pop
and
insl
mov
sub
mov
add
inc
dec
fwait
iret
cwtl
int3
inc
mov
aad
jl
xchg
inc
mov
cli
ficoms
mov
out
out
lcall
sti
pop
fwait
xor
pop
push
fwait
lods
hlt
in
in
cmp
aad
jmp
lahf
dec
rolb
jmp
pusha
mov
shl
cmpsl
cmp
jge
and
lods
in
mov
xchg
jnp
jge
cmp
or
ljmp
or
sub
jmp
inc
sub
aad
test
pop
mov
add
rcrl
and
lret
mov
lock
mov
mov
jg
cmc
out
int3
ficompl
jp
js
or
lock
push
sbb
scas
test
decl
es
jmp
loop
ja
xchg
push
jmp
lock
lret
mov
fsubrl
iret
mov
pop
mov
push
xchg
mov
xchg
nop
jg
lcall
push
jbe
mov
sbb
loope
fcomps
adc
std
cmp
hlt
pusha
pop
out
inc
sti
pop
push
push
stos
add
aas
or
dec
lds
and
jnp
decl
ds
call
movsl
mov
mov
repnz
addr16
inc
in
ljmp
call
xchg
mov
imul
outsb
in
test
push
je
lret
xor
in
sbb
incl
mov
loope
fdivl
stc
mov
push
jmp
mov
cmp
xchg
pop
cmp
inc
and
mov
cmp
repz
xor
mov
mov
mov
hlt
dec
neg
dec
test
mov
insl
icebp
push
popa
xchg
adc
sub
out
decl
adc
sti
xchg
push
imul
mov
outsb
bound
test
inc
adc
in
insb
nop
sbb
add
dec
mov
push
mov
xchg
fmull
or
dec
shll
out
js
loopne
call
push
mov
test
jbe
ficoml
inc
cli
mov
je
inc
ljmp
xchg
jecxz
call
inc
jnp
push
adc
hlt
mov
imul
mov
mov
pop
push
pop
out
sbb
insb
stc
mov
mov
loope
std
ret
jl
nop
dec
repz
aaa
aaa
fwait
add
push
movsb
lret
mov
cmp
inc
adcl
sub
int
jl
xchg
pop
pop
roll
mov
mov
and
ret
cmp
jnp
fistps
lcall
test
push
lret
test
dec
adc
lds
and
dec
cs
adc
clc
ljmp
imul
mov
mov
dec
pop
cmp
mov
add
jmp
xor
lahf
movsb
jmp
fstl
ret
clc
fs
lcall
in
cmp
pop
test
xlat
cmpsb
push
mov
in
xchg
xchg
pop
lcall
mov
sub
call
shrb
cs
out
arpl
mov
lahf
dec
movsl
lcall
arpl
js
ret
fwait
sbb
or
ret
shlb
and
test
ljmp
xor
xor
fadds
push
and
jg
cltd
enter
call
aam
adc
jmp
and
insl
dec
adc
push
dec
push
sub
mov
xor
push
loopne
and
lds
jg
jg
dec
add
pop
pop
les
mov
pop
pop
jbe
incl
cld
repz
ror
pusha
xor
out
sbb
jmp
dec
xchg
es
sbb
jle
and
andb
mov
hlt
jge
pop
ret
cli
jmp
sub
loope
dec
adcb
lods
push
push
jecxz
pop
inc
jmp
out
lret
and
cmp
mov
in
mov
ljmp
and
out
mulb
test
push
test
jmp
les
cmp
mov
jb
insl
dec
add
les
push
pop
stc
sub
decl
aas
ja
std
popf
and
pop
gs
in
adc
push
mov
push
push
shrb
jmp
mov
mov
insl
enter
and
or
xor
outsb
mov
ljmp
mov
loope
mov
sbb
sahf
dec
or
pusha
enter
xor
decl
jnp
adc
pop
pop
xchg
fwait
jmp
add
notb
xchg
mov
mov
bound
sahf
jg
clc
incl
repnz
into
inc
mov
ret
inc
and
orl
call
xchg
sub
fwait
mov
jae
pop
sub
in
ficompl
nop
xchg
cmc
xchg
roll
lock
shlb
add
fldl
in
mov
push
lods
xor
pushf
popa
test
or
mov
rcr
pusha
mov
inc
adcl
push
shll
in
mov
sbb
xchg
lcall
jmp
ss
ret
sub
loopne
sub
add
ja
push
xor
fcoms
into
jmp
sub
pop
mov
mov
jnp
popf
pop
jbe
jge
lret
sub
xlat
loopne
mov
call
ret
inc
push
lock
xchg
roll
adc
mov
std
mov
jmp
test
lcall
mov
cmpsb
fisttpl
push
int3
or
add
or
out
pop
aad
mov
idivl
sbb
add
ret
sbb
sub
subb
clc
dec
in
sahf
sbb
scas
stos
outsb
fdivrs
repz
fwait
and
jmp
ss
or
bnd
inc
je
loop
lds
incl
sti
add
stos
cmpsb
mov
stos
mov
add
inc
lret
cmp
decl
iret
stc
push
xchg
iret
cmpsl
or
xchg
push
call
cli
aad
test
clc
push
in
das
sbb
loopne
inc
xchg
pusha
stc
jns
dec
fisttpll
lds
push
loop
add
jne
insb
fs
imul
inc
dec
push
cmp
add
outsb
mov
loop
xchg
hlt
lret
jmp
shrb
addl
sbb
pop
ret
in
jnp
fmull
imul
decl
mov
mov
xchg
cmp
fwait
mov
fsubrs
ret
ja
mov
incl
dec
inc
sti
mov
jmp
test
inc
js
mov
jmp
cli
in
pusha
cmovae
cmp
ret
aam
idivl
sub
gs
xor
xor
test
mov
cmpsb
push
inc
fsts
cmpsl
mov
push
loop
fs
jl
xor
outsb
mov
scas
scas
lret
call
es
out
mov
pushf
mov
aas
mov
jg
mov
pop
pop
les
loop
inc
stc
stos
incl
fwait
daa
out
or
jle
les
mov
mov
mov
popf
outsl
xor
xchg
test
sahf
and
push
dec
cmpsb
fldl
add
inc
test
and
hlt
jmp
call
int
nop
pop
aas
xchg
xchg
fwait
push
xchg
decb
ljmp
inc
mov
jmp
fnstsw
daa
cld
inc
out
jecxz
cld
fwait
xchg
pop
jge
ret
es
inc
ss
call
add
xchg
jmp
jo
cli
xchg
repz
push
mov
xchg
stos
inc
mov
rolb
out
xchg
xchg
push
rcll
pop
mov
mov
insl
daa
inc
cltd
dec
sub
lret
xor
push
and
adc
int
leave
inc
dec
mov
push
pop
xchg
or
push
jae
sub
sbb
or
lds
out
incl
cmpsb
jno
sub
mov
add
insb
aad
aam
or
in
pop
pop
sub
mov
or
push
fld
jg
stos
sub
sbb
xor
jg
je
sub
leave
mov
sbb
std
or
push
mov
mov
mov
pusha
cmp
in
cwtl
pop
pop
pop
mov
mov
push
int
sbb
pop
inc
es
jb
jg
je
inc
mov
adcl
rcrb
shrb
and
sbb
xor
cmp
push
inc
jmp
ficoml
and
pop
pusha
cmp
push
or
or
ljmp
loope
dec
lcall
adc
and
test
cmp
mov
sub
clc
lret
xlat
lock
lcall
adc
jg
push
sub
repz
xor
pop
fidivrl
sbb
testb
std
dec
pop
fisubl
jns
dec
test
lahf
lret
xor
cmpsb
and
es
sti
adc
adc
popf
and
and
shl
or
cwtl
or
xchg
push
pop
out
jnp
mov
rcr
in
nop
pop
jmp
jg
inc
or
call
fisubl
pop
push
insb
fnsave
and
aaa
cld
ljmp
lock
sbb
adc
push
pusha
pop
adc
mov
decl
cmp
loop
into
ret
loope
in
push
testl
movsl
dec
mov
ljmp
bound
cmp
aam
mov
cld
mov
cmp
decl
cld
xchg
mov
adc
or
and
xchg
xor
sbb
sbb
ljmp
sarl
xor
and
dec
jmp
mov
mov
jo
movsb
in
std
and
int
imul
jg
dec
test
enter
int3
call
std
imul
test
jno
mov
sub
cs
fcoms
mov
insl
movsb
pushl
jmp
mov
pop
jecxz
push
scas
aad
inc
cmp
loopne
ljmp
leave
cmp
ret
shr
sbb
xor
inc
inc
lcall
sbb
test
pop
in
clc
inc
xor
push
mov
dec
pusha
sub
inc
addb
call
leave
adc
xchg
out
gs
xchg
lods
sarb
inc
sbb
push
mov
dec
in
lret
cmc
lds
aas
pushl
push
ret
test
mov
sbb
insl
mov
repnz
push
sbb
and
cmp
mov
lods
and
jp
pop
out
adc
and
lret
insb
mov
pushl
inc
cmp
adc
leave
sub
cld
roll
pop
fldenv
pop
addb
jmp
push
popa
mov
jo
std
push
pop
mov
cmp
aam
stos
mov
lock
repnz
dec
mov
aas
xchg
xchg
sub
add
adc
and
xor
call
pop
movsb
cmp
cmpb
mov
mov
ficoml
orl
sub
pop
jae
clc
jmp
fistpll
daa
push
sbb
xchg
test
fisttpl
or
push
int3
mov
dec
push
mov
cmpsl
dec
ret
fimuls
mov
pusha
sub
stos
push
int3
dec
sub
mov
xchg
lea
pop
cmp
cli
popa
ret
divb
pop
push
ret
fstps
fwait
jl
inc
call
cwtl
ljmp
mov
enter
addb
ljmp
out
jb
in
movsb
fimuls
xor
add
push
xor
ljmp
cli
jmp
dec
xchg
mov
ret
data16
push
out
inc
cmp
jo
decl
xor
add
popf
add
jmp
xor
int
dec
xchg
mov
nop
cmp
mov
mov
jne
xor
mov
lret
incl
mov
mov
in
xchg
push
daa
adc
ret
and
iret
shlb
fbstp
pushf
pmuludq
sti
mov
hlt
std
je
decl
xchg
add
in
mov
rorb
imul
push
pop
sbb
jg
inc
shll
rcll
xor
mov
lahf
cmp
orb
mov
pop
cmpl
test
mov
inc
leave
add
imul
mov
fisttps
rorl
push
out
cltd
jae
jae
push
push
sbbl
bnd
sbb
add
jnp
mov
dec
cmc
dec
jo
lcall
and
mov
jb
pop
lock
jl
sbb
sub
mull
or
dec
rorb
jbe
xor
xor
arpl
imul
fprem1
subb
mov
nop
mov
pusha
cmpsb
jns
ja
movsb
aam
push
icebp
xchg
lcall
adc
pop
aad
bound
sahf
push
jg
mov
movsb
mov
jge
sub
stos
ror
scas
dec
out
lret
int3
sub
insb
and
dec
mov
ret
push
js
add
pop
xor
mov
imul
dec
shrl
mov
scas
dec
scas
xchg
dec
xchg
add
int
loop
fstpl
jg
out
inc
iret
mov
mov
mov
pusha
cwtl
fsubl
sbb
xchg
outsl
cli
incl
leave
inc
ret
jp
dec
and
push
and
out
ficoml
test
xchg
cs
push
incl
mov
sbb
jae
lods
xchg
fcmovbe
rcll
sbb
jbe
pop
movsb
add
and
adc
mov
daa
mov
mov
nop
pop
std
into
inc
lock
sbb
add
jmp
loop
cmpsl
mov
loop
cmp
jb
mov
push
mov
leave
das
jmp
xchg
faddl
dec
adc
mov
or
fs
push
xor
mov
mov
mov
lock
clc
cmp
movsb
mov
sub
outsb
mov
or
cmp
push
mov
sbbb
lcall
xchg
into
sahf
mov
and
mov
insl
xor
or
xor
cltd
push
xchg
and
fisubrl
cmpsb
push
es
lcall
cmp
mov
daa
xor
and
xor
out
pusha
and
lahf
movsl
loopne
sbb
pusha
mov
scas
int
movsb
into
mov
or
xchg
sub
addr16
sub
fdivrl
push
dec
mov
sbb
sbbb
mov
icebp
mulb
movsl
xor
pop
sub
push
adc
xchg
mov
popf
xor
push
push
lods
dec
loopne,pt
pop
shl
jp
fmul
sar
call
push
and
sub
int
adc
jmp
mov
rorl
lret
out
jg
fidivl
pop
js
jge
jge
push
pop
sub
cmp
std
cmp
mov
or
adc
jg
inc
inc
xchg
loopne
mov
cmpsb
jno
inc
and
mov
out
mov
das
push
mov
sti
ds
mov
fmuls
enter
std
loopne
out
dec
sbb
mov
sbb
hlt
sub
icebp
sub
shll
sti
inc
dec
jnp
popf
sbbl
mov
or
add
adc
xchg
sub
aam
cmp
fists
insl
cmp
xchg
mov
call
lahf
lods
inc
das
push
xor
and
arpl
mov
mov
leave
add
daa
add
xor
lcall
enter
insl
sbb
mov
popf
jo
sub
incl
push
scas
push
ror
mov
xchg
and
subl
xchg
das
dec
and
scas
inc
lods
jnp
scas
inc
and
cmpsl
jae
bound
cli
jmp
nop
mov
xor
sub
jge
mov
pushw
mov
lret
subl
sbb
lods
mov
aad
jbe
iret
add
decl
xor
ja
xlat
cmc
jmp
jbe
aaa
adc
jmp
push
scas
jmp
out
push
fwait
inc
sbb
cmp
and
dec
push
dec
pop
loope
sub
insb
mov
mov
push
mov
out
test
es
gs
jnp
cmp
pop
push
ljmp
decl
inc
es
paddw
jns
and
mov
xchg
dec
xorb
mov
neg
leave
or
cs
pop
mov
add
pop
dec
sub
aad
nop
jge
jg
lcall
cli
xor
adc
mov
out
movb
sar
incl
std
cmp
xor
xchg
xorl
lahf
xchg
mov
sahf
ss
xor
and
jg
ljmp
sub
push
int
out
xchg
inc
xchg
fmulp
cmp
xchg
test
sub
pushl
lods
and
and
add
mov
xor
fstps
or
pushl
mov
fnstsw
adc
mov
les
jp
lret
dec
sub
and
enter
cld
xchg
dec
push
xchg
cli
push
xor
jg
insb
std
daa
push
push
cmpsl
add
fsubs
ss
push
aaa
cmpsb
sub
xor
xor
lock
jg
pushf
inc
shlb
inc
bnd
test
pop
fildll
xchg
xchg
fnstcw
aaa
mov
lcall
fsub
mov
push
test
ss
js
gs
ss
push
cltd
clc
xchg
fldl
lahf
xor
push
fdivrs
mov
jmp
jns
mov
jmp
cli
push
adc
sbb
bound
fwait
mov
inc
cli
divl
adc
sbb
mov
hlt
nop
lret
push
push
fstl
mov
xchg
xchg
mov
pop
xchg
ret
push
jno
daa
and
imul
loope
enter
cli
loop
jnp
lock
mov
sbb
out
popf
mov
cli
lds
jl
mov
ljmp
inc
out
lods
mov
cmc
dec
mov
es
gs
xchg
jne
pop
enter
out
cmp
xchg
cmp
loope
sub
ds
lret
xchg
test
mov
mov
loopne
in
test
bound
push
xor
inc
add
jle
fstpl
adc
adc
jg
mov
imul
and
push
loopne
test
ret
rolb
mov
xlat
js
xor
incl
mov
loop
push
hlt
repz
mov
test
decl
jnp
int
sbb
lods
or
cmp
jne
stos
outsb
xchg
or
lods
and
incl
call
pop
out
fwait
repz
push
sub
loopne
jmp
inc
mov
adc
lcall
insl
add
jg
test
mov
decl
in
decb
xor
out
push
rcl
xchg
pop
mov
cmp
out
popf
js
call
inc
rcrl
jp
adc
and
add
inc
cmpl
daa
xchg
decl
ret
out
mov
out
mov
int3
adcb
mov
decl
adc
in
ret
inc
pop
repnz
inc
xchg
xchg
cmpsl
mov
leave
mov
decl
out
dec
push
inc
mov
cmp
ds
test
xor
sbb
sbb
pushl
std
and
aas
lcall
rorb
push
xchg
xchg
xor
adcl
paddsb
insb
add
jo
xlat
inc
shlb
fistpll
lods
mov
sbb
fs
mov
inc
jl
dec
aam
sbb
insb
sub
adc
ljmp
push
push
lcall
rolb
ja
or
dec
lret
out
jg
jge
dec
gs
mov
push
adc
roll
dec
pushf
jbe
xchg
ss
mov
shrb
mov
add
add
mov
jg
imul
popa
sbb
or
jmp
scas
rcrl
test
or
and
mov
xor
lret
insb
jg
jg
jle
int
xchg
inc
pop
aad
jns
inc
xchg
pusha
inc
adc
push
fidivrs
cs
mov
das
adc
jmp
hlt
or
mov
mov
call
push
inc
ss
jns
icebp
xchg
pop
dec
cmc
call
scas
xor
dec
aad
pop
jg
repz
lret
mov
dec
cmp
mov
mov
jnp
out
and
cld
lcall
es
dec
std
mov
aas
inc
fsubrs
int3
stc
fsubrl
pop
mov
incl
int3
pop
mov
data16
fisttpll
cmp
lret
leave
sahf
pop
gs
addl
fisubrl
movsl
cmpsl
pop
inc
add
push
or
sbb
and
push
pop
cltd
push
mov
cwtl
in
dec
ret
in
in
pushf
out
lret
dec
leave
xchg
rorb
add
inc
inc
sbb
pop
aas
adc
pop
js
jnp
dec
and
fdiv
ja
testl
shll
adc
dec
ljmp
lcall
xor
inc
sbb
std
repnz
cmpsl
lret
push
repz
and
ljmp
mov
movsl
scas
add
aas
adc
push
arpl
jg
popf
pop
sbb
or
test
sti
pop
popl
out
stos
ret
and
fimuls
clc
sub
popf
out
incl
pop
icebp
hlt
and
push
dec
in
adc
mov
rorl
fdiv
ljmp
xlat
pop
mov
rol
insb
cli
and
cli
push
jge
loop
ljmp
fidivrs
adc
jl
mov
pop
rorl
stos
out
in
movsb
jecxz
cltd
sbbb
idiv
pushl
das
cmpsl
push
das
lods
mov
cld
aad
mov
sahf
sub
test
mov
and
incl
mov
imul
cmp
xchg
mov
testl
xchg
inc
add
stos
test
jae
mov
ficoms
or
xchg
jmp
lcall
push
dec
cmp
inc
in
and
and
push
mov
mov
fsubrs
nop
jmp
inc
incl
xchg
outsl
pop
mov
sbb
cld
dec
divl
std
es
fsubs
pushl
mov
les
pop
dec
jo
mov
xchg
mov
cmp
jmp
push
mov
and
fwait
lret
imul
test
inc
mov
pop
je
outsb
cmp
out
inc
jno
gs
inc
inc
cmpsl
xchg
cmp
int3
or
int3
dec
jg
iret
pop
push
add
dec
adc
push
clc
icebp
pusha
pop
cmpsl
les
out
mov
int3
xor
jmp
out
fdivrs
sbb
test
lcall
fisttps
lret
gs
cmp
cmpsb
loopne
inc
out
cmpsl
cmp
ljmp
dec
and
pop
inc
es
or
xor
mov
incl
xor
out
and
int3
mov
lahf
jo
push
stos
cmp
lret
and
sub
scas
clc
jmp
outsl
push
ss
stos
adc
xor
sub
test
jmp
mov
into
scas
insl
jne
mov
xor
decl
lds
xlat
incl
mov
rorb
and
push
outsl
push
popa
daa
dec
push
pop
jl
jg
lret
add
jo
test
xor
add
jp
lret
imul
outsb
cmp
das
pop
loopne
out
and
movsl
int3
loopne
repnz
cmpb
jg
out
fistpll
jecxz
movsb
xlat
addr16
ljmp
and
call
xchg
jbe
sbb
pop
push
push
lock
push
dec
sarb
push
out
adc
in
divb
incl
jecxz
mov
and
je
lock
pop
jmp
sbb
int
jp
dec
or
push
loopne
pushl
xchg
sbb
mov
cli
es
mov
test
test
or
jg
cmpsb
imul
dec
bound
ljmp
int3
arpl
mov
fsubl
push
int3
sub
ret
fs
es
jmp
push
in
cmp
inc
fwait
int
cmp
and
inc
fiaddl
mov
pop
popa
scas
pushl
sbbl
sub
test
ljmp
push
jecxz
cmp
jg
jmp
sbb
std
fdiv
or
mov
scas
jp
stos
pop
lahf
data16
in
lcall
in
ret
out
xor
push
mov
aam
loopne
daa
stos
rol
mov
sbb
outsl
push
jmp
addr16
movsb
and
leave
xchg
inc
leave
add
lods
inc
inc
push
mov
mov
ret
aaa
mov
std
pop
cmp
mov
xchg
decl
lock
rclb
sahf
push
fsubl
loope
ret
popa
pusha
dec
dec
lcall
sar
mov
nop
mov
push
mov
add
pop
imul
ljmp
inc
inc
mov
int
dec
sbb
dec
test
adc
lcall
pop
ds
lods
into
cmpb
arpl
les
in
fnsave
sub
cld
dec
dec
test
xorb
daa
cld
das
mov
out
pop
pop
loop
inc
aaa
out
mov
push
sub
push
pushl
cld
stos
sbb
fwait
jge
push
dec
out
roll
cld
jp
inc
adc
dec
cs
jae
adc
mov
jno
mov
push
inc
push
shrb
lahf
js
ljmp
sbb
push
jno
lea
xor
push
cmp
das
pop
jge
xchg
push
cmp
fistl
ds
lcall
xor
stos
xchg
cmp
iret
mov
arpl
fs
mov
jl
add
das
jp
ret
je
pusha
adc
sti
dec
sub
ss
add
lock
jae
leave
mov
aam
sbb
or
push
sbb
pop
sbb
ss
dec
mov
xchg
repz
mov
xchg
hlt
jns
adc
or
xchg
or
mov
testb
adc
aad
icebp
cmpsl
hlt
ljmp
inc
mov
mov
int3
inc
insl
mov
adc
add
push
iret
fwait
nop
pop
sbb
rolb
jecxz
test
lcall
pushl
stc
lcall
mov
inc
loop
mov
ljmp
sbb
fwait
cmovo
das
xlat
enter
test
push
add
ljmp
cli
dec
push
loopne
ja
xchg
pop
adc
out
push
std
jecxz
pushf
pusha
movsl
pop
jmp
lret
add
sub
mov
pop
iret
fimuls
fwait
jne
cmp
lahf
lock
adc
std
call
out
push
xchg
outsl
add
incb
lock
cmp
std
mov
lret
pop
rcl
and
js
idivl
push
adc
cmpl
into
xchg
arpl
bound
cmp
jmp
in
decl
sbb
or
stc
mov
negb
lahf
jg
test
mov
mov
push
dec
or
mov
pop
out
pop
jnp
lcall
pushl
mov
scas
or
lea
dec
jl
push
inc
cmp
lea
ficomps
in
incl
mov
xchg
ret
jp
loop
fildll
out
add
cmp
lods
xor
stos
call
addr16
bound
cmpsb
lds
mov
mov
mov
jmp
jb
add
pop
cmp
cmc
xor
or
xchg
jg
pushl
leave
add
cmpsl
or
cli
notb
push
orb
fwait
lock
push
or
call
ds
loop
mov
cmp
cmpsl
and
aas
xchg
dec
stos
jmp
push
cltd
push
xor
loope
adc
dec
dec
mov
in
dec
movsb
subb
nop
popl
stc
push
pop
xor
jle
fs
jae
xchg
dec
into
shrl
lcall
push
into
xchg
mov
jle
sbb
test
jb
out
nop
hlt
cmp
dec
into
fiaddl
mov
mov
fsubp
and
inc
and
incl
jbe
repz
test
adc
sahf
pop
cmp
sbb
jg
fld
scas
movsb
decl
pop
inc
out
stos
add
dec
dec
inc
and
jne
sti
cmp
lcall
mov
scas
mov
dec
hlt
mov
mov
push
dec
clc
jmp
sbb
stos
pop
andb
rclb
jle
ljmp
stc
lea
adc
arpl
and
imul
push
cld
dec
dec
ror
iret
or
in
jnp
into
and
jnp
cmpsl
out
jbe
clc
xor
dec
loopne
mov
push
popa
shl
add
jns
mov
aam
or
adc
add
call
rcr
movsb
sbb
cld
movsl
sbb
sub
xchg
or
mov
ja
call
notl
and
cmp
pop
push
insb
or
mov
pop
mov
decl
lret
jmp
shlb
in
jne
shll
cld
xor
dec
cltd
dec
jmp
ljmp
jo
scas
fbld
mov
add
pop
inc
add
inc
cltd
pop
ficoms
or
out
shll
lcall
movsl
cli
cmp
ret
and
mov
loop
insb
pop
add
xchg
dec
fistl
fucomip
in
xchg
orb
or
xor
gs
gs
incl
cld
jmp
sub
jp
add
fmull
outsb
sub
lret
jecxz
incl
sub
or
inc
inc
loope
mov
insl
fnstsw
ret
out
in
call
insl
shrl
pop
jb
mov
pop
push
jg
add
xor
push
mov
decl
xor
and
mov
pop
insb
lods
push
xchg
pop
ljmp
aaa
loopne
ret
std
xchg
jne
sub
rcrb
data16
mov
jmp
insl
jne
push
aaa
js
cmp
sbb
push
pop
aam
sar
sbb
jle
lret
add
cmpsl
mov
rorl
dec
shlb
push
lock
into
dec
fcompl
or
out
push
and
dec
push
fstl
and
and
arpl
imul
pushl
xor
inc
das
dec
push
sbb
addr16
adc
adc
les
pop
cli
decl
cli
pop
ror
cmp
mov
xchg
imul
test
push
insl
std
call
cmp
jno
jmp
loop
cmpsb
and
adc
decl
inc
xchg
bound
and
je
imul
lcall
in
mov
or
and
xorl
pop
push
mov
push
mov
sbb
mov
push
movsb
call
outsb
iret
in
jno
and
jg
sbbl
xchg
ss
stc
jne
cwtl
sbb
add
pop
popf
daa
les
repnz
jmp
fs
jno
out
inc
dec
mov
jns
call
repz
pop
xor
mov
decl
add
push
mov
gs
cmc
shr
push
xchg
pop
stos
jns
lcall
mov
mov
push
xor
mov
shll
dec
adc
jmp
pushl
fadd
mov
sbb
mov
cmp
imul
pop
lods
push
repnz
lcall
int
mov
cmp
cwtl
scas
jle
scas
cwtl
call
addr16
rcll
jp
pushl
ljmp
sub
mov
loop
mov
sbb
lret
pop
cs
pushl
jmp
lahf
cmp
or
adcl
xor
test
fwait
insb
add
test
jmp
in
ret
pushl
adc
neg
mov
sub
aam
in
adc
ljmp
ljmp
jmp
mov
mov
mov
loopne
and
fistpl
data16
jl
mov
shlb
mov
push
iret
push
lret
mov
cmp
push
pop
mov
out
into
adc
movsl
cmp
sub
dec
inc
mov
aaa
rcrb
jae
or
out
ss
scas
scas
mov
rolb
and
cmp
jg
outsb
mov
addr16
frstor
stc
add
cmp
sti
push
je
inc
add
movsl
ja
push
mov
adc
push
inc
mov
cmp
cld
jp
lods
add
jo
push
ljmp
push
mov
pop
in
subl
sti
inc
leave
xchg
sub
inc
cmp
lcall
xlat
test
xchg
dec
sbb
sahf
inc
mov
inc
and
xchg
aam
xchg
cmc
jge
fisubrl
jmp
push
sub
xor
sub
mov
stos
out
adc
pushl
loopne
cmp
dec
cld
and
lea
cmp
ljmp
arpl
bound
incl
in
mov
divl
adc
mov
mov
cwtl
fs
adc
or
in
jmp
mov
jecxz
sbb
push
mov
xchg
stos
fdivrp
decl
loop
lret
and
popa
or
or
leave
adc
hlt
pop
iret
or
decl
in
cli
xchg
dec
repnz
rolb
pop
mov
fisttps
cmpsb
mov
dec
push
mov
call
mov
pop
pop
mov
hlt
mov
jmp
inc
cltd
inc
xchg
insl
out
adc
sub
mov
scas
add
test
stos
lods
pushl
loopne
xchg
cmp
js
and
mov
cmp
inc
or
adc
jecxz
adc
mov
rorl
cld
or
rol
decl
sub
cmp
push
mov
lds
inc
stc
jl
mov
outsb
movsl
in
insb
stc
mov
lcall
pop
fdivp
incl
mov
mov
pushf
iret
in
inc
pushf
ret
xchg
or
das
mov
pushf
rcrb
inc
fisubrs
test
dec
fwait
test
int
jbe
mov
sbb
or
vmwrite
sub
fists
mov
lcall
out
xor
sub
lret
xlat
pop
sub
mov
dec
hlt
cmpl
pop
pop
popa
nop
aaa
dec
mov
loope
outsl
mov
xchg
xchg
add
out
sbb
call
and
push
ret
sti
sbb
add
fildll
iret
sub
mov
aad
dec
or
or
mov
lcall
decl
mov
dec
aam
fistl
rclb
out
int
cmp
ljmp
int3
push
dec
and
pop
daa
xor
pop
lock
push
fcmovu
push
ds
je
fdivrs
cltd
call
xor
and
outsl
lods
testl
test
rcl
push
ret
push
or
pushl
dec
movsl
pop
or
lcall
xor
mov
and
incl
std
out
test
mov
inc
fcmovu
sarb
notb
mov
xchg
add
jmp
shl
jns
cli
or
nop
out
push
add
inc
jae
mov
pop
out
pusha
ja
mov
imul
orb
pop
mov
inc
lret
icebp
jle
and
add
jle
call
movl
ljmp
fadds
adc
cmpsl
adc
jmp
push
popa
hlt
addr16
mov
lock
sub
mov
jg
call
push
dec
stos
mov
outsl
sbb
dec
cmc
push
dec
dec
movsl
jnp
dec
push
stos
fsub
mov
cs
incl
dec
pop
test
xor
mov
lods
es
sahf
xorb
cmp
pushl
sub
nop
aaa
mov
mov
std
sbb
pop
outsl
cmp
int3
divb
call
cltd
xor
ret
push
jo
sti
or
andb
push
xchg
stos
inc
movsb
lods
call
lcall
aas
fcompl
jno
sbb
bound
stos
sub
in
leave
jecxz
cli
fldt
enter
jae
add
sbb
push
push
cmp
test
out
dec
mov
inc
cmc
lea
jg
sbb
dec
jp
lret
stos
aam
out
push
lock
decl
xor
add
xor
adc
iret
sbb
pop
in
outsb
adc
and
incl
int3
push
mov
inc
cwtl
jnp
pop
movsl
movl
test
jo
cmp
pushl
mov
mov
xchg
shll
loopne
nop
mov
stc
pop
pop
inc
pop
cmc
decl
lods
bound
out
push
mov
mov
mov
cs
gs
decl
test
inc
xor
pop
xor
adc
ss
rorb
xchg
push
clc
pushl
pushf
aad
iret
push
xchg
mov
fwait
cmpsl
ds
pop
scas
lock
ret
cwtl
scas
pop
fucomp
mov
cmp
pop
repnz
call
sahf
push
pusha
lods
xchg
add
mov
nop
pop
lock
popf
lds
jmp
jecxz
movsl
pop
xor
xchg
int
xchg
lea
fcompl
or
es
xor
test
incl
inc
mov
shr
adc
jmp
data16
clc
orl
fstps
test
pusha
inc
shlb
dec
pop
ljmp
jns
push
mov
xor
cli
jb
subl
cmp
sub
incl
push
dec
inc
add
add
sbb
into
notb
test
mov
dec
mull
pop
decb
es
jmp
fists
pop
and
ret
inc
push
sbb
test
fsubrs
enter
or
sarl
insb
mov
fwait
jecxz
mov
clc
test
jl
shrb
cwtl
cmp
outsb
jg
pushl
decl
jg
icebp
mov
fisttpl
sub
iret
into
data16
ljmp
stos
sub
inc
call
xchg
push
mov
test
mov
movq
adc
mov
call
cltd
test
loopne
mov
test
mov
mov
jnp
sbb
jmp
mov
mov
mov
xor
add
in
fucomp
movsb
stos
xchg
jns
jl
cmp
jmp
jne
cmp
sbb
mov
mov
outsb
and
push
pop
lods
jp
inc
or
mov
jmp
incb
shl
pop
jl
ljmp
lock
mov
sub
pop
cmc
fisubrl
mov
sbb
outsb
mov
cld
aaa
ret
test
jl
xchg
cmpsb
and
dec
xchg
inc
pop
cltd
cmc
mov
or
push
loop
inc
ljmp
xchg
sub
jmp
or
xchg
out
and
jmp
add
test
adc
outsl
insb
mov
add
lcall
push
in
enter
test
mov
jne
adc
inc
mov
cmpl
cmp
mov
mov
sti
mov
cld
mov
into
add
ja
adc
ljmp
cli
incl
inc
mov
data16
dec
pop
sbb
mov
sub
push
je
xchg
pushl
and
mov
and
les
sbb
cmc
movsl
mov
mov
lock
cltd
iret
scas
mov
nop
jmp
popa
dec
inc
jmp
outsb
out
and
mov
jmp
std
nop
ficoms
popa
mov
addr16
push
push
jmp
or
xchg
dec
outsl
jbe
mov
add
mov
out
sub
pop
mov
call
subb
fmuls
jmp
shrl
je
cmp
jmp
mov
lcall
outsb
cmpb
repnz
aad
add
jmp
add
adc
int
push
or
movsb
mov
subb
pop
xor
dec
mov
mov
adc
adc
filds
dec
pop
int
dec
push
jbe
adc
pushl
mov
inc
je
in
jg
fisttps
stos
out
fldl
mov
cmp
decl
push
add
and
inc
xor
dec
mov
push
cmp
xchg
inc
gs
lods
inc
cmp
inc
inc
les
fisubl
inc
add
cli
pop
or
xchg
shl
mov
dec
mov
in
xchg
sub
sbb
testb
xchg
in
push
xchg
pop
sub
fcomip
mov
or
sub
cmc
mov
cli
movsb
cmpsb
or
and
decb
push
jecxz
pop
frstor
je
cmp
fists
mov
pop
test
sti
inc
paddsb
scas
das
call
into
subl
cli
call
lret
xor
and
xchg
mov
psubd
jmp
xor
test
fcomps
jge
lds
scas
and
std
jbe
das
aaa
jg
cmp
adc
test
scas
add
aad
testb
rolb
std
ret
inc
mov
sti
pushf
or
adc
test
mov
lret
iret
repnz
cmc
in
das
jbe
in
pop
inc
gs
mov
fmul
mov
idivb
imul
lcall
in
jmp
pushf
jb
mov
fisubl
sub
inc
mov
in
movl
pop
jg
push
sbb
pop
fimuls
pop
ss
dec
pop
mov
jnp
test
push
lcall
pushf
orl
push
and
test
lds
out
or
shlb
das
clc
incl
fsubrl
mul
pop
int3
pushf
mov
xor
pop
adc
jae
cmp
sbb
xchg
pop
in
push
int
sbb
cs
incl
repnz
cs
bound
mov
cwtl
hlt
pop
sarb
arpl
push
sub
jmp
pop
test
pop
mov
test
mov
clc
loope
push
pop
xchg
push
fsubl
les
incl
mov
inc
rorb
repz
sub
movb
sub
repz
stos
push
pop
mov
fwait
rorb
daa
xor
cmpsb
jmp
idivl
or
jno
xor
sahf
rolb
pushl
and
xor
sbb
std
repnz
in
sub
or
ffree
pop
lds
imul
lret
mov
sub
sub
add
xor
jecxz
push
xor
aam
pop
xor
and
jmp
xchg
and
xor
out
nop
lock
fbstp
dec
movsl
xchg
in
imul
ret
dec
mov
jmp
daa
mov
cmp
pop
jae
shrl
popf
daa
or
push
loopne
mov
cmp
dec
mulb
mov
mov
les
add
test
push
mov
mov
scas
out
adc
out
or
ficoms
mov
popf
pop
popf
jg
jae
add
dec
popa
sarl
jle
stos
push
sahf
cmp
sub
sbb
aas
dec
jg
mov
nop
inc
mov
das
sar
pop
mov
or
test
loop
jbe
fcomip
mov
jo
push
sbb
jg
xchg
ja
xchg
mov
loop,pn
addr16
mov
inc
mov
push
cli
dec
ljmp
jg
sbb
not
lods
mov
rorl
cwtl
inc
jo
xor
cld
sbb
cmp
jg
jmp
and
pop
stc
pop
lahf
xlat
add
add
dec
pop
int3
inc
mov
in
xchg
mov
or
jae
decl
nopl
add
js
push
add
fisttpl
dec
lea
pushl
ja
xchg
in
out
fsubrs
lcall
xchg
int3
dec
sbb
rol
cmpsb
ljmp
sbb
testl
pop
or
cltd
add
xchg
fwait
dec
mov
push
lret
call
cmp
pop
in
popa
and
or
insl
cmp
das
dec
xor
push
loope
jb
fimull
popa
xchg
xor
cmc
lcall
cli
adc
iret
jmp
movsl
sbb
mov
pop
mov
push
out
int3
nop
incl
loopne
jle
or
in
ret
jo
sarl
jl
out
mov
addr16
or
push
incl
arpl
xchg
xchg
mov
cmp
jns
mov
dec
and
push
cmp
decl
loope
mov
rcrb
or
movsb
mov
mov
xchg
pop
mov
mov
mov
scas
fwait
xchg
dec
adc
pop
and
fsts
frstor
fiadds
arpl
jbe
xchg
aam
jo
jg
mov
movsl
cwtl
lcall
loope
les
int3
pop
gs
jg
roll
stos
out
repz
mov
sbb
outsl
aas
pop
outsb
stos
loope
je
sub
adc
inc
sub
mov
mov
push
xchg
cmp
xor
adc
cmpsb
push
or
sub
mov
xor
div
or
les
or
mov
out
pop
mov
sbb
add
sbb
or
jp
fnstsw
xor
pop
pop
divl
int
cmp
lock
fcomip
fwait
dec
stos
mov
push
das
lcall
pop
stos
and
cmc
push
inc
adc
xchg
mov
pop
pop
push
sub
repnz
add
insb
and
pop
and
mov
nop
mov
pop
cmp
pop
lcall
cmpsb
pushf
shr
and
sbb
adc
jae
and
push
sahf
or
ljmp
cs
cmp
add
out
mov
mov
jmp
ljmp
adc
mov
insb
subb
stc
fcmovnb
mov
adc
fucomp
push
push
ljmp
mov
push
sbb
xchg
mov
sarb
pop
push
inc
popa
daa
movsb
stos
jp
adcl
loope
loope
jecxz
stos
cmp
lcall
push
test
into
dec
in
lret
jmp
in
sbb
lock
imul
lret
push
add
mov
inc
cld
cmp
pushl
adc
mov
push
sbb
jmp
ret
push
sub
mov
lcall
insl
jle
adc
add
adc
incl
xchg
call
or
jmp
cltd
es
shrb
pop
pop
cli
cld
push
lahf
imul
add
pop
hlt
push
fcmovnu
jecxz
mov
insb
dec
lock
gs
fistpll
push
sbb
jmp
cmpsb
mov
ficoms
push
jnp
push
fbld
imul
jbe
cmp
adc
jle
jg
cs
int
pop
js
and
adc
fnstsw
sub
pop
inc
pushl
ss
decl
in
movsl
ds
loop
cmp
jb
data16
mov
add
mull
add
jo
or
out
xor
iret
push
fistps
jl
push
insl
xor
stos
mov
cli
out
jp
fildll
push
dec
or
mov
mov
pop
xchg
mov
fisttpll
xlat
js
xor
cmp
push
fidivl
jecxz
jbe
mov
incl
or
outsl
in
push
push
lock
mov
lods
es
cmp
int
insb
xchg
clc
or
or
pop
sar
cmp
lea
xchg
push
leave
dec
cwtl
xor
push
mov
scas
fiaddl
test
dec
in
cmp
pop
mov
xchg
lcall
daa
inc
in
mov
ljmp
xchg
je
les
sub
pop
insl
je
std
aas
lods
mov
lcall
adcb
ljmp
dec
xchg
dec
in
sbb
jg
inc
sbb
js
fxch
incl
mov
inc
cmp
out
dec
cmp
dec
ror
in
pushf
jo
jns
cmp
adc
and
cmp
or
adc
fsub
mov
dec
jge
mov
aad
adc
push
fsubrl
mov
mov
addl
clc
jg
and
ljmp
xchg
pop
pop
test
ds
jp
stos
cs
inc
mov
ja
jg
test
mov
fiadds
ret
inc
das
nop
into
mov
out
clc
das
in
inc
sarl
adc
loope
clc
fs
push
mov
jnp
xchg
mov
pop
lock
imul
xchg
cmp
dec
xor
pop
push
int
jmp
out
jno
test
pop
loopne
inc
dec
shll
loopne
push
add
repz
pop
les
adc
adc
push
xor
mov
xor
popa
mov
mov
daa
ja
xor
pushl
in
js
lock
repnz
push
ja
scas
int3
xor
jbe
rol
push
add
add
sbb
push
sbb
das
jl
xchg
mov
mov
mov
mov
decl
pushl
inc
lods
or
test
sub
push
std
decl
fmull
lods
ffree
pop
aaa
mov
sarl
out
inc
rcrl
insl
and
push
leave
call
mov
iret
xorl
int
ret
push
sub
fsub
xchg
sub
lret
lcall
sub
mov
xor
test
lahf
iret
sub
xor
sarl
dec
pop
dec
cmc
pusha
aaa
call
shrl
push
hlt
xchg
sub
xchg
jbe
shll
sti
js
jmp
call
mov
and
jnp
ret
cmp
pop
int3
test
sbb
xor
call
loope
mov
or
rorb
shll
les
mulb
mov
imul
jmp
push
stos
pop
mov
jnp
das
inc
lcall
or
mov
add
das
rol
ret
test
imul
outsl
dec
pop
lods
rol
mov
jle
dec
mov
jmp
call
out
outsb
cli
fndisi(8087
std
addr16
mov
mulb
daa
mov
mov
jne
test
and
stos
incl
pushf
bnd
stos
lret
inc
mov
test
xor
ljmp
xchg
ss
in
push
pop
mov
les
movsl
das
mov
fs
inc
into
out
outsb
fldcw
jmp
xor
rolb
pop
jg
enter
mov
in
pusha
popf
sub
fidivs
add
sub
xor
push
ljmp
push
mov
test
in
pusha
rol
movsb
jno
push
test
xchg
lcall
loopne
test
jg
mov
ja
pushf
push
mov
data16
in
xor
or
or
pushl
mov
jne
and
test
adc
push
sbb
decl
jg
ret
out
dec
or
shll
or
adc
mov
jp
mov
in
and
mov
dec
pop
scas
lcall
jl
aaa
pop
ss
frstor
pop
mov
pusha
cmp
movb
mov
bound
out
adc
aaa
call
out
adc
dec
mov
add
fdivl
dec
dec
push
dec
mov
cwtl
rcrb
sbbl
decl
dec
popf
xor
inc
mov
push
sub
inc
pcmpeqd
jp
popf
cmpsl
mov
jmp
xor
or
and
or
dec
mov
sub
clc
cmpsl
sub
std
out
xor
repz
lcall
subb
jp
pop
jecxz
mov
scas
aaa
std
decl
cs
adc
or
dec
pop
xchg
jmp
jg
cmpsb
stos
xchg
shrb
xchg
clc
fldcw
ja
xorl
xor
mov
bt
xor
mov
incl
dec
shll
jns
out
clc
out
add
xchg
into
rorl
test
mov
mov
and
pop
pushf
jl
or
ljmp
sbb
fimull
cmpsb
out
jge
or
fildl
dec
jb
inc
xor
dec
in
xchg
jmp
nop
xchg
loope
adc
dec
pop
xor
decl
jno
push
xlat
js
test
aas
xor
cltd
sub
xchg
and
add
cmc
pop
scas
loope
pop
fs
ds
mov
sub
and
sbb
loopne
out
call
inc
push
cmpsb
into
lea
adc
clc
movsb
ja
push
mov
pop
mov
or
or
clc
stos
lcall
pop
lahf
jmp
cld
fistpll
clc
xchg
cli
xor
dec
int
dec
test
fbld
xchg
jnp
or
pop
or
repnz
test
cmp
lcall
sbb
outsb
mov
dec
and
sarl
ss
cmp
jmp
lret
ljmp
mov
lea
stos
mov
jle
stos
jnp
ss
outsb
daa
cld
jmp
call
sbb
rcll
mov
dec
mov
inc
daa
adc
ja
repnz
scas
mov
sahf
jb
xlat
ret
rorb
mov
into
ljmp
mov
sahf
icebp
shl
inc
mov
xchg
mov
divl
jo
cmpsl
sbb
addl
push
xor
pop
call
pop
dec
in
sub
jg
jg
rcll
stc
enter
dec
adc
sbb
ror
push
fwait
lahf
popf
pop
mov
jmp
xorl
mov
imul
and
fldcw
lret
mov
xor
repz
pop
jp
cmp
outsl
cli
call
scas
std
pop
push
dec
cmp
pop
repnz
cmpsb
inc
dec
cmp
dec
adc
mov
cmp
mov
xor
or
sub
ljmp
cmpsl
push
cmpsb
insb
mov
aaa
sbb
enter
pop
loope
movsl
ret
data16
xchg
add
dec
fmuls
and
cmpsb
or
mov
jl
scas
jg
xchg
dec
in
cmp
popa
push
mov
decl
andb
cmp
or
jb
pop
mov
dec
sub
cmp
and
jae
or
pushl
fcmovnb
sub
es
rep
jmpw
ljmp
sub
inc
add
jle
decl
lock
jnp
jmp
mov
jae
ffree
rorl
mov
push
jbe
incl
pop
dec
clc
pop
add
cmp
adc
mov
sbb
xchg
stos
aad
scas
push
adc
scas
clc
call
jb
add
mov
push
hlt
outsb
addb
cltd
jp
vpunpckhdq
jmp
or
inc
divb
inc
imull
push
fists
dec
repz
jp
sub
xchg
pop
mov
gs
ljmp
mov
push
mov
int3
in
mov
lcall
into
jbe
lahf
stc
jae
nop
adc
addb
repz
outsb
outsl
adc
stc
mov
in
sarb
addl
sbb
cli
xchg
fnstenv
xor
popa
js
dec
mov
hlt
je
lods
inc
jle
in
sub
out
daa
movsb
lahf
call
aad
lock
in
sub
out
pop
insb
roll
pop
mov
mov
cmp
pop
imul
push
rclb
call
mov
int3
xor
mov
push
pop
push
jb
pop
or
fidivrl
cmpsl
jge
mov
pop
inc
add
cld
inc
mov
push
mov
mov
mov
insb
jmp
decl
lock
mov
orb
in
lret
repz
idivb
movsb
ljmp
mov
dec
rcrl
mov
stos
adc
and
in
sbb
mov
inc
scas
out
data16
jmp
daa
std
shlb
mov
insb
inc
lahf
dec
pop
fmuls
push
out
or
pushf
push
shrl
outsb
jg
jmp
xor
jne
hlt
clc
mov
jecxz
loopne
sub
shr
and
decl
cltd
adc
ljmp
lret
mov
or
sbbl
dec
push
ficompl
outsb
or
push
hlt
inc
stos
sbb
jecxz
ljmp
add
aaa
loopne
inc
popf
jmp
mov
pop
popf
ficompl
fwait
call
jge
aas
lcall
ljmp
test
cmp
xchg
jecxz
pop
jecxz
sbb
decl
mov
dec
hlt
sub
int
inc
push
rolb
jnp
xor
add
dec
and
inc
or
pop
cmpb
aam
mov
pop
cmpsb
sbb
add
test
pop
int3
mov
repnz
addr16
sub
stos
loop
push
inc
cld
mov
ljmp
or
mov
icebp
pop
push
jno
pop
lock
fbld
dec
nop
ds
push
cs
sub
jecxz
subb
xchg
scas
incl
das
jl
in
popf
jno
loopne
test
add
insb
push
call
xchg
loop
clc
push
dec
push
jb
leave
dec
insl
into
lods
jp
push
std
std
cmp
jl
orl
aam
mov
int
fsubrp
mov
inc
pop
bound
push
shl
daa
hlt
and
mov
cli
or
cltd
xchg
insb
jno
dec
stos
mov
adc
xchg
in
scas
cld
dec
std
or
pop
and
bound
rcrb
cmc
cmp
int
dec
mov
jecxz
ret
adc
xor
mov
pop
mov
dec
fs
lods
xor
in
push
jg
pusha
sbb
jne
mov
or
in
sbb
xchg
incl
call
andb
out
clc
ret
movsb
arpl
or
dec
xchg
push
js
mov
in
sbb
mov
adc
shrb
fiadds
dec
loopne
mov
out
nop
dec
pop
in
lcall
jo
mov
jb
test
cld
in
dec
test
loop
mov
fisttps
adc
cmp
popa
mov
js
pushf
in
mov
ret
stc
add
call
xor
fs
shlb
pop
outsb
cs
xchg
sub
xchg
test
mov
mov
lds
push
sbb
push
adc
pop
mov
int3
jmp
xchg
or
pushf
in
push
push
push
xor
or
dec
xor
cltd
push
inc
inc
fiadds
and
jb
push
add
cmpb
fcomps
aas
adc
push
jp
std
jecxz
es
push
xor
test
or
xchg
loope
clc
cld
dec
and
mov
repz
lcall
sbb
push
push
das
xchg
cmc
rcl
push
xchg
ljmp
lods
add
stos
les
incl
shlb
fidivrs
inc
mov
sub
int3
cmpsl
mov
lcall
dec
xor
cmp
popf
sbb
jbe
mov
jns
lods
xorl
mov
mov
mov
outsb
lock
inc
pop
cmp
sbb
mov
fbld
das
clc
das
inc
insb
xchg
xor
cld
cmp
shl
jg
cmpsb
xor
test
jns
mov
js
mov
mov
mov
shrl
cli
pop
jnp
mov
into
mov
or
inc
push
push
dec
cltd
idiv
ds
test
pop
xchg
xchg
test
push
mov
xor
mov
jg
mov
pop
ret
pop
mov
or
cmc
mov
xchg
xchg
push
adc
ja
popa
sbb
test
inc
lods
pop
incl
jbe
pusha
sub
mov
iret
xchg
fstpl
and
stos
stos
jo
call
push
into
sti
in
push
insl
js
dec
push
push
and
xchg
int3
int3
push
mov
push
aaa
shl
xchg
ja
push
lods
inc
cs
loopne
test
hlt
outsl
cmp
mov
sub
dec
insb
divl
cmc
lea
sub
sub
xchg
adc
int
sub
ljmp
lods
push
ds
mov
leave
aad
inc
popf
add
jge
into
mov
out
test
and
call
xlat
in
xchg
daa
shll
nop
leave
push
daa
push
outsl
mov
int
pop
push
add
mov
mov
pusha
adc
push
dec
mov
push
cwtl
fnstsw
mov
fldt
mov
lret
cmp
cmp
stos
fucom
jns
test
cmpsl
mov
mov
jmp
xchg
xchg
out
mov
arpl
jbe
adc
jg
into
mov
sbb
out
outsl
sahf
outsb
sarl
adc
push
cmp
cmpsl
sti
out
mov
xchg
out
fstps
mov
iret
xor
ret
mov
jbe
pushl
xor
adc
xchg
shll
fildl
xchg
mov
inc
movb
jbe
lahf
mov
movb
andb
jmp
ljmp
xchg
mov
push
jbe
out
mov
ja
sub
jb
imul
insb
std
mov
xchg
dec
xor
xor
push
xor
lcall
call
push
pop
sub
mov
xchg
jnp
ret
loope
pop
fcoml
mov
call
lds
push
jecxz
test
sbb
adc
mov
aas
incl
xor
iret
negl
hlt
shrb
scas
adc
adc
sbb
mov
cmp
mov
lds
stc
pop
cltd
push
and
cmpsl
inc
jecxz
xchg
clc
push
pop
dec
sbb
ds
mov
add
push
jmp
pop
fiadds
mov
sarb
xchg
movsl
arpl
scas
jno
cmpsl
fstpt
and
mov
mov
pop
mov
inc
sti
and
xchg
inc
pop
inc
xlat
ja
push
and
int
in
in
je
mov
cli
fisttpl
mov
xorl
mov
decl
rorb
call
jg
inc
cmp
js
ret
leave
push
and
decl
cmpb
into
push
and
outsb
dec
in
lret
addr16
repz
pop
fsubs
cld
inc
bnd
mov
adc
jp
jmp
jmp
add
push
add
fildll
mov
add
mov
push
xor
mov
and
cltd
into
dec
std
pushl
inc
sbb
mov
adc
sub
test
inc
int3
push
jmp
inc
jo
sarb
mov
ja
add
js
fldenv
jmp
xor
mov
bound
lock
aas
jnp
mov
push
insl
sbb
dec
mov
fwait
rolb
xchg
mov
mov
dec
xchg
cmp
adc
dec
aas
pusha
cmp
pop
hlt
faddl
loope
push
testl
sub
xchg
cli
mov
jg
fmull
daa
inc
daa
mov
xor
xor
push
add
sbb
incl
xchg
or
sub
mov
xchg
or
std
outsb
xlat
mov
jo
inc
hlt
lods
scas
cs
sbb
xchg
not
roll
cmp
jp
push
adc
add
rolb
pop
cli
inc
pop
loopne
icebp
stos
je
out
stc
out
cli
fldenv
es
bound
stc
push
lds
or
mov
iret
sub
adc
jg
test
add
dec
loope
xor
loop
mov
outsl
lcall
mull
hlt
inc
loop
sbb
fnstsw
mov
jae
sub
cmp
dec
dec
aam
mov
ret
mov
xor
jmp
aaa
inc
les
pop
pop
push
call
cld
push
pop
jmp
mov
repnz
rcr
inc
jg
shll
repz
fs
jo
add
sbb
adc
or
pop
cmpsl
dec
movsl
push
sbb
jmp
or
or
mov
dec
jo
pop
sbb
pop
push
xchg
out
inc
incl
adc
xchg
loopne
and
or
fchs
mov
cmp
xchg
aad
ljmp
push
sbb
bound
xchg
es
add
imul
lods
push
add
mov
test
pop
adc
push
cmp
fnstenv
xor
pop
ljmp
lea
adc
mov
mov
mov
jmp
cmp
ljmp
sbb
test
inc
insl
mov
in
enterw
jle
stos
or
inc
inc
jle
rcrl
adc
cmp
jg
ljmp
jno
addr16
jns
gs
cmp
clc
or
addr16
cmp
mov
jp
aas
in
ljmp
mov
pop
push
ds
dec
cmp
lock
test
and
dec
repnz
sbb
fcomip
inc
jle
ficoms
jle
mov
in
jmp
sbb
push
pop
pop
roll
out
repnz
push
xchg
lock
loopne
dec
mov
popa
or
mov
cmp
add
aaa
mov
lea
mov
in
jnp
popa
aaa
pop
jle
rcrb
add
decl
jle
jne
fwait
dec
push
sbb
cmp
lcall
jmp
push
cld
lcall
mov
sub
gs
neg
xchg
push
fstpl
mov
ljmp
cli
out
pop
stos
sahf
mov
cmp
xor
sbbb
cmpsb
call
mov
repnz
jecxz
dec
lret
gs
dec
out
ja
sbb
inc
xor
negb
cmp
push
jl
xor
xor
jb
pop
pusha
fimull
aaa
rorl
mov
sarl
lea
inc
in
mov
xchg
mov
scas
inc
shl
outsl
add
jne
mov
les
lcall
jp
sbbb
xchg
out
leave
or
xchg
pop
js,pt
mov
out
dec
mov
fisttps
incl
pop
popa
cmp
arpl
nop
cmp
sub
test
hlt
incl
popf
test
neg
insb
clc
jl
in
add
pop
mov
leave
cmp
inc
aaa
push
or
lcall
push
xor
leave
and
mov
pusha
ret
sbb
dec
jmp
adc
out
jbe
lret
xor
push
cmpsb
icebp
xor
jb
in
adc
fisttps
cmp
cmpsb
ja
mov
sub
out
xchg
sbbl
dec
push
ljmp
inc
jno
insb
out
mov
xor
cmp
shrl
lret
add
fiaddl
jl
inc
cmp
iret
insl
jne
fisttpll
add
inc
xor
mov
xor
inc
sbb
fcomps
inc
std
mov
testl
push
push
nop
insb
pop
sbb
xchg
lds
dec
inc
test
ljmp
ljmp
aam
fiadds
dec
ljmp
adcb
sbb
add
fisubs
jmp
sti
out
mov
aas
inc
xchg
push
test
leave
sub
mov
cltd
lret
call
mov
ret
add
jae
adc
test
test
bound
push
xor
aaa
mov
jno
xor
jno
inc
or
jge
jae
icebp
jmp
cmp
xchg
fidivrl
jo
dec
and
fnsave
int
lea
in
push
daa
loope
push
jg
clc
pop
or
adc
xor
pusha
cltd
add
add
out
clc
out
fisubl
inc
push
push
scas
dec
int
repz
ret
pop
cmc
shld
outsl
fcom
call
jns
cmpsb
out
mov
mov
lret
lods
leave
shrl
ret
cmp
aaa
std
cmp
stos
push
push
sbb
xor
insl
enter
pop
call
xor
mov
sbb
cmp
xchg
bndstx
xchg
dec
fnstenv
mov
aaa
adc
cmp
or
loopne
fstpt
stc
pop
or
xor
jp
mov
jne
pop
cmc
cmp
les
add
add
xchg
dec
int3
in
lds
dec
je
movsl
aad
jg
mov
popa
adc
mov
sbb
addr16
enter
and
pop
cmp
ret
imul
cmp
dec
xor
dec
pop
imul
push
dec
cli
add
dec
cltd
divl
cmc
xchg
jmp
test
adc
stc
js
into
or
or
adc
shll
imul
fisttps
stos
je
xchg
repz
pop
push
rcrl
mov
dec
pop
sbb
or
std
add
test
loope
sub
mov
decl
decb
pop
lds
lds
outsb
repz
jle
mov
inc
push
xchg
jne
sbb
sti
flds
dec
ljmp
sub
lcall
cmp
inc
jp
dec
sbb
subl
bsr
iret
popf
addr16
jmp
push
movsl
gs
pop
inc
or
adc
insb
pushf
out
hlt
stos
cmpsb
das
pop
stos
push
daa
sti
or
call
xchg
hlt
fcomp
and
pop
xor
cmp
imul
add
pop
jne
inc
sub
jmp
bound
lods
pop
in
cmpsl
pop
cmp
je
add
pushf
inc
ja
ret
les
je
jecxz
decl
xchg
dec
pusha
outsb
xchg
in
mov
stc
adc
jmp
pop
mov
pop
call
mov
mov
ret
aaa
fmulp
sbb
sbb
not
mov
test
cli
push
or
xchg
jp
loopne
mov
mov
xchg
ljmp
mulb
inc
pop
and
jg
fisubrs
and
mov
incl
xchg
mov
jge
pop
inc
or
movsl
movsl
and
or
push
movsl
dec
mov
push
fwait
addr16
ljmp
xlat
in
lea
dec
mov
lods
fmuls
rcrl
and
mov
jmp
push
ret
js
mov
addr16
popw
jne
call
inc
aaa
sub
fisubrs
decb
loop
sbb
ja
sub
stos
iret
xor
fcomi
rcrb
xchg
sbb
push
push
cmp
cmpl
sbb
and
lcall
lcall
jmp
decl
test
in
cltd
or
and
cwtl
xor
xlat
sub
hlt
xor
mov
cmpsl
push
add
push
daa
sbb
mov
scas
cld
mov
movsl
cwtl
fwait
test
pop
xchg
sbb
ret
push
loop
popw
push
push
pop
dec
pop
fsubrl
test
pop
mov
mov
inc
es
mov
jmp
int3
js
movsl
loop
data16
mov
js
dec
mov
incl
int
lods
fimull
fdivr
mov
cld
scas
push
jns
adc
xchg
adc
cli
mov
rorl
dec
push
arpl
sub
je
xchg
pop
lcall
dec
pop
repz
add
sub
inc
mov
stos
pop
movsb
mov
addb
fidivs
add
incl
jae
add
push
repnz
mov
sbbb
jg
add
pop
ss
inc
add
pop
imul
add
dec
orb
push
add
and
mov
pop
inc
repnz
adc
pop
and
and
mov
test
vmwrite
pop
pop
imul
push
ret
dec
xor
jg
or
jnp
xchg
cmp
push
daa
add
xchg
dec
and
cmpsl
push
and
out
xor
push
movsb
push
movsb
inc
scas
push
and
stos
jg
aas
xlat
push
and
push
test
and
imul
push
jl
push
push
inc
pop
pop
add
mov
pop
std
mov
lahf
sbb
add
mov
pusha
sbb
mov
push
ds
les
push
adc
fwait
nop
sub
mov
fcmove
insb
or
lret
imul
imul
imul
sub
lret
mov
jbe
fnstenv
fisttpl
lret
jae
mov
stos
pop
cmp
imul
add
push
mov
mov
ret
outsl
push
shll
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fsubrp
mov
fidivrl
out
jge
fisttps
add
fwait
inc
ds
dec
in
movsb
push
add
mov
sbbl
push
cmpb
arpl
push
push
push
aaa
fcmovnbe
mov
push
jne
push
aam
push
ret
add
lahf
jbe
push
mov
push
pop
dec
jbe
cmpsl
mov
push
data16
sarl
pop
aaa
add
push
xor
shlb
lret
stos
mov
add
ja
push
push
xlat
jne
add
push
jbe
fdivs
push
aad
push
xlat
ja
fwait
testb
fidivrl
push
jp
jp
mov
mov
inc
push
fidivrl
sarl
ja
lods
pop
mov
fldl
ret
jmp
ja
mov
ljmp
xchg
in
xchg
sub
je
cs
xchg
xor
xchg
push
setbe
xor
ss
aaa
addr16
fildl
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
mov
mov
mov
push
jmp
std
outsl
imulb
movl
out
push
iret
repz
hlt
clc
stc
cli
sti
cld
or
repz
incb
jecxz
arpl
xor
add
jo
imul
pushw
add
pop
add
pop
add
jo
insb
add
enter
mov
add
adc
add
mov
or
or
outsl
or
and
stos
add
test
mov
or
push
sbb
push
pop
pop
adc
adc
xor
lods
pop
stos
cvtdq2ps
lods
pop
mov
mov
insl
cmp
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
fldcw
sbb
scas
scas
scas
and
subl
inc
and
mov
mov
add
pop
push
mov
push
pusha
cmp
and
xor
lock
test
mov
pop
and
sub
pop
sub
pop
pop
sub
or
sub
daa
in
ret
sub
pop
daa
mov
dec
xor
push
es
mov
insb
shrl
dec
pop
cmp
pusha
fistl
add
into
int3
mov
mov
pop
xor
pop
or
or
int3
add
pop
pop
xor
mov
sti
outsl
lcall
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
ljmp
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jg
jg
jno,pt
add
pushl
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
dec
jmp
pushf
fwait
lcall
mov
mov
das
mov
push
dec
ja
jns
dec
push
bound
loope
insl
xchg
js
imul
mov
jno
jg
lds
mov
movhps
mov
mov
out
add
add
mov
inc
or
push
inc
pop
dec
jle
xchg
pop
outsl
jns
push
dec
add
push
mov
cmpsb
push
mov
xchg
in
js
xor
ja
push
ja
mov
push
jb
cs
xor
mov
add
imulb
pop
jbe
dec
sbb
and
mov
out
xchg
jo
push
inc
mov
cmp
xor
cld
mov
inc
add
jae
xchg
jp
inc
push
std
int3
dec
popf
inc
mov
aaa
add
xchg
jno
lret
push
bound
fidivrs
lods
mov
mov
inc
push
sahf
mov
jg
outsb
xor
add
outsb
add
xchg
xchg
pop
push
data16
dec
jnp
test
push
dec
push
movsb
jae
add
jb
lcall
pusha
shll
outsl
pop
xlat
pushf
push
rorb
add
aaa
out
adc
lcall
outsb
mov
dec
push
mov
scas
testb
ja
sahf
jbe
fistpl
imul
in
daa
outsb
ds
push
add
and
pop
imul
mov
data16
out
test
shrl
insb
pop
outsb
push
outsl
adc
push
ds
insl
sub
sbb
jg
fiadds
or
out
data16
mov
in
mov
add
stos
bound
out
arpl
movsb
out
push
iret
sahf
mov
jb
sbb
in
out
xchg
in
push
jle
or
jecxz
or
flds
fnstcw
aad
push
divb
fildl
lahf
cmpsb
sarb
addb
push
sbb
sbbl
test
test
sbb
popf
int
inc
test
in
mov
push
xchg
nop
and
mov
xchg
in
xchg
lock
sub
sub
cmpsb
jge
add
scas
outsb
out
xchg
das
push
xchg
pop
fldt
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
push
cmpsb
pop
cmp
sub
sbbb
push
cmpsb
scas
jo
or
fs
movsb
sahf
push
pop
jbe
stos
add
shll
lgs
int
mov
stc
insb
fiaddl
push
rcr
rcl
mov
push
aad
jle
data16
add
shr
and
push
dec
dec
and
out
je
dec
push
pop
add
xchg
test
enter
push
or
or
or
es
add
notl
pop
push
adc
push
add
add
testb
mov
sbb
add
mov
adc
or
cwtl
sbb
mov
sbb
add
push
add
and
fildll
mov
and
cs
mov
aas
and
pop
imul
aas
xor
or
aas
aas
inc
sahf
sub
cmp
cmp
and
cmp
sbb
inc
jbe
cmpl
inc
jle
cmp
scas
xor
dec
mov
scas
ds
jle
aas
adc
out
mov
mov
dec
xor
dec
inc
test
inc
scas
add
aaa
lds
ds
mov
ds
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
rcr
std
mov
sahf
ds
xor
sub
sub
sub
sub
mov
add
add
dec
and
inc
mov
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
in
mov
jge
jns
jns
jle
addl
jo
outsb
mov
jne
imul
rolb
lds
add
add
or
cld
incl
jl
push
add
cmc
repz
dec
xor
aas
add
xchg
pop
cmp
test
add
mov
add
mov
fnsave
push
fnstsw
std
and
clc
mov
aaa
add
add
mov
add
mov
push
in
lcall
push
fdiv
mov
or
dec
lret
call
insb
enter
xchg
add
mov
mov
outsl
loopne,pt
test
scas
xchg
js
in
and
out
pop
fldt
jmp
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
std
sahf
insl
fistpl
es
jbe
negl
jns
mov
fcmove
fst
es
push
lret
loopne
adc
or
push
std
into
fdivrp
pop
and
add
jg
jle
jge
push
and
incl
inc
push
xchg
and
dec
dec
enter
dec
dec
dec
add
pop
add
push
dec
or
adc
cmp
in
div
mov
or
dec
dec
dec
inc
add
push
adc
add
stc
pusha
jg
inc
or
pop
pop
cmovg
cmpsl
std
pop
repz
push
dec
sbb
inc
adc
inc
in
in
incb
dec
sbb
dec
add
dec
adc
inc
ds
cmp
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
test
rol
sub
push
add
push
push
lods
mov
out
das
xchg
inc
pop
mov
inc
mov
add
mov
push
addl
push
outsl
add
pop
pop
inc
sub
sbb
addb
add
push
cmpsl
inc
jo
and
or
incl
dec
add
mov
loope
xlat
sbb
incl
shll
outsb
sysret
mov
es
lcall
cltd
fdivrs
data16
pop
stc
sysret
in
mov
stc
hlt
inc
sub
sub
push
push
mov
ja,pn
or
pop
aaa
outsl
cwtl
test
rcrl
xor
pop
lahf
inc
mov
ret
into
jg
jmp
mov
cli
mov
cli
fists
add
add
pop
jg
pop
adc
add
or
test
xchg
jg
orb
pop
add
mov
das
sti
mov
cmp
inc
cwtl
insl
rcll
sti
jg
ret
jo
jg
bound
mov
xchg
sbb
pop
ja
dec
test
idivb
adcb
cld
jg
and
add
jle
cmpsb
add
std
ja
jg
adc
mov
jg
inc
push
or
jg
or
mov
les
decb
push
andl
or
ljmp
pusha
mov
addr16
adc
dec
xor
push
push
incb
xor
data16
xor
and
fsts
add
inc
add
shl
sbb
jbe
mov
push
pop
add
sbb
and
add
mov
sbb
mov
or
pop
xor
fisttpll
jmp
lods
jle
lret
imul
imul
add
add
shlb
mov
inc
pop
dec
cmp
pop
add
adc
pusha
adc
scas
data16
add
push
jg
add
imul
and
lea
incl
xchg
add
jg
cwtl
add
pop
sub
xor
dec
jg
pop
je
lods
jle
ljmp
pop
fdivrp
cmpsb
ljmp
mov
pop
pop
pop
add
fcmovu
mov
daa
aas
aaa
pop
pop
push
add
jle
lock
cmpsb
aaa
add
add
mov
jle
sbb
or
or
dec
xchg
cmp
sldt
mov
in
mov
daa
push
arpl
test
mov
das
pop
push
mov
arpl
out
lcall
decl
dec
test
pop
dec
test
stos
ljmp
dec
sahf
mov
jle
jle
push
sbb
out
dec
test
push
fnstenv
add
push
nop
jmp
pop
push
jbe
mov
push
jnp
push
jp
into
mov
decb
js
dec
jbe
pop
mov
mov
pop
mov
mov
or
es
push
outsb
test
mov
incl
dec
call
fs
outsb
ss
fisttpll
xor
xchg
dec
ja
test
call
push
sahf
jns
fiadds
test
mov
or
sahf
inc
out
adc
xchg
cs
aas
popf
inc
push
pushf
cmp
imul
jnp
fistl
xchg
xor
sub
out
mov
nop
sub
nop
daa
ss
cs
fldcw
adc
outsb
push
xor
or
call
pushl
inc
xchg
mov
or
ja
xor
cmp
sahf
mov
nop
mov
pop
sbb
and
push
add
pop
ja
dec
aad
cltd
mov
bound
and
ja
notb
lock
aaa
mov
add
add
mov
adc
pop
inc
xlat
mov
dec
or
add
insl
lods
pop
push
and
adc
adc
push
adc
out
negl
orl
lea
mov
push
xchg
inc
and
cmp
lock
xchg
out
cmp
pop
cmp
incl
cmp
imul
add
push
add
ds
inc
sbb
out
pop
shrl
mov
mov
leave
mov
mov
inc
push
push
sbb
xor
dec
cli
adc
out
idiv
xchg
std
mov
jmp
syscall
mov
sub
xchg
mov
add
pop
xchg
add
outsl
sbbb
or
mov
sub
adc
iret
xchg
daa
cld
pop
das
pop
adc
jmp
adc
push
cmp
punpcklwd
push
pop
daa
std
out
inc
mov
add
xorb
sbb
incl
sbb
mov
mov
lcall
inc
sub
pushl
decl
lea
mov
mov
sahf
sub
call
mov
pop
decb
mov
decl
int
inc
lcallw
sub
adc
scas
ljmp
sub
decb
mov
clts
add
lods
add
mov
iret
pushw
jle
adc
inc
push
inc
mov
sti
out
ud0
sub
incb
mov
xor
addb
sysret
out
push
add
ljmp
sub
xor
incl
xor
push
sub
pop
shlb
outsl
sti
push
std
jmp
mov
out
adc
push
rorl
inc
call
cmpsl
bound
add
pop
stc
xchg
faddl
push
call
jg
inc
inc
cwtl
out
cli
mov
fwait
test
jmp
sub
add
sbb
incl
test
push
jmp
ss
sbb
pop
in
insl
fnstenv
pop
movsb
or
insb
aaa
mov
fidivs
mov
push
mov
shll
or
push
dec
sahf
ret
decl
scas
nop
xchg
push
adc
jns
mov
test
lahf
inc
inc
push
inc
cmpsb
pop
cmp
inc
pop
mov
push
pop
sahf
movsb
dec
push
stos
push
popf
dec
out
fwait
inc
cmpsb
dec
dec
inc
cmp
push
cs
dec
mov
and
and
push
shrb
enter
rcl
outsb
shrb
es
xchg
int
push
push
jb
xchg
and
imulb
push
iret
insl
leave
je
cmpsb
pop
daa
outsl
pop
imul
push
and
decl
push
xchg
lcall
xor
pop
add
repnz
movsb
es
jmp
adc
pushf
cmp
aas
decb
cwtl
xor
mov
push
inc
push
xchg
outsl
mov
xchg
push
push
aaa
push
lcall
xor
push
xchg
es
xchg
xchg
xchg
notb
sub
lcall
inc
test
inc
jmp
mov
fimuls
loop
add
or
mov
dec
cli
std
faddl
jge
push
jnp
cmpsb
jns
addr16
or
jl
or
insl
sub
fdivrl
jge
jg
es
in
pop
jbe
adc
fidivrl
push
dec
push
dec
repnz
repnz
in
out
xlat
jae
pop
fidivrl
push
mov
jnp
mov
add
in
add
int3
outsb
nop
negl
adc
mov
stc
sbbb
push
add
push
adc
int
push
or
add
addl
es
addl
orb
ja
lcall
xchg
out
push
sub
iret
out
mov
jbe
int
cli
pushl
clc
push
imul
ret
push
enter
inc
sub
jg
je
hlt
fnstenv
cld
fdivrp
outsb
popa
daa
jno
sub
jg
mov
icebp
pop
popa
add
and
mov
jg
mov
ja
aas
inc
and
jp
addb
in
xchg
aaa
inc
ds
incb
out
xchg
xchg
fisttpll
jg
dec
imul
pop
hlt
or
push
ja
dec
and
jge
dec
adc
push
call
fmuls
push
push
fsub
pop
push
or
push
dec
inc
push
int3
decl
jle
mov
fidivrl
arpl
clc
sbb
jbe
mov
push
pop
out
sbb
sbb
pop
push
pop
jne
sbb
mov
and
dec
lcall
cs
jle
jns
mov
push
xor
jmp
xchg
jmp
mov
push
xchg
mov
mov
adcb
xchg
out
sbb
loope
and
lret
jg
out
mov
jb
jo
or
cmp
jns
add
inc
or
xchg
xlat
push
cmovno
adc
jp
and
adc
add
sbb
adc
sbb
shr
inc
and
pop
add
add
push
inc
lahf
orb
push
lret
adc
call
pop
mov
sbb
xchg
push
pop
push
jne
xchg
inc
add
sti
fstp
jbe
sbb
push
sbb
push
fwait
xor
dec
or
and
mov
inc
or
push
stos
arpl
xchg
dec
andb
incl
sbb
adc
mov
sub
stos
mov
adc
cmc
adc
sbb
and
add
add
push
inc
cmp
add
add
adc
sbb
dec
cmp
and
adc
xor
jae
and
xchg
inc
loopne
or
xor
xchg
scas
divl
or
add
dec
test
add
movsb
xchg
cmp
jmp
test
jns
fstpl
jge
push
ret
add
imul
jb
dec
sbb
dec
cmp
push
insl
iret
cmp
add
jno
bound
adc
or
sarb
add
add
cmpl
sbb
je
adc
es
add
add
add
push
insb
insl
and
in
scas
dec
and
popa
shlb
fcomps
scas
xor
jb
arpl
cmp
add
inc
lea
add
bound
filds
push
mov
cmpl
addl
pop
test
xchg
inc
or
repz
or
stos
lcall
inc
and
out
push
test
jno
sarl
scas
jo
xor
dec
movsb
popa
sbb
and
dec
imul
push
pop
sub
add
dec
mov
xchg
bound
pop
dec
insb
out
rcr
incl
sub
sbb
inc
xor
push
in
push
js
insb
jne
addr16
in
mov
add
lea
xorb
sbb
xchg
movb
jno
cmp
lods
push
and
imul
jecxz
jb
xchg
sarb
sub
mov
add
fiaddl
cli
xor
popf
xchg
popl
rclb
pusha
dec
mov
aad
cmp
dec
jecxz
inc
je
sbb
push
add
sbbl
imulb
lret
cwtl
sub
es
je
push
dec
in
inc
mov
xchg
sbb
push
sbb
push
lahf
push
imul
and
xchg
dec
sub
and
lods
mov
inc
aam
outsl
pavgw
invd
inc
xchg
test
ss
pop
adcl
dec
xor
push
push
sub
mov
jb
xor
dec
and
scas
rcll
sbb
mov
lcall
cmp
arpl
pop
pop
mov
inc
rcrl
jg
jge
or
mov
arpl
orb
mov
dec
mov
xor
add
mov
sub
inc
fsubs
sub
xor
push
jmp
jns
in
jae
xor
fists
pop
push
cmp
mov
shlb
mov
leave
push
inc
adc
xor
sbb
scas
jge
push
cmc
add
mov
cs
inc
and
mov
sub
call
push
adc
jecxz
jne
inc
xchg
gs
ljmp
cmp
sbb
pushf
and
fxch
inc
rorl
js
rolb
shll
arpl
dec
or
sub
adc
sub
int3
mov
pop
sub
xchg
jbe
add
aad
test
sbbb
popa
gs
gs
test
idivl
shll
and
insb
fwait
shlb
cs
sarl
mov
mov
push
insl
shll
fdivrp
dec
jbe
arpl
and
testl
mov
imul
cmp
push
ds
inc
push
mov
in
dec
inc
insb
cs
rcpps
adc
jb
inc
inc
mov
mov
fs
or
loop
dec
inc
imul
pop
mov
ja
mov
sahf
daa
jo
shll
push
fs
push
outsl
push
push
mov
jb
adc
shll
push
fwait
push
mov
lahf
add
stos
dec
and
es
sarl
jae
jae
shlb
sub
pop
test
sarl
cwtl
imul
xchg
rcl
push
sbb
fstps
les
cwtl
push
test
std
divb
mov
inc
outsl
sub
xor
mov
testl
imul
mov
pop
and
jg
or
je
insl
dec
outsb
dec
and
stc
jae
sub
mov
pop
sub
insl
ds
push
js
loop
pop
add
add
sbb
mov
movsb
dec
adc
add
or
or
push
imul
imul
jl
push
xor
stc
push
es
cmp
insb
sub
in
fisttps
shlb
add
and
mov
jmp
pop
imul
and
shlb
ds
inc
lret
sub
sbb
addl
and
ret
imul
daa
sbb
data16
pop
add
test
inc
in
add
pop
addl
inc
enter
mov
and
xchg
scas
mov
test
add
xchg
adc
gs
popl
in
add
rorb
mov
adc
mov
and
dec
mov
xor
out
gs
test
dec
scas
add
je
rclb
nop
push
jge
orl
cld
ret
xor
lock
xor
and
adc
cmp
imul
movsb
and
inc
insb
sub
push
push
outsl
inc
outsb
ja
ret
inc
xor
mov
arpl
sub
mov
xchg
gs
out
mov
js
pop
xlat
adc
xchg
xorb
adc
fsubl
xorb
and
inc
enter
insb
mov
sbb
sbb
adc
mov
mov
jbe
adc
or
adc
add
lock
pop
lret
push
mov
sbb
scas
aad
insl
dec
inc
push
xorb
push
and
or
xchg
shll
cld
cmp
sbb
enter
arpl
test
pop
shlb
repz
push
add
aas
outsb
ficomps
inc
cmc
inc
sbb
sub
push
mov
mov
xchg
mov
mov
sbb
push
and
inc
cmp
push
test
push
out
test
in
push
xchg
cmp
daa
outsb
pop
add
shll
aas
scas
inc
sub
push
jne
xor
pop
or
pop
lods
add
dec
jo
jnp
mov
push
mov
mov
inc
adc
mov
xor
jbe
inc
mov
inc
mulb
arpl
rorb
out
jno
lcall
sub
inc
test
add
shll
add
aaa
sub
pusha
adc
test
inc
lcall
push
cmp
mov
sub
push
ljmp
push
push
or
or
neg
cmp
or
sbb
add
add
and
push
xchg
rcll
cmp
push
and
adc
add
push
add
push
or
or
jmp
lcall
mov
sbb
sub
mov
or
and
or
push
or
adc
mov
xor
pop
push
adc
push
inc
pop
adc
sbb
adc
sub
push
push
inc
sbb
sbb
mov
adc
adc
or
xor
and
lea
bndldx
add
mov
divl
xor
sbb
push
add
add
lock
add
imul
sbb
xor
jl
sub
xor
cmp
add
or
push
or
xor
sbb
or
add
adc
ss
sbb
subps
inc
std
idiv
outsl
pop
sbb
push
sub
or
and
sbb
or
pop
sub
inc
sbb
add
sub
sbb
lods
add
sbb
adc
and
std
jg
rcll
hlt
and
xor
sbbb
push
and
daa
push
or
std
mov
or
or
add
dec
mov
fists
jl
xor
push
cmp
and
sub
mov
add
movsb
adc
sahf
bound
adc
wbinvd
adc
or
mov
adc
jbe
xchg
and
add
or
daa
lods
jns
jg
es
xor
xor
or
cmp
daa
jg
ja
aas
sub
and
sub
or
cmp
es
xor
fsubrs
lock
fdivrs
das
push
bswap
add
or
incl
jnp
push
xchg
adc
or
push
push
lods
adc
inc
mov
fs
sub
push
push
or
pop
aaa
adc
mov
or
adc
daa
adc
or
xor
fildll
bound
es
mov
xchg
daa
cmp
pushl
bound
inc
and
or
add
mov
and
or
sub
or
or
or
pop
adc
push
pop
and
or
or
jb
adc
pop
std
cmp
sub
sub
jg
lock
int3
shll
repnz
inc
sbb
xor
das
mov
aaa
add
mov
lock
or
dec
sub
sbb
cld
in
mov
push
push
push
adc
add
adc
outsl
call
movsb
or
cmp
sub
push
or
bound
jo
test
mov
sbb
ljmp
dec
rdpmc
pop
and
or
push
sbb
xchg
jb
xor
cmp
adc
pushl
addr16
jp
cmp
adc
sub
lock
add
cmp
incl
adc
cmp
sbb
sbb
add
cmp
lcall
pop
shl
test
sub
or
push
or
adc
mov
unpckhps
sbb
cmp
mov
push
xor
cld
cmp
clc
mov
outsl
dec
adc
lock
add
sub
fisttpl
push
fdivs
out
je
movsl
push
sub
outsb
add
push
fcomip
push
mov
pop
adc
or
mov
adc
xor
ficoms
jae
testb
add
push
push
and
mov
sbb
adc
call
inc
mov
jmp
push
push
or
cmp
or
mov
add
cmpsl
or
fdivr
push
cld
dec
inc
outsb
fadd
rcrl
xor
bound
adc
outsl
cmp
add
or
add
insl
fmull
and
xor
incl
adc
cmp
adc
adc
in
filds
adc
lods
lock
fcoms
psubsb
sub
adc
jno
adc
sbb
scas
cli
fwait
int3
xchg
push
pop
and
adc
and
push
mov
sbb
lock
or
or
jecxz
jg
inc
addr16
aas
dec
pop
pop
imul
lods
xor
sub
and
lock
add
push
std
jmp
adc
inc
ds
test
jg
scas
adc
andb
jno
sub
outsl
stos
aaa
insb
or
scas
out
stos
arpl
sbb
sbb
adc
inc
push
mov
push
and
pop
xor
xor
daa
inc
sbb
movlps
decl
push
sbb
sbb
adc
aaa
and
or
aaa
push
sbb
xchg
jb
xor
adc
hlt
cwtl
or
adc
cmp
dec
jnp
jne
and
adc
add
sub
mov
xor
inc
and
sbb
adc
filds
mov
push
cmp
dec
fimull
cltd
in
rorl
sub
adc
sub
sbb
adc
xor
std
ljmp
and
inc
lock
add
sub
add
inc
jg
push
scas
cli
mov
push
mov
cmpsb
fcmovu
jb
rolb
adc
jno
and
and
add
add
pop
lock
dec
dec
jp
sbb
cmp
fbld
xlat
sub
xchg
sbb
cwtl
jle
jg
or
adc
inc
cmp
inc
daa
insb
and
xor
ja
aam
and
add
push
or
push
scas
jnp
mov
aaa
push
xor
push
pop
and
pop
jno
add
jo
xor
or
xor
adc
push
and
push
sbb
scas
call
dec
dec
dec
push
push
and
mov
idiv
sbb
and
pop
ud2
adc
lret
jg
in
mulps
pop
cs
push
cmp
adc
sub
adc
xlat
lcall
push
xor
cmpsb
mov
push
jne
dec
sbb
daa
inc
adc
push
or
sub
xlat
sarb
adc
ja
add
dec
pop
add
add
pop
sbb
add
sbb
adcb
pop
inc
and
movsl
or
fcomip
sbb
lock
sti
add
sbb
sbb
dec
add
loopne
jae
shl
mov
lock
push
pop
mov
lock
fisubs
sub
add
inc
push
sbb
adc
and
add
sbb
adc
daa
pop
adc
cld
lret
adc
adc
aaa
dec
or
inc
push
and
decb
jae
sub
push
adc
mov
daa
sbbb
ds
insb
sbb
call
inc
inc
jg
popf
and
fistpl
imul
or
dec
pop
cmp
test
or
negl
outsl
ret
in
sbb
xor
push
dec
ss
add
adc
jg
dec
adc
sbb
add
lock
add
sbb
addr16
ljmp
adc
sahf
nopl
sbb
push
mov
push
or
bound
sub
or
cmp
mov
lock
or
or
dec
sub
sub
xor
push
or
pop
inc
adc
adc
push
inc
inc
push
sbb
add
pusha
data16
js
mov
out
xor
xor
fwait
mov
jl
and
aas
pop
inc
and
push
cld
popl
aas
scas
xor
xor
sbb
pop
add
test
push
sbb
push
pop
push
sbb
sbb
scas
std
fisttpl
jo
pop
aaa
and
add
aas
enter
inc
cs
mov
dec
sub
sub
adc
lock
std
add
loope
call
lock
add
add
pop
or
add
cmp
or
sbbb
sbb
push
xor
cmp
adc
pop
or
ljmp
mov
push
lcall
push
sbb
cmp
unpcklps
cmp
aaa
cld
jmp
sub
or
and
inc
or
ret
sbb
adc
scas
js
daa
adc
or
or
sbb
cli
or
sbb
xor
aas
adc
push
push
sub
adc
pop
sbb
enter
pop
xor
and
mov
mov
dec
roll
ljmp
daa
outsb
jo
loop
push
inc
ljmp
add
add
leave
add
movlps
pop
sbb
add
std
ds
lock
add
jb
pop
sub
aas
clc
fistpll
outsl
and
push
dec
push
cs
fs
lahf
dec
call
outsl
pop
jge
mov
xor
add
lock
lock
lcall
std
pushw
and
add
push
dec
xor
pop
in
decl
movntps
push
pop
adc
adc
push
and
sbb
or
clc
inc
push
or
jne
sub
adc
movsb
adc
pop
push
sbb
dec
pop
sub
sbb
inc
push
push
inc
or
pop
dec
cmp
mov
mov
and
sub
movsb
pop
paddb
or
push
cs
sub
or
push
mov
or
call
sbb
adc
adc
daa
or
dec
prefetch
lock
and
pop
push
xchg
movsl
adc
pop
pop
fwait
jle
sub
pusha
push
sbb
or
out
cli
xchg
test
pop
xor
adc
push
or
adc
jg
xchg
or
adc
add
pushl
adc
push
subb
lock
add
and
wbinvd
push
xor
incl
cwtl
push
dec
xor
inc
adc
sub
scas
xor
sbb
nop
pop
or
sbb
sub
mov
inc
inc
cmp
test
adc
cmp
mov
xor
xchg
clc
popa
pop
sbb
cli
arpl
cmpsb
or
inc
adc
and
sbb
inc
cmp
ljmp
ljmp
adc
adc
les
fidivl
jnp
and
adc
cwtl
pop
ss
mov
lods
fs
xor
inc
les
lods
cli
sbb
inc
sub
inc
xor
jp
sbb
cmpb
push
push
xor
test
or
xor
inc
mov
fildl
sbb
sub
aas
fdiv
and
das
xchg
cmp
ds
aas
push
mov
js
mov
adc
cmp
or
ljmp
loopne
inc
push
pop
dec
sbb
cmp
fisubs
jg
aam
pop
mov
jb
sbb
add
das
es
push
or
sbb
jo
mov
adc
es
ljmp
frstor
adc
ljmp
sub
or
adc
sbb
jmp
cld
rcrb
inc
data16
pop
add
xchg
andl
xor
sbb
mov
dec
adc
push
push
sub
lcall
lock
sub
xchg
sbb
and
push
aaa
dec
lock
pop
and
add
pop
icebp
lahf
sbb
xor
push
push
inc
inc
sub
das
sbb
dec
jle
pop
sbb
and
xor
bswap
rcrl
test
cmp
adc
femms
aaa
dec
adc
or
push
mov
pop
fwait
add
hlt
pop
cmp
and
xchg
pop
inc
sub
or
les
lock
inc
or
or
jg
les
xor
lea
adc
jle
sbb
in
pop
inc
and
ret
adc
ds
mov
or
pop
adc
or
push
ja
shl
adc
sub
cmp
rclb
pop
sub
lock
inc
dec
adc
sbb
push
adc
push
or
mov
hlt
add
and
in
jbe
and
add
sti
cmpsb
sbb
push
inc
xchg
or
or
add
sar
outsl
xchg
outsb
and
cmp
cmp
jp
ffreep
adc
or
inc
or
pop
arpl
inc
push
pusha
adc
mov
sbb
inc
fmuls
or
or
arpl
insb
bnd
sbb
pop
scas
pop
inc
push
sbb
arpl
test
push
std
jmp
movsl
inc
cmp
sbb
sbb
pop
lock
add
dec
cmp
adc
or
jl
mov
dec
inc
or
adc
andl
decl
inc
sbb
ds
sbb
and
push
dec
fmuls
pop
ds
or
or
dec
addr16
or
or
addb
faddl
xchg
xor
fbstp
test
test
xor
cmp
aam
inc
or
or
or
and
adc
cli
add
call
loopne
nop
aaa
popa
push
das
or
and
add
inc
adc
incl
sub
pop
popa
lahf
pop
sub
mov
adc
sbb
and
pop
inc
adc
js
test
cmp
adc
and
cmp
mov
jo
cmp
orb
loop
mov
icebp
push
es
pop
cld
sbb
sub
sbb
adc
dec
pop
and
lds
add
inc
push
aaa
test
aas
add
bound
cmp
daa
inc
add
pop
adc
sbb
pop
and
call
out
imul
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
xchg
mov
xor
and
push
cmp
jb
sub
push
mov
push
add
lcall
sbb
dec
nop
jg
lcall
and
or
outsl
dec
dec
sub
push
sub
sbb
cmp
sbb
sar
pop
outsb
xor
pop
mov
pop
cld
dec
and
sub
xor
dec
mov
add
out
dec
mov
jl
push
nop
sbb
xor
mov
test
mov
mov
inc
pavgb
or
sbb
push
push
pop
adc
pop
or
add
mov
les
test
pcmpgtw
or
lahf
add
jo
lar
mov
add
push
cli
mov
call
lock
add
dec
sbb
mov
mov
sub
jbe
push
mov
jl
add
sbb
aam
push
hlt
mov
loope
push
data16
mov
in
sub
outsb
add
fldl
mov
add
or
or
push
lock
add
lret
js
data16
lock
mov
add
sbb
lock
sbb
jecxz
or
mov
push
pop
in
push
lock
jg
testb
cwtl
add
bound
pop
aad
lea
call
add
es
cmpsb
adc
mov
adc
or
xor
mov
mov
lock
pop
add
outsb
in
add
js
xchg
dec
or
push
pop
sbb
adc
sbb
adc
or
adc
or
ret
mov
add
xor
push
dec
or
and
add
fcmove
sbb
loop
lock
or
inc
push
push
shll
add
cmp
scas
pop
jno
add
cmp
or
sbb
adc
int
pushl
xor
outsl
pop
je
aam
pop
push
loopne
icebp
orb
add
dec
dec
dec
push
ret
js,pn
imul
push
cwtl
int3
add
or
adc
or
mov
loopne
es
push
sub
iret
mov
jp
or
or
sahf
sub
or
adc
out
mov
push
and
push
add
movsl
inc
add
sbb
cmp
or
xor
rcl
add
sbb
inc
jmp
js
mov
sbb
cwtl
push
es
lcall
test
add
and
loopne
and
push
mov
lock
ds
inc
clc
incl
fnsave
adc
je
adc
and
sbb
cmp
or
cmp
or
add
shl
cmp
cmpsb
inc
push
push
je
pop
into
sub
push
mov
add
cmp
and
into
sub
add
fdivs
lods
add
lock
cltd
shlb
les
lock
add
mov
sbb
pop
sbb
adc
or
mov
or
adc
adc
push
sbb
cmpsb
sahf
fnsave
adc
adc
das
dec
or
es
aas
insb
bound
lock
and
xor
add
mov
add
int
lock
sub
xchg
pop
mov
sbb
pop
xchg
fcmovbe
xor
popfw
decl
out
jp
and
adc
mov
adc
movsb
outsb
das
pop
or
pop
push
adc
clc
push
and
sbb
faddl
and
inc
push
push
adc
push
popa
xor
or
movsb
add
inc
outsb
out
push
push
xor
cmpsl
cwtl
and
or
sbb
mov
jle
cltd
lock
adc
adc
pusha
ret
sbb
addl
or
adcb
jg
sub
and
dec
or
push
xchg
mov
add
mov
cwtl
push
mov
sbb
sub
lock
add
or
adc
or
push
xor
push
mov
or
adc
and
sbb
cs
or
and
or
cmp
or
add
lock
out
clc
add
mov
jl
sub
sbb
cltd
inc
outsl
inc
movsl
add
adc
jg
outsl
mov
add
pop
cmp
pop
mov
sbb
push
jecxz
std
call
pop
or
push
adc
and
xor
push
mov
and
adc
loopne
jecxz
mov
les
lock
das
add
sbb
int
lock
add
ss
jb
pop
xor
dec
arpl
add
cmp
sbb
sbb
dec
mov
sbb
pop
adc
in
fcmovnu
cmp
push
mov
xchg
push
sub
jle
sub
das
inc
fbstp
dec
inc
sbb
and
ss
in
imul
outsl
xor
xor
xchg
sub
dec
and
push
inc
aad
sti
dec
cmp
inc
inc
sub
or
dec
js
dec
inc
xor
ds
xor
jge
decb
push
and
cmp
cmp
cmp
cmp
cmp
lcall
das
je
jp
jle
xchg
and
cmp
sub
orl
subl
in
lcall
dec
pop
pop
shl
xor
sub
sub
push
ds
dec
xor
loopne
jmp
xchg
dec
pop
dec
push
push
push
and
jl
xchg
cmp
movsl
xor
outsl
fldt
mov
arpl
inc
inc
pop
lret
hlt
xor
aas
shll
andl
subl
push
pop
dec
mov
lock
add
sahf
stc
outsl
mov
sub
jo
cmp
and
inc
cmp
dec
cmp
push
and
jo
xor
cmp
xorl
lock
nop
dec
int
or
mov
push
add
push
push
sbb
mov
lock
aaa
rclb
clc
in
mov
dec
add
aam
lock
push
add
or
add
or
in
add
dec
and
jne
rclb
add
inc
or
sbb
test
inc
sub
dec
test
sub
push
xor
test
add
inc
js
push
push
imul
push
push
or
test
adc
rorb
insb
sbb
push
lods
imul
pop
adc
mov
ss
add
or
sub
test
les
aam
mov
lock
jno
dec
cmc
lock
mov
push
mov
add
mov
mulb
or
bound
cmp
nop
shlb
add
add
jae
inc
mov
cmp
movsb
fldenv
add
dec
inc
inc
mov
add
pusha
inc
and
fdivrp
aam
sbb
or
adc
sbb
mov
dec
xor
adc
or
mov
das
push
or
mov
test
or
prefetchnta
mov
or
inc
add
inc
adc
adc
test
mov
fistl
mov
inc
adcb
fsubrp
push
xor
add
jno
push
xchg
jbe
cmp
adc
bound
mov
sbbl
mov
daa
dec
cmp
je
push
sbb
mov
push
push
mov
push
test
push
pop
cmc
mov
leave
xchg
iret
shlb
fdivrp
testl
or
pop
sbb
sbb
rolb
adc
lods
cltd
out
mov
sbb
add
neg
insl
int
sub
adc
insb
pusha
adc
push
fsubr
mov
cmp
pop
adc
and
add
mov
or
add
aaa
cmp
test
adc
or
daa
cmp
jae
neg
mov
fwait
sub
imul
cmp
cmpsl
xor
sbb
in
pop
imulb
or
adc
sti
mull
push
inc
pop
sbb
mov
cltd
outsl
push
popf
mov
shrl
and
push
and
pop
ficoml
pop
sbb
cmp
movsl
inc
jo
and
xor
xchg
xchg
mov
xor
xchg
sysret
mov
popf
les
test
mov
cmp
or
lods
movsl
and
inc
jae
push
lods
insl
stos
add
dec
daa
into
cmp
push
adc
and
or
mov
and
jp
or
adc
add
clc
mov
sub
or
lods
arpl
and
mov
ja
dec
adc
push
pusha
imul
mov
fidivrl
push
xlat
mov
xchg
mov
xor
sarl
xchg
imul
xchg
pop
je
inc
and
xchg
fisubrl
cmpsb
adc
mov
mov
cmp
fpatan
sbb
out
jns
ja
xchg
flds
add
push
xor
push
adc
or
sbb
movsb
xchg
shld
std
sub
push
outsl
sub
cmp
sbb
pop
fisubrl
jge
ret
or
rorl
mov
adcl
and
dec
inc
loopne
ljmp
adc
pop
pop
adc
add
roll
push
or
push
popa
outsl
adc
loopne
and
push
jo
push
jne
lods
and
inc
xchg
ss
push
mov
or
es
adc
xor
adc
add
mov
xor
sbb
jecxz
ret
in
add
or
lds
inc
xorl
xor
jle
sub
xor
and
add
add
dec
add
and
jbe
in
add
sub
cmp
xor
sbb
or
push
push
cmp
or
addr16
mov
xor
pop
add
xor
sbb
xor
test
jecxz
test
push
and
fldt
sbb
pop
inc
and
divl
sub
push
sbb
sbb
mov
cmp
jle
inc
cmp
in
add
adc
test
add
and
or
outsl
cmp
add
in
add
loop
sti
stos
lock
fsubrs
mov
push
jge
add
test
xchg
aad
add
pop
add
add
dec
add
nop
mov
add
sub
pop
shll
dec
inc
sbb
mov
add
dec
sub
add
dec
lock
add
xchg
push
fmuls
push
loopne
pop
lea
test
mov
nop
ljmp
jbe
push
out
mov
rol
adc
ficoml
xchg
pop
mov
sbb
fidivs
jo
cmpsb
xor
adc
popf
adc
xchg
and
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
