divb
in
mov
mov
rorb
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sub
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
jo
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
jl
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
or
test
pushf
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
les
adc
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
adc
jmp
je
add
movsb
das
ljmp
in
or
outsl
and
jns
mov
or
push
enter
icebp
mov
or
inc
mov
rcll
mov
dec
push
adc
pop
mov
call
jne
pop
add
inc
bound
xor
fwait
hlt
cmp
xchg
dec
mov
push
mov
jns
xor
push
and
mov
push
push
sub
add
cmpps
das
cwtl
jl
test
pop
bound
in
push
stos
lock
xor
pop
je
sbb
mov
mov
sbb
push
adc
cmp
jg
adc
in
jns
add
dec
addr16
xor
push
lea
mov
add
or
mov
lods
xor
scas
jno
lahf
rcrl
add
pop
pop
cmpsb
mov
mov
in
sbb
add
or
jns
insb
fdivrs
popf
pop
daa
js
adc
dec
cmp
pop
lea
addr16
test
shlb
imul
and
and
sbb
rcr
sbb
sbb
sbb
jne
cmp
push
sbb
sub
outsl
push
push
stos
pop
xor
xchg
mov
mov
and
adc
ja
xchg
notb
stc
movups
and
out
push
cmp
popf
cmpl
outsl
inc
push
mov
push
cltd
clc
cmp
ret
jne
mov
add
cmp
mov
jle
push
xchg
jmp
loop
stos
sbb
and
sti
lods
dec
and
ret
xchg
arpl
pop
lods
push
dec
pushf
push
jbe
ficoms
jmp
cmp
cmp
fucomip
sub
jne
sub
dec
je
mov
adc
in
jge
adc
push
lret
ss
jge
cmp
jmp
mov
mov
and
inc
rorb
leave
jmp
fiaddl
cmp
push
jecxz
jne
out
popa
hlt
or
jmp
push
add
push
mov
xor
pop
or
and
cld
pop
inc
add
mov
mov
lret
sti
divl
or
pop
push
mov
xorl
dec
icebp
mov
mov
dec
mov
loop
loopne
push
or
push
imul
pushl
js
sub
jbe
pop
jbe
mov
fcomps
or
int3
sub
mov
rolb
jmp
cmp
je
cmp
ficompl
push
pop
lahf
jmp
inc
sbb
leave
adc
repz
lcall
cmpsb
sbb
fstpl
mov
cmp
jmp
sbb
addr16
cmp
sbb
je
arpl
pop
or
sbb
jge
in
incl
into
pop
push
aaa
push
inc
push
push
out
sahf
out
jnp
ret
in
add
jns
cmc
xchg
pushf
cmpsl
fcompl
mov
inc
sbb
mov
mov
add
data16
mov
sub
or
xchg
push
mov
lea
adc
xchg
out
fwait
sub
mov
fadd
push
test
add
out
push
int
mov
sbb
xchg
pop
jge
mull
cmp
push
dec
push
mov
das
push
lea
push
lea
push
push
push
push
add
push
lea
fs
dec
cmp
cmp
adc
mov
inc
test
lods
add
dec
or
or
adc
pop
mov
dec
call
add
xor
mov
insb
sbb
mov
imul
lea
aam
sbb
push
xchg
das
imul
cmpb
add
jl
inc
xor
add
into
sub
push
xor
pop
inc
mov
inc
push
push
and
push
fidivs
mov
addl
mov
add
movl
cmp
push
notb
jmp
mov
pusha
and
mov
push
jbe
insb
jne
mov
add
xorb
jne
mov
pop
jne
push
add
ret
data16
jns
inc
add
xchg
adc
test
push
repz
imul
dec
cmp
sub
movsb
in
in
xchg
dec
sar
ret
out
in
dec
and
add
orb
mov
movsl
push
cli
loop
lea
neg
push
int
test
js
repz
dec
bound
push
cmp
sbb
sbb
jl
xchg
xchg
sbb
pop
xchg
adc
mov
lea
jl
lcall
adc
mov
ret
or
push
push
xor
popa
push
loopne
jecxz
push
xchg
pop
mov
popa
aam
push
aam
das
in
jb
mov
ds
mov
add
fcoml
bound
dec
fildl
cmp
rcr
loopne
add
dec
shlb
cmpsl
nop
xchg
aam
pop
movsb
jmp
mov
sub
inc
scas
xor
adc
xchg
cmpsb
int3
cmp
jne
push
sub
xor
inc
sar
pop
clc
js
sti
stos
adcb
je
lea
push
loopne
adc
pop
rolb
mov
jo
ret
pop
add
sbb
cmp
fdivrl
call
push
or
adc
pop
shrb
cmp
rorb
xor
push
les
inc
push
mov
lock
lods
movd
lea
dec
push
push
sbb
cmp
fidivrs
pop
xchg
or
in
dec
jmp
sub
decl
sub
in
cmp
push
mov
add
mov
shll
add
inc
inc
dec
cmp
scas
xchg
clc
dec
adc
xor
mov
lds
push
mov
cmp
vpunpckhwd
insb
repnz
sub
inc
rcr
pop
dec
in
dec
sbb
mov
cmp
or
lea
and
mov
add
and
dec
insl
xor
into
in
and
dec
out
insl
shll
cmp
push
push
mov
negb
pop
adc
decl
dec
popf
jp
fimull
leave
and
jbe
loope
push
push
out
cmp
out
ja
adc
mov
push
out
enter
enter
mov
sub
xlat
adc
mov
scas
add
sbbl
punpckhdq
push
lods
mov
and
adc
aaa
and
dec
jae
push
ret
test
clc
daa
xchg
pop
pop
loopne
fmull
push
dec
das
sbb
jl
in
pop
ljmp
pop
mov
icebp
jg
fwait
enter
cmpl
jne
pushl
out
loopne
pop
or
push
or
adc
je
xor
mov
outsl
cld
adc
add
adc
and
mov
ret
add
inc
adc
inc
shl
xchg
sub
sti
je
cmp
xor
sbb
mov
jno
add
pop
adc
or
mov
mov
xchg
in
inc
push
int
push
or
xor
jg
push
jne
movb
jmp
cmp
jne
cmpsl
enter
movsl
fldz
xor
sub
popa
push
push
movb
loope
stc
insl
dec
aas
mov
cmp
mov
push
insl
inc
pop
ja
mov
sub
cmp
xchg
test
sbb
lock
scas
sti
or
test
and
test
int3
mov
mov
mov
pop
sti
push
push
dec
or
adcb
xor
push
stos
push
mov
adc
fcoml
sbb
push
nop
pop
cmp
iret
push
adc
enter
orb
sub
in
movsl
out
mov
mov
jl
adcb
pusha
xchg
scas
mov
mov
adcl
dec
rcll
adc
adc
lret
xor
sbb
push
cmpsb
adc
lea
and
ss
xor
mov
push
mov
push
jbe
jno
call
push
lret
out
ja
jl
xchg
andb
mov
sbb
mov
xchg
out
dec
imul
mov
test
mov
out
lcall
aaa
pop
inc
ficomps
mov
rorb
inc
cmp
mov
fmull
insb
cmpsl
mov
int3
dec
add
pop
je
push
aaa
movsl
or
cmp
or
ja
jl
cltd
cli
jno
cltd
mov
idivl
out
andl
pop
pop
out
add
jno
insb
inc
sbb
arpl
in
cmp
js
ds
pusha
rorl
fstpl
and
push
cmp
je
or
adc
or
call
and
iret
dec
or
rclb
cmc
jmp
mov
mov
xor
rorl
cmp
cmp
dec
rcll
lea
cld
clc
push
jle
add
and
cmp
cmp
cmp
negb
push
add
push
jne
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mull
push
insb
repz
mov
jmp
fisubrs
add
stos
add
push
cli
or
push
sub
push
push
popa
cs
push
testb
movsl
mov
xor
push
sbb
push
sub
jecxz
mov
jl
xlat
sbb
in
loope
or
out
jo
into
inc
sub
insl
mov
insb
xorb
or
sub
sbb
add
and
popf
mov
jl
push
cld
inc
clc
mov
cltd
mov
lea
push
sti
js
decl
orl
or
shlb
add
cmp
jge
ds
daa
les
idiv
push
mov
mov
jno
aam
mov
ret
xor
idiv
notl
adc
add
std
test
jg
mov
sbbb
jg
push
ljmpw
lds
scas
mov
test
xor
sub
scas
aas
out
jge
add
adc
push
pop
lock
lahf
mov
or
out
dec
fstpl
push
pop
add
xor
sti
sub
rcrb
jge
je
out
sbb
test
out
movsb
mov
add
fisttpl
fiaddl
movsl
daa
pusha
js
sti
ds
jg
scas
jnp
dec
fs
or
xchg
arpl
mov
leave
jle
cmp
xor
sub
negl
pushf
movb
push
inc
lahf
mov
inc
ljmp
jl
push
adc
sub
cmp
jmp
dec
nop
or
out
jp
into
test
jle
pop
sub
hlt
mov
test
jns
cld
mov
inc
add
xor
xor
mov
fdivrp
movsl
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmpb
cld
mov
je
into
clc
fidivl
jmp
push
xchg
cmp
rolb
fstp
cmc
push
pop
mov
pop
jne
pop
pop
movb
clc
mov
push
cmp
mov
mov
xor
push
inc
mov
add
imul
lret
rorb
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
cmp
sbb
loopne
or
push
cmc
bound
out
push
pop
pop
push
sub
jecxz
and
jle
lds
pusha
cs
scas
push
stos
sub
ret
push
mov
add
call
push
and
cltd
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcrl
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
les
jmp
punpckhdq
leave
adc
jno
test
add
add
add
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
pop
in
dec
and
mov
push
lods
das
add
hlt
jno
sarl
mov
push
adc
pop
adc
fcmovbe
iret
js
and
andl
shlb
adc
push
add
cmpsb
jle
add
imul
pop
mov
sub
mov
mov
or
add
popl
nop
dec
outsb
scas
sbb
push
pop
push
xchg
sbb
mov
mov
ds
nop
adc
fs
cli
xchg
int3
push
push
pop
in
pusha
cmp
out
pop
popf
dec
daa
add
stc
sbb
jl
aad
sbb
dec
and
lds
inc
push
icebp
in
cmp
jge
orl
and
fs
scas
mov
push
jbe
push
and
shll
sub
aas
outsl
add
xor
inc
inc
push
add
inc
jae
inc
sub
clc
push
sub
clc
setb
test
daa
add
mov
cmp
jo
movsb
je
xor
dec
adc
data16
pop
or
mov
lods
aaa
adcb
jle
loopne
icebp
sub
or
out
mov
pop
inc
add
push
xor
cld
mov
dec
dec
mov
jo
adc
pop
push
push
hlt
jo
add
jecxz
sub
add
mov
fsts
add
shrl
inc
scas
sbbb
das
push
scas
xchg
enter
int
xchg
popf
or
stc
inc
bound
sbbb
sbb
sbb
push
in
pop
or
pop
xor
popa
sub
pusha
sbb
bound
mov
fisubs
mov
mov
inc
inc
in
aas
jmp
test
push
or
add
adc
arpl
movl
popa
cld
mov
dec
jl
je
and
add
or
lock
push
pop
adc
mov
pop
or
jg
inc
xor
adc
xchg
push
push
push
add
jmp
mov
sub
mov
jnp
xchg
jo
add
mov
idivl
aam
mov
and
jb
inc
aaa
adc
xchg
xor
jmp
rolb
xor
cmc
xchg
push
add
push
out
adc
push
shlb
icebp
and
pop
push
and
enter
and
dec
fwait
popf
or
or
pushl
imul
insb
aam
lock
or
aam
mov
jp
lods
inc
mov
jae
imul
mov
sbb
stos
pusha
sarb
sbb
sbb
xor
mov
test
dec
in
call
jo
or
xor
mov
fcmovbe
mov
sbb
mov
adc
push
sbb
out
pop
push
push
mov
pusha
das
call
jo
mov
push
popa
cmp
xchg
loope
aam
and
pop
cmpsb
jo
cmp
fsubrl
in
mov
pop
push
push
outsl
sbb
jmp
sti
dec
jnp
mov
mov
scas
adc
int3
jp
or
push
cmpsl
pop
fs
fcoms
dec
cmpsl
adc
ja
add
push
cmp
mov
shrb
push
mov
add
and
dec
jae
cmp
sbb
xchg
sub
test
or
jne
mov
outsb
pop
je
out
cmpsb
loopne
arpl
sbb
xchg
mov
pop
pushl
push
lret
mov
shl
jmp
enter
andl
dec
cmp
mov
add
addr16
arpl
ret
je
call
fidivrs
test
je
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
jo
pusha
inc
xor
movsl
stos
add
shlb
mov
or
fmulp
js
out
std
cmp
jge
mov
mov
mov
cmp
sbbb
push
add
or
push
pusha
jle
call
sub
fcom
or
push
sahf
or
fsubr
sbb
popf
fwait
and
jns
fdivrs
out
je
xchg
data16
pop
mov
sbb
mov
jno
or
stos
shlb
test
into
cmp
xchg
iret
andb
add
jo
sub
cld
inc
cmp
sete
adc
loope
adcb
inc
sbb
adcl
push
ret
mov
mov
jo
jp
jno
shrb
mov
or
jno
sbb
and
add
subb
bnd
and
fwait
mov
popf
xor
loopne
add
sbb
mov
int3
imul
xchg
mov
pop
push
pop
sbb
sarb
pop
cmp
lods
pop
dec
rorb
jae
add
sti
push
dec
lock
mov
ret
movb
add
ror
xchg
push
in
sbb
imul
outsb
mov
movsb
ss
sbb
call
cld
fnstsw
insb
dec
sub
push
iret
ss
lods
aad
fdivs
push
and
push
sbb
push
xchg
push
or
mov
bound
mov
mov
or
mov
adc
inc
outsl
mov
enter
jne
in
roll
pop
pop
adc
loopne
sbb
clc
mov
fmull
mov
lcall
test
test
in
call
ja
fdiv
in
sbb
sbb
clc
push
mov
sub
jns
pop
pop
arpl
andl
or
je
movsl
imul
xchg
lock
insb
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
daa
xor
insb
shll
shlb
jg
adc
jbe
cs
jb
xchg
or
mov
in
push
lds
xlat
sbb
cmpsl
adc
pop
inc
clc
adc
add
clc
sub
inc
mov
cmp
das
xor
xor
hlt
add
and
mov
push
dec
push
pushl
xor
mov
xor
lret
push
add
add
cmp
pop
clc
dec
xchg
nop
jb
jnp
adc
lods
hlt
das
mov
cmp
jmp
das
hlt
dec
jo
outsb
mov
out
or
in
sub
add
into
push
push
add
push
outsl
or
or
jp
loopne
gs
adc
dec
dec
push
in
imulb
mov
mov
jl
mov
jbe
xor
rcrl
sbb
sub
jg
mov
addr16
aam
loope
and
ret
lahf
std
mov
aad
xor
dec
aas
or
sub
xor
jbe
or
mov
sbb
push
add
clc
sbb
out
mov
pop
daa
pop
push
mov
js
mov
adc
inc
incl
repz
xor
xor
push
jg
icebp
fwait
or
jbe
movzwl
adc
add
xor
pop
test
lea
push
jl
mov
in
push
rcll
in
pusha
gs
sbbb
cmp
jbe
pop
push
mov
hlt
mov
add
adc
add
jo
and
ljmp
cmp
add
xor
sti
mov
inc
push
push
fisttps
in
lods
xor
sbbb
push
mov
pop
rolb
mov
int3
sub
rcrb
mov
add
inc
cmp
pop
xchg
adc
pop
mov
push
retw
add
push
lods
lea
and
mov
jne
xchg
xor
push
sub
shlb
popl
jmp
adc
cltd
mov
xchg
push
aam
inc
arpl
push
cmp
or
sub
sub
mov
ja
sbb
lock
cmpsb
add
mov
jo
scas
movl
jle
or
pop
pop
push
es
push
mov
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
push
cmp
imul
cmp
jns
sbbl
xchg
nop
fisttpll
aaa
jns
popf
lcall
push
mov
fstpl
cmp
mov
add
enter
cmp
fadd
mov
lods
jmp
or
and
add
sub
lock
push
sahf
int3
jmp
mov
jb
js
add
dec
fs
adcb
shlb
add
add
lea
dec
jnp
js
inc
insl
xchg
shr
aad
inc
sbb
shrl
add
sbb
call
iret
pusha
pusha
xchg
mov
mov
mov
sbb
mov
sbb
mov
in
cmp
les
das
sub
aas
xor
jns
cmp
jmp
pop
neg
xlat
xchg
sub
pop
daa
cltd
add
push
adc
sahf
dec
pop
push
int
les
test
adc
scas
ret
pushf
into
mov
jl,pn
jmp
cmpl
jg
inc
mull
jo
leave
cmp
jo
fwait
add
rolb
xor
fnstenv
lret
adc
sbb
pop
sub
addl
xchg
inc
mov
pop
push
stos
dec
shrl
pop
insb
add
add
pop
and
cmpsl
add
outsb
cwtl
adc
sbb
in
in
jmp
pop
in
mov
pop
ds
add
nop
add
push
stc
ljmp
add
dec
xor
daa
cmp
push
pop
flds
add
in
scas
dec
call
adc
out
mov
or
fidivrl
ret
adc
inc
or
lcall
mov
lret
and
sub
mov
jp
push
cwtl
push
test
cwtl
xor
stc
popf
sub
lea
test
add
mov
nop
push
sub
pop
or
adc
mov
nop
cmpsl
lea
jmp
mov
xor
cmovle
dec
js
jge
iret
mov
jae
sbb
test
fwait
mov
out
clc
inc
pushf
push
setne
sahf
push
sub
lret
jns
or
fs
push
push
pusha
daa
in
mov
repnz
add
mov
sbbb
mov
push
push
jno
push
and
loop
leave
lea
andb
sbb
xchg
or
and
or
add
test
push
push
inc
add
addr16
push
scas
mov
mov
xor
popa
fists
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
stos
push
add
mov
push
mov
stos
or
xor
shlb
popf
push
rorb
pop
xchg
cmpl
in
shrl
cld
dec
pop
ret
adc
popa
push
das
adc
jmp
sbb
fistl
or
loope
pop
int3
imul
pop
shlb
call
test
inc
xchg
sbb
cmp
pusha
pop
inc
xchg
loope
lods
xchg
scas
mov
outsl
out
bound
clc
out
mov
mov
pop
or
loopne
add
in
push
hlt
add
lea
loope
pusha
or
jecxz
in
lret
and
jge
ds
push
mov
adc
mov
push
pushf
mov
mov
adc
and
leave
popf
push
xor
stos
sbb
push
xchg
mov
push
dec
rcll
xor
scas
or
dec
call
pop
loope
dec
or
push
fnstsw
mov
sbb
rorl
shll
or
jb
and
xor
nop
or
test
sbb
rolb
push
les
adc
mov
es
fwait
xor
xchg
inc
xor
push
mov
mov
inc
or
xor
add
pop
fidivs
js
sahf
jnp
movzwl
jbe
add
mov
ss
ret
mov
mov
repnz
int3
lods
xor
cmp
xchg
mov
add
cmp
add
ror
push
mov
faddp
orb
leave
sahf
xchg
rorl
or
xchg
mov
push
and
pop
push
repnz
mov
addl
cmp
outsl
pop
test
fs
jp
or
xchg
fs
and
aad
lock
dec
push
stos
rcrb
mov
cmp
xchg
ret
sbbb
out
cmpb
fucomp
aas
movsb
fdivrs
fucomip
add
imul
push
sbb
adc
xchg
mov
fmull
inc
insl
movsl
jbe
and
push
movd
push
in
jae
adc
orb
xchg
pushfw
mov
push
add
lea
fs
mov
cwtl
pop
enter
mov
mov
in
push
arpl
mov
loopne
cmpsl
jnp
aaa
pop
mov
mov
cmp
fcmovne
xchg
je
mov
mov
pop
ja
mov
fdivr
insl
sub
fstps
and
mov
or
add
jmp
testb
jae
fs
add
rolb
or
or
inc
lret
jnp
dec
jbe
mov
icebp
inc
mov
inc
inc
mov
cld
add
inc
out
cwtl
das
ss
xchg
roll
std
das
aam
gs
dec
cmp
lret
jmp
push
add
ss
incb
or
cmpsl
add
adc
push
inc
jecxz
popa
into
pop
ja
das
add
data16
lea
cwtl
dec
loop
fstpt
enter
push
outsl
repnz
cltd
gs
mov
push
and
scas
outsb
cmp
pop
loop,pt
andl
cld
dec
jnp
ret
dec
and
lret
out
loopne
jns
dec
pop
push
lods
pandn
push
arpl
call
mov
pop
push
gs
sub
mov
in
push
addl
add
arpl
loopne
mov
cli
xor
movl
mov
sub
mov
lds
dec
rcll
dec
or
fimuls
lock
mov
sub
adc
push
jo
or
sahf
sub
out
push
aaa
inc
pop
push
push
jo
push
rol
movsb
push
add
mov
mov
mov
add
sub
mov
cs
jl
jns
inc
js
in
xor
js
sbb
push
add
push
movb
sbb
xchg
mov
push
loopne
or
lcall
fnstenv
adc
xchg
movsl
cmp
jo
xchg
and
in
test
arpl
pop
loope
adc
pop
pop
scas
sub
shll
stos
loopne
jge
sbbb
pusha
sub
push
adc
dec
push
orb
sbb
je
mov
jno
or
pusha
xor
dec
xchg
mov
add
xor
popf
push
test
pop
pop
or
hlt
or
enter
leave
inc
push
sbb
in
jg
push
jmp
push
pop
in
add
popa
push
xchg
mov
sbb
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
xor
xchg
mov
or
rcrb
scas
das
xchg
jno
cmpl
inc
mov
jne
push
pop
cmp
je
xor
mov
movsb
mov
mov
or
sbb
dec
add
fs
cwtl
xchg
data16
dec
adc
stos
pusha
and
push
push
add
lea
push
lods
or
mov
fiaddl
cmp
lea
je
lea
and
add
push
or
cmp
mov
and
cli
bound
stos
enter
mov
xchg
sbb
push
inc
sub
sti
or
icebp
fsubrl
mov
xor
sub
jl
shll
mov
mov
test
test
enter
xor
sub
loopne
sub
fwait
psubusb
aas
aam
xor
sbb
das
rorb
sbb
xchg
das
jo
es
jns,pn
icebp
xorb
sbb
jo
insl
je
xchg
cmpsl
into
int3
xor
dec
test
ja
push
fmull
pop
push
xor
sub
adc
adc
addb
xor
xor
sbb
fsubrl
enter
xchg
pop
popf
call
add
lods
out
mov
mov
add
sahf
add
and
sbb
push
xor
mov
fldl
mov
push
pop
adc
xchg
sub
add
jne
pop
add
gs
jo
mov
outsl
or
jne
pop
pop
fstp
xor
mov
ljmp
leave
fs
nop
mov
clc
into
stos
sbb
mov
push
mov
push
orl
cmp
lea
pop
and
fcomps
aam
incb
imul
cs
out
clc
mov
shrb
call
add
adc
cmp
xor
nop
out
mov
fmul
pop
pop
pop
shll
inc
movsb
push
pop
or
inc
pop
fdivr
mov
movsl
aam
add
std
adc
test
xor
divb
loopne
cmp
mov
lahf
pop
push
mov
mov
pop
and
jae
fisttpl
adc
ret
cmpl
scas
scas
or
pop
test
push
xchg
test
ret
test
dec
ficoml
mov
repz
cld
je
dec
sbb
inc
xchg
xchg
inc
daa
push
mov
mull
inc
dec
mov
mov
test
xorl
add
and
cmp
jne
je
fistpll
popa
xchg
pusha
cmpb
pop
push
mov
mov
jbe
dec
or
cmpsl
and
lret
out
mov
bswap
rcrb
in
mov
lock
cmp
sub
mov
sbb
rclb
mov
cld
sbb
clc
mov
mov
lret
hlt
inc
int3
iret
rorb
cltd
popf
outsl
inc
imul
lods
add
je
push
dec
hlt
sub
push
arpl
rorl
lock
movsl
shlb
push
in
add
mov
das
movsl
mov
movsl
cmpl
cmp
std
mov
sub
sbbb
jmp
push
push
iret
pop
dec
fs
fnstenv
add
shlb
xchg
and
sbb
ret
aaa
sbb
add
push
clc
out
or
push
push
xor
push
cmp
or
rorl
push
ret
xor
or
sbb
mov
pop
mov
jns
stos
mov
mov
or
dec
in
sbbb
cmc
push
push
int3
push
inc
inc
mov
lret
pop
mov
cmpb
pop
popa
loope
in
push
cmpsl
sahf
mov
call
lods
mov
movsb
mov
gs
lock
inc
add
add
hlt
sbb
test
push
mov
pop
dec
inc
testb
loopne
pop
inc
lcall
ret
mov
xor
notl
push
aam
pop
adc
addb
adcb
enter
dec
xor
test
adc
or
ljmp
jnp
jmp
ret
scas
fsubrs
out
push
insb
cmpb
addr16
cmp
ret
push
mov
icebp
mov
sub
clc
je
cmp
sub
xchg
dec
sub
push
add
adc
push
inc
push
and
cltd
jecxz
fwait
push
bswap
cltd
scas
add
ret
xlat
xor
push
fisubl
std
inc
cltd
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
fbld
sbb
push
add
iret
imul
aad
shll
mov
popf
ss
out
stos
adc
mov
sbb
and
iret
leave
loope
push
stc
push
popf
fcmovnu
loope
in
cmp
add
push
push
sahf
adc
push
sar
repz
xor
and
xor
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
movsl
loope
lock
out
push
dec
or
in
and
out
xorl
cli
adc
inc
or
pop
pop
call
push
cwtl
pop
imul
ja
adcl
and
mov
jne
call
cli
mov
inc
out
lock
rol
pmaxsw
push
shll
push
add
jl
cld
adc
sub
divl
add
cmp
fbld
ljmp
ret
or
loop
adc
fwait
xor
int
incl
and
cmp
je
sbb
jbe
push
punpcklbw
cmp
je
sti
mov
popa
pop
pop
mov
push
pop
sbb
jbe
add
inc
or
pop
pushl
test
mov
xor
fsts
push
mov
push
xchg
add
daa
add
test
push
sub
dec
and
cmpl
cmpsb
dec
or
shlb
adc
test
clc
mov
mov
mov
add
shlb
mov
inc
imul
in
scas
cltd
or
jne
ret
adc
dec
or
aaa
sbb
dec
and
mov
aas
dec
mov
hlt
mov
add
js
or
cld
daa
jecxz
push
cmp
je
xor
je
mul
seto
scas
push
filds
enter
imul
dec
aaa
dec
push
jmp
jnp
cmpsl
mov
push
xor
test
jbe
jge
movsb
inc
jb
iret
shl
cltd
push
insb
or
mov
aad
lret
cs
dec
inc
add
xchg
sbb
pop
popa
sub
inc
ja
or
inc
sbb
inc
add
push
sbb
loop
dec
cltd
inc
and
adc
andl
pop
sbb
inc
daa
push
inc
add
mov
or
nop
push
dec
mov
mov
hlt
xor
pop
sub
ds
xor
xchg
cmp
lods
addr16
mov
mov
jmp
push
and
leave
add
nop
cmp
push
in
pop
mov
mov
pop
lock
pop
sub
sbb
cmp
je
sbbb
add
mov
cs
lock
cmp
jne
xor
hlt
add
lret
xchg
adc
ss
add
decb
adc
insb
and
mov
faddp
jmp
jl
ret
fwait
jle
lahf
pop
push
test
je
cli
jmp
mov
inc
jno
test
negb
inc
cmp
jae
add
xor
mov
inc
xor
cmp
add
mov
push
sbb
cmp
jne
and
xor
subb
add
mov
push
ss
push
inc
aad
inc
jmp
repnz
scas
mov
test
dec
cmp
les
sub
lcall
mov
cmp
xor
scas
sub
lret
je
jno
pop
das
movsl
negl
clc
push
push
jne
les
mov
sbb
stos
dec
or
xlat
dec
enter
and
or
insb
in
cmp
jne
sub
fisubrs
ja
lea
cld
xchg
test
dec
mov
roll
rorb
push
jle
add
ljmp
jns
mov
pusha
loope
or
inc
jae
je
subl
shr
addl
or
mov
or
push
or
mov
push
mov
inc
sub
xchg
inc
sbb
jg
push
rcrb
sbb
cmp
mov
cmp
or
insl
stos
shrl
mov
fwait
or
pop
add
mov
mov
sub
jno
or
mov
push
or
addb
jnp
add
inc
aad
push
push
movsl
or
or
clc
sub
lea
push
mov
jl
mov
push
imul
in
push
je
gs
xor
xchg
jmp
mov
ret
and
cmp
xchg
test
js
sbb
inc
push
add
adcb
inc
icebp
dec
push
test
sub
out
push
clc
test
sub
js
push
push
iret
sbb
adc
dec
imul
pop
ret
rclb
add
push
jae
fiadds
jmp
test
mov
add
jne
mov
rolb
push
sub
mov
neg
addl
ret
sub
cli
jp
or
push
adc
js
jne
test
mov
push
push
pop
adc
je
inc
jmp
in
or
int
mov
xor
dec
add
popf
cmp
or
sub
in
ljmp
adc
push
ret
or
rolb
inc
mov
mov
pop
ret
xchg
outsl
xchg
popf
dec
pop
bound
in
push
lods
xchg
mov
in
adcb
mov
cltd
jbe
and
jnp
jno
cwtl
test
xchg
add
jmp
jg
imul
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
int3
cmc
repz
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
rcll
fisttps
cmp
jbe
call
sbb
inc
ret
pop
cmp
aad
repz
imul
pusha
inc
sbb
test
adc
iret
mov
in
insl
shlb
cltd
xchg
daa
andb
out
fcompl
repz
lret
and
adc
push
pop
mov
and
ficoml
insb
xor
jecxz
iret
sar
or
sub
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
and
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
js
xchg
popa
inc
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
xchg
sbb
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
loopne
pop
rol
inc
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sub
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
shlb
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
xor
adc
dec
rorb
xor
xchg
cmpb
out
add
pop
jne
push
mov
pop
ret
push
inc
or
mov
out
mov
popf
mov
dec
stos
and
rorb
pushf
add
movsb
adcl
rcrl
dec
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
mov
imul
icebp
rorb
xorl
fmul
or
loope
adc
rclb
outsl
lcall
push
push
lea
out
arpl
cmp
adc
lea
xlat
jno
and
push
es
fwait
push
push
aam
push
pop
add
pop
mov
adc
in
insl
xlat
push
inc
pop
xchg
or
pop
adc
lock
pop
sti
jb
popf
dec
adc
add
xor
or
or
fmuls
loop
mov
scas
sub
cmp
mov
push
xor
fs
mov
cld
cmpsl
andl
push
ret
pop
xor
and
aas
pop
sbb
inc
pop
push
and
cmpsl
or
les
inc
adc
mov
jp
xchg
orl
in
mov
mov
and
xor
repnz
and
roll
inc
sbb
or
loop
sahf
jle
sbb
sub
pushl
add
dec
shlb
roll
data16
inc
cmpsb
pop
ffreep
inc
or
push
sbb
les
sbb
fcoml
faddl
addb
inc
sub
dec
shl
sub
cwtl
jle
lea
and
stos
jb
dec
pusha
xchg
ret
push
pop
lea
mov
jge
add
add
js
lret
in
dec
add
inc
add
mov
enter
sahf
shlb
sbb
xlat
and
les
popa
and
mov
cmp
je
sbb
incb
pop
sbb
pushl
lea
lea
xor
mov
or
xor
and
imul
enter
test
fimuls
mov
push
sub
lret
int3
pop
aam
and
xchg
push
inc
add
ja
hlt
dec
stc
mov
and
pop
pushf
xchg
add
and
cmpsl
imul
lcall
shlb
sub
cmp
cmc
add
test
mov
sbb
sub
mov
loope
cmc
and
iret
ja
repnz
popf
jmp
cmp
mov
adcl
call
pop
int
daa
and
inc
pop
inc
cmp
in
aaa
mov
rolb
or
xor
out
adc
pop
in
test
mov
push
out
cmpb
push
lock
daa
or
idivb
je
sub
mov
out
hlt
aas
mov
cmp
lods
jo
jg
and
xchg
lret
mov
adc
imul
inc
mov
jne
sub
sub
mov
pusha
add
fisubl
xor
das
cwtl
por
push
add
fwait
popl
xor
jge
int
jns
and
add
pusha
pop
ret
aaa
mov
cmp
add
ss
or
mov
out
pop
and
orl
sub
decl
xchg
xor
dec
push
je
dec
jne
dec
js
sbb
out
clc
adc
push
inc
loope
insb
and
das
lahf
xor
or
add
test
inc
leave
mov
nop
int3
pop
cli
lea
dec
lea
repz
in
cmp
sbb
mov
mov
movsb
popf
les
or
push
cmp
popf
lret
movl
fsubl
xor
fdivr
xchg
gs
mov
lea
cli
jb
adc
loope
xchg
rorb
xor
adc
sbb
or
xchg
ja
xchg
pop
sbb
insl
je
movsb
mov
inc
aas
add
cmpsb
push
lret
mov
inc
and
sbb
jge
popf
popa
test
dec
mov
arpl
adc
adc
add
fs
push
xor
push
push
xchg
pop
adc
dec
inc
ret
xor
add
into
mov
and
cmp
testb
push
add
push
sub
sub
ds
je
lahf
push
sarb
rorb
mov
aam
or
pop
jno
adc
xor
sub
xor
add
lock
les
and
jg
sub
inc
lea
push
and
mov
push
or
sub
loope
out
out
jle
jo
push
jne
cmp
jbe
sub
push
ljmp
pop
mov
into
jmp
sbb
fcomps
popa
dec
pusha
clc
nop
mov
xlat
cwtl
cmp
ret
arpl
clc
jb
fists
into
ret
mov
push
test
pop
push
xorl
cld
dec
test
mov
pop
pop
ret
adc
out
push
xor
jo
cmp
adc
sbb
lock
push
lods
adc
rol
add
push
test
push
xlat
mov
jbe
shr
and
je,pn
aaa
js
in
inc
loopne
stc
cmp
sub
push
xor
addl
adc
mov
bound
cmpsb
stos
xchg
adc
xlat
inc
pop
dec
push
jmp
je
test
testl
mov
xor
jmp
add
dec
xchg
icebp
in
xorb
adc
enter
push
sub
mov
or
pop
pop
ljmp
adc
mov
sbb
push
sahf
inc
cmp
adc
mov
xchg
and
push
mov
cmp
push
and
fbld
idivl
push
mov
mov
cltd
push
push
push
cli
mov
into
cmp
jnp
add
jnp
lds
inc
movsl
jbe
lock
pushf
movl
aaa
sti
jo
add
inc
adc
push
and
sub
dec
push
add
les
xchg
and
sbb
xchg
fidivs
add
push
mov
pop
pop
leave
jecxz
sti
rclb
mov
in
ss
mov
add
sub
adc
cmp
std
push
jecxz
sbb
and
jge
icebp
mov
mov
or
adc
add
insb
sub
ret
test
inc
pop
int
int
gs
dec
add
andl
xchg
popa
push
mov
ja
xor
loop
lds
add
dec
add
lods
jnp
jo
pusha
jo
enter
insb
mov
xor
xchg
push
dec
inc
jge
call
in
jnp
dec
mov
popf
mov
faddl
xchg
jl
daa
mov
xor
push
repz
test
xchg
sub
fs
push
imul
xor
mov
mov
pop
jae
inc
cmp
add
jns
mov
shlb
imul
cwtl
mov
xchg
adcl
std
cmpb
je
push
sbb
stos
popf
pop
push
loope
fiaddl
xchg
xchg
and
in
loop
stos
push
sub
lods
adc
fdivrl
imul
cli
pop
or
nop
out
and
or
jge
xor
mov
imul
or
mov
in
fadds
and
mov
xor
lret
jle
jnp
lods
and
mov
jae
into
and
aas
rorl
mov
daa
inc
in
lret
push
pop
pop
xchg
push
add
daa
jne
div
test
xor
subl
mov
add
mov
inc
test
jl
ss
or
fs
mov
inc
dec
mov
push
mov
popa
lock
cmpsb
mov
fs
je
subl
cmc
mov
test
sbb
out
daa
dec
je
mov
fsubr
sbb
sbb
cmpsb
pop
lock
incl
inc
sub
jns
push
test
cmp
pop
ret
orb
cmp
aam
dec
and
dec
cmp
dec
inc
or
sbb
pop
pushw
sbb
pop
push
popf
cmp
in
mov
or
test
pop
xor
sub
lea
in
aaa
sti
mov
sbb
and
sbb
cld
pop
inc
std
xchg
adc
sub
xor
in
addl
hlt
mov
mov
xlat
push
ret
dec
pop
mov
cmpsl
mov
es
daa
iret
push
or
push
mov
adc
jno
into
test
or
adc
sbb
push
mov
push
xor
mov
sub
imul
outsl
cmp
jg
popf
or
aas
loop
sub
dec
cwtl
stos
imul
jl
push
outsl
arpl
xor
inc
mov
xchg
cmc
jns
mov
in
xchg
pop
mov
xor
gs
inc
aam
dec
test
push
cli
insb
cmp
sbb
xchg
push
xor
rcl
test
or
and
inc
push
pop
dec
test
cmc
adc
push
out
cmp
jge
xchg
stos
dec
sbb
movsb
sahf
xchg
jmp
pusha
jbe
lahf
xchg
cmp
insl
out
sbb
push
push
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
push
int
fbstp
sbb
add
sub
adcb
int
push
mov
jecxz
lods
dec
add
inc
fidivrs
shlb
out
pop
or
jp
sbbl
inc
dec
xchg
add
xor
sbb
aaa
cmc
andb
add
inc
sahf
loop
movsb
pop
xchg
and
pop
mov
aaa
fistps
cmp
imul
fstl
add
out
subb
sub
fwait
xorl
lock
push
adc
xor
or
in
push
testl
push
mov
pop
cmpsb
loope
lret
std
aas
in
pushf
pop
pop
test
in
pop
mov
xchg
inc
push
or
cmpsb
cwtl
or
push
and
out
adcl
sub
dec
sbb
in
and
imul
inc
dec
adcb
sub
sub
dec
fisttpll
and
jl
stos
or
shrl
fcmove
or
push
mov
or
jmp
out
subl
lods
loope
rclb
movsl
xchg
mov
cmp
daa
xlat
lea
loop
jne
push
or
aaa
sub
push
add
inc
cld
lods
mov
lods
pop
pop
cltd
adcl
jo
cmp
and
xchg
and
and
inc
jo
mov
mov
mov
and
sbb
adc
rorb
xor
dec
dec
sbb
nop
mov
mov
and
lea
cmp
xor
jo
insl
nop
xor
mov
je
push
push
mov
jb
push
enter
sub
add
add
pushf
inc
aaa
ret
dec
ss
and
cmp
xor
lret
pop
push
adc
jno
pop
mov
inc
push
test
cmp
je
cwtl
xlat
cmp
push
daa
dec
xchg
inc
dec
dec
cmp
jecxz
cwtl
and
add
movsb
outsl
jne
lea
icebp
movsl
cmp
inc
pusha
enter
xor
add
mov
inc
divl
or
sti
stos
je
icebp
adc
outsl
mov
mov
imul
push
cmp
jecxz
dec
rcll
adc
ja
adc
sub
test
sbb
adc
cmp
fwait
pop
push
lods
xor
lret
cmpl
sub
push
xchg
cmpsb
gs
inc
fidivrs
push
adc
cmp
or
in
cmp
push
and
sbb
imul
sub
cltd
adc
loop
and
test
cmc
jbe
mov
mov
mov
jo
mov
push
mov
pusha
adc
fstpl
jb
lock
add
scas
movsl
fldl
inc
pop
mov
in
mov
int
jecxz
adc
mov
lock
mov
mov
and
jl
xor
pop
cmp
xchg
jb
shlb
or
outsl
jmp
pop
iret
jbe
inc
adc
mov
mov
imulb
xchg
or
xor
mov
iret
push
add
jmp
pop
cmp
not
sahf
fwait
mov
xor
cmp
or
adc
cmpsb
jmp
mov
je
and
sub
shll
pushf
push
andb
ja
push
adcl
loope
adc
imul
popa
dec
and
sarb
mov
mov
pop
jecxz
dec
cltd
cwtl
lret
cltd
loope
dec
movsl
pop
sub
pop
sbb
xchg
ret
enter
push
cli
popf
mov
xchg
cwtl
cmp
lret
repz
in
divb
mov
adc
ss
xchg
xchg
mov
lcall
outsl
pop
fcomps
pop
push
pop
jge
roll
push
lea
cmp
xorl
in
pop
push
cmpsb
or
loopne
int3
lret
inc
adc
adc
mov
mov
xorps
lret
loope
shlb
push
sub
or
xor
packuswb
ret
cmp
sub
push
das
cmp
sbb
push
cmp
js
push
push
sbb
jb
push
jecxz
push
dec
push
xchg
adc
jp
lds
push
pop
sti
sbb
or
ret
pusha
fcoms
jnp
fidivrl
dec
test
pop
repnz
inc
sub
int
pop
orl
sbb
dec
and
nop
sbb
and
nop
or
call
and
and
and
mov
pop
jb
and
or
jne
sub
ret
mov
nop
es
shl
dec
lds
push
or
popf
push
hlt
rorb
xchg
daa
xchg
sub
test
inc
jmp
stc
cwtl
sub
and
stos
jae
sub
jb
sbb
pop
sub
mov
sub
xchg
sbb
pusha
pop
push
insb
jbe
dec
add
mov
pusha
xor
arpl
pop
mov
push
push
sbb
mov
mov
inc
das
or
push
roll
mov
dec
mov
and
les
outsl
jne
sub
or
inc
push
repz
dec
mov
add
cvtdq2ps
shlb
push
sti
fcoms
and
movsb
jns
lcall
jns
and
fistpll
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
daa
imul
inc
xchg
inc
or
dec
push
inc
pop
and
adc
cmp
test
and
fisubl
movsb
xchg
add
or
movsb
push
add
aad
in
mov
sti
push
adc
and
jle
or
and
cmpsb
es
cmp
in
ficoms
xor
lock
xchg
loope
pop
jne
xor
inc
popf
push
rclb
sub
lock
add
enter
mov
pop
insb
dec
leave
daa
or
sub
pop
popf
lds
pusha
loopne
add
push
aam
outsl
mov
sbb
push
in
js
mulb
mov
and
jne
add
call
push
test
test
in
cmp
je
mov
and
sub
jne
fildll
mov
or
pop
and
stos
pusha
push
pop
push
xor
loopne
push
push
dec
mov
test
adc
je
mov
push
push
icebp
sahf
cmp
xor
lock
adc
test
push
push
icebp
or
adc
xor
and
scas
sub
pop
lock
sbb
xor
inc
fisttps
push
pop
mov
je
inc
xlat
adc
hlt
jecxz
test
push
mov
and
adc
bswap
push
shrl
mov
arpl
mov
jl
inc
add
les
mov
mov
sbb
dec
test
gs
xchg
int3
jge
xorl
xor
lcall
mov
jnp
jp
xor
adc
cmp
fnstcw
scas
imul
xchg
adc
test
mov
mov
sarb
aad
pop
enter
push
fidivl
les
adc
pop
mov
pushf
cmp
shll
cs
clc
pop
xor
scas
out
or
loop
push
push
addl
jg
testl
ja
cmpb
lock
je
adc
cltd
jp
aaa
sbb
inc
or
push
cmp
clts
bnd
jl
adc
lahf
or
adc
mov
sub
sub
es
push
orl
adc
subb
loopne
sarb
adc
out
cmpl
repnz
fincstp
pop
push
clc
imul
shrb
dec
add
jle
inc
inc
push
push
adc
add
andl
in
inc
jo
movl
push
dec
jecxz
mov
adc
mov
sarb
jno
inc
aas
xchg
daa
xor
cmp
inc
aad
adc
movsb
rcrl
mov
aam
pop
pop
mov
sub
inc
jcxz
mov
mov
mov
popf
mov
loope
clc
lea
jae
jle
ret
sbb
adc
jl
mov
lea
inc
sub
nop
add
fnstenv
add
loopne
les
in
mov
adc
and
pop
cmpsb
dec
dec
mov
bound
mov
and
dec
or
cmpl
inc
dec
subb
push
inc
jmp
mov
jo
cmp
bound
aaa
imul
bound
pop
out
lds
fistl
enter
adcl
loope
icebp
and
inc
add
cmp
pusha
pop
mov
inc
sbb
nop
popf
jg
mov
mov
add
add
movsb
inc
or
popa
ja
stos
mov
test
mov
repnz
sbb
xchg
mov
mov
fiadds
mov
mov
dec
cmpsb
or
sub
add
fisttpll
or
int3
nop
pop
sbbl
or
mov
aas
sbb
push
mov
or
das
or
mov
add
cmp
push
add
xchg
in
fchs
test
dec
push
in
push
sbb
jp
out
jecxz
imul
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
mov
sbb
and
or
mov
cmp
rolb
shlb
pop
xor
fiadds
or
pop
sub
dec
ret
cvtps2pd
div
sbb
mov
lret
jp
cltd
sub
daa
repnz
push
jmp
add
daa
loop
sbb
outsb
push
rolb
sub
inc
inc
or
mov
pop
inc
push
mov
dec
sub
mov
lods
add
aas
push
ror
cmpsl
rcrb
cmc
mov
add
stos
xor
mov
cli
sbb
cmp
rcrb
add
mov
arpl
add
pop
xor
dec
add
adc
inc
mov
inc
fisubs
call
out
push
add
jle
push
movl
jp
pop
xchg
add
inc
add
or
cld
lea
dec
cmp
or
xchg
xchg
inc
or
mov
sbb
inc
or
cs
loopne
inc
adcb
insb
sti
in
push
ficoms
pop
add
lds
inc
scas
loopne
lds
push
push
push
imul
gs
push
push
adc
andl
add
pmaxub
cmp
iret
inc
test
sbb
mov
pusha
pop
lea
dec
jmp
adc
adc
dec
pop
subl
popf
pop
adc
jp
add
dec
loopne
or
mov
inc
mov
jbe
scas
push
sub
and
add
push
fimuls
inc
mov
cmp
inc
xor
mov
mov
adc
mov
push
cmpsl
mov
mov
out
xor
loopne
cmp
lods
pop
adc
adc
push
adc
xchg
mov
inc
lea
inc
pop
dec
pop
popa
push
mov
push
or
xor
and
popf
adc
pop
pop
scas
or
cmp
push
js
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
adc
push
cmp
popa
nop
clc
cwtl
sbb
mov
xchg
inc
notb
outsl
popf
scas
sti
orb
xchg
mov
mov
adc
push
pop
xor
mov
mov
xchg
push
lea
dec
jge
int
push
push
xor
dec
mov
fsubrs
xchg
out
push
daa
mov
sbb
jnp
pushf
movsl
inc
je
sahf
loopne
mov
incl
das
inc
addb
and
add
push
fdivr
js
popf
fs
sbbl
rorl
sbb
outsb
sbbb
jmp
mov
cmpsl
push
or
adc
ljmp
adc
es
lahf
inc
filds
jns
add
push
sub
dec
pop
push
dec
cmp
xor
rorb
add
sub
adc
pop
aaa
xchg
pop
xchg
mov
jp
js
fisubrl
fdivs
pop
add
jb
xor
add
in
call
cmp
rolb
jbe
pop
test
fnsave
jmp
dec
addl
jg
mov
mov
js
mov
fistpll
movsb
pop
mov
callw
xchg
push
push
lcall
dec
adc
test
xor
dec
iret
or
loope
inc
cmp
in
xor
movsb
push
push
lea
xor
jne
inc
js
ficompl
cmp
nop
mov
movlps
enter
pop
sub
adc
mov
mov
and
outsb
stos
xor
add
data16
push
pop
rolb
test
sti
adc
fidivs
xchg
add
test
aas
push
xlat
push
and
adc
xor
inc
or
sub
dec
add
dec
aaa
jb
add
jmp
adc
xchg
and
scas
cmp
push
sbb
inc
pop
andb
jle
lret
jge
enter
popl
cli
push
sbb
add
lcall
mov
add
sar
dec
lret
inc
inc
push
mov
add
outsl
in
inc
cmp
dec
dec
inc
icebp
movsb
sbb
dec
or
xchg
ret
sahf
lods
fcoms
mov
arpl
jge
push
inc
jecxz
fstps
pop
jecxz
mov
xchg
ss
or
xchg
push
lcall
out
mul
sub
jl
adc
sbbl
jo
push
add
adc
subl
mov
cmp
shlb
push
lods
nop
out
bound
lret
movsb
xchg
jge
and
adc
sbb
xchg
cmc
loopne
xchg
addl
xor
out
jae
sub
cmp
xchg
jns
push
ljmp
cmp
pop
xlat
addr16
push
fdivs
mov
pop
cmp
insb
xchg
insb
jo
push
xorb
mov
sti
push
and
mov
into
xor
mov
sub
adc
dec
dec
fs
or
add
dec
and
and
add
inc
test
and
add
jbe
cmp
out
inc
cwtl
xchg
adc
jecxz
jne
dec
in
clc
xchg
push
pop
push
int
mov
test
mov
mov
sbbl
cmpsl
aam
and
mov
cmp
push
and
mov
push
push
or
add
cmp
dec
jae
lea
jno
scas
push
jo
dec
inc
add
xchg
xorl
test
adc
push
add
test
mov
mov
jnp
imul
andb
adc
xor
mov
or
rcrl
add
xchg
out
movl
pop
add
bnd
scas
loopne
jnp
inc
mov
dec
cmp
sbb
subl
push
dec
jp
mov
adc
ret
sub
push
je
add
js
lods
iret
push
fnstcw
pop
das
sti
sbb
pop
subl
sub
mov
scas
mov
inc
mov
in
jb
sub
and
jne
mov
enter
pop
xchg
cwtl
sarl
add
int3
adc
sbb
push
mov
cmp
pop
sbb
sbb
mov
xor
inc
sar
adc
ret
sbb
add
adc
mov
adc
push
mov
nop
lds
loopne
mov
mov
mov
sub
bts
or
imul
fdivl
mul
mov
testb
xor
dec
loopne
movsl
add
mov
fsubrp
push
js
popa
add
movsbw
mov
jno
jne
and
outsb
mov
or
je
adc
fwait
dec
testl
arpl
adc
mov
pushf
mov
cmp
push
inc
fldpi
mov
hlt
push
inc
div
sbb
mov
or
je
mov
in
pop
dec
lret
pop
js
je
lret
pop
mov
pop
insl
mov
pop
add
lock
imul
mov
mov
movsl
jecxz
std
xor
mov
aas
lea
stc
lock
gs
inc
dec
cmp
ss
add
xchg
push
xor
loopne
je
fs
adc
subl
lcall
scas
push
xor
pop
pop
iret
gs
jbe
mov
fwait
and
sub
mov
sbb
jns
std
lock
sub
gs
jmp
inc
pop
push
inc
or
sub
sbb
mov
cmp
inc
mov
adc
add
out
fidivrs
inc
imul
jno
pop
sbb
xchg
pushl
push
push
ja
in
jmp
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
loope
sub
ffree
leave
inc
mov
push
push
rorb
sbb
and
jl
adc
mov
rorb
sub
push
ret
imul
and
test
insb
add
dec
xlat
popa
cmp
mov
sbb
xchg
das
push
lock
and
jno
adc
test
cmp
cwtl
in
adc
mov
das
aam
mov
inc
adc
jecxz
xor
out
add
imul
in
mov
mov
hlt
sub
xor
lcall
shrb
cld
adc
or
sub
andb
adc
lret
test
xchg
in
add
mov
cmp
adc
clc
mov
pop
and
je
inc
and
mov
push
jbe
pop
jae
xor
test
in
loope
jnp
push
dec
pusha
leave
orl
insl
and
lret
enter
mov
in
or
inc
ja
mov
hlt
in
dec
mov
movl
sub
mov
cs
sub
gs
mov
cmp
inc
xchg
jbe
xor
mov
adc
adcb
or
rclb
adc
loopne
mov
pop
cmp
call
adc
add
sbb
insb
and
sub
jno
adc
mov
jns
xor
or
mov
movl
clc
push
popa
cmc
mov
mov
cmp
inc
dec
inc
pop
inc
scas
cmpl
test
int3
shrb
add
pop
int
sbb
add
sbb
addl
icebp
sub
sbb
dec
jmp
and
sub
cld
or
jne
movsl
add
and
movsl
rcll
mov
sbb
dec
xchg
inc
in
subb
jp
push
push
and
aam
hlt
jo
mov
fsubrl
sub
or
arpl
es
clc
sub
dec
stc
add
pop
sub
push
add
push
push
push
push
shlb
loop
xor
in
and
popf
lds
xor
push
roll
xchg
mov
call
sub
cmp
and
push
cmp
jne
pusha
dec
ret
mov
popa
push
je
jns
xchg
xchg
pop
xchg
icebp
test
mov
sbb
cmp
data16
loopne
lahf
rcll
dec
pushf
popf
lds
dec
xchg
sbb
mov
das
adc
adc
pop
shr
cs
sahf
mov
shl
mov
pop
push
sub
test
js
and
lret
mov
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
pop
in
clc
inc
add
push
pop
add
lret
xchg
ret
lods
fnstsw
mov
mov
mov
idivb
or
cmp
js
add
xor
pop
sbb
jbe
sub
or
dec
popf
enter
jmp
push
inc
lret
dec
clc
sbb
jnp
add
add
mov
dec
sbb
adc
cmp
ss
cmp
mov
push
xchg
pushl
pop
or
inc
sub
movsb
icebp
inc
sub
add
rcll
sbb
xchg
dec
inc
inc
movb
iret
pop
inc
cltd
icebp
imul
addr16
stos
enter
dec
add
xor
outsl
cwtl
mov
and
push
imul
sub
jb
jg
push
push
shll
arpl
movsb
adc
pop
in
insw
xchg
addr16
cli
adc
lock
xchg
cmc
std
pop
dec
jbe
cmp
push
mov
out
cmp
inc
jne
push
jno
add
or
jnp
add
lret
adc
push
push
pinsrw
loopne
inc
faddl
lea
xchg
xor
add
mov
add
add
push
push
jl
mov
xor
jg
sbb
push
push
inc
adc
cmp
push
jo
mov
adc
xor
jmp
clc
add
adc
clc
es
fmull
push
mov
push
movsl
dec
adc
sbbb
jns
fadd
mov
and
das
arpl
rorb
js
xchg
les
dec
in
bound
mov
cmp
addr16
inc
pop
por
and
dec
lods
mulb
jge
mov
jl
adc
jl
movsb
mov
dec
cmp
adc
ss
outsl
mov
jbe
xchg
scas
sub
pop
into
pop
dec
pop
jo
scas
add
jmp
cmp
push
inc
rolb
jmp
sbb
lock
pop
int3
je
ds
int3
pop
loop
and
push
xor
loopne
daa
adc
adc
or
jmp
cmp
push
push
in
and
imul
mov
sub
negl
dec
mov
jle
insb
xor
pop
cmp
cmp
push
dec
jge
inc
jo
and
xchg
mov
cmpsb
test
add
jecxz
push
pop
add
decb
test
jge
push
loope
daa
aas
fstpt
dec
pusha
in
mov
sbb
lret
test
mov
ja
or
pop
add
inc
test
mov
xor
lea
jns
push
mov
addl
stos
jno
scas
adc
push
shll
lea
fldenv
jge
std
popa
sub
aas
push
lea
push
loopne
or
imul
loopne
int
test
test
add
xor
xchg
xlat
adc
jnp
mov
pop
sub
andb
sbb
adc
xchg
mov
adc
pop
mov
pusha
push
nop
stc
jle
add
cmpw
sbb
cmpb
stos
adcb
sbb
push
lret
testl
add
add
sar
dec
mov
push
je
jl
ja
mov
jns
icebp
sbb
pusha
adc
pop
jns
pop
adc
or
add
xor
popf
xchg
je
and
mov
cld
rolb
mov
dec
push
loopne
pusha
sub
jl
sub
jmp
out
jg
and
pop
sti
lcall
dec
movzwl
cmpl
push
adc
dec
outsl
or
loope
dec
dec
add
add
xchg
dec
sti
rcrb
sbb
add
insb
andb
jl
repz
lock
insb
cwtl
jae
outsl
xchg
xchg
dec
inc
addr16
inc
pop
mov
add
add
sbb
bound
pop
sbb
pop
in
or
pop
xchg
pop
and
pop
add
jo
pop
enter
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
aad
mov
jo
cmp
lock
and
lea
jle
int3
roll
pop
push
add
ficoms
sbb
out
in
and
andb
push
push
inc
and
and
sub
orb
or
sbb
xor
push
aaa
pop
mov
popa
sub
adc
and
push
mov
or
adc
rolb
pop
xor
and
adc
shr
inc
pop
mov
xor
lock
cmp
mov
movhps
fwait
jle
adc
push
inc
jg
mov
add
pop
dec
inc
iret
mov
ss
cmpsb
addl
dec
das
in
lret
push
mov
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shll
lods
popa
adc
stos
mov
jbe
inc
adc
orl
int3
and
push
add
or
jne
inc
pusha
mov
push
dec
inc
and
cld
pop
lods
or
inc
push
pop
dec
daa
xchg
fisubrs
outsb
push
cmpl
pop
je
or
adc
inc
add
andb
dec
or
mov
faddl
cmp
push
lahf
leave
sbb
jl
rolb
in
push
or
xchg
mov
inc
hlt
ds
inc
lea
mov
pusha
push
enter
mov
mov
mov
jne
imul
dec
movsl
shrb
mov
sub
divb
and
and
scas
push
pop
xchg
dec
xchg
mov
add
movsl
aad
lods
adc
in
push
or
scas
xor
xchg
sbb
hlt
lcall
ja
jnp
dec
pushf
nop
sbb
and
mov
jmp
loopne
inc
xchg
repnz
mov
in
add
jecxz
pop
pop
inc
fdiv
imul
push
mov
stc
and
adc
loope
incl
cli
dec
xor
fimull
push
data16
lock
adc
lahf
in
and
adc
cli
and
in
mov
sbb
arpl
sub
lret
nop
dec
sub
sbb
mov
jmp
icebp
sub
inc
mov
jae
sub
sub
les
or
inc
aaa
jmp
mov
sub
mov
push
das
pop
inc
lea
mov
cld
notl
or
xor
adc
adc
adc
ljmp
pop
in
pop
xchg
mov
adc
dec
or
sbb
adcl
test
xchg
scas
jno
test
idivb
insl
xchg
xor
add
sbb
inc
mov
add
inc
sahf
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
pusha
mov
pop
ret
adc
push
mov
dec
clc
loope
push
add
dec
sub
push
or
push
inc
add
js
or
popa
inc
sahf
sbb
inc
ss
mov
jl
sub
pop
dec
mov
in
pusha
popa
dec
inc
inc
lock
jns
orb
test
jne
and
nop
repz
rcrl
and
xlat
sbb
test
mov
addr16
test
jno
mov
inc
sub
mov
push
loope
fwait
in
test
sbb
fnstsw
inc
and
call
pop
pop
xchg
lock
andl
add
xor
div
insl
daa
jo
push
cmpsb
loopne
adc
push
shr
cmpb
inc
out
fdivl
add
xchg
into
shrb
fs
popa
xchg
push
inc
add
push
enter
dec
pop
xchg
pop
rcll
jo
sbb
imul
rcrl
addr16
cmpl
loope
mov
movsl
inc
mov
adc
call
jge
add
andb
push
add
inc
call
cmc
add
dec
add
mov
aam
mov
mov
adc
movsb
rolb
cmpb
mov
jne
push
sub
movsb
cmp
enter
mov
dec
xchg
popa
xor
or
clc
iret
sub
in
jmp
add
inc
inc
sbb
adc
les
leave
js
pushf
outsb
dec
jnp
pop
mov
rorl
andl
add
out
and
jae
push
and
xor
pop
faddl
xor
test
pop
sub
cmp
lods
or
add
es
cld
hlt
xor
leave
test
or
sub
rclb
insl
fldenv
mov
xor
bound
push
push
pop
jo
add
stos
in
inc
stos
push
and
pop
inc
cmp
sub
mov
and
push
jne
adc
push
fcmovnu
or
lods
cmp
jmp
push
jg
lods
inc
inc
fldt
repz
cmp
out
pop
rorl
push
je
xor
and
out
or
jge
push
pop
sub
or
push
push
pop
subb
mov
push
mov
pop
sub
cmp
rcll
mov
fistpll
in
lds
mov
sub
adc
test
xchg
or
enter
rol
add
lods
and
ret
icebp
mov
pop
or
inc
or
pop
jo
pop
and
imul
mov
mov
dec
sub
nop
inc
cmpb
roll
decl
mov
orb
outsb
repnz
dec
inc
sub
and
push
or
and
icebp
or
iret
lret
mov
sar
mov
icebp
dec
pop
je
lods
dec
mov
test
aam
jecxz
xor
shlb
add
mov
icebp
andb
sbb
or
push
and
push
add
pushf
inc
xor
jne
lea
mov
xor
scas
dec
repnz
pop
sub
xchg
mov
pop
mov
or
adc
xchg
dec
jne
push
testl
and
dec
and
pop
inc
cmpsb
push
loope
lods
sbb
nop
lea
jae
nop
dec
pop
jb
or
or
or
nop
jge
es
jge
test
shlb
jo
add
pop
das
and
adc
pop
cmp
out
pusha
testb
xor
jbe
push
or
mov
inc
dec
or
xorl
mov
pushf
scas
shlb
or
add
add
or
push
or
fwait
add
cmp
adc
push
jp
cmp
cmp
pop
lea
mov
inc
inc
sbb
mov
rcr
adc
pop
cwtl
add
pushf
mov
sbbb
inc
mov
or
or
xchg
add
add
in
negb
push
ret
push
test
adc
cwtl
add
adc
sbb
inc
adc
arpl
adc
fnsetpm(287
rcr
rclb
adc
mov
pushf
ret
popa
xchg
shrb
pop
pop
shrl
pop
mov
sbb
mov
pop
mov
lcall
inc
add
es
lock
sbb
shr
rclb
fldt
sbb
pop
cs
stc
or
imull
adcb
fcoms
xor
adc
mov
divl
movaps
movsl
mov
pop
pop
cmc
js
mov
dec
jmp
mov
cmp
enter
xchg
xor
stos
dec
pop
sub
test
dec
ljmp
push
xchg
push
and
imul
sub
andl
sbb
shl
lret
and
fnstenv
pop
fwait
mov
mov
inc
hlt
push
rcll
and
pushf
pusha
jnp
xorl
in
xor
inc
or
push
jbe
pop
xor
xchg
and
adc
jb
push
dec
inc
dec
ljmp
xor
sbb
add
xchg
sti
mov
cld
icebp
mov
sub
cmp
and
push
rorl
enter
imul
fs
xchg
adc
add
mov
imul
pop
adc
cmp
xor
aas
ret
mov
sub
jmp
pusha
inc
mov
flds
and
jb
popa
test
hlt
or
addps
xor
or
sar
cmp
mov
scas
rorl
adc
dec
mov
cmp
push
inc
arpl
xchg
push
add
sub
scas
cli
xchg
mov
lret
push
cmp
popf
add
mov
lea
mov
sbb
lea
push
les
daa
test
inc
mov
push
sbb
dec
and
add
adc
andb
test
xor
mov
jmp
or
cmpsb
movsb
xchg
repz
test
mov
ljmp
lock
shll
dec
jg
or
inc
jns
pop
jecxz
push
pop
das
test
or
xor
nop
and
test
sbb
lods
pop
inc
and
inc
pop
pop
dec
xchg
fisubrs
inc
adc
sbb
nop
in
testl
je
adc
inc
mov
and
pop
les
inc
cli
adc
cmpsl
ds
movsb
push
dec
in
cmp
dec
inc
ret
fists
loope
xor
cmp
mov
fs
mov
faddl
cmp
push
iret
push
mov
cmp
inc
add
jp
sbb
lods
sub
push
and
mov
aam
js
dec
adc
mov
lcall
push
xchg
sbb
dec
and
add
movzwl
add
addl
fstps
dec
movsl
loopne
sbb
mov
cmp
inc
or
or
or
or
mov
mov
xchg
pop
pop
or
mov
xorb
dec
cmp
sbb
fistl
insb
roll
push
push
jnp
or
insl
inc
shll
cltd
push
and
ret
insl
dec
dec
mov
xor
cs
popl
or
mov
test
inc
push
mov
mov
mov
or
mov
xor
mov
pusha
sub
dec
imul
ds
push
inc
insb
out
push
mov
repnz
push
xor
jmp
adc
cmp
cmp
fsubs
mov
fisubl
roll
adc
or
add
sbb
into
jle
adc
ds
pushf
pop
pop
repz
dec
jl
test
inc
clc
jl
push
adc
and
push
adc
push
pusha
and
arpl
lcall
fisubrl
mov
sbb
mov
fmuls
xor
xchg
sbb
mov
mov
ret
movsb
pop
loope
jp
pop
pushf
pop
add
fidivs
sub
sti
adc
mov
das
in
sbb
mov
pop
jge
jmp
pop
cmpb
mov
mov
jae
sbb
xor
std
dec
push
sbb
xor
sbb
inc
lcall
imul
sbb
cmpsb
fstpt
pop
hlt
adc
add
push
dec
leave
popa
adc
or
mov
adc
adc
dec
push
sbb
adc
mov
dec
bound
pop
jl
es
xchg
fsubrl
xor
fst
icebp
push
sbb
pop
sbb
and
add
das
mov
xor
xchg
and
sub
dec
ds
nop
cltd
xchg
xor
fs
jno
lods
loop
filds
sbb
je
sbb
push
pop
rorb
xor
inc
scas
inc
pop
and
out
nop
sub
insb
mov
aaa
jmp
add
sub
dec
rorl
xor
jmp
xorb
pop
sbb
sub
es
inc
jge
add
push
push
cs
jmp
lods
push
xor
cmp
scas
dec
ss
push
ja
jae
push
inc
sbb
add
and
subl
into
mov
insl
lret
push
imul
push
or
adcb
and
repz
or
adc
xor
cmpsb
js
inc
sbb
cmp
test
je
test
sub
inc
test
ja
fistl
stc
mov
xor
hlt
lock
das
jmp
push
sub
cs
adc
movsb
pop
push
push
mov
loopne
cmp
push
mov
inc
cwtl
insl
sub
mov
jmp
pop
rcr
ja
lds
insl
in
and
cmp
sbb
sbb
fildl
dec
mov
push
and
jne
stos
push
push
aas
jmp
scas
imul
dec
sahf
cmc
add
and
jbe
pushf
add
xorb
cmp
push
xor
dec
call
inc
and
mov
push
or
or
or
xchg
sbb
and
imul
sub
pop
test
jno
ljmp
test
sbb
add
mov
cmpl
adc
push
xor
loopne
ja
sbb
pop
cwtl
add
rcll
or
movsb
test
lcall
inc
pop
or
fsubrs
pop
or
out
int3
pop
xor
jmp
cmp
fidivs
mov
fbstp
sbb
adc
fsubrs
jg
dec
test
add
mov
cwtl
ficoml
jecxz
xor
or
nop
int3
xor
lods
dec
xchg
mov
pusha
add
inc
in
xor
inc
int3
or
sbb
insl
test
aaa
sbb
pusha
sbb
dec
js
sub
cmpsl
rol
and
inc
imul
or
xor
test
add
out
stos
and
or
fstp
cvtps2pi
cvttps2pi
mov
sti
aad
push
pop
andb
sub
and
xor
dec
cwtl
les
push
mov
jno
push
nop
addr16
dec
clc
popa
or
leave
sub
scas
sub
and
cmp
push
clc
add
sub
xor
pop
ds
mov
cmpl
adc
mov
enter
or
sarl
push
jle
adc
das
fcomps
inc
sbb
dec
lahf
push
adc
imul
rorl
or
es
sub
mov
pop
pop
and
mov
cs
add
push
cmpsb
in
jo
jo
fcmove
push
xor
sub
rolb
push
je
and
pop
jnp
push
push
mov
movsl
bound
daa
push
sbb
and
jae
arpl
pop
mov
add
sahf
mov
push
or
xchg
or
add
loope
out
cld
aam
loopne
iret
push
pop
push
push
lret
sub
sub
mov
sub
nop
sbb
push
fnstenv
and
out
or
pop
pop
sub
mov
mov
jns
addr16
faddp
loop
push
sbbl
nop
shlb
add
push
sub
push
je
fldcw
adc
push
fbstp
ja
ret
inc
hlt
test
and
hlt
xchg
setp
sbb
xorw
ret
call
shlb
add
orb
clc
sarb
dec
or
adc
call
push
inc
pop
or
pop
mov
push
jmp
push
rcrl
pop
xor
iret
push
sub
lea
pusha
add
push
add
mov
pop
inc
cmpl
pop
add
pop
lds
push
aad
ss
cs
hlt
mov
test
imul
lcall
jl
add
add
ret
and
inc
dec
mov
in
mov
add
loopne
fcoml
fcom
lea
inc
push
lock
or
enter
shrl
jg
lret
xchg
push
lods
push
fisubs
sbb
fwait
lret
and
xor
mov
addr16
push
and
adc
mov
xchg
and
aam
add
push
or
adc
imul
push
test
std
mov
xor
xchg
mov
and
xchg
inc
inc
sbb
or
sarb
xor
scas
push
lods
ss
mov
add
jecxz
xor
sub
adc
das
add
aam
in
adc
mov
xlat
lea
pop
adc
in
clc
insl
sahf
lret
or
mov
leave
mov
repz
push
or
sti
or
push
cmp
ficoml
fwait
xor
mov
pop
and
decl
adc
pop
push
adc
cmp
sub
ja
inc
movl
or
inc
or
inc
adc
pop
rcr
fldz
and
add
and
cmp
and
or
sub
pop
xor
cmp
flds
scas
fcoml
push
xchg
sarb
push
sbb
testb
and
adc
mov
sub
push
xchg
mov
add
mov
xchg
fsubrs
adc
lahf
adc
sub
inc
mov
inc
push
mov
or
mov
pop
movsb
jg
or
fmuls
sbb
or
ds
data16
lea
fcoml
fsubs
mov
in
sub
xor
adc
pop
mov
adc
sbb
sbb
lahf
test
subl
cmpsb
jno
add
jle
push
jmp
fstps
add
cmp
jl
repz
push
cmp
jle
cmp
jp
push
cmp
cld
sti
dec
cld
cmp
inc
add
add
inc
jmp
xchg
icebp
mov
movl
insb
popa
lret
mov
xchg
repnz
jecxz
and
cltd
pop
idiv
lock
xchg
enter
cld
adc
cmp
inc
movsb
pop
rcr
adc
imul
and
mov
inc
lock
das
addb
add
fstps
add
jbe
scas
mov
cmpsl
mov
outsl
xor
ret
dec
mov
xchg
and
sbb
cmpsl
mov
xor
dec
js
and
xchg
pop
dec
xlat
or
mov
cmp
jb
adc
and
xchg
lret
adc
inc
sub
mov
fs
inc
daa
int
cmp
push
js
inc
fwait
mov
dec
outsb
loop
jo
mov
loope
mov
adc
ror
mov
xchg
pop
insl
iret
cmpb
or
jo
popf
movsb
pop
outsb
ss
sbb
pop
or
nop
loope
and
pop
pop
pop
and
cmp
xor
and
insl
or
cltd
fs
or
add
shrb
jb
cmp
incb
rclb
pop
or
and
pop
mov
popf
je
mov
push
stos
outsl
mov
out
pop
adc
adc
dec
pushf
jno
add
push
data16
push
sbb
jo
push
enter
sbb
add
shlb
sbb
in
jno
add
dec
repz
or
dec
or
dec
leave
mov
les
stos
fs
add
ret
xor
out
fistl
cltd
or
push
lods
inc
jnp
add
lods
or
add
iret
ret
or
aaa
xchg
xchg
inc
push
sbb
or
sub
mov
mov
xchg
popa
mov
inc
mov
inc
push
cmpsb
add
test
xchg
sahf
sub
inc
fwait
in
mov
mov
and
or
fidivl
pop
pushf
pop
xor
adc
outsb
and
leave
adc
and
pop
sub
cs
movl
jae
push
push
ljmp
stos
and
gs
adc
fcomps
add
cmc
push
in
jo
std
cmp
stos
push
add
adc
ret
xchg
fs
or
push
and
add
add
add
nop
push
inc
sbb
xor
shrb
leave
xchg
jb
adc
adc
insb
or
aas
pop
sub
adc
add
sbb
xchg
adc
sbb
xchg
sbb
js
mov
and
stos
loopne
mov
loopne
push
add
xchg
sub
and
xchg
jge
pcmpeqd
lret
mov
sbb
push
loope
push
ret
pusha
pop
sbb
lods
call
shrb
out
les
inc
sahf
rol
sbb
mov
shrl
imul
sbb
adc
dec
push
rcll
and
add
test
enter
adc
add
sbb
and
add
sbb
cli
xor
push
mov
je
shrl
fsub
fsubrs
mov
cmpsl
xor
in
rolb
sbb
inc
outsl
xor
or
add
jb
add
add
dec
aaa
and
push
mov
mov
pop
aad
inc
fistl
sub
dec
xchg
scas
adc
icebp
push
repnz
cld
je
mov
cmp
pminsw
jne
rcrb
nop
es
pop
mov
shlb
or
sub
push
adc
push
ret
aaa
int3
inc
jge
inc
and
inc
jbe
xchg
xchg
or
jbe
and
inc
mov
std
lods
jbe
jb
test
testb
adc
jae
outsb
subl
push
clc
push
mov
pop
les
xor
xchg
gs
orl
pop
in
push
popa
stos
cmp
jne
fwait
mov
test
imull
insl
cmpb
push
popa
xchg
mov
subl
add
adc
pop
xlat
cmp
fildl
lea
cltd
xchg
dec
add
loopne
adc
xchg
push
icebp
pop
decb
daa
fadds
sub
xor
enter
add
repz
push
pop
clc
or
stos
xchg
dec
add
push
adc
dec
cmp
jg
jo
add
adc
lods
popa
push
add
imul
rcrb
pop
mov
outsl
lahf
cwtl
fisubl
or
adc
push
lea
mov
and
add
sbb
and
lahf
dec
push
xchg
rol
inc
xor
iret
adc
jle
ffreep
jecxz
add
insb
cmp
int3
fildl
adc
loopne
inc
adc
es
mov
test
jns
push
xchg
inc
add
mov
inc
push
pop
cmpsl
sbb
mov
xor
in
pusha
xorl
lods
pop
rcrb
or
or
movsl
loop
fmuls
sbb
or
xchg
sub
wbinvd
std
fisttpl
dec
fldl
or
movsb
std
loopne
les
nop
add
andl
fldl
push
sbb
dec
ja
sbb
fstpl
and
mov
mov
push
pop
push
pop
pop
imul
mov
jo
sti
idivb
dec
pop
and
loope
fsubrp
pop
fs
push
or
pop
mov
repz
push
repnz
jl
int3
mov
in
push
in
in
leave
inc
or
push
push
cs
or
cmp
ja
inc
rorb
mov
sub
pop
int3
in
notb
mov
sub
aaa
inc
cmpsl
xor
inc
xchg
sub
sub
pop
inc
inc
dec
sub
xchg
addb
scas
or
ffreep
jbe
shll
stos
adc
dec
arpl
mov
jge
sahf
sbb
je
lahf
cmpb
into
dec
dec
mov
add
xor
insl
dec
or
cmp
mov
lods
jbe
fmul
mov
cltd
jnp
ja
push
and
dec
xor
mov
or
adc
js
sub
and
mov
pop
push
in
and
adc
dec
les
dec
iret
arpl
loope
fcmovne
daa
xor
jnp
xchg
add
imul
mov
int
xchg
xor
clc
add
pop
pop
mov
out
or
lock
sbb
leave
shld
add
adc
jb
ja
lea
push
push
js
pop
push
je
lcall
filds
push
leave
adc
mov
push
adc
or
nop
push
push
xor
sbb
sbb
call
push
push
push
sarl
mov
lods
add
pop
pop
enter
int3
leave
pop
add
cmp
sub
sbb
adc
cmpsl
roll
push
mov
cmovns
ja
cmp
test
adc
add
and
dec
pop
mov
adc
sub
cmp
xchg
cld
pop
or
jle
out
inc
cmpw
jne
fdivrp
mov
inc
cld
cmp
mov
push
jl
mov
aad
sub
test
popl
sti
jg
stc
mov
mov
or
mov
cld
mov
lret
push
push
push
jp
push
push
push
jp
mov
pusha
inc
push
add
ss
or
inc
jle
js
mov
or
xchg
mov
les
aam
icebp
mov
mov
adc
pop
mov
ss
adc
add
sbb
in
jle
ja
sbb
sub
sbb
scas
movl
fwait
jp
lock
pop
andb
mov
add
je
cmovo
jns
dec
pop
or
sbb
jle
movsl
xchg
pop
push
pop
iret
inc
imul
or
pop
test
rcll
xchg
sub
xchg
push
mov
push
popf
push
push
sub
xchg
adc
mov
inc
pushf
into
jne
adc
mov
imul
fadds
pop
push
xchg
lock
rorb
lods
xor
mov
mov
loopne
push
int
adc
add
insb
ret
lods
aad
and
cmp
imul
pop
test
into
gs
lds
dec
inc
lods
je
lret
xchg
or
pop
lock
sub
xlat
cmp
and
lods
push
orb
dec
sbb
pusha
push
jno
lods
mov
pop
adc
cwtl
push
xchg
rcr
and
imul
fldt
ds
scas
pop
ret
pop
pop
dec
cmpsb
nop
add
aam
mov
xchg
ja
and
adc
rclb
xchg
and
xor
or
or
inc
sbb
fwait
lret
xchg
xor
push
mov
lahf
add
dec
rol
push
dec
mov
add
push
adc
lods
and
jb
push
add
in
les
mov
xor
fistpl
jo
add
outsb
pop
add
bnd
mov
add
in
je
js
dec
sbb
add
add
repnz
mov
dec
add
jecxz
mov
xchg
push
repz
int3
test
outsb
inc
push
add
test
or
loopne
jg
andl
or
inc
lret
mov
pop
aam
cmp
dec
pop
mov
psrad
add
ret
mov
movsb
mov
or
inc
pop
pusha
rcrb
test
adc
push
ja
sub
xchg
insb
mov
jno
leave
pusha
jmp
mov
mov
adc
insl
push
icebp
and
jno
imul
add
jg
je
or
xchg
nop
add
cmpsb
std
fcmovnbe
sub
dec
je
add
sbb
dec
lock
jo
dec
jmp
push
out
or
push
dec
loop
or
mov
out
or
jg
out
push
shl
mov
sarb
nop
or
mov
dec
scas
push
and
sub
push
es
mov
cmp
test
inc
arpl
jp
push
imul
cmp
nop
push
jo
mov
faddl
jnp
jb
and
nop
xchg
adc
and
out
adc
push
pop
enter
add
push
push
sbb
mov
push
cmp
pop
push
cmp
nop
subb
add
lahf
adc
push
cmp
inc
push
cmp
mov
xor
add
push
je
jb
and
rcl
push
mov
ret
jmp
insb
cmc
push
decl
gs
rcll
sbb
repz
inc
dec
pop
arpl
cmp
repz
stos
mov
leave
repz
repz
out
sti
out
sahf
out
nopw
sub
aaa
inc
dec
push
pop
imul
xchg
in
movsl
xchg
ss
das
bound
scas
popa
pop
sbb
push
std
aaa
add
scas
fucom
icebp
mov
mov
push
push
xchg
outsb
add
adc
popf
nop
sti
das
je
xor
out
cmpb
lea
scas
int
rol
add
les
imul
orb
movsb
xchg
test
jmp
jl
mov
shrl
xchg
cmp
or
inc
mov
or
ja
fwait
xchg
call
fldz
fcompl
and
cmp
ja
ficompl
xchg
test
loope
movsb
sbb
movsb
mov
arpl
int
pop
adc
sbb
cmp
cmp
mov
jl
jge
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
mov
mov
xchg
mov
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
xchg
adc
jp
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
enter
adc
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
orb
cmp
movsb
aas
ret
dec
int3
mov
push
push
inc
cmpsl
pusha
mov
and
mov
nop
mov
aaa
and
and
ss
mov
adc
daa
cmp
sahf
dec
sbb
push
inc
push
cmc
sub
inc
push
pusha
or
sub
cmovp
addl
jo
test
outsl
mov
adc
popa
inc
jno
movsb
roll
ret
arpl
sbb
inc
xor
dec
loop
mov
nop
mov
sbbb
push
outsl
inc
sbb
pushl
jmp
push
sub
pusha
adc
outsl
aaa
je
stos
mov
and
sub
mov
adc
and
rorb
mov
imul
xchg
in
add
pop
dec
cmp
pop
je
mov
int
pop
push
mov
adc
pop
adc
mov
das
xchg
pop
ret
jecxz
sbbl
out
add
pop
sub
test
jne
or
sarb
jecxz
pop
mov
push
fmull
add
add
movsb
pop
sbb
mov
sbb
mov
inc
lods
out
repz
ficoml
test
pop
fwait
jo
mov
inc
xor
xchg
psubw
push
push
les
push
xchg
pop
jno
roll
mov
ret
stos
xchg
jne
adc
in
and
pop
ficompl
adc
insb
enter
inc
rorb
jge
enter
iret
mov
mov
jl
imul
enter
add
loopne
test
or
mov
rcrl
push
call
xchg
setl
pop
repnz
adc
movsb
adc
cmc
adc
push
sbbb
leave
push
add
and
dec
adc
lock
push
es
push
call
int3
push
and
out
and
loopne
cmpsb
push
or
test
pop
sbb
in
jecxz
or
fdivrl
negl
lods
fsubrs
sbb
push
lods
sbb
test
imul
sub
dec
add
nop
fwait
push
mov
rcrb
aaa
adc
sub
mov
mov
and
mov
lock
xchg
adc
lea
test
dec
mov
and
movsb
adc
sub
xorb
xlat
jge
test
push
push
inc
dec
and
int
js
movsb
mov
pop
pop
push
sub
inc
cmp
sub
mov
inc
push
in
test
xchg
mov
test
rcrb
pop
and
je
test
or
pusha
dec
xor
pop
pop
ret
es
add
add
lods
push
arpl
inc
or
or
sbbl
sbb
addl
call
add
aad
imul
test
sbb
popf
in
addl
and
shl
adc
test
mov
or
shlb
jo
inc
xor
jb
jbe
in
and
xchg
dec
in
roll
jne
dec
mov
adc
add
mov
neg
dec
mov
movb
lods
add
mov
shl
and
cmpb
adc
outsl
or
aad
sbb
sbb
divl
xor
push
cmpsl
test
sbb
data16
sbb
adc
mov
or
imul
mov
outsb
addb
jle
sbb
inc
out
and
psllw
jnp
sub
xchg
mov
mov
mov
fsubl
adc
insb
popa
scas
insl
lods
sub
push
xor
shr
adc
ret
sbb
mov
mov
mov
dec
dec
mov
sub
inc
xchg
mov
and
xchg
fdivl
shrl
inc
leave
dec
sub
sub
adcb
inc
jmp
adc
rcl
sbb
sbb
sbb
jbe
or
shrb
sbb
or
sbb
pushl
movsl
push
add
push
sbb
mov
xchg
lcall
xor
mov
sub
dec
dec
roll
push
hlt
push
mov
xor
or
and
add
sbb
das
and
movsb
shrb
adc
stos
sub
push
pop
es
mov
push
pop
daa
push
fs
sub
movsl
cmp
sub
movsl
dec
enter
lods
loopne
in
dec
sub
sub
adc
pushf
fsubrs
fcmovbe
movsl
pop
loopne,pn
push
push
dec
insb
movsb
lea
mov
mov
addb
fwait
test
mov
adc
add
mov
test
pop
inc
push
cmpsb
popl
push
aad
xor
mov
loop
dec
popf
iret
pop
jo
das
not
icebp
inc
cs
fiaddl
movsb
cltd
nop
data16
sub
imul
cltd
nop
inc
sub
fs
push
and
imul
and
lcall
cltd
nop
mov
lcall
xchg
adc
sbb
sbbb
js
test
les
and
aam
lods
add
rcl
push
vprotb
sahf
adc
push
jge
mov
add
test
add
xchg
in
orl
add
les
pusha
mov
dec
out
pop
sbb
cs
push
or
dec
test
lcall
fcoms
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
divb
pop
jecxz
repnz
movsb
add
pop
sub
and
orl
push
subb
pop
rorl
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
jns
mov
int
inc
sub
rorb
pop
icebp
cwtl
popa
add
xor
mov
clc
pop
call
scas
ss
xchg
inc
jbe
leave
add
mov
inc
or
cmp
push
shlb
pop
add
pusha
jl
dec
push
ds
clc
cmp
lahf
daa
lcall
icebp
inc
push
jmp
ss
adc
push
cmp
pushf
fcoms
push
mov
or
test
cmp
pop
sbb
test
sub
addr16
push
or
sub
scas
cmc
addr16
lret
lods
imul
or
popf
pop
cmp
std
mov
jbe
mov
mov
push
jmp
pusha
and
jmp
cli
inc
add
clc
sub
aad
and
mov
jmp
fistpll
inc
fstp
adc
inc
xor
aaa
sbb
cmp
mov
xor
jae
and
sbb
pop
adc
and
pusha
ljmp
clc
loope
push
enter
jbe
inc
mov
jb
mov
pop
pop
adcb
mov
xchg
inc
adc
push
addl
jb
adc
enter
jno
repnz
cmpsl
mov
js
les
jle
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
roll
ret
jl
xchg
addl
pop
sbb
subl
mov
cmp
jne
mov
inc
sbb
div
lods
repz
jae
inc
adc
adc
and
je
mov
add
or
dec
roll
mov
jmp
out
mov
outsb
push
stos
sub
xchg
inc
or
movsl
xchg
cmc
xor
or
mov
or
xor
pop
sbb
or
mov
add
mov
fcmovu
pushf
cmp
xlat
aad
or
and
lea
jmp
mov
push
out
sub
pop
push
and
ljmp
test
and
leave
sbb
clc
xchg
icebp
or
sbb
sbb
inc
sbb
add
pushl
inc
jbe
xchg
pop
lea
ret
sbb
test
out
cmpsb
sbb
jno
popa
or
or
jmp
xchg
xor
lahf
stos
xchg
adc
jmp
aam
adc
imul
push
mov
cmp
ds
jl
or
ud0
mov
cmp
or
and
mov
movb
movsbl
shr
mov
movsb
test
push
add
pop
dec
add
nop
inc
mov
leave
jne
pop
pop
xchg
cltd
pop
movsl
xchg
je
and
pop
and
dec
or
push
inc
sub
mov
cmp
mov
hlt
ficoms
push
lods
add
push
mov
aas
push
imul
jmp
dec
daa
inc
and
pop
jbe
enter
add
sbb
shll
sti
add
adc
mov
pop
cmc
xor
mov
dec
sbb
mov
xchg
sbb
or
je
dec
and
add
xchg
and
mov
jnp
push
rcll
dec
jmp
aaa
xchg
sbb
sub
lods
fsubr
and
decl
jge
adc
pop
fs
lock
pusha
push
cmp
push
push
shrl
xor
sub
ficomps
aaa
jno
mov
pop
pop
bound
add
or
push
adc
push
lods
push
mov
rclb
mov
data16
xchg
ficomps
mov
inc
je
mov
add
leave
mov
inc
mov
dec
pushf
xchg
adc
fcomps
sub
sub
or
cmp
xchg
test
and
and
leave
inc
or
out
xchg
jl
pop
add
mov
enter
lock
das
mov
loope
test
push
in
lock
dec
mov
pop
sbb
and
and
fcompl
jmp
pop
lock
and
lret
and
mov
repnz
or
or
int3
repnz
std
or
gs
idivl
adc
enter
nop
xor
and
jmp
cmp
inc
add
xor
inc
or
mov
leave
or
aad
lcall
sub
popa
xor
test
jns
lea
cmp
je
pop
xor
and
daa
daa
adcl
addr16
imul
xor
sub
xor
orb
cmp
aam
xor
add
movsb
outsb
xor
rcll
imul
mov
push
cli
dec
lea
sub
dec
xor
adc
mov
scas
shld
addb
pop
or
push
fadds
and
hlt
flds
fdivrs
rorl
rcrb
les
in
adc
js
add
add
jno
sub
xor
jecxz
xchg
subl
pushw
bound
mov
push
addr16
xchg
pop
into
cli
adc
mov
es
or
push
fcoms
and
jne
fsub
popa
add
js
mov
sbb
push
inc
leave
enter
mov
push
scas
sub
pop
lods
pushf
loopne
fcomps
cmp
gs
add
mov
cltd
jb
add
jecxz
imul
je
sub
enter
mov
iret
cltd
insb
sbb
outsb
or
or
and
mov
test
xchg
mov
xor
je
icebp
movsl
sbb
and
in
lock
jle
imull
xchg
icebp
ror
repz
sub
loope
lea
add
or
out
test
test
jmp
mov
repnz
test
dec
fadd
and
and
scas
jne
cmp
dec
in
and
adc
push
mov
push
xchg
cmpsl
mov
xor
jmp
bound
push
lahf
pop
push
cmp
adc
or
pop
inc
in
push
pop
bound
lea
or
mov
lea
mov
ret
xor
xchg
add
inc
dec
and
add
and
and
add
mov
sub
cld
ds
jle
xor
lods
test
and
push
mov
mov
or
cmpb
xchg
outsb
imul
or
add
push
jmp
loop
push
sbb
sub
lock
out
push
mov
loop
mov
pop
stos
lods
sub
mov
mov
push
dec
pop
cmp
test
push
sub
cltd
xor
push
mov
je
push
rcl
in
push
push
je
mov
je
out
dec
icebp
sub
sbb
jmp
in
jbe
test
mov
sub
mov
inc
hlt
in
rorb
sahf
nop
xchg
or
aad
add
loopne
loop
shr
jecxz
xchg
sbb
sbb
jno
and
subl
in
aad
sub
adc
add
rolb
mov
xor
jne
je
inc
scas
xchg
xorb
sarb
test
js
pusha
maxps
inc
test
hlt
add
sub
das
pop
sub
inc
fcmove
divl
ss
iret
test
adc
xorl
mov
outsb
int
jbe
xchg
cmp
imul
test
rolb
mov
filds
divb
jno
adcb
sbb
dec
or
lea
adc
shll
mov
lret
imul
pop
notb
mov
xchg
add
cmp
lock
in
mov
pop
mov
or
dec
cmp
rolb
mov
add
fidivrl
mov
mov
lods
xorps
or
pushf
and
clc
inc
das
mov
rcrb
mov
xor
mov
mov
push
sahf
fcoml
dec
and
adc
shlb
cmpsl
dec
in
cmp
test
jne
es
loopne
xor
movsl
jno
in
inc
dec
add
mov
sbb
add
jg
es
test
je
xchg
and
xor
dec
or
mov
je
add
sub
push
push
stos
add
adc
sbb
xchg
xchg
sarl
addr16
sbb
or
mov
sbb
xchg
scas
push
mov
pop
notb
test
add
pushl
and
push
cmp
dec
mov
mov
jle
test
fsubs
mov
scas
adc
add
jb
clc
mov
mov
inc
push
pop
insl
rcrb
hlt
add
pop
push
inc
sbb
mov
ret
faddl
jmp
fiaddl
addl
dec
mov
shl
jbe
push
push
cmp
add
enter
sbb
outsb
mov
fldl
push
in
daa
adc
test
lea
hlt
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
cmp
xor
in
rcll
fcomp
xchg
rcl
pop
adc
cmpsl
or
push
lea
movl
jl
inc
dec
cmp
inc
stos
inc
cld
data16
fstl
mov
hlt
mov
pop
je
pop
hlt
lea
loop
mov
hlt
pusha
mov
xor
cmp
mov
cmpb
and
orl
xchg
lea
sub
xchg
pop
ret
int3
int3
push
and
dec
fldt
sbb
or
stc
int3
movsl
mov
std
mov
mov
jne
inc
cmp
adc
loop
push
add
push
adc
adc
sub
fcomp
loopne
rcrb
ds
inc
lea
jbe
adc
js
pusha
jo
popf
add
mov
jl
icebp
pusha
ss
sbb
push
ss
jl
fnstenv
andl
pop
inc
loopne
or
xor
and
push
xchg
insl
mov
rol
mov
mov
jmp
orl
pushf
xor
pusha
pusha
movsb
sbb
pop
rorb
xchg
fs
jb
pushf
push
jne
or
and
mov
fs
call
dec
ficoml
mov
add
idivl
mov
push
clc
sarb
and
test
jg
outsw
mov
mov
mov
jae
mov
jbe
shlb
or
fmuls
mov
or
or
into
mov
subl
movsb
pop
and
test
les
xchg
flds
stos
dec
pop
inc
fsubl
xor
fsubl
in
insb
add
and
test
inc
mov
fs
push
or
testl
and
mov
movsb
test
fmuls
cltd
call
push
and
or
mov
jbe
xorl
sbb
dec
mov
xchg
mov
sti
jnp
push
in
insl
push
add
push
insb
xor
lahf
scas
mov
push
sub
mov
or
lods
add
push
mov
in
and
xchg
dec
pop
pop
pusha
sbb
jmp
pop
push
pop
ret
push
xor
clc
jecxz
add
push
jmp
xor
inc
in
test
sbb
fisttpl
push
scas
test
divb
add
sarl
andl
xor
pop
fs
dec
sbb
adc
inc
mov
mov
mov
pop
inc
adc
sbb
inc
lret
mov
adc
enter
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
rolb
ss
sbb
jb
jno
sub
dec
xchg
mov
inc
or
adc
inc
arpl
mov
daa
and
add
sub
xor
fiadds
xchg
cmp
enter
push
lea
ret
inc
push
das
push
dec
imul
jnp
cmp
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
icebp
pop
xor
dec
push
jmp
sbb
imul
rcr
mov
add
add
and
loope
shrl
cmc
pop
adc
cmp
and
js
dec
push
jae
jg
ljmp
jae
je
push
mov
pop
lea
xchg
xor
xor
sbb
fdivr
loopne
fcmovnbe
xor
jo
test
imul
lock
sbb
negl
int
cmp
leave
mov
adc
adc
aas
dec
xchg
mov
stos
mov
or
push
adc
push
adc
add
loop
imul
sbb
jnp
cmp
pop
test
les
sub
ret
xor
je
popf
or
or
in
call
pushf
add
orb
cmp
sub
sbb
pop
js
mov
orl
enter
aam
test
lgs
fisttpl
jecxz
mov
pop
inc
inc
pop
popa
push
lock
data16
sub
dec
pop
inc
std
xor
pop
push
test
fstpl
sbb
mov
testl
cmp
dec
ret
or
sub
mov
mov
inc
sub
stos
cmc
mov
inc
and
pop
pcmpeqd
fwait
add
imul
xchg
mov
sub
xor
imul
leave
fadd
add
insl
sbb
or
push
push
xor
test
push
add
xor
cmpsl
dec
je
cs
push
inc
add
inc
outsl
roll
or
push
jne
pop
scas
mov
ret
inc
cwtl
mov
and
lahf
outsb
mov
jne
mov
ljmp
xor
jo
push
push
adc
popa
mov
jbe
xchg
adc
out
rcll
xor
sbb
adc
roll
ret
add
push
add
shrb
mov
dec
ret
adc
add
add
dec
xchg
mov
clc
lds
js
inc
je
and
pop
push
mov
ja
jmp
stos
cmp
add
add
or
ja
in
les
mov
dec
pop
lock
xchg
clc
cmpsl
xchg
pop
add
inc
xchg
pop
add
push
adc
or
push
or
test
loope
popa
sub
sub
stos
jbe
stos
loopne
jno
pop
call
mov
out
je
je
lock
call
pop
lock
add
or
xor
add
xchg
mov
sub
add
xor
repnz
ds
lods
fnstenv
shr
sbb
push
push
fisttps
push
adc
arpl
nop
aam
xor
xchg
stc
adc
cmp
lods
cmpsb
movsb
addb
mov
call
mov
jl
lds
mov
sbb
aad
sub
addr16
add
jmp
jecxz
dec
int
sahf
inc
das
inc
or
and
fmuls
outsb
and
mov
cld
pusha
cwtl
or
in
inc
sub
push
push
push
push
bound
jmp
add
adcb
inc
push
mov
pop
adc
ds
cmp
in
add
push
add
loope
pop
or
out
mov
mov
aaa
aas
sbb
popa
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jbe
rolb
sbb
test
ret
clc
aas
lods
dec
push
sub
sub
andb
sbb
adc
pop
loopne
js
hlt
jae
movsbl
sbb
cmpsb
stc
movsb
fldl
xor
lahf
mov
sbb
xchg
or
sbb
pop
jmp
jg
mov
enter
ret
incl
incl
add
or
jecxz
or
add
inc
cmp
jl
cmpl
ss
mov
test
cltd
and
popa
xchg
pop
add
sar
add
jae
push
in
hlt
clc
xor
add
sub
cmp
jecxz
sbb
inc
scas
cli
adc
jne
enter
adc
or
fidivs
fs
inc
sbb
insb
pop
pop
sahf
repz
xchg
or
lods
and
push
inc
xchg
loop
pop
ficoml
stc
sbb
mov
rolb
jo
shld
lea
orb
rolb
roll
scas
adcb
sbb
or
lret
mov
cmp
jl
mov
aas
mov
xchg
add
or
mov
js
out
add
movb
jne
out
inc
ja
addb
rolb
or
repnz
jl
out
add
or
sub
mov
adc
jae
jmp
xchg
mov
aaa
test
and
xor
push
orb
adc
insl
scas
push
sbb
ficompl
push
dec
or
push
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
ret
sbb
push
repnz
cmc
mov
add
loope
icebp
fs
or
not
and
stos
sub
outsb
dec
or
xchg
xchg
lret
hlt
add
nop
je
add
sub
das
sub
jecxz
lock
pop
push
jmp
leave
loopne
lahf
call
lret
or
jge
sbb
lahf
cmc
out
fsubrs
addr16
outsb
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
les
add
clc
mov
jbe
add
push
movsb
jae
dec
mov
add
xchg
cmp
lret
add
jle
push
and
mov
stos
movsb
push
and
stos
lds
jns
lret
push
jo
jnp
test
int3
roll
xchg
pop
push
xor
aaa
lea
mov
sbb
cmp
lea
jo
dec
adc
push
and
testl
mov
xor
ror
mov
movsb
fwait
inc
pusha
pop
cmp
add
add
jnp
sbb
jmp
sbb
popf
frstpm(287
mov
xchg
sbb
sbb
mov
push
cmp
call
dec
xchg
mov
les
test
arpl
das
push
mov
dec
rcl
sbb
dec
push
ret
add
and
jl
dec
push
push
sub
dec
repz
int3
add
fcomps
cs
daa
jno
or
or
rorb
inc
mov
aaa
push
push
test
inc
shll
adc
aam
fs
shrl
jbe
sbb
jl
mov
push
push
lcall
inc
mov
mov
xorb
push
sbb
rcrl
pop
jne
or
jmp
mov
dec
dec
and
push
sti
push
ret
xchg
es
pushf
fwait
sbb
cmp
xor
add
int3
int3
add
mov
les
cmp
cmp
sahf
or
push
pop
cmp
sarl
fldenv
repz
je
dec
pop
test
arpl
adc
test
push
ret
cli
and
xchg
das
lods
mov
pushf
adc
xlat
push
aaa
jge
jo
das
or
jo
and
and
inc
les
mov
fs
xchg
sub
or
lock
les
mov
push
add
cmc
lret
rcr
dec
aam
in
loopne
int3
ja
loope
mov
clc
jl
pop
mov
push
cwtl
loopne
fdivrl
pop
jge
sub
add
js
push
fistpl
push
je
cmp
daa
packsswb
mov
add
test
cli
decl
inc
loopne
jmp
mov
out
test
sub
clc
jo
dec
out
test
les
fsub
sbb
lret
movb
ret
nop
inc
loope
cli
or
shlb
sbb
jle
sub
jnp
shlb
sub
dec
dec
test
cmpsl
pop
aas
push
xchg
xor
push
addr16
xchg
je
add
mov
inc
add
lods
xchg
test
jo
iret
adc
mov
insb
jmp
jne
shlb
iret
cmp
jle
pushf
in
out
sub
add
xor
sub
push
add
call
cmpsb
xchg
cmp
sub
adc
aad
push
push
scas
inc
inc
mov
outsl
jecxz
inc
push
pop
fwait
and
xor
lock
je
bound
ljmp
xchg
mov
mov
jg
mov
mov
and
out
add
mov
clc
xchg
rolb
das
fistl
pop
mov
mov
add
xchg
add
xchg
pop
push
or
fmull
clc
mov
adc
add
movzbl
mov
inc
mov
mov
cmp
push
call
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
cmpb
int
xchg
add
mov
int3
pop
add
push
mov
nop
and
xchg
nop
add
or
cld
push
leave
push
xor
push
cld
or
mov
inc
call
jne
pop
mov
mov
scas
pushf
mov
into
and
pop
or
sbb
mov
insb
adc
into
push
sahf
pop
add
push
mov
fwait
enter
xor
push
nop
cmp
hlt
rclb
gs
push
add
in
fs
lret
in
mov
push
int
cli
ret
sub
movsb
and
adc
sub
cli
inc
mov
mov
cmp
push
enter
in
pop
daa
fbstp
cmpsb
lret
pop
or
scas
and
sbb
mov
popa
and
push
mov
add
loope
loopne
cmc
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
cmc
pop
sub
push
add
call
cli
mov
xchg
xchg
jns
sti
lea
jo
mov
loop
push
push
movsl
jns
faddl
add
in
enter
mov
test
mov
cmpsb
mov
or
add
fs
mov
into
push
add
xlat
jnp
xor
jmp
js
test
and
inc
lods
sbb
mov
push
mull
cmp
aas
jb
and
sub
add
mov
adc
mov
movsb
cltd
jge
leave
pop
in
adc
and
int
xor
mov
cmp
sbb
and
jp
insl
pop
loope
add
add
and
or
sub
mov
jecxz
push
mov
and
arpl
shl
xlat
loopne
out
test
xchg
mov
xor
int3
iret
sbbb
out
and
inc
or
jle
insb
and
xor
shlb
and
lock
xchg
mov
jecxz
xor
fnstsw
inc
xchg
adcl
jo
and
and
enter
int
mov
and
movsb
pop
sbb
sarb
or
cmpl
lods
push
stos
and
ret
shrb
jle
add
or
fst
scas
add
push
js
jl
aam
ja
xchg
shrb
add
rorb
stc
add
shlb
popf
movsb
pop
je
inc
outsl
dec
out
out
fdivl
mov
je
or
imul
hlt
es
adc
test
mov
lret
maxps
das
add
mov
add
aam
out
mov
and
adc
dec
fsts
out
fwait
movl
aas
push
mov
and
jge
cmp
mov
jo
cmp
outsl
pop
cmp
adc
inc
add
popa
fs
push
sti
or
or
sub
add
loop
mov
sub
or
push
pop
je
bound
mov
pop
and
es
and
xor
das
popf
cwtl
jp
loop
mov
xchg
ds
addl
mov
add
sub
xorl
add
xchg
lcall
dec
dec
repnz
sbb
jo
out
int3
or
jmp
push
sub
inc
incl
sub
mov
and
aas
add
fisttps
jmp
ret
mov
jmp
push
dec
mov
adc
xor
stos
or
les
addb
xchg
mov
push
push
push
test
imul
out
lock
push
xchg
push
push
ret
lahf
imul
cwtl
jo
mov
push
pushl
and
cmp
fidivs
cmp
jbe
sub
sub
cmp
pop
push
sbb
pop
outsl
and
ret
mov
mov
add
sub
adc
lret
out
xor
nop
cmpsl
or
push
add
sub
bound
xor
jmp
or
pop
clc
jne
mov
cmpl
inc
push
xor
mov
movsb
dec
mov
mov
add
cld
out
dec
cld
rclb
or
adc
fistl
pop
movsb
jg
jmp
push
mov
add
push
adc
mulb
pop
xor
push
call
cmp
sbb
xchg
and
sbb
sub
fisttpll
mov
ret
push
mov
ret
movsb
aam
ss
push
adc
add
rorb
dec
mov
cmp
jae
inc
jmp
add
or
icebp
push
test
lock
push
scas
movsb
push
xchg
fisubrs
sub
mov
add
push
add
cmc
outsb
mov
sub
addr16
sub
enter
dec
movb
sub
push
mov
xor
push
inc
loope
dec
stc
pop
testb
sub
movb
movsb
add
add
mov
test
sub
jnp
ret
add
pop
add
xchg
bound
shlb
push
xchg
out
test
shlb
or
insb
pop
jmp
js
lea
sub
adc
adc
movsl
cmp
sbb
sub
mov
pop
mov
jecxz
daa
ss
pop
jne
inc
or
sahf
test
ret
add
xor
pop
loopne
add
pop
jge
mov
movsl
or
lods
test
mov
or
lods
test
jle
lea
push
or
sahf
mov
push
or
pusha
mov
inc
inc
xor
sub
sub
lock
insb
addr16
dec
xor
clc
adc
rcll
mov
xchg
and
push
or
mov
dec
mov
insb
add
and
sbb
lahf
jo
rorb
shr
sub
cmp
pop
lods
sahf
pop
mov
rorb
xchg
rorb
push
xor
mov
dec
cmp
icebp
jne
xor
xchg
inc
insl
push
push
aam
cmp
mov
cmp
stos
dec
sbb
aam
lahf
add
movsl
addl
add
icebp
aam
cli
add
imul
adcb
mov
notl
cwtl
fidivrl
inc
das
adc
sub
pop
mov
or
enter
xchg
push
or
xchg
enter
ror
and
and
xor
cwtl
push
sub
mov
arpl
fcompl
cmp
sub
sti
sub
les
inc
cltd
push
mov
and
ret
ret
in
ret
int3
pop
ret
jmp
cmpsb
xor
adc
or
jne
movsb
push
jb
mov
ja
negl
xchg
jecxz
jle
pop
sub
cmpl
rcrl
cs
inc
movl
loope
or
andl
test
cld
push
ret
int3
add
shlb
adc
or
stc
pushl
sti
or
aaa
push
push
push
ret
js
push
jecxz
bts
jbe
fdivr
and
pop
jecxz
sub
add
and
mov
orb
jo
std
bound
mov
rclb
or
gs
iret
fs
xor
sub
cld
dec
mov
mov
push
cwtl
jl
mov
and
adc
xchg
push
inc
imul
mov
lock
push
push
cmp
jb
popf
or
or
mov
inc
cmp
lcall
ret
jnp
dec
fs
add
dec
insl
dec
pop
push
sbb
jp
addr16
ss
cwtl
or
je
pop
push
inc
adc
outsb
add
mov
fisttps
pusha
push
in
push
scas
repnz
loop
jnp
jmp
add
mov
mov
mov
fldt
push
filds
or
mov
cmp
addr16
je
cmp
jne
mov
adc
sbb
add
pop
dec
lea
cmp
mov
pop
dec
xor
push
dec
fdivrs
cmpsb
push
jmp
testb
je
testl
or
cld
cmp
jbe
jg
mov
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
pop
mov
pop
daa
shrl
xor
int3
test
lcall
clc
mov
cmp
add
sbb
cmpsb
fs
adc
into
cli
jo
inc
jl
lcall
xor
push
sub
cld
inc
dec
cmp
sub
pop
cmp
jo
hlt
adc
sub
les
clc
je
faddp
movb
xchg
mov
mov
mov
xchg
ja
js
sub
ss
push
nop
adc
jge
stos
js
sub
add
inc
cld
shlb
sbb
bound
es
outsb
sahf
push
lds
loopne
jne
mov
sbb
sbb
mov
mov
data16
mov
ljmp
lcall
outsb
inc
shlb
pop
shl
add
hlt
or
adc
aas
insb
sti
and
cmpsb
and
or
adc
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
mov
cwtl
sub
cltd
andb
push
sbb
ret
mov
push
add
push
xor
sub
or
and
jno
xchg
inc
jg
mov
add
pop
xor
and
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
push
inc
test
jbe
bnd
aam
cmp
jbe
loopne
pop
push
and
pop
arpl
pop
and
popf
add
je,pn
test
jne
pop
mov
sbb
adc
clc
add
push
xor
insl
loop
add
jae
movb
inc
scas
fcoml
fdivp
push
sub
mov
adc
and
out
lahf
enter
jno
mov
inc
and
inc
add
xor
adc
mov
adc
sbb
add
sbb
jp
sbb
dec
inc
push
je
mov
cmp
test
cli
and
jno
push
lahf
push
mov
sbb
aas
jmp
xchg
pop
jne
rorb
test
push
push
shl
mov
push
inc
mov
insb
dec
jl
and
pop
ret
add
pop
add
cmc
mov
mov
cld
cwtl
push
mov
inc
sahf
rol
das
cmp
push
imul
pop
repz
inc
inc
xchg
mov
cs
cwtl
inc
jg
push
daa
push
jecxz
fidivrs
in
cmp
push
xor
test
pop
mov
adc
push
lock
cltd
call
xorb
jbe
sbb
adc
ret
push
mov
cld
xchg
cmp
and
cmpb
push
andl
mov
jns
pop
lea
adc
ljmp
sbb
xchg
imul
pop
or
jecxz
push
andl
inc
sbb
jae
nop
rcr
cltd
aaa
jp
mov
dec
pushf
inc
subb
cmp
sub
dec
nop
cmp
dec
sbb
cwtl
ret
sbb
popa
xor
push
push
movl
push
adc
dec
or
xor
clc
jb
and
jbe
xor
and
inc
add
sbb
gs
filds
push
mov
mov
nop
sbb
xchg
aam
add
imul
xchg
outsb
xchg
sub
loope
pop
dec
scas
push
sbb
popf
int
aad
cmp
lock
mov
je
pushl
shll
cmp
pop
lea
outsb
fsubr
jae
pop
adcl
pusha
push
cmpl
push
bound
cmp
jne
sub
pop
psubd
lea
push
pop
data16
pop
scas
cltd
adc
sub
enter
jae
inc
push
inc
enter
stc
fbld
jbe
mov
jge
push
gs
add
push
ja
inc
sti
inc
inc
fwait
cmp
add
repnz
pop
pop
sti
loope
rclb
cmp
sbb
push
or
xchg
test
cmc
lock
push
cs
sbb
movsl
xchg
stos
pop
adc
pop
mov
sbb
jnp
dec
data16
pop
je
test
dec
scas
rcrl
push
inc
inc
jmp
xor
push
nop
xorb
fs
cmp
adc
sbb
mov
push
push
dec
mov
popl
incl
cld
pop
mov
adc
ret
mov
andb
jle
mov
add
push
lea
sbb
js
cmp
add
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
adc
leave
add
pop
jns
addl
pop
fidivs
mov
dec
ljmp
adc
sbb
ret
or
sti
pusha
jb
mov
ret
lea
xchg
lret
adc
roll
ds
mov
jbe
push
adcl
inc
movb
dec
mov
loop
push
dec
mov
push
divl
das
push
and
gs
and
pop
or
sbb
jo
push
ljmp
or
mov
mov
jmp
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
addl
add
jmp
xchg
pop
lods
dec
movsl
out
push
scas
std
xor
mov
ret
jle
inc
loope
fstpl
es
insb
pop
frstor
pop
cmpsb
or
xchg
pop
mov
cmp
andb
xor
push
cld
or
sbb
loop
out
and
cmp
mov
mov
jp,pn
lret
movsl
or
int3
jbe
lods
lods
or
mov
pusha
push
adc
imul
add
out
lods
and
testl
mov
jne
xchg
cmpl
jne
in
cmp
lods
jo
pop
mov
add
shlb
jne
mov
aad
lods
xor
insl
jnp
sti
pop
pop
out
das
movl
rorb
mov
mov
xchg
out
out
sub
movsl
cmc
push
add
jbe
mov
inc
fs
rcr
in
pusha
ret
or
xchg
add
xchg
sbb
sbb
sbbl
inc
je
fstps
cmp
ja
lea
inc
inc
fadds
jne
daa
rcrb
inc
push
push
addl
sbb
add
adc
jg
pop
mov
push
xorl
dec
roll
out
push
cmp
adc
push
adc
sub
mov
add
cmp
xchg
add
std
jnp
loopne
ret
adc
mov
xchg
sub
fdivs
mov
icebp
cmpsl
mov
fwait
loopne
mov
repnz
fsubs
test
dec
xlat
push
aas
je
cmp
imul
and
jne
push
imul
cmp
pop
jne
pop
call
repnz
mov
in
xor
jl
pop
jle
xchg
jne
jmp
sbb
sbb
lret
sub
mov
sbb
mov
push
sub
and
addr16
ret
jne
mov
sbb
loopne
add
je
pop
in
cmp
arpl
stc
mov
cs
pop
je
sti
jno
out
dec
xchg
repz
jmp
pusha
mov
dec
in
arpl
scas
jg
add
mov
pusha
add
std
and
xchg
mov
sub
shl
mov
add
cmpl
jl
adc
xchg
out
and
inc
fldl
shr
mov
push
pop
loopne
mov
push
scas
or
inc
decb
push
mov
or
cld
or
fwait
ret
push
add
inc
and
mov
les
pusha
pop
call
cmp
cvttps2pi
and
push
mov
nop
fcoms
adc
push
adc
in
add
inc
pop
rorb
arpl
xchg
or
xchg
add
ja
mov
push
gs
sahf
xchg
movsl
push
push
push
push
pop
pop
in
mov
pusha
flds
mov
xor
adc
jecxz
push
push
sub
xchg
movsl
xchg
add
sbbl
cs
xchg
js
sbb
mov
lods
fisttpll
daa
jecxz
and
and
pop
rclb
sub
xor
in
add
rcll
lcall
mov
sbb
adc
mov
cmp
sar
push
sbb
or
inc
adc
fildll
add
pop
cmc
test
outsb
in
test
and
push
imul
jbe
or
add
daa
mov
cmp
xor
es
and
xor
test
push
jp
ljmp
sti
xor
or
clc
pop
dec
cmp
outsl
jnp
jp
push
pop
jmp
jecxz
test
mov
inc
push
aam
je
into
or
divl
mov
mov
cmp
or
popa
ret
push
push
sub
mov
repz
lock
testl
sub
int
xor
sti
es
sti
fcoml
or
imul
mov
xchg
mov
mov
sub
decl
cmpsl
test
sbb
mov
lock
push
or
ljmp
xchg
fwait
add
in
and
push
mov
je
mov
cmp
jne
xchg
adcb
adc
in
mov
loopne
inc
jbe
xor
or
je
jg
jo
adc
frstor
sbb
mov
jne
cmp
je
ds
xchg
pop
int3
loope
inc
push
mov
mov
add
pop
sbb
pop
les
push
imul
pop
lock
jb
or
testb
jbe
push
adc
call
jne
rolb
into
and
mov
push
lret
dec
add
cmpsb
add
in
lock
fsubrp
lock
cmp
jne
or
or
push
ror
sbb
mov
call
hlt
adc
sbb
sbb
mov
je
or
daa
aaa
adc
cmp
cmc
nop
data16
aas
js
bound
xor
push
or
or
incl
lock
out
jl
push
icebp
push
and
pusha
mov
jmp
xchg
jle
aaa
jp
push
mov
subb
popa
lahf
pop
mov
cmp
cmpsl
cmp
fstpt
cltd
mov
pusha
je
divb
push
sbb
sbb
inc
or
add
dec
in
xor
add
test
fisubl
jb
xor
outsb
out
pop
pop
inc
cmp
lea
adc
inc
hlt
subb
mov
lock
hlt
andl
arpl
add
cmpb
add
mov
hlt
cmp
ljmp
inc
movsb
pop
enter
cltd
mov
jb
les
iret
cmpsb
icebp
pop
adc
lock
mov
mov
aas
push
fcomp
xchg
into
xor
outsl
mov
mov
add
and
mov
je
orb
sar
push
and
lea
test
push
out
add
orl
int
and
call
lea
cmpl
fidivl
jne
addr16
fnstenv
hlt
test
shrb
je
inc
addb
add
js
insb
add
mov
mov
mov
mov
inc
pusha
scas
xchg
adcb
int
cmpb
jns
pusha
shlb
xor
lock
and
mov
movsl
movsw
orb
xchg
and
test
add
or
sbb
and
sub
adc
adc
in
adc
sub
dec
pop
sbb
push
int
adc
pop
push
test
pusha
es
push
xor
ja
je
adc
jns
loope
bound
adc
and
and
adc
jmp
sub
push
xchg
pop
sahf
xchg
adc
and
mov
push
bound
adc
inc
add
ret
loopne
xor
sub
cmp
mov
aam
ficoml
adc
xor
scas
and
jmp
mov
dec
add
aam
inc
pop
push
gs
adc
dec
push
pop
or
mov
sbb
and
jmp
jne
jns
pop
push
loop
sbb
xor
mov
push
xor
sbb
jg
jbe
lods
loopne
adc
ja
jmp
mov
and
cmpl
and
into
aas
int
bound
adc
out
inc
xchg
iret
in
shlb
and
mov
fdivrs
into
jae
dec
adc
stos
and
xchg
loopne
in
cmp
shlb
add
fldt
mov
add
push
push
mov
jmp
roll
xor
xchg
push
sbb
sarl
int3
lds
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
dec
inc
cmp
cmpsb
push
testb
loope
pop
pop
je
add
inc
clc
sbb
add
daa
sub
into
inc
popa
adc
mov
mov
ss
cmp
sti
pop
mov
push
mov
mov
sahf
push
xchg
aam
mov
outsl
push
add
jge
xor
lea
mov
inc
out
jge
push
sbb
or
push
out
fmuls
stos
ret
imul
mov
add
cmp
and
sub
jmp
add
lods
dec
clc
inc
push
mov
xchg
mov
and
inc
ds
rcr
add
push
push
xor
xorl
sbb
jmp
push
incl
call
add
push
adc
and
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
cwtl
hlt
sub
jno
mov
fdivrs
pop
outsl
sbb
fdivs
pusha
xchg
mov
pop
xor
gs
jp
and
lea
push
stos
inc
adc
jb
es
add
xor
lds
xlat
mov
or
dec
sarl
or
popa
pop
leave
sub
pop
xchg
pop
mov
cmp
cmp
ret
pop
push
push
cs
or
int
data16
pushf
pop
push
mov
insl
pop
mov
mull
add
pop
jmp
push
pop
add
loopne
mov
repnz
fcom
mov
xor
inc
push
adc
jge
cwtl
jle
mov
sub
cmp
pop
ds
add
push
push
push
mov
js
out
mov
jo
pop
xchg
fstpt
hlt
adc
jecxz
ret
pushl
push
fldenv
xor
push
ja
cmpsl
jo
inc
out
add
iret
add
pushf
pop
sbb
jo
repnz
cmp
push
insb
jne
or
adc
push
push
push
dec
sarb
pop
add
inc
inc
data16
testb
pop
iret
mov
pusha
push
pop
mov
jae
movsl
mov
dec
loopne
rdmsr
dec
loopne
xchg
mov
stos
or
inc
inc
xchg
mov
add
mov
repz
push
or
clc
call
and
out
add
cmp
or
loopne
xor
scas
sub
rcrb
ja
repnz
sub
aas
mov
or
mov
and
sbb
sub
cmpsl
mov
stos
cmpsl
inc
sahf
cmpsb
add
cmpsb
pop
pop
jmp
or
loop
lods
pop
js
lret
push
fmul
jp
push
loopne
sbb
push
ret
and
adc
add
xchg
add
cmpsb
rcl
cld
test
push
repnz
leave
cld
adc
int
mov
and
adcb
shll
iret
or
sub
dec
adc
pop
arpl
cmp
add
cmp
pusha
popa
adc
pop
mov
cmp
inc
fbstp
rcr
adc
jbe
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
lret
xchg
adc
hlt
add
mov
push
push
pop
cmpb
mov
adc
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
and
loop
adc
add
aam
lock
das
inc
sbb
mov
test
arpl
add
cmp
lock
dec
jo
sub
cmp
aaa
sbb
xor
jmp
mov
jbe
lret
cs
pop
or
das
dec
mov
cmp
sbb
push
stos
imul
dec
mov
add
xchg
pop
lret
ret
or
loope
addb
inc
es
lcall
mov
pop
popa
mov
daa
fsubl
add
cmp
mov
dec
jne
out
outsl
aaa
inc
adcb
lcall
push
lcall
mov
mov
loope
and
js
sbb
add
in
loope
mov
pushf
mov
or
push
nop
or
pop
leave
mov
clc
or
mov
xchg
and
addb
pop
movl
cmp
inc
dec
fwait
or
dec
mov
nop
ficoml
dec
xor
xchg
test
sbb
cmp
push
sub
sbb
fwait
les
inc
sbb
cmpsl
insb
push
inc
and
xchg
xchg
xlat
rcr
fwait
js
xor
cs
and
dec
mov
jnp
mov
and
inc
mov
mov
dec
sbb
mov
or
sahf
ss
adc
push
and
sub
daa
add
dec
leave
out
inc
sub
dec
cli
sahf
outsb
mov
or
push
pop
sbb
adc
incl
ss
jno
inc
cli
sub
xchg
push
mov
jnp
jnp
inc
mov
andl
stos
push
sarl
inc
or
and
rorb
adc
jbe
pop
or
add
outsb
xchg
pop
mov
add
mov
shld
adc
aaa
adc
dec
push
sub
jae
popf
push
push
adc
sbb
out
mov
sbb
add
sbb
inc
push
jl
fmuls
leave
mov
and
call
and
adc
push
shlb
fistpll
adc
rcrb
ret
roll
ss
xchg
dec
dec
dec
rorb
push
and
dec
adc
mov
test
push
loopne
lcall
pop
cmpl
lret
or
inc
fcomps
les
dec
inc
mov
pushf
sahf
outsb
cli
xor
cmpl
jne
adc
insb
out
xor
and
int3
mov
and
sbb
pop
ss
pushf
pusha
adc
pop
fs
aam
ljmp
into
inc
imul
xor
shlb
jge
out
ret
push
iret
push
xor
fsubrs
test
xchg
pop
xor
movsb
jmp
sbb
test
jo
adcb
or
sub
loopne
jmp
dec
sub
push
movsl
aas
loop
dec
xor
insl
lock
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
stos
mov
scas
jge
bound
jbe
add
and
adc
cmp
xchg
adc
adc
mov
sub
push
adc
xchg
bound
jns
inc
jbe
adc
int3
mov
addr16
data16
pop
add
clc
icebp
adc
sahf
inc
loopne
mov
call
fbstp
push
xor
jnp
pop
jbe
lret
pop
sahf
pop
cs
mov
jbe
fdivl
ret
mov
mov
sbb
insb
out
add
data16
xchg
je
mov
lock
jbe
pusha
adc
mov
push
dec
adc
aad
pop
mov
mov
cmp
cmpl
imul
js
ret
add
outsb
mov
fwait
inc
test
pop
lock
or
mov
xor
js
xlat
lcall
add
jmp
cs
data16
pushl
leave
lods
mov
adc
rolb
cli
add
add
lods
dec
mov
mov
sarl
cmp
and
cmpl
mov
iret
jmp
mov
mov
push
push
and
dec
mov
pop
add
jl
push
pop
mov
cli
xor
inc
imul
bound
add
mov
lret
cltd
cltd
push
or
push
xchg
and
mov
pop
sbb
inc
roll
xchg
xchg
mov
jecxz
sub
negb
inc
or
mov
or
mov
or
jmp
test
jge
xor
lea
cmpsl
or
add
mov
lods
xor
inc
ret
mov
sub
mov
pop
push
lds
and
or
sbb
dec
add
cmp
pop
mov
mov
les
inc
add
sar
ljmp
sub
rcrb
jbe
sub
add
mov
das
pop
dec
dec
imul
xchg
push
mov
xchg
push
push
add
rcl
adc
adc
xor
jnp
stc
and
sarl
add
xchg
test
mov
sub
mov
xchg
cmp
cmp
pop
push
pop
xchg
jmp
add
data16
jp
xchg
hlt
jne
adc
mov
sub
add
out
xor
enter
add
mov
mov
cwtl
jp
sbb
pop
jno
inc
lretw
leave
sub
adcl
add
cmp
dec
or
adc
sub
mov
push
dec
mov
pop
mov
jne
ret
mov
push
dec
mov
int3
sub
data16
shr
mov
adc
shlb
lds
mov
and
arpl
lock
push
imul
push
adc
enter
ljmp
adc
inc
dec
or
and
xor
pushf
mov
mov
mov
lods
cmpsl
mov
inc
xor
ds
enter
cmpsb
rorl
xor
addr16
sub
out
inc
inc
mov
sbb
add
xor
mov
lahf
in
xchg
or
adc
and
add
sbb
adc
and
push
adc
adc
adc
adc
push
adc
adc
adc
fcom
inc
rorb
sub
shll
lock
pop
add
lds
adc
jg
dec
jmp
clc
push
mov
cmpw
je
inc
ret
cmp
aad
imul
out
or
mov
icebp
add
or
xor
sbb
or
scas
cwtl
mov
mov
lock
mov
inc
fisttps
leave
dec
jo
pusha
mov
xor
loop
les
add
mov
jmp
in
popf
mov
add
add
cmovae
xor
jo
pop
jmp
cmp
add
pushf
idiv
add
bound
add
or
push
sbb
es
in
mov
sbb
mov
lea
adc
shrl
cmp
cmpsl
push
das
jle
fists
mov
pushf
ret
mov
xchg
add
xchg
mov
arpl
popf
into
xor
add
into
imul
jne
sarl
sti
popf
push
sbb
push
notl
mov
mov
sbb
and
jb
shrl
adc
dec
cld
inc
rolb
lea
push
add
aad
popf
insb
cmp
in
mov
push
sbb
sbb
add
pop
sub
cmpsl
push
mov
scas
je
cmp
mov
testb
ret
inc
mov
call
cmp
mov
lcall
nop
push
mov
and
or
setp
add
jmp
xor
pop
fiadds
dec
cmp
lea
push
mov
fiaddl
or
jnp
adc
adc
dec
mov
je
mov
pop
into
fiadds
xor
xchg
inc
call
and
pop
out
cmpsl
das
inc
pop
push
push
adcl
scas
mov
sub
cmp
xor
and
cmp
outsl
popa
add
ja
in
pop
sarb
push
jmp
or
sub
loop
or
or
dec
push
inc
in
sbb
xchg
adcl
push
scas
or
add
out
lcall
mov
xor
pop
sub
clc
sbbb
loopne
jno
push
push
pop
push
notb
fcomps
add
sub
dec
repz
and
push
out
inc
sbb
shlb
inc
clc
push
pop
aad
cmpsb
push
or
rorb
sbb
hlt
and
fsubs
jno
mov
insb
sbb
xor
cmovge
sub
pop
adc
sbb
sbb
sbb
mov
shll
ret
fs
movb
sbb
int
add
pop
cmp
jp
and
js
xchg
cmc
add
pop
push
es
jno
mov
inc
test
xchg
mov
xchg
repz
add
pop
outsb
out
push
fiaddl
adc
rol
push
push
mov
not
jmp
addl
inc
sub
sbb
cli
ja
jecxz
cmc
les
sub
or
sub
loopne
add
dec
push
or
in
mov
rorl
push
imul
mov
nop
cltd
jge
xor
sbb
xor
jp
xor
bound
inc
out
push
fistl
bound
jl
psubw
xchg
jnp
adc
lret
or
cmp
xchg
scas
dec
shrl
scas
xchg
icebp
push
iret
pop
je
fld
add
pop
xorl
dec
push
ja
or
sbb
aam
jge
mov
jne
cs
dec
loopne
imul
adc
ror
ret
sbb
adc
mov
or
nop
inc
sbb
iret
lds
sarb
pop
out
sub
add
inc
popa
repnz
test
ret
xor
mov
jmp
repnz
pop
pop
arpl
mov
loop
movq
sub
repnz
cmpsb
push
mov
mov
adc
push
stos
add
andl
sub
xor
pop
mov
adc
cmp
pop
clc
jecxz
inc
mov
dec
call
mov
pushf
mov
or
mov
bound
sub
mov
subl
dec
push
cmpsb
lea
ja
lcall
xchg
xchg
leave
fsts
jns
es
adc
rcrl
daa
mov
and
adc
inc
test
and
adc
add
mov
mov
ljmp
pop
mov
or
jne
inc
fs
and
push
cmc
rorb
fimull
jmp
pushf
fstpl
jo
xor
lahf
mov
pop
aaa
cmpsb
or
incl
dec
dec
cmp
js
mov
adc
add
pop
add
push
jecxz
adc
inc
dec
or
or
add
or
xor
pushf
or
ror
add
ja
aaa
ja
adc
test
inc
add
data16
fs
jmp
aaa
movsl
adc
in
or
add
lods
push
xchg
stos
jmp
push
mov
nop
push
cmpsl
das
xchg
mov
or
js
sbb
lock
les
cmp
mov
loopne
mov
enter
inc
orl
ret
push
xorb
shrb
adc
mov
scas
repnz
jae
lea
jmp
cmpl
sub
mov
les
roll
dec
add
cmp
out
mov
imul
mov
in
sub
xchg
jbe
xorb
add
add
or
and
fs
das
add
xchg
push
fistps
cmc
xchg
mov
jg
clc
inc
mov
cltd
addr16
incl
add
aad
pop
and
push
inc
shl
adc
xchg
sbbl
sub
addr16
mov
add
out
add
add
push
or
pop
roll
cwtl
pop
sarl
sti
add
pop
pop
or
sbb
lods
addl
or
mov
hlt
test
pop
mov
adc
call
sahf
pop
test
addl
mov
add
or
pop
cmp
dec
cmc
nop
pop
jo
stc
shrl
xor
aad
jnp
xlat
mov
movsl
sbb
adc
inc
and
or
incl
icebp
inc
sti
push
je
cwtl
xchg
popf
dec
out
inc
cmp
sbb
mov
loopne
ds
xchg
js
add
stc
xchg
lret
or
mov
push
inc
jo
mov
ja
xchg
mov
shll
test
in
dec
ret
ss
mov
in
add
add
xor
add
gs
sbb
shrd
sbb
outsb
dec
scas
jno
or
das
or
pop
add
xchg
and
cli
outsl
lea
cmp
leave
and
add
cmp
pop
sbb
add
inc
push
nop
or
inc
xorl
pop
cmpl
int3
push
or
daa
lea
xchg
push
pushf
lds
imul
push
xchg
sub
sub
outsl
adcb
jno
lea
sub
jmp
in
mov
sbbl
outsl
in
xchg
sub
test
test
or
jb
testb
adc
sbb
sbb
sbb
ja
sti
data16
inc
jnp
cmp
loope
or
or
data16
jbe
add
cmp
jmp
push
jbe
or
je
test
xor
push
jns
mov
mov
in
cltd
push
push
test
cmp
dec
or
sbb
shrl
nop
inc
cld
add
lock
stos
es
sbb
push
fcoml
and
clc
hlt
push
and
hlt
jns
or
lds
cli
mov
pop
cmp
add
cmp
call
pusha
stos
and
fldcw
adc
or
mov
push
push
push
lock
jne
mov
inc
loopne
mov
repz
ss
cld
fcom
dec
or
push
scas
inc
xchg
jno
out
or
ja
pop
or
push
cmp
js
inc
in
aam
xor
jno
or
popa
popa
lea
ret
pop
inc
mov
xchg
lret
movsl
or
pusha
push
js
xchg
add
je
mov
ficompl
shlb
std
fisubs
shl
jo
movzwl
push
jo
js
adc
fistps
mov
dec
jp
push
jb
cmpsl
test
sbb
clc
mov
inc
aam
adc
outsl
xor
repnz
jg
sbb
sbb
mov
xor
sub
fidivrl
insb
adc
inc
pop
and
push
cmpl
jne
mov
jl
cmp
jbe
or
jne
push
ja
sarb
hlt
mov
std
cmpb
data16
push
xchg
push
cs
popa
inc
add
cmpl
mov
shrb
add
cld
mov
cmovns
or
adc
sbb
lds
xor
xor
or
sub
push
mov
jne
pop
orl
cmpsl
rclb
xor
mov
and
inc
pop
js
and
pop
mov
in
test
rorb
js
vmread
sub
and
imul
push
andb
and
and
or
add
jne
and
rorb
bnd
jle
lds
adc
bswap
add
movsl
clc
into
fstpt
pop
in
xor
dec
rcrb
sbb
clc
fsubl
ficoml
dec
cltd
out
ds
add
mov
mov
std
mov
dec
outsb
inc
sbb
pop
fucomip
in
pop
xor
or
cmpl
xor
popf
addl
mov
call
es
loope
aam
rcl
ret
cld
xor
push
mov
rorb
sub
or
pop
ja
pusha
adc
push
test
insb
lock
fwait
and
jmp
jae
xor
xchg
ljmp
xchg
dec
fs
mov
fisttpll
cmp
addr16
je
mov
ljmp
and
inc
xor
adc
les
cmp
jb
and
mov
or
fdivr
mov
push
jae
dec
mov
xor
inc
sub
cs
add
and
and
clc
outsl
push
add
xchg
cmp
cmp
adc
daa
call
inc
cs
decl
cltd
push
push
mov
rclb
outsb
sub
mov
std
ss
leave
dec
int3
inc
sahf
outsl
jmp
mov
add
mov
pop
loopne
cmp
and
cli
mov
jbe
cld
aam
orl
add
call
adc
rcrl
je
jmp
push
xchg
in
aad
cs
jp
dec
mov
fnstcw
or
push
je
push
adc
popa
push
rorb
jle
test
adc
and
jge
data16
pop
dec
dec
call
pop
fbstp
packsswb
adc
mov
and
fdivl
or
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
orl
fs
cmp
mov
out
mov
or
and
pop
mov
add
rorb
lea
inc
roll
or
sub
mov
adc
push
loop
push
and
inc
push
and
rcr
mov
lds
insl
je
mov
mov
xor
jmp
clc
es
and
out
inc
idivb
int3
out
add
addr16
adc
sub
add
and
cmpsl
add
xchg
adc
and
xchg
out
es
xchg
xor
xchg
mov
das
or
mov
roll
xor
outsl
rorl
lea
mov
xor
or
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
or
pop
mov
mov
mov
mov
or
cmp
sub
cmp
pushf
adc
mov
rorl
xchg
add
sti
cltd
cmpl
jb
mov
and
mov
enter
sub
or
cmc
mov
pop
jb
xor
test
sbb
add
popf
pushf
fsubp
loopne
xor
je
xor
sub
popf
jge
sarb
sub
or
js
adc
cld
pop
js
push
jae
lea
ja
cmpb
jne
cmc
push
fidivl
aam
add
pop
sbb
mov
and
pushl
sbb
and
aaa
outsb
inc
daa
daa
pop
js
jle
add
imul
cmp
sbb
pop
push
sub
jle
dec
or
dec
mov
mov
lea
outsb
add
or
add
add
xor
jae
xor
add
inc
sub
dec
and
dec
shr
push
xchg
add
xchg
xchg
pop
sbb
push
adc
add
mov
mov
or
gs
add
and
sahf
popw
cmpsb
pop
push
sbb
adc
sub
out
xor
xor
xor
pushl
adc
add
cmc
sub
cs
inc
mov
shll
dec
and
sub
inc
inc
and
push
push
lods
ss
xor
jne
or
mov
mov
data16
ljmp
movsl
sub
sub
ja
xchg
jb
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
jb,pt
stos
pop
add
xor
push
arpl
orl
aaa
mov
addl
pop
mov
cmc
push
or
je
lea
js
fists
or
shrb
dec
out
inc
cmpl
adc
fmulp
pushf
adc
mov
xor
je
inc
and
data16
dec
add
ret
lret
pop
adc
add
lods
xchg
inc
jae
cmp
scas
jmp
push
je
dec
add
in
mov
push
xor
or
or
and
std
incl
mov
orb
jl
add
add
pop
add
xor
push
loop
add
jg
mov
icebp
sbbb
adc
dec
pop
and
daa
bnd
mov
icebp
mov
cmp
push
cmpb
out
fldt
push
jae
lea
push
sub
push
lods
andl
adc
stos
ret
es
ja
lret
dec
cli
dec
pop
ret
adc
pop
pusha
mov
ret
lods
xchg
cmp
enter
adc
ffreep
imul
jg
out
insb
fdivl
cmpb
xor
fnstenv
inc
jmp
push
xchg
mov
cmp
sub
xor
cmp
add
or
inc
mov
and
movb
or
push
xchg
xchg
cmpsl
cli
fdivs
sub
sub
out
push
sti
test
sbb
sub
aad
mov
insb
neg
inc
popa
jns
call
jnp
flds
push
cmc
dec
in
sbb
outsb
rorl
pop
mov
cmp
imull
sub
mov
xor
int3
mov
loop
jo
nop
push
adc
out
test
inc
pusha
ret
push
mov
lret
and
push
mov
xor
push
cmp
fs
aad
xor
mov
sub
inc
shll
xor
adc
sbb
mov
idivl
add
cld
or
movsl
popa
xlat
jnp
or
jge
pop
mov
pushf
cmp
lds
lret
jmp
jecxz
lahf
mov
cmp
jb
inc
dec
insb
xor
adc
adc
jge
add
jo
or
cmp
sub
push
inc
or
mov
jge
add
es
xor
or
sbb
test
sbbl
adc
icebp
ret
jge
out
std
cmc
imul
orl
push
inc
mov
psubw
imul
out
addr16
cmp
xor
cmpsb
imul
inc
pop
push
imul
xorb
mov
and
arpl
pop
in
or
adc
adc
add
jp
push
adc
stos
jbe
movsl
mov
xchg
std
push
mov
add
fisubl
xchg
pushl
lahf
inc
xor
mov
scas
mov
push
cmp
mov
inc
test
and
test
inc
or
pop
xchg
xor
loopne
pop
sbb
cmpl
sbbb
lock
xchg
cmp
add
or
mov
sbb
xchg
xchg
icebp
jnp
add
lret
into
cli
inc
cmp
xor
jbe
cmp
ret
loop
ret
jg
dec
adc
je
mov
cmp
rclb
adc
jg
xchg
js
fsts
jo
adcl
xchg
mov
push
pusha
es
andb
imul
pop
adc
loope
xchg
jg
test
insb
or
ja
pop
inc
pop
or
sub
test
adc
jno
aas
lret
push
imul
pusha
xor
shrb
mov
adc
rorl
orl
cmp
outsl
insl
das
or
add
or
mov
dec
lret
cli
das
test
push
clc
cmp
test
mov
inc
sbb
inc
mov
and
ja
std
sub
inc
xchg
pop
pop
sbb
push
sbb
push
xchg
mov
in
cmp
push
pop
repnz
mov
jae
in
rclb
lds
sub
and
insl
push
dec
sub
mov
les
mov
and
and
and
test
in
jnp
pop
adc
clc
clc
mov
and
fsubrl
mov
sub
mov
jb
adc
fisubrs
les
ret
add
xchg
add
mov
add
test
adc
test
push
in
fildl
pusha
dec
loope
dec
fdivs
popf
lahf
adc
and
push
xor
sbb
adc
inc
cmp
mov
jo
stos
sbb
fs
mov
cmp
and
aad
push
ficoms
cli
add
or
ja
daa
inc
adcb
sbbb
xor
lcall
adc
cmpl
push
add
mov
adc
add
push
or
enter
cld
or
dec
or
ja
sbb
mov
mul
inc
dec
xor
push
pushf
iret
jl
inc
push
push
mov
push
fbstp
add
sub
jecxz
loope
lods
or
pusha
mov
mov
mov
lods
lar
out
push
jne
nop
cmp
scas
adc
cmp
cmp
rorb
and
jbe
mov
test
push
adc
push
sbb
fmull
jge
imul
aaa
pushf
inc
adc
pop
sbbl
fwait
ret
xor
pushf
andl
out
dec
hlt
sub
fimuls
push
or
pop
mov
test
movzwl
test
loopne
sbb
je
test
xchg
or
add
es
adcb
push
loope
mov
xchg
ficomps
adc
cmc
push
cmpl
adc
pop
sbb
scas
xchg
pop
das
jmp
add
adc
mov
cmp
cmpsl
icebp
adc
xchg
mov
jmp
daa
jo
sub
push
movsl
xorl
push
adc
das
push
fidivs
mov
inc
jb
roll
jmp
leave
and
push
jecxz
loope
mov
ret
stos
sub
js
fistl
rclb
add
sbb
push
push
mov
movsl
and
mov
add
or
mov
mov
mov
stos
int
dec
jmp
ds
jo
push
les
add
notl
mov
in
loop
rclb
out
mov
ss
xchg
in
adc
sub
orb
sub
inc
loopne
mov
out
and
sub
pop
dec
pop
xor
sbb
push
pop
or
hlt
inc
in
stos
or
mov
movsb
pop
ret
jge
push
daa
lea
jge
sub
hlt
sub
aas
or
push
test
nop
cwtl
jle
mov
loopne
sbb
cmp
ud2
rdmsr
ja
loope
lahf
cld
push
adc
cld
js
push
notb
mov
add
sti
add
and
dec
clc
xor
and
pop
lret
jecxz
or
sbb
add
cmp
inc
jbe
jne
mov
mov
sbb
shrl
fs
sbb
popa
pusha
lret
mov
jge
das
mov
les
push
mov
rclb
and
loopne
and
addb
mov
cmp
dec
mov
sarl
mov
cmp
jmp
mov
cmpsl
loope
call
pop
jl
int3
mov
fldl
cmp
into
xor
cmp
sbb
gs
aam
push
testl
sahf
into
dec
add
inc
dec
and
sub
int
fmuls
cmp
aad
mov
xor
xor
sub
push
sub
push
stos
movsl
jg
nop
dec
add
inc
or
mov
enter
dec
push
jg
inc
and
push
cwtl
stc
ja
add
pop
call
je
push
daa
mov
xor
xor
pop
push
dec
jge
sub
adc
icebp
cmp
addb
push
aam
clc
mov
mov
adc
or
das
dec
pop
mov
sub
inc
ficomps
into
jmp
into
out
add
roll
dec
xor
xor
jns
pop
sub
push
cmp
xor
in
and
imulb
xor
add
mov
sub
out
jle
cwtl
jl
mov
leave
xor
jb
xor
sahf
mov
aas
lea
jp
push
inc
xor
mov
fiadds
dec
dec
jns
adc
jne
pop
jo
iret
push
shrb
pop
dec
mov
adcl
adc
shlb
inc
add
jmp
loopne
insb
lea
into
mov
rorl
faddl
mov
and
and
aam
push
inc
mov
adc
mov
or
push
out
jl
movsb
gs
scas
push
and
das
inc
jle
add
aam
aaa
mov
pusha
jbe
outsb
jmp
xorl
and
mov
in
add
push
or
sbb
inc
mov
xchg
add
xchg
sbb
pop
fnstsw
mov
lea
test
popa
rcrb
bswap
sub
inc
jmp
inc
push
add
xor
jo
sub
mov
mov
pushl
cmp
jne
sub
xor
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
pop
xchg
aaa
xor
roll
rorb
iret
add
push
dec
enter
fadd
dec
xchg
inc
scas
push
push
pop
inc
adc
mov
jg
loope
add
je
dec
sbb
ret
lods
pop
loop
and
mov
les
sbb
test
movb
add
in
rcll
jne
andb
ljmp
cmp
sbb
scas
test
jl
and
jne
imul
or
pop
mov
pop
jne
or
jne
aas
push
xchg
mov
and
addl
cmpb
ljmp
cmp
mov
pop
lahf
cmp
sbb
lea
movb
push
add
or
mov
mov
or
xor
push
cld
notb
cmpsl
mov
sub
sub
in
dec
add
xchg
shr
aad
or
push
xchg
push
fs
movsb
inc
mov
xchg
fdivrl
push
inc
xor
sarb
cmp
lret
mov
sub
ds
push
push
fcompl
fiaddl
pop
push
pop
lea
testl
or
pop
les
xor
sbb
cmp
mov
popf
pop
addr16
scas
lcall
insb
inc
fbstp
mov
pop
mov
jg
imul
sbb
imul
mov
rcll
cmp
jl
inc
inc
push
jmp
cmp
adc
insl
cmp
insl
adc
lret
sbb
mov
sub
dec
adcb
das
inc
mov
inc
jle
testl
rcrb
dec
andb
andl
xor
call
sarl
mov
rolb
stos
xor
jne
sub
xchg
out
rcrb
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
pushw
mov
or
cmp
scas
aaa
xor
inc
sarb
andb
jmp
mov
push
mov
adc
sbb
adc
cmp
je
push
add
dec
add
jne
add
mov
adcb
and
test
cmpsl
mov
cmp
mov
jg
add
repnz
cmp
add
cmpl
jnp
push
cmp
push
xor
cli
push
pop
cwtl
fdivrl
jl
sti
inc
mov
mov
mov
or
out
aaa
les
lret
jae
pop
movsb
cltd
adc
push
pop
sbb
or
sbb
in
push
cmc
push
and
sub
mov
pop
xor
rcrl
push
test
jecxz
xor
es
pusha
push
jnp
pop
aaa
jecxz
clc
stc
lds
mov
icebp
dec
loopne
adc
or
mov
jb
mov
mov
shr
xor
mov
push
mov
sahf
jge
mov
pop
dec
dec
or
jmp
inc
or
lea
and
add
es
or
lea
insb
aaa
movsb
mov
fcmovb
inc
sbb
and
sbb
lcall
mov
add
jae
push
or
sbbb
shlb
imul
data16
shll
insb
jo
pusha
shll
js
mov
shrb
pop
sbb
mov
add
adc
push
or
or
dec
jnp
les
shr
inc
mov
xor
pop
scas
sub
jo
add
lea
xor
add
loopne
nop
in
mov
or
movb
sbb
xor
and
rclb
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
or
rclb
push
test
inc
negb
mov
imul
cmp
or
cmp
add
or
push
inc
adc
mov
shrl
cld
jo
fcmovu
sub
cmp
xor
hlt
inc
aam
adc
jmp
xchg
add
push
adcl
sbb
mov
mov
or
lea
add
cmpsb
cli
and
add
repnz
push
sahf
loope
addl
jb
mov
push
cmp
sub
sbb
sbb
adc
es
mov
mov
daa
push
add
lock
out
xor
push
mov
test
or
mov
movsb
jb
mov
sub
and
inc
sub
loopne
sub
add
shl
ret
mov
add
rclb
aam
jl
insl
pusha
and
imul
je
xor
xchg
imull
jne
das
xorl
cld
addl
jl
inc
addr16
jne
orl
clc
jnp
inc
dec
adc
imul
pop
pusha
int
pop
dec
test
aas
jmp
and
xchg
mov
add
das
call
test
sar
cltd
in
cmp
das
add
sti
cmp
sub
sub
sub
add
imul
fcoml
add
mov
stc
push
jne
mov
sub
outsb
sub
mov
inc
icebp
jne
cmp
lds
je
xor
sub
xor
or
push
sbbl
cld
out
cmpsb
imul
lods
mov
or
add
sub
cmp
js
mov
testb
add
or
mov
xchg
sbb
enter
sub
into
dec
aas
icebp
pop
cmp
inc
cmp
sbb
jne
popf
dec
cmp
lock
mov
insl
cmpsl
or
cli
out
fidivrs
pop
dec
adc
add
lods
pop
mov
cmp
cwtl
mov
or
xchg
xchg
dec
push
jle
lods
pop
mov
inc
or
movsb
jo
and
adc
lret
fs
sti
sarb
pop
xor
mov
pop
add
pop
inc
in
cmp
adc
rorb
jp
enter
repnz
jb
sub
mov
mov
dec
aaa
loopne
jb
sbb
lea
push
push
mov
xchg
bound
pushl
and
mov
sbb
fstl
lods
xor
int3
lock
arpl
cmp
testl
xchg
and
adc
lea
or
push
pushf
icebp
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
xor
or
pop
cmp
adc
nop
and
push
icebp
push
xchg
xlat
idivb
je
cmp
je
popf
add
add
xor
or
push
adc
push
mov
fsubl
lea
mov
push
push
hlt
sti
push
sub
inc
and
shrb
jmp
push
jne
inc
xor
movsl
jg
roll
andl
dec
inc
push
outsb
dec
adc
jnp
in
adcb
lock
xchg
xchg
cld
lock
rcl
out
mov
stos
or
push
pop
adc
adc
cmc
jo
add
ja
and
mov
movswl
in
push
mov
imul
lret
add
push
and
mov
cmpsl
loopne
add
ret
push
cmp
cmp
xor
ljmp
flds
pop
pop
sub
add
mov
test
adc
add
or
adc
lret
leave
sbb
add
and
xchg
mov
clc
jle
jae
fisubl
das
jbe
out
jne
adcb
adcl
sbb
sbb
pop
and
sarb
in
insb
push
clc
insl
ljmp
add
mov
inc
xorl
and
popa
movsb
cltd
cs
cmp
xor
leave
je
push
aas
jne
outsb
fsubr
sbb
add
xlat
ss
outsb
cmp
mov
stos
or
fcmovnbe
pusha
pushf
cwtl
xor
mov
clc
outsb
inc
ja
sub
mov
cmp
andl
sbb
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
fidivs
xchg
sbb
xor
cmp
xor
pushfw
fs
in
fcoms
inc
or
jecxz
mov
loope
inc
orl
add
adc
sub
adc
mov
outsl
lds
pop
arpl
sbb
imul
adc
je
fdiv
lods
cmp
mov
bound
ficoms
push
sub
and
cmp
sub
sbb
adcb
repnz
loope
pop
cmpsl
jne
sarb
flds
aaa
lods
sahf
subb
sbb
push
add
dec
pop
xchg
into
in
ret
jge
int3
mov
stos
mov
lret
lods
adc
sbb
enter
sbb
and
rolb
xchg
adc
or
pop
add
nop
addl
and
pop
cmp
dec
pusha
xor
lcall
adc
push
movl
push
add
insb
mov
adc
and
adc
movsb
data16
xchg
sbb
cmp
dec
fsubl
pop
push
cli
sub
xchg
jp
push
jle
xor
test
dec
inc
in
sub
mov
push
push
push
push
mov
ja
adc
fiadds
mov
mov
cmpl
cltd
test
loope
lahf
loop
int
fmuls
aad
push
arpl
sarb
dec
adc
pop
jb
test
add
mov
xor
push
xor
icebp
rcrb
and
and
pop
leave
rcrb
adc
fdivl
cmovge
or
mov
movsl
add
pushf
mov
jl
mov
mov
xor
sbb
and
push
jo
adc
adc
movsb
add
push
jmp
fnstcw
xor
pop
push
orl
push
pop
out
xchg
mov
orl
xchg
in
mov
andb
pop
cmp
cmp
and
shl
test
fdivp
push
stos
flds
pop
fdivp
sub
sub
mov
jne
test
sub
pop
lcall
xor
or
divl
movsl
dec
repz
dec
and
cmc
sbb
adc
jns
jl
repnz
and
cmp
inc
or
or
or
imul
sub
adc
inc
jne
mov
fsubl
xor
pushf
mov
and
lods
mov
and
or
push
ret
mov
fsubl
xchg
jae
or
add
xchg
add
shlb
popf
inc
jg
adc
adcb
pop
lret
sbb
jle
adc
push
je
xchg
fimull
je
mov
xchg
lock
aam
jnp
filds
push
xchg
mov
sbb
mov
push
or
or
dec
outsb
pop
push
and
push
lods
call
aaa
xchg
arpl
push
xchg
pop
cmp
enter
jge
imul
mov
or
imul
and
xchg
add
cmpsl
test
add
add
push
mov
xchg
jo
lahf
xorb
dec
xor
test
and
insb
popf
cli
ss
addl
or
mulb
jbe
pop
out
xchg
int3
call
sub
pushf
adc
cmp
add
push
sbb
push
sbb
cmovne
outsb
mov
sbb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
dec
leave
push
jb
cmp
nop
add
ret
ret
xor
add
fwait
xchg
insb
loope
sarb
ret
xchg
mov
dec
adc
js
fisttps
adc
jle
cli
push
push
push
rcll
dec
rcll
push
sbb
jmp
movb
jp
ljmp
jg
inc
cld
aam
add
dec
pop
nop
and
outsl
lds
sub
adc
popl
jmp
push
pop
push
fdivl
jle
xor
stc
inc
cmc
js
adc
xor
imul
and
push
pop
mov
pop
add
push
cmpb
pushf
dec
fmull
out
dec
push
inc
sub
pop
inc
or
and
push
jmp
jecxz
jae
push
lcall
sub
push
sbb
sbb
popa
pop
sub
mov
jl
inc
inc
lock
andl
adc
adc
push
ret
push
in
in
fs
cmp
mov
add
jae
cmpsb
cmp
or
mov
repnz
jo
push
fimull
hlt
add
scas
inc
xor
add
push
fcoml
fistpll
into
mov
inc
in
nop
jo
or
clc
dec
xchg
cmp
pusha
adc
faddp
test
dec
adc
or
ficoms
push
xor
mov
ds
jl
and
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
cmp
sbb
adc
lret
outsb
sub
mov
or
add
ljmp
nop
or
in
pop
push
add
mov
das
push
sub
or
jle
sub
add
rcr
cs
cmp
jo
imul
ret
fcoms
lock
sbb
mov
push
fdivr
int
or
cmp
jl
loope
xor
xlat
lds
lret
or
adc
jl
inc
dec
dec
insb
loopne
mov
jbe
fisttps
aam
out
addr16
mov
leave
pop
adc
gs
sub
or
pop
mov
sub
or
rolb
xchg
or
test
inc
mov
jo
ds
push
add
inc
push
adc
add
popa
popf
fstl
add
dec
scas
inc
cs
xor
rol
jle
lea
sbb
movsl
push
inc
mov
or
shlb
or
mov
mov
mov
clc
lret
inc
arpl
push
test
rolb
scas
nop
in
or
sbb
icebp
or
or
rorl
stos
push
pusha
and
mov
pop
xlat
mov
data16
cmpsl
cmp
push
xchg
lcall
movl
and
adc
ficompl
dec
sub
adc
xchg
daa
repnz
mov
or
mov
es
mov
insl
dec
fwait
xor
fimuls
push
push
inc
dec
push
aas
push
cwtl
imul
cltd
idivl
push
andb
pop
jne
hlt
jbe
lds
fidivs
in
cwtl
add
jne
lock
int
inc
loopne
outsl
ret
push
push
mov
add
sub
in
or
movsb
fxch
push
mov
push
pop
add
dec
shlb
addr16
xor
mov
addl
aas
movsl
add
in
and
sub
inc
inc
and
rolb
push
cmpsl
or
inc
aaa
adc
popa
movsb
stos
dec
mov
aas
or
sub
jp
imul
pop
clc
xor
fwait
adc
cmp
pop
mov
out
andl
call
xor
pop
sbb
mov
mov
popa
jns
jo
inc
or
sub
hlt
and
dec
sub
inc
sub
lds
push
nop
sbb
sbb
inc
mov
dec
out
xchg
jb
pop
push
or
jae
sbb
sbb
test
loop
xchg
or
fucomi
pop
dec
orl
add
dec
loopne
pop
pusha
push
jge
add
cmp
jg
rolb
mov
mov
add
dec
push
jb
sbb
mov
dec
adc
sbb
in
mov
cmp
cs
cmp
adc
sbb
sub
insb
sahf
pop
cmp
lods
sti
into
add
jg
pop
mov
xor
adcb
push
push
mov
rclb
imulb
addb
pusha
push
pusha
insb
out
add
test
in
jnp
mov
aas
loope
cmp
mov
outsb
add
cmpl
int3
and
add
sti
xchg
movb
pop
inc
dec
dec
cmpsl
scas
jge
xchg
sti
sarb
sub
insb
shr
inc
add
stc
push
mov
dec
adc
adc
and
call
cli
popa
dec
sbb
inc
mov
xchg
pop
cmp
xor
adc
adc
in
popa
inc
dec
std
repz
dec
inc
mov
or
lock
and
dec
cld
mov
mov
es
or
sub
or
push
mov
rclb
arpl
pop
adc
push
lods
les
cld
pop
adc
push
dec
dec
jns
mov
test
or
mov
lret
push
int
les
je
fdivs
call
dec
push
push
icebp
or
pop
mov
xchg
lock
out
arpl
popa
inc
pop
cmpb
pop
js
shll
sub
and
test
pushf
pop
test
jmp
dec
cmpsb
js
and
add
mov
adc
movsl
rol
insb
insb
lds
sub
lods
adc
lds
test
lcall
fdivrs
hlt
test
movb
inc
test
adc
mov
xchg
movsl
xor
je
adc
cmp
arpl
dec
jne
add
mov
mov
cwtl
pop
inc
or
adc
addb
or
add
jmp
push
jne
pop
add
push
and
pop
mov
xchg
mov
loopne
mov
nop
inc
xor
jle
add
xor
ds
cwtl
cmp
jbe
loop
cmpsb
fs
addb
sub
fs
mov
push
jne
repz
or
sbb
sub
jo
cmp
xchg
or
jo
into
je
or
jl
dec
nop
bound
adc
testl
pop
fwait
or
nop
mov
dec
push
or
scas
jb,pn
fiadds
cmp
add
mov
cmovbe
jg
cltd
push
mov
dec
cld
or
xor
sbb
mov
es
dec
pop
sahf
testb
aaa
pop
inc
fbstp
in
lea
pop
add
or
add
fsubl
pop
cwtd
ret
inc
and
inc
pop
ja
sub
mov
mov
dec
pusha
adc
adc
sar
inc
dec
movsb
add
pusha
push
cmp
rolb
mov
push
in
inc
leave
cmc
jnp
mov
arpl
cmc
pop
sub
subb
pop
test
repnz
xchg
adc
into
pop
testl
xchg
aaa
xor
adc
sbb
call
xchg
mov
mov
das
movb
mov
fsubrs
imul
adc
or
cmp
loop
pop
push
fisubrs
jmp
or
jb
add
adc
sub
push
shlb
into
mov
jnp
inc
nop
push
pushf
mov
mov
jl
je
insl
les
lock
fld
jge
mov
push
mov
jle
xor
or
aaa
push
neg
ret
jne
sbb
push
int
fcoml
and
sbb
inc
nop
jne
imul
add
sbb
xchg
pop
pop
mov
jae
push
push
xor
inc
xor
mov
sbbl
sub
pop
mov
lods
push
push
push
or
dec
and
out
push
xor
or
fwait
add
sub
and
lock
dec
int
sbb
daa
bound
imul
outsb
and
sub
jb
testl
xorl
lret
rolb
pop
popa
inc
sub
and
pop
test
push
sub
daa
inc
or
mov
rcll
cmp
push
dec
jnp
ret
push
cwtl
add
lret
mov
loopne
sub
adc
test
adc
cmp
mov
mov
xorb
test
stos
sti
push
rolb
rorb
jnp
sahf
add
in
daa
push
in
or
cmp
add
pop
cmp
cmp
mov
js
or
lea
loop
sbb
fnstcw
push
push
cmp
sbb
add
xchg
add
cld
push
or
je
pop
cmp
inc
shl
adc
adc
fwait
adc
adc
cmpsl
andl
adc
add
inc
pop
xchg
popa
pop
out
push
xchg
jecxz
mov
nop
pop
mov
je
cmpsb
jne
ret
iret
add
jl
mov
cmp
or
in
divb
je
or
je
or
sub
dec
call
das
adc
sbb
cmp
ficoml
push
or
add
add
sbb
sahf
sbbb
pop
jnp
dec
jnp
das
and
jmp
cmp
adc
rclb
adc
sub
adc
add
mov
inc
mov
xchg
jo
push
dec
lock
cli
mov
cmp
call
jmp
lea
test
cld
lds
pushf
stos
inc
mov
adc
add
sbb
or
repz
std
dec
cmp
jmp
and
out
adc
dec
fsubrs
adcb
add
add
inc
push
sub
adc
das
cli
cmp
sbb
je
ret
jle
xchg
sbb
pop
aaa
inc
dec
je
sub
sbb
sub
or
xor
adc
cld
inc
mov
sbb
fstpt
shrl
shl
mov
ret
push
adc
and
int3
pop
fidivrl
movsl
add
insb
adc
stc
xor
pusha
pushf
adc
cmp
push
loopne
test
movl
push
test
jnp
and
dec
jne
cmp
cmp
hlt
jne
push
or
mov
pop
and
fiadds
lds
and
mov
test
pop
fsubl
js
add
xor
out
je
push
xchg
rclb
jmp
cmp
dec
dec
add
mov
jo
push
push
push
or
or
xchg
call
loopne
pop
jo
or
mov
sub
adc
xchg
xchg
je
push
outsl
cmp
or
pusha
lcall
dec
roll
notl
fdivrl
xor
mov
sub
add
sbb
xchg
pop
cmpl
mov
mov
xchg
add
ret
inc
in
push
push
or
mov
ds
jb
inc
leave
push
fs
and
jb
in
shll
adc
cmp
mov
add
out
repz
jge
mov
mov
mov
push
leave
js
lods
call
xor
xor
sub
in
adc
pop
mov
int
push
ret
pop
cmc
xchg
out
cmpsb
fsubrs
fcoms
or
or
jmp
jbe
push
push
or
adc
addb
mov
fdivrs
xor
addb
xchg
xchg
mov
fimuls
mov
mov
inc
test
dec
fs
les
in
xchg
icebp
xor
sub
add
negl
test
dec
inc
sbb
mov
and
cld
lods
or
sbb
fiaddl
ss
mov
mov
test
bound
adc
imul
or
adc
push
cmp
insl
sbb
test
mov
pop
xor
push
movsb
push
iret
pop
fiaddl
jg
sahf
and
or
mov
push
xor
testl
adc
mov
lea
out
inc
loop
js
cmp
stos
jne
mov
or
push
xor
xchg
loopne
repnz
pop
out
xchg
sub
jae
dec
ret
sti
call
icebp
inc
in
divb
or
sbb
inc
or
sbb
pop
stos
inc
pop
mov
jo
or
enter
push
in
sub
sub
mov
test
outsl
in
push
shrl
bound
pusha
dec
sub
dec
leave
outsl
loope
fisubl
adc
inc
movl
pop
mov
orb
mov
outsb
xchg
mov
cmp
loop
dec
lahf
rolb
test
pop
push
add
and
sub
icebp
cmpsl
roll
push
push
loope
inc
pusha
push
xchg
cmp
sbb
or
inc
push
jbe
mov
daa
xchg
sahf
mov
subl
daa
push
mov
dec
shrl
imul
inc
or
fabs
pop
mov
and
xchg
loopne
int3
cmpsl
mov
pop
add
inc
jp
push
sbb
or
call
jle
pop
push
inc
leave
je
in
pop
rcl
add
cmp
fdivrl
es
loopne
mov
jo
cmpsl
ret
xchg
push
sub
dec
sahf
lcall
repz
inc
xor
push
outsb
int
xor
aaa
divps
jo
aaa
in
mov
inc
push
dec
cmp
hlt
cld
inc
bound
or
cmpsl
or
mov
mov
adc
adc
mov
repnz
pop
or
or
or
fwait
push
sbb
mov
cmp
scas
add
mov
or
xchg
add
push
mov
sbb
mov
enter
xchg
mov
mov
adcl
or
arpl
adc
test
push
add
push
sub
adc
out
test
inc
or
push
and
mov
popa
sub
popa
daa
cmpsb
mov
adc
inc
or
jne
cmpsl
insb
adc
xchg
pop
int3
xchg
xchg
shrb
enter
je
ds
clc
leave
sub
inc
cmpps
pop
scas
mov
ret
or
test
sbb
cmp
inc
push
ret
xor
fisubs
mov
jnp
into
fcomi
sub
pop
or
ss
cwtl
dec
das
mov
cmp
mov
xor
enter
jne
xor
add
push
in
push
cmp
and
push
dec
adcl
call
test
nop
adc
jp
cmp
xchg
inc
cmc
jns
adc
jge
lock
cmp
cmp
or
sub
sbb
xchg
inc
das
push
sbb
pop
or
pushf
std
and
adc
iret
js
les
add
aad
and
pop
enter
adc
call
push
xor
mov
and
cmp
cmpsb
pop
add
in
xor
xchg
mov
adc
lods
sub
inc
and
fistl
and
notb
add
pop
jno
sub
inc
clc
inc
movsb
into
jle
push
jecxz
lahf
add
pop
lret
in
lcall
fs
adc
sahf
rcrb
sbb
test
sbb
test
sub
roll
pop
jb
nop
push
sub
add
gs
push
fs
mov
outsl
mov
push
push
mov
xor
adc
sub
xor
sub
and
sub
adcl
out
xchg
lods
das
mov
fsubrs
fmuls
pop
lds
out
pop
out
dec
mov
cs
in
sbb
in
cmp
push
pop
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
sbb
jg
cmp
adc
pop
gs
insb
out
pusha
xchg
lock
add
sbb
adc
jae
iret
outsl
dec
and
lock
dec
add
mov
push
repnz
pusha
je
rolb
pop
add
data16
je
cmp
je
ljmp
aad
adc
mov
in
dec
mov
mov
add
dec
adc
push
or
sti
and
inc
in
inc
shll
popa
hlt
das
mov
in
dec
dec
push
repnz
pop
je
add
outsb
xchg
stos
je
cmp
cmpb
sbb
cli
fsubl
data16
xchg
or
jecxz
into
fsubs
cld
lods
inc
cmpsl
push
insl
mov
add
andb
mov
leave
inc
push
jo
push
add
add
outsb
jmp
cmp
pop
adc
adc
outsl
cmp
imulb
mov
push
data16
push
pop
mov
mov
inc
mov
pushf
cld
inc
adc
and
jo
mov
or
cld
insb
fs
cmp
std
out
jl
pop
nop
add
cmc
adc
nop
lret
and
pop
and
mov
mov
adc
andl
push
arpl
fucom
adc
or
fcoms
dec
or
je
adc
mov
scas
sbb
jge
push
xchg
out
push
pusha
add
and
add
and
adc
pushf
sbb
jmp
mov
sub
sub
pop
add
lea
xchg
movsb
loope
xchg
aaa
or
js
rcll
jle
adc
sub
jae
andl
or
movsb
cmp
xor
and
and
cld
and
push
jg
pop
cmp
xchg
jg
xor
add
xor
sbb
ret
lret
nop
add
fs
and
insl
push
dec
andl
ss
les
enter
sub
add
lahf
out
cmp
jb
in
push
daa
jae
sti
je
neg
and
push
push
adc
dec
push
xchg
push
mov
mov
dec
negb
dec
clc
call
stos
inc
pop
add
jmp
sbbl
js
fsts
dec
or
adc
or
mov
repz
ret
movsl
test
pop
dec
adc
sub
push
addb
sbb
cmp
aas
fsubl
cltd
push
sbb
mov
sub
jb
psubsb
adc
push
xchg
cmp
fistps
jl
and
cld
or
sbb
cmpsl
lea
xchg
sbb
fmull
loopne
cmp
adc
fnstenv
and
xor
fwait
dec
je
cltd
xor
addr16
into
das
xor
mov
mov
jp
in
pop
lcall
in
mov
in
and
jge
rcrl
testb
and
or
or
dec
movb
ficompl
pusha
mov
rol
xor
adcl
sub
mov
fld
incl
jne
cmc
push
mov
pop
xor
loope
imul
cmc
cmp
push
sbb
popf
add
sub
xchg
mov
mov
sbb
add
adc
add
mov
int3
sbb
jne
xchg
push
rolb
pop
jge
pop
adc
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
sbbb
pop
clc
inc
mov
rcrb
scas
outsl
cmp
mov
out
or
add
mov
scas
shl
pop
push
lock
lock
dec
xlat
sbb
rcl
or
lret
cmp
push
mov
rolb
adcb
mov
push
xchg
and
add
loop
push
leave
arpl
push
cmp
call
add
shlb
mov
xlat
lahf
adc
jl
scas
gs
lcall
push
shlb
push
mov
add
cmp
jne
sbb
ja
mov
clc
or
add
push
scas
mov
add
cmpsl
dec
jmp
sbb
test
or
push
push
mov
arpl
xchg
lds
push
inc
scas
orb
or
cmp
xor
sub
call
jg
js
dec
sub
push
and
or
jmp
outsb
je
xchg
repz
lcall
mov
and
jge
loope
out
enter
je
lods
test
out
aam
adc
xchg
adc
xchg
cmp
les
mov
pop
push
shrb
ss
xor
pop
jo
cmpsl
add
or
jbe
clc
sub
jge
adc
jo
or
sub
pop
mov
enter
das
fcoml
mov
dec
es
sti
call
loop
mov
lds
and
cmpsl
cmc
and
imul
ja
jg
mov
movsb
xorb
adc
jle
or
adc
sub
orl
sbb
jp
add
lock
ret
xor
or
es
rorl
repz
push
fstpl
add
mov
cmp
jbe
shll
nop
pop
xor
leave
push
xor
nop
pop
or
and
add
xchg
fnstenv
lods
cmpb
sbb
add
mov
add
adc
mov
add
dec
dec
dec
pop
lods
sbb
sar
adc
popa
leave
xchg
nop
mov
nop
mov
orb
push
or
imul
sbb
push
dec
stc
add
test
push
call
insl
dec
sub
jo
add
mov
inc
lahf
mov
push
cmp
push
pop
sub
and
or
gs
jp
test
mov
shlb
lock
sub
sarb
shlb
repnz
pusha
test
loop
inc
jne
fildl
fs
mov
push
aad
repz
lock
test
push
shl
inc
adc
inc
mov
aas
ja
push
cld
adc
mov
push
adc
add
mov
adc
add
out
lock
fwait
mov
jne
andl
nop
inc
and
test
mov
sbb
jnp
shr
imul
sub
jnp
or
lahf
cld
je
nop
out
xor
jbe
jb
pop
xor
sbb
mov
insb
sbb
sbb
or
and
xchg
repnz
jle
cld
push
push
fsubrl
fwait
sub
sbb
icebp
push
sub
shlb
iret
loopne
push
pop
ds
push
cmp
lea
scas
push
push
loopne
dec
add
mov
in
mov
rol
push
repnz
popf
stos
add
add
mov
mov
ficoms
icebp
jo
and
dec
dec
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
mov
shll
negl
mov
in
jmp
sbb
push
add
add
or
inc
jecxz
aam
leave
sbb
xor
jb
mov
arpl
stos
xor
imul
push
dec
stos
rcrb
imul
push
in
inc
rorb
and
inc
testl
inc
shlb
dec
add
and
cmpl
rcrb
sub
xchg
mov
sbb
sbb
call
fcoml
lods
test
stc
dec
inc
arpl
stc
jl
out
and
mov
and
dec
add
push
lds
daa
or
push
adc
scas
pusha
push
imul
push
ret
cmp
sub
aaa
test
add
mov
jl
fwait
dec
insb
add
push
pop
ret
lret
ret
lret
push
test
aaa
mov
or
jns
sbb
add
test
or
add
cmpb
push
mov
xor
sahf
ret
ss
pushl
and
add
jp
xchg
xor
out
aad
cmp
test
push
hlt
test
cmp
jecxz
into
les
icebp
push
cmp
jp
roll
dec
inc
or
lea
cld
push
imul
mov
or
or
lock
sbb
or
sbb
or
pop
js
mov
adc
pop
sbb
hlt
adc
int3
sbb
sub
or
imul
mov
or
xchg
aam
adc
ljmp
stos
rcrl
stos
jl
push
clc
testb
ffree
xor
jge
xchg
pop
fists
call
clc
notl
test
pop
jbe
insb
in
inc
pop
add
mov
inc
and
lea
test
mov
push
ljmp
imul
je
inc
or
xchg
icebp
jbe
adc
cmp
das
rcll
leave
nop
sbb
cmp
adc
pusha
lds
or
jno
shlb
sbbl
popa
inc
xor
lock
cmpb
xchg
aaa
das
cltd
push
add
inc
push
inc
inc
sti
jl
test
jg
cmp
jg
sahf
pop
mov
or
ret
mov
push
cltd
pop
daa
sbb
ret
mov
aas
clc
fistps
mov
push
add
dec
add
jmp
add
rcl
aaa
inc
sub
push
imul
dec
popa
jbe
out
adc
push
es
xor
and
add
icebp
mov
xchg
insl
addr16
mov
movsb
jge
sbb
shlb
push
fdiv
or
jns
pop
sub
xor
xor
cmp
cmpsb
mov
sub
inc
dec
fs
mov
push
data16
and
ret
push
sti
jecxz
push
mov
or
movl
pop
jg
or
inc
add
cmpl
ror
sub
cltd
mov
mov
js
mov
decl
jno
jne
pop
shll
add
bound
dec
outsl
adc
movsb
dec
xor
pushf
push
mov
in
pop
xchg
andb
popf
push
cmp
scas
insl
cltd
and
push
mov
and
cwtl
enter
sarl
push
pop
jp
enter
jmp
cmp
push
fcmovb
cmpb
ss
sbb
lock
test
popf
andb
cmp
and
or
push
mov
push
in
jo
das
push
lahf
add
call
mov
outsb
out
xchg
pushf
mov
mov
inc
and
lods
pop
test
and
xchg
mov
xchg
cmc
or
cmp
push
mov
push
mov
xchg
add
loope
ffree
lods
inc
pusha
mov
out
xor
inc
mov
dec
sub
and
mov
xchg
out
test
jge
je
pop
cmp
inc
jl
popf
sub
out
pop
sub
push
cmp
or
aaa
mov
clc
cmpl
rep
add
xor
popf
mov
pop
or
dec
and
add
insl
jmp
sub
jae
sbb
inc
pushf
pop
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
pop
or
mov
push
mov
mov
push
push
mov
push
imul
mov
pop
xchg
adc
inc
xor
push
adc
xorl
adc
pop
popa
or
addb
xor
mov
mov
imulb
cmpb
or
data16
xchg
lahf
push
xor
push
test
sub
test
scas
jno
xchg
adc
xchg
xchg
mov
dec
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
pop
rcrb
and
and
sbb
jbe
jle
lcall
hlt
lock
xchg
cltd
test
inc
mov
push
or
sbb
dec
push
push
shrl
push
test
loope
mov
xor
pop
cs
adc
ljmp
add
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
mov
add
icebp
addl
roll
inc
push
add
cmp
xor
cmp
jne
lcall
adc
lea
push
inc
scas
push
loope
fadds
adc
inc
and
loopne
rcl
cmp
dec
xchg
lret
adc
pop
sbb
test
adc
lods
add
dec
nop
addr16
xlat
cmpsl
sub
add
add
clc
adc
jbe
sbb
fisubrs
call
xchg
add
psrad
sbbb
mov
mov
mov
add
dec
rorl
and
out
test
rclb
test
pusha
or
push
sldt
lahf
or
xor
dec
adc
mov
inc
cmp
xorb
test
xor
add
or
push
push
ljmp
sbb
rol
add
popf
addb
or
add
and
cmp
cmpsb
add
test
int
jo
and
sub
or
mov
add
xchg
sbb
push
movb
xlat
jb
xchg
add
push
or
imul
ret
sub
rol
insl
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
andl
cmp
mov
and
jg
cli
clc
pusha
inc
popf
cs
ret
adc
push
add
xor
jmp
cmp
int
mov
aad
and
das
lret
push
ret
ljmpw
mov
push
push
mov
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
fistpl
or
jbe
mov
sbb
iret
jne
or
es
add
icebp
push
xchg
cmp
jge
add
enter
or
xchg
xchg
adc
mov
aaa
test
inc
jmp
stos
push
mov
jo
loope
stc
jne
sub
outsb
sar
ror
les
pop
jp
cmp
shll
adc
mov
xor
lret
pusha
iret
jmp
xchg
jmp
dec
hlt
jae
adcb
mov
jg
sub
ret
movsb
stos
in
adc
icebp
lret
add
jnp
pop
adc
popa
loop
shlb
inc
inc
clc
add
push
inc
mov
les
inc
sub
jb
daa
jmp
adc
and
data16
pop
add
jecxz
mov
std
nop
mov
sub
push
sub
sbb
xorb
loopne
jae
add
adc
add
dec
sti
xchg
insl
push
xorb
mov
pop
enter
pop
enter
adc
cmp
push
and
mov
xchg
add
and
sbb
sbb
push
ds
js
mov
adc
daa
or
cmp
and
cmp
cmp
add
dec
and
ftst
nop
inc
or
mov
outsb
imul
adc
push
jb
push
or
or
insb
bound
xchg
insl
lahf
sbb
cmp
jl
and
imul
jb
insb
cmp
push
adc
popa
movsl
xchg
sbb
pop
jecxz
cld
or
pop
arpl
pusha
loop
mov
mov
cmpsl
jne
outsl
inc
jbe
inc
xor
dec
pushf
je
and
cmp
or
outsb
dec
pop
sub
jbe
pop
rclb
shlb
lret
mov
gs
sbb
leave
nop
js
inc
adc
roll
loopne
jmp
inc
adc
cmp
push
inc
aas
and
lahf
sbbb
and
jb
sbb
and
and
sbb
sbb
cmp
jg
jb
sbb
sub
sbb
sbbb
movsb
sbbb
sub
xchg
mov
cs
or
xorb
cmpsb
mov
in
pop
cmp
inc
push
std
insb
leave
push
jne
cmp
jmp
mov
mov
shrb
lea
and
leave
in
into
cmp
cld
or
std
push
jae
mov
adc
pop
add
sti
fisubrs
or
sbb
jbe
shl
adc
sbb
sbb
xchg
scas
test
and
push
push
loope
sub
jne
hlt
nop
xor
adc
adc
mov
jne
arpl
cmp
mov
popa
je
push
fsubr
mov
subl
adc
outsb
cmp
dec
sub
arpl
mov
xchg
mov
sbb
lds
dec
fldl
or
mov
in
loop
fimuls
roll
enter
ret
mov
shr
aam
js
mov
push
mov
test
sbb
jo
pop
and
icebp
jae
stos
pop
hlt
mov
jb
mov
add
fs
ja
push
mov
or
pop
push
cmp
subl
movb
mov
loopne
cmp
mov
pop
add
inc
or
insb
add
mov
adcl
pop
lock
mov
push
addl
xchg
ljmp
inc
call
push
push
pusha
pop
leave
loopne
adc
inc
jbe
cmp
sbb
fs
pushf
sub
movsl
iret
push
out
jecxz
stc
lock
adc
add
and
out
pushf
xchg
add
jno
loope
es
out
pop
or
adc
insl
push
clc
and
in
sbb
cmp
push
or
pop
or
loopne
lcall
es
adc
and
fisttpl
add
je
xchg
and
jmp
cmp
lret
jl
push
cmp
popf
jmp
inc
push
je
sub
mov
xor
adc
out
lret
push
lret
sar
mov
mov
or
js
test
push
pop
pop
cmp
pop
aas
pop
sbb
add
sbb
xchg
je
inc
lahf
sub
adc
add
jne
test
mov
add
loop
movl
mov
mov
add
fmul
sub
test
mov
or
mov
and
pop
lock
movsb
pusha
or
add
mov
cmp
mov
push
pop
inc
jp
inc
xorl
xor
sub
inc
push
add
sub
pop
lock
rolb
jns,pt
jecxz
cld
nop
aam
arpl
fwait
popf
cmp
push
in
cmc
call
jg
dec
and
inc
or
loopne
outsb
adc
lea
push
mov
cmp
mov
push
rcll
rclb
jae
sbb
shlb
les
aam
mov
jmp
jl
jo
out
jnp
dec
push
xor
and
imul
in
sarb
je
cmc
adc
fadds
xchg
xorb
stc
stos
xlat
aad
fistl
inc
and
js
mov
test
pusha
adc
push
push
dec
sbb
ljmp
inc
adc
lcall
push
xorl
filds
mov
adc
mov
dec
adc
jbe
jmp
lahf
mov
mov
test
sub
dec
orb
inc
mov
insb
ja
sbb
and
pop
test
push
adcb
mov
push
add
jo
mov
mov
popaw
inc
cmpsl
loopne
ret
int
aaa
add
adc
sub
movb
pop
or
dec
loope
scas
insl
mov
std
adcl
push
aaa
rclb
cmp
loopne
lahf
pop
add
sub
sub
pusha
idiv
jge
mov
pop
push
push
or
in
fcoms
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
adc
popa
sub
je
jle
call
push
push
nop
mov
aas
push
ss
push
es
fwait
add
call
mov
jb
icebp
lret
inc
scas
clc
or
and
shl
outsb
adcb
shll
nop
out
enter
lods
add
mov
stc
jae
add
dec
mov
ret
pushf
and
decl
xor
and
xchg
xchg
mov
incl
or
lock
pop
xor
pushf
push
in
mov
ret
or
and
pop
xor
push
push
sbb
loopne
shll
pushf
and
xor
add
pop
ss
mov
jmp
sarb
cmp
xor
rcrb
and
push
add
imul
push
insl
push
push
lea
test
jo
push
mov
imul
adc
mov
sbb
mov
add
popa
int3
sub
add
jnp
and
rolb
or
and
or
icebp
dec
pop
xchg
cmp
or
test
cmp
and
bound
loope
xchg
inc
pop
xchg
aam
sbb
xor
pusha
push
clc
jo
daa
push
lret
ret
out
loope
movsl
cmpsb
sbb
add
mov
lods
mov
sbb
inc
sbb
jno
push
stos
mov
ljmp
push
dec
in
xor
mov
mov
mov
call
dec
loopne
aam
cmpsl
xor
jbe
push
sub
inc
pop
push
mov
push
outsl
mov
and
cli
mov
push
add
push
push
pop
mov
xor
inc
pop
xchg
xorl
sbb
add
call
les
xchg
cmpl
ror
xchg
adc
and
shrb
xor
push
pusha
xor
xchg
lahf
and
inc
dec
pop
jne
inc
scas
leave
adc
add
push
fbld
lahf
and
push
inc
or
push
push
mov
mov
and
nop
subb
mov
mov
jmp
dec
mov
pushf
ss
in
repz
shlb
bound
adc
add
adc
pop
sbb
pushf
test
xor
and
addr16
pop
repz
test
and
push
adc
push
rorl
pushl
cmc
or
pop
mov
and
inc
test
dec
clc
add
js
xchg
push
pop
xor
pop
or
adc
sbb
movsb
ljmp
xchg
ss
int
or
rclb
push
push
and
hlt
inc
mov
pop
shll
push
cltd
inc
add
mov
and
add
jno
in
pop
dec
mov
add
ss
add
adc
stc
outsb
arpl
cmpsb
jecxz
sbb
xlat
pop
cmp
orb
mov
push
mov
cmp
pop
ss
mov
test
call
add
js
push
xor
enter
sub
jmp
in
pop
adc
mov
and
sub
mov
scas
incb
pop
xor
xor
ljmp
push
push
sub
push
loope
xor
or
jno
movsb
stos
loope
dec
pop
mov
testb
in
sbbb
cmp
js
push
or
dec
in
pop
or
call
inc
jns
bound
popf
mov
dec
lret
jmp
adc
imull
cmpl
test
adc
push
icebp
nop
push
push
rolb
popa
cmp
nop
push
push
aad
and
xor
movsb
hlt
loopne
pusha
aam
or
or
sbb
add
add
mov
enter
or
rolb
jo
mov
and
int
popf
pop
insb
inc
imul
movaps
push
mov
aad
das
add
pop
inc
clc
mov
adc
mov
and
xchg
inc
pushf
sbbl
jo
rcrb
push
push
pop
lea
jmp
mov
nop
xchg
cwtl
pushf
add
adc
lahf
sbb
pusha
cld
sbb
lea
sub
push
stos
sub
test
pop
mov
fmul
rolb
mov
or
mov
pop
inc
mov
mov
into
sbbb
movsb
inc
fimuls
mov
movsb
rcrb
push
mov
cmp
int
jmp
movsb
lods
jmp
or
sbb
cmp
in
and
mov
lea
mov
cmc
cmp
dec
xorb
jle
clc
jnp
sbb
mov
push
loopne
cs
dec
or
fmulp
push
mov
mov
push
mov
sbb
push
push
lret
mov
mov
ljmp
scas
outsl
jecxz
popa
inc
push
pop
mov
cli
mov
in
mov
mov
dec
add
nop
xchg
dec
sub
mov
xor
or
cmp
mov
sub
mov
xchg
mov
sti
pop
inc
sbb
addr16
bsr
adc
shl
mov
fdivrl
lock
inc
push
pop
add
mov
mov
cmp
ss
adc
loopne
or
and
mov
stos
cmp
sub
lods
sub
addl
push
adc
rolb
adc
xor
mov
je
push
stos
add
fcmovnb
int
mov
fwait
dec
fadd
adcl
push
push
jns
outsl
xlat
test
mov
push
push
repz
js
ds
mov
sbb
ds
je
shll
push
lock
push
movsl
ds
adc
jmp
sbb
hlt
and
jle
mov
in
pop
lock
or
icebp
push
sbb
xlat
lods
dec
jne
sub
xlat
adc
aam
mov
or
jo
or
clc
repnz
adc
mov
fnstenv
insb
out
loope
jl
ljmp
add
xchg
jne
cmp
pushf
daa
shlb
mov
divb
mov
fcom
cmp
fabs
or
mov
dec
and
hlt
loope
lahf
cmp
mov
push
lret
push
inc
je
mov
outsb
cwtl
cmp
lock
stos
dec
cmp
cmpl
enter
test
fs
lock
sbb
sbb
pop
pushf
imul
xchg
or
repz
add
xor
xchg
push
add
nop
sub
lret
sub
fwait
pop
push
mov
push
imul
pop
push
mov
std
push
sub
dec
push
adc
inc
inc
or
lock
fisttpll
test
stos
push
cwtl
pop
cmp
xor
push
pop
dec
in
push
hlt
add
sub
lock
dec
cmpsb
jo
jae
inc
insl
lea
cmp
cmpb
adc
mov
add
sbb
or
or
out
cmpl
sbb
test
cli
sbb
push
sbb
jbe
push
dec
jecxz
sbb
sti
lea
add
sbb
imul
aam
test
or
mov
dec
add
xor
mov
sbb
mov
jnp
push
ret
xlat
cmpsb
xor
lock
pop
pop
sub
leave
cmp
push
lahf
call
dec
and
das
mov
jae
fiaddl
adc
fiadds
and
fidivrl
jno
jo
sub
sub
push
in
inc
cmp
leave
imul
test
inc
fdiv
cmpb
fsubrs
ret
popa
push
outsb
add
lods
sti
cmp
push
adcb
push
sub
shrb
fsubs
fdivl
push
lods
adc
push
pop
sub
mov
loopne
add
les
loope
lahf
filds
or
pusha
add
inc
clc
pop
lock
rolb
push
mov
and
adc
or
je
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
cmp
jb
popf
loopne
sbb
int3
lret
cmpl
ss
repnz
dec
mov
push
loop
and
ja
jns
lock
adc
mov
push
mov
mov
mov
adc
mov
or
rcll
pop
inc
cmp
movsb
test
popf
dec
pop
jp
cmpsl
ss
mov
lods
pusha
add
or
sub
lock
cmp
sbb
incb
mov
sahf
pop
sbb
fwait
pop
int3
xchg
xchg
cmpsb
or
push
xchg
xchg
jns
cmpsl
cmp
pop
xchg
pop
push
or
hlt
mov
xorb
push
enter
das
xor
cmp
pop
std
pusha
fdivl
outsb
jp
je
add
adc
je
data16
test
xchg
incb
mov
push
sarl
ret
jg
add
adc
lret
jbe
fnstsw
add
push
jge
push
jo
repz
jle
xchg
push
cmp
sbb
jp
outsb
cmp
pop
ja
mov
sbb
xchg
sbb
cmp
in
sub
je
push
cmpsb
and
sahf
rorb
mov
mov
or
sbb
sbb
jns
nop
sub
data16
jmp
inc
jo
pop
pop
jns
add
addr16
and
add
mov
lock
fcmove
add
addr16
mov
and
movsl
push
or
jno
mov
aam
sub
scas
mov
or
sti
jl
lods
lret
jmp
pop
cmpsb
push
push
lods
push
leave
fs
add
xchg
push
mov
mov
mov
fwait
jb
rcr
test
mov
jle
mov
mov
or
sarb
and
sub
sbb
pop
ret
mov
push
rcrb
daa
mov
mov
or
add
test
incb
push
sbb
insb
testl
adc
pusha
push
test
scas
push
fisubrs
mov
mov
and
jl
pop
ret
jge
add
loopne
adc
add
inc
movsl
xor
stos
add
lret
in
jns
pop
dec
and
push
add
scas
push
fcomp
adc
mov
in
and
test
dec
xchg
testb
jbe
dec
mov
and
adc
and
dec
mov
add
jns
sbb
or
adc
push
mov
xchg
xchg
lds
adc
mov
push
testl
jo
and
xchg
push
into
je
pusha
in
scas
xchg
out
rcrl
dec
sub
mov
mov
nop
cltd
movd
test
push
push
test
lods
lea
test
addb
addr16
pop
fnstcw
jle
inc
inc
lcall
and
pop
add
mov
mov
and
adc
xor
cmc
flds
and
mov
pusha
popa
mov
or
and
test
js
rcrb
lea
push
xchg
insb
mov
mov
jg
and
dec
adc
push
adc
add
jo
fwait
cmp
repnz
mov
add
xor
pop
xchg
stos
nop
imul
add
push
cmpsl
fldt
inc
aas
mov
test
loopne
dec
push
popa
jne
mov
cmp
pop
pop
jl
push
jno
gs
hlt
push
into
dec
cmc
or
popa
imul
xchg
outsb
and
xchg
xlat
mov
imul
je
mov
insb
call
mov
ss
jno
inc
inc
adc
je
scas
mov
cmp
inc
testb
xchg
and
push
fwait
shrb
rorl
xor
pop
dec
add
mov
jge
and
inc
push
stos
push
add
cmp
pop
mov
inc
out
xor
add
cmp
daa
add
xchg
mov
out
push
xor
push
call
inc
in
cmp
imul
pop
adc
add
inc
fldt
xor
jle
add
jae
cmc
mov
adc
pop
inc
or
push
pusha
and
cmp
xor
mov
testl
fdivrs
lea
lds
add
cmp
dec
xor
loop
add
shr
add
ficoms
sbb
adc
and
loope
rorb
pushl
pop
jl
ret
shr
cmp
jbe
add
jmp
add
pushf
inc
dec
or
test
ret
and
dec
loop
inc
dec
loopne
jg
loopne
jl
mov
addb
sub
sub
adc
mov
mov
popf
lcall
dec
sub
push
xor
mov
enter
dec
or
or
call
sarb
mov
add
xchg
test
and
rorl
das
fsts
mov
gs
rcll
or
or
mov
loop
and
aaa
cmpsb
mov
mov
test
fstl
cltd
movsl
mov
push
mov
jl
dec
fcomps
mov
loopne
fcomps
xorl
popf
addb
add
dec
inc
adc
mov
adcl
jo
fldenv
fdiv
xor
daa
push
or
pop
aaa
xor
jb
push
push
push
xor
push
shll
out
mov
aad
nop
xchg
loope
arpl
or
adc
outsb
cmp
jg
and
stos
jl
cmp
je
pop
negl
xor
mov
or
push
shrb
rclb
das
sbb
scas
cmpb
mov
and
sbb
push
add
adc
xchg
mov
cmp
insb
ret
pop
xchg
and
or
jno
push
imul
mov
scas
dec
xchg
pop
push
call
mov
bound
sahf
inc
les
repnz
in
orb
pop
mov
popl
ds
add
mov
repz
push
out
sub
lea
imull
adc
cwtl
pop
mov
mov
and
push
push
add
fsts
fnsave
push
or
shl
loope
cltd
jmp
insl
add
add
adc
adc
or
leave
or
add
loope
inc
mov
sarb
cmp
int3
xchg
xor
insb
cs
mov
pusha
je
pushf
push
push
sub
int3
xchg
add
add
sbbl
dec
enter
lret
out
mov
sbb
in
lds
adc
jmp
shlb
mov
aam
mov
lods
xchg
cmpsl
enter
adc
dec
sub
xor
outsl
test
mov
push
repz
push
jl
dec
jae
fcoms
mov
fcmovnb
inc
jnp
in
mov
test
in
inc
imul
lods
xchg
mov
push
fcomps
in
test
pop
push
push
inc
mov
adc
ss
repnz
adc
mov
push
lahf
fistpll
sbb
popa
popa
shlb
mov
add
inc
fsubrs
aam
adc
sbb
por
aaa
pop
and
jmp
movsb
shll
fldl
add
add
ja
lods
pop
sub
jo
xchg
movups
pop
mov
adc
push
test
sub
and
ret
jbe
push
push
xor
sub
mov
es
push
pop
inc
push
adcb
or
cmp
pop
insb
adc
sbb
pushaw
cwtl
es
dec
pop
outsl
cmp
fcmovnb
sub
incb
adc
add
mov
cmp
lahf
jb
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
roll
mov
mov
outsb
or
test
mov
inc
and
fistl
inc
xor
mov
add
xchg
leave
cmp
insl
popf
mov
add
insl
cli
push
insb
and
jp
sbb
and
adc
mov
icebp
mov
pop
sbb
inc
mov
lret
neg
inc
or
xchg
or
jnp
arpl
pop
sbb
data16
lock
push
cmp
in
or
stos
jo
dec
push
mov
sub
imul
pop
jns
inc
jecxz
cmp
fwait
mov
pop
divb
pop
cmp
sbb
add
mov
scas
sti
testl
call
aam
push
cmpb
xor
pop
loope
rclb
push
cltd
xor
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shlb
pop
je
inc
pop
loopne
fmull
add
mov
add
or
cmpps
ret
fstl
mov
les
addr16
pop
pop
or
xchg
jo
mov
pop
shrl
mov
mov
popa
jl
jbe
jl
or
test
sahf
xchg
pop
sahf
ret
rep
mov
dec
pop
mov
sub
xchg
adc
lods
addr16
inc
les
call
sbb
dec
sbbl
rolb
push
add
loop
push
xchg
and
jl
ret
jle
mulps
adc
aaa
loopne
movsb
push
call
insb
cli
dec
xchg
jno
jle
push
pop
xchg
mov
cmpsl
push
cmpsl
cmp
dec
jbe
push
cmp
mov
push
mov
mov
jno
ret
addr16
inc
pop
cmp
stos
cmp
out
xor
pop
pusha
pusha
loopne
leave
lret
and
add
xor
inc
jb
jmp
push
bound
sbb
imul
mov
arpl
imul
inc
adc
inc
xor
imul
mov
cltd
repnz
pop
adc
add
dec
and
cltd
jno
hlt
xor
pushf
les
mov
rcrl
mov
insl
mov
or
inc
imul
dec
push
or
and
inc
inc
cmp
addb
fs
stos
icebp
test
scas
add
movsb
adc
push
add
lods
adc
pop
pop
mov
cmp
or
mov
cwtl
fwait
mov
test
mov
add
test
dec
lahf
nop
xor
rcl
insb
xlat
add
nop
nop
sub
lods
mov
les
or
pop
pop
pop
push
shlb
int3
push
shrb
jne
fcompl
add
add
sub
push
je
pushf
and
mov
subb
dec
xorb
insb
xor
pop
roll
testb
loop
rorb
mov
push
push
xor
test
mov
push
add
lods
adc
pop
mov
mov
lods
inc
pushf
sub
sub
test
push
mov
xchg
jl
push
lcall
in
andl
xchg
dec
enter
test
lds
rcll
icebp
popa
fists
jmp
add
jmp
sub
or
call
sbb
fwait
xor
adc
adc
leave
dec
adc
push
xor
and
mov
lahf
xor
and
jae
sbb
or
jge
jns
and
lods
cli
mov
cmp
jne
push
mov
aad
lock
lcall
sub
mov
xlat
arpl
jmp
push
adc
out
xor
outsl
into
sub
mov
stc
pusha
rolb
fs
sbb
imul
mov
jmp
xor
inc
sub
movsl
addb
push
mov
inc
in
lock
adcl
outsl
and
sarl
aaa
cmp
pop
test
bound
cs
mov
rcrl
mov
add
add
ret
cs
mov
movsl
lret
mov
out
xchg
push
sbb
or
xchg
les
mov
push
pop
lock
inc
shlb
cmpsb
ljmp
mov
adcl
loopne
xchg
mov
loopne
pusha
aaa
sub
js
xlat
daa
pop
aam
lock
test
imul
xchg
pop
gs
in
mov
push
popa
mov
mov
mov
sbb
fsubrl
push
test
add
or
push
popa
or
rclb
cltd
jge
dec
pop
icebp
mov
or
movsb
je
mov
push
loopne
jo
in
pop
shlb
xchg
sbbb
or
ljmp
inc
jno
sub
pop
and
mov
daa
jno
and
aas
sbb
aam
movsb
rorb
dec
push
loop
insl
mov
divw
or
mov
sub
daa
and
xchg
xlat
pop
jns
inc
shll
mov
push
add
push
sub
stos
or
outsb
adc
inc
cmpsl
inc
sub
imul
add
jmp
pop
inc
mov
dec
sub
jno
mov
or
or
push
jle
cli
je
cltd
pop
lret
data16
or
mov
mov
in
inc
add
jns
sub
les
add
addl
dec
fcoml
pusha
adc
cmpsb
pop
cmp
out
fimull
aam
jle
jl
add
aam
bound
jnp
ljmp
adc
cpuid
movsl
mov
fsubrp
inc
or
filds
mov
xchg
push
push
into
sub
adc
push
dec
cli
repz
scas
or
push
jmp
or
pop
push
std
sbb
scas
or
add
jne
mov
jmp
fstpl
ljmp
aam
and
dec
lds
popa
out
lock
rcrl
lds
ja
fnstsw
add
dec
movsl
push
push
movsl
decl
inc
hlt
fstl
dec
fcomp
fnstsw
call
add
inc
clc
pop
fsubr
ret
sti
pop
faddp
andl
sbb
les
push
mov
xchg
jo
cmpsb
push
mov
cs
pop
shl
rol
cmp
dec
xchg
fs
pop
subb
iret
inc
into
adc
and
pushf
add
add
icebp
les
jge
rolb
pop
out
bound
mov
es
or
popf
insl
lods
inc
inc
add
jmp
lret
leave
pop
inc
shl
xor
push
or
or
and
push
mov
add
xchg
dec
bndldx
fmuls
mov
arpl
xchg
out
stos
ss
pushl
dec
jp
stos
cmp
mov
jg
aaa
push
dec
sbb
ret
outsb
test
jl
sub
ja
scas
or
sub
mov
push
mov
pop
popa
or
mov
pop
fnstenv
cld
xor
dec
hlt
jge
and
ret
add
mov
jmp
roll
lock
pop
sub
and
mov
mov
clc
cmp
adc
rorb
pushf
push
dec
jns
dec
leave
xor
mov
test
loope
adc
pop
add
cmp
xor
movsb
aad
adc
sbb
pop
sarl
or
xchg
mov
shrl
into
inc
add
aas
or
add
push
in
jns
mov
mov
movsl
and
jp
outsb
mov
jmp
or
rol
add
bound
mov
jmp
lods
xor
mov
insl
adc
cmp
adc
ja
data16
dec
xchg
and
dec
mov
adc
or
ret
dec
jge
pop
inc
in
xor
jp
popa
imul
decl
inc
adc
mov
mov
mov
push
xchg
pop
int
hlt
add
mov
push
leave
mov
xor
sbb
repnz
pushf
mov
loope
or
add
mov
sub
jle
or
adc
pop
push
sub
xor
fs
mov
adc
lds
or
nop
clc
test
and
addl
or
leave
mov
dec
dec
push
and
dec
pop
stos
xor
xorb
insl
xor
inc
dec
xor
pop
fcoms
rcl
mov
adc
push
shl
sub
pop
aaa
mov
or
loopne
pop
and
shll
add
xchg
je
adc
inc
lea
les
fsubl
ret
sub
jge
dec
or
fldl
dec
sti
mov
mov
bound
pop
mov
xor
ret
push
sub
add
push
mov
dec
adc
cltd
and
insl
bound
arpl
add
dec
add
push
add
lods
cmpsl
lods
lea
sub
pop
xor
dec
dec
mov
in
pop
scas
push
lret
aas
mov
inc
pusha
pushf
rclb
adc
sbb
clc
and
pop
pop
jae
repz
jns
je
pop
and
lock
inc
lock
clc
mov
mov
jge
gs
push
in
push
hlt
lahf
mov
lock
jns
jae
xchg
cmp
loope
sbb
inc
xorb
orl
pushf
lret
add
addl
push
ficoml
sub
jge
pushw
add
ja
jmp
push
sbb
push
xor
outsl
js
add
push
clc
enter
fmul
jecxz
mov
pushf
lret
pop
mov
push
xchg
pop
push
mov
je
and
imul
inc
push
test
push
das
mov
cmp
jnp
sub
sbb
pop
mov
mov
jns
mov
imul
push
inc
xchg
push
pop
add
loopne
incl
rcr
sub
pop
outsl
subb
mov
pop
std
inc
sub
push
inc
mov
push
or
dec
adc
lods
add
inc
js
mov
dec
bound
sbb
mov
repz
pop
das
or
push
cmp
scas
in
xor
loopne
test
dec
pop
dec
push
andl
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
mov
push
mov
rclb
or
loope
stos
js
adc
les
loopne
sbbl
cltd
test
dec
insb
ret
xchg
sti
movsl
rcll
popa
fdivr
cs
add
and
fidivl
adc
mov
push
cmpl
mov
cmpsb
mov
inc
add
mov
xor
iret
test
adc
leave
les
push
jge
mov
scas
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
dec
adcl
push
cmpsb
mov
and
fs
dec
test
push
lret
test
je
loopne
push
hlt
and
adc
test
xor
inc
sub
mov
jns
or
cmp
ljmp
cmp
call
mov
sub
add
sahf
dec
xor
mov
stc
inc
push
mov
mov
fmuls
xor
mov
or
push
push
dec
or
xchg
xchg
inc
movsl
scas
xor
aas
leave
mov
cmp
push
in
cmp
orb
inc
push
shll
xchg
aas
xor
addb
jne
or
or
loop
mov
outsl
pop
fldenv
add
add
push
sbb
andl
xor
idivb
sbb
arpl
add
test
mov
mov
lret
repz
stc
xor
inc
andb
and
xchg
and
bound
loope
mov
rcrb
js
daa
imul
mov
in
roll
fcoms
pop
fsubr
aam
lods
imul
xor
dec
cmp
fistpl
adc
inc
pop
test
mov
pop
inc
sbb
in
js
in
fnstenv
pop
sbb
jbe
pop
sbb
xorb
xchg
sbb
andb
adc
cmp
jne
lcall
or
sub
test
enter
push
add
inc
add
add
xchg
sub
test
add
adc
xchg
std
rcr
cs
test
outsl
add
add
jp
cmp
sbbb
or
loopne
clc
jl
or
dec
xchg
cltd
xchg
sbb
sbb
subb
loopne
rolb
ret
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
testl
sti
sbb
aas
loope
sbb
lcall
inc
add
sbb
lahf
sarb
sahf
add
ds
or
mov
in
sahf
and
cmpsl
push
stc
inc
xor
data16
pop
xchg
push
cmpsl
mov
push
push
sub
stc
cmc
xchg
jb
jb
mov
cld
mov
cmp
adc
jmp
sub
push
jg
sub
jmp
or
or
jecxz
je
xor
call
mov
jmp
xor
movsl
push
push
add
push
hlt
jge
inc
lods
adc
mov
push
and
imul
or
cmc
stos
jne
call
loope
scas
xchg
xchg
mov
sbb
fxch
jle
popa
xchg
sub
or
push
and
fdivrl
sbb
jecxz
icebp
sub
shrl
lahf
roll
roll
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sarl
das
or
mov
shrb
pop
in
scas
push
cmp
rol
pusha
or
rcr
and
cmp
int3
sub
or
sbb
sbb
sahf
cmp
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
mov
das
mov
xor
mov
inc
and
cli
inc
insb
mov
js
jo
sbb
call
push
push
ret
sbb
push
mov
xor
cwtl
dec
pop
cs
hlt
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
xchg
jne
inc
jno
add
mov
cltd
inc
sub
fld
adc
and
jno
adc
stc
dec
test
imul
dec
pop
lea
xchg
mov
adc
push
jl
inc
rolb
dec
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
fbld
aam
mov
insb
loop
xchg
incb
mov
mov
fstpt
and
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
pop
inc
mov
dec
xor
loopne
pop
xchg
xor
lea
adc
pop
cmp
and
lret
inc
pop
add
outsb
sub
cmp
add
add
cmp
inc
inc
dec
repz
les
pop
pop
sub
and
push
outsl
out
lahf
dec
add
pop
sbb
jbe
add
andl
mov
xchg
fmul
lock
xchg
mov
mov
loopne
add
pusha
out
add
out
or
sbb
les
std
jbe
or
add
lods
mov
and
sarb
dec
or
and
leave
add
ss
cmpb
mov
sbb
adc
jns
js
orl
sbb
out
loop
jmp
cmp
push
jp
inc
adc
push
push
scas
xchg
xlat
xor
in
sbb
add
jge
jb
sbb
or
cmp
leave
xchg
lret
cmp
push
popa
dec
iret
into
sbb
scas
xchg
out
adc
push
nop
sub
xchg
inc
or
or
cmp
cmpsl
cwtl
js
loope
aad
add
push
fistps
sbb
and
dec
xor
jbe
mov
lret
loopne
xlat
jo
mov
inc
clc
inc
popf
test
inc
aaa
adc
sub
dec
pop
mov
push
jle
and
xor
sar
add
cmp
or
cmp
lahf
or
dec
adc
push
clc
push
push
flds
iret
jno
sbb
fcompl
sbb
push
push
inc
mov
adc
adc
inc
mov
shll
push
inc
mov
ja
adc
xor
jbe
pushf
xor
aaa
inc
mov
inc
add
sbb
test
push
dec
mov
xor
pop
lock
lea
xchg
xchg
or
and
lcall
sub
inc
dec
pop
js
and
pop
jl
subb
lret
into
xor
outsl
push
push
dec
fdivr
jo
jo
cmp
pop
push
jns
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
xchg
sub
in
jnp
sbb
in
pop
je
push
mov
cmp
enter
gs
loopne
cmp
or
push
xor
xor
or
inc
mov
in
testb
xor
pop
jne
jns
dec
shl
pop
sbb
nop
notb
add
sbb
in
adc
jmp
int
stos
in
loope
mov
outsl
lock
jne
nop
fmuls
into
jl
inc
mov
sub
mov
push
jge
popa
lret
xor
dec
sub
shl
cs
mov
loopne
cmpsb
mov
je
popa
push
sub
push
cmp
mov
sbbl
inc
xor
or
stc
adc
or
sbb
insl
fisubrl
dec
dec
js
add
or
mov
addb
mov
xchg
xchg
cld
adc
je
lahf
inc
loopne
push
aas
add
stos
or
ret
and
sbb
add
dec
mov
dec
mov
push
movsl
dec
xor
dec
adc
rcll
das
inc
add
addr16
add
push
lods
dec
jle
push
mov
mov
jle
daa
mov
adc
push
iret
aas
aad
xchg
leave
out
fdivrp
mov
lahf
adc
pop
mov
test
pushf
out
dec
lret
leave
xor
das
cmpl
movl
iret
push
or
xor
insl
popa
out
xchg
sbb
or
arpl
lods
dec
pusha
shll
adc
inc
add
outsl
shl
enter
or
jbe
loopne
adc
or
aad
mov
push
xor
push
cmp
sub
test
cmp
aas
jne
aam
add
mov
mov
xchg
add
aam
faddl
imul
scas
or
adc
xor
ret
out
or
xor
shlb
aaa
xchg
nop
dec
orb
mov
xor
sbb
and
and
shll
fdiv
je
lock
and
aaa
push
lret
fcomp
dec
jmp
mov
jmp
subb
adc
push
or
push
jmp
cmp
fwait
aad
notl
divl
bound
push
jp
push
sub
or
mov
mov
inc
push
enter
imul
adc
adc
lcall
fsts
loopne
adc
add
ljmp
cmpsb
jl,pt
sub
jmp
mov
das
loop
adc
jmp
or
inc
add
or
loope
push
pusha
in
mov
movsl
xorb
cmp
shlb
nop
cmpsl
rorb
test
mov
cmp
cmpb
sahf
adc
iret
rcr
das
push
and
jmp
jne
aad
data16
jne
mov
mov
ret
jecxz
push
mov
movsl
call
add
xor
jp
mov
pop
dec
scas
in
or
pop
sub
dec
mov
shll
fwait
fs
and
mov
aad
adcb
cmpsl
dec
xor
rorb
or
xor
pop
xchg
lcall
dec
icebp
or
lods
int
or
xor
ss
sti
ss
or
pop
and
idiv
stos
loope
and
add
jp
push
and
and
lea
pop
and
aas
sbbb
sbb
mov
push
jo
insl
add
aas
push
inc
xchg
and
lods
mov
call
lcall
xchg
neg
cmp
adc
mov
xchg
dec
pop
xchg
xchg
add
sub
mov
roll
jp
mov
cmp
aaa
adc
pop
xlat
add
xlat
cmp
push
xchg
xor
stos
loopne
dec
in
inc
mov
mov
pop
or
andl
push
sub
pop
xchg
jmp
mov
push
adc
rorb
sarb
pop
lock
dec
lahf
xchg
mov
in
or
lock
insl
lret
push
jp
or
push
and
inc
popa
jmp
mov
xchg
outsb
inc
pop
lock
jmp
jge
dec
inc
or
add
popa
imul
inc
jle
call
jno
and
insl
sub
stos
insb
popa
into
adc
enter
mov
stc
or
shll
push
jns
jmp
and
adcb
dec
or
sbb
movsl
jg
cmpl
popf
shrb
mov
pop
and
push
imul
pop
add
jl
and
cmpsl
imul
add
leave
add
mov
lret
jb
cmpl
lahf
sub
xchg
repz
jo
and
xorl
ds
icebp
adc
dec
lret
fistps
jmp
inc
lahf
mov
or
xor
stos
add
jg
xchg
cmp
jl
push
push
push
cmp
add
pop
sbb
repnz
arpl
cmp
shll
xor
hlt
lea
cs
stos
cli
fists
push
inc
pop
pop
push
jns
sahf
shll
xchg
rol
dec
in
lahf
add
inc
dec
cltd
jo
mov
hlt
mov
lcall
dec
jnp
or
imul
shrb
or
pop
push
jnp
mov
add
inc
and
pop
push
cmpsl
pushf
push
pop
or
cmp
add
cmp
or
mov
jecxz
xchg
cmp
add
test
mov
inc
mov
mov
rcrl
test
jne
sarl
in
jno
je
jmp
add
nop
push
lret
fsts
mov
xchg
pushf
mov
push
lds
inc
push
pop
lock
aad
mov
and
test
adc
popf
idiv
push
xchg
aas
insl
push
adc
inc
mov
icebp
push
cli
lea
sbb
jp
push
jns
and
mov
or
xlat
cmc
push
inc
adc
mov
push
jle
add
push
mov
fidivl
pop
add
jge
or
mov
repz
or
push
outsl
sub
sbb
lea
jmp
push
pop
xor
add
in
or
add
and
xchg
dec
scas
add
add
add
push
push
pop
leave
and
push
fadds
pop
leave
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
cmp
dec
or
push
or
push
sbb
add
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
xor
jno
or
in
or
or
sbb
inc
cmpsl
adcl
mov
jg
or
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
mov
cmpsb
loopne
mov
orb
pop
scas
fs
scas
push
xchg
cmova
idiv
lock
test
shrl
jae
or
aad
add
rcrl
xchg
adc
mov
xchg
lahf
dec
add
inc
or
stos
or
mov
or
loopne
in
jo
test
mov
fs
inc
push
inc
and
arpl
adc
mov
mov
js
jmp
push
and
lods
and
jecxz
fwait
mov
addb
fsubs
dec
and
and
mov
push
sbb
sahf
lock
add
mov
dec
sbb
lods
aad
or
jnp
adc
inc
mov
scas
add
push
inc
push
jecxz
push
mov
bound
inc
dec
ss
xor
pop
sbb
push
add
lods
adc
xchg
movsb
cmp
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
xchg
in
push
pop
mov
mov
push
or
in
mov
or
pop
jmp
ds
fs
aam
xchg
pop
inc
jo
adc
lret
and
sbb
or
fsubrs
imul
movsl
xor
cmpsl
mov
sub
test
mov
adc
lret
and
ja
push
aaa
adc
xchg
fdivrs
mov
push
push
lret
or
aaa
fistpll
lds
adc
push
shr
dec
ret
out
xchg
out
mov
nop
dec
cld
jbe
fldenv
in
les
hlt
mov
rcrb
insl
mov
fsubs
xchg
push
or
xchg
push
cmp
movb
or
lock
insb
cmp
jecxz
mov
daa
or
push
pusha
mov
out
test
dec
scas
out
add
sbb
jmp
push
cmp
cmp
xor
mov
jno
js
ja
pop
xchg
dec
mov
or
das
or
testb
xor
or
faddl
cltd
or
adc
pop
push
rorl
and
mov
inc
rorl
sub
ret
fiaddl
jne
pop
mov
mov
ljmp
test
mov
aad
mov
push
inc
add
jmp
ja
or
mov
gs
imull
and
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
clc
cs
js
mov
adc
inc
ljmp
lods
cmpsb
mov
test
mov
gs
or
and
out
push
mov
mov
add
pop
movsl
in
in
daa
fdivs
push
sahf
mov
push
movzwl
xor
mov
addr16
add
pop
jns
pop
push
movl
fucomip
test
mov
mov
mov
imul
or
ljmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
mov
dec
nop
lahf
dec
cmc
mov
dec
cmp
fs
mov
enter
xor
ss
iret
push
mov
lcall
inc
loopne
cmp
aam
ds
add
sbb
adc
data16
push
in
js
pusha
adc
js
sbb
das
sbb
mov
fwait
sarb
les
or
test
pop
repnz
in
aas
and
xchg
push
or
enter
enter
clc
push
add
clc
shlb
xchg
mov
enter
xor
xchg
cmp
sarl
inc
and
cs
add
in
dec
add
push
push
push
call
sbb
movsb
scas
clc
sbb
sarb
cmp
and
mov
mov
and
pop
out
jle
jmp
cmpb
and
adc
inc
or
cs
jg
push
xchg
movsb
mov
mov
dec
dec
ss
mov
mov
mov
and
sub
xchg
pop
mov
clc
adc
jbe
popf
mov
cld
je
ja
push
sbb
mov
inc
cmp
mov
pop
dec
inc
dec
rorl
hlt
mov
hlt
cmp
shlb
mov
es
lea
cli
fcompl
icebp
inc
fadds
hlt
inc
add
loope
xor
sub
rcr
fldenv
dec
mov
insl
dec
call
dec
push
cmp
pop
or
jl
cmp
loop
std
adc
push
mov
dec
je
clc
push
ret
dec
movsl
pop
lock
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
or
xor
shll
push
rorb
and
jecxz
orb
inc
jle
jnp
xchg
jnp
or
js
cld
lods
mov
sbb
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
adc
test
adc
mov
mov
jne
push
loop
insl
ss
fiaddl
push
add
sahf
out
cwtl
mov
jns
out
enter
sahf
out
sahf
jmp
jns
jns
add
sahf
out
sahf
push
sbb
and
out
xor
ds
dec
call
out
pop
enter
add
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aad
push
push
push
pushf
movsl
push
nop
leave
cmp
add
bound
add
mov
mov
sub
mov
data16
sbbb
sub
cmp
cmp
pop
mov
les
sarb
call
add
out
push
mov
push
jge
push
add
sub
fdivl
sarl
cmp
jb
inc
xor
cmp
inc
mov
dec
or
xor
jns
adc
out
sbb
scas
adc
pusha
cs
lret
adc
inc
push
xlat
hlt
fdivrl
mov
jge
jbe
cmp
inc
pop
mov
cmpl
shl
xor
xor
inc
jmp
xchg
ss
sbb
add
clc
add
xchg
js
lock
loop
fldenv
mov
xor
mov
lds
test
je,pt
test
rclb
cmp
jae
rcr
sbb
repnz
mov
jge
push
das
mov
pop
mov
adc
sarb
add
mov
jecxz
repnz
or
add
js
and
or
in
xor
pop
lcall
sar
mov
sti
shr
xor
pushf
sarl
repz
xor
add
add
add
jne
jmp
mov
adc
iret
or
insl
push
or
and
not
and
xor
add
add
in
in
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
idiv
jl
fisubl
aam
cli
and
and
mov
sbb
mov
push
rolb
leave
xor
fs
fisubl
repnz
sub
fdiv
mov
push
or
xlat
and
jle
sbbb
xor
lods
xor
imul
fsubr
int3
dec
in
rcl
call
pusha
mov
push
xor
and
push
cmp
dec
xor
ljmp
int
ret
push
xor
add
pop
dec
shll
xor
fdivl
imul
add
xor
in
aam
bound
in
jns
mov
adc
sbb
adc
add
adc
mov
pop
cmp
aaa
fadd
xor
call
rclb
call
nop
loopne
lahf
cmp
xchg
cmpsb
imul
cmp
dec
mov
pop
aaa
mov
or
cmp
jae
add
cmpsb
xor
pusha
pop
or
and
call
mov
imul
and
xor
add
inc
adc
addl
pop
inc
in
insb
fwait
jge
push
ret
push
jo
ficoms
or
les
pushf
addr16
call
cmp
add
xor
js
inc
jne
mov
ucomiss
dec
fadds
pop
fs
xor
scas
leave
js
call
mov
lret
push
clc
jl
push
and
add
movsb
jmp
imul
add
in
in
or
rol
aas
int3
inc
aam
xchg
fcmovbe
or
sbbb
inc
sub
mov
adc
cmp
sub
shll
in
in
fstps
shl
rolb
add
adcl
sub
push
xor
inc
adc
dec
rorb
adc
dec
loopne
adc
ror
enter
sbb
adc
stos
imul
in
inc
push
xor
dec
int3
dec
xorb
push
dec
xor
shlb
js
in
push
pop
mov
xor
scas
push
mov
aam
lcall
pop
xchg
inc
mov
pop
add
ficoms
add
or
rorb
inc
pop
cs
push
cmp
pop
pop
movsb
cltd
add
inc
pusha
inc
leave
in
loopne
jl
or
sbb
xor
add
fs
xor
adc
fs
dec
xchg
xchg
dec
rorl
stc
stc
pop
loope
lahf
stc
mov
int3
pop
push
in
adc
mov
jb
push
adc
fmuls
adc
xor
fcoml
fisubl
mov
call
and
and
loope
cmpsl
push
mov
aaa
es
push
dec
pop
out
pop
inc
xor
cld
add
sub
mov
fadds
add
inc
loopne
lret
jb
loope
xchg
cli
cld
lea
mov
pop
cld
sub
ret
add
xor
pop
pop
stos
fcoms
ljmp
outsl
ss
mov
xor
or
rol
adc
add
rcr
jne
cs
push
add
test
test
stos
or
sub
loopne
ret
aas
lea
jmp
jg
mov
sub
out
cs
or
jecxz
lret
add
mov
jne
pop
jbe
add
inc
dec
sti
adc
dec
jl
sub
push
enter
mov
adc
clc
aaa
jbe
or
mov
in
adc
dec
or
sub
jae
push
pop
rolb
mov
fsubrs
rep
fimuls
mov
sbb
lret
fs
pop
fdivp
ror
orb
std
mov
hlt
push
shr
xchg
pop
sbb
mov
and
rol
mov
pop
push
mov
movb
dec
js
pop
and
add
movl
jl
pushf
mov
cmp
pop
jo
popa
jbe
fdivrl
leave
mov
cmp
les
shlb
lock
rorb
fwait
sbb
and
andps
add
mov
inc
pop
jle
ja
lea
imul
cmp
ja
sub
fmull
sub
stos
mov
andl
and
or
adc
or
test
in
enter
adc
sbb
xchg
jbe
and
orl
test
test
shll
add
and
mov
push
and
test
adc
icebp
pop
pop
sbb
mov
adc
push
xchg
mov
jno
inc
pop
stos
xchg
icebp
mov
arpl
je
cmc
out
or
movl
pop
sub
and
pop
jge
mov
adc
adc
push
add
mov
xor
dec
imul
add
sbb
push
dec
jb
xchg
sbb
lret
push
sbb
out
fists
ljmp
mov
inc
inc
mov
mov
inc
sbb
adc
xor
or
add
sbb
add
ret
dec
ja
loopne
jge
lods
ljmp
xor
movl
pop
xor
push
sub
add
push
xchg
and
inc
addb
xor
pop
or
pusha
sbb
or
sbb
dec
inc
mov
adc
fidivrl
inc
cmp
jl
nop
sub
sbb
sub
test
sub
pop
mov
cmp
add
out
pop
add
cli
es
lea
cmp
xchg
mov
test
jg
and
or
js
insl
orb
jl
or
call
inc
inc
push
aad
or
int3
mov
mov
or
or
sti
dec
cmp
jl
dec
dec
sahf
cmp
push
js
test
xchg
dec
sti
jmp
and
xchg
nop
pusha
dec
in
imul
mov
test
and
movzbl
lods
lods
or
adc
mov
and
adc
adc
adc
out
mov
or
push
aam
push
sub
fcomps
inc
sbb
add
mov
push
cmp
sbb
les
and
mov
mov
sbb
mov
lods
rcrl
inc
ret
imul
into
loopne
sub
ljmp
and
mov
stos
dec
and
ret
adc
insb
and
mov
pop
or
add
mov
mov
or
add
pop
dec
pusha
pop
inc
mov
add
xchg
xchg
jp
adc
push
mov
push
adc
sub
inc
push
fbld
xchg
mov
int3
test
dec
sti
bound
push
or
jle
rorb
dec
sbb
pop
and
test
adc
cmp
and
xchg
push
or
add
fmuls
and
add
push
out
nop
lock
and
mov
push
sub
scas
add
mov
cmpsl
and
inc
ss
or
ficompl
xchg
mov
add
rcll
nop
imul
fistl
ret
popa
and
out
fstpt
enter
sbb
xchg
sub
ljmp
sbb
mov
pop
ja
lods
adc
push
iret
test
adc
push
jmp
push
adc
filds
test
jle
or
enter
jae
pop
pop
mov
and
loopne
loopne
jecxz
inc
js
sub
je
rol
gs
in
mov
pop
mull
pushf
insl
cwtl
fcomps
leave
call
fistpl
fcomps
jne
push
sbb
and
xchg
ss
mov
ret
ret
ficomps
fwait
add
in
dec
inc
push
mov
sbb
sub
sub
or
dec
ret
inc
push
push
ds
mov
add
aam
mov
popa
enter
in
mov
dec
cmp
lock
xchg
or
repz
adc
int
int3
jo
add
jae
je
inc
call
aam
adc
lea
and
repz
and
jns
and
cmp
push
cmp
xor
pop
and
mov
xor
lods
mov
dec
andl
cmp
cli
push
xchg
sub
loopne
adc
fwait
ret
loope
push
aam
jbe
rdpmc
mov
and
jnp
pop
dec
sbbb
push
or
sbb
adc
jmp
inc
mov
icebp
inc
insl
cwtl
mov
imul
xor
pop
lds
pop
sub
jb
push
movsl
xor
add
adc
es
and
popf
jmp
add
xor
sub
push
cmp
and
rclb
dec
jl
mov
fildl
cmc
add
mov
add
mov
in
dec
push
sub
or
cmp
lcall
inc
pop
inc
pop
ret
movsb
inc
inc
rorl
int
and
pusha
cmp
stc
push
or
cmpsb
test
ret
xchg
jns
mov
loopne
iret
xor
dec
xchg
push
xor
fnstenv
das
inc
push
les
imul
sbb
sub
and
cmpsb
push
sub
cltd
jae
lods
xchg
pop
push
cltd
icebp
loope
and
sub
sbb
dec
arpl
inc
mov
lds
inc
xchg
sub
or
inc
iretw
leave
add
push
and
push
pop
lock
in
xchg
aam
cmp
dec
clc
cmpsb
jmp
hlt
je
inc
mov
data16
lret
xor
and
push
mov
or
xor
lahf
sub
mov
sbb
jno
ss
push
push
jp
notb
and
bound
pop
stos
jmp
ljmp
in
add
mov
sub
adc
jo
mov
lods
add
scas
dec
sbb
pushl
ss
ja
cmp
aad
adc
pop
jnp
sub
dec
inc
loope
stos
sub
push
jo
adc
rcrl
xchg
sub
push
je
mov
call
loop
lret
test
movb
pop
or
and
push
lcall
stc
xchg
inc
pusha
sub
jle
and
ds
je
rorl
mov
xchg
orl
push
adcl
mov
pop
cld
and
pop
into
icebp
mov
push
push
shrb
add
dec
sub
mov
sbb
jne
xor
push
dec
imul
xor
test
push
ficompl
sub
and
xor
or
jo
mov
ss
sarb
dec
pop
mov
xchg
xchg
push
dec
push
cmc
push
out
push
lds
rorb
push
or
out
xchg
and
and
xchg
data16
inc
jg
mov
xor
cmp
mov
fsubrs
cmp
inc
xchg
das
and
scas
fidivs
test
or
xor
das
and
lea
jb
add
mov
mov
and
or
inc
hlt
and
sbb
xchg
outsb
lcall
sbb
andl
adc
arpl
in
push
in
cld
xchg
in
repz
sbb
pop
add
pop
jmp
fnstenv
fistpl
xor
jb
jne
inc
add
sbb
push
cltd
or
je
in
mul
dec
mov
out
sbb
or
jle
push
cmp
sbb
or
mov
mov
ret
arpl
or
jne
pop
or
mov
xchg
lds
adc
mov
or
test
adc
repnz
jg
add
popf
out
jo
cmp
mov
pop
adc
adc
push
jno
out
cs
dec
dec
sbb
int
cmp
add
jbe
call
mov
xor
mov
mov
ror
dec
push
inc
cmp
cmc
shlb
or
rol
jbe
nop
push
inc
xor
sbb
adc
addr16
and
imul
lods
ds
movsb
and
ret
pop
std
xchg
and
cmpb
mov
or
mov
pop
pop
pop
fcomps
fsubrp
inc
fstpl
ret
sbb
bound
or
sub
scas
add
adc
leave
dec
adc
xor
fiadds
adc
push
push
or
mov
cmp
push
adc
mov
xchg
mov
pop
mov
xchg
repnz
ret
push
xchg
pop
push
adc
stc
mov
add
push
xchg
xor
movzbl
popa
mov
or
or
call
repnz
push
cmp
lock
test
mov
int3
xor
add
ss
aam
andb
adc
push
xor
jg,pn
push
hlt
mov
lea
daa
stos
je
cmp
sar
push
adc
sub
push
cmp
jge
mov
xchg
adc
inc
insb
lock
cmp
popf
ficoml
mov
mov
lock
dec
shlb
mov
hlt
clc
clc
cld
test
xorb
mov
cs
add
add
lcall
push
and
aaa
add
test
je
add
sar
pushl
adc
cmp
dec
or
mov
shr
sbb
cld
aas
mov
mov
or
mov
sub
mov
add
adc
dec
or
pop
mov
sahf
add
mov
sub
mov
adc
je
dec
je
push
add
loop
and
aas
sarl
dec
mov
add
dec
movsl
out
lret
sub
testb
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
rcrb
roll
xor
add
xor
and
mov
sbb
bound
lret
idiv
inc
inc
imul
and
jb
pop
cld
mov
addb
lahf
dec
rol
pop
je
mov
add
or
stos
subb
cmp
mov
stc
push
or
mov
adc
push
push
sahf
cli
push
lock
dec
add
enter
repnz
jbe
inc
test
jmp
daa
pop
jmp
pop
cmp
adcb
loop
mov
push
mov
test
xchg
imul
jae
repnz
mov
mov
sub
pop
jo
inc
sub
in
nop
xchg
adc
cmp
je
cmp
push
es
outsl
push
cmp
jne
inc
jne
loopne
push
or
and
pop
dec
or
or
es
add
fimull
aas
leave
cmp
jne
add
xchg
pop
sub
sbb
test
dec
ret
or
sub
sbb
sub
addb
fcomps
or
mov
call
fsubrs
xor
cmp
mov
jmp
and
fwait
dec
sub
jmp
inc
jl
inc
jg
call
iret
add
shl
dec
mov
sub
and
and
mov
mov
cmp
fadd
jg
jbe
int
imul
and
inc
sbb
xchg
rcrl
inc
pop
adc
pusha
aad
mov
out
mov
mov
sbb
xlat
dec
add
push
xchg
mov
fsubs
fistpll
mov
jg
pop
sarb
jle
imul
mov
adcb
inc
lods
aaa
jecxz
mov
insb
cmpb
orb
and
inc
xor
fnstenv
sub
add
mov
jge
xchg
mov
pop
das
movsb
xor
sub
inc
cmpb
mov
out
pop
call
add
cmp
in
inc
inc
push
icebp
les
push
out
jmp
xor
dec
sahf
dec
bound
sbb
andb
loopne
add
xor
or
in
pop
shrb
cld
cmp
cmp
mov
ret
sub
lds
loop
je
and
cmpsb
syscall
test
ret
clc
insl
dec
fstpl
loope
and
mov
scas
aam
clc
ficompl
jg
or
into
hlt
add
jne
mov
lock
imul
or
inc
mov
jnp
lcall
adc
cmp
jne
into
sub
or
xchg
sahf
shll
mov
addb
adc
aad
add
out
dec
xchg
cmp
xchg
js
and
mov
jne
mov
cwtl
add
dec
mov
mov
hlt
mov
cli
mov
orb
sub
jle
je
outsl
testl
adc
sub
je
and
js
add
lock
push
add
and
mov
movsl
inc
or
inc
inc
loopne
xor
inc
loop
or
add
dec
sti
sub
insl
fsubl
shlb
or
or
cli
fs
ljmp
mov
cmpb
icebp
jmp
push
rolb
mov
add
xchg
fstl
mov
ss
mov
sbb
shll
mov
xor
dec
jle
ret
mov
adc
xor
mov
call
xlat
xchg
ret
dec
adc
mov
dec
push
movb
xchg
cmp
mov
mov
add
cmp
incl
cmp
pop
loopne
aam
cmp
lods
es
cmp
push
adc
inc
sbb
or
mov
mov
sub
ficompl
cmp
jb
pop
roll
inc
out
mov
out
cmp
outsb
mov
pusha
add
xor
shrl
mov
or
enter
dec
imul
sbb
xchg
outsl
mov
sub
or
movb
in
ss
jmp
jmp
pop
repnz
pop
mov
xor
jns
orb
pop
jne
leave
or
mov
pop
imul
test
aaa
sbb
jne,pt
jo
lods
fnstcw
ja
mov
and
lea
adc
xor
mov
and
dec
push
adc
pop
out
xor
aam
cmpsl
sbb
test
push
pop
jb
shlb
sbb
daa
mov
leave
sub
inc
add
adc
mov
jecxz
lock
in
sahf
xchg
mov
int3
pop
repnz
xchg
adcb
sbb
rcrl
add
pop
adc
push
das
push
addb
shll
shll
outsb
or
mov
stos
mov
mov
dec
sbb
cmp
dec
and
int3
fsubs
in
mov
movsl
pop
push
push
inc
test
adc
mov
pusha
data16
ret
popf
inc
int
sbb
insb
je,pt
inc
jl
pop
add
fsubrl
scas
jmp
clc
add
cmpl
test
rcrl
push
movsb
push
cmp
inc
cmp
or
in
mov
push
in
lock
inc
shlb
addb
adc
adc
mov
jno
add
mov
sbb
roll
or
movsbl
ret
push
xor
jno
jmp
xchg
pop
dec
sbb
cmp
or
popa
mov
nop
sbbb
sub
ljmp
inc
jb
loop
jo
inc
xlat
inc
push
sub
addr16
shl
sbb
or
aam
xor
or
xorl
push
sbb
int3
mov
cmp
jmp
aam
push
adc
leave
sub
mov
lret
sub
fsubrs
fistl
or
add
xor
lea
lcall
clc
xor
cmp
out
jmp
add
xlat
aas
push
dec
call
push
jbe
rcrb
mov
fnstenv
sbb
xchg
test
push
push
jo
mov
or
cmp
lret
movb
hlt
cmp
movl
mov
xchg
sbb
lock
cltd
inc
ljmp
gs
push
mov
jecxz
fdivs
and
add
and
inc
je
dec
adc
push
out
inc
addr16
loope
insl
jne
rclb
cld
call
pop
or
cmp
lret
mov
cli
jb
mov
inc
push
scas
push
inc
addl
mov
hlt
mov
pop
fdivl
dec
sbb
in
dec
fwait
jo
pusha
js
inc
add
cltd
mov
push
mov
push
mov
push
jecxz
arpl
mov
push
fildll
or
out
jo
movsb
cmp
je
and
xchg
mov
movsb
or
push
neg
or
pusha
inc
lds
pusha
sub
in
in
or
add
or
push
xor
iret
test
cmp
in
aaa
movl
mov
mov
inc
sub
dec
pop
xchg
das
rcr
movsl
cmp
jmp
cmp
jne
adc
dec
add
add
push
bound
sub
xor
xor
xor
pop
leave
add
andb
xchg
data16
iret
mov
je
std
leave
mov
into
je
mov
enter
aas
sbb
enter
pop
xor
dec
icebp
pop
sub
sbb
push
jmp
sbb
rorb
xchg
enter
in
shl
adc
movsl
lcall
stos
push
or
dec
pop
fdiv
xor
jb
in
jmp
call
mov
nop
in
jnp
ret
addr16
mov
xchg
mov
xchg
js
jle
dec
inc
aaa
cs
cmc
in
sbb
aaa
sbb
push
cmc
jno
or
cmp
adcl
fists
dec
movsl
ljmp
push
add
pop
je
push
dec
mov
jecxz
sbb
and
add
lods
in
dec
pop
loope
dec
jecxz
insl
je
pop
mov
gs
push
js
xchg
sub
cmp
push
shrb
dec
xor
sub
daa
scas
lea
dec
push
mov
mov
sbb
xor
pop
nop
cmpsl
add
pusha
lock
push
push
sahf
mov
sub
sub
mov
mov
insb
push
fmuls
cmp
xchg
add
pop
xchg
jmp
cs
loop
pop
add
or
in
fs
je
movsl
imul
int
push
out
mov
test
xchg
addb
and
push
xlat
or
nop
pop
popf
cwtl
lock
or
jmp
int
push
dec
pusha
cmp
test
push
mov
add
movl
movsl
stc
inc
or
push
or
movl
add
dec
inc
inc
sub
sbbl
in
add
mov
fwait
or
or
add
xchg
mov
lock
ss
sarb
inc
xor
mov
add
in
fdivrl
imull
cmpb
sub
sbb
push
shl
fistpl
or
in
andl
xchg
add
imul
jnp
sub
push
mov
sbb
sub
push
fadds
dec
pop
fwait
sbb
js
or
sub
push
push
inc
or
mov
or
rorl
out
js
and
pop
and
mov
dec
push
xor
out
dec
push
mov
inc
lcall
clc
lods
gs
push
aas
in
jmp
jle
adc
inc
add
xor
or
jg
sub
shlb
jb
inc
mov
sub
sub
clc
mov
xor
jmp
mov
dec
pop
mov
loopne
and
pop
mov
cmp
add
test
es
xchg
fs
jo
inc
jnp
xor
cmpsb
cmp
les
cmpsl
jge
dec
pop
push
ret
outsl
mov
xor
or
cmp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
loope
or
cmp
sbb
fsubrs
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
inc
orb
pusha
add
inc
adc
notb
push
or
popf
xchg
adc
add
inc
sbb
ss
out
out
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
sub
dec
push
mov
movl
pop
jo
add
sti
or
or
aaa
cmp
repz
sub
insb
insl
and
lods
jne
ret
dec
mov
pop
rcll
and
outsb
loop
adc
iret
fwait
xchg
pop
test
adc
inc
or
dec
leave
cmp
push
jge
lods
sbb
popf
subl
sub
sub
in
adc
ja
add
push
and
adc
popf
mov
xchg
dec
adc
add
lock
mov
ret
mov
fisttpll
mov
jg
dec
inc
mov
cmp
push
out
push
dec
pop
and
addl
movsl
addr16
lea
push
and
ret
jne
cmp
lds
mov
push
pop
daa
sub
pop
push
sahf
pop
shrl
lods
mov
adc
adc
cmp
ljmp
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
xor
pop
dec
sbb
xor
adc
mov
fisubl
dec
fcoms
inc
jne
in
add
andb
add
dec
add
and
test
or
in
insl
popa
and
and
jle
cmp
and
adc
loopne
mov
js
add
push
sbb
sub
addb
loopne
call
add
adc
inc
inc
adc
inc
add
mov
or
icebp
aas
mov
cld
or
lock
jmp
jne
repz
mov
out
push
xchg
xchg
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
andl
flds
js
sub
fcoml
push
and
adc
pop
add
ret
gs
mov
xchg
push
pop
or
ret
rolb
call
or
and
cwtl
shl
mov
out
loopne
adc
ljmp
loop
sarl
aaa
or
shr
add
leave
data16
imul
and
dec
sbb
or
mov
in
inc
add
fistpll
adc
pop
push
inc
mov
mov
pop
pusha
inc
pop
aaa
xlat
sub
jle
in
jecxz
sbb
pop
dec
or
jge
popa
imul
loopne
outsl
inc
add
in
jae
lea
cld
std
ficompl
xchg
pushf
push
pop
es
pop
scas
cmpsb
xor
pop
push
shrl
mov
and
sub
xchg
fsubrs
mov
mov
adc
ja
adc
and
or
lds
insl
in
xorb
xchg
pop
pop
push
sub
cmp
lea
mov
xchg
or
adc
add
add
loopne
cmp
insl
loopne
sub
mov
fadd
pop
mov
insb
pop
mov
mov
popf
mov
add
dec
lcall
sbb
xor
mov
test
aad
push
mov
sub
inc
cli
xchg
or
sbb
cmp
dec
scas
inc
xchg
dec
mov
pop
adc
or
int3
inc
fidivs
or
popf
fs
repz
rol
and
jmp
iret
loopne
or
je
sub
jl
aas
xor
leave
rclb
cld
push
lea
xchg
das
sub
aaa
push
inc
ret
or
cmp
dec
or
lds
add
and
aas
clc
xor
add
add
pop
fcomps
mov
in
call
add
adc
push
inc
jmp
or
jl
sar
in
gs
adc
sub
and
dec
fcmovnbe
cs
clc
imull
push
loopne
cmp
cmp
xchg
adc
dec
outsb
xor
clc
dec
or
cld
pop
jae
ret
mov
inc
push
mov
mov
sbb
add
cmp
das
sub
frstor
cmpsb
out
jb
loopne
xchg
inc
push
inc
push
add
pop
jae
int
add
xchg
les
pop
test
cmp
inc
adc
ds
add
sar
xor
jb
out
sub
add
in
push
xchg
out
push
push
mov
sbb
int
int3
mov
jle
and
mov
cmc
jg
imul
xchg
ret
mov
mov
cmp
lock
into
lret
mov
mov
cmp
ret
push
xlat
pop
and
stos
cmpsl
inc
mov
xchg
push
pusha
mov
popa
dec
xor
loopne
push
adc
in
mov
inc
mov
mov
or
fs
in
sub
in
lods
mov
and
add
add
lds
mov
sarb
cmp
jbe
push
popf
in
add
push
jb
jmp
das
js
and
or
pop
push
movl
ficoms
rcrb
mov
nop
and
or
mov
and
lock
add
and
xor
adc
stos
into
inc
cli
and
aam
in
add
loopne,pt
data16
push
outsb
dec
insb
xchg
or
fneni(8087
lahf
sahf
push
cmp
or
dec
jo
add
jne
mov
ja
dec
adc
mov
sbb
scas
lods
divl
loop
sub
inc
jo
ljmp
add
sub
sub
push
push
mov
push
aas
push
movl
dec
je
mov
dec
add
mov
pop
gs
xor
test
mov
sub
popa
add
cmpsb
dec
fmull
pop
ja
shll
mov
sbb
add
fnstenv
push
mov
out
mov
cmpsb
cmc
cwtl
push
lret
jne
mov
in
xchg
sub
cmp
dec
cmp
inc
push
xor
pop
div
adc
stos
hlt
add
lea
sub
pop
mov
inc
or
xchg
jmp
lods
push
dec
xor
adc
inc
jne
ret
xor
push
adc
xor
dec
add
push
adc
cmp
dec
adc
and
imul
call
pusha
xchg
xchg
xchg
out
mov
dec
sbb
sub
jo
gs
and
in
mov
shr
mov
imul
sarb
jne
or
add
jb
push
fwait
lea
je
outsl
jmp
mov
sub
jo
shlb
adc
sub
or
fidivl
bound
add
or
adc
pop
mov
lret
fidivrl
mov
int3
add
add
nop
mov
imul
or
sarb
test
xchg
call
mov
add
xor
fsts
mov
or
rorl
jmp
dec
mull
cmpsb
loopne
add
or
push
out
fildll
je
rep
mov
dec
ljmp
ret
or
jb
hlt
sub
lds
call
push
lahf
call
je
and
rcrl
or
and
dec
jne
sub
stc
lods
sbb
es
xor
inc
adc
hlt
sarb
or
add
mov
jle
fldl
cwtl
scas
pop
push
pop
and
sbbb
lods
loop
mov
cmp
and
clc
sti
mov
cmc
jg
fs
pusha
jmp
movq
jnp
cld
movapd
push
clc
jae
pop
outsb
fcmovnbe
xor
jle
xor
cli
rcl
lret
fs
adc
or
and
lret
or
jg
ljmp
adc
jnp
mov
mov
ficomps
aam
ret
or
adc
pop
lock
call
add
fadd
roll
jbe
and
shl
mov
shl
pop
enter
push
push
inc
pop
push
pusha
sbb
out
cmp
dec
sbb
pop
jo
pop
test
sar
in
mov
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
or
or
int3
jmp
dec
mov
sub
ret
adc
pusha
lcall
mov
sbb
hlt
fldenv
mov
push
pop
mov
dec
aad
dec
and
push
pop
inc
dec
pusha
outsl
loope
sbb
popa
inc
pusha
mov
sub
mov
jmp
push
or
mov
mov
push
sub
add
idiv
ja
mov
cmp
mov
push
in
je
cmp
jne
inc
cmpb
out
orb
shlb
or
adc
add
xchg
or
sub
or
mov
aaa
insb
ret
daa
mov
shr
dec
pop
imul
push
push
push
sbb
adc
mov
rcrb
ljmp
je
movb
mov
js
pop
notrack
xor
pop
push
push
xor
dec
dec
sbb
sbb
adc
xlat
cwtl
cmp
or
mov
adc
and
clc
add
test
popf
push
lea
cmpb
or
xor
ss
xlat
cld
sub
dec
addl
outsb
loop
daa
mov
mov
push
sbb
movb
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mull
push
cmpsb
enter
movsl
pop
inc
sub
movl
mov
dec
dec
inc
xchg
push
fisubs
pop
mov
dec
adc
sbb
sub
dec
add
lds
imull
dec
inc
testb
or
jnp
sub
or
call
fsubs
popf
or
or
jmp
pop
loope
push
adc
ja
and
xor
lock
adc
in
or
ret
cmp
inc
lock
arpl
mov
sub
cmp
int3
je
jl
pop
sbb
out
sub
je
push
xchg
orb
adc
mov
inc
sub
fdivrl
bound
or
popa
pop
ja
scas
xchg
outsb
mov
dec
shlb
and
add
data16
data16
dec
test
add
adc
pop
inc
je
pop
sbb
mov
jle
or
enter
and
testb
movsb
adc
lock
shlb
jns
adc
jl
mov
xchg
pop
rcrl
push
jmp
xor
loop
icebp
xor
test
push
rcl
add
pop
lret
xchg
shrl
rcr
or
jmp
add
iret
cwtl
mov
rorl
pop
inc
inc
add
sbb
sar
or
cld
dec
jne
insl
cmp
sbb
jmp
ret
adc
outsb
jne
out
jmp
add
ljmp
hlt
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
lods
dec
js
ss
xor
lret
jne
inc
aaa
push
lds
daa
push
mov
sbb
es
push
outsl
jno
mov
roll
push
or
inc
dec
push
rolb
test
pushf
stos
inc
xchg
dec
sub
stos
jge
dec
push
roll
cmp
add
adc
fsub
mov
stc
xor
pop
and
daa
outsb
push
add
pop
pop
jne
ret
clc
ficoml
pop
adc
add
stc
or
rep
jmp
xchg
jmp
mov
mov
add
test
lea
addr16
sahf
fcomi
push
test
adc
inc
push
and
cld
pop
lcall
add
add
imul
dec
push
dec
add
nop
into
enter
nop
inc
adcb
inc
xchg
mov
neg
out
aam
int3
push
les
lods
movsb
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
lock
jo
out
add
lock
repz
jmp
or
or
lock
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
pop
and
std
cld
mov
mov
fsts
xchg
mov
addr16
cmp
in
pop
nop
mov
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
push
out
fs
faddp
dec
push
mov
or
push
push
loop
cmp
pop
pusha
push
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
pushf
or
ficoms
add
push
add
sub
daa
ja
pushf
adc
lods
inc
mov
mov
pop
cmovb
xchg
js
loopne
fistpll
adc
push
bswap
add
mov
add
dec
lahf
call
pop
inc
lods
push
jae
mov
inc
imul
pusha
or
subl
leave
les
pop
inc
jae
adc
popf
mov
adc
repz
push
pop
and
rclb
add
cmp
inc
jp
sub
sbb
adc
sbb
sbb
ror
add
add
rcrb
sbb
loop
mov
mov
sub
mov
or
push
daa
fwait
pop
push
test
sbb
dec
or
sarb
pop
inc
xor
xor
inc
push
pop
xor
cmp
dec
mov
orb
sbbl
enter
xor
or
pop
xor
stos
or
ret
and
mov
push
inc
and
cs
pop
mov
mov
and
dec
xor
or
mov
jecxz
mov
cmp
xchg
js
loope
cmp
jle
or
sbb
fistl
cld
popa
mov
dec
push
jbe
sub
inc
inc
mov
pop
cmp
pushf
mov
cmp
into
lea
cmp
jl
jmp
sub
in
mov
jne
push
adc
or
mov
mov
jne
pop
cmpsb
push
adc
sbb
add
pop
clc
mov
mov
mov
into
adc
ds
or
pusha
push
cmp
insb
and
add
push
es
jne
insl
clc
dec
addr16
lods
adc
pop
sbb
stos
loopne
cli
inc
int
or
mov
push
inc
pop
ljmp
add
sbb
cmpl
dec
faddl
cmp
call
test
sti
sbb
movsb
push
pop
scas
pop
and
js
in
ljmp
pop
push
loope
xor
ja
pop
fucom
or
add
inc
pop
stc
jle
mov
dec
or
cld
add
lret
fisubs
xchg
xchg
aaa
pop
add
sub
inc
les
mov
cmpsb
outsl
sub
add
addb
bound
orb
test
in
das
adc
jne
pop
push
or
jmp
repz
leave
imul
sbb
fsubl
or
cltd
or
push
pop
and
out
or
add
fucom
sub
sbb
insl
or
sbbl
inc
shrl
pushf
std
xor
pusha
push
push
or
add
roll
jo
js
sub
pop
aaa
push
ljmp
and
sub
jmp
loopne
mov
inc
insl
imul
fsubrl
repz
inc
js
or
pop
pop
pop
not
mov
xor
fs
mov
pop
pop
gs
or
push
inc
mov
add
mov
nop
shl
inc
fcmovb
insl
rcr
addl
clc
shrb
push
ja
cwtl
dec
fidivrs
jbe
lea
adc
sbb
jp
mov
xchg
add
pop
leave
and
pusha
ss
dec
add
push
clc
jbe
add
push
or
and
insb
out
jb
ret
mov
add
popa
aaa
add
add
push
in
cmp
adc
jmp
scas
adcb
test
jne
test
cmp
xorl
ja
sub
jbe
divb
negl
scas
mov
pushf
pusha
push
add
ss
ret
lret
hlt
negl
sbb
mov
in
rcrb
mov
cmp
mov
orb
mov
ds
sub
adc
popa
pop
popa
and
push
shlb
hlt
sbb
lods
int3
je
push
and
push
addb
insl
adc
add
inc
sub
sbb
add
outsb
xor
testb
push
or
rolb
repz
sbb
test
shl
adc
sub
push
sbb
clc
or
lods
cmp
pop
add
add
cmpb
mov
pusha
sbb
int
jge
push
cltd
rclb
or
rcrl
jns
aaa
adc
sbb
and
sbb
je
mov
repnz
cs
add
andb
jle
daa
dec
jne
jmp
push
or
or
pop
adc
mov
dec
es
jne
mov
xorl
or
sbb
sbb
pop
xor
enter
lods
aad
lds
sub
mov
aaa
js
cmp
jno
arpl
rorb
mov
outsb
into
push
or
fdivrl
push
cld
jne
mov
push
cmp
jne
cmp
int
es
jne
call
jne,pt
int
or
lcall
incl
dec
or
sub
repz
jmp
std
push
xor
cld
cld
jmp
fldt
std
lahf
in
adc
adc
inc
inc
inc
inc
out
rolb
or
push
adc
sbb
adc
mov
lret
xchg
dec
mov
push
push
push
sub
ret
sub
dec
and
mov
or
push
loopne
dec
mov
arpl
lea
or
add
adc
add
xlat
outsb
and
adc
mov
or
xchg
xchg
or
or
and
movsb
pop
pop
pop
pop
orl
adc
pop
ffree
fs
lods
xchg
fisubl
fmulp
in
shll
add
xlat
push
mov
pop
add
dec
addr16
sbb
cli
out
xor
pop
jg
add
mov
into
sub
test
xchg
pop
subl
call
push
push
push
jmp
jp
xchg
ja
jae
out
ljmp
inc
fadd
getsec
dec
add
lea
and
cmc
dec
push
ja
or
and
mov
popf
and
jmp
loopne
inc
das
pop
addb
sub
pop
and
or
pop
pop
outsb
loopne
aaa
int3
sub
insb
sbb
jb
shlb
mov
mov
gs
lret
inc
jno
test
xchg
mov
pop
inc
mov
push
rolb
shlb
xor
and
jge
test
int
ljmp
in
hlt
mov
adc
fsubrs
stc
push
xchg
lret
es
pop
xchg
xor
ljmp
or
adc
or
add
push
xor
pop
aam
je
add
sbb
sti
fildll
add
not
and
sub
add
or
sbb
mov
cmp
xchg
lock
sbb
lock
adc
daa
push
add
add
lock
xchg
sub
jne
pop
add
ja
xor
mov
jne
pop
mov
ljmp
inc
or
pop
lret
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
lcall
ret
add
xor
adc
push
and
roll
scas
mov
pop
add
mov
aaa
cmp
mov
inc
cmp
jb
add
cmp
inc
fwait
push
int3
cli
cld
divl
xor
fs
sub
ds
cmp
aaa
or
or
ret
mov
push
icebp
or
mov
push
sub
or
pushf
shl
push
scas
sbb
into
and
xor
iret
subb
stc
addl
mov
jo
and
or
mov
mov
mov
push
jne
cwtl
inc
add
test
cld
cmp
push
xor
cmp
je
xor
out
sahf
adc
and
faddl
dec
lods
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
add
adc
xor
pop
lock
in
mov
ret
or
jl
cmp
lahf
shlb
lret
push
mov
clc
subl
mov
pop
inc
pop
test
jae
cltd
xchg
pop
inc
cwtl
or
jns
xchg
xor
not
clc
pop
pop
mov
inc
jmp
cmp
sbb
jmp
adc
or
out
sub
sub
lods
mov
pushf
jg
and
cmp
mov
xor
ss
ja
js
or
and
adc
adc
pop
mov
jno
fmuls
or
mov
pop
inc
mov
and
je
clc
adc
lret
sbb
je
lea
mov
sub
jmp
and
ljmp
or
test
push
add
mov
sbb
and
sbb
and
push
push
and
adc
shl
cld
std
mov
adc
sbb
sbb
movb
shlb
xchg
xor
add
pop
cmovno
cmp
add
mov
push
in
imul
mov
and
sbb
mov
bound
jmp
dec
or
cld
aaa
jne
mov
rol
lahf
lock
mov
inc
mov
dec
jne
fs
add
pusha
inc
or
shufps
lret
add
pop
insl
push
and
lock
push
or
mov
adc
dec
push
inc
xor
add
xor
fidivs
sahf
test
or
dec
rcrl
adc
shr
sti
nop
mov
insb
sbb
xor
dec
or
push
ljmp
jne
jl
add
fmuls
push
imul
or
loopne
icebp
add
push
and
add
nop
mov
fdivrs
sbb
lea
push
adc
jbe
sub
ss
adc
clc
xor
enter
or
dec
pop
scas
mov
bound
mov
dec
es
and
add
cld
push
pushf
cltd
mov
or
mov
adc
daa
jne
or
add
idivl
pop
mov
jno
adc
or
test
xor
xor
pop
ret
jp
inc
imul
in
pop
nop
sub
inc
int3
mov
jbe
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
add
jg
add
jmp
mov
or
stos
push
sub
or
adc
hlt
add
outsb
push
cmpsb
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
sub
adc
push
je
adc
or
gs
jnp
dec
int3
rcrb
cmp
adc
rcr
data16
ljmp
adc
push
jmp
xor
or
ds
jle
mov
les
ja
paddsb
pop
or
mov
cwtl
test
lods
aas
or
push
push
adc
rorb
cltd
jge
adc
pusha
gs
rolb
sub
in
inc
add
jo
adc
clc
inc
imul
adc
sbb
insb
push
adc
pop
addl
fisttps
decl
cmp
pop
insl
xor
inc
push
pop
mov
jbe
xchg
out
hlt
cltd
pop
idiv
ljmp
cmpb
loopne
in
sub
popa
xor
stos
push
push
mov
pusha
adc
rorl
into
xchg
xchg
xor
cmpsb
and
sub
xorl
push
or
push
scas
jp
loopne
dec
pop
push
imul
push
pop
push
dec
daa
cmp
pop
aam
mov
push
loop
sbb
loopne
mov
mov
arpl
add
sub
add
push
in
sbb
inc
adc
or
repnz
add
dec
push
or
ja
jecxz
test
and
xchg
loopne
mov
adc
or
rolb
roll
or
call
dec
ret
fcoms
test
and
ret
fbstp
mov
adc
enter
cmp
xlat
mov
in
xor
or
push
sbb
sbb
adc
mov
xor
push
faddl
idiv
orl
enter
addb
sbb
adc
xor
imul
or
call
ret
jbe
aam
aas
cli
dec
sti
jmp
dec
je
add
or
pop
je
push
neg
sarl
jb
push
sbb
xchg
addr16
add
jmp
sub
push
push
push
and
sti
add
mov
sub
push
ljmp
lea
push
test
push
testb
add
jo
arpl
lock
xchg
lcall
in
push
addr16
jne
mov
addr16
add
cmp
push
dec
mov
addb
jae
push
imul
xchg
sub
xor
cmp
and
rep
or
dec
xchg
xlat
pop
insb
inc
sbb
jns
or
mov
jg
mov
mov
adc
lods
repnz
jle
xor
or
jmp
xchg
jbe
leave
add
add
jmp
rorb
add
pop
in
pop
push
dec
jb
je
push
jmp
sub
dec
xchg
clc
rorl
sub
dec
pop
sub
pop
jp
loopne
fcoml
sub
notl
js
adc
imul
repz
or
mov
orb
jmp
cmp
jae
xchg
cs
sbb
mov
cmp
mov
sbb
dec
loope
jl
push
add
call
test
mov
loop
pop
lea
add
sub
insb
push
push
pop
dec
sbb
inc
push
push
sub
pop
shlb
sbb
add
xor
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
or
clc
mov
pop
jle
rcll
add
push
pusha
xchg
pop
pop
imul
lea
lret
out
popf
cmp
push
sbb
punpckhwd
push
addr16
insb
subb
xchg
push
pop
int
add
decl
das
pop
pushl
pop
add
iret
sub
push
pop
or
push
pop
ja
lcall
inc
push
pop
sub
sbbb
cmc
push
adc
cmp
push
dec
test
sbb
inc
outsl
mov
leave
imul
cmp
lret
push
push
fisubrl
addl
inc
lods
adc
add
lcall
insl
or
cmp
clc
mov
insl
sub
and
sarl
inc
js
adcl
add
jg
mov
cmp
jne
fsts
stc
xchg
clc
push
jle
in
mov
stc
mov
mov
out
lret
mov
fs
in
push
insb
sbb
jge
insl
inc
sub
xchg
cs
call
cmp
movsl
bound
ret
add
add
xchg
fucomip
mov
inc
mov
jmp
dec
or
inc
testb
cwtl
rclb
add
aam
xchg
mov
loope
mov
and
sbb
dec
shrb
or
jno
jb
add
cs
lods
popf
fsts
sets
push
mov
sbb
dec
int
push
mov
in
js
in
push
add
add
enter
popa
imul
mov
lret
inc
dec
adc
or
stos
loope
repnz
test
pushf
lock
add
outsb
and
test
in
mov
nop
test
pop
lea
dec
and
clc
xchg
push
cmpsb
aaa
mov
jmp
xchg
and
jg
clc
enter
mov
cmp
ret
xchg
and
test
inc
and
ds
mov
mov
xchg
mov
lret
ret
jge
cli
push
fcoml
adc
cmpsb
and
movsb
adc
popf
out
lret
movsb
sbb
mov
sbb
xchg
xchg
sub
pop
hlt
test
popa
sbbb
lret
sbb
inc
add
iret
sub
xor
add
jge
sbb
mov
add
adc
pop
jp
pushf
jo
inc
pop
imul
pop
ss
mov
adcb
sbb
mov
xor
popf
enter
inc
push
inc
xor
pop
jp
fisttpl
jmp
adcb
das
sbb
andl
xchg
jo
in
sub
mov
fwait
or
mov
imul
add
mov
dec
call
insl
xchg
xchg
xchg
cmp
cmp
sub
push
arpl
mov
adc
rcrl
lea
dec
push
mov
cmp
xor
lahf
push
or
lock
cmc
fsubrl
xchg
sar
lea
xchg
imul
xor
rclb
xor
je
fnstenv
int3
adc
in
pushf
fstpt
sahf
and
loopne
add
bnd
add
repnz
xchg
inc
jnp
jl
jae
add
dec
sbb
leave
enter
fidivl
xchg
add
push
lods
xchg
cmovne
sub
mov
and
mov
push
les
adc
leave
jge
add
add
jo
push
jns
repnz
add
es
push
in
jmp
push
pop
test
sub
incl
lahf
out
sahf
dec
inc
cmp
sub
popl
sbb
ds
sar
mov
xchg
test
cmp
stos
loop
or
mov
or
xor
pop
nop
and
inc
pop
mov
nop
lcall
pop
rolb
push
outsb
mov
enter
repz
rcr
loopne
lock
jmp
mov
or
xor
loopne
push
jmp
in
adc
lds
mov
outsb
inc
dec
loopne
push
sarb
out
sarb
shll
push
or
sub
xchg
in
je
mov
icebp
lret
add
das
repnz
jne
pop
repnz
inc
sbb
add
add
push
adc
jle
or
mov
mov
dec
imull
int3
testb
jne
push
sbb
mov
loopne
mulb
add
mov
and
inc
sbb
outsb
jne
out
cs
ror
mov
push
pop
shlb
mov
push
xor
push
cmp
xorb
ds
adc
test
clc
stos
rcrl
cld
fsqrt
jbe
je
movsl
movsl
dec
push
fistpl
pop
or
dec
sub
sbb
xchg
mov
into
or
inc
push
push
popa
lock
mov
ss
or
and
test
and
or
fimuls
cmpb
jmp
lods
push
roll
shr
pop
or
mov
jns
sbb
dec
sbb
add
lcall
cmp
cmp
lods
mov
out
sbb
sbb
aas
xchg
mov
push
lock
pop
push
out
call
add
pop
js
js
loope
negb
loop
cmp
insb
mov
dec
je
sbb
pop
std
movb
jmp
insl
test
in
xor
sub
std
add
orl
adc
shrl
push
jo
or
je
clc
mov
or
fmuls
or
repnz
inc
mov
lock
loope
dec
cwtl
adc
dec
xor
mov
add
push
or
mov
or
lods
sbb
mov
adc
cld
or
add
jbe
mov
add
psubusb
test
mov
jnp
push
push
lods
movl
cmp
es
mov
sarb
testl
test
popa
enter
call
lcall
push
ret
imul
in
add
xchg
mov
pop
or
dec
adc
mov
add
add
dec
or
stos
xchg
andl
xor
mov
add
sub
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
jnp
push
ljmp
sub
adcl
xchg
clc
jno
insl
push
jne
loopne
pop
insb
repnz
jmp
cli
xor
mov
addr16
pop
inc
test
mov
pushl
or
add
add
ja
int3
shll
cltd
int3
add
xchg
sbb
test
scas
add
add
sbb
or
dec
or
pop
sbbl
mov
dec
enter
jl
xchg
lret
jge
stos
sub
inc
cltd
stos
add
adc
jbe
push
inc
fisubrs
sbb
scas
hlt
pusha
and
or
inc
mov
sub
sbb
or
cmp
divl
pushf
inc
js
mov
sub
cwtl
movsb
aaa
push
sahf
mov
dec
sahf
jno
xchg
insl
in
sbb
jb
pop
aaa
loopne
call
sbb
push
adc
add
lock
stc
rcrl
xor
mov
dec
nop
rcr
cmp
or
cmp
push
xor
shlb
push
jbe,pn
rclb
dec
push
pop
dec
jmp
ret
add
mov
jl
push
in
or
push
mov
dec
lret
inc
aaa
nop
or
lret
popf
mov
popa
xorl
push
mov
mov
popf
jne
fnop
mov
cmp
nop
in
xchg
cmp
call
lods
outsl
je
dec
call
or
sub
mov
into
pop
add
sbbl
mov
sti
rcrb
lea
jbe
ja
fiadds
xorb
xchg
cld
ja
or
test
push
sbb
pop
sar
pop
leave
rclb
mov
push
loop
rolb
inc
jnp
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
loope
aam
sub
add
inc
sub
xor
enter
idivb
pop
or
add
setg
jb
movsl
sbb
add
inc
popa
pusha
dec
popa
xchg
mov
adc
lds
add
mov
loop
fbld
push
imul
ljmp
or
ja
movsl
mov
mov
leave
test
adc
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
adc
test
in
and
loope
aaa
test
ds
xchg
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
xchg
cmp
incl
cs
sbb
sbb
imul
imul
pop
or
xchg
rcrb
jb
out
mov
test
pushf
dec
xor
or
adc
add
into
shlb
jo
sbb
inc
je
pop
push
imul
filds
cwtl
mov
dec
xor
repz
movsb
cmp
test
mov
mov
lea
and
arpl
mov
call
inc
fimull
mov
add
outsb
sbb
sbb
js
pop
add
push
xor
mov
loopne
sbb
es
mov
push
add
add
enter
repnz
pop
jne
xor
add
push
insl
cmp
sbb
xor
ds
cmc
add
push
pushf
sub
test
add
repnz
xchg
loopne
lcall
cmp
movsb
xor
mov
push
data16
es
mov
stc
push
push
cwtl
inc
iret
adc
or
decl
jmp
mov
inc
lods
cwtl
ds
xlat
mov
mov
dec
movsl
cmc
inc
sarb
rol
xor
addr16
xchg
les
cmp
clc
pushf
mov
or
push
jmp
pop
orb
sbb
inc
inc
mov
mov
jmp
stos
pusha
je
or
sub
mov
ss
push
fwait
pop
loopne
popa
xor
xchg
fisttps
pop
xor
mov
push
and
xchg
cmp
jb
sbb
call
or
and
out
test
push
outsl
add
mov
shlb
add
push
addr16
xchg
hlt
jmp
cmp
jle
jae
mov
xor
cmpsb
lock
pop
push
out
mov
shll
add
or
mov
nop
cmp
inc
cld
adc
mov
leave
imul
popf
lea
mov
dec
mov
aaa
enter
out
cltd
sbb
divb
movsl
push
push
push
pushf
enter
iret
sbb
inc
push
stos
adcl
adc
mov
dec
inc
les
lcall
and
jae
imul
cli
mov
bound
in
jo
inc
daa
add
xchg
les
mov
insb
sub
ret
inc
test
out
push
push
into
xor
jecxz
bound
sub
sbb
adc
dec
sub
mov
or
jmp
xchg
sub
cltd
add
adc
jl
add
or
push
mov
add
fidivrl
adc
mov
xor
jnp
or
sbb
push
lock
adc
daa
pusha
or
lahf
mov
or
mov
jnp
fsubl
mov
mov
sbb
and
push
inc
out
ficomps
push
push
push
jmp
fnstsw
faddl
stc
cmp
fimull
mov
dec
jmp
sub
mov
movb
movsb
in
ja
lock
pop
inc
movb
xor
and
or
fsubrs
jmp
in
push
stos
rclb
push
rcrb
dec
cld
mov
in
ja
sbb
andb
mov
aad
sub
mov
sub
sub
push
mov
test
int3
mov
lock
shrl
mov
test
pusha
inc
clc
or
and
push
and
dec
std
xor
or
push
mov
popa
subl
mov
mov
jp
or
jge
inc
sbb
adc
lret
add
xchg
mov
mov
and
inc
aam
mov
sub
mov
or
adc
insl
loope
add
or
mov
xor
gs
add
cli
adc
mov
adc
xchg
pop
jmp
jge
lods
mov
scas
mov
xchg
and
je
push
or
sub
mov
sbb
out
mov
sub
movsl
daa
pop
mov
mov
xchg
xor
or
add
rcll
add
mov
mov
fdivrs
aaa
xor
or
stc
and
stc
mov
jmp
cltd
push
pop
lcall
sti
push
adc
or
dec
xchg
mov
stos
mov
push
ljmp
ret
outsl
mov
adc
dec
mov
pop
adc
int3
mov
or
or
jne
jle
inc
mov
mov
daa
test
test
xchg
or
jbe
lcall
sarl
pinsrw
jb
inc
aam
xchg
add
mov
cmp
push
jl
adc
or
and
out
jno
push
or
adc
dec
push
push
or
inc
add
fmuls
decb
pop
jb
mov
insl
imul
mov
aam
add
pop
bound
pushf
ret
add
imul
and
pop
push
and
test
test
nop
ret
adc
inc
mov
jb
in
push
hlt
mov
xchg
xchg
cmc
adc
xchg
jo
pop
ljmp
inc
aam
clc
fmuls
out
lock
adc
nop
addb
test
idivl
pushl
insl
and
pop
rcrl
jne
cmp
je
lods
cmp
ja
mov
jmp
pop
cmp
cmpl
lea
inc
adc
jmp
inc
loopne
push
loopne
loopne
push
xchg
loopne
xchg
stc
pop
push
xor
inc
imul
jo
imul
or
es
xorl
add
sub
sbb
pop
sbb
mov
mov
xchg
and
jg
inc
push
jo
adc
ds
jb
inc
test
lret
cld
scas
add
nop
add
popl
push
sbb
les
sub
icebp
jae
sub
add
leave
pop
std
arpl
lods
pop
and
std
sub
mov
xorb
sub
add
and
adc
mov
jmp
push
subl
mov
sub
add
and
mov
and
pop
push
xchg
sub
outsl
ss
js
add
mov
sub
sub
lea
into
pusha
and
pop
inc
sar
sbb
fxch
outsl
mov
mov
or
mov
movsl
jl
add
int3
in
xchg
push
sub
push
sbb
loop
jns
push
add
push
pop
adc
or
cmpsb
shlb
jl
inc
cmp
cmp
lods
sti
inc
mov
sbb
sbb
jle
divb
mov
nop
jnp
shl
test
out
and
mov
xlat
imul
pusha
jo
pop
leave
shrl
mov
pop
sub
add
icebp
add
arpl
icebp
pop
es
sub
cmpsl
inc
fstps
pop
flds
imul
inc
js
push
inc
sahf
pop
push
roll
mov
shrl
cltd
mov
nop
and
sub
insb
int3
push
sbb
dec
xchg
cwtl
pop
adc
test
ds
test
insb
push
lea
loopne
fstps
test
mov
sbb
mov
inc
inc
pop
sbb
mov
es
lock
pop
enter
leave
sbb
insb
add
mov
test
inc
or
mov
or
xchg
add
xor
lcall
pop
mov
outsb
data16
sbb
cmp
jo
push
cld
mov
or
sti
sbbb
adc
push
fs
dec
xchg
xchg
pop
mov
imull
call
clc
sub
pop
jp
mov
and
dec
adc
and
leave
cmp
dec
jo
sbbb
jmp
cmp
sub
shlb
push
xchg
mov
adc
das
rcrl
pop
add
stos
pop
or
xor
mov
rcl
sub
pop
adc
inc
push
adc
add
xor
lds
shl
aaa
cmp
js
stos
rorb
lret
test
push
pop
sbb
js
jp
movb
or
loopne
popl
jle
add
sbb
mov
out
inc
pop
ss
mov
or
mov
inc
sbb
jg
jp
push
jmp
andl
jle
and
or
mov
test
or
cmp
pushl
cmpl
bound
xor
das
pop
pop
jg
mov
into
jo
jo
push
fdivl
movsb
dec
adc
cmpsl
rolb
fstpl
clc
hlt
mov
mov
lds
sub
rolb
sbb
iret
in
push
jae
cli
call
test
test
xchg
loopne
mov
hlt
xchg
bound
es
ja
cmpb
jp
aad
bound
xorl
lods
sub
test
mov
dec
icebp
xchg
push
hlt
pop
addr16
popf
je
leave
fistpll
ja
mov
nop
dec
ds
clc
adc
mov
sub
sahf
dec
xor
xchg
and
shll
mov
pop
popa
push
or
mov
fwait
sbb
lea
push
nop
arpl
mov
jmp
and
mov
mov
popa
mov
repz
lods
mov
cltd
scas
and
hlt
push
xchg
pop
roll
and
inc
int3
jno
icebp
outsb
fistpll
insb
jne
jp
mov
adc
and
fisttps
adc
imul
mov
imul
leave
leave
leave
dec
inc
cmp
lret
sbb
aam
sub
in
in
test
sbb
stos
sarl
loope
xchg
jl
ret
lds
outsb
popf
push
lea
loop
jae
sbb
mov
sbbb
leave
mov
scas
mov
xchg
cmp
cld
adc
mov
adc
fildl
adc
or
adc
test
rorl
shl
pop
aaa
imul
shll
sub
jns
sub
mov
mov
inc
sub
or
aad
and
inc
pop
sarb
lods
pop
leave
cmpsb
inc
sub
in
and
int
outsb
and
push
xchg
lds
mov
js
push
jae
lods
mov
mov
inc
fs
add
mov
outsl
jle
cltd
add
mov
mov
movsl
push
pusha
cmp
xchg
loop
addr16
push
dec
inc
mov
xor
jmp
adc
mov
mov
mov
out
test
enter
add
outsl
pop
xor
inc
mov
push
xchg
mov
cld
push
push
cmc
test
in
jecxz
push
pop
sbb
inc
push
add
push
aas
inc
pop
js
add
into
fdivrl
push
jnp
jb
mov
pushf
push
into
lods
cltd
nop
inc
loopne,pn
lods
shrl
add
cltd
ficomps
pop
push
mov
sub
in
je
adc
push
pop
xchg
mov
mov
mov
dec
sub
dec
fsub
jb
add
aad
lds
cmp
jnp
jo
leave
rorb
dec
push
add
and
mov
lods
jns
and
and
nop
mov
aam
leave
and
cmpsb
ret
in
xor
rolb
rclb
mov
or
aam
and
enter
cmp
inc
mov
aam
idivb
test
pop
inc
cmp
lret
mov
sbb
sbb
sbb
mov
pop
loope
sahf
popf
mov
mov
je
pop
add
cmc
loopne
sub
sbb
sbb
inc
push
scas
dec
out
imul
scas
inc
ds
mov
push
pop
hlt
rcrb
stc
xchg
inc
mov
add
in
fidivs
dec
sbb
dec
adc
xchg
sbb
sbbb
scas
lret
xchg
mov
add
ret
adc
rcll
pop
sbb
mov
jmp
lret
inc
pop
pop
push
inc
jp
mov
das
and
out
ret
mov
or
test
rorb
gs
out
dec
add
hlt
and
sbb
dec
out
cltd
cmc
test
stos
cmp
jmp
mov
dec
rcrb
mov
inc
jmp
dec
fildll
dec
add
add
or
cmp
and
add
inc
add
sub
xor
lret
cmpsb
xor
lea
jo
sbb
rcll
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttps
mov
xchg
mulb
or
add
jo
adc
xchg
lret
or
lock
add
dec
pop
xor
sbb
and
pusha
and
mov
mov
add
adc
push
jle
add
jo
inc
pop
sub
mov
mov
inc
cmp
push
sbb
int3
repz
or
or
add
sbb
push
fcoml
dec
fstp
mov
mov
adc
mov
cmc
hlt
mov
shlb
pop
hlt
push
popf
out
cli
out
or
push
sub
aad
adc
push
sub
inc
add
and
or
cld
dec
dec
out
push
notb
out
int3
arpl
adc
cs
fadds
adc
cmp
scas
mov
adc
sbb
fisttps
aaa
add
xchg
mov
decl
orb
mov
ret
movsl
push
mov
mov
loope
out
addr16
mov
dec
cmp
mov
in
leave
sub
mov
cmp
and
in
sbb
mov
and
jmp
or
loopne
jmp
mov
in
inc
or
shrl
ret
sub
jg
pop
add
push
or
scas
mov
idivl
or
xor
mov
push
ret
jno
push
dec
fists
mov
mov
push
cmpb
sti
imul
xchg
pop
mov
xchg
xor
mov
jne
movl
inc
sbb
cmpsb
sarl
jne
dec
shll
jmp
dec
jmp
add
jmp
pop
push
mov
add
adc
leave
ret
add
shl
lods
fwait
push
fcoms
add
push
imull
rcrl
add
pop
jmp
psubsb
jb
sbbl
mov
in
push
jmp
lock
dec
rorb
push
aad
imul
aaa
inc
push
jne
ret
aas
sar
stos
mov
jnp
jae
cmp
jbe
addr16
shll
jne
xchg
sbb
lods
rcll
inc
push
leave
inc
fwait
lea
sbbb
leave
xor
jo
fwait
orb
push
mov
sub
stos
jmp
cli
fs
cmpb
inc
cmp
js
push
add
pop
movb
sbbb
shlb
inc
bound
loopne
xorb
dec
xor
push
fsub
std
es
pop
dec
test
orb
clc
dec
xor
dec
jne
loopne
pop
jnp
stos
addr16
scas
dec
jle
sbb
pusha
xor
mov
jecxz
xor
push
mov
inc
dec
jne
sahf
xchg
push
push
scas
stos
mov
jmp
rcl
push
addr16
add
jmp
cmp
lcall
cmp
adc
addb
sbb
mov
push
movsl
ret
cmp
adc
and
push
add
test
cmp
leave
mov
push
and
lcall
scas
pop
pop
pop
pop
sbbb
shll
dec
pop
pop
push
cmp
cmp
das
pop
pop
push
xlat
testb
imul
stos
insb
ljmp
lods
and
add
and
dec
mov
or
push
or
mov
add
jl
sbb
rorb
call
jnp
jge
mov
mov
add
mov
ret
cmp
out
imul
ljmp
ljmp
mov
jmp
popf
jmp
and
cmp
xor
shlb
cmpl
and
test
pop
pusha
and
or
jne
jns
push
sahf
or
dec
fimull
fnsave
icebp
nop
push
js
sbb
mov
pop
aad
jecxz
pop
fimuls
test
jnp
xchg
test
clc
xor
in
aaa
sbb
pop
loop
jnp
test
pop
ret
adc
mov
jecxz
jo
xchg
and
mov
sbb
xor
or
sub
mov
or
clc
adc
clc
xchg
addb
cmp
arpl
pop
sub
sbb
xor
fdivr
mov
test
push
addr16
rolb
pop
cmpsb
sbb
das
adc
mov
fiaddl
les
mov
sub
and
rcrb
cwtl
shrb
xlat
cmp
pop
pop
sbb
cwtl
daa
sbb
das
ljmp
jle
jg
je
lcall
js
test
pop
cld
inc
add
add
inc
and
movsb
or
mov
xor
cli
xor
cmp
mov
fstpl
addr16
out
or
mov
pop
scas
lock
add
add
lock
pushf
push
mov
sub
aad
add
mov
lock
adc
pop
push
out
pop
movsl
pop
mov
jmp
pop
push
fwait
sbb
add
or
andb
or
test
dec
mov
mov
or
sbb
pop
or
inc
mov
fisubs
test
push
push
push
pusha
adc
inc
adc
aas
push
scas
addl
sub
lcall
cmp
inc
sub
push
push
mov
pop
and
fadd
std
jo
pop
scas
mov
pop
inc
or
and
push
add
les
shl
and
mov
shlb
push
bound
pop
inc
add
mov
push
imul
dec
fidivl
adc
ret
cwtl
clc
and
or
dec
inc
pop
sbb
sub
test
imul
push
push
ds
adc
js
push
mov
mov
add
mov
mov
lock
out
cmp
sub
iret
push
adc
xchg
sbb
stos
clc
mov
adc
sbb
pop
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
cmp
jmp
push
adc
leave
test
dec
mov
ds
mov
mov
enter
pop
cmp
lea
mov
ficoml
scas
loop
popa
popf
jge
adcl
sarb
jg
and
lods
adc
mov
mov
add
in
push
rorb
mov
outsl
jo
les
pop
dec
dec
sarl
xor
cmpsl
mov
adc
pop
ds
je
shl
mov
mov
inc
inc
rcll
sbb
ja
mov
imul
add
lret
xchg
loopne
cltd
aad
sub
xor
test
fistpl
das
ds
or
xchg
arpl
cmp
inc
jne
cmp
stos
inc
lahf
xor
cmpl
hlt
xchg
pop
mov
cmp
clc
pusha
lods
adc
xchg
add
rcr
sub
loopne
or
js
push
add
mov
inc
js
sub
vmovd
add
or
cmp
add
in
pop
mov
or
inc
lsl
in
or
rcrl
or
xor
sub
sar
add
out
rclb
jmp
jg
loop
sarl
aaa
fistpll
jg
push
inc
adc
push
jmp
push
xor
jo
mov
dec
jne
shlb
mov
imul
or
or
xor
mov
je
xor
adcb
or
jne
sbb
add
jne
push
inc
outsl
stos
and
inc
cli
pop
pop
ret
fnsave
sub
sbb
shl
je
popf
bound
add
cli
shr
add
clc
enter
aaa
push
popf
cmp
jg
mov
xlat
jl
js
in
adc
xchg
test
outsb
adc
adc
add
push
adc
ret
mov
push
xor
push
or
shll
enter
or
and
push
sbb
fdivs
xor
call
xchg
add
ljmp
add
nop
push
pop
mov
and
sbb
push
add
negb
shrb
lret
or
push
sbb
test
addl
push
or
mov
sbb
orl
xchg
jo
add
xchg
pusha
outsb
mov
push
xlat
cmp
imul
push
fldl
or
mov
rcl
fiadds
mov
popf
pop
dec
enter
bnd
in
jno
xchg
mov
jp
les
out
fcmovnbe
jle
sbb
jmp
and
add
and
pop
mov
imul
push
dec
add
and
sbb
stc
jbe
test
add
sbb
xchg
adc
fbld
lods
jno
imul
in
shl
aad
call
jmp
loopne
or
stc
pop
sbb
int
adc
jmp
pushl
jge
mov
jmp
mov
mov
in
in
fcomps
adc
cld
and
sub
js
and
push
xor
bound
mov
adc
jne
lea
xor
inc
lock
nop
dec
dec
sahf
out
ficoms
pop
push
dec
repz
loope
fcoms
in
into
cmpsl
jge
mov
rclb
pop
stc
es
mov
add
int3
and
and
mov
mov
jb
push
inc
and
mov
fs
jle
imull
pop
ficompl
loopne
pusha
or
mov
cmp
jp
push
push
cltd
jmp
inc
faddl
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
xor
fst
scas
cld
outsl
mov
test
cld
divl
adc
xchg
xchg
and
pop
dec
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
loop
sbb
popa
out
or
inc
cmpl
sbb
mov
push
aad
adc
inc
clc
adc
loop
ret
or
adc
xchg
dec
cwtl
or
xchg
ds
jl
mov
jbe
xchg
lcall
jne
cmp
outsl
jnp
mov
sub
dec
addb
jmp
movsb
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
rorb
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
shlb
js
add
xchg
dec
rorb
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
adc
testb
mov
outsl
or
jge
lcall
mov
jns
mov
enter
shlb
rorb
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
rol
mov
pop
cs
int3
pop
or
add
subl
xor
sub
iret
es
lock
pop
sbb
sub
popa
mov
jns
idivl
jb
inc
xor
lods
es
adc
adc
mov
fsubl
cwtl
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmpb
ret
add
cmpb
xor
mov
mov
cmp
push
outsl
ss
cmpsb
rclb
js
pop
xchg
cmpsl
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
sub
rolb
sbb
inc
in
test
es
inc
push
cmp
mov
pop
mov
rorb
push
or
stos
nop
cmpb
out
xchg
mov
push
iret
and
mov
pop
sti
cmp
movsb
test
stc
mov
push
adc
loopne
push
insb
cwtl
imul
roll
or
les
movsb
ret
and
mov
jg
orb
cmp
sahf
cmpsl
aam
sub
jnp
mov
pop
aam
mov
adc
fcomps
pop
fnstenv
adc
loopne
push
rolb
adc
xor
sbb
add
mov
mov
push
dec
adc
cs
fwait
sub
fwait
cmp
outsb
inc
sbbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xorl
sub
fdivrl
jecxz
inc
fstpt
and
loopne
cmp
add
test
adc
pop
scas
loopne
mov
mov
push
fisubs
adc
sar
and
cmp
je
pop
clc
ljmp
cmpl
mov
xchg
sub
mov
test
stos
test
ficomps
sar
dec
int
mov
xchg
lea
addb
mov
push
fsubrl
pushf
adc
cmpb
insl
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
sub
dec
outsb
push
inc
scas
xchg
dec
or
scas
add
push
mov
adcb
cmpsb
icebp
xlat
mov
push
xor
mov
cs
mov
jb
je
jle
adc
xchg
sbb
pop
test
neg
adc
neg
ret
lods
or
cmpsl
cmpsl
sub
cmp
mov
daa
movsb
movsl
movsl
lea
enter
cmp
and
mov
mov
mov
lret
mov
lahf
inc
repz
cmpsl
lock
or
mov
sbb
idiv
push
pusha
ficoms
inc
jmp
dec
data16
pop
inc
dec
leave
shlb
test
cs
sti
mov
jmp
dec
and
lods
sbb
roll
mov
xchg
xchg
cs
or
sub
jl
pop
sbb
jmp
dec
adc
scas
adc
sub
out
ljmp
or
sbb
sbb
jnp
fisttpll
mov
incl
sbb
or
mov
sub
mov
mov
mov
iret
jmp
mov
xor
jecxz
les
je
jmp
mov
adc
inc
inc
lea
push
add
hlt
in
sbb
add
jne
cmp
hlt
push
nop
loopne
add
xchg
loope
outsl
nop
sbb
cmpsb
jmp
sbbl
jp
andb
sahf
rcl
dec
push
add
pusha
stos
xchg
je
imul
or
inc
adc
cld
push
inc
daa
pop
mov
mov
pop
lcall
xlat
ret
pop
mov
push
jno
push
or
hlt
sahf
cmpsl
stc
mov
push
fdivrl
rolb
ret
jl
aam
lods
enter
test
pushf
or
add
sbb
inc
mov
and
fsubrs
sbb
xchg
mov
lea
pop
or
pop
out
rolb
aas
jl
xor
call
xchg
seta
mov
test
xchg
xlat
loope
pop
pop
sbb
fisubrl
push
lock
aas
pop
lea
aas
xor
sub
or
aas
pusha
fs
das
les
scas
movsl
push
fnstsw
adc
mov
shll
scas
outsb
inc
aad
ss
outsb
inc
xlat
adc
sbb
mov
outsb
rorl
enter
cmp
xor
and
add
aaa
or
call
call
push
jle
inc
mov
xchg
pop
jb
test
rol
and
pop
rcrl
sti
enter
aad
sbb
adc
push
leave
call
in
add
aad
cmc
push
xchg
fidivrs
and
add
test
inc
leave
add
aas
dec
movsb
bound
in
xlat
stc
decb
out
mov
mov
push
cwtl
mov
cwtl
adc
inc
faddl
cwtl
inc
add
lods
mov
sbb
sbb
in
rcr
mov
lea
cmp
push
mov
and
cmp
push
mov
jecxz
loop
mov
addr16
test
inc
cwtl
xor
jb
test
push
nop
sbb
inc
dec
mov
and
repnz
push
dec
push
or
inc
cwtl
nop
push
nop
dec
dec
nop
mov
mov
pushf
cwtl
jb
leave
add
cmp
add
popa
xor
aaa
insb
lcall
or
hlt
jne
xor
shrb
arpl
cmp
repz
mov
insl
inc
sub
addr16
mov
mov
and
popa
mov
test
add
addl
and
and
xorl
pusha
xor
int3
xchg
lods
aam
or
inc
or
pop
pop
iret
add
add
sub
add
pop
mov
addl
push
sbb
fmuls
jns
xor
aaa
int
or
iret
push
jmp
jnp
jno
das
mov
push
jg
mov
or
sbb
fsts
dec
jne
add
jno
pop
mov
clc
adc
movsl
jecxz
ss
rcrb
or
add
and
xchg
inc
cltd
js
test
mov
orb
sbb
ja
js
sbb
mov
push
sbb
cmp
adc
and
sbb
xchg
test
loope
imul
and
loope
pop
push
loopne
xchg
xchg
dec
sbb
les
loope,pn
shr
je
mov
fwait
pop
outsl
push
push
dec
adc
push
and
and
pop
dec
push
out
fnstsw
outsl
inc
or
jbe
repz
ret
cmpsb
outsl
ja
daa
loop
jg
lea
mov
jo
in
int3
pop
adc
jg
ffreep
lea
lea
inc
out
leave
inc
xchg
and
sub
fwait
mov
shrb
pop
xor
dec
cltd
xchg
movsb
pusha
jp
in
aaa
add
inc
push
negl
cmp
aas
ret
mov
shrb
lret
ret
mov
inc
cwtl
cmpl
popa
mov
rcr
xchg
sbb
sub
mov
push
aad
lret
and
inc
leave
test
loopne
adc
or
clc
xchg
cmp
cmpl
shlb
adc
xchg
loopne
leave
loopne
inc
jns
mov
lock
xor
xchg
pop
test
rcrb
in
mov
pop
mov
ds
or
hlt
push
mov
into
sub
dec
and
dec
test
or
add
mov
push
or
leave
cmp
bts
jmp
mov
cs
sub
push
jbe
fwait
mov
and
lods
imul
decb
js
add
inc
adc
and
cmp
and
cmp
xchg
idivl
inc
inc
inc
add
mov
pop
or
cmp
add
cmp
pop
xchg
sub
rol
push
mov
lret
out
add
xor
test
adc
lods
aas
xor
ficomps
cmp
jne
cmp
mov
add
add
inc
mov
add
inc
inc
or
loopne
cmp
andl
dec
mov
ljmp
mov
adc
or
and
jmp
cmp
nop
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
aas
pop
popa
fs
rcrb
xor
pop
roll
add
pop
adc
inc
or
andb
cmp
loop
jae
ja
adc
mov
sbb
and
icebp
sub
rcll
jmp
inc
or
int3
add
push
xchg
add
mov
fists
rorl
test
or
mov
loope
inc
out
movsb
lods
rolb
inc
push
cmc
fsub
sbb
cmp
adc
gs
ret
in
jmp
outsl
mov
jbe
add
sbb
gs
mov
inc
cmp
jg
inc
sbb
and
xor
pop
add
call
js
dec
and
adcl
lods
mov
cmpsb
ss
out
dec
adc
add
in
int3
or
xor
xchg
call
mov
mov
adc
add
push
pop
pop
add
lods
sar
notb
adc
lahf
and
push
push
pop
push
sarl
cld
enter
add
std
or
jne
dec
pop
dec
incb
pop
push
popf
shl
jnp
pop
adc
addr16
add
mov
call
adc
incl
mov
inc
pusha
loopne
pop
cs
je
cmp
in
add
dec
stos
dec
mov
add
mov
and
dec
cld
clc
daa
and
adc
or
aaa
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
xor
adc
and
push
ds
and
cld
mov
clc
es
fcomi
js
mov
mov
popa
inc
mov
dec
fsubrs
clc
int3
pusha
mov
sub
fbld
sahf
mov
orb
jbe
int3
jae
cs
aas
lea
add
add
push
xor
out
scas
mov
cmp
lea
push
mov
push
jbe
andl
pop
mov
rolb
fldenv
or
push
movsl
rolb
pop
pop
lock
test
add
into
js
push
je
cltd
sub
mov
mov
push
sub
lea
push
fabs
mov
jbe
daa
mov
loop
and
sub
pop
dec
std
pop
adc
xor
and
aas
sbb
push
int
sarl
jle
lea
daa
test
hlt
orb
mov
dec
lock
dec
sub
add
pop
movb
lcall
das
xchg
pop
dec
inc
push
jle
sbb
jb
push
push
inc
add
push
xchg
pop
pop
movsl
pop
call
push
add
mov
ret
mov
xor
cmp
movsb
or
js
pop
sub
add
arpl
xor
faddl
add
and
testb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
cli
mov
xor
lds
adc
or
ljmp
jp
lret
pop
push
and
push
or
or
or
pop
push
and
cmp
pop
test
lock
sar
shl
add
nop
adc
bound
outsb
jecxz
mov
add
mov
inc
inc
jo
sbb
dec
daa
test
add
mov
mov
test
push
orb
jmp
mov
mov
jmp
lea
sub
cmc
push
jge,pt
cmc
rep
inc
sub
push
insl
or
or
xor
mov
out
cmpl
add
or
je
push
mov
sbb
lods
mov
cld
call
add
adc
out
pop
test
push
pop
sub
adc
mov
mov
mov
movsb
rorb
add
adc
movsb
cmp
imul
push
lcall
push
cmpb
or
shlb
push
shlb
xor
je
inc
movsl
inc
and
push
paddusb
sahf
mov
lock
fcmovnbe
dec
pop
sbb
cmp
inc
adc
out
repz
lea
test
not
push
lret
or
lea
dec
test
hlt
push
test
jb
jae
and
mov
mov
mov
mov
push
dec
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
add
fbstp
jmp
mov
sbb
loopne
in
loopne
inc
sti
cmp
mov
inc
inc
adc
cs
cmp
stc
cs
sub
pop
inc
dec
inc
pop
dec
dec
repz
mov
stos
aas
push
and
lods
out
insb
test
jb
fnclex
sub
sbb
mov
add
fnsave
mov
iret
jmp
addr16
mov
add
movb
inc
add
add
clc
stc
push
pop
sbb
jo
mov
push
leave
test
xchg
in
hlt
jle
enter
adc
and
sub
int3
add
jo
add
ficoml
sbb
testl
sbb
sbb
mov
into
mov
sbb
xchg
jge
inc
push
sbb
inc
clc
cmp
jne
add
xchg
push
test
and
subl
or
adc
add
jmp
data16
xchg
stc
jmp
xor
aas
ljmp
add
mov
out
jecxz
bswap
loopne
xor
add
inc
push
movsb
icebp
gs
ret
or
popa
call
adc
and
inc
pusha
adc
jno
mov
jge
sti
jle
jns
cmp
push
movsl
popa
sub
adc
pop
movsb
push
add
and
aas
clc
or
mov
lock
cmp
pusha
mov
insb
pop
lods
and
or
push
aad
adc
insb
dec
mov
jb
shl
subb
adc
pop
lea
adc
test
push
es
mov
sbb
in
push
shl
popf
scas
mov
lahf
add
jnp
shrb
push
enter
add
js
jb
mov
pop
xchg
fadds
ret
sub
xchg
add
jmp
sti
insb
rorb
rcl
addb
fdivrs
or
lock
mull
lsl
jmp
lock
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
test
mul
pop
jb
cmp
or
cmp
or
roll
push
adc
stos
test
jle
neg
inc
lret
scas
enter
pop
ret
adc
ret
sub
je
sarb
xchg
stos
pop
jmp
jbe
and
mov
inc
adc
cmc
inc
in
addb
and
inc
xor
call
cwtl
jbe
xchg
or
xchg
icebp
cmpb
sub
pop
or
pusha
mov
mov
xchg
add
cmp
push
cmc
ljmp
stos
test
xchg
mov
repnz
adc
mov
dec
cmp
notb
adc
inc
and
add
xlat
mov
add
subl
mov
push
repz
xchg
inc
clc
pop
xor
inc
add
push
sbb
and
sbb
cmp
sbb
insl
and
out
mov
xchg
and
ret
ret
es
pop
ret
mov
push
lcall
and
and
add
xor
in
out
fildll
push
push
pop
nopl
imul
add
cmp
mov
sub
inc
loopne
xchg
popa
adc
ljmp
jne
push
add
test
out
cmp
pop
inc
cmp
mov
add
stos
adc
shll
popa
dec
add
push
fs
push
mov
fadds
dec
and
loope
or
pusha
and
or
pop
inc
push
inc
push
or
xchg
lret
movsl
mov
add
lock
adc
cmp
mov
or
pop
outsb
je
add
or
jge
dec
cs
xchg
jbe
and
in
rep
fsub
cmp
inc
and
sbb
sub
sub
mov
movsb
cmpsl
cmc
roll
add
cwtl
push
pop
cmpsb
mov
daa
loop
les
je
mov
sub
or
xchg
sub
mov
xor
sub
mov
imul
inc
push
push
add
mov
xchg
xchg
faddl
add
pop
push
imul
push
add
adc
pusha
iret
call
mov
sarb
ja
dec
fcompl
aam
sarb
push
data16
ret
push
je
mov
js
test
sub
push
mov
sub
push
mov
fcompl
test
int3
cmp
mov
lds
lods
int
mov
jmp
adc
outsl
push
lret
dec
jae
adc
imul
inc
push
lods
mov
xchg
jbe
dec
xchg
fdivrs
icebp
lock
nop
aam
xor
in
adc
inc
inc
fidivl
jge
add
aad
mov
movb
and
enter
jae
push
sub
push
into
sub
push
ljmp
cmp
jg
inc
jmp
mov
mov
data16
jne
imul
bound
fnsave
movsb
dec
push
inc
mov
enter
jno
in
dec
xor
jbe
je
dec
xor
je
mov
xchg
mov
rolb
xor
icebp
xor
pop
aad
and
mov
push
adc
and
add
adcl
push
stos
xor
mov
bound
sbb
sub
adc
jnp
lcall
jge
mov
sahf
jge
jae
add
push
and
mov
aaa
xor
or
scas
add
mov
push
pop
stc
xor
pop
inc
rclb
std
dec
add
mov
cli
and
shl
test
push
pop
pushf
or
shll
lcall
mov
cmpsb
ljmp
mov
jp
xor
sub
and
mov
cld
adc
ja
mov
sub
rol
clc
ret
adc
orl
and
mov
test
js
xchg
adc
and
orl
das
adc
push
gs
and
fildll
pop
cmp
or
cltd
sbb
rclb
pop
notl
stc
loopne
mov
stos
sub
inc
lock
popa
and
xchg
add
or
adc
outsl
xorb
fs
push
fs
and
icebp
jg
into
std
or
and
or
xor
mov
or
je
xchg
cli
adc
lea
lea
or
mov
jnp
out
sahf
pop
jbe
cmp
push
sbb
sbb
fmull
or
faddp
fiadds
loopne
push
pop
inc
mov
adc
adc
push
push
add
and
inc
jle
ret
mov
mov
mov
and
pushl
add
jno
push
cmp
andb
loop
mov
push
push
daa
shl
push
xor
jo
mov
push
dec
mov
leave
ds
arpl
ret
jmp
push
add
out
bound
enter
xlat
insb
enter
js
adc
add
or
jo
outsl
rol
jl
or
sbb
cmpsb
shlb
push
sub
add
jns
mov
pop
push
hlt
cmp
cmp
lret
cmp
and
movsl
pop
mov
xchg
and
pop
adc
test
aas
push
ds
call
add
xor
xor
loopne
repz
mov
jg
jo
scas
call
aam
sbb
in
rol
cmpsl
mov
pop
cmp
sahf
fs
add
sub
mov
xor
insb
je
sub
and
push
or
sub
ss
dec
hlt
push
mov
push
imul
adc
loopne
mov
jmp
imul
pusha
jg
lcall
stos
ret
add
adc
adc
scas
add
and
clc
das
xor
lock
mov
gs
adc
ds
rol
pop
ja
and
push
adc
adc
movsl
fisttps
jp
mov
adcb
add
ret
xor
adc
push
sub
ss
or
push
xor
lock
out
xchg
inc
mov
mov
das
ficoms
push
mov
cmc
pushw
mov
adc
sti
add
mov
inc
fsubr
es
outsl
subb
inc
jmp
mov
cli
popf
pushl
leave
xor
dec
sub
jg
sbbb
xchg
pop
cmpsb
daa
add
sub
adc
cmp
jge
and
inc
mov
push
orb
rorl
nop
decb
fsubrs
cmpsb
mov
or
loopne
icebp
cmpsb
mov
cmp
jecxz
aas
insb
popf
std
sub
push
lods
mov
cmp
andb
or
std
inc
jmp
push
mov
cs
push
or
xchg
aad
rcll
lea
and
cmpsb
nop
out
add
mov
aad
or
and
sub
add
fcoml
dec
sub
or
das
jl
incb
push
mov
movsb
andl
mov
fwait
mov
stos
popf
push
mov
scas
and
sbb
push
pop
mov
cmp
jle
jle
sub
cmp
xor
popf
shl
sbb
jmp
dec
push
in
jbe
cmp
inc
sub
jae
ret
or
cld
data16
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
iret
rcrl
mov
fucomp
jge
negl
movsb
jne
repnz
cs
mov
jae
imul
sbb
inc
popa
cmp
and
dec
jo
xchg
rclb
outsb
js
push
bound
lahf
and
cmp
jnp
lea
push
and
inc
mov
xor
mov
push
movsl
jbe
sub
mov
mov
loopne
je
mov
loop
sub
in
mov
popf
es
insl
ret
repnz
sbb
add
or
loope
testl
fnsave
clc
inc
jmp
sahf
dec
dec
or
cmp
cmp
inc
cmp
and
dec
mov
ja
lock
cmp
or
jecxz
call
push
inc
jmp
cmp
int3
je
pop
xor
scas
mov
dec
push
adc
jne
stos
pop
rorb
aas
enter
stos
xchg
push
fsubrs
cwtl
jge
dec
aam
jb
dec
adc
loop
out
sub
cmp
cmp
mov
mov
pusha
movsl
sub
mov
out
in
mov
or
sub
xor
jne
add
xchg
mov
loope
add
ss
cli
int
call
add
aaa
or
and
add
mov
push
data16
movsl
xchg
cmp
add
enter
ret
cmp
mov
out
addl
jne
pop
neg
sarb
roll
dec
pop
daa
lea
nop
inc
mov
jne
inc
xlat
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
decb
adc
pop
inc
testl
out
jne
sbb
cs
lock
sub
decl
lret
jne
inc
or
pop
adc
cmp
pushf
and
iret
int3
lcall
and
pop
xchg
nop
fwait
add
cwtl
xchg
test
push
pushf
insl
fildll
push
lea
lcall
test
mov
adc
clc
and
cld
sub
mov
cmp
jb
mov
push
mov
inc
ja
mov
incl
cmpl
insl
mov
xchg
pushf
xor
imull
movsb
mov
sbb
sti
jg
adcl
add
xchg
loop
sub
in
shll
shr
pop
insb
ljmp
ljmp
push
adcb
mov
bound
or
adc
inc
mov
lea
xchg
mov
aaa
or
ljmp
jg
and
shrl
shl
shr
or
mov
mov
adc
sahf
dec
mov
jne
outsb
mov
mov
aam
das
mov
push
sub
push
cmp
sub
jne
xchg
jo
sar
sub
rcr
loopne
aaa
xchg
fiaddl
mov
pop
inc
jo
fiadds
push
out
jmp
mov
in
aad
fisubrl
push
lds
add
dec
mov
mov
mov
and
push
int3
jmp
hlt
push
or
daa
mov
inc
add
outsl
popl
lods
test
ljmp
ret
jne
add
add
add
or
xorb
dec
adc
jmp
sub
test
sbb
sub
repnz
movups
xchg
pop
xchg
jo
mov
inc
mov
mov
inc
sbb
add
out
add
and
push
ret
or
iret
repz
test
enter
push
out
imul
ret
call
mov
or
add
testb
adc
sbb
mov
dec
jecxz
sub
push
outsb
clc
add
pop
int3
sbb
jne
xchg
pop
jno
mov
arpl
cmp
mov
add
xor
add
faddl
or
cmp
pop
test
arpl
pushf
add
or
jne
dec
fld1
mov
push
add
mov
sbb
dec
adc
jo
in
ret
mov
rcl
repz
inc
sbbl
mov
push
outsb
cmp
mov
xchg
std
insl
ret
dec
mov
mov
pusha
xchg
inc
mov
test
pop
pop
lea
adc
fwait
mov
imul
rorl
sbb
push
andl
pop
add
insl
fs
xorl
inc
outsb
test
or
pop
call
inc
outsl
pop
rcl
dec
sar
pop
rorb
lret
mov
sbb
push
jno
iret
jmp
sbb
hlt
andb
loope
cwtl
pop
mov
xchg
inc
lahf
cmpsb
jns
movsb
lods
movsb
adc
mov
test
sahf
add
push
add
or
push
lock
shrl
dec
xor
push
lcall
xor
or
repnz
mov
pop
jmp
ret
jmp
mov
imul
push
xchg
or
jmp
mov
in
sti
cld
add
push
in
add
or
fs
cmp
movsb
iret
lock
inc
loope
push
lea
std
jg
iret
add
leave
sar
mov
aas
or
testb
adc
andl
sub
mov
adc
test
cmp
lret
loope
cmp
pushl
push
mov
mov
sbb
cltd
lods
loop
inc
loopne
inc
pop
ret
test
sub
in
loopne
clc
subb
inc
pushl
mov
rcll
jmp
pusha
cmp
mov
cmp
cmovb
popf
and
pushw
push
sub
xchg
enter
push
inc
mov
add
add
mov
js
mov
mov
add
fists
outsl
adc
push
hlt
mov
andl
test
sbb
outsb
jmp
and
jae
pop
imul
sub
add
mov
enter
scas
fsubs
in
adcb
popa
xchg
inc
adc
fadd
inc
call
jmp
mov
adc
dec
inc
outsb
mov
push
dec
hlt
lea
pop
or
inc
pusha
jge
cmp
pusha
xchg
sbb
lea
addb
jns
lock
movb
rcr
pop
add
cmpsb
inc
mov
shrb
jo
not
mov
incl
cmpsb
int
push
test
push
or
add
jmp
cmpsl
mov
sbb
cmp
test
jne
gs
inc
xor
mov
pusha
cmpsb
sbb
pop
ret
jnp
sub
push
jmp
sub
inc
sub
inc
cmc
scas
dec
mov
jl
pusha
dec
iret
test
arpl
mov
addb
add
pop
cld
jnp
mov
std
sub
jge
mov
mov
inc
mov
sbb
add
xchg
dec
xor
enter
or
out
ret
and
mov
std
xchg
clc
jo
inc
lret
movsb
adc
dec
xor
jae
mov
pushf
loopne
imul
jmp
sbb
push
addl
pop
movsb
lds
xchg
and
out
sub
jne
jge
dec
cmp
ret
sub
clc
and
les
push
xor
jne
push
sbb
shlb
and
jns
add
or
adc
fiadds
into
jg
sbb
movsb
or
pop
data16
mov
test
sub
sbb
and
or
and
add
mov
movsl
sub
push
jne
sbb
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
push
shrb
adc
lock
enter
lods
std
cmpsb
test
inc
push
es
andb
sub
fiadds
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
cs
loope
pop
negb
add
ret
mov
fidivrs
adcl
rdtsc
andb
cmp
lret
and
sbb
into
push
xchg
cmpsb
or
jmp
les
test
or
mov
cmp
sub
pop
test
icebp
and
or
lds
les
lock
loope
inc
ss
icebp
jbe
lret
jmp
sbb
mov
addr16
xor
adc
orb
mov
push
fsubl
inc
out
or
xor
inc
mov
mov
fwait
dec
test
xchg
add
add
xor
cmpb
int3
inc
popf
mov
mov
mov
mov
adc
fcompl
push
nop
mov
mov
and
cmp
mov
jns
shlb
or
xchg
push
inc
push
mov
push
adc
pop
xor
es
aaa
scas
lock
je
aaa
inc
insb
pop
cmp
aad
mov
mov
jmp
test
push
and
enter
jl
add
jg
jmp
addl
js
pop
sbb
xor
shr
or
aaa
mov
cmp
cmp
loope
add
mov
jle
ljmp
jb
ret
mov
add
inc
lcall
adc
or
clc
pop
adc
push
inc
mov
dec
ret
pusha
push
sarl
inc
mov
dec
addl
push
xchg
push
dec
lret
push
or
loope
jmp
xor
xor
mov
dec
add
adc
test
rclb
push
into
push
and
jecxz
lahf
les
cmp
and
pop
add
cmp
sbbb
xchg
data16
push
and
testl
jb
daa
or
sub
inc
nop
mov
add
sbb
and
addr16
push
loopne
push
inc
dec
pop
shl
mov
daa
mov
mov
and
inc
jl
mov
scas
add
inc
lods
xchg
sbb
data16
rcrl
push
andl
sbbb
add
push
inc
in
in
push
mov
or
fdivl
push
enter
mov
jo
or
push
out
and
pop
cwtl
push
jne
push
jge
mov
out
int
xor
pop
movsb
dec
rcrb
or
fcoms
cmp
lcall
push
pop
inc
inc
pushf
or
sbb
mov
adc
ret
std
add
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
in
or
mov
xchg
mov
adc
xor
lret
les
push
jmp
cwtl
clc
pop
dec
cmp
mov
in
incb
mov
or
push
dec
icebp
imul
add
adc
adc
mov
imul
dec
or
in
xchg
and
or
cmpsl
shrl
clc
mov
fadd
or
push
sbb
dec
cmpb
pop
dec
and
push
push
jne
jge
push
rcll
test
xor
cmpl
push
mov
or
movsl
sbb
fisubl
or
jmp
nop
or
cmpl
and
adc
push
mov
mov
mov
mov
sub
pop
push
mov
adc
jno
lods
in
mov
jge
add
cmp
test
xchg
push
and
sub
cwtl
or
int3
mov
jo
inc
mov
pop
inc
fnstsw
mov
sbb
inc
mov
or
in
in
out
add
or
bound
adc
adc
icebp
cmovnp
pop
add
loopne
jmp
cwtl
or
les
xchg
das
mov
or
cwtl
daa
push
adc
jmp
jbe
or
push
test
mov
inc
inc
dec
cld
movb
roll
das
out
sub
inc
pushf
xor
mov
ret
add
add
bound
inc
loop
push
push
pop
and
sbb
pop
add
adc
or
stc
jb
ljmp
xchg
inc
stos
sub
call
add
push
orb
mov
xorb
or
clc
jnp
cmpsl
or
add
inc
in
test
pushf
push
jne,pn
arpl
sub
or
add
out
and
inc
fsubs
movsl
out
add
rcr
nop
subl
shl
sbb
aad
je
jl
xor
push
ret
sub
pop
inc
test
cld
pop
in
cmp
jne
cwtl
add
add
xchg
xorb
test
mov
push
adc
jge
mov
rcrb
push
movsb
xor
mov
pop
mov
mov
dec
cs
and
ljmp
fistpl
incb
or
je
sarb
inc
cmp
mov
movsb
push
sub
add
push
mov
dec
jp
sbb
or
imulb
mov
orl
and
sbb
cmp
mov
fdivl
mov
add
in
cmp
lahf
daa
testl
lods
jle
lcall
scas
adc
fisttpll
call
jne
stos
out
repnz
sub
pop
or
inc
mov
add
stos
clc
adc
jle
out
arpl
mov
mov
movsb
dec
mov
sbb
mov
inc
add
enter
xchg
out
lret
adc
sbb
iret
add
jg
cmp
call
les
jae
add
loope
mov
jo
push
push
in
xchg
pop
sbb
addr16
addr16
ljmp
and
add
mov
adc
jo
jecxz
cltd
mov
or
cmp
cmp
adc
in
jbe
ss
in
in
sub
xor
int
loopne
cmp
inc
leave
leave
in
movsb
and
inc
cmovs
leave
leave
push
push
pop
add
jb
fs
jb
je
jl
iret
sbb
add
adc
fs
dec
mov
xchg
cwtl
pushf
dec
es
mov
dec
repnz
xor
enter
leave
and
es
xchg
dec
xor
in
xchg
dec
xor
in
aam
hlt
dec
xor
and
cld
add
inc
jo
inc
add
add
xor
or
adc
and
sbb
and
and
dec
sub
and
dec
xor
cmp
xchg
dec
roll
dec
dec
es
jbe
mov
daa
cltd
fs
pop
pop
pusha
sbb
cmp
jg
pop
add
add
or
add
test
push
rorb
xor
mov
xor
lcall
mov
and
adc
nop
adc
rorb
sbb
xor
and
and
cmp
cmp
mov
dec
rolb
int
xor
dec
int3
add
sub
enter
pop
sbb
mov
adc
add
loope
js
ret
and
and
jmp
or
pushl
je
dec
repz
sub
fcom
sbb
pop
push
or
jle
dec
sub
pop
add
xchg
xor
sub
faddp
jle
xlat
mov
lret
and
sbb
dec
xchg
add
or
or
out
and
mov
mov
or
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
rcl
add
test
js
add
fcoms
adc
xchg
test
dec
cmp
fcmovbe
xor
ss
mulb
shll
and
test
rorl
or
sub
or
call
add
pop
orl
lret
jmp
inc
popf
mov
mov
cld
mov
and
jae
mov
sbb
add
or
dec
or
jg
dec
clc
or
or
inc
and
sbb
es
inc
ljmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sbb
xchg
push
sahf
sub
pop
fstp
cmp
ds
pusha
fldl
cmp
jmp
mov
loope
dec
jg
testb
dec
in
mov
adc
sti
add
pop
jns
testl
fistpll
xchg
sub
mov
imul
jne
orl
and
adc
or
add
add
out
and
sbbb
or
jnp
jb
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstps
jmp
fisttpll
sub
adc
fldt
aam
outsl
loope
push
hlt
adc
push
stos
push
jbe
je
adc
divl
push
sbb
push
cmp
push
xor
test
or
add
push
or
inc
call
loope
push
aaa
sbb
mov
test
out
cmp
pop
add
rolb
fsubr
dec
sub
sub
jmp
sub
jb
jp
push
or
das
add
lods
sbb
test
das
add
sub
dec
add
mov
rclb
mov
inc
mov
dec
xor
mov
push
add
mov
add
sbb
in
or
test
xchg
mov
frstor
jne
repz
mov
push
mov
test
rcll
jg
data16
pop
xchg
scas
cld
aam
xchg
mov
cli
shrl
ficoml
orl
stos
xchg
sub
jle
jp
addr16
push
pop
jmp
pop
data16
lock
icebp
lock
pop
lcall
cmpsb
mov
sbb
jae
push
pop
cwtl
out
add
addr16
jle
push
add
push
sarb
sarl
fistps
and
pop
mov
jmp
push
pop
adc
adc
ret
and
lcall
add
outsl
add
dec
pop
fsubs
inc
cmp
je
sbb
fmull
pop
cltd
cmpsb
imul
and
hlt
adcl
and
je
pushf
sub
cmpsl
add
scas
stos
and
or
sti
dec
and
out
push
cmp
fstpl
inc
popa
add
fsubrp
mov
mov
leave
dec
inc
outsl
mov
and
lock
add
test
popa
inc
js
or
or
mov
ss
jle
or
fildl
sub
xchg
cmp
sub
lock
or
add
or
mov
cmp
adc
jae
mov
and
jbe
shrb
push
das
adc
inc
cmpb
scas
mov
imul
push
xchg
or
jl
push
jno
addb
add
push
or
mov
out
jne
je
mov
xchg
loopne
jecxz
into
shlb
dec
add
push
cmp
add
shufps
mov
stos
xchg
lret
lock
or
sbb
decl
add
push
mov
sub
into
pop
out
addr16
mov
sbb
inc
andb
ret
lea
sub
enter
test
dec
out
fld
fucomp
pop
fnstcw
lahf
add
mov
mov
xchg
orl
dec
pop
and
mov
adc
sbb
shll
push
or
js
mov
adc
add
or
push
out
mov
sbbl
or
or
push
and
jo
mov
sbb
sub
or
sub
push
sbb
hlt
mov
dec
ljmp
xchg
jnp
fnstsw
movswl
shll
inc
flds
and
rorb
xchg
xor
fdivl
or
insl
lahf
and
mov
push
push
mov
or
or
nop
fcmovnbe
fwait
mov
adc
sbb
pop
mov
adc
repnz
jp
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
add
sbb
push
lret
dec
sbb
xorb
push
cmp
xsaveopt
pop
insl
test
mov
mov
cmp
or
andl
pop
popa
cmpsl
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
int3
or
cmpsb
test
mov
dec
int
mov
jo
and
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
mov
popa
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbbl
push
pushf
add
lcall
dec
sbb
imul
mov
add
jo
fwait
mov
rorb
je
push
cmpb
test
repz
push
sti
jbe
xchg
les
test
pop
js
adc
daa
xor
push
jb
sub
or
loope
push
mov
add
jne
lret
pop
les
inc
std
cmp
stos
or
or
mov
dec
imul
dec
push
or
inc
cltd
lock
add
jle
sub
pop
test
test
sti
into
jne
mov
mov
mul
pop
test
in
sub
jl
mov
xchg
fisubrs
stos
stos
jp
pop
pop
push
movl
jbe
cmp
push
test
rorb
push
mov
push
push
pop
add
popa
gs
xor
cmp
ret
dec
or
sbb
fiadds
mov
pop
mov
lret
push
inc
xor
rolb
ljmp
lret
loop
rolb
cmpl
and
fwait
sti
std
dec
dec
pop
pop
and
mov
out
mov
fsub
iret
loopne
adc
iret
jbe,pt
dec
imul
outsl
mov
add
cs
or
and
clc
sbb
sub
cmp
inc
dec
inc
push
pop
addps
add
lock
sahf
jns
add
sarb
and
mov
mov
or
cmp
pop
pop
clc
in
cmpl
add
xor
daa
or
idivl
pop
or
push
js
sub
inc
aam
iret
inc
mov
dec
xor
cmp
pop
addl
das
das
call
inc
loopne
dec
aam
lock
shl
sub
sub
in
lea
xor
adc
iret
push
ds
push
or
dec
dec
scas
and
aam
out
ret
xchg
and
inc
loope
test
fwait
or
pop
sub
mov
sbb
mov
and
lahf
or
cwtl
pop
jb
xor
push
and
test
lods
daa
dec
fbld
sbb
test
arpl
dec
cwtl
rorl
loopne
rcrl
dec
xor
cmc
and
sbb
add
jmp
pop
push
push
jb
or
add
mov
cmp
push
daa
jo
sbb
cmc
hlt
cmp
sub
push
aas
mov
sbb
xor
mov
inc
ret
frstor
jge
lock
movsb
addr16
das
cmp
test
arpl
arpl
daa
add
shll
sub
andps
cmpl
lock
stos
pusha
out
into
out
add
test
icebp
es
mov
and
mov
sub
mov
and
jge
mov
dec
lods
shl
test
cld
pusha
mov
jo
or
xor
xor
inc
or
fisubs
dec
add
lret
nop
lret
or
inc
lock
and
push
or
cs
or
sbbl
push
xchg
dec
push
in
inc
push
sub
mov
push
jne
in
push
mov
push
pop
dec
sub
pop
mov
push
pop
adc
mov
or
lock
dec
lret
push
adc
mov
or
stc
add
jbe
pop
jne
cmp
js
add
das
xor
es
mov
jle
inc
mov
fmuls
stos
mov
adc
or
repz
nop
mov
fcoms
xor
sti
scas
push
mov
xchg
cmp
insb
idivb
pop
inc
cs
or
ss
cmp
je
or
clc
mov
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
imul
add
add
sbb
and
fcompl
fistpll
jb
inc
adc
cltd
dec
enter
outsb
push
and
das
push
inc
leave
into
mulb
inc
iret
test
add
adc
push
jbe
xchg
or
xor
popl
loop
xchg
xor
adc
adc
push
add
adc
cmp
xchg
xchg
xor
sub
rol
fadds
or
sub
rcrl
or
fdivs
or
jle
xor
scas
cmp
ret
scas
dec
loopne
push
pop
sbb
rorb
sub
dec
adc
inc
les
sub
mov
popf
mov
inc
cmpl
mov
aam
shlb
sub
adc
push
pop
xchg
jecxz
adc
or
sbb
xchg
add
lods
ja
push
xor
jmp
sub
add
mov
mov
aad
sbb
mov
cmpsb
push
hlt
mov
mov
inc
aam
das
fsubrl
mov
fadd
inc
add
fs
cltd
popa
cmp
push
lcall
or
rcrb
testb
lcall
fldt
push
push
mov
daa
test
insb
in
jns
and
dec
or
xchg
push
mov
or
pop
gs
cmp
adc
movsl
and
and
mov
iret
ret
jmp
aad
and
scas
jmp
sbb
sub
adc
ja
add
adc
movsb
push
push
adc
shlb
or
lret
sbb
inc
sbb
pop
gs
or
mov
jmp
inc
shll
out
pop
xor
test
push
fadd
xor
xchg
mov
pop
add
xchg
test
mov
stos
cmp
jge
adc
cmp
push
inc
and
jb
xchg
ss
mov
or
mov
cli
mov
enter
or
or
adc
cld
push
and
fstpl
mov
or
jne
jb
sub
imul
lea
xchg
sub
cmp
inc
bound
cmc
mulb
test
sahf
push
add
sub
dec
sbb
test
enter
js
andb
bound
pushf
std
das
fdivrl
sub
leave
and
add
or
sbb
movb
and
mov
xchg
movsb
mov
neg
sbb
mov
adc
and
adc
jg
ret
pop
hlt
es
bound
shll
add
xor
popf
gs
or
dec
subb
pop
fidivrs
daa
and
call
xor
push
jb
add
cwtl
push
inc
aam
fisubs
or
mov
fldt
ja
setns
mov
or
xor
push
add
dec
loopne
push
clc
gs
sbb
rolb
fadds
movb
cmp
xchg
push
adc
fs
cld
add
inc
mov
enter
mov
dec
cmp
jge
mov
jl
movsl
clc
cwtl
xor
mov
mov
xor
out
andb
cmp
push
shr
pusha
cmp
subl
incb
push
adc
sahf
xchg
add
daa
and
ficompl
lock
push
ret
mov
xor
jo
out
shl
dec
nop
in
and
push
ret
in
sbb
js
jg
or
or
jmp
adc
or
shl
fimull
jle
cmp
jl
mov
fcmovb
jb
xchg
xchg
sbb
add
cwtl
push
in
lock
or
add
rcll
dec
dec
inc
dec
pop
rorb
sub
jb
or
sbb
cmp
sarl
in
in
icebp
push
orl
jo
and
and
adc
es
mov
dec
adc
push
loopne
mov
mov
push
inc
cmc
movw
shlb
push
jle
jmp
cmpb
push
sbb
lods
add
jmp
lock
sahf
fwait
lods
inc
enter
cmpl
neg
call
adc
lock
cli
ret
aaa
push
lods
sbb
pusha
addb
inc
mov
aas
mov
push
push
insb
shrl
lock
repnz
je
aad
or
inc
and
jbe
adc
addb
bound
or
push
push
mov
addb
sbbb
jne
push
adc
bound
nop
cmp
pop
sbb
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
sub
add
cmp
sbb
mov
ds
andb
fnstenv
outsb
outsb
mov
pop
or
pop
data16
in
add
imul
lds
aaa
inc
popa
je
inc
je
dec
add
add
cmp
xor
xor
sub
pop
sub
int
mov
sbb
push
mov
add
xchg
and
addb
bound
add
sbb
inc
mov
mov
and
arpl
add
pop
cmp
push
mov
or
sbb
test
and
out
ds
and
insb
daa
push
adc
cmpsb
xchg
cmpb
jne
nop
cwtl
mov
testl
cwtl
push
xchg
sarl
push
fprem
popa
sbb
hlt
adc
test
push
inc
dec
mov
mov
cmp
notl
ljmp
inc
mov
hlt
ja
in
and
mov
popl
mov
sub
add
aam
mov
lea
and
add
inc
test
setnp
jno
dec
sti
push
test
loop
push
pop
pop
decl
xor
gs
sub
and
stos
sub
ror
mov
std
es
pop
ret
push
addb
adc
xchg
movsb
jle
or
mov
and
fidivrs
aam
jbe
add
cmp
push
sub
test
sub
movsb
push
mov
pop
inc
mov
cmp
nop
xchg
adc
and
dec
fwait
xchg
mov
mov
cmpl
mov
rclb
cmp
cmp
mov
push
mov
fsubrl
or
mov
pop
pop
adc
mov
lock
pop
pop
pop
dec
sar
add
jl
cmp
enter
loope,pn
test
jb
adc
test
mov
ss
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
add
inc
out
add
xchg
orl
pop
adc
fistps
dec
ja
imul
sbb
push
adc
pop
ret
rorl
add
psllw
ret
stos
data16
test
leave
js
add
dec
mov
arpl
mov
dec
xor
gs
sbb
loopne
call
sbb
cmpsb
enter
loopne
cmc
int3
push
fidivl
outsl
mov
or
rcrb
fmuls
xor
mov
jle
stos
test
or
jnp
and
adc
fiaddl
into
or
mov
sub
xor
xor
pop
and
stc
push
adc
pop
mov
mov
stos
dec
xchg
or
or
and
pusha
outsb
add
sbb
repnz
jmp
inc
add
add
call
rorl
or
ljmp
add
ja
loop
clc
shr
add
or
xor
add
shr
or
mov
push
push
adc
fistpll
shr
lret
add
mov
testb
test
or
add
mov
mov
mov
cmp
pop
cmp
and
add
jl
adc
movsl
dec
in
sbb
cmp
or
dec
push
inc
lcall
adc
and
sbb
inc
fisttpl
cmp
dec
sbb
adc
adc
sub
xor
inc
sub
call
xorb
push
rorw
cli
and
push
rolb
or
add
mov
cmpb
addr16
aam
cmpsb
and
xchg
or
orl
test
sbb
gs
inc
stos
xor
push
loope
pusha
fmuls
mov
fsubrl
add
cmpsl
std
sbb
jne
mov
sbb
dec
roll
or
cmpsb
or
xchg
or
push
pop
je
data16
sub
inc
data16
lea
outsb
sbb
dec
or
lock
pop
add
orb
loop
leave
mov
sbb
push
inc
test
loope
aaa
push
sub
pop
dec
mov
lea
repnz
sub
ret
faddl
pop
or
cmc
mov
xchg
add
lret
pop
cmpsb
fs
subl
popa
mull
push
stc
and
or
adc
ret
mov
and
jno
or
adc
insl
mov
jo
fdivrl
ja
pop
pop
xor
stos
sbb
pop
and
and
loope
pop
adc
test
xchg
repnz
ret
mov
sub
add
jbe
ljmp
dec
xchg
xchg
dec
icebp
adc
add
sub
push
adc
sbb
mov
and
xor
or
js
or
js
jmp
clc
sbb
mov
and
mov
scas
faddl
out
add
aam
sbb
add
pop
je
add
xor
adc
addb
movsl
xor
cs
dec
cmp
mov
push
std
inc
or
and
subb
sub
push
add
mov
cmp
and
or
ds
mov
sbb
add
call
ss
imul
push
inc
adc
loope
rolb
push
pop
and
add
leave
cmp
xor
aad
enter
cmp
in
mov
cmp
jle
inc
call
ja
shlb
jp
stos
or
cmpsb
sbb
mov
fwait
inc
xor
fucomi
mov
xchg
adc
test
and
jl
xor
ss
add
xor
inc
aam
push
or
xor
rclb
stc
push
test
or
jns
push
in
jmp
add
test
and
push
dec
test
insl
fwait
orb
and
aaa
jne
cmpsb
sahf
and
push
cmp
sub
mov
aas
jmp
mov
adc
lret
mov
jnp
imul
inc
dec
add
addr16
jbe
rclb
rorb
add
ret
or
and
sbb
fprem
out
roll
leave
add
or
je
mov
iret
push
inc
cmpsb
add
adc
inc
sbb
xor
les
bound
enter
ror
xchg
add
movsl
sti
lods
pop
xchg
adc
pushf
jo
subb
mov
lret
arpl
popa
sbb
rorl
jo
orb
scas
mov
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
clc
rorb
push
shrl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
into
xor
adc
inc
cli
xor
dec
push
es
pop
or
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
adcl
sarb
sbb
dec
inc
push
outsb
rolb
inc
cmp
cmovae
or
jg
popa
add
arpl
insl
or
sbb
adc
jecxz
dec
pop
pop
andb
test
data16
pop
add
push
ljmp
cld
inc
ss
adc
sub
and
pop
adc
popa
xor
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rolb
inc
push
inc
mov
mov
sbb
or
mov
or
sub
adc
decb
add
es
mov
je
ljmp
subb
jl
out
push
cmp
ja
add
cmp
inc
xchg
jns
ret
cmp
jne
sarl
je
xor
adc
mov
inc
mov
pop
jl
pop
pop
je
dec
push
adc
adc
adc
iret
and
jb
dec
adc
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttps
push
movb
jmp
or
cmc
push
aaa
and
sti
add
mov
mov
jl
xchg
ret
mov
movw
jb
add
sub
inc
rcrb
les
out
xor
pop
mov
popf
testb
sbb
ret
mov
lods
sti
test
add
test
mov
fdivr
inc
jb
dec
mov
push
and
adc
rorb
adc
push
add
pushf
add
jmp
push
pusha
loop
mov
sub
push
imul
call
mov
imul
lea
sar
cs
mov
dec
into
movswl
xor
mov
neg
push
es
stos
mov
out
jge
cmp
mov
ret
inc
call
cwtl
inc
xorl
push
rcll
dec
sti
add
jmp
addr16
or
cwtl
mov
push
sub
inc
fwait
and
jl
mov
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
out
daa
adc
andl
lcall
mov
mov
addl
ja
cmpsl
cmc
mov
dec
rorl
inc
testl
lahf
push
push
fsubrl
mov
xlat
or
inc
adc
loopne
lea
rolb
xorb
inc
mov
bound
scas
les
dec
or
xchg
pushf
fcoml
dec
or
adc
into
movsb
xor
sub
xor
cmp
lods
sarl
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmpsb
jge
inc
lods
and
rorb
aas
jae
jle
cmp
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
fadds
push
dec
mov
jle
cwtl
shrl
sarl
shr
or
mov
dec
mov
pushf
ret
jp
cmc
cmp
lock
dec
and
jnp
repnz
add
cli
adc
repnz
repnz
rol
and
andl
loopne
rolb
es
push
fcom
or
cli
adc
and
fisubrl
popa
push
mov
dec
dec
nop
loopne
mov
push
fidivl
fldenv
enter
pop
and
or
push
pop
lret
enter
sahf
out
inc
mov
mov
dec
sbb
add
push
mov
or
inc
shll
clc
out
icebp
push
dec
dec
jge
out
mov
jb
pop
sub
jnp
adc
dec
in
aam
daa
adc
jne
cli
or
rcrl
fistl
inc
shlb
fdivrs
aam
enter
int3
jbe
dec
sub
movsb
sub
sbb
shlb
add
and
adc
dec
pusha
or
fmull
or
dec
rcll
mov
sbb
fcmovu
add
mov
or
inc
rcrb
cmove
add
xchg
add
idiv
and
xor
adc
mov
into
or
adc
inc
inc
mov
lock
and
repnz
add
inc
js
pop
hlt
lock
or
incb
jne
jne
cltd
add
loopne
pop
roll
sbb
lret
mov
dec
cmc
out
pusha
add
sbb
sub
xchg
sbb
idiv
xchg
mov
inc
add
inc
mov
dec
inc
cmp
jle
inc
aaa
stos
ljmp
sub
and
cltd
and
or
cmp
in
or
rcrb
stos
call
sahf
mov
xchg
cli
fcoms
xor
fiadds
mov
insl
call
mov
imul
call
leave
outsb
xor
mov
pusha
lea
push
js
dec
loope
mov
mov
add
lcall
add
fisubs
lods
jbe
add
into
sbb
or
ja
enter
loop
mov
sbb
sti
je
inc
ss
ljmp
or
lods
add
enter
outsb
fwait
pop
push
sahf
mov
and
dec
int3
addl
cmpsl
sub
test
call
add
add
xchg
add
into
or
mov
inc
ljmp
jmp
pop
add
dec
inc
sub
jge
add
jmp
cmpb
or
add
dec
cmp
repnz
inc
dec
add
add
fadds
and
mov
pop
and
sub
mov
jp
jne
loopne
roll
or
or
add
cmp
ja
dec
sub
add
add
add
push
mov
enter
mov
mov
fisubrl
mov
or
push
fcoms
test
outsb
or
stc
lret
add
or
push
push
das
push
movsb
adc
pop
or
or
imul
fdivrl
pop
scas
je,pt
or
ret
sbb
adc
mov
inc
cld
mov
ret
movsl
shlb
orl
pusha
inc
adc
jae
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
std
rcrl
and
pop
pop
in
cltd
lea
pop
cmpps
ret
dec
inc
prefetchw
sahf
inc
ret
or
push
lea
add
scas
rolb
xor
jbe
jne
or
or
mov
and
movsl
push
or
inc
je
pop
mov
pop
rol
push
je
lret
mov
or
sub
rcrb
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shlb
ret
cmp
cli
cmp
ret
mov
jl
add
movsl
ret
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
addl
push
or
mov
mov
fadds
inc
es
and
out
or
in
clflush
jge
pop
mov
repnz
test
lcall
or
adc
pop
addr16
add
fiadds
mov
sbb
xor
in
lock
inc
jg
into
into
and
mov
fisttpll
sarb
push
pop
arpl
push
outsl
nop
pop
sahf
pop
mov
aam
mov
daa
mov
or
sbb
stos
push
lret
fcoms
loope
pop
xor
push
adc
lock
hlt
add
leave
jge
sbb
cltd
push
pop
addr16
add
movsl
movsb
adc
adc
outsl
pop
test
mov
and
movl
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outsb
jb
lret
int3
popa
push
sub
xor
pop
sbb
add
jno
add
mov
lahf
xchg
xchg
rol
ret
mov
les
sbb
add
clc
cwtl
pop
test
xchg
sbb
inc
and
ds
aaa
mov
mov
rcrl
in
popa
dec
arpl
jge
xor
push
cli
add
je
cmp
cmp
cs
xor
jo
div
gs
cmpb
addb
dec
jo
sarl
cmp
sbb
je
dec
fistl
call
cmp
je
test
icebp
fmuls
sub
icebp
mov
or
cmp
jbe
dec
or
sbb
mov
pushf
pop
out
mov
adc
mov
andl
xor
push
or
aam
sbb
jle
out
addl
push
les
and
gs
test
daa
push
add
push
mov
inc
pop
adc
loopne
cmp
js
add
and
pushl
push
fistl
fists
xor
mov
pop
fnsave
pop
and
shrb
xor
or
shrl
add
adcb
rclb
inc
popf
inc
popa
adcb
test
rcll
add
and
dec
cmpsb
push
xor
sbb
out
ljmp
jne
xchg
fidivl
dec
inc
push
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
ret
pop
add
add
lea
fldcw
fsubs
clc
xchg
pop
inc
aam
popf
jmp
mov
aad
sahf
mov
mov
mov
jp
notl
add
stos
xchg
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movsl
ds
cmc
mov
imul
outsb
adc
ret
dec
mov
push
dec
push
pop
xchg
test
sbb
pushf
inc
and
dec
je
cmp
pop
mov
mov
fiadds
push
mov
pop
shll
sarl
sbb
mov
adc
add
push
clc
cli
neg
xchg
gs
test
sbb
enter
xor
dec
sbb
call
mov
sub
jg
stos
test
pop
call
mov
mov
pusha
sub
sub
jbe
ljmp
sbb
gs
dec
mov
push
fiadds
test
mov
loopne
jmp
dec
fs
movsb
fistpll
add
cmp
in
subl
push
js
push
icebp
das
lret
mov
mov
add
out
dec
sbb
mov
insl
push
xor
and
ja
andl
push
mov
sub
sub
add
pop
and
mov
or
mov
es
dec
hlt
fnstsw
push
mov
je
jg
inc
adc
aam
les
loopne
jnp
cmc
clc
mov
pop
cmp
jbe
cld
and
push
push
push
inc
pop
adc
shrl
shlb
pop
movsl
sbb
and
in
rorb
nop
pop
fs
mov
inc
cmp
repnz
push
and
nop
test
cmc
rclb
lret
lea
add
lret
or
push
addb
pop
sbb
ds
insb
adc
add
sbb
mov
xorb
test
pop
xor
cwtl
dec
cli
in
sub
pop
or
sub
shrb
rcll
push
dec
push
or
out
jmp
push
push
ss
clc
addr16
jo
outsb
repz
or
movsl
sub
in
push
add
in
popa
enter
jmp
add
adc
add
mov
push
add
jg
rcll
clc
xor
sub
jo
dec
pop
inc
add
es
and
push
aaa
enter
inc
cwtl
pop
adc
mov
sub
cmp
xchg
pop
rol
shll
fabs
sub
and
mov
cmpsl
aas
add
add
test
in
adc
incb
push
inc
or
jo
mov
cmp
sub
das
or
lods
testb
dec
push
push
pushf
ret
sub
cmp
push
add
out
sar
ror
int3
jmp
sbb
sbb
xchg
jg
mov
insl
cld
mov
addr16
or
pop
xchg
loopne
addb
test
pop
xchg
les
cmpsl
clc
jo
adc
mov
sbb
inc
add
jmp
lcall
cld
mov
dec
outsl
scas
cld
lret
or
adc
add
dec
test
mov
sarl
int
aaa
adc
into
inc
enter
mov
or
fstps
adc
mov
cmp
and
sbbb
cmp
mov
push
scas
arpl
xchg
int
mov
fwait
mov
push
push
repnz
push
inc
add
or
sub
mov
fisubrl
clc
pop
add
mov
rcll
and
dec
stos
sar
addb
and
push
aam
enter
pop
cmc
pop
sub
add
add
mov
pop
xor
or
push
or
dec
or
clc
std
popa
and
std
data16
xor
inc
and
pop
xor
push
or
xlat
or
sbb
adc
fisubl
xor
hlt
and
mov
sub
mov
loope
pop
xchg
int3
arpl
out
sub
imul
dec
sub
push
outsb
mov
fsubrp
sub
dec
adc
xlat
lcall
inc
imul
add
xchg
jge
cmp
jle
aas
or
movsl
jge
loope
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
add
jle
dec
repz
mov
daa
push
inc
scas
inc
mov
inc
cmp
or
jnp
or
test
jg
add
pop
lock
mov
aas
lcall
mov
pop
lods
xor
push
pop
pusha
adc
shlb
inc
ret
call
xchg
push
into
lock
fadds
in
in
mov
popf
rcrl
dec
mov
xor
dec
add
push
cmp
sub
leave
inc
jo
fstl
or
sub
jb
aad
xlat
inc
lea
loope
xor
xchg
lret
push
push
aaa
push
ret
sub
push
xor
mov
add
pop
fs
out
mov
test
or
dec
inc
imul
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
xor
push
and
mov
das
pusha
or
sbb
add
jg
xchg
shrb
fdivl
stos
xor
or
imul
cmp
bound
inc
cmp
ja
loope
movd
push
fldt
or
cmp
add
pushl
dec
fbstp
sbb
adc
inc
jns
add
jnp
jmp
mull
in
add
and
or
mov
ret
inc
cmp
xor
xor
lahf
cmpsb
sarb
inc
adc
and
and
inc
or
push
sbb
xor
aam
loop
or
std
data16
push
aas
sub
and
call
jl
mov
mov
or
cmp
ret
xchg
adc
or
sub
mov
pop
dec
xchg
jl
jle
inc
and
push
or
add
add
dec
popa
fcoml
dec
adc
add
cmp
jle
push
cmp
dec
sbb
movsb
cmpsb
fwait
add
sbb
call
push
push
add
mov
inc
jg
data16
or
popf
sub
add
insl
cmpsl
incl
addl
pop
jl
in
mov
movsb
inc
xchg
inc
call
jb
mov
leave
rcl
test
add
cmp
call
ret
loope
add
sbb
fs
mov
ret
push
mov
sub
add
jmp
mov
sbb
into
outsb
outsb
xlat
shr
aaa
loope
fdivs
pusha
pop
push
gs
sahf
je
mov
test
adc
jl
outsl
jbe
lods
pop
sub
push
adc
aam
inc
jnp
filds
add
adc
cmp
ljmp
cmp
jle
cmp
jg
mov
sub
add
xchg
jbe
data16
inc
dec
in
clc
xchg
jg
adc
pop
add
push
cmpsl
xor
cmpsl
and
cmp
pop
ds
mov
lret
adc
mov
das
inc
cmpl
adc
mov
cmp
xchg
pop
or
push
mov
jp
xchg
ret
rorl
jbe
addr16
scas
sub
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
loop
inc
cmp
jbe
aam
fnsave
repnz
loope
push
mov
or
jo
or
inc
outsb
insb
sub
es
orb
pop
je
fwait
popf
and
inc
loopne
adc
and
inc
sub
ljmp
push
sbb
mov
je
xchg
je
mov
pop
nop
xchg
sbb
jmp
outsl
sbb
sbb
inc
dec
aas
cli
testb
cmp
xor
dec
mov
xchg
sbb
notl
shll
mov
dec
push
rcll
sub
in
pop
adc
push
xchg
mov
iret
push
dec
je
dec
jne
push
mov
ja
fcoms
jmp
add
mov
xor
inc
cli
add
add
je,pn
xchg
inc
je
push
subl
sub
jne
push
sub
sbb
pushl
mov
or
int
icebp
mov
mov
arpl
mov
xorb
test
jb
jns
cli
push
in
stos
add
xchg
pop
loope
inc
sbb
jne
mov
ret
and
sbb
add
push
xchg
lods
inc
sbb
fsubl
push
ss
push
lock
jb
fs
icebp
adc
add
lea
jae
popf
clc
push
lea
mov
inc
clc
ss
inc
mov
add
outsl
push
je
cmpb
sub
add
and
add
xchg
pop
pop
fisttpll
jnp
clc
cli
dec
cmp
fcmovb
mov
lret
mov
scas
or
xor
pop
sbb
push
xchg
cmp
or
bound
push
fildl
cmp
aad
add
pop
and
sbb
xor
xlat
addl
adc
sbb
adc
sarl
sahf
jecxz
add
xchg
push
rorl
stc
dec
mov
std
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
sub
or
pop
out
jle
jecxz
imul
les
push
xor
inc
call
cmp
jne
pop
enter
dec
sub
cmp
dec
push
js
xchg
push
xor
jne
jg
add
adc
adc
add
fmul
scas
and
inc
das
test
adc
into
add
xchg
dec
adc
jp
pop
popa
inc
lock
or
hlt
dec
adc
adc
insb
imul
out
orb
fiaddl
and
mov
and
dec
adc
test
ljmp
or
cmp
fstl
adc
enter
jg
jmp
adc
xchg
movsl
mov
fadds
sub
and
movsb
inc
daa
cli
and
mov
ljmp
jb
ret
jb
or
andl
mov
push
and
fisubs
pushf
and
xor
test
adc
test
pusha
push
jno
and
jns
scas
xchg
arpl
bound
add
mov
or
adc
or
inc
lret
les
outsb
stc
pop
les
push
sub
insl
insb
and
mov
ret
mov
xchg
jns
xor
adc
inc
pop
mov
mov
xlat
je
cmp
das
je
mov
and
mov
testb
and
adcb
or
cmp
xlat
test
add
jge
push
mov
push
sbbl
je
cmp
cwtl
jbe
mov
cmp
jbe
clc
push
push
or
movsb
in
push
add
or
cmp
pop
das
xor
outsb
mov
push
cmp
xlat
repz
push
orl
pop
xor
out
lods
and
mov
pop
es
les
dec
scas
xor
push
inc
pop
pop
sub
push
scas
mov
pusha
int3
sub
mov
mov
xchg
lods
pushf
adc
popa
mov
gs
in
fstl
hlt
bound
xor
sbb
gs
jne
adc
sub
enter
stc
add
push
movsb
push
xchg
mov
nop
jne
add
mov
add
add
and
mov
imul
fldz
mov
xor
pop
fiaddl
adc
pusha
adc
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
jge
rorb
and
push
push
nopl
cmpsl
xor
jg
or
dec
subl
mov
ljmp
iret
and
sbb
mov
shlb
aam
in
xchg
adc
xor
in
or
or
popa
pop
enter
jne
cs
add
jo
add
mov
mov
pushf
xchg
call
rorb
in
lock
mov
inc
lock
enter
push
fmul
or
dec
fwait
pop
cld
cmp
xchg
faddl
test
lds
mov
imul
repnz
prefetch
adc
xchg
je
lock
sbb
dec
dec
shl
mov
add
rorl
push
xchg
push
lods
jmp
cmpsb
fdivs
pop
ret
pop
ret
push
add
inc
lahf
fdivs
adc
jl
inc
ljmp
jge
pop
jb
adc
inc
xor
inc
dec
and
jge
dec
xchg
add
nop
sub
test
lahf
jl
xchg
push
inc
test
mov
mov
rorb
and
mov
sar
in
inc
in
inc
cltd
fsubs
adc
push
add
push
adc
mov
adc
push
xchg
cmp
add
fwait
mov
cmp
xor
lods
jbe
call
jns
pop
sbb
cmp
mov
pusha
scas
dec
dec
sub
popa
xor
mov
mov
inc
sub
mov
or
mov
pop
mov
mov
cmpb
push
jns
js
adc
push
mov
cs
push
pusha
and
cmp
dec
adc
dec
or
xchg
mov
call
adc
mov
sbb
les
ja
test
outsl
rclb
rol
adc
lcall
push
ret
jb
adc
cmc
push
fisttps
add
xor
cmp
xor
repnz
adc
and
push
xchg
dec
je
jl
ss
add
sbb
push
shll
jb
test
scas
sbb
mov
xor
or
sbb
mov
push
int3
int3
lea
cmc
rorb
call
xchg
sbb
mov
sub
rorl
fucomi
sti
gs
or
mov
lods
ljmp
and
pop
mov
jns
ss
cmp
inc
outsb
sub
xchg
adc
sbb
inc
test
and
imul
cs
fistpll
popa
js
lods
add
jno
cmp
ret
push
orb
shlb
sbb
test
mov
push
test
adc
sbb
jnp
stc
rcr
inc
inc
or
xchg
insb
fwait
xchg
adc
mov
int3
aam
and
addr16
adc
and
mov
fmuls
popf
lock
pusha
push
test
fistps
xchg
popa
fisttpll
pop
push
cmp
sbb
aam
inc
jb
fbld
sbb
add
sbb
jl
imul
cmpsb
dec
movsb
dec
or
stc
cmc
sub
sbb
sbb
test
in
fcoms
loopne
lea
xchg
mov
clc
cli
sti
jne
shll
shlb
mov
imul
push
xor
and
push
lock
mov
test
sub
xor
loopne
mov
push
xor
adc
add
repz
mov
pop
or
or
adc
xchg
xlat
loopne
lock
add
cmpsb
pop
add
xchg
fbstp
xchg
call
or
dec
or
push
push
call
test
fistl
and
rol
and
adc
push
fmull
and
sbb
stos
adc
inc
dec
es
fiadds
adc
gs
dec
fs
loopne
es
ret
xchg
lods
add
or
repz
fnstsw
or
fcmovbe
push
push
push
xor
adc
pusha
xchg
in
arpl
mov
and
or
in
and
adc
in
pop
and
jge
or
lods
add
or
add
icebp
ljmp
sub
sub
mov
mov
arpl
out
stos
and
aaa
add
sbb
inc
test
inc
loopne
pop
and
mov
in
mov
mov
and
xor
cmp
jg
sbb
mov
mov
add
arpl
push
mov
daa
sub
sub
jo
pushf
addr16
enter
fsubrl
nop
ret
icebp
enter
adc
aam
adc
loopne
outsb
and
leave
mov
jg
out
repnz
and
ljmp
and
push
sbb
ljmp
jecxz
imul
xchg
pop
outsb
sbb
std
dec
or
subb
dec
aam
loopne
xchg
mov
fmuls
es
test
nop
inc
bnd
mov
movsb
sti
dec
adc
push
pusha
xchg
aam
aam
enter
rorb
fwait
fwait
dec
sub
test
les
or
inc
cmp
daa
and
popf
and
lods
daa
stc
adc
sbb
in
cmpsb
push
movsb
lock
jmp
mov
lock
push
std
add
sti
dec
push
test
js
inc
inc
or
add
aam
mov
lock
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
mov
sub
add
mov
xor
cmp
in
push
add
rcr
adc
rcrl
mov
jns
sbb
fs
or
or
in
or
or
insl
add
gs
mov
addr16
fsubrs
mov
shrb
push
and
adc
mov
or
test
mov
jne
sub
sbb
cwtl
jl
fld
sbb
push
and
add
adc
lea
sbb
or
mov
sub
ret
push
mov
add
and
int3
xchg
aam
aad
xor
bound
xor
ja
imul
popa
jp
mov
popa
aam
in
or
loop
xor
fdivrs
dec
call
cmp
insl
aam
and
xor
push
enter
add
adc
or
iret
mov
dec
pop
das
rcrb
add
lahf
loopne
mov
insl
and
call
or
in
cmp
push
fsubs
stc
fs
adc
shrb
cltd
sub
subb
push
insl
insl
push
sub
loope
mov
push
addb
or
ja
xlat
mov
push
xor
das
add
in
loopne
dec
sbb
pavgb
pop
push
rorl
xor
cld
test
push
inc
mov
addr16
sub
push
dec
cmp
imul
adc
ss
orl
ret
add
arpl
or
add
add
enter
and
adc
dec
jne
pusha
pop
adc
push
jb
adc
fstpt
xchg
ja
sbbb
cmp
fcoms
icebp
fdivs
jno
and
ret
or
call
inc
cmp
mov
leave
loopne
adc
jns
mov
cmp
fsubr
adc
xor
movsb
mov
cmpsl
mov
aaa
or
or
or
push
sub
adc
mov
test
cltd
jo
pusha
stos
ret
in
in
adc
dec
and
jne
or
stos
icebp
xchg
adc
xchg
sbb
enter
or
mov
enter
or
jns
jno
xor
cwtl
nop
mov
das
dec
imul
cmp
ret
mov
test
loop
jl
lret
ja
mov
push
add
sbb
enter
jle
gs
mov
add
adc
mov
mov
es
xor
js
scas
pop
mov
pushf
stc
dec
push
jo
jb
cwtl
and
lds
add
or
popa
push
mov
fs
pop
mov
out
stos
adc
mov
push
call
jo
or
and
mov
xchg
and
mov
dec
aaa
int3
pinsrw
imul
ficoml
dec
pop
inc
int3
cmpsb
ficompl
pop
aam
mov
fmul
enter
pop
push
cs
mov
cmp
nop
cmp
subb
sbb
test
pop
sbb
dec
xor
add
aaa
cwtl
jge
add
ss
xor
add
outsb
vpmullw
shlb
jnp
pop
lods
leave
or
add
stos
fadds
loopne
pop
inc
lea
mov
scas
cmp
stmxcsr
jns
add
cmp
les
orb
pop
ss
int3
das
rsqrtps
cmp
sbb
aas
mov
in
cmp
inc
cmp
inc
or
or
icebp
adc
cmc
pop
leave
or
iret
mov
jbe
cmpsl
fwait
mov
xchg
pop
nop
dec
es
pushf
mov
test
cmp
cmovle
add
sti
mov
xchg
sub
add
jl
xchg
iret
xchg
xor
sbb
mov
mov
aaa
inc
ficoml
imul
shrl
lods
insl
pop
fnstenv
mov
push
fistps
in
xchg
and
movsb
fdivr
enter
adc
inc
cmp
adc
sbb
mov
jno
outsl
pop
in
jnp
or
inc
ds
call
and
xor
outsb
xor
mov
xor
inc
pop
inc
stos
mov
lock
ret
push
fcoml
jne
in
mov
jns
adc
inc
pop
inc
dec
xor
sbb
test
sbb
inc
enter
in
jne
mov
test
mov
xchg
jb
cmp
and
lea
and
push
jp
sub
test
xor
movsb
setbe
daa
ljmp
or
ss
jo
push
pop
popa
daa
cmp
call
xor
xor
xor
in
js
push
imul
cmp
mov
in
sbb
insl
test
pop
adc
mov
jb
xchg
inc
test
dec
add
dec
lods
in
dec
jns
fdivs
decl
rolb
sarb
lcall
adc
mov
movsl
and
out
jo
hlt
jne
or
jnp
lock
out
test
inc
in
sbb
sbb
arpl
rorb
pop
subl
lods
sar
jge
inc
es
add
or
push
ret
ret
movsb
adc
rolb
sbb
enter
ret
sub
leave
push
add
xor
pop
inc
movl
push
push
or
inc
in
mov
call
call
and
flds
pop
xchg
cmpsl
cmp
dec
push
cltd
add
andb
inc
and
and
icebp
nop
sbb
inc
xchg
mov
fiaddl
adc
fwait
int3
inc
aam
ret
push
adc
adc
insl
push
orb
js
lods
shll
adc
dec
rcll
loopne
jno
dec
push
add
push
loope
dec
dec
dec
repz
push
jmp
cltd
rorb
push
mov
push
add
mov
adc
loope
enter
aam
xchg
xchg
lret
rorb
inc
cmp
add
sar
dec
adc
push
fsubrl
sbbl
rolb
in
sub
int3
gs
mov
das
not
adc
cmp
mov
sub
sub
aam
dec
rcrb
xor
rolb
dec
dec
mov
push
lock
pop
aam
in
dec
jg
test
in
shlb
mov
sub
mov
divl
mov
adc
mov
subl
sbb
stc
pop
fmull
dec
arpl
mov
xchg
pop
dec
cmpsb
push
jne
mov
int3
in
std
xor
je
adc
aad
sti
cmp
or
shll
adc
test
aam
sub
mov
xor
cmp
xchg
fiaddl
lcall
pusha
mov
pop
adc
aas
mov
cmpsl
xchg
mov
dec
xchg
mov
fs
xchg
push
or
pop
jne
and
or
inc
add
push
sbb
jne
fistpl
gs
mov
jbe
mov
mov
mov
inc
dec
mov
mov
cmp
sti
ret
push
mov
rcrl
sbb
mov
and
mov
pushf
cwtl
mov
test
and
mov
jo
pushf
mov
mov
mov
and
pop
inc
orl
push
jmp
xchg
and
add
or
loope
push
dec
lods
xchg
shl
fstl
inc
xor
push
adc
mov
cmp
push
mov
adc
add
xor
or
pop
push
loopne
fdivs
jecxz
mov
adc
or
rolb
mov
xchg
push
add
sub
imul
or
inc
sub
cmpsb
pop
gs
mov
push
or
nop
sbb
es
je
mov
bound
enter
test
mov
xor
in
pop
add
sub
fmull
test
sub
xchg
shl
pop
addl
nop
shr
aas
lds
and
int3
testl
sub
push
or
jo
jno
fsubs
dec
sub
insb
push
roll
call
pop
loopne
push
iret
cmpsb
data16
pop
and
inc
mov
sbb
add
sub
and
push
sbb
in
sbb
fs
sbb
dec
or
push
sub
dec
or
cltd
cwtl
andl
pop
cltd
jbe
es
cltd
push
and
jnp
cs
xchg
or
add
sub
mov
gs
mov
imul
mov
jmp
xchg
dec
mov
lcall
ret
insl
cmp
pop
jmp
loop
adc
pop
std
aad
test
adc
jp
idivl
call
push
sahf
mov
insb
dec
cmp
fs
movsb
mov
push
insl
push
sti
xchg
dec
cmp
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
dec
fcoms
pop
pop
aam
cli
push
jmp
cmc
es
cmpsb
dec
shlb
xor
or
xor
mov
pop
xor
inc
inc
or
inc
mov
adc
shrb
dec
and
xchg
pop
call
orl
ja
aam
cltd
sub
mov
pop
sbb
jp
dec
cmpsl
lods
pop
xlat
add
loopne
jl
pop
xor
jne
xor
dec
adc
std
inc
adc
cmp
add
adc
jge
and
push
inc
icebp
mov
je
nop
mov
mov
and
push
mov
cltd
nop
outsl
test
insl
dec
lock
pusha
gs
dec
mov
fidivl
rcr
mov
pop
fsubl
in
int3
cmp
pop
enter
les
rorb
jno
shl
aam
mov
and
popa
xchg
adc
mov
je
imul
inc
xchg
push
push
fs
xchg
push
stos
sbb
sarb
rorb
lds
inc
jae
push
shrb
and
inc
adc
ja
lods
xchg
mov
adc
iret
arpl
push
mov
inc
dec
mov
inc
ror
je
or
inc
xchg
gs
xorb
out
pop
and
scas
loopne
enter
test
arpl
out
xor
and
inc
or
lods
and
pusha
add
test
xchg
push
pusha
sbbb
add
add
leave
test
sbb
imul
nop
test
or
dec
test
xor
mov
and
add
int3
jmp
inc
leave
pop
outsw
in
add
or
cmpxchg
in
fcoms
sbb
or
dec
repnz
jg
add
aam
sti
add
add
mov
arpl
jno
push
stos
sub
cwtl
and
rorb
jbe
sbb
clc
xor
test
xor
inc
sub
dec
adc
js
sbb
mov
les
shrb
mov
addl
lea
xchg
test
sub
sbb
ss
inc
roll
inc
inc
addr16
sbbb
mov
rolb
in
das
inc
xchg
aam
lret
pop
insb
dec
mov
nop
mov
test
push
call
dec
jo
lret
cld
push
je
nop
cltd
insl
lock
push
dec
je
cmp
xchg
adc
je
ror
mov
and
ja
sbb
loopne
fsubrl
jne
sbb
and
test
movsb
sbb
lea
pop
add
idivl
push
lods
jg
mov
test
inc
mov
out
push
dec
mov
dec
arpl
lret
out
sub
stos
sbb
testb
pop
aam
aam
scas
lods
and
or
fiaddl
or
pop
in
movsb
ret
leave
mov
push
in
sbb
out
fildll
mov
das
aam
jmp
movsb
rorl
mov
jg
mov
mov
pop
cmp
outsl
int3
mov
pop
and
pusha
gs
dec
ret
mov
xor
xchg
movsb
inc
int3
shlb
andl
lock
lods
mov
imul
push
dec
push
testb
dec
outsb
das
dec
adc
and
je
mov
xchg
jg
ret
cmp
sub
test
add
leave
mov
or
stos
inc
outsl
adc
sub
mov
and
fcomp
mov
enter
aam
les
pop
adcb
nop
sbb
and
xor
add
and
test
add
and
and
xor
orb
movsb
lods
dec
ss
inc
jecxz
adc
dec
pushf
insb
dec
es
lods
push
mov
cltd
fs
test
cltd
fs
dec
pop
je
fs
dec
mov
es
mov
inc
and
fs
aam
in
add
jg
jl
cmp
decb
jmp
lds
flds
in
shl
jns
xor
mov
fcoms
xchg
dec
enter
mov
sub
mov
mov
cmp
pop
mov
out
loopne
mov
pop
add
sbb
and
xor
enter
inc
test
mov
movsb
lods
xchg
enter
int3
not
fsubs
aam
dec
sub
cwtl
js
fdivs
adc
in
pusha
mov
leave
mov
mov
popa
and
test
pushf
std
and
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movsb
pushf
xchg
mov
test
adc
leave
and
pop
xchg
stos
mov
movsl
adc
xor
in
sub
push
pop
mov
in
push
nop
cmp
enter
sub
inc
test
xchg
inc
lods
sub
inc
sbb
mov
push
adc
imul
inc
mov
inc
aam
xchg
dec
adcl
inc
jo
aaa
cmp
jb
cwtl
sbb
add
xor
jne
pop
jo
xchg
sub
movsb
call
mov
cs
xchg
rcrb
add
fldt
xchg
sbb
jns
xchg
mov
sub
lods
add
pop
sub
cmovs
pop
orb
xchg
mov
and
rcrb
xchg
or
sarb
jns
sub
idivl
or
rcrb
dec
adc
and
dec
xor
and
xchg
cmp
push
pusha
testl
jecxz
push
int
mov
xchg
adc
sub
movsb
jg
dec
imul
pop
sub
push
xchg
pop
popa
shll
test
insb
inc
enter
scas
sub
nop
sub
adc
push
insl
dec
cmp
mov
or
add
push
das
in
xor
pop
std
pop
rorb
pop
aam
lea
out
xchg
inc
cs
invd
push
aas
outsl
cs
fadds
aam
sarb
jl
xchg
mov
or
or
adc
popa
rcrb
xchg
mov
inc
dec
or
shlb
or
jge
mov
imul
pop
fwait
mov
lret
xchg
sbb
or
sbb
xor
pushf
mov
fsts
rclb
rclb
xchg
enter
les
mov
das
mov
xchg
test
jb
and
ss
enter
xchg
dec
pushf
xchg
nop
xorb
lds
shl
ror
aas
adc
xor
enter
stos
loope
push
sub
add
pop
or
sbb
mov
sbb
or
mov
sbb
movsb
adc
mov
and
jns
pop
in
add
cmp
rcll
repz
mov
jno
adc
xchg
mov
das
insb
mov
das
orb
sbb
es
mov
movsb
pop
cli
inc
mov
subl
sub
or
pop
mov
std
push
das
inc
sarl
je
jo
lock
pop
repnz
add
sbb
adc
mov
mov
insl
cmpsl
dec
lea
mov
xor
in
sub
cld
sub
push
pop
in
lods
jbe
sub
movsb
popf
cltd
inc
loop
add
repz
mov
jae
sti
loopne
ret
xchg
leave
fists
cltd
in
and
and
sub
inc
sub
push
movsb
add
jbe
les
aam
push
or
mov
sub
cld
icebp
inc
shll
clc
xor
push
push
in
or
lds
and
add
clc
icebp
addl
inc
in
sbb
mov
add
push
mov
xchg
and
sbb
xchg
adc
and
and
adc
add
mov
rcl
das
scas
ret
xchg
dec
push
hlt
inc
insb
jle
sub
mov
sub
jg
cmp
mov
mov
pop
pop
mov
sub
in
aas
out
sub
jmp
mov
sarl
call
inc
sub
pop
sahf
and
or
xchg
jb
sub
test
cmpsl
adc
test
jno
and
or
adc
daa
dec
pop
outsl
xchg
jbe
mov
sub
rclb
xor
lods
inc
sub
insl
inc
pop
sbb
add
or
fsubrs
inc
mov
leave
add
and
fs
jecxz
sbb
bound
dec
jnp
fs
mov
call
cli
pop
inc
stos
addb
xor
es
xor
aas
pushf
xchg
shr
or
add
xor
sbb
pop
adc
fsts
dec
cmp
and
mov
pop
mov
ret
fsubs
adc
sub
mov
cltd
adc
fiaddl
jmp
sub
cmc
call
jns
xchg
sbb
push
gs
adcb
cmpsb
adc
pop
sbb
js
and
pop
repnz
mov
jmp
or
lds
sub
ffreep
xor
std
xorl
inc
fdivl
add
xorl
inc
sbb
pop
xchg
push
pop
sub
jb
mov
jg
insl
mov
call
or
mov
lods
cmp
outsb
xchg
dec
cli
inc
adc
fidivrl
add
and
leave
xchg
rclb
adc
in
shlb
pop
cmpsb
dec
mov
lods
sbb
icebp
nop
cmp
push
je
cmp
imul
movsb
sbb
mov
inc
mov
divl
sub
sbb
push
or
xchg
cmp
jmp
add
xchg
dec
sahf
sbb
bnd
mov
and
and
sub
adc
sub
jmp
je
sbb
mov
repz
mov
insl
sub
das
roll
int
popa
mov
insb
test
inc
int
pop
mov
jnp
imul
sbb
sbb
enter
mov
inc
mov
xchg
ret
ds
jge
sbbl
sbb
inc
add
dec
test
pop
inc
adc
fxch
and
xor
test
or
xor
cltd
jbe
lods
adc
xchg
dec
mov
icebp
movsb
imul
ret
adc
pop
cmp
movsl
lahf
sbb
mov
orb
bswap
mov
popl
movsb
mov
adc
roll
in
int3
add
dec
jnp
sub
ret
push
imul
jp
push
je
push
jb
out
inc
or
xor
mov
in
push
inc
mov
mov
lock
mov
cld
inc
mov
enter
sti
out
push
iret
dec
push
jns
hlt
adc
and
or
mov
add
jecxz
sahf
or
sbb
leave
mov
and
or
dec
push
sar
cmp
cmp
push
sti
or
add
push
fcomps
jbe
jle
movb
and
repnz
imul
push
inc
lahf
push
dec
pop
rcrb
inc
or
lahf
rorb
jmp
loopne
mov
data16
and
gs
pushf
stc
incl
ret
xchg
ret
push
je
xchg
andb
je
push
push
add
jno
lods
mov
xor
mov
out
cld
mov
orb
hlt
sub
notl
sub
dec
mov
and
cmc
movsb
lea
cmp
in
addr16
jns
inc
jmp
xchg
lds
sete
jmp
or
pop
push
or
push
fildll
mov
jl
pop
mov
adc
mov
jg
les
add
add
out
mov
testl
xor
xor
sahf
out
test
push
popf
out
fisubrs
inc
bound
xchg
jae
inc
push
roll
lret
cmp
add
inc
aas
sub
data16
mov
inc
test
mov
orb
jnp
mov
add
pop
das
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
dec
out
cmp
or
test
out
sahf
sbb
aaa
xchg
subb
ja
divb
xor
vmmcall
ds
scas
incl
sub
frstor
ljmp
test
inc
mov
and
insb
outsl
arpl
imul
sub
mov
sub
popa
arpl
jne
mov
jmp
popa
outsb
je
add
das
add
push
insl
adc
push
sub
cs
inc
outsl
jb
js
je
jg
mov
jae
add
or
outsl
add
add
add
ja
sahf
insb
add
jne
les
inc
and
add
fstp
jb
dec
push
add
add
xor
aaa
or
mov
repnz
inc
mov
fdivr
push
add
aas
push
add
pop
pop
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
sbb
xchg
add
mov
push
inc
sahf
imull
and
inc
inc
mov
xchg
cmpsb
jnp
das
sbb
sahf
cmpsl
stc
cmp
sbb
sbb
mov
cmp
out
sbb
test
sbb
dec
repz
pop
sahf
push
sbb
cmp
stc
mov
mov
clc
pop
js
jns
repz
mov
sbb
mov
jp
incl
sub
addr16
jp
mov
cmpl
mov
dec
jb
fcmovne
add
xchg
pop
mov
clc
pop
es
xchg
ja
imul
inc
shll
mov
push
fwait
cmp
dec
add
mov
push
xor
mov
pop
pop
add
and
add
in
repnz
das
das
and
pop
mov
jbe
jge
bound
dec
inc
and
add
loope
decb
jnp
pop
ret
je
dec
idivl
repnz
aas
dec
inc
sbb
pusha
xor
ret
fdivr
ds
daa
outsl
inc
jo
mov
and
mov
add
das
pop
pop
divl
iret
jns
out
adc
out
and
push
outsb
sti
push
arpl
pop
dec
xlat
mov
daa
push
and
imulb
ret
sub
pop
dec
mov
shrl
pop
testl
pushl
mov
jg
dec
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
adc
push
scas
call
and
sub
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
dec
dec
dec
mov
sbb
rcrb
pop
pop
pop
xchg
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
cs
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
push
or
push
push
add
xor
jbe
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
shrl
push
jo
add
sub
push
jmp
ja
icebp
dec
or
jo
add
js
push
add
ret
nop
les
addl
rorb
add
pop
jb
pop
lea
mov
nop
xchg
xchg
fs
xchg
pop
xchg
mov
mov
movsl
enter
or
shl
inc
scas
mov
rcr
out
add
mov
lods
push
lods
mov
xlat
push
repnz
sbb
pop
jns
sub
pop
sbb
out
fisubs
push
inc
sub
ss
mov
push
dec
dec
inc
dec
inc
push
divl
lret
push
nop
fs
je
pop
loopne
mov
push
jae
dec
bound
je
outsb
cmp
jge
xor
push
jbe
dec
out
je
mov
imul
daa
in
aas
push
xchg
pop
lea
mov
outsl
js
push
decl
add
cs
and
insl
jo
imul
jo
and
and
daa
aaa
jle
loopne
insb
les
dec
imul
fcmovbe
shlb
ds
cmp
dec
fwait
xchg
fdiv
inc
jb
jns
daa
pop
and
ss
jns
mov
ljmp
in
and
addr16
add
cmp
outsb
jle
fwait
outsb
rcrb
jbe
mov
jo
or
outsl
mov
outsl
jb
and
xor
add
jbe
push
push
lahf
dec
xorl
imulb
push
jp
lret
out
cwtl
add
pushw
popl
andb
inc
imul
pusha
gs
push
daa
xchg
push
sarl
and
popa
push
outsb
mov
divb
mov
push
jae
mov
dec
or
cmp
add
hlt
clc
jo
sbb
outsb
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
negl
dec
push
jne
repnz
push
jbe
enter
fbstp
mov
dec
jge
mov
jle
dec
ret
pop
xorb
imul
call
xor
jg
jae
and
xor
das
gs
sbb
pusha
rcll
outsb
bound
subl
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
out
mov
cmp
or
ds
and
sub
dec
imull
inc
jl
push
addr16
jle
cmpsb
or
sub
sub
add
repz
add
sub
pop
loope
negl
das
push
jb
xor
aaa
and
push
sbb
mov
mov
xchg
xchg
dec
pop
pop
jne
stos
addr16
push
lods
xor
sbb
sbb
jo
mov
push
gs
imul
or
frstor
dec
sbb
pop
or
sahf
inc
pop
sub
and
divl
sub
iret
sti
outsb
xchg
sub
pop
cs
add
cmp
iret
repz
and
adc
jnp
cmpsl
stc
cld
sub
call
cmp
push
aam
int3
cmpsl
mov
mov
dec
jns
lods
test
outsb
mov
negl
nop
nop
cs
push
sahf
mov
repz
repz
insb
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
xor
and
jns
cmpsl
stc
cld
sub
enter
jns
out
dec
and
in
iret
repz
les
iret
repz
xor
sbb
jns
cmpsl
stc
lock
test
pop
sahf
ja
out
adc
sub
push
pushf
jo
jnp
jl
sub
push
and
adc
add
jno
test
add
add
xor
push
jb
dec
mov
sbb
inc
addl
add
ret
push
and
add
ja
sub
sbb
xchg
push
imul
add
insl
or
and
push
add
mov
add
jnp
and
add
push
pop
or
das
cmp
mov
addb
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
std
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
test
and
add
ljmp
push
sub
push
jno
popa
push
adc
sub
lods
lcall
gs
popa
data16
pop
shl
std
add
xor
add
fidivs
sub
add
push
sub
daa
dec
arpl
inc
insb
fs
jns
jecxz
sbb
mov
mov
les
iret
pushf
jp
pushf
pcmpgtw
xor
push
inc
push
loopne
add
dec
push
push
dec
pop
test
mov
push
dec
inc
dec
cmovns
cld
mov
das
push
adc
sub
adc
sub
into
mov
rclb
mov
out
xor
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
in
xchg
jb
jge
arpl
cmp
jg
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
addr16
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
stc
pushl
ljmp
orb
mov
jle
call
lods
dec
lock
xor
aas
mov
pop
or
and
pop
repnz
popa
mov
and
es
mov
fcompp
add
test
ja
mov
push
nop
fwait
pushl
mov
adc
push
loope
or
aad
pop
inc
fildl
sub
dec
fsubs
cmpl
or
cmovg
sbb
or
dec
xchg
pop
xchg
nop
outsb
loopne
pop
fwait
loope
pop
in
imul
cmp
sti
es
jae
push
jp
mov
fcomi
push
push
data16
scas
ret
je
sub
test
xchg
mov
and
adc
shrb
aaa
pcmpeqw
outsl
mov
loopne
push
mov
fildl
daa
je
loopne
sbb
mov
movsl
dec
add
sbb
jmp
xchg
mov
sahf
ror
ret
sbbl
push
fnsave
add
jo
xor
sbb
mov
or
and
imul
jae,pt
loope
jl
insl
jle
fs
popa
rcr
pop
cmpsl
mov
and
push
jle
or
jg
out
dec
mov
adc
mov
fbstp
out
jno
sarl
push
mov
clc
jg
mov
cmova
das
adc
cmp
popa
ret
xor
add
inc
inc
subl
jg
out
shrl
sbb
xlat
jg,pn
jge
and
mov
cmpsl
xlat
data16
fnstenv
adc
arpl
js
sub
shll
aas
cmpsl
call
ja
inc
add
cmp
pop
pop
mov
testl
jne
cmpps
push
imul
sti
arpl
out
mov
lahf
es
es
sti
cmp
or
push
adc
push
cmp
and
lds
jge
add
insl
test
cmp
dec
dec
incl
xchg
gs
scas
sbb
ja
dec
jp
xchg
adc
ja
pop
ds
fsub
bound
mov
mov
imul
push
fmuls
sti
jne
sbb
daa
sbb
call
pop
mov
aas
arpl
daa
pop
arpl
add
sbb
pop
gs
jne
out
mov
and
stc
lret
arpl
pop
mov
and
pop
stos
pop
ret
out
sbb
insl
inc
add
mov
fldt
test
push
mov
dec
cmpb
ja
cmpl
xchg
lret
sub
inc
mov
sbb
out
daa
loope
faddl
xor
xlat
or
jo
add
push
cmp
cld
js
ret
mov
je
jb
adc
jl
push
add
sbb
arpl
mov
xor
push
arpl
clc
mov
pop
mov
dec
popa
adc
inc
jnp
and
jo
out
or
xor
lock
je
jae
pop
outsb
out
out
nop
mov
adc
aaa
mov
testl
shlb
push
or
and
jecxz
stos
scas
mov
subl
sub
sbb
dec
aas
adc
outsl
popa
push
inc
pop
daa
imul
add
dec
dec
sub
cmp
dec
fwait
push
mov
cmp
push
dec
imul
inc
push
ret
inc
and
test
imull
sbb
and
push
addb
js
mov
outsb
push
pop
out
jb
sub
orl
cmpb
pop
sahf
fisubs
daa
bound
jae
hlt
mov
mov
addr16
sti
and
ss
push
insl
cmp
out
bound
or
jge
outsl
out
arpl
pop
pop
stos
and
outsl
jmp
les
mov
lahf
ja
cmpb
mov
shll
jb
pop
mov
push
es
int
jo
mov
out
inc
cmp
inc
mov
push
inc
scas
imul
mov
arpl
dec
insb
xchg
pop
push
jnp
inc
inc
dec
add
shll
outsl
imul
sbb
ss
mov
or
mov
dec
sbb
pushf
lret
inc
pop
je
ret
iret
pop
dec
por
pop
icebp
outsl
insb
aas
pop
mov
scas
fimull
addr16
outsl
mov
dec
cmp
lods
pop
adc
sahf
push
aas
pop
pop
push
aas
loopne
bound
testl
mov
mov
mov
loopne
mov
jl
loop
and
jl
imul
mov
and
addr16
jnp
sbb
push
loopne
sub
ja
mov
adc
bnd
jo
or
mov
fsubl
push
adc
sbb
sbb
jnp
xor
imul
jmp
es
pop
icebp
into
adc
add
push
cmp
mov
outsb
mov
cmpsl
outsb
jg,pn
jnp
push
jecxz
inc
add
loop
cmp
jno
filds
fsubl
insb
sub
lret
jl
out
pop
cmp
bound
or
mov
inc
inc
mov
lea
fidivrs
or
stos
sub
iret
imul
dec
pop
adc
jl
lods
jno
repnz
sahf
jo
repz
adc
mov
cmp
es
addr16
push
imul
add
mov
aad
xlat
incl
outsl
sbbb
xchg
rol
fstpt
dec
xlat
aaa
sbb
jl
xor
inc
testl
pop
jno
xchg
out
inc
jns
jae
jae
sbb
jae
pop
add
dec
adc
mov
negl
mov
add
mov
sub
imul
pop
in
sar
pop
data16
aaa
push
ret
insb
roll
dec
push
aas
popa
pop
popa
sub
xchg
pop
push
mov
es
fcompl
jle
outsl
das
addr16
mov
dec
lcall
sub
adc
inc
xchg
inc
jnp
dec
xor
push
cmp
push
sub
xor
sbb
inc
add
hlt
lret
ss
push
repz
push
push
mov
fimull
push
jl
negl
cs
ds
push
pop
push
push
lds
fstps
push
rol
adc
ja
out
imul
pop
push
iret
push
les
ds
pop
jmp
cmp
and
jbe
xor
pop
add
inc
lds
cmp
inc
pop
or
mov
push
sub
jl
sahf
divl
mov
sbb
push
leave
fucomp
fmulp
jnp
pop
or
adc
repz
adc
inc
and
pop
dec
daa
outsb
mov
iret
pop
sbb
aaa
dec
and
scas
jne
xorl
outsl
jo
jns
mov
inc
inc
fisttpl
imul
add
outsb
rolb
pop
insb
lret
jno
push
pusha
sbbl
sti
aas
pop
popa
push
in
add
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shll
jo
pop
and
dec
bound
out
sbb
sub
and
pop
shrb
adc
ficoms
das
push
dec
push
push
jg
jecxz
repz
fildl
jne
jne
jns
fwait
push
mov
xchg
scas
mov
repz
lock
push
or
mov
ds
fs
outsb
jbe
lea
cmp
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
mov
outsb
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shrb
xchg
aas
push
mov
jne
mov
daa
pop
andb
mov
movb
cmp
ja
inc
push
mov
dec
push
verw
rolb
lods
lahf
js
adc
xchg
scas
inc
cmpl
adcl
pop
addb
pop
xlat
sbb
push
sub
cmp
inc
movsb
ss
cmpsl
add
sbb
or
xchg
js
sub
adc
sahf
mov
sbb
dec
outsb
ret
push
sbb
leave
idivb
xor
inc
dec
jp
ror
lea
push
jnp
pop
push
lock
ja
into
or
inc
pop
mov
insl
pop
fdivrp
adc
data16
cmp
insb
into
pop
lret
mov
inc
lret
bound
add
pop
and
mov
fdivl
xchg
inc
loop
lcall
sbb
and
jle
xor
jo
inc
or
imul
movsl
add
aaa
sub
dec
mov
inc
loopne
aam
jecxz
or
inc
cwtl
cs
or
lods
push
push
adc
pop
movsb
pop
arpl
push
call
dec
mov
mov
push
scas
sub
jne
imul
mov
ret
fs
and
xchg
mov
xor
and
outsl
rcrb
inc
scas
mov
adc
add
and
imul
and
testl
cs
and
shrl
add
and
push
movsl
dec
andl
push
cs
xor
imul
sbb
jp
out
jb
push
jp
arpl
insl
das
mov
xor
arpl
pop
cli
add
push
scas
pop
jmp
jb
fs
push
jb
mov
or
inc
jbe
jae
sub
scas
into
sahf
mov
loop
inc
into
out
and
push
mov
or
jbe
push
sbb
mov
and
scas
mov
add
inc
fwait
mov
imul
in
add
fbld
xlat
adc
add
push
lret
inc
sbb
sub
mov
dec
mov
pop
test
aas
mov
mov
fbstp
cmp
das
ret
ret
dec
adc
add
pop
or
out
cmp
inc
jg
push
inc
cmp
inc
imul
data16
pop
xlat
lods
add
dec
or
mov
stos
push
and
jmp
pop
daa
stos
imul
sbb
mov
lahf
fwait
cmp
jns
and
data16
mov
hlt
test
mulb
xchg
arpl
bound
xor
scas
jecxz
pop
test
dec
filds
add
sbb
aam
ja
or
cmpsb
cmp
aam
sub
xchg
cmc
push
cs
jmp
cmpsl
push
or
mov
push
jo
dec
cmpsb
pushf
subl
lea
js
fucomi
sbb
imul
outsb
jae
sbb
sub
or
repz
pusha
push
cmpsl
out
mov
and
imul
inc
push
imul
aas
cmp
stos
add
inc
jae
in
cmp
out
pop
aaa
cmp
rorb
or
cmp
jge
and
xchg
pop
add
or
das
imul
arpl
shrl
pop
imul
lds
js
xchg
cmp
shrl
ret
fistl
test
fldt
or
loope
add
ret
and
es
xor
lahf
arpl
xchg
mov
repz
lcall
xchg
xlat
and
inc
sbb
cmp
pop
push
scas
jmp
cmp
fimuls
push
xchg
test
dec
cmpsl
out
jo
dec
xor
mov
mov
jbe
mov
adc
fadds
popa
pop
cmp
inc
push
pop
xchg
push
or
jnp
jnp
jb
xlat
pop
lcall
inc
fstpt
popa
cmp
ss
xor
add
out
jo
jp
addr16
xor
je
scas
loopne
setg
xor
push
push
addr16
push
sub
es
push
in
cmp
out
inc
outsl
daa
dec
fcmovb
clc
push
pop
ja
arpl
ret
xor
ss
aad
pop
xlat
cmp
icebp
sbb
imul
or
cwtl
inc
shll
push
cmpsb
adc
test
out
gs
mov
out
aad
sbb
scas
fwait
cs
mov
stos
add
adc
lds
addb
jne
arpl
shlb
je
outsl
fs
aas
dec
clc
movsb
test
insb
add
push
hlt
or
add
add
sti
push
add
test
push
enter
scas
insl
push
outsl
das
outsl
xor
cs
inc
dec
ja
bound
scas
popa
adc
iret
shrb
push
pop
dec
mov
stos
push
cmp
jo
sub
cmpsb
sbb
scas
push
pop
outsl
out
lods
adc
setg
pop
and
pop
push
sahf
xor
dec
das
es
insl
jl
dec
call
clc
les
pop
popa
xchg
call
daa
xor
rorl
adc
adcl
xor
add
rolb
loopne
loope
out
mov
push
push
add
inc
sbb
jecxz
add
jae
ret
stos
sub
ret
cs
ja
rorl
bound
ret
and
arpl
push
mov
out
pop
sub
add
pop
add
je
adc
sub
cltd
aam
dec
cmp
outsb
add
cmp
push
ret
and
jnp
cmp
jp
inc
das
jb
daa
sbb
push
fisubrl
add
minps
ret
aas
push
mov
mov
dec
mov
mov
sbb
xor
dec
push
mov
fcoms
iret
jo
stos
scas
outsl
push
mull
shlb
dec
and
push
mov
jp
fdivs
cli
pop
dec
add
bound
popa
xor
jmp
rcll
pop
scas
sub
and
inc
in
sub
ret
nop
out
addl
mov
das
hlt
inc
adc
rcr
inc
add
or
push
in
inc
or
mov
sbb
mov
push
mulps
aaa
adc
xchg
and
sbb
xor
cmpsl
sbb
sbb
int
mov
sbb
sbb
sbb
adc
jmp
pop
and
adc
and
out
fstpl
out
and
inc
cs
push
sbb
outsb
bound
out
mov
cmp
test
dec
sbb
mov
add
cmpsl
arpl
sbb
cs
xor
inc
fs
jo
adc
adc
push
out
jae
inc
sub
lods
push
pop
lahf
add
xor
cmpsl
cmc
test
mov
aam
inc
cmp
aas
dec
sub
xchg
arpl
mov
arpl
cmp
rorb
or
and
mov
pop
out
mov
rol
mov
mov
adc
sbb
mov
or
das
sbb
out
iret
loopne
sub
adc
iret
adc
loop
cld
stos
inc
das
and
add
fistps
or
stos
pop
cmp
pop
dec
sub
lods
xlat
and
xchg
das
aaa
stos
or
bound
inc
jbe
mov
push
bound
push
imul
mov
fiadds
adc
and
xor
pusha
sub
addr16
cmpsb
add
or
jnp
jge
mov
ljmp
repz
jae
xor
fs
pop
jno
lods
xor
das
outsb
aad
daa
icebp
sbb
inc
and
pop
add
insl
pop
sub
test
add
dec
pop
add
mov
dec
pop
sti
push
push
xor
fldt
aaa
bound
inc
ja
pop
pop
pop
or
andl
sti
mov
push
mov
sbb
and
jecxz
and
cmp
cltd
dec
pop
in
loop
push
leave
stos
in
cld
loope
jb
pop
and
in
mov
pusha
xchg
mov
fists
push
xor
mov
je
leave
push
repnz
fldl
sub
fsubrl
cmp
leave
in
xchg
inc
sub
lock
hlt
fsts
xchg
dec
movsb
push
scas
xchg
test
push
repnz
and
adc
cltd
dec
pop
rcl
push
leave
stos
in
enter
xchg
pop
and
stos
sub
xchg
dec
and
test
fcom
mov
cmp
ror
push
xor
xchg
push
clc
rorb
xchg
inc
sbb
je
dec
loop
xor
out
pop
and
sub
xor
inc
aam
inc
sarb
sbb
pop
addr16
rorl
cmp
mov
sub
sbb
loope
movsb
inc
ret
or
inc
sbb
xor
iret
dec
fdivs
adc
xlat
inc
xor
sbb
adc
push
imul
push
dec
pop
jae
sub
sub
and
cmpb
movsb
imul
or
sub
push
dec
inc
xor
push
testl
inc
aaa
mov
aas
mov
or
movsl
and
xchg
sbb
mov
inc
xlat
push
lcall
or
pop
dec
notb
add
ret
das
and
sbb
or
dec
aaa
sub
xor
addr16
xor
push
xchg
mov
scas
or
arpl
jg
mov
lahf
jnp
arpl
xlat
pop
inc
sub
sbb
dec
pop
dec
push
pop
enter
push
mov
mov
push
sti
mov
sbb
mov
ljmp
out
js
popa
les
filds
scas
mov
iret
aaa
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
mov
lods
mov
mov
andb
add
mov
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
xchg
xchg
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
cs
xchg
jb
add
pop
inc
popl
or
or
mov
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
rcl
inc
divl
aaa
imul
adc
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
mov
push
push
int3
add
in
ja
adc
ss
mov
bound
jge
or
pop
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
invd
xor
mov
add
ret
add
and
xor
push
inc
popf
or
addl
jae
stos
and
sbbl
in
add
into
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
div
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
lods
xchg
pop
inc
mov
pop
mov
sub
lock
and
bound
pop
jb
xorl
js
inc
imul
mov
mov
das
sbb
mov
pop
mov
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
outsl
out
push
add
mov
ficomps
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
push
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
mull
ja
dec
es
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
inc
push
mov
inc
xchg
cmp
inc
jns
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
orb
cmp
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
lahf
xchg
inc
and
pop
add
lods
mov
lcall
add
aam
ljmp
lock
fsubrl
lret
fmuls
ljmp
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
mov
lahf
push
inc
das
stos
pop
mov
jg
mov
add
out
call
lahf
inc
mov
loopne
or
jmp
xor
mov
cmp
mov
mov
jae
outsb
mov
stos
fsubrs
shl
mov
sbb
or
xlat
inc
rorb
add
mov
sti
mov
push
dec
inc
pop
insb
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
mov
push
add
neg
sub
iret
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
addr16
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
mov
bound
xchg
pop
and
sbb
clc
cwtl
xchg
inc
cmpsl
adc
faddp
push
jle
jl
push
xchg
out
cmp
add
fisubrl
dec
ja
mov
int
pop
cmp
jne
jo
arpl
xor
das
rolb
pop
pop
ja
xor
xor
mov
imul
sbb
inc
push
pop
mov
xor
pop
repz
xchg
xchg
jae
and
jae
xor
cwtl
mov
sub
dec
mov
pop
add
sbb
pushl
add
das
push
sub
test
sub
xor
ret
push
loope
push
lahf
mov
lahf
scas
xlat
xor
sub
inc
sub
iret
add
xchg
or
in
nop
aas
jecxz
mov
jbe
les
imul
lods
cwtl
dec
daa
sti
pop
aad
shll
mov
fisubrl
adc
dec
xor
mov
and
loope
ret
popa
fldt
inc
or
xor
pusha
je
int
mov
int3
fs
xchg
or
mov
inc
push
and
push
mov
inc
inc
sub
rcrl
dec
loopne
push
sbb
jns
add
mov
aaa
iret
mov
xchg
cmp
nop
outsb
dec
arpl
mov
daa
popa
ss
pusha
jbe
stos
pop
movsb
push
testb
xlat
fmull
das
repz
aam
mov
outsl
pop
or
aaa
sub
je
int3
inc
push
fs
mov
das
jne
mov
mov
sub
daa
add
dec
xlat
jle
mov
mov
push
add
jmp
add
ss
inc
cmp
shr
add
loopne
test
imul
sbb
sub
xor
xchg
sbb
add
push
and
push
cld
outsl
pop
out
mov
or
add
push
adc
push
sbb
mov
iret
xor
repz
mov
mov
repz
or
xchg
data16
insb
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
add
mov
push
shrb
ret
sub
shlb
data16
or
adc
insl
jo
stc
pop
add
xchg
rclb
ss
push
dec
str
int
mov
add
inc
stc
das
incl
nop
call
push
cmp
call
pop
outsl
movsb
push
sub
dec
dec
add
inc
sqrtps
decl
mov
mov
mov
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
jmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
das
mulb
sub
mov
sbb
mov
mov
and
xor
pop
sbb
xor
mov
mov
fsubs
sbb
ret
ljmp
dec
pop
dec
xchg
jecxz
dec
push
sbb
xchg
add
pop
jb
mov
pop
push
and
cmp
jle
scas
loopnew
xchg
push
mov
inc
and
pusha
dec
jns,pn
insb
pop
add
add
aaa
jbe
or
or
push
insb
xchg
mov
xchg
andl
iret
leave
jae
sub
sbb
or
mov
fwait
in
pop
inc
xchg
out
pop
fdivl
pop
int3
xor
jns
sahf
mov
fwait
xchg
out
adc
mov
jl
add
inc
outsl
rolb
loop
xor
or
lahf
mov
add
pop
inc
cmovs
lods
mov
xorl
movb
fistl
je
lea
and
pop
pop
xorb
inc
mov
sbb
jnp
cmp
inc
mov
pop
xor
inc
adc
rcrb
inc
jecxz
add
xor
fisubs
mov
cmp
andl
jbe
pop
push
lock
movsl
and
xlat
push
mov
add
bound
je
bound
imul
pop
jns
inc
aas
mov
add
push
and
push
add
lret
jge
das
aaa
push
fisttps
push
imul
jecxz
inc
popa
aam
lahf
pop
mov
out
andl
inc
fwait
pop
dec
push
or
inc
push
scas
mov
mov
loopne
je
aaa
or
jo
aaa
bswap
or
mov
push
xor
xor
nop
cmpsb
lea
das
inc
mov
push
mov
xchg
mov
call
dec
or
rclb
aaa
xor
pand
push
dec
andl
mov
lahf
push
jl
jae
jb
pop
fistpl
in
inc
decl
mov
adc
fdivrs
push
outsl
xlat
push
sbb
aaa
rclb
fbstp
or
inc
or
jbe
mov
mov
dec
mov
push
lahf
dec
push
adc
inc
aaa
add
or
cmpsb
push
and
cli
mov
mov
rcrl
sti
xchg
jle
jnp
mov
dec
push
push
xor
mov
xor
rcll
and
push
mov
push
xchg
stos
pop
push
movsl
lcall
inc
shlb
push
pop
xchg
aaa
sti
mov
xchg
pop
mov
cmp
fnstenv
and
arpl
sub
mov
jbe
mov
addl
sbb
pusha
cs
incb
xchg
push
lods
push
lret
test
rclb
pop
pop
dec
hlt
scas
pushf
testb
mov
es
xchg
cmp
xchg
add
cmp
xchg
push
cs
dec
pop
push
and
mov
mov
and
ss
negl
push
ror
or
int
imul
repz
pop
stos
inc
pop
pop
xchg
fldenv
mov
push
cmc
dec
push
daa
data16
idivl
sub
aaa
outsl
out
ds
repz
je
mov
adc
out
jns
xor
fiaddl
pop
repnz
mov
mov
mov
lcall
mov
test
ds
jnp
testb
xchg
fsubrp
adc
xlat
pop
xlat
sbb
xor
icebp
jns
cs
movsl
pop
pop
out
cmp
push
mov
mov
sbb
outsb
inc
dec
pop
repz
push
push
jns
es
cmp
aas
repnz
pop
ds
outsb
nop
outsl
int3
inc
mov
push
adc
xchg
dec
rclb
dec
push
insb
jl
out
test
cmpsl
stc
out
shll
and
mov
sahf
out
push
xor
cmpsl
enter
dec
sub
stc
cmp
repz
mov
jns
cmpsl
es
jno
ss
out
and
push
mov
sahf
fprem1
adc
ds
repz
mov
cli
push
push
decl
or
dec
sbb
scas
dec
aam
aad
or
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
lahf
add
idivb
pop
sub
adc
push
and
pop
sbb
stc
sarl
enter
adc
repnz
inc
cmp
iret
ds
or
outsb
pop
adc
add
stos
jo
mov
xchg
rcrb
sbb
dec
std
shlb
push
cmp
xlat
adc
loopne
pop
push
and
iret
popf
lock
std
ja
outsb
outsb
jp
in
loop
xor
push
js
xor
stos
pop
inc
imul
cmp
xor
addl
sbb
pop
mov
aad
lods
iret
imul
push
dec
add
adc
jmp
aas
pop
push
dec
out
xor
push
push
outsl
inc
jb
popa
je
or
subl
push
fstpt
sub
pop
inc
mov
sti
inc
fisubrl
out
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
shlb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
daa
jecxz
outsb
insl
jno
sbb
xchg
lret
in
jnp
mov
ficoml
mov
test
mov
jb
adc
imul
mov
fwait
mull
sbb
cmova
sbb
loop
lahf
and
dec
cwtl
pop
test
push
adc
orb
add
xchg
xchg
sti
rclb
jae
xor
daa
add
pusha
mov
sysexit
les
push
dec
daa
and
xorl
dec
daa
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
pop
sub
add
jo
jg
aaa
mov
jb
loopne
add
jecxz
mov
mov
xor
ret
shll
test
cwtl
and
sbb
pop
pop
inc
dec
movsl
or
push
add
mov
jmp
aaa
fldt
das
das
sbb
scas
pop
sbb
scas
out
push
pop
mov
aad
ja
xchg
pop
addr16
arpl
mov
jae
fs
sub
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
xchg
es
out
pop
shll
add
lret
dec
add
jge
arpl
or
fildl
cs
pop
dec
add
adc
mov
jne
cs
popw
mov
mov
outsl
aaa
imul
pop
aaa
imul
mov
das
testl
jg
insb
adc
shlb
xchg
das
sub
insl
or
add
das
push
fildl
mov
xchg
mov
inc
dec
push
mov
inc
jle
pusha
push
pop
imul
pop
push
fsub
jecxz
out
inc
pop
push
fmulp
inc
xor
or
add
lahf
push
add
cmp
loope
testl
aas
push
mov
rol
repz
popa
fldl
das
cmovns
adc
sahf
pop
inc
add
inc
dec
fidivl
xchg
aas
adcl
inc
stos
scas
mov
xlat
pop
or
pop
out
add
push
test
pop
outsl
clc
mov
aas
add
sub
or
jp
divl
inc
inc
push
inc
scas
sub
pop
cli
cmp
dec
pop
out
or
push
popl
pop
or
lret
fidivl
mov
xor
add
xchg
sbb
jbe
inc
aaa
ret
pop
outsl
bound
dec
and
pop
mov
inc
and
fdivs
dec
cmp
ret
outsl
dec
stos
arpl
lock
cmpsl
push
pushl
jg
ret
mov
add
inc
aaa
jno
push
dec
pop
pop
inc
dec
es
inc
mov
je
and
fildll
or
out
xchg
nop
outsl
or
das
adc
and
adc
jbe
dec
add
cmp
insb
je
aaa
shr
or
ds
jo
jae
inc
loope
mov
outsl
xor
push
call
xor
dec
mov
pop
sub
fdivrs
out
jns
je
jne
or
adc
sahf
dec
fbld
ja
mov
mov
dec
jae
mov
sbb
mov
cmp
jp
inc
pop
mov
push
inc
xor
xor
imul
adc
iret
jbe
xor
data16
jmp
push
inc
fiaddl
maskmovq
testl
out
pop
stos
mov
mov
icebp
sub
cmp
dec
shll
push
mov
jg
pop
and
loop,pn
pop
into
dec
inc
push
pop
stos
mov
jmp
mov
push
and
pop
aad
inc
inc
pop
daa
fwait
cwtl
ss
add
lods
addr16
add
push
add
aam
jns
add
adc
adc
inc
mov
push
and
rol
ret
mov
rorl
inc
adc
out
or
outsb
or
aaa
inc
insb
loopne
ljmp
mov
rolb
inc
pop
push
or
dec
out
jb
pop
loope
cmp
ds
aaa
add
add
push
pop
jns
outsl
incl
dec
inc
dec
push
xchg
add
inc
loop
and
pop
aas
mov
out
sbb
sub
movl
and
push
dec
into
add
mov
negl
sets
mov
inc
aaa
jno
sti
shlb
ret
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
jg
insb
mov
mull
jno
addr16
std
ljmp
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
dec
ret
js
sbb
mov
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
adc
fsubs
outsb
ds
or
inc
pop
ss
sub
pop
gs
inc
sbb
pop
aas
ds
push
pushw
push
mov
pop
push
sbb
xchg
push
js
loope
mov
lahf
daa
inc
add
sub
loop
lahf
jbe
inc
add
shrb
sub
mov
pop
inc
xor
lahf
stos
fdivrs
outsb
cwtl
push
insb
mov
cmpsl
xor
inc
adc
cmp
setg
neg
imulb
push
and
lcall
sar
ret
adcl
fcom
mov
push
fisubrs
xchg
mov
ret
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
push
aaa
test
push
rdmsr
pop
dec
rcrl
adc
xor
inc
les
push
adc
jb
lock
sub
out
push
imul
ror
jne
popa
loope
fwait
sub
out
and
bound
xor
add
es
sbb
sub
in
xchg
and
add
movsb
outsl
je
mov
popa
stos
mov
out
std
xchg
sub
sub
sub
push
cmp
mov
js
ret
dec
inc
sarl
xor
jo
movsb
popa
mov
addb
insl
outsl
fs
mov
mov
gs
jo
jns
iret
inc
mov
adc
outsl
insl
jne
adc
lcall
dec
fiadds
les
sub
das
cmp
and
js
je
bound
aaa
and
cmp
pop
jbe
pop
or
insb
mov
inc
inc
mov
lds
outsl
jo
mov
lods
cmc
push
sahf
dec
sub
jmp
mov
movsbl
popf
negb
xchg
inc
or
inc
push
stc
std
fisttpll
shrl
cmc
inc
cmovo
out
imul
cmpb
aas
adc
in
nop
jo
maxps
loopne
cs
add
mov
add
inc
smsw
and
dec
jne
pop
push
inc
enter
les
imul
sbb
cmp
out
ss
add
aas
add
shlb
mull
in
dec
xor
add
inc
push
push
push
jmp
jmp
insb
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
fsub
in
fsubrs
jo
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
cmp
je
push
jo
mov
mov
push
and
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
mov
inc
pushf
leave
mov
outsl
jle
pop
lods
pop
jb
mov
dec
or
sbb
or
jg
lret
rol
adc
in
jne
scas
push
push
pop
addr16
dec
ficoms
nop
xchg
out
lahf
mov
cmp
pop
and
sti
cmp
call
inc
inc
mov
xchg
fmuls
adc
and
xor
inc
lret
xchg
dec
iret
mov
inc
outsl
xchg
js
jb
jae
orb
movsb
mov
int3
fsubs
rorb
int3
out
aad
insl
daa
sbb
aas
out
fs
mov
daa
add
push
int3
jmp
mull
pusha
push
insb
push
mov
inc
add
push
xor
lods
ds
test
jb
push
in
xor
daa
push
hlt
mov
xor
jb
repz
push
push
mov
stos
aas
ja
aam
dec
enter
or
mov
aas
dec
pop
xor
movsb
inc
hlt
nop
sub
lods
outsl
scas
add
ja
fsub
inc
cs
into
sub
push
daa
lock
stc
lods
addr16
inc
enter
jo
cmp
sbb
testl
stos
mov
add
idivb
iret
xor
push
in
negb
cmp
push
in
mov
add
add
mov
in
dec
enter
iret
rcrb
xchg
inc
jo
jo
mov
daa
scas
jns
iret
aam
or
adc
pop
jb
lock
daa
cld
and
aaa
and
push
xchg
xchg
pusha
adc
pushf
cld
jl
decl
scas
iret
lds
aam
bound
in
es
out
or
pop
sbb
sub
shlb
aas
inc
sahf
outsl
insl
ja
rcrb
nop
out
jl
test
in
add
lods
shrb
mov
cmp
jb
xor
orl
xor
ds
jb
pusha
dec
rolb
mov
pusha
test
fidivl
mov
mov
enter
cld
or
or
mov
in
loopne
rcrl
in
cmp
shl
fcoml
fisubrl
or
out
lcall
cmpb
or
cmp
hlt
or
mov
cmpsl
cmp
aaa
and
dec
push
or
pop
cmpsb
pop
fisubs
bnd
jg
mov
mov
mov
iret
test
loopne
enter
add
mov
jb
loopne
xor
test
inc
push
pop
cmpsb
inc
loopne
push
enter
and
repnz
rorb
pop
in
push
push
cmpsl
mov
pop
enter
in
pop
cmpsb
jb
dec
enter
fsubrl
ds
js
inc
push
push
push
enter
xor
js
in
stc
jg
mov
outsb
dec
mov
dec
add
test
aam
pop
enter
enter
jae
clc
and
xor
and
sti
push
inc
xlat
lahf
clc
ja
dec
repz
lahf
and
je
pop
in
push
repnz
dec
lahf
je
enter
aam
and
repnz
les
mov
test
fadd
and
pop
stos
cli
push
cmp
xorps
nop
addr16
jg
test
fcom
hlt
mov
test
nop
out
cs
out
int3
loopne
loopne
das
in
mov
movsl
cmpsb
outsl
inc
and
xor
testl
cmpsb
aam
mov
fldenv
inc
fadds
fs
xchg
jl
xchg
mov
fsts
jb
fmull
inc
mov
ds
sbb
sub
out
sub
jg
pop
enter
pop
insb
sbb
fsubrs
pop
dec
repz
mov
aam
in
pop
stos
aas
push
cmpsl
mov
test
add
adc
sub
fiaddl
cmpsl
jg
lods
cmp
daa
addr16
leave
js
dec
add
or
test
fiaddl
mov
mov
lock
or
push
mov
lock
mov
sarb
lahf
dec
iret
les
inc
jbe
dec
pushf
inc
jl
sbb
lods
rcr
inc
scas
lea
cmpsl
pushf
push
xchg
out
lock
andb
lock
inc
fstl
fs
mov
push
enter
jg
outsb
in
stc
dec
int3
xchg
daa
movsb
lahf
pusha
insl
inc
jo
inc
ja
pop
enter
in
or
pop
adc
dec
enter
sarl
fimuls
sub
lahf
dec
inc
ja
sub
aaa
daa
sar
fisubs
jne,pn
push
lods
fdivrp
push
pushl
mov
cmpsl
jo
faddl
lahf
jo
test
fcompl
adc
cmp
push
fists
imul
dec
roll
lahf
int3
inc
or
or
rolb
push
hlt
mov
or
push
inc
jg
inc
lcall
lahf
push
orl
lahf
or
je
test
add
push
call
xorl
or
inc
enter
inc
mov
cmp
lock
cmp
iret
mov
mov
dec
in
insb
daa
or
lahf
in
inc
and
pop
imul
sarl
loopne
outsl
push
jae
add
jmp
loopne
loop
and
lahf
dec
cltd
lods
lods
add
lahf
or
in
jo
out
cs
fs
mov
in
nop
mov
rorb
mov
aaa
and
push
and
lahf
mov
ja
in
jb
iret
test
in
pop
enter
aam
fldl
or
in
lahf
mov
add
sbb
cs
inc
lock
in
mov
push
xchg
inc
stos
xchg
outsl
aas
mov
dec
sahf
imul
add
sahf
mov
rcr
or
das
adc
lahf
fmuls
in
push
and
inc
jo
push
movsb
das
fmuls
outsl
xchg
clc
push
fs
dec
sahf
jo
clc
outsl
lock
aad
cs
xchg
mov
iret
add
nop
or
flds
clc
push
repnz
and
nop
or
out
outsb
in
pushf
adc
daa
addr16
insb
or
add
sahf
pop
pushf
daa
lods
in
xchg
mov
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
sbb
push
sub
cmp
aas
call
les
incl
lods
pop
adc
ja
mov
mov
add
dec
in
repnz
cld
sub
fiadds
out
dec
dec
call
fwait
pop
push
pusha
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
jmp
scas
in
cmp
in
scas
xor
dec
scas
in
and
aam
push
call
enter
add
push
pop
push
inc
xor
data16
icebp
cwtl
neg
dec
clc
adc
stc
mov
push
xor
lock
out
int3
mov
push
js
out
push
jns
out
sahf
push
inc
out
ds
ja
out
push
js
or
jl
jl
test
push
add
adc
scas
fisubs
jg
add
inc
inc
adc
dec
ja,pt
inc
cld
push
mov
push
ret
inc
lcall
add
nop
cmp
sub
in
mov
xchg
mov
idivl
push
or
fdivr
inc
push
push
incl
mov
jmp
ja
ss
arpl
leave
adc
popa
xchg
dec
inc
dec
outsl
scas
fs
pop
movsb
sti
inc
sbb
adc
add
shr
ret
xchg
cmp
loopne
in
in
outsl
add
insb
and
mov
daa
inc
in
ret
sarb
in
fildll
push
xor
cmp
filds
jb
scas
test
cmp
push
lock
adc
popa
and
push
rcrl
out
int3
sbb
and
xchg
mov
cmp
add
and
ljmp
dec
repnz
mov
scas
add
or
and
xor
push
jno
pop
xor
out
or
repnz
out
out
outsl
add
mov
fildll
loop
rolb
js
lcall
cwtl
add
jns
sub
add
jnp
xlat
add
adc
test
sub
leave
mov
je
negl
loopne
pop
jg
lods
or
out
adc
mov
sub
dec
enter
cld
lock
pop
in
and
outsl
sbb
xchg
and
fisubs
jl
adc
mov
fdivrp
and
push
xor
jbe
fcoms
add
aam
shl
xchg
add
cmpsl
pop
dec
out
sbb
daa
add
xlat
callw
cmpsl
in
push
xchg
aaa
sbb
add
fisubrs
divl
insb
jnp
jmp
push
fsubs
push
jbe
aaa
jmp
call
loopne
popa
popf
pop
mov
mov
sub
test
in
jg
push
jo
add
xor
cmovle
inc
repz
push
repz
jnp
ret
nop
pop
sbb
jecxz
push
ds
dec
add
js
mov
cwtl
mov
mov
divl
fisttps
hlt
adc
outsl
push
mov
mov
push
outsl
jg
inc
pop
cmp
pop
pusha
xchg
daa
cli
push
repnz
mov
mov
push
mov
cwtl
cmc
fnstsw
test
dec
xor
lcall
push
mov
pop
hlt
mov
loope
or
or
ficoml
and
or
decl
testb
aad
xlat
or
pushf
xchg
xchg
insb
dec
shl
push
testl
in
cmc
and
push
pop
cld
cmc
mov
testl
dec
push
push
mov
mov
testl
divb
xor
aaa
adc
divb
call
cmp
dec
divl
sub
outsl
sbb
or
js
cmpsl
push
pushf
nop
adc
xor
fiaddl
dec
mov
pusha
mov
jg
daa
cmpsl
mov
mov
clc
ja
loop
in
addb
xor
jg
in
fiaddl
int3
add
mov
jl
or
adc
bound
clc
and
in
push
mov
das
outsl
add
push
or
pop
mov
cmp
pop
dec
pop
cli
pop
adc
pop
stc
aaa
add
xchg
dec
and
mov
push
in
mov
lods
or
addr16
dec
xchg
add
add
daa
loopne
sub
daa
or
mov
inc
fcomip
sahf
xchg
test
movsb
adc
clc
sti
cmp
mov
fldt
ret
mov
or
aas
sub
push
test
xchg
sub
fdivrs
sti
sbb
movsb
mov
sti
push
sti
outsl
fsubl
inc
cs
fbld
rolb
add
add
xchg
aaa
and
cld
xchg
mov
mov
pop
pusha
and
xor
jl
out
lods
or
add
lahf
addr16
dec
loopne
or
out
les
jb
push
jb
add
pop
rcl
adc
mov
adc
push
mov
aas
arpl
or
idivb
fwait
sub
addr16
push
add
push
inc
mov
push
dec
mull
test
incb
sub
jns
or
jmp
das
aaa
and
outsb
dec
lcall
rcl
lock
or
inc
rcl
adc
mov
push
inc
ljmp
ja
shrb
clc
out
push
or
negl
mov
aam
clc
ja
pop
test
outsl
call
mov
mov
aad
shrb
add
dec
jns
int
shll
jae
xchg
repz
out
in
mov
cmpsl
stc
cmp
pushf
ret
mov
out
sahf
jo
mov
add
cmp
xchg
mov
sahf
out
cmp
repz
call
mov
sahf
cmpsl
stc
cmp
lea
repz
sarl
jbe
es
loope
jns
out
nop
cmp
jmp
cmp
pop
sbbb
jns
pop
mov
cmp
repz
insl
xchg
shl
sahf
cmpsl
stc
sub
cmp
out
or
jns
iret
rolb
xchg
and
iret
repz
add
add
arpl
cmp
imul
push
popf
rcrb
dec
repz
push
pop
movsb
sahf
ja
ds
pushf
ficomps
iret
sarl
inc
loop
lahf
push
out
out
lods
repnz
repz
ljmp
mov
out
ds
ds
mov
mov
mov
cmp
sbb
mov
cmpsb
movb
mov
loopne
cmpsl
jp,pt
jl
stc
sahf
mov
push
lahf
sbb
rcrl
push
stos
mov
push
stos
jbe
cli
xor
mov
lahf
lods
adc
jle
ds
jnp
jns
iret
sbb
repz
dec
jmp
mov
mov
xchg
imul
mov
lahf
iret
sarl
cmc
inc
mov
jmp
lahf
out
lcall
mov
iret
repz
mov
cmp
out
cmpsb
leave
pusha
mov
cmpsl
stc
add
mov
cmpb
enter
cmpsl
stc
out
repz
mov
sahf
mov
push
xchg
mov
cmp
repz
cmp
jns
out
ret
cli
xor
dec
jo
into
add
push
out
jl
cmpsl
out
lds
jns
push
mov
popa
push
enter
sahf
dec
subl
es
mov
fnstsw
lret
fiadds
mov
sarl
enter
xchg
mov
cmpsl
stc
cmp
push
iret
fwait
out
ss
jge
ja
push
mov
xor
pop
push
lods
cmp
out
xlat
cli
sub
stc
out
repz
ds
or
or
cmp
mov
add
out
lcall
mov
faddl
fdivs
cwtl
cmp
ja
push
lods
inc
fidivl
iret
sarl
imul
mov
ds
mov
or
test
test
daa
loopne
iret
imulb
shl
xchg
call
iret
div
jmp
push
sub
mov
xor
push
div
lcall
cli
loope
movsl
std
int
lods
mov
dec
add
xor
add
lahf
cmp
fnsave
int3
nopl
inc
incb
aas
mov
inc
cmp
repnz
popa
nopl
scas
adcl
lea
or
add
pop
aaa
int
mov
jge
inc
pop
mov
outsb
pop
leave
or
addb
adc
aas
pop
xchg
xor
das
fs
fsub
adc
pop
fildll
das
stos
popf
push
cmp
xchg
mov
sarl
aas
pop
cmp
into
mov
pop
and
movl
mov
or
out
aas
int3
adc
mov
sbb
push
outsl
adc
inc
movl
dec
sbb
inc
dec
pop
iret
mov
cmpsl
fmul
and
fwait
xor
and
inc
dec
pop
dec
jg
jb
cmp
dec
aas
in
xchg
outsl
test
scas
xlat
ss
push
inc
pop
or
lods
adc
movq
mov
clc
add
daa
hlt
push
ret
jl
pop
cmp
lods
cmpl
adc
shlb
ja
or
inc
push
push
pop
push
lahf
cmp
enter
inc
js
jns
xchg
xchg
pushf
movsb
or
mov
fists
inc
ffreep
movl
pop
cmp
mov
sarb
hlt
jne
repnz
pcmpeqb
scas
orb
les
dec
leave
sbbl
inc
inc
xchg
pop
inc
leave
or
jne
xchg
inc
shlb
lahf
leave
out
loope
push
dec
xchg
or
mov
add
inc
lds
inc
pop
inc
or
push
or
jmp
xchg
leave
mov
dec
fldenv
add
in
xchg
outsl
pop
iret
ja
pop
mov
mov
xor
in
mov
ja
fildl
outsb
fbstp
mov
mov
cmp
in
pushf
lea
push
mov
js
xchg
mov
push
push
pop
and
cmp
lret
push
inc
dec
mov
out
xchg
mov
fimull
cmp
aam
xchg
rorl
xchg
xchg
add
pop
ja
pop
jb
mov
xlat
popf
popa
scas
xor
push
mov
cmpsl
sbb
and
das
mov
pushf
in
mov
jo
push
fisttps
mov
push
scas
mov
xor
add
repnz
sub
pop
ret
or
inc
mov
mov
jl
add
cmp
push
push
lea
fdivrl
scas
in
leave
aam
xchg
lock
dec
cmpsb
popf
push
dec
mov
je
sarb
pop
ja
xchg
pop
mov
iret
fcompl
out
add
pop
fisubl
or
int3
adc
enter
cmpsl
xor
and
jb
call
sbb
push
addr16
pop
mov
push
daa
push
or
in
outsl
mov
xchg
xchg
xchg
add
pop
roll
adc
pop
xlat
movsl
ja
data16
aaa
dec
cmpsl
cmpsb
test
push
adcl
lea
test
mov
shrl
push
add
jne
popf
fldt
jne
jge
movl
je
dec
dec
mov
shl
popf
xor
push
dec
dec
cs
jo
repz
enter
add
out
and
ds
in
jbe
in
cmovbe
divps
popw
outsb
mov
sbb
pop
xchg
add
andb
jmp
repz
push
fcmovnb
out
iret
repz
or
or
or
repnz
lcall
mov
js
dec
push
add
jbe
scas
push
push
daa
pop
pop
addr16
ret
in
in
xorb
daa
mov
stos
xchg
mov
add
iret
repz
add
add
xchg
or
and
test
imul
xchg
leave
inc
cmp
push
cmpsl
add
cmpsl
in
inc
scas
ja
dec
pop
or
cmp
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
pusha
sbb
leave
dec
lods
daa
jo
jne
das
mov
scas
test
inc
in
hlt
nop
in
inc
add
into
sbb
xchg
out
in
xchg
xchg
icebp
xchg
cld
xchg
or
sbb
fcmovnb
add
xor
add
bound
push
fists
test
jo
jno
pop
push
aas
mov
xchg
lock
jp
or
repnz
sbb
cmpsb
roll
scas
push
shlb
in
mov
push
add
mov
xchg
inc
dec
leave
add
sbb
sbb
sbb
jns
bswap
aas
nop
inc
push
sbb
nop
and
inc
sbb
xchg
push
mov
and
notl
ja
xchg
dec
enter
cmp
mov
aaa
sbb
xchg
mov
mov
sbb
push
daa
push
sbb
inc
jo
add
mov
sbb
jg
xchg
fildl
pop
mov
xchg
sbb
xchg
js
mov
aam
aas
pop
cmpsl
cmp
dec
jb
sbb
pop
pop
xor
pop
xlat
mov
outsl
into
out
inc
rcll
popl
mov
inc
sub
jb
sbb
leave
stos
push
mov
mov
push
filds
fs
push
je
jbe
das
and
inc
ucomiss
push
jmp
rclb
add
dec
lcall
dec
outsb
pop
int
xchg
inc
lds
ja
addr16
pop
dec
shl
pop
in
push
repnz
adc
paddw
mov
pop
adc
daa
lahf
add
mov
and
cmp
and
mov
sbbb
popf
adcl
push
add
iret
repz
add
ror
pop
in
sti
inc
or
pop
leave
mov
xchg
and
push
ret
mov
mov
sbb
movsb
sub
and
pop
and
xlat
test
movsb
in
es
and
rorb
repnz
cmc
xchg
or
sbb
and
jg
cmpl
push
inc
out
jb
add
fsubrs
xchg
cwtl
mov
int
push
out
clc
mov
adc
and
int
cwtl
je
popa
aaa
mov
test
mov
mov
pop
rclb
and
push
lcall
xchg
pushf
pop
mov
scas
add
mov
fnstsw
out
ja
cmp
icebp
xchg
es
rcrl
fbstp
and
out
push
sets
test
mov
mov
fistps
fs
pop
in
mov
mov
clc
stc
fcmovbe
out
adcb
push
pop
mov
cmp
adc
and
addb
mov
pop
sbb
es
popf
push
popf
add
iret
mov
cs
pop
cld
es
in
in
es
pushf
jbe
jecxz
jmp
scas
inc
daa
pop
jo
mov
cwtl
cltd
push
daa
aas
mov
ret
lret
outsl
rorl
add
out
fucomi
add
hlt
in
pop
sahf
out
setle
or
daa
sahf
mov
inc
jg
adc
inc
lret
adc
and
xor
mov
inc
push
push
mov
ja
pop
ja
pop
daa
jbe
daa
orl
mov
sbb
xlat
cmpsl
cltd
push
scas
movsb
push
lahf
scas
sahf
call
pop
push
leave
aam
fildl
sub
push
xlat
mov
cmp
xor
add
inc
xchg
adc
cmp
pop
mov
outsb
js
out
mov
jns
fstpl
lahf
sahf
lahf
sbb
push
pop
call
shlb
pminsw
vmwrite
sub
or
fstpl
dec
outsb
daa
iret
jnp
push
add
das
jo
fcmovne
repz
add
es
ja
xchg
cwtl
mov
cmpsl
addr16
pop
int3
sbb
in
daa
repnz
or
rcrl
xchg
and
pop
lods
inc
push
xchg
leave
and
int
mov
scas
ja
cmc
mov
mov
fs
mov
into
push
mov
push
pop
leave
jae
pop
dec
ja
test
fwait
bt
out
iret
cmp
mov
add
and
daa
daa
fiadds
push
pop
sbb
ljmp
dec
inc
cmovnp
add
in
fisubrs
ja
mov
mov
cmpsl
push
into
sub
sub
jae
iret
repz
sti
pop
movsb
pop
repz
or
ja
mov
ja
pop
repz
cmp
dec
add
add
cmp
leave
insl
js
orl
cltd
or
scas
das
mov
in
dec
sahf
push
adc
iret
enter
adc
pop
movsl
adc
shr
es
cmp
xor
ljmp
jmp
fbstp
pop
das
push
lcall
rsm
mov
jae
push
addr16
xchg
push
idiv
pop
push
cmpsb
mov
push
add
and
xlat
fcomps
shrb
setb
dec
cmpsb
xor
fnsave
ja
xorb
ss
cmp
push
inc
jb
and
push
shl
inc
jb
sti
cld
push
cmpsl
mov
pop
and
daa
cs
add
add
xor
pop
xchg
xchg
cmpsl
loopne
test
mov
int
das
add
in
test
addl
in
scas
mov
out
inc
scas
cld
xor
in
push
mov
call
les
orb
xor
xor
jo
add
pavgb
call
lock
adc
mov
test
and
loope
cmp
cmp
mov
or
mov
push
mov
mov
out
in
in
add
fucom
in
pop
inc
mov
test
test
xchg
and
mov
das
push
test
pop
je
out
mov
inc
mov
push
add
mov
jns
leave
xrelease
or
leave
leave
in
and
idiv
adc
sete
sub
es
xchg
stos
xor
pop
stos
xchg
popf
out
add
bound
add
jnp
jle
fsubrs
popf
pop
cmpsl
scas
addr16
cmp
adc
in
cmp
rolb
decb
sbb
push
push
mov
dec
mov
jo
outsb
stos
dec
xor
mov
xor
repnz
pushf
stos
cmpsl
stos
ss
fimull
loop
ljmp
repnz
jns
xchg
js
lods
lcall
in
and
mov
out
adc
jo
adcl
fldt
mov
mov
dec
dec
sub
fists
popa
sub
dec
out
pop
imull
dec
incl
lods
femms
push
push
pop
out
jns
pop
or
das
or
jns
xchg
aaa
aas
or
or
dec
push
push
pop
adc
repz
adc
jg
sahf
xlat
insl
pop
unpckhps
xchg
vphaddbw
xchg
lods
xlat
sbb
int3
mov
lods
das
std
repnz
scas
das
fsubl
sub
push
pop
cmp
int
ja
push
xchg
scas
js
shll
scas
scas
in
movsl
inc
jmp
cmp
cmp
scas
push
hlt
xchg
sbb
ss
das
pop
cmp
mov
imul
ja
cmp
xchg
pop
add
ja
or
scas
push
movzbl
dec
or
into
cmp
and
fimuls
pop
repnz
cmovle
add
outsl
jp
pop
cmp
push
aas
ret
jnp
in
rcll
jl
aas
pop
dec
or
pop
cmc
jo
aaa
or
push
adc
adc
pop
out
jo
adc
in
sbb
push
cmp
and
in
xchg
cmp
cmp
cmp
enter
xor
aas
push
add
xlat
outsl
dec
push
add
daa
daa
iret
enter
add
pushf
cmp
test
mov
lea
lret
or
pushl
repnz
sub
xor
loope
xlat
iret
inc
push
pop
jb
add
add
dec
and
incb
lcall
pusha
cmp
inc
fimuls
dec
mov
add
insb
jmp
repz
jp
add
xchg
push
repz
push
mov
inc
pop
cmp
push
loopne
or
inc
xchg
call
mov
jns
out
push
add
add
add
jns
out
add
add
sahf
push
jns
mov
xchg
jp
out
or
ss
add
push
push
repz
std
mov
add
mov
fnstcw
mov
ds
xchg
sbb
sub
repnz
cmp
in
fs
mov
ficompl
iret
pushl
lds
into
mov
and
arpl
or
aam
leave
add
aas
mov
xor
in
pop
in
in
in
in
aad
lds
push
adcb
lahf
addb
addr16
inc
cmp
inc
leave
in
mov
xchg
cmp
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
mov
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
inc
inc
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
js
push
mov
mov
or
or
stc
or
add
cs
and
gs
hlt
inc
and
insl
inc
mov
insb
scas
roll
scas
jl
pop
adc
sub
mov
mov
je
fildl
ja
fucomi
sub
call
jns
out
xlat
pop
fbstp
outsb
pop
out
maskmovq
or
inc
mov
sub
mov
inc
sbb
nop
cmp
frstor
add
push
mov
mov
lods
xchg
mov
nop
lcall
daa
adc
loopne
enter
dec
or
fcmovu
sbb
das
and
dec
je
test
push
addr16
pop
and
add
rorb
sahf
cmpl
dec
jecxz
mov
daa
mov
iret
in
hlt
mov
out
mov
xlat
mov
mov
mov
call
pop
jo
pop
hlt
loope
rcll
add
flds
dec
mov
cmpsl
push
and
fstps
xor
xchg
iret
add
mov
mov
out
add
das
jg
cmpl
xchg
fimuls
add
sahf
dec
pop
cmp
cmpsl
or
adc
stc
nopl
mov
fisubl
bound
jp
xchg
inc
daa
mov
mov
mov
fstpt
push
rcrl
psllq
movsb
add
fmull
out
jns
iret
or
std
push
or
mov
adc
push
push
setle
js
sub
out
adc
insb
cmp
scas
mov
daa
iret
add
das
jbe
leave
leave
jg
seta
xor
imul
mov
mov
mov
por
in
add
adc
xchg
add
and
aaa
mov
sahf
aaa
xacquire
fs
add
iret
mov
jle
xchg
pop
nop
subl
or
test
leave
movsb
mov
das
pop
xchg
xchg
mov
mov
decl
pop
mov
leave
and
push
push
mov
push
mov
xchg
setl
jbe
fildll
jns
leave
repz
in
pop
jo
out
dec
cli
dec
or
sub
sbb
je
pusha
punpckhbw
sahf
ja
mov
orb
push
add
dec
push
dec
cwtl
xlat
or
adc
lods
adc
push
xchg
pop
pop
push
aas
push
pop
leave
xor
shlb
mov
shlb
cmp
add
mov
cmpsl
push
sub
das
daa
daa
mov
je
jl
mov
mov
insl
xchg
outsb
pop
sub
iret
fidivrl
pop
ja
loop
ljmp
cli
add
pop
add
shl
xor
rcrl
repnz
scas
push
add
movsl
sarb
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fiadds
mov
dec
iret
leave
insl
in
ret
sbb
add
insl
xchg
pop
xchg
sub
push
xchg
dec
dec
dec
outsb
daa
push
subps
sbb
das
popl
xchg
setg
iret
cmpsl
addr16
leave
leave
scas
mov
push
leave
inc
repnz
or
ljmp
mov
addr16
adc
xchg
mov
ret
mov
mov
punpcklbw
int3
pushf
pushf
fsubrl
mov
fwait
add
pop
push
mov
fbld
out
je
jmp
fists
aas
sbb
ja
lret
les
sub
xchg
jns
xor
add
setnp
push
cmp
rcr
popf
or
xlat
mov
les
push
inc
call
fmull
pop
aas
int3
paddq
xchg
mov
lds
cmp
and
lds
cmp
mov
leave
leave
leave
mov
xchg
pop
leave
aas
dec
outsb
mov
jecxz
out
xchg
lds
add
in
sub
aas
shufps
push
popa
pushf
pusha
push
aaa
push
rorb
imul
jae
in
push
fisttps
xchg
cmp
sbb
ja
scas
and
mov
clc
scas
fcmovne
in
iret
mov
loope
add
cld
movsb
adc
pop
pop
adc
iret
jae
mov
and
insl
xchg
inc
pop
dec
outsl
push
stos
cwtl
in
lcall
push
dec
ficomps
iret
xchg
fsubrl
sub
pop
popf
fildll
es
mov
das
lret
repz
cs
rcr
rorb
or
dec
and
push
pop
invd
push
push
cmpl
movsb
fstpt
add
setb
add
fcoms
fmull
fstpt
enter
pop
xchg
mov
mov
or
in
in
mov
or
leave
push
push
push
jle
leave
cmp
push
dec
leave
mov
imul
push
add
icebp
in
push
orl
inc
mov
or
pop
or
daa
sbb
lret
xchg
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
and
leave
cltd
lret
les
mov
mov
or
adc
leave
repz
add
stos
daa
aaa
inc
out
sub
lret
jmp
mov
mov
out
pop
outsl
in
jbe
insl
addr16
setg
cmpsl
bt
mov
pop
sahf
and
leave
cmp
mov
mov
push
sbb
add
and
push
sahf
out
sahf
or
pop
or
pop
out
or
int3
dec
and
sbb
cwtl
pop
mov
mov
xadd
push
fildl
xchg
lcall
addr16
repz
add
scas
test
fwait
pop
or
add
adc
and
sbb
pop
fbld
adcb
int
dec
mov
pop
int
cwtl
addl
out
loopne
repnz
pop
xchg
add
jg
pop
xor
mov
dec
pop
je
sub
add
dec
repnz
int
int
out
inc
dec
jne
sbb
out
outsb
mov
cmovo
dec
add
out
in
sahf
add
push
or
repz
or
leave
repz
cmp
repz
les
iret
adc
repz
ficoml
in
lock
adc
iret
adc
jnp
push
sbb
daa
sbb
repz
xor
cmp
dec
mov
adc
adc
adc
dec
dec
dec
dec
adc
push
or
push
sub
pop
xor
lock
out
iret
iret
jnp
xchg
mov
add
xchg
inc
xor
je
aas
push
xchg
out
push
jns
daa
lods
pop
jl
daa
daa
pop
leave
popf
mov
jmp
push
test
ffree
fidivs
scas
adc
das
add
scas
xchg
outsl
dec
sahf
or
pop
daa
or
push
mov
cmpsl
rcrb
ja
scas
push
dec
and
ljmp
rorb
mov
ja
push
pusha
test
jmp
cmp
mov
pop
mov
cmpsl
pop
sarb
cmp
enter
fsub
cmp
dec
mov
add
pop
xchg
iret
or
leave
lret
and
adc
sub
and
dec
push
and
xchg
jp
adc
iret
loopne
repnz
iret
cmp
rcll
pop
lcall
pop
adc
sar
and
mov
dec
push
pop
dec
xchg
xchg
out
add
out
mov
xchg
push
mov
ja
jbe
cltd
mov
ror
inc
dec
xor
xchg
repz
in
rorl
push
add
add
jns
leave
sbb
push
add
mov
xor
pop
cmp
or
repz
sahf
or
push
or
or
popa
push
imul
dec
adc
repnz
mov
xchg
pushf
inc
ss
movsb
xchg
push
popa
pop
pushf
fmull
movl
repz
shl
ja
loopne
cmp
inc
das
fdiv
inc
mov
add
rcrb
xor
lret
test
movsl
xlat
push
dec
inc
aam
push
lret
test
iret
add
aam
pop
les
outsb
push
fildll
jno
add
mov
or
xlat
gs
outsb
negl
jmp
sub
fs
iret
mov
dec
iret
xlat
pandn
outsb
pop
pushf
out
out
maskmovq
testl
sbb
and
and
push
mov
fcmovne
leave
inc
arpl
shld
fcomps
jmp
cmpsb
addr16
adc
or
sub
pop
jb
and
cwtl
rcrb
push
hlt
xchg
xlat
cmova
incl
push
jg
fldt
sub
or
xor
imull
push
mov
cmp
adc
jmp
mov
gs
movl
and
outsb
xchg
add
jmp
loope
add
or
psubsw
mov
cmova
push
pop
pop
xlat
iret
mov
inc
iret
popa
xlat
push
push
jno
jb
es
pop
add
mov
iret
leave
jns
or
movntq
out
cmp
adc
fsubrl
xchg
sarb
cmp
int3
paddq
mov
mov
jl
xchg
idiv
addr16
inc
jmp
enter
sub
js
xchg
dec
cld
dec
data16
jg
xor
mov
lahf
pxor
push
xchg
push
add
setae
in
idivl
enter
fsts
or
sub
xor
add
addr16
push
ret
test
outsb
fnstenv
leave
sub
push
mov
fwait
pop
movsl
xchg
pop
push
enter
lar
push
pop
sub
fldt
es
ud0
vmwrite
enter
ficoml
mov
aaa
fidivrl
or
mov
es
imul
mov
push
add
imul
dec
mov
ficompl
mov
fidivl
decl
xchg
mov
loope
cmp
push
cmp
push
daa
adc
xchg
cmp
scas
or
or
jnp
test
push
ja
in
xchg
push
or
adc
pop
fcmovnu
add
nop
push
xchg
cmp
dec
xorps
add
int3
test
sub
mov
popf
pop
pop
fisttpll
fisubl
imul
psubd
mov
and
xchg
in
fsubl
xchg
mov
xchg
pop
int3
xchg
fnstsw
add
loop
xchg
nopl
lods
daa
aaa
das
jg
xchg
xchg
fcomip
fdivr
pop
jb
outsb
or
pop
push
add
iret
jae
jb
add
or
sbb
and
or
rclb
dec
adc
mov
fisttpll
mov
pop
push
add
arpl
mov
mov
je
cmp
mov
es
mov
sahf
or
xlat
or
leave
out
or
insl
add
inc
inc
xchg
ficomps
push
mov
push
xlat
fmulp
pop
cmp
add
das
xchg
jae
js
push
popf
pop
dec
pop
lods
jns
pop
stos
iret
mov
dec
andnps
or
pop
fsub
pop
push
pop
gs
out
sahf
out
adc
jge
xchg
pushf
je
test
adc
mov
pop
vpmullw
jns
in
sbb
nopl
in
je
out
cmc
pop
std
mov
out
sbb
add
adc
mov
dec
and
sub
out
dec
xor
out
sahf
out
dec
sub
sub
pop
cs
insl
mov
mov
fildll
xor
insl
pop
lds
mov
sub
pop
cltd
and
dec
fsubrl
jmp
into
adc
push
aas
push
repnz
inc
fistps
jp
dec
jo
loopne
sbb
cltd
fnstsw
xchg
daa
pop
leave
test
andps
fmull
pop
xchg
add
leave
enter
outsl
mov
cmpsl
fwait
mov
push
mov
popf
scas
cmpsl
mov
mov
leave
repz
loopne
jmp
idivb
imull
add
or
cmp
iret
cmp
push
adc
adc
mov
adc
jns
iret
repz
test
push
pop
lcall
sbb
repz
sbb
sbb
out
repz
loope
cmp
rorl
and
repz
daa
and
inc
and
dec
es
daa
push
sub
subb
repz
sub
repz
cs
das
shlb
fucomi
aas
repz
addr16
jg
jecxz
adc
mov
jecxz
repz
inc
es
cmp
repz
push
and
and
cmp
rep
and
or
cmp
and
cmp
repz
scas
sbb
repz
iret
sbb
iret
repz
pop
in
lock
sti
sahf
cmpsl
stc
cmp
push
in
adc
cmp
repz
sbb
sub
scas
fwait
mov
inc
pop
push
jle
jb
jmp
pop
dec
cmovp
pop
pop
data16
sahf
ja
das
jle
mov
push
xchg
or
lahf
add
in
in
push
leave
bound
jno
outsl
call
psadbw
in
pop
in
inc
pop
pop
daa
in
in
pop
sahf
out
sahf
aas
or
or
out
or
cmpb
loopne
jle
in
setle
cmp
repz
repz
mov
adc
ficoml
in
out
xchg
pop
iret
repz
sbb
repz
sbb
sbb
xor
cmp
cmp
and
push
in
jo
js
orl
mov
cmpsb
push
sbb
repz
iret
repz
adc
in
iret
repz
in
adc
adc
ret
repz
movd
or
or
adc
sbb
and
cmp
repz
or
or
sbb
dec
inc
out
out
push
ds
dec
aaa
jns
cmovo
fsubrs
out
push
je
jp
ljmp
mov
mov
fistpl
pmaxub
pop
jo
mov
int
aad
or
mov
lahf
in
mov
in
push
pop
std
out
lea
pop
add
push
adc
sbb
iret
leave
leave
in
aaa
pop
aas
inc
push
sbb
adc
cmpsl
sbb
addb
cwtl
jbe
call
dec
ja
call
push
push
daa
mov
xchg
out
add
jecxz
add
jbe
psubq
jmp
jb
sbb
and
in
sahf
out
adc
popf
cmp
push
push
adc
jb
jb
jp
orb
lcall
jb
ret
and
and
jmp
shlb
ljmp
ljmp
jns
cmp
dec
sahf
pop
push
pop
packsswb
or
je
imul
jae
push
out
dec
sahf
push
orl
daa
mov
fwait
mov
scas
daa
push
leave
addr16
adc
loope
jb
daa
out
ljmp
iret
repz
adc
add
iret
leave
repz
xor
leave
repz
push
or
jns
out
pusha
push
imul
cmp
out
adcl
dec
sahf
ja
push
adc
into
psubusw
out
pop
in
out
sbb
iret
in
pop
cmp
in
pop
adc
pop
sbb
xor
cmp
pushf
cmp
inc
and
and
and
leave
repz
xchg
lahf
rsm
sahf
xchg
xchg
xchg
mov
lret
lds
in
imul
outsl
movsb
push
leave
xor
call
jne
addr16
iret
push
pop
sub
dec
push
add
dec
in
out
sahf
pop
push
add
out
sahf
pop
je
jle
xchg
lcall
mov
jae
jb
lret
jns
daa
loop
ljmp
cli
sbb
out
bndldx
dec
aaa
jns
or
adc
sbb
cmp
and
xchg
inc
pop
maxps
pushf
pushf
pushf
jno
orl
out
mov
insl
lods
das
mov
or
jl
xchg
xchg
test
fidivrs
push
std
or
push
jl
mov
and
fildll
push
or
cmp
repnz
fwait
push
or
bound
mov
jp
outsb
mov
in
test
lahf
fwait
mov
cmp
repz
adc
adc
fcmovne
aam
paddsb
lock
iret
repz
push
fistpl
sbb
cmc
push
add
mov
cmp
push
nop
pop
and
lahf
in
in
cmp
icebp
mov
add
maskmovq
jae
movaps
sub
sub
jae
cmp
sub
cmp
repz
pop
xor
repz
repz
jge
mov
repz
fidivs
xchg
sahf
sahf
ss
aaa
xchg
cmpsb
repnz
cmp
cmp
mov
lahf
icebp
aas
jb
cmp
sahf
out
fidivrs
aas
mov
stos
scas
mov
roll
iret
repz
inc
xlat
inc
in
outsl
daa
iret
inc
icebp
das
or
dec
adc
cmp
repz
adc
add
lock
daa
je
dec
int
dec
adcl
sarb
js
movsl
xchg
jge
jg
pop
repnz
fcoml
mov
jle
mov
push
ja
cmp
push
mov
in
jns
or
or
fdivrl
and
repnz
iret
repz
push
sbb
adc
inc
push
adc
adc
push
popa
insb
pop
sbb
fsubrl
orb
pop
lcall
mov
bswap
push
and
in
repnz
por
dec
ss
icebp
add
jg
or
cmp
inc
push
add
pop
xchg
cwtl
fs
hlt
sbbl
push
add
popf
add
mov
pop
mov
pop
cmp
fcompl
cmc
hlt
jl
mov
pop
or
cmovle
cmc
cmp
mov
push
adc
adc
mov
adc
repz
pop
pop
sbb
out
fidivrs
sbb
repnz
mov
sub
iret
jnp
xor
push
shll
jae
mov
fimuls
jmp
cmp
daa
ljmp
or
cs
and
push
sub
fnstcw
fbstp
cwtl
addl
dec
jg
mov
sbb
div
popf
cmp
repz
add
mov
fidivrs
lahf
out
jecxz,pn
repnz
adc
outsl
jp
pop
testl
negl
cmp
push
push
push
sahf
out
dec
pop
punpckhbw
or
je
out
jle
mov
or
xchg
push
lahf
stos
adc
cmp
repz
rclb
mov
sbb
out
pop
jecxz
out
sahf
adc
ds
pop
stc
and
and
sbb
sbb
mov
out
push
sbb
sbb
sahf
out
pop
aas
and
out
pop
and
in
sahf
out
and
mov
in
popf
out
leave
scas
loopne
rcr
testb
push
or
sbb
test
sub
enter
inc
mov
xor
out
sahf
out
add
push
add
cmp
xchg
pop
push
iret
repz
or
cmp
repz
mov
mov
repnz
ficoms
xor
pop
mov
out
cmp
cli
push
adc
push
adc
and
cli
outsl
cmp
inc
cs
dec
sahf
out
sbb
cli
dec
and
js
cmpsb
cli
xchg
out
adc
push
add
ror
xlat
push
add
scas
push
pop
out
bnd
out
testl
sbb
sti
prefetch
sti
daa
iret
repz
adc
cmp
inc
cmovge
adc
daa
iret
repz
pop
insl
js
out
outsb
pop
sbbl
sbb
sbb
sbb
out
in
mov
and
iret
and
and
repnz
out
cmp
cld
adc
sub
add
add
adc
leave
repz
pop
or
pop
in
cld
pop
test
repz
aaa
femms
fwait
jae
cmp
adc
outsb
daa
iret
adc
call
in
femms
sbb
sbb
cld
or
push
push
sbb
mov
pop
aaa
inc
std
repz
lahf
dec
std
fisttps
iret
repz
arpl
and
popf
cmp
setp
cmovs
pop
pop
sub
xchg
and
xor
enter
decl
add
outsb
mov
out
sbb
xor
das
dec
pop
in
sbb
mov
enter
jns
push
mov
mov
pop
syscall
lcall
mov
mov
repnz
syscall
or
fucomi
in
or
movntq
enter
adc
sub
iret
repz
adc
repnz
lcall
out
cmp
les
iret
fisubrl
sbb
cmp
sahf
in
lock
decl
jne
jmp
push
das
popa
push
and
jns
xchg
insb
ja
orb
cwtl
daa
mov
xchg
scas
pop
das
sub
dec
sahf
out
sub
movsb
fwait
cmp
fidivl
in
pop
jnp
cmp
xor
lock
push
add
cmp
adc
sbb
ds
in
xchg
add
jmp
insb
por
jns
ja
cmp
in
repnz
cwtl
incl
mov
sbb
jl
btc
popf
stos
das
mov
fsubrl
iret
push
ror
fmuls
jecxz
iret
leave
repz
stc
or
add
frstor
adc
das
sbb
daa
push
adc
cmp
xor
cmp
out
outsb
daa
pusha
das
imul
push
pop
jbe
jns
sbbl
pop
sahf
out
in
mov
repz
psubsb
repz
dec
inc
ds
add
cs
xchg
and
arpl
outsb
jae
cmp
sub
test
stc
icebp
sub
pop
cs
iret
fwait
sbb
push
xor
xor
xor
outsb
xor
mov
bsf
cmpsb
js
jb
fisttpll
iret
push
in
jecxz
packsswb
cmp
pop
add
mov
push
add
iret
mov
push
pop
mov
daa
mov
or
mov
pextrw
das
smsw
add
in
add
add
xor
push
or
jl
rcrl
xor
dec
jo
mov
outsb
adc
push
cmpsl
mov
iret
aaa
cmp
cmp
adc
dec
js
and
pusha
mov
add
pop
sbb
sub
mov
out
aaa
mov
add
pop
in
push
rcll
fs
push
daa
xchg
ss
add
add
aas
inc
push
or
les
pop
ljmp
outsb
pop
cmp
dec
aaa
test
add
xlat
xacquire
add
push
rol
push
push
mov
xchg
and
push
pop
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
ja
push
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
out
sbb
notl
fildl
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
sbb
and
dec
sbb
add
or
sbb
pusha
inc
adc
add
lods
and
add
mov
inc
and
adc
adc
stos
cmp
pop
test
lds
adc
inc
xchg
or
lods
pusha
cmpb
cmpsb
fisttps
mov
stc
sbbl
mov
sbb
cmovo
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
xchg
mov
xor
sahf
addr16
out
pushf
and
xchg
nop
jns
out
mov
jns
out
pusha
push
dec
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
xor
out
or
and
in
and
repz
push
aam
shlb
mov
movsb
repz
repz
push
fs
pop
push
cmp
jns
dec
mov
cmp
sbb
out
fdivrp
clc
and
aam
mov
mov
mov
cmp
jns
js
jo
pusha
ja
cmp
push
cmp
and
push
iret
repz
or
and
fadd
mov
jnp
mov
pushf
push
je
pusha
or
adcb
icebp
or
add
adc
imulb
sbb
add
mov
pushf
lock
js
clc
mulb
mov
dec
hlt
xor
cmp
cltd
pop
aas
sbb
es
push
test
insl
add
or
clc
pop
and
cwtl
xchg
xorb
addr16
outsl
lock
call
push
mov
mov
jg
mov
cmp
mov
inc
dec
inc
sgdtl
push
adc
mov
sbb
dec
lock
mov
or
and
sti
add
add
fadd
xor
insb
push
insl
jb
testl
inc
outsl
and
test
iret
xchg
sub
mov
js,pn
cmpsb
fiaddl
inc
stc
pop
jg
jl
add
negb
stc
pop
out
insb
sbb
add
out
mov
adc
xchg
es
iret
cmp
xor
ss
repz
jle
cmp
sahf
out
push
and
sbb
push
adc
ds
and
iret
jnp
push
dec
push
fcoms
push
aam
iret
repz
rorb
or
jnp
repz
pop
inc
sbb
fcompl
jns
idivl
adc
xor
sub
push
sahf
out
and
push
and
iret
repz
adc
and
add
clc
aaa
inc
int
xchg
int3
out
clc
shr
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
subb
inc
xor
lea
add
loopne
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
lar
repnz
adc
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
incl
lcall
lock
mov
popa
sar
mov
sbbb
xchg
clc
repz
aam
jmp
mov
subb
fwait
xchg
and
out
aas
xor
xor
int
add
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
pushl
xchg
test
pop
mov
jne
fldt
cmp
jno
shlb
out
decl
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
push
decl
gs
std
orl
pop
ficomps
frstor
leave
adc
add
add
mov
jo
xlat
add
lock
inc
je
inc
inc
push
dec
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
fwait
gs
dec
mov
mov
call
push
inc
dec
stos
insl
jbe
inc
jo
inc
popa
push
outsb
jbe
imul
push
sub
outsl
lock
mov
imul
dec
push
sub
outsl
add
cmp
pop
xor
rcl
or
push
dec
pusha
push
or
push
inc
dec
push
inc
push
and
mov
jo
jb
push
sbb
inc
test
lock
dec
inc
gs
gs
mov
jbe
addb
arpl
inc
or
mov
sbb
sub
dec
outsl
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
lcall
add
rorb
insb
push
das
push
fs
sub
imul
inc
adc
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
mov
adc
dec
in
inc
ds
je
sbb
out
dec
push
dec
dec
lods
std
dec
add
dec
bound
jbe
movsl
cmpsb
sbb
xchg
sub
scas
push
mov
or
inc
cmpsb
dec
adc
fstpt
dec
cli
adc
outsb
arpl
outsl
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jmp
adc
mov
push
mov
ja
inc
xchg
push
push
in
sbb
imul
imul
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
cmp
push
insl
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
movsl
add
mov
data16
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmpsl
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
dec
push
orl
rsqrtps
push
dec
daa
dec
dec
sub
or
out
cwtl
xchg
cmp
cmpsl
xchg
push
inc
in
arpl
dec
outsl
sbb
insl
imul
xchg
clc
pop
push
jne
les
outsl
rolb
loopne
push
sbb
pop
dec
outsl
or
aad
iret
insl
mov
popa
inc
iret
pop
les
addb
fdivrl
inc
das
xlat
mov
dec
jg
repz
and
push
mov
stc
cmp
cmp
lock
out
sahf
shlb
cwtl
or
mov
daa
jl
iret
leave
mov
das
push
mov
mov
push
and
lahf
incl
inc
addb
sub
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
call
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
lcall
iret
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
jg
and
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
push
loope
or
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
and
aam
sbb
mov
inc
xchg
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
cmp
or
out
and
dec
dec
inc
js
inc
insl
bound
inc
out
push
jo
jne
inc
inc
inc
js
fadd
mov
push
dec
orl
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mulb
icebp
xor
inc
or
in
cmp
add
ror
lret
add
inc
loope
ljmp
cs
hlt
lods
test
ss
jbe
divb
aad
arpl
popl
add
aas
test
xor
inc
loopne
and
push
lock
aaa
addl
mov
test
mov
push
xorl
sub
dec
mov
je
aaa
roll
fidivrs
inc
push
bound
add
ljmp
mov
and
jae
popa
jne
and
xor
scas
pop
inc
aas
dec
push
mov
inc
adc
xor
mov
es
inc
inc
inc
add
insl
test
adc
ds
imulb
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outsb
jne
pop
insl
inc
dec
add
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
sbb
popf
sbb
dec
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
pushf
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
mov
lds
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
jo
push
inc
mov
push
pop
push
and
push
loopne
insb
jns
das
insb
jmp
loopne
pusha
push
popa
jb
or
sub
test
adc
or
add
push
bound
sub
addr16
test
push
aaa
ja
mov
adc
jae
push
loop
popf
xor
add
ret
push
mov
aaa
pop
sar
sub
sub
mov
addr16
pop
cmp
add
jns
lods
sub
scas
sub
aas
arpl
ret
jg
mov
add
aaa
aam
pusha
das
fcoms
push
loop
aaa
cmp
cmp
cwtl
mov
sub
test
pop
inc
inc
adc
mov
add
push
add
push
xorb
rcrb
dec
aaa
add
pop
xor
sbb
outsb
dec
pop
nop
pop
or
push
or
pop
mov
int
mov
shlb
pop
and
pop
add
add
cwtl
outsb
outsl
je
add
xchg
jb
fistl
dec
cld
and
and
cs
pop
shll
dec
shrd
popa
incl
lea
in
bswap
stc
out
mov
out
ud0
jmp
repnz
in
pop
ds
push
pusha
ljmp
lret
cli
push
sbb
testl
lahf
daa
aam
gs
dec
sti
xchg
mov
daa
loopne
add
or
or
outsb
jns
dec
insb
daa
aam
cmp
add
dec
push
adc
add
aas
jl
mov
add
sbb
add
prefetch
pop
xor
push
test
mov
mov
insb
push
adc
or
loop
mov
rcrb
pusha
push
add
fldenv
loopne
add
ja,pn
lahf
or
and
and
lods
xor
cltd
nop
add
jb,pn
es
mov
jge
jns
lret
cs
and
xorl
push
out
rcrb
out
dec
leave
cmpsl
sahf
add
jb
jns
testl
push
orb
orb
dec
dec
cmpsb
adc
and
push
scas
and
lcall
push
hlt
pop
dec
sub
lea
add
adc
pop
or
dec
jne
sahf
sbb
js
pop
xchg
gs
sub
sbb
xchg
cli
stc
jbe
shlb
push
out
xor
enter
sbb
call
std
cvtps2pi
ja
jne
jmp
mov
imul
call
cltd
xor
in
sub
loope
pop
adc
jnp
clc
or
hlt
mov
insl
adc
shr
fwait
and
hlt
jl
les
xchg
mov
sbb
pushf
adc
or
pop
ficompl
clc
add
lret
inc
pop
rolb
mov
lea
xorps
sbb
push
movzbl
call
nop
fadds
mov
mov
popa
mov
rolb
lds
cmp
jbe
mov
add
pop
xchg
aam
adc
call
out
fildl
and
pop
cmp
push
mov
rcll
push
adcb
loopne
popf
pop
outsl
jns
xor
movsl
or
rorb
fistl
sbbb
push
add
outsb
dec
ret
ja
ret
or
fisubrl
push
sub
aad
or
jns
jne
push
inc
imul
add
adc
sub
mov
mov
fcomps
push
imul
or
outsb
xor
enter
inc
dec
and
add
bound
imul
inc
fcoms
and
jo
or
shrb
mov
movsl
adc
sub
xor
cld
add
dec
mov
push
imul
or
enter
ficoms
push
push
fldt
cmpsl
mov
in
push
leave
push
or
dec
loop
pop
mov
cmp
pop
add
out
mov
xchg
dec
or
push
xorb
outsl
push
cmpsl
ret
xchg
test
je
sahf
xchg
in
add
dec
pop
push
ret
jmp
rorb
inc
pop
nop
sbb
aad
stos
pop
cltd
test
mov
lods
and
sub
and
sbb
push
adc
nop
or
or
imul
mov
es
rorl
sbb
aam
je
inc
test
popa
ret
fcmovnb
push
add
sbb
add
push
mov
push
jl
in
aam
lea
dec
out
or
lds
push
mov
pop
mov
rcr
or
jno
push
jne
andl
add
lds
je
rcrl
sub
xchg
in
add
and
and
cmpsl
push
or
mov
popa
pop
adc
add
repnz
pop
cmp
iret
inc
dec
inc
or
mov
cmp
inc
repnz
mulb
jg
movsw
mov
sbb
cmpsl
sbb
int
jge
in
push
data16
add
jae
aas
adc
and
xchg
popf
jecxz
cmp
outsb
fcoml
and
gs
addl
push
enter
insl
andl
push
inc
push
push
insb
fmull
sbb
hlt
sub
insl
and
aad
lahf
push
rclb
shlb
inc
and
mov
mov
adc
sub
or
sub
cmp
add
jl
sbb
aaa
and
lcall
or
stc
jp
cmp
ljmp
ljmp
pop
jp
push
cltd
clc
ljmp
call
or
pop
and
iret
ficoms
pop
xchg
sbb
test
ja
push
rolb
pop
and
ret
call
push
fsubrl
jnp
int
lods
and
sub
xor
mov
call
adc
add
and
add
in
add
or
popf
shlb
and
push
or
scas
add
or
icebp
insl
scas
lcall
rcll
sbb
ja
lods
sub
enter
push
pop
sbb
nop
dec
das
and
mov
jge
loopne
sub
cmp
push
push
call
call
push
mov
pop
jne
xchg
lea
dec
mov
xor
mov
or
scas
add
nop
inc
daa
nop
rol
ss
cmpsb
icebp
imul
adc
add
push
dec
inc
lock
out
mov
pop
enter
cmp
xor
adc
call
lret
popa
inc
mov
add
lods
or
ja
pop
mov
xchg
xchg
jge
mov
dec
call
imull
into
pop
in
dec
push
inc
mov
lods
mov
loopne
stos
imul
mov
push
mov
cs
sbb
movsl
call
and
mov
push
or
in
shl
or
push
xchg
mov
push
sbb
adc
hlt
xor
clc
sbb
dec
cmp
push
aad
mov
es
ret
sub
or
cmp
test
mov
mov
xrstor
jecxz
inc
movzbl
xor
testl
xchg
push
icebp
je
sbb
sbb
push
hlt
mov
mov
push
sub
sbb
pop
push
insb
push
mov
dec
sub
ss
in
xchg
push
in
push
je
sub
fs
push
mov
lods
aas
ret
push
mov
sub
notl
pop
loop
jo
enter
pop
mov
push
pop
xor
orl
cmp
aam
push
adc
ja
inc
xchg
fiaddl
out
pusha
xor
ds
sbb
push
push
mov
sbb
sbb
push
movsl
ret
pusha
loop
fdivr
xor
and
pop
mov
push
mov
push
push
dec
fdiv
dec
pushf
ja
pushf
sbb
in
loopne
and
inc
pop
pop
pusha
push
adc
movsl
sub
call
sbb
cltd
or
cmp
lret
imul
shrb
andb
adcl
stc
andb
and
mov
fcompl
jb
call
dec
les
aas
bound
inc
cmp
cmp
xchg
test
in
inc
add
dec
push
adc
inc
jbe
insl
sub
pop
cmp
arpl
andl
mov
mov
pop
add
fisubs
rolb
dec
mov
fimull
mov
cmp
xchg
add
out
out
push
adc
repnz
ss
sbb
in
jl
fwait
hlt
fdivrp
xor
fdivr
mov
pop
loop
ret
push
sub
mov
xor
mov
adc
mov
pop
mov
push
push
repnz
ds
insb
int3
xchg
aas
xor
push
addr16
sbb
mov
outsb
sub
xchg
mov
mov
ficoml
and
sbb
lock
mov
pop
in
add
lds
enter
pop
sbb
sub
mov
rep
and
test
cmp
movsb
push
xchg
jns
mov
cmp
arpl
mov
shll
jle
rcll
mov
bound
adc
xchg
fnstenv
cmp
jne
mov
out
pop
sub
inc
mov
lds
rep
push
pop
cmp
or
psubd
mov
xor
xchg
mov
inc
sbb
insb
or
shr
dec
outsb
js
mov
je
ljmp
ljmp
or
popa
inc
adc
add
fiaddl
pop
xor
mov
jb
sub
je
mov
push
loopne
das
sbb
cmpb
aam
lret
inc
sub
xor
add
sub
ljmp
ss
mov
push
or
push
int3
mov
xor
into
rcl
fiaddl
mov
sahf
ret
lret
xor
adc
pop
outsb
pop
jp
roll
scas
ss
js
hlt
adc
enter
lret
mov
lcall
adc
push
fcmove
testb
push
adc
push
not
and
and
scas
dec
adc
xlat
add
xchg
push
insb
push
and
xchg
sbb
add
adc
push
jae
and
cmp
push
cltd
in
jle
jmp
jno
pusha
push
adc
dec
pushl
cmp
inc
aad
gs
mov
adc
dec
in
in
movsl
jns
push
push
add
and
inc
lock
mov
inc
ficomps
mov
push
stc
mull
cmp
call
std
nop
dec
in
and
sub
xchg
in
enter
les
dec
lds
push
shlb
pop
adc
xchg
mov
ds
sbb
and
lods
inc
push
push
xchg
rcr
in
mov
fsub
jmp
mov
addb
cmp
xor
stos
repnz
js
scas
cltd
je
inc
push
mov
mov
mov
in
mov
pop
xor
shl
aam
fsub
cmp
push
dec
fistl
mov
jge
fcomps
add
push
and
cmp
mov
imul
popa
mov
in
mov
in
aas
mov
pop
fists
scas
aam
adc
sbb
jne
mov
out
inc
sbb
jne
ja
sbb
lods
push
cmp
adc
fidivrs
bound
inc
xor
push
ds
mov
mov
dec
mov
out
scas
mov
xor
jmp
or
add
push
mov
fcomp
inc
test
mov
enter
movsb
fistpl
sub
movsb
mov
inc
push
fdivs
daa
pop
loope
lcall
adc
xlat
push
push
xor
das
mov
jecxz
repz
cs
mov
mov
pop
mov
jb
add
add
lret
pushf
in
dec
adc
or
add
addr16
adc
push
cmp
cmpsl
mov
push
jne
jl
sbb
or
push
mov
mov
jne
cld
jb
add
or
xorb
ss
or
or
jne
add
xchg
sbb
mov
ret
jns
dec
add
or
pushf
sbb
push
icebp
or
gs
jmp
xchg
lcall
aaa
push
add
add
out
enter
rolb
aaa
movsb
pop
icebp
xchg
cld
mov
js
xchg
xorl
dec
jp
xor
mov
into
mov
pop
inc
inc
pop
ss
xchg
sbb
in
cmp
in
inc
xchg
scas
add
popa
inc
dec
pop
and
je
movsl
out
dec
lock
or
je
mov
pop
sbb
adc
xor
loopne
outsb
xor
addl
jg
xchg
mov
jmp
or
xor
bound
jmp
mov
fs
jp
pop
loopne
mov
adc
xor
mov
push
push
cld
lcall
cmp
popf
rorl
adc
sbbl
lds
mov
push
mov
add
or
sbb
mov
inc
xchg
inc
or
xor
lods
pop
or
jne
xor
addl
inc
sbb
ficomps
xor
cmp
or
test
or
outsl
cmp
push
loopne
cmc
push
orl
lea
and
mov
rolb
cmp
jge
push
repnz
je
sub
rorl
jbe
add
jmp
mov
ja
jl
or
jnp
jl
jecxz
mov
std
std
nop
scas
aaa
movhps
in
cld
cmp
jno
pushf
cli
adc
call
rorl
cmp
sbb
inc
inc
enter
mov
dec
mov
sub
testb
inc
sub
lret
dec
mov
jo
cld
push
and
jb
fmull
add
jno
adc
std
adc
push
ds
clc
sbb
mov
add
fwait
jne
mov
cmp
in
pop
push
movsb
jnp
pop
mov
out
add
mov
aam
xchg
sahf
and
or
pop
nop
jo
push
mov
sub
adc
sarb
push
fiadds
adc
sub
adcl
inc
sarb
push
pop
add
sub
jle
int
mov
add
add
orb
jmp
les
xor
mov
mov
xchg
orl
pop
int3
lods
or
sbb
inc
out
pop
stos
inc
push
push
add
int
mov
daa
mov
cmp
cmp
pop
pop
cmp
jmp
xor
xchg
popf
mov
sbb
mov
push
mov
cmp
cwtl
inc
jecxz
outsw
loopne
mov
push
call
xor
sahf
ds
ret
fildl
jbe
popa
xor
lea
decb
sub
sub
dec
adc
mov
dec
cli
cmp
push
or
enter
xchg
insl
popa
and
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
mov
cltd
and
or
or
fidivrl
push
mov
pop
lahf
xor
loopnew
mov
adc
mov
inc
rclb
ret
aaa
ret
pusha
pop
cmpb
fs
aaa
add
pop
sub
test
xor
mov
hlt
or
mov
push
call
in
test
dec
enter
adc
or
call
mov
cmp
js
rcrb
out
xchg
cmpsl
mov
jl
shlb
jne
mov
jmp
or
push
sbb
or
xor
push
or
or
pop
dec
add
lcall
add
or
push
out
cmp
mov
cmp
xorb
inc
push
push
add
call
out
cmpsb
jbe
sbb
dec
xchg
fcmovu
sbbb
ljmp
pushf
inc
notb
shll
push
je
mov
ljmp
mov
test
dec
sarl
cmp
adc
dec
mov
insb
jmp
dec
jmp
xor
push
mov
lea
add
int3
or
out
xchg
stos
mov
push
fucomip
cmp
je
cmp
jbe
cli
mov
cmp
subl
mov
sub
and
std
pop
dec
xchg
mov
or
sbb
pop
ret
or
test
push
sbb
inc
or
or
adc
inc
and
shlb
jae
adc
loop
test
push
getsec
cmp
shr
je
cs
sbb
push
jae
stos
fwait
add
xchg
cmpsb
shll
test
cmp
sub
mov
and
mov
mov
mov
adc
mov
mov
and
aaa
push
mov
inc
das
in
fsubr
jo
push
sbb
sub
sub
and
pop
mov
into
call
mov
or
fwait
inc
adc
pop
aad
pop
push
stos
loopne
mov
sti
push
je
push
dec
nop
inc
lea
dec
jle
scas
or
data16
dec
in
movb
xchg
push
stc
jg
fildll
test
js
pop
push
imul
and
clc
jno
je
jl
enter
and
aam
xor
pop
xchg
jge
push
push
cmpsb
aam
in
icebp
lds
sbb
push
or
clc
cli
call
mov
je
and
cltd
push
push
loope
sbb
pop
xlat
pop
add
scas
dec
je
jae
mov
push
push
and
pop
or
dec
add
or
or
inc
push
mov
and
repnz
adc
aam
in
mov
shrl
or
or
xchg
popf
imul
rcll
push
mulb
mov
inc
cmp
lock
jo
mov
mov
sub
jmp
add
loope
in
mov
scas
sub
sub
lock
dec
push
mov
add
hlt
push
push
adc
mov
pop
add
mov
ss
clc
xlat
or
and
cmp
push
sbb
push
mov
push
mov
or
mov
jmp
adc
and
and
adc
sub
pop
sub
cmp
push
or
lock
add
ret
xorl
adc
add
xchg
out
movsb
call
mov
stos
lea
mov
pop
insb
and
outsb
jne
addr16
insb
arpl
push
idivl
dec
cld
jne
into
cmp
addr16
ss
pop
mov
add
push
adc
xlat
pop
and
or
je
int3
jecxz
adc
or
jns
inc
sub
jmp
test
nop
xor
or
pop
sbb
lods
icebp
pop
sarl
icebp
call
adc
call
inc
shlb
mov
pop
cld
test
jmp
dec
setb
cmp
cmp
mov
jle
and
add
movsb
sbb
call
outsl
pop
inc
inc
inc
lcall
dec
jl
js
cmpsb
pop
adc
fst
js
nop
push
dec
xor
arpl
mov
fxtract
jmp
pop
cmpsl
jae
pop
xorb
movsb
inc
or
mov
cmp
push
add
ret
push
adc
add
out
and
fdivrl
out
out
pop
out
add
add
call
in
jnp
in
movsb
jmp
js
popf
sub
aad
test
or
mov
adc
mov
sbbl
cltd
scas
add
cmp
rcrb
mov
pop
mov
sub
lret
mov
pop
outsb
je
push
stc
sub
fcompl
addr16
xor
pusha
inc
sarb
push
stc
mov
or
jae
xor
pushf
insb
sbb
cld
test
mov
stos
push
imul
inc
inc
loopne
fs
inc
in
xchg
inc
mov
mov
inc
mov
and
pusha
ja
cmp
jg
js
test
lea
add
call
push
jbe
xor
adc
test
mov
cmp
jl
and
bound
decl
or
lds
sbb
inc
inc
dec
jne
movzbl
add
pop
xor
aam
nop
jbe
and
inc
mov
loop
mov
inc
js
shl
lea
or
sub
es
adc
sbb
fdivr
lods
and
adc
cli
sub
add
adc
cmp
mov
mov
lea
inc
xor
inc
pop
mov
dec
jecxz
pop
xchg
mov
inc
ss
js
shll
xor
das
sub
in
dec
push
push
imul
xor
outsl
sti
loopne
nop
xchg
lret
xchg
cmp
int3
adc
xchg
test
fstl
call
dec
xor
das
dec
mov
int
sarb
dec
dec
flds
es
lds
adc
daa
push
push
mov
push
add
notl
lds
dec
cmp
mov
and
mov
enter
lds
add
roll
mov
out
cmp
xchg
adc
pop
inc
xor
add
add
add
push
add
cwtl
rcll
add
rorl
inc
push
rcll
xor
and
or
pop
mov
sarl
add
add
nop
jno
inc
rcrl
imul
addb
rol
cmpsb
or
sbb
rcrl
adc
and
add
adc
je
roll
and
rcrl
in
adc
and
and
rorb
shrb
and
pop
push
inc
pop
popa
pusha
adc
nop
dec
inc
rcrb
orb
clc
mov
cli
or
or
imul
jno
addr16
callw
pop
call
call
not
cmp
dec
aam
inc
fstpl
inc
push
jns
cmp
call
rcl
adc
les
xchg
sbb
jmp
pop
leave
loope
ffree
rcrl
cmp
or
or
add
aad
out
mov
call
clc
scas
and
movsl
int
jmp
std
sub
jb
cmp
jno
jmp
mov
test
xchg
mov
pushf
mov
iret
popa
adc
rolb
fdivl
loopne
pop
push
sbb
cmp
xor
dec
dec
jmp
sub
inc
jmp
adcb
sbb
fcomps
and
push
arpl
cmp
aam
xchg
sbb
aad
inc
div
cmp
or
xor
test
sub
sub
and
repz
mov
pusha
lock
test
cmp
movsb
jne
sbb
fiadds
adc
dec
incb
idivb
push
push
es
cmpsb
add
loopne
outsb
cwtl
movsl
push
and
push
push
fs
into
pusha
mov
jnp
shll
adc
sbb
cmp
es
or
shufps
or
or
es
ja
iret
dec
push
loope
dec
cld
and
or
in
ficomps
loope
xor
cltd
cmp
sub
push
fwait
xchg
int3
inc
pop
push
mov
js
sbb
js
pop
xchg
xchg
add
fstps
cmp
jbe
push
imull
push
cmpsb
sbb
dec
jae
dec
mov
and
cmovle
sbb
add
or
push
sbb
xchg
pop
aaa
dec
sbb
mov
cltd
push
scas
inc
arpl
movsl
adc
add
inc
pusha
inc
inc
and
dec
enter
mov
adc
inc
pusha
inc
jbe
xchg
pop
rolb
sbb
es
pusha
inc
rcrl
fildl
pop
add
push
cmpsb
les
pop
add
jb
inc
das
inc
add
xor
xor
inc
pop
es
and
inc
ss
add
je
inc
dec
es
add
cmp
test
add
lret
je
mov
lret
call
adcl
or
pop
int3
xchg
out
push
dec
inc
stos
inc
dec
out
out
fldlg2
fs
cs
pusha
nop
push
in
nop
je
inc
cmp
or
nop
pop
add
out
out
fisttpl
xor
sub
out
sahf
and
adc
add
add
sbb
jmp
lea
xor
pushf
adc
inc
dec
inc
out
inc
call
pop
nop
add
and
dec
leave
add
jb
cwtl
or
inc
out
jns
out
mov
mov
popf
out
jecxz
sti
data16
inc
cld
or
push
inc
cmp
sub
add
mov
daa
jo
shlb
mov
lahf
addr16
pop
push
andb
adc
mov
insb
test
cltd
adc
dec
pop
cmpb
jmp
cmp
je
mov
add
pop
lret
sub
or
lahf
ret
lea
adc
add
in
mov
or
add
jns
scas
in
add
add
push
inc
lret
incl
jo
cmp
je
xchg
add
sub
push
mov
xchg
adcl
xchg
or
sbb
pop
inc
or
xor
or
in
or
cld
add
sahf
xchg
sub
fisttpll
or
or
mov
out
rorb
xchg
or
and
xor
iret
enter
push
shld
adc
push
pop
adc
or
leave
jae
mov
cmp
cmpl
adc
adc
adc
adc
ror
adcl
pop
fs
push
inc
jb
cmp
pop
pop
and
jns
out
sbb
xchg
sbb
mov
xchg
sub
sbb
mov
sbb
sbb
rep
sbb
push
sbb
cmpsb
in
lds
xor
sbb
jns
push
inc
negb
incl
enter
add
add
sub
cmp
fbld
cld
xor
lcall
pop
jmp
jp
sbb
cwtl
xchg
push
in
push
in
imul
rol
adc
and
xor
mov
out
mov
pusha
and
sub
call
je
call
testl
mov
lds
inc
jmp
jmp
dec
push
mov
in
repnz
ss
xchg
aad
in
cmp
xchg
cmp
push
mov
out
pop
enter
out
or
je
push
imul
in
fmulp
dec
icebp
cmp
das
mov
jnp
or
add
hlt
hlt
jns
addr16
imul
std
sbb
cmp
scas
in
mov
sbb
movsb
test
clc
clc
addr16
sbb
or
mov
cli
add
scas
add
sti
insb
in
repnz
cld
cld
je
cld
push
dec
fdivrp
or
ss
xor
enter
sbb
xor
inc
ret
mov
sub
jb
enter
lahf
shll
pop
std
cmp
jmp
scas
addb
jecxz
xchg
xor
cs
in
stos
xlat
aad
cmpl
aam
or
in
xorl
xchg
scas
inc
repnz
sti
andb
adc
or
dec
jmp
jmp
mov
in
cltd
or
adc
nop
jmp
push
dec
cli
out
out
out
or
lock
rcll
cli
or
aas
repz
jb
repz
sbb
add
stc
dec
in
xlat
imul
mov
xchg
and
aad
cltd
jb
jb
popa
leave
push
stc
sbb
nop
cmpsb
sti
sti
sti
xchg
or
cmp
jmp
push
xchg
stos
pop
mov
jge
add
test
stos
dec
or
xabort
or
sub
dec
loop
loop
stos
xchg
stos
shll
loope
xchg
pop
leave
inc
clc
and
loopne
add
or
scas
ss
fdiv
out
dec
push
and
mov
xchg
adc
push
push
ljmp
and
notl
notl
inc
mov
hlt
imul
jb
or
xchg
into
testb
mulb
pusha
leave
nop
testb
repnz
inc
nop
mov
sub
dec
push
sub
out
int
rclb
testb
fsts
loope
cmp
clc
clc
cmp
jmp
in
adc
cmc
pop
leave
or
fldl
xchg
hlt
or
push
add
lock
mov
jo
adc
shrb
iret
clc
sti
mov
loope
pop
and
loope
jp
setb
pop
hlt
cmp
lcall
in
xchg
adc
repz
and
mov
repz
adc
or
test
xor
mov
push
and
repz
or
daa
test
xor
mov
push
and
repnz
repnz
or
cmp
xchg
cmpsb
icebp
icebp
icebp
das
xchg
in
push
in
adc
repnz
pop
repnz
cld
icebp
cmc
cmc
mov
icebp
mov
dec
pop
dec
adc
imul
stc
stc
dec
dec
push
arpl
je
xor
movups
mov
adc
test
mov
test
jp
jmp
imul
lret
push
push
sub
ffreep
push
inc
scas
xchg
stos
test
inc
cmp
xor
add
aad
pop
mov
lods
or
mov
mov
add
jne
in
mov
lods
stc
xor
jmp
xchg
aam
adc
dec
add
ss
dec
xor
dec
inc
mov
and
pop
add
dec
push
nop
push
jns
ds
imul
dec
push
aaa
or
push
lahf
repz
adcl
stc
xor
cli
push
jecxz
repz
iret
repz
mov
sbb
mov
push
aad
in
xchg
gs
dec
sarb
rep
or
mov
xorb
movsb
popl
mov
cmpsb
mov
mov
and
in
sbb
lea
inc
cmp
and
xchg
sbb
adc
ficompl
pop
lret
nop
dec
push
mov
imul
leave
inc
or
xchg
lods
jle
sbb
jg
push
movsl
repz
push
sbbb
inc
dec
inc
jmp
shll
pop
and
scas
push
mov
ficoms
mov
aaa
cmp
push
mov
sbb
arpl
sahf
test
inc
xchg
mov
lea
daa
sub
push
sbb
ret
adc
aam
or
ror
pop
sub
sbb
push
inc
addl
push
push
and
xchg
es
push
push
sarb
xor
jo
lret
adc
jmp
adc
dec
dec
xchg
movb
in
mov
xchg
xchg
jo
adc
popf
adc
inc
xor
adc
das
pop
xor
adc
fldl
stos
adc
sub
push
or
adc
ret
lret
hlt
psubsw
mov
sub
mov
jb
pop
mov
add
add
gs
adc
inc
add
movsl
add
pop
jno
inc
add
aaa
or
add
xor
add
sub
or
and
mov
sbb
xor
mov
xchg
and
adc
mov
mov
adc
orb
inc
dec
pop
adc
xchg
pop
mov
and
adc
mov
rcrb
cmp
mov
inc
mov
add
sbb
push
int3
xor
gs
sub
pop
inc
popf
fnstenv
js
movsl
subl
xchg
clc
add
or
movsl
xchg
pop
decl
adc
mov
testb
mov
scas
or
iret
cmpsl
sbb
loopw
stos
es
cmp
in
xlat
mov
call
sti
iret
les
pusha
adc
stc
aas
or
xor
xor
xchg
leave
and
mov
shrl
lahf
sahf
aaa
xchg
push
bound
fidivrs
outsb
xchg
adc
sbb
jnp
mov
xchg
push
mov
in
xor
rcrb
arpl
add
mov
xor
ds
test
aaa
lcall
rcll
lahf
in
inc
jb
outsl
pop
and
sbbb
xor
aaa
add
mov
sbb
sbb
out
or
and
and
ja
or
test
adc
and
nop
lahf
xchg
and
push
imul
inc
in
in
sahf
cmp
sub
jb
in
sbb
movsb
push
dec
lret
xchg
cld
push
out
or
jecxz
es
sub
lahf
mov
test
sbb
dec
ja
lahf
mov
les
cwtl
inc
test
dec
xor
xchg
push
lahf
adc
xor
orl
pop
fwait
pusha
adc
fbstp
lahf
inc
sub
and
scas
inc
inc
ds
cmp
imul
sbb
cwtl
and
imul
jns
sbb
push
mov
aam
nop
or
and
or
in
dec
sahf
jmp
xchg
cmpsb
loopne
adc
cwtl
add
push
daa
inc
sahf
loopne
rcrb
mov
sbb
shlb
das
push
xor
mov
adc
rcl
dec
dec
les
push
pop
push
jmp
push
rcl
andl
lcall
inc
mov
inc
cs
data16
mov
lea
or
rcl
mov
mov
inc
cmp
lods
dec
xor
mov
pusha
jb
pushf
mov
xchg
or
ds
leave
sbb
mov
in
pop
and
ficompl
movsb
dec
nop
mov
or
or
inc
inc
ss
xor
rcl
int3
cs
jle
mov
clc
mov
pop
xchg
push
mov
nop
into
add
cmc
pop
add
test
cmpsl
test
jecxz
or
cmpsl
scas
sub
or
decl
in
clc
xchg
add
xchg
push
popf
adc
jno
push
bound
andb
mov
or
add
xor
and
inc
shl
addr16
xor
shl
xchg
daa
lea
loop
or
and
loopne
inc
jp
aam
in
add
loopne
shlb
daa
sub
jmp
stc
outsb
lds
rorb
or
test
xorb
pop
jno
or
adc
loopne
jmp
shr
data16
data16
loope
xchg
and
dec
test
sub
pop
iret
dec
sahf
cmpsl
lods
fcmove
push
bound
pusha
push
cmp
jns
aaa
popa
aas
sbb
or
or
leave
out
sub
rorb
dec
ja
sbb
add
rolb
inc
mov
cmp
movsb
sbb
inc
cmp
shlb
xor
sbb
nop
in
jo
cmp
into
dec
jp
mov
cmp
sti
push
or
xchg
inc
arpl
cmp
pop
push
adc
cmp
nop
cmp
mov
push
shlb
imul
sub
ss
push
xchg
and
lea
fimull
or
dec
mov
jl
rcll
adcb
mov
dec
inc
sub
int3
scas
cwtl
imul
xor
imul
xor
cmp
sub
xor
and
dec
inc
sub
push
xor
xor
lcall
cmp
js
je
loopne
mov
mov
sbb
lahf
call
scas
sub
jns
imul
xor
pop
jno
push
cmp
jl
pmaxub
sub
enter
in
loope
imul
dec
inc
stos
je
sub
cmc
shll
aam
sbb
jb
sub
pop
nop
sub
cmp
inc
pop
sub
sub
xor
pop
sub
adc
mov
sub
inc
xor
rol
sub
inc
sub
sub
leave
loopne
or
add
pop
xor
shrb
outsb
mov
cwtl
mov
call
les
sub
ss
cltd
xchg
sbb
push
mov
int
fs
sub
lret
ljmp
sarl
shlb
or
add
xor
rolb
es
lods
mov
call
mov
fidivl
cmpsb
sbb
dec
sbb
xor
inc
icebp
fsubrs
pusha
cmpsb
and
nop
aad
sub
aas
push
sub
in
mov
or
dec
xchg
cmpsb
sub
sub
ja
cltd
sub
rorl
aaa
out
add
inc
jo
insl
adc
jb
sbb
shrb
std
rorb
pop
movsl
test
sub
push
ds
pop
scas
pop
xor
imul
sub
ljmp
cmp
js
and
cltd
xchg
push
or
mov
jo
add
sub
and
and
sub
rorl
aam
pop
add
jo
cs
xor
sub
xchg
imul
dec
inc
aaa
lods
sub
sbb
shrb
cld
sbb
jge
xor
jmp
je
adc
jecxz
adc
jno
xor
mov
imul
adc
or
cltd
xchg
mov
cmpsb
data16
outsb
lcall
sbb
frstor
mov
sub
adc
js
or
rorl
test
movsl
fnstcw
sbb
lock
mov
or
or
int
jbe
pushf
bound
add
and
jae
add
in
mov
pop
and
sub
mov
or
or
add
mov
xor
push
or
dec
cmp
fwait
imul
stos
mov
xchg
fisttpll
mov
pop
cli
fnstenv
cs
mov
cld
add
sti
lret
outsb
sbb
xchg
sbb
mov
sub
jbe
push
mov
roll
add
cmp
xchg
and
pop
nop
cwtl
imul
in
sub
ret
imul
jp
jge
imul
adc
inc
aad
je
push
inc
les
je
sub
fisubrl
cltd
xchg
test
sub
js
mov
lea
cmpsb
mov
rcl
sub
cmp
mov
xor
int
sub
and
and
and
js
push
and
and
pop
dec
dec
pop
jns
cmp
pop
lcall
fcoml
call
xchg
push
popa
jo
jmp
cli
cmp
cmp
pop
adc
xchg
sbb
inc
jno
jno
ds
add
daa
mov
cmp
aaa
imul
and
dec
sbb
dec
inc
jns
and
daa
icebp
mov
repz
sub
pop
mov
adc
bswap
rorb
mov
out
push
test
add
dec
pop
ret
sub
mov
inc
push
mov
inc
or
jmp
jbe
jne
lret
ret
mov
or
pushf
xor
addr16
popf
test
cmc
push
or
jbe
xorl
mov
mov
addr16
int3
add
jl
dec
inc
xlat
orb
and
dec
xorb
dec
inc
sub
out
gs
cmp
add
add
imul
lcall
sbb
add
or
sbb
or
push
mov
mov
fmull
inc
in
adc
add
sbb
lods
xor
mov
or
add
mov
push
and
or
je
xchg
je
mov
lea
ror
pop
jae
add
push
dec
insb
cmp
dec
sbb
cmp
pop
ljmp
jp
fdivs
jae
popf
push
cmc
push
cwtl
xchg
inc
cmp
push
pop
or
push
sbb
leave
ret
inc
dec
ret
movsl
push
push
out
or
mov
jp
call
or
jl
shlb
aam
in
cli
pop
cmp
dec
adcb
ret
pop
adc
or
jne
test
dec
and
pop
leave
dec
rcrl
es
test
es
pop
add
lcall
clc
xchg
or
push
divb
movsb
inc
hlt
out
or
movsb
add
je
into
jmp
subb
xchg
xor
adc
push
lcall
fstps
popa
dec
movsb
push
stc
or
sub
xchg
loop,pn
push
sbb
jmp
or
mov
jge
jbe
xchg
fimuls
call
out
faddl
mov
inc
cmp
or
mov
jbe
or
shll
je
sub
int3
insl
dec
inc
push
inc
leave
dec
cmp
add
mov
inc
rcrb
mov
xchg
inc
mov
fldl
mov
je
mov
inc
inc
sub
push
faddl
xor
inc
mov
fiadds
and
lahf
xchg
test
mov
inc
xor
add
inc
xor
loopne
sub
cmp
dec
daa
add
outsb
inc
xor
inc
jmp
lods
rol
imul
imul
inc
clc
cs
call
xchg
scas
fnstenv
rclb
call
jne
dec
mov
subb
popa
mov
add
rclb
xchg
nop
and
fs
mov
pusha
push
xchg
rcrb
and
mov
and
push
pop
mov
or
or
pop
inc
or
call
cs
mov
or
xchg
test
and
cwtl
xorb
xchg
mov
adc
push
jb
dec
mov
test
or
mov
mov
cmp
inc
dec
mov
push
orl
das
push
xchg
shrb
test
push
mov
jno
xor
outsb
jae
lea
adc
cmp
adc
add
mov
loop
call
lahf
jle
daa
movsb
add
incl
jl
je
xor
mov
daa
and
pusha
call
push
es
cmp
mov
adc
push
es
pop
ljmp
test
mov
jp
mov
adcl
pusha
addl
pop
enter
pop
xchg
pop
push
jns
push
cmp
loopne
imul
pop
inc
sub
repz
dec
subb
push
sub
and
arpl
lret
loopne
push
es
adc
push
adc
out
dec
movsb
lods
lods
mov
sbb
mov
cs
xchg
inc
inc
pop
adc
ret
cmpsb
stos
repnz
cs
mov
mov
inc
and
cmp
pop
jb
mov
test
add
jb
hlt
movb
ret
push
inc
call
insl
sub
inc
push
ss
lods
incl
fiaddl
shlb
xor
xchg
or
stc
test
or
jp
pop
inc
push
movb
int3
and
ds
sti
fildl
cmp
inc
jmp
dec
jmp
xor
loopne
sbb
push
inc
inc
adc
dec
push
test
add
inc
lret
jo
je
pop
es
mov
test
cmp
movl
shll
mov
ret
fs
stc
add
das
or
add
xchg
xorb
addl
or
je
addr16
nop
and
and
cmp
pop
addb
mov
adc
cld
inc
mov
xor
inc
jmp
xchg
jno
rolb
arpl
jmp
xchg
cmc
pop
pop
fstps
gs
xor
sub
sbb
push
scas
dec
enter
add
mov
inc
mov
add
mov
xor
andl
rorb
or
mov
xlat
push
sub
hlt
lods
sbb
roll
shl
psrlw
sbb
cmp
repz
negl
fisubrs
jge
push
push
or
pop
dec
mov
jns
xor
or
cld
xchg
add
ja
cmp
xor
jle
push
add
and
push
add
ret
push
sar
inc
mov
orl
call
cmp
xor
int
push
hlt
push
sub
lods
mov
inc
adc
sub
mov
sbb
adc
jp
adc
orl
aaa
adc
ret
and
push
xchg
pop
or
xor
sbb
stos
add
sbb
cmc
add
stos
andb
jecxz
add
lods
stos
add
adc
fidivrl
sahf
in
push
cmp
sub
xchg
or
bound
or
push
cltd
shrb
dec
mull
movups
out
dec
lock
xor
inc
das
add
ret
jo
cs
rorb
adc
or
leave
les
xor
mov
rol
mov
inc
ds
loopne
add
ljmp
xlat
mov
mov
cmpl
stc
insl
xchg
lret
lret
or
int3
jae
pop
cs
test
call
push
and
sub
dec
les
push
in
push
mov
sbb
add
cmp
add
adc
xor
lea
push
dec
stos
xchg
test
pop
or
inc
dec
loopne
pop
movsb
and
mov
or
les
daa
dec
xor
dec
ja
pop
cmp
and
or
push
repnz
sahf
ret
lea
nop
mov
lret
in
lock
xchg
insb
leave
adc
and
out
ds
add
pop
add
push
arpl
inc
pop
inc
xor
add
aaa
pop
ret
add
add
pop
shll
xchg
sbb
jno
int3
push
int3
adc
mov
adc
xchg
adcb
lods
es
xor
call
rcl
jns
mov
adc
xor
or
jae
aas
sti
and
adc
pop
jmp
rcl
adc
add
push
jg
push
mov
sbbb
xlat
pusha
pushf
mov
cli
pop
pop
imul
loop
lcall
push
lret
xchg
adc
enter
xor
cmovb
sbb
pop
inc
ffreep
and
jle
call
inc
mov
and
xchg
or
call
cmp
add
jb
jb
sbb
nop
mov
mov
mov
pushf
rol
dec
push
mov
sbbl
mov
dec
xchg
or
test
sub
add
jmp
inc
jecxz
mov
mov
push
jecxz
enter
rcrl
sbb
jns
daa
addb
xor
xor
nop
add
push
ret
or
push
mov
jp
or
push
xor
add
xchg
adc
push
mov
xchg
pop
inc
mov
or
fistps
pop
sbb
xor
and
push
jmp
enter
fdivl
xor
lcall
add
and
xor
sub
inc
push
cmpsb
cmp
roll
add
sub
mov
add
sbb
sbb
mov
pushf
mov
add
out
add
mov
mov
xchg
mov
jge
lea
add
add
jecxz
movsb
xor
mov
sub
inc
sbb
aaa
cmpsb
sbb
loope
push
add
pop
sub
lock
push
push
arpl
inc
cs
loopne
jb
xchg
jo
rorb
dec
adcl
ret
sbb
leave
inc
inc
xchg
xchg
push
inc
dec
adcl
mov
inc
xor
pop
rol
add
fsub
lods
mov
adc
fwait
pop
nop
scas
rcrl
mov
and
in
and
inc
in
nop
and
add
lods
cmp
and
dec
mov
in
sarl
jle
add
add
sbb
cmp
test
fsubrp
and
sub
cmp
je
sub
push
daa
pop
pop
sbb
outsl
and
sbb
jb
xchg
or
sbb
xorb
lea
add
add
and
pop
add
jl
ja
xor
push
popf
fstpt
pop
xchg
addb
mov
push
xor
or
test
sbbb
sub
jne
cmp
xchg
dec
adc
xchg
sbb
into
cmpsb
mov
push
dec
call
in
mov
lock
add
ss
pop
and
xchg
adc
adc
test
jbe
xchg
mov
add
in
pop
adc
jge
fdivrs
mov
xchg
mov
xlat
inc
rolb
je
sahf
out
rcrb
mov
outsl
mov
mov
xlat
fsubrs
lea
inc
inc
popa
add
mov
cltd
sbb
add
addr16
adc
mov
add
dec
inc
popa
inc
addr16
sub
cmp
cmp
push
call
test
addr16
mov
sbb
rolb
add
or
lods
cmp
rorb
cmp
xchg
call
es
xor
mov
sub
ror
or
mov
mov
sub
mov
leave
fnstsw
pushf
es
mov
mov
inc
sub
dec
lods
mov
daa
jl
ss
loop
and
pop
movsb
test
or
icebp
or
icebp
mov
int3
push
pop
orl
cmpsb
jo
push
dec
fstps
dec
movl
dec
dec
pop
mov
imul
out
add
dec
out
insl
dec
dec
and
dec
inc
or
mov
jbe
loope
aam
pop
call
movsb
push
dec
dec
hlt
push
mov
cmp
jns
sub
push
xchg
nop
cmp
mov
mov
xor
pop
jns
inc
dec
ret
and
jns
xchg
rclb
jns
hlt
and
stos
cmp
out
test
and
mov
push
add
aad
into
addb
inc
js
dec
push
call
inc
mov
push
xchg
nop
roll
sub
cmp
adc
call
cmp
stos
dec
jns
int
lods
aaa
push
xchg
sarb
xor
dec
inc
inc
jns
movsb
mov
lds
pop
loopne
jns
xor
xor
adc
scas
adc
arpl
int
rolb
inc
or
movsb
mov
cmp
adc
mov
arpl
loope
inc
jns
std
xor
mov
jns
fadds
cmp
pop
or
adc
enter
jns
fcomi
mov
test
jns
inc
adc
adc
jns
inc
inc
and
adc
or
jns
xor
pop
and
jns
and
xchg
das
test
mov
push
and
jbe
mov
test
cmpb
shlb
mov
lcall
test
enter
inc
inc
andl
push
mov
mov
push
jns
inc
add
or
mov
hlt
adc
jns
test
inc
and
and
aaa
mov
mov
mov
adc
test
sbb
mov
jg
stos
dec
call
andb
xchg
sbb
add
xor
sbb
sbb
fldcw
call
mov
out
mov
sub
int3
lds
test
dec
aam
and
sbb
test
and
mov
push
and
mov
and
ficomps
jecxz
mov
loop
adc
push
aam
adc
pusha
cmp
test
or
sbb
out
cmp
call
and
cmp
and
cwtl
mov
mov
and
pop
addl
jb
stos
inc
insl
mov
mov
dec
xchg
jbe
call
enter
pop
pusha
stos
fs
pop
and
test
push
leave
rolb
cmp
mov
cmp
dec
and
dec
ss
les
loop
sub
inc
stos
fs
leave
nop
pop
clc
cmp
cmp
xor
dec
popf
sub
pop
cwtl
cmp
add
lret
push
xchg
or
arpl
sbb
dec
repz
inc
xchg
or
loope
or
rcrb
xchg
push
fiaddl
pop
mov
cmp
or
call
sbb
xor
das
mov
inc
loop
ret
cs
aas
loopne
and
das
xchg
push
xchg
sarb
call
or
xchg
pop
pop
and
jb
cmp
cs
lsl
hlt
add
push
xchg
and
push
ret
pop
cmp
and
xor
shlb
and
cmp
jg
inc
mov
xchg
das
xlat
xchg
and
inc
das
call
mov
and
fdivr
das
xchg
and
rcl
fs
mov
add
mov
adcb
das
mov
das
mov
sbb
cmp
ret
out
and
add
jae
pop
mov
es
dec
pop
inc
fs
addr16
enter
jae
hlt
sbb
mov
inc
pop
sbbb
leave
jle
and
rolb
pop
nop
mov
mov
pop
enter
enter
and
jp
pop
xchg
or
sbb
shrb
mov
pop
jmp
fsts
mov
cmp
xchg
pop
ss
adc
xchg
sbb
sub
mov
in
mov
xchg
testl
adc
mov
mov
imul
pop
in
xor
mov
adc
xchg
je
sbb
inc
push
mov
lock
or
push
push
inc
in
push
lods
ret
inc
adc
es
jnp
push
cwtl
nop
dec
push
push
adc
mov
push
mov
or
shrb
pusha
cmp
push
popa
inc
push
aas
loopne
test
push
pop
addr16
stos
ret
push
and
sbb
test
mov
rorb
cmp
bound
call
into
jp
outsl
nop
test
mov
popa
inc
orl
push
mov
push
push
pop
adc
mov
jge
dec
sub
int3
je
fldcw
dec
enter
inc
xchg
mov
xchg
test
fnsave
stos
sub
push
test
and
popa
inc
aaa
and
push
xor
popf
pop
ss
jbe
adc
dec
aam
or
inc
lret
pop
ret
repnz
aas
xor
unpcklps
das
push
jge
add
call
maxps
adc
call
xor
clc
repnz
xchg
lret
xor
lock
call
xchg
sar
cmp
fdivr
int
das
jg
and
dec
call
das
pop
decb
movsb
lods
andps
movsl
pop
call
in
xchg
xchg
pusha
call
push
jl
insb
call
je
gs
pop
adc
popf
das
jl
push
std
mov
sbb
cmp
xchg
dec
in
xor
push
cs
adc
in
cli
lret
movsb
imul
and
adc
dec
in
mov
je
out
or
shlb
xchg
mov
push
mov
mov
push
dec
in
push
in
inc
aam
push
mov
hlt
es
xchg
dec
in
sbb
adc
add
mov
leave
or
rcrb
out
leave
gs
loope
adc
adc
sbb
xchg
lret
sbb
and
sub
xchg
lret
xor
jae
jb
pop
cmp
pop
xchg
push
xchg
lret
inc
gs
dec
pop
mov
xor
push
xchg
dec
in
adc
or
pop
add
and
and
mov
inc
mov
insb
and
data16
sbb
jo
xor
sahf
inc
inc
out
cld
pushf
and
mov
jbe
std
je
data16
js
xor
daa
push
adc
inc
xor
mov
xorb
daa
int
dec
test
and
and
cli
cmp
jb
mov
daa
int
inc
test
inc
adc
pushf
xor
mov
cli
mov
rcrb
dec
mov
and
shlb
inc
mov
popf
push
arpl
loopne
add
shlb
xchg
je
aam
inc
add
lcall
inc
inc
mov
sub
stos
insb
adcb
mov
lods
mov
rorl
sbb
push
stos
mov
pop
stos
pop
and
inc
and
scas
mov
adc
stos
mov
mov
inc
mov
aaa
or
add
or
aaa
sbb
dec
xlat
aaa
dec
fdivs
xor
dec
add
cmp
cli
cs
pop
adc
xchg
or
mov
pop
call
cltd
inc
add
mov
inc
push
negb
add
movsl
xor
inc
add
popa
fsubrp
orb
dec
dec
or
adc
movsb
jg
xchg
jp
ret
push
mov
xchg
pop
mov
sbb
je
frstor
and
mov
aad
or
mov
add
andb
jo
shlb
cmp
inc
mov
or
pop
mov
aad
mov
dec
cmp
mov
xor
or
push
pop
push
rclb
or
inc
or
jno
add
inc
aad
push
fs
adc
cs
add
xor
mov
divl
adc
or
and
repz
jp
loop
add
inc
push
movsb
aad
sbb
or
adc
push
jmp
fs
ret
mov
pop
sbb
push
stos
mov
sbb
mov
jne
sbb
lods
mov
outsb
dec
aam
mov
frstor
inc
dec
xchg
inc
mov
mov
sbb
mov
pop
fiaddl
pop
mov
cmpb
test
xor
pop
adc
sbb
rclb
aad
repnz
in
push
xchg
sub
pop
mov
cltd
push
loop
adc
mov
mov
dec
jmp
xchg
mov
sub
adc
lods
pushf
dec
leave
or
push
cmp
adc
cmpsl
sub
out
mov
jo
push
call
mov
mov
stos
dec
push
ret
loopne
lret
inc
orb
xor
dec
adc
adc
cltd
xchg
test
jmp
sub
adc
cmp
adc
jmp
xchg
out
sub
adc
lret
daa
add
add
ret
push
cltd
xchg
repnz
xor
xor
and
cmpsb
adc
cwtl
mov
sub
xor
adc
loope
xor
jb
ds
sbb
pop
shlb
dec
dec
dec
popa
and
adc
out
and
mov
cmp
cwtl
and
je
ljmp
orb
inc
and
xchg
adc
fstl
and
cmp
mov
lods
cmp
or
cmp
arpl
cmp
adc
push
cmp
roll
push
lret
les
cmp
leave
lods
inc
mov
pop
clc
testb
xchg
add
lret
int
nop
inc
gs
addr16
nop
sbbl
ja
inc
gs
inc
dec
lret
ja
adc
nop
shll
push
inc
cwtl
jmp
adc
mov
lds
cmpl
orl
dec
pusha
and
nop
mov
inc
nop
or
xchg
mov
int
pop
pusha
sbb
mov
nop
test
push
lods
loopne
inc
add
mov
rclb
push
mov
mov
or
push
dec
repz
adc
and
or
dec
cs
push
mov
int
je
add
jge
sbb
mov
xor
and
push
adc
or
pop
add
jnp
dec
push
push
daa
mov
cmp
inc
add
stos
xor
add
mov
xchg
imul
ljmp
aaa
rorb
lods
dec
or
ja
imul
imul
outsb
mov
lock
cmpsb
popa
pop
test
add
xchg
pop
pushf
jbe
pop
inc
cmp
adc
aaa
adc
pushf
push
aaa
mov
mov
inc
cmpsl
add
lods
dec
or
sub
ljmp
nop
roll
lock
aam
mov
add
sub
inc
mov
test
imul
fs
add
mov
mov
sub
mov
ret
int
out
je
or
add
adc
mov
add
iret
and
dec
adc
dec
inc
add
and
test
mov
sbb
jno
iret
mov
sarb
bnd
inc
icebp
sbb
fstl
addr16
sbbb
cs
imul
jle
mov
and
dec
out
nop
jp
cwtl
nop
sbb
or
loope
adc
mov
hlt
jbe
addr16
inc
sbb
mov
xor
addr16
fimull
enter
push
pop
ret
add
cmp
sbbl
push
fstl
pop
scas
push
push
imul
push
pop
nop
add
sbb
xor
pop
sahf
cmp
pop
mov
out
add
pop
dec
push
addl
fcompl
push
imul
xchg
cmp
mov
push
pop
sbb
popa
fldcw
sub
jo
add
sbb
imul
sbb
cmp
jo
jns
in
jb
popf
inc
inc
adc
mov
xor
mov
push
out
mov
jns
adc
scas
dec
push
js
mov
loopne
or
sahf
jg
push
pop
call
and
dec
push
mov
repz
imul
test
movsb
fst
xor
repz
add
pop
mov
sbb
repz
xchg
dec
jmp
xor
jmp
mov
pop
and
jo
mov
mov
sahf
flds
cwtl
mov
mov
or
sbb
xor
push
pop
xchg
adc
repz
xchg
aam
sub
lahf
sbb
push
lret
repz
xchg
add
lahf
pop
xchg
pop
pop
fdivl
cmp
repz
mov
mov
mov
sahf
sbb
test
and
push
sbb
hlt
jecxz
push
or
sub
push
mov
inc
inc
out
fwait
jg
mov
sub
testb
popa
push
popf
mov
mov
mov
or
push
call
mov
fdivrs
rorb
xor
and
adc
subl
or
and
stos
mov
cmpsl
insb
movsl
hlt
or
les
mov
inc
sub
mov
add
ja
fistpl
adc
rolb
push
sub
test
subb
ss
test
inc
or
jb
push
inc
adc
sub
add
sub
fwait
mov
ljmp
or
ret
repnz
xlat
fwait
push
gs
pop
inc
jnp
add
sub
dec
mov
dec
out
jb
adc
xchg
fwait
jle
push
dec
jge
adc
jb
and
and
insl
adc
adc
jnp
push
adc
push
jnp
cmp
xor
cmp
lock
enter
roll
mov
sub
ret
sti
lcall
adc
xlat
ret
dec
lods
add
pop
icebp
in
and
stos
xchg
or
or
mov
data16
and
dec
mov
lret
ffree
dec
and
or
xchg
xchg
xchg
xchg
sub
cmp
fisubrs
in
cltd
test
enter
cs
mov
push
xchg
inc
out
push
push
pushf
xchg
cltd
adcl
or
sahf
mov
jmp
xor
jmp
rcrb
and
mov
adcb
jmp
and
xchg
mov
cmp
add
and
sarl
or
sbb
ret
iret
repz
mov
push
stc
cmp
repz
or
sbb
aam
push
mov
pushf
pop
repz
imul
push
mov
iret
repz
inc
push
push
sub
push
nop
out
sahf
imulb
movsb
push
push
xchg
jl
push
jns
jnp
inc
cmpb
push
push
out
cmp
sbb
iret
repz
repnz
fmulp
mov
out
cmp
pop
into
sbb
incb
add
jns
jnp
es
loop
sbb
out
aam
mov
stc
cmp
pusha
sbb
pushf
jl
out
scas
lret
or
repz
shll
sub
pop
iretw
repz
jb
nop
sahf
lods
mov
iret
repz
fsubrp
decb
movsb
icebp
cmp
ss
inc
push
shr
repz
es
jb
jle
sahf
mov
daa
fistpll
ret
rol
loop
clc
adc
sub
cmp
iret
repz
data16
je
fs
push
cmp
iret
jnp
ds
daa
pop
mov
jbe
fldt
jae
jbe
push
cwtl
cmpsl
out
aaa
insl
mov
iret
dec
test
lea
sub
out
add
jbe
push
scas
test
rol
inc
das
mov
mov
out
add
addb
push
xchg
out
jne
movsl
dec
inc
pop
jle
sub
push
sti
fisubrl
or
dec
push
je
loopne
sbb
push
fwait
push
outsl
push
push
pop
xor
mov
mov
dec
lahf
insb
adc
es
jb
mov
and
daa
adc
xor
xchg
or
aaa
outsl
lea
or
or
bound
add
xchg
push
out
mov
and
sub
fidivrl
push
mov
loop
or
das
repnz
mov
decl
sbb
mov
adc
mov
fwait
outsl
inc
imul
dec
add
push
das
push
cmpl
imul
mov
les
sub
aaa
cs
outsl
and
add
daa
add
mov
das
cmp
mov
aaa
mov
ret
push
nop
sbb
je
xchg
std
jmp
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
lret
sub
or
fsubl
jb
inc
nop
cwtl
xor
push
sbb
pop
dec
sti
rcrl
and
pop
dec
imul
call
rcrb
pop
inc
jne
outsb
je
test
rcll
pop
inc
js
sti
fistl
ss
inc
xor
mov
xor
xor
cmp
sub
inc
inc
xor
xor
xor
jge
sti
scas
push
cmp
inc
stos
xor
ss
mov
mulb
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
mov
aam
bswap
ret
cmp
jne
test
push
jo
or
pop
xchg
xor
pop
push
movsb
ss
xor
or
push
and
cmp
aaa
adc
xor
inc
pop
dec
add
sbbl
sbb
push
xchg
shll
sahf
inc
push
inc
push
dec
and
in
mov
std
cmp
ss
pushf
xor
add
adc
or
outsl
mov
dec
inc
push
sbb
sub
scas
push
pop
fwait
popa
ret
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
repz
out
sub
out
cmp
ds
inc
mov
lods
sahf
add
mov
outsb
lods
and
hlt
scas
test
loope
dec
testl
xchg
add
push
or
das
mov
insb
outsl
xor
imul
movsb
fimuls
gs
je
push
push
lods
jns
push
inc
cmp
dec
xchg
sbb
sbb
jo
rcll
mov
popf
mov
fldt
inc
cs
pop
mov
add
insb
insb
mov
xchg
pop
fadd
jnp
data16
ret
lret
dec
push
inc
adc
add
dec
inc
xor
or
pop
insb
jbe
test
sbbl
pop
add
mov
lock
sbb
setno
lret
inc
out
push
and
outsb
ret
daa
sub
jnp
jg
nop
mov
imul
imul
js
daa
jp
mov
scas
scas
je
dec
fs
mov
push
imul
push
jo
or
sbb
dec
subb
mov
aaa
dec
mov
jmp
xlat
aas
pop
fildll
pop
arpl
inc
cs
push
push
push
add
adc
or
je
outsb
outsl
ss
inc
push
popa
imul
add
dec
cmc
sbb
xor
pusha
nop
fdivl
pusha
mov
mov
inc
inc
and
add
and
add
pop
subl
push
xchg
adcb
and
xchg
pushf
add
sbb
push
adc
adc
jg
dec
add
cmpsl
sub
add
add
push
mov
or
add
jns
addr16
orb
or
add
mov
das
push
adc
dec
shrb
adc
push
sbb
iret
repz
enter
idivl
sbb
push
das
jnp
stc
cmp
pop
nop
cld
and
repz
out
cli
js
jns
stc
jns
out
jp
push
cld
fdivr
mov
cmpsl
popa
in
mov
dec
or
out
dec
sbb
mov
push
xor
mov
and
outsl
push
dec
sbb
push
unpckhps
sbb
out
inc
ds
cmp
test
dec
xchg
or
or
lds
stc
int3
adc
push
cld
or
in
jns
out
int3
les
xor
cmp
imul
iret
jl
insb
push
out
pop
mov
dec
jns
out
inc
inc
cmp
xor
iret
repz
sub
and
repz
repz
adc
or
stc
cmp
or
cld
or
sahf
out
sahf
hlt
call
jns
out
movsb
nop
jo
xor
cmp
out
lock
int3
mov
iret
repz
insb
inc
sub
adc
sahf
out
ds
push
fcom
les
js
sub
repz
repz
mov
outsl
xchg
sbb
add
call
rolb
jl
xor
xor
pop
pop
dec
or
es
pop
ret
add
sbb
mov
dec
push
mov
xor
mov
push
sub
inc
inc
add
and
mov
inc
dec
cmp
mov
dec
call
bound
inc
adc
inc
rcll
scas
add
push
jecxz
gs
xchg
mov
add
mov
mov
lret
and
inc
pop
fimull
sbb
cmpsb
andl
pop
dec
dec
adc
mov
pop
imul
adc
data16
mov
add
inc
decl
add
inc
cmp
add
push
sbb
add
js
shrb
icebp
or
mov
pushf
andb
rolb
ret
jns
mov
add
xor
cmp
aas
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
icebp
inc
mov
add
mov
jne
pop
inc
add
push
stc
sbb
fs
das
or
imul
cmp
arpl
imul
pop
jb
xor
icebp
jo
push
or
cs
daa
add
jo
bound
adc
mov
mov
push
push
insb
das
inc
jns
sub
scas
outsl
jl
add
mov
ja
lahf
loopne
mov
das
loopne
fwait
cmp
sbb
and
mov
addr16
mov
test
ret
sbb
shr
jl
mov
insb
pop
enter
sarb
jg
fdivrs
cmp
mov
les
mov
ret
sete
cmp
pop
enter
jg
jbe
data16
add
and
fmuls
jns
pop
popf
inc
pop
in
rcr
cmp
xor
push
lcall
lret
clc
cmp
test
adc
or
jl
in
lds
push
xchg
sbb
inc
call
mov
adc
or
mov
xor
and
push
sbb
jmp
mov
in
rorl
iret
dec
mov
leave
fcmovnbe
mov
aas
jbe
mov
imul
aam
lods
xor
insl
insb
adc
fs
loopne
jns
ficoml
dec
adc
repz
daa
popf
mov
lock
enter
mov
loope
cwtl
xchg
imul
test
lea
icebp
movsb
mov
sub
inc
imul
push
dec
imul
fadds
ltr
mov
fidivs
push
lcall
or
loope
and
mov
les
push
push
add
push
outsl
ja
xor
pop
pop
test
xor
mov
push
sub
add
jno
fadds
out
daa
movsb
and
pop
arpl
push
inc
repnz
xor
lods
mov
xor
fucomip
cmc
rclb
mov
mov
bound
push
xor
xor
push
jb
outsl
and
mov
insb
jae
arpl
adc
outsb
push
add
push
imul
ss
push
mov
jae
in
insb
push
push
jae
push
adc
xchg
mov
push
sub
xchg
hlt
push
mov
test
add
mov
out
adc
mov
jecxz
inc
cmp
addb
adc
shll
fs
xchg
popa
xorb
jno
add
push
mov
movsb
jo
pop
das
push
mov
mov
push
jo
jb
jns
xchg
mov
dec
imul
xor
roll
push
push
lods
cmpsl
xor
xchg
imul
push
sbb
imulb
push
jnp
dec
aaa
adc
ja
dec
popa
jge
and
call
pusha
inc
and
dec
enter
inc
fiaddl
das
imul
mov
mov
add
pop
add
inc
shll
ja
inc
add
adc
push
fbld
jne
ds
cmp
or
insl
popf
cmp
sub
xchg
mov
jp
push
aaa
cs
es
pop
push
scas
xor
lea
xchg
and
fs
jo
xlat
push
nop
pop
ds
fs
ja
inc
inc
lahf
xor
iret
mov
dec
or
nop
jo
ss
pushf
cltd
inc
cs
jle
loope
adc
jle
and
push
jo
loope
call
rcr
dec
rcrl
adc
ret
inc
gs
loopne
add
add
push
jnp
aas
das
pop
outsl
mov
fdivl
mov
inc
add
sbb
sub
xor
sbb
push
scas
mov
addb
dec
dec
pop
sub
mov
inc
jns
pop
roll
xchg
fs
lds
xor
and
mov
in
and
push
outsl
cmp
xchg
in
xchg
mov
dec
and
roll
sbbb
push
push
popa
in
pop
sbb
cmp
loopne
push
cmp
cwtl
lret
mov
rolb
insl
imul
push
mov
out
add
adc
mov
inc
jmp
fnsave
or
das
push
mov
rcr
aaa
dec
inc
dec
pop
or
aas
push
and
sbb
inc
xchg
popa
out
jnp
push
je
inc
sbb
pop
sub
sarb
push
inc
jp
mov
push
iret
add
jo
add
add
cmp
outsl
inc
pop
push
or
push
and
jo
sub
jo
ds
xor
jl
dec
pusha
push
jo
jno
fldcw
pop
cmp
loopne
arpl
scas
into
pop
roll
dec
adc
in
xchg
adc
loope
ljmp
dec
imul
add
iret
dec
pop
pop
cwtl
pop
add
lret
xchg
into
out
outsl
cmpsl
das
jnp
inc
cmpsl
add
push
mov
addb
pop
imul
push
push
and
in
imul
jns
bound
sbbl
inc
jae
adc
add
je
add
add
jl
out
xor
and
xor
xor
pop
test
pop
loope
pop
push
sarb
into
insb
mov
push
add
mov
mov
mov
imul
fbld
lret
fbld
pop
push
sbb
inc
mov
scas
std
fwait
xchg
imul
pop
and
inc
cwtl
aam
int
icebp
jmp
jecxz
add
adc
xor
in
aam
or
jo
lret
jae
or
add
mov
add
jns
pop
mov
push
sbbb
popa
fsubrs
xchg
push
punpcklbw
popf
cs
and
pop
repnz
add
std
jecxz
repnz
jns
cmp
test
test
incl
xlat
pop
shrb
mov
mov
in
add
inc
cmp
inc
fsubrs
sti
fsubrl
imul
xor
inc
pusha
jmp
pop
pop
sarl
hlt
mov
xchg
add
or
mov
adc
add
push
and
and
or
sub
outsl
adc
daa
sbb
jns
adc
add
repz
repz
out
lock
cmp
enter
mov
jns
idivl
movsb
pop
mov
sahf
out
nop
mov
jo
pusha
push
pop
push
inc
cmp
repz
xor
sbb
pushf
out
adc
in
lock
pop
mov
push
fcom
repz
repz
cwtl
iret
repz
mov
cmp
cmp
repz
and
adc
jns
out
add
in
hlt
in
in
jns
out
int3
mov
sahf
out
outsl
xchg
push
mov
js
push
inc
stc
cmp
jnp
jle
sbb
loopne
adc
fcomps
push
xor
push
push
cmp
shrb
repnz
popf
lods
mov
push
mov
sub
incl
pmuludq
sbb
dec
add
shl
xorb
pop
scas
push
nop
push
repnz
data16
fisubs
push
aaa
adc
adc
maskmovq
testl
lret
jbe
or
neg
outsl
add
mov
neg
cmpsb
jg
fs
inc
dec
pop
add
rolb
cmpsl
mov
add
xchg
xor
scas
lds
daa
dec
pop
inc
push
scas
inc
xchg
dec
pop
dec
mov
inc
jne
sub
inc
inc
subl
orb
addb
cmp
mov
push
pop
jo
add
in
sub
inc
add
ret
cs
xchg
dec
and
and
outsb
cmpsl
jbe
xchg
or
jae
push
aaa
push
pop
insl
xor
sbb
insl
jbe,pn
and
call
xor
xor
ds
sub
and
or
add
outsl
jb
popa
fcoml
imul
mov
jbe
rcrb
cmp
rclb
insb
or
sub
or
pop
or
movups
jne
es
popa
fadds
mov
popa
insb
into
dec
mov
mov
stc
das
sti
adc
sbb
mov
push
inc
add
fcmovnu
add
inc
pop
pop
adc
fistps
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
pushl
add
or
sub
xor
xor
movsb
xor
xor
xor
xor
xor
xor
pushl
xor
xor
dec
xor
xchg
shll
inc
stc
pushl
dec
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
mov
jno
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
out
cmp
cmp
cmp
sub
ret
add
push
lock
idivl
lcall
lea
or
xor
xor
push
xor
pushl
xor
js
popf
xor
xor
xor
xor
xor
paddd
jmp
xor
xor
xor
xor
xor
out
xor
push
incl
xor
xor
xor
xor
xor
fidivl
scas
xor
mov
xor
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
movsb
lods
pop
out
cmp
pop
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
decl
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
dec
cmp
cmp
jae
mov
pushf
cmp
fistps
das
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
shr
aas
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
pushl
divb
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
std
ljmp
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
jg
imul
inc
xor
xor
xor
xor
xor
bound
push
sub
ss
clc
loop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fcomip
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
mov
or
pop
push
or
cmp
aas
clc
lcall
arpl
push
xor
xor
xor
xor
xor
xor
xor
call
cmp
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
cli
pop
cld
xor
xor
xor
scas
clc
xor
cmp
jmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
mov
cmp
jp
cmp
cmp
std
cmp
cmp
sub
xchg
adc
sbb
push
das
cmp
ds
fidivrl
jmp
jg
movd
and
cmp
ss
ss
xchg
cmp
cmp
cmp
iret
cmp
mov
cmp
cmp
cmp
dec
aam
push
cmp
cmp
cmp
cmp
cmp
cmp
das
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
call
push
movsb
xor
jg
loop
add
jmp
mov
scas
xor
xor
xor
incl
loop
xor
xor
xor
mov
xor
xor
call
push
scas
std
xor
cmpsb
data16
ss
add
or
push
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
pushl
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
call
cmp
push
mov
cmp
cmp
sbb
push
cmp
decl
add
push
cmp
sbb
cmp
xchg
xchg
cmp
or
cmp
cmp
cmp
cmp
cmp
bnd
adc
sub
xor
jg
cmp
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
mov
ds
push
cmp
jae
mov
cmp
scas
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
ret
ljmp
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
mov
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
dec
call
mov
and
sub
cmp
jb
mov
xor
xor
pushl
pushl
je
lcall
xor
xor
mov
jl
cmpsl
xor
xor
lock
xchg
xor
xor
xor
cmpsb
pushl
mov
cmpsb
xor
cmpsb
xor
xorb
aaa
fwait
sahf
inc
call
xlat
cmpsb
mov
bound
scas
cmp
add
sbb
sub
cmp
cmp
xor
mov
cmp
mov
pop
fimull
nop
cmp
cmp
cmp
inc
lds
xor
push
or
ljmp
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
pushl
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
pop
adc
xchg
mov
sbb
test
ja,pt
lahf
xor
xchg
aas
push
mov
pop
inc
xor
mov
xor
xor
xor
and
push
ss
fiadds
aaa
ret
lock
aaa
repnz
or
cmp
pop
cmp
lcall
cmp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
lcall
add
cmp
cmp
fdivrs
push
pop
popf
mov
aas
jne
mov
or
cmc
cmc
pushl
mov
fwait
xor
xor
dec
or
or
sub
aas
xor
divl
pop
xor
hlt
xor
adc
es
dec
ss
outsb
notb
lock
mov
enter
in
and
cmp
cmp
cmp
cvtpi2ps
mov
dec
ljmp
orl
jo
jne
test
mov
pop
cmc
add
cmp
dec
cmp
cmp
call
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
pop
cmpl
pop
cmp
mov
incl
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
add
sahf
loope
rol
pop
dec
pop
mov
push
xor
aad
out
incl
cmp
or
xor
xor
xor
xor
xor
mov
xor
in
xor
xorl
add
xor
ds
dec
aaa
pop
aaa
js
mov
mov
cli
fidivl
out
in
aaa
cli
aaa
mov
es
ljmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
stos
lock
cmp
cmp
cmp
adc
jbe
cmpl
clc
cltd
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
clc
mov
out
pop
rclb
sub
jne
jg
mov
loop
xor
xor
jg
xchg
xor
xor
xor
inc
pop
inc
dec
js
xor
xor
ljmp
jbe
loopne
adc
call
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
jno
test
ljmp
and
jecxz
cmp
aaa
into
cmp
mov
xor
xor
lcall
decb
lods
xor
int3
fildl
xor
xor
add
mov
and
and
sub
sub
xor
cmp
jno
cmp
inc
cmp
dec
cmp
push
rcrb
cmp
mov
fidivs
cmp
cmp
test
lahf
cs
aad
push
mov
enter
add
aam
fdivrs
fdivl
mov
cmp
dec
cld
push
add
or
adc
cld
pop
lods
pop
stos
sbb
and
and
sub
sub
pop
jg
xor
cmp
inc
cmp
cmp
push
pop
cmp
cmp
insb
cmp
je
jl
mov
cmp
cwtl
outsl
ret
mov
sub
xor
inc
mov
push
aas
jg
ljmp
insb
aas
test
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
cmpsl
filds
or
xor
lcall
xchg
xor
xor
xor
inc
xor
xor
es
pushl
cwtl
xor
xor
xor
xor
cmpsb
cmp
pop
xor
mov
cmpsl
icebp
sbb
inc
xor
andb
add
dec
notb
fimuls
xor
ss
jmp
shlb
aam
fdivs
fdivl
loopne
in
call
ss
incl
add
add
or
or
adc
adc
aaa
sbb
and
and
sub
call
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
inc
clc
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
loopne
icebp
aaa
xchg
aaa
cwtl
into
mov
dec
mov
mov
mov
shlb
aaa
enter
shlb
aam
fdivs
fadd
inc
bound
push
out
aaa
hlt
mov
cld
aaa
hlt
add
or
adc
adc
sbb
add
cmp
fdivrl
call
mov
cmp
pop
lcall
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
jne
outsl
add
insb
cmp
jl
test
incl
mov
mov
cmp
mov
mov
cmp
loopne
movsl
and
mov
mov
movsl
movsb
fs
lret
sti
sti
popa
pop
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
mov
stos
mov
push
lret
aaa
ljmp
gs
sarb
aas
push
aaa
mov
xchg
out
lcall
push
add
nop
dec
jae
loope
addb
push
pop
xchg
cmp
stos
push
xchg
add
out
jmp
inc
pmaxsw
test
out
andb
inc
dec
add
push
xchg
sub
sub
inc
sub
insb
xchg
cmp
jnp
sbb
or
add
add
lods
inc
dec
sub
or
inc
push
pop
pop
xorl
cmpsb
dec
jns
and
out
add
es
ret
mov
push
sub
mov
mov
daa
pop
add
test
ret
loope
push
jae
movsb
scas
aas
enter
gs
inc
cwtl
insb
or
or
gs
mov
cmp
and
adc
push
push
scas
mov
mov
dec
push
pop
rolb
popa
adc
repz
shlb
sbb
call
jmp
cmp
xchg
sbb
jle
aam
idivb
push
sub
je
pop
dec
fimull
jae
xor
and
jle
cld
sbb
out
aas
add
jl
or
incl
jb
ljmp
xor
mov
sub
and
mov
sbbb
ret
mov
test
std
incb
bound
leave
jbe
call
mov
outsb
sbb
pop
out
add
pop
xlat
push
ljmp
sub
or
add
gs
lahf
jp
or
int3
dec
ljmp
orl
mov
psrlw
xlat
pop
inc
sbb
pop
in
lods
mov
inc
or
mov
rorb
inc
andl
and
xor
pop
nop
lock
push
add
enter
sbb
lock
pop
std
xchg
bound
nop
sahf
add
lret
dec
xchg
je
cmc
mov
xchg
call
jno
inc
cmp
jne
test
push
std
push
adc
inc
pop
jmp
push
jo
add
cmp
call
jns
dec
and
xchg
call
ror
xchg
sub
dec
and
sub
xchg
inc
mov
jnp
fistps
cmpsb
test
add
dec
add
or
pop
add
add
add
mov
or
test
roll
dec
inc
nop
mov
inc
loop
sbb
rcll
lea
movsb
or
das
sbb
jbe
dec
mov
out
cld
xchg
test
push
ret
outsl
push
mov
popf
addr16
pop
sbb
cmp
clc
add
pop
clc
fnsave
cmp
or
xchg
nop
in
test
push
ret
pop
ret
mov
dec
mov
rorb
mov
and
xor
sbb
sub
push
add
loope
adc
jo
adc
sub
adc
ficoml
js
jecxz
pop
add
mov
mov
push
aad
loope
add
fimuls
and
mov
jecxz
add
sub
pushl
cmp
mov
cmpb
adc
cmp
push
mov
aaa
xor
cmp
pop
mov
rclb
test
cmpsl
jge
sub
mov
sarb
sbb
mov
orl
mov
push
mov
mov
mov
adcb
and
fisubrl
adc
push
dec
sarb
sub
pusha
cmp
or
leave
inc
xchg
mov
mov
xor
mov
xor
mov
cmp
mov
cmp
or
fildl
xchg
pop
adc
push
push
adc
xor
push
adc
rol
leave
out
test
enter
push
adc
sbb
dec
rclb
rorb
pop
daa
cmp
add
push
or
dec
repnz
daa
push
adc
sub
lsl
adc
out
cmp
rol
test
ss
fcoms
jmp
rcll
addl
inc
push
jbe
push
sub
and
test
mov
cmp
jle
pop
ljmp
aaa
xor
and
shl
xchg
scas
aaa
mov
xchg
jne
mov
xchg
jne
mov
pushf
mov
and
lods
rol
ret
or
sarb
add
shrb
jnp
jo
dec
pop
jnp
popf
adc
cmp
and
dec
jnp
adc
push
or
push
add
cmp
out
and
push
mov
adc
mov
stc
inc
mov
push
push
sbb
inc
sub
push
dec
sub
call
jbe
mov
mov
xchg
pop
cli
sbb
lret
cld
and
push
std
pop
test
xchg
jne
push
incb
lahf
xorb
ss
mov
adc
mov
fcoms
outsl
ja
call
call
test
jbe
pop
out
push
mov
and
and
push
les
cmp
popa
or
cwtl
cs
stos
nop
sub
and
test
push
test
frstor
fstpl
call
cmp
add
lret
fimuls
inc
fbld
xchg
or
pop
inc
mov
test
les
add
and
mov
adc
sub
push
fwait
stc
add
inc
and
adc
sub
mov
cmpsb
insl
add
add
sarb
gs
mov
ret
sbb
xor
mov
inc
and
sbb
add
push
gs
cmp
or
sub
and
stc
push
add
push
or
sarb
jns
sbb
sbb
or
dec
or
cmp
add
jg
add
inc
fimull
or
push
fisttpl
fstp
mov
xor
xor
add
add
push
adc
fldt
sbbb
and
outsb
cmp
das
insb
push
add
push
jnp
sahf
inc
sbb
cmp
mov
and
prefetcht0
fstpl
jmp
and
inc
inc
nop
shlb
or
insb
fstpt
fisubl
mov
out
add
push
xlat
pop
nop
and
int
sbb
cs
jnp
repnz
mov
es
add
or
dec
push
push
mov
add
mov
insb
fs
push
and
inc
sbb
add
jmp
repz
mov
add
mov
and
roll
jg
and
jns
ja
xor
pop
nop
inc
push
fs
mov
add
jg
add
mov
cmp
loopne
push
call
out
lcall
adc
sub
gs
out
cmp
inc
push
push
push
imul
cmp
jae
xor
test
call
mov
fs
sbb
lods
nop
and
addr16
and
xchg
cltd
mov
or
pusha
and
cltd
shlb
adc
inc
push
call
ret
pusha
mov
pop
or
leave
repz
pop
pop
dec
loope
jnp
cmpsl
ret
addl
dec
and
adc
sbb
addr16
andl
imul
daa
daa
dec
shll
daa
daa
or
shlb
daa
daa
dec
lcall
and
nop
add
sub
cmp
sub
sub
sub
inc
and
sub
cmpsb
imul
sub
sub
sub
xor
or
sub
sub
aam
cmp
and
cmp
mov
sbb
or
add
test
mov
inc
stos
cltd
fcoms
and
or
addr16
call
sbb
push
cmc
pushf
int
pop
cmc
push
lock
mov
aam
jp
or
clc
fs
dec
sbb
cmp
sbb
adc
inc
adc
sbb
psubsb
cwtl
mov
and
testb
push
inc
push
adc
jg
and
mov
add
mov
inc
inc
ja
cwtl
addr16
pop
pop
or
rolb
test
pop
adc
pop
pop
xchg
in
nop
mov
data16
xchg
pop
mov
lods
push
shlb
ret
and
outsb
and
sub
and
ja
andb
test
push
add
xor
add
xor
call
cmp
cmp
dec
inc
sub
test
adc
rcr
adc
ret
call
movsb
cmp
pop
es
xchg
cltd
mov
rcrb
mov
jp
or
add
push
push
mov
das
in
add
mov
cmpsl
adc
add
cltd
sub
mov
and
xor
cs
cld
loope
cltd
cwtl
pop
push
call
test
lret
pushf
push
pop
cwtl
rol
inc
mov
fs
pusha
sbb
outsl
cltd
mov
dec
sbb
xor
cltd
inc
push
adc
or
cwtl
fldl
pop
cltd
pop
cmpb
sbb
aaa
nop
cltd
xchg
sbb
add
inc
bound
sbb
test
xor
cltd
jns
or
xchg
cltd
pop
ljmp
mov
xor
cwtl
cltd
loopne
data16
lcall
rclb
push
push
pop
adc
aam
popf
pop
adc
inc
adc
jp
addl
test
jbe
jmp
outsb
adc
mov
sub
inc
adc
sbb
loopne
inc
mov
jbe
push
rcr
mov
in
mov
loopne
aam
sub
stos
or
push
imul
fiaddl
cmp
mov
adc
test
push
mov
out
stos
mov
sbb
adc
pop
loopne
and
nop
and
adc
push
adc
aam
movsl
inc
adc
adc
in
ficomps
add
je
adc
jl
mov
lret
xchg
add
pop
nop
sbb
adc
and
mov
inc
call
adc
mov
rclb
lea
adc
inc
call
adc
jmp
adc
mov
je
and
push
test
mov
movsb
mov
mov
adc
push
pop
aam
push
xchg
adc
in
jno
xchg
test
or
lods
add
inc
popf
and
or
or
pop
adc
icebp
out
adc
rol
and
sub
xchg
pop
inc
movsb
pop
add
cs
adc
lea
or
les
xor
sub
imul
push
add
xchg
push
and
icebp
pop
enter
andb
inc
pop
inc
or
out
mov
sbbb
rorb
inc
pop
sbb
mov
addl
sbb
cmp
dec
pop
push
or
sbb
add
mov
ret
mov
xchg
pop
push
adc
xchg
xor
aam
popl
rcrb
sub
loopne
dec
out
sub
not
mov
in
fldl
mov
inc
xor
movsl
hlt
pop
xchg
cltd
inc
inc
inc
lcall
inc
inc
inc
cmp
inc
pop
inc
inc
inc
inc
inc
dec
dec
inc
jmp
cmp
fs
pop
mov
inc
cmp
pop
bound
or
push
call
push
add
jo
dec
adc
insb
fldl
fdivrs
fdivs
lds
je
ret
stos
loop
inc
int3
mov
inc
add
cmp
pop
call
and
std
pushf
sbb
push
and
mov
pop
jo
nop
rorb
movsl
addb
cmp
cmp
in
adcb
out
add
dec
mov
mov
cmp
ja
mov
dec
andl
aas
lock
jl
xor
inc
pop
and
sbbb
xor
pop
call
jp
mov
xor
sbb
pop
cmp
mov
adc
push
dec
subl
sub
in
push
mov
cmpsl
push
xorb
cmpsl
pop
mov
pop
pop
fstpl
push
mov
pop
jb
pop
int3
push
push
xchg
fdivl
mov
mov
lahf
mov
call
mov
pop
das
pop
or
xchg
popa
push
sub
int3
pop
and
fdivl
fcompl
pop
mov
jnp
lods
lret
call
test
pop
push
and
lret
mov
test
lock
int3
rcll
lock
out
mull
add
pop
mov
jecxz
pop
pop
int3
dec
fmul
inc
mov
data16
ret
pop
add
bound
and
sbb
arpl
insb
xchg
loopne
fs
or
je
fs
or
clc
pushf
outsb
xchg
sub
loopne
loopne
or
shrl
loopne
pop
jns
and
mov
les
mov
daa
in
inc
nop
push
js
or
jmp
inc
mov
flds
sub
test
jmp
and
xchg
cmp
inc
daa
jnp
pop
mov
inc
daa
fwait
roll
fmul
arpl
fstpl
cltd
loopne
inc
xor
sub
adc
cltd
pop
sub
bound
cltd
push
push
mov
sub
dec
inc
mov
fcoml
js
mov
adc
cmpsl
inc
mov
push
stc
pop
leave
sbb
sub
push
push
push
inc
jmp
shll
sub
mov
mov
dec
push
popf
fisttpll
xchg
jl
rcrl
pop
and
clc
cmp
inc
ljmp
enter
mov
fdivr
loope
test
adc
or
lahf
mov
mov
cmc
jle
add
dec
xchg
mov
sub
add
sub
and
mov
mov
inc
mov
adc
rorb
sub
daa
adc
adc
ret
sub
pop
loop
mov
pop
push
movsl
outsl
push
daa
sub
or
call
and
mov
shrl
xor
call
jecxz
adc
dec
sti
and
stos
fcomi
jmp
add
ret
mov
scas
pop
jnp
dec
cmp
pop
hlt
je
inc
sub
jge
loopne
pop
push
out
mov
mov
adc
test
rcll
andb
loopne
sbb
xchg
inc
push
lret
icebp
push
xchg
inc
mov
stos
inc
adc
and
sbb
jge
inc
jl
jl
ret
sub
mov
and
inc
jno
mov
and
mov
push
popa
pop
pushf
inc
pop
adc
xchg
xor
add
enter
or
jns
mov
jmp
nop
push
js
xor
int
fdivrl
jne
xchg
pop
push
roll
and
pusha
or
push
or
test
adc
push
fistps
add
es
and
jecxz
adc
xchg
fcmovb
imul
pop
das
lods
xchg
push
xor
ss
adc
scas
mov
xor
sbb
hlt
xchg
pushf
mov
les
xchg
fdivl
daa
mov
xchg
or
mov
ss
adc
or
push
xchg
es
aam
sub
aam
sahf
insl
loop
adc
cmp
inc
xchg
lret
fxch
and
aam
pushf
stos
in
fldcw
dec
insl
roll
mov
dec
insl
xchg
or
cmc
rclb
or
xchg
add
repnz
push
add
addb
je
mov
fimull
and
sub
dec
mov
ficoml
xchg
movsl
fwait
ss
je
xchg
cwtl
sub
inc
push
inc
xchg
rol
in
fwait
inc
and
mov
mov
xchg
mov
dec
mov
xchg
mov
push
add
ljmp
movsl
xchg
mov
or
dec
pop
mov
sub
sub
xor
mov
xchg
pop
jp
sub
or
jmp
mov
mov
mov
xchg
loopne
add
and
and
leave
mov
fs
lret
or
xchg
test
push
mov
jne
and
shrl
lea
outsb
shll
fcoml
cmpsl
lret
int
inc
into
sub
adc
push
gs
stos
pusha
add
ds
fldcw
mov
aaa
mov
loope
push
and
mov
aam
repnz
leave
call
adc
push
int
mov
jb
pop
fdiv
leave
sbb
das
push
in
mov
mov
pop
lea
out
push
cmpsl
lods
xchg
pushf
inc
sbb
cmp
jb
inc
xorl
dec
xchg
rcll
aas
mov
lcall
inc
fildl
lcall
in
fistl
push
or
fildl
xchg
mov
adc
and
inc
pop
andb
testb
lds
aad
cmp
enter
enter
push
orl
outsb
fildl
ret
in
add
loop
push
cmpb
sub
mov
iret
leave
mov
ret
dec
or
pop
and
fisttpl
and
lret
push
push
adcb
and
push
pop
loopne
sub
mov
test
je
fisttpl
adc
pusha
sub
mov
out
fidivrl
inc
or
cmpsb
lods
sub
add
test
fdivs
xlat
out
loopne
aaa
out
jns
adc
jl
jno
rcrl
fildl
fldt
call
pop
call
jecxz
aam
test
inc
dec
or
lods
fisttpl
faddl
xchg
add
ja
cmp
jle
dec
or
test
rolb
xchg
cmpsb
mov
outsb
daa
imul
lods
add
mov
or
icebp
adc
fucomip
in
and
sar
cmp
mov
leave
bound
cmp
repnz
jns
inc
lret
mov
and
dec
pop
mov
mov
and
or
add
in
mov
in
fdivrl
pop
jns
jns
mov
test
das
mov
mov
das
das
cmpl
das
das
popa
mov
dec
mov
inc
mov
nop
sbbl
mov
enter
add
in
pop
cmp
mov
jb
sbbl
mov
stos
mov
lahf
mov
sbb
and
mov
nop
sbbl
mov
enter
cs
in
sbb
push
jb
mov
and
mov
nop
sbbl
mov
enter
pushf
mov
in
pop
cmp
jo
gs
pop
mov
cmp
inc
push
cmp
in
pop
sbb
jb
xor
jmp
inc
enter
inc
in
in
mov
and
daa
int
sahf
or
mov
adc
jp
mov
das
add
xor
mov
dec
sbb
adc
adc
daa
int
xor
push
sbb
mov
enter
cli
mov
and
int
and
cmp
jb
mov
enter
inc
mov
and
mov
dec
jl
sahf
xor
mov
add
nop
jo
rolb
add
dec
mov
subb
inc
in
adc
xchg
xor
inc
adc
shr
test
adc
rol
rolb
cmpsl
in
sbb
stc
jb
dec
repnz
cmp
popl
jmp
sub
push
pusha
jmp
add
mov
ret
push
repnz
mov
mov
inc
sti
testl
pop
icebp
sbb
fdivrs
adc
mov
shlb
pop
rcl
mov
jg
mov
push
and
inc
lds
push
jbe
add
cmp
push
push
mov
rcrl
punpckhbw
leave
rol
dec
into
inc
or
rsm
loope
push
xchg
shrb
es
pinsrw
aaa
arpl
hlt
add
hlt
paddusb
inc
les
dec
bswap
inc
pop
adc
and
lret
and
mov
rcrb
xor
pusha
xor
rcl
sub
mov
jbe
push
xchg
or
and
xchg
dec
cwtl
test
jmp
pop
sarl
xchg
outsb
sbb
push
sbb
mov
pop
mov
dec
lret
inc
pop
push
xchg
out
xor
lret
mov
xor
xor
int3
pop
xor
sub
jo
adc
sbb
fsubl
andb
js
add
js
jmp
xchg
jne
and
xchg
mov
push
xchg
or
sub
int3
dec
mov
cmp
test
or
inc
sub
mov
and
push
xchg
mov
sbb
dec
movsb
movsl
sub
push
lcall
adc
mov
es
mov
adcb
test
mov
or
mov
and
sbb
adc
sarb
gs
pop
sbb
into
movsl
sub
inc
mov
and
jbe
aam
test
jo
scas
push
mov
sub
lcall
mov
sub
scas
dec
jge
push
lret
js
insl
pop
push
lret
or
lret
fmull
fimuls
add
js
cld
fsubr
test
xchg
fcoml
ja
clc
push
call
notl
fcompp
dec
lds
adc
movsl
or
out
xchg
or
jns
out
test
movsl
or
pop
lret
and
jnp
sub
xchg
or
rcrb
dec
or
mov
push
ret
adc
je
xchg
or
mov
out
adc
adc
or
pop
or
xchg
sbb
xchg
mov
pop
mov
push
ds
js
sub
xchg
or
shr
dec
push
or
and
rclb
sub
arpl
pop
mov
movsl
aad
push
adcb
or
or
popa
push
xor
sub
icebp
fwait
and
lret
xor
xchg
xchg
fnstenv
mov
mov
rcr
sub
js
je
stos
xchg
movsl
pause
imul
mov
push
inc
rcrb
popa
das
or
sub
out
movsl
sub
or
xchg
or
or
sahf
shlb
jmp
std
push
sbb
sub
or
xchg
sahf
cmpsb
dec
or
push
aad
add
in
xchg
xor
adc
dec
and
xor
outsb
adcb
push
push
mov
sbb
sub
and
mov
mov
stos
cmc
or
gs
mov
add
or
ja
sbb
mov
gs
and
dec
pop
mov
gs
je
mov
sub
and
push
push
lret
shrb
movsl
sub
mov
xor
mov
or
ret
push
lret
sbb
scas
push
or
or
or
push
call
sbb
and
stos
xchg
movsl
or
sahf
jmp
mov
repz
push
test
cmp
bound
sub
pop
loop
cmp
call
inc
dec
pop
or
inc
sub
stos
or
adc
ficomps
mov
sub
movsb
js
push
xchg
mov
sub
gs
cmpsl
xor
sub
dec
dec
scas
or
repnz
or
xchg
adc
mov
adc
data16
or
or
push
xchg
scas
movsl
or
add
lahf
loope
cs
adc
les
push
or
out
pop
movsl
sub
mov
jb
in
xchg
push
cmp
jg
sbb
mov
pop
pop
sub
sbb
pop
fldl
sub
xlat
inc
inc
sub
cmp
loope
mov
in
sbb
shlb
xchg
test
cmp
aaa
xchg
out
test
push
aaa
adcb
inc
inc
push
orb
jnp
cli
lods
mov
mov
in
das
nop
mov
adc
mov
mov
lcall
xor
push
pop
ds
mov
in
xor
lock
mov
push
xor
test
push
cltd
inc
pop
push
and
sbb
sbb
mov
or
push
ja
pop
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
and
fnstcw
mov
ds
adc
loopne
push
testb
jns
out
push
sub
mov
int3
faddl
sbb
repz
sub
inc
push
pop
outsb
cmp
repz
xchg
test
enter
repz
outsb
or
push
ds
cmp
repz
jb
mov
int3
out
push
stos
out
sahf
cmpsl
adc
cmp
out
sahf
pusha
jbe
test
into
out
idivl
add
push
sbb
sahf
out
sahf
xor
dec
pop
insb
adc
inc
ja
pop
cmpsb
add
ret
lods
push
adc
and
xchg
aad
pop
mov
push
lea
ret
or
add
out
mulb
sbb
push
push
mov
repz
mov
cmc
add
repz
clc
mov
mov
inc
adc
iret
mov
xchg
adc
add
push
pop
add
mov
sahf
idivl
mov
add
out
sarb
adc
adc
push
ds
sarl
sbb
sbb
xchg
out
sbb
or
cmpsb
add
sahf
iret
push
lcall
and
out
lcall
cmp
sarl
cld
hlt
call
sbbb
enter
dec
inc
aas
push
add
xchg
or
leave
or
adcb
test
xor
cmp
xchg
push
push
iret
repz
cmp
adc
add
xchg
in
loopne
fdivrs
out
ror
enter
jns
out
mov
out
sahf
mov
mov
out
mov
sahf
out
jo
push
sahf
pusha
pop
pop
push
push
dec
jns
out
dec
inc
inc
cmp
out
sahf
out
xor
adc
sarl
add
nop
fmul
test
iret
repz
push
sahf
cmpsl
stc
call
pusha
out
sahf
out
dec
inc
xor
iret
repz
or
mov
shlb
cmp
cmp
int3
or
out
test
push
xor
jg
mov
add
lock
mov
mov
or
inc
es
push
xchg
or
xchg
and
std
daa
stos
push
mov
aaa
xor
push
push
add
jbe
mov
and
xor
jne
shrb
push
stos
push
cmpl
outsl
push
shlb
lods
add
jbe
sbb
cmp
repz
in
sbb
das
sbb
outsb
jnp
mov
add
and
aas
insl
leave
inc
sbb
outsl
add
xchg
dec
iret
xlat
push
mov
inc
add
orb
aaa
mov
add
pop
cmpb
insb
ss
jo
pop
shll
jbe
adc
in
sbb
pop
lds
push
rcrl
daa
push
xchg
aas
mov
and
pop
enter
aaa
inc
pop
dec
jb
popf
rorl
cmp
push
pop
scas
inc
fisttps
inc
sarb
fldenv
inc
lahf
inc
jg
dec
push
dec
pop
xor
aas
pop
enter
push
int3
push
push
and
cmp
cmpsl
mov
fsubl
dec
fadd
test
sub
or
fbld
and
add
movnti
imul
inc
mov
add
mov
mov
pushf
add
fldenv
insb
pop
insb
daa
cmp
pop
stos
outsb
cs
outsb
sbb
inc
outsl
ds
outsl
gs
subps
pop
cltd
jge
mov
rcrb
fsubl
in
pop
mov
cld
adcb
or
scas
inc
adc
mov
sub
notb
imul
leave
cmp
and
mov
movsb
add
push
pop
cmp
add
or
movsl
push
sub
push
xlat
jae
adc
mov
mov
inc
aas
fwait
inc
sub
add
mov
sub
xor
xor
mov
jp
fwait
dec
add
add
push
mov
xchg
xor
sub
mov
adc
push
mov
sbb
push
ja
movsb
dec
sbb
inc
and
orl
mov
imul
daa
xchg
movsb
mov
push
mov
xchg
xor
sub
lods
addl
or
sbb
mov
bound
shll
push
or
add
add
lahf
sub
sbb
arpl
mov
imul
addb
sbb
sbb
mov
add
xor
pop
jae
insb
pusha
push
aaa
add
ja
push
pushf
xor
push
inc
addr16
bound
orb
ficompl
ret
add
push
pop
inc
xchg
movsb
xchg
out
sahf
inc
jle
pushf
cwtl
xchg
sahf
out
sahf
nop
mov
out
jns
push
pop
dec
inc
inc
iret
repz
cmp
xor
sub
cmp
repz
and
adc
enter
cld
xchg
hlt
xchg
in
push
in
cmp
repz
enter
repz
lods
test
mov
inc
xor
push
insb
push
fs
jns
repz
push
dec
mov
push
and
into
idivl
add
in
xchg
push
enter
iret
sarb
iret
repz
mov
jns
out
pop
inc
cmp
stc
cmp
and
adc
lock
loopne
out
sahf
int3
mov
mov
jns
outsl
subl
outsl
ss
cs
add
test
inc
xor
mov
neg
mov
sbb
test
pop
jo
sbb
lret
add
stos
sbb
sbb
pop
aad
test
ds
pop
dec
mov
ss
cld
pop
enter
andl
pop
and
xchg
cs
inc
dec
pop
fcoms
fbstp
js
aas
xchg
xchg
mov
sbb
add
and
rolb
shlb
sbb
fwait
push
sti
inc
xor
rcr
xor
xor
cmpsb
dec
sbb
fisttps
cmp
ss
ss
nop
ss
aad
es
ss
outsl
decl
sbb
cmp
cmp
aas
cmp
sbb
xor
fstpt
push
cmp
xchg
dec
es
lret
cmp
cmp
cmp
cmp
dec
test
sbb
pushl
inc
jnp
cmpl
adc
xor
cmp
cmp
incl
mov
mov
ds
ds
call
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
into
decl
or
push
data16
jbe
jnp
cmpl
aas
popf
aas
movsb
aas
mov
sarl
div
dec
add
aas
clc
sbb
jl
xchg
cmpsb
mov
xor
mov
xor
sbb
inc
xor
mov
mov
xor
sarb
das
xor
fwait
pusha
adc
cmp
xchg
mov
cmp
xor
inc
sarb
pusha
je
inc
fmuls
xor
fisttps
sub
xor
xor
xor
xor
xor
or
pushl
xor
xor
xor
xor
dec
mov
ss
mov
fwait
mov
ss
pushl
sbb
xchg
mov
inc
sbb
add
sub
das
cmp
fnsave
mov
cmp
add
fmuls
es
es
cmp
xor
xor
cmp
cmp
cmp
sbb
rcll
cmp
pusha
je
clc
outsl
cmp
push
pop
mov
pop
xor
inc
fdivrp
aaa
mov
cltd
idivb
jg
cmp
cmp
cmp
dec
push
add
jg
outsb
ja
jle
test
clc
mov
cmp
hlt
cmp
inc
ds
ds
ds
fs
xchg
cs
decl
cwtl
xchg
xor
xor
xor
aas
cld
xor
push
xor
aaa
leave
clc
mov
xor
xor
xor
xor
inc
lds
pushl
xor
outsb
xor
loopne
repnz
dec
ss
bound
xorl
ss
es
or
ss
cld
adc
ss
aaa
or
push
sar
fs
xor
aaa
mov
sbb
mov
xor
add
cmp
xor
scas
push
sbb
pop
cmpsb
test
outsb
xchg
icebp
cmp
cmp
das
mov
cmp
cmp
cmp
cmp
loope
xor
and
es
cmp
cmp
cld
pop
or
cmp
jle
xchg
mov
xchg
or
lahf
cmp
pusha
ret
push
add
call
cmp
cmp
cmp
cmp
cmp
push
scas
test
rclb
push
cltd
xor
insl
mov
sub
das
xchg
jno
stos
dec
aas
outsb
inc
cmpl
aas
insb
dec
and
ret
aas
iret
dec
fsubl
sbb
js
xor
into
xor
jg
mov
jg
lea
xchg
xor
xor
xor
lcall
pushl
stc
xor
xor
jo
in
pop
xor
xor
or
mov
cmp
insb
popa
cld
fistps
xor
xor
adc
push
mov
ss
arpl
stos
add
ss
ss
pusha
jl
test
outsb
adc
jne
jle
jecxz
mov
or
sbb
sub
pop
in
cmp
cmp
cmp
cmp
xor
push
cmp
cmp
aaa
or
cmp
cmp
movl
push
mov
cmp
cmp
scas
in
inc
sar
and
ds
or
cmp
adc
fstpt
inc
adc
fbstp
divb
data16
or
ss
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
jg
xchg
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
stos
pusha
adc
sbb
into
and
scas
xor
aaa
jmp
sbb
pop
loop
cmp
pop
cmp
cli
push
lcall
divb
cmp
ret
clc
jmp
ds
imul
mov
lret
xchg
icebp
adc
lods
cmp
cmpl
xor
or
out
sub
scas
xor
cmp
dec
cmp
pop
cmp
sub
xchg
or
cmp
xor
xor
incb
xor
xor
xchg
mul
loopne
test
or
pop
dec
es
xor
test
or
dec
add
arpl
sub
add
pusha
out
xor
sbb
jge
xor
mov
stos
and
mov
popa
mov
jle
xor
inc
daa
jp
jb
call
mov
cmp
ret
push
mov
dec
int3
inc
adc
mov
cmp
subb
mov
cmp
ret
sub
inc
sbb
pop
xchg
insb
jb
out
inc
mov
inc
xor
sbb
mov
mov
gs
call
lcall
jo
or
or
adc
adc
sbb
sbb
add
and
sub
ret
xor
mov
xor
push
pusha
xor
xor
inc
movsl
out
es
add
push
lret
mov
mov
nop
xor
loope
cli
xchg
mov
xor
enter
xor
dec
sbb
fdivs
fadd
test
iret
xchg
je
js
nop
or
jbe
xor
jmp
jbe
push
xor
fs
loope
outsb
jo
bound
sarb
pop
pop
unpckhps
dec
add
nopl
mov
pop
daa
cwtl
decl
ljmp
sub
nop
icebp
jg
push
insb
xor
xor
xor
xor
xor
cmpsl
outsl
stos
push
shlb
xchg
mov
xor
xorb
or
push
ret
jb
xor
lcall
pop
push
fsubrl
in
call
xor
xor
addl
add
push
add
iret
inc
adc
sub
xor
aam
shll
xor
xor
xor
push
xor
pop
xor
aas
clc
jg
mov
xor
xor
xor
xor
mov
decl
inc
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
add
ds
shlb
int3
fimull
mov
ret
cmpsb
mov
push
inc
jp
sub
je
pop
fucom
fcmovnb
clc
or
sub
jbe
sarb
adc
pushl
mov
fdivr
add
inc
call
pop
pusha
fcoml
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fistl
adc
adc
adc
push
adc
outsb
xlat
dec
les
or
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
dec
mov
xor
add
mov
inc
add
add
mov
inc
mov
jb
testl
ds
fbld
add
push
adc
pop
and
xor
inc
mov
and
inc
adc
xor
cmpb
cmp
add
sbbl
les
xchg
xorb
dec
mov
push
xchg
popa
adc
dec
nop
ret
xor
xchg
and
andb
and
add
es
scas
cmp
mov
adc
push
adc
pop
popa
jno
and
and
lods
or
xor
adc
das
stos
and
loope
icebp
mov
mov
mov
and
inc
mov
fiaddl
or
mov
dec
jo
or
decl
bound
add
lds
cld
cli
and
mov
incl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
dec
and
out
stc
or
xchg
jg
jmp
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
incl
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
pop
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
decl
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
decl
dec
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
cld
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
fdivr
decl
hlt
and
xchg
jmp
sbb
das
mov
out
pop
jb
mov
or
push
xor
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
dec
rcrl
stos
hlt
push
add
stc
loope
mov
sar
push
mov
fildl
icebp
testb
mov
lcall
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
decl
sbb
cld
andb
outsl
sbb
jb
adc
push
push
movsl
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
outsl
fcmovne
andl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
sahf
fisubs
or
dec
fisttpll
out
aas
std
cli
push
push
ljmp
outsb
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jl
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
pop
and
ljmp
nop
enter
ret
inc
in
mov
ss
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
cmp
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
ljmp
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
call
imul
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
jmp
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
fdiv
cs
clc
xorl
inc
cmp
push
or
test
loopne
add
mov
fsubrl
pop
pusha
inc
fcomi
push
and
clc
lcall
adc
xchg
pushf
mov
repnz
and
mov
adc
jnp
add
loope
aas
push
rcrl
rcr
addr16
incl
pop
inc
jb
fistpl
adc
call
jno
pop
pushl
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
aas
cld
jmp
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jg
jg
stos
pop
sahf
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
jmp
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
or
cmp
mov
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
or
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
insb
add
call
xchg
aad
loop
lahf
mov
or
out
lcall
fisttpl
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
lcall
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
ljmp
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sti
iret
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
jg
es
xchg
fidivrs
clc
mov
xor
test
aas
repz
sbb
lock
in
jmp
lock
add
out
sbb
aaa
clc
push
std
mov
sbb
test
jg
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
jg
mov
loopne
test
out
rolb
pop
or
or
fildl
mov
lods
movsb
or
bnd
aas
fiaddl
pushf
imul
jl
outsl
das
or
jno
lret
pop
in
jg
aad
cmp
jmp
mov
pop
lock
popf
jmp
hlt
dec
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
std
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
cld
stos
jle
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
mov
stc
lahf
loope
jae
jmp
add
mov
sar
mov
add
out
icebp
mov
loope
mov
fdiv
mov
sti
mov
fbstp
jb
adc
das
cmpsb
pop
mov
jge
out
xorb
int
call
xor
decb
mov
mov
mov
and
call
imul
and
mov
cmp
int
add
push
pop
aaa
std
js
dec
enter
inc
sbb
mov
mov
aas
icebp
ret
xor
or
ror
sbb
aaa
inc
pop
lds
ficoms
shrb
mov
pop
push
inc
mov
loope
mov
lahf
jp
dec
cmp
xchg
add
xlat
rcrl
in
xor
cmp
cmp
repz
js
pop
gs
and
sarl
xor
loop
pop
out
jg
jno
ret
cmp
xchg
inc
arpl
out
aas
xor
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
pushl
in
sbb
xchg
imul
add
stos
sub
outsl
jmp
std
mov
daa
jmp
faddl
add
inc
push
jae
push
pop
mov
pop
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
xchg
and
add
fsts
xchg
jl
jo
or
add
push
sti
pop
inc
add
or
push
nop
mov
or
push
and
mov
leave
mov
cli
cld
or
addl
pusha
pop
sbb
mov
jg
ljmp
adc
out
hlt
xchg
test
pop
shrb
mov
push
pusha
repnz
and
push
jmp
jp
dec
sub
dec
ljmp
sub
jns,pn
int
ljmp
je,pt
leave
inc
or
shll
dec
gs
pusha
cmp
mov
mov
lcall
inc
cltd
push
cmp
push
pop
dec
std
inc
lods
mov
into
fimuls
sti
pop
ret
lahf
cmpl
mov
out
dec
ja
mov
fsubs
aad
jle
ret
sarb
in
out
cli
pushl
mov
pop
scas
mov
int3
loope
mov
bound
cmc
xor
jnp
ljmp
xchg
dec
out
scas
mov
in
cmp
shll
aad
jp
repnz
call
sbb
stos
aas
sbb
subl
xlat
xchg
or
jmp
push
push
mov
ljmp
mov
ss
call
or
push
inc
sbb
mov
gs
pop
inc
adc
jmp
push
jg
cmp
cltd
mov
mov
push
leave
push
ret
ljmp
incl
ret
cmpb
rorl
xchg
xchg
movsb
ss
frstor
sbbl
add
mov
ret
int3
lds
sub
imul
push
cwtl
into
imul
fcmovnu
insb
jbe
mov
arpl
into
cld
xchg
mov
idivb
ds
jg
out
jg
cli
inc
mov
pop
mov
cltd
pop
push
stos
jge
sub
lret
iret
orl
mov
lcall
adc
mov
push
out
mov
stos
push
mov
test
js
mov
pushl
test
call
dec
and
leave
or
shrb
fisubrs
mov
stc
sbb
push
mov
mov
out
insl
sub
int3
imul
shrl
adc
mov
or
pop
xor
outsl
adc
inc
jnp
out
jmp
add
jmp
xchg
add
dec
jle
fdivrs
adc
aad
mov
jns
aad
xchg
jb
push
xor
ljmp
mul
xchg
push
incl
or
insl
ret
pushl
push
int3
pop
jns
loop
ja
pcmpgtd
fisttps
mov
out
icebp
jns
inc
xchg
ljmp
lahf
dec
mov
icebp
cmpsb
inc
lea
push
sbb
scas
cmp
inc
mov
call
xor
sbb
in
inc
mov
jne
leave
pop
dec
lret
movsb
dec
mov
add
xchg
lcall
ds
in
call
pop
push
mov
daa
icebp
in
mov
mov
idivb
sti
lea
jmp
jno
xor
scas
push
les
sub
xor
js
xor
hlt
cld
or
repz
ficomps
inc
std
sbb
mov
jp
push
mov
decl
sub
clc
aaa
sbb
mov
jle
jnp
mov
sbbl
mov
push
mov
stc
push
loopne
mov
imul
ljmp
sarl
mov
std
shlb
rcll
xchg
testl
ljmp
icebp
inc
loop
and
push
scas
xor
xchg
pusha
mov
xor
cmpsb
mov
push
jno
mov
repnz
daa
call
loope
in
jb
mov
stc
popf
lea
sub
out
mov
aam
mov
decl
in
add
mov
clc
cmp
inc
cmp
inc
ljmp
imul
jecxz
cmp
out
sub
shl
out
pop
int3
and
fwait
mov
add
je
repz
decl
pop
mov
jecxz
and
sbb
cltd
fstl
repnz
pop
lods
mov
mov
jno
repz
insl
mov
fwait
or
int
jbe
repnz
xchg
pop
fstpt
loope
call
iret
push
mov
cmp
xlat
jmp
mov
rclb
sbb
mov
ljmp
cld
push
ja
loopne
fldl
mov
shlb
loope
jno
ret
hlt
iret
adc
xchg
jb
out
jg
lock
sarb
sbb
gs
in
daa
lds
jo
xor
inc
lcall
adcl
test
into
jp
add
lock
pop
push
jle
pushl
clc
fs
cli
and
iret
add
push
cmp
stos
in
jg
shlb
inc
mov
xchg
push
fisttpl
cwtl
adc
mov
push
inc
xor
cmp
mov
fisttpll
add
fbld
fildll
dec
int3
sbb
mov
int
push
movsl
push
dec
sub
inc
repnz
ja
lds
mov
jle
pushl
test
jnp
lods
xor
jne
out
push
jge
pop
inc
je
cs
stos
pop
je
mov
ret
adc
push
mov
adc
jae
out
or
jge
sub
hlt
fdivrs
out
inc
daa
push
test
in
add
adc
in
and
jbe
cmp
xchg
lods
jne
incl
call
sarl
mov
enter
push
mov
mov
int3
mov
stc
adc
cwtl
dec
lcall
sbb
inc
pushf
insl
xor
and
repz
cmp
das
clc
lcall
xchg
scas
dec
cmp
add
cmc
mov
mov
bound
mov
test
add
pushf
adc
mov
mov
push
mov
outsb
push
imul
or
add
or
test
mov
inc
add
cmc
aad
cmp
dec
inc
sbb
mov
pusha
mov
das
bound
into
or
dec
cmp
and
scas
sub
out
movsb
in
and
adc
icebp
xchg
test
jmp
xor
sub
inc
aam
rolb
jb
xcrypt-ctr
cmpsl
fidivrl
mov
sar
sub
incl
lock
push
mov
and
adc
pop
fcompl
movsl
push
fildl
stc
sbb
call
test
test
repnz
fnstcw
clc
gs
push
dec
lret
lock
sub
cli
fnsave
pop
xor
in
dec
cmp
push
xor
inc
scas
fsubl
xor
dec
cmp
insb
mov
jo
jbe
mov
xchg
push
mov
xchg
mov
mov
sbb
inc
into
mov
push
mov
sub
xchg
repnz
xchg
cli
popa
xchg
add
lcall
inc
mov
ret
rolb
sbb
stc
mov
into
incl
add
aaa
add
xor
lea
add
incl
mov
add
inc
dec
das
fcom
imul
xchg
add
fwait
mov
push
adc
push
add
je
js
idiv
call
cwtl
mov
jge
xorb
mov
pop
xor
adc
inc
or
cmp
inc
fdivl
cmp
cmpsl
mov
pusha
mov
inc
adc
enter
addr16
ficoml
mov
daa
and
in
cwtl
scas
test
loope
add
push
push
decl
dec
mov
jg
icebp
fisttps
in
push
jo
sub
xchg
loope
jb
outsb
fsqrt
sti
add
pop
sbb
mov
cmp
add
incl
and
cmp
aam
sub
jno
pop
ret
lea
incl
add
les
outsb
js
gs
repnz
in
das
sahf
inc
and
inc
push
inc
ret
jle
call
loopne
addl
or
inc
loop
or
incl
push
or
lds
fdivrs
inc
shll
mov
insl
mov
bnd
fcomip
call
inc
jne
dec
das
xchg
fs
mov
lds
jge
mov
pushl
jg
xor
mov
fcomp
into
jno
xchg
pop
roll
mov
ss
mov
mov
mov
or
push
xchg
mov
pop
add
incl
jge
mov
pop
ss
jl
pusha
mov
test
sub
fldt
aas
ljmp
push
test
lret
call
cmp
add
or
xchg
sbb
add
lods
push
mov
adc
es
xchg
add
xchg
adc
test
imul
call
loopne
xor
push
in
neg
fwait
xor
cmp
ljmp
add
cmpsb
or
aad
pusha
ret
lods
mov
negl
mov
push
mov
or
insb
xchg
push
out
mov
mov
and
lcall
cld
stos
es
mov
shll
sbb
pop
pop
test
fsub
push
lret
xor
push
adc
movsb
push
cmp
nop
xor
div
adc
dec
xchg
je
decl
loopne
xchg
in
rcl
inc
test
sahf
jmp
sub
inc
pop
std
or
push
shl
jb
jl
xor
incl
xchg
push
lds
adc
dec
fmuls
and
and
sbb
mov
xchg
sbb
inc
orb
ss
clc
cmp
sub
push
addr16
xchg
lcall
repz
xchg
cmp
or
xchg
js
adc
inc
adc
decl
addr16
mov
mov
loope
xchg
insb
xchg
jmp
subl
ds
out
call
dec
scas
jns
rclb
inc
sub
pop
cmp
jmp
popa
insl
in
stos
xor
out
mov
mov
aaa
cwtl
jnp
daa
xor
dec
leave
inc
and
das
out
sahf
jne
push
ljmp
add
mov
dec
cmpsb
popf
mov
pop
sub
popa
sbb
mov
mov
jg
cmp
dec
mov
sbb
cmp
es
mov
movsl
mov
shl
and
mov
cmpl
insl
pop
adc
pop
inc
ja
test
ljmp
pop
popf
ljmp
repnz
push
pop
dec
sbb
rcrb
and
fiaddl
mov
mov
je
mov
fsubr
lcall
ljmp
out
pop
icebp
cmp
jbe
stos
pusha
or
std
mov
addr16
cmpl
mov
xor
cs
faddl
jg
add
bound
and
lea
shr
push
sub
mov
xor
sbb
rcrl
iret
sbb
lods
cli
out
iret
int
fs
xor
and
fmuls
mov
push
in
xor
mov
aas
iret
or
inc
mov
xor
push
in
subl
and
push
aam
das
movsb
sub
mov
add
mov
sub
mov
jmp
pop
lock
add
inc
mov
imul
aad
decl
jne
add
or
xlat
fwait
push
or
sub
daa
rorl
cwtl
movsb
cwtl
lcall
mov
call
inc
insb
mov
leave
loopne,pn
jae
lcall
xchg
fdivrs
hlt
mov
ficompl
and
mov
mov
or
push
jmp
ljmp
jge
xor
and
arpl
lahf
sbb
mov
lcall
jb
int3
pop
mov
imul
movl
movsb
pop
iret
push
stos
adc
and
out
cli
cmp
std
fildll
add
cwtl
xor
pop
aas
test
pop
insl
push
dec
aam
jl
adcl
ret
ljmp
loop
push
mov
out
fcomps
int
cmc
int3
js
cmp
call
cmc
mov
pop
cwtl
aad
or
stos
sub
mov
add
sbb
popa
clc
jno
incl
mov
sub
cmc
pusha
sub
in
pop
xchg
aam
ljmp
push
jp
jecxz
add
notb
hlt
pop
or
mov
scas
clc
ljmp
cmpl
popf
add
dec
jae
fs
sbb
decl
incb
enter
xor
addr16
ja
pop
int3
cmp
test
or
rcll
lret
xor
imul
pop
jae
clc
jl
lret
fisubrs
scas
fildll
add
and
mov
stos
pop
shr
push
incl
xor
add
scas
inc
sbb
add
pop
xor
dec
mov
arpl
cmpl
jg
and
push
ja
sub
ror
xchg
fs
push
adcl
dec
and
bound
mov
pushl
int
repz
jnp
sub
sahf
loope
iret
jns
lcall
adc
lea
lret
sub
ret
mov
fs
inc
addl
call
decb
push
xor
adc
mov
jge
test
pusha
sbb
mov
cld
mov
mov
cmp
mov
dec
fisubrs
xchg
mov
je
adc
dec
pusha
adc
in
jmp
mov
out
jl
dec
leave
jae
cwtl
push
mov
aam
cmp
push
xchg
cmp
ljmp
cli
lock
sub
and
call
xchg
lods
cmp
daa
mov
xor
lcall
jns
mov
inc
dec
lock
popf
mov
and
dec
pop
and
mov
rolb
fnstsw
dec
and
outsb
adc
push
imul
jnp
add
mov
add
ljmp
movl
mov
xchg
jg
stos
pop
or
mov
mov
lock
pop
nop
xchg
jl
cltd
out
cltd
xor
xor
movhlps
outsl
aas
jge
cmp
push
hlt
lcall
ljmp
test
ja
inc
andl
or
cmp
sub
sbb
leave
mov
daa
shll
xchg
xchg
sar
movsb
sbb
outsl
test
jmp
xor
clc
xchg
xor
mov
pop
fists
push
sbb
outsl
call
pop
jp
jno
ror
pop
imul
fistpll
ret
rcr
out
scas
mov
decl
inc
addb
push
pusha
dec
and
pusha
push
xor
and
pop
jl
jl
test
test
jmp
inc
dec
pop
push
jmp
shrl
lds
push
mov
loope
push
sahf
jbe
enter
pushl
mov
cmpsl
popa
cmp
dec
jnp
xchg
leave
adc
pop
scas
rcrb
xor
aaa
arpl
aam
push
lcall
jo
push
xchg
insb
mov
pop
or
or
pop
push
into
mov
mov
out
aam
iret
xor
mov
aas
stos
adcb
xchg
jbe
push
ljmp
je
or
imul
push
stc
push
cmp
pop
push
aas
lods
lea
add
ror
pushl
imul
mov
popf
fildll
mov
or
arpl
shll
decl
aas
out
arpl
jo
jle
sbb
sub
sbb
ja
shlb
inc
sbbl
std
pop
inc
mov
ds
xchg
mov
lret
ljmp
pop
loopne
pop
ljmp
mov
ja
addr16
dec
sub
flds
lahf
dec
clc
incl
popl
mov
outsl
outsl
pop
loop
ret
mov
and
mov
mov
in
cmp
fcoml
les
fistpl
push
mov
jge
test
jo
cmp
stc
insl
ljmp
sbb
call
hlt
pop
out
outsb
testb
xor
or
push
cld
adc
fildl
ljmp
dec
pop
in
mov
or
xor
aaa
pop
int
inc
lcall
pop
jecxz
pop
call
sbb
jns
and
mov
stos
dec
jbe
fisttps
andl
outsl
lods
or
mov
push
inc
inc
popa
je
loope
push
mov
in
in
ljmp
arpl
call
jno
xchg
xchg
aam
out
and
into
jb
nop
push
aad
pop
jns
int
repz
add
jg
loopne
mov
fildll
xchg
mov
subps
xchg
mov
sub
sub
sar
call
mov
popf
addl
loopne
rolb
stos
das
cwtl
test
xchg
in
cli
jbe
addr16
jp
out
xor
pushl
pop
add
outsb
xor
inc
mov
mov
js
ss
push
push
jge
pop
push
inc
dec
push
lods
inc
aas
mov
into
cmp
sbb
fisttps
dec
dec
cli
lahf
jle
test
dec
add
test
in
int3
imul
imul
push
dec
inc
je
lcall
mov
mov
imul
cmp
dec
pop
dec
pusha
mov
and
cmpsb
ljmp
std
ljmp
movsb
sbb
lahf
and
sbb
ror
iret
pop
lcall
ljmp
mov
rcll
popa
cli
mov
xor
mov
push
outsb
mov
iret
ljmp
xchg
inc
mov
mov
fdivr
inc
fistl
cmp
pushl
test
ret
xchg
jo
fcmovne
cmp
insl
mov
or
jb
dec
mov
es
cmpsb
mov
inc
in
test
lods
or
adc
in
arpl
push
mov
addr16
ljmp
clc
cld
push
ss
shrb
outsb
arpl
scas
lea
popa
push
mov
cwtl
orl
jle
mov
lcall
js
sarl
pop
cmc
jmp
pop
sub
test
inc
jl
stos
call
mov
inc
sbb
fwait
push
ljmp
push
ret
jne
xchg
popf
aam
and
lret
cmp
scas
sub
out
es
fwait
ljmp
ljmp
lahf
hlt
test
cmpl
mov
ja
aad
push
jnp
lcall
fsts
jmp
dec
sbb
loopne
ja
imul
cmp
mov
adc
scas
or
mov
jle
xchg
cmp
clc
inc
sbb
movsb
add
or
repz
incl
dec
int3
incb
or
je
ss
cmp
loopne
adc
jb
in
xor
pushl
jnp
xor
mov
std
leave
icebp
and
data16
jno
fdivr
into
pop
or
pushl
pop
xor
inc
imul
stos
xchg
mov
fcoms
mov
ret
dec
aam
push
aam
incl
xlat
test
imul
in
aad
or
jp
je
cmpsb
add
pop
call
mov
fsts
xor
aas
shr
or
daa
cmp
mov
test
or
push
jnp
aas
movsb
sbb
xchg
cmp
jmp
aam
mov
sub
aaa
bswap
pusha
add
cmp
pop
push
xchg
in
pusha
loop
mov
daa
xchg
push
gs
std
lods
gs
pusha
mov
out
mov
filds
jmp
jle
pop
adc
mov
jmp
inc
sbb
in
add
and
or
ret
jg
cmp
xor
dec
ret
fidivrs
out
sar
mov
or
mov
call
inc
cli
imul
pop
cld
mov
icebp
in
lods
push
push
int3
push
test
push
and
insl
daa
add
idivl
les
dec
dec
dec
fsubrs
cmp
jmp
pop
test
adc
rcll
xor
rorb
ret
push
notl
call
cmp
out
or
fildll
dec
gs
sti
into
pop
rolb
sti
add
ffree
sub
incl
fcmovnbe
call
push
or
movsb
int3
mov
out
mov
out
clc
pop
jg
xchg
mov
lock
popf
scas
mov
ljmp
in
ljmp
cli
add
dec
cwtl
in
push
dec
pop
jb
mov
adc
xchg
sbb
insb
call
push
cwtl
sub
push
bound
sbb
mov
rep
loopne
cmp
popa
add
call
notl
pop
sahf
decl
loopne
gs
push
fmul
inc
aas
and
lea
xchg
mov
call
mov
arpl
cmp
pop
addr16
push
jae
ret
push
popf
and
daa
jnp
add
incl
test
scas
adc
jae
jge
sbb
xchg
mov
or
push
pop
rol
pushl
inc
icebp
mov
jmp
pop
push
sbb
das
cli
mov
out
ret
mov
adc
outsl
fsubrs
jg
sub
inc
scas
jne
cltd
jae
push
mov
push
inc
lods
test
mov
and
in
jno
sbb
decl
jno
pop
lret
cmp
jo
int
push
shll
leave
jnp
cs
mov
pushl
inc
cmp
scas
shl
fnstcw
ret
cltd
lcall
push
test
pushl
add
sub
lds
xor
xchg
xchg
out
rcr
popf
out
mov
mov
popa
arpl
pop
push
fstpt
xchg
xchg
insb
shlb
fildll
into
push
dec
pop
inc
ret
or
cmp
ja
fwait
xchg
ja
sbb
push
or
sarl
or
popa
sbb
push
test
cld
out
inc
mov
pop
xchg
add
mov
inc
lds
incl
and
xor
and
lds
or
loope
and
fistps
fisubl
cmp
sbb
dec
adc
pop
cmp
jb
aam
sbb
mov
add
idivl
lods
xlat
call
push
int3
add
bound
mov
xchg
imul
jl
mov
jg
fisubrl
inc
clc
cs
in
xchg
mov
inc
sbb
jp
add
adc
mov
dec
test
mov
mov
pop
in
aaa
mull
mov
divb
jmp
je
xor
jl
sbb
mov
imul
fmull
call
neg
sub
mov
sarb
and
add
aam
xchg
loop
leave
pop
mov
iret
inc
sar
decl
mov
push
cmp
fidivrs
data16
nopl
cmp
or
xchg
mov
int3
push
mov
je
aad
pop
jl
pop
movsl
fstps
test
mov
fcomps
mov
lcall
gs
sbb
dec
add
les
pop
addl
pop
lock
shl
lret
inc
cmp
clc
jbe
iret
sbb
stc
sbb
mov
cld
aas
and
outsl
insl
jne
pop
add
mov
or
and
pushl
jns
fnstcw
icebp
mov
or
cmp
and
cmpsb
dec
push
xor
inc
push
inc
jge
call
fdiv
or
addr16
cs
std
pop
mov
movsl
sar
dec
dec
xchg
mov
mov
mov
iret
lcall
shrb
mov
in
pop
iret
in
ljmp
jecxz
jno
sbb
icebp
insb
in
vcvtsi2ss
or
xchg
mov
push
pop
add
inc
sub
adcb
gs
xchg
xor
js
mov
dec
sub
inc
addr16
outsl
aam
mov
out
cli
and
lods
nop
neg
pushf
xchg
and
hlt
lahf
add
ret
loop
mov
mov
rorb
rorl
adc
pop
mov
ds
in
and
jg
jne
int3
sbb
imull
fidivrl
or
pop
and
inc
inc
movsb
add
ljmp
js
push
shll
sub
xor
cmp
inc
adc
daa
jecxz
and
fcos
mov
lcall
ret
outsb
adc
mov
out
sub
xchg
add
xchg
fsubr
cmp
or
popa
rorl
aad
jl
sti
and
cmc
dec
mov
sbb
loop
pop
shlb
movq
aam
in
rorl
call
mov
loop
adc
leave
cmp
mov
andb
pop
dec
jl
fwait
popf
cmp
aam
call
movsl
scas
or
pop
hlt
push
push
dec
dec
add
mov
rol
jae
outsl
sbb
sbb
xchg
or
push
lahf
aad
das
xchg
adc
mov
pop
inc
rcrb
inc
inc
and
lods
int3
xlat
lcall
inc
mov
jno
incl
insl
in
inc
int3
je
adc
rcr
incb
shrl
cmc
pop
gs
mov
or
mov
xchg
mov
pop
sub
push
test
dec
stos
or
adc
pop
shl
xchg
dec
sbb
into
adc
fisttpl
pushl
std
mov
cmp
outsb
push
aas
adc
mov
inc
sar
jmp
dec
sbb
jne
hlt
out
into
inc
fwait
mull
nop
outsl
and
adc
sbb
pop
sar
jg
or
das
gs
or
push
sti
xor
out
jecxz
loope
jle
mov
add
mov
ljmp
xor
cld
push
dec
pushf
ja
ss
sbb
fadds
push
cmp
inc
lods
xchg
mov
mov
rorl
imul
xor
push
out
adc
das
clc
push
popf
sub
les
insb
mov
jae
bound
mov
scas
hlt
inc
inc
lock
orl
incl
mov
inc
in
pop
in
outsl
mov
push
popl
sub
in
xchg
daa
or
mov
repz
sub
into
cmpsb
mov
mov
mov
mov
or
rorl
out
inc
xchg
jmp
idivl
call
imul
fidivl
and
and
cmp
lds
mov
pop
insl
xlat
ljmp
stos
pop
loopne
iret
adc
subl
hlt
mov
jmp
cmc
ljmp
inc
mov
mov
leave
sub
xchg
adc
mov
les
stos
mov
mov
or
sbb
jno
xchg
mov
cmp
pop
mov
outsb
and
mov
xchg
push
mov
or
insl
cld
data16
inc
dec
push
add
lds
mov
lock
cmp
xor
cwtl
loopne
jnp
aam
mov
adc
call
bound
jns
xorb
add
xchg
sub
pop
and
dec
iret
hlt
push
and
mov
cmp
pop
inc
and
adc
in
aad
jge
pop
in
or
mov
dec
lea
jecxz
mov
ja
aaa
insb
or
pushl
mov
in
or
add
sub
inc
dec
lahf
fadds
rorl
into
sbb
dec
aaa
rcl
stos
clc
mov
imul
push
xchg
rclb
sbb
insb
mov
or
cmp
jle
les
mov
lods
sub
mov
mov
mov
jmp
push
cmp
in
les
into
push
mov
mov
mov
jno
leave
ljmp
inc
mov
sub
fldcw
cmp
pop
icebp
dec
mov
aad
xchg
push
and
adc
shl
jbe
ljmp
mov
adc
pop
arpl
out
out
fs
mov
out
mov
sbb
mov
add
inc
clc
jmp
addl
push
test
mov
inc
add
mov
cmp
sar
add
ja
xchg
dec
mov
cmc
cmp
sub
sub
das
or
hlt
rcrl
subl
xor
sub
jns
adc
jmp
call
out
push
jl
cmp
fwait
rcrb
arpl
mov
dec
test
call
fisttps
pop
pusha
fsubs
sub
dec
sub
mov
decl
inc
add
ss
ficompl
add
insb
sbb
leave
pop
cmp
or
mov
stos
pop
dec
jo
dec
pop
pusha
pop
call
adc
in
mov
or
mov
pushl
push
xchg
hlt
nop
adc
push
fwait
movsb
pusha
andb
xchg
movsb
jnp
je
mov
in
dec
xchg
lds
je
out
cmp
add
scas
jmp
arpl
push
test
dec
sbbb
bt
push
lret
inc
stos
dec
mov
jle
add
push
adc
aad
jmp
mov
push
jle
pcmpeqw
jecxz
fucom
mov
cmp
mov
stos
and
xchg
outsb
inc
les
lcall
enter
in
mov
xor
scas
pop
cmp
rcrl
gs
mov
insl
or
jl
clc
pushl
pusha
cltd
push
bsr
sbb
push
push
inc
cmpsb
mov
pusha
aam
aas
cmp
add
lcall
stos
mov
push
jg
les
and
call
fildl
fistl
cmp
sub
dec
dec
stos
jmp
sbb
sarl
or
xchg
test
ret
lds
inc
addl
decl
fisttps
xchg
lahf
dec
sub
leave
cmp
fidivl
sub
in
jle
push
inc
ss
pushl
dec
sbb
pop
fdivs
mov
out
fbld
ja
cmp
push
leave
mov
lcall
xchg
arpl
idivl
fs
mov
int3
je
movhps
xor
lret
dec
fldt
sub
jne
sbb
or
push
das
pop
lock
ljmp
mov
pop
in
js
jmp
xlat
negl
fst
pop
mov
jge
mov
or
lcall
mov
xlat
gs
and
inc
loop
sarb
push
push
pushf
jge
mov
repnz
add
out
push
mov
cmp
xlat
addr16
call
pop
inc
jne
decl
aas
mov
js
jle
jp
xor
xor
call
push
adc
dec
movl
cmp
push
mov
push
fsubs
xor
xchg
pop
dec
sub
fnstsw
mov
add
pop
add
in
xor
cmp
push
mov
push
loop
lret
push
jecxz
movsb
pushl
mov
hlt
andb
in
mov
and
pop
inc
loop
dec
cmp
mov
inc
adc
aaa
mov
pop
or
mov
lcall
dec
pusha
mov
aaa
inc
cli
testb
or
jbe
xchg
loopne
dec
shrb
sub
dec
pop
fisubrl
dec
or
xor
ret
scas
jp
lods
mov
lcall
jmp
push
fstp
mov
rol
into
std
sub
fldenv
pushl
xlat
aaa
sub
lods
mov
or
and
nop
out
pop
ljmp
insl
xchg
lret
mov
and
aas
lret
lahf
fstl
fsubs
call
or
push
add
cmp
popf
call
mov
fwait
mov
push
pop
gs
shl
jmp
mov
std
lock
dec
jle
ret
pop
mov
outsl
xchg
sub
pushf
inc
out
add
sbb
cmpsb
sbb
push
jge
sub
ljmp
push
pop
mov
cmp
sub
jl
sbb
into
xor
mov
adc
push
lds
and
out
bound
cwtl
mov
stos
mov
cltd
pop
add
incl
imul
mov
gs
jg
faddp
cld
stos
and
sti
repnz
std
mov
and
sbbb
lcall
push
pop
pushf
jbe
fwait
and
rcll
stc
icebp
sbb
inc
mov
pop
and
andb
movsl
jo
or
or
pop
dec
les
add
pop
dec
ljmp
fsincos
lods
leave
xor
sub
in
jmp
cli
loopne
mov
sbb
xlat
jns
jnp
cmpsb
daa
arpl
inc
test
iret
movsb
lea
stc
outsl
mov
test
jne
les
fcmovu
fwait
pop
fstl
dec
pop
mov
sbb
xchg
adc
repz
push
sbb
and
lods
sahf
and
hlt
jge
cmp
ljmp
into
add
xor
push
jecxz
dec
data16
cmp
mov
data16
cmp
lcall
ljmp
mov
inc
mull
dec
rep
lret
fistps
idiv
call
iret
pop
imul
mov
mov
stos
mov
jae,pn
lds
adc
sar
pop
sbb
test
xchg
je
fsubs
das
rcl
sub
push
cs
pop
int3
fistl
imul
incl
xchg
scas
lods
push
add
cmc
lret
jmp
or
and
aam
push
cld
inc
cmpsb
xchg
or
movl
cld
xor
dec
or
popa
inc
inc
js
mov
push
stos
xchg
clc
test
lahf
js
sahf
and
outsl
push
cmpsb
sub
jmp
inc
fs
xchg
cmp
les
jo
dec
fs
and
xchg
sbb
jns
cmp
call
incl
jle
fidivl
push
cmpb
cli
xor
xor
hlt
decl
test
mov
mov
stc
mov
push
jo
or
lret
push
and
movsb
dec
mov
lea
mov
sbb
fistpll
inc
add
and
daa
fsubrp
arpl
sti
push
push
mov
pop
test
or
stc
mov
lret
mov
dec
sbb
ljmp
cmp
aas
mov
mov
fnsave
popa
jns
and
or
lcall
loope
and
cmp
pop
mov
jae
mov
jne
lods
inc
call
xchg
pushf
push
inc
cli
inc
jo
fistl
in
mov
loope
sbb
lods
cmc
pop
mov
or
ljmp
dec
jg
xor
inc
push
aaa
jo
subl
push
call
mov
lea
sti
movsl
decl
sub
add
sub
rorb
push
adc
clc
pop
movsb
inc
out
push
sub
cmpsb
jg
pop
fwait
movsb
cld
push
push
sub
push
orb
sarl
andl
push
lcall
sbbb
cmpsl
outsb
push
icebp
movsb
cltd
in
jns
mov
sbb
bound
mov
aas
into
mov
cmp
daa
dec
stc
lcall
mov
paddsw
jmp
clc
cmpsb
aad
pop
and
xor
jne
lods
or
jp
fnstsw
pushl
pop
xor
pop
push
mov
mov
int
out
daa
call
lcall
or
es
cmpl
and
hlt
out
fwait
mov
push
sub
xor
cltd
mov
fucom
in
add
outsl
xchg
mov
add
mov
dec
jno
xchg
dec
test
fmull
ret
sbb
movhlps
lret
lcall
int3
mov
add
jge
icebp
push
cli
cmp
shl
ret
inc
subl
inc
xchg
jnp
jno
xor
xorb
lcall
fsubs
push
enter
popf
cmp
or
or
js
push
addr16
imul
out
mov
cli
jle
jo
stos
aam
mov
outsl
lcall
xchg
sub
xchg
lahf
push
pop
inc
inc
in
enter
jns
adc
cs
je
call
jbe
cmpsb
jmp
or
out
or
push
push
mov
fsubrl
add
and
loope
cmpsb
or
pop
test
pushf
and
inc
add
sub
jmp
xchg
mov
mov
fs
mov
aaa
mov
out
inc
out
lods
sub
lret
inc
loopne
decl
xchg
sub
adc
ljmp
adc
jnp
or
jmp
stc
mov
jmp
sbb
xchg
adc
inc
sbb
fdivrs
cmp
addl
loopne
dec
leave
cwtl
and
adc
scas
fsubrl
call
mov
data16
scas
mov
fsubr
lods
or
incl
xchg
bound
repnz
popf
push
fwait
subw
jmp
adc
decl
jb
fnstcw
mov
fwait
test
push
jg
mov
sahf
stc
or
inc
adc
popa
xor
push
vpminsw
add
lock
cmc
clc
jp
imul
sahf
les
call
and
shlb
sbb
bound
adc
pop
cmp
pop
pop
push
xchg
cld
mov
cwtl
outsl
je
fnstcw
fmul
mov
and
jnp
call
xchg
fldt
fistpll
jb
and
dec
outsl
push
jl
stos
pop
cmc
mov
jmp
outsb
ret
mov
lods
push
mov
loop
ds
sar
lcall
and
into
arpl
jge
aas
lea
xor
in
inc
divl
jnp
ss
jg
lods
cs
test
add
mov
sbbb
dec
add
pushl
adc
pop
into
es
push
cmp
arpl
xor
pop
xchg
imul
repnz
decl
adc
pop
xor
jb
nop
lret
loopne
jae
mov
dec
jg
repz
incl
inc
xor
jmp
je
dec
ret
xchg
adc
dec
inc
inc
cmc
fadd
xlat
fadd
xor
aas
ret
out
pop
enter
bound
out
mov
adc
xor
cli
adc
incl
bound
mov
lcall
xor
insl
cmp
subl
mov
ljmp
add
push
out
inc
add
push
mov
fcomip
das
sub
pop
hlt
pop
loop
pusha
pop
or
mov
adc
xor
jecxz
call
cmpsl
xor
ss
push
int
dec
push
mov
ljmp
pushl
add
idivl
pop
xchg
fildl
clc
popf
fmuls
push
lods
mov
scas
hlt
incl
push
fcomi
mov
and
cmp
inc
and
mov
es
or
add
xor
loop
jp
lret
movsb
insb
xchg
repnz
loope
out
movsb
sub
loop
and
dec
adc
xor
nop
loope
ficoms
add
pop
or
addr16
jl
test
fistps
in
dec
ss
call
in
push
mov
rcrb
gs
add
clc
mov
ja
push
into
inc
lcall
cs
rclb
mov
mov
jne
imul
addr16
lock
dec
fsubrs
outsl
lods
decl
rol
cmp
dec
rorb
clc
mov
and
lahf
stos
jle
dec
loop
xchg
fldenv
fldl
jmp
mov
inc
jb
loopne
add
xor
jle
std
jb
call
out
pop
sub
sub
jg
imul
xor
add
xchg
push
mov
pop
xchg
sub
inc
or
jbe
sti
sbb
leave
movsl
push
shrb
lds
inc
in
nop
neg
std
add
push
rcrb
enter
std
decl
mov
xor
or
push
gs
roll
mov
cmp
leave
movsb
enter
incl
jp
test
sub
adc
ljmp
cli
out
sub
xchg
pop
sbb
stos
mov
mov
gs
mov
inc
pop
gs
ja
pop
adc
jo
sbb
fcomps
repz
cmpsb
mov
getsec
call
xchg
adc
push
and
test
push
cmp
xchg
ret
aas
sqrtps
cmc
and
rclb
xor
adc
mov
sar
daa
das
or
xchg
xchg
aas
adcl
ljmp
lea
and
insl
adc
mov
mov
mov
jns
test
jmp
int3
fs
enter
mov
pushf
imul
ljmp
pop
or
maskmovq
testl
lcall
dec
and
outsb
scas
or
jns
mov
cmp
movsl
inc
xchg
lock
incl
xor
xor
cmc
and
rcr
sbb
decl
stos
fildll
or
ljmp
add
jmp
pop
or
repz
daa
aas
xchg
scas
add
fs
jns
sub
std
xchg
cmpl
inc
scas
add
mov
call
adc
jecxz
int
xor
jge
adc
loop
jb
mov
aas
and
jmp
adc
mov
lods
push
adc
jg
push
aam
stos
nop
push
mov
repnz
rcr
xchg
and
adcb
dec
sbb
dec
shl
or
dec
fists
je
add
inc
out
lock
aam
lock
xchg
sti
rclb
jbe
dec
fnstcw
or
adc
out
int3
sbb
jmp
push
sbb
push
das
cmp
cmc
ljmp
stos
adc
std
clc
mov
pushl
rolb
gs
or
shlb
pop
imul
popa
std
pop
in
cli
jl
dec
mov
sbb
cld
lcall
pop
mov
outsl
adc
pop
call
dec
outsb
mov
and
jmp
shll
mov
jo
scas
rcrl
mov
int
xor
pop
sbb
jmp
jge
sbbb
xchg
das
and
ds
jg
add
into
loop
push
adc
mov
lahf
cmpsb
mov
inc
test
idivb
xorl
push
dec
push
adc
pop
mov
fstl
outsl
fucompp
mov
xchg
decl
adc
jg
jl
jge
data16
pop
cs
pushl
jns
mov
cmp
mov
mov
or
fdivrs
in
xchg
jb
fcomip
decl
mov
or
test
or
xor
pop
stos
xor
ljmp
push
and
or
dec
mov
jno
push
pop
mov
ljmp
add
js
adc
in
repz
pop
and
addl
push
mov
das
push
sahf
mov
xchg
movsb
mov
push
movsb
xchg
mov
repz
cmpsb
lcall
mov
push
stos
hlt
jp
pop
cmpb
loop
mov
dec
psrld
sbb
ja
inc
mov
idivb
adc
lcall
cmp
push
jae
es
push
jne
fistpll
lods
insb
mov
xor
mov
shlb
pop
ret
rclb
mov
shll
aaa
std
push
negb
or
and
mov
aad
adc
push
fldcw
mov
push
mov
sub
scas
dec
jmp
rorb
cli
inc
leave
je
dec
stc
xor
jmp
ljmp
mov
pop
cmp
and
xor
out
in
incb
mov
ljmp
mov
andl
mov
xor
cmp
aad
add
xchg
lret
in
xchg
iret
daa
add
dec
addr16
pop
jb
sarb
sbb
decl
lock
int3
cmp
movsb
rcll
dec
push
cmp
test
jmp
lret
push
cmp
mov
repnz
xor
inc
mov
jle
pop
outsb
cmp
test
xor
pop
fdiv
dec
cltd
sti
cwtl
test
jmp
lret
jmp
push
mov
call
inc
push
into
or
pop
jne
inc
xor
inc
in
or
inc
sub
test
sub
imul
mov
or
push
subb
pushl
mov
cmp
mov
shlb
cmpsl
in
aas
adc
xchg
sbb
jmp
stos
pop
jo
fnsave
cmc
out
stos
daa
ficoms
adc
mov
dec
lret
push
repz
sbb
mov
lcall
gs
and
sbb
push
fcom
fnstsw
push
and
jnp
std
cmpsl
pushf
or
jle
ret
or
cld
les
mov
lcall
js
repz
jecxz
es
xchg
and
mov
cmp
mov
faddl
call
lods
repz
aad
leave
mul
xchg
xor
notl
stc
sub
mov
pop
mov
mov
and
mov
inc
dec
adc
mov
push
lcall
jmp
out
dec
ss
stos
push
lock
sub
push
push
jl
ficomps
cli
xchg
sbb
ss
out
cltd
sub
sti
xchg
mov
adcb
xchg
inc
add
pop
incl
into
scas
loop
inc
bound
cld
jnp
jg
call
cmp
sub
scas
iret
cmp
push
mov
int
nop
push
xchg
cmpsl
jns
mov
pushl
test
mov
push
popa
sub
sarl
outsl
insl
popf
mov
and
test
fisttpll
push
xchg
xchg
add
dec
int3
imulb
push
jg
lea
mov
xor
outsb
testb
jle
hlt
mov
inc
xor
mov
icebp
mov
inc
jno
int3
nop
fdivp
cmp
push
or
cmpsl
sti
idivb
jge
or
and
cmp
jmp
lods
lcall
sbb
pop
lret
add
adc
outsl
mov
cmc
cmp
inc
das
add
xchg
cmp
jne
inc
push
addr16
loopne
mov
rcll
ss
mov
pop
test
xchg
ljmp
sbb
daa
mov
mov
and
insb
int
ljmp
mov
mov
fstps
adc
hlt
dec
pop
cmpsl
arpl
mov
or
incl
cli
test
popf
stc
mov
lcall
xchg
jl
data16
jo
push
sub
and
loope
xchg
pop
adc
mov
jle
pop
pop
push
out
shlb
into
lahf
in
imul
icebp
add
jmp
xor
gs
xchg
aaa
cltd
push
dec
out
mov
fsubrp
sbb
xchg
mov
jmp
daa
outsl
mov
ljmp
mov
jns
jne
pop
frstor
sbb
mov
pushl
inc
lea
mov
and
pushf
mov
test
repz
xor
cld
gs
jp
adc
or
push
cmp
popa
jno
and
jo
dec
lds
aam
jge
mov
mov
out
aas
dec
mov
and
xor
cmp
vpmullw
jg
ret
xchg
enter
hlt
les
out
cmp
xchg
add
adc
add
and
fcom
lcall
and
icebp
xor
jmp
sbb
fcoml
sahf
das
inc
fbld
and
rcrl
pop
andl
jecxz
andl
loop,pt
inc
xchg
mov
jmp
mov
arpl
adc
std
bound
pop
shrb
lcall
test
xor
xor
mov
out
jo
push
pop
push
fstpl
ss
decl
iret
inc
mov
test
mov
fwait
ja
dec
fisubs
test
imul
vcvtdq2ps
inc
push
fsubrl
sub
aas
add
out
into
lods
in
sbb
rcrl
fstpl
or
incl
cld
push
mov
sbb
inc
jb
scas
aas
enter
mov
outsl
xlat
lcall
lcall
xchg
cmp
pop
aaa
testl
mov
adc
enter
mov
ret
repnz
std
int3
mov
inc
scas
cli
popa
xor
and
ljmp
xor
gs
pushl
jl
imul
mov
out
sbbb
xor
lods
cmp
fdecstp
pop
xchg
movsb
push
add
push
shlb
icebp
insl
xor
mov
mov
outsl
ficompl
jmp
das
sbb
mov
inc
in
dec
dec
sti
fdivrs
inc
mov
mov
add
dec
add
or
pop
mov
xlat
mov
inc
add
std
das
rorb
test
xchg
sbb
pop
ss
pushl
fdivrl
push
lea
adcb
push
lret
divl
pop
xchg
jle
mov
xlat
add
fsubrl
sub
jmp
les
adcl
dec
rolb
lret
inc
jl
inc
pop
mov
loope
jns
jb
sub
lret
stos
rcll
xchg
add
sub
sbb
icebp
jg
daa
rcrb
mov
mov
mov
pop
outsb
jg
inc
jbe
and
xor
fs
push
xlat
mov
add
lods
pop
cmpsl
outsb
sbb
into
popa
inc
sub
imul
dec
test
decl
jae
push
lods
jp
sub
and
jmp
pop
sarb
cmpsb
add
pushl
pop
sar
mov
mov
cmpsb
in
aad
xor
mov
sub
jg
je
aaa
sub
or
ds
add
aas
call
ret
addr16
out
enter
fisubrs
sub
cmp
bound
gs
mov
or
lds
jbe
fldenv
fcomip
jnp
fcompl
sub
cmc
push
add
inc
and
insl
fcomip
or
xor
incl
jmp
push
in
data16
mov
sbb
sahf
out
sbb
push
jg
pushl
mov
or
test
out
fld
add
lcall
jle
loopne
movb
pop
fsubrs
or
fistpll
daa
inc
fwait
push
pushw
or
out
das
lea
mov
test
fnstenv
xchg
mov
repz
jmp
cmc
cli
rcrl
sar
or
cmc
movsl
movl
repz
dec
loope
orb
pop
ljmp
inc
pushf
test
cld
jns
mov
shl
inc
xor
pop
outsb
fistpll
ret
pop
std
decl
fisubrs
dec
dec
push
rcll
adc
xchg
lret
in
jp
xor
es
popa
lods
les
hlt
inc
lds
outsl
stos
jle
and
incl
mov
adc
dec
adc
addr16
call
sahf
jge
mov
cmp
in
pop
xlat
xchg
adcl
es
clc
shll
pushl
int
sub
pusha
xlat
adc
mov
cmp
push
shrb
push
mov
and
ret
decl
pop
dec
lods
xlat
and
add
loopne
dec
inc
mov
inc
sub
cmpb
push
pop
loope
jg
ljmp
cltd
test
and
cmp
repz
ljmp
ljmp
push
jae
jo
aaa
sbb
shlb
ret
sub
mov
clc
ljmp
and
pop
pop
lds
dec
shl
cmc
sarl
lds
ljmp
into
out
mov
push
fdivp
jle
adc
cmp
mov
mov
push
mov
add
push
dec
iret
push
in
adc
std
mov
mov
xor
fstl
inc
xchg
outsl
inc
push
aas
dec
mov
rorb
pushl
aad
bound
cmp
lods
pusha
loop
jb
scas
mov
mov
stos
jg
push
xchg
bound
lret
lret
cmp
int3
inc
adc
pusha
push
call
lcall
xchg
sub
enter
add
shld
fcoml
inc
inc
loope
fsubl
mov
dec
ljmp
jo
sti
adc
sti
out
dec
adc
push
sbb
mov
push
cmp
cwtl
inc
hlt
fists
push
pop
add
and
xor
fdivr
jmp
cli
or
fidivl
scas
inc
xor
mov
mov
dec
call
jmp
ljmp
ds
cmc
jl
inc
mov
push
push
and
lcall
pop
cmpsl
std
jge
jle
call
cli
lds
call
mov
and
sti
insl
push
out
or
cld
rclb
fwait
mov
das
fstpt
sub
lcall
aas
xchg
lret
js
fistps
adc
test
shlb
inc
cmpsl
add
mov
ror
inc
cmp
call
xor
inc
pusha
fildll
flds
std
xor
mov
add
mov
ljmp
stos
push
fidivs
aaa
int
add
imul
sarb
cmp
cltd
push
popf
dec
movsb
mov
jno
adc
adc
stos
sub
inc
add
aad
incl
data16
mov
xchg
test
jo
bound
xchg
and
loope
add
jns
cli
mov
int
or
rcl
cmp
xchg
loope
push
xor
fildll
mov
fldpi
sub
xchg
gs
and
jmp
ljmp
mov
and
mov
sub
inc
ljmp
mov
xor
pop
inc
aaa
mov
call
or
stos
jecxz
adc
addr16
lock
dec
popa
lret
fisttpll
fcompl
xor
mov
leave
jg
sbb
cs
xchg
mov
push
push
jp
stc
cli
mov
in
repz
mov
xor
inc
sub
or
add
push
mov
mulb
call
movsl
rcrl
stos
sub
mov
sbb
lds
jmp
pop
ljmp
inc
push
outsl
imul
mov
repz
adc
xor
sbb
mov
add
in
and
or
push
xor
sarb
dec
push
mov
and
jg
xchg
push
bound
data16
jle
pop
sbb
add
pop
fisttps
push
jg
xorb
daa
inc
jb
xchg
das
aad
cmp
sbbb
mov
push
cmp
xor
jmp
push
push
xor
rcrb
pop
in
push
rorb
ljmp
sub
push
leave
call
sar
jbe
mov
fsubrs
cld
jl
lret
inc
sbb
or
lahf
adc
adc
push
rcrl
aas
sbb
or
push
pop
std
in
mov
test
or
imul
dec
sub
xor
dec
in
mov
inc
mov
lods
movsl
jb
push
cmpsl
jp
lcall
push
pop
movsl
sub
sub
jne
dec
mov
aaa
mov
push
sbb
pop
std
popf
jl
cld
dec
out
pop
aaa
lods
out
dec
arpl
imul
dec
rcll
sarl
int3
cmp
pop
push
pop
pushl
hlt
and
inc
sbb
mov
fsubs
jnp
mov
pop
jmp
sub
mov
rcll
outsl
decl
fiaddl
mov
int3
inc
mov
mov
lret
lcall
in
mov
push
stos
cli
ljmp
sub
push
push
jge
pop
sbb
in
in
ljmp
push
int3
cld
xchg
and
outsb
dec
jge
pop
call
push
mov
imulb
xor
ljmp
push
mov
inc
stc
sub
mov
cltd
sbb
lret
jg
add
lcall
out
dec
dec
lahf
push
pop
xchg
xchg
insl
ljmp
xchg
insb
stc
jnp
insb
jae
xor
hlt
xor
cli
test
add
add
mov
cwtl
add
decl
mov
incl
stos
push
outsb
push
push
imul
dec
pop
or
fs
rol
loop
std
or
in
shlb
or
cmpsl
lret
cwtl
call
loope
dec
insb
int
mov
ljmp
mov
inc
mov
mov
mov
xchg
lods
add
pop
ret
mov
ret
out
fdivp
or
movaps
mov
fmuls
xor
push
pushl
movd
cmpsb
cmp
inc
les
sub
mov
fbld
lret
and
lcall
and
fisttpll
int3
cli
inc
mov
jg
lods
pop
mov
mov
lcall
inc
mov
into
out
lods
fdivl
xchg
or
imul
ret
lcall
mov
xor
mov
test
pushf
out
sbb
pushf
dec
mov
ljmp
in
dec
mov
adc
movsl
arpl
stos
aaa
rcl
cmpsb
jae
incl
lcall
pop
ret
mov
pop
sahf
imul
xor
test
lds
mov
lcall
push
xchg
ret
imul
aam
subl
loop
nop
insl
popf
mov
repz
decl
cmc
stos
idivl
xor
pop
hlt
idivl
mov
cmc
mov
lcall
mov
stc
sub
test
xlat
add
xchg
push
mov
lret
jge
cmp
push
xchg
sbb
push
push
je
cmp
std
outsb
jmp
cmp
jp
xor
loop
pop
fistps
sub
incl
cmp
outsb
out
inc
pop
xchg
addr16
mov
cmp
jge
imul
es
add
jmp
dec
mov
jne
jle
adc
adc
xchg
imul
push
imul
lcall
mov
jne
sbbb
test
mov
cli
dec
and
dec
add
ljmp
dec
pop
mov
mov
hlt
ret
shrd
pop
popa
xlat
dec
sub
mov
cli
mov
pushl
sarb
or
sti
sbb
stos
scas
shrl
in
jns
inc
addr16
mov
scas
clc
dec
dec
mov
dec
mov
ljmp
call
rcrb
ss
incl
cmc
jmp
sub
outsb
fbld
lock
sahf
sbb
jmp
nop
dec
mov
xor
dec
dec
repz
jmp
push
xor
mov
lcall
sbb
push
or
js
scas
into
inc
xchg
inc
out
cltd
push
outsb
outsb
sbb
or
lret
cwtl
enter
pushl
sbb
jo
pop
cmp
pop
cmp
mov
pop
and
sub
decl
xchg
and
stos
xor
mov
xchg
ss
add
cmp
test
ds
out
cmp
mov
xorb
es
insl
roll
or
xchg
jnp
mov
pop
cmp
jg
mov
or
dec
xor
mov
push
mov
hlt
cmp
ljmp
lds
decl
lahf
inc
inc
std
mov
loop
call
or
push
add
sub
fdivr
add
imul
lea
scas
jb
int3
mov
data16
pop
push
ret
test
cmp
fadds
cmp
out
inc
ret
jg
fiadds
pop
sarb
jg
sbb
data16
adc
loopne
loope
addr16
fisttpll
mov
push
sbb
sbb
pop
mov
std
nop
xchg
jecxz
decl
loop
push
jmp
jb
and
ja
jg
push
aad
pusha
inc
sub
out
shlb
xor
mov
push
fisttps
ljmp
idivb
cwtl
out
fcompl
icebp
movsb
or
call
into
push
push
loope
mov
decl
sbb
out
cmp
mov
sbb
outsb
xchg
out
pop
push
adc
ret
cli
stc
push
dec
sub
pop
js
fisubl
cmp
or
jle
dec
inc
rorl
clc
xchg
fucomip
jle
sbb
mov
lock
pop
or
mov
jl
inc
ja
mov
cmp
sbb
movsl
data16
inc
fwait
xchg
subl
sub
cmp
call
sahf
xchg
xchg
xor
inc
sub
or
enter
mov
pop
stc
adc
ljmp
outsl
sub
or
imul
sbb
push
fidivl
inc
adc
lock
incl
xchg
sbb
mov
movsl
dec
stc
cltd
xlat
or
adc
lcall
pop
lcall
mov
lret
out
int3
jecxz
xchg
in
testl
sub
jne
movsb
imul
dec
arpl
pushl
xchg
pop
or
bound
inc
outsb
ficompl
fldt
xchg
and
sbbb
fwait
hlt
mov
jl
pop
hlt
bound
cwtl
push
jge
cs
and
loope
and
cmp
dec
and
mov
fnstenv
jg
sub
adc
aam
outsl
push
adc
mov
test
les
jmp
dec
lds
mov
sbb
dec
shll
and
sub
sbb
decl
add
imul
ret
add
xchg
push
iret
xor
jae
sub
call
mov
mov
in
push
mov
adc
movsl
repz
mov
add
or
xchg
out
rcrl
ljmp
das
push
in
ss
add
jl
andl
leave
cmpsb
mov
sti
fs
or
leave
xor
call
test
cmpb
xor
jecxz
sahf
movsb
jmp
inc
notl
cmp
test
ret
arpl
jl
in
dec
ffreep
push
int
xor
add
add
cmc
repnz
shr
lcall
cmpsl
imul
mov
out
pushf
fcoml
fs
mov
call
lcall
cmp
cmp
xchg
pop
add
mov
cltd
stos
insl
in
ja
lods
xchg
jmp
cmpsl
and
outsl
dec
loopne
jle
cli
js
test
push
pop
or
mov
fsubl
and
dec
push
sbb
mov
jg
sbb
add
lcall
jb
and
in
cmc
popf
dec
cli
xchg
mov
ljmp
or
mov
xor
call
sahf
mov
push
add
sti
daa
cmp
sbb
jecxz
and
test
dec
pop
mov
sti
and
mov
scas
add
popa
mov
and
sub
je
ret
sub
ljmp
cli
sbb
jae
sub
test
xchg
dec
inc
fisubrl
lcall
jl
fstpt
xchg
push
sbb
add
mov
pop
adc
xchg
subb
push
and
push
in
cmp
jns
mov
or
cmpsb
ljmp
incl
repz
repnz
jg
rorb
inc
pop
dec
pop
inc
inc
lcall
pop
bound
pop
loopne
call
xchg
std
jle
and
daa
jecxz
inc
gs
or
imul
lods
xchg
ljmp
inc
aad
lods
outsb
stc
cmp
jnp
and
or
arpl
aad
push
lcall
and
add
leave
pop
loopne
les
lods
and
mov
sub
shrb
lds
mov
add
xchg
shlb
mov
jo
out
add
mov
xchg
shlb
loope
inc
push
sbb
mov
sar
incl
jns
scas
xor
test
test
adc
inc
decl
and
movsb
mov
fnstenv
add
or
add
adc
fdivs
popf
xor
add
rcr
and
stos
sarb
ror
cmc
scas
lods
andl
jmp
repnz
pop
mov
sbb
mov
aam
lcall
pop
ljmp
scas
inc
daa
mov
ja
fldt
call
pop
ss
push
sub
pop
adc
repz
jp
ds
pushl
pop
daa
xor
je
sbb
inc
jo
dec
sub
cmp
dec
lods
mov
inc
and
call
and
loop
int3
pop
test
push
dec
cmpsl
call
in
push
lods
addb
out
clc
call
dec
xorl
push
mov
and
cmp
inc
orl
inc
es
jg
mov
imul
pop
xchg
mov
jle
aaa
pop
mov
lcall
lds
leave
xchg
push
in
cltd
sbb
out
clc
jge
test
repz
jo
mov
xor
jmp
cmp
popf
ljmp
jle
popa
sub
lcall
cmpsl
sub
call
push
inc
pop
insb
mov
push
arpl
or
xchg
cld
mov
mov
arpl
lock
cld
ljmp
inc
pop
sub
xor
pop
test
sarb
lret
xor
mov
mov
cltd
cld
sbb
scas
stc
pop
inc
inc
jnp
sub
inc
out
or
jmp
cmp
cli
or
mov
push
xchg
jbe
mov
jmp
adcb
in
subl
jb
mov
or
loope
clc
mov
call
rcr
cmc
incl
out
mov
inc
cmp
aam
pushf
frstor
int
loop
pushl
mov
dec
cmpsl
pop
fsubrs
ljmp
shrb
shlb
jp
fdivp
call
cmp
mov
and
jo
outsl
push
push
dec
call
leave
bndldx
inc
stos
mov
stos
mov
cmp
dec
mov
fcmovne
mov
test
jmp
in
leave
push
mov
fisubs
lea
and
nop
mov
mov
jno
fldt
or
sbb
int3
xchg
loop
sbb
dec
jmp
or
jns
in
jmp
cld
jg
js
ret
inc
mov
push
sahf
je
mov
inc
cmpsb
out
mov
inc
ja
out
xor
inc
aas
int
lret
imul
insb
test
inc
cmpsb
jmp
push
mov
and
shlb
mov
and
aad
mov
pop
xor
data16
incl
xchg
dec
adc
aaa
push
xchg
adc
push
ja
fst
loope
sbb
push
xchg
incl
lcall
mov
add
aaa
adc
pmuludq
and
in
push
push
ja
xchg
in
pushl
mov
arpl
pusha
les
or
imul
mov
call
mov
mov
adcl
pop
mov
push
lds
dec
lea
fistps
int3
outsb
cli
push
je
pop
mov
and
xchg
dec
inc
cltd
sahf
jno
ja
mov
push
xor
lahf
sarl
dec
shll
repnz
pop
fbld
dec
push
sub
sbb
sbb
lcall
outsl
imul
cltd
mov
mov
dec
into
hlt
out
push
imul
cmp
lcall
sbb
stc
js
mov
aas
test
aad
andb
jmp
mov
dec
adc
call
rclb
mov
push
mov
and
xchg
jecxz
sbb
sub
scas
out
xchg
push
sbb
sbb
mov
loope
sub
aas
mov
orl
daa
shr
jg
mov
push
mov
xchg
rol
and
jl
fstl
push
int3
sub
call
decb
mov
and
dec
in
and
clc
push
cld
adc
add
lock
das
lret
pop
mov
cltd
pushl
push
push
cmc
cmp
ja
jmp
test
fidivl
rclb
mov
cmp
mov
enter
pop
adcb
jnp
pop
jne
cmpsb
jge
add
vpmacsdqh
lcall
xchg
push
std
orb
push
mov
xchg
inc
dec
ret
lea
aad
jg
xchg
test
and
pop
jecxz
sbb
jo
je
xor
bound
pop
call
lea
dec
inc
jnp
icebp
and
jmp
mov
mov
push
pop
cmp
cmpsb
incl
and
sbb
pop
adc
lret
imul
jmp
dec
stc
add
roll
xor
xchg
stos
repnz
sbb
inc
jo
mov
xor
leave
xlat
lcall
in
popf
xchg
jp
mov
leave
xchg
das
dec
adc
xchg
xor
iret
pusha
jecxz
jl
mov
xchg
lret
add
or
sub
mov
push
jg
incl
shll
dec
jnp
mov
out
into
in
sub
mov
decl
lods
jle
push
mov
mov
cwtl
icebp
pop
aam
xor
jne
pushl
movsl
jp
jg
test
inc
gs
sbb
jmp
push
aaa
xor
cli
xchg
adc
xor
or
push
test
cli
or
lock
incl
shl
pop
je
jnp
jno
lock
jb
daa
outsb
pop
adc
scas
test
jae
decl
sbb
push
mov
lahf
add
xchg
mov
push
pop
shrb
imul
addr16
insl
jne
lcall
cmp
push
cltd
and
repz
movl
loopne
stos
test
ljmp
cmpl
enter
cs
xor
js
sti
lcall
or
inc
inc
inc
js
lods
pop
dec
dec
loope
jo
daa
inc
mov
pop
push
in
inc
fwait
mov
in
sub
pop
call
movsb
je
aaa
push
jno
adc
push
push
cmp
test
xorl
pushl
ds
mov
sbb
jb
movsl
icebp
dec
adc
testb
stos
repz
sbb
icebp
push
clc
ja
mov
xor
sbb
call
add
imulb
push
fsts
fisttpl
in
push
in
les
push
jle
ljmp
mov
fnstcw
jge
lock
dec
add
in
shll
lea
pop
movsb
sub
ds
cmp
rcrl
test
scas
sub
fldenv
mov
cmc
adc
enter
js
mov
out
cli
cld
mov
mov
xor
lds
ljmp
sbb
shlb
orl
push
push
js
cmp
push
jae
pushl
rcll
das
ficompl
pop
out
mov
sub
insl
fwait
enter
stos
fwait
pop
and
add
lcall
rcll
das
dec
int3
cmp
fs
cmp
pusha
pop
sub
sbb
clc
decl
and
cmc
pop
jo
lcall
inc
repz
aam
incl
mov
rol
dec
xchg
out
loop
ret
sti
jae
not
mov
cld
pop
ret
jecxz
adc
or
adc
sub
aas
xchg
add
ljmp
ljmp
mov
pop
jecxz
adc
punpcklwd
and
jmp
ret
xchg
std
mov
movsb
jae
jmp
pop
nop
cmp
imul
dec
inc
jecxz
shrl
pushl
push
sahf
or
xchg
push
adc
insb
popf
jno
scas
jg
jns
sti
leave
daa
es
pop
pushf
ss
jp
cwtl
and
orb
mov
aad
or
adc
xchg
mov
jmp
inc
cmp
hlt
mov
movsb
in
xor
loope
bound
ja
jg
loop
iret
xor
push
hlt
jp
andb
les
and
inc
out
lret
mov
movsb
mov
jno
inc
data16
js
adc
sub
and
out
fsubl
je
mov
in
cltd
lret
cmp
dec
xchg
in
mov
test
bswap
xor
call
adc
and
inc
and
cmp
lds
dec
add
mov
lcall
xor
cwtl
push
xor
out
mov
sub
push
pop
int
icebp
cmp
incl
lahf
jbe
push
sbb
nop
cmp
in
es
andb
movsb
jmp
clc
mov
xchg
iret
stc
lret
int3
mov
mov
or
pop
test
stos
nop
lock
pushl
xchg
xor
imul
ret
inc
loope
mov
push
jbe
cmp
adc
mov
pop
decl
arpl
std
jge
jp
mov
decl
decb
icebp
sbb
mov
or
push
xor
mov
push
neg
decb
pop
jae
fcomip
jmp
mov
push
cmp
out
xor
and
pop
rol
mov
call
je
push
repnz
push
sub
fsubr
mov
sar
ljmp
repz
xchg
pusha
push
mov
loop
pusha
or
clc
xchg
enter
decl
inc
xor
pop
sahf
je
pop
ja
mov
pusha
scas
sub
jg
leave
mov
sbb
cmpl
pop
lcall
dec
inc
mov
sbb
cmp
mov
shr
je
rolb
hlt
decl
fwait
cwtl
inc
stc
pop
xchg
repz
data16
dec
cltd
daa
lret
inc
leave
jmp
decl
sbb
pusha
jae
fimull
loop
pusha
cmpsl
aaa
iret
pop
dec
mov
or
insb
adc
adc
mov
sbb
inc
psrad
xchg
movsb
add
push
sar
jl
mov
lret
add
or
and
ror
bound
mov
mul
ljmp
mov
lret
pop
pop
pop
xor
cmp
mov
bnd
into
sub
mov
xchg
jg
roll
insl
add
std
cmpsb
jmp
fmuls
add
int
data16
incl
and
dec
cli
ja
inc
aaa
cmp
xchg
push
rolb
ret
inc
sbb
data16
stc
out
cld
mov
lds
test
pop
xlat
test
pop
loop
leave
cs
sar
incl
sub
cmp
ds
xor
bound
lret
icebp
mov
jp
xchg
out
and
ljmp
aad
insl
js
adc
sub
or
decl
popa
pop
mov
mov
adc
lods
in
jp
dec
push
xchg
loope
in
lret
push
std
lcall
test
dec
jmp
aaa
mov
aaa
mov
mov
mov
xor
mov
adc
mov
out
cmp
sub
imul
les
cmp
dec
dec
inc
cltd
add
dec
data16
lret
add
inc
ljmp
xchg
xor
call
movsb
fsubs
adc
inc
push
fsubrl
sbb
enter
mov
outsl
imul
ljmp
sub
jle
shr
dec
xor
or
sub
fnstenv
or
sahf
mov
and
test
or
jae
in
pop
xor
cmpsl
out
stos
push
inc
into
out
jg
jle
jns
jnp
movsb
inc
mov
pushf
jbe
dec
inc
mov
call
or
sub
or
daa
ret
add
cmp
xchg
xchg
dec
out
dec
push
push
push
mov
mov
mov
xor
add
xor
sub
sbb
call
in
cmp
sbb
xor
mov
sub
aad
mov
in
scas
push
enterw
push
inc
or
pop
scas
xor
aaa
cld
pushl
add
sbb
mov
add
out
shl
xor
jg
je
mov
pushf
int
std
outsl
or
jmp
arpl
call
and
movsb
mov
dec
jnp
ljmp
fisubl
shlb
shlb
ljmp
pushf
push
dec
pusha
fsubrl
jns
gs
lcall
mov
addr16
fistpl
pushl
cld
ficompl
adc
pop
lock
xor
sbb
lods
scas
ret
sbb
pop
movsl
mov
fisttpll
inc
int
daa
cld
cmp
push
cwtl
sub
orl
pop
clc
xor
xor
popa
aas
pop
repnz
rclb
loop
clc
fsubl
cs
and
call
in
fcomps
dec
fxch
mov
sbb
add
sub
xchg
in
imull
fisttps
xchg
or
repnz
lret
and
test
in
push
jae
shrb
jmp
xchg
mov
imul
nop
xchg
jae
ret
cmp
dec
jge
imul
mov
in
mov
cmp
xor
sub
cmp
ss
cmp
add
ficomps
decl
out
in
mov
sub
jmp
jno
cmp
mov
push
jg
fistps
inc
cltd
add
mov
adc
push
frstor
sbb
call
ljmp
sbb
ret
jge
ja
cmpsl
icebp
test
ja
mov
cld
push
mov
mov
test
or
mov
test
mov
sub
shll
leave
inc
out
scas
clc
decl
xor
and
fidivrs
outsl
jp
pop
leave
popa
and
lcall
pop
lods
loopne
push
std
in
fldt
bound
mov
int3
dec
nop
out
pop
sub
xchg
ss
and
incl
cs
mov
cmpsl
push
shrl
mov
sub
cmp
sbb
test
sbb
lret
jae
jbe
cld
call
loop
push
pop
xchg
sarb
dec
lea
and
push
xor
inc
das
clc
jmp
xor
adc
mov
xor
xchg
cli
repnz
das
clc
lcall
pushf
testb
ljmp
mov
ja
mov
stos
adc
out
lods
sub
loopne
sahf
add
inc
aam
inc
push
push
push
mov
sub
les
fildll
jp
in
or
sub
aaa
pop
test
push
test
call
repz
je
test
fsts
andb
mov
out
mov
call
cmp
stos
mov
jae
push
push
inc
negb
mov
into
test
call
mov
aad
xchg
jnp
ja
cmpsb
hlt
scas
xchg
cmp
pop
icebp
lcall
cs
or
sub
repz
sub
and
dec
sbb
cld
aam
mov
and
mov
in
lret
lcall
cmc
cli
xor
ret
aaa
ret
inc
fimull
sbb
push
call
xchg
je
lret
mov
les
mov
cltd
ja
sti
inc
add
push
push
jmp
jecxz
mov
rcrl
adc
cmpsl
pop
push
push
out
inc
imul
mov
jmp
jne
push
ljmp
sbb
ftst
fisttpl
xchg
sahf
pop
hlt
push
mov
repnz
sub
and
decl
mov
and
sbb
test
lods
scas
in
mov
daa
aas
repz
cs
decl
fucomi
test
dec
stos
fwait
es
mov
xor
xchg
mov
mov
xchg
cmp
fdivrp
incl
jo
flds
and
nop
pop
cli
sub
mov
pop
add
loope
incl
movsl
or
mov
data16
lcall
push
lods
inc
jle
mov
test
lret
aam
cltd
adc
jl
mov
mov
xchg
sbb
pushf
iret
cmc
das
clc
sbb
aam
pop
sbb
pop
movsb
rcll
scas
lahf
push
call
es
xchg
dec
pop
aaa
dec
jmp
mov
mov
push
mov
and
ficoms
pop
roll
inc
outsl
pop
cld
sti
scas
ficoml
insl
pop
inc
mov
or
mov
rorl
mov
loop
fiadds
dec
rcrb
push
jae
mov
push
hlt
mov
hlt
arpl
mov
sub
inc
and
jne
incl
cmp
sbb
imul
stc
add
lea
xchg
cmpsb
call
mov
xor
jmp
decl
or
insb
cmp
xchg
out
xchg
test
push
xor
push
push
and
decl
fistpll
mov
push
dec
popf
inc
adc
jg
call
and
jno
ficomps
hlt
jmp
xchg
clc
leave
xchg
stos
faddl
dec
cltd
faddl
xchg
push
fwait
repz
cmpsl
sub
popa
inc
ljmp
adc
lcall
mov
das
xchg
aam
ljmpw
xor
andl
int3
fistpll
decl
xor
sub
mov
inc
sub
cmp
jmp
push
or
or
sub
fs
pop
insl
or
insl
sub
add
pop
and
in
call
pop
dec
mov
add
test
dec
clc
test
push
outsb
int3
lret
call
xchg
stos
int
cld
pop
loop
xchg
mov
push
inc
dec
fsts
mov
icebp
decl
fnstsw
aaa
das
lods
sub
cmp
pop
push
push
sbb
jne
push
xchg
jge
cld
pop
hlt
ljmp
push
movsl
push
adcb
cmp
pop
cmp
sbb
cltd
mov
fwait
push
fcmovu
mov
cs
mov
ja
mov
fcomip
lahf
fs
xchg
mov
jo
orb
fs
insb
mov
repz
incl
push
push
inc
push
vmovdqu
pushl
ret
fmulp
stos
popf
push
test
aad
das
cmc
out
jbe
xor
or
call
push
mov
out
push
aad
rcll
enter
pop
adc
das
and
testb
cmpsl
fbld
jmp
dec
jle
jle
lcall
mov
sub
mov
sahf
jp
cmp
pop
cli
movsb
mov
out
pop
mov
arpl
sbb
sub
add
push
scas
dec
mov
or
jg
dec
in
mov
sbb
mov
and
cld
jnp
pop
sbb
pushl
xor
pop
data16
fsubp
lods
movsl
lret
test
ficoms
dec
mov
jl
scas
add
stos
push
inc
xor
call
cmp
sbb
pop
packsswb
decl
dec
iret
add
or
cltd
pop
vucomisd
movsl
jp
dec
bnd
mov
call
jne
aas
mov
out
pop
inc
js
pop
cmp
fistl
mov
pop
iret
pop
repnz
fadd
test
dec
lret
xor
cmp
pop
aad
mov
out
inc
out
dec
push
jne
sti
push
pushl
std
cmp
popa
xlat
jg
push
pop
jne
dec
inc
sbb
enter
fwait
jmp
push
arpl
sub
pusha
push
push
mov
test
sbb
push
pop
inc
lret
jp
jno
xchg
lock
push
mov
jecxz
es
jae
daa
dec
add
or
mov
mov
fstps
push
dec
push
int3
or
rolb
xchg
inc
ficoms
decl
rorl
xor
mulb
adc
mov
mov
sbb
imul
pushl
jmp
test
sbb
movsl
mov
ret
sub
in
mov
bnd
cmpsb
push
sar
in
in
pop
sub
cmp
mov
test
in
clc
lcall
aad
popa
cmp
aad
adc
add
out
notl
jns
mov
call
std
andb
rcll
mov
mov
out
scas
mov
fists
dec
fidivl
jmp
xchg
cmc
out
cmp
hlt
jp
xor
das
repz
mov
inc
jmp
jb
movsl
pop
pop
push
out
adc
sbb
fisubrs
mov
inc
pop
cmp
mov
into
mov
imul
stc
lret
jge
xor
mov
lcall
pop
mov
sub
adc
sbbl
or
xchg
jns
adc
jg
decl
mov
mov
pushf
shr
sahf
sub
mov
push
decl
repnz
jmp
mov
xchg
inc
xor
jl
cmpsl
cmc
inc
xchg
test
sti
lock
stc
leave
cltd
and
cld
mov
mov
hlt
lods
jns
inc
jno
inc
push
lcall
jg
ret
add
cmpsb
xchg
push
or
lahf
mov
push
cmp
cmpsl
xor
cmp
decl
cld
sbb
adc
dec
xor
cmp
lds
fildl
mov
push
xchg
hlt
mov
mov
push
call
dec
in
out
rolb
pop
int3
loope
std
call
cwtl
fxam
lret
push
mov
jbe
or
repnz
clc
xchg
pop
in
mov
movsl
aaa
popf
xlat
mov
call
pop
sub
dec
imul
cmp
ret
cmp
or
decl
mov
push
mov
enter
add
push
pop
roll
lcall
cmp
subb
jb
jae
pop
xor
pushf
xor
cld
or
lahf
push
fistpl
lret
jmp
pop
inc
xor
add
mov
dec
decl
insl
xlat
dec
lods
pop
aam
pusha
imul
fwait
dec
test
incl
cmp
rolb
insb
sbb
rorb
jno
push
push
xchg
xchg
out
sar
imul
cmp
scas
lea
ret
mov
inc
int
push
xchg
gs
adc
incl
fld
out
je
mov
jo
and
mov
inc
jnp
pop
add
mov
ljmp
push
mov
mov
lcall
dec
mov
lcall
sub
cmpsb
hlt
or
out
sbb
xchg
insl
sbb
hlt
push
mov
push
arpl
xor
xchg
cwtl
enter
sub
sub
movsb
push
mov
jmp
and
fs
mov
andb
stc
and
cmc
adc
sub
sbb
or
stos
inc
jecxz
cmp
push
xchg
dec
and
jle
xchg
jnp
mov
inc
testl
sbb
or
sub
gs
aam
lock
jmp
cmp
mov
pop
pop
int3
insb
jle
xor
incl
sub
scas
and
push
add
mov
and
cmpsl
push
out
mov
jmp
xor
out
movsl
cmpl
adc
xlat
jae
add
dec
cmp
call
jno
jnp
jno
fsubrs
push
js
mov
pop
jbe
dec
xchg
fdivrl
pop
clc
lcall
fdiv
xor
push
inc
mov
push
iret
loop
xchg
add
pop
cmp
je
call
sbb
lret
inc
loopne
aas
fmuls
xor
aaa
lret
shll
dec
call
mov
fdivrs
pop
push
bound
test
ret
dec
fcmovbe
fs
fildl
dec
mov
je
jle
in
mov
imul
fisubs
inc
sbb
mov
shlb
cmpsb
pop
lcall
call
mov
and
ret
sub
adc
and
out
and
jg
call
and
and
cmp
das
pushf
fiaddl
call
mov
loopne
in
push
dec
insl
mov
stos
daa
sti
jno
notl
dec
out
pushl
fcoms
mov
xchg
jge
insl
jae
mov
mov
push
stos
clc
mov
push
mov
jg
repnz
outsb
test
add
dec
fisttpl
or
mov
mov
into
aas
mov
jne
xchg
call
int3
xor
fcmovu
push
sub
pop
imul
jecxz
call
clc
sub
mov
xor
push
imul
pop
adc
cmp
aad
push
cmp
std
loopne
sub
and
jno
push
or
inc
lock
cld
stc
mov
outsb
xchg
lret
jb
sub
mov
stc
and
xchg
cmp
fnstcw
push
lcall
sub
push
das
add
mov
lahf
jge
rcll
hlt
lea
sbb
decl
mov
das
clc
mov
mov
test
mov
and
mov
mov
test
cld
call
test
or
push
scas
jb
ss
pop
jle
bound
int3
call
repnz
outsb
mov
fcomp
lcall
mov
pop
and
push
cmp
sub
sti
cld
add
jmp
push
jb
push
add
mov
jmp
outsl
cmp
or
out
filds
sbb
dec
cmp
jg
lods
lds
dec
imul
lods
dec
out
mov
sub
fstpt
lock
pop
and
inc
pop
xor
aaa
inc
or
ljmp
sbb
inc
insl
mov
jo
and
or
mov
std
jecxz
xor
aaa
adc
add
rcll
lret
cli
add
push
out
lcall
sub
dec
aas
xor
iret
and
and
movsb
repz
fs
frstor
popf
sub
aam
data16
adc
lcall
mov
aad
xor
pop
rorl
push
or
dec
into
out
leave
jl
cmpl
loop
cltd
lcall
mov
dec
je
sbb
sub
out
mov
sahf
jmp
fistl
in
mov
mov
and
push
lea
mov
and
ja
imul
sbb
das
lea
inc
std
daa
and
out
clc
int3
push
sub
jbe
push
ds
mov
add
and
decl
mov
add
sbb
jp
bnd
dec
lods
add
mov
push
call
hlt
lcall
mov
cmp
lcall
dec
icebp
cmpsb
negl
jmp
xchg
in
aas
add
adc
lea
in
movsb
mov
popa
out
cmp
insb
mov
inc
pop
and
out
dec
int3
jp
loope
cmp
call
or
scas
les
inc
loop
jge
sbbl
lcall
pop
lock
fxtract
movsl
adc
lret
push
add
or
es
dec
cltd
adc
pushl
or
int3
push
jge
jge
js
inc
andl
jb
add
mov
ljmp
shlb
xorl
clc
adc
jbe
jnp
fs
addr16
repnz
call
mov
cwtl
int
dec
push
xchg
sbb
jge
into
lcall
outsl
into
movb
aad
sbbl
cs
fcomps
je
popf
in
neg
sti
mov
lcall
cli
xchg
pop
sub
clc
add
stos
pop
ret
jl
sti
dec
mov
das
subb
fistl
decl
mov
out
ret
cld
rorb
dec
insb
jecxz
outsb
into
lock
cmp
lods
mov
sub
and
faddl
jle
or
pop
cmp
and
stos
lock
inc
fistps
lods
stos
in
call
rorb
dec
dec
mov
daa
add
pushl
ljmp
inc
fadds
sub
jmp
sub
pop
jns
test
cmc
ljmp
push
aas
movsl
int3
or
cwtl
pushf
mov
ret
je
aad
or
ljmp
mov
inc
cli
pop
adcb
popa
into
pop
ljmp
dec
xor
xchg
insl
lock
cmpsb
lds
xchg
mov
xor
mov
jg
dec
mov
popf
fucomi
mov
in
and
inc
clc
push
jno
fists
sub
xor
dec
mov
std
sbb
push
fsts
lock
cmc
xchg
dec
xchg
cmp
insb
stos
and
xchg
ljmp
cli
jmp
in
loope
push
or
inc
sahf
xor
mov
and
int
and
cmp
add
pop
push
movsl
inc
lods
push
jge
push
js
and
sub
xlat
call
loopne
and
ss
fwait
lds
sbb
jg
pop
mov
das
fadds
daa
bnd
mov
xorb
push
jb
mov
sub
jae
movsb
jl
cwtl
pushf
inc
cmp
jmp
sbb
cld
int3
sub
sub
dec
fnsave
sti
sbb
jl
push
push
cmp
jo
clc
rorl
xlat
out
int3
clc
outsl
jg
aam
inc
fst
jmp
incl
xor
and
sti
adc
and
sub
push
neg
sbb
lcall
call
repnz
or
pop
adc
mov
data16
mov
js
ret
lods
lcall
fisubrl
or
and
hlt
xchg
in
and
adc
dec
aaa
pop
xor
xchg
jmp
xlat
push
and
xchg
lock
fld
dec
xor
mov
shl
mov
mov
addr16
mov
fdivrl
aad
or
bound
fs
jmp
arpl
inc
movsb
xor
mov
inc
mov
xchg
arpl
xchg
mov
lods
pop
or
test
into
and
dec
pusha
fwait
mov
add
cwtl
fistpl
lcall
in
pusha
ljmp
pushf
jae
and
xchg
cmp
test
and
nop
or
inc
dec
xchg
stc
test
inc
xchg
dec
push
incb
dec
xor
popa
popf
popa
sbb
in
inc
rcl
push
jae
inc
sbb
sbb
push
jmp
cmpsl
movsb
pop
outsl
xchg
rcrl
or
rcr
add
adc
xchg
into
cmp
decl
clc
cltd
mov
sub
jle
sbb
in
out
sbb
call
pop
hlt
fs
cmpsb
mov
inc
stc
lret
sbb
stos
push
xor
pop
pop
jl
jmp
mov
shlb
sub
lea
and
xchg
mov
clc
fists
lcall
int
popa
idiv
fdivrl
sub
fcmovu
or
popl
mov
scas
pusha
push
lods
insb
lcall
lret
ficoml
mov
lcall
dec
push
or
jno
cmp
iret
call
sub
mov
jbe
cmpsb
jne
adc
jbe
aas
sti
test
and
push
sar
aas
mov
fmuls
test
xchg
scas
lods
call
mov
rorl
xor
pop
outsb
pop
icebp
mov
pushf
dec
or
cmp
mov
dec
cmp
cmp
mov
std
jb
andb
nop
in
js
movsl
mov
cmp
pop
pop
call
pop
data16
in
mov
outsb
sub
xor
pmaxsw
mov
sbb
outsl
jle
clc
decl
xchg
pop
int
popf
in
jne
mov
mov
xchg
repnz
lods
and
ljmp
dec
movsl
and
inc
lods
cmp
mov
sti
push
fcomp
dec
in
scas
xor
fistpll
and
lcall
stos
fidivrl
loopne
ljmp
dec
mov
lcall
and
dec
loop
out
mov
cmp
mov
dec
adcl
data16
into
out
sub
loopne
mov
mov
adc
fstpl
or
pop
cmp
adc
jbe
cld
fists
cmp
push
sub
xor
dec
add
sub
scas
sbb
lods
add
mov
fptan
push
aaa
inc
mov
leave
add
push
lret
hlt
push
inc
add
in
clc
lcall
aaa
xor
add
cmp
push
cmp
xor
fisubl
imul
fisubrl
ljmp
pop
xor
sub
sbb
ror
daa
imul
rcl
pop
or
jmp
mov
notb
cs
sub
adc
divl
sub
test
and
push
clc
pop
dec
or
jns
or
push
arpl
pop
mov
pop
sub
aas
sbb
inc
lcall
push
popa
push
imul
imul
jp
dec
dec
cmc
adc
push
test
ljmp
adc
push
sub
int3
aaa
push
popf
lea
daa
mov
enter
addr16
mov
repnz
or
or
pop
and
ror
das
mov
decb
mov
cli
ret
shll
cli
xor
lock
mov
dec
ficoml
fistpll
push
mov
and
sbbl
push
popa
test
testb
mov
sti
xchg
sbb
out
in
test
lcall
inc
mov
mov
and
ret
xchg
jge
fsubp
push
out
sbb
sub
sbb
jmp
sbb
fistpl
sbb
sti
pop
insl
aad
inc
add
add
mov
gs
mov
jmp
hlt
xchg
mov
mov
lret
lahf
ljmp
mov
xor
jno
lcall
aaa
fs
mul
cs
mov
repnz
push
mov
js
push
fsts
adc
jge
insl
in
pushl
cmpsl
or
in
push
xchg
pushf
cli
dec
orb
loop
popf
push
test
add
xor
mov
lret
cmp
pop
and
fistps
and
fldcw
ljmp
nop
aas
stos
cmp
push
jle
loopne
jg
jmp
sub
push
loope
mov
jne
mov
aam
adcl
pushl
push
dec
lahf
nop
mov
dec
insb
pop
and
daa
popf
addr16
and
ret
xorl
lods
jge
mov
hlt
es
dec
cmp
test
std
test
orb
xchg
loop
out
xchg
pushl
jb
divb
aam
leave
dec
push
pop
fstpt
cltd
push
mov
fmuls
repnz
popa
pop
sar
sbb
decl
and
out
popf
stc
mull
mov
sti
pop
rolb
jg
shl
sbb
jg
stc
xchg
or
lret
cmp
mov
lods
adc
jb
test
negl
jmp
mov
aas
mov
repz
push
stos
stc
push
rclb
mov
movsb
ror
movsb
leave
incl
cmc
xchg
jns
sub
mov
mov
xchg
push
insb
xchg
lcall
sti
xchg
int3
pop
add
incl
push
jge
cmc
and
push
shrb
cld
push
insb
pop
mov
add
or
cmp
lahf
pop
pop
fwait
mov
in
icebp
mov
in
stos
cmc
fwait
jnp
push
xchg
into
insl
test
shl
int
inc
adc
loopne
push
sbb
call
adc
ret
pusha
xlat
jne
or
add
inc
push
sti
mov
cld
gs
push
dec
sub
fbld
xchg
outsb
or
cli
cmp
or
jle
jp
jo
sub
in
nop
nop
xchg
call
mov
sub
adc
push
xchg
jmp
pop
mov
pop
icebp
decl
mov
lret
dec
push
cmpsb
xchg
push
mov
push
fstpt
pushl
xchg
mov
testb
repnz
push
push
pushf
mov
push
push
pop
jle
mov
incb
decl
cmp
add
movb
mov
and
cmpl
ds
cld
cmp
cltd
cmp
push
push
mov
fiadds
pushf
fcmovu
mov
mov
fmulp
call
and
cmp
popa
js
pop
movsb
jae
ljmp
aam
mov
sub
dec
inc
mov
xor
and
sub
push
inc
dec
pusha
out
xchg
rorl
iret
inc
scas
test
sarb
xor
inc
mov
jmp
test
pop
mov
lea
cltd
fwait
aad
fwait
test
hlt
push
lea
inc
lret
inc
outsl
clc
jmp
pop
sahf
insl
out
jo
out
push
xchg
pop
and
out
mov
adc
incl
push
pop
jge
mov
enter
jg
or
push
popa
or
aad
push
insl
push
sub
das
sub
clc
pop
fdiv
movsb
ds
jnp
hlt
bound
push
mov
popa
pop
call
jl
lods
sub
pop
cwtl
stos
push
pushl
repnz
in
pop
filds
insb
testb
pushf
rolb
std
push
or
jl
jmp
mov
dec
pop
mov
jle
test
mov
sbb
push
inc
mov
outsl
clc
cmpsb
push
insb
insb
sbb
adc
hlt
mov
adc
jg
lret
cmpsl
enter
cmpsl
ret
insb
xorb
cmc
ljmp
sarb
jb
xchg
cmp
sbb
int
jg
sub
stos
ljmp
sub
loop
cmp
ret
loope
pop
push
outsl
jp
sbb
xchg
mov
imul
into
cmp
insl
arpl
pop
lcall
int3
shlb
popa
scas
lahf
fisttpl
and
lcall
bound
std
cs
lods
shll
jg
inc
add
sahf
inc
faddl
icebp
decl
sbb
mov
mov
and
out
inc
or
sbb
incl
push
xor
add
cmp
mov
enter
mov
leave
mul
inc
pop
dec
lcall
xchg
fs
lret
sbb
or
cmp
rcll
mov
xorl
lcall
xor
sub
sub
push
pusha
in
pop
mov
mov
add
cmp
sub
sub
dec
cmp
cs
shrb
pushf
popf
out
mov
mov
cmp
jae
dec
scas
and
loopne
divl
xor
inc
adc
std
xor
cmp
repnz
in
jmp
jbe
lahf
stos
add
add
mov
in
push
jmp
inc
cmp
lock
scas
sbb
fdivs
outsb
push
or
in
sti
je
loopne
pusha
std
decl
sub
and
lret
and
fs
dec
std
add
and
repz
dec
inc
addr16
mov
sub
paddq
rcl
ljmp
sub
mov
jmp
add
test
push
adc
pusha
aad
fimuls
ljmp
adc
ss
xchg
jg
call
divb
or
push
outsb
mov
neg
sbb
push
cmp
in
jmp
call
lret
pop
ljmp
fisubs
fsubr
call
ret
daa
aad
and
and
outsb
scas
je
shrb
mov
out
inc
inc
jmp
jl
or
cmp
pushf
pop
pop
sub
fidivrl
fucomip
cli
or
test
lret
popl
repnz
daa
hlt
mov
jmp
mov
cld
pop
lods
push
lea
xor
pop
mov
push
and
ljmp
mov
adc
imul
shll
iret
mov
hlt
inc
shrb
incl
jle
mov
cmpsl
dec
pop
push
dec
pop
sub
jecxz
sahf
push
out
inc
xor
fdivr
fisttpll
pop
bsf
inc
mov
rolb
test
xchg
mov
jne
scas
jmp
inc
sbb
out
xchg
movb
int3
push
call
cmp
fwait
lds
mov
inc
add
lods
jb
jle
jbe
dec
adc
push
pop
push
test
outsl
pushl
std
or
mov
jge
sub
fcomps
ljmp
loop
ret
jns
mov
mov
and
divl
movsl
aas
test
lahf
and
incl
jge
push
dec
cmp
mov
rcr
xor
out
adc
lods
in
shll
sub
jbe
ljmp
ljmp
adc
addr16
inc
push
and
aaa
bound
and
dec
leave
data16
in
inc
jmp
mov
adc
fsubr
orb
mov
scas
or
outsl
inc
mov
decl
add
or
push
jne
mov
or
pop
cmp
call
push
sub
cmp
mov
add
loop
or
pop
sbb
inc
dec
frstor
dec
into
int3
fcomip
cmp
xchg
aad
sbbl
add
call
test
xor
jge
push
mov
add
or
imul
mov
cld
mov
mov
test
jae
and
scas
sbbb
movsb
popf
add
jmp
hlt
mov
fisttps
mov
jl
xor
and
cwtl
popf
call
dec
or
ss
sub
adc
mov
dec
inc
xor
push
loopne
adc
mov
out
shlb
push
aam
aaa
pusha
dec
cmpsl
std
mov
jl
mov
mov
push
sbb
xorb
lds
jecxz
inc
in
rcrb
mov
and
incl
pop
xchg
dec
jnp
stos
sbb
xchg
loop
loop
cmp
lcall
pop
push
inc
push
xchg
leave
fimull
es
and
test
mov
jns
jmp
sub
incl
inc
rorl
or
jmp
pop
das
dec
fnsave
outsb
jae
fsubrl
inc
lods
mov
mov
pop
call
cld
push
mov
out
pop
pop
inc
sarb
gs
mov
mov
mov
sar
sarl
or
lea
adc
shll
lock
cmpsb
ja
add
call
jle
jns
notl
jmp
in
ljmp
inc
cwtl
adc
test
pushf
mov
xchg
in
arpl
ljmp
dec
cmpsb
movsb
imul
xor
and
shlb
bound
mov
imul
ljmp
test
xor
jg
mov
mov
int3
rcl
fs
fidivrs
push
fidivrl
sarb
adc
lcall
jl
cli
xor
push
push
push
sub
mov
mov
jge
xchg
ljmp
outsb
pop
xor
push
jnp
fadds
lahf
dec
ret
out
jno
imul
jmp
jg
test
fstpt
jo
push
push
cmc
dec
sub
or
call
sub
mov
mov
in
push
pop
sahf
xor
rcl
xchg
jno
push
incl
inc
or
out
insb
add
jecxz
and
out
push
insl
popa
outsl
pop
aad
loope
scas
incl
subb
and
xchg
sub
shrl
mov
jg
jg
jmp
insb
jno
cmpsb
or
scas
ja
cmp
push
mov
adc
jmp
inc
xchg
add
shl
shll
adc
in
rcrl
test
sbb
inc
push
sub
scas
scas
shll
jns
fwait
test
daa
stos
mov
shl
ja
incl
sub
pusha
pop
stos
out
xchg
inc
and
jns
lret
jb
dec
inc
and
ljmp
lock
cld
jg
inc
xchg
cmp
jne
es
mov
inc
jmp
inc
ja
mov
inc
gs
jmp
scas
clc
cmpsb
aad
jp
jl
mov
fldl
jbe
sub
dec
aam
test
push
add
sub
imul
or
jmp
test
std
jns
dec
insb
xlat
cmpsl
fs
sub
mov
test
lcall
loope
ja
mov
test
push
mov
fwait
rcl
xchg
enter
inc
ja
imul
ss
push
mov
int3
movsl
jnp
test
push
call
cmp
adc
sbb
iret
loopne
xor
loop
cmp
xlat
ljmp
inc
xchg
pop
mov
mov
in
jb
stos
aad
loopne
mov
call
ljmp
seto
das
push
ret
pop
es
jae
pop
repz
out
dec
movl
jmp
cli
adcb
stos
lea
push
push
cli
inc
push
mov
aad
imul
call
test
fisttpll
inc
jecxz
test
stc
xor
cmp
pop
ljmp
fcomip
call
int
sahf
xor
mov
mov
fisubrs
lcall
mov
dec
leave
pop
xor
push
cmp
bound
jl
decl
inc
inc
lods
out
xor
das
mov
mov
xchg
inc
jnp
rol
mov
call
adc
xchg
repz
mov
call
cli
imul
sub
push
decl
xor
adc
pop
jmp
hlt
jb
xor
cld
jge
stos
call
push
int3
xchg
inc
notb
bound
xchg
rorb
or
dec
in
js
incl
leave
cmpsb
js
rolw
add
lds
inc
mov
and
ss
lcall
adc
sub
push
rcr
out
add
ja
js
call
jg
add
pop
shrb
aas
xchg
std
jmp
ret
dec
dec
and
pop
mov
call
cltd
mov
aad
jl
movsb
loop
lret
mov
inc
test
adc
dec
bound
ja
sbb
lock
das
repnz
std
or
lahf
or
in
inc
stos
dec
inc
je
xchg
adc
pop
adc
mov
mov
xor
movsl
pop
xchg
jmp
adc
xor
gs
cmp
aaa
out
es
gs
ljmp
into
sub
loope
mov
fstpl
cmp
lock
xchg
sbb
fmuls
insl
dec
push
loopne
dec
ret
testb
mov
xchg
sbb
fidivs
out
cwtl
push
pop
loopne
ljmp
sbb
jns
mov
sub
loope
push
xor
pop
sar
call
sbb
lods
add
data16
xor
movsl
inc
jl
popf
and
jg
shl
add
add
add
ja
mov
add
jo
cltd
xor
adc
ud0
call
xchg
loope
es
xor
lods
mov
inc
stos
test
incl
dec
popl
jne
sahf
inc
loope
pop
adc
add
adc
inc
lcall
fisubrs
adc
add
ljmp
inc
gs
sub
aam
jnp
loop
push
lock
mov
sbb
gs
mov
insb
movsb
lret
xor
test
cld
push
aas
inc
test
shll
lcall
stc
cmp
xchg
pushl
loop
ss
sub
in
std
mov
jg
gs
scas
out
fwait
jb
inc
inc
aas
out
lods
inc
inc
jle
daa
out
in
sti
xor
mov
inc
mov
testb
insl
daa
lcall
jmp
daa
push
mov
lock
xor
inc
sarb
mov
insl
repnz
fcoms
std
cs
mov
jmp
dec
push
pop
ret
pop
cmp
xchg
fildll
les
cmp
enter
lock
pop
test
mov
jns
xchg
add
jmp
xchg
gs
ret
popf
sub
xchg
xchg
lods
je
out
add
inc
jo
pop
icebp
jg
push
jge
ret
sti
or
mov
loopne
pop
into
pop
sbb
push
add
movsl
in
add
pop
ljmp
lahf
test
movsl
ret
lea
dec
lret
rol
lea
jmp
xchg
lahf
jmp
add
lahf
jnp
decl
adc
out
mov
pop
shlb
ret
and
shrb
sti
incl
inc
aaa
pop
mov
pusha
cmp
sar
inc
or
sti
int3
or
sar
cmpsb
add
inc
das
xor
icebp
xchg
pop
mov
jg
jge
ret
ljmp
or
or
inc
fisttpll
sbbl
dec
aad
jg
inc
adc
mov
xchg
xchg
repnz
pop
scas
add
clc
add
inc
js
cs
aad
jg
dec
mov
push
bound
inc
push
mov
push
pop
push
push
xlat
lds
ret
decl
movsb
lcall
mov
pushf
jp
cs
jl
adc
add
sbb
inc
pop
pop
addb
mov
mov
cmp
iret
cmpl
cmp
lods
mov
and
cmp
jbe
mov
cmp
sub
ljmp
fs
sbb
and
scas
mov
mov
sub
dec
inc
lock
fistps
sbb
incl
in
and
mov
add
fcmovu
cmp
push
push
in
or
push
pop
rclb
pushl
rclb
adc
cmc
stc
sub
adc
daa
imulb
icebp
xchg
pushl
adc
pop
dec
jmp
std
lock
mov
leave
mov
call
ret
jno
adc
js
sarl
mov
popf
mov
ljmp
inc
adc
cmp
mov
push
or
inc
sub
or
out
add
das
mov
lret
fldenv
dec
add
mov
movsl
cmp
or
addr16
lret
jmp
xor
das
mov
push
bound
ljmp
or
push
sbb
xchg
incl
cmp
mov
xchg
sub
jg
in
inc
pushl
call
inc
test
lds
jmp
int3
pop
test
stc
icebp
fwait
lcall
push
lods
xchg
fisubrs
mov
fbstp
jg
movsb
inc
pop
mov
lcall
ja
adc
push
sbb
xchg
testb
testb
repnz
mov
cli
push
sti
fbld
decl
adc
repz
push
mov
insl
pop
lret
int3
cmpsl
xchg
jmp
int
dec
mov
jb
and
movsb
xchg
pusha
xlat
imul
xor
jnp
mov
cmp
mov
jns,pt
pop
notb
xchg
call
cmp
add
mov
add
cmp
cld
xchg
mov
or
call
mov
lods
mov
js
mov
mov
loope
pushf
rcrl
jnp
inc
fiadds
jb
scas
clc
dec
fsubr
cld
mov
imul
flds
pushl
or
rolb
sub
test
mov
out
fs
mov
aaa
xor
jg
shll
outsb
fldcw
les
add
pop
push
xchg
adc
pusha
xchg
xor
jmp
jg
sub
incl
and
mov
mov
pop
jmp
aaa
shl
mov
rclb
test
jmp
sti
js
gs
pop
in
mov
sti
sarb
pusha
add
int
xchg
lcall
lcall
adc
incl
adc
in
leave
dec
lods
enter
out
ss
mov
mov
int3
xchg
inc
cld
hlt
loopne
push
xchg
push
cmp
scas
stos
xorb
ljmp
cli
pop
bound
adc
ret
pop
imul
sbb
movsl
hlt
scas
mov
and
and
pop
push
ds
or
xlat
fstps
mov
cld
lcall
jle
sti
mulb
mov
insl
push
cltd
pop
jle
push
dec
sub
inc
inc
cs
jg
inc
inc
dec
cwtl
pop
mov
cmp
mov
push
push
lods
cmpsb
incl
test
int3
cltd
imul
je
push
add
pop
lock
ds
dec
mov
les
pop
cmp
loop
push
dec
and
mov
jmp
es
adc
add
push
mov
ja
pop
sar
jmp
add
dec
in
clc
jge
xor
adc
sub
ljmp
ljmp
push
push
mov
lret
mov
addr16
sub
or
mov
cmp
cmp
lahf
adc
in
mov
mov
sbb
pop
aaa
repnz
jmp
xchg
mov
fwait
ja
cli
pushf
das
aam
xor
xor
aam
scas
insl
decl
push
mov
sub
std
adc
xor
out
add
insl
cmc
dec
adc
pop
pop
lahf
xchg
pushl
xor
xchg
aaa
xchg
fisubrs
enter
jl
ret
jle
or
js
jg
inc
inc
push
dec
inc
rorb
mov
lock
rclb
add
adc
call
jo
xor
scas
sub
data16
xchg
jle
out
adc
lea
ljmp
or
shl
add
insl
and
mov
adc
xor
lcall
add
dec
out
lea
cwtl
enter
fcoml
dec
mov
bnd
xor
lock
std
stc
jae
sub
ror
clc
sbbl
cld
push
addr16
dec
xchg
jmp
xchg
jmp
incl
mov
inc
jp
fisttpll
sbb
loopne
cmp
add
add
repnz
mov
cmp
jnp
sub
loop
notl
decl
bound
int3
or
mov
icebp
test
shr
xchg
cli
test
adc
test
mov
adc
or
aam
data16
cmp
xchg
jle
idiv
ss
add
lds
mov
adc
cmpsb
sub
daa
loope
cmc
jmp
ficoml
repz
aad
lods
cwtl
jg
out
mov
inc
sub
inc
mov
or
ror
adc
outsl
mov
in
mov
push
aam
dec
mov
rcr
in
push
mov
and
lods
inc
inc
jne
pop
pop
out
mov
sbb
shll
sub
ljmp
pop
int
lret
insb
pop
xchg
js
push
stos
cmp
out
push
cmp
stc
mov
cli
mov
rcl
shlb
fimuls
imul
and
insb
jb
icebp
ljmp
sahf
fstps
sbb
filds
mov
es
in
hlt
mov
pusha
jg
decl
dec
mov
sbb
jge
mov
mov
int
mov
js
cli
jmp
add
fldenv
scas
cmp
cmpsl
fsubs
xor
inc
xchg
mov
mov
test
popf
loopne
aad
push
mov
sti
icebp
fs
pop
jbe
adc
incl
dec
pop
in
adc
nop
aas
xor
bound
jmp
in
repz
sbb
mov
cltd
sar
pusha
jmp
mov
jge
sub
adc
out
xchg
cli
or
mov
or
mov
mov
lret
lret
cmpsl
stos
mov
mov
xchg
fcomip
call
or
pushf
jge
push
fistl
popf
fstl
decl
out
test
add
std
jmp
add
in
mov
ljmp
and
unpckhps
and
adc
lret
push
iret
mov
int
xchg
out
sub
je
fildll
outsl
popl
adc
call
push
fcompl
jnp
and
scas
add
negb
inc
in
jb
outsb
push
clc
jmp
daa
jge
mov
mov
mov
dec
push
sub
inc
mov
int3
dec
mov
and
sti
and
pop
fisttps
ror
lods
pop
pop
or
jmp
cwtl
mov
fbld
dec
push
int
jmp
mov
std
arpl
push
cmp
lcall
hlt
daa
pop
fstl
movsl
bound
stc
aas
sahf
mov
mov
aas
push
incb
sbb
je
jno
cmc
push
pusha
incb
fildll
add
pushl
jp
pop
and
push
and
out
in
aas
pop
and
push
dec
xor
incl
mov
sub
inc
fistl
xchg
inc
add
inc
les
or
jle
imul
mov
sub
or
repz
imul
ds
ljmp
sidtl
cmc
aam
punpckhbw
pushf
cmp
jl
loopne
call
adc
inc
and
push
add
sbb
popf
fmull
fildll
das
ss
and
pop
decl
mov
cwtl
sarb
xchg
lcall
decl
mov
lret
in
xchg
xor
lret
jmp
incl
mov
ret
push
pop
frstor
dec
movsb
fmul
dec
mov
out
repz
jg
lcall
scas
jecxz
mov
andl
or
pop
pop
stc
mov
fs
imul
inc
xchg
lods
notb
push
xor
cwtl
cld
mov
mov
iret
lods
mov
into
mov
and
add
ljmp
les
in
xor
xchg
popf
out
jb
pop
and
add
nop
push
fs
jbe,pn
dec
lcall
negl
daa
or
mov
push
cmp
xchg
nop
ret
incl
andb
dec
sub
pop
clc
pop
mov
adc
mov
lcall
cmp
imul
jl
fisubrs
cmpsb
and
push
and
outsb
dec
sub
scas
outsl
cli
call
push
or
mov
dec
jb
bound
jmp
call
call
mov
aaa
cmpsl
test
sahf
popa
aad
mov
dec
outsb
enter
lahf
push
das
mov
decl
pop
mov
mov
repz
xor
shrb
lds
xchg
sbb
inc
pop
cwtl
xor
pop
lcall
rcrl
adc
lock
push
jle
push
cwtl
mov
repz
or
inc
fisttps
cld
testl
fdivl
push
dec
mov
call
add
imul
stc
pop
les
nop
xchg
sar
je
movaps
sar
pushl
std
fcoml
mov
jnp
xchg
sub
mov
cmpsl
dec
popf
inc
enter
sub
test
pop
loopne
lods
mov
in
xorl
jmp
call
addr16
pop
pusha
pslld
sub
fucomp
icebp
inc
inc
inc
xorb
and
lcall
sbb
mov
movsl
xchg
sub
inc
jecxz
in
out
jns
cmp
sbb
jbe
jb
mov
bswap
int3
and
adc
in
lcall
push
pop
insb
leave
xchg
mov
xor
and
inc
shr
push
jle
xchg
mov
pushf
dec
out
jns
or
push
clc
cmp
mov
push
movl
sar
ljmp
lock
aam
xorb
xchg
out
out
decb
mov
jge
int3
out
scas
fldenv
jp
loopne
pop
push
push
dec
mov
pop
mov
dec
mov
lcall
push
inc
fwait
inc
add
lcall
shll
loopne
mov
xchg
xchg
pop
add
pop
pop
xchg
sbbl
push
pop
xchg
dec
cmpsb
jno
sbb
pusha
jnp
mov
repnz
lret
aad
pusha
nop
in
loope
clc
dec
mov
mov
rcl
mov
pop
aam
sub
imul
aam
add
xchg
call
mov
sub
mov
inc
call
fmul
adc
ljmp
dec
jge
rcrb
or
push
loop
aaa
fcomps
push
adcb
jne
fildll
ljmp
scas
cmc
not
add
fnstsw
xchg
daa
fwait
mov
inc
lods
jns
ljmp
dec
dec
cld
subl
nop
mov
push
cmp
push
sti
push
fldcw
lcall
in
dec
mov
mov
mov
mov
mov
dec
adc
in
sahf
dec
pushl
add
adc
and
sbb
into
xor
push
movsb
iret
mov
mov
int
test
lods
fistpl
and
mov
cmp
sub
adc
insb
adc
adc
adc
testl
jmp
ret
lahf
jge
loopne
pop
xor
cmp
ss
je
push
xchg
dec
aad
push
les
ljmp
lcall
cmp
mov
sti
adc
add
adc
push
in
call
jno
movsl
ds
fisttpll
shrb
sub
lcall
cmp
lcall
mov
aam
ljmp
lock
or
mov
xor
lods
sub
rcll
push
cld
incl
aad
sbb
bnd
iret
mov
pushw
jnp
outsb
push
imul
mov
cmp
pop
ret
jp
dec
popa
or
lds
mov
lcall
cmp
subb
test
lds
ljmp
std
dec
out
repnz
xorb
add
decl
sbb
pop
jle
aas
xchg
aas
sub
and
ja
cmp
xchg
cli
out
clc
repz
lret
int
xorw
cs
or
jne
or
jmp
test
pop
cs
icebp
jmp
ljmp
xor
or
push
gs
dec
les
ds
cmp
in
cmp
incb
insb
jl
shrb
cmp
sub
or
es
inc
outsb
cli
movsl
mov
add
mov
clc
in
int3
scas
sahf
jge
xor
ljmp
or
cwtl
lea
adc
js
cmp
lea
jae
mov
stos
lcall
ficoms
decl
insl
dec
pop
push
fnsave
lret
cmpsl
aam
and
incl
push
test
mov
insl
sub
out
aaa
add
or
cmp
jmp
jg
iret
sarl
ss
lock
leave
sub
push
js
enter
rol
mov
cld
ljmp
or
loopne
je
das
cmp
mov
int
sub
push
incl
sbb
imul
leave
insb
adc
insl
and
int3
add
data16
xchg
mov
lcall
lret
cmp
xor
rclb
pop
add
jecxz
pop
mov
mov
pop
lock
adc
fdivp
movsl
cmp
and
sub
dec
mov
in
ja
mov
jmp
mov
cmc
xchg
jb,pt
gs
aam
test
cwtl
in
add
sti
les
or
ja
dec
movsb
je
aas
scas
scas
pushf
cmp
push
jl
push
jo
test
imul
jno
jp
xchg
fdivl
sub
cli
flds
sub
sar
jmp
ds
fdiv
pop
lret
js
lods
sub
scas
mov
clc
and
dec
loopne
jg
xchg
pushf
inc
pop
mov
sahf
clc
sarb
test
cmpsl
xchg
fmull
call
cmpsb
lcall
data16
loopne
pop
xchg
add
mov
repz
lcall
and
in
aas
movsl
xchg
loope
cmp
push
stc
pushf
or
jae
jg
ljmp
test
dec
lock
cmp
xchg
jmp
in
mov
pop
leave
xchg
cwtl
insl
cmp
xor
push
mov
or
push
sub
repz
mov
push
mov
dec
sbb
js
roll
push
out
jecxz
push
lods
push
and
jo
decl
push
fildl
shlb
aaa
jb
pop
jb
arpl
lret
stos
cmpsb
xlat
jmp
cmpsl
dec
popa
cmp
xlat
and
jle
fistpll
mov
adc
flds
lods
mov
sar
test
fdivrp
lods
hlt
mov
pushl
rcr
mov
adc
push
cmp
mov
and
ljmp
jg
aaa
mov
in
gs
decl
mov
jecxz
clc
jle
and
jmp
jns
mov
in
sbbb
sbb
fidivl
ja
clc
jmp
inc
xchg
mov
cs
test
scas
clc
ljmp
push
loopne
rclb
out
and
ljmp
xor
sub
add
xor
loop
clc
dec
in
addb
jmp
es
aas
and
fcom
lds
adc
jbe
gs
dec
dec
mov
and
movsb
adc
arpl
lcall
or
push
ja
inc
mov
call
add
nop
divb
test
mov
fwait
cltd
push
pop
std
mov
pop
fcomip
incl
std
mov
dec
dec
int
mov
inc
mov
and
mov
mov
mov
mov
mov
popf
ret
test
dec
sbbl
decl
cmpsb
inc
ljmp
mov
or
in
testb
push
cmp
push
fbld
ljmp
inc
fs
js
cli
cli
pushl
xchg
cmp
bound
inc
js
cmc
cmpsl
stos
mov
cmp
imul
ljmp
jno
insb
mov
or
mov
mov
daa
mov
lcall
lahf
push
push
xor
jmp
xchg
sub
jnp
fdivr
pushl
xchg
stc
mov
ret
mov
or
pop
rorl
pop
adc
mov
aaa
mov
cs
gs
adc
lods
and
or
add
sub
mov
sub
jbe
es
and
push
outsl
push
jb
mov
mov
sbbb
xlat
mov
nop
dec
les
roll
push
and
ljmp
mov
and
jecxz
sub
mov
xchg
sbb
or
push
jae
mov
arpl
adc
add
icebp
or
data16
or
call
popf
jl
cmpsl
add
mov
xchg
outsl
cmpsb
pop
sbb
and
fdivrl
ret
cmp
loopne
faddl
out
loop
xor
das
cmpl
jmp
andb
aad
out
sbb
mov
sub
mov
add
sub
stos
in
jle
dec
inc
adc
mov
pop
movsl
inc
push
sub
push
leave
mov
push
lcall
notl
lock
jge
push
addb
pop
test
addr16
mov
fcomip
ljmp
mov
and
testl
mov
je
adc
push
fmuls
push
mov
inc
imul
adc
imul
push
shll
rclb
dec
stos
outsb
jb
dec
mov
lret
ja
xchg
das
cli
cmp
pop
push
jl
inc
insl
in
imul
hlt
xchg
fs
cwtl
fildll
loopne
xor
in
dec
cli
insb
mov
sub
and
cmp
xchg
cmp
xlat
in
decl
jo
shlb
pushf
jbe
sbb
mov
and
lahf
xor
lcall
push
das
jl
push
fisubrs
fwait
inc
pushf
dec
sbb
cmc
sbb
lds
fbld
cmp
and
aaa
adc
repnz
xor
rcr
ffreep
test
jmp
mov
movsb
sbb
decl
xchg
js
pop
stos
add
test
out
in
fs
or
inc
adc
adc
pop
mov
daa
shrb
jae,pt
mov
sbb
push
sti
mov
mov
fucomip
call
pop
mov
iret
add
mov
std
jle
dec
cmp
pop
int
pusha
rorl
mov
test
call
jmp
xchg
repnz
rol
dec
sub
int
inc
inc
push
movsb
sbb
fcmovnu
ljmp
lcall
jecxz
insb
inc
mov
lcall
mov
int3
mov
adc
cmp
inc
scas
mov
outsl
idivb
addr16
xor
decl
mov
xchg
push
out
popf
add
mov
sbb
mov
pop
fbstp
ljmp
cltd
int3
lret
ss
push
les
and
sub
jmp
rorl
stos
enter
fsubrs
insb
aaa
adc
ja
lds
js
test
and
incl
sbb
xlat
jge
lcall
cmpsb
inc
xchg
mov
and
xor
orl
dec
adc
adc
daa
sar
rclb
xor
and
jg
or
pop
mov
xchg
nop
dec
push
aaa
std
call
mov
sbb
pushl
cltd
icebp
mov
outsb
jb
test
mov
cmp
fs
lahf
nop
lcall
lock
xor
mull
lods
aaa
jge
mov
or
mov
fwait
mov
push
fadds
add
lock
mul
movsb
and
call
lcall
add
in
inc
test
repz
test
ljmp
dec
add
sti
inc
cmpsl
xor
xor
mov
leave
pusha
lock
cwtl
dec
inc
nop
sbb
jmp
cs
addr16
loope
int3
xchg
and
iret
mov
mov
sbb
push
cli
pushl
add
xor
sbb
bound
pop
mov
adc
hlt
cmc
rcrb
cmp
add
pop
inc
inc
dec
or
aam
mov
call
bound
pop
fsubs
inc
lock
mov
push
stc
fbld
cld
pushf
iret
cmp
lcall
sub
mov
insb
sahf
sub
call
pushf
mov
rcr
jne
rcrb
or
xor
push
xor
dec
addr16
cmp
push
xchg
jecxz
pop
mov
push
movsb
inc
popf
cmp
push
out
fnstcw
scas
lds
jg
pushl
imul
or
stos
pop
incl
sarl
mov
fnstcw
or
mov
in
lret
jp
dec
pushl
add
add
cltd
mov
arpl
dec
mov
enter
lahf
das
cli
ljmp
cs
jecxz
lahf
scas
sub
fmull
cmp
mov
lock
in
lods
sub
insl
dec
add
inc
lcall
leave
mov
sarb
mov
dec
ja
pushl
scas
xor
mov
loop
dec
je
xchg
pop
and
data16
fisttpl
pusha
push
stc
div
push
data16
pop
mov
xchg
push
xor
push
cmpsb
cld
jo
stc
adc
jae
xchg
jb
lods
adc
push
xchg
loope
lods
jo
repz
repz
lods
ret
inc
add
push
xchg
pop
gs
add
lahf
shrb
loopne
decl
out
rolb
dec
lcall
dec
push
xchg
and
cmp
sub
and
fadds
adc
push
adc
and
ret
push
mov
jne
lret
lcall
lcall
mov
pop
test
aad
mov
sub
movsb
adc
sarl
mov
movsl
mov
loopne
incl
pop
dec
dec
vmread
lds
mov
ljmp
pusha
loopne
std
mov
mov
in
bswap
sbb
jo
mov
call
lods
repz
inc
sbb
mov
rolb
jo
stos
adc
clc
dec
or
pop
and
or
push
int
push
sbb
outsl
cmc
lcall
add
xchg
jne
cmp
or
mov
mov
lea
out
xchg
lcall
call
cmp
push
mov
je
jns
inc
test
pop
aam
inc
jbe
or
push
dec
xor
mov
pushf
mov
push
aaa
mov
outsl
adc
sbb
int
pop
push
and
and
mov
out
add
dec
mov
inc
inc
xchg
sub
clc
add
cmc
int3
and
adc
adc
cwtl
sbb
cmp
imul
xlat
pusha
mov
fisubl
pop
cmp
inc
outsb
and
push
or
add
jmp
std
lahf
add
lea
push
dec
pushl
and
js
cld
arpl
stc
loopne
lods
xchg
inc
adc
std
call
pop
cmp
push
inc
push
lods
pop
sbb
loope
pop
dec
into
cmp
pop
xor
adc
mov
call
les
daa
inc
mov
mov
ss
jle
test
mov
push
incl
sub
shrb
ret
loopne
or
pusha
and
mov
sub
call
es
sub
push
mulb
push
push
mov
jo
subl
loope
push
rclb
hlt
out
push
push
imul
push
outsb
push
neg
inc
cwtl
in
xor
xorb
lcall
roll
mov
arpl
dec
sbb
leave
sub
lret
push
cwtl
hlt
std
lret
mov
jmp
jge
stc
daa
bound
shrl
jl
test
addl
popf
jecxz
fimuls
jmp
dec
aaa
push
jmp
fwait
inc
rcrb
out
or
fmul
push
mov
shll
mov
or
xlat
and
cmp
jecxz
jp
sbb
cmc
dec
mov
addb
fistpl
cmp
dec
fdivl
addl
ljmp
lret
jle
or
sbb
das
test
sbb
in
mov
insl
stc
jnp
incl
aaa
cmp
cmp
mov
pop
pop
cmpsb
mov
pop
bound
mov
decl
push
clc
scas
out
and
ljmp
push
repz
jbe
sub
pop
inc
cmpb
pop
or
pop
cmc
decl
sub
scas
dec
xchg
fistps
orl
adc
ds
lcall
adc
mov
dec
inc
or
mov
mov
inc
sub
int3
push
mov
inc
inc
push
lods
rorl
jp
add
faddl
jmp
add
fisttps
repz
cli
jecxz
xor
in
xchg
lret
push
lea
xchg
sbb
out
adc
mov
dec
sbb
imul
mov
or
xchg
sahf
call
cltd
xchg
pusha
dec
mov
mov
adc
hlt
push
sbb
or
dec
dec
rclb
mov
lcall
add
mov
les
pop
fistps
loope
shll
adc
fldcw
xor
xchg
mov
push
pop
cltd
repz
and
loop
fadds
leave
jl
adc
hlt
faddl
sbb
leave
adc
ret
in
push
mov
imul
add
xchg
pop
fwait
pushf
mov
stos
mov
sbb
adc
mov
ds
les
dec
mov
jmp
into
call
repz
cmp
jb
ret
cmp
jae
scas
jp
cmp
hlt
push
shrb
sub
adc
adc
jle
jecxz
and
pop
rcrl
mov
leave
lods
push
dec
jnp
cmp
jb
cltd
fwait
incl
ljmp
xor
shlb
out
mov
insb
decl
mov
or
test
add
push
pop
or
test
hlt
mov
fidivl
push
xchg
inc
push
fdivs
test
aam
jae
sub
pop
push
je
mov
lcall
jo
cmp
mov
mov
testl
lds
popf
nop
rcrl
mov
mov
ds
push
repnz
hlt
xor
jle
fsubr
clc
jg
bound
gs
mov
dec
arpl
loope
ljmp
cmp
lcall
adc
xor
lea
sbb
cmp
or
cmp
sbb
and
mov
and
xor
loope
mulps
dec
jae
push
enter
mov
hlt
lret
cmp
pop
jmp
adc
push
call
mov
push
add
jo
incl
and
add
jecxz
minps
xor
pop
add
ljmp
pushl
xchg
xor
pop
sub
cmp
add
mov
jp
aas
jnp
jne
inc
cmp
jmp
lods
fisubrs
jae
dec
aam
sub
addr16
push
lcall
inc
loopne
pop
int
cmp
out
mov
incl
xor
cmp
mov
rol
xchg
xchg
imul
fsubrs
loopne
in
fsubs
stos
pop
xchg
inc
daa
outsb
jg
jmp
iret
scas
add
js
mov
aam
push
xchg
mov
sbb
jne
add
gs
aad
jmp
mov
push
lock
mov
sbb
fldl
mov
push
mov
sbb
lcall
pop
jae
jae
adc
pop
cmpsl
test
and
sub
js
bnd
jmp
lock
add
out
aad
sbb
lcall
fdivrl
fisttpll
adc
aad
aad
lods
add
fs
decl
inc
shll
sti
mov
aaa
adc
xchg
in
cmc
push
pop
pop
out
pop
xor
jl
incl
jmpw
ret
dec
or
push
or
decl
add
sti
lret
jns
pushf
dec
push
subl
dec
dec
and
lcall
pusha
xchg
cli
sahf
outsb
xlat
lea
lcall
mov
dec
xlat
pop
and
fistps
leave
in
pause
incl
jmp
idivb
mov
enter
shrb
inc
pop
pop
push
pop
xchg
incl
cld
incl
out
and
lahf
push
hlt
imul
sub
and
aad
stos
dec
ficoml
xor
xchg
ja
mul
cmp
iret
das
enter
addl
call
push
sbb
mov
xor
cmp
out
add
cmp
cmp
pop
call
jmp
es
or
test
das
sbb
fbstp
push
mov
jl
test
push
dec
add
cmpsb
push
and
sub
cmpsl
pop
bound
or
pop
adc
jl
fnstsw
jo
and
sbb
mov
adc
idivb
lcall
test
das
cmp
sbb
test
xlat
decl
lock
test
add
push
inc
gs
jp
add
adc
out
add
lahf
or
dec
std
call
fsubrs
jge
repz
pop
hlt
stc
loope
bound
jno
sub
adc
fsubl
sub
cli
loope
or
jae
sbb
adc
jg
cld
jmp
in
add
stos
enter
xchg
addr16
pop
xchg
push
or
lcall
xchg
lock
mov
jge
jle
pusha
xor
decl
mov
add
pop
aad
ds
inc
and
sub
jno
or
in
movb
negl
push
and
movsb
mov
ficomps
dec
iret
arpl
and
nop
ljmp
inc
xchg
pop
fidivs
outsl
outsl
mov
gs
daa
call
inc
mov
mov
or
or
rorl
sahf
inc
mul
gs
shll
gs
jmp
pop
add
jno
xlat
cmp
ret
test
or
testl
incl
jnp
fadds
lret
jmp
imul
std
xor
ljmp
dec
add
stc
stos
mov
clc
fisubs
and
adc
incl
shl
and
xor
call
mov
mov
scas
push
sbb
inc
mov
mov
jg
dec
cmp
xchg
stos
and
jmp
dec
jnp
scas
int
pop
call
in
dec
call
loop
out
mov
jg
mov
fnstsw
lock
call
jmp
pop
pusha
pop
mul
xchg
mov
mov
gs
movsl
insb
push
call
jmp
icebp
stos
das
jg
stos
sbbl
cwtl
cmc
cs
in
fadds
push
inc
lcall
mov
stc
jbe
lock
in
lret
hlt
or
shlb
cmp
jmp
ds
popf
lock
ja
pop
shlb
jmp
popf
je
dec
shlb
popa
mov
mov
pushl
out
and
shll
cltd
sub
out
fmull
incl
test
and
sti
leave
bnd
out
ljmp
fwait
and
xor
incl
lahf
and
shll
dec
xchg
sahf
cmp
adc
int3
addl
mov
pusha
paddq
cmp
sbb
sbb
or
xlat
cmp
cmpsl
cmpsb
cwtl
outsb
notl
cmp
daa
mov
sub
cli
adc
dec
and
out
out
aam
cmc
inc
xorb
jns
and
inc
sbb
scas
push
dec
fsubrs
or
sub
or
imul
push
repz
decl
addr16
popf
push
dec
sbb
mov
aas
adc
or
or
mov
lcall
out
call
fdivs
leave
cli
into
push
mov
adc
sub
outsl
inc
mov
mov
pop
decl
sbb
mov
sahf
dec
push
sbb
fistps
or
call
mov
push
xor
mov
cmc
add
daa
out
push
ljmp
lcall
sbb
jg
xor
push
bound
jmp
xlat
and
ljmp
mov
rcrl
pop
mov
rclb
fstpl
pop
xor
fbstp
dec
inc
jnp
imul
inc
mov
lds
sbb
fisttpl
jbe
fwait
ret
mov
pop
inc
fisubrl
or
jmp
jmp
test
hlt
fstp
and
or
ja
mov
jmp
call
shlb
push
out
push
cmp
dec
nop
cld
cmpsl
push
lods
sbb
fnclex
jmp
sub
lret
xchg
int3
sub
push
xor
nop
push
or
mov
pop
rcll
cmp
mov
pushl
cmp
xor
shrl
xor
or
mov
sbb
aaa
mov
ljmp
and
pop
xchg
dec
fstpt
pop
test
and
and
dec
icebp
call
test
mov
mov
cs
sbbl
dec
mov
clc
mov
in
shl
mov
add
sar
pushl
fisttpl
push
into
scas
xchg
stos
pop
mov
cmp
mov
jne
fadds
jg
ljmp
lret
mov
daa
mov
dec
cs
pop
addr16
dec
xor
hlt
aaa
cld
incl
xor
je
or
je
repz
decl
inc
mov
and
mov
es
mov
xchg
xlat
mov
jmp
and
jno
pop
adc
pop
movsl
shlb
xchg
mov
mov
jmp
insb
mov
or
or
js
fucomi
imul
and
bswap
cli
jmp
insb
or
movsb
es
xor
xorb
mov
ss
leave
cld
jg
aam
mov
sub
inc
dec
je
fbstp
pop
decl
dec
sub
call
cwtl
hlt
and
inc
cld
cwtl
rclb
loope
mov
idiv
jmp
cmp
xchg
sub
imul
pop
shlb
mov
fbstp
adc
fcmovnb
cmp
imul
lods
mov
ljmp
push
aam
xor
xor
adc
inc
scas
fs
fwait
add
icebp
dec
ds
inc
jg
dec
adc
jne
mov
push
das
and
fdivl
inc
sbb
into
dec
jg
push
stos
sbb
jbe
pop
xor
sub
or
mov
or
xchg
cli
cmp
add
insl
jecxz
out
sbb
cmp
fcompl
dec
cmpsb
imul
enter
das
sar
and
popf
mov
dec
adc
aam
iret
stos
lds
sarb
mov
movsl
push
addr16
jp
xchg
xchg
xchg
adc
imul
pop
dec
pop
out
jmp
pop
fcomps
cs
adc
push
pop
ret
add
mov
mov
mov
call
les
adc
ljmp
sti
js
std
push
mov
ja
cmp
jo
inc
inc
arpl
pushl
inc
lret
add
rorl
dec
dec
je
cmp
popa
icebp
mov
dec
xor
jmp
xor
jb
stos
insl
or
sub
or
arpl
repz
dec
adc
jg
or
adc
xor
cmpsb
mov
addl
rcll
outsl
xor
hlt
imul
movsl
adc
lcall
enter
add
fs
icebp
incl
jmp
fstpt
push
mov
outsb
rcll
shlb
jbe
adc
jl
cmp
call
lods
les
xchg
mov
hlt
ljmp
in
push
outsb
xor
xchg
jp
incl
popf
pop
sub
sub
dec
push
fimull
in
xor
in
pop
ret
pop
popf
movsb
mov
jmp
mov
fwait
cmc
fistl
in
push
sbb
mov
mov
inc
add
lcall
outsl
mov
pop
push
repnz
inc
pop
cmp
adc
rcrb
mov
pushf
cli
jmp
add
mov
sub
cmpsl
jo
ja
out
in
not
fidivrs
and
sub
out
lret
rclb
rdmsr
jns
js
mov
cli
out
lods
stc
stos
sub
sub
popa
js
ljmp
sti
xor
and
dec
mov
iret
xor
sbb
aaa
pop
ja
xor
jns
decl
test
shrb
sbb
push
shr
pop
add
xchg
mov
sub
outsb
ljmp
incl
ja
mov
addb
cmp
jg
std
idivl
test
xchg
out
lea
dec
sar
pop
xorl
mov
push
pop
pushl
aaa
psrlw
xlat
lahf
fsubrs
arpl
or
sub
or
jb
sbb
inc
mov
test
jmp
add
aaa
insb
jnp
lods
scas
ficompl
add
pushl
push
std
insl
out
es
sub
inc
out
pop
jo
push
jmp
adc
jmp
push
dec
xor
push
clc
adc
mov
xor
lock
pushl
std
xchg
clc
xchg
or
or
inc
lock
data16
repnz
mov
pop
add
push
adc
stos
add
mov
xchg
pop
decl
cmp
xchg
jge
dec
stos
jge
lahf
xchg
rolb
imul
arpl
lods
jmp
ljmp
in
cmp
cltd
cmp
into
les
jbe
notl
jmp
loopne
inc
jno
lods
jp
or
ljmp
dec
adc
into
or
shlb
or
jmp
in
lock
cmp
dec
aad
popa
ror
mov
lods
lock
jg
inc
shrb
jg
sti
lods
rcrb
fisubrs
xlat
inc
mov
test
jae
or
mov
cwtl
inc
mov
arpl
jae
subl
imull
or
call
mov
pushf
lods
dec
rclb
in
sub
pop
sbb
sbb
push
cmp
stc
mov
fsub
outsl
cmp
dec
comiss
bound
icebp
pusha
rol
lods
sub
lcall
xor
adc
shlb
adc
jns
cmp
push
mov
call
hlt
mov
stos
jnp
mov
dec
imul
cmp
xchg
pop
repz
lcall
xor
arpl
jle
push
in
push
pop
push
imul
hlt
mov
int
aaa
cld
jmp
push
cmp
ret
dec
fsts
movsb
stos
cmp
cmp
mov
mov
jmp
mov
ja
les
popa
into
popf
popa
pushl
push
je
jb
and
cmp
outsl
imul
into
pop
pop
cltd
mov
sbb
ss
enter
scas
pop
stos
mov
out
addb
scas
insl
sub
xchg
rcl
add
inc
xchg
hlt
mov
ljmp
jns
mov
out
mov
movsl
fnsave
adc
dec
les
pushl
ja
jne
aam
push
cmpsb
xchg
pop
stos
jae
rorl
inc
mov
repnz
mov
orl
inc
repnz
mov
jb
pop
xor
xlat
test
sub
mov
daa
fstpt
and
add
fldl2e
pop
dec
xor
push
das
mov
xor
or
sub
xchg
mov
jae
or
mov
incl
inc
sbb
jg
shr
loop
cmpsb
rcll
xchg
sub
adc
jmp
inc
ret
xor
sahf
rcll
inc
dec
push
cwtl
adc
pop
popa
or
xor
lahf
fstpt
sahf
adc
and
pop
add
and
mov
cmp
mov
stc
pop
iret
sbb
lock
xor
jo
jg
ljmp
outsl
movsl
ljmp
push
mov
outsl
les
test
lea
in
push
rolb
add
or
mov
aaa
mov
pop
ds
add
mov
ljmp
rcr
adc
jo
outsb
and
sub
test
inc
je
ja
push
lretw
mov
loop
ljmp
shlb
push
push
stc
and
gs
insl
std
lcall
cli
es
ja
ret
or
sub
push
mov
inc
pop
inc
mov
insb
pop
fistps
push
cmp
mov
sbb
aam
lcall
dec
mov
cmp
sbbb
movsw
dec
jmp
mov
inc
sbb
inc
ljmp
cs
xchg
or
enter
mov
dec
pop
and
out
dec
addr16
push
ljmp
dec
xchg
jmp
repz
clc
cmp
xchg
lret
fidivrl
fnstenv
cmpb
add
push
sbb
nop
dec
orl
loop
out
lret
fimuls
mov
lcall
or
inc
xchg
mov
repnz
jo
dec
pop
cmpsb
or
addb
in
icebp
lds
xor
jno
lods
sub
ds
xchg
in
cwtl
data16
mov
es
mov
mov
lret
lret
sti
in
cltd
call
sbb
mov
ljmp
loope
jo
jns
cli
fwait
loopne
sbb
mov
mov
inc
jmp
sub
pop
mov
movsl
xchg
aad
xor
xor
aaa
jae
cmc
adc
push
incl
in
imul
enter
sarl
hlt
scas
mov
cmp
pusha
aaa
mov
repz
insb
cmp
das
movsl
pop
push
movb
adc
cmpsl
je
mov
mov
aas
mov
popf
rep
fldl
fwait
xchg
inc
loop
lret
iret
pop
mov
dec
movsb
jne
fisubl
lcall
out
addl
mov
jbe
adc
iret
nop
lea
roll
adc
push
adc
ss
outsb
pop
xor
iret
scas
pop
cmpsb
adc
mov
or
lcall
rol
fisttpll
cmpl
push
jae
mov
dec
add
cmp
lods
push
fcmovne
sarl
push
xchg
loope
test
sub
fdivrl
aam
cmp
test
mov
fdivs
mov
and
insb
pop
ret
push
push
cli
pop
pop
loopne
test
jbe
mov
je
js
ljmp
pop
sti
or
imul
mov
xchg
fs
lock
decl
and
mov
test
pop
jmp
or
popa
sahf
push
sbb
or
mov
cmovb
jle
jmp
int3
jmp
xchg
jg
xor
incl
or
and
movsl
lcall
sub
icebp
jne
rol
push
adc
adc
sbbb
icebp
pop
loop
fidivl
jge
iret
stc
lods
jns
dec
data16
ljmp
pushf
loopne
push
xchg
adc
push
in
cmp
dec
les
stc
jge
mov
lcall
cmp
aas
outsl
jge
cli
dec
pop
movb
les
xor
jecxz
ljmp
shl
stc
push
enter
xchg
cltd
cs
inc
sub
test
mov
cmp
mov
cmp
pop
xchg
cmpsb
dec
jecxz
xchg
ror
lahf
rorl
or
inc
lahf
pop
in
xchg
mov
mov
add
and
inc
fstpl
addr16
out
sub
mov
icebp
call
adc
or
dec
push
mov
decl
dec
loopne
cmp
cmp
hlt
pop
mov
adc
mov
jle
and
sub
xor
and
mov
pop
lcall
add
pop
jbe
mov
xor
in
dec
and
loop
xorb
fadds
cmp
incl
jbe
aam
xlat
in
sbb
cs
add
or
rorl
incl
push
call
sbb
jg
jno
test
or
pop
call
ret
jle
loop
cmp
mov
inc
xchg
cmp
out
jb
inc
incl
cld
mov
sub
adc
pop
sahf
rcrb
fisttps
div
push
clc
in
mov
ret
std
shl
jo
jecxz
inc
ror
mov
scas
or
push
mov
lahf
out
js
decl
push
fwait
dec
enter
fucomi
lret
sub
jno
out
push
cmp
jmp
scas
into
xchg
and
xor
mov
pop
push
push
mov
shll
sbb
into
pushl
test
fsubrl
mov
rclb
in
sub
cmp
call
lret
rorb
cli
sbb
fwait
sub
sub
fimull
iret
xchg
nop
mov
jns
push
or
push
sub
das
push
jnp
outsb
pop
sbb
or
cmp
push
lret
ljmp
int3
test
stc
lock
inc
hlt
das
dec
fsubl
call
orb
or
pop
mov
fcom
in
push
xor
mov
push
cmp
sbb
incl
xchg
inc
es
loopne
xor
jno
shrb
nop
flds
incl
insb
cmp
pop
jg
cmpsl
pop
push
xchg
popf
cmpsb
jo
jmp
pop
cmpsb
cmp
dec
sub
add
dec
out
insb
or
in
call
mov
mov
mov
sbb
adc
inc
cltd
mov
push
adc
fildl
cwtl
jmp
leave
add
inc
lcall
lods
jge
push
push
xor
sub
hlt
push
leave
movsl
add
lock
lea
dec
hlt
mov
inc
mov
mov
mov
jmp
mov
clc
sarb
cmpsl
lods
fsubs
jmp
jecxz
popf
pop
push
inc
mov
mov
decb
dec
stc
jne
ljmp
aad
adc
ljmp
add
add
mov
and
loop
jmp
ret
out
in
scas
inc
or
mov
lahf
call
loopne
je
pop
int
push
dec
jecxz
adc
loope
je
out
roll
pop
out
icebp
jg
and
dec
push
adc
cli
ret
pop
loop
and
fidivs
clc
cli
mov
call
xor
neg
cwtl
in
or
push
hlt
cmc
mov
sbb
sub
inc
push
push
jmp
jmp
push
mov
mov
mov
mov
loop
xchg
shll
jb
cmp
lcall
cld
int3
enter
out
ret
insb
jmp
jp
out
mov
mov
movsl
adc
inc
into
sub
xchg
cltd
add
jle
inc
movsb
jo
mov
outsl
jo
xchg
sbb
fcompl
rorl
jb
scas
scas
jecxz
mov
imul
cwtl
imull
lea
daa
cli
xchg
jo
pop
je
fincstp
or
arpl
push
dec
sbb
pushl
sub
mov
stos
shlb
shrl
lock
dec
pop
sub
divl
mov
xchg
in
xchg
incl
ss
or
cmp
jb
out
or
jno
and
incl
push
rol
into
ja
ret
cmp
cltd
ds
frstor
cmp
js
push
xor
idiv
gs
cmpl
dec
aad
js
sbb
mov
rclb
mov
jg
test
cmp
cmpsb
mov
mov
aas
hlt
decl
leave
sub
lds
jbe
mov
mov
fsubrs
int3
lcall
std
sub
and
insl
addr16
or
stos
mov
jb
push
test
cli
jecxz,pn
int3
ficomps
push
ss
test
add
lds
inc
inc
iret
repnz
cmp
jmp
pop
ret
loope
mov
jbe
jmp
xor
mov
movsl
push
decl
lahf
mov
pusha
sub
push
loopne
mov
mov
out
pop
out
lods
ret
lcall
cmp
xchg
xchg
outsl
scas
cmp
js
out
lock
cmpsl
lds
std
pop
hlt
dec
ss
mov
xchg
push
fs
xor
adc
jne
ss
pushl
push
or
fsubr
mov
jbe
add
lock
mov
jmp
xor
mov
loop
repz
lods
sub
add
add
ljmp
lods
mov
pop
fwait
xor
jg
jmp
push
int
xorl
inc
dec
dec
insb
imul
fstpt
mov
jp
aaa
xchg
scas
test
push
pop
push
jns
fidivrs
imul
mov
fldenv
pop
cmp
mov
jmp
add
pop
dec
or
add
sub
cmp
mov
movsb
adc
pop
cli
arpl
sti
lcall
sarl
out
push
dec
adc
std
std
pushl
xchg
jbe
pop
lcall
int
or
sub
and
loope
out
fstpt
call
dec
pop
roll
push
shl
icebp
notb
mov
push
xchg
stc
stc
jo
pop
cmpb
fidivl
adc
pop
xor
out
ffreep
call
and
pop
pop
aas
loope
xchg
fs
out
loope
push
mov
nop
int3
mov
ljmp
clc
mov
call
lahf
test
repnz
mov
lcall
jnp
push
je
jle
rcl
ss
adc
loopne
or
mov
jmp
push
hlt
pushf
test
test
rorl
mov
pop
cs
xor
sti
cmp
decl
rcll
jle
and
mov
xchg
mov
mov
andb
jb
push
test
movsl
jnp
rolb
ret
cmp
pop
inc
out
jl
addr16
loop
xchg
mov
in
sbb
sub
pop
gs
inc
adc
ret
push
add
in
pushl
imul
mov
subb
das
nop
dec
js
mov
aas
shrl
jle
adc
lret
add
push
fdivr
cmp
sbb
mov
pop
int
rorb
cmc
pushl
js,pn
pop
dec
push
inc
inc
notb
test
add
mov
insb
sbb
lcall
add
xor
mov
fldcw
push
adc
sub
xlat
inc
sbb
xor
jmp
insl
xchg
sbb
and
std
jae
mov
js
add
or
cmpb
xchg
cmp
add
push
cwtl
jno
add
push
fldenv
pop
mov
icebp
rorl
inc
and
cli
dec
mov
fistpl
or
or
fstps
xor
xor
rcrb
ljmp
inc
and
shl
int3
outsb
dec
inc
push
fidivrs
inc
pop
jle
mull
or
das
sar
push
fs
sbb
cltd
aas
inc
push
jo
dec
jecxz
push
xchg
and
xchg
jmp
jl
fdivl
xchg
in
mov
gs
lods
mov
and
incl
sarb
sbb
push
lea
jecxz
orb
in
jle
or
lcall
mov
jnp
or
xchg
adc
popa
mov
icebp
and
sub
add
mov
cltd
imul
jle
decl
pop
dec
les
push
xor
test
xor
clc
push
xchg
sub
cmp
pop
cmpsb
xchg
jmp
test
adc
mov
pushf
js
cmp
dec
insb
test
mov
pop
movl
or
xchg
pushl
adc
movsb
cld
xor
or
cmp
mov
stc
and
subb
fisttps
mov
arpl
dec
dec
inc
or
lods
adc
push
or
xchg
adc
jbe
lret
mov
pop
addr16
jnp
loopne
dec
adc
jmp
mov
arpl
outsl
add
mov
ljmp
push
test
dec
xchg
test
outsb
or
pop
hlt
jmp
ds
adc
loop
dec
xchg
dec
sub
dec
lods
or
movq
pushl
movsb
xchg
fcmovu
or
xchg
out
loop
lods
lods
push
icebp
loopne
sbb
ret
sbb
decl
xchg
stos
mov
and
mov
jne
pop
mov
and
aam
insl
test
cmp
mov
push
jmp
dec
fwait
mov
cmp
in
cmp
stc
arpl
mov
mov
inc
enter
pop
cmc
movsb
in
shll
fbstp
scas
lret
inc
or
decb
add
cmp
pushl
test
mov
pop
and
or
shlb
pop
inc
and
pop
lods
sbb
sub
sub
dec
in
pop
pop
test
or
daa
push
shr
lcall
enter
and
sti
sbb
pop
xchg
test
scas
add
xchg
pusha
xor
cld
int3
mov
std
lcall
lahf
faddl
lods
xchg
lahf
lret
outsl
mov
aas
lods
mov
add
fcoms
mov
pop
decl
inc
jno
dec
mov
arpl
repz
dec
xchg
fwait
mov
lret
cli
jmp
mov
icebp
adc
jnp
in
lods
fcoml
pop
xor
call
out
mov
test
mov
mov
jno
sub
push
and
jl
rorl
call
ja
mov
ret
mov
sub
adc
pop
fld
in
div
incl
mov
incb
cmp
rcrl
or
in
jno
inc
push
je
incl
push
and
jmp
jnp
rorb
mov
xorb
ud0
icebp
push
les
add
push
test
jne
pop
popf
fwait
push
pop
inc
sbb
inc
adc
mov
je
pusha
inc
mov
imul
xchg
test
imul
lock
mov
mov
ror
xchg
sbbl
aam
pushl
or
add
lods
pop
pop
pop
call
cld
inc
jl
adc
inc
leave
cld
cs
xchg
push
sarb
movsl
sub
jle
pop
lea
aam
xor
sub
movsb
stos
lods
dec
sub
lcall
ljmp
xor
popf
and
adc
fisubrl
popf
xchg
lcall
movsl
lret
incl
fmuls
xchg
movsl
shrl
jg
mov
iret
pop
or
xor
call
cmp
sbb
enter
jbe
push
mov
and
xor
and
cmc
shrb
push
das
jle
ret
negl
in
mov
mov
add
outsb
jbe
int3
lods
xlat
mov
dec
jmp
jle
in
sub
adc
cmpsl
xchg
ret
inc
fsubrp
mov
xlat
js
lret
lods
call
inc
fdivl
and
js
in
shl
push
pop
inc
incl
push
xlat
and
or
cmp
cmc
lret
call
or
mov
and
stc
idivb
fldt
xor
mov
mov
stos
ds
xlat
clc
ljmp
imul
in
lods
or
xor
or
add
outsl
or
push
pop
std
mov
cltd
or
insb
gs
or
jl
pop
and
mov
mov
inc
cld
mov
cltd
mov
mov
xchg
dec
xchg
js
jmp
aad
fnstsw
pop
out
push
orb
push
aam
lods
pop
and
lods
dec
stos
pushl
jmp
pop
push
inc
test
pusha
pop
lahf
mov
xchg
icebp
mov
ljmp
mov
lret
mov
out
pop
je
adc
xor
call
bound
or
lret
jp
aam
hlt
and
mov
dec
mov
adc
jl
mov
dec
shlb
dec
inc
ds
fcomip
js
orl
repnz
inc
add
aam
inc
enter
cltd
sub
mov
faddp
xlat
fwait
cmpsb
push
cld
mov
fisttpl
fistpll
fcmovnb
loopne
lret
outsb
into
imul
movsb
cmp
jge
or
nop
mov
ret
jmp
jo
ds
xor
xor
adc
jbe
adc
mov
sub
sbb
call
aad
movsb
push
scas
sbb
mull
mov
or
jb
or
sbb
decb
mov
push
jge
mov
filds
mov
pand
pop
mov
jnp
jmp
push
pop
fdivs
mov
or
clc
and
cmp
sub
neg
jns
cmc
mov
mov
push
clc
push
dec
rolb
push
vaddpd
fisubrl
xchg
xorb
and
mov
push
jmp
dec
push
mov
jno
cmpsb
fwait
ret
call
popf
sub
jmp
into
mov
je
pop
dec
jmp
mov
out
pop
insl
jbe
arpl
lock
lea
dec
lret
shr
fs
es
hlt
outsb
mov
mov
jne
lcall
lods
mov
cs
adc
ret
pop
les
jnp
imul
bound
das
clc
jbe
pusha
shrl
cld
xchg
das
aaa
fs
jnp
push
inc
andb
ljmp
mov
inc
ror
cmp
dec
mov
inc
loop
or
pop
or
ljmp
jecxz
dec
or
sbb
cmc
out
push
dec
pop
add
jg
fists
mov
incl
adc
or
dec
xchg
and
fsts
mov
inc
push
pushf
mov
sub
cld
call
jns
in
sar
jg
mov
mov
ret
inc
dec
mov
aaa
cwtl
jg
or
pop
fcomip
pop
mov
mov
mov
aad
fld
bound
xchg
or
jo
std
lcall
bound
push
fnstenv
rcl
pop
adc
sub
and
push
mov
jmp
fwait
add
out
clc
ja
stc
add
xor
xchg
jne
sar
scas
push
imul
stc
cwtl
cmp
shll
fcmovb
lds
lcall
push
nop
mov
jmp
jmp
es
mov
jo
pop
push
popa
div
inc
and
and
imul
ss
xor
stos
push
xchg
cmpsb
mov
and
dec
call
add
cmp
data16
setnp
test
cmc
pushl
inc
push
iret
cmc
fisttpll
andl
lcall
cmp
dec
sbbb
cmpb
or
lock
aaa
loopne
mov
into
jg
call
adc
popa
std
xor
and
mov
lcall
lods
clc
push
test
imul
xchg
negl
test
pushl
movsl
es
aad
stos
out
std
les
mov
inc
pop
rcrl
ljmp
mov
sbb
insb
outsb
cmp
aad
add
sub
js
pusha
jb
mov
push
xchg
aam
and
repnz
fmul
lods
mov
mov
push
xchg
stc
push
or
and
incl
dec
cmpsl
xchg
push
clc
test
jbe
sub
into
inc
or
les
call
nop
shr
push
test
call
adc
sbb
test
mov
jecxz
jbe
sbb
les
insl
sbb
cmp
decl
out
cmc
mov
adc
pop
dec
bound
xor
int
sbb
pop
mov
lods
gs
lock
pop
dec
loopne
pop
lods
or
adc
xchg
push
sbb
decl
aam
mov
mov
pop
pop
cmp
fists
and
popf
ljmp
cmc
jmp
xchg
push
mov
add
leave
add
lds
mov
jmp
xchg
lcall
xchg
cmc
inc
leave
call
lea
adc
push
xchg
test
lcall
cmp
lods
cmp
adc
or
mov
mov
call
mov
sahf
inc
xchg
dec
fistpl
and
call
test
or
test
in
mov
inc
test
shl
mov
lret
mov
and
and
imul
mov
sbb
cmc
aam
pushl
cmc
jo
or
inc
in
aaa
addr16
aam
insb
jl
mov
jo
movsl
xchg
scas
jae
xorb
sarl
test
push
cmp
mov
jecxz
mov
jle
rcrl
test
aas
movsl
sub
jns
push
mov
shr
jmp
cmp
pop
outsl
dec
rcrb
sbb
stc
into
fsubl
xchg
clc
ljmp
pop
dec
cmp
js
add
pop
cmpsl
pushl
rcll
rcrb
ljmp
inc
sub
das
arpl
jmp
inc
and
xchg
jg
cmp
loope
test
mov
popa
movsl
mov
ret
adc
mov
cld
fcomip
jmp
lret
jg
rcrl
jbe
hlt
xchg
outsl
cltd
xchg
push
mov
pop
and
push
aam
push
fidivrl
shlb
mov
fstpl
cmp
xorb
decl
pop
fyl2xp1
cs
mov
clc
cmp
test
cmpsb
jp
jmp
outsb
aas
das
or
loop
xor
mov
push
push
mov
mov
mov
sbb
sbb
scas
adc
mov
push
out
push
inc
mov
pop
arpl
mov
call
movsb
and
adc
fildl
ds
push
stos
movsb
rcl
push
mov
mov
aaa
std
pushl
daa
movsb
stc
add
xor
push
jnp
int
pushf
mov
sti
pop
clc
rcr
insb
lods
mov
sbb
jne
imul
repz
stos
jmp
jmp
lock
sbbl
or
xchg
or
mov
push
jg
sbb
cmpsl
andb
and
jb
mov
sbb
cmp
int3
decl
clc
sbb
push
sbb
xor
sub
es
jbe
cmpsb
inc
jae
mov
cli
ret
movsl
iret
and
lock
mov
mov
add
jp
push
iret
dec
popl
push
shr
ret
sbb
mov
xlat
fwait
gs
dec
pop
in
into
cmp
movsl
fldt
rcrl
mov
pushl
push
les
lods
pop
xchg
sub
mov
jmp
ja
dec
fisubs
fs
pushf
cltd
xor
movsb
cmpsl
pop
stc
imul
decl
mov
outsb
pop
dec
dec
cmp
testb
xchg
sub
or
sub
ljmp
pop
jo
into
int
outsb
sub
cwtl
xchg
in
jecxz
loop
jge
orps
scas
push
mov
cmpl
sub
pop
cs
xor
pop
cmp
stos
xor
lock
data16
mov
fwait
aaa
sbb
je
aad
add
ds
call
insl
inc
mov
hlt
sar
mov
sarb
jne
jmp
mov
dec
cmp
mov
jecxz
cmpl
jle
pop
mov
sub
fisubrl
fildl
mov
sub
ljmp
inc
jns
inc
jp
xchg
add
push
lcall
movsb
mov
adc
lret
adc
or
stc
imul
mov
decl
or
sbb
mov
fstpt
leave
fs
mov
jle
fisttpl
lock
lods
pop
or
cmp
shrb
jmp
hlt
stos
sbb
incb
pop
or
sar
in
popf
test
xor
fs
popa
pushl
std
cmpsl
lods
das
cs
or
pop
rcrb
test
push
movsl
decl
hlt
dec
adcb
adc
sbb
mov
cmpl
lock
ljmp
add
jmp
stos
mov
rclb
mov
cld
lcall
mov
arpl
cmp
rolb
add
cli
sbb
lahf
fildll
loope
pop
push
bound
cld
sub
nop
orl
sbb
and
xor
cld
sti
xor
insl
loop
insl
aaa
mov
cld
decl
decb
hlt
inc
stos
inc
ss
adc
adc
pusha
popa
push
cwtl
lds
mov
pop
rol
xor
outsb
rcrb
call
xlat
stos
daa
nop
pop
iret
lods
mov
add
insb
sbb
cmp
xor
cmp
cmp
insl
repz
ret
gs
lcall
lret
outsl
aam
enter
ret
push
xor
and
and
xor
sbb
lea
fucomi
dec
push
mov
icebp
lret
ficoml
mov
popa
mov
shll
xchg
repz
pushl
sbb
je
ret
adc
sub
cmp
aam
xor
sbb
mov
cmpsb
cmp
in
jno
js
scas
mov
insl
dec
ffreep
insl
inc
dec
test
cli
sub
call
push
dec
cmpsl
mov
xor
xor
jne
stc
sbb
loop
xchg
mov
add
aaa
mov
mov
cmp
sbb
jg
sti
adc
je
xor
cli
in
xlat
lea
jg
lods
push
push
out
add
jmp
push
cld
ljmp
aaa
hlt
fwait
push
pop
ja
ret
cmpsl
mov
ss
xor
aas
xchg
or
decl
jbe
dec
test
call
test
mov
enter
xor
test
fidivrs
pop
mov
ljmp
fwait
mov
orl
mov
cs
sahf
sbb
test
loopne
mov
add
ljmp
dec
outsl
frstor
jnp
int3
adc
jg
jbe
sbb
loopne
and
hlt
out
pushf
mov
lods
pop
pop
ljmp
test
cli
xchg
push
sbb
in
jne
jl
mov
test
cld
fldlg2
xchg
popf
push
pop
adc
xchg
sbb
jg
insl
sti
mov
xchg
filds
or
cmp
insb
dec
sbb
imul
arpl
call
xor
jns
adc
lods
xchg
out
clc
push
insl
shr
pushf
jno
outsb
lods
fmuls
mov
or
dec
insl
push
mov
xchg
mov
xchg
adcb
mov
lea
mov
mov
in
addr16
lcall
mov
mov
add
pop
pusha
ds
mov
sbb
mov
and
and
lahf
pop
das
out
mov
push
outsb
rcrl
pushl
ret
xor
repnz
icebp
ret
std
adc
aam
js
lahf
ss
mov
cmp
test
jl
mov
or
js
sahf
xchg
hlt
mulb
lcall
decl
out
xor
mov
in
rol
cmp
mov
cltd
push
mov
jg
pushl
inc
scas
mov
or
cltd
mov
arpl
sahf
je
int
inc
in
add
cmpsb
scas
lret
cltd
cmp
adc
repnz
fistpl
push
loop
lea
das
js
fildll
fisubl
dec
and
int3
in
loopne
call
ret
bound
dec
cmp
iret
nop
push
into
icebp
or
dec
fwait
rcrb
mov
push
ret
sbb
push
or
cltd
jnp
add
mov
sub
sub
cs
xor
test
clc
cltd
std
xchg
mov
test
add
cmp
inc
or
imul
rcl
pop
jg
add
and
dec
sbb
mov
fisubrs
cmp
outsl
pushl
icebp
pop
adc
inc
andb
inc
lods
jge
popf
pop
int3
jae
sbb
in
lret
pop
icebp
jmp
xchg
js
repz
ja
inc
cmp
cmp
and
lahf
jl
lcall
or
cmpsb
cld
insl
jecxz
jbe
mov
cmpsb
in
in
adc
lcall
cmpsl
sub
cli
mov
and
sub
jnp
or
push
les
mov
lea
mov
jbe
daa
push
push
jg
inc
rorl
bound
lock
fwait
out
add
out
mov
jmp
lds
stos
iret
sub
pop
pop
push
xlat
outsb
lcall
call
call
stc
pop
sbb
mov
stc
xchg
mov
nop
lret
mov
add
out
adc
mov
jg
jne
addl
movsb
jae
enter
adcb
fcomp
mov
clc
loopne
or
call
ljmp
ja
adc
inc
pop
arpl
dec
or
nop/reserved
jmp
dec
jle
decl
fdivrl
add
mov
aad
outsl
dec
loopne
sbb
pop
mov
mov
cli
call
out
stos
out
jp
mov
push
mov
xor
ffreep
les
mov
nop
mov
cmpsl
and
mov
fs
add
xor
ljmp
fdiv
leave
in
fbstp
dec
pop
test
sti
pop
in
fwait
lods
xchg
jl
adc
cmp
scas
repnz
cmp
lcall
mov
sbb
mov
inc
cmpb
js
mov
cli
jmp
out
mov
imul
addl
bnd
mov
mov
addr16
and
ljmp
cmp
shr
fisubs
stos
or
inc
stc
xchg
xchg
and
pop
jg
call
pusha
sbb
pop
inc
cmp
push
ja
fsubp
inc
jmp
hlt
or
jne
xchg
leave
xchg
mov
mov
push
stos
pop
dec
xchg
icebp
in
nop
cwtl
mov
push
into
fdivrs
or
or
and
push
mov
xchg
sbb
pop
mov
or
daa
pop
ljmp
insb
push
repnz
lods
and
loop
inc
loope
jmp
dec
std
push
mov
jecxz
pop
bound
mov
mov
ss
mov
mov
lahf
push
testb
pushl
sbb
rorl
aaa
shlb
xchg
ficomps
pop
push
push
js
ljmp
pop
inc
leave
cmc
pop
or
mov
movsl
imul
cmpsb
addb
cld
lea
js
sar
addr16
ljmp
dec
push
mov
pop
scas
or
shrl
test
jne
decb
decl
test
push
rol
in
xchg
dec
sub
jl
outsl
inc
mov
fwait
jno
push
xchg
mov
cld
jmp
fildl
add
adc
sub
pop
cmp
fdivrp
push
mov
sbbb
lcall
dec
or
arpl
fsubl
test
nop
shlb
pop
mov
jmp
xor
clc
das
shrb
bound
dec
inc
jb
je
jp
jle
cmp
pop
icebp
jmp
call
shl
mov
mov
push
cmp
dec
pop
dec
pop
lret
xor
fstpt
fdivl
pop
inc
stos
fcoml
out
enter
sbb
xchg
bound
shll
scas
cltd
fadds
stc
xchg
movaps
outsl
clc
call
sbb
or
mov
fsubl
inc
fiadds
mov
ljmp
add
push
xorl
outsl
push
cmp
test
lcall
and
loop
mov
push
mov
mov
cmpsl
lods
outsb
lods
mov
mov
mov
jmp
nop
fdivrp
push
push
mov
idiv
sarl
jmp
js
lret
adc
ret
mov
push
movsl
ja
bnd
mov
insb
and
pop
inc
mov
lods
subb
mov
xchg
dec
dec
add
pop
data16
incl
aas
jbe
andl
pop
inc
sbb
scas
or
hlt
mov
add
das
mov
call
ss
cmp
movsl
lret
movsl
clc
cltd
loope
jecxz
fwait
call
es
jg
cmc
mov
popa
enter
lea
sub
std
das
cli
dec
adc
std
in
pop
jnp
mov
mov
mov
ja
mov
cmp
lcall
cmpb
hlt
fld
testl
fs
mov
outsb
pop
push
sub
push
adc
stos
ljmp
lret
push
test
mov
mov
cmp
std
xchg
and
mov
pop
mov
dec
adc
decl
iret
lcall
adc
xor
or
push
test
sar
push
mov
cmpsb
xchg
cltd
jmp
or
push
pop
pop
enter
add
out
sbb
call
mov
iret
sbb
or
movsl
mov
shl
jle
mov
adc
or
ret
push
aas
insb
jp
das
mov
xchg
mov
mov
test
mov
and
aaa
std
call
or
push
test
movl
leave
addr16
xor
pop
sub
mov
sbb
adc
pop
fs
ficoms
pop
pusha
sbb
sbb
add
decl
nop
dec
pop
dec
cmp
lods
divl
adc
mov
je
fcmovnu
and
aas
test
sub
call
mov
mov
insb
or
sub
dec
mov
or
mov
scas
cmp
push
movsb
jb
lret
test
jmp
scas
xchg
mov
inc
jno
adc
pop
lods
mov
cwtl
enter
aas
mov
pop
ja
mov
dec
hlt
push
mov
stc
push
pop
fmull
incl
aas
xor
incl
cmc
mov
mov
mov
sbb
xor
inc
fstl
incl
add
popl
inc
ret
mov
cmpsb
mov
cmp
dec
decl
pop
lods
ss
and
jo
xor
stc
pushl
dec
sbb
movsl
jb
das
push
push
adc
pop
insl
inc
mov
and
aaa
and
stc
jp
call
ret
sbb
push
testl
out
inc
jge
cmpsl
jae
adc
addb
sar
dec
into
sub
xor
js
out
push
adc
xchg
dec
adcl
gs
rcrl
clc
mov
in
push
and
cmp
cmpsb
popa
jne
and
mov
mov
push
sub
push
daa
int
push
stos
or
dec
jnp
shl
sbb
and
idivb
scas
sbb
mov
mov
decl
es
jecxz
inc
arpl
out
mov
xchg
inc
push
adc
das
mov
movq
out
push
out
ret
pop
inc
push
stos
mov
jbe
dec
sti
fldcw
sahf
and
cltd
ds
push
aad
lcall
subl
push
cmp
test
xor
xor
jg
inc
jae
inc
rorb
mov
xchg
sub
dec
xchg
std
push
pop
sub
imul
lcall
cmp
ljmp
xor
xchg
rclb
xchg
sub
cmp
dec
test
out
add
call
add
jp,pt
ret
lock
jl
out
add
and
mov
jmp
inc
in
and
out
or
mov
mov
pop
mov
int3
dec
bound
push
outsl
bound
push
inc
pop
adc
mov
lret
scas
outsl
cmp
clc
mov
pop
jl
mov
lcall
dec
shlb
jg
mov
xor
pop
setle
ud0
incl
hlt
sbb
sbb
nop
repnz
outsl
mov
cltd
xor
lret
je
ret
fdivrp
ljmp
dec
adc
or
jno
jg
repnz
std
xchg
sub
ja
mov
push
fidivl
mov
lcall
ret
int3
fcmovb
dec
lahf
cmpsb
out
lds
push
xor
mov
aaa
std
fnstcw
mov
popa
xchg
or
pop
gs
add
shl
and
inc
insb
cli
xchg
and
pop
xrelease
pop
aam
add
scas
clc
lcall
mov
sub
fisubrl
bound
push
pop
movl
xor
clc
jl
nop
ret
aaa
sahf
inc
rcl
jge
and
push
rcl
arpl
sbb
jmp
mov
mov
aaa
add
repz
pushl
push
dec
fcomps
fs
mov
enter
clc
mov
into
jae
stos
inc
lcall
xor
add
dec
fdivr
cmp
lret
mov
sahf
inc
cmpsb
std
mov
push
mov
xor
xlat
cmp
cmp
ja
enter
jmp
lea
pushf
dec
push
adc
push
mov
cmp
mov
cwtl
push
xchg
shll
mov
cmp
jmp
cmp
addr16
inc
lds
frstor
adc
pop
ds
add
and
xor
fadd
cmp
out
decl
lods
sbbb
lret
sub
mov
in
scas
stos
adc
pop
cmp
dec
mov
and
xor
mov
test
inc
std
in
xor
decl
sub
popf
test
mov
pusha
pop
xchg
cmpsb
pop
mov
in
inc
ljmp
arpl
fstpt
icebp
push
sbb
add
mov
aad
ja
jns
ljmp
addb
cmp
xchg
xor
stc
addr16
sbb
lods
inc
xor
push
xchg
hlt
sar
jmp
adc
pop
mov
adc
cld
cmp
mov
ret
popa
std
call
sbb
fsts
cmc
fistpll
jg
lcall
lods
lds
and
call
jmp
mov
sub
js
outsl
jg
add
insl
dec
fwait
mov
dec
push
mov
hlt
adcl
ljmp
xchg
add
sar
mov
sti
mov
xlat
lds
in
in
dec
clc
jmp
fmul
subl
xor
fisttps
xor
mov
cmp
cmc
cmp
jno
sub
pushl
lret
dec
cs
int
dec
or
or
addl
mov
sbb
jb
cmp
out
cli
incl
inc
fistpll
lods
lea
xchg
push
lock
dec
push
cwtl
push
aad
repz
out
or
lret
shrb
xchg
movsl
mov
jg
loope
push
xchg
mov
out
sub
lret
cld
pushl
test
jge
enter
stos
mov
in
shlb
std
decl
xor
into
icebp
dec
sbb
addb
into
int3
lcall
pop
mov
sar
arpl
pusha
dec
adc
mov
adc
dec
xor
inc
xor
jb
loop
dec
or
rcll
lods
cmp
shll
std
iret
xchg
mov
loop
cli
adc
int3
ljmp
call
fcompl
cli
mull
lahf
popl
mov
out
xchg
fistps
aam
in
push
jo
jl
incl
add
pop
sub
pushf
sub
pop
out
scas
adc
into
jle
iret
lahf
add
jg
fxch
mov
sti
loope
cs
pop
mov
fwait
decb
mov
ret
push
pusha
and
aaa
dec
fldl
into
std
jg
incl
push
movsb
mov
xchg
xor
xor
jmp
fwait
jmp
je
sahf
pushf
fildll
fdivl
loopne
lea
and
and
dec
mov
sbb
push
cld
adc
jae
dec
insb
mov
add
cld
inc
push
mov
pop
pushl
jne
xor
dec
xchg
xchg
push
pushf
stc
mov
inc
pop
in
and
ja
sbb
mov
or
in
pop
lcall
sbbb
jae
arpl
mov
cltd
or
sar
fsubs
shl
dec
loopne
sahf
into
xlat
outsb
adc
aaa
addr16
test
pop
shr
insl
and
pop
decl
movsb
mov
fisubl
loop
pushl
scas
xchg
adc
pop
adc
adc
out
test
push
leave
push
mov
je
jbe
hlt
dec
push
je
mov
incl
jbe
mov
adc
jo
dec
pushf
sub
pop
sub
fiadds
cmpsl
insl
pop
xor
push
scas
cli
outsl
dec
movsb
test
loopne
popf
int
or
fstp
or
mov
jp
rcl
in
adc
sbb
js
fidivs
inc
aas
adc
push
pop
or
incl
jp
out
and
out
jl
sub
inc
out
inc
pop
fwait
mov
or
dec
call
xchg
test
bound
iret
xchg
outsb
lret
sahf
adc
lcall
in
in
fwait
decl
add
movsl
dec
fwait
push
test
popf
cmpb
pop
sbb
scas
push
outsl
xchg
decl
push
std
jg
push
loopne
mov
rclb
in
daa
in
outsl
push
lret
jne
fdivrl
or
mov
pushl
pop
mov
test
mov
sbb
scas
nop
mov
lcall
stos
xor
shl
and
fsts
mov
xchg
ret
lds
cmp
inc
jnp
inc
xchg
sub
mov
cmp
hlt
pop
jecxz
push
aas
push
lcall
mov
fmull
pop
fdivl
pop
inc
in
push
jle
xchg
jbe
sub
dec
out
mov
mov
stos
out
cmp
mov
or
imul
push
inc
xchg
ljmp
pop
scas
call
inc
dec
pop
push
lret
and
gs
mov
mov
xor
outsl
bound
mov
pop
imul
test
inc
jge
ljmp
mov
mov
scas
push
jo
mov
icebp
cld
cmp
incl
nop
pop
mov
mov
jne
add
pop
mov
inc
sub
fsubrs
ljmp
pusha
fnstenv
xchg
push
nop
gs
scas
cs
sub
push
mov
call
pushf
mov
call
mov
xlat
cli
mov
push
loopne
les
test
decl
out
arpl
mov
inc
push
fs
daa
decl
loope
mov
sbb
pop
ljmp
dec
xor
jmp
mov
out
jle
xor
and
lods
mov
sub
sbb
pushl
jnp
sub
push
rolb
out
mov
or
dec
leave
mov
lea
nop
push
push
lret
sbb
movsl
mov
inc
ret
cmp
in
xchg
outsb
js
out
clc
fabs
mov
lcall
xlat
test
decl
fidivl
rep
xchg
fimuls
or
cs
aaa
inc
lcall
pop
push
dec
mov
jmp
shrb
sahf
push
push
dec
push
or
ljmp
xchg
add
mov
mov
in
data16
jl
jg
mov
add
popa
test
incl
mov
cmp
push
das
lret
jbe,pt
mov
adc
inc
pushl
sbb
pusha
lret
test
mov
js
cli
ja
decl
iret
cli
mov
out
mov
cltd
pop
popa
inc
mov
mov
lods
xchg
mov
sahf
addb
pop
inc
sbb
imul
lcall
or
cs
fnstenv
xchg
sbb
in
xchg
daa
add
ss
cmp
pop
inc
fidivl
xor
mov
fs
test
std
mov
js
ss
call
enter
push
xchg
pop
rorb
cwtl
lret
movsl
jne
clc
inc
dec
jno
jmp
and
incl
ds
ret
shll
fimuls
adc
and
test
adc
mov
jge
push
xchg
xchg
sub
sbb
mov
jle
jp
xchg
add
pop
and
xchg
call
call
dec
cmp
fisubrl
imull
les
incl
sub
sbb
xor
repz
mov
inc
outsl
decl
pushf
dec
mov
push
fldcw
add
scas
ja
test
sub
mov
loope
movsb
mov
call
pop
push
push
mov
cmp
xchg
je
ret
stos
pop
pop
pop
xchg
repz
xchg
popa
and
incl
pop
jge
jmp
pop
test
mov
and
into
or
imul
pop
in
in
and
decl
jb
nop
enter
lock
imul
mov
xlat
roll
rcll
mov
push
cltd
in
sub
mov
xor
pop
cmp
in
pop
orl
decl
lock
inc
and
js
jo
ds
sub
incb
jmp
jg
hlt
inc
in
cmp
xchg
rcl
sbb
jg
rcrl
nop
sub
push
movsb
pop
push
cs
mov
bound
bound
arpl
pop
fsubrl
test
add
hlt
mov
cmc
jo
js
inc
cld
and
mov
call
xor
xchg
inc
in
insb
aad
or
cltd
jg
daa
idivb
jnp
jmp
xchg
cs
fwait
inc
lods
mov
cmp
cmp
cmp
xchg
test
xchg
ds
imul
sbb
imul
inc
pop
lret
cld
test
fsubl
push
jmp
xchg
shlb
aam
inc
and
and
loope
mov
es
fwait
pop
iret
adc
adc
mov
mov
icebp
lret
pop
aas
or
stos
sbb
out
mov
orb
out
adc
mov
or
rorb
jmp
xchg
addr16
jne
xchg
popa
pop
or
test
fisttps
push
mov
sbb
lcall
jecxz
mov
jo
inc
aam
or
out
or
jne
arpl
divl
decl
sarb
sbb
dec
and
and
pushf
and
sahf
jne
jne
push
lret
and
in
fs
add
fsubr
xor
add
enter
jg
inc
imul
adc
aas
dec
jl
mov
fcmovnb
aad
dec
inc
aaa
ret
cmpsl
adc
dec
imul
addl
ret
scas
pusha
ds
mov
jnp
rcrl
pop
in
sbb
cld
in
or
shlb
ljmp
fsts
cmc
lcall
and
jae
inc
out
sub
lea
pop
jnp
xchg
cmpsb
sub
and
rcl
mov
mov
mov
std
lods
jb
dec
scas
or
mov
insb
repz
enter
clc
dec
xlat
filds
xchg
call
in
out
pop
fwait
and
sub
lcall
lahf
sub
addl
mov
fidivrs
aaa
adc
jb
movsb
mov
add
gs
xchg
ja
or
xchg
fmuls
jge
popa
std
call
movsl
std
adc
push
cmp
incl
adcl
jae
dec
add
int
pop
mov
jg
pushl
inc
out
xchg
add
dec
out
cmp
jns
push
inc
out
xchg
add
ja
pop
pushf
push
pushf
lahf
jg
clc
jne
sti
jecxz
sub
push
dec
cmp
xchg
inc
cmp
adc
push
or
sbb
decl
nop
inc
stos
push
sub
popa
jmp
sub
xor
mov
daa
cmc
push
pop
nop
fdivrs
lcall
clc
fs
subb
and
push
or
test
adc
mov
jecxz
fisubrl
jo
popf
cmp
lcall
push
xor
cmp
lds
sbb
adcb
in
add
mov
sub
ljmp
mov
shrl
and
mov
inc
out
test
push
fs
ljmp
jp
mov
sub
outsl
subl
fsubr
pop
ljmp
xor
and
incl
sbb
jns
dec
divb
fisubl
mov
xor
jg
outsb
jge
cmp
and
or
pusha
or
aas
popf
sbb
sbb
decl
int
mov
sub
jmp
lock
fcmovnu
jbe
negb
imul
jmp
mov
aad
mov
hlt
push
stc
sbb
pop
call
adc
rcl
pop
add
inc
movsb
add
inc
lock
scas
in
incl
xor
movsb
inc
lods
mov
pop
mov
adc
js
filds
pop
sbb
xchg
cmp
push
lods
shrb
xor
inc
ljmp
adc
and
xchg
jecxz
outsl
mov
pop
jg
adc
push
xor
push
dec
je
add
fcomip
push
jl
xor
repz
mov
das
fists
adc
mov
inc
jmp
cmpsb
dec
push
ljmp
or
xor
or
mov
mov
and
ljmp
inc
dec
je
or
push
pushf
test
sub
dec
pusha
xchg
cmp
sbb
mov
loopne
push
ja
add
cmpl
std
decl
or
push
fbstp
pop
jg
or
mov
aad
jg
add
push
call
jmp
mov
stos
dec
aad
decl
jnp
imul
and
cld
or
lahf
aad
add
repz
incl
fmuls
sbb
scas
adc
xchg
pop
push
outsb
add
fs
dec
js
clc
jl
inc
inc
fnstcw
push
sub
cld
lcall
mov
pusha
cmp
cs
fwait
rcll
into
js
add
push
imul
xor
pop
and
add
repz
mov
aad
mov
mov
aam
and
decl
mov
shld
stos
xor
hlt
mov
and
aaa
push
sar
out
clc
mov
sbb
mul
out
loopne
mov
adc
lcall
addl
ds
mov
jae
jge
mov
int3
and
sbb
lcall
or
sti
sar
sahf
mov
xchg
sub
push
pop
in
jp
dec
movsb
cli
mov
adc
hlt
gs
sbb
xor
pop
fnstcw
int
cltd
and
insb
mov
stos
sbb
test
in
cmp
jae
imul
jge
mov
scas
mov
fstps
hlt
lods
call
loope
cwtl
adc
shll
cmpsb
hlt
xor
push
out
lock
mov
inc
xchg
add
fnstcw
icebp
pop
lock
mov
lea
movsl
je
pop
jl
shll
adc
incl
in
shl
mov
and
dec
and
sbb
add
pop
adc
sbb
loopne
pushl
xchg
jne
adc
ret
clc
loopne
pop
repz
dec
mov
dec
popa
fiadds
ljmp
xchg
pop
add
iret
adc
stc
cmpsb
adcl
xor
insl
pop
mov
ljmp
add
fcoms
addr16
iret
jne
adc
and
mov
mov
inc
dec
sub
aad
jmp
lods
push
loop
ja
les
jae
jecxz
push
call
mov
mov
ja
fcoms
push
push
xlat
push
es
jmp
jo
and
push
enter
cltd
loope
decl
int3
sub
ss
fstpt
cmpsl
xor
cmpsl
jg
loope
repnz
add
lcall
ss
and
movsl
lahf
push
sbb
sbb
fbld
out
mov
int3
divl
stos
adc
fs
xor
pop
push
sbb
mov
lret
dec
repz
mov
push
sbbl
mov
pop
test
js
lcall
inc
mov
sub
mov
fimull
xor
mov
loopne
call
sarb
pop
xor
sbb
xchg
inc
sarl
outsb
inc
jmp
pop
ljmp
movsl
mov
hlt
js
jecxz
xchg
out
jle
xchg
jecxz
push
mov
mov
lock
jb
xor
adc
mov
fidivs
lret
call
out
pop
lret
inc
sub
pop
ret
icebp
pop
mov
jle
sti
pop
add
decl
js
loop
push
lea
cli
das
cs
push
inc
push
cld
ret
xchg
sbb
mov
cli
jmp
jmp
stos
ffreep
adc
xor
rcrb
in
int3
out
mov
jbe
in
pop
dec
cmp
lret
pop
pop
shlb
sbb
clc
call
mov
dec
iret
das
inc
lret
mov
mov
mov
push
dec
imul
sub
add
sbb
aad
mov
cmp
sub
hlt
ret
add
pushl
mov
filds
mov
js
and
xchg
addb
sbb
xchg
incl
ss
inc
out
xor
les
std
sar
outsl
cmp
sti
es
stc
das
pop
cmc
aad
or
clc
orl
pushf
jmp
pop
jnp
scas
cmpsl
dec
mov
xorl
jne
sbb
jmp
sar
scas
pop
pop
loopne
rcl
add
push
icebp
ds
cmpsb
cltd
test
iret
pop
jno
pop
push
ljmp
xchg
or
movsb
pop
pop
cli
xchg
les
and
add
lds
dec
inc
push
xor
daa
jae
in
mov
std
push
cmp
ja
ficoms
decb
push
daa
mov
cmp
sub
add
clc
adc
cmp
sbb
mov
xchg
mov
push
dec
in
inc
xchg
lcall
call
psubusb
pop
jecxz
mov
frstor
call
fdivr
ljmp
jge
xor
sbb
leave
jno
outsl
jmp
rorl
call
or
ficomps
mov
cmp
dec
enter
mov
lcall
xchg
push
sub
std
push
adc
mov
iret
mov
cs
sbb
jp
ljmp
jb
cltd
mov
into
jb
add
xorl
call
adc
sar
sub
cmpsb
adc
daa
cs
cli
out
icebp
leave
decl
mov
test
cmc
arpl
pop
test
dec
adc
push
mov
imul
ds
lds
add
insl
xor
jecxz
xor
push
out
bound
in
and
jnp
incl
or
mov
inc
call
ds
jne
xchg
mov
jbe
fcoms
incl
xlat
push
out
or
inc
rcrl
and
sar
dec
add
sbb
mov
pop
rcl
pop
test
es
pushf
pop
cmovns
subl
mov
mov
pop
ljmp
test
sbb
sti
mov
push
jmp
lock
add
xchg
push
movsb
pop
mov
scas
gs
stos
jmp
push
jl
xor
sbb
cmp
rcr
cmc
jmp
lcall
xchg
push
inc
sahf
dec
outsl
xchg
fdivl
mov
mov
inc
int
aaa
jbe
lea
xor
push
add
mov
mov
dec
cmp
sub
xor
decl
xchg
inc
mov
jmp
or
jae
xchg
stc
lcall
cs
cmp
fcomip
jl
jp
adc
in
xor
iret
lea
clc
cmp
pushl
and
insb
mov
ror
mov
daa
mov
pop
sbb
les
jl
or
clc
pushl
cs
cwtl
lods
push
push
loop
test
xor
lods
ds
ljmp
dec
into
mov
add
jno
pop
iret
jns
jb
inc
jbe
or
xchg
xor
xor
ljmp
lret
fcomi
ljmp
in
cmp
xchg
sbb
nop
mov
popf
xor
mov
je
loop
push
push
or
cmp
inc
add
pop
and
add
movsb
shr
outsl
imul
jmp
push
lds
loopne
adc
xchg
jb
sahf
sbb
fwait
enter
and
lahf
pop
insb
sub
mov
and
dec
inc
lds
sbb
lret
adc
ljmp
jmp
jns
ret
sub
stos
loopne
push
or
neg
sarb
outsl
call
iret
mov
and
adc
test
fmuls
add
clc
daa
fwait
outsb
repnz
mov
inc
mov
push
aad
jg
push
jmp
xorb
pushf
lcall
arpl
fdivp
lock
out
add
sbb
adc
or
lcall
stc
lea
test
and
mov
movsb
sahf
lret
cmp
call
aad
vmread
cs
xor
pop
xchg
fdivrs
inc
dec
outsl
jmp
rolb
incl
push
xchg
and
fnstenv
lea
mov
push
or
pop
dec
iret
pushf
xor
lock
dec
enter
and
sub
decl
cmp
loope
adc
push
push
in
cli
call
adc
ljmp
dec
popl
movlps
mov
sub
dec
es
cld
mov
adc
ljmp
cli
xorb
popl
and
pop
mov
les
sbb
inc
pusha
jmp
incl
cmp
jnp
or
or
lock
ja
mov
into
dec
xchg
lcall
dec
adc
dec
test
jecxz
scas
push
jg
push
push
imul
imul
les
dec
adc
sbb
mov
mov
lcall
xchg
ds
xchg
xor
cmp
ljmp
inc
iret
adc
mov
sbb
add
in
sti
cmc
in
mov
cmc
pusha
lock
aad
cmpsl
inc
xorl
sub
or
clc
dec
pop
add
repnz
fisttpll
and
imul
or
cwtl
ljmp
subb
aas
mov
int3
cli
mov
std
nop
cltd
jbe
leave
ljmp
sarb
mov
mov
fidivs
shll
sbb
movsl
and
pop
ljmp
jg
sbb
cmovnp
orl
sub
icebp
mov
jmp
xchg
subl
out
xor
rclb
mov
das
arpl
inc
insl
popf
lcall
sub
add
xlat
pop
ret
sbbb
sbb
jge
xlat
pushl
fdiv
repnz
mov
or
loopne
or
imul
ljmp
push
xchg
add
dec
mov
clc
sbb
js
mov
and
push
and
cmp
icebp
inc
loope
dec
lds
add
jl
sbb
push
xor
pop
jbe
mov
clc
sbb
or
inc
icebp
int
xor
loop
jnp
adc
sub
mov
ret
push
sti
cltd
cs
rorl
ljmp
cli
xor
jmp
rcll
add
or
mov
jbe
jmp
sahf
push
neg
mov
dec
nop
ret
std
mov
int3
dec
dec
nop
repnz
sub
ljmp
in
es
dec
xlat
enter
movsl
mov
in
xchg
fs
jecxz
ja
repnz
pop
std
adc
jle
add
pop
std
leave
imul
iret
jnp
pushl
xchg
sub
inc
aam
lods
test
push
arpl
loope
inc
mov
cs
lcall
into
jb
subb
loope
mov
pop
adcl
and
ret
jmp
and
mov
xorb
test
xchg
jmp
ja
add
in
xlat
repz
ljmp
shlb
aaa
cli
pop
lret
cltd
sti
lret
test
pop
push
push
xchg
decl
movsl
sub
orb
mov
inc
arpl
jb
out
pushl
movsb
jae
adc
mov
lcall
jecxz
cwtl
or
add
jecxz
inc
mov
adc
aaa
sub
mov
mov
dec
lock
sub
add
cmp
mov
push
ret
mov
or
inc
mov
hlt
lcall
cs
rclb
or
scas
xchg
xor
mov
dec
hlt
sub
push
shrl
sub
mov
in
jmp
int
imul
jmp
dec
jecxz
test
cmp
xor
cmpb
incl
mov
pop
mov
xor
mov
lods
gs
jns
dec
pop
xchg
repnz
ljmp
pop
leave
rol
adc
imul
cld
cmp
adc
cld
in
call
mov
lahf
cmpsw
mov
fildl
mov
mov
loope
ljmp
mov
xchg
jnp
daa
mov
sti
or
or
or
pop
and
fsubs
jmp
dec
mov
cmpsl
add
mov
adc
int3
pop
mov
shr
add
push
mov
inc
loop
mov
pusha
mov
mov
mov
notb
lret
pop
add
scas
or
or
and
cld
push
and
fwait
cmp
adc
sbb
cmp
rcr
repz
call
aaa
outsl
ja
pushl
sub
lret
test
fidivrs
push
mov
mov
test
int3
mov
xor
loopne
and
pop
dec
inc
test
xor
pusha
loopne
mov
scas
les
outsl
fdivl
bound
mov
add
test
inc
sar
cmp
nop
and
outsl
cli
mov
or
adc
or
in
xchg
xchg
nop
push
scas
xor
pop
ficomps
sbb
jmp
aad
shrl
mov
push
rcrb
dec
mov
mov
jl
into
jno
pop
pop
repnz
das
fadds
or
xor
out
call
mov
test
dec
jmp
lock
sub
movsl
lret
sub
lcall
pop
sbb
sub
xchg
mov
test
fisttps
add
iret
lcall
mov
jmp
fnstsw
xor
loope
mov
fmull
lods
data16
jle
imul
jb
xchg
pusha
adc
in
inc
or
mov
pop
loope
pop
xor
dec
dec
sti
aam
pushl
shlb
jg
lds
mov
pop
jns
out
test
ljmp
fnstcw
push
stos
jne
inc
movsl
push
sub
push
or
mov
add
add
sub
popl
cmp
in
mov
adc
dec
jb
nop
xchg
jbe
sub
call
lock
fmuls
movsl
or
cmp
cmp
jmp
cld
mov
ljmp
pop
xorl
fcmove
rcrl
mov
out
clc
call
pop
xchg
lret
or
std
jg
xchg
scas
into
dec
jecxz
ret
jmp
xor
jns
xor
push
xor
lea
adc
xor
aas
jmp
push
pop
push
jmp
mov
repz
test
lds
mov
jo
cltd
incb
pop
push
jmp
cmp
fs
lret
flds
adc
mov
pop
pop
push
call
rcrb
ret
enter
mov
mov
adc
lcall
push
aaa
or
pop
and
lahf
sahf
ficompl
pop
movsl
pushf
dec
add
mov
jmp
cld
jecxz
in
pop
mov
loopne
les
addr16
scas
adc
nop
data16
inc
xor
sbb
lret
mov
cmpsl
cmp
xchg
jle
inc
test
call
decb
push
test
pop
push
or
mov
add
lds
and
addr16
sahf
push
xchg
incl
cld
lret
lods
dec
mov
repz
mov
cmpsl
mov
mov
jmp
pop
or
adc
mov
mov
cltd
in
inc
inc
mov
out
mov
cmp
jg
inc
lock
jecxz
xor
in
inc
xchg
std
mov
inc
xchg
push
or
mov
push
xchg
jmp
jb
loope
xchg
in
test
dec
jg
sbb
aam
stc
aas
pop
lods
add
xchg
cmc
push
mov
sbb
fwait
outsb
adc
loop
add
ss
out
movsl
pushw
ds
lcall
jl
lret
cmpsb
dec
inc
xor
into
mov
inc
rorb
movsb
incl
xor
fsub
sub
jnp
out
adc
pop
sub
decl
or
fwait
gs
stos
xchg
mov
jl
into
add
aam
pushl
mov
test
adc
add
cmp
lds
inc
shll
dec
push
shrl
daa
ljmp
jge
push
scas
lds
pop
lock
iret
or
push
mov
ljmp
call
and
push
cmc
lds
sbb
cmpsb
mov
xchg
icebp
sbb
push
or
dec
pop
inc
test
jne
or
jo
aas
call
pop
out
lret
mov
pop
jecxz
ljmp
popf
sub
loopne
xor
adc
mov
dec
scas
jl
mov
out
adc
jle
pushl
jmp
fidivl
jbe
lock
push
ljmp
dec
adc
sub
stos
pushl
fstp
dec
or
enter
cmp
xchg
xchg
push
jg
mov
push
test
outsl
and
lds
imul
adc
aaa
lahf
out
jg
cmpsb
fidivl
or
cmovs
pop
lock
cld
enter
dec
xor
inc
mov
stos
adcl
lcall
mov
icebp
filds
dec
fldl
adc
fidivs
xor
add
decl
shl
mov
and
scas
sbb
mov
jno
imul
incl
out
or
fsubr
add
sbbl
mov
push
push
or
call
push
hlt
mov
iret
cmp
out
dec
mov
xorb
ret
xchg
mov
out
cli
jmp
lea
add
nop
push
cmp
adc
aad
jle
pushf
mov
ror
decl
push
jecxz
cmp
inc
shl
jmp
into
repz
adc
psubq
incl
in
jge
mov
out
fst
push
pop
pop
jl
rcrb
jo
lcall
inc
outsb
loope
xor
ds
pop
jb
dec
push
scas
inc
xchg
loopne
sub
imul
mov
int3
je
mov
mov
test
bound
fldl
jmp
add
mov
outsb
lock
dec
rorb
cmp
jmp
xchg
push
jecxz
or
out
mov
pop
aam
xchg
pop
pusha
fdivr
inc
movb
divb
sub
cmp
popa
dec
sahf
decl
jns
dec
aad
mov
cmp
jne
xlat
sub
xor
loop
xlat
inc
xchg
jg
jnp
jmp
mull
or
cmp
push
mov
push
out
imul
test
into
pop
daa
std
pop
shll
or
add
mov
pop
lret
cltd
incl
mov
lret
push
aas
inc
movsl
in
push
js
jp
xor
ud0
push
xchg
push
jne
adc
jle
adc
lahf
hlt
jns
movsb
stos
dec
insl
and
ljmp
ljmp
add
xor
call
stc
roll
xchg
adc
enter
leave
pop
das
push
call
mov
mov
or
call
pop
mov
sub
sbb
jl
std
jl
sbb
outsl
lds
movsl
stos
ljmp
test
aaa
sbb
mov
mov
movsb
sbb
arpl
arpl
in
pop
inc
decl
out
pop
jns
outsb
js
scas
pop
lahf
pop
xchg
mov
jne
loop
into
mov
addl
outsl
adc
roll
mov
jg
sub
popa
pop
or
cld
dec
cmp
push
jp
mov
pop
or
fucomi
inc
je
xchg
inc
addr16
mov
inc
or
lds
jo
cmpsb
pop
push
pusha
sub
leave
mov
push
icebp
into
sbb
adc
ret
aam
loop
std
ljmp
scas
ja
xchg
dec
test
sbb
stos
jbe
sbb
sbb
mov
xchg
push
je
hlt
mov
mov
cmpb
jmp
movl
aam
jg,pn
ja
ja
repz
int3
pop
dec
xchg
stos
pushl
cld
pop
mov
jbe
jl
add
mov
push
push
add
ret
cmp
mov
adc
xchg
xor
adc
mov
ds
incl
imul
fldl
movsb
lahf
test
mov
sti
add
icebp
mov
push
cmp
iret
dec
or
sti
cmpsl
in
push
cltd
sub
scas
sbb
scas
sub
clc
inc
in
aad
lcall
stc
lock
or
aaa
pop
mov
sbb
sbb
jl
inc
push
xlat
xchg
popa
mov
clc
aaa
std
test
jns
pop
or
cmp
out
loop
lods
inc
mov
fisttps
call
mov
test
inc
mov
stc
ret
or
jecxz
mov
jmp
incl
nop
nop
add
xchg
lahf
dec
notb
mov
sub
lods
and
shlb
cmp
scas
push
lahf
push
loope
pop
movsb
das
movsb
call
call
or
je
movsb
xor
add
repz
arpl
mov
arpl
cmp
call
mov
nop
insb
ja
push
pop
sub
xchg
push
rolb
stos
mov
and
call
mov
xor
out
inc
sti
imul
sbb
push
lds
in
in
call
shll
inc
adc
shll
cmpsb
xchg
out
push
adc
adc
cmpsb
setp
add
inc
fs
mov
aas
jge
das
or
mov
mov
sti
testl
pop
inc
fs
das
dec
bound
hlt
pop
xchg
push
fmull
fwait
push
sub
pushl
jne
push
pop
dec
enter
xlat
cmp
hlt
ficompl
xor
test
jae
pushl
je
notb
imul
mov
mov
mov
jne
call
bnd
add
outsl
pop
mov
mov
jnp
ljmp
push
add
call
pop
ds
pop
pop
fimuls
push
or
popf
push
cmp
aam
mov
and
ljmp
je
je
cli
sarl
xor
sbbb
repz
sub
sbb
int3
push
lahf
aam
jnp
lcall
mov
or
xchg
enter
pushf
insl
lea
mov
adc
int3
sar
lcall
nop
cmp
outsl
adc
daa
cld
cmp
xor
in
ret
call
cwtl
aad
xor
sbb
inc
dec
scas
and
xchg
idivb
test
mov
stos
arpl
addb
dec
cmp
movsb
cmp
adc
mov
dec
push
loop
fcompl
decl
pop
lds
add
cmp
mov
cmovs
jecxz
dec
scas
shll
decl
les
jg
rclb
iret
fcomp
sub
mov
add
fsubrs
test
call
sti
xchg
pop
xchg
in
and
loop
mov
jnp
sub
push
bound
jo
pushl
pusha
ds
xlat
fdivs
mov
dec
repz
addr16
or
dec
dec
aas
jmp
inc
in
dec
mov
sbb
mov
ja
mov
or
xor
arpl
lcall
notw
dec
jl
jnp
js
int
nop
lds
sbb
mov
ljmp
and
xchg
cmpb
xor
or
adc
pop
and
push
cmp
pushl
mov
cmc
pop
sub
fdivs
decl
jle
loop
cld
daa
jnp
loope
xor
cmp
jo
or
cmpsb
push
leave
or
inc
andl
pop
sub
or
rclb
leave
xchg
dec
pop
adc
mov
clc
lcall
mov
pop
fwait
jmp
jnp
cli
push
jecxz
call
adc
je
mov
dec
outsl
movsb
sub
std
lock
call
fsts
shll
insb
jmp
pop
das
cmpsl
cld
mov
adc
fidivrs
fdivrl
in
out
je
mov
pop
loop
mov
jnp
ss
pop
lods
xor
decl
add
cs
xchg
sbb
mov
call
push
mov
xchg
enter
adc
arpl
mov
xchg
and
std
cmc
test
call
push
jl
scas
jg
ljmp
jg
in
stos
fdiv
aaa
data16
push
mov
in
cmp
ret
ljmp
jp
out
nop
out
mov
xor
decl
bnd
rorl
testb
sti
dec
insl
test
insl
sbb
movsb
pusha
movsl
adc
ljmp
cmp
test
mov
fucomp
es
jmp
dec
push
jo
pop
cld
inc
xchg
test
or
int3
rcrl
lret
shll
pop
adc
lcall
xor
jae
inc
sbb
imul
mov
mov
cmp
sub
xchg
in
pushl
aas
jno
fildll
inc
mov
shl
lret
lret
iret
loop
std
jg
jmp
std
test
sbb
ret
mov
cmp
aaa
popf
inc
dec
mov
lahf
clc
xchg
arpl
icebp
cmp
lcall
lds
ds
incl
cld
sbb
mov
lods
pusha
aam
sbb
jg
jge
inc
cltd
pop
nop
in
aam
divb
repz
jle
mov
jecxz
imul
pop
data16
jne
xor
in
push
test
xor
mov
daa
cmp
loope
mov
jb
push
sti
jg
outsb
fwait
mov
loope
sub
mov
call
test
out
pop
inc
into
jbe
rclb
aam
clc
add
and
gs
dec
mov
dec
inc
jmp
mov
add
push
mov
mov
lods
repz
adc
decl
inc
xor
dec
dec
push
iret
insl
ret
cltd
loop
ljmp
xchg
aam
add
lcall
lods
push
mov
cmp
test
mov
cld
icebp
xchg
ss
push
decl
pop
mov
inc
daa
mov
mov
add
test
cmp
call
and
pop
clc
fidivrs
imul
movl
xchg
cld
pop
mov
and
jns
xchg
aaa
stos
out
shrb
push
std
xchg
jecxz
jle
or
enter
out
daa
out
std
push
cwtl
out
lcall
testl
cmc
test
sbb
stc
je
test
inc
aam
jnp
insl
imul
mov
movsb
es
sub
cmp
decl
notb
fmull
adc
icebp
int3
fcoml
or
mov
adc
mov
imul
or
inc
cmp
inc
or
dec
xor
cli
jns
inc
loop
enter
inc
lahf
jb
incl
fdivl
test
mov
icebp
mov
sub
jne
sub
enter
gs
inc
scas
cwtl
jecxz
fs
rcr
mov
push
jns
pop
scas
mov
js
les
scas
fsubl
incl
cld
call
cmpsb
aaa
call
scas
pop
fst
inc
cmc
mov
std
lret
mov
pushl
dec
xor
mov
rorl
shl
adc
repz
rcrb
rcrl
subb
imul
enter
sub
mov
stos
ss
call
and
popa
mov
test
ret
mov
xor
fdivr
fnstcw
aam
mov
cmpb
mov
add
in
pop
lcall
std
mov
mov
sub
shrl
mov
pop
cmp
ss
loop
sahf
aad
sub
leave
mov
jmp
jnp
fidivrs
loopne
xchg
enter
fxch
mov
cli
popa
adc
int3
pushl
hlt
scas
inc
sarl
cmp
les
jge
popa
add
add
ds
ljmp
nop
clc
mov
in
push
cli
jae
sbb
lcall
mov
decl
mov
and
ljmp
imul
and
jg
cmpsl
lea
in
iret
mov
enter
in
sbbl
sub
out
negb
rcr
mov
lods
movsl
cli
call
cli
sti
xlat
mov
mov
cmp
adc
mov
mov
ret
sar
pop
mov
mov
popa
aas
xor
inc
jmp
aam
mov
fnsave
shlb
xchg
mov
cmpsb
sahf
inc
or
inc
bound
adc
lcall
mov
loop
xchg
push
les
pop
cmpsl
test
and
adc
mov
cld
daa
int3
adc
insb
sub
xlat
jg
pop
xor
fcoml
js
push
insb
daa
cbtw
sbb
and
push
push
mov
or
popf
mov
out
icebp
xchg
inc
push
push
jp
dec
out
lret
mov
ret
mov
out
repnz
adc
mov
call
cmpsb
xor
jmp
ljmp
or
inc
ljmp
inc
inc
xchg
cmc
out
movsb
inc
pop
mov
ss
imul
ljmp
inc
mov
jp
inc
subb
je
mov
fwait
fcomi
iret
iret
mov
fistl
out
pusha
xlat
push
jne
jae
nop
addr16
cld
out
sbbl
jmp
cli
mov
jl
dec
xchg
lods
and
cmp
lcall
jo
lret
imul
sub
xchg
pusha
add
jns
fcmovnb
jmp
inc
or
int
lahf
mov
inc
dec
mov
push
repz
pop
adc
xorl
push
fldl
mov
bound
call
mov
ljmp
adc
in
rorb
sbb
fistl
lcall
es
mov
pop
mov
sti
stc
insl
flds
push
pop
jo
sbb
bound
jbe
jmp
dec
jo
mov
pop
jl
mov
sar
es
fwait
imul
inc
inc
dec
add
incl
inc
inc
mov
int3
and
lock
add
adc
jmp
dec
pop
mov
push
adc
pop
push
cmp
mov
jecxz
jp
pop
hlt
mov
push
dec
xchg
into
xor
mov
mov
hlt
mov
xchg
clc
add
sbb
push
dec
jle
cmp
mov
pop
jmp
xlat
filds
jecxz
rcl
sbb
test
or
out
rorl
clc
stc
bswap
mov
mov
sti
jae
pushf
push
jl
push
push
sti
imul
add
jg
out
in
push
mov
push
pop
sub
xor
out
xchg
dec
and
and
clc
sbb
jl
fadd
out
dec
adc
inc
and
out
cmp
pop
cwtl
cmpsb
push
or
mull
push
notl
xor
inc
fcoml
jns
pop
mov
inc
call
xlat
nop
mov
pop
pop
fpatan
rcrl
mov
orl
pop
sub
arpl
mov
dec
icebp
mov
imul
push
mov
lea
loopne
xchg
mov
scas
mov
aad
jmp
call
data16
test
ljmp
fmulp
insb
sbb
loopne
cmp
pop
add
push
sub
adc
mov
nop
pop
cmp
pop
xchg
push
jmp
ds
adc
inc
xor
in
repnz
mov
pushl
dec
js
sbb
mov
mov
cmp
xchg
ret
cmp
xchg
lods
lcall
mov
enter
fimuls
call
enter
add
cltd
test
ljmp
sar
in
orl
fnstenv
inc
hlt
lea
sub
cmpsb
mov
mov
lods
mov
pop
in
insb
in
enter
or
jns
rcrb
xor
in
mov
pushl
jns
inc
add
notb
stos
mov
out
mov
rcl
cmpsb
pushl
sub
cmp
fistpl
icebp
repz
mov
sub
clc
mov
out
sbb
and
clc
jg
bound
mov
iret
inc
and
loopne
insb
xlat
sub
call
adc
fisubrs
pop
fwait
ret
inc
loop
fisttpl
incl
addl
cld
cmc
testb
xor
mov
or
daa
mov
xchg
jno
ljmp
out
xor
pushf
mov
and
cltd
jecxz
jge
jg
adc
outsl
fdivr
aas
sbb
inc
aas
mov
imul
leave
js
xchg
push
iret
daa
test
push
lcall
jnp
or
or
insb
or
or
inc
jmp
or
stos
incb
add
and
xchg
or
cmp
gs
into
idiv
dec
out
mov
add
repz
gs
inc
inc
adc
mov
lock
pushf
lcall
jmp
lods
loopne
stos
push
repz
stos
cltd
and
jnp
push
jmp
jo
call
cld
insb
pushf
xchg
out
rcrl
jno
enter
add
adc
lea
lret
ljmp
int
mov
adc
cwtl
repz
push
mov
iret
cs
js
fcos
fcomip
jmp
adcl
lea
push
aaa
jb
adcb
rcrb
jne
jnp
xor
cmp
and
lock
outsl
iret
fs
and
sbb
pop
insl
xor
ret
decl
in
jp
scas
cli
pop
cmp
xchg
cmp
fcom
xchg
ja
cmpsl
push
cmp
inc
je
jg
dec
lcall
cmp
and
addb
loope
addb
in
lcall
dec
adc
xorl
bound
pop
adc
or
mov
out
dec
pop
lcall
mov
mov
cmp
ljmp
mov
mov
into
sbb
mov
sbb
push
pushf
dec
jg
pushf
rorb
in
jmp
xlat
out
adc
lret
lods
mov
cmp
fwait
int
or
pop
fstps
pushl
mov
fwait
icebp
mov
xchg
add
fs
cmp
int3
lret
nop
aam
in
mov
cwtl
stos
rcrb
lret
pop
shrl
js
push
movsb
js
cli
dec
mov
rcl
dec
lcall
int3
xchg
repnz
lock
in
adc
mov
jo
xor
inc
gs
mov
bnd
jmp
ret
test
xchg
in
test
leave
fisubl
mov
xchg
sti
mov
mov
cmp
push
add
into
ret
adc
jmp
cli
in
lcall
call
dec
adc
pop
jae
jp
adc
sarl
jnp
pusha
incl
testl
or
xchg
mov
je
test
and
jg
decl
and
jecxz
xchg
adc
ss
iret
ljmp
mov
pop
popf
pop
fisubrl
push
fimull
sbb
xor
ja
call
out
push
loopne
loope
pop
jmp
fsubrl
push
cmp
xchg
hlt
jp
in
aas
data16
dec
popa
bound
sahf
adc
adc
pusha
fsub
lds
mov
mov
mov
dec
ljmp
fwait
adc
xorl
push
mov
xor
ja
rcl
lcall
incl
jns
icebp
jo
imul
mov
sbb
clc
loop
and
mov
adc
sbb
stos
scas
sbb
insl
adcl
sarb
inc
xchg
outsb
mov
inc
sub
cmc
push
lret
push
or
inc
dec
jns
xlat
push
or
add
paddq
clc
pop
stos
cvtps2pi
xor
cmp
movsb
ret
mov
outsb
jmp
sub
fstps
sbb
add
lcall
test
les
sub
push
into
push
mov
dec
scas
and
fdivrp
lcall
inc
call
fcom
rclb
mov
mov
stos
push
scas
int
xor
ljmp
lret
cmpsb
pop
push
in
cltd
xor
sub
mov
pop
clc
dec
cmpsl
popa
cld
mov
ljmp
sti
jb
jb
cwtl
pop
xchg
cmp
pop
cmp
sub
sti
int
adc
sub
fwait
pusha
adcl
inc
jmp
fs
pop
lds
push
xlat
lret
jle
push
cmpsl
pop
dec
inc
inc
fwait
pop
push
inc
stc
jg
pushl
push
sbb
mov
pop
push
lock
in
aaa
ss
mov
outsl
lock
pusha
lcall
push
idivl
jae
add
xor
pop
repz
mov
jp
lods
mov
mov
jmp
call
in
lea
scas
clc
mov
sub
test
rclb
jmp
test
cmp
insl
lcall
xchg
clc
lahf
sarl
shll
jmp
pop
dec
les
xchg
cmp
ljmp
inc
xor
loope
fs
in
or
call
pop
insb
mov
and
cmp
std
ret
aam
cmc
dec
addb
icebp
rcrb
jmp
xor
imul
movsl
inc
add
inc
lret
lret
insl
add
dec
push
rorb
es
cmp
shlb
xchg
aam
fdiv
fistps
loop
outsl
cld
in
stos
hlt
scas
jle
mov
mov
mov
mov
out
out
incb
ret
cs
decl
or
ret
xchg
pop
ficoml
nop
and
loop
adc
sub
scas
xor
mov
ljmp
outsb
push
push
add
inc
jae
filds
push
fwait
jnp
lahf
leave
sub
pushl
ret
and
pop
in
adc
push
clc
lcall
adc
push
sbb
lahf
es
push
repnz
sub
cmpsl
mov
lret
fidivrs
and
fs
pop
int
xchg
cmpsl
ja
je
inc
sbb
mov
lret
sbb
faddp
jge
add
sbb
xchg
adc
leave
push
add
xchg
test
lcall
stos
insb
fisubrs
repz
lea
jl
xchg
dec
sarl
inc
and
out
cmpsl
sbb
daa
mov
rorl
icebp
sub
pushf
or
or
or
in
dec
ljmp
clc
ljmp
jle
out
mov
lcall
test
push
dec
rclb
sub
sub
aad
dec
subb
cwtl
cmp
imul
scas
mov
ljmp
xchg
push
jecxz
test
in
je
fadds
nop
test
out
cmp
pop
mov
mov
les
xor
incl
pop
cwtl
test
xor
fisttps
xchg
mov
add
out
cli
inc
js
and
insb
in
mov
or
outsl
push
ficompl
enter
enter
out
mov
shlb
sbb
pusha
rcll
scas
rorb
jmp
mov
lret
cmpsl
nop
dec
leave
test
dec
fnstsw
jo
addr16
icebp
mov
push
sub
mul
cmpl
fimuls
mov
test
jl
call
lock
adc
fdiv
scas
sti
xchg
jnp
lds
dec
jbe
and
xlat
inc
out
lcall
mov
inc
mov
out
or
mov
insb
sbbb
pushl
sub
bound
pop
push
std
pop
fists
mov
inc
jmp
fs
test
jmp
or
fdivs
fs
incl
adc
mov
cmp
dec
push
xor
and
jb
int3
ljmp
push
idiv
inc
clc
mov
js
xchg
adc
fstps
mov
and
push
push
ss
fdivrs
xor
nop
sub
cmp
jmp
pop
cmp
out
cli
incl
les
push
jbe
push
and
ds
fnstenv
popf
mov
sysexit
sarb
mov
xor
pop
repz
mov
call
negl
mov
and
ret
push
adc
fs
cmp
ja
jmp
pop
push
loopne
sub
mov
dec
push
ret
jbe
and
mov
add
cmp
es
jg
jmp
outsb
mov
cmpb
mov
mov
test
xchg
pop
mov
decl
cmpsb
test
in
and
outsb
in
mov
aas
pop
xchg
add
mov
push
inc
imul
stos
repnz
lcall
add
pop
call
scas
or
xchg
mov
jne
adc
negl
insl
mov
dec
xchg
push
mov
out
test
ljmp
dec
push
adcb
push
fcomip
adc
or
sbb
clc
or
dec
push
ja
xor
ss
stos
cmpsb
aas
mov
decl
xchg
jnp
jb
xor
dec
jmp
sub
pusha
and
mov
cwtl
mov
or
and
push
dec
dec
rcr
mov
xchg
mov
incl
cld
jmp
dec
sbb
addr16
jns
aas
repnz
pop
cld
decl
nop
add
xor
ljmp
pop
stc
jnp
jb
adc
aam
out
adc
imul
mov
lcall
orb
sbb
xor
out
int3
mov
lcall
gs
lods
mov
out
es
mov
adc
decl
dec
fisubrl
adc
sbb
jecxz
int3
pop
std
outsb
rclb
lcall
pop
faddl
imul
outsw
ljmp
in
xchg
lock
lcall
inc
jp
xchg
push
push
sub
jae
cmp
mov
scas
xchg
add
dec
fwait
dec
push
ljmp
add
jl
ficoms
xorl
sti
dec
fdivl
mov
imul
adc
mov
sbb
add
inc
xor
xchg
das
sub
or
iret
pop
movsb
fisubl
cld
loopne
push
push
adc
fwait
js
orl
jmp
out
sbb
sar
incl
repz
inc
nop
divb
sub
pop
mov
out
adc
lcall
icebp
inc
jno
lahf
jae
sbb
fisubrs
jmp
fwait
lds
jmp
dec
inc
pop
jnp
cmp
xorb
lcall
sahf
push
push
out
mov
xchg
flds
pushf
and
add
jmp
pushf
pushf
xchg
mov
lcall
cmpsl
fstpt
into
jmp
xchg
pop
hlt
adc
adc
hlt
jnp
ljmp
ds
or
sbb
inc
xor
push
mov
stc
push
jg
test
xorl
ljmp
je
jle
mov
xchg
in
xor
sti
adc
add
test
iret
in
incl
fcmovbe
stc
fisttpll
hlt
push
orl
sbb
loop
mov
outsl
lahf
inc
clc
scas
cli
scas
xchg
push
and
icebp
sub
xchg
imul
add
mov
add
xor
insl
in
push
mov
pop
and
orl
pop
ljmp
push
imul
sbb
mov
adc
cs
in
int3
mov
cmpsb
mov
js
cmpsb
outsl
cmp
lea
ficoml
cmp
fstpt
je
jmp
fwait
aam
sub
dec
sub
inc
adc
mov
xchg
inc
shrb
insb
dec
aas
shrb
movsl
mov
aam
and
mov
scas
dec
push
push
movsb
pop
fs
push
jg
aaa
aam
lea
stos
sbb
lret
pushf
ror
push
js
xor
jns
into
add
mov
xchg
cli
mov
pop
loop
and
mov
and
in
std
xchg
mov
mov
sbb
or
in
add
iret
repz
pop
ror
gs
ss
fcomip
mov
mov
mov
andl
xor
lods
daa
mov
inc
pop
out
jmp
rcll
jl
push
add
lret
mov
adc
test
nop
or
clc
mov
aam
movsl
subb
dec
rcl
mov
ret
incl
enter
out
js
adc
fdivrs
jg
mov
fisttpl
jbe
lds
fisttpl
test
jecxz
mov
clc
pushl
add
push
cmp
mov
call
inc
jae
and
inc
fcoms
push
lcall
sub
imul
je
cmp
xchg
xor
cmc
jl
adc
cmp
int
icebp
ja
dec
inc
cmpsl
in
icebp
outsl
pushf
add
mov
push
push
xor
in
cwtl
mov
insb
dec
lock
xlat
push
add
pushl
mov
pop
push
int3
cld
mov
sub
xor
lret
es
hlt
fsubrl
movsl
xchg
into
in
cld
and
roll
lcall
sbb
jp
ds
das
sar
adc
test
add
lea
and
pushl
cli
sbb
ds
pop
fwait
movsl
aam
push
mov
call
decl
xchg
dec
xchg
iret
ret
mov
arpl
dec
xchg
ljmp
fdivrp
lcall
jb
pushf
jns
adcb
pop
or
push
notb
shrl
clc
stos
fdivrp
in
inc
dec
lods
cmc
and
mov
jb
out
test
adc
push
add
ljmp
mov
cmp
jae
xor
out
mov
jg
test
sarb
out
ja
fistpll
loope
push
das
and
insb
cmp
js
insb
sbb
xchg
lcall
pop
adc
jnp
out
xor
jge
in
and
jge
push
dec
fs
pop
es
ljmp
jle
push
jecxz
decb
push
push
movsl
pop
pop
xor
imull
roll
pop
jmp
sar
shll
mov
push
fsubrs
cwtl
int
call
jmp
mov
aaa
and
mov
or
pusha
mov
fstps
call
decl
xor
mov
leave
sub
add
adc
jp
mov
sbb
call
pop
pop
push
jnp
jmp
pop
loopne
jp
jg
sub
flds
incb
in
out
push
call
mov
adc
mov
sahf
adcb
js
lcall
ljmp
jne
testb
pop
jne
adc
iret
fisttps
adc
jns
jg
push
pop
mov
push
cltd
daa
dec
nop
stos
mov
clc
call
loopne
imul
in
pop
push
dec
pop
jo
imul
incl
mov
mull
mov
pop
fadds
imul
sbb
mov
mov
ret
stc
stc
mov
jg
mov
jbe
movsb
pop
dec
js
imul
call
idivb
and
jmp
test
cmpsl
adc
adc
xchg
push
call
cld
lret
imul
rorl
int
out
mov
incl
mov
roll
push
pushf
cmp
lcall
pushl
push
cmp
or
sub
adc
cmpsb
mov
xchg
andb
inc
mov
push
testb
jmp
test
push
lcall
cmp
jae
dec
fucomip
fnstcw
push
lea
pushl
mov
iret
cwtl
and
movsb
push
jmp
int
clc
insl
sub
inc
test
mov
cmp
imul
dec
iret
lcall
jmp
imul
xlat
popa
cmp
fwait
inc
inc
xor
mov
dec
dec
mov
les
cmpsl
fwait
movsb
mov
nop
xchg
aad
mov
jns
sbbb
mov
das
out
cwtl
sub
push
xchg
mov
pop
bound
decl
xor
pop
das
dec
jns
mov
mov
jns
mov
lcall
mov
lds
pop
sarl
pusha
mov
je
dec
and
and
cli
pushl
cmp
push
xchg
mov
clc
imul
sub
das
push
xor
mov
pop
jne
inc
mov
mov
out
clc
sarl
inc
imul
cmp
mov
aas
push
cmc
popl
jmp
mov
call
push
outsb
shr
pop
rorl
mov
mov
shlb
leave
jp
dec
jp
pop
mov
push
inc
dec
fimuls
cli
in
idivl
pop
lret
sbbl
and
inc
mov
cs
and
xor
gs
daa
sbb
pushl
and
jnp
pop
fnstenv
xchg
es
push
iret
clc
bound
je
push
aam
mov
pop
lods
xchg
cmp
cmp
sbb
out
in
cmc
je
or
outsl
icebp
sbbl
inc
test
iret
mov
mov
call
sahf
sbbb
scas
pop
lahf
imul
adc
cmpsl
jecxz
ljmp
inc
stos
and
test
jno
jnp
jg
mov
int3
stos
andb
imul
push
and
dec
pushf
dec
push
hlt
adc
call
mov
cmc
push
les
mov
cmp
pop
movsl
fadd
divl
inc
sbb
add
cmc
sbb
pop
sbb
xchg
push
pop
pushl
insb
sbb
popa
dec
cmc
das
inc
push
loope
ljmp
push
cli
mov
cltd
jne
xchg
faddl
xchg
es
xchg
pop
mov
ss
call
inc
lcall
aad
xlat
inc
mov
inc
scas
xchg
fisttps
dec
mov
mov
inc
pop
add
xchg
and
fistpl
outsb
xor
dec
jmp
sbbb
aad
xor
jns
push
inc
fsubrs
pop
stos
adc
repnz
and
aaa
ljmp
push
lahf
rol
popf
jns
cmpb
mov
jb
das
mov
sbbl
inc
jg
ljmp
movsl
dec
enter
test
ljmp
cmp
xchg
jp
inc
aas
leave
repnz
loop
sti
mov
push
leave
pop
cmc
movsb
xor
push
das
mov
les
ret
mov
dec
push
mov
scas
das
das
pusha
iret
xchg
add
test
imul
adc
fidivrl
les
lret
repnz
adc
mov
into
xchg
lretw
cs
or
inc
ret
mov
mov
cmp
call
int
jle
cmpsl
sbb
xchg
inc
jns
pop
mov
sub
mov
outsb
lahf
xchg
aas
cmpsl
daa
push
and
push
push
call
push
cwtl
sar
cli
jbe
pop
push
cmp
xchg
dec
ficoms
out
decl
mov
xor
out
and
mov
inc
mov
nop
rorl
ljmp
or
test
lret
cmpb
push
pop
popa
sbb
mov
shrl
jnp
cltd
pop
hlt
jmp
jecxz
ljmp
movsl
out
loop
add
ljmp
cmpsl
shl
imul
dec
mov
mov
push
sub
lahf
stos
mov
rcll
inc
add
sub
jl
popa
aaa
std
in
out
inc
cmp
iret
xchg
dec
mov
stos
idivb
movsb
cltd
clc
imull
or
inc
rcr
add
pop
js
in
mov
mov
push
cmp
sbb
add
incl
arpl
jne
inc
mov
clc
movsl
sysenter
mov
fwait
cld
decl
movswl
out
adc
sbb
xchg
lds
test
cltd
lods
xchg
int3
lcall
pop
mov
push
test
adc
call
dec
cmpsb
out
and
pushl
adc
mov
cmp
mov
stc
cmp
inc
inc
ret
jmp
fistpl
iret
jg
dec
test
aaa
ret
shr
ret
aaa
cs
sar
stos
incl
enter
inc
inc
inc
mov
test
leave
mov
aad
aaa
lock
decl
aaa
push
jns
cmp
mov
jns
push
data16
jno
pop
jo
popa
mov
imul
and
loop
lock
shlb
push
mov
xor
movsl
scas
and
incl
cmp
cmp
aaa
push
xchg
push
jo
mov
jg
outsb
xor
jne
popf
push
lcall
adc
nop
daa
sub
push
addr16
jmp
lcall
cwtl
fisttpl
pop
jg
dec
dec
sbb
lcall
xchg
nop
hlt
call
shrl
aaa
fiadds
push
xchg
test
push
mov
add
fbld
xchg
mov
add
xchg
data16
repnz
mov
ret
dec
popa
inc
pushf
cmpsl
cli
ss
je
inc
sub
mov
test
sub
das
iret
mov
nop
sti
mov
test
or
jo
jg
repz
jmp
push
imul
or
mov
or
mov
mov
pushf
mov
xor
incl
adc
clc
pushf
cmp
inc
ss
das
pop
cmc
pop
push
inc
in
and
jbe
cld
adc
xchg
xor
push
adc
add
rcrb
sub
leave
xor
fcmovu
shl
sahf
mov
pop
cld
push
mov
lret
fisttps
into
out
out
add
js
fs
push
inc
icebp
jmp
dec
fdivr
pop
sbb
stos
xchg
lods
adc
xor
fwait
sbb
pushl
bound
sub
mov
lcall
mov
cmp
insl
loope
aad
pop
lea
xchg
jmp
jo
mov
dec
xchg
hlt
ljmp
xor
sbb
dec
stos
add
ficoms
out
cmp
cmc
adc
cli
mov
inc
testb
xlat
outsl
cli
incl
test
cmp
fadds
decb
xor
sahf
fdivr
faddl
lahf
dec
hlt
mov
jbe
inc
cmp
jbe
fmul
loopne
mov
les
outsl
daa
imul
cmp
pop
test
roll
stos
sarb
ret
cmp
dec
cmp
mov
pop
push
mov
jg
into
sbb
and
jge,pt
pop
ffree
inc
dec
xchg
insb
lret
xor
sbbb
repz
sub
xor
ja
and
pop
inc
shrb
stos
les
jno
xor
call
jae
lret
cltd
ds
in
mov
add
and
mov
xor
push
incl
std
in
ret
or
sbb
inc
andl
je
mov
add
cmp
test
dec
gs
mov
or
lds
orb
nop
mov
inc
decl
insb
jp
mov
adc
ret
adc
adc
cmc
push
pop
inc
ds
xchg
mov
pushl
lods
cmp
shlb
inc
adc
dec
addr16
or
mul
imul
dec
rolb
or
adc
cmpsb
pop
sbb
lds
xor
pop
mov
or
scas
fisubrl
mov
aam
dec
in
stos
aas
mov
mov
xor
cmp
repz
call
jp,pt
movsl
call
jecxz
xchg
call
fbstp
bound
addb
ljmp
cmp
cmp
stc
add
mov
cltd
fsubp
inc
mov
lock
mov
shll
jecxz
bound
sbbb
dec
fcmovbe
insb
mov
mov
pop
decl
jae
sbb
pushf
and
pop
out
daa
push
lcall
imul
data16
push
ds
xchg
sbb
adc
adcl
ljmp
ljmp
sub
mov
insl
cmc
mov
mov
fcos
pop
cmp
push
sbb
push
cli
sbb
bound
lock
jmp
fistpll
xlat
repnz
sbb
fildll
fadd
sbb
mov
shr
mov
ljmp
mov
cmpsl
insl
ficoms
push
cmc
insb
mov
sarb
popa
push
int3
in
fidivrl
push
flds
arpl
cmc
pop
fs
decl
lock
loopne
bound
pop
int3
jp
pop
push
jmp
mov
mov
push
dec
icebp
unpcklps
dec
cmp
mov
dec
imul
cmp
faddl
sahf
cld
add
pop
pushf
mov
cmpsl
stc
mov
cmp
lock
or
pushl
sbb
jg
int
rorb
js
movsl
sbb
mov
pop
fimull
pop
xchg
cmp
mov
lcall
mov
repnz
loopne
inc
jmp
add
xchg
in
inc
mov
outsl
cmp
filds
mov
outsb
jge
add
ljmp
add
pop
sub
pop
sbb
les
dec
adc
mov
es
call
sti
mov
jns
lret
dec
sbb
mov
xchg
leave
cli
mov
sbb
and
incl
adc
jle
dec
pop
and
pop
sub
in
add
push
sbb
ljmp
insl
inc
popf
dec
pop
mov
test
push
arpl
mov
aaa
cmp
movsl
mov
jecxz
xlat
sbb
andb
cmp
lcall
insb
lahf
add
inc
jb
hlt
push
mov
cltd
js
mov
mov
ljmp
xor
arpl
dec
out
jl
mov
mov
mov
das
int3
xor
mov
movsl
js
pop
add
insb
arpl
and
cld
js
in
and
jae
loop
jmp
mov
test
bt
mov
outsb
pop
pop
daa
incl
fs
les
xlat
inc
addr16
mov
push
ljmp
loope
mov
cmp
push
adc
movsb
loope
sbb
add
cwtl
xor
arpl
mov
lcall
in
sbb
fisttpl
xlat
inc
aad
cmp
hlt
inc
push
arpl
in
das
xchg
in
pushl
sbb
icebp
cltd
mov
ja
sbb
cld
mov
pop
pushf
in
aas
cmp
dec
push
sbb
lret
sub
cmpsb
scas
mov
sub
pop
mov
mov
aaa
dec
clc
pushl
popa
xchg
push
adc
into
stos
inc
stos
ljmp
scas
arpl
insl
sub
xor
push
aas
inc
push
cwtl
dec
pop
jge
pop
jno
xor
mov
out
andl
adc
cld
jns
roll
xor
decl
xchg
ss
mov
pop
push
or
pcmpeqd
enter
lcall
sub
xor
int3
ss
cmpsl
sti
cwtl
shrl
mov
lcall
jmp
sbb
popa
jecxz
lret
gs
push
sub
addr16
outsl
inc
iret
pop
jae
sub
imul
mov
test
mov
out
or
xchg
imul
inc
cmc
mov
cmc
stc
int3
sbb
dec
fcmovnu
arpl
mov
dec
bound
sub
fstpl
dec
je
push
stc
push
call
xlat
stos
lock
mov
mov
pop
cmp
daa
xor
loopne
push
jle
dec
shrl
jmp
movsl
loopne
scas
jle
and
fdiv
rorb
jmp
jb
mov
push
pop
mov
ret
mov
add
in
testl
inc
out
scas
add
and
mov
sbb
ljmp
mov
cmp
notb
pop
adc
std
inc
shrb
or
mov
jbe
pop
call
adc
adc
push
or
and
iret
sub
nop
clc
mov
enter
mov
call
inc
js
mov
xchg
mov
push
imul
stc
xlat
popa
mov
lcall
das
into
rorb
cs
xchg
lods
decl
cmp
shrb
cmp
add
outsb
adc
lahf
fs
mov
xor
xchg
or
mov
sub
mov
shll
xchg
or
insl
xor
js
add
in
test
insb
outsb
push
or
cmc
call
ret
data16
mov
sbb
stc
ljmp
das
adc
or
mov
push
mov
lods
inc
decl
push
mov
test
jge
pop
pop
fsubr
les
push
cmc
mov
aas
jae
rclb
cld
jmp
cmpsl
ffree
xlat
push
xchg
adc
test
les
inc
cli
fbstp
sbb
lret
jmp
call
mov
hlt
rcrb
sti
xor
add
loope
cld
notb
imul
push
and
xchg
sub
mov
fs
xor
scas
and
dec
xchg
aam
insl
loope
cmp
cmpsl
sub
loopne
std
sub
aam
inc
and
inc
adc
jae
ja
fcomip
rol
xor
mov
mov
sbb
js
repnz
lds
ljmp
mov
sbb
adc
aam
push
add
into
pushf
cmpb
mov
mov
cmc
mov
lcall
and
cs
inc
add
mov
loopne
repnz
push
int3
fs
cmc
movsl
in
xor
fbstp
xlat
pusha
nop
push
push
ljmp
test
dec
into
test
dec
inc
jp
dec
in
icebp
jge
xchg
mov
pop
push
add
movsb
js
and
fdivs
lock
jge
pop
sbb
ffree
cmc
fwait
and
pushf
add
jg
mov
xor
fwait
adc
outsl
jecxz
and
xchg
jge
xchg
incl
sub
dec
test
cmpb
fbstp
fstl
jmp
in
insb
add
je
dec
pop
mov
or
pop
stos
or
scas
pop
or
sar
setno
and
lcall
test
jb
ja
repnz
fisttps
sub
dec
stos
adc
pop
sbb
sbb
jne
or
inc
sbb
mov
shrl
loopne,pn
js
xor
call
hlt
pop
mov
aam
stos
in
add
in
fsubs
pusha
push
outsb
xchg
cmp
icebp
pushf
incl
sub
xor
mov
test
cmp
out
mov
and
pop
and
aas
xchg
pop
mov
inc
fwait
mov
sbb
mov
incl
xor
loopne
lods
sbb
enter
pusha
mov
pushl
push
mov
into
pop
iret
adc
mov
daa
outsb
push
cmc
dec
mov
push
call
push
and
pop
dec
pop
test
popa
pop
cmpsl
or
or
xchg
shl
call
mov
jo
push
cmpsb
pusha
stos
jge
outsb
daa
mov
jae
cs
mov
mov
outsl
in
cmpb
out
adc
je
daa
stos
push
add
rcrb
mov
in
js
lret
out
jae
int
adc
adc
pushl
sub
pushw
mov
out
ret
pop
jb
mov
ss
mov
mov
jmp
mov
ljmp
aaa
dec
mov
insl
incl
pop
rcr
ret
stc
add
idivl
add
mov
mov
dec
es
jo
mov
fnsave
xlat
pop
fiaddl
sbb
lcall
sub
push
cmp
mov
lods
push
das
add
rol
and
rcr
test
mov
and
pop
frstor
add
push
sbb
mov
std
enter
mov
jbe
sbb
or
or
sbbb
decl
fwait
inc
dec
xchg
xor
add
mov
dec
inc
pop
pop
sarb
xor
dec
adc
adc
lcall
jbe
mov
movsl
xchg
or
or
popa
arpl
fcmove
mov
jg
xchg
or
je
mov
mov
pop
fildl
jl
or
xchg
pop
arpl
fldt
inc
inc
xchg
mov
cmp
mov
mov
bound
mov
jp
cmp
add
fdivl
rcll
pop
mov
jge
and
mov
repnz
dec
popf
loop
in
jnp
sbb
add
sbb
lcall
push
xchg
mov
xchg
inc
je
fcomip
xor
mov
or
fsts
pushl
cli
frndint
jmp
xchg
push
fistl
mov
loope
icebp
inc
cmpsl
push
pop
call
mov
aad
incl
push
xor
sub
mov
sti
or
mov
shll
int3
mov
clc
testb
pop
repnz
push
shrl
cwtl
xlat
jmp
cs
add
in
dec
out
mov
jae
sub
inc
xchg
int3
popa
divb
jg
aaa
jle
adc
jp
ficoms
or
push
fcmovb
add
mov
xchg
in
push
insb
scas
stos
pop
pop
mov
cli
xor
rep
inc
jecxz
sub
xchg
decl
je
dec
add
xchg
pop
or
fwait
nop
mov
ret
fwait
add
lcall
int
push
test
nop
into
inc
xchg
bound
jmp
stos
add
fxch
inc
jnp
pop
pop
mov
out
jns
stos
dec
adc
aas
imul
ljmp
add
jmp
inc
wbinvd
insl
out
ljmp
fidivrl
fildl
hlt
sub
lods
ljmp
or
push
mov
vsqrtsd
inc
lcall
mov
rcrb
xchg
pusha
cmpsb
sub
xlat
stos
fidivrs
cmp
push
aas
js
fisttpll
dec
inc
jo
cmc
cmp
incl
paddw
orl
adc
push
mov
push
inc
cli
xor
mov
out
sub
in
mov
adc
movsb
mov
dec
pop
dec
call
ljmp
enter
scas
xchg
dec
pop
and
bound
cmp
daa
or
pop
adc
mov
stos
sub
mov
xor
sub
pop
fwait
xchg
scas
mov
and
pushl
ds
cmpsl
xor
lahf
mov
adc
fcmove
bound
jo
cmp
pushl
pop
adc
iret
sarl
dec
and
stos
inc
push
in
and
inc
jle
aam
hlt
inc
xor
es
jp
mov
out
out
jl
xchg
and
mov
daa
sar
jg
ljmp
push
xchg
stc
cmp
or
ss
pop
cld
repz
jmp
dec
jo
mov
lahf
pop
mov
mov
adc
out
popf
int
pop
lock
and
lret
xchg
cmp
je
aam
jecxz
insb
enter
cmp
fldcw
cwtl
mov
rclb
cmp
xchg
mov
cmc
sarb
test
aam
pushl
bound
sbb
lret
cld
mov
adc
cmp
sub
scas
loopne
fs
ljmp
jecxz
lret
xchg
cmp
xchg
jle
loope
cmp
cmp
inc
mov
mov
mov
std
dec
mov
mov
push
lret
push
enter
dec
jg
mov
pop
ror
mov
mov
pop
mov
fildl
mov
shrl
aaa
cli
std
mov
out
mov
out
add
inc
dec
test
jg
call
pop
daa
call
out
xacquire
aam
push
mov
mov
lret
push
pop
jb
repz
mov
ja
cwtl
pop
jle
pop
xorb
lcall
movsb
sbb
push
data16
push
sti
cmp
ljmp
data16
xchg
jno
mov
mov
pop
add
push
dec
fs
pop
mov
std
adc
pop
sbb
cmp
out
insb
push
sub
out
xchg
dec
jmp
loope
add
fimuls
xchg
movsl
xchg
cli
jmp
hlt
out
ljmp
push
add
dec
nop
sbb
sbb
lret
pop
jl
add
xchg
dec
or
mov
pop
or
xchg
ret
adc
xchg
and
or
mov
push
test
stos
rolb
insl
mov
es
inc
and
rcl
adc
cld
lcall
mov
mov
jns
sub
out
pop
jp
mov
imul
ljmp
incl
xorl
mov
filds
in
push
scas
push
outsl
and
pushl
std
int
mov
or
movsl
sar
jg
pushf
sbb
sub
std
test
outsl
cli
sbb
in
jne
out
test
hlt
ljmp
lahf
cmp
data16
xor
push
sbbb
cmp
cmpsl
sub
xor
adc
cmp
mov
call
daa
cmpsb
ret
cld
loopne
adc
lods
or
nop
mov
jg
decl
lods
out
xchg
pop
stos
pop
testb
dec
js
cmp
test
das
mov
push
xchg
sbb
or
add
test
enter
jge
lcall
test
cld
cmp
ljmp
mov
adc
dec
inc
stos
jnp
sbb
push
pop
call
mov
subb
sub
int
add
idiv
push
push
scas
fcmovne
jecxz
mov
sbb
xorl
ljmp
fisubl
lea
jmp
in
insl
pop
das
sahf
addb
push
adc
mov
sub
in
sub
cmpsl
pop
add
lock
push
jge
je
jg
mov
cwtl
lds
adc
out
mul
cmp
je
lds
jmpw
test
test
rcll
fwait
jg
jnp
pop
xchg
and
repz
ljmp
mov
sub
das
adc
sbb
mov
sbb
adc
dec
jae
sub
or
adc
add
sarb
lret
scas
decl
decb
sbb
into
add
stos
and
fnsave
cltd
ja
mov
jns
jno
inc
outsb
adc
inc
pop
scas
adc
addr16
das
mov
inc
in
repnz
call
pushl
add
xchg
stos
or
out
je
adc
clc
push
ljmp
inc
movsb
icebp
dec
movsb
inc
mov
gs
out
push
roll
outsl
dec
rcll
mov
push
or
stc
shrb
sbb
pop
dec
mov
dec
lret
rclb
pop
lock
cmp
cmp
jecxz
lret
call
mov
push
sbb
insb
scas
jmp
jp
jnp
pusha
insl
and
dec
xchg
mov
lcall
ret
popa
mov
out
jg
mov
mov
divl
das
clc
jmp
pop
and
sbb
in
idivb
and
test
call
or
add
shll
dec
or
cli
and
push
sub
or
or
lcall
ja
stos
adc
push
sbb
cmp
xor
ss
stc
inc
mov
mov
stc
pushl
push
js
sahf
testb
out
std
or
pop
sbb
dec
pop
lock
cmp
and
rorb
xchg
sete
cli
fcoml
sti
mov
xchg
lahf
pop
rcl
shrl
mov
xchg
cli
rol
jmp
dec
std
xchg
mov
push
jns
jl
ficoms
add
dec
shrb
lock
fistpll
add
ret
fs
adc
adc
jno
jg
add
add
sbb
dec
inc
cltd
shll
daa
decb
stos
daa
lods
dec
pop
decl
cmpsb
xlat
dec
dec
lock
sbb
push
jb
pop
outsl
dec
arpl
shrl
xchg
mov
scas
stos
pop
cmp
jg
out
inc
pop
lahf
ss
mov
dec
daa
testl
sub
inc
or
pushl
sub
dec
lret
pushf
jns
arpl
add
jge
loope
sbb
mov
loopne
push
call
and
f2xm1
mov
push
cmp
or
fwait
pop
mov
mov
stc
jmp
pusha
pop
xchg
je
xchg
sti
repz
ljmp
clc
xor
mov
test
out
les
mov
xor
or
imul
sahf
ss
push
add
xor
call
ss
or
push
das
decl
push
or
out
sub
aas
in
lret
scas
mov
mov
mov
pop
jg
test
add
mov
outsl
stos
gs
call
mov
jno
stos
xor
pop
in
icebp
aad
cmp
push
sub
ljmp
xchg
inc
in
in
fldt
int3
push
mov
mov
add
jmp
shlb
add
cmp
ljmp
js
sbb
sbb
loopne
inc
gs
or
ds
xchg
loopne
push
ret
call
cld
call
jle
incl
ss
push
inc
cmp
sub
popf
cwtl
arpl
jmp
scas
mov
cmp
popa
pop
je
adc
ret
or
incl
sub
les
or
test
lahf
xchg
cmpsb
cwtl
aad
pushl
jo
leave
xchg
fldcw
in
xor
and
push
mov
dec
ja
xor
jg
movsb
in
lds
push
ja
and
xor
stos
cli
mov
stos
mov
stc
xchg
loope
or
scas
rcrb
mov
ljmp
jle
cmp
out
sub
mov
mov
aad
addl
inc
aad
cmp
dec
shll
cmc
jno
mov
sbb
jle
addr16
adc
pop
call
in
jb
lcall
or
xor
and
or
jg
jbe
adc
xchg
test
lret
adc
push
aaa
dec
pop
fwait
xor
sub
inc
aam
cs
mov
int
testb
mov
iret
push
mov
adc
sti
mov
movsb
scas
xchg
pop
wrmsr
das
mov
mov
xchg
stc
neg
jmp
xor
or
sbb
loopne
mov
jle
pop
in
xor
mov
sub
pop
icebp
mov
jge
add
mov
es
xchg
sti
gs
or
push
mov
sbbl
movsl
inc
mov
jg
incb
into
pop
xchg
cmp
mov
pop
dec
mov
dec
adc
pushl
fsubrl
fwait
leave
lds
pop
shll
sub
mov
lods
dec
or
fisttpll
popf
and
test
test
idivb
ljmp
dec
ficoms
add
add
sub
inc
into
mov
adc
iret
inc
add
lods
adc
movsb
aam
imul
repz
pop
je
jmp
aaa
call
lret
xchg
pop
inc
insb
and
pop
cmp
scas
movsb
inc
jl
add
sub
adc
mov
movsb
lock
loopne
inc
ljmp
mov
negl
push
scas
inc
and
shlb
dec
push
inc
mov
pop
cli
std
push
mov
sahf
mov
or
cli
incl
and
loope
shr
ljmp
call
add
aam
jnp
cmp
sarl
mov
repnz
or
pushl
xor
aad
mov
daa
fsts
lds
int3
incl
ficoml
enter
inc
xchg
jle
jmp
decl
mov
test
cwtl
sbb
and
repz
xor
lret
decl
inc
mov
mov
dec
pusha
mov
mov
arpl
test
xor
pop
loopne
lcall
mov
add
cmp
ds
int3
scas
int
inc
dec
stos
sub
call
outsl
inc
hlt
pop
inc
je
or
test
pop
mov
jne
out
sahf
push
stos
lods
divb
insl
jg
adc
daa
lods
icebp
cmpsl
imul
icebp
out
sbb
sub
xchg
dec
adc
and
out
and
les
dec
mov
bound
inc
sub
rclb
push
outsb
xchg
incl
jmp
sti
stc
sbb
dec
or
aas
add
mov
stos
lcall
mov
ja
and
pop
lock
addl
mov
jg
sbb
mov
daa
daa
pop
aaa
dec
xchg
add
sub
cli
in
call
mov
addr16
cmpsl
pop
xor
lcall
and
mov
stos
adc
mov
or
imul
jg
sahf
fcomps
je
negl
repz
jmp
orl
insl
dec
push
sahf
incl
mov
dec
pop
xor
xor
push
pop
mov
ljmpw
cli
call
out
pusha
lahf
clc
pop
jge
sarb
push
nop
lds
outsl
and
decl
movl
add
xor
and
xchg
fisttps
cmpsb
out
and
pop
push
subb
xchg
or
inc
ret
or
incl
ljmp
mov
sub
inc
push
out
xor
fs
adc
pushl
sbb
mov
gs
into
dec
jg
ds
loope
mov
add
mov
xor
incl
pop
scas
pop
clc
add
xchg
ja
or
insb
and
dec
push
mov
call
lcall
stc
pop
imul
adc
fdiv
cmpsl
mov
shl
and
adc
add
addb
mov
cli
jp
cmp
imul
mov
cmp
mov
ljmp
inc
in
incl
sbb
pusha
cmp
ja
imull
out
popf
insl
mov
decl
cmp
sbb
fstpt
mov
repz
mov
repz
pushl
dec
and
lea
add
enter
jle
lds
xchg
dec
lret
xlat
adc
pushf
dec
fwait
jnp
add
ljmp
mov
xchg
inc
iret
lret
add
mov
scas
mov
push
faddp
notb
inc
testb
mov
rsqrtps
xchg
mov
ret
pop
int3
out
out
das
clc
xchg
sti
lahf
decl
lock
lods
xchg
cmc
jmp
es
cmpb
sub
ss
push
cmc
pop
test
push
ret
xchg
mov
jne
and
xor
inc
shrb
ljmp
divl
push
sbb
jo
mull
cmpsl
sub
and
adc
pusha
ret
call
mov
jl
arpl
mov
fildl
dec
test
mov
pop
clc
mov
fsubrs
mov
in
je
pop
fnsetpm(287
loopne
scas
clc
ljmp
into
push
fisubl
insb
mov
jbe
mov
jne
std
bound
push
testb
xor
jns
pop
decb
mov
call
cmpl
add
nop
out
add
mov
xor
lahf
mov
fisttps
test
cmpsl
inc
adc
push
adc
test
fsubs
or
mov
add
mov
lcall
mov
xchg
out
xor
and
adcl
sub
bnd
lcall
add
loopne
or
inc
leave
ds
sub
frstor
in
aam
inc
jg
ljmp
out
mov
inc
xor
jg,pn
movsb
adc
sti
xchg
repnz
dec
rol
inc
into
ds
rcr
loop
ljmp
mov
scas
or
pusha
addl
test
mov
mov
cmp
pushf
stc
cltd
xchg
dec
imul
mov
or
jno
fnstcw
push
inc
mov
mov
dec
stos
cwtl
loope
mov
and
add
pop
jmp
decl
mov
inc
fsubr
add
js
adc
cltd
fwait
sub
xchg
jg
mov
mov
push
jae
xchg
movsl
repnz
sbbb
in
pop
mov
mov
out
add
rorl
jg
push
jns
inc
mov
lret
shlb
pop
push
aas
inc
mov
std
cmc
aam
loop
cmpsl
cmp
rcrb
xor
xlat
stc
out
movsb
xlat
popf
xor
pop
lcall
mov
push
into
out
jmp
add
aas
repnz
out
cli
adc
xor
jnp
inc
sub
es
jle
mov
ret
xor
hlt
and
adc
scas
adc
adc
addr16
pop
lods
sbb
dec
push
shlb
incb
or
mov
inc
sub
push
iret
mov
push
loopne
xor
cmp
jecxz
js
adc
ss
int3
in
pushf
in
movsb
cmp
mov
mov
mov
movsl
cmp
or
xor
cmpsl
cltd
adcl
daa
fbld
ljmp
cmc
call
sub
mov
mov
dec
movsb
nop
pop
imul
sbb
or
lcall
ljmp
enter
ljmp
jle
test
or
loopne
inc
popa
loopne
ljmp
sarb
push
scas
and
push
clc
testb
cmpsb
fists
push
jne
inc
cmpsl
test
or
pushl
cld
cmp
decb
or
mov
or
xor
jg
jle
ljmp
adc
fidivl
cmpb
aad
adc
lods
testb
shll
inc
cltd
dec
test
decl
aam
inc
das
jmp
fstps
or
jo
addr16
xor
mov
jg
and
sbb
and
addr16
mov
xor
jnp
repz
lcall
add
std
mov
xor
push
lods
aaa
sub
sub
and
lcall
push
iret
mov
mov
shl
ja
imul
xchg
pop
pop
xor
rorl
dec
ljmp
ss
xchg
inc
jecxz
dec
xor
outsl
pop
loopne
fwait
aaa
push
cmpl
xchg
push
pushl
push
push
or
arpl
inc
movsb
jno
inc
or
sub
nop
std
cld
lahf
pop
dec
push
mov
out
or
adc
xchg
fcmovbe
push
xchg
das
and
movsb
mov
inc
push
ljmp
enter
or
xor
mov
push
popf
xchg
inc
in
push
movb
clc
jmp
lds
js
bound
and
pusha
in
mov
ljmp
loop
fldt
inc
inc
xchg
jge
ja
fistpll
les
pushl
clc
ljmp
cmp
aaa
xchg
sar
decl
push
sub
xchg
pop
je
ds
add
adc
pop
fidivl
ljmp
scas
lods
mov
and
inc
pop
arpl
ret
ret
cld
xor
out
setbe
push
mulb
cmpsb
xor
jmp
xor
inc
sub
pop
inc
mov
fcomip
pop
loopne
shl
mov
mov
aad
outsb
dec
ljmp
and
pop
out
scas
mov
ret
adc
sub
lods
fdivrs
xor
pop
push
rol
xor
mov
sub
jg
pusha
mov
cltd
adc
pop
lahf
mov
push
and
lcall
nop
out
adc
inc
jb
or
push
cltd
js
movb
jbe
pushl
jle
xor
fisubl
xor
leave
and
pminub
jno
xor
ljmp
add
lods
stos
fwait
shll
add
mov
roll
xor
pushl
ss
jp
sbb
adc
cmpsb
push
rcrb
mov
xchg
mov
xor
pop
inc
mov
fistps
mov
and
mov
ret
rolb
fidivrs
xchg
jl
aad
gs
cwtl
adc
or
stc
imul
inc
loopne
adcb
inc
std
cltd
push
or
sbb
or
sbb
ficompl
fdivrs
adc
sti
and
iret
sete
icebp
dec
sbb
dec
int3
call
lods
aaa
jo
or
and
loope
stos
cmp
ret
daa
incl
in
mov
repnz
push
cwtl
int
bound
ljmp
sub
and
xorl
sub
fiadds
pushl
xchg
mov
lcall
jecxz
jecxz
clc
xchg
int
ret
fs
push
nop
scas
sbb
pushl
cld
aad
and
add
dec
out
pushf
mov
sbbb
nop
push
sub
call
fisttpll
fnsave
movb
cwtl
xchg
clc
cli
pop
cmpl
fs
mov
jb
movsl
jbe
mov
cs
push
jg
call
add
inc
inc
inc
xchg
xchg
dec
into
ret
out
icebp
pop
push
inc
mov
fsub
mov
stos
clc
xor
or
int
cmp
xchg
dec
into
repz
incl
add
das
pop
pop
dec
push
cmp
test
or
loop
mov
call
mov
inc
mov
jo
into
les
sub
mov
jmp
ljmp
mov
scas
cli
mov
std
cmc
mov
push
in
fcoms
pop
sub
les
fildl
add
sbb
stos
push
mov
sub
movsb
cmc
or
das
sub
adc
mov
leave
mov
arpl
jnp
test
bound
lds
addr16
decl
sub
mov
icebp
dec
dec
cmp
mov
add
sub
lea
ficoml
xchg
adc
jbe
dec
in
out
dec
sbb
mov
mov
jbe
sbb
pop
xchg
pop
inc
sub
cmp
inc
popa
test
movsl
or
inc
out
xor
add
test
shl
dec
add
xor
sub
xchg
pop
icebp
add
sbb
add
cmpsb
dec
xor
adc
out
xchg
sub
lret
ret
push
je
xchg
xor
xor
jmp
loopne
aad
jnp
repnz
sub
or
pop
cmpsb
ljmp
jg
inc
mov
cmp
push
es
les
call
push
aas
sub
cmp
pop
pop
and
lcall
mov
mov
gs
push
cmp
test
call
orb
pop
add
jae
mov
and
and
mov
mov
cld
cmp
decl
dec
popf
push
cmp
dec
clc
lods
loop
or
sub
dec
jg
outsl
push
bound
sub
test
cmp
loopne
adc
call
xchg
fistpl
pushl
pop
pop
fisttps
sub
sub
xor
inc
jns
in
cmp
icebp
call
jno
xchg
in
sbb
iret
xchg
daa
test
and
icebp
push
scas
movsb
sbb
jno
cmpsl
sahf
cmpsb
mov
cld
fisubrl
incl
mov
jnp
push
push
xchg
popf
addr16
or
lret
sub
test
incl
adc
popf
lods
aam
fwait
inc
mov
ret
xchg
inc
data16
xor
mov
sbb
lods
faddl
inc
dec
jmp
pop
stos
repz
daa
mov
jg
lea
pop
fidivrs
cwtl
cmp
enter
call
ja
dec
cmp
icebp
in
adc
jb
fdivl
mov
out
xor
ds
ljmp
mov
cmp
sub
jg
fnstsw
mov
mov
pop
sub
gs
pushf
cmp
sbb
push
inc
incl
mov
sub
pop
test
pop
cmp
jp
arpl
cmp
lret
mov
push
sub
jbe
test
xchg
scas
mov
call
jg
sub
xlat
out
enter
mov
pop
jnp
add
das
rolb
inc
gs
and
mov
dec
add
jg
popf
test
pop
je
loopne
aas
inc
aad
jl
das
cwtl
sti
in
jno
outsb
push
mov
movsb
decl
movsb
mov
cmp
push
lahf
adc
movsb
scas
andb
orb
shlb
dec
pushf
call
mov
sahf
sahf
stc
lahf
jbe
and
insb
jmp
scas
mov
repnz
incl
jbe
mov
mov
push
int
scas
icebp
in
cmp
or
jb
movsl
jmp
xchg
pop
fldt
pop
mov
call
or
mov
mov
sub
pop
and
xchg
sub
pop
lret
or
cmp
lcall
ljmp
pop
repz
punpckhbw
cmpsl
ficoml
or
nop
mov
jmp
sub
popf
dec
add
mov
or
xor
in
test
push
xor
movsb
icebp
pushl
cmc
xchg
shl
xchg
in
jl
cmp
mov
lcall
add
inc
cmp
lods
scas
xchg
sub
and
decl
and
arpl
insl
fs
lcall
dec
testb
mov
incl
pop
dec
xadd
push
cmp
mov
out
mov
add
push
aaa
dec
in
fldt
mov
incl
mov
push
jge
sbb
mov
sbb
shll
imulb
inc
lock
roll
lds
inc
ja
jmp
cmpsb
gs
lods
inc
imul
push
inc
mov
fsubr
mov
out
xor
xchg
out
and
mov
out
bound
hlt
push
lods
in
movsl
jmp
pop
mov
enter
dec
into
mov
sub
mov
jle
icebp
jg
cmpb
sbb
loopne
sahf
jbe
cli
mov
xor
faddl
out
inc
and
fisttps
cmp
mov
iret
mov
xchg
jg
cmp
clc
in
mov
incl
dec
fnstsw
inc
stos
xor
sahf
pushf
arpl
xchg
mov
fidivl
pusha
mov
pushl
xchg
pop
std
mov
pusha
xor
push
repz
sub
dec
scas
jne
sahf
fidivs
incl
cld
sbb
dec
adc
pop
lret
mov
adc
mov
push
mov
pusha
lods
mov
mov
fcomip
or
imul
lds
inc
adc
fs
mov
decl
lock
out
arpl
jo
outsb
mov
jmp
pop
mov
test
incl
fisubl
mov
xchg
cmp
es
sub
jg
shlb
sbb
aaa
shlb
and
nop
add
xor
mov
leave
push
in
jg
incl
pushf
testl
push
mov
or
mov
popa
and
cmp
incl
lds
add
mov
xor
roll
mov
imul
pushl
add
mov
addr16
push
adcl
lcall
sbb
cmp
aas
cmp
adc
cwtl
outsl
mov
les
inc
sub
jae
mov
inc
arpl
push
sbb
aad
test
adc
xchg
lods
pop
incl
push
xor
jecxz
out
ja
stos
or
xchg
test
cmp
xchg
loop
in
loopne
incl
mov
or
jno
mov
mov
rcrb
lock
or
call
xor
adc
data16
sub
xor
pop
fwait
pop
or
repz
fnstenv
pushl
adc
clc
mov
and
mov
cli
leave
or
enter
outsl
js
std
sbb
js
daa
icebp
call
pushl
enter
iret
icebp
mov
cmp
repz
dec
push
rclb
in
xchg
jmp
es
repnz
mov
stc
cmp
push
jno
pop
fdivrp
cmp
fdivp
fidivs
outsl
cli
or
push
aad
sar
xchg
out
rcr
and
sbb
pop
cmpsl
out
xchg
icebp
jmp
fsubrp
call
jl
fadd
enter
loope
stos
out
push
pushf
popfw
bnd
fistl
push
bound
push
lcall
movsb
dec
lds
sub
fcmovbe
negb
daa
mov
push
orb
xchg
jg
cmp
mov
jg
ljmp
cmc
fildll
pop
sbb
jb
ljmp
mov
mov
aaa
and
dec
inc
arpl
pop
mov
test
popa
iret
sahf
inc
nop
adc
sbb
ds
add
das
cmp
jae
repz
fwait
xchg
add
inc
pop
incl
inc
xchg
push
xor
and
cmpsb
outsb
cwtl
xlat
into
gs
sub
push
dec
pop
stc
outsl
fisttps
dec
pushf
sub
and
push
int
out
cltd
inc
mov
in
lret
push
cmp
and
call
sahf
inc
push
mov
sub
sub
js
mov
mov
pop
add
mov
into
inc
mov
sti
cmp
adc
subb
dec
addb
movsb
dec
jg
sti
dec
push
fstpt
and
jmp
mov
mov
outsb
adc
out
rcll
out
lds
outsl
xchg
xor
fwait
in
or
aad
insl
ss
cmp
cltd
js
push
xor
movsl
test
adc
inc
pop
les
sbb
jmp
pop
pushl
cld
lcall
mov
lds
test
mov
push
hlt
mov
and
pop
ss
adc
pusha
mov
icebp
pop
std
jnp
rcll
sbb
push
dec
rclb
pushl
add
cmp
movsb
insb
call
cmp
xchg
push
xor
xchg
cmpsl
sar
jmp
add
out
lret
pusha
sti
mov
adc
sbb
daa
mov
dec
ja
mov
mov
push
jns
lahf
add
fstpt
fcoms
push
pop
mov
sbb
xchg
pop
nop
ljmp
push
sub
xor
iret
imul
mov
inc
shrl
cmp
pop
cli
jg
inc
data16
jle
dec
adc
in
jns
inc
aam
rcrb
int3
or
cld
ljmp
ss
scas
jb
mov
mov
in
scas
cmp
movsl
cli
lcall
popa
roll
mov
add
ljmp
js
loopne
mov
xor
idivb
jne
fildl
int
xchg
lds
pop
inc
mov
icebp
xchg
ja
inc
mov
sbb
pushf
pop
or
and
cmp
mov
ja
jmp
jl
mov
sub
stc
pop
testl
nop
or
xchg
pop
mov
mov
decl
loopne
notb
jmp
rdpmc
sbb
repnz
push
mov
adc
inc
jecxz
lods
pop
popa
pushl
stos
cmpsl
mov
imulb
fsubrs
inc
cli
xchg
or
pop
outsl
shll
add
inc
lahf
pop
push
mov
lret
adc
adc
mov
xor
test
incl
push
out
and
fcmovne
insb
add
mov
es
cld
xchg
int
and
call
loopne
mov
imul
and
mov
sub
jmp
lcall
fimull
sbb
cmp
inc
cwtl
mov
mov
jecxz
cmp
ljmp
stos
mov
jp
mov
push
repnz
loopne
clc
mov
pop
int
or
in
iret
xchg
inc
inc
xchg
sub
in
aad
dec
ljmp
ljmp
adc
call
mov
and
mov
add
inc
shlb
es
pop
in
jb
sub
lcall
mov
in
xchg
outsb
mov
adcl
je
sbb
mov
daa
jno
dec
push
jge
inc
cmp
sbb
rol
insb
stos
pushf
mov
xor
sahf
or
fdivr
dec
jmp
fsub
int
xor
imul
sbb
mov
mov
out
inc
fcomps
xchg
movsb
mov
iret
dec
dec
mov
sbb
jg
shll
sub
hlt
aam
gs
jecxz
aas
mov
mov
mov
mov
mov
lcall
insb
or
ja
decl
push
movlps
insb
and
repnz
push
dec
arpl
loope
jp
fstps
dec
neg
inc
inc
adc
movsb
mov
orb
jp
clc
xchg
fcos
cld
dec
or
mov
fsubl
mov
jne
jp
mov
lret
lods
mov
insb
jg
inc
xchg
lods
mov
call
nop
and
mov
dec
aad
dec
push
mov
or
repz
in
into
add
jl
cs
adc
jg
inc
push
frstor
mov
mov
add
mov
jmp
maskmovq
testl
dec
add
cmp
mov
jb
and
jmp
push
incl
popf
mov
sub
scas
repnz
int
enter
data16
mov
mov
call
mov
lcall
jge
fildll
adc
ficoml
xor
int3
cs
pop
addb
outsl
adc
ljmp
pop
jg
and
xchg
adc
push
xlat
cmp
adc
jle
mov
in
call
cli
cld
into
fwait
cwtl
or
mov
jb
cltd
cmp
pusha
fs
enter
cld
icebp
sbb
add
data16
cmc
lret
mov
orl
incl
stos
jl
mov
cmp
es
out
adc
push
jmp
mov
xchg
mov
mov
mov
stos
test
addr16
pop
pop
lahf
pop
push
ljmp
and
push
fldl
ljmp
adc
or
jmp
sahf
icebp
jns
notl
mov
mov
mov
lods
push
ja
stos
adc
lahf
and
dec
roll
jnp
xchg
push
jp
xor
lods
xor
jg
popa
clc
das
addr16
push
push
loopne
cli
mov
decl
push
cmp
adc
and
daa
xor
pop
imul
jmp
and
mov
cmp
arpl
cmp
jbe
arpl
mov
mov
mov
and
xchg
lcall
ljmp
sbb
cld
aas
aaa
mov
out
nop
stos
out
ds
js
ljmp
dec
xchg
sub
mov
cmp
shl
frstor
lds
push
mov
jns
decl
mov
sbb
jae
popf
lret
je
lret
mov
pop
adc
jno
sbb
inc
popf
js
sub
adc
mov
les
mov
xor
in
lea
lcall
dec
and
out
mov
jg
cmp
addr16
cmpsl
daa
lods
shll
rcrb
lcall
pop
pop
insb
sub
lcall
sub
movsb
inc
mov
bsf
test
sbb
mov
mov
fsubs
adc
mov
decl
push
sbb
mov
jne
aad
xchg
loopne
jecxz
inc
popf
adc
mov
mov
ljmp
adc
mov
lock
mov
int
stc
movsl
dec
xor
adc
decl
inc
mov
mov
mov
pop
or
call
and
aaa
in
cmp
faddp
shll
mov
lcall
jmp
mov
jge
icebp
aaa
mov
mov
je
mov
out
and
lock
mov
xchg
cmp
mov
pop
and
lahf
inc
inc
xor
xlat
test
fistpll
aas
loop
sub
xchg
sbb
xchg
push
jge
pop
rcll
aas
mov
adc
jge
or
int
pop
iret
in
ljmp
lahf
cmpsb
mov
out
xor
push
add
cmp
jbe
negb
movsl
ss
sub
clc
in
add
add
push
loopne
jl
push
inc
repnz
icebp
xor
stos
les
push
popa
pop
mov
call
jns
mov
inc
cmp
roll
pop
fcoml
inc
lcall
outsb
push
jle
or
jno
insb
into
stos
rolb
lea
mov
call
xchg
fdivp
daa
adc
adc
push
lds
mov
mov
mov
cli
fists
sbb
mov
scas
outsl
gs
ljmp
lret
repnz
inc
add
inc
cmp
mov
sahf
leave
dec
test
mov
ljmp
pusha
cli
stos
jmp
jg
scas
lret
cwtl
push
mov
cwtl
sbb
decl
jp
fsubrs
out
xchg
out
mov
jle
addr16
scas
and
incl
and
cmp
je
pop
inc
dec
cmp
pop
subb
adc
cmpsl
xchg
adc
jb
dec
stos
dec
jecxz
shl
lret
je
xor
addr16
jg
rorl
ret
xchg
in
sarb
ja
push
into
or
or
lcall
repz
rorb
daa
jle
aaa
pop
sbb
pop
xor
pop
int
shll
incl
inc
fcmovnbe
popa
xor
jle
test
xor
mov
add
lcall
mov
cwtl
fcmovne
mov
inc
sbb
cld
shll
or
sub
lahf
pop
call
xor
mov
ja
push
pusha
push
push
hlt
dec
nop
sar
add
imul
pusha
shll
lcall
pop
lahf
call
data16
push
fidivrs
mov
dec
daa
xchg
cltd
daa
mov
sarl
test
shrl
mov
pushf
daa
in
xchg
fsubrl
mov
xlat
jg
dec
pop
push
add
push
leave
xchg
inc
stc
pop
sbb
push
iret
cld
das
adc
dec
mov
inc
aam
add
insb
sbbb
lods
outsb
pop
out
rcl
mov
or
ret
dec
sub
shrb
mov
imul
mov
or
jmp
mov
xchg
daa
sbb
clc
stos
and
mov
or
call
insb
mov
add
sub
add
and
in
cmpsl
mov
mov
call
dec
mov
dec
test
hlt
mov
jecxz
jl
mov
shlb
jmp
inc
push
sbb
mov
notb
push
pushf
mov
cmp
jle
jecxz
shrb
outsb
and
aad
stc
xchg
adc
fists
cmc
stos
lods
aaa
dec
je
dec
lods
or
and
dec
mov
cld
mov
inc
in
fdivl
pop
xor
leave
cmpsb
xorb
outsb
add
cld
fadds
shrb
xor
jb
pop
jo
and
mov
jp
add
and
addr16
incl
xor
xor
pushf
fs
rcrl
fsubrs
icebp
sbb
push
das
mov
lret
lret
jg
add
jne
cmp
push
std
aam
mov
lret
ss
mov
leave
pop
mov
xlat
sub
ljmp
and
in
lea
icebp
and
rcll
xchg
sar
outsl
clc
pop
fimull
pop
push
add
xor
std
add
cmc
xor
jmp
fisubrl
adc
pop
lds
jecxz
sti
mov
xchg
sub
add
std
inc
fiadds
adc
in
sbb
dec
outsb
sbb
cmc
mov
loopne
decb
inc
xlat
add
cmpsb
ds
adc
mov
push
lods
xor
and
jae
mov
pushl
cmp
add
pop
lods
cmp
add
add
pop
xchg
ja
loope
gs
and
mov
lcall
loope
hlt
add
sarl
es
mov
ficomps
mov
xchg
jg
outsl
cmp
push
rcrl
inc
int3
int
cmc
add
mov
add
into
sbb
pushl
fldl2t
cmp
jnp
pusha
sbb
add
fmulp
fnstsw
outsb
sbb
mov
or
es
sarb
and
or
sbb
adc
xor
outsb
jecxz
sbb
mov
pop
incl
xor
adc
rcll
mov
sbb
add
sub
sti
and
jns
aam
and
sti
add
jg
into
imul
push
inc
xchg
push
mov
rcrb
cli
fs
push
pusha
repz
mov
xchg
insb
in
jns
cmp
imul
and
xor
mov
nop
push
mov
out
sar
inc
cld
sbb
sbb
pmaxsw
aaa
dec
jmp
out
push
jge
aaa
or
ss
scas
push
pop
pop
imul
cli
jl
adc
ljmp
cmp
cwtl
jmp
icebp
or
adc
inc
mov
sub
js
cwtl
in
jmp
adc
aam
mov
or
add
sarb
jle
pop
lahf
xor
mov
or
mov
sbb
xchg
inc
xchg
xchg
ljmp
jo
sub
xchg
les
das
clc
push
or
jmp
pop
jbe
jbe
shlb
xchg
jmp
adcb
jecxz
cs
out
test
rorb
push
push
fs
ljmp
sbb
shld
xchg
xchg
jg
jbe
clc
in
sbb
bndstx
ret
andb
ljmp
pop
jmp
cld
nop
popa
mov
lea
hlt
iret
or
das
int3
repnz
xorl
decl
movsb
jl
or
je
and
enter
lcall
scas
and
xlat
call
std
pushl
inc
in
lds
push
xor
ss
pushf
fsubrl
jbe
dec
xchg
leave
int
adc
bound
aam
xor
adc
fdivr
mov
addr16
inc
test
mov
imul
pop
shll
ja
sub
cli
dec
pushf
jo
inc
jmp
adc
adcl
cltd
scas
in
in
cwtl
adc
cmpsl
sub
xor
or
jg
mov
or
and
in
adc
push
mov
push
leave
cmp
mov
sbb
mov
mov
int3
mov
cmp
inc
dec
lds
fcomip
add
ss
clc
movd
push
addl
sbb
add
sbb
sub
mov
decl
mov
mov
repz
test
sub
test
int3
or
inc
call
cmc
bound
sub
mov
loop
mov
adc
lods
imull
loopne
pop
fiaddl
mov
and
fsubrp
cmp
and
mov
jb
and
xor
cmp
cli
mov
cltd
negl
or
push
lock
shl
cltd
push
xor
repnz
adc
imul
ret
aas
loopne
sarb
ja
push
shl
xchg
data16
pusha
into
adc
adc
jns
rorb
lret
shrl
mov
add
xchg
loop
inc
out
fbstp
sub
addr16
adc
push
std
cwtl
add
mov
iret
adc
fwait
sbbb
add
xchg
ljmp
enter
int3
sub
sub
cmp
add
jmp
mov
mov
sbb
and
cmp
xchg
inc
bound
das
lock
call
mov
cmp
mov
mov
push
sbb
mov
out
cs
in
jecxz
jg
push
imul
cmp
mov
ds
loopne
decl
shll
icebp
inc
hlt
mov
mov
mov
mov
fcomp
loop
repnz
ljmp
test
push
xor
lock
jp
call
insl
adc
addl
pusha
fdivrs
push
jle
pushl
mov
xchg
jg
dec
adc
jg
or
cmp
and
pop
je
jmp
test
lea
xchg
negb
jno
pop
andl
cld
cmp
in
add
in
fldenv
call
daa
in
cli
cmpsl
adc
and
adc
loopne
repz
dec
sbb
push
das
out
cli
scas
out
jecxz
xor
xchg
fstl
cmc
addps
mov
push
arpl
fdivrs
dec
cli
fwait
dec
or
sub
dec
inc
pmulhw
xlat
pusha
mov
outsb
push
outsl
fisttpll
push
lods
in
mov
std
stos
fcompl
daa
sub
insb
cmpsb
lcall
lock
movsb
push
fcmovnbe
jmp
clc
jno
stos
out
scas
inc
jno
cmp
mov
decl
jp
and
stc
stos
out
cli
pop
inc
mov
and
dec
out
push
out
push
aam
je
mov
mov
dec
lods
jae
subl
xchg
call
and
fstpl
xchg
push
movsb
lcall
add
xor
ret
pushf
dec
and
lcall
mov
add
into
cmpsl
mov
incb
pop
into
mov
inc
or
clc
cltd
mov
insb
push
sub
sbb
xchg
xor
lea
mov
cmp
xchg
dec
sbb
outsb
push
or
js
mov
fsubr
repz
mov
in
fs
xchg
popf
mov
fdivrs
fsubr
scas
stos
xchg
mov
add
dec
jnp
push
pop
sbb
cmc
jbe
xchg
mov
push
push
daa
sub
cmp
push
push
mov
xor
jno
lcall
in
enter
inc
movntps
or
xchg
ja
decl
in
or
xchg
push
xchg
data16
xor
call
cwtl
arpl
adcl
aam
jmp
xchg
pop
les
decl
mov
mov
sbb
movsb
stc
mov
push
jb
lret
cld
fcomip
mov
ror
out
pop
jle
sahf
mov
xor
lods
or
jg
jo
mov
dec
mov
mov
pop
jmp
pop
insb
mov
mov
lcall
push
ficoml
xor
stos
dec
insb
dec
call
shlb
xchg
xchg
scas
fisubl
aas
pushf
cmp
cmp
mov
mov
pushl
cld
and
or
sbb
lods
and
sbb
mov
loope
testb
clc
push
xor
pop
ss
push
cmp
mov
push
in
adc
in
mov
arpl
sbb
xor
int3
mov
stc
push
outsb
call
lcall
mov
lods
aam
dec
xchg
ds
mov
fdiv
imul
fcomip
test
jnp
or
jno
lods
inc
je
nop
mull
push
mov
push
mov
push
aas
add
inc
sbb
rolb
ret
mov
aam
push
cmc
sarl
dec
std
push
cmp
and
mov
push
cmc
sub
inc
add
cltd
mov
add
pop
es
and
xchg
xchg
pop
dec
add
out
orl
cmpsb
jb
or
pop
mov
xor
mov
and
jle
inc
inc
std
jg
jne
inc
fldcw
cwtl
in
fsubr
outsl
cld
lahf
shll
scas
fsts
adc
or
cmpsb
es
aad
xor
add
push
inc
fcompl
mov
call
shlb
xchg
cwtl
movsl
fildll
sub
jg
or
inc
lahf
pop
mov
xchg
dec
fadd
outsb
cwtl
lock
cmpb
aas
imul
cmp
jbe
lcall
xchg
inc
lret
mov
cmpsb
out
loop
outsb
lods
cmp
push
arpl
into
jmp
gs
pushl
shr
xchg
arpl
dec
lock
pop
dec
mov
hlt
or
stc
loope
mulb
ljmp
stos
mov
sti
aad
in
popf
jnp
mov
and
fidivrs
push
lcall
sub
xchg
bound
pop
xchg
or
aam
movsb
push
fnstsw
repnz
fcomip
add
in
add
ds
out
dec
cmc
negl
xor
pushl
pop
or
scas
xorl
hlt
mov
movsl
pop
test
inc
call
stos
aad
and
dec
cmp
insb
in
pop
stos
test
int
pop
clc
jbe
xor
jg
call
js
nop
pop
movsb
out
push
mov
sbb
xchg
icebp
js
test
nop
subb
lcall
rolb
or
das
cmc
mov
test
mov
mov
xchg
das
adc
popf
push
sbb
fidivl
arpl
and
jne
mov
sub
fcmovnb
adc
es
rcr
adc
and
lret
jge
cmc
je
fistpl
je
ljmp
xor
bound
cmc
addr16
fdivr
test
jnp
decl
add
repnz
filds
cmp
stos
repz
cmpsb
mov
pushl
sbb
jl
cmp
adc
cmp
scas
scas
aaa
inc
icebp
test
idiv
lcall
push
pop
adc
in
or
jae
cli
adc
cmp
out
xchg
dec
test
bound
inc
movsb
fstpl
pop
cmp
push
sbbl
test
xchg
pop
push
and
jmp
rclb
nop
dec
les
jnp
repnz
cmp
hlt
mov
push
ljmp
imul
jb
and
mov
xchg
dec
sbb
lret
out
cli
decl
jae
pop
rcll
repz
pusha
pop
es
loope
mov
loope
or
sub
mov
stos
mov
inc
insb
mov
inc
and
dec
sub
adc
pop
sub
xchg
imul
inc
lret
push
push
sub
cltd
pushl
cmp
cmpb
outsl
inc
adc
clc
scas
push
lcall
loopne
or
pushf
imul
in
xchg
daa
stos
xor
movsl
shlb
cmp
mov
cmp
mov
int
rcll
pushl
test
dec
push
push
add
insb
fdivrl
lcall
push
decl
jl
icebp
outsl
xor
es
and
int3
ja
dec
mov
hlt
out
and
stos
jecxz
repnz
ljmp
loopne
mov
and
call
daa
mov
xchg
loop
mov
jmp
or
cs
adc
rclb
jnp
pop
mov
jne
and
cmp
push
sbbb
outsl
popa
out
lds
mov
ret
and
fdivs
in
bound
or
stos
rorb
cmp
mov
pop
scas
push
gs
mov
mov
insl
fcmove
add
andb
mov
mov
add
and
lahf
sahf
ret
mov
jns
pop
jmp
jmp
mov
fwait
xlat
mov
pop
jno
shr
inc
je
mov
dec
or
movsb
and
call
pop
mov
push
xlat
jns
loope
sub
sub
sub
mov
icebp
dec
lea
cmovs
call
sahf
scas
and
mov
addl
jb
enter
push
jae
nop
cmp
ljmp
jg
test
mov
fstl
jb
fbld
repnz
movsb
outsl
sub
in
jae
addl
cli
les
shrl
std
outsb
aas
addb
dec
fstps
movsl
jo
cmp
sub
test
push
scas
sahf
or
lcall
pushl
movsl
pop
lahf
pusha
gs
cli
jl
jbe
lds
push
in
pop
xor
ljmp
pop
sbb
mov
loope
push
xor
iret
inc
insb
jmp
jg
pop
adc
daa
dec
mov
clc
sub
mov
dec
das
fistps
and
imul
adc
roll
sbb
das
xor
aad
sub
sahf
inc
aaa
outsb
adc
popf
stc
fs
sub
pop
lock
xchg
push
cmp
in
fimull
mov
jg
mov
pushf
mov
add
mov
es
mov
jmp
sbb
in
inc
or
call
into
out
adc
das
xchg
adc
sbb
dec
cmpb
jmp
and
fnstcw
lret
scas
or
js
test
and
dec
push
lret
movhps
repz
ret
clc
sbb
dec
clc
out
xor
pop
ret
mov
stc
js
pop
jns
xor
adc
and
xor
pushf
push
popa
pop
in
add
mov
js
mov
mov
jecxz
outsl
or
fdiv
ret
popf
push
mov
cmc
cmp
movsl
and
mov
dec
out
data16
mov
shll
clc
jno
jns
gs
push
sub
cmp
xchg
sub
movsb
fsubrs
dec
stos
jnp
jmp
vaddps
jnp
and
push
dec
push
stos
or
adc
jle
pushl
fimuls
imul
mov
ja
mov
push
daa
or
das
cmp
ljmp
push
enter
xchg
sbb
ret
pop
xor
xor
mov
or
sub
or
jg
pop
pop
push
into
cmc
in
inc
test
mov
add
hlt
jle
xchg
lods
call
push
aam
imul
leave
cmp
incb
mov
in
xchg
shll
test
adc
enter
and
dec
and
shlb
fisubs
in
and
jecxz
xchg
mov
mov
sub
fs
lds
cmp
decl
jmp
les
mov
out
mov
mov
incl
mov
push
or
movsb
and
or
cmc
inc
xchg
push
int
and
mov
repz
xchg
roll
cmc
std
scas
test
lcall
jecxz
lock
jle
cmp
push
mulb
scas
mov
xchg
mov
push
mov
push
push
in
dec
pop
adc
cwtl
xlat
insb
int
add
pushl
testb
push
mov
sub
push
fdivl
sbb
fwait
push
ds
int
insb
or
or
sahf
mov
fcomi
cmp
cli
mov
lret
lds
push
push
jg
pushl
xlat
push
cmpsb
cmp
sbb
add
mov
lahf
mov
and
xor
imul
sub
movsl
stos
pop
stc
adc
mov
jmp
clc
push
sbb
mov
and
adc
fs
mov
xchg
mov
pushl
sub
sbb
xor
lods
pop
scas
loope
div
nop
aas
out
sub
rorb
lock
std
lahf
std
das
enter
mov
cmp
aaa
add
push
jecxz
jns
call
adc
bnd
lahf
cli
lcall
jbe
ljmp
push
jp
pushl
and
mov
ret
cmp
dec
js
push
and
orl
inc
pop
dec
lcall
pushl
mov
cltd
pop
push
xor
bound
stc
or
pop
push
es
in
test
pushl
push
ja
pmuludq
jns
call
mov
cmc
and
pop
cld
mov
cmp
imul
clc
or
daa
popl
cs
out
call
cmpsb
jg
fwait
lahf
or
sahf
lods
sbb
sbb
fidivrl
movsb
xchg
push
pop
cmp
rol
std
jmp
dec
or
push
test
xchg
and
lods
iret
mov
pushl
mov
ja
jp
pushf
pop
loope
cmp
ss
loope
xchg
xor
popa
mov
inc
negb
jo
cs
andb
pop
stos
cli
mov
sbb
aam
bound
int3
jnp
push
std
call
aam
rol
push
add
jnp
out
cli
mov
mov
fldcw
mov
add
fisttps
sti
ljmp
ja
jae
hlt
mov
jbe
lret
xchg
nop
sbbb
sahf
pop
jns
sbb
pop
pushl
mov
sbb
cltd
mov
int3
les
mov
std
pop
gs
cmp
call
sub
bound
fnstenv
push
mov
cs
imul
ret
push
jns
lock
mov
decl
ljmp
lret
scas
jno
addr16
ss
mov
mov
in
push
pop
mov
and
incb
test
pop
push
sub
call
mov
mov
inc
std
movsl
cwtl
dec
repnz
sub
cmc
cs
mov
mov
out
lea
adc
pop
inc
aas
cwtl
addr16
pushf
dec
call
shl
mov
movsl
sbb
and
jmp
mov
mov
pushf
jl
test
decl
aad
movsb
inc
push
adc
cmp
mov
lods
faddl
arpl
pop
mov
ljmp
or
xchg
fstpl
aas
lock
xchg
xchg
pop
lret
sub
mov
xor
in
cmp
ljmp
aad
cmp
push
in
outsb
insl
jb
and
sub
dec
xchg
cmp
sbb
cmpsb
ficoml
fdivs
cmp
xchg
push
repnz
ljmp
in
inc
in
iret
sub
dec
leave
aas
push
and
enter
je
std
ljmp
enter
jno
sub
mov
push
xor
push
rorl
fnstsw
stos
stos
jg
mov
xchg
xchg
push
lret
int
adc
decl
sbb
nop
jns,pt
lds
test
push
mov
jmp
mov
fidivs
imul
sbb
mov
dec
sub
int
into
jl
lcall
adc
lea
dec
and
call
aam
call
mov
cmpsl
rcr
into
es
out
out
or
jmp
adc
fisubrl
test
dec
adc
sbb
arpl
in
pop
orb
in
icebp
jne
decl
ret
xchg
mov
subb
addr16
outsl
out
fimuls
and
fcomip
xchg
add
dec
das
je
movsl
lret
cmp
ja
insl
call
sub
pop
mov
xchg
mov
cmpsb
sbb
xchg
sbb
leave
pop
sub
or
cs
jge
pushf
adcb
jecxz
loop
ret
std
lea
mov
pop
dec
inc
jno
sub
int
mov
and
cmp
mov
dec
jp
or
cld
in
roll
sti
xchg
es
call
sbb
lcall
fidivrl
push
and
aaa
bound
fwait
lcall
out
mov
sub
inc
xorb
jl
push
mov
and
or
jmp
and
repz
dec
call
xor
add
incl
and
adc
pop
sub
lcall
sub
incl
inc
out
cmp
mov
dec
mov
mov
orl
cli
rcr
sub
sar
test
cmp
push
dec
cld
inc
jne
icebp
stos
repz
call
jno
add
and
sbb
inc
enter
sub
call
sub
fdivs
pop
clc
les
insl
jbe
fs
decl
jle
loop
pop
inc
imul
pop
pop
lds
jl
call
mov
xor
sbb
ljmp
push
les
sbb
loop
call
add
dec
push
fs
fs
jno
loopne
mov
inc
out
cmpsb
push
push
dec
aas
imul
jmp
or
jg
jle
imul
push
push
cmp
jp
mov
or
dec
imul
xchg
sub
pushl
mov
loopne
std
fwait
mov
mov
jns
pop
nop
jp
push
test
mov
mov
mov
sar
jnp
int
lock
test
sbb
cs
fcmovnbe
mov
inc
fwait
xchg
pop
inc
std
jg
mov
push
inc
ret
subl
dec
sbbl
fldt
add
push
xchg
jecxz
adc
roll
push
aaa
xchg
dec
cli
mov
cmc
into
scas
cmpl
inc
loopne
pop
pop
mov
and
xor
add
add
loope
fs
test
sub
decl
jae
or
pushf
push
add
mov
cmp
push
testl
cmp
dec
jnp
sub
pusha
or
jbe
rclb
lahf
divb
adc
notl
test
es
cmp
repz
cmc
das
adc
mov
push
shrl
clc
test
cli
lret
add
call
or
adc
mov
jno
xor
idivl
mov
push
or
pop
decl
mov
inc
cmpsb
jge
sbb
jle
pop
sti
stc
cmp
cmp
xor
pop
inc
xchg
inc
or
mov
and
and
test
fnstcw
ret
lret
data16
jo
xor
jmp
mov
jl
lret
add
push
jp
sbb
outsl
sub
into
outsb
mov
insl
adc
sarl
mov
xor
repnz
cmc
es
pop
cmc
xor
in
xchg
stos
jg
adc
lods
sbb
rcrl
lahf
inc
je
mov
aad
mov
or
jle
push
stc
push
mov
dec
inc
int3
inc
xlat
xor
mov
or
cmp
popa
jmp
cmp
pushl
add
js
sbb
inc
divb
mov
push
cld
mov
push
cwtl
xchg
fdivl
shrl
ljmp
insl
ret
lcall
lock
mov
call
lcall
pushl
lret
repnz
dec
leave
push
mov
and
sbb
xor
fcomi
popa
jl
jae
fwait
lock
lock
xorb
insb
pop
fxam
stos
rcll
call
push
mov
test
leave
sbb
popf
cli
ljmp
adc
mov
jle
cmp
test
push
pop
test
ljmp
add
in
call
test
xchg
fistpl
lcall
sub
fwait
lcall
daa
add
ret
call
xchg
ret
fucomip
jbe
int3
mov
pop
push
mov
ljmp
repnz
call
mov
data16
dec
gs
pop
lcall
sub
xor
jns
mov
adc
iret
mov
sub
mov
ja
dec
cmc
pop
add
xchg
cli
test
mov
ja
lcall
ljmp
jns
cs
es
cmp
mov
into
es
xor
adc
call
aad
xchg
xchg
mov
push
ret
dec
scas
enter
inc
cmp
lock
ja
ljmp
xchg
outsb
arpl
pop
mov
scas
cmp
jmp
incl
dec
mov
jl
iret
cli
out
cmp
xchg
leave
ljmp
inc
sub
in
iret
jns
add
push
out
xchg
clc
sbb
push
aam
jae
mov
mov
mov
test
pop
push
stos
rcl
mov
sarb
push
dec
imul
jne
dec
mov
mov
mov
je
mov
xchg
sub
call
mov
shll
jns
in
dec
mulb
cmp
lret
dec
insb
cmp
insb
or
das
clc
push
adc
jae
mov
xchg
cmpsl
les
mul
stc
aas
imul
call
imul
pusha
add
inc
jmp
stc
fistps
fiaddl
aas
sbb
sbb
mov
ret
dec
mov
movsb
popf
add
call
mov
xor
dec
icebp
sub
jmp
jecxz
loopne
imul
dec
jno
repnz
jno
sti
je
ljmp
push
cwtl
lock
mov
movsb
pop
cmp
pop
loop
jle
mulb
pop
insl
std
call
or
mov
lods
jle
cwtl
aaa
jbe
sbb
jl
jge
ljmp
call
roll
ja
lock
dec
pop
cs
jl
out
xor
hlt
push
inc
test
fnstsw
push
xlat
mov
adc
pop
mov
leave
jnp
cs
pushl
in
mov
sub
mov
ret
sub
push
insl
mov
cmp
incl
add
test
fwait
xchg
or
fwait
jle
push
mov
sbb
out
aas
pusha
in
push
adc
adc
lret
mov
inc
mov
lcall
push
clc
sti
outsl
mov
cmp
sbb
sbb
jmp
cmc
aam
push
xchg
jmp
or
imul
cmp
dec
xor
stos
decl
fs
adc
cmp
in
jg
pushf
lret
mov
push
mov
pushf
jno
or
mov
dec
sub
data16
cmp
insl
adc
in
fstps
adc
sub
push
cmpsl
inc
inc
inc
or
mov
in
fldcw
lock
inc
add
sub
push
mov
push
hlt
sub
movsl
lcall
pushl
jecxz
sub
and
sbb
mov
fcmove
mov
ljmp
incb
sub
icebp
repnz
mov
cmpsb
ljmp
int
test
into
imul
cld
call
cmpsb
cld
icebp
out
fxch
fs
rep
add
jmp
icebp
into
mov
xor
sbb
inc
dec
enter
add
inc
cmp
lods
jg
aam
mov
jmp
xchg
adc
ret
sub
jle
mov
aas
repz
outsb
pop
mov
insb
scas
mov
push
movsb
mov
add
jle
hlt
hlt
test
mov
incl
xchg
scas
and
inc
clc
push
jle
sti
sub
into
in
lods
adc
mov
fdivs
mov
inc
sbb
xor
or
pushf
popa
xchg
imul
loopne
cmp
ljmp
dec
push
inc
inc
cld
jo
mov
lahf
mov
arpl
mov
sar
stos
insb
cld
sub
jb
out
movsb
pushf
and
jp
out
xor
and
call
shrb
add
test
or
mov
mov
ja
ljmp
ljmp
xchg
or
fldenv
push
xor
jae
push
repz
pop
mov
stos
lcall
jge
lcall
dec
jge
sarl
orb
inc
shl
in
lds
js
stos
mov
mov
mov
bound
cld
jae
test
outsb
sub
sub
cmp
aam
test
add
and
push
xchg
sbb
adc
test
jno
mov
scas
xchg
lock
iret
jae
mov
jae
lcall
jg
in
bound
xchg
clc
loope
push
mov
pop
aaa
sbb
imul
dec
pop
aad
jb
stos
movsb
inc
addl
cmp
ljmp
sub
mov
ret
or
jmp
ja
inc
xchg
clc
push
adc
mov
inc
cmpl
and
push
inc
push
lcall
rorb
scas
outsb
das
pop
enter
adc
inc
jle
push
push
es
jno
aaa
pushl
clc
push
out
ret
lock
int3
aam
mov
jnp
mov
dec
mov
or
lcall
es
xlat
dec
add
sub
dec
dec
jge
add
fiadds
movsl
filds
loopne
and
sbb
sub
push
jecxz
push
in
cmp
iret
adc
mov
dec
xor
pop
sbb
mov
cmpsb
push
push
mov
xor
mov
loop
cmp
mov
aam
leave
cmpsb
sti
imul
dec
aas
in
sub
into
or
jne
aas
cmpsl
sub
mov
mov
inc
in
push
push
mov
bound
pushl
xchg
pop
data16
es
jg
sti
test
mov
sbb
mov
loopne
push
add
cmp
sub
inc
lock
mov
adc
and
ljmp
sub
test
test
loope
ds
insb
addb
mov
jmp
sub
aaa
stos
pop
hlt
decl
orl
out
imul
sbb
mov
call
divl
call
loopne
addl
js,pt
add
inc
stos
ss
subb
mov
sahf
fstpl
cmpsb
jg
lcall
cmp
rcl
inc
sub
fldenv
call
scas
add
inc
mov
leave
je
cmp
dec
ds
adc
jg
js
leave
xor
ja
mov
clc
sbb
aas
sbb
lcall
cmp
pop
leave
xchg
pushf
adc
mov
sub
xchg
and
cmp
out
out
leave
or
xchg
mulb
jg
sahf
out
mov
sub
and
cmp
insl
dec
fiadds
dec
rcrl
hlt
xor
out
aam
repnz
jl
jg
ljmp
cmp
imulb
scas
dec
inc
rclb
out
jg
rol
xchg
stos
mov
sbb
rcrb
call
or
outsb
icebp
ret
ss
repz
inc
movsb
outsl
sub
lret
divb
pushl
test
sub
ja
cmp
dec
in
or
cmp
loopne
jmp
jecxz
test
sub
pop
js
loope
cld
in
imul
stc
fnstcw
lcall
lret
daa
xor
call
imul
loop
decl
pop
lds
pop
mov
filds
jns
adc
ffreep
xchg
mul
dec
lea
push
lods
sub
scas
push
sbb
xor
lcall
inc
jmp
jge
loope
mov
in
jg
test
add
ret
in
mov
incl
inc
add
pop
jecxz
or
xchg
cmp
jb
ljmp
repnz
rolb
lcall
jbe
push
mov
clc
fbld
sub
ds
fisttpl
inc
int
jns
mov
adc
ljmp
jle
mov
xor
sub
jb
shlb
xchg
pop
into
movsl
adc
scas
clc
dec
pushf
sbb
and
int
add
mov
mov
mov
adc
dec
or
push
enter
jg
pushf
inc
mov
or
sbb
in
mov
jp
push
cmpsb
inc
sub
cli
push
cmp
xchg
fdivr
call
push
or
xlat
dec
mov
mov
ljmp
lods
adc
xchg
dec
daa
shr
xor
arpl
cmpsl
insb
jae
in
sbb
lcall
mulb
ja
notl
jge
jnp
push
mov
mov
incl
mov
pop
repz
inc
jnp
pop
sub
sti
pushf
jl
jmp
push
mov
std
es
inc
stos
lahf
fsubrl
dec
mov
test
nop
and
or
mov
dec
sub
incl
jbe
sub
xchg
sbb
rcr
insb
xor
movsl
ja
pushf
sub
mov
lods
out
repz
xor
rolb
popa
add
xchg
scas
aaa
mov
sbb
loopne
pushl
mov
jo
insb
jge
je
js
dec
cld
xchg
mov
jmp
mov
cwtl
in
ljmp
and
cmp
and
aas
xchg
cmpsl
mov
cmpsb
mov
pop
cmp
pushl
int3
mov
mov
sbb
mov
aaa
aad
ret
pop
sub
add
xchg
jmp
push
pusha
bound
iret
mov
sbb
decl
dec
or
fdivr
and
xor
xorb
shrb
mov
pop
mov
mov
mov
shlb
mov
call
sbb
ljmp
inc
scas
xchg
js
loope
jbe
lock
pmaxsw
pop
mov
in
mov
daa
inc
loopne
mov
or
dec
mov
xchg
stos
jge
inc
xchg
inc
lcall
out
call
in
mov
mov
ljmp
nop
adcb
cmpsl
dec
mov
jg
sti
ss
add
fimuls
and
inc
jo
shl
iret
stos
xor
mov
out
dec
popf
es
fcomi
push
jg
dec
push
or
cld
hlt
add
dec
fimull
andl
ss
fdivr
add
lret
shrb
jmp
mov
in
inc
cwtl
movsb
popf
ret
out
or
add
incl
sub
outsb
sbb
cli
jns
subl
mov
data16
push
cmpsb
add
jecxz
loope
jp
jmp
mov
sahf
test
jb
inc
inc
adc
add
dec
push
enter
call
sub
mov
ds
inc
mov
ds
mov
fs
insb
fcoml
lcall
ret
int3
dec
scas
inc
into
ror
mov
adc
sbbl
out
scas
das
out
lods
loopne
inc
xchg
enter
and
add
pop
movsl
mov
dec
insl
adc
mov
mov
lcall
push
xlat
or
and
inc
jo
jmp
or
nop
fwait
mov
mov
push
xor
mov
daa
pusha
jbe
pop
inc
or
add
lahf
dec
cmpsb
pop
rcll
inc
call
fdivl
and
push
sub
lahf
test
lahf
shl
mov
mov
push
jns
mov
popa
xlat
hlt
and
std
cmp
clc
mov
mov
inc
adc
mov
jae
inc
xor
ret
mov
fxch
lahf
cli
lcall
ljmp
ret
xchg
test
imul
int
hlt
add
sbbl
cs
mov
enter
push
jmp
outsl
test
test
and
mov
mov
mov
fadds
lea
test
ljmp
mov
and
nop
pop
mov
ror
inc
mov
aam
dec
cmp
add
call
lahf
mov
xchg
addl
incl
or
lock
fsubrs
inc
cli
mov
jecxz
jne
mov
out
push
call
cs
nop
ljmp
cmp
xchg
sub
dec
inc
es
cli
repz
lcall
or
enter
popf
push
sbb
push
xchg
sahf
outsb
xchg
sub
push
xchg
iret
mov
lcall
shrb
pusha
imulb
std
add
insb
pop
jp
inc
add
add
push
sub
std
mov
decl
cld
inc
adc
movsb
adc
adc
xor
test
bound
lcall
int
dec
jle
in
adc
int
cmp
mov
sub
cmp
scas
call
sbb
sub
shll
stos
dec
mov
push
inc
loopne
popa
xchg
dec
addr16
call
push
cmp
sbb
fists
aam
jmp
sarb
lcall
or
xlat
pop
mov
fwait
and
outsl
mov
scas
mov
xor
adc
rclb
pop
test
dec
xchg
test
popf
cwtl
jne
fisttpll
ljmp
adc
lcall
mov
repnz
cmp
and
out
mov
cmpsb
inc
mov
test
xchg
jne
inc
push
jg
in
adc
incb
popf
xchg
xchg
leave
pop
push
test
repz
pop
add
cmp
xor
movsl
mov
data16
decl
mov
in
mov
lret
int
xchg
sub
jl
in
in
scas
cld
lcall
testl
dec
outsl
subb
jno
out
loope
ud0
call
xor
int3
int
aam
xlat
js
sbb
aaa
wrmsr
sti
inc
push
sar
pushl
mov
dec
inc
mov
mov
clc
sub
mov
inc
fdivrp
xor
cmp
pushl
jp
pop
mov
cld
pusha
pop
and
outsb
inc
xchg
ja
ss
clc
mov
xlat
fstpl
ljmp
jge
inc
in
movsb
sti
sub
add
pop
clc
push
cld
jno
inc
xchg
das
inc
es
out
int3
adcb
sbb
add
mov
dec
mov
cmp
pop
xchg
push
push
int3
jns
out
js
fisttpll
ss
adc
fists
inc
xchg
ret
dec
xor
push
int
idiv
cmp
and
push
dec
loop
pushf
sub
subl
jle
fstpt
cmp
or
stos
push
mov
ret
mov
mov
outsl
mov
aam
iret
mov
insl
jbe
inc
aaa
xor
stos
pop
xchg
stc
movsb
dec
enter
mov
adc
enter
add
lret
pusha
adc
add
cmp
leave
dec
daa
xor
outsb
mov
bound
mov
push
sub
pop
sti
lock
pop
inc
fisubl
or
shr
aad
dec
loop
push
dec
fcompl
in
lret
mov
popf
stos
sub
pushl
shrl
test
fistl
jno
mov
xor
insb
aad
movsl
jae
xor
mov
sbbb
and
xor
aam
jecxz
push
ljmp
aas
xor
inc
shr
push
pop
jno
notb
outsl
in
push
mov
enter
jg
pushl
cld
sub
les
inc
push
sbb
dec
pop
mov
mov
jg
ret
cmpsl
push
movsb
push
cld
lock
dec
mov
sbb
fdivrp
jg
call
xchg
enter
mov
adc
fistps
push
call
xlat
adc
xlat
xor
insb
dec
movsb
cmc
cmp
xchg
mov
test
jae
inc
add
push
lcall
dec
pop
shrb
repnz
mov
vrcpps
push
lret
call
dec
push
xchg
mov
loopne
je
iret
pushf
iret
mov
pop
pop
pop
push
push
cld
jb
fstps
sbb
in
lods
adc
sbb
adc
js
daa
in
sbb
js
ljmp
push
pop
pop
cmp
xor
cmp
mov
push
int3
cmp
enter
push
stc
mov
ljmp
subb
lods
jnp
popa
mov
movsl
pop
outsl
fstpt
jmp
aas
pcmpeqb
inc
or
cwtl
test
loop
in
or
xor
mov
sbb
and
loop
aas
mov
gs
out
pop
xchg
mov
test
jge
push
cmpsb
jnp
xchg
in
sahf
shll
call
mov
cltd
mov
sbb
outsb
fsub
stos
jg
in
adc
outsl
lods
mov
int
xchg
push
cmpsb
test
clc
scas
clc
cmp
xchg
jnp
arpl
repz
fcoml
mov
arpl
adc
adc
outsl
stos
mov
jnp
sahf
inc
decl
pop
sbb
add
cmc
ret
xchg
jbe
mov
xor
dec
pshufw
out
cli
call
jp
in
ret
bound
push
mov
push
mov
cli
inc
iret
dec
cmpb
or
adc
or
sar
pushl
int3
idiv
mov
cld
lods
fsubl
jge
repz
aam
jg
imul
sbb
mov
pop
rol
call
fs
push
push
sub
fmul
sbb
scas
push
sbb
iret
jecxz
inc
cmp
inc
fprem
leave
fldl
ja
clc
decl
mov
daa
mov
popa
lods
lahf
lods
insb
mov
sbb
jmp
jmp
test
add
mov
inc
mov
mov
incl
cltd
mov
mov
dec
into
scas
out
mov
xchg
mov
gs
jle
frstor
pushl
shrl
rcrb
dec
test
push
jb
push
mov
fwait
movsl
cmp
decl
sbb
mov
mov
call
push
add
sub
jb
movsb
psubd
sbbl
loop
mov
push
mov
xchg
lret
fnsave
adc
xacquire
xor
decl
push
loope
sbb
mov
sbb
scas
out
mov
sub
pop
xlat
insl
lcall
lret
jnp
pusha
out
mov
popl
pop
dec
int
rcrl
push
lods
stc
xchg
incl
cld
and
int3
into
fwait
int3
add
jmp
insl
aas
das
scas
mov
lods
jp
ds
mov
sub
sbb
push
cmpsb
add
pop
outsb
jg
inc
out
pop
xlat
lods
pop
fisttpl
mulb
test
das
and
jns
scas
jmp
imulb
push
lcall
inc
pop
xchg
out
iret
call
cmp
leave
xor
jg
dec
hlt
pop
lret
es
lds
xchg
dec
adc
push
inc
data16
add
jo
call
mov
push
mov
aas
xor
es
je
sub
push
fisubl
lea
js
out
dec
push
or
and
adc
dec
adc
decl
sbb
pop
js
jo
mov
pushw
fwait
icebp
fisttpl
decl
pushl
or
xor
xor
jp
cmp
add
mov
ljmp
or
loope
pop
lret
ja
daa
orl
sarb
push
sbb
ljmp
inc
mov
out
imul
xchg
adc
add
stc
sbb
outsl
hlt
loope
shrb
repnz
popa
fstpt
lahf
mov
mov
mov
outsl
lds
cmp
cld
lds
or
jo
cmp
iret
mov
push
jbe
mov
in
jbe
xchg
push
loopne
cmp
icebp
mov
shr
lock
mov
mov
mov
pop
inc
sub
sub
fists
jb
dec
fldt
nop
push
cld
or
xchg
and
scas
inc
mov
xor
xchg
mov
pop
aad
xchg
jge
xchg
pop
aad
fs
dec
ljmp
jbe
mov
inc
jl
jns
adc
fucomi
mov
mov
add
sti
and
cli
mov
cld
mov
in
jle
mov
popa
xor
push
mov
ljmp
xor
loope
dec
aad
push
jge
decb
cltd
inc
stos
mov
mov
fdivl
jne
lahf
lcall
jmp
aaa
leave
fidivrs
mov
pop
push
xor
lret
loope
addb
jb
pop
pusha
sar
or
fisubrs
push
inc
jmp
sub
ja
out
add
lret
cli
xor
jmp
dec
and
cmp
mov
lods
sbb
pop
jecxz
sub
jg
shr
mov
sub
jmp
add
inc
jl
jbe
sbb
mov
arpl
mov
lahf
test
call
fcomps
adc
pop
sbb
adc
jb
push
jno
scas
jnp
push
adc
jmp
cmp
in
addl
or
lods
int3
imul
jp
and
mov
xlat
mov
add
mov
cmpsl
mov
and
push
or
shl
add
mov
ja
push
pop
dec
xchg
dec
xchg
int
in
outsb
mov
or
scas
in
and
sbb
popf
fnstsw
jmp
ljmp
stos
xchg
mov
xor
add
daa
sbb
fistpll
push
and
push
mov
dec
cmp
ljmp
imul
lret
jecxz
mov
lock
out
out
clc
call
gs
scas
fisubrs
sti
jo
mov
scas
aam
cmc
jl
jmp
add
mov
and
push
add
cmpsl
mov
cmc
sub
jne
xchg
mov
mov
stos
pop
cld
decl
xchg
cmpsl
pop
cmpsl
push
add
cmp
daa
faddl
mov
mov
jmp
sbb
xchg
sbb
adc
mov
mov
push
iret
out
jns
sbb
jmp
mov
stos
cld
loopne
or
addr16
sub
fdivp
mov
mov
stos
sub
xor
lret
sahf
jno
sbb
push
leave
fs
mov
icebp
pop
aaa
adc
stos
les
jnp
bnd
incl
mov
mov
jbe
xor
fmuls
push
in
push
xor
mov
jno
jmp
popf
xchg
push
or
mov
cmc
pop
hlt
dec
and
inc
inc
mov
js
call
fmuls
adc
jmp
pop
sub
shll
cmp
cltd
xor
dec
mov
inc
clc
call
in
lahf
lea
xor
mov
xor
dec
int
stc
lret
lahf
out
pusha
jae
sahf
loope
je
or
xor
out
sar
stos
inc
fadd
or
mov
pushl
clc
jne
mov
sar
xchg
into
aad
mov
popa
xchg
pop
daa
adc
incl
push
into
jp
push
aaa
imul
rolb
ss
xlat
jnp
pushf
mov
decl
jbe
jae
mov
sbb
cmp
dec
cld
xor
mov
sti
mov
test
and
jecxz
call
addr16
repz
mov
test
int
jae
lret
adc
sbb
lock
stos
jbe
cwtl
das
adc
jge
mov
and
call
in
negl
ficomps
and
xchg
or
xlat
pop
sbb
inc
cmpsl
fcoms
xchg
cmp
cmp
pusha
popa
cmp
dec
jne
dec
mov
cs
cmc
fs
movsl
clc
cs
and
jmp
lock
dec
cmp
leave
outsb
lds
push
sti
mov
leave
add
decl
push
mov
xchg
fsubl
or
mov
aaa
add
stos
jg
mov
adc
xchg
jae
inc
cmp
push
xchg
or
je
mov
push
pushl
cmp
push
out
or
jne
cli
and
int3
out
fsubl
mov
push
sub
push
jb
stos
inc
lcall
jne
gs
jno
adc
cmp
stos
jg
lcall
lcall
aam
jne
hlt
mov
push
cmp
mov
fistps
int
cs
jb
movsb
adc
sub
shl
mov
pop
ret
adc
jmp
inc
sahf
hlt
sbb
push
sahf
in
stc
pop
test
pop
and
jg
pop
ljmp
iret
int3
sub
js
sub
pop
stc
adc
aaa
test
adc
call
std
jle
and
gs
cld
add
test
into
sti
stos
cmp
sub
jne
jg
decl
mov
push
jne
mov
push
test
repz
mov
incl
pop
adcl
mov
les
mov
sub
jge
int3
xor
cs
incl
jnp
mov
sbb
fptan
loope
mov
add
je
push
aas
pop
pop
sbb
mov
jmp
sub
test
mov
movsb
sub
mov
pop
data16
xchg
pop
daa
mov
outsl
pushl
js
cmp
out
sbb
jns
sbb
scas
ss
je
mov
sub
cmpsl
push
or
jmp
jb
xchg
test
xor
cmc
mov
imul
jns
inc
jnp
lahf
out
mov
je
fmul
les
pop
lcall
cli
and
cltd
enter
arpl
push
ret
and
mov
inc
mov
loop
mov
test
jo
jae
decl
insl
int
mov
bound
adc
in
lock
jnp
add
decl
xchg
test
lret
ss
dec
ljmp
mov
sti
sar
pushl
mov
mov
push
add
or
push
push
jbe
enter
jg
imul
inc
pop
jp
scas
int
sbbl
ljmp
cli
mov
cs
mov
and
out
mov
xchg
push
pop
adc
and
lcall
cmp
repz
and
jo
mov
shrl
push
mov
pushl
mov
cmp
repnz
pop
cli
sbb
cwtl
jmp
ljmp
aas
mov
xor
loope
push
int3
stc
xchg
or
jecxz
push
clc
notl
mov
cmp
repz
jae
inc
adcl
inc
pop
or
inc
and
and
inc
jmp
add
mov
add
mov
rolb
incl
out
add
or
add
mov
mov
jg
add
pop
insb
dec
push
xchg
inc
add
add
dec
orb
lods
add
inc
mov
adc
adc
mov
push
nop
scas
pop
sub
jg
lds
insl
inc
add
nopl
aad
sahf
push
scas
dec
mov
push
or
pusha
or
jno
mov
jnp
xchg
movsl
push
daa
add
dec
jnp
fists
push
and
cs
push
movsb
iret
cmc
jnp
movsb
inc
scas
push
and
stos
push
and
push
test
into
push
and
imul
push
inc
pop
pop
add
adc
pop
sbb
mov
sbb
add
ljmp
push
add
push
ds
les
pushl
adc
adc
fs
mov
insb
or
lret
imul
lcall
push
sub
lret
mov
mov
push
fnstcw
int
lcall
pop
stos
mov
rcl
add
aam
push
insl
fcomi
pop
add
outsl
push
shll
fidivrl
iret
insl
outsb
pop
shrl
push
ret
je
sti
in
xorb
fisttps
add
fwait
inc
ds
jg
mov
in
movsb
push
add
mov
sbbl
loopne
cmp
push
mov
push
push
int
xor
jne
push
aam
push
ret
fsubp
cmpsl
frstor
inc
push
mov
push
pop
popf
shrl
dec
add
ja
pop
ja
scas
data16
inc
xchg
cs
jge
push
push
shlb
lret
stos
out
mov
inc
ja
push
push
xlat
jne
fildl
jbe
fdivs
push
aad
push
xlat
ja
jge
fwait
or
push
jns
push
jp
sub
in
fnstcw
inc
push
fidivrl
sarl
ja
sub
push
fldl
ret
jmp
mov
adcb
xchg
sub
xchg
in
xchg
sub
push
pop
cs
xchg
xor
xchg
push
setbe
xor
ss
xlat
mov
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
out
fimull
mov
mov
rol
add
add
cld
out
jns
xlat
add
lock
hlt
clc
stc
out
sahf
out
sti
cld
std
fwait
lods
adc
inc
jo
add
mov
jae
add
imul
pop
add
fldcw
pop
add
pop
adc
mov
inc
mov
mov
add
jg
add
add
or
add
add
in
add
or
test
ja
add
test
or
push
sbb
or
pop
pop
adc
xor
add
pop
add
push
lods
lods
pop
fidivl
mov
add
scas
insl
or
scas
lods
pop
pop
adc
and
fiaddl
lods
adc
sbb
jns
scas
sbb
scas
scas
scas
scas
sbb
inc
ficomps
mov
mov
and
inc
mov
push
mov
add
add
push
push
mov
lock
and
mov
mov
pop
and
pop
mov
and
add
mov
mov
subb
pop
sub
mov
xchg
pop
pop
sub
lret
daa
mov
inc
dec
mov
inc
lcall
subb
dec
pop
cmp
adc
aaa
cmpsb
add
mov
fstps
insl
insl
push
pop
pop
or
or
add
mov
insl
pop
pop
xor
mov
pop
das
push
cs
jnp
in
pop
xor
add
xor
das
pop
push
push
xor
adc
pop
call
inc
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
push
pop
les
jno
add
pusha
pop
pushw
pushl
dec
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
lcall
stc
pushf
fwait
lcall
mov
mov
inc
xchg
push
push
stc
in
dec
ja
jns
dec
push
bound
js
cld
mov
xor
jne
je
push
adc
jg
mov
push
lret
cmovo
xrelease
xor
or
pop
pop
scas
rorb
sti
mov
xchg
pop
push
dec
add
push
outsl
jg
iret
mov
cmpsb
push
mov
xor
xor
ja
jp
mov
push
ja
jb
cs
xor
mov
pop
ds
jbe
out
fdivp
mov
and
push
mov
xchg
outsl
lahf
dec
pop
jo
push
inc
mov
cmp
mov
inc
mov
enter
xchg
jp
inc
aas
repz
push
popf
inc
mov
aaa
add
xchg
jno
lret
push
bound
ja
insl
imul
lahf
inc
inc
push
insl
lcall
add
data16
xchg
outsb
add
xchg
xchg
pop
push
rcr
mov
test
push
dec
push
movsb
jae
add
jb
pop
sub
test
push
mov
push
rorb
int
add
add
lcall
outsb
mov
adc
stos
std
dec
push
add
ja
sahf
jbe
fistpl
in
imul
stos
push
add
inc
cli
data16
jp
add
js
mov
data16
jns
test
shrl
insb
pop
outsb
push
outsl
jle
frstor
ds
jno
add
jge
subb
push
jg
fiadds
call
pop
mov
mov
in
mov
push
es
bound
out
arpl
jnp
dec
bound
loopne
iret
sahf
mov
cmp
add
xchg
in
push
jle
cs
inc
jecxz
or
ss
fnstcw
aad
push
divb
fildl
xor
faddl
pop
cmpb
push
sbb
sbbl
test
test
sbb
pop
rolb
test
in
mov
push
xchg
nop
and
outsb
push
insb
push
out
xchg
in
xchg
lock
sub
sub
imul
outsb
out
xchg
das
push
xchg
mov
mov
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
mov
es
aam
jle
push
cmpsb
scas
orb
jo
test
sahf
jp
jbe
ja
fcmovnbe
stos
into
shll
lgs
int
mov
fwait
mov
shll
rcr
rcl
mov
push
aad
jle
data16
add
jo
mov
cs
dec
rorb
add
je
dec
add
add
daa
add
mov
pop
repnz
cld
femms
or
or
or
incl
pop
push
adc
push
add
add
std
inc
insl
ds
add
mov
adc
adc
mov
and
sbb
shrb
mov
push
add
and
mov
jnp
loopne
ds
mov
aas
add
lcall
mov
stos
or
aas
aas
nop
out
jns
cmp
aaa
add
inc
sti
mov
sbb
inc
jbe
adc
mov
incl
jle
cmp
scas
xor
dec
mov
in
mov
adc
fnstenv
decb
test
repz
ds
add
xor
pop
mov
ds
lods
stos
test
cmpsl
ljmp
out
cmpsl
cmpsb
cmpsl
add
test
mov
sahf
add
xor
sub
sub
sub
sub
ljmp
add
dec
and
inc
mov
ret
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
nop
aas
std
lcall
xchg
xchg
mov
nop
test
insl
popf
mov
jg
incl
jns
jle
addl
jo
outsb
pushf
shlb
divl
imul
rolb
pusha
mov
addb
add
add
push
cs
or
aaa
jl
push
add
cmc
repz
dec
xor
aas
add
add
mov
xchg
pop
loopne
inc
add
mov
pushl
pusha
inc
add
mov
push
mov
fnstsw
repnz
out
add
addr16
add
add
mov
push
in
iret
sti
dec
sti
lcall
or
mov
push
pop
mov
jo
dec
lret
js
into
xchg
add
jp
add
xchg
clc
cmpsb
mov
test
push
pop
sar
scas
xchg
js
in
and
out
fcoms
fstpt
sub
xchg
push
sub
nop
sub
fistl
out
xchg
xor
xchg
outsb
lcall
sahf
insl
es
jbe
negl
fcmove
aas
mov
outsl
fst
es
push
lret
loopne
push
std
and
or
fdivrp
divl
pop
and
add
sbb
add
jge
and
inc
push
xchg
push
dec
dec
dec
dec
dec
dec
add
mov
call
dec
or
adc
cmp
adc
dec
or
dec
dec
dec
inc
add
push
adc
add
or
pop
repz
pusha
pop
cmovg
inc
push
dec
sbb
cmpsl
std
pop
inc
and
dec
and
adc
sbb
dec
in
in
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
lcall
sbb
sbb
and
add
dec
ss
xor
sub
sub
push
test
add
mov
add
add
mov
ss
add
outsb
mov
push
add
add
and
mov
pop
xor
outsl
mov
cmpsl
rorl
and
cs
incl
or
jmp
xlat
sub
sbb
incl
and
sbb
pop
mov
es
dec
inc
xchg
xor
mov
jnp
pop
stc
sysret
in
lock
hlt
movups
jg
adc
test
ja
pop
push
rorl
outsl
add
jg
push
mov
pop
lahf
pop
or
mov
sbb
cli
add
push
mov
cli
filds
call
add
or
addr16
mov
adc
xor
xchg
jg
mov
ss
das
sti
sbb
add
mov
jle
inc
loopne
xchg
inc
dec
sti
shlb
jg
xchg
mov
mov
push
mov
adc
xor
idivb
nop
or
cld
jg
mov
add
cmpsb
std
ja
push
adc
std
jg
and
and
jg
push
or
jns
std
dec
adc
push
adc
add
jle
inc
xor
data16
xor
decb
and
or
lods
add
incl
inc
inc
dec
xor
shll
incb
jg
or
fidivrs
jg
sbb
insb
or
adc
sbb
xchg
jbe
insb
and
flds
add
push
mov
test
mov
scas
incl
add
incl
lods
jle
lret
imul
inc
xchg
inc
pop
lods
inc
addr16
adc
adc
sub
dec
jg
call
add
pusha
sbb
jg
pop
xor
inc
data16
lods
lea
add
xor
adc
adc
cwtl
mov
push
inc
push
ss
pop
push
jg
or
orb
mov
test
jmp
stos
pop
stos
mov
ficompl
pop
pop
add
daa
inc
pop
mov
insl
leave
add
jle
enter
add
test
inc
mov
inc
mov
cmp
decl
dec
xchg
push
bound
mov
sldt
mov
mov
cmp
push
arpl
mov
push
mov
dec
xlat
out
call
push
inc
lea
shlb
lcall
dec
or
dec
xchg
nop
push
ss
and
mov
inc
lea
push
dec
jns
pop
or
fnstenv
add
push
jne
xor
jbe
and
fwait
out
push
jnp
push
jp
neg
fnstenv
push
js
dec
jbe
pop
add
cmp
jne
mov
mov
or
sbb
push
daa
aam
ljmp
jle
push
daa
hlt
iret
dec
incl
push
in
outsb
ss
jmp
call
xchg
shr
call
dec
or
neg
xchg
lret
mov
push
adc
enter
addr16
fwait
jbe
sahf
inc
out
mov
insl
and
cs
aas
popf
inc
inc
enter
pushf
cmp
mov
and
cwtd
mov
xchg
xor
imul
push
sub
sub
nop
daa
ss
cmp
je
cs
mov
xor
aaa
outsb
incl
mov
and
jg
pop
fnsave
xor
adcl
sahf
and
inc
movb
es
sbbb
cmp
ja
xor
and
xchg
mov
pop
pop
ja
pinsrw
add
stos
mov
cltd
sbb
cmp
push
subb
push
sbb
mov
sahf
sub
pop
or
dec
aas
iret
jmp
pop
push
adc
pop
push
orl
lea
jns
jno
popf
push
imul
mov
sbb
test
push
lock
cmp
cmp
icebp
add
subl
in
add
mov
push
test
decl
add
and
mov
daa
sub
xchg
add
push
sbb
xor
inc
cmpsb
testl
std
or
add
jmp
syscall
mov
sub
xchg
add
lods
push
xchg
lahf
or
pop
lcall
or
mov
sub
sub
pop
test
jmp
test
lcall
push
ret
std
out
syscall
test
popl
adc
sbb
mov
sti
ud0
adc
decl
mov
test
ljmp
inc
popa
or
lcall
lcall
out
call
sbb
inc
rorl
lods
lcallw
sub
sub
or
mov
sqrtps
and
push
add
enter
sbb
and
iret
fcmovne
shlb
inc
sti
out
jo
mov
call
test
rorb
dec
decl
add
rcrb
shrb
sbb
xlat
fdivrp
call
sub
mov
sti
push
std
push
dec
mov
adc
test
call
decl
and
mov
pop
stc
smsw
cwtl
inc
push
call
jg
ret
out
cli
notb
xchg
outsb
jmp
xchg
call
sbb
call
push
push
jmp
fcmovnu
in
inc
pop
fcmovbe
pop
pop
mov
mov
inc
xorps
aaa
mov
decl
push
and
js
shll
roll
inc
fiaddl
sub
ret
in
es
adc
jmp
ljmp
in
fwait
inc
lahf
inc
inc
push
inc
inc
pop
sbb
jbe
pop
mov
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
and
inc
cs
dec
dec
ljmp
jmp
fistl
insl
push
rcl
xchg
je
fwait
outsb
shrb
es
cltd
dec
pop
ss
jb
imulb
cltd
dec
mov
insl
pop
daa
lcall
jmp
push
push
push
xchg
push
push
ljmp
inc
dec
sub
sahf
decl
lcall
pop
int
repnz
jge
es
cmpsb
popfw
cmp
aas
dec
lcall
lahf
push
dec
xchg
imul
and
int
push
aaa
push
lcall
mov
xchg
push
xchg
es
xchg
xchg
dec
notb
sub
ljmp
ljmp
cs
jmp
mov
cwtl
in
fimuls
jmp
or
std
faddl
sub
fstpt
push
jnp
jp
or
or
jns
jl
push
jge
pusha
mov
movq
es
jbe
adc
fidivrl
jg
mov
push
dec
push
dec
repnz
repnz
jae
pop
fidivrl
fwait
outsl
mov
push
mov
jnp
jge
hlt
in
add
int3
sub
negl
add
stc
mov
pop
add
sub
stos
outsl
lahf
or
jne
push
adc
adc
rep
fstpl
int
push
addb
jnp
lahf
dec
es
addl
mov
sysret
jg
and
xchg
fisttps
sub
iret
out
mov
cli
jmp
iret
fisttpl
idiv
sarb
inc
sub
jg
mov
icebp
test
insl
dec
pop
cld
inc
js
mov
fstpt
mov
icebp
out
jbe
adc
daa
jg
repnz
mov
ja
loope
xchg
mov
jp
es
xchg
pusha
or
inc
aaa
xor
stc
sti
cmpb
jmp
mov
cmp
jg
dec
in
sarb
push
movsl
pop
ja
shlb
jl
dec
and
jge
idiv
dec
and
push
lcall
push
fsubl
pop
pusha
and
pop
push
nop
sub
mov
sbb
decl
mov
ljmp
jne
mov
push
pop
push
pop
dec
mov
pop
or
xchg
aam
jne
mov
inc
push
dec
lcall
push
jns
add
sub
mov
jmp
xchg
jmp
mov
into
insb
mov
push
xchg
mov
loop
adc
ljmp
xchg
jmp
mov
lret
jg
out
mov
mov
push
jp
push
mov
or
jmp
xlat
push
cmovno
sti
push
fwait
insl
jmp
jae
sbb
outsb
imul
out
sub
or
lret
mov
mov
push
pop
push
or
inc
lahf
aaa
orb
lret
adc
call
sub
pop
pop
xchg
push
cli
inc
fnstenv
jp
into
pop
push
sbb
push
sbb
push
or
and
or
inc
or
arpl
dec
shrl
or
stos
test
add
push
add
xchg
rol
mov
nop
mov
sahf
xchg
bound
inc
sub
add
stos
dec
lgdtl
inc
push
gs
jo
xor
push
sbb
push
lret
or
and
xchg
test
xor
xor
mov
xchg
js
adc
xchg
inc
xchg
mov
sbb
fimuls
inc
lret
push
add
lock
inc
jmp
lahf
jo
das
aam
je
popf
sbb
sbb
popa
imul
cltd
inc
mov
insl
pushf
es
aas
add
push
adc
add
jno
jns
xchg
dec
dec
add
add
add
add
push
mov
add
adc
xchg
sbb
mov
adc
adc
insl
lods
add
mov
jo
push
xchg
dec
movsl
pop
xor
in
sbb
mov
push
popa
shlb
xor
lods
xor
cmp
jb
inc
inc
mov
jae
andb
shlb
xchg
je
filds
movsl
sbb
insb
adc
add
adc
add
sbb
pop
xor
adc
inc
loop
xchg
and
pop
testl
lahf
push
sub
sbb
cmc
add
adc
roll
jo
xor
fcoms
dec
push
outsl
loop
and
in
sbb
shlb
sub
lcall
fildl
insb
inc
fstpt
push
out
inc
imul
sbbl
inc
push
shll
adcb
adc
mov
in
orb
inc
loop
or
adc
popa
sbb
pop
adc
cs
add
bound
add
cmp
inc
cmp
fldl
jne
arpl
add
add
jbe
or
push
js
inc
sti
popf
xchg
adc
or
icebp
icebp
popa
xchg
aad
dec
jl
insb
cmp
add
pop
add
les
jnp
xor
popa
negb
cmp
jo
je
push
dec
mov
sbb
in
xchg
sbb
push
dec
inc
sub
mov
push
cmp
les
roll
adc
lcall
add
adc
pop
loopne
pop
adcl
fiaddl
xchg
mov
leave
test
push
addb
dec
cwtl
and
jmp
lock
jne
rcrl
ret
pop
jecxz
je
bound
mov
pusha
jnp
test
cmp
jae
andl
xchg
xchg
push
mov
or
or
pop
cmp
or
shl
adc
icebp
add
mov
and
daa
cmp
adc
xchg
add
popa
pop
push
sub
sub
shrb
inc
pop
push
fwait
rolb
popa
dec
fbstp
lcall
or
push
scas
ficoml
jns
mov
js
nop
dec
int
lods
add
xchg
inc
imul
in
imul
push
pop
add
add
and
inc
jg
stos
and
call
mov
je
clc
clc
lock
jne
inc
mov
jge
gs
outsl
jae
loop
jb
enter
jae
push
sbb
test
add
movsl
pop
fisubs
iret
xchg
adc
out
add
jne
xlat
das
sub
sub
sub
aas
sub
xchg
pop
sub
mov
sub
mov
lret
mov
and
addl
push
inc
mov
push
pop
imul
xchg
insb
jne
xchg
push
into
arpl
jae
and
dec
jns
or
fimull
inc
or
xor
xlat
fstps
test
imul
fimuls
mov
fimull
xor
jne
fs
scas
mov
inc
or
push
popa
rcpps
mov
js
push
jb
addb
inc
inc
xchg
or
jbe
stos
mov
imul
rol
mov
ja
pop
and
insb
sahf
daa
lods
push
push
and
push
cld
mov
mov
notl
fwait
push
mov
dec
orl
stos
dec
inc
adc
add
sub
js
hlt
lock
dec
loopne
and
test
ljmp
sub
std
addr16
or
orl
mov
and
adc
nop
jne
outsb
inc
sbb
push
pop
and
int
fcomps
je
insl
dec
outsb
dec
xchg
mov
and
das
dec
shrb
xor
sub
push
push
js
add
pop
add
cmpsb
mov
dec
add
sbb
mov
movsb
dec
shll
or
or
xor
movhps
mov
shll
mov
jl
fidivrl
es
pop
add
inc
add
movsb
outsl
xchg
add
and
lock
xchg
cmpsb
dec
pop
push
and
or
roll
shlb
es
push
out
test
or
int3
popf
stos
daa
or
inc
push
push
imul
mov
pop
imul
insb
scas
cli
enter
test
mov
jo
jno
sbb
loopne
xchg
out
pop
xchg
jecxz
xchg
les
push
int3
arpl
sbb
add
dec
xor
out
pop
loopne
push
mov
jo
or
rolb
mov
call
dec
mov
push
pusha
or
sbb
icebp
rclb
lock
subl
push
imul
loope
push
hlt
and
ret
movsb
and
dec
sbb
insb
sub
ret
mov
outsl
inc
inc
xor
mov
dec
pop
lret
inc
lock
sub
arpl
mov
mov
xchg
xorb
pop
xlat
adc
or
mov
ret
adc
and
inc
xorb
in
and
sbb
in
inc
aaa
outsl
and
mov
cmpsl
inc
ret
and
mov
test
cmpsl
adc
mov
mov
push
mov
pop
outsb
xchg
dec
insl
dec
adc
fs
adc
mov
sub
xchg
or
push
jo
cld
addr16
loope
push
arpl
test
cwtl
inc
push
pop
xor
xchg
cwtl
push
and
arpl
inc
add
cmpl
inc
push
mov
nop
fs
mov
cmp
jns
sbb
dec
and
jp
in
inc
cmp
push
pop
mov
and
push
xchg
lods
jmp
mov
push
fdivs
or
rcrl
shlb
fadds
aas
insl
inc
sub
bound
xchg
mov
nop
shrb
dec
inc
addr16
test
add
push
sbb
repz
mov
or
push
inc
inc
cmp
movsl
int3
js
xor
sbb
adcl
xchg
cmp
lcall
mov
out
inc
pop
inc
jmp
test
imul
shll
add
aaa
js
in
and
out
sub
push
sbb
outsl
test
cmp
inc
xchg
sub
xchg
jl
addr16
roll
cli
or
push
daa
adc
cld
add
add
xlat
push
cmp
and
enter
fidivrl
pop
add
movb
sahf
insb
pop
pop
shll
inc
dec
pop
add
or
clc
add
lock
pushf
add
dec
in
dec
negl
mov
or
mov
and
xlat
out
hlt
dec
cmp
addr16
jp
cmpsl
or
pop
and
or
out
mov
inc
add
cmp
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
