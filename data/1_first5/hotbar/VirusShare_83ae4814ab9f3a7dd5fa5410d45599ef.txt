fcomp
decl
or
add
mov
or
adc
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
shl
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jl
mov
mov
sahf
mov
les
mov
mov
xor
push
test
pop
mov
add
xor
das
dec
adc
outsb
push
inc
fidivrs
or
sbb
aaa
push
xor
mov
adc
push
lea
push
ficoms
push
add
mov
sub
bound
rclb
ffree
add
xchg
dec
add
jg
and
add
push
pop
sbb
int
jmp
inc
push
orb
dec
icebp
out
xor
xor
inc
hlt
push
and
sbb
push
sbb
rcll
push
mov
add
add
ja
and
or
inc
lock
or
sub
lds
mov
pop
lods
jp
or
and
add
xchg
inc
fists
sbb
sub
and
push
fldt
out
mov
push
push
sub
cmp
pop
add
popa
xor
mov
out
shrl
outsl
mov
enter
popa
xchg
push
out
xor
inc
movsl
push
bswap
mov
into
mov
fiadds
stc
or
leave
mov
pusha
push
rorl
mov
arpl
fdivrs
push
les
add
push
push
and
ds
and
pop
bnd
add
loop
shll
push
cmp
sub
test
push
loopne
push
sbb
mov
and
and
leave
frstor
pop
xor
push
lret
jg
push
mov
lea
or
jecxz
mov
push
mov
jbe
add
xchg
xor
sbb
lods
nop
xchg
pusha
sbb
and
and
dec
test
jo
push
jae
sub
in
xor
cld
clc
mov
and
mov
or
lea
cmp
jge
mov
sbb
jns
pop
pop
lods
mov
pop
ret
xor
push
add
repz
push
sub
push
insb
loope
push
add
lret
ret
and
sbb
les
leave
incl
cmp
ljmp
test
clc
mov
sub
mov
and
or
lds
sub
jl
or
insb
add
inc
and
jb
enter
push
and
cmp
sub
push
xor
je
add
pusha
push
add
inc
aas
nop
push
push
aam
mov
test
les
add
das
push
push
out
lock
es
loopne
in
dec
inc
bswap
mov
add
call
inc
mov
inc
test
jecxz
pop
mov
or
sbb
push
push
push
or
sbb
push
movsb
sbb
inc
hlt
cwtl
jle
jp
test
cmp
mov
mov
xchg
cltd
push
push
loopne
jge
cmp
jmp
pop
or
adc
or
cmovo
or
add
or
or
leave
rorl
xor
add
xor
push
push
es
lahf
stos
add
push
lea
mov
fistpll
add
ds
loopne
stos
ja
and
xor
jge
xorb
hlt
push
jg
dec
or
fsubrl
lock
push
push
adc
sbb
sbb
mov
add
popf
mov
pop
in
mov
mov
insb
lret
stos
mov
push
cs
or
and
icebp
fdivl
pop
and
pop
dec
add
test
jl
adc
fisttpl
cmp
es
or
push
add
push
mov
cmp
adc
in
cmp
jbe
popf
mov
pop
push
pusha
sub
sete
test
test
push
mov
or
and
or
and
les
sub
mov
shll
cmp
int3
xor
pop
sub
and
push
cmp
pop
inc
sub
xchg
pop
mov
xadd
test
incb
adc
sarl
pop
push
jle
je
and
inc
xor
jecxz
loop
xorb
push
inc
jle
or
push
push
dec
cs
jl
push
punpckhbw
add
and
insl
mov
mov
dec
push
push
out
push
xchg
or
popa
push
or
jmp
sub
sub
dec
add
push
ret
adc
add
scas
dec
push
cmp
xchg
sbb
push
push
or
and
das
push
sbb
std
enter
fists
cmp
jns
add
cs
mov
ret
js
pop
dec
jle
test
sbb
add
insb
sti
mov
cmp
xchg
js
cmp
icebp
sbb
cmp
rcl
inc
jle
xor
push
pop
push
and
int3
lcall
or
leave
mov
test
push
jecxz
inc
mov
test
push
push
mov
divps
adc
mov
or
add
mov
mov
sub
mov
sti
cmpsl
mov
shrb
adc
mov
cmp
imul
lock
pop
notl
jno
xor
fcmovbe
out
push
bound
adc
popa
jp
or
movlhps
push
mov
lea
data16
push
lcall
nop
mov
js
jg
cmpl
je
adc
adc
adc
push
outsl
aam
mov
adc
lcall
jmp
mov
movsb
aam
sub
add
inc
movsl
jns,pn
sbb
inc
int
cs
mov
add
xchg
loop
inc
adc
adc
pop
jmp
add
adc
loopne
fs
das
cltd
das
cld
mov
data16
mov
mov
adc
jl
lahf
mov
in
jmp
inc
mov
add
pusha
and
mov
adc
sub
pop
aaa
push
adcl
icebp
repnz
lea
loopne
icebp
jns
nop
xchg
daa
pop
jl
aad
mov
push
push
sbb
mov
lcall
lods
aam
jne
jo
cwtl
xchg
loop
lods
mov
adc
sub
in
jg
bound
mov
jmp
cmc
lea
stos
inc
add
mov
pop
sti
or
pop
and
add
js
nop
mov
or
pop
incb
enter
and
cmp
jmp
in
test
and
pop
xlat
cmp
xchg
add
jb
aam
cmp
mov
add
lods
nop
cmpsl
pop
inc
add
ret
pop
inc
adc
jle
jne
mov
clc
les
dec
addr16
and
mov
sbb
push
jg
leave
cmp
je
sub
cmp
je
or
pop
jmp
sub
sbb
subl
or
test
pusha
jo
add
mov
mov
adc
out
mov
sbbl
shrb
outsb
lahf
push
loopne
cmp
sub
pop
add
sub
cmc
sub
inc
call
call
xor
adc
ljmp
add
aad
cmp
jl
test
incl
push
push
xchg
push
js
jne
or
in
and
xor
push
mov
lods
lock
or
mov
inc
loope,pt
cmp
call
pop
pusha
cmpsl
push
test
push
cmp
lock
rorb
lock
fbld
and
jne
sub
and
mov
and
int3
xchg
mov
sub
into
sbb
jmp
ss
mov
lea
std
call
add
inc
test
jne
sub
push
push
inc
sbb
jb
cs
adcb
or
jno
pusha
mov
push
adc
lahf
rcll
fs
insb
jne
adc
cmpb
out
pop
dec
es
lea
insl
in
rolb
and
cmp
xchg
in
idivb
loope
pushl
testb
push
xor
mov
pop
insb
pop
pop
ret
mov
jbe
test
orb
in
push
jbe
adc
pop
rcrl
int3
add
loopne,pn
call
jo
jo
lcall
outsl
or
mov
sbb
rol
fisttps
or
xorl
adc
lea
mov
rcr
adc
pop
cmp
ret
push
orb
push
mov
pop
hlt
std
sbb
jge
push
call
cs
push
test
pop
nop
lahf
xchg
mov
mov
mov
cmp
pop
insb
insl
lcall
jg
inc
clc
mov
lea
push
or
push
mov
test
movl
or
mov
cmp
ja
add
jmp
insb
fcoml
add
push
mov
icebp
hlt
jecxz
clc
cwtl
jl
inc
jo
jg
mov
fcmovb
add
add
dec
pop
ret
lock
mov
push
enter
xchg
std
xor
cmp
js
push
insb
jge
sub
pop
fstpl
add
in
inc
hlt
mov
xchg
mov
or
xor
mov
push
dec
push
sbb
push
fld
or
mov
pop
push
ds
jne
js
xchg
lds
jbe
or
push
cld
mov
or
lret
repz
sbb
cmp
ja
push
clc
lea
push
push
jmp
ret
sub
clc
push
add
rorb
mov
and
hlt
sub
lea
out
lahf
adc
int
inc
rclb
test
fsub
addr16
addb
test
jb
pusha
push
push
push
or
cli
cmp
push
push
pop
testl
jmp
pushf
subl
mov
enter
or
shlb
jo
sub
sbb
mov
adc
pop
adc
mov
pushf
jecxz
mul
jg
sbbl
add
or
shl
test
aas
pop
push
mov
mov
or
mov
pop
fisttpll
lds
jle
add
les
pop
aas
mov
push
aaa
add
out
adc
call
je
cmpl
lea
jl
mov
push
jne
push
jns
pop
xor
pop
enter
test
push
int3
loop
sub
add
ljmp
push
push
sbb
daa
or
lods
adc
adc
mov
loope
xchg
inc
xor
fndisi(8087
push
push
cli
pop
jae
cmp
xlat
dec
xchg
test
rorb
lret
inc
cs
mov
stos
fcoms
pop
dec
mov
ret
repnz
sub
aaa
or
inc
inc
or
shlb
adc
ret
popa
sub
xor
jg
dec
and
cmpsb
lcall
inc
mov
sbb
fdiv
cmp
das
inc
je
adc
push
fprem
mov
das
test
mov
cmp
pop
push
push
insl
mov
mov
lds
push
dec
push
mov
mov
jb
data16
adc
mov
loopne
call
rol
cmp
jge
call
lea
dec
adc
adc
push
xor
pop
mov
lea
lds
lds
sub
test
inc
test
inc
or
add
repnz
andb
xchg
cs
ret
and
cmp
add
shlb
in
adc
pop
ret
and
push
or
mov
dec
loopne
ljmp
outsl
or
fsubp
xor
cltd
ret
mov
enter
or
push
rorl
nop
or
or
add
ret
push
ds
adc
mov
mov
or
inc
jle
lcall
dec
inc
or
hlt
xor
xor
cmp
jl
push
hlt
cmp
cli
lret
testb
stc
sarl
mov
cmp
add
cmp
mov
inc
not
dec
mov
pop
inc
rol
movsb
jb
xor
lock
js
cmp
mov
mov
inc
sub
or
and
push
jno
dec
jbe
ficomps
test
and
dec
popa
adc
cmpsb
add
pop
push
xor
sub
jmp
incl
aas
lahf
mov
popa
inc
cmp
jb
mov
fwait
cmpsw
add
fnstsw
pushf
or
popf
fucomp
mov
pushf
push
pop
pop
push
mov
sub
lcall
outsb
sub
addps
xor
mov
insb
jb
pop
imul
incb
pop
out
arpl
out
cmp
jbe,pt
lret
xor
lds
jecxz
mov
pop
inc
rorb
adc
cmp
mov
adc
cmp
in
and
movsb
je
push
or
or
enter
push
test
shll
roll
negb
pop
jb
pop
add
pop
jge
pop
roll
repz
ja
pop
xor
movsb
push
push
outsl
fidivrs
and
adc
pop
sbb
mov
or
shlb
sbb
stos
jp
shlb
jge
cmp
jne
xor
push
push
dec
pop
outsb
or
icebp
in
es
sbb
repnz
push
lea
add
ret
out
push
inc
fisttps
mov
test
lds
enter
or
xor
rcll
xchg
pop
lea
inc
aas
inc
adc
hlt
popf
push
dec
popl
enter
ja
adc
stc
or
aas
sbb
mov
das
and
rcrb
and
jg
and
sbb
pop
jo
pop
mov
add
pop
push
or
sub
into
push
sbb
pop
pop
cs
mov
loope
outsb
dec
clc
pop
test
mov
cmpsl
lahf
mov
xor
cmp
fiadds
ja
cmc
pushw
mov
je
or
mov
sbb
test
mov
fildll
add
push
push
movsb
rol
and
xor
scas
cmp
sbb
adc
sub
pop
dec
mov
push
adc
sub
sbb
out
lahf
out
cmp
in
cmpl
and
jle
dec
or
jmp
ret
pop
push
cld
lock
jne
and
cmp
fidivrs
pop
orl
jecxz
push
pop
cmp
pop
and
mov
or
adc
je
icebp
mov
orl
je
pop
mov
jne
cmp
mov
call
jne
popa
aas
pushf
xchg
mov
in
xor
movsb
movb
out
cmp
sbb
or
push
inc
dec
adc
sti
daa
mov
decb
adc
mov
cmp
dec
je
incl
lea
jp
mov
add
xchg
sbb
in
sti
push
mov
das
cmp
jg
push
insb
or
enter
leave
and
lds
mov
scas
pop
cmp
shr
push
pop
jecxz
add
or
call
push
jp
lods
cwtl
push
lea
int3
dec
mov
mulb
test
inc
sbb
adc
imul
js
stos
mov
adc
mov
xchg
mov
insb
sbb
inc
sbb
mov
xchg
cwtl
fnstsw
or
mov
stc
sbb
sub
lods
scas
sub
fdivl
sub
adc
or
mov
or
cmp
fnstenv
push
inc
cmp
jl
out
test
imul
cmp
in
adc
pusha
adc
fwait
push
and
sbb
pop
and
add
jg
sbb
push
cmp
movsb
fstl
loope
push
adc
ja
fwait
sub
sahf
in
sahf
in
or
push
notb
sbb
pop
cs
pusha
dec
ljmp
sarl
xchg
sahf
std
ljmp
inc
mov
ret
pop
outsb
dec
dec
mov
pop
push
lea
push
fisubrl
jmp
call
add
push
lea
cmp
xchg
push
dec
aam
sbb
dec
inc
les
inc
jns
push
pop
sahf
mov
cmp
pushf
jno
loope
enter
sbb
push
mov
adc
mov
bound
sbbb
mov
pop
cmc
cmpsl
stos
add
fiaddl
cld
xchg
mov
nop
xchg
and
add
xor
lock
add
jg
push
push
jle
clc
stos
sti
cmpsl
ficompl
add
pushf
subl
xor
mov
xor
jmp
pop
adc
cmpsl
mov
and
int
jle
and
leave
or
clc
movsl
mov
and
cmp
dec
sbb
add
imul
sbb
movsb
rcll
inc
call
in
out
push
add
xchg
roll
mov
js
cmp
inc
jbe
out
dec
fs
jb
sub
or
scas
aam
xor
call
sub
setne
push
setge
sbb
dec
and
xor
push
jbe
lea
pop
dec
std
mov
rcpps
add
aaa
push
push
inc
cwtl
rcrl
je
lea
test
push
add
add
add
mov
outsl
xchg
pushf
push
mov
test
sahf
pop
mov
iret
dec
mov
ret
pop
loope
in
sbb
orl
cmpl
xor
adc
mov
and
test
mov
inc
mov
xor
ret
push
out
pop
push
push
push
lea
or
adc
cmp
idiv
and
inc
clc
push
push
mov
mov
insb
fisttpl
ja
dec
dec
mov
push
push
xor
push
inc
dec
and
iret
pushf
cmp
je
sub
lahf
mov
daa
push
ret
add
mov
ss
mov
sub
mov
dec
mov
sahf
inc
add
mov
cmp
or
add
xor
stos
sbb
setno
jbe
fdivs
ret
cwtl
push
cmp
jns
sbb
push
adc
xor
cmp
dec
inc
or
jle
inc
xor
sub
into
push
push
arpl
xorb
jecxz
cmp
pop
ret
inc
neg
sbb
cltd
jge
or
and
add
cmp
mov
sbb
pop
jg
push
addb
adc
sbb
mov
cmp
xor
push
fldt
shlb
popa
scas
sub
push
add
jecxz
sub
add
movzbl
in
repz
out
mov
scas
mov
jo
mov
fimuls
lods
cmp
xor
and
jae
aas
mov
dec
or
push
adc
clc
cwtl
add
jmp
lret
xor
ret
pop
push
push
push
and
push
add
mov
shrl
push
jo
lret
push
mov
mov
xor
add
pop
cmp
int3
mov
or
push
pop
xlat
loop
pop
push
pusha
push
mov
je
cmp
pusha
jne
and
add
lahf
sbb
ret
das
jbe
call
lea
jmp
pop
add
repz
test
ljmp
xchg
cwtl
jb
pop
cmpsl
add
rcrb
fldenv
test
call
lea
mov
out
fisubrs
rorb
dec
xchg
xchg
push
xor
insl
and
daa
dec
adc
adc
pop
flds
mov
int
mov
mov
mov
push
add
push
xchg
popa
lea
mov
sub
incl
jne
push
mov
inc
ds
or
fs
mov
sub
lea
ret
push
pop
push
pop
jl
ret
mov
fstpl
movl
push
fistpl
dec
cmp
out
inc
ds
or
dec
mov
popa
pop
and
imul
or
lods
and
xchg
push
mov
dec
sub
clc
mov
cmp
test
mov
insb
xchg
mov
push
dec
sbb
in
popf
cli
push
dec
lret
push
push
sub
sub
push
addb
inc
inc
sbb
mov
push
xor
pop
sbb
pusha
jbe
add
pop
pop
imul
pop
sub
fcoms
clc
iret
push
push
lea
mov
out
mov
xor
push
add
mov
cmp
or
jmp
je
jno
cmp
pusha
pop
inc
xchg
adcb
pop
add
inc
lcall
addb
sub
xor
inc
orl
je
ret
add
or
mov
mov
dec
aad
dec
inc
push
push
and
mov
sbb
loopne
mov
js
je
push
jbe
ja
mov
test
test
mov
faddl
sub
inc
shrb
inc
sub
pop
inc
fldl
fmull
add
lock
jl
inc
in
push
sub
dec
dec
cltd
jb
es
nop
or
dec
rcll
adc
push
xchg
adc
loope
jno
and
add
mov
popa
mov
enter
push
ret
or
and
and
lds
pop
test
aam
adc
enter
movsl
ret
jne
or
jecxz
sbb
push
add
push
mov
mov
ljmp
add
enter
and
jp
shl
mov
sub
dec
andl
jbe
xchg
sbb
push
es
mov
ss
cmpb
nop
or
sbb
adc
or
repnz
add
inc
xor
int
inc
xorl
cwtl
bound
scas
sti
outsl
addb
push
xchg
push
push
lds
pop
cmp
cld
cld
add
rcrl
and
cmp
jb
mov
jge
xchg
lock
push
stos
sbb
sub
sub
push
pop
inc
movsb
mov
fs
insb
pop
int
dec
push
mov
fcomps
stos
and
push
or
jo
iret
add
fdivl
outsb
mov
xor
int
and
inc
fmull
sbb
push
ljmp
push
push
lods
xchg
mov
xchg
jo
xor
cmp
push
movsl
push
mov
or
popf
js
fstpl
push
sbb
mov
dec
addl
add
das
insb
xor
lds
popa
dec
mov
jno
xor
out
or
enter
xchg
add
add
lock
xor
jecxz
xor
es
xchg
sbb
cs
loopne
inc
rcrl
lret
push
adc
jl
cltd
and
or
add
push
sar
push
fistl
daa
jl
dec
or
xlat
and
mov
mov
lock
decl
adc
out
sar
mov
shr
add
mov
imul
push
adc
sbb
aas
movsb
in
jle
in
adc
in
add
jmp
mov
cmc
sub
mov
stc
add
les
mov
push
enter
jl
lcall
call
je
cmpl
aaa
ss
mov
xor
call
pop
adc
or
dec
xor
ficomps
icebp
shr
pop
es
lea
data16
mov
rorl
and
into
outsl
sbb
sbb
and
js
adc
inc
dec
push
dec
xchg
rolb
or
push
inc
add
inc
jb
cmpsl
sbb
sub
jnp
das
cli
dec
jle
fldz
data16
push
ljmp
pushf
sub
sub
mov
mov
test
ja
stos
lea
cltd
idivl
loopne
add
aaa
ds
sub
outsb
outsl
xor
sub
sbb
jne
sbb
push
fs
sti
test
arpl
mov
fidivrs
in
jle
adc
test
or
jbe
add
outsl
adc
sbb
and
and
inc
in
add
ja
imul
imul
cmp
iret
outsl
dec
jae
dec
sub
jge
jmp
mov
sub
pop
fistl
fists
loopne
sbb
push
faddl
xor
pop
or
clc
sub
xor
mov
fdivrp
shll
and
fisttps
sbb
mov
mov
mov
jns
inc
push
fcoms
xchg
imul
icebp
in
or
mov
js
xchg
fidivl
mov
pop
pushf
add
idiv
inc
cmp
clc
in
push
pop
movb
add
mov
pop
mov
icebp
leave
jge
movsl
dec
addl
enter
push
push
leave
call
jbe
dec
pop
fimull
push
sbb
and
inc
out
hlt
or
insb
xchg
mov
loopne
mov
je
sbb
arpl
rcll
sti
lret
xor
xchg
adc
movsb
or
cmp
mov
add
insl
xchg
xor
add
push
sub
xchg
adc
mov
and
rolb
mov
sbb
add
gs
pop
adc
invd
mov
add
xchg
mov
add
inc
fistpl
cwtl
repnz
mov
pop
les
stos
aam
push
inc
outsl
loopne
push
sbb
jns
jmp
jecxz
sbb
add
mov
scas
in
jne
and
xchg
sbb
xor
or
and
lea
pop
or
mov
adc
jb
dec
cmp
pop
add
mov
push
push
aaa
ret
pop
cmpb
push
push
sub
push
out
and
xchg
fisttps
fisttps
add
fmuls
inc
xchg
test
or
aad
xor
jo
fstpl
inc
in
mov
movl
sahf
adc
inc
movsl
jo
push
adc
inc
in
mov
add
push
inc
cmp
inc
cmpsb
lods
mov
nop
sub
mov
shl
jmp
inc
sbb
adc
inc
pop
ret
pop
insb
jle
sbb
jmp
mov
ds
sub
lea
pop
add
jb
fs
ficomps
imul
mov
push
mov
push
mov
xor
lds
push
mov
adc
pop
leave
pop
sub
sbb
push
push
cmp
xchg
arpl
movsl
mov
pop
ret
lahf
or
jae
push
and
and
sbbb
and
mov
or
add
push
dec
test
clc
push
sub
clc
setb
jecxz
ljmp
push
mov
sub
cmp
setae
lcall
and
add
mov
xor
jle
mov
and
xor
pop
pop
xchg
sub
cli
inc
pop
push
add
push
cmp
inc
push
aam
xor
adc
lea
push
adc
faddl
push
je
push
movsl
push
es
pop
pop
cmp
adc
icebp
mov
or
jecxz
push
outsl
shrb
push
pop
cmp
sbb
push
inc
push
test
mov
aam
sbb
pop
lcall
push
add
adc
push
imul
push
cmp
dec
push
leave
test
inc
or
scas
sbbb
mov
nop
addl
les
iret
call
pop
adc
push
push
pop
and
or
clc
ljmp
ja
movzbl
cmpsl
shr
lcall
inc
adc
and
cmp
idivb
jmp
lds
push
mov
add
add
lods
sbb
sub
add
sub
scas
xlat
xchg
push
adc
xchg
dec
rcrb
mov
pushf
ret
ret
ds
inc
jb
adc
adc
mov
movl
test
insl
xchg
pop
jmp
or
dec
pusha
les
add
jmp
and
cwtl
jmp
add
lea
mov
mov
xchg
cltd
and
inc
lahf
cmpsl
and
jo
push
popa
int
movsl
cwtl
hlt
add
enter
sbbb
xchg
sbb
adc
ret
mov
and
or
mov
movsl
pop
jmp
mov
imul
add
push
ds
inc
push
std
and
mov
call
xchg
mov
sbb
das
cmpsl
jp
mov
jmp
add
mov
jle
sub
lds
dec
mov
sbb
push
or
and
mov
cmpsl
sbb
jo
outsb
jmp
add
push
adc
jmp
subps
stos
movsb
mov
push
jge
nop
dec
int
daa
mov
insl
aam
dec
dec
add
in
movsl
push
push
movsb
mov
sub
pusha
rcrl
mov
lret
aaa
adc
pop
sbb
xchg
dec
sbb
je
xor
inc
popa
cld
js
jo
shrl
mov
je
icebp
jae
repnz
sbb
push
push
ljmp
pop
mov
jmp
adcl
subb
jg
insl
andb
mov
adc
out
sahf
les
xchg
xor
pop
enter
or
or
adc
push
insl
cmp
popa
cli
sbb
push
push
dec
mov
mov
movsl
jp
dec
inc
pop
jb
or
xchg
sub
mov
push
arpl
inc
adcb
sbb
sbb
imul
daa
mov
xor
jo
and
lea
inc
nop
xchg
incb
inc
push
push
dec
add
push
push
js
subl
lcall
sub
push
or
mov
shrb
sub
inc
sahf
nop
jo
mov
sbb
je
push
add
add
add
fcmovnu
iret
pop
call
xor
leave
test
push
add
in
adc
mov
push
fisttpl
cmpsb
and
or
xchg
add
inc
and
test
xor
negb
dec
cmp
and
inc
push
add
pop
leave
add
add
cmpb
gs
cltd
fs
pop
call
mov
fcomps
xchg
adc
jno
pop
push
and
mov
movsb
loopne
add
add
push
mov
xlat
jae
cmp
clc
cmpsb
ret
push
adc
add
jg
adc
mov
loop
sbb
cmp
dec
outsl
mov
push
add
inc
ss
es
pop
movl
jg
add
jne
xor
dec
pop
enter
pop
das
clc
sbb
data16
mov
pop
sub
xchg
or
in
add
repnz
cmp
add
cmc
or
fsubp
and
dec
pop
or
adc
push
sbb
scas
movsb
pop
push
mov
daa
and
jns
clc
dec
jge
out
es
ret
cli
ret
sub
xor
ljmp
and
lea
and
push
or
ja
mov
jae
imul
ljmp
jecxz
push
cmp
mov
rolb
mov
inc
cmp
mov
jmp
push
in
pusha
cld
mov
enter
mov
push
adc
insl
xchg
aam
jb
push
sub
popf
loope
leave
lret
sbbl
jae
xor
cmp
add
push
cmp
mov
sub
shl
inc
xor
or
lret
jp
mov
adc
mov
add
sub
mov
sbb
test
aad
jle
addr16
in
and
add
push
int3
add
cmp
push
out
inc
mov
imull
into
dec
mov
std
stc
cmp
pop
test
call
or
sbb
imul
xchg
sbb
push
test
into
movl
xchg
pop
lods
jge
jne
popf
es
lret
cmp
rclb
cld
lret
pop
mov
sub
adc
iret
adc
xchg
push
hlt
mov
or
ljmp
sbb
sub
rcrl
sub
push
xor
movsl
or
add
push
lahf
sub
pop
xor
xchg
xor
and
pop
insb
xorb
add
pop
ds
pop
jne
das
mov
or
es
repnz
dec
aaa
jle
sbb
add
mov
push
or
lods
or
dec
out
mov
stos
dec
sbb
cmp
xor
outsl
ret
pop
fs
add
push
add
push
lahf
push
fmull
dec
mov
shl
sahf
fs
cmpsb
xchg
sbb
sbb
sbb
loop
sub
sub
hlt
and
xor
push
je
push
imul
shlb
in
sbb
repz
mov
xor
or
enter
aad
sti
sbb
mov
xor
push
insb
jmp
add
es
lret
scas
mov
cmp
cmpsl
push
pop
sbb
push
pop
dec
push
or
cmc
enter
jbe
pop
dec
mov
cmp
clc
xor
mov
add
and
cwtl
popl
nop
push
and
pop
jne
orb
cmp
pop
ljmp
adc
adc
adc
mov
cmp
data16
add
sub
movsb
stc
bound
mov
loope
xor
and
xchg
push
inc
and
and
add
leave
xor
xor
bound
out
and
seto
inc
jl
mov
jge,pt
adc
xchg
jb
rolb
imul
add
push
jb
ljmp
mov
loope
mov
push
shlb
ds
fists
push
sbb
sbb
and
lcall
xor
call
and
mov
fnstcw
iret
fildll
mov
clc
push
and
lea
and
add
movsb
or
or
mov
mov
add
adc
out
and
xorl
mov
push
sub
in
inc
push
pop
shlb
sbb
xor
mov
mov
sbb
adc
xchg
push
pop
lahf
or
cmp
cs
or
adc
cltd
add
jo
sbb
jnp
addb
or
xchg
sbb
imul
pop
dec
int
lds
add
cmp
fnsave
sbbl
daa
nop
out
pop
push
push
adc
xor
xor
and
ljmp
test
adc
mov
mov
adc
sahf
pop
add
mov
mov
push
mov
push
cmovp
in
insb
dec
mov
in
mov
iret
addl
or
push
divl
cld
and
jns
test
inc
loopne
in
pop
dec
cs
pusha
cmp
push
sub
pop
sub
cld
jl
mov
add
jne
cmp
dec
in
mov
js
test
es
loop
ljmp
inc
enter
xor
push
and
pop
lock
stos
inc
xchg
inc
cmp
push
loop
jb
aaa
xor
imul
inc
loopne
cmp
shlb
mov
icebp
add
test
addr16
adc
sub
rorb
push
subb
insl
xchg
or
insl
dec
jge
add
or
add
dec
cli
jne
movl
sub
dec
and
dec
cmp
add
enter
pop
ret
mov
mov
pop
pop
mov
shrl
lods
mov
and
mov
mov
add
popw
add
mov
popa
jo
jbe
out
lret
sub
or
sbb
das
daa
mov
jg
dec
mov
add
test
cmp
and
xor
mov
inc
imul
adc
iret
pop
pushf
call
inc
or
cmp
lahf
push
mov
mov
and
jg
fcmovnb
or
and
add
or
or
add
mov
stos
in
push
push
les
into
inc
sub
mov
gs
stos
pop
mov
outsl
add
mov
movsb
mov
test
lea
daa
mov
mov
rolb
push
test
add
adc
imul
lock
push
mov
subl
mov
fs
or
andl
push
clc
mov
add
ljmp
add
into
pop
xchg
out
mov
push
jp
lock
cmp
dec
pusha
push
inc
dec
inc
cmp
addr16
mov
pop
fwait
outsl
sub
add
scas
pop
call
out
or
dec
mov
jle
jb
mov
mov
sbb
and
popw
push
jno
add
subb
xchg
adc
push
jb
filds
hlt
xor
mov
push
cmp
std
test
jg
popf
or
push
mov
in
in
pop
jb
pop
and
or
lods
sub
bound
roll
pop
aaa
or
and
lret
push
dec
pop
pop
pop
xchg
in
and
leave
push
rcrb
cld
test
je
aad
mov
jns
test
in
adc
je
adc
dec
push
mov
pop
or
dec
and
fcomp
jo
xor
or
or
dec
in
addb
hlt
dec
push
sbb
sub
mov
es
out
lcall
test
imul
jl
gs
or
les
sbb
xor
sub
fists
add
lret
std
add
or
xchg
sbb
movsb
imul
add
es
mov
sti
and
pop
adc
adc
and
int
int3
xor
cmpsl
xchg
movsb
push
xchg
adcl
adc
lea
push
cmp
cwtl
sbb
pop
pop
scas
mov
sbb
and
jb
dec
dec
or
xor
adc
sbb
scas
mov
out
add
pop
jb
pop
adc
push
and
and
pop
jle
and
fists
push
cmp
popa
push
in
cwtl
jae
enter
adc
and
add
cmpsb
stos
jo
add
mov
and
cmc
insb
mov
rcrl
pop
pusha
nop
add
cmc
cmpl
push
adc
adc
fstpt
xor
jecxz
je
loopne
ds
sbb
insb
cmpsb
rolb
add
lret
test
xchg
paddq
mov
push
push
add
test
inc
push
in
test
into
inc
dec
in
add
in
sbb
and
repnz
adc
or
sbb
dec
sbb
add
inc
or
adc
sti
xor
sbb
adc
push
push
pushf
aaa
inc
fbld
sbb
dec
sbb
push
mov
lea
jmp
mov
in
popa
and
cmpl
sbb
or
or
and
mov
dec
fcomps
cmp
arpl
pop
and
sbb
and
in
cwtl
in
shll
lods
ja
dec
mov
enter
xor
add
sub
jecxz
lods
lgs
adc
es
and
push
lahf
sub
adc
lahf
push
outsl
sbb
cmp
and
sub
cmp
push
loope
jl
cmp
mov
cmp
sub
and
orl
lock
sub
mov
or
or
outsb
jmp
jmp
pop
je
and
insl
add
add
adc
mov
dec
ret
psubsw
jae
or
outsl
mov
sbb
pop
push
cmp
mov
push
sarb
and
mov
rcrl
dec
pusha
sbb
std
sbb
andnps
inc
dec
fs
pop
adc
out
add
mov
xchg
pop
inc
je
rorl
popa
xor
jbe
mov
or
push
into
shrb
inc
jo
lcall
inc
pop
xor
and
xchg
add
test
mov
movsl
pop
jb
lret
sub
add
mov
cmp
add
rorl
sub
mov
mov
fmuls
add
insb
adc
iret
xor
adc
and
fwait
nop
mov
shll
out
adc
leave
or
in
adc
movsl
mov
lea
je
and
decl
mov
dec
clc
and
or
jge
push
mov
mov
jecxz
push
push
dec
in
mov
or
aas
inc
ret
jg
push
sub
sub
and
ret
add
pop
je
push
mov
icebp
outsb
jl
fucomi
cmp
test
aas
add
xor
add
pop
shl
lea
out
fstpt
jp
inc
test
jmp
int3
call
jb
fsubr
inc
mov
filds
cmp
mov
sbbb
push
push
cmp
push
sub
popa
sub
inc
fadds
fdivl
push
mov
adc
movsl
pop
aam
add
loop
or
adcl
dec
insb
lcall
push
lea
nop
add
push
cmp
sub
aaa
lods
call
in
add
jbe
jle
adc
roll
mov
sub
lock
xor
test
mov
arpl
aas
movsl
xchg
sti
pop
sbb
jno
sbb
shlb
ret
mov
ret
add
add
mov
add
sbb
movsb
dec
pop
and
lods
nop
stos
movsb
daa
add
and
cmp
or
xor
inc
das
fdivl
ss
cmp
adc
out
loopne
mov
or
add
add
xchg
add
clc
dec
and
jnp
pavgb
mov
and
or
jmp
mov
jl
xor
cmp
or
or
dec
inc
ja
inc
in
jo
jae
jnp
add
mov
mov
js
adc
sbb
test
sbb
test
jo
pop
jo,pt
cs
outsb
adc
mov
xchg
xlat
cs
mov
shl
xlat
adcb
icebp
and
cmp
jle
mov
mov
add
push
push
scas
push
add
sub
add
test
adcb
cli
add
loopne
imul
jnp
adc
fs
or
out
add
outsb
rorl
lock
push
mov
mov
mov
xor
cmp
movsl
sub
pop
andl
inc
push
xchg
fldenv
pusha
ja
push
add
rcll
jp
jle
aas
add
xor
js
mov
lock
pop
dec
cld
lea
sub
fs
dec
xchg
rol
jo
sbb
fimuls
in
jo
sbb
mov
data16
add
and
mov
aad
sbb
pop
insl
inc
sub
xor
dec
xor
dec
sbb
movsl
icebp
cmpb
ret
push
pusha
or
mov
inc
add
scas
add
push
inc
test
pop
add
push
and
push
arpl
inc
sub
xorb
btr
push
or
sbbl
or
mov
lcall
fimuls
mov
into
inc
mov
aad
and
inc
inc
es
xorl
icebp
dec
xor
mov
adc
sub
sbb
cwtl
pop
pop
add
inc
das
sbb
xchg
test
and
pop
add
lret
cmp
push
xchg
adc
and
cmp
jle
add
hlt
add
ret
je
shrl
pop
sub
xchg
push
sbb
pop
push
aas
push
push
xor
add
mov
repz
pop
jmp
push
cmp
test
push
push
push
push
add
call
shrl
sti
inc
inc
add
fldl
ljmp
cmp
push
push
push
test
and
xchg
test
loope
mov
xchg
mov
push
jmp
mov
repnz
fdivs
jne
icebp
pop
cld
inc
xchg
inc
add
jns
js
sete
pop
jb
cmp
adc
outsl
sub
cmpsl
dec
add
and
sbb
add
xchg
xor
dec
xlat
or
xchg
jle
add
adc
sub
insl
inc
and
cmp
mov
mov
test
test
mov
popa
pop
flds
inc
sub
push
add
clc
sbb
sbb
outsl
add
call
xor
xor
adc
ljmp
inc
mov
dec
inc
dec
cmp
orl
es
dec
aaa
scas
and
lea
test
cltd
inc
ret
jg
lock
testl
sub
push
cmp
mov
fwait
cmc
and
out
mov
orl
popa
xorl
pop
mov
xor
test
cmp
bound
sub
adc
aam
add
push
rorl
lret
adc
pop
insb
xchg
add
popf
shrb
sub
sub
cmp
int
shrl
pop
or
xor
cmc
test
xor
push
pop
and
das
test
and
jo
inc
ret
xchg
and
loope
pop
loopne
inc
push
cmp
inc
cmp
outsb
mov
jnp
adc
lahf
mov
sub
mov
and
sub
into
test
cmp
out
inc
or
cmp
or
adc
adcb
mov
inc
mov
sub
je
loop
jo
mov
lock
jle
sbb
push
pop
add
gs
sahf
sbb
dec
jno
jmp
xchg
aam
pop
pop
loopne
dec
aaa
push
and
add
je
stos
scas
cmp
and
fs
call
or
or
cwtl
sbb
or
xchg
andl
mov
loope
pop
insb
cmpsb
xor
mov
stc
jo
add
push
push
icebp
mov
and
sbb
ds
rcrl
jb
push
leave
xchg
in
scas
cld
adc
scas
mov
mov
leave
add
inc
inc
adc
adc
push
mov
push
imul
inc
outsl
or
xchg
sbb
inc
and
xor
testl
dec
out
pop
jnp
fistpll
mov
lock
lcall
add
loop
rorl
fnstsw
call
aam
xor
mov
sbb
push
push
add
mov
add
ret
xor
dec
push
dec
pop
push
and
mov
adc
pushf
loopne
mov
push
rcll
sbb
push
xchg
mov
push
je
pop
clc
xchg
jo
cmpsb
mov
xor
fwait
add
mov
ret
jle
fs
mov
or
jmp
dec
push
cmp
add
repnz
mov
inc
lcall
test
sbb
inc
les
jle
fidivrs
ja
bnd
rolb
cmp
cmp
cmpsl
adc
aaa
mov
pop
sbb
testl
in
push
mov
subb
ds
hlt
adc
xchg
sub
sbb
sub
jae
mov
dec
lea
adc
add
sub
or
mov
pop
adc
push
push
push
imul
ljmp
jmp
push
add
adc
push
inc
sub
jge
mov
cmp
sub
aaa
cmp
js
xor
pushl
mov
in
lods
push
jl
mov
call
and
cmp
sbb
out
mov
jmp
mov
loopne
shrd
push
out
pop
dec
push
pop
mov
add
dec
dec
jb
add
pop
sub
pop
jb
xor
lds
inc
aam
jp
jae
jb
dec
aam
sar
ja
add
ja
push
rcrl
pusha
cmpb
pop
fildll
lea
add
cmp
push
push
jl
add
push
mov
sti
fbstp
sub
sub
dec
sub
and
xorb
lret
lret
add
mov
push
cmp
lock
mov
dec
hlt
jge
mov
cmp
xchg
inc
inc
xor
daa
adc
xchg
xchg
cld
push
and
fwait
popa
movl
into
sbb
es
das
jno
enter
and
sub
push
es
mov
rolb
mov
jae
jg
notb
sahf
jl
mov
push
jg
push
add
push
pop
inc
jl
out
sub
ret
enter
sub
push
bound
inc
inc
jge
cld
sub
loope
lea
inc
movsl
or
mov
push
call
xor
push
imul
hlt
sub
push
test
andb
scas
push
and
add
mov
stc
push
ret
stc
inc
fisttpl
jo
dec
jo
xchg
lods
out
outsl
adcl
mov
hlt
and
hlt
push
adc
cmp
movsb
repz
xchg
pop
or
cmpsb
sub
movnti
cmp
cs
rcrl
adc
dec
mov
lods
add
pusha
adc
cmp
jl
lds
stos
andl
test
push
scas
outsb
mov
addr16
push
and
jle
fists
jg
mov
ret
aas
xor
add
cmp
cwtl
loopne
inc
cmpb
mov
push
jns
xor
lret
push
push
jp
lahf
das
add
and
aas
and
adc
outsb
ret
fdivrl
dec
jle
pop
fs
jb
mov
xchg
or
fsubrs
ret
insl
popf
pop
loope
test
idivb
enter
es
xor
sbb
adc
mov
cmpsb
rorb
stos
or
out
xor
dec
adc
movsl
jl
loop
call
lea
cmp
jle
lock
stos
add
out
imulb
push
inc
adc
lock
loop
or
pop
pop
rcl
cltd
mov
xor
sub
dec
popf
or
and
add
into
xchg
push
int3
outsl
ljmp
xchg
inc
je
lea
rolb
dec
test
add
andl
push
push
fnstcw
lret
push
outsb
push
add
and
jnp
test
rcll
fdivp
dec
lods
shrl
xorb
pop
hlt
push
rolb
jae
lea
jbe
or
mov
sbb
sub
int
pop
xor
shrb
pop
mov
scas
or
rol
mov
cmpsb
addr16
cli
outsl
pop
mov
mov
movl
test
inc
or
add
pusha
sub
adc
inc
push
pop
inc
pop
jae
jg
adc
cmpsb
push
fidivrs
scas
pop
leave
and
and
shl
cmp
inc
add
mov
inc
daa
pop
push
add
loop
jp
stos
mov
movsb
pop
jp
clc
xor
js
sbb
cmpsb
push
mov
pop
movsl
and
je
popa
mov
popa
sbb
sbb
mov
push
test
pop
jmp
cwtl
pusha
cmp
mov
xor
clc
xchg
push
bnd
movsl
push
xor
outsb
push
jp
lahf
mov
movsb
xchg
cld
push
push
cmp
fsubr
test
xchg
push
test
and
and
push
lds
pop
jb
jmp
mov
lcall
cmp
mov
lods
lret
rorb
push
sub
popf
out
popf
push
iret
xor
dec
add
scas
sub
mov
lds
jo
inc
sub
scas
xor
icebp
xorb
or
jecxz
sub
adcb
xchg
mov
shrb
mov
fdivrl
les
fldt
jmp
sub
jne
lock
push
push
js
addb
inc
mov
sub
lea
dec
repnz
ds
mov
or
cmp
xor
sahf
push
jae
push
mov
cmp
push
dec
pop
push
sub
dec
aas
adc
dec
add
fildll
push
add
sub
sub
scas
and
push
mov
lcall
adc
inc
leave
mov
or
or
xchg
xchg
pushl
outsb
ret
or
imul
ficompl
add
mov
pop
cmp
cmp
sub
dec
push
adc
mov
inc
mov
fisubrs
inc
push
mov
pusha
add
jb
xor
shlb
cmp
xchg
in
push
ds
and
add
xchg
loopne
mov
stos
das
cmp
lods
fdivrp
mov
add
gs
xor
xorl
adc
cmp
xchg
jp
es
ljmp
xchg
into
add
sbb
hlt
or
pop
dec
cmp
add
sbb
sti
pop
sub
or
xchg
int3
and
lret
je
xchg
mov
sbb
xor
xor
add
adc
fisubs
xor
add
fs
orb
jbe
xchg
pop
inc
aaa
inc
pushl
mov
push
pop
enter
sub
es
movsb
cmp
adc
cmp
and
mov
lds
pusha
xor
mov
mov
mov
sub
test
pop
mov
push
fstps
mov
add
dec
and
cmp
aad
cs
lret
jecxz
mov
xchg
add
mov
sti
repz
lods
or
xchg
cli
and
and
pop
stos
shlb
sbb
int3
push
jne
push
pop
aaa
inc
xlat
sbb
add
dec
mov
dec
insl
or
or
movsl
pop
shlb
add
push
mov
jne
pop
jle
pop
jne
ret
mov
jbe
nop
nopl
push
inc
sahf
dec
add
dec
pop
mov
ss
push
add
repz
lahf
or
das
in
adc
xor
push
bnd
or
push
dec
push
leave
es
sahf
sub
or
loope
sub
adc
fisttps
ret
fmull
pop
pop
or
add
or
jb
mov
and
and
rorl
lcall
adcl
add
push
jmp
sub
pop
addl
jg
mov
inc
pop
push
test
stos
jg
cwtl
fs
xor
xchg
stos
mov
fs
mov
xor
in
bound
nop
jb
shlb
push
lret
cvttps2pi
outsb
push
sub
ret
pop
dec
jp
mov
push
cltd
mov
xor
xchg
sbb
and
inc
xchg
add
cmp
ret
adc
push
push
sbb
fistpll
adc
cld
adc
cmp
push
insl
lret
mov
cltd
decl
faddl
mov
pop
das
daa
and
xchg
add
xchg
loopne
dec
pushf
adc
jnp
add
jbe
inc
add
jle
fsubrs
jnp
lock
mov
pop
lahf
or
xchg
add
sahf
jb
xchg
cs
cltd
stos
sub
add
cmpsb
sub
insb
push
pushf
shrb
testl
stos
jl
xchg
mov
mov
jl
push
pop
mov
push
mov
xor
mov
inc
push
loopne
inc
or
dec
aas
not
stos
or
in
or
ds
jne
adc
xor
add
pusha
inc
insb
and
sahf
testb
add
ljmp
pop
inc
lods
dec
lds
inc
jl
mov
movsl
sub
movl
mov
mov
ret
cmpsl
lods
sarl
in
pop
ja
mov
jo
ret
inc
xchg
scas
xor
xchg
imul
push
xchg
mov
add
ss
xor
shrb
orl
jecxz
enter
mov
or
sbb
jo
gs
test
stos
rorb
mov
push
push
fsubrl
and
movsb
in
rcrb
test
cmpsb
adc
gs
sub
lds
lcall
or
xor
dec
add
add
push
lea
sbb
cwtl
insl
xor
xchg
add
jo
push
adc
lahf
lods
lock
mov
test
decl
inc
push
push
xlat
fs
push
sbb
add
jbe
xor
jb
xor
mov
pop
or
lea
dec
int
aas
add
rcr
popa
shll
inc
adc
std
or
sbb
cmp
jb
pop
pop
fmuls
subl
aam
push
add
push
mov
cmp
push
push
inc
sub
and
push
pop
adc
mov
fwait
cmpb
jb
mov
jle
jg
test
clc
mov
sub
imul
add
in
pavgw
bnd
xor
mov
add
clc
sub
or
jge
ret
mov
inc
lret
xor
dec
mov
push
lcall
and
push
push
and
pusha
loopne
es
bound
inc
sub
sub
je
movsl
cmp
sub
push
push
push
push
daa
out
cld
xchg
push
push
push
push
in
xchg
sub
add
add
push
movb
mov
cmp
xor
push
cwtl
inc
jb
lds
and
or
or
out
or
daa
mov
js
jg
add
add
stos
pop
add
mov
push
push
lea
jmp
sub
rcll
insb
enter
push
rorl
ret
fstl
fcmovb
adc
mov
je
shrb
adcb
pop
outsl
inc
add
int3
push
mov
or
push
lea
ret
pop
xor
mov
scas
nop
outsb
adc
std
insb
adc
push
pop
incl
cmp
and
ljmp
rorb
adc
pushf
inc
inc
popa
sub
xchg
enter
pop
jo
jmp
enter
adc
fadd
push
out
inc
add
icebp
jnp
add
movl
pop
jmp
movsl
aas
push
push
mov
ret
add
cmp
push
jp
adc
add
notl
clc
mov
add
and
pop
or
je
aad
loope
arpl
lcall
ds
or
push
outsl
xchg
mov
adc
and
dec
cmp
push
addl
lds
sbb
push
push
inc
push
les
mov
jge
loopne
xor
jl
mov
pop
das
pop
push
cmp
sub
insl
inc
ss
push
fcomps
adc
mov
enter
sub
add
shll
mov
and
mov
inc
inc
sbb
data16
xor
sbb
cwtl
test
sbb
push
mov
xlat
popf
push
sub
or
push
roll
fists
sub
mov
sbb
mov
mov
fs
add
sbb
inc
cld
xor
out
cmpsl
shl
cmp
add
fs
sbb
sbb
ja
jne
push
and
push
cmp
dec
jmp
icebp
divl
shlb
xor
push
cmp
push
mov
mov
sbb
sub
ret
loope
test
leave
fisttpl
pop
xor
rclb
ret
pop
sbbl
inc
pop
cli
call
add
out
call
add
mov
lea
push
call
xor
bound
popa
fsts
inc
pop
push
dec
or
pusha
addr16
loopne
fcompl
pop
ret
dec
das
mov
in
or
pop
lahf
shrl
mov
cmpsb
imul
or
adc
ss
jg
jg
push
dec
inc
loop
sbb
scas
or
inc
clc
xor
push
push
lcall
or
movl
ljmp
mov
in
pop
add
sarb
in
js
out
or
testb
xchg
icebp
add
lock
and
mov
sbb
dec
push
and
imul
jg
cwtl
push
repnz
scas
insb
fstps
stos
or
pushf
inc
scas
fisubrs
addr16
fnstenv
je
inc
jnp
add
clc
or
jnp
jae
mov
and
push
mov
cmc
outsl
inc
adc
add
jb
pop
lea
push
cmpsl
inc
push
mov
add
outsb
or
cmp
and
lret
mov
call
loope
rcr
cmp
sub
movsl
rclb
mov
xor
jg
xchg
dec
cmp
and
movl
sbb
cld
ret
js
sti
mov
movsb
cmp
ret
dec
imul
rorl
cld
sub
test
sub
cmp
jne
mov
inc
mov
jns
lea
jne
mov
and
or
push
test
fsubrs
mov
mov
or
cmp
push
mov
dec
xchg
paddq
and
pusha
in
adc
lea
pop
push
jl
push
cmp
call
mov
xchg
in
lock
cmp
out
movl
and
and
push
into
rcrb
or
pushf
cmp
jne
pop
pop
aas
mov
inc
iret
mov
pop
sbb
out
adc
jge
movsl
in
push
dec
mov
mov
sbb
movsb
add
int
adcb
push
xchg
mov
adc
ds
xor
add
mov
push
xchg
xchg
prefetch
or
inc
lcall
mov
sbb
push
mov
or
mov
test
pop
mov
outsb
loopne
sbb
int
sbb
sub
test
cmp
mov
push
pop
sub
in
adc
or
mov
cmp
movl
adc
fsubs
inc
inc
ljmp
sbb
push
dec
shrb
and
cmp
pop
lret
pop
js
lds
hlt
fistpll
mov
int3
lea
push
cmpsl
lods
jg
inc
js
mov
add
aas
xlat
sub
add
mov
jg
mov
dec
enter
and
inc
testl
scas
arpl
in
dec
jo
xchg
nop
xchg
std
push
je
and
xchg
pop
jo
inc
movsl
mov
divl
add
cmp
push
mov
mov
cmp
adc
xor
sub
push
push
mov
pop
and
add
andl
mov
test
fcompl
and
cwtl
cmp
push
or
push
lcall
push
push
loope
mov
mov
lock
imul
xchg
push
and
push
push
push
enter
jl
add
cmp
jne
dec
rcrb
push
xchg
push
mov
sti
xchg
iret
push
repnz
sub
add
adc
xor
ret
mov
fisttpl
ds
incl
sbb
nop
pop
out
or
dec
sub
cs
out
and
pusha
add
test
sbb
movl
aam
and
fdivrl
inc
mov
orb
call
jl
inc
cmp
mov
dec
fidivl
aad
mov
push
mov
push
lret
xor
clc
mov
jecxz
pusha
dec
sub
movsb
movsb
std
xchg
mov
mov
add
push
mov
iret
or
jge
push
iret
inc
mov
sbbl
jo
xor
lods
imul
pop
push
mov
push
inc
je
add
dec
rep
pushf
shr
dec
je
and
jo
and
rolb
push
sub
sub
hlt
test
jmp
sbb
inc
pop
sbbb
inc
push
movsl
clc
int
inc
push
pop
cmp
or
adc
mov
xchg
cmc
push
sbb
clc
push
push
mov
cmpsl
sub
insb
fs
mov
jmp
push
cmp
hlt
arpl
iret
lds
daa
out
sbb
jle
lds
add
icebp
or
sbb
xor
lock
push
push
mov
xchg
fadd
outsb
fiaddl
xor
dec
sarb
jnp
xchg
pop
push
clc
lock
daa
rolb
or
xor
cmp
adc
pop
lret
and
shlb
aas
push
push
xor
insl
jne
push
sub
push
loopne
mov
inc
cltd
and
or
loopne
test
sub
roll
rcll
inc
out
sti
add
dec
les
adc
in
scas
ja
sub
adc
cmp
rol
fstl
in
iret
adc
adcl
add
out
inc
push
or
add
mov
and
gs
clc
add
out
sbb
pop
add
dec
cwtl
sbb
mov
mov
sub
mov
adc
repnz
adc
in
test
inc
and
add
xchg
lret
dec
lahf
dec
push
adc
stos
scas
cs
cmc
lret
adc
xchg
inc
lcall
add
dec
pop
jl
subb
pop
xor
sub
inc
xchg
jl
adc
push
push
pop
aam
mov
xchg
sbb
test
push
pop
sarb
sbb
fnstenv
stos
ljmp
cmp
repnz
push
in
pop
shll
cmp
push
sbb
inc
movsb
push
dec
daa
xor
cmp
rolb
hlt
sub
movsb
outsl
mov
in
les
mov
cwtl
xchg
pop
negb
xor
cmp
inc
pushf
push
jmp
push
push
test
add
cmp
xor
cmp
dec
lds
fcmovnu
stos
shll
mov
cmpsl
adc
dec
or
push
pop
mull
mov
call
pop
mov
shlb
loopne
sub
stos
sti
shlb
cld
std
dec
adc
xor
or
inc
insb
or
into
adc
bound
sbb
test
loope
sarb
push
and
lea
outsl
nop
out
popf
mov
push
mov
mov
adcb
jo
add
xor
xor
sub
pop
push
andb
stos
dec
ds
xor
loop
xor
stos
popa
lods
test
and
enter
and
and
xor
loopne
repnz
xchg
fisubl
lcall
daa
and
push
movhlps
ja
das
inc
and
mov
ja
int
sub
adc
sbb
mov
push
stc
xor
or
cmp
xchg
push
and
adc
mov
pop
aam
xor
ja
jmp
enter
ss
push
add
test
pusha
sub
dec
loopne
loope
mov
push
sub
pop
gs
sbb
xchg
lret
sbbl
in
push
scas
xchg
shrl
cltd
in
hlt
in
sbb
mov
xchg
xchg
pop
dec
push
pop
rcll
sub
xor
mov
daa
test
loop
js
outsl
cmp
sahf
les
adc
sbb
enter
inc
jno
push
and
sbb
xlat
or
je
pop
das
cmpsl
lods
int
inc
adc
dec
add
icebp
decb
add
testb
pushf
inc
xor
icebp
adc
cmpl
dec
cwtl
dec
mov
add
shrl
fs
lcall
and
xor
inc
and
pop
add
push
sahf
xchg
fcomp
je
mov
push
add
mov
mov
jo
inc
adc
cs
movsl
aas
jne
insb
adc
or
repnz
add
adc
call
inc
mov
les
cltd
test
popf
add
dec
jg
sbb
fsubrl
cmp
or
dec
lock
mov
mov
and
and
push
lods
int3
sub
and
and
es
cmpsb
mov
mov
adc
arpl
jns
add
movsb
iret
mov
adc
and
mov
sbb
nop
in
insb
lds
mov
pop
inc
je
fwait
mov
inc
imul
repnz
xor
or
push
and
xchg
add
xor
decb
int
dec
rclb
adc
dec
aam
push
mov
jns
xchg
cmp
fcomps
sub
or
rcl
add
cmpsl
add
inc
inc
insl
je
imul
xor
cmp
cld
cmp
mov
cld
xor
cli
or
inc
jne
fcomps
sbb
dec
shlb
out
icebp
cmp
loopne
popf
cmp
fsts
insb
imul
push
pop
icebp
test
imul
jmp
or
or
mov
ds
test
push
pop
pop
inc
sub
and
aad
dec
cmp
and
cmp
dec
lret
push
loope
or
push
pop
push
negl
cmp
inc
jle
loope
outsl
xorb
and
or
pop
and
jl
loope
pop
hlt
or
or
nop
rcrb
shrb
inc
xor
xchg
outsl
rclb
sbb
push
in
or
test
ja
call
jge
xor
add
mov
js,pn
add
cmc
fs
ss
aam
fs
inc
sbb
mov
loop
xchg
adc
jo
and
sub
push
push
xlat
daa
or
or
pusha
shll
orl
pusha
decl
jp
popa
sbb
dec
insb
and
push
add
mov
fdivs
loopne
sub
pop
repnz
jnp
sbb
ss
pop
pop
xchg
addb
push
or
in
sub
jle
rorl
and
xchg
cwtl
sub
in
mov
imul
dec
jae
push
pop
or
sub
nop
adc
or
imul
stos
cs
mov
clc
pop
xor
push
dec
push
repnz
sbb
xor
push
push
and
int3
das
mov
cmp
mov
inc
push
xor
orl
mov
or
test
sahf
sub
inc
push
and
jnp
sbb
and
hlt
lock
pop
ret
inc
push
dec
push
add
pop
mov
pop
std
jne
push
ljmp
sub
outsl
mov
pop
mov
push
and
add
xchg
or
jnp
sub
in
jbe
orl
and
add
in
xlat
cli
aas
adc
mov
push
lea
sbb
and
sbbb
jge
push
subb
xor
rclb
xor
jae
mov
xlat
jmp
stos
fstl
jmp
lea
mov
popa
mov
in
shlb
sub
cmc
rorb
add
xorl
loopne
push
call
fiadds
sbb
leave
xor
sub
mov
aas
mov
ret
or
or
lock
mov
push
les
jnp
pusha
and
cld
adc
sub
out
and
popa
cmc
dec
push
js
es
cmp
or
inc
add
cmp
orl
sub
mov
cli
push
push
xor
into
repnz
jle
jo
sbb
sub
and
shll
add
fsub
mov
push
insl
cld
lret
inc
jl
arpl
push
mov
and
in
push
cmc
inc
sbb
and
and
adc
dec
es
inc
ss
push
xor
and
dec
outsl
lds
imul
std
cmp
adc
loop
inc
jb
lock
loope
fmull
inc
rorb
int
mov
sbb
sub
fnstsw
sti
jp
inc
pop
push
mov
cs
jp
cltd
jne
das
loope
seta
sub
jb
jbe
xor
xor
aas
cmp
adc
sbb
inc
pop
inc
or
cwtl
inc
lods
mov
add
ds
cmp
mov
pop
mov
sub
insl
sub
pusha
fdiv
fbstp
movzbl
push
mov
shr
adc
push
push
rcll
push
jno
sub
xor
push
sub
dec
jecxz
sbb
push
sbb
jo
jecxz
aaa
leave
loop
shlb
xor
or
out
dec
mov
and
cmp
sbb
add
cltd
pusha
fst
and
sub
lods
jge
popa
xchg
ret
xchg
cmp
and
imul
xor
es
dec
push
filds
sub
and
aaa
and
or
aad
dec
cmpsb
dec
in
adc
ja
push
xchg
in
imul
dec
inc
cmpb
add
add
out
cmc
cmp
lock
movsb
iret
mov
int3
rolb
push
jecxz
push
orl
dec
inc
push
movsb
cmpl
and
and
fidivs
xor
sub
dec
lcall
in
or
pop
inc
sub
push
cmp
xorb
lds
adc
push
repnz
ja
xorb
adc
iret
adc
ror
arpl
cmpsl
pop
hlt
sbb
dec
mov
mov
inc
repz
jp
aas
dec
or
adc
dec
in
adc
sub
adc
or
insb
and
call
and
jne
push
cmova
pop
adc
jmp
xor
add
jmp
daa
inc
sub
and
sub
adc
add
std
sbb
mov
inc
pusha
cmp
xchg
lahf
or
ficomps
lea
je
cli
and
out
pop
mov
movl
inc
sub
dec
inc
adc
inc
out
fists
std
fnstsw
faddl
jo
push
loop
popl
inc
mov
test
fcomps
mov
cmp
je
mov
sub
inc
cmp
or
mov
push
ljmp
jg
add
icebp
or
enter
fildl
fbstp
mov
imull
xchg
movsbl
call
push
repz
imul
xchg
push
call
mov
pop
dec
aad
push
add
jno
mov
jl
jno
xlat
or
push
mov
dec
add
xor
cmp
add
mov
and
mov
imul
je
dec
mov
push
push
call
adc
je
lret
stos
mov
add
fdivrp
aaa
fcoml
repz
push
lea
push
inc
push
adc
popf
aam
jne
lods
add
xchg
test
mov
lahf
sbb
sbb
adc
mov
popf
fs
push
cltd
adc
adc
sub
xor
stos
cmp
fcomi
cmpsl
ja
pop
icebp
and
inc
cmp
or
mov
jne
mov
jge
pushf
push
pop
adc
sub
mov
and
ret
adc
aas
out
mov
cmpsl
mulb
dec
testl
and
sub
cld
or
shr
ja
cmp
cli
and
or
rclb
movsb
out
loopne
or
test
cmp
jo
push
addr16
sbb
pop
fs
push
xchg
dec
or
aaa
mov
pusha
dec
hlt
pop
test
push
or
jg
cmpb
jne
inc
xchg
push
xchg
sbb
aad
dec
repz
or
or
inc
cmpsb
jmp
and
add
mov
and
adc
bound
outsl
lea
nop
or
or
xchg
xor
sbb
pusha
and
ss
test
or
popa
es
jo
aad
jmp
sbb
jb
adc
into
xor
push
xchg
mov
sbb
sbbl
outsl
adc
imull
addr16
fwait
xchg
mov
adc
add
les
add
scas
inc
or
add
add
and
add
test
ret
pusha
aam
dec
cmp
xor
mov
fidivrs
push
leave
js
sub
xchg
add
pop
loope
ror
push
clc
push
lea
cwtl
fists
nop
movsl
mov
pop
fdivs
sbb
xor
mov
in
test
lods
lods
mov
cld
pop
adc
push
xchg
mov
arpl
pop
test
pusha
push
mov
pop
enter
xor
and
sub
push
enter
incb
pop
push
jb
pop
pop
enter
sbb
pop
repnz
push
dec
movsl
mov
pop
inc
aam
iret
sub
addb
out
faddl
repnz
jne
push
cmp
in
add
inc
push
push
icebp
add
fprem
mov
xor
popf
loope
in
jmp
lahf
cwtl
inc
lods
in
lcall
inc
or
mov
or
dec
adc
imul
adc
and
sub
adcl
or
mov
aam
sub
popa
jecxz
xor
pop
das
movsl
push
sub
xor
push
insl
movsb
dec
adc
xor
out
inc
sbb
xor
mov
movsl
dec
pop
pop
mov
pop
sub
dec
mov
test
mov
or
sbb
bound
sub
adc
push
dec
pop
or
inc
iret
cmp
jne
aad
test
in
add
repz
push
fisttps
jmp
and
es
or
ret
or
repz
loopne
inc
aaa
mov
push
mov
fstpt
movsb
je
lods
bnd
repz
into
repnz
mov
sbb
and
mov
fstpt
adc
cmp
clc
mov
sbb
inc
sbb
inc
rolb
sbb
mov
adc
and
mov
pop
push
adc
adc
test
sbb
popf
dec
sahf
and
arpl
and
rolb
xchg
or
lds
dec
lods
mov
aaa
mov
push
ja
inc
xchg
aas
mov
dec
imul
pusha
pop
es
int
push
inc
jmp
pop
or
loopne
mov
pop
pop
leave
sti
cmc
mov
jmp
mov
lea
sub
sub
shrb
in
mov
pop
addb
lods
js
mov
cmova
mov
aaa
xor
adc
decl
test
push
dec
subb
adc
mov
inc
xor
adc
push
test
mov
inc
push
test
add
dec
xlat
int
push
mov
repz
push
add
in
or
sbb
inc
add
sbb
sbb
fmuls
sbb
leave
and
xchg
adc
xchg
cmp
inc
adc
lea
sbb
sub
or
sub
pop
jl
sub
sub
hlt
pusha
add
in
jl
fs
les
inc
lahf
and
pop
and
dec
es
dec
into
sbb
sbb
jmp
cmc
and
cmp
and
es
jbe
pop
dec
dec
leave
pushf
fisttps
test
lea
or
mov
and
cmp
push
push
cmpsl
inc
push
dec
aaa
and
lods
push
inc
dec
loope
jmp
jo
xor
mov
mov
ret
jne
mov
fs
add
dec
pop
cmp
leave
inc
push
stc
mov
hlt
fdivrs
push
push
in
ret
xor
add
jns
loope
mov
movsb
pop
add
xor
stc
subl
pop
adc
add
mov
add
ficoml
jne
ss
cmp
add
cmp
push
fwait
jo
pop
or
push
jp
jb
jbe
sub
test
test
or
testl
shlb
push
cmc
push
fisttpll
cltd
sub
test
fstpl
add
jae
mov
sub
push
ss
and
inc
add
sub
inc
add
mov
cs
or
nop
or
push
and
and
mov
jl
sbb
cmpsl
push
push
repnz
or
pushf
bound
xchg
sbb
xchg
js
push
or
and
sbb
js
cltd
in
jp
mov
sbb
aam
jbe
adc
dec
dec
jg
inc
adc
add
fdivrl
call
mov
or
lret
sbb
fmuls
pop
in
pop
mov
and
jmp
add
and
lea
push
das
add
popa
enter
jge
jge
test
jne
fimull
adc
mov
and
adcb
or
je
jl
loope
xor
aad
scas
add
stos
aam
insl
cld
lods
adc
xchg
mov
mov
mov
push
cmp
shl
xchg
and
lods
dec
inc
fcomps
daa
stc
push
leave
jge
inc
loopne
sub
adc
xchg
hlt
mov
bound
fcomps
push
push
shll
or
rclb
sub
add
mov
inc
mov
jmp
std
xor
inc
and
mov
in
push
iret
inc
xchg
push
or
int3
or
test
rolb
enter
shlb
cwtl
sbb
sbb
mov
inc
dec
ss
cmpl
or
push
testl
mov
lods
in
and
and
outsb
stos
mov
lsl
mov
sub
and
cld
imul
in
scas
inc
inc
test
shrl
jbe
aaa
xor
and
pusha
cmp
and
dec
add
or
jl
mov
xor
ljmp
adc
mov
cmp
mov
adc
inc
sahf
xchg
and
sbb
scas
pop
je
push
repz
cwtl
adc
inc
movsb
pop
sbb
pop
arpl
and
pusha
mov
push
sahf
mov
test
addl
dec
sarl
pop
mov
pop
xchg
lret
pop
lea
cmp
jne
cmp
fcoms
mov
dec
loopne
pop
dec
mov
mov
xor
mov
jo
lea
add
push
push
push
adc
jno
or
mulb
xchg
call
or
call
mov
push
arpl
mov
xchg
add
sub
and
xor
faddl
or
test
scas
add
jle
xchg
inc
add
wrmsr
add
sbb
fwait
pop
test
sub
sarl
jge
icebp
xor
push
fptan
cmp
cmp
mov
or
xchg
sub
nop
cmp
pop
mov
adc
xlat
inc
push
leave
sbb
add
and
sub
add
adc
adc
or
xchg
push
mov
add
jb
add
mov
pop
in
push
cmc
pop
lock
das
and
mov
das
jp
inc
mov
je
jmp
xchg
or
xor
imul
xchg
fsub
add
sub
je
fwait
test
sub
or
cmp
not
mov
push
mov
and
adc
popf
xor
jmp
sub
pop
xchg
ja
ret
mov
pop
push
cmpsl
push
and
fnsave
xor
push
mov
or
push
and
xor
daa
add
or
adc
mov
insl
inc
mov
push
movsb
lods
mov
jnp
dec
cmp
je
nop
loopne
int
pop
loopne
mov
pop
in
inc
aaa
jmp
or
lock
test
mov
add
cmpsl
and
or
xor
rorb
idivl
adc
push
add
std
add
test
hlt
iret
jae
adc
and
inc
shll
inc
xchg
add
roll
push
mov
cmp
and
push
pop
mov
mov
inc
xchg
mov
xchg
out
imul
mov
sahf
jb
push
mov
test
loop
lea
mov
shl
dec
movsl
inc
push
pusha
inc
cmp
cltd
dec
sbb
sbb
sub
xor
scas
jl
adcl
add
cli
jl
adc
xor
imul
jns
jmp
pop
shrb
xchg
lds
and
pusha
bound
roll
add
addr16
xor
jo
pop
lahf
or
fsubr
xor
sbb
adc
add
push
cs
jne
sub
scas
sub
add
orb
push
and
pop
inc
pop
and
sbb
pop
mov
pop
inc
rcrl
cs
pushf
push
mov
fstpt
inc
mov
movsb
fistl
push
push
mov
sbb
js
stos
and
inc
adc
mov
cli
add
cli
inc
or
shlb
js,pn
mov
stc
jb
sbb
add
cmp
jae
sbb
mov
ret
push
cmp
sub
or
push
adc
push
sbb
jge
fadds
mov
add
pop
out
sti
dec
call
pop
ret
add
dec
imul
cmp
jnp
clc
mov
outsb
add
das
dec
pop
jg
sbb
or
or
pop
ret
add
aad
jno,pt
xor
mov
mov
mov
movsl
lret
lcall
adc
push
movb
xchg
xchg
pop
add
inc
cmpsb
push
pop
cmp
push
pop
push
mov
sbb
inc
xor
andl
adc
adcl
jne
cli
or
mov
fldenv
xor
and
dec
add
and
xor
fs
pop
incb
xor
dec
sub
add
mov
jo
push
imul
mov
adc
cmpsl
sub
push
iret
fs
xor
push
scas
jnp
sub
mov
pop
mov
sbb
add
jb
int3
jo
add
fstpl
jne
sub
add
cmp
inc
or
push
and
mov
or
test
scas
jbe
ficomps
inc
pop
add
dec
or
pop
adc
dec
mov
aas
sub
push
push
dec
or
push
fs
clc
jp
and
pop
add
push
adc
mov
ret
add
or
rorb
mov
jb
fcompl
adcl
jge
jns
in
jl
sbb
andps
add
cltd
add
adc
sub
dec
loope
out
pop
aas
xchg
inc
sbb
aad
popw
add
xchg
or
xor
shrb
or
cs
lds
cmpb
xor
mov
mov
push
jg
mov
les
mov
leave
or
adc
hlt
inc
sub
inc
lock
into
je
xchg
jge
sub
mov
inc
hlt
adc
lds
test
pusha
into
pusha
mov
jg
stos
inc
js
mov
aaa
addr16
arpl
sarb
bound
sbb
nop
xchg
and
test
sbb
jae
in
xor
mov
test
sbb
je
lahf
out
jo
push
push
adc
adc
sbb
cmp
pop
or
or
mov
or
cmp
mov
fs
push
mov
leave
test
dec
sub
push
mov
das
mov
enter
adc
lea
nop
lock
pop
mov
mov
inc
xlat
jnp
mov
inc
push
adc
in
dec
adc
push
repnz
and
push
outsb
pushl
leave
adc
xor
imul
and
std
xor
aaa
mov
inc
inc
dec
fdivrl
ficompl
pusha
fs
inc
push
and
jno
pop
jg
outsl
add
dec
cmp
push
repnz
add
sub
and
cmp
dec
je
mov
cmpsb
mov
sub
sbb
adc
adc
adc
sbb
lahf
and
dec
jns
xchg
xor
push
push
rcrb
ljmp
xchg
xor
test
add
add
adc
adc
add
inc
sbb
and
and
add
or
xchg
xor
xor
add
add
or
sbb
or
or
inc
push
dec
movsb
xor
aam
sbb
mov
aaa
lds
sbb
inc
lods
lea
sub
adc
popf
loopne
in
sar
les
enter
inc
xchg
aam
ficomps
arpl
js
add
dec
mov
or
xlat
inc
sbb
and
fsubrs
outsl
mov
icebp
push
movl
sbb
sahf
in
test
jge
popa
sub
xchg
sbbb
jbe
inc
xor
dec
and
cmp
add
add
sub
ficomps
mov
mov
xchg
push
stc
and
sbb
add
pop
mov
mov
dec
jae
xor
pop
shlb
xor
push
int3
adc
enter
inc
dec
arpl
test
daa
mov
pcmpeqw
mov
cmovbe
dec
lcall
lcall
mov
lcall
xor
sub
sbb
push
and
and
dec
lcall
mov
lcall
or
xor
dec
xchg
adc
xchg
hlt
aas
sub
mov
adc
adc
leave
dec
dec
repnz
cld
add
add
and
push
fcoml
in
adc
push
mov
jo
jge
xor
push
mov
push
push
sbb
into
daa
add
sub
mov
push
adc
sub
mov
rcrb
xchg
adc
push
inc
pop
push
mov
pand
bound
loope
aam
or
orl
shll
jecxz
push
movsb
cmc
loop
icebp
push
stc
jne
add
xor
adc
movsl
xchg
lcallw
pushf
cmp
and
andnps
orl
sub
lahf
nop
or
lods
fisubs
xor
add
mov
adc
fsts
cmpsl
add
mov
add
xchg
ret
xchg
push
lods
mov
and
jbe
xchg
dec
stos
mov
jb
jns
and
add
add
push
dec
movsl
ret
and
mov
rolb
add
fs
nop
jmp
mov
sahf
xor
xor
pop
mov
lds
pop
mov
add
or
cli
or
dec
ds
push
in
push
cmp
dec
pop
mov
push
inc
xchg
xor
lock
cmp
nop
cmp
push
test
push
push
leave
push
pop
je
sub
or
stos
fwait
nop
mov
mov
or
add
and
push
ds
xchg
inc
or
jmp
icebp
int3
rclb
jne
test
cmc
cmp
sub
and
pop
test
xor
push
sbb
xchg
inc
repnz
or
sub
popa
xlat
add
rcl
sbb
sbb
sbb
sbb
adc
sbb
adc
add
pop
push
mov
rcll
push
sbb
push
adc
push
and
jbe
sub
add
mov
adc
and
stc
out
andl
adc
cld
cmc
sahf
push
mov
adc
pop
and
bound
and
lods
inc
mov
cmc
je
sbb
shrb
and
and
push
pusha
inc
es
pop
lahf
test
fsts
aaa
orl
or
mov
aas
mov
add
sbb
lods
test
adc
lret
pop
dec
push
push
and
dec
push
sub
push
push
mov
cmp
fwait
or
or
pusha
js
adc
pop
test
pop
ret
or
push
push
push
or
push
sub
aaa
clc
jmp
fildl
push
movl
int3
fbstp
inc
mov
cmp
xor
push
ljmp
push
sbb
xchg
int3
addr16
push
mov
idiv
outsb
inc
js
push
push
rorb
shlb
mov
mov
dec
jg
add
and
pop
jge
add
push
les
or
out
push
mov
add
mov
dec
in
xchg
fcoml
inc
loop
js
popa
mov
dec
xor
pop
sub
push
xor
cmp
fsub
xchg
cmpb
push
cmp
hlt
nop
push
loopne
push
cwtl
or
lcall
mov
xchg
dec
cmp
dec
in
push
jmp
sub
js
pop
inc
pop
or
in
lods
and
cmpsl
shr
xchg
mov
icebp
push
call
lea
add
test
mov
sbb
jl
or
sbb
xlat
sbb
out
sarb
ret
dec
ss
mov
inc
adc
mov
fcompl
push
jmp
cmp
xchg
mov
push
orb
pop
and
sub
inc
iret
iret
add
or
pop
ret
test
test
push
lea
add
dec
call
mov
in
push
jne
push
ficompl
lods
movb
bound
bnd
aas
or
lea
mov
add
adc
fstpl
pop
jmp
lea
push
stos
jbe
orl
pop
int
xchg
pushf
sub
lock
and
pop
loop
es
mov
xor
jle
inc
das
test
or
sbb
jge
jae
push
and
sti
jmp
mov
dec
push
push
or
aad
mov
orb
ret
js
dec
cmp
inc
daa
clc
cmp
sbb
add
push
cltd
adcb
in
sub
lret
or
dec
in
hlt
cmp
add
or
add
jne
outsb
adc
fs
cltd
push
pop
add
push
and
mov
sub
les
add
cmpl
adc
or
push
or
inc
sbb
fiadds
sub
out
ljmp
scas
xchg
xor
mov
test
mov
push
xchg
and
dec
test
mov
or
dec
xchg
xor
in
cs
add
in
dec
dec
inc
and
jb
mov
bound
push
inc
push
cvttps2pi
dec
adc
xchg
mov
xchg
sbb
adc
scas
xchg
and
in
sub
pop
and
push
jle
xor
and
mov
je
adc
mov
adc
sbb
test
adc
xchg
sub
jno
das
inc
xlat
ja
and
and
dec
cmp
mov
fwait
inc
dec
jb
inc
dec
inc
cmp
adc
jo
jae
xor
jno
add
je
push
cld
popa
stos
add
jo
sbb
inc
sarb
mov
cmpsb
sbb
sub
push
aas
addps
xchg
test
js
iret
push
cs
imul
xor
push
popa
sbb
jmp
ret
test
push
xchg
jle
test
sub
adc
or
movsb
cmp
jb
movb
jo
aam
dec
sbb
jl
xor
pop
pop
leave
add
sbb
mov
push
cmp
jmp
test
xor
adc
dec
movsb
pop
push
jmp
daa
mov
sbb
push
inc
inc
cmp
inc
inc
ret
push
push
add
pop
and
inc
imul
sbb
dec
xchg
push
ffree
ja
test
push
adc
push
sbb
imull
popa
xchg
jns
push
test
filds
and
add
xchg
scas
call
adc
sbb
enter
pusha
push
sbb
mov
add
add
xchg
dec
int3
push
pop
and
push
pop
ds
push
mov
push
insb
jns
sub
int3
sub
add
lods
fimull
cmpsb
cmp
cli
cmp
push
pop
mov
stos
aad
dec
pop
lea
jo,pt
add
xchg
js
dec
xchg
pop
dec
insb
push
pop
loop
xchg
dec
mov
push
fdivrl
cmp
dec
jl
and
inc
push
cmp
in
mov
mov
mov
sbb
adc
sbb
imull
outsw
push
push
or
mov
push
imul
push
repz
cmp
es
xlat
mov
cs
stos
dec
sub
add
adc
adc
inc
dec
cmp
into
xor
xor
push
sub
ljmp
adc
mov
mov
dec
cmp
jge
sbbb
mov
mov
pop
movb
and
inc
stos
sbb
adc
arpl
cmp
xor
xchg
lret
decl
jnp
and
enter
xlat
rol
dec
imul
test
jmp
add
push
push
icebp
xorb
push
mov
mov
pop
stc
ret
sbb
mov
add
jns
cld
or
pop
dec
mov
mov
rolb
test
xlat
sub
mov
inc
inc
and
jle
sbb
inc
dec
jl
push
nop
mov
or
pop
idivb
je
or
adc
jns
ljmp
fdivrl
jmp
ret
cmp
adcb
sub
dec
lcall
pop
enter
cmp
xor
das
inc
sub
testb
pop
in
cmp
inc
loope
mov
test
mov
pop
addr16
imul
in
call
inc
mov
addl
adc
cmp
jecxz
adc
add
les
js
adc
call
push
adc
lcall
sub
js
loope
and
lea
or
add
add
jmp
xchg
push
movsl
or
jns
or
dec
inc
push
add
push
or
mov
popf
je
daa
fcoml
nop
dec
out
pop
test
and
lahf
ss
jne
jg
mov
xchg
add
mov
sbb
lock
ret
mov
adc
cmpsb
add
add
pop
adc
inc
jle
pusha
pop
mov
push
sbb
adc
cmovbe
or
incl
ds
sub
and
inc
js
or
adc
xchg
jl
mov
add
testb
mov
add
shll
scas
dec
sbb
adc
xor
push
mov
mov
ja
mov
add
pusha
add
and
or
inc
fwait
test
movsb
rorb
nop
xchg
mov
mov
adc
mov
popa
jo
and
rorl
leave
mov
dec
pop
inc
lahf
and
in
mov
jmp
lret
lahf
dec
cld
add
sub
mov
add
dec
mov
add
cld
ffree
xchg
les
jl
dec
push
imul
dec
shl
sbbl
shlb
loop
cmp
sbb
je
or
mov
mov
xchg
cli
lea
mov
push
mov
sub
xchg
je
cmp
and
sub
xlat
cli
add
dec
popf
sbb
movsb
pusha
or
es
or
dec
mov
mov
or
push
lock
jg
jle
outsb
adc
jae
mov
add
mov
sub
jae
pop
xor
mov
add
mov
push
add
pop
adc
mov
pop
leave
adc
adc
daa
fnsave
adc
xchg
add
and
adc
mov
rcr
nop
xchg
dec
data16
or
sub
xor
pop
je
sub
xor
incb
sahf
out
push
jg
pop
fildll
dec
cs
dec
rolb
stc
imul
cmp
xor
add
add
pop
inc
jae
cmpsl
rcrb
int
sbb
inc
sbb
add
or
cmp
sub
mov
inc
dec
fs
sbbl
inc
insb
add
dec
sahf
sbb
adcl
je
jo
in
and
rolb
dec
cmp
mov
mov
pop
lahf
push
repnz
test
xor
popa
and
inc
es
mov
xchg
cmp
mov
pop
enter
js
inc
push
leave
je
popf
je
dec
xchg
mov
ret
test
cmp
mov
mov
mov
adc
cmp
dec
jle
mov
xchg
pop
adc
jp
mov
add
pop
jmp
or
out
cmp
mov
or
sbb
jb
xlat
les
inc
push
mov
fidivrl
je
pop
mov
pop
push
ds
cld
and
dec
add
inc
add
test
add
adc
pop
pushf
push
jmp
stos
mov
mov
loop
mulb
sub
inc
aaa
or
and
test
repnz
mov
xor
jno
mov
inc
xchg
clc
pop
mov
inc
jmp
sbb
les
and
cmp
adc
test
mov
insl
xor
add
faddl
push
jge
add
cmc
outsb
pop
minps
ret
ret
rolb
popa
mov
push
add
mov
pop
pusha
pop
add
mov
leave
jne
xchg
orb
xor
inc
pushf
push
mov
arpl
sub
adc
inc
mov
lret
mov
cmp
jae
xor
imul
add
sbb
sbb
add
inc
pushf
adc
ss
push
add
clc
cmpsb
and
mov
inc
or
and
xchg
les
push
int
pop
or
jne
pop
inc
xor
sbb
dec
push
inc
orl
mov
add
pusha
nop
rcrb
enter
or
popf
push
imul
adc
mov
or
and
adc
sub
pop
or
add
jo
lea
mov
cmpsb
or
repz
xor
xor
and
mov
sub
mov
inc
or
push
repz
fs
dec
adc
push
pop
les
mov
add
jecxz
xchg
mov
xor
sbb
std
sub
jl
xor
mov
xor
sahf
cmp
sbb
mov
pop
dec
fcomps
addr16
icebp
jle
les
and
lahf
jnp
enter
fidivs
push
std
pop
mov
subb
jne
jecxz
aam
mov
invd
test
ljmp
push
jne
and
mov
jmp
sub
push
sub
fimull
ljmp
push
push
adcb
dec
adc
cmp
jecxz
jbe
push
sbb
nop
push
iret
ret
lahf
stc
push
loopne
and
inc
push
add
or
sbb
inc
leave
xor
or
push
aam
pusha
cmp
mov
sbb
and
xor
sub
cmp
js
arpl
pop
or
fwait
mov
cmp
inc
fs
lret
repz
and
dec
and
ds
dec
or
push
mov
fisttpl
and
or
add
int3
add
pop
in
push
push
loope
in
mov
push
je
insl
addr16
adc
or
mov
sub
inc
add
gs
sub
sub
and
daa
sub
bound
inc
cmp
sahf
xchg
adc
pop
sbb
jnp
push
push
xor
cli
mov
adc
das
hlt
pop
xor
inc
jg
ljmp
jge
push
adc
mov
movsl
add
push
mov
lods
out
movl
fisubs
mov
aam
sub
ds
dec
and
cmp
push
xor
lldt
stc
xchg
push
fidivrl
add
and
add
mov
xchg
stos
pmaxub
pop
out
pop
sub
dec
adc
jo
scas
adc
add
out
adc
je
jg
push
dec
fs
lods
mov
mov
in
bound
sub
cmp
jae
out
jecxz
nop
les
pop
fisubl
enter
mov
movsl
push
jg
shlb
xchg
sbb
xchg
cmp
adc
mov
push
and
out
pop
les
shlb
push
out
mov
icebp
jbe
clc
lods
add
push
sub
xor
pop
pop
add
xor
push
mov
pushaw
xor
in
xor
dec
inc
mov
add
call
pop
mov
jnp
lret
repz
jg
push
xchg
cmp
insb
jnp
push
inc
jne
lret
mov
xchg
faddl
pop
sbb
jne
popa
sub
xor
dec
shl
lcall
sub
adc
push
nop
lret
in
sbb
test
and
inc
pushf
adc
and
cmp
sbb
adc
and
push
sbb
pop
addb
and
push
leave
ret
cmpl
or
int
and
inc
es
lret
pop
enter
cmc
dec
mov
inc
ljmp
sbb
or
xchg
and
jle
popf
aam
jp
fs
data16
inc
or
or
test
shrb
pop
adc
adc
jmp
cmp
add
jns
jnp
pop
cmp
jne
aam
push
jns
lret
idivl
enter
xchg
cmp
pop
out
lret
cltd
inc
and
inc
adc
sbb
enter
roll
xor
jmp
push
hlt
and
inc
push
dec
mov
dec
lea
rorl
or
ja
add
pop
mov
push
adc
insb
leave
sbb
jge
xchg
sarl
mov
and
push
fcoml
sbb
add
out
xor
jecxz
inc
inc
or
sbb
mov
cli
mov
push
pop
sbb
push
aaa
test
adcl
mov
out
mov
add
add
sbb
sub
lock
mov
mov
mov
mov
jo
push
js
pop
push
in
push
pop
call
mov
push
aaa
les
jg
inc
popf
mov
mov
dec
popa
push
pop
pop
adc
and
or
das
xchg
sub
ret
xchg
mov
daa
loopne
enter
cmp
sbbl
push
fs
cmpsb
and
test
sub
add
jae
dec
cmp
es
pop
gs
aaa
lea
icebp
or
pop
gs
loop
jbe
fistpl
negb
cmpsl
mov
jne
pop
rol
andl
push
inc
dec
mov
dec
orl
mov
push
call
sarb
ret
gs
ss
add
aaa
jecxz
test
or
fsubs
adcb
inc
xchg
cmp
js
mov
inc
movsb
fs
pop
int
in
mov
sub
mov
push
adc
mov
jbe
lods
mov
jb
mov
or
insl
int
push
jp
cmc
lds
cltd
ljmp
cmp
es
pop
sbb
subl
shrb
mov
mov
dec
outsb
mov
sbb
int3
iret
jge
movzbl
mov
dec
or
or
pop
cmc
loopne
mov
or
pop
add
add
inc
sbb
mov
push
sub
pop
aaa
mov
or
aaa
mov
sbb
pop
inc
add
push
int3
dec
int
mov
mov
mov
aad
or
cmp
mov
or
fcoms
ds
cmp
jbe
scas
ds
jbe
sub
lcall
ss
xor
mov
pop
mov
outsb
mov
push
and
or
call
xchg
pop
mov
push
into
or
sbb
movsl
imul
push
jno
mov
rorl
ret
mov
add
add
push
cmp
cmp
mov
mov
add
mov
sarl
test
sub
into
inc
int3
xor
addb
shll
adc
adcb
clc
dec
xor
inc
jns
cmp
jle
push
pop
xor
shl
xlat
or
in
repnz
adc
mov
jecxz
inc
stos
jo
imul
and
add
mov
pop
inc
pop
ja
sub
js
fists
or
jae
pop
mov
push
loopne
mov
insb
push
sub
cmp
add
push
push
mov
out
inc
in
inc
addb
mov
or
mov
lea
lahf
and
jo
aam
rorb
and
sub
sub
int3
xchg
push
inc
inc
inc
mov
and
aaa
add
sub
sub
xor
pop
mov
cmp
das
add
in
or
mov
and
pop
xor
pop
lea
bound
push
jp
and
fwait
std
mov
sub
movsb
push
fadds
js
jl
add
and
cmp
les
xchg
or
dec
add
clts
and
mov
cmp
dec
sahf
jecxz
imul
push
and
inc
add
bnd
orl
js
cmpsb
jle
popa
xchg
mov
inc
push
jo
in
outsb
pop
push
pop
inc
dec
or
or
inc
sub
sub
iret
aam
inc
pop
sbb
loop
mov
or
dec
mov
or
or
inc
lods
ljmp
xchg
mov
je
or
pop
insb
mov
movsb
add
mov
movsb
or
int3
pop
sbb
xchg
dec
push
or
or
add
inc
and
add
mov
lcall
pop
xor
push
and
pop
mov
or
sbbl
add
cmp
sub
add
and
inc
nop
test
mov
add
mov
add
xor
or
add
or
scas
movsl
jmp
test
xor
cmp
jne
cmp
pop
and
seto
cmp
xlat
dec
test
aad
and
shll
mov
ret
imul
push
push
and
xchg
aaa
pop
dec
and
mov
fwait
push
xor
das
fwait
sub
add
jno
inc
inc
mov
jno
jnp
ss
xor
mov
sbb
enter
xchg
xchg
es
mov
pop
jb
adc
lea
and
push
inc
or
and
push
sub
cltd
inc
std
xchg
inc
subb
pop
imul
sub
sub
paddusw
imul
inc
xor
cmp
adc
xchg
push
jg
subb
cli
loopne
cli
inc
dec
lea
xchg
push
adcb
push
sbb
xor
les
es
es
and
movsl
or
or
pusha
cmp
fs
insb
lahf
push
and
lea
imul
pusha
cmp
add
cs
and
cmp
nop
pextrw
xchg
out
adc
xchg
cmp
add
mov
jno
add
push
xchg
xchg
ljmp
mov
sub
sbb
inc
fsubrl
pop
fidivs
jnp
or
sti
dec
dec
movsl
jns
dec
add
ret
nop
ljmp
and
inc
mov
inc
add
mov
xor
aam
outsl
adc
or
push
jecxz
js
js
sar
ret
push
repz
pop
inc
push
mov
clc
out
cmp
or
aaa
loope
dec
push
jne
xor
dec
loope
cmp
adc
test
fiadds
call
sbb
mov
pop
or
jge
jo
repnz
lods
add
mov
add
cmp
sbb
and
shrb
sub
je
push
inc
cmpsb
pop
jp
das
lea
nop
rclw
push
push
add
jo
fs
dec
call
jg
mov
dec
mov
test
shr
inc
push
mov
insb
cmpl
je
loope
mov
cmpsl
sbb
adc
insb
test
mov
push
pushf
dec
inc
mov
movsb
push
and
mov
cmp
pop
pop
pop
in
xchg
icebp
fisttpll
mov
or
add
sub
xor
and
popa
jne
dec
sbb
data16
mov
jg
sbb
push
add
and
pop
je
mov
or
and
cmp
int3
xchg
xchg
daa
push
mov
push
add
sub
arpl
adcl
push
call
push
cmp
jae
inc
mov
cmp
cmp
cmp
insl
lock
notb
sbb
dec
cwtl
push
faddl
lret
jge
repnz
decl
inc
push
push
sub
jle
adc
pop
cmp
inc
movsb
and
inc
inc
or
jo
call
push
sub
push
aaa
sub
sbb
jne
je
mov
ret
cmp
jmp
jno
mov
sub
push
mov
and
pusha
mov
ficoms
inc
pop
adc
dec
shrl
int3
shll
test
setge
push
xchg
sub
out
jl
adc
inc
mov
and
xchg
adc
jo
push
je
add
inc
mov
push
add
pusha
das
mov
es
or
shll
rorl
loope
call
push
adc
fcom
cs
mov
inc
hlt
push
sbb
sub
mov
or
loopne
in
das
push
fucomip
popf
call
xchg
enter
out
xchg
add
lock
aam
pop
adcb
sub
mov
push
inc
xor
inc
pop
faddl
push
pop
or
sbb
mov
data16
pop
sbb
mov
mov
pushf
pop
lret
add
inc
pop
sbb
sahf
ja
fiadds
punpckhbw
xor
enter
jb
xchg
mov
adc
push
daa
pop
enter
push
in
and
ret
sbb
add
mov
inc
jb
mov
add
pop
xchg
inc
xchg
cltd
and
push
mov
and
jmp
es
fsubs
adc
pop
and
xchg
in
and
cwtl
and
push
and
push
dec
adc
or
cli
movl
xchg
xchg
adc
xchg
add
pop
sbb
test
or
inc
inc
add
and
ret
jo
addb
add
sarl
sbbb
cld
cs
pop
cmp
mov
dec
inc
add
jmp
test
inc
inc
nop
xchg
mov
daa
mov
iret
push
mov
stos
and
jge
cmpl
mov
jmp
rcll
cmp
cltd
aam
push
mov
loopne
and
outsl
mov
xor
xchg
jne
xchg
stc
addl
mov
jmp
and
sbb
adc
sub
push
inc
pop
add
pop
cli
dec
push
repz
push
lds
jo
jno
mov
popa
cmpsl
dec
push
shll
cltd
sub
xor
adc
push
sbb
stc
xchg
add
inc
fwait
push
push
cltd
in
sub
and
pop
dec
push
sub
ret
push
push
sub
mov
enter
sub
and
cmpl
xchg
sub
xchg
addl
xor
aad
lods
leave
xor
lods
call
nop
xor
sbb
sub
imul
fiadds
mov
sub
add
nop
and
lahf
push
lcall
icebp
sub
inc
jbe
in
aaa
ret
lods
dec
pop
sbb
cmp
test
inc
push
pop
shlb
add
push
subl
pop
dec
and
stos
sbb
movsb
add
out
push
mov
jns
test
add
add
mov
xor
xor
and
je
push
pop
lods
xchg
mov
xchg
loopne
test
mov
pushf
jbe
aam
daa
dec
mov
call
enter
iret
xor
shlb
add
mov
lea
fists
pop
leave
sub
test
or
xchg
jnp
pop
sbb
mov
and
pop
ret
jmp
pop
cmp
sub
sub
xor
mov
movsl
jp
mov
mov
xor
mov
int
add
adc
xchg
or
mov
enter
jae
adc
mov
push
add
add
and
inc
scas
mov
out
add
popa
or
mov
movsl
add
xchg
push
or
inc
push
test
xor
jl
shlb
cmp
stos
xor
adc
inc
lds
push
pop
and
inc
push
iret
sub
mov
adc
xchg
rorb
pop
mov
xor
arpl
push
je
lcall
adc
popf
aaa
inc
ljmp
add
xchg
jp
inc
cmp
lods
push
pop
enter
sub
test
rclb
add
xor
jae
pop
loopne
mov
mov
shlb
dec
mov
adcl
and
push
adc
or
add
xor
movsl
push
sahf
or
and
les
mov
xchg
adc
sbb
sbb
sbb
dec
sahf
pop
inc
jle
push
sbbb
add
adc
or
add
or
sbbl
test
push
jmp
sbb
lods
pop
sbb
call
rcrb
pop
dec
mov
pop
mov
bound
inc
cmp
sub
adc
nop
sbb
subl
add
dec
sbb
adc
icebp
and
push
aas
je
inc
sub
sbb
ret
xchg
adc
push
xor
xchg
sub
mov
cmp
pop
mov
test
mov
inc
ret
adcb
pop
push
cmp
mov
and
adc
push
sub
push
adcl
sbb
add
and
mulb
leave
sbb
test
lods
push
stc
push
cltd
outsl
sub
inc
insb
cs
or
sbbb
ret
les
sub
jns
inc
loope
ret
push
daa
stos
in
cmp
je
mov
bound
inc
popa
add
mov
stos
or
cmp
sub
aad
pop
and
pop
push
inc
and
pop
js
push
aaa
mov
pusha
add
adc
sbb
jmp
push
mov
mov
punpckhwd
xchg
outsb
sbb
imul
rcr
cmp
call
in
and
mov
push
push
push
les
aaa
aam
inc
insb
jl
lcall
pusha
rolb
cmp
loopne
dec
lahf
xor
cmp
mov
ret
sbb
push
jl
fcomip
push
das
inc
push
sbb
add
mov
pop
add
or
mov
inc
xchg
pop
push
pop
push
add
add
popf
sub
inc
mov
dec
adc
sub
gs
dec
jl
mov
je
and
push
ss
popa
pop
xchg
mov
or
cwtl
and
rclb
outsb
mov
loopne
sbb
jae
mov
rcll
add
je
aam
pop
xor
aam
inc
jge
mov
incl
mov
push
test
add
mov
add
dec
movsl
sub
mov
sti
sbb
ret
imul
xor
fst
in
adc
xorl
pcmpeqw
xchg
cmp
je
jns
mov
cmp
add
add
or
and
add
push
cmp
xor
push
rolb
inc
repnz
data16
test
nop
mov
adc
andb
imul
ret
loopne
jbe
xlat
in
inc
notl
or
aad
mov
xchg
outsb
mov
mov
push
hlt
push
push
mov
pcmpeqd
dec
push
or
xchg
push
cmp
push
xchg
xchg
push
adc
test
enter
in
sub
sbb
mov
fidivl
pop
or
fiaddl
jmp
or
scas
xchg
out
or
or
or
lock
insl
inc
movl
adc
dec
adc
insb
xchg
xor
inc
adc
inc
rcll
push
cmpsb
push
adc
lret
sub
pop
push
pop
pop
push
out
xchg
fcoml
adc
pop
leave
and
into
xor
nop
pop
xlat
in
push
xchg
fld
dec
call
cli
inc
scas
movsb
sbb
int3
call
sbb
xor
xchg
fcom
fs
and
leave
sbb
gs
sbb
ds
sbb
push
xchg
sbb
push
rcrb
push
sahf
adc
xchg
movsb
cmp
sub
and
and
and
mov
jns
es
nop
addr16
fsubrl
enter
or
test
inc
cwtl
add
sub
adc
mov
dec
pop
sbbl
in
sub
pusha
sub
aas
push
cs
test
mov
sbb
pop
nop
dec
and
xchg
and
or
mov
fs
push
test
cmpsl
jbe
movsb
cwtl
out
jmp
das
aam
xchg
adc
call
push
mov
gs
dec
mov
sbb
pop
pop
stos
fists
addr16
cmp
rorb
inc
xor
in
cmpsb
jno
std
adc
ret
lock
fnstsw
add
jle
or
mov
das
adc
push
xor
xor
mov
dec
xchg
jne
jmp
sbb
and
sub
jnp
jb
jbe
inc
lcall
jb
inc
adc
dec
cmp
add
sub
add
xchg
test
or
mov
sbb
and
cmp
pop
pop
jle
add
pop
or
cmp
cli
call
jmp
or
cmp
pop
xor
xlat
pop
sub
enter
jecxz
sub
inc
jmp
cmp
jnp
xor
mov
fwait
es
and
add
inc
repnz
in
inc
sahf
xchg
lret
cmp
hlt
inc
inc
sahf
xchg
inc
cld
inc
fadds
in
sbb
bound
dec
int
hlt
or
inc
mov
mov
cmp
sbb
adc
arpl
inc
popl
clc
adc
dec
pop
decl
sar
mov
push
adc
loope
jle
and
push
sub
popf
sbb
mov
xor
stos
adc
js
xlat
push
inc
lcall
xor
repnz
rolb
iret
add
mov
cmp
inc
lods
mov
xor
inc
adc
push
sub
enter
mov
and
cmp
sbb
and
enter
or
cmp
mov
jne
lea
and
test
or
xor
push
adc
mov
lods
xor
filds
fimull
jge
or
pop
shlb
xchg
push
sbb
dec
push
enter
ljmp
clc
test
mov
insb
cwtl
ror
rcrb
push
cltd
in
jnp
movsl
mov
cmp
jo
push
push
push
xchg
insb
aas
xor
loope
jl
jns
sbb
add
push
add
test
pop
sub
mov
addb
testl
adc
push
inc
es
aaa
mov
push
dec
pusha
adc
xchg
outsb
pop
sub
mov
mov
imul
and
xor
subl
push
inc
push
pop
aas
xchg
add
pop
push
jo
mov
add
pop
je
and
test
subl
dec
jg
inc
fcmovnbe
push
push
push
mov
push
push
mov
adc
sub
lcall
cmc
mov
jecxz
adc
fs
push
nop
mov
test
or
aaa
and
and
and
adc
je
cld
dec
adc
mov
add
and
cltd
add
jmp
xor
test
in
faddl
sub
dec
dec
mov
pop
addb
in
rcrb
std
push
cmp
lock
and
sahf
rclb
inc
popa
nop
test
cld
dec
insb
iret
test
add
nop
xor
and
and
adc
adc
dec
dec
jno
inc
pop
dec
push
call
dec
dec
dec
inc
sbb
dec
jnp
pop
jne
mov
sbb
inc
or
inc
add
xchg
mov
rcrb
lahf
push
dec
dec
push
xchg
xchg
jno
mov
ret
cmp
adc
sbb
jbe
mov
jp
inc
pop
lods
call
dec
sbb
cld
adc
leave
leave
dec
sub
dec
jne
push
or
lods
jno
cmp
push
movsb
mov
add
cmp
imul
push
cli
and
shlb
dec
push
test
sbb
xchg
xor
lea
cmp
inc
cmp
cltd
or
popf
movb
cmp
push
add
insb
sarl
cmp
mov
rorl
lea
scas
addr16
bound
loopne
push
add
xchg
push
shll
pop
pop
add
rcll
xor
cmp
xor
arpl
mov
lock
push
mov
aaa
add
stc
inc
xor
push
rolb
sub
cld
mov
punpckhbw
hlt
or
push
pop
sbb
stos
inc
mov
test
or
jmp
das
leave
xor
push
test
fs
test
out
mov
add
and
jle
cltd
test
sub
std
or
inc
ja
imul
and
mov
xor
or
add
jb
pop
xor
inc
pop
mov
ja
adcb
push
test
shll
mov
pushf
adc
fisttpl
arpl
push
cmp
xchg
pop
stos
mov
and
inc
mov
pop
pop
jo
sti
js
and
adc
repnz
jb
shr
icebp
pop
push
out
fsubs
sbb
nop
xchg
ljmp
sub
or
add
mov
or
dec
das
xor
jl
int
rorb
adc
sbb
jno
int3
jbe
es
pop
movsb
dec
mov
xor
dec
sahf
stos
in
add
in
add
xor
adc
mov
shlb
mov
sbb
add
adc
sbb
cmpsb
ret
bound
fcomps
add
push
or
dec
and
adc
adc
push
add
sub
insl
mov
add
and
dec
aam
sub
xor
lcall
movsb
sbb
mov
jmp
cmp
mov
add
popa
push
pop
inc
jne
mov
cmp
adc
stc
dec
xorb
push
leave
roll
dec
pusha
pop
test
mov
gs
xchg
sti
sbb
jge
push
add
cmp
add
test
lcall
fistl
lods
add
sbb
sbb
sbb
inc
jecxz
sbb
xchg
shrb
and
push
adc
movsl
xor
jle
jmp
push
adc
sbb
cmp
icebp
inc
jo
push
sub
fnstenv
lea
cs
dec
enter
xchg
test
jge
push
cmp
mov
arpl
push
add
sub
or
dec
ss
pop
je
and
ret
push
rolb
test
add
mov
or
cs
mov
push
sbb
sub
and
inc
and
mov
jle
pop
stos
inc
lock
lds
fld
mov
or
xor
lret
sub
add
cmp
std
movntps
repz
iret
outsb
mov
movb
and
mull
in
push
sub
inc
shrb
inc
out
adc
stos
dec
ret
lea
adc
dec
cld
push
pop
mov
repnz
xchg
jmp
fs
push
xchg
push
inc
nop
adc
jg
push
add
mov
mov
int
add
and
jg
fwait
mov
aaa
or
or
jo
sbb
mov
sub
xchg
inc
and
and
test
test
inc
call
ljmp
push
popa
dec
loope
pusha
mov
jge
ja
imul
xor
stos
das
push
inc
shrb
adc
outsb
or
sub
push
mov
xor
xor
cwtl
or
inc
jb
jmp
arpl
scas
cltd
imul
in
ret
ret
test
add
sbb
cmp
adc
test
movsl
push
inc
sub
push
dec
loope
add
in
adc
and
jo
dec
in
in
in
or
push
decl
mov
pop
rorb
mov
add
test
sbb
imul
adc
cmp
and
or
arpl
inc
jb
adc
add
or
xchg
sbb
out
mov
nop
adc
inc
cmp
jae
mov
xchg
sub
sub
push
call
je
inc
cmp
jl
and
mov
ljmp
dec
add
xor
mov
push
sbb
add
insb
ja
enter
mov
push
add
les
ffreep
jle
mov
push
test
add
push
ficomps
or
xor
push
mov
or
mov
mov
lahf
inc
mov
dec
loopne
jo
sti
add
sub
in
jg
jnp
and
sub
cmp
jb
mov
outsl
ljmp
pusha
xorl
les
sbb
jo
pop
out
pop
dec
test
push
arpl
fsubp
xor
mov
fdivs
and
pushf
sbbb
add
adc
scas
loope
or
xchg
pop
in
pusha
pop
leave
dec
and
cmp
loopne
test
in
jnp
dec
cmp
ret
or
lea
add
add
push
sbb
add
lcall
pop
push
fwait
mov
adc
in
jo
add
insb
fldcw
jge
pop
or
or
sbb
pop
add
or
or
and
pop
imul
adc
xor
and
or
add
cmp
sub
in
mov
or
push
mov
jp
xchg
adc
sar
int3
mov
or
inc
inc
or
xlat
xchg
pop
sub
push
pop
cmp
insb
cmp
fwait
add
add
filds
cmpsl
lods
inc
lock
xorb
fadds
loopne
mov
fisubl
cmp
xlat
sub
push
cs
sbb
insb
mov
sub
pop
push
or
mov
ljmp
add
mov
cmovo
xchg
mov
inc
cmp
hlt
ret
test
das
cmc
insb
dec
add
fadds
lahf
push
lea
sbb
lods
lcall
add
test
cmpsl
test
icebp
mov
popa
mov
lods
cld
adc
mov
lret
mov
jbe
les
mov
sbb
push
push
xchg
add
dec
jno
test
add
sub
cltd
xchg
cltd
lea
push
mov
insl
add
add
in
lea
addb
jo
jp
je
test
icebp
dec
nop
sbb
in
sbb
fisttpl
xchg
enter
movsb
cltd
pop
in
in
inc
enter
push
mov
and
les
cmpsb
sahf
push
mov
mov
or
add
cmp
pop
lcall
and
je
mov
add
mov
adc
push
leave
dec
test
clc
add
or
andl
mov
jg
mov
jne
push
cwtl
adc
or
rorb
pop
pop
pop
pop
push
add
cs
lock
inc
out
js
jp
add
pop
test
xchg
add
push
sub
pop
mov
push
push
push
loopne
pop
out
push
add
and
inc
shlb
sub
add
clc
adc
loop
pop
ljmp
mov
push
push
xchg
ss
or
mov
mov
sub
adc
je
cmp
je
cmp
repz
je
push
je
arpl
jmp
loopne
push
mov
mov
pop
rorb
add
add
add
ret
pop
mov
ret
neg
cmp
cli
in
push
pop
leave
sbb
jbe
xor
pop
sbbb
shlb
sbb
stos
icebp
fs
test
ret
add
lds
and
repnz
jl
pop
sub
in
aam
xor
adc
mov
add
and
add
loop
into
xchg
test
jae
mov
adc
mov
pop
in
gs
xchg
std
shll
jno
outsl
enter
xchg
inc
nop
movsl
mov
adc
push
add
pop
pop
xchg
cvtpi2ps
outsl
mov
bound
xchg
or
dec
test
xchg
pop
aas
xor
inc
test
pushf
test
inc
inc
and
icebp
mov
xchg
jmp
orl
test
pushf
jne
inc
faddl
inc
xchg
add
xor
fsts
dec
xlat
mov
or
push
les
add
cmpsl
icebp
mov
enter
pop
push
lret
jne
and
mov
xchg
add
jg
movsb
xor
push
imul
sub
push
mov
stc
pop
movb
dec
movsb
sbb
push
movsb
call
sbb
sbb
inc
inc
push
mov
and
daa
out
std
inc
pusha
test
jo
fcmovne
push
in
or
xor
int
lods
pop
andl
orb
dec
rorl
lods
scas
inc
shll
inc
les
sbb
mov
mov
pop
lods
inc
inc
inc
and
test
adc
mov
fsubl
dec
push
cmp
mov
sub
ret
repnz
cmpsb
mov
sbb
ret
mov
sub
adc
hlt
sub
and
mov
and
dec
jmp
aam
or
fcoml
push
mov
mov
in
cmp
mov
add
out
jo
or
push
adc
jb
aaa
mov
and
test
mov
push
mov
adc
jge
or
loopne
inc
xchg
pop
and
mov
mov
adc
lcall
aaa
cmp
dec
ret
lahf
fldenv
outsl
in
inc
ret
mov
decl
inc
mov
fsts
pop
adc
test
lds
inc
adc
mov
movsb
mov
bound
rclb
dec
cmp
aam
dec
xchg
inc
and
or
popa
test
sub
and
push
popf
out
ss
mov
repz
sub
imul
or
and
inc
sbb
inc
repz
lahf
out
test
push
mov
add
aad
add
jae
fimull
inc
jge
jge
sub
hlt
add
jmp
and
cmp
and
mov
add
adc
lock
pusha
dec
or
js
and
sbb
nop
add
xchg
fcomp
je
push
movsb
aam
jge
or
cmp
je
xchg
xchg
test
sub
mov
sub
add
bound
or
inc
and
push
loop
sbb
sarb
rolb
mov
mov
pushf
not
pop
je
test
push
pop
mov
adc
push
imul
adc
sbb
mov
xchg
add
add
inc
mov
movsb
dec
test
faddl
lret
or
es
fwait
and
cmc
aam
int
or
cmp
je
xchg
adc
add
fdivrs
popa
js
cli
ret
jne
xor
jnp
pop
js
arpl
mov
test
pop
mov
roll
and
ja
adc
dec
cmp
push
outsb
cmp
cmp
xor
mov
dec
stos
ret
icebp
add
test
add
push
cmp
roll
stos
fldl
movsb
or
mov
mov
repz
push
inc
andl
mov
or
sbb
sahf
push
sti
inc
adc
xchg
movl
dec
test
lea
pop
lea
or
push
mov
add
pop
or
mov
xchg
add
cmp
lods
bound
cmc
xor
jecxz
inc
mov
roll
js
or
jae
rorb
in
je
jnp
mov
xchg
imull
sub
cmp
sbb
mov
rclb
ret
fadds
jne
and
dec
sub
sbb
sbb
add
add
inc
orl
push
jl
sub
pop
add
and
sub
mov
or
ret
sbb
sar
xchg
dec
add
fcoms
stc
push
outsb
add
imul
imul
and
out
sub
sub
dec
pop
or
sbb
incl
jge
jne
cmp
jne
int3
jnp
push
adcb
test
mov
aaa
inc
iret
mov
cmpb
sub
and
push
cmp
iret
movl
mov
int3
cmp
inc
push
mov
imul
mov
push
stos
popf
inc
or
adc
scas
movsl
push
incb
les
pop
xorl
jmp
and
sahf
inc
cmp
jbe
jnp
and
pop
cs
push
dec
adc
fstpt
inc
test
jo
js
inc
jnp
or
inc
and
push
test
stc
insb
imul
push
mov
mov
aam
dec
add
ret
dec
or
push
xor
scas
add
sub
dec
roll
push
sbb
adc
mov
adc
ss
mov
sbb
out
mov
bound
xchg
jle
adc
and
sub
mov
das
add
fsub
dec
out
mov
lea
test
cmpl
mov
mov
mov
cli
push
sub
push
push
push
mov
adc
inc
adc
push
inc
add
mov
dec
sbb
inc
rorb
and
adc
or
push
repz
add
push
ja
movsb
mov
popf
jns
shlb
xchg
sarb
pop
fsubr
inc
cmp
mov
pop
outsb
inc
add
inc
shrb
out
push
jl
rcl
je
or
or
inc
dec
add
sub
adc
xor
outsb
adc
and
add
mov
es
test
call
fildl
fisttps
mov
inc
test
jb
xchg
push
cmp
add
stc
in
push
pop
addr16
mov
ret
xchg
add
sbbb
or
and
push
jns
add
rclb
push
idivl
loop
inc
jne
cli
clc
jo
and
xchg
or
sbb
sub
pop
test
rol
test
ret
pop
jl
shr
cmp
adc
fnstsw
mov
hlt
aas
arpl
cmp
mov
je
mov
pop
jp
lds
push
es
cmpsb
add
stos
dec
adc
and
mov
xor
divl
aad
add
repz
idivb
inc
add
or
or
sub
pop
sub
das
rorb
and
call
mov
imul
or
push
pop
push
pop
js
adc
outsl
ret
loopne
jmp
dec
push
enter
fidivl
lea
lret
mov
mov
xor
or
push
adcb
jle
lcall
arpl
mov
inc
xor
sbb
push
mov
aas
andl
lcall
pusha
push
add
ret
add
jcxz
jo
mov
test
xor
dec
mov
or
mov
mov
add
pop
lock
xor
out
addb
xchg
cmpsl
hlt
mov
test
add
fldenv
cmp
bound
xor
push
push
jno
sahf
add
and
mov
dec
pmulhw
popf
dec
jo
cmp
xchg
mov
mov
xor
sub
fs
lret
xor
lea
or
or
xchg
and
dec
mov
sbb
loope
cmp
mov
adc
imul
xchg
cld
sahf
dec
pusha
flds
cmp
xor
push
adc
and
dec
jb
mov
ret
inc
push
push
adc
inc
lods
push
mov
sbb
mov
jl
daa
cmc
daa
fmulp
jle
sbb
adc
cmp
and
dec
pop
jge
sub
test
add
sbb
lods
sbb
adc
lret
sbb
add
push
xor
pop
push
mov
push
add
xchg
mov
in
mov
pop
inc
rclb
push
lret
testl
in
ljmp
clc
push
push
mov
dec
cs
adc
push
xor
push
add
jnp
and
bound
jo
jl
push
xor
adc
bound
adcb
xor
pop
dec
pop
or
lods
xchg
pop
inc
push
xor
xor
inc
add
add
mov
push
sbb
xorb
jbe
jle,pt
mov
inc
or
stos
cmpsl
dec
movsl
orb
or
cmp
push
lock
lods
mov
sbb
test
inc
mov
dec
and
add
dec
jl
adc
pop
call
dec
scas
mov
push
pop
les
lods
in
lds
movsb
jmp
arpl
and
sbb
add
mov
iret
lahf
out
or
inc
test
mov
mov
mov
jne
cmp
jb
sub
jmp
push
dec
movzwl
jbe
mov
pop
cmpl
push
setl
movzbl
push
imull
test
sub
push
stos
andb
test
adc
push
loope,pn
les
sbb
adc
xor
xor
roll
mov
jl
add
jb
in
xchg
out
cmp
dec
push
push
mov
cmovbe
mov
push
push
adc
and
push
shlb
inc
mov
mov
jg
lahf
mov
lea
push
jne
or
cmp
cmp
pushf
andb
iret
xchg
lret
daa
scas
test
pause
dec
inc
stos
fs
sub
mov
inc
shrb
adc
sub
dec
push
call
mov
fs
incl
mov
les
mov
std
popf
mov
pop
lea
fs
mov
pop
aas
loope
jbe
popl
push
push
jecxz
and
xchg
pushl
inc
dec
sbb
add
and
add
push
inc
pop
or
pop
add
mov
pop
arpl
movsl
add
sti
movsl
and
mov
das
jns
jne
mov
popf
adcb
dec
sbb
cmp
sub
mov
and
pop
sbb
push
push
push
cmc
xor
lret
test
cmp
mov
inc
imul
add
mov
jmp
pop
jl
vpunpckldq
jge
and
pop
push
stc
loop
ss
jae
and
adc
mov
shrl
ret
inc
cmp
sbb
outsb
push
fwait
jae
mov
dec
xor
add
ret
pop
push
xchg
mov
aam
int
xchg
imul
fwait
pop
mov
adc
cwtl
rolb
lods
es
mov
sbb
inc
pushf
sub
repnz
cmp
xor
dec
outsb
pop
adc
or
dec
test
in
jne
fcmovne
adc
nop
mov
mov
push
adc
rorl
inc
jno
push
rorb
push
adc
aad
fistpll
mov
nop
or
push
or
les
pop
lds
sbbb
mov
cwtl
mov
adc
or
ficompl
pop
leave
push
mov
xor
ss
adc
mov
or
and
inc
ret
jle
add
or
adc
stc
into
mov
mov
or
andb
push
mov
mov
mov
jmp
mov
inc
jo
insb
andl
pop
xchg
lahf
push
add
mov
ljmp
or
sti
sub
out
adcl
push
dec
sbbb
or
adc
push
ficoml
or
lea
lods
xchg
cmp
stos
les
adc
pop
xchg
xchg
cmp
xor
and
fwait
add
ss
add
dec
adc
cltd
outsl
in
xchg
push
je
adcb
mov
push
push
mov
sbb
mov
add
sbb
and
and
jnp
pop
cs
adc
inc
or
cmp
add
and
inc
fstl
sbb
mov
aad
push
fstl
ljmp
sub
dec
xor
shlb
test
stos
xchg
xchg
dec
sub
in
ret
decl
loopne
loopne
xchg
dec
outsb
xchg
gs
insl
and
dec
inc
push
jbe
jo
push
or
nop
js
aam
jge
popa
cltd
je
jbe
pop
test
fnsave
loopne
jecxz
inc
lret
sbb
jge
fidivl
aas
and
cmp
in
add
xchg
popf
push
push
pop
cmp
jmp
jmp
jp
add
data16
andb
pop
push
push
dec
push
dec
ret
push
lret
xor
push
or
jno
jg
movsb
sbb
adc
leave
add
and
add
push
imul
imul
push
cmpsb
pop
push
pop
xor
pop
jne
dec
pop
sbb
jne
iret
add
jmp
nop
adc
cmp
jno
repz
jg
pop
add
jbe
fsubrs
shrb
fmuls
push
aas
push
imul
jg
outsl
sub
orl
movsl
dec
inc
sbb
popa
push
repnz
rcl
push
xorb
js
mov
add
pop
add
pusha
add
dec
sbb
adc
sbb
and
inc
push
sarb
mull
test
rcrb
push
jl
js
mov
add
mov
pop
fcmovne
and
fwait
sbb
popf
dec
mov
push
mov
mov
sbb
dec
or
or
test
mov
xorb
je
pop
inc
xor
jl
xchg
push
and
loopne
push
push
test
adcb
and
xor
js
sub
dec
lcall
xchg
lea
push
push
std
loope
or
xchg
scas
js
xlat
xor
inc
mov
or
sbb
test
pop
jae
xchg
sbb
pop
pop
sub
lret
xchg
xor
sub
adc
in
cmp
mov
push
aaa
or
sub
mov
cs
pop
pop
push
inc
inc
sbb
dec
or
shrb
seto
inc
cs
sub
xchg
cmp
cmp
xchg
push
dec
adc
inc
leave
mov
dec
stos
and
data16
inc
loopne
push
in
adc
data16
fwait
ss
pop
jb
call
add
adc
adc
add
test
xor
cmpsb
mov
adc
daa
shrb
push
adc
push
icebp
mov
push
sub
mov
je
and
out
sti
pusha
addr16
fmull
pop
enter
push
push
enter
push
cs
pop
push
dec
dec
push
popw
jnp
inc
xor
push
sub
in
jl
sub
addr16
enter
cmp
pop
push
add
adc
aas
inc
cmp
lcall
add
cmp
and
add
enter
scas
enter
int3
adc
sbb
leave
dec
cwtl
inc
push
add
cmpb
push
push
pop
stos
inc
xor
adc
pop
aam
sbb
or
test
push
pop
loope
sub
insl
shll
xchg
outsl
jg
fiaddl
add
popf
pop
jns
push
push
xchg
adc
inc
add
sub
stos
sbb
lcall
movsb
push
add
movsl
dec
mov
add
and
jo
ror
inc
insl
mov
orb
aam
jg
cmpsl
push
xchg
push
xchg
repnz
movsl
jne
lcall
aad
inc
out
inc
sahf
and
pop
add
inc
ss
test
iret
test
movsl
cmpsl
mov
or
out
mov
push
inc
pop
dec
sub
ja
pop
xchg
and
sub
test
enter
test
inc
pusha
push
dec
mov
push
inc
fldl
sub
xor
in
popl
int
sub
xor
xchg
test
pop
nop
xor
jl
adc
repnz
pop
adc
mov
cmpb
je
pop
xlat
orb
xchg
xchg
xchg
or
dec
jmp
mov
int
sbb
cmpb
and
pop
fldl
sahf
adc
arpl
inc
xchg
inc
cmpsl
sbb
mov
push
mov
dec
cmpl
hlt
andl
and
jle
mov
jg
cmp
fimuls
add
out
lret
lahf
sub
add
popa
sarb
fadds
jge
sarl
addr16
aaa
xchg
add
pop
sub
lock
sub
cmp
jl
lea
in
xchg
sahf
mov
orl
push
cmpl
mov
subb
xchg
dec
push
mov
mov
push
js
cmp
decl
mov
push
push
sub
inc
roll
div
jo
jl
pusha
adc
fcomps
aam
pop
cli
imul
pop
pop
fbstp
pusha
rcl
xchg
inc
adc
fidivl
add
arpl
inc
cmp
mov
je
xor
call
test
rol
enter
jmp
clc
sbb
sbb
ret
jl
sbb
lods
xchg
nop
or
push
out
sbb
push
adc
push
out
inc
loopne
add
rol
div
xor
xchg
orb
mov
mov
dec
sbb
push
out
test
rclb
fimull
cmpsb
rcrb
pop
or
cs
dec
cmp
test
mov
xor
mov
xor
int3
ss
lock
sbb
mov
and
mov
hlt
mov
and
test
push
je
call
inc
mov
jno
cmp
movlps
push
jl
xor
movups
push
test
mov
dec
or
inc
lcall
sahf
into
ljmpw
sub
subb
sub
sub
stos
out
lret
rorb
mov
insl
jecxz
jg
inc
pop
fnstcw
or
mov
sbb
fbld
push
mov
seto
pop
xchg
clc
or
enter
clc
dec
xchg
dec
jmp
mov
push
and
sahf
cwtl
jne
jp
subl
push
les
add
daa
dec
add
gs
js
jg
dec
aas
fadd
or
push
test
jp
or
xor
and
jae
ds
movsl
outsl
ds
pop
adc
movsl
mov
loop
xchg
roll
dec
xor
pop
loope
loope
cmp
adc
push
jo
xchg
cmpsb
inc
mov
push
push
cwtl
cmp
adc
xor
sbb
sub
inc
or
lcall
xchg
xlat
or
or
jp
lea
bound
jecxz
fwait
cmp
push
add
mov
jg
pop
jmp
fildl
loopne
pop
or
push
fadds
jno
fldlg2
dec
imul
add
mov
add
inc
fldcw
data16
fildll
stos
pop
add
mov
dec
clc
adc
push
mov
test
cmp
or
cmp
ficomps
push
jne
inc
and
or
loope
pop
push
push
incl
add
push
xlat
in
aad
inc
loopne
out
xor
and
rol
loop
fnstsw
hlt
js
push
sub
push
ss
inc
mov
out
dec
and
fcoms
ret
fisttps
xchg
adc
adc
std
pop
adc
add
imul
dec
adc
push
fsubrl
mov
mov
into
cmp
jbe
or
cli
test
movntq
jmp
ds
add
push
add
adc
add
sub
or
xchg
inc
mov
mov
sub
sbb
pop
pop
sarb
aas
adc
add
mov
inc
mov
flds
cmp
les
fmulp
and
adc
lret
leave
iret
lods
mov
jg
push
sbb
sub
fmuls
push
sbb
repz
inc
sbb
jae
adc
xchg
or
fdecstp
xor
mov
paddq
stc
je
repz
loopne
test
lahf
movl
fbstp
adc
cmpl
aaa
test
repz
jne
xor
jno
pop
cmp
mov
or
lahf
xor
fs
cmp
pop
push
repnz
add
mov
jl
cmp
adcb
fiadds
pop
in
push
sar
cmp
jecxz
movsb
cld
add
enter
gs
add
adc
bound
icebp
pop
mov
pop
jecxz
sub
dec
cmpsl
inc
mov
jmp
mov
and
xchg
je
cmp
roll
cwtl
stos
add
xlat
adc
push
lea
iret
mov
enter
xchg
aam
push
dec
addb
push
push
adc
data16
push
and
adc
or
pop
push
push
dec
or
jo
ret
mov
xor
add
ja
xchg
cmp
mov
push
call
or
cld
and
ljmp
sub
or
xor
inc
cmc
or
lds
jnp
sub
imul
dec
adc
cld
xor
xor
in
cmp
pop
ret
push
punpckhdq
pop
js
push
sbb
cld
lock
adc
xchg
fists
or
or
mov
repnz
cli
mov
pop
xor
loop
divb
push
cld
mov
cmp
je
sub
push
push
in
call
cltd
inc
mov
out
sbb
jg
mov
loopne
adc
addb
pop
jmp
filds
cmpb
jl
cmp
push
push
inc
mov
and
mov
outsb
sti
pop
mov
push
push
rorl
mov
dec
dec
or
mov
pushf
pop
xor
jne
and
mov
addl
fsubs
and
push
push
dec
dec
aas
pop
xchg
cmp
jl
xchg
mov
cmpl
cmp
inc
xor
fwait
sbb
ds
add
imul
or
cmpsb
pusha
ret
rorl
pop
push
lock
push
mov
push
push
call
and
hlt
cmpl
xchg
cltd
out
cmp
cmpl
fs
dec
ret
push
sub
add
cmp
inc
mov
pusha
call
ret
pushf
sub
rol
clc
les
xor
ja
mov
xchg
test
mov
or
inc
inc
gs
add
loopne
lea
push
push
jle
ds
adc
jl
mov
ds
cmp
sub
push
in
or
adc
adc
popf
jns
int3
adc
adc
sub
ljmp
jo
sbb
jbe
jmp
inc
or
jecxz
sbb
lds
or
je
mov
les
cld
pop
jmp
pusha
or
and
lock
call
push
mov
add
push
mov
pop
and
push
mov
sbb
mov
cmc
mov
iret
in
pusha
out
jne
mov
pop
incl
je
jmp
add
testb
outsb
push
push
add
inc
mull
mov
leave
rol
pop
sub
or
sbb
adc
pop
push
call
jne
cmpb
push
mov
push
sub
inc
mov
lds
cmp
test
adc
inc
in
insb
ja
or
and
cmc
xor
sahf
push
xchg
sbb
andl
mov
pusha
inc
add
into
or
aad
lods
cld
xchg
and
sbb
adc
stos
sbb
and
icebp
pushf
out
pop
paddq
push
loopne
add
leave
push
repnz
cmp
add
pop
or
in
in
inc
jnp
clc
cli
pop
in
outsl
jne
sbb
push
ljmp
xor
add
jo
movsb
ss
push
mov
int
test
fcmove
cmp
or
jl
sub
in
inc
scas
push
cmp
into
out
mov
add
push
push
icebp
cli
add
and
int3
stos
test
aam
lock
sarb
mov
test
inc
mov
jbe
inc
mov
push
rcrb
insl
lock
mov
push
mov
lock
jb
les
dec
jo
mul
xchg
adc
mov
sub
mov
fistpll
mov
xchg
in
sbb
std
add
add
inc
in
rclb
or
test
add
adc
ret
inc
cmp
jno
data16
mov
mov
mov
out
mov
cmpsb
sub
or
xchg
mov
dec
movb
mov
cmp
mov
cwtl
nop
cmpsb
pushf
sub
adc
add
shlb
lds
shlb
sub
sub
pop
fsubrs
ss
pop
push
rcr
xorb
mov
jmp
lods
movsl
mov
xchg
push
and
push
mov
mov
mov
pop
ret
test
leave
rcl
fbstp
insb
nop
fxch
fst
or
push
mov
int3
and
xchg
adcl
cmpsl
or
mov
mov
jae
clc
push
gs
xor
add
bound
cwtl
movl
pusha
lcall
incl
cmp
xchg
test
sub
add
outsb
mov
and
out
push
idivb
mov
mov
mov
pushf
sub
mov
imul
push
stos
adc
in
cmpsl
push
cmp
add
push
mov
shrl
testl
ljmp
loopne
cmp
or
mul
inc
add
aam
cld
push
clc
ljmp
setb
jb
rcll
jge
cmp
push
mov
std
add
je
cmp
adc
pusha
jns
roll
stos
push
jmp
adc
or
push
sub
sbb
dec
and
mov
adc
call
test
sbb
add
push
and
inc
and
lcall
inc
push
add
jge
cmpsb
adc
inc
push
xor
mov
pusha
in
mov
xor
mov
pushl
outsl
fimull
outsl
jno
ret
cmp
and
in
push
adcl
cmp
push
bound
je
inc
add
jns
push
inc
fadds
orl
inc
or
insb
mov
push
sahf
data16
sbb
pusha
push
les
dec
loopne
push
or
inc
adc
and
pusha
mov
add
add
jle
imul
and
dec
sub
push
out
mov
add
add
pop
insb
sbb
xchg
cltd
add
pop
inc
xchg
jnp
push
hlt
popa
add
pop
cmp
or
outsb
lret
mov
leave
mov
loopne
pushf
mov
loopne
adc
push
mov
cmp
movl
rcrl
mov
and
fisubs
mov
repz
lock
lahf
nop
pop
enter
shll
add
into
cmp
xchg
xchg
jl
icebp
sub
aaa
or
fwait
pop
add
hlt
cmp
mov
inc
dec
cmp
mov
or
sbb
enter
rclb
add
cmpb
mov
mov
push
lock
sub
mov
xor
jge
gs
and
mov
push
fs
in
mov
or
add
adc
push
ret
lea
mov
pop
mov
insb
mov
sub
push
add
dec
scas
xchg
repnz
fs
and
adc
jecxz
std
xchg
std
in
out
adc
into
xchg
mov
mov
inc
std
mov
lock
push
dec
test
and
mov
mov
aam
scas
sarb
sbb
es
mov
std
xor
inc
push
push
bound
rcrl
push
enter
dec
xor
in
aas
or
jae
inc
add
push
jae
arpl
das
iret
add
push
iret
mov
inc
or
push
or
mov
insb
jne
or
cmp
push
push
jle
mov
add
sub
dec
je
call
push
rcr
std
mov
pop
cmp
je
mov
frstor
mov
cmp
je
push
notb
pop
fidivs
push
or
fdivl
into
icebp
fwait
lods
push
movsl
cmp
add
out
dec
and
adc
cmp
mull
add
sub
or
mov
add
call
cmpsl
jge
pop
jb
push
push
pop
sahf
inc
outsl
inc
sti
xchg
rorb
dec
cmp
es
push
push
outsl
mov
cld
pop
push
sbb
push
movl
push
adc
xor
sbb
xor
mov
push
jae
in
mov
ret
add
sbb
push
lock
insb
inc
stc
leave
js
cmp
jne
shr
stos
adc
les
in
hlt
inc
fisttps
push
in
loopne
pop
outsb
push
mov
mov
mov
add
cmp
lret
mov
out
dec
push
pop
aaa
inc
in
or
or
push
cmp
outsb
out
jmp
les
jb
imul
or
bound
push
mov
in
cmp
scas
sbb
xchg
adcb
xlat
mov
sub
adc
test
mov
jle
adc
or
add
cmp
pusha
xor
shll
push
into
sarb
fmul
iret
iret
movsl
or
call
cmpsb
cwtl
in
std
adc
enter
mov
inc
int3
fwait
sbb
mov
pop
shlb
scas
sub
push
cld
add
into
xchg
mov
dec
testl
loopne
add
out
rolb
xor
pusha
pushl
cmp
sub
inc
jl
add
and
js
jo
add
and
and
xor
dec
jae
add
stos
dec
sub
cwtl
inc
sbb
xor
add
sub
dec
sbb
test
sbb
pop
sbb
fdivrp
adc
and
idivb
sub
mov
jne
mov
xor
pop
push
add
out
dec
adc
inc
rorb
shl
je
in
ret
add
or
imul
bound
pop
mov
mov
popa
add
filds
data16
lret
sbb
and
leave
add
sbb
cwtl
fbld
or
or
bound
lea
push
ja
in
insb
aad
js
add
jle
jnp
cmc
push
shll
mov
icebp
subl
imul
gs
or
lea
loopne
mov
rorb
pop
sahf
xor
adc
lea
mov
test
in
adc
pop
mov
rorl
add
and
shr
loopne
rol
ljmp
add
or
add
test
xchg
cld
pop
jne
lea
add
adc
jne
adc
inc
dec
fiadds
outsl
lret
notb
lock
or
ret
inc
sbb
push
fisttps
fnstcw
sbb
clc
adc
and
lret
in
or
adc
or
sahf
xchg
stc
incb
repnz
lahf
dec
dec
mov
iret
cmp
or
lcall
cltd
std
fwait
in
clc
add
mov
inc
xchg
sub
fnop
add
ret
roll
mov
mov
sub
mov
cmovns
stc
lock
cmp
push
stc
je
rcll
lock
jne
xor
jb
inc
xchg
ja
fwait
xchg
aas
ss
pop
lahf
sub
xchg
or
add
pop
dec
sub
pop
call
add
and
je
add
mov
inc
stos
add
push
or
adc
mov
mov
push
out
jns
push
mov
adc
lret
clc
rorl
movsl
cmp
or
sub
stos
ljmp
push
adc
sti
mov
xchg
sbb
pop
dec
inc
or
mov
arpl
adc
or
cmp
pushf
adc
jp
add
adc
scas
adc
or
jmp
pop
in
outsb
jl
xor
push
or
xorb
out
icebp
sub
pop
and
test
enter
inc
mov
or
add
push
push
mov
mov
xor
xchg
je
unpckhps
add
pop
jle
mov
int
jo
pushl
je
push
and
mov
out
or
sbb
xor
int3
lock
mov
cmovl
push
loopne
out
push
sbb
and
inc
sbb
sub
and
pusha
xor
enter
push
and
movsb
in
int
mov
je
xor
mov
xchg
ret
ja
sub
idivl
cld
loope
es
je
cmp
je
mulb
mov
adc
or
push
cmp
nop
add
iret
je
xor
push
daa
lods
push
rclb
sti
lahf
loop
fcoms
xchg
inc
pop
xchg
jmp
lea
pop
clc
enter
repnz
dec
leave
add
imul
add
dec
js,pn
lock
adc
dec
inc
cs
lock
lock
test
jmp
dec
jmp
mov
push
push
adc
movntq
out
adc
add
cmpsl
shlb
ss
mov
int
mov
mov
sbb
add
add
jmp
subl
lods
daa
mov
lea
mov
inc
adcl
xchg
mov
dec
in
inc
push
je
sar
shrb
sbb
and
xor
pop
or
add
subl
xchg
sti
or
test
js
dec
xor
sbb
adc
add
shlb
dec
je
xlat
call
inc
xchg
xchg
out
sbbl
adc
in
add
push
jge
jne
inc
sbb
cli
xchg
mov
inc
mov
adc
mov
in
call
sti
lods
xchg
adc
outsb
and
or
fsubrs
jl
add
add
push
xor
cwtl
test
inc
fidivrs
fildll
inc
movsb
and
sarb
xor
je
sbb
add
js
sub
xchg
push
and
or
sar
push
lea
mov
jo
aam
add
push
lea
dec
rcrb
imul
pushf
xchg
xchg
or
sbb
ucomiss
les
out
xchg
loopne
add
pop
xor
pop
xor
test
push
xchg
inc
add
cmpsb
mov
fs
adc
lods
js
push
call
pop
arpl
push
and
sbb
add
mov
add
ja
add
push
cmp
loopne
push
xchg
sahf
sbb
pop
cmp
adc
sbb
xchg
fs
and
xor
idiv
and
cmp
je
ss
ja
push
scas
and
add
clc
fimuls
jge
and
lret
xor
arpl
sbb
mov
and
dec
adc
ret
pop
xchg
orb
sbb
pop
pushf
sarl
inc
ljmp
push
xchg
adc
ds
pop
inc
push
movsb
inc
pop
or
xchg
pop
fldt
push
push
pop
into
jecxz
adc
clc
mov
js
adc
loopne
cmp
push
leave
int3
lret
add
cmp
cmp
or
add
sysret
lock
pop
add
pop
pop
movsb
cmpsb
cmp
cmp
adc
lret
loope
sti
rorb
sub
add
fsubr
mov
cltd
cmpl
mov
hlt
xchg
test
push
jmp
nop
inc
adc
popa
mov
cmp
rolb
aaa
sarb
adc
sbb
push
lea
loopne
in
mov
in
xor
test
mov
movsl
add
idivb
je
repz
cld
mov
repz
pop
add
adc
out
pop
lahf
shl
push
push
cli
sahf
out
push
xor
mov
add
aaa
inc
sbb
push
xlat
xor
cmp
lock
and
jae
insl
pop
testb
mov
cmp
popa
sub
lock
cmp
ss
aaa
in
aad
movsl
fadds
and
pop
aas
mov
mov
mov
jmp
jle
inc
cmp
dec
divl
dec
xchg
movsb
mov
je
orl
stos
mov
xchg
jnp
std
pmaddwd
lea
push
push
ret
sub
data16
out
push
and
sub
add
enter
mov
out
imul
add
add
subl
in
inc
test
adc
cmpsb
mov
pusha
sbb
sub
inc
or
shlb
inc
sub
or
js
das
push
lods
mov
add
popa
aam
sti
and
nop
stos
outsl
stos
mov
orb
adc
sbb
ret
xchg
cli
sarl
nop
shrl
icebp
jecxz
xchg
sbb
sbb
xor
or
js
push
cmp
stos
sbb
cwtd
aad
or
sub
lcall
mov
lret
out
inc
icebp
std
decl
sub
in
xchg
cs
cmp
rdmsr
sarb
mov
addb
aad
xchg
mov
out
addl
add
sub
mov
shlb
negb
push
jo
bound
sub
or
xor
inc
push
sub
mov
or
push
and
cmp
cmp
fmull
cmp
mov
mov
sbb
lret
imul
xchg
xor
xor
mov
sub
sub
stc
jge
leave
enter
sbb
push
cmp
ret
mov
cmp
adc
push
imull
xchg
adc
loopne
cmp
cmpl
add
insb
js
je
add
push
push
xor
fwait
lock
insl
mov
and
mov
adc
fadds
xor
pop
inc
xchg
cmpb
mov
daa
inc
pop
sbb
rcrb
outsb
jl
aas
sbb
sbb
outsb
inc
jmp
pushl
stos
mov
pop
mov
lea
in
out
or
or
dec
or
mov
cmp
rcll
mov
adc
or
xor
jge
lds
insb
pop
inc
and
ficoml
idivb
inc
push
or
inc
push
push
add
lock
and
gs
loop
pop
xchg
adc
pop
push
in
je
and
pop
addr16
inc
or
pop
loopne
jecxz
lahf
or
fistpll
lods
dec
xor
pop
adc
push
xchg
dec
outsb
mov
cltd
adc
xor
es
in
lahf
add
shll
adc
ljmp
repnz
add
and
inc
xchg
scas
test
ret
push
test
movsl
adc
cmp
das
inc
push
mov
dec
mov
jecxz
sbb
jl
or
push
or
push
sub
popf
lcall
mov
pop
adc
xlat
shr
pop
add
icebp
jno
jecxz
adc
pop
inc
push
inc
repnz
call
incb
and
je
push
lods
cld
pop
inc
pop
mov
and
pop
pop
pop
xchg
pop
dec
fnsave
mul
movsb
cmc
or
push
xor
es
movb
sub
jbe
aas
sbb
dec
dec
cmp
cmp
testl
xor
add
jg
or
inc
sbb
or
orl
ffree
mov
adc
and
cmp
dec
jl
loope
xor
xchg
push
sbb
movzbl
mov
sub
scas
mov
dec
loopne
or
pop
cltd
push
mov
mov
mov
push
adc
inc
lret
lcall
sbb
stc
push
mov
add
and
mov
cltd
add
or
mov
leave
and
cmp
inc
cmp
arpl
popf
shll
pop
enter
add
or
mov
data16
lock
loope
mov
mov
test
or
xor
scas
xchg
fucomi
test
lret
fists
hlt
add
mov
or
or
shrl
push
mov
add
push
push
movhps
push
jne
mov
stos
push
push
push
pop
xor
shlb
and
mov
mov
nop
jmp
pop
xor
and
push
sub
lcall
pushf
data16
out
insl
pushf
inc
xlat
adc
aad
pop
imul
push
mov
test
mov
stos
or
and
sub
cmpsb
fistpl
imul
mov
xor
pop
outsb
lahf
lea
push
push
pop
cmp
sub
cltd
idiv
push
adc
sub
xchg
pop
insb
mov
xor
ret
rcrl
add
orb
adc
push
or
jne
cmpb
lcall
pop
sub
or
fisubl
mov
sarl
mov
xor
aad
insl
xchg
dec
cs
cmp
add
jl
push
aaa
push
addl
push
xor
out
add
daa
cmp
je
push
rclb
shlb
in
je
les
xor
add
adc
dec
out
andl
lock
xor
xor
inc
ja
dec
or
je
outsl
inc
add
hlt
add
dec
push
jl
jecxz
push
add
xchg
movsb
test
push
clc
test
cmc
andl
ret
xchg
sub
mov
jo
in
loopne
mov
mov
jp
add
push
mov
hlt
inc
rcrl
push
add
cli
inc
push
push
in
or
ss
xor
or
cmpsb
fdivl
fldcw
and
je
mov
mov
mov
jp
dec
push
or
jae
inc
sub
out
add
add
add
sub
sbb
cli
orl
mov
pusha
lds
mov
xor
xor
dec
push
push
or
mov
dec
insb
push
xor
lods
add
xchg
push
xor
mov
test
sbb
sub
lods
adc
xchg
lahf
pop
jge
adc
sbb
dec
sbb
mov
cmp
jne
cmp
imul
xor
jbe
imul
add
or
xor
push
and
push
push
shl
rcll
sbb
test
add
and
aas
cmc
je
cwtl
mov
sarl
test
and
cld
sub
sahf
xabort
clc
rclb
cmpl
movl
sti
cld
inc
insb
shr
inc
add
jns
mov
xor
dec
or
or
inc
into
adc
sbb
adc
hlt
or
mov
sbb
or
pusha
insb
std
mov
sbb
mov
in
adc
push
popa
divb
jae
or
jb
mov
sahf
mov
rol
lock
mov
lea
rcrb
clc
push
in
imul
popf
cmp
sub
lret
in
stos
add
xchg
jne
add
jns
les
inc
andl
push
lea
sbb
jle
push
push
and
xor
dec
push
pop
xchg
lcall
sbb
push
shll
andb
xlat
jbe
int3
inc
add
icebp
or
into
addl
adc
sbb
in
out
movsl
mov
fisubrl
add
xchg
push
test
push
pop
into
adc
pop
sub
movsb
jp
or
pushl
mov
into
inc
add
movb
pop
wrmsr
mov
push
add
xor
je
adc
roll
loop
pop
dec
sub
ss
sbb
daa
adc
jp
sub
das
xor
add
mov
push
in
push
xlat
in
xchg
sub
push
pop
mov
lea
jl
insl
mov
jl
dec
je
aaa
and
sbb
jo
sub
jp
add
lcall
jmp
movl
pop
jg
sub
rclb
and
ss
in
insb
inc
imul
aas
scas
or
aaa
mov
lea
jo
lcall
gs
call
je
xor
push
pop
sub
or
inc
iret
stos
xor
xchg
lret
push
xchg
pop
adc
aad
je
sub
ljmp
xor
mov
mov
or
add
jae
loop
movsl
adcl
push
push
cmpsl
inc
sub
and
in
lea
movsb
push
pop
loope
or
push
scas
push
jns
push
pop
lcall
xor
adc
xor
jp
into
jp
mov
popf
pop
fs
push
jo
jae
fs
shll
loopne
or
cmp
jecxz
icebp
lea
negb
xor
jo
mov
stos
push
cmp
jnp
inc
in
push
cmpsl
out
pop
lods
pop
or
xchg
xchg
stos
jb
sbb
pop
shrb
repnz
into
lret
mov
push
push
or
and
xchg
imul
cmpps
or
call
loope
lods
inc
lcall
jmp
aaa
sbb
negl
xorl
push
jmp
or
out
andb
lock
sub
ficoml
lret
popa
out
inc
add
add
push
sub
mov
jl
je
lahf
cmp
lock
mov
testl
testl
pop
or
cltd
add
and
out
cmp
out
and
imul
or
in
xchg
setnp
or
or
ud2
mov
push
jae
shlb
jo
push
jae
xor
add
jl
movl
pop
pop
push
push
adc
xorb
or
add
loop
xor
pop
or
add
add
jmp
in
dec
mov
push
mov
bound
or
push
gs
inc
add
adc
push
testl
mov
shll
inc
js
pop
cmpl
mov
push
rolb
andl
cmpb
mov
mov
fwait
pop
dec
pop
lods
push
daa
mov
push
inc
cmp
mov
sub
loopne
pop
inc
shlb
push
push
fldenv
xchg
mov
sti
sub
xor
rolb
mov
mov
xchg
cmp
xchg
xor
mov
push
in
rorl
addr16
push
pop
pusha
daa
daa
inc
testl
dec
pop
test
or
pop
jae
jns
xor
xchg
mov
inc
fsts
push
dec
xor
shl
fistps
mov
sbb
jbe
push
push
or
ljmp
in
movsl
push
push
jo
loopne
add
ret
testb
and
les
pop
add
add
mov
movsb
lods
dec
adcb
cpuid
into
imul
sub
jl
cmpsb
jne
ret
outsl
or
decl
add
je
or
je
mov
sub
sub
xchg
and
lods
adc
adc
mov
es
or
add
xor
push
lock
lcall
mov
push
jmp
cmp
or
pusha
push
adc
adc
push
xor
inc
les
inc
jle
arpl
sbb
lcall
cld
adc
movzwl
dec
and
push
mov
pop
adc
xor
mov
jmp
insb
mov
mov
clc
push
jo
es
dec
inc
mov
clc
test
cli
gs
add
xchg
dec
imul
cmpl
mov
adc
add
daa
in
loope
cmc
mov
jbe
rclb
lock
cltd
and
lea
add
jnp
add
rolb
or
push
adc
mov
mov
imull
test
dec
je
sub
sub
cmpb
data16
jo
xor
add
push
adc
xor
mov
fiaddl
or
push
adc
pop
pop
adc
nop
push
pop
jo
xor
push
add
lds
add
inc
mov
pusha
ss
je
orl
mov
aaa
mov
popa
and
stc
aad
xor
pop
and
cs
pop
inc
or
dec
movsb
xchg
test
out
push
sahf
sub
adc
or
shll
iret
push
ret
dec
das
mov
xor
fcoml
inc
add
add
push
stc
sti
je
and
push
cmp
sub
mov
inc
mov
clc
mov
add
jo
inc
cmpsb
dec
scas
fcomp
push
push
cltd
adc
ret
mov
loopne
push
push
push
push
in
mov
add
sub
stos
xor
or
xchg
xorb
xchg
daa
jecxz
loope
mov
dec
mov
xchg
mov
or
mov
outsl
lea
jge
inc
push
cwtl
andb
push
cltd
adc
enter
daa
xchg
push
enter
sub
add
adc
shrb
imul
sahf
dec
jae
cmp
call
or
cmp
or
push
push
call
inc
add
outsl
inc
test
ss
jge
scas
shll
stc
jno
sbb
sub
in
xchg
add
sbb
fcoml
in
pop
rcll
mov
sub
lds
adc
mov
mov
mov
and
punpckldq
push
inc
and
jge
push
mov
pop
push
adc
leave
pop
fucomip
cmp
add
push
ja
xchg
insb
sub
repnz
fisubl
mov
mov
xchg
rcrb
inc
sub
daa
push
cmp
push
icebp
mov
int3
pop
out
sbb
rorb
add
xchg
cmpsb
push
jmp
xor
or
xchg
mov
or
adc
sbb
or
dec
adc
sub
cmp
sarl
push
add
inc
mov
mov
insb
sbb
mov
fsubl
pop
mov
mov
push
mov
call
addr16
fldt
daa
adc
and
push
xor
inc
enter
aam
fxch
or
inc
push
jne
jle
mov
test
mov
lahf
dec
in
ss
in
sbb
popf
cmpsb
cmp
in
nop
loop
add
clc
data16
cwtl
mov
fcoms
push
xchg
jl
add
sub
push
jb
cmp
cmp
and
inc
je
and
fucomip
add
call
leave
roll
movl
xchg
mov
fs
fidivs
add
adc
dec
sub
mov
mov
and
in
push
sarb
cmp
push
xchg
pop
push
or
push
push
xchg
xchg
xlat
das
or
inc
adcl
xchg
test
jo
push
fsubrs
dec
mov
je
sbb
add
jg
les
xor
xor
add
xor
xchg
add
loopne
jbe
shl
call
pop
push
iret
dec
pop
incl
lret
mov
cmc
xchg
jnp
movsl
decl
xchg
sysexit
inc
inc
inc
insb
sbb
test
dec
add
hlt
mov
lock
dec
ss
pop
decl
xor
andb
mov
loop
inc
sbb
push
xor
dec
sub
dec
mov
aam
insb
sbb
push
test
add
mov
dec
pop
push
push
add
daa
call
adc
add
aam
jo
pop
shll
test
aaa
outsb
jl
push
or
mov
push
xchg
cmp
pushf
xor
or
jmp
inc
xchg
loopne
outsl
push
mov
mov
idivl
mov
in
cwtl
movsb
push
movb
add
push
pop
mov
cmp
mov
ja
les
dec
or
or
jg
rorb
add
push
dec
mov
sti
sbbb
add
jne
es
repnz
add
les
xchg
test
pop
test
xchg
mov
mov
mov
cs
sub
jp
aad
ja
jo
pop
ds
movsb
jns
rorl
jle
push
xchg
loope
xor
mov
jg
int
dec
arpl
dec
or
negl
outsb
sarb
and
sbb
ss
sahf
jbe
sbb
adc
xchg
adc
nop
add
imul
add
into
ret
jecxz
dec
adc
add
cmpl
jo
add
and
adc
pop
add
outsb
and
xchg
cli
xor
iret
mov
xor
jnp
movups
add
test
push
xor
faddl
pop
movb
sbb
test
push
adc
xchg
sub
or
mov
mov
cltd
scas
les
add
out
mov
sub
in
adc
jbe
dec
enterw
sbb
pop
sub
fs
sub
push
push
inc
xor
mov
loope
loopne
addb
push
dec
add
sub
adcb
aaa
or
cmp
gs
call
out
cmp
push
pusha
sbb
pop
fisubrs
fwait
call
rorl
shr
push
adc
test
ror
arpl
arpl
add
jge
push
xchg
xchg
mov
es
mov
pop
xor
je
and
xchg
cs
mov
or
cli
call
lahf
inc
add
push
adcb
sub
je
call
mov
add
jno
or
jge
xchg
rorb
mov
cli
fmuls
fstps
sti
and
add
push
subl
dec
dec
cli
add
pop
je
or
push
cmp
push
mov
mov
mov
mov
cmp
add
mov
nop
cmp
and
inc
dec
movsb
test
add
mov
sti
fidivrs
adc
jo
inc
jmp
or
into
or
add
pop
fs
pop
jmp
mov
push
clc
dec
adc
fiadds
mov
push
xlat
cmp
es
inc
mov
cmp
push
mov
or
jnp
dec
and
aas
lea
jmp
cld
push
add
stos
pop
les
int
mov
cld
push
xor
adc
repz
fs
in
or
shr
push
jmp
sbb
adc
scas
sbb
pusha
movb
popa
mov
lret
popa
and
stc
sbb
adc
jb
adc
rcrb
sbb
jnp
mov
cmp
dec
or
lret
loop
push
dec
out
add
push
or
or
fs
sbb
xchg
lret
pusha
adc
xchg
inc
add
or
and
sbb
sub
pop
push
push
test
and
xchg
or
push
sbbb
and
sub
or
pop
push
push
add
sub
outsl
testb
or
xchg
add
mov
pusha
sub
mov
enter
push
sub
push
or
lret
push
xor
jns
jb
pop
push
pop
and
push
sahf
and
push
cmp
out
shlb
ret
cmp
xchg
out
fwait
or
or
es
sbb
sbb
or
jbe
and
jns
jle
and
dec
add
movsb
loope
xor
iret
dec
or
je
dec
stc
jl
add
adc
sbb
xlat
push
in
jmp
in
stos
inc
push
mov
sbb
adc
xor
dec
push
andl
sbb
and
lds
ds
fistl
mov
sarl
push
jge
adc
adc
or
ret
dec
cli
outsb
sbb
adc
call
pop
pusha
test
je
xor
nop
add
sbb
add
adc
movsb
or
sbb
adc
adc
and
jmp
pushl
sub
push
scas
mov
adc
pop
rorl
lahf
jno
mov
lret
dec
loopne
mov
jmp
scas
cld
ljmp
push
sbb
mov
add
add
sub
cmp
sbb
stc
enter
xor
sbb
out
push
xlat
adc
inc
cmp
fadds
in
inc
jecxz
loopne
loop
jae
loopne
adc
mov
shll
pop
mov
aas
pop
push
push
inc
pop
xchg
xor
pusha
gs
xor
mov
icebp
mov
out
loopne
or
repz
dec
scas
sub
push
mov
call
pop
and
cmp
jle
inc
shl
jo
scas
add
orl
xchg
out
daa
call
jmp
xor
xchg
dec
arpl
pop
dec
push
xchg
arpl
jecxz
and
add
dec
and
ret
push
lock
inc
inc
or
enter
pop
add
push
cmpb
push
mov
and
and
insb
or
sub
jecxz
lods
xchg
mov
in
loopne
dec
dec
add
inc
mov
mov
or
xchg
dec
mov
test
or
mov
jecxz
roll
sub
call
in
and
pop
ss
lea
stos
sti
pusha
es
inc
std
aam
push
adc
dec
cltd
test
jbe
inc
mov
in
inc
cmp
sub
mov
add
and
mov
xchg
or
cmpsb
jns
jne
pushf
push
fldl
jmp
cmp
aam
sub
mov
push
test
gs
and
aas
xlat
dec
in
jl
int3
mov
mov
in
out
rorl
in
inc
adc
stos
and
sub
mov
adc
mov
pop
sbb
push
jl
in
dec
pushl
mov
sub
jbe
je
jno
inc
aaa
add
inc
mov
and
out
pop
cmp
jne
mov
xor
pop
cmp
jge
cmp
pop
loopne
mov
cwtl
mov
fwait
or
hlt
push
push
jmp
adc
cmp
inc
icebp
sbb
movsb
loop
push
mov
dec
call
loope
jae
loopne
jl
jp
mov
sar
mov
or
add
call
in
and
mov
mov
sbb
sbb
sbb
or
test
jmp
mov
add
js
xorb
aad
and
cmp
xchg
xor
push
jp
push
dec
or
inc
add
sub
cltd
movsl
pop
jb
subl
pusha
xor
out
and
in
roll
loopne
cmpsl
and
and
inc
inc
and
and
xchg
mov
push
sub
pop
pop
or
adc
cmp
sbb
or
add
call
decl
movsb
push
arpl
ljmp
xor
mov
rorb
xor
dec
jmp
idivl
scas
cmpsb
dec
sbb
adc
sub
in
es
xor
xchg
or
xchg
popa
outsl
div
cmp
jns
add
pop
dec
jne
sbb
and
dec
or
sbb
in
mov
pop
lods
test
mov
mov
cmp
xor
ret
push
xor
ret
mov
dec
es
push
in
mov
or
imul
xchg
outsb
movsl
imul
inc
jno
xchg
and
nop
test
leave
mov
cmpb
jns
mov
shlb
dec
clc
push
mov
in
nop
and
arpl
pop
cmp
outsb
inc
dec
dec
pop
sbb
inc
test
dec
push
push
cmp
adc
sti
lea
add
mov
cmp
push
loopne
mov
sbb
push
pop
adc
aaa
outsl
arpl
sub
leave
inc
out
std
sbb
cmpsl
jbe
mov
cmp
jbe
xchg
out
push
xor
lea
in
in
adc
in
sbbb
cmpsb
inc
ret
pusha
fwait
in
mov
pop
push
and
sbb
add
cmp
or
insb
add
sbb
mov
xor
test
rorb
push
xchg
cmc
sbb
push
fdivp
es
fidivl
cmp
cmp
mov
mov
jmp
ja
shll
or
cmp
push
push
push
mov
inc
mov
pop
mov
or
nop
rolb
mov
push
cmpsl
pusha
xchg
ret
test
loopne
int3
cld
push
pop
cmp
adc
or
popa
loop
sub
sti
lea
out
fdivs
andl
push
push
into
sbbl
dec
movb
or
add
mov
adc
jmp
fbld
add
add
xor
xchg
icebp
sbb
mov
push
and
popa
or
lea
jmp
push
xchg
inc
xor
lahf
movsb
inc
aas
or
and
fsubs
push
add
scas
add
movl
fsubrl
add
xor
iret
sbb
push
ds
adc
or
mov
jne
fisttps
or
rolb
inc
adc
jb
add
out
jns
leave
jo
pop
ret
gs
lcall
push
test
and
xor
sbb
out
aam
movsl
xor
in
cld
mov
rclb
dec
add
sbb
insb
jnp
jnp
xchg
sbb
add
xor
std
repnz
insl
cmp
loopne
scas
das
mov
lods
xor
dec
add
dec
fsubrl
pop
subl
daa
int3
js
imul
mov
push
mov
and
out
into
and
inc
cmp
push
pop
mov
les
iret
xor
adc
or
nop
aam
mov
movsl
icebp
lea
push
pop
mov
rep
mov
adc
mov
sti
push
or
lea
pop
cmp
dec
mov
leave
or
add
xchg
push
sbb
orb
add
imul
push
jge
lods
loopne
adc
jge
pop
and
icebp
add
or
pop
push
pushl
sbb
out
pop
ret
push
mov
mov
push
lods
xor
bound
mov
test
adc
dec
loope
cmc
cmp
dec
and
pusha
pusha
push
pushf
lock
pop
mov
push
jg
and
push
xor
ret
rorl
andps
cmp
pop
daa
sub
xorb
loop
pop
or
fs
sbb
push
test
or
stos
ljmp
xor
mov
add
lea
clc
sar
adc
pop
and
cld
mov
jbe
push
call
clc
loop
mov
mov
mov
scas
adcl
mov
out
lea
ret
sub
jmp
insb
aas
push
cmp
sbb
leave
pop
ret
dec
xchg
aaa
lods
in
cmp
fiadds
sub
jl
push
rorb
dec
cmc
sbb
cmp
or
mov
xchg
inc
subb
push
or
cwtl
or
add
aam
inc
pop
dec
push
cld
push
xor
sbb
mov
neg
sbb
inc
je
mov
inc
rcr
fisubl
enter
xchg
sub
xchg
adc
insb
cltd
push
int
sbb
pushf
jo
jnp
jecxz
sbb
sbb
test
loopne
dec
sub
rorl
cmp
jae
push
pop
stos
fsubr
mov
test
test
data16
cmp
aas
xchg
test
nop
inc
in
or
ret
movsb
push
sbb
mov
int
inc
insl
sbb
jge
ja
xchg
insb
mov
jle
xor
decl
add
roll
sbb
cmc
sbb
fldl2t
cmp
out
and
shll
xor
jmp
xor
addr16
cmp
push
ja
rolb
das
xchg
or
or
mov
das
das
das
xor
cmp
inc
in
inc
add
xchg
xchg
or
dec
je
cmpsb
lret
shrl
add
inc
push
daa
aaa
fstl
jl
jo
mov
rolb
push
sbb
add
adc
jge
into
dec
hlt
data16
push
js
push
mov
adc
decl
mov
add
jg
aaa
enter
cmc
adc
fimuls
das
sub
loop
pop
ljmp
add
adc
rclb
push
stc
mov
dec
out
push
icebp
lods
xor
mov
or
or
xor
push
xor
push
scas
inc
bound
stos
fisttpll
inc
jecxz
mov
test
je
or
add
inc
sbb
rclb
repz
jmp
dec
hlt
nop
ret
dec
arpl
arpl
fisttpll
dec
and
cmp
test
sub
jae
out
lods
pop
call
mov
addr16
xchg
popa
je
or
je
cmp
cmc
ja
cmp
cmp
or
xchg
imul
add
jo
xor
sbb
cwtl
or
adc
lock
sbb
xchg
jo
loop
or
xor
cmp
jnp
enter
mov
mov
sti
repz
cmpsb
inc
xor
or
arpl
in
out
or
sbb
cmp
jae
cmp
and
sbb
je
inc
insl
andl
fcmovnu
jnp
and
jne
push
push
test
and
jae
fdivs
cmpsb
xlat
lcall
jbe
or
adc
data16
add
roll
sub
lret
xchg
pop
adc
sbb
or
xor
cwtl
pusha
mov
pop
pusha
inc
ret
adc
testb
add
push
rol
and
repz
sbb
push
call
xor
je
out
scas
and
adc
andl
mov
and
pop
rclb
add
iret
lret
inc
sub
loope
shl
leave
clc
push
mov
and
sarb
ret
inc
incl
mov
jmp
dec
or
jl
inc
iret
jecxz
and
sub
subb
cmp
lcall
pusha
mov
fs
cs
xor
mov
push
cld
xor
das
xor
or
push
lret
add
ret
pusha
jnp
pop
adc
push
shlb
xchg
adc
rorl
dec
push
adc
and
push
sbb
or
cmp
call
insl
mov
hlt
push
aad
filds
or
sahf
push
adc
sub
and
xchg
insl
add
mov
cvtps2pi
jno
incl
adc
mov
mov
sbb
lods
and
cmp
cwtl
push
in
mov
adc
arpl
sub
xchg
js
cld
add
adc
sbb
inc
test
pop
sbb
sbb
and
sarb
dec
jne
push
loopne
mov
push
and
add
add
pusha
push
push
movsb
rorl
xchg
jp
imul
mov
pop
fs
iret
inc
aam
jle
popa
xor
and
je
or
xchg
push
testl
mov
sbb
popa
cmp
jl
orb
gs
data16
aad
es
icebp
subb
gs
ret
sbb
mov
adc
xor
popa
stos
sbb
add
push
mov
jae
xor
push
sub
xor
call
shr
pop
pop
inc
leave
stc
push
mov
adc
adcb
adc
mov
inc
adc
clc
adc
cwtl
pop
mov
int3
adc
inc
mov
test
shrb
pcmpgtb
push
shlb
add
icebp
fisubl
mov
adc
test
mov
sub
dec
xchg
add
cwtl
fadd
jle
pop
pushf
sub
insb
loope
mov
push
adc
add
or
push
pop
add
adc
stc
sbbl
push
daa
leave
es
xor
push
dec
add
dec
or
push
outsl
out
adc
push
outsb
sub
sar
cmp
jbe
or
add
shlb
push
push
sbb
inc
fisubl
adc
ficompl
jle
or
inc
inc
outsl
cmp
in
mov
hlt
nop
pop
arpl
movsb
mov
cld
xchg
jmp
pop
or
cs
or
dec
cmp
inc
call
add
lock
lea
mov
push
push
ss
lock
pop
mov
leave
or
andl
dec
jnp
xchg
pop
pop
scas
pop
push
std
jo
jnp
in
push
scas
ret
adc
lea
add
hlt
lock
notb
testb
call
push
xchg
sub
pop
sbb
inc
inc
ficoms
dec
sbb
imul
mov
ja
mov
insl
add
int3
dec
sbbb
adcb
pop
adc
call
mov
orl
pushf
xor
out
imul
and
pop
nop
sbb
rcrl
stos
enter
arpl
dec
add
call
jne
sub
lea
jp
ret
inc
xchg
imul
aas
add
jae
jb
pushl
xchg
popf
sub
push
loop
loopne
jmp
xor
jae
inc
or
adc
add
and
shlb
cmp
insb
xor
xlat
test
out
int3
ds
jl
and
add
arpl
movsl
cmp
lea
push
dec
and
lock
mov
int3
jp
mov
repnz
ja
lock
mov
aad
jle
jle
loopne
popa
loopne
test
mov
addl
leave
mov
lcall
out
leave
pop
xor
jmp
mov
inc
sub
xchg
add
mov
test
mov
dec
or
mov
je
adc
xchg
jmp
jecxz
sbb
adc
mov
test
adc
adc
lods
cmp
test
mov
jo
push
sbb
xchg
out
mov
pop
jb
adc
nop
arpl
cmp
in
dec
in
inc
or
push
outsb
fcmovnu
daa
pop
mov
fnsetpm(287
mov
ja
and
imul
ja
or
or
pop
rcll
scas
cmp
and
ss
sbb
dec
add
push
repnz
inc
add
repz
jb
push
fadds
push
outsb
inc
fiadds
add
or
ja
je
pusha
test
pop
pusha
mov
pop
and
xchg
bound
add
enter
ds
pop
mov
lds
cmp
call
lahf
test
lcall
ss
push
ret
enter
repnz
push
jb
add
and
and
les
in
hlt
add
add
sbb
in
cmp
sub
in
cmp
test
cmp
add
les
aas
xchg
or
jmp
push
cmp
pop
push
adc
xor
xor
push
fcmove
xor
or
xor
mov
mov
mov
inc
add
cmpl
cmp
sbb
xchg
cld
or
fbld
add
push
add
xchg
out
cwtl
jecxz
adc
pusha
testb
sbb
adc
adc
or
dec
cmpsb
in
add
mov
mov
ret
inc
mov
inc
adc
movsl
dec
or
xorb
lds
jge
cmpsl
push
or
add
adc
add
out
add
movsb
push
adc
adc
jmp
xor
push
aaa
mov
ja
ja
dec
inc
dec
inc
movsb
and
inc
rcrb
psraw
dec
sub
xor
fadds
mov
js
stos
mov
out
mov
cmc
in
imul
pop
repnz
inc
mov
and
inc
mov
inc
push
rolb
inc
adc
cmp
data16
add
cwtl
ret
cmpl
xchg
cld
ja
je
jno
xchg
mov
sbb
movaps
lea
push
ltr
mov
jnp
rorb
pop
pop
sub
lock
add
push
add
fbstp
push
fcomps
add
mov
inc
bnd
daa
js
leave
aad
mulb
sub
or
mov
push
loope
sbb
rorl
pop
sub
xor
pop
pop
lock
mov
jae
jne
adc
push
sbb
cmp
leave
call
xchg
cmpsb
loopne
test
in
inc
call
sbb
je
inc
ret
push
push
icebp
dec
push
loope
pop
cmp
dec
or
sbb
pop
or
mov
push
cmpb
jae,pn
mov
mov
mov
or
pusha
scas
nop
fwait
jg
cmp
bound
or
lds
and
cmp
in
cmp
jno
adc
lock
xchg
in
cmp
cmp
mov
add
into
movb
loope
xor
push
inc
add
clc
lods
dec
cmp
jg
movsl
andl
outsb
mov
pop
leave
jo
icebp
loope
movsl
add
enter
addr16
rcl
push
push
lret
rolb
adc
pop
adc
jbe
aad
xchg
fcmovne
in
call
fcoml
or
mov
sbb
pop
or
sub
sub
xchg
shlb
lock
inc
push
push
sbb
leave
mov
fadds
cltd
ret
dec
mov
test
push
mov
lock
dec
cmp
jmp
add
pop
xor
mov
loopne
test
mov
pop
or
push
push
inc
rorl
arpl
or
add
mov
fmull
xchg
or
bound
daa
or
adc
or
jmp
sub
mov
imul
or
push
sbb
xor
xchg
repnz
lods
mov
stc
out
mov
sahf
sbb
mov
push
pop
and
add
mov
pop
hlt
inc
xor
add
ret
cmp
sub
clc
xor
xchg
inc
out
inc
and
or
int
lods
adc
adc
fldl
pop
xchg
outsb
xchg
and
pop
adc
sbb
movsb
ds
xor
push
or
lahf
or
lock
pop
dec
jge
repnz
ss
outsl
imul
adc
rep
jp
or
sbb
lock
xor
daa
insb
xor
mov
out
jb
add
aas
lods
or
pop
mov
lahf
xor
jbe
sti
decl
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
cmp
stos
test
jp
pop
mov
or
cmp
mov
pop
and
jg
daa
sbb
xor
je
cmp
je
mov
pop
js
pop
orb
push
repnz
push
mov
pushf
rcl
iret
jae
adcb
mov
xor
sbbl
sub
add
jno
mov
or
mov
pop
inc
adc
lock
movb
push
test
dec
mov
jmp
add
incl
clc
inc
xchg
mov
hlt
jge
icebp
add
aaa
sub
adc
add
mov
hlt
inc
mov
and
or
and
test
push
clc
int3
aam
add
ret
and
loopne
add
cld
lock
xor
mov
lea
mov
sub
dec
mov
cmp
xchg
mov
das
or
or
xchg
inc
orb
movsl
push
cmp
js
mov
jo
add
je
cli
in
jo
push
ja
sahf
jle
ret
xor
rol
dec
mov
push
xchg
adc
sub
stc
faddl
fstl
int3
fcomp
push
pop
shll
mov
inc
fildl
ficoms
pop
mov
pop
mov
leave
sub
sbb
insl
call
out
pop
test
and
rol
movsl
or
xchg
dec
xor
shrl
jl
or
lea
mov
fidivl
add
dec
pop
sub
enter
inc
call
push
jb
inc
ja
outsb
movsb
push
inc
je
push
test
pop
shrl
outsb
dec
inc
or
jl
test
inc
xor
inc
dec
jnp
das
sbb
add
sbb
sub
or
push
sahf
out
push
pop
pop
pusha
fs
xchg
pop
mov
add
sbb
push
ret
xchg
mov
pop
insl
mov
jge
jo
das
adc
ficoms
and
or
dec
imul
mov
mov
sti
mov
dec
je
adc
mov
push
hlt
mov
sbb
xor
cli
imul
pop
in
jne
xor
or
scas
mov
fucom
add
out
test
daa
lods
pop
and
lret
xchg
sub
test
mov
pop
or
loop
mov
pop
rclb
ret
addb
inc
add
je
inc
jle
and
push
adc
jno
cmp
inc
add
loop
mov
lock
xorb
ret
cmp
pop
push
inc
push
roll
es
mov
pop
repnz
mov
sbb
jnp
por
sub
and
enter
sti
push
lahf
push
out
in
pop
xchg
add
loope
shl
ret
sub
dec
ret
loop
pop
pop
fucomi
jae
xor
dec
loopne
push
jne
dec
std
push
test
addr16
mov
outsb
or
in
adc
inc
aad
sti
or
xchg
push
cmp
xchg
inc
pop
mov
into
popf
pop
and
daa
js
mov
xchg
add
pusha
roll
or
and
jo
add
and
dec
test
push
fisttpl
imull
fdivrs
icebp
fwait
movb
fmull
jno
dec
pusha
inc
push
jmp
pop
cld
in
xor
inc
push
push
pop
sbb
loop
xchg
iret
xor
adc
pushl
mov
test
je
testb
or
je
cmp
adc
add
shlb
jg
pop
push
repnz
xor
lea
push
lods
inc
aas
cli
add
rol
xchg
faddl
jo
cmp
out
dec
add
xor
pusha
cmpsb
mov
je
mov
and
push
test
add
and
jne
andl
in
dec
into
sbb
lcall
push
inc
repnz
push
outsb
sub
jmp
and
mov
insl
insb
pop
and
divl
adc
clc
or
fs
lds
addb
push
pop
inc
addl
mov
pusha
or
repz
sbb
arpl
jo
imul
pop
sub
pusha
inc
pop
cltd
jge
push
dec
xor
adc
mov
rorb
repz
sbb
jmp
xchg
cmp
out
cwtl
adcl
popaw
jbe
jo
inc
loopne
jge
movsb
sbb
into
inc
dec
pusha
mov
adc
cmp
movl
sub
inc
jle
enter
sub
repz
ret
jmp
add
xchg
push
or
push
push
jae
mov
inc
sahf
sub
sti
nop
clc
xchg
hlt
pop
and
cli
mov
and
sbb
sub
push
filds
push
ret
std
hlt
jg
mov
sub
rorl
pop
lcall
xor
sbb
das
ret
orps
mov
aaa
mov
xor
outsb
push
mov
push
or
fistps
stc
sub
lea
xor
push
mov
inc
push
inc
jne
mov
add
ret
pop
cmp
push
jg
jne
and
mov
cmp
fistpl
push
push
cmp
inc
movsl
cmp
pop
test
and
dec
adc
shrl
inc
add
aam
aas
adc
or
jns
test
mov
jb
or
xchg
sub
adc
pop
add
add
or
jge
mov
mov
data16
push
mov
jno
jmp
pop
and
mov
sahf
jmp
mov
jne
test
add
ja
mov
loope,pt
cmp
lods
xor
or
shll
sbb
or
test
dec
mov
jo
clc
ret
jmp
push
fmuls
jae
cmp
pop
inc
xchg
adc
inc
fs
xchg
pop
subb
stos
pop
mov
jmp
outsb
lret
sub
loope
in
xlat
adc
cmp
movsb
xchg
mov
lea
insb
push
push
or
aam
gs
inc
pop
or
outsl
roll
push
adc
push
cs
sarb
or
jmp
shlb
jnp
push
jnp
fimuls
mov
sbb
jae
iret
in
adc
sbb
inc
in
cmp
inc
sbb
dec
jp
pop
mov
xchg
aam
dec
and
jecxz
xor
jo
shrb
loopne
inc
pop
push
or
sbb
dec
push
dec
mov
inc
pushf
pop
push
sbb
pusha
inc
test
add
mov
mov
jbe
fcomp
jl
stos
sub
cmp
push
fldl
stos
cmpb
push
push
fstpl
add
mov
pop
data16
aaa
iret
iret
repz
inc
add
bnd
push
divb
or
cld
cmp
clc
jne
or
jne
or
pusha
mov
cld
jecxz
loopne
fsts
idiv
stos
out
add
pop
andl
jne
into
add
inc
in
mov
or
pop
les
xor
lea
mov
push
xor
jg
aam
add
aam
arpl
test
lea
fstl
jecxz
mov
mov
movsl
movsl
lea
movsl
or
adc
ret
add
daa
push
les
fmuls
out
aas
sbb
adc
repnz
xchg
jne
mov
gs
or
push
dec
sub
sbb
ret
aam
or
loopne
pusha
inc
frstor
ret
ret
jne
cmp
inc
in
mov
loop
or
fimuls
outsb
test
sti
movsl
pminub
pop
mov
cli
push
push
push
jnp
shrl
in
or
mov
int
add
fmull
repz
push
jb
push
jmp
rcrb
pushf
mov
out
mov
enter
push
jbe
loopne
or
in
rclb
fcmovbe
sbb
mov
jge
and
aad
dec
mov
add
push
lock
cmp
push
xchg
push
add
mov
jle
repz
sub
popa
add
add
repz
adc
pop
hlt
push
adc
add
in
add
divl
pop
or
imul
rcrl
invd
mov
pop
or
push
enter
or
cmp
addl
repnz
sbb
push
or
or
sub
inc
or
lods
in
pop
sub
or
inc
xor
popa
pop
and
ret
les
inc
pop
test
push
xrelease
test
lret
lods
push
mov
pop
pusha
mov
add
jmp
push
nop
xchg
cwtl
and
xchg
xchg
cltd
fnstcw
add
mov
dec
sbb
fs
mov
pop
and
or
out
cmp
mov
jbe
fmull
mov
int3
rorb
pop
rclb
jb
enter
imul
push
or
mov
mov
pop
inc
jo
or
xor
loopne
nop
sub
dec
add
insb
in
call
inc
and
or
in
popf
mov
xchg
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
imul
jge
add
imul
pop
xor
xor
test
add
mov
cmpb
sub
loope
mov
enter
leave
cmp
add
push
jecxz
mov
sub
ficomps
jle
mov
outsb
pop
ficoml
cli
es
daa
cmp
xchg
and
scas
cmc
mov
push
push
adc
jle
leave
sbb
and
mov
or
add
mov
add
add
push
cs
data16
rolb
mov
fbstp
leave
jl
call
hlt
cld
cmp
jl
cld
sbb
sub
into
fistpl
dec
inc
xchg
xor
cmp
leave
push
rorb
xchg
rol
imul
aam
push
insl
push
inc
sbb
add
insb
or
or
mov
bndldx
jns
push
fisttpll
inc
cmp
sub
sbb
mov
jo
mov
mov
pop
lret
xchg
cmpb
sti
lcall
dec
xor
pop
push
les
test
lret
dec
jb
cmp
insb
adc
test
mov
jnp
insb
add
mov
and
rcr
push
arpl
flds
movsl
mov
sub
or
sti
inc
mov
mov
xor
and
fisttpl
dec
sbb
loop
pop
cmovge
test
or
adc
jne
pop
or
fdivs
lret
cmp
addr16
mov
and
sub
mov
jne
clc
xor
jmp
cltd
dec
pop
call
popl
adc
sub
push
inc
lock
dec
pop
outsl
icebp
mov
cmpb
add
mov
ss
pop
jle
pop
push
cmp
adc
lret
pop
inc
jbe
adc
xchg
push
inc
sbb
movsb
mov
inc
push
or
sbbl
pop
hlt
and
cltd
jne
jno
sub
ffreep
clc
adc
pop
push
les
sbb
jae
test
shlb
testl
mov
out
cmp
add
jno
sti
daa
fisubl
xor
movsl
out
fdivrs
je
fwait
ret
imul
push
iret
pop
rolb
movsl
sub
add
jmp
adc
and
pop
rolb
sbb
sbb
push
out
arpl
ret
mov
pusha
ret
lea
and
xchg
dec
popa
mov
lock
pop
inc
cmp
mov
das
push
push
daa
xor
pop
or
int3
insb
inc
fstl
mov
pop
lds
addb
leave
scas
push
jns
rorb
test
clc
cld
out
pop
nop
cmp
mov
sbb
jbe
jo
pop
pushf
in
sahf
inc
loop
orb
popa
mov
adc
dec
adc
and
or
subb
inc
sbb
adc
sub
and
pop
mov
cmpsl
xchg
jle
cmc
sbb
sub
mov
in
mov
int3
movsl
clc
inc
push
or
pop
and
and
orl
push
repnz
stos
push
test
xchg
imull
mov
push
stos
xor
jo
push
and
xorl
pop
mov
mov
lahf
push
push
or
adc
lahf
lret
push
les
nop
mov
sub
ficompl
xchg
dec
xor
test
out
test
xchg
xchg
lahf
or
pushf
dec
loope
push
fists
or
inc
cwtl
push
mov
jo
test
je
mov
add
ret
jbe
add
pop
jns
add
add
pop
dec
inc
and
push
shr
jb
xor
mov
sub
adc
loopne
xor
ror
paddusw
cwtl
sub
in
icebp
mov
test
jnp
ds
xchg
lock
jp
add
cltd
data16
and
addb
mov
lea
outsl
cmp
and
sbb
push
test
pop
addr16
and
sub
arpl
mov
pushf
push
sub
mov
adc
mov
mov
xlat
xchg
sbb
add
xorl
inc
sbb
scas
icebp
mov
cmp
roll
jecxz
cmp
jl
jmp
aaa
nop
out
stos
pop
mov
cld
sbbl
add
insl
mov
ret
adc
mov
inc
push
mov
dec
cmp
mov
adc
xchg
add
dec
adc
arpl
sbb
cmc
mov
add
add
in
mov
mov
fwait
cmp
test
loope
ss
pushf
scas
test
push
mov
lock
adc
sub
dec
cwtl
dec
mov
adc
dec
sarl
shrl
jno
xchg
add
cmp
xor
mov
inc
push
enter
adc
ret
sbb
ficoms
sbb
jl
lock
fnstsw
into
mov
addr16
xchg
lock
lock
out
adc
or
dec
sub
push
loopne
mov
add
jge
lds
sub
popf
ljmp
inc
rclb
daa
bound
imull
pop
jne
test
mov
cmp
andl
mov
push
aad
das
mov
mov
sub
imul
and
xor
enter
cmp
repz
and
in
adc
or
dec
stc
and
mov
and
addb
test
sbb
jne
inc
nop
cmp
stos
push
shrl
xchg
sti
adc
out
imul
pop
cmpsb
push
test
rolb
jno
jecxz
arpl
jnp
pop
fnsave
dec
rcrl
movsb
dec
decb
test
mov
stos
dec
cs
loope
dec
and
dec
cmpsb
mov
inc
add
loope
inc
sahf
ja
inc
inc
mov
push
repnz
push
nop
pop
test
dec
icebp
or
hlt
in
add
mov
jne
pop
jne
std
mov
clc
or
pushl
test
insl
sbb
fldl
xor
insl
jo
or
dec
sub
adc
das
add
andl
adc
add
fcmovb
movsl
ss
pop
xchg
jo
pop
add
lea
in
fs
jle
pop
inc
push
outsl
lret
scas
mov
int
js
adc
fxch
repz
mov
add
add
push
ss
or
dec
push
push
add
push
pushf
sti
xchg
inc
sahf
orb
pop
pop
es
dec
in
pusha
lods
or
iret
pop
adc
movsb
jb
jo
pop
enter
orb
mov
or
xor
movsb
or
ret
and
xorb
or
sahf
xor
stos
add
repnz
insb
loopne
xchg
in
jns
pop
hlt
mov
and
out
pop
cld
add
or
sub
xchg
dec
int
inc
cld
and
mov
hlt
cmpl
adc
pop
lock
sbb
movsl
repnz
or
xor
dec
push
cmp
push
cwtl
add
adc
cmp
mov
fs
and
shlb
sub
inc
xchg
jo
dec
ss
adc
and
push
sub
subl
dec
nop
push
or
inc
xor
shll
mov
cmp
leave
ja
sub
sub
daa
sbb
setno
adc
push
outsl
and
and
mov
xchg
addr16
and
push
sub
and
push
daa
iret
dec
insb
test
and
mov
daa
push
or
cltd
jg
inc
xor
test
cs
adc
popa
cmc
lret
cmp
and
rcr
aad
sub
sbb
push
cmpsb
xor
insb
pop
sahf
xchg
adc
gs
cmp
or
sub
cmp
adc
out
add
sbb
pop
mov
add
jecxz
dec
push
pop
int3
out
out
pop
aaa
sbb
mov
clc
mov
add
cmpsb
je
adc
mov
mov
add
in
mov
xor
out
inc
inc
test
inc
add
dec
inc
enter
addr16
push
ss
ret
dec
push
xchg
jl
nop
pop
mov
mov
xchg
xor
add
pusha
adc
or
test
and
icebp
adc
outsb
loope
mov
jg
sarb
js
inc
xchg
adc
repnz
inc
sub
dec
lret
int
add
xor
loopne
pop
pop
pop
mov
inc
test
fsubs
aaa
pop
jmp
sbb
mov
aad
or
adcb
clc
mov
ljmp
ret
cli
xchg
jnp
bound
inc
mov
pop
adc
sbb
inc
mov
insl
add
add
js
push
insb
orl
xor
fstps
sbb
les
sbb
rcrl
push
mov
xchg
mov
into
sbb
sub
inc
xchg
adc
outsl
xor
push
jno
push
test
xor
mov
sub
rol
mov
mov
push
mov
in
inc
sub
mov
mov
xor
pop
jne
mov
xchg
cmc
nop
add
push
mov
mov
push
mov
sub
mov
aad
scas
sub
sbb
icebp
inc
cmpsl
jg
add
je,pt
mov
push
dec
push
push
add
test
xor
sti
mov
stos
imulb
and
dec
stos
dec
inc
sub
pop
or
pushl
mov
test
and
push
insb
push
scas
push
push
aad
xchg
dec
mov
jle
repz
and
lret
xor
push
xor
sar
jbe
mov
sub
and
jb
mov
add
or
xor
add
sbb
popaw
add
and
mov
div
inc
cmp
jae
or
adc
les
inc
pusha
jmp
mov
push
sbbl
pop
jae
dec
and
mov
ret
fs
mov
xchg
sbb
clc
psubusb
rclb
pop
shlb
or
and
mov
mov
scas
lods
outsb
adc
pop
cmc
stos
pop
and
and
cmp
je
mov
cld
loope
pushf
or
je
inc
and
cmp
jne
daa
loop
push
push
sbb
ds
paddq
pop
fisttpll
jmp
aam
jne
jmp
fisttpll
sbb
les
fldl
mov
test
je
and
add
jp
data16
lock
dec
ret
adc
sbb
fldl
lock
mov
imul
adc
cmp
in
out
fwait
sbb
pop
clc
and
insl
clc
push
push
pop
sub
test
sti
mov
sbb
xchg
sbb
sti
add
pushf
and
pop
fsub
pop
fsubrp
sub
mov
loopne
adc
mov
or
jg
int
fwait
cmp
add
push
rcrb
xchg
in
fucomp
movb
cmp
je
add
sbb
fdivs
adc
pop
add
and
pushf
adc
test
aad
mov
add
mov
sub
push
push
push
test
inc
or
xor
xchg
add
sbb
lahf
add
or
test
test
pop
xor
iret
add
sub
sub
mov
int3
mov
xlat
cmp
jns
pop
cmc
sbb
fsubrp
sbb
or
aas
repz
push
push
pop
repnz
sbb
ss
sbb
cs
adc
sub
daa
lea
ja
pop
imul
cmovl
ss
aad
cld
nop
out
and
push
push
pop
repnz
or
loopne
push
js
aam
shll
sahf
das
adc
pop
pop
and
lds
nop
out
mov
push
pop
repnz
sbb
xor
or
shrb
inc
lock
sub
adc
xchg
int
pop
push
jecxz
inc
dec
push
mov
pop
or
rorl
fcoms
push
xchg
pop
das
lret
add
mov
cld
nop
sbb
push
push
sahf
and
and
push
and
and
inc
add
pusha
adc
xchg
mov
jge
nop
lret
mov
dec
fsubs
inc
clc
sbb
les
aaa
sub
aam
push
nop
out
mov
push
es
cld
or
adc
inc
sbb
jle
jae
cmovb
sub
or
daa
and
vmwrite
push
mov
out
sub
js
dec
push
mov
adc
aaa
and
push
push
test
adc
rclb
xchg
or
lods
push
sbb
cs
push
popa
outsl
cmpb
cmp
mov
sahf
cmpsl
stc
or
push
out
sahf
out
jae
xchg
cmpsb
fsubp
jns
mov
fldl2e
sti
lods
fisubrs
push
cs
push
popa
sahf
out
sahf
jb
xchg
movsl
mov
xchg
jo
jns
fsubr
cmpsl
and
push
je
sub
adc
and
dec
inc
sub
adc
daa
add
mov
mov
or
ds
es
shl
int3
ret
pop
imul
lds
in
sbb
inc
or
addb
adc
mov
mov
les
add
add
ljmp
idivl
push
sbb
roll
pop
push
jo
xor
xchg
pop
jl
popa
xchg
ja
pop
add
jno
adc
lds
ret
and
sbb
fldt
adc
jne
pop
push
jns
es
mov
adc
mov
push
push
push
xlat
ds
add
ljmp
inc
fcomi
cmpsl
nop
mov
push
and
or
add
pop
lock
sub
adc
xchg
notb
iret
ror
shlb
out
add
push
iret
inc
push
cmp
add
dec
add
and
dec
incl
stos
mov
adc
xor
mov
or
add
fbstp
jnp
lds
xor
inc
lods
hlt
mov
inc
push
sbb
pop
add
add
mov
movsb
dec
hlt
mov
cmp
enter
adc
sbbl
aaa
iret
xor
jl
xor
xchg
scas
fldl
sub
pop
jo
add
adc
sbb
ja
loopne
enter
push
popa
add
call
call
jns
dec
dec
or
and
push
pusha
inc
xorl
in
sbb
jmp
mov
loope
push
xchg
xor
or
pop
test
mov
mov
mov
add
mov
sbb
add
out
inc
xor
mov
shl
pop
xor
cmp
enter
add
mov
mov
jg
and
sysret
mov
xor
out
adc
ds
cmp
sub
dec
or
das
cltd
inc
sahf
adc
das
cmp
and
adc
in
lahf
cltd
lods
push
jo
xchg
mov
pop
call
insb
mov
inc
ret
mov
ljmp
movsl
cmp
test
add
in
add
shrl
xor
subl
xorb
cmp
cmpsb
xchg
push
push
mov
jle
inc
xor
or
sub
pop
fidivs
xchg
or
adc
adc
xchg
pop
cmp
push
mov
sub
movl
and
adc
imul
cltd
mov
add
in
xchg
push
cmp
sub
mov
dec
pop
mov
or
ret
jecxz
xor
push
addr16
icebp
mov
lahf
lgdtl
xor
cwtl
mov
add
and
jo
adc
cmpb
push
adc
dec
xchg
dec
pop
push
cld
pop
inc
or
outsb
adc
sbb
jo
imul
jno
idiv
aam
insb
daa
cwtl
jo
xor
cmc
orb
add
mov
xor
adc
test
test
loopne
ret
jg
jg
test
push
aam
mov
sbb
or
sbb
aam
mov
mov
pop
sbb
add
pop
and
sub
imul
pop
adc
inc
cmpsl
call
ljmp
movsb
inc
xchg
adc
jp
xchg
sbb
in
insl
jl
or
arpl
cmc
or
add
inc
inc
pop
push
iret
dec
sahf
rolb
add
sub
push
push
lods
mov
jne
cltd
fisttpl
test
scas
and
adc
movsb
adc
dec
mov
popl
cmp
sbb
add
push
in
adc
fwait
pusha
add
stos
xor
and
mov
push
and
leave
jae
popa
add
repz
add
add
inc
lds
in
mov
and
xor
sub
add
or
push
adc
or
inc
xchg
inc
add
add
adc
add
sub
sbb
cli
jmp
cltd
push
stos
adc
push
or
or
jecxz
sbb
cmp
mov
inc
mov
jae
or
outsb
les
and
in
sub
xor
popa
xorb
adc
xor
loopne
add
add
imul
stc
adc
or
lods
loope
push
cmp
dec
pop
jmp
xchg
fidivs
cli
add
jbe
cmp
test
jne
stos
inc
dec
add
in
orb
ficoml
and
push
in
mov
xchg
cbtw
dec
add
mov
adc
pop
imul
inc
jge
jge
jmp
sbb
or
cmp
mov
adc
sbbb
add
mov
dec
xchg
or
das
dec
sub
xchg
cmp
loope
cmp
fwait
lock
fldenv
fdivrs
mov
pop
dec
rol
mov
ss
test
or
jge
or
bound
push
arpl
fstpt
pop
jnp
out
or
inc
lock
push
inc
fs
and
movsl
pop
sbb
aaa
mov
enter
ja
mov
arpl
push
rcrl
sub
sbbl
xchg
or
dec
inc
mov
ds
cltd
icebp
pop
sub
push
out
imul
add
mov
and
test
or
addl
add
scas
daa
add
jo
je
nop
push
jp
add
sar
les
lock
push
and
add
popa
xor
dec
rclb
pop
push
push
xchg
mov
mov
stos
xorb
mov
inc
xor
lret
cmpl
sbb
jle
adc
dec
cmp
add
jo
push
lahf
cmp
sbb
rcrl
adc
dec
sub
or
mov
add
imul
or
add
test
ss
or
mov
enter
pop
sub
jno
sub
inc
insl
fwait
movsl
loopne
popf
adc
cmpsl
test
pop
xlat
adc
addl
cmpb
sbbb
sbb
test
insl
iret
lock
arpl
mov
pop
add
lods
mov
ljmp
pop
icebp
aaa
dec
arpl
adc
repnz
lods
mov
adc
lret
pop
call
leave
test
xor
jl
or
test
lock
in
nop
fimuls
dec
mov
mov
sub
push
or
xor
sub
cmp
mov
jl
shr
and
cli
inc
jl
or
sbb
call
jle
xor
jle
cmp
je
mov
inc
jo
fisttps
inc
jmp
movb
in
shrl
call
cltd
pop
idiv
xor
mov
shrl
loop
shrb
pop
mov
add
iret
or
loope
icebp
pop
jne
sbb
int
outsl
mov
cmpsl
push
faddl
mov
lret
das
mov
mov
mov
jmp
orl
xor
decl
push
dec
inc
push
cmp
lock
hlt
cltd
nop
cmpsl
rolb
stc
cmp
iret
cmp
sub
in
mov
dec
fdivl
ficomps
add
mov
hlt
push
cmp
push
mov
sbb
xlat
mov
mov
xchg
test
pop
jno
dec
inc
mov
sub
push
rolb
inc
lea
mov
lea
mov
pop
adc
pop
or
xor
lock
cmp
push
fadds
lret
loopne
in
dec
cmp
push
inc
pop
imul
or
or
xchg
out
sub
int
lods
scas
or
test
xor
mov
push
sub
repz
add
sbb
enter
jmp
push
push
xor
adc
jne
pop
call
mov
adc
sub
jo
pop
inc
decb
adc
mov
pop
inc
sbb
daa
mov
xchg
xchg
js
daa
push
in
sub
into
jl
repz
jns
cs
ror
int
js
enter
and
and
enter
test
mov
stos
sub
call
sbb
jb
sbb
inc
inc
inc
fcmove
dec
js
sbb
in
mov
push
jns
xchg
inc
ficompl
and
repnz
pop
imul
cmp
and
sbb
jbe
in
xchg
xchg
xchg
and
pusha
shr
mov
and
loopne
jbe
xchg
mov
imul
xor
pop
test
and
imulb
das
push
inc
jno
xchg
jne
jnp
iret
in
mov
xchg
lea
push
lock
cmp
dec
scas
jns
ret
pop
mov
push
sub
pop
gs
push
inc
inc
adc
xchg
dec
outsb
fisubs
fs
inc
mov
cmp
fs
xchg
mov
fs
fwait
adc
push
xchg
xor
dec
dec
dec
dec
pushf
xchg
mov
jl
int3
adc
dec
aam
in
mov
jne
mov
sub
sub
jmp
in
sub
dec
fmuls
sbb
pop
cmpsl
xor
sbb
jo
divl
out
sub
dec
sbb
mov
inc
sti
fsubrs
dec
outsb
inc
pop
push
shlb
inc
ret
loopne
add
push
xchg
pop
ror
add
out
mov
shlb
sbb
mov
or
and
adc
xchg
xlat
jp
or
scas
faddl
loope
sbb
add
inc
loopne
and
andb
popa
lock
pop
sub
call
int
cwtl
push
and
jge
fcomip
std
dec
mov
test
enter
icebp
movsb
pop
cmp
xchg
add
cmp
cmpsb
mov
cs
or
sarb
or
sbb
push
gs
or
sbb
push
in
in
dec
cmp
stos
mov
out
sbb
loopne
add
or
mov
in
mov
outsb
lret
push
mov
adc
notl
xchg
mov
dec
pop
dec
aam
and
into
adc
call
cs
push
add
jecxz
xchg
mov
js
or
sub
imul
sub
loopne
push
pushf
xor
and
orl
aas
hlt
pusha
fs
add
jnp
fsub
and
mov
xor
xlat
pop
sbb
addr16
cmc
push
mov
popa
push
sbb
addr16
push
sarl
inc
cmp
mov
outsl
daa
xchg
fisubs
sub
add
xor
adc
cmp
cld
pusha
nop
es
mov
inc
ret
add
pop
sbb
cmpsb
icebp
xor
and
push
je
inc
jg
bound
sbb
pop
pushf
add
and
call
sub
sbb
loopne
insb
xchg
jne
fmull
loope
pushf
xor
cmp
clc
in
psubw
fsubr
fwait
pop
fisubrs
hlt
inc
cmp
and
jmp
adc
push
sbb
and
mov
adc
mov
sbb
jle
pop
pop
mov
push
dec
cmpl
jmp
faddl
addl
inc
shlb
or
sbb
js
and
call
pop
or
loopne
lahf
or
add
loop
iret
movsb
fistpll
or
sub
cmp
ja
fcomps
clc
inc
pusha
xchg
xor
filds
dec
jge
pop
daa
inc
push
push
mov
adc
push
xchg
adc
jno
cmpsb
clc
sti
dec
les
cld
xchg
sub
movb
scas
xchg
adc
inc
jbe
addr16
jae
push
mov
xor
test
shrb
imul
sub
enter
pop
loopne
pop
pusha
pop
adc
incl
or
shrl
sahf
jns
lds
pop
xchg
in
into
or
mov
mov
adc
sbb
lcall
mov
lahf
sub
or
or
inc
xchg
or
mov
jb
push
xor
fmull
pushf
pop
mov
pminub
cmp
ljmp
sbb
push
lcall
xor
sbb
es
add
sbb
rorb
push
push
adc
fstp
ret
repnz
and
push
clc
xor
shrl
sbb
and
or
mov
test
jmp
fmull
rcrb
add
js
jns
movsb
js
rcll
sbb
or
loopne
sarl
push
adc
js
cmpl
sub
pop
addb
shll
fwait
sbb
cmp
pop
repz
xor
push
cmc
clc
push
push
ror
adc
jo
push
dec
xchg
lret
dec
loope
and
sbb
or
xchg
mov
fwait
or
mov
es
pop
mov
fcomp
sub
pusha
xchg
iret
fmulp
rcr
scas
cmc
insl
add
lret
mov
fwait
xchg
in
mov
or
pop
adc
mov
test
jbe
in
xor
sub
jno
fldl
rol
jb
jl
cmp
and
inc
cmp
dec
xchg
addl
femms
cwtl
scas
loopne
pop
or
mov
push
ret
pop
lcall
nop
pop
das
sub
test
gs
popf
out
add
add
mov
jns
xlat
push
inc
sti
xor
mov
push
or
push
mov
xchg
aam
daa
and
jnp
movlps
mov
xor
cmc
cs
xchg
dec
in
cmp
adc
cmp
shrb
push
scas
pop
mov
cmp
push
cmp
sub
loope
cmp
scas
pop
mov
sub
cmc
pop
cmp
push
sbb
adc
cmp
dec
inc
add
andb
mov
xor
pop
sbb
xchg
mov
or
mov
cmp
iret
mov
jmp
and
and
pop
dec
pop
jge
jmp
mov
nop
add
lods
push
cli
mov
or
mov
ficompl
jle
ljmp
mov
push
cmp
je
sub
es
cmp
dec
xor
push
sub
cltd
and
xor
xchg
jnp
push
xchg
sbb
repnz
movss
adc
sub
add
jmp
sbb
add
add
and
cmp
notb
add
sbb
push
adc
xor
popf
add
push
mov
mov
xchg
jle
dec
aam
loopne
jp
sub
add
mov
adc
sbb
add
or
pop
dec
mov
cmp
sbb
mov
cltd
jle
loopne
cmp
mov
sub
sub
out
loopne
inc
push
add
push
cmp
sub
mov
push
push
cltd
test
call
inc
fiadds
popa
into
mov
scas
dec
pop
push
lret
add
or
jo
nop
jne
mov
lock
sbb
pop
enter
jno
sbb
cwtl
or
lock
test
mov
xchg
sbbl
loopne
inc
or
xchg
cmp
pop
je
cli
xchg
push
pop
clc
cmpsb
scas
cmp
jnp
mov
adc
or
inc
sub
mov
mov
psubq
std
sub
fbstp
sarb
clc
div
scas
push
cltd
dec
popa
sbb
push
push
test
rclb
adc
in
add
stos
push
icebp
aam
mov
jge
or
push
add
jmp
aas
aam
and
add
add
mov
rolb
xchg
inc
loopne
add
lods
andb
inc
aas
in
or
mov
pop
addb
loop
push
or
addl
sub
or
add
and
enter
inc
sbb
push
lock
dec
sti
dec
mov
popa
sbbl
mov
add
add
mov
push
mov
pop
test
outsb
pushl
cmpl
jnp
fnstenv
sub
mov
mov
push
filds
es
jo
fimuls
push
test
or
adcl
push
sarl
dec
adc
mov
cmp
sbb
ret
out
lahf
es
add
inc
inc
mov
sbb
mov
mov
push
sbb
lods
mov
mov
adc
jae
movb
fiadds
add
push
cltd
lea
or
ja
test
mov
add
mov
rcr
cmp
cwtl
pushf
adc
adc
pushl
cmpl
jne
inc
cmp
jb
dec
es
pushf
stos
push
dec
or
ljmp
push
es
sub
and
into
xor
jae
pusha
mov
dec
call
pop
rcrl
push
clc
mov
jmp
push
out
add
pop
adc
mov
paddd
jne
inc
fdivr
nop
lret
icebp
cmc
cli
push
faddl
add
lods
xchg
inc
xor
jmp
lcall
pop
pop
pop
test
xor
jae
adc
ljmp
fnstenv
mov
nop
into
dec
push
xchg
and
leave
loope
jne
or
les
out
add
mov
iret
aam
ljmp
push
jb
sahf
test
cmp
or
pop
push
test
mov
aaa
push
divl
lcall
addl
sbb
push
jmp
sti
push
cltd
push
aas
sub
xchg
mov
xor
leave
mov
inc
loope
jno
xor
or
ret
xchg
sbb
imul
xchg
or
sub
orl
xor
sbb
or
xchg
dec
pop
pop
inc
mov
or
jmp
xchg
call
setne
or
push
fadds
add
lock
pop
push
fists
and
adc
mov
sarl
mov
add
pop
gs
sub
std
fwait
ret
ret
js
jge
push
mov
insl
jne
addb
lock
cltd
inc
add
jne
inc
sbb
push
mov
adc
test
pop
mov
std
lds
popf
or
add
stos
scas
xor
push
std
scas
adcl
jne
push
enter
loop
push
sbb
add
sub
out
cmp
adc
fmuls
jb
and
cmp
cmp
or
shll
aaa
lea
pop
mov
fistpl
or
add
or
adc
mov
jne
cld
hlt
cmp
dec
fistpll
add
cmp
sbb
pop
test
sub
hlt
fsubrs
xor
cmp
jae
stc
or
fs
inc
sub
imul
inc
pop
push
stos
cmp
lret
into
fimull
mov
pop
pop
repnz
out
lret
or
iret
jg
push
movl
add
sbb
push
sahf
pusha
add
xor
ljmp
sbb
add
pop
add
orl
in
mov
pop
or
fisubl
mov
xor
xchg
test
dec
scas
mov
inc
xor
mov
mov
cmpsl
push
and
aaa
out
lods
push
add
enter
es
lret
add
mov
and
insl
adc
mov
or
inc
xchg
sbb
lea
add
in
aad
jmp
das
inc
and
in
xchg
dec
addr16
sbb
xor
mov
mov
testb
pop
aad
addl
lds
push
xor
push
and
push
xor
in
jns
or
shr
fdivr
adc
out
sbb
out
into
and
or
addr16
xor
dec
xor
dec
fdivs
aas
cltd
inc
cmc
cmp
xor
repnz
dec
adc
bound
outsl
mov
pop
cs
fadd
xor
lods
xchg
inc
push
shl
mov
insb
adc
pushf
mov
xor
and
cmp
sbb
mov
push
lock
clc
dec
out
mov
cmc
psrlw
adc
out
or
inc
ret
xchg
add
fwait
jo
sarl
iret
psrad
push
push
mov
sbb
lods
or
xchg
pop
ret
mov
popa
adc
inc
or
add
push
adc
or
fsub
mov
sbb
dec
cmp
in
loopne
scas
inc
scas
push
mov
loope
inc
sbb
dec
xor
insb
jb
ljmp
stc
add
jae
and
fstps
dec
xor
test
lea
insb
imul
pop
test
rcrl
aam
test
xor
mov
cmpsb
movsb
into
inc
xor
adc
rcll
rclb
cmpl
and
sbb
das
adc
or
iret
push
rol
sbb
add
xchg
fsubrl
sbb
and
movsl
adc
and
cmp
cmpsb
xlat
push
xor
and
out
pop
xor
mov
or
and
xor
cmp
push
enter
xchg
or
inc
iret
mov
and
scas
jo
rclb
inc
or
sub
pause
dec
dec
cmp
push
sub
fildl
shll
or
mov
xchg
sub
rcll
add
pop
add
shrb
fsts
es
mov
add
addr16
sub
pop
xchg
sahf
add
test
popa
aad
dec
add
lret
sub
daa
jge
fidivrs
scas
sub
sbb
add
pop
loop
shl
cmp
or
pop
lods
ds
insb
inc
sarl
scas
imull
repz
loopne
mov
xchg
je
push
fimuls
jno
pop
sbbl
stc
sbb
cmc
sub
push
sbb
outsl
aam
pop
and
mov
lods
pop
and
push
loopne
insl
scas
leave
insb
out
push
xchg
adc
pop
addl
sbb
xchg
ret
xor
mov
add
dec
inc
or
adc
insb
insb
pop
in
pop
add
and
mov
and
inc
add
or
addr16
lods
add
cltd
inc
addb
push
dec
push
or
stos
push
rolb
je
dec
dec
je
lds
mov
and
push
adc
ja
or
xor
add
pop
sbb
sub
push
mov
test
sbb
lcall
inc
test
add
aaa
fwait
cmp
cmpsl
aam
nop
push
or
push
push
fbstp
add
inc
ret
adc
push
xor
push
sahf
clc
mov
sbb
dec
repz
sbb
pop
adc
dec
xchg
jbe
mov
push
ljmp
cmp
sbb
adc
adc
repnz
out
add
jo
addl
inc
and
mov
cld
rorl
and
cmp
mov
jb
loope
add
mov
dec
push
and
insb
hlt
shll
fidivl
cli
xor
mov
add
ret
or
out
xchg
cmp
push
add
out
adc
cs
push
inc
inc
popa
sub
add
jbe
test
inc
cmp
mov
pop
pop
push
sub
push
nopl
movsb
out
out
popa
add
mov
or
cmc
adc
or
add
push
rorl
ljmp
rcrb
or
ds
cmp
cltd
rolb
insb
push
adc
aas
out
pop
push
mov
clc
lock
mov
cmp
or
or
sbb
dec
jecxz
out
adc
mov
pop
mov
mov
pushw
adc
lea
sub
or
loop
mov
mov
in
dec
adc
pop
add
fwait
dec
pop
pxor
ja
xchg
sbb
cmp
sti
mov
dec
scas
inc
or
adc
movsb
add
adc
int
mov
stos
mov
js
fldenv
movsb
loopne
pop
cmpl
xor
loope
sbb
lea
jmp
bound
das
in
jle,pt
inc
cmp
jb
jmp
xchg
cmp
test
and
add
movsl
mov
inc
add
inc
dec
pop
or
fists
dec
cwtl
dec
jl
jne
mov
mov
js
adc
or
inc
lahf
scas
adc
nop
cwtl
notb
inc
loopne
push
xchg
inc
sub
push
xor
add
sub
mov
mov
or
in
cmp
mov
and
loop
es
dec
or
cmp
cmp
adc
jo
pop
or
loopne
sbb
fldcw
repnz
dec
test
xchg
insb
jae
xchg
ss
es
add
push
sub
andl
adc
fildl
nop
push
jo
inc
fmuls
adc
sbb
push
andl
xor
push
pop
adc
pop
sub
decb
cmp
mov
dec
adc
push
inc
xchg
xchg
mov
push
cmpsb
and
add
sbb
dec
cmp
dec
mov
inc
dec
mov
call
fadds
dec
ret
nop
pop
int
mov
jge
xchg
or
xor
rorb
jno
sbb
or
mov
jne
add
lods
add
push
dec
aam
push
hlt
dec
pop
push
inc
repnz
push
add
inc
test
xchg
xchg
lock
les
icebp
or
sbb
pop
push
lahf
fnstcw
dec
mov
mov
sub
test
pop
lock
imul
pop
mov
test
int3
les
popf
dec
or
or
add
adc
loopne
cmpl
outsl
push
nop
pop
js
shrl
int
subb
aad
out
adc
add
rorb
cwtl
sub
xchg
ds
cmp
and
sbb
aam
pop
jbe
aad
ret
push
sub
push
pop
dec
pop
out
or
or
jp
addr16
mov
xchg
pop
shlb
call
sbb
cs
push
das
les
xor
sbb
inc
jmp
pop
jmp
inc
or
hlt
mov
inc
loope
rcrl
sahf
and
adc
dec
loope
dec
mov
or
xchg
dec
loopne
dec
xchg
jns
fildl
pop
ret
pop
sbb
jo
or
clc
xchg
fdivs
inc
jmp
aam
orl
addb
in
xor
mov
dec
insb
adc
call
fldcw
in
and
sub
mov
or
mov
popf
mov
push
xchg
cmc
mov
pop
dec
cmp
dec
loopne
cmc
sbbb
adc
aaa
loopne
adc
nop
jbe
and
test
pop
dec
add
out
pop
pop
adc
iret
or
fldlg2
loopne
cmp
and
in
lods
mov
shl
lock
inc
jmp
aas
mov
call
fs
xchg
in
loope
js
and
les
movsb
mul
xor
push
loopne
pop
test
imul
adc
push
movsb
xor
insl
rolb
test
mov
loop
xchg
addb
mov
loopne
mov
decb
orb
or
pop
or
dec
adc
int3
out
mov
movsl
fstpl
fcoms
mov
fsubp
adc
test
and
aaa
test
test
cmp
cmp
popa
sub
xchg
fcoml
pop
scas
das
mov
pusha
jb
xor
repnz
adc
enter
rcrl
shlb
push
sahf
repnz
and
mov
inc
rcll
push
outsl
aaa
add
adc
lock
popf
test
mov
cmp
jo
insl
add
xor
shl
lret
aam
pop
mov
cmc
mov
dec
add
cmp
adc
jne
shll
call
loopne
push
mov
imul
xchg
arpl
incl
and
rolb
adc
pop
fs
sub
dec
cmp
cld
inc
xchg
insb
insl
call
jge
fcomps
movsl
inc
dec
push
data16
out
pop
cmp
movzbl
push
or
in
movsl
push
test
jmp
call
cmpsl
pop
dec
mov
lods
fdivl
cmp
jo
adc
repnz
push
xor
out
push
mov
subl
js
in
mov
push
push
push
sub
cs
nop
push
ds
clc
mov
rcrb
iret
and
xor
stc
inc
loop
inc
int
cmpsb
add
sti
lods
clc
out
push
lods
mov
adc
xchg
pop
push
ljmp
dec
ret
xchg
mov
lea
rcrl
repz
mov
mov
dec
mov
test
sbbl
dec
or
mov
cs
add
sbb
icebp
adcb
subl
dec
jg
incl
cmp
cmp
jbe
cmp
jbe
mov
sbb
mov
jle
add
out
fiadds
cmp
insl
mov
adc
enter
mov
mov
add
or
imul
sub
je
les
ljmp
jnp
add
jne
push
xchg
adc
decl
dec
fbstp
mov
push
jl
mov
mov
push
and
jnp
jle
scas
jmp
scas
ss
dec
ffreep
cmp
jb
insl
lds
movsb
sbb
pop
shrl
push
cmp
mov
or
pop
xchg
xor
mov
in
inc
xchg
xchg
rcrl
jle
movsb
fcmovu
sbb
mov
sub
loop
jbe
test
roll
mov
pop
clc
pushl
push
push
lods
adc
fwait
rcll
test
adc
fcom
inc
outsl
pop
pop
add
push
cmp
imul
mov
adcb
ret
les
pop
mov
imul
mov
shll
add
or
mov
mov
adc
int3
rclb
adc
fnstcw
sub
sbb
and
and
push
scas
sub
cmpsl
mov
and
mov
sub
jl
adc
sbb
push
add
or
out
lahf
mov
lods
mov
or
in
sub
push
sub
or
shrb
sbb
addl
sbb
lret
dec
or
pusha
mov
mov
mov
adc
add
addr16
ss
sbb
push
push
imul
inc
mov
mov
adc
inc
js
push
mov
inc
pushf
and
jbe
ss
and
adc
push
inc
mov
cmp
jne
mov
add
ret
mov
jne
add
mov
push
addl
xor
or
and
xchg
sbb
sub
inc
or
and
inc
arpl
test
pop
dec
mov
clc
in
lcall
pop
and
loopne
out
loope
test
scas
adc
ljmp
out
cmp
mov
into
push
xor
sub
loope
adc
or
inc
mov
add
mov
aad
enter
push
in
andl
mov
mov
add
xchg
mov
mov
cmp
aam
mov
imul
mov
insb
sbb
push
push
xor
and
or
mov
mov
inc
mov
lock
aas
jg
cmovle
out
add
xor
addr16
jge
and
dec
clc
xor
inc
lea
pop
cmpb
mov
jns
push
adc
jno
addr16
aam
sbb
push
cmp
dec
jg
adc
add
cltd
add
sub
mov
pop
rolb
andl
js
xor
add
loopne
jl
adc
xchg
hlt
and
icebp
inc
sub
push
sbb
mov
jmp
lock
jnp
sub
outsl
lret
aas
dec
sahf
div
jo
xchg
dec
mov
jmp
ss
popa
inc
jecxz
mov
push
mov
or
and
sub
std
nop
add
rcrb
push
lcall
jo
jne
pop
cmp
loope
mov
dec
add
add
inc
stos
and
and
out
inc
add
push
add
xor
mov
and
sub
xlat
neg
pop
sbb
pop
inc
mov
xor
ret
xchg
or
sub
inc
test
mov
das
adc
cmp
jmp
sahf
std
mov
imul
pop
mov
mov
adc
push
in
cmp
out
dec
sub
adc
lcall
jo
and
lea
push
adc
lods
xchg
arpl
ret
push
in
mov
inc
xchg
sbbl
sub
cmp
add
es
sub
inc
jo
rorb
stc
xchg
inc
pop
sub
or
test
push
xchg
add
xchg
jmp
movsb
loop
xchg
je
fs
xlat
mov
in
clc
out
xchg
nop
lret
jle
add
mov
not
es
mov
rorb
out
mov
cmpl
adc
enter
push
hlt
push
in
xchg
cmp
std
xchg
push
adc
pop
clc
jne
loopne
and
jl
inc
mov
jge
adc
ljmp
and
mov
mov
inc
push
fisubs
shrb
dec
sub
shrb
jne
and
pop
push
mov
or
mov
ficoml
or
movd
push
xor
pusha
arpl
mov
push
pushf
int3
sbb
push
push
push
jns
sahf
or
push
dec
or
enter
sbb
pusha
sbb
sbb
push
scas
sarb
bound
mov
add
xlat
push
imul
and
jmp
mov
cmp
mov
push
call
or
pop
sbb
out
in
mov
movsb
add
mov
add
add
adc
jmp
dec
jecxz
popa
dec
cld
add
inc
xlat
mov
rorl
push
jmp
add
push
stos
rolb
popf
lods
or
add
les
pop
fldl
ret
lea
frstor
sub
test
mov
inc
xor
cmp
add
mov
lock
sbb
mov
push
mov
leave
jae
mov
push
adc
fnstcw
int
push
pop
inc
cmp
hlt
or
jns
mov
mov
addb
shl
add
jge
aam
fwait
push
push
fnstsw
sti
cmp
jbe
mov
call
imul
and
add
mov
cmp
dec
mov
vmread
outsl
imul
dec
fsub
js
notb
test
and
loope
push
out
popa
cmc
mov
pop
movl
xor
or
mov
adc
adc
and
pop
sbb
jl
cmp
fimull
cmpsl
jp
adc
mov
inc
xor
jne
testl
dec
not
cmp
push
or
std
push
ja
out
dec
pop
mov
fmuls
pushf
loop
flds
stos
sub
shr
jae
lock
pop
adc
aas
xchg
dec
in
daa
in
add
add
movsb
add
sbb
je
push
out
rclb
scas
inc
cmp
or
fadd
test
jle
mov
push
loop
hlt
or
cmp
and
pop
dec
fldt
mov
mov
outsl
or
jmp
std
or
pop
inc
cmp
repnz
xchg
jp
movl
add
sahf
pop
cmpsl
fistpll
mov
cld
sti
rep
movsw
push
xchg
or
mov
xor
push
or
mov
shr
mov
aas
rorb
inc
inc
cmp
jle
movb
xchg
push
fwait
adc
jp
insb
in
push
and
das
push
mov
adc
pop
movsbl
xor
jmp
in
push
push
or
stc
push
in
adc
and
push
cld
je
cmp
mov
lret
and
push
xchg
cwtl
xor
pop
mov
adc
cmp
inc
mov
imulb
cmpl
push
jnp
mov
sub
jae
sbb
cmp
inc
add
pop
test
cli
cmp
jb
mov
push
loope
int
or
push
push
dec
fldl
xlat
sbb
sbb
or
fimull
xor
inc
xor
ret
push
mov
icebp
push
mov
lock
and
mov
out
cmp
push
add
or
cmpsl
xor
mov
mov
push
or
shlb
sub
arpl
dec
xlat
mov
mov
cmp
lahf
es
shr
add
ficoml
repnz
add
add
dec
dec
dec
dec
push
pop
or
aaa
aaa
mov
or
jnp
or
jbe
jmp
or
aaa
aaa
push
jmp
por
jmp
adc
pop
aaa
aaa
aaa
aaa
adc
push
adc
dec
adc
dec
adc
aaa
aaa
push
jmp
pop
jmp
sbb
xor
aaa
aaa
aaa
sbb
sub
jmp
sbb
and
aaa
aaa
push
jmp
pop
jmp
and
or
push
aaa
aaa
and
add
adc
out
test
or
pop
sub
push
nop
shl
clc
int
xchg
mov
mov
clc
and
repz
push
cs
ss
dec
push
cmp
repz
data16
jbe
repz
repz
cmp
cltd
sahf
mov
iret
repz
mov
cmp
repz
fcmovu
in
repz
jmp
pushl
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
mov
sbb
and
aas
xor
sub
and
pop
sbb
sbb
adc
push
orl
dec
popf
pop
xor
cmp
xlat
and
add
idivl
mov
outsl
test
jmp
ret
mov
js
xor
out
jae
sub
inc
and
xchg
sbb
imul
xchg
dec
or
test
pop
hlt
test
lock
xor
aaa
mov
mov
push
inc
cmp
jbe
xchg
or
inc
lcall
xor
cld
and
and
jge
mov
xor
inc
mov
sbb
xor
addl
pop
mov
and
test
es
push
lock
add
movsl
lock
fcoml
popa
xchg
lcall
sbb
pop
or
adc
jmp
dec
shrl
jb
mov
push
push
jp
and
mov
dec
fmuls
test
xchg
fmuls
sub
fiadds
clc
sti
add
adc
lods
jbe
dec
or
and
lods
and
mov
dec
adc
or
test
sub
sbb
dec
xor
adc
jbe
call
nop
mov
ret
add
inc
inc
sub
test
je
mov
bound
mov
mov
add
mov
jae
mov
int
and
xchg
pop
add
dec
mov
push
aad
or
adc
stos
sub
dec
or
pop
stc
mov
lock
cmp
and
and
ficoms
xchg
je
dec
loop
or
lock
or
cmp
push
add
mov
jne
in
fldt
rcll
leave
push
loopne,pt
xlat
add
ds
orl
sub
push
inc
adc
pop
loopne
mov
xor
xlat
sbbl
push
xor
add
movsb
push
jne
inc
ss
push
sbb
rclb
shl
gs
mov
dec
je
lock
std
push
cmpl
pop
adc
pop
scas
add
mov
sbb
jne
imul
ljmp
les
roll
mov
loopne
sbb
xlat
ret
in
adcl
ss
aas
testl
inc
xchg
popa
xchg
adc
or
jno
enter
or
mov
or
push
mov
je
dec
xchg
pop
xor
push
xchg
inc
xor
movsl
xchg
shlb
clc
adc
out
popf
and
or
insl
and
sub
cmpb
sub
dec
inc
mov
inc
mov
dec
ljmp
daa
jnp
mov
mov
test
cmp
or
push
fists
popl
cmpsb
je
push
mov
add
pop
or
call
add
mov
sbb
shrb
decb
adc
shlb
aaa
or
mov
cmp
mov
fisubrs
test
jbe
in
lret
mov
mov
jecxz
pop
ja
aas
lods
mov
xchg
xchg
loopne
sub
sbb
testb
rol
test
fidivl
dec
scas
call
jmp
fs
jecxz
adc
rorb
bound
lcall
in
loopne
cwtl
daa
lods
imul
add
push
sub
repz
mov
and
add
dec
fs
andl
mov
fwait
inc
adc
or
push
test
pop
sbb
test
xor
pop
icebp
jne
outsb
push
subb
bound
push
dec
inc
add
jmp
xchg
or
dec
int3
mov
inc
les
pop
pop
push
repnz
testb
std
repnz
or
popf
xor
sbb
ljmp
pop
mov
je
push
cmc
jmp
loopne
cmp
mov
orb
sub
fcoml
sbb
jns
movsb
lock
loopne
inc
es
shl
roll
idivl
sahf
cmpsl
add
sbb
dec
jae
int3
or
inc
sbb
div
add
inc
cmpsb
loopne
sti
ret
negl
cmpsl
movsl
fs
lcall
inc
mov
or
lgdtl
inc
mov
fwait
xchg
outsb
jne
loopne
push
cltd
push
or
pop
es
add
pop
loopne
test
rcrl
test
jno
movsb
lret
in
into
sub
pop
adc
mov
ljmp
adc
add
mov
mov
or
pop
out
test
jmp
pop
arpl
dec
in
dec
es
cltd
popa
mov
mov
shlb
das
jmp
ret
lcall
mov
sarl
pop
jle
bound
jno
cmp
mov
nop
sbb
mov
jo
imul
sub
sub
repnz
push
arpl
push
pop
and
js
sbb
add
adc
lods
gs
dec
xor
stos
pop
sbb
pop
push
add
mov
push
fwait
add
and
xor
pusha
cmp
xor
les
mov
fcmovu
sbb
sub
mov
xorl
pushf
jno
push
push
popf
pop
es
mov
jmp
shrb
stos
jp
pop
leave
pop
and
sub
in
sub
sbb
jno
or
or
xchg
add
dec
mov
loop
add
stos
js
fs
pop
sbb
je
in
jmp
jno
fwait
lret
dec
xor
push
add
xor
add
xchg
jmp
iret
mov
gs
adc
sub
inc
aam
ds
xor
jl
ret
cmpsb
rorl
shlb
loopne
enter
mov
into
or
jne
mov
iret
mov
jmp
cmp
je
mov
inc
mov
fisubl
jnp
inc
sbb
jbe
adc
mov
cld
fimuls
add
push
xchg
lret
in
sbb
dec
je
mov
xchg
call
push
mov
sbb
insb
pop
inc
repnz
or
icebp
into
sti
enter
cmp
mov
inc
jmp
test
testl
push
adc
cs
push
int
or
imul
and
out
pop
pop
dec
xor
jl
sbb
jge
xorl
fsub
adc
and
xor
cli
cwtl
pop
add
clc
and
jge
xchg
sbbl
mov
js
enter
pop
test
and
and
mov
cmpb
jbe
and
inc
lods
add
ret
sbb
mov
sbb
or
cmp
xor
dec
jns
inc
shl
cmp
nop
dec
push
sbb
sub
js
dec
gs
or
or
sbb
and
push
xchg
xor
and
adc
sub
inc
cs
adc
test
insl
mov
pop
adc
loop
push
inc
les
mov
cmovnp
jnp
push
ja
in
cld
ficomps
xor
shl
inc
add
arpl
dec
pop
repnz
dec
je
js
push
ficoml
and
loopne
mov
mov
pop
xchg
cwtl
jg
pop
popa
cmp
in
lock
and
cmpl
lahf
lods
out
nop
frstor
jg
out
pop
outsb
xchg
outsb
xchg
mov
pop
mov
gs
enter
movsb
fwait
movsb
aam
lcall
ljmp
adc
dec
push
mov
es
cmpsb
xor
andb
into
mov
sbb
sar
cmpb
add
and
femms
mov
test
mov
lcall
aaa
sub
or
jbe
or
sbbl
incl
cmp
jl
iret
lods
adc
sub
lea
adc
hlt
cmp
je
dec
push
ja
sub
lea
or
sbbl
fildl
iret
pushf
fildll
inc
sti
lods
and
addl
cmp
andl
aas
xchg
hlt
push
pop
sub
int3
jmp
out
push
lret
xchg
mov
sahf
mov
mov
cmp
je
or
fcomp
jne
jge
and
mov
pop
jmp
rcrl
mov
add
mov
int3
es
mov
xor
sub
or
js
loopne
popa
mov
sbb
push
xchg
popf
jmp
fwait
and
push
imul
sub
mov
fs
dec
pop
popa
test
cmpsb
or
fcoms
aas
in
push
pop
cmp
or
sbbb
in
int3
cmp
jle
or
movsb
push
es
repnz
push
add
pop
call
sbb
mov
adc
ret
jno
sbb
nop
fadds
lods
jle
mov
rcr
pop
inc
cmp
pop
pop
sub
mov
xchg
xchg
add
cmpb
jp
push
cmp
cs
js
add
pop
jne
push
inc
pop
inc
enter
or
push
sub
sbb
push
mov
mov
add
add
xor
hlt
dec
adc
call
adc
movd
movsl
orl
inc
lock
mov
cmpl
arpl
inc
out
ds
sbb
add
ja
adc
enter
lock
cmp
or
xor
inc
daa
push
jecxz
jmp
push
push
movsl
and
add
add
fsubrp
cmp
jb
adc
lret
cmp
test
push
in
lods
jbe
fwait
push
push
jnp
test
adc
xor
mov
adc
rcrl
call
hlt
add
adcl
cmp
adc
adc
jne
push
inc
lock
dec
nop
hlt
push
clc
adc
add
push
or
sub
dec
push
cltd
add
inc
mov
push
jae
jle
je,pn
mov
dec
loopne
mov
mov
sub
arpl
sub
mov
push
push
imul
cmp
jo
sbb
lods
jge
inc
insb
loope
add
sarl
sbb
jmp
cmp
pusha
mov
loop
push
and
int
in
adc
inc
ret
push
icebp
xchg
rorl
lret
sbb
sub
push
inc
xchg
mov
xor
pusha
test
cmpsl
aad
xor
dec
add
or
rolb
outsl
adc
int
pop
adc
or
addr16
imul
fcmovnb
inc
ljmp
adcb
mov
mov
mov
outsl
test
push
push
dec
push
push
adc
les
scas
mov
lock
adc
repnz
and
inc
add
sbbl
dec
add
mov
in
sbb
and
lods
test
arpl
cmpsl
andl
hlt
dec
notl
inc
bnd
add
fsqrt
sarb
jns
sar
movsb
pop
es
movsb
mov
into
jns
arpl
jno
xchg
test
imul
movsb
mov
mov
lcall
add
loope
fdivrs
stos
jmp
int
add
sub
es
call
push
adc
mov
or
push
mov
adcl
pop
pop
and
xor
test
push
mov
xor
hlt
repz
xchg
dec
mov
aam
jae
and
mov
clc
cmp
add
or
jmp
dec
dec
popl
mov
sbb
lds
sarb
sbb
ss
aad
mov
ret
add
push
push
adc
mov
mov
jae
or
xor
fisttpl
shlb
pop
inc
push
push
sub
push
cmpsl
ret
add
xchg
add
iret
pop
ret
adc
rcrl
push
call
shlb
scas
mov
call
xchg
icebp
outsb
pusha
xor
subl
jle
sarl
test
je
dec
pop
sbb
jae
xchg
inc
jo
adc
xorb
add
rep
adc
test
pop
jns
movsl
iret
shr
mov
jp
or
pop
xor
rorb
push
mov
ret
push
test
and
xor
xchg
jo
pusha
or
mov
xor
and
mov
xchg
lea
mov
fsubl
inc
add
std
leave
movsl
push
and
inc
push
add
and
dec
sbb
jbe
jo
inc
and
or
pop
fsubrs
js
pop
mov
push
les
ds
cs
and
test
push
dec
and
loope
jp
fs
push
push
jb
cli
and
aas
push
fnsave
int3
or
inc
faddl
fstl
fprem
push
cmp
loopne
add
lods
pop
fsubr
pop
faddp
push
insb
test
or
mov
jo
inc
fldcw
hlt
mov
lret
inc
imul
add
pop
lock
adc
dec
xchg
stos
movsl
or
push
lods
enter
hlt
or
inc
sarb
test
add
adc
fisubl
imul
in
shlb
cmc
push
test
jge
cmp
jge
mov
lods
jbe
cmp
fistpl
or
fs
in
adc
add
xchg
pop
jmp
into
addb
cmp
sub
add
pop
lea
cmp
cmc
rorb
add
push
lret
into
lret
xchg
outsb
imul
xchg
mov
push
cld
fs
jmp
and
or
jns
push
cmpb
loop
jge
loop
fimuls
enter
sahf
out
data16
loopne
in
or
xorl
lcall
lcall
out
sahf
lret
mov
pushf
mov
push
or
push
jne
sbb
inc
mov
shll
cwtl
mov
arpl
lret
push
jmp
push
add
mov
xor
pop
push
andl
inc
or
hlt
adc
push
shlb
push
idivl
gs
xor
cmp
inc
fcompl
ds
repnz
mov
insb
outsb
mov
lret
jnp
push
push
sbb
dec
xchg
cwtl
add
mov
xchg
ficoms
or
jo
mov
rolb
and
and
mov
add
push
ja
sbb
pop
arpl
fld
leave
sti
and
ss
mov
pop
sub
add
movsl
sti
inc
sti
mov
test
clc
add
or
inc
jae
add
aaa
add
lods
adc
jl
and
movsb
lods
mov
pop
inc
repnz
add
push
repz
or
dec
pop
jb
sahf
mov
or
andb
lock
adc
imul
fmuls
mov
mull
mov
aas
sbb
push
mov
jmp
inc
inc
mov
pusha
xor
cmpsl
sbb
stos
mov
fiaddl
cs
or
mov
pop
push
repnz
xor
jne
je
in
and
outsl
inc
sub
add
inc
test
mov
insb
and
jp
pop
and
andb
imul
jmp
add
pushf
es
inc
xlat
push
movsl
popa
fsubl
lahf
test
outsb
add
mov
push
mov
test
inc
pop
push
es
aas
test
inc
mov
nop
cmp
scas
xchg
push
shll
jb
mov
xor
xchg
cmpsb
adc
or
rolb
insl
mov
xor
in
ss
inc
fldcw
shrb
xor
adc
das
add
popa
sub
scas
add
test
pop
pusha
fbld
pop
xor
push
jmp
mov
loop
inc
dec
loope
add
cmp
mov
mov
xchg
movsb
inc
shlb
mov
xor
sbb
outsl
mov
aam
add
sbb
cwtl
fcomps
push
aam
push
sti
pop
add
add
mov
xchg
in
xchg
mov
push
inc
mov
cli
adc
je
cmp
jb
std
jg
fidivrl
fisubs
add
pop
andl
dec
adc
inc
push
push
test
ret
ret
add
cmp
mov
shll
fisubs
jne
in
repnz
push
mov
push
aaa
push
dec
xchg
or
les
sbb
test
add
mov
xor
and
loope
shrb
sbb
and
call
pop
test
mov
dec
inc
sub
pop
inc
adc
or
ss
mov
mov
adc
lods
mov
inc
ret
insl
cmp
inc
dec
pop
adc
rorb
mov
or
in
out
dec
inc
cli
pop
test
popa
addl
inc
jb
push
xchg
inc
arpl
in
in
mov
xor
xchg
icebp
mov
jecxz
pop
movb
and
mov
xchg
cli
inc
pop
mov
add
dec
cmp
pop
jb
jle
call
xchg
popa
sub
push
cld
shr
and
sbb
in
lock
sete
adc
sub
pop
insl
adc
sbbb
mov
xor
xchg
lock
mov
mov
subb
clc
adc
lods
add
imul
mov
sbbb
sbb
test
adc
push
or
lea
sbb
pop
adcl
sbb
or
pop
sub
sbb
lea
outsl
jl
scas
sub
daa
cmc
and
xchg
inc
es
shlb
jmp
xor
mov
lods
lds
dec
mov
enter
subl
and
and
xchg
dec
aam
arpl
xchg
mov
faddl
xchg
xchg
movsb
pop
cmp
pop
stos
inc
call
pop
sub
or
mov
mov
cmp
xor
jno
leave
add
cmp
mov
in
sbb
mov
cmp
cmp
dec
add
aam
adc
push
aas
xchg
notb
add
sbb
push
stc
pop
or
push
cmp
or
rorb
lods
mov
push
add
loopne
daa
lock
negl
dec
add
and
insl
inc
sub
sub
mov
int3
mov
je
mov
mov
push
in
push
mov
in
out
push
push
xor
xchg
adc
rolb
cmpsl
or
call
inc
mov
xor
les
lock
rolb
xor
xor
es
inc
sbb
inc
ljmp
sbb
push
pop
orb
movsb
and
sbb
adc
out
popa
sub
ss
insl
mov
inc
insl
mov
lcall
sub
dec
movsb
adc
outsl
lods
and
loop
xor
or
in
mov
dec
or
enter
pop
push
movsl
push
or
jae
and
jmp
or
mov
push
je
push
push
jno
push
leave
add
enter
iret
les
bound
cmpsb
mov
lock
test
cmpsb
lock
movb
int3
les
dec
jge
cld
adc
dec
roll
and
roll
sahf
pop
lods
push
sub
mov
push
in
dec
jg
jb
and
test
jae
test
mov
cmp
sub
movsl
and
push
mov
daa
mov
add
movsl
adc
stc
adc
adc
or
and
repnz
mov
jle
cmpsl
xchg
mov
push
add
and
movb
adc
fdivl
insl
adc
jge
testb
dec
jb
fsubrs
and
test
push
outsb
or
push
movsl
in
test
push
outsb
std
lods
inc
popf
fcoml
scas
mov
add
pop
clc
push
or
adc
pop
inc
into
xor
je
and
pop
scas
mov
imul
xchg
call
or
or
out
pop
add
out
enter
or
add
add
add
pop
add
or
ret
imul
fadds
inc
and
mov
mov
enter
mov
mov
xchg
push
inc
mov
imul
imul
and
scas
in
xchg
test
mov
inc
aad
inc
outsl
adc
into
mov
add
add
sbb
lods
inc
insl
sub
inc
push
movsl
imul
out
pop
icebp
and
nop
dec
push
xchg
xchg
or
rclb
cmp
ret
das
sbb
rcr
and
pop
add
sbb
les
cmpl
test
insb
add
cli
je
push
inc
jb
lahf
and
daa
and
es
insl
cmp
movsb
or
jo
sub
add
push
clc
out
test
js
inc
dec
js
test
pop
inc
test
les
dec
inc
or
repz
imul
aam
or
dec
or
pop
ret
cwtl
mov
iret
add
xlat
pop
dec
lcall
mov
push
cli
lods
inc
add
adc
pop
mov
pop
push
out
push
add
sbb
in
push
inc
outsb
loope
ds
jmp
or
mov
enter
cmp
or
es
or
xlat
lret
jl
adc
inc
stos
int3
or
push
testl
mov
outsb
and
imul
jge
lcall
fcoms
sub
or
cli
inc
dec
sub
jne
std
dec
test
in
and
dec
pusha
mov
cmpsl
push
in
testl
in
cmpsb
int3
push
movsb
orb
and
pushf
mov
xchg
cmp
cmp
imul
and
sub
add
loop
nop
lods
call
dec
shlb
dec
push
push
inc
inc
push
je
shlb
mov
sub
inc
sbb
pop
push
mov
lahf
mov
sbb
mov
je
arpl
add
sahf
push
pop
xchg
or
clc
repnz
outsl
sub
pop
cwtl
loopne
outsl
sar
xor
or
add
cmp
je
and
and
in
add
dec
cs
push
hlt
dec
sarb
test
push
xchg
inc
push
xlat
jbe
pop
pop
ja
dec
lea
xor
std
add
mov
sahf
clc
dec
test
xor
lret
cmp
call
or
out
movzbl
or
inc
dec
adc
je
add
adc
test
or
cld
cmp
push
jge
mov
dec
inc
and
push
jl
mov
and
test
sub
push
orl
pop
sub
lock
push
pop
out
cmc
shlb
shrb
ds
mov
popf
rol
aas
or
dec
mov
xchg
or
and
mov
les
adc
push
test
sbb
xchg
insb
add
popf
jle
jnp
adc
cmp
pop
adc
or
daa
pop
enter
jecxz
pop
push
mov
or
push
or
dec
add
les
inc
or
mov
xor
sbb
test
fdivrs
pop
div
or
hlt
rorb
push
aaa
movsb
mov
enter
jne
jne
mov
out
push
je
or
je
pop
and
cmpsb
ljmp
fisttpl
jne
mov
fstpl
and
ss
jne
mov
andb
jmp
repnz
mov
ret
imul
adc
test
icebp
fistpl
mov
in
mov
mov
dec
lea
push
loop
scas
add
push
cmpsl
fcom
dec
mov
push
dec
sbb
sbb
rcl
and
rolb
pop
pop
pop
adc
inc
lock
insl
lods
push
mov
sbb
loopne
sub
mov
dec
fisttpl
std
pop
les
movsb
icebp
sarl
xor
int3
arpl
pop
adc
mov
iret
add
sti
mov
push
int3
jmp
rclb
xor
push
mov
push
or
movsb
mov
push
or
dec
push
xchg
outsl
push
aam
xchg
pushf
fcoml
lea
push
insb
loop
sub
lea
xor
fwait
jp
mov
jo
mov
pop
popf
mov
add
xchg
pop
stos
cld
test
loopne
dec
repnz
jge
das
jle
or
xchg
mulb
and
hlt
pusha
lahf
lcall
in
je
push
addr16
mov
xor
cmp
rolb
jae
loop
sub
pop
lods
shll
push
stos
add
shlb
jo
push
mov
mov
pop
mov
decl
out
push
or
movsl
mov
xchg
testb
inc
or
and
inc
movsb
jle
pushf
xchg
xchg
or
lret
adc
xchg
add
out
idivb
push
sahf
xchg
cmp
jg
and
xor
push
dec
xchg
sbb
lret
aam
jbe
or
ja
sbb
adc
pop
cmpsl
jge
lds
and
add
push
add
sbb
fsubrp
jne
jb
cmp
sbb
arpl
push
mov
loopne
popa
dec
shl
jmp
push
sbb
mov
sbb
add
test
mov
mov
and
mov
add
addl
call
int3
and
rolb
pop
cwtl
add
or
enter
sub
sub
jg
push
mov
nop
sbb
xchg
jmp
loopne
inc
popf
rcrl
loopne
cmc
and
fcoms
aaa
enter
xor
fxch
pushf
xor
loope
sub
xor
xchg
pop
xor
mov
sub
scas
jo
notb
lock
int3
aaa
test
inc
in
fisubrl
add
sbbl
and
scas
sarl
mov
push
push
adc
in
cs
ss
push
cs
mov
and
xchg
out
jns
push
pop
push
inc
fdivl
and
push
out
pop
cmp
test
cmp
sarb
or
dec
xor
sbb
push
adc
adc
jnp
subl
ds
sbb
popa
das
push
or
cwtl
or
and
outsl
mov
sub
xchg
cli
mov
xchg
mov
in
xchg
push
xlat
add
aad
dec
jbe
sbb
pushf
jae
dec
jecxz
and
sub
sti
inc
sahf
xchg
addr16
or
mov
add
adcb
mov
bound
lret
cwtl
add
jo
addr16
push
shrl
imul
and
pop
mov
outsb
or
negl
fldl
mov
inc
js
push
pushf
mov
xlat
xchg
dec
cmp
popf
ss
pusha
jl
jne
nop
das
xor
sub
out
decb
push
xchg
cmpl
lods
in
mov
dec
movsb
lahf
mov
mov
dec
je
pop
ss
sub
ret
es
xchg
leave
and
clc
lods
add
inc
add
insl
pusha
or
test
popa
gs
sbb
je
pusha
mov
dec
sete
jne
int3
sub
into
orb
inc
in
lock
xor
mov
mov
or
mov
push
add
les
cltd
dec
xor
adc
add
xchg
add
push
inc
ja
loope
wbinvd
cmp
inc
cmp
pop
jp
js
adc
sbb
jl
and
adc
dec
enter
sub
and
iret
inc
add
mov
push
bound
rorl
or
sbb
stc
push
or
push
push
cmp
jl
pusha
lea
in
adc
pop
cmpsl
mov
mov
es
adc
mov
sub
hlt
cmp
jge
fmuls
pop
inc
xor
popa
push
push
mov
lcall
xor
pop
ret
push
pop
movsl
jnp
or
leave
std
push
repnz
fs
jne
inc
inc
jmp
inc
fs
sub
pop
in
pop
aas
cmp
xchg
gs
gs
icebp
add
add
xor
dec
jmp
test
inc
iret
add
add
or
loope
pop
jle
sub
aam
lcall
stos
push
mov
cs
fadd
adc
imul
jmp
es
in
jl
shrb
and
in
rcrl
sbb
es
and
pop
ret
cmp
aam
pop
in
mov
mov
bound
xor
loope,pn
mov
pop
into
adc
jne
call
fcoms
fisubrl
enter
movsb
sbb
adcb
mov
push
inc
mov
mov
push
movsb
push
jne
push
lods
sub
adc
jmp
roll
push
call
jge
loopne
adc
test
sub
mov
insl
stc
shrb
les
je
sub
fmuls
and
in
out
and
adc
mov
or
sahf
and
sub
mov
mov
mov
clc
adc
or
je
xchg
lods
daa
add
test
outsl
push
js
push
jle
dec
cs
pop
cs
xorb
test
inc
inc
pop
xor
cmp
out
cmc
push
mov
pop
loopne
or
pop
push
sbb
and
or
test
adc
ret
mov
mov
test
outsl
xor
xor
and
sub
fstpt
push
sbb
call
cld
lock
clc
imul
mov
in
inc
test
in
cmp
mov
call
cmpsb
jno
push
aad
adc
xchg
fcoml
lock
xchg
xchg
jne
dec
loope
inc
bound
or
dec
and
mov
test
mov
imul
cmp
or
and
stos
sbbb
sbb
mov
dec
stos
sbb
adc
frstor
dec
ret
cmc
call
push
cmpsb
jo
mov
js
shll
pop
lahf
gs
xchg
push
or
mov
push
push
inc
inc
xor
sti
gs
test
xchg
jl
das
sub
rcrl
xor
test
push
add
rcll
roll
fld1
fldl
add
push
sbb
in
lea
dec
mov
lea
adc
test
insb
mov
cmpsb
adc
insb
mov
aad
out
pop
jmp
movzbl
cmp
js
nop
cld
call
arpl
ja
test
push
jl,pn
mov
adc
push
or
sbb
jge
test
xor
mov
popf
loope
out
fst
xor
shr
xor
cmp
jb
fs
jp
in
add
not
mov
xchg
andb
popf
mov
int3
push
std
inc
call
add
aaa
jmp
add
mov
repnz
pop
mov
les
and
or
inc
dec
and
and
jl
pusha
push
dec
dec
push
frstor
adc
lret
add
push
add
xlat
test
ret
pop
adc
inc
fldt
mov
xorb
or
jno
clc
mov
push
push
mov
cmpl
inc
loopne
push
mov
fmull
imul
out
jne
or
testl
xchg
jnp
rcrl
or
add
jb
inc
daa
aad
pop
and
sbb
scas
lods
cmp
out
adc
or
bound
inc
or
imul
mov
inc
outsb
sub
add
add
xchg
xor
xchg
inc
mov
mov
sub
inc
stos
mov
das
outsb
pushf
mov
or
testb
or
pop
xchg
cltd
add
push
jmp
jg
subl
mov
add
inc
push
sbb
insb
test
inc
clc
mov
arpl
mov
sarb
push
pop
repnz
sbb
add
push
scas
pop
arpl
pushf
ds
jb
push
mov
imul
nop
aaa
mov
pop
pop
push
sbb
mov
mov
ficoms
jp
jmp
inc
jns
ss
inc
cmp
mov
cmp
push
lods
inc
sub
and
adc
lea
add
add
loopne
pusha
adc
or
fcomps
push
pusha
xor
jecxz
sub
pop
scas
dec
aas
adc
fbld
pushf
push
or
and
xor
jmp
sbb
or
inc
or
and
ss
sub
and
in
bound
lods
xchg
lock
pop
push
push
sbbb
xchg
cmp
jp
cs
and
add
add
aad
sub
fcoms
es
icebp
add
or
out
mov
repnz
or
and
clc
xor
sub
jmp
or
add
cwtl
ja
lcall
fadd
adc
xor
or
lods
ljmp
push
sbb
or
xchg
push
adc
outsl
inc
inc
test
out
shlb
mov
jp
push
mov
dec
mulb
mov
xor
jl
add
push
xor
int
xchg
test
cmp
mov
inc
fs
jb
mov
cmp
cmp
sbbb
mov
adc
and
add
std
pop
xor
mov
popa
and
lock
bound
sbb
rorl
imul
popa
imul
push
sub
push
push
clc
aad
adc
pop
jne
mov
push
fs
mov
sbb
test
in
fs
mov
cmp
and
jns
add
test
leave
inc
or
or
dec
push
out
adc
push
dec
dec
xchg
rolb
or
pop
lock
jbe
mov
dec
sub
dec
je
fcoml
adc
pop
bound
or
int3
cwtl
enter
adc
jle
mov
xchg
add
push
jl
add
aaa
popf
jae
xchg
cmpsb
mov
add
adc
in
cmp
add
push
adc
movsb
or
and
push
sub
add
jl
mov
lret
and
push
mov
cmpsl
cmc
pop
ss
js
shlb
or
inc
mov
or
push
jb
iret
les
insb
xor
movsb
je
sarl
jmp
daa
sub
popa
aas
mov
daa
ret
sbb
xor
fildll
fs
or
lods
cmp
daa
pop
sub
sub
imul
push
mov
push
mov
cvtpi2ps
jbe
call
es
dec
sub
fldt
sub
push
cs
push
testb
adc
imul
jnp
ja
add
add
or
sub
mov
movsl
xor
les
inc
enter
mov
jge
add
dec
push
inc
and
rolb
movsl
pop
add
jne
xor
inc
test
jge
push
dec
pop
dec
add
mov
adc
std
vmread
insb
jbe
push
push
or
enter
or
xor
out
xor
and
popa
call
leave
lret
sarl
test
add
pushl
sub
sbb
inc
stos
push
pop
in
mov
cmpsl
in
add
lods
test
addl
and
adc
loopne
mov
push
inc
add
cmpsb
mov
sub
in
dec
and
lcall
mov
or
add
mov
loope
out
sbb
adc
sbb
push
cld
ficompl
inc
hlt
nop
jg
sub
outsl
adc
push
cwtl
mov
cmp
jne
into
push
scas
push
xor
xor
je
in
test
lret
jmp
test
test
in
ret
fisubl
shlb
add
jmp
xor
adc
pop
gs
and
sbb
mov
mov
lock
push
adc
push
adc
jns,pn
mov
stos
andl
push
dec
bound
mov
adc
inc
push
mov
lock
adc
and
push
data16
cltd
xchg
call
sub
add
sbb
sub
ret
jb
push
in
rorb
seta
mov
push
push
sub
add
add
sub
cli
aas
inc
mov
sub
js
mov
out
repnz
or
push
or
and
movsw
sbbl
in
jb
out
das
dec
jmp
inc
repnz
out
repnz
nop
rorb
inc
sub
lret
sbb
inc
mov
push
mov
xchg
mov
cli
xor
xor
jmp
out
ss
lret
dec
cld
lret
jne
push
loopne
cs
imul
pop
jl
dec
dec
sbb
or
sub
psubsb
or
and
js
mov
je
stos
and
out
addl
xor
adc
or
inc
xor
add
push
cmp
inc
sbbl
jns
movsl
mov
inc
subb
les
xchg
adc
or
in
xchg
popf
mov
pop
push
psrlw
pop
adc
lea
in
out
movsb
push
popa
sbb
adc
jge
jecxz
cli
jne
adc
dec
sub
jnp
fildl
dec
aas
movsb
cld
add
int
push
pop
mov
or
push
addr16
call
xchg
mov
inc
es
push
add
push
in
mov
xchg
sub
sub
inc
lea
push
sub
mov
or
push
add
jmp
push
push
adc
fmull
xchg
imul
cs
push
sbb
and
mov
and
aaa
xchg
or
mov
or
cld
cmp
faddl
pop
adc
add
sbb
lock
push
add
adcl
int3
popw
push
fidivs
decl
inc
adc
xor
and
add
sub
inc
clc
xchg
xchg
inc
inc
scas
fistl
dec
dec
xchg
mov
or
inc
add
or
add
jmp
les
outsb
push
sbb
in
outsl
nop
test
and
jecxz
mov
adc
mov
inc
mov
push
add
mov
add
pushf
push
ret
lock
in
lock
xor
insl
movb
inc
mov
cwtl
push
xchg
and
push
mov
push
andl
lret
add
cmp
into
push
loop
or
cli
rcl
add
adc
mov
cmpsl
mov
xor
and
cmp
or
add
push
push
aam
sub
xchg
dec
add
jbe
add
out
mov
cld
nop
adc
add
adc
and
pushf
lcall
push
int
push
movb
imul
adc
pop
imul
dec
leave
pop
inc
mov
mov
adcl
lock
cld
push
inc
xlat
xchg
xor
cmp
cli
addr16
cmpsb
push
hlt
mov
mov
and
in
lock
mov
das
mov
inc
inc
sahf
std
mov
or
sbb
shlb
or
push
mov
sub
push
and
fwait
mov
sbb
pop
int3
bound
xchg
sub
inc
push
adc
lret
sbb
jbe
orb
mov
repz
pop
push
outsl
push
ja
push
imul
mov
insb
aam
aas
push
mov
xchg
push
mov
imul
xor
jbe
inc
nop
test
int3
in
std
pop
xchg
lock
js
adc
or
std
ret
mov
mov
xor
cmpl
or
pusha
or
and
add
push
and
mov
push
stos
add
sbb
in
adc
inc
jo
xchg
jmp
mov
pop
cmp
xchg
je
jmp
inc
and
push
mov
daa
daa
pop
daa
movsl
jo
mov
dec
push
cs
and
pop
pop
leave
xchg
push
sbb
sbb
jbe
cmpsb
xchg
dec
mov
push
jne
mov
and
lock
push
aaa
push
xor
adc
or
nop
and
js
push
stc
pusha
or
dec
jns
xor
sbb
enter
xchg
xchg
mov
dec
cmp
jle
je
bound
xor
mov
sub
or
jmp
mov
push
pcmpeqw
add
pusha
push
fcomps
xor
push
out
inc
in
push
nop
cld
mov
aam
dec
inc
dec
lret
mov
popf
bnd
call
repz
icebp
inc
push
push
sbb
subb
or
sub
and
adc
xchg
jne
add
pop
cmpsb
pusha
pop
addr16
xchg
adc
pop
loop
push
inc
fmul
jp
pop
lds
push
dec
push
lea
push
pusha
mov
ss
mov
cmc
jecxz
xchg
hlt
and
pop
js
add
inc
or
xchg
mov
in
loopne
adc
in
sbb
or
nop
add
inc
das
in
xor
push
loop
pop
das
cmc
jge
in
sbb
int
lock
mov
mov
adc
movsb
push
subb
cmp
mov
cmc
ret
test
test
clc
dec
stc
ret
out
adc
mov
movsb
mov
sbb
add
add
int
and
enter
int3
pop
cmp
push
push
push
or
lret
jo
inc
loop
mov
and
loopne
cmp
jo
add
or
icebp
mov
sbb
add
cmp
add
insb
jg
xchg
clc
call
pushf
push
cmp
sahf
iret
dec
fcmovnbe
jo
popa
mov
mov
rclb
push
in
jmp
jo
dec
pusha
mov
rol
mov
ror
xor
shr
mov
sub
jnp
xor
shr
xor
add
add
add
mov
enter
push
fs
or
jae
or
and
not
and
xor
add
add
aam
add
add
add
repnz
scas
pop
lds
repnz
cli
fisubrs
lahf
add
xor
and
and
xchg
push
aam
sbb
popa
xor
push
movsl
sbb
repnz
push
imul
pop
pop
inc
sti
outsb
push
or
xlat
ret
rcl
add
andl
add
dec
call
sbb
call
and
push
sub
ljmp
int
ret
shr
add
push
xchg
or
cmpsb
mov
xor
in
imul
shl
in
push
cmp
bound
rorb
cwtl
add
pop
aaa
mov
lock
sbb
cltd
call
xor
loopne
loopne
in
movsb
jb
call
cmp
loopne
xor
imul
fdivs
pop
xor
lea
testb
cmp
xor
faddl
in
push
xor
and
and
stc
mov
test
loopne
or
xor
pusha
adc
les
add
inc
and
jbe
adc
roll
mov
inc
jo
call
push
jo
ficoms
dec
cmpl
addb
adc
push
loopne
cs
loop
mov
add
add
std
inc
fadds
pop
jbe
call
push
and
fisubl
add
dec
in
or
xlat
add
gs
fdivrs
inc
shll
and
and
in
rclb
popa
mov
out
mov
imul
adc
nop
pushf
aam
nop
cmpsb
rcl
cmp
and
call
in
push
inc
shr
rolb
subb
xor
sub
push
sub
jge
shlb
adc
dec
rorb
adc
dec
loopne
leave
das
ror
pop
lahf
jo
add
dec
ret
adc
cmp
sub
xor
inc
jb
push
dec
inc
and
add
push
pusha
adc
dec
cs
xor
xor
rorb
push
xchg
inc
xchg
push
es
lcall
add
push
dec
mov
push
imul
xadd
or
push
or
inc
enter
pop
xor
and
pop
fs
pusha
xchg
add
jo
sub
and
enter
or
rolb
dec
sahf
adc
xorl
data16
je
push
imul
xor
stc
stc
mov
adc
pusha
dec
mov
sub
sbb
shll
fcoml
sbb
cmpsb
lods
xor
jo
adc
in
add
pop
add
push
and
mov
and
and
ret
ljmp
ret
aas
pop
add
sub
mov
and
incl
cmp
jb
in
sbb
cmp
cltd
add
sub
es
fstpt
lea
pop
xor
int3
adc
fdivr
inc
mov
decl
sub
sar
fisubs
mov
add
add
shrb
fnsave
clc
adc
pcmpeqd
cmpsb
fisttpll
inc
jae
mov
sub
push
xor
loopne
lea
jmp
lea
xor
imulb
push
sub
pop
add
in
mov
mov
dec
jne
pop
dec
sarb
sub
add
mov
push
sarl
or
cmp
jbe
or
stos
push
xorb
sti
inc
aam
push
adc
lea
sub
fcomp
jle
jae
push
pop
fadds
rep
or
cmc
cmp
sbb
in
testb
mov
outsl
pop
loopne
cmpsb
mov
mov
xchg
or
xchg
ljmp
adc
mov
lar
stos
adc
into
xor
or
cmp
jb
cmp
ja
cmp
lds
call
aaa
addb
scas
add
xor
push
inc
dec
je
xchg
and
roll
push
sbb
mov
push
pop
jl
push
pop
push
inc
adc
jecxz
lea
add
pop
repnz
jb
call
jmp
in
xor
filds
or
push
jae
adc
ficompl
rclb
cmp
jne
push
sbb
std
xlat
and
push
dec
inc
lea
inc
jmp
jns
mov
pop
dec
xor
push
movsb
jne
jmp
or
fisubrs
fadds
clc
or
loop
sbbb
sub
sahf
mov
inc
cmp
xorl
and
cmp
rorb
outsb
pop
fiaddl
pop
mov
pop
sub
pop
cwtl
out
adc
out
lahf
repz
scas
es
cmp
fsubr
mov
lea
fs
aaa
xor
rcrl
lock
and
mov
adc
push
jae
sahf
loope
adcl
inc
xchg
sarl
sti
cmp
notb
xchg
dec
push
jg
cmp
mov
pusha
mov
int3
push
jb
or
pushf
outsb
or
ja
pushf
push
inc
ret
lods
fnstenv
add
add
push
xor
pop
test
cmpsb
inc
shlb
push
pushf
and
test
gs
inc
orl
fsubs
fildl
cltd
jb
jb
cmp
rol
shl
add
jmp
cwtl
aas
je
jae
les
inc
orl
sbb
xor
je
fs
jne
call
and
lock
test
sub
dec
or
add
test
pop
push
jae
mov
jmp
dec
shlb
aam
test
sub
mov
push
cmp
imul
push
inc
call
sbbb
int3
dec
sbb
fucomi
dec
lahf
lret
cmp
jg
or
jge
and
fwait
fwait
aaa
and
es
sub
sub
mov
jmp
jmp
cmp
jl
pop
jle
pusha
stos
sub
inc
imul
and
jl
jle
push
adc
ja
pop
or
je,pn
test
jne
je
mov
and
jb
je
movsl
orb
adc
add
mov
jbe
dec
pop
nop
ss
loop
enter
ret
inc
sti
daa
jb
push
push
push
mov
inc
and
cmp
pushl
fsubr
mov
mov
push
mov
mov
mov
scas
es
add
adc
in
adc
scas
stos
add
push
mov
jmp
jmp
adc
or
cmpsb
and
lea
fcoms
cmp
adc
sbb
jmp
fimull
sbb
shl
xchg
popa
ficompl
sub
xchg
mov
push
gs
test
xor
rorl
inc
and
lea
mov
movsl
push
and
cmp
in
or
jmp
cmpl
and
and
xor
mov
in
pop
sar
inc
lea
cwtl
xor
insb
inc
sub
scas
mov
dec
daa
mov
add
or
inc
arpl
imul
shll
addl
icebp
data16
sub
jge
repz
movlps
xchg
pop
inc
sbb
jl
add
dec
or
daa
dec
add
stc
and
and
inc
dec
je
push
ss
or
sti
dec
jne
movb
addr16
and
movsb
push
inc
inc
in
inc
inc
mov
lds
scas
jl
add
cmp
add
push
sbb
mov
mov
cmp
push
or
mov
cmp
lock
mov
adcl
hlt
inc
sub
add
xchg
xchg
sbbl
cld
ljmp
or
sbb
lret
sub
push
dec
idiv
pusha
jb
cs
or
aaa
or
jbe
orb
inc
fisttpl
mov
lea
sbb
xor
bound
rcrb
sub
xor
cwtl
out
push
rolb
pusha
mov
push
outsb
adc
cmp
mov
and
rolb
or
cmp
push
loope
lcall
jne
lahf
dec
leave
fxch
jne
addl
xchg
xchg
imul
sti
mov
pop
jbe
or
push
fidivl
push
leave
mov
cmp
or
bound
xchg
cmp
xchg
inc
and
popa
or
test
clc
insb
loope
out
mov
xor
push
xchg
call
movb
or
dec
dec
adc
lret
in
aaa
clc
pop
xor
dec
cli
inc
ret
clc
mov
xor
daa
insb
add
outsb
testl
cld
dec
rolb
or
js
in
and
add
inc
adc
push
push
fdivl
rclb
pop
add
cmp
rorb
xchg
call
pop
test
push
das
bound
imul
icebp
dec
adc
je
popf
or
mov
pop
adc
or
fimull
fcomps
jmp
je
sbb
je
jg
js
cwtl
cmp
inc
mov
inc
inc
testb
inc
xchg
mov
cmpl
inc
je
insl
and
aaa
sbb
lret
inc
mov
cwtl
add
add
daa
or
jp
mov
pusha
sbb
fsubr
cmp
ljmp
push
push
aaa
test
xchg
cmp
adc
in
xor
insl
jmp
insb
jne
jl
sub
mov
jp
sbb
fmuls
subb
push
fidivs
pop
inc
push
or
adc
in
ret
pop
inc
fdivrl
cmp
jne
les
aam
mov
jne
push
loopne
pop
cmp
cmpsb
loopne
cmpb
or
jno
inc
call
addr16
dec
mov
jne
movsb
push
fcomp
in
adc
or
lods
cmp
pop
mov
add
and
add
jle
rclb
movb
lods
test
push
divl
add
enter
sahf
arpl
lahf
cmc
das
lds
jmp
inc
push
sbb
lahf
popa
in
adc
pop
je
pop
mov
mov
push
push
shll
pop
aaa
mov
adc
dec
les
andb
mov
imul
pusha
mov
orl
push
mov
sub
cs
lret
xor
cmp
lcall
and
and
clc
add
mov
push
rolb
inc
cmp
ficoml
pop
jb
ds
in
xor
push
jo
rcll
imul
fadds
sub
add
in
jbe
outsb
jns
jbe
ja
and
movq
mov
xchg
in
xor
mov
xor
cmp
in
cmp
fildll
jae
int3
sbb
sbb
enter
push
mov
or
lcall
test
adc
data16
jmp
push
outsb
addl
or
inc
sub
push
and
dec
leave
inc
fidivl
inc
pop
inc
and
test
sbb
push
push
xchg
mov
cmpsl
xchg
jmp
push
stos
mov
mov
add
les
xor
jle
inc
cmpsl
in
mov
sahf
push
int3
sbb
push
or
popf
je
xor
xchg
rol
pop
xchg
inc
fidivrs
lcall
dec
adc
sbb
xlat
sahf
or
or
jbe
jns
or
popa
pop
ret
or
sbb
push
cmpl
pop
mov
inc
fcomp
push
call
and
adc
fimull
cli
xor
jne
sbb
dec
sbb
lods
dec
jl
xchg
bound
test
dec
add
lock
cmp
push
je
push
movzwl
clc
adc
adc
fistpl
mov
or
jne
jne
insl
or
lret
adcb
punpckldq
dec
hlt
lds
icebp
add
mov
or
rolb
pusha
sbb
and
cmp
jmp
push
push
and
jnp
sbbb
inc
insl
cmp
mov
dec
mov
in
or
jno
inc
ret
es
data16
xor
shlb
pop
inc
push
mov
pop
lods
jne
adc
sbb
leave
mov
loope
push
orb
inc
ret
insl
push
mov
and
cmp
dec
cmp
insl
or
sbb
sub
cmp
sub
clc
mulb
xchg
cmp
insl
push
mov
daa
clc
les
add
xor
jb
loop
shlb
ja
jbe
and
pop
sbb
fwait
sahf
xor
fxam
xchg
ret
or
and
add
lahf
xchg
pop
add
adcb
cmp
pop
and
dec
enter
and
inc
pop
xchg
aam
shlb
and
fimull
add
movups
shl
pop
push
lods
in
sbb
pop
xorl
sbb
cmp
cld
or
repnz
scas
adc
push
sahf
or
dec
scas
dec
cld
testb
notb
aaa
jbe
mov
and
outsb
or
ja
pop
sbb
int
adc
loop
movsb
dec
or
jg
add
and
add
mov
mov
push
xor
and
loope
div
dec
xor
push
adc
pop
imul
sbb
push
xor
cmp
mov
cmpsb
and
jp
outsb
adc
pop
cwtl
push
xrelease
pop
inc
xchg
mov
cmp
dec
cmp
inc
inc
add
dec
lea
adc
pop
mov
js
sbb
jle
test
fcmovb
int
inc
loopne
rorb
pop
dec
in
adc
pop
pop
inc
shlb
pop
pop
pop
jp
mov
sbb
insl
push
sbb
cmp
call
mov
test
xchg
sub
cltd
fwait
pop
int3
aam
pop
inc
shll
jno
mov
loopne
mov
dec
xchg
sub
or
add
xor
xchg
pop
shll
insb
xor
cmp
outsb
jnp
loop
inc
dec
cmp
xor
or
add
dec
add
and
dec
insb
fs
lds
mov
sbb
mov
sti
dec
dec
dec
adc
and
xchg
scas
test
push
xor
inc
push
push
xchg
lods
int3
jnp
js
or
pusha
ljmp
imul
and
or
mov
scas
or
dec
pop
lods
inc
lcall
in
test
add
and
sub
push
loopne
js
dec
popf
inc
cld
loop
lea
push
lahf
mov
test
loop
addl
mov
xchg
lock
sbb
and
mov
enter
jp
push
jo
ds
cmp
sub
cmp
push
mov
inc
mov
or
and
add
adc
mov
jo
mov
fndisi(8087
dec
fsubs
add
jle
shrb
loop
es
xchg
and
sbbb
and
add
xchg
pop
arpl
push
mov
ss
in
push
inc
fs
cmc
mov
ret
and
test
xabort
inc
sbb
popa
cmpl
mov
repz
ss
jbe
lods
jo
lcall
and
pusha
sbb
jns
pop
jmp
gs
xchg
test
dec
sub
test
cwtl
sbb
mov
sub
popa
ret
mov
mov
pushf
ds
mov
clc
mov
mov
sbbb
mov
mov
xchg
adc
jmp
in
mov
int
nop
lret
add
lock
or
and
gs
xor
dec
test
test
or
inc
movsb
lods
cmp
fldt
inc
jge
add
pop
inc
push
cmpb
std
adc
lcall
rorb
testb
and
jne
orl
sbb
mov
lods
inc
test
lahf
add
push
pushl
ficompl
les
push
inc
jmp
jge
pop
addl
lea
lea
sub
mov
mov
in
ret
lcall
cld
pop
add
pop
pop
add
mov
mov
cwtl
inc
or
dec
rol
pushl
cs
push
push
add
mov
inc
pop
inc
xor
push
push
push
orb
addl
dec
fcmovbe
jns
and
imulb
adc
sub
sbb
imull
lock
shlb
insl
xchg
clc
loop
and
je
cmp
jbe
lds
jle
add
jbe
dec
xorl
xchg
or
push
ret
jp
xor
insl
xor
and
and
push
idivl
mov
jnp
test
repz
adc
nop
out
sbbl
add
movsb
orl
ja
insb
push
push
xchg
je
add
dec
push
imul
movb
mov
or
dec
add
push
add
jns
rcrl
push
push
mov
sub
adc
cmp
sbb
add
add
stos
adc
dec
or
pop
inc
sbb
mov
int
sbb
xor
push
and
shlb
inc
mov
subb
adcl
mov
out
jbe
sub
ret
les
or
sbb
push
jae
sbb
fs
xor
jb
jmp
cmp
ret
or
or
aam
xor
out
inc
loop
and
aas
dec
movsl
test
mov
pop
inc
cmp
les
daa
mov
dec
pop
mov
adc
cli
push
in
js
mov
sbb
pop
or
or
test
sub
js
scas
mov
clc
fdivl
int3
adc
movsb
jne
bound
call
cmp
jne
adcl
adc
outsb
pop
popa
ret
fld
or
xchg
mov
les
or
jo
or
sarb
jne,pn
mov
js
adc
or
adc
mov
roll
sub
add
loopne
loope
andl
dec
rol
dec
incl
sti
ss
sub
cmp
sarb
lret
jbe
sub
add
mov
dec
das
sahf
push
inc
jno
or
push
lahf
pop
int3
xlat
push
mov
fdiv
jecxz
add
fdivrl
jbe
rorb
pop
fbstp
cmp
jb
xor
push
adcl
xor
dec
pusha
fs
lret
dec
cmp
add
dec
rolb
inc
mov
jbe
push
nop
jecxz
daa
push
xchg
jl
es
inc
sbb
dec
sbb
xchg
or
pop
pop
dec
ret
inc
cmp
pop
sbb
js
rclb
cli
clc
add
lock
mov
fisubs
lods
mov
pop
sub
ja
repnz
imul
clc
testb
cmp
xor
cmpsb
cmp
push
add
xor
or
sbb
push
mov
jecxz
xor
or
sub
pop
add
or
popf
rcrl
xor
mov
jp
cld
add
popa
pusha
js
sbb
jmp
shrd
inc
adc
xor
add
cmpsl
sbb
jne
inc
jmp
fcmove
popa
rcrb
pop
fidivrl
movsl
pushl
pop
mov
popa
rol
mov
pop
or
pop
mov
adc
push
ret
mov
ret
inc
insl
adc
inc
in
dec
inc
add
sub
push
out
jb
inc
mov
sub
dec
pop
cmp
xchg
lret
dec
adc
pushl
sti
daa
or
cs
inc
mov
mov
shll
mov
ret
ja
sbb
dec
stos
cmp
loop
out
jge
xchg
pop
scas
sub
lcall
or
mov
pop
inc
ss
cmp
dec
movsl
mov
fisttpl
out
testb
stos
stc
ja
and
jne
fmul
jb
clc
sub
sub
push
test
insl
jne
mov
add
lock
not
into
mov
inc
push
push
mov
fcmovb
push
loope
or
lcall
lds
mov
stos
cld
push
stos
addr16
orb
lea
push
add
mov
mov
sub
or
lea
out
xor
or
aam
ret
add
xor
stos
xor
dec
sub
in
or
xchg
adc
mov
sbb
or
in
push
pusha
push
and
dec
cmp
imul
inc
xlat
jmp
jo
and
fs
push
push
mov
shrb
xor
sub
jne
xchg
add
push
adc
lcall
movsb
inc
mov
test
addl
or
icebp
add
cmp
dec
scas
push
test
in
arpl
jns
add
xchg
jp
fdivrl
adc
out
xchg
mov
cmp
jne
jbe
sub
adc
and
add
ss
pop
cmp
fwait
stc
add
dec
out
add
cmp
jb
pop
xor
add
add
mov
push
aam
and
addr16
add
dec
or
ficompl
jl
arpl
das
hlt
mov
stc
xor
push
and
and
in
sbb
inc
xor
or
jo
xchg
push
insb
scas
push
pop
and
loope
inc
mov
push
ljmp
sub
add
push
push
pop
jbe
nop
mov
mov
dec
mov
sbb
adc
dec
aam
jne
xchg
push
jmp
sahf
mov
inc
das
loop
testl
sub
mov
sbb
push
xchg
imul
rol
push
outsl
cmpsb
mov
es
mov
js
orl
add
cmp
into
or
sbb
sbbb
ja
ja
notb
pop
xchg
test
sbb
push
add
push
cltd
mov
mov
push
and
push
xchg
or
add
aaa
lods
fwait
stc
icebp
adc
sbb
clc
frstor
js
cmp
jge
lods
mov
mov
push
nop
sbbb
sub
test
dec
push
add
outsl
adc
mov
xchg
addr16
ljmp
inc
adc
cmpsb
push
jmp
add
push
lea
sbb
xchg
ret
test
sbb
adc
add
add
inc
clc
dec
enter
aaa
add
in
jl
mov
movb
push
mov
jmp
lahf
imul
push
adc
cmpsb
les
jo
adc
push
pop
lahf
adc
cmp
inc
inc
or
pop
jp
and
cld
mov
les
int
inc
add
lcall
push
push
gs
cmp
push
jbe
mov
inc
aaa
push
inc
pop
pop
jmp
xchg
popf
sbb
or
lea
mov
lods
push
pop
pop
adc
pop
sbb
or
mov
aam
loope
in
lods
test
pusha
mov
out
test
into
addl
sub
stos
or
xlat
and
adc
mov
das
nop
jge
and
sbb
sbb
mov
add
mov
push
repz
rcrl
jmp
mov
imul
add
and
int3
insl
jecxz
ret
mov
xchg
aaa
pushf
mov
ret
mov
fstpt
adc
mov
mov
jno
add
mov
lock
push
test
mov
cld
mov
jmp
pop
xchg
jne
idivb
sbb
jmp
aaa
lret
cld
rcll
ffreep
leave
lods
mov
rcrb
jmp
test
bound
movsl
add
push
test
or
inc
sub
pop
out
mov
add
adc
cmpsl
iret
mov
xor
cld
adc
push
cs
lds
inc
push
mov
add
xor
test
pop
xchg
in
sbb
ret
jnp
pop
mov
mov
cmp
ret
fbstp
adc
leave
les
sub
das
cmpsb
adcl
shrb
fldpi
subl
inc
push
aas
cmp
mov
xor
inc
test
stc
cmp
push
test
push
ja
xchg
and
fiaddl
pop
push
fwait
loop
mov
xor
push
sbb
test
push
movsb
adc
lea
and
rcrb
std
mov
cmp
mov
aaa
int3
in
adc
add
push
add
mov
in
add
ret
cmp
dec
sub
sbb
mov
sub
add
inc
scas
stos
pop
pop
mov
and
fidivl
jmp
xchg
jmp
adc
mov
push
mov
xor
test
mov
and
push
dec
aas
mov
pop
sub
aaa
fdivrs
adc
out
imul
push
add
inc
mov
jp
push
or
mov
and
cmp
lret
mov
or
cmp
pushf
adcl
jg
inc
rorb
mov
iret
jle
and
dec
or
in
and
sbb
cmp
jo
out
push
adc
rolb
dec
add
push
xor
inc
mov
sbb
or
lcall
inc
sub
or
jnp
or
xchg
and
sbbl
and
cmp
je
mov
les
mov
clc
faddl
lock
push
inc
xchg
pop
lds
add
pop
cmp
fstpt
loop
das
js
jmp
and
lods
and
xchg
fmuls
adc
pop
add
shl
mov
mov
cmp
je
enter
dec
je
dec
icebp
or
dec
cmc
xchg
ret
scas
mov
inc
popa
orl
mov
ret
popa
out
mov
dec
sub
xchg
icebp
loop
mov
lea
jmp
cmpl
and
push
pusha
pop
repz
sbb
fs
dec
xor
cmp
xor
cmp
sub
mov
jmp
je
outsb
mov
sbb
adc
subl
adc
xchg
in
sub
adc
adc
pop
add
lock
lods
jmp
hlt
push
push
inc
gs
mov
jl
test
dec
bound
ljmp
in
add
ret
xlat
ljmp
test
divl
gs
sarl
push
or
mov
inc
lcall
push
sub
jg
lret
mov
mov
repz
cs
loopne
add
call
xor
inc
test
pushf
pop
mov
mov
sub
ss
pop
add
jno
enter
mov
adcl
mov
xor
loopne
ret
cmp
cmpsb
mov
cmp
add
es
sbb
mov
scas
mov
push
inc
hlt
mov
sbb
or
pop
pop
daa
mov
shlb
outsl
hlt
or
popa
add
enter
xchg
cwtl
bound
xor
enter
push
je
push
clc
sbbl
push
pop
insl
sbb
adc
in
jo
xchg
shl
test
test
add
out
jbe
enter
jnp
fstpt
add
inc
cmc
or
lods
ja
in
sbb
inc
lods
insl
cmp
cmp
in
adc
sbb
sbb
pop
mov
xchg
cld
or
insb
dec
push
sub
adc
pop
cmpsl
add
xchg
or
add
subb
jbe
das
cmp
mov
push
enter
xchg
push
out
ret
and
movsb
mov
in
andl
or
add
dec
je
pop
add
andl
popa
fs
sub
or
test
and
push
daa
rcl
jns
add
adc
lcall
cmp
lret
push
dec
punpckhbw
dec
cld
xor
mov
inc
adc
push
lret
or
inc
mov
or
sti
sbb
je
mov
sub
movsb
cmp
adc
push
add
cmp
dec
dec
dec
clc
jne
mov
push
pop
lcall
pusha
cmp
lea
cmp
loopne
sbb
filds
dec
jp
sbb
mov
xchg
or
hlt
hlt
jns
test
xor
inc
les
add
or
mov
cmp
cmp
pop
jae
lock
sbb
fxtract
jne
and
push
js
fistl
sub
loopne
fnstenv
mov
inc
mov
popa
arpl
test
repz
add
or
imul
xlat
cld
clc
pushl
adc
das
add
mov
shlb
int
adc
hlt
mov
sub
mov
xor
or
in
imul
movl
inc
pop
add
cmp
push
mov
mov
iret
loopne
hlt
ret
rorb
or
mov
add
cmp
pop
mov
mov
adc
cmpsb
dec
push
sbb
dec
pop
gs
adc
pop
call
jmpw
push
andb
cmc
aam
cmp
daa
ret
fstps
and
mov
mov
cmpsl
mov
js
jecxz
cmpl
or
lahf
div
jbe
push
cmp
adc
xchg
clc
mov
jbe
add
push
and
inc
lock
push
jbe
dec
or
cwtl
call
inc
adc
shlb
iret
push
in
mov
adcb
ret
or
lea
or
das
pop
and
movhps
or
repz
aas
or
or
lea
out
lea
jnp
adc
xor
adc
fmull
mov
add
push
mov
push
sub
push
daa
or
lahf
inc
les
mov
cmp
mov
adc
leave
lods
sbb
add
jo
cmp
jecxz
gs
jne
xchg
std
sub
jns
or
jle
or
mov
cmp
mov
and
mov
out
xor
pop
inc
push
cmpsb
test
add
ja
test
mov
movb
dec
ss
sub
jle
clc
mov
lret
je
sbb
loopne
pop
pop
push
nop
lret
jmp
pop
sub
fidivrl
inc
or
outsb
pop
es
repz
je
cmpsl
mov
and
xchg
add
xchg
adcl
adc
dec
sub
addr16
scas
sbb
sbb
sbb
outsb
ss
cmp
ret
jo
mov
pop
push
xor
mov
mov
jb
push
xor
nop
test
xor
sub
insb
in
dec
es
dec
cmp
out
ja
add
test
sarl
cmpb
sti
push
and
call
jge
add
jmp
xchg
dec
adc
push
mov
mov
stc
loope
xabort
jmp
mov
add
in
mov
sub
mov
pop
iret
xchg
xor
sbbb
push
or
and
aad
pop
add
stc
push
add
mov
xchg
mov
imul
fimull
mov
cmp
dec
adc
in
add
inc
gs
mov
dec
push
jbe
jb
addr16
cli
dec
mov
stos
pop
adc
cmpl
ds
rolb
push
out
clc
or
cs
sub
and
or
daa
mov
jb
push
jae
inc
in
add
rorl
mov
mov
mov
inc
out
outsb
icebp
lea
lods
ds
adc
push
jns
jmp
lret
insl
mov
mov
orb
xchg
sub
add
add
aaa
pop
adc
test
push
fdivl
cmp
notl
test
add
in
mov
mov
mov
addl
loope
mov
in
outsl
enter
hlt
xor
pop
cmpsb
dec
add
test
xor
test
loopne
shlb
jmp
mov
test
cmpl
cmp
daa
push
repnz
add
xchg
loopne
xchg
in
jo
push
mov
push
mov
pop
push
inc
shlb
test
imul
mov
lea
and
mov
in
inc
cmpsl
cmpsl
rorl
int3
gs
sub
sbb
adc
dec
add
out
in
jl
cmp
xor
add
shll
push
or
pop
dec
je
mov
inc
orl
pop
bound
sub
xchg
mov
call
btr
lods
add
clc
add
clc
jno
sub
rcll
or
and
icebp
or
dec
and
add
jne
sbb
repz
sub
or
sbbl
sti
adc
ss
adc
jns
or
push
adc
inc
sbb
sub
ret
les
popf
rol
test
lock
loop
mov
loopne
or
xchg
test
rolb
das
sbb
adc
cmp
push
xchg
mov
xchg
and
mull
dec
je
add
jle
stc
adc
fiadds
adc
fstps
in
rorl
sub
cmc
xchg
mov
int3
bound
outsb
sbb
push
insb
loope
cmp
adc
xor
test
jmp
inc
and
rol
aad
push
adc
fisubrs
mov
inc
test
xchg
jo
jecxz
outsl
clc
gs
mov
outsb
sbb
mov
roll
lret
push
dec
in
jo
mov
rorl
cmpsl
je
push
xlat
iret
cs
hlt
inc
jmp
cmp
add
add
andl
lods
adc
pop
insb
mov
imul
or
pop
dec
dec
pop
cld
imul
mov
js
lds
lea
orb
mov
or
cmp
shld
sub
mov
cmp
jns
adc
adc
jnp
push
rcrb
pop
imul
sub
and
sbb
xlat
jge
clc
stos
rcrl
or
jmp
shl
jmp
call
pop
and
sub
insb
mov
int
or
enter
pop
lock
sub
xor
pop
mov
push
push
orb
stc
lret
add
imul
addb
adc
adc
pop
leave
inc
incb
mov
xor
cmpb
int3
sbb
repz
fiadds
or
jb
test
sub
fs
ja
push
xchg
mov
enter
sbb
sub
sbb
pop
outsl
lea
inc
jmp
mov
adc
insb
pop
rorb
mov
imul
rclb
push
test
inc
addl
push
scas
das
fildl
push
pop
push
nop
or
add
add
xor
cmp
cmp
repz
lods
add
in
jno
sbb
xchg
mov
sbb
mov
roll
lea
push
mov
aas
inc
cmpl
adc
jecxz
fstl
cmp
je
lea
imul
fadds
lea
add
jmp
loope
lods
or
add
js
pop
mov
jbe
int
pop
jmp
shrl
sub
add
pop
xor
add
sbbb
adc
out
jne
inc
push
push
mov
add
mov
jecxz
or
cwtl
js
cmc
ret
push
jae
lea
push
inc
mov
sbb
and
adc
shll
add
fwait
or
inc
out
or
adc
mov
or
adc
fisubs
xor
arpl
or
je
sarl
push
cmp
jae
inc
jmp
push
jp
sub
sti
sub
in
jae
jbe
lea
sub
sub
out
popa
xchg
sbb
cmp
add
cmpsb
addb
ljmp
push
mov
add
pushf
mov
adc
fmull
mov
add
int3
push
aam
rclb
push
add
jne
add
leave
sub
in
dec
add
or
lods
cli
adc
insl
incl
add
lds
popf
xchg
and
rolb
sub
idivl
pop
pop
pop
sbb
adc
xchg
push
pop
jl,pn
cmp
push
outsb
or
add
into
fwait
arpl
jae
jb
jns
adcl
push
dec
dec
or
inc
push
xchg
add
in
push
jle
push
daa
sbb
inc
stos
cltd
xchg
je
mov
pusha
in
jae
pop
sub
xchg
adc
add
cmpb
push
push
mov
xor
sbb
pushf
adc
jecxz
jb
inc
js
dec
in
mov
push
push
sub
lsl
jp
hlt
pop
push
push
sub
push
inc
ffree
aaa
pop
or
add
ss
ljmp
xchg
and
or
stos
je
aaa
jmp
mov
fs
outsb
adc
shlb
lea
cli
ja
cmpb
mov
aas
ret
push
enter
or
lret
push
test
cmp
add
enter
int3
push
cs
add
sbb
jb
lods
roll
push
addr16
inc
imul
jne
push
imul
lock
push
mov
ds
and
shll
aaa
and
xor
enter
or
cmp
rcrb
leave
xchg
xchg
mov
dec
dec
jae
pop
or
cwtl
addl
mov
cmp
inc
outsb
loop
mov
cmp
nop
sbb
jmp
jne
orb
add
and
sub
mov
jl
aad
dec
cltd
pop
sub
mov
test
out
jg
cmp
mov
ja
jmp
mov
dec
and
cmp
in
or
shrb
fyl2x
mov
shl
faddl
int3
leave
or
xchg
mov
add
or
add
ss
adc
inc
flds
mov
jns
sbb
lret
adc
ficoms
adc
inc
add
mov
push
sub
add
or
or
pop
sbb
push
add
inc
mov
cld
xchg
data16
jo
jbe
aaa
hlt
cmp
pop
hlt
adc
or
loopne
push
pop
ret
add
add
mov
mov
lods
or
sbb
jb
sahf
clc
push
or
xor
sub
mov
and
add
mov
push
subb
sub
jle
sbb
jb
cmp
movb
ret
dec
pop
mov
jbe
cmpl
sub
push
mov
sub
popa
scas
push
imul
pop
ljmp
mov
mov
lsl
sub
imul
ds
test
aaa
cli
xor
xchg
lock
mov
xorb
add
mov
test
or
daa
addr16
dec
push
xchg
mov
fiaddl
jecxz
lret
pop
repz
dec
cmp
fstps
jle
shr
adc
dec
sbb
sbb
cmc
xor
aaa
sbbl
outsl
dec
cmc
inc
dec
mov
loope
or
fstps
test
pop
fldt
les
mov
push
ss
pusha
adc
lret
outsl
test
mov
sub
loopne
insb
test
mov
fistpl
movsb
sub
mov
lea
inc
rorb
and
popa
push
xlat
sub
mov
imul
and
sub
mov
cwtl
dec
jge
push
js
jge
add
cmp
mov
dec
or
push
push
lea
push
adcb
popa
insl
pop
xor
inc
loopne
mov
std
movsb
jle
jne
sub
inc
mov
test
stos
cmp
pop
push
cmp
push
pop
test
sbb
fsubrs
ljmp
pop
add
rcr
incl
and
shlb
cmp
insl
and
push
cmc
mov
popl
fisttpl
test
rolb
pop
jns
mov
push
add
fs
sbb
loop
jbe
pusha
or
popa
add
divl
add
cmp
stos
xor
push
or
imul
pop
jb
cmpsl
inc
int3
sahf
or
mov
call
shll
mov
ljmp
cmpsb
ret
pop
add
mov
inc
lea
adc
mov
cld
mov
mov
mov
mov
ja
and
cli
test
cmp
adc
fisubrl
lock
scas
add
adc
push
nop
sub
sbb
cltd
pop
loop
adc
mov
pop
cwtl
xor
movsl
mov
add
jmp
inc
inc
sub
mov
add
mov
xchg
mov
imul
xchg
xchg
or
repz
mov
dec
add
add
lret
mov
sub
movsl
sub
fnstcw
jge
in
pop
icebp
jae
stc
lock
cmp
pop
push
mov
xor
and
cmp
jl
pop
mov
inc
mov
ja
or
jle
shlb
push
xor
mov
hlt
mov
dec
cwtl
sbb
inc
adc
nop
popa
inc
xchg
mov
adc
out
pop
mov
sbb
jle
adc
aas
xchg
or
inc
js
xor
js
mov
das
rorl
or
cmpsb
push
push
jl
jecxz
cmp
outsb
cmp
adc
jmp
fadds
shr
dec
add
inc
in
aaa
fmuls
icebp
pushl
roll
and
mov
inc
fidivrs
add
pop
adc
mov
cmp
push
lea
stos
mov
lcall
pop
jmp
das
jle
inc
cmp
aam
ret
push
mov
scas
ss
or
repnz
or
and
mov
mov
adcl
add
rcll
imul
jmp
add
loope
sarb
and
lret
mov
push
pop
bound
mov
fld
fdivrl
pop
lods
outsl
or
je
jge
mov
jl
inc
or
add
mov
add
mov
xor
lahf
rcr
dec
outsb
popf
mov
aas
add
pop
or
adc
int3
push
or
inc
adc
in
push
dec
and
pop
jge
lock
add
adc
sahf
add
lock
nop
call
sub
lret
rol
mov
and
xchg
js
imul
test
fsubr
fs
mov
sbb
cmp
rolb
addr16
mov
pop
out
test
test
mov
dec
cmp
mov
xor
shrl
loope
insb
sub
xor
sub
icebp
cmp
adc
aam
sbb
mov
mov
and
jmp
add
push
adc
cld
test
inc
sbb
xlat
dec
jo
mov
sar
sbb
clc
sbb
push
xchg
push
jae
and
pop
mov
out
in
stos
add
xor
flds
or
fsubp
loopne
jb
mov
ficoms
pusha
jns
cmpsb
xchg
and
lods
sbb
mov
mov
sbb
mov
jae
xchg
adcb
test
or
inc
out
or
loope
adcl
imul
rolb
sub
push
mov
push
aam
sub
rorl
mov
hlt
xchg
pusha
stos
mov
and
push
rorl
or
xchg
shl
mov
js
jbe
mov
jmp
das
inc
testl
scas
imul
addb
mov
lock
fldenv
mov
stos
inc
ret
pop
jge
pop
adc
xor
dec
push
sbb
in
mov
ret
imul
fdivs
into
jno
jecxz
mov
jno
dec
pusha
cmp
jne
push
pop
and
sbb
aam
lock
push
sbb
dec
nop
cmpsl
jae
lcall
lds
cwtl
icebp
aam
testb
push
insb
or
loop
fimuls
clc
xchg
xor
lea
popa
xchg
pusha
out
mulb
push
sbb
mov
popa
mov
mull
aad
add
mov
mov
or
pop
jmp
inc
ret
rorb
push
test
enter
sarl
dec
in
dec
sbb
cwtl
push
pop
sub
cmpsb
lods
sub
mov
ror
push
jne
in
sub
lods
and
sbb
lret
pop
lock
adc
mov
mov
adcl
pop
or
enter
adc
aad
mov
ja
sub
into
sti
jae
sbb
push
aam
mov
or
and
add
mov
mov
mov
pushf
out
leave
inc
or
or
push
and
dec
adc
pop
les
lock
xor
hlt
mov
push
push
gs
rclb
xor
sbb
je
and
inc
mov
sbb
push
clc
mov
pop
or
es
or
cmp
bt
sbb
pop
sbb
push
mov
lahf
movsb
and
xchg
jne
push
mov
sar
sarl
or
rclb
dec
inc
jns
sub
push
sub
mov
in
aas
mov
pavgb
iret
pop
icebp
cmpl
outsb
or
sti
test
sti
pop
push
cmp
ret
and
pop
mov
or
loopne
pop
push
jnp
push
push
xchg
push
scas
adc
fisubrl
xchg
xor
push
dec
mov
adc
push
or
xchg
incb
cltd
push
and
lods
test
mov
dec
add
ret
inc
mov
sub
hlt
sbb
push
add
inc
imul
mov
sub
sbb
out
pop
aas
sbb
out
cmp
jle
js
xor
fmuls
testb
cmp
cmp
in
add
mov
mov
sbb
in
cs
jne
push
add
pop
adc
leave
push
xor
push
das
pop
jnp
orb
inc
xlat
aas
jo
jo
xor
and
or
xchg
jne
repz
add
clc
inc
push
in
push
arpl
test
int3
dec
insb
mov
or
mov
push
popa
inc
push
insb
xor
or
dec
clc
rorb
aam
inc
nop
cmp
rorb
idivl
push
sub
jnp
cmpsb
aas
or
inc
jo
jne
addl
fsubrl
test
stos
loopne
imul
stos
hlt
pop
pop
push
sbb
ret
dec
or
pop
mov
movsl
imul
fldt
sub
lret
sarb
dec
push
adc
xor
nop
mov
in
jo
sub
push
fbld
je
cmp
je
push
and
add
adc
testb
je
cmp
mov
or
add
pop
sbb
insl
push
cmp
push
ret
sub
add
aam
adc
out
out
ds
add
add
mov
sub
es
dec
popa
pop
mov
lret
loopne
add
repz
add
adc
and
rcrl
push
pop
mov
push
add
sbb
or
sub
loopne
mov
push
dec
and
icebp
jmp
faddp
fnsave
sbb
mov
xor
push
fdiv
xchg
add
jne
jg
add
cwtl
sbb
pusha
or
inc
jns
hlt
movsl
jnp
add
fisubrs
add
adc
test
lar
pop
push
aam
push
jg
and
hlt
push
push
mov
ret
data16
sbb
or
inc
mov
xor
pusha
mov
xchg
jno
add
jno
push
add
push
push
ret
dec
pop
scas
cmpsb
push
and
pop
sbbb
push
enter
into
hlt
pop
mov
sbb
add
outsl
scas
inc
push
data16
lock
rorl
scas
loope
inc
sbb
sbb
mov
repnz
roll
add
nop
sbb
pop
cmpb
leave
jmp
lea
push
or
push
add
sbb
adc
pusha
and
ds
bswap
lret
mov
data16
ret
sbbb
or
pop
loope
stc
jmp
and
dec
xor
std
sbb
or
dec
pop
pop
fsubl
pop
sub
and
or
inc
inc
xor
and
adc
mov
jecxz
push
js
jne
cmp
clc
ficoms
sub
stc
xor
dec
or
adc
sub
inc
or
adc
or
ds
mov
aaa
les
inc
cs
cwtl
jae
dec
pop
sub
push
add
lods
sbb
cwtl
fisttpl
xor
shlb
add
fdivrs
xorb
sbb
push
sbb
sbb
fcomi
add
loop
add
loopne
xchg
add
push
pusha
and
sub
jo
push
or
add
cmc
push
sbb
cmp
mov
inc
adc
mov
push
mov
out
mov
adc
push
filds
fwait
cmp
movb
loop
out
adcb
push
clc
subb
pop
cmp
mov
jo
pop
mov
inc
add
mov
jmp
dec
and
das
cs
clc
add
and
mov
add
sbb
scas
lods
ss
cltd
cmp
sub
dec
or
decl
mov
sub
js
inc
pusha
push
mov
push
addl
mov
mov
ret
cmp
lret
pusha
and
sbb
pusha
dec
adc
shrb
xor
into
test
adc
in
xor
loopne
or
add
clc
sbb
loopne
and
fdivrl
jno
gs
pop
dec
fidivl
cmp
shlb
repnz
push
push
sub
sub
nop
push
xor
lock
stos
xchg
dec
adc
mov
and
and
add
cmp
pop
sbb
sbb
scas
jl
mov
add
mov
cmp
add
je
pop
mov
inc
and
pushf
fsubs
hlt
push
jbe
dec
leave
push
nop
and
or
ss
xchg
cmp
addb
sub
je
mov
dec
jecxz
js
dec
cmp
insl
test
push
adc
push
test
ret
pop
cmp
enter
xor
rcrb
mov
push
push
jle
sbb
adc
dec
dec
pop
lahf
ljmp
cltd
sub
loopne
cltd
pop
ficompl
xchg
shr
or
jmp
cli
jne
jmp
push
ret
lds
add
cld
inc
clc
pop
or
mov
mov
nop
xchg
aaa
loope
cmp
fildl
mov
je
jo
aaa
cmpsb
je
adcl
fdivrp
pop
ds
cmc
or
fisttps
in
lods
shll
mov
clc
jae
sbb
adc
add
sub
scas
jge
push
and
or
sub
sub
aas
nop
inc
je
sar
addl
bound
add
sbb
mov
rorl
jno
xor
pushf
and
js
loop
sbbl
pop
pop
ret
or
sahf
sub
xchg
sbb
arpl
or
test
sbb
lock
mov
dec
sbb
dec
jnp
aam
movsb
in
test
js
or
push
out
jb
pushf
inc
adc
mov
inc
pop
in
push
mov
dec
test
scas
lods
scas
pop
jae
mov
dec
sbb
cmp
sbb
add
jbe
shrb
sti
cmp
aad
and
adc
and
mov
add
jbe
mov
mov
adc
add
adc
stos
sarb
inc
inc
inc
pop
cmp
in
pop
clc
popf
adc
adc
push
out
pusha
daa
shll
lcall
call
ret
ret
cmp
pop
mov
je
sub
test
mov
mov
je
pop
cld
cmp
push
pop
jle
bound
push
mov
jno
inc
cmp
jne,pt
or
sub
mov
mov
int
flds
push
xchg
jmp
dec
push
add
adc
fsts
pusha
mov
push
movsb
jmp
stos
sbb
lahf
daa
jne
je
jmp
or
push
dec
dec
xchg
and
push
dec
and
push
cmp
out
jns
xor
lcall
pop
and
add
cmp
cli
jg
jmp
and
or
ljmp
xor
testl
add
cmp
mov
mov
xor
mov
and
adc
mov
fdivl
push
mov
dec
inc
pop
pop
or
mov
sbb
add
push
gs
mov
xor
and
inc
cmp
daa
or
mov
mov
gs
mov
or
pop
inc
inc
mov
dec
sbb
add
xchg
add
dec
push
ljmp
jnp
mov
nop
jmp
sub
inc
cld
ss
jb
das
pop
stos
cmp
pushf
push
loopne
jge
nop
dec
inc
inc
adc
push
leave
or
mov
push
jmp
aam
add
pushf
add
cltd
adc
call
pop
fidivs
cmp
dec
sbb
cmp
pop
mov
push
sbb
sub
inc
pop
fdivl
adc
mov
rorl
jno
jmp
push
addb
sub
push
inc
xor
dec
adcb
sbb
adc
shll
jae
mov
xor
into
add
add
jle
xor
mov
jmp
or
cltd
jg
or
out
adc
inc
js,pt
and
pop
push
inc
cmpsl
mov
mov
jne
sub
or
push
push
call
push
lcall
stmxcsr
sbbb
popa
daa
mov
adc
mov
fisubl
add
and
clc
jg
xchg
in
jbe
movq
mov
sub
push
clc
jae
xor
out
mov
jle
xor
cli
rcl
lret
adc
les
dec
jge
push
inc
mov
repz
or
jg
data16
inc
jg
xchg
ret
adc
jnp
mov
push
subl
ret
mov
push
add
adc
fwait
sti
adc
aaa
out
push
add
mov
in
and
jo
addps
out
std
out
imul
add
sbb
sbb
inc
pop
jmp
int
por
test
push
jnp
ja
sub
xchg
in
mov
xchg
mov
mov
pop
notrack
and
xchg
adc
test
clc
aam
pop
lods
cld
xchg
or
push
push
js
adc
ret
jge
mov
ret
repnz
xchg
lea
jmp
dec
jp
popa
loope
or
movb
dec
popa
push
cmp
movsb
and
or
ret
movsl
flds
and
jbe
adc
test
or
cmp
rolb
mov
aam
je
in
js
adc
andb
mov
or
imul
jb
aad
mulb
cmp
xchg
pushf
inc
or
mov
cmp
mov
inc
inc
inc
push
mov
mov
call
test
jmp
mov
mov
cmp
sub
add
inc
stos
nop
mov
popf
dec
adc
cmp
andb
in
popf
mov
stc
adc
seto
jb
cmp
add
and
adc
sbb
push
mov
xchg
stos
mov
push
sbb
arpl
dec
pop
adc
popf
or
mov
hlt
cmp
test
out
daa
mov
inc
sub
mov
hlt
fcomi
arpl
sbb
bound
stos
jge
imul
insl
mov
clc
push
test
inc
push
ljmp
pop
cli
push
jmp
lcall
mov
mov
or
adc
jne
inc
cmp
sub
lods
out
pop
xor
sbb
loope
lret
dec
adc
loop
adc
fadds
pop
and
dec
jmp
in
stc
adc
cli
pop
rol
rolb
inc
push
add
lahf
add
in
pop
lock
sbb
fimuls
adc
cmp
xchg
inc
jae
adc
es
pop
or
les
addb
or
pop
xor
out
outsb
mov
mov
out
mov
imul
pop
lcall
pop
inc
hlt
cmp
jns
sbbl
mov
icebp
gs
xchg
add
enter
jnp
sarl
sub
add
ret
xchg
xchg
fdivp
out
adc
loope
shlb
dec
leave
sbb
cmp
data16
rolb
cmp
mov
mov
add
push
rol
push
fmull
inc
cmp
aam
lret
jne
sbb
jl
and
jg
dec
push
or
lock
push
adcb
mov
shl
add
mov
in
movl
pop
ds
outsl
adc
and
seta
adc
inc
or
xchg
lods
out
testb
enter
sbb
faddp
gs
mov
js
sub
out
hlt
daa
xlat
push
or
pop
leave
lret
and
adc
xor
jne
pop
cmp
sub
xor
fiaddl
inc
push
incl
dec
lea
stos
mov
test
mov
pop
push
jo
lods
dec
or
adc
cmp
addl
fidivrs
push
pop
mov
je
and
data16
jne
or
or
jmp
rorb
adc
jg
adc
loopne
les
addb
inc
dec
add
or
mov
push
cwtl
pop
or
ret
pop
and
sub
sbb
push
xor
dec
inc
adc
ja
lods
insl
popa
insb
testb
jl
test
mov
jbe
push
xor
pop
div
loop
or
pop
jae
or
imul
xchg
les
fcompl
sahf
mov
mov
popf
mov
adc
fidivs
sub
insb
ds
or
aam
push
push
shrb
dec
inc
shrb
or
sub
call
pop
pop
push
push
jecxz
xchg
leave
and
xor
xorb
out
xchg
popf
dec
push
adc
xchg
add
daa
fcoms
cmc
sub
or
in
mov
ret
adc
lock
push
insl
insb
jecxz
sub
mov
adc
arpl
jge
inc
rorl
in
sub
mov
mov
movsb
mov
loopne
and
clc
mov
faddl
push
lcall
push
mov
fisttpll
cmp
popf
mov
and
scas
mov
add
or
adc
nop
sbb
pop
push
cmp
inc
test
movsb
fcomi
push
mov
mov
test
icebp
lods
pop
and
les
jo
cwtl
sub
fdivl
fstp
out
add
cmp
jb
xor
loope
sti
sbb
ss
jp
int
or
xlat
test
jg
xchg
je
cmp
je
cmpsb
fmull
ret
mov
lahf
push
in
push
xchg
pop
pop
push
into
es
xchg
push
negl
lods
or
shrl
lds
sbb
or
mov
mov
add
jmp
inc
mov
sub
sbb
pop
cmp
pop
fnstcw
sbb
das
jo
or
pop
dec
mov
pop
movsl
flds
add
jno
push
add
and
fistpl
addb
movsl
and
je
hlt
mov
cmp
icebp
push
jl
sub
inc
xor
sbb
adc
mov
sub
ds
shl
cmpl
or
sbb
in
stos
je
inc
out
or
cwtl
scas
cli
pushf
push
bound
dec
call
push
jmp
inc
clc
pop
movsb
movsb
xchg
dec
sbb
mov
sbb
scas
popa
ds
push
clc
add
add
ret
jmp
inc
jbe
test
or
sub
and
adc
add
mov
add
add
ret
pop
jns
and
add
ficompl
or
inc
or
cmp
mov
xor
or
faddp
pop
es
or
loopne
cltd
lea
push
pop
lcall
dec
pop
imul
adc
add
divl
mov
push
ljmp
mov
sbb
je
inc
fmull
ret
push
jbe
js
call
or
mov
or
bound
xor
dec
push
and
mov
sarl
cmpb
lcall
push
jg
mov
dec
mov
aaa
mov
and
mov
icebp
mov
cmc
mov
mov
loope
les
mov
sbb
dec
sbb
cmpsl
pop
lock
lock
and
pop
jne
pop
sbb
mov
outsl
or
js
xlat
or
jns
pop
dec
xor
mov
bound
push
stos
push
sbb
adc
push
and
mov
js
pusha
cli
add
cwtl
hlt
movsb
and
pop
in
addl
sbb
int
cwtl
inc
xor
dec
mov
or
add
xor
xor
adc
mov
add
sub
bound
add
lea
repz
imul
ss
push
pop
add
inc
sahf
xchg
dec
add
daa
xor
out
add
adc
dec
add
jns
pop
test
jle
add
cmpb
add
mov
and
and
push
pop
jb
nop
out
push
or
or
add
push
dec
or
push
nop
addr16
or
pop
repnz
or
loop
add
cmpsb
or
or
or
and
repnz
cwtl
enter
push
push
ja
inc
enter
rsqrtps
push
fcomps
adc
pusha
adc
inc
adc
inc
or
ds
add
push
jns
cmp
ret
jb
mov
adc
inc
push
nop
aaa
adc
sbb
inc
push
push
push
push
pop
xor
and
pop
xor
sbb
pop
enter
sbb
sbb
repnz
sbb
add
push
inc
push
nop
sbb
sbb
sbb
add
je
pop
jne
and
sbb
bound
push
nop
out
sbb
addl
push
inc
push
pop
pop
inc
std
mov
ret
sub
cmp
mov
xchg
aam
sti
movl
xchg
inc
movsb
jg
clc
and
shll
cmp
pop
sub
mov
cmp
je
lcall
cmp
ret
adc
aad
jns
add
cmp
mov
add
js
or
push
enter
add
call
adc
dec
dec
cwtl
jmp
inc
push
sub
pusha
in
jmp
jmp
inc
lcall
cltd
add
pop
push
mov
cmp
xchg
sahf
out
out
jge
or
sbb
sbb
pop
pop
enter
lock
cmp
icebp
icebp
seta
enter
out
std
repz
jns
cmp
leave
std
hlt
pop
in
cltd
push
hlt
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
push
nop
addr16
pop
imull
idivl
std
clc
enter
clc
clc
cltd
adc
inc
stc
lock
cli
adcl
sbb
sub
cld
cld
je
xchg
pop
repnz
cld
push
cmovl
jnp
clc
mov
xor
sbb
iret
repz
adc
rcl
mov
jmp
inc
or
and
sbb
add
lahf
push
bound
movsb
or
cmpsb
adc
repnz
std
sti
in
in
mov
fdiv
or
xchg
stos
inc
mov
xchg
inc
xchg
sti
out
out
inc
push
fsub
cltd
outsb
call
dec
sti
sub
imul
jmp
jne
rolb
cltd
in
repnz
add
sbb
pop
sbb
add
movsb
out
out
cltd
push
mov
adc
lock
cli
jb
pusha
leave
push
cli
sbb
nop
cmpsb
repz
sarl
push
stc
les
scas
dec
push
cmp
div
negl
jno
sbb
fwait
xor
add
stc
out
clc
imul
clc
sti
sti
aaa
jb
push
sti
cltd
mov
push
nop
cld
orl
je
mov
and
sub
and
cld
sub
mov
les
rcr
mul
pop
pop
repnz
imull
bound
mul
sbb
xor
cltd
out
and
pop
inc
mull
imull
sti
imul
cmp
test
inc
repnz
mov
xor
xchg
negb
out
out
jno
and
and
adc
xchg
pop
add
sbb
repnz
pop
lret
and
and
cmc
pop
pop
lcall
negb
cmpb
and
pop
add
clc
clc
mov
jmp
jecxz
stc
popa
cmp
mov
and
pop
rcll
hlt
sbb
das
pushw
data16
test
idivl
jo
rolb
pusha
adc
or
loope
xor
pop
loope
push
inc
repnz
loop
scas
repz
mov
mov
test
dec
push
in
repz
xlat
jb
repz
mov
mov
repnz
jmp
in
mov
xchg
repnz
jo
sbb
dec
in
in
cmc
xlat
mov
adc
repnz
addl
loope
sbb
mov
inc
repnz
divb
icebp
pop
repnz
push
icebp
movsl
test
icebp
cmc
cmc
and
les
pop
pop
jb
lock
lock
pop
add
sbb
mov
jne
das
mov
xorl
xlat
and
mov
and
pop
and
test
xor
ret
push
in
sub
ret
cmp
mov
ret
cmovno
enter
push
add
add
fmuls
add
push
jnp
xor
or
mov
dec
add
xchg
mov
sahf
and
jmp
lcall
or
hlt
and
push
sbb
pusha
sbb
int
flds
lds
rcrl
repnz
ds
repz
xor
dec
mov
insb
cmpsb
push
mov
rcrl
aaa
pop
int
repz
inc
test
mov
fwait
sbb
add
es
adc
jbe
loop
pop
push
add
lea
add
jbe
dec
and
add
fimull
jle
rolb
ss
inc
add
add
inc
inc
cld
jb
test
mov
inc
mov
insb
int
in
push
loope
ds
adc
std
xor
push
add
loopne
adc
mov
ja
gs
push
shlb
clc
mov
aas
xor
ror
mov
cs
mov
push
adcl
fwait
cld
cmp
je
push
inc
add
mov
pusha
fsubrs
lock
or
adc
sub
int
or
rcrl
and
fildll
mov
insb
fmuls
and
add
jl
add
and
adc
insl
xchg
repnz
add
sub
in
mov
jg
incl
dec
cmp
dec
sbb
ljmp
imul
jb
cmpl
push
or
imul
fldlg2
or
sbb
rorl
mov
sub
add
or
lock
nop
je
rep
mov
dec
fidivs
sahf
xor
rcrb
inc
push
inc
int3
xor
jno
sbb
arpl
jge
orl
aad
add
sub
jmp
movl
add
xchg
adc
sub
and
cwtl
fdivrp
loop
pop
cld
add
adc
rorb
insl
mov
xchg
jo
cltd
adc
cmp
dec
or
out
jb
pop
ja
add
xchg
sub
in
jle
inc
inc
inc
inc
inc
pop
dec
loopne
push
jmp
mov
mov
jb
mov
icebp
out
pop
inc
push
inc
and
gs
js
mov
cmpsb
add
clc
push
arpl
add
jo
or
dec
shll
or
rolb
pop
sub
pop
roll
sub
pusha
rcrl
inc
pop
cmp
enter
fwait
sbb
add
sbb
xor
inc
lret
stos
js
sbbl
mov
xor
mov
sub
and
nop
lock
xchg
insb
add
jp
test
add
push
outsb
testb
jg
lods
push
mov
and
adc
mov
xchg
push
pop
mov
inc
add
xchg
dec
mov
add
push
inc
cmc
lcall
jmp
cmp
jne
orl
add
out
sub
sub
and
xchg
jo
push
into
aas
adc
cmp
inc
adc
mov
je
scas
xor
add
xor
pop
ljmp
stc
and
or
adc
jne
dec
add
add
lds
or
call
nop
add
or
div
jg
fdivl
jmp
pusha
fidivs
lret
loopne
jmp
cs
and
adc
sbb
fsubs
xlat
push
movsb
mov
and
adc
inc
mov
dec
dec
dec
fisubs
pop
or
or
xor
out
push
pop
cld
imul
movsb
push
cmc
cmp
or
test
cmp
cmp
ss
push
push
inc
test
lret
fimull
inc
mulb
cli
pop
clc
inc
movhps
ret
pop
addb
setnp
les
mov
adcl
inc
xor
and
push
push
hlt
mov
add
fsubs
lods
jmp
cltd
push
dec
fwait
mov
cmp
push
popa
push
sub
xchg
cld
fisttpl
inc
js
sbb
jne
jnp
sbb
and
sbb
cmp
xor
out
mov
cld
jne
mov
push
cmp
jne
xor
repz
jne
call
ljmp
add
push
ficomps
andb
aas
pop
jmp
adc
out
jns
jmp
std
std
jmp
cld
cmp
sub
test
mov
popa
pop
and
adc
aam
inc
xchg
push
jb
cmpsb
fdivs
repnz
mov
lds
lock
fbstp
repz
mov
adc
xlat
add
leave
push
mov
adc
or
lea
xor
test
inc
enter
arpl
cmp
adc
push
or
add
and
cmp
sub
or
and
xor
add
lods
ja
dec
cmp
imul
cwtl
jp
add
sbb
fimull
aad
add
insb
add
repz
pusha
or
sub
sarl
or
in
popa
add
rclb
fdecstp
mov
aad
xor
push
jmp
mov
rcll
add
out
mov
inc
inc
cmp
and
mov
sbb
outsb
out
test
sbb
sbb
bound
lret
pop
pop
or
ja
repnz
xor
inc
add
jne
unpcklps
ss
sbb
dec
cmp
xor
stos
and
testb
mov
hlt
jae
add
add
lret
clc
enter
js
call
mov
mov
repnz
stc
imul
stos
add
testb
add
xchg
push
adc
sahf
mov
enter
push
or
or
mov
test
push
clc
shr
jmp
adc
and
cwtl
dec
xor
sub
add
jno
add
iret
sbb
xchg
daa
pop
or
data16
lahf
push
popl
adc
roll
aaa
loop
add
push
or
fsubl
icebp
pusha
andb
fsts
insl
pop
and
cmovs
scas
inc
add
mov
inc
test
mov
mov
rep
jmp
jo
or
jae
shll
lcall
das
mov
lea
test
cmp
fs
inc
stos
out
mov
mov
mov
or
scas
adc
cmp
push
dec
add
lret
movl
imul
mov
iret
repz
clc
out
lock
call
sahf
out
cmp
mov
mov
call
jns
in
lock
sarb
out
clc
clc
cld
mov
inc
int
lea
lock
fld1
sahf
xlat
inc
sub
sub
cmp
mov
push
jno
nop
nop
inc
pop
push
ret
pusha
pop
sti
and
adc
push
lea
jl
cld
or
sub
leave
and
std
cld
out
mov
or
popf
insl
neg
adc
pusha
xchg
daa
stc
outsl
mov
mov
mov
pop
nop
les
call
push
adc
fiaddl
jl
mov
test
mov
inc
dec
in
inc
push
out
push
add
nop
dec
dec
addr16
add
mov
push
je
cmp
jnp
fs
push
je
test
mov
repz
cmp
repz
sbb
adc
cmp
repz
or
fwait
and
iret
add
inc
rorb
push
jl
enter
xor
push
mov
add
jo
ja
cmpsl
es
sbb
bnd
push
and
push
mov
mov
incl
inc
decl
jne,pn
pop
pop
jne
mov
inc
jle
cld
cmp
pushl
push
xor
jbe
push
cltd
pop
idiv
add
mov
and
pusha
or
dec
pusha
xor
out
aaa
dec
dec
enter
adc
testb
push
jmp
cmp
jae
dec
mov
and
lods
mov
jae
pop
jbe
mov
dec
jecxz
jl
push
jmp
jo
hlt
add
adc
orb
clc
pop
je
push
stos
or
jg
mov
sbb
add
mov
dec
gs
je
or
dec
inc
sub
dec
je
push
push
cli
out
pop
push
mov
jne
xchg
jmp
pop
insb
adc
jecxz
jbe
xor
or
int
pop
decb
push
xor
jl
lret
push
cmp
nop
out
das
sbb
push
pusha
sub
add
add
filds
mov
xor
pop
dec
pop
add
sub
addb
imul
jp
push
adc
ficoml
mov
xor
fs
test
dec
sbb
fs
jmp
cmp
cmpb
mov
cmp
sub
insl
or
aas
jge
cld
andb
push
cltd
pop
idiv
insb
xchg
decb
add
ret
inc
out
cmp
and
jmp
out
sbb
lods
xor
mov
xor
push
pop
aas
jns
or
das
call
push
fs
jmp
jl
mov
sbb
call
fsubl
je
insb
sub
sbb
lock
sbb
sbb
mov
aam
aad
pop
add
sbb
pop
incb
inc
jns
andb
adc
cmp
clc
loopne
mov
sti
cmp
and
fstps
push
mov
cmp
adc
hlt
xor
pop
test
lret
ror
sub
push
cmp
test
push
jmp
jge
cltd
jecxz
jl
je
sbb
pop
adc
jl
fs
sti
gs
jle
es
adc
outsl
mov
inc
enter
in
lahf
adc
lock
je
dec
inc
mov
mov
or
inc
cmpsl
adc
inc
outsb
push
loop
lds
adc
push
lahf
pop
sub
or
shrb
xor
ret
jno
push
or
je
add
addl
imul
push
cmp
pop
stc
pop
push
adc
loopne
or
jmp
pop
cmp
push
pushf
pop
adc
jmp
and
sub
mov
loop
sub
dec
lock
push
je
mov
push
movsb
xchg
aaa
outsb
and
cmpl
mov
or
imul
hlt
mov
xchg
push
adc
xchg
idivl
inc
adc
or
es
jns
out
call
lea
out
fcmovb
sbb
pushl
jae
dec
ljmp
xchg
dec
add
rorb
jg
xor
adc
push
pop
insb
fmuls
outsl
or
addb
mov
dec
jge
adc
test
adc
mov
mov
add
mov
push
inc
jg
jbe
lods
dec
mov
cltd
jbe
aam
mov
les
add
lock
das
pop
fisubl
mov
inc
inc
cmp
je
cmpsb
bound
ds
sub
xchg
orb
adc
add
lods
popa
imul
and
or
push
or
mov
mov
pushf
cld
inc
pop
cmp
mov
push
mov
incl
decl
add
pusha
push
mov
push
inc
sbb
cwtl
or
daa
mov
insb
mov
in
pop
or
insl
sub
xchg
je
mov
sbb
or
xchg
dec
xor
push
fwait
orb
daa
movl
or
fildll
cld
mov
addr16
test
aas
lock
xchg
adc
test
incb
pop
cmp
je
mov
out
mov
dec
mov
dec
imul
int3
sub
or
add
push
subb
inc
int
dec
add
fs
pop
addb
cs
ja
cli
frstor
sub
cmovs
or
hlt
in
lret
push
dec
sahf
sbb
mov
add
fildl
dec
dec
mov
jl
and
lea
popa
bound
mov
mov
popa
dec
or
pusha
pslld
sub
jmp
das
dec
jmp
ljmp
xrelease
test
push
mov
mov
adc
daa
mov
or
sbb
lea
es
ret
sbb
dec
xchg
in
cmp
sub
gs
xor
test
ret
in
adc
and
pop
adc
add
inc
mov
mov
jge
outsb
jns
and
test
push
in
orb
js
call
call
push
sbb
inc
push
sahf
out
ret
sbb
inc
outsb
adc
sti
push
jmp
cmp
inc
rclb
clc
or
cmpb
jne
inc
inc
call
enter
outsl
shl
mov
inc
xchg
ja
or
push
imul
out
sub
cltd
pop
stos
call
jmp
fdivl
and
and
sub
ja
inc
jmp
aas
add
in
mov
sub
test
and
repnz
dec
decb
enter
add
inc
jb
in
add
and
rorb
popf
pop
pusha
leave
pop
fldz
dec
dec
jnp
pop
xor
adc
adc
es
jle
mov
xchg
pop
mov
movsl
jge
and
test
mov
fsubl
ret
add
add
lock
xchg
addl
cmpb
mov
push
imul
mov
es
jae
ds
cld
jmp
pop
arpl
xchg
push
jno
sub
fisubs
cmc
loop
loope
cmpl
xchg
test
std
add
imul
inc
add
lock
pushf
cmp
pop
sbb
cld
adc
sub
shlb
nop
ss
mov
sub
in
pop
mov
addb
into
jbe
rorb
jb
outsb
pop
repnz
jbe
add
adc
push
lret
pop
shlb
pop
mov
push
push
pop
xchg
das
jecxz
fcoms
xor
sub
bound
fs
xor
das
sbb
in
push
dec
shll
sbb
and
enter
les
insb
stos
push
icebp
into
gs
clc
xchg
fcomps
sahf
enter
or
jne
add
fistpll
sbbb
int3
mov
dec
jae
pushf
enter
mov
fmuls
arpl
adc
faddl
pop
sahf
jl
cmpl
xchg
rol
loopne
insb
jmp
pop
lret
stc
sbb
adc
xchg
push
fnsave
adcb
xchg
cs
push
add
xchg
pop
das
nopl
cmp
xchg
cld
arpl
imul
cmp
cltd
push
ja
ljmp
inc
inc
cmp
jbe
push
into
loope
ljmp
push
or
add
jge
cmp
js
or
sbb
mov
or
loop
nop
inc
mov
sbb
ja
add
jl
push
jmp
js
mov
adc
cld
or
mov
sub
pop
push
cmp
or
fsubrs
sbb
in
inc
inc
xchg
fistps
loope
dec
cmpsb
jg
jae
add
adc
sub
mov
icebp
adc
mov
push
icebp
cmp
imul
jmp
cltd
mov
xor
shll
dec
xchg
test
add
lock
in
loopne
test
push
push
mov
jnp
cmp
or
loope
push
call
pop
mov
outsl
dec
mov
incl
lea
inc
fldcw
fs
sub
dec
adc
ljmp
add
lcall
cli
leave
std
push
ret
and
xchg
push
xor
movsb
icebp
gs
mov
xor
and
inc
push
mov
jo
mov
add
pop
fldenv
jmp
mov
incb
mov
dec
jo
push
sub
jle
sbb
fmuls
inc
jge
cli
or
add
jmp
cmp
push
clc
or
rclb
shlb
fcmovb
cld
jb
mov
adc
dec
mov
mov
dec
dec
mov
inc
clc
or
ret
or
or
adc
fst
rol
jne
push
push
or
insb
ret
dec
lods
in
and
or
out
cmp
dec
push
jo
subb
adc
adc
mov
add
cmp
addl
adc
std
ja
mov
cmp
jg
add
mov
mov
in
push
sbbl
pop
xchg
inc
mov
insl
sahf
inc
mov
and
test
xor
imul
lret
lock
or
mov
and
pop
pop
jle
xchg
dec
add
movsb
jb
xor
mov
dec
ljmp
push
inc
jbe
or
sbb
sbb
pop
ljmp
ljmp
push
sbb
adc
and
xchg
push
daa
sub
inc
and
cmp
and
test
es
mov
xchg
lods
sarb
jne
movsb
roll
xorl
out
rolb
popw
dec
pop
and
mulb
jecxz
imul
mov
jle
inc
nop
sub
in
push
adc
push
pop
dec
ss
fimull
adc
pushf
add
enter
jle
add
push
mov
ret
movl
lret
jo
cmp
push
xor
inc
add
jb
xchg
jne
or
imul
icebp
push
bound
inc
outsb
adc
das
sbb
or
jmp
pop
mov
fcomip
jae
adc
or
ficoms
jae
call
add
adc
and
add
in
and
aaa
enter
mov
cmpsb
mov
xor
mov
and
enter
push
pop
or
addl
sbb
lods
add
or
dec
cld
std
add
fists
mov
push
push
fldl
adc
ret
insb
subb
add
ljmp
or
mov
fstl
rcrb
sbb
dec
loopne
ss
or
sti
cmpsl
mov
jne
cmp
xor
sub
adc
mov
pop
mov
call
adc
lock
and
cmpsb
ret
push
add
mov
inc
bound
sbb
outsl
ret
jnp
je
add
iret
xor
push
dec
or
pop
jne
mov
pushf
testb
push
fs
and
and
call
push
sti
sbbb
pop
mov
lea
dec
xchg
test
pop
int3
ret
lcall
daa
cwtl
fistpll
inc
pop
fadds
or
ds
fbld
daa
xchg
or
add
inc
push
inc
pop
mov
loopne
ljmp
insl
clc
jne,pn
lock
and
push
sub
movsb
push
rcr
das
stos
rorl
sbb
ret
js
out
rorl
and
and
jno
mov
push
or
push
das
add
jbe
lret
test
xchg
adc
in
mov
jnp
dec
xor
adc
sti
mov
xor
mov
repz
sbb
stc
pushf
popl
mov
ljmp
ja
sub
movl
pushf
jbe
xor
sarb
xor
cmp
out
mov
fadd
jo
shlb
mov
jecxz
fisubl
call
loopne
call
testb
ss
mov
sub
paddd
pop
or
and
shr
push
ficoms
or
test
push
rorb
movsb
xchg
lcall
lgdtl
sub
and
adc
lret
subb
sub
incl
sub
mov
inc
dec
jne
or
loopne
lea
add
sbb
enter
add
inc
call
sbb
sbb
lods
mov
out
push
idiv
push
hlt
mov
and
and
lea
inc
fdecstp
add
sub
ja
sub
outsb
mov
or
addl
flds
enter
cld
ficoml
and
insb
jne
push
push
mov
xchg
xor
push
push
push
dec
inc
inc
cld
xor
add
cmpb
int
push
orb
icebp
push
sbb
jmp
and
je
and
imulb
nop
mov
pop
movb
mov
icebp
push
cmpsb
push
mov
out
leave
sub
mov
cmp
and
and
cli
or
imul
add
jmp
cmp
push
and
dec
mov
jmp
add
add
pop
adc
pusha
stos
push
push
mov
subb
jo
mov
insb
or
ja
test
and
or
xchg
rcr
sub
cwtl
test
sbb
fadds
cmp
cwtl
sbb
add
mov
jo
fsubs
fidivrs
cld
pop
aam
sbbb
mov
js
popa
pop
xchg
adcl
lods
pop
push
xchg
dec
add
mov
cmpsb
push
sbb
add
cmp
cmpsb
inc
negb
nop
fstpt
std
jne
fsubr
fldt
add
cltd
cld
stos
enter
shrl
les
rorb
ret
cmp
add
xor
add
xchg
daa
inc
hlt
mov
inc
or
push
mov
std
pop
ret
xor
adcl
push
jmp
add
movl
push
and
scas
into
dec
fdivl
dec
lea
push
push
nop
sbb
pop
or
ja
sahf
cmp
jbe
mov
in
lea
mov
test
ret
lahf
das
mul
pop
leave
inc
aas
lds
leave
jo
or
push
mov
andl
rolb
push
cmp
inc
cmp
data16
inc
ljmp
cmp
inc
shl
out
inc
jle
loopne
xorb
xor
xchg
fwait
mov
cmp
push
mov
inc
or
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
jo
orl
xchg
ds
add
mov
divb
js
inc
sbb
rorl
inc
jle
inc
loop
jne
pusha
test
adc
add
add
gs
mov
jmp
cmp
and
mov
adc
mov
xchg
push
dec
loopne
adc
mull
loopne
mov
or
cs
aam
or
adc
push
and
dec
jge
fbld
sahf
inc
fisttpl
cmp
inc
pusha
add
clc
add
inc
loopne
aam
push
jno
fcompl
inc
adc
aam
or
inc
push
mov
mov
andl
sub
pop
add
ljmp
repnz
das
mov
andb
mov
or
inc
popa
pusha
pushf
insb
pop
pusha
xor
xor
and
fsubp
sti
or
pop
sub
jmp
xor
dec
in
add
mov
inc
xor
out
add
bound
ret
ss
mul
jmp
adc
ja
pop
xchg
jno
es
inc
mov
xor
pushf
aam
cmp
dec
push
flds
jp
pusha
mov
leave
cmpl
inc
mov
std
and
pop
movl
and
ficomps
sub
cmp
es
pop
inc
pop
xchg
and
pop
mov
pop
pushl
int3
pop
and
inc
mov
sbb
mov
lahf
das
adc
inc
dec
jnp
sbb
sub
gs
int3
adc
sub
and
rcrb
cwtl
shl
icebp
fcmovb
mov
push
add
js
cwtl
sub
pop
push
inc
lret
lret
pushl
out
jle
or
iret
mov
clc
push
clc
adc
sub
cmp
sahf
inc
add
bound
mov
jne
sbb
xor
in
push
mov
push
or
sbb
mov
lea
cmp
or
andl
push
or
bswap
cmp
mov
sub
lahf
adc
shll
xor
xor
sub
xor
or
aam
sub
mov
sbb
sbb
in
or
clc
sub
fsubs
inc
push
nop
daa
nop
lock
test
ret
sbb
jo
xor
loope
jle
sbb
xchg
ds
cltd
inc
push
fisubrs
add
sbb
jmp
push
xchg
inc
or
or
mov
mov
and
mov
lock
rol
cmp
mov
bndldx
mov
and
ret
hlt
iret
pop
cmp
xor
in
pop
lret
adc
rcrb
add
inc
sti
jmp
add
test
lret
jns
pxor
adc
icebp
sbb
cwtl
sbb
inc
adc
js
rcll
push
push
push
mov
fucomp
xor
mov
shrb
or
or
enter
jge
dec
or
dec
shl
mov
les
repnz
and
sbb
fiaddl
popf
aaa
insb
push
cld
push
jo
push
inc
or
inc
mov
pop
pop
push
test
movsb
adc
inc
imul
aam
mov
jae
bound
pop
dec
jg
dec
fnstcw
and
push
outsl
mov
dec
stos
inc
or
sub
inc
add
jecxz
ret
dec
push
fldt
stos
pop
xor
push
push
leave
popa
mov
movsb
pushf
xchg
dec
add
xor
aas
inc
insl
dec
mov
jmp
mov
xor
not
les
push
add
push
mov
adc
xorl
clc
push
pop
lahf
and
clc
inc
and
add
nop
xchg
sbb
nop
add
nop
cmp
inc
cwtl
lds
cmp
cmp
mov
xor
js
push
ud0
push
adc
push
sub
dec
add
fiadds
aad
insb
and
pop
cmp
adc
test
dec
mov
mov
jge
mov
inc
xor
or
out
sub
mov
pop
jle
pushf
cwtl
xchg
pushf
push
cmpsl
jae
cmpl
imul
lahf
aad
pusha
cmpsb
and
daa
test
mov
jno
push
xor
sti
push
int3
dec
ja
mov
out
mov
btc
mov
mov
push
inc
mov
es
gs
and
gs
xchg
jb
or
mov
adc
add
mov
xor
mov
mov
sub
inc
jmp
dec
bound
pop
fidivrl
push
fstp
sbb
mov
or
dec
lea
sub
loopne
lret
fcoml
ror
lret
out
iret
mov
clc
or
out
lret
lret
test
movsl
shrb
sbb
mov
add
sarl
dec
call
adc
jp
or
sub
aam
xchg
pop
mov
test
push
fcomps
sub
mov
sub
xor
add
sbb
add
out
jmp
or
pop
jmp
jge
xor
rorb
fists
call
dec
pop
fdivrs
xchg
add
insb
or
xchg
mov
es
mov
call
daa
nop
adc
les
pop
jnp
out
aam
push
pop
call
add
jecxz
pop
pop
les
sub
push
les
mov
or
push
mov
adcb
popa
jl
pop
pop
lahf
xlat
inc
loope
push
jmp
pop
in
push
sbb
pop
dec
cmp
pop
mov
je
cwtl
push
rcrb
jns
jb
pop
pusha
pop
out
out
mov
adc
sbb
and
test
jns
xor
inc
push
pop
pop
mull
add
or
add
sbb
rclb
add
push
mov
jo
inc
cld
je
push
push
cs
push
rcl
clc
roll
inc
jmp
pusha
je
xor
js
or
add
les
cld
adc
dec
mov
lret
mov
in
shlb
cmp
jge
inc
mov
insl
mov
lods
mov
test
int3
cmp
sarl
scas
adc
mov
sbb
out
pusha
adc
std
or
and
add
add
nop
inc
pop
xchg
and
xlat
rcl
and
ret
idivl
inc
aam
inc
aas
lds
hlt
fdiv
mov
ljmp
mov
daa
orl
inc
cs
sbb
mov
enter
mov
cmpsl
or
inc
or
je
jo
dec
jb
dec
dec
adc
xchg
pop
jae
rcll
cmp
and
push
xor
push
andb
jge
jmp
addl
inc
pusha
sub
sbb
push
movl
add
jmp
adc
pop
adc
mov
fstpt
and
adc
cld
and
push
bound
xor
movsb
test
and
aam
push
or
push
mov
cmp
mov
inc
stos
out
sub
psrld
sahf
sub
aam
js
sbb
jbe
sbb
loope
mulb
jle
test
push
ret
loopne
ja
enter
comiss
je
movl
mov
outsl
push
mov
das
fisubrs
sub
sbb
hlt
mov
data16
xchg
xor
mov
push
inc
and
adc
xlat
add
lock
sbb
pop
and
jl
ljmp
pop
push
push
mov
cld
mov
sub
or
inc
sbb
loope
or
sub
and
fldl
orb
stc
dec
mov
les
or
add
xchg
fimull
sub
sbb
lea
inc
addl
xchg
inc
inc
or
pop
push
pop
or
push
cmpsb
xchg
sbb
sub
and
mov
push
adc
dec
daa
jmp
push
js
and
mov
movsb
pop
push
pop
lock
mov
loop
sub
sub
out
mov
loope
push
fildl
out
loopne
push
xor
sbb
sbbb
xchg
inc
fcoml
add
or
or
shlb
es
ret
call
xchg
ds
mov
xlat
lcall
adc
jbe
push
inc
rorb
movsl
shrb
push
fsubl
xor
inc
sbb
xor
jno
add
stos
jne
cmp
push
divl
in
iret
adc
shl
adc
sbb
clc
dec
xchg
xor
pop
or
push
jne
fcoml
adc
ljmp
jns
andb
push
jg
test
sub
pop
push
cli
add
add
loope
loopne
inc
inc
jp
mov
aam
test
and
mov
rclb
and
leave
dec
add
push
push
xorl
mov
mov
mov
test
and
sbb
jo
push
mov
dec
mov
dec
aas
add
push
pop
movsl
call
nop
xchg
dec
rorl
loop
push
or
adcb
out
sub
pop
mov
stos
jg
jne
repnz
jmp
dec
sbb
in
inc
mov
xor
or
outsl
cmpl
jo
xor
mov
stos
shl
mov
and
push
cmp
jno
test
int3
rorb
popf
in
mov
clc
aam
fsubr
jle
xchg
fsubs
mov
inc
imul
out
adc
mov
xor
cmp
leave
jl
push
and
in
or
call
rol
adc
jl
and
rorb
data16
lea
mov
mov
jl
dec
shll
xadd
and
sbb
sar
pop
mov
movsb
cs
or
jb
stos
lea
popf
arpl
cli
pop
or
aam
jae
pop
fdivr
fsubs
outsb
sbb
sub
dec
or
je
or
push
adc
mov
or
add
xchg
lret
and
sarl
or
adc
adc
sub
or
loopne
cld
adc
fdivrl
jl
mov
sub
push
imul
loopne
and
lret
or
ja
or
add
xchg
hlt
out
sbb
or
stc
cmp
push
add
fmull
push
sbb
mov
dec
and
subb
jmp
insb
loopne
sub
scas
pop
ret
sbb
pop
and
pop
xchg
ss
or
xor
mov
sbb
jns
dec
xor
movsl
mov
inc
pop
jg
jmp
or
fnstcw
imul
xor
int
jmp
loope
dec
xchg
xchg
xlat
je
mov
push
push
push
dec
xchg
ret
imul
jb
or
out
arpl
inc
je
mov
push
or
ret
nop
push
add
pushf
cmpsb
adc
hlt
fdivr
dec
cmpsl
andl
loop
and
adc
inc
push
jae
lods
xor
test
rorl
add
xchg
pop
insb
aaa
jne
pop
jge
pop
das
mov
adcl
pop
jo
clc
ds
dec
and
in
xor
lret
xor
mov
dec
sti
lcall
shrl
inc
mov
nop
jmp
and
push
mov
jnp
sub
inc
inc
push
insl
cmp
cmpsl
subl
push
idivl
jg
pushf
mov
dec
lret
rolb
aam
add
mov
sbb
aas
cmpsl
xor
mov
sub
mov
pushl
loop
int3
sub
ja
setp
cmp
push
hlt
mov
inc
mov
dec
mov
pop
xor
cmpsb
aaa
test
and
push
sbb
xor
add
pop
cmp
adc
cmp
pop
ret
out
push
sbb
icebp
push
fdivrs
sub
gs
add
add
into
add
sbb
mov
push
or
repnz
outsb
je
test
outsb
cli
inc
jns
xchg
je
aas
add
or
xchg
roll
or
add
push
stos
movsb
cs
push
pusha
pop
or
test
jo
mov
lds
jecxz
pusha
cmp
sbb
add
adc
or
addr16
out
jge
mov
jmp
cmp
jle
insl
cmpl
incl
add
xlat
mov
xchg
sub
xor
int
or
adc
mov
out
call
mov
adc
dec
pusha
cmc
mov
stos
subb
push
push
js
andl
inc
mov
ljmp
stc
lcall
pop
test
in
push
jo
sbb
dec
adc
icebp
pop
cmpb
jne
and
ds
adcl
inc
push
aam
sbb
mov
cmpsl
dec
pop
out
addr16
decb
mov
dec
inc
daa
add
sub
xchg
adc
jl
xor
sbb
push
sub
pop
sub
lret
clc
jne
stos
into
ja
push
sbb
test
nop
popa
inc
push
mov
push
cltd
jmp
aaa
mov
icebp
ret
int3
je
cltd
out
dec
mov
aam
sub
jl
flds
hlt
jae
pop
or
insb
neg
jecxz
icebp
xchg
mov
jne
dec
xlat
inc
sbb
dec
test
pop
mov
or
jne
and
lea
sti
sbb
sbb
jo
jo
mov
inc
lcall
push
repz
sub
and
movsb
mov
xchg
clc
sahf
add
mov
dec
jmp
pop
add
inc
cmp
adc
je
into
subb
shlb
pop
cld
movb
inc
jmp
cmovl
stos
loope
or
fbld
or
xchg
pop
repz
mov
roll
push
xor
fwait
sbb
sub
sub
sub
push
test
push
and
inc
scas
push
aam
cltd
sub
sub
movsl
call
shl
push
jp
leave
cmp
mov
fdivrl
or
cmp
lea
imul
mov
push
jbe
dec
popa
pop
xor
push
fdivs
pusha
pop
push
or
aaa
mov
shl
cmp
call
sbb
pushf
push
rcll
clc
loop
nop
popa
jle
sbb
mov
or
add
cmpsb
dec
mov
cmp
data16
sti
push
and
shrl
jl
testl
push
xchg
adc
mov
daa
rcll
movsl
daa
pop
mov
cmp
clc
insl
mov
mov
sub
sahf
pusha
rcl
movsb
cmp
ds
addl
mov
cmpsl
lock
push
sahf
cmpsl
fnstcw
imul
imul
push
pop
adc
mov
xchg
shrb
inc
sbb
add
and
iret
adc
push
inc
mov
aam
int
idivb
pop
icebp
loopnew
inc
add
lea
mov
test
test
cmpl
add
movsb
mov
push
lcall
xchg
aam
add
or
daa
push
mov
cmp
dec
and
cli
pop
push
rcll
jg
push
out
or
jl
mov
pop
jecxz
jne
int
cmpsb
cltd
push
aas
out
pop
jo
out
xor
pop
lret
sbb
add
cwtl
and
or
in
add
hlt
roll
push
sub
insl
shlb
outsb
push
bound
lahf
cmc
xor
jne
pop
dec
mov
or
jl
addb
add
add
adc
imul
jns,pt
lock
or
lock
mov
lock
subb
cmp
test
or
lods
rclb
pop
cmp
imul
add
jmp
xchg
adcb
sub
int3
fadd
rclb
xchg
ret
dec
pusha
imul
add
sub
dec
cld
mov
jnp
mov
cmc
add
push
dec
or
adc
jo
sbb
xor
dec
xor
push
lea
mov
xor
ret
adc
lcall
cmp
jbe
push
pop
mov
loopne
scas
cmp
jne
rolb
cmpsl
mov
decl
dec
add
shll
pop
mov
sbb
push
mov
lea
xor
add
push
pop
add
push
jne
inc
or
ljmp
cmpsb
and
push
or
mov
jmp
clc
and
std
pop
mov
shlb
and
sti
add
mov
dec
pop
cmp
out
lret
pop
add
mov
imul
lea
push
pop
dec
jno
mov
cmp
shr
testl
add
xor
fildll
xchg
dec
loopne
mov
sub
push
jle
pop
dec
add
cmpsb
gs
mov
mov
into
inc
fsts
xchg
mov
ficoms
push
daa
js
mov
int3
inc
fwait
add
fidivrs
adc
mov
sti
movaps
mov
mov
xchg
pop
lret
lahf
loope
push
or
pop
mov
pop
dec
or
jmp
dec
adc
push
mov
or
movsb
out
inc
or
inc
xor
lcall
movl
shrb
pusha
mov
dec
pop
shl
add
scas
jp
push
jecxz
jnp
call
aas
gs
push
or
out
andl
aas
jnp
dec
inc
adc
inc
aam
ljmp
mov
jne
push
push
inc
iret
mov
push
add
dec
sbb
mov
enter
and
cs
adc
dec
dec
call
sub
cmp
sub
mov
mov
cmp
sbb
mov
movsl
mov
xor
je
mov
xor
mov
cmp
lea
js
add
div
xchg
hlt
addr16
push
jae
xchg
out
inc
adc
lods
xchg
fisubrs
mov
or
adc
push
popa
jg
int
jmp
orl
mov
add
sbb
mov
add
or
test
je
ftst
add
inc
ljmp
jl
jl
test
incb
pop
loopne
xchg
mov
add
or
hlt
test
push
mov
mov
mov
or
push
push
popa
imul
sbb
mov
iret
shr
cwtl
inc
orl
mov
mov
adc
adc
ja
jge
mov
push
add
sub
sbb
pmullw
iret
dec
jne
je
clc
add
dec
mov
add
adc
adc
or
fs
inc
mov
sahf
inc
pop
hlt
cmp
mov
lock
icebp
stos
jmp
dec
inc
jne
or
lds
not
and
xchg
ror
dec
or
sbb
stc
adc
cmpsl
sbb
or
shrb
mov
outsb
xchg
mov
jb
cld
test
icebp
clc
adc
movsb
push
adc
mov
mov
push
or
jl
f2xm1
fcom
in
sub
add
je
sbb
mov
int3
push
pop
movsb
sub
sbb
mov
cmpsl
data16
sbb
clc
rolb
jge
jb
es
add
cmp
mov
dec
or
push
jns
push
lock
sub
add
xchg
sub
push
adc
xor
pushl
int3
fwait
pop
fstpl
lea
scas
data16
sbb
or
mov
dec
pop
pop
push
pop
xor
push
jns
pop
lcall
or
iret
js
mov
jmp
aaa
js
test
sbb
adc
adc
xor
xor
jle
sub
jecxz
flds
sub
jl
push
or
mov
jle
imul
pop
xor
push
sar
dec
jp
jo
xor
movsb
pop
imul
cmp
cmp
and
cmp
xor
addr16
je
fisttps
add
cmp
pop
je
fcmovu
ja
ja
dec
cwtl
mov
add
adc
fimull
fbstp
dec
lea
mov
adc
xchg
inc
jbe
mov
and
test
into
mov
cmpsl
jb
rdmsr
cmp
pop
jb
lods
dec
adc
sbbb
or
jp
insb
push
test
ret
lods
pop
and
inc
fld
push
cmp
push
push
push
jge
and
out
adc
add
or
stos
mov
or
sub
cmp
and
decb
xlat
jb
adc
dec
ret
mov
xor
jne
mov
jne
iret
mov
or
lock
je
daa
or
arpl
push
pop
testl
fsubs
out
loope
jecxz
jmp
push
dec
sbb
fidivrl
sbb
in
sbb
in
cli
and
and
or
push
les
pop
iret
jne
inc
or
ret
or
dec
mov
movsb
cs
inc
xchg
xor
aad
mov
jmp
dec
lock
gs
and
jne
mov
push
pop
fdiv
int3
sbb
inc
test
inc
push
pushf
mov
sub
aad
inc
out
icebp
sbb
jge
test
je
cmp
dec
pop
xchg
sbb
dec
jo
ror
push
inc
cmp
test
out
and
mov
sub
jne
in
adc
push
lock
jmp
jp
mov
pop
pusha
dec
bound
dec
push
xlat
int
and
test
xor
jp
dec
jp
movsl
call
mov
mov
or
pop
xor
inc
fsubrs
sub
jge
std
hlt
popa
inc
and
cmc
push
or
jnp
lock
push
push
rorl
mov
mov
out
or
nop
out
push
std
xor
mov
call
adc
scas
and
and
outsb
pop
lods
test
lea
rorb
sbb
imull
and
pop
jo
inc
add
cmp
sbb
imul
cmp
dec
les
pop
jb
or
xorl
clc
jecxz
add
sbbl
sub
adc
and
loopne
clc
dec
test
movsl
cmp
push
push
mov
jp
or
mov
and
test
mov
or
mov
inc
dec
add
pop
pushf
movb
shlb
dec
mov
add
nopl
add
clc
flds
inc
cmp
cmp
sub
add
push
mov
fnstenv
pop
sbb
outsb
test
pop
test
repnz
call
push
into
pop
or
or
lds
push
dec
push
test
call
les
push
sbb
dec
mov
dec
adc
sti
ficompl
fsubrs
xor
lahf
pushl
loop
push
sti
adcl
scas
loope
divl
pop
mov
cmp
push
push
inc
mov
pop
adc
movsl
and
inc
fnstenv
stos
jnp
and
sbb
inc
js
push
push
add
jmp
xchg
outsb
psubd
mov
pop
jl
pop
dec
xlat
test
xchg
inc
lods
fcoms
pop
pop
pop
mov
add
rcrb
sbb
adcb
rorb
gs
jo
int3
mov
call
lods
aam
hlt
adc
cltd
mov
shr
daa
pop
xor
rol
mov
inc
push
mul
adc
cmp
cmc
mov
push
jmp
movzwl
sub
in
int3
test
in
test
into
je
cmp
mov
decl
rorl
subb
xchg
imul
test
enter
jo
fdivrs
imul
lcall
mov
cld
or
and
movsb
xor
xchg
mov
lret
xchg
sbb
push
inc
movsl
add
add
xchg
or
rcll
add
push
lret
sbb
sbb
xchg
arpl
push
pop
add
ja
rorb
ss
leave
mov
lret
lcall
push
jo
fbld
in
push
sbb
pushf
inc
or
fistpll
insb
jne
mov
or
pop
ficomps
mov
nopl
jg
jnp
outsb
adc
mov
add
xor
cmp
notb
or
decl
enter
loope
dec
jae
int3
les
xchg
bound
add
out
jae
ret
jne
lcall
jns,pn
js
leave
pop
xor
jb
push
add
sbb
cmovo
lock
sar
sub
push
sbb
sti
xchg
lret
call
nop
dec
sub
enter
sbb
jnp
call
jnp
jnp
jnp
dec
sub
call
insl
and
add
loopne
dec
outsl
repz
pusha
enter
repz
mov
in
fimuls
cld
jns
mov
cmp
pop
mov
xor
rclb
mov
leave
dec
in
shr
and
mov
pop
in
inc
ja
push
hlt
xchg
repz
dec
leave
test
in
sbb
push
test
repnz
or
call
and
scas
in
and
ret
inc
xchg
les
mov
sarb
loop
in
enter
repz
inc
and
in
sub
pushf
sbb
test
in
push
dec
popa
mov
xchg
test
ret
adc
data16
cmp
popa
inc
adc
cmc
or
xor
or
xor
hlt
test
addb
repz
push
cmpl
pop
cs
test
xchg
out
sub
jne
cmp
sub
push
or
xchg
les
push
push
imul
ret
mov
push
xor
clc
xchg
ret
inc
or
xchg
jno
mov
out
je
lock
hlt
push
or
xchg
hlt
adc
push
add
sbb
dec
imul
pusha
push
sub
push
lods
inc
dec
mov
mov
or
nop
rcrb
mov
lcall
and
mov
adc
test
and
sahf
sub
fs
clc
inc
test
ret
mov
cmp
loop
int
jne
push
cmp
and
gs
or
cld
cmp
xor
mov
adc
push
mov
ret
jne
mov
nop
sbb
rcrl
cmp
pop
stos
add
in
mov
mov
out
add
add
mov
mov
js
add
add
add
pop
mov
in
jnp
or
adc
add
loope
or
jne
add
hlt
or
call
push
ds
shlb
push
inc
inc
mov
dec
cmp
mov
push
adc
subb
das
shrl
xor
int3
mov
mov
or
shll
dec
pop
xchg
movsb
enter
pop
adc
mov
cmp
sub
add
imul
sub
cmpsb
cld
std
dec
inc
cmpsb
mov
les
xor
and
push
pop
repz
xor
cmp
cmpsb
inc
lret
je
sub
stc
pop
push
sbb
add
in
sarl
sub
sbb
dec
mov
ljmp
movsl
xchg
je
push
or
add
or
fstp
mov
fstp
in
outsl
xor
fstpl
push
fldl
or
fldl
or
xorl
aad
jns
subl
insl
fcmovnu
jns
add
push
leave
fnsave
sti
pop
jmp
jo
push
dec
dec
stos
mov
xor
cmp
das
sti
scas
pop
xor
dec
xchg
dec
je
add
ret
xor
sbb
sti
insl
xchg
push
cltd
fnstenv
lcall
pusha
sti
ljmp
sbb
movsl
fldcw
sub
adc
add
aas
fwait
stc
fwait
add
ficoms
mov
mov
xchg
scas
repnz
mov
ds
mov
jmp
adc
push
mov
call
push
and
inc
sbb
lock
ret
adc
jne
das
and
mov
dec
mov
lock
mov
out
imul
xchg
setp
sbb
cmp
jnp
daa
xor
cmp
iret
or
andl
adc
sahf
fnstcw
cmp
inc
in
xchg
or
add
gs
cmpsb
mov
test
lock
jmp
jle
push
jle
xor
fiadds
and
inc
or
fbstp
mov
cld
sbb
push
xchg
push
loopne
ja
fs
faddl
fbstp
dec
or
popa
push
jmp
test
sbb
clc
push
fmull
or
inc
jp
cmp
push
push
in
push
push
sbb
ljmp
inc
ror
add
orb
mov
test
push
mov
and
mov
mov
push
push
rcll
inc
adc
inc
xchg
adc
dec
es
xor
mov
adc
enter
adc
xchg
and
pop
pop
mov
mov
test
js
xor
mov
mov
jb
mov
int3
pop
sub
lret
call
sbb
pop
xor
pop
lock
nop
mov
pop
mov
lret
clc
pop
pop
mov
je
mov
rcrb
mov
sar
mov
or
mov
xor
push
mov
jne
dec
sbb
pop
sar
mov
dec
ret
and
mov
fstpt
fsts
mov
mov
addl
mov
pop
lock
push
lods
push
jl
shlb
sub
adc
ficompl
adc
sbb
push
jmp
xchg
std
lods
mov
sti
shl
loopne
lea
rorb
xchg
lret
in
shl
enter
jne
fs
lret
dec
dec
scas
push
inc
push
pop
or
add
sub
enter
imul
sub
push
mov
cmp
mov
in
movsl
sar
or
pop
jl
mov
and
mov
lods
es
gs
call
insl
and
dec
je
shrl
inc
movsb
cmp
std
pop
lods
add
jne
inc
adc
rcrb
andl
je
jne
sbb
repnz
inc
xor
cmpsb
inc
scas
aad
xchg
mov
mov
push
int
lds
dec
movsl
test
pop
repnz
ret
imul
out
ret
call
test
call
mov
mov
pop
cltd
sarb
jae
movsb
fs
push
jo
cld
or
add
pop
fidivs
lods
popf
adcb
pop
xor
xchg
mov
shrl
adcb
sti
push
inc
cmp
mov
in
mov
lods
push
inc
jl
mov
add
inc
cmp
jne
xor
dec
rcrl
stc
mov
cmp
jg
testl
mov
add
enter
dec
mov
pop
cmpl
daa
mov
sahf
add
pop
stos
lea
cld
jecxz
xchg
cmpsb
push
inc
hlt
or
imul
adc
pop
mov
loopne
rcrb
fisttps
add
je
testl
xchg
and
xchg
or
push
test
jecxz
mov
mov
or
lock
gs
mov
aaa
subl
lock
fdivr
adc
fidivl
ret
dec
add
pop
mov
test
xor
push
pop
pop
rol
popa
pusha
add
cmpsl
xchg
testl
mov
bnd
sub
call
jns
xor
mov
jbe
push
ret
dec
mov
mov
fdivrs
cmpsb
pop
sub
mov
inc
lret
inc
stos
mov
jnp
std
cli
mov
sub
cs
aam
mov
mov
mov
imul
pop
adcl
mov
inc
lods
mov
cmpl
jp
pop
daa
sub
push
adc
fwait
push
push
mov
ja
enter
mov
mov
jb
ja
std
out
jg
imul
movb
xchg
sahf
aad
rcrl
adc
mov
jns
sub
test
sbb
adc
push
dec
in
push
enter
sub
inc
nop
in
dec
cmp
cmp
mov
sbb
std
mov
call
cmc
pusha
xchg
mov
imul
test
inc
loopne
mov
fs
inc
repz
daa
push
mov
popa
dec
imul
or
jo
ja
dec
data16
add
sub
test
sub
dec
jmp
dec
aad
xchg
out
dec
add
rcrb
std
pop
lock
xor
cli
cmpsb
push
push
sub
sub
or
data16
adc
and
jo
imull
cmp
lods
roll
xlat
addl
jl
test
dec
test
pop
fxch
bswap
aam
jns
int3
and
dec
subl
fbstp
bound
insl
mov
movsb
adc
or
fimull
inc
lret
jne
cmp
pusha
jp
xchg
sbb
mov
hlt
or
xchg
cmp
repnz
das
push
dec
or
push
je
enter
ds
cmp
in
std
loope
sub
or
sbb
xchg
aaa
fsubrl
add
push
ret
js
and
imul
repnz
xchg
pushf
cmpsl
add
sbb
lret
movsb
nop
xchg
adcl
nop
sbb
jno
cmp
es
and
cmp
xor
xor
adc
sub
cmp
or
inc
or
mov
or
jo
mov
sub
push
jecxz
pop
pop
xchg
ljmp
xchg
xlat
lock
and
sub
sub
dec
dec
push
insl
xor
pop
pop
arpl
xor
add
inc
dec
push
jecxz
pop
pushf
adc
and
pop
scas
movsl
call
pushf
dec
call
push
sub
inc
lea
adc
test
sub
xchg
adc
and
adc
mov
aam
inc
inc
inc
int3
les
imulb
or
sub
push
xor
leave
and
adc
repz
xchg
lret
dec
outsl
popa
pushf
cmp
in
xchg
repnz
mov
sub
dec
in
push
aad
lcall
mov
shlb
fdivrs
popa
lcall
xor
sahf
xchg
xchg
xchg
loope
xor
push
xchg
mov
inc
mov
aaa
adc
fwait
cmc
cmpsl
add
mov
mov
or
pop
icebp
add
fs
mov
in
pop
pushf
pop
repz
stos
pop
mov
arpl
adc
pushf
and
push
xchg
jl
xor
aaa
mov
movsb
push
mov
pushf
mov
imul
popa
dec
jns
sub
cltd
int
add
leave
pushf
movsb
bound
nop
sbb
aas
dec
push
repnz
sbb
adc
test
inc
cs
test
test
scas
nop
test
xchg
stos
pushf
pushf
nop
fs
inc
scas
nop
nop
pushf
push
cmp
xor
cmp
dec
xchg
fiaddl
push
je
sub
pop
je
stc
test
lcall
imul
inc
add
push
mov
std
dec
mov
fcomps
jp
or
popf
sbb
push
pop
sbb
and
cmpsb
or
inc
movb
jne
xchg
or
jnp
or
test
sbb
bound
or
daa
cmp
imul
dec
flds
cmpsl
sbbl
rcrl
movsl
sub
ja
sahf
loop
fidivl
cmp
add
inc
dec
adc
push
sbb
inc
and
test
nop
adc
xor
imul
fmulp
xchg
hlt
pop
sbb
jl
dec
nop
add
movb
lock
bound
adc
adc
mov
cwtl
outsl
aas
mov
decl
je
mov
xor
bound
ret
xor
push
sbb
add
adc
lcall
and
jle
popa
add
std
mov
add
les
mov
push
mov
cmp
stos
nop
shll
fucomip
stos
bound
bound
mov
sbb
imul
and
ret
pop
les
loop
dec
dec
cld
lods
or
sub
scas
dec
push
and
add
gs
mov
movl
or
xor
es
inc
push
xchg
test
cmpsb
gs
mov
pushl
aad
inc
mov
jmp
loopne
and
add
inc
lahf
and
sbbl
or
dec
adc
inc
sbb
xchg
jle
lret
or
jns,pt
push
add
je
hlt
daa
clc
inc
push
adc
pushl
testl
cmpsb
jmp
ss
orl
sbb
test
test
cmc
les
xor
cs
popa
and
andb
jae
repnz
inc
jg
and
or
out
lds
insl
imul
add
fisttps
inc
jne
les
aas
push
pop
jmp
lret
inc
stc
movb
adc
push
or
pop
daa
push
shrl
rol
inc
subb
push
and
test
adcb
inc
jmp
mov
add
mov
aaa
jle
jo
movsb
stc
inc
or
out
imul
mov
and
sbb
call
lcall
dec
push
test
cmp
call
cmp
xor
xor
nop
xor
ja
push
add
push
in
fdivl
or
rcrl
sub
fisttpll
xchg
cmc
sbb
data16
shlb
dec
fs
andl
addb
sahf
sub
cmp
cltd
test
jne
jle
fdivl
sub
xchg
xchg
call
cmp
sub
lea
and
leave
wrmsr
xor
sbb
mov
mov
mov
jae
pop
or
addr16
dec
in
icebp
out
test
lea
xor
cmpsb
mov
ljmp
jb
fadds
movsb
and
xchg
and
inc
adc
add
cmpl
jno
xor
sbb
jmp
adc
sbbb
inc
mov
jno
push
push
add
sbb
sbbl
add
mov
or
sub
adc
pop
adc
int3
lahf
mov
mov
inc
sub
out
loopne
dec
xor
xchg
shlb
test
sbb
and
push
fstps
or
add
xchg
add
inc
inc
stos
jge
sub
adc
push
pop
mov
mov
push
subb
mov
add
jb
imul
ret
cmp
cmpb
clc
mov
movsl
aam
sti
add
jl
int3
and
stc
dec
pusha
xchg
sub
pushf
scas
movsb
adc
test
pop
mov
or
xlat
jge
ja
loop
imul
jle
andl
cmp
loopne
add
and
sarl
call
cmp
arpl
dec
inc
sbbl
in
mov
pop
orl
sbbl
test
cmp
sbbb
popl
mov
push
pop
mov
fs
lock
leave
pop
inc
pop
pop
push
sbb
or
and
push
xchg
int3
int3
flds
mov
sarb
mov
adc
push
add
pusha
mov
divb
xor
in
hlt
add
pop
es
mov
inc
xchg
rolb
or
int3
or
mov
mov
ret
faddp
je
push
or
loop
jne
fxch
imul
pusha
les
cmpsl
in
inc
mov
mov
pop
rcrb
add
cmp
jmp
bound
je
les
cld
push
les
dec
je
jmp
jmp
mov
mov
mov
push
or
push
xchg
pop
xchg
push
add
xor
cmp
aad
adc
les
test
add
xchg
scas
fs
or
mov
cmpsb
jge
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
adc
and
mov
mov
pop
mov
mov
or
mov
mov
scas
mov
inc
or
sbb
push
push
dec
jmp
loope
popa
pop
push
enter
xor
test
and
sub
leave
push
fs
in
jecxz
and
pusha
push
adc
or
repnz
dec
cwtl
mov
test
pop
addl
pop
mov
je
and
bound
pop
ret
xorb
or
mov
orb
fsubl
adc
iret
es
sti
scas
addr16
jmp
fsubs
shl
push
adc
icebp
add
or
cmpb
lret
loop
xor
and
adc
iret
xor
and
mov
and
aas
mov
lods
jne
gs
outsb
insb
inc
bound
mov
jecxz
daa
sahf
cmpsl
sub
adc
sarb
xchg
pop
addr16
outsb
or
push
mov
cld
decl
repnz
ret
or
adc
mov
in
mov
pop
pop
sarb
shlb
cmpb
cmpl
or
and
and
push
cmp
pusha
popf
push
inc
stc
or
sub
cmpl
iret
and
cmp
dec
sub
in
inc
and
push
or
and
dec
pop
pop
push
add
scas
and
push
sbb
add
push
ja
jmp
or
mov
insl
cmc
insl
mov
mov
dec
pop
sub
and
mov
imul
fdivrl
xor
mov
push
dec
lock
hlt
pop
test
mov
dec
adcl
popa
fsts
mov
cmpb
pop
je
int
cmp
mov
inc
lods
ret
xlat
xor
repz
jp
or
xor
js
and
insb
sub
or
repz
inc
mov
add
repz
inc
push
lods
lea
dec
push
out
mov
pusha
add
aad
mov
add
adc
fdivs
shrl
and
jmp
call
add
mov
sbb
lret
adc
rcl
nop
cmp
or
xchg
mov
mov
mov
xchg
jne
imul
lahf
xchg
add
lret
mov
ret
mov
cmp
cmp
repz
jecxz
sar
inc
adc
incl
test
outsb
cmp
enter
pop
je
pop
es
testl
or
mov
inc
mov
mov
mov
jmp
inc
dec
stc
add
sbb
xchg
xchg
inc
call
add
je
repnz
loop
and
andl
fnsave
dec
into
inc
add
xor
inc
into
mov
rcl
add
or
add
pop
mov
dec
insl
jecxz
lret
inc
cmp
in
cmp
imul
fiadds
insb
and
mov
jmp
test
or
xchg
outsl
test
xchg
cs
ds
sbb
inc
jmp
test
jae
mov
sub
inc
stos
sbb
shl
punpckhbw
out
shlb
push
out
adc
lods
subb
add
push
push
orl
xchg
mov
clc
or
cmp
fs
jle
pushf
pop
shrl
aaa
or
adc
inc
inc
mov
and
cltd
outsl
cmp
jo
and
dec
mov
dec
xor
scas
jge
fldt
pop
dec
inc
inc
or
jne
pop
cli
divb
sub
push
sar
orb
and
hlt
xor
cmp
and
pop
xchg
jo
xchg
rcrb
adc
aam
movsb
arpl
xlat
pop
mov
or
jns
pushf
pusha
ret
jmp
push
and
andb
xchg
push
int3
inc
popf
jb
or
sbb
or
ljmp
lock
cmpl
loopne
lods
fwait
or
in
cmc
xor
loop
push
xchg
outsb
pushf
xchg
push
pop
push
jo
scas
push
dec
push
xor
lock
or
das
loopne
mov
jl
rorb
or
or
push
and
sbb
cmp
xor
ss
outsl
add
jge
mov
cwtl
add
sahf
and
pop
popa
std
mov
cmp
mov
mov
sbb
pop
pop
adc
push
outsb
lock
mov
add
jle
and
andb
mov
push
cmp
daa
insl
andl
inc
cmp
or
mov
push
inc
pop
sbb
movsb
add
roll
cld
jl
push
push
mov
or
add
push
call
and
clc
add
or
pop
shl
add
pop
lods
push
sahf
inc
add
sub
aaa
mov
or
fmul
add
mov
hlt
inc
adcl
pop
test
jl
fs
xorl
paddsb
push
add
mov
xchg
adc
jmp
ret
cmc
shl
shrb
cmp
jge
sub
aas
push
aaa
xor
ds
adc
mov
jne
shrl
or
je
and
mov
mov
movl
jl
mov
loope
pop
aad
xchg
sahf
notb
xchg
mov
push
mov
dec
insb
xchg
mov
testl
mov
push
adc
test
inc
jmp
push
push
xchg
push
xlat
cs
push
xor
xor
lahf
lock
shlb
dec
lock
std
add
xor
and
test
mov
or
adc
lock
xor
push
rol
adc
fisubl
sub
mov
enter
add
adc
jb
rcrl
push
and
sub
xor
jge
inc
sbb
jmp
mov
rcl
mov
and
adc
and
pusha
movsl
push
test
lea
ljmp
pushf
iret
mov
and
sbbl
add
pop
mov
jg
cmp
je
sub
xchg
pop
shll
dec
push
shrb
inc
add
ja
sub
rep
ss
cs
movsl
lock
imul
je
sbb
mulb
xchg
out
jmp
sbb
ljmp
jb
inc
dec
pop
add
pop
dec
lods
in
mov
mov
jno
shrl
or
mov
popa
push
mov
jnp
jp
jae
mov
cltd
loop
jbe
xor
mov
vpshab
inc
sbbb
add
ret
cld
cmpsb
fs
inc
xchg
push
add
lcall
push
pop
orl
cwtl
mov
mov
xchg
mov
movl
mov
mov
and
pop
in
jl
je
inc
pop
sbb
jns
filds
sub
sbb
in
or
out
jbe
adc
je
pop
add
loop
xor
test
mov
adc
push
lods
mov
outsl
push
push
dec
adc
movsl
jb
out
and
jne
push
jl
fisttps
outsl
inc
or
jbe
jle
cmpsb
push
test
ja
sbb
test
loopne
push
jo
or
cmp
rclb
ret
mov
fsubl
in
and
xor
rclb
xchg
call
or
sub
std
mov
dec
sub
movsb
lods
adc
or
shrl
shll
fsubrs
fld
lock
in
fsts
rep
add
fwait
mov
jne
inc
adc
mov
and
or
adc
inc
inc
shrb
sbb
out
inc
and
jle
pop
add
mov
hlt
push
sbb
les
adc
sti
push
sub
pop
call
pop
jno
xchg
clc
lock
movsl
mov
lock
pop
daa
or
pop
and
fs
inc
pusha
adc
push
dec
shll
fsub
push
xchg
mov
out
rcrb
fwait
adcb
add
fsubrl
sub
and
xor
sub
lock
xor
iret
decl
mov
lods
cld
out
or
dec
hlt
xchg
icebp
sbb
dec
les
les
jl
js
xor
push
push
popa
scas
lret
and
jg
dec
push
xor
add
pop
enter
pop
mov
push
cmp
cmp
xor
add
aas
add
add
out
mov
adc
inc
fldenv
push
shlb
int3
pop
mov
ret
es
sarb
mov
test
aam
sarb
dec
mov
mov
sub
sub
mov
outsl
fcomp
and
push
inc
xor
push
push
rcrb
and
lahf
shld
dec
dec
scas
int
mov
jmp
adc
outsl
jo
push
mov
adc
add
lods
inc
add
or
enter
push
push
fcoml
dec
repz
fdivr
dec
pop
xchg
push
mov
dec
xor
inc
test
aaa
lods
ret
and
jecxz
xchg
sahf
dec
lock
stc
ret
ret
xorb
imul
aad
cmp
cmp
jl
cmp
adc
cld
cmp
inc
jmp
hlt
pop
punpcklwd
jne
imul
jl
push
shrb
add
sbb
dec
enter
adc
out
rcr
fsubs
popa
and
mov
pop
adc
add
push
nop
ret
dec
jne
xor
sbb
push
subl
push
ja
out
jo
jne
and
add
shll
stos
mov
mov
lcall
add
sbb
enter
or
sub
mov
cld
leave
inc
enter
sbb
enter
arpl
push
les
sahf
mov
movl
and
rcll
subl
nop
cmpsb
or
xchg
hlt
sarb
mov
adc
push
mov
shll
add
pop
or
cmpsl
xchg
add
or
test
cmp
sub
or
aas
sub
cmp
adc
daa
mov
mov
ss
xchg
mov
sbb
sbb
mov
push
pusha
lahf
pop
inc
popa
and
add
push
insb
jae
mov
ss
or
int
cmp
je
pusha
jle
cmp
jl
inc
jnp
and
mov
fs
adc
mov
push
je
add
aas
adc
jl
jle
mov
sbb
and
addl
jnp
rcll
push
in
xchg
popa
adc
dec
cmp
jne
cs
cmp
dec
movsl
push
and
and
inc
sbb
pop
insb
cmpsb
movsb
mov
add
cmpb
xchg
dec
movsb
test
sub
and
xor
mov
cld
sub
cltd
jg
cmpb
jg
aam
outsl
mov
inc
or
lret
xor
cmpsb
inc
iret
inc
xchg
les
pushf
add
push
jl
pop
lock
cld
mov
or
add
add
dec
mov
sti
jg
aas
xchg
insl
jle
mov
sbb
pushf
sbb
xor
les
add
and
inc
je
and
cmpsb
jno
data16
stos
mov
nop
mov
add
mov
out
push
pop
jl
es
mov
dec
push
or
sub
leave
xchg
or
call
fistl
pusha
ret
or
xchg
shlb
lods
cli
add
loop
loope
jb
int3
add
push
test
inc
ret
xor
fmul
insl
cltd
enter
mov
mov
mov
sbbl
clc
filds
add
mov
add
loop
push
lods
cld
jmp
mov
xchg
sbb
sub
ficomps
cmpl
dec
cli
pop
adc
cmp
jae
mov
je
cmp
and
cmp
rolb
adc
imul
test
or
adc
and
mov
fs
mov
in
xor
mov
add
cmpl
cmc
inc
cmpl
inc
push
pop
cmp
movsl
and
frstor
aad
ret
xchg
mov
mov
sub
inc
jo
out
cli
mov
cmp
lret
push
or
cmpsb
cmp
xchg
inc
dec
sahf
test
jle
mov
or
rclb
pop
cs
sub
inc
mov
ja
add
pop
movsb
scas
jns
and
lea
mov
adc
mov
xor
sbb
inc
push
pop
je
xor
aam
push
nop
shrb
cmpl
sbb
jl
cwtl
jmp
mov
jmp
cmp
or
je
xchg
cs
push
mov
sbb
enter
jmp
outsl
sub
cld
mov
iret
sub
pop
add
sbb
pop
inc
rorb
movsl
inc
or
push
leave
jb
nop
or
sub
and
mov
and
sbb
and
or
adc
inc
pushf
cmp
mov
inc
mov
xchg
sbb
fcoms
and
add
jmp
xor
inc
xor
add
mov
mov
fsubrl
and
or
sub
jne
push
sub
xchg
push
pushl
leave
push
icebp
cmpsb
outsl
adc
sbbl
dec
or
or
repz
xor
test
jns
jge
xlat
cmp
fbstp
out
jb
aas
sbb
popa
pop
je
pop
cmc
and
fisubl
cmp
inc
rorb
push
and
adcb
push
add
rorb
jb
xor
xor
jae
push
add
mov
cmp
jl
mov
inc
mov
or
xchg
add
enter
arpl
or
popf
out
cmp
mov
add
and
push
xor
lret
jbe
into
push
ljmp
push
fsubs
movsl
movsb
cli
or
sbb
lret
sbb
sbb
in
mov
dec
dec
dec
adc
and
and
mov
mov
cmc
adc
std
mov
inc
inc
push
and
adc
or
adc
cs
adc
xor
fidivl
mov
fdivl
or
xor
xlat
jp
mov
jns
jne
jmp
fisttpl
insb
out
loop
or
push
arpl
mov
adc
inc
lret
mov
jl
add
xchg
inc
push
inc
xor
inc
jne
loope
push
sub
inc
and
add
das
subl
sub
inc
mov
in
mov
jbe
pop
mov
mov
inc
push
jle
add
addl
xchg
mov
clc
dec
inc
mov
lock
adcl
sbb
into
mov
cmp
jo
jl
insl
or
hlt
outsb
pop
jle
and
mov
aam
push
adc
pop
shrl
in
pusha
jbe
add
lock
sbb
decl
fistl
adc
dec
jg
adc
orl
call
lret
pop
hlt
sbb
dec
or
cmp
push
xlat
or
or
in
nop
fdivs
mov
inc
sbb
sti
in
jo
pop
and
sbbb
ja
push
adc
pop
mov
lock
cmp
xlat
dec
xor
ljmp
and
push
push
jne
dec
js
or
lock
shrl
sbb
in
es
jp
add
clc
push
jne
jmp
mov
ljmp
dec
aaa
dec
dec
xor
mov
lret
or
into
dec
and
aas
loopne
je
adc
xlat
je
cmp
adc
dec
sbb
and
cmp
jb
testb
fists
icebp
test
inc
add
inc
add
movsb
xor
je
jge
mov
push
mov
movb
and
mov
mov
ret
jns
jb
cmp
jbe
mov
push
adc
rclb
cmpsb
dec
cmp
or
push
pop
push
lret
push
dec
mov
shr
jmp
das
xor
mov
ret
sub
adc
mov
push
mov
inc
adc
mov
sub
jmp
push
insl
jl
cmp
mov
or
bound
pushf
xor
jle
sub
push
xor
pop
xor
es
int3
mov
or
push
sub
out
adc
push
lock
mov
lsl
jmp
push
pop
push
push
addr16
ja
shr
rcr
shr
rcr
or
div
pop
dec
sti
ja
mov
out
jb
cmp
or
cmp
add
sti
jbe
dec
sub
sbb
adc
push
adc
aas
or
fcmove
ficompl
pushf
sub
dec
or
addl
lea
sub
add
dec
std
inc
rolb
push
mov
mov
pop
movsb
sbb
je
add
ljmp
inc
xchg
dec
inc
test
int
jmp
pop
dec
sbb
dec
insb
sbb
shl
mov
inc
shlb
bound
jne
lea
adc
push
mov
adc
test
jnp
jecxz
outsl
xor
cmp
sub
test
pusha
loop
inc
ret
fstps
aas
mov
incb
jns
adc
adc
sub
jbe
sbb
pop
and
push
jo
add
adc
adc
push
mov
dec
xor
fs
or
into
call
orb
push
fistps
test
sbb
subb
mov
mov
push
jl
push
xorl
xchg
push
mov
push
push
mov
nop
aas
inc
cmpsl
and
stc
andb
shll
xor
or
movsl
negb
je
xchg
cli
adc
add
outsb
jg
lea
lea
or
inc
and
xchg
aas
in
jbe
insb
inc
inc
mov
mov
insb
dec
dec
mov
xor
push
dec
lods
test
xor
dec
enter
inc
mov
sbb
adc
or
jo
mov
loopne
mov
cmp
loopne
and
pusha
add
mov
push
push
push
popf
test
loop
mov
clc
sbb
dec
jg
loopne
rcrl
ljmp
push
inc
cmp
xor
js
add
out
adc
stos
cmpsb
jge
jne
lret
aaa
stos
imul
xchg
addb
or
popa
inc
arpl
outsl
xchg
mov
pop
xchg
mov
or
adc
dec
dec
outsb
mov
sbb
sub
dec
dec
dec
xor
cmp
xchg
adc
cmp
inc
and
pushf
pushf
fmull
cmovs
pop
pushf
pushf
push
pop
add
daa
daa
fs
daa
daa
je
jl
testb
sbb
dec
es
mov
xchg
cwtl
pushf
mov
movsb
test
sub
lcall
into
adc
pushf
cmp
or
sub
insl
xchg
pop
xor
and
mov
adc
movsb
cltd
nop
in
adc
sbb
sbb
clc
insb
movsb
cltd
and
and
std
decl
inc
insb
pop
lret
ss
adc
add
scas
jg
out
sub
ret
cmp
push
js
mov
dec
jne
rorl
data16
nop
or
push
imul
add
rolb
cli
mov
loope
adc
cmp
adc
xchg
sbb
loopne
mov
test
add
cmpsl
sbb
lock
pop
aam
sub
sbb
pop
xor
push
or
js
daa
or
pop
mov
in
or
and
inc
pusha
inc
push
add
jecxz
fdivs
or
insl
push
lea
jl
das
je
sub
adcb
fmuls
inc
xor
ret
sarb
movsl
fdivrs
mov
mov
lea
jo
in
push
popf
mov
pop
int3
ficompl
rcrl
inc
cwtl
or
lock
cmp
push
cltd
rcrb
sbb
or
rcr
dec
pop
je
push
pushf
pop
inc
inc
sub
lea
inc
push
jno
enter
or
sub
jne
xlat
test
jge
inc
cltd
and
scas
addb
call
lret
shrb
add
fs
in
xchg
and
int3
ror
les
and
rcr
push
mov
pop
and
pushf
and
loopne
ror
inc
movsl
std
inc
adc
add
fucomip
and
adc
adcl
dec
cmpsb
dec
ja
fiadds
imul
mov
fwait
dec
loopne
cmp
mov
dec
sbbb
andb
fcoms
divb
into
decl
loopne
adc
cmp
push
sub
pop
lret
mov
adc
cltd
cmp
or
push
jb
push
mov
push
mov
push
push
das
jmp
test
sbb
add
sub
push
mov
in
loope
sbbl
test
mov
adc
add
push
mov
bound
xor
scas
push
popa
pop
fisttpl
jmp
fwait
mov
xchg
lcall
lahf
mov
lea
imulb
push
pop
and
xor
push
js
cmp
cmp
xor
sbb
andl
jb
push
test
xor
rcll
clc
push
push
std
push
lea
xor
mov
push
and
out
imul
add
sar
mov
or
xchg
icebp
cmp
mov
adc
gs
push
outsb
les
sbb
aad
test
adc
mov
xor
push
adc
xor
mov
add
pop
inc
sbb
and
inc
insb
bound
mov
sbb
sahf
int3
mov
mov
inc
pushl
mov
or
fucomp
jns
dec
sub
lret
add
out
or
loope
dec
inc
popf
pop
addl
pop
mov
cmp
mov
sahf
movsb
lcall
orl
in
lods
mov
cmp
mov
mov
mov
aas
and
lods
test
jmp
stos
pop
add
addb
pushl
jo
cmp
add
cmp
adc
jo
fsubs
push
or
repz
sbb
adcl
call
jmp
push
dec
jle
dec
sub
lea
push
fdivl
lea
rcll
loop
jnp
inc
jecxz
cmp
dec
xor
xchg
cmp
lahf
add
fsubs
jl
divl
jns
mov
jecxz
xor
sarl
cmp
test
cmpl
imul
dec
push
test
mov
add
add
pop
daa
inc
mov
adc
outsl
pop
pop
sahf
cmp
js
and
cmp
rorl
add
inc
int
lahf
ficomps
push
jmp
inc
adc
mov
mov
jl
xchg
iret
test
xor
clc
pop
mov
jae
lcall
mov
fisttps
cmp
addr16
adcb
mov
sysenter
sbb
dec
add
xchg
cmpb
je
or
push
lret
out
xor
push
pop
mov
sub
sub
mov
push
cmp
mov
cmp
jne
adc
cli
or
js
lds
adc
lods
sbb
fmuls
sub
and
loopne
cmp
mov
testl
sbbl
or
incl
sub
xor
xor
pop
cmp
movsl
dec
add
add
cmp
cmp
rcrb
adc
lods
push
orl
xlat
push
or
loopne
cmp
add
adc
add
dec
dec
in
add
push
jo
mov
orl
dec
stc
pop
xchg
cmp
cmp
sbb
mov
add
xchg
push
xchg
sub
nop
cmp
addb
test
add
lock
mov
lret
lock
scas
jae
xor
mov
adcl
and
xchg
add
fstl
ret
sub
test
sti
add
mov
jo
lret
jmp
lods
loopne
mov
sti
jge
pop
push
mov
mov
inc
in
lea
mov
pushl
lods
dec
jns
cmp
imul
rol
movsl
ljmp
or
jne
divl
fisubs
das
lods
jnp
xor
filds
inc
cmpb
test
lods
and
and
sbb
pusha
dec
jmp
mov
out
pop
pop
loope
adc
and
rclb
or
fldt
leave
je
jmp
push
xor
cs
jecxz
movb
push
dec
pop
scas
in
fldt
ljmp
daa
icebp
mov
mov
or
pop
xor
sbb
add
cmp
mov
jecxz
mov
pop
test
unpckhps
loopne
mov
push
test
pusha
pop
dec
sbb
push
xor
adc
adc
sub
insl
push
adc
and
mov
adc
gs
mov
mov
loopne
xor
mov
test
xor
push
and
mov
cwtl
xor
sbb
jecxz
nop
scas
bound
mov
shlw
stc
mov
outsl
sub
pop
inc
xor
ret
insl
sub
pushf
cli
sbb
cmp
sbb
mov
mov
nop
std
into
and
adc
cmpb
out
loop
xor
mov
mov
mov
divb
into
sub
sub
orl
add
add
pop
divl
test
jl
add
pop
mov
jno
xchg
std
and
arpl
and
pop
cmp
or
jbe
push
das
mov
xchg
pop
jl
scas
sbb
adc
jge
les
mov
addr16
pop
dec
push
mov
xchg
addb
adc
inc
leave
aam
loopne
jne
add
mov
nop
jge
and
adcb
push
movb
jecxz
lods
pop
int3
pop
pop
push
dec
call
mov
and
cmp
call
fwait
xchg
add
clc
je
xor
add
movsb
imul
cli
or
lock
jecxz
xor
js
scas
dec
cmp
test
dec
cld
inc
mov
add
jmp
and
push
enter
jl
inc
jbe
iret
mov
js
pop
sbb
push
add
into
into
movsb
add
popa
add
xor
jmp
enter
inc
ds
cmp
mov
jle
cmp
roll
push
les
xor
test
xor
mov
inc
negl
jmp
and
push
jecxz
out
cmp
ret
add
and
mov
dec
sbb
xchg
ret
sub
pop
pop
test
sbb
cmc
cmp
and
pop
add
adc
sbb
push
gs
sbbl
adc
and
sbb
xor
dec
lock
rolb
addr16
dec
add
aaa
jmp
lods
mov
shrb
lods
inc
sbb
ja
cmp
inc
mov
mov
mov
and
fistpl
adc
loope
xor
xor
mov
or
dec
pusha
sbb
and
dec
loop
imul
mov
out
mov
cmp
icebp
inc
mov
sbb
and
pop
in
sub
stos
cmp
add
jl
aaa
dec
push
adcb
notb
or
cmp
inc
mov
lahf
mov
pushf
cld
and
jge
nop
mov
mov
repnz
movsb
aaa
xchg
adc
inc
jl
imul
push
outsl
nop
pop
or
or
out
notl
jmp
or
jno
sbbb
pop
mov
popf
inc
push
jns
mov
adc
ja
and
jne
or
jbe
dec
inc
data16
rcr
es
imul
and
mov
sbb
cmp
adc
and
sbb
rorb
and
leave
xchg
loopne
push
add
int
in
xchg
sbb
aaa
std
jmp
fwait
push
push
adcb
or
or
sub
inc
push
push
ljmp
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
add
push
shr
sbb
pop
idiv
dec
xchg
out
add
push
test
pop
lods
xchg
cld
adc
pop
iret
xor
dec
cmpsw
mov
mov
or
dec
mov
or
test
push
or
mov
repz
push
mov
xchg
popa
xchg
cs
test
and
add
cmp
pop
sahf
or
ja
loop
and
shll
dec
xor
mov
xor
and
shr
in
and
add
jmp
mov
add
jae
fisttpll
cmp
test
pop
jns
xchg
test
add
and
xlat
push
add
test
add
je
leave
ret
sbb
or
sub
jbe
sti
mov
add
std
or
jmp
inc
and
mov
add
jl
and
jecxz
aaa
xor
pushf
jge
add
or
imul
mov
loope
fdivl
or
cvtps2pi
cmp
mov
mov
mov
loope
flds
and
adc
pusha
mov
pusha
loope
pop
sub
adc
mov
jecxz
dec
pop
push
jns
fstp
ds
cmpsl
push
cmpsb
cmp
imul
sbbl
sarl
addr16
and
or
xchg
sub
adc
sti
add
add
out
test
fisttps
ret
dec
mov
push
xor
aaa
and
jne
orl
scas
jmp
push
mov
push
jmp
pop
testl
out
and
cmpb
fidivl
pop
sbb
jmp
push
and
inc
add
outsb
testb
add
inc
mov
sarl
inc
push
flds
fisttpll
pop
push
addb
add
sbb
inc
or
clc
mov
push
cmp
fcmovnb
pop
fwait
lock
mov
in
inc
neg
call
sbb
add
mov
sti
lret
inc
bound
or
xchg
push
aaa
in
push
jle
sbb
out
rcr
sbb
subl
jl
add
add
jmp
sub
sub
jmp
sub
cmp
nop
jns
push
sbb
test
push
adc
negb
int
sti
hlt
add
pop
loope
or
jnp
addl
pop
in
jno
add
stc
into
mov
add
or
or
jnp
push
mov
inc
decl
dec
push
xlat
mov
dec
div
fsubl
cli
flds
xor
dec
jmp
dec
into
scas
push
shrl
sbb
jp
dec
in
movsb
mov
mov
mov
jp
push
sahf
inc
adc
mov
fsubrl
test
paddsw
std
test
mov
and
mov
jp
xor
pop
dec
pusha
pop
aam
out
or
jbe
mov
jle
push
add
sub
add
and
pop
sub
pop
test
push
jmp
inc
icebp
add
fwait
pop
push
popa
faddl
add
push
pop
movzbl
test
dec
out
ljmp
push
sbb
mov
ret
sbb
sbb
js
xchg
mov
pop
adc
testb
add
adc
lods
andb
xor
mov
enter
hlt
push
and
pop
pop
jle
pop
out
xchg
icebp
add
data16
ret
push
add
lods
fsubrp
fwait
jno
mov
dec
inc
and
push
add
or
push
adc
jo
xchg
jmp
insb
imul
jo
add
xor
scas
adc
mov
jg
push
mov
cmp
inc
push
pop
pop
pushf
mov
sbb
add
or
testb
jae
lea
push
or
mov
sbb
imul
sub
cmp
and
popa
xor
sub
mov
mov
adc
inc
lock
mov
add
sarb
jo
std
xchg
mov
or
mov
cmc
push
xor
int3
pop
cld
pop
clc
lea
xchg
out
sub
loop
sbb
add
jbe
loopne
loope
ret
sahf
push
scas
pop
add
or
gs
and
xchg
mov
mov
lock
mov
adc
in
imul
mov
fsub
into
mov
mov
addl
mov
xchg
jle
in
insb
mov
test
outsl
jne
jne
dec
pop
or
mov
aad
icebp
sbb
gs
or
stos
inc
add
or
push
push
pop
cmpb
mov
push
cmp
or
cld
push
xlat
sahf
and
sbb
sub
jae
imul
incl
sub
xchg
inc
ljmp
sub
adc
ret
fnclex
and
inc
adcb
sub
and
adc
xor
mov
or
push
in
rclb
inc
adc
fldt
add
adc
int3
and
sbb
outsl
cmp
push
les
or
jle
call
loope
jb
mov
inc
and
lcall
popf
cmp
mov
rolb
inc
xchg
scas
divb
xchg
adc
xchg
and
xchg
or
inc
mov
cmp
dec
or
cmp
jbe
data16
push
aas
out
add
pop
add
es
lods
jns
inc
or
jbe
imul
push
call
pop
punpckhbw
fidivrs
cmp
shlb
xor
sub
sbb
lea
xor
push
ret
data16
pop
sub
in
fisttpl
jmp
mov
inc
and
stos
cmp
lcall
add
xchg
push
ja
jo
loop
pop
push
jp
leave
mov
sub
xor
inc
out
mov
sti
jbe
add
movsl
cmp
test
xchg
mov
jle
addr16
adc
enter
or
add
loope
fadds
fsts
icebp
lods
inc
add
adc
pop
xor
sbb
pop
sub
rorb
cmpl
inc
inc
test
adc
loop,pn
dec
popl
cs
ljmp
or
or
aam
pusha
fiaddl
leave
imul
inc
push
adc
add
aas
daa
adc
add
adcb
cmp
pop
test
jb
cwtl
pop
test
jne
push
add
xchg
popa
jg
hlt
test
inc
stos
stos
lock
cmc
push
repnz
pop
pop
sub
jge
movsl
add
jo
ret
ljmp
cmp
loop
add
dec
pop
push
dec
jns
adc
sbb
xor
aam
pop
lock
inc
shl
add
lret
sub
pop
lea
movsl
mov
rolb
adcl
mov
pop
or
jmp
dec
cltd
insb
pop
and
mov
out
psubd
scas
mov
inc
push
into
xor
movsl
jbe
lea
xor
repnz
push
dec
es
or
jb
cmp
sbb
iret
push
sbb
lea
or
in
mov
bnd
incb
jae
add
mov
adc
inc
push
sbb
and
jge
push
sbbl
rolb
roll
mov
clc
jo
insl
sti
cmp
dec
dec
stos
inc
repz
inc
adc
or
js
pusha
or
dec
xor
cmp
push
sbb
rorl
mov
je
push
lcall
push
cld
div
add
pop
popf
je
mov
and
outsb
loop
sub
out
push
or
adc
adc
jne
shl
push
scas
xor
in
xor
and
shl
pop
outsb
sub
pop
sub
sarb
je
push
xchg
jmp
bnd
popa
pop
cltd
sbb
in
mov
adc
and
hlt
test
stos
push
or
mov
clc
sub
push
lea
fcmovu
mov
mov
cli
paddw
mov
pop
sbb
test
xor
pop
push
test
iret
dec
jns
inc
lock
sbb
mov
popa
or
cmpsl
addl
jae
aas
lock
cmpsl
cmp
mov
ret
imul
xchg
mov
mov
jl
pop
andl
stos
stos
mov
into
out
mov
jl
mov
out
and
pop
dec
into
and
inc
lcall
rorl
es
dec
xchg
push
cli
scas
shl
nop
sub
shlb
and
or
jbe
cmp
mov
in
add
mov
jne
adc
mov
pop
xchg
repnz
pop
stc
in
stc
in
add
mov
in
clc
xchg
add
jns
and
add
pop
stc
test
clc
add
inc
xchg
xchg
mov
or
jl
or
pop
mov
scas
inc
push
and
add
sbb
aam
add
mov
or
lock
nop
into
mov
stos
cmpsb
imul
mov
sbb
or
or
aaa
pop
add
lods
mov
or
push
or
or
loop
jne
inc
jmp
mov
sub
and
or
xchg
add
sti
pop
decb
lods
adc
enter
cmp
ja
push
test
push
jo
jmp
fs
mov
mov
cmp
into
add
popa
jmp
xchg
call
adcb
data16
mov
pusha
or
fmul
jmp
pop
iret
incb
mov
sbb
mov
jmp
notb
test
jbe
mov
adc
stos
mov
and
mov
pop
imul
jle
cmp
push
xor
ss
jmp
dec
push
sbb
nop
cli
in
push
jbe
xor
addr16
into
mov
pushf
push
cmp
add
sar
push
jmp
dec
stos
insb
pop
inc
push
mov
jae
mov
sub
pop
ret
push
insb
inc
mov
inc
fisttpl
push
pop
jge
pop
fstpt
test
nop
add
jne
pop
daa
mov
js
jae
imul
sbb
aad
cmp
jmp
and
mov
outsb
mov
or
decb
out
divl
out
push
sub
je
adc
gs
orl
iret
mov
push
and
dec
and
enter
mov
jbe
sub
mov
fisubs
je
mov
sub
jge
mov
mov
pop
insb
dec
sbb
cmp
adc
jge
add
testl
jmp
repnz
rolb
cmpl
lods
sbb
and
lds
mov
sub
stc
push
adc
aas
inc
xchg
add
sbb
jmp
push
cwtl
inc
loopne
mov
xor
mov
dec
sbb
sahf
add
mov
jne
xor
xor
push
jg
loop
cwtl
jge
neg
add
mov
orb
movsb
sub
cmp
icebp
inc
and
cmp
adc
nop
cmpsl
jne
push
sbb
cmp
push
mov
jge
jle
lock
xor
xlat
xor
jne
ja
lods
inc
add
dec
test
lods
sarl
push
add
sbbl
inc
and
cmpl
jb
mov
dec
mov
pop
cmpb
clc
xor
add
mov
jmp
fmulp
mov
mov
mov
ret
xorl
into
nop
fs
out
mov
mov
iret
in
fisttpll
mov
ja
push
stos
inc
ja
ja
mov
pop
mov
pop
icebp
mov
movb
testl
popf
xchg
jne
outsb
fldl
xchg
jne
inc
or
int
mov
cmp
jne
hlt
int3
or
data16
jne
mov
inc
or
test
rcrl
or
add
sub
mov
int
sahf
lea
mov
lods
push
scas
sbb
sbb
nop
icebp
dec
push
clc
je
lock
ja
dec
insl
xor
add
sahf
cmpsb
cltd
jbe
sub
sub
rcrl
push
stc
jg
add
xchg
orb
aaa
lock
js
add
rol
mov
shll
add
pop
bound
jmp
sub
rcll
mov
jae
bound
or
adc
inc
mov
mov
or
les
add
div
lods
mov
lahf
test
shl
shr
or
mov
push
imul
sahf
dec
jne
jne
xor
or
push
mov
enter
fimuls
jo
and
fiaddl
cmp
add
ficompl
shlb
pop
in
cs
or
in
fiadds
push
call
lds
fidivl
shlb
xchg
loopne
fmull
sahf
nop
dec
ja
ret
stos
sub
dec
add
cmp
sub
push
das
lret
into
jmp
ss
imul
jb
and
les
push
test
int3
test
bound
das
sub
add
loopne
mov
jns
sub
enter
movups
les
or
or
call
mov
xchg
add
mov
inc
add
or
ja
out
int
out
daa
or
xchg
push
subl
lods
or
data16
out
push
rcr
hlt
jmp
inc
jne
lahf
push
lcall
out
rcrb
cmp
mov
mov
add
scas
inc
insb
or
std
mov
mov
cmp
lcall
insb
pop
jbe
test
cmp
in
mov
sbb
dec
fidivrl
test
xchg
adc
inc
das
shrb
xchg
or
ss
cmp
je
incl
xor
mov
dec
cmpb
je
mov
jg
mov
cmp
pop
jne
dec
mov
inc
inc
mov
out
jl
sbbb
out
call
pop
call
push
sbb
pop
jae
sbb
clc
pop
xchg
into
rol
mov
pop
add
in
mov
xor
sbb
xor
repz
mov
lcall
divl
scas
xchg
cmpsl
adc
add
dec
cmpsb
sub
gs
mov
and
testb
sub
inc
popa
push
jmp
dec
std
cmp
fdivs
or
or
xchg
lods
add
dec
rclb
mov
dec
call
push
jle
dec
setg
sub
mov
inc
add
xchg
enter
add
push
movb
push
adc
rclb
inc
jle
add
loop
adc
push
ficoml
xorl
add
or
loop
lock
lcall
cmp
aam
jmp
sub
add
push
dec
mov
jg
xorb
aam
dec
ljmp
adc
jne
cmp
add
and
les
negb
daa
xchg
xlat
movsb
cld
xor
push
or
add
cwtl
aam
sub
add
add
cmpsb
scas
fiaddl
lea
and
dec
scas
bound
ja
xor
add
jecxz
sbb
aam
or
and
pusha
insb
push
andb
xchg
out
adc
mov
fadd
jbe
dec
addl
xchg
clc
dec
adc
insb
xchg
mov
aam
sub
adc
and
lods
movsb
jecxz
test
cmp
xor
enter
mov
xor
pop
rclb
and
cmp
mov
mov
inc
jnp
sbb
dec
pop
add
mov
fidivrl
cmpsb
push
dec
out
sbb
push
test
jno
mov
cmp
pushf
imul
pop
xchg
pop
or
fldl2t
call
cs
or
mov
or
fcoml
inc
test
push
add
lret
cli
adc
pop
inc
sbb
push
and
mov
mov
mov
jnp
outsb
fwait
or
or
dec
sar
lea
ret
arpl
add
fcompl
dec
pop
inc
popa
or
addl
lcall
mov
adc
add
imul
std
das
pushf
imul
and
add
pop
fcomps
jbe
movb
xchg
and
out
or
je
mov
mov
ds
neg
sbb
lds
in
sub
loopne
lock
ret
daa
xor
or
jne
or
out
sub
sahf
cmp
decb
test
mov
xor
aam
sbb
xlat
inc
rcrb
ja
mov
mov
sub
push
data16
orb
and
mov
sbb
mov
movswl
les
and
icebp
sbb
data16
fbstp
mov
ret
mov
add
sub
push
jo
shrd
push
jle
cmp
ss
fistpll
sbb
clc
mov
fisubrl
or
cmp
nop
stc
inc
xor
xor
out
xchg
clc
sub
mov
mov
inc
loopne
outsb
mov
inc
test
js
push
mov
mov
rorb
push
jo
adc
testl
and
push
pop
sbb
js
lods
adc
or
mov
inc
jmp
lock
gs
fidivrl
rorl
inc
jg
xchg
xor
jb
push
inc
shrl
js
xor
push
xchg
addb
pop
ja
les
push
jg
lods
jb
jbe
pop
push
fs
dec
xchg
out
mov
dec
pop
or
or
pop
xor
jmp
xor
daa
pop
mov
adc
jae
and
stc
mov
pop
or
daa
aam
sub
jne
scas
or
sarl
popf
je
int
call
sahf
jne
loop
loope
and
jb
jle
lea
and
lea
and
and
sub
dec
push
mov
andb
jmp
lock
inc
sub
mov
call
es
jne
orl
int3
jl
data16
push
mov
pop
xor
imul
into
mov
rol
adc
filds
test
mov
or
pop
je
xchg
xchg
add
push
rol
nop
dec
repz
cmp
dec
mov
lret
jbe
adc
cmp
lea
or
push
mov
clc
adc
enter
push
or
jmp
insl
cmp
mov
cld
jl
add
or
or
clc
dec
fimuls
push
shll
mov
sbb
scas
pop
ret
jge,pt
jle
inc
jle
gs
or
pop
aaa
jo
frstor
sbb
in
mov
sub
or
inc
je
fsubrs
ss
or
xor
add
leave
jmp
dec
dec
xchg
pop
or
add
push
inc
repnz
or
push
mov
mov
inc
inc
lods
xrelease
add
adc
in
das
call
jne
fmull
insl
push
pop
clc
fstps
add
stc
add
and
inc
jecxz
xchg
rol
sbbb
dec
rol
ret
vcomiss
add
sahf
insb
pop
arpl
lock
inc
cmp
dec
sbb
or
inc
add
cmp
add
cmp
clc
jmp
inc
sub
jb
sbb
push
cmpb
jne
jp
sbb
sub
or
xchg
shll
xor
jmp
fwait
stos
pop
push
inc
dec
xchg
insl
fcoms
sub
push
cmp
adc
xchg
pop
je
dec
xchg
pop
mov
jbe
dec
push
sub
test
cld
jle
or
inc
aam
ja
pop
mov
xchg
mov
hlt
sub
adc
mov
xor
sub
repnz
or
or
cmp
fwait
xor
sub
iret
shlb
jl
cs
xchg
pop
inc
mov
adc
push
dec
add
insl
inc
cmpl
mov
cmpl
sub
es
or
push
pop
jo
push
data16
push
mov
inc
push
adcb
rcrb
dec
xchg
imul
ss
dec
cli
sarb
mov
test
ret
dec
xchg
pop
rclb
adc
add
push
inc
out
je
mov
jge
sbb
or
pusha
mov
dec
sbb
adc
or
pushf
cmp
es
cmp
push
add
sbb
je
outsl
int
lock
subl
cmp
loopne
dec
inc
mov
mov
dec
and
je
inc
and
lcall
lret
or
dec
jne
push
push
jmp
fildll
outsb
or
jmp
testb
mov
adc
and
add
lret
aad
and
aaa
mov
xor
shll
cmp
push
or
fdivs
xchg
sbbl
add
fisttpl
sbb
jne
mov
adc
incl
jnp
addb
in
call
aad
cmpsl
mov
or
ror
arpl
orl
aad
add
push
decb
cmp
dec
push
add
lods
add
jg
mov
or
cmp
push
mov
pop
sub
xor
jns
js
pop
shlb
iret
mov
cwtl
push
jp
call
xor
or
dec
add
mov
rcrb
or
push
push
inc
dec
jecxz
jecxz
lea
cmp
xrelease
inc
pop
rcrb
add
ret
push
adc
adc
xlat
add
jge
notl
sub
cmp
push
pop
insb
jb
lret
addps
xor
add
inc
ret
sti
call
sub
push
arpl
daa
adc
and
xor
mov
cmp
inc
jmp
leave
and
xchg
syscall
adc
adc
push
addb
stc
inc
inc
test
push
sub
sub
push
cmp
imul
movd
add
pop
mov
mov
jmp
mov
sbb
push
lret
cld
jo
mov
push
lret
stc
xchg
or
adc
pop
jmp
adc
mov
and
rcrl
addb
in
and
shl
lods
pop
xchg
add
xchg
hlt
mov
push
push
add
fsubl
jo
andb
xchg
ljmp
cwtl
pop
mov
jge
fs
lret
mov
dec
cmp
movsb
cmp
sub
jmp
xchg
cs
bound
fcomps
rorb
pusha
sbb
ljmp
inc
jmp
push
lods
out
mov
jmp
add
push
arpl
adc
fimuls
nop
js
test
adc
test
aad
leave
pop
andl
fabs
push
pop
decl
leave
fcomps
xor
push
xor
pop
or
enter
add
lret
dec
mov
ss
sbb
xchg
mov
lods
jo
es
push
lock
cwtl
fs
out
pop
mov
sbb
popf
sbb
xor
mov
or
adc
scas
cs
sub
cmp
and
jno
adc
jo
mov
inc
sbb
mov
test
arpl
ds
mov
adc
js
sti
mov
dec
cmp
lea
or
jp
shr
add
or
dec
add
add
push
fcmovb
jmp
shr
or
mov
add
add
or
lods
add
scas
push
aad
imul
mov
mov
push
push
inc
sbb
sarl
or
fildl
cwtl
add
je
push
push
stos
adc
aam
push
clc
fnstcw
inc
adc
adcl
dec
add
lea
mov
shr
or
mov
adc
fimuls
jo
adcl
sbbl
adc
mov
and
xchg
jb
cmp
iret
adc
out
rol
sbb
jbe
movb
lods
rcll
shr
adc
add
mov
push
cli
push
fbld
or
shl
andl
adc
xor
add
ds
cli
stos
cmp
pop
pusha
imulb
or
test
adc
lret
test
je
je
mov
push
or
or
pop
and
dec
inc
cmp
cwtl
sbb
or
ficoml
fsubrs
cli
das
mov
outsb
int
add
negb
add
xor
mov
test
push
cld
sub
jne
fidivl
call
ss
and
push
inc
adc
push
test
jmp
outsl
nop
fs
lret
mov
mov
dec
pop
xchg
jle
sbb
jne
xchg
mov
jle
pop
int
sub
inc
xorb
push
push
cmp
cs
add
xchg
mov
inc
mov
pop
je
pushl
dec
cmp
lock
jl
cmpb
jl
xor
sbbl
dec
add
inc
xchg
adc
xchg
push
fsts
lds
stos
push
cmpsl
and
dec
inc
push
push
mov
push
push
fsub
push
xlat
inc
and
mov
inc
adc
rol
ljmp
adc
xchg
pop
or
fisubrs
sub
jmp
test
add
call
fildll
stc
and
aas
sub
ret
enter
out
or
test
jne
cmp
flds
mov
or
mov
dec
pusha
mov
loope
dec
jo
or
hlt
scas
or
ds
aam
and
xor
aam
loop
mov
adc
andl
scas
jne
movsw
xor
mov
loop
lea
mov
outsb
push
sbb
loop
hlt
aam
lret
rclb
push
sub
xchg
push
pop
int3
mov
lods
add
push
xor
in
je
mov
inc
inc
push
neg
testl
adc
adc
sbb
sahf
dec
sbb
aad
orl
adc
sub
sbb
push
push
inc
dec
rcr
fisubl
rcr
aad
icebp
lret
enter
sbb
insb
sbb
cmp
iret
jmp
dec
jne
jg
inc
minps
inc
cmp
jae
orb
sub
ret
ret
adc
and
shr
mov
pop
test
mov
mov
mov
in
lock
je
push
subl
fbld
andl
mov
mov
pop
lea
mov
insb
add
pop
and
call
xchg
cs
ds
sbb
in
cmp
push
sbb
into
jbe
jns
cmc
insl
sub
dec
sbb
xor
lods
ss
push
or
adc
mov
inc
jl
or
fwait
mov
mov
sbb
insl
test
push
pop
xor
lock
xor
inc
es
mov
or
test
cs
fimuls
push
arpl
and
inc
sbb
int
dec
pushl
dec
out
ss
xchg
lds
adc
push
js
mov
sbb
mov
cmp
testb
cli
lds
fists
or
je
nop
lock
ficompl
inc
mov
mov
shll
loope
scas
es
mov
je
test
jg
pushl
mov
push
cmp
ja
add
cmp
adc
cmp
jne
mulb
movsl
or
adc
lea
sbb
add
cmp
pop
jo
test
add
aam
orb
push
pop
mov
add
mov
call
add
jmp
push
dec
aaa
push
jbe
and
pop
mov
sar
adc
mov
ret
jmp
imulb
je
fildll
dec
cmp
pop
push
and
mov
aad
pushf
inc
pop
pop
cmp
pop
add
or
shlb
cmp
mov
jne
jb
inc
sub
xor
or
cmpsl
test
cmp
movsb
jmp
mov
push
pop
repnz
test
adc
add
cmp
mov
jb
addb
test
inc
mov
in
push
cmp
xchg
shlb
movsb
sub
mov
cmpb
xchg
inc
xchg
inc
outsl
lods
and
cmp
inc
lods
sbb
sti
test
add
inc
loopne
push
loopne
or
test
lds
add
sbb
adc
iret
pop
nop
jg
jns
pop
pop
mov
push
rcl
rcrl
aad
xlat
fcomp
test
fstpt
rorb
add
dec
nop
data16
imul
sub
mov
or
dec
sub
dec
popf
inc
idiv
sti
sbb
or
adc
ss
add
push
push
push
insl
adc
or
out
gs
imul
adc
movsl
push
push
jb
leave
call
test
push
pop
jo
jmp
icebp
adc
fucomip
jle
cmp
das
or
push
inc
fadd
push
sbb
and
adc
addl
sbb
fldcw
adc
xorb
sbb
outsb
adc
decl
test
or
mov
inc
mov
mov
xor
xor
mov
popf
test
loop
mov
pushf
cmp
or
test
adc
es
adc
sti
add
es
mov
pushf
push
add
sbb
mov
adc
loope
and
dec
movb
or
pop
dec
push
hlt
pop
ljmp
or
mov
and
lea
pop
sbb
movsb
subl
jae
xchg
push
xor
fisubs
xor
jbe
in
out
lea
ljmp
mov
inc
or
or
sbb
and
insl
inc
hlt
mov
rolb
push
dec
rolb
push
mov
iret
add
or
inc
sub
xchg
mov
cwtl
mov
push
sub
andl
adc
cmp
cmp
push
adc
sub
inc
xchg
cwtl
popa
mov
jge
jl
adc
dec
pop
add
and
rorb
pop
or
jle
jle
mov
sub
mov
add
or
adc
enter
cmp
or
add
push
push
lret
movl
clc
cltd
adc
inc
lods
ffreep
adc
insl
clc
out
sbb
inc
mov
jmp
add
inc
lods
pop
enter
lock
test
inc
sahf
cmpsl
mov
inc
cli
div
pushf
and
cmpb
sbb
rcrb
loopne
lret
pop
test
jnp
sbb
adc
lcall
adc
mov
jo
or
fs
shll
mov
xor
mov
icebp
loopne
and
int
jmp
iret
dec
rolb
xlat
mov
lock
push
inc
loopne
mov
mov
push
mov
lcall
push
sub
loop
out
jge
xor
xor
xchg
mulb
or
inc
daa
in
mov
adc
xchg
sbb
xor
fisttpl
sub
jne
rcrl
sbb
cmp
ss
inc
xor
dec
ss
sahf
or
push
cmp
dec
dec
inc
adc
mov
orl
or
ja
mov
sbb
rorl
mov
adc
insl
insb
inc
adc
lods
lods
rolb
popf
out
icebp
cltd
add
push
sbb
sbb
mov
imulb
sbb
sahf
xchg
test
add
and
or
jge
add
and
add
js
adc
cmp
jne
dec
in
jno
ljmp
sbb
adc
pusha
mov
jge
pop
test
sub
jle
sbb
insb
sbb
add
mov
push
add
push
nop
mov
jg
and
cmp
cmpsb
adc
dec
jle
out
adc
xor
or
lret
stos
xor
pop
shr
jne
adc
andpd
mov
out
daa
hlt
pop
sbb
neg
and
mov
insl
call
or
filds
loopnew
fadds
pop
add
and
add
jp
add
inc
pop
cmp
out
jle
xchg
sbbl
mov
sub
rorb
mov
push
sub
push
add
sub
faddp
es
ds
into
or
int3
xor
mov
test
clc
js
dec
mov
mov
inc
dec
enter
out
sub
shlb
add
add
xchg
pop
sub
or
add
in
andl
mov
inc
test
cmpsl
cmp
dec
nop
mov
mov
dec
cmp
jge
sub
cmpb
or
add
dec
cmp
cmp
mov
add
movsl
and
incb
sub
orb
add
mov
movb
mov
rcrl
pop
jp
jne
dec
mov
jb
fs
or
pushfw
adc
xchg
inc
ret
and
add
push
add
xor
mov
pop
aam
inc
or
dec
push
imul
fidivrs
ret
outsb
adc
jp
notl
shll
dec
les
pop
fimull
orb
adc
out
or
jmp
iret
out
sbb
or
add
or
pop
scas
movsl
xchg
add
adc
fsubrp
xor
push
cmp
mov
xor
pop
xchg
inc
pop
movsl
rclb
add
add
in
pusha
and
ret
mov
mov
inc
and
cmp
xor
into
cmp
into
mov
rolb
pop
and
pop
pop
loop
pop
push
das
cmpb
prefetchw
mov
adc
sahf
dec
cmp
pop
or
inc
push
pop
jae
or
rclb
or
add
add
fsubl
lret
lock
mov
mov
push
je
pop
pop
jne
scas
popa
adc
or
dec
pop
andl
mov
xor
and
enter
or
jp
stos
lret
addl
add
and
jle
fldcw
mov
cld
add
push
and
jo
enter
inc
stos
and
mov
addr16
into
xchg
cmp
in
out
mov
in
stmxcsr
adcl
pop
test
pop
ss
or
add
or
int3
dec
xor
adc
xchg
add
jbe
jle
pusha
mov
lret
je
and
sbb
inc
jg
inc
in
in
into
into
mov
stos
and
pop
sub
idivl
ja
pop
nop
pop
cwtl
pop
dec
pop
dec
andl
int3
or
shlb
or
pop
adc
test
nop
aas
fs
sbb
nop
dec
adc
or
adc
pop
test
mov
fadds
enter
test
and
pop
mov
and
inc
leave
adc
or
mov
jmp
cmp
test
lret
test
jo
push
xor
xchg
addb
pop
push
scas
push
pop
or
push
test
xchg
dec
xchg
ret
faddl
shll
ret
in
add
lret
mov
test
inc
cmp
into
jo
or
mov
xor
lret
sub
cmp
int
rol
fisubrs
cmp
jle
pusha
cmpsb
js
and
daa
or
and
call
jge
xor
xchg
inc
jl
or
dec
inc
mov
insb
lcall
dec
and
mov
scas
add
ljmp
xor
push
adc
pop
xor
push
orb
js
loopne
jmp
stos
add
sbb
jb
mov
mov
je
fisubrs
add
test
mov
cmp
cmp
jbe
inc
inc
leave
nop
jb
fsubrp
jmp
pop
sbb
or
lds
mov
sti
inc
push
mov
jo
jbe
add
jmp
fcomp
xor
push
test
lea
test
cmp
or
mov
cmp
mov
sub
sbb
jnp
shlb
stos
adc
loopne
jne
sbb
mov
test
mov
mov
mov
jp
pusha
scas
lock
or
stc
xlat
out
add
nop
jnp
inc
pushl
stc
adc
pushl
or
and
push
mov
out
je
and
hlt
jno
popf
xchg
fcoms
xchg
mov
mov
cld
out
enter
jge
sbb
shrl
jp
insb
and
add
je
test
push
sbb
hlt
jp
rclb
jbe
pusha
xchg
dec
inc
sbb
cmpsl
xchg
push
gs
decl
add
cmpsl
mov
mov
xor
pusha
push
xorb
dec
and
xchg
test
unpckhps
imul
push
add
adc
jns
push
pusha
lods
push
shl
push
enter
xor
dec
cmp
adc
adc
inc
add
push
sbb
or
sub
sbb
adc
sbb
jae
jmp
push
push
xlat
movsl
test
and
inc
or
sbb
sbb
popa
shrl
mov
mov
or
sub
sbb
dec
cmp
mov
dec
inc
aad
or
adc
notl
aas
adc
shlb
loopne
mov
adc
jmp
sub
xchg
aaa
dec
cltd
push
mov
fisubrl
shrb
push
push
sbb
add
int
in
out
sub
inc
cltd
fsubs
test
lcall
inc
mov
add
pusha
sub
xchg
clc
mov
out
pop
lock
dec
or
or
push
cmp
or
dec
inc
pop
ja
test
lea
std
je
mov
jg
xor
xor
call
mov
add
dec
pop
movsb
sbb
push
clc
push
push
xchg
test
lea
ss
push
push
ss
adc
ret
js
xor
int3
inc
dec
mov
jae
jae
fsubs
sahf
pop
adc
cld
push
stos
loopne
jmp
dec
loop
aaa
inc
dec
das
movsb
fisttps
int
sub
cmp
xor
mov
push
js
pushf
adc
or
mov
ret
shll
inc
xchg
outsb
stos
js
sbb
scas
mov
clc
push
rorb
fcompl
xchg
xor
in
sub
mov
aam
add
mov
hlt
push
es
mov
roll
arpl
cmp
lods
adc
cmpsb
inc
hlt
fcoms
pop
xor
sub
add
jo
sub
mov
mov
test
or
inc
inc
ds
add
and
sub
xchg
nop
sub
lret
or
pop
fildl
inc
mov
cmpb
or
adc
les
add
fmul
pop
xor
aaa
or
shlb
daa
xor
enter
aaa
push
sbb
and
test
aam
es
popl
add
mov
mov
inc
dec
imul
xchg
mov
add
inc
mov
js
push
xchg
mov
and
ret
mov
and
jl
dec
sub
popa
stos
outsl
cmpsb
div
cvttps2pi
mov
or
jmp
xchg
pop
je
daa
or
and
insb
sar
jae
push
ret
cmp
jmp
fsts
and
cwtl
xchg
xor
lahf
cmp
insl
xchg
or
das
xchg
jmp
cmp
xor
ficoml
test
adc
pop
in
and
xchg
and
jmp
int
xorl
aaa
test
sti
sub
adc
iret
sahf
cltd
js
mov
stc
mov
cs
ljmp
sbb
ret
imul
lock
or
call
cs
in
in
call
cmp
lods
int
sbb
xchg
or
mov
xchg
dec
jb
in
cmp
outsl
xchg
dec
adc
les
fcoms
sbbb
mov
pop
add
push
inc
test
adc
cmp
testl
sbb
out
sar
sbb
fcmovbe
push
or
shlb
pushf
mov
and
call
mov
jns
pop
nop
inc
mov
inc
lock
and
pop
xor
mov
add
xor
mov
dec
push
mov
fcompl
pop
or
mov
cmc
inc
pusha
jg
push
or
pop
add
dec
xor
nop
arpl
mov
push
test
sub
push
jb
jne
push
aam
cld
sbb
inc
push
pop
aas
repnz
adc
dec
sbb
jne
cmp
movsl
int3
out
fwait
in
inc
adc
cmc
mov
lret
std
inc
dec
xor
orl
rol
mov
aad
cmpsb
fcoms
js
shlb
mov
add
mov
test
xor
xchg
and
ss
sub
mov
in
jns
dec
dec
fidivl
xchg
movsl
pop
and
mov
repz
call
rcl
xchg
sbb
jl
dec
lret
les
dec
or
jb
aam
xchg
in
and
imul
jo
or
jb
ficompl
in
movups
mov
push
rorl
int3
movsl
fadds
push
and
ljmp
popa
outsl
fdivrl
lock
xor
in
push
sbb
bound
push
pop
hlt
add
test
bound
lock
pushl
fistpll
stos
push
inc
mov
xchg
mov
out
andb
mov
jge
fisttpl
pop
mov
jo
adc
dec
int
jge
cmp
or
pusha
jb
and
insb
fs
ror
pop
rorb
sub
adc
loopne
mov
sbb
xchg
xchg
arpl
xchg
and
pop
cmp
mov
mov
inc
out
shrb
test
dec
mov
jo
xor
add
pop
adc
or
adc
dec
xor
sbb
and
dec
xor
and
xor
xor
and
cmp
inc
enter
dec
fs
jne
insb
add
lods
ja
fnstenv
sbb
inc
add
mov
push
mov
loopne
rol
sbb
nop
add
nop
int3
rcl
imul
clc
hlt
pop
roll
cmp
mov
or
add
mov
addr16
jg
sti
xor
jp
addr16
wrmsr
leave
add
add
cmpsl
mov
pop
mov
lahf
arpl
fcompl
sbb
aad
or
pop
rorb
add
fcoml
xchg
hlt
push
xlat
movsl
imul
aam
xchg
rolb
dec
jne
lds
scas
lock
dec
push
xchg
push
fcoms
mov
in
ret
test
jo
or
or
push
popa
pop
add
stos
call
add
jge
adc
in
sahf
pop
insl
cmp
xor
or
inc
nop
imul
ja
push
adc
outsl
in
and
psubsb
sub
cmp
out
push
movsb
and
sbbb
insl
nop
daa
push
movsb
aad
lods
insl
subb
call
cmpsb
loopne
dec
call
cmp
mov
add
fiaddl
cmp
dec
xor
pop
fs
add
jns
insl
adc
mov
add
lock
mov
fs
fs
pop
mov
outsl
lret
and
ljmp
xchg
xor
mov
jnp
mov
dec
adc
scas
in
and
and
jo
adc
ss
popl
fwait
setle
or
mov
out
mov
ret
jmp
imul
enter
jo
mov
push
test
jo
pop
aad
add
inc
cmp
push
dec
or
in
in
fcom
push
jno
mov
mov
add
sub
xchg
fcmovnbe
shrl
xchg
xchg
xchg
mov
mov
xchg
enter
push
or
pop
lea
push
and
movsb
les
jae
sbb
fists
iret
cwtl
in
ret
sbb
pop
dec
clc
dec
add
fstpl
sub
push
mov
jae
xor
subb
int
cmp
push
inc
sbb
mov
ret
test
sarl
lds
pop
push
or
ds
push
dec
dec
cwtl
je
adc
and
inc
call
push
aad
ljmp
aam
adc
cmpsb
imulb
adc
fsubrs
pop
call
outsl
sbb
in
jge
mov
cmpl
loopne
xchg
push
cltd
test
call
xchg
movnti
std
fnsave
sub
or
sti
add
mov
je
sarl
sahf
add
inc
xchg
adc
stos
jecxz
stos
mov
xchg
xchg
imul
sti
jo
add
ds
or
pushf
pop
push
jecxz
mov
add
and
loopne
push
xor
and
mov
jo
and
imul
out
imul
lcall
jne
leave
mov
adc
cltd
fwait
in
fwait
pusha
inc
add
jo
adc
js
mov
push
inc
fs
xchg
jg
mov
mov
add
int
mov
add
jno
orl
or
mov
lods
or
sbb
jne
xchg
jns
shll
in
lock
add
dec
je
jo
movsl
loopne
nop
jns
dec
mov
mov
xlat
sub
xor
pop
mov
add
aaa
and
ret
dec
movsb
nop
add
popf
orl
add
add
int
push
sbb
jge
fildll
ret
lcall
movsb
mov
sub
fdivr
and
ss
inc
lea
insb
mov
pop
jmp
sub
sbb
and
sbb
xor
add
test
jnp
jnp
add
jae
sbb
cwtl
pmulhuw
je
add
aaa
or
or
xor
sbb
enter
or
and
xchg
or
sbb
daa
test
data16
sub
or
sbb
push
sub
insl
fcoml
inc
mov
jns
insb
je
xlat
cmp
mov
pop
pop
push
gs
enter
mov
test
mov
xchg
aad
xchg
xchg
sub
imul
repz
mov
and
dec
pop
mov
xchg
scas
push
imul
and
cmp
jg
add
sbb
push
lods
or
or
shlb
mov
subb
inc
add
add
lods
nop
decb
fstp
cs
popf
cli
or
push
dec
in
sbb
adc
call
mov
sbbb
in
cmpsb
add
push
and
insl
mov
pusha
gs
dec
sbb
xchg
adcl
or
push
lods
fiaddl
inc
roll
aaa
jo
sub
jno
xor
mov
je
adc
nop
sub
shlb
push
mov
push
xlat
lods
aas
daa
daa
daa
mov
bswap
enter
daa
daa
daa
mov
daa
daa
daa
xchg
cwtl
mov
sub
nop
dec
outsl
addb
adc
inc
movsl
outsl
adc
addb
sub
stos
and
xchg
ret
push
in
shlb
test
or
call
cmp
test
mov
ret
jae
push
mov
stos
int
or
xchg
nop
shll
mov
lds
movsb
jno
push
leave
adc
icebp
mov
pop
enter
mov
pop
and
xchg
aad
sub
mov
mov
add
and
cwtl
test
les
xchg
adc
sub
pop
fsubl
push
loopne
xor
push
xchg
xchg
mov
in
xlat
mov
rclb
lcall
pop
xchg
mov
mov
jnp
lds
jg
cmp
insb
sti
xchg
sbb
adc
movsb
nop
in
cmp
fs
inc
mov
daa
fcompl
inc
sub
cmp
maxps
mov
or
xor
fdivs
sbb
cmp
and
les
mov
aas
pextrw
add
sarb
rcl
loopne
fisubrl
lods
sub
or
mov
fdivrl
mov
sbb
adcl
lock
insb
mov
insl
mov
outsb
loopne
and
scas
aam
xchg
xchg
enter
or
aad
xchg
add
mov
fdivrs
in
or
cmp
popa
xchg
ret
jae
inc
sti
xchg
sbb
or
dec
sahf
pop
aam
push
mov
inc
call
xlat
mov
push
inc
sbb
arpl
nop
out
int3
adc
iret
mov
enter
fadds
das
mov
mov
pop
or
and
ret
mov
cwtl
or
lock
mov
mov
adc
fcoms
mov
fmuls
ret
or
nop
mov
add
adc
jno
pop
adc
adc
fidivrl
lea
bound
sarl
sbb
lock
mov
nop
mov
orl
ret
shr
xor
xchg
jnp
fistl
xchg
push
test
dec
xchg
push
popa
adc
pop
sub
or
cmp
push
dec
in
sti
enter
test
xorl
pusha
out
cmp
in
push
sbb
subl
ret
mov
popa
into
enter
inc
inc
cld
iret
inc
sbb
pop
xchg
mov
xchg
cwtl
cwtl
jl
mov
sbb
pushf
fisubrs
loop
and
fdivrs
cmp
mov
dec
out
inc
int3
enter
and
insl
xchg
roll
shlb
lods
pop
aam
pop
aaa
sub
xor
xchg
adc
sete
ret
mov
int
adc
pushf
cmpsb
dec
rolb
cwtl
das
mov
dec
mov
sub
sub
pop
xor
call
xchg
enter
mov
and
push
push
add
mov
pop
movsl
and
das
mov
or
mov
ljmp
popa
push
psubsb
adc
adc
cltd
mov
xor
jae
fadd
jecxz
mov
sub
and
pusha
sub
dec
scas
enter
mov
mov
push
dec
jo
mov
pop
movsb
xchg
mov
cmpsl
mov
inc
lock
xchg
sbb
fcoml
inc
andl
test
fcmovnu
fiaddl
lock
rol
dec
sbb
inc
lret
cld
gs
addb
sub
inc
lret
ret
lahf
xchg
xchg
imul
sbb
out
xchg
fwait
mov
sbb
dec
sub
in
adc
or
in
push
in
movsl
add
lcall
call
fimull
bsf
add
mov
pop
out
dec
cmc
xchg
sub
lods
push
mov
inc
daa
ret
roll
les
dec
dec
enter
jo
jo
ja
fwait
and
xor
add
mov
xor
cwtl
or
mov
push
xlat
mov
ret
inc
pushf
cmpsl
sbbl
lock
lahf
pop
add
sbb
enter
test
or
enter
dec
out
mov
roll
mov
dec
mov
jbe
lods
das
fsubrl
xchg
test
pop
mov
adc
nop
inc
mov
out
pop
pop
insl
push
daa
nop
iret
pusha
out
out
sahf
rorl
loop
jmp
insl
and
mov
test
lds
rorb
mov
scas
lods
pop
rorb
cmp
dec
insb
lahf
ficoml
ljmp
imul
test
insb
or
aam
insl
pop
pop
xor
or
push
mov
push
popa
sub
push
bound
mov
test
jo
shll
mov
fisttps
lcall
imul
lock
stc
paddsw
insl
bound
outsl
mov
in
sub
xchg
ret
int3
int3
dec
je
cmp
fsub
mov
dec
or
icebp
das
test
adc
test
lea
xor
bound
or
popf
lods
mov
arpl
lods
bound
adcb
in
fldl
sbb
adc
add
mov
pop
out
fcompl
adc
push
aam
rcrl
int3
sub
ret
and
or
xchg
pushf
pusha
iret
or
push
lods
ss
jg
adc
jp
movsl
ljmp
movsb
pop
movsl
adc
mov
jbe
push
xor
mov
fmuls
inc
dec
mov
fwait
mov
adc
imul
les
inc
jb
in
cmc
pusha
cmpsb
test
shl
mov
je
cmpsb
cmp
sub
scas
repnz
adc
outsb
inc
cmpb
stos
or
cltd
add
mov
add
pushf
cmp
add
rorb
imul
movsb
sbb
add
outsl
ret
inc
fcoml
add
inc
mov
imul
jg
dec
inc
add
cltd
nop
lret
mov
or
enter
sub
sti
xchg
scas
jb
jo
loopne
iret
or
pop
negl
cs
andb
jl
and
fsubrp
add
dec
and
cmpb
jecxz
aas
in
cmpsl
aas
bound
pop
insl
jb
rcrb
adc
or
pop
movsl
lds
fs
add
int3
xchg
inc
sub
xchg
fs
push
or
ficoml
xor
mov
test
mov
mov
lods
inc
pop
push
or
shrb
insl
cmp
test
xchg
or
shlb
cwtl
dec
push
xchg
xchg
subb
cmpl
xchg
xchg
sub
repnz
mov
lods
jns
cmp
dec
cmpsb
dec
js
push
andb
mov
dec
jb
cwtl
pusha
dec
cmpsb
fs
inc
push
dec
push
fmuls
sub
lock
inc
jbe
fdivr
js
mov
inc
pinsrw
loopne
add
or
or
movsl
push
xor
push
lods
aas
lock
sbbb
push
pop
xchg
cmp
mov
aad
add
add
and
jb
add
xor
xchg
adc
test
and
in
adc
xor
inc
int
aaa
cmp
fimull
out
adcl
lcall
leave
mov
add
in
and
roll
add
inc
sub
std
in
add
dec
sub
sti
add
ja
or
jo
jo
lea
push
sub
out
inc
add
test
in
andl
sub
faddl
push
sub
mov
andl
add
jbe
mov
fdivrl
std
xchg
pop
insl
push
invd
pop
das
xor
mov
fildl
loopne
test
or
mov
das
or
or
xor
les
add
pop
aam
jge
lock
lahf
sbb
test
dec
mov
shlb
call
lods
inc
mov
adcb
test
mov
inc
aas
push
jb
cld
adc
ficompl
shrl
jb
push
call
dec
in
add
rolb
push
inc
inc
or
mov
clc
xchg
xchg
adc
jae
mov
inc
add
mov
fbstp
push
dec
test
dec
push
aas
stos
adc
xor
subl
push
add
or
loopne
mov
dec
fadds
and
scas
xchg
inc
cmpsb
add
adc
xor
push
pop
insb
mov
aas
fwait
nop
test
push
add
aaa
stc
push
xchg
aaa
mov
mov
sub
adc
and
sub
xchg
pop
push
mov
or
sub
pushf
shlb
adc
push
gs
mov
push
or
push
add
push
adc
jne
adcl
xchg
test
adc
mov
push
aam
pop
mov
mov
push
mov
in
faddl
call
loopne
mov
andb
or
rcrb
push
loope
popa
dec
add
lahf
sub
lods
in
add
inc
repnz
jno
sarb
mov
je
das
fwait
mov
mov
cmp
pushf
mov
cmpsb
dec
xor
jl
pop
cmpl
xchg
dec
hlt
pop
push
fs
dec
es
push
dec
add
add
xchg
xor
xchg
movsb
mov
and
rclb
stos
adc
add
adc
les
xchg
mov
add
add
and
jo
push
dec
test
xor
and
aam
rorb
adc
mov
sbb
push
xor
rorl
add
mov
cltd
je
mov
cmp
jecxz
or
je
sub
dec
adc
pop
lahf
cmp
mov
dec
add
orb
mov
add
sub
mov
dec
nop
and
repnz
mov
lahf
aam
stos
xchg
dec
int
imul
aam
mov
or
cmpsb
pusha
outsl
mov
mov
pop
inc
pop
mov
pop
pop
leave
or
mov
movsb
dec
stos
dec
cmp
jg
rcrl
dec
scas
inc
or
inc
pop
das
fsubs
and
and
and
enter
xlat
add
push
rolb
mov
sub
pop
fwait
sbb
fistl
mov
and
inc
adc
pop
lock
lcall
mov
push
sbb
sub
mov
push
push
das
lods
test
rcl
inc
test
mov
jmp
push
popf
pop
jmp
rcr
jmp
sbb
in
fildl
pop
test
js
nopl
jo
add
and
and
adc
push
dec
shrb
out
loope
movsb
xchg
cltd
test
pop
loopne
cmp
orb
popa
es
in
fsubrl
add
les
shll
inc
xchg
or
xor
lcall
xchg
cmp
call
bound
mov
add
adc
je
mov
sbb
adc
adc
lds
or
in
push
cmp
lock
les
movb
inc
in
jmp
jge
in
mov
subb
mov
insl
cmp
fbstp
rorb
nop
lret
les
fcom
add
sbb
sbb
adc
mov
outsl
aam
mov
and
dec
in
imul
inc
clc
stc
fisubl
push
sti
insb
adc
cltd
or
sbb
jb
jo
cli
mov
sti
cld
cli
xor
and
scas
fs
cmp
and
add
and
hlt
add
adc
and
lods
inc
mov
jns
daa
pusha
sti
mov
xor
mov
inc
cmp
ficoml
xor
and
sub
or
mov
or
sub
push
dec
xor
inc
and
cli
call
or
nop
movsb
les
add
test
adc
mov
push
shlb
movsb
cmpsb
ror
roll
stc
les
test
push
and
push
and
das
decl
dec
faddl
dec
push
popa
mov
nop
xorl
leave
push
xorl
mov
push
dec
add
sahf
push
and
adc
repnz
mov
ficompl
hlt
sub
dec
push
mov
ficomps
notb
test
sub
cmp
loop
and
jbe
mov
in
jp
mov
scas
mov
jge
adc
aam
push
aaa
or
movl
jle
adc
add
aaa
in
fcmovu
or
int3
mov
sub
inc
cs
mov
mov
cmp
jmp
pop
cmpsl
rclb
mov
xor
dec
mov
pop
sub
mov
xchg
pop
test
or
or
jae
lock
jge
sub
sub
mov
and
and
je
out
xorb
js
sub
icebp
pop
dec
sbb
aaa
adc
ror
mov
fs
ret
push
scas
mov
out
pushf
cmp
mov
adc
add
iret
jmp
add
xor
pop
jne
cmpsl
stc
cmp
add
lds
jbe
mov
jns
xlat
call
repz
add
push
mov
scas
xchg
push
outsl
in
adc
push
mov
mov
cs
and
inc
or
ljmp
dec
mov
fistpl
or
jnp
mov
add
imul
mov
push
iret
repz
nop
mov
bound
xchg
inc
inc
inc
inc
dec
dec
dec
dec
mov
dec
dec
dec
mov
push
jg
pop
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
pushl
ja
jns
xor
xor
xor
ss
cmp
sub
leave
adc
mov
rcll
xchg
cld
incl
or
cmp
rclb
cmpl
loope
xchg
in
test
in
imul
push
stos
mov
outsb
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
push
mov
insb
xor
cs
insb
push
bound
and
pop
popa
je
outsl
outsb
flds
inc
push
stc
mov
add
aas
rdpmc
add
smsw
jnp
pop
incl
sub
add
pushl
inc
outsl
jb
js
je
jb
gs
cmp
jbe
mov
add
add
add
add
orb
push
gs
push
je
mov
popa
jb
aam
mov
dec
push
outsb
dec
xor
sub
adc
cmp
cmp
cmp
fs
dec
and
jns
cmpsl
jge
mov
push
das
das
adc
push
dec
push
inc
fcomps
push
insl
bound
daa
dec
outsl
jbe
ds
sar
arpl
push
jo
sub
addr16
rcr
orl
xchg
rcll
imul
bound
out
or
mov
cmp
jns
ja
cmp
jg
addr16
push
jne
xor
cmp
lahf
mov
daa
mulb
push
scas
clc
sbb
dec
jae
mov
js
push
jne
xchg
pop
imul
dec
inc
ds
popa
das
jo
or
pop
fcomip
mov
mov
mov
push
incl
add
fadds
xchg
rcr
mov
les
push
and
lahf
loop
and
sub
sub
cs
movsl
les
stos
jg
cmp
pop
pop
jg
stos
inc
mov
cmp
jge
jg
jo
mov
cmp
inc
test
cmp
and
push
pop
or
fadd
mov
pop
push
inc
insb
jae
mov
push
fs
mov
cmpsl
dec
mov
mov
fwait
in
int
xor
insl
and
jb
fucomp
in
pop
jbe
dec
push
push
sbb
inc
mov
fimuls
inc
and
add
xor
or
sbb
push
jo
imul
push
pop
mov
je,pn
test
mov
xchg
idivb
adc
inc
and
fs
mov
mov
push
insb
gs
xor
popa
and
daa
sbb
insl
mov
jne
pop
xor
and
and
fidivs
adc
inc
cs
lock
loopne
xor
mov
jnp
pop
push
mov
lcall
cmp
dec
mov
xchg
and
or
imul
popa
add
or
fs
popf
jmp
and
push
mov
rcr
xorl
cmp
push
or
fidivrl
popf
jb
loopne
outsl
mov
xchg
fcmovu
push
daa
sub
dec
addb
das
arpl
cmp
adc
dec
popa
sub
mov
pop
pop
push
idivb
inc
xchg
insb
imul
xchg
xor
int3
or
add
sbb
push
lcall
ret
insb
popa
pop
xor
add
mull
push
push
mov
sbb
cmpsb
cmp
sbbb
xor
shll
and
cwtl
add
pop
dec
add
add
fisubl
outsl
outsl
sub
and
je
pop
roll
cli
jbe
add
sarb
push
mov
adc
gs
or
lds
pop
mov
inc
jle
outsl
push
outsl
mov
arpl
lcall
bound
cmp
jecxz
mov
ljmp
imul
sub
outsb
popa
pop
or
in
inc
jno
push
aas
into
add
push
push
leave
nop
lds
add
imul
xchg
fnstsw
adc
or
or
and
and
adc
popf
lret
cmp
addr16
jae
xor
pop
pop
popf
push
pusha
jo
sub
test
jo
jb
push
sub
or
aas
lret
inc
sub
pop
dec
jmp
dec
or
jo
and
cmp
mov
mov
imul
inc
inc
cmp
pushf
mov
push
push
dec
cmp
jg
pop
fisubl
pop
loopne
add
cmpb
rol
das
dec
mov
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
or
xorl
push
adc
push
loop
imul
or
gs
popa
dec
add
adc
jg
js
js
mov
jae
je
pop
dec
pop
add
and
ja
sub
sahf
leave
icebp
imul
xchg
adc
int
add
adc
add
add
add
add
imul
pop
pop
or
aaa
ds
push
pop
xlat
in
pop
jns
and
or
pusha
add
js
jbe
data16
pop
sub
add
sbb
cmp
addb
push
xchg
test
int
lods
add
orb
popf
fnstenv
push
and
sub
jb
sbb
in
int3
push
jo
add
and
dec
cld
inc
xor
xlat
push
stos
mov
js
jo
dec
rorb
jb
fcoml
sbb
pop
jb
or
leave
and
out
adcb
inc
pop
dec
sub
xor
test
ds
pop
jo
or
add
ret
pushf
and
cmp
daa
pushf
jo
pop
data16
sahf
jo
je
nop
sahf
push
pop
in
mov
int3
push
fsubrp
lret
mov
mov
pop
cltd
nop
fwait
stos
and
sub
dec
push
and
adc
nop
sub
test
orl
fadds
in
addb
in
andb
push
add
sbb
add
mov
inc
cmpsb
add
ja
stos
pusha
push
mov
dec
adc
aaa
add
pusha
inc
push
test
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
cli
jmp
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
stos
dec
or
mov
rorl
inc
add
call
roll
sub
test
sbb
push
repz
outsl
ja
inc
cs
mov
gs
bound
dec
stos
dec
cmp
dec
popa
mov
mov
in
repnz
lea
jbe
in
mov
gs
outsl
js
push
push
inc
push
mov
imul
in
lods
xor
daa
add
insb
sti
pop
jbe
in
dec
imul
mov
inc
insl
jnp
jb
jo
ds
and
push
pop
fildl
inc
jns
daa
pop
pop
in
adc
push
jns
mov
shlb
aad
lcall
addr16
cmp
outsb
mov
rolb
push
mov
adc
push
out
in
add
inc
jbe
push
outsb
pushf
push
push
lahf
fs
cwtl
sub
dec
dec
pop
ss
popl
rorl
push
add
push
pop
insl
xor
dec
dec
movsb
nop
les
sub
pop
push
push
jae
stos
popf
dec
jp
aas
cmp
insb
call
push
or
mov
das
outsb
gs
mov
or
xchg
and
push
push
dec
testl
insb
jne
repnz
mov
into
mov
xchg
push
lods
scas
dec
jge
sbb
cmpl
mov
inc
call
jo
fbstp
push
adc
and
xor
jg
popa
jl
fcoms
mov
sub
or
pop
das
je
push
mov
xchg
daa
xchg
mov
rcrl
jmp
popw
pop
cmp
out
scas
stc
cmp
add
ds
sub
data16
sub
es
jle
sub
sub
fcmove
cmp
sub
sub
ret
gs
push
cmp
je
lahf
xlat
jmp
cmp
in
mov
inc
dec
pop
pop
cwtl
cmpsb
shrl
addr16
push
jb
imul
push
lret
sahf
sbb
push
cwtl
pop
popa
pop
and
es
xor
sub
out
outsb
xchg
loope
add
clc
loopne
out
sahf
in
loopne
enter
iret
idivb
lcall
in
xor
out
test
loopne
xchg
and
out
iret
push
nop
push
mov
out
je
pusha
jmp
insb
push
dec
sub
jns
fs
in
xchg
call
add
jns
repz
pop
push
push
push
les
out
fidivrs
dec
push
dec
push
inc
inc
cmp
out
sahf
cmp
sub
and
mov
or
repz
mov
out
repz
sbb
fiadds
mov
cwtl
jo
inc
inc
cmp
add
loopne
sahf
out
les
int
add
fadd
pushf
jo
imul
pop
aam
push
sub
lcallw
std
jns
dec
jns
push
xor
add
ljmp
cwtl
cmpsl
pop
push
cmp
cmpsb
bound
fs
sbb
jae
jb
xor
push
in
dec
lods
pcmpgtw
xor
add
jle
push
mov
mov
inc
inc
dec
jae
insb
inc
gs
insb
mov
sbb
ljmp
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
fbld
dec
inc
add
adc
sub
adc
nop
inc
es
call
popa
into
mov
mov
jnp
inc
loop
mov
cld
cmpl
inc
pop
clc
lret
sbb
in
jg
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
fcomip
das
jno
in
fstl
mov
and
xchg
out
xchg
cmp
dec
imul
lret
add
inc
xor
mov
mov
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
std
lcall
pop
and
xchg
lret
sahf
icebp
mov
cld
or
call
xor
cmp
inc
mov
xchg
push
pop
mov
ds
dec
mov
scas
lods
mov
iret
adc
mov
ret
mov
or
icebp
pop
pop
repnz
jg
dec
xor
and
es
mov
sbb
inc
pop
jle
add
push
ficompl
mov
or
mov
xchg
insb
mov
jns
mov
dec
test
push
mov
jo
push
inc
inc
or
outsb
jbe
and
add
push
lock
inc
popf
push
loope
and
gs
es
js
xchg
mov
sahf
cmp
dec
push
dec
push
cs
sti
ljmp
push
into
mov
or
or
sub
adc
adc
das
inc
aaa
push
sti
decl
inc
pop
push
ss
push
dec
sbb
push
adc
adc
sbb
jge
imul
adc
pop
jno
jb
jbe
jnp
out
fildl
dec
ss
inc
xor
xchg
add
adc
mov
jg
dec
and
adc
sbb
or
sub
push
dec
push
push
mov
std
mov
adc
add
and
lods
push
and
pusha
mov
ret
ds
sbb
add
mov
mov
sub
or
push
adc
inc
fimuls
dec
sub
xor
lahf
jecxz
sbbb
push
cmp
jnp
outsb
jg
add
or
push
xor
pop
inc
push
adc
push
push
or
dec
add
or
dec
adc
push
or
add
xor
inc
inc
ret
andb
push
mov
push
or
jg
scas
addr16
push
sub
push
sbb
es
test
je
lea
outsl
fwait
mov
xor
and
mov
fnstsw
cmp
pop
ds
adc
xor
mov
xor
pop
adc
and
das
sbb
imul
adc
scas
fucom
pusha
and
dec
aaa
sub
int3
dec
sub
in
orl
pop
jle
xor
ja
jg
sub
adc
adc
js
sub
ljmp
push
cmp
push
push
mov
jb
fnsave
sbb
add
mov
jb
xchg
or
push
xor
incl
push
pop
inc
sub
xor
mov
dec
add
inc
cmp
mov
sub
lcall
inc
jo
or
ja
icebp
movq
pop
pop
mov
pop
adc
inc
mov
add
fs
nop
dec
cwtl
in
add
and
mov
xor
stc
xor
adc
push
nop
push
mov
iret
jnp
cmpsl
rclb
mov
push
xor
outsl
jg
iret
push
sahf
jnp
pop
mov
cmp
jae
push
push
xor
and
negl
or
testl
or
and
push
or
jp
sahf
loope
adc
push
popa
push
and
mov
push
push
or
sub
push
popa
inc
pop
mov
mov
add
imul
mov
cvttps2pi
jbe
into
push
jbe
push
and
cmpsl
jnp
out
mov
out
add
jns
xorb
fdivp
cmp
jo
es
mov
push
push
mov
add
cmp
ds
xor
mov
outsb
ss
adc
or
dec
mov
push
ss
push
pusha
push
cmp
and
xor
sub
or
sub
sbb
das
push
adc
and
inc
jbe
mov
out
pop
sbb
push
pop
aas
sub
push
scas
out
fisubrl
pop
nop
or
jmp
sub
outsl
out
jne
push
and
dec
push
dec
cmpsb
push
or
or
xchg
jb
inc
mov
cmp
or
jb
cmp
in
adc
inc
pop
cmp
xor
push
sub
test
pop
push
inc
adc
sub
outsb
xor
pusha
sub
sbb
daa
inc
shll
jp
ss
sub
mov
sub
or
mov
push
iret
xor
dec
cmp
rclb
pop
ja
ja
push
sti
jae
ss
cld
sbb
fs
xor
out
pop
xor
cmp
pop
adc
mov
scas
jge
or
mov
fs
cmp
outsb
scas
das
dec
pop
push
sbb
jo
pop
test
inc
xor
cmp
sub
int
rclb
sbb
jl
cmp
jae
xor
pusha
insb
imul
adc
cmpsb
out
and
pop
push
inc
and
push
fadds
fdivrs
push
daa
loopne
and
push
and
sbb
inc
inc
daa
mov
cltd
ss
out
pop
or
push
push
ss
and
mov
pop
pop
sbb
mov
adc
adc
mov
mov
scas
daa
cld
sub
jl
sub
add
outsl
or
or
mov
mov
test
and
mov
inc
sbb
or
and
jnp
in
add
push
xchg
daa
daa
push
or
or
add
or
push
xor
ja
mov
adc
pusha
dec
in
aaa
adc
lea
fstpl
es
imul
xor
cmp
dec
out
adc
pop
cltd
into
scas
daa
push
xchg
xlat
int
xor
in
or
sbb
pop
pop
ss
mov
inc
push
adc
lock
jmp
xor
mov
dec
iret
sbb
imul
inc
es
incl
push
cmp
dec
push
or
cmpsl
pop
cli
push
fildl
or
add
push
cmp
pop
outsl
or
dec
clc
stos
add
jg
insb
jne
pop
jle
xlat
into
xchg
mov
dec
dec
sub
movsb
sub
stos
mov
addl
push
shrb
inc
sarl
mov
inc
lret
and
cs
idivl
outsb
lcall
xor
xor
bound
xor
pop
push
js
inc
jnp
inc
pop
ss
mov
xchg
jbe
lea
fs
into
mov
pop
push
jbe
push
add
sub
push
or
or
add
jae
mov
cmpl
icebp
pop
ja
xchg
sub
mov
adc
popa
push
je
or
and
shll
das
adc
loopne
dec
adcl
dec
fbstp
ljmp
inc
cmp
xor
sbb
fwait
aaa
push
loopne
ret
push
aaa
cld
pop
inc
or
aaa
mov
jp
xor
jl
xor
or
pop
dec
pop
insb
loopne
movsb
sbb
inc
push
mov
aam
jns
popa
jne
push
pop
pop
ja,pt
and
mov
es
add
xor
aaa
jp
ret
push
push
push
and
sub
dec
push
rcr
cmp
pop
pop
es
xor
or
mov
and
jne
sub
cmp
push
pop
call
and
pop
mov
pop
mov
scas
dec
mov
cmp
push
dec
push
fiaddl
or
add
pop
daa
arpl
fistl
les
mov
fcoms
lea
mov
lcall
sub
jae
nop
out
adc
or
and
push
adc
inc
and
mov
pop
sub
jp
pop
xchg
jmp
es
outsl
jb
testl
data16
push
push
lock
mov
daa
and
jae
popa
cmpsb
shlb
xchg
aas
insb
daa
inc
xor
xchg
daa
fiadds
and
xor
js
add
push
add
and
adcl
push
push
mov
ret
in
sti
mov
out
loopne
inc
call
ds
inc
add
sysret
test
xor
sub
adc
call
pop
mov
lahf
jae
or
or
cmp
or
adc
pop
dec
inc
xor
insl
sub
call
sub
xor
sarb
add
inc
push
push
jge
cmp
push
sub
push
push
lret
pusha
repnz
mov
and
jle
xor
out
push
adc
push
xor
jbe
jmp
cmp
xchg
into
call
fmul
into
mov
pop
aaa
leave
adc
ret
daa
and
or
dec
enter
xchg
sbb
inc
xor
lcall
inc
push
les
cmp
xchg
inc
mov
inc
sub
scas
pop
jge
push
adc
or
and
gs
or
adc
ss
lods
or
dec
ds
call
adc
add
push
mov
pop
or
xchg
int
out
adc
or
pop
mov
sub
sub
sbb
xchg
addr16
inc
add
add
dec
sub
inc
dec
inc
arpl
ficoms
lock
mov
and
lock
repz
in
lods
rcrb
cli
daa
loopne
push
pop
shr
lods
mov
daa
push
das
adc
gs
push
push
in
push
jo
and
adc
cli
jle
rcll
pop
cmp
ret
pop
pop
jbe
adc
inc
enter
mov
sbb
inc
and
sbb
adc
es
pop
mov
sub
sbb
inc
add
test
mov
or
xor
pushf
xchg
jo
cli
jnp
sub
ret
js
sbb
ja
lcall
adc
jmp
out
mov
adc
sbb
and
adc
ja
lds
pop
fldl
cmp
or
sbb
xchg
fmuls
pop
sbb
dec
es
pop
add
and
inc
cmp
nop
dec
cltd
pop
and
and
xchg
jo
pop
cmpsl
push
les
sbb
popl
stc
cmp
mov
mov
daa
xchg
dec
xor
testb
dec
push
dec
sub
dec
pop
inc
or
mov
dec
sbb
jnp
sub
aaa
mov
push
and
adc
aaa
loop
je
outsl
and
cmp
or
cmp
pushf
jnp
or
fstps
and
push
lods
inc
ss
adc
scas
pushf
xor
ficoms
dec
add
and
and
pop
sbb
jbe
cmp
inc
push
push
or
leave
dec
nop
bound
sub
add
bound
insb
or
insl
ljmp
mov
inc
hlt
inc
fstpt
pop
sub
cmc
and
adc
ss
pop
push
add
xor
push
and
push
and
or
sub
pop
fsubrl
mov
imul
adc
dec
xor
push
or
push
inc
or
subb
add
or
sub
fmuls
and
adc
cmp
xchg
stos
mov
mov
outsb
cmpsb
pop
lcall
daa
fistps
cmp
mov
pop
inc
cmp
lods
pop
jge
dec
shr
pop
divb
adc
or
adc
movsb
lret
fmul
inc
cmp
adcl
lds
jo
push
imul
mov
xchg
push
mov
mov
mov
sbbb
cmp
stos
pop
imul
inc
sbb
clc
inc
add
jae
insl
pop
sub
in
jge
sbb
and
jbe
das
sbb
adc
jo
fimull
inc
sub
shll
xchg
dec
movsl
xchg
call
and
mov
jmp
bound
jne
inc
imul
sbb
int
sub
mov
or
inc
cmove
cmp
and
add
stos
insl
movsb
sar
push
adc
cmp
push
xor
adc
rol
push
aaa
xorl
cwtl
or
cmp
xchg
dec
push
mov
jno
adc
das
dec
xchg
inc
jb
fsubs
dec
daa
inc
and
pop
incl
push
push
xor
adc
fs
lods
jmp
push
push
add
push
and
jo
push
dec
jg
imul
scas
scas
xor
adc
lock
aaa
add
add
nop
push
cmp
stos
pop
mov
popf
and
pop
daa
out
cmpsb
add
adc
xchg
or
ss
pop
mov
js
sub
cmp
or
and
push
sbb
xchg
jp
push
ret
inc
daa
sub
hlt
cmp
loop
sbb
adc
adc
dec
sbb
pop
adc
lods
cltd
hlt
cmp
inc
inc
pop
std
int
xchg
dec
adc
and
data16
sbb
push
inc
inc
or
inc
or
jo
cmp
insb
push
ret
lcall
idivl
mov
or
push
icebp
aaa
mov
add
jmp
add
aaa
aaa
imul
or
xor
ss
or
outsl
jo
insb
gs
ja
fs
data16
push
push
aas
jno
outsl
jb
jp
push
inc
and
outsl
bound
add
sbb
jo
sarl
sub
das
pop
add
pop
inc
jb
jge
sar
outsb
push
ss
lcall
mov
add
leave
inc
mov
idivl
mov
push
lret
push
into
push
jo
ss
int
or
aad
fadd
fisubl
out
imull
fisubs
filds
loopne
out
jge
or
in
icebp
push
shl
rorb
or
inc
adc
sub
pop
add
push
mov
push
dec
dec
jge
sbb
jg
aaa
shlb
mov
mov
fucomip
sbb
ljmp
mov
ja
mov
lods
pop
dec
movsl
enter
jmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
das
mulb
sub
mov
sbb
mov
inc
jge
jg
xor
pop
sbb
addl
cs
pop
jg
or
pop
test
xor
dec
xchg
pop
shr
pop
repnz
dec
push
adc
adc
pop
push
and
xor
aaa
test
xchg
dec
clc
inc
push
dec
cmp
jge
and
dec
rclb
insb
sbbb
add
push
push
inc
jb
mov
imul
imul
addr16
subb
pushf
cmp
jo
pusha
push
leave
jae
and
cmp
iret
xor
cmp
in
jae
inc
add
and
cltd
loopne
rolb
jbe
add
js
cmp
sbb
mov
push
dec
out
pop
int3
mov
shlb
add
pop
or
push
push
dec
fnstcw
idiv
cmp
xor
xor
sub
sub
xor
inc
xor
test
push
xor
mov
outsl
lcall
adc
push
outsb
add
jb
jmp
scas
mov
mov
jmp
js
loopne
jne
fidivl
add
ljmp
xor
push
push
jb
mov
stos
pop
test
je
bound
mov
or
pop
rolb
push
jo
add
and
xor
mov
sub
and
fwait
xchg
sahf
xor
mov
test
insl
aaa
mov
add
out
push
adc
pop
and
cmpsl
sbb
js
pusha
mov
test
jo
or
daa
pop
inc
orb
or
das
test
popl
pop
or
inc
inc
inc
cmp
pop
aaa
pop
xor
cmp
push
addb
xchg
rolb
or
mov
ss
adc
and
out
adc
push
adc
or
dec
sub
jl
test
lahf
movsl
add
mov
es
nop
sbb
pop
inc
test
imul
das
aas
push
pop
mov
cmp
jp
adc
sbb
xchg
dec
mov
repnz
inc
add
int
aas
je
stc
insb
push
insl
pop
popf
cs
sub
test
pusha
xor
sarl
adc
xchg
stos
lahf
testl
movsl
push
xor
scas
shll
jns
insb
push
lock
xchg
addr16
pop
mov
outsl
cmp
fbld
mov
pop
mov
shll
movsb
inc
cmp
out
pop
mov
push
pop
bound
pop
daa
int
insl
in
push
cmc
inc
or
rep
jae
pop
scas
mov
inc
scas
or
mov
mov
inc
dec
dec
pop
dec
mov
pop
adc
and
addr16
mov
data16
and
cmpsb
mov
mov
mov
push
popa
pushf
cs
push
sub
cmp
jns
sbb
push
int
rcll
push
mov
fldt
sub
push
sahf
repz
aaa
sti
or
daa
je
pop
pop
push
test
out
aaa
adc
sbb
push
xchg
ds
iret
jnp
push
lods
lret
sub
pop
lds
pop
cs
iret
repz
popa
xor
out
mov
loope
pop
rclb
pusha
testb
shrl
clc
das
push
fistps
ds
jns
xor
dec
push
stos
jnp
or
out
inc
in
cmp
leave
mov
sahf
dec
add
cltd
and
mov
dec
sti
ficomps
ss
insl
mov
mov
xor
in
cld
xor
push
or
dec
ds
repz
adc
stos
cmp
imul
and
pop
ja
dec
hlt
inc
and
add
sahf
jno
int
jnp
push
mov
rcrb
cmp
cmp
and
dec
ja
out
ds
call
int
jns
jo
shr
es
out
lcall
ja
out
mov
sub
mov
jns
dec
jbe
call
inc
addr16
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
pop
mov
stc
push
mov
xor
adc
mov
mov
push
or
scas
int
mov
leave
loop
lds
jbe
and
push
pop
mov
add
idivb
adc
dec
sti
das
int3
push
and
pop
sbb
enter
adc
inc
repnz
iret
pusha
or
mov
add
and
ret
or
js
cmpsb
mov
outsl
pop
incb
adc
fisubrl
outsb
out
pop
sub
aas
inc
push
fstpl
push
pop
frstor
inc
in
sti
rcrb
xchg
or
aaa
fisubrl
jo
mov
aas
mov
dec
fisubl
jge
into
test
das
push
jae
aam
out
add
dec
inc
dec
je,pn
jbe
cmp
pop
push
jnp
push
xorps
mov
lahf
insb
pop
push
xlat
sbb
dec
pop
je
jns
push
jno
ja
fisttps
jp
das
push
lock
in
repnz
outsb
push
inc
scas
cmp
sti
imul
pop
retw
push
sub
dec
or
adc
pop
push
dec
mov
ja
jl
mov
scas
push
out
push
repnz
outsb
push
dec
inc
dec
cld
push
cmp
sahf
push
ds
ret
inc
das
adc
outsb
xlat
jl
push
es
insl
jo
es
insb
je
push
jle
push
addr16
jo
jae
es
outsl
and
aas
cmpb
sub
and
imull
lods
push
or
pushl
aaa
xor
xor
xor
xor
cmp
cmp
push
xor
cmp
ds
add
mov
int3
jbe
or
sub
inc
pop
mov
xor
push
sub
loopne
cmp
sub
or
cmp
push
add
scas
push
adc
pushf
push
sub
push
sub
push
xchg
push
push
mov
cmc
sub
xor
es
adc
pop
push
aaa
lret
cli
push
mov
adc
xor
jle
addr16
or
data16
push
pusha
xlat
jp
push
cmpsb
mov
psubw
push
adc
or
or
unpckhps
orl
int
adc
inc
mov
pop
mov
sub
js
cltd
rcrl
mov
cli
mov
push
lcall
xchg
mov
ja
loope
out
push
sbbl
ret
repz
sbb
push
push
or
dec
jbe
int
push
inc
mov
jo
sbb
push
cs
fnsave
cmc
push
repz
imul
xchg
push
mov
das
or
inc
aaa
mov
aam
mov
ret
sub
push
push
push
push
mov
cmp
jbe
push
jnp
daa
rcl
test
mov
inc
aaa
dec
jns
or
push
cmpsb
aaa
or
daa
pop
das
pusha
stos
mov
ret
mov
sbb
mov
aaa
mov
and
jge
adc
inc
arpl
rol
lods
daa
and
add
push
pop
stos
test
pop
sub
pop
lods
daa
jge
and
das
mov
or
aaa
iret
adc
pop
addl
inc
test
and
daa
inc
mov
mov
popa
sub
sub
pop
icebp
push
push
das
dec
jbe
and
pop
push
inc
ss
and
cmp
pop
adc
pop
xor
sti
ja
test
or
xorb
pop
scas
sub
ficompl
cltd
daa
lahf
adc
sub
xchg
outsb
not
cmpsb
pusha
pop
and
sub
addr16
sar
pop
jg
insb
mov
fmuls
adc
or
pop
and
jbe
pop
mov
push
dec
mov
sbb
or
push
adc
adc
das
mov
adc
shll
cmpl
cmp
add
dec
add
sbbb
iret
mov
adc
fnsave
loopne
out
and
push
addb
dec
js
xchg
fistl
pop
ja
mov
inc
xchg
mov
mov
sub
or
aad
data16
in
or
push
adc
ss
mov
sub
pop
inc
jo
lret
and
sbb
es
mov
fisubrs
je
cmp
das
ret
or
iret
mov
and
sub
ds
or
inc
dec
pushf
pmaxub
movsb
fxch
adc
cmp
jmp
push
fcompl
pop
es
mov
push
jp
es
mov
pop
addr16
mov
test
fs
data16
lock
ret
ss
outsb
test
dec
jns
mov
jb
test
add
dec
test
test
js
and
mov
repz
push
jl
loope
push
pop
les
sub
fistpl
outsl
mov
dec
dec
push
bound
aaa
cmp
test
mov
imul
xchg
sub
push
scas
push
ss
pushf
xor
or
ficoml
out
and
pop
enter
ficoms
stos
push
add
dec
jo
xor
aas
les
xorb
mov
mov
adc
cmp
xor
sahf
out
adc
mov
sysret
insb
les
mov
js
xorb
and
ficompl
mov
ss
pop
push
cmp
ret
mov
je
test
pop
mov
dec
ds
ss
adc
es
dec
pop
jnp
mov
js
pop
xor
sbb
sbbb
sbb
adc
sub
pusha
pop
pop
lret
mov
setl
push
xor
in
rorl
enter
cmp
adc
dec
pop
lcall
fisubl
cmp
sbb
iret
inc
lret
loopne
add
adcl
lret
aaa
add
cmp
leave
addps
es
das
pop
inc
mov
loope
sub
les
fwait
adc
pop
ja
pop
rcrl
cld
pop
xor
std
or
adc
inc
dec
imull
cmp
dec
fldt
and
pop
out
das
sub
cwtl
mov
call
sbb
leave
mov
repnz
xor
and
in
pop
push
dec
mov
adc
out
push
pop
sbb
jns
out
push
andl
lahf
roll
add
or
fldcw
xchg
add
data16
or
or
adc
mov
ss
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
sbb
fldcw
sub
add
or
fwait
dec
mov
adc
pop
add
mov
insb
adc
push
push
dec
verw
int
mov
and
das
jg
add
incl
idiv
push
arpl
hlt
sub
ja
pop
pop
cs
and
scas
adc
push
lret
neg
mov
or
cwtl
sbb
sbb
mov
jb
jo
adc
lahf
mov
mov
imul
add
mov
and
sbb
push
sti
jl
cmp
pop
lock
dec
and
add
dec
aaa
das
push
outsl
popf
or
sbb
cmp
pop
adc
cmp
adc
push
cmp
pop
cmp
xor
or
push
push
dec
push
add
dec
cmp
sbb
pop
or
sub
dec
dec
sbb
add
cmp
aaa
push
push
and
pop
xor
and
and
mov
sbb
lret
sub
dec
xor
or
es
jg
inc
sbb
pop
inc
sbb
xor
cmp
sub
decl
es
push
xor
inc
push
sbb
inc
xor
cmp
push
dec
push
dec
adc
cmp
adc
insl
cld
incl
pop
das
pop
pop
sbb
aaa
sub
cmp
cmp
cmp
inc
mov
push
out
inc
push
test
jo
push
cmp
xchg
lock
or
das
insb
sub
mov
dec
xor
pop
xor
xorl
or
das
add
add
lods
jge
cmc
cmc
push
push
loop
arpl
pop
pop
es
test
add
sub
test
rclb
iret
inc
lock
out
add
das
xor
xor
or
clc
loop,pn
xchg
push
push
dec
mov
sbb
icebp
adc
mov
xchg
ss
pop
inc
movsb
mov
mov
add
push
add
pop
nop
notb
xchg
loopne
fstl
cld
cmpsl
xor
hlt
push
push
push
jo
xorl
push
push
inc
push
dec
inc
dec
push
dec
dec
add
add
outsl
add
fistpll
cmpsb
inc
sub
mov
inc
aaa
jno
sti
shlb
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
mov
test
and
jge
push
je
mov
andb
add
push
fwait
rol
fwait
in
inc
mov
movaps
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cld
insl
sub
decl
or
or
or
cs
ret
sub
xchg
mov
data16
inc
mov
call
cltd
test
push
push
shll
ja
incl
mov
movsb
sbb
dec
stos
fmuls
lret
rep
cs
lcall
arpl
test
add
mov
mov
movsb
mull
pushl
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
dec
xor
loopne
push
push
and
inc
dec
inc
fs
pushl
jl
inc
dec
gs
je
push
push
sub
das
cmp
xor
ja
pop
inc
jne
jno
jmp
popa
dec
arpl
jbe
jge
js
daa
dec
imul
inc
jo
jae
and
dec
pop
lock
pop
dec
cmp
dec
inc
pushl
test
into
outsl
sub
aaa
push
cmp
or
mov
mov
aaa
pushf
sbb
inc
cmp
push
or
xor
sub
cmpb
push
into
das
pop
iret
jne
push
pop
aaa
pop
aaa
daa
pop
popa
jne
addr16
or
inc
push
inc
add
sub
pop
cmp
inc
and
cmp
ds
sti
and
xor
fldt
addr16
xor
cmp
inc
add
mov
add
inc
xor
and
enter
aaa
inc
push
inc
cs
mov
pop
cmovb
pop
ss
cmpsl
ss
aad
mov
push
and
test
and
test
mov
lahf
dec
mov
adc
adc
cmp
xor
outsb
sbbb
lea
cmpsl
lret
pop
popf
or
mov
jmp
lahf
bound
dec
push
inc
push
inc
sbb
dec
push
or
mov
data16
fdivl
arpl
sub
daa
mov
jle
push
call
xor
lahf
and
jle
dec
push
popf
or
lock
pop
inc
sbb
bound
push
es
fldcw
xor
inc
or
adc
loopne
aad
sbb
loopne
xor
xor
cmp
cmpsl
outsl
in
add
je
movsb
cs
ss
xor
sbb
in
rol
jp
sbb
lods
push
sbb
stos
or
mov
fcoms
insl
push
sub
mov
mov
pop
shrb
or
adc
sbb
pop
cmp
scas
cli
mov
push
testb
gs
dec
ss
rcll
sbb
imul
jge
adc
cmpb
and
inc
mov
add
sbb
xchg
add
adc
popf
mov
mov
jo
bound
push
or
sub
and
cmp
sti
fldpi
test
dec
mov
jmp
sub
imul
jno
mov
rorl
and
sub
and
pusha
add
test
test
xchg
or
lds
aad
fisttpll
dec
pop
pop
xchg
dec
pop
add
in
dec
les
movsbl
in
xor
js
xor
jae
popa
cmp
addr16
insl
gs
cmp
ret
add
and
or
aad
fistl
xor
insl
loop
pop
and
push
sbb
lret
int
cltd
push
dec
ljmp
add
loop
je
push
popf
insl
fwait
inc
pushl
out
das
xor
mov
adc
add
out
push
add
adc
sub
jbe
out
mov
daa
or
test
pusha
fdivrs
inc
sub
insb
lods
push
insl
lret
pop
inc
adc
movsw
pop
xor
aas
sbb
add
mov
and
jae
and
and
jne
out
dec
andl
cmp
pop
sbb
ss
xor
aaa
stos
inc
pop
cmpsl
jno
ds
cwtl
xchg
leave
fsubs
mov
lds
push
sbb
inc
add
inc
push
jno
ja
push
xlat
rcrb
xlat
movb
inc
inc
add
adc
sahf
dec
or
pop
push
ja
pop
les
call
pop
lods
dec
push
inc
lock
inc
jne
push
fs
xor
cmp
or
aaa
sub
xor
or
fnstsw
inc
add
inc
lods
push
xor
pop
adc
jns
sbb
and
push
fildll
pop
inc
enter
add
daa
ljmp
fs
jo
out
and
inc
or
and
stos
push
outsl
imul
push
pop
mov
xchg
pop
jp
test
push
inc
ficoms
push
cmp
arpl
pusha
jg
or
and
or
xor
and
dec
or
cmp
push
xchg
sub
ja
cmp
shrl
cmp
sub
adc
aaa
pop
mov
out
jnp
dec
dec
cmp
sub
je
or
pop
scas
pop
inc
sbb
sbb
dec
mov
xor
mov
xor
and
das
iret
scas
pop
or
add
dec
jle
into
lds
es
mov
and
cmp
inc
or
push
or
mov
push
adc
push
fs
gs
mov
lods
mov
pop
pop
pop
aas
pop
adc
popf
data16
add
negb
pop
sub
subl
divb
pop
movsl
mov
int
mov
repz
cwtl
mov
je
insb
daa
push
mov
rol
xchg
lea
sbbb
std
xor
cmpsl
pop
cmpl
mov
dec
inc
push
and
fwait
inc
mov
add
pop
cmp
icebp
sub
inc
dec
mov
out
cltd
mov
mov
and
inc
add
or
add
cmp
bound
jne
mov
rolb
jg
aaa
loopne
mov
jns
jne
or
push
stos
lods
push
outsl
xchg
mov
aam
add
sub
popa
cmp
jne
imul
jae
or
mov
inc
inc
cmpsb
inc
out
and
punpckhwd
dec
outsb
push
je
lret
push
insb
shrb
arpl
inc
push
lcall
inc
pop
push
dec
inc
dec
inc
push
pop
sbb
shlb
gs
and
imul
fwait
pop
loopne
rorl
push
dec
inc
jo
popf
jb
rolb
loop
sbb
incl
pop
inc
sbbb
or
cmp
rclb
mov
inc
test
fists
mov
push
mov
xchg
push
xorl
and
pop
ret
jb
push
adc
push
test
mov
insl
fadds
daa
mov
loop
fcompl
test
nopl
push
data16
push
iret
cmp
and
push
fidivs
ljmp
mov
repz
cwtl
add
out
dec
pop
pop
mov
aaa
daa
push
pop
cmp
jno
inc
inc
cmc
dec
outsb
push
sbb
dec
or
push
loop
rorb
push
cmp
push
push
enter
pop
cmp
push
out
push
mov
xor
pop
push
cmp
pop
dec
dec
cmc
jp
mov
dec
and
mov
adc
jp
dec
and
inc
or
push
xlat
mov
pop
adc
xor
iret
xchg
jne
inc
mov
sub
sub
jge
cmc
push
mov
and
cmp
or
cmpsl
adc
jle
imul
lret
sub
enter
mov
arpl
insl
adc
adc
insw
or
lods
dec
xor
pop
push
sbb
test
and
push
pop
aaa
mov
xlat
outsl
or
inc
cmp
subl
sub
dec
inc
dec
aad
mov
xlat
scas
and
sub
sub
dec
push
push
push
das
xor
xor
dec
and
or
adc
fcomps
adc
sbb
xchg
icebp
outsb
sub
fidivrl
rcrb
sub
inc
stos
fisttpl
data16
xor
dec
and
push
loopne
inc
divb
das
push
mov
dec
dec
dec
inc
dec
loopne
jne
mov
outsb
sti
cmc
andl
gs
push
stos
rolb
adcb
add
push
jle
fwait
insl
and
push
mov
adc
leave
data16
push
cmpsb
movsb
cs
dec
mov
outsb
mov
scas
sbb
jmp
testb
xadd
sbb
inc
jg
into
out
insb
mov
inc
out
jnp
lahf
lock
adc
cmpb
aas
in
mov
arpl
pop
pop
inc
dec
add
shll
fmull
xor
xor
aaa
imul
movsb
aas
in
push
into
xor
incl
sahf
outsl
dec
movsb
aam
add
dec
sahf
xchg
out
push
lock
or
movsb
add
mov
iret
sub
cmp
xor
es
cld
push
mov
push
test
sahf
lods
outsl
pop
mov
inc
pop
push
loopne
iret
int3
aas
jg
scas
shlb
les
daa
jb
push
xor
inc
push
jb
push
cmp
and
sub
push
jb
add
push
data16
sahf
daa
fcomps
clc
aas
push
js
push
test
outsb
repz
mov
enter
ss
out
push
inc
pushf
andb
dec
repz
cmp
iret
stos
cmp
test
push
cmp
sahf
cmp
out
fidivrs
cmp
test
cmp
out
in
movb
nop
mov
cwtl
jae
iret
repz
inc
cmp
or
and
es
or
xchg
or
jns
leave
sbb
dec
inc
jbe
dec
out
nop
mov
adc
add
cmpsl
jns
int
or
push
cmp
dec
repz
or
sbb
pop
shlb
in
jge
jnp
clc
push
cmp
mov
add
and
leave
aad
push
ja
push
inc
nop
fisubrl
cmp
add
popa
and
in
in
dec
outsl
aam
test
inc
shll
loopne
cmp
adc
sbb
dec
mov
or
outsl
add
inc
inc
pop
leave
inc
or
inc
sub
orb
jo
imul
cmp
cmp
dec
dec
adc
in
cld
cmp
or
jb
push
push
cmp
cmp
xchg
jb
mov
inc
ret
leave
xchg
mov
or
cmpsl
aaa
les
push
lock
out
aam
in
andl
scas
add
lods
fsubs
out
pushf
pop
leave
push
pushl
enter
enter
cmp
test
fildll
nop
fldcw
mov
inc
jnp
jbe
call
out
or
leave
repz
dec
add
add
fwait
mov
inc
push
fadds
pop
ret
push
lock
xor
add
mov
xchg
and
add
fiaddl
enter
dec
xchg
ja
nop
pop
xor
push
or
sub
xor
fildll
jbe
ret
push
fbld
outsl
adc
and
nop
or
and
push
xor
jbe
jb
sarl
fdivs
bound
shl
add
out
sbb
dec
aas
loopne
leave
sbb
add
xlat
or
nop
cmpsl
adc
push
aaa
mov
or
out
mov
scas
les
fcmovnu
mov
aam
fsubl
addr16
dec
ficoms
shl
movl
pop
cmpsl
fstps
push
pop
inc
fcom
mov
ret
adc
jg
push
mov
scas
pop
dec
add
inc
xchg
or
mov
out
ficoms
add
jbe
jbe
dec
and
inc
add
negl
or
in
test
outsl
push
push
outsl
pop
xor
push
jg
pop
push
xchg
daa
testl
push
je
push
aam
in
mov
cmpsl
enter
cwtl
inc
push
jl
js
repz
xchg
push
ja
lock
dec
enter
pop
dec
inc
pop
inc
sbb
or
out
mov
mov
xlat
or
cmp
xchg
test
cmp
sub
inc
inc
xorb
sub
mov
testl
xchg
fdivs
add
cmp
dec
sahf
cld
add
inc
scas
addl
cmp
push
push
shlb
inc
mov
and
add
pop
inc
outsl
loopne
and
adc
mov
pop
leave
mov
outsl
xchg
in
add
jg
add
and
mov
xchg
cmp
sbb
pusha
in
fidivl
add
out
cs
movsb
lods
mov
dec
sub
bound
sub
inc
ret
mov
adc
sbb
loopne
outsl
add
ss
pop
pop
adc
pop
js
mov
inc
test
mov
inc
dec
and
add
les
aam
adc
cmpsl
sbb
push
jb
iret
or
adcl
or
push
sbb
daa
push
xor
dec
out
pushf
inc
daa
or
push
jb
add
jge
ret
add
fmuls
aam
sarl
push
inc
sub
dec
pushf
movsl
cmpsl
cmp
dec
sub
and
xor
hlt
inc
or
dec
xchg
sub
repnz
scas
cwtl
xchg
aas
or
dec
sbb
movsb
adc
dec
outsl
fsubl
inc
cs
or
xchg
out
lock
adc
xchg
aam
popl
dec
ficoms
jne,pn
sbb
rorl
scas
add
lods
outsl
out
pop
leave
adc
fisubrl
lahf
addr16
mov
or
pushf
inc
dec
outsb
iret
test
daa
or
jl
pop
outsl
fsubs
outsb
rcl
nop
daa
push
adc
jns
cmp
jns
arpl
mov
daa
sub
jmp
cwtl
mov
dec
iret
dec
push
and
neg
ss
cwtl
push
sarb
add
inc
cmpsb
jbe
cmp
das
mov
enter
or
ja
les
cmpsb
mov
dec
outsb
in
ficoml
data16
xlat
stos
add
mov
negb
push
push
dec
aad
mulb
pusha
push
push
mov
mov
addr16
or
roll
ljmp
jo
add
push
sbb
adc
jl
out
aas
jae
fiadds
dec
repz
shll
cmp
xchg
out
lcall
jo
out
sahf
xchg
mov
out
sbb
sahf
repz
out
bound
mov
cmpsb
ljmp
sahf
cmpsl
stc
and
inc
xchg
lock
sahf
out
out
push
push
addr16
mov
cmp
sarl
sub
aad
sahf
out
sti
pop
push
test
repz
dec
xchg
out
push
push
xchg
lods
enter
lahf
repz
mov
jns
push
and
cli
cmp
sarl
pop
lahf
xlat
cli
iret
repz
push
xchg
shr
lahf
out
lcall
pop
lcall
jg
aad
dec
repz
cs
popa
popf
adc
lahf
out
xor
or
jl
out
lret
dec
pusha
js
mov
flds
bound
jmp
sahf
out
mov
lock
jbe
push
data16
stc
cmp
repz
movsl
enter
repz
cmpsl
pop
fisttpl
imul
mov
fimull
out
jno
fldl
insb
insb
cmp
cmpsl
stc
insl
mov
xor
cmpsl
stc
and
mov
iret
repz
loopne
jno
fildll
dec
repz
jae
repz
out
xchg
lock
out
jne
jbe
lret
out
idivl
out
ja
mov
ss
lcall
jnp
and
lcall
roll
cmpb
jns
add
xchg
shlb
cmpsl
stc
bound
fcomps
jg
jns
iret
repz
sbb
int
loope
orl
int
lock
stc
cmp
cmpsl
movsl
lcall
cmp
cmpsl
mov
xchg
jo
sahf
out
iret
clc
xor
jns
cmp
out
mov
clc
ja
cmpsl
stc
xor
mov
mov
cmp
sbb
push
xchg
stc
cmp
lretw
xchg
jl
sub
cmpsl
pusha
xchg
cmp
mov
jl
out
lcall
jl
out
pushf
jno
setge
stc
cmp
jge
jmp
sahf
cltd
out
xor
aam
lahf
jp
xor
jnp
or
in
fnstcw
xchg
push
push
lock
xor
push
push
mov
lods
addr16
lods
push
lods
subl
lahf
mov
rorb
pusha
or
ja
push
mov
mov
add
jns
daa
sti
push
add
dec
mov
push
sbb
push
mov
lods
cmp
setbe
sahf
ja
dec
adc
aaa
aaa
pop
scas
fadds
bound
loope
pop
adc
cs
mov
shl
out
insl
jnp
test
sub
ss
lock
scas
aas
mov
pushl
cmp
cmp
test
push
inc
ret
scas
mov
int3
push
xchg
or
fcmovnb
aaa
stc
inc
mov
push
scas
inc
pop
enter
mov
imul
outsl
push
pop
movups
and
ss
add
int3
jg
dec
and
mov
push
aas
mov
mov
dec
fmuls
in
es
pop
push
push
fcomip
fdiv
push
jae
das
xorl
adc
cmpsb
jg
sbbl
sarl
popf
lods
mov
loopne
pop
push
iret
shrb
inc
cs
fdivrs
sarb
and
fs
enter
adc
scas
leave
aas
jns
cmp
push
mov
push
inc
push
and
sub
fisttpl
or
inc
mov
scas
xor
das
addr16
inc
xchg
daa
les
jl
adc
inc
iret
inc
fbstp
lahf
loopne
sub
inc
add
rcll
lahf
je
shrl
cmp
adcb
ja
pop
jno
loope
mov
test
lds
repz
std
std
aas
in
and
mulb
int3
fcomp
repnz
and
shlb
inc
iret
movsl
das
cmp
dec
and
xor
adc
cmp
push
pop
add
movl
in
iret
pop
cmpsl
or
ds
bound
mov
inc
cmp
or
out
push
add
add
das
outsl
jns
inc
dec
cmp
inc
pop
pop
dec
pop
insb
pop
xchg
sbb
sub
jb
mov
les
and
dec
lfs
and
inc
out
in
dec
push
sub
sbb
cmp
mov
inc
mov
repnz
pop
out
jnp
xchg
pop
repz
fsubl
mov
jns
iret
add
in
in
in
hlt
sub
xchg
mov
addr16
pop
mov
push
lahf
data16
pop
je
mov
jbe
icebp
inc
enter
in
in
cmpsl
in
xor
and
pop
ret
add
inc
pop
mov
pop
dec
add
mov
pop
and
enter
enter
and
imul
xor
pop
pop
inc
outsb
nop
dec
daa
or
in
out
adc
inc
outsl
inc
pop
inc
add
and
xlat
movsb
pop
add
pop
mov
das
movsb
dec
and
repnz
dec
add
add
xchg
pushf
mov
pop
dec
dec
push
xlat
or
mov
js
pop
cwtl
xchg
and
mov
rorl
mov
add
add
in
push
clc
pop
es
or
push
dec
xchg
or
cmp
das
dec
jp
inc
push
pop
les
xchg
inc
push
daa
fs
pop
jb
movups
jo
pushf
mov
jbe
leave
jne
push
and
cmp
dec
sub
push
mov
dec
pop
aam
js
cmp
filds
enter
or
dec
xchg
addr16
and
push
cwtl
dec
dec
dec
cs
pop
data16
xchg
dec
dec
dec
jbe
in
dec
dec
dec
mov
dec
dec
dec
ror
popa
fldt
hlt
cmpsl
cld
pop
mov
add
dec
cmpsl
adc
sbb
mov
out
xchg
cmp
aas
push
add
cs
lock
add
jae
cmp
jg
mov
dec
out
add
sbb
mov
add
inc
repnz
inc
movsb
bound
in
or
bound
push
pop
or
adc
inc
xor
add
arpl
arpl
pop
call
push
dec
leave
jae
ret
ja
movsb
and
mov
enter
lock
jg
fs
and
dec
cmpb
push
repnz
sahf
inc
rcrb
fs
nop
or
outsl
mov
in
xchg
dec
push
push
push
cmpsl
pop
push
mov
and
arpl
outsb
daa
daa
mov
xchg
cwtl
mov
adc
ds
xchg
mov
adcb
mov
out
push
fsubs
adc
dec
jmp
push
outsl
sub
repnz
push
dec
push
push
push
out
repnz
push
push
jne
orb
cmp
repz
or
iret
repz
or
cmp
ret
adc
adc
repz
adc
adc
jns
out
adc
push
adc
sahf
out
pop
xor
inc
xchg
iret
enter
dec
push
sbb
data16
fsubl
adcb
addr16
mov
inc
loop
mov
test
inc
add
mov
inc
pop
dec
iret
and
loop
add
daa
shlb
adc
aaa
xchg
pushf
in
jg
push
sbb
jne
ja
outsl
push
add
inc
ds
lahf
add
nop
mov
mov
js
push
xor
mov
jo
sub
rcr
pop
and
lahf
in
add
push
xor
sbb
jns
sahf
ja
jbe
dec
add
in
and
jno
imul
inc
insb
int3
xchg
mov
popf
popa
scas
mov
pushf
xchg
add
and
adc
adc
xchg
push
push
pushf
test
leave
jmp
push
adc
mov
inc
push
xchg
cmp
push
push
push
pop
das
pusha
push
shrl
xchg
jo
pop
push
in
and
sub
jo
and
iret
and
nop
pop
add
fcomps
adcb
test
stc
or
decl
inc
push
enter
scas
add
xchg
sbb
jg
dec
sahf
fldenv
pop
insb
add
dec
inc
cmp
fsubrl
cmp
xchg
mov
xchg
in
jns
lret
push
ret
xchg
out
fadds
mov
sub
adc
mov
insl
pop
enter
insl
ljmp
fiaddl
and
in
mov
rorb
cld
push
pop
ja
pop
sub
popa
shrl
cltd
repnz
push
xchg
push
jb
iret
and
outsb
push
rcrl
outsb
mov
fs
pop
loopne
push
bsr
ja
outsl
leave
xchg
adc
pop
imul
iret
in
and
pop
mov
iret
pop
pop
adc
pushf
mov
bound
inc
mov
add
daa
xchg
xchg
pushf
pusha
pop
cmp
lea
jns
adc
scas
pop
cs
out
mov
inc
pop
and
out
mov
pop
cvtdq2ps
outsl
and
out
inc
pop
jo
pop
leave
loopne
pop
sub
jns
dec
shl
fbld
js
daa
pop
jno
mov
jb
pop
les
mov
out
out
pop
negl
in
in
pop
pop
pop
subps
pop
in
in
pop
pop
daa
pop
das
pop
aaa
pop
in
in
aas
pop
inc
pop
dec
pop
push
pop
frstpm(287
in
pop
pop
addr16
outsl
pop
ja
pushf
pushf
pushf
je
femms
or
pushf
or
or
pushf
pushf
pushf
pushf
pop
push
add
pushf
add
add
inc
repnz
cmpsl
and
fisubrs
fistpl
cmpsl
mov
inc
jb
xchg
sub
lock
xchg
mov
adc
pop
and
pop
inc
push
pop
mov
ja
sarb
jae
xchg
filds
or
cmp
xchg
xchg
mov
rcrb
out
jbe
fdivrs
loopne
call
lods
cmc
pushf
clc
or
scas
mov
pop
testl
pop
leave
jae
mov
cmp
push
into
add
call
jle
jne
icebp
fsubl
adc
mov
daa
fisttpll
fistpll
xchg
mov
or
repz
cmp
cmp
or
bt
flds
pop
das
jecxz
cmovle
add
or
outsl
cmp
mov
fsubrs
push
aas
mov
pop
inc
out
out
in
cmp
or
sarb
daa
adc
push
aas
jbe
in
adc
pop
sahf
ss
pop
inc
andps
pop
push
fs
and
push
das
jp
push
in
mov
mov
xchg
add
mov
pusha
adc
pop
and
jns
out
add
add
ss
outsb
inc
pusha
or
sahf
fildl
push
add
pusha
das
test
mov
add
aam
mov
dec
jbe
pop
outsb
shlb
and
pushf
mov
cs
cmp
enter
popa
dec
push
push
pop
out
sahf
out
or
sahf
out
sahf
jnp
xchg
xchg
or
shl
jns
or
jbe
and
and
stc
and
xchg
out
mov
aad
xchg
lock
jo
fldl
sbb
bound
daa
iret
jae
pop
pop
mov
mov
cmp
leave
rorl
psllw
decl
xchg
cmp
arpl
arpl
jns
adc
pop
arpl
arpl
sub
arpl
mov
mov
and
xchg
xchg
xchg
call
enter
or
sbb
xchg
pushf
pop
and
push
push
outsl
pop
leave
jae
les
pop
insl
adc
in
fidivrs
popl
leave
out
and
adc
iret
in
enter
gs
push
pusha
imul
cmp
fistps
fisttpll
out
gs
or
mov
aad
or
cmpsl
mov
push
outsb
daa
in
out
cli
add
pop
pop
adc
data16
inc
mov
data16
dec
dec
cmpsl
xchg
iret
or
insl
data16
js
leave
enter
data16
leave
leave
leave
leave
movsb
scas
mov
leave
rcr
push
or
or
mov
or
addr16
pop
sub
addr16
jb
inc
addr16
addr16
addr16
addr16
cmp
and
insb
addr16
jge
iret
in
jbe
out
addr16
inc
jnp
pop
rclb
push
loopne
jb
jecxz
push
push
pop
push
movhps
pop
ja
fwait
pushf
pop
inc
cmp
sahf
pop
mov
fists
in
xor
mov
add
xchg
out
mov
ljmp
sbb
cmp
push
jb
loop
inc
jg
aaa
imul
jo
imul
and
inc
dec
daa
pop
jmp
cmpsb
inc
push
iret
clc
out
dec
insl
mov
push
dec
xchg
das
ss
mov
push
outsl
push
add
xor
verw
push
push
fldl
pop
push
das
outsb
push
or
repz
jbe
or
xchg
push
jo
outsb
pop
fmull
mov
ja
jb
xchg
jl
xor
jns
imul
mov
mov
test
xchg
fsts
mov
daa
daa
pop
mov
mov
sbb
aad
subb
and
insb
push
pop
in
mov
insb
outsb
repnz
push
dec
push
daa
cmp
xchg
insb
pop
insb
jg
insb
cwtl
orb
inc
das
xchg
xchg
sahf
out
jns
lahf
cmpsl
add
sbb
dec
mov
insb
jns
jns
iret
iret
insb
xlat
insb
fildll
daa
fnsave
out
insb
negl
ud2
or
daa
daa
daa
or
pop
push
daa
daa
daa
daa
add
repz
sbb
sbb
insl
cmp
jnp
sbb
sbb
pop
sbb
repz
daa
pop
das
setle
aas
inc
and
sahf
out
dec
and
mov
shlb
or
data16
rcrb
fbstp
stc
lock
push
out
insl
pop
xchg
cmp
ud0
inc
adc
test
outsb
pushf
arpl
jns
test
dec
outsb
popf
faddl
push
outsb
insl
pcmpgtw
xchg
cmp
cmpsl
push
push
cmp
in
cwtl
mov
pop
out
mov
mov
movntq
enter
fdivrs
or
or
or
int3
inc
call
jno
iret
or
adc
outsl
repnz
cmp
adc
test
enter
xchg
jb
js
subb
pop
cmp
mov
outsl
in
into
outsl
fldcw
into
add
repz
cli
or
outsl
mulb
and
das
cmp
inc
push
add
in
es
dec
jo
jo
inc
jge
loope
movhps
inc
movsl
ja
ret
cmpsl
or
inc
or
cmp
das
das
scas
xorb
nop
jo
xchg
test
xchg
ja
pop
xchg
das
lock
fdivs
xchg
and
add
or
jno
xchg
mov
mov
dec
iret
sbb
lds
addr16
mov
or
repnz
mov
je
outsb
ret
push
pop
mov
mov
dec
iret
xlat
jno
pop
stc
dec
push
idivl
mov
and
adc
sbb
outsl
incl
stc
pushf
je
iret
jo
push
mov
sub
subb
xchg
enter
je
pop
and
ja
mov
cmpsl
cmp
das
insb
jb
je
jl
out
outsb
je
in
in
add
jns
out
or
in
int3
pop
aam
fmull
repz
leave
in
adc
adc
cltd
ljmp
inc
mov
daa
in
pop
jae
jae
sahf
out
outsb
cmovs
push
add
jno
pop
outsb
push
pop
repnz
decl
or
mov
insl
add
pop
mov
repnz
cwtl
pop
mov
jo
lahf
aaa
mov
nop
mov
mov
push
into
lock
testb
push
je
pop
je
xor
jg
mulps
rorb
pop
fildl
fcoml
je
fistpll
orps
fcmove
ret
sarb
mov
pop
loopne
or
iret
in
xor
cltd
or
lock
push
mov
je
jb
jne
push
pop
and
jns
or
pop
push
add
jns
pop
aaa
lar
pop
inc
or
jns
out
or
pop
cmp
fucomi
pusha
punpckhbw
jne
sub
data16
xchg
lea
out
mov
add
int3
dec
aam
add
xchg
cmpsl
pop
in
pop
hlt
pop
imull
jg
cld
jne
add
or
or
enter
jbe
and
aas
sub
and
sub
loopne
out
inc
dec
push
jbe
xchg
js
add
ljmp
nop
jbe
jb
and
popf
fstpt
ja
stc
fsubrl
xchg
clc
out
add
add
jne
or
sahf
loopne
stc
outsb
ja
jg
popl
scas
mov
mov
pusha
push
out
cwtl
fistpll
sahf
pop
ds
ja
dec
pop
ja
arpl
adcb
inc
dec
xlat
nop
fbstp
out
mov
inc
jo
in
push
mov
mov
enter
sti
ja
push
js
js
pop
loop
push
js
push
js
es
js
and
mov
in
mov
in
and
xchg
inc
jne
dec
xchg
push
pop
daa
and
cmp
xchg
sahf
jb
cmp
test
and
jp
js
aad
loopne
pushf
pushf
ljmp
add
scas
sahf
out
pop
push
push
and
push
sub
and
jns
jns
xchg
insl
xchg
pop
aad
jo
xchg
push
push
enter
pop
into
lock
das
call
inc
lock
jns
jp
add
jp
jp
sbb
mov
out
sub
fcoms
and
jno
cmpsl
jp
cmp
add
push
jp
jp
jp
cmp
sbb
mov
push
in
xchg
das
pop
xchg
jp
jp
jp
arpl
insl
stos
lss
mov
cwtl
xchg
jp
cmp
pop
ja
mov
and
sub
loop
repz
cmp
dec
jnp
and
adc
and
mov
or
dec
cmpsl
dec
call
push
divl
cmp
incl
lock
sahf
add
jnp
sbb
jnp
xlat
and
adc
jl
mov
cmp
mov
push
xchg
out
scas
cmpsb
add
push
cmp
mov
pushf
pushf
mov
mov
sahf
xchg
rolb
jecxz
cmp
cmp
repz
out
inc
pop
mov
xchg
jge
jge
loopne
shrl
lsl
jge
cltd
push
cmpsl
jb
jp
outsb
daa
daa
orb
loopne
mov
mov
and
out
enter
push
mov
jle
push
cmpsl
pop
pusha
shrb
verw
sbb
enter
xor
jle
inc
jle
cmp
dec
jle
jle
jle
jbe
and
or
addr16
cs
out
xchg
mov
leave
or
mov
mov
push
aaa
enter
xchg
jg
test
or
jg
xchg
xchg
sub
jg
repz
jg
push
pop
pop
add
pushw
outsb
lar
push
shr
or
in
and
pop
and
add
int3
iret
add
leave
inc
repnz
sub
pushl
fldt
cmp
inc
pop
inc
xchg
dec
sahf
add
jns
cmpl
dec
ja
mov
jae
fldenv
or
add
popf
je
xor
cmp
test
lcall
js
push
daa
xorl
nop
roll
fimuls
jns
test
mov
stc
adc
cmpl
repnz
jo
aas
cmpxchg
jns
xchg
orb
adc
sbb
and
int
out
add
pushf
je
inc
pop
sgdtl
xchg
xchg
xchg
xchg
mov
pop
andb
xchg
xchg
subb
aas
js
bsf
orb
pause
pop
cwtl
sbb
sbb
dec
ss
icebp
rolb
jns
jge
push
inc
pushf
out
push
daa
test
adc
lcall
stos
mov
push
call
shl
js
add
out
fimuls
add
add
out
test
mov
push
or
es
repz
jp
pop
fmuls
jecxz
repz
cmp
xor
call
leave
lret
andl
test
test
push
pop
test
lea
jb
test
jns
test
in
mov
lcall
lahf
loopne
ljmp
iret
cli
add
lret
daa
dec
mov
iret
jae
mov
pop
clts
pop
add
or
iret
repz
or
cmp
repz
push
pop
cmp
leave
repz
adc
fcmovne
repz
jp
orb
xchg
test
sbb
mov
test
mov
call
call
or
adc
sub
and
dec
inc
repz
repz
or
push
or
repz
pop
or
outsl
loopne
dec
mov
cmp
inc
lcall
xchg
mov
int
fucomp
cs
das
pmaddwd
inc
das
in
or
std
add
cmpl
pop
adc
add
mov
or
imul
add
into
inc
cmpsl
es
and
cld
movb
rcrb
xchg
ja
add
push
push
leave
mov
xchg
push
sbb
xchg
cs
in
loopne
call
add
xor
pushf
in
insb
mov
jb
pusha
punpckhbw
add
add
test
jns
mov
je
sub
add
ror
ftst
inc
repnz
adc
sub
pop
jns
mov
cmp
xchg
push
dec
xchg
jno
pop
leave
jae
mov
in
jns
mov
movsb
nop
pop
xor
outsb
bound
sahf
movsl
jo
iret
push
add
in
pop
aaa
push
cmp
cmp
mov
pop
aas
arpl
or
out
imul
jae
daa
push
push
mov
daa
pop
leave
cld
rcr
pavgb
or
lock
add
xchg
movsl
mov
jmp
push
add
push
enter
cmp
mov
add
repnz
out
iret
repz
nop
push
or
repz
repnz
rdpmc
ror
out
add
adcl
cmp
dec
mov
iret
jae
repnz
popa
imul
daa
xchg
add
fwait
jb
jb
pop
cmpsb
xsaveopt
jb
adc
cmp
pop
js
shl
cmp
in
mov
sbb
jns
sbb
and
cmovl
leave
repz
sahf
push
jo
push
and
mov
and
addr16
and
mov
loopne
cmpsl
rsm
je
adc
and
cmp
xchg
mov
mov
outsl
rcll
dec
movb
repz
add
inc
repnz
or
cmp
nop
adc
cmp
and
nop
dec
nop
mov
in
jb
jb
lea
fsubrp
jbe
jge
das
cmpsb
mov
push
push
jb
fnstsw
mov
nop
out
sahf
aaa
into
mov
or
iret
repz
sahf
or
out
push
push
testb
lahf
xchg
dec
fdivrp
nop
adc
fmulp
or
xchg
pop
and
out
jns
xor
add
inc
pmaxub
das
das
das
das
insl
xchg
js
adcb
das
nop
xchg
fwait
xchg
cmpsb
xchg
scas
xchg
das
das
das
das
mov
mov
xchg
stc
dec
das
das
xchg
ficoms
mov
icebp
xchg
cld
xchg
filds
xchg
jns
jns
adc
sub
ja
push
pop
inc
and
out
sahf
and
pop
and
sahf
out
and
and
sahf
out
daa
mov
xchg
fucom
jns
or
jns
pushf
cmp
mov
adc
dec
pop
movsb
into
xchg
push
das
pop
xchg
frstor
pop
push
popf
in
dec
das
adc
repnz
iret
cmp
fldt
insb
pop
int
cwtl
pushf
add
fists
mov
push
push
rorb
dec
cs
fsub
call
fimuls
or
dec
dec
insl
xchg
dec
vpmullw
repz
sahf
out
adc
in
dec
adc
rcr
leave
cmc
std
syscall
xchg
dec
and
mov
clc
fldl
movntps
jns
daa
outsl
das
lea
sbb
mov
shlb
and
repz
lgdtl
fcmovne
in
leave
testb
das
pop
out
jns
aaa
sub
jae
cmp
xchg
jnp
xor
loop
sahf
xchg
cmp
leave
repz
xor
xchg
iret
mov
push
cmp
xchg
pop
leave
xor
seta
cmp
enter
xchg
pop
ja
inc
movsl
sbb
daa
mov
xchg
push
mov
xchg
or
fldenv
add
adc
cwtl
subps
pusha
ja
and
pushf
pushf
jns
pushf
xchg
out
pop
mov
push
add
out
sahf
xchg
rcr
add
add
repnz
or
aaa
jns
push
ud2
sub
in
repnz
pop
dec
pop
in
dec
sahf
adc
adc
dec
sahf
out
adc
lcall
mov
mov
jns
sbb
fcompl
out
pop
std
xor
add
lcall
mov
sub
xchg
cmp
mov
fcoms
leave
out
nop
push
add
mov
es
push
sub
lcall
lock
add
push
ret
js
fwait
pop
or
mov
fwait
and
sub
or
cmp
jmp
femms
cmp
inc
jns
leave
repz
push
adc
es
cmp
adc
lar
sahf
out
pop
js
sbb
inc
push
adc
sbbb
dec
push
sbb
mov
inc
sbb
shr
into
cwtl
daa
xorb
iret
push
in
in
jns
fwait
lret
aas
in
pop
loope
fwait
pop
fistpl
mov
xlat
push
pushf
pop
push
pushf
dec
dec
sahf
aaa
push
push
add
es
xor
and
pushf
xchg
fcmovne
sub
imul
js
xchg
ud1
jb
movsb
lods
xchg
loopne
in
iret
xlat
fbstp
jb
xlat
out
out
idiv
and
xchg
iret
push
pop
popf
or
mov
fldl
sub
add
pop
xchg
jae
cmp
jne
mov
outsb
daa
pop
cwtl
mov
pop
add
rcr
test
and
mov
ds
sahf
cmp
leave
repz
add
es
call
push
ds
sahf
mov
js
imul
cmp
mov
cmp
xchg
cmpsl
push
in
les
jb
int3
xchg
sbb
xor
pop
lahf
pop
btr
insl
xchg
lahf
jl
xor
lods
cmp
inc
pop
dec
xchg
push
pop
pop
out
repnz
bound
pop
jb
insl
stos
loop
enter
fildll
fcmovne
popf
movsl
shrd
mov
mov
ffreep
pop
int
aad
or
pushf
cmp
or
mov
mov
pop
and
outsl
sub
fsubrl
push
cvtdq2ps
xor
aas
outsb
daa
daa
adc
in
and
leave
shl
jbe
in
fstps
loope
jmp
dec
sahf
add
nop
sahf
xchg
add
fnstsw
mov
jo
into
mov
outsl
js
out
mov
sub
leave
repz
rolb
jns
inc
pop
add
add
dec
sahf
out
add
add
aaa
push
inc
pop
dec
or
repz
or
outsb
out
cs
or
mov
jns
push
lcall
in
mov
mov
fsubl
std
mov
or
sub
xor
aas
mov
mov
sbb
cmp
cmp
sbb
pop
push
out
cmp
adc
out
sahf
sub
sub
leave
repz
mov
xor
fs
sysexit
jns
xchg
outsb
aas
push
cmp
cmp
in
mov
iret
repz
into
cmp
jns
repz
inc
cli
inc
sahf
add
inc
push
adc
inc
es
repz
xor
cmp
pushf
cmp
in
jle
dec
mov
lahf
cmovge
stos
jns
daa
iret
dec
mov
bswap
push
out
sahf
out
push
loope
in
daa
and
push
testl
jns
outsb
pop
and
pop
cmp
inc
dec
pop
add
jo
fistpll
outsl
cmpsb
inc
leave
out
mov
shlb
enter
fsubs
out
add
add
sbb
pop
jno
or
or
hlt
push
mov
cmpsb
jg
cmpsb
rep
and
cmpsb
cwtl
aas
mov
fmulp
test
adc
adc
cmp
xor
inc
push
out
xchg
dec
cmpsb
push
sbb
xchg
jo
sbb
aas
addr16
mov
mov
jg
cmpsb
leave
xchg
shlb
in
push
lock
add
movsl
leave
fwait
loope
pop
or
add
fisubrs
sub
and
repnz
jns
add
sub
xor
xor
cmpsl
cmpsl
cmpsl
cmpsl
jns
sub
push
mov
test
call
daa
iret
or
jns
ds
fsubs
xor
mov
test
es
mov
add
and
dec
test
mov
jmp
jae
jnp
orl
fwait
mov
cld
xchg
xchg
or
mov
dec
outsb
mov
pop
fbstp
test
dec
or
xchg
xchg
fucomi
sub
aaa
pop
inc
dec
jns
xchg
xchg
pop
arpl
jns
jae
insl
je
pop
stc
test
repz
push
sbb
sbb
sbb
movsb
fwait
cmp
nopl
cmp
repnz
or
das
adc
and
sub
out
xor
aas
daa
dec
jl
js
push
das
pusha
stos
jg
pop
sarb
push
add
cmp
repz
add
push
jns
jae
add
push
leave
out
fadd
es
aaa
jb
enter
stos
inc
stos
dec
push
sahf
out
sahf
add
add
fucom
jns
jbe
add
insl
mov
xchg
and
mov
jns
out
movups
jns
out
adc
adc
sahf
push
rcr
pop
in
fwait
cmp
repz
sbb
pmaxub
mov
lahf
or
push
xchg
out
dec
and
sbb
ja
mov
xor
es
xchg
cmp
daa
fiadds
push
dec
iret
repz
sub
push
sub
push
xor
pushf
xor
pop
inc
inc
add
sub
ret
pop
out
mov
inc
enter
orb
pop
jae
repnz
out
jns
movsb
aad
dec
lods
push
add
jns
in
dec
lods
push
or
jns
out
cmp
inc
push
adc
enter
lods
lods
stos
ret
inc
pop
adc
insl
mov
mov
stc
or
pop
lods
mov
loopne
pop
out
repnz
or
xchg
outsl
stc
cmp
or
and
or
scas
inc
into
jno
cs
lahf
ss
incl
dec
scas
in
xchg
and
bound
js
outsl
sbb
les
sbb
cltd
scas
scas
scas
lahf
cmp
or
scas
jecxz
jmp
add
pushf
sti
jg
scas
ud2
jb
stc
je
or
mov
cmp
pop
popf
cmp
repz
add
dec
mov
invd
mov
sahf
out
or
jns
or
pop
cmp
mov
jmp
push
cmp
pop
push
pop
cmp
leave
pop
and
sbb
iret
jae
sbb
sbb
iret
push
addr16
and
and
mov
movsb
movntq
ja
cs
out
sahf
adc
sub
sub
adc
repz
hlt
push
sub
sub
mov
mov
or
jb
enter
mov
mov
mov
daa
iret
sbb
add
jo
push
jns
sahf
out
pop
orb
nop
cwtl
push
pop
test
jns
xchg
mov
xadd
inc
aaa
jns
enter
out
fldt
enter
mov
das
lock
outsb
repnz
clc
push
sbb
leave
repz
adc
push
cmp
cmp
sub
and
and
iret
repz
inc
dec
and
iret
jae
push
pop
es
push
sub
js
jns
leave
repz
sub
out
jbe
test
mov
nop
mov
xor
enter
scas
pop
sub
push
aad
dec
mov
sub
xchg
ljmp
push
sub
add
and
and
adc
sbb
sub
add
aas
inc
push
sub
adc
mov
dec
sub
gs
arpl
test
push
or
add
leave
repz
add
push
inc
cmp
iret
repz
xor
sub
sbb
cmpsl
stc
cmp
clc
enter
jns
out
loopne
fcom
ror
jnp
out
enter
mov
cmp
mov
jns
out
xorb
out
sahf
out
dec
inc
sub
inc
les
or
add
call
jp
sbb
sub
push
add
out
sahf
out
add
cmp
pop
or
or
aaa
fldt
or
aaa
jns
adc
adc
adc
and
pop
inc
inc
push
addr16
jbe
push
xorps
jns
out
insl
push
and
jb
pop
jo
push
pop
andb
cmpb
pop
jo
addl
leave
sahf
mov
ret
in
xorb
sbb
sbb
mov
add
inc
enter
and
inc
mov
sbb
sbb
sub
pop
sub
fs
adc
je
add
movsb
add
in
andb
fisttps
mov
cld
test
cs
inc
jle
test
shll
xchg
pop
stc
lcall
iret
mov
in
call
ja
jle
adc
push
ficompl
mov
cmpsl
in
fidivl
rcr
fsubp
stc
jb
jle
icebp
dec
les
xchg
dec
and
push
orb
push
cmpsl
mov
aam
mov
dec
fiaddl
pop
jle
adc
pop
mov
xchg
fsubrs
sub
pop
das
inc
in
insb
and
pop
and
xor
xchg
lahf
les
out
push
or
cmp
repz
adc
iret
adc
sbb
sahf
out
lcall
xor
out
pop
push
cmp
push
mov
int3
mov
or
repz
push
js
lret
in
inc
jns
testl
inc
jl
lcall
roll
sarl
adc
inc
pop
sbb
fisttps
pop
add
jg
dec
adc
mov
je
mov
negb
jo
icebp
fiaddl
addr16
push
push
pop
inc
jg
mov
inc
push
xchg
icebp
pusha
pop
aas
pop
pop
cmp
push
pop
xor
mov
dec
test
and
jg
stc
mov
add
push
and
mov
fidivs
roll
mov
mov
sub
inc
popl
test
mov
sub
inc
rorl
sbb
sbb
loopne
add
add
cmp
testl
push
xor
sahf
sub
or
ds
push
call
in
push
and
jnp
jae
push
or
add
push
cld
adc
pop
loopne
push
hlt
sbb
pop
pop
fsub
push
sbb
push
out
sahf
out
pop
mov
jns
and
das
push
out
es
pop
inc
into
test
aam
cmp
adc
xor
xchg
xorb
inc
cmp
xorl
push
iret
repz
cmp
pop
js
mov
lahf
cmpsl
stc
cmp
adc
xor
add
repz
pop
ja
mov
addr16
bnd
das
push
dec
pop
adc
add
arpl
jo
mov
add
cli
or
or
ret
jae
hlt
adc
ljmp
jg
mov
leave
sbb
into
sbb
rorl
and
push
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
ljmp
mov
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
decl
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
incl
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
decl
xchg
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
clc
push
pusha
les
add
sti
aas
jno
or
mov
jo
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
call
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
xchg
hlt
pushl
int
mov
addr16
push
mov
xchg
aas
decl
cmp
popa
mov
popa
push
pop
sarl
jl
mov
das
push
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
call
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
lcall
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
call
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
and
pop
and
repnz
pop
inc
inc
je
inc
inc
push
dec
sub
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
int
decl
movsl
cli
test
xor
leave
mov
insb
fdivs
jne
lcall
fcompl
shrl
push
jg
push
adcb
push
popa
sarb
and
mov
cltd
xchg
mov
mov
or
decl
or
and
or
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
ljmp
test
xchg
sbb
push
sub
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
call
cmc
inc
movsl
fisttps
fadd
shll
jmp
outsb
xor
decl
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
call
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
lcall
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
jmp
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
movsb
ljmp
or
or
push
in
decl
xchg
daa
scas
mov
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
ljmp
sbb
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
mov
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
pushl
dec
fisubrl
or
scas
testb
pusha
jp
inc
xor
pusha
fists
addr16
mov
jns
imul
andl
sar
mov
rclb
or
add
mov
das
es
lds
loopne
pop
loopne
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
pushl
push
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
clc
jmp
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
pop
hlt
lcall
clc
sar
imul
push
js
or
push
addl
decl
mov
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
mov
jg
aaa
pusha
mov
fidivrs
mov
jmp
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
call
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
test
pop
out
add
test
ret
into
cs
pop
js
push
push
les
xchg
inc
push
xlat
cmp
repz
fcmovnu
repnz
repz
loop
in
iret
repz
in
jmp
iret
repz
in
repz
cmc
iret
repz
div
clc
stc
cli
sti
dec
cltd
outsb
cmp
daa
adc
add
add
push
push
movsl
sub
lahf
iret
push
jbe
sbb
scas
jnp
inc
or
dec
es
dec
bound
jbe
inc
shrb
push
dec
mov
dec
push
popa
je
push
sbb
lds
cltd
out
and
inc
dec
jle
adc
and
aas
pop
inc
fistpll
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
sub
xor
xor
xor
ficoml
popa
push
inc
jbe
pop
insb
imul
es
and
jnp
push
dec
inc
pop
cltd
dec
mov
push
inc
dec
sahf
dec
lods
add
add
or
mov
gs
sub
mov
ss
jbe
xchg
mov
rolb
and
push
sarb
gs
adc
add
arpl
or
push
cmp
andl
pop
inc
xchg
imul
cmp
je
aaa
pusha
ljmp
popl
in
and
or
lods
mov
pop
cltd
and
jae
inc
hlt
push
add
das
sub
scas
popa
pop
inc
aas
in
orb
pop
inc
inc
mulb
xchg
sbb
inc
pop
std
icebp
adc
push
je
jo
inc
inc
inc
lret
into
out
add
ds
mov
scas
add
mov
iret
int
push
dec
cmp
mov
lds
inc
mov
mov
adc
fs
mov
adc
inc
outsb
jne
mov
xchg
push
popa
mov
sub
addr16
ss
add
add
or
add
jbe
aad
ss
clc
xchg
into
sub
pop
fwait
pop
jo
insl
adc
inc
cmp
push
mov
aas
aaa
xchg
das
pop
mov
pop
inc
ret
add
gs
and
and
mov
lahf
pop
mov
mov
mov
aad
xlat
mov
inc
add
lahf
xchg
cmp
adc
fisttpll
sub
xor
jo
or
add
lahf
inc
gs
push
outsl
outsl
test
sub
aam
bound
bound
push
lds
mov
mov
sub
in
test
sarl
adc
add
popl
call
xchg
push
orl
jns
sub
subl
jb
push
sahf
mov
xchg
addr16
outsl
arpl
test
dec
popa
mov
std
add
xlat
inc
push
bound
ja
fbstp
xor
addr16
sbb
dec
les
es
daa
push
pusha
cmp
das
xor
inc
push
nop
fwait
or
inc
push
inc
dec
xor
outsb
jg
movsl
adc
lods
je
inc
and
dec
cmp
adc
inc
jmp
push
cld
dec
sbb
sbb
cmp
adcl
inc
push
inc
dec
cmp
je
jns
arpl
mov
or
pop
pusha
in
pop
in
xchg
insb
insl
aaa
add
pop
insb
mov
push
inc
xchg
fildl
adc
pushf
or
negl
daa
sub
mov
subl
add
push
add
gs
pop
outsb
adc
add
fdivr
or
cli
loopne
adc
xor
inc
mov
fldt
sahf
mov
add
or
pop
pop
push
loopne
sti
decl
or
or
or
or
or
adc
adc
push
adc
xlat
decb
push
add
pop
sbb
adc
adc
adc
mov
shrl
add
or
adc
pop
adc
cmp
add
jo
shlb
add
and
add
sahf
add
les
add
outsl
or
mov
jb
adc
xor
imul
ds
push
and
inc
push
adc
pop
and
xor
add
jmp
inc
mov
adc
xor
cmpb
or
add
cmp
adc
add
or
arpl
add
push
adc
or
add
nop
subb
add
pop
adc
mov
scas
pushf
into
add
adc
add
pop
scas
cmp
adc
jl
pop
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
lcall
and
and
mov
mov
adcb
mov
fiaddl
or
and
stos
js
out
loopne
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
inc
aas
imul
fdivrl
add
mov
mov
loopne
mov
fnstcw
adc
rcll
dec
mov
and
cmpb
ret
ja
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
xor
inc
xchg
jge
xchg
jl
add
xor
incl
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
sub
cmpsb
lcall
mov
movsl
jecxz
pop
mov
mov
or
xchg
jg
or
insb
sub
addr16
out
jmp
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cli
cmp
fisubrl
in
mov
orb
int3
lcall
fs
ljmp
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
fcomps
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
fistpll
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
call
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
in
outsl
insb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
mov
mov
stc
xor
hlt
and
xchg
jmp
sbb
xchg
pop
bound
pop
pushl
jb
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
negb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
mov
stos
imul
scas
fadds
in
sub
mov
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
fs
inc
mov
dec
adc
push
lock
lods
jp
testb
pushl
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fisttpll
je
hlt
es
aas
std
cli
push
push
push
idivl
jg
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
incb
aas
sti
punpckhbw
cmpsb
orb
mov
lock
jmp
xchg
pop
clc
pop
sarl
xor
movsb
add
cli
lcall
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
jg
ljmp
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
idiv
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cld
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
loopne
fdivrl
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
call
adc
push
jo
pusha
imul
add
mov
cmp
xchg
mov
push
in
sub
loop
pop
xchg
ftst
jbe
xchg
and
lcall
shrb
shlb
out
aas
stc
add
sti
jmp
pop
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
pop
lock
and
lahf
fmull
enter
jecxz
push
cltd
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
bound
cmpsb
push
pop
jg
add
jg
jbe
mov
aad
test
mov
mov
iret
sar
fldt
push
jbe
push
sbb
stos
icebp
pop
incb
sti
jmp
dec
jno
adc
push
inc
jecxz
sbb
sarl
in
pop
std
adc
loopne
sar
adc
lahf
stos
mulb
imul
dec
ret
imull
mov
mov
aas
mov
fsubrl
cmpxchg
and
decl
mov
clc
xchg
pushf
mov
repnz
and
mov
mov
lahf
or
push
rcrl
in
xor
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
outsl
lcall
mov
inc
sti
arpl
daa
std
or
sbb
mov
lcall
incl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
push
cld
lds
fidivrl
jg
stos
pop
iret
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
call
outsb
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
add
call
ljmp
bound
pop
outsl
xchg
inc
test
in
jge
popa
xchg
das
rolb
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
movsb
decl
xchg
aad
loop
lahf
mov
or
out
lcall
fisttpl
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
lcall
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
ljmp
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sti
iret
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
jg
es
xchg
fidivrs
clc
pushl
jo
aas
repz
outsl
lock
in
jmp
mov
stc
out
mov
clc
push
std
mov
loopne
sahf
or
mov
decl
aad
dec
push
mov
fsubrp
dec
sahf
enter
incl
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
push
in
cmpsb
mov
pop
cld
or
dec
ss
outsl
jg
inc
lods
movsb
or
repnz
mov
loope
pop
and
imul
cmpsl
lret
pop
in
cmp
inc
clc
jmp
mov
pop
lock
jmp
hlt
dec
mov
aas
fcomps
xlat
inc
aas
mov
jg
mov
jg
out
or
addr16
sbb
cld
daa
jp
std
adc
clc
in
loopne
cltd
or
mov
ret
nop
cmp
das
incb
add
icebp
scas
lock
pop
pop
div
cld
idivl
fs
pop
add
loope
jae
jmp
shrl
je
jge
sti
pop
lds
jg
stc
add
out
das
xchg
or
fndisi(8087
fisttps
sti
mov
or
ret
cmp
ja
push
leave
outsl
das
jge
aaa
fwait
pop
add
cmpsb
cmp
call
cli
or
data16
decb
adc
mov
and
loope
adc
call
loope
in
add
incb
in
cmp
int
add
push
pop
nop
or
dec
lock
or
mov
mov
jle
icebp
ret
ror
sbb
aaa
cmp
cmp
adc
shrb
clc
stos
sub
mov
pop
clc
loope
loope
mov
lahf
mov
sub
dec
add
xlat
jmp
mov
and
fmull
cld
pop
cmp
cmp
repz
sbb
pop
gs
lds
dec
sarl
pop
out
jg
jno
ret
jmp
cmp
inc
sti
andb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
or
mov
std
mov
daa
jmp
faddl
sbb
xchg
aaa
inc
test
sar
ljmp
lock
stc
push
dec
out
fstpt
mov
enter
add
lcall
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
jmp
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
std
adc
push
sti
pop
inc
dec
push
leave
dec
lods
push
mov
push
cmp
xchg
push
iret
and
add
pop
sub
and
fcmovbe
nop
xor
fxch
mov
xor
xchg
mov
scas
pop
ja
or
lcall
das
nop
or
mov
mov
mov
lcall
cmp
dec
cmp
enter
ljmp
je
jge
cmp
add
stos
inc
popl
scas
adc
pop
scas
imul
jb
int3
pop
test
dec
cs
adc
into
jbe
add
mov
mov
lahf
or
out
in
jmp
jno
push
xchg
mov
mov
xchg
xor
jp
and
test
sarb
lahf
add
clc
pushl
adc
xchg
les
fnstcw
pushf
push
std
ljmp
sub
cmp
scas
gs
std
push
mov
dec
sar
testl
loopne
dec
lahf
ljmp
mov
pop
rorb
mov
jmp
and
pusha
sahf
xchg
in
mov
sti
sahf
popf
lcall
loopne
sahf
fcoms
jne
leave
fwait
mov
adc
movsb
test
and
adc
lcall
fildll
in
enter
jg
mov
pop
fldcw
das
jbe
stos
aad
sbb
xor
fwait
aaa
ds
subl
jb
inc
imul
inc
push
je
mov
push
adc
adcl
cmc
xor
mov
push
gs
in
fidivl
jns
outsb
cmp
jnp
stc
or
fldcw
lcall
sub
cmp
popa
sub
push
testb
add
leave
loopne
lods
shlb
lock
pushl
in
adc
mov
sub
sub
pushl
pop
sarb
xor
fldt
and
das
sbb
aad
pop
ljmp
fidivrs
out
pop
call
jmp
rcr
jne
cli
repz
xor
sarl
lcall
dec
sub
mov
dec
jns
jmp
lcall
xchg
cmp
test
mov
pop
sub
pop
pop
das
sbb
xor
cmp
xchg
imul
inc
sub
sub
sbb
iret
repz
filds
out
add
fisubs
inc
fmul
mov
or
iret
sarb
cmp
pop
pusha
jo
inc
or
out
stos
aaa
jmp
fisttps
hlt
dec
daa
decl
sbb
mov
mov
dec
mov
pop
inc
add
ljmp
jo
into
shll
push
shrl
sub
cmp
or
inc
xchg
mov
mov
clc
aad
jns
fs
push
rcrl
filds
mov
insb
imul
mov
mov
into
push
std
fwait
adc
movsl
lods
addr16
lret
addr16
decl
xchg
cmp
rcll
xchg
xor
subl
add
nop
loopne
jmp
andl
pop
dec
loopne
inc
dec
jle
or
push
sub
dec
inc
sbb
mov
adc
repz
jb
jo
jle
xchg
movsl
rolb
jne
ja
pop
cmp
scas
decb
inc
call
ds
lret
test
sbb
dec
add
mov
push
adc
mov
dec
inc
test
dec
sarl
xor
gs
ss
mov
push
push
jp
add
lods
inc
jmp
mov
pop
std
jp
cltd
scas
ret
mov
xchg
xchg
imul
add
jns
xchg
hlt
stc
outsl
xor
lcall
mov
hlt
enter
incl
jge
add
jo
enter
int3
mov
fwait
pop
mov
icebp
lcall
cmpsb
les
jo
pop
fmull
std
sub
jnp
testb
cmpsb
pop
or
jmp
mov
jbe
popf
out
psadbw
aam
xchg
mov
repnz
icebp
pushl
or
mov
movsl
out
ljmp
std
std
xor
in
lcall
inc
out
inc
subb
lock
inc
jg
mov
loop
and
pushl
imul
mov
add
adc
cmpsb
nop
push
jo
cmp
mov
dec
insb
dec
pushl
xorb
inc
jl
movsl
push
xor
not
sub
mov
sbb
decl
add
or
lahf
dec
push
adc
mov
push
rorl
divl
fstl
dec
mov
aam
imul
out
popa
mov
inc
inc
cwtl
xlat
out
icebp
adc
cmp
pop
jg
cmp
orb
insl
call
push
jne
jb
fldl
and
jmp
pop
jnp
xchg
push
ret
insl
dec
lret
inc
aaa
mov
insl
dec
cmpl
pushl
xor
sub
mov
fwait
push
scas
or
pop
fldcw
ret
stos
xchg
out
push
inc
ret
repnz
idivb
add
jmp
test
mov
pop
sbb
std
cmp
and
ljmp
in
push
xchg
out
pop
scas
ljmp
adc
mov
lea
test
xor
fistl
mov
inc
lcall
pop
int
sti
push
bound
cwtl
sub
cmp
xor
int3
add
push
shl
pop
inc
or
add
pop
and
leave
pop
ljmp
fisubl
into
mov
int
jne
jno
xor
movsb
and
ror
adc
test
ljmp
sub
in
sbb
xchg
adc
sbb
mov
mov
call
ljmp
mov
add
and
cmc
mov
stc
aaa
es
ljmp
jge
xchg
cmp
ss
std
mov
bswap
hlt
mov
mov
hlt
test
cmp
jp
cmp
cld
pop
nop
mov
sarl
jp
mov
sub
lock
pop
xchg
or
test
decl
fwait
mov
sarl
test
shlb
inc
sub
shlb
mov
pop
xchg
xchg
push
mov
lds
lea
fldt
dec
imul
pop
push
xor
xor
or
call
xchg
adc
jmp
outsl
sub
ret
jb
mov
stos
xchg
outsl
mov
cmp
mov
dec
add
dec
lock
sbb
shrb
ljmp
repz
pop
sbb
mov
add
xchg
jo
cli
jno
scas
popa
and
incl
loope
lock
mov
lds
inc
or
shlb
jns
inc
xor
out
jle
aad
dec
xchg
shrb
inc
repnz
xchg
fnstenv
push
or
lret
cwtl
mov
hlt
idiv
lcall
mov
fcoml
adc
testb
push
lcall
lcall
fidivrs
ret
adc
test
stc
sbb
xchg
xchg
insb
xchg
std
call
mov
push
mov
mov
call
mov
fiaddl
inc
or
inc
mov
popf
and
gs
and
lret
xchg
bnd
mov
pop
pop
and
imul
mov
clc
iret
andl
dec
push
mov
push
sub
enter
decl
mov
loopew
iret
adc
call
cmp
push
imul
clc
aaa
in
cmp
pop
ss
outsb
cmp
and
push
push
mov
jo
scas
mov
les
add
decl
enter
dec
adc
sub
dec
popl
push
mov
leave
xchg
mov
pushl
cmp
inc
mov
jecxz
cltd
fnstenv
push
jl
fistl
mov
xchg
call
jmp
inc
test
lods
ret
cmpsb
mov
sub
imul
scas
mov
ficoms
jecxz
push
push
jne
mov
les
lods
pop
push
scas
in
or
sub
stos
ljmp
gs
xchg
and
mov
lahf
add
incl
inc
aas
and
or
dec
or
xlat
jmp
mov
or
mov
pop
iret
push
clc
or
cmp
push
pop
dec
and
cltd
jle
xchg
std
xchg
int3
sbb
xchg
add
lahf
clc
ljmp
adc
in
cmp
loop
cmpsb
cmpsb
lret
inc
cld
mov
out
mov
sahf
adc
or
loope
xchg
dec
fsts
pop
pop
mov
mov
idivl
pop
imul
mov
and
mov
test
mov
out
mov
loop
xchg
inc
jg
cmpsl
hlt
mov
ds
shrl
cltd
icebp
xchg
cmp
add
mov
mov
or
dec
hlt
mov
push
aad
add
or
mov
call
jg
mov
push
mov
fucomi
or
clc
push
fdivs
inc
inc
and
mov
sbb
xchg
insl
or
insb
lds
cltd
adc
lcall
jo
fistps
push
push
dec
fldt
or
xor
or
push
fbstp
push
xchg
scas
inc
and
xlat
fwait
int3
jbe
sahf
int
sbbl
mov
fwait
or
int
and
pop
movsb
jle
fcmovnb
fdivrs
call
cltd
jne
push
inc
pusha
stc
in
xor
inc
jo
jle
pop
icebp
push
jne
mov
pushf
sarb
inc
ljmp
jne
pop
sub
add
arpl
adc
and
push
test
lcall
decl
inc
sbb
jo
fisttpll
int3
arpl
push
stos
dec
xchg
pop
mov
sbb
ljmp
movsl
mov
mov
pop
aad
mov
sub
sbb
ljmp
or
lods
add
and
movsb
cld
test
hlt
frstor
mov
or
xchg
and
jmp
aas
inc
adc
and
ljmp
xchg
js
dec
insb
fst
jg
pop
decb
lock
into
sbb
out
mov
rcrb
pop
xchg
movb
sarb
imul
mov
adc
cwtl
sbb
rcl
sahf
lahf
ljmp
sub
pop
enter
incl
cmp
jecxz
lods
mov
xchg
add
mul
incb
cmp
sbb
ljmp
sub
mov
jl
in
popf
mov
aaa
pop
insl
push
hlt
sbb
cmpsb
jle
ret
decl
flds
repz
xchg
dec
push
test
push
lret
cli
inc
repnz
fwait
mov
mov
jmp
xchg
or
jno
js
js
decl
pushf
push
lcall
dec
add
das
clc
jmp
mov
testl
dec
cs
xchg
mov
mov
add
jg
or
adc
sub
cmp
dec
lret
decl
jmp
push
ret
pop
xchg
pop
jg
lret
test
adc
leave
push
rep
sbb
decl
jmp
dec
daa
xchg
sbb
xchg
mov
fisubs
sub
ds
testb
fcmove
cli
decl
enter
xorl
std
loope
das
xchg
cmp
mov
push
inc
xchg
ds
stc
fnstenv
mov
insb
jns
decl
jns
push
xchg
out
push
xor
jae
mov
jns
ret
aam
push
push
loop
std
push
jecxz
test
adc
or
outsl
scas
xor
pop
xchg
pusha
jl
xchg
mov
call
and
jp
fsubrp
nop
dec
jg
shlb
lahf
cmp
push
dec
inc
test
test
insl
xchg
cmp
xchg
inc
outsl
lds
aad
sub
dec
dec
lock
rcrb
adc
sbbl
insl
dec
cli
push
filds
push
pop
mov
loope
mov
out
pop
pushf
mov
and
or
pushl
cmp
stc
aaa
fmull
push
imul
pop
or
ss
insb
shrl
or
call
rcrl
fwait
mov
leave
ljmp
mov
test
or
jge
movsl
xchg
in
fisubrl
mov
lcall
iret
add
scas
jle
pop
sub
movl
pop
mov
or
inc
sbb
popa
mov
ja
call
push
mov
cs
jg
pushf
mov
lcall
lds
sub
jb
cmpb
push
or
or
out
sbb
xchg
cmp
jg
jl
mov
and
test
push
cld
cmp
scas
mov
fdivl
add
call
loope
pop
or
dec
cwtl
push
mov
movsl
stos
dec
cmc
ja
cmpsb
sbb
mov
dec
xor
aas
les
movsb
das
orl
dec
mov
lock
mov
adc
and
or
popf
push
les
inc
stc
xchg
out
cmpsb
lcall
mov
xchg
xchg
adc
fs
push
into
push
cmp
adcb
ljmp
sub
push
sub
stc
push
les
xchg
out
sub
xchg
hlt
incl
ljmp
loope
bound
iret
arpl
outsb
inc
pop
rorl
sbb
or
out
push
xor
ficoms
adc
pushl
cli
jecxz
add
pop
xor
inc
adcb
or
repz
fwait
inc
and
dec
xor
icebp
inc
sub
dec
outsb
imul
inc
pusha
ret
lcall
ljmp
std
inc
mov
push
pop
inc
ss
sarb
in
test
incl
jl
cmp
shlb
jecxz
pop
pop
cmpsl
mov
or
sub
jle
lcall
pop
int
cmpsl
mov
push
inc
icebp
mov
frstor
xchg
sbb
sub
ret
push
xchg
add
cmpsl
leave
test
lds
repz
stos
cmpsb
js
push
jp
sub
scas
jb
out
in
jmp
xchg
mov
jmp
stos
inc
jl
cltd
inc
push
test
or
call
dec
loop
imul
adc
or
mov
adc
or
push
lahf
aaa
lock
lcall
mov
into
fdivr
adc
mov
fwait
stos
mov
cmpsl
fisttpl
lods
and
call
outsl
xchg
xor
and
jns
push
insb
fldenv
cmpsb
mov
or
mov
push
incl
pop
inc
loope
scas
add
jp
pop
xchg
fs
xor
fstpt
pop
dec
push
mov
lret
cmc
pusha
mov
inc
mov
sbbb
pop
lock
loope
fidivs
lcall
lods
ret
inc
dec
mov
jae
fbstp
jmp
and
sub
push
sub
inc
frstor
sub
lods
sub
jle
rolb
dec
xchg
jbe
adc
cmp
jns
call
in
xchg
cmc
loopne
ja
aaa
shll
pop
int
divb
xchg
cmp
fidivl
lods
mov
mov
insb
fwait
push
push
leave
cwtl
movsl
aaa
jge
pop
imul
lock
decl
mov
lret
or
dec
fwait
ljmp
into
lock
outsb
popf
lods
cwtl
call
mov
push
out
or
les
push
push
fcomps
out
jo
outsl
loopne
jg
mov
mov
dec
sbb
lds
int
test
popa
bound
insb
out
cmp
mov
pop
jmp
pop
sub
sbb
xchg
xchg
push
mov
cmp
jns
push
ja
pop
movsb
imul
sbb
jno
aad
arpl
rol
jmp
mov
add
fildll
or
mov
paddusb
fisttps
add
inc
or
ja
incl
cmp
jbe
mov
push
test
icebp
pop
mov
loopne
insl
ds
lcall
push
shrl
add
mov
fcoms
repnz
mov
aaa
and
addl
dec
mov
mov
dec
daa
mov
ds
xor
mov
mov
lcall
call
dec
fstpl
dec
incb
loopne
cli
das
push
rorb
cmpsl
insl
mov
incl
pop
pop
test
push
and
mov
jnp
rolb
ljmp
pusha
int
dec
and
xor
mov
popf
sub
mov
sub
jmp
insb
sbb
xor
aaa
lret
lods
pop
test
iretw
adc
dec
jns
cmp
cmpsb
decl
push
stos
insl
pop
outsb
jns
stc
stc
stc
test
mov
sub
loopne
mov
pop
push
mov
mov
lock
cmp
cs
cmp
or
pop
push
mov
or
and
sub
ss
adc
or
ljmp
and
lcall
cmp
dec
mov
push
mov
push
xchg
mov
mov
dec
mov
jle
add
xorb
pop
lds
loope
lcall
mov
stos
sbb
and
xchg
inc
mov
or
sub
jmp
inc
insl
pop
iret
add
mov
lea
scas
js
mull
xor
pop
sub
and
cmp
xchg
mov
mov
fwait
sahf
lcall
push
mov
inc
dec
and
sub
dec
ja
hlt
mov
mov
jno
pop
sahf
scas
mov
sti
xor
jmp
inc
sbb
sub
cmp
int3
aaa
clc
jmp
data16
test
pushf
shll
cmc
or
dec
das
jl
iret
mov
xchg
movsl
decl
sbb
nop
xchg
out
gs
fstps
and
adc
xor
xor
ljmp
imul
adc
or
xchg
jg
xchg
addl
mov
lds
xchg
pop
lds
mov
sub
mov
jnp
mov
popf
jg
rorl
push
mov
jg
call
lahf
jmp
sub
je
adc
pop
xchg
xor
loopne
ljmp
je
outsb
decl
imul
mov
xchg
push
inc
mov
ss
pop
xchg
out
sar
stos
pop
mov
sahf
bound
mov
push
push
movsl
xchg
ret
icebp
jmp
mov
and
xchg
push
xchg
mov
rclb
das
popf
xor
and
lds
ficompl
imul
movsb
mov
stc
mov
in
sbb
xchg
outsl
dec
pop
ljmp
std
cmp
cmc
sub
incl
fstpt
add
xchg
out
mov
shl
add
jl
jl
mov
jmp
jns
or
cli
push
xchg
dec
push
mov
adc
xchg
jmp
sbb
dec
fisttps
adc
and
lret
or
clc
incl
mov
jne
les
cmc
adc
repz
jl
scas
sbb
mov
fstl
pusha
xchg
dec
cmpsb
adc
push
sub
stos
push
mov
clc
ljmp
sbb
or
and
or
lds
das
mov
aad
in
sar
bnd
inc
cmpl
jecxz
nop
jo
jge
loop
es
cmp
dec
inc
jmp
mov
cmp
daa
scas
inc
cs
mov
std
inc
xchg
stos
ja
fldcw
mov
mov
mov
add
cmp
aad
cmp
and
dec
and
and
inc
add
test
out
mov
sub
jno
lret
mov
cli
lods
adc
adc
frstor
popf
in
jg
pop
mov
or
ljmp
push
cltd
push
jbe
in
add
add
and
jmp
fisubrs
rcl
sub
mov
fmull
add
mov
cs
and
movsb
sbb
mov
sbb
add
push
mov
jbe
and
inc
in
mov
jb
orb
fcoml
adc
jnp
imul
and
jmp
jae
enter
xchg
mov
test
test
pop
ret
mov
pushl
pop
pusha
and
popa
xchg
jns
xchg
mov
fisubrs
cmpsb
ss
or
out
call
in
aaa
mov
out
dec
stos
lods
cmp
mov
in
jo
push
sbb
cli
decl
mov
das
rclb
dec
shll
lahf
mov
scas
gs
push
sub
incl
dec
or
pop
scas
lock
sbb
decl
cmc
fwait
stos
std
sti
mov
arpl
pop
push
imul
sbb
ja
lods
jmp
jns
fcmovnbe
out
jge
xor
jle
mov
paddq
mov
and
loopne
incl
mov
aaa
addr16
ljmp
shll
sbb
or
cmp
mov
rclb
push
fadds
nop
pushl
nop
pop
push
insl
mov
call
cltd
inc
push
data16
lcall
popf
loopne
insl
or
ffree
cli
push
popa
pop
dec
jae
cs
addr16
pmullw
decl
test
pop
cmp
in
push
je
sub
cmp
inc
andb
and
mov
lcall
loop
pop
push
xchg
sub
push
add
test
inc
push
ja
jp
pop
das
inc
jns
jmp
sbb
fdivrs
mov
lea
mov
xchg
loopne
jmp
rcrl
jecxz
lods
sub
pop
fsubr
lret
add
shr
cmpsl
xchg
and
loopne
mov
or
ret
xor
or
xchg
scas
push
mov
repz
test
jmp
cmc
inc
xchg
call
and
push
inc
mov
nop
nop
jg
cmp
ja
jg
adc
cmp
dec
mov
aas
jno
sbb
add
pushl
mov
dec
insl
stc
push
ds
mov
cmc
roll
adc
sbb
hlt
xchg
stc
pusha
mov
test
push
lcall
inc
mov
push
xchg
pop
or
add
mov
pushf
out
jnp
inc
std
sahf
xchg
idiv
incl
inc
cmp
test
and
cwtl
arpl
inc
jecxz
out
test
shll
aaa
cmp
mov
in
jle
or
push
add
dec
stos
incl
pusha
ret
cmp
lods
dec
sbb
mov
psubw
mov
sbb
test
xchg
stc
scas
idivl
and
testl
jg
jmp
pop
repz
dec
sub
jb
mov
jge
xor
lea
fwait
call
pop
aam
out
push
xor
pop
pop
adc
push
sbb
jmp
dec
mov
imul
mov
jmp
xor
hlt
jge
popf
mov
ja
sbb
mov
movsl
push
and
push
repz
dec
or
outsb
fs
jg
mov
imul
inc
dec
push
jnp
mov
add
ret
add
bound
sub
jnp
mov
inc
test
mov
hlt
sbb
mov
imul
inc
xor
stos
mov
or
xchg
xlat
sbb
loop
nop
fistps
jl
orl
push
fisubrl
pop
sbb
sbb
sbb
cltd
inc
jle
dec
add
cmc
and
cs
xor
mov
pushl
sub
push
scas
and
enter
mov
insb
out
enter
int
ljmp
mov
mov
push
into
pand
push
inc
adc
mov
mov
mov
cld
out
aad
loop
mov
movsl
cmp
aam
stos
cmp
out
lcall
stos
pop
lods
sub
cmp
mov
icebp
jp
push
add
jo
ret
leave
sarb
jmp
push
rcr
loope
data16
insl
sti
dec
jl
xor
ss
mov
incl
daa
cmpsb
mov
jge
bound
cwtl
aad
ss
call
mov
dec
call
lds
cltd
cmp
jg
cltd
pop
cmpsb
push
pop
insb
aam
jo
loop
call
jbe
iret
sti
fwait
nop
or
repnz
lods
sbb
sub
decl
fstl
inc
jo
pop
cmp
jmp
mov
mov
in
hlt
fwait
idiv
ljmp
imul
sub
pop
in
add
into
push
iret
call
pusha
iret
mov
push
arpl
cli
sbb
sub
nop
ret
cmp
leave
xchg
mov
adc
sar
outsl
cmpsl
pushf
pop
test
cmp
mov
mov
ret
push
test
mov
jg
mov
call
cmp
lret
sti
lock
cwtl
mov
and
mov
push
stos
jmp
test
dec
jle
mov
or
in
lock
inc
mov
ljmp
mov
cmp
int
lds
inc
mov
jmp
fcompl
ljmp
dec
fdivl
mov
pop
idiv
call
dec
sub
mov
rorl
aam
pushl
jl
jmp
pusha
adc
pusha
xchg
jae
fwait
jnp
sbb
addr16
cmp
pop
add
lcall
decb
loope
lock
test
pop
dec
das
aam
mov
stc
push
push
movsl
out
enter
jg
stos
stos
dec
aas
mov
mov
dec
rclb
repz
decl
mov
fdivr
scas
sub
pop
icebp
jno
js
jne
clc
mov
sarb
pop
dec
scas
imul
stos
decl
fcompl
iret
call
xor
cmp
sub
dec
rolb
jle
ljmp
in
mov
shl
pusha
cmp
jbe
in
sbb
fimull
ljmp
jg
test
jns
push
addl
xchg
lcall
pop
and
jmp
loop
mov
or
mov
out
inc
aam
add
jno
in
movsl
push
hlt
cmpsb
lea
jmp
adc
xchg
add
das
lods
aas
in
lock
mov
jno
imul
ljmp
mov
sbb
out
ret
xchg
mov
mov
mov
add
jmp
xchg
cltd
pop
adc
stc
mov
mov
insl
int
gs
adc
xor
call
mov
mov
filds
lods
sub
ljmp
pushl
or
cmpsb
push
addr16
ret
xorb
push
jb
cmpb
push
jne
push
adc
ja
add
push
out
mov
shl
aas
mov
push
dec
ljmp
jnp
add
xchg
mov
sbb
imulb
in
xchg
sbb
xor
gs
inc
xchg
jg
xor
pusha
insl
pushf
add
fiadds
std
xchg
lahf
xlat
rcr
or
decl
xchg
mov
rcl
movsb
cmp
outsl
dec
dec
insl
ds
insl
out
rolb
or
add
negb
aas
pop
cmp
ljmp
mov
stos
mov
movsl
loop
dec
loop
hlt
xor
orl
call
movb
sub
or
mov
adc
into
mov
jns
adc
call
xor
mov
or
insl
testb
mov
ljmp
mov
ja
sbb
addr16
xchg
ret
enter
data16
lcall
mov
ss
imul
in
imul
mov
adc
jg
das
lods
xchg
out
or
aam
adcb
sub
ds
call
jl
mov
xchg
pop
stos
mov
pop
nop
dec
outsl
mov
sahf
dec
stos
mov
pushl
push
enter
inc
sub
call
out
test
push
bndldx
out
jg
jb
add
incl
pop
xor
ret
and
dec
and
das
mov
jg
ds
movsl
mov
pop
lock
loopne
mov
ljmp
in
and
ja
xchg
push
lods
cmp
ss
icebp
std
jg
or
lcall
cltd
dec
cmp
adcb
mov
adc
dec
fimull
pop
jo
mov
cmp
mov
lods
cmp
ficoms
add
shl
ljmp
lret
decl
mov
mov
scas
xchg
rol
dec
daa
stc
enter
es
lods
add
push
aaa
mov
pushl
xchg
daa
cmp
pop
jge
cmpsl
addr16
iret
test
adc
jmp
out
insb
sub
jg
fxam
jmp
sub
add
or
fs
movsl
sar
xor
ss
mov
mov
lcall
shrb
sbb
mov
add
push
aad
aas
adc
jg
call
jle
insl
cwtl
mov
jbe
repnz
movsl
xorl
out
insl
scas
mov
or
incl
loopne
jno
mov
lds
int
loopne
repz
in
jo
dec
ss
decl
xor
pop
lahf
enter
pusha
jnp
add
sub
arpl
mov
jmp
dec
fistpl
out
int3
int3
lret
filds
lcall
mov
decl
push
test
frstor
inc
stos
sahf
or
adc
sbb
rcrb
push
call
or
aaa
pusha
sub
js
dec
imul
adc
aaa
xchg
inc
mov
insb
lcall
flds
inc
stc
push
pop
cmc
outsb
mov
mov
push
arpl
push
push
fld
and
or
dec
xchg
lods
cmpsl
out
lock
fwait
xor
xor
sub
lcall
test
mov
jb
mov
mov
jle
xchg
or
add
les
outsb
pop
mov
jg
incl
scas
adc
mov
push
mov
ds
aam
xor
test
mov
jmp
stos
ljmp
inc
mov
adc
push
scas
ljmp
ljmp
mov
cmpsb
mov
xchg
je
movsb
cmp
pop
adc
sub
mov
inc
mov
push
out
push
lret
cmp
js
lahf
cmp
xchg
sbb
mov
decl
dec
cltd
xchg
pop
push
hlt
sbb
sub
pop
inc
xchg
aad
xchg
or
fisubl
ja
cli
dec
repz
mov
icebp
push
loopne
decl
lret
xor
rcrl
ljmp
and
and
mov
movsl
xchg
mov
xchg
out
mov
aad
cld
dec
inc
mov
ljmp
mov
outsl
mov
and
mov
inc
inc
add
ljmp
xchg
test
xor
add
nop
hlt
je
stos
jb
adcb
mov
je
dec
clc
mov
sub
addr16
cmp
pop
mov
into
xor
pop
cld
inc
jo
outsl
ljmp
jae
dec
es
sarb
fs
or
pushl
dec
push
int
push
mov
prefetch
inc
dec
lret
insl
iret
sub
rorb
cld
call
repnz
sbb
ss
add
mov
outsl
jg
cli
outsb
pop
jbe
dec
cs
loopne
adc
or
xchg
xchg
sub
nop
out
mov
inc
popa
imul
push
aad
mov
ret
mov
jmp
cmc
or
xor
add
mov
mov
testl
pusha
decl
incl
fildl
xchg
mov
dec
imul
aas
sbb
call
dec
mov
cmp
dec
dec
insb
adc
movd
mov
or
push
push
pushl
out
push
clc
testb
cmpsb
jmp
ljmp
push
cs
incl
jge
adc
in
xchg
xchg
dec
aam
test
in
and
rorb
and
mov
jg
les
lahf
shlb
ljmp
cmp
xlat
xchg
bound
and
aaa
adc
arpl
iret
cmp
decl
mov
xor
outsb
push
or
mov
cmpsl
jle
xchg
inc
pushl
daa
jnp
enter
adc
enter
ss
gs
movsl
out
sbb
loopne
mov
push
ret
inc
inc
std
fdivr
lcall
sbb
xrelease
lods
and
aaa
add
incl
hlt
aaa
pop
xor
inc
push
xchg
lds
cmpb
push
xor
mov
popa
pop
push
mov
sbb
push
arpl
fwait
adc
ljmp
ficompl
push
aad
addr16
cmpsb
mov
scas
xchg
jb
gs
mov
insl
fildll
dec
xorl
mov
test
adc
inc
cmpsb
adc
pop
aad
sbb
call
jae
pop
das
inc
mov
cwtl
sbb
jmp
movsl
xchg
gs
or
insl
test
push
or
lcall
in
inc
push
lds
mov
add
movsl
repz
pop
mov
fwait
call
int3
sub
pop
dec
aam
mov
adc
imul
incl
lret
mov
xchg
sbb
adc
outsb
mov
ss
cmp
dec
sbb
repz
mov
inc
insb
aam
inc
aad
lahf
stc
jnp
inc
sbb
data16
decl
cmp
sbb
repz
xchg
jb
add
sbb
xchg
pushl
fs
jl
push
push
mov
mov
jne
mov
pop
inc
ror
decl
addl
rcrl
cltd
dec
and
ret
nop
sub
push
call
std
and
fidivl
rcr
imulw
push
inc
cmp
inc
ja
dec
mov
mov
decl
push
pop
cmp
fnsave
push
and
into
mov
mov
and
mov
je
xchg
mov
mov
cwtl
leave
pusha
movsl
inc
stc
repz
xadd
mov
jno
cwtl
mov
pop
mov
jp
mov
insl
mov
adc
mov
push
mov
jle
mov
test
arpl
sub
jmp
or
std
jb
jo
jo
pushf
jo
cltd
mov
loop
add
mov
ror
lods
int
scas
or
push
fists
lcall
test
push
lods
cmpsl
sub
mov
js
cld
lret
stos
lcall
stos
ret
shll
pop
xlat
or
loopne
mov
adc
ret
sbb
jg
stos
je
xor
test
scas
xchg
or
mov
test
mov
xchg
test
cs
xchg
dec
into
or
push
push
aaa
movsb
and
sti
fcomip
lcall
rolb
inc
pop
hlt
mov
clc
adc
pusha
lods
push
cmp
jg
pushf
dec
jnp
and
mov
sti
nop
sub
mov
or
push
test
icebp
repz
ret
xor
xchg
inc
clc
push
adc
push
and
out
cmp
ds
cltd
loop
lods
mov
stos
inc
xchg
rolb
fldl
fs
fisttpl
clc
decl
sub
aad
shlb
das
clc
ljmp
mov
pushf
dec
mov
loopne
cmpsb
dec
or
xor
adc
enter
lahf
repnz
add
call
xor
sbb
inc
push
or
xor
push
pop
push
movsl
inc
cmp
or
popf
subb
push
decb
mov
ret
lea
push
ljmp
jmp
stc
outsb
outsb
adcb
hlt
cbtw
mov
xchg
inc
xchg
mov
js
push
dec
jo
pusha
push
adc
inc
adc
dec
xchg
jmp
or
jo
xchg
das
mov
mov
dec
cwtl
and
lea
call
lcall
cmp
outsb
test
lds
sub
ljmp
cwtl
push
dec
and
lahf
sub
movnti
mov
pop
pop
div
mov
mov
xchg
pop
lock
dec
test
push
adc
es
dec
dec
test
cmp
jmp
movsl
jno
jp
imul
mov
lods
dec
test
fldcw
rolb
jmp
nop
les
dec
dec
jmp
inc
sub
and
sub
popf
push
les
push
pop
sbb
cmp
and
sbb
xor
xchg
mov
ljmp
push
sbb
call
xchg
adc
mov
adc
fidivs
mov
lcall
mov
ret
jmp
mov
xchg
mov
out
idivl
test
aaa
mov
sub
ljmp
aam
sahf
aam
movsb
dec
cmp
mov
xchg
cmp
ljmp
mov
pop
push
inc
add
inc
andb
lods
repnz
sar
push
or
mov
sub
shll
jecxz
fstpl
push
jg
mov
pop
sbb
dec
add
cmp
rclb
xor
js
decl
addr16
jecxz
aam
in
push
xchg
mov
push
je
xchg
sub
lret
mov
int3
fcomi
xor
incl
push
push
outsb
das
xchg
dec
in
push
xchg
jno
dec
pop
sub
cmp
lea
lods
cmp
and
clc
into
cmp
ljmp
out
or
inc
repz
pop
push
xchg
in
inc
add
ss
sbbl
jne
int3
jmp
jns
lods
jg
jp
pop
cmpb
or
dec
call
or
jnp
pop
sub
mov
fiaddl
lret
dec
aaa
insl
push
fbld
iret
test
dec
pop
cmp
sbb
dec
fucomip
es
add
js
inc
mov
decl
clc
sub
sarl
scas
push
or
in
outsl
inc
inc
sti
into
xchg
insb
and
inc
std
mov
add
push
loop
aad
pop
ja
ss
push
lcall
lods
push
outsl
inc
decl
adc
sbb
mov
jge
cmp
sub
jmp
inc
sbb
pop
mov
call
out
push
les
repnz
insb
lcall
xchg
incl
mov
cmp
ret
pop
rclb
mov
pushf
out
dec
orb
sar
mov
ja
scas
sbb
dec
les
out
rclb
xor
pop
ret
es
incl
mov
in
push
pop
mov
mov
push
mov
hlt
mov
adc
imull
cmp
popf
in
lea
iret
push
or
push
add
mov
fisubrs
xor
dec
sarl
jl
jmp
enter
ljmp
jecxz
push
pop
popf
sub
ficoms
or
or
mov
push
incl
cld
lcall
push
pop
xlat
jmp
and
call
jmp
fbld
clc
stos
jnp
cltd
fnstcw
pop
loopne
je
incl
push
test
movsb
mov
int
mov
dec
outsb
pushf
push
arpl
sarl
dec
mov
xchg
push
enter
add
cmp
jg
fstl
or
cli
aad
daa
xor
test
and
push
or
ficompl
inc
dec
inc
lcall
xchg
sub
mov
sub
and
xor
sbb
incl
icebp
daa
jmp
cmp
cmpsl
mov
cmp
ja
pop
jg
pop
and
xlat
hlt
aam
mov
jmp
popf
mov
jne
leave
pop
icebp
aaa
std
cmp
aad
test
lcall
iret
insb
out
push
mov
ljmp
sub
jno
cmc
jg
into
bnd
cmp
inc
mov
hlt
movsb
lea
mov
fs
pushl
arpl
ja
test
mov
rorb
or
daa
imul
adc
imul
incl
mov
pop
jo
aad
jmp
dec
mov
mov
push
push
clc
push
call
fidivl
pop
jl
fdivs
push
shlb
push
mov
rclb
scas
clc
jmp
pusha
in
rcll
mov
outsl
mov
or
xchg
xchg
call
and
bnd
fnsave
sub
jg
add
je
pop
adc
jmp
cmc
cs
lea
data16
daa
xorl
cmp
cmp
in
test
ret
push
mov
addr16
inc
paddusb
pop
mov
sub
lret
decl
stos
pop
fdivrp
inc
pop
movsb
adc
ds
xlat
in
cli
add
mov
aaa
jnp
pop
dec
pop
mov
rcl
lcall
scas
mov
insl
push
xchg
and
ss
dec
mov
cmp
sub
jo
sub
dec
or
mov
cs
mov
in
sub
sbb
leavew
mov
xchg
ret
adc
out
ret
frstor
xor
aad
scas
and
rolb
outsl
andl
mov
ljmp
cmpsl
pushf
pop
es
inc
stos
cld
push
cmp
add
das
mov
push
mov
decl
fwait
loop
lcall
and
add
xchg
imul
push
inc
ja
sub
lods
lea
inc
fs
shrb
lds
pushl
in
push
mov
outsl
shrb
fsubr
mov
pop
xor
out
out
out
out
pushf
lahf
popa
sbb
xor
enter
ss
inc
inc
dec
shlb
ljmp
aas
repz
repz
ret
bound
sub
cmp
cmp
cli
dec
ljmp
pop
shr
push
addr16
inc
stc
cld
add
shlb
pop
mov
stos
movsl
xchg
jle
mov
push
aas
mov
ret
es
iret
enter
ljmp
mov
cwtl
insb
push
idivl
es
jb
mov
xchg
push
sarb
incl
in
repnz
jmp
sub
daa
mov
dec
mov
pushf
and
ljmp
cli
xchg
out
mov
xchg
inc
pop
fldt
test
sub
mov
idiv
aas
mov
sub
push
push
dec
subb
mov
jno
mov
push
cld
pushl
push
incl
xchg
je
popa
jl
mov
pop
divb
cmpsl
fwait
les
mov
popa
sub
ja
or
add
fs
add
mov
sbb
pushl
aaa
out
and
aaa
mov
lret
loope
sbb
and
jge
push
jb
jp
loope
std
sti
jo
lds
push
in
outsl
dec
scas
pop
ljmp
xor
xchg
mov
inc
xchg
and
dec
dec
push
lods
and
lds
in
sbb
fnstcw
mov
push
dec
dec
push
iret
lea
mov
pop
sbb
jae
sbb
cltd
ljmp
lahf
stos
jecxz
addr16
mov
cmp
ljmp
andb
xor
dec
jg
jnp
sar
jno
testb
pop
in
movsb
dec
push
decb
mov
insb
adc
sbb
and
cmc
mov
pop
push
mov
lahf
xchg
mov
or
call
jmp
jg
sarb
icebp
stos
jecxz
pop
dec
add
repz
cmp
sahf
cld
ljmp
stc
mov
out
addr16
movsl
in
out
pusha
divb
push
lock
add
cmpsl
cwtl
mov
jns
mov
das
inc
inc
ret
aam
pop
mov
jo
cmpsl
imul
dec
push
mov
rcrb
mov
stos
lods
ja
jmp
int
in
mov
repnz
or
pusha
and
outsb
dec
mov
or
std
xchg
stc
xor
pop
movsb
aad
sub
lcall
dec
aad
mov
clc
call
bound
jb
je
dec
pop
jmp
xor
mov
pop
scas
add
pop
mov
jbe
xchg
mov
out
fsub
aam
mov
push
push
les
adc
inc
clc
lret
jl
decl
lock
std
xchg
xor
jb
fbstp
call
in
xor
pop
and
out
adc
push
aas
sbb
xlat
movzwl
into
scas
lcall
std
inc
push
int
pop
test
ror
jge
cmpsl
aam
sahf
imul
ja
or
cmc
pushl
icebp
or
xchg
test
shrb
inc
add
inc
jmp
mov
mov
push
and
xchg
adcl
sbb
xchg
jae
add
jmp
in
xchg
mov
dec
aam
lcall
mov
jns
mov
rcr
lods
idivl
dec
push
xor
test
bound
sbb
add
jmp
outsl
jae
hlt
lock
push
push
dec
ja
and
int3
aam
and
sbb
adc
pop
or
incl
push
dec
xor
jae
inc
mov
dec
ljmp
and
aas
aas
jno
xor
pushf
aas
mov
cmp
dec
into
popa
fwait
mov
fwait
push
pop
sar
lcall
movl
and
test
mov
cmpsl
xor
mov
or
call
jge
xor
xchg
add
mov
xor
or
pusha
dec
rorb
cs
adc
push
mov
decl
sub
les
out
mov
stc
imul
lods
mov
mov
lcall
decl
dec
pop
mov
cmpsl
rcl
stos
or
and
ret
clc
or
fisttpl
popf
cltd
ss
pop
xchg
popa
dec
iret
mov
pop
adc
mov
lcall
out
in
mov
push
stos
xchg
ret
mov
mov
les
in
fildl
fisubrs
push
pop
aam
movsb
mov
clc
jmp
adc
lahf
sarl
scas
pop
lock
jne
jp
pop
pop
jo
inc
jns
lret
mov
cli
xchg
scas
jmp
ljmp
lods
xchg
add
scas
sub
insl
movsb
bound
int
repz
jge
in
push
decl
lock
xor
mov
mov
dec
pop
xchg
stos
stos
jmp
decl
loopne
sub
aas
mov
push
mov
pop
xchg
mov
sbb
testl
adc
sub
mov
inc
repz
leave
mov
sbb
faddl
push
in
and
pop
xchg
popa
xchg
js
out
hlt
outsl
add
xchg
decl
push
cmp
add
sub
fldenv
dec
iret
daa
add
and
push
mov
and
js,pn
adc
ror
xchg
daa
pop
inc
xor
add
lds
xor
cli
lcall
pcmpeqd
imulb
incb
jp
dec
ljmp
decl
jecxz
dec
and
cmp
sti
mov
pop
add
dec
xor
and
out
inc
sbb
sbb
mov
aaa
cmp
mov
sub
fstps
rorb
jmp
push
jno
inc
mov
inc
jo
mov
testb
insl
pop
mov
ljmp
stos
js
popf
iret
jmp
imul
xchg
scas
sub
mov
fcomip
icebp
ja
jmp
mov
roll
jp
daa
jnp
std
cmpsb
mov
mov
pushl
lcall
outsl
add
mov
dec
aas
test
sub
pop
imul
pushl
pop
adc
xchg
dec
mov
xchg
xor
stos
mov
and
inc
cmp
adc
les
adc
xchg
dec
add
xor
outsl
xor
pop
lock
mov
dec
daa
rcrb
fisubs
cwtl
test
mov
insb
rorl
and
mov
ds
stc
scas
das
mov
testb
call
jmp
jo
movsb
in
pop
aam
rcll
mov
push
push
mov
mov
incl
out
or
popf
xor
xor
mov
and
pop
sub
mov
cmp
cmc
pushl
xor
mov
into
cmp
xchg
inc
or
rcll
mov
sbb
iret
inc
int3
cwtl
jne
clc
int3
sub
mov
jl
xor
push
in
sbb
ret
inc
and
inc
rolb
rep
rcrb
incl
js
xlat
mov
adc
filds
das
xabort
cmp
sbb
jg
arpl
mov
mov
push
cld
std
in
movsl
in
mov
xor
xor
jg
les
pop
pop
insl
push
insb
fisttps
ret
and
fldcw
adcb
inc
insb
ljmp
xchg
mov
jnp
mov
pop
jecxz
stos
test
mov
loopne
and
or
ljmp
cmp
mov
and
push
sub
add
xchg
mov
mov
loop
call
push
loopne
cmp
add
sub
sub
outsb
mov
out
cmp
rcr
call
xchg
mov
es
es
je
sbbl
xor
out
xor
jbe
xchg
xchg
mov
inc
adc
lcall
incl
dec
dec
dec
inc
xchg
or
mov
int
add
ficoml
call
cmpl
mov
mov
xchg
push
in
andl
push
mov
outsb
es
xchg
je
fcomip
call
insl
cmp
mov
sbb
jge
mov
and
loopne
push
mov
and
fs
fisubl
dec
lock
testl
pop
sar
call
cmovns
mov
sti
arpl
sub
sbb
or
adcl
sahf
mov
pop
cld
decl
xor
adcl
movsl
jnp
je
lret
or
mov
je
insl
div
outsl
xchg
cmp
ljmp
pusha
fmulp
mov
cmp
pop
outsl
sub
cltd
push
mov
es
dec
std
xchg
stos
pop
ja
mov
jb
push
push
inc
repnz
fsubr
les
scas
and
pushl
dec
aad
or
dec
ret
push
insb
jo
mov
sbb
test
cltd
hlt
push
out
cltd
inc
sub
pop
adc
mov
inc
imul
and
xchg
xor
scas
dec
dec
adc
jbe
inc
arpl
ds
jle
adc
ror
call
aam
pop
int
pushl
dec
xchg
pop
pop
dec
sahf
or
lods
fiadds
pop
fsub
fucomip
repnz
inc
mov
jg
inc
out
in
xor
sbb
or
shr
or
xchg
mov
add
cmpsl
incl
or
cmp
std
ja
adc
loopne
stc
iret
add
sub
sbb
fadd
cmp
inc
orb
dec
repz
sub
inc
fsubl
sar
pushl
sub
push
mov
imul
outsb
das
out
xor
cmpsl
jmp
or
inc
in
in
inc
pop
sbb
aaa
popf
shr
std
push
add
cmp
idivl
sbb
and
das
add
into
adc
inc
add
jmp
add
je
mov
cwtl
xor
fmulp
xchg
std
mov
mov
mov
xor
cmp
adc
repnz
aad
in
cmc
mov
std
lret
in
push
mov
daa
insl
out
out
loopne
mov
mov
add
add
decl
adc
int
mov
mov
push
or
inc
mov
call
dec
push
mov
push
jno
js
mov
pop
and
jg
aam
dec
push
mov
and
inc
push
in
mov
je
jb
lods
hlt
mov
jmp
shrb
xchg
cmp
call
sub
imul
scas
insl
mov
or
hlt
xor
adc
adc
sar
pushl
mov
jle
popa
or
jmp
dec
push
push
adc
dec
jge
lcall
call
fs
in
imul
pop
inc
cmp
add
icebp
stos
les
pop
cwtl
lock
and
xorl
in
and
adc
aad
dec
fdivs
call
xor
ret
lds
mov
xchg
sarl
jp
rorl
mov
call
cli
sub
or
and
mov
int3
sub
movsl
jb
ljmp
lds
sub
sbb
mov
cmp
cmp
decl
cld
pop
sub
fs
out
lret
ret
out
or
jne
out
clc
dec
sbb
inc
mov
dec
mov
dec
clc
imul
out
call
mov
xlat
dec
xor
in
pop
jecxz
cmp
push
loopne
xchg
pop
pop
lret
or
or
sbb
incl
out
ss
jne
mov
imul
pushf
cmp
mov
in
and
mov
fbstp
xchg
cmp
mov
fadd
or
lea
imul
iret
sahf
arpl
sar
test
mov
pop
jbe
inc
adc
sbb
xchg
cmp
mov
mov
jmp
jo
lret
pop
insb
push
adc
ljmp
push
or
rorl
in
jg
sub
sub
cltd
int
xchg
leave
jnp
int
in
insb
jmp
fdiv
mov
add
gs
aad
int3
ja
aaa
rclb
dec
repz
lds
push
xchg
jg
xchg
test
daa
xchg
and
ds
cmp
jae
jbe
das
xchg
aam
xorl
mov
add
mov
aad
xchg
idivl
jle
repz
lcall
xchg
nop
inc
ljmp
ficoml
fwait
lods
stos
ret
out
das
xchg
jge
pop
sbb
outsl
lds
sub
jp
push
inc
mov
mov
ret
subb
lcall
in
push
sub
mov
movd
data16
mov
cmpsb
ljmp
adc
cmc
rcll
sub
test
dec
decl
fiadds
dec
inc
jecxz
mov
aam
scas
les
jo
inc
adc
xchg
mov
movsl
fcomip
test
push
mov
aam
aas
arpl
adc
outsb
outsb
sbb
cltd
out
repnz
int3
and
stos
ljmp
aad
and
cmp
pop
ds
or
mov
scas
sub
cmp
decb
pop
push
insl
mov
push
enter
mov
movsl
outsl
call
xchg
sbb
xor
xchg
ljmp
adc
push
sbb
mov
rcll
or
ljmp
icebp
loope
and
xor
decl
les
cli
xchg
sbb
sub
add
dec
int3
lds
hlt
enter
loopne
fs
in
jecxz
and
cmp
insl
mov
mov
ljmp
data16
or
pop
jbe
jbe
adc
ljmp
pop
stos
fcoml
in
shl
jmp
pop
out
mov
stos
ret
jno
jmp
adc
stos
push
adc
xor
ja
lcall
sarl
ljmp
adc
pushf
call
push
xchg
stos
mov
ficompl
fisubl
test
aad
stos
cmp
mov
rcl
clc
incl
lds
out
out
andl
and
pop
insl
mov
int
sub
pop
std
loopne
adc
into
and
pushl
movsb
lahf
pop
in
mov
icebp
pushf
adc
jecxz
in
sbb
sub
mov
mov
incl
mov
xchg
push
inc
push
mov
mov
ja
aas
sbb
jl
fwait
mov
mov
sub
push
cmp
les
push
jge
sub
xchg
imul
sbb
sar
xchg
push
jmp
dec
adc
call
out
inc
lahf
xchg
loope
mov
push
out
xchg
push
and
dec
and
push
push
push
push
xor
or
mov
in
jge
inc
into
inc
decl
clc
outsl
lock
cmp
adcl
call
out
mov
in
mov
fs
xchg
mov
in
xchg
jle
cmpb
js
mov
inc
mov
add
into
loopne
mov
cmpsl
add
out
std
fwait
mov
insb
sbb
enter
mov
and
or
sbb
push
pop
clc
aam
mov
cmp
inc
mov
xchg
jbe
add
jae
lret
rcrl
adc
aad
push
into
jp
movl
push
or
sbb
int
mov
push
sar
lcall
push
pushf
test
mov
jns
shrb
lds
adc
mov
mov
cmp
mov
xlat
aaa
test
push
int3
sti
xchg
or
out
faddp
lea
jmp
jo
shrl
notl
adc
rolb
adc
pop
dec
aaa
roll
jmp
and
inc
into
jb
cltd
adc
sahf
push
dec
xchg
fildll
js
jb
fisttpll
lock
pushl
fcmovnbe
jo
imul
dec
mov
mov
inc
out
cmp
pushl
pop
and
mov
aaa
mov
enter
rorl
mov
sbb
in
xor
lea
popa
dec
sub
cmp
fucomp
hlt
loopne
mov
dec
pop
aam
mov
mov
int3
scas
out
cli
cmp
pop
sub
inc
sub
mov
cmp
add
jmp
scas
loop
push
jo
dec
repz
cmp
pop
pop
push
jne
and
xor
jg
mov
ljmp
cmp
lds
test
aas
pop
fwait
aaa
cltd
sar
jne
hlt
adc
pop
mov
push
sub
daa
lods
bswap
mov
arpl
mov
cmp
push
push
or
test
insl
inc
iret
or
jns
sub
shl
out
sbb
jecxz
subb
lahf
xor
push
movsb
push
call
lcall
sbb
fsubl
mov
push
sbb
and
xor
xchg
cmpsb
lcall
push
in
lret
cmpsb
es
stos
andb
jno,pn
cmp
aaa
aaa
jne
stc
popa
pop
push
fcompl
push
push
mov
adc
incl
out
lahf
xchg
ss
nop
inc
sarl
sub
daa
pop
fisttps
stos
jle
fiaddl
jns
aam
repz
or
jg
jb
pop
mov
mov
cmp
rcr
incl
sub
cmp
cld
pop
rcrl
fs
mov
mov
xchg
fmulp
pop
cld
pushf
fildll
mov
rcrl
mov
ds
je
pop
ljmp
adc
sti
xlat
xor
js
push
xchg
roll
in
lret
adc
call
lock
mov
push
cld
dec
push
lcall
mov
fidivs
add
push
and
mov
ds
lcall
pushf
data16
lods
movsl
dec
popa
cli
and
sahf
push
sarl
lret
jp
test
js
mov
ret
sub
incl
jecxz
leave
adc
add
enter
xor
dec
xchg
ret
out
sub
jo
mov
push
cwtl
mov
in
lock
into
lret
jbe
inc
std
sarb
sbb
and
sub
in
and
orl
call
inc
lods
fsubs
jb
mov
lret
mov
or
jmp
jns
sbb
sbb
mov
cld
pop
push
sub
insb
adc
lcall
out
scas
pop
push
mov
and
daa
cs
pop
testl
std
sub
outsb
nop
push
mov
repz
inc
scas
mov
out
lea
imul
add
cmp
mov
popa
dec
cld
lcall
adc
mov
aad
mov
sub
fcompl
test
popa
cltd
lahf
inc
push
jle
lret
incl
inc
jo
sub
mov
addr16
mov
push
jg
mov
cmpsb
shlb
rorl
nop
cmpsb
jne
test
push
cwtl
scas
in
xchg
fisttps
and
stos
and
leave
inc
xor
inc
ud0
jmp
sbb
xchg
xor
xchg
pop
je
leave
scas
mov
and
ljmp
and
sbb
stc
cmp
push
in
push
inc
lock
ljmp
mov
cmp
sti
shlb
shll
aam
mov
mov
cmp
sti
sub
ret
sti
and
cmpsl
mov
test
sub
fdivrp
incl
aas
repnz
mov
push
fwait
mov
lds
lods
cmp
xchg
cld
out
jg
pop
adc
lret
nop
adc
ss
pop
mov
and
xlat
inc
sbb
ljmp
outsb
out
xor
gs
repz
outsl
scas
push
xor
incl
cltd
clc
dec
mov
lods
jp
push
push
add
in
popa
or
jge
lret
adc
pop
rolb
sub
outsb
add
and
mov
mov
inc
cmp
xchg
mov
jp
call
test
es
dec
movsb
cmp
std
jl
mov
out
flds
jle
movsb
pop
icebp
mov
movsb
pushl
jo
dec
cltd
movsb
jp
cmp
out
jns
cmc
jecxz
pop
inc
dec
rcrb
out
ljmp
jae
psubq
fldenv
mov
push
out
pop
dec
xor
jmp
stos
xor
inc
inc
lcall
mov
stos
pop
into
fwait
adc
call
fwait
int
decb
aaa
mov
cli
sub
adc
xor
movsl
stc
fwait
call
call
pop
mov
pop
in
jle
sub
xchg
ffree
cmp
xor
mulb
mov
stc
push
jns
jne
xchg
out
cmp
ljmp
negl
loopne
xor
or
push
call
jmp
hlt
pop
call
ss
sub
and
jo
ds
or
outsl
inc
push
imul
push
jnp
cmpsb
cmp
mov
jno
xchg
sbb
ljmp
mov
pop
ja
dec
sarb
jl
stc
aam
jmp
xchg
dec
nop
pop
imul
mov
call
mov
add
sti
daa
xchg
rcr
push
mov
outsl
adc
bswap
repz
or
xor
inc
hlt
mov
repnz
lcall
dec
in
out
push
or
icebp
mov
lahf
andl
mov
xchg
mov
jmp
popf
push
or
inc
imul
pop
jge
mov
mov
push
roll
aas
mov
fstp
arpl
cltd
cmp
das
sar
rclb
push
sub
das
adc
sub
adc
lcall
or
lods
stos
ljmp
xor
xchg
divb
pop
sub
cmp
adc
adc
lret
fmull
sub
mov
movsb
es
stos
in
loope
test
jle
cmpsl
loope
cmp
loope
cmp
and
push
je
mov
cmpsl
inc
push
jp
fldenv
and
dec
add
pop
push
add
test
lock
mov
movsl
fwait
and
mov
xchg
and
cmp
fmulp
lcall
add
aad
fdivrp
in
rcr
sbb
test
mov
xchg
mov
pop
ja
or
ljmp
sbb
sub
and
fists
pop
jle
in
pop
mov
add
stos
xlat
test
pop
or
sub
dec
pop
test
adc
test
mov
adc
divl
js
push
pop
sub
sub
sbb
jecxz
mov
push
jne
cmp
adc
lret
loop
push
mov
xor
out
cli
fs
repnz
in
xor
ret
test
mov
push
mov
pop
pushl
cld
mov
sbb
pop
xor
icebp
fsts
cmp
rol
imul
std
cld
pop
mov
rep
or
out
arpl
repnz
out
sub
mov
test
push
sbbb
jmp
jg
add
and
out
pusha
xchg
clc
int
jmp
fistpl
lock
in
in
push
mov
jns
fdivrs
cld
pushf
pusha
push
mov
jmp
les
jno
rorb
test
sbb
nop
adc
iret
push
jne
call
out
pop
sbb
mov
adc
push
jge
cmc
add
ljmp
in
jecxz
jbe
jg
test
xlat
clc
and
mov
call
std
mov
pop
dec
mov
pop
dec
addr16
jmp
lret
mov
in
clc
cmp
call
cmp
sarl
and
bnd
dec
jne
jno
or
bound
out
lea
orb
adc
xor
cmpsb
mov
insb
mov
leave
mov
cmp
ljmp
lret
testl
mov
sbb
push
lahf
test
push
gs
ds
or
or
cmp
std
mov
ret
hlt
call
jne
xchg
pop
and
aad
test
mov
icebp
mov
stos
jno
sbb
jns
inc
call
mov
in
cmp
addr16
mov
sahf
dec
je
fs
mov
or
call
pop
outsb
mov
and
pushf
fildll
cmp
stc
les
dec
jo
xor
lahf
sub
mov
repz
xchg
jle
out
inc
cmpsb
jmp
dec
enter
lods
mov
sub
push
adc
mov
rolb
jmp
daa
mov
and
mov
mov
and
sub
shrl
jmp
inc
cmp
fidivrs
out
inc
dec
xchg
ficoml
push
cmpb
shrb
ds
decl
dec
jl
sbb
data16
cmp
and
imul
lcall
call
in
mov
or
jno
jecxz
push
popf
pop
call
shl
push
or
ja
dec
repz
pop
ljmp
push
nop
pop
cs
notb
sub
addr16
cmpsl
xlat
inc
mov
xor
stc
adc
sub
add
sahf
in
out
jmp
in
insl
inc
sbb
in
or
das
fisttpll
pushf
outsb
js,pt
xor
cltd
fildll
jl
mov
fwait
inc
in
pop
mov
lcall
mov
bound
pusha
add
ljmp
pushf
push
test
test
mov
scas
jmp
test
popa
ret
push
pop
rcl
lahf
adc
dec
mov
test
aad
and
sar
xor
movsb
xchg
xor
int
and
inc
xchg
push
or
test
subb
jge
and
sbb
pop
sbb
mov
inc
sbb
mov
sbb
push
dec
imulb
ljmp
movsb
mov
cmp
shll
jp,pn
cld
aam
cltd
lret
and
scas
enter
incl
inc
and
sub
adc
insl
cmc
xor
cmp
mov
pushl
mov
std
mov
jb
inc
pop
stc
jb
lock
add
insb
and
shll
jmp
push
jb
sbb
rcll
es
decl
jo
jp
mov
scas
sub
pop
mov
inc
ds
dec
cmc
push
loop
jmp
xchg
in
fmull
mov
mov
add
lds
int
xor
cmp
jne
adcb
incb
inc
jg
jne
clc
push
xchg
movsb
popa
insl
fwait
jmp
push
mov
jle
add
insb
add
js
sbb
shll
sbb
xor
dec
call
and
jge
adc
in
and
or
sub
sbb
cltd
mov
cmp
dec
mov
and
mov
mov
enter
mov
je
mov
lret
xlat
movsb
inc
icebp
and
incl
mov
jg
lahf
cmp
xchg
push
imul
xor
xor
xor
and
incl
xor
loopne
scas
add
mov
jmp
jp
xchg
jbe
and
mov
incl
aas
xchg
rorb
icebp
imul
aas
jb
cmpsl
sbb
insl
dec
ljmp
clc
jmp
cmpsb
pop
sub
pop
repnz
add
imul
roll
jmp
add
jbe
or
js
cli
test
fadds
mov
fwait
xchg
mov
push
pop
push
lds
std
push
aaa
std
push
rcll
lahf
push
test
inc
shrb
mov
adc
faddl
pop
add
mov
jo
in
lahf
sub
xchg
ss
jmp
aad
les
mov
sahf
sbb
mov
mov
test
cmp
mov
pop
test
bound
jmp
mov
insb
inc
xchg
arpl
lret
xor
out
xchg
rol
ljmp
xchg
mov
sbb
filds
dec
lcall
pushf
and
ja
xchg
mov
mov
cmp
lea
or
inc
incl
movsb
mov
fisubs
mov
cmp
ljmp
test
fcmovu
pop
inc
cld
stc
mov
mov
leave
ficompl
mov
cld
outsb
mov
rolb
sbb
jp
mov
lcall
lea
lret
inc
adcl
xchg
repz
pop
push
push
dec
out
out
add
and
sti
test
dec
lcall
mov
mov
lock
repz
jbe
pop
push
negl
loop
push
sti
mov
insl
xor
stos
xor
mov
push
popa
jp
mov
inc
aaa
popl
jle
inc
push
out
jnp
jns
sahf
lcall
mov
push
or
inc
test
sbb
push
adc
lds
xchg
mov
or
xor
sbb
aas
jp
cmp
xor
clc
ljmp
jb
pop
push
adc
jg
cmp
loop
adc
cmc
incl
das
mov
mov
lock
dec
stos
leave
int3
cli
icebp
cmpsb
push
rol
xlat
and
lcall
dec
cmc
and
loop
rclb
dec
sbb
xor
mov
lcall
orb
push
cmpsl
add
bound
add
cmp
fcom
jmp
out
test
js
xchg
or
int
lret
in
xor
cmp
out
loope
test
decl
jle
mov
aas
js
mov
popa
cmp
outsb
out
mov
clc
xor
mov
idiv
xchg
ljmp
cli
push
mov
sbb
mov
enter
rcll
fsubr
and
lcall
jnp
xchg
bound
movsb
mov
xlat
or
inc
mov
jmp
pop
xchg
jo
adc
mov
fdivrl
add
roll
std
movsb
mov
pop
or
push
push
ljmp
stos
cltd
test
bound
cmp
les
push
fisttpll
xchg
incl
pop
xor
mov
out
mov
fiaddl
ret
cmpsb
mov
arpl
mov
pop
lret
movsb
pop
ds
addr16
push
fnstsw
daa
gs
pop
sbb
inc
mov
cmp
cmp
call
mov
imul
loopne
aas
push
bound
pop
adc
mov
jg
decl
dec
mov
cli
and
sub
ss
inc
out
sti
mov
adcl
jg
pushl
sbb
enter
sub
pusha
jp
insb
repnz
push
repz
ljmp
and
push
pop
xor
shrb
mov
and
mov
push
sbb
lods
clc
idivb
lcall
ljmp
jge
mov
adc
ficomps
inc
or
jae
sbb
inc
call
in
or
pop
cmp
fcoml
adc
xor
and
cmp
andb
xor
pusha
sbb
xchg
lret
addb
and
pop
stos
xchg
rclb
iret
jo
aaa
or
inc
xor
call
xchg
push
fdivr
mov
mov
shll
test
iret
or
cld
xchg
ret
lcall
ret
enter
add
dec
inc
mov
dec
cli
jo
mov
lcall
incl
inc
movsb
push
lret
bound
push
sub
sub
mov
push
icebp
mov
mov
sub
jmp
add
jg
xchg
cmp
incl
insb
mov
jg
fwait
stc
popf
in
arpl
pop
sub
adc
sbb
cmp
ljmp
cli
jge
roll
cmp
pop
std
mov
pop
sub
sahf
out
lock
jge
lods
mov
sub
je
pop
insl
fistl
xchg
je
jge
aaa
cld
pop
push
mov
add
push
cs
arpl
sbb
xchg
dec
lcall
jmp
lods
sbb
and
pop
cmp
cli
jmp
cmp
je
cmp
call
and
sbb
repz
sub
idivl
mov
loope
jg
gs
jp
push
mov
sarb
jmp
ljmp
iret
adc
cli
ss
mov
jno
dec
lods
or
sub
add
pushl
push
idivb
dec
lods
dec
pop
sub
cmp
cld
push
sub
fldenv
lcall
nop
loopne
pop
mov
mov
mov
call
fs
int3
dec
pop
icebp
or
dec
mov
sbb
add
lret
or
aas
mov
lock
mov
jle
xchg
ror
stos
imul
imul
and
mov
pop
and
add
lock
or
shrl
je
loopne
incl
cwtl
mov
jmp
mov
inc
popf
xor
call
clc
call
pusha
lods
xchg
and
int3
aas
mov
xor
test
ja
rcrb
ljmp
sbb
pop
pop
or
jecxz
adc
jge
imul
or
shrl
cmp
add
sbb
aas
pushw
xchg
mov
mov
jge
push
nop
push
mov
dec
or
pushf
pop
lock
decl
int3
push
xor
add
popa
mov
mov
dec
adc
call
mov
popf
adc
pop
push
enter
mov
jmp
in
cwtl
push
pushl
aaa
fs
add
or
adc
test
adc
push
dec
lds
mov
insl
mov
fnstenv
push
je
int3
mov
sbb
pop
mov
ljmp
in
sub
lret
imul
inc
mov
fstpl
mov
jb
mov
stos
bound
or
xor
ret
jne
and
xor
push
sarl
mov
data16
mov
pop
mov
or
mov
xchg
aas
sbb
jle
int3
cli
aaa
rclb
xchg
lock
push
out
ds
mov
sub
leave
daa
ds
cli
xor
pop
cmc
lcall
mov
push
xchg
sbb
mov
xorb
incl
je
in
and
or
into
mov
lahf
and
jle
dec
jmp
sbb
pop
movsl
shlb
arpl
sub
xchg
fnstcw
mov
dec
xchg
adc
test
idivl
dec
nop
iret
jno
mov
loope
xchg
insb
decl
pushl
pushf
cwtl
test
outsb
jecxz
arpl
fwait
cmpsl
test
out
ja
int3
sbb
incl
push
push
mov
scas
cmp
ljmp
mov
loopne
incl
mov
shrl
sub
mov
jo
decl
lock
rcrb
xchg
imul
inc
jnp
and
jmp
js
mov
loopne
cmpsb
and
loopne
mov
sub
sub
jo
mov
mov
adc
fcomip
icebp
fldl
jb
xchg
jne
push
sbb
sub
addr16
lock
mov
icebp
ret
iret
or
adc
filds
dec
dec
loope
sahf
mov
add
jb
aaa
mov
dec
mov
inc
pushf
pop
stos
jecxz
lcall
insb
jmp
pop
test
xor
pushl
sub
xor
loopne
jecxz
mov
inc
xor
pop
adc
adc
call
add
push
test
clc
xchg
js
in
add
popa
iret
aad
test
add
lcall
mov
in
rclb
xor
add
in
cmpsb
mov
scas
pop
inc
adc
rcl
in
lret
sub
cmp
push
shrb
arpl
movsb
mov
cmp
test
adc
fadd
fwait
dec
icebp
dec
xlat
pop
shl
fmuls
cwtl
insb
pusha
cmp
jmp
adc
cmp
push
mov
push
adc
mov
shll
decl
sti
das
sub
in
jl
ja
adc
mov
pop
movsb
adc
enter
xchg
fcomip
ljmp
in
mov
push
cmp
mov
lret
adc
lcall
decl
pop
ds
pop
nop
scas
push
jno
push
rclb
lds
push
mov
jg
incl
xor
sub
pop
or
movsl
stos
push
xchg
xchg
xlat
bound
daa
xor
inc
ljmp
subl
int
pop
dec
jo
daa
ljmp
popf
jge
ja
push
sbb
aas
xchg
call
cmp
adc
lods
loopne
cli
push
push
sbb
sbb
inc
lahf
loopne
mov
daa
call
inc
shl
push
mov
and
push
fcoml
or
adc
cmpl
lret
lock
ljmp
lcall
dec
ret
xor
pop
cmp
mov
in
cmp
loop,pn
lcall
push
push
call
adc
xchg
adc
jb
in
sbb
mov
ret
sub
lock
aaa
fimuls
test
int3
mov
jge,pn
jmp
or
dec
rcrl
in
xorb
mov
jae
and
jae
out
negb
shlb
je
jns
loop
xchg
push
outsl
scas
aas
leave
push
das
lcall
xchg
add
jge
mov
popf
xchg
int3
dec
adc
cmp
mov
cmpb
addr16
addb
cmp
lret
push
leave
or
jmp
jmp
pop
int3
pop
test
int
jb
pushl
and
jl
jae
data16
mov
cld
decl
push
out
nop
add
jno
scas
dec
gs
das
jge
pop
mov
mov
decl
jg
in
or
lock
cs
or
lahf
inc
ljmp
jmp
mov
jecxz
int3
fstpl
lds
iret
roll
jle
push
ds
in
jmp
mov
jb
pop
xchg
mov
mov
int3
sub
into
pop
gs
je
mov
mov
add
outsb
adc
jo
jno
jmp
iret
inc
or
dec
pop
jg
lret
lret
xchg
lahf
dec
fdivrl
and
xor
cmp
mov
cli
cs
lea
adc
test
jp
cmpsb
mov
clc
insl
in
je
cmp
dec
pushf
je
xchg
and
loope
lret
add
add
and
add
sbb
cld
mov
pushl
push
xor
dec
enter
outsb
or
cmpsl
insb
fiaddl
jmp
insb
dec
cmpsl
add
and
add
mov
add
add
mov
xor
fildll
decl
dec
inc
jmp
sbb
leave
fwait
les
push
and
gs
loope
mov
loope
push
repz
fistps
push
mov
out
mov
ss
jl
xor
jmp
push
dec
out
mov
decl
enter
dec
lret
sbb
mov
jb
je
pop
mov
imul
xor
jmp
mov
fimuls
inc
shrb
shr
cmp
lock
pop
pop
jmp
jbe
lods
xchg
sub
pop
mov
fs
jb
imul
mov
divb
pushl
jmp
push
lods
xor
fwait
aaa
sbbb
pop
add
das
lahf
sarb
call
inc
and
adc
jne
mov
sub
movsb
mov
jno
fbstp
jg
cli
jnp
gs
adc
jg
jne
stos
inc
jns
push
cmp
sub
sub
loope
in
iret
dec
pop
mov
in
jae
test
ljmp
pop
andb
dec
or
mov
adc
stc
mov
mov
jg
icebp
xor
pop
mov
push
lahf
int3
pusha
sbb
sar
gs
dec
add
fmull
lods
sub
jns
dec
mov
sbb
mov
cwtl
push
or
je
js
stos
cmp
pushf
cs
add
mov
jmp
leave
inc
pop
xchg
orb
sbbb
or
push
lods
cli
ja
push
mov
jg
outsl
cmp
test
nop
cli
mov
addr16
jb
hlt
sbb
ja
inc
ljmp
inc
aad
dec
jo
in
push
nop
pushf
push
ja
ja
mov
shl
push
or
decl
dec
sbb
mov
or
inc
mov
mov
xchg
int3
fbstp
in
cmp
sbb
ljmp
insl
js
dec
cmp
pop
inc
nop
repz
enter
lcall
cmpsb
imul
jg
push
pushf
push
rclb
fistpll
xchg
call
pop
dec
shrb
fucomi
filds
mov
mov
jae
adc
jmp
out
cli
decl
gs
cmp
cmc
mov
push
or
mov
xlat
adc
mov
push
xchg
pop
sar
ret
ret
cmpsl
stos
sub
inc
pop
jl
insb
imul
dec
lcall
adc
cmp
mov
jmp
or
cli
sti
xor
jae
cli
mov
mov
jb
mov
aam
mov
xor
dec
inc
cwtl
scas
dec
sbb
jmp
dec
push
mov
lcall
popa
mov
lods
incl
test
vmovsldup
aaa
pop
inc
into
sbb
add
mov
subb
inc
add
cli
push
fwait
cmpb
data16
dec
pop
enter
mov
pop
mov
aad
xchg
inc
or
dec
sti
dec
push
cmp
pop
pop
scas
push
rcll
hlt
inc
fdivrs
mov
movsl
cmp
and
sub
insl
mov
mov
cmp
pop
dec
ret
iret
xor
call
out
adc
cld
xchg
fs
lret
call
xor
testl
jge
orl
jnp
test
pop
mov
data16
call
bound
cmpsl
fldenv
loop
push
inc
js
push
repz
ja
aaa
jnp
pop
jp
adc
outsl
ret
enter
push
inc
insb
xchg
fcom
xor
sub
bound
and
adc
mov
insb
inc
push
jecxz
iret
add
xchg
xchg
sub
pop
dec
mulb
mov
enter
add
add
test
cmp
push
cmp
push
movsl
xor
lcall
fsubp
mov
mov
mov
rorb
repnz
dec
and
stc
call
or
call
dec
aas
insl
jmp
adc
sub
xchg
gs
sarl
hlt
mov
sbb
push
cmp
jg
inc
inc
push
test
mov
lcall
movsl
mov
pusha
jno
cmc
mov
mov
jmp
sbb
push
sub
sub
fcompl
enter
mov
adc
imul
dec
sahf
ficoml
mov
adc
adc
nop
daa
outsl
jle
lret
fwait
mov
mov
pop
adc
dec
or
gs
sbb
stc
dec
pop
xchg
sarl
sub
idiv
incl
mov
in
pop
ljmp
mov
pop
xor
adc
stos
jg
dec
pushf
hlt
cld
shl
inc
xorb
xchg
addb
jg
or
aas
push
mov
xor
xor
xor
call
sbb
jbe
std
out
aas
cwtl
addr16
insl
in
movsb
idivl
inc
test
mov
lcall
jmp
add
xchg
pop
add
pop
popf
pop
lcall
scas
dec
das
or
pushl
fldcw
icebp
sbb
pushf
xchg
adc
movsb
jae
orb
jne
jmp
inc
cmpsl
dec
xor
stos
or
jne
push
lods
jg
incl
cld
jmp
test
fs
imul
ljmp
std
pop
nop
outsb
jns
addr16
in
push
inc
out
push
jecxz
jl
sub
out
sub
loope
pushl
iret
jecxz
dec
push
js
les
and
cmpb
jmp
sbb
jmp
call
addr16
pop
fiaddl
or
daa
xchg
mov
inc
push
insb
pop
cmp
or
or
add
xor
mov
pushf
push
flds
fldenv
pop
inc
into
pushf
xchg
xor
lods
xchg
adc
inc
xchg
push
data16
sbb
add
adc
fdiv
mov
mov
roll
imul
shll
addb
cmc
inc
jmp
repnz
mov
test
pushl
inc
adc
pop
add
clc
dec
into
push
aas
daa
xchg
and
str
sbb
les
mov
adc
stos
xchg
pop
jns
daa
xchg
rcll
mov
push
lret
in
pusha
lcall
imul
in
rcll
jl
or
mov
stc
xor
jmp
adc
test
out
inc
out
clc
jg
into
xchg
add
cmp
mov
mov
mov
mov
popf
add
pop
sbb
xor
test
and
and
in
fwait
inc
xchg
dec
out
and
lock
jecxz
fsts
mov
fiadds
jle
xor
adcl
fdivrl
stos
mov
incl
sahf
push
das
cwtl
sub
stc
adc
outsl
mov
cltd
lods
cmc
pop
cld
sti
fistpll
nop
pushf
int
call
inc
mov
add
adc
loope
pop
into
mov
mov
jecxz
in
lock
in
mov
ror
or
pop
push
insb
adc
xor
stc
test
ljmp
cli
mov
sbb
nop
js
lods
test
cli
iret
out
mov
test
inc
sbb
mov
je
ja
movsl
popf
fwait
sarl
out
fidivl
iret
cmp
aad
cmp
pop
lcall
xor
or
fsubp
fistpl
push
lahf
mov
mov
pop
stc
decl
mov
adc
xlat
lea
jns
xor
decl
cld
sbb
xchg
pop
jmp
sbbl
pop
imul
mov
push
adc
jns
push
ret
sbb
adc
mov
lahf
mov
std
inc
lcall
push
jl
mov
imul
xor
ds
xor
pushl
push
divl
pushf
hlt
int3
arpl
outsb
mov
pushf
jb
popf
sbb
mov
je
repz
dec
lcall
add
roll
cmp
sub
ljmp
aam
and
xor
mov
decb
adc
ljmp
inc
lods
loop
cmp
push
xorl
mov
mov
decl
mov
sub
cmpsb
jae
xchg
sub
mov
jns
rclb
jmp
xor
lock
fdivrl
jmp
ljmp
mov
pop
dec
popf
cmpsb
add
jle
int
push
and
sar
pushl
data16
shrl
sbb
cs
mov
in
sub
in
mov
iret
cltd
xor
cmpsb
pop
je
dec
repnz
inc
sub
xchg
inc
rorb
push
add
inc
adc
jns
cwtl
mov
fwait
dec
hlt
bound
adc
mov
ljmp
mov
orb
scas
and
jb
pop
jne
dec
out
add
into
sbb
push
dec
sbb
jecxz
roll
xchg
rcl
xor
dec
imul
pushl
or
sub
inc
insl
into
imul
pop
inc
add
xor
out
ljmp
clc
mov
pop
fldl
lcall
dec
addr16
push
adc
mov
icebp
add
lcall
movsl
sub
sbb
rcrb
mov
mov
mov
push
jmp
nop
lahf
aam
jmp
fadds
sbb
sbb
adc
cli
jne
sbb
outsb
out
repnz
jp
mov
jmp
fs
mov
sti
leave
flds
inc
cmc
inc
lods
push
nop
out
loop
push
dec
ds
sbb
shrl
push
das
or
inc
roll
faddl
ljmp
mov
div
mov
shrl
mov
insl
mov
les
test
call
cld
call
dec
xchg
jmp
xchg
dec
mov
andl
xchg
lds
incl
mov
xchg
xor
pushf
mov
xchg
mov
or
push
imul
push
mov
push
and
dec
mov
mov
pop
pop
or
mov
fstpl
add
fmuls
jno
insb
dec
nop
mov
inc
lea
das
add
push
pop
pop
inc
int3
rclb
test
sar
or
sti
or
call
test
or
add
test
pop
fisubrs
inc
xchg
sub
incl
rol
or
xchg
mov
push
fistps
leave
decl
push
addb
sub
popa
enter
int
ds
jmp
pop
movsb
jno
mov
ret
or
sub
mov
int
outsl
test
adcl
decl
ja
arpl
sbb
jae
lods
cmp
in
fsubl
in
into
aas
jg
or
mov
fmuls
sbb
in
jg
lret
push
push
cmpsl
cli
xchg
sub
jb
adc
into
mov
jl
lret
fdivr
jmp
imul
ja
jecxz
mov
outsl
or
push
add
dec
testl
and
fstps
xchg
xchg
cmp
aas
xor
jmp
ret
add
mov
lcall
incb
mov
imull
lahf
lahf
xchg
addl
fwait
decl
out
aas
arpl
mov
push
fldenv
inc
xchg
cmp
call
adc
in
and
je
sbb
aad
push
mov
mov
movsb
decl
sbb
xor
mov
cmp
fadd
add
xor
imul
and
push
hlt
dec
sub
sub
mov
or
mov
sti
sub
lcall
call
cmp
stc
dec
fsubp
mov
xchg
inc
add
mov
cmpsl
push
jmp
nop
push
jmp
mov
and
mov
push
pusha
or
js
aad
adc
cmp
pop
insb
sub
push
or
mov
xchg
xor
mov
mov
in
int3
lods
cmpsb
fxch
js
loope
pop
inc
sub
jns
mov
je
scas
clc
call
daa
scas
bound
inc
or
lods
jne
icebp
scas
stos
ds
and
push
outsb
daa
xchg
loope
xor
dec
es
popa
jae
das
xor
cmpsl
pop
lcall
test
xchg
push
sbb
xorb
inc
call
scas
xchg
daa
or
adc
test
icebp
call
xchg
jae
inc
test
hlt
movd
sti
mov
movsb
call
pushl
sbb
outsl
cs
mov
iret
jno
cmp
js
enter
mov
push
jne
cmpsb
pop
lds
jo
test
dec
push
arpl
jo
adc
lcall
jne
sbb
idiv
mov
cli
pop
mov
movsb
mov
decl
mov
or
dec
ja
scas
jb
sbbb
and
lods
push
rcl
sbb
mov
add
pushl
cmc
xor
dec
add
add
pusha
mov
mov
pop
xchg
js
clc
fs
sub
call
sbb
out
sub
cltd
addb
fnstcw
adc
call
jge
ret
or
mov
mov
pop
add
dec
push
xchg
xchg
and
add
aad
ja
mov
rcll
push
lret
ljmp
clc
cltd
adc
jg
cmp
loope
ret
adc
imulb
lock
xchg
iret
scas
insl
add
lret
lcall
pop
shll
mov
mov
ljmp
shll
out
leave
or
adc
mov
sahf
aaa
shl
adcb
xchg
adc
bound
and
sub
mov
outsl
xchg
sbb
filds
adc
shlb
gs
cld
pop
mov
xchg
mov
jo
lcall
scas
mov
mov
fcomps
cld
pop
jo
or
stos
inc
jns
ret
test
xchg
jge
les
cmp
add
fmulp
sbb
and
ret
pop
in
push
aam
je
jle
clc
out
les
sbb
repz
sti
adc
incl
xchg
pop
popa
je
addr16
inc
mov
jno
adc
ficoml
rorl
lcall
cs
push
test
movsl
push
cli
mov
or
les
dec
sbb
fidivs
or
inc
js
loopne
xchg
push
push
jmp
jl
cli
lret
aas
sbb
mov
call
jo
test
cmp
and
sbb
lret
cmp
ljmp
in
mov
push
sbb
and
or
mov
jg
jg
call
push
add
sub
add
push
and
jae
mov
movsl
ret
rolb
inc
incl
cmp
arpl
cmp
jae
fldl
call
iret
sub
les
lds
jo
and
aas
mov
nop
lock
incl
mov
xrstors
xor
mov
out
call
popa
lea
jno
in
push
pop
out
lock
sub
mov
or
fsubrs
sar
scas
and
cltd
shr
jb
sbb
pop
das
inc
jl
mov
lcall
mov
pop
ds
and
popf
in
ror
mov
ljmp
mov
push
fsub
aaa
adc
jmp
mov
jae
and
sbb
adc
mov
dec
cmp
decl
sbb
inc
or
pusha
pop
sbb
lahf
insb
subl
call
cmp
mov
arpl
fidivl
out
dec
shlb
incl
cwtl
mov
daa
enter
out
adc
ljmp
rorb
cs
mov
sbb
jae
fldt
push
add
decl
jo
sbb
sub
inc
fs
push
ret
aam
ret
mov
or
sub
lcall
dec
push
gs
cmp
outsb
cli
and
jmp
push
mov
jae
fistpll
filds
ret
es
xchg
mov
mov
subb
mov
cmp
cmp
cmp
movsl
testl
int
lcall
mov
mov
cmp
pop
dec
pop
stos
incl
sti
outsb
imul
xor
std
adc
ret
add
test
fsub
es
pop
repnz
mov
cmp
xlat
inc
mov
in
lea
and
jg
imul
bound
out
mov
mov
mov
push
cmpsb
jmp
cmp
and
inc
dec
or
aad
sbb
mov
nop
pop
mov
jecxz
call
mov
jo
push
sbb
adc
inc
dec
xchg
dec
push
jg
dec
or
mov
je
repnz
inc
mov
bound
out
es
stos
sti
roll
pop
mov
sub
ret
mov
mov
out
ljmp
jmp
insl
add
pop
lcall
dec
rcll
movsl
cmp
dec
push
rolb
jmp
fs
mov
out
xor
jmp
cli
push
pop
rorb
popa
and
stos
lcall
das
das
pop
push
bound
sbb
int3
cmc
inc
pushf
ss
imul
add
fimuls
mov
adc
cld
mov
mov
or
inc
std
aas
shrl
outsl
jp
hlt
pop
jmp
sbb
aam
xchg
ljmp
lcall
jnp
arpl
or
or
jne
inc
mov
xor
push
je
jo
sahf
jg
dec
cld
negb
or
push
and
mov
ljmp
xchg
push
test
xchg
or
orl
xorb
sub
mov
add
fwait
incl
pop
rorl
mov
mov
add
xor
jle
ljmp
vrsqrtss
sbb
and
mov
aaa
add
mov
jnp
inc
clc
hlt
jmp
int
int
ficomps
ss
push
shlb
data16
pop
lret
aad
sub
mov
decl
add
cltd
enter
in
mov
dec
test
xchg
cmc
xor
jg
push
sub
and
inc
iret
add
mov
cli
sbb
pusha
sub
call
pop
xchg
imul
add
mov
mov
popa
icebp
test
mov
sub
dec
pop
outsl
pop
jle
cmp
mov
xor
fbld
fstl
xchg
mov
call
sub
and
sub
pop
fidivrs
in
repz
push
lret
lret
jns
mov
enter
cmc
pushl
pop
sbb
fwait
movsb
ret
pop
cmc
decl
add
cs
cs
add
mov
sub
jnp
ret
cmp
rolb
xlat
lods
imul
mov
mov
ljmp
insl
mov
mov
dec
lods
xor
out
clc
arpl
ss
lea
inc
fists
mov
test
clc
jmp
inc
sub
and
shll
in
in
pop
mov
mov
out
jno
mov
jmp
or
inc
repz
adc
add
sbb
fildl
push
mov
xchg
push
out
mov
sarl
sub
icebp
lock
stc
xor
sti
movsl
cmp
mov
mov
sbb
mov
mov
cs
jge
adc
add
jnp
movsl
xchg
and
scas
sbb
lods
dec
sub
or
mov
pushl
out
jno
jno
jae
lret
mov
xor
push
idivl
dec
std
mov
movsb
movsl
decl
popa
xor
das
xchg
xor
push
in
sbbb
out
insb
out
data16
cmc
lock
decl
hlt
scas
push
or
movsl
mov
lods
roll
imul
clc
inc
pop
xor
dec
adc
int
and
mov
sbb
xchg
ljmp
and
aaa
pop
cmp
mov
mov
es
mov
clc
xor
mov
dec
es
repz
sbb
fsubrs
enter
loopne
jl
dec
mov
idiv
add
mov
decl
incl
inc
ds
xor
roll
and
push
jp
sbb
loope
ljmp
lcall
cli
lods
push
scas
lcall
xchg
loop
sahf
arpl
sbb
pop
pop
rcrb
sahf
lea
xchg
inc
jl
jno
outsb
mov
test
and
sub
jns
cltd
dec
repnz
decl
mov
mov
dec
clc
push
pop
push
test
cmp
insb
xchg
popa
rcrb
pop
pop
xor
ret
mov
adc
dec
jae
sti
xchg
movsb
addr16
push
add
pop
add
mov
dec
jo
in
xor
pushl
push
hlt
into
fists
lds
pusha
xor
lods
add
call
je
push
mov
bound
std
ljmp
call
jmp
push
outsb
mov
cmp
outsb
js
lods
nop
lods
in
sbb
mov
fldenv
incl
mov
out
outsb
loop
push
lcall
lods
fdivrs
xchg
add
mov
cmp
jmp
cs
dec
mov
sbb
sti
popa
xor
dec
cmp
lcall
push
pop
mov
push
or
push
add
mov
xor
pop
in
out
std
lods
leave
aaa
ds
test
aad
or
jbe
xor
sti
in
sbb
push
ja
decl
shlb
pop
enter
sub
idivl
in
jmp
test
pop
fst
lods
stos
lea
out
cmpsb
cmpsl
mov
sarb
ds
ds
mov
sarb
xor
inc
jge
xchg
loope
ret
ja
jb
loopne
das
shlb
jp
pop
fucomp
cmp
pop
lea
addr16
ljmp
mov
xor
insl
add
dec
or
les
push
stos
xchg
fcompl
sbb
mov
jns
bound
flds
dec
adc
sar
lcall
push
test
jb
into
xor
mov
cmc
push
mov
inc
scas
mov
das
cmp
mov
add
inc
into
jmp
sub
sub
stc
rcrb
movsb
aaa
sti
cs
mov
mov
or
jae
aaa
cld
decl
andl
pushw
mov
pop
and
jmp
and
push
inc
xor
loop
mov
je
sbb
xchg
push
push
cli
imul
stos
in
rcl
push
mov
push
rcll
enter
orb
mov
ljmp
mov
sbb
push
mov
xor
mov
loop
lret
cmp
std
inc
into
loop
das
pop
push
nop
pop
cmc
pop
jbe
aaa
test
stc
data16
fwait
sar
clc
incl
mov
fcoml
in
fldt
fwait
iret
push
or
iret
jae
in
pushl
in
push
mov
mov
in
pop
add
pop
xchg
push
and
xchg
iret
daa
and
dec
sub
lcall
sub
mov
sub
xor
jbe
mov
call
or
fdiv
inc
outsb
pop
xor
jl
cmp
test
ljmp
adc
jne
negl
cs
inc
mov
or
out
aaa
decl
leave
enter
sbb
leave
in
inc
cwtl
push
push
and
and
cmpsb
fdivr
incl
in
stos
push
aam
les
and
cli
sub
pop
push
ljmp
sbb
sub
outsb
inc
push
xchg
and
inc
jmp
mov
mov
and
xor
movsb
fnstcw
jo
ljmp
nop
cltd
pushf
sub
adc
jmp
dec
fdivrl
out
push
movsl
incl
xor
inc
pop
and
test
add
mov
lods
xchg
fcomps
inc
stos
fnsave
jg
pop
lods
mov
enter
add
jecxz
push
xadd
sbb
bound
incl
dec
lock
arpl
pop
inc
sbb
jmp
mov
inc
rcrl
aaa
std
mov
repz
sub
lods
mov
les
mov
xchg
in
aaa
push
cwtl
mov
mov
pushl
sbb
sub
ret
or
mov
pushf
dec
pop
cmp
ret
jnp
mov
pop
jo
lock
jmp
mov
or
xor
movsl
pop
ss
push
mov
pop
dec
aaa
mov
cmp
ljmp
daa
ret
xchg
lods
xor
inc
xor
pushl
jno
jecxz
es
ret
mov
cli
mov
xchg
clc
inc
cmp
pushl
dec
xor
sbb
mov
sub
lods
fstpl
mov
es
addr16
dec
movsb
leave
jp
shr
mov
xchg
je
testl
out
jg
sub
cmp
incl
mov
test
cmp
mov
mov
rorb
clc
xchg
sbb
xchg
and
add
push
movsb
fcoml
and
arpl
push
fisttps
xchg
jmp
lcall
inc
push
fistps
push
pushl
bound
test
cmc
mov
inc
cmpsl
aam
roll
lock
mov
rcrb
popf
lcall
outsb
lcall
jg
hlt
jnp
lods
xchg
scas
icebp
out
arpl
or
adc
xchg
roll
push
pop
ret
lret
mov
sub
or
sub
movsb
pop
mov
adc
push
add
ljmp
out
inc
sbb
sbbb
dec
xchg
ret
xorl
mov
jg
cmp
xchg
fnstcw
iret
and
push
xor
pusha
and
sbb
hlt
jbe
dec
adc
push
out
push
pop
push
mov
push
hlt
jno
dec
inc
adc
popa
add
call
ljmp
adc
jnp
repnz
xchg
xchg
in
mov
ljmp
push
add
call
cmpsl
les
rcl
test
sbb
cmp
sub
dec
loopnew
sub
xor
push
cld
mov
lea
or
fidivl
stos
stos
mov
int3
shrb
mov
aad
test
push
pop
movsl
lea
xor
cmpsb
incl
add
xchg
pop
ss
pop
cmpxchg
aad
mov
outsl
jno
gs
xchg
cli
lcall
inc
add
xchg
pushf
xchg
cmp
loope
incl
add
outsb
mov
popa
xor
jmp
sbb
adc
in
xor
mov
cmp
mov
aad
repz
mov
arpl
call
ficoms
jo
call
cmp
mov
das
sub
stos
shrb
stos
fldenv
jle
sahf
sbb
incl
pop
mov
inc
mov
daa
xchg
xchg
xor
dec
into
in
jmp
stos
fwait
es
insb
int3
add
ja
xor
aaa
sub
jmp
sub
call
push
xor
pop
icebp
repz
test
adcb
std
fcompl
std
sarb
jmp
decl
push
adc
xchg
push
push
xor
jbe
push
xchg
lret
adc
xrelease
cld
mov
lret
jmp
sahf
out
aam
ud0
bound
sub
imul
subl
cwtl
push
cmpsl
lods
push
lret
lahf
adc
adc
fcompl
and
xchg
jns
sub
dec
out
jecxz
pusha
ljmp
xchg
pop
mov
mov
sbb
pause
and
mov
push
and
mov
add
mov
shl
xchg
mov
test
imul
ret
jae
sbb
jmp
pushf
fnstsw
ds
test
outsw
mov
js
fwait
les
inc
in
push
push
mov
incl
out
clc
add
aam
andl
jge
loope
orb
mov
xor
scas
pop
mov
dec
test
ljmp
mov
fmull
gs
and
cltd
outsl
inc
push
int3
icebp
inc
dec
outsl
testl
push
out
out
jle
cmp
cmpsl
sbb
cmc
sahf
jle
push
shll
xrelease
push
test
ja
jp
xor
jne
xchg
movsl
jle
cltd
shl
and
cmp
decl
int3
xor
insl
jle
imul
sub
mov
icebp
testb
xchg
jp
std
add
jp
les
inc
push
jmp
out
imulb
fildll
and
cmpsb
mov
rcrb
adc
cmp
dec
ljmp
cmp
push
stos
clc
dec
fiaddl
call
jno
loop
repnz
cmp
or
in
sub
push
aaa
in
test
lods
enter
decl
movsl
add
nop
sbb
mov
or
sub
adc
scas
sar
mov
bswap
fmull
jg
inc
arpl
into
add
out
hlt
xchg
stos
jl
inc
decl
and
std
lret
pop
fwait
loop
fcom
fistl
insb
adc
cmpsl
dec
clc
dec
lcall
mov
sub
push
iret
inc
adc
push
ljmp
iret
add
jns
jno
cs
shll
push
sub
sub
insb
nop
cmp
pop
jo
frstor
jnp
repz
dec
push
stos
pop
daa
leave
mov
push
lret
xchg
loopne
pop
pusha
push
xchg
movsl
or
pop
lock
mov
incl
fs
lods
xor
mov
and
dec
out
call
xor
mov
lods
ret
call
jne
xor
sahf
loopne
inc
sbb
cmp
sti
stos
push
mov
decl
ret
pop
jns
adc
test
and
rclb
cmp
sbb
xor
mov
fildll
std
fisubs
or
mov
ljmp
psllq
loope
sbb
xchg
outsl
xchg
adc
out
cmc
mov
outsl
ljmp
ja
push
add
pop
fsts
push
movsl
mov
cmc
or
call
in
jmp
bound
push
cmpb
push
sbb
aam
pop
js
lcall
mov
xchg
lock
sub
pushf
push
ss
subl
mov
adcl
mov
pop
jp
adc
mov
push
clc
setns
je
cmp
andb
add
je
imul
icebp
ljmp
jb
push
jne
rcrb
add
cmpsb
pop
push
inc
pop
push
mulb
push
xchg
mov
jmp
decl
ljmp
je
push
std
sti
dec
stos
fsubl
ljmp
inc
bound
and
ret
in
jne
sub
les
stc
arpl
xchg
out
ja
decl
inc
mull
mov
scas
pop
popf
pop
pop
loop
xor
pushl
add
sbb
sbb
jno
pop
inc
nop
jnp
and
lcall
test
mov
push
jb
loop
jae
lret
iret
cli
xorb
jo
and
ljmp
xor
pushf
aam
xchg
negb
in
dec
mov
lods
pop
fs
cmp
out
clc
cmp
mov
stos
in
fcmovbe
add
loop
xchg
popf
sub
lods
fcomip
or
push
xchg
hlt
sti
jg
insb
bound
adc
faddl
push
ret
inc
movsl
test
mov
lcall
jle
mov
adc
movsb
cs
xlat
fwait
pop
adc
test
jmp
mov
pop
mov
shrb
aas
pop
or
int3
mov
test
add
out
mov
or
in
popa
aad
cs
js
xchg
mov
and
push
out
push
inc
or
jp
xchg
ja
push
xor
fucomp
jne
jno
lret
addb
inc
adc
cmp
bound
popf
out
mov
adc
and
cs
jo
imul
or
rcrb
ss
add
mov
mov
and
stos
xor
cmp
inc
adc
mov
inc
push
push
adc
shlb
mov
inc
sbb
sbb
add
dec
pop
push
outsl
insl
imul
in
outsl
insb
push
push
xchg
jo
push
adc
ret
dec
gs
push
aas
mov
int
sbb
mov
shlb
je
xchg
and
sub
adc
imul
insl
xor
dec
jne
js
movsb
pop
sbb
push
popa
outsb
adc
roll
inc
jns
push
imul
popa
jb
icebp
loope
in
add
or
testl
insl
insl
sbb
fidivl
gs
dec
jb
int3
pop
adc
sub
roll
xchg
std
sarb
dec
xor
or
insb
sbb
or
inc
sub
ficoms
adc
outsl
jp
sbbl
scas
inc
jo
rcrb
int3
ss
sbb
pop
loopne
loop
ds
insb
jne
mov
jne
sub
ret
test
ret
mov
mov
push
add
dec
call
jo
inc
push
fildl
in
inc
inc
mov
mov
pop
push
out
popa
addr16
test
arpl
pop
push
mov
test
fcomps
add
cmpb
jae
adc
inc
mov
sahf
ret
and
jmp
hlt
dec
dec
xor
das
cmp
int
xor
sub
popa
jno
mov
pop
inc
ja
rclb
inc
or
dec
pmuludq
imul
dec
adc
dec
push
les
push
dec
inc
dec
sbb
mov
sbb
je
fnstsw
cmp
jns
lret
jbe
mov
ret
fcomps
addr16
pop
repnz
push
xor
popa
inc
in
xchg
mul
inc
pusha
inc
or
outsl
popw
mov
push
mov
add
out
adc
push
ret
mov
jne
popa
loope
ret
in
jp
push
sbb
inc
cmp
fidivrl
inc
ljmp
xchg
dec
jmp
inc
mov
jb
mov
rclb
jb
xlat
xchg
or
push
div
sbb
rcl
je
ja
mov
mov
push
mov
ja
xor
mov
cmp
and
out
or
es
jp
bound
fildl
sbb
and
test
push
sbb
mov
shll
orb
adc
jle,pn
pop
mov
jns
int
inc
xor
dec
push
add
xchg
and
lods
lods
adc
pop
xlat
mov
jns
add
aaa
xchg
inc
je
push
inc
inc
push
and
xlat
iret
sti
addl
lods
movsl
popa
in
cli
mov
and
and
push
xchg
pop
insl
adc
or
push
es
mov
gs
xlat
add
sub
inc
push
jns
sbb
xor
stos
loope
add
sbb
imul
sbb
push
fisubrl
iret
push
adc
dec
outsb
pop
lea
adc
pop
mov
adc
gs
in
push
jne
mov
fsubp
inc
in
inc
out
adc
inc
xchg
aad
inc
leave
jo
jae
mov
jbe
movl
orb
sbb
or
fsubl
jecxz
daa
and
daa
sub
insb
mov
rol
mov
inc
sub
dec
pop
xchg
inc
jno
push
mov
lods
repz
adc
test
outsl
jae
sub
xchg
push
outsl
fstps
std
js
dec
sbb
push
mov
dec
push
add
xor
test
jmp
je
and
sahf
dec
gs
push
lock
or
addl
ds
inc
jne
outsb
data16
xchg
shlb
test
addb
xor
js
adc
mov
cmp
fwait
mov
pop
out
and
inc
lahf
addr16
inc
sbb
fildl
and
push
aaa
dec
jmp
and
jae
pmaxsw
sbb
pop
es
mov
sub
popf
push
mov
push
fisttpl
jp
pop
jo
or
mov
popa
pop
fisttps
nop
popa
or
jmp
repnz
insb
and
mov
jo
mov
mov
jmp
out
push
outsl
repnz
jb
lret
and
xchg
and
cmpsl
and
inc
push
into
jo
inc
inc
push
arpl
lds
arpl
ficompl
std
inc
imul
push
ret
pusha
loop
fs
mov
mov
push
mov
fs
mov
lock
insb
jle
arpl
dec
xor
in
stos
mov
lahf
cmpsb
push
dec
jae
jno
mov
scas
les
lea
adc
es
jl
js
cmp
mov
enter
and
je
cmp
sbb
xchg
je
lret
push
loopne
pop
and
sar
sti
cs
and
push
mov
xchg
cmp
xor
shlb
adc
in
mov
out
inc
push
push
adc
adc
push
pop
lock
insl
dec
outsb
dec
in
mov
push
xchg
sub
repz
cmpsl
ss
mov
pop
add
add
mov
cmpsb
xor
sub
dec
imul
imul
add
xor
push
add
pop
adc
les
daa
pushf
dec
mov
loopne
scas
and
mov
xor
inc
jo
jge
dec
mov
bound
and
and
push
cmc
aas
std
push
jb
inc
jae
jo
movb
and
inc
mov
gs
sbb
orb
add
das
imul
pop
cwtl
mov
sub
xchg
pushf
push
js
sahf
loopne
jmp
clc
adc
and
test
inc
test
jnp
insl
pop
push
aaa
xor
lods
inc
cmpb
aaa
and
cmpsl
push
inc
in
sahf
lret
xchg
fsubrl
pop
aaa
pop
insl
addr16
fsubrs
add
scas
arpl
push
ds
aas
imul
lcall
icebp
mov
jo
ja
in
xor
or
push
outsl
ljmp
dec
je
sub
std
jmp
jb
icebp
xchg
pusha
xor
xchg
cmp
insb
mov
mov
cmpsl
cld
popa
imul
ret
sbb
mov
daa
movsb
dec
cmp
adc
and
jmp
jno
inc
xchg
cmpsb
insb
adc
jbe
dec
sub
outsb
ja
xor
mov
adc
popa
sar
ret
and
or
adc
dec
mov
dec
or
or
imul
adcl
cmp
fadds
inc
mov
inc
fisubl
sub
dec
xchg
dec
in
test
push
push
lds
mov
adc
push
cs
jbe
mov
leave
xchg
icebp
pop
int3
test
lods
popf
mov
inc
mov
push
push
sbb
pusha
rorb
test
mov
adc
xchg
and
vmovaps
mov
pop
vmovshdup
outsl
add
pop
mov
pop
sbb
or
add
scas
inc
hlt
call
mov
fs
push
cmp
outsl
movsl
pop
xor
dec
dec
adc
dec
test
add
pop
mov
lahf
add
add
test
call
test
stos
push
xor
fs
push
push
inc
out
adc
or
xchg
xlat
incl
mov
push
sub
fdivrl
sbb
adc
test
mov
sub
cld
data16
neg
sub
add
sub
mov
icebp
jae
ds
es
mov
sbb
das
sub
int
sub
push
and
bound
adc
aam
lea
mov
or
mov
bound
test
add
lret
mov
inc
pop
xor
addr16
scas
sub
push
cmpsl
pop
add
adcb
mov
cld
push
xor
fcoml
pop
pushf
scas
pop
jnp
daa
mov
xor
inc
pop
test
mov
dec
addb
push
mov
xlat
jbe
fadds
and
jb,pn
popa
adc
and
stos
mov
ja
push
inc
cs
out
inc
lock
add
insl
push
rcrb
dec
adc
out
mov
sbb
lcall
pusha
xchg
and
bound
incl
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
