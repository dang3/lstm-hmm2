divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcr
mov
mov
ds
pop
inc
lcall
push
push
push
xor
mov
push
mov
scas
and
inc
cld
add
push
fcmovu
inc
add
cmp
pushf
or
push
mov
pop
pop
movsb
adc
push
xchg
mov
xchg
pop
cwtl
pop
jnp
sbb
test
jne
incl
pop
leave
ret
mov
jmp
pushl
ja
xor
inc
adc
decl
push
xadd
dec
test
jg
add
xlat
lcall
xchg
add
mov
imul
adc
and
movsl
push
les
pushl
cltd
push
mov
xor
cmp
add
push
add
aaa
mov
cwtl
cmp
int
push
or
data16
cmpl
xor
movsb
mov
lahf
add
andl
sbb
outsl
in
scas
loope
mov
hlt
cs
addl
idivb
pusha
cmp
sbb
sub
dec
rcrb
in
int
cs
or
das
mov
or
or
sarl
jae
pop
cmpsl
lret
mov
int
add
cmpsb
cmp
lea
push
call
push
push
add
add
push
enter
loopne
pop
inc
add
in
sbb
into
adc
sub
pop
pop
repnz
enter
dec
or
or
add
jae
add
ja
add
dec
xchg
or
xor
test
jl
inc
add
test
pop
addb
das
and
and
dec
inc
fidivl
movsl
pop
xlat
push
sbb
xor
and
dec
push
or
js
sahf
add
push
aad
cmp
je
out
push
jmp
out
aam
fdivrs
fs
jl
add
pop
add
push
scas
xchg
jmp
push
sub
xlat
insl
sbb
add
push
jne
pop
sub
mov
aaa
mov
loop
loopne
pop
pop
ljmp
push
mov
insl
sarl
cmp
or
jge
gs
fildll
js
sti
mov
mov
xor
mov
pop
ret
das
push
cltd
arpl
roll
pop
int3
popa
adcb
cmp
cli
fadds
sub
inc
clc
sub
enter
sbb
in
jmp
sbb
or
cvtps2pd
insl
jo
das
movsl
push
xorl
sbb
pusha
ljmp
jo
cli
js
mov
cmp
jg
mov
adc
mov
inc
ret
pop
dec
mov
push
mov
pop
movsl
jmp
pusha
add
test
push
sub
pop
mov
clc
push
mov
sar
imul
cld
ja
mov
js
pop
dec
clc
add
push
fisubl
scas
jmp
shl
jbe
pop
in
sub
cmpsb
adc
leave
call
ficompl
int3
stc
clc
icebp
loop
lds
iret
jle
mov
sbbl
jecxz
js
jle
push
adc
cmp
fistpl
pusha
lds
dec
cmp
add
aaa
lods
std
jmp
cltd
sub
shr
enter
mov
mov
imul
cwtl
and
mov
add
push
jne
mov
cmc
sbb
adc
jbe
mov
out
xchg
rol
inc
add
inc
add
lea
push
add
adcl
inc
adc
js
notb
xor
into
mov
cld
aam
sbb
xchg
fistpll
pop
push
cmp
cmp
cmpsl
mov
jb
xlat
xor
fsubrs
mov
pop
leave
jmp
or
test
jle
mov
xchg
cmp
mov
inc
sahf
mov
xchg
rol
pop
test
sbb
jo
and
sbbl
sbb
aas
lds
into
je
or
addr16
push
mov
lea
inc
sub
or
xchg
xchg
or
lret
ret
and
addb
hlt
adcb
jbe
cmpsb
mov
or
hlt
jg
pusha
cmp
or
push
or
cmp
xchg
cmp
push
rcr
out
mov
adc
cmp
jle
mov
sbb
int3
out
add
sbb
cmp
or
pop
or
and
cmp
mov
xchg
pop
lret
filds
addr16
add
jb,pt
pop
add
mov
adc
rcll
std
fcoms
jnp
ljmp
add
cmp
clc
mov
push
push
push
rcrb
or
adc
xchg
call
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
cmpsb
cmp
mov
dec
out
ret
aad
add
sarl
sbbb
push
xor
cmp
push
mov
sar
push
lea
cmp
jne
push
int3
sbb
lock
push
add
pop
fucom
adc
pusha
js
push
mov
mov
or
pusha
test
xchg
pop
pop
pop
js
in
inc
subb
push
leave
xor
test
mov
and
sub
test
fcoml
jo
dec
mov
clc
mov
adcb
cmpb
sbb
mov
repnz
sbb
fistpl
cwtl
mov
fmuls
in
gs
pop
lret
pusha
mov
cmp
mov
out
testl
jl
or
jb
mov
mov
lret
rol
dec
out
outsl
cli
sub
or
pop
push
or
sbb
pop
push
movl
pop
jns
sub
mov
sbb
mov
fdivs
pop
in
loope
push
add
sbb
add
jg
and
test
push
lea
push
dec
lea
lock
outsb
inc
xchg
ret
push
imul
insb
lds
sub
mov
scas
nop
mov
enter
scas
push
movsl
cmp
lock
push
xor
add
pop
cmp
je
js
hlt
test
adc
jne
sbb
xor
arpl
ret
xlat
jecxz
mov
adc
xchg
ss
jbe
insl
into
mov
inc
fdivs
cmp
ljmp
ret
push
scas
push
sti
push
in
mov
aam
in
loope
cmp
dec
or
movsl
div
xor
mov
or
fucomip
call
arpl
cs
jno
bnd
mov
jp
lods
or
outsb
int3
pop
or
es
cmp
sub
add
or
lock
pop
mov
mov
fmuls
ret
mov
movsl
dec
roll
push
mov
mov
push
xchg
lock
ret
cmpsb
mov
lock
aaa
ret
jne
xor
mov
insl
add
pusha
xchg
faddp
jno
or
stc
lcall
loopne
push
sbb
pop
test
adc
xor
mov
sbb
adc
sub
and
mov
inc
xor
aaa
push
lock
lods
dec
lahf
fistpll
inc
add
ret
je
dec
pushf
test
adc
or
adc
movsl
sbb
call
inc
pop
ret
or
mov
loope
or
repz
adc
jle
int
pop
divl
jg
add
mov
push
sub
jbe
rcrb
fadds
mov
jle
or
popaw
jl
mov
call
and
sub
add
test
add
js
or
pop
fsubs
mov
rcl
add
ljmp
insl
xchg
add
sub
lret
ljmp
rorl
or
dec
or
sub
js
and
adc
fbld
ret
add
push
in
dec
fcoml
or
pushl
ljmp
sar
inc
pop
xlat
cmp
pandn
or
cmpb
je
in
rorb
in
scas
int3
mov
cmpb
ret
pop
movsl
stos
mov
dec
pop
je
pop
and
movsb
in
push
adcl
jbe
cmpsl
call
js
jecxz
add
call
movsb
lahf
cmp
add
adcb
test
aaa
pop
sbb
nop
push
and
jb
or
in
insl
mov
xchg
ret
pop
adc
add
xorb
clc
mov
jbe
js
xor
pop
mov
in
cld
cmp
js
or
dec
jns
xchg
fimuls
movsl
cmp
xchg
addb
movsb
sub
jo
daa
xchg
and
into
or
or
mov
je
mov
or
sbb
or
add
fs
push
xor
data16
mov
pop
add
sub
aas
ret
fadds
inc
roll
jo
aam
mov
jae
in
sub
adc
adc
bound
and
cmp
xorl
xor
jno
jne
adc
nop
adc
push
push
bound
mov
xor
ret
mov
lea
xchg
cmp
sub
adc
push
push
push
xchg
xor
ss
data16
jne
sbb
pop
sahf
out
sbb
dec
jmp
mov
loopne
jl,pt
dec
in
or
bound
cmpsb
mov
ljmp
sbbb
lea
xor
mov
push
fadds
jg
call
push
xor
xor
sbb
pop
mov
mov
in
shll
push
add
in
push
mov
push
xchg
loopne
jp
mov
lcall
cmp
sbbl
adc
mov
ret
jmp
repnz
je
or
inc
mov
or
sbb
add
xchg
xor
loop
xlat
les
lahf
in
xorl
mov
mov
push
xor
mov
mov
sti
sbb
rorl
adc
xor
ret
inc
in
fsubr
out
add
add
jb
loopne
movl
insb
xchg
lock
data16
out
loopne
aam
xchg
lods
scas
outsb
cltd
sahf
mov
shl
xor
cmpl
mov
or
mov
in
push
and
push
push
and
mov
jmp
xor
push
pop
jbe
inc
pop
je
sbb
repz
adc
push
js
test
adc
mov
pop
lcall
sub
sbb
test
sbb
imul
fldcw
fistpl
fistpl
jae
ret
pop
xchg
mov
jmp
and
rcr
ret
mov
inc
mov
add
cmp
mov
jns
imul
call
or
push
push
sbb
nop
maskmovq
imull
rcrl
test
enter
or
sbbb
pop
cltd
xchg
lret
push
mov
cmc
xchg
cmp
xor
icebp
pop
in
lods
loopne
add
lcall
test
cmp
popf
mov
cmp
lock
xor
aad
sub
jl
add
mov
fcoml
dec
out
outsb
cmp
mov
cmp
shlb
scas
js
aaa
out
clc
sub
cmp
or
fsubl
stos
dec
movsl
test
nop
out
or
nop
rclb
rclb
mov
and
push
imul
movsb
cmp
dec
pushf
fmuls
mov
int3
sbb
ficomps
mov
xchg
pop
enter
enter
enter
inc
push
imul
cmp
shl
sbb
mov
and
xor
jle
pusha
sbb
push
sbb
jmp
ja
sub
mov
xor
add
and
shr
adc
push
mov
jle
pop
mov
xchg
push
ss
stos
jo
aaa
fidivs
clc
adc
insb
rorl
dec
test
mov
and
xchg
notb
sbb
mov
sub
pop
push
xor
shrb
aam
and
push
inc
adc
add
mov
jnp
dec
xchg
dec
ds
loopne
stc
add
mov
loopne
push
or
pusha
sub
sbb
test
and
sbb
notb
jg
mov
jno
and
xchg
adc
inc
mov
orl
test
clc
out
mov
movl
mov
xchg
sbb
test
mov
cwtl
sub
iret
mov
and
mov
shlb
addr16
adc
mov
xorl
leave
sbb
fdivl
push
adc
in
cmpl
adc
leave
in
adc
mov
fcmovne
pop
and
push
pop
push
jmp
xchg
cmpsl
sbb
adc
or
pop
inc
sbb
shll
std
adc
pop
mov
add
adc
pop
movsb
jae
xor
sub
dec
or
shlb
push
sbb
out
sub
jl
mov
popf
or
push
mov
in
repnz
xchg
btc
lret
or
in
mov
outsb
aaa
adc
dec
xchg
sbb
mov
jne
push
lret
jl
movsl
jno
mov
adc
stc
or
sbb
jne
fsubr
into
adc
mov
aaa
addb
pop
leave
adc
mov
push
adc
movl
mov
or
adc
and
sub
sub
and
sbb
sbb
loop
leave
mov
neg
pop
dec
xchg
pop
bswap
push
inc
test
daa
sbb
jmp
sbb
test
pushf
sbb
clc
popf
cmp
sbb
or
jge
je
shll
les
shlb
pushf
pop
mov
pop
pop
stc
or
aas
cmpsb
sub
testl
mov
clc
add
add
rclb
addr16
mov
or
je
adcb
pop
cmp
dec
mov
xlat
in
xchg
adc
and
movsl
push
adc
jecxz
add
add
cmpsb
ret
or
push
in
push
add
fs
lods
cmp
adc
cmp
push
xorb
and
sbb
or
test
cmp
je
push
push
pop
in
sub
cmp
cmp
test
adc
cwtl
pop
mov
sub
xchg
and
mov
and
xor
cli
adc
and
std
push
pop
mov
scas
push
jne
xor
rorb
sahf
sub
mov
mov
loope
lock
and
and
and
test
push
and
sahf
inc
bound
stos
add
jbe
pop
add
push
add
pop
push
jo
fcomps
les
xorl
cmpsb
std
add
faddl
cmp
mulb
add
incb
mov
or
or
and
cltd
test
add
adc
data16
js
cmp
scas
sub
pop
nop
mov
add
xor
ljmp
sub
xchg
sbb
adc
adc
das
mov
scas
ret
inc
lret
ret
and
pushf
test
lret
or
xor
mov
add
push
pushf
add
add
push
in
pop
xor
cmp
xor
push
mull
adc
mov
lods
mov
int
lret
and
xchg
sub
mov
and
mov
adc
nop
out
imul
sub
lret
movsb
or
xchg
sbb
movsb
sub
das
sub
add
jg
or
test
adc
inc
in
call
inc
push
push
push
sbb
out
mov
push
pop
fdivrs
cmpsl
xchg
and
movsl
loopne
xchg
out
xchg
push
mov
popf
clc
stos
add
and
xchg
das
lahf
xchg
mov
sbb
dec
sub
or
stos
dec
mov
add
mov
dec
notl
sbb
lods
push
movzbl
xchg
cmp
sub
pushl
jnp
lret
fcmovnbe
sbb
xor
inc
mov
gs
ficompl
push
pop
xor
xor
fistl
fisubrs
dec
or
and
push
jae
mulb
add
sbb
pop
adcb
ficoml
add
les
js
push
adc
mov
inc
jb
sbb
pop
cmp
cmp
mov
bound
and
and
in
and
test
mov
data16
mov
inc
and
jae
xchg
aaa
pop
sub
ret
mov
push
icebp
jne
mov
inc
ja
ds
sbb
movsl
popf
fneni(8087
dec
cmp
mov
mov
in
and
pop
cmpsb
rolb
lahf
add
pushl
adc
cwtl
mov
lahf
faddl
jo
add
adc
mov
xchg
jbe
ret
push
je
mov
jo
adc
pop
dec
mov
jge
adc
je
cmp
push
push
fists
call
inc
jl
push
mov
fistl
dec
add
pop
call
dec
clc
jne
push
sub
jp
mov
mov
push
mov
lods
push
in
movsl
xchg
loopne
pop
jmp
cmp
push
mov
in
push
add
jg
and
jge
mov
add
add
or
mov
pop
inc
in
inc
pop
adc
mov
ljmp
fstl
xchg
xor
add
test
imul
test
push
mov
pop
jmp
pop
inc
xlat
rorb
nop
loope
or
lret
sbb
add
push
pushf
in
pop
pop
xor
loope
jne
xorb
adc
call
lcall
or
lock
mov
jl
and
ja
and
mov
sub
aam
pop
jle
xchg
inc
out
or
sub
or
mov
jl
into
add
scas
jbe
int
adc
pop
out
jne
or
je
sub
sbb
scas
shrl
mov
sbb
sub
adc
mov
and
push
and
inc
lret
clc
push
or
inc
pop
mov
lods
outsl
jae
popa
hlt
fsubrp
call
add
cmp
rcll
dec
xchg
push
add
and
std
mov
not
add
xchg
lahf
je
test
add
push
jge
cmp
pop
fsub
push
out
inc
and
test
call
addl
loope
jo
mov
and
lds
inc
sub
pop
add
push
or
jl
xor
jg
adc
sub
jg
push
mov
in
test
or
les
or
das
push
std
push
lods
inc
int3
add
mov
or
adc
push
fsubrl
or
mov
push
in
shrb
pop
mov
mov
adc
adc
dec
je
sub
pop
addl
pusha
cmpw
je
fcomps
adc
xchg
pusha
jmp
adc
add
or
xchg
rorb
mov
stos
test
adc
push
cmpb
in
xorb
aam
xor
jecxz
out
ja
rcl
push
push
les
je
lock
fbstp
test
hlt
xor
inc
mov
sbb
jle
push
jbe
fadd
jecxz
pop
cmpb
jp
fistpll
cmp
jle
and
je
in
sbb
mov
push
cld
push
cmp
insb
pop
add
xchg
ds
js
stc
popf
decb
fiadds
jle
pop
mov
add
push
push
out
shrb
mov
add
or
xor
out
pop
pop
adc
shlb
mov
xchg
adc
aam
sbb
leave
add
jge
scas
fcmovnb
cmpl
loopne,pt
sub
xorl
clc
cmpw
jne
fildll
rorb
outsb
sbb
inc
roll
inc
sbbb
ret
call
aam
das
test
mov
loopne
dec
test
or
ret
push
insb
mov
jbe
pusha
ss
add
push
sar
dec
mov
add
xchg
jmp
test
add
or
outsl
jns
flds
sub
stos
and
mov
scas
ret
roll
nop
or
or
adc
and
jb
and
or
sub
rolb
mov
jg
in
loopne
pop
cld
loopne
sbbb
pop
fisubs
cmpsb
add
fcomps
add
loopne
inc
ja
dec
add
nop
or
cwtl
push
dec
test
cmove
or
imul
loopne
ljmp
mov
cmp
cli
in
mov
sbb
shlb
ret
mov
jp
nop
xchg
cs
jbe
sbb
mov
mov
scas
jecxz
les
in
add
inc
mov
and
and
add
add
push
jecxz
repnz
push
call
ficoml
mov
rcll
addl
test
iret
cmp
decb
rcll
call
push
pop
nop
out
inc
dec
insl
or
mov
jbe
aaa
xor
or
push
loopne
add
test
xor
je
cmp
or
mov
js
pop
lods
dec
cmovns
mov
adc
sub
add
adc
iret
dec
fs
push
pop
call
add
xor
mov
or
push
mov
rorl
insb
and
rclb
pop
ss
cmp
aam
fcoms
faddl
loopne
in
mov
mov
xor
loope
test
je
pushl
push
js
std
cmp
mov
cmp
ret
shr
movzbl
push
fdivrs
push
ret
push
push
inc
add
movsb
mov
lret
dec
sub
jmp
sbb
jl
cmp
ret
push
andl
mov
addl
dec
push
gs
pop
xor
fcoms
out
xchg
icebp
test
add
int3
cmc
jle
pop
or
add
mov
or
add
sti
jle
cld
aaa
mov
push
push
mov
push
cmp
jg
mov
mov
jmp
into
mov
dec
arpl
jae
sbb
insb
sbb
leave
sbb
mov
repnz
xor
enter
push
ret
or
cmpsl
mov
cmp
pop
xor
js
outsb
sub
in
sub
cmp
subl
sbb
mov
sbb
jge
pop
sbb
jg
ret
push
pop
jmp
mov
push
cmp
inc
fs
int
and
ss
sub
shlb
cmp
add
sub
jne
xor
cmp
inc
adc
rorl
lock
ja
xor
inc
cmp
jae
stos
daa
clc
orl
dec
ja
xor
je
fs
divb
mov
add
cs
je
add
fiaddl
push
or
lock
imul
ljmp
call
jg
ss
add
push
push
jnp
shll
daa
adc
shr
scas
mov
into
popa
fwait
adc
fisttpl
pop
xor
rorb
cli
lea
ljmp
roll
or
push
test
adc
fiaddl
xchg
add
fcmove
add
mov
mov
xor
dec
push
mov
mov
add
sub
inc
test
mov
adcb
out
aam
int
jmp
call
mov
js
ret
push
cmpsb
std
inc
dec
hlt
jg
hlt
or
jle
push
sub
pop
movb
xchg
inc
lahf
xchg
imul
out
add
inc
pusha
mov
adc
sbb
sub
push
push
mov
inc
pop
inc
mov
in
sbb
pop
xchg
fdivp
add
jns
idiv
cmp
jl
cld
inc
in
mov
fldpi
push
xor
push
rcl
dec
pop
cmp
xor
push
ja
addr16
cmp
jae
lock
mov
pop
or
xchg
dec
pusha
cmp
popf
sbb
mov
jge
or
imul
jns
unpcklps
push
mov
inc
roll
je
dec
sti
adc
hlt
ret
je
mov
inc
cltd
mov
jbe
mov
lock
mov
xor
jne
sbb
cmp
into
cmp
outsl
loope
or
mov
clc
pop
pop
pop
inc
mov
int3
or
enter
hlt
add
add
seto
pop
mov
out
mov
jae
dec
mov
adc
mov
insb
add
inc
outsb
mov
push
inc
std
mov
add
adcl
ljmp
mov
pop
dec
dec
sbb
jb
xor
ret
add
adcb
xchg
fsub
pop
lcall
pop
mov
fs
jne
cmp
je
sub
xor
inc
cmp
or
in
sbbb
and
mov
popa
adc
lea
je
pop
sbb
lcall
adc
jo
sbb
lea
or
setne
rcrb
ret
push
arpl
jne
rolb
mov
call
adc
inc
sbb
popl
js,pt
jo
jg
stos
mov
lods
jo
sets
xor
push
or
add
aad
mov
jne
or
sbb
jmp
mov
test
ret
js
push
and
jle
mov
or
cmp
mov
add
add
cmpl
pop
cmpsb
dec
lock
data16
js
rorl
add
jmp
mov
in
jne
clc
add
adc
inc
and
lcall
outsb
repnz
mov
leave
xor
sbb
add
jle
ret
add
es
sahf
sbb
push
incb
imul
add
mov
mov
and
sti
pop
cmp
push
insb
cmp
adcb
hlt
mov
sub
jmp
cmp
lcall
je
jmp
sub
mov
negl
incb
ret
insb
cld
cmp
lea
jbe
mov
dec
or
push
push
test
push
mov
inc
popa
and
push
xchg
add
add
inc
das
cmp
xor
mov
xchg
push
in
add
and
jmp
sbb
loop
mov
xchg
imul
es
inc
fsubs
or
aad
cmpsb
pusha
inc
ret
xlat
jecxz
dec
mov
mov
test
cmpsb
bound
lea
sbb
sbb
sub
mov
scas
mov
call
jo
jp
sti
sbb
push
nop
cmpsb
rcrl
and
or
pop
inc
cmp
xchg
lods
pusha
push
xchg
imul
shufps
fdivr
movsb
and
inc
fdivs
in
sub
jl
loop
fldt
inc
leave
xor
cmp
add
fs
add
jb
enter
test
dec
jecxz
adc
cmpsb
movsl
or
scas
xchg
call
cltd
mov
cmpsl
jb
fsubrs
imul
test
mov
lret
cmpsl
enter
fnstenv
test
xchg
push
inc
add
adc
and
inc
je
test
fiaddl
add
xchg
sbb
enter
mov
call
pop
mov
add
lcall
sarl
add
inc
aad
bound
jmp
inc
mov
sbb
test
and
nop
add
inc
aam
movsb
add
mov
loop
xchg
mov
mov
inc
xor
jno
movsl
and
mov
inc
rcrb
dec
push
push
bound
mov
mov
adc
mov
or
mov
mov
leave
lret
xchg
dec
hlt
mov
cmp
and
fwait
jns
test
ficomps
pop
inc
lcall
xchg
add
movsl
nop
lret
inc
pusha
add
add
pusha
repnz
lret
cmp
xlat
sub
lods
cmpb
movsl
hlt
stos
lock
cmc
popa
shl
xor
leave
mov
clc
sub
test
and
adc
dec
scas
adc
ja
leave
sbb
imul
push
lea
mov
add
cmp
loope
or
and
adc
sub
sbb
pop
cwtl
sbb
dec
testl
sar
sbb
adc
in
cmp
push
jge
sarb
lret
mov
dec
adc
or
cmp
sbb
or
sbb
and
sub
and
and
enter
sbb
sbb
prefetch
push
aaa
sub
sub
pop
sbb
aam
daa
push
push
shll
pop
xchg
push
pop
movsb
xchg
aam
add
repnz
sti
shlb
stc
movups
sbb
and
stc
jge
add
adc
sbb
mov
xor
cmp
in
shrl
popf
ret
pop
negl
mov
add
cmp
shrb
adc
jle
push
jmp
jno
push
sbb
sub
sti
pop
dec
push
jno
loope
sbb
mov
xor
cmc
adc
push
mov
pop
add
sahf
nop
lret
outsl
clc
mov
jne
sub
dec
je
adc
out
into
fsubrp
jge
adc
pop
dec
inc
sbb
aad
xor
movsb
out
out
jmp
mov
mov
mov
or
dec
icebp
adc
leave
jmp
loopne
pop
add
pop
jne
mov
popa
js
jmp
push
add
push
mov
xor
push
xchg
and
or
mov
mov
lret
fimuls
inc
xchg
xchg
or
pop
push
mov
jbe
xchg
mov
pop
dec
jne
add
mov
andl
loope
add
add
daa
mov
or
pop
scas
lea
enter
int3
xor
popl
inc
sbb
scas
sarl
cmp
je
cmp
pop
dec
stos
xor
and
fs
sbb
leave
adc
cli
mov
stc
sub
sbb
fstpl
imul
ja
mov
je
xchg
push
and
xchg
mov
pop
mov
adc
jmp
xchg
cmpsb
adc
sbb
cmp
adc
dec
mov
push
mov
iret
fcomi
ss
cmp
inc
jo
cmp
repz
and
insl
pushl
push
jg
sbb
mov
mov
add
data16
and
sub
mov
cld
fstl
lea
adc
sub
mov
lahf
or
jnp
mov
movb
cmpl
mov
sbb
xchg
pop
jge
fists
mov
mov
pop
icebp
fbld
push
pop
push
lea
push
push
push
push
add
mov
lea
cmp
mov
adc
and
pop
leave
mov
jle
add
mov
lds
movsb
lea
xchg
push
push
jo
movl
jmp
hlt
mov
jnp
jp
pop
and
insl
mov
mov
fwait
add
fcmovbe
cmpb
and
sbb
push
aam
mov
pop
push
push
test
out
add
test
fnstcw
mov
test
mov
dec
mov
in
and
popa
inc
sbb
lcall
idivl
dec
push
mov
lretw
cwtl
or
in
add
xchg
adc
loopne
jno
jle
cmpsb
push
cltd
test
pop
push
inc
push
add
inc
sub
fadds
outsl
add
dec
add
aas
jae
jne
or
dec
repz
add
mov
or
lea
mov
inc
dec
jmp
repz
ds
cmp
jne
je
call
and
mov
ret
or
in
pop
add
push
icebp
nop
jecxz
sub
loop
add
push
cli
loop
lea
test
int
test
mov
cmp
dec
ljmp
aas
push
cmp
mov
mov
pushf
jl
stc
gs
sbb
sub
rolb
mov
lea
jl
sbb
add
les
mov
jg
cmp
aaa
test
lret
xor
popa
rolb
xchg
sub
aam
das
in
enter
or
mov
int3
push
lea
sub
fcoml
adc
dec
fildl
cmp
mov
test
add
adc
dec
mov
fdivl
sbb
or
std
ret
insb
xchg
cmpsb
cmpsl
add
rorb
pusha
and
mov
cmp
jne
pushf
lret
fstl
push
sub
xor
pop
adcb
pop
xor
or
stos
mov
push
rclb
rolb
mov
adc
mov
mov
enter
pop
jbe
sbb
cmp
pushl
call
push
or
out
int3
and
adc
or
pop
xchg
pusha
es
or
sub
les
rcl
mov
ficomps
dec
add
jle
mov
div
push
dec
je
movsl
clc
dec
loop
push
push
in
jge
pop
xchg
outsb
sub
sub
in
fsts
pop
sub
movsb
lea
es
cmp
push
mov
shll
mov
cmp
js
inc
adc
dec
cmp
les
loope
les
icebp
loope
push
mov
or
push
or
lock
mov
adc
sbb
push
neg
sbb
push
adc
cmp
out
out
fildl
add
pop
jb
inc
mov
xchg
sbb
in
and
add
dec
cmp
stos
add
push
push
iret
fwait
push
inc
sarl
out
or
xor
scas
rcl
dec
push
fimull
leave
and
push
push
xchg
adc
je
jmp
ficoms
in
mov
test
push
and
pusha
enter
xor
mov
loope
mov
test
adc
push
les
adc
punpckhdq
add
or
jmp
and
pop
push
mov
idiv
adc
dec
pop
xchg
jo
pop
xchg
or
les
pop
mov
dec
js
and
mov
jns
outsb
jle
cmpl
jne
pushl
push
jo
nop
dec
sbb
push
cs
push
int
xchg
lds
push
ds
fcoml
in
jmp
push
add
xchg
fmuls
bound
cmp
add
or
ret
aas
mov
loope
sti
je
cmp
scas
add
ja
sti
sbb
xchg
leave
push
sahf
repz
adc
mov
add
ja
cmp
mov
rol
sub
mov
addb
xor
clc
xor
sbb
push
jne
movb
cmpsl
enter
or
pop
repz
popf
movsl
fldz
jno
popa
xor
push
loop
enter
adcb
aas
addr16
dec
aas
mov
push
mov
mov
lea
jmp
sub
add
fdivrl
mov
roll
or
imul
mov
sbb
or
stos
roll
js
sbb
es
aam
leave
push
sbb
mov
xor
nop
pop
orl
fidivrs
push
sub
push
adc
enter
cltd
hlt
and
mov
pop
push
sub
xor
lods
test
mov
scas
iret
xor
or
jge
scas
mov
std
int3
ja
add
mov
cmp
nop
popa
cmpsb
and
mov
push
push
lea
add
xor
pop
pusha
push
or
jp
or
sbb
popa
inc
les
dec
jl
jns
imul
sbb
xor
xor
gs
and
jge
mov
xor
clc
sbb
out
test
pop
inc
fimuls
cltd
out
cwtl
imul
pusha
fcompl
scas
mov
pop
mov
rcrb
xchg
push
shrb
aaa
movsl
add
popf
pop
mov
push
stos
xchg
cltd
cli
cmp
inc
mov
sti
popf
out
andl
lods
lods
mov
sbb
xchg
inc
negl
popa
in
or
ja
lea
push
ret
sbb
cmp
mov
adc
mov
fs
adc
fmuls
and
cli
scas
loopne
push
repz
or
ret
inc
test
nop
mov
mov
adc
inc
sub
xchg
fs
xlat
push
adc
sbb
das
repnz
aas
sbb
push
jle
add
fdivs
cmp
cmp
cmp
les
sbb
out
or
inc
shlb
cs
sub
push
push
ja
in
scas
mov
adc
sbb
and
and
mov
add
fisubrs
add
pop
sub
push
cli
or
push
loope
mov
mov
or
or
push
jbe
testb
gs
jo
ror
push
rclb
push
movsb
inc
lock
sbb
mov
xlat
push
daa
out
push
mov
clc
andl
and
or
xlat
xchg
jle
fidivrl
xchg
sub
and
popf
mov
xor
lock
clc
mov
cltd
mov
lea
mov
pop
aas
sar
orl
enter
sbb
mov
cmp
jge
mov
sbb
idiv
push
mov
push
push
mov
les
into
idiv
shl
movsl
add
mov
test
test
jg
bound
loope
fs
dec
push
jo
or
mov
adc
scas
mov
or
or
aam
jae
lock
mov
dec
fldlg2
or
aaa
ficompl
pop
pusha
push
pop
jge
popl
call
mov
sub
clc
je
ja
filds
call
cltd
idivl
aam
into
jp
xor
movsl
test
js
jmp
lock
fs
or
xchg
dec
xlat
sbb
mov
cmp
in
jbe
lahf
xor
ficoms
sbb
dec
lea
xchg
mov
mov
sub
cmp
or
or
jecxz
jge
jmp
mov
hlt
fildl
pop
std
out
hlt
mov
test
jns
faddl
or
inc
sbb
mov
fdivrp
mov
sub
mov
lea
test
mov
inc
js
fdivs
les
xchg
pop
jl
jmp
sarb
xor
push
mov
scas
cmpb
or
clc
fidivl
jmp
push
cmp
or
mov
stos
push
pop
mov
pop
jne
pop
sbb
mov
inc
add
repnz
or
jle
mov
cwtl
mov
movsb
aaa
mov
mov
loop
das
add
aam
jl
cs
lea
popa
cmc
add
pop
inc
fstps
push
gs
bound
je
or
xchg
xchg
and
sbb
xchg
pusha
or
shrb
dec
out
push
pop
pop
into
pop
jle
sub
jp
in
lock
push
mov
jnp
mov
push
ret
data16
imul
in
add
adc
mov
repnz
and
fs
lret
jo
sbb
loope
pop
iret
add
mov
sbb
jne
xor
mov
inc
dec
jge
shll
mov
fistps
jl
movsb
xchg
adc
addr16
jp
push
leave
pusha
pop
leave
pop
xor
jae
adc
int
fdivrl
pushf
lea
push
mov
push
dec
aas
mov
in
mov
lea
test
cmpl
decl
lea
push
push
adc
mov
inc
inc
pop
mov
mov
sub
test
sub
pop
cmpsb
jle
and
push
xchg
movsl
and
je
pop
mov
or
mov
scas
sbb
push
inc
es
sbb
dec
jge
mov
pextrw
or
ret
sbb
lods
jmp
inc
xchg
out
pusha
pop
int3
out
pop
popf
cmp
pop
ret
dec
sbb
sbb
arpl
movsb
add
pop
or
das
and
cmp
movsb
mov
daa
sbb
enter
mov
pop
mov
xor
add
and
cmp
mov
pop
mov
push
cmp
data16
aam
aas
and
inc
int
mov
inc
sub
clc
cld
add
cmp
setb
test
mov
cmp
jg
popl
push
xor
sub
andl
push
lea
or
aaa
addb
adc
in
jle
je
push
fstps
out
mov
pop
adc
jp
add
cltd
push
xor
mov
je
dec
mov
or
mov
jbe
or
outsl
cwtl
inc
hlt
iret
push
fs
in
pop
jbe
push
add
shrl
inc
sub
xlat
ds
das
push
cmp
push
pop
xchg
pop
add
leave
and
shlb
sbbb
sbb
sbb
push
mov
lock
sub
pusha
sbb
imul
jmp
outsl
mov
rclb
sub
fildl
add
int
cwtl
dec
push
ja
and
pop
sti
xor
inc
and
xor
adc
or
dec
and
neg
or
jmp
push
push
pop
cmp
and
jle
xchg
pop
stc
inc
lock
xor
or
adcb
xchg
imull
cmp
fiaddl
jmp
add
shlb
pop
js
mov
inc
add
scas
sti
xor
into
fdivl
sbb
and
inc
pushf
pusha
stos
jb
test
popf
and
lds
sub
push
mov
dec
ljmp
cli
pop
dec
repnz
clc
pop
push
test
enter
jns
fmuls
sbb
add
call
fsubs
mov
add
popf
mov
incl
push
and
add
push
gs
je
and
or
cmp
loopne
popf
sbb
fstl
push
les
push
push
or
stos
test
add
sub
mov
in
call
std
mov
xchg
pop
pop
shl
push
iret
mov
mov
dec
test
movlps
int
popa
pop
push
sbb
push
cmp
iret
movsl
cld
pop
test
adc
mov
jmp
xchg
cld
mov
pop
ss
inc
xchg
push
or
and
je,pt
pop
cmp
imul
sahf
lods
cwtl
xor
push
mov
inc
adc
fcomps
push
shlb
push
adc
mov
fnstcw
xchg
mov
push
jnp
imul
mov
test
or
rorl
hlt
fidivs
mov
dec
andl
bound
je
clc
push
jl
ret
push
xchg
pop
pushl
jo
push
lret
jmp
mov
arpl
dec
cmp
mov
sbb
out
ret
je
push
ret
push
sbb
mov
and
sbb
push
dec
mov
jmp
dec
mov
sub
imul
and
mov
push
ja
lea
adcl
cmp
cmpsl
xchg
ss
mov
jle
pop
cmp
fmulp
js
cmp
jge
mov
rorl
pushf
mov
sbbb
cmp
jle
imul
xor
roll
jle
and
pop
xchg
out
in
sbb
popf
cmp
fisttpll
or
mov
jnp
xchg
mov
xorb
sbb
aam
sbb
xor
push
cld
callw
mov
cmp
in
mov
jl
pop
jo
sub
inc
sete
sbb
loope
and
je
sbb
jb
or
and
stos
push
or
adc
mov
jno
dec
out
mov
mov
add
adc
enter
push
mov
add
sub
jae
shl
dec
xor
out
movsb
add
sbb
mov
sub
ffreep
pop
lods
jecxz
push
hlt
js
push
push
sbb
pop
into
lods
pop
pop
je
lcall
mov
add
jne
iret
sub
lahf
lea
fmull
xchg
je
inc
mov
in
aaa
stos
push
aad
pop
or
and
or
insb
or
test
mov
jge
sbb
sub
push
iret
ss
add
sahf
je
sub
daa
push
sub
push
or
xchg
popa
dec
or
sti
add
sbb
or
jmp
das
adc
mov
sub
outsl
mov
and
aam
jne
lods
adc
fstpl
push
pop
pop
adc
mov
jno
clc
mov
sbb
int
adc
test
test
inc
lock
repnz
in
call
ja
fdiv
in
sbb
sbb
clc
xor
dec
sub
jns
pop
pop
arpl
andl
or
je
movsl
imul
fs
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
mov
sbb
xchg
mov
or
dec
xchg
pushf
push
add
cmp
mov
xchg
or
mov
add
loopne
enter
mov
sbb
push
or
sub
push
or
adc
push
xchg
shlb
inc
call
xor
hlt
add
in
adc
mov
cmp
or
add
dec
call
add
add
dec
cld
sub
lock
dec
dec
dec
aaa
mov
clc
mov
cli
xchg
inc
jge
cmp
jmp
das
hlt
mov
stos
push
out
out
or
jbe
or
push
push
add
push
outsl
or
sbb
gs
rorb
xor
cmp
loopne
clc
adc
sub
jp
dec
idivb
mov
es
popl
jl
inc
inc
in
jb
hlt
fwait
sarl
das
sub
jg
mov
ret
xor
gs
enter
jns
aaa
jb
or
faddp
dec
lret
mov
sub
add
or
mov
in
and
xor
cmpl
pop
push
mov
rolb
adc
push
xor
and
pop
shlb
shr
popa
lods
or
cld
jbe
movzwl
and
inc
push
shrb
sub
cmp
push
lea
push
mov
pop
pop
cmp
rcll
int
inc
or
jbe
pop
push
mov
push
test
fdivl
adc
add
lock
jmp
ljmp
subl
popa
mov
shl
mov
push
xchg
adcb
shll
loope
mov
xlat
in
cmp
ss
mov
and
inc
sbb
mull
test
insb
jbe
jae
lret
push
add
xor
inc
inc
mov
neg
cld
ficompl
push
xchg
add
xor
push
sub
shlb
dec
xchg
jb
and
sub
pop
mov
ret
xchg
push
aam
inc
arpl
push
cmp
ss
movsb
lea
sbb
lock
cmpsb
add
mov
jae
scas
movl
mov
sub
addr16
jnp
clc
fadd
add
lock
mov
and
hlt
mov
sub
xor
push
sub
mov
add
hlt
push
xchg
rcll
xor
lea
mov
lcall
stos
in
or
inc
out
cmp
add
pop
pop
outsb
call
inc
jns
loope
test
push
aas
inc
add
test
out
aaa
hlt
jle
mov
test
pop
or
popa
xchg
push
xchg
cmp
mov
or
push
cmp
and
sahf
addb
sub
jmp
mov
jb
jo
pop
jns
into
fs
cs
cmp
add
mov
cmpsl
mov
mov
fiaddl
sbb
dec
roll
leave
inc
add
outsl
aam
insb
xchg
mov
jp
iret
sub
sbb
sbb
inc
pop
jns
aaa
sbb
pop
arpl
test
movsb
adc
mov
sbb
aas
xor
mov
adcl
adc
xchg
dec
daa
push
adc
mov
lret
mov
push
jnp
mov
adc
mov
int3
jg
xchg
rol
aaa
orb
in
cltd
sub
xor
pusha
add
mov
push
stos
cmpb
and
jl
xchg
pop
cmp
out
xchg
mov
adc
sbb
pop
shll
inc
sub
movl
push
gs
add
adc
xchg
cli
jb
bndldx
popf
cmpsl
cld
mov
pop
adc
fisttpl
imul
add
jo
add
stc
imul
lea
into
push
cmp
outsl
sbb
fldenv
enter
test
std
dec
sbb
fstps
pop
les
rclb
fidivrl
rorb
inc
or
lcall
add
sub
xor
pop
dec
xchg
push
cwtl
fildll
mov
vshufps
xchg
mov
add
subl
mov
js
test
xchg
lock
mov
stc
push
fidivs
jno
iret
nop
lea
popf
sub
cltd
mov
pushfw
push
jmp
or
push
setne
cmpb
cmp
test
lcall
shll
sub
lea
lea
stc
mov
adc
lods
push
or
push
pop
or
adc
and
or
xor
test
dec
imul
inc
sbb
or
testl
out
or
push
dec
or
shrb
or
outsl
pop
mov
jb
mov
and
inc
mov
testb
or
cmp
nop
ds
fwait
loopne
mov
xor
ss
cmp
mov
dec
xchg
mov
js
or
jnp
movsb
fwait
roll
adc
mov
pop
sbb
mov
jo
movsl
in
lods
call
nop
jne
jmp
push
loopne
ja
into
lods
cmpsb
cmp
add
sti
sti
mov
mov
call
push
daa
mov
fsub
push
in
mov
and
test
pop
shl
pushf
jne
aaa
stos
mov
mov
and
mov
insl
push
cmp
repz
inc
xchg
subb
sub
adc
sarb
movsb
ret
int
adc
sbb
add
addl
ror
dec
cld
xchg
or
addr16
cs
nop
xor
and
adc
adc
add
inc
es
xchg
fiadds
pop
xchg
dec
push
fs
sbb
and
sub
pop
incl
and
add
jne
push
cmp
aad
sbb
leave
and
dec
pop
jmp
mov
adc
sarb
mov
lock
data16
insl
mov
mov
sub
xor
test
lret
cli
jle
add
cmp
sbb
movzwl
push
mov
pop
pop
mov
cmp
mov
jb
mov
xor
scas
cmp
aas
sbb
outsb
and
add
shrl
mov
sbbl
mov
shrd
mov
adc
mov
fsts
mov
mov
shlb
out
cwtl
add
test
scas
push
arpl
fs
lcallw
inc
loopne
fs
lock
repz
add
mov
ret
subb
mov
pushf
mov
cmp
in
add
adcb
ret
test
adc
xchg
addb
lock
ret
in
loopne
movsl
jne
and
push
mov
sbb
sub
pushfw
mov
pop
add
lea
lea
or
jbe
mov
enter
es
in
xchg
pusha
cmp
and
mov
iret
fldz
mov
cmp
cmpl
mov
inc
mov
pop
inc
fcoml
mov
cli
insl
sub
inc
shufps
stc
roll
aas
roll
ret
push
mov
push
outsl
or
inc
dec
out
adc
jo
cmp
outsl
rcll
std
dec
jbe
jo
add
cld
mov
or
mov
add
inc
out
pop
mov
ss
iret
aam
popa
jb
inc
add
add
pop
imul
mov
insb
push
push
dec
loopne
inc
in
xor
and
inc
mov
pop
add
aam
dec
in
mov
shrl
pop
enter
push
outsl
mov
cs
xchg
or
enter
or
add
scas
aaa
or
rolb
add
adc
jo
es
adc
or
add
pop
cmc
nop
das
sbb
and
in
lcall
lods
fisttpll
push
gs
popa
dec
aaa
xor
jns
movsl
ror
sbb
std
test
jns
and
mov
sldt
cmp
addl
or
movsb
dec
xor
jns
test
adc
loopne
out
mov
mov
jmp
arpl
xchg
sbb
jns
adc
and
pop
add
hlt
push
ror
das
and
jne
or
mov
dec
sub
test
adc
push
push
mov
test
push
testb
push
xor
mov
int3
faddp
and
xor
aam
push
add
shl
mov
push
daa
fadds
push
or
adc
add
add
and
mov
out
movl
maxps
mov
loope
pop
dec
push
sarl
jge
stc
pusha
pusha
sub
push
cld
adc
dec
fdiv
add
leave
in
adc
mov
and
leave
cmp
jns
cmp
test
je
enter
mov
adc
pop
inc
pop
cmp
push
push
leave
inc
aam
mov
je
cmp
scas
jmp
test
sbb
xor
xchg
lods
xlat
sbb
jnp
adc
icebp
sbb
sbb
stc
sahf
xor
scas
cmp
rcrb
mov
jae
mov
mov
push
push
pop
cmp
je
movsb
push
adc
or
cmp
mov
mov
or
jo
shl
sbb
fcomps
inc
dec
dec
sarb
and
test
inc
and
add
test
adc
and
jb
and
mov
jge
and
and
daa
jo
mov
cmp
push
push
cltd
fdivrs
inc
mov
xchg
push
sbb
inc
stos
mov
es
inc
add
in
sub
nop
jge
sbb
sub
sub
jnp
scas
ret
push
insb
pop
addl
stos
pop
mov
ret
mov
jle
dec
loopne
imul
cs
aam
lods
daa
das
or
mov
xor
das
jns,pn
pop
and
icebp
pop
sub
pop
add
sbb
pop
adc
dec
cmp
insl
into
int3
xor
rorb
fmulp
push
jno
push
adcb
push
push
mov
adc
das
insl
fdivr
rolb
jae
and
sbb
sbb
fmull
sub
cs
pop
cmp
sbbb
repnz
aaa
or
lcall
sahf
mov
lock
mov
add
retw
sbb
fldl
scas
cs
fldl
add
je
add
loopne
xor
or
pop
mov
push
push
jmp
add
iret
mov
xor
insb
add
jg
mov
sbb
decb
shrb
pop
loop
xor
pushf
testb
fcompl
cmp
cs
rorb
push
inc
pop
mov
mov
pusha
loopne
out
jmp
mov
mov
cwtl
lock
nop
faddp
push
and
xchg
fucomp
cwtl
bound
movsl
or
roll
jb
outsb
popa
dec
mov
and
les
fiadds
xchg
xchg
pop
outsl
add
fdivl
xchg
ljmp
sub
cmp
jbe
jb
and
dec
xorl
or
adc
mov
mov
popf
jae
ret
cmp
push
rclb
mov
cmp
xor
cmpsl
mov
xor
xor
lret
xchg
js
sub
lcall
fldl
insl
jge
push
adc
mov
es
and
push
data16
add
pop
roll
das
add
cmp
xlat
addl
test
les
and
xchg
je
leave
ret
jae
loope
or
cmp
cmp
or
rolb
dec
mov
shr
add
cmp
inc
ret
xchg
mov
jp
pop
sti
add
push
lock
mov
loopne
cmp
sub
mov
mov
dec
and
pop
lock
in
lret
ds
jbe
mov
dec
lods
int3
roll
or
insb
pop
scas
mov
test
hlt
cmp
push
arpl
jno
rcr
adc
mov
add
or
add
iret
sub
rolb
mov
mov
filds
xchg
sub
sbbb
xchg
outsl
cmp
and
clc
sub
fnstenv
add
adc
add
mov
rcrb
stos
into
in
mov
jbe
adc
or
out
or
dec
rorl
cmp
into
rorb
mov
push
ret
xchg
outsb
xor
push
pop
jbe
push
orb
sti
lahf
inc
add
dec
movzwl
mov
adcb
push
int3
push
addb
jecxz
inc
ret
testb
xlat
cmp
test
enter
inc
add
or
mov
cmp
fsubrs
fiadds
imul
xchg
fsubs
sub
pop
push
lret
mov
mov
pop
inc
jbe
call
aaa
loopne
or
add
fsubrl
aam
jb
pop
incb
xorb
sbb
xchg
shl
add
cmpb
addr16
jmp
icebp
je
cmp
ja
push
arpl
loop
and
loope
clc
je
jp
mov
xor
clc
ds
push
xchg
lock
sti
lea
push
lea
push
inc
push
movsl
dec
xor
push
push
femms
scas
pop
add
stc
add
sbb
inc
cltd
daa
dec
lret
cmp
jl
mov
hlt
int3
or
jge
cmp
jle
pop
sub
push
jle
roll
shlb
cmp
jne
add
sti
test
ds
push
add
lahf
insb
cmc
add
push
lods
push
lods
cmpsb
mov
dec
sbb
out
test
out
out
pop
xchg
jo
cmp
je
sub
push
jns
push
xlat
push
mov
insl
fcmovnu
movhps
xor
add
fstps
lock
sar
push
ret
outsb
add
test
jmp
sub
dec
bound
in
pop
adc
cmpsb
dec
or
or
sub
in
sub
lea
pop
sbb
out
push
dec
or
in
out
push
mov
sub
or
mov
jae
es
mov
fmuls
rcrb
jae
lods
jnp
or
sti
call
scas
xchg
movsl
or
cs
ja
adcl
push
mov
pop
imul
scas
pop
sub
cmp
add
xchg
push
mov
push
sbb
sub
push
push
xor
mov
jl
stos
divl
or
cmp
jmp
clc
xchg
ljmp
jne
fistpl
adc
mov
incl
cmp
je
jg
sti
pop
sbb
jbe
push
mov
fistpll
dec
sti
mov
xchg
inc
mov
push
clc
mov
add
or
pop
pushl
inc
jae
ret
ds
je
sbbl
or
out
mov
shlb
mov
sub
jne
push
sub
dec
and
lret
in
js
in
dec
test
or
xchg
test
add
and
add
inc
addl
jb
cmpsb
push
ret
add
rcll
mov
in
imul
stos
iret
rol
jne
popa
adc
call
pop
cmp
mov
jbe
outsl
cmp
ret
dec
push
adc
clc
ret
or
push
cmp
je
xor
call
mul
seto
mov
enter
out
and
jmp
cmpsl
mov
daa
cmpb
or
inc
fwait
xor
test
and
xchg
sub
shl
cmp
inc
inc
inc
or
mov
fildl
jns
fcoms
orb
and
ficomps
adc
mov
jge
ja
mov
scas
je
outsl
sub
scas
push
inc
add
pop
pop
push
cld
cmp
inc
out
test
sbb
adc
pop
pop
jbe
lods
cwtl
jecxz
jp
mov
shll
or
add
inc
in
push
adc
imul
test
xor
fimull
repz
xabort
cmp
adc
aad
add
jmp
pop
cmp
xor
adc
add
and
or
dec
xchg
cmp
arpl
je
clc
pop
addr16
or
cld
leave
and
sarb
lock
push
jbe
add
adc
into
inc
stc
cmc
mov
add
inc
bound
and
test
push
js
and
outsb
and
clc
adc
aad
add
aam
lods
sub
jmp
jmp
jl
ret
out
push
test
je
mov
aaa
xchg
cli
jmp
mov
aam
or
mulb
inc
cmp
jae
add
sub
pusha
les
cmp
inc
out
call
ret
adc
outsl
sub
sti
jne
and
out
adc
dec
adc
cmpsb
adc
ss
push
fcmovnb
mov
faddl
xchg
pop
sub
cltd
push
cmp
xchg
push
xor
fistpl
in
lcall
push
inc
dec
pop
or
pop
push
xor
ja
js
dec
or
lret
je
jo
push
lcall
mov
dec
fdivr
push
or
or
in
stos
xor
int3
imul
sub
mov
cmp
jg
jne
loopne
aaa
bound
lea
lret
jno
sti
aaa
sbb
push
out
mov
roll
rorb
movb
push
push
jle
test
dec
mov
or
jns
mov
jbe
in
push
pop
pop
fwait
lret
pop
lods
dec
or
and
jae
test
jmp
adc
inc
or
pusha
or
mov
or
mov
push
mov
xchg
inc
sbb
inc
sub
jg
push
cmp
rcrb
sub
test
push
ror
and
jp
pop
loopne
sub
push
subl
mov
and
add
dec
mov
sub
add
push
or
das
add
inc
lods
inc
and
or
sbb
loop
jo
push
mov
jl
test
push
insb
and
cmpsl
xchg
int3
rcrl
loopne
xor
mov
mov
xchg
push
and
movsb
mov
mov
outsb
stc
mov
inc
push
jge
repz
scas
push
sub
cmp
inc
mov
test
push
data16
push
fdivr
pop
in
or
push
cmp
push
popa
sub
in
sbb
add
pop
ret
call
bound
or
cmpsl
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
ljmp
xchg
in
jbe
insb
mov
testl
push
add
mov
mov
pop
sub
faddl
push
push
lods
or
push
add
or
sub
ror
pop
ja
push
adc
jb
test
push
mov
dec
insb
sbb
fldt
pop
adcl
outsl
ret
ret
fwait
inc
push
es
jecxz
aad
jnp
lahf
and
mov
mov
cli
and
fimuls
sbb
fiaddl
orb
xchg
dec
sahf
xor
mov
jnp
jno
inc
mov
mov
jne
subb
pusha
push
mov
or
dec
jmp
pop
sub
cmp
lock
add
sub
inc
add
lods
xchg
push
mov
push
or
shrb
cmpsl
cli
xchg
pop
inc
adc
in
mov
das
mov
cmp
mov
lods
sub
mov
mov
sbb
or
inc
push
or
pusha
mov
push
mov
lret
dec
js
jl
cmpl
mov
lods
pop
inc
rcr
lea
lahf
jb
adc
cs
mov
add
and
dec
push
pop
andl
cli
push
sub
pop
mov
pop
add
dec
pop
mov
push
or
xor
xor
pop
push
je
in
arpl
jo
push
pop
popf
push
dec
lahf
sub
mov
cmp
sub
fidivl
xor
jmp
fnstcw
push
clc
leave
ret
push
xchg
dec
adc
sbb
aam
or
rolb
mov
test
add
add
mov
inc
js
test
sub
or
dec
je
orl
addr16
cmpsb
xchg
loope
push
xchg
mov
cmp
pop
or
push
jmp
test
lea
mov
sbb
mov
dec
loopne
pop
jg
pop
les
add
jne
push
inc
loopne
ljmp
loopne
scas
aam
mov
xorb
popf
dec
movl
lods
cmp
sbbl
andb
mov
cmp
nop
xor
push
mov
repz
dec
fcmovnbe
icebp
sub
nop
mov
lea
mov
mov
mov
sub
push
mov
nop
inc
frstor
push
xlat
dec
cmc
sub
sbb
shlb
and
adc
sbb
ret
add
sub
pushf
orb
add
orb
notl
or
dec
adc
lcall
clc
inc
jne
lds
mov
push
adc
punpcklbw
add
cmp
cmp
iret
mov
xlat
ljmp
push
xchg
mov
xchg
jo
jo
arpl
outsb
cmc
cmpsb
mov
repz
adc
xchg
inc
or
push
mov
pusha
inc
lea
insb
xor
pop
das
xchg
fcom
mov
sub
mov
shrl
or
adcl
lea
xorl
pminsw
movsb
hlt
cmp
fcmovne
lcall
nop
xlat
push
mov
sbb
cld
push
dec
xor
js
mov
push
cmp
insl
inc
fadds
push
cmp
aaa
cmp
sbb
or
jae
mov
rcrb
pop
pusha
lods
mov
sbb
in
aad
sub
sub
cmpsl
ss
sub
adc
sbb
pop
push
sahf
js
push
gs
cmpl
dec
push
aas
int3
mov
or
mov
xchg
sub
lea
mov
cmpsb
call
and
sbb
loop
and
mov
loopne
mov
jns
rolb
jecxz
add
dec
and
inc
or
cmpsb
aaa
xchg
xchg
test
mov
xchg
xor
mov
cmpl
push
pop
xor
push
cmp
jne
popa
or
enter
push
mov
repz
pop
xchg
int3
pop
pop
sbb
cmp
sub
xchg
mov
imul
sbb
nop
nop
sbb
sbb
or
sbb
addr16
or
jo
dec
faddp
movsl
sub
shl
cmpb
add
pop
dec
or
or
inc
ja
add
shrb
mov
roll
xchg
pop
sub
add
add
enter
and
adc
add
lret
lret
sub
clc
xor
daa
std
lods
cmpsl
sbb
sbb
and
and
and
iret
test
fistl
ret
dec
adc
repnz
std
mov
shl
cld
jmp
sbb
sub
pop
aas
add
ret
add
jbe
push
lea
and
dec
ret
jb
mov
adc
add
push
adc
and
mov
ss
inc
popa
movb
popa
or
loopne
inc
push
ret
adc
sub
inc
outsb
call
lock
les
sub
addb
cmpsl
adc
adc
loopne
push
mov
por
test
movsb
imul
pop
outsb
dec
sub
in
test
sbb
add
les
mov
rcrb
filds
aas
sbb
adc
dec
sar
js
dec
lret
sub
in
aaa
ss
mov
pop
inc
std
and
fldpi
pushf
jp
pop
js
mov
jp
push
pop
mov
jne
adc
pop
push
mov
ret
enter
rcll
dec
mov
rcll
ss
or
dec
xor
push
push
add
ret
std
movsl
cmp
or
mov
fcoms
nop
jg
xor
stos
imul
push
loop
dec
outsl
fsubrl
lea
push
mov
sub
jmp
ficomps
xor
pusha
jo
inc
insb
pop
and
add
orb
add
pop
and
add
mov
inc
pop
pop
or
cmp
mov
inc
push
popf
idivb
les
bound
mov
dec
add
mov
int
lods
in
sahf
shlb
sbb
and
and
adc
orl
ret
and
mov
inc
or
xchg
in
fisubl
adc
push
lods
mov
and
cmp
cwtl
add
test
lock
mov
dec
add
xchg
inc
pop
lcall
mov
iret
rclb
ja
test
ret
or
lea
in
das
pusha
lea
cmp
inc
mov
test
movsl
inc
xchg
ljmp
loopne
inc
mov
sbb
out
inc
in
cmp
jle
jnp
cltd
mov
or
push
cwtl
daa
mov
into
dec
cmp
dec
and
ljmp
pop
mov
js
imul
sbb
push
push
sbb
mov
out
adc
push
add
in
lcall
cwtl
mov
imul
fidivl
sti
add
xchg
loope
cmp
pop
push
stos
shl
fstp
imul
int
mov
mov
xor
jnp
je
rcrl
xor
cmc
add
lea
mov
stc
cmp
push
mov
or
sub
mov
jo
xor
loopne
add
and
mov
xor
adc
and
jo
inc
mov
aad
shl
adc
lret
in
or
xchg
enter
push
shlb
sbb
test
movsb
dec
xchg
or
test
adc
imul
imul
or
sub
cmpb
nop
pop
je
push
ret
lods
fdivr
aaa
dec
add
orl
push
push
pusha
xchg
mov
je
mov
mov
jp
inc
pop
cmp
pop
sbb
jne
pop
mov
jp
sub
jmp
stos
es
in
add
ss
in
test
push
ja
movsl
aaa
jne
cmp
lea
sub
loopw
test
rcl
lahf
cmp
xor
jnp
jl
push
andl
push
dec
pop
inc
xchg
xchg
fadds
icebp
add
test
jno
push
sarb
out
sub
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
mov
push
jno
and
aam
out
rorb
cmpl
in
pop
pop
lods
sarb
mov
adc
pop
std
cmc
sub
xchg
push
and
push
loope
pop
push
sub
add
test
mov
inc
fdivr
je
and
mov
loopne
rclb
dec
insb
push
push
push
movsl
adc
enter
sbb
cmova
or
or
or
xor
push
das
or
leave
push
mov
pusha
sub
cmpsb
ja
adc
mov
imul
inc
push
pushl
movsl
adc
stc
cmc
sub
pop
test
adc
add
or
jb
and
or
inc
mov
scas
ljmp
adc
inc
inc
pushw
mov
dec
pop
cmpsl
adc
mov
nop
cmp
adc
adc
enter
mov
adc
sub
dec
push
inc
insl
lea
es
imul
and
daa
lea
scas
mov
cmp
xor
call
pushf
push
inc
dec
cmp
mov
sub
or
dec
jp
mov
add
xchg
mov
andb
cwtl
xor
pop
inc
or
nop
sbb
fmull
sbb
fcompl
pop
xchg
je
out
push
cmp
pusha
xor
mov
xor
mov
jmp
aam
stos
jb
dec
pusha
and
lea
mov
das
sub
jecxz
pxor
in
dec
add
inc
add
and
sub
push
lret
jmp
sbb
xlat
pop
xor
and
cmp
push
int
scas
addr16
cmp
dec
in
jno
lea
lea
mov
mov
xchg
sbb
imul
mov
rclb
dec
loop
mov
cltd
add
pop
inc
dec
rolb
aam
int3
push
pop
cmp
test
and
sbb
js
movsl
mov
int
ret
cmp
loopne
cmpsl
mov
xorl
das
rol
int3
sbb
pop
fiaddl
mov
out
lods
cmp
jne
subb
adc
sbb
push
incb
and
dec
and
mov
push
cmp
aas
fnsave
mov
sub
xchg
dec
cmp
sub
pop
xor
daa
int3
push
rolb
mov
mov
or
mov
jo
stc
xlat
into
mov
cmp
outsb
and
inc
lock
cltd
out
aas
cld
arpl
popa
lret
fdivr
roll
inc
xchg
pop
push
loopne
call
lds
imul
cmp
cmpsb
paddsb
cmp
jl
jmp
sti
pushf
mov
rorb
dec
xlat
scas
sub
popf
jb
adc
mov
add
and
bound
ret
movl
rolb
adc
cwtl
cwtl
xor
in
xor
push
cs
lods
cmp
frstor
imul
imul
and
add
sbb
pop
sbbl
addr16
xchg
push
jp
scas
jmp
aad
aaa
hlt
jnp
push
and
xchg
fldt
xor
shl
mov
mov
dec
push
je
dec
jne
pusha
mov
xlat
fcoml
shlb
clc
adc
loopne
shr
and
jmp
inc
push
push
sbb
ja
sbb
inc
roll
leave
push
fimuls
fwait
imul
xorl
repz
sbb
mov
mov
sbb
mov
xchg
ret
cmp
sti
in
andl
clc
loope
test
int
shll
xor
mov
mov
lea
xor
insl
or
or
sbb
mov
je
dec
les
jmp
lea
dec
das
mov
pop
ja
xchg
ds
jmp
push
mov
or
mov
jmp
pop
js
ret
mov
jge
insl
popa
test
jno
dec
repnz
arpl
adcl
push
and
push
xor
push
push
bound
pop
cmp
mov
adcl
jge
add
jb
dec
ljmp
mov
int
ret
lahf
loopne
sub
ds
je
jp
pop
add
inc
mov
inc
sub
adc
xchg
or
or
pop
cmp
es
lock
int3
or
mov
sub
push
inc
lea
push
cltd
or
push
enter
jo
popa
int
xlat
lods
pop
mov
push
add
outsb
dec
sbb
xor
push
aaa
push
xchg
fwait
into
cld
push
pop
cmc
and
shr
and
push
je
aaa
cmp
mov
das
andl
push
sbb
jmp
push
sub
cwtl
loope
jmp
jmp
adcb
xchg
pop
sbb
dec
shr
add
push
fldl
add
pop
movsb
aaa
insb
je
xor
add
xor
inc
push
loopne
incb
inc
cmpb
xor
iret
aaa
jne
sbb
ljmp
aad
xchg
mov
popa
fidivs
mov
mov
sbb
push
outsl
adc
mov
dec
push
lock
fistl
adc
movsb
xor
dec
lret
jmp
mov
adc
add
mov
lock
xor
sub
les
xor
xor
xchg
jg
ret
cmp
mov
push
or
pop
inc
xor
outsb
faddl
push
push
and
sub
mov
adc
and
ja
mov
adc
bound
dec
pop
fsubl
dec
imul
push
mov
pop
mov
mov
xor
pusha
not
pusha
movsb
push
add
cmp
nop
sbb
and
jg
ja
jge
mov
test
divb
inc
cmp
jl
lret
test
xor
adc
sbb
dec
or
inc
ret
push
push
mov
mov
push
pop
mov
sarl
mov
add
dec
jo
enter
insb
fistl
mov
lea
rorb
popf
fcmovb
push
adc
fiaddl
jge
sub
test
or
dec
or
xor
push
mov
mov
pushf
push
pop
jae
inc
adc
stc
mov
adc
movb
xchg
or
inc
lds
loopne
fistpll
mov
cli
push
mov
cmpb
je
imul
popf
push
add
test
xchg
and
jbe
sbb
mov
adc
in
xchg
sbb
lods
dec
inc
and
cmp
adc
movsb
jns
enter
mov
mov
imul
mov
sub
mov
xchg
and
loop
xor
lret
xor
push
inc
outsb
and
jae
sub
cmpsl
int3
cmpsl
aas
sarb
cmp
imul
daa
inc
jmp
jo
add
push
add
mov
loopne
jae
sbb
mov
and
aam
inc
dec
pop
cmp
pop
aaa
lods
add
mov
pushf
sub
das
mov
push
inc
fildl
pushf
in
push
push
out
and
loopne
cmpsb
mov
inc
pop
je
mov
dec
cmpsb
pop
outsb
pop
js
imul
sbb
flds
adc
je
divl
ja
sbb
clc
aaa
push
je
incl
inc
sub
jns
aam
jno
mov
mov
adc
xor
sub
dec
and
mov
inc
or
mov
xchg
sbb
pop
lods
mov
cli
cmp
cmp
push
and
das
mov
push
lea
cli
in
sub
cmp
jae
add
pop
adc
sub
inc
inc
sbb
lods
sub
je
lock
adc
pushf
xlat
sub
mov
cmp
mov
mov
cmp
cmp
dec
and
add
out
in
test
dec
scas
jo
cs
pop
std
cmpsl
loopne
sub
mov
xor
popa
pop
cmp
hlt
inc
pop
pop
cmp
ljmp
cwtl
pop
adc
ds
jg
sbb
jne
cmp
outsl
inc
sub
cmc
test
mov
rcr
inc
fstl
nop
and
imul
cltd
push
cmp
pop
cmp
test
mov
add
or
add
je
push
add
lret
call
push
cmp
jge
cmp
movsb
mov
lahf
xchg
mov
cmp
or
cmpsb
xchg
cmp
stc
adc
lods
add
dec
and
sbb
cmp
pop
shlb
pop
and
dec
in
test
sbb
fcmovnu
inc
sub
dec
mov
mov
xchg
mov
faddl
mov
jecxz
push
sub
fwait
inc
fidivrs
dec
out
pop
pop
rorl
pop
adc
leave
xchg
adc
je
das
inc
inc
xchg
sub
add
inc
sub
cmp
adc
sub
add
adc
fistps
xor
int
add
cmp
sub
fwait
addb
inc
fxam
adc
mov
xchg
push
adc
enter
notl
pop
add
push
push
mov
pop
cld
xor
pop
test
inc
pop
mov
jo
clc
adc
push
sti
push
cmp
inc
push
loope
mov
sbb
dec
mov
imul
je
inc
pop
push
sub
inc
cmpsb
sub
shlb
shrb
add
movsl
lea
mov
pusha
mov
loope
int3
js
pop
sub
jne
movsb
xchg
xor
sub
pop
loop
or
aaa
sub
and
mov
cld
cltd
adcl
and
sahf
test
jmp
rolb
and
je
add
jmp
mov
out
nop
out
mov
sbb
adc
push
jo
xor
add
mov
mov
nop
je
out
xchg
sub
in
inc
push
mov
mov
xor
and
shrl
mov
lock
pop
xor
xchg
add
pop
pusha
adc
popa
ror
pushf
inc
aaa
stos
xor
or
dec
cmp
je
xlat
gs
sbb
mov
bound
int3
jno
pop
aad
and
stos
adc
je
mov
push
adc
cwtl
xlat
dec
and
mov
pop
imul
cwtl
movsb
imul
inc
jg
orb
push
ret
mov
add
or
sub
jnp
or
sti
stos
je
icebp
adc
jne
mov
and
mov
ja
push
adc
mov
pop
and
mov
int3
sub
lcall
or
inc
dec
dec
add
cmp
xor
xchg
dec
jmp
jmp
sub
inc
movsl
jmp
out
mov
push
adc
cmp
jge
cmp
sub
scas
mov
and
into
test
add
cmp
imul
and
pop
ds
sti
jbe
jle
or
mov
insb
lock
lea
sti
sub
sub
sub
mov
lahf
adc
jl
in
insb
jb
or
add
or
add
and
negl
shll
or
aad
jnp
mov
ljmp
mov
mov
push
xor
aas
mov
jl
mov
pop
mov
inc
repz
mov
jl
dec
sarb
lock
fldt
or
out
negb
push
xchg
or
rcrb
sbb
sub
rcr
nop
adc
xor
xlat
stos
iret
xor
ja
icebp
push
push
or
test
pop
push
jl
popa
pop
aad
inc
je
es
push
dec
pusha
out
hlt
test
aam
jb
add
inc
ret
and
dec
or
xchg
imul
subb
mov
sbb
mov
or
add
movsl
bound
add
das
pop
daa
pop
sbb
sbb
sub
push
push
popf
adc
fwait
cwtl
cmp
int
pop
repz
push
sbb
imul
sarl
push
and
loopne
xchg
adc
xlat
push
sbb
pop
push
std
inc
fnstenv
add
ret
icebp
push
xchg
push
mov
movsl
cmpsb
mov
inc
and
mov
push
shrl
jae
sub
dec
es
push
xor
jb
icebp
jno
and
adc
in
xor
or
sub
cmp
inc
loop
cmp
push
pop
mov
mov
push
mov
jo
dec
sbb
xchg
loopne
test
aas
xor
das
lds
cmpsl
jle
enter
dec
mov
int3
xor
mov
out
lea
dec
mov
mov
pop
dec
dec
in
adc
int
call
sbb
and
sub
hlt
pop
orb
and
xor
nop
or
cld
and
enter
repnz
iret
das
or
nop
dec
and
adc
ss
push
jne
inc
dec
mov
movsb
and
and
scas
inc
sub
sub
repz
push
xchg
daa
sbb
dec
sub
stos
mov
sub
push
pop
push
pop
cmpsb
popa
and
and
sub
pop
leave
sub
adc
lds
nop
and
jo
das
sbb
jb
sbb
push
fisttpl
pop
stos
mov
push
rorb
push
sbb
adcb
xchg
inc
push
xor
lods
inc
or
mov
cmp
jne
add
mov
and
jle
sbb
mov
outsb
imul
xor
lods
jns
sbb
jge
push
push
adc
movsb
or
or
inc
or
out
mov
flds
fadds
adc
inc
fiaddl
movsb
cltd
nop
sbb
sbb
bound
adc
xor
and
and
or
insl
jecxz
std
inc
or
dec
push
inc
test
repz
sbb
fwait
xor
adc
or
xor
add
inc
in
xchg
popa
nop
fiadds
dec
and
dec
adc
sahf
or
and
xor
call
sarb
and
mov
mov
push
pop
inc
sbb
xchg
iret
mov
inc
mov
mov
dec
lcall
sub
adc
sub
push
into
faddl
mov
xor
jl
lret
and
sbb
cmc
adc
xor
xor
ret
inc
cmp
add
ljmp
aaa
lock
out
mov
cmpl
jno
dec
sub
stos
shl
movsb
mov
pop
push
pop
push
xor
jbe
lods
add
sub
dec
test
adc
xor
loopne
push
call
xor
mov
and
loopne
push
push
icebp
or
fcomip
or
es
cmp
jb
popa
cwtl
out
sbb
inc
sbbl
cmp
inc
xlat
adc
hlt
sbb
jne
je
xor
into
imul
push
and
inc
ret
dec
mov
inc
mov
andb
inc
pop
dec
mov
adc
and
ja
sub
insl
push
ficompl
lds
pushl
push
dec
or
call
outsb
push
popa
dec
lods
jp
insb
cmc
lcall
outsb
bound
sbb
popa
lcall
or
fs
or
add
shrb
add
aad
lods
mov
je
push
fisubs
call
shll
inc
mov
or
push
pushl
xchg
pop
orl
cmp
outsl
dec
mov
inc
mov
daa
lds
add
ja
mov
decb
jge
inc
fmuls
push
cmpl
cmp
add
aam
sbb
pop
mov
sarl
push
sub
pop
add
or
movsl
das
les
es
repnz
es
and
xor
test
cmpl
jne
push
mov
mov
xor
mov
jge
mov
ja
mov
jne
rcr
imul
hlt
add
aaa
xchg
mov
aaa
add
rcrl
sbb
mov
push
andl
jo
push
pop
movl
sbb
sbb
jmp
adc
mov
je
sbbl
gs
sbb
addr16
jae
mov
sub
inc
ljmp
xor
popf
xor
xchg
xor
mov
imul
pop
adc
jge
mov
dec
js
jns
mov
ret
icebp
jae
jle
pop
xchg
sbb
adc
jo
mov
lea
into
mov
push
sub
bound
pusha
jl
loop
rorl
push
dec
pop
in
and
fwait
pop
cmpsb
push
dec
cwtl
pop
inc
mov
in
je
dec
xlat
adc
mov
pop
fucomi
jo
push
inc
jmp
mov
add
imul
aaa
adc
adc
xor
adc
outsb
sbb
fistl
mov
sbb
push
pop
psubw
scas
movl
sub
test
mov
jg
mov
es
add
add
jb
movsb
sbb
stos
mov
lcall
std
xorb
mov
sbb
mov
mov
enter
insb
mov
enter
aam
bswap
rorl
or
adc
inc
add
or
or
push
add
aas
and
or
push
lds
flds
or
cmpsl
add
xchg
cmp
jp
and
sahf
add
or
adc
add
lret
enter
and
sbb
dec
fsub
cmp
jle
ret
cld
jae
inc
add
outsb
mov
ficomps
or
sbb
stos
clc
ret
xor
add
sbb
cmpb
sbb
jmp
icebp
loopne
loope
loopne
mov
out
dec
roll
mov
lret
jp
cltd
add
sub
push
shr
out
int3
orb
adc
lods
and
int
cmp
icebp
dec
sub
sub
icebp
repnz
and
inc
xchg
xchg
cmovo
dec
sub
rcrl
push
cmp
out
rcrb
das
call
xor
movsl
into
aam
ds
imul
sbb
sbb
mov
dec
lret
lar
enter
add
shrb
add
out
in
add
add
inc
popa
inc
mov
sub
mov
jp
push
add
ffree
lret
int
orb
dec
lret
leave
leave
in
cmp
or
push
pusha
and
pop
or
ficomps
or
inc
ret
insb
inc
lods
and
sti
repnz
add
push
xor
or
xor
xor
push
pop
rolb
adc
and
dec
or
andl
xor
cmp
and
mov
xor
or
dec
in
and
adc
or
and
test
pcmpeqd
add
cld
add
dec
sbb
inc
dec
subl
xor
sbb
dec
rorb
mov
call
movb
das
jb
xor
inc
mov
xor
mov
dec
stc
dec
ret
xor
movsb
xchg
lea
sti
out
xor
inc
test
mov
stos
inc
inc
mov
enter
xor
adc
sbb
adc
inc
lea
adcl
ja
or
xor
and
popf
adc
pop
inc
scas
or
testl
push
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
xor
add
adc
int3
xor
lds
fs
icebp
popf
mov
das
mov
loop
mov
dec
loop
mov
fs
les
and
push
push
dec
push
in
je
lea
pop
sub
jnp
push
push
xor
mov
xor
cwtl
sbb
push
daa
mov
sbb
out
aad
xchg
inc
je
sahf
incl
push
xor
sahf
shlb
cwtl
push
fdivr
ret
addr16
inc
sbb
xor
xchg
rorl
loop
inc
shrl
push
cmp
loope
adc
adc
or
xorl
push
rcrl
loopne
loopne
xchg
pop
dec
pop
push
sub
xor
sbb
inc
test
cmp
dec
and
jmp
jecxz
je
adcl
xor
dec
inc
add
jmp
adc
push
aad
aas
loop
adc
repnz
dec
aas
inc
std
or
or
xor
data16
scas
sbb
aas
inc
cmp
mov
fisttpll
rclb
mov
test
fidivrs
xor
hlt
sbb
fistpll
cmp
mov
sub
hlt
xor
les
repnz
in
adc
test
rcrb
or
insl
lea
push
and
or
ss
enter
push
imul
cmpb
add
adc
inc
repnz
add
shrl
push
lcall
adc
mov
dec
adc
push
push
lahf
add
xor
adc
add
or
push
lret
roll
repz
adc
pop
cmpsl
sbb
adc
inc
add
adc
mov
jp
xor
fs
pop
clc
adc
test
dec
je
insb
gs
cwtl
cli
cmp
addl
lcall
push
cmp
sbb
inc
cmp
push
sbb
call
jae
add
cmp
repz
mov
icebp
push
add
xor
add
add
lods
adc
add
inc
imul
test
out
and
incb
fstps
mov
fnstenv
ss
ss
sub
adc
sub
and
mov
or
push
movl
cwtl
or
push
sbb
jo
cmc
and
je
je
movsb
arpl
call
rorb
nop
push
push
movb
int
je
lods
mov
push
sbb
aas
sbb
jmp
jne
fiadds
and
add
in
loope
sbb
mov
dec
or
fisttpl
mov
aas
or
push
push
and
sbb
mov
jmp
mov
cmp
and
insb
pushf
sub
jo
mov
fdivl
dec
push
and
jb
sub
jns
cmp
mov
pop
pop
clc
loop
pop
dec
dec
fildl
imul
dec
add
imul
add
cmp
fs
push
jnp
daa
mov
push
notl
lret
xlat
push
stc
mov
pop
hlt
repnz
sbb
mov
daa
lock
jns
cli
lock
sbb
roll
push
mov
and
je
dec
xor
and
rorb
add
jae
xchg
mov
jns
mov
aaa
xchg
cld
addb
or
mov
mov
mov
mov
fists
adc
jbe
rorl
lds
or
cmp
jae
pop
add
roll
push
xor
addb
adc
roll
or
dec
adc
mov
xchg
cmc
adc
test
mov
mov
popa
sbb
pusha
ret
inc
mov
or
in
xor
mov
mov
mov
jge
sbb
or
cmpb
or
sbb
push
pop
or
in
mov
mov
jo
sbb
andl
adc
mov
adc
lea
sub
jno
xor
xor
add
cwtl
mov
rolb
sub
push
out
popa
insl
mov
inc
jmp
push
mov
jb
ret
sbb
sbb
adc
loope
cwtl
nop
popl
cli
or
test
es
dec
movsl
jne
ret
push
inc
and
sub
push
push
adc
inc
lock
ljmp
inc
add
pop
xor
sub
mov
in
sahf
adc
push
adc
enter
decl
lods
dec
jne
xchg
push
cmp
mov
jne
movsbw
fcom
sbb
ds
jno
jne
out
mov
or
je
adc
fwait
jne
rorl
push
arpl
sub
adc
xlat
icebp
cmp
mov
hlt
push
inc
xor
sbb
inc
mov
clc
loopne
cmp
adc
mov
imul
push
je
lret
call
adc
jo
sbb
xorb
sub
movsl
xchg
mov
xor
xor
lret
call
jle
in
add
cmpsl
ja
lea
dec
es
insb
dec
lods
repnz
mov
xlat
xor
xchg
xor
test
pop
dec
cmp
mov
test
push
cs
push
daa
in
js
gs
scas
shrb
rcrl
push
sub
in
jno
xchg
dec
sbb
gs
lock
xchg
xor
inc
or
lcall
and
push
inc
lods
test
cwtl
pop
push
neg
loope
jge
dec
push
sti
sub
js
out
or
imul
add
xchg
pushl
push
pop
mov
inc
xlat
mov
ret
and
aad
sbb
das
lods
pop
aad
or
lods
cmpsl
iret
dec
pop
and
arpl
imul
sub
jl
sbb
xchg
call
or
xor
sbb
xor
pop
xchg
mov
push
dec
and
xor
pop
cmc
add
mov
daa
imull
fs
scas
pushf
mov
je
cmp
xchg
das
push
loope
push
lahf
sbb
mov
mov
and
mov
out
adc
adc
hlt
xor
and
jecxz
shll
inc
push
movsb
mov
pop
ljmp
jo
adc
cmc
cwtl
sub
mov
stos
jo
stos
wbinvd
repz
inc
jae
cld
sbb
arpl
in
clc
cmp
mov
jns
jecxz
sub
adc
push
push
cld
jae
inc
call
in
movsl
cmp
cmpsb
mov
push
xor
mov
add
out
push
in
les
add
test
movb
dec
pop
clc
jbe
loop
inc
jle
mov
add
movl
loope
mov
test
hlt
mov
gs
mov
xor
les
inc
das
dec
add
and
nop
pop
pop
adcb
clc
or
pusha
push
fcmovne
or
fadds
test
inc
and
cmp
adc
icebp
or
and
jno
xchg
icebp
fld
adc
adc
addl
push
dec
ret
jp
movl
and
inc
dec
inc
addb
test
inc
pop
je
cmp
cltd
pop
cmp
into
int3
sbb
fs
push
add
pop
cmp
push
mov
sub
add
inc
in
into
mov
xor
sbb
cmp
ss
jge
add
dec
loope
in
in
adc
add
loopne
ret
inc
mov
add
add
rorl
adc
adc
and
push
push
and
mov
hlt
and
dec
pop
sub
sub
dec
and
je
mov
clc
push
add
push
push
push
push
popa
in
repnz
int
ret
aam
jo
lcall
add
xchg
mov
nop
call
sub
jg
popa
fs
jne
inc
adc
add
mov
movsl
mov
cmpsb
xchg
les
xchg
xchg
xorb
dec
push
daa
jo
jno
ficompl
mov
or
dec
inc
xor
mov
adc
test
dec
xchg
nop
push
mov
loopnew
repz
nop
inc
jmp
and
pop
sbb
sub
pop
mov
push
pop
push
sub
push
inc
or
cmp
inc
pop
cmp
movsl
das
pushf
imulb
data16
pushf
jmp
push
inc
cwtl
lcall
cmp
mov
cmp
gs
enter
sbb
mov
cld
mov
dec
fnstsw
mov
imul
xchg
or
pushf
cmp
jle
cmp
js
mov
test
xorl
pop
xchg
inc
out
loope
jbe
loopne
ret
popf
enter
adc
inc
je
cmpl
cmpsl
and
mov
inc
mov
add
adc
arpl
and
cmp
ljmp
pop
pushl
and
push
test
and
sarl
mov
pusha
xorl
sub
push
in
sbb
test
cltd
and
addr16
imul
enter
push
addr16
jo
pop
pop
xor
xchg
inc
mov
sub
jae
and
jbe
divl
cmc
cltd
xchg
push
sarl
push
mov
rorb
adc
mov
rcrb
adc
imul
orl
push
cli
pop
push
shll
lret
cmp
lock
jb
xchg
fisttpl
pusha
insb
inc
jne
sbb
jo
or
jnp
add
xor
mov
bound
push
push
cmp
and
add
loopne
cmp
fsubp
lea
inc
loop
and
mov
and
xchg
dec
adc
xor
icebp
push
loopne
jg
xor
xchg
or
scas
and
add
in
xchg
insb
fmull
mov
add
adc
and
dec
rcrl
sbb
mov
addb
jmp
les
lea
pop
ds
popa
cmc
orl
sub
cmp
pop
dec
xor
les
add
mov
jge
mov
int3
mov
jb
pop
sahf
ret
cmp
adc
loopne
nop
hlt
jae
leave
sbb
in
shlb
inc
pusha
negl
pop
dec
pop
clc
jmp
cmp
pusha
dec
inc
shlb
ljmp
add
cmp
je
fiadds
int3
pop
push
fcoml
in
mov
stos
or
scas
mov
dec
aaa
je
enter
test
gs
and
mov
add
push
ret
xchg
dec
push
adc
dec
test
dec
add
jbe
test
cmp
je
sbb
sbb
dec
adc
adc
xchg
sbb
or
dec
and
push
sbb
mov
and
jge
or
xor
loope
jg
cmp
sub
pusha
adc
mov
cmpsb
inc
nop
lret
test
pop
jl
pop
dec
pop
jne
mov
or
cmp
testl
in
mov
cmp
rcll
into
imul
nop
lea
push
dec
lahf
adc
push
pop
orl
dec
xor
push
lea
push
loopne
mov
mov
push
test
int
xor
or
and
cltd
mov
fldcw
fs
pop
xchg
movsb
inc
mov
xor
jo
or
sbb
mov
pop
adc
mov
xchg
mov
std
scas
and
stc
jle
add
cmpw
sbb
cmpb
shrl
push
add
fistpl
movsl
ss
push
pop
mov
add
shrb
cmpsb
push
je
pop
rcrb
enter
inc
cmp
mov
pusha
loopne
je
addr16
jae
xchg
pop
jge
push
push
add
in
xchg
inc
mov
loope
jb
pusha
jne
add
loope
dec
dec
push
sub
fistpl
add
jl
sub
jmp
mov
sbb
dec
jp
pushl
pop
add
pop
or
sbb
cli
jecxz
inc
and
or
sbb
cmp
adcb
add
sahf
js
add
scas
mov
lea
andl
aad
sub
mov
gs
push
icebp
aad
and
sysret
adc
mov
test
lea
push
bound
std
cmp
jne
jb
fs
push
ret
shll
ljmp
shl
dec
pop
push
pop
push
dec
xor
xor
add
mov
lock
and
leave
dec
jle
test
loope
jne
insl
pop
adc
cmp
sbb
in
sub
movsb
dec
push
sub
push
imul
icebp
jo
bound
sub
or
add
inc
mov
mov
add
or
gs
add
insl
movsl
push
mov
fimull
adc
xor
ret
mov
stos
test
mov
aad
mov
sbbl
push
test
addl
orl
addl
cmp
and
mov
rorl
mov
mov
stc
inc
lcall
mov
push
push
push
sbb
xchg
cmp
popf
add
mov
mov
jmp
test
lock
js
and
and
and
enter
and
mov
jmp
or
enter
int
stc
and
sbb
cmp
sub
push
divb
jne
cld
and
and
mov
sar
pop
sbb
push
sbb
jl
push
cmpl
dec
scas
adc
pop
je
or
cmpsl
adcl
add
mov
orb
mov
dec
jecxz
and
pop
mov
mov
mov
int
jl
pop
rcl
jne
iret
cmc
dec
push
ss
hlt
call
sbb
mov
pop
add
sbb
mov
dec
pop
jne
adc
nop
push
pop
es
inc
xchg
leave
ss
push
sub
in
orl
mov
push
and
pop
or
cld
decl
mov
lods
and
sub
cmpsb
xor
sub
call
fstpl
and
mov
sbb
in
mov
leave
aaa
pusha
loopne
idiv
es
mov
icebp
in
and
dec
jmp
mov
add
xchg
mov
cmpsb
xchg
cld
mov
sbb
js
lock
dec
adc
ss
nop
mov
stc
enter
and
adc
jle
ret
test
dec
and
sub
inc
and
jge
sbb
cmp
mov
enter
fcoml
in
add
xor
xlat
test
dec
inc
ret
sub
inc
inc
das
das
and
test
cld
nop
and
mov
in
pop
mov
jae
sub
cmp
stos
outsb
sub
mov
rclb
aaa
jg
cmp
mov
pop
jmp
adc
in
sub
pop
push
and
iret
jo
inc
jmp
adc
pop
in
mov
push
test
fucomip
inc
les
test
pop
in
adc
push
or
mov
inc
push
adc
pusha
andl
rorl
xchg
inc
add
js
dec
xchg
cwtl
xchg
xor
bnd
mov
add
dec
sbb
mov
or
mov
repnz
mov
dec
lahf
stos
pop
aaa
adc
inc
jno
lods
inc
mov
push
sbb
xor
orl
add
inc
push
mov
dec
clc
data16
pop
pop
push
dec
sub
push
or
push
and
data16
adc
outsb
xor
iret
dec
inc
inc
jmp
mov
sbb
pop
sub
and
mov
push
add
sub
inc
inc
dec
jnp
pop
in
jne
mov
dec
aaa
repz
add
push
call
sbb
and
jne
sub
xchg
sbb
loop
imul
ret
xchg
push
ret
icebp
mov
mov
and
rcrl
xor
mov
inc
fimuls
popa
pop
call
pop
pop
sub
lods
pop
movsb
xor
adc
fwait
xor
add
or
add
xor
pusha
sarl
mov
aaa
lret
in
jmp
inc
int3
into
rorb
and
inc
sbb
push
and
and
enter
or
daa
call
and
mov
adc
mov
pusha
clc
repnz
jge
pop
movsl
inc
inc
fists
mov
shl
push
notl
rcl
sbb
cmpb
pop
aas
outsl
imul
or
aas
cs
or
enter
enter
inc
aad
pop
inc
movsl
cmp
and
lahf
movsl
rolb
cmpb
mov
sbb
lods
fsts
mov
push
cmp
push
add
xor
rcll
pop
or
add
and
pop
jae
call
out
jmp
add
xor
and
icebp
lea
popa
arpl
cmpsl
cwtl
sarb
pop
pop
outsl
xor
xorl
pusha
bound
push
jne
cmp
adc
inc
das
jae
mov
adc
or
ja
das
pop
fsub
dec
xor
outsb
clc
push
xor
pop
sbb
adc
lods
lahf
mov
shll
test
lock
or
sub
rclb
sub
mov
lods
push
sub
mov
push
push
iret
ret
pop
repz
mov
pop
stos
sti
cs
lods
adc
daa
adc
adc
clc
adc
push
jne
mov
and
push
lods
mov
sbb
cmp
jmp
push
jg
lods
aaa
test
cmp
out
pop
push
subb
or
les
mov
sbb
out
adc
or
pop
xor
fcoml
fldenv
jo
mov
jle
idivl
scas
clc
xor
sbb
xor
and
sar
por
cmp
jne
xor
rorl
or
out
scas
jmp
ss
mov
test
stos
pusha
dec
or
stos
inc
cwtl
call
add
outsl
imul
xor
and
in
shll
scas
in
push
movsb
icebp
mov
test
push
jmp
sbb
fisubrl
test
in
adc
and
pop
or
rcll
xchg
adc
pop
dec
shrl
loope
xchg
divb
pop
sub
cmp
or
fnsave
cs
cld
jmp
dec
jp
fs
or
ja
adc
inc
xchg
or
pusha
rol
clc
pushf
inc
pop
roll
pop
or
pop
test
and
sbb
pushl
es
xchg
rorl
adc
lods
adc
rcll
int3
movsb
adc
dec
adc
out
dec
sub
in
mov
ret
add
inc
ret
lea
lea
and
repnz
jbe
push
in
cld
fildl
das
cmp
ja
flds
fcomp
or
nop
jge
adc
sbb
test
sbb
sbb
jae
xchg
adc
xchg
pusha
dec
insl
inc
pop
addr16
push
invd
mov
mov
ret
repnz
clc
or
dec
push
sbb
cmp
arpl
test
lcall
clc
mov
dec
or
fcoms
sbb
push
cmp
adc
and
nop
lret
or
cmp
cmp
adc
push
and
insl
cmp
sub
jmp
fsubrl
cwtl
sub
jle
mov
add
add
xchg
mov
je
inc
sarb
je
or
aad
xchg
and
sub
daa
test
xor
pop
inc
loopne
inc
idivl
add
js
jae
jb
sbb
je
push
xor
or
pop
ret
push
mov
out
shl
leave
cmp
xorl
mov
pop
pop
repnz
push
and
mov
hlt
pop
out
or
ficoml
popf
or
sbb
mov
dec
add
xor
jo
xor
mov
sub
jmp
aas
movsb
inc
add
jecxz
or
pusha
and
add
push
mov
and
pusha
cmp
push
mov
xor
adc
outsb
in
add
inc
les
lock
xor
cmp
ss
inc
les
cmp
mov
or
sub
add
cmp
mov
xchg
ret
and
mov
push
mov
jg
cwtl
add
adc
or
jo
cmp
outsl
cltd
and
dec
adc
fnsetpm(287
rcr
rclb
adc
mov
fadd
arpl
popa
aad
outsl
addr16
pop
popf
les
and
jmp
mov
adc
cmp
inc
test
int3
sbb
adc
and
and
je
jae
adc
sbb
mov
and
clc
xchg
mov
nop
out
sbbl
rcrl
sbb
imul
sub
add
pop
pop
and
sahf
mov
pop
pop
dec
xchg
lds
addr16
cmp
push
ficoms
repz
adcl
and
inc
movsb
sbb
aam
cwtl
fldt
push
lahf
mov
mov
fldcw
gs
push
lods
andl
xor
pop
mov
and
fwait
mov
and
cmp
aam
pop
es
lock
ss
pop
inc
mov
lock
jnp
dec
and
loop
xchg
cmpb
movsb
inc
adc
ret
imul
mov
push
and
loop
jns
add
adc
sub
jne
popf
cld
icebp
mov
mov
stos
in
mov
and
js
out
ficoms
sub
jnp
mov
push
jmp
mov
cld
ret
cmp
js
pusha
sub
mov
or
aas
les
clc
rcrb
sub
jmp
pusha
inc
mov
flds
and
jb
popa
test
psubusb
xor
push
ds
sbb
pop
adc
mov
sub
cwtl
movsb
fptan
ds
and
std
out
push
out
xchg
mov
and
or
xchg
push
push
xchg
ljmp
xor
insb
das
fisttpll
lret
jne
daa
push
dec
or
inc
fsts
mov
adc
test
dec
and
mov
add
add
and
add
push
fwait
aad
arpl
orl
sub
ljmp
popf
sub
mov
imul
mov
cmp
dec
loop
fcoml
jns
cmp
and
sbb
and
nop
sbb
and
or
fbld
pop
gs
pop
dec
decb
push
mov
or
mov
mov
sbb
add
adc
test
test
xchg
aam
notl
and
pop
lcall
sub
inc
aam
sbb
fsts
jae
mov
inc
inc
test
add
jno
mov
cmp
push
mov
mov
fsubl
jecxz
inc
add
ss
and
push
push
xlat
or
in
ljmp
loope
lea
adc
xor
std
push
loopne
inc
mov
andb
roll
and
add
movzwl
add
push
lock
pop
pop
sbb
pusha
pop
movsb
cmpsl
mov
aad
test
inc
sbb
sbb
xor
sub
sbb
sub
push
in
mov
lods
jns
sub
daa
test
clc
pminub
mov
adc
fcmovnb
call
jo
mov
loopne
cltd
push
pop
jb
xchg
mov
xor
in
addr16
cmpsl
nop
dec
mov
or
xor
pop
bound
add
imul
push
or
jae
lock
push
test
pusha
sub
movsl
fcompl
jbe
imul
xlat
sbb
decl
mov
nop
xor
jmp
add
fidivs
sbb
sbb
rcl
jns
adc
in
adc
or
xchg
pop
inc
push
jle
pop
inc
jp
add
in
icebp
mov
inc
loop
push
movsl
es
sub
adc
dec
popa
sbb
and
aas
pop
lcall
sub
inc
clc
inc
sub
cmpsl
push
mov
pushf
push
pop
adc
cmp
mov
mov
xchg
sbb
mov
dec
mov
pop
and
pushf
pop
add
fimuls
push
and
or
ret
jecxz
addb
arpl
adc
pop
jae
out
xchg
xor
testl
push
xchg
test
mov
cmpb
cmp
cmpb
inc
jmp
push
out
and
iret
and
in
sbb
pop
push
outsl
dec
dec
add
and
adc
and
aaa
pop
iret
nop
push
jno
add
movsb
sub
adc
adc
xchg
cli
adc
add
sub
mov
je
sub
scas
jns
das
icebp
das
sbb
xchg
sbb
pop
sbb
and
mov
push
mov
fisubs
xor
inc
sub
in
dec
dec
ds
xor
jno
fs
jecxz
mov
out
rolb
inc
outsl
push
pop
dec
cmp
pop
cmp
inc
scas
and
aaa
mov
aaa
or
rcrl
add
xchg
sub
xchg
add
xor
adc
adc
add
ljmp
roll
mov
jns
xchg
dec
dec
inc
jge
mov
push
push
dec
sbb
rolb
sbb
int
cmp
pop
dec
ss
push
ja
shl
mov
in
lock
pop
pop
int3
jmp
and
sbb
sbb
pop
test
xchg
pop
jne
mov
adc
and
push
or
ret
adcb
repnz
adc
or
adc
fsubrs
dec
inc
sbb
fwait
push
mov
add
pop
push
or
push
mov
dec
mov
loope
push
pop
mov
mov
int
clc
pop
add
das
inc
mov
sub
nop
or
jns
push
pop
mov
push
mov
mov
sarb
add
sbb
fisttps
lds
inc
cmp
pop
mov
scas
int
and
dec
pop
fs
jp
sub
and
jne
lods
jp
aas
jmp
push
imul
xor
mov
pop
fcomps
adc
mov
cmp
adc
xchg
dec
dec
mov
das
and
push
adc
adc
and
ret
pushf
or
inc
xchg
add
test
inc
or
sub
out
orl
add
mov
rclb
or
add
push
int3
push
cmp
cmp
jne
mov
icebp
push
sbb
movl
icebp
mov
add
and
or
test
ret
jmp
dec
pop
and
pop
jne
inc
pavgw
loope
mov
shlb
std
je
sbb
adc
adc
in
cwtl
cmpb
push
xorl
adc
mov
mov
add
pusha
lea
adc
adc
push
push
jl
or
fucomi
sbb
sub
sbb
pusha
sbb
lahf
and
mov
sub
inc
jmp
jecxz
sub
inc
sbb
push
sarl
sub
sub
fsubl
xor
or
leave
fisttpll
mov
cvttps2pi
mov
test
push
pop
mov
arpl
push
adc
int3
rcr
and
add
popa
sub
pop
mov
ffree
push
mov
cmp
test
xor
mov
out
aas
test
dec
int3
sub
cmc
sarl
into
push
scas
add
pusha
fdivs
xchg
mov
and
enter
xchg
adcb
mov
xor
arpl
stos
aad
or
mov
add
push
jle
xchg
das
fcomps
sbb
adc
cs
pop
shl
sub
add
jg
push
stos
and
mov
pop
pop
out
add
es
mov
in
adc
or
in
sub
pmulhw
sbb
push
je
or
mul
push
pop
mov
popa
pop
sarb
ret
bound
inc
add
xorb
mov
jmp
sarb
or
push
mov
sub
xchg
or
or
ret
addr16
test
push
pop
push
push
xchg
add
mov
mov
pop
pop
sub
push
push
fabs
je
pop
out
fnstcw
push
xchg
sahf
inc
sbbb
adc
outsb
xchg
test
repnz
jcxz
mov
loop
scas
push
cmpsb
es
mov
or
cmp
adc
mov
mov
push
std
jb
mov
inc
cli
ret
aas
in
sub
cmp
setp
lea
mov
je
mov
xor
pop
jmp
sbb
adc
add
mov
call
roll
xchg
adc
loop
aaa
fldcw
jecxz
xor
popa
add
sub
insl
jne
xor
sbb
enter
loope
in
pop
xor
iret
push
add
adc
sub
lea
push
mov
inc
test
adcl
adc
insb
xchg
and
push
add
add
cs
hlt
or
push
pop
dec
add
mov
jno
loope
in
push
mov
sub
pop
nop
jo
lods
xor
mov
mov
cmpsb
bound
ret
adc
push
mov
cmpsl
pop
or
subl
mov
mov
inc
fwait
mov
xchg
sub
fisubs
movsl
frstor
lret
and
repz
pop
subl
inc
pop
adc
aad
or
add
push
js
pusha
test
xor
xor
push
cmp
xchg
xchg
mov
gs
loop
mov
pop
xor
add
mov
pop
arpl
jae
mov
push
add
icebp
hlt
rol
call
out
inc
adc
dec
push
sahf
faddp
add
pop
in
adc
jne
shll
or
adc
repnz
clc
mov
fwait
push
loope
pop
imul
lcall
push
cmpb
mov
adc
xchg
aam
bnd
shlb
inc
mov
test
dec
incb
movl
inc
adc
adc
or
add
aam
stos
inc
adc
fldz
and
add
mov
lcall
add
sub
pop
xor
add
imul
pop
movsb
push
cmp
xchg
insl
xchg
idivb
xchg
inc
test
or
dec
dec
push
lea
push
mov
dec
adc
mov
addr16
inc
sub
mov
push
mov
xor
mov
loop
jnp
nop
pusha
or
mov
rorb
fisttpll
mov
mov
lret
sub
mov
or
lea
fsubs
adc
push
movsl
mov
sbb
call
adc
ret
pop
jecxz
pop
mov
int3
sbb
jge
bound
loopne
mov
testb
faddl
cmpl
push
sub
fstps
and
adc
cmp
push
cmp
jle
clc
stc
out
cmp
jp
push
cmp
cmp
inc
add
clc
divl
add
inc
jmp
into
push
data16
fadd
sub
mov
repnz
mov
bound
inc
or
fs
pop
divl
jne
mov
lock
inc
mov
dec
mov
lock
adc
or
mov
sub
dec
mov
jnp
inc
xchg
fcmovb
stos
orb
add
fnstcw
push
sbb
jbe
push
hlt
mov
cltd
push
push
repz
mov
popa
jmp
push
data16
xchg
mov
xor
xorl
shll
dec
cli
fwait
outsl
mov
add
sbb
pushf
push
dec
sahf
and
adc
xchg
sub
sets
and
daa
int
cmp
sbb
push
sbb
call
ds
out
adcb
mov
xchg
lret
add
or
enter
iret
xor
xchg
xor
and
pop
aas
or
mov
ret
aaa
shll
xlat
les
cs
add
insl
or
xchg
inc
jb
or
or
mov
insl
add
xchg
cmp
add
push
rol
add
xchg
insl
or
add
pushf
and
pop
lcall
mov
jl
pop
adc
adc
fwait
add
sub
sbb
push
or
xor
adc
out
push
mov
in
mov
push
in
adc
add
or
sbb
mov
pusha
cmpsb
jno
aas
and
xchg
pusha
shr
or
add
mov
leave
xchg
pop
or
add
xor
xchg
jns
push
inc
adc
mov
cmpsl
dec
mov
leave
mov
sub
lock
sbb
push
and
sbb
fdivrs
and
sbb
sub
sub
sbbl
test
push
inc
ss
les
stc
xchg
or
in
pop
dec
mov
or
adc
outsb
and
leave
adc
push
fstl
cs
push
pop
adcl
ljmp
movsb
test
aad
xor
adc
sbb
pop
mov
cmpsl
std
jo
push
cmp
stos
test
or
xchg
repz
add
cmpsl
dec
aas
push
and
inc
push
cmp
nop
addb
add
adc
jmp
mov
dec
lea
daa
adc
orb
jb
int3
aas
pop
add
jmp
push
sbb
inc
add
adc
lea
xchg
mov
loopne
lock
sub
mov
add
in
lods
inc
daa
shr
push
dec
jecxz
fwait
and
push
jge
lret
dec
mov
pusha
or
push
jo
pop
or
stos
fwait
loope
sbb
and
mov
add
rclb
dec
jle
inc
push
mov
push
add
sub
jmp
out
adc
nop
inc
jo
inc
add
xchg
icebp
enter
or
add
aaa
je
adc
or
sbb
and
add
cmp
cli
xor
push
pop
leave
cmpsl
inc
fs
cltd
test
lock
aas
mov
sbb
loopne
inc
cmpsl
cmpsl
in
add
sbbl
xchg
or
add
shrb
add
mov
lock
cmc
or
add
xchg
sbb
or
fiadds
or
mov
in
adc
pop
aad
nop
icebp
lods
jne
xor
ret
add
inc
jl
rclb
lea
adc
outsl
test
shl
jle
add
sbb
sub
push
add
sbb
or
cmpsl
in
and
adc
sbb
jbe
and
push
nop
inc
sar
jb
test
inc
pop
and
outsl
insl
orb
jae
adc
stos
imul
or
push
push
lret
xchg
adc
pop
xchg
dec
add
sbb
mov
insb
addr16
popa
mov
cmp
jne
stc
push
aad
je
mov
ret
jno
insb
xchg
popa
xchg
mov
mov
fsts
add
xlat
in
pop
fldt
cltd
orb
lock
cmpsb
fildl
cwtl
lock
cmp
xor
add
sbb
jne
dec
xorl
adc
jg
stc
add
xor
add
jl
mov
cmpsb
add
test
leave
test
fdivrs
adc
sbbl
and
test
pop
pusha
xor
pop
push
mov
push
and
pop
pop
and
dec
insl
xchg
add
and
adc
adc
pop
shlb
mov
lock
xchg
mov
mov
insl
add
jo
ret
mov
xor
jecxz
add
addb
adc
sub
xchg
xchg
testl
sub
cltd
mov
jle
inc
pop
mov
mov
inc
inc
push
jbe
add
push
xor
jbe
aaa
je
mov
out
mov
shl
mov
mov
push
push
sub
sub
fisttpll
xchg
mov
pop
call
fnsave
and
lcall
test
je
sbb
nop
mov
xchg
lock
pmuludq
push
sbb
dec
fimuls
mov
and
and
test
fstpl
pop
jns
lods
mov
jo
pop
or
adc
mov
fsub
pop
fsubrp
arpl
pop
or
dec
or
sub
pop
mov
mov
inc
aaa
dec
inc
fdivrl
enter
fdiv
scas
mov
inc
out
mov
inc
jl
gs
dec
rolb
adc
sub
shll
loopne
mov
xchg
dec
xchg
jns
stc
addb
jge
sub
add
add
fidivs
out
shrb
adc
sti
pop
xor
icebp
and
push
aad
xchg
enter
fiadds
fs
or
sub
andl
ret
ja
loopne
mov
aaa
dec
push
fiadds
push
jo
and
push
jge
xor
dec
shlb
sbb
cmpsl
setbe
mov
clc
test
insb
mov
xor
mov
ss
call
sub
adc
xor
clc
add
push
xchg
scas
push
dec
jg
mov
lock
stos
xor
shld
add
call
jb
ja
lea
fyl2x
cmp
push
push
and
popa
xor
or
or
por
or
push
mov
push
adc
push
and
cmp
or
or
jo
mov
cli
adc
push
mov
insb
test
pop
pop
adcb
add
push
push
mov
lahf
insb
dec
inc
es
push
mov
loopne
push
ja
push
sti
adc
sti
leave
push
and
ja
push
adc
fwait
call
stos
xor
mov
jle
mov
pop
sub
dec
inc
cmpw
jne
sarb
mov
inc
cld
cmp
out
cmp
push
jge
mov
mov
lea
cmp
or
sbb
out
data16
mov
insb
dec
push
xchg
sbb
and
aad
dec
add
jo
ret
movsb
push
movsl
and
push
nop
add
add
or
adcb
push
fdivl
pop
mov
adc
in
icebp
sbb
sbb
or
and
sbb
adc
adc
jle
push
cmp
mov
or
lock
mov
jnp
push
fwait
cli
push
test
inc
lods
dec
add
dec
pusha
pop
xchg
add
mov
push
pop
or
movsl
dec
inc
inc
add
ja
or
push
mov
data16
shll
mov
pop
movsl
push
inc
pop
sub
jbe
adc
cmc
sub
insl
imul
stc
adc
std
test
xlat
push
ja
fdivrs
lock
xor
lret
or
addr16
out
loopne
out
push
mov
xchg
add
arpl
ss
insl
and
dec
xchg
xchg
int3
xor
gs
mov
or
out
or
pop
xchg
and
push
mov
pop
push
sti
pop
test
dec
roll
movsl
sbb
cmp
aas
xchg
and
add
loopne
cwtl
push
xchg
sti
xchg
xchg
push
pop
je
jmp
jno
stc
ficomps
pop
add
mov
push
ss
push
mov
pop
cmp
inc
pop
lods
dec
fbld
or
or
rcll
pop
in
cwtl
jmp
push
test
push
inc
popa
call
pop
movsl
inc
xor
push
or
add
sbb
or
add
filds
xchg
pop
or
push
adc
cs
pop
add
ljmp
inc
std
lock
or
or
cmp
mov
push
enter
and
sbb
add
push
cltd
je
inc
popa
jge
fldlg2
lcall
fildl
inc
push
or
outsb
push
push
sbb
or
mov
jo
dec
adc
pop
mov
mov
adc
sub
inc
dec
add
dec
loopne
jbe
les
je
pop
jnp
dec
add
mov
cmp
or
in
adc
test
ja
cmpsb
mov
cmp
xchg
pop
xchg
dec
ja
adc
inc
insb
jno
jge
xlat
xor
and
and
xor
pop
add
mov
fs
or
pusha
push
fwait
cmpsb
std
fisttpl
ss
je
add
sbb
dec
ja
popa
ljmp
jmp
or
xchg
add
xchg
jmp
or
rclb
rclb
subb
dec
push
lods
jmp
test
out
sub
jge
or
jmp
or
jmp
ja
out
out
outsl
cld
jmp
or
jmp
aaa
nop
jmp
mov
hlt
lea
mov
lret
test
push
push
cmp
pop
jmp
and
xchg
dec
insb
mov
jb
mov
dec
add
cmp
nop
sub
nop
les
inc
aam
pop
push
push
rcrb
hlt
dec
sbb
and
adc
enter
mov
push
cmp
xor
cmp
je
mov
sbb
nop
shl
dec
adc
sbb
enter
mov
and
cmp
push
in
cs
lahf
push
js
adc
sbb
jns
or
push
daa
push
xor
inc
dec
jns
out
pop
arpl
and
xchg
lahf
test
sahf
fucom
icebp
sti
push
add
cmp
and
iret
repz
push
pop
imul
xchg
iret
repz
ret
int
jmp
pop
dec
xchg
loope
es
nop
jp
insb
stos
dec
jne
lret
push
cmp
sub
repz
ret
les
mov
adc
adc
adc
push
movsb
xor
adc
jo
xchg
mov
divl
int
shll
add
and
xorl
cmp
mov
and
fwait
jmp
imul
jo
pusha
lods
xor
roll
lock
call
inc
mov
push
jg
mov
push
lahf
jmp
add
out
fcompl
cmp
cmp
sbb
nop
faddl
aam
mov
fisttpll
mov
fsubl
mov
mov
pushf
inc
push
sub
sbb
and
mov
nop
mov
dec
sub
xchg
and
push
dec
test
xchg
cs
or
and
add
xchg
fs
testl
cmpsl
std
int3
mov
xor
push
cmpb
jge
ja
cld
pop
push
cmp
and
lock
jge
push
push
add
cmpsl
push
fiaddl
pop
and
xchg
lahf
aam
pop
imul
dec
fdivrs
jg
or
add
ja
or
rclb
push
sub
mov
mov
sub
insb
sbb
gs
push
xchg
xchg
dec
xchg
enter
or
sbb
ret
test
fadds
shrb
enter
sub
adc
lcall
lds
and
decl
sub
pop
lret
sbb
popf
and
jmp
sti
add
adc
or
mov
xlat
ficoml
pop
jp
pop
lret
test
fmuls
lahf
and
or
daa
add
xor
mov
movsl
rcrl
insb
jge
arpl
movhps
push
enter
pop
sub
push
or
rol
xchg
mov
mov
mov
pop
sbb
les
cmpsb
mov
cmp
cmp
test
test
or
mov
fildl
mov
dec
mov
cmc
aaa
mov
dec
add
sub
lea
pop
and
push
mov
mov
sarb
mov
nop
push
xor
push
xor
pop
and
in
mov
movb
rcr
es
mov
and
fdivp
dec
lods
push
das
mov
popa
inc
fisubrl
xor
lcall
xorb
inc
mov
xor
imul
jle
dec
sbb
icebp
xor
xlat
out
ficompl
mov
xchg
xor
xor
xor
das
xchg
xor
xor
jo,pn
xchg
xor
xor
sub
sub
sub
push
int3
lcall
ss
mov
mov
jmp
int3
jl
mov
movsb
ljmp
mov
and
add
pop
xchg
mov
insl
xlat
movsb
jno
pop
rolb
test
sbb
das
mov
adc
xchg
pusha
negl
xchg
inc
mov
rclb
and
stos
push
nop
inc
repz
test
jae
pop
or
inc
mov
imul
sbb
fistps
jae
inc
add
int3
pop
nop
dec
push
mov
inc
mov
mov
and
xchg
jns
adc
and
sub
sub
popf
pushf
pop
nopl
rclb
mov
repnz
adcl
push
sbb
jg
subl
pop
mov
push
push
mov
shll
inc
cmp
adc
ret
js
push
fnstcw
mov
cltd
rcr
cli
xchg
or
pop
push
mov
dec
cwtl
xchg
adcl
popf
mov
cmpsb
test
cmp
roll
mov
repnz
xchg
mov
sub
cmp
pop
call
outsb
inc
mov
aas
pop
adc
mov
xor
inc
push
aas
mov
mov
and
mov
cltd
cmp
in
aaa
and
and
and
nop
mov
inc
mov
sahf
lret
popa
loopne
in
push
inc
lods
js
mov
sbb
and
cmc
sub
inc
push
dec
xlat
popa
pusha
in
ret
cmpl
pop
lea
sbb
sub
cmpsl
jnp
jno
lcall
rolb
dec
pop
lcall
pop
inc
mov
nop
mov
sbbb
sub
insb
pushl
jmp
push
sub
pusha
xor
popa
aaa
and
clc
and
fsubrs
adc
and
add
mov
imul
fwait
adc
mov
xchg
xchg
cli
push
push
sub
jns
std
xchg
popa
insb
add
pop
push
mov
cmp
push
xchg
mov
lret
add
es
sahf
ds
push
pushf
add
dec
pop
add
xchg
adc
xor
inc
sub
repnz
and
mov
sbbl
nop
rclb
jecxz
push
arpl
adc
mov
mov
mov
imul
and
pushf
add
xchg
cmp
movsl
sbb
pop
cmp
xchg
daa
ror
ret
fistl
sub
js
scas
ret
cltd
adc
mov
pop
mov
in
push
cwtl
iret
and
and
inc
mov
push
das
push
push
adc
xor
sti
mov
popa
push
add
adc
andl
ret
enter
adc
xchg
cwtl
dec
int3
push
lcall
xchg
nop
mov
insl
xchg
sbb
fcoms
je
push
imul
mov
movsl
dec
dec
rorl
dec
jae
sbbb
jmp
dec
xor
inc
lcall
cmp
lock
sub
dec
and
jno
test
mov
leave
rcrb
fildll
add
shlb
notl
aam
sbb
stos
cltd
pop
xchg
mov
daa
xlat
rcrb
adc
push
cmp
pop
test
inc
adc
orl
movb
mov
or
or
or
or
cltd
nop
popw
pusha
push
pop
xchg
cld
and
pop
mov
add
xor
or
call
nop
xor
pushl
sub
mov
or
das
or
push
add
movsl
dec
orb
cwtl
mov
xor
push
dec
sub
mov
enter
add
mov
push
movsl
movsl
out
ss
add
mov
or
inc
push
cltd
add
je
sbb
faddl
add
test
mov
movsl
and
cmp
jnp
add
call
adc
pop
rcll
jo
jbe
sbb
sbb
pop
fcoms
lcall
or
stos
or
inc
jecxz
add
sbb
xlat
stos
xorb
mov
loope
lods
rcl
or
xchg
jo
lar
adc
arpl
or
adc
adc
rol
inc
mov
or
xchg
in
popa
popa
pop
fisubrs
adc
jbe
movsl
jge
sbb
insl
sub
cs
pushl
and
mov
cli
dec
pushf
jne
xchg
movsb
dec
stc
clc
lcall
adc
or
pop
sub
mov
pusha
sbb
scas
sbb
sbb
rolb
add
mov
mov
push
cmp
ficoml
push
mov
and
adcl
call
mov
xchg
and
push
and
pushf
pusha
repnz
and
or
xor
pop
xchg
cltd
push
pushf
xor
add
daa
pop
inc
mov
jl
addr16
xchg
cmp
stos
enter
add
sub
cmpsb
je
ret
cmp
add
push
cwtl
in
pop
outsl
push
cmp
sub
jo
pop
enter
add
mov
sub
xchg
pop
pop
push
movsb
repnz
mov
sbbl
and
and
and
jne
dec
cmpsb
jno
and
out
int3
xchg
pop
jb
pop
push
sbb
and
sbb
pop
jb
sbb
rolb
push
inc
xor
adc
xor
adc
push
cmp
adc
loopne,pn
aas
das
jo
pop
add
repz
and
or
fldcw
push
dec
out
sbb
aam
push
mov
and
mov
mov
and
mov
in
add
roll
insb
insl
lods
xchg
addr16
add
push
mov
inc
sub
xor
cmp
mov
cmp
mov
sti
push
jmp
push
ret
adc
mov
pop
inc
test
dec
inc
mov
mov
addb
xor
or
in
mov
nop
ljmp
dec
jo
movsb
and
dec
mov
lea
out
out
test
cmp
lds
push
cli
sub
testb
and
cs
push
push
push
jmp
jp
and
and
cmc
add
push
mov
fisubrl
loopne
sub
and
jmp
leave
adc
xchg
xor
jl
mov
cltd
cmp
dec
sub
test
inc
pushf
ret
add
cmp
mov
sub
inc
je
push
push
out
and
jo
sbb
pop
movsl
movsb
and
lret
sub
push
mov
jb
mov
jg
xchg
mov
mov
jbe
or
push
addl
sub
dec
loopne
ljmp
inc
js
hlt
xor
out
movsb
outsb
into
cmp
ficoml
cmp
jbe
mov
mov
cmp
jne
inc
add
fs
sarl
cli
das
addb
cmp
inc
push
push
hlt
ljmp
or
or
iret
jne
pop
mov
inc
adc
enter
jae
add
add
cmp
stos
or
iret
je
mov
dec
sarl
mov
jmp
shrl
push
mov
mov
stc
inc
loopne
inc
xor
xchg
or
cmpps
rcrl
add
jg
movsl
sbbb
popa
jae
testl
rcr
rcrl
aad
inc
adc
lods
dec
or
rcl
add
insb
mov
imul
jb
or
dec
mov
test
and
mov
xchg
adc
rorl
mov
ret
sbb
cmp
pushl
mov
jb
xchg
push
rorl
sbb
add
pusha
adc
push
cmc
je
add
add
cmp
in
dec
ds
dec
pusha
adc
add
aas
or
xchg
getsec
mov
ds
jl
fmull
jg
je
cmp
or
and
mov
movb
stos
test
and
ljmp
push
add
shrl
pop
dec
add
leave
jne
pop
add
int3
dec
cld
movsl
nop
enter
adc
adc
pop
adc
bound
bound
pop
test
mov
add
or
sbb
cmp
dec
sub
mov
out
fs
inc
daa
push
mov
fs
inc
push
push
testl
inc
jnp
sub
dec
iret
adc
push
mov
add
test
or
mov
or
sti
jb
cmpsb
mov
ja
fldl
xor
mov
rorb
add
push
ret
xor
sti
pop
ret
adc
es
dec
and
movsb
popa
jg
add
push
push
pop
gs
cmc
add
jmp
imul
or
mov
mov
loop
mov
adc
or
inc
cmp
dec
ja
sub
cmpb
fs
ja
sub
push
add
fsubs
or
imul
add
add
mov
add
in
mov
scas
adc
neg
xchg
sub
mov
test
pop
or
rorl
dec
xchg
sub
pop
dec
sub
dec
cwtl
add
inc
and
scas
and
xchg
sbb
outsl
adc
pusha
mov
xor
fldcw
or
push
sbb
leave
mov
loopne
sbb
push
mov
andl
imul
pop
sbb
aam
dec
add
jae
bound
cmp
xorl
pop
xor
adc
sbb
iret
or
add
incb
dec
xor
insl
mov
pop
mov
mov
jne
popa
add
or
es
or
add
or
mov
sbb
or
fsubs
adc
mov
mov
test
xchg
in
call
sbb
aam
call
popa
into
rolb
rclb
mov
jle
xor
repz
xor
filds
fistps
jnp
rolb
push
cmp
add
or
sti
dec
push
inc
or
xchg
adc
rolb
jnp
dec
in
cmp
hlt
push
inc
sbb
dec
ret
adc
or
pop
imul
pop
jne
call
mov
mov
or
or
xor
jmp
lock
add
pop
nop
and
inc
int3
ret
and
or
ret
test
adcl
jns
lea
inc
xchg
iret
sub
add
sub
add
js
shlb
imull
or
xchg
sbb
xor
fdivrl
int3
and
jne
pusha
inc
test
inc
jb
imul
sub
xorl
jp
mov
test
adc
cmpsl
je
stos
mov
test
lock
sub
adc
pop
cmp
and
mov
pop
test
push
sub
inc
sbb
or
arpl
and
je
push
les
push
les
iret
ljmp
call
adc
shl
les
pop
in
mov
jnp
test
push
test
or
xchg
pop
add
scas
test
shr
jecxz
mov
jge
ret
sbb
push
xchg
cmp
or
mov
xor
jle
adc
in
in
inc
sub
repz
sub
cmp
mov
xor
jne
je
adc
test
call
in
mov
sarb
pop
fwait
pop
hlt
add
sub
nop
mov
int3
push
or
add
shlb
mov
les
popf
push
nop
cs
cmp
adcl
nop
rolb
dec
les
enter
cmpsb
or
fistpl
adc
push
lods
fsubl
ljmp
test
mov
mov
shrb
push
orb
xchg
add
adc
sbb
inc
xlat
and
call
pop
dec
into
loopne
jbe
call
rdtsc
xchg
and
sbb
imul
mov
or
mov
add
lods
test
insl
leave
aad
or
scas
jb
clc
inc
das
je
jge
jne
fs
lea
pop
inc
sbb
and
ret
das
mov
push
sahf
fsubr
imul
in
cmp
mov
cmp
call
or
loope
pushf
xchg
loope
movsl
jno
ljmp
inc
sbb
mov
enter
push
add
or
bound
fcmovne
xchg
cmpsb
shll
or
inc
rcl
mov
push
sub
pop
sub
add
jno
and
cmp
adc
and
push
sbb
or
popf
mov
es
jne
bound
xchg
aas
inc
add
pop
add
adc
or
cli
mov
enter
jge
push
cmp
dec
or
and
cmp
jle
test
adc
mov
add
les
fldl
mov
mov
aaa
scas
xchg
jg
cmp
push
es
cmp
mov
xor
mov
ret
orb
pop
out
jl
jle
pop
ror
xchg
pop
xchg
pop
ret
ret
pop
pop
test
push
jle
pop
movsl
xchg
push
push
push
mov
enter
call
fldl
hlt
or
inc
sbb
inc
data16
cmp
popf
filds
adc
jne
daa
bnd
adc
js
lahf
out
jne
or
jne
or
push
mov
or
int
js
and
pop
lds
ret
pop
lea
cmp
inc
sbb
ds
cmp
icebp
out
movsb
rolb
sub
push
jl
mov
lea
repnz
cli
pop
hlt
lea
sti
lea
mov
sbb
mov
mov
add
cmpb
test
xchg
loope
sub
sub
punpckhbw
and
shll
jo
mov
xlat
and
push
into
or
cmc
int3
roll
mov
lea
sbb
scas
lods
adc
jmp
fnstenv
clc
adc
ds
cmc
jle
popf
or
jne
fstl
dec
rcl
add
loopne
rol
adc
test
lea
jb
adc
mov
add
push
jl
cmp
add
cmpsl
dec
xor
testl
loope
cmp
inc
loopne
mov
pushf
lahf
sbb
xchg
add
addr16
insl
mov
xor
adc
and
orl
incl
pusha
mov
cwtl
or
test
mov
and
int
fs
xlat
or
xor
jne
ror
xor
jnp
nop
lods
and
enter
fwait
and
pushl
filds
mov
mov
xor
jle
fimuls
push
test
and
subb
mov
in
mov
cwtl
shlb
or
or
mov
rorb
int3
loopne
mov
inc
or
lds
icebp
or
mov
testb
pop
mov
mov
and
cltd
hlt
add
mov
and
adc
jae
addr16
mull
andb
shlb
mov
pop
xor
adc
nop
mov
dec
adc
push
mov
loopne
add
pop
imul
push
and
aas
lea
mov
and
adc
lea
cmp
scas
and
sbb
bound
sbb
mov
jnp
cs
sub
imul
mov
inc
or
nop
ja
fwait
sub
xlat
lds
xchg
daa
test
and
add
dec
xor
daa
or
pop
aad
pop
clc
inc
inc
pop
mov
xorl
out
movsl
mov
sbb
loope
ficomps
das
imul
and
xor
adc
js
jle
xor
cli
cmp
mov
mov
mov
pop
adc
adc
mov
adc
adc
in
cmp
adc
cmp
in
lds
sub
test
pop
enter
pop
xor
push
sbb
sbb
enter
adc
pop
repnz
dec
xor
push
or
lcall
adcl
loop
mov
mov
xchg
inc
and
fnsave
push
daa
add
sbb
shl
bound
in
xor
add
push
lea
pop
ss
icebp
add
rcll
mov
push
add
sub
cmp
sub
loop
or
bound
je
insb
and
rcrl
or
sbb
push
pop
js
push
out
xchg
aaa
mov
test
xchg
pop
add
scas
ret
and
push
imul
js
xor
lock
adc
and
js
scas
push
loop
xchg
fnstenv
je
push
xchg
pop
lea
or
xchg
inc
sbb
fcoml
imull
xchg
xchg
sbb
xor
pusha
xor
xor
dec
loope
jne
sbb
adc
out
pop
test
leave
mov
add
and
lret
adcb
int
mov
shlb
ljmp
lods
push
hlt
dec
xchg
es
mov
les
popa
fildl
call
xchg
push
xchg
int3
pop
addr16
movsl
jne
jno
in
call
cwtl
add
adc
cmp
int
adc
cmp
enter
test
loopne
add
int
cmpsl
lea
jge
jecxz
add
pop
push
lock
fmull
inc
imul
lcall
jbe
and
adc
jp
loopne
je
repz
sub
or
cmpsb
dec
mov
fiaddl
call
jl
xchg
adc
cmc
fwait
push
jo
pop
pop
pcmpeqd
or
bnd
ja
xorl
imul
movl
test
aaa
push
sbb
xchg
mov
fs
aaa
sbb
cs
fcoml
xor
pop
or
jne
pop
xor
setge
add
es
jne
sub
or
cmpsl
fwait
test
ljmp
xor
test
and
sbb
or
adc
inc
je
fdivrl
push
xor
movzbl
arpl
adc
mov
push
xchg
in
dec
ret
mov
orb
adc
jmp
fldenv
imul
sub
jmp
jmp
jl
nop
mov
clc
dec
lcall
clc
adc
push
dec
pop
inc
mov
je
adc
stos
cmp
mov
inc
or
shlb
or
aaa
jns
and
out
les
or
aaa
jo
and
add
pop
enter
cmpsb
xchg
push
inc
xchg
sahf
lods
add
into
in
pop
jb
xchg
lea
mov
dec
cmpsb
stos
pop
lds
pop
sbb
sbb
call
inc
mov
out
je
mov
push
call
cmpsb
fisubrl
or
movl
lret
adc
jg
mov
movsb
dec
addb
movsb
out
add
xor
aad
repnz
popl
in
insl
sbb
ficompl
ret
add
sbb
xor
je
or
add
fldl
leave
push
stc
mov
cmpsb
popf
test
xor
xor
or
or
imul
or
lret
lea
addr16
add
pop
imul
mov
movsb
cs
jns
sbb
fsubs
and
mov
sub
orl
push
add
xchg
sub
add
mov
push
inc
pop
push
aas
xchg
stos
adc
adcb
cmc
mov
in
add
test
lock
xchg
aam
fistps
popa
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jb
rolb
sbb
test
and
sete
cmpsb
mov
jle
sahf
sub
cmpb
push
add
pop
cmp
jne
jae
movsbl
sbb
inc
lcall
sbb
or
dec
call
cmp
push
ds
jmp
inc
lcall
enter
ret
incl
mov
add
or
jecxz
or
add
inc
cmp
mov
jge
data16
and
lcall
ret
add
into
scas
push
stos
les
stos
subb
pop
ss
cmp
jecxz
sbb
push
jg
addr16
jne
enter
adc
or
or
fs
pop
pop
sahf
adc
popa
inc
rorb
ficompl
push
sbb
pop
cwtl
fidivrl
stc
or
test
xlat
sbb
test
shld
lea
inc
adc
roll
pop
xchg
mov
arpl
cli
aaa
push
cmp
jl
xchg
jle
insb
dec
popa
mov
ss
test
jo
js
inc
mov
add
dec
jne
push
cltd
in
and
arpl
add
lods
rolb
out
xor
sbb
add
aaa
lahf
push
ret
or
pop
or
jl
adc
or
and
inc
pop
pop
dec
daa
mov
loope
es
cmp
jnp
ficompl
ficompl
mov
push
push
pop
cmpsl
loopne
add
mov
in
add
add
jp
sub
sbb
lds
adc
or
cltd
jns
mov
ror
cmpsb
sbb
fcmovnb
pop
into
xor
repnz
sub
xchg
in
mov
or
add
nop
pop
push
push
je
add
jge
push
cmp
imul
jmp
ret
cltd
and
mov
or
cld
dec
push
push
fsubl
push
out
fcomps
in
cmp
outsb
pop
pop
rorb
add
pop
jb
jmp
push
sbb
push
dec
dec
push
add
stc
jbe
cmp
pop
jg
add
pop
xor
add
into
andl
dec
mov
in
sbbl
fcoml
mov
arpl
rol
or
js
idivb
popf
dec
sbb
xor
push
jne
loop
pop
call
in
push
popa
add
jb
cwtl
lahf
test
insb
xchg
pop
adc
dec
pop
sar
push
pop
xchg
mov
and
and
or
rcrl
jl
dec
bnd
push
pushl
sbb
inc
dec
faddl
push
add
test
sarb
cli
adc
fbstp
popf
in
sbb
jbe
pop
xchg
andl
adc
pushf
cli
aad
xchg
push
inc
popf
fstpl
daa
loope
das
push
rorb
imul
rolb
les
add
lods
mov
jmp
jecxz
xchg
and
jmp
add
int3
add
aam
aad
inc
rorb
push
push
daa
dec
add
or
adc
rcrb
mov
lret
xchg
jl
imul
xchg
aam
imul
push
jl
mov
xor
and
push
pop
aam
inc
jnp
stos
xor
mov
xorb
push
xchg
cmpl
jne
rol
scas
cwtl
or
aaa
mov
scas
and
adc
jo
push
adc
cmp
xor
xchg
xchg
movsb
sbb
cmp
int3
and
mov
les
roll
cmp
lcall
adc
mov
loopne,pn
and
test
cmpsb
je
dec
or
xchg
lods
fcomps
adc
cmpsl
call
out
das
mov
movsl
aad
lds
pusha
stos
and
and
sarl
add
ss
mov
inc
xchg
in
or
xchg
aam
and
or
add
adc
jnp
jge
jo
and
dec
leave
sub
cmc
stos
bound
push
jno
or
cwtl
loopne
dec
loopne
inc
xchg
orl
in
push
mov
sbb
je
sbb
daa
movsbl
shl
call
or
decl
ret
jmp
mov
out
test
pop
cli
pop
push
sbb
sbb
and
push
lret
movb
in
cmpl
movsb
or
rolb
shl
inc
sub
cmp
cmovg
shlb
cmp
add
or
cmp
jmp
dec
push
roll
sahf
in
lods
xchg
mov
cmc
sub
inc
pop
xor
mov
mov
loope
inc
aas
cld
les
pop
or
pop
xchg
xor
iret
and
lods
sbb
arpl
pusha
xor
mov
es
add
call
js
lahf
mov
sub
pusha
inc
popa
inc
cmpl
hlt
push
mov
pop
std
imul
add
out
aad
fwait
pushl
movswl
test
mov
mov
clc
pop
mov
iret
mov
sub
push
mov
push
pop
test
pop
les
inc
cmp
xor
mov
mov
dec
mov
mov
jg
push
mov
add
mov
add
movzbl
mov
roll
sbb
js
jl
dec
jge
cli
insb
clc
addl
pusha
ljmp
iret
push
std
scas
mov
incb
mov
add
out
pop
or
mov
nop
bound
nop
add
or
jmp
pushl
xor
mov
inc
call
jne
pop
mov
icebp
or
lea
xchg
ficoml
jb
lea
aam
in
dec
xchg
rol
pop
adc
mov
shlb
pop
add
fimull
xor
push
mov
add
fs
js
cltd
movsb
bnd
or
in
fs
and
or
mov
adc
sub
ds
fucom
nop
pop
or
testb
fsubl
sahf
mov
cmp
push
enter
das
and
fbstp
lahf
repz
lahf
lret
push
scas
and
push
xlat
mov
and
fs
imul
mov
fnstsw
test
js
xor
and
pop
mov
jae
sub
inc
pop
and
adc
add
cmp
push
mov
and
mov
ljmp
push
or
jl
imul
mov
movsl
das
mov
mov
push
jns
add
xchg
mov
add
pusha
and
test
jb
sbb
rcll
mov
stc
sub
loopne
dec
pusha
ss
lea
cmp
jbe
cmp
jbe
mov
aad
lret
add
enter
ret
mov
rep
and
insl
mov
sub
cmovle
sbb
adc
add
or
ficompl
test
aam
orl
mov
out
mov
jne
push
fldcw
mov
push
cmpsb
sahf
mov
push
cmp
insb
jmp
loop
std
mov
mov
jmp
addr16
and
pop
ret
and
enter
dec
sbb
mov
jmp
mov
test
cli
sub
jae
push
aad
mov
call
bound
cmp
cmpsl
js
sti
lea
ss
add
xchg
push
push
xchg
xor
verr
fwait
add
movsl
loope
gs
push
mov
imul
sbb
in
mov
into
pop
and
int
mov
xchg
lods
test
lds
sbb
cmc
je
aam
mov
clc
cmpb
ret
aas
jb
movsl
sub
pushf
jmp
cmp
cmpsb
call
xor
sbb
repnz
cmpsb
sbb
adc
adc
scas
push
xchg
aam
cmp
add
mov
jp
mov
adc
push
loopne
mov
cmc
icebp
sub
enter
mov
outsl
pop
and
mov
pop
shrl
test
jp
push
leave
push
out
rclb
xor
fidivrl
movl
or
jle
stos
or
pop
xor
xor
adc
ss
leave
and
push
mov
push
std
adc
cmp
xchg
jo
aam
enter
ss
ficoml
loopne
mov
nop
push
int3
dec
sti
dec
stos
xchg
dec
lcall
insb
add
sbb
test
xlat
push
jle
add
sbb
or
scas
add
push
adc
sbb
inc
lret
adc
add
dec
arpl
fdivr
add
xchg
xchg
xor
xor
mov
or
lea
mov
je
lret
pop
call
les
fistpll
mov
cltd
les
cld
sbb
maxps
xchg
add
testl
cmpl
hlt
test
cld
adc
dec
fwait
inc
ss
ret
movl
aas
pushf
pop
or
jbe
fs
cmp
test
fcompl
js
dec
or
fsubrl
push
out
fdivl
adc
inc
add
or
push
insb
or
sub
add
testb
xor
mov
andb
jno
loope
pop
ds
je
cs
and
and
xchg
add
pop
je
rcl
aam
popa
loope
popf
gs
xchg
inc
jp
or
mov
add
pusha
and
scas
and
fwait
jae
test
rclb
dec
lea
pop
aam
mov
test
jmp
jmp
out
scas
gs
fldl
loopne
lods
inc
add
sub
fdivrs
into
inc
aad
push
jmp
xchg
inc
xchg
shr
and
call
pop
loopne
hlt
mov
test
mov
push
shlb
xor
push
outsb
lods
sbb
gs
mov
divb
push
fs
mov
test
lahf
imul
stos
jo
lods
xchg
push
pushl
inc
add
clc
das
mov
cmp
jbe
adc
lcall
hlt
sub
cmp
pop
push
sbb
lret
sbb
or
pop
add
fisubl
adc
nop
cmpsl
or
mov
push
jmp
clc
bound
cs
jmp
sbb
pop
clc
jne
mov
inc
or
clc
sbb
outsl
andl
fcompl
inc
pop
leave
adc
dec
pop
xchg
cld
out
mov
add
cld
je
sti
mov
lock
mov
push
pop
push
adc
scas
or
sbb
adc
push
push
call
cmp
sbb
lea
mov
arpl
dec
mov
rcrl
lods
sub
adc
aaa
dec
and
popa
add
add
lret
inc
sarl
jae
inc
jmp
or
push
shl
mov
dec
jbe
adc
or
or
or
popa
fmull
add
and
in
nop
dec
or
xor
and
repz
in
bound
aaa
test
cmp
ret
in
dec
test
cmp
xorl
jns
dec
or
inc
pop
adc
mov
and
and
sbb
addl
cs
cmpsl
shrb
add
jns
fisttpll
mov
xor
sbb
and
sub
push
jge
jae
rclb
cmp
fildll
sbb
pop
jmp
cmp
test
cmp
into
adc
adc
xchg
ret
sub
mov
sbb
mov
push
and
ss
or
insb
in
movsl
inc
xchg
xchg
push
xor
sub
mov
mov
dec
or
inc
inc
ja
outsl
aas
stc
das
xor
das
add
mov
in
add
sub
or
mov
push
or
or
inc
xor
xchg
mov
dec
subl
andb
cmpsb
dec
xor
sbb
push
movsl
pop
adc
enter
add
add
pusha
dec
ss
test
jle
inc
pusha
push
ret
lods
xor
ret
ret
or
mov
sub
lock
adc
cmp
aad
mov
jp
and
xchg
push
rclb
xchg
push
loop
stos
subb
shlb
sub
lods
jne
xchg
pop
dec
mov
jne
testl
push
or
ljmp
ss
cmp
xchg
cmp
aam
jo
arpl
and
loope
mov
pop
adc
test
dec
pusha
pop
sub
adc
imul
nop
outsb
into
sub
add
jmp
sub
dec
lahf
enter
xchg
cmp
jb
mov
add
push
mov
mov
jnp
sbb
xorb
sbb
nopl
sti
lock
add
lea
imul
mov
sbb
dec
pop
lods
ja
sbb
pop
add
sub
sub
sbb
js
adc
jge
pop
xchg
pop
fadd
inc
xchg
cs
inc
mov
lock
sub
mov
aaa
or
or
ror
shll
sbb
shlb
loopne
pushl
or
outsl
or
insl
push
fisubl
pop
shl
add
xchg
and
fdivrl
ret
loopne
mov
jmp
sub
notl
mov
jmp
pushf
in
push
data16
std
mov
fldenv
ret
mov
cwtl
add
fsubl
outsb
mov
lea
iret
test
scas
dec
leave
dec
nop
lock
push
ret
pop
push
dec
mov
push
cmp
or
adc
jo
movsl
add
push
and
xor
xchg
sbb
xlat
inc
push
clc
fidivrl
push
push
ss
int
cmp
jb
cmp
inc
int
rorl
sbb
inc
aaa
popa
xor
loop
mov
mov
je
add
push
sbb
sbb
dec
mov
jl
xchg
push
push
pop
push
inc
adc
add
stc
hlt
insb
cmp
adc
dec
mov
cltd
clc
dec
je
mov
and
xorl
mov
mov
mov
filds
or
mov
cmp
addr16
je
cmp
and
mov
sbb
add
pop
dec
lea
repz
or
mov
pop
dec
xor
test
ja
push
cmpsb
mov
sub
inc
adc
je
testl
lods
sub
in
cmp
jbe
and
push
lea
loope
cmp
jb
mov
je
sub
inc
jmp
inc
and
inc
cmp
ficomps
push
cld
pop
pop
push
orb
loop
out
jae
cs
mov
mov
clc
repnz
je
aam
mov
imulb
roll
push
adc
into
inc
jmp
loop
mov
xor
xchg
sub
mov
jl
dec
cld
inc
xchg
cmp
add
cmp
jne
outsb
hlt
cmpb
bound
pop
push
or
imul
adc
je
ds
mov
test
data16
fdivs
js
sub
sub
mov
add
stos
es
enter
adc
push
push
mov
adc
ret
pop
in
add
cld
jmp
loopne
fisubs
mov
ljmp
mov
movzwl
testw
push
mov
add
jae
cmp
jae
movl
in
jg
sub
pop
shl
add
jmp
pushf
aas
insb
sti
adc
xchg
sub
dec
popa
or
adc
fs
jne
xor
and
lock
sub
or
push
incb
jae
mov
jmp
dec
shlb
icebp
adc
fstp
sub
out
sub
sub
sub
call
mov
or
dec
add
sbb
push
add
scas
ljmp
or
jge
lock
and
es
sub
fucomi
fwait
push
sub
and
pop
or
jl
or
adc
sbb
lods
and
pop
orl
decb
jbe
push
hlt
pop
arpl
dec
jo
jne
add
je,pn
test
jne
lods
push
std
sub
jb
push
pop
inc
clc
add
icebp
mov
or
jae
movb
inc
push
or
call
xchg
or
nop
push
and
sbbl
xchg
data16
jo
testl
ljmp
loop
test
inc
mov
clc
out
fsubr
adc
jae
add
inc
fs
sbb
and
inc
push
lcall
imul
popf
inc
xchg
lds
mov
fsub
add
fiadds
jecxz
hlt
dec
mov
and
mov
push
call
sarl
inc
ret
pop
inc
movsl
fisttps
add
ret
add
inc
daa
adc
lret
jne
mov
cmovns
mov
sub
push
inc
sahf
mov
imul
dec
test
add
lods
inc
xchg
mov
jg,pn
mov
jnp
push
fistpll
in
cmp
and
jbe
push
mov
sbb
push
push
int
xor
or
pop
shlb
int
jp
or
push
adc
push
mov
ljmp
push
mov
push
popf
call
testl
lea
cmpsb
jecxz
mov
jo
sbb
imul
mov
pop
push
andl
sub
sbb
pop
cltd
aaa
sbbl
xor
pushf
inc
mov
mov
jmp
add
ret
or
cmc
outsl
cmpsb
push
pop
push
movl
push
adc
dec
or
xor
push
xor
push
pop
lahf
jbe
add
mov
xor
incb
jne
sub
mov
sysret
sbb
lock
push
mov
xchg
xor
cltd
cmp
shrb
pushf
pop
and
popf
int
cmpl
sub
push
xchg
jo
sbb
cmp
cmp
mov
mov
cmp
outsb
or
out
push
fsubr
jae
pop
push
shl
adc
cmpl
in
or
add
cmp
pop
subl
es
dec
lea
mov
ljmpw
xchg
imul
or
pop
mov
inc
adc
pop
xor
and
ja
pop
mov
idiv
into
fisubrs
push
gs
add
xchg
cmp
mov
add
cld
pop
pop
nop
push
stc
jle
mov
je
cmpsl
popf
and
dec
push
or
jge
xor
cmc
cmp
js
push
lds
add
adc
xor
pusha
clc
fidivrs
clc
pop
je
test
dec
push
inc
movsb
mov
xor
push
fs
addb
shll
adc
inc
push
into
sub
xor
inc
push
nop
push
push
or
sub
mov
ret
cld
pop
xchg
test
call
mov
jl
mov
inc
inc
fidivrl
lidtl
pusha
push
mov
push
sbb
inc
or
push
push
in
mov
xchg
inc
and
mov
fdivs
aaa
les
add
add
orl
add
add
pop
inc
add
push
cltd
aaa
inc
loop
in
inc
add
outsb
enter
test
ja
ret
or
loopne
das
pusha
sti
pusha
jb
push
mov
out
pop
pusha
adc
roll
popa
xor
push
xorl
mov
daa
ficoms
int3
cmp
xchg
sarb
jne
cmpsl
cmpsl
das
push
and
lret
inc
cmpsb
inc
gs
pop
add
inc
push
ljmp
push
pop
mov
insb
xchg
adc
loope
sti
sub
mov
jbe
push
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
mov
cmp
xchg
or
cltd
inc
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
push
out
jae
cmc
lahf
cmp
ret
and
cmp
jne
in
push
bound
adc
or
sub
pop
cs
shl
ret
out
enter
sub
shll
sbb
sbb
clc
add
mov
lods
testl
push
add
pop
cwtl
cmpl
dec
push
xor
dec
jnp
ret
push
push
lret
cwtl
adc
dec
mov
subl
pop
arpl
std
jnp
das
movl
push
push
loopne
into
cmpl
movsb
fcmovu
iret
jge
xchg
andl
aas
fsubrs
pushf
sub
inc
fs
pop
ficompl
sbb
cmpsb
or
xchg
or
clc
inc
jmp
bound
and
push
cmp
pop
jge
out
orl
add
cltd
mov
popf
jne
push
push
sbb
jne
lock
call
jp
sub
add
iret
push
subl
test
test
dec
insl
loopne
add
push
adc
dec
push
dec
cmp
jae
push
imul
push
cmp
fmuls
xchg
xchg
jne
mov
icebp
cmpsl
jp
cmp
lods
fwait
pop
loopne
sbb
pop
xchg
fsubs
push
rorb
push
aas
je
xchg
stc
cmp
push
pop
jne
aam
adc
xor
inc
mov
xlat
imul
jne
pop
call
sbb
dec
mov
insl
in
lret
mov
mov
jne
jmp
popf
andl
test
jbe
mov
inc
popa
sbb
push
sub
add
addr16
aaa
adc
pop
lea
mov
add
je
pop
in
push
cmp
subl
mov
andb
push
imul
repz
jmp
pusha
xchg
fisttpl
sub
fimuls
sub
leave
or
adc
mov
nop
leave
add
xchg
mov
sub
decb
adc
cmpl
add
cwtl
sbb
inc
and
add
in
sbb
in
mov
add
subl
cmp
push
mov
or
and
ret
push
add
cmp
mov
cmpl
mov
push
cmp
std
push
mov
aas
inc
push
dec
adc
mov
jl
push
movsl
aas
add
inc
add
test
inc
mov
pop
pusha
xchg
pop
xchg
nop
fcomp
and
adc
sahf
xchg
xlat
push
push
push
push
pop
lret
in
mov
pop
ret
pusha
or
addr16
pop
pop
pop
dec
mov
push
sub
sbb
ret
addb
dec
rorl
dec
sub
jno
clc
add
push
les
mov
push
jno
filds
adc
and
incl
sbb
jmp
push
cmpb
rcll
lret
mov
enter
sbb
adc
lods
ret
ljmp
movl
xchg
ror
adc
test
es
sbb
or
sbb
les
adc
insb
or
or
add
daa
cmp
jecxz
jnp
into
xor
dec
xchg
push
es
je
jl
jbe
lock
sbb
ljmp
sbb
push
loop
mov
dec
cli
jp
push
pop
scas
movb
es
mov
je
out
dec
ret
mov
or
sti
and
adc
xor
add
xchg
mov
adc
or
pop
ret
fwait
sbb
push
pop
inc
shlb
test
out
lods
test
lock
mov
inc
nop
dec
fnstenv
stc
sti
es
sti
jnp
sahf
lcall
adc
mov
in
inc
jae
sub
mov
mov
xchg
fstpt
and
scas
xchg
inc
cmp
cmp
xor
cmp
jbe
mov
jno
in
and
jmp
sarb
mov
je
mov
cmp
jne
vpavgb
adc
in
mov
ljmp
add
adc
adc
lret
push
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
aas
or
mov
add
pop
mov
and
mov
sbb
andb
js
adc
into
inc
mov
movsb
sbb
jbe
push
adc
ds
loopne
inc
jne
ss
adc
mov
xor
pop
lock
call
xchg
shl
dec
lock
cmp
fadds
or
sbb
outsb
sbb
pop
jbe
jo
sahf
add
mov
adc
pop
lcall
mov
sbb
ret
add
es
xor
xchg
jo
add
cmp
sub
sbb
xchg
bound
addl
jne
adc
add
incl
cmp
andl
rcrb
adc
hlt
xchg
dec
pop
pop
sub
mov
push
jo
mov
test
in
sub
es
lahf
mov
cmp
cmp
scas
hlt
cmpsb
lret
mov
cmp
in
je
divb
lret
fucomp
arpl
mov
repnz
arpl
mov
or
and
xor
ljmpw
adc
push
pop
push
add
cmp
xor
leave
inc
cmp
lea
adc
jmp
jo
inc
hlt
mov
lock
hlt
xor
lods
add
je
mov
mov
sbb
add
in
lahf
ret
mov
cmp
ljmp
aam
pop
enter
push
jae
pop
jb
les
enter
mov
cmp
push
jecxz
mov
add
jge
push
jecxz
outsb
outsl
mov
and
add
jl
inc
adcb
insl
inc
push
push
popa
lea
test
mov
orl
int
rcrl
push
pop
xchg
fcomi
cmpl
adc
shrl
push
rclb
hlt
test
push
add
leave
das
je
add
sbb
mov
out
jb
ficompl
add
pusha
scas
pop
lods
xor
xchg
push
cmpb
jns
add
rclb
mov
fisttpl
xor
out
push
add
sub
xor
sub
orb
sub
cld
int
cmp
fsub
push
adc
pop
sbb
push
ja
inc
lock
push
test
pusha
sbb
mov
inc
je
adc
xchg
addb
and
adc
movsl
repz
mov
xchg
pusha
push
sub
cmc
cmp
loop
cmp
loope
je
push
das
jmp
push
loopne
and
push
adc
dec
push
mov
andl
cmpsb
dec
rorl
jle
push
add
jo
adc
add
mov
mov
clc
and
sbb
sub
push
dec
dec
lods
dec
cmp
pop
mov
sbb
dec
push
mov
jne
jns
add
cs
sbb
xor
sub
inc
cmpl
lock
push
jg
jbe
push
aas
in
clc
jge
ja
jmp
mov
dec
pusha
leave
cmp
xchg
lock
cmp
xor
xchg
fimuls
int3
add
sarb
int3
add
shl
rorb
and
int3
arpl
loopne
xor
inc
stc
lods
push
sub
les
or
aam
add
cmp
push
fdivp
add
add
sub
insb
dec
mov
push
mov
in
lret
pushf
fsubrp
push
mov
jb
test
push
je
push
mov
daa
das
or
cmc
das
xchg
inc
adcl
sti
incb
jl
jmp
pop
mov
ss
inc
mov
add
ljmp
sbb
add
imul
add
aas
push
dec
pop
test
in
adcl
fmull
push
xor
fidivl
cmc
jno
lret
into
jne
int
mov
sub
shl
push
insb
xor
lea
mov
pusha
lahf
adc
pop
sbb
dec
loop
push
and
adc
or
push
rep
lcall
aam
adc
or
cmp
movb
mov
jmp
aaa
loop
lea
inc
push
fiadds
xorb
xchg
sarb
ds
fldl
lret
push
push
aaa
lock
mov
stos
mov
cmpb
inc
add
adc
push
lcall
in
std
adc
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
dec
sbb
cmp
push
sbb
pop
nop
push
hlt
push
jbe
fs
jne
out
mov
dec
adc
cwtl
mov
sbb
mov
sbb
xor
ss
fadds
int3
inc
push
cmp
mov
inc
aad
es
or
aad
fsubp
xchg
push
or
push
jmp
sbb
sbb
popa
pop
jg
inc
cmpsb
leave
sub
pop
mov
cmp
das
loope
dec
fstps
or
fs
add
icebp
dec
fdivs
add
add
notb
jnp
adcb
jnp
jmp
push
cld
inc
inc
adcb
or
cmp
mov
fcoml
stos
xor
mov
pop
mov
popa
and
cwtl
jle
jne
popa
inc
jmp
test
dec
nop
push
add
pop
jl
repnz
push
push
loopne
out
sbb
add
fnsave
clc
xchg
aam
test
adc
inc
nop
mov
jno
ja
call
jo
movb
cltd
jo
add
scas
or
jo
repz
adc
xorl
pop
fucomip
and
sub
sbb
push
in
jecxz
and
inc
inc
addr16
or
jne
in
cmp
pop
iret
stos
mov
mov
dec
mov
sbb
pop
movsb
mov
add
sti
xor
dec
loopne
inc
fcomps
mov
stos
or
je
mull
or
mov
adc
sub
scas
inc
jle
xchg
movb
enter
sbb
mov
sbb
add
enter
mov
xchg
movl
or
dec
cli
xor
mov
or
lock
fsubrs
aam
sahf
cmpsb
add
mov
xchg
add
mov
add
xchg
cmc
lret
pop
loopne
popa
inc
sahf
and
add
push
dec
addl
jl
push
leave
fsubr
push
mov
sub
push
outsl
adcb
iret
or
cmpsb
inc
xor
pop
xor
mov
in
adc
add
popa
adc
pop
cmp
jne
test
bswap
incl
sub
fists
aaa
ja
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
and
xchg
adc
add
dec
push
push
pop
inc
sub
adc
add
pop
movl
add
jbe
dec
jnp
mov
add
push
adc
enter
xchg
mov
add
xor
cmp
out
lcall
pusha
lods
pop
mov
add
jae
icebp
sub
inc
sbb
ljmp
out
mov
xchg
add
cmp
inc
xor
iret
sub
data16
jo
jns
popf
pusha
sub
push
imul
jnp
ret
cli
xor
lds
pop
pushf
sub
push
jge
push
add
test
aas
sbb
sub
or
stos
jmp
push
ret
pop
push
scas
mov
or
inc
mov
mov
inc
xor
mov
add
test
or
mov
insb
rcrb
dec
dec
in
arpl
dec
fidivrl
outsl
ss
test
pusha
sbb
fdivrl
xchg
mov
loop
pop
push
das
dec
arpl
sub
sub
sbb
adc
sub
jge
xchg
lea
xor
or
pop
mov
ja
pop
leave
mov
push
jne
sar
or
clc
mov
jnp
and
adc
inc
push
jmp
js
and
xor
dec
dec
jle
dec
jnp
push
jmp
movsb
inc
aam
cmp
add
dec
and
inc
sbb
mov
arpl
ret
call
fucomi
dec
mov
into
cs
sbb
addr16
mov
push
inc
mov
mov
clc
pop
xchg
jno
imul
inc
je
adc
push
and
and
shrb
dec
jle
addb
dec
cli
xchg
xchg
mov
test
fsts
inc
and
pop
ljmp
sbb
sub
stc
push
jnp
or
cmp
fdivrl
or
push
stos
imul
push
imul
xchg
sbb
imulb
xchg
test
cltd
lcall
dec
aam
dec
ds
fisttps
pop
adc
nop
fnop
mov
pushf
jne
lods
movsb
add
in
push
rclb
mov
sbb
dec
mov
movsl
xchg
jne
sbb
dec
fwait
xchg
fnstcw
jl
add
push
mov
xorb
pushl
pop
push
sbb
push
jnp
mov
or
mov
arpl
add
or
bound
mov
popa
sub
das
push
arpl
add
mov
mov
test
repnz
and
roll
jo
add
jae
mov
adc
adc
or
add
mov
adc
jo
pushf
pop
sarl
js
cmpl
jne
adc
sbb
dec
inc
and
int3
mov
insl
test
imul
mov
pushf
xchg
jne
cmp
fs
out
ljmp
dec
lods
or
add
dec
shlb
adc
dec
inc
loope
sbb
cmp
dec
mov
inc
xor
cmp
jge
inc
jbe
push
jmp
sbb
rclb
test
cmp
push
sub
inc
mov
lock
in
nop
sub
inc
jmp
xor
sbb
popf
lret
je
cmp
xchg
sbb
adc
push
negl
lods
scas
jge
bound
xchg
mov
fcompl
and
cmp
xchg
xor
fildll
fcoms
data16
rcrb
cli
cmp
push
inc
jbe
adc
inc
jmp
divl
sbbl
cld
clc
push
jbe
cmp
inc
loopne
test
xchg
xchg
popf
mov
sub
push
ljmp
sahf
pop
ret
sti
jbe,pn
fdivl
ret
mov
test
mov
sbb
fidivrs
fidivrl
shll
pusha
adc
xor
push
dec
pop
insl
and
jg
lods
jae
orl
mov
cmp
jne
jl
push
cmp
push
fsubr
adc
addb
je
stc
js
push
ret
jp
sbb
lahf
test
jo
mov
inc
and
jo
inc
faddp
xlat
mov
or
sub
decb
pop
fs
mov
js
add
ffree
test
fldt
std
adc
incl
cmp
pop
sbbl
cmp
shrb
pop
adc
add
jb
jmp
mov
add
in
hlt
adc
addr16
loopne
mov
mov
or
lods
mov
push
cltd
ret
inc
enter
pop
dec
int3
fs
add
push
mov
push
or
jb
mov
push
sub
aas
call
cmpl
icebp
mov
pop
loopne
push
loop
or
mov
and
arpl
js
mov
lock
ffree
mov
and
or
mov
jb
jge
shll
mov
jne
insl
loope
dec
mov
popf
cmp
test
inc
pop
les
push
leave
jle
mov
jnp
mov
and
mov
xor
dec
add
push
mov
xor
fisubrl
dec
shl
sub
or
stos
outsb
cmp
rcrb
add
roll
sub
add
movsb
push
pop
bound
mov
or
add
in
mov
aad
mov
adc
jb
mov
add
lock
adc
adc
jbe
scas
cwtl
mov
stos
xchg
mov
dec
out
dec
cmpl
lds
jmp
int3
add
hlt
mov
mov
jp
jne
je
push
mov
mov
sub
add
out
xor
loopnew
inc
fldl
add
ss
or
mov
push
pop
in
cmp
push
and
fcmovnb
fcomps
leave
sbb
addl
cmp
pop
adc
push
cld
jne
ret
lods
imul
ficoms
lcall
pusha
add
push
aas
xchg
pop
adc
sub
mov
adc
arpl
push
test
and
xor
mov
dec
in
adc
adc
xchg
je
dec
xor
cmp
cmp
int
push
ret
aaa
jmp
mov
pop
sub
std
ja
gs
mov
lods
cld
ljmp
pop
nop
sarb
subb
ja
neg
sbb
inc
sbb
dec
push
mov
mull
inc
xchg
ret
jecxz
fwait
mov
mov
insb
pushl
aas
mov
shll
dec
sub
add
sbbb
add
jge
inc
das
in
lret
jmp
adc
aam
push
sbb
arpl
xor
push
inc
add
push
test
imul
in
loope
cltd
adc
and
cmpl
test
adc
test
adc
rcrl
mov
mov
jge
fstps
sarb
xor
push
xchg
inc
clc
push
push
add
mov
sbb
mov
lea
lcall
or
xor
pop
je
cmp
push
add
stos
insb
loop
mov
sub
enter
adc
nop
mov
add
fldl
fdivrl
mov
imul
addr16
inc
cmp
jl
inc
and
das
jmp
cmp
and
popf
subb
push
jo
out
cld
cmp
bound
ud0
lahf
or
idivb
adc
mov
xor
pushf
nop
rorb
aad
fdivrs
cmc
cwtl
adc
mov
cltd
out
inc
and
popf
cmc
xchg
dec
and
add
je
out
gs
leave
ss
adc
insl
ds
add
xor
not
push
sbb
jae
jbe
outsb
nop
xor
lods
popf
test
sbb
fcompl
pop
mov
addl
leave
cmp
test
sbb
dec
pushf
out
cli
and
mov
jne
popf
push
lock
add
mov
emms
dec
test
push
ud0
lds
mov
adc
mov
or
insb
aam
mov
push
fdivr
jnp
pop
mov
inc
or
push
mov
xchg
xor
push
aam
fnsave
testb
mov
and
test
mov
push
divb
push
mov
lret
adc
nop
sbb
add
aad
mov
pop
jne
call
roll
inc
test
out
mov
cmp
aad
sbb
pop
enter
push
push
xorl
jmp
sbb
sub
xor
testl
idivb
orl
jle
add
ja
loop
add
pop
xchg
in
scas
jmp
cmp
sub
sbb
xchg
push
or
adc
shrb
pusha
mov
repnz
clc
push
out
mov
cmpb
push
push
cltd
sub
adc
xchg
dec
into
pop
cmp
ret
pop
lock
out
fsub
mov
ficoml
jb
jno
in
pop
dec
add
mov
arpl
test
mov
add
jge
and
fwait
push
push
sub
xlat
ret
adc
pop
adc
out
dec
mov
add
aaa
pusha
pop
fldcw
dec
jne
push
and
mov
popf
mov
xchg
cld
addl
aam
mov
push
pop
adc
sub
xlat
cmc
mov
lea
popf
mov
add
addr16
jno
arpl
xchg
mov
test
shrl
add
arpl
mov
adc
push
mov
repz
sub
inc
arpl
pop
ret
loopne
stos
xor
or
mov
cs
add
pop
cmp
sahf
popa
lea
mov
add
pop
cmpb
mov
adc
shrb
sub
add
xchg
std
pop
cmp
adc
roll
push
push
mov
cmpl
shrl
mov
lea
rclb
or
xor
add
das
or
dec
or
mov
orb
and
rorl
ljmp
int
jle
popa
push
xchg
stc
fdivrl
jno
inc
xor
icebp
cmp
std
sbb
sbb
inc
jmp
dec
fdivrp
ss
rcr
psubw
popa
add
repnz
sub
enter
scas
dec
pop
outsl
mov
mov
cmc
scas
mov
jmp
in
std
xor
outsb
cs
mov
dec
das
jp
ja
mov
and
lds
int3
shrb
xchg
jbe
pushf
ret
ror
ret
sbb
adc
mov
test
in
arpl
mov
mov
pop
sub
add
test
jo
test
bound
sub
xor
mov
mov
in
xor
mov
mov
shufps
sub
repnz
fwait
sbb
outsl
push
and
add
andl
fisubl
xor
pop
sti
fld
adc
cmp
cwtl
clc
jecxz
and
loope
rcr
mov
mov
pushf
mov
cmpsb
fisttps
xor
push
cmpsl
mov
pop
dec
cmp
cwtl
mov
mov
mov
jns
es
sub
and
into
daa
test
mov
jae
adc
inc
test
and
sub
sub
dec
xchg
push
mov
pop
lcall
xorb
sbb
mov
cmpsb
pop
or
std
adc
ss
sbb
sub
shr
sti
frstor
and
out
std
ret
push
xor
jg
pop
push
pop
pop
inc
paddd
and
pushf
sub
lret
xchg
lock
mov
add
push
jecxz
and
push
mov
loopne
lea
xor
xchg
sbb
movsb
cltd
xchg
and
and
dec
adc
push
jecxz
add
fcmovnbe
inc
std
int3
dec
iret
fs
jmp
mov
inc
mov
cmp
into
fdivl
pop
inc
and
insb
dec
xchg
add
mov
or
js
ss
insb
xlat
ret
sub
dec
je
dec
mov
mov
repz
lea
sub
jl
pop
dec
xorb
aam
mov
mov
add
icebp
mov
das
fadd
jae
lea
jmp
cmpl
sub
shll
dec
test
dec
fnsave
push
jmp
loope
jnp
repnz
adc
inc
lcall
and
in
mov
lock
movsb
sbb
lahf
imul
xor
mov
sub
push
add
call
mov
add
jl
push
stc
add
je
sbb
adc
movsl
sbb
rcrb
dec
cmp
movsb
inc
inc
jo
pop
out
xchg
dec
xchg
sub
sti
loopne
rcrb
push
push
jnp
xchg
jb
aaa
rol
pop
push
add
xor
popf
sbb
or
or
or
pop
inc
sti
add
lret
test
or
jns
orb
test
push
ret
mov
mov
pushf
ret
push
sahf
pop
test
in
push
bound
add
push
in
das
or
cmp
xchg
movsb
mov
push
roll
dec
insb
stc
push
mov
adc
xchg
mov
movsl
sbb
in
add
jecxz
or
mov
push
je
cwtl
xchg
mov
or
sbb
mov
loopne
cwtl
iret
xchg
js
add
stc
xchg
test
scas
gs
outsb
or
rclb
pushl
xchg
or
roll
mov
push
mov
cmpb
pop
dec
jp
int3
mov
add
cmp
je
cmp
aaa
test
fdivrl
pop
lret
sbb
mov
adc
xor
addl
pop
insl
test
mov
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
mov
cmp
or
lock
cmpl
int3
push
or
sbb
add
inc
dec
pushf
jae
insb
push
or
ret
sbb
adc
xchg
sub
ret
jmp
in
clc
sbb
xor
aas
mov
xchg
sbb
inc
subb
inc
adc
lahf
add
or
lods
push
sbb
testl
or
cmp
adc
push
adc
cmpb
data16
mov
mov
cmp
dec
imul
push
jns
fdivrl
jne
mov
push
test
cmp
dec
dec
xor
clc
cld
add
adc
stos
es
dec
enter
call
mov
or
stos
fs
jns
or
lds
les
mov
cmp
add
and
cmp
call
mov
adc
inc
sbb
shr
scas
fxtract
jne
push
js
fildl
cld
loopne
fnstenv
mov
and
arpl
jbe
repz
dec
fmuls
cwtl
inc
mov
out
push
sbb
xlat
or
ja
push
cmp
filds
push
push
rolb
in
cmc
movsb
ficomps
popa
sahf
sbb
inc
insl
or
mov
pop
jae
pop
cs
pusha
push
ret
insb
std
sbb
push
hlt
neg
sbb
and
in
testl
movzwl
push
adc
insb
les
mov
jnp
adc
inc
test
and
add
mov
push
das
daa
add
xor
enter
sbb
sbb
sbb
movb
mov
add
je
adc
mov
idiv
aad
jge
jge
add
cmp
jbe
or
jne
xorb
add
mov
sti
cmp
jle
outsl
mov
das
cmp
push
xchg
push
in
push
mov
inc
cmc
jmp
sbb
or
orl
cmp
insl
fdivp
sbb
or
ja
and
push
imulb
cwtl
sbb
stos
mov
sub
sub
scas
adc
cmp
loope
lods
inc
xchg
out
mov
js
push
mov
cmc
test
mov
notl
rclb
jmp
cmpsb
adcl
xchg
xor
dec
add
pop
adc
or
mov
or
cltd
shlb
cmpsl
pushf
and
test
mov
jnp
sub
jg
cltd
or
dec
add
pop
mov
ffreep
sbb
adc
dec
sub
add
or
inc
popf
or
jbe
idivb
sbb
pop
xor
or
cmpl
add
insb
mov
mov
jecxz
push
out
push
pushf
out
jo
xor
push
ljmp
xlat
fdivr
inc
sbb
push
mov
and
or
sub
or
sbb
mov
loope
xchg
or
or
and
xchg
xchg
imul
out
in
outsb
add
cmc
inc
cmp
xchg
sbbl
movsb
mov
add
shll
inc
and
out
xor
or
imul
andb
fistpll
xchg
mov
jb
push
cmc
nop
mov
jae
jmp
cmpsb
outsl
bound
pop
or
arpl
sbb
jmp
xor
push
cmp
pushl
je
cmp
ficoml
clc
push
add
xchg
shll
push
push
addl
sbb
mov
cli
dec
jo
ret
std
sbb
sbb
call
jb
outsl
rcrl
jle
mov
add
inc
add
push
add
aas
mov
call
dec
adc
hlt
mov
jbe
pop
test
or
fmull
cltd
addr16
out
pop
sbb
sbb
cmpsw
xor
cs
jp
dec
mov
fnstcw
sub
jne,pt
push
adc
rcrb
sbb
pop
movsl
or
pop
xchg
pop
pop
jae
and
jge
arpl
pop
imull
fucomip
cmp
pop
inc
mov
packsswb
test
arpl
fdivl
ja
rcl
inc
scas
xor
and
dec
dec
xchg
add
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
orl
sbb
call
push
and
mov
cmp
xchg
push
sub
and
pop
mov
mov
adc
and
inc
sub
mov
add
pop
leave
roll
push
addr16
and
rcr
mov
pusha
pop
loope
xchg
or
js
mov
inc
cmp
push
inc
jg
mov
ret
xchg
cmp
mov
out
pop
inc
les
aam
jne
mov
fcomps
add
and
add
loope
loopne
jle
or
mov
xor
sahf
gs
and
adc
or
or
mov
adcb
jge
mov
out
push
test
xorb
inc
jle
push
push
pop
pop
test
pushl
push
lret
mov
dec
fsub
pop
add
in
rorb
into
and
and
std
add
push
ja
or
movd
pushf
adc
sub
sub
sti
jb
in
into
sbb
mov
mov
sub
roll
sbb
in
mov
test
lea
fistps
or
test
test
aaa
mov
add
popf
pushf
xor
xor
xor
sub
cmp
xchg
out
in
aaa
xchg
and
pop
je
cmp
fdivrs
adc
push
jae
ss
rorb
aas
or
or
test
mov
out
jmp
mov
pushl
sub
sbb
test
adc
pop
test
add
pop
mov
lea
out
xchg
rcrb
sbb
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
jmp
jae
aam
mov
jae
leave
jmp
push
inc
sub
xchg
mov
enter
cmp
dec
push
xchg
push
test
push
adc
add
orl
fisttps
mov
sbb
add
inc
pop
cmpsb
pop
push
sbb
adc
push
add
mov
je
mov
mov
shlb
mov
jae
dec
adc
push
adc
mov
adc
sbb
testb
push
das
dec
and
filds
sbb
adc
add
lock
lret
loope
rdmsr
push
lea
cmp
jle
mov
aaa
lcall
sbb
sub
ja
hlt
outsb
cmp
adc
fisttps
imul
nop
and
or
cmpsb
add
add
fisttpll
pop
xor
push
fsubrs
pusha
cmc
ret
gs
and
test
addl
sbb
lret
adcb
xor
pop
adc
mov
jecxz
push
fsubr
push
dec
or
dec
and
out
inc
cmpl
enter
adc
pop
sub
sbb
sub
dec
add
mov
inc
and
data16
inc
jo
out
pop
mov
adc
outsb
call
enter
xchg
sub
mov
je
mov
add
push
jmp
mov
orl
imul
std
incl
add
andl
cmp
xchg
out
xor
sbb
push
loop
addl
adcb
push
push
push
mov
daa
bnd
mov
bound
xchg
call
inc
js
dec
ret
daa
fidivs
lea
push
sub
sbb
jl
push
inc
push
xor
xor
mov
or
pop
ret
and
or
xchg
xadd
cmc
mov
jae
loopne
jge
fisttps
leave
fbld
fdivl
cmpb
jmp
cmp
jae
inc
jmp
push
cmp
cmp
sub
pop
pop
lea
adc
cmp
fcmovb
sub
push
jns
nop
subb
cmp
mov
cmc
adc
xchg
fdivs
sub
inc
sub
dec
sub
out
push
sti
push
mov
lret
mov
mov
call
mull
cmc
dec
in
add
in
sbb
adc
sbb
push
jae
or
mov
push
sub
shll
lret
dec
jb
jecxz
add
xor
add
test
aas
adc
push
lea
cli
adc
jo
mov
lret
mov
pushf
mov
mov
int3
pop
xlat
push
xrelease
push
wbinvd
fnstcw
aad
xor
pop
push
fdivrl
cwtl
mov
xor
adc
xchg
mov
movntps
int
or
xor
jp
je
xor
popf
mov
xchg
cmp
xor
or
lahf
mov
cmp
jb
inc
test
cmpb
push
ss
add
jo
xor
mov
cmp
sub
push
inc
or
mov
hlt
ds
es
xchg
cmp
add
sahf
sbb
add
adc
js
mov
std
cmc
imul
jo
pop
push
enter
add
out
push
add
xchg
arpl
jb
nop
sbb
pusha
pop
jmp
push
imul
mov
insb
test
lock
cwtl
mov
in
push
clc
xchg
or
jp
push
jbe
or
pop
mov
addl
push
add
lea
pop
mov
mov
pop
divl
xor
or
add
aam
jmp
add
cmp
adcl
mov
ss
push
cmp
in
add
push
adc
pop
sbb
mov
sbb
call
out
add
lea
popa
mov
imul
add
out
push
or
adc
shlb
cmp
adc
sbb
ret
popf
or
push
dec
cmpl
or
loop
pushl
mov
inc
push
iret
sub
push
pusha
jo
adcl
ret
daa
and
mov
sahf
xchg
sbb
inc
es
gs
jne
cmpsl
popa
mov
mov
xchg
push
ds
mov
popa
cmp
add
mov
insl
repnz
jno
dec
xchg
fs
mov
adc
push
push
mov
inc
or
sub
add
mov
jmp
fwait
orb
data16
bound
bound
jo
sub
mov
orl
jo
jns
jnp
pop
adc
or
mov
dec
sub
or
mov
inc
lods
arpl
mov
inc
xchg
mov
xchg
ja
outsl
add
fidivrl
enter
pop
pop
sbb
xor
xchg
or
sbb
jo
jge
leave
xchg
mov
leave
jae
lret
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
mov
inc
fidivrl
inc
xor
les
add
or
push
push
orb
loope
jne
sub
jp
push
sbb
mov
mov
inc
or
inc
clc
xchg
add
xor
jle
jne
in
jb
adc
lea
dec
xchg
push
pop
sbbb
fisubrs
lcall
adcb
adc
sub
jns
inc
jle
inc
cwtl
fs
fisubl
push
sti
mov
add
cltd
pusha
movsb
push
repnz
cltd
inc
out
std
jns
inc
dec
aas
push
int3
adc
sub
add
adc
or
nop
jo
lea
adc
test
mov
adc
or
sbb
add
cmp
jne
inc
pusha
cmp
bound
pop
push
imulb
push
adc
cmp
jno
loopne
cli
leave
push
add
add
dec
dec
adc
jo
cwtl
xor
in
mov
lcall
ret
inc
data16
pop
dec
in
push
push
inc
loop
mov
mov
mov
adc
cs
idivb
iret
mov
add
mov
jo
sub
aaa
popf
and
inc
jnp
cmp
fwait
ret
mov
pop
push
inc
push
push
dec
rorb
daa
out
psrld
fldt
pop
call
fimuls
mov
mov
xchg
incb
test
je
test
xchg
or
jo
mov
js
mov
pop
push
mov
mov
cmp
dec
stos
push
lds
jmp
js
push
or
roll
sbb
and
push
popa
cmp
insl
jge
aad
clc
xor
insb
cmc
or
daa
fdivrl
fcmovne
fsubrs
push
jge
adc
pop
xchg
fwait
mov
fidivs
adc
shll
loopne
lods
sbb
and
jb
push
push
jecxz
sbb
dec
push
clc
loope
jl
js
fcomi
js
or
jb
and
adc
adc
add
add
clc
lcall
adcb
xchg
shl
jbe
pop
in
pusha
pop
adc
adc
pusha
push
xchg
push
inc
jmp
adc
arpl
add
jle
cmp
fs
in
repnz
leave
adc
pop
fimull
dec
ret
or
mov
inc
dec
adc
jmp
jns
mov
ret
dec
lods
stos
aaa
jno
sbb
sub
push
cli
sub
nop
add
jl
inc
into
push
mov
lea
push
aam
jbe
test
push
mov
add
cmpsb
rol
nop
jb
daa
sbb
push
leave
push
jmp
cmp
shl
xor
clc
dec
cmp
repz
sub
rcrl
pop
xchg
add
js
cmp
movups
or
nop
pop
dec
clc
xor
nop
stos
test
dec
les
add
insb
add
jne
icebp
jmp
cs
cmp
fisubs
push
lea
xchg
and
lret
ror
sbb
add
jo
push
adc
cs
out
and
rorl
daa
jge
adc
sbb
out
mov
sarl
pop
sub
test
es
xchg
hlt
fcmovb
adc
mov
add
add
jl
inc
loop
inc
subl
into
addl
jb
popa
stos
sti
pop
push
lea
sbb
cmp
sub
push
jne
ja
sub
xor
test
add
and
lahf
inc
test
lock
sub
push
movl
or
or
mov
dec
or
rolb
cmp
mov
ja
pop
data16
icebp
call
repnz
jno
push
nop
mov
mov
push
push
dec
push
cmp
inc
nop
inc
rclb
add
push
pop
and
pop
jae
mov
mov
push
mov
repz
pop
cmp
pop
in
sub
adc
mov
jmp
into
out
add
lock
mov
out
lock
jg
imulb
push
xor
mov
je
adc
rol
stc
sbb
pop
mov
ret
dec
inc
and
xor
adc
cmp
and
aaa
mov
leave
pop
push
jne
sub
data16
cmp
lea
or
and
ss
add
sub
dec
dec
jns
sbb
iret
push
fwait
push
jmp
out
inc
pusha
mov
es
add
clc
nop
xchg
pop
mov
add
pop
adc
in
test
mov
fsub
dec
inc
fsubl
dec
in
xor
xor
dec
mov
sub
mov
and
or
push
sti
out
inc
sbb
sub
ret
or
sbb
js
je
nop
jbe
clc
dec
push
pop
xor
jge
jmp
and
mov
mov
mov
and
push
sub
jo
cmp
sbb
jo
cmpl
imul
add
adc
push
fnstsw
mov
mov
cmc
and
sbb
push
xor
jg
in
jo
xor
cmpl
mov
lods
add
jbe
dec
cmp
roll
push
cmp
loopne
jnp
xchg
inc
in
mov
jnp
mov
push
push
aaa
cmp
roll
push
push
push
dec
enter
out
pusha
dec
xchg
sub
pop
inc
adc
sbbb
add
icebp
jle
inc
dec
sbb
lahf
lods
pop
loop
push
mov
daa
shlb
mov
popf
les
ffreep
test
add
sahf
jns
add
pop
add
mov
or
sub
test
cmp
popa
aas
push
or
push
jne
push
push
leave
fdivrl
js
jne
adc
pop
xchg
pop
mov
mov
or
jne
pop
icebp
loopne
and
decl
adc
push
ljmp
fidivrl
fists
lahf
cmp
jo
mov
mov
pusha
jnp
cmp
je
lret
cmp
adc
fadds
pop
ret
push
mov
or
ret
insl
repnz
cld
divb
add
add
insl
lods
sub
in
dec
add
xchg
shr
aad
or
push
xchg
mov
ja
movsb
inc
mov
ror
add
push
xor
sarb
sub
xor
sub
enter
das
pop
xchg
mov
fiaddl
mov
inc
shrl
adc
mov
out
sbb
imul
pop
dec
scas
lcall
inc
sahf
fbstp
aam
pop
mov
jg
xchg
sbb
mov
mov
push
pop
mov
in
rcll
inc
cmp
sarb
push
jmp
xchg
call
sub
insl
push
lret
mov
flds
sub
xchg
nop
jnp
and
popa
or
dec
mov
rolb
shlb
or
mov
andb
andl
xor
push
sarl
mov
rolb
stos
adcl
add
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
pushw
mov
adc
add
movsb
jmp
insl
dec
add
adc
mov
adc
popf
sub
xor
sub
cmp
je
pop
adc
add
in
push
or
jne
push
or
mov
inc
cmp
inc
fsubs
add
adc
xchg
cmp
push
dec
xchg
or
jnp
loope
cmp
cmp
mov
js
cmp
jl
mov
rorb
xchg
loope
ja
lret
les
jae
mov
xor
sbb
push
adc
cmp
hlt
push
loop
adc
xor
or
fstpl
push
test
outsl
sbb
ficoms
jmp
add
out
stc
mov
and
adc
mov
jnp
or
lea
insb
mov
loope
mov
addr16
push
inc
mov
add
and
xor
pop
dec
dec
or
or
das
lds
fmuls
sbb
shll
and
dec
rorl
sbb
scas
sbb
nop
fsts
fimull
or
popf
sub
dec
ja
cmpb
movb
pop
inc
and
popa
sub
vpcmpgtb
jle
imul
sbb
xchg
sbb
add
cmpsb
imul
cmpsb
imul
jns
or
call
leave
xchg
cwtl
xlat
or
outsb
in
sti
or
mov
mov
add
inc
mov
xor
addr16
scas
sub
sbb
rol
push
adc
int
adc
and
mov
movb
sbb
and
mov
pop
sbb
std
xchg
jae
fadds
jbe
inc
jl
js
inc
push
fs
insb
push
fs
push
push
fs
push
cmp
xchg
mov
push
loope
mov
jge
xor
inc
ficoms
rcrb
addb
mov
pop
sbb
clc
and
mov
mov
icebp
inc
pushf
cmp
mov
xchg
daa
arpl
pop
adc
out
sub
adc
push
and
or
mov
add
or
subb
icebp
lea
sbb
rcrl
push
test
add
cmovle
cmpb
push
or
leave
add
jae
and
ret
pushl
lret
in
je
push
jl
adc
adc
jl
bound
sbb
in
lar
sub
or
inc
ret
mov
push
in
push
mov
shl
ret
mov
and
add
pushf
xchg
cmpsl
pusha
and
xchg
push
dec
ja
adc
jno
mov
mov
sbb
xorl
sub
subl
sub
daa
inc
dec
sbb
sahf
add
imul
inc
pop
xor
pop
add
mov
jmp
and
xchg
mov
fcmovnbe
jne
test
mov
xchg
lret
stc
fldl
sar
dec
dec
mov
mov
lods
cmp
sub
sub
and
mov
inc
xor
insl
jmp
scas
push
mov
roll
xchg
stc
push
jne
xchg
ss
mov
sub
mov
pop
dec
jne
cmp
sub
data16
cmp
mov
adc
xor
imul
lcall
mov
push
dec
mov
lock
xor
dec
jge
or
ficoms
dec
js
testb
and
xchg
sbb
dec
mov
and
dec
jae
push
scas
inc
and
inc
stos
add
xchg
or
lods
popf
jecxz
lods
aam
xchg
mov
test
jo
cli
out
fidivrs
or
adc
adc
insb
lods
pop
mov
or
pop
ds
inc
pusha
call
add
inc
or
xor
test
lods
outsl
push
es
cwtl
adc
test
xchg
scas
inc
mov
adc
add
jo
and
add
sbb
aad
xlat
adc
enter
inc
cmovno
test
mov
das
mov
je
sbb
inc
mov
out
push
mov
sbb
or
mov
mov
and
sbb
jno
orb
xor
int3
lock
inc
cmp
lock
adc
sub
jne
or
sub
out
mov
inc
mov
fs
xchg
pusha
pusha
insb
insb
ret
sbb
scas
les
add
jecxz
mov
or
mov
icebp
mov
testl
je
cmp
je
popf
sbb
cmp
jne
or
push
mov
sub
inc
adc
sahf
mov
inc
mov
hlt
sti
push
sub
inc
adcb
and
orb
or
xchg
add
adc
outsb
dec
adc
enter
jnp
lock
and
cld
lock
iret
sub
dec
jmp
adc
out
jecxz
push
push
pop
xor
add
push
rorb
mov
mov
sahf
mov
add
push
sbb
mov
sarb
pop
data16
lret
sub
xor
cmp
mov
sbb
pop
or
jle
sahf
push
flds
pop
cmp
sbb
test
mov
scas
xor
inc
loop
jp
xchg
cwtl
xor
pop
add
rol
and
jle
or
sbbb
fldenv
and
jne
adcb
jb
xchg
push
sbb
jns
xor
jae
maxps
popa
sbbl
and
loope
shlb
xchg
shrb
loopne
jl
adc
adc
je
shrb
mov
pusha
xlat
cmp
fldlg2
lret
cwtl
fidivrs
inc
fsubrs
jne
sub
popw
int3
mov
sbb
rcl
push
add
js
push
shl
add
dec
push
lea
mov
cwtl
push
out
add
add
lea
or
lret
push
or
lretw
sbb
push
fwait
mov
mov
adc
pop
fcoms
push
testl
in
lret
int3
xchg
and
add
adc
sub
mov
dec
xchg
sbb
daa
mov
inc
enter
mov
aam
hlt
insb
and
fcompl
cmp
mov
mov
loopne
add
int3
pop
pusha
cs
pop
mov
mov
dec
cmpb
dec
rclb
cmpsb
fdivs
dec
loopne
push
sbb
xor
ljmp
in
outsl
dec
ret
jge
int3
mov
dec
xchg
pop
sbb
sbb
rolb
leave
jbe
and
and
mov
insl
xchg
xor
pop
mov
pusha
rolb
mov
pop
leave
les
or
imul
ficoml
pop
or
out
jmp
std
loop
xchg
shlb
mov
push
aas
push
fs
cmp
out
rclb
push
adc
mov
jae
xor
adc
sbb
fistpl
in
ret
xor
and
ficoms
cli
sub
movsb
push
inc
mov
icebp
xchg
dec
inc
in
sub
mov
push
push
fsubrs
cmp
adc
fiadds
sarb
add
jle
xchg
mov
mov
imul
fmuls
in
into
outsb
dec
call
outsl
dec
loop
je
push
dec
out
pop
push
incb
xchg
lcall
sbb
rcrb
push
mov
lcall
cmp
dec
pusha
sub
test
stc
movsl
add
adc
ret
push
out
pusha
mov
sbb
and
jge
jo
adc
daa
pop
push
or
aaa
push
xchg
adc
sub
inc
or
lock
or
or
jmp
xor
rolb
lock
push
add
add
icebp
mov
dec
sbb
fdivp
push
stos
fstps
hlt
sub
mov
jns
jne
jne
jae
ja
movsl
sub
movsb
jns
pop
cmp
je
push
push
insl
or
movsl
dec
repz
adc
shl
sbb
lea
cmp
push
mov
or
sub
pop
and
push
sub
test
nop
push
aam
add
insb
xor
sub
inc
sbb
push
and
add
jnp
stc
in
sub
fistl
cmp
and
and
outsb
dec
into
sub
adc
sbb
and
pop
fisubs
and
je
or
test
int
jp
sbb
rcrl
adc
jp
jo
test
pop
cmp
je
in
cmp
push
pop
scas
push
movsl
int3
dec
jnp
out
push
cmp
add
xchg
add
sti
cmp
push
add
int
call
shrl
push
and
adc
leave
loopne
shll
test
adcb
cmp
jge
cmp
push
push
mov
push
pop
jb
xor
andl
clc
sbb
addb
xor
call
add
in
or
push
mov
xor
icebp
or
clc
jecxz
inc
mov
xchg
push
xor
stos
push
dec
lcall
int3
or
push
jbe
pop
rcll
stos
sub
xchg
push
mov
rorb
add
mov
inc
cmpsb
push
sbb
lret
pop
jmp
inc
add
or
ja
xchg
jnp
cwtl
xchg
add
and
divb
sub
and
xor
xor
rclb
loopne
adc
jg
or
cmp
add
fwait
xchg
cmp
fstl
push
shll
and
dec
adc
js
push
cmp
subl
mov
inc
fistl
cmp
aad
lea
lret
std
js
lds
jnp
cmp
or
dec
shll
add
mov
pop
rol
xchg
rolb
sub
movsb
push
inc
in
jmp
or
loope
test
or
orb
and
inc
cmc
js
aas
lea
adc
subb
pushl
mov
cmp
aaa
call
lea
ret
sub
mov
mov
inc
xchg
mov
inc
sub
add
mov
sub
push
adc
lods
push
pop
pop
mov
ret
pop
pop
sub
loopne
insl
cs
jl
andl
mov
ret
js
lds
push
insl
sub
outsb
jnp
shll
jae
and
mov
xchg
dec
or
dec
xor
xor
push
push
sbb
adc
scas
inc
xchg
add
push
faddl
fbstp
push
test
jo
or
call
cmp
pop
mov
negl
sub
mov
cmpsb
rcr
push
cmp
loopne
mov
adc
jl
and
mov
xor
imul
dec
add
sub
xor
pop
pop
js
push
jmp
and
cmp
jbe
adc
adc
sbb
bound
xor
inc
push
add
or
call
sub
or
jns
mov
movsb
add
jne
sub
fs
pop
ja
push
pop
sbb
lock
sbb
push
mov
xor
jle
pusha
lock
ret
cmp
cmp
cmp
or
imul
pop
testb
je
fdivl
aaa
orl
dec
or
dec
jl
loopne
testb
fisttpl
test
jne
lret
jl
inc
sbb
adcb
sbb
fisttps
clc
lods
push
push
leave
pop
fcmovb
or
mov
xor
ja
sub
mov
add
bound
adc
mov
out
add
inc
mov
cmp
xchg
sbb
popa
add
cmp
clc
xor
dec
push
or
push
loope
out
push
movsl
push
push
pop
ds
mov
mov
mov
and
xchg
cld
push
test
mov
xchg
ja
loopne
push
out
or
or
insb
pushf
pusha
xchg
test
mov
pop
xlat
push
mov
mov
cmpsl
cmp
push
xchg
lcall
movl
and
xor
fcoms
mov
clc
inc
imul
jmp
insl
sti
pushf
lock
nop
or
mov
stos
dec
ror
sub
fwait
xchg
jbe
add
push
pop
push
incl
inc
jbe
imul
cltd
negl
and
jge
push
xchg
ja
mov
ja
or
lea
andb
xchg
js
add
stos
push
ret
push
lret
inc
daa
mov
dec
push
and
popa
add
mov
pop
mov
movsl
out
addr16
addl
aas
movsl
add
xchg
and
xor
push
repnz
icebp
add
pop
sbb
add
testb
repz
mov
inc
pop
dec
pop
dec
pop
aas
or
sub
inc
inc
sbb
js
iret
adc
imul
outsl
dec
add
mov
pop
andl
cwtl
push
push
stos
loope
popl
nop
xor
adc
xchg
ficoms
xchg
in
fucomp
push
add
xor
pop
jns
or
orl
sub
dec
pcmpeqd
push
adc
test
test
sub
or
sbb
mov
aaa
pop
pop
push
xor
push
or
loop
inc
jae
mov
loop
xchg
pop
xchg
or
fsubr
orl
add
xor
rclb
js
andl
nop
dec
mov
jmp
sahf
or
xor
add
push
mov
hlt
push
and
add
or
adc
sbb
adc
xor
jge
adc
sbb
xor
add
cmp
loope
sub
loope
adc
add
iret
imul
push
xor
xchg
jo
or
sub
test
adcb
jge
sbb
xor
aas
aad
pop
jmp
mov
mov
aam
cli
jae
mov
int3
and
cli
push
cld
sub
push
fbld
pop
cli
test
pop
adc
inc
insb
shr
xor
xchg
out
inc
add
out
push
rorb
loope
fsts
or
adc
pusha
sbb
add
hlt
inc
sbb
mov
insb
std
adc
mov
cmp
addl
sbb
jno
andl
or
pop
insl
out
insl
or
or
movsl
push
pop
in
mov
hlt
sbb
xchg
or
or
sbb
sub
jmp
pop
adc
add
repnz
cwtl
sub
jns
inc
and
ja
sbb
push
int
dec
add
sub
push
fdivs
or
push
xor
xor
push
sbb
mov
pop
ret
das
and
in
xchg
mov
mov
mov
xorl
mov
rcll
push
adc
test
xor
adc
mov
push
mov
adcb
mov
push
add
adc
mov
inc
call
movsb
sub
push
add
mov
out
movb
mov
inc
and
lock
xchg
loop
pop
pop
adc
scas
sub
inc
jno
addb
jp
jae
lret
js
and
rolb
into
je
enter
push
push
imul
push
or
and
pop
mov
push
pop
leave
js
mov
push
mov
or
add
orl
idivb
addr16
push
inc
cmpb
aaa
ret
jbe
daa
insb
sub
enter
nop
push
xor
repz
sbb
or
xor
and
xchg
test
or
in
rorb
gs
inc
jo
repz
add
dec
sbb
dec
je
ret
and
ds
or
mov
push
out
fwait
scas
add
inc
int3
test
sbb
int
cmp
xor
cld
jmp
adc
nop
jo
dec
insb
mov
inc
cmp
inc
jge
fwait
push
popa
mov
addr16
adc
loope
mov
push
pop
jb
add
test
dec
insb
add
jl
and
jns
cmpsl
sbb
mov
pop
fs
or
addb
dec
fbstp
dec
fcomps
sub
xor
and
sub
inc
mov
les
fsubrl
aad
cmc
test
push
mov
sub
fucomip
repnz
pop
testl
sbb
add
xchg
dec
es
xchg
sbb
dec
mov
sbb
dec
test
jo
add
pop
xchg
adc
cmpsb
or
cmp
jle,pt
dec
push
fsubrp
add
and
sub
add
adc
xor
shlb
scas
add
jbe
push
out
or
pushf
scas
mov
cwtl
fldl
jo
add
loope
push
pop
and
cmp
insl
shl
out
divps
mov
adc
or
addr16
ret
out
cmp
ret
dec
ror
adc
dec
xchg
mov
cmpsb
add
or
mov
cmp
and
add
adc
das
jl
jae
inc
push
cwtl
inc
mov
pop
daa
fs
cmp
js
movl
xchg
inc
mov
or
cmpl
xchg
xor
mov
lea
mov
mov
imul
cmp
sbb
sbb
imul
mov
xchg
insl
dec
jmp
andl
jb
xorl
lret
add
pop
cmpl
adc
push
and
jle
ds
sub
daa
inc
fcompl
inc
adc
dec
push
mov
cmp
sbb
push
lret
mov
addl
adc
adc
adc
loopne
test
mov
mov
mov
or
stos
sti
jle
arpl
add
jno
lods
adc
popl
js
mov
in
daa
mov
xchg
push
dec
pop
push
lods
add
daa
cld
sbb
outsb
mov
or
lea
loop
cmp
add
or
sbb
adc
pusha
shll
in
mulb
inc
inc
shl
adc
adc
cmpsl
adc
adc
push
pusha
lcall
inc
nop
fs
jo
clc
push
xchg
cmp
loop
pop
nop
push
movsl
dec
push
cmpsb
addb
ret
jg
lcall
dec
ja
je
or
je
or
sub
adc
xchg
scas
andb
dec
jle
dec
push
or
add
adc
jne
sahf
cmp
negb
pop
add
jmp
cmp
movsl
test
bound
sub
cmp
inc
push
loop
loope
add
ja
mov
aam
cld
jnp
js
jbe
mov
sbb
xor
push
mov
lret
or
mov
pop
add
enter
js
cmpsb
or
add
inc
pop
sbb
push
pusha
dec
ret
pop
sbb
jbe
sbb
or
adc
mov
aad
loopne
shrb
loopne
mov
xor
xchg
pop
test
mov
pop
lcall
ret
push
dec
imul
dec
ja
test
loope
imul
or
adc
xor
subb
outsb
fcmovnb
mov
sarl
and
or
ret
push
adc
inc
dec
add
add
in
or
sbb
inc
popa
stos
mov
cmp
inc
enter
sbb
add
int3
mov
adc
and
mov
cmp
loopne
add
push
shr
push
push
or
and
adc
vpshuflw
mov
mov
fsubl
pop
lds
ret
out
je
push
test
xchg
idiv
inc
das
push
inc
cs
or
xchg
hlt
or
push
xchg
pusha
mov
xor
addl
push
les
sub
lock
mov
mov
pop
daa
push
or
pop
shr
ret
pop
lcall
push
mov
and
sbb
les
xchg
add
xchg
dec
push
dec
add
por
enter
mov
push
in
add
add
add
cmp
xchg
add
dec
cwtl
and
outsb
adc
mov
adc
add
popa
pop
add
idivl
mov
jne
sub
rcrl
leave
std
js
lods
jbe
ss
add
fcoml
je
dec
sub
in
push
jnp
ret
or
shl
fiadds
push
ret
pop
cmc
fcomp
xchg
data16
mov
inc
orl
or
mov
push
push
or
xor
cmp
mov
push
mov
xchg
js
xor
aas
sub
dec
les
add
ret
nop
les
dec
fs
fucomp
xchg
push
xchg
icebp
xor
dec
adc
inc
or
test
sbb
mov
aas
add
lods
or
sbb
or
mov
divb
out
fidivrl
stos
scas
std
decl
or
in
xchg
adc
jmp
cmp
inc
xchg
or
je
inc
and
inc
mov
jmp
dec
pop
jl
je
add
pop
xor
popa
mull
adc
outsb
push
mov
mov
cmpsb
sarl
sub
jne
mov
and
xor
push
adc
and
testb
dec
icebp
fcoml
loop
mov
ds
mov
sbbb
clc
pop
inc
sub
mov
arpl
pop
mov
dec
arpl
sbb
push
dec
ds
xchg
pop
sub
sbb
test
outsl
dec
and
sbb
je
daa
or
shll
fs
jmp
jb
clc
xchg
or
or
lahf
xchg
mov
pop
adc
cmp
ja
movsl
and
js
pop
popf
aam
lods
popf
jp
and
sub
loop
jne
sbb
test
and
push
jnp
sbb
xor
add
mov
inc
inc
fldl
mov
or
mov
adc
mov
adc
dec
push
addr16
add
or
fstpt
xorl
test
adcb
test
in
cmpsb
dec
cmp
in
scas
rclb
mov
xchg
push
jno
fimuls
leave
fcomps
je
rcl
add
pop
jo
rolb
adc
cwtl
imull
push
push
xchg
push
sub
lds
mov
push
inc
pop
jae
data16
xor
aaa
prefetcht2
xchg
in
mov
inc
push
dec
cmp
movsl
xor
dec
hlt
and
shlb
adc
incb
call
pop
adc
dec
or
mov
scas
add
mov
cmp
arpl
mov
mov
sbb
and
std
push
mov
mov
adcl
or
mov
add
adc
sub
or
out
or
stos
enter
inc
loop
mov
scas
push
stos
xor
les
dec
push
mov
add
and
cmpsl
jbe
and
mov
mov
fld
ja
outsb
sbb
sub
cmp
inc
js
pop
mov
push
lock
or
cmpsl
push
jmp
pop
sub
sub
xor
dec
mov
mov
stos
or
sub
add
and
ss
addr16
rcll
mov
inc
cmp
pop
jne
xor
adc
cli
inc
les
inc
xchg
int
pop
clc
jmp
mov
add
push
jne
test
xchg
or
push
push
or
js
je
xor
popa
add
sarb
dec
adc
push
js
jnp
or
jl
ds
lock
pop
das
push
sbb
xchg
jmp
std
xchg
jbe
cwtl
and
adc
mov
inc
xor
stos
icebp
dec
adc
and
lods
push
out
sub
adc
or
cmp
in
xchg
xor
cmp
mov
adc
cmp
push
cltd
data16
add
add
rcr
add
cld
leave
inc
adc
xchg
xchg
add
adc
and
divb
popa
das
sub
sub
and
jle
cmp
xchg
std
add
mov
adc
jbe
xor
lcall
ss
adc
mov
cmp
inc
pop
fsub
sub
mov
add
lcall
leave
adc
xor
add
mov
xchg
push
enter
push
sti
xchg
cmp
enter
sbb
cmc
or
add
mov
mov
test
sub
sbb
or
packssdw
lcall
jns
inc
push
dec
pushf
mov
cmp
xchg
fnsave
in
addr16
cmp
popa
jmp
dec
lods
repz
xchg
and
inc
lock
loope
cmpsb
cmpsl
test
jecxz
mov
adc
jmp
in
push
fcomp
std
jg
cli
add
or
or
in
jns
xor
cld
icebp
xchg
pop
add
sbb
adc
faddl
and
jl
addl
test
daa
sbb
mov
mov
adc
push
sbb
adc
pop
dec
cmc
push
mov
popf
add
in
dec
mov
xchg
loopne
fidivl
sti
and
mov
and
jmp
mov
lods
xchg
adc
pop
je
mov
inc
cmp
sbb
les
mov
std
mov
test
jno
or
cld
lods
mov
inc
bound
push
sbbb
sbb
add
xchg
adc
leave
call
subb
push
rcrb
sub
push
cmp
xchg
dec
sbb
sub
add
jp
jle
sub
jmp
xchg
mov
movb
inc
cwtl
add
clc
pop
mov
gs
stos
gs
dec
jp
cld
inc
xor
jmp
jo
leave
cli
fwait
outsb
lods
adc
push
cld
nop
je
sbb
or
popf
std
and
shl
xchg
inc
outsb
pop
adc
stos
cltd
push
jb
sbbl
add
je
xor
xchg
sbb
add
iret
adc
dec
jnp
arpl
sub
and
push
test
sbb
add
sbb
leave
adc
jns
xchg
add
repnz
jb
outsb
cld
ljmp
and
sub
or
lret
add
lret
cs
jne
lock
xchg
cmpsl
rcrb
push
xor
adc
sub
jb
mov
iret
and
xor
cmp
sahf
inc
push
inc
xor
cmp
push
inc
push
imul
jo
inc
xchg
sbb
iret
mov
jne
inc
out
iret
mov
inc
jne
dec
push
pop
ja
and
ret
gs
xchg
out
inc
push
sahf
out
or
insl
outsl
test
cmpsl
roll
dec
dec
jmp
int
mov
nop
xchg
push
push
push
lcall
rep
jg
push
pop
out
pop
and
jae
int
pop
das
pop
iret
pop
or
loop
sahf
inc
cmpb
mov
adc
pop
decl
call
addl
xchg
push
and
std
mov
adc
mov
push
popf
jno
test
mov
pop
adc
and
sub
cmp
jo
pop
pop
push
sub
xor
movsl
leave
jl
lret
xchg
pop
jbe
rorb
mov
xchg
movsl
movsl
push
sbb
rclb
movsl
push
movsl
jb
jae
pop
xchg
push
xchg
or
iret
push
adc
rcrb
int3
outsb
pop
xor
add
pop
adc
inc
sbb
adc
faddl
ucomiss
adcb
jg
or
iret
dec
je
cltd
faddl
inc
in
jl
sbb
call
or
inc
in
ljmp
mov
rorb
and
xchg
lahf
out
push
testb
cmp
or
pop
dec
cmp
push
jmp
or
loopne
js
push
pusha
add
mov
xchg
loopne
loop
add
jb
lret
cmp
jne
cmc
add
loope
sahf
rolb
imul
xchg
push
sahf
std
lcall
das
adc
add
sub
ret
jmp
fcoms
jl
popf
cmpb
add
push
pop
out
int3
mov
jne
lods
sbb
pusha
pop
pop
fs
push
or
pushf
xlat
aaa
add
popa
lret
loopne
sub
pop
andb
add
sbb
loopne
mov
ret
mov
mov
push
call
xlat
xor
mov
mov
push
adc
dec
or
cmp
loopne
rcrb
jae
movsb
out
dec
rclb
mov
ja
add
mov
fdiv
out
push
adc
adc
mov
push
push
add
push
pop
jb
mov
or
out
jbe
push
lahf
pusha
jecxz
adc
xchg
cmp
jl
lcall
dec
or
jg
cmc
push
fstl
stc
add
clc
jne
sbb
or
adc
add
ja
mov
das
pop
sbb
in
rclb
mov
add
test
xor
push
jmp
dec
or
push
dec
test
push
sbb
stc
fs
je
add
call
jb
orl
xchg
incb
fs
ja
dec
aas
insb
popf
call
cmp
call
cwtl
or
jmp
jae
and
in
xchg
pop
rcrb
gs
fstl
les
cmp
sbb
imul
sbb
test
repz
aaa
xchg
les
loopne
inc
dec
sbb
clc
cmpb
adc
push
mov
sbbl
jns
inc
mov
daa
clc
ret
lock
xlat
sub
jge
adc
jb,pt
or
dec
mov
or
and
cltd
mov
pop
addb
andb
push
mov
inc
lds
and
dec
enter
aaa
xchg
aad
cld
ja
dec
mov
mov
test
or
inc
mov
dec
cmpsb
adc
push
sub
cwtl
dec
add
sbb
jns
movsb
add
pop
fwait
jp
jae
xor
es
out
dec
cmpsl
mov
repz
push
pop
outsb
add
in
mov
cmp
nop
pop
xor
jbe
shll
push
leave
push
xor
pop
or
push
in
xchg
pop
fwait
add
cmp
fnstcw
jno
outsb
fnsave
outsl
jno
dec
or
arpl
adc
inc
xor
enter
jns
bound
sar
push
xchg
push
daa
inc
mov
sbb
xchg
sub
xor
add
adc
mov
push
dec
stc
add
test
push
insl
sbb
xchg
push
sub
jo
lahf
mov
out
dec
cmp
push
cmp
or
sbb
push
pop
pop
jmp
inc
pusha
dec
adc
cs
testb
test
push
xchg
xchg
ss
push
or
sub
cmpb
push
aad
imul
in
std
xchg
pusha
or
mov
mov
ljmp
xor
and
inc
xor
and
lock
mov
sub
repnz
xchg
std
aaa
aas
ja
dec
push
in
push
pop
inc
adc
pop
int3
mov
push
sbb
fistl
xchg
lahf
movsb
jno
js
jne
das
add
pop
andl
add
loopne
fisttpll
scas
leave
imul
inc
jnp
rol
sub
push
stos
call
aam
insl
cld
je
outsb
xor
pushf
jbe
jb
pop
xor
cld
aaa
loopne
sbb
sarl
xchg
mov
lcall
sub
mov
or
xchg
jl
lret
jp
mov
jbe
out
mov
popa
mov
sub
push
push
dec
pusha
sbbb
add
xor
sbbl
lds
or
fadd
push
push
adc
ss
loope
adc
xchg
add
xchg
add
push
sub
or
fdivrl
cmp
lea
jo
mov
push
lea
mov
pop
lcall
push
xchg
pop
adc
and
xchg
shrb
or
cmp
arpl
add
inc
push
adc
cmp
adc
add
sub
add
nop
or
lret
jecxz
jp
inc
or
adc
rcr
or
sbb
arpl
out
iret
stos
adc
dec
stos
inc
sub
ficomps
adcb
push
or
sbb
inc
into
or
je
int
sub
dec
mov
push
xchg
mov
mov
imul
jbe
cli
adc
fisubs
push
add
sbbl
movsl
jne
fcoml
pop
int3
test
and
mov
xor
sub
data16
add
xchg
insb
pop
jmp
add
jo
adc
push
mov
xorb
add
push
lods
mov
mov
pusha
push
mov
push
adc
add
cmp
sub
rcll
test
decl
stos
insb
loopne
mov
mov
and
sarb
sub
sbb
add
sbb
add
cmpl
jb
add
xchg
jo
dec
clc
rcrl
xchg
imul
push
and
push
dec
mov
xchg
call
mov
test
cmp
sbb
loop
xor
push
mov
je
jno
je
push
adc
cmp
push
jne
sub
and
mov
adc
sbb
les
enter
add
cmp
ret
xchg
dec
sbb
dec
jecxz
add
sub
repnz
adc
add
ljmp
xor
pop
loop
jl
push
clc
ja
sbb
sarl
pop
iret
fwait
mov
cs
push
fsubr
data16
pop
test
loop
jge
pop
stos
mov
shrb
pop
add
das
inc
and
mov
sub
lea
daa
add
push
pop
pop
inc
inc
cmp
inc
imul
test
test
es
cmp
inc
mov
or
mov
leave
nop
sbb
popf
add
repnz
lock
shlb
sahf
pop
inc
jnp
cmp
adc
movlps
jns
rolb
inc
sbb
dec
das
mov
fs
hlt
add
mov
sub
test
jg
mov
sahf
jg
clc
scas
add
ret
mov
xor
cltd
pop
mov
sarb
dec
clc
push
dec
cld
fists
shrl
shr
not
in
sbb
dec
rolb
imul
gs
mov
fmuls
es
xor
push
lock
jne
inc
inc
jbe
mov
hlt
addr16
inc
repnz
scas
aas
cld
out
sahf
divb
sub
jns
rcrl
jne
or
cmpsl
jns
cmpsl
inc
dec
inc
pusha
dec
sbb
lcall
test
add
adcb
push
lret
shl
add
jg
or
inc
add
xchg
push
sbb
iret
fnstcw
mov
js
xchg
add
decl
push
adcb
add
or
or
je
icebp
xor
mov
pop
xor
mov
and
add
sbb
mov
adc
push
push
pop
movl
adc
or
dec
rcrl
inc
push
pop
jne
outsb
xor
inc
jmp
or
mov
subb
icebp
fs
dec
push
incb
sahf
sbb
sbb
dec
cmp
jo
shrl
mov
hlt
cmp
jge
cli
and
call
mov
outsb
sti
push
jns
shll
inc
orl
dec
mov
and
sub
es
cmp
cmp
push
mov
push
mov
xchg
insb
or
inc
repz
pop
add
push
xor
jle
dec
sub
inc
cmp
jecxz
push
push
cvtps2pi
daa
mov
ljmp
popf
inc
bound
fildll
pop
mov
mov
in
mov
mov
and
dec
sti
rep
rolb
mov
cmpsl
lods
pop
or
sbb
jmp
sub
jae
mov
shlb
add
mov
sbb
andl
aam
dec
jnp
and
jne
push
sub
pop
and
inc
push
push
mov
jecxz
data16
push
push
mov
add
pop
loopne
adc
nop
data16
push
push
push
and
adc
push
ret
pop
adc
add
out
pusha
aas
mov
mov
imulb
cmp
in
adc
data16
cs
insl
push
xor
mov
and
jo
gs
jno
xchg
sub
xchg
lock
xor
or
js
ficomps
loope
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
mov
orb
data16
data16
sbb
pop
xchg
push
push
int3
dec
roll
add
lock
adc
aas
mov
push
dec
sbb
out
push
insb
shlb
or
mov
jle
or
jo
adc
decl
insb
in
dec
xor
fwait
xor
xchg
push
aam
call
and
mov
adc
mov
add
loopne
add
cmp
push
sbb
rolb
rolb
sbb
sbb
and
sarb
xchg
jge
add
loopne
mov
shlb
push
adc
push
loope
sbb
add
push
int3
addr16
cmp
dec
test
add
sub
push
add
mov
movups
ret
xchg
pusha
loopne
mov
dec
js
icebp
or
add
inc
je
out
adc
add
push
add
push
add
jg
adc
inc
pop
jnp
aaa
shlb
pop
mov
jno
xor
jnp
and
dec
clc
xorb
ret
es
sbb
lea
out
adc
shrl
lock
dec
adc
mulw
inc
cmp
xorb
test
or
inc
or
aam
rorb
jg
cmp
mov
sar
add
or
or
mov
lcall
inc
stos
dec
dec
jg
popa
or
mov
xor
jecxz
cmp
sbb
es
scas
lea
xchg
add
sbb
push
or
test
jnp
push
ficomps
ret
sub
add
sahf
ja
test
sub
mov
nop
pusha
adc
leave
cmpb
or
push
xchg
je
fsubrl
int3
shrl
test
dec
mov
incb
cs
lock
adc
popl
pop
push
adc
sbb
fisttps
insl
nop
jecxz
lock
mov
lods
jge
notb
je
push
shlb
lods
sub
or
in
inc
enter
jl
jno
sbb
xor
mov
test
jle
mov
jbe
pop
sbb
mov
insl
loop
jne
pushf
sbb
adc
adc
test
in
cmpsb
je
adc
pop
mov
pop
enter
and
adc
dec
sbb
jle
mov
jmp
dec
ss
mov
fisubs
jne
sub
outsb
sar
and
mov
jae
adc
sbb
mov
jb
fcompl
ror
push
idivb
dec
hlt
jae
or
add
jb
or
push
ret
mov
cmp
ss
daa
bound
push
or
pop
inc
inc
push
dec
and
push
sub
cli
sub
loop
int
push
enter
add
mov
xorb
sub
push
cmp
mov
cltd
subl
push
cltd
sbb
js
xchg
sbbb
push
mov
gs
xchg
add
jno
cmp
cmp
pshufw
sbb
sbb
ret
insl
popf
mov
pop
push
dec
aam
paddsw
xchg
jne
dec
scas
cmpsb
pop
fdivs
xchg
sub
adc
pop
pop
out
jmp
sbb
jbe
clc
out
call
and
or
or
insb
outsb
shll
call
daa
mov
mov
push
push
pop
cmp
xor
cwtl
ds
incb
test
and
nop
scas
sar
jne,pn
adc
daa
or
insb
jb
sub
and
add
sbb
in
or
and
and
and
mov
insb
ja
xchg
adc
ja
jb
nop
adc
arpl
or
bound
ja
xchg
arpl
jmp
mov
sub
cmp
and
adc
add
adc
andb
or
js
jge
imul
popa
movsb
cmp
push
arpl
addr16
xor
imul
je
pop
fisttps
call
sbb
or
sub
adc
sbbl
inc
in
mov
jmp
cs
sub
push
sub
sbb
push
fwait
and
xchg
int3
push
and
int
sbb
test
inc
ja
aas
cltd
xchg
xchg
or
outsb
call
add
and
push
xor
dec
push
fs
dec
push
hlt
sub
push
fs
daa
cwtl
fs
push
fs
sub
xchg
mov
movsb
sti
jl
or
das
jmp
cmp
inc
push
cmpsb
xor
cmp
test
test
dec
sub
xor
add
pop
mov
mov
jge
sbb
lea
leave
jmp
sbb
cld
or
in
inc
push
cltd
mov
adc
add
mov
adc
push
adc
or
pop
sbb
popa
xor
sbb
cmp
push
ja
adc
or
jne
dec
into
inc
pop
rclb
mov
clc
shlb
lods
jne
or
sub
pop
ljmp
popf
xor
and
adc
xchg
or
adc
fldl
mov
daa
loop
mov
pop
mov
lds
jns
mov
movsl
inc
mov
cmpsl
jge
cmpsl
shl
fimuls
enter
jmp
xor
loopne
sarb
shr
aam
sbb
pop
add
mov
adc
push
push
ret
loope
leave
push
push
jo
pop
add
mov
hlt
mov
and
mov
and
lock
inc
pusha
stos
dec
or
xchg
add
xor
sbbb
fldenv
pop
cmp
stos
jno
pop
add
mov
pop
add
xchg
rcll
sbb
shlb
pusha
insl
add
lock
pop
jp
punpckhdq
sbb
add
cmp
add
jne
sub
or
adc
mov
mov
bound
dec
aaa
mov
lock
adc
js
and
jno
jno
pusha
inc
and
popa
outsb
mov
or
adc
add
pop
adc
and
or
cmc
mov
daa
xor
out
push
or
adc
test
pop
rclb
jl
test
and
testb
je
push
jne
xchg
out
mov
jmp
cmp
sbb
mov
ja
ja
jmp
sbb
lods
jmp
dec
xchg
jmp
divb
xor
jne
cmp
jmp
pop
jo
jnp
or
jmp
or
mov
adc
inc
mov
xchg
es
cmp
or
xchg
fwait
jge
jp
rcrb
outsb
jno
sub
or
sahf
test
xorl
mov
jns
insl
pop
pop
pop
sti
inc
add
mov
sbb
ds
icebp
adc
mov
and
adc
insb
mov
mov
push
or
sub
dec
js
and
into
mov
xor
repz
or
nop
mov
mov
and
cmpb
xor
lret
push
mov
push
and
mov
pop
mov
aam
popf
inc
lods
and
cmp
inc
xchg
sub
call
inc
mov
jo
xchg
push
sub
clc
fsubl
lcall
cs
push
mov
cmp
aam
lret
dec
adc
addb
xor
cwtl
jmp
and
addb
add
cmpsl
push
lret
stos
mov
jnp
dec
inc
jns
rorb
mov
add
xor
pushf
inc
sarb
push
movsl
jne
fdivr
aam
add
fcomps
insl
les
pop
xor
icebp
fwait
push
scas
stos
scas
fistl
inc
inc
fdiv
into
mov
or
dec
pop
push
push
jl
cmp
pushf
cwtl
or
pop
and
jb
enter
or
push
push
popa
mov
dec
pop
clc
jl
mov
adc
inc
imul
lods
adc
test
or
jmp
lahf
adc
adc
inc
dec
pop
push
mov
add
call
push
sbb
out
and
pop
loopne
scas
jmp
or
push
outsb
mov
fstl
ljmp
pop
pusha
inc
mov
inc
fldl
jp
pop
loope
ret
add
popa
jg
and
pop
sbb
lea
or
dec
cmp
adc
push
xchg
xorl
shlb
shr
push
xchg
sub
ja
and
jb
loop
dec
ljmp
movl
push
push
mov
rorb
or
jae
js
dec
stos
mov
and
lahf
lock
inc
or
dec
push
add
clc
repnz
xchg
test
jl
pop
adc
cmp
je
inc
mov
xchg
shrb
or
shrb
sbb
outsb
das
pop
jl
loope
das
clc
mov
test
xchg
sbb
bnd
lea
adc
popf
jl
inc
in
lock
jne
ret
stc
push
es
sub
cmc
test
xchg
pushf
mov
int
jmp
xor
sub
cmp
repnz
pop
or
lock
repnz
in
daa
loopne
jmp
nop
push
test
loopne
aaa
inc
mov
out
add
pop
shll
repnz
pop
shl
cmp
xor
push
pop
push
xor
dec
ss
or
sub
ss
dec
movsl
aam
dec
jae
test
add
imul
push
insl
push
push
lea
test
pop
inc
sub
mov
xchg
mov
xchg
movsb
pop
rorl
cwtl
sub
lret
popa
add
add
sub
jbe
adcl
adc
fldcw
mulb
fmull
test
mov
fs
mov
or
rorb
outsb
dec
sbb
jo
sub
mov
sbb
negl
or
or
pusha
push
lods
inc
inc
arpl
inc
cmc
sub
rorb
test
add
add
cwtl
cmp
setl
jno
jbe
andl
push
dec
nop
or
mov
mov
or
xor
lea
xor
fdivr
ja
mov
sub
mov
lock
push
outsl
loopne
sbb
xor
inc
inc
je
push
add
xchg
and
data16
fdivl
fsubrl
outsl
lahf
push
das
repnz
xchg
jp
xchg
xchg
xchg
adc
cwtl
adc
arpl
sbb
add
cmp
and
stos
mov
dec
pushf
in
push
xor
jb
adc
sbb
xor
xlat
and
adc
aas
sub
or
lahf
rol
mov
push
test
dec
int3
dec
push
test
pop
xchg
dec
call
push
or
scas
mov
insl
pop
pop
lods
addr16
or
or
sbb
dec
inc
mov
xor
iret
push
jno
adc
sub
cmp
fimuls
xchg
sub
enter
xor
sbb
push
adc
adc
dec
jnp
inc
ljmp
hlt
out
push
sbb
add
xor
push
cs
cs
mov
pop
sbb
test
mov
push
ljmp
xchg
or
call
push
out
push
mov
add
rolb
inc
add
xchg
push
orb
out
cmp
sub
cmpsl
mov
mov
mov
add
add
aas
and
je
xchg
cmp
insl
loopnew
pop
jecxz
sbb
stc
pop
cmp
xlat
dec
mov
in
lods
push
push
mov
push
mov
jmp
popa
bound
or
stos
iret
add
mov
hlt
xchg
sbb
and
sub
and
jmp
test
fcoms
and
sbbl
orl
xor
xchg
xchg
ja
pop
sub
add
arpl
sub
mov
mov
jno
jp
inc
or
imul
xchg
arpl
insb
xchg
lea
cmp
sub
mov
pop
or
js
push
sub
ret
push
inc
adc
insl
adc
sbb
lods
mov
pop
mov
pushf
and
inc
jb
jmp
push
xor
mov
ret
cmp
push
into
int3
dec
inc
and
pop
add
fisubl
xor
inc
imul
or
cld
mov
enter
or
rolb
jo
sbbb
xbegin
roll
imul
xor
repz
mov
mov
push
das
add
cld
loop
ds
je
adc
cmp
sub
push
pop
sub
jl
lock
jnp
repnz
jo
pop
mov
nop
adc
pushf
loope
lea
pusha
xchg
push
adc
jp
test
push
sub
jp
sbb
mov
jo
fdivrl
outsl
jns
mov
cmpsl
lea
testl
dec
and
and
loopne
rclb
mov
mov
and
pushf
push
mov
inc
cmp
jmp
inc
nop
rcrb
mov
mov
fidivl
lea
adc
adc
mov
mov
pop
rcrb
mov
push
js
fcompl
cmc
mov
repz
adc
push
xor
stc
jbe
pop
mov
sub
mov
test
jmp
outsl
push
iret
sbb
cmp
xor
jns
aam
jge
mov
dec
add
jo
xlat
mov
roll
cmp
sahf
xor
cmp
and
mov
mov
or
xor
and
jne
pushl
fisttpll
adc
shl
lcall
xor
aad
or
pushf
or
lea
sbb
push
lahf
sub
test
cmc
pop
lock
pop
dec
in
cmp
andl
mov
lods
mov
mov
sub
adc
inc
call
movsb
mov
je
orl
add
jmp
stos
jg
pop
or
aas
push
pop
jo
cltd
les
push
fildl
pop
jns
outsl
xlat
push
push
repz
mov
jge
ss
mov
or
sbb
rcrl
push
xchg
inc
rcr
ret
push
movsl
and
daa
and
test
push
arpl
add
mov
icebp
add
xlat
ret
push
xor
sub
filds
add
and
xlat
or
mov
loope
add
out
pushf
mov
shll
mov
cmp
test
lds
aad
jae
adc
fildll
ljmp
dec
dec
test
pushf
xchg
mov
cmp
or
lds
fnsave
cli
fnstsw
jp
cmp
mov
xorb
inc
or
pop
xorl
sub
incl
lods
loop
gs
pop
inc
inc
inc
inc
push
jl
rcl
and
cwtl
xchg
out
lds
dec
cmp
pushf
in
cmpl
enter
push
in
adc
jns
lods
insb
mov
idivb
dec
sub
dec
add
repz
call
repnz
xchg
push
add
int3
xchg
and
push
mov
dec
lret
pop
jecxz
mov
es
sub
stos
add
es
dec
dec
jns
pusha
mov
add
dec
loopne
adc
or
add
and
inc
push
sub
test
adc
adc
mov
sarl
mov
inc
fdivl
or
adc
mov
cmpsb
in
lods
icebp
sbb
jae
or
mov
aaa
scas
nop
add
or
lock
cmp
cs
test
decb
pop
scas
shrd
inc
loope
jl
in
or
es
outsb
lock
fs
cmp
cmp
sub
sub
imul
sbb
push
lock
sti
nop
adc
leave
ss
mov
or
in
dec
fs
xchg
sarl
aam
hlt
lret
hlt
mov
fs
add
pop
push
nop
ret
cmpsl
pop
or
cld
cmp
pusha
std
adc
cmp
je
movsb
ljmp
je
imul
hlt
cli
jmp
sbb
mov
mov
ja
sbb
cmp
jg
lods
insl
mov
outsb
adc
ret
jbe
or
fisubrs
outsb
add
push
jge
push
adcl
push
fucom
sti
xor
outsb
fisubs
pop
bound
gs
mov
pusha
xor
inc
mov
lock
inc
jmp
in
jmp
fmull
jge
cmpsb
dec
cmp
ja
mov
mov
shlb
js
sbb
sbb
xor
jns
andl
jmp
inc
jo
add
pop
pop
jns
addr16
and
jne
add
mov
lds
add
iret
add
xchg
or
sbb
sub
into
test
lock
sub
js
dec
lret
jmp
pop
cmpsb
test
movsl
adc
test
sub
adc
mov
or
and
sub
push
loopne
adc
pmulhw
mov
sbb
xchg
dec
call
or
push
inc
ret
adc
jl
add
movsl
mov
rcrb
fcoml
es
jmp
sub
mov
dec
sbb
in
sub
popf
lret
push
cli
fdivl
data16
cmc
je
loop
aam
sub
push
sub
mov
test
mov
add
leave
pop
push
rolb
scas
or
in
fs
dec
xor
xor
push
cmp
popa
fsubr
push
fcomp
sbb
xor
and
rcrb
mov
pop
test
imul
andl
nop
inc
outsl
or
or
popa
push
pop
fisttps
mov
adcl
repnz
imul
dec
rclb
pop
leave
mull
xor
in
out
add
into
loop
aaa
xorl
das
mov
addb
outsl
xlat
xchg
add
pop
fcoms
das
lock
cmp
stos
mov
test
pshufw
movl
xor
lcall
and
pop
outsl
add
lds
add
test
adc
in
leave
aam
leave
flds
sub
rcl
pop
xor
inc
psubusb
test
js
push
add
mov
jl
sbb
cwtl
cli
pushf
shlb
insb
mov
mov
test
out
inc
loopne
insb
out
inc
test
xchg
xchg
and
adc
mov
enter
fwait
mov
imul
iret
push
lock
push
jns
dec
sbb
adc
test
rorb
mov
test
pop
dec
push
mov
sub
and
dec
push
mov
dec
cmc
adc
andl
mov
pop
mov
iret
cmp
or
inc
and
pop
shrb
pusha
and
cmp
orl
and
daa
dec
fcompl
xor
xor
mov
cmp
gs
pop
cmp
cmp
xchg
sbb
mov
xchg
shrb
mov
sub
add
popf
sub
gs
sti
sub
add
cmp
xchg
arpl
mov
sbb
sbb
lret
pusha
add
or
add
jp
push
es
mov
popa
inc
xchg
call
push
sub
cmovno
call
mov
mov
push
add
cmp
inc
les
sub
sub
outsl
mov
dec
lods
cmp
add
cmp
nop
fs
or
test
divb
dec
xor
loop
xchg
xor
shr
mov
push
movsl
mov
mov
mov
pop
or
inc
idivb
pop
in
fildll
cmp
call
add
or
add
jmp
add
dec
cmpsl
outsb
mov
ret
and
fdivs
add
inc
movsb
inc
or
in
adc
mov
cwtl
adc
aam
add
sub
dec
enter
arpl
mov
leave
sgdtl
fsubrl
popa
movsl
mov
or
cmp
insl
gs
mov
in
ret
scas
mov
push
dec
je
imul
in
push
fists
or
push
or
adc
xor
idivl
add
mov
pushf
dec
jl
scas
stos
dec
jl
fidivrl
jp
sbb
aam
cmc
and
mov
les
hlt
inc
dec
fs
cmp
sub
sub
pop
imul
pop
pop
mov
call
loopne
xchg
jb
testl
jp
jns
xor
fcompl
inc
enter
cwtl
arpl
inc
xchg
outsl
adc
nop
xor
jg
cmpsb
sahf
ljmp
ds
je
leave
mov
jmp
mov
add
into
add
xchg
mov
aas
cmpb
add
les
sbbl
jge
inc
je
mov
aas
cltd
test
sub
jmp
jb
or
faddl
pop
je
fcoml
adc
mov
add
mov
les
mov
in
shlb
dec
push
add
sbb
cmp
arpl
mov
repz
cwtl
jl
popa
repz
xorb
ljmp
nop
jge
std
and
dec
loopne
in
push
int3
movb
xor
add
ret
popa
mov
add
inc
mov
xorb
xor
jle
or
inc
stos
addr16
add
or
jne
pushf
fisttpll
mov
std
ljmp
push
pop
ss
xchg
ljmpw
or
jp
incb
jb
fidivrs
cmpl
push
femms
cmp
xor
sub
mov
and
dec
lds
adc
jmp
mov
pop
inc
adc
rol
push
push
push
mov
mov
adc
sub
test
mov
repz
push
pop
psllw
out
adc
cmp
dec
xor
inc
or
jb
mov
mov
push
cmp
sbb
lcall
rol
out
inc
mov
lcall
mov
push
repnz
jg
sti
add
dec
xor
add
inc
fdivs
aam
mov
test
aas
sbb
pop
and
cmp
add
add
test
loopne
and
or
xor
cmp
mov
jmp
lcall
iret
in
pop
and
push
xor
lods
test
and
lods
lea
jge
push
push
pop
stos
cmpb
pop
insb
mov
push
xchg
outsl
adc
popa
frstor
fidivs
sti
and
jno
hlt
add
lock
loopne
pop
mov
push
jno
inc
arpl
cli
ret
pop
inc
test
or
cmpsb
xor
push
jmp
add
repz
mov
mov
and
add
adc
lds
push
push
into
idivb
pop
mov
push
add
mov
mov
pop
jge
pop
nop
aaa
insb
out
mov
push
add
xor
xchg
jne
call
push
inc
mov
lds
mov
lret
push
add
sbb
pop
dec
enter
jl
add
hlt
add
jnp
and
test
mov
lcall
push
pushf
add
and
push
lcall
mov
setne
dec
lea
jo
int
sahf
lods
sub
movsb
test
mov
mov
mov
in
mov
sahf
adc
sahf
out
or
sub
inc
faddl
pusha
insl
jmp
loopne
std
cmp
add
xor
test
out
jns
loopne
es
push
lods
call
nop
pusha
aas
lahf
mov
add
jbe
push
lret
orb
sarl
mov
test
orl
adcl
inc
inc
sahf
cwtl
addl
pop
shrb
and
mov
xchg
jl
inc
push
xor
jl
xor
adc
popf
push
add
and
xor
js
rclb
push
adc
mov
scas
shlb
add
add
test
test
lret
mov
mov
icebp
into
mov
adc
inc
fwait
xor
adc
js
dec
cmp
mov
push
adc
ret
loop
les
fnsave
je
sbb
pushl
hlt
orb
jne
push
mov
push
fdivs
jmp
loopne
or
jo
ds
sub
or
sub
mov
mov
cltd
and
pop
shll
orb
bound
xor
mov
dec
mov
push
inc
cmp
sahf
ja
mov
or
mov
scas
xor
mov
mov
sub
mov
movsb
mov
clc
sub
into
mov
dec
into
mov
orl
shl
movsl
cmp
loopne
cld
test
push
aaa
mov
sbb
jbe
ljmp
test
sub
and
jo
fsubrl
orl
adc
or
mov
jge
push
adc
iret
push
js
psllw
jp
test
test
js
dec
imul
out
gs
rolb
aaa
jo
push
push
xor
outsl
decl
adc
push
sbb
push
mov
mov
mov
rclb
push
jmp
mov
adc
sub
imul
jmp
pop
rcrb
mov
das
pop
out
dec
jo
lods
xor
push
les
add
mov
addr16
jl
mov
inc
dec
pop
sub
icebp
bound
ret
and
mov
fisttpll
push
imul
jecxz
push
adc
sub
popf
pop
jo
inc
ret
and
mov
mov
lea
mov
adc
pop
int3
pop
in
filds
xchg
jmp
pop
andl
mov
pop
insl
bound
dec
loopne
or
sahf
loope
pop
mov
mov
adc
mov
add
xchg
in
repz
and
pop
mov
insl
stos
cmp
jl
dec
lods
pop
mov
jne
pop
and
add
outsb
push
stos
jno
mov
mov
push
adc
js
and
in
push
jle
cs
sbb
roll
adc
mov
jbe
sarb
call
pop
add
arpl
xchg
push
aad
daa
cmp
sbb
cmp
repz
aam
add
adc
inc
int3
nop
sbb
cmp
mov
mov
pop
mov
or
mov
shll
pop
mov
enter
hlt
lock
lock
pop
and
fisttpll
xchg
movsl
std
mov
push
push
movsl
out
faddl
fstl
push
fs
mov
loopne
rcr
fistpll
fldl
pop
fsubr
pop
faddp
andl
sbb
fdivrl
add
sub
das
pop
mov
or
mov
cmp
adc
jo
lods
dec
sbb
addb
mov
arpl
hlt
push
aaa
mov
xor
dec
mov
rcrl
and
fstpl
xor
inc
xor
add
cld
jge
bsf
iret
sub
push
mov
pop
test
or
pop
jbe
pop
jmp
add
into
mov
ret
adc
sbb
flds
daa
loopne
inc
out
or
jmp
pop
fsubrl
cld
dec
mov
int3
dec
sbb
mov
lock
push
mov
bound
jne
pop
addr16
ja
sub
mov
add
and
add
mov
cmp
jmp
mov
cmp
jge
and
mov
jmp
pusha
dec
or
or
popa
xchg
movl
ss
mov
jmp
pop
daa
sub
sub
mov
adc
in
inc
and
orl
or
cwtl
sub
jg
mov
jne
push
push
lret
ljmp
das
adc
pop
in
add
inc
fldl
or
imul
inc
inc
cmpsb
ljmp
add
sti
arpl
dec
jns
mov
mov
call
dec
cmp
ret
mov
movsb
icebp
and
or
mov
lret
jbe
pop
rclb
xchg
jno
jo
jmp
out
sub
xchg
sub
push
cli
sub
outsb
adc
fcoms
add
lock
inc
or
ret
mov
add
shlb
or
decl
inc
adc
fwait
addl
mov
xchg
es
lea
inc
inc
push
xchg
sbb
mov
cmc
nop
testl
and
mov
push
adc
xchg
dec
mov
jecxz
cltd
pop
test
add
mov
mov
in
arpl
push
add
in
outsb
arpl
arpl
mov
mov
fstpl
inc
cltd
mov
dec
sbb
jp
and
add
sub
sub
jp
push
add
lock
stos
rol
cmp
fsubs
shlb
inc
adc
lret
push
mov
push
mov
push
push
dec
lods
and
cs
inc
inc
js
mov
ret
inc
insb
add
sub
adc
enter
or
inc
or
mov
fsubl
mov
ret
loopne
jl
imul
ljmp
arpl
add
mov
or
mov
push
dec
xchg
add
addb
fmuls
jno
add
or
nop
xchg
xchg
test
adc
mov
push
cs
lret
and
mov
sub
pop
enter
dec
stos
and
imul
push
lea
xchg
clc
and
sub
shl
imul
imul
and
lock
cmp
loop
bound
repz
lock
dec
xchg
gs
or
xor
sub
adc
xor
fwait
test
inc
scas
stos
enter
xchg
dec
sbb
inc
xor
push
sbb
out
enter
and
in
and
adc
les
stc
fsubrl
shrb
inc
inc
xor
insl
xor
or
rolb
mov
aaa
xor
fldl
sub
mov
cmp
sub
in
mov
xchg
xchg
popf
in
inc
addl
shlb
mov
in
inc
inc
and
das
shlb
mov
push
lods
jmp
jg
not
push
or
sbb
mov
or
add
repz
enter
lret
cmp
jge
cmp
les
ret
test
test
pop
shrl
popf
insl
adc
outsl
das
leave
add
std
dec
ret
lods
es
adc
sbb
dec
xor
adc
dec
adc
add
test
ret
push
xlat
ljmp
in
xor
ret
mov
sbb
dec
push
jecxz
jo
dec
dec
mov
xchg
pop
adc
and
add
cli
aam
add
cmp
sub
push
or
xor
and
add
jecxz
add
mov
pop
add
xor
loopne
inc
or
roll
jp
aaa
shrb
rolb
call
jle
lock
movb
and
mov
add
popa
cwtl
cmc
rcll
in
jmp
cmpl
mov
add
jge
addb
inc
fbstp
subb
mov
loop
inc
mov
test
dec
loope
mov
xor
xchg
sbb
loope
cltd
pop
loop
in
sbb
rorl
xchg
test
jb
pop
sub
repnz
sbb
cmp
test
andb
inc
adc
enter
xor
inc
inc
push
or
or
lods
fwait
push
mov
or
xor
push
lcall
add
or
sub
or
dec
mov
mov
or
push
inc
push
inc
or
mov
ds
test
rcrl
les
or
test
xor
or
in
aas
lea
mov
push
pusha
adc
inc
push
or
rol
sbb
jne
loopne
push
lret
lock
clc
pop
pop
jnp
sub
mov
fld
fwait
dec
xor
pop
add
or
cmp
push
setl
xor
idivb
or
jnp
add
inc
sub
xchg
js
aaa
orl
mov
pop
mov
mov
or
shrb
sarb
xchg
ret
je
call
push
push
fistpll
into
daa
mov
mov
add
cmp
sbb
mov
pop
fsubr
aam
xor
add
les
cmpsl
push
push
stc
sbb
and
xor
add
mov
inc
push
in
in
subl
fmuls
xchg
push
push
loopne
int3
mov
mov
push
push
add
add
roll
inc
lcall
sbb
push
out
and
enter
sub
dec
adc
inc
js
rcrb
push
add
pusha
sarb
std
shll
enter
fstpt
test
lock
push
stos
je
add
pop
cmp
ret
sub
and
clc
jl
and
sub
int
xor
dec
sbb
rcrb
repz
loopne
rorb
pop
dec
add
dec
leave
xchg
popa
sbb
fwait
repz
and
les
add
push
les
nop
or
pop
repnz
and
sbb
dec
cmpsb
ss
lcall
sbb
xchg
xchg
dec
aaa
sarb
xor
and
pop
jne
add
cmp
sarb
scas
ljmp
pop
ljmp
pop
pop
push
push
test
stc
cmc
adcb
insl
bound
jnp,pn
ficoms
xlat
add
push
jb
enter
and
leave
or
leave
les
idivl
pusha
xor
push
push
add
or
sbbb
mov
loopne
out
add
adc
cld
push
pop
push
push
add
push
hlt
jge
inc
or
or
sub
shl
addl
xlat
call
cld
shlb
sbb
dec
sbb
int3
mov
enter
sub
inc
xchg
mov
outsb
inc
in
in
loopne
and
jo
leave
int
add
xor
cmp
mov
pop
ret
add
jo
and
rcll
aaa
add
popa
test
dec
fstl
sub
cmpsl
cmpsb
ja
cmp
in
scas
jecxz
fabs
rolb
pop
rol
fcomps
mov
shrl
int3
sub
test
in
and
lods
daa
sbb
sbb
outsb
clc
mov
adc
inc
and
icebp
inc
or
pop
jnp
ds
xor
or
xchg
jno
das
enter
jne
mov
lahf
mov
or
movsb
lret
cli
pop
xchg
gs
xchg
push
dec
je
fisubrl
pop
adc
adc
jo
sbb
leave
dec
and
fmuls
and
mov
push
xor
jge
xor
cmp
push
or
popa
xor
lds
cmp
sahf
and
mov
xor
gs
pop
add
nop
push
add
sti
cmpsl
imul
lret
push
mov
mov
jae
aad
test
push
xchg
xor
sbb
mov
je
jl
mov
rcr
fldt
jmp
adc
ljmpw
inc
inc
cmp
sbb
jo
and
mov
dec
aam
xor
add
sub
mov
push
aas
and
xor
inc
sbb
mov
fdivrs
loop
cmp
fidivs
out
add
and
mov
push
dec
xor
adc
lea
pusha
pop
ficomps
jp
and
lret
sub
push
xor
pop
add
popf
or
jmp
add
cmp
jl
push
inc
inc
dec
push
imul
inc
test
scas
in
inc
or
push
cmp
clc
stc
pop
sbb
jbe
loopne
sbb
inc
andl
dec
xchg
xor
jp
adc
pop
mov
sub
fisubs
push
push
mov
enter
imul
mov
in
adc
or
adcl
inc
mov
xor
inc
ret
insl
cmc
sub
mov
lock
sub
jnp
xchg
mov
add
insb
sbb
ss
sbbb
pusha
push
xor
mov
or
loop
mov
cmp
jle
sbb
or
int
xor
sbbl
xor
push
or
in
xor
or
xchg
cmp
push
sbb
ret
cwtl
sahf
cwtl
fdivs
sahf
adc
sbbl
push
sub
inc
push
bswap
or
mov
add
icebp
dec
repnz
and
add
into
jne
dec
xor
push
pop
mov
xchg
inc
pop
mov
pop
adc
push
shlb
cmp
add
push
inc
ss
sub
aas
or
push
and
enter
add
je
lcall
inc
pop
adc
add
daa
jnp
push
rclb
and
test
jne
repz
dec
cmp
mov
nop
push
push
inc
mov
mov
xchg
pop
popa
dec
inc
mov
or
push
aam
ret
mov
push
mov
pop
pushf
xor
mov
loopne
push
or
pop
fnstcw
jo
dec
add
sbb
rolb
add
popa
sahf
cltd
insb
insb
jbe
std
pusha
lea
mov
adc
inc
jmp
pcmpgtb
and
lcall
nop
orl
or
push
incl
cmp
jl
xor
lret
into
push
push
dec
fimuls
inc
dec
fdivs
jne
add
sti
outsb
subb
dec
push
cmpb
es
sbb
into
jl
shrl
pop
data16
jecxz
inc
enter
mov
std
fldt
std
dec
jg,pn
mov
pop
je
push
mov
cmp
mov
pop
mov
cmp
or
push
xor
push
shl
mov
and
mov
inc
and
pop
jne
jnp
push
addr16
pop
sbb
mov
push
jmp
push
sbb
outsl
xor
je
sub
dec
int
xchg
pop
stos
xor
les
push
jne
jl
pusha
dec
mov
dec
push
jge
les
mov
xor
insb
outsb
leave
in
sub
pop
andl
pop
sub
movsl
xchg
sahf
mov
mov
add
xchg
ret
les
add
sbb
pop
sbb
popa
mov
xor
or
stc
in
cltd
sarb
push
pop
aam
nop
ds
inc
loop
jne
das
js
add
add
adc
lahf
push
movsl
or
adc
dec
stos
cld
ss
push
sarb
add
stos
or
mov
inc
test
jbe
push
push
adc
aad
test
dec
mov
add
inc
pop
push
and
movsb
fstps
cmp
dec
leave
add
adc
adc
pusha
sub
or
aas
mov
add
mov
mov
mov
jle
call
je
or
rol
aas
mov
adc
fwait
mov
mov
dec
pop
and
push
inc
popf
aad
sub
dec
mull
xchg
lret
mov
jg
fcmovnb
and
inc
mov
push
or
sbb
xor
insl
popa
dec
dec
test
leave
out
push
rolb
call
inc
adc
add
cmp
push
and
inc
cmpsb
add
pop
adc
fcmovb
es
cmp
xor
push
cmp
ret
mov
or
push
xor
jne
jp
cmp
mov
jmp
je
or
into
stos
movsl
xor
inc
mov
or
cmp
xor
inc
out
es
sbb
sub
inc
and
sub
xor
dec
add
fwait
sbb
scas
shlb
push
pop
fdiv
je
add
test
outsl
cld
lret
movsl
ret
fdivs
add
sub
popa
jmp
adc
das
or
jne
push
jmp
cmp
dec
popf
xchg
mov
pop
xor
inc
xchg
bound
loopne
mov
test
add
add
sub
test
and
mov
sarb
lock
clc
push
shrb
mov
mov
loopne
push
pop
inc
cmpsb
rcr
and
jl
outsb
mov
sub
mov
loop
dec
inc
lods
mov
xchg
add
xorb
pop
iret
or
aam
sub
sbb
cmp
push
lcall
test
mov
mov
nop
test
into
jae
and
add
ss
in
fld
jne
add
jne
sbb
addl
testb
mov
and
shrb
adc
add
nop
add
or
or
adc
inc
pop
inc
mov
movsl
pop
das
fwait
mov
fs
stos
fldl
fs
pop
or
push
mov
movsb
mov
jmp
add
mov
xchg
and
test
lea
popf
or
mov
sti
ss
ficomps
and
test
adc
add
jmp
and
xadd
push
sub
ja
mov
mov
in
sub
ret
or
data16
je
and
aam
push
inc
dec
push
fisttpll
pop
push
inc
adc
and
dec
or
cmp
add
inc
mov
push
xchg
dec
add
sub
jle
jp
and
iret
jge
xchg
and
mov
xlat
arpl
inc
jmp
orl
inc
int
dec
in
adc
add
inc
mov
loope
inc
pushf
jo
or
sub
sub
pop
xchg
jmp
or
pop
jns
adc
fcmovu
and
test
push
test
pop
cltd
jp
jns
jae
xchg
int
call
mov
push
mov
mov
or
xchg
sbb
in
dec
add
aad
into
dec
pop
out
rcll
add
adc
inc
jge
add
jp
cmp
add
push
or
imul
lret
dec
and
adc
out
dec
pop
js
add
mov
ret
sub
add
nop
push
jae
or
addb
and
adc
dec
rorb
dec
or
push
outsb
outsl
movsl
jg
cmpl
popf
shrb
or
add
pop
xchg
dec
pop
add
jl
sbbl
dec
cmpsl
pop
cwtl
mov
popa
sub
fcmove
ret
cmpl
lahf
sub
xchg
repz
jo
and
push
or
scas
sbb
mov
icebp
adc
push
je
icebp
mull
fdivrl
jmp
inc
lahf
test
mov
mov
inc
inc
cld
pop
imul
push
add
adc
push
add
inc
dec
push
mov
push
mul
pop
fsubs
xor
hlt
and
mov
roll
push
mov
jl
add
and
sub
fsubrs
pop
add
lock
cmpsb
add
cmp
in
mov
fbstp
and
test
push
nop
or
jnp
lahf
sbb
mov
or
or
inc
mov
leave
and
nop
dec
sub
xchg
call
inc
popa
test
and
je
inc
aad
xchg
mov
aam
popa
add
jmp
ret
lret
push
repz
sub
push
or
pusha
push
insb
je
adcb
pop
mov
adc
stos
sbb
mov
daa
add
and
inc
pop
popa
add
mov
sub
scas
call
add
xchg
and
jo
or
icebp
sub
sbb
test
push
jmp
add
xor
gs
adc
mov
call
inc
mov
inc
mov
add
pop
enter
test
mov
test
cmp
cmp
cmp
test
in
add
jecxz
lea
fadds
jmp
call
test
mov
sub
pop
inc
mov
inc
enter
add
dec
add
add
push
dec
nop
lods
sub
cmp
setbe
loopne
mov
dec
fsubs
jecxz
mov
mov
test
gs
add
arpl
rclb
push
push
outsb
decl
add
push
push
push
sbb
jns
xor
or
jb
pushf
loopne
adcb
xchg
inc
push
jo
or
or
adc
or
pop
dec
pusha
sub
jg
or
pop
rcll
push
cli
ss
add
or
dec
inc
push
cmp
aad
cs
std
daa
sbb
mov
rcrb
sub
testl
and
insb
femms
lret
push
pop
call
clc
inc
push
add
add
cs
test
shl
adc
fdivl
rorb
loopne
arpl
inc
and
mov
lds
das
or
jae
push
inc
fbld
test
adc
inc
leave
test
adc
add
int3
ljmp
lock
inc
sbb
push
lock
mov
mov
stos
shl
jmp
add
cltd
rorl
or
push
mov
iret
in
rclb
inc
incl
push
lcall
mov
push
and
jp
push
adc
jo
xchg
iret
dec
ret
jmp
aad
lahf
push
xor
add
xchg
addl
rolb
push
add
push
cli
xchg
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
push
sub
jbe
push
jmp
adc
push
in
push
lea
in
mov
nop
pusha
aam
and
inc
and
mov
bound
or
fwait
lods
cli
lock
adc
test
dec
adc
adc
fsubl
add
outsb
call
insl
lahf
adc
stc
mov
mov
ret
or
test
adc
cmpsb
aad
sbb
ja
mov
fdivrs
mov
inc
movsl
nop
data16
push
jle
in
sbb
imul
add
rclb
mov
ljmp
in
fisttpll
out
xchg
out
gs
inc
stos
pop
push
cmp
jno
pop
loop
sub
pop
rcll
mov
add
mov
fsubs
or
jecxz
dec
cld
jb
or
or
or
outsl
jnp
clc
cmp
jecxz
js
nop
rcrb
fdivl
out
pop
or
dec
out
push
adc
inc
dec
and
jo
mov
and
cmp
sbb
mov
faddl
clc
movsb
ja
or
imul
xor
or
pop
xchg
mov
adc
pop
push
or
inc
rorl
sti
push
xchg
lods
mov
adc
pop
xchg
fstl
popf
pushf
jecxz
sub
test
aad
and
data16
adcb
xor
divl
fcompl
sti
pushl
add
lea
popf
mov
andb
fcoml
jnp
and
pusha
push
shrb
push
mov
dec
aam
and
push
cwtl
movsb
pushf
lods
adc
cmp
stos
ds
push
adc
sbb
jl
sahf
addb
jg
sub
das
and
push
aam
mov
xchg
xchg
mov
dec
pop
sub
pop
mov
push
cli
and
add
les
mov
bound
imul
sarl
push
push
mov
push
enter
aas
js
test
push
and
mov
loope
mov
push
sahf
ss
movl
inc
int3
in
movzwl
push
cwtl
cmp
fmul
pusha
imul
mov
sbb
ret
insl
add
pushf
jl
cmp
nop
push
sahf
jecxz
mov
mov
sbb
push
mov
lahf
dec
sbb
daa
and
cmp
cld
addb
aad
lret
fiaddl
xchg
push
mov
imull
cmp
pop
adc
jne
xchg
repnz
jl
js
popa
cmp
or
sub
les
jp
js
rolb
movb
push
popf
hlt
or
cmpb
enter
rcl
loope
xchg
mov
int3
inc
cmp
js
es
adc
mov
xchg
add
cmp
and
jb
xlat
or
push
cmp
std
clc
sbb
inc
xchg
or
xlat
pop
cmp
or
rol
out
push
shr
mov
mov
in
stos
xchg
adc
jmp
cmpb
and
adc
push
jg
push
push
ja
fstl
mov
or
imul
jne
movsbl
jg
mov
cmp
jb
mov
and
je
outsb
add
mov
iret
xor
inc
das
mov
lods
sub
mov
or
sbb
test
sub
or
xor
sub
adc
js
inc
add
jle
fsubr
adc
clc
subl
sti
divb
out
mov
pusha
test
cmp
jl
pop
pop
js
cmp
out
mov
xlat
jmp
sub
dec
pop
dec
call
pusha
push
fwait
mov
cli
insb
push
adc
xchg
test
inc
sub
hlt
out
add
insb
cmpsb
xor
push
outsl
adc
shrb
loop
addr16
sub
lock
add
push
std
dec
jnp
jecxz
repnz
leave
leave
leave
leave
add
leave
pop
or
or
jnp
out
out
or
jbe
jmp
or
addr16
out
por
jmp
adc
pop
adc
push
out
out
adc
dec
adc
dec
adc
aas
out
out
pop
jmp
sbb
xor
jmp
out
out
sbb
es
and
pop
push
shl
out
jmp
and
or
test
and
test
orl
xchg
cmp
arpl
cltd
mov
addr16
or
incl
xchg
icebp
mov
int3
aam
in
out
out
jns
cld
dec
add
or
sahf
out
sahf
adc
sbb
sahf
out
xor
cmp
out
sahf
out
dec
push
pop
pop
sahf
out
sahf
arpl
jb
jl
aas
js
pop
add
add
and
or
or
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
xchg
cmp
add
xchg
inc
cmp
aad
pop
std
icebp
int
mov
addl
inc
sub
add
xorb
cltd
scas
xor
xchg
rolb
loopne
fstpt
mov
pushf
les
add
pop
rol
aam
add
out
int
dec
inc
int
pop
add
imul
jne
push
or
xor
mov
mov
mov
decl
sbb
cmc
adc
orb
adc
bound
mov
fimull
mov
jmp
sub
outsl
dec
addl
loope
add
lock
mov
lods
cmp
lock
es
int
shll
pusha
sti
adc
jmp
xchg
test
pop
adc
cmp
sub
sbb
cltd
push
mov
test
fstps
sub
repnz
mov
es
mov
add
sub
push
dec
rclb
xor
jmp
cmp
and
cmp
mov
mov
rol
mov
mov
divl
xor
mov
xor
ss
mov
adc
shr
fs
aaa
aaa
in
mov
ljmp
inc
sbb
movl
in
ret
or
pop
adc
sbbb
mov
fistpl
lds
jmp
jge
mov
test
lret
shr
test
ds
inc
push
xchg
jno
xchg
dec
sub
mov
stc
ja
lea
imul
lret
mov
stos
mov
push
mov
adc
adc
fildll
sub
lock
or
add
pop
adc
xchg
mov
sub
sub
nop
push
or
sub
sbb
push
inc
or
or
scas
jne
repz
outsb
cltd
pop
testb
xor
and
jno
push
mov
andl
dec
ja
push
push
xchg
inc
pop
ret
push
stos
xchg
sbb
mov
and
pusha
daa
movsb
and
invd
out
pop
jecxz
imull
lds
push
rol
mov
and
xchg
adc
mov
or
sbbb
cmp
xor
movl
xchg
push
sbb
es
add
sbb
jno
loopne
sub
clc
mov
push
push
and
push
jbe
es
xchg
iret
cmp
or
fcompl
push
add
movsl
and
cwtl
inc
loop
imul
jb
pop
push
sti
jl
imul
fs
das
mov
add
and
and
push
mov
out
sbb
push
inc
jnp
outsl
stc
in
lods
inc
aaa
adcl
or
fidivrl
cmp
jl,pn
pop
sbb
sbb
test
cwtl
nop
sub
cs
lods
jg
xchg
jle
arpl
cmp
jne
lea
cmp
lock
inc
jg
and
or
js
cs
cmp
or
sbb
in
add
mov
inc
mov
or
lods
cmp
icebp
jl
fcmovu
ja
dec
push
sahf
cmp
push
insl
mov
test
jae
ds
xor
dec
xchg
nop
jmp
and
pushf
jmp
daa
lods
test
cmp
fbld
jae
movzbl
out
mov
add
or
push
jle
and
adc
jmp
mov
inc
add
push
inc
in
ss
mov
cmpsb
inc
inc
je
sbb
mov
hlt
mov
mov
lcall
jne
pop
je
xor
lahf
sbb
mov
ret
or
nop
jbe
cmp
dec
fwait
and
mov
dec
test
ret
or
les
mov
subl
add
dec
enter
fwait
pop
in
dec
add
and
add
pop
or
imul
sub
sbb
and
fstpl
mov
mov
xor
ficoml
mov
enter
sti
js
dec
push
add
jo
test
add
pop
sub
push
cmp
pop
pop
fbstp
rcll
mov
cld
ss
inc
add
add
and
add
adc
addr16
repnz
or
cltd
sub
popa
mov
sbb
xor
push
in
pop
mov
add
pop
adc
scas
push
test
bound
add
jb
cmc
dec
jb
cld
pop
std
xchg
fistl
sbb
mov
add
jge
ja
inc
lods
sbb
ja
inc
xchg
andl
jge
sbb
ljmp
rorb
stc
adc
fists
roll
stos
test
adc
add
mov
dec
pop
pop
or
cmp
fnstsw
lahf
test
test
je
jmp
xor
mov
pop
neg
pusha
loope
lea
cmp
jne
push
pushf
ret
mov
lcall
dec
mov
enter
loopne
dec
sbb
fwait
fwait
push
or
addl
mov
sbb
sub
sub
or
push
xor
inc
push
push
lock
in
adc
in
mov
cs
jge
mov
outsb
push
leave
les
iret
or
repz
iret
lea
lock
inc
pop
shrb
sub
inc
adc
mov
call
sbb
and
cmp
push
cmp
fnsave
jg
adc
loope
lods
cmp
and
sbb
dec
addr16
sti
xor
dec
cli
push
xchg
sub
or
mov
ja
mov
aad
shlb
loop
scas
mov
roll
pop
orb
jnp
pop
mov
push
scas
mov
lcall
in
adc
sbb
daa
sub
adc
xchg
es
pop
in
sub
xor
int3
hlt
es
mov
fwait
mov
cmpsl
add
adc
stos
mov
incb
cmp
and
movhlps
add
mov
int
xor
inc
dec
mov
mov
add
daa
dec
add
jbe
xor
cmp
cmpsb
xor
inc
inc
pop
or
inc
rorl
int
and
in
sub
stc
push
loopne
adc
or
push
push
or
xor
jns
add
rcr
pop
das
enter
test
popa
sub
ret
sub
test
sti
fnsave
adc
cltd
adc
xchg
lret
jae
ds
fs
cltd
cld
cmpl
rcll
push
adc
dec
gs
jne
lds
andb
rclb
jp
pop
adc
mov
sub
adc
cmp
ficomps
push
pop
push
xchg
jl
ds
sbb
push
mov
or
mov
hlt
loopne
adc
cmpl
je
inc
sbb
xchg
pop
xchg
push
push
hlt
ss
push
in
out
dec
push
mov
adc
sub
test
ljmp
mov
ss
inc
je
adc
lcall
and
movsb
sbb
lods
ja
adc
jl
mov
shlb
imul
scas
pop
jnp
sub
dec
loop
scas
add
or
test
lcall
mov
pop
mov
xchg
pop
and
cmpb
and
call
inc
cs
addl
xchg
int3
jmp
mov
loope
push
pop
and
or
inc
popa
fmul
adc
sbb
cmp
ds
lds
mov
xor
arpl
insl
xchg
pop
shrl
lock
pop
add
mov
push
sub
mov
dec
pop
rclb
insb
sbb
popl
imul
mov
daa
clc
imul
shrb
orb
popa
mov
dec
scas
fs
cmp
cltd
les
aaa
in
mov
inc
dec
inc
sbb
hlt
push
out
push
adc
or
out
sub
sbb
xor
xor
lds
jg
mov
xor
and
leave
inc
hlt
fsubrs
cmp
push
mov
add
rorb
fs
or
xchg
shll
lea
cltd
dec
adc
add
test
push
add
inc
push
mov
test
xorb
int3
sbb
call
push
and
and
andl
jp
mov
imul
dec
adc
cmp
fcmovnu
xor
mov
fcmovne
leave
sbb
int3
insb
mov
movb
cmp
data16
push
cltd
mov
xlat
out
mov
mov
pop
pusha
out
sbb
or
jle
add
cmp
or
enter
outsl
out
inc
mov
lea
push
mov
adc
pop
push
push
xchg
bound
fstpl
movsb
ss
rorl
inc
xchg
clc
pop
fcmovnb
fildl
daa
xchg
loope
enter
mov
push
loope
dec
dec
cmp
mov
addr16
jbe
arpl
sbb
adc
cmp
fisubs
cmpb
mov
fs
pop
fdivrs
pop
cmp
je
cmp
pusha
xor
dec
and
push
inc
push
xchg
jp
roll
fnstsw
pusha
rcll
data16
mov
out
jge
ds
and
or
orb
stos
jle
sub
pop
push
add
or
adc
mov
or
cs
fstpl
inc
mov
bound
loope
or
cmp
mov
test
jge
stos
xorl
cmp
inc
dec
sbb
cmp
arpl
push
cs
jo
cmp
xchg
push
dec
mov
xchg
jmp
inc
push
lods
push
and
add
mov
mov
aaa
and
or
popa
mov
add
inc
test
repnz
fwait
inc
pusha
cmp
mov
ss
xor
push
push
mov
pushf
les
add
cld
cmp
mov
cli
orl
adc
shrl
push
cmp
jge
mov
ja
mov
pushf
mov
add
fidivs
movsl
movq
jo
imul
mov
shrb
xor
xchg
xchg
insl
scas
or
lock
clc
clc
cld
or
das
imul
pop
cs
add
add
add
cwtl
cmpsb
push
mov
dec
sti
mov
dec
je
add
adc
mov
decl
cmp
dec
or
mov
shr
sbb
ud0
or
mov
sub
daa
dec
cwtl
add
xor
or
mov
adc
cli
sub
xor
or
and
in
dec
je
push
add
out
loop
insb
enter
dec
mov
repz
add
jmp
lcall
hlt
sub
in
add
push
add
jne
testb
cmp
jne
adc
movsb
cmp
add
aaa
daa
test
inc
test
xor
inc
popa
out
nop
addl
sub
or
cltd
idiv
inc
inc
imul
lret
and
clc
jb
push
cld
mov
sbb
sbb
mov
popa
rorb
mov
add
or
cmp
fisubrs
dec
add
add
xor
nopl
lock
sahf
cli
sub
add
mov
aam
mov
test
jmp
daa
pop
out
loop
jecxz
push
cmp
sarb
in
clc
jae
jg
and
pop
outsb
gs
jae
mov
lods
dec
jmp
push
mov
mov
aas
pop
nop
xchg
jl
pushf
testl
clc
in
adc
cmp
je
cmp
push
cmp
jne
inc
jne
dec
mov
inc
cmp
or
or
inc
pop
mov
stos
orb
inc
loopne
add
mov
cmp
pop
cmp
jne
push
dec
add
loop
sar
sub
outsl
mov
jmp
movsb
mov
cmp
jnp
cmovp
push
add
sub
xor
inc
mov
ficompl
fnstsw
jl
or
jg
mov
jmp
and
aaa
lahf
push
push
jmp
inc
jl
inc
jg
int
sub
aaa
jp
add
shl
dec
mov
sub
mov
jmp
mov
jle
inc
je
sub
jg
in
adc
test
or
das
movsl
mov
addb
icebp
jnp
mov
rcrl
ss
mov
or
sbb
add
out
cmp
pop
sahf
movsl
js
and
sub
les
aaa
push
add
inc
cmp
pusha
mov
jg
scas
pop
mov
push
fs
imul
pop
mov
mov
fildll
or
add
aaa
lcall
xor
dec
sub
pop
loopne
gs
inc
xor
gs
jge
inc
imul
push
pop
das
movsb
xor
xor
xchg
push
xorb
aaa
sbb
push
cwtl
rolb
cmp
or
in
inc
inc
push
out
jmp
xor
inc
fwait
xor
and
sbb
push
add
test
or
pop
push
shlb
les
push
cmp
mov
ret
pcmpeqb
xchg
cmp
xor
dec
pop
fmuls
je
and
cmpsb
inc
adc
clc
aaa
or
or
popf
add
into
gs
cmpsb
push
clc
mov
lods
arpl
sbb
pop
xchg
jl
push
loop
adc
inc
inc
sar
cmp
and
inc
mov
add
gs
shrb
pop
adc
xor
push
mov
je
xor
leave
or
fnstcw
mov
sbb
xor
test
imul
loope
pop
jg
addl
roll
sbb
push
mov
adc
cmc
imul
movsb
push
add
dec
cwtl
push
sbb
cmp
add
mov
inc
in
incb
mov
mov
sub
adc
hlt
jge
jne
add
je
inc
pop
add
sbb
lock
sub
and
test
movsl
movl
mov
push
test
adc
add
movsb
rclb
push
jp
ja
and
xchg
mov
or
add
in
cwtl
jne
in
inc
shlb
mov
xor
jmp
push
sbb
add
sub
or
out
and
lods
add
and
rcll
test
adc
imul
dec
lcall
or
jl
fsts
dec
xchg
or
mov
and
mov
int
out
les
pop
jne
push
movb
cmp
fadd
xor
or
rorl
fiaddl
push
cmp
pop
xor
xchg
and
inc
and
jbe
ja
cwtl
mov
mov
xchg
mov
sub
in
xor
pop
stc
cmp
fs
mov
mov
inc
ds
cmp
cmp
sbb
xor
je
push
inc
or
or
je
imul
sub
pop
sbb
dec
dec
lea
add
outsl
pop
sub
or
nop
mov
aas
movb
jbe
xchg
and
xor
sbb
push
adc
lock
scas
jns
pop
incl
push
cmpb
jne
mov
xor
idivl
ret
dec
or
ljmp
add
clc
dec
ret
sbb
mov
test
cmp
lods
sub
rolb
mov
dec
push
sbb
push
xor
push
xchg
mov
into
push
jb
cwtl
loope
cld
cmc
xchg
mov
or
nop
push
adc
inc
add
jp
cmp
adc
push
notl
sbb
or
adc
std
loope
pop
repnz
or
and
jp
arpl
filds
loope
adc
rep
push
addb
shll
mov
jnp
mov
adc
in
mov
cs
mov
mov
dec
dec
xor
inc
sub
mov
arpl
out
mov
xchg
push
nop
sub
jp
int3
jae
inc
pop
loopne
sbbl
gs
pop
or
insb
je,pt
inc
mov
push
jno
or
scas
fbld
add
add
ret
push
orl
mov
cmp
je
push
cmp
pop
lcall
mov
rclb
dec
adcl
mull
mov
jbe
adc
add
xlat
xor
and
aad
pusha
jo
jnp
jo
push
out
xor
push
push
push
jp
int
dec
shl
jmp
xchg
pop
inc
movups
cmp
sbb
pop
loopne,pn
sub
es
sub
xchg
sub
out
xchg
add
adc
xchg
loop
shlb
xor
sub
push
fisubs
sbb
aad
mov
cmpsb
jmp
sbbb
imul
mov
ss
insl
outsb
push
mov
sub
cltd
push
in
sbb
aam
test
mov
push
push
leave
and
lret
sahf
mov
mov
sub
jae
cmp
push
xor
in
lcall
inc
xor
cmp
jb
dec
cwtl
jmp
sbb
aas
push
lds
add
fnstenv
xchg
inc
push
xor
test
push
in
push
mov
mov
add
ret
mov
cmp
pop
mov
push
sarb
adc
pusha
fs
ljmp
lret
push
mov
scas
mov
mov
jne
and
or
dec
adc
push
out
inc
addr16
pusha
ret
jne
shlb
rcrl
adc
daa
dec
cmpb
sub
jb
inc
push
test
xor
adcl
cmpl
fdivl
dec
sbb
in
pusha
pop
roll
adc
mov
add
inc
and
cmp
inc
sarl
mov
daa
jmp
push
filds
inc
inc
push
or
fcomps
xchg
jo
xchg
rclb
inc
jp
cmp
add
rorb
lds
in
pop
and
add
add
pop
mov
cmp
add
or
mov
aaa
adc
mov
aaa
mov
mov
inc
sub
dec
pop
xchg
das
rclb
xor
jle
or
and
sbb
push
pop
data16
bound
repz
add
jno
pop
bound
sbb
data16
iret
adc
not
repz
mov
into
je
mov
jecxz
inc
ja
cs
enter
pop
nop
sub
pop
cld
sbb
sbb
aam
add
pop
push
test
jp
mov
orl
fisubrl
movsl
and
or
ret
cmpsb
leave
push
pop
fsubl
mov
jmp
push
lcall
jno
je
xor
loopne
pop
addr16
stos
xchg
ret
add
mov
jle
dec
inc
ljmp
xor
sbb
push
cmc
jno
or
sbb
sub
popf
jne
mov
or
or
pusha
mov
into
xorl
lret
mov
inc
pusha
idivb
gs
cmp
pop
cmp
xor
fcmovnb
xchg
je
dec
xchg
push
andb
pop
sub
fisttpl
pop
ret
cmp
push
or
mov
dec
xor
pop
pop
daa
scas
lea
addl
mov
xor
pop
or
and
lock
imul
fucomip
bound
mov
sub
mov
inc
push
dec
pop
addb
and
push
addb
xchg
mov
push
push
sbb
xchg
sbb
add
sbb
shrl
jl
pop
or
in
fs
mov
or
movsb
in
rcr
movsb
push
out
mov
test
movsb
sbb
push
pop
jb
inc
int
cwtl
lock
push
sub
inc
cmp
sbb
cmpsb
stos
mov
add
add
inc
sbb
test
push
xchg
or
push
or
lcall
mov
dec
ret
mov
push
or
adc
adc
mov
daa
pop
jae
push
push
cltd
in
filds
adc
mov
and
fwait
dec
dec
nop
nop
or
fbstp
fidivl
xchg
lahf
sub
push
cmp
pusha
insl
retw
fsubl
adc
jecxz
sbb
mov
pusha
mov
mov
jo
xor
add
adc
push
sbb
mov
pop
xchg
adc
add
test
rcll
jo
leave
call
add
fadds
pop
mov
pop
js
nop
inc
mov
jne
mov
adc
or
lret
or
xor
or
mov
mov
arpl
rol
add
dec
push
xor
mov
push
cmp
cmpsl
data16
pop
pop
and
ds
jle
pop
add
xor
sarl
loope
sbb
sub
mulb
mov
xor
jmp
inc
pop
call
mov
and
mov
cmp
bound
fistl
lods
or
data16
mov
pop
imul
inc
cmp
jge
stos
pop
push
ret
sbb
outsl
nop
jge
sbbb
daa
cwtl
jecxz
shrb
rorb
xor
or
inc
and
or
pusha
or
shl
adc
push
es
adc
cmp
fistl
lcall
or
loopne
sbbb
add
lea
inc
push
pop
lods
sbb
test
lods
popa
adc
sub
out
cltd
fs
push
sbb
shlb
ss
adc
mov
movsl
dec
cmp
adc
xor
dec
lea
daa
inc
mov
movl
rorl
repnz
adc
and
in
es
sub
sub
lods
mov
jo
sbb
and
ja
pop
js
jmp
and
loope
dec
adc
lock
out
test
inc
imul
or
mov
sbb
popf
sbb
data16
dec
pop
pop
and
adc
icebp
or
add
xor
dec
pop
xchg
js
inc
mov
sbb
orb
mov
or
sarl
cmp
ja
or
sub
xor
lock
mov
aam
test
inc
es
loopne
js
cmp
cmpl
and
sub
inc
mov
outsl
pop
push
jae
push
pop
push
clc
cmp
jmp
pop
cld
xor
lock
inc
xor
push
loop
cmp
cmp
fidivs
or
mov
cltd
fmuls
jmp
lea
fisubs
adc
test
mov
in
cs
gs
dec
and
xchg
or
jle
xchg
lods
adc
inc
insl
fisubl
sub
loopne
mov
mov
xchg
push
add
sbb
sbb
dec
dec
sahf
nop
lcall
fdivrs
ret
cmp
cmp
jge
xchg
add
mov
js
inc
and
jge
push
inc
sub
loopne
call
xor
sub
jae
xsaves
dec
jecxz
rcll
sub
stc
clc
or
jp
ss
cmp
mov
or
cwtl
jne
repz
push
adc
ret
mov
adc
push
xchg
push
pop
insl
test
sub
adc
xchg
aam
push
cmp
pop
mov
sbb
adc
xor
push
add
fnsetpm(287
mov
or
loopne
lcall
add
pop
mov
or
xchg
loopne
push
mov
xor
sub
cmp
je
jp
and
mov
add
mov
add
add
dec
pop
insl
pop
iret
push
mov
shl
js,pn
jne
ret
add
leave
data16
push
mov
jecxz
xor
cmc
dec
sbb
in
arpl
xorb
fisttps
mov
les
and
jns
mov
push
scas
stos
pop
aaa
jmp
sub
sarl
jecxz
sbb
adc
sbb
jae
cltd
mov
loopne
outsl
in
jb
cld
std
flds
fs
jg
push
or
xchg
push
jp
lea
test
roll
xor
pop
jbe
das
test
movsl
add
xchg
mov
add
cli
jmp
inc
ja
mov
test
fwait
lods
test
add
lds
pop
and
mov
adc
orb
xchg
test
outsb
adc
fisttpl
sahf
adc
in
mov
test
mov
cmpl
adc
addb
pop
mov
or
pusha
mov
je
movsl
mov
adc
scas
mov
add
or
mov
lock
add
lods
mov
xchg
or
dec
adc
fstpl
push
xor
pop
mov
pop
cmp
sbb
int3
sub
push
cmpsl
rcll
mov
repz
shr
push
push
xor
daa
arpl
in
pop
add
xor
and
hlt
or
push
das
sub
push
inc
inc
add
jnp
ret
or
cmp
fiadds
lds
and
rcrb
or
pop
cmp
cs
lcall
in
mov
xchg
cmpsb
ds
test
fs
adc
pop
push
ja
inc
jmp
add
cmpb
fistpll
movsl
adcb
adc
and
or
xor
sbb
aad
outsb
mov
sbb
sbb
clc
dec
xor
cmp
push
or
je
sbbb
pshufw
ja
sbb
std
cmpb
sub
sub
and
insb
aaa
jo
ret
jb
and
jmp
push
or
addr16
dec
test
popa
push
add
les
cmp
adc
adc
icebp
add
je,pt
sar
cmp
sub
xor
loope
mov
inc
roll
push
push
mov
ret
int
add
and
mov
inc
sbb
add
pop
mov
out
leave
lret
inc
sub
js
sub
stos
sarb
push
shlb
sub
in
pop
jae
sub
rclb
push
mov
push
dec
xor
loopne
push
inc
mov
add
and
jne
jne
leave
hlt
xor
or
adc
jmp
add
add
call
add
sbbl
je
cmp
jbe
push
popf
sbb
or
das
or
jecxz
xor
nop
sub
sub
xor
sub
adc
or
or
insb
cmp
cli
pop
inc
fisttps
mov
ljmpw
mov
sub
pop
mov
mov
jmp
test
mov
lcall
xchg
int3
mov
xchg
xchg
jo
dec
sahf
xor
lcall
loopne
cmp
icebp
daa
rorb
scas
xchg
mov
sub
inc
jo
mov
add
mov
push
dec
add
loope
lea
fucom
add
cmp
adc
mov
xor
inc
sbb
add
jb
data16
add
add
sub
data16
sbb
adcb
mov
pop
ja
shll
mov
sbb
push
xchg
inc
jb
mov
sbb
mov
das
pusha
ljmp
sbb
mov
xchg
jae
jmp
in
das
or
inc
push
xor
pop
div
faddl
aaa
lea
pop
or
ljmp
xchg
jmp
lods
push
dec
or
adc
inc
popf
fidivs
sub
adc
cmp
push
rorb
gs
jbe
xor
adc
add
xchg
mov
mov
rol
sbb
mov
and
cmpsl
jecxz
mov
in
push
orl
dec
inc
or
lock
out
or
or
mov
sbb
stos
cmp
std
cmpsb
imul
adc
sub
sub
jne
or
adc
out
adc
add
das
pop
lods
fcomi
ret
fidivrl
clc
int3
add
mov
jnp
rolb
dec
test
and
inc
or
jb
cmp
and
loope
lcall
mov
cmp
jb
neg
and
je
sub
cmp
rorl
jmp
loopne
add
or
or
add
stos
mov
mov
ljmp
jns
mov
hlt
push
add
shrb
stc
lock
movsl
jp,pn
in
pusha
jmp
loop
add
ljmp
push
jne
sub
decl
adc
lods
sbb
mov
jle
or
push
and
fbld
sub
cwtl
scas
pop
jl
fldl
pop
and
sbbb
jne
fnstcw
cmpb
and
clc
jg
fs
jle
into
sbb
add
movd
movaps
mov
fcmovne
jnp
enter
shlb
jle
xor
test
sar
push
ror
test
decl
fnstcw
and
lret
or
jg
std
int
mov
adc
jnp
mov
sub
aam
ret
lock
call
adc
mov
mov
xchg
repnz
imul
mov
mov
fnsave
addps
int
sub
fcmovb
sbb
adc
push
dec
adc
pop
jo
pop
test
sar
in
mov
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
les
mov
or
int3
jmp
dec
mov
sub
ret
adc
mov
cld
add
hlt
and
xchg
test
int3
or
aad
push
and
push
pusha
inc
dec
pusha
outsl
loope
adc
stos
loope
pusha
mov
sub
mov
or
mov
mov
push
sub
add
cld
clc
ja
mov
cmp
mov
push
push
je
cmp
jne
inc
cmpb
out
adcb
and
insl
pusha
mov
or
adc
add
cmpsb
or
in
push
or
mov
mov
ret
daa
cmpsb
ljmp
xlat
jno
cwtl
inc
push
xor
loop
scas
jmp
mov
push
xor
and
dec
fs
fwait
jp
lret
nop
mov
cbtw
xor
add
jecxz
lcall
xor
mov
pop
mov
xor
push
mov
scas
xor
and
outsb
nop
fsts
or
and
push
mov
pop
push
cmpb
mov
jmp
jns
push
pop
loopne
popa
test
xor
mov
inc
push
adc
inc
fadd
and
add
mov
sbb
movb
cmp
ret
sbb
pushf
pop
addr16
sbb
sbb
sbb
test
daa
out
inc
mov
jbe
pop
enter
movsl
std
add
pop
pop
in
mov
pop
dec
and
out
dec
and
arpl
inc
or
inc
mov
mov
cmp
jmp
stos
add
testl
mov
pop
adc
fstpl
jne
orl
dec
xchg
hlt
push
jg
adc
mov
jno
push
loope
shr
push
ret
and
arpl
decb
adc
adc
inc
push
push
test
inc
cmp
lea
mov
sub
sub
cmp
push
inc
xor
mov
mov
cmp
cmp
cli
adc
inc
mov
sub
fdivrl
xchg
or
adc
or
test
sub
mov
mov
or
rclb
mov
data16
in
adc
ret
xchg
xor
enter
inc
adc
lods
jnp
mov
add
dec
inc
jae
enter
sbb
cld
add
ss
inc
or
les
aad
cwtl
jns
adc
clc
andb
pop
sarl
arpl
loop
icebp
imul
push
xchg
and
cs
mov
cmp
mov
add
cmp
jns
paddsb
inc
inc
sub
enter
xor
mov
rorl
jne
insl
cmp
sbb
jmp
ret
jne
xor
outsb
loop
jne
cmp
cli
testb
je
inc
mov
cmp
js
fistpll
shl
or
cmp
jne
dec
jmp
xchg
jle
cmp
xor
fstpl
mov
jne
inc
aaa
push
lds
mov
test
jnp
push
loope
int
test
cmp
jno
cmpsl
test
fnstcw
dec
inc
dec
push
rolb
inc
or
xchg
lock
push
cmp
fbstp
add
cmp
cmp
and
cmp
mov
xor
pop
and
dec
fmul
mov
dec
pop
pop
jne
test
mov
pop
adc
stos
jbe
out
push
cmp
jb
rep
jmp
mov
cmp
insl
xchg
hlt
add
test
aam
icebp
jnp
in
rclb
in
adc
xor
sarl
pop
xor
inc
add
daa
cmpsb
lcall
sub
int3
lea
push
dec
add
dec
cmpsb
nop
inc
add
into
xor
xchg
mov
repz
movsb
push
pushf
xchg
mov
je
inc
mov
mov
call
cmp
in
lock
loopne
iret
repz
clc
clc
cld
sbb
inc
inc
lea
sbb
cmp
pusha
jmp
popa
sbb
sub
mov
inc
pop
sti
and
and
lea
adc
cmp
pop
and
std
sti
popa
repz
cld
out
ds
neg
sarl
or
sbb
stc
sub
popf
inc
pop
nop
push
jo
xchg
mov
mov
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
rcrb
mov
addr16
mov
bound
adc
sbb
repz
and
xor
inc
push
iret
repz
ss
sbb
adc
iret
repz
adc
or
nop
cmp
repz
add
sahf
out
xchg
insb
push
je
cwtl
and
push
add
or
mov
shlb
enter
jbe
sbb
add
cmp
inc
imul
test
addb
ret
leave
cwtl
or
sbb
adc
fidivs
sub
stos
test
hlt
add
push
in
push
pop
or
fwait
call
lock
sub
sbb
mov
lcall
sbbb
test
xchg
and
add
push
add
and
cmp
adc
xchg
inc
pop
push
shll
and
test
clc
push
jne
iret
or
mov
push
cmp
xor
lds
pop
popf
mov
and
xchg
mov
inc
adc
test
int3
test
loope
dec
cmp
or
mov
je
ljmp
mov
js
mov
test
cltd
inc
in
jb
and
or
push
dec
cmp
inc
dec
cltd
mov
jecxz
push
sbb
js
dec
adc
int3
push
adc
dec
push
jle
mov
les
fndisi(8087
add
push
jbe
sub
inc
aaa
pop
shrl
jle
cmp
pushf
mov
cmp
into
lea
cmp
adc
pop
sbb
jmp
sub
dec
jnp
mov
push
adc
or
add
out
mov
jne
pop
sub
in
test
cmpsl
cld
and
add
ds
and
xchg
or
sbbb
daa
rcll
fidivl
into
xor
or
cli
popa
test
lock
cltd
andb
and
push
clc
pop
adc
mov
push
inc
push
pushf
out
adc
add
pusha
faddl
xor
shll
call
ss
sbb
pusha
push
enter
inc
aas
pop
and
mov
sub
jns
ja
cmp
ja
pop
adc
sub
vmovsldup
and
add
lret
ret
xchg
jnp
pop
add
sub
inc
les
xchg
test
mov
aaa
or
je
dec
cmp
push
jne
testb
negl
xor
or
push
push
push
ror
dec
shll
loopne
cwtl
pop
fcomps
adc
add
inc
insl
cld
cmp
arpl
mov
rorb
xrelease
dec
pop
lret
pushf
sbbb
sahf
inc
jl
add
jg
jbe
js
lock
gs
ljmp
xor
sub
jmp
sbb
sub
repz
cs
push
pop
push
or
lds
or
pop
rcrl
xor
fs
or
rcrl
gs
adc
popf
pop
sbb
add
aam
or
shl
jl
popa
jmp
fcoms
sub
mov
ja
pop
jbe
lea
mov
outsl
adc
sbb
jp
pop
call
leave
push
sbb
xor
jb
cmp
clc
jbe
add
dec
push
sbb
rorl
mov
adc
out
jno
popa
mov
mov
or
jmp
test
jne
test
mov
and
rolb
add
push
add
lods
cld
jbe
clc
mov
add
arpl
mov
pushf
pop
push
add
push
xchg
repnz
cmp
arpl
cs
cld
out
test
push
jp
fistpll
xor
adc
sub
enter
mov
push
lods
jbe
ds
add
adc
xchg
out
subl
jnp
js
pop
push
sub
push
subb
add
inc
js
dec
lods
dec
inc
jmp
jbe
push
jl
repnz
or
insl
add
push
rolb
xor
repz
test
shl
ret
les
sub
movsb
sbb
lods
cmp
pop
mov
add
ret
out
push
cmpb
sbb
push
adc
cmpsl
jns
push
sbb
push
dec
pusha
mov
shll
das
loopne
frstor
inc
rcl
sbb
mov
flds
js
and
adc
or
add
dec
jne
mov
push
jmp
dec
repnz
jno
sub
popf
mov
push
push
ret
dec
jne
mov
sbb
xchg
sahf
xchg
call
push
or
pop
mov
inc
cmp
pop
daa
push
mov
sub
mov
loope
sarb
mov
jae
add
into
out
add
inc
cmp
imul
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
aam
lahf
pop
les
adcl
jb
jns
insl
test
dec
or
adc
jns
out
jmp
std
push
xor
cld
iret
lcall
scas
adc
in
adc
xor
cmp
jne
inc
inc
inc
clc
out
push
push
add
fdiv
loop
test
add
std
inc
jo
jle
dec
test
mov
adc
stos
mov
loopne
repnz
and
test
ret
push
push
jo
lock
dec
leave
lea
adc
popl
andb
imul
dec
dec
and
leave
adc
or
and
es
sub
pop
pop
popa
repnz
es
dec
dec
mov
fimull
pop
roll
mov
inc
xchg
ljmp
popa
mov
push
sahf
aaa
test
jg
and
lea
or
adc
aam
pop
dec
jge
push
daa
inc
or
cmc
push
nop
jge,pt
pop
add
xlat
xchg
inc
shlb
mov
je
mov
mov
pop
jg
add
mov
pop
adc
scas
test
jo
and
rolb
imul
push
ss
ffree
push
push
pop
into
xchg
and
outsb
loopne
mov
push
lret
jae
out
aaa
push
and
push
dec
fadd
lmsw
lea
fucom
xchg
xor
scas
and
jecxz
and
mov
insl
add
loopne
push
xorb
clc
pop
insb
aaa
and
or
shrb
push
in
jae
jb
sarb
addr16
daa
test
add
inc
dec
xchg
xchg
push
xchg
mov
push
mov
push
adcl
push
cs
mov
popa
add
push
mov
das
in
mov
mov
inc
imul
mov
ljmp
push
push
orb
rorb
clc
add
ret
push
sbb
je
add
mov
int3
and
fmuls
lock
and
sub
or
jo
sbb
xchg
subb
mov
loope
jno
or
or
loopne,pn
lock
adc
sub
ja
xor
pop
mov
push
inc
lcall
lock
rol
incb
mov
inc
je
mov
outsl
mov
lea
neg
mov
sbb
or
or
std
add
add
xor
pusha
repz
mov
scas
sbb
mov
mov
add
mov
inc
cmp
jb
jo
adcl
jae
shrb
mov
add
popa
inc
pop
ret
gs
jo
mov
or
ret
mov
or
iret
mov
sub
or
popf
sbb
adc
mov
mov
push
divl
lret
dec
stc
addl
std
or
iret
xor
jo
and
ljmp
add
das
push
add
mov
sahf
or
inc
cwtl
mov
or
out
cmp
je
out
sub
out
and
lcall
jmp
pop
addr16
dec
sbb
aam
or
xchg
dec
sbb
pop
aaa
adc
xor
mov
ja
add
sub
jle
mov
cli
mov
or
jl
and
lret
int
out
push
mov
test
cmpl
pop
mov
pop
flds
xchg
mov
loop
pop
mov
inc
jmp
and
outsl
sti
fwait
sbb
jmp
adc
jne
sub
cmp
and
stc
xlat
hlt
cmp
mov
adc
cmp
int3
push
xor
push
mov
js
or
scas
repnz
in
repz
adc
pop
mov
pop
add
mov
adc
mov
and
sbbb
mov
jg
mov
and
je
lret
sbb
je
lea
pop
lea
jmp
sbb
lock
or
sub
outsl
jbe
push
add
jo
fmuls
movsb
sbb
nop
jmp
push
test
mov
add
loopne
std
mov
sbb
inc
mov
lea
xchg
sbb
inc
sbb
or
lods
xor
mov
icebp
call
mov
add
ret
insb
dec
push
sbb
push
inc
or
push
lcall
xor
jne
mov
pop
or
mov
mov
mov
inc
mov
and
mov
jne
fs
add
adc
pop
pop
pop
add
push
push
and
push
add
jno
and
push
pmovmskb
push
push
push
orb
add
lods
sub
orl
cmp
je
and
or
sub
xor
or
add
mov
insb
enter
sbb
xor
xchg
jno
loopne
jne
test
mov
or
add
push
fstl
lods
dec
jno
add
js
or
nop
je
inc
mov
jb
lea
push
adc
or
das
adc
xchg
adc
cmp
test
sub
or
outsb
dec
rclb
mov
call
clc
ret
inc
testb
cld
or
inc
rorb
push
pushf
inc
data16
xlat
mov
sbb
mov
or
jne
or
add
sbb
int
mov
sbb
push
mov
sarl
mov
push
test
xor
hlt
test
in
or
int3
pop
gs
xchg
mov
dec
ja
or
les
push
mov
cli
xorb
adc
mov
mov
or
add
jmp
mov
adc
mov
cmpb
pop
jp
dec
sbb
or
clc
inc
call
mov
and
dec
leave
or
xor
sub
mov
jmp
add
inc
fadds
call
sub
mov
mov
inc
leave
test
sar
add
gs
nop
xchg
cmp
lock
mov
rcrb
xchg
add
fistpll
rcll
or
or
aad
and
push
into
and
jmp
xor
adc
loop
or
scas
xor
out
mov
hlt
push
fisubrl
jne
ja
rdpmc
mov
cmc
inc
pusha
aas
xor
test
subb
adc
stos
rcrl
dec
lea
xor
cld
lahf
push
jge
xor
pusha
out
imul
sub
shrb
jmp
movl
push
dec
adc
add
dec
cmp
in
stos
sub
sbb
pop
aam
push
insb
push
mov
xchg
add
or
jne
movsl
test
out
jae
stos
aaa
adc
pcmpeqd
sub
pop
idiv
lea
adc
decl
mov
loop
cli
mov
ja
pop
xor
popa
lcall
xor
rol
addl
js
adc
inc
js
ficoml
subb
dec
xchg
test
pusha
add
adc
mov
xchg
push
bound
mov
fwait
jae
or
fiadds
jecxz
jmp
iret
sub
push
in
sbb
inc
adc
or
sahf
out
push
repnz
add
or
cmp
cs
testb
testl
pushl
push
push
jecxz
sbb
mov
and
push
push
fists
pop
sub
fcmovb
in
mov
adc
and
lods
add
addl
rcl
add
or
jg
jo
in
xor
pushf
push
push
sbb
adc
mov
faddl
xor
repnz
adc
clc
fs
lods
popf
jmp
daa
adc
mov
adc
or
imul
sti
xchg
push
dec
or
push
movsl
jmp
dec
je
add
aas
cli
dec
sbb
dec
jne
push
pop
pop
cmp
bound
ja
scas
push
sbb
add
jmp
jecxz
xchg
addr16
push
and
push
jmp
add
sub
pop
push
push
les
lea
test
jp
cmpsl
sbb
push
push
dec
jae
adc
xchg
orl
push
lcall
push
jl
push
jne
mov
addr16
add
dec
loopne
and
out
xchg
inc
sbb
popa
pop
imul
out
xchg
test
je
fistpl
and
cmovp
pop
jns
mov
or
jo
inc
adc
add
add
push
addb
pop
cld
push
dec
jmp
xchg
jbe
orl
leave
add
ja
mov
jmp
rorb
add
dec
pop
jne
punpckhdq
sbb
sub
and
pmuludq
icebp
cmp
pop
shl
or
add
fcoml
sub
add
orl
inc
inc
mov
add
adc
add
cmp
inc
dec
jbe
sub
adc
sbb
mov
clc
jb
dec
and
add
int3
inc
sub
mov
scas
mul
mov
add
add
sub
pop
sbb
sbb
or
sub
mov
inc
adc
test
imul
clc
rclb
adc
je
shlb
je
and
cmp
or
cmp
clc
mov
pop
jle
fdivs
push
xlat
push
lcall
rorb
jo
xchg
and
dec
pop
and
dec
in
jo
loopnew
imul
add
mov
sbb
add
push
decl
das
cs
loope
xor
pusha
outsl
inc
pop
push
add
push
sbb
xchg
and
add
push
pop
sub
xor
cmp
cmp
cmp
jmp
mov
sbb
mov
pusha
into
cmp
lret
push
xlat
push
push
add
sbb
or
leave
mov
inc
lods
movsl
stos
sbb
jnp
push
lcall
icebp
daa
lcall
push
dec
lock
xchg
add
inc
and
inc
mov
pop
mov
push
inc
cmp
pop
sub
stc
xchg
clc
push
mov
stc
mov
test
cs
cmc
mov
notb
imul
add
cwtl
jmp
loopne
pop
fcmove
movsl
inc
sub
pop
adc
lds
sub
or
je
ret
leave
dec
cs
add
cmp
loopne
mov
jmp
dec
or
mov
cltd
pop
inc
mov
test
push
cmp
addr16
nop/reserved
cs
ret
shrb
mov
xchg
je
push
fsts
movsb
mov
sets
push
shl
jo
lods
int
push
mov
inc
into
icebp
in
push
add
in
add
pop
xor
push
enter
js
mov
or
inc
dec
aaa
xorb
repnz
stos
dec
test
cmp
pushf
aad
aaa
sarl
mov
stos
mov
cmp
dec
and
sbb
out
xchg
xchg
mov
roll
and
cmp
xchg
xchg
cwtl
pop
enter
ret
popa
mov
push
insb
scas
popf
test
cmp
ds
mov
pop
sarl
push
mov
mov
mov
imul
mov
ljmp
pop
movsb
adc
aam
pop
lret
sbb
mov
xchg
xchg
test
leave
push
orl
mov
pop
pcmpgtb
sbb
inc
inc
sbb
arpl
pusha
jge
call
dec
push
and
rcr
dec
pop
pusha
cmpsl
or
jl
add
mov
or
pop
mov
scas
adcb
cs
enter
movsb
inc
mov
andb
or
fisttpl
jmp
addb
mov
dec
test
pop
push
and
inc
push
push
sub
sub
push
fs
dec
outsb
ja
or
imul
ja
cmpb
mov
push
push
dec
call
xchg
xchg
add
push
lock
inc
sub
jne
push
in
arpl
mov
jmp
pop
sbb
mov
pop
xor
pop
or
push
lahf
push
repnz
jle
cmpsb
mov
or
and
mov
fsubrl
int3
or
xchg
ret
jmp
jbe
loopne
icebp
movsl
rcrb
ljmp
xor
pop
jne
inc
pushf
in
mov
jp
add
repnz
bound
data16
jns
xchg
inc
inc
popa
push
and
xchg
lret
mov
xchg
add
jae
aad
mov
lods
and
push
cmp
cmp
push
leave
arpl
cmp
pop
jmp
sti
mov
add
push
fs
or
pop
rcr
fs
pushl
decl
pop
jno
incl
iret
repz
and
adc
add
mov
hlt
jns
rol
jmp
sub
loop
jmp
xchg
mov
inc
fcoml
push
lock
cmp
push
jo
xchg
pop
fisubs
cs
mov
jns
test
test
orb
pushl
out
cmp
sahf
in
push
hlt
addr16
orb
inc
inc
ret
push
xchg
push
sbb
repnz
push
fldl
sti
addb
in
jnp
fbld
or
je
mov
sbb
and
fisttpl
push
shr
inc
jne
pop
xlat
mov
or
cli
add
push
loope
xchg
add
mov
inc
push
loopne
jmp
mov
jne
add
sub
adc
stc
and
loopne
lea
inc
and
cmp
mov
jo
or
and
adc
add
fnstcw
sbb
outsb
xchg
jbe
or
push
push
xor
enter
inc
push
sbbb
xchg
ret
cltd
mov
ret
jmp
negb
lock
mov
fstl
push
pop
inc
rcrb
xchg
mov
loope
cmp
rorb
push
lea
mov
inc
icebp
pop
push
add
pusha
xchg
mov
fs
or
add
test
push
inc
xchg
pop
loopne
inc
push
adc
imul
movsb
scas
add
cmp
jns
and
test
add
push
mov
call
push
rcrl
movsl
cmp
cli
and
sbb
cmpb
lock
xchg
in
es
ja
test
mov
rcrl
daa
loop
mov
and
pop
or
jl
jb
jle
addb
mov
movb
jmp
ss
je
insl
xor
sub
std
add
addb
add
cmp
mov
jo
cwtl
clc
mov
insb
or
dec
stc
movsl
add
fdiv
or
inc
repnz
cwtl
or
xor
or
adc
inc
call
xor
bound
test
orb
imul
or
std
cwtl
mov
insb
xor
jne
mov
push
stc
imul
mov
movsl
jge
test
add
inc
push
aaa
cmp
xchg
xor
mov
mov
mov
ljmp
adc
add
sbb
push
ret
adc
mov
mov
in
pop
lock
inc
or
int3
xor
out
push
inc
xchg
xor
cmp
loope
add
sub
sti
sbb
movsl
xchg
inc
jo
cmpb
mov
mov
pop
push
xor
and
arpl
loopne
fcoml
gs
aam
sarb
das
das
mov
popf
enter
rol
cmp
lods
mov
mov
divl
fbld
aam
aaa
dec
cld
xor
inc
cmp
aaa
xor
adc
and
in
sbb
clc
jno
sub
orl
fmull
add
scas
jmp
mov
in
inc
in
jo
mov
or
xor
into
imul
sub
sub
add
or
sbb
rcr
int3
int3
add
xor
adc
add
inc
sub
xor
addb
jmp
clc
or
dec
or
xchg
outsb
jb
dec
lods
sub
mov
adc
insb
ret
test
mov
sbb
xor
mov
adc
jbe
push
clc
dec
push
loopne
fisubrs
sbb
lcall
inc
xchg
push
push
pop
divl
xchg
push
push
or
dec
xor
movsb
ss
rcrb
clc
dec
movsb
fimuls
or
in
orb
cmp
call
mov
add
jns
add
lock
stc
rcrl
xor
mov
rolb
testl
and
cmp
and
sbb
jmp
or
cmp
add
or
sbb
movsb
xor
and
ja
adc
push
pop
adc
push
mov
xor
je
test
ret
test
mov
mov
mov
shl
pop
cs
hlt
fdivrs
pop
mov
popf
jne
sub
fcmovnb
fidivs
icebp
je
inc
cmpsl
pop
loopne
sub
jp
pop
fimull
push
xor
lcall
xorb
mov
mov
or
pop
add
cmpl
js
sti
les
sbb
pop
ja
push
mov
loopne
lock
rcrl
pop
sar
pop
lods
movsb
and
xchg
push
add
orl
out
mov
fdivr
cmpl
fcmovne
test
outsb
stos
sbb
dec
or
je
or
push
xchg
into
xchg
fldpi
insb
lods
pushf
pop
or
add
push
lret
in
sub
jecxz
mov
aam
mov
mov
adc
dec
push
or
jo,pn
std
loopne
js
notl
arpl
sub
stos
insl
pusha
lea
ja
adc
lods
shll
in
sub
hlt
fistl
cs
stc
cmp
js
inc
jae
je
insb
pusha
xchg
inc
sub
aad
test
fsubp
ds
fsubl
or
add
adc
jmp
jae
and
js
add
fmull
shlb
sub
mov
jno
dec
xchg
inc
fs
cmp
sbb
imul
int
and
pop
jp
adc
out
mov
add
adc
not
loope
xchg
movl
fiaddl
lea
mov
or
sbb
jle
inc
je
pop
push
or
pop
and
mov
mov
inc
movsb
dec
push
mov
and
dec
adc
jge
sbb
je
push
arpl
imull
xor
and
cmp
aaa
aam
mov
dec
pop
gs
shrb
and
in
rclb
xchg
jl,pt
adcl
clc
dec
mov
sub
loopne
mov
mov
stc
or
addr16
mov
push
xchg
inc
inc
push
add
jl
insl
cmp
jne
cmp
xor
pushf
sub
cmpsb
popf
lret
sbb
xlat
popa
jle
mov
mov
ss
cmp
popf
add
test
adc
push
mov
mov
inc
mov
aad
aas
xchg
dec
loop
push
out
mov
ja
jmp
mov
inc
lods
xlat
sbb
pop
lret
mov
dec
mov
mov
xor
jp,pt
mov
je
pop
cmp
xchg
cmp
test
sbb
outsb
jo
or
or
ret
das
xor
adc
jmp
faddl
jno
outsb
je
arpl
jmp
insl
sub
add
notb
or
in
imul
pusha
flds
adc
push
jb
jns
sbb
or
dec
mov
shl
sub
or
shlb
shll
movsb
addr16
mov
loop
cmc
sti
jmp
cmp
jle
popa
mov
sbb
and
pop
push
add
mov
pop
mov
push
adc
ret
push
shr
push
adc
adc
push
jbe
xchg
pop
jb
mov
inc
cld
adc
xor
int
fimuls
loope
xchg
sub
popf
xchg
or
inc
sbb
fwait
dec
rorb
sub
stos
push
stos
sbb
push
push
rol
xchg
push
scas
data16
pop
mov
or
cmpb
jne
rol
mov
xor
inc
stos
xor
and
sub
push
sub
pusha
cld
jmp
shll
mov
mov
inc
daa
add
pop
adc
loopne
lock
or
push
into
xor
push
scas
frstor
inc
mov
rcrl
adc
dec
adc
test
inc
cld
jmp
or
testb
add
push
sbb
daa
mov
pop
jl
jae
jbe
cmpb
fidivrl
and
mov
or
cmpb
sub
lock
mov
add
mov
or
jnp
fmull
int
mov
loop
sbb
xlat
and
or
add
sub
mov
paddsw
xchg
lret
clc
repnz
sahf
add
mov
dec
jmp
sub
sub
inc
cmp
mov
insb
push
cmpsl
into
cmpb
stc
or
cmc
movb
inc
jmp
push
mov
or
add
dec
dec
adcb
out
xchg
repnz
sar
ret
js
inc
push
jle
add
scas
sub
add
sub
movsb
movsb
push
sub
dec
push
and
cmp
or
inc
dec
pop
push
decl
mov
sti
in
jle
cmp
xor
dec
sub
push
pop
pusha
rolb
jo
mov
mov
enter
dec
cmpb
sub
adc
xor
cs
xchg
loopne
aam
adc
pusha
jnp
jle
aam
dec
push
and
sbb
pop
orl
sub
stos
and
xor
add
mov
lret
lcall
fstps
jmp
pop
int
fchs
pushf
cwtl
andb
inc
and
outsb
rorb
xor
mov
xchg
mov
xor
mov
movsl
daa
pop
mov
mov
push
sar
movsb
addl
outsl
addr16
sbb
jge
sub
add
pop
xor
add
jnp
fidivs
jns
int
push
outsl
shl
dec
pushf
test
addr16
out
out
testl
enter
jp
cld
mov
dec
popf
xchg
adc
xor
mov
xchg
arpl
int3
je
dec
pop
daa
repnz
jb
icebp
cli
fwait
jp
push
mov
xlat
roll
push
dec
pusha
gs
xchg
repnz
cmpb
xchg
nop
push
add
nop
cmpsb
es
bndldx
jbe
and
pop
in
pop
dec
pop
arpl
and
push
scas
inc
pop
lock
pop
and
gs
in
sub
mov
jnp
push
cmp
shrl
add
cltd
pop
mov
ss
jge
push
push
jp
insl
and
sahf
inc
jb
shll
in
and
nop
lea
pop
cmpb
add
xchg
cmpsl
sbb
js
adc
shlb
and
rol
mov
cmp
shlb
adc
inc
lret
adc
pop
rclb
jne
add
dec
jge
loopne
sahf
mov
add
nop
add
sbb
fsubrl
pushl
insl
and
lahf
out
ss
and
add
push
mov
stos
mov
stos
mov
jle
push
or
mov
adc
jmp
inc
loopne
gs
scas
xor
mov
pop
lods
popa
jl
out
sub
or
and
es
imul
lock
or
adc
leave
sub
movsb
or
sbb
pop
sbb
mov
adc
sbb
jge
int3
mov
add
lds
fmull
push
jb
in
stos
imul
and
mov
push
jno
push
rorb
pop
mov
aaa
test
ret
jecxz
fstps
pop
and
mov
dec
inc
xchg
addb
hlt
cmp
jp
cmp
or
insb
test
loope
mov
push
icebp
pop
jbe
mov
xor
or
rclb
ret
jge
sti
cmp
pop
xor
xor
ss
adc
lea
in
addl
jbe
sbb
mov
sub
mov
pusha
sub
sar
sub
xchg
aaa
mov
das
adc
mov
cmpl
jne
loope
sbb
into
in
xchg
push
callw
sub
add
into
pop
push
add
arpl
fcoms
pop
xor
je
test
lret
xchg
or
mov
and
inc
sbb
dec
jb
jo
pushf
cltd
inc
shl
mov
push
fisubrl
das
lea
or
imul
or
dec
inc
xchg
pop
add
mov
leave
jecxz
sub
fisttpll
les
mov
add
icebp
pop
push
jns
sub
inc
cwtl
pop
out
mov
mov
push
add
xor
push
ret
jmp
mov
fbstp
sti
nop
jne
jg
xchg
mov
shlb
lahf
insb
int3
push
mov
jecxz
ret
and
cmp
push
lea
inc
jbe
mov
out
adcb
mov
rol
aam
lock
inc
lock
push
adc
add
ret
neg
bound
adc
cmpsl
xchg
nop
xchg
adc
insb
iret
add
int
mov
or
inc
sbb
or
or
pop
loopne
data16
popa
pop
sbb
push
cld
mov
int
mov
pop
pop
dec
cld
adc
ret
inc
ror
lret
aam
sbb
add
jecxz
lods
jg
pusha
loop
adc
push
into
xor
push
push
dec
insb
loop
cmp
jmp
jle
xor
jmp
and
cmp
lidtl
jbe
add
push
mov
cmpsb
push
jmp
jp
pop
push
scas
nop
gs
aam
and
pop
add
and
push
movq
sbb
push
call
sub
and
pop
sub
inc
xchg
lea
shl
jbe
push
mov
cmp
dec
adc
lret
test
sbb
inc
or
mov
or
ror
pop
das
dec
jb
jmp
imul
andb
sub
sbb
dec
xchg
and
lcall
test
inc
cmpl
jne
push
cmp
push
nop
insl
popl
aam
das
and
pop
mov
jb
adc
dec
push
imul
addr16
mov
mov
pop
jl
cmp
mov
shlb
sbb
cmp
mov
ret
mov
in
les
and
enter
mov
add
mov
int
lods
es
cli
pop
ja
mov
movzbl
jo
xchg
cli
push
add
mov
test
es
push
mov
or
loopne
ret
pop
ja
fldl
mov
cmp
mov
shrl
filds
xor
and
mov
pop
jl
mov
rcl
jbe
in
or
add
mov
sub
arpl
les
inc
filds
pop
push
gs
imulb
cmp
cltd
and
stc
cmp
jns
mov
push
inc
rclb
cmp
jbe
jbe
jecxz
or
pop
and
add
sbb
shrb
mov
xchg
testb
xor
pushf
je
sbb
push
dec
inc
pushf
pushf
pushf
pushf
cmp
es
sti
xor
lds
push
or
sbb
dec
rorl
mov
xor
xchg
pop
in
pop
mov
xchg
sub
mov
mov
push
xor
leave
cmp
lret
mov
test
lods
push
das
fcoms
and
xor
call
push
mov
adcb
dec
ud1
cltd
and
fmuls
mov
and
sub
std
add
mov
in
and
mov
sbb
dec
push
call
inc
inc
push
mov
push
leave
int3
add
mov
mov
mov
js
inc
repnz
pop
mov
lret
inc
mov
lret
xchg
xchg
dec
sahf
call
mov
xchg
mov
mov
push
jo
mov
outsl
cmp
push
push
sbb
mov
adcl
lret
sub
inc
pop
mov
call
call
mov
in
pop
dec
ss
insl
cmp
xchg
movsb
sbb
mov
pop
xor
dec
es
adc
in
sbb
pop
lcall
aam
stc
push
leave
movsl
enter
and
or
fmuls
outsb
lods
inc
and
cmc
adc
aam
sti
es
in
sbb
in
push
inc
dec
bound
xchg
lods
xchg
jbe
sbb
daa
pop
lods
icebp
call
and
fnstsw
cmpl
adc
fdivs
cmc
filds
mov
sbb
scas
test
push
fdivp
cmp
addl
add
or
xchg
lods
pop
gs
mov
mov
jbe
scas
js
xchg
or
les
lock
push
arpl
loope
dec
add
loopne
xchg
cmc
push
xor
xchg
sub
inc
xor
jne
dec
fwait
and
xchg
or
adc
lods
mov
sub
mov
mov
or
add
mov
les
or
add
push
pop
cmp
shrb
inc
cld
and
push
inc
mov
dec
xor
cmp
mov
adc
shr
lds
xchg
lahf
dec
dec
scas
fldt
test
or
shlb
in
sbb
sbb
adc
fmuls
rolb
lret
js
push
nop
sbb
rorl
mov
movsl
aam
add
sbb
pop
imul
mov
mov
cmp
lds
imul
mov
sub
shlb
or
cmp
xchg
or
push
or
push
xor
inc
imul
xor
sbb
mov
or
enter
add
add
push
adc
shrl
push
fs
add
sub
mov
mov
inc
in
cwtl
out
push
sbb
add
in
add
inc
cli
into
ss
cmp
sarb
or
mov
inc
hlt
mov
std
push
pusha
pusha
insb
xor
out
and
mov
lea
addb
push
sub
push
add
out
xchg
or
and
inc
add
or
adc
jbe
loopne
lret
push
notb
cmc
jo
xchg
gs
inc
sub
xor
in
add
mov
and
inc
lret
sbb
add
push
sbb
lods
jmp
and
jge
shlb
and
or
mov
lea
mov
dec
leave
sub
mov
cmp
and
sti
sbb
mov
cmp
aaa
cwtl
push
imul
add
push
bound
sti
jb
xcrypt-ctr
cmpsl
pop
xor
mov
xor
mov
add
or
je
jnp
mov
push
xchg
inc
sub
cmp
xor
cmp
cmp
fidivrs
inc
push
insb
dec
iret
jle
lods
xchg
push
jmp
mov
shll
xor
pusha
dec
in
sbb
sbb
pop
add
jne
movl
inc
and
inc
std
jne
mov
jne
dec
or
add
jmp
sbb
rolb
dec
add
push
add
flds
jl
pop
negb
push
push
notl
ret
jnp
mov
js
sbb
inc
aas
incb
cmp
ror
xor
je
jmp
lock
test
push
inc
jo
sub
push
and
push
test
pushf
stos
jnp
jae
cmp
jbe
xor
shl
jne
cmovae
or
inc
inc
push
leave
inc
pop
lea
call
lods
sbbl
push
bound
rcrb
sub
sti
testl
mov
cmp
ljmp
icebp
inc
loope
add
incl
out
inc
add
jge
add
jb
mov
mov
inc
xchg
push
arpl
adc
add
sub
and
inc
out
dec
jne
cli
xor
icebp
mov
xor
sbb
add
idivb
push
lods
xor
push
mov
inc
out
sub
dec
jne
mov
pushf
and
push
or
inc
mov
rclb
cmpsl
cmp
xor
push
test
jmp
adc
aam
loopne
and
xchg
mov
cs
mov
inc
mov
in
or
je
loop
push
and
adc
call
cmp
mov
and
mov
popa
out
xor
xlat
xor
inc
push
cmp
dec
pop
adc
dec
orl
dec
sbb
push
add
inc
jo
insb
ljmp
add
add
and
sub
or
stos
rclb
xor
sbb
jge
into
dec
out
or
std
jnp
jg
sbb
jmp
xor
dec
sbb
mov
lret
xor
into
jmp
sbb
aaa
test
out
imul
cmp
ds
add
xlat
mov
mov
icebp
test
jmp
adc
cmp
mov
inc
ret
cmc
pop
loopne
or
loope
push
and
ret
inc
sbb
add
push
push
mov
jl
xor
push
sbb
leave
rorb
loope
sahf
cmpl
clc
lret
cmpl
ret
or
addb
sti
andb
sub
or
inc
add
xor
test
push
test
ljmp
ret
je
mov
xorb
mov
arpl
pop
add
loop
imul
pushl
imul
int
cmp
mov
lahf
das
adc
jno
inc
inc
sbb
sub
xchg
xchg
mov
sarb
sbb
sarb
jl
and
cwtl
pushf
movsb
popf
shlb
stc
aas
ljmp
push
mov
faddl
or
hlt
adc
cld
mov
das
pop
insb
inc
add
add
popl
push
xchg
jns
aaa
sub
adc
lea
inc
sbb
sub
cmp
js
ja
inc
xchg
sbb
pop
xchg
lahf
push
or
pop
or
addl
sbb
add
cmp
push
test
push
jb
add
orb
sub
lea
js
insb
leave
cltd
jmp
mov
aas
sbb
lcall
jle
sub
pop
clc
ret
or
inc
and
xlat
add
sbb
les
hlt
rcr
rol
test
enter
xor
movsl
jmp
test
mov
in
cmp
das
and
test
lock
addb
inc
pop
movb
xchg
clc
xor
ficoml
add
and
fcmovu
jp
ja
or
add
or
add
test
ret
inc
mov
mov
rcrb
or
insb
pop
arpl
push
xchg
loope
mov
push
imul
dec
fprem
lock
and
shr
lcall
or
lods
ds
push
cmpsl
cmp
aas
cmp
add
inc
push
sub
loopne
cmp
fnstenv
not
mov
pop
cltd
pop
call
je
adc
lea
jns
add
sub
push
in
sbb
in
push
in
inc
dec
or
subps
roll
sbb
push
mov
sar
push
dec
popf
fisubl
adc
xchg
cmpl
pop
cmp
scas
adc
xchg
mov
or
push
push
jno
adcl
mov
lock
inc
mov
cmpxchg
xor
movsb
xlat
or
and
pop
add
daa
inc
push
daa
xchg
test
cmpsl
xor
adc
mov
adc
push
out
arpl
cmp
jne
push
mov
sbb
or
sti
into
mov
fldt
xor
push
inc
push
or
pop
fistpl
mov
jl
in
arpl
and
pushf
jg
mov
shlb
mov
push
lods
add
xchg
sbb
pop
cs
rcrb
mov
push
dec
out
lea
push
add
cli
fisttps
mov
dec
loope
pop
mov
jp
aam
jmp
lds
jle
out
push
or
xor
xchg
mov
shlb
sbb
jnp
cld
pop
and
add
sbb
or
and
fsubrl
xor
sbbb
pxor
push
push
or
add
sbb
shr
je
mov
xchg
dec
testl
xor
loope
scas
push
pusha
jo
mov
dec
jne
or
jbe
je
subb
mov
imul
lea
or
xor
mov
je
xor
fildl
sbbb
lret
mov
add
jne
ss
fstpt
or
inc
inc
cli
pop
pop
ret
scas
in
in
xchg
push
mov
bound
add
lcall
add
icebp
aad
jb
push
adc
ret
jecxz
sti
mov
hlt
pop
mov
xchg
outsb
push
test
adc
loope
xor
out
jo
ret
push
dec
mov
push
or
shll
enter
or
mov
sub
dec
loope
jl
shl
bound
cli
sub
insb
cmp
add
sbbl
cmpsb
push
lods
and
punpckldq
das
dec
add
sbb
push
add
pop
pop
or
sub
test
mov
mov
rcr
mov
push
dec
push
or
in
lret
push
cld
cmpsl
fdivl
enter
cmpsb
add
sbb
push
lcall
fldl
or
inc
push
call
movsb
jnp
mov
add
popf
mov
in
or
xchg
fidivrs
cmpl
sahf
jge
push
fadds
mov
into
das
add
add
jmp
add
pop
dec
add
and
sbb
mov
jbe
adc
jmp
adc
jmp
add
stc
push
push
push
push
sahf
mov
std
sbb
movsb
fld1
or
sbb
cmp
or
or
lcall
or
mov
fwait
xchg
int
or
mov
jmp
adc
das
mov
pop
les
mov
adc
bound
cld
fmull
fstl
mov
cmp
push
mov
push
mov
and
leave
iret
repz
push
push
pop
sub
cmp
mov
cwtl
push
aaa
push
cmpsb
out
pop
addr16
icebp
sub
dec
popa
out
xchg
les
lods
sbb
add
push
jg
push
neg
sub
push
cmp
sub
pusha
jne
and
and
inc
add
out
dec
add
xchg
sbb
pusha
push
adc
inc
js
inc
add
dec
sbb
je
push
cltd
jmp
inc
faddl
adc
pop
and
adc
or
inc
test
adc
lea
fucompp
test
jp
mov
lahf
arpl
and
push
push
test
inc
aaa
adc
mov
lock
or
mov
or
cli
mov
mov
test
fdiv
xor
scas
and
dec
push
ret
cmp
sbb
idivb
sar
xor
jle
mov
cmp
scas
mov
les
mov
push
mov
rcll
iret
and
stos
bound
mov
pushf
or
mov
sbb
or
inc
scas
jns
sbb
push
cmpsb
lret
inc
test
or
lock
daa
xchg
or
ret
and
xor
lock
iret
mov
test
mov
xor
inc
fs
dec
js
adc
popa
jmp
sub
add
popf
fadds
mov
mov
enter
std
jp
mov
jae
jne
rclb
cli
adc
pop
mov
dec
add
rorb
pusha
mov
add
dec
mov
fildl
dec
hlt
stc
xchg
lea
je
movsb
ret
jno
scas
sub
push
idivb
adc
push
stc
mov
sbb
jle
cmp
pcmpeqb
dec
push
leave
adc
lret
ficompl
xchg
or
fcoml
or
shl
adc
pop
xor
popa
jmp
xchg
adc
jne
or
in
fsts
add
adc
xor
lds
ret
add
mov
mov
add
pop
or
add
sub
loope
and
mov
mov
lods
es
ss
test
aad
test
mov
cwtl
pop
xor
or
inc
sbb
test
push
sub
mov
stos
sbb
jne
inc
sub
jo
push
pop
aad
pop
cli
test
xchg
and
ss
cmpb
in
or
ja
cmp
sub
mov
movsl
dec
adc
icebp
sub
sub
jmp
dec
push
imul
add
mov
cmp
lods
scas
push
dec
cmp
inc
mov
push
push
push
dec
loopne
pop
and
pop
lea
inc
adc
pop
dec
scas
jbe
jo
cmc
cmp
idivl
dec
imul
jle
inc
pop
and
push
or
jp
call
notb
push
inc
lea
sahf
pop
or
inc
sub
dec
push
pop
or
fwait
lods
lock
fwait
cwtl
add
rcrb
push
stos
cmc
cmp
xor
cwtl
xchg
push
idivb
dec
stc
mov
cmp
cmp
sbb
int3
and
test
push
or
sarl
jns
daa
mov
mov
add
xor
mov
cld
sbb
icebp
push
loope
inc
push
xorl
dec
jnp
mov
adc
mov
je
add
or
ret
mov
jg
negl
pop
push
xchg
and
dec
add
xchg
adc
fbld
mov
and
add
mov
into
nop
cmp
lcall
std
and
or
scas
add
mov
into
cmp
icebp
push
jnp
addb
jno
leave
pop
add
or
and
and
pop
push
add
ja
test
mov
sbbb
popf
fldl
jp
mov
jno
mov
mov
add
add
adc
sbb
out
sbb
mov
scas
fnsave
dec
mov
mov
mov
mov
int
fnsave
adc
xchg
lea
inc
addl
or
or
cmpb
pop
inc
pop
cmpsl
inc
dec
push
nop
pop
out
pop
inc
or
stos
mov
pop
mov
jmp
cld
scas
cmp
data16
nop
jmp
inc
daa
add
or
flds
jo
dec
pop
mov
push
push
xor
in
push
nop
aad
lcall
jmp
push
scas
addb
mov
dec
add
mov
lret
add
sub
lods
addb
daa
add
imul
xor
std
push
or
sub
jle
incl
stc
scas
mov
sub
dec
mov
or
data16
loope
or
aas
dec
data16
cmp
rcrb
pushf
jmp
push
mov
jmp
dec
in
add
in
cmc
rorl
dec
sub
and
jge
dec
jno
orb
or
jmp
data16
test
sbb
jmp
test
sbb
in
or
jg
int3
cmp
out
or
jmp
push
clc
cmp
repz
out
into
inc
addr16
sbb
aas
fisttps
or
shl
scas
mov
lods
or
mov
fxch
adc
cli
xor
addl
fstpt
sbb
mov
adc
lock
push
push
push
mov
and
sbbb
mov
int3
nop
dec
call
jmp
sub
jo
or
and
rol
jmp
int
dec
insl
jmp
lret
inc
dec
xor
and
ljmp
adc
nop
sub
xchg
insl
push
out
pop
xchg
adc
daa
pop
mov
mov
mov
mov
inc
push
lea
jecxz
mov
mov
inc
sub
pop
jne
jbe
inc
xor
iret
repz
mov
sahf
lret
js
iret
push
mov
andl
dec
scas
mov
aam
inc
push
rclb
pop
mov
sbb
xor
pop
pop
movsl
or
rcrb
das
test
sahf
out
push
pop
pop
fcomps
mul
xchg
mov
cmp
xchg
int3
loope
es
test
hlt
repnz
je
sub
cmp
push
xchg
add
xor
lods
adc
pop
mov
movsl
cmp
push
xor
mov
mov
xor
addb
stos
mov
sbb
pop
and
inc
mov
movsb
sbb
data16
lds
xchg
cmp
push
xchg
inc
push
pop
arpl
mov
ja
es
xchg
cltd
adc
pop
rcrb
stos
cltd
lea
push
and
mov
sbb
fisttpl
mov
jb
in
movsb
mov
dec
lods
cmp
mov
mov
fsubrl
jb
jmp
xor
add
and
stos
movb
movsb
mov
fwait
jg
fimuls
cld
mov
leave
lods
mov
enter
mov
pop
ds
pushf
mov
xchg
mov
or
pushf
adcb
or
dec
test
xchg
dec
add
aaa
leave
jne
orl
push
or
test
push
and
sbbb
lods
pmaxub
sarl
or
xor
in
adc
mov
insl
mov
push
mov
imul
jnp
sbb
clc
adc
lods
div
mov
adc
pop
adc
lret
pop
push
xor
or
inc
xor
mov
jle
sub
pop
push
xor
pop
and
adc
divb
mov
mov
or
pop
pop
sbb
or
pop
aas
or
movb
rol
pop
xchg
cmp
sbb
mov
inc
adc
pop
push
cld
sbb
mov
push
jmp
adc
jns
fwait
stos
mov
add
push
jg
mov
jnp
es
mov
and
inc
jge
xor
xchg
movsl
push
or
ds
mulb
shlb
adc
es
xchg
lock
adc
mov
mov
or
jne
push
adc
inc
pop
push
inc
and
loopne
dec
sub
cmpsl
xor
adc
push
mov
lock
and
repz
xor
mov
jg
ljmp
add
outsl
push
push
test
adc
push
and
and
stc
outsb
sahf
cmpsl
dec
push
pop
outsl
inc
or
sahf
sub
repz
jle
dec
outsl
addl
int3
in
sub
lea
and
mov
sbb
pop
fists
lea
lea
inc
out
mov
or
shl
insl
fimull
mov
xor
dec
lods
sbb
xchg
test
pusha
or
loope
imul
inc
inc
push
negl
ret
mov
rcrl
lret
ret
mov
shr
arpl
and
dec
les
addl
xor
adc
into
lods
iret
inc
adc
xchg
jo
orl
mov
push
push
mov
lock
or
shr
jge
jo
and
push
loopne
sahf
add
std
inc
mov
stos
add
jmp
mov
lea
leave
jp
sbb
fwait
out
movsb
xor
imul
cmp
push
and
js
add
mov
adc
and
cmp
and
ljmp
mov
mov
popa
sbb
rcll
xorl
loope
xor
pop
sbb
lock
das
inc
lret
xor
push
push
mov
divl
add
xor
mov
mov
and
add
ret
cli
add
mov
mov
rorb
inc
dec
fisubs
or
adc
ds
pop
andl
or
stc
mov
out
dec
jbe
cmp
addl
xor
jle
nop
pop
subl
and
cmp
lea
sbbl
cmp
cmp
nop
xchg
mov
cmp
sahf
scas
inc
test
test
shlb
pop
rcll
pop
jo
sahf
pop
loop
mov
sbb
rorb
stc
and
push
mov
sbb
mov
mov
xchg
push
or
scas
xchg
jmp
inc
or
sahf
mov
out
and
adc
sbb
cmpsl
push
cmp
mov
insl
mov
loop
popa
aad
push
mov
pop
outsl
or
mov
shll
outsl
mov
jbe
add
gs
dec
inc
call
out
outsb
cmp
inc
jne
mov
add
or
jne
incl
mov
pop
insb
pop
pop
mov
dec
out
dec
adc
ljmp
xchg
aas
adc
pop
andl
push
stos
xchg
gs
adc
push
adc
pop
mov
ret
add
ror
gs
arpl
jno
cld
enter
or
and
testl
dec
push
push
call
out
mov
dec
add
mov
add
sub
fidivrl
movsl
adc
incl
pop
jp
add
inc
xor
pop
je
cmp
sub
mov
and
xor
pop
xlat
and
cmp
push
mov
jmp
push
xor
pop
jle
in
pusha
shlb
cld
add
and
sbb
or
scas
or
insl
push
mov
and
es
inc
cli
rorb
insl
mov
stos
ds
and
sbb
push
shlb
fistpl
pop
jbe
pop
cmp
push
push
iret
clc
sub
test
pop
clc
xor
ret
into
les
push
cmp
sbb
jb
fs
sbb
jae
lea
add
add
adc
lret
pop
xchg
lret
lock
fcmovb
out
frstor
orl
dec
call
pop
loope
xor
add
mov
or
sarl
mov
sbb
push
push
je
cltd
scas
call
push
sub
lea
push
fldcw
int3
pop
inc
pop
or
add
mov
push
xor
popa
int3
test
pop
dec
push
lock
std
lahf
dec
in
push
push
pop
push
int
sar
aas
sbb
nop
pop
mov
cli
inc
incl
jae
lock
movw
mov
std
fnstsw
and
xor
outsb
mov
aam
movb
jb
push
push
push
jl
dec
mov
add
call
or
add
push
mov
shrb
fidivrs
cmp
push
sbb
or
inc
add
lea
daa
adc
faddl
add
xor
aas
lock
or
rorb
and
into
jno
xchg
cmp
jb
inc
jl
cmp
or
adc
sahf
inc
loope
add
push
cmpl
dec
or
xchg
inc
or
or
pop
ret
cmp
clc
add
xor
jmp
mov
adc
inc
je
je
pop
xchg
mov
mov
insl
xchg
incl
lret
or
jo
sbb
dec
scas
imul
test
mov
orb
jmp
mov
dec
push
pop
jmp
lea
cmpxchg
xchg
cmc
cmpsl
loop
stos
add
cmpsl
inc
sub
push
aaa
xor
push
mov
dec
mov
mov
jne
jmp
shll
or
je
push
mov
dec
movl
and
or
lods
push
test
pop
idivb
je
or
pop
fnstsw
mov
test
inc
inc
rcrb
jge
dec
push
stos
dec
decl
js
dec
out
mov
test
and
adc
divl
addb
je
cmpsb
or
dec
test
adc
sbb
lock
lcall
fnstenv
sbb
cmp
lods
dec
mov
dec
les
or
push
lock
out
not
add
sbb
xor
orb
adc
jae
cmp
lock
ret
mov
fld1
mov
repnz
push
sbb
lea
pop
pop
push
sub
push
lock
testb
or
sub
xchg
jl
int
dec
jbe
pop
mov
add
fs
xchg
fistl
pop
cmp
ret
shll
cs
das
inc
xchg
popa
das
sub
xchg
das
push
push
jb
pop
jle
jns
sbb
addr16
ds
push
jnp
incb
cmp
fldt
loopne
daa
jg
aaa
xchg
lret
xor
xor
add
pusha
je
xor
or
or
lock
xor
iret
mov
fmuls
adc
lcall
inc
cmp
inc
dec
fnstcw
jbe
xor
push
adc
cmp
jae
inc
adc
cld
lock
xorb
pop
pand
add
sbb
sbb
mov
jge
out
adcb
add
push
xor
out
sub
movsl
andb
push
clc
stc
roll
inc
adc
cld
sahf
push
xlat
jmp
daa
push
imul
lahf
hlt
iret
sbb
les
inc
adcl
push
dec
push
and
or
jb
stc
or
adc
sub
cwtl
xchg
mov
push
adc
or
cmp
out
mov
sbb
popa
sbb
jne
inc
xchg
cmp
add
and
add
test
or
gs
cmc
xchg
jo
sarl
lret
sbb
add
js
mov
jge
inc
mov
xchg
push
sbb
or
and
or
popf
insl
hlt
adc
sbbb
in
sbb
sbb
lds
stos
push
lods
and
cld
sti
std
and
cmp
test
idivl
sub
adc
ljmp
sbb
out
int3
hlt
in
jae
mov
out
fcmovnbe
loopne
add
add
fs
test
mov
scas
mov
daa
adc
and
add
pusha
popa
xchg
mov
fcomps
outsl
js
je
push
scas
sub
cmpsl
test
ss
ja
sub
ljmp
add
push
jmp
and
stos
push
fistps
mov
clc
lock
jb
fildl
and
or
push
test
pop
and
dec
mov
adc
mov
ret
jmp
lea
dec
and
or
xchg
lock
push
test
test
sub
int3
scas
sbb
add
enter
cld
add
add
jb
mov
pop
xchg
fsubr
mov
lock
ret
sub
cmpb
pop
push
or
rcl
ret
push
or
pop
negb
fcoms
or
lret
repz
lsl
jmp
push
pop
push
push
mov
cmp
jmp
rcr
or
mov
repz
dec
sti
or
pop
fdivr
sti
ja
push
cmp
or
cmp
or
xor
and
out
or
fisubrl
lods
mov
lret
xor
mov
adc
jp
cmp
je
cmp
ret
sbb
pushl
insb
add
call
addl
mov
jnp
in
cmpb
sub
out
sbb
jbe
or
xchg
or
popf
adc
inc
lock
cli
and
out
icebp
push
cmp
sbb
inc
dec
or
sahf
stos
xchg
inc
or
mov
mov
push
mov
xor
ret
push
inc
mov
and
xlat
mov
xchg
sbb
adc
and
push
cmp
jae
cmp
jmp
xchg
or
out
push
sbb
adcb
hlt
movsb
je
xor
clc
popa
jnp
shl
jmp
dec
and
insl
pop
ret
movsb
add
pop
inc
xor
or
cmp
xchg
pop
sar
or
push
aad
dec
rcl
push
pop
lret
jo
add
sub
sbb
or
mov
adc
add
mov
and
bound
add
add
mov
jmp
inc
cmp
dec
push
xor
pusha
inc
mov
add
fistl
mov
or
push
or
dec
inc
decb
dec
or
andb
imul
mov
pop
sarb
or
mov
add
mov
insl
nop
int
aam
enter
xor
loopne
pop
add
loop
pop
outsb
add
in
add
jns
pop
stos
cs
lret
movsl
and
add
into
pop
sub
sbb
pop
rol
cli
insb
cmpb
cwtl
outsb
clc
adc
add
sub
in
insl
cmp
je
mov
loope
es
dec
sub
xchg
adcb
mov
leave
addr16
inc
ret
mov
mov
mov
daa
fsubs
cs
aas
ljmp
lds
sub
push
xchg
shll
adc
in
inc
mov
ss
imul
inc
push
imul
aam
push
js
std
mov
sarb
ret
je
mov
jbe
out
sub
push
pusha
inc
dec
enter
aas
je
push
popa
imul
push
sub
mov
popa
movsbl
or
mov
jmp
cmpsl
push
lods
int
sbb
pusha
jae
test
adc
mov
imul
and
xchg
sub
adc
mov
cmp
xchg
aad
mov
inc
mov
mov
inc
fidivl
and
cli
mov
dec
pusha
ds
nop
ja
addr16
shrl
sub
mov
jl
cmp
jg
inc
jmp
nop
les
inc
pop
lds
jbe
jne
imul
add
push
inc
mov
jge
aas
sbb
inc
push
dec
inc
jecxz
in
cmp
insb
cmpsl
je
dec
ret
jmp
dec
je
mov
cmpsb
mov
lock
xor
icebp
xor
jae
rorl
jl
test
xchg
push
adc
ja
jnp
cld
and
add
jo
sti
mov
stos
iret
mov
inc
push
adc
push
mov
push
cmp
jge
mov
xor
jae
shlb
push
and
adc
push
mov
xor
xor
clc
add
xchg
sub
mov
sbb
mov
insl
push
mov
inc
pop
ret
add
push
daa
psubd
push
sbb
pushf
shll
test
cmc
fstl
sub
mov
jl
pop
cmpsb
data16
clc
ljmp
xorb
imul
mov
andb
lea
ja
mov
sub
jo
inc
rcll
orl
test
inc
sub
xor
or
adc
add
pop
enter
inc
imul
push
gs
mov
pop
repz
cmp
or
insl
lock
jp
rcl
lock
pop
ja
push
insl
rcl
movsl
stc
loopne
addr16
pop
addl
test
xorb
mov
adc
adc
push
mov
inc
mov
push
data16
mov
mov
and
or
xor
mov
sbb
add
xor
cli
adc
outsb
shrb
xor
lea
or
add
pushf
out
btc
and
jno
push
sbb
add
add
dec
dec
loope
or
add
add
mov
ficomps
mov
xor
xadd
and
or
adc
and
pop
inc
mov
fisttps
dec
iret
dec
and
pushl
add
test
mov
jno
push
adc
sbb
pop
loop
mov
push
push
xor
adc
ljmp
push
inc
cmp
ds
das
imul
neg
es
ds
push
insb
enter
add
adc
cwtl
or
outsl
or
or
adc
or
aam
popf
mov
shld
scas
sub
sub
mov
imul
dec
xchg
cmp
rorl
dec
mov
test
pop
pop
adc
add
push
pop
xchg
add
aas
test
mov
addb
xor
inc
imul
aaa
les
mov
scas
call
out
andl
movsb
xchg
and
pusha
pop
pop
xor
xor
pop
dec
mov
ss
push
fwait
testb
je
sub
shrb
ds
pusha
push
or
push
dec
push
jp
pop
dec
jmp
es
fdivrs
and
mov
jmp
xorb
pop
jo
jl
popa
dec
add
mov
or
mov
loopne
xor
pop
mov
ret
shll
adc
add
dec
pop
add
aaa
std
sti
das
sbb
call
adc
lods
jae
call
inc
rolb
xchg
jge
test
andb
sub
add
push
push
lea
repz
mov
push
inc
mov
insl
mov
or
sarl
fcmovb
das
outsb
adc
fidivl
lock
mov
cmp
sbb
xor
fwait
inc
fsubr
das
pusha
inc
jmp
out
iret
les
xor
leave
sub
ret
pand
dec
jb
and
xorb
adc
cs
sub
jl
cli
mov
or
inc
mov
pop
mov
inc
push
push
nop
cmpsb
mov
int3
dec
mov
cwtl
or
lcall
dec
and
popf
mov
jmp
push
lods
mov
cmp
jb
mov
or
push
mov
cs
cld
mov
pop
push
or
xchg
dec
loop
lea
movsb
sub
jne
or
xchg
orb
mov
mov
insl
add
push
cmp
hlt
add
nop
leave
sbb
je
pop
lea
jl
sub
xchg
mov
jmp
andl
jmp
mov
mov
popf
add
insb
push
mov
test
sti
or
inc
jle
jle
sub
cmp
xchg
mov
add
mov
or
sbb
cmp
xchg
xchg
lods
bound
add
add
cmp
cld
fimuls
bound
sub
sbb
mov
icebp
mov
jae
mov
sub
inc
jmp
xor
ss
jge
sti
sahf
addl
mov
addr16
mov
movsb
jne
out
dec
jae
test
pop
fsubrp
sbb
or
mov
and
outsb
mov
rclb
bound
pop
push
sub
xchg
out
cmp
dec
cwtl
inc
inc
rcrb
and
adc
sub
cmp
mov
lods
lods
adc
sub
mov
sar
loopne
je
mov
data16
mov
mov
adc
lcall
xchg
imul
incb
dec
loop,pn
xor
fldl
pop
push
rclb
sahf
dec
dec
or
iret
pusha
adc
mov
mov
fisttps
repnz
and
lea
cmp
xorb
jg
cmc
jecxz
push
push
push
gs
inc
jmp
cmp
pop
xchg
adc
xor
add
dec
mov
hlt
les
add
sub
add
and
fsubrs
cwtl
jge
add
lcall
sbb
icebp
inc
jae
test
cmp
cmc
sub
sub
sub
add
add
jle
xchg
inc
xor
jne
or
inc
or
cmp
push
flds
cld
fsubrp
lods
sarl
add
mov
mov
rcll
imul
mov
mov
push
inc
jge
movsl
add
movsb
mov
cmpb
xorb
out
push
add
into
mov
lahf
mov
out
mov
mov
add
jae
sub
mov
sbb
mov
mov
xlat
and
std
mov
mov
inc
testl
add
enter
cmp
les
mov
jne
inc
or
cmp
or
push
mov
xchg
pop
dec
xchg
pop
mov
test
pop
fsubrs
clc
cwtl
xchg
test
push
pushf
fldt
inc
push
lea
lcall
add
pusha
add
add
mov
scas
ret
xor
cmp
jb
add
add
inc
ja
shlb
pop
inc
mov
add
pop
adc
adc
cld
push
int
sbb
sti
jg
add
push
addb
bound
sub
out
and
call
shr
mov
add
or
shr
aas
or
sbb
das
rcll
mov
bound
or
adc
inc
mov
inc
adc
addb
negb
push
pop
jne
je
jg
jl
fcom
insl
fadd
loopne
shr
or
mov
inc
ret
or
sahf
dec
mov
jne
outsb
mov
inc
xchg
dec
mov
mov
les
adc
and
or
push
cli
sub
cmp
lock
rcr
fiaddl
dec
add
mov
fwait
loopne
ljmp
jmp
or
mov
mov
ret
fs
mov
sub
mov
push
jl
dec
int3
int3
jmp
xchg
jp
jp
or
daa
mov
push
add
push
dec
into
jmp
lods
cmpsb
icebp
add
mov
push
and
and
les
icebp
pop
mov
and
push
mov
pop
xorb
lret
mov
sub
sub
test
sbb
add
int3
loop
movups
les
outsl
cmp
mov
inc
mov
inc
inc
or
add
xor
mov
xchg
rcrl
sarb
dec
adcb
ficoms
push
stc
popl
and
or
push
mov
or
pop
ret
in
adc
sbb
inc
clc
dec
incb
stos
push
xor
movsb
icebp
push
clc
addr16
push
pop
pop
and
cmp
mov
cmpsb
sub
pop
cmp
aam
mov
xor
push
jo
mov
ret
push
xor
mov
das
in
cmp
xchg
shll
adc
and
jne
add
adc
jecxz
faddp
push
int3
or
sbb
pushf
mov
jb
dec
in
and
add
subl
or
mov
push
lea
sysret
imulb
es
sbb
sub
mov
loopne
adcl
js
aad
pop
pop
bound
add
mov
cmp
and
int
jns
push
pop
mov
sub
shlb
add
push
test
xchg
insl
jnp
orl
sbb
test
clc
pusha
aam
call
jmp
push
mov
cld
push
js
xor
lret
cmp
push
adc
pop
iret
cli
pusha
stos
cmp
iret
sbb
dec
sub
adc
and
push
mov
sbb
mov
and
in
rclb
cs
or
add
push
dec
push
lock
loope
sbb
cmp
jge
push
pop
bound
loopne
sbb
jmp
gs
in
stc
pop
test
dec
lds
jmp
in
mov
add
sbb
jecxz
into
idiv
cmp
xor
aam
ffreep
in
je
pop
jmp
jmp
push
lea
add
jle
pop
mov
add
sar
mov
aas
or
add
loop
or
dec
adc
fwait
sbb
mov
movb
dec
mov
jge
mov
shr
cmc
lods
push
cltd
lods
loop
pop
adc
cmp
sbb
or
adc
aas
mov
push
inc
pushl
mov
jns
cmpsb
dec
jnp
mov
or
out
mov
cmp
out
inc
inc
or
mov
push
sub
xchg
add
inc
mov
mov
mov
pop
ret
add
sbb
push
add
fdivr
sbb
rcll
push
hlt
mov
andl
lock
cwtl
push
dec
into
push
outsb
movsb
add
and
xchg
add
mov
enter
sub
movsl
mov
loope
or
dec
clc
loopne
inc
inc
call
jmp
loope
sub
push
dec
inc
outsb
fadd
mov
dec
hlt
pusha
dec
or
in
inc
xor
push
or
xor
std
jnp
pusha
enter
push
add
fisubl
xchg
je
dec
or
sarl
fs
add
mov
ja
mov
and
and
mov
add
test
adc
add
jecxz
scas
mov
add
adc
xor
icebp
rol
sbb
mov
imul
daa
push
es
mov
dec
iret
test
or
sub
mov
sbb
pop
popf
popa
and
insl
cld
fisttps
cmp
mov
push
mov
inc
mov
sbb
fldt
cmp
scas
mov
xchg
mov
or
lret
ss
loope
push
adc
cmp
subb
mov
cmp
jne
bts
pop
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
loopne
ja
cmp
ret
sub
sub
add
add
add
dec
dec
dec
int
andl
jbe
fs
jne
or
pop
jns
adc
fiadds
cltd
shl
sbbl
mov
cmpsl
ss
pop
data16
fstps
test
sub
and
or
mov
cs
add
daa
shlb
movsl
jne
lea
mov
stc
cmp
push
xor
add
shlb
test
pop
add
rol
push
or
inc
lock
test
inc
push
jne
es
push
inc
sub
xor
int
push
mov
xor
mov
push
jo
inc
dec
js
lret
jmp
inc
mov
pop
mov
adc
call
xchg
aas
push
jae
jo
jae
adc
les
xchg
add
jmp
ja
lcall
je
das
and
pop
cmp
xor
cmp
mov
adc
cmpb
xchg
int3
test
lret
and
sbb
aam
and
sub
pop
xchg
cmp
push
inc
mov
add
push
cmp
test
and
loopne
test
jns
dec
lds
xchg
loopne
ret
inc
ss
in
mov
jmp
sbb
jecxz
dec
and
and
or
outsb
mov
push
dec
mov
push
out
or
mov
js
xor
mov
sbb
add
add
push
xor
add
and
mov
pushf
push
xchg
pop
fcompl
inc
jp
in
call
sbb
jg
add
out
add
loop
lea
out
hlt
loop
sbb
push
sub
pop
mov
fisttpll
xor
or
hlt
mov
mov
cld
outsb
inc
outsb
add
push
jmp
test
fdivrs
xchg
push
push
xorl
pop
jl
push
clc
adc
and
fnstcw
pop
sbb
or
stos
popa
add
inc
push
lcall
add
and
test
es
aam
sub
and
dec
push
ret
inc
setnp
or
add
dec
sbb
adc
push
mov
sbb
addb
cmp
insb
push
mov
xchg
dec
xchg
push
dec
lcall
lret
xor
test
mov
dec
roll
jle
add
add
pushf
lods
dec
js
push
pop
pop
pop
jg
sub
jb
cmp
push
jno
nop
enter
xchg
data16
inc
dec
loope
dec
mov
push
and
add
jb
sub
inc
mov
pop
mov
add
lcall
push
xor
pop
pop
shl
mov
lock
cmc
les
add
sbb
ja
pop
mov
scas
ljmp
or
cmpsl
mul
jo
jl
sbb
andl
dec
fdivs
jle
xchg
in
mov
lea
cmp
sbb
or
clc
decb
fimull
pop
cwtl
xor
fmull
push
aas
out
mov
pushl
jo
mov
and
cmp
icebp
mov
lret
cmp
shlb
test
sar
insl
push
std
dec
int3
es
jne
push
push
pop
mov
or
jne
pop
push
adc
cmp
jne
out
lret
xor
imul
cmp
add
pop
mov
or
adc
popf
pop
adc
pushaw
es
ss
fisttpl
or
mov
addb
and
int3
push
cmp
icebp
imul
add
icebp
push
push
xor
imul
adcl
pop
loop
imul
xorb
aad
adc
jmp
fadd
or
cmpb
xorb
add
ror
or
dec
fmull
jne
jge
push
scas
rcll
or
hlt
xchg
mov
xor
jmp
jle
xchg
cmpl
lods
mov
pop
push
nop
shlb
das
inc
shlb
je
jae
out
dec
imul
mov
push
pop
jl
dec
sbb
test
or
mov
scas
test
aas
cmp
insb
lds
in
add
mov
xchg
sub
cwtl
cwtl
imul
inc
mov
mov
dec
pusha
out
fwait
idivb
inc
pusha
jne,pn
sbb
inc
mov
sub
outsb
dec
fcoml
les
sbb
aaa
jge
mov
mov
bound
adc
hlt
pop
xchg
add
out
adc
cwtl
or
nop
or
int3
add
sub
mov
push
adc
movl
pop
mov
inc
inc
dec
cld
movb
roll
das
out
sub
inc
pushf
xor
test
push
add
bound
inc
loop
sub
push
pop
sbb
add
enter
or
stc
jb
ljmp
mov
inc
stos
sub
call
test
lahf
push
push
pop
adc
mov
inc
add
es
or
clc
ret
xor
add
mov
mov
lods
push
jne,pn
arpl
sub
or
add
out
and
inc
fsubs
jae
les
jbe
rcl
nop
orl
push
repz
dec
add
scas
mov
cmp
push
ret
pusha
jmp
insb
in
push
jne
scas
sub
outsl
inc
pop
add
add
dec
dec
push
xor
xor
cmp
out
cmp
xor
pop
insb
pop
xchg
cwtl
adc
jbe
mov
push
daa
pushf
dec
sbb
mov
mov
xorl
je
orb
ret
adc
sub
mov
sbb
loop
xor
clc
and
mov
adc
dec
cld
and
jbe
pushf
xor
or
mov
mov
jae
push
in
ja
cwtl
movsbl
mov
mov
fstl
daa
mov
test
bound
mov
fisttpll
orl
lret
das
adc
stos
out
rcrl
or
add
cmpsb
stos
pop
or
add
add
mov
sbb
sbbl
sbb
jae
and
or
nop
adc
add
cmp
mov
lea
outsl
jmp
inc
sub
xchg
xchg
xor
adc
rcll
sbb
pop
fs
cmp
test
movsb
cmpsb
dec
clc
sbb
fildll
add
jnp
xchg
xchg
sbb
or
push
or
adc
dec
dec
outsb
mov
sbb
sub
dec
dec
dec
xor
cmp
pop
add
mov
pushf
fmull
cmovs
pop
pushf
pushf
push
pop
add
daa
daa
fs
daa
daa
je
jl
idivb
lcall
adc
dec
es
mov
xchg
cwtl
pushf
mov
movsb
test
dec
xor
and
enter
xchg
int3
rclb
adc
xor
and
call
xchg
aam
hlt
in
xchg
dec
clc
cld
add
or
or
gs
and
cmpsb
xor
adc
dec
xor
and
dec
xor
sub
xor
xor
and
cmp
pop
xor
adc
inc
dec
dec
cltd
fs
imul
pusha
sbb
add
cmpsl
jg
add
test
cmpb
and
mov
dec
loopne
push
mov
jnp
mov
sar
xchg
xchg
out
xchg
dec
or
adc
nop
in
leave
in
xchg
sbb
sbb
and
and
cmp
cmp
mov
in
inc
les
pop
cs
out
scas
orb
inc
insb
pop
ficompl
xchg
push
jo
sbb
cmp
ret
and
adc
jmp
or
incl
mov
in
and
loopne
xchg
push
or
xor
or
and
mov
pop
add
imul
fisubs
add
test
and
add
jb
xchg
imul
jmp
xorl
dec
xor
mov
xor
and
shr
in
and
add
jmp
cmpb
and
and
test
js
in
test
adc
or
shlb
add
adc
and
je
imul
or
inc
addl
loop
mov
and
int3
pop
push
call
add
std
lods
shr
adc
lock
and
mov
dec
fisubl
and
jecxz
sbb
out
jmp
sbb
rcrl
push
adc
aaa
adc
mov
clc
or
or
inc
and
es
loope
jge
inc
ljmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sahf
inc
jecxz
push
sahf
sub
pop
fstp
cmp
ds
pusha
fldl
cmp
out
dec
xchg
pop
dec
jnp
testb
dec
in
pop
idiv
adc
sti
add
pop
jns
testl
fistpll
xchg
sub
mov
gs
cs
dec
jne
orl
and
adc
or
dec
fcompl
testl
pop
call
js
dec
cmp
pop
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstps
jmp
fisttpll
jmp
adc
fldt
aam
outsl
loope
push
hlt
adc
insl
jg
push
jbe
je
and
imul
dec
xor
mov
add
cmp
push
add
xor
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
jp
or
mov
lock
jmp
sub
ror
pop
sub
jmp
sub
fstpl
in
or
jmp
fsts
sbb
test
into
imul
adcb
xor
scas
adc
leave
dec
subb
dec
and
mov
jnp
inc
and
sub
mov
xchg
push
adc
ss
or
xchg
cmp
xor
or
adc
adc
push
pop
in
loopne
jne
inc
shr
xchg
test
ret
xchg
scas
lea
mov
aam
xchg
dec
mov
cli
shrl
ds
inc
pop
orl
sbbb
loopne
or
push
push
pop
jmp
pop
or
lock
cs
icebp
and
push
sbb
lcall
cmpsb
mov
sbb
sbb
push
pop
inc
lea
nop
cwtl
in
push
or
pop
mov
jle
push
add
sbb
jnp
mov
and
pop
mov
lret
add
fs
mov
es
insl
lret
icebp
inc
inc
adc
sbb
push
out
ret
test
cmp
je
pop
jle
jo
sbb
lcall
adc
sbb
xchg
jo
cld
sbb
hlt
add
or
pop
cltd
and
roll
pushf
sub
add
mov
jmp
addr16
or
ja
mov
pop
xor
jmp
jno
out
pop
gs
dec
inc
and
dec
daa
mov
lock
test
js
or
fstpl
push
sbb
jne
jp
es
icebp
jo
ret
insl
addl
sub
add
das
mov
mov
in
or
lock
mov
int
mov
or
les
aas
pusha
daa
push
clc
pushl
adc
fcoml
push
push
das
ja
adc
pop
jecxz
sbb
decb
add
jne
adc
fnstsw
loopne
sub
jl
push
jnp
loop
add
add
sbbl
or
je
loopne
sbb
into
sbb
mov
mov
or
xor
mov
hlt
add
sub
call
shll
push
lret
lock
or
sbb
mov
imul
decb
mov
add
fsubs
into
pop
mov
shr
mov
push
mov
add
pusha
push
sbb
lds
out
fld
fucomp
pop
fsts
lock
pop
out
mov
lret
push
xor
test
cmovge
push
dec
stos
and
mov
test
pop
sbb
or
or
lcall
imul
push
mov
stos
cmc
and
pop
je
aad
dec
cmp
cli
push
and
in
cld
es
sub
push
push
push
mov
test
lock
dec
ljmp
inc
jnp
fnstsw
movswl
add
mov
inc
fstps
push
cld
test
and
rorb
enter
data16
or
insl
or
xchg
in
rclb
dec
cwtl
or
sub
nop
or
aam
test
cs
adc
sbb
maxps
adc
repnz
rcr
jle
movsb
fldpi
xor
dec
sbb
pop
repnz
pop
mov
push
push
cmp
fnsave
xchg
push
inc
scas
xsaveopt
mov
pop
and
cmp
sub
push
lret
add
mov
lock
mov
and
adc
rclb
dec
or
and
mov
sbb
jg
inc
or
jg
and
andb
mov
push
pop
dec
mov
es
mov
lock
lea
arpl
aad
push
shlb
ss
and
test
xor
mov
pushf
add
int
adc
mov
inc
je
adc
cs
add
adc
ljmp
push
add
lret
je
mov
and
xor
xor
out
sti
jbe
nop
les
test
les
movsb
inc
inc
arpl
jg
adc
std
jle
or
or
loope
cli
test
adc
in
add
loope
rcrl
cmp
add
mov
push
adc
cld
cmpsb
dec
or
insl
xor
imul
dec
push
or
std
mov
jecxz
sub
push
dec
push
mov
sti
add
lret
loopne
rorb
addb
pop
pusha
sbb
dec
lock
stos
jp
pop
pop
les
lock
sete
sub
out
cmp
add
sub
pop
add
ret
lret
adcl
pop
jns
dec
or
inc
lea
pop
pusha
pop
fs
shrl
rolb
ds
call
not
test
ret
jmp
cmpl
add
repz
mov
mov
shll
and
iret
loopne
adc
iret
add
ss
jbe,pt
dec
mov
add
inc
fcompl
or
cmp
pop
xchg
clc
sbb
dec
cmp
adc
loopne
das
pop
adc
fidivs
mov
cwtl
and
repnz
add
pusha
adc
adc
add
subl
jl
fcomps
lea
loope
inc
aam
enter
cwtl
je
inc
xor
xchg
xor
or
aaa
je
or
inc
mov
or
inc
aam
addr16
push
xchg
dec
xor
cmp
addl
rorl
add
jae
inc
iret
fmul
shl
sub
sub
idiv
xorb
loopne
pop
popf
jb
mov
and
es
sahf
or
out
push
or
xor
scas
and
aam
out
xchg
inc
xor
add
jl
mov
pop
les
into
mov
out
push
and
mov
or
dec
jns
sub
cwtl
pop
repnz
lea
push
shlb
and
faddl
mov
dec
fistps
out
test
repz
adc
dec
sub
out
or
inc
rcrl
dec
xor
lock
rorl
cli
mov
pop
pop
lods
fsubr
pop
pop
push
push
jb
sbb
or
xor
adc
iret
dec
jns
cmp
and
shl
hlt
push
aas
sbb
outsb
xor
mov
mov
push
lods
and
and
adc
sub
arpl
ss
shll
cmp
popa
mov
sbb
sbb
lock
dec
into
movl
cmpb
mov
mov
and
and
in
or
sub
mov
inc
xchg
jge
testb
shl
test
xor
add
push
or
fildl
pop
lock
shlb
stos
push
cwtl
nop
push
test
jmp
ret
lock
and
xorl
cmc
push
add
mov
and
nop
adc
xchg
push
or
push
test
dec
and
pop
pop
dec
je
inc
and
push
enter
push
mov
lret
push
sub
xchg
jmp
ret
or
lahf
dec
mov
les
cmp
and
or
jb
mov
ss
inc
mov
mov
rorl
arpl
pop
rolb
xchg
out
mov
jo
pop
addr16
mov
adc
inc
cs
mov
or
ss
cmp
je
or
out
aas
sar
rorb
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
add
cmpb
inc
fcmove
pop
and
fcompl
fistps
add
adc
test
dec
or
sub
into
lret
add
sbb
dec
add
adc
or
orl
xor
in
adc
mov
add
adc
in
cmp
lret
adc
and
mov
aaa
sbb
fwait
sbb
fadds
cmp
lods
inc
xlat
rcll
mov
lret
mov
or
add
adc
inc
pop
sbb
cmp
push
pop
sbb
adc
out
outsb
rorb
jg
in
adc
sub
mov
popf
sub
mov
mov
cmpl
mov
popl
pop
and
sub
jle
test
dec
clc
pushf
cld
inc
cmp
bound
add
mov
lcall
add
push
and
sbb
jge
add
dec
in
and
cmp
adc
loopne
push
mov
inc
test
mov
fadd
inc
add
bound
andb
push
lcall
push
or
lcall
sbb
in
add
push
je
xchg
add
shll
daa
push
insl
in
mov
or
subl
add
add
add
xor
aam
je
movsl
mov
iret
ret
jmp
jne
test
and
xchg
inc
cwtl
xchg
jge
xchg
sub
adc
out
push
mov
adc
and
push
adc
shlb
push
push
lret
push
ss
sub
sbb
andb
test
cmp
push
jmp
test
fsts
xor
pop
push
xor
das
pop
and
push
fadd
xor
and
mov
dec
bound
jge
cmp
sub
adc
and
call
sbb
les
jbe
aas
or
pushf
xor
mov
push
adcb
enter
movsl
add
sahf
pushf
adc
add
push
and
or
adc
cmp
call
loopne
adc
stos
incb
pop
dec
loope
pop
dec
fcompl
sbb
jae
enter
mov
scas
cmpb
jbe
push
dec
xor
inc
xor
dec
and
add
mov
loope
add
push
js
into
mov
jg
dec
and
add
insb
movb
or
dec
rcrb
je
jge
inc
dec
push
inc
popf
neg
sbb
subl
mov
mov
nop
ret
repnz
jne
adc
mov
xor
xor
js
ljmp
inc
jo
in
call
jmp
inc
xor
mov
jb
es
mov
sysexit
shll
fisubs
push
or
add
nop
mov
add
dec
inc
adc
and
sub
sbb
into
sub
and
ret
sub
adc
xor
movsl
pop
ss
jbe
fs
das
cmc
insl
cld
add
hlt
shrd
sbb
sub
dec
cmp
add
test
push
movsl
clc
cwtl
xor
add
pop
push
insl
in
inc
and
xor
out
add
addr16
cld
sub
xor
cmpb
or
rorl
inc
call
insb
movsl
lea
inc
jno
or
shll
sbb
jnp
mov
and
lock
sarl
jg
ret
js
jl
or
jmp
pop
cld
scas
repz
fimull
jl
mov
mov
sar
mov
xchg
sub
add
mov
stos
adc
sarl
inc
xor
jmp
jg
mov
mov
inc
dec
pop
or
push
xchg
inc
repnz
je
sbb
cmp
adc
push
xor
dec
in
in
ja
fnstenv
mov
movsb
lock
sbb
push
jbe
mov
mov
add
mov
cmp
or
jp
fimull
xor
xor
idivb
cmp
push
sbb
mov
push
imul
push
inc
sub
add
dec
or
xchg
es
loop
cmp
inc
or
call
aaa
push
lods
push
add
or
inc
mov
stc
mov
push
jbe
call
das
vmread
fdivs
cmpsl
addb
and
jbe
and
into
shrl
sbb
mov
push
sbb
idivb
sbb
dec
cmpl
pop
push
divb
pop
das
inc
es
cmp
nop
push
push
mov
rorb
push
or
dec
cmp
or
xor
enter
sub
in
push
push
das
adc
dec
out
lea
jl
loopne
jge
inc
or
pop
mov
mov
pusha
adc
dec
xlat
add
popf
jmp
xor
movsb
add
pop
sahf
clc
gs
or
pop
data16
mov
imul
enter
popa
je
inc
je
dec
and
ja
xor
sbb
adc
loope
push
inc
mov
add
sbb
ror
insl
cwtl
clc
push
popa
sub
or
mov
add
loope
mov
mov
ret
arpl
in
mov
mov
jp
sbbb
sub
and
out
add
daa
push
adc
bound
cmpb
jne
add
and
testl
xor
jcxz
push
jmp
ja
ret
or
push
mov
mov
cmp
cli
jge
mov
adc
sbb
je
inc
or
inc
jecxz
ja
mov
mov
enter
push
push
call
loopne
sti
adc
push
test
out
inc
jmp
cmc
add
push
or
int3
xchg
mov
sahf
loope
js
inc
push
pop
pop
or
xor
test
pushl
adc
mov
sub
and
leave
shll
jne
mov
ret
test
leave
xchg
adc
fldlg2
add
mov
nop
cmp
sbb
mov
jbe
sub
or
mov
mov
jl
mov
inc
mov
push
jbe
xchg
adc
nop
jp
fwait
xchg
shlb
clc
pop
sub
cmpl
cmp
push
or
push
adcl
test
mov
push
mov
jbe
jmp
adc
sarl
imul
pop
pop
pop
pop
pop
push
rol
xor
dec
sub
fidivrl
enter
imul
icebp
jb
and
and
ljmp
mov
sbb
dec
je
dec
add
mov
push
push
jmp
or
jmp
mov
test
push
lcall
sub
mov
sbb
dec
js
test
xor
aad
js
mov
data16
xchg
cmpsb
dec
ljmp
into
add
sbb
add
cmp
leave
or
push
push
loopne
sub
jne
adc
mov
dec
xor
and
cmp
je
mov
dec
outsl
aaa
mov
push
or
insl
xor
mov
xchg
jae
daa
fs
xor
dec
add
je
push
add
adc
fiaddl
into
push
sub
sub
xor
loope
or
push
sbb
test
add
inc
sub
stos
or
and
xchg
and
test
sbb
or
nop
loopne
fcomps
dec
xchg
and
popf
call
add
pop
cmc
imul
or
les
repz
clc
sub
insl
std
shr
add
or
adc
add
out
pop
or
mov
push
push
adc
mov
dec
call
and
add
mov
mulb
or
add
pop
mov
pop
add
popf
xchg
jp
fidivrl
out
mov
adc
inc
jbe
add
jl
or
rorb
aaa
cmp
or
dec
mov
dec
es
push
push
hlt
es
sti
and
push
and
cmp
and
repnz
push
xor
xchg
ja
mov
inc
pusha
xchg
roll
adc
push
pushfw
stc
dec
movsl
cs
mov
int3
mov
lcall
jmp
xor
fstl
pusha
cmpsb
and
xchg
andb
mov
xchg
es
lock
ficomps
adc
adc
xor
adc
and
in
inc
jl
fsubrl
add
mov
stos
scas
cli
jne
dec
push
jp
adc
incl
pop
sub
cmpsb
or
xchg
or
mov
jp
mov
shll
data16
and
push
ja
mov
xchg
xchg
das
sbb
mov
xor
add
mov
repnz
das
and
imul
pop
and
loope
dec
adc
call
lea
ret
shl
xor
pop
or
jne
enter
add
lret
xchg
sub
or
decl
inc
sbb
jo
jno
sbb
jo
push
jns
movsb
xchg
cltd
sub
sbb
add
add
mov
xor
or
test
mov
jo
aaa
push
and
into
push
dec
xor
enter
hlt
add
add
mov
sbb
mov
lods
adc
insl
xor
add
pop
mov
mov
das
pop
jecxz
inc
pop
outsl
inc
mov
and
xor
mov
and
xor
mov
xor
clc
sbb
sub
gs
scas
aaa
inc
push
adc
jbe
jg
aam
sbb
add
pop
je
add
or
inc
mov
sub
xchg
mov
jge
jecxz
pusha
imul
dec
arpl
add
mov
mov
or
outsb
inc
jmp
push
add
leave
cmp
mov
or
fldl
jnp
push
sbb
add
call
scas
push
ljmp
inc
jb
dec
es
sub
push
icebp
cmp
mov
lock
jne
rol
fdivrs
mov
mov
cmp
jle
and
data16
jge
sbb
cmp
push
jp
fisttps
pop
cmpsb
sbb
out
ds
mov
xchg
fdivrl
ss
adc
cmpb
jl
xor
insl
jmp
xor
inc
add
mov
fstl
int
ret
push
filds
push
insb
jmp
stos
and
imul
adcb
mov
ds
mov
inc
and
inc
inc
push
mov
or
lods
test
aas
jmp
lods
mov
adc
lret
rcrl
jmp
dec
add
mov
fwait
mov
into
adc
rorb
push
cltd
or
adc
inc
mov
xor
clc
out
roll
leave
add
or
je
mov
iret
stos
add
ss
imul
lahf
dec
je
jecxz
scas
adc
bound
or
andb
in
sar
mov
pusha
jo
inc
add
pushf
sub
mov
lret
lock
out
dec
and
popa
je
adc
xchg
push
pusha
clc
pop
bound
add
or
push
in
loopne
jecxz
dec
jge
inc
inc
push
neg
neg
sbb
ds
sahf
sahf
sub
inc
sbb
lock
sbb
mov
nop
popa
adc
xorl
push
push
inc
lcall
mov
icebp
inc
push
test
adc
inc
aad
sbb
and
mov
push
add
leave
dec
jns
mov
loope
daa
pop
pop
pop
aam
pop
mov
add
adc
lods
rcl
ljmp
dec
and
shr
sub
adc
dec
adc
push
ret
cli
idiv
and
maskmovq
cld
lock
je
das
push
pop
adc
push
loop
add
loop
add
or
mov
outsb
into
add
orl
or
xor
enter
cmp
loopne
push
or
aad
mov
push
sarl
jbe
aas
mov
hlt
adc
test
sbb
shlb
xor
mov
rcll
jnp
adc
xchg
movb
adc
cmp
paddusb
adc
and
mov
sub
cmp
mov
or
and
daa
mov
xchg
add
rcrl
push
push
ljmp
cld
inc
ss
test
nop
aaa
dec
sub
mov
jnp
inc
inc
jns
cmp
movsb
xlat
cmpsb
je
cld
mov
and
mov
enter
pop
pop
push
and
sub
add
push
ret
cli
enter
xor
insl
inc
fs
xor
mov
xchg
add
mov
clc
or
adc
es
mov
je
mov
and
jb
cmp
dec
cli
out
ja
add
cmp
adc
cmp
jne
adc
shll
leave
adc
mov
hlt
jb
idivl
pop
je
push
dec
or
adc
push
inc
mov
mov
mov
inc
call
rcrb
adc
pushf
movl
aas
dec
push
pop
push
movb
jmp
or
push
mov
aaa
ss
cmp
mov
in
test
mov
or
mov
add
xor
add
inc
aas
or
cmp
ficomps
xor
pop
mov
into
testb
pop
xchg
subl
aaa
add
sti
test
xlat
insb
loope
mov
or
fstpl
js
push
andb
dec
dec
pop
xchg
sbb
jnp
je
add
sbb
daa
jo
movsb
push
mov
aas
dec
push
mov
leave
adc
shr
shr
ljmp
addb
test
or
mov
ja
pop
pop
dec
dec
movswl
cltd
lods
ja
xchg
fildl
cmpsl
aad
mov
push
ljmp
cwtl
sbb
jb
mov
mov
inc
orl
push
ds
jmp
sub
addr16
xor
and
mov
push
loope
stos
or
jb
jl
pop
mov
decl
jle
repnz
xor
adc
adc
mov
mov
mov
and
scas
std
and
lea
inc
xor
lods
push
cmpsl
add
into
sahf
cmpb
pusha
add
pushf
cmp
cmp
xor
mov
and
loope
leave
out
mov
inc
call
jnp
ljmp
loope
rorl
add
and
lea
rolb
lods
xor
inc
mov
push
lea
shlb
enter
xchg
imul
or
push
adc
inc
adc
cmp
pop
fcomi
xor
shll
js
pusha
data16
xchg
rcrb
insb
jl
fwait
cmpsb
mov
and
rorb
jae
add
cmp
cmp
bound
shll
mov
add
shr
or
test
cmp
rorb
sbb
imul
lret
or
pushf
out
mov
test
lods
cmpsl
lock
mov
add
shrl
loope
shr
or
sarl
or
dec
mov
lret
pushf
pop
jp
jnp
cmc
cmp
adc
loope
sub
movsb
stc
repnz
add
cli
cli
inc
cli
test
shl
repnz
jbe
test
movsb
cmpsl
movsl
fadds
inc
push
lahf
test
and
fmuls
sbb
adc
and
fisubrl
popa
fimull
pop
dec
nop
mov
push
fidivl
fldenv
enter
scas
push
and
mov
insb
out
je
lret
enter
imul
mov
xor
and
dec
sbb
imulb
or
pushw
sbb
inc
shll
jge
icebp
push
dec
shr
test
mov
mov
and
and
daa
adc
sbb
push
cli
or
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
notb
test
xor
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
push
and
insl
test
cli
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
xor
call
insl
push
aad
pop
outsb
call
inc
add
cltd
and
or
add
or
and
jne
cli
pop
inc
rcrl
lcall
xor
mov
insl
call
mov
imul
call
mov
fsubs
pop
add
inc
loope
push
and
js
push
in
les
out
add
movsl
out
pop
lods
jbe
in
add
fstl
cld
or
les
enter
xchg
xor
adc
or
movsb
stc
xchg
rcr
ljmp
lock
inc
dec
enter
sahf
mov
mov
jae
add
sub
add
call
hlt
mov
add
into
or
mov
inc
and
add
ljmp
jmp
dec
dec
jg
add
sub
cmp
jge
sub
add
cmp
movb
dec
cmp
out
fmuls
add
dec
add
add
fadds
adc
call
rorb
dec
mov
or
or
aam
or
add
dec
jbe
mov
lret
or
add
inc
mov
jp
ret
adc
rclb
add
add
add
mov
and
ret
lcall
xor
outsb
or
lret
mull
sub
or
add
push
and
pop
das
push
adc
or
repz
add
or
jne
or
push
pop
scas
je,pt
push
inc
or
ret
mov
cmpl
pop
movsl
shlb
xchg
adc
or
jae
pusha
das
adc
ret
cmp
mov
iret
xor
mov
dec
in
pusha
inc
pop
or
sarb
pop
pop
in
cltd
cmp
cmpps
ret
inc
inc
scas
prefetchw
sahf
inc
ret
or
push
lea
add
data16
xor
jbe
jne
or
or
mov
and
movsl
push
or
inc
je
pop
mov
pop
rol
push
je
lret
mov
or
sub
rcrb
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shlb
ret
sbb
cli
cmp
ret
xchg
inc
jl
add
mov
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
addl
push
or
mov
test
fadds
or
mov
in
xsaveopt
or
xchg
test
repnz
test
adc
imul
add
push
into
mov
mov
pop
sbb
xor
inc
jg
xchg
xchg
out
into
into
into
mov
or
mov
sarb
push
pop
nop
pop
mov
pop
mov
push
add
rolb
push
popf
sbb
stos
cmp
pop
inc
shll
push
fs
pop
push
test
pop
xchg
divl
xchg
out
adc
dec
js
pushf
add
movsb
popf
dec
jl
pop
stos
mov
mov
mov
and
cltd
and
sbb
pop
sbb
sbbb
sub
jmp
rcrl
jmp
leave
lret
push
xor
xchg
xchg
inc
and
jge
decb
mov
mov
aas
mov
sbb
or
enter
imul
in
add
into
lret
mov
inc
xor
in
push
not
aas
push
in
hlt
aam
sub
add
lcall
lret
sahf
or
jo,pn
add
repz
add
insb
mov
pusha
jno
sbb
cmp
stos
je
dec
sub
loope
jle
xchg
outsb
cmp
je
mov
push
or
or
or
cmp
jbe
sbbl
jmp
push
xor
movsl
pushf
xchg
loopne
lretw
pop
or
fisubrl
cmp
xor
mov
sbb
mov
lods
cmp
sbb
inc
or
cld
xor
mov
in
add
ret
ljmp
or
adc
enter
loopne
mov
js
lcall
shlb
xor
push
loop
and
push
push
mov
inc
dec
test
pop
and
lret
add
inc
cltd
in
fmuls
add
push
sarb
ret
cmpb
stos
or
add
dec
sahf
push
roll
xchg
dec
cmpsl
cs
xor
rorb
loope
movsl
push
aam
push
cmp
iret
daa
les
and
jmp
popf
ljmp
shrb
add
movsl
mov
js
or
add
cmp
fs
add
imul
lock
mov
mov
mov
gs
fimuls
notl
adc
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movsl
ds
cmc
inc
pop
xchg
ret
mov
hlt
add
call
es
push
ret
dec
mov
push
loopne
out
xchg
test
sbb
pushf
inc
and
push
or
into
pop
mov
mov
push
rorl
mov
fidivrl
sbb
xchg
sbb
dec
in
lret
test
adc
cli
neg
xchg
gs
add
jg
xor
inc
jp
mov
sbb
push
mov
lret
ljmp
mov
mov
mov
pusha
sub
mov
xchg
inc
xlat
add
gs
dec
mov
push
fmulp
add
mov
jecxz
mov
loopne
jmp
dec
fs
movsb
fistpll
mov
shr
subl
push
js
pop
enter
xor
or
mov
out
dec
sbb
sbb
push
test
adc
rcr
pushf
xor
push
bound
xorl
sahf
and
sbb
push
adc
cwtl
call
decl
arpl
je
jg
add
add
scas
sbb
sbb
xlat
pop
and
pop
push
stos
movl
lahf
scas
inc
pop
mov
iret
imul
xor
lahf
pop
mov
sub
rorb
jmp
pop
xchg
aas
push
sbb
sbb
and
in
repnz
adc
clts
ds
ss
xlat
add
test
js
add
sahf
sub
sub
and
add
add
les
cmp
or
iret
pop
test
pop
xor
jmp
or
or
cmp
xchg
push
dec
sub
sbb
cmp
sub
jmp
sbb
push
push
mov
clc
outsb
sub
sub
les
mov
mov
ljmp
or
mov
xchg
or
insl
mov
ret
cld
push
and
add
add
inc
dec
test
add
mov
xor
sbb
dec
pop
push
and
and
fstl
pop
sub
mov
ret
pop
rol
shll
sbb
mov
add
cmpsl
lock
pop
scas
push
mov
add
add
sbb
lret
fs
cmp
dec
es
sti
mov
cltd
mov
ret
ficoml
sub
ret
or
enter
dec
es
push
add
mov
pushf
ror
int3
jmp
fadds
add
xchg
sbb
adcb
test
or
insl
loop
push
loopne
je
pop
test
test
fs
les
cwtl
adc
inc
test
roll
pusha
imul
inc
add
jmp
stos
sub
cmp
cld
mov
inc
cmc
scas
cld
lret
or
adc
add
dec
test
mov
sarl
int
notl
or
into
inc
enter
mov
or
fstps
adc
cmp
and
adc
dec
sarl
rcrb
pop
add
jne
xchg
lock
fwait
mov
push
mov
in
lret
stos
xor
add
mov
hlt
inc
fcmove
push
cmpsb
adc
aam
xor
and
push
int3
rcrb
test
lahf
incl
sub
ret
stos
push
aam
pop
pushf
enter
xor
sub
data16
add
les
mov
fisttps
xor
btc
std
data16
xor
lock
xchg
roll
jo
jmp
push
pop
mov
or
and
inc
das
rcrl
aam
and
or
adc
add
and
pushf
jns
int3
dec
adc
movsl
ret
jo
arpl
imul
aas
imul
push
fsubrp
sub
or
inc
adc
loopne
cmpsl
lock
add
xchg
jge
cmp
fiadds
mov
aas
or
movsl
jge
mov
outsl
icebp
adc
mov
sbb
cmp
ja
mov
test
jne
adc
cwtl
dec
stc
cmc
and
sbb
int3
daa
push
inc
enter
sarb
out
jp
repnz
mov
dec
test
jg
adc
adc
lock
shr
lcall
sub
mov
rcrb
cmp
push
pop
addb
shlb
mov
call
pop
cmp
lock
fadds
in
mov
ljmp
fidivs
pop
push
cmp
mov
ret
leave
ret
push
lcall
add
dec
jb
sahf
stos
lods
scas
lea
scas
add
add
mov
or
mov
or
mov
testb
repnz
mov
or
test
or
pop
aaa
mov
out
lcall
push
inc
inc
loopne
pop
cmp
cmp
sbb
mov
pop
roll
sbb
dec
cwtl
repnz
hlt
enter
cmpl
mov
push
cmpsb
xchg
or
imul
cmp
adc
ja
ret
hlt
xor
push
mov
dec
fldl
mov
mov
int
mov
in
sbb
iret
es
jns
add
xor
mov
mov
inc
loop
or
mov
ret
inc
cmp
jge
dec
movsl
mov
adc
and
and
adc
inc
sbb
xor
or
std
or
xchg
xchg
and
xor
negb
xchg
sbb
lds
adc
jae
sub
lea
insb
sbb
aaa
inc
in
xor
test
mov
les
pop
sbb
add
add
ja
ret
or
stc
jg
inc
ljmp
pop
add
sbb
adc
push
rcrb
sbb
fwait
xchg
and
push
dec
je
inc
push
add
xor
or
lahf
insl
pusha
cmpsl
add
fs
pop
jl
divb
adc
mov
xor
imul
mov
fstpl
out
pop
cmp
and
test
add
ret
dec
xchg
cwtl
fsts
add
icebp
cld
or
xchg
and
push
or
fs
sti
mov
or
scas
mov
mov
mov
loope
fmul
adc
jo
cltd
inc
movsb
sub
xchg
push
inc
dec
xchg
push
push
jmp
loope
mov
and
cwtl
ret
cmpl
dec
cmpsb
pop
adc
jne
jle
inc
or
sbb
push
sbb
dec
and
adc
cmp
rolb
add
dec
loopne
dec
les
adc
and
add
mov
xor
addl
pop
dec
pop
mov
cmpl
stos
ds
cmpl
loope
lret
sbb
push
pop
cmp
sbb
movsb
push
mov
sbb
lods
daa
fisttpl
pusha
cwtl
movntps
dec
add
xor
rol
adc
rcr
mov
cmpsl
cmp
adc
or
lods
addl
cmp
jge
sbb
and
sub
push
inc
mov
pop
inc
stc
repnz
out
and
push
call
dec
adc
push
es
push
js
jnp
dec
mov
sbbb
pop
je
int
nop
pop
stos
cltd
aam
push
lock
adc
xor
aas
dec
jne
jl
jmp
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
jmp
movsb
das
add
pop
add
inc
fiadds
sbb
sbb
push
addl
imul
subb
cli
sbbb
xor
inc
pop
adc
daa
and
adc
or
ljmp
popl
dec
jne
push
and
inc
sbb
add
fcoms
jmp
xor
rolb
inc
xor
sarb
je
adcl
push
pop
fdivl
insb
or
pushl
mov
push
icebp
enter
xor
cli
inc
cs
adc
outsl
sbb
or
dec
inc
add
cmp
xchg
xchg
jns
inc
roll
sub
pop
jle
jmp
inc
mov
lea
mov
and
inc
lods
xchg
repz
insl
inc
lahf
in
xchg
les
push
add
data16
js
insl
pop
inc
hlt
push
cli
push
dec
or
jo
stos
dec
mov
xor
pushf
jae
cmpsl
call
push
lea
jl
pop
pop
pcmpgtw
mov
add
push
hlt
jle
cmpb
shl
mov
lock
jne
add
xchg
jne
lods
sbb
jnp
in
int3
popa
lods
add
mov
jb
arpl
sbb
aas
pop
sbb
xor
rclb
cmp
inc
cwtl
or
jl
fisubl
push
cmp
out
mov
or
pop
shlb
mov
and
xor
das
dec
pop
fsts
sbb
adc
xor
leave
test
cmp
mov
sbb
shlb
jne
ja
loopne
adc
fisttpl
or
sbb
ss
mov
mov
and
fwait
ss
fs
inc
pop
rcrb
lock
jle
add
imul
les
push
xor
inc
inc
cmp
inc
sub
jne
add
xchg
cmp
mov
inc
or
std
sar
scas
les
imul
sbb
jg
add
jno
addb
jbe
lcall
test
dec
add
fmuls
mov
inc
lock
or
mov
test
jb
adc
or
and
mov
mov
and
mov
fdivrl
jmp
jbe
adc
add
dec
jg
adc
orl
jg
jmp
adc
shlb
lret
or
roll
loopne
call
mov
jb
lods
jo
jb
or
cmpsl
mul
addl
and
mov
pop
aaa
pop
pushf
and
test
cmpsl
or
push
jae
js
cmp
jno
sub
pop
and
jns
rcl
in
bound
mov
out
mov
cmpsl
adc
ss
inc
lret
adc
pop
or
cmp
insb
and
mov
shrb
inc
cli
ret
jns
inc
or
mov
add
cmp
je
cmp
adc
cmp
ficoms
clc
jb
testb
xchg
testb
add
add
movsb
mov
jge
push
in
or
inc
sbbl
je
cmp
ret
cmc
pop
xor
sub
pop
adc
daa
clc
inc
sub
mov
push
or
dec
mov
inc
test
push
mov
xor
shr
jmp
das
xor
in
sti
xchg
push
cmp
sidtl
inc
push
mov
and
jne
or
adc
fnstsw
fstpl
pop
jmp
push
cwtl
js
xor
push
sbbb
inc
pop
pop
mov
in
test
iret
movsb
sub
sub
sub
mov
add
push
or
shrb
and
fldl
inc
repnz
hlt
xchg
sbb
jle
pop
je
push
in
mov
adc
and
add
or
stc
add
es
xor
jb
xor
pop
jne
add
adc
add
add
adc
adc
xchg
lock
int
out
movsl
cltd
add
push
cmp
push
inc
stos
mov
outsb
adc
xor
mov
insb
popa
stos
fcmovu
mov
add
lcall
add
icebp
out
pop
mov
lock
fnstenv
fcomip
fildll
mov
sub
clc
jbe
pop
cmp
jmp
cwtl
mov
xor
aaa
aad
add
loop
ret
sub
adc
enter
ficompl
adc
ret
fstps
mov
sbb
nop
adc
pop
dec
mov
mov
and
mov
pop
or
popa
sub
inc
or
lea
mov
sarl
mov
xlat
jo
add
and
rcrb
rolb
xchg
dec
inc
adc
sub
inc
or
cmp
adc
xchg
sub
jbe
and
sti
jl
lds
int
sub
pusha
jb
outsb
adc
in
sti
xchg
fsubl
cmpsl
fidivrl
imul
inc
push
in
lock
and
in
xor
adc
js
adc
in
lock
movsb
fmul
scas
pop
shlb
pop
cld
mov
cmp
fcmovu
sbb
jmp
mov
and
adc
cmp
dec
ret
dec
fisttpl
inc
mov
lods
mov
cmc
movsl
aam
imul
adcb
movsl
arpl
roll
sets
jo
inc
rolb
sbb
lds
fcomp
sbb
out
icebp
dec
in
arpl
xchg
fnstsw
pop
cmp
ljmp
mov
dec
adc
add
ret
ret
dec
frstor
and
add
fstl
adc
loopne
dec
ficoms
or
in
scas
mov
dec
mov
repnz
xchg
jl
rcl
in
inc
adc
bound
fsubrp
pop
adc
cmp
popa
xchg
xchg
push
inc
scas
mov
pop
push
xor
mov
and
mov
fcompl
push
nop
pop
fs
nop
mov
mov
das
adc
pop
dec
roll
in
cmpb
dec
push
loopne
je
push
adc
xchg
and
cs
and
mov
and
or
pop
mov
call
enter
or
les
sarb
test
aam
pop
cmp
test
adc
pop
jbe
loopne
adc
pop
fsubs
mov
lahf
repnz
outsb
push
leave
and
dec
fs
xor
js
and
enter
sbb
pushf
add
fsubr
adc
lock
add
aas
sbb
jge
das
and
xchg
adc
nop
adc
shrb
mov
enter
adc
sbb
sti
gs
dec
push
movsl
jecxz
jecxz
xchg
add
cmpl
enter
stc
sahf
xchg
inc
and
jno
adc
fcmovnb
sbb
mov
repnz
mov
cli
pop
jecxz
gs
pop
les
js
leave
les
jle
push
cmp
cltd
mov
jne
add
add
stos
adc
and
pop
or
push
mov
shl
outsl
add
inc
xchg
out
or
push
mov
inc
mov
int3
aam
and
addr16
adc
leave
aas
push
cmpsw
addb
inc
dec
or
inc
imul
xor
jbe
jle
cmp
popf
lock
lock
sbb
lahf
nop
xlat
sti
xor
popf
enter
inc
mov
adc
xor
aam
or
adc
xor
mov
mov
xchg
xchg
mov
loopne
lock
jp
jmp
dec
negl
jo
add
pop
insb
ja
subb
mov
mov
in
jno
fcompl
add
aam
sub
shrb
in
test
in
and
xor
jmp
sub
dec
mov
fnsave
imul
in
push
jmp
dec
add
cmpb
and
xchg
mov
push
cmp
enter
shlb
pop
repnz
fwait
add
xor
add
xchg
jmp
pushf
stos
push
and
add
jecxz
add
mov
sub
jl
mov
sub
adc
popa
in
sub
imul
fsubrl
shr
enter
pop
adc
jnp
and
mov
dec
hlt
mov
xor
mov
ret
dec
lods
add
inc
ret
push
sbb
sub
cmc
push
mov
ret
in
pop
push
fsubs
cmp
add
fwait
popf
adc
arpl
jecxz
xor
in
dec
imul
rorb
jmp
push
jo
leave
add
push
addl
xchg
pop
bound
ret
cmp
test
jp
jge
xor
push
enter
out
inc
push
mov
inc
insb
aad
xor
or
movsb
sub
pusha
jns
adc
in
lock
pop
scas
popa
jmp
adc
sbb
xor
je
lock
pop
cmp
pop
sub
jbe
iret
and
sbb
loopne
fmull
loop
scas
inc
mov
lock
pop
addr16
add
xlat
inc
repnz
daa
cmpsl
loope
xlat
clc
cltd
icebp
adc
sbb
pushf
inc
push
mov
icebp
cmp
xchg
mov
mov
in
es
leave
loopne
and
mov
xchg
sbb
or
dec
mov
sbb
fs
fdivrs
mov
sbb
add
dec
movsb
sti
repnz
es
aam
hlt
test
fs
jno
or
push
sub
push
xchg
mov
ret
xor
repz
shl
test
jp
psrad
jb
mov
ret
cmp
lock
mov
enter
clc
adc
xor
and
adc
aam
hlt
mov
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
stos
scas
lock
add
inc
push
add
xor
xor
cltd
cmc
add
punpckhwd
add
loop
cmpl
cmc
pushf
or
enter
or
andb
or
loopne
jnp
movl
adc
mov
testl
dec
shll
inc
sbb
cmp
iret
popf
daa
fmuls
adc
imul
leave
mov
and
adc
in
inc
push
adc
mull
and
or
cmp
mov
jne
pusha
lea
pop
enter
mull
inc
shlb
sbb
inc
sbb
xor
imul
icebp
clc
fs
iret
nop
movsb
in
ret
adc
adc
mov
push
jae
leave
mov
cld
stc
int3
and
popa
adc
jmp
stc
or
jno
jge
add
mov
clflush
and
pop
jae
aam
or
stos
push
adc
jge
sbb
dec
enter
xor
movsb
adc
push
add
mov
fmuls
das
rcrb
sbb
mov
dec
push
mov
imul
in
inc
cli
insb
stc
fs
adc
sub
sub
lods
test
push
sub
fcoml
pusha
je
ljmp
dec
or
sub
sti
nop
int
push
inc
xchg
gs
aam
pop
enter
in
add
rorl
loopne
fiaddl
and
inc
stc
call
loop
add
sbb
xor
pop
add
mov
cmp
test
daa
xlat
push
in
inc
aam
inc
mov
add
aaa
or
mov
aam
std
jg
xchg
nop
ret
test
dec
paddw
xchg
out
mov
stos
fdivs
loop
inc
js
lock
ret
cs
orl
mov
outsl
and
loopne
cmp
fsubs
ljmp
jno
and
mov
or
inc
fs
mov
jbe
inc
or
xor
xor
fidivrl
repnz
add
nop
daa
pop
mov
repnz
arpl
call
f2xm1
sub
add
mov
adc
in
sbb
inc
push
cmp
or
cmp
pop
push
or
add
daa
add
mov
mov
xor
incb
sbb
xchg
imul
test
pop
lret
cmp
lret
out
sbb
inc
ret
cmp
add
cmp
mov
add
or
or
sbbl
stc
push
or
sub
push
lods
mov
cmp
sub
jecxz
jmp
mov
imul
cwtl
and
daa
add
push
mov
sbb
inc
and
inc
mov
insl
mov
int3
setne
in
mov
dec
pop
test
int3
out
rorb
pop
scas
lods
adc
fistpll
mov
mov
add
mov
nop
aam
loopne
arpl
rclb
xchg
pop
adc
xchg
or
add
paddusb
add
lods
jno
and
xlat
jge
lods
fadds
inc
jmp
mov
out
arpl
push
fcoms
sbbl
sbb
fcomps
push
xchg
fsub
mov
mov
push
add
dec
test
dec
mov
push
dec
or
push
inc
lods
dec
jo
inc
or
pushf
push
mov
add
aas
aam
adc
inc
jl
cmc
sbb
shlb
add
subb
sub
cmp
call
cmc
mov
imul
dec
add
or
sbb
jns
enter
out
out
jb
int3
or
dec
ss
pop
gs
or
pop
mov
orb
movsl
mov
test
or
pop
inc
outsb
cmp
mov
inc
and
sub
das
pop
lods
insl
ja
sbb
inc
and
movsb
fsubrs
enter
nop
push
movsl
rolb
fnstcw
or
and
sub
pop
in
daa
xchg
call
and
inc
aam
fnsave
mov
fs
shlb
xchg
push
adc
jb
fcoml
add
dec
jg
and
add
sub
mov
mov
sbb
or
mov
mov
enter
add
adc
adc
mov
in
hlt
js
or
add
xchg
mov
cmp
or
movsb
rolb
jno
mov
andb
pop
jmp
mov
cmp
shlb
cmp
push
nop
adc
pop
adc
les
scas
popa
fdivr
notb
cmp
sub
and
xchg
mov
jno
mov
push
inc
in
in
dec
jno
add
js
sti
mov
push
and
lcall
dec
push
shrl
jno
and
sub
or
mov
mov
out
inc
jne
jne
or
iret
adc
fucomp
outsb
sbb
xchg
mov
loope
push
adc
in
sub
pop
inc
and
jecxz
jl
popl
fildll
pop
jmp
std
icebp
in
add
sti
les
aad
and
ljmp
fsubrs
in
push
sbb
daa
mov
inc
std
fcompl
xchg
sub
pop
mov
xchg
ret
in
movsl
lods
or
push
cs
lock
xchg
call
mov
adc
insl
jne
cmpsl
push
cltd
add
jl
xor
inc
aad
lods
fs
insb
mov
lret
sub
je
jmp
enter
adc
push
push
loope
das
in
test
fldt
aam
lock
roll
adc
inc
mov
add
call
adc
and
and
shll
fmull
inc
push
xor
cwtl
or
fldl
add
jge
xchg
cmpsl
pusha
push
addr16
lret
adc
and
xchg
outsb
and
hlt
xchg
lea
jge
movsb
or
rclb
inc
in
sub
lods
pop
int3
gs
outsl
and
rclb
mov
sub
inc
into
adc
sbb
in
inc
test
fcmovbe
or
sbb
mov
and
dec
inc
mov
mov
loopne
pop
pop
cmp
mov
lahf
out
adc
enter
les
mov
sbb
mov
sbb
divl
jo
xor
negl
movsb
stos
xor
enter
mov
adc
xor
xor
push
adc
push
push
sbb
pop
and
pop
daa
xchg
or
popa
cmp
sti
sbb
popa
sub
dec
insl
inc
push
cmpsl
sbb
addb
lret
mov
add
fsubl
cmpl
insl
pop
in
sbb
jne
punpckldq
sbb
cmpsb
insb
fsts
test
mov
adc
shrl
aas
cmp
and
test
fs
lock
jo
stc
adc
cwtl
pop
inc
xor
sbb
shlb
pop
sbb
inc
adc
sbb
insl
mov
in
sbb
mov
dec
int3
xchg
fildl
mov
dec
or
cwtl
nop
xchg
xor
sbb
hlt
sub
ret
jle
jb
push
adc
lcall
cwtl
movsb
loopne
dec
mov
movsb
cltd
orb
scas
mov
stos
pushf
mov
xchg
andb
xchg
mov
lret
mov
enter
push
sub
push
rorl
jmp
adc
sbb
dec
les
addr16
int3
fimull
jno
fcoms
add
hlt
test
push
or
cmp
loopne
cmp
pop
pop
std
movsb
fsts
out
jbe
js
push
rclb
fs
addb
add
scas
out
xchg
sbb
jl
mov
imul
ret
nop
adc
jl
inc
sbb
daa
nop
jo
dec
loop
imul
adc
jmp
mov
imul
rcll
lods
in
push
or
notl
or
mov
xchg
stos
inc
es
pusha
and
shl
sbb
add
cmp
int3
adcb
mov
adc
sbb
nop
ret
lds
dec
inc
xorb
es
enter
call
add
xlat
fnstenv
pop
adc
dec
es
in
paddusb
fdivs
adc
cmp
push
test
inc
rclb
test
or
call
xor
push
lea
ret
xchg
push
and
sbb
test
dec
cmpsl
mov
sbb
dec
andb
jmp
int
inc
add
add
push
bound
push
add
cmp
fdivs
ljmp
ret
es
clc
adc
pop
enter
es
push
xchg
into
mov
inc
mov
in
insb
jp
idivl
es
jg
add
pop
jb
mov
insb
adc
dec
push
push
insl
pusha
pop
inc
mov
dec
xor
pusha
adc
xor
and
cmp
xor
and
sbb
inc
leave
and
dec
cmp
sbb
xor
pop
sbb
xchg
fdivr
sub
adc
outsb
scas
sbb
shlb
push
dec
dec
test
inc
cmp
lds
enter
and
ret
sbb
mov
jb
leave
or
pusha
popa
scas
dec
push
cmp
mov
mov
addb
sub
cltd
sbb
or
les
repz
inc
xchg
stos
jbe
xchg
jb
adc
or
movsl
or
jl
pop
or
jne
xor
std
inc
pop
adc
cwtl
int3
stos
add
fldcw
push
movsb
adc
jmp
jne
pop
insl
xor
test
jb
test
je
sub
test
enter
sub
cmpsl
jmp
int3
cmc
int3
mov
les
rcrb
in
loop
shrb
nop
lahf
out
mov
rclb
outsb
lods
pop
inc
in
inc
out
sub
adc
push
or
jb
inc
ljmp
or
cmpsb
rorb
mov
pop
aas
inc
mov
dec
cs
sbb
in
lea
or
mov
pop
call
and
or
jo
je
daa
sbb
add
test
pop
loopne
pop
inc
inc
int
jno
popa
jae
mov
out
and
mov
add
add
xchg
int
cmp
mov
xor
or
adc
add
repz
loope
cmp
sbb
mov
inc
dec
mov
andl
aad
xor
mov
int3
jmp
pop
xor
test
movsl
push
push
xor
inc
pop
ret
xor
mov
dec
lcall
mov
test
xchg
imul
xor
jns
push
mov
cwtl
and
push
push
xor
fnstcw
gs
rcll
les
movsb
sbb
in
xor
js
inc
stos
xor
pop
xchg
ss
adc
sub
enter
cmpsb
mov
or
push
in
push
inc
and
xor
call
in
lods
lods
or
cltd
aas
je
mov
fwait
mull
push
mov
pop
pop
repnz
sahf
push
xor
insl
leave
xor
in
jns
inc
mov
push
or
sub
sti
or
test
sub
std
dec
jo
ljmp
addb
add
adc
aaa
ja
and
int
cmp
mov
aaa
mov
add
int
lods
or
and
pop
mov
jg
sbb
xchg
jno
cmp
adc
call
xchg
or
loopne
or
bound
test
push
or
lahf
cmp
push
loop
sub
pop
or
jo
mov
aam
pop
aam
mov
dec
loopne
inc
shll
das
andnps
jb
inc
mov
inc
rcll
in
in
out
rclb
cmp
ror
in
fsubs
stos
mov
inc
dec
sbb
shrl
std
xchg
icebp
jb
push
inc
mov
xor
les
fsubl
push
cmp
sub
test
add
pop
rorl
mov
pmuludq
loopne
aam
pop
imul
xchg
sbb
or
xorb
xchg
inc
or
sbb
in
cwtl
adc
enter
jmp
int3
adc
push
pushf
shlb
lods
test
sub
mov
lods
xchg
xchg
fucomi
mov
pushf
leave
leave
insl
xchg
pop
xchg
bswap
enter
leave
sarb
push
dec
outsb
push
or
leave
add
faddl
fsubr
sub
push
je
mov
pushf
xchg
and
xor
insb
das
ljmp
mov
jo
jns
inc
scas
mov
sbb
out
jl
xchg
dec
sbb
xchg
inc
xor
and
jl
push
inc
jb
aam
je
call
rorb
das
sub
pop
sbb
es
mov
inc
popa
adc
inc
lret
xorl
mov
or
pop
enter
mov
movsb
mov
jne
imul
push
jmp
mov
stos
cmc
inc
std
stos
les
icebp
inc
add
decl
ja
sbb
movsb
mov
jmp
sbb
mov
movsb
in
mov
xor
adcb
mov
add
shll
mov
movsl
loope
in
lret
and
cmp
lods
or
inc
les
test
cmpl
iret
inc
mov
daa
add
dec
jp
adc
movsb
movsl
dec
repnz
cmp
dec
adc
sbb
and
xchg
dec
es
pusha
negl
insl
mov
pushf
and
inc
out
gs
lcall
notl
leave
push
and
movsb
lods
sbb
cwtl
xor
inc
mov
scas
adcb
pop
inc
leave
fiaddl
xchg
imul
idivl
jecxz
xchg
loop
add
and
xor
xor
stc
add
inc
cwtl
dec
sbb
fcom
xchg
in
or
insl
cmpsl
nop
movsl
aas
outsl
mov
adc
stos
aam
adc
cmpsl
jo
jno
inc
push
push
inc
lock
jmp
cmpsb
mov
mov
sbb
inc
nop
mov
es
pop
cltd
ss
mov
imull
imul
sbb
shrb
xchg
sbb
xor
fs
dec
mov
enter
shll
scas
adc
cltd
add
mov
and
stc
les
andb
test
mov
inc
push
cwtl
jl
xor
mov
rclb
xchg
dec
pushf
xchg
ja
adc
or
sub
xchg
scas
or
shlb
aas
mov
cmp
pushf
pop
or
adcl
and
ljmp
jmp
movsb
pop
adc
movsb
and
mov
mov
pop
add
xor
repnz
repnz
repz
nop
imul
adc
rorl
mov
fwait
insb
mov
das
sbb
pushf
mov
leave
and
nop
movsb
and
pop
dec
mov
sbb
or
push
pop
jo
jo
push
neg
pop
sbb
sarl
rclb
aaa
jne
lahf
movsl
repnz
cmp
pusha
xchg
dec
mov
or
xor
pop
or
arpl
sub
repnz
cld
sub
push
and
popf
pop
in
lods
adc
mov
push
pushf
movsb
sub
cmp
jg
insl
xchg
xchg
xchg
lahf
in
sti
leave
and
ret
fists
inc
es
in
and
inc
sub
sub
push
movsb
or
mov
push
clc
mov
into
push
mov
dec
jb
cltd
add
icebp
shr
inc
shll
or
lds
and
test
dec
cmp
test
cmp
xor
in
and
es
aam
adc
pop
fsubl
and
sbb
xchg
adc
sbb
sub
push
mov
push
sub
push
or
bnd
dec
loopne
enter
shll
sub
pop
shrl
adc
stos
pop
xor
sub
mov
jp
lods
sub
push
fcmovnbe
cmp
mov
mov
out
mov
mov
sbb
sbb
faddl
or
repz
aad
jnp
faddl
sub
sbb
mov
and
sbb
mov
test
dec
lea
cmp
push
cmp
outsl
movsb
shrl
adc
pusha
push
or
jmp
mov
xchg
push
xchg
inc
movsb
aam
or
rorb
test
xor
scas
mov
adc
aam
pop
int
sbb
mov
push
xchg
mov
ret
mov
adc
arpl
and
mov
pusha
add
fnstsw
or
inc
mov
notl
pop
xor
add
loopne
xor
bound
negl
mov
fwait
adc
and
insl
test
dec
aam
adc
adc
or
inc
sub
lds
inc
test
dec
and
and
sub
and
mov
inc
xor
add
add
sbb
mov
and
in
test
bnd
push
push
test
orl
imul
aas
insl
cmp
sbb
xor
std
xorl
add
pop
aam
xchg
jo
push
push
pop
sbb
add
pop
pop
inc
scas
add
mov
call
popa
mov
fldl
or
mov
bound
in
nop
cli
inc
adc
imul
dec
scas
dec
rclb
mov
pop
test
cwtl
sahf
gs
sbb
fwait
or
mov
je
cmp
ss
movb
lcall
outsl
add
movb
jno
int
xor
cmp
xor
jo
arpl
das
dec
xor
sbb
mov
push
sub
shrb
push
fs
mov
inc
xchg
cmp
push
fwait
dec
push
dec
add
push
and
js
ds
dec
adc
pusha
inc
mov
inc
mov
scas
int
mov
xchg
neg
rolb
push
mov
sbb
nop
imul
xor
mov
pushw
hlt
mov
adc
nop
inc
test
sbb
add
ficoml
pop
or
jb
or
fcomps
and
dec
rcrb
mov
sbb
xor
or
xchg
dec
xor
test
mov
sub
nop
imul
loopne
sub
dec
xchg
or
pop
jo
movsb
push
pop
outsb
pop
xchg
push
add
fisubl
pmulhw
jne
fildll
jecxz
mov
add
fsub
xchg
out
xchg
or
inc
mov
cmp
or
jge
fwait
ss
adc
mov
mov
sbb
lret
inc
fmulp
rcrb
cltd
xchg
sti
add
push
test
adc
inc
leave
and
fmull
jo
ja
xor
cmp
insl
cwtl
call
jne
xor
sti
mov
mov
insb
add
and
jmp
out
mov
dec
mov
enter
sub
shll
es
ffree
add
ficoml
add
mov
sub
sub
jmp
stos
dec
push
and
mov
or
inc
shlb
pop
movsb
jnp
lret
imull
or
fcomp
aam
enter
call
mov
add
and
and
jmp
cmp
mov
adc
lcall
sbbb
out
or
push
and
push
mov
mov
outsb
pop
fs
push
xchg
mov
add
inc
aad
pop
repz
adc
fcomps
xchg
out
cmp
mov
sub
out
sahf
cmp
adcb
int3
out
add
and
fwait
int
push
push
add
push
xchg
pop
mov
insl
ss
push
rcrl
das
cmp
mov
mov
add
sti
jg
orb
jnp
mov
add
adc
mov
rcll
xchg
adc
jg
push
or
cmp
rclb
cmpl
test
add
cmp
insl
call
adc
test
and
push
xor
sahf
addr16
call
add
or
mov
add
push
cmp
add
pxor
pop
sub
fbstp
aaa
lods
push
mov
and
insb
outsl
arpl
imul
xchg
test
sub
popa
arpl
sti
pushl
jb
outsb
je
add
das
add
push
insl
adc
push
xchg
outsl
jb
js
je
mov
fistl
mov
jae
or
mov
add
in
jnp
add
add
add
jne
les
inc
jl
ja
and
jb
dec
push
add
add
xor
or
fs
add
adc
xlat
add
add
aas
xlat
popf
inc
rcr
ss
dec
add
sub
imul
push
insl
xchg
je
je
and
mov
das
dec
fisttpl
jl
xlat
mov
cmpsl
insl
push
push
jl
adc
jae
bound
push
mov
push
lret
sbb
popa
fidivs
xor
insb
outsl
cmp
or
mov
mov
out
bound
jmp
mov
jmp
jo
mov
dec
xor
stos
insl
sub
jmp
jae
push
imul
cmpl
shll
inc
push
data16
sub
mov
outsb
mov
sub
fs
lock
sub
insb
lcall
repz
lahf
popa
jns
sbb
push
outsb
inc
arpl
inc
or
daa
cmp
sbb
dec
jbe
fbstp
maskmovq
push
outsb
bound
jnp
sub
push
arpl
xor
xor
scas
xor
sbb
inc
mov
fcoms
fisubl
sbb
aas
cs
and
daa
mov
and
andl
arpl
popa
sub
inc
ret
or
outsl
orb
jg
mov
iret
fistps
lods
inc
push
ss
or
jne
sbb
sub
jbe
jb
jne
aaa
stos
aad
pop
jbe
in
pop
test
stos
bnd
fisubrs
sbb
pop
or
cmp
push
jo
lahf
xor
aas
or
arpl
sbb
push
mov
dec
push
mov
xlat
aaa
out
roll
jecxz
stos
mov
scas
fs
imul
shll
ret
xchg
test
cmpsl
jl
lock
das
loope
or
mov
pop
jge
mov
stos
pop
insl
lret
je
adc
cmp
lea
mov
sbb
subb
out
pop
jecxz
push
push
sub
push
inc
sbb
shlb
dec
int
xor
fs
add
xchg
das
inc
fimuls
add
js
and
out
enter
in
adcb
adc
enter
das
inc
mov
mov
clc
repnz
xchg
sbb
clc
pop
inc
mov
jmp
js
jns
into
xchg
and
in
ret
mov
aaa
lods
lock
add
mov
jp
fldl
add
push
cmp
fucomi
xor
loope
or
cmp
mov
cmp
imul
mov
popf
mov
in
cmp
push
fwait
cmp
out
pop
dec
orl
sbb
xor
fdivrl
pop
add
jbe
outsb
and
add
das
das
and
popa
mov
scas
pop
mov
shlb
dec
ljmp
mov
cs
test
je
mov
cli
addr16
idivl
aas
xor
stc
dec
inc
mov
sbb
mov
clc
ds
pop
pop
popa
jnp
outsl
dec
and
inc
das
pop
insl
sbb
pop
imul
iret
insl
arpl
fdivrs
out
out
mov
shr
and
arpl
adc
pop
pop
jp
jae
andl
sub
pop
sti
dec
jne
dec
fbld
insl
pop
mov
sbb
mov
lahf
jg
lea
enter
insl
cmp
add
cmp
and
jns
add
das
clc
lahf
neg
das
jns
push
dec
push
inc
inc
arpl
bound
mull
mov
dec
arpl
out
sbbl
inc
jo
sub
addr16
xor
insb
xchg
mov
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
out
jnp
jns
jg
addr16
popa
je
lods
std
int3
fnsave
xor
and
daa
mov
gs
sbb
dec
outsl
outsb
and
cmp
pushf
insl
jbe
mov
aas
add
out
dec
or
inc
arpl
mov
jae
jnp
dec
and
push
inc
push
popa
insb
jne
loope
mov
push
dec
ret
pop
decl
stc
and
sub
sub
cs
xor
xor
xor
ss
sbb
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
ja
pop
sub
push
push
jb
pop
pop
mov
xor
popa
bound
gs
imul
shl
outsl
jo
add
jbe
js
jp
jl
jle
dec
outsw
mov
lock
loopne
jnp
inc
xchg
pop
add
orb
aas
ds
sar
lret
jno
icebp
pusha
inc
mov
mov
ret
movsl
add
xorl
inc
ja
push
outsl
imul
jae
or
add
es
gs
xor
popa
js
jne
mov
addl
pop
adc
out
ret
ret
sbb
sub
je
adc
dec
sub
imul
add
and
push
pop
rolb
push
add
xor
pop
xor
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
les
int3
push
jo
add
lds
loopne
xchg
inc
add
imul
outsb
and
push
or
and
stc
into
and
sahf
xchg
int
push
rorb
add
dec
dec
sahf
dec
lea
mov
mov
xchg
xchg
dec
repnz
dec
xchg
mov
mov
insl
jns
add
pusha
je
popf
dec
scas
mov
aad
out
add
lods
pop
lods
push
stos
mov
xlat
jmp
repnz
sbb
fwait
xchg
cmp
push
ja
mov
cmp
xor
dec
inc
pop
dec
dec
inc
movl
out
shrl
fs
je
cs
adc
dec
dec
bound
je
outsb
data16
in
js
xor
ss
out
je
xor
divb
adc
jo
pop
lea
lcall
popa
addr16
outsl
js
push
inc
mov
and
cs
and
insl
jo
jo
and
mov
sub
shlb
aaa
insb
les
dec
inc
sti
add
and
add
pop
imul
ds
cmp
dec
inc
jb
jns
cmp
daa
pop
and
ss
jns
mov
insb
and
in
test
je
and
inc
sbb
cmp
outsb
jle
jbe
mov
fdivl
or
jb
and
fidivrl
pusha
inc
jbe
push
fiaddl
fmuls
imulb
xor
or
and
sub
arpl
clc
mov
lcall
cmp
push
and
mov
xchg
inc
pop
dec
adc
pusha
adc
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
or
push
cmp
call
push
hlt
clc
addr16
cmpl
ja
mov
data16
push
mov
insl
mov
push
push
push
dec
testl
imul
repnz
push
lods
mov
mov
fisttps
shlb
dec
jge
or
sbb
imul
push
imul
stos
rorb
pusha
jg
ret
push
inc
outsl
jae
inc
push
xor
das
gs
sbb
lods
fadds
mov
push
or
stos
outsb
aad
das
je
outsl
xchg
push
mov
mov
popw
mov
rcrl
pop
cmp
cmp
ds
mov
das
push
sub
pushf
lock
jle
shr
cltd
es
add
jnp
cltd
iret
add
sub
pop
or
sbb
test
fisubrs
das
push
jb
push
mov
and
push
mov
push
xchg
pusha
mov
jne
stos
addr16
push
jbe
mov
loopne
sbb
jo
ss
gs
push
push
pushf
imul
and
cmp
push
sahf
fsubl
int3
inc
pop
sub
popa
sub
push
jl
out
repz
cmp
xor
out
cmp
sbb
add
clc
lock
sahf
call
iret
out
push
enter
mov
sahf
out
mov
test
cmp
jns
cwtl
xchg
nop
mov
test
fdivp
addb
js
fnstsw
push
push
je
jo
insb
repz
fcoml
dec
aas
pop
push
push
iret
repz
push
dec
dec
inc
inc
cmp
iret
repz
xor
sub
jns
iret
repz
add
call
out
test
push
sahf
sub
call
iret
repz
push
dec
inc
xor
sahf
int
adc
cli
cld
in
rcr
jns
out
mov
out
lock
neg
jns
int3
stc
xchg
stc
mov
xor
test
mov
fdivrp
inc
clc
jle
mov
mov
add
and
orb
imul
inc
addl
or
add
aad
insb
add
add
cltd
xchg
push
push
add
jbe
add
add
imul
jmp
add
adc
sbb
mov
and
pop
xchg
xor
mov
addb
xchg
decl
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
int
dec
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
push
xchg
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
test
xchg
mov
push
and
inc
aad
push
lcall
push
andl
outsb
gs
popa
data16
pop
jg
jo
outsb
push
xor
add
pop
cmpsl
ficoml
add
add
push
jns
outsl
dec
arpl
inc
insb
cmpsl
cmp
mov
aas
sbb
mov
pop
addr16
xor
in
iret
test
pcmpgtw
xor
add
lock
inc
adc
push
and
imul
xor
push
dec
inc
dec
cmovns
add
mov
imull
adc
rorl
mov
mov
out
xor
jnp
inc
loop
mov
ds
xchg
out
in
pop
adc
clc
lret
sbb
jb
in
xchg
jge
arpl
cmp
jg
adc
in
sbb
xchg
fisubrs
and
cmp
dec
jmp
iret
imul
lret
add
inc
mov
mov
notb
lret
sub
fwait
ss
sbb
pop
mov
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
decl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
mov
adc
xchg
icebp
mov
cld
or
loopne
cmp
inc
mov
addr16
fcoml
mov
or
insb
mov
out
leave
ljmp
mov
dec
test
shrl
aas
jl
leave
hlt
mov
sahf
xchg
dec
add
scas
lods
dec
lock
jb
xor
pop
mov
pop
pop
repnz
and
es
cmc
aas
flds
sbb
add
add
int
dec
vmptrld
add
daa
rorb
or
cmp
sub
mov
or
xchg
and
pop
cmovg
inc
subl
ja
pop
and
fwait
imul
outsb
addr16
in
add
out
es
jae
lret
inc
inc
jmp
shrb
insb
scas
sbbl
xor
fidivrs
loopne
xchg
jg
aas
lea
pusha
fs
pcmpeqw
clc
mov
ja
popa
ret
cmp
fldt
mov
mov
jmp
insb
add
inc
xchg
lahf
je
push
out
shll
push
xchg
lret
or
adc
ret
ja
or
fcomi
inc
jb
add
inc
stos
test
or
ret
sbb
jo
push
push
pop
clc
and
movsb
xchg
jb
mov
jae,pt
insl
pxor
push
pop
mov
mov
xchg
jmp
js
sub
mov
out
fbstp
push
push
mov
loope
adc
jg
sbb
pop
or
adc
das
cmpsl
insb
push
in
dec
cmp
ret
or
stos
sbbb
or
fwait
add
sti
sbb
jns
mov
jg,pn
lcall
cmpsl
loope
mov
add
jmp
inc
out
pusha
mov
jne
ja
or
add
mov
sub
cmp
mull
add
jne
adc
inc
popa
cmp
dec
push
push
jo
imul
jge
sub
push
es
sti
cmp
divl
cmp
out
mov
clc
cmc
jmp
insl
ret
dec
in
adc
dec
mov
aas
xchg
gs
cmp
xchg
add
pop
jecxz
mov
insb
mov
dec
popa
xor
imul
mov
pop
out
inc
addr16
out
xlat
in
lahf
out
xlat
addr16
je
data16
aas
sbb
mov
arpl
daa
pop
arpl
add
loope
pop
gs
jne
in
mov
push
lret
sbb
andl
xor
jge
fistps
pop
inc
sbb
mov
add
sub
imul
add
pusha
aad
xor
ja
push
or
sub
inc
sub
pop
ret
daa
ss
xchg
add
ja
sub
aas
mov
loope
into
ds
icebp
jecxz
push
jecxz
addr16
push
arpl
shlw
in
arpl
call
and
push
push
dec
popa
jae
dec
js
jnp
out
or
add
cld
xor
mov
bound
ja
out
cmp
arpl
inc
neg
push
adc
aaa
pop
xchg
fimuls
add
pusha
aad
push
pop
mov
mov
push
sub
or
inc
xchg
dec
vmread
divl
sarb
add
pop
clc
xor
dec
imul
je
jmp
inc
call
lahf
push
xlat
les
out
js
inc
pop
or
pop
xor
inc
dec
arpl
push
add
lods
icebp
cmp
dec
mov
shll
sub
add
sub
outsb
sti
xor
lods
add
out
pop
push
cmp
inc
mull
jae
call
pop
mov
addr16
lret
and
insl
sbb
jg
fcomi
dec
fdivrl
outsl
sbb
add
push
push
inc
and
jmp
mov
adc
addr16
aas
ja
inc
pop
pop
cs
xlat
pop
push
ja
es
fwait
lods
loope
orl
mov
imul
jo
idivl
dec
insb
xchg
mov
inc
sbb
sbb
mov
mov
cmp
jnp
ss
mov
adc
aas
dec
sbb
cmp
test
cli
iret
pop
pop
por
xlat
mov
sbbl
adc
addr16
outsl
mov
rorl
xor
and
cmp
push
xadd
les
testl
add
mov
insb
sarb
pop
fcomip
les
punpckhwd
jno
push
pop
sbb
js
ja
cmp
and
addr16
bound
xor
stos
das
repz
push
mov
mov
jl
cmp
bnd
loope
pop
jnp
gs
jl
mov
push
sub
mov
pop
jnp
addr16
jns
insl
mov
popf
and
add
scas
jbe
pop
ja
outsb
mov
dec
outsb
cs
pop
ja
movsb
arpl
shlb
les
jno
jno
xchg
mov
insb
sub
lret
jl
into
add
cmp
bound
jns
jl
inc
jnp
mov
adc
lods
sbb
mov
push
sub
iret
imul
push
xchg
jl
insb
pop
arpl
ret
xor
loope
ret
out
adc
jle
es
insb
add
push
imul
add
mov
outsl
add
push
dec
xchg
addl
imul
clc
ret
pop
xchg
fisubs
lea
pop
push
jecxz
fistpll
jae
jae
xor
or
lahf
scas
dec
adc
inc
stos
cmp
pop
pop
fistps
out
lret
push
mov
aaa
sbb
pop
pop
jmp
xlat
sub
xorl
push
fsubs
aaa
push
xchg
insb
mov
aam
inc
aas
popa
mov
xchg
fisubrl
lods
push
es
mov
das
addr16
sbb
fwait
push
pandn
dec
pop
loop
dec
daa
push
les
or
jo
flds
cmp
fimull
je
cmp
dec
or
es
rolb
fbstp
cwtl
sbb
mov
cmp
scas
inc
popa
push
int
push
subl
ljmp
out
cmp
or
xchg
push
inc
add
or
insb
inc
xor
pop
push
outsl
ds
jnp
xchg
int3
inc
and
aam
dec
jnp
out
sarl
push
xchg
in
pushf
in
int
dec
cmp
test
pop
add
push
or
popf
loope
cmp
push
repnz
dec
stos
push
push
dec
pop
iret
jnp
mov
xor
sub
insl
inc
push
push
jae
mov
jns
addb
cltd
out
sahf
out
aad
cmpsb
pop
cmp
shrl
out
jnp
or
pop
aaa
dec
and
xor
imul
add
pop
jae
ss
or
and
shufps
inc
aaa
test
jbe
ret
mov
cmpsb
push
and
arpl
or
pop
test
sti
stos
pop
pop
push
jae
imul
and
fmull
mov
jae
insl
pusha
push
popa
jne
or
hlt
sbb
push
dec
bound
xor
pop
sub
and
jle
outsb
arpl
push
xchg
iret
out
cmpsl
arpl
add
adc
repz
pop
xchg
in
incb
movhps
cmp
jns
je
inc
ds
mov
push
ret
dec
repnz
or
cltd
clc
xor
jno
je
cmp
or
inc
out
push
jo
jb
mov
add
jb
jb
and
subl
inc
sbb
and
and
sti
cmp
and
arpl
xor
cmp
fs
adc
jo
loop
push
ds
enter
or
ss
cmp
imul
sbb
test
imul
inc
mov
push
movsl
fmuls
push
mov
xor
inc
popf
pop
jne
xor
cmpsl
xor
sbb
outsb
inc
or
je
loope
ja
push
ltr
js
xchg
add
rolb
shlb
dec
stos
pop
adc
push
pop
addr16
pop
inc
xlat
mov
test
push
and
inc
cmp
cmpsl
add
dec
add
add
add
pop
push
adc
pop
sarl
cmpsb
pop
repnz
pop
imul
adc
pop
mov
push
add
enter
not
iret
add
push
dec
push
push
xchg
and
ds
or
add
jg
xchg
aad
push
sbbl
fstpl
hlt
mov
add
inc
ja
icebp
and
fs
bound
cmpsb
call
movsl
and
inc
fiadds
jecxz
push
fiaddl
das
xchg
add
imul
aaa
mov
imul
popl
arpl
movl
adc
test
adc
shrl
sti
sbb
inc
sub
pop
adc
mov
adcb
lcall
pop
dec
jg
push
loope
iret
dec
stos
sti
stos
xchg
adc
jmp
dec
shrb
pop
jecxz
pop
inc
repz
pop
jl
inc
fs
mov
mov
bound
inc
outsl
adc
mov
lods
pop
mov
pop
inc
sub
or
pop
imul
mov
stos
orb
mov
jb
cmp
popa
adc
sub
aaa
and
mov
iret
imul
pop
shrb
jae
push
jp
jecxz
rcr
arpl
push
xor
aaa
pop
loop
push
inc
bound
xor
nop
push
sbb
inc
outsl
adc
rorb
jb
fs
push
dec
ja
add
js
jbe
xlat
dec
add
dec
inc
sahf
sahf
aaa
sbb
iret
mov
adc
pop
sbb
and
ret
out
andl
ljmp
xor
xchg
pop
add
js
add
sub
push
inc
int
add
das
adc
jns
mov
insb
out
and
sub
xor
inc
mov
sti
out
mov
mov
mov
xor
add
shrb
ret
sub
mov
insb
shrb
xchg
pop
adc
aaa
fwait
dec
and
add
xchg
int
mov
rclb
lret
str
ss
cwtl
or
and
das
incl
rolb
adc
xchg
fmuls
ss
mov
sub
fdivrl
mov
inc
clc
lock
out
pop
js
in
cmpsl
inc
fidivl
in
push
call
str
push
test
dec
fidivs
sub
mov
movsb
and
sti
jl
pop
or
mov
or
addr16
cmc
push
inc
outsl
inc
push
and
mov
imul
data16
xchg
push
faddl
xchg
dec
inc
pop
daa
nop
inc
cmp
or
sub
dec
inc
mov
scas
mov
jg
aaa
sbb
sub
fwait
jge
or
mov
push
and
movsb
scas
dec
popf
push
sbb
ret
xchg
arpl
movsl
aaa
adc
popl
jno
push
xchg
push
aas
shrb
jmp
inc
je
scas
xchg
add
pop
icebp
movsb
cli
jb
or
push
xchg
jo
out
jnp
ss
xlat
das
add
loope
and
cmpsl
push
or
orb
jp
push
lahf
sub
outsb
jmp
mov
cmp
gs
imul
outsb
jae
sbb
scas
inc
add
daa
push
pop
inc
repz
inc
pusha
push
xchg
inc
sets
stos
imul
inc
push
imul
subl
mov
jae
mov
aaa
sbb
mov
mov
ret
lcall
pop
add
jo
sbb
imul
das
ret
das
pop
mov
mov
loop
cmp
xchg
cmp
push
cmp
jmp
sub
insb
adc
rol
dec
xchg
fbstp
addb
popa
xchg
imul
lahf
arpl
dec
fildl
scas
jp
roll
xchg
xchg
sbb
lods
xlat
mov
mov
pop
mov
inc
outsb
cmp
lds
ret
ficomps
xchg
push
out
cmp
jecxz
mov
shrl
mov
pop
shll
pop
subb
adc
inc
push
pop
mov
add
add
push
jb
xlat
inc
fcompl
push
inc
inc
dec
cwtl
cmp
dec
xor
add
fistps
mov
je
sub
cmp
push
mov
push
sub
es
add
inc
rcl
inc
outsl
daa
sub
xor
push
jecxz
lea
mov
xchg
pop
xlat
mov
jno
sbb
imul
jmp
and
add
out
dec
mov
fcmovne
mov
fbld
mov
sbb
out
inc
inc
enter
cs
xchg
or
test
pop
or
mov
push
arpl
test
imul
dec
js
and
out
loopne
outsb
or
mov
in
into
sbb
sub
inc
lcall
push
mov
les
dec
daa
rorb
add
das
add
or
inc
pop
sti
out
push
xor
test
fs
mov
push
or
outsl
not
or
lahf
pop
ret
js
aaa
sahf
sbb
das
xchg
add
shrb
je
cmp
jl
mov
decl
rorl
shrb
push
jmp
sbb
xchg
and
dec
mov
push
orl
xor
ret
push
ret
cmp
addr16
popa
aad
jmp
mov
shlb
and
loope
xchg
adc
arpl
les
xchg
pop
xor
addb
addr16
mov
push
cltd
pop
push
dec
cmp
subb
insb
xor
lret
sub
popa
adc
sub
cmp
mov
testb
adc
jb
adc
push
push
mov
sbbl
pop
jo
sbb
aas
push
inc
push
sub
fisubs
xchg
jle
dec
mov
push
pop
sbb
sbb
dec
push
mov
stos
push
scas
mov
add
imull
mov
mov
add
dec
adc
iret
jp
scas
mov
add
rcll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
filds
test
daa
ja
mov
pop
or
pop
out
lds
fwait
out
push
stc
pop
cmp
mov
pop
cld
out
ds
lods
das
inc
std
bound
lods
push
add
fiaddl
pop
aad
int
insb
push
pop
xor
or
mov
cmp
or
xchg
jmp
sbb
out
fwait
mov
and
and
dec
dec
js
es
mov
pop
bound
adc
out
xor
dec
inc
pop
mov
or
xchg
loop
loop
arpl
mov
cmp
push
inc
inc
lods
das
call
add
add
jmp
fists
sub
adcl
sbb
pop
xor
xchg
add
dec
add
lcall
pop
pushf
ret
jge
int3
push
repz
sbb
ret
adc
or
ret
push
push
stos
sbb
pop
or
test
dec
lds
imul
add
das
sbb
adc
enter
iret
aas
inc
lods
push
add
lahf
das
scas
push
lret
xor
and
push
out
iret
sbb
test
ret
lods
mov
sti
pop
fisttpl
push
shrl
pop
push
rcr
xlat
and
xchg
push
addl
mov
daa
movb
jg
addb
jecxz
addr16
vmovntps
ficomps
and
std
adc
cmpsb
out
jnp
jge
push
sbbb
jl
xor
and
mov
rcr
cs
roll
xor
fists
pop
mov
lahf
add
push
insl
pop
push
or
sbb
jae
aam
cmp
adc
lgs
arpl
bound
ja
js
mov
pop
mov
pop
mov
fdiv
mov
push
mov
int
xor
inc
mov
scas
in
push
leave
push
jb
dec
scas
mov
lods
pop
leave
test
mov
pop
and
in
cmp
xchg
sbb
enter
jb
and
aam
scas
xchg
stos
xorb
mov
test
test
xchg
cmp
hlt
push
stos
in
mov
push
cmpsb
clc
inc
cmpsb
movsb
stos
ljmp
xchg
stos
movsl
movsl
movsl
add
xchg
pushf
push
movsb
mov
xchg
stos
stos
push
fbld
mov
push
aad
cmp
push
leave
mov
jl
ljmp
stos
in
mov
pop
and
stos
in
imul
sahf
cwtl
fistps
xchg
popf
popf
test
sub
fnstcw
xchg
movl
mov
pop
and
pusha
dec
jg
das
adc
xor
es
test
pop
pop
pop
shll
rorb
inc
inc
test
inc
dec
ret
fucomi
inc
mov
sub
dec
fsubrs
mov
inc
xchg
mov
push
and
xlat
inc
cmp
lods
xor
push
dec
lods
lods
add
pop
lcall
mov
dec
mov
arpl
imul
and
insl
aam
dec
inc
repz
dec
das
dec
inc
insb
mov
lods
push
inc
int
cmp
insl
sbb
inc
shll
movsl
and
inc
inc
or
aas
imul
mov
and
mov
push
add
ret
or
addr16
inc
add
dec
and
sti
xchg
leave
shrl
scas
addr16
push
xor
xchg
fildll
inc
scas
mov
scas
cmpsl
movsl
arpl
adc
push
inc
sub
aaa
test
inc
cmp
enter
adc
jp
jecxz
pop
jmp
push
adc
add
lahf
daa
or
das
mov
push
out
aaa
fildll
iret
aaa
outsl
mov
js
scas
push
or
inc
movl
and
aaa
outsl
jecxz
fmuls
bound
ret
lahf
mov
test
sti
push
aas
pop
cs
mov
lods
adc
aas
pop
jmp
lods
mov
jbe
mov
scas
mov
push
ja
mov
mov
movsb
or
inc
pop
cmc
out
pop
push
sbb
adc
xchg
nop
cli
cmp
mov
outsl
outsl
sbbl
lea
jg
or
xchg
lock
pop
add
pop
add
repz
fisttpl
add
sbb
in
pop
cmp
pop
sbb
mul
add
sub
pop
or
push
mov
add
add
pop
sbb
into
push
xchg
bound
add
dec
inc
popl
or
or
xchg
jmp
mov
xor
pop
jne
addr16
out
test
or
adc
je
or
sbb
je
push
cs
pop
testb
sbb
xor
cmp
add
imul
iret
mov
pushf
lea
xor
mov
les
in
ss
cwtl
mov
bound
jae
js
shrl
aaa
outsl
dec
js
test
jecxz
psadbw
xchg
sbb
or
test
stos
add
ret
sbbl
pop
iret
and
mov
shrb
inc
nop
sub
add
repz
or
dec
sar
add
push
and
adc
cmp
repz
push
push
push
andl
push
jp
outsb
movsb
dec
push
pusha
adc
insb
sahf
jl
push
idivl
sbbl
dec
rorb
sti
cs
fsubs
fwait
addb
bound
xorb
mov
push
add
stos
xchg
fimull
decl
scas
pop
inc
add
pop
inc
pop
rcrb
pop
and
sbb
pusha
push
scas
pop
sub
mov
or
push
push
das
cmp
xor
xor
pop
ljmp
jnp
dec
mov
inc
xor
or
xlat
cmp
js
dec
sbb
and
mov
arpl
sub
fists
push
push
add
mov
mov
out
inc
fiadds
pop
adc
dec
pop
jg
addl
fwait
xor
inc
xchg
push
jae
and
fistpll
xor
aaa
inc
aam
mov
or
push
cmpsl
xor
fwait
and
pop
xchg
loopne
mov
mov
and
mov
test
adc
ljmp
outsb
sahf
cmp
mov
push
in
cs
cmp
xlat
dec
sbb
ret
out
es
loopne
arpl
push
adc
fstl
insl
xchg
loop
fidivrs
daa
xchg
inc
xchg
cmp
inc
cmp
jnp
pop
ret
fs
dec
sub
roll
pop
jecxz
pop
mov
dec
shlb
or
inc
loopne
stos
in
inc
jle
js
xor
in
and
ficomps
jg
into
dec
or
out
sbb
cli
inc
push
bnd
ss
push
push
push
fidivl
bound
xor
repz
ret
xor
out
loopne
inc
cs
lret
jb
mov
ret
cmp
push
cmpsb
xchg
ja
jge
js
retw
pop
fwait
sub
pop
pop
inc
data16
xor
mov
lcall
out
sub
inc
inc
mov
xchg
add
dec
daa
in
fisubs
push
mov
out
pop
js
inc
and
out
sbb
inc
pop
pop
mov
push
es
clc
fidivrs
pop
push
push
xor
dec
mov
fs
inc
pop
dec
es
das
pop
out
mov
add
and
or
idivl
push
sysexit
mov
cmpsl
xor
outsl
push
scas
jge
xchg
push
push
insl
sub
neg
jnp
push
insl
mov
inc
ja,pn
xor
jnp
dec
mov
push
jp
fucomi
loope
ds
fiaddl
jg
fimuls
xor
das
sbb
outsl
dec
xor
in
fisttpll
xor
mov
inc
outsl
imul
add
push
dec
cmovp
adc
jecxz
add
loop
pop
xchg
dec
dec
adc
jne
inc
mov
pop
adc
push
outsb
lahf
fwait
insb
movsl
jo
jg
iret
jnp
dec
xchg
sbb
invd
or
xor
mov
pop
add
inc
inc
fcomi
pop
hlt
pop
int
xor
bound
jnp
ja
scas
add
bound
pusha
imull
mov
inc
adc
pop
add
popa
xchg
cs
pop
mov
sti
cwtl
test
mov
and
pop
lret
pusha
lahf
xchg
jno
fs
pop
push
cmpsl
xlat
addl
push
pop
add
addr16
jmp
arpl
pop
shrl
stos
scas
lcall
fs
mov
lret
and
lahf
push
mov
push
pop
dec
pop
lahf
add
daa
push
sub
sbb
inc
mov
jo
add
sbb
inc
dec
dec
sahf
xor
pop
sbb
mov
mov
push
sub
push
shll
imul
sub
out
pop
xchg
cmpl
call
dec
inc
into
insb
outsl
popa
fs
outsl
inc
cmp
jl
lods
push
add
pop
aas
add
out
or
hlt
adc
push
add
divb
cmpsl
sbb
add
pop
iret
adc
pop
mov
test
add
popa
cs
xchg
outsb
out
dec
movsl
mov
shlb
jb
mov
sub
gs
sbb
pop
scas
arpl
push
jo
xchg
add
jg
arpl
mov
ja
dec
mov
push
ljmp
repz
fsincos
add
adc
xchg
pop
ds
sahf
add
mov
es
mull
push
call
cmp
jne
jo
arpl
xor
std
add
ja
xor
xor
push
sbb
xor
filds
adc
dec
into
pop
shlb
or
pop
repz
xor
xlat
jae
inc
fmuls
jae
xor
mov
mov
insb
fwait
add
jae
mov
add
mov
push
sub
or
pop
dec
mov
popa
pop
outsl
ret
lods
ret
iret
mov
lahf
pop
scas
loopw
sub
sub
int
sub
outsl
add
add
out
jecxz
jp
sbb
mov
addr16
popa
pop
xor
mov
and
mov
sub
test
arpl
and
addb
ret
and
repz
les
cwtl
leave
fs
or
int
pop
and
mov
push
jne
inc
dec
iret
inc
mov
stos
lea
cmpsl
test
daa
jns
add
das
mov
test
push
xchg
outsb
dec
arpl
call
sub
shlb
lea
outsl
ljmp
das
repz
sub
sbb
xlat
aaa
sub
call
fs
adc
pop
ljmp
shrb
jb
push
ds
push
cmp
jle
js
lock
mov
cmp
inc
jmp
push
fdivrl
mov
inc
icebp
or
flds
push
mull
imul
lahf
sub
xor
imul
insl
mov
sub
out
push
out
out
sbbb
push
mov
inc
insl
bound
das
mov
dec
mov
add
add
inc
es
testl
mov
out
and
out
push
and
mov
add
adc
filds
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
xor
pusha
or
mov
sub
sub
nop
mov
xchg
mov
mov
ds
pop
sbb
aas
fstpt
and
jle
jo
fsubs
jmp
lds
sbb
mov
pop
dec
xchg
or
inc
dec
jecxz
dec
push
pop
add
pop
mov
jg
pop
push
xchg
xor
mov
aaa
dec
mov
jo
imul
fs
pop
mov
mov
add
dec
popa
mov
and
and
mov
mov
push
insb
dec
pop
and
in
rcll
dec
cmp
sub
jb
and
pushf
in
dec
push
xor
xor
cmp
xchg
int3
inc
mov
xchg
xchg
pushf
dec
mov
pop
daa
pusha
repnz
pop
ret
add
bound
adc
out
inc
pop
insl
and
dec
xchg
aaa
xor
cmp
das
ljmp
mov
fwait
add
push
pop
push
lcall
idivl
ficompl
cmp
sub
adc
inc
push
mov
inc
xlat
or
addr16
mov
icebp
mov
arpl
imul
push
or
and
aaa
inc
dec
hlt
ret
xchg
imul
bound
je
bound
imul
pop
int3
repz
dec
mov
xchg
nop
cs
bound
mov
add
pop
or
fisubs
jnp
call
push
scas
and
insb
mov
aas
push
das
xlat
inc
pop
mov
inc
sub
pop
sub
notl
adc
pop
pusha
insl
xor
dec
push
push
scas
fidivl
je
aaa
adc
bswap
imul
aaa
xor
outsb
das
addr16
roll
arpl
fisubs
jge
mov
push
dec
pop
rcll
xlat
aas
fnsave
xor
inc
call
test
sub
mov
movsl
inc
add
sub
in
and
out
add
jb
testb
pop
pop
insb
lahf
outsb
repz
fistl
xchg
imul
sub
xor
jno
add
jbe
or
sbb
outsl
dec
pop
dec
mov
rorb
outsl
push
cwtl
xor
bound
dec
inc
arpl
leave
jl
cs
cmp
jbe
xchg
xorb
xchg
push
pusha
adc
data16
hlt
addl
inc
add
mov
xchg
inc
loopne
int
idivl
test
dec
sahf
fstpt
jnp
xchg
and
push
cmp
fdivs
cld
pop
xchg
int3
in
lret
jnp
push
mov
fwait
pop
push
add
push
data16
jbe
rcr
lcall
jae
insl
jnp
repz
adc
cmc
push
jo
repnz
sahf
pop
jb
xchg
cli
into
xadd
aaa
cli
pop
pop
sbb
sar
aaa
es
nop
shll
xchg
jno
push
jns
and
jle
fldcw
cmpsb
push
mov
jbe
jnp
push
push
and
sbb
or
jne
jns
int
cmc
sub
sub
cmp
dec
insl
lods
pop
push
cmpl
sub
in
inc
pop
cmp
mov
daa
xchg
mov
push
sti
popa
jns
adc
popf
push
mov
cmp
push
sub
xchg
fcompp
mov
pop
arpl
insb
pop
inc
lea
mov
mov
cld
inc
pop
push
fimuls
pop
out
inc
js
xchg
nopl
mul
clc
mov
jns
dec
loopne
aaa
fstps
or
cmp
inc
or
idivl
es
sub
xor
ss
sahf
mov
push
cmp
out
mov
adc
out
sbbl
cmpsl
into
xchg
pop
push
inc
inc
add
aas
insb
fistpll
cmp
push
xchg
ret
add
cmp
repz
sbbl
push
dec
fists
mov
xor
ss
aaa
gs
fdivp
sahf
push
xchg
outsb
dec
outsb
cld
repz
mov
outsl
dec
jecxz
cmp
cwtl
out
ss
lret
rdtsc
push
into
out
sahf
jbe
leave
repz
mov
clc
cmp
and
jns
out
gs
mov
loop
cmp
and
sub
or
sbb
lock
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
jbe
aaa
jecxz
test
mov
pop
enter
pop
push
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
or
adc
cs
mov
test
loop
add
mov
lods
or
pop
xchg
push
adc
repnz
or
leave
cld
sbb
es
aam
push
add
iret
leave
shlb
or
jp
xor
test
inc
mov
jbe
popf
pushf
popf
cmp
insl
gs
cmp
out
shl
leave
pop
addr16
adc
pop
outsl
imul
cmpsb
mov
imul
or
mov
add
pop
push
dec
ljmp
les
popa
je
and
shlb
fistl
push
xchg
cmp
xchg
inc
mov
mov
outsb
imul
pop
push
ficoml
cs
lcall
lret
pop
int
movsb
es
push
push
and
sub
push
sub
lea
pop
push
or
notb
mov
mov
sub
cs
xlat
inc
pcmpeqd
pop
addr16
push
out
sub
push
fisubrs
cmp
adc
or
add
push
pop
outsl
xlat
icebp
jne
das
ja
fwait
push
jo
jmp
pop
inc
dec
popa
movsl
test
dec
aas
mov
adc
das
inc
jecxz
pop
lea
lret
ret
iret
dec
xchg
fidivrl
adc
fdivs
fs
out
jb
lea
into
xchg
divl
sub
push
and
sub
mov
sub
xchg
add
add
sysexit
ja
loopne
pop
jecxz
punpckhbw
inc
fildll
add
inc
jmp
mov
jbe
jo
xor
scas
dec
loope
xor
jmp
outsb
push
jnp
fwait
add
xchg
test
aaa
dec
and
add
ret
das
jb
and
pop
dec
inc
push
shrl
lret
jecxz
pop
xlat
dec
push
cs
imul
lock
inc
xchg
iret
adc
pusha
inc
incl
fsubs
js
je
repz
out
outsl
bound
cmpsl
inc
or
jne
xchg
inc
mov
push
mov
jo
pop
pop
addr16
mov
je
fisttps
cmp
dec
insl
mov
dec
mov
das
inc
lods
push
arpl
ret
icebp
adc
sti
xor
ja
jo
xlat
pop
xchg
mov
aas
jg
mov
sahf
fildl
nop
fstpl
sub
mov
mov
arpl
pop
jnp
push
sahf
daa
mov
cmpsl
inc
fildl
das
add
xchg
jne
xchg
pop
testl
iret
xchg
mov
push
shll
sbb
add
mov
jg
das
mov
insl
mov
xchg
xchg
inc
dec
push
call
jo
inc
jecxz
movl
fistpl
pop
scas
mov
and
out
insl
adc
inc
mov
sub
lahf
dec
add
mov
inc
js
mov
push
subl
push
adc
xchg
lahf
popa
push
sbb
cwtl
sub
jo
aas
push
add
push
adc
push
pop
or
mov
rcrl
in
adc
add
mov
add
adcl
das
pop
pop
outsl
cs
sub
mov
cli
jge
cmp
inc
lret
in
push
in
inc
push
inc
xchg
sbb
or
cli
cmp
dec
push
popl
mov
aam
pop
or
fidivrs
pop
inc
mov
dec
inc
into
xor
pop
rolb
sub
mov
mov
js
pop
addr16
ss
lahf
inc
sub
dec
inc
xor
sbb
add
cmpsl
push
sub
stos
call
jg
sub
add
inc
iret
pop
pop
inc
sbb
inc
jns
push
inc
cwtl
jg
iret
push
daa
cmp
es
xchg
sub
ja
adc
push
movsb
push
jecxz
lret
lret
out
cmpsl
fstpt
insl
jo
paddd
add
addr16
jo
jae
pop
ja
sbb
pop
jno
outsl
xor
push
and
daa
jg
mov
mov
pop
pop
sub
cmpsb
jns
je
jne
or
and
cmpl
pop
push
sbb
xor
das
lds
ja
out
mov
mov
lock
jae
arpl
mulb
cmp
dec
pop
inc
fstpt
push
inc
push
movsb
jo
fimuls
imul
push
or
add
gs
pop
or
jne
inc
sti
inc
jecxz
js
mov
aam
mov
testl
cmpsl
pop
stos
lods
inc
push
jl
add
bound
cmp
aam
cmovns
jae
add
pop
or
mov
into
dec
push
xchg
ljmp
add
push
dec
outsb
add
cmc
lea
pop
fbld
add
inc
adc
addr16
inc
xchg
test
push
aam
add
loop
push
jb
iret
sub
adc
mov
ret
mov
xor
adc
fadds
fistl
inc
outsl
outsb
or
aaa
inc
insb
js
jp
fmuls
pop
daa
xor
add
lret
pop
pop
sub
cmpsb
jb
imul
mov
push
push
das
and
pop
add
push
pop
and
mov
inc
dec
push
xchg
add
jle
mov
rcr
mov
or
jbe
add
cmp
xchg
pushf
add
sbb
sbb
add
repz
insb
mov
jmp
jnp
and
pop
mov
aaa
icebp
outsl
fidivl
and
ds
das
daa
add
sbb
adc
add
pop
daa
daa
daa
push
and
int3
push
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
es
js
insb
cwtl
lahf
sbb
fstpl
push
and
mov
add
les
sbb
arpl
jge
sbb
push
xlat
ds
push
data16
pusha
jo
pop
push
sbb
fsubp
mov
lock
push
inc
push
add
adc
jg
adc
push
subl
xchg
add
sub
sbb
rorl
repz
ja
mov
sbbb
add
lahf
outsl
mov
outsb
ret
jbe
mov
sar
fwait
push
mov
sbb
scas
cmpsb
push
push
sbb
xor
cmp
cmpsb
sub
sbb
pop
and
scas
pop
aaa
add
pop
outsl
add
mov
popa
mov
cmp
icebp
mov
or
cmpsl
push
or
incl
int3
inc
enter
xchg
aaa
push
sub
xlat
dec
or
push
pop
fmull
mov
or
shl
jnp
or
or
or
jb
mov
and
ja
out
push
imul
inc
outsl
arpl
popa
or
je
and
and
arpl
push
es
insb
lods
sbb
xchg
je
and
je
mov
popa
stos
push
xchg
test
dec
cs
mov
xor
and
mov
jo
adc
aaa
and
dec
inc
dec
xor
data16
push
push
aas
in
mov
js
outsl
fs
gs
jo
jns
jbe,pn
iret
inc
mov
cmpsl
add
pop
outsl
insl
jne
imul
sub
data16
add
or
addr16
mov
ret
das
cmp
and
mov
sbb
pop
gs
inc
insb
inc
les
adc
jbe
cmp
inc
popa
imul
arpl
aaa
xor
outsl
jo
ret
xor
gs
mov
ja
orb
inc
or
inc
xadd
cmp
negl
cmc
inc
cmovo
mov
mov
cmp
nop
jo
punpcklbw
mov
loopne
rclb
cs
scas
sti
inc
or
ret
movswl
cmp
pop
mov
mov
sbbb
scas
mov
push
lods
push
mov
add
inc
faddp
popl
in
inc
hlt
or
in
imul
push
xchg
sbb
add
in
pop
xchg
cmp
insl
bound
sahf
dec
lcall
and
daa
xchg
les
xchg
mov
xorb
xchg
outsw
inc
xchg
xchg
mov
jne
daa
xchg
outsl
call
repz
xchg
and
aam
addr16
lods
mov
inc
ss
and
add
xchg
cmp
add
sbbb
push
add
mov
fs
jbe
or
add
movsb
outsb
enter
lock
xchg
pop
or
loope
andl
cs
pop
fcomps
sub
fsubl
dec
xchg
and
mov
cltd
pusha
ret
ss
rolb
xchg
mov
inc
sahf
or
nop
or
xchg
lock
aam
popf
fdivrs
cwtl
xor
cmp
mov
add
js
xchg
movsb
and
jl
jae
pop
enter
pop
rolb
ret
mov
cmp
push
shll
xchg
add
mov
cltd
adc
sbb
inc
mov
inc
adc
outsl
xchg
dec
sbb
xor
pop
inc
xor
insb
ds
dec
daa
xchg
ja
iret
push
xchg
movsb
xchg
mov
enter
add
loopne
cltd
push
lcall
into
lcall
daa
imulb
aam
xor
add
test
rclb
outsb
jl
or
pop
subb
jbe
adc
nop
dec
aam
fwait
or
dec
lock
cld
fwait
add
cltd
pusha
arpl
in
scas
fwait
or
cwtl
inc
data16
fwait
daa
mov
mov
fwait
insb
leave
cmpb
add
pop
out
and
xchg
xchg
shl
inc
es
call
dec
enter
sbb
in
lods
ss
addr16
mov
out
lock
push
pushf
jo
jl
mov
shll
nop
out
lods
mov
andb
cltd
and
out
test
popf
add
inc
adc
cld
popf
sub
cltd
pusha
fbld
hlt
iret
test
mov
fwait
pusha
arpl
divl
int
push
cmp
push
fdivl
or
dec
add
or
sahf
or
sbb
pop
add
ja
inc
sahf
xlat
lahf
lcall
xchg
jl
lahf
pop
iret
test
xor
mov
and
jge
repnz
pusha
cld
lahf
mov
mov
out
mov
lahf
pop
insb
movsl
and
jns
in
lahf
mov
cs
or
out
in
pop
lahf
cld
cmpsb
mov
adc
outsl
bound
fwait
data16
out
mov
iret
sub
cmpsl
cmp
mov
add
mov
jns
clc
xchg
mov
pop
and
pusha
call
mov
cmpsl
mov
or
inc
mov
or
cmpsl
mov
mov
lods
push
cmpsl
mov
out
sahf
or
in
add
or
in
daa
testb
pushf
and
cmpsl
mov
cmp
lods
cwtl
push
cmpsl
jns
imul
test
pushf
mov
cmp
and
enter
in
pop
enter
add
or
fdivrs
push
mov
mov
xchg
xchg
mov
lahf
in
nop
out
test
enter
inc
sahf
clc
aam
hlt
daa
in
mov
mov
inc
movsb
and
xor
inc
lahf
pop
pop
cmpb
out
sahf
push
je
xchg
sub
add
inc
pop
movsb
les
adc
jp
fs
movsl
sbb
sbbb
push
cmpsl
jg
inc
sahf
pop
cmpsl
loopne
jl
cwtl
movsl
cmpsb
nop
addr16
cmpsl
insb
pop
enter
adc
rolb
addr16
cmpsl
or
pop
enter
adc
xchg
lcall
push
cmpsl
mov
xchg
jg
insb
push
daa
cmpsb
js
mov
rclb
ja
movsb
mov
enter
and
lods
push
add
daa
cmpsl
or
sbb
xor
xlat
pop
sbbb
jg
lahf
sub
cmpsl
jo
aas
or
pusha
mov
inc
sahf
pop
mov
fdivrs
inc
cs
movsl
push
cmpsl
mov
adc
or
or
ja
or
lahf
rcrb
nop
or
inc
rcrb
loopne
lock
test
push
int3
or
inc
and
add
test
and
or
push
cmp
lahf
pop
sarl
inc
lahf
mov
mov
ficoml
jg
js
aad
andb
out
mov
ja
mov
lock
pop
adc
inc
or
lock
outsb
add
inc
lahf
push
ficoml
ja
js
andb
inc
movsb
mov
push
mov
pop
roll
call
clc
lahf
dec
add
or
ljmp
cmc
push
pop
call
andb
jg
jo
inc
or
jo
cmp
movsb
and
daa
int3
mov
add
push
inc
fsubrl
ljmp
fiadds
cmp
je
lahf
mov
nop
mov
xor
movsb
iret
mov
pop
jb
xor
adc
sahf
in
inc
nop
int
pop
aam
lods
and
je
popf
lods
xor
dec
das
push
mov
and
xchg
or
mov
iret
test
inc
mov
pusha
mov
and
push
jb
ja
inc
and
sub
in
inc
and
jns
ja
mov
test
jl
nop
outsl
push
add
cs
pop
in
inc
rcrb
or
add
push
xor
pop
ja
mov
mov
mov
jns
in
mov
sahf
rcl
imul
nop
mov
and
fidivs
in
lods
sti
popf
dec
movsb
ja
lahf
pusha
fcomps
jo
lahf
push
mov
mov
in
inc
mov
je
divl
add
in
movsl
outsl
aas
data16
test
pushl
jbe
jo
pop
mov
cmp
xor
jo
mov
push
inc
cs
jns
mulb
xchg
mov
push
and
sub
outsl
add
inc
imul
jbe
test
test
xorb
sarb
enter
add
mov
arpl
test
popl
fcmovnu
addr16
daa
mov
repz
mov
push
pushf
push
mov
pop
test
xchg
addr16
mov
mov
xlat
mov
adc
pushl
mov
push
add
js
push
rorl
cs
nop
push
shlb
mov
pop
mov
outsb
insb
push
dec
dec
dec
xchg
pop
sub
movsb
lods
xlat
nop
loopne
pop
xchg
ss
adc
into
rolb
xchg
pop
orb
addr16
pusha
or
addr16
pop
pop
inc
and
out
lahf
out
mov
scas
clc
sub
dec
inc
xchg
sub
mov
sub
sub
fistps
sbb
scas
push
pop
aaa
add
mov
push
or
lock
idivl
mov
les
sbb
cmp
out
pop
mov
mov
into
repz
inc
xchg
repz
out
sahf
mov
mov
aam
mov
cmp
out
mov
loopne
inc
sahf
adc
fsubs
and
or
adc
jl
xchg
inc
mov
jo
inc
add
in
in
sbb
dec
add
iret
mov
cwtl
add
push
and
mov
mov
mov
roll
sub
movsb
ja
test
fidivrl
jbe
jbe
xchg
in
ja
ja
mov
add
inc
push
cmp
xchg
pop
cmp
pusha
inc
inc
mov
cmpl
enter
test
aaa
jl
inc
incl
mov
or
jl
add
in
cmp
cmp
out
test
mov
leave
insb
add
pop
in
and
es
and
shlb
sbb
adc
mov
push
push
pushf
fs
scas
add
pop
inc
add
sub
enter
fbstp
stos
jo
inc
mov
stos
outsl
sub
xchg
out
add
int3
nop
iret
add
cmpsb
pop
add
mov
mov
inc
aaa
mov
testl
pop
push
fcompl
stc
push
lock
lahf
mov
push
jle
mov
emms
add
pusha
shll
out
add
lds
sub
add
fimuls
ja
mov
stc
fildll
fbld
jmp
outsl
and
mov
ret
inc
xlat
aaa
dec
push
fisttpll
jbe
pop
lods
and
scas
xchg
and
outsl
cmp
arpl
stc
sub
daa
add
fdivrs
dec
scas
push
xchg
jl
mov
dec
mov
addl
fsts
add
push
push
pop
and
add
clc
es
imul
fisubs
fs
mov
int3
push
fdiv
fcmovb
jnp
push
xchg
jg
cmp
and
dec
bound
jns
clc
add
xchg
mov
add
sbb
out
or
cmp
sarb
divl
cmp
cmp
or
sub
push
out
dec
xor
rcrl
and
and
mov
mulb
push
mov
insb
bound
cld
loopne
cmpl
jo
cwtl
scas
bound
xorb
daa
ror
fcoml
add
ss
or
dec
push
stos
adc
sbb
xlat
mov
push
ret
xchg
pushf
xchg
push
lds
adcb
pop
ret
add
mov
ret
notl
outsl
and
adc
mov
dec
add
cwtl
inc
push
scas
ret
pusha
fchs
shl
call
xor
jbe
je
adcl
mov
aaa
outsb
fsubl
fnstenv
outsl
push
cmpsb
mov
add
les
scas
and
enter
add
fs
movsb
mov
out
dec
mov
mov
bound
mov
jg
lock
cmpl
lods
fs
out
lds
sub
add
in
dec
sub
fnstsw
push
nop
push
pushf
data16
pusha
out
xchg
outsl
filds
push
stos
aaa
pop
int3
pop
call
pop
xabort
push
sub
in
lock
or
add
mov
push
inc
xchg
push
push
xchg
or
xlat
push
xchg
imul
mov
addr16
jo
pop
inc
lahf
iret
push
mov
and
daa
out
sub
or
adc
push
insb
xchg
push
push
push
push
enter
iret
repz
cmp
enter
cmp
push
mov
or
je
pop
roll
or
aaa
or
push
adc
cltd
movsl
dec
xor
pop
outsl
add
mov
iret
subl
jo
jmp
orb
popl
stos
mov
enter
mov
enter
pop
or
enter
popl
sub
pop
loopne
mov
sahf
andb
mov
dec
inc
rorb
mov
mov
and
adc
lret
xor
cmp
sbb
mov
das
addr16
xchg
mov
daa
ljmp
mov
fbstp
jae
xchg
addr16
mov
loopne
gs
dec
testl
and
lret
add
mov
outsb
mov
popf
mov
lret
inc
push
push
aaa
mov
ja
mov
adcb
mov
mov
mov
sarb
push
es
dec
xor
cmp
andb
test
outsl
inc
push
call
int3
xchg
mov
jl
insb
mov
outsl
shll
xor
push
push
in
pop
ds
shrl
mov
sahf
out
xor
mov
repz
popa
mov
stc
sub
mov
sarl
fimull
jo
dec
jne
out
cmp
notl
jno
jno
lahf
out
mov
cmp
repz
adc
sbb
shrl
lret
jne
ja
cmpsl
int
push
jbe
push
dec
lret
repz
adc
push
repz
inc
fidivrs
out
xchg
ficompl
jns
push
mov
ret
fdivrp
es
imul
notb
jnp
repz
out
or
xchg
out
lcall
mov
sarl
jmp
jle
mov
out
adc
xlat
ds
sarl
pop
cmpsb
lock
mov
jns
out
adcl
cmp
repz
jb
fiaddl
sarl
jle
fiadds
xchg
push
rorb
xchg
sarl
ficoml
mov
iret
sarl
out
sbb
out
sub
out
fidivrs
mov
out
cmp
pop
lea
out
jl
stos
in
mov
nop
dec
repz
dec
mov
or
stc
cmp
jbe
ljmp
cmp
adc
lcall
mov
xchg
loop
cmpsl
fnstcw
add
cmp
cmp
sarl
dec
jae
cmc
jl
cmpsl
stc
imul
sarl
lock
mov
sbb
sahf
out
sahf
cmp
mov
cmp
pop
mov
mov
jns
dec
fwait
sub
out
ds
mov
iret
repz
fcoms
movsl
ss
mov
xor
cmpsl
lcall
and
jns
shll
test
cmpsl
stc
sbb
stos
iret
xor
stc
cwtl
lods
shl
lods
push
xor
out
jb
jmp
scas
popa
jns
iret
repz
clc
xor
xchg
in
mov
scas
aam
ds
adc
mov
sahf
ja
out
test
jl
cmp
repz
daa
mov
movsl
fdivrs
cmpsb
add
out
stc
xor
dec
repz
dec
mov
mov
stc
cmp
push
mov
sahf
cmpsl
stc
cmp
and
iret
sarl
dec
mov
int
imul
sahf
cmpsl
stc
inc
ret
addr16
fld1
cmpsl
leave
mov
scas
add
jl
sti
xor
bswap
outsb
aaa
rolb
inc
aam
fmuls
stc
mov
mov
sbb
fstp
push
mov
data16
jecxz
out
add
insl
push
pusha
outsl
int3
nopl
sub
xchg
or
push
outsb
aas
aam
ds
addr16
xchg
lret
sub
getsec
mov
fmulp
mov
rolb
xchg
ss
aam
pop
pop
xor
mov
inc
xor
mov
rclb
push
dec
aas
imul
sarb
andl
jg
push
fidivrs
add
cmp
push
aas
xchg
push
lahf
jg
loopne
repnz
and
fdivs
pop
jecxz
popf
xchg
push
leave
mov
pop
mov
dec
adc
dec
aad
lahf
fistl
movhps
jecxz
jecxz
mov
jg
in
dec
in
jb
das
repnz
hlt
pop
dec
jno
sub
lret
push
das
add
stos
dec
sub
aas
add
push
mov
and
and
jmp
mov
inc
cmpsl
push
lods
pop
test
sub
add
sbb
jmp
aas
inc
insb
outsb
mov
or
add
jl
mov
adc
add
int3
push
in
aaa
movsb
mov
fisttpll
dec
mov
daa
xorb
dec
dec
push
push
lahf
dec
das
enter
xlat
cmp
dec
inc
inc
add
xlat
pop
filds
push
mov
xlat
push
loopne
add
dec
dec
mov
js
push
pop
aas
out
jns
add
dec
add
fmuls
sbb
les
fidivs
lock
mov
add
xchg
mov
addr16
inc
mov
fldt
popa
or
addr16
test
into
inc
or
add
out
push
lods
fcomps
test
lahf
add
mov
leave
add
movsb
sbb
ja
hlt
ffreep
ror
fsubrl
fnstenv
push
movsb
cmp
pop
sbb
add
xchg
mov
add
pop
filds
cmp
mov
mov
lahf
leave
leave
inc
rcr
aaa
fsub
insl
movsb
rcr
call
sub
pop
in
xchg
adc
jo
ss
pop
leave
add
in
jb
pop
add
fistl
mov
mov
in
mov
mov
out
enter
pop
adc
sbb
les
cmp
imul
or
xchg
adc
pop
pop
pop
or
in
jb
jge
push
mull
pop
movsl
mov
jbe
cwtl
scas
push
sbb
mov
push
mov
xchg
daa
les
pushf
sbb
mov
outsb
cmpsl
ljmp
daa
and
sub
sbb
cmc
pop
aam
in
inc
pusha
sub
aas
adc
add
xorl
fnsave
orb
pop
fimuls
and
mov
and
insb
push
mov
add
xor
pop
pop
cmpsb
in
push
fs
or
pop
jmp
in
pop
fmulp
fidivrs
lcall
mov
shrl
adc
pop
push
dec
xchg
pushf
inc
call
mov
mov
dec
daa
test
mov
ja
jb
dec
fcomip
mov
fsub
and
js
out
add
mov
loopne
push
xor
insb
xlat
bound
movsl
jge
xchg
add
je
pop
leave
dec
add
xchg
lahf
xchg
mov
daa
cmpsl
scas
add
xchg
xchg
xchg
lret
mov
fsubrl
loop
ljmp
arpl
arpl
loope
movsb
mov
sysexit
cmpsl
push
cmp
inc
cmovge
pop
add
test
arpl
xchg
notb
mov
cmp
test
push
lret
and
aad
loopne
jmp
shlb
lret
testb
add
daa
push
faddp
inc
xor
fs
push
inc
xchg
and
add
cmpsl
xchg
adc
dec
add
xlat
add
adc
push
loop
loop
jecxz
scas
leave
sub
adc
mov
push
add
inc
fs
gs
push
or
sbb
and
enter
add
add
mov
push
pop
pop
or
or
push
or
xchg
loop
jb
lcall
or
gs
in
adc
popl
fisttpl
in
in
daa
sti
mov
add
and
add
aaa
ja
dec
inc
push
inc
cmp
xchg
in
inc
adc
push
je
cmp
enter
add
movsb
lods
nop
jg
pushf
lds
push
or
or
pop
mov
adc
in
inc
adc
out
push
addr16
cs
dec
sub
addr16
and
test
sub
xorl
sarb
pop
in
addr16
in
mov
adc
in
out
daa
dec
aaa
add
mov
nop
out
daa
mov
iret
push
and
push
cmp
add
aam
and
push
cmpsl
pop
call
jb
dec
xor
pop
adc
dec
call
mov
inc
into
sahf
mov
lret
sbb
add
les
ljmp
imul
sub
ss
adc
in
and
mov
fs
add
je
imul
cmp
jge
test
cwtl
mov
lods
inc
adc
mov
mov
and
or
xor
shll
mov
cmp
test
push
or
sarb
shll
loopne
push
cmovle
push
addr16
ja
inc
jb
pop
pop
push
dec
mov
pop
data16
movsb
add
mov
mov
test
add
and
mov
fldl
psrad
pushl
fsubl
add
push
insb
cmpsl
jmp
clc
daa
ljmp
cltd
xchg
pop
adc
add
imul
or
in
pop
fs
inc
es
imul
add
add
add
sbb
dec
inc
mov
out
or
out
ror
lock
andb
pop
in
test
sbb
imul
jo
mov
aas
push
inc
outsl
insb
stos
jge
push
pop
push
xlat
push
mov
push
inc
cmpsl
fucomip
sbb
jbe
leave
in
mov
mov
das
filds
fstp
cmpsl
push
aas
leave
dec
neg
insl
out
adc
add
push
add
or
out
or
in
mov
int3
lret
mov
and
nop
outsb
sbb
push
cmp
in
and
leave
lock
leave
and
in
inc
lds
scas
xchg
mov
jb
push
sub
xchg
xor
pop
outsl
pusha
dec
pop
mov
mov
popw
leave
icebp
xor
pshufw
setg
pusha
mov
dec
and
cmp
xchg
shlb
push
and
add
add
icebp
insb
out
xor
jno
inc
dec
cmp
out
jno
push
bound
mov
add
rolb
jmp
aam
les
in
mov
push
scas
jnp
scas
repz
or
repz
cmp
fcoml
or
je
jb
ds
add
push
jg
pop
add
mov
add
xor
xchg
daa
and
or
setb
repz
test
mov
add
lock
pushf
nop
testb
hlt
inc
add
xchg
hlt
push
hlt
sbb
setae
mov
in
dec
xchg
xchg
iret
ficompl
lock
in
xchg
add
pop
adc
and
mov
dec
mov
cmc
jae
xor
push
xchg
or
or
addr16
fisttpl
cmc
js
push
daa
int
je
ffreep
int
pand
movsb
jmp
cmc
das
mov
xor
push
testb
in
or
push
inc
push
mov
xor
lea
jb
push
rcrl
je
outsl
decb
jne
add
divb
adc
das
and
ucomiss
loopne
daa
or
or
outsl
jne
test
cwtd
cmpsb
mov
inc
jb
into
addr16
inc
rcll
dec
dec
and
sbb
pushf
mov
sub
push
pop
bound
pop
in
push
and
xchg
ss
mov
clc
push
mov
mov
repnz
es
mov
sarb
dec
push
ja
in
mov
stos
dec
fcmovb
xorb
mov
arpl
das
push
rolb
in
jbe
mov
ud0
leave
dec
in
or
movsb
js
in
mov
pop
inc
add
sub
ljmp
imul
scas
push
cmpsl
scas
add
mov
xor
ljmp
jg
or
push
add
sbb
and
aaa
inc
bsf
and
pop
jns
arpl
int3
sahf
outsb
or
jns
push
xchg
daa
and
adc
dec
xchg
jns
mov
sti
push
push
jp
movlps
sti
addb
jb
xchg
xor
xchg
cmpsb
dec
add
data16
and
xchg
add
mov
das
test
and
xchg
sbbb
clc
xchg
xchg
xchg
add
fs
das
inc
push
jnp
adc
xlat
pop
jnp
xor
out
jnp
iret
int3
and
jo
jae
clc
inc
into
sahf
pop
xchg
sahf
add
cmpsb
add
and
mov
fstpt
xchg
faddl
sbb
inc
std
inc
std
nop
mov
mov
mov
push
add
dec
std
das
mov
fsubs
clc
daa
add
lods
inc
incb
mov
adc
xor
push
ja
push
addps
in
jl
jl
decb
mov
xchg
cmp
add
stos
mov
mov
iret
or
iret
inc
cmp
mov
xor
pushf
sub
jg
cmp
fs
mov
push
pop
add
xor
insl
add
jne
jge
fimull
das
jge
call
jmp
cld
jl
shl
dec
push
add
out
dec
adc
cmp
enter
add
add
jmp
add
or
dec
push
xchg
add
stos
and
push
lds
pushf
pushf
pushf
int
inc
clc
hlt
daa
cmp
jg,pt
push
scas
jg
in
xchg
and
jg
jg
data16
jg
add
dec
inc
mov
add
daa
fstps
decl
jecxz
and
sbb
add
pop
sbb
xchg
mov
fadds
imul
mov
xchg
jae
jbe
add
iret
mov
mov
sub
lods
pop
jb
mov
xchg
mov
int
andl
xor
pop
mov
push
iret
leave
dec
in
mov
xchg
add
fcmovne
add
pop
cmp
enter
add
add
cmp
out
testb
addb
and
data16
pop
push
or
or
xchg
push
cs
jns
jb
inc
adc
push
push
adc
pop
push
data16
lcall
lcall
sti
and
repnz
addb
dec
fbstp
add
dec
je
jae
repnz
xor
aas
dec
pop
add
sbb
leave
leave
inc
xor
leave
flds
nop
std
je
rorl
push
sub
test
das
xor
cmpsb
ss
cmova
ja
mov
xchg
popf
pop
dec
dec
outsb
mov
pop
movsl
shrd
ret
dec
or
lds
in
fs
int
aad
in
add
sbb
cmovg
add
jno
xlat
mov
daa
lahf
add
aas
push
testl
xchg
pop
fwait
mov
daa
or
push
es
adc
adc
outsl
adc
mov
push
or
xchg
pop
or
xchg
jno
push
scas
pop
mov
fsts
pop
test
add
add
sub
inc
add
push
repnz
xchg
scas
or
daa
daa
out
outsb
daa
daa
pop
jns
pop
lcall
das
clc
das
data16
sarb
pop
pop
jo
dec
xor
daa
mov
adc
in
jecxz
out
stc
and
popf
jbe
add
in
jbe
or
lock
cmp
xchg
push
inc
add
arpl
pushf
mov
jg
lea
popf
pop
in
xchg
and
or
pusha
xlat
pop
or
jo
pop
pop
pop
push
xchg
xchg
xchg
xchg
mov
pop
pop
xchg
push
cmp
enter
or
sbb
or
xorl
ljmp
daa
xchg
xchg
das
jns
mov
lods
dec
push
je
push
test
mov
testb
xor
xchg
push
jb
mov
mov
das
fisubrl
push
add
jmp
enter
add
dec
sahf
imull
adc
cmp
mov
mov
cmp
mov
jl
cmp
out
in
decl
addl
mov
dec
dec
fimull
sub
cmp
inc
inc
aaa
xor
scas
popf
mov
arpl
mov
jb
push
movsb
add
xor
jb
xchg
mov
fucomip
cmpsb
lcall
jb
repz
push
and
mov
das
xchg
push
fisttps
aaa
jb
mov
push
or
add
or
ds
in
mov
mov
out
add
adc
add
data16
hlt
daa
and
add
xchg
emms
push
add
lods
pop
fists
pop
daa
jl
sub
mov
bswap
fistpll
pushf
mov
out
mov
ja
jns
sub
pop
mov
imul
push
push
pop
add
mov
pcmpeqw
or
insl
nop
mov
add
inc
test
mov
in
mov
mov
mov
fldl
cmp
xchg
inc
daa
cmp
mov
mov
mov
adc
cmp
cmp
xchg
dec
into
jne
cltd
das
mov
or
xchg
aam
movsl
cmpsb
jecxz
aaa
adc
lea
lea
adc
xor
inc
xor
ja
add
mov
iret
add
mov
pushf
loopne
cmp
cs
loopne
psubsb
mov
pop
mov
mov
ja
pushf
adc
fwait
sbb
jnp
dec
inc
sahf
addl
xchg
mov
and
jmp
xchg
lret
xlat
filds
adc
lahf
fcmovne
enter
and
sub
das
mov
add
das
in
cmpsl
in
in
ja
cwtl
add
add
cmp
mov
ror
in
lret
psrlq
jmp
dec
adc
insl
push
and
dec
fidivl
nop
push
push
push
aas
push
pop
daa
and
das
pop
or
jno
xchg
xchg
daa
mov
ja
ror
popf
push
mov
adc
sub
fcoms
inc
dec
sahf
int3
pmaxsw
add
fidivl
outsl
push
push
jmp
add
ja
fidivl
jns
nop
xchg
jp
bound
dec
push
jb
xchg
add
adc
add
jnp
add
in
add
add
std
xchg
add
mov
lahf
add
ffree
adc
sub
jmp
add
fnstcw
xor
xchg
add
fisubrl
sbb
aam
adc
mov
cmp
in
mov
sub
sahf
mov
xor
add
mov
outsb
dec
jns
or
dec
pop
add
out
jbe
fisttps
out
push
out
sbb
cmp
out
decl
xchg
pop
add
sbb
pop
pop
xlat
or
xchg
aaa
push
fs
dec
pushf
insl
sbb
jne
pop
mov
push
testl
xor
cmpsb
test
enter
leave
test
add
rcrb
rcrb
das
jno
rolb
jbe
sti
setne
cmp
sbb
leave
dec
movsl
or
xchg
imulb
push
iret
pop
pop
push
popa
pusha
in
enter
jns
sbbl
mov
xchg
or
xchg
pushf
in
mov
dec
dec
data16
xlat
filds
movntq
out
dec
in
lahf
xchg
testl
and
sub
xchg
xchg
add
dec
push
mov
pcmpgtw
mov
inc
mov
imul
fcmovne
inc
xor
jns
jecxz
xchg
ret
cwtl
das
xchg
sub
pop
es
xchg
fldt
ds
inc
iret
or
imul
add
inc
xchg
imul
xchg
js
leave
mov
fcmovnbe
pandn
xchg
femms
adc
and
sub
fwait
int3
dec
xchg
cwtl
addr16
mov
mov
dec
fidivrs
stos
pop
dec
outsl
cwtl
fwait
out
inc
in
mov
inc
sahf
mov
add
mov
leave
test
mov
add
or
xchg
fildl
sbb
dec
dec
inc
mov
add
in
jbe
sub
seto
mov
and
jge
addr16
xlat
add
jbe
mov
adc
clc
pop
add
pop
lock
jb
enter
dec
add
bound
push
mov
insl
add
add
xor
xchg
mov
test
add
mov
mov
add
rdmsr
jb
leave
or
add
add
and
imul
jecxz
jbe
dec
mov
pusha
dec
pop
mov
xchg
ja
dec
inc
mov
mov
and
pop
rcr
or
jmp
hlt
or
pushf
or
in
push
and
adc
jnp
dec
push
adc
insb
adc
ja
adcb
ficompl
and
dec
pop
sbbb
pop
data16
xorl
xchg
push
push
pop
nopl
add
inc
cmovns
cmp
popf
in
daa
mov
divl
popf
jl
dec
inc
mov
test
mov
xchg
fs
xchg
pop
pushf
or
in
mov
mov
push
push
repnz
aas
adc
dec
pmulhuw
jecxz
sbb
sahf
cmp
mov
sqrtps
mov
cmc
cmc
add
fcompl
adc
and
daa
inc
loopne
sbb
rsm
lcall
add
add
pop
lret
lret
pop
lret
sahf
rcrl
leave
sahf
jecxz
js
lahf
push
sub
mov
push
push
xor
cmp
inc
sahf
mov
add
add
mov
and
fisttpll
jl
add
pop
pop
mov
xchg
xchg
xchg
mov
psubusb
add
lcall
pop
and
adc
nop
push
arpl
jae
insl
dec
push
daa
push
pop
xchg
outsl
ja
outsl
pushf
pop
adc
and
pop
mov
xchg
lods
int
pushf
push
mov
and
arpl
jbe
mov
mov
sbb
and
in
and
cmp
or
out
enter
xlat
push
add
and
dec
lahf
add
sub
mov
movsb
add
invd
test
mov
and
inc
testl
xor
inc
int
mov
aas
inc
fs
dec
jb
inc
mov
nop
outsw
cmpsl
sub
mov
rsqrtps
inc
fimuls
pop
push
enter
push
mov
xor
stos
or
and
sbb
push
loope
in
adc
jb
enter
add
or
mov
and
inc
sbb
enter
sbb
gs
in
in
pop
push
adc
adc
adc
in
in
adc
push
or
pop
sub
enter
pop
mov
jg
and
add
mov
inc
push
enter
jl
sub
mov
sub
je
mov
insb
fbld
add
psubq
adc
sub
or
mov
sub
pop
in
mulb
add
add
mov
xchg
xchg
out
dec
fisubl
mov
mov
inc
out
fldl
in
add
cmp
add
add
inc
movsb
fwait
cmp
or
adc
movsl
scas
push
jb
dec
and
jb
pop
jb
mov
xchg
mov
leave
dec
in
lahf
mov
gs
pop
add
ja
cmp
inc
dec
leave
dec
ja
push
pop
pop
xchg
mov
daa
pop
jge
lea
pop
xchg
xchg
mov
xchg
add
jb
enter
lock
cmpsl
cmp
repz
mull
jg
or
adc
add
pop
and
sub
pop
xor
mov
and
cmp
inc
dec
or
push
fcmovne
enter
push
arpl
dec
push
mov
xor
mov
mov
addb
enter
xchg
xlat
add
loop
cmp
clc
xchg
lock
jne
sub
daa
lret
enter
fildll
mov
add
dec
push
add
pop
add
arpl
and
enter
testl
subb
xchg
pop
pushf
cs
mov
mov
daa
pop
mov
mov
add
loope
jmp
icebp
xchg
mov
test
test
mov
cmpsl
push
in
insl
pcmpeqw
jge
das
xor
test
pop
dec
fisubl
cmp
jl
in
push
lcall
fidivl
inc
stos
push
push
cmp
and
jmp
mov
das
xor
insl
shl
inc
out
out
add
adc
mov
stos
mov
idiv
mov
inc
repnz
aaa
add
xor
cwtl
jbe
daa
mov
or
jg
xlat
jecxz
push
dec
mov
paddb
xchg
mov
in
in
in
cmp
inc
add
dec
push
add
sbb
jb
add
add
mov
or
jo
into
jae
xchg
in
sbb
sbb
pusha
mov
push
xor
loope
and
cmp
inc
not
sbb
lods
lods
ja,pt
fcmovne
inc
xor
pop
in
push
jae
jg
scas
push
xchg
leave
enter
pushf
add
movsb
leave
leave
leave
leave
lods
mov
enter
in
or
loop
adc
loope
lahf
xor
xchg
xchg
pop
lods
lods
daa
xor
push
dec
add
in
and
cwtl
insl
iret
jne
pushf
stos
fstpt
xchg
mov
pop
mov
push
enter
rolb
push
add
push
femms
or
in
in
testl
jns
jo
or
or
shll
scas
dec
pop
xor
xor
mov
pop
jle
pushf
xchg
shrb
or
decl
test
scas
test
cltd
popf
das
mov
bsf
adc
jae
pop
fbld
and
add
dec
pop
xor
popf
jg
or
pop
xor
jmp
in
testb
scas
add
dec
fcmovb
arpl
xor
add
test
mov
cmp
xor
dec
scas
pop
scas
jg
pop
leave
dec
ja
ja
mov
ret
paddusb
mov
pop
incl
aaa
add
cmp
inc
mov
xor
cmp
add
xchg
mov
aaa
push
push
mov
lahf
mov
and
pushf
psrld
add
xchg
xchg
xchg
add
enter
or
or
jb
mov
or
xchg
mov
pop
adc
sub
mov
mov
pop
imul
cmp
lsl
mov
or
mov
mov
fimuls
mov
in
fsubrl
mov
pop
cld
addr16
insl
stc
jg
push
dec
push
pushl
pop
loope
fs
jg
xchg
leave
je
unpcklps
sbb
sahf
mov
sbb
push
and
adc
leave
leave
xchg
and
inc
adc
cmp
pop
test
pushf
sbb
inc
lods
mov
bsf
and
mov
and
int3
and
aam
and
outsl
dec
in
paddsb
sub
jb
lret
xchg
sub
sub
int3
mov
adc
sbb
and
dec
sub
pop
mov
mov
cmp
rorb
out
mov
pop
pop
sbb
ljmp
imul
add
cmp
add
orb
add
cmp
dec
jb
xchg
mov
mov
lds
in
mov
lfs
or
sbb
mov
dec
aas
mov
outsl
dec
add
push
in
leave
xchg
add
add
add
insb
add
jbe
and
jbe
mov
xchg
dec
lcall
jb
push
fmuls
loopne
call
inc
lock
adc
jb
adc
sbb
sbb
push
sbb
jb
enter
sbb
and
sbb
and
jb
enter
and
and
sbb
int
fisubrl
in
out
sub
enter
mov
sub
daa
mov
jb
es
and
enter
cmp
inc
and
cmp
push
pop
pop
push
fs
inc
mov
sbb
mov
xchg
push
pushf
adc
mov
adc
movsb
jb
xchg
add
scas
mov
inc
mov
test
mov
inc
mov
push
xor
cmp
enter
add
adc
push
js
and
sbb
or
jb
enter
adc
adc
sbb
into
adc
adc
adc
adc
notb
mov
mov
jb
sbb
sbb
jb
nop
cmovne
fisttpll
mov
jae
das
test
in
jbe
dec
lea
mov
xchg
mov
mov
mov
rcll
sbb
jb
fsts
hlt
adc
adc
cmp
enter
or
and
sbb
or
inc
or
in
xchg
pop
pop
push
push
sbb
cmp
aas
test
jns
add
mov
outsl
int
aad
mov
push
cmp
fs
add
or
or
and
pop
or
paddsw
and
cmp
in
adc
push
pop
pop
jecxz
in
addr16
jns
fldenv
test
push
xchg
lea
xchg
inc
cld
cmp
push
rolb
fiaddl
and
ljmp
fsubrl
adc
sbb
das
sub
cmp
cmp
cmp
dec
inc
mov
divps
imul
jg
jg
mov
mov
cmp
cmp
push
pop
and
in
and
mov
and
mov
repnz
add
ss
sbb
repnz
add
pushf
sbb
cmp
jo
js
or
int3
sahf
mov
cwtl
jb
cltd
mov
test
xchg
iret
add
dec
push
push
inc
out
leave
add
out
sti
add
sbb
jb
mov
push
add
inc
mov
aas
dec
or
fsts
or
movsb
cmp
enter
jae
jnp
sbb
pop
shlb
in
jbe
pop
icebp
sbb
sbb
pop
mov
sbb
xor
pop
dec
push
leave
enter
pop
push
jne
repnz
and
in
in
lods
movzwl
int
cmp
in
jecxz
out
das
stc
xchg
xchg
daa
sbb
add
xor
fistl
aas
add
in
xchg
add
pop
add
add
insl
push
out
mov
push
outsb
mov
pushf
pushf
int3
sahf
cmpsl
or
scas
mov
sahf
pushf
pushf
pushf
iret
xlat
fists
inc
fimuls
out
pop
notl
cmp
cs
rorb
adc
inc
dec
mov
sbb
sbb
adc
das
mov
inc
dec
lcall
je
dec
dec
dec
jle
mov
sahf
dec
shlb
mov
mov
call
scas
repnz
add
jle
std
add
rorl
and
pop
cmp
dec
iret
dec
inc
mov
or
or
jl
pop
xchg
jg
jb
jbe
lahf
test
mov
mov
jb
sbb
push
loope
psubw
inc
mov
into
sbb
sbb
sbb
enter
sbb
pop
mov
leave
sbb
pop
ret
xor
cmp
fld
dec
iret
ret
push
add
adc
jb
enter
sub
sub
sbb
sub
imul
xor
mov
iret
cmp
jb
xor
stos
ss
aaa
and
sbb
cmp
pop
cmp
je
fsts
cmp
cmp
mulb
aas
lods
mov
sbb
repnz
inc
flds
icebp
inc
enter
inc
or
inc
add
jb
and
add
dec
add
dec
inc
sbb
ja
mov
daa
and
in
ss
jne
subb
add
enter
add
xor
fs
or
mov
jmp
push
push
setno
inc
into
pop
sbb
sub
xor
xchg
in
adc
adc
arpl
sbb
and
mov
setp
cmpsl
mov
mov
int3
and
loop
test
fmull
clc
movb
in
pop
stc
out
dec
pop
jns
inc
mov
dec
add
add
jle
inc
dec
into
sahf
xchg
add
lahf
add
add
mov
pop
lret
or
xchg
xchg
daa
loope
in
testl
push
or
jnp
jb
add
inc
adc
cmp
push
push
adc
fsts
jge
sbb
leave
in
leave
enter
test
in
leave
fnstcw
and
aad
mov
cmp
and
and
outsl
add
sub
sub
and
xchg
mov
cmovae
daa
pop
test
xor
cmpl
fistpl
scas
add
xor
leave
add
aas
sahf
mov
in
jmp
repz
sti
sahf
or
cmp
leave
push
enter
push
sub
xor
add
xor
dec
add
setl
repnz
or
and
mov
frndint
ror
xchg
adc
adc
dec
mov
testl
nop
enter
aas
sub
loop
nopl
jb
xor
inc
sbb
sbb
inc
mov
jo
mov
in
xchg
and
and
mov
int3
iret
xlat
out
in
rorl
lret
jg
xchg
add
sub
sbb
jno
adc
in
ja
push
add
push
add
bnd
pop
push
jne
orb
inc
mov
or
leave
enter
or
mov
iret
lret
push
jmp
clc
adc
jnp
repnz
add
push
sbb
xor
adc
cmp
sbb
push
sbb
cmp
pop
push
push
sub
iret
push
xor
xor
iret
int3
iret
or
rorb
mov
into
int3
loope
jmp
mov
push
or
int
jb
enter
push
adc
jbe
and
aaa
adc
fs
leave
inc
dec
adc
push
adc
in
push
jg
jge
sbb
jb
test
lea
xchg
sbb
inc
mov
pop
mov
pop
dec
and
push
and
into
jo
int
jg
cld
into
sbb
repnz
sub
sub
xor
dec
push
or
popa
or
jb
or
lea
cwtl
adc
jns
jb
adc
jb
cmp
das
ficoml
pfpnacc
sbb
jb
in
lock
sbb
mov
pop
iret
or
pop
addr16
xchg
sub
sbb
enter
and
and
cmp
jbe
jl
sub
push
sbb
das
cmc
mov
jb
push
push
pop
mov
push
xor
insb
xlat
shlb
out
repnz
into
inc
mov
das
sarb
mov
das
shrb
pop
sti
push
push
imul
xchg
addl
syscall
mov
pop
and
push
mov
fidivrs
mov
cmp
das
in
roll
adc
inc
sahf
mov
adc
xchg
and
jb
fs
sbb
int3
sbb
xlat
sbb
loop
pop
aas
shl
fs
shlb
pop
pop
push
and
and
sbb
xor
mov
xchg
sub
fimuls
mov
das
sub
dec
inc
mov
pop
int3
xor
daa
and
xlat
aas
xlat
xor
loop
xchg
mov
psrlq
pop
jb
xchg
cmp
push
or
xor
pop
imul
mov
inc
push
je
add
psrlq
enter
push
jns
add
pushf
das
cmpsl
push
lss
and
aad
loopne
or
fs
not
add
push
sbb
pop
xor
jb
adc
cmp
cmovne
in
in
jbe
das
pop
punpckhbw
pop
jae
xchg
fucomi
fs
setbe
mov
scas
mov
mul
in
fisubl
in
aad
aas
and
bnd
jb
and
sub
sub
jbe
sub
inc
sahf
int3
das
in
cs
das
push
enter
adc
pop
sbb
xor
outsl
xorl
outsb
clflush
inc
fcomps
xchg
imul
into
inc
push
cmp
mov
add
enter
add
add
fs
fwait
movsl
pop
or
pop
fsubrs
movzwl
setg
movsb
loopne
xlat
dec
mov
testl
out
out
dec
clc
mov
in
pop
or
pop
enter
cmp
ja
push
dec
jmp
mov
ja
push
or
cmpsl
in
lahf
add
jo
xor
daa
xorb
pop
cwtl
add
nop
and
stos
add
mov
pop
xchg
shl
clts
xorb
orl
jg
aas
inc
push
and
pop
add
sub
mov
adc
into
sub
aaa
inc
fcmovnb
add
aaa
xlat
cmpsb
mov
xor
shrl
sbb
repz
or
or
dec
jbe,pn
or
ss
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
dec
sahf
out
push
and
jb
fsubrl
fcompl
orl
cmp
pushf
test
xchg
sub
mov
imul
xlat
sbb
data16
and
mov
mov
mov
add
fsubrs
add
adc
mov
rorl
mov
adc
pop
test
jbe
adc
sbb
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
jo
fs
ljmp
cmovo
leave
add
mov
iret
mov
in
sbb
in
call
adc
dec
leave
pop
cld
push
ficompl
push
pop
fisubrl
xor
fcomp
fisubs
fneni(8087
stc
jb
jle
iret
repz
out
jl
js
jo
iret
repz
push
cmp
repz
inc
xor
and
repz
sbb
adc
or
repz
repz
push
clc
hlt
fpatan
cmp
lock
sahf
out
fdivp
les
mov
jns
out
mov
fdivr
push
or
push
dec
push
inc
cmp
repz
xor
and
iret
repz
push
in
fadd
mov
iret
repz
cwtl
nop
mov
js
pop
push
jns
push
dec
inc
xor
sahf
out
jns
icebp
clc
push
in
fmul
xchg
lods
out
mov
jge
ss
mov
inc
mov
rorb
icebp
dec
push
xor
xchg
pop
adc
sub
cmpsl
mov
mov
test
pop
divb
cmp
mov
add
aas
sbb
add
push
daa
inc
test
orb
clc
mov
jae
xorb
addr16
outsl
lock
call
push
mov
mov
jg
mov
push
adc
aas
adc
xchg
rolb
add
mov
add
dec
lock
mov
and
sbb
cmp
add
xor
mov
add
pop
data16
sub
outsl
push
test
add
xchg
out
push
and
cs
dec
sub
push
enter
sbb
add
in
loopne
mov
out
add
add
rolb
out
xchg
es
into
and
testb
jb
xchg
and
add
and
sti
xorl
cmc
clc
or
popf
popf
sbb
add
mov
pushf
lfs
mov
int3
or
fsts
and
mov
stc
jb
enter
push
add
pop
clc
and
inc
mov
and
and
and
xchg
fsubrs
add
dec
cmp
shr
pop
fldl
movups
xor
dec
sbb
xchg
cld
or
loopne
xchg
incl
sbb
fiadds
repz
pop
cmp
pop
js
jmp
aam
mov
mov
call
out
fidivrs
push
pop
ja
mov
js
xor
jae
das
push
dec
insb
inc
or
sub
dec
push
repnz
mov
enter
cli
or
or
ret
nop
cmpl
adcb
sbb
pop
stc
and
leave
sbb
into
sbb
rorl
and
sahf
mov
pushl
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
jg
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
cmp
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
incl
cld
decl
pop
mov
xchg
clc
repz
dec
leave
cltd
sub
cmp
std
addr16
add
int3
add
aas
jno
or
mov
fisttps
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
call
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
push
inc
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
jmp
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
ljmp
cmp
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
clc
incl
gs
std
orl
pop
ficomps
frstor
sbb
out
or
and
adcb
mov
sub
jl
pop
inc
inc
je
inc
inc
push
dec
push
out
inc
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
pop
jg
sbb
out
xor
bound
pop
push
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
imul
pop
shrl
insl
outsl
lock
test
imul
dec
push
insb
xor
popa
cmp
dec
xor
adcl
push
inc
dec
push
mov
and
mov
jo
jb
push
or
inc
test
lock
dec
inc
gs
gs
daa
les
addb
arpl
inc
or
insb
mov
sbb
sub
dec
outsl
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
ret
dec
xchg
push
and
mov
rorb
insb
pop
das
push
fs
sub
inc
imul
pusha
dec
imul
sbb
daa
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
cli
inc
push
or
in
inc
ds
je
sbb
out
dec
push
dec
dec
lods
std
push
add
dec
bound
jbe
lods
cmpsb
pop
sbb
xchg
sub
cmpsb
push
mov
or
inc
cmpsb
dec
adc
sbb
iret
imul
adc
outsb
arpl
outsl
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jns
or
mov
pop
mov
push
mov
ja
inc
xchg
push
push
in
sbb
fsts
subl
sub
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
cmp
push
insl
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
test
in
xchg
add
and
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
xchg
lcall
mov
push
dec
scas
aam
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
movsb
jg
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
pop
push
orl
cmovbe
push
dec
daa
dec
dec
sub
or
jbe
fcoms
jae
popf
push
inc
in
arpl
dec
outsl
sbb
insl
imul
xchg
clc
pop
push
jne
les
outsl
rolb
loopne
push
pop
sbb
dec
outsl
or
aad
iret
insl
mov
popa
inc
iret
pop
les
andb
fdivrl
inc
das
xlat
pop
fadds
dec
jg
xchg
ss
repz
sub
xchg
lock
out
aam
test
js
insb
sahf
out
inc
or
hlt
cwtl
sbb
push
sbb
push
push
add
pusha
ds
gs
js
and
aas
adc
ja
popa
push
out
mov
les
hlt
push
xor
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
ljmp
mov
sbb
dec
jno
repz
test
ficompl
jmp
lock
pushl
roll
shrb
std
in
leave
mov
add
lcall
arpl
psubd
or
outsb
cmp
imul
addr16
add
incl
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
pushl
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
push
jmp
les
iret
shld
sub
mov
mov
xchg
adc
stos
sbb
data16
inc
fdivl
incl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
push
lcall
xchg
sbb
push
cmpsb
ljmp
insb
fs
add
hlt
push
imul
insb
sbb
xor
call
clc
insb
jnp
add
shl
adcb
cmc
fnstenv
cld
call
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
jg
pushl
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
decl
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
jmp
cmpl
or
mov
lcall
ljmp
fildl
push
fdivl
call
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
incl
lock
add
inc
push
imul
xorb
sbb
push
imul
decl
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
call
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
pushl
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
jmp
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
ljmp
ret
es
pushf
mov
insl
add
ss
jmp
addr16
mov
pop
orb
adc
mov
jnp
sbb
xchg
or
call
in
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
fcomip
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
hlt
mov
clc
sar
imul
push
js
or
ljmp
push
sahf
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
sbb
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jmp
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
test
or
push
xchg
mov
mov
mov
test
push
xchg
outsl
inc
jne
pop
jp
sar
push
imul
insb
imul
add
lcall
jbe
push
jns
arpl
arpl
ja
rorb
push
inc
insl
jns
insb
das
adcb
jne
outsl
insl
addr16
add
inc
xchg
fistl
nop
inc
mov
pop
shll
jp
mov
push
cmp
add
jge
cmp
dec
inc
js
popa
xor
mov
jbe
or
inc
add
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
mov
push
dec
inc
ret
testb
add
shr
insb
add
jne
cmp
mov
sub
mov
mov
cltd
push
ss
jbe
arpl
or
test
aas
xchg
sbb
lret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
xor
dec
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
and
lods
xchg
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
inc
aaa
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
sub
sti
mov
dec
jge
insl
imulb
adc
arpl
sub
xor
addr16
push
xchg
into
pop
jo
or
jge
inc
cmp
sub
sub
aaa
dec
sbb
cmc
cltd
dec
out
imul
add
adcb
subb
lcall
push
movsb
jo
push
mov
ss
xlat
test
mov
mov
sub
mov
inc
and
xor
adc
jo
lock
push
lahf
aas
push
outsl
outsl
push
sub
pusha
test
fcoms
inc
test
and
mov
pop
shl
inc
in
nop
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
movsl
sub
mov
jns
jne
xor
das
inc
and
test
sahf
mov
sbb
mov
push
clc
insb
bswap
dec
add
or
bound
pop
dec
popl
imul
xor
popf
xor
ljmp
sub
fstpt
add
sbb
pop
cmp
add
addl
push
jo
divb
pop
and
mov
aad
xchg
fisubl
sahf
aas
shll
pop
push
push
outsl
aaa
push
aaa
mov
sbb
loop
aaa
push
dec
pushf
and
add
rolb
inc
lds
pop
inc
and
mov
add
push
es
sbb
sub
scas
lcall
adc
popa
faddl
dec
pop
nop
xchg
ljmp
push
pop
mov
int
mov
dec
push
xlat
add
inc
add
sub
pop
or
outsl
je
jb
pop
dec
lcall
and
and
cs
fisttpl
and
cmpsb
dec
shrd
popa
incl
lea
stc
out
pop
in
bswap
mov
out
ud0
ds
jmp
repnz
in
push
pusha
ljmp
lret
cli
add
dec
pop
push
cld
push
imul
sbb
inc
es
add
dec
testb
pop
and
add
sbb
repnz
sahf
insb
daa
aam
cmp
add
das
leave
dec
jge
add
idiv
lock
add
add
sbb
add
xor
push
test
shll
rorb
push
add
subb
or
and
jae
loop
fldenv
in
push
pusha
push
add
pop
add
pop
or
or
int
cltd
nop
ja
and
and
lods
add
or
xor
jb,pn
mulb
inc
jge
jns
inc
dec
lret
fildl
fs
dec
or
push
out
ss
sahf
jae
arpl
xlat
dec
leave
cmpsl
or
sahf
add
jb
sahf
testl
sbb
inc
pop
xor
das
addb
xor
hlt
mov
sub
jmp
jecxz
and
add
lahf
xchg
mov
mov
mov
clc
add
inc
fisubl
push
pop
fsubrs
ljmp
orl
loop
jp
es
lret
mov
mov
push
or
fisttpll
shld
shlb
imul
gs
add
mov
or
fiadds
mov
popf
inc
xorb
pushf
stc
mov
xor
shrl
bound
fmul
loope
add
outsb
and
jp
jbe
cmp
hlt
mov
inc
lds
ds
lds
jno
jl
les
xchg
add
xor
fistpl
or
imul
push
rcrb
xor
lea
mov
imul
push
mov
jecxz
sbb
push
movzbl
or
rcll
push
mov
inc
les
mov
mov
mov
outsb
adc
mov
jecxz
pop
mov
push
sub
pop
es
ret
xchg
add
pushf
inc
nop
ljmp
in
push
sub
rol
popa
mov
and
push
xchg
mov
inc
nop
out
in
inc
call
push
rorb
loopne
call
push
add
fadds
push
hlt
inc
adc
mov
clc
pushf
and
aad
fisttpl
push
es
jne
push
inc
mov
fs
adc
bound
sub
push
mov
arpl
subb
call
dec
cmp
xchg
jne
push
pop
ficoml
inc
adc
test
lcall
inc
sbb
push
movsl
jnp
mov
push
rol
add
les
mulb
or
mov
sub
push
push
imul
mov
setae
push
push
cltd
mov
cmp
pop
add
xor
rorb
add
adc
or
push
das
mov
pop
dec
pop
cmpsl
popa
js
pop
das
push
cmp
lock
dec
cs
ret
ret
inc
cwtl
push
cmp
dec
ds
mov
mov
cltd
test
mov
lcall
mov
ret
xchg
mov
xchg
dec
or
push
dec
test
push
mov
jle
call
push
aam
fcmovnb
jg
je
inc
test
movb
dec
adc
add
push
popa
ret
jb
push
mov
aam
lea
push
out
or
lds
sbb
pop
mov
lret
push
add
fmuls
fiaddl
mov
in
lds
adc
je
shrl
sbb
xchg
mov
pop
sbb
dec
lock
or
lock
add
jmp
insl
dec
inc
pop
mov
cmp
dec
insl
cltd
mov
movsl
insl
jge
shl
movsl
cmpsl
sbb
lods
cmpsl
xor
add
jne
add
push
insb
cltd
int
or
aas
adc
pusha
dec
cmp
jecxz
fcoml
and
jmp
loopne
ljmp
imul
bound
dec
call
or
push
insb
fsubl
sub
cmovno
push
mov
dec
dec
and
sub
loop
push
popa
mov
adc
add
or
cmp
add
mov
add
fwait
dec
or
jbe
or
stc
jp
setge
push
lea
loopne
imul
xlat
jl
pusha
aaa
pop
jp
push
or
inc
or
aaa
or
in
mov
gs
xchg
sbb
mov
mov
mov
sub
mov
add
out
incb
push
jnp
or
int
sbbl
push
jbe
jl
subl
rcll
push
repnz
cmc
jnp
out
outsb
jl
push
call
mov
jl
adc
imul
add
dec
pusha
sbb
sti
scas
add
xor
add
shlb
lret
jp
xchg
sarl
push
sub
stos
lods
or
enter
clc
jecxz
inc
inc
or
lock
mov
bnd
jle
pop
push
call
jle
or
call
cmpsl
pop
ss
dec
xchg
lea
and
mov
ljmp
mov
nop
xabort
mov
sbb
jmp
outsb
data16
push
xorb
sub
mov
fmuls
pop
pop
xlat
add
sub
or
mov
sub
or
test
out
ja
pop
mov
xchg
xchg
negl
cwtl
xchg
sbb
mov
call
in
dec
push
mov
sbb
inc
cmpsb
test
dec
or
or
sub
jo
add
mov
cs
rcl
inc
adc
in
sbb
popf
out
mov
fsubrl
dec
leave
out
in
shl
or
dec
ficoml
rol
hlt
sbb
inc
push
xor
clc
lock
dec
cld
sbb
rorb
lea
aad
or
add
ret
fsts
or
mov
push
push
jecxz
lcall
sti
cltd
or
xchg
xchg
add
shlb
cmp
xchg
sbb
fstps
aas
mov
rorb
pop
lds
mov
pop
lahf
mov
dec
fdivrs
mov
gs
mov
xor
add
mov
sub
arpl
mov
xor
push
pusha
cmp
shlb
sub
adc
push
adc
pop
loop
or
popa
push
jo
jbe
push
and
jne
push
pop
ds
add
lock
sbb
aam
add
cmc
ds
add
test
xor
ds
sbb
pop
mov
aaa
sbb
xchg
push
jnp
sbb
loop
fdivr
adc
pusha
inc
push
or
pop
jl
fwait
cltd
insl
jnp
sub
push
push
dec
adc
loopne
fdivl
jno
inc
pop
pop
xchg
cmpsb
mov
pusha
push
int3
call
mov
push
dec
cltd
add
mov
dec
out
je
cmp
jmp
jecxz
add
andb
por
push
pop
push
orl
aaa
insb
sbb
jb
fstl
out
cmp
xor
test
idivl
ds
xlat
rolb
addr16
xchg
loope
cmp
test
jne
add
out
lea
jno
rol
adc
in
pop
cmp
sub
mov
lea
popa
sub
call
mov
add
sub
daa
rclb
rorl
add
shll
xchg
add
out
add
dec
out
repnz
dec
jl
stc
cmp
sahf
mov
fdivrp
xor
ss
sub
andb
ret
add
insl
sub
je
icebp
pop
mov
jecxz
pop
mov
push
adc
jmp
enter
sub
call
or
mov
idivl
mov
mov
insl
mov
or
and
xchg
out
les
adc
pop
mov
scas
dec
es
pop
out
mov
lds
or
rol
or
mov
cmp
jecxz
rep
adc
std
mov
rep
push
adc
push
mov
dec
dec
mov
jbe
shll
jle
rcll
fnstsw
and
adc
sarb
mov
test
push
add
xchg
hlt
sbb
dec
jno
pop
pop
cmpsl
mov
aad
and
pop
pop
mov
aad
aas
pushf
xchg
inc
shlb
out
scas
js
hlt
mov
add
push
sbb
sbbb
or
push
jb
je
loope
jne
ljmp
add
stos
je
mov
pop
add
icebp
xor
dec
ja
and
sbb
je
in
jo
test
js
pop
sbb
call
and
push
and
push
xor
leave
sbb
stos
xchg
push
xor
or
sub
cs
adc
xchg
pushf
data16
insb
outsl
push
add
ljmp
ror
rcl
fiaddl
mov
cmpsl
xor
mov
subl
pop
cmpsl
scas
sbb
sbb
dec
aas
js
mov
cmp
lret
mov
std
mov
ficoms
or
push
adc
push
mov
movsl
mov
scas
dec
adc
ds
sbb
push
push
cmp
mov
push
or
sbb
and
call
jmp
adc
mov
mov
push
and
test
imul
in
in
jne
dec
repz
add
and
leave
in
loopne
jmp
inc
lea
enter
dec
sub
stc
jmp
and
in
xor
inc
outsl
pop
cmp
in
ret
leave
or
fldenv
xchg
in
cmpsl
repnz
enter
pop
push
or
xchg
enter
or
jbe
insb
or
pop
adc
leave
sub
les
mov
in
stos
int3
mov
fadd
xchg
in
mov
mov
pop
mov
cmp
add
ret
mov
inc
inc
mov
sub
jmp
in
and
mov
jns
in
in
in
in
and
push
add
icebp
mov
xchg
add
sbb
das
je
lea
icebp
mov
imul
lods
loop
imul
es
cmpsl
mov
insl
pop
adc
push
fists
mov
push
and
jno
fisubrs
out
adc
push
adc
ss
sbb
jne
lods
lods
pop
enter
cmp
ficomps
into
xor
mov
xor
push
add
push
pop
fistl
dec
mov
xor
js
int3
adc
cmpsb
adc
jmp
add
push
mov
cmpsb
fcomp
inc
test
mov
enter
add
js
data16
cmp
mov
movswl
or
jb
mov
test
aad
mov
adc
lods
lods
dec
xlat
push
push
mov
jecxz
arpl
sub
push
jg
lea
dec
lea
jb
mov
add
inc
add
imul
dec
cmp
rorb
int3
lock
add
cmp
popf
xchg
and
add
jne
clc
or
mov
iret
loop
test
cld
out
mov
arpl
mov
adc
in
inc
pop
dec
mov
sahf
in
jne
push
negl
insb
mov
or
sbb
fstpl
mov
ds
or
gs
cmp
stc
mov
push
call
and
push
jl
loope
cld
mov
scas
and
xorl
push
call
or
nop
shll
inc
mov
gs
inc
and
dec
in
inc
xchg
sub
dec
pop
and
je
sti
adc
pop
je
mov
inc
test
jmp
cmovp
call
inc
mov
inc
pop
and
fcoml
sbb
push
test
or
jmp
push
fs
loopne
mov
imul
cs
cld
sahf
mov
scas
lcall
inc
popf
rorl
shl
insb
cld
adc
test
sbb
push
mov
push
mov
and
push
lock
movsb
mov
mov
xor
test
push
hlt
lods
jbe
fs
in
mov
xor
in
mov
push
add
sub
dec
test
inc
insl
xchg
movsl
repz
cltd
mov
cmp
push
mov
daa
cmp
adc
push
mov
mov
inc
mov
js
rolb
hlt
repnz
cltd
push
pop
faddp
adc
dec
inc
aas
fadds
inc
xor
mov
jbe
imul
add
pushl
or
jnp
cmp
inc
out
ss
sbb
ret
stos
std
std
out
push
xor
push
stc
xor
sbb
mov
xor
lock
scas
fldl
call
sub
sub
and
aas
jmp
mov
addr16
push
push
add
adc
jnp
adc
adc
pop
push
lods
lock
sub
xchg
pop
mull
pop
dec
adc
std
adc
cmpsl
aas
add
push
push
ds
xor
add
dec
and
stos
pop
mov
cmp
fs
loopne
adc
push
dec
add
or
mov
and
jne
mov
imul
push
ja
and
adc
sarb
mov
test
test
sub
lods
arpl
lock
pop
add
and
testl
add
dec
or
out
jnp
jmp
les
jl
ljmp
mov
adc
add
add
mov
xchg
or
sbb
adc
rcrl
daa
ja
jl
adc
xchg
adc
cmp
sub
cmp
push
ret
pusha
bound
hlt
popf
mov
and
dec
scas
pop
xor
cwtl
inc
mulb
jecxz
push
mov
push
call
out
pop
ds
dec
mov
in
jbe
push
adc
rol
jmp
sbb
js
les
push
movsb
inc
sbb
push
or
enter
fsts
jbe
outsl
jne
xor
xchg
in
std
jmp
and
xor
pop
call
inc
jmp
in
mov
or
mov
js
xor
jne
xor
sahf
sarb
rorb
mov
sub
push
adc
inc
or
add
ret
les
aas
add
icebp
sbb
pusha
mov
ds
xorb
or
outsb
in
sub
sbb
lods
orl
adc
outsl
cli
mov
cmp
adc
sbb
cmp
jl
or
jne
mov
jmp
or
shlw
xor
or
or
or
xor
cmpl
shr
test
xor
sub
cs
shll
and
pushf
push
insb
push
adcl
or
and
xor
ja
inc
push
add
call
out
push
cmp
or
fisubrl
jne,pn
ljmp
add
mov
cmpsb
and
sub
add
iret
mov
cmp
ss
mov
test
cmpsb
jmp
sub
mov
mov
mov
mov
jne
xor
lea
add
push
out
lea
stos
pop
in
out
insl
push
fucomip
cmp
je
cmp
jbe
jge
or
nop
inc
push
add
sbb
mov
clc
push
and
std
and
inc
mov
jbe
and
push
lock
sbb
lods
loope
fcoml
xchg
push
mov
push
jecxz
ds
adc
adc
and
xor
pushf
loop
adc
xchg
jmp
push
adc
scas
push
mov
xchg
inc
shrl
test
sbb
mov
adc
fmuls
mov
mov
dec
xor
test
sar
enter
fidivs
fwait
jmp
push
mov
mov
jo
push
sbb
adc
movsl
cltd
adc
pop
mov
into
ljmp
gs
push
lds
lods
sbb
mov
jnp
adc
pop
push
or
loopne
les
push
je
sub
rorl
dec
jle
lahf
add
test
or
push
das
lcall
test
xor
test
js
pop
push
xor
jl
lea
mov
jno
cld
mov
ljmp
xchg
aam
xor
ds
jecxz
int
push
sub
push
cmpsb
aam
in
clc
loop
pop
mov
popa
fsubrl
sbb
cli
call
xchg
ss
jo
je
mov
faddl
push
adc
fdivs
scas
dec
je
jae
fnsave
push
mov
adc
cltd
cmpsb
insl
and
add
or
cmp
push
push
mov
sbb
mov
adc
sbb
xchg
popf
imul
shll
push
mulb
mov
inc
cmp
lock
ja
arpl
sar
mov
and
ja
nop
les
addps
sub
lock
dec
push
hlt
gs
mov
adc
mov
add
jns
ss
clc
and
cmp
cmc
mov
cld
push
and
mov
or
outsb
imul
and
roll
add
add
pop
adc
sub
sbb
push
or
orb
push
cmp
push
mov
sbbb
enter
test
push
pop
mov
je
mov
push
mov
mov
sbb
mov
add
mov
or
pop
sbb
pusha
addr16
sbb
xor
push
sbb
sbb
pop
jae
jne
into
cmp
jmp
sub
mov
ss
cmp
jne
cmp
and
cmp
je
int3
in
cltd
push
jecxz
decb
fwait
pop
jns
outsl
xorl
sysret
pop
jmp
nop
xor
and
sbb
sarl
mov
das
outsb
icebp
call
shrb
cmp
call
xchg
scas
and
push
jno
aam
setb
push
dec
repz
sbb
xchg
add
push
lods
repnz
sbb
sbb
sub
mov
lcall
dec
jl
js
notb
enter
out
mov
or
fxtract
jecxz
adc
jmp
pop
xorb
or
inc
or
mov
add
sbb
xchg
fiaddl
xchg
add
add
ja
inc
fsubrl
shlb
lcall
jne
jnp
jp
add
push
call
in
movsb
jmp
sbb
pop
in
js
sbb
insb
jns
and
insb
je
negb
mov
sbbl
cmp
xchg
and
int3
jbe
push
add
or
mov
mov
inc
xchg
mov
cmpl
push
stc
sbb
sub
push
or
push
push
popf
mov
add
push
sbb
test
fdivl
or
mov
mov
sahf
pop
cwtl
or
popf
pushf
or
cmp
test
mov
stos
push
inc
add
add
loopne
fs
inc
mov
mov
cs
andl
cmp
jg
push
dec
je
sub
or
mov
fsubrs
xor
lods
sbb
mov
sbb
lea
adc
add
xchg
nop
push
incl
mov
cmp
fadds
dec
jne
movzbl
add
stos
adcl
scas
insl
lcall
test
ret
into
xchg
movsb
cmp
scas
push
pop
xchg
push
sub
ss
sbb
or
je
mov
push
cli
sub
fcmovnbe
in
add
xor
or
and
ja
in
out
pop
adc
adc
inc
xor
inc
pop
daa
and
std
andb
or
add
xor
fwait
or
or
sbb
loopne
xchg
test
cmpb
sub
test
and
dec
add
push
call
and
cmp
xchg
insl
test
dec
aam
xchg
fisubs
dec
dec
push
push
sbb
sub
leave
je
clc
cmp
cmp
ss
inc
mov
aas
dec
rclb
xor
in
sub
enter
dec
inc
sub
sbb
fidivl
xor
repnz
fdivl
mov
inc
jecxz
sub
or
inc
inc
fistpl
cli
mov
cwtl
ret
lea
out
mov
mov
push
mov
insl
arpl
and
adc
pop
mov
mov
shlb
insb
inc
mov
xor
and
push
xorb
cmovns
je
loopne
add
test
jecxz
insl
jecxz
mov
xchg
pop
pop
mov
add
insl
jecxz
mov
mov
or
and
mov
cmp
adc
dec
cmp
rorb
movsb
push
outsl
mov
mov
pusha
dec
inc
pop
pop
cmpsb
nop
dec
cmpsl
popf
xor
push
pusha
push
sahf
icebp
sbb
aam
inc
aas
out
call
jecxz
into
ds
pop
call
call
out
cmpsl
cmp
dec
aam
inc
adc
inc
push
jns
cmp
call
and
roll
adc
int3
pop
fs
mov
sbb
jmp
mov
mov
pop
cmp
mov
movzbl
mov
les
mov
ja
call
enter
scas
dec
into
dec
fwait
pop
jmp
sti
aad
sbb
xchg
pushl
cmp
jmp
push
xchg
or
rcrb
push
xchg
inc
cmp
into
faddl
aam
mov
loopne
pop
push
xor
cmp
into
cmp
xor
push
lahf
insl
push
dec
dec
jmp
sub
inc
jmp
and
sbb
and
mov
inc
pusha
push
loope
xorb
sbb
stos
or
insb
or
and
adcl
leave
mov
and
jo
mov
push
add
inc
test
inc
dec
jmp
cmp
call
and
and
mov
incb
cmp
push
push
es
cmpsb
add
rcr
xor
aad
inc
cmpsl
scas
fs
into
fwait
sbb
ja
shll
dec
inc
lcall
shlb
push
es
adc
mov
movb
pop
fistpll
dec
pushf
out
outsb
iret
dec
push
in
loope
clc
push
or
in
ficomps
ret
sub
adc
push
and
xchg
int3
xchg
mov
sbb
js
lock
and
jb
jbe
inc
push
imull
push
dec
xor
pusha
xchg
inc
sub
jp
sub
jmp
cli
mov
adc
cmp
push
xchg
pop
aaa
nop
je
mov
loop
lods
pop
int
cmp
movsl
adc
add
adc
test
dec
adc
nop
addr16
inc
daa
adcb
je
addr16
push
mov
xchg
pop
rolb
call
rcrl
mov
aaa
and
adc
cltd
dec
les
pop
addr16
and
adc
mov
jo
push
mov
inc
sub
xchg
dec
dec
push
adc
addr16
lret
call
add
sub
jo
sbb
rolb
das
sub
lods
inc
push
inc
stos
addl
inc
cs
pusha
nop
push
in
nop
je
or
je
mov
or
add
iret
jnp
adc
sub
cmp
repz
adc
add
add
sbb
out
clc
sbb
jmp
sbb
push
sbb
mov
inc
pushf
adc
addb
jns
ja
pop
nop
add
and
dec
nop
or
inc
pop
in
xor
inc
push
mov
or
inc
mov
repz
jnp
test
mov
ror
sbb
iret
shl
inc
test
add
or
push
or
je
adc
inc
add
dec
pusha
adc
mov
fs
xchg
adc
mov
loop
or
insb
and
test
cli
dec
pushf
push
pop
jmp
mov
xor
xor
sub
nop
test
setg
fidivl
test
inc
xor
push
pop
add
or
add
add
cmovno
movsb
addl
mov
cmp
je
xchg
add
mov
add
mov
push
gs
xor
or
pop
inc
or
lea
or
cs
in
or
add
or
sahf
xchg
sub
or
psrld
mov
jb
out
or
or
or
push
or
iret
enter
movq
adc
pop
adc
or
adc
in
add
adc
jns
cmp
adc
adc
push
adc
adc
adc
leave
ror
adc
push
repnz
push
inc
pop
out
cmpl
jns
sbb
xchg
sbb
cmp
sbb
xchg
sub
sbb
mov
sbb
sbb
rep
sbb
push
sbb
cmpsb
in
lds
xor
sbb
jns
push
inc
negb
movsb
incb
enter
add
add
sub
xchg
mov
cli
cld
xor
lcall
pop
jmp
jp
sbb
cwtl
xchg
push
in
push
in
imul
rol
adc
and
xor
mov
out
mov
pusha
and
sub
call
je
call
imull
pop
mov
cmp
scas
in
mov
lds
inc
jmp
jmp
dec
push
mov
in
repnz
ss
xchg
aad
in
cmp
xchg
cmp
push
mov
out
pop
enter
out
or
je
push
imul
in
fmulp
dec
icebp
cmp
das
mov
jnp
or
add
hlt
hlt
jns
addr16
imul
std
sbb
cmp
scas
in
mov
sbb
movsb
test
clc
clc
addr16
sbb
or
mov
cli
add
scas
add
sti
insb
in
repnz
cld
cld
je
cld
push
dec
fdivrp
or
ss
xor
enter
sbb
xor
and
jmp
xor
jb
enter
lahf
rcrl
jb
pop
jmp
scas
addb
jecxz
xchg
xor
cs
in
stos
xlat
aad
cmpl
aam
or
in
xorl
xchg
scas
inc
repnz
sti
andb
adc
or
dec
jmp
jmp
mov
in
cltd
or
adc
nop
jmp
push
dec
cli
out
out
out
or
lock
rcll
cli
or
aas
repz
jb
repz
sbb
add
stc
dec
in
xlat
imul
mov
xchg
and
aad
cltd
jb
jb
popa
leave
push
stc
sbb
nop
cmpsb
sti
sti
sti
xchg
or
cmp
jmp
push
xchg
stos
pop
mov
jge
add
test
stos
dec
or
xabort
or
sub
dec
loop
loop
stos
xchg
stos
shll
loope
xchg
pop
leave
inc
clc
and
loopne
add
or
scas
ss
fdiv
out
dec
push
and
mov
xchg
adc
push
push
ljmp
and
notl
notl
inc
mov
hlt
imul
jb
or
xchg
into
testb
mulb
pusha
leave
nop
testb
repnz
inc
nop
mov
sub
dec
push
sub
out
int
rclb
testb
fsts
loope
cmp
clc
clc
cmp
jmp
in
adc
cmc
pop
leave
or
fldl
xchg
hlt
or
push
add
lock
mov
jo
adc
shrb
xchg
clc
sti
mov
loope
pop
and
loope
jp
setb
pop
hlt
cmp
lcall
in
xchg
adc
repz
and
mov
repz
adc
or
test
xor
mov
push
and
repz
or
daa
test
xor
mov
push
and
repnz
repnz
or
cmp
xchg
cmpsb
icebp
icebp
icebp
das
xchg
in
push
in
adc
repnz
pop
repnz
cld
icebp
cmc
cmc
mov
icebp
mov
dec
pop
dec
adc
imul
stc
stc
dec
dec
push
arpl
je
xor
movups
mov
adc
test
mov
test
jp
jmp
imul
lret
push
push
sub
ffreep
push
inc
scas
xchg
stos
test
inc
cmp
xor
add
aad
pop
mov
lods
or
mov
mov
add
jne
in
mov
lods
stc
xor
jmp
xchg
aam
adc
dec
add
ss
sbb
ljmp
mov
and
ss
add
dec
push
nop
push
jns
ds
imul
dec
push
aaa
or
push
lahf
repz
adcl
stc
xor
cli
push
jecxz
repz
iret
repz
mov
sbb
mov
push
aad
in
xchg
gs
dec
sarb
rep
or
mov
xorb
movsb
das
inc
jecxz
pushf
dec
mov
add
fisubs
inc
imul
jns
inc
cmp
and
xchg
sbb
adc
ficompl
pop
xchg
mov
mov
imul
leave
inc
or
xchg
lods
jle
sbb
jg
push
aaa
rcr
adc
sbb
push
shll
pop
or
or
mov
test
ficoms
mov
xor
cmp
lds
sbb
arpl
push
mov
xlat
pop
mov
fmuls
add
push
lea
daa
sub
push
sbb
ret
adc
aam
or
ror
pop
dec
dec
sbb
add
shlb
mov
and
and
in
fsubl
call
fcoml
xor
or
pushf
ss
adc
jmp
adc
dec
shlb
or
sub
adc
stos
mov
les
mov
fstl
lahf
popf
adc
adc
dec
adc
pop
xor
insl
jo
stos
adc
and
or
adc
hlt
psubsw
aas
aas
cmp
daa
sub
inc
cmpsb
dec
int
jb
adc
xchg
cmp
js
add
es
push
pop
push
jp
push
xor
je
mov
add
lock
add
xchg
xchg
pop
cmp
js
pop
and
adc
pusha
or
inc
adc
mov
adc
xchg
pop
inc
adc
inc
inc
jb
mov
fwait
cltd
sbb
inc
sub
add
adc
adc
and
inc
dec
pop
adc
pusha
push
add
mov
push
xor
xchg
pop
inc
adc
nop
push
adc
cmp
rorb
pop
sbb
je
or
add
lods
subl
xor
add
or
push
ret
mov
mov
or
mov
fisubl
sbb
inc
cmp
popf
or
xlat
loop
call
or
and
les
stc
push
add
adcb
mov
xchg
fs
mov
xchg
mov
nop
mov
xchg
and
mov
xor
xor
shr
in
adc
in
xchg
dec
int
pop
add
mov
xor
ds
test
aaa
lcall
rclb
outsl
and
fstl
or
jns
or
ss
mov
repz
outsb
or
out
dec
xor
xchg
pusha
mov
and
fldl
or
xchg
pop
and
nop
xorb
imul
inc
xchg
xchg
xchg
inc
mov
xor
xchg
xchg
xchg
and
sysenter
cld
inc
jb
pop
and
sbb
mov
out
adcb
mov
push
adcb
mov
bound
add
mov
and
xchg
pop
nop
pop
adc
mov
xchg
and
cmp
or
je
cmc
add
aam
push
mov
dec
push
call
sub
mov
repnz
lods
mov
add
add
sub
mov
sbb
jmp
inc
dec
aam
xchg
pop
shll
add
rorb
mov
sbb
mov
sbb
add
inc
mov
sbb
leave
or
mov
adc
and
mov
scas
addb
push
mov
add
pop
outsb
mov
and
inc
inc
xchg
mov
xchg
xchg
cmpsb
push
jmp
lods
adc
adc
jae
add
mov
inc
inc
cmp
mov
mov
dec
test
and
sbb
jns
in
lock
cmpsl
pusha
add
mov
hlt
inc
inc
dec
add
and
push
mov
add
nop
push
inc
fndisi(8087
imulb
movsb
mov
cmp
nop
cmp
push
bound
mov
stos
or
cmp
out
aaa
popa
aas
imul
movsl
and
leave
mov
and
push
pusha
and
cltd
inc
loopne
inc
cltd
inc
adc
rorb
or
xor
sbb
inc
dec
jbe
cltd
add
dec
dec
mov
sti
push
pop
test
dec
mov
xor
dec
vpshaw
inc
cltd
mov
push
je
pushf
xchg
adc
dec
pop
pushf
xchg
adc
cs
mov
inc
ret
movsb
xor
or
xchg
adc
jl
lret
adc
dec
mov
loope
xchg
add
or
test
addl
add
sbb
loopne
or
xor
push
test
and
mov
xchg
subl
lret
ds
cmp
add
clc
mov
xor
sbb
lahf
xlat
add
test
test
test
cmp
sbb
sahf
dec
inc
scas
pop
test
mov
inc
test
insb
in
xor
dec
mov
je
cli
jmp
aam
sbb
mov
test
mov
out
push
inc
pop
or
cmp
mov
mov
fs
sbb
pusha
mov
inc
cmpsb
add
sbb
int3
test
call
rcl
rcrl
test
xor
repz
scas
bound
enter
and
shrb
mov
cmp
or
test
les
jecxz
ss
xor
inc
xor
inc
or
mov
adc
shlb
pop
outsl
sarl
test
xor
test
rcl
add
test
pop
es
sbb
aaa
shrl
cmpsb
aad
dec
add
dec
sbb
fdivrs
mov
push
add
addl
test
mov
das
or
dec
test
cmp
push
sbb
test
mov
imul
mov
cmp
daa
test
xchg
pop
movsl
test
insb
xchg
push
sbb
enter
call
mov
rolb
sbb
test
inc
js
and
mov
test
or
mov
inc
or
push
add
xor
push
sbb
cmp
aam
add
cs
into
mov
dec
cmp
test
sbb
das
sbb
push
test
sbb
jmp
pop
or
ret
rclb
arpl
mov
dec
cmp
aam
push
or
hlt
nop
mov
orb
inc
inc
aaa
imul
add
je
test
push
test
call
push
sbb
jge
jae
test
loopne
test
add
push
call
xchg
or
int
jl
cmp
ss
lcall
pop
add
and
test
dec
xor
or
je
or
insb
insl
or
mov
inc
jo
mov
shrb
imul
test
je
cs
leave
xor
add
sti
lret
call
sbb
mov
push
addl
dec
or
cmp
xchg
and
mov
xor
nop
inc
push
test
inc
ret
imul
jp
cmp
adc
dec
rolb
rcl
adc
sbb
jno
fisubrl
test
test
xor
sbb
je
ret
inc
inc
inc
shrb
je
test
out
xor
nop
mov
mov
xchg
inc
push
mov
inc
jmp
dec
and
pop
lcall
call
adc
mov
popa
jo
ja
cmp
cmp
daa
adc
xchg
add
or
into
ds
jmp
out
loop
jge
aaa
imul
and
pushf
popf
aaa
dec
in
sub
mov
repz
cmp
lods
mov
push
ret
mov
xchg
dec
inc
xlat
or
cmp
mov
cmpsb
test
dec
pop
ret
sub
pop
out
inc
push
mov
clc
xchg
xchg
lret
inc
push
cmp
aam
sub
jbe
lods
ret
mov
jmp
push
xor
dec
dec
lahf
rorl
popf
test
ffreep
add
ja
pop
xor
std
mov
or
scas
test
add
jl
dec
or
sub
inc
pop
and
fiadds
push
add
test
push
xor
inc
jnp
or
in
add
xlat
jae
or
lret
sti
push
les
test
dec
inc
or
mov
push
sbb
inc
shr
mov
pop
js
inc
pushf
or
movsb
mov
mov
fs
repnz
sbb
repnz
dec
xchg
inc
sar
jnp
je
add
js
inc
sarb
sarb
int
add
sbb
negl
xchg
dec
push
dec
dec
lods
sbb
sbb
faddl
cmc
loop
jb
jae
popf
dec
mov
shrl
push
cwtl
xchg
inc
scas
sti
or
test
rcl
adcl
inc
adc
push
out
roll
sbb
call
and
dec
punpckhbw
jl
aam
in
sub
addl
icebp
and
outsb
add
jg
test
mov
scas
and
iret
test
mov
iret
sub
sarb
es
xor
push
or
or
dec
add
xchg
pop
rcl
fwait
shrl
insl
rolb
push
and
or
dec
push
xchg
dec
adc
xor
xor
adc
xor
inc
cmp
jl
sbb
rclb
popa
dec
or
sub
and
pop
popa
mov
sbb
call
popa
dec
push
and
stos
out
call
or
call
xor
cmp
inc
mov
dec
ja
push
push
cwtl
xor
mov
jmp
sub
sarl
inc
xchg
ret
push
inc
pop
sbb
xchg
cmp
push
push
xchg
sub
xchg
fnstsw
xchg
out
ja
push
inc
sub
inc
pusha
rcll
fadd
popa
push
mov
gs
sub
movsb
ret
push
xchg
push
xor
movsb
repz
push
xor
loopne
add
sbb
jmp
out
and
push
mov
imul
push
clc
cs
call
ffree
popa
and
pop
xchg
jne
push
mov
das
dec
mov
push
xchg
xchg
xchg
or
xor
xchg
andb
or
xchg
testb
pusha
mov
add
frstor
xchg
aad
inc
outsb
pop
xchg
xor
xchg
inc
test
loop
inc
inc
out
adcl
dec
enter
xchg
inc
inc
xchg
nop
and
adc
jmp
xchg
mov
and
call
cmpsb
and
xor
xchg
aaa
mov
daa
out
push
adc
or
push
scas
cmpl
ja
cmpsl
outsb
jae
lea
and
push
cmp
adc
add
cmp
add
fwait
stc
dec
daa
lret
inc
movsb
add
incl
jl
je
and
xor
jp
bound
xchg
pop
xchg
addr16
sbb
cmp
cld
dec
inc
dec
mov
adc
jmp
inc
or
test
cmp
mov
cmp
andl
cmpsl
cmp
addl
pop
sub
pop
push
jns
push
cmp
xor
out
mov
inc
sub
repz
insb
or
sub
enter
adc
imul
dec
mov
inc
outsb
adc
jmp
cs
fisubrl
sub
ljmp
and
loopne
adc
inc
pop
adc
repnz
cs
mov
nop
jp
rcrb
and
cmp
pop
push
sbb
add
jb
xor
inc
outsl
cmp
push
inc
call
ficoml
ss
call
frstor
sbb
inc
rcr
add
pop
mov
xor
or
jne
test
cmc
xor
movb
insl
int
add
jmp
cmp
inc
mov
jmp
dec
jmp
xor
add
inc
adc
inc
jmp
inc
inc
inc
pop
je
cwtl
dec
call
rcrl
sbb
cmp
hlt
add
sbb
mov
mov
mov
fs
stc
add
lock
mov
xorb
cmp
or
je
jg
loopne
movsbl
and
cmp
leave
andl
fcmovnu
insl
dec
into
call
xor
inc
jmp
push
je
pop
add
or
jmp
adcl
outsl
sbb
add
out
pop
jl
enter
sbb
adc
push
mov
push
and
mov
add
rcrb
div
cld
rcll
out
push
fsubrp
or
xlat
sbbb
hlt
lods
inc
movl
je
sub
in
pop
jb
cmp
outsl
pop
inc
sub
pop
fisubrs
jge
sarl
fstl
or
inc
jecxz
shll
xlat
jne
push
out
aam
repnz
and
sbb
jmp
cmp
push
add
adc
push
add
ret
push
sar
inc
push
adc
push
lret
call
mov
mov
movsb
xor
xchg
sub
hlt
dec
sub
ss
or
adc
jbe
mov
out
cmp
pop
jne
push
shlb
mov
sbb
or
sbb
and
dec
sbb
sbb
jno
rcrb
arpl
xorb
xor
inc
and
pop
and
filds
cmc
add
and
or
xor
lea
xchg
in
mov
dec
xchg
push
ja
and
mov
mov
inc
mov
or
xchg
ds
xor
sbbl
and
xor
movnti
lret
aad
inc
xadd
mov
and
xchg
les
add
xor
jecxz
sub
mov
or
mov
xchg
in
adc
xor
xor
xchg
js
popf
or
sbb
scas
stos
or
fsts
insb
enter
cmc
fists
es
in
xor
int
jno
sbb
mov
mov
mov
fs
outsb
push
leave
dec
mov
pop
push
leave
cmp
mov
enter
leave
int3
mov
mov
xchg
xor
nop
fs
ja
leave
xchg
insb
dec
xor
jbe
pop
add
lret
sar
nop
pop
add
push
sar
fdivs
inc
xor
dec
adc
leave
sbb
or
push
and
mov
push
call
inc
ss
rcrl
jnp
push
mov
xchg
aas
lcall
xorb
fwait
pusha
xchg
aas
pop
ror
ds
aas
dec
pop
and
inc
out
mov
inc
jecxz
pop
xchg
cli
jb
inc
add
xor
ljmp
xor
xchg
ucomiss
aad
mov
aaa
stos
leave
insb
call
and
xchg
sub
inc
scas
mov
inc
aaa
mov
ss
and
loop
add
inc
leave
jns
lcall
enter
leave
inc
ss
das
or
mov
insb
xor
mov
fbstp
call
bound
jmp
mov
fnop
rcll
pop
ret
mov
or
data16
adc
inc
sbb
cmpsb
mov
leave
nop
mov
pusha
sub
mov
add
insb
call
call
inc
imul
sub
leave
dec
adc
nop
rcll
sbb
adc
mov
fwait
mov
leave
and
sbb
mov
jle
jb
or
roll
xor
or
aam
push
rorb
pushf
rorb
push
push
xor
and
dec
sub
jne
in
mov
and
sub
fnop
sar
hlt
call
daa
pop
int3
mov
mov
dec
call
es
outsb
push
ss
mov
test
inc
jo
push
inc
lret
xchg
dec
xchg
mov
xlat
sub
jl
jbe
inc
lea
je
push
mov
test
iret
outsl
mov
lods
push
adc
call
call
push
sbb
or
inc
mov
push
inc
and
ret
ds
adc
adc
adc
loopne
add
mov
push
call
push
mov
in
mov
mov
mov
xchg
mov
testl
loope
add
adc
sub
daa
push
xor
mov
addb
or
sbb
mov
xchg
cwtl
scas
scas
push
mov
xor
cs
and
mov
push
sbb
xchg
mov
dec
lods
sbb
xchg
inc
leave
dec
jl
xchg
sbb
or
push
push
icebp
fdivrs
push
sbb
out
call
or
pop
push
jbe
xchg
push
jo
push
stos
dec
pop
inc
sbb
add
packuswb
ja
xchg
mov
jnp
mov
je
shrb
js
ja
mov
aam
pop
call
inc
push
stos
popa
dec
scas
out
dec
hlt
push
call
int3
pop
les
popl
pop
push
and
cltd
xor
pop
pop
and
popa
mov
cmpsl
mov
cmp
inc
call
jp
mov
adc
nop
dec
negb
inc
inc
ja
mov
add
inc
pop
aad
rol
lret
xchg
jb
push
and
dec
push
and
inc
enter
add
sbb
adc
movsl
adc
pop
jnp
and
lcall
call
push
mov
scas
movsb
inc
scas
adc
ljmp
sub
pop
xor
sbbb
scas
sbb
aaa
pop
mov
call
lcall
inc
mov
inc
call
adc
cmp
int3
mov
sbb
pop
mov
push
xor
ds
pop
fadds
arpl
rcrb
mov
ds
adc
mov
fcomi
cmp
adc
nop
xchg
jp
adc
pop
and
adc
mov
movsb
xor
and
pop
mov
mov
bound
pop
xchg
pop
inc
sub
negb
and
inc
or
and
sub
pop
out
or
les
in
fistpl
mov
or
stos
and
or
pop
sbbb
push
pop
sub
push
and
adc
inc
pop
add
test
inc
rorb
push
sub
lods
nop
sbb
mov
adc
mov
mov
rorb
mov
fucomp
sbb
and
lahf
jg
cmpsl
inc
mov
lds
xchg
sbb
ss
add
push
popf
sbb
ja
push
sbb
mov
sbb
dec
sub
lds
mov
pop
fsubl
in
adc
sub
inc
popa
outsb
out
cmp
pop
pop
iret
lds
bound
aad
lcall
sub
mov
sbb
mov
sbb
pop
mov
pusha
pop
or
adc
sbb
sahf
inc
int
call
inc
and
and
cmp
mov
or
popf
mov
mov
insl
mov
xchg
push
sbb
and
sub
xor
rorb
sub
rclb
sbb
mov
inc
or
sub
cmp
xchg
inc
xor
or
js
add
cmp
jp
sub
adcb
and
xor
aas
xchg
clc
cmp
pop
mov
cmp
cmp
sub
xor
gs
call
mov
mov
loopne
xchg
in
mov
xchg
or
mov
pop
and
cmp
or
inc
or
call
cmp
or
adc
mov
outsl
adc
sbb
dec
cs
aaa
add
cmp
test
dec
pop
push
push
mov
fs
pop
add
leave
and
sbb
test
jb
repz
jo
addl
add
sbb
and
or
sub
psubq
add
cmc
adc
mov
and
add
mov
mov
mov
xchg
shlb
or
punpckldq
add
cvtps2pd
fs
inc
mov
or
add
je
cmp
add
hlt
inc
fisttpl
nop
call
fidivrs
jo
movl
stos
movsl
xor
insb
dec
pop
inc
sbb
lret
sti
xor
adc
jae
xlat
adc
bound
jo
shll
nop
enter
sti
xor
rolb
mov
mov
sti
enter
movsb
and
adcb
inc
dec
test
mov
ljmp
sbb
lea
push
jl
sbb
push
int
sub
or
and
and
inc
call
or
orl
testl
adc
xorl
comiss
pop
int3
sub
in
mov
mov
sub
dec
push
xchg
nop
add
inc
push
adc
inc
in
sub
jnp
inc
adc
and
sbb
and
push
push
aaa
test
imul
mov
nop
aaa
cmpsb
shrb
les
dec
aaa
pusha
cmp
adc
mov
pop
sbb
shrb
ret
push
and
inc
notb
dec
xchg
test
pusha
add
and
adc
test
enter
ss
or
aaa
push
dec
inc
mov
dec
mov
aaa
push
mov
push
aaa
pop
adc
inc
dec
inc
aaa
psubd
xchg
push
ss
je
fsts
nop
add
mov
mov
xchg
inc
adc
aaa
inc
adc
mov
mov
cmp
xor
cmp
out
in
mov
dec
aam
or
inc
xchg
mov
aas
xor
unpcklps
das
cmpsl
cli
out
or
daa
call
movswl
and
adc
call
xor
clc
lret
in
xchg
sub
lock
call
adc
repz
fcomp
int
pop
and
dec
call
pop
mov
andps
movsl
pop
call
in
xchg
das
pusha
call
push
stc
repnz
call
je
gs
pop
dec
adc
pop
jl
push
fnsave
mov
inc
sbb
cmp
sub
es
sbb
adc
lret
lret
movsb
rclb
push
in
fnstenv
jl
unpckhps
ret
les
xchg
lret
enter
lret
fldl
mov
movsl
jb
jle
jae
jb
pop
sub
pop
call
push
in
inc
aam
movsl
jb
pop
lock
es
sub
adc
add
add
leave
or
movsl
mov
or
loope
adc
cs
sbb
cs
dec
in
mov
stos
and
push
mov
sub
cs
dec
mov
jle
jae
in
mov
cs
inc
gs
dec
mov
dec
xor
push
adc
and
or
pop
add
inc
sub
jo
push
or
push
cs
jb
sub
insb
and
int
dec
xor
jo
xor
sahf
fcoml
into
fistps
enter
je
data16
js
imul
data16
sbb
xorb
dec
lcall
or
cmp
inc
and
cli
cmp
call
lcall
sub
cmp
mov
cli
mov
movsb
mov
mov
movl
lods
sub
shrb
and
and
adc
rclb
xchg
and
pop
adc
xchg
lcall
mov
cmpsl
inc
mov
cmpsl
adc
inc
pop
pop
mov
add
mov
in
xor
aam
mov
pop
adc
inc
aam
add
shlb
add
or
adc
movsb
lds
adc
nop
out
stos
lea
test
and
and
or
mov
dec
fmuls
imul
xchg
xor
imul
cmp
enter
adc
xchg
inc
cld
ficompl
inc
imul
call
dec
inc
imul
shrb
and
sti
add
das
inc
rolb
mov
push
loop
shlb
call
movsb
sbb
sarb
xchg
jp
ret
push
mov
lods
dec
mov
sbb
cmp
push
pop
nop
sarl
push
adc
rclb
adc
int3
mov
mov
nop
inc
mov
and
mov
mov
es
mov
mov
mov
mov
es
push
mov
inc
adc
mov
pop
push
dec
enter
mov
add
mov
nop
add
xor
adc
addb
mov
sbb
adc
or
nop
mov
mov
jp
jno
push
xor
add
fs
or
or
jmp
fs
ret
inc
and
data16
dec
push
stos
rorl
push
iret
cmpsl
andl
pop
adcl
outsb
and
sbb
mov
fld1
inc
movsb
adc
push
daa
inc
sbb
in
inc
mov
pop
rcl
or
cmpb
test
xor
lods
mov
jmp
repnz
in
push
inc
xchg
cmp
pop
mov
dec
sub
pop
adc
mov
movsb
je
pop
push
dec
dec
inc
mov
xchg
or
push
xor
pop
lods
pushf
movsb
in
dec
pop
fwait
and
sbb
sub
mov
and
dec
test
push
call
push
dec
pop
mov
and
ret
jo
dec
dec
pop
inc
andb
or
xchg
pop
or
inc
dec
dec
pop
mov
inc
sub
pop
push
sbbb
fstl
xor
movsl
or
out
mov
inc
adcl
call
xchg
movsb
fs
jns
sub
or
dec
jmp
mov
rclb
cwtl
mov
sub
xor
pop
and
in
pop
mov
and
dec
stc
sbb
pop
shlb
and
lcall
out
push
test
inc
rorl
cmpsb
sbb
pop
sbb
xchg
adc
sti
call
movsl
or
xchg
adc
ja
sub
jno
and
or
adc
adc
mov
pop
sbb
push
sbb
sarb
mov
jmp
push
mov
xchg
dec
inc
xchg
clc
leave
lods
or
shll
dec
inc
daa
int
nop
push
and
rcrb
nop
daa
mov
ja
or
cmpsb
daa
dec
sahf
adc
out
daa
adc
and
daa
inc
fldt
rcrb
imul
or
or
or
and
or
adc
stc
nop
in
jmp
pusha
sbb
mov
nop
test
xor
xor
xor
mov
or
xor
pop
push
sbb
gs
cs
xor
int
je
fs
jecxz
push
sbb
jecxz
jmp
loop
lods
and
push
adc
or
pop
add
jnp
dec
push
push
daa
mov
cmp
and
outsb
or
inc
sarb
mov
nop
inc
pushf
mov
ret
mov
push
xchg
add
lods
push
or
ja
pusha
inc
pop
add
test
pusha
inc
pop
nop
cmpsb
roll
in
xchg
lock
cmpsb
popa
pop
test
add
xchg
pop
pushf
jbe
pop
inc
cmp
adc
or
adc
or
pop
mov
mov
inc
addl
push
or
sub
add
mov
cmp
jbe
nop
roll
mov
aam
mov
add
sub
imul
arpl
dec
pop
pop
pop
test
pusha
pop
stc
push
sahf
adc
ss
add
pushf
or
cmp
sub
cld
jb
mov
dec
popf
int
out
je
add
sub
or
mov
mov
scas
push
mov
push
dec
mov
inc
push
cmp
mov
mov
loopne
les
add
mov
xor
sub
cmp
rolb
addb
and
incl
mov
jle
je
add
and
jp
into
shll
cwtl
and
movsb
or
add
popa
adc
and
je
inc
lea
inc
inc
xorb
inc
dec
xor
adc
xor
inc
or
mov
adc
xchg
ret
adc
popf
mov
jae
add
jp
push
and
loopne
push
addb
push
loopne
cmpsb
and
cmp
pop
sahf
cmp
push
inc
jne
pop
mov
or
add
outsb
add
jbe
fcompl
xchg
adc
movsb
fwait
cmp
and
push
loop
nop
rolb
add
push
sti
pop
shll
out
add
sbb
sbb
fwait
sti
pop
mov
or
int
daa
jns
and
cli
push
pop
inc
cwtl
jo
in
sub
popf
inc
adc
mov
leave
xor
call
mov
adc
xchg
pop
imul
push
ffreep
cmp
push
mov
mov
outsl
movsb
xchg
scas
and
incb
movsb
xchg
je
rcll
pop
dec
imul
inc
add
shr
xchg
xchg
push
mov
in
cltd
cmp
and
or
loopne
jb
mov
lock
cmp
mov
or
inc
inc
fwait
inc
xor
mov
push
roll
or
adc
and
rcll
rcll
sbb
sbb
shll
or
sarl
lahf
pop
fsubl
or
xor
sbb
sahf
stos
js
xchg
inc
dec
stos
sahf
xchg
inc
popf
and
dec
dec
aam
or
rclb
sbb
xchg
jmp
hlt
dec
je
cmp
mov
fcoml
mov
cltd
dec
xchg
in
out
pusha
sub
push
xchg
inc
cmc
call
popf
push
dec
sbb
xchg
std
insl
pop
je
push
call
sti
jno
cmpsl
mov
sbb
and
out
pop
push
dec
dec
out
pop
fstl
cmpsl
or
stos
cmpsl
and
loope
xchg
movsl
hlt
cld
xchg
pusha
mov
jb
je
dec
inc
mov
mov
fldt
mov
push
clc
push
xchg
jae
ficoml
pop
sbb
jb
xchg
inc
sbb
movsb
sbb
sti
fwait
repz
aaa
adc
push
jo
mov
mov
repnz
xlat
fwait
push
jnp
leave
pop
mov
add
mov
dec
mov
cwtl
clc
adc
lea
call
inc
scas
jge
adc
jb
adc
lcall
xor
push
push
mov
enter
shl
jge
adcl
ret
lcall
adc
cmpsb
mov
out
lcall
nop
adc
test
mov
adc
movsb
repz
mov
lret
xor
lea
jmp
add
add
adc
mov
int
mov
pusha
mov
dec
mov
cmp
cltd
inc
push
mov
dec
cmp
and
je
sbb
adcl
mov
inc
test
add
lcall
xchg
dec
xor
or
inc
inc
incb
popa
ja
mov
popa
add
inc
iret
mov
cmp
ds
jmp
and
sbb
out
sbb
out
sahf
out
scas
sahf
mov
out
sahf
bound
sub
or
iret
sarl
call
out
fisttpll
lods
push
mov
out
jns
push
inc
push
push
sub
cmp
sti
sahf
push
nop
movsb
push
push
xchg
jl
out
cmp
cmpb
push
push
pop
dec
cmp
sbb
out
push
repnz
fmulp
mov
test
mov
ret
into
sbb
cmp
cmp
repnz
loop
jns
cmpsl
stc
sbb
sarl
sahf
mov
sbb
repz
mov
out
ds
and
pop
jns
out
data16
nop
sahf
out
sahf
out
mov
fsubrp
js
negl
push
inc
push
sarb
adc
out
jb
jle
sahf
cmp
sbb
rol
loop
clc
adc
mov
imulb
push
cmp
aaa
je
fs
push
mov
sub
daa
pop
mov
mov
mov
lahf
jae
jae
fwait
insl
jbe
push
cwtl
cmpsl
insl
mov
iret
aad
imul
add
xrelease
test
scas
test
shlb
xchg
clc
mov
ss
sbb
ret
pop
aaa
jo
test
xchg
push
cmpsb
es
pop
jle
inc
push
push
jge
xor
xchg
or
dec
lcall
pop
jb
pop
aaa
rclb
pop
xor
mov
mov
dec
xchg
lahf
imul
stos
dec
jb
inc
js
xor
adc
xor
xchg
or
aaa
outsl
lea
or
or
bound
add
movsl
sbb
xor
mov
and
mov
fidivrl
push
mov
loop
or
das
repnz
mov
lahf
or
and
sub
inc
add
inc
mov
dec
scas
mov
push
das
push
cmpl
imul
bound
sti
sub
aaa
cs
outsl
and
ficomps
pop
data16
add
mov
das
cmp
mov
aaa
pushf
mov
jg
jae
ret
or
daa
std
jmp
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
lret
sub
and
jb
inc
and
push
jg
push
sbb
pop
dec
sti
rcrl
and
pop
dec
imul
call
rcrb
pop
inc
jne
outsb
je
test
fistl
pop
inc
js
sti
ss
inc
xor
mov
xor
xor
cmp
sub
inc
inc
xor
xor
xor
jge
sti
scas
push
cmp
inc
stos
xor
ss
mov
mulb
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
adc
mov
aam
lahf
lret
ret
cmp
jne
test
push
jo
or
pop
xchg
xor
pop
push
movsb
ss
xor
or
push
and
cmp
aaa
adc
xor
inc
pop
dec
add
addl
sbbb
push
xchg
shll
inc
push
dec
and
in
mov
std
cmp
ss
pushf
xor
add
adc
or
outsl
mov
dec
add
cltd
loopne
pop
adc
push
pop
fwait
popa
ret
push
dec
hlt
imul
ficoml
pop
push
sub
jae
inc
push
inc
out
adc
repz
out
sub
out
cmp
ds
inc
mov
lods
sahf
add
mov
outsb
lods
and
hlt
scas
or
dec
testl
xchg
add
push
or
das
mov
insb
outsl
xor
imul
movsb
fimuls
movsb
inc
je
push
push
lods
mov
and
sbb
sbb
jo
rcll
mov
popf
mov
fldt
inc
imul
imul
arpl
insb
mov
xchg
js
les
data16
ret
or
adc
pop
inc
adc
inc
and
xor
or
pop
insb
xchg
pop
push
gs
push
pop
add
mov
lock
jg
jp
sbb
or
inc
out
push
and
outsb
ret
daa
sub
jnp
jg
nop
mov
imul
imul
js
daa
jp
mov
scas
scas
je
dec
fs
mov
push
imul
push
jo
or
pop
sbb
and
test
push
int3
push
push
sub
inc
test
dec
aas
pop
fbld
pop
arpl
inc
cs
push
push
mov
cwtl
xlat
push
add
ja
cmp
je
outsb
outsl
jno
inc
or
popa
imul
mov
xor
pusha
mov
outsb
dec
sarb
adc
or
orb
pop
push
add
data16
sub
sub
mov
lahf
jno
movb
or
mov
inc
jg
mov
jo
and
xchg
pushf
add
sbb
push
pusha
and
ret
sbb
inc
out
add
popa
shrl
xlat
push
loope
adc
out
add
cmp
inc
adc
orb
out
jns
iret
or
add
mov
das
scas
xchg
cmpb
das
xchg
adc
xor
out
push
sbb
sbb
sbb
iret
repz
sbb
std
sbb
pop
repz
push
das
push
pop
nop
cld
and
push
and
jns
iret
jae
cld
stc
jp
push
cld
fdivr
pusha
xor
repz
stos
stos
sbb
lcall
test
stos
lahf
mov
and
cwtl
xor
aad
xor
test
dec
sbbb
xchg
ds
cmp
ret
scas
cwtl
xor
es
add
xor
cld
or
in
sahf
out
fmul
les
movsb
xor
stc
call
mov
jl
insb
push
cmp
pop
mov
jns
out
dec
inc
inc
cmp
iret
repz
xor
sub
and
cmp
repz
adc
out
cmp
or
add
cld
or
hlt
call
sahf
out
mov
nop
jo
repz
out
adc
pop
int3
mov
repz
mov
sbb
cmpsl
stc
cmp
cld
push
fcom
les
out
mov
js
sub
cmp
out
aam
mov
ds
inc
sbb
add
call
sahf
out
mov
ret
inc
jmp
adc
daa
bound
js
or
cmp
in
push
cmp
inc
xor
fisubrs
lret
sub
adc
push
xor
pop
push
inc
dec
cmp
fiadds
mov
notb
mov
mov
sub
sub
adc
orl
out
push
jecxz
inc
adcl
sbb
cmpsb
mov
adc
xor
cli
out
xchg
dec
and
pop
mov
pop
sbb
dec
add
push
ja
mov
push
jmp
les
xlat
shrb
aaa
jae
mov
lret
ss
insl
add
fadds
mov
js
or
sub
pop
js
shrb
icebp
or
mov
pushf
andb
rolb
ret
jns
inc
sub
add
mov
andb
add
sar
xor
xchg
cld
inc
inc
mov
jnp
out
cmpl
mov
loopne
jg
pop
jne
pop
stc
xchg
sbb
push
je
imul
ret
dec
push
ss
inc
les
push
mov
jo
push
lock
jo,pn
enter
scas
pusha
cmp
xor
in
mov
push
push
push
insb
das
push
cmpsl
sub
leave
jmp
jl
add
ja
lahf
add
das
mov
cmp
sbb
loopne
out
test
adc
mov
mov
addb
ret
in
adc
mov
in
push
data16
pop
sarb
jg
adc
inc
fcoms
aam
mov
and
cmp
psadbw
mov
outsl
aas
int3
data16
and
mov
ljmp
js
and
xlat
es
jns
pop
rcr
in
adc
or
push
lcall
pushf
setl
lret
outsl
mov
mov
or
push
cmp
popf
jl
in
push
daa
sub
xor
sbb
nop
adc
nop
mov
mov
aaa
mov
xchg
mov
aas
shll
loopne
jg
enter
pop
cmp
dec
dec
and
iret
fcmovnbe
arpl
popf
mov
aas
jbe
in
insl
mov
dec
jp
insb
adc
xlat
outsb
movsl
xor
loopne
dec
mov
movsb
dec
adc
mov
sub
lock
enter
scas
ja
dec
mov
rcrb
les
inc
insl
push
sti
pop
or
daa
lods
add
es
dec
imul
lods
or
ltr
sub
lcall
scas
pop
push
and
gs
dec
dec
add
dec
dec
cld
mov
push
add
push
outsl
ja
xor
in
cli
jle
jb
push
xchg
jno
sub
add
push
mov
daa
movsb
and
and
add
inc
sbb
repnz
outsb
inc
repnz
lods
neg
ljmp
xor
mov
or
inc
repz
cmpsb
dec
add
xchg
rcll
mulb
sbb
inc
add
insl
jo
dec
pop
adc
push
add
negl
dec
add
xchg
add
push
addr16
mov
push
popa
jae
push
jo
mov
jae
push
adc
movsb
mov
or
push
push
orb
push
mov
lret
out
adc
rorl
sub
push
inc
sbb
addb
adc
add
and
add
xchg
or
dec
sub
push
mov
pop
or
push
neg
scas
sarb
push
jo
jb
jns
dec
sti
xor
sahf
gs
xchg
push
push
lods
cmpsl
xor
push
sbb
mov
imulb
push
push
fcmovb
pop
ja
inc
popa
mov
inc
and
pusha
inc
inc
xlat
lods
inc
and
fidivrl
and
inc
imul
jge
xchg
xchg
mulb
mov
add
pop
add
cmp
or
push
dec
inc
add
out
mov
mov
and
gs
mov
add
subb
addr16
test
stos
outsb
es
pop
mov
scas
xchg
and
popa
push
dec
inc
cwtl
sub
pop
adc
sub
fs
data16
and
test
xor
inc
js
push
inc
cs
gs
push
adc
jle
icebp
dec
or
and
push
call
pop
adc
imul
add
sub
inc
dec
fsubrs
mov
aas
das
jecxz
call
mov
mov
scas
inc
add
shlb
stc
add
adcb
push
adcb
and
subl
xor
dec
dec
pop
add
mov
and
arpl
lcall
insl
inc
xchg
shll
push
outsl
mov
xchg
pusha
mov
roll
push
frstor
sub
add
sbb
inc
mov
pop
xchg
aaa
lock
mov
fyl2x
rcr
add
mov
jo
lret
jb
mov
jo
sub
adcb
arpl
inc
jmp
enter
mov
push
aaa
dec
mov
dec
pop
or
aas
inc
cmc
or
or
sbb
lret
mov
movsb
cmp
jmp
sbb
mov
cmp
add
inc
cmp
inc
mov
stos
iret
add
inc
jecxz
and
add
add
pop
shl
inc
pop
pop
xchg
push
loopne
cs
sub
movsl
mov
adc
arpl
sbbl
enter
add
scas
divb
into
pop
roll
in
xchg
add
push
xor
dec
test
xor
adc
jo
arpl
fcmove
pop
movsl
cmp
add
lret
xchg
into
mov
in
inc
cmpsl
add
cmp
push
push
mov
imul
xor
ret
push
and
jns
add
jns
cld
inc
jae
cmc
and
adc
add
je
xchg
add
xor
and
test
xor
pusha
lods
lds
mov
or
cmp
out
into
insb
sbb
add
sub
inc
push
xor
loope
or
dec
sbb
and
mov
rclb
fiadds
pop
lahf
sbb
std
loopne
or
fwait
xchg
and
pop
pop
nop
ja
cwtl
aam
push
jecxz
jmp
xor
adc
mov
and
dec
pop
clc
mov
add
pop
dec
mov
push
sbbb
push
out
adc
sbbb
mov
and
add
xchg
adc
dec
nop
imull
test
rolb
and
mov
inc
pop
pop
add
jbe
inc
dec
add
sahf
popf
lcall
xor
sti
stos
rclb
insb
dec
jns
dec
dec
jbe
addr16
pusha
sbb
xchg
add
pop
hlt
loopne
into
imul
push
jo
or
add
adc
push
leave
mov
or
mov
push
and
daa
cmp
inc
sbb
mov
imul
add
out
lock
sahf
out
enter
jns
mov
movsb
repz
repz
mov
leave
repz
mov
jns
pusha
push
pop
push
inc
cmp
jl
out
and
sbb
cld
in
sub
sahf
out
call
ror
shl
sahf
out
test
mov
jns
pusha
push
cmp
sub
jl
out
sbb
or
cld
in
repz
shl
in
in
int3
out
int
iret
mov
xchg
push
mov
js
iret
repz
push
inc
sub
and
cmp
jmp
or
and
adc
sbb
push
divl
mov
mov
dec
rol
pmuludq
jo
inc
jne
shl
scas
push
sahf
adc
push
nop
push
rcr
aaa
add
cmp
push
aaa
bsr
lret
and
add
jbe
and
orl
pop
jg
sbb
lds
pop
mov
xor
cmpsl
mov
sbb
inc
mull
and
fdivs
or
mov
jae
pop
inc
sub
orl
pop
das
addb
and
xor
add
shlb
pop
add
in
cmp
jo
bound
and
outsb
add
adc
dec
cmp
insl
xor
mov
and
jbe
and
dec
shlb
scas
lahf
dec
adc
mov
xor
xor
ds
je
pusha
pop
pusha
pop
mov
xor
jb
imul
sub
imulb
mov
sbb
cmp
inc
js
and
loopne
sub
and
pop
or
add
jb
jne
ret
js,pt
es
popaw
insb
into
fiaddl
stc
lods
rclb
sti
ss
xor
rcrb
imulb
add
inc
pop
pop
adc
push
adc
les
xor
sbb
jmp
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
incl
xor
sub
inc
ss
ss
es
dec
aaa
push
aaa
mov
dec
dec
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
sar
add
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
ljmp
xor
xor
xor
xor
mov
xor
xor
xor
lock
jg
xor
out
xor
xor
xor
xor
xor
xor
jg
fidivl
scas
xor
shlb
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
fs
loopne
sbb
jno
mov
aaa
loopne
add
or
jg
into
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
decl
push
cmp
jl
cmpl
mov
cmp
push
adc
ljmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
incl
dec
jle
cmp
jo
test
mov
aas
push
call
aas
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
pop
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
pushl
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
mov
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
sbb
cmpsb
bound
aas
ja
pusha
pop
cld
dec
mov
xor
pop
xor
inc
pushl
push
xor
xor
xor
xor
xor
xor
xor
aas
clc
mov
xor
xor
lcall
lahf
push
xor
xor
xor
test
mov
mov
nop
xor
out
jmp
in
xor
scas
clc
xor
cmp
pop
pushl
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
icebp
jg
lds
in
in
cmp
cmp
std
cmp
cmp
inc
jno
adc
sbb
cmp
cmp
loopne
cmpb
ds
aas
jmp
lcall
jle
xor
xor
mov
ss
ss
xchg
cmp
cmp
fcomip
jmp
mov
mov
mov
cmp
cmp
cmp
cmp
jg
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
mov
adcb
aas
sarl
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
aas
clc
or
scas
xor
xor
xor
loop
xor
xor
mov
js
mov
xor
xor
scas
std
xor
cmpsb
ss
jmp
incl
ss
add
or
aaa
and
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
incl
or
cmp
xor
pusha
cmp
mov
lods
jecxz
idivb
push
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
aas
cld
jg
cmpb
cmp
push
stos
cmp
cmp
es
aas
or
cmp
cmp
cmp
cmp
cmp
repnz
push
jbe
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
cmp
cmp
cmp
sbb
cmp
dec
cmp
jmp
addr16
lea
scas
cmp
jg
cwtl
ds
ds
ljmp
data16
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
adc
into
or
push
xor
insl
jmp
push
sahf
xchg
les
fidivl
in
mov
xor
xor
xor
xor
xor
jg
mov
xor
xor
xor
xor
xor
xor
incl
cld
mov
cmpsl
xor
xor
scas
jno
xchg
xor
xor
xor
pop
filds
push
xor
xor
mov
mov
xor
fwait
sahf
cmpsb
mov
sbb
cli
bound
scas
cmp
sbb
loope
or
aaa
cmp
mov
mov
data16
dec
cmp
cmp
cmp
cmp
lods
cmp
mov
jg
jle
push
or
xor
cmp
bound
data16
push
mov
jb
jbe
xchg
ja
js
jge
cmp
cmp
sarb
cmp
cmp
cmp
cmp
jle
mov
cld
mov
cmp
ja
lahf
xor
xchg
aas
push
pop
lock
xchg
mov
insl
xor
mov
xor
mov
stos
xor
push
ss
fiadds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
repnz
fisttps
cmp
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
sbb
cmp
xchg
cmp
cmp
cmp
mov
and
cmp
pushl
cmp
fdivrs
push
aas
jne
mov
scas
mov
jg
mov
fwait
xor
xor
dec
add
push
repnz
aas
xor
jmp
pop
xor
fsub
adc
es
dec
ss
call
xchg
movsb
ss
enter
in
and
cmp
sbbl
cmp
mov
test
jl
dec
ljmp
stos
pop
push
imul
cmp
test
mov
ret
ljmp
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
cld
adc
xchg
cmp
cmp
pop
sarb
inc
cmp
cmp
cli
or
pop
and
push
cmpb
cmpsl
ds
test
aad
ds
ret
idivl
add
sbb
addr16
loope
ret
ret
sbb
pop
loopne
xchg
xor
xor
pop
xor
xor
cmp
or
xor
xor
xor
pop
std
pushl
xor
mov
xor
push
lcall
pushl
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
call
add
cmp
cmp
mov
cmp
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
lcall
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
cld
aas
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rclb
fwait
lock
xor
adc
xor
jae
bound
cmp
jne
jg
xchg
xor
xor
xor
pop
scas
adc
cld
xor
xor
ljmp
aas
push
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
int3
cmp
cmp
cmp
ljmp
out
xor
aaa
and
jg
into
cmp
inc
xor
xor
lcall
decb
das
ret
lods
xor
int3
mov
xor
xor
lcall
xor
xor
cmp
sub
sub
xor
sarb
inc
cmp
cmp
cmp
sub
xor
fidivs
cmp
jl
cmpb
cmp
sub
lahf
push
mov
stos
jo
fmulp
cmp
mov
cmp
cmp
aad
push
pop
mov
cmp
inc
lock
dec
cld
push
mov
sahf
or
adc
sbb
and
and
clc
add
sub
sub
xor
cmp
inc
cmp
aas
xchg
dec
cmp
pop
cmp
cmp
insb
cmp
mov
cli
jl
cmpb
push
mov
nop
lods
or
cwtl
mov
sub
xor
inc
lock
jg
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
sarb
clc
mov
aas
loopne
clc
jbe
push
out
ret
or
xor
xchg
xor
xor
xor
jmp
inc
xor
xor
cwtl
xor
xor
xor
xor
adc
xor
xor
fbstp
mov
jb
inc
xor
xorb
and
fimuls
xor
call
outsl
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
pop
std
das
ret
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jg
incl
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
fisttps
push
nop
aaa
xchg
aaa
cwtl
into
mov
incl
add
aaa
mov
mov
aaa
enter
mov
aaa
aam
fdivs
fcompl
in
mov
lock
hlt
xor
aaa
hlt
add
or
or
xchg
adc
adc
sbb
cmp
cmp
mov
mov
hlt
jg
fidivs
cmp
pop
sahf
jl
cwtl
cmp
cmp
add
jmp
sub
cmp
cmp
cmp
cmp
push
cmp
stos
stos
jl
test
mov
mov
call
lods
cmp
mov
cmp
adc
adc
sub
test
aas
in
aas
push
mov
jne
call
sahf
repnz
iret
xchg
das
jg
es
add
leave
div
nop
jmp
adcb
lret
icebp
andb
lods
out
dec
jle
sub
pop
repnz
pushf
xchg
cmpsb
rolb
push
lret
push
je
in
addb
add
pop
lods
fstps
add
fiadds
fsubs
jmp
pop
filds
jp
fimuls
jae
sbb
shlb
inc
lcall
sbb
imul
sub
sub
outsb
jns
dec
push
and
dec
mov
sub
in
fildll
iret
cmp
sahf
add
fists
imul
dec
cmp
inc
adc
aas
lods
aas
xchg
adc
push
lret
jb
ret
sbb
xchg
and
loope
sub
mov
or
orb
xchg
add
je
mov
or
and
push
and
or
leave
aam
enter
dec
push
lea
outsb
push
shl
jb
pop
in
or
push
sbb
xor
push
mov
loopne
jp
les
push
pop
fistpl
in
std
les
fisubl
xor
push
mov
jae
loopne
adc
adc
cwtl
pop
push
push
push
cmp
mov
das
inc
mov
jb
xor
dec
ret
lret
insb
pushf
loopne
or
jge
push
and
pop
rcr
mov
movsb
test
pop
xchg
xor
sub
jne
orl
or
inc
popa
ret
sbb
xlat
and
inc
sarl
mov
cmp
lods
notl
mov
sbb
movsb
imul
and
adc
and
jnp
jp
add
sbb
pushf
or
xor
subb
outsb
and
sarl
or
jb
lea
call
adc
lea
jmp
add
cmp
out
inc
lahf
xchg
fildl
mov
add
dec
mov
adc
ret
add
jae
pop
outsb
push
push
inc
sub
or
and
adc
lea
push
push
pop
jb
pusha
xlat
test
cmpb
jl
mov
enter
push
inc
push
andb
push
mov
call
inc
push
push
call
cmp
out
movsl
xor
stos
pop
das
add
mov
mov
mov
mov
lods
and
jbe
inc
cmp
andb
call
je
push
and
cmp
lea
fdivrs
inc
add
popa
add
testb
mov
dec
pop
add
xor
dec
or
lock
lret
les
push
mov
fstpt
inc
jmp
xor
add
lret
jne
mov
mov
and
mov
loopne
and
jmp
adcl
mov
xor
push
push
loop
nop
shl
cld
adc
add
adc
es
jae
dec
pop
jg
pop
add
fmuls
push
adc
or
pop
or
push
jnp
aaa
mov
dec
cld
scas
subl
or
jge
aad
and
loopne
int
xchg
or
xchg
xor
test
pop
adc
sub
iret
mov
sti
call
aad
stos
lret
or
jno
lea
out
pop
or
and
clc
and
pop
cmp
lret
das
add
pop
cmpb
or
leave
jl
push
in
mov
or
shlb
fcomps
add
fs
lods
popf
jnp
sub
and
js
cmpsb
rcr
pusha
xor
loope
subl
xlat
or
jge
out
or
out
lret
call
push
xchg
and
sub
xor
add
push
dec
push
rorb
push
mov
clc
push
sbb
inc
mov
inc
pop
xchg
xchg
andb
imul
xchg
mov
mov
or
pop
adc
adc
xor
pop
pop
hlt
sub
pop
movsl
sub
sbb
push
and
sarb
xchg
jo
xor
xchg
adc
dec
or
cmp
orl
or
mov
dec
pop
lock
or
mov
pop
adc
mov
vsubss
adc
pop
inc
or
in
adc
mov
out
shlb
clc
idiv
dec
enter
inc
stc
jbe
jnp
mov
pop
xor
add
mov
push
movsb
add
push
push
pop
mov
lods
or
cmp
mov
jno
cmpsb
xchg
mov
jo
xlat
call
add
sbb
mov
roll
rolb
bound
outsb
aas
adc
push
ja
xor
std
mov
adc
dec
and
add
movsl
adc
outsb
mov
or
push
dec
add
pop
roll
imul
add
mov
arpl
add
push
add
sub
movsb
hlt
lahf
dec
or
pushf
testb
push
adc
push
jge
imul
rolb
mov
sub
mov
push
mov
sarb
sarb
imul
dec
cmp
mov
bound
pusha
add
xlat
test
adcl
push
xor
adc
aaa
inc
add
xor
cmp
cmp
and
add
inc
push
xchg
movsb
xor
xor
mov
test
cmp
enter
push
or
mov
test
adc
dec
test
pop
test
adc
xchg
adc
test
pop
aaa
inc
movb
pmaxsw
or
push
arpl
in
shrl
dec
push
mov
sub
dec
stos
gs
lock
jmp
dec
pop
cli
sub
fadds
in
adc
xor
sbb
jne
pop
movsl
les
or
mov
test
push
xchg
mov
adc
fstl
cmp
outsb
push
rcrb
lcall
pop
out
cmpsb
push
subl
ret
lds
pop
clc
push
bound
pop
pop
xchg
movsb
jo
pop
ret
mov
push
xchg
sbb
push
inc
jnp
xchg
andl
adc
adc
xchg
sub
cmp
out
scas
xor
scas
sub
push
pop
rol
adc
adc
movsb
sbb
inc
sbb
sbb
dec
pop
sub
popf
nop
cmc
cmc
out
test
cmp
andl
jge
push
je
pushf
nop
jne
psubsb
adc
mov
gs
mov
sbb
or
enter
push
mov
rorl
bound
dec
mov
sbb
call
mov
lods
fldl
mov
or
lret
xchg
add
addl
mov
or
rorl
push
dec
jo
push
pushf
nop
cmc
ud2
inc
pop
adc
fs
or
sahf
jne
xchg
dec
adc
adc
inc
cld
jo
cmpsb
or
ret
call
incb
pop
sub
push
push
or
mov
dec
and
ds
andl
or
mov
push
add
inc
fcoml
aaa
and
xlat
inc
or
or
sub
push
mov
sbb
fwait
or
sbb
pop
ficoml
les
sbb
and
lods
sbbl
push
pop
sub
sbb
lahf
sbb
adc
mov
gs
cmp
or
inc
addr16
das
das
das
mov
sbb
sbb
cmp
sub
out
adc
or
cmp
add
inc
add
push
xchg
addb
mov
mov
cmp
xor
das
mov
add
cmpsb
add
inc
adc
mov
andb
pop
mov
push
and
inc
mov
pop
inc
mov
mov
or
leave
xchg
sbbb
pop
int3
test
dec
ss
movsl
or
mov
out
mov
es
inc
ss
fs
xorl
xchg
pop
andb
cmpsw
cs
pop
xchg
and
cmp
push
jns
lea
rolb
hlt
or
add
test
xchg
pop
dec
fldl
mov
repz
or
push
pop
push
dec
inc
cmp
add
mov
jmp
pop
test
mov
push
sbb
lret
and
orb
adc
and
repz
inc
pop
nop
xor
push
push
jl
mov
xorl
faddl
jno
mov
push
fsubr
jns
out
loopne
lock
add
add
add
pop
into
repz
sub
xor
inc
pop
movsl
addb
jge
pop
out
jae
xor
mov
test
call
or
inc
push
sbb
lods
nop
and
hlt
addr16
and
jns
or
jns
cmpsl
or
xchg
push
mov
outsb
inc
push
call
ret
pusha
mov
pop
or
pusha
hlt
push
hlt
test
pop
popa
loope
pop
push
cmpsl
inc
add
push
fiaddl
mov
nop
or
mov
sbb
inc
cmpsb
sub
sub
sub
sub
sub
out
sub
sub
sub
imul
xchg
sub
sub
jb
add
sub
lret
adc
sub
sub
nop
mov
nop
sub
sub
shll
sub
cmpsb
xor
sub
sub
imul
dec
notb
dec
pop
imul
inc
sbb
xchg
adc
mov
xchg
mov
test
mov
jp
mov
repz
jns
mov
push
fs
loopne
lods
subl
inc
jmp
pop
stc
push
scas
or
push
lret
ret
lret
or
sbb
mov
inc
outsb
sub
mov
frstor
call
cmpsl
or
push
jge
bound
sub
and
sub
mov
mov
ja
inc
adc
inc
mov
adc
es
in
sub
push
in
pop
hlt
ds
shl
mov
inc
iret
push
xchg
in
mov
adc
rorb
inc
lds
inc
mov
mov
adc
push
sub
push
je
aas
and
sahf
sub
xchg
mov
push
je
xor
inc
xor
filds
mov
inc
cmp
or
jae
inc
push
jmp
out
adc
ret
call
movb
les
inc
lret
test
lcall
adc
movsl
fdivp
loopne
inc
ret
pop
mov
mov
mov
mov
test
aaa
leave
cmp
jns
push
or
mov
dec
jns
mov
sub
pop
add
mov
lret
lods
ds
js
roll
fdivl
xchg
jns
xorb
mov
dec
pushf
rorb
outsb
cwtl
jns
sbb
mov
xchg
mov
mov
sbb
jno
jns
sbb
xchg
js
into
daa
jns
and
dec
sbb
and
inc
andb
mov
add
inc
ret
xchg
jns
ljmp
icebp
sbb
and
jns
sub
or
sub
pop
aam
inc
popf
rorb
fbstp
aad
fs
inc
xchg
fidivrs
mov
inc
fcmovu
movsl
enter
jmp
outsb
or
dec
cmpsl
inc
mov
fs
mov
test
test
into
sbbb
addb
dec
mov
dec
gs
or
adc
xchg
inc
cmp
test
mov
xor
clc
or
and
mov
sbb
pop
mov
aam
mov
inc
pop
lcall
ja
pop
aam
inc
sbb
inc
les
add
inc
xchg
inc
mov
test
or
fmuls
mov
mov
xchg
cmp
fiadds
ja
inc
cwtl
dec
mov
mov
push
in
xchg
daa
loopne
adc
and
inc
xor
adc
lret
int
xchg
nop
fisttpl
aaa
and
xchg
stos
mov
mov
mov
mov
inc
mov
xor
dec
call
test
lret
adc
sbb
mov
test
inc
daa
mov
rcrl
das
push
nop
jne
and
aaa
rolb
or
dec
movsb
sbb
cmp
jnp
dec
sti
add
and
mov
mov
mov
and
je
xor
sbb
outsb
xorb
inc
pop
push
mov
fwait
mov
xor
sub
into
clc
pusha
push
add
mov
mov
inc
jb
enter
add
push
test
inc
mov
or
xorb
inc
mov
and
mov
adc
dec
nop
push
sbb
adc
hlt
sahf
sbbl
or
nop
or
jl
and
xor
dec
mov
pop
push
add
dec
ret
ds
and
lds
je
idivl
shlb
mov
js
dec
nop
scas
repnz
and
pop
jno
sbb
xor
and
and
inc
inc
and
and
cmp
cmp
cmp
jl
je
mov
dec
mov
and
mov
dec
dec
nop
pop
lock
mov
ficoms
cmp
enter
lds
pop
jno
jmp
scas
call
cwtl
ret
mov
or
call
adc
movsb
repz
jo
inc
jns
fstl
aam
bt
jo
mov
lds
jb
test
aam
scas
sub
mov
jb
nop
aad
jno
pushf
push
aad
test
or
cmp
mov
imul
scas
or
test
push
ja
dec
jl
xor
pop
nop
arpl
fistpl
push
movsb
xor
push
out
outsb
je
aam
push
sbb
and
stos
inc
adc
and
cmp
aad
cld
xchg
push
repnz
xlat
les
add
cmp
push
sub
daa
or
adc
jp
daa
fidivrs
ficoms
cmpsl
and
icebp
sub
fnsave
ret
sarb
xor
repz
in
sbb
and
jne
mov
imulb
sbbl
fstl
add
xorb
lret
call
mov
pop
or
jo
pop
enter
jo
pop
les
lock
mov
jns
jb
dec
lock
pop
add
and
and
lret
push
pop
adc
cmpsb
cmc
mov
fmull
xchg
out
and
add
jnp
fisttpl
loop
dec
pop
mov
rolb
jnp
dec
xchg
pop
xor
pop
hlt
push
and
ds
loope
and
call
or
jnp
in
xchg
leave
sti
loopne
out
adc
xchg
xor
xchg
jp
sbb
fcoml
xchg
xchg
fildl
jb
stos
or
jns
xchg
xchg
cs
jmp
xchg
inc
andl
sub
arpl
mov
loopne
mov
adc
stc
adc
jmp
jno
stc
mov
stc
push
lahf
les
cmp
push
push
fmuls
mov
fcoml
icebp
push
pop
stc
aas
mov
fucom
stc
pop
inc
and
lea
xor
push
stc
stc
jge
xor
mov
in
das
sbb
dec
push
call
pop
or
mov
push
leave
inc
dec
adc
fstp
iret
das
sbb
psubb
pushf
xchg
frstor
mov
sbb
or
stc
mov
and
sub
fnsave
loop
fmull
es
lret
cwtl
gs
cmpl
movsb
jmp
mov
jne
sbb
aaa
jne
lahf
gs
je
add
das
pop
stc
jecxz
jae
enter
push
inc
aas
jne
sbb
mov
lock
imul
or
cltd
and
leave
jns
enter
adc
rcrb
pop
push
inc
adc
call
inc
enter
push
mov
popa
pop
enter
sub
add
cmc
adc
inc
bnd
sbb
ret
push
ret
call
push
fsubrp
mov
xchg
and
fsubrs
je
sbb
xchg
push
xchg
mov
imul
js
dec
movsl
sti
mov
or
lods
xor
and
inc
push
and
pusha
and
lock
mov
xlat
inc
mov
sbb
rcr
fldl
aad
sarb
mov
push
or
dec
push
lret
dec
jno
imul
ljmp
mov
pop
adc
or
shrl
sub
mov
push
xor
nop
mov
add
les
add
pop
fldcw
xchg
rolb
pusha
or
jb
pop
sbb
insb
cmp
and
les
pop
inc
cltd
inc
mov
rolb
dec
in
xchg
push
out
mov
adc
push
aam
pusha
pushf
fcoms
addl
xor
cmp
sbb
lahf
repz
mov
pop
adc
inc
sub
jae
adc
xor
mov
pop
or
mov
sbb
add
push
adc
add
or
pop
adc
pop
or
sub
push
pop
or
lahf
adc
leave
and
pop
into
jp
xchg
cmp
sub
in
shl
push
and
rorl
jns
mov
dec
arpl
jbe
sbb
or
movsl
shrb
mov
sub
push
sbb
xchg
adc
inc
or
sub
push
bound
adc
mov
insb
jecxz
add
dec
mov
inc
mov
xchg
adc
das
mov
adc
lcall
xchg
mov
imul
or
push
imul
push
inc
dec
jns
jmp
dec
sub
sub
rcl
flds
movsl
adc
les
movsl
adc
aam
push
call
inc
je
imul
shlb
repnz
sub
or
adc
adc
jnp
in
push
push
orl
or
test
inc
adc
jb
dec
push
xor
cmp
cmpsb
and
pushf
pop
adc
cmpsb
mov
cmpsl
or
dec
inc
cmp
lea
aaa
and
dec
in
jp
orl
push
daa
sub
push
cmc
xor
dec
shrb
sarb
jae
mov
das
lcall
jb
dec
pop
insb
push
push
cmp
add
jp
out
mov
pop
mov
mov
cmpsl
cmp
sbbl
lods
lds
mov
pop
sub
xlat
sbb
and
inc
mov
in
test
sbbl
inc
popf
sbbb
mov
loopne
xorl
cmp
xorl
pop
test
nop
or
fdiv
jne
adc
pop
call
push
pop
aaa
add
cmpsl
outsb
pop
xrelease
call
mov
dec
dec
rcrb
cli
fcoml
pop
push
xchg
inc
sub
cli
iret
stos
leave
mov
pop
add
in
mov
jmp
push
mov
sub
jns
pop
mov
pop
mov
cmp
ret
push
fistps
pop
mov
pop
jo
xor
jp
pop
popf
das
mov
mov
mov
fwait
mov
mov
enter
mov
mov
inc
lock
adc
in
sbb
push
jmp
aam
pop
add
imul
push
and
push
push
frstor
or
dec
in
in
pop
xchg
inc
add
out
loope
test
add
dec
or
add
sbb
shlb
xchg
xchg
xchg
lea
and
pop
and
jmp
adc
sbb
pop
call
lea
bound
mov
jecxz
int3
movsb
sbb
and
xchg
mov
lret
pop
or
mov
pop
xchg
xchg
xchg
xchg
mov
inc
mov
xchg
mov
and
xchg
mov
add
nop
mov
loopne
repnz
sarb
mov
mov
repnz
mov
cmpb
mov
in
pop
cmp
mov
sbbl
sub
inc
push
adc
sbb
and
icebp
mov
pop
jb
adc
lds
enter
mov
sbb
and
inc
push
jb
mov
and
cmp
push
mov
nop
sbbl
mov
enter
adc
in
pop
cmp
mov
jb
sbbl
cmp
inc
push
lods
mov
sbb
and
mov
jb
subl
mov
enter
cmp
and
or
sub
idivl
hlt
and
or
fs
xor
xor
or
popf
cld
adc
sarl
dec
or
dec
lcall
adc
xor
add
sbb
and
int
push
sbb
inc
and
mov
enter
sbb
xchg
daa
int
sub
mov
mov
jns
xor
cmp
mov
dec
cmp
mov
sub
push
adc
lock
inc
inc
call
and
rol
dec
push
xchg
cwtl
pop
push
movl
sbb
xchg
test
and
enter
stc
mov
cmp
jns
cmp
dec
or
subl
dec
inc
data16
rol
cmova
sub
mov
dec
inc
sti
testl
shlb
scas
inc
fst
fs
inc
sub
pusha
inc
daa
addr16
sub
rolb
pop
or
add
movsb
and
and
imul
and
ss
outsl
into
mov
addb
inc
mov
test
xchg
dec
dec
outsl
and
or
js
outsl
in
mov
cmp
and
adc
mov
outsl
xor
push
outsl
aam
dec
jbe
mov
outsl
fs
gs
mov
movsl
add
jmp
jbe
orb
outsl
and
jb
aam
dec
outsl
fistpll
imul
cmpsl
leave
sarb
outsl
shlb
dec
aaa
mov
sub
cmpsb
sub
xchg
out
cmp
outsl
pop
and
mov
outsl
xor
push
outsl
or
outsl
pop
mov
pop
sbb
imul
sbb
outsl
js
jmp
xor
fldenv
mov
inc
sub
pop
outsl
adc
outsl
out
nop
and
outsl
mov
push
mov
jmp
outsl
fs
push
sbb
movsb
lcall
cmp
fidivl
mov
mov
mov
nop
ja
mov
scas
outsl
sub
outsl
xchg
dec
jnp
mov
sarb
enter
outsb
push
pop
jmp
xor
mov
cmp
int
push
inc
xchg
test
shlb
mov
add
sbb
push
shll
outsl
sub
inc
xchg
sbb
outsl
dec
sub
fwait
cmp
mov
and
add
sub
hlt
outsl
loopne
xor
xor
lock
int3
movl
mov
fdivs
cwtl
adc
sub
and
call
xchg
mov
mov
and
imull
movsl
nop
pop
lock
sbb
shrb
sti
insl
fmuls
xchg
outsl
dec
fstpl
inc
sbb
pop
sub
ss
ja
and
lods
mov
lds
outsl
loope
sbb
repz
add
adc
sbb
xchg
inc
jae
nop
dec
roll
subb
call
nop
movsl
outsl
dec
sbb
push
pop
outsl
pop
lods
sbb
and
sub
dec
aaa
mov
lock
and
call
insl
xlat
outsl
cmp
outsl
mov
sbb
xlat
and
lret
xor
shll
outsl
add
stos
repnz
and
aad
outsl
cmp
outsl
adc
je
jne
sarb
test
jo
sbb
cmp
in
xchg
jle
sub
nop
movsl
leave
jno
arpl
outsl
jne
xchg
push
inc
outsl
xlat
dec
popa
ja
cs
jbe
and
mov
enter
outsl
inc
test
hlt
xor
outsl
cmpsb
jg
adc
pop
cmp
xchg
popa
xor
shlb
xor
pop
outsl
push
push
jmp
ss
sbb
cmp
add
sub
pop
outsl
cmc
or
outsl
rclb
and
outsl
pop
push
pop
push
add
outsl
adc
cmp
lea
sbb
and
outsl
ljmp
inc
xchg
dec
aad
aad
sub
cmp
outsl
stos
sarb
das
push
sbb
loopne
movsl
ret
repnz
outsl
mov
out
loopne
outsl
sarb
mov
sbb
add
std
mov
outsl
adcb
ja
mov
aad
jne
inc
xchg
into
cmp
adc
xchg
outsl
xchg
int3
cmpsl
push
nop
mov
mov
xchg
sbb
inc
fisttpll
xor
scas
inc
outsl
andb
hlt
test
outsl
sub
aam
jg
mov
outsl
push
stos
sbb
push
pop
outsl
lahf
push
sbb
sbb
xor
pop
ret
movsl
rcll
xor
ds
movsl
outsl
xchg
bnd
test
lea
mov
jno
adc
inc
sbb
outsl
fidivrs
outsl
pop
pop
mulps
jmp
add
adc
lock
adc
ja
call
outsl
pop
mov
lods
movsb
adc
push
outsl
shl
jno
sbb
outsl
jp
cmp
outsl
push
mov
loope
and
je
inc
xchg
inc
ret
inc
xchg
out
mov
outsb
and
sbbl
or
into
aam
jb
dec
repnz
xchg
push
and
xchg
out
andb
inc
mov
es
iret
cmpsb
push
dec
push
iret
jb
or
mov
mov
pop
iret
push
dec
mov
cmp
cmpb
or
push
jmp
adc
lcall
xor
mov
push
pop
push
fmuls
addr16
lcall
inc
cwtl
or
cmp
aaa
cwtl
adc
bnd
popf
in
mov
xor
jo
xchg
pop
clc
sbb
ss
gs
push
cltd
push
mov
adc
movl
sbb
movb
iret
out
jne
push
xchg
jmp
popf
jbe
adc
js
mov
xchg
cmpsl
jns
out
push
cs
pusha
jo
jl
out
aam
add
adc
repz
cmp
bound
mov
repz
cmpsb
mov
out
out
add
jns
out
jb
cwtl
cmpsb
int
jns
mov
fdiv
or
push
cmp
repz
ds
pop
data16
repz
cwtl
scas
out
ds
loopne
push
stos
and
out
sahf
inc
push
pusha
insb
jbe
rcrb
mov
xor
dec
repnz
lea
adc
adc
push
int
xor
and
dec
mov
sbb
imul
adc
sub
push
outsb
ds
imul
push
clc
mov
insl
sbb
mov
insl
cmovge
pushf
aaa
add
subb
clc
mov
push
mov
sahf
dec
or
add
test
adc
fcoml
adc
push
adc
xchg
sbb
call
jl
repz
sbb
mov
stc
sahf
push
pop
sahf
mov
and
and
cmpsl
stc
pop
cmpb
sbb
cmp
out
cld
cmp
xor
aam
or
adc
add
jo
pop
addr16
inc
xor
insb
pop
popa
add
xchg
iret
repz
or
xor
sbb
add
out
ds
xchg
hlt
call
out
aam
enter
jns
out
mov
out
sahf
mov
mov
out
mov
sahf
out
jo
push
sahf
pusha
pop
pop
push
push
dec
jns
out
dec
inc
inc
cmp
out
sahf
out
xor
sbb
sarl
or
nop
in
les
repz
test
out
pop
testl
mov
sahf
pop
dec
dec
inc
xor
dec
repz
clc
mov
int3
lods
stc
cmp
repz
in
lock
cmpsl
enter
xor
jg
push
add
in
mov
mov
stos
add
add
push
add
dec
test
inc
gs
mov
xor
push
push
add
popf
popa
add
xor
push
cmpsl
or
sub
mov
out
mov
ja
ffreep
fs
ss
dec
inc
or
inc
mov
in
cmp
jnp
or
sbb
daa
xchg
sahf
xor
push
and
aas
pop
pop
mov
xchg
or
les
push
daa
insl
out
jge
fs
jo
mov
inc
add
outsl
mov
iret
test
jge
imul
lahf
add
mov
iret
mov
xor
addr16
xchg
hlt
xor
es
sbb
xor
test
sbb
push
inc
mov
jl
push
adc
mov
daa
rclb
fcoms
cmp
mov
jge
and
cmp
pop
push
or
leave
inc
out
mov
sbb
dec
lahf
xchg
sub
dec
jg
dec
mov
fimull
push
mov
pop
jo
js
adc
ja
mov
push
clc
push
dec
sar
test
adc
jg
pop
or
bound
in
adc
xchg
cmp
mov
les
and
xchg
fildll
shr
jne
mov
lock
aaa
add
aam
inc
in
inc
inc
test
mov
sti
fmuls
jl
add
iret
jb
jbe,pn
cmp
jno
sub
pop
lahf
cmpsl
cmp
addr16
add
mov
cltd
aaa
mov
jle
mov
xlat
jne
fiaddl
xchg
cmpsl
daa
scas
cld
subb
sbbb
inc
xchg
and
dec
aas
outsl
xchg
out
mov
jne
push
push
arpl
std
xchg
jno
add
outsl
and
sbb
dec
loop
rcrl
int3
insb
sbb
jno
sarb
xor
add
adc
inc
ljmp
filds
sbb
addb
sbb
mov
gs
sbb
adc
stos
or
dec
mov
xchg
xchg
xchg
push
pop
sub
mov
andl
cmpsb
mov
push
call
xlat
sbb
push
sbb
sbb
push
shll
push
sbb
cmpsl
push
test
test
sbb
sbb
inc
shrl
mov
jecxz
add
sbb
sbb
es
add
sub
sub
push
sbb
mov
mov
inc
pop
add
mov
xchg
sbb
add
faddp
sbbb
mov
add
xor
mov
in
add
dec
sbb
inc
movsb
push
sbb
popa
lahf
sbb
rolb
xchg
movsb
sahf
out
adcl
jns
mov
out
pop
push
pop
dec
inc
inc
cmp
repz
cmp
sub
cmp
repz
sbb
lea
adc
xchg
hlt
xchg
in
iret
repz
push
in
enter
iret
repz
test
mov
sub
dec
je
insb
push
xchg
idivl
fs
push
dec
mov
out
jl
repz
and
add
in
xchg
push
enter
cmp
mov
cmp
repz
nop
mov
jns
jo
pop
inc
cmp
iret
repz
and
adc
lock
loopne
sahf
out
int3
mov
gs
out
pop
dec
xchg
add
dec
sbb
imul
lock
test
arpl
xchg
push
nop
inc
aad
das
verr
mov
or
sub
mov
pop
mov
in
mov
jg
in
pop
enter
test
lds
lcall
lret
push
mov
or
mov
mov
fxch
and
pop
adc
incl
rolb
add
push
and
push
sbb
pop
xor
xor
inc
xor
mov
xor
xor
sahf
xor
rcr
add
jg
xor
xor
xor
aaa
fbstp
arpl
sub
cmp
cmp
cmp
mov
push
cmp
andb
xchg
rorl
cmp
mov
cmp
jecxz
cmp
sahf
fdivrs
bound
cmp
xchg
fwait
popa
loop
cmp
mov
incl
ds
ds
data16
clc
incl
aas
fs
imul
aas
jecxz
call
mov
loopne
stc
and
sub
xor
jecxz
inc
and
lds
out
nop
rorl
loope
out
xor
mov
int
repnz
xor
xor
and
daa
xor
cmp
inc
sbb
pushl
push
xor
xor
jno
ja
lea
xchg
xor
adc
xor
xor
xor
push
test
mov
xchg
xor
xor
adc
sbb
sbb
cld
inc
xor
sub
xor
mov
or
xorb
xor
xor
ss
xor
xor
xor
xor
xor
jg
mov
mov
mov
mov
xor
xor
xor
pusha
cld
pushl
xor
and
sub
insb
ss
xorl
fbld
jecxz
out
push
jp
aaa
cmp
insb
mov
popa
cld
cmp
leave
xchg
jg
jbe
cmp
sbb
sbb
and
and
incl
xor
jp
test
mov
mov
repnz
cmp
pusha
cld
test
pop
dec
cmp
test
stos
push
arpl
jg
lock
mov
ss
dec
cmp
cmp
cmp
add
idivb
cmp
cmp
sbb
mov
add
pop
cmp
mov
add
int3
cmp
ds
mov
outsb
ds
cmp
dec
xchg
cmpsb
lds
repnz
cmp
and
inc
xor
xchg
jno
push
xor
xor
jle
xor
jecxz
push
xor
dec
xor
aam
fiaddl
xor
xor
cmpsl
jl
mov
repz
outsl
test
lret
jecxz
pusha
cmp
add
mov
fs
add
outsb
pop
jecxz
aas
xchg
sub
cmp
inc
js
jle
xchg
push
sar
xchg
cmp
cmp
jecxz
mov
in
adc
call
inc
dec
ss
cmp
mov
push
dec
idivb
xchg
inc
gs
out
jb
cmp
cmp
nop
shll
ss
cmp
jg
mov
cmp
cmp
movsb
push
adc
cmp
and
loopne
in
jmp
lock
xor
cmp
xchg
xor
mov
pop
incl
sti
mov
xchg
cmp
cmp
cmp
sub
ds
ds
ljmp
ds
clc
es
adc
and
dec
aas
push
aas
jmp
bound
xor
xchg
mov
xor
jno
test
mov
out
xor
inc
daa
pop
lret
loop
jg
mov
xor
jle
loope
xor
xor
shlb
inc
xor
insl
xor
cmp
fwait
mov
test
cli
xor
fildll
jecxz
adc
xor
sub
mov
pop
mov
or
cmp
inc
icebp
ret
int
adcb
bound
push
sub
xor
push
inc
outsl
clc
mov
mov
pop
cmp
outsl
movd
ss
sub
jno
ja
or
or
sbb
cmp
cmp
cmp
scas
push
out
nop
icebp
dec
addr16
cmpb
cltd
cmp
cmp
fbld
scas
cmp
sbbb
sub
sub
sysret
jmp
inc
outsl
or
mov
dec
xor
lock
xor
adc
xor
orl
mov
pop
xor
jns
mov
out
push
and
ss
das
ss
mov
mov
aaa
pop
dec
xor
xchg
jno
cmp
push
mov
lret
cld
fdivp
cmp
cmp
cmp
mov
decl
imul
cmp
cmpsb
cmp
cmp
cmp
cmp
cmp
aas
iret
aas
loope
or
scas
pusha
add
cmp
sbb
xor
jae
test
xchg
mov
fbstp
icebp
push
sbb
push
push
push
fcomip
push
sarl
or
ss
aaa
cld
jg
mov
sarl
icebp
cmp
cmp
cmp
adc
fs
or
mov
mov
xor
out
adc
fs
ret
ret
popf
outsb
and
into
sub
push
cmp
cmp
jb
jnp
rcrb
mov
lcall
subb
pusha
or
or
adc
and
xchg
mov
xor
je
jl
xor
out
or
mov
nop
sbb
ja
cmpsl
test
pop
mov
insb
lcall
mov
aad
jle
lret
aam
ret
call
hlt
test
mov
stc
int3
nop
push
and
out
pusha
add
pop
sub
push
sub
js
jl
mov
into
test
mov
enter
mov
mov
int3
xor
out
sub
out
call
pop
sub
sbb
lock
adc
xor
sbb
dec
cmp
inc
xor
icebp
aad
push
xor
xor
xor
insb
je
call
jl
call
xor
movsb
xor
inc
jg
scas
mov
mov
call
shlb
ret
call
lods
outsl
sbb
ja
jo
je
xor
or
add
jle
jecxz
inc
xchg
cmp
xor
loope
inc
push
push
sbb
shll
xor
add
mov
pop
pop
daa
cwtl
out
fdiv
dec
pop
cmp
cld
stos
xor
xor
inc
xor
xor
pop
loopne
mov
xor
xor
jnp
jecxz
lea
loop
xor
fistps
pop
xor
xor
and
inc
shlb
ficomps
ret
push
and
std
jno
push
fmull
out
xor
xchg
mov
push
dec
xor
data16
sub
pusha
jo
xor
jb
xor
jo
jo
cld
cmp
inc
xchg
dec
xchg
push
call
pop
jl
pop
xor
mov
jo
js
jl
xorb
sub
xor
xor
xor
xchg
rcrb
andl
ficoms
leave
clc
addl
xor
arpl
xchg
mov
jo
nop
ljmp
aam
inc
add
fdivr
mov
dec
inc
dec
inc
cmp
jo
neg
push
clc
add
add
or
jg
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
decb
dec
add
or
pop
sbb
adc
adc
outsb
xlat
push
adc
add
data16
or
mov
add
rolb
or
xchg
add
lods
roll
inc
or
sti
push
add
pop
xchg
mov
sub
push
jb
imul
ljmp
sub
ds
xor
adc
pop
and
jmp
jno
xor
inc
mov
adc
xor
cmpb
jb
mov
fs
arpl
aaa
sbbl
shlb
icebp
and
inc
or
adcb
push
sbb
xor
push
scas
pushf
into
add
adc
pop
testl
adc
push
adc
adc
cld
push
pop
popa
jno
and
adc
mov
or
xor
lock
stos
and
loope
icebp
mov
dec
inc
jo
mov
mov
rorl
mov
fiaddl
or
adc
stos
js
jg
in
push
jo
or
add
lds
cld
fcomip
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
or
lcall
std
movsl
jecxz
cli
pop
mov
mov
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
jmp
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
ja
jmp
orb
int3
lcall
mov
push
pop
mov
pop
pop
fbstp
movb
xchg
sbb
scas
adc
mov
xor
lods
ljmp
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
ss
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
mov
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
pop
cwtl
int
arpl
push
out
or
addr16
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
sti
fildl
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
hlt
add
mov
out
pop
jb
mov
incl
or
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
jbe
sti
loope
mov
sar
andl
aas
icebp
testb
mov
mov
fadds
in
sub
jno
push
lcall
jg
jg
scas
cld
or
push
inc
sbb
paddb
jg
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
jg
lcall
lock
jae
cmp
test
loopne
cli
adc
aaa
xchg
fwait
in
imul
in
add
inc
adc
loope
fisttpll
out
aas
insl
ror
sar
cli
push
push
push
idivl
cmp
sub
pushl
mov
jg
je,pn
sub
jg
imul
mov
mov
incl
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sar
scas
cmpsb
orb
mov
cmp
mov
das
jmp
xchg
pop
clc
pop
hlt
lret
jg
push
add
lea
jg
gs
std
xorb
cmpsl
jmp
imul
outsl
adc
ret
das
pop
pop
pop
shlb
push
mov
sbbl
jno
or
sarb
std
adc
push
cli
mov
mov
mov
lcall
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
call
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
decl
xchg
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
pop
lock
call
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
in
andb
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
call
test
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
fildll
sbb
ftst
jbe
xchg
and
jae
inc
test
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
call
adc
pop
cld
addl
adc
and
insl
rcll
fmull
enter
jecxz
scas
decl
dec
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
testl
mov
jg
mov
aad
test
inc
mov
mov
iret
push
inc
ljmp
jbe
push
sbb
stos
icebp
pop
incb
jno
idivl
push
inc
jecxz
sbb
sarl
adc
loopne
pop
cmp
add
mov
mov
stos
jge
and
cmp
dec
push
lock
mov
aas
mov
fsubrl
lock
incl
insb
push
ret
push
clc
xchg
adc
in
mov
aam
and
mov
adc
inc
aas
push
rorl
jmp
rolb
pop
inc
jb
fistpl
adc
call
call
sti
jno
pop
nop
mov
inc
sti
arpl
daa
std
or
xchg
lcall
incb
popf
push
loop
sbb
or
imul
xor
dec
mov
pushl
fsubr
fistps
lds
fidivrl
jg
stos
icebp
jg
pop
add
dec
mov
sub
jge
xor
lahf
les
aas
mov
repz
sbb
cld
addl
sbb
rol
stc
mov
lahf
outsl
int3
push
sbb
pop
mov
aas
pop
test
bound
pop
outsl
xchg
decl
lock
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
rol
mov
jp
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
decl
loopne
shrb
rcl
jg
adc
xor
pop
rcr
cmp
decl
sub
jmp
lea
jp
jnp
jecxz
adc
incl
ds
pop
adc
imul
or
inc
pop
xor
rorb
ljmp
jmp
xor
subb
iret
mov
lock
inc
cmpsl
enter
mov
into
ret
incl
insb
or
and
xchg
fdivp
mov
insb
test
aas
repz
jle
sar
outsl
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
sub
lcall
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
adc
jne
pop
cld
or
dec
ss
jnp
leave
inc
lods
movsb
or
repnz
mov
add
call
outsl
scas
cli
in
cmpsl
lret
pop
in
cmp
jmp
mov
clc
adc
jmp
hlt
dec
mov
inc
sbb
xlat
inc
aas
mov
jg
mov
mov
or
addr16
sbb
cld
daa
jp
std
adc
cltd
aad
ret
leave
mov
ret
nop
cmp
das
incb
lock
jg
pop
pop
div
cld
idivl
fs
aas
adc
loope
jae
jmp
shrl
je
jge
pop
sub
jb
out
xchg
add
out
icebp
mov
xchg
insb
clc
fndisi(8087
fisttps
sti
mov
fbld
es
inc
dec
das
jge
mov
cmpsb
cmp
call
pusha
xlat
pop
lock
decb
adc
mov
and
or
mov
nop
loope
add
incb
in
cmp
int
add
push
pop
nop
or
dec
lock
or
mov
mov
jle
icebp
ret
ror
sbb
aaa
cmp
cmp
adc
shrb
clc
stos
sub
mov
pop
clc
loope
loope
mov
lahf
rcl
sub
dec
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
mov
mov
push
cmp
repz
shlb
jo
push
cld
imull
out
jg
jno
ret
cwtl
scas
xchg
xchg
arpl
xchg
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jg
adc
sbb
mov
daa
add
adc
add
mov
outsl
xchg
push
imul
pop
stc
push
dec
out
fstpt
mov
repz
les
dec
std
add
fsts
dec
aam
subl
add
push
sti
pop
inc
add
or
push
nop
mov
dec
ret
test
and
call
ljmp
incl
xchg
sub
cli
test
pop
jle
jmp
jae
enter
bound
push
cmp
out
daa
or
mov
les
cmp
xlat
jecxz
pop
dec
test
mov
push
shl
adc
cld
xchg
jl
pop
notb
ud0
decl
lcall
and
negl
in
pop
pop
sub
stos
call
adc
or
lcall
inc
push
sbb
push
sbb
dec
jne
push
pop
fwait
insb
sbb
sbb
lcall
insl
sbbl
jb
in
aas
std
sbb
ret
scas
cltd
testl
mov
sysenter
jmp
cmp
repnz
in
push
out
or
jle
call
call
cld
pop
mov
fsubrs
andl
pusha
add
xor
pop
insl
jns
inc
inc
repnz
in
aas
int3
sub
xchg
fisttpll
gs
or
inc
mov
push
cmpsb
cmp
sub
call
sbb
addb
add
jno
or
incl
rcll
cmp
sub
ljmp
gs
lahf
cmpsl
ss
es
ss
dec
dec
rcll
stc
movsb
test
dec
or
pushf
push
dec
pop
mov
incl
dec
popa
outsl
scas
xor
lods
mov
jmp
sbb
incl
add
clc
and
pop
pop
push
insl
mov
and
inc
ds
add
pushl
or
popf
data16
fmuls
fistps
rcl
cmp
mov
or
cmpsb
sbb
adc
add
xchg
stc
hlt
sahf
pushl
push
adc
out
cwtl
jp
cmp
adc
fsubr
sti
enter
call
mov
ljmp
mov
jnp
cmp
or
cwtl
test
test
outsb
dec
inc
imul
incl
loop
popa
loop
int
jbe
dec
mov
add
xchg
movq
aam
incl
cltd
sub
sub
insl
fwait
xorb
cwtl
sbb
mov
mov
ljmp
xlat
fwait
hlt
pusha
cmp
aas
sub
push
and
mov
adc
lods
push
mov
push
out
jmp
inc
rcll
cmp
inc
inc
out
cld
fcoml
xor
sbb
stc
enter
movsl
call
mov
cmp
ljmp
push
mov
sbb
xor
cmp
decl
shl
and
repz
scas
pop
ret
fldenv
sub
push
test
cmp
xchg
aas
cmp
jmp
imul
fs
push
lret
or
cmp
decl
mov
int3
mov
jns
lahf
inc
cmpsl
pop
out
xor
adc
mov
mov
dec
jns
adc
and
rol
ljmp
ret
out
sti
fs
aas
inc
scas
sar
cmp
sub
cmpsl
xchg
and
push
in
cmpsb
iret
int3
or
pushl
or
xor
dec
ja
testl
mulb
mov
xchg
jg
lcall
add
sbb
stos
sbb
mov
pop
fcmovne
ds
in
repz
mov
arpl
lcall
ret
sbb
or
addr16
xchg
xor
push
int3
imul
mov
add
call
mov
sub
and
fisttps
div
jne
cmc
lods
stc
adcl
inc
or
shll
jg
bound
push
add
subl
lods
roll
dec
lar
xchg
push
lcall
or
mull
jne
mov
inc
std
ljmp
fisttpll
decl
fcmove
mov
push
test
mov
cmp
lea
test
mov
add
sar
lcall
std
mov
sub
in
mov
and
add
mov
add
or
mov
mov
inc
test
sub
mov
decl
cltd
sbb
add
rcll
jo
push
sbb
and
cli
jae
gs
call
repz
jmp
sbb
dec
rorl
or
mov
lret
mov
test
decl
decb
xchg
push
nop
cmc
jnp
decl
sub
negl
fcomip
data16
aaa
xchg
ja
popa
arpl
inc
pushf
imul
jg
ja
push
pop
dec
pop
dec
push
clc
sub
push
insl
adc
cmpl
decl
clc
loopne
inc
aam
push
in
ret
in
lock
xchg
mov
push
pop
or
jp
or
xor
int3
jnp
jge
sub
xchg
mov
and
and
stc
imul
jp
dec
dec
sbb
sar
jo
fisubs
sub
adc
jp
jecxz
aam
lods
adc
cmp
incl
fcomi
push
test
out
stos
popf
pushf
hlt
ret
mov
jge
pop
popf
inc
cmp
incl
lods
pop
je
lea
fsubrp
jl
das
mov
ljmp
fs
mov
repz
mov
mov
test
fcomip
inc
das
sub
and
hlt
dec
scas
adc
fidivs
ljmp
push
fsts
sub
out
test
mov
lcall
fldt
enter
jno
repnz
negb
xor
jp
fistpl
push
or
pop
fidivrs
dec
enter
xlat
pop
jle
push
fistps
hlt
sbbl
movsb
decl
xor
sub
les
pop
fcomps
push
push
out
and
test
mov
cld
std
jmp
xchg
inc
jo
mov
mov
and
ljmp
sub
jae
idiv
pushl
push
pop
push
mov
adc
mov
pop
inc
repz
aas
or
arpl
mov
sar
jo
xor
popf
or
jbe
sub
fcoml
sbb
in
imul
bnd
and
lcall
lock
stos
xchg
mov
ret
nop
lds
xchg
cmp
mov
lods
ljmp
push
sbb
xchg
js
xchg
call
call
jae
cmp
inc
pop
das
sbbl
stc
cmpsl
sbb
rclb
mov
incl
mov
push
mov
sbb
aad
dec
sti
lock
sbb
decl
xor
add
ret
imul
sbb
out
aaa
xchg
xchg
dec
jnp
mov
add
cmpsb
sub
xchg
inc
jnp
pop
pop
cmp
or
in
pop
imul
pop
dec
js
xchg
mov
mov
push
push
inc
jae
inc
lea
jb
aaa
sub
in
es
xchg
xchg
call
ljmp
mov
pop
aad
cld
fs
fstl
sbb
push
ljmp
addl
ljmp
iret
aad
pusha
enter
cmp
je
pop
jl
dec
xor
out
xchg
lret
cmpsl
add
arpl
jl
out
pop
ror
mov
popf
mov
data16
mov
popf
jae
mov
fsubs
incl
push
xor
inc
sbb
xchg
push
std
subl
sbb
test
pop
loopne
push
orb
scas
ds
sub
movsb
lret
repz
push
dec
cmpsb
out
fs
inc
mov
or
fcomip
add
ja
sub
insl
sbb
shll
sub
dec
adc
dec
in
dec
adc
sub
cmpsw
inc
call
out
mov
sbb
or
jmp
jno
das
or
out
rcrb
pop
repnz
mov
lock
incl
lea
xchg
cmp
sub
fmul
loope
mov
test
out
cli
inc
cmp
sbb
and
into
jg
pop
mov
shlb
add
cs
cli
mov
cmpsb
stc
cmp
jns
test
xor
mov
lock
cmp
aam
hlt
out
jg
push
movsl
mov
into
jge
jnp
fwait
adc
pushl
xor
enter
aas
lcall
or
and
cmp
arpl
fdivr
ljmp
in
mov
insl
cli
inc
cmpxchg
ljmp
mov
int3
test
sub
mov
adc
ljmp
call
outsl
js
pop
xchg
dec
jnp
cld
mov
xor
dec
xchg
dec
xchg
jg
scas
fwait
in
mov
loop
fs
cmp
fstps
pop
pop
adc
arpl
inc
push
cmp
jmp
xchg
insl
fwait
jp
bnd
mov
test
lahf
inc
vsubpd
jmp
incl
dec
shlb
xchg
add
fistpl
or
fisttpll
jecxz
decl
xor
nop
iret
scas
adc
imul
test
fnstenv
in
js
sub
mov
in
lcall
repnz
mov
inc
mov
add
sbb
test
loopne
stos
fisubs
ljmp
arpl
inc
mov
push
rol
or
inc
adc
dec
add
pushl
nop
ret
push
jb
lea
les
sub
lret
enter
sbb
stos
inc
sbb
jmp
jnp
sbb
mov
ss
sti
test
lods
rorl
loopne
sub
pop
cmp
incl
xchg
pop
std
test
into
and
sbb
fwait
mov
ret
or
mov
fldt
cmpsl
bound
xor
xchg
jnp
push
loop
and
push
sub
inc
jne
lods
std
sbb
mov
pushf
dec
fs
xchg
jno
jo
sbb
pop
sahf
orl
or
ljmp
add
adc
ljmp
popf
and
and
mov
ret
xor
ret
fdivrp
divb
inc
pop
or
xchg
pop
mov
je
sub
out
insb
inc
xchg
mov
inc
mov
xchg
outsb
pop
stc
inc
inc
movsb
fcmovnb
cli
mov
or
fcomi
and
lret
int
cmp
pushl
in
es
insl
pop
fldl
int
imul
inc
sbb
push
pop
fidivl
xor
incl
cld
iret
shlb
or
outsb
test
shll
cmp
and
mov
mov
xor
or
int3
mov
dec
add
mov
pop
jmp
ljmp
lock
sub
rclb
mov
scas
notb
iret
sub
je
push
aas
jg
ljmp
sub
dec
jb
sub
insb
mov
mov
add
call
lahf
pop
stc
sub
in
xor
rcll
xor
push
jg
loop
push
in
pop
mov
xchg
pop
xchg
dec
mov
pop
jmp
push
ret
rolb
decl
dec
std
adcb
pop
mov
dec
sbb
mov
dec
out
inc
shrb
ljmp
fldt
ror
mov
dec
fxch
addl
push
ss
decl
xchg
jp
ret
jl
push
sub
cwtl
add
lahf
loope
ds
test
std
ljmp
rclb
mov
imulb
mov
es
insb
add
mov
out
or
xor
mov
fwait
inc
lock
hlt
sbb
or
jns
mov
aas
mov
xor
cmp
push
xor
jne
and
ss
decl
ljmp
shl
ds
insb
pusha
jne
mov
push
inc
idiv
mov
js
insb
fcompl
ljmp
or
mov
js
stos
xor
ljmp
push
xchg
je
stos
mov
arpl
test
sar
fnsave
dec
inc
dec
jmp
sbb
aaa
dec
jl,pn
rcr
or
mov
mov
push
gs
jmp
xor
mov
in
std
sti
sahf
jecxz
push
lea
fimuls
fwait
rorl
mov
sbb
mov
jns
sub
inc
ja
test
lcall
fdivrs
in
push
mov
dec
decl
mov
fnsave
push
cmp
dec
lds
lock
mov
mov
cli
jg
gs
lret
std
ss
sbb
adc
fisubl
incl
fistps
sub
int
iret
stos
aad
insl
cwtl
jno
subb
ljmp
test
adc
out
jns
dec
fs
cmp
push
movsb
cwtl
mov
dec
add
push
inc
incl
clc
lahf
test
dec
fistpl
lahf
lea
ljmp
lea
xchg
addb
je
adc
dec
push
dec
cmp
pop
dec
incl
mov
mov
pushf
ljmp
or
add
adc
mov
in
mov
int3
jne,pn
dec
int
outsl
movsb
or
repnz
jno
outsl
xchg
adc
decb
add
imul
pop
ficoms
mov
pop
mov
sub
inc
mov
adc
fwait
in
push
dec
fdivp
fstl
ret
adc
and
imul
sarb
ljmp
sarl
popa
mov
sti
cmp
push
ds
xchg
xchg
jmp
push
mov
ljmp
jle
mov
sub
lea
mov
in
sub
js
pop
sub
sbb
icebp
lds
mov
sbb
pop
add
fldcw
fistps
push
sbb
rcrl
fnsave
andb
std
out
mov
cli
ds
hlt
jmp
fistps
or
dec
mov
fnsave
cmpsb
fsubs
mov
imul
mov
inc
sub
stos
flds
xchg
test
adc
stos
sbb
jae
jl
jns
lret
xchg
push
cmp
mov
fxtract
add
in
out
or
sbb
mov
mov
mov
call
pop
leave
pop
jae
stc
in
mov
cwtl
xchg
fisttpl
push
or
xchg
in
or
push
jl
sub
js
cmp
loop
mov
jns
and
cmp
jecxz
ret
or
jmp
imul
jo
push
arpl
lods
in
jp
adc
xorl
mov
insl
mov
xchg
fists
fucom
dec
adc
aad
sbb
sbb
cmpl
jl
mov
stc
inc
cld
push
outsl
and
repnz
outsb
test
jp
mov
pop
add
scas
lahf
push
sbb
or
mov
in
clc
sbb
stos
js
int3
negb
incl
cmpsb
mov
in
sub
lea
mov
dec
loopne
adc
ljmp
hlt
icebp
fldl
xorb
xchg
dec
adc
xchg
jmp
cmc
ljmp
lahf
std
fistps
xor
push
pop
mov
mov
sbbl
dec
pushf
push
pop
loope
pushl
push
clc
sahf
fists
sbbl
test
and
sub
ljmp
push
cmpsl
cmp
or
add
sub
int
sbb
pusha
and
sar
incl
mov
and
adc
pop
fucompp
data16
pop
stc
lock
lcall
sti
orb
dec
jl
out
lds
mov
sub
fistl
test
incl
stc
cwtd
insl
lods
lret
or
js
push
out
or
scas
clc
addl
or
adc
sar
lcall
xchg
and
and
push
mov
sarb
dec
divb
test
or
ljmp
inc
jo
mov
jne
popf
test
mov
fwait
and
pushl
daa
cmc
sub
adcb
in
jo
insb
mov
movsb
cmp
xchg
xchg
mov
decl
std
mov
mov
cmc
test
cmp
pop
cmp
xlat
adc
mov
or
mov
lods
cmp
jmp
sub
lods
add
add
ss
xchg
cmp
mov
jmp
mov
jge
mov
and
mov
adc
out
push
push
jns
lcall
jl
push
inc
cmp
mov
fsubl
push
pop
imul
mov
decl
adc
negb
sub
aas
xor
rclb
leave
cmpl
incb
pushl
add
popa
sbb
test
lds
es
scas
cmp
sbb
daa
fsub
inc
mov
inc
hlt
dec
xchg
jmp
mov
push
movsl
shll
or
sbb
inc
fistl
add
xchg
push
scas
push
adc
sti
dec
pop
jbe
xor
in
mov
lcall
rorb
mov
cld
jns
mov
jmp
push
inc
sti
mov
or
stc
leave
jle
jbe
fsubrs
sub
rclb
ljmp
shlb
leave
std
cmp
mov
adc
pushl
incl
lods
ss
push
cmp
mov
push
cmpsb
clc
xchg
out
fiadds
fs
out
jl
decl
aam
test
push
sub
add
cli
sub
dec
sbb
incl
cld
mov
mov
xor
and
rorb
jmp
ror
jne
jno
lds
xchg
repnz
jmp
xrelease
test
mov
push
out
sub
sbb
insb
add
leave
xor
push
les
fsubrs
xor
sub
jno
jg
push
mov
loope
ljmp
adc
in
pop
imulb
push
sub
jmp
dec
fwait
mov
adc
fisubrs
out
mov
pop
mov
shrb
sbb
pushl
cmc
and
orb
ficoml
jne
jae
jecxz
inc
pop
fisubs
lcall
xchg
mov
cwtl
xchg
jnp
sbb
dec
ret
push
jg
mov
or
addr16
call
dec
dec
mov
jmp
scas
std
mov
movsb
cmpsb
loopne
fmul
and
leave
mov
inc
mov
cwtl
loope
cli
mov
sahf
mov
mov
xor
shlb
sar
incl
rcl
xor
inc
push
mov
in
jmp
xchg
xor
jmp
stc
shl
sub
mov
ljmp
pushf
addl
dec
dec
add
aam
movsb
pop
mov
jmp
in
cmpsb
add
mov
cmp
andl
lock
jmp
enter
adc
mov
les
fnsave
xor
add
in
sbb
adcl
data16
out
fs
mov
and
icebp
push
or
out
pop
and
mov
sub
pop
add
mov
les
push
fsubl
subb
mov
xor
ret
decl
into
and
mov
lds
pop
xchg
dec
scas
test
jl
mov
adc
ljmp
jb
clc
xor
pop
jae
loop
jl
inc
fbstp
stos
sbb
sbb
push
aaa
cld
lcall
adc
or
mov
sbb
xor
aas
sbb
repnz
orb
into
stos
sub
repz
mov
idiv
xchg
or
cmp
jle
lds
jno
or
pop
xchg
pop
xchg
jo
aad
stos
ljmp
test
and
popf
je
xor
adc
mov
dec
pop
pop
xchg
ljmp
and
sbb
adc
cs
mov
ljmp
push
xchg
push
sbb
mov
loop
pop
test
jmp
pop
popa
or
pop
add
or
adc
inc
mov
jb
dec
add
cwtl
pop
decl
sbb
cmp
sbb
and
xor
scas
push
in
iret
mov
iret
divl
decl
inc
adc
cmp
push
mov
mov
decl
leave
mov
clc
insb
bound
lds
stos
dec
nop
push
mov
push
lods
outsl
sahf
jb
idiv
decl
mov
mov
adc
into
pop
addr16
inc
pop
repnz
dec
ficomps
call
add
lock
and
insl
mov
fdivrl
call
push
shl
addb
ss
and
pop
sahf
xchg
push
cmpsb
and
call
xchg
aas
into
mov
jge
mov
push
lcall
mov
lods
xor
cmp
ss
mov
or
clc
push
int3
stc
ret
jae
mov
lahf
jg
cmc
mov
jp
into
hlt
loopne
push
out
arpl
popf
and
push
sub
test
imul
clc
sbb
dec
std
out
out
fldl
lods
call
pop
lret
and
push
aaa
imul
aas
int3
xorw
jg
cld
test
adc
in
lcall
cmp
dec
lods
imul
mov
add
arpl
call
mov
pop
jne
sti
div
push
sub
mov
and
icebp
loopne
imul
jecxz
pop
out
cli
mov
cmp
ret
or
jp
cmp
out
in
ss
sub
jmp
jnp
sbb
or
imul
js
fsubr
lock
fnstcw
dec
test
decl
lret
mov
inc
push
fstps
mov
sbb
scas
push
and
popf
dec
cmp
pushl
jg
movb
ljmp
sahf
push
dec
fildll
pusha
fucomp
jbe
iret
es
incl
mov
divl
fnstsw
jno
push
movsl
jmp
add
fistl
dec
jecxz
dec
ret
xchg
adc
jmp
icebp
cmp
jnp
cmc
mov
add
in
fwait
jecxz
in
out
mov
cmp
xorl
mov
mov
push
fs
jb
cmpsl
in
push
jp
dec
mov
loope
cmp
pop
lds
shlb
je
ss
xchg
mov
adc
ljmp
imul
jbe
push
adc
fs
adc
add
jmp
pushl
cld
decl
push
aad
iret
push
call
imulb
cmpsb
out
cld
aaa
add
xor
lcall
push
xchg
lret
xor
data16
fmuls
add
lock
mov
sbb
push
sub
pop
sbb
call
int3
mov
jge
pop
pushf
cld
ljmp
sub
loopne
mov
jo
mov
push
and
test
inc
add
jmp
incl
or
dec
push
scas
std
xor
sub
dec
pop
pop
mov
xchg
adc
jmp
xor
in
xlat
pop
ret
mov
sub
jle
mov
enter
jnp
xor
mov
aas
sbb
aad
mov
push
mov
test
incl
in
je
nop
sbb
ss
pop
mov
fsubrp
pop
or
cli
mov
pop
cmp
mov
lahf
daa
call
int3
loop
lahf
enter
cmp
jmp
insl
push
dec
pop
xchg
leave
test
xor
mov
sbbb
in
rcrl
ljmp
mov
push
jle
xchg
pop
mov
sub
lods
in
ljmp
pop
jg
jg
push
insl
sub
push
or
push
xchg
add
push
into
cs
fs
stc
call
lahf
adc
xlat
out
add
rorb
iret
lods
pop
cld
cwtl
hlt
lea
mov
or
jmp
insl
stos
ret
les
push
add
lods
rolb
and
sub
add
filds
mov
dec
push
mov
cli
dec
xor
fdivrl
fildl
xchg
xchg
mov
pop
pop
pushl
gs
addb
stos
xor
dec
js
sbb
or
fcoml
lcall
sti
and
pop
daa
mov
int
cs
test
stos
icebp
adc
ja
in
call
jecxz
ficompl
push
insb
hlt
xor
or
dec
push
dec
je
popf
popa
pop
call
push
pusha
out
inc
mov
mov
scas
mov
xchg
shrl
data16
mov
js
stos
hlt
lcall
negl
pushf
ret
adc
mov
addb
adc
xchg
jg
popf
add
fisttpl
xchg
and
add
and
call
pushf
pop
mov
iret
xchg
test
sbb
jmp
mov
add
dec
xor
inc
in
rolb
pop
popl
jns
dec
bound
scas
adc
lret
popa
pop
dec
in
pop
jmp
pop
cltd
test
jge
movsl
pop
pop
shlb
int
cli
xchg
add
fst
lods
lahf
incl
inc
cmp
mov
addl
leave
push
cld
movsb
ds
adc
call
dec
outsb
aad
sbb
push
dec
dec
gs
notl
cmp
xchg
jns
mov
cmpsl
mov
push
add
int3
sbb
jle
xchg
ret
jne
push
fs
scas
call
push
fwait
pop
addps
loopne
cmp
cmc
inc
push
loopne
mov
aas
repnz
inc
ja
add
std
inc
iret
mov
fsts
rorb
test
and
insl
add
fsubrl
mov
cmpsl
mov
into
cld
out
dec
gs
cmp
lret
cmpsl
xchg
xchg
sbb
cld
ss
pop
and
lcall
xor
jo
fidivrs
xchg
cwtl
inc
cmp
loopne
cltd
push
testb
ds
lcall
out
jo
std
and
mov
into
mov
rorb
mov
ljmp
push
push
fbstp
pop
adc
in
outsl
cmpsl
mov
mov
xor
add
pusha
xchg
and
ljmp
movsb
or
mov
jmp
int3
sub
dec
push
movsl
push
fwait
out
cmpsb
cmp
xor
loope
in
lock
cmp
mov
xchg
push
or
pop
xor
xchg
inc
jo
inc
xor
sub
jmp
bound
test
mov
rorl
sub
cltd
adc
lods
cmpsb
decl
sbb
std
cmp
sub
rcrb
inc
stc
data16
gs
and
outsl
clc
incl
sbb
jecxz
je
push
arpl
push
pop
sub
incl
loopne
sub
outsb
adc
mov
or
leave
sbb
sar
movsl
addl
incl
lret
mov
push
les
mov
and
cmp
add
out
inc
stos
adc
lcall
adc
insl
ss
cmp
push
in
mov
pop
xchg
lret
push
loopne
daa
jns
call
add
repz
xchg
jle
mov
jmp
stc
loop
imul
jecxz
adc
cli
and
jbe
pusha
aas
enter
jle
cmp
lcall
and
cs
mov
mov
aaa
sbb
jns
mov
mov
pushl
cmc
outsb
jle
xchg
add
dec
int3
xor
out
pop
fmulp
lcall
lods
rolb
xlat
sbb
jb
imul
xchg
int
sbb
jo
rcll
imull
xchg
mov
lret
pushl
lods
adc
adc
inc
sbb
xchg
cmpsl
in
push
popf
jge
mov
sti
mov
aaa
pop
cmp
sub
push
adc
aam
mov
mov
pop
clc
in
add
mov
dec
rcrl
pop
std
push
sbb
mov
mov
jnp
pop
mov
mov
in
or
or
xchg
jge
into
ljmp
aas
movb
js
cmp
sub
lods
scas
jge
jno
fistpll
inc
mov
mov
xchg
push
fldl
mov
test
and
rolb
pushl
or
mov
push
xchg
call
scas
sub
xchg
jg
movsb
stos
int
je
data16
xchg
rorb
in
test
mov
roll
jno
das
jne
pop
in
mov
enter
jns
cmp
loope
outsb
aaa
xor
pushl
popa
cmp
aam
dec
lret
jmp
and
adc
adc
and
push
out
jae
ljmp
ljmp
mov
cld
int
or
and
jo
jp
push
or
adc
pushl
jb
into
cs
jge
xor
ja
pushf
pop
lcall
cmpsb
jb
sub
xchg
stc
adc
imul
gs
push
in
and
lcall
and
xlat
xor
mov
jo
mov
mov
int
jo
mov
das
add
je
mov
push
ljmp
movsb
fcmovbe
push
sahf
jb
mov
mov
mov
insl
xchg
pop
icebp
aam
inc
or
and
aas
push
add
mov
popa
nop
ss
push
js
call
leave
loopne
jl
sbb
jl
outsl
cwtl
xor
adc
inc
pop
inc
push
or
repnz
xor
jg
popa
outsb
pop
xor
xchg
or
mov
jg
jns
daa
sbb
push
or
pop
push
and
or
push
and
pop
test
cld
decl
popa
xchg
scas
scas
push
sub
pop
cltd
loopne
mov
mov
sub
mov
insl
addr16
std
pusha
mov
mov
xchg
fstpl
lcall
jl
dec
and
add
je
and
xlat
pop
or
inc
mov
xor
shrl
decl
fcmovnu
jmp
jae
sbb
dec
aas
testl
imul
ljmp
scas
nop
sti
push
call
xor
pop
enter
push
cld
ljmp
jnp
enter
adc
inc
insb
loop
sti
xor
lods
inc
loop
inc
out
mov
sub
out
std
pop
sbb
add
xchg
mov
mov
movsl
call
jp
push
out
ljmp
dec
inc
shl
daa
xchg
inc
xor
das
enter
jbe
mov
outsb
dec
sub
jg
test
cmp
icebp
inc
and
dec
cmc
std
jo
lahf
xor
sub
dec
and
or
jg
jmp
stos
stc
cmpsb
mov
cli
add
adc
add
add
jmp
mov
pop
sub
jmp
inc
and
mov
js
lods
jecxz
jg
jno
jp
mov
fsubrp
out
and
inc
lods
xor
into
push
sahf
daa
int3
or
dec
pop
mov
loop
and
push
and
and
dec
test
xchg
pop
std
push
lahf
out
mov
cmpsb
and
mov
aad
lcall
iret
call
xor
or
in
xchg
and
inc
ficompl
dec
jle
dec
popa
xchg
adc
lcall
inc
mov
cmp
add
popf
fdivrl
mov
pop
or
scas
or
inc
mov
xchg
jg
push
or
mov
dec
jecxz
lods
mov
add
xchg
into
mov
lcall
insb
ret
or
or
mov
call
iret
lahf
mov
push
call
not
scas
shlb
dec
inc
fs
or
push
stc
ret
pushf
sti
mov
pop
cmc
fstl
xchg
xchg
mov
cmpsl
loop
mov
sbb
jg
lretw
xchg
popa
push
push
sbb
mov
jl
cmp
imul
call
ror
push
mov
and
nop
pop
xchg
bound
adc
ljmp
cli
pop
lcall
cmp
adc
fildl
lods
cmp
test
jle
inc
jns
adc
xor
sbb
push
ljmp
jp
lcall
pop
call
sub
and
and
adc
cwtl
push
or
aad
xchg
lret
mov
jne
ja
mov
jbe,pt
and
jo
xor
add
push
mov
rcrb
cmp
sbb
stos
stc
fwait
ja
imul
mov
mov
loope
jne
adc
frstor
xchg
xchg
cmc
call
cli
scas
fiaddl
adc
mov
or
dec
inc
test
or
lcall
jo
pop
jp
jae
add
sahf
lods
into
fld
xchg
dec
sub
lcall
icebp
jg
fdivs
cmp
xor
jne
notb
dec
cmp
xchg
imul
inc
lret
fbstp
or
aaa
sub
mov
inc
test
xor
or
sub
lea
adc
aas
loope
lods
jmp
xor
in
cmp
or
out
outsl
mov
sti
xor
ljmp
int
cmpsb
out
and
sbb
ljmp
cld
sbb
fs
call
xchg
pop
push
test
cmp
out
cwtl
pop
lock
xchg
incl
mov
sub
push
inc
and
mov
jl
scas
mov
mov
xchg
into
mov
jns
jno
xlat
jge
stos
pop
iret
add
aam
add
cmp
out
leave
xchg
adc
dec
push
ja
je
cmp
pop
shlb
mov
mov
jmp
dec
hlt
gs
mov
mov
inc
stos
jl
jb
fsubrl
adc
xor
insl
xchg
test
andb
mov
sub
scas
jmp
fmul
enter
pop
std
pop
mov
jne
lcall
dec
out
popa
dec
push
pop
dec
sub
lcall
stos
add
fists
insb
pop
outsl
sub
or
scas
cmp
aam
push
decl
in
and
gs
mov
jnp
in
insl
and
insb
es
mov
mov
xchg
shll
sub
add
mov
jg
test
imul
sti
sbb
and
rcll
stc
jg
ljmp
daa
imul
add
push
or
xchg
push
mov
sbb
aam
pop
outsl
and
dec
cli
pop
popf
mov
pushf
push
sbb
dec
dec
fwait
out
pop
mov
adc
loopne
mov
jo
jge
nop
aad
add
pop
jmp
add
test
push
scas
xchg
subl
pushl
sbb
mov
xor
jg
mov
dec
jg
sbb
jo
in
sti
mov
fsub
mov
push
mov
lahf
dec
mov
aam
pop
loopne
fiaddl
cld
inc
faddp
insl
xor
fsubrl
ds
lods
ret
push
inc
lret
push
mov
call
dec
test
push
mov
enter
movb
sbb
imul
fisttpl
mov
adc
mov
dec
mov
mov
mov
sarl
xor
cmc
loop
sub
lcall
test
and
bound
ljmp
je
icebp
aad
xchg
fdivs
add
push
push
push
repz
out
add
ljmp
subb
sbb
adc
push
xchg
bswap
jge
stc
int
xchg
and
jecxz
out
xlat
pop
sub
ljmp
fidivl
filds
mov
lcall
push
adc
add
pushl
xchg
push
sti
enter
gs
pop
or
test
shlb
loope
or
push
dec
adc
popf
cmp
ret
push
and
jecxz
mov
add
pop
std
cmc
mov
ljmp
pop
int
rolb
cmp
gs
ret
inc
cltd
rcrb
xlat
das
inc
outsl
cmc
subb
ret
jmp
and
or
jo
xchg
cmp
rolb
je
and
cmp
incl
cwtl
mov
cmpsb
mov
pusha
ds
sub
push
push
pop
sub
push
push
fdivl
decl
dec
popa
dec
addl
dec
pushf
addr16
or
inc
push
iret
scas
mov
xchg
rol
ljmp
pusha
lds
addr16
ret
into
jl
push
cld
hlt
int
fs
arpl
loopne
jmp
repz
xchg
aam
or
mov
push
add
ljmp
lret
xchg
daa
testb
dec
push
and
mov
leave
imul
or
adc
lds
jge
out
push
add
das
cmp
test
int3
add
mov
cld
faddl
dec
iret
test
test
out
xchg
mov
mov
in
push
aas
icebp
ljmp
and
inc
jnp
xchg
iret
in
pop
imul
mov
mov
xchg
mov
or
incl
xchg
push
adc
test
iret
jae
nop
jnp
jo
mov
mov
xor
lods
call
cld
ljmp
dec
xchg
xchg
inc
adc
push
out
outsl
or
xorb
outsb
or
test
cmpsl
push
popa
nop
push
ljmp
add
add
or
repz
rdpmc
fisttpll
dec
dec
pop
xlat
call
ss
lcall
add
loope
jp
jnp,pn
fisubs
mov
test
rolb
fs
cld
mov
call
adc
enter
and
fs
aaa
inc
ret
js
scas
ds
jmp
cmp
bound
or
clc
pushl
subb
push
mov
shrl
mov
ret
cwtl
mov
call
aad
daa
sub
or
pop
mov
sub
xorb
fidivrl
fbstp
mov
mov
add
sbb
lock
out
je
mov
test
push
push
sbb
lcall
lods
push
and
aam
lcall
pop
pusha
xchg
jnp
add
push
es
mov
pushl
pop
dec
xchg
cmp
outsl
mov
xor
or
or
fmull
push
lock
jge
and
jmp
sub
xchg
push
cmp
test
loope
xchg
or
sub
incl
daa
lods
mov
jp
stc
mov
aam
out
sarl
icebp
jmp
mov
fnsave
repnz
sub
arpl
xchg
adc
rcr
jmp
sbb
rcrb
or
mov
dec
ret
adc
loope
push
xor
jbe
test
mov
ljmp
push
add
loope
dec
aad
or
dec
rcl
xchg
jmp
daa
push
aad
mov
push
sti
dec
push
add
sbb
xchg
lahf
daa
jecxz
hlt
add
jmp
jne
sub
jmp
sub
int
pop
mov
mov
adc
cmp
stc
hlt
aaa
insl
cli
cmp
out
adc
subb
push
mov
add
jmp
flds
mov
jb
dec
push
push
es
incl
pop
pop
xor
or
or
gs
in
xchg
jle
out
cwtl
and
push
shrl
pushf
aaa
pop
mov
scas
push
clc
mov
push
mov
inc
xchg
lcall
cltd
out
add
iret
shl
dec
sbb
cltd
popf
pop
sahf
mull
jge
dec
sub
inc
pushf
scas
rorb
adc
xor
or
arpl
pop
add
loopne
push
popa
mov
mov
mov
jg
incb
dec
jl
add
push
push
movd
and
xchg
pushl
jmp
sbb
loopne
scas
popf
ret
popa
and
jo
pop
dec
minps
sub
and
push
mov
sti
test
push
frstor
xchg
pushf
cmpsl
jne
jmp
add
aaa
bound
sbb
mov
xchg
popa
shl
scas
nop
addr16
cmp
xchg
shl
sub
jle
lock
hlt
mov
or
jl
mov
sbb
nop
xchg
xchg
jns
or
dec
mov
call
xchg
movnti
sub
imul
xor
jne
xchg
call
push
push
jg
mov
or
mov
xchg
fucomp
fwait
mov
incl
or
ffreep
inc
std
sub
adc
ret
sbbb
mov
sbbb
jnp
enter
popa
int
or
xchg
inc
jne
or
adc
fildl
outsb
femms
pop
push
loope
andl
imul
mov
in
out
inc
sar
call
fcomip
inc
adc
std
movsb
ds
pushl
xor
cwtl
aad
inc
jbe
cmp
fs
test
lcall
mov
test
push
dec
jmp
push
adc
pusha
fnsave
cmp
incl
mov
leave
clc
jle
jmp
arpl
jl
repnz
repz
js
push
lcall
dec
test
sbb
or
mov
pop
movsb
cmp
dec
add
inc
inc
xor
hlt
std
jnp
incl
inc
shr
rorl
into
in
sti
call
and
jbe
mov
pop
add
nop
adc
sub
mov
xor
stc
idivb
repnz
or
shr
push
clc
lods
ret
or
cltd
ja
xlat
incl
jg
xchg
add
push
lcall
repnz
cmp
jg
imul
out
movsl
lea
sbb
pop
xchg
hlt
aad
aad
test
inc
leave
pop
cmc
lcall
cmc
or
scas
ret
out
xor
iret
dec
add
pop
jle
mov
xchg
dec
fisubrl
insb
lret
cmp
mov
call
fistps
cmp
mov
neg
push
push
pushl
in
mov
int3
call
cld
push
push
inc
push
xchg
or
jp
add
inc
xor
pushl
hlt
and
pop
sub
aad
xchg
and
cmpb
jge
inc
inc
sub
cmp
sub
adc
hlt
dec
incl
push
and
je
adc
daa
mov
cltd
pop
cmpsl
test
cld
repnz
aam
xchg
inc
repz
fbld
push
mov
adc
mov
ljmp
pop
mov
sbb
std
mov
in
ljmp
cmp
lods
insl
das
ss
js
aaa
cmpb
rcrb
test
ljmp
out
out
sbbl
lahf
stc
xlat
repz
push
fs
jmp
cmp
pop
push
sbb
daa
lods
jb
cmc
js
iret
loope
aaa
test
je
xchg
shlb
jl
call
dec
ret
clc
mov
mov
lahf
jb
negb
rorb
inc
int3
mov
loope
test
pushf
xor
mov
mov
adc
out
in
rcl
mov
mov
pop
fcomip
das
rolb
mov
inc
and
adc
mov
movsb
mov
in
dec
or
jecxz
lods
hlt
pextrw
jg
xor
clc
out
inc
fwait
xorb
add
xchg
mov
std
ljmp
cmp
fucomip
iret
adc
push
or
jg
cli
sbb
fdivl
sbb
test
incl
idiv
lock
out
lods
nop
ja
hlt
icebp
mov
lret
ffreep
xchg
filds
bound
push
mov
insl
push
mov
test
fsubrl
fisttpll
adc
adc
stos
test
lahf
mov
jbe
push
cld
lcall
scas
cmp
or
imul
sti
pop
dec
xor
loop
or
fmuls
jmp
cmp
jle
gs
mov
std
sarl
jne
add
incl
xor
mov
mov
cmp
enter
cmp
bound
aad
jle
or
jg
jnp
mov
sbb
add
test
repnz
push
push
push
adc
sbb
add
lcall
push
sbb
add
xor
lcall
cmovge
and
out
stos
movsl
icebp
add
fimuls
scas
mov
sub
pop
sahf
test
fistpll
gs
scas
subl
mov
jne
dec
push
mov
lcall
jge
arpl
repz
pop
mov
add
jo
imul
loop
dec
mov
push
fisttpl
les
cli
and
dec
mov
lcall
fimuls
iret
ds
loopne
gs
int
pop
xor
push
call
push
hlt
jae
pushw
enter
popa
adc
mov
cmp
jne
cmp
ljmp
dec
popa
stos
pusha
mov
ss
test
pop
shrl
clc
mov
arpl
or
jae
sub
les
dec
push
push
cmp
outsb
xchg
div
cmpsl
sbb
cmp
or
cmc
dec
jo
data16
lret
or
stc
ja
data16
aam
or
clc
lcall
les
shl
or
into
jae
pop
xchg
inc
and
ljmp
sbb
push
sbb
addr16
mov
lret
mov
push
rolb
pop
fcmovne
inc
andl
out
and
pushl
or
pop
add
mov
mov
jp
repnz
mov
dec
cmp
cmp
xor
inc
les
fcom
adc
dec
call
cs
decl
pop
enter
lods
loop
xor
pusha
xor
mov
incl
sbb
cli
aam
dec
add
lods
mov
adc
jecxz
inc
test
daa
jg
dec
mov
dec
inc
shrb
pop
ljmp
and
scas
loopne
lcall
dec
mov
add
lret
fdivl
loopne
sahf
and
pop
push
cli
and
xor
call
cmp
jmp
cs
xchg
inc
sbb
mov
mov
adc
push
add
loop
outsb
push
sbb
push
and
inc
andb
ret
cmp
xor
ljmp
push
je
xchg
shlb
pop
inc
sub
std
in
sar
mov
loop
push
imul
pop
stc
loop
test
lahf
fisubs
sahf
cmp
jle
mov
ret
arpl
jecxz
jbe
sub
outsb
cltd
cmp
xorl
scas
cli
call
xchg
loop
pop
jnp
xchg
cmp
inc
inc
mov
sub
pushl
fcompl
insl
xor
into
call
shlb
xchg
cli
test
or
ficomps
arpl
pusha
gs
test
repnz
cmc
push
cwtl
jl
push
lock
xchg
jnp
rol
cli
jns
xor
jno
out
gs
xchg
loope
cmp
mov
movl
jp
add
push
or
add
mov
cmp
inc
cmp
mov
lods
sub
call
nop
cltd
xor
or
mov
mov
dec
xchg
aaa
jecxz
pop
or
lcall
mov
jl
inc
loop
pop
imul
mov
hlt
mov
call
sahf
mov
adc
xchg
std
inc
dec
in
dec
sahf
xor
jnp
mov
loop
ljmp
xor
test
sub
daa
stos
mov
jnp
movsl
xor
cmp
ljmp
adc
fdecstp
imul
push
push
addr16
dec
pop
stc
mov
cmp
xorl
stc
inc
pop
mov
pop
add
xor
mov
mov
pop
divb
call
sub
and
dec
cwtl
or
clc
push
and
fimull
aad
inc
bound
clc
roll
js
in
lock
lcall
mov
lret
cs
imul
xchg
push
cmp
push
inc
fsubs
mov
pushl
pop
in
lcall
mov
out
loop
jmp
int
mov
ret
sbb
push
outsb
cmc
pushl
lock
hlt
adc
mov
loop
int
mov
out
lret
xor
push
jbe
mov
call
pusha
cmp
jns
mov
push
lods
js
dec
jbe
setae
push
and
pushl
sub
push
push
dec
test
bound
push
imul
and
lcall
adc
push
or
add
adc
stc
mov
lahf
repnz
aaa
fldt
adc
push
mov
jae
jno
insl
xchg
les
decl
cmpsb
aad
xchg
jbe
sub
jne
jo
inc
es
cmpsl
push
push
cmp
xor
lcall
aas
jp
push
cmp
pop
notl
mov
js
repnz
fistpl
nop
cs
mov
mov
nop
mov
mov
push
inc
clc
dec
fsubrp
fwait
ja
adcb
jmp
mov
pop
pushf
movsl
pop
cmp
jne
dec
pusha
fiadds
outsb
fimuls
out
mov
out
std
xchg
subl
mov
add
cmp
fldenv
xorl
adc
lock
inc
or
xlat
scas
xor
loop
pop
imul
sahf
push
daa
shr
lds
into
xor
pop
in
cmp
call
or
jbe
push
mov
lods
push
cmp
js
in
mov
push
loopne
lret
js
jmp
dec
cmpsb
movsb
jbe
jne
fstps
adc
and
cwtl
insb
mov
incl
sub
push
mov
add
loopne
dec
call
in
loope
ljmp
clc
xor
cmc
sti
push
dec
repnz
or
addr16
push
mov
test
scas
sub
xor
call
clc
mov
xor
fisubrs
mov
xor
push
mov
add
or
ljmp
rcrl
call
dec
outsl
add
shlb
frstor
lahf
incl
or
das
insl
xchg
les
dec
sbb
imul
dec
fmul
adc
stos
adc
jmp
call
imul
push
mov
scas
pop
dec
sub
sahf
aaa
push
sarl
in
and
ret
sbb
lcall
jle
pop
xor
daa
jl
in
cmp
xchg
adc
mov
adc
lds
lods
pushl
inc
cmp
std
xorl
loope
jo
ljmp
pop
sarb
cwtl
call
xchg
lea
iret
jbe
mov
mov
je
jp
dec
lahf
call
mov
fcomip
repnz
call
arpl
push
out
stos
subl
repz
cli
inc
sti
xor
andl
ljmp
scas
stos
cmp
cld
jecxz
lods
pop
dec
fwait
stos
pop
xchg
cmpsb
dec
lcall
push
fs
movsb
lcall
in
sahf
movaps
jl
mov
push
jl
jae
shll
pop
inc
lret
adc
js
jae
add
inc
jmp
repz
push
std
andl
mov
sub
scas
dec
scas
ja
lods
arpl
push
test
das
jo
sahf
outsl
dec
mov
decl
sub
sarl
movsl
mov
outsb
stc
adc
into
cmp
rolb
pushl
add
dec
push
fdivrs
lock
arpl
adc
adc
adc
xor
lock
ret
incl
popf
std
jbe
jnp
ror
sub
and
sti
xchg
pop
cltd
mov
ds
insb
hlt
jg
and
or
adc
es
xchg
stos
sbb
and
or
push
lcall
mov
adc
sub
out
xchg
popa
lods
dec
add
sbb
ljmp
rcrb
dec
dec
cmp
push
sarl
adc
clc
cmp
cmp
shrl
outsl
dec
cmp
pop
jle
jbe
lret
lods
mov
xchg
and
aam
push
sbb
jmp
in
add
incl
or
test
and
xchg
leave
or
jb
addr16
inc
sub
mov
xor
dec
enter
lret
cs
movsb
js
mov
fbstp
dec
inc
ficoms
mov
dec
cmp
add
loop
in
scas
push
fldt
xor
inc
iret
aam
push
jecxz
leave
mov
shrl
jmp
repz
dec
jmp
fildl
into
inc
cld
add
push
iret
sbb
mov
sbb
mov
ret
rorb
mov
xor
xchg
or
mov
pop
pop
loop
fwait
adc
addr16
shlb
int
clc
or
stos
mov
hlt
fldl
lret
incl
or
jl
pop
insb
into
bound
and
mov
iret
adc
pop
shlb
xor
incl
ret
aam
dec
mov
sti
inc
xchg
sub
sbb
aad
je
cmp
decl
dec
dec
and
jmp
cmp
adc
cs
cltd
stos
sahf
stos
test
mov
pushl
mov
mov
or
push
xor
cwtl
scas
lods
stc
shl
mov
ds
sub
adc
sub
cmc
fcoms
imul
sti
repnz
mov
pop
sbb
pop
lcall
pop
push
mov
mov
pop
orb
lods
lods
movsb
lret
jo
dec
adc
mov
faddp
es
cmc
pop
mov
adc
cld
inc
jmp
sbb
outsl
jl
cmp
stos
push
mov
lds
inc
hlt
push
mov
pushf
jo
pop
push
xor
call
hlt
dec
das
aad
addb
sbb
movsl
in
rcll
mov
test
or
shrl
mov
movsl
shlb
and
mov
adc
mov
incl
js
fs
or
ret
sbb
xchg
addr16
pusha
push
inc
pusha
sub
popf
pop
mov
push
movsl
fstl
cs
nop
xor
mov
cmpsl
or
xor
shrb
sbb
push
and
inc
xchg
mov
dec
dec
in
add
inc
push
dec
outsb
jne
out
pop
mov
sbb
xchg
fmuls
lahf
adc
fdivrs
fisubrs
mov
sbb
add
movsb
pop
lock
xchg
repz
jg
mov
decl
mov
xorb
mov
or
push
adc
scas
addl
fstl
mov
xchg
jno
jg
add
loope
ficompl
and
inc
jnp
mov
jg
pushl
pusha
push
scas
arpl
xor
xor
inc
push
or
lahf
inc
jne
add
add
sbb
sbb
inc
xor
mov
dec
sub
js
push
nop
jo
mov
add
loope
push
mov
ljmp
cli
lock
mov
std
or
outsl
cmp
pop
jecxz
jle
jg
mov
dec
cmpsl
xor
inc
jp
stc
sti
mov
data16
inc
mov
int
mov
je
push
ja
scas
loope
in
imulb
stos
cmpsl
mov
fdivs
dec
and
stos
imul
pop
push
shll
pop
pop
push
and
sub
xor
aas
dec
fdivl
orl
mov
jg
mov
into
sbb
decl
ljmp
test
adc
or
sub
cmpb
mov
cli
lcall
mov
in
push
into
pusha
cmc
push
lahf
jbe
movsl
aaa
std
call
pop
hlt
cwtl
rcll
iret
jno
aas
jl
xchg
sub
cltd
test
lcall
movsb
inc
dec
xor
xor
mov
int3
adc
or
cmc
js
cmc
mov
and
and
outsl
sbb
popf
and
pop
mov
xchg
push
aam
mov
int3
fbstp
lcall
mov
rol
or
sahf
pusha
rorl
push
sbb
in
lods
push
in
and
sti
pushl
jo
sbb
outsl
cld
fs
push
xchg
push
sub
std
dec
mov
repz
or
scas
test
fdivrl
fstps
sub
xchg
mov
sub
sub
js
lea
in
ret
add
jns
mov
cmp
pusha
imul
decl
adc
clc
pop
in
push
dec
push
cld
lcall
outsb
lea
mov
bound
decl
adc
jecxz
push
push
fs
aad
or
cmp
jmp
mov
push
scas
stos
add
mov
xlat
cmpb
pop
cwtl
sbb
fildl
mov
stc
cs
rdpmc
mov
mov
nop
add
jb
lcall
jecxz
clc
mov
andl
jb
xor
scas
add
jg
outsb
addr16
mov
lcall
lock
dec
ficoml
jg
ss
loop
enter
dec
scas
xchg
imul
lea
lcall
lds
imul
cmp
sub
mov
sbb
mov
push
shlb
or
test
xchg
imul
mov
aad
mov
adc
rcl
decl
cltd
xchg
xor
scas
shll
xchg
push
daa
pop
xchg
in
icebp
sti
daa
decl
repnz
jg
sbb
mov
enter
scas
push
xor
repz
and
push
xorl
cld
decl
push
mov
aad
dec
das
movsl
or
clc
xchg
xor
pop
popf
mov
enter
dec
adc
andb
fwait
jae
daa
sbb
lcall
in
hlt
cli
push
cmp
mov
push
xor
mov
clc
jmp
notl
inc
cli
mov
pop
xchg
das
cmp
mov
int
pushf
dec
inc
stos
sub
mov
pop
repnz
les
mov
and
cmpsl
cmp
outsb
inc
stc
call
call
push
jge
inc
sub
add
push
xchg
lods
and
push
cmp
add
ljmp
movzwl
aaa
lock
icebp
nop
adc
iret
mov
cld
das
sar
incb
lret
out
xor
cli
mov
stc
call
inc
arpl
push
and
stc
imul
dec
and
dec
sub
adc
lcall
push
mov
and
scas
sets
fsubrs
xlat
sahf
mov
pop
adc
pushl
xor
rclb
frstpm(287
repnz
daa
into
sub
jno
std
cmpsb
mov
jmp
jle
xor
mov
cld
stos
out
push
inc
push
and
sub
call
xor
lock
or
cmp
sarb
mov
ss
jecxz
into
adc
shll
aam
sbb
add
fcomps
lock
das
inc
jo
jae
and
xor
or
incl
sti
enter
mov
and
notb
test
add
hlt
adc
jg
mov
out
sbb
cltd
jg
mov
stos
test
sub
lret
xchg
adc
cmp
es
and
cmp
incl
jb
xor
mov
rclb
xor
in
popa
ficoms
into
popf
jecxz
cs
jmp
in
test
in
outsb
sbb
mov
shlb
pop
sbb
sub
pushl
in
mov
jbe
jnp
mov
lret
pop
xor
mov
push
push
sub
mov
loopne
mov
and
cld
mov
stos
jg
fs
ljmp
icebp
fucom
push
es
test
xchg
pop
mov
lds
inc
enter
repnz
mov
push
mov
and
jge
cld
pop
aaa
loopne
pop
cs
call
pop
mov
xor
fnstcw
sub
mov
in
hlt
mov
pusha
cmp
cmc
incl
addr16
cmp
jb
imul
pop
call
loop
and
lahf
add
stc
sbb
inc
fldt
outsb
jnp
orb
dec
jmp
and
dec
jg
insb
std
movsb
leave
xor
add
sbb
loope
pushl
cld
add
mov
xor
ljmp
mov
ljmp
data16
pop
stos
mov
nop
xchg
out
mov
inc
xor
mov
out
xchg
mov
or
xchg
jge
sar
call
jg
xor
scas
lahf
or
mov
out
jl
xor
fwait
cmp
mov
and
jg
cmp
xchg
les
mov
push
xchg
dec
xchg
rcl
leave
out
popa
xchg
adc
into
sar
jmp
xor
aaa
add
mov
inc
xchg
push
int
lret
push
lea
scas
inc
lds
mov
lock
aad
or
jb
mov
paddd
dec
jno
jle
pop
ss
arpl
jg
mov
test
jae
in
fnstenv
fldt
fistpll
fiaddl
dec
in
sub
mov
ljmp
scas
pushf
xchg
or
push
mov
movsb
sbb
aaa
test
fnsave
fdivr
decl
adc
xor
aad
ds
sub
pop
mov
lods
xchg
push
sbb
cmp
adc
incl
notl
push
imul
pop
sbb
jae
xchg
lods
mov
cld
push
rcll
leave
pop
add
cld
pusha
pop
mov
in
adcl
ljmp
dec
mov
xchg
add
andb
call
mov
sbb
and
repnz
mov
add
pop
push
iret
call
movsb
push
or
adc
mov
xchg
lock
ds
jecxz
dec
pusha
and
cmp
dec
pop
out
mov
pop
enter
lcall
xlat
loop
sub
lcall
jae
push
out
stos
pop
es
push
cmp
decl
xchg
jno
mov
enter
movsl
jle
das
ja
rcl
sub
xlat
aas
push
adc
push
ja
push
stc
je
pop
inc
adc
add
call
ficomps
ds
jg
add
inc
ljmp
std
or
xchg
das
std
lcall
loopne
jmp
push
inc
je
push
and
iret
mov
in
negl
test
mov
lcall
mov
aam
mov
out
iret
jb
mov
scas
adc
fiaddl
lcall
call
xchg
int3
pop
or
mov
cli
lret
mov
std
add
mov
jg
cmpsb
push
das
pop
sysenter
fcmovb
jbe
shlb
sub
ja
dec
and
clc
push
seta
in
hlt
mov
call
add
or
jb
inc
das
es
in
xorb
inc
cwtl
or
call
dec
shlb
dec
lcall
mov
jae
pop
mov
in
adc
xor
mov
imul
mov
pop
pop
cmp
inc
repnz
mov
push
iret
lea
aam
xor
jmp
aas
push
idiv
or
fs
mov
or
js
andl
call
ljmp
in
xlat
cmpsb
xchg
daa
jg
insb
into
xchg
leave
ss
scas
mov
cmp
packssdw
mov
fldl
in
push
jb
add
mov
movsb
jo
sub
adcb
pusha
xchg
xchg
jmp
adc
dec
pusha
sub
cmp
lds
std
sarl
rorb
incl
popa
in
and
sbb
mov
ss
cltd
imul
jg
nop
mov
stos
pop
ja
mov
mov
dec
push
inc
pusha
imul
ljmp
addr16
jns
cs
mov
cli
xchg
dec
or
movsl
sbb
pop
sbb
mov
divb
cmp
nop
leave
push
inc
iret
cmp
cmpsl
pop
repz
call
inc
sub
push
fisttpll
add
mov
and
mov
add
push
mov
fidivs
jno
imul
mov
cwtl
jns
incl
dec
and
pop
cmpsl
int3
and
push
mov
and
and
mov
lcall
inc
and
insl
pop
cmp
mov
lods
aas
pop
and
ds
add
jl
pop
jbe
add
cmp
xchg
dec
aas
dec
add
cmp
call
neg
or
or
repnz
jp
and
mov
add
mov
mov
into
jae
lea
pop
jnp
and
ljmp
jno
imul
lret
mov
je
arpl
nop
add
mov
scas
sbb
push
fs
cmpsb
popf
enter
mov
je
movl
or
cmp
cmp
add
pop
add
lret
js
pop
int3
pushf
ss
leave
pushl
mov
mov
stos
cmp
push
lcall
jp
rorl
fnstcw
jp
mov
ljmp
insb
sbb
pop
out
lock
cltd
jg
loopne
sub
sub
cmp
jmp
cmp
int3
std
popf
jne
in
cmp
and
nop
enter
ljmp
mov
rcrb
push
pop
shl
mov
xor
les
cmc
jne
call
mov
jl
pop
sub
mov
add
insl
or
mov
ja
stos
add
cmp
mov
movsb
testb
mov
cltd
jne
mov
cmpsl
pop
mov
pop
fs
das
pop
test
mov
add
mov
lcall
ret
mov
inc
flds
pop
scas
mov
mov
fisubrl
adc
js
push
in
mov
andb
mov
xchg
scas
pushf
sbb
jmp
and
fucomip
scas
sub
sub
adc
decl
and
and
inc
cmpsb
loope
dec
repz
xchg
mov
pushl
jp
adc
jg
mov
adc
out
xchg
inc
pop
out
ja
pop
leave
mov
ljmp
sar
mov
sbb
rcl
movsl
insb
pop
dec
xor
push
cwtl
fwait
or
jmp
xor
enter
dec
lret
std
dec
lock
ret
gs
push
scas
cmp
xor
aas
mov
movb
adc
cmpb
jbe
test
push
push
movsl
sub
mov
fs
pop
popf
sbb
mov
push
repnz
jl
jmp
lret
pusha
movsb
mov
aas
fidivrl
mov
dec
jmp
inc
push
ljmp
inc
loope
pushl
xchg
icebp
push
dec
or
test
cmc
sub
jae
or
pop
and
das
mov
subl
sbb
subb
fbld
cld
jno
pusha
dec
ds
inc
shrl
cmp
mov
jo
imul
repnz
scas
cwtl
pop
mov
ljmp
adc
decl
add
enter
mov
mov
fidivrl
xor
inc
mov
bound
decl
jnp
bound
jae
loop
mov
sarl
stos
popf
cltd
push
imul
outsl
cmp
jno
sub
and
mov
jle
outsl
inc
xor
push
mov
aas
dec
cmp
rolb
cmp
sahf
xchg
adc
in
jno
mov
jns
and
mov
dec
sarb
jmp
gs
out
icebp
shrb
adc
dec
ret
mov
repz
nop
out
jg
fprem
sub
je
push
psubw
aaa
imul
pop
push
sub
insb
and
movsb
fmulp
outsl
lods
lods
cmp
jg
addr16
inc
xchg
bound
aam
xor
inc
sub
in
add
mov
push
outsl
enter
push
sub
std
jo
loope
fdivr
sbb
mov
jae
mov
es
xor
inc
clc
loopne
cmp
jns
cwtl
jbe
xor
jae
sbb
decl
mov
in
mov
inc
cld
into
orl
test
arpl
mov
ss
add
mov
ljmp
mov
xchg
adc
add
jge
inc
xor
push
xchg
sub
aaa
icebp
cmpsb
decl
rcrl
sub
sbb
insb
mov
pmaddwd
enter
and
pushl
adc
lcall
add
loop
inc
js
ss
mov
bound
xor
or
add
push
out
rcrb
mov
pushl
call
push
cli
jb
inc
outsl
sahf
xor
jb
push
cmp
pushl
pop
leave
add
stos
mov
out
cli
cmpsl
notl
test
jge
mov
cltd
mov
dec
ljmp
pop
xchg
cmpsl
pop
ror
hlt
daa
sub
lret
and
add
ret
xchg
inc
inc
mov
or
xchg
cld
stos
lahf
lcall
xor
jne
test
call
pop
mov
lea
imul
in
cmp
cmp
jmp
in
rcll
mov
pop
ficompl
ja
loope
mov
sti
xchg
lcall
in
xchg
addl
inc
dec
pushf
push
shll
adc
ja
lcall
xor
cmp
pop
in
icebp
push
mov
aas
fdivr
ljmp
jl
mov
mov
cld
loopne
aaa
outsb
inc
jno
das
cmpsb
mov
nop
data16
cmc
jmp
mov
sub
push
ds
jge
jg
mov
push
jecxz
sbb
xchg
add
outsl
sbb
enter
fistps
inc
add
mov
jmp
call
inc
jl
xor
xor
cwtl
mov
cmpb
pop
ds
icebp
lcall
dec
inc
push
mov
cmp
cwtl
pop
xchg
ftst
mov
add
addb
pop
das
xchg
jmp
cmp
stos
mov
push
outsb
shrb
push
mov
cmpsb
mov
ljmp
jb
xor
popa
shll
fwait
movsl
int3
subb
dec
mov
inc
adc
pushl
data16
jg
jmp
sahf
adc
fnsave
movsb
popf
or
mov
js
ds
cld
jmp
insl
dec
dec
sub
adc
cmc
test
cmp
cmpsl
gs
inc
mov
pop
cld
ljmp
shrb
mov
xchg
cmpb
lea
add
dec
mov
movsb
pusha
xor
fstps
xchg
cwtl
and
adc
pop
add
or
mov
repz
idiv
sbb
mov
sub
sub
adcl
push
dec
mov
sti
jae
pop
insl
push
es
jmp
jg
mov
xor
sahf
jbe
repnz
mov
addb
xor
mov
bound
xor
or
jb
dec
cli
jg
dec
jg
popf
arpl
ja
js
xchg
xlat
cmp
push
fadds
in
in
int
pushl
cmp
adc
cmp
mov
mulb
dec
mov
mov
out
mov
mov
js
inc
mov
sar
jnp
and
mov
jb
pop
cltd
jecxz
jmp
sbb
sub
sbb
sbb
hlt
decl
loop
mov
imul
xor
sbb
inc
pop
dec
fisubrs
cmp
inc
aam
xor
adc
iret
jbe
pcmpeqw
decl
push
je
iret
or
mov
lea
orb
or
lret
ljmp
mov
pop
arpl
lock
xlat
loopne
inc
jg
adc
aas
xor
xchg
dec
mov
hlt
out
cmp
ds
push
mov
mov
push
adc
fisttpl
push
stos
mov
jmp
int3
jmp
xchg
push
js
test
imul
add
add
jmp
imull
push
dec
fisttpl
data16
ljmp
fistps
loop
or
dec
out
decl
mov
fimuls
loope
jle
dec
dec
call
pop
je
cmpl
jecxz
add
dec
arpl
jle
inc
mov
mov
adc
and
adc
or
push
sub
decl
call
es
and
popa
xchg
flds
ljmp
decl
cwtl
push
pushf
fbstp
jmp
sub
test
and
inc
movsb
xchg
ret
xchg
adc
or
cltd
sti
outsl
add
and
push
stc
outsb
jmp
outsb
mov
inc
mov
decl
dec
movsl
mov
push
scas
push
lea
or
adc
xchg
dec
xor
inc
sahf
and
loope
jmp
lds
and
or
mov
cltd
ljmp
call
jecxz
lods
inc
stos
out
loope
ret
mov
push
sahf
scas
push
xor
out
data16
stos
clc
ljmp
cmpsl
sub
xlat
in
pop
test
cli
mov
xlat
inc
jno
pushf
js
inc
push
jns
jb
insb
stc
mov
jbe
repnz
mov
mov
dec
nop
push
push
cmc
mov
cmc
lret
jmp
popa
mov
in
mov
call
data16
icebp
insb
leave
pop
lods
pop
adc
in
out
int3
add
in
inc
out
sub
pop
cmp
loopne
out
shll
pop
imulb
ljmp
popf
pop
clc
mov
mov
xor
int3
pop
int3
push
fidivs
pushl
call
xchg
movsl
push
outsl
pop
mov
cmp
mov
lock
out
mov
pushl
cld
push
mov
js
stos
push
pushf
insl
outsb
cmp
dec
mov
push
push
push
insb
mov
dec
shlb
push
inc
mov
mov
scas
stos
aaa
shl
clc
shrl
aas
jg
jmp
and
mov
daa
adc
loop
js
out
ljmp
ljmp
leave
mov
fs
push
mov
dec
xchg
test
fcomip
lcall
cmp
cmpsb
inc
nop
shlb
add
mov
ds
rorl
sti
call
and
sahf
into
or
jl
adc
leave
xchg
pop
add
inc
and
lret
jg
jns
cmp
test
test
fimuls
dec
addr16
fwait
push
sar
jns
cltd
add
dec
xchg
or
dec
movsb
and
add
mov
fsubl
and
xlat
xchg
mulb
outsb
or
cld
mov
fs
inc
mov
jg
cmp
and
cltd
out
adc
mov
lcall
stos
sbb
out
sbb
testl
lcall
inc
mov
xchg
ret
cmp
rorl
cmp
scas
iret
adc
lcall
push
pop
imul
or
mov
inc
jne
inc
fcoms
inc
sbb
js
dec
xchg
jecxz
push
mov
sbbb
mov
adcb
lock
incl
sub
push
sub
cmpb
pop
xchg
call
imul
jmp
adc
inc
push
cltd
mov
jno
xchg
clc
loope
push
xor
jg
mov
xchg
sahf
adc
and
subb
mov
or
movsl
mov
or
fildll
ficoml
ffreep
xchg
adc
cmp
sbb
dec
and
and
xor
sub
xchg
inc
nop
jecxz
push
loopne
in
fcmovbe
xchg
imull
lock
pushl
adc
cmp
test
dec
dec
aaa
fnclex
xor
pop
mov
leave
loopne
jg
cmp
stc
add
push
call
cltd
xor
pandn
pop
outsl
lcall
dec
pushf
mov
add
das
sbb
das
in
cmpsb
sub
inc
inc
push
frstor
ljmp
stc
ret
dec
jae
sahf
ficompl
adc
sub
adc
mov
cmpsl
or
incl
clc
cmp
negb
adc
ficoms
mov
rol
jmp
cmp
pop
mov
pop
dec
in
pop
mov
je
sti
les
adcl
jp
aad
lahf
leave
jnp
jb
icebp
loopne
rorb
mov
pop
lods
stos
mov
decl
ret
inc
push
mov
xchg
decb
mov
enter
sbb
dec
incl
or
jmp
aas
or
sub
adcl
mov
lcall
xlat
imul
jns
mov
outsl
fadds
loop
and
pushl
cld
lcall
lret
mov
outsb
push
ret
xor
adc
loope
inc
jle
pushl
or
cli
xor
jmp
andl
add
jbe
jp
push
mov
lcall
gs
and
xchg
int
cmp
mov
pop
and
dec
jp
push
loope
dec
filds
orb
in
not
or
je
mov
fucomp
dec
sub
in
jbe
mov
fwait
outsb
xor
jbe
and
shlb
or
jmp
dec
insb
addl
popf
std
orl
mov
mov
movsb
mov
dec
fwait
shll
out
push
test
lcall
imul
inc
addb
es
jg
cli
jo
hlt
and
jle
dec
es
pop
xor
mov
mov
jg
add
mov
adc
subl
cmp
ret
sbbl
call
sbb
jo
cmpl
jle
mov
mov
jl
decl
push
fld
daa
dec
dec
inc
fidivl
dec
xchg
scas
inc
loopne,pt
add
lcall
jne
call
sub
mov
jmp
jg
repnz
inc
inc
bound
mov
xlat
adcb
jmp
push
insl
cwtl
js
lea
xchg
pop
sahf
out
subl
ljmp
lds
data16
pop
adc
int3
cld
addr16
or
add
xor
xlat
inc
mov
cli
jecxz
clc
sti
xlat
cmp
mov
into
shlb
adc
bound
mov
fsubrp
in
inc
mov
scas
jp
mov
fwait
jecxz
fwait
pop
pop
or
jg
sbb
out
cwtl
mov
pop
mov
inc
rol
jg
sbb
xchg
lods
imul
mov
cld
cmp
ret
or
repnz
pusha
xor
rcrb
fbstp
xchg
and
stc
sbb
imul
adc
rolb
mov
push
cmp
mov
enter
das
clc
incl
lea
pop
fidivl
lret
mov
mov
jmp
add
rolb
cld
and
push
stos
dec
pop
and
cmpsl
mov
das
sar
xor
loope
mov
pusha
outsl
std
adc
xchg
xor
adc
jmp
idiv
lock
lods
lret
pusha
xchg
stc
lahf
sub
jecxz
jle
and
addr16
sbb
jbe
inc
in
fucom
movsb
xor
dec
xor
cmp
decl
repnz
scas
int
xchg
sub
sahf
incl
cli
jp
add
pop
inc
push
fsubs
lods
mov
int3
rcrb
inc
xchg
dec
cmp
icebp
and
sbb
add
popa
push
cmp
les
insl
pop
lcall
divb
jl
mov
inc
sbb
jle
jg
orb
push
cmp
in
rclb
mov
adc
das
jp
pop
and
cmp
sahf
jno
gs
jg
es
loopne
stos
subl
outsb
int3
xchg
push
sbb
push
lea
loopne
incl
mov
daa
in
mov
xchg
repz
leave
fisubl
rol
cli
lds
ljmp
adc
mov
pop
fwait
lcall
es
repz
sub
inc
xchg
sub
mov
out
cmp
mov
loopne
inc
xor
pop
cli
daa
das
and
loopne
and
cs
adc
dec
sahf
std
mov
lcall
out
lock
loope
pop
fstl
mov
call
es
lea
lcall
fmuls
cmovl
scas
xchg
xor
inc
cmp
jmp
push
jns
test
mov
movsb
dec
push
push
mov
hlt
cld
add
and
sub
sbb
jmp
sub
add
cwtl
nop
xchg
push
push
xchg
mov
add
mov
or
sbb
xchg
lods
int3
pop
mov
int
add
mov
pop
ljmp
dec
dec
jb
adc
insl
jl
mov
pushl
xor
pushf
pop
inc
sbb
push
lock
dec
xchg
or
fnop
ja
jecxz
icebp
push
mov
dec
pushf
cmp
push
and
ret
cld
jmp
sbb
or
and
decl
popf
pop
cmp
dec
dec
pop
xlat
lcall
fdivrp
imul
imul
cmp
call
loopne
mov
add
mov
cld
ret
aad
fmuls
push
sbb
ljmp
push
call
push
jne
cmpl
ret
push
push
repz
dec
int
divb
pop
ret
jmp
sbb
jbe
sbb
pushf
aad
shrb
lock
ljmp
lock
int3
or
or
mov
in
jne
push
sub
cld
lret
dec
mov
xor
mov
test
lcall
push
sbb
jmp
add
data16
retw
cmc
sbb
push
ljmp
add
cli
pushl
imul
ljmp
call
mov
pop
mov
call
shll
inc
mov
in
outsl
or
hlt
call
std
decl
sub
repz
mov
xchg
mov
rorl
jmp
mov
pop
mov
pop
pop
daa
mov
sbb
movsl
pop
fucomp
scas
push
es
inc
sar
pop
cmc
ret
inc
in
nop
inc
jecxz
push
sub
pop
cmc
pop
stos
scas
adc
outsb
test
jg
jl
xchg
inc
lea
mov
test
fmuls
rolb
sub
push
nop
fisttpl
shl
addr16
pushl
mov
int
outsl
mov
cmp
inc
xor
mov
sub
daa
mov
call
notb
dec
roll
inc
aaa
add
ds
sbb
mov
pop
scas
loope
pushl
or
in
jge
ds
iret
daa
mov
cltd
and
dec
loope
mov
dec
xchg
js
push
push
mov
scas
out
sbb
and
clc
push
push
daa
clc
dec
cmp
shr
push
aaa
test
scas
jns
imul
out
data16
nop
and
test
decl
push
dec
ja
sti
sahf
into
cli
pop
sti
icebp
pop
cmp
mov
cmp
adc
mov
ljmp
inc
xchg
pop
and
mov
mov
lahf
xchg
jo
cmpl
jmp
lahf
dec
adc
xor
jae
loope
das
xchg
jae
mov
cld
pushl
push
popf
movsl
test
incl
inc
mov
loope
inc
sub
push
xchg
jae
call
loopne
das
mov
loope
mov
sahf
push
inc
js
mov
fmuls
push
xchg
mov
dec
xchg
dec
mov
mov
loop
ljmp
cmp
sub
mov
inc
sbb
loop
clc
decl
test
movsl
push
pop
jb
clc
mov
fstl
stos
xchg
ljmp
mov
push
mov
shl
loopne
dec
leave
enter
xchg
mov
cs
push
outsl
or
repnz
pop
adc
cld
shl
adc
aam
mov
das
pop
jno
adc
mov
decl
push
dec
jg
mov
dec
xchg
cmp
imul
or
mov
sub
lcall
leave
popa
pop
notl
fisttpl
jg
sub
sbb
pop
mov
push
jbe
loopne
inc
xchg
xchg
mov
mov
call
int
in
jbe
mov
jmp
sub
lret
jno
addr16
int
in
incl
js
or
cmp
cmc
sar
stos
dec
push
jno
push
mov
dec
pop
mov
frstor
and
jecxz
addl
shll
xor
jae
ret
and
jmp
xor
cli
mov
mov
inc
sub
mov
movsl
sti
sbb
lods
pop
jo
sub
mov
mov
ljmp
lret
jmp
pushf
das
repz
subl
push
cltd
iret
in
clc
movsl
stos
fs
and
cmp
jecxz
mov
cltd
cmp
out
lock
push
pop
jp
mov
test
mov
and
xor
movsb
pop
lcall
add
cmp
or
arpl
jle
daa
push
inc
mov
and
push
test
xchg
add
stc
mov
mov
repnz
stc
add
pop
out
adc
adc
pop
xchg
push
sbb
or
dec
mov
mov
decl
out
jbe
dec
pop
insl
jbe
push
or
test
xchg
popa
ret
cmpsl
mov
call
pop
lcall
push
xor
mov
cli
test
mov
dec
sbb
push
xor
ljmp
clc
incl
mov
mov
sbb
ja
push
rcrb
pop
js
mov
daa
mov
pop
add
push
jne
faddl
xlat
repnz
leave
xor
or
sub
inc
jne
rcl
sahf
fwait
add
movsb
rclb
mov
cmp
and
jmp
sbb
ficomps
xor
pusha
push
aas
gs
jae
and
mov
sbb
pop
cs
dec
mov
xor
pop
cli
lret
mov
lock
sub
cltd
imul
stos
cld
dec
pavgb
out
enter
sub
fisubl
xchg
ret
out
jb
arpl
ljmp
or
stos
mov
mov
stos
cltd
data16
hlt
push
ffreep
pop
data16
xchg
stc
or
movsb
mov
xacquire
lret
mov
call
insb
inc
jecxz
arpl
movsb
aam
mov
pop
ret
out
cmp
lcall
pop
pusha
cld
jmp
mov
mov
pop
inc
jbe
out
jecxz
jns
mov
outsl
mov
mov
add
xchg
leave
xchg
sti
lahf
xchg
cmp
and
orb
mov
jns
lods
popf
adc
push
xchg
daa
roll
pop
cmp
decl
ret
pop
ja
stos
dec
cmp
adc
push
push
adc
in
add
ret
xchg
jno
mov
lds
mov
in
popa
sub
dec
or
cmp
call
xchg
jp
mov
jns
jmp
pop
mov
push
lcall
jmp
das
icebp
adc
nop
loop
cld
cmp
inc
push
sbb
inc
fs
pop
cmc
inc
jae
sbb
insb
dec
enter
push
mov
mov
mov
popa
out
adc
dec
clc
call
mov
test
in
insl
pop
mov
jns
dec
sbb
movsl
mov
aam
adc
ljmp
xor
mov
add
add
lods
mov
push
cmpb
inc
popa
call
je
jg
outsl
push
sub
in
fs
mov
sbb
and
call
fimull
test
sub
jge
clc
sbb
xchg
xchg
jmp
xchg
push
gs
jmp
cmp
fs
out
push
add
xchg
enter
sub
out
cmc
inc
movsl
push
or
sti
fs
jo
add
outsl
or
insb
xlat
mov
je
add
and
jo
mov
add
xchg
pop
add
ret
inc
stos
movsl
clc
inc
inc
mov
adc
sbbl
hlt
ljmp
icebp
mov
lahf
mov
add
jecxz
xchg
in
or
push
dec
dec
jmp
addr16
test
pop
test
xor
xchg
adc
xchg
adc
jmp
or
adc
push
jnp
out
mov
sub
loopne
insb
gs
pop
and
lea
sub
test
clc
cs
movsl
outsw
xchg
xchg
dec
push
mov
pushl
popa
scas
fwait
das
dec
rcrl
data16
rolb
pushf
xor
cwtl
decl
fmull
xor
pop
mov
cmp
imul
loope
and
and
ljmp
mov
stos
imul
sub
imul
enter
imul
imul
lcall
push
jb
jbe
subl
inc
xchg
mov
pop
add
popf
jns
jle
xlat
inc
jns
mov
clc
sbb
insl
jle
sbb
sbb
jle
mov
or
inc
es
leave
lea
adcl
ss
cmc
enter
fstp
dec
cmpsb
scas
enter
dec
stos
fcomip
dec
sbb
push
mov
lods
adc
xlat
es
mov
call
xchg
jge
mov
out
cld
or
ja
xchg
push
cltd
mov
dec
adc
es
push
call
test
popa
sub
es
mov
jbe
cmp
pop
sbb
jl
inc
xchg
inc
lods
and
jecxz
or
dec
inc
arpl
fcomip
decl
cmpsl
jae
add
add
adc
jecxz
jae
in
sbbl
test
imul
sub
data16
dec
jmp
stc
dec
aas
add
inc
xchg
lea
andb
adc
jge
pop
sar
call
inc
xchg
xchg
mov
push
mov
shrb
sbb
inc
std
cmp
test
xchg
push
cmp
movsb
aas
sarl
hlt
bound
cld
sub
dec
loopne
pop
mov
fs
daa
dec
ret
mov
fsts
pop
sub
lahf
fcmovne
ljmp
mov
sti
cmpsl
loopne
lahf
and
xchg
mov
imull
in
mov
dec
jg
loopne
mov
stos
iret
fwait
and
xor
stc
movsl
mov
into
jecxz
dec
inc
inc
ss
adc
mov
les
dec
in
jg
in
enter
mov
clc
andb
scas
jno
pop
or
add
mov
cmc
mov
inc
rclb
test
jg
jge
sti
mul
jb
leave
mov
push
mov
push
mov
aas
dec
je
lret
adc
jg
mov
xchg
xchg
mov
jge
idivb
jo
jmp
push
sub
adc
pop
xor
inc
jg
xor
push
adc
negl
mov
xchg
icebp
push
sub
pop
decl
push
imul
fmuls
jg
and
lea
cmp
fwait
ud0
ljmp
pop
stc
pop
pop
andb
jg
test
xchg
scas
fwait
inc
aam
lret
cltd
dec
add
pop
imul
mov
mov
pop
xor
xchg
xor
call
in
lret
subb
sub
jl
das
es
dec
popf
mov
dec
repz
divl
jle
mov
sti
decl
pop
in
push
push
inc
mov
scas
movsl
test
add
mov
inc
mov
scas
call
leave
insl
daa
roll
loopne
mov
cltd
cs
mov
out
rcl
pop
lcall
xchg
lret
lcall
enter
rcrb
lock
lea
incl
sbb
mov
test
sub
imul
scas
mov
in
push
jo
loopne
call
push
sbb
sub
ret
jne
cmp
adc
mov
mov
clc
incl
xor
int
cmp
xor
cmp
int3
cwtl
ja
xchg
adcl
cli
mov
test
xorl
dec
or
mov
out
fsubrl
ljmp
sub
xor
mov
pop
cmp
popa
pop
inc
ret
or
decl
in
mov
cmc
maskmovq
imull
inc
divb
mov
mov
mov
cli
shrb
mov
bound
ja
mov
icebp
lret
data16
mov
sbb
loopne
into
mov
inc
icebp
stos
decl
add
je
pop
shll
push
add
add
mov
pushl
insb
dec
test
adc
adc
mov
jle
jg
mov
nop
je
ds
das
add
adc
out
and
cs
push
dec
daa
aam
push
mov
je
jp
adc
jmp
out
fidivrs
mov
mov
out
sub
and
lcall
and
incl
cmp
mov
and
add
push
push
sahf
dec
jmp
add
insl
sahf
das
xchg
stc
out
rcrb
xchg
or
insl
clc
loop
lcall
and
lcall
insb
push
enter
adc
pop
fnstcw
mov
and
pushl
lea
push
push
jmp
orl
pushf
jg
push
mov
fmuls
jp
mov
test
incl
xchg
inc
movsb
push
ja
les
sbb
lods
dec
in
xor
pop
imul
test
and
push
sbb
cmp
lret
adc
and
cmpl
jmp
jle
jns
popf
sbb
xchg
pop
mov
push
fistpl
iret
pop
push
jnp
lcall
dec
lahf
dec
push
jmp
adc
dec
or
push
jno
pushf
aaa
mov
int
decl
push
test
cmp
bound
bound
scas
push
test
pop
imul
sti
fdivp
push
lcall
xchg
outsb
loop
lahf
push
push
into
sbb
mov
int3
es
cmpb
cmpb
sarl
mov
popl
mov
lods
test
mov
push
sub
lods
roll
mov
cmp
xor
mov
decl
pop
mov
ljmp
mov
cs
adc
mov
pushl
icebp
inc
rorb
mov
add
sbb
ds
sub
fistps
cwtl
imul
inc
inc
fwait
adc
xchg
jmp
mov
test
jo
cmp
mov
sti
rorl
pop
cmpb
adc
int3
loope
popl
stc
pop
fsubp
ficoms
aam
lea
and
mov
jmp
or
and
ret
push
rcrl
cmp
pop
cmp
cmp
jle
js
sbb
cltd
adc
ljmp
ljmp
lods
sarl
cmp
lret
push
mov
test
pop
push
jbe
pushf
into
adc
mov
stc
push
jecxz
jg
lcall
sbb
pop
mov
jnp
inc
cwtl
sub
sbbl
mov
jbe
lock
jmp
sub
jecxz
clc
jbe
stc
sbb
clc
icebp
cld
pushf
movsb
push
popa
out
dec
pop
jmp
and
jbe
loop
lds
cmp
das
xchg
test
push
or
incl
mov
gs
out
mov
jp
dec
insb
pushf
push
in
in
mov
shll
int3
mov
lds
dec
sbbb
mov
cld
lcall
scas
pop
negl
xchg
adc
sbb
dec
pop
push
aam
in
jns
pushl
icebp
sar
sbb
fwait
popf
sbb
cmpsb
out
outsl
data16
xchg
fwait
dec
pop
xchg
add
lcall
mov
or
jae
sub
mov
cmp
fldcw
ds
dec
fisubrs
ljmp
xchg
xor
and
lcall
and
rclb
pushl
sbb
adc
cmc
xchg
lahf
or
rcrl
orl
imul
jmp
jnp
mov
rcrb
cli
mov
loop
call
or
pop
adc
test
mov
adc
lods
fwait
sbb
test
int
mov
jmp
dec
shrl
call
dec
ljmp
outsb
in
lret
dec
xor
data16
xchg
mov
mov
add
popf
dec
int
sbb
or
insl
in
repz
dec
push
mul
out
inc
pushl
mov
insl
mov
aaa
lret
jns
enter
push
or
jmp
jecxz
add
or
push
add
adc
mov
mov
cmpsb
push
aad
lcall
push
mov
add
adc
mov
xor
insl
jmp
sbb
xchg
xchg
jl
decl
and
daa
cmp
hlt
mov
scas
lret
cs
inc
xor
icebp
lcall
adc
hlt
loope
not
insl
xchg
hlt
lcall
mov
fwait
or
jno
xchg
jle
xor
push
or
mov
leave
mov
dec
xor
das
movsb
popf
adc
sub
push
mov
pop
orl
jmp
mov
jns
pop
decl
cmp
xlat
dec
adc
and
push
jg
xchg
pop
data16
push
mov
addr16
jmp
sarl
or
gs
decl
addr16
lcall
shll
cwtl
xchg
cmp
sbb
call
jl
lcall
cs
bound
enter
lock
das
pop
fmull
mov
jb
aam
push
jo
cmp
je
and
aas
mov
decl
ljmp
ret
dec
mov
xor
jle
ljmp
fdivl
adc
andl
xchg
add
and
jmp
es
fwait
std
fmuls
jmp
mov
int3
cltd
ret
loop
mov
insl
ljmp
inc
pushl
push
dec
test
adc
cmpsb
outsl
dec
mov
and
mov
cmp
testb
std
inc
lods
testb
dec
cli
sbb
test
mov
xlat
dec
cli
jl
mov
decl
adc
add
cmc
jb
sbb
iret
push
movsl
je
aam
cmp
and
cmp
inc
push
repnz
or
adc
stos
jle
and
fistl
and
stos
and
inc
call
cwtl
or
xor
popf
dec
mov
push
jns
adc
popf
push
incl
cmp
std
je
jmp
dec
mov
pop
or
outsb
push
mov
andps
push
fstps
xor
pop
rcrl
pop
leave
clc
jge
lret
lcall
fiadds
mov
in
add
pop
jp
js
mov
ljmp
inc
div
pop
push
call
cmpsb
sbb
pop
cmp
jle
sahf
add
mov
adc
sbb
sarb
mov
lcall
daa
movsl
xor
add
div
xchg
shlb
sub
js
adc
and
in
repz
and
mov
movsl
jecxz
xchg
cmp
outsl
dec
add
arpl
add
hlt
call
dec
hlt
xchg
fwait
and
ljmp
mov
bound
ljmp
mull
mov
leave
inc
std
jg
sub
cld
ljmp
sar
call
xor
push
xor
jge
movsb
shll
cmp
into
sub
incl
sub
adc
mov
jbe
inc
push
daa
arpl
xor
incl
mov
adc
dec
rcl
std
add
add
sbb
jg
fsts
out
sub
fidivrl
add
add
nop
mov
js
jnp
stos
xchg
fnstcw
sub
mov
aaa
std
pusha
aam
out
and
xchg
and
fcmovnu
cld
and
cmpsb
js
jne
push
inc
sbb
dec
test
imul
imul
lods
xor
pop
cmp
mov
dec
mov
fistpll
stc
add
jns
xor
fcomip
push
add
mov
jbe
pop
add
jne
or
xor
enter
incl
lret
pop
xchg
mov
push
scas
mov
mov
jmp
popa
aad
lcall
pop
xchg
in
aad
xor
jg
daa
in
xchg
outsl
jb
pushf
xchg
mov
inc
cld
jg
fsubrs
jg
jmp
xchg
jmp
cmc
mov
or
lcall
orl
inc
decl
lods
pop
jecxz
addr16
xor
add
in
adc
mov
xchg
cs
fistl
fdivrl
outsl
and
cld
lcall
and
ljmp
add
pop
in
mov
imul
cmpsb
or
fs
sbb
mov
sub
sub
ljmp
pop
lods
fbstp
arpl
xor
mov
add
or
call
daa
xor
mov
cli
sbb
mull
jmp
push
sahf
and
aaa
int
loopne
push
out
lcall
add
jge
fwait
xchg
xchg
mov
cmpsb
add
shrb
dec
aas
mov
into
jns
jbe
add
pop
les
lods
mov
jl
xor
jp
cmpsb
xchg
xor
mov
inc
mov
jo
or
movsb
test
sbb
push
incl
mov
pushf
jnp
xor
or
xor
cmp
out
rcrl
cli
push
mov
pop
std
jmp
adc
jl
mov
or
inc
pushf
enter
lcall
lcall
add
dec
insb
cmpsl
push
add
fs
sub
movsb
mov
mov
std
push
decl
or
push
jg
rolb
inc
and
pushf
pushf
out
popf
ss
or
ljmp
andb
in
out
cmpsl
mov
pop
cmp
scas
cmpsb
in
pusha
lret
mov
pushl
push
ficompl
mov
mov
cs
jne
scas
push
dec
ds
add
mov
lret
js
fiaddl
shll
inc
sub
xor
imul
shl
jp
movsb
and
cli
inc
adc
mov
pop
testl
ljmp
xor
pop
stos
inc
aas
aaa
inc
xor
loopne
js
pop
jle
sti
iret
mov
lods
lret
das
mov
je,pn
and
sub
rorl
push
test
int
inc
scas
sub
mov
stos
xlat
shll
ljmp
add
cmpsb
movsl
fisubrl
sar
call
push
pop
mov
or
mov
push
jmp
and
call
mov
dec
jno
xlat
pop
add
test
cmc
jnp
nop
push
xchg
cli
call
dec
dec
out
cs
jge
add
adcl
arpl
and
out
push
push
int
xor
cs
stos
mov
mov
mov
shll
jmp
jbe
add
push
push
dec
xor
insl
push
mov
sti
loopne
jnp
loop
push
fisubs
shrl
js
pop
std
mov
push
pop
nop
jmp
push
dec
shll
daa
icebp
jmp
ja
push
cltd
add
jg
mov
xor
gs
push
pop
sub
xchg
and
pushl
xor
sbb
out
fcmovne
dec
lea
rclb
inc
fdivs
and
decl
mov
mov
frndint
xchg
imul
pop
fcoml
jnp
inc
call
lcall
inc
es
pop
fldt
dec
push
xchg
fmuls
adc
cli
mov
xchg
lret
es
xor
push
pop
or
pop
xchg
adc
repnz
idivb
bound
push
adc
bound
gs
adc
fwait
sub
incl
lret
out
mov
adc
lret
xor
cmp
negl
ret
nop
ljmp
adc
out
or
scas
dec
cmp
push
push
xchg
dec
pusha
loop
jl
aad
jbe
pop
add
mov
lods
sub
je
cmpsl
xchg
lahf
stos
decl
std
pop
ds
out
adc
pop
xchg
push
add
cmp
call
ficomps
mov
aad
repnz
je
decb
leave
aad
mov
xchg
mov
cmp
and
int3
incl
loope
ret
cld
dec
and
mov
ss
dec
mov
mov
push
test
das
cli
in
lock
int3
loopne
add
test
push
jecxz
mov
push
push
loopne
push
aaa
lea
out
cmp
sub
roll
adc
and
loop
lcall
loopne
jae
inc
xchg
adc
inc
pusha
notb
ret
fsubs
inc
push
and
sbb
pop
lock
sahf
inc
daa
lods
pop
jo
and
xor
mov
pop
xor
jg
fadds
mov
xor
mov
lret
ret
cmp
cmpl
call
adc
daa
push
iret
push
adc
popa
mov
mov
sbb
mov
xor
add
call
add
push
mov
mov
shrb
mov
pop
in
jnp
inc
or
pop
or
xor
push
dec
jl
lret
call
inc
int
sub
jmp
add
push
dec
imul
testl
in
mov
and
cmc
dec
push
adc
lods
mov
push
scas
daa
pop
jns
xchg
lea
ret
cltd
call
pop
sbb
fucomp
xor
out
mov
into
aas
iret
imul
cmpsl
add
pushl
dec
rorb
dec
dec
call
add
pop
ljmp
iret
mov
dec
jmp
xorl
jge
add
scas
jmp
mov
pop
adc
xchg
in
call
fsubrl
jo
rolb
cmpsb
xor
jl
sarl
mov
push
push
mov
ss
pop
icebp
decl
lods
ss
scas
xchg
add
pop
pop
fbld
mov
fldcw
cmp
dec
inc
inc
in
pop
or
popa
xchg
pop
and
repnz
pushl
int
jg
mov
xor
inc
pop
or
int3
or
and
test
add
jae
ljmp
sarb
stc
jge
rcl
push
movsl
scas
fidivl
add
push
scas
test
cmpsb
daa
lcall
cld
repz
lahf
dec
and
jecxz
xchg
and
add
adc
jg
cli
idiv
ljmp
shr
mov
mov
cmpsl
sarb
cmp
std
dec
ljmp
mov
jmp
mov
loopne
lods
movsl
xchg
lods
loope
mov
pushl
fs
and
enter
stos
xlat
cmp
pop
mov
mov
scas
imul
cmp
push
std
outsl
cli
call
and
in
cld
push
int3
aam
cli
xor
or
inc
mov
mov
addb
or
and
mov
lahf
fidivl
jmp
cmp
mov
cmc
sub
dec
fwait
lret
xchg
push
dec
push
sti
jecxz
test
jmp
jg
push
lods
inc
inc
fisubrs
fwait
dec
mov
xor
xchg
into
inc
sti
or
decl
dec
aad
xchg
mov
jge
sarl
dec
rclb
cmpb
pushl
gs
adcb
mov
mov
and
and
ret
lds
decl
inc
iret
jns
ja
mov
test
mov
adc
outsb
pop
lcall
incl
and
fidivs
lds
jg
jp
jns
add
enter
jne
sbbl
lahf
cld
lret
mov
inc
out
pop
aam
sbb
mov
mov
cld
sbb
jb
ss
scas
push
fcoml
sub
loopne
sti
addb
pop
push
imul
flds
mov
cltd
imul
lock
mov
mov
lock
incb
inc
les
pop
cli
push
xor
add
pushf
mov
lock
pushl
and
jb
add
lea
je
push
dec
ljmp
xchg
insl
pop
mov
or
dec
mov
decl
js
lea
stos
mov
bound
ja
jecxz
and
ds
xchg
cmpsl
popa
jne
mov
int
mov
sbb
push
jmp
cmp
add
enter
or
int3
xchg
adc
roll
mov
pop
jmp
inc
add
sti
push
inc
adc
dec
jns
jo
andl
cmpsl
int3
sub
mov
lea
mov
int3
scas
mov
xor
int
lahf
mov
fsub
cmp
in
inc
aas
mov
stos
cmp
pop
mov
mov
jmp
and
inc
andb
lods
add
xor
hlt
mov
pop
sbb
lret
push
mov
scas
fisubl
pusha
movzbl
and
jbe
lods
jns
mov
out
sbb
push
flds
fistps
sub
and
mov
das
dec
mov
shll
cmp
xor
icebp
mov
jg
push
or
jl
enter
jbe
xor
lods
inc
sbb
cmp
sbb
jg
jno
jmp
add
test
inc
dec
xchg
ja
adc
mov
into
xorl
in
sbb
shl
jle
neg
pop
or
enter
sbb
jmp
sbb
push
call
pushl
inc
pop
adc
and
cli
pushf
test
scas
loope
decl
xchg
push
add
xchg
mov
jle
inc
or
aam
frstor
mov
incb
dec
movsl
js
xchg
outsb
ljmp
jmp
cmp
jg
sub
fnstsw
sub
mov
cld
ret
dec
test
pop
fadds
repz
pushl
loopne
mov
xchg
daa
mov
cwtl
mov
ss
push
push
lahf
call
imul
push
not
cmpsb
dec
push
std
jg
stos
in
jp
push
into
shlb
add
hlt
loopne
dec
cmp
jno
jg
sbb
mov
jl
shll
sarb
ret
add
jmp
sub
cmpsl
je
mov
mov
inc
sahf
sbb
dec
lahf
jnp
fcomps
ljmp
sahf
mov
testb
inc
cmp
sub
sbb
pop
pop
or
outsb
das
pop
ret
add
dec
push
mov
mov
mov
cmp
push
pop
cmpsl
mov
jae
stos
jb
shrb
incl
nop
out
cmp
xchg
addb
mov
sbb
loop
mov
jnp
jbe
mov
jb
das
scas
jp
hlt
sbb
xlat
icebp
fcmovnb
xchg
cli
jb
mov
stc
jbe
addr16
mov
ljmp
mov
nop
hlt
js
call
popf
dec
fdivrl
lock
dec
incl
cli
pop
addr16
mov
xchg
out
movsb
cld
add
and
xchg
adc
repz
iret
mov
int
loop
sub
xchg
out
out
decl
test
mov
sahf
pop
cmp
sbb
fdivrl
incl
dec
shrb
scas
cmp
leave
and
stc
popf
mov
repz
decl
fsubrp
mov
jecxz
mov
xchg
jmp
xchg
push
repz
cmp
mov
insb
mov
popl
scas
clc
pop
or
in
push
ds
loop
push
decl
mov
aam
lods
cmc
aam
adc
test
xor
jno
jg
cld
stos
push
inc
cmp
call
xor
in
lcall
clc
int
out
aas
sbb
sub
push
divb
out
inc
pushl
mov
rcrl
dec
fs
repnz
test
mov
jnp
sarb
xor
rorb
push
dec
shl
sbb
xlat
xorb
cmp
add
or
pushl
in
push
aaa
sbb
stc
push
push
jg
sbb
test
outsl
push
cmp
shl
into
and
and
shlb
pop
sti
push
jae
add
add
sti
imul
jg
xchg
pusha
pop
sub
mov
xor
insl
inc
data16
in
adc
mov
stos
and
lret
ljmp
sbb
mov
in
mov
push
pusha
ret
hlt
dec
or
fcmovnb
dec
loop
es
lahf
mov
cmp
mov
in
inc
mov
mov
sbb
sbb
mov
push
dec
or
repnz
dec
add
outsl
jb
repnz
dec
add
outsb
or
rolb
mov
test
pushl
iret
xor
jl
aaa
pop
xor
adc
xchg
mov
and
es
scas
insl
into
insl
sub
or
fnstsw
push
pop
aad
mov
daa
lcall
cmp
xor
sbb
mov
add
sbb
xor
decl
lock
shl
lods
lahf
in
fcoms
enter
push
push
cmp
jmp
mov
push
enter
mov
aam
stos
stos
or
andb
mov
loope
or
jno
insl
sub
push
or
jg
dec
jns
pusha
add
dec
insl
mov
clc
ljmp
pop
jb
loopne
cmp
sahf
lcall
outsb
push
mov
call
jb
pop
mov
add
lea
mov
ficompl
imul
cmp
and
arpl
mov
sub
iret
adc
adc
inc
push
mov
icebp
cs
inc
loope
add
ljmp
mov
push
js
jle
fnstenv
xchg
jbe
mov
sub
incl
outsb
int3
test
jmp
in
xchg
mov
sbb
enter
xor
lcall
setg
sbb
xor
pop
jg
push
aas
out
xchg
mov
jb
popf
pop
mov
int
mov
insl
xchg
dec
int
pushf
mov
fdivrs
stc
aad
and
stos
andb
clc
jmp
sub
dec
cmp
mov
je
cmp
mov
icebp
add
clc
ljmp
clc
and
dec
call
jmp
adc
add
mov
faddl
scas
pushf
sbb
aam
mov
call
xorb
or
inc
call
int3
cmc
jne
mov
int
dec
cmp
jae
repnz
je
mov
ljmp
shlb
pop
mov
and
cmpsl
pop
lds
in
test
ljmp
jp
jae
enter
push
sbb
ret
xchg
xchg
fcoml
pop
and
ljmp
fisttpl
popa
shll
inc
hlt
in
das
stc
mov
out
clc
cmp
sbb
add
hlt
jo
adcl
inc
fdivl
pushf
mov
decl
and
inc
sub
pop
pop
aad
jae
shll
ss
fwait
mov
adc
out
test
aam
lcall
insb
mov
hlt
xchg
lret
cmpsb
das
sbb
out
shll
or
and
rorb
psubb
jno
adcb
loopne
cmc
add
scas
aam
pushl
cli
out
cmp
pop
cmpsl
decl
dec
push
and
pop
hlt
dec
call
adc
sbb
mov
mov
mulb
ror
aad
call
mov
imul
repz
loop
push
fs
mov
inc
mov
push
dec
mov
hlt
fsubl
lods
mov
push
adc
je
movsb
xchg
mov
fbstp
or
and
data16
jmp
notl
sbb
pop
test
sbb
pop
mov
cld
call
pushf
adc
lahf
in
int
shrl
lock
xchg
dec
divb
rorl
test
adc
ss
fcomip
ja
and
cmp
insb
std
fidivrl
mov
push
movsb
push
test
cli
dec
mov
pop
mov
xchg
sbbb
xlat
sbb
enter
fildll
xchg
mov
clc
sub
imul
jns
mov
xor
int
loopne
jmp
pop
cli
add
dec
inc
je
ds
mov
fnsave
mov
jle
mov
aas
ds
push
lea
sbb
ds
outsb
jg
push
sbb
xchg
pop
shlb
call
or
int3
mov
and
cwtl
jecxz
out
pop
jge
xor
imul
aam
cmp
sub
dec
or
adc
clc
test
test
arpl
mov
sub
mov
sarl
adc
cmp
out
or
pushl
push
pop
add
gs
xor
mov
push
xchg
mov
test
push
ljmp
into
add
jnp
les
and
xchg
popa
test
clc
push
sub
ljmp
sbb
fadds
mov
sti
sbb
and
decl
mov
mov
lods
inc
lahf
lds
sub
jl
gs
imul
jmp
cmpsb
mov
xor
xchg
pop
ret
daa
test
lahf
or
pop
lock
push
mov
xchg
pop
mov
addb
test
repz
fwait
cmp
add
cmpb
cld
gs
xchg
inc
lcall
lcall
xor
movsl
xor
add
push
movsb
jle
or
fs
xlat
ljmp
call
add
jp
jecxz
addr16
pusha
mov
test
xor
lret
fistps
daa
mov
jmp
xor
lret
rol
dec
out
dec
xchg
xchg
pop
fbstp
xchg
out
push
iret
inc
ljmp
add
sub
stos
aad
pushf
imul
int
push
ja
repnz
out
loop
inc
call
push
mov
ljmp
data16
push
jo
incl
out
or
dec
repnz
mov
cmp
sbb
add
push
pop
mov
ja
jle
incl
mov
je
add
xchg
pushl
cld
pushl
push
insb
and
inc
push
sbb
lods
push
dec
jne
lds
ret
sbb
pop
loopne
das
xchg
mov
push
lds
mov
test
jo
sahf
pop
push
ret
or
jmp
pop
ror
call
mov
fs
push
ds
sahf
inc
xchg
insl
pop
pushl
ss
addr16
dec
mov
cmc
push
mov
je
sub
bound
cmpsb
mov
xor
and
dec
or
clc
hlt
call
ret
dec
dec
inc
jl
insb
mov
repz
push
shrb
in
push
cmpsb
jg
lock
add
mov
sti
and
push
or
shr
mov
mov
pushf
adc
mov
fildll
cmp
cmc
pop
dec
mov
fdivr
jg
hlt
inc
push
mulb
test
xchg
xchg
jno
rolb
push
mov
not
lret
shlb
loop
and
sub
loopne
adc
xor
outsb
dec
cmpsl
cwtl
pop
hlt
incl
push
icebp
add
loop
test
xor
repnz
idiv
ljmp
call
xchg
clc
cltd
imull
scas
ret
test
dec
int3
xchg
xchg
shrl
ds
lcall
test
sti
mov
mov
push
dec
test
movsb
lods
adc
out
sbb
jmp
cld
adc
movsb
adc
sub
xchg
add
repnz
int3
xlat
icebp
inc
or
inc
xchg
mov
decl
jecxz
int3
jg
scas
ljmp
mov
sbb
inc
mov
dec
subb
and
je
negl
aam
cli
mov
sbb
jmp
mov
data16
imul
nop
ljmp
adc
cmp
icebp
aaa
sbb
dec
pop
add
les
fwait
out
adc
sub
pop
push
mov
cmp
cld
mov
popf
sti
and
les
ljmp
pop
dec
sahf
jmp
sub
ljmp
pop
cmp
nop
mov
decl
inc
pop
adc
js
testl
lea
push
xchg
or
pusha
inc
lahf
in
pop
cmp
in
orl
xlat
data16
jmp
push
out
sub
imul
inc
dec
mov
mov
jmp
sub
je
or
arpl
stc
out
loopne
mov
ja
stos
in
sbb
mov
pushl
mov
xor
loopne
xor
aas
rcl
popa
mov
sbb
out
sub
pushl
ljmp
aam
imul
mov
das
push
test
xchg
cmp
push
jns
aas
sub
adc
cltd
das
sbb
out
xchg
xchg
popa
fadds
sub
insb
jmp
or
sub
into
test
aad
pop
sbbl
sbb
decl
test
outsb
push
lret
pop
ret
mov
or
arpl
cmp
outsl
ss
mov
mov
jno
insl
cmp
jge
das
aaa
sbb
lcall
call
mov
cmp
sbb
loope
fisubl
inc
and
decl
cmp
dec
cmp
pop
ds
cmp
stc
pop
or
mov
decl
lea
adc
or
mov
jge
arpl
test
lret
aas
pusha
push
mov
lods
insl
insb
push
and
leave
xchg
std
push
stc
imul
mov
decl
popa
in
ja
sbb
mov
data16
jnp
jae
fstl
jecxz
bound
mov
jae
cmp
jno
jne
pop
daa
outsl
jno
inc
push
push
pop
imul
adc
jo
inc
or
loopne
or
or
insl
decl
inc
dec
add
dec
xchg
in
sub
je
push
sub
mov
cmc
ljmp
mov
inc
cmpsl
fwait
ljmp
adc
inc
inc
jp
push
std
jmp
pop
and
sbb
int
mov
cmc
sub
in
stos
push
pop
insl
jmp
push
xchg
jbe
and
jbe
outsl
popa
add
inc
jge
int3
jnp
mov
fwait
inc
xchg
xlat
and
xor
es
call
ja
data16
ljmp
lahf
xchg
mov
and
or
and
cmp
jle
aam
nop
cli
dec
stos
mov
sub
xor
add
or
sbb
pop
mov
ljmp
mov
mov
jne
and
mov
call
loopne
decb
in
dec
jne
mov
out
inc
in
lret
xorb
decl
mov
jae
push
xchg
into
mov
sti
xchg
push
and
faddl
jmp
dec
adc
out
jo
icebp
fdivl
xor
sbb
push
hlt
jge
jnp
xorb
loop
pop
loopne
jb
mov
cmp
adcl
jecxz
pop
inc
cmp
pushl
adc
mov
xchg
faddl
test
jnp
bound
cmp
jns
jg
mov
aam
mov
pop
js
insl
adc
push
jae,pn
jmp
into
xchg
cltd
xor
mov
sbb
mov
pop
pushf
inc
nop
or
daa
push
int3
cmpsb
mov
insl
adc
test
dec
pop
fdivrs
jmp
xchg
fldenv
and
mov
stos
jne
or
push
shlb
inc
mov
and
cmp
call
jbe
add
data16
inc
mov
pop
pushl
add
test
mov
jl,pn
cmpsb
lcall
xchg
sbb
or
xchg
inc
scas
push
dec
nop
cmp
insb
cmp
fwait
sbb
sar
pushl
mov
add
imul
pop
mov
incb
call
and
negl
mov
mov
sub
ret
jae
dec
rcll
jmp
movsl
jmp
ljmp
sub
add
in
rolb
cmp
jmp
call
or
movsl
rorb
movsb
pop
cmp
fsubr
inc
mov
je
adc
jg
jg
mov
gs
jecxz
pop
loop
fisttpll
jmp
lods
xchg
mov
push
jae
and
push
iret
loop
pushf
aad
dec
in
ret
pushl
ds
dec
cmp
shl
outsl
in
test
aam
xor
loope
cld
les
sar
incb
adc
mov
rolb
sbb
jg
frstor
fnstcw
jecxz
inc
mov
jmp
sti
test
test
and
fdivrs
arpl
jns
call
cmp
arpl
mov
jb
in
or
push
data16
xchg
insb
lret
sar
inc
sar
xor
mov
xor
arpl
xor
ficompl
int
inc
insb
leave
adc
incl
add
cmp
stos
pusha
xchg
js
mov
fnsave
into
cmp
jbe
push
ljmp
clc
jmp
hlt
dec
mov
call
loopne
je
push
jg
xchg
pushf
sbb
jge
jg
mov
mov
mov
sub
add
inc
lea
mov
dec
pop
adc
mov
rcll
in
dec
push
dec
mov
xor
scas
xor
pushl
pop
pop
ljmp
add
cmp
outsb
adcb
mov
lods
lock
decl
pop
in
mov
in
push
adc
xchg
sbb
data16
mov
mov
cld
clc
mov
ror
pop
sbb
in
loop
push
imul
imulb
pop
andb
xchg
scas
out
cld
adc
mov
subl
ljmp
pop
mov
in
inc
stos
jae
jbe
aaa
mov
jnp
jmp
pusha
push
jbe
addb
mov
ljmp
push
adc
xchg
mov
or
cmc
xchg
add
dec
pop
and
pop
jle
xchg
and
je
add
jmp
cmp
mov
fxtract
or
call
shlb
std
lds
cmpsb
add
icebp
mov
mov
lahf
jns
int3
add
ljmp
jb
imul
xchg
mov
adc
adc
fwait
xchg
jne
xchg
notb
rol
push
out
decl
shll
stc
pop
popa
jg
loope
stos
push
add
lahf
insl
sahf
pop
add
jnp
inc
es
lret
mov
call
add
inc
pop
push
jae
stos
ljmp
mov
sbb
mov
pop
repz
in
dec
fneni(8087
lcall
dec
out
mov
sub
loop
scas
mov
mov
call
cmp
mov
adc
mov
mov
sub
mov
sub
adc
pop
sub
mov
mov
pop
push
pushf
or
sbb
aad
arpl
xlat
lahf
mov
ret
decl
ljmp
pop
or
mov
dec
iret
dec
push
pop
or
push
jae
repz
adc
gs
ljmp
cwtl
sti
mov
out
rorb
xchg
aaa
das
and
imul
or
inc
and
sub
sar
lcall
sub
push
pop
inc
rolb
jae
mov
fiadds
fdivl
lods
es
sub
nop
pushl
leave
in
xchg
sbb
fs
sbb
push
push
jne
dec
pop
fwait
mov
call
push
sub
mov
fistpl
decl
rcr
mov
mov
inc
mov
and
imull
into
pop
adc
inc
add
call
clc
mov
sub
adc
xchg
inc
ret
ret
sub
xchg
aas
mov
pushf
jmp
jg
adc
cmp
sbb
sahf
dec
cmp
rclb
mov
dec
insb
arpl
pop
and
je
jg
call
inc
jl
and
mov
sahf
dec
fadds
fcmove
call
inc
mov
jge
mov
ret
les
stos
dec
lock
movsl
cmp
leave
decl
xor
ret
pop
adc
xchg
enter
popf
lret
push
insl
sar
lcall
fldt
pop
lods
andb
add
or
aad
aaa
std
decl
loop
sarl
and
bound
iret
mov
mov
jmp
out
xchg
xchg
push
xchg
sbb
mov
iret
and
pushl
in
xchg
outsl
out
sbb
mov
mov
shll
dec
and
cwtl
andb
jns
cmp
or
or
test
cmc
stc
adc
nop
mov
cmp
int
jle
jl
test
dec
lods
jb
in
mov
mov
addr16
add
xchg
jo
cmp
and
pushl
push
jae
js
jl
mov
lds
cmp
sub
out
out
cmp
add
ljmp
shrb
es
lods
xchg
or
ret
add
aam
or
decl
hlt
dec
inc
outsl
push
shrb
or
sbb
mov
dec
mov
mov
push
fucom
stos
mov
popa
notl
out
or
nop
jge
xlat
out
mov
pop
push
mov
jl
icebp
lcall
and
mov
arpl
repnz
mov
push
mov
es
xor
decl
sub
add
cmp
sbb
lods
inc
xchg
ror
mov
push
std
dec
xor
lds
mov
movsb
stos
xorb
jg
loopne
rcll
or
add
add
add
mov
ljmp
test
push
imul
cmp
js
enter
addr16
shll
mov
daa
cmpsb
mov
jge
add
arpl
and
lcall
adc
mov
jl
insb
in
loop
and
in
jmp
repnz
push
xor
push
shlb
je
push
adc
push
pop
call
cld
call
pop
and
inc
js
jp
ret
sbb
push
xor
adc
cmc
call
call
rcr
sub
rclb
push
ds
fidivrl
jg
fs
cs
mov
cmpsb
jp
cmp
icebp
lods
lock
adc
mov
and
call
leave
mov
jne
push
hlt
rcll
mov
inc
aaa
loop
xchg
or
add
jmp
call
push
test
xchg
cmpsb
arpl
cs
dec
insl
js
jg
nop
cmp
imul
enter
pop
mov
data16
ljmp
xor
ret
jg
push
test
adc
es
out
fwait
loope
or
stos
jmp
inc
xor
out
push
mov
in
out
lret
adc
xor
ljmp
mov
lahf
mov
mov
or
call
xlat
jo
loopne
pushl
or
mov
jl
sub
and
int3
add
mov
sbbb
xor
pop
mov
cmpsb
ja
jbe
pop
out
inc
aad
cli
sbb
sbb
xchg
cli
adc
movsl
sub
movsb
mov
add
hlt
fstpl
cmp
out
mov
scas
adc
jle
call
fs
popf
cmpsl
jnp
adc
mov
aas
adc
rclb
jmp
cmp
dec
cmp
jne
cmp
cmc
xor
add
pop
test
sbb
popf
lods
incl
push
xlat
mov
stos
xlat
outsb
mov
sub
fistps
and
sub
out
out
clc
sbb
cmp
and
aas
adc
rorl
xor
lock
push
sbb
and
arpl
xchg
add
add
cli
fists
mov
incl
jns
adc
lock
xchg
pop
xor
push
and
push
cmp
incl
pop
jecxz
dec
es
filds
cmp
fcomps
pop
inc
cmpsb
fwait
loopne
ljmp
mov
les
lcall
xor
jbe
dec
in
mov
les
push
clc
push
xchg
dec
mov
dec
pop
mov
dec
fisttpll
or
inc
inc
cmp
popa
inc
arpl
pop
push
in
and
pop
repz
and
pop
mov
aas
pusha
call
pop
das
je
pmulhuw
cltd
in
aas
ja
call
push
out
aaa
lock
insb
pop
lds
les
xchg
out
rclb
lahf
xchg
loop
stc
jl
push
mov
push
push
shlb
cltd
paddd
fsubrs
dec
nop
xor
inc
or
dec
or
negl
add
xchg
jg
sub
setae
loope
test
clc
push
xchg
and
add
mov
push
andb
xor
jb
mov
pop
xchg
stc
mov
adc
jge
fst
or
adc
enter
jg
jle
dec
jnp
xor
stos
xor
pusha
gs
lret
lock
inc
mov
inc
sbb
out
push
fmull
inc
xchg
lds
mov
lcall
jl
dec
xor
cwtl
mov
xor
xchg
sbb
sub
loope
xchg
sub
aas
es
mov
sub
jg
aad
insb
xor
mov
push
jae
xchg
xor
ljmp
imul
push
mov
mov
stos
and
inc
and
lcall
jg
movl
loope
cli
movsl
cld
lcall
add
ds
in
cmc
pop
jge
mov
adc
jno
xor
test
and
xor
cmp
loope
or
pop
gs
stc
sub
lcall
call
cmp
jnp
and
jno
jnp
push
imul
cwtl
mov
mov
mov
ljmp
loope
inc
push
idivl
inc
outsb
jg
fidivrl
je
sti
mov
dec
and
xor
call
or
sub
je
mov
repnz
xchg
int
xchg
inc
sbbl
cli
cmc
mov
push
mov
pop
inc
sti
fldenv
adc
or
xchg
mov
stos
insl
incl
fsubs
lcall
pop
lea
subl
cmp
push
test
insb
sbbb
shrl
inc
cmc
sub
je
dec
push
popf
pushl
inc
sbb
pop
decl
jns
cmp
lret
xchg
fcoms
lea
xor
leave
mov
mov
push
pop
mov
sar
call
cs
sub
andl
test
sub
stc
lds
cmp
ds
dec
cmp
cli
rclb
mov
clc
popa
or
int3
test
xchg
mov
in
incl
popf
or
jb
out
stc
imul
adc
sub
lods
dec
cltd
shrb
call
mov
cmc
push
mov
push
sbb
jo
cmp
pop
repnz
scas
decl
cmp
mov
jg
mov
jbe
push
xchg
mul
xor
add
add
and
cld
cmpb
mov
mov
jg
fcmovb
xchg
push
or
mov
iret
pop
subl
arpl
sbbb
mov
cmp
xor
push
bound
jmp
xchg
and
or
cld
call
jb
aad
push
inc
lcall
dec
sbb
sti
cwtl
or
loopne
ljmp
lcall
ds
mov
jge
sbbl
idiv
ljmp
pop
adc
das
push
jnp
enter
xlat
dec
or
aas
lret
ret
addr16
in
addr16
repz
in
outsl
stos
hlt
jno
repnz
cmp
jo
adc
mov
ljmp
out
push
sbb
and
out
inc
mov
fisubrl
xlat
sub
fdivrs
sti
add
xor
incl
fs
xchg
add
mov
fidivl
aas
aas
cli
push
pushf
dec
jmp
xchg
std
ljmp
jp
iret
imul
stc
dec
rclb
lods
cmc
add
ljmp
mov
and
dec
daa
outsl
xchg
xor
mov
xchg
adc
test
dec
ret
push
mov
pusha
mov
in
arpl
movsb
xor
mov
xor
mov
jo
stos
stc
inc
divb
aad
inc
xchg
mov
leave
mov
ret
lcall
xor
mov
daa
das
mov
jbe
add
mov
jmp
pushl
cld
xchg
push
fcoms
and
dec
lods
roll
push
cmp
xchg
divl
enter
jmp
stc
push
mov
pop
stos
adc
xchg
mov
mov
ret
sbb
xor
pop
fstps
clc
call
inc
jle
and
notb
fucomp
cmp
or
ljmp
push
jo
pop
dec
cmpsb
cs
cs
mov
mul
les
clc
scas
jmp
out
xor
jl
dec
ja
adcb
add
and
in
sar
decl
dec
adc
cltd
int3
imul
repnz
pushl
rolb
pusha
pop
sub
sahf
cli
mov
mov
mov
cmpsb
decl
push
testl
mov
repz
frstor
xor
ret
aam
dec
mov
or
add
loope
lock
imul
jmp
filds
iret
ss
inc
sub
frstor
mov
jmp
nop
jne,pt
or
int3
lock
cmp
mov
scas
leave
sahf
mov
push
hlt
test
mov
call
lret
and
push
cld
loope
xor
pushf
fbld
hlt
out
mov
cli
cltd
data16
push
lcall
ds
nop
add
loope
out
cmc
jno
mov
incl
aam
icebp
loope
mov
rolb
sbb
pop
pop
inc
xor
and
jmp
ret
sub
les
push
scas
jb
out
inc
rcrl
jg
push
das
xchg
mov
sbb
int
push
xchg
lods
jno
mov
lret
sub
lcall
mov
pop
mov
xchg
cld
mov
pop
test
jnp
test
jmp
xor
mov
xchg
mov
insb
push
test
add
ja
push
push
lods
call
push
dec
cltd
xchg
shlb
lock
adc
movsl
hlt
inc
jp
scas
lock
pop
cli
stos
add
xor
ret
imul
lcall
fmul
in
inc
scas
es
jge
repnz
es
mov
imul
stos
test
mov
pushl
pop
repnz
les
pop
je
imul
adc
push
ret
daa
mov
mov
js
cld
ljmp
test
in
cmp
sar
roll
push
sbb
or
cs
in
push
and
dec
xor
xchg
add
test
movsb
sbb
cmpsl
aas
dec
or
mov
push
nop
fidivrl
lcall
aam
xchg
int
in
test
xchg
adc
add
shlb
stos
call
push
out
rcr
imul
adc
daa
stos
inc
je
adc
sbb
push
push
aad
lcall
cld
fadds
lea
inc
popl
jae
notb
mov
incl
cs
adc
xchg
cmp
jmp
mov
popf
sbb
xor
xor
jp
xlat
jmp
xchg
stos
daa
cwtl
aaa
dec
inc
xor
xchg
fidivl
sbb
or
lcall
pop
fldcw
mul
mov
inc
pop
jae
jg
pop
cld
sbb
sbb
lcall
outsb
and
ja
adc
aas
test
out
inc
gs
and
sbb
mov
pop
inc
es
add
mov
cmpps
push
mov
ljmp
rorb
cmp
jo
ficomps
lcall
jle
iret
out
xchg
sub
lcall
and
or
rcrb
incl
lahf
iret
jecxz
js
xor
inc
xchg
test
arpl
xchg
mov
std
decl
mov
shl
dec
scas
pop
pop
jmp
cmp
cwtl
insl
sti
repz
movsl
call
mov
add
jae
xor
or
sub
pop
pop
sub
mov
lcall
mov
into
adc
lock
push
loop
daa
aas
iret
mov
dec
pop
in
jg
xchg
mov
loopne
lcall
call
jbe
sub
in
negb
mov
push
or
incl
jo
jo
mov
pop
or
incl
mov
or
enter
pop
or
pop
popf
rcr
decl
incl
jmp
sbb
cmpsb
popa
nop
jmp
mov
push
shrl
mov
orl
push
sarl
sbb
xchg
jmp
pop
fcmovnbe
cmp
jmp
sub
ds
fiadds
rcrl
sti
addr16
das
aas
cld
jle
imul
jmp
aas
and
in
cs
jne
sbb
jno
aad
lahf
pop
int
out
imul
jmp
ret
cli
call
sti
out
xchg
add
mov
jl
sub
test
push
mov
jg
fists
xor
inc
mov
xchg
jae
mov
cs
jnp
push
repz
xor
outsl
or
fstps
mov
and
jnp
dec
sbb
bound
into
decl
sti
fldt
xchg
push
push
fisttpll
or
cmpsl
imul
pop
addb
mov
faddl
repz
movsl
pop
dec
in
cmp
adc
call
lea
ret
pop
sbb
push
push
je
sahf
or
xor
movsb
xchg
outsl
loop
call
test
inc
sub
and
adc
add
sub
loope
pop
popa
fdivl
out
sbb
ficompl
push
cld
dec
pop
pop
aad
jbe
mov
out
movb
loope
inc
jae
or
xor
dec
int
push
push
insb
and
inc
push
inc
jl
inc
add
lcall
inc
daa
xlat
and
push
dec
sahf
lods
cmp
push
push
aad
jo
xor
fsts
scas
bound
repnz
push
sub
or
sub
cmp
pushl
push
mov
and
sbb
mov
mov
daa
in
call
push
lds
xchg
add
stos
sbb
dec
or
divl
dec
xor
repz
jb
sub
dec
insl
ja
sbb
insl
push
mov
cmpsb
ss
add
jbe
mov
nop
push
shll
xor
mov
jge
cmpl
call
jle,pt
mov
mov
shll
lret
xor
xlat
mov
jg
mov
aas
repz
icebp
insl
fstps
cli
add
jp
lods
adc
pop
sbb
cwtl
push
xor
lcall
hlt
lods
xlat
out
cli
jg
cwtl
cld
lods
cmpsb
enter
and
pop
jae
and
test
sbb
lcall
js
inc
pop
mov
inc
cmp
mov
jge
cmp
mov
movsb
jmp
aam
movsl
scas
gs
mov
jne
xchg
mov
incw
addr16
cmp
cwtl
call
mov
mov
sub
or
lret
test
pinsrw
lret
cmp
pop
lock
call
roll
es
stos
and
scas
jne
dec
sbb
jo
sahf
sbb
nop
shrb
iret
sbb
decl
pop
pop
pop
or
mov
sahf
test
add
dec
jg
sub
loopne
js
and
cwtl
fistl
jb
bound
sub
push
push
std
in
lahf
lcall
pop
mov
push
rcr
sub
mov
mov
popf
test
mov
mov
aad
fistps
push
inc
enter
cmp
xor
jmp
fmuls
repnz
add
lcall
sbb
int3
xor
and
out
mov
fistpll
push
rolb
hlt
sub
push
xorb
inc
pushf
mov
fisubs
jmp
fwait
cs
xor
xchg
in
mov
mov
inc
pop
sbb
decl
loope
or
mov
inc
jge
wrmsr
pop
lods
xchg
fcmove
cmp
pop
icebp
test
incl
lret
push
addr16
mov
mov
call
xor
decl
push
js
pop
sub
adc
aas
movb
sbb
or
pop
out
mov
fstpl
popl
in
sbb
sbb
mov
dec
cltd
jp
and
filds
inc
mov
lcall
popa
test
mov
jle
rcll
push
xchg
sub
hlt
cwtl
jno
xchg
rorb
pop
cmp
jb
cmpsl
cmpsb
or
jmp
shrb
inc
ret
push
lea
pushl
sbb
fisubs
test
sbb
popa
fs
decl
and
insb
or
testb
fnstsw
or
das
jecxz
enter
cmpsl
ficoms
es
push
pushl
punpcklwd
mov
cmp
rorl
lods
pop
lea
jne
pop
jmp
mull
sti
jbe
fstl
jle
pusha
and
adc
cli
into
outsl
lods
push
xchg
jg
add
jmp
xchg
sub
push
ficomps
push
and
shll
outsl
cmp
push
xchg
ljmp
ds
into
xchg
ljmp
pusha
shr
imul
pop
inc
and
movsb
sub
mov
add
adc
jo
rol
add
incb
in
add
jne
jne
pushf
mov
mov
movsb
fwait
pop
cmp
out
cli
mov
into
mov
inc
jne
aad
mov
call
negb
or
mov
call
cmp
or
pop
in
dec
sbb
adc
ret
out
sub
hlt
inc
adc
mov
scas
or
incl
cld
repz
dec
mov
xchg
pop
cmpsb
out
pop
push
lods
loopne
aam
or
cmp
jmp
stos
into
enter
lods
shrl
mov
xlat
leave
mov
sarb
cs
jp
insb
iret
hlt
sbb
or
enter
jbe
mov
imul
cmp
jo
call
call
add
andl
dec
inc
idivl
mov
mov
call
loopne
inc
std
jmp
fcom
test
mov
mov
and
jmp
push
mov
dec
data16
gs
dec
ljmp
sbbl
imul
jns
push
jae
das
repnz
mov
xor
aas
jb
dec
xor
push
sbb
jo
mulps
sub
and
inc
and
roll
mov
fcomip
mov
lods
jg
insl
fstpt
mov
in
imul
sti
imul
int
popf
sbb
fprem1
xor
sub
imul
js
sbb
push
cmp
sub
add
add
mov
add
adc
pop
data16
sbb
lcall
shl
or
cmpsl
aaa
xchg
push
add
scas
in
mov
add
mov
jg
lcall
xchg
sub
gs
pop
adc
dec
pop
hlt
nop
pushf
ret
inc
push
mov
adc
jle
mov
pushl
dec
movl
nop
loopne
rorb
pop
sar
incl
pop
inc
push
ret
popa
sbb
jae
jnp
mov
loop
repnz
decl
aas
xchg
push
inc
ljmp
hlt
adc
pop
sbb
xor
or
mov
mov
loopne
push
sub
movsb
xchg
adc
das
clc
add
cmp
jmp
adc
sahf
ss
xchg
ljmp
in
xor
into
dec
mov
notl
aad
fsubrs
rorb
loope
ljmp
sub
jg
push
xchg
mov
testb
push
ror
mov
xor
dec
in
call
inc
inc
test
pop
pop
adc
cmp
add
xchg
int
lds
test
es
incl
cld
fimull
fisubrl
sbb
jo
or
insb
mov
call
cmc
pop
scas
mov
dec
push
pop
dec
xchg
xchg
loopne
sbb
int
lock
push
int
xor
or
fistpll
test
ss
cmp
cmp
rol
jmp
sarb
adc
and
and
out
mov
insl
or
jmp
mov
inc
out
shll
add
pusha
stos
lock
or
dec
cltd
mov
loop
repnz
pushl
fisttps
cmp
testb
mov
test
ret
and
lcall
nop
out
push
leave
push
rcll
mov
mov
dec
call
and
ret
cld
dec
dec
ret
fabs
xchg
in
cmp
pushf
xchg
fs
cld
in
fdivrl
or
enter
pushl
test
lcall
add
out
repnz
in
inc
push
cmc
push
push
aad
popf
jmp
xchg
cmpsl
xchg
loopne
xchg
add
sahf
imul
pop
std
jbe
dec
cld
xchg
inc
push
inc
lock
shlb
xor
add
clc
inc
rcl
loop
loope
or
pop
iret
scas
sbb
xlat
call
xor
cmp
mov
std
loopne
add
inc
and
pop
test
jno
dec
or
jb
int3
fcoml
push
xor
jno
fdivr
jg
mov
push
xchg
xchg
mov
sbbb
dec
push
ljmp
sti
je
fisubrl
sahf
cltd
rcrl
adc
cmpsl
lcall
xlat
add
mov
cmp
mov
sub
mull
stos
incb
sbb
xchg
int3
xor
loopne
lcall
les
in
mov
outsl
jae
ja
inc
jge
out
xchg
jp
or
fwait
ret
das
movsb
icebp
mov
push
aas
rolb
fstpt
decl
movsb
sbb
fdivl
test
insb
jmp
fcmove
inc
lahf
sbb
sub
out
xchg
push
iret
mov
je
int
cli
xchg
jmp
leave
dec
push
fsubrl
and
std
and
inc
fcoms
mov
dec
outsl
pop
add
and
and
lcall
insb
pop
jg
shll
into
jmp
test
cli
inc
loope
icebp
jg
pusha
dec
bound
test
repnz
ljmp
cmp
xor
or
rcl
adc
sahf
out
mov
aaa
cld
jnp
ljmp
loopne
lret
lcall
rcll
nop
decl
mov
stc
cmp
adc
adc
mov
cld
cwtl
adc
jbe
pop
fs
xchg
decl
push
xchg
add
sbb
cmp
sbb
inc
out
mov
in
repnz
incl
aas
pop
or
scas
aam
inc
lea
repnz
data16
dec
ljmp
and
je
out
sahf
jmp
pop
jno
xor
pop
xor
sbb
push
mov
ret
mov
sub
sbb
fdivl
je
in
xchg
mov
ljmp
imul
inc
call
xor
inc
cltd
or
mov
xchg
hlt
mov
call
xchg
sub
data16
fists
arpl
dec
daa
xor
incl
jge
test
adc
stos
xor
sarl
mov
push
sti
and
pushl
mov
push
jns
push
popa
cmpsl
lods
in
arpl
dec
aaa
imulb
loope
call
dec
push
mov
addr16
imul
ljmp
insl
adc
repnz
cmp
xchg
and
fld
dec
sarb
out
mov
sub
je
ret
jmp
decl
push
mov
push
push
xchg
push
pop
repz
jb
fcompl
aam
out
call
nop
icebp
outsl
dec
mov
outsb
popf
faddl
jg
cli
ljmp
roll
sbb
mov
int
sbb
lock
call
ds
iret
xlat
jecxz
gs
pop
cmpsb
jmp
ja
or
xor
test
dec
mov
xor
test
mov
loope
or
or
jle
je
dec
jle
out
cmp
test
fidivs
fs
pushl
std
arpl
cmp
sub
pop
popf
rcrb
lods
sbb
gs
mov
insl
sub
decl
out
mov
push
ds
fistps
jmp
fbstp
push
jecxz
sub
pop
jmp
je
shlb
mov
adc
sarb
mov
ret
or
cmp
push
ljmp
and
pop
push
push
lcall
dec
push
push
fs
add
das
inc
or
decl
add
add
and
mov
loop
pop
dec
ret
jmp
ret
loope
mov
lcall
dec
xchg
imul
lock
out
insb
mov
aad
andb
xor
int3
jecxz
pop
movsl
dec
leave
push
mov
pusha
ljmp
stos
in
xchg
jb
pusha
push
movsl
outsb
mov
repnz
stos
mov
push
add
mov
xor
jg
int3
outsl
jns
dec
or
mov
jp
ljmp
mov
mov
testl
lahf
mov
test
cli
out
bnd
lar
repz
mov
jns
dec
mov
cmpsl
mov
fbstp
hlt
adc
in
xchg
repz
mov
std
out
out
outsb
mov
or
mov
sbb
jmp
pop
mov
pop
or
ret
sbb
imul
pop
jb
notl
sar
nop
scas
xlat
xchg
incl
fdivrl
cmpsl
ss
mov
cmpsl
js
arpl
out
out
js
xor
mov
dec
adc
fcomip
adc
movsl
js
dec
mov
cmp
push
mov
incl
inc
mov
or
or
mov
xchg
xchg
push
std
addr16
mov
ja
mov
fisubl
aas
adc
and
jns
enter
xor
or
das
pop
into
lods
mov
cmpsb
push
enter
pop
aaa
jle
dec
jp
pop
jns
dec
or
decl
adc
inc
pop
aas
xor
dec
out
sub
fistpll
mov
scas
sub
incl
out
jae
es
out
inc
nop
loopne
cmpsl
call
xchg
loop
mov
mov
mov
pusha
xlat
cmp
sbb
xchg
fidivrl
sbb
popf
orb
mov
fwait
mov
call
scas
outsl
mov
pop
and
pushf
mov
inc
jbe
test
out
int3
pop
jge
cld
pop
cmp
mov
mov
mov
inc
lret
mov
jg
fwait
orb
add
mov
xor
xchg
mov
mov
je
lock
pushl
call
mov
subl
xchg
adc
pop
dec
ljmp
jns
mov
incl
mov
mov
mov
repz
cmpsl
repnz
xchg
imul
push
adc
push
inc
or
idiv
add
cmp
jo
mov
outsb
and
sub
fs
gs
jge
mov
insb
je
mov
ud0
push
and
jg
fildl
cmp
and
adc
ss
call
pop
imul
into
test
mov
ret
hlt
mov
fimull
std
adc
cmp
mov
lret
xchg
enter
sub
cwtl
into
pop
mov
pushl
jne
mov
inc
cli
jbe
aad
mov
pop
negb
pop
loope
mov
pop
outsl
loop
or
idiv
pushl
pop
push
cli
hlt
mov
add
in
adc
pop
mov
mov
pop
lret
fmull
jmp
mov
in
imul
xor
aaa
mov
mov
xor
or
fcomip
inc
mov
jecxz
out
add
call
cmp
ljmp
or
into
aad
mov
cld
xor
push
mov
lods
xchg
daa
lock
mov
decl
pusha
jl
test
out
roll
or
xchg
lods
jne
rcl
mov
lcall
fadds
pop
xchg
cs
cmp
pop
stc
enter
and
jg
les
push
jmp
in
xlat
rcrl
mov
fwait
lret
cmp
add
xchg
mov
inc
movsw
cmp
mov
vshufps
adc
fisubrs
jecxz
iret
pop
or
mov
cmp
orb
xchg
cmp
cld
mov
pop
lcall
gs
dec
scas
fsubl
mulps
push
dec
in
in
jp
scas
hlt
mov
pushl
lods
movsb
add
daa
enter
inc
xchg
je
xlat
jmp
jne
push
out
repnz
cmp
popa
add
xor
movsl
dec
popf
stc
lea
push
imul
mov
test
mov
maskmovq
notl
xchg
add
and
enter
lcall
sub
jg
int
int3
or
cld
xchg
pop
mov
int3
popa
pop
xor
scas
fs
lock
xchg
pushl
mov
pop
mov
nop
pushl
mov
xlat
push
jecxz,pt
stos
mov
aaa
inc
daa
inc
inc
xor
int3
sbb
and
mov
push
leave
sbb
fs
jns
jg
fnstcw
add
push
pop
mov
jge
call
mov
stos
rcrl
dec
lret
cmpsb
add
shrb
cli
shr
pop
in
jno
add
cmp
add
ljmp
loop
dec
loopne
sbb
xor
push
ljmp
pushf
loopne
movb
inc
push
aas
adc
inc
mov
je
fldcw
fistl
pop
jle
add
and
xchg
sub
lret
pop
cmc
loopne
xor
add
and
roll
add
nop
xchg
enter
lcall
repz
scas
push
out
adc
aam
sbb
ljmp
mov
imul
sarb
enter
jo
repnz
lcall
mov
cvtdq2ps
pop
addr16
daa
sbb
cmp
lock
lahf
jno
dec
leave
nop
ljmp
int3
bound
movsb
insl
popf
negl
leave
push
sbb
pop
push
mov
mov
push
stos
fdivrl
lods
pop
adcb
or
mov
es
call
cmpsb
fidivrl
pusha
daa
inc
movsb
mov
movsb
lock
ljmp
mov
or
es
pop
jns
cld
dec
inc
mov
jo
mov
cli
movsb
cmpsb
gs
jle
cld
add
incl
mov
dec
xor
mov
mov
jg
cmc
push
inc
cmp
and
mov
cld
in
add
loopne
cmp
push
mov
stos
lods
or
pop
jne
pushf
das
cmp
ja
mov
add
es
in
adc
push
mov
inc
cmpsl
les
add
cvtpi2ps
decl
or
mov
adcb
fs
jle
int
xor
dec
aam
rcl
popa
xor
cld
pushl
lds
in
mov
mov
loopne
out
cmp
push
testl
ljmp
sub
pop
push
pushf
int3
mov
ret
jo
cmpsl
inc
push
gs
cmovnp
push
xor
sub
rcll
jg
push
cmpsl
mov
ljmp
xor
adc
repnz
jne
fs
aad
fisttps
sub
adc
mov
jno
pop
mov
mov
ret
and
pop
xchg
ss
inc
cmp
cs
mov
jns
inc
push
hlt
shl
fdiv
or
cwtl
push
xchg
test
shl
movl
fs
sub
push
mov
outsb
enter
ficoms
or
int3
hlt
lret
pop
cld
sar
jmp
pop
xor
in
mov
aad
loope
xchg
mov
mov
and
or
or
decl
mov
push
add
enter
fsubl
sahf
ret
mov
dec
cltd
mov
xchg
push
sti
or
mov
ret
pushl
popf
push
into
lods
ret
lahf
sahf
into
adc
int
inc
jne
fwait
sub
xor
sub
call
inc
sub
pop
xor
sub
mov
or
pop
outsl
outsl
pushl
hlt
call
push
mov
cmp
pop
sti
mov
xor
and
lcall
inc
sahf
outsl
jne
xchg
sbb
mov
xlat
call
lcall
add
sub
ret
in
in
in
and
lret
mov
jb
mov
mul
cmpsl
lret
adc
inc
add
lcall
jns
subb
stos
ds
inc
sti
ja
xchg
push
repnz
jg
leave
scas
cwtl
lahf
cmpl
fistl
mov
adc
fimuls
xchg
mov
jecxz
xchg
cli
sbb
sbb
cmovns
add
je
jl
hlt
fdivrp
fisubrs
outsb
outsb
hlt
shl
sbb
js
xor
xchg
fwait
xchg
dec
xor
imul
lahf
cld
xor
insb
cmp
pop
sub
jae
fwait
std
lds
and
xor
inc
ficomps
mov
mov
adc
push
and
ljmp
mov
outsl
pop
fdivs
int3
jae
sub
xor
add
dec
jmp
fstp
iret
inc
xchg
pop
out
mov
mov
movsb
mov
rcll
adc
mov
sar
pushl
arpl
push
inc
pop
xor
inc
jle
mulb
mov
mov
lcall
insl
dec
addl
mov
test
std
cmp
arpl
jae
enter
jo
jae
aad
lock
stc
jp
xchg
das
mov
mov
mov
sti
incl
mov
mov
mov
mov
shlb
outsl
repz
add
rcr
jg
clc
les
push
dec
mov
in
out
jbe
pop
mov
fcoml
xor
add
pushl
inc
mov
mov
xor
imul
sbb
out
cli
ret
push
scas
outsb
incl
dec
es
cmp
adc
sahf
xlat
rcrb
popa
sbb
cmp
sahf
aad
push
int
jl
jnp
popf
iret
rcr
cmp
adcl
movsb
dec
xchg
cmp
addb
ror
cmp
ljmp
lret
pop
jge
call
sbb
repnz
ud0
jl
lahf
xchg
xor
lahf
add
outsb
outsl
unpcklps
cld
fcomps
rcll
fwait
push
pop
faddp
outsb
jo
or
cmp
push
lret
jns
das
sbb
push
inc
pop
and
sahf
pop
cs
jp
frstor
ljmp
test
mov
inc
pop
nop
dec
iret
insl
cltd
add
cmp
or
sti
cmp
loopne
cmpsb
loop
ficoms
adc
lods
rorl
shl
mov
dec
test
out
mov
ljmp
insb
pop
inc
mov
xchg
into
in
jae
cmp
out
xor
mov
lods
std
jg
cld
divb
lcall
repnz
nop
push
cs
in
fwait
and
or
ficoml
hlt
aaa
jmp
test
aaa
adc
mov
in
leave
popf
hlt
cld
dec
leave
jne
jmp
or
in
dec
xor
fxch
cmp
inc
adc
out
bound
incl
loopne
in
cmp
push
and
or
mov
shrb
lock
dec
fnstcw
jp
add
jmp
ds
cmpsl
dec
push
inc
out
push
lea
fisttpl
cmp
jnp
push
xor
test
ja
mov
ljmp
lcall
test
pop
mov
mov
mov
mov
mov
lahf
push
sahf
or
int3
cmp
lods
aas
dec
lock
ljmp
das
cmp
inc
push
bound
cwtl
add
pop
cmc
lcall
xchg
insb
add
xchg
pusha
cwtl
mov
pop
ss
adc
mov
jne
dec
decl
lock
daa
inc
lds
dec
lods
ljmp
into
mov
add
xchg
jnp
push
push
inc
dec
xchg
xchg
outsl
sub
inc
cmpsb
stc
or
xchg
mov
pushl
cmp
adc
mov
or
adc
xchg
popf
push
std
xor
outsb
dec
cli
mov
inc
jns
jmp
dec
lcall
cmp
pop
shrb
adc
mov
outsl
sbb
call
cmp
jmp
jbe
into
imul
inc
movsl
out
dec
scas
mov
dec
lea
add
int3
mov
inc
adc
ljmp
fdivrs
sub
lcall
pushl
stc
jmp
push
inc
movsl
notb
into
jmp
xchg
mov
mov
cmp
xor
xchg
das
clc
incl
cmpsb
cli
xchg
add
out
mov
inc
subl
jo
mov
popf
and
out
mov
popa
push
cld
xchg
jns
cmc
ja
add
dec
xchg
in
iret
cmp
outsl
cmp
push
mov
decl
pop
sub
add
addr16
xchg
inc
sbb
jne
shlb
mov
lcall
or
test
ret
inc
arpl
xchg
mov
or
pop
inc
dec
ja
pushl
sub
sub
sbb
into
push
push
out
fidivrs
fldenv
inc
mov
dec
pushl
sub
sub
cmc
push
mov
push
push
lcall
xchg
or
sbb
mov
mov
testl
mov
in
pop
out
ds
fucomip
push
pop
adc
repz
rcll
lds
xchg
repz
movsl
sub
push
or
mov
jno
idiv
jg
cltd
shlb
pop
lods
add
lods
jmp
test
daa
cltd
pusha
dec
jbe
decl
in
adc
push
pop
rorl
lcall
daa
cwtl
mov
pop
data16
sub
jmp
insb
jmp
jge
js
jne
xchg
pop
adc
xchg
xor
mov
mov
nop
cmp
xlat
mov
cmp
aam
mov
mov
mov
ljmp
sub
xchg
jle
pop
das
test
mov
or
pop
inc
out
pushl
stos
je
cmpb
jne
xlat
mov
or
pushf
dec
ret
pop
jns
decl
cmp
xchg
pop
mov
nop
sbb
sarb
out
mov
pop
sti
mov
dec
aad
cwtl
mov
sti
pop
cli
xor
mov
rcl
and
mov
fnstsw
call
int
test
dec
out
mov
in
push
inc
push
dec
push
icebp
xor
call
jo
cmp
outsl
push
jmp
out
movsl
out
fisttpll
or
sub
call
ljmp
fidivrs
push
movsl
popa
fisttps
pop
and
inc
test
mov
ja
das
out
jg
std
rcll
add
and
leave
fisubs
jnp
icebp
ds
pop
mov
fwait
dec
loop
jge
test
mov
in
xor
es
mov
jmp
sub
aad
test
test
mov
in
pop
dec
ja
cmp
clc
pushl
scas
xor
mov
lcall
xor
add
ss
subb
mov
decl
mov
aas
add
push
and
popa
js
pop
loopne
lock
sub
cmpsb
fidivl
xor
pusha
filds
decl
lock
les
dec
pop
fwait
imul
mov
add
fcomip
xchg
ss
ret
mov
jbe
es
pop
and
mov
iret
or
push
cmp
call
push
filds
insl
dec
inc
xchg
pop
les
cmpsb
fs
or
sar
pop
pop
add
cltd
and
cmp
in
addl
mov
arpl
scas
cli
mov
jge
mov
cltd
push
fisubs
or
roll
inc
cmp
xchg
icebp
pushl
jno
scas
cs
pop
stc
fidivrl
fwait
ss
aaa
rcr
out
add
fldcw
lcall
dec
sub
and
cmc
adcb
cmp
jg
repnz
and
pop
jno
and
push
or
out
popa
dec
stc
pusha
in
mov
in
xchg
xor
movsb
and
ja
daa
fcomp
stos
lds
not
add
leave
xchg
cmp
incl
addr16
add
scas
stos
fnclex
pop
sti
imul
jl
leave
and
and
call
cmp
mov
dec
pusha
pop
loopne
cwtl
stc
in
lcall
or
je
push
pop
jo
cmp
mov
mov
sub
mov
sbb
test
push
daa
mov
or
mov
es
jmp
loopne
outsb
xchg
ljmp
mov
ds
and
int3
xlat
loopne
inc
push
les
lds
jg
decl
jbe
outsb
aam
sbb
xor
cmpsl
mov
mov
ljmp
jo
lret
jno
movsl
divl
in
popa
inc
sar
jp
insb
or
incl
mov
arpl
xchg
lods
mov
dec
sbb
mov
push
decl
loop
rorb
jge
stc
lods
sbb
lock
push
push
je
sub
incl
mov
bound
or
dec
hlt
lea
lret
pop
test
lock
incl
ret
movsl
and
sbb
mov
adc
push
ljmp
je
inc
rclb
push
jne
js
fnsave
mov
in
dec
stc
dec
jne
iret
mov
cltd
hlt
popf
mov
xchg
push
in
scas
mov
jne
mov
jg
lcall
les
pop
push
ret
sbb
mov
push
push
and
sub
ljmp
lcall
scas
push
lcall
xchg
mov
andl
and
lcall
ret
cltd
ljmp
inc
in
mov
xchg
ljmp
incl
orb
mov
mov
testb
es
fstps
dec
add
aad
push
jl
or
lcall
incl
adc
xchg
jo
mov
incb
cltd
xor
and
pop
sbb
call
loopne
push
push
inc
cmpsb
or
scas
insb
loopne
andb
jmp
fsubl
test
test
xchg
pop
add
out
pop
mov
cmp
sar
in
outsl
lock
scas
jne
xorl
add
mov
xchg
lds
cmp
mov
push
cli
aam
sbb
aaa
jle
pushl
mov
inc
test
call
orl
and
lret
push
scas
lcall
pop
sbb
dec
dec
icebp
xlat
dec
mov
cmp
lahf
sub
inc
or
xor
loopne
lcall
cmp
push
sub
repz
lods
xor
pop
loop
push
xchg
mov
ljmp
mov
mov
andb
cmpsb
adc
stos
xor
jmp
jo
sub
test
inc
inc
adcb
pop
enter
leave
ljmp
mov
dec
sbb
jg
test
addb
in
jno
sbb
and
or
imul
in
jecxz
pop
adc
push
pop
pop
imulb
decl
loope
lret
xor
mov
xlat
jo
mov
mov
xor
or
js
sbb
inc
icebp
push
jns
pop
mov
pop
add
xchg
push
push
xor
push
jo
lds
or
sub
inc
xchg
mov
ljmp
addl
test
not
adc
ds
call
sbb
and
hlt
stc
shl
aam
mov
incl
test
xchg
lock
loopne
ret
pop
xor
out
in
xor
std
jmp
jno
fs
int3
jb
sub
lods
adc
push
cmp
mov
mov
out
push
bound
fcmovnbe
pcmpeqb
movsl
sbb
popa
outsb
push
sub
xchg
cmp
jae
imul
xor
les
push
cmovp
mov
es
mov
lcall
mov
dec
sbb
xchg
cmp
mov
jg
loopne
cli
adc
int
mov
ljmp
sbb
andb
mull
and
xor
cmp
leave
push
pop
test
cltd
scas
fisubl
cmp
cld
in
jp
shrb
add
mov
lods
sub
or
dec
dec
jo
adc
xlat
mov
or
pusha
out
push
stos
jge
dec
fs
xlat
int
in
pop
gs
and
sub
incl
pop
jle
lret
jp
cmp
mov
add
fwait
cmpsb
or
fsubs
push
jg
sbb
jle
je
xor
test
push
pop
or
sub
mov
mov
xchg
int3
leave
pusha
add
mov
les
stc
or
or
mov
fcomip
add
inc
movsb
mov
add
jg
pushf
loope
divb
aam
or
sbb
cs
das
test
addr16
mov
mov
test
iret
pop
flds
pop
push
imul
aam
ja
adc
loop
push
decl
mov
pop
adc
and
cmp
add
inc
and
incl
jg,pn
test
jo
xchg
into
pop
rcll
inc
decl
add
arpl
fnstenv
jne
jmp
test
mov
sub
lock
mov
sub
jle
js
loope
mov
mov
out
je
pop
sarb
dec
inc
gs
nop
pusha
jbe
mov
lcall
mov
sahf
and
int3
ljmp
pusha
inc
into
and
add
lcall
inc
mov
and
mov
ljmp
dec
or
add
fdivp
incl
push
or
frstor
mov
lcall
push
jmp
arpl
cmp
and
or
inc
adc
or
cld
push
addl
adc
popf
stc
xor
pop
ret
dec
push
push
pop
stos
mov
cmp
jmp
jns
popa
fisttpl
daa
cld
adc
icebp
dec
notb
movsb
cld
mov
pusha
test
test
sbb
jmp
push
fists
jg
xor
shl
cmp
cmp
xchg
mov
push
leave
pop
inc
cmp
inc
sub
jno
ljmp
iret
mov
and
dec
cmp
sbb
sbbb
adc
scas
or
cmp
cmpb
movsl
jle
dec
test
mov
dec
clc
xor
jmp
movsb
out
adc
cmc
pop
and
out
lods
cmp
cmc
xchg
jl
pop
mov
mov
stos
pop
jmp
sbb
int3
lret
jae
ss
loop
and
adcl
call
adc
pop
xchg
lods
jae
idivb
in
jg
sbb
nop
int
sub
pusha
aam
idivl
movsb
cmp
pop
ds
xchg
movsb
adc
pop
jnp
xor
decl
dec
pop
stos
push
and
mov
orb
xor
fwait
insl
cli
dec
inc
push
adc
and
lea
incl
xchg
mov
lcall
add
mov
mov
clc
call
jg
aas
mov
call
out
lret
gs
bound
jne
pushf
or
mov
add
fs
lret
xor
xchg
mov
mov
jle
lret
aaa
andb
in
xor
nop
arpl
lret
add
icebp
or
mov
lahf
out
and
mov
cs
lods
or
mov
push
mov
cmc
js
call
pop
and
mov
in
pushl
cmpsl
pop
inc
lahf
push
in
pop
pop
or
dec
mov
adc
push
pushf
jg
mov
ja
xor
test
outsl
or
adc
ss
lds
ss
ljmp
xorl
pop
pop
cmp
jg
lock
lods
aaa
out
out
clc
sahf
xchg
xchg
dec
mov
push
leave
js
ljmp
cli
adcl
add
lock
jnp
push
aam
int
incl
xchg
dec
push
daa
and
out
in
inc
das
pop
cmp
sbb
and
repnz
jg
cmp
test
jp
fdivrl
fisttpl
mov
aas
cmp
fldcw
cmp
inc
and
mov
xor
inc
test
mov
pop
ficompl
push
sub
ret
add
fisubrl
dec
testb
push
mov
cmp
and
add
mov
inc
jecxz
int
push
jmp
dec
decl
or
jmp
icebp
cmp
sbb
out
repz
sbb
mov
cltd
adc
fldenv
xor
mov
mov
mov
mov
mov
mov
mov
hlt
inc
mov
hlt
lcall
sbb
call
sbb
mov
mov
xlat
imul
push
xor
jle
pop
out
add
mov
mov
or
lods
add
or
xchg
shrl
sbb
decl
sbb
roll
push
mov
dec
push
mov
mov
lock
and
jp
inc
push
lahf
pop
data16
xchg
rolb
dec
fwait
or
call
mov
dec
cmpsb
jecxz
inc
lcall
les
fdivl
dec
and
stos
aam
in
xchg
push
outsb
ret
popf
cs
dec
loope
decl
push
lods
mov
sti
repnz
in
xchg
lcall
pop
imul
shll
movsl
and
dec
mov
push
and
andb
mov
pop
insl
mov
loop
jmp
pop
pop
in
mov
dec
enter
mov
ds
pop
inc
out
leave
ret
out
pop
pop
cmp
cmp
lea
mov
mov
es
mov
push
and
lock
lcall
std
fs
ljmp
int
or
xchg
aad
movsl
cmp
xlat
adc
mov
add
xor
std
mov
lock
test
cwtl
and
aaa
mov
push
loope
add
inc
ljmp
ds
in
sbb
push
popa
xchg
insb
add
scas
icebp
icebp
cmp
cli
push
std
call
jo
mov
inc
clc
add
dec
in
push
aaa
cmp
jmp
xchg
jl
xor
push
pop
inc
xchg
addr16
push
mov
jg
jmp
mov
movsl
and
inc
cmp
xchg
aam
sub
idivl
ljmp
inc
mov
push
add
add
test
mov
pop
std
pop
flds
les
movsb
ret
sub
cmp
scas
ljmp
sbb
inc
mov
clc
out
ljmp
push
mov
xor
jae
and
lods
push
in
mov
adc
pop
xor
jecxz
inc
xchg
test
push
jle
jg
rol
call
mov
rclb
push
add
and
insl
out
mov
push
cmp
or
mov
outsb
jl,pn
or
out
and
pushl
cmp
jg
fcomp
add
popa
ljmp
pop
fiaddl
sbb
rorl
std
mov
pop
mov
push
lcall
dec
hlt
movl
cmp
and
movaps
mov
aaa
mov
mov
push
stos
loopne
dec
out
ljmp
imul
mul
xlat
mov
cmpsl
pop
and
loope
mov
ret
or
or
adc
mov
jno
dec
mov
aad
dec
dec
imul
sti
xchg
xchg
cmp
popa
js
decl
loop
cmp
scas
fstps
jne
aas
jl
adc
aam
inc
lock
out
ficoml
pop
insb
and
std
incl
mov
add
sub
sbb
jl
rcrb
add
movaps
add
push
jl
xchg
mov
dec
js
and
mov
sarb
sub
dec
jecxz
dec
push
cmpsb
xor
jmp
mov
call
and
mov
mov
scas
mov
jmp
xor
int
xchg
mov
pop
fcoml
add
mov
lret
out
sub
cmpsl
scas
incl
or
inc
in
mov
sub
and
arpl
lea
cltd
aad
lahf
adc
das
incl
les
add
mov
mov
add
lret
incl
dec
inc
cs
cmp
test
sbb
ficoms
push
jle
sub
mov
jg
mov
cmp
lcall
test
xor
decl
pop
dec
mov
push
adc
jl
sbb
imul
stos
loop
outsl
xchg
and
cwtl
movsl
mull
out
pop
pusha
jo
das
loope
jmp
sub
lea
scas
ljmp
push
add
sub
lock
aam
adc
incl
or
xor
mov
jnp
pushl
lock
fists
sbb
ljmp
push
xor
cwtl
das
push
adc
mov
xor
ljmp
nop
sub
in
push
flds
inc
pop
mov
daa
clc
adc
lret
and
mov
fimuls
pop
mov
out
repz
push
add
insl
push
in
mov
outsb
mov
mov
sbb
pop
loopne
sub
jmp
call
cli
jmp
test
stc
scas
and
adcl
xor
je
jmp
stc
imul
repz
push
cmpb
cmp
fcompl
jmp
test
inc
dec
adc
push
loopne
in
xor
mov
popf
and
mov
incl
xor
jp
cltd
loop
fcomp
jns
lcall
jl
push
cs
adc
dec
inc
repz
sbbb
insb
or
ja
call
out
out
cmc
inc
mov
leave
lret
call
xchg
lcall
in
mov
dec
mov
inc
pop
jecxz
mov
out
sub
sahf
cmc
outsl
pushl
dec
popa
gs
pop
xorb
jno
adc
jnp
scas
pop
out
xchg
xchg
lea
in
xor
decl
xchg
insl
xchg
cmp
insl
dec
je
add
ljmp
jle
scas
fadd
decl
imul
movl
pushl
mov
adc
shrl
sub
loop
pop
je
xor
roll
inc
scas
nop
fst
outsb
inc
cld
mov
jecxz
pop
dec
bound
je
scas
mov
or
call
notl
fmull
xor
or
mov
call
adc
outsb
jge
xchg
mov
xchg
mov
add
xor
in
ljmp
and
ret
loop
bound
icebp
xchg
lods
mov
pop
mov
cmp
mov
pop
push
dec
clc
lcall
incb
lcall
mov
test
loope
test
bound
in
shrb
cld
or
mov
pop
mov
leave
aas
inc
jmp
out
pop
push
cmp
or
lock
jg
adc
inc
jbe
in
xchg
subb
mov
shl
fisttpll
mov
add
jno
pop
adc
xor
push
mov
gs
or
fcomip
decl
add
outsl
stos
jmp
clc
loopne
out
pop
fs
mov
push
xchg
cmp
lret
and
inc
sbb
push
mov
cltd
rcl
pushl
jo
dec
or
inc
shrb
test
aad
sti
jecxz
scas
js
cwtl
outsb
mov
jg
jmp
sub
and
fimuls
ljmp
lods
fs
data16
jb
cmp
nop
into
xor
push
int
loope
dec
mov
adcl
cli
outsb
pushf
mov
push
xor
xor
xor
cli
in
mov
mov
add
adc
ja
pop
mov
and
mov
cmp
xchg
fwait
dec
mov
dec
mov
mov
mov
in
mov
push
jb
mov
fpatan
pop
fsubr
out
imul
dec
repnz
xor
mov
cmpsl
push
and
hlt
jne
dec
pop
test
cld
rcpps
lcall
lcall
add
call
jns
ficoml
adc
decl
lock
pop
sub
or
stos
test
in
sbb
imul
jns
push
jle
xor
lcall
inc
popa
rorb
repnz
call
add
aaa
or
or
pop
popa
and
pop
incl
add
test
out
mov
test
jecxz
or
aaa
ljmp
mov
jl
inc
sti
int3
cltd
dec
gs
and
mov
mov
call
sub
sbb
test
adcl
pop
push
mov
outsl
lret
incb
or
std
lods
pusha
jge
cwtl
mov
or
lcall
into
scas
fisttps
decl
fsubrl
inc
mov
shrb
in
daa
insb
lods
in
cmp
jge
out
daa
fdivrp
push
jl
orl
mov
lds
mov
idiv
lods
or
ret
push
xor
add
jmp
stos
mov
repz
inc
fs
pop
or
sbb
adc
cli
adc
cltd
push
cmp
pushl
sahf
jne
inc
jge
pop
pop
xorb
sub
push
imull
filds
cld
and
jno
push
xor
vandps
pop
xchg
cwtl
gs
jmp
in
cwtl
and
cmp
int
xchg
mov
cmp
leave
xor
incl
mov
pop
sbb
iret
jne
add
out
fidivl
sbb
fs
jmp
pop
mov
ret
adc
shl
add
clc
popa
pop
push
jecxz
mov
adc
sub
out
adc
js
aaa
or
pop
and
lcall
mov
jo
jmp
inc
dec
cmpsl
js
pusha
dec
inc
repz
ljmp
mov
dec
sbb
shl
std
out
arpl
mov
xor
int
sbb
outsl
ror
orb
popa
popf
xor
lret
scas
cld
add
cmpsl
mov
cmp
sbb
cmpsb
mov
lock
push
rcll
fiaddl
adc
decl
nop
aaa
adc
clc
or
cli
pop
xchg
mov
and
cmp
call
push
ds
addr16
mov
jae
sbb
sbb
xor
pushf
push
mov
cmp
pushl
or
out
adcb
xchg
and
or
jne
jb
popa
pop
mov
mov
int3
sbb
cmp
push
bound
aas
push
or
push
jns
lcall
in
ja
xor
scas
fcomip
incl
xchg
in
cltd
test
or
xor
xor
ljmp
out
addr16
jbe
out
or
scas
scas
arpl
inc
pop
fimuls
inc
mov
popf
sbb
adc
mov
cmp
inc
or
ja
popa
mov
ljmp
pop
fcomp
inc
dec
insl
xor
or
mov
fsubrs
scas
cmp
dec
mov
and
sbb
ljmp
sbb
mov
fcomip
decl
fists
pop
jp
dec
and
movsl
xor
fwait
cmpsl
pop
lahf
push
and
push
pushf
test
jecxz
xor
add
das
dec
daa
ljmp
and
shlb
mov
call
data16
pop
jnp
cld
out
in
cwtl
cmovl
leave
stos
pushf
mov
aaa
mov
imul
add
mov
push
sub
pop
pop
and
push
decb
xchg
jle
pop
mov
insl
jmp
xchg
push
es
add
lcall
inc
stc
out
and
jp
push
mov
jns
push
and
pop
push
lcall
adc
pop
inc
scas
pavgw
loopne
sti
pop
inc
pop
sub
out
ret
imul
jg
into
xchg
mov
pushl
std
dec
mov
in
andb
lods
push
sub
pushf
mov
add
push
ljmp
push
jbe
adc
jecxz
or
shrb
xchg
jl
daa
jecxz
test
repz
addr16
adc
test
incl
inc
loopne
cmp
test
cli
pop
lods
adc
cmc
dec
push
xchg
xor
arpl
push
xor
sub
cmp
inc
test
into
sbb
dec
fsubs
xchg
jne
inc
call
shlb
dec
adc
push
out
mov
cmpsb
dec
int
fs
mov
dec
mov
cmpsb
pop
cmpsl
es
xor
incl
xchg
in
enter
cmp
je
sub
stc
mov
lcall
imul
addr16
out
daa
in
dec
mov
adc
cld
outsl
lahf
sbb
pop
call
push
mov
inc
insl
inc
repz
mov
push
mov
sbb
add
fsub
xor
jp
pop
push
movaps
adc
incl
add
sbb
dec
push
das
sbb
add
cmp
enter
outsb
fcomip
jg
or
shrl
imul
pop
jge
incl
push
ss
loope
aam
ficomps
inc
pushf
imul
dec
repnz
mov
pop
movsb
pop
imul
sarl
push
call
clc
cmp
shlb
dec
mov
ds
fisubs
cmp
ljmp
shrl
mov
out
jp
push
sub
mov
cmp
mov
pop
orb
decl
and
adc
icebp
push
jmp
pop
rol
enter
test
out
data16
xor
ljmp
push
cmp
mov
insb
clc
in
sbb
push
adc
adc
jecxz
sahf
mov
mov
enter
shl
and
jl
jl
cmp
aas
lds
jmp
mov
pushl
mov
cwtl
popf
dec
cmpsb
test
je
sahf
mov
in
inc
mov
je
mov
pop
rorb
jmp
inc
mov
push
pop
jle
cmp
fildll
ret
xorb
lret
cmc
in
jnp
int3
jl
mov
decl
fwait
ror
inc
cmp
or
and
jecxz
jb
jnp
enter
cmp
jg
add
cmp
push
dec
sbb
sbb
jmp
pop
xchg
mov
adc
cwtl
jb
int
and
or
aas
lret
push
sti
cmp
cmp
mov
aas
xchg
push
sarl
mov
imul
test
mov
call
or
or
xor
cld
pop
jns
ja
mov
call
hlt
sar
sub
jle
add
mov
mov
inc
adc
or
cmp
xchg
dec
cmpsb
xor
xchg
add
les
add
inc
nop
pop
ret
dec
repnz
lcall
ljmp
into
adc
imul
inc
xor
mov
pop
ss
dec
mov
inc
jno
movsb
jge
jmp
sahf
push
insl
xchg
xchg
pusha
adc
aaa
aad
aaa
das
pop
cmp
dec
jg
xchg
lcall
mov
jo
in
ret
cld
in
dec
in
test
jae
loop
lret
shll
mov
cmp
testb
adc
stos
xchg
mov
mov
or
ret
ljmp
das
add
jl
addl
lods
cwtl
add
ja
pop
push
andl
pop
pusha
mov
call
sbb
xchg
fwait
xor
jecxz
ja
sti
ja
addl
sarl
out
jo
imul
outsl
cli
call
in
push
ror
bound
jne
xor
fwait
stc
gs
jbe
mov
lock
and
xor
fnstenv
fucomp
nop
loop
shll
jg
jg
and
movsbl
mov
rdmsr
scas
popa
push
lods
loopne
daa
sahf
std
push
arpl
fiaddl
setns
mov
cmpsl
dec
mov
movups
dec
lock
mov
mov
hlt
sahf
call
mov
sahf
cli
fdivp
push
push
clc
sahf
sahf
mov
aaa
out
pushl
cld
inc
jne
mov
xor
incl
mov
add
lret
xor
dec
sub
fcom
lret
data16
xchg
sarl
shll
add
lods
imul
mov
mov
xor
aad
ljmp
daa
int3
lcall
stc
sbb
and
js
sbb
jg
push
mov
std
cmp
loopne
shlb
mov
pop
push
jnp
repnz
fsts
std
cmpsb
mov
jno
lods
push
not
addr16
mov
or
sbb
cmp
xchg
call
les
pop
inc
cltd
push
xchg
sub
call
add
mov
fcomip
jmp
in
fdivr
outsl
xor
fisttpll
in
pusha
dec
push
es
ret
jbe
jg
fcomi
shl
push
mov
iret
aaa
jle
xor
pop
and
dec
fucomip
push
cli
subps
inc
pop
or
cltd
lds
cmpsl
pop
inc
pushl
loopne
cmp
out
lahf
adc
or
jmp
mov
scas
and
or
lods
call
test
sub
add
iret
loop
lret
add
sbb
test
dec
or
push
decl
lock
jp
jb
sub
rolb
jno
gs
sub
and
push
pop
scas
daa
out
pop
lahf
cwtl
and
icebp
sti
outsl
or
mov
incl
std
push
dec
push
aad
in
enter
mov
mov
out
mov
sub
addr16
sbb
add
into
add
push
mov
test
push
inc
add
mov
ljmp
test
in
cmp
cmp
xchg
and
icebp
pop
pop
inc
test
dec
xchg
outsl
ljmp
pop
cltd
ret
in
mov
icebp
sub
adc
sbb
xchg
imul
jmp
fwait
cld
pop
pusha
xor
xchg
cwtl
out
mov
imul
rorl
cld
mov
js
sarl
in
cld
inc
xchg
fmull
and
cltd
int3
mov
data16
mov
movb
sub
or
repnz
and
jecxz
gs
jg
and
cmp
push
arpl
adc
cld
push
mov
dec
stos
aaa
or
in
sbb
repnz
xchg
je
sahf
iret
pop
mov
ljmp
clc
dec
push
fdivr
inc
sub
sub
add
xor
jo
pop
pop
jno
sti
incl
cmpsl
sbb
pop
rorl
add
fs
sbb
jmp
ja
lahf
fisubrs
mov
je
pop
and
loope
and
sub
cli
std
cs
fsubrs
ljmp
jl
imul
repnz
jb
stc
inc
adc
inc
loopne
jnp
fidivs
sbb
inc
add
xor
das
mov
jg
insb
sahf
popf
mov
out
lcall
fistl
daa
sub
mov
or
lret
outsb
adc
andl
and
mov
mov
imul
adc
in
or
sti
pop
cmp
xchg
lahf
scas
ss
adc
outsl
xchg
jp
cmpsl
fwait
es
cmp
jg
decl
test
mov
loop
addb
xor
mov
dec
jge
push
arpl
call
call
aad
stos
cmp
cmp
sbb
out
or
in
das
xlat
and
jmp
sbb
push
jnp
or
addr16
insl
sbb
push
xchg
push
lret
fisttpll
popf
push
jge
fmull
push
inc
mov
mov
repnz
xor
adc
call
mov
fldl
into
daa
xchg
or
or
dec
subl
pop
mov
dec
pop
shll
shll
subb
je
pusha
and
cltd
fdivl
jae
mov
and
sahf
pop
dec
rclb
mov
aaa
or
xor
push
stos
or
pop
mov
cmp
aas
int3
cmp
in
xchg
jecxz
enter
cli
jns
and
bound
jmp
dec
jp
push
repz
xor
pushl
out
pop
inc
jno
jp
clc
int
mov
and
lea
sar
mov
dec
pop
mov
sub
mov
adc
pop
icebp
pop
fcomps
jg
push
cld
roll
or
lret
xchg
cmpl
add
jmp
roll
addb
cmc
or
mov
sbb
and
xchg
cmc
scas
test
mov
add
pop
and
jg
xchg
or
decl
stos
ss
mull
and
jns
mov
and
aas
jle
jnp
inc
and
enter
bound
jb
ret
jns
xor
stos
mov
in
mov
incl
lret
addr16
mov
les
mov
addr16
xor
test
add
mov
addr16
rolb
aad
xchg
cs
push
add
clc
inc
lcall
iret
xor
lcall
pushl
push
enter
test
push
jmp
es
mov
add
mov
jl
mov
outsl
cwtl
mov
add
mov
xlat
pushf
mov
idiv
decl
jo
xor
sti
inc
mov
into
push
mov
cwtl
imul
adc
decl
xchg
call
fadd
xor
lret
adc
or
or
jmp
mov
and
lods
out
scas
shr
pop
sub
and
lds
jecxz
arpl
clc
gs
pop
std
fldl
stos
jno
fidivs
jnp
xchg
fisubrl
aad
cmpsl
lea
pushl
es
sahf
mov
ss
cmp
insl
in
je
mov
add
ljmp
sahf
adc
cs
js
push
pushl
jmp
mov
pushf
xchg
int3
js
insl
dec
xor
pop
inc
idivl
cmp
xlat
inc
fmulp
mov
popf
gs
js
and
icebp
mov
push
mov
std
inc
pop
call
fisttpl
ljmp
rcll
test
adc
ljmp
ret
testb
sahf
gs
loop
dec
mov
mov
js
iret
lods
imul
lcall
das
mov
inc
sub
ret
setle
test
vpunpcklwd
addl
pushl
sbb
inc
jno
dec
stos
shrb
adc
cwtl
jg
inc
int3
aam
lahf
cwtl
jg
push
shl
pop
int3
daa
mov
adc
jge
sub
fdivs
pop
adc
or
sbb
cmpsb
xchg
out
adc
fdivl
pop
or
jb
mov
sbb
jecxz
insl
inc
aad
decl
je
ds
lds
fwait
mov
stc
or
jl
in
adc
cli
incl
leave
or
fld
ja
cmpsl
sbb
push
outsl
push
jnp
and
repnz
lods
enter
aas
call
sti
es
sub
inc
divb
negl
xchg
jo
xchg
add
or
push
clc
decl
in
push
cmp
sub
fcom
inc
fcmovbe
mov
jne
pop
mov
fsubrs
inc
loop
sub
inc
ja
pop
rcrl
jle
ds
push
js
test
in
rcrb
lret
jmp
mov
mov
inc
rorl
subl
adc
cmp
pusha
or
das
cmp
push
fdivrs
ljmp
cld
out
es
inc
aam
xlat
mov
sbb
ds
or
xchg
mov
adc
lds
push
call
insb
iret
inc
sub
inc
cmp
or
call
orb
mov
push
outsb
and
jmp
dec
and
dec
mov
fwait
pusha
popa
loop
inc
xor
mov
jmp
inc
lret
test
mov
and
lock
adc
push
data16
lcall
jp
pop
das
mov
popa
out
xchg
pop
inc
mov
icebp
cmp
sbbl
jmp
mov
push
enter
inc
jp
sbb
lock
dec
sub
add
lds
mov
jmp
fwait
jns
test
jmp
icebp
es
push
mov
mov
daa
add
mov
ljmp
push
or
fs
dec
stos
scas
mov
lcall
out
push
insl
and
lcall
pop
xchg
mov
cmc
and
cmp
cmp
mov
xchg
xchg
inc
mov
pushl
imul
xor
push
pop
pop
mov
mov
pop
cmpsb
jge
pop
insl
cmpsb
lea
fldt
xor
mov
js
adc
cmp
mov
push
and
in
loope
inc
ss
push
xchg
cwtl
aam
clc
pop
daa
mov
incl
jnp
icebp
test
lock
int3
sbb
test
stos
inc
fstl
pop
aam
xchg
add
ljmp
rorl
ret
out
stc
xor
add
sub
xor
xchg
fdivrs
push
jb
mov
mov
or
push
lods
jge
push
test
or
add
cli
out
jmp
stos
pop
sub
mov
jne
jg
aaa
pop
in
sub
sub
inc
jp
decl
mov
xchg
sbb
sbb
gs
in
jmp
sti
data16
sbb
call
stc
jecxz
inc
push
cmp
xchg
jb
mulb
xchg
fisttpl
add
push
fwait
mov
adc
inc
cltd
inc
xchg
jbe
xor
loop
std
jne
and
mov
fcomip
inc
movsb
imul
mov
das
mov
out
xor
adc
add
ret
or
jg
je
ss
aas
orl
icebp
out
lret
aad
bound
push
dec
xchg
fiadds
ja
ss
hlt
pop
xor
mov
pop
lock
push
lock
lods
inc
jp
sbb
adc
jne
cmp
mov
mov
cmp
decl
movsb
push
mov
add
push
andb
jecxz
xchg
les
andl
add
call
test
push
mov
aas
fwait
mov
push
lahf
movsb
les
add
stc
je
ljmp
lcall
push
push
std
fsts
mov
mov
adc
rcrb
pop
outsl
mov
xchg
pop
cmp
test
dec
cwtl
cmp
gs
sub
incl
int3
data16
and
iret
rcrl
mov
sbb
subl
jl
daa
jb
jbe
decl
test
pop
in
lea
fimull
cmp
ret
jecxz
mov
dec
mov
decl
fldcw
sbb
outsl
sbb
testb
inc
dec
fbstp
push
loope
push
daa
repnz
mov
push
or
inc
movsl
xor
jge
fisttpll
das
dec
shrb
pop
call
outsb
jo
push
xor
or
sbb
incl
push
inc
xchg
sti
jge,pt
leave
or
fdiv
cld
pop
push
pop
rcrl
ljmp
scas
iret
cwtl
shlb
mov
pop
je
call
jbe
les
je
or
and
insl
ret
lods
lcall
xor
adc
ret
flds
add
jl
lods
lret
pusha
gs
jmp
fiaddl
mov
xchg
loope
repnz
push
in
out
inc
pushf
push
lcall
or
push
scas
arpl
mov
fdivl
mov
test
and
jg
xchg
xor
and
lret
iret
rcl
cli
cmpb
fistpll
adc
xor
mov
mov
fldenv
fucomp
test
mov
xor
xchg
data16
lcall
xchg
fldcw
jb
aam
pop
sti
push
movsb
xchg
sbb
fmul
je
adc
es
cmc
cli
decl
arpl
sub
sti
xor
enter
repnz
jnp
addb
ja
imul
je
ljmp
out
cmpb
jmp
sbb
jmp
popa
movsb
cld
dec
and
fcomip
in
xlat
cmpb
notb
mov
out
fldenv
decb
pushl
icebp
stos
xor
sub
aam
movsl
sub
mov
jo
nop
xchg
xlat
sti
stos
pop
call
iret
mov
icebp
int3
mov
pop
mov
decl
fiaddl
scas
ret
and
dec
adc
adc
pop
cli
adc
sub
incl
fs
decl
lret
inc
bound
pop
andb
mov
rorb
int3
push
loope
inc
xchg
fcoms
sbb
jl
dec
test
aaa
std
incl
or
or
xchg
inc
jne
pop
fucomi
popa
lret
dec
rcrl
inc
in
incl
cmp
jnp
cs
adc
xorb
insl
xor
cld
lcall
lret
sbb
movsl
cmp
sahf
lahf
cmp
shl
push
dec
push
mov
mov
scas
jp
pop
rorl
hlt
adc
popf
xchg
and
sar
pop
pop
push
lahf
mov
push
mov
pop
dec
clc
icebp
jmp
test
pop
fucomp
pushf
lret
jae
or
add
dec
lret
and
cwtl
lcall
pop
push
mov
imul
stos
ds
cmpsl
int
pop
inc
sti
xor
cmp
jecxz
sahf
sub
aam
pusha
insb
idiv
fwait
iret
push
call
aas
adc
bound
into
loope
jl
jg
lcall
stos
sub
test
ret
pop
sti
jo
cltd
cld
pop
in
dec
lock
call
out
mov
or
test
gs
fs
adc
in
hlt
hlt
call
cmpl
push
int
and
shlb
xor
jne
repz
mov
xlat
pop
sar
pushl
test
ror
jno
stos
call
icebp
fildll
mov
rorl
mov
test
mov
add
cmp
loope
out
cmp
jle
sti
movsb
inc
jmp
inc
adc
or
cmp
mov
pusha
jb
sbb
lret
add
decl
daa
inc
jb
push
pop
in
cwtl
mov
adc
or
push
adc
incl
push
scas
sti
mov
insl
les
jo
decl
pushl
inc
mov
es
xor
push
orl
mov
jl
addr16
mov
sub
movsb
cmp
jge
adc
xchg
xlat
push
loope
aaa
xchg
add
or
das
sar
stos
notl
and
stc
pop
jl
ret
cmp
mov
imul
pop
aad
fs
dec
xchg
or
mov
pop
ljmp
add
cs
cmp
xchg
shll
xchg
jge
sbb
push
andb
mov
dec
adc
jl
popa
cli
pop
push
mov
mov
std
mov
jo
clc
add
dec
add
mov
cs
push
xlat
pop
dec
xchg
adc
icebp
cltd
insl
lcall
inc
dec
mov
gs
das
mov
xor
stos
sbb
in
icebp
test
ljmp
add
lock
xchg
push
movsb
jmp
mov
cmp
call
test
mov
ss
fucom
shl
mov
dec
aaa
pop
movsl
jecxz
jecxz
cmove
clc
xchg
push
nop
sti
push
stos
nop
jbe
mov
pop
add
and
inc
insb
dec
sbb
scas
cli
lcall
addr16
repz
jo
mov
stos
add
or
push
addr16
inc
mov
xlat
aam
cwtl
es
mov
idiv
ljmp
ficomps
xor
jp
or
push
daa
mulb
add
or
sub
mov
jg
inc
std
sahf
mov
cmc
in
ljmp
dec
cld
mov
push
or
ja
sbb
push
push
mov
cld
pop
rcrb
cltd
cmp
lea
leave
sub
scas
push
or
divl
aaa
lret
nop
test
call
cmp
fstpt
int3
and
pop
faddl
ljmp
les
dec
inc
pop
icebp
jg
xchg
je
enter
cmp
movsl
adc
lods
jle
xchg
pushl
fsubrs
fnsave
pop
add
icebp
xor
adc
push
jle
test
out
jge
or
or
call
into
stos
arpl
adc
lret
inc
dec
push
mov
std
jb
push
jbe
sub
lods
adc
cmp
pop
add
leave
int3
xchg
cmp
gs
dec
aad
sub
rclb
cmp
outsl
je
jo
pop
push
mov
movsb
mov
rcrb
aad
popa
pushf
lret
ljmp
xchg
addr16
push
sbb
and
cmp
jge
push
xor
jl
incl
fwait
jle
lret
push
and
cmpsb
testb
lods
sub
add
cli
outsl
cli
sub
jmp
mov
sub
adc
lcall
xchg
add
sbb
mov
inc
clc
cwtl
enter
jg
clc
sbb
mov
lods
out
in
test
xchg
les
add
insb
lea
mov
pusha
mov
mov
push
jge
add
xchg
xchg
xor
ljmp
sbbl
test
dec
dec
enter
or
add
sahf
inc
jl
sub
das
shrl
inc
movsb
cli
jmp
ret
pushl
mov
insb
ja
and
mov
pop
sub
bound
sbb
ljmp
push
fcomip
sub
das
xchg
sbb
xlat
ja
inc
sbb
hlt
inc
pop
add
inc
xorb
pushl
outsl
cmp
dec
popa
aas
xchg
jne
pop
add
clc
push
xchg
sti
roll
fdiv
inc
mov
incl
and
adc
cmpb
sarb
xorl
cmp
aas
inc
into
insb
cld
rclb
mov
or
enter
xchg
mov
aaa
insl
mov
mov
adc
xor
pop
std
ljmp
mov
inc
or
pushl
add
cld
inc
ss
dec
adc
loop
or
xchg
push
mov
out
imul
lcall
adc
repnz
mov
mov
jg
fisttps
in
or
or
mov
lcall
stc
sub
xchg
mov
dec
out
lret
out
fstl
lcall
pushf
sti
mov
outsl
or
addr16
inc
ljmp
pop
pop
pop
add
sbb
dec
mov
cld
jg
ljmp
aaa
push
cmpsb
dec
mov
rolb
lods
loopne
fisubl
call
adc
or
and
cmp
stos
mov
jbe
cld
sti
mov
fldcw
inc
lds
adc
pop
adc
subb
and
cmp
cmc
movsb
data16
mov
pushf
lods
lods
pop
pusha
fwait
in
push
bound
pop
or
sbb
add
imul
ljmp
fistpll
push
es
adcb
dec
xor
hlt
cmp
int
das
jo
push
jnp
aad
xlat
incl
add
xchg
lods
loope
pop
icebp
imulb
inc
pop
inc
decl
pop
mulb
cmp
pop
add
outsb
lods
adc
add
scas
incl
cmp
mov
add
xchg
mov
pusha
pop
mov
cwtl
xor
repz
xchg
cmpsb
mov
pop
adc
jns
das
xor
or
pop
add
pop
jnp
jp
xor
sub
rcr
les
cli
pop
fcomi
incl
jl
jp
jns
in
int3
outsl
imul
cmp
or
data16
incl
dec
cwtl
shll
mov
lret
push
cld
and
xor
xchg
jecxz
cmp
inc
imul
jle
iret
jmp
adc
jl
sahf
xchg
outsl
fidivs
sub
xor
insl
sbb
popf
mov
xchg
clc
cmp
jb
jp
push
incl
jnp
ret
push
insl
pop
jnp
imul
daa
stc
inc
js
xchg
cmp
aam
jmp
xor
inc
push
mov
pop
jbe
iret
xlat
and
or
cmp
mov
lock
dec
dec
mov
std
jmp
push
ret
sbb
int
test
jnp
loop
int3
jo
lret
aam
mov
mov
push
xchg
lcall
fldcw
xor
cmp
xor
xor
dec
cmp
mov
jmp
je
test
mov
sti
adc
and
dec
mov
loopne
in
addr16
out
in
int
add
jb
push
mov
pop
sbb
sbb
clc
dec
call
inc
ljmp
push
jle
test
sub
pop
mov
inc
in
fildll
ud0
sar
mov
mov
pop
xor
sub
xlat
adc
clc
pushl
pop
in
mov
adc
sub
outsb
inc
xorl
mov
cmp
ljmp
inc
mov
mov
loop
cld
mov
ret
ja
mov
mov
orb
out
imul
ds
fstpl
int
nop
add
sub
jns
aad
cmp
fs
jns
fists
lock
xchg
dec
jp
fildl
movsb
jg
pop
pushf
divb
jae
pushf
call
dec
mov
add
clc
loop
fbld
hlt
xchg
cmpl
hlt
push
and
cld
pushl
push
cmp
xor
mov
adcl
popf
xchg
add
fstp
fdiv
scas
call
push
add
or
and
aas
sahf
mov
jns
rcrl
in
leave
test
xchg
in
incl
pop
insl
cld
cmp
scas
ja
pop
pop
and
test
lcall
add
outsl
scas
iret
in
lcall
add
leave
dec
xor
dec
andb
dec
incl
in
add
adc
ljmp
leave
mov
shll
outsl
inc
mov
add
pushl
scas
push
or
sbb
int3
dec
add
sbb
add
repnz
and
call
or
data16
xchg
pop
stos
cmc
mov
xchg
cmp
mov
shlb
push
nop
out
inc
out
jne
ljmp
sbb
imul
dec
loopne
lock
mov
inc
pop
in
or
int
cld
incl
add
add
and
stos
sub
jg
add
push
fnstcw
pop
inc
cmp
jmp
sbb
sub
mov
leave
push
ds
andb
push
inc
imul
repz
xchg
clc
inc
mov
pushl
dec
call
push
dec
add
sbb
dec
enter
push
prefetch
repz
pop
jle
xchg
out
cs
or
lods
inc
xor
push
popf
jmp
fadd
movsl
adc
and
adc
fimuls
cmp
call
and
push
jne
sbb
aam
mov
add
ss
jg
add
or
sahf
cmc
push
push
iret
pushf
shl
outsl
mov
push
lret
pushl
pushf
mov
mov
xchg
outsb
cld
cli
xor
in
orb
test
in
sub
mov
mov
call
std
pop
mov
ljmp
mov
sarb
sub
inc
jns
sbb
jmp
call
das
loop
or
call
inc
ljmp
jp
popa
xor
ret
sbbl
mov
add
repz
test
dec
jmp
xchg
push
and
inc
inc
testb
nop
call
mov
inc
data16
jo
rolb
enter
pop
fs
sbb
sub
adc
jl
xlat
inc
incl
mov
ds
lods
or
cmp
rclb
divb
insb
push
pop
sbb
decl
stos
cmp
mov
aas
or
pop
sahf
push
xchg
out
jecxz
pop
into
adc
fdivs
insl
decl
into
into
ljmp
int3
add
push
cmp
aaa
test
cmp
incl
sti
sbb
dec
xchg
mov
cmp
mov
ds
icebp
xchg
xchg
push
imul
out
and
mov
and
arpl
pop
push
fwait
imul
lock
pushl
xchg
idivb
lea
dec
xchg
gs
out
jle
xor
push
mov
jg
add
or
dec
sub
test
pop
ficompl
jmp
adc
push
or
sub
lds
aaa
pop
push
or
insl
jbe
nop
xchg
push
xlat
inc
test
testb
popa
add
outsb
cmp
mov
and
mov
mov
js
jg
or
jne
or
sahf
call
jo
int
repz
rcll
pusha
dec
jns
ss
xchg
daa
fistpl
icebp
adc
lcall
out
xchg
xchg
adc
xor
lock
pop
xorl
inc
dec
sbb
jmp
sar
test
push
popf
notb
sub
fsubrl
ja
ss
xor
adc
pushl
cmpsb
push
and
jnp
jbe
lods
push
push
test
aaa
imul
outsl
jmp
jmp
dec
pop
jl
cmpsl
push
mov
into
lock
or
clc
adc
or
call
loope
push
xor
push
out
in
inc
mov
or
cltd
pop
jns
dec
in
and
in
call
out
mov
inc
repz
mov
fwait
sub
call
push
mov
pop
sahf
nop
jg
xchg
dec
imul
push
enter
or
jg
jmp
xor
sub
stc
ljmp
cli
push
out
test
xchg
or
test
and
sahf
add
nop
fdivrs
mov
fisubrl
shrb
aad
clc
inc
frstor
js
dec
js
mov
fcomip
or
aam
jle
jb
icebp
jge
stc
dec
cmp
sbb
sti
adc
movsl
push
data16
push
mov
mov
inc
inc
fcoml
xchg
sbb
mov
jmp
mov
pop
hlt
xlat
call
xchg
pop
xor
mov
arpl
imul
add
push
jg
jmp
mov
hlt
in
push
jns
cmp
call
fstps
and
mov
xchg
ja
mov
sbb
fisubl
sub
or
mov
push
arpl
ljmp
push
out
lcall
inc
fwait
mov
inc
cli
dec
adc
stos
lret
jmp
lcall
ljmp
xlat
xchg
hlt
xchg
icebp
je
jmp
stos
push
cmpsl
jmp
pop
cs
mov
popf
sub
dec
mov
inc
arpl
pop
fiadds
aaa
adcb
inc
jg
call
mov
jbe
addr16
popf
sti
mov
pushw
cmp
xor
push
push
jbe
lcall
xchg
mov
inc
jg
xchg
stos
xchg
sub
mov
inc
sahf
add
adc
and
jmp
nop
sub
xlat
scas
ljmp
push
in
pop
inc
sti
sub
cmp
fdivr
dec
aas
outsb
add
pop
dec
mov
popa
int3
pop
add
add
cmp
int
mov
call
add
jge
cs
pop
out
loop
cmpsl
insb
jae
lcall
std
xchg
popf
outsl
fsincos
pop
fs
sbb
jne
cli
imul
out
es
or
fstpl
out
out
enter
dec
mov
incb
jge
xchg
mov
sbb
jns
jecxz
ja
mov
adc
xor
ljmp
mov
das
js
cld
push
lret
mov
or
fstl
out
or
mov
jge
xchg
clc
sbbl
mov
add
add
push
push
xchg
pop
push
adc
aas
negb
mov
lcall
xchg
mov
pop
cmpl
ljmp
decl
in
xor
int
pop
dec
aas
stc
es
dec
lods
cmp
into
push
hlt
inc
or
lcall
xchg
xchg
icebp
push
mov
inc
imul
jg
lret
push
sub
sbb
lcall
addr16
xor
cmp
enter
pavgw
stos
cmp
out
jg
loope
call
push
jge
ss
lcall
pop
sbb
push
fdivrl
cmpl
mov
into
aad
xor
fistpl
pop
or
push
rorl
rcr
push
push
pop
xlat
mov
xchg
clc
clc
int
jns
mov
xchg
lods
iret
push
pushf
in
push
std
ljmp
sbb
cmp
or
in
add
mov
cmp
imul
js
icebp
jecxz
rcrl
mov
push
iret
xchg
sti
jmp
je
push
cltd
lret
jmp
jp
sbb
adc
icebp
jmp
mov
loopne
jg
mov
mov
test
mov
mov
jg
fnstenv
rcrl
mov
ljmp
test
scas
xor
popf
push
sub
sti
test
cmp
jge
ljmp
in
mov
mov
mov
inc
imul
test
mov
mov
jae
jb
or
dec
xchg
dec
gs
sbb
enter
aas
subl
xor
dec
mov
shll
lock
lret
cs
pushl
pop
movsb
jae
mov
shll
cwtl
imul
mov
xor
adc
imul
mov
call
and
hlt
dec
push
enter
pop
sub
mov
les
xchg
jg
std
dec
inc
dec
ficompl
mulb
or
addl
add
xor
decl
adc
xchg
lods
leave
sti
add
pop
lcall
stos
js
aas
push
and
lret
call
ds
gs
leave
xor
jae
xchg
cmp
mov
xor
test
jg
push
mov
mov
jno
arpl
xor
movsl
cmp
mov
lcall
or
ret
lds
call
aam
inc
xor
stos
push
cs
cmpsl
sub
fstps
and
push
xchg
cld
and
ljmp
push
push
ss
popa
adc
lahf
and
addl
inc
jl
aas
jns
pop
pop
xchg
mov
test
pushl
movsl
and
mov
mov
mov
mov
dec
clc
arpl
mov
sub
jo
out
xchg
test
pop
adc
lods
dec
stc
notb
pop
jmp
cmp
das
cld
push
jns
fadds
pop
jno
shlb
jmp
dec
pop
das
call
jns
pushf
add
ja
inc
jmp
pop
mov
das
mov
or
push
push
decb
inc
lcall
add
jecxz
loop
push
dec
ret
pop
das
out
jecxz
jbe
push
sbbl
mov
pop
es
pushf
and
and
fadds
push
call
lock
arpl
adcb
nop
ret
inc
cmp
insb
out
xchg
dec
rorl
push
jge
xor
adc
mov
mov
sqrtps
sbb
in
dec
mov
jmp
jno
push
pop
nop
jae
mov
adcb
pop
push
stos
into
and
push
adc
dec
cld
outsb
shll
jbe
mov
mov
mov
sub
int
sbb
dec
inc
xor
ret
push
push
xchg
pop
imul
adc
mov
sub
rol
aaa
imul
jbe
jg
dec
movsb
or
inc
push
je
mov
daa
jne
cmp
mov
xor
jg
clc
lahf
add
dec
into
jno
mov
cli
jnp
test
add
jge
xor
fidivrs
push
inc
sbb
push
sub
hlt
outsb
inc
pop
hlt
scas
clc
or
aad
sub
popf
fbstp
cmp
ss
test
repnz
scas
fsubl
mov
xor
outsl
call
into
cmpsl
xlat
scas
movsb
in
sahf
fdivl
mov
in
xor
pop
das
mov
adc
sbb
into
icebp
adc
stos
mov
lcall
call
in
lea
pop
outsl
pop
xlat
fldenv
cmc
and
imull
cltd
in
shlb
add
cwtl
js
iret
sahf
jmp
cmp
out
jle
mov
lods
pop
jl
and
xchg
xchg
jnp
ljmp
cmpsb
sbb
dec
test
mov
mov
test
xchg
xchg
pop
repz
repnz
call
lahf
adc
in
sub
xchg
cmp
or
cmc
cwtl
lods
dec
xor
decl
ljmp
shr
in
jb
ljmp
push
cwtl
icebp
mov
call
adc
or
loopne
xorb
movsb
xor
das
jg
cmp
inc
pop
xchg
std
jg
or
dec
add
xor
int
inc
bound
mov
xchg
decl
mov
leave
or
dec
mov
js
rclb
inc
paddusw
ljmp
jo
fcmovb
call
out
lcall
mov
and
mov
out
or
daa
push
out
daa
sub
outsb
ss
daa
xchg
jg
fcoms
add
jo
pusha
pusha
jmp
mov
jne
push
add
movsb
insb
ss
lahf
push
sub
sahf
arpl
pushf
pusha
sar
call
jns
outsb
push
lea
sbb
jle
movsb
jle
xor
stos
xor
jl
lret
decl
sub
or
or
add
enter
xor
or
lds
jae
incl
jge
jb
or
xchg
insb
shlb
xchg
hlt
js
and
test
pop
call
mov
inc
adc
je
jecxz
aas
xor
jp
lds
aam
std
add
lods
mov
jg
mov
mov
fucom
testb
es
dec
inc
jge
stc
call
std
xor
scas
push
xchg
push
mov
data16
lcall
sub
xor
jg
pushl
sub
test
icebp
xchg
cmpsb
add
xchg
pop
test
in
pop
cmp
jmp
test
sti
hlt
jmp
vmulss
lcall
mov
lcall
imul
mov
pcmpgtb
mov
push
nop
fs
test
jmp
jno
negb
add
add
xchg
push
sti
je
inc
pop
notb
ljmp
decl
sar
insl
xor
adc
adc
mov
lret
mov
jns
fstps
leave
sbb
pop
pop
in
xor
test
inc
dec
test
add
neg
sbb
bound
movsb
mov
lock
sbb
mov
dec
add
mov
mov
fiadds
mov
xor
call
or
pusha
sub
fldcw
sbb
xchg
sar
jmp
pop
xor
mov
inc
fwait
mov
push
or
nop
push
mov
ljmp
cli
shrl
sbb
testb
xchg
lahf
and
pop
std
xor
shll
test
jnp
fldcw
lret
cmp
mov
add
loopne
clc
add
cmc
mov
xchg
mov
sub
mov
dec
pop
test
jmp
in
push
inc
movsl
mov
adc
scas
adc
ljmp
or
mov
xchg
bnd
jb
jecxz
jns
negl
adc
call
std
jmp
sarb
rcll
mov
adc
mov
dec
mov
in
mov
lcall
mov
or
rclb
xchg
mov
test
shr
dec
movsl
ret
jne
cmpsb
push
cmc
js
inc
das
out
insb
dec
lret
cld
cmp
out
dec
decl
dec
push
ret
out
incl
cltd
xor
movsb
or
dec
fs
push
mov
cmp
fwait
aad
jnp
xor
xchg
pop
sbb
cltd
adc
stos
ljmp
cli
call
push
pop
push
cmp
out
lcall
dec
xchg
ja
sbb
dec
ljmp
push
jbe
mov
cmc
add
stc
lahf
das
cld
mov
add
pushl
fsubs
test
xchg
dec
fstpl
call
ss
cld
adc
int
lock
or
pusha
mov
mov
outsl
pop
jg
adc
call
push
add
test
arpl
clc
jmp
fxch
shlb
cmpsb
adc
xor
stc
xchg
ja,pn
negb
xor
arpl
push
mov
sbb
xlat
xchg
pop
mov
push
xor
and
xchg
mov
push
sub
fmuls
scas
test
decl
xor
xchg
mov
sbb
outsl
mov
mov
pop
fst
xorb
pushl
loopne
js
out
dec
fwait
cld
enter
nop
xor
testl
mov
dec
pushf
es
jmp
roll
repz
test
aas
insl
hlt
mov
in
cmp
jl
scas
addb
xchg
loopne
outsb
lret
mov
xchg
incl
mov
lcall
in
xor
mov
xlat
in
ret
in
jmp
cld
inc
mov
cmc
imul
add
adc
push
dec
rcrl
dec
in
out
aaa
loop
fbld
sti
pop
cltd
hlt
pop
cmpsb
aaa
xchg
test
insl
pop
xlat
xlat
push
pop
cmp
add
out
mov
jns
popf
or
mov
mov
sub
in
sbb
fnsave
incb
cmpsb
push
jmp
push
push
ljmp
inc
mov
into
push
lea
call
adc
rcll
imul
sbb
sbb
jbe
sub
sbb
shll
out
inc
in
xchg
gs
mov
xchg
xlat
inc
or
sub
je
das
mov
jne
mov
call
shll
popa
pop
pop
ljmp
nop
lock
ljmp
mov
mov
in
mov
mov
push
pop
sbb
ds
cmp
std
adc
je
daa
pop
push
xor
mov
lcall
movsl
cmc
dec
adc
inc
icebp
iret
out
dec
adc
fdivs
cmovg
push
or
inc
orl
pop
inc
add
sbb
jp
or
jg
in
push
daa
insb
addb
and
jg
iret
xor
pop
pop
and
mov
add
mov
in
ret
pop
inc
sbb
jmp
pop
notb
sbb
lods
js
pop
mov
or
jecxz
and
mov
loopne
incl
ret
jb
sub
xchg
sub
mov
xor
insb
mov
push
jg
lcall
sub
push
stc
jge
cmpsl
mov
push
mov
into
pop
and
mov
ljmp
ret
lock
fimull
dec
dec
cli
dec
shrb
loop
jp
fdivrp
pushl
loop
rcrb
sbb
and
roll
push
in
movsb
test
mov
mov
lcall
jno
mov
mov
ret
sub
clc
insb
test
lcall
nop
enter
jae
sub
xchg
pop
insl
shll
popf
test
push
mov
fcomip
push
and
movsb
repz
jmp
ret
lods
cs
mov
out
sti
lcall
out
cmp
cmc
repnz
adc
cs
mov
mov
ret
movsl
add
das
sar
sbb
or
xchg
cwtl
mov
ja
mov
cmp
add
loopne
daa
xor
dec
in
cmpsb
mov
fiaddl
ljmp
pop
push
movsl
fmuls
mov
mov
rclb
nop
movsl
pop
mov
ljmp
xor
fs
mov
jecxz
nop
cltd
push
rol
dec
xchg
lahf
notrack
mov
outsl
clc
add
out
cmpsb
scas
adc
and
push
cmpsl
lcall
notl
shr
inc
fisubl
js
xchg
lret
scas
push
fwait
push
push
jge
sub
mov
inc
mov
pop
dec
jb
jmp
js
mov
mov
jg
hlt
incl
outsb
faddl
inc
imul
or
loope
lahf
or
decl
test
push
je
je
nop
inc
xor
xlat
mov
jmp
jmp
lods
jg
xchg
pop
lcall
push
loope
aaa
pop
fstp
add
movsl
loope
fcomip
call
movsl
cmp
jo
mov
js
out
add
in
ja
jp
ljmp
faddl
es
push
pop
bound
cli
fists
push
sub
fnsave
mov
test
call
or
mov
push
dec
cmp
jg
pop
pop
fisubs
and
ficompl
arpl
mov
sub
xor
xchg
cmp
pop
pop
pop
push
pop
aaa
xlat
jmp
repz
jae
out
sbb
dec
and
jg
jl
cmp
jl
aas
xchg
jmp
pop
xchg
js
fs
out
mov
out
adc
jns
dec
xlat
lds
jp
ret
mov
decl
or
or
add
and
push
push
ffree
jns
xlat
into
fbld
jg
das
cmc
xor
ds
ljmp
push
filds
movsb
xchg
adc
decl
test
stos
xor
addr16
and
mov
and
cmpsb
mov
adc
ja
rolb
mov
xchg
lods
std
mov
call
cld
mov
loope
les
std
or
imul
fcoml
in
xor
sub
mov
jmp
inc
pop
nop
fcmovbe
sbb
jp
jne
into
in
xchg
es
add
ljmp
into
movsb
sbb
cs
jl
sbb
xchg
lahf
and
pop
cli
nop
idiv
ljmp
lds
and
adc
dec
push
and
inc
sub
popf
fstpt
test
inc
ficoms
loop
clc
decl
mov
fsts
mov
dec
pop
lods
pop
orl
mov
xor
fisubl
shll
jns
xchg
sub
popa
or
lods
ljmp
add
jbe
es
arpl
mulb
icebp
mov
sbb
or
call
in
lock
clc
rorb
dec
sahf
fsubr
add
and
pop
out
adc
inc
cli
decl
std
dec
lods
ljmp
lcall
push
push
cmpsl
call
xor
aas
inc
pusha
fisubl
or
mov
fstps
sub
mov
jg
mov
fdivrl
jbe
lea
out
subl
aaa
in
fwait
out
lret
jmp
mov
jg
adc
sbb
dec
inc
lahf
jecxz
mov
dec
test
add
add
aaa
std
call
push
aam
daa
test
mov
sbb
neg
sarb
les
das
add
cld
ljmp
pop
scas
insl
mov
jecxz
adc
cld
pop
and
cmp
jbe
mov
pop
add
push
rol
idiv
pushl
mov
lock
cwtl
and
mov
inc
mov
dec
call
cmp
mov
movsb
mov
aas
cmp
sar
xor
scas
sarl
decl
lock
jecxz
les
mov
test
xchg
mov
ljmp
mov
push
or
and
stos
out
clc
or
cwtl
call
ljmp
adc
xlat
or
out
adc
ret
test
mov
cmp
js
add
jl,pt
pop
shlb
add
and
std
int
shr
inc
sar
dec
fwait
adc
aaa
sbb
dec
daa
ljmp
in
hlt
inc
pop
jle
lcall
call
shrl
ret
xor
ljmp
clc
js
ret
cs
push
xchg
stos
push
loope
pop
fidivl
jno
xchg
sarb
and
jmp
stc
icebp
fimull
pop
fisttps
xor
mov
fwait
inc
loope
jbe
decl
jle
insb
movsl
inc
fbld
cld
fbld
pop
mov
mov
call
ljmp
pop
jb
pop
mov
out
popf
test
test
bound
pushl
push
sbb
pop
pop
add
jmp
test
stc
or
and
push
jmp
and
fdivl
adc
mov
out
in
loopne
jb
neg
add
xor
fwait
lcall
push
inc
rorl
cmc
sarl
inc
fpatan
lea
jg
ljmp
sub
cmp
loop
mov
inc
or
push
inc
call
movsb
pop
jne
shr
sti
push
push
sub
jle
adc
pushl
mulb
std
js
jno
pop
jo
ljmp
lea
xlat
jmp
push
hlt
dec
xchg
sub
adc
mov
pusha
inc
es
ljmp
xor
jbe
jnp
push
jl
sbb
jns
popa
popf
push
mov
in
incl
sub
jl
mov
sbb
mov
jp
inc
incl
movsb
out
push
push
sub
addr16
sub
pop
mov
jg
test
rcrl
pushf
mov
push
jnp
or
inc
jns
das
pushl
inc
jle
dec
inc
sub
les
dec
lcall
lcall
and
inc
sbb
fmul
or
mov
int3
mov
lea
mov
js
cmp
loop
sub
loopne
lods
pop
repz
push
fs
mov
fstps
in
rorb
dec
sti
stc
popf
iret
cmp
testb
incl
stos
shrb
jb
add
test
inc
test
sbb
mov
mov
lock
cltd
xlat
adcl
jle
repnz
cmp
jmp
inc
mov
test
stc
std
shl
lock
icebp
mov
call
ds
pop
dec
loopne
jle
or
push
mov
cmpsl
movsl
pop
call
push
push
xchg
lods
add
aas
pop
popa
inc
push
repnz
outsl
pop
rcll
pop
mov
les
push
or
aam
jb
fisubl
pop
das
out
fidivrl
or
add
out
test
arpl
scas
xor
sbb
cmc
iret
scas
ljmp
lcall
dec
icebp
je
push
daa
cwtl
in
mov
fcmovbe
sbb
ljmp
inc
push
sbb
push
pop
cli
inc
addr16
lcall
into
lcallw
adc
or
es
push
pop
adc
daa
sub
mov
outsb
std
jmp
pushf
nop
jle
popf
ljmp
xchg
scas
adc
push
scas
in
push
int
test
inc
ljmp
inc
int
jmp
add
xor
mov
pop
inc
insb
mov
lret
mov
bound
outsb
dec
je
add
ljmp
mov
cmp
movsb
cmp
add
xchg
fsub
pop
in
pusha
inc
out
fwait
das
addr16
loop
in
sarb
clc
idiv
into
xchg
clc
jmp
psubusw
sbb
or
cmc
mov
int
rcr
into
scas
jmp
ret
stos
sbb
or
jg
mov
push
popa
scas
hlt
ret
rcr
fisttps
fwait
pop
pop
cmp
pop
push
jne
or
inc
jecxz
ljmp
push
push
fimull
loopne
mov
xchg
hlt
jae
pop
mov
ljmp
xor
lea
outsl
ret
divb
mov
cmp
cmp
icebp
push
fdivr
mov
or
or
cld
mov
adc
xchg
pushf
push
outsb
in
decl
sub
sub
jmp
mov
add
xchg
add
or
xchg
push
out
cli
cld
xor
adc
repz
sub
ljmp
and
pop
sbb
repnz
jmp
std
cltd
fnstenv
into
fcmove
out
cld
lcall
xor
scas
push
add
inc
aam
cmc
xchg
jmp
adc
and
sbb
sahf
cs
and
gs
push
cs
pop
aaa
xor
jg
decl
cmp
mov
xor
xchg
ljmp
cmp
sti
scas
cwtl
adc
inc
call
dec
loop
shll
xor
dec
inc
xchg
stc
pusha
daa
sti
mov
mov
mov
ret
cmp
call
in
andb
addb
shrl
mov
push
mov
mov
xchg
imulb
push
sar
pushl
arpl
jb
xchg
inc
jno
fcompl
lcall
ret
push
test
mov
mov
incl
filds
jb
cmp
jb
cmp
pop
inc
out
mov
stos
pop
push
push
mov
cmpsl
scas
mov
hlt
xchg
nop
insl
imul
sub
out
stc
inc
mov
push
pop
das
push
nop
xchg
fildll
and
sbb
and
xlat
cmc
jb
std
inc
std
mov
loope
push
in
jge
imul
filds
or
decl
adc
jne
jecxz
mov
push
push
je
mov
insl
test
pushf
lods
cmp
call
and
pop
jp
adc
cli
hlt
cmp
pop
mov
pop
and
xchg
repz
out
cli
mov
in
xchg
or
clc
pop
xchg
int
inc
adc
cmp
pushl
add
add
mov
or
popa
lret
dec
mov
pop
call
xor
ljmp
sbb
sbb
pop
bound
lea
shlb
mov
out
mov
ret
out
sar
dec
or
fidivs
cmp
fwait
clc
jg
pop
jbe
mov
je
icebp
fdiv
xorb
rclb
and
call
lcall
jecxz
lahf
xor
dec
pop
xchg
stos
mov
ljmp
rolb
enter
jl
addr16
add
or
jg
xlat
mov
ds
pop
decl
fstl
daa
jle
iret
rcrl
aaa
nop
mov
sbb
test
adc
xchg
xchg
fwait
repz
push
jp
sub
data16
addb
mov
test
jmp
sub
mov
adc
icebp
int3
xchg
fiaddl
es
sub
jle
xchg
cmp
pushl
cltd
mov
lods
out
push
jle
fsubrs
hlt
mov
dec
mov
cmp
fidivrs
xchg
pop
incl
and
add
les
inc
cld
dec
aaa
int3
bnd
dec
lods
sub
fs
jg
call
mov
aad
sbb
int3
push
xor
aad
arpl
movsl
or
push
hlt
mov
lcall
xlat
movsb
dec
call
cmp
push
sbb
jg
insl
mov
call
pop
xchg
cmc
lret
jl
adc
mul
pop
cmp
sar
mov
dec
lcall
movb
movsl
cwtl
dec
push
pop
aas
es
ss
lods
bound
out
push
ds
jmp
cmp
stc
stos
mov
int3
or
pop
dec
int3
cmp
mov
jl
outsl
loop
cwtl
mov
xor
cltd
sub
cmp
lods
pop
stc
stos
jo
push
stos
popa
sub
aas
mov
cmpsl
cmpsl
xchg
pop
xor
test
shlb
push
dec
clc
pop
popf
aad
cmp
lcall
add
lahf
push
in
ffree
mov
dec
inc
adc
popf
cwtl
pop
ret
pop
stos
xor
mov
pop
or
xchg
leave
pop
decl
movsb
xchg
addr16
push
cmp
xchg
sbb
into
clc
frstors
mov
mov
addl
xchg
aas
or
cwtl
inc
jne
call
xchg
add
xor
iret
lock
fwait
sbb
adc
mov
lret
shr
hlt
lahf
rcll
jmp
fstpt
enter
jmp
notl
push
or
and
cmp
in
outsl
cmpsb
testl
aas
jne
mov
fucom
fimuls
mov
mov
ljmp
xchg
lahf
push
movsb
pop
add
dec
dec
dec
mov
push
idivl
mov
call
test
jg
mov
in
push
fcoml
sahf
mov
lods
xor
int
mov
ljmp
testl
adc
stos
xchg
test
sahf
sub
jecxz
adc
lcall
mov
mov
cmc
out
fidivs
adc
insl
inc
loop
cld
ljmp
jbe
loope
int
in
divb
sub
push
sarb
ljmp
rclb
sbb
sub
test
pop
vpaddq
mov
incl
or
xchg
mov
jno
orb
push
fcmovnbe
and
mov
fstsw
ds
pushl
ss
jle
cltd
or
mov
fisttps
loop
test
lods
jg
mov
ljmp
aad
xor
testl
and
or
push
push
sti
subb
cmp
test
xlat
jmp
adc
dec
cli
xchg
adc
mov
lock
inc
dec
inc
outsl
adc
and
jmp
arpl
fs
incl
jae
pop
imul
loopne
xchg
lahf
xchg
mov
push
mov
ja
lret
xor
insb
xor
aaa
cld
ja
mov
pop
add
mov
cmp
jns
push
xchg
xchg
mov
dec
out
clc
outsb
pop
mov
data16
jnp
xor
jmp
sbb
jns
cmp
push
sub
movsl
rclb
push
movsl
test
in
call
incb
sbb
jl
ret
or
pop
push
enter
lcall
decb
pop
out
and
icebp
push
inc
ljmp
cmc
shlb
ljmp
cwtl
mov
add
daa
xlat
push
xchg
add
or
mov
lsl
mov
mov
dec
fists
hlt
into
mov
push
xchg
and
pop
call
or
movsl
xor
mov
inc
fadds
sbb
pusha
mov
or
rcl
dec
jmp
stos
in
push
enter
fildl
dec
inc
pop
in
cs
jae,pt
and
cwtl
sub
mov
adc
decl
cmp
leave
push
aaa
aas
pop
mov
mov
cmp
nop
sub
adc
cmp
mov
push
xor
iret
lea
repnz
call
adc
lcall
or
shll
jo
dec
fwait
xor
incl
outsl
cltd
push
or
mov
jae
and
sbb
jp
rcr
clc
lcall
cmp
pop
imul
adc
push
push
ljmp
jp
ret
jns
jecxz
lcall
data16
xchg
or
cmp
xchg
xchg
fildll
fildll
fimuls
jo
jge
pop
cli
in
xor
rcrl
nop
aas
sub
aad
inc
mov
mov
imul
jmp
into
xchg
adc
xchg
and
lahf
test
cltd
jecxz
aas
and
and
mov
sar
jmp
sti
sub
mov
out
and
mov
pushf
add
flds
xchg
add
cmp
mov
sbb
fwait
nop
cmc
and
sub
sbb
cmpl
out
daa
icebp
jnp
sbb
scas
sbb
push
mov
icebp
repz
add
sbb
dec
pop
stos
xchg
out
pop
mov
out
testl
dec
gs
stos
pop
cmp
ljmp
sub
sub
mov
cmp
shlb
and
dec
repz
cmp
or
xor
cmp
xchg
jbe
inc
adcl
outsb
lea
adc
jg
pop
mov
and
pop
jno
movsb
fstl
lahf
pop
shl
dec
add
dec
mov
arpl
shll
sbb
xor
ljmp
jmp
pop
mov
hlt
outsl
fsubrp
push
cld
stos
xorb
jle
insb
sbb
push
call
pop
inc
cmpsl
cmpsl
ret
es
sub
dec
push
mov
mov
mov
or
sbb
pop
jle
pop
sti
jecxz
xchg
fdivrl
add
pushl
inc
mov
mov
sub
sub
and
stos
cmp
jg
fs
lds
push
push
jl
push
fcomps
cmpsl
push
xor
jmp
test
loopne
dec
sbb
and
sahf
clc
mov
pop
and
loope
movsl
and
decl
jnp
push
lds
aaa
movsb
xor
xchg
fs
add
or
std
hlt
pusha
ss
cmc
pop
divl
in
test
mov
push
mov
sub
xchg
cmpps
push
arpl
adc
mov
inc
dec
xchg
sbb
fcomps
cwtl
out
pop
jb
out
je
push
sub
cmp
cmc
mov
ss
cmp
ret
lock
mov
add
in
movsb
pop
test
add
dec
push
dec
aam
hlt
and
call
jl
imull
test
gs
mov
mov
mov
dec
sub
push
cmp
sbb
jmp
insb
cmp
sub
fmull
sbb
jns
and
pop
lcall
mov
add
out
jmp
add
mov
inc
cmp
decl
in
hlt
xchg
jo
cmp
jp
in
push
add
rol
ljmp
pop
mov
gs
push
ss
cmp
adc
mov
movl
ss
sar
incl
jne
orb
jle
mov
sbb
inc
je
jge
aam
xor
ljmp
dec
fisttps
cltd
and
mov
lahf
xchg
mov
decl
ss
shr
sti
mov
in
scas
push
mov
stos
insb
push
in
incl
or
out
mov
pop
xor
push
test
jp
pop
rcll
decl
lock
inc
xlat
sbb
push
std
xlat
jecxz
cltd
or
fisubrs
fbld
mov
and
ljmp
decl
push
mov
jmp
push
repz
xchg
popf
pushf
xchg
or
jp
pusha
mov
mov
call
in
out
jg
fistl
arpl
ficompl
jns
mov
ret
cmpl
lcall
or
xchg
jmp
or
add
sub
jl
fs
mov
xchg
jae
adc
jge
test
pop
inc
and
jno
mov
sbbl
push
jmp
cmpsl
mov
mov
outsb
es
mov
or
mov
sarb
mov
incl
rclb
pop
add
sub
cmp
mov
and
push
pop
test
call
mov
loope
sbb
lea
dec
add
add
inc
lods
push
enter
decl
packuswb
jns
add
dec
ljmp
repnz
xor
push
lret
sub
push
lcall
sar
inc
sub
dec
into
mov
and
jg
lahf
dec
incl
lret
jmp
pop
lret
mov
pop
iret
cmp
dec
arpl
decl
jno
xor
xchg
cmp
jecxz
sbb
jmp
je
xor
lcall
push
adc
bound
fisubrs
cmp
xor
pusha
scas
jmp
mov
loopne
outsb
loop
push
or
ljmp
dec
shll
xor
fsubrl
insl
cs
ljmp
aad
sarl
dec
insl
mov
dec
scas
jns
xchg
sub
pushl
cld
mov
orb
shl
shlb
lret
roll
push
jg
incl
pop
lock
xchg
rol
cs
sub
mov
sti
or
ljmp
std
popf
add
cmp
push
mov
rcrl
in
adc
pop
jmp
xor
insb
scas
mov
in
notb
daa
cmc
popf
xchg
out
int
pusha
data16
out
lcall
inc
clc
mov
mov
movsl
or
imul
push
pop
cwtl
sbbb
cld
push
fwait
dec
loop
xacquire
xchg
ds
inc
imul
inc
push
fs
ja
lahf
cmp
inc
out
imul
inc
or
cmp
dec
add
inc
fsubl
fistl
jbe
sbbl
and
xchg
adc
pop
mov
mov
lcall
or
out
dec
and
cmp
into
xor
or
xchg
inc
lods
mov
pushl
cld
pop
mov
les
cmp
mov
in
insl
mov
ret
icebp
das
cwtl
inc
sbbb
lcall
enter
in
popa
andl
mov
lret
ret
pop
cmp
int3
sbb
pushl
adc
cmp
push
lods
fbld
fcomip
sbb
adc
add
xor
sbb
inc
pushl
and
push
mov
add
inc
fisubrs
lret
inc
jp
xchg
push
jle
test
and
push
fadds
inc
in
in
or
lret
imul
scas
fwait
mov
adc
das
clc
ljmp
pop
lods
push
mov
or
xchg
sahf
fdivs
mov
loop
xchg
sub
adcb
xchg
adc
pop
xchg
jmp
cli
lea
mov
xchg
cld
ljmp
mov
aam
adc
arpl
mov
jge
dec
push
jno
pop
test
sahf
add
stc
push
or
fs
push
nop
mov
incl
add
in
xchg
jge
and
int3
fisubrl
call
mov
filds
ficoms
popf
mov
aam
test
mov
adc
or
inc
cltd
push
cmp
outsb
cmpsl
mov
call
mov
decb
std
mov
mov
dec
cmp
fstpl
inc
pop
or
jmp
fnstsw
fldt
outsb
sub
popa
pop
xchg
shrb
sub
add
mov
sahf
repz
outsb
cmp
decl
jle
movl
xlat
pop
pop
mov
add
xchg
pop
add
decl
cmp
push
pushf
push
adc
mov
inc
sub
mov
lcall
pop
and
das
or
mov
cli
and
int3
addr16
paddusw
arpl
or
mov
lcall
sub
daa
adc
lcall
cli
pop
pop
mov
push
dec
dec
and
jne
inc
sub
test
mov
jmp
mov
es
loopne
jo
gs
sbb
cltd
push
das
in
and
or
jl
mov
stos
dec
adc
xor
mov
lret
jb
cwtl
push
out
sahf
mov
call
dec
mov
dec
push
xor
add
cmp
clc
inc
lret
sub
out
push
jo
jge
pushl
or
mov
sbb
sbbb
fsubl
cmp
movsb
adc
pop
lock
pushl
insl
dec
addl
jae
adc
pop
sub
rcrb
push
call
movsb
mov
loopne
pop
loopne
fiaddl
cmp
xchg
arpl
dec
sbb
adc
cs
jns
cmc
call
sub
mov
mov
xor
out
cmp
mov
popa
mov
mov
test
dec
cmp
call
std
js
pop
rolb
sbbb
xor
xor
rclb
incl
xor
imul
loop
or
lcall
cmpsb
jl
js
adc
xor
adc
push
add
dec
fsubrs
inc
aam
mov
pop
hlt
or
xchg
shlb
and
scas
outsb
cmp
jge
es
dec
cmp
jmp
mov
cmp
push
jmp
add
jnp
aam
fistps
aam
dec
in
adc
inc
mov
mov
pop
cmovae
mov
fildl
xlat
add
mov
xchg
in
aam
scas
sbb
push
mov
mov
or
sub
icebp
incl
int
cli
jl
mov
lods
add
xchg
aas
mov
pop
or
ljmp
jp
std
pusha
dec
jmp
push
jecxz
stc
inc
scas
out
cwtl
shl
movsb
test
jecxz
xlat
mov
sahf
in
in
mov
loop
jnp
add
loopne
frstor
pop
add
in
cmp
in
in
ss
push
test
push
ss
int
mov
call
push
bound
jg
ljmp
orb
jl
lret
adc
mov
add
cs
xchg
cmpsl
sub
ljmp
mov
push
sbb
call
ja
jl
dec
lods
lahf
jno
pop
lock
decl
popf
xchg
pop
or
push
push
je
enter
shr
loopne
scas
test
mov
xor
es
pop
push
dec
jle
and
orl
or
leave
call
or
dec
sub
popa
mov
and
cmp
sbb
pusha
sbb
mov
adc
push
ficomps
push
lret
mov
adc
stos
pop
mov
lret
jecxz
mov
outsl
das
mov
jmp
stos
mov
fistpl
out
lret
dec
jp
data16
xchg
pop
aad
push
jle
icebp
fs
incl
aad
cmp
test
out
mov
int3
xor
push
push
jge
hlt
jne
jo
push
lods
lahf
mov
fstps
or
adc
lcall
std
fwait
jae
pop
sub
jo
in
imul
out
rclw
test
lock
mov
adc
cs
sbb
loope
lods
fcomps
cli
in
adc
std
push
mov
rcrb
in
cmp
imul
jmp
mov
repz
xchg
loop
mov
pushf
xchg
pop
mov
in
les
sbb
and
pop
cmpsl
mov
arpl
and
in
decl
jns
push
fiadds
popf
cmp
add
stos
and
jae
jmp
dec
jg
jbe
inc
js
aam
test
out
and
mov
jge
not
mov
push
sub
sarb
sub
outsb
aad
push
movsb
cmp
mov
cmovo
sub
push
xchg
mov
add
ljmp
adc
sub
pop
inc
jno
or
in
das
call
fbld
rcrb
jae
pop
bswap
imul
call
rcrl
in
scas
jne
mov
mov
adc
mov
xchg
jle
xorl
shrl
loop
push
mov
add
mov
ficomps
daa
out
cli
je
push
lds
ljmp
cli
push
nop
not
xlat
xor
and
scas
cli
incl
pop
push
orl
push
lds
xor
mov
std
xchg
sarb
push
cs
out
sub
mov
incl
insb
gs
fstpt
stos
inc
iret
sbb
xchg
ja
xchg
fisubs
das
clc
ljmp
popa
cmc
lods
ss
aas
out
jge
mov
mov
sub
call
leave
mov
mov
mov
mov
cmp
dec
cmp
push
xor
lcall
xor
or
mov
dec
out
icebp
sti
loop
cld
cs
cli
xchg
adc
ljmp
notl
dec
stos
pop
dec
ja
subl
aaa
xlat
jp
pushl
fistpll
mov
mov
xor
cli
mov
fsubrs
inc
jmp
and
inc
xchg
aaa
sbb
pop
mov
pop
scas
into
in
xor
mov
jg
nopl
xor
jae
push
mov
jl
add
lcall
addr16
test
cwtl
pop
imull
mov
sbb
imul
dec
push
jmp
scas
push
out
pushl
daa
fimuls
push
and
mov
dec
jns
sbb
push
xchg
les
mov
or
cwtl
int
test
ret
inc
nop
call
mov
das
out
das
icebp
jp
xlat
mov
lret
pxor
pop
std
xchg
shlb
jp
mov
mov
mov
shlb
call
jo
out
ret
add
mov
add
pop
add
mov
and
ljmp
xchg
pop
pop
dec
add
in
movsl
pop
pop
or
inc
push
in
inc
xchg
movb
test
fcmovbe
jmp
jae
icebp
fimull
test
imul
cmp
cld
mov
pop
inc
ret
cmp
mov
push
sar
jmp
mov
xchg
aad
lahf
dec
bound
pop
jecxz
cwtl
mov
jmp
xchg
dec
mov
sbb
dec
lods
mov
mulb
jge
mov
sbb
repnz
shrb
ficoms
pushl
cld
pop
jl
inc
lea
std
jae
pop
sbb
inc
cwtl
mov
enter
fsub
sbb
fcomip
lcall
mov
insb
inc
jge
xchg
aaa
hlt
outsb
out
out
push
jg
push
add
jg
mov
addb
int3
and
dec
notrack
sub
pop
clc
shlb
sub
pop
rcl
mov
cli
decl
mov
push
repnz
scas
push
cmpsl
out
sbbb
mov
sar
out
inc
psubusb
push
inc
push
inc
insb
and
mov
outsl
ljmp
icebp
jp
std
lcall
enter
mov
scas
icebp
xchg
jbe
dec
jb
xchg
imul
das
jg
cmp
imul
xorb
lret
pop
xor
xchg
jae
ffree
pushl
cld
cmp
xchg
mov
or
loope
cltd
pop
cmp
jg
incb
push
and
ja
nop
pop
frstor
imul
decl
jno
or
jg
xchg
mov
addr16
dec
dec
imul
ljmp
clc
mov
pushf
pop
es
out
fcomp
fdivrl
inc
dec
pop
out
adc
mov
xor
push
hlt
cld
repz
push
xchg
ds
sar
lcall
jecxz
loopne
or
fbstp
in
cmp
sub
inc
jp
pop
mov
mov
pop
bound
xchg
arpl
addr16
loopne
shl
fnsave
aaa
cld
ljmp
data16
push
les
neg
pop
jns
lock
subb
cmc
mov
insl
mov
pop
sub
mov
inc
aas
popf
sar
decl
es
fimuls
or
and
pop
xchg
nop
test
inc
mov
jmp
push
mov
cwtl
xor
xor
addb
shl
sbb
push
icebp
frstor
and
rcll
sub
xchg
std
incb
cld
and
push
sub
adc
aas
lret
adc
loope
pushl
lods
or
sub
push
mov
add
or
lods
repz
xchg
shl
fisttps
adc
add
and
ret
sbb
pop
adc
pushl
push
inc
pop
xchg
sbb
mov
push
cmp
fiadds
in
xchg
jl
xor
nop
es
xlat
sub
cmp
lret
pop
jg
push
icebp
xor
call
scas
cld
push
cmpsl
pop
xchg
pop
xchg
pop
insl
push
jecxz
cltd
cmp
inc
jne
sbb
jo
mov
imul
mov
shll
movsl
mov
cmp
aaa
pop
push
pop
daa
inc
adc
mov
cwtl
nopl
sub
repz
sbb
aam
outsb
pop
mov
decl
jmp
cmpsl
pop
shl
and
pop
in
push
cld
popf
sbb
sbb
out
sub
mov
in
lret
xor
inc
cmp
pop
addb
bound
lea
xchg
pop
jg
test
jg
jae
pop
and
sub
jmp
pusha
mov
js
push
imul
decb
jnp
inc
add
lods
jge
pushf
push
mov
push
in
nop
lcall
repnz
dec
sub
out
sbb
subl
ljmp
in
push
jno,pt
dec
out
scas
stos
int3
mov
sbb
test
test
shlb
outsb
sub
pop
std
decl
xor
pop
fisubl
dec
faddl
loopne
pop
cbtw
mov
shrb
insl
push
and
notb
inc
mov
std
jl
pop
int3
mov
push
fbld
int
test
sti
cltd
sbb
inc
push
loopne
push
xor
sti
out
or
mov
xchg
test
decl
sbb
jl
xor
mov
fisubrl
push
dec
mov
jmp
loope
fidivrs
outsl
xchg
hlt
pushl
insb
inc
jne
fnstcw
cld
sub
and
call
fdivrl
lds
icebp
lret
inc
fcmovnb
scas
cld
insl
fnstcw
outsl
stos
bound
pushl
cwtl
test
mov
push
push
sub
sbb
lea
jbe
scas
and
pop
cmp
sbb
ret
pop
cli
sub
ljmp
dec
dec
shl
bound
jae
dec
cltd
push
mov
dec
mov
mov
das
push
push
ds
mov
pop
mov
rclb
iret
mov
sbb
test
sbb
clc
fisttps
add
add
mov
lcall
xchg
cmpsb
jp
into
sbb
adc
daa
insl
sub
mov
inc
out
mov
inc
aaa
gs
pop
xchg
loop
nop
adc
sti
sbb
fadd
jne
int3
outsl
add
jle
pop
sbb
fs
stos
pop
xor
popf
sub
adc
ljmp
xor
dec
and
loopne
icebp
sub
aam
out
cmpsl
mov
icebp
shl
stc
pushl
insl
xchg
sahf
mov
inc
fildl
mov
adc
imul
lret
xchg
sub
call
lea
scas
orb
inc
pusha
or
arpl
gs
nop
xor
xchg
jecxz
mov
push
stos
call
cmp
cld
pop
dec
das
rcl
clc
mov
pop
push
and
fcomip
mov
pop
sbb
popa
je
push
pop
xchg
sbb
loopne
orl
lcall
xlat
lret
push
dec
ficomps
push
xor
test
clc
add
cmp
pop
out
jge
cmpsl
lret
decl
push
xor
ss
pop
mov
sahf
sahf
fdivrs
les
cmp
movsl
jp
clc
pushl
repz
mov
push
insb
sahf
out
add
decl
mulb
outsl
and
mov
repnz
stos
cmp
fwait
cmp
pop
or
or
xchg
jo
inc
dec
iret
aam
cmp
rcll
fidivrs
add
icebp
mov
cmp
aas
push
repnz
rclb
sub
mov
inc
int
clc
cmp
lret
rolb
mov
xlat
jo
jmp
bound
imul
test
xchg
push
out
mov
ljmp
out
dec
inc
mov
mov
pop
sub
or
aam
mov
lcall
xchg
xchg
pop
pusha
lds
gs
insl
jne
sbbl
xor
push
jp
lods
in
cmp
jmp
nop
inc
daa
mull
outsl
lret
sar
mov
push
in
mov
mov
fpatan
sbb
xor
push
in
lds
icebp
ljmp
cmp
dec
mov
push
adc
adc
es
xor
fsubs
lock
push
imul
icebp
push
push
leave
jbe
cmp
jg
and
adc
call
and
adc
jl
jg
xchg
ror
jb
dec
inc
and
fwait
in
pop
gs
jecxz
shl
mov
inc
cmp
cmp
iret
dec
jge
scas
out
gs
xor
pop
add
sbb
jbe
jecxz
lret
fcomip
call
leave
mov
lret
subb
mov
xchg
xchg
daa
mov
enter
cmp
outsl
lcall
cmp
pop
int3
push
jp
hlt
xchg
or
in
mov
jmp
mov
sbb
bound
stc
lea
fisubl
repz
and
pop
loopne
fcoms
fdivl
in
inc
mov
jp
jg
stos
incl
mov
jecxz
or
jnp
or
mov
lods
inc
test
dec
loope
std
rolb
in
test
pushl
cmp
les
pop
mov
es
xchg
shll
dec
es
or
fbld
pop
dec
ljmp
scas
inc
mov
pushl
shr
fdiv
mov
sub
loopne
mov
xchg
aad
xor
sti
out
cli
lcall
jl
loope
mov
pop
mov
test
lods
dec
iret
pop
ja
xchg
leave
fmuls
std
jmp
pop
popl
inc
adc
pop
xor
cwtl
out
pop
pop
js
fstpt
adc
incl
push
rcr
sbb
cmp
dec
and
mov
fbld
add
xchg
xor
pushl
or
pop
inc
pop
repz
ljmp
add
jmp
les
mov
call
or
fsubl
mov
mov
loop
int3
xchg
js
lcall
jmp
ja
xchg
popf
cmpsb
pop
adc
or
add
add
sub
jg
xor
sub
cmp
loop
xor
and
cmpsb
lcall
inc
dec
lcall
push
jecxz
push
cmpl
mov
incb
fadds
pop
pop
test
pop
jo
push
xlat
dec
xor
mov
xchg
ret
sti
ror
sub
and
ljmp
pushl
icebp
sub
push
push
popf
je
mov
loopne
arpl
mul
hlt
push
ljmp
add
xchg
push
lock
setle
adc
push
and
jge
gs
sbb
ss
mov
xor
pushl
dec
jle
std
jle
push
mov
mov
push
shr
fbstp
sub
cmp
cld
call
in
xchg
fs
lahf
mov
mov
lahf
dec
sti
je
pmaxsw
push
and
rcll
jl
push
sub
adc
stos
ja
aas
out
jnp
ret
incb
dec
or
jp
cmp
cltd
xchg
cld
mov
fcomip
cmp
fwait
cmp
in
jge
lcall
adcb
cltd
cmp
inc
ljmp
call
cmpsl
push
dec
jg
adc
cli
xchg
fidivl
cmp
cmp
and
cmc
or
lock
or
dec
add
loopne
jg
in
pop
cmpsl
stos
lods
push
push
cmp
or
push
std
lcall
jge
leave
cli
sbb
mov
jae
inc
inc
xchg
mov
addr16
ljmp
in
stos
mov
ss
orb
out
mov
test
mov
loopne
jno
sahf
lods
int3
inc
sub
mov
call
decl
sub
pop
lret
mov
stos
sbb
aaa
cld
dec
mov
pop
imul
shrb
jno
imul
outsb
xor
mov
cmp
adc
stc
sub
pop
mov
outsl
dec
call
outsb
mov
cmc
repz
push
adc
mov
mov
fwait
add
inc
icebp
cmp
incl
sbb
mov
aas
sbb
fimuls
iret
fcompl
push
adc
or
popf
jecxz
outsb
insb
mov
adc
xor
dec
jmp
or
xchg
sub
xorl
out
xor
push
inc
or
adc
jmp
fldt
xor
jno
pop
add
insl
rclb
imul
nop
idivl
pushl
xor
inc
rolb
pop
stos
lods
into
sbb
pop
xchg
mov
iret
je
mov
sbb
addb
js
jp
push
pop
loope
cmpsb
not
jae
lcall
push
sti
pop
orb
int3
xor
sub
testb
pushf
out
call
into
lds
out
add
test
jne
fsubs
push
call
leave
push
push
incl
lods
push
xchg
jae
fs
jbe
pop
adc
mov
insb
sub
pop
adcl
pop
icebp
dec
aad
xchg
ja
mov
sbb
mov
stos
fildll
icebp
and
mov
dec
insb
lcall
mov
sbb
push
shlb
insl
in
sbb
sbb
decl
fnstsw
fcmovb
sbb
js
lret
outsl
mov
jmp
mov
xor
incl
xchg
shlb
mov
push
js
sbb
cmp
icebp
mov
decl
lods
pop
sub
pop
inc
sbb
vunpcklps
ror
xor
dec
mov
lds
decl
cmp
inc
xor
inc
cwtl
xchg
jnp
inc
sahf
push
dec
in
pop
xor
adc
push
lret
out
adc
call
jmp
and
roll
icebp
nop
add
in
ret
push
mov
ret
cwtl
sbb
fs
and
stos
pop
lods
ljmp
lods
in
dec
pop
int
pop
xlat
pop
std
sti
icebp
sbb
cs
mov
pop
leave
adc
jmp
jg
aas
sbb
mov
sub
enter
jg
pusha
arpl
out
or
or
inc
push
and
jg
xchg
xor
testb
pop
in
xorb
mov
call
or
pushl
push
xchg
mov
in
xor
lods
or
sbb
in
loopne
loopne
lret
pop
mov
or
clc
decl
shll
push
fs
jmp
lods
jg
and
push
orb
mov
xchg
mov
incl
in
pop
cltd
test
cmp
movsb
ja
xchg
mov
mov
dec
push
sbb
ss
sti
and
out
clc
sub
mov
sub
and
cmp
sbb
fnstsw
xchg
das
jae
xor
mov
xor
mov
ret
shlb
mov
pop
cmp
pop
loope
xchg
push
jnp
ss
incl
pop
cs
xchg
nop
fwait
rol
in
sbb
std
imul
jg
out
jg
mov
es
loop
adc
insb
and
insb
lret
dec
sbb
pop
mov
cmp
or
mov
nop
movsl
jge
lods
pop
mov
fiaddl
jne
mov
outsb
inc
inc
mov
ljmp
das
dec
xor
cmp
mov
ljmp
not
pop
jno
rcrl
adc
lock
jns
cmp
push
push
inc
adc
inc
add
pop
sub
dec
add
outsl
mov
or
imul
cmp
add
incl
or
add
mov
sub
js
pusha
xlat
mov
push
jg
add
pop
leave
rcll
test
add
add
dec
mov
mov
addb
inc
inc
and
pop
mov
push
nop
cmp
adc
xchg
enter
jle
rdpmc
insl
pop
sub
add
setle
imul
aad
dec
xor
pop
mov
pusha
or
jnp
xchg
iret
fildll
push
daa
add
xchg
dec
and
cmpsl
push
and
jnp
jnp
es
push
movsb
push
movsb
inc
scas
push
and
into
iret
cmc
add
test
and
imul
ficomps
push
push
inc
pop
pop
add
mov
lods
stc
out
pop
sbb
add
mov
pusha
sbb
mov
push
ds
les
push
adc
fs
std
das
movsb
mov
add
imul
lcall
push
sub
lret
mov
mov
push
fnstcw
int
adc
jae
mov
stos
pop
stos
mov
mov
jbe
add
jo
mov
xchg
fidivl
shrb
shrl
shll
fidivrl
iret
outsb
or
push
mov
outsb
mov
sbb
jns
out
jge
jge
sti
in
fisttps
add
fwait
inc
ds
in
movsb
push
add
mov
xchg
inc
mov
mov
shlb
out
cmp
push
mov
push
push
int
xor
jne
push
aam
push
ret
fsubp
cmpsl
frstor
inc
push
mov
push
pop
popf
shrl
dec
add
ja
pop
ja
scas
data16
inc
xchg
cs
jge
push
push
shlb
lret
stos
out
mov
inc
ja
push
push
xlat
jne
fildl
jbe
fdivs
push
aad
push
xlat
ja
jge
fwait
or
push
jns
push
jp
sub
in
fnstcw
inc
push
fidivrl
sarl
ja
sub
push
fldl
ret
jmp
mov
adcb
xchg
sub
xchg
in
xchg
sub
push
pop
cs
xchg
xor
xchg
push
setbe
xor
ss
xlat
mov
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
out
fimull
mov
mov
pusha
add
fadd
add
cld
out
out
repz
repz
hlt
clc
stc
cli
sti
ret
iret
cld
std
incb
jecxz
arpl
int3
data16
inc
jae
add
imul
cltd
push
add
pop
add
pop
add
pop
xor
jb
bound
mov
cmpb
add
add
push
mov
add
add
and
mov
pop
or
test
test
jge
stos
cmpsl
or
push
sbb
pop
cmp
pop
adc
adc
pusha
int
adc
and
lods
pop
mov
fcmovne
push
scas
add
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
or
push
pop
scas
sbb
scas
scas
scas
enter
scas
sbb
mov
mov
enter
and
out
pop
push
mov
push
sbb
and
or
and
mov
lcall
and
dec
push
and
adc
pop
incb
int
sub
daa
stc
lret
mov
and
mov
adc
push
xor
add
es
cmp
xor
orl
sub
jbe
cmp
cmpsb
add
mov
incl
mov
pop
xor
pop
or
or
jg
xor
pop
pop
xor
mov
jmp
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
lcall
inc
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
xchg
test
pop
cmp
jl
jge
jno
add
jg
pusha
pop
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
lcall
xchg
popf
pushf
fwait
lcall
mov
mov
xchg
xchg
sub
dec
ja
jns
dec
push
bound
clc
jnp
movsb
js
imul
and
pop
pop
jg
xor
arpl
out
add
mov
andb
pop
pop
sub
pusha
scas
aas
jge
movsb
adc
xchg
lahf
idiv
mulps
add
push
mov
cmpsb
push
mov
imul
movsb
push
sub
js
xor
xor
ja
push
ja
jb
cs
add
dec
xor
mov
insl
mov
mov
and
push
imulb
out
mov
xchg
jo
push
inc
push
push
inc
add
jae
xchg
jp
inc
iret
cld
fildll
popf
inc
mov
aaa
add
xchg
jno
lret
push
bound
pop
mov
mov
inc
jmp
push
sahf
mov
insb
add
outsb
add
xchg
xchg
pop
push
mov
bound
mov
cmpsl
push
movsb
jae
add
jb
shll
outsl
test
pushf
push
rorb
add
fwait
testl
insl
outsb
mov
dec
fdivrs
sti
push
add
ja
sahf
jbe
fistpl
imul
notb
outsb
ds
push
add
and
es
js
outsb
testb
mov
shrl
insb
mov
outsb
push
outsl
ror
push
ds
fs
lret
jo
jge
add
jg
fiadds
call
pop
mov
data16
add
add
and
mov
add
test
add
push
loopne
iret
sahf
mov
jnp
add
jb
out
in
push
jle
insb
push
std
orl
jecxz
or
push
aad
fidivrl
divb
fildl
adc
push
xorl
sbb
sbbl
mov
faddl
in
mov
push
sub
into
data16
nop
and
out
xchg
in
xchg
xor
in
xchg
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
cmp
pushf
cmp
aam
xor
or
jle
push
cmpsb
scas
jo
test
sahf
out
mov
adc
stos
into
shll
insl
roll
int
mov
mov
sarb
jl
sarl
xchg
pop
push
jle
data16
add
lods
add
hlt
cs
dec
out
je
add
xchg
dec
daa
push
and
sub
mov
mov
femms
or
or
jnp
das
sbb
es
push
adc
push
add
incb
adc
adc
ds
add
dec
sti
test
sbb
mov
sbb
mov
testb
mov
add
and
pop
sbb
mov
mov
loopne
ds
xor
cmpl
and
pop
lods
add
cmp
aas
cmp
pop
and
cmp
roll
cmp
ds
jbe
sbb
inc
jle
loopne
test
xor
dec
fidivrl
cmpb
aas
ja
neg
adc
ds
xor
dec
inc
out
mov
test
mov
ds
bound
pusha
add
mov
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
pop
dec
test
mov
mov
ds
xor
sub
sub
sub
sub
add
pusha
add
add
pushl
xor
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
dec
fs
das
pop
ljmp
mov
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
cli
pop
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
addl
out
push
rolb
add
shlb
or
incl
push
add
cmc
repz
dec
xor
jg
outsl
andb
push
aas
add
xchg
pop
cmp
test
add
mov
add
outsl
mov
add
mov
push
mov
fnstsw
repnz
outsl
mov
addr16
add
sub
outsl
lcall
in
ret
push
in
lcall
or
sarw
or
jae
std
jg
enter
xchg
add
mov
mov
lods
jmp
mov
add
lret
mov
subl
ds
sub
xchg
mov
int3
testb
sub
nop
sub
xchg
xor
fnstenv
ficoms
es
jbe
ss
push
negl
fcmove
fst
es
push
mov
xor
std
into
inc
sub
fdivrp
test
xchg
add
test
jg
jle
and
and
subb
pop
stc
aas
in
dec
dec
dec
dec
dec
add
pop
add
push
dec
outsl
jg
cld
or
adc
cmp
adc
dec
or
add
psadbw
outsb
push
adc
add
or
pop
pop
cmovg
inc
push
dec
sbb
inc
adc
dec
and
adc
sbb
dec
add
dec
adc
sub
cmp
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
sub
ljmp
dec
ss
xor
sub
sub
test
add
cmp
pop
fldt
add
mov
mov
push
add
outsb
mov
push
ds
mov
or
push
les
add
sbb
pop
adc
outsl
mov
cmpsl
pop
xchg
pusha
add
into
incl
jo
adc
jmp
push
inc
xlat
sbb
mov
outsb
sysret
pusha
adc
sub
dec
sbb
jg
ds
jmp
dec
sahf
mov
in
lock
add
stos
hlt
xorps
ret
push
jg
loopne
or
aaa
or
sub
outsl
pop
pop
sbb
sbb
pop
lahf
xchg
popa
sub
out
cli
mov
jno
add
adc
or
cmpl
inc
test
mov
xchg
jg
sti
adc
jg
das
sti
mov
jb
adc
jle
push
sbb
addl
jg
add
and
or
mov
inc
inc
and
xchg
cmp
mov
idivb
cld
enter
jg
inc
loopne
add
add
in
and
jg
nop
pop
inc
into
jg
adcl
dec
inc
dec
mov
jg
pop
adc
add
inc
data16
mov
sbb
incl
sub
xchg
mov
decl
add
arpl
add
push
add
fidivrs
jg
add
xor
jg,pt
mov
add
push
jbe
pop
add
mov
fadds
jle
xor
inc
test
sbb
xor
xchg
mov
jmp
adc
repnz
lods
jle
lret
imul
test
add
jle
mov
lcall
imul
stos
dec
jg
pop
add
mov
push
andl
rorb
jg
jg
mov
sub
inc
rorb
inc
outsb
jg
decl
bound
mov
and
incl
mov
movb
pop
mov
dec
jg
jle
aam
jne
fdivrp
cmpsb
in
sub
pop
push
stos
pop
stos
pop
pop
insl
fcmovnu
cmp
pop
daa
aas
aaa
mov
mov
pop
pcmpgtb
lods
jle
add
push
inc
push
mov
mov
lods
adc
adc
jle
push
fucompp
sahf
rorb
bound
add
mov
push
mov
mov
push
arpl
pop
fisubl
ret
pop
push
mov
test
out
mov
sub
dec
decl
notrack
out
scas
dec
loop
dec
enter
test
test
pop
jle
lcall
scas
test
mov
fnstenv
mov
push
push
jne
pop
push
jbe
dec
or
push
push
jp
fwait
adc
dec
jbe
mov
add
mov
mov
popf
jmp
jbe
es
adc
test
push
outsb
notrack
jp
test
jle
inc
jbe
test
incl
ss
push
or
call
dec
ja
xchg
test
testb
fiadds
mov
mov
fldt
dec
mov
and
sahf
inc
out
mov
xchg
sbb
scas
cs
aas
popf
inc
push
pushf
push
inc
outsb
fwait
cmp
data16
or
xor
xchg
xor
mov
push
sub
sub
nop
daa
ss
out
mov
dec
xor
nop
fstpl
pushl
push
or
push
xor
dec
add
pop
fnsave
xor
cmp
pushf
push
inc
sahf
or
lcall
sub
cs
add
test
ja
sahf
sbb
adc
xchg
add
in
movb
jg
xchg
divb
mov
add
adc
add
nop
fsubs
testl
sbb
fidivrl
je
add
add
int
adc
pop
or
adc
pop
mov
orb
negl
sub
in
mov
mov
popf
push
imul
xchg
inc
and
cmp
lock
cmp
pop
icebp
rcl
pop
test
push
in
add
sub
ljmp
mov
dec
out
imul
mov
pop
mov
mov
fimull
sbb
push
xor
dec
cli
push
idiv
xchg
add
adc
mov
add
mov
incb
add
pop
mov
pop
lcall
or
mov
ds
sub
inc
int3
push
das
pop
cld
decl
shlb
in
push
inc
iret
pop
lcall
std
out
or
xchg
btc
or
lcall
or
jo
sub
mov
lds
decl
mov
incl
les
outsb
ljmp
jmp
test
push
call
inc
xor
xor
sub
inc
inc
ret
sbb
or
jmp
sbb
push
xor
xor
scas
jmp
mov
or
mov
nop
mov
mov
inc
xchg
or
mov
xor
push
iret
jle
adc
aad
cltd
mov
mov
call
push
movsb
test
add
decl
pop
pop
add
cwtl
sbb
incl
inc
shrb
sbb
ljmp
lret
sub
popf
mov
push
std
ficoml
dec
mov
out
adc
test
test
call
adc
and
mov
lgdtl
popa
repnz
push
call
jg
outsb
mov
incl
adc
xchg
loop
jae
mov
push
test
push
addr16
sbb
gs
in
rcll
pop
inc
movsb
mov
mov
push
pop
aaa
mov
sub
push
shll
js
mov
roll
dec
nop
inc
fiaddl
sahf
ret
incl
pop
adc
ljmp
insb
push
mov
push
inc
inc
fcomp
mov
pop
inc
pop
mov
mov
movsb
dec
push
stos
push
popf
inc
sub
mov
inc
cs
scas
imul
add
and
cmpsb
add
push
out
push
shrb
shll
shrb
es
shlb
add
push
push
in
das
push
iret
insl
pop
and
out
int3
daa
outsl
pop
imul
push
push
push
stos
movsb
sub
ljmp
incl
inc
ljmp
mov
jge
pop
add
repnz
xchg
aam
jmp
pushf
cmp
insb
and
aas
decb
cwtl
xor
dec
inc
push
xchg
jmp
push
aaa
push
lcall
insl
es
push
xchg
es
xchg
xchg
xchg
notb
sub
push
xchg
aam
pushl
sub
inc
jmp
mov
fimuls
out
xchg
mov
fcmove
aad
or
data16
hlt
faddl
jge
push
jnp
dec
rep
iret
jp
or
jl
or
xor
push
fidivrl
jge
jg
es
mov
jle
repnz
push
dec
push
dec
repnz
repnz
int
jae
pop
fidivrl
push
mov
jnp
push
jb
jge
hlt
in
add
int3
outsb
nop
negl
and
mov
stc
sbbb
aad
add
mov
adc
adc
outsb
add
push
sbbb
jnp
lahf
lds
decl
mov
addl
orb
out
xchg
aas
jg
and
xchg
out
push
sub
iret
out
mov
out
xchg
clc
push
neg
xchg
inc
sub
jg
and
ss
pop
cld
mov
jno
sub
jg
mov
icebp
mov
jg
jns
bnd
inc
daa
jg
mov
ja
jle
inc
push
loope
xchg
cld
jp
es
mov
jge
incb
out
xchg
and
orb
stos
push
add
pop
jmp
orl
mov
icebp
nop
sub
cs
cmpsb
push
push
fsub
pop
push
adc
push
int3
decl
dec
jle
mov
fidivrl
arpl
clc
int3
cmp
push
pop
fnstsw
movsb
aaa
push
pop
push
pop
or
nop
cmp
sti
and
lcall
addb
pusha
mov
push
addr16
mov
jmp
xchg
jmp
mov
push
xchg
mov
jle
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
stos
in
cwtl
or
pop
push
push
test
ja
inc
or
daa
xlat
push
cmovno
xor
cmc
scas
inc
jmp
inc
mov
int
add
push
adcb
sbb
push
addl
adcb
mov
and
pop
mov
xor
xchg
push
jne
lret
adc
fiadds
fwait
call
imul
sbb
or
xor
into
pop
push
imul
add
cmpsb
cmp
and
sub
mov
push
sbb
outsb
or
push
jne
xchg
jmp
dec
adc
and
add
xchg
test
ds
bound
ret
mov
sbb
sbbl
inc
add
ja
adc
add
inc
push
gs
mov
xorb
dec
arpl
dec
push
sbb
and
add
icebp
xor
mov
jae
xchg
and
ljmp
push
sbb
xchg
or
xchg
inc
mov
imul
fstpl
mov
aam
ret
add
imul
jecxz
cmp
or
adc
push
add
and
sbb
test
or
inc
sbb
add
add
shlb
push
add
mov
sbbl
push
adc
push
add
add
insl
xchg
mov
jo
les
push
pop
popf
in
in
xor
shlb
xor
cmp
mov
lods
adc
inc
inc
sbb
or
bound
lea
jno
nop
xchg
xchg
or
add
mov
and
push
sub
add
jno
addl
push
test
mov
repz
and
stos
lcall
lahf
sbb
add
sub
jno
outsl
xor
push
push
outsb
dec
push
outsl
fwait
xor
ret
loop
and
out
imul
and
fwait
subl
ljmp
fistl
dec
insb
out
inc
dec
pusha
sbb
imul
mov
inc
mov
in
insb
jne
addr16
sub
inc
mov
xor
add
nop
outsb
test
inc
cs
rcrb
add
imul
scas
jne
inc
adc
imul
lds
inc
add
add
fiaddl
ss
pop
popf
xchg
push
icebp
icebp
dec
or
aad
cmp
and
mov
sub
popa
push
or
negb
lret
es
xor
cmp
dec
in
orl
aad
and
lahf
cs
sub
adc
adc
add
jbe
dec
outsl
sub
mov
jecxz
loopne
addl
push
xor
dec
push
es
sub
mov
jb
xor
scas
xchg
imul
je
and
lea
cmp
arpl
pop
xchg
push
imul
imul
mov
arpl
sbb
adc
pop
mov
mov
push
sub
xor
add
xchg
xor
add
mov
rorl
jnp
sub
push
jmp
test
jae
xor
fists
add
dec
dec
push
lds
mov
pop
test
fadds
mov
inc
imul
xor
jge
push
sbb
cmc
test
push
sbb
inc
jg
andb
sub
mov
mov
cmp
adc
mov
ds
gs
add
dec
mov
int3
mov
dec
fxch
js
jl
xor
shlb
arpl
jp
jo
dec
or
mov
or
popa
mov
insl
lret
leave
pop
sub
push
mov
imul
popa
gs
arpl
outsl
imull
and
lret
mov
imul
sbb
bound
add
sahf
adc
cltd
pop
arpl
mov
sti
push
cmp
dec
mov
pcmpgtb
xor
inc
and
inc
sbb
push
ret
lds
or
inc
dec
inc
insb
lock
rcpps
jb
or
jb
inc
inc
jno
or
mov
outsl
dec
jnp
mov
push
pop
mov
fucomi
insb
push
sbb
push
mov
daa
push
mov
xchg
outsl
jo
jb
lods
push
loopne
adc
fwait
push
loope
adc
iret
dec
inc
repz
stos
dec
and
dec
arpl
xor
sarl
popf
push
or
cwtl
imul
push
sbb
data16
push
les
addl
xchg
subl
mov
inc
pop
push
not
xor
and
dec
or
sbb
pop
ret
pusha
mov
inc
in
lock
je
insl
dec
outsb
dec
stc
add
xor
xor
sub
xor
fcmovu
out
loop
pop
add
add
sbb
mov
lods
imul
cmpsb
imul
push
adc
or
mov
cmpsb
pop
add
es
cmp
and
and
xchg
add
push
mov
and
adc
add
rcr
outsb
and
shlb
or
loope
lret
insl
sub
daa
rcrb
or
insl
ret
sarl
push
imul
mov
jae
jg
pop
mov
jmp
push
dec
sub
test
test
xorl
sbb
add
xchg
les
gs
sbb
dec
xor
sarb
loope
and
jno
ret
adc
call
out
inc
nop
or
dec
mov
pop
and
sbb
pop
cltd
nop
push
jge
or
xor
xor
xor
fisubrs
xor
and
ret
xor
dec
sbb
flds
insb
sub
jnp
outsl
inc
inc
xor
loopne
jbe
mov
lock
in
idivb
xchg
fistpl
sub
out
js
pop
xlat
adc
or
dec
or
in
sbb
push
jno
insl
jg
pop
pop
and
sbb
push
enter
and
lret
xchg
fadd
rcll
mov
mov
jecxz
mov
test
cmpsl
adc
mov
adc
push
insb
lret
push
cli
or
jbe
xchg
aad
insl
dec
inc
ret
and
push
movsb
push
and
sub
xor
shl
loopne
daa
dec
cld
addr16
adc
arpl
int3
pop
test
pop
xor
bound
sub
outsb
or
cwtl
jb
inc
bound
mov
push
fistpl
add
xchg
mov
dec
fdivrs
sbb
data16
cwtl
dec
and
xor
in
inc
cmp
rorl
push
xchg
scas
pop
mov
daa
outsb
pop
popa
iret
add
stc
rorl
and
aas
cwtl
mov
scas
inc
sub
aad
inc
inc
pop
mov
mov
insb
pushf
lds
test
jnp
rol
add
cmp
pop
sub
sti
sub
inc
inc
push
push
inc
sbb
add
sub
fidivs
jbe
sbb
pop
push
or
push
addr16
arpl
mov
and
lock
dec
mov
out
inc
push
sarb
test
imul
shll
add
aaa
pop
dec
mov
xchg
add
adc
inc
sbb
push
cmp
and
dec
sub
push
push
or
inc
and
cmp
or
sbb
add
add
and
sub
and
fisubrl
das
mov
or
push
add
push
add
push
aas
sti
or
or
add
adc
mov
sbb
sub
fcom
add
push
push
or
cmp
xchg
adc
es
push
adc
push
inc
pop
adc
jg
outsl
add
push
sub
push
push
inc
sbb
sbb
cs
out
divl
das
and
lea
bndldx
add
xor
ljmp
sbb
aas
push
add
add
adc
cmp
loopne
add
add
and
xor
data16
adc
or
push
or
mov
add
adc
ss
sbb
subps
inc
pop
sbb
push
jg
in
imull
or
and
sbb
or
sbb
add
xor
xor
dec
adc
and
adc
adc
sbb
push
pusha
movsb
adcb
loop
adc
idivb
pop
xor
test
push
adc
sbb
push
or
xor
or
or
incl
sbb
or
add
dec
mov
enter
pop
jl
sbb
sub
pop
mov
in
sbb
lds
movsb
adc
push
dec
pop
pusha
mov
mov
fistl
fmull
xchg
push
adc
jbe
xchg
mov
psubq
incl
add
or
daa
add
push
xor
xor
or
cmp
cs
xor
aas
and
sub
or
cmp
es
xor
dec
sbb
das
lcall
pop
add
jns
cmpl
adc
call
sub
or
push
lods
adc
adc
or
push
or
pop
aaa
adc
adc
adc
daa
adc
or
xor
ljmp
or
es
mov
xchg
daa
cmp
xor
and
or
pushl
and
xor
add
mov
and
or
cmp
push
xor
cmpsb
pop
dec
adc
or
pop
adc
pop
and
or
or
inc
aaa
insl
mov
pop
jbe
jecxz,pn
mov
sub
jg
lock
ds
shll
cld
lods
loope
hlt
ss
inc
sbb
xor
das
test
add
mov
lock
or
ja
push
dec
dec
sub
sbb
les
push
push
push
adc
add
mov
or
or
cmp
sub
push
or
adc
inc
aaa
jo
or
or
sbb
dec
pushl
pop
and
or
push
sbb
xchg
jb
xor
cmp
adc
sub
push
pushl
jp
cmp
adc
sub
lock
add
cmp
incl
adc
lock
loopne
pop
fistps
adc
push
jge
cmp
lcall
pop
cmp
hlt
mov
push
cmp
cmp
or
adc
mov
jge
clc
mov
adc
or
push
aaa
mov
or
sbb
mov
outsl
dec
adc
lock
add
sub
fisttpl
xor
cmp
push
cmp
outsb
lcall
push
pushf
jnp
pop
adc
push
dec
mov
adc
outsl
mov
out
push
push
jae
testb
add
loopne
mov
push
push
and
inc
sbb
adc
call
inc
mov
fbstp
lcall
xor
sub
and
cmpsl
mov
or
dec
inc
outsb
fadd
shrl
xor
bound
adc
or
jg
clc
add
insl
fcomip
pop
or
xor
push
or
iret
incb
cmp
adc
adc
push
and
push
sub
jp
fcoms
psubsb
sub
adc
loop
jg
sbb
xor
adc
and
mov
clc
mov
xor
or
or
jb
ljmp
mov
inc
addr16
aas
dec
pop
pop
imul
lods
xor
sub
and
lock
add
inc
or
adc
inc
dec
push
scas
ja
call
andb
jno
sub
outsl
stos
aaa
insb
pop
pusha
dec
arpl
sbb
sbb
adc
xorb
push
and
pop
xor
xor
daa
push
sbb
mov
inc
xor
femms
push
sbb
sbb
adc
aaa
and
or
aaa
aaa
jl
test
sbb
adc
lock
or
out
fdivr
call
and
jge
dec
jnp
jne
and
adc
arpl
sub
outsb
sbb
xchg
adc
and
sbb
xor
pushf
pop
adc
adc
lock
add
scas
dec
dec
in
xchg
mov
sub
inc
adc
or
fistps
and
adc
xor
push
pop
pop
and
push
std
incl
stc
add
sub
add
inc
jg
adc
push
push
mov
stos
ljmp
inc
rolb
fs
and
and
clc
mov
add
sub
outsl
or
js
sbb
cmp
sub
or
sbb
xchg
jle
adc
push
inc
cmp
mov
daa
insb
and
xor
and
add
push
or
mov
dec
subb
or
sub
call
jp
xor
add
xor
and
mov
movsb
push
xor
adc
dec
inc
and
jg
insb
push
and
sbb
and
pop
ud2
mov
lret
in
mulps
pop
cs
push
cmp
adc
ljmp
sub
adc
push
xor
movsb
mov
push
jne
mov
sbb
daa
inc
adc
push
or
xor
sub
add
mov
pop
add
add
shlb
outsl
clc
mov
and
movsl
or
lock
sar
push
sti
add
sbb
sbb
dec
add
loopne
jae
and
call
adc
call
idivb
stos
sub
push
add
inc
push
sbb
adc
and
rcr
mov
pop
or
pop
adc
daa
pop
adc
cld
lret
adc
adc
fcomip
or
dec
or
inc
push
and
push
lcall
add
fs
xchg
daa
sbbb
sub
dec
fistpll
add
sbb
inc
inc
jg
jg
add
sbb
imul
or
dec
pop
cmp
test
or
add
lock
xor
push
dec
ss
add
jbe
mov
pop
sbb
add
lock
add
sbb
addr16
pushf
sbb
fistpll
sbb
push
movhps
sbb
sub
mov
sbb
and
lock
or
mov
sub
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
push
sbb
ret
call
add
pusha
data16
js
mov
or
mov
xor
pop
inc
and
aas
fdivr
jg
scas
xor
xor
sbb
pop
add
push
push
pop
push
sbb
loopne
push
jle
push
push
adc
pop
aaa
sbb
add
mov
add
aas
enter
inc
cs
pop
sbb
sbb
sub
adc
pop
xchg
adc
lock
lock
add
lock
add
add
pop
or
add
je
jl
add
or
sbbb
sbb
add
xor
cmp
adc
pop
or
and
lcall
push
lcall
push
sbb
cmp
unpcklps
cmp
outsb
clc
decl
sub
or
and
inc
or
ret
sbb
adc
hlt
pop
icebp
adc
or
or
sbb
pop
cmc
pop
sbb
xor
aas
adc
push
push
sub
adc
pop
sbb
enter
pop
xor
and
mov
mov
dec
test
and
call
sbb
outsb
jo
inc
call
lret
xchg
pop
sbb
leave
testl
movlps
pop
sbb
add
out
lock
add
jne
push
pop
push
jb
pop
sub
aaa
outsl
clc
sar
and
push
dec
push
cs
fs
lahf
dec
in
movswl
pop
icebp
mov
scas
inc
add
pop
xor
add
add
outsl
hlt
fwait
push
and
add
popa
or
xchg
dec
xor
bound
scas
rorb
movntps
push
pop
adc
je
pop
aam
mov
adc
mov
jne
sub
push
loope
incl
sub
sub
sbb
inc
push
push
inc
or
mov
cmp
and
das
adc
sub
jmp
pop
pop
cwtl
pop
invd
or
daa
push
cs
sub
jg
mov
or
or
or
adc
pop
daa
or
dec
prefetch
lock
add
and
pop
push
xchg
movsl
adc
pop
sub
push
push
sbb
outsl
js
add
js
or
xor
lcall
push
or
adc
in
push
sbb
lock
inc
push
adc
push
subb
lock
add
scas
call
and
wbinvd
push
and
lock
push
dec
xor
inc
adc
in
and
sub
sbb
nop
pop
or
jg
jmp
sbb
sub
inc
inc
inc
cmp
test
adc
cmp
mov
xor
fistpll
sbb
out
arpl
sbb
inc
adc
and
push
daa
adc
cs
insb
pop
mov
adc
adc
adc
mov
ficomps
sub
or
inc
dec
or
xchg
mov
pop
push
xor
and
inc
mov
loopne
sub
inc
xor
outsb
call
mov
cmp
push
xor
test
or
xor
inc
add
fst
mov
or
or
shll
cmp
ds
aas
push
or
in
cmpsb
push
inc
pusha
push
nop
adc
sar
sarl
sbb
pop
dec
sbb
cmp
incb
aam
pop
mov
jb
sbb
jg
shll
push
or
sbb
jo
mov
jg
call
es
and
or
xor
or
push
sub
pop
xchg
jecxz
or
adc
sbb
pop
sub
data16
pop
add
sub
lds
sbb
adc
subl
faddl
sbb
adc
loope
pop
icebp
push
push
sub
dec
dec
add
repnz
sub
mov
sbb
and
dec
add
add
mov
dec
sbb
xor
push
push
inc
inc
sub
das
sbb
dec
jle
les
add
and
xor
bswap
rcrl
test
cmp
adc
femms
aaa
dec
adc
or
push
mov
adc
ds
cmp
and
sbb
add
or
dec
pop
sub
xor
adc
mov
pushl
cmp
push
sbb
ret
pop
or
dec
and
pop
adc
pop
adc
cld
jg
sbb
or
push
adc
sub
sbb
sbb
adc
pop
and
add
inc
dec
adc
sbb
pop
sub
push
adc
sbb
add
and
outsl
cli
insl
imul
js
and
add
push
or
jle
inc
or
das
or
add
adc
ffreep
and
cmp
aas
xorps
mov
adc
or
inc
or
push
arpl
dec
jno
inc
push
pusha
adc
dec
rorb
or
ds
arpl
insb
idivb
sub
mov
push
sbb
arpl
or
pushl
lods
daa
push
arpl
sbb
sbb
pop
lock
pop
and
dec
cmp
adc
or
bndldx
adc
stc
push
sub
adc
andl
xchg
sbb
clc
lcall
fs
sbb
and
push
dec
fmuls
pop
loopne
in
bound
addr16
or
incl
add
add
xchg
lock
in
aad
xchg
xor
adc
mov
xor
push
fcomip
mov
inc
or
or
push
adc
or
lock
add
xchg
aaa
popa
push
das
or
lcall
pop
adc
inc
adc
adc
das
sub
mov
popa
lahf
pop
sub
mov
adc
and
and
pop
inc
adc
les
cld
cmp
loope
sub
sbb
and
cmp
data16
cmp
mov
or
out
add
mov
jbe
add
data16
xor
add
inc
or
int3
and
call
pusha
inc
push
aaa
movsb
add
bound
cmp
daa
inc
add
pop
adc
lcall
pop
sbb
pop
and
out
imul
mov
or
sub
and
inc
fcomp
cmp
pop
adc
sbb
pop
cmp
adc
add
push
cmp
clc
bound
sub
push
sbb
add
lcall
sbb
std
inc
cmp
and
or
outsl
dec
dec
sub
push
sub
cld
pushl
sbb
cmp
add
outsb
xor
pop
mov
mov
clc
dec
and
sysexit
cmp
je
dec
mov
add
sbb
es
nop
sbb
xor
sbb
push
mov
inc
fistpll
pop
or
sbb
push
push
pop
adc
pop
or
inc
inc
sbbb
aam
and
lret
stos
call
jl
das
push
pcmpgtw
or
lahf
add
jo
shl
cmpsb
pmaxsw
das
cli
decl
push
xchg
or
add
dec
sbb
mov
sub
xchg
cmp
cmpb
jmp
xor
rcl
xrelease
shrb
es
pop
fisttpll
retw
nop
pop
pop
sub
sub
push
lock
or
cmp
add
or
push
lock
jecxz
add
or
push
stos
outsb
sbb
sbb
dec
pop
push
add
or
mov
add
cmpsb
ficoml
dec
push
push
lock
lock
add
bound
xchg
xor
and
aad
lea
xchg
add
or
xchg
pop
add
push
pop
mov
pop
inc
pop
adc
or
out
push
push
lock
pop
xchg
lock
pop
add
add
lock
js
xchg
dec
or
outsb
test
or
testb
sbb
sahf
sbb
es
adc
or
add
inc
sbb
sbb
or
cs
pop
push
dec
or
cmp
rolb
xchg
sbb
push
xchg
loop
and
mov
imul
and
xor
add
cmp
or
sbb
ret
sbb
and
xchg
sbb
mov
aam
pop
sbb
sub
and
dec
dec
push
ret
js,pn
push
xchg
or
ficompl
or
jle
push
and
sub
sub
jg
sbb
jp
or
or
sahf
sub
cmpsb
xchg
ret
in
or
adc
out
sbb
push
and
negl
movsl
inc
add
sbb
cmp
in
push
and
sub
pop
xor
sbb
inc
out
ud0
mov
pusha
lcall
cmp
inc
sub
lock
and
jae,pt
fiaddl
ds
inc
fldl
sbb
cs
push
loopne
lods
cmp
or
cmp
or
push
jbe
add
push
fnsave
cmpsb
inc
push
lret
push
mov
cmp
ds
into
sub
mov
lods
add
lock
aam
cmp
cltd
shl
les
lock
add
imul
pop
sbb
adc
fidivs
and
xor
shrd
leave
cmpsb
sahf
add
adc
adc
mov
push
das
dec
or
bound
push
and
and
xor
add
mov
pusha
dec
add
pop
jg
xor
lcall
xchg
pop
mov
ja
jne
sbb
xor
popfw
ss
and
adc
mov
add
add
or
pop
mov
and
sbb
faddl
and
test
or
sub
push
popa
cltd
mov
add
push
inc
outsb
out
push
push
xor
cmpsl
jl
mov
cwtl
or
cmp
sbb
dec
add
add
adc
orl
movsb
sbb
push
or
lock
inc
hlt
jo
insb
dec
lock
dec
or
push
xchg
bound
std
or
loope
push
mov
sbb
lock
push
inc
lock
add
or
adc
or
sub
mov
ss
or
adc
and
sbb
sbb
jle
cs
sub
ss
cmp
xor
mov
test
push
out
clc
add
mov
adc
adc
movsl
add
add
cmpsb
dec
adc
push
sysenter
incl
add
pop
cmp
pop
mov
sbb
push
adc
inc
push
adc
and
xor
mov
and
adc
mov
pop
jo
rcrl
cmp
jg
das
add
lock
add
or
push
xor
outsl
jb
jg
cs
and
test
and
cmp
cmp
sub
sbb
xor
sbb
jmp
lea
adc
sub
dec
dec
push
mov
mov
push
xchg
push
sbb
jle
sub
and
and
ljmp
decb
sbb
sub
sbb
mov
xor
arpl
mov
mov
dec
mov
push
dec
cmp
inc
inc
sub
or
cmpsb
mov
jbe
cmpl
ds
dec
inc
push
and
mov
dec
mov
cmp
sarb
pop
cmp
je
cmp
xor
in
idivb
jle
xchg
sub
cmp
sub
subl
sbbl
pop
pop
shl
xor
incl
cmp
sub
sub
and
xor
sub
xchg
sbbb
and
call
jl
xchg
cmp
movsl
xor
mov
arpl
inc
aaa
lcall
enter
inc
aas
ret
outsb
cmp
jne
and
add
and
fimull
pop
dec
mov
lock
add
insl
mov
mov
dec
sub
xchg
cmp
and
mov
dec
cmp
push
test
jo
and
mov
push
inc
aaa
cmp
xor
add
add
loop
aaa
sti
and
push
add
push
push
sbb
xchg
lock
aaa
cmp
sti
rclb
sub
add
aam
lock
loop
add
push
add
mov
jae
fimuls
add
cltd
lods
sbb
dec
rclb
dec
lret
or
fimull
test
jne
ljmp
or
ss
jl
pop
inc
pop
loope
pop
lock
add
push
inc
pop
shll
scas
and
or
push
xor
or
lock
mov
inc
and
dec
pop
pop
outsb
pop
adc
add
add
sub
test
lock
xchg
mov
lock
cmc
lock
mov
push
mov
add
mov
fcomp
add
xor
or
or
inc
add
xchg
sub
sbb
pushl
add
add
lock
xchg
or
jmp
add
push
xor
inc
and
mov
adc
or
adc
sbb
adc
mov
jnp
xor
adc
or
push
sub
mov
or
pop
dec
lret
adc
and
pusha
adc
fcoms
shll
xorb
add
adc
inc
or
mov
insb
dec
adc
add
push
jno
jns
pop
rclb
adc
cmp
or
adc
sbbl
and
mov
daa
dec
cmp
shlb
fadds
push
mov
pop
adc
pop
cmc
mov
sub
leave
xchg
iret
add
add
std
testl
sub
sbb
imul
rolb
adc
lods
addr16
add
push
add
or
addr16
sub
adc
insb
pusha
adc
data16
mov
cmp
mov
dec
or
and
adc
mov
add
adc
cmp
popf
mov
sub
adc
pop
xor
outsl
fcomi
jnp
or
fwait
sub
pop
scas
shrb
or
mov
push
sbb
sbb
outsl
pop
pusha
ret
maskmovq
testl
sbb
insl
pop
push
pop
inc
xchg
sub
and
divl
popa
adc
mov
and
out
movsl
inc
jo
mov
mov
mov
into
mov
insl
arpl
fisttpll
pop
lods
test
mov
add
sbb
stos
xor
xor
pop
mov
cmp
mov
mov
cmc
in
add
mov
add
mov
xchg
loop
adc
sbb
sbb
aaa
mov
adc
sub
or
andl
cmc
adc
push
ret
sub
sbb
addr16
sub
adc
mov
imul
and
shll
inc
sub
inc
xchg
fisubrl
inc
xchg
sub
mov
sbb
cmp
xchg
xorl
popa
mov
adc
fisubrl
sbb
out
push
adc
repz
shlb
cmpsb
sbb
pop
sub
fbld
ret
pop
adc
ljmp
sub
subl
adc
popa
aaa
ja
aad
mov
cmp
sbb
sbb
sbb
mov
test
adc
adc
push
mov
and
xchg
jnp
insl
push
xchg
add
bound
adc
rorb
push
pop
sub
mov
sub
sub
xchg
adc
adc
push
lret
sub
movsb
addb
ljmp
or
es
adc
sbb
fdivl
push
xor
add
jecxz
pusha
push
adc
int3
adc
outsl
jo
add
in
or
sub
insl
inc
xorl
mulb
sub
xor
and
add
xor
mov
sbbb
add
and
sub
sub
mov
imull
cmp
xor
sbb
or
mov
cmp
or
push
xor
data16
or
sbb
test
pop
gs
addr16
and
and
pop
fldt
enter
sub
lock
enter
inc
sub
pop
push
jle
inc
cmp
adc
out
in
add
test
cs
dec
xchg
pop
lods
faddl
notl
rcr
in
add
mov
es
add
pop
xor
push
sbb
push
test
pop
mov
notl
imul
add
shlb
mov
pop
or
lock
movsb
add
dec
push
insb
pop
add
and
fiaddl
jnp
jl
pop
inc
xchg
add
xchg
push
loopne
scas
add
adc
pusha
mov
ljmp
jbe
xlat
xor
mov
out
mov
sbb
pop
sbb
xchg
or
stos
fdivl
or
sub
cmpsb
xor
sub
dec
adc
xchg
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
