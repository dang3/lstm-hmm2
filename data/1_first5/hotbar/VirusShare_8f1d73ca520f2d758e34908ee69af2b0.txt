fcomp
decl
andb
lea
push
mov
or
push
add
jecxz
add
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
int
movl
push
add
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
mov
in
fstpl
mov
in
adc
push
mov
les
cmpl
or
push
faddl
ds
push
mov
adc
mov
mov
pushf
push
push
aaa
stc
orl
ficoms
jno
and
push
add
push
inc
mov
icebp
sbb
add
push
lock
dec
add
mov
sbb
sub
add
push
mov
in
add
or
icebp
rcrb
xor
xor
fcomip
fbstp
add
inc
hlt
push
push
adc
push
push
xchg
sub
sbb
push
mov
push
adc
inc
ja
push
leave
or
leave
fldl
leave
add
add
add
adc
or
and
inc
pop
repnz
shlb
fs
or
es
fldt
int3
mov
add
mov
and
in
adc
outsl
cs
imul
cs
push
xchg
ds
pushf
dec
add
cmpsl
push
test
push
push
call
cmpsb
orl
xor
sub
sete
into
mov
mov
lahf
mov
mov
lcall
cmpsl
xchg
cmp
lods
mov
push
push
push
or
adc
call
add
sbb
push
inc
add
scas
cltd
sbb
add
in
pand
xor
xor
or
xor
push
xchg
and
xchg
push
dec
push
mov
lea
shl
jle
or
mov
dec
sub
adc
lret
imul
xor
xchg
in
insb
and
and
xor
testb
pop
sub
int
aas
pop
push
in
and
mov
xchg
dec
push
jmp
jb
lea
cmp
jge
clc
mov
fidivs
xchg
mov
pop
ret
xor
mov
sahf
and
push
inc
sbb
sub
insb
sbb
add
lret
pop
cmp
jl
paddusw
mov
add
inc
sbb
jl
adc
ja
ret
mov
jge
fwait
rcrb
or
xchg
out
in
std
push
push
push
or
sub
mov
push
inc
pop
movsb
jne
sub
mov
or
int3
cmp
cmp
inc
and
xor
mov
sbb
fsubr
adc
jle
dec
or
adc
push
jne
mov
mov
or
push
adc
std
pop
hlt
call
mov
test
je
mov
or
mov
adc
dec
fdivrs
in
push
adc
fldenv
add
cmp
or
inc
push
jecxz
add
push
test
sub
dec
bnd
sub
sub
add
push
testl
push
push
stos
inc
nop
push
or
xchg
hlt
bnd
mov
sbb
jnp
inc
inc
mov
pop
popf
jnp
aam
popa
cmp
clc
addb
incl
add
sub
negl
mov
cmp
dec
push
xor
repnz
inc
add
xchg
or
pop
je
and
inc
daa
lahf
push
push
xchg
je
jae
sbb
cmpsl
or
xchg
xor
popa
adc
xchg
xor
addr16
cmp
mov
stc
ret
add
push
lea
push
push
in
jp
stc
arpl
mov
inc
push
leave
sub
ja
orb
scas
pushf
hlt
dec
pop
pushf
mov
fdivp
push
sbb
int3
mov
push
sahf
mov
add
push
addb
lahf
cltd
pop
add
pop
popf
push
cltd
ljmp
sub
inc
mov
daa
ja
lret
push
test
xchg
ljmp
insl
sbb
cli
jae
jne
lock
dec
mov
popf
mov
ja
scas
icebp
je
and
push
or
hlt
add
push
packuswb
push
xchg
cmp
in
and
mov
cmp
cmp
sub
sete
test
jecxz
mov
test
cmp
leave
sbb
cmp
and
jmp
push
mov
add
popf
push
adc
adc
pop
insb
xor
mov
repnz
xchg
lret
push
cmp
ds
cmc
adc
scas
pusha
fldl
orb
pop
divb
push
mov
add
xor
orb
sbb
adc
inc
mov
rcrb
and
push
add
nop
pop
jl
xor
push
push
xchg
mov
pop
aas
mov
adc
test
push
mov
es
sub
and
enter
cmp
mov
sub
repnz
add
pop
lods
in
bound
push
push
cmp
inc
xor
dec
fcomps
mov
jns
sub
cmp
cmp
mov
adc
sbb
add
jns
std
add
push
inc
imul
or
das
xor
jb
outsb
or
push
movsl
in
mov
mov
and
sarb
sbb
ds
out
addl
cmp
push
mov
and
icebp
sbb
jge
out
inc
mov
bound
and
xor
shl
int3
push
push
and
mov
fstp
call
leave
mov
movb
lods
mov
cwtl
push
mov
lcall
push
nop
xor
mov
inc
daa
imul
push
cmp
outsb
mov
xor
pusha
mov
cltd
add
shrb
incb
pop
cmp
out
popf
loope
mov
pop
clc
mov
mov
popf
cmp
repnz
cmp
add
faddl
stos
or
sti
or
lea
data16
push
test
or
sub
mov
add
hlt
add
test
out
test
dec
adc
dec
adc
pop
mov
pop
add
adc
adc
cltd
in
das
adc
sarb
cld
rolb
lcall
inc
test
sti
add
adc
mov
mov
add
nop
mov
add
cmp
adc
outsl
mov
add
nop
popf
cmpsl
enter
das
push
addl
outsb
sub
push
jecxz
mov
mov
adc
lahf
cmp
adc
mov
je
jmp
xchg
dec
pop
or
in
adc
jmp
mov
adc
clc
inc
pop
sbb
lea
jo
sbb
inc
dec
scas
je
dec
aad
xor
mov
dec
mov
add
pop
js
push
pusha
adc
data16
es
sub
lods
mov
mov
xchg
sub
in
jg
sub
push
add
inc
cmc
lea
pusha
sub
mov
mov
pop
and
aas
in
add
rclb
push
push
aad
jmp
or
cmp
jb
mov
mov
push
push
jge
mov
add
mov
je
icebp
xchg
cmp
add
xchg
inc
add
mov
ljmp
outsb
hlt
jne
mov
xor
sub
test
loope
adcl
dec
lods
push
add
push
fnstcw
je
sub
cmp
je
xchg
add
sbb
inc
lock
and
xor
pop
in
mov
ja
sbb
jne
test
mov
push
cmpsb
nop
andb
adc
loopne
pop
jg
loopne
sti
test
sti
int3
add
sbb
sub
mov
lods
push
push
add
notl
cmp
call
adc
call
inc
cmp
jl
sbb
fistpl
outsb
lea
insb
dec
fiadds
sbb
jbe
scas
jne
cmp
jbe
sbb
adc
pushf
push
xor
test
ret
and
adc
and
lock
add
and
and
cmpsb
pushl
movzwl
push
punpcklbw
enter
popa
fstpt
int
jl
sbb
jmp
sbb
fistpll
test
jne
sub
mov
push
mov
hlt
sbb
adc
or
outsl
xchg
push
mov
xchg
ret
jo
cmp
push
sahf
add
pop
inc
outsb
add
lock
mov
push
incl
cwtl
or
add
testb
stos
sbb
fldl
mov
sub
sbb
mov
dec
lock
imul
cmp
getsec
adc
mov
push
insb
popa
sbb
adc
add
push
adc
pop
mov
cmp
push
push
inc
lahf
push
hlt
jg
ret
ljmp
jmp
push
jge
mov
mov
in
mov
shlb
mov
cmp
jle
jb
cmp
jg
popf
pop
test
dec
clc
lea
sub
or
jge
mov
into
testl
add
mov
cs
jmp
mov
ret
push
push
daa
or
jl
pop
inc
add
rcrb
adc
add
add
adc
or
pop
mov
ret
loope
inc
out
je
cmpl
jge
int
fsubrs
clc
add
hlt
cmc
rorl
jecxz
stos
push
ret
pop
or
leave
push
sbb
push
add
test
mov
rorl
jge
add
mov
xchg
push
ret
fisubl
or
or
not
lods
jne
dec
push
rolb
pusha
fldcw
fcoms
jae
cmc
xchg
jb
hlt
mov
sub
or
mov
push
push
push
cmp
ja
push
push
or
lock
push
push
pop
in
jmp
add
push
ret
mov
cmp
jl
push
cmp
mov
mov
pop
mov
xor
and
pop
ss
std
ror
adc
sahf
jmp
mov
orb
pop
int3
in
push
push
fstl
je
or
popa
or
pop
push
idivb
xor
add
sarl
fs
jae
or
out
movb
xchg
jg
or
jl
xor
imul
std
sbb
push
push
push
pop
pop
rcrb
loop
jg
lock
rcr
test
icebp
mov
or
std
bound
mov
mov
mov
inc
add
cmpsl
mov
push
xor
cmp
sahf
xor
mov
push
cmp
je
cmpl
lea
jl
mov
push
jne
push
call
dec
test
push
testl
pop
inc
scas
scas
pop
pushf
pop
sub
out
mov
push
inc
jl
or
inc
clc
outsb
mov
adc
and
ret
push
jb
jae
loope
fdivs
gs
cmp
adc
shlb
adc
mov
lahf
int3
filds
test
push
cmp
jo
add
push
push
outsl
add
add
mov
fldt
push
scas
mov
pop
push
push
mov
jb
inc
adcb
xchg
test
sahf
cmpsl
adc
mov
mov
jle
pop
mov
add
movsl
xor
adc
ret
dec
dec
call
lea
ret
pop
jbe
mov
push
or
push
scas
mov
lea
mov
add
xor
pop
mov
test
shll
mov
push
sub
int3
out
test
testl
rolb
or
dec
jnp
add
rcrb
rorl
or
or
or
mov
sti
mov
adc
push
stos
and
jo
xorl
mov
pop
adc
or
pop
or
aad
jae
js
lock
aas
cmp
jge
fdivrs
cmp
mov
pop
sub
repnz
and
jg
icebp
adc
inc
sub
and
add
subl
shll
push
mov
push
mov
pop
out
cmp
or
je
or
rcrb
push
xor
or
jmp
clc
sub
cld
mov
inc
cmp
jb
cmc
scas
sub
stc
les
pop
pop
cltd
jo
cmpsl
mov
add
sbb
push
pop
insb
sub
sbb
push
jne
bound
shll
pop
lea
js
xchg
xchg
pop
pop
insb
cmc
adc
xor
xchg
pushf
lret
add
pop
out
mov
and
aad
scas
mov
add
movl
jo
arpl
lret
rorb
or
pusha
sub
push
and
or
and
or
jbe
daa
inc
push
sbb
or
aam
repz
add
pop
add
int3
in
cmpsb
push
mov
adc
mov
xor
push
push
decl
add
out
pop
add
mov
and
and
mov
cld
pop
mov
jg
mov
ret
jne
xor
jb
lea
mov
inc
rorb
push
data16
iret
nop
or
sbb
call
xchg
sbb
mov
ljmp
sub
mov
call
aas
sbb
xchg
in
pop
or
or
adc
mov
mov
sbbl
xor
add
outsl
lods
clc
test
enter
ret
mov
lahf
adc
xchg
dec
adc
lcall
sbb
and
and
sbb
pop
sbb
sbb
pop
pop
cwtl
add
push
jns
subb
into
rcrb
or
imul
add
outsb
xor
das
and
mov
xchg
lds
add
xchg
or
cmpsb
push
dec
push
clc
and
je
or
push
or
jne
jo
push
lods
stos
mov
add
aam
rcrb
fldl
mov
adc
sbb
mov
pop
xchg
jl
jb
or
push
push
sub
in
cmp
adc
ret
cmpl
and
jle
pushl
out
dec
or
jmp
ret
pop
add
sbb
ret
test
cmp
fidivrs
je
inc
sbb
sbb
jecxz
insb
icebp
mov
mov
lods
fnstenv
int
sbb
jl
add
je
jbe
ja
add
pop
sub
jne
cmp
mov
sar
xchg
jne
in
cmp
mov
mov
imul
jno
add
and
inc
inc
or
mov
dec
adc
add
push
add
aas
push
jl
repnz
push
js
jmp
dec
mov
mov
rorb
mov
lock
push
mov
xchg
ret
xor
aas
pop
mov
mov
neg
sbb
and
ds
loop
faddl
fsubrs
std
mov
imul
cmpb
out
mov
adc
ret
fadds
xor
inc
sbb
xchg
loop
adc
sarb
sub
dec
sbb
lahf
adc
scas
inc
push
mov
sbbl
add
sahf
or
mov
in
mov
push
mov
sub
lods
bnd
aaa
sub
orl
push
adc
aad
clc
fwait
push
iret
repz
or
pop
sub
ret
stc
cmp
add
or
cmp
stos
lahf
xor
inc
sbb
add
mov
or
mov
sub
adc
mov
sub
lea
adc
xchg
out
push
aaa
and
popf
icebp
mov
cwtl
cmpl
sbb
dec
xchg
xchg
lret
cmp
or
adc
hlt
cs
lahf
popf
int3
dec
add
mov
push
outsl
mov
dec
mov
pop
push
lea
push
lods
movsl
sub
push
push
add
push
lea
push
mov
push
fs
jns
aam
les
popf
imul
cmpsl
jg
jge
nop
jmp
sbb
push
enter
cmp
sub
add
pusha
push
aad
je
jmp
push
sti
js
jle
add
cli
cmpb
out
sbb
mov
notb
xchg
cmp
cmp
inc
call
fs
push
push
testl
cwtl
movl
fldenv
push
pusha
mov
push
inc
sbb
dec
xor
pop
cmp
sub
cmp
adcb
mov
insl
ret
jle
je
and
pusha
cmpsl
push
mov
movsl
add
fs
add
fcomps
sub
movsb
shl
cmp
mov
fsubp
loop
out
sbb
xchg
dec
pop
and
mov
push
jb
and
pop
leave
inc
fwait
je
sbb
sub
adc
stos
nop
dec
lret
mov
ffreep
cmpl
pop
pop
add
setne
push
adc
fmull
ljmp
insl
push
mov
imul
sub
rcll
push
push
push
push
cmp
lahf
pushf
cmp
je
lds
push
loop
mov
inc
xchg
mov
xchg
pushf
push
mov
loop
lahf
gs
jle
sahf
mov
jnp
mov
push
mov
add
sub
and
jne
mov
mov
adc
add
test
hlt
xlat
xchg
in
jecxz
mov
sub
rcll
lret
push
add
inc
fcoms
xchg
lods
mov
add
mov
out
out
mov
inc
mov
insb
push
dec
dec
mov
push
push
xor
push
push
lea
jg
inc
dec
sbbb
inc
inc
xchg
clc
std
jg
sbb
rcrl
rcrl
mov
outsl
arpl
iret
xor
sub
mov
add
shlb
dec
inc
mov
cmp
xchg
xor
adc
dec
jbe
push
lcall
cltd
inc
jp
int
ret
push
repz
idivl
sbb
push
adc
xor
repz
dec
inc
or
jle
cmp
mov
adc
in
arpl
and
out
or
inc
neg
sbb
mov
clc
pusha
out
and
add
out
mov
sbb
push
scas
addb
adc
imul
adc
push
xor
push
xchg
mov
mov
sub
jne
sub
push
add
push
inc
push
addb
mov
aaa
loop
mov
or
and
incl
adcb
pushf
testl
mov
or
push
clc
pusha
lock
jo
call
fiadds
push
or
add
adc
adc
data16
clc
cwtl
add
jmp
lret
xor
sarb
push
push
push
and
jbe
push
inc
mov
shrl
push
jo
lret
push
mov
mov
xor
sbb
and
xchg
push
cmp
pushf
mov
test
add
xlat
loop
pop
call
adc
sarl
clc
add
je
add
sti
jne
cmpl
cmp
aad
loop
loope
sbb
jmp
pop
or
mov
sbbb
mov
adc
rcrb
jmp
and
push
xchg
pop
loop
sahf
fldz
fdivp
jb
addb
outsb
pop
rcll
dec
adc
into
sahf
pop
flds
mov
loope
clc
and
mov
xor
xlat
int3
add
push
xor
cmp
mov
push
shrl
mov
push
mov
enter
sahf
sub
mov
push
sub
push
pop
add
lea
insl
jb
pop
push
pcmpeqd
pop
push
fstpl
xor
xor
mov
jnp
or
dec
cmp
loope
sub
out
cmp
sbb
test
pop
and
sub
inc
mov
mov
or
and
xchg
outsl
cmpsl
jnp
ficoms
xchg
jno
icebp
add
push
sbb
add
rclb
xchg
inc
push
push
mov
test
jo
push
addb
xor
lods
dec
inc
inc
lahf
push
rclb
ret
xor
pop
push
pusha
adc
sub
test
jge
inc
test
push
cmp
pop
sub
push
push
lea
imulb
fcoms
mov
test
fs
push
xor
add
push
push
push
push
jg
dec
mov
addl
or
enter
push
test
je
or
sbb
adcb
add
lcall
add
push
iret
clc
adc
xor
test
js
sub
xor
push
ja
push
lea
push
and
daa
jo
dec
sahf
xchg
push
sbb
xor
js
je
push
adc
jbe
mov
dec
adc
push
arpl
xchg
add
in
popa
cmpsb
mov
inc
push
mov
pusha
fmull
add
test
add
inc
jl
add
push
jns
or
adc
lock
ss
ss
add
add
pop
popa
mov
addl
dec
gs
add
loope
xor
adc
insb
pop
mov
xchg
mov
loop
mov
cmp
pop
mov
dec
push
add
push
mov
and
movsb
cmp
jl
mov
xchg
xor
or
xchg
cmpl
push
insl
loope
test
pop
or
sbb
mov
adc
xchg
lret
add
mov
xor
enter
popa
mov
mov
test
push
int3
xor
push
mov
sub
sbb
in
cmp
push
pop
mov
xchg
add
jg
dec
mov
jge
lods
pop
in
mov
test
push
loopne
into
sub
cld
sub
sub
push
pop
inc
test
jbe
or
fs
dec
mov
mov
ja
orb
push
mov
push
push
loope
ret
cwtl
pusha
pavgb
outsb
rclb
dec
sbb
insb
push
pushf
rclb
sbb
call
sub
push
push
loope
push
jns
out
popa
lods
outsb
cmp
pushf
js
sbbb
sbb
mov
mov
sbb
mov
mov
add
sub
jl
lea
fs
jge
sub
or
xor
xchg
sub
push
cltd
push
enter
addb
popf
es
pop
pop
mov
cmp
xchg
mov
xchg
lock
or
loop
cmp
cs
fists
adc
sbb
mov
mov
cs
loop
add
sar
lock
in
and
daa
add
push
lods
add
adc
add
mov
std
push
or
rorl
adc
out
sar
mov
shr
add
mov
imul
push
sub
push
push
lret
insb
adc
mull
sbb
jle
adc
in
add
out
imul
aaa
dec
repz
mov
testl
mov
mov
sub
mov
mov
xchg
cmp
loope
xor
pop
outsl
or
xor
jne
dec
xor
inc
xor
and
mov
mov
hlt
push
ja
jo
arpl
push
lods
sbb
xchg
mov
and
mov
lea
inc
dec
sbb
mov
xor
add
jnp
inc
lea
mov
or
loop
shll
mov
sbb
adc
roll
or
fldz
inc
fstpl
push
int3
jg
test
sub
sub
or
es
lods
aaa
sbb
cltd
idivl
test
inc
push
aaa
es
pop
fisubrs
inc
sub
stos
sarl
sahf
imul
mov
pop
test
arpl
mov
inc
outsb
out
aaa
push
jle
cmp
add
stc
repnz
xor
sbb
dec
push
sbb
jg
mov
popf
imul
cld
testb
or
out
or
jmp
mov
imul
dec
pxor
jl
sbb
push
faddl
mov
pop
cld
lret
xor
mov
fdivrp
shll
out
xor
sbb
mov
push
push
jl
mov
xchg
add
jns
inc
cmp
outsb
and
fnstsw
xchg
imul
clc
jbe
pop
mov
push
ret
shrl
fidivl
mov
into
lods
add
sahf
add
inc
idiv
rorb
movb
dec
pop
mov
leave
add
mov
jge
ret
dec
cmp
out
mov
shll
xchg
cs
push
sbb
and
je
stos
mov
mov
push
mov
add
call
xchg
fisttpl
adc
xor
je
iret
cmp
movsb
aam
fildll
cmpl
pop
xchg
inc
faddl
xor
call
xchg
mov
movsl
sar
sub
lods
add
out
inc
dec
inc
and
mov
add
xor
invd
and
je
icebp
add
xchg
mov
xlat
or
inc
in
les
lods
inc
out
inc
outsl
loopne
addr16
ss
jmp
jecxz
leave
jae
add
pop
add
or
sbb
es
imul
sbb
xor
or
pop
out
or
sbb
mov
and
pop
ret
push
mov
aaa
fisubs
in
add
push
test
and
pop
cmpb
sub
jp
push
push
aad
push
enter
push
and
lea
push
push
loope
nop
mov
push
xor
sahf
mov
inc
mov
filds
xlat
out
mov
andb
lods
imul
push
sahf
adc
inc
xchg
push
aas
pop
and
notb
xchg
nop
imul
pop
sbb
and
pop
jl
push
mov
adc
aas
sub
pop
inc
sbb
jmp
in
lock
sub
lea
pop
push
icebp
es
add
pop
sbb
cmp
pop
cmp
mov
popa
or
xorl
mov
mov
xchg
or
jns
sbb
mov
push
add
or
lahf
or
fwait
and
push
mov
push
fisttpll
pop
adc
add
aad
and
clc
mov
setb
scas
push
mov
sub
cmp
setae
adc
stos
mov
add
in
jecxz
push
push
movl
lock
hlt
or
jno
dec
fnsave
pop
leave
pop
mov
cmpsb
and
dec
sub
cmp
pop
dec
repz
mov
push
sub
inc
and
sub
aad
push
movsl
and
shlb
pop
jnp
shl
inc
je
rorl
cld
jecxz
filds
push
dec
xor
push
push
mov
rorb
lods
push
lea
inc
push
xchg
adc
xor
push
fcoms
fbstp
add
cwtl
or
xor
sbb
inc
ss
push
inc
pushf
cmpsb
jb
push
push
dec
push
push
add
add
inc
pop
add
mov
imull
aam
jb
leave
pop
dec
testl
insb
movb
in
mov
pop
cmp
ja
movzbl
int
ss
or
push
mov
addr16
stos
adc
push
dec
aaa
push
inc
dec
add
fstp
mov
add
adc
sub
sbb
mov
xor
inc
push
pop
adc
call
inc
call
test
pop
inc
and
fstpt
test
outsl
sbb
adc
rol
push
insb
decb
xor
das
movsl
cld
lea
push
dec
jmp
jmp
fs
mov
pusha
jmp
scas
insl
pop
xor
inc
mov
cmp
inc
xor
cli
add
lea
aaa
test
push
jae
mov
popf
idivl
stos
cmpb
push
scas
push
fldl
and
stos
jle
call
jae
push
pusha
lds
sbb
cmp
xchg
sarb
les
incb
pop
lds
xor
mov
xor
inc
paddw
push
pop
mov
mov
add
sbb
cmp
jl
lods
pusha
cmp
lea
xor
push
mov
rcll
mov
inc
fnstenv
xchg
pop
subb
or
sti
je
sub
push
ja
sahf
jns
and
or
jo
or
jmp
push
adc
dec
sahf
out
loope
subps
or
dec
push
pop
or
popa
xchg
shll
mov
cltd
dec
add
dec
push
stos
movsb
dec
and
orl
pusha
sub
push
std
call
in
sbb
push
pop
pop
fldcw
pop
stc
je
xor
pop
clc
icebp
sub
mov
dec
ja
je
cld
pop
jl
aas
divl
jne
push
push
push
push
lret
jl
aad
cmp
jmp
and
lds
push
pop
shrb
stos
mov
setg
mov
add
rorl
cld
cwtl
stc
nop
inc
or
jmp
dec
aaa
dec
mov
dec
cmp
dec
mov
mov
push
fstpt
lea
xchg
or
push
fsubp
cli
mov
mov
iret
and
add
xlat
and
dec
or
dec
ljmp
or
in
pop
mov
push
push
arpl
xor
push
push
add
pop
mov
scas
loope
add
push
or
jmp
push
add
push
sbb
int3
mov
je
inc
mov
je
lcall
add
add
fistpl
in
insb
cmpl
jle
jb
push
add
push
inc
push
or
xlat
pop
adc
out
sbb
aam
xlat
or
xchg
add
adc
loopne
jmp
aad
and
aad
or
add
sub
int
movsl
mov
fstl
push
fbstp
lods
push
or
xchg
pop
mov
cltd
mov
aaa
js
sub
icebp
and
clc
pop
test
or
push
add
movsb
loopne
push
push
mov
mov
pusha
lock
jl
leave
lds
mov
jo
iret
in
in
adc
dec
add
fdivl
jl
cmpsl
aaa
pop
sti
rorb
js
pop
movl
aas
pop
add
jne
or
add
out
outsl
mov
mov
push
pusha
sub
push
enter
pop
push
inc
ds
lods
daa
or
adc
mov
in
testl
mov
and
adc
push
popf
test
cmp
pop
jl
jg
icebp
cmp
fs
lods
movsb
outsb
andb
add
rolb
or
mov
lea
dec
adc
sbb
push
jl
sub
xchg
aam
sub
dec
fs
dec
adc
dec
ljmp
popf
jecxz
cmp
int3
xor
push
adc
icebp
and
sbb
jo
orb
add
mov
cmp
mov
sub
stos
sub
push
fdivrl
pop
adc
popf
cmp
dec
inc
pop
push
xchg
xor
rcrl
sbb
or
enter
add
inc
paddsw
adc
pop
fldenv
jo
stos
cmp
xor
lods
mov
xchg
xchg
lcall
push
test
fwait
or
and
mov
cmc
in
nop
in
lahf
add
jl
inc
nop
testl
mov
adc
clc
jmp
in
push
rorb
movl
pop
adc
fs
xor
jne
sub
jb
add
push
lock
push
subb
pop
es
add
push
push
jl
mov
cmp
mov
xor
pop
sub
imul
or
ss
popl
sbb
lret
testb
add
shll
sbb
cwtl
dec
jne
lds
in
mov
sbb
push
cmpsl
mov
mov
ret
shr
mov
adc
clc
and
push
sbb
dec
mov
sub
and
ret
hlt
adc
mov
fwait
sbb
push
mov
lahf
sbb
shlb
xchg
idiv
insl
out
mov
mov
roll
mov
repnz
inc
or
mov
jb
mov
movsl
sbb
and
sbb
scas
nopl
pop
push
push
movaps
push
or
and
pop
cmpb
cmp
push
mov
insb
fdivp
add
dec
xor
ret
jno
sahf
lret
cld
fcoms
pop
jmp
push
cmp
fildll
aam
add
or
add
addb
jne
pop
mov
cmp
in
or
sti
mov
cmpsb
loop
push
aad
outsb
test
sub
loope
sub
addb
xor
and
inc
test
pop
dec
pop
jne
push
lods
in
cmp
cs
mov
push
xchg
roll
cmp
xchg
repz
push
dec
xor
push
sti
je
jno
add
xor
and
add
add
cwtl
popa
pop
jae
sub
and
mov
js
fwait
lods
push
push
or
cmp
dec
cld
cltd
or
sub
pop
pop
leave
dec
sti
std
movsb
and
mov
xchg
daa
push
mov
dec
push
daa
add
das
adc
add
xchg
mov
dec
rcrb
sbbl
sub
push
adc
inc
xchg
add
sbb
in
cmp
movl
mov
mov
mov
jmp
rcrl
js
aam
pusha
enter
mov
adc
sub
pause
pop
push
adc
inc
jb
or
jns
adc
push
test
jl
push
mov
cmpl
and
shlb
loopne
je
pop
pop
mov
push
icebp
adc
add
sbb
roll
es
cmp
add
sbb
das
xchg
push
fcoms
ds
xchg
push
jle
xor
add
pusha
inc
fwait
push
loopne
enter
int3
xor
push
enter
pop
sbb
dec
push
fs
sti
push
pusha
and
mov
cmp
push
mov
jp
dec
xor
jle
rclb
and
inc
push
jge
sbb
mov
shlb
add
push
in
in
test
mov
sbb
push
inc
add
in
xchg
hlt
ljmp
mov
sub
adc
stc
jl
push
mov
inc
imul
shrb
lea
pop
test
test
and
push
push
xor
fadds
mov
push
jp
cld
or
insl
push
lret
pop
jge
je
or
orl
inc
sbb
test
and
inc
jb
lret
cmp
mov
and
inc
dec
imul
lret
sbb
xor
dec
repnz
aas
lcall
lods
mov
xchg
sbb
add
pop
in
pop
add
addr16
mov
mov
add
inc
or
testb
mov
jle
add
ds
inc
inc
movb
sarb
jge
cmp
pushf
mov
fcomip
mov
push
in
adc
fbstp
xchg
sub
aam
movsb
ja
or
das
push
mov
in
push
cmp
shrl
lahf
and
jecxz
sbb
repz
jbe
roll
or
out
fbld
pop
mov
xor
push
push
mov
mov
xor
xchg
push
lods
outsl
test
ljmp
popf
or
popf
stos
mov
mov
sub
inc
mov
popl
or
addl
or
mov
add
fimull
xor
push
or
add
fsubr
mov
pop
lret
add
int
pop
lock
sbb
mov
jp
push
inc
es
test
cmp
or
cmpsb
loop
aaa
mov
sub
clc
mov
push
fwait
lcall
lahf
bound
inc
out
pop
lds
pop
or
pop
dec
inc
xor
mov
outsl
and
mov
daa
repnz
adc
stc
test
repnz
sahf
nop
pop
push
add
xchg
sub
add
pop
push
add
int3
subb
fstps
std
adc
jg
jle
mov
and
fwait
clc
loope
add
ss
and
testl
leave
pop
sahf
rorb
pop
push
and
sub
popf
dec
and
iret
sahf
mov
add
pop
mov
imul
sub
andl
push
pop
pop
add
jbe
push
mov
test
je
jecxz
mov
popf
and
or
es
cmp
stos
gs
inc
mov
add
jg
dec
dec
push
sbb
or
test
int3
jo
lcall
jl
inc
jne
bound
lret
push
mov
fs
outsb
int
jl
push
test
inc
fs
dec
push
push
mov
imul
mov
orb
push
xchg
xlat
sub
jb
add
cmp
inc
xchg
movsb
sub
leave
mov
add
or
loope
je
mov
std
sti
adc
jl
push
push
pusha
mov
and
dec
in
repz
and
mov
or
adcl
push
adc
nop
or
push
inc
lcall
inc
mov
adc
fs
inc
lcall
inc
cs
popa
filds
push
test
xchg
test
imul
inc
push
adc
push
movsl
insb
int
sbb
adc
push
or
xor
inc
rep
sahf
push
adc
mov
mov
mov
nop
movsb
shr
adc
adc
cmp
or
and
adc
insl
sbb
mov
je
fstps
and
add
inc
test
test
and
sub
cmp
test
lret
or
pop
xor
cmp
sub
leave
inc
std
adc
and
inc
es
aam
dec
dec
xchg
cmp
sbb
add
popa
adcb
and
sti
pop
push
push
jmp
mov
add
dec
sbb
dec
mov
inc
ja
ror
sti
inc
lea
push
mov
mov
ret
add
push
add
call
sub
lret
shll
les
repz
dec
fcomps
cmp
sbbl
enter
push
sbb
cwtl
lods
xchg
pop
cmp
inc
sbb
aaa
or
mov
fiadds
into
ds
ds
push
adc
adc
push
xchg
cmp
xchg
dec
xchg
sub
push
outsl
sbb
fnsave
adc
inc
push
imul
cmp
inc
test
idivl
bound
cmpsl
rcrb
arpl
js
in
mov
sbb
sbb
movsb
jne
inc
dec
mov
xor
and
add
sbb
int3
inc
cmp
cwtl
js
cmp
inc
test
lock
stc
push
push
pushf
cmp
mov
add
incb
pop
cltd
data16
push
push
push
pop
inc
push
lea
push
push
pop
sbb
push
lds
jmp
adc
add
ret
dec
mov
out
jbe
push
sub
or
push
add
sarb
shll
lahf
push
or
xchg
or
add
rol
jmp
and
sub
mov
imul
ret
pusha
loopne
cs
push
mov
rorb
cmp
adc
cmpl
inc
adc
sub
push
xchg
jp
cltd
cs
push
fisttpll
imulb
or
dec
or
push
lds
sbb
lds
add
andl
lea
je
insl
push
test
lods
jle
dec
clc
aas
inc
fisttps
loopne
dec
cld
push
iret
les
dec
pop
push
add
sbb
out
decb
fcmovbe
mov
jle
clc
jg
pop
inc
ret
or
rorb
mov
aaa
aas
xchg
fcoml
psubd
xorl
jne
mov
jno
dec
xor
shlb
cmpsl
popf
sbb
jge
pusha
cmpsl
jmp
int3
flds
inc
jae
xchg
mov
push
dec
ds
sub
sbb
xchg
push
inc
ret
mov
pop
scas
imul
cmp
scas
cli
push
je
std
mov
stos
loop
cmp
add
or
inc
ja
shrb
in
out
cmp
lea
push
icebp
cmpl
jle
lock
inc
push
ljmp
test
sahf
pop
stos
out
sahf
mov
sub
loope
push
mov
mov
mov
addr16
test
pop
pusha
inc
mov
jb
inc
xor
sbb
jnp
mov
sbb
shlb
inc
sub
in
lea
mov
js
adc
inc
pop
and
adc
movsb
daa
movsb
in
add
xor
call
adc
loopne
outsb
sbb
pusha
cmp
adc
inc
push
or
inc
or
mov
lock
and
adc
cli
cmp
mov
sbb
scas
cs
or
dec
bound
fdivl
or
adcl
push
mov
or
dec
movsl
inc
jmp
mov
loop
cmp
jnp
adc
inc
add
cmp
int
jl
sbb
cmp
leave
push
shll
ss
and
mov
pop
in
dec
loope
das
jecxz,pn
pop
outsl
xor
mov
inc
mov
add
lret
jle
mov
pop
push
fsubrp
push
sbb
popa
sbb
rolb
push
push
addl
mov
mov
mov
rcrb
in
add
fs
aad
pop
and
popf
loopne
jl
mov
rol
fcmovbe
push
imul
xor
cltd
adc
shll
push
sub
popa
jb
stos
aaa
scas
mov
mov
jle
inc
std
add
inc
add
int3
loopne
add
cld
sbb
imul
mov
imul
sbb
loopne
cld
xchg
rorl
ret
sbb
or
xchg
cltd
popa
dec
xchg
lds
add
mov
shrl
fmull
cmp
call
test
dec
jno
cmp
js
inc
push
mov
out
add
adc
loopne
cltd
add
cld
or
and
cmp
scas
or
std
or
jns
and
inc
sub
enter
push
lock
and
cmp
add
or
orl
stos
es
jmp
mov
dec
inc
leave
push
add
movsl
inc
aaa
andl
mov
cmp
xor
or
pushf
movsl
xchg
inc
xor
sbb
pop
fsubrs
cld
mov
cmp
add
pop
push
mov
cmp
insl
rclb
ljmp
sbb
subl
inc
aad
cmp
data16
je
add
mov
sub
aas
push
push
mov
add
inc
loopne
sbb
lea
push
push
push
push
call
jmp
mov
inc
add
cmpsb
sbb
daa
xor
repz
mov
repnz
push
jecxz
adc
xor
dec
sahf
xor
test
in
mov
mov
shlb
cmp
lods
xor
or
fwait
inc
inc
test
pop
fs
and
and
mov
push
push
inc
testl
in
cmpb
inc
add
mov
add
lock
inc
add
adc
or
mov
mov
jg
and
push
sahf
fcomp
xchg
mov
xor
popa
aam
add
and
inc
in
scas
or
push
dec
add
sbb
lock
mov
std
and
xor
pop
cmp
mov
push
and
or
adcb
hlt
and
push
rorl
sahf
cmpsl
mov
inc
pop
inc
or
sbb
loopw
shll
loope
jl
sub
or
xor
xchg
adc
loop
push
or
push
push
icebp
out
push
or
popf
push
push
jmp
jle
or
add
lea
enter
and
push
ljmp
push
jne
lret
data16
xchg
cmp
movl
psraw
xchg
xor
or
add
xchg
pusha
arpl
test
jg
xchg
dec
sub
shlb
dec
sub
push
stc
add
sbb
push
pusha
mov
cmp
aam
pop
xchg
lcall
mov
push
push
scas
fldcw
sbb
ljmp
sbb
fistpl
push
pop
jmp
gs
adc
outsb
pop
je
sbb
jecxz
mov
les
sub
insb
or
fs
pop
nop
xchg
or
mov
sbb
fst
test
mov
jbe
cmc
adc
push
dec
fidivs
and
mov
dec
dec
mov
pop
or
test
push
dec
dec
into
mov
and
sbb
and
inc
lds
ret
xor
test
stc
mov
cli
add
and
or
pop
mov
leave
and
pop
or
add
add
sbb
sub
leave
or
addr16
push
scas
push
push
mov
mov
dec
outsl
loopne
push
mov
scas
test
rcrl
inc
mov
cmp
sti
and
out
or
mov
and
mov
insl
sbb
mov
push
orb
loopne
int3
xor
fcmovbe
push
lret
push
out
jp
adc
fsubrl
mov
dec
inc
jbe
dec
rcrb
movl
cld
adc
addb
mov
ret
dec
pop
mov
sbb
adc
lds
or
or
sub
jnp
dec
sbb
xor
pop
call
cmp
mov
add
add
cmc
push
ss
testl
sub
mov
repz
rcrb
icebp
mov
push
adc
aaa
add
aaa
mov
mov
out
lods
adc
clc
lods
inc
or
cmp
lds
decb
mov
mov
cld
pop
cmp
pop
mov
lea
mov
mov
loop
mov
cld
lea
ret
adc
mov
aad
push
push
push
sub
fdivrs
dec
sbb
pop
add
pop
sbb
xor
movb
ret
cmpsl
xorl
jle
add
icebp
ret
jl
scas
sub
sahf
push
adc
jmp
push
pop
dec
jb
pop
loop
and
sub
test
pushf
add
and
or
sbb
imul
cmpsb
stc
lock
hlt
push
mov
add
cmp
and
sub
add
push
add
jne
pushl
ss
mov
add
pushw
sbb
adc
jle
pop
out
sub
cltd
push
cmc
add
je
cmpb
pop
sahf
adc
cmp
inc
hlt
lea
add
cmp
scas
fistpl
mov
sub
loopne
inc
add
decb
mov
sub
lret
pusha
add
cmp
popa
jae
inc
xchg
push
push
push
jo
hlt
pop
fwait
mov
or
cmp
jge
add
pop
jne
fcoms
add
insl
das
je
push
das
mov
insl
mov
add
mov
cmp
sub
push
es
jbe
mov
or
adc
sahf
jl
mov
push
jg
push
add
push
cmp
sub
ret
pushf
mov
push
pop
fcmovnu
push
fstl
cmpsl
push
adc
or
xchg
mov
adc
ficoml
xor
push
ret
mov
xorl
test
push
pop
test
pop
test
push
dec
les
insl
ss
or
adcb
push
daa
push
jae
outsl
inc
sub
adcl
pushf
push
adc
sbb
push
sbb
push
add
add
imul
popf
leave
add
rcrl
adc
jb
test
add
fiaddl
mov
add
mov
add
adc
in
aad
cmp
jno
cs
and
in
ja
cmpsl
inc
jle
lahf
mov
inc
andb
cmp
out
xor
and
or
orl
out
es
mov
or
add
je
cmp
dec
jns
jno
sbb
ret
pusha
pop
push
mov
xchg
pop
cltd
add
lock
fwait
lock
in
cmp
jl
mov
insb
lea
cmp
jle
pusha
pop
lock
cmc
cmp
jle
lcall
sbb
push
inc
xlat
pop
rorl
jo
dec
sub
add
cs
negl
out
lea
ror
and
xor
pop
sbb
push
push
push
je
pop
into
loope
mov
mov
add
and
pop
ja
xchg
popa
push
add
loop
sarl
in
movsb
adc
sbb
scas
mov
ret
clc
cmp
jbe
add
mov
jbe
sub
add
push
push
mov
pop
xor
pop
ret
push
pop
mov
push
pop
mov
aaa
inc
add
call
mov
cltd
jmp
cmp
or
fcmovu
cmp
jb
fists
and
sub
jo
jp
inc
test
rolb
push
mov
adc
sbb
rcrl
pop
sbb
jmp
jno
lahf
push
rorb
out
push
incl
and
xor
or
add
add
sub
sbb
push
mov
add
xchg
aam
adcb
enter
or
add
cmp
mov
add
test
inc
mov
mov
pop
xchg
mov
jle
xchg
xchg
addl
mov
je
dec
sbbl
sbb
xchg
lret
sub
inc
inc
loope
cmp
sbb
pop
and
pop
sub
sbb
mov
jp
outsb
testl
faddl
daa
lock
mov
xor
push
push
fsubrs
cmp
mov
fdiv
test
or
jecxz
xchg
fidivs
iret
shlb
dec
dec
push
in
and
movsl
and
mov
popf
jl
fdivrl
fnstenv
cmc
test
aad
dec
xor
push
cmp
or
cmp
inc
repz
test
dec
shll
fcomi
sarl
add
imul
xchg
movsl
andl
inc
je
mov
mov
push
jl
adc
pop
mov
xchg
mov
fsubl
add
test
jo
xchg
inc
pop
fdivl
enter
sbb
jne
sbb
clc
jns
push
inc
rcll
int
cwtl
call
push
mov
mov
xchg
xchg
jge
pop
xchg
adc
mov
add
push
mov
add
movsl
notl
push
pop
stos
push
inc
sub
insl
and
aad
xchg
sbb
push
add
sub
leave
and
adc
out
jle
add
push
rcll
push
inc
mov
add
mov
push
sbb
hlt
push
int
mov
adc
pop
jb
adc
daa
xchg
sub
out
adc
popa
add
in
lahf
push
icebp
pop
mov
xor
or
dec
xor
cld
xor
or
push
jnp
loopne
jne
push
movsl
fimull
sub
test
js,pt
and
jecxz
out
add
lds
sub
mov
sub
call
push
push
sub
mov
mov
movsl
cmpsl
pusha
shrb
pusha
mov
mov
mov
test
sbbb
adc
jle
xchg
add
fwait
cld
sub
scas
sub
adc
xor
xor
sbb
mov
or
mov
mov
jl
push
pusha
mov
xchg
test
mov
mov
push
add
movsl
add
adc
xchg
pushf
jl
and
sbb
sbb
adc
pop
js
fbstp
xchg
fists
add
dec
mov
adc
push
push
cmp
sub
mov
lret
mov
jne
fwait
xchg
inc
sbb
repnz
push
out
cmp
jmp
xlat
daa
rolb
push
sub
or
pop
or
xchg
andl
rorb
test
mov
movl
fdivrs
mov
or
push
add
push
xchg
mov
pop
pop
movsb
add
or
iret
xchg
jo,pn
push
out
and
push
or
ds
inc
out
and
xchg
fmul
mov
pop
rolb
ja
pop
aaa
mov
jecxz
loop
fiaddl
push
bound
pop
mov
mov
push
andb
mull
loope
mov
and
add
js
cmp
adc
fadds
lock
sub
orb
xchg
fcmovnu
ret
mov
pop
jmp
push
push
push
jo
loopne
jae
adc
rorl
or
fsub
inc
inc
inc
and
xchg
rcr
add
mov
loopne
enter
mov
movb
inc
cmp
sub
ret
out
xchg
decl
push
lret
jmp
fists
cmp
fisubrs
fs
inc
lea
xchg
ja
flds
loop
je
add
inc
push
push
xor
mov
cmpsb
mov
sahf
cmpb
xchg
xor
or
sub
ret
test
shll
add
sub
adc
test
scas
inc
ret
jg
outsb
ficompl
leave
and
add
mov
js
push
imul
inc
or
aam
and
add
ret
or
aas
nop
imul
imul
jbe
icebp
jne
and
mov
shl
jl
or
sub
stos
xchg
inc
adcb
test
xor
leave
pop
dec
mov
lcall
dec
call
movsl
jns
push
insl
mov
sbb
push
pop
sub
insb
sub
aaa
cwtl
mov
xor
cmp
outsl
or
sti
pushl
jecxz
addb
add
inc
aas
cmpl
int
push
adcl
jne
adc
push
mov
repz
xchg
add
out
add
dec
imul
push
or
enter
mov
dec
cmp
cwtl
or
out
mov
sbb
test
movb
pushf
xor
pop
jne
pop
lea
sbb
cmp
sbb
inc
sbb
add
mov
push
sub
movsl
imul
in
and
mov
ss
mov
xor
int
adc
inc
sbb
cmp
push
push
fmuls
cmp
push
loop
sub
cmp
cmova
in
add
mov
stc
add
repnz
add
inc
daa
outsb
orl
mov
add
add
add
imul
add
jo
add
sbb
pop
decl
adc
fmull
pop
add
push
push
add
sbb
ret
push
js
popf
mov
add
sub
andl
sahf
add
test
mov
lahf
rol
or
lea
add
rolb
fstpt
xchg
or
or
cmp
adc
pop
clc
jg
mov
add
inc
add
sub
inc
mov
rolb
and
scas
xchg
lea
cmp
std
adc
idivb
sahf
cli
adc
sti
sub
imul
add
in
mov
jle
orb
or
mov
sub
push
dec
imul
adc
lock
add
pop
out
add
pop
daa
arpl
into
mov
xchg
push
ja
idivb
cltd
hlt
sub
sub
loopne
add
pop
push
cmp
cmpsl
out
pavgb
push
dec
and
sahf
mov
sub
push
add
push
movb
mov
dec
mov
lcall
dec
add
mov
xor
and
andb
or
js
add
pusha
sbb
adc
test
lahf
push
imull
lea
jmp
out
cmp
dec
mov
mov
jg
rorl
ret
and
shl
adcb
mov
adc
inc
and
or
lock
fs
int3
push
mov
or
pop
loop
lea
ret
pop
jp
xchg
sub
insb
adc
push
pop
call
addr16
bound
loopne
int
push
or
adc
ds
sub
dec
xchg
test
mov
jmp
data16
or
out
and
or
pop
mov
add
loop
orb
movl
mov
push
push
loope
stos
faddp
add
cmp
or
je
repz
add
mov
arpl
mov
xor
push
movsl
lock
add
call
mov
iret
movsl
jo
shrl
or
fldt
lods
mov
adc
in
and
xlat
adc
add
add
cwtl
push
insl
inc
aad
sbb
test
pop
pop
push
push
push
jmp
jns
mov
jge
sbb
ret
adc
pop
das
add
pop
pop
mov
sbb
sbb
adc
pusha
inc
ficomps
push
lea
mov
pop
sarl
cld
dec
add
shll
es
jnp
or
xor
sbb
push
xor
sbb
lahf
or
pop
push
call
push
nop
cmp
push
mov
push
roll
fistps
sub
mov
sbb
mov
xchg
pop
sub
test
cmpsl
and
fidivrl
sarl
sahf
cmp
fs
out
sbb
sbb
mov
dec
dec
lahf
xor
arpl
dec
add
sbb
push
xor
fildl
push
push
mov
mov
push
jge
aas
sbb
fimull
mov
pop
or
shlb
mov
mov
pop
rcrb
sti
clc
mov
sub
cltd
lock
push
mov
negb
push
rcll
push
dec
es
leave
cmp
sahf
loopne
mov
xlat
mov
jle
pop
ret
test
push
pop
sarl
sbb
shrl
mov
add
add
adc
mov
cli
push
dec
inc
outsl
and
aam
mov
lds
sti
scas
popa
jl
mov
movl
pop
lret
sub
mov
clc
in
and
xor
cmp
insb
cmpsb
cwtl
ret
add
pop
push
mov
pusha
jle
mov
jecxz
lock
jae
gs
xlat
inc
dec
pop
inc
mov
pusha
push
shrb
jg
mov
std
hlt
lods
insb
popa
push
mov
or
pushf
inc
cld
mov
push
je
inc
jnp
cmp
jae
sub
ss
mov
loop
sahf
or
test
jg
mov
movl
inc
je
insb
stos
push
mov
jl
jle
rorl
mov
add
pop
and
sahf
or
or
in
and
cmp
sub
push
sub
sbb
push
cmpsl
push
and
movl
loopne
cld
ret
loopne
in
fistpl
ret
dec
imul
rorl
cld
add
or
mov
or
adc
orb
xchg
jecxz
push
cmp
lea
jne
push
push
orl
clc
add
mov
mov
fcoms
shl
lods
sarl
mov
add
aam
in
mov
les
roll
mov
mov
or
testl
pop
movl
mov
jo
sbb
jl
or
outsl
mov
icebp
adc
xchg
cmp
jge
mov
sbb
cwtl
hlt
jo
mov
sub
movsb
add
fwait
xchg
add
sahf
xor
pop
push
das
test
adc
ret
rcr
inc
mov
add
mov
ljmp
in
xchg
jl
int
dec
ljmp
xchg
xor
or
pop
mov
cmp
arpl
or
iret
pop
dec
or
xor
push
rcrb
or
xor
shr
add
xchg
or
mov
push
lahf
sbb
pop
jecxz
add
adc
daa
inc
inc
sub
sbb
push
dec
shrb
xchg
hlt
mov
xchg
pop
js
hlt
jle
mov
and
push
xchg
cld
jg
adc
jge
adc
sbb
cmpsb
ret
cmp
ffreep
mov
in
cwtl
jmp
pop
test
jne
arpl
insb
adc
movsl
mov
mov
fstpl
cli
jp
sbb
pop
push
push
shr
cmp
fwait
pop
out
mov
sub
mov
sbb
pusha
enter
cmp
and
loop
lahf
and
adc
push
add
pop
push
lea
rolb
fsubrs
xchg
in
push
and
add
stos
inc
cltd
pusha
imul
jp
ret
rcrl
lods
lds
xor
daa
imull
mov
pushf
data16
lret
dec
out
dec
xchg
jp
pop
idivl
pop
es
jge
add
push
enter
divl
push
jl
inc
dec
aad
pushf
xchg
rorl
fpatan
sbb
dec
add
stos
in
dec
add
cmp
movsb
add
or
mov
mov
out
fisttpl
mov
adc
in
sbb
xchg
mov
xchg
xor
rorb
leave
push
out
add
aam
xor
fisttps
mov
xchg
add
fwait
mov
mov
or
and
inc
lods
bts
jmp
insb
push
dec
stc
jo
sbb
fucomip
mov
sub
push
leave
sub
rcrl
gs
mov
mov
sbb
rclb
mov
movsl
shll
sbb
fldcw
xchg
pop
jo
shl
leave
push
or
sbb
xor
mov
or
sbb
add
sbb
lods
jo
js
outsl
loopne
loopne
push
mov
incl
mov
aaa
hlt
test
mov
xor
cmp
ja
loopne
pop
ret
loope
and
and
jp
sub
or
sub
or
or
mov
mov
ret
pop
push
push
and
aam
into
into
leave
inc
decl
dec
xor
inc
sbb
lea
xchg
xor
movl
jle
mov
xchg
push
es
call
pop
jl
mov
lea
mov
xchg
cld
lcall
mov
or
adc
xor
dec
add
xor
xchg
orl
adc
sub
xlat
xor
and
mov
sarl
adc
push
fdivrs
sar
mov
sub
loopne
mov
and
cs
cmp
or
lret
in
and
cmp
sbb
sub
fstpl
icebp
sbb
imul
nop
adc
adc
xchg
sbb
push
or
sbbl
loop
aam
ret
inc
cmpsb
jle
add
push
sub
mov
sahf
test
data16
movsb
sbb
adc
push
cmp
push
ss
out
adc
loopne
test
mov
mov
inc
popa
leave
fisttpl
mov
lods
jp
push
cmpsl
xor
arpl
push
loope
mov
outsb
mov
pop
adc
jno
xor
jnp
adc
add
mov
mov
rcl
push
pop
in
fcoms
mov
repz
push
or
sbb
repnz
enter
int
int3
xchg
push
jbe
sbb
mov
xchg
jge
push
add
cmp
movl
jge
insl
loop
stos
insl
ja
enter
adc
dec
shlb
xchg
dec
lods
sahf
mov
sbb
cmp
lahf
push
fdivrs
enter
mov
or
pushf
cmp
mov
pop
pop
dec
sub
scas
fstpl
addl
xchg
add
jno
sub
inc
sub
insb
adc
lods
lea
cmp
and
sub
mov
add
dec
xor
mov
fwait
out
mov
jae
pop
pop
imul
je
mov
cld
es
pop
xlat
cmc
mov
rclb
cmp
or
xchg
rclb
push
sti
ds
xor
mov
and
sub
jge
mov
test
sbb
mov
cld
push
mov
shll
pop
pop
les
pop
push
pop
aad
nop
push
cmp
or
loopne
popa
and
imul
xchg
or
nop
or
pop
leave
arpl
mov
cmc
nop
sub
jno
and
xchg
hlt
push
and
roll
jb
dec
mov
mov
add
lods
mov
daa
mov
mov
andb
adc
jmp
pop
pop
pusha
loop
cwtl
or
mov
adc
xchg
in
sub
rorb
mov
and
aaa
push
in
push
jge
or
mov
pop
cld
out
and
and
mov
sbb
push
or
js
ret
ljmp
insb
xor
je
or
sbb
mov
pop
push
shlb
xchg
popf
xchg
or
push
aad
dec
jb
lock
mov
lods
pop
pop
in
xor
adc
add
js
daa
mov
fsubrl
pop
push
loope
in
ss
adcl
jp
jl
sub
bound
leave
and
xchg
mov
or
sbb
fs
or
mov
scas
dec
push
xchg
pushf
insb
push
push
xor
xchg
push
mov
jg
fdiv
mov
das
xor
mov
push
div
mov
mov
cwtl
pop
push
push
cltd
int3
push
add
add
mov
adc
pop
outsb
add
add
nop
insb
jo
aaa
inc
xor
pop
flds
lods
fs
jmp
jo
add
dec
pop
ret
mov
pop
push
cmp
arpl
xor
sti
sub
and
xchg
dec
sbb
inc
add
pop
add
mov
loopne
jno
dec
je
xor
pop
push
cmp
shrl
cmp
push
add
lret
dec
out
mov
int3
xor
mov
nop
sub
push
mov
cmp
pop
add
mov
mov
aam
mov
xchg
mov
repz
pop
xor
xchg
inc
pop
xor
xor
adc
pop
adc
outsb
popa
xor
nop
dec
sub
push
xchg
test
add
mov
xor
sbb
ret
pop
jmp
dec
fidivl
loopne
dec
les
lfs
lret
sub
push
mov
jo
inc
sahf
add
add
adc
pushl
xor
or
mov
xchg
js
decl
rorb
mov
cmp
cmp
out
dec
ss
push
lock
or
je
inc
iret
push
and
cmpsl
cmp
repnz
cmpsb
test
adc
sub
sarl
aam
jo
insb
push
imul
xchg
inc
aas
fildll
bound
adc
dec
cwtl
xchg
pushf
inc
dec
mov
into
lcall
cmovnp
adc
dec
or
mov
cwtl
mov
nop
rcl
cmp
pop
ds
pop
sbb
add
in
dec
enter
mov
or
pop
xchg
dec
dec
add
pop
add
inc
push
shr
cltd
sub
push
test
lahf
test
or
push
js
sbb
inc
jmp
clc
lret
xchg
out
orb
adc
adc
or
fsubs
adc
ss
xlat
fsubrl
mov
inc
jg
out
push
aam
int3
xchg
jns
popa
adc
mov
add
flds
and
sbb
pop
pop
add
inc
popa
xchg
sub
push
imul
mov
xor
iret
rclb
das
bound
mov
pop
and
aam
inc
xlat
sbb
imul
es
cmp
mov
sbb
loop
push
pop
mov
jne
or
lds
pop
insb
or
in
into
push
sub
jno
pop
andl
jbe
pop
or
mov
and
sbb
dec
btr
inc
add
pmulhuw
add
add
jb
outsl
push
popf
ret
repz
jge
add
pop
fistpll
jae
push
or
sub
js
dec
and
cmpsl
lahf
insb
int3
sub
lods
outsb
iret
push
xchg
pop
sbb
mov
jo
sub
push
xchg
sbb
cmp
sbb
cmovs
dec
lds
shlb
push
pop
nop
stos
psllw
jo
or
cmpsb
ljmp
jp
rcrl
outsl
push
sbb
data16
fstpl
adc
fcoms
dec
or
jb
push
popa
pusha
subb
and
mov
adc
out
imul
ljmp
xchg
out
dec
pop
pop
loopne
lea
xchg
arpl
cmpsb
adc
xor
popa
dec
pop
push
adcb
loopne
js
fsubrs
and
jno
inc
leave
shl
add
and
pop
xchg
roll
inc
stc
cmp
popa
push
or
decb
enter
inc
xchg
test
push
hlt
lock
stos
mov
sbb
mov
mov
add
scas
push
adc
lea
or
pop
sbb
add
adc
loopne
push
sub
in
add
add
scas
pop
fdivrs
inc
orl
cltd
and
pop
xchg
inc
ds
in
sub
lock
pop
leave
mov
jle
or
testl
mov
les
out
dec
decl
stos
sub
loopne
sarb
jg
pop
or
movsl
test
mov
cmp
fnstcw
loopne
push
popa
test
and
loope
fimuls
test
jge
cmp
call
cmp
mov
clc
movsb
or
pop
mov
in
mov
push
jg
and
dec
fcoms
and
add
ret
push
jns
and
out
addb
push
pop
or
push
cmpsb
popa
pusha
adc
loope
mov
adc
and
cld
xchg
dec
in
adc
sub
sbb
arpl
add
add
loope
daa
enter
inc
loopne
xor
push
ret
add
xor
inc
mov
adc
push
cmp
mov
push
mov
xor
push
mov
sub
adc
and
daa
ljmp
dec
int
test
jns
test
add
movsb
jb
hlt
pop
adc
or
xchg
xchg
mov
sub
shlb
pop
mov
call
push
lods
or
imul
cwtl
outsb
or
je
mov
int3
dec
cmp
adc
adc
jns
push
push
jb
mov
test
mov
xor
enter
dec
xlat
jnp
mov
cvttps2pi
jbe
cmp
aas
cmp
pop
inc
adc
jp
sbb
or
xchg
ds
sbb
push
push
lds
sbb
lea
xor
cmp
add
popf
hlt
adc
cmpsl
int3
clc
push
xor
stos
push
dec
and
shr
movzbl
lods
outsl
fisttpl
adc
push
push
rcll
push
hlt
dec
sbb
lea
rorl
cmp
dec
push
push
aas
lds
dec
fistl
xor
dec
mov
loop
outsl
and
mov
out
sbb
add
das
add
jno
pusha
sbb
sub
lea
nop
sub
push
sahf
pusha
jnp
mov
int3
mov
or
fldt
jne
lahf
jno
pop
aam
push
mov
mov
fs
jle
addb
adc
iret
and
cs
std
insl
push
push
lock
or
in
lcall
mov
jmp
lcall
jg
popa
jne
ds
and
mov
push
or
xor
push
push
inc
inc
dec
sbb
cltd
pop
dec
mov
sahf
jno
loope
push
xchg
sbb
rclb
push
and
inc
dec
push
push
cmp
shlb
jns
aaa
xor
pop
aad
pop
arpl
addr16
bound
inc
xchg
or
and
es
inc
fisttps
pop
rcl
push
mov
xor
dec
or
adc
in
and
push
push
and
cmp
adc
or
insb
dec
hlt
jg
and
jne
push
icebp
lock
jge
out
pop
dec
mov
add
jmp
daa
aam
loop
cmpsb
xor
pop
outsb
stos
es
filds
clc
outsl
ret
lea
je
test
minps
je
scas
cmp
inc
gs
loopne
icebp
inc
sub
outsb
mov
sub
cli
lods
faddl
jo
ds
jb
add
push
bound
push
sbb
xlat
test
filds
stc
sub
inc
cmp
out
xor
inc
cmp
add
adcl
adc
call
xor
add
or
or
push
xchg
push
lock
loop
fbstp
mov
mov
dec
jg
mov
in
adc
xchg
sbb
push
icebp
pop
cmpsb
ljmp
cwtl
cli
jno
into
xor
mov
inc
mov
or
jp
dec
daa
repz
add
ret
shll
leave
icebp
xor
adcb
faddl
andb
fcomps
icebp
cs
push
mov
jp
call
dec
hlt
sub
jecxz
arpl
pop
and
push
mov
jge
stc
or
outsl
mov
lea
push
lea
push
inc
push
jmp
outsb
loope
cmp
leave
cmp
movb
adc
xchg
adc
sub
das
cltd
push
enter
adc
jb
adc
enter
cmp
sub
jbe
leave
js
mov
pusha
xor
addl
shlb
mov
ds
and
pop
nop
fwait
pop
mov
imul
sub
aaa
push
jecxz
pop
or
pushf
es
movsb
adc
sub
cld
inc
pop
jnp
fistpl
inc
ss
or
aam
cld
push
xor
or
lock
mov
or
dec
jns
mov
cld
repz
es
adc
jns
mov
ret
cmp
hlt
cwtl
pop
mov
lods
stos
push
or
cwtl
js
sarl
hlt
in
hlt
lods
fsubr
ret
jae
jg
cmpb
jne
and
dec
xor
in
mov
or
or
iret
adcl
lods
divl
jl
mov
cmpsl
mov
push
add
add
aam
fld1
inc
or
test
xor
adc
imul
xchg
adc
mov
test
lret
int3
icebp
sbb
push
pop
loope
jo
aaa
xor
shl
dec
cld
pop
push
add
add
add
push
lret
mov
hlt
mov
sahf
mov
andb
mov
popf
mov
sbb
movsl
movb
adc
or
pop
and
or
cmpsl
sbb
shrl
pop
push
xchg
and
sbb
adcl
xor
xor
cmpsl
or
mov
loope
jmp
mov
xchg
or
loope
lcall
xchg
call
mov
push
in
iret
pop
fcoms
dec
jecxz
sbb
dec
xor
mov
lods
test
lods
int
lock
pop
jmp
incb
into
add
rolb
mov
sbb
and
or
add
lods
mov
nop
out
mov
inc
cs
jns
dec
push
dec
add
push
add
adc
pop
into
adc
jge
fsts
push
jnp
sbb
arpl
stos
add
mov
inc
sub
push
push
sahf
pop
xor
data16
adc
fcomi
push
push
ds
push
push
or
push
es
and
enter
sarb
jae
push
xchg
mov
pop
inc
sbb
lret
inc
hlt
push
inc
adc
xchg
cs
inc
sbb
adc
sub
daa
xchg
mov
sub
xchg
cmpsl
inc
pop
adcb
xchg
xchg
pop
loope
jp
or
es
data16
pop
inc
mov
mov
mov
movsb
dec
js
pop
and
xor
lret
mov
rorl
vpcmpeqb
pop
int
mov
push
rolb
xchg
sbb
or
pop
out
push
test
inc
mov
adc
and
push
mov
fists
or
inc
jecxz
das
jne
cmpl
add
scas
aaa
bound
dec
or
sahf
test
movsb
rcr
and
lea
sbb
mov
push
or
or
nop
mov
pop
fdivp
sub
inc
add
add
mov
add
pop
cmpsl
push
clc
mov
sbb
fs
outsl
dec
or
dec
loopne
jne
sbb
and
xchg
mov
dec
icebp
adc
and
pushf
xor
and
imul
sarb
in
cmp
repnz
and
enter
adcl
shlb
adc
pop
fidivs
jo
jno
fadds
cmp
inc
mov
mov
js
push
xchg
xorb
or
sub
sbb
enter
mov
bnd
shr
lret
push
cwtl
iret
inc
cmp
mov
mov
sub
test
sbb
mov
cmpb
outsl
inc
pop
xor
test
mov
and
sub
add
data16
fnstcw
roll
or
leave
aad
push
ljmp
cmp
sub
sbb
add
add
push
fdivrl
xlat
mov
push
daa
push
jmp
add
mov
cmp
sahf
addl
sbb
sbb
jb
adc
ret
adc
and
les
inc
push
jle
lock
lret
cmp
repnz
mov
or
jb
jl
and
push
mov
add
add
into
sbb
ret
or
sbb
add
add
pop
inc
stos
addl
test
xchg
fsubrl
cltd
cmp
push
xchg
lret
pop
push
dec
cwtl
pop
mov
xchg
push
sti
push
rcl
rcll
gs
imul
and
mov
icebp
dec
adc
inc
mov
or
mov
jne
mov
dec
jne
add
stc
pop
sub
inc
in
add
pop
adc
dec
push
xchg
ja
aam
fsubrl
push
dec
aad
or
xchg
adc
mov
sbb
adcl
mov
shlb
xchg
add
js
movups
push
push
jno
ret
pop
pop
mov
aam
inc
sahf
push
loop
xor
xchg
add
dec
scas
dec
pcmpgtb
mov
sbb
sbb
stc
xor
fiadds
add
lret
orb
or
add
add
enter
or
jmp
rcrb
adc
or
mov
adc
loope
leave
xchg
ja
mov
inc
push
push
test
push
imul
push
mov
push
push
sbb
addb
push
popa
add
mov
dec
and
pop
push
add
clc
aam
clc
lea
pop
cmpl
xor
xchg
incl
dec
lods
sbb
xorl
jg
mov
push
jnp
lods
mov
and
mov
test
dec
pop
add
or
cmpl
push
movsl
call
scas
test
push
or
xchg
mov
adc
or
add
push
push
aas
push
push
inc
sbb
adcl
push
xor
aam
setno
test
inc
fcoms
sarb
cmpsl
jbe
push
fsubl
out
insl
sub
icebp
xchg
pop
sarb
loopne
pop
xorl
lea
and
mov
push
lret
leave
dec
aam
dec
sbb
addr16
xchg
cmpsb
fs
push
loop
sub
fldpi
adc
sbb
ret
lock
or
pop
loopne
mov
pop
int3
mov
pop
mov
das
cmp
out
add
push
sar
int3
mov
inc
jb
add
mov
enter
aas
push
push
push
lock
std
cli
xchg
sbb
push
jle
mov
pop
sub
nop
hlt
loope
and
push
mov
pop
push
int
push
mov
imul
icebp
sbb
bound
add
dec
adc
xor
ret
add
adcb
jmp
fsubl
jne
lods
rol
pop
or
movsl
mov
inc
loopne
imulb
push
fxch
xchg
je
rclb
xchg
push
sbb
repz
stos
lock
in
mov
stos
push
leave
sbb
cmp
je
cwtl
adc
nop
or
sbb
pop
mov
mov
call
push
push
cmpsl
call
nop
loopne
add
pop
sbb
jge
loope
fs
add
lea
cmp
jne
cltd
xor
aaa
iret
push
xor
mov
lahf
test
aas
rcrb
xchg
dec
mov
add
cs
push
push
and
popa
mov
sbb
dec
pop
mov
adc
pop
js
push
fmull
jecxz
lock
mov
cmp
test
hlt
lret
movsb
cmp
adc
test
or
xchg
mov
mov
and
mov
cmp
je
inc
add
cmp
jl
jmp
and
loopne
jge
cmpb
cli
cmc
dec
xor
add
or
pop
xor
sbb
push
cmp
xor
mov
lods
pusha
or
add
testb
inc
addb
sbbb
movb
cltd
xchg
cmp
push
xchg
xchg
sub
dec
mov
aam
adcb
stos
mov
sub
aam
add
mov
imul
in
fiaddl
in
push
sbb
aam
cmpsb
cmpsl
ret
xchg
or
insb
lea
add
das
aam
clc
lock
cmpl
push
mov
and
sub
je
mov
mov
fs
mov
or
inc
repnz
adc
add
sub
sub
push
xchg
add
shlb
mov
call
jge
mov
negl
in
push
and
sub
mov
add
mov
adc
data16
push
mov
in
movsl
dec
call
imul
loopne
shlb
loopne
test
mov
clc
sub
cltd
lock
cltd
mov
and
xor
mov
dec
sub
pop
push
pop
inc
mov
adc
push
and
adc
push
mov
push
or
inc
add
in
cmp
sbb
sbb
dec
mov
popf
cmp
push
cs
add
movsl
dec
mov
shlb
stos
inc
mov
sbb
sbb
dec
stos
inc
ret
btr
leave
ja
icebp
notb
test
popa
cmpsl
arpl
and
add
and
orl
jo
cmp
sbb
loopne
lods
int3
sub
jnp
xchg
pop
push
and
shll
lods
nop
xchg
and
mov
and
adc
adc
test
jl
adc
imul
cli
test
imul
imul
inc
rclb
and
add
xchg
push
cmp
inc
js
dec
fwait
and
xchg
and
ljmp
sbb
mov
stos
xchg
xchg
xchg
and
add
push
and
and
movsl
mov
sub
jg
sub
inc
cmp
or
cmp
push
xor
imul
jns
mov
cmp
ficoms
ret
adc
mov
sbb
or
add
nop
and
lods
or
mov
jne
cmp
jae
add
cmp
jae
or
popf
lods
out
cli
jmp
xor
test
cmp
sub
push
shlb
push
aam
mov
xor
and
push
mov
pop
call
es
hlt
dec
adc
mov
cli
push
xor
cmp
xchg
mov
mov
jle
call
and
jmp
add
jl
pop
ds
sti
mov
mov
mov
push
sbb
pop
hlt
sbb
pop
jl
jl
fs
cmp
push
movb
add
mov
push
repnz
pop
xor
cmp
xor
mov
push
and
clc
pop
out
inc
add
xchg
dec
or
test
icebp
add
inc
mov
sarb
push
aas
mov
sub
mov
push
jg
and
xor
xchg
sbb
xor
and
sub
dec
or
popf
inc
cmp
das
inc
add
mov
add
cmp
push
orl
das
add
inc
cmc
sub
add
lds
inc
sbb
mov
in
fistps
mov
sbb
std
and
js
data16
dec
or
inc
adc
mov
iret
cmp
jns
push
inc
cmpsb
inc
pop
or
insl
push
jmp
or
mov
sbb
xor
mov
into
sti
lds
push
or
aas
aad
fimuls
gs
call
push
call
ret
add
or
dec
or
pop
add
mov
cmp
pop
jbe
outsb
mov
pop
jge
mov
rorl
stos
andps
push
leave
xor
repnz
adc
mov
add
xchg
ret
adc
roll
das
mov
scas
sqrtps
inc
push
or
or
sub
sub
in
mov
jbe
cmp
mov
or
imul
sub
push
pop
jmp
cmpsl
adcl
or
mov
inc
lock
and
or
movsb
jge
add
cmpsl
jns
mov
inc
roll
inc
es
inc
in
pop
out
rolb
mov
inc
sub
and
mov
cs
sbb
sbb
add
sbb
popa
and
dec
adc
push
enter
mov
mov
and
mov
loopne
in
jg
xor
mov
les
loope
jo
in
lret
mov
mov
jle
mov
dec
mov
les
xor
ret
ljmp
xor
scas
dec
push
arpl
addl
jne
fmull
fldenv
pop
or
sbb
xchg
inc
mov
je
push
adc
repnz
adc
adc
pusha
pop
and
mov
insb
fistl
daa
movsb
ret
xor
add
jle
or
or
xor
push
sbb
jb
dec
fsubrl
cmc
inc
push
test
xchg
mov
mov
sti
sbb
clc
sub
cmp
push
dec
add
cmp
leave
jae
and
sub
xchg
cmp
xor
das
cmp
xor
dec
pop
sbb
dec
es
fbld
jb
add
push
test
push
ret
add
xchg
pop
daa
add
add
test
add
add
dec
add
sbb
inc
sub
lret
pop
sub
xor
or
xchg
add
cmp
add
inc
sub
inc
or
push
push
dec
mov
push
push
adc
insb
push
jo
xchg
into
sar
add
sub
mov
adc
sahf
mov
mov
xchg
aas
xchg
xor
xor
inc
enter
mov
imul
pop
push
or
cmp
dec
adc
sub
pop
cmpb
add
pop
mov
inc
sbb
inc
andl
mov
pop
push
and
sti
cmp
and
leave
or
jle
mov
adcb
ret
pop
and
pop
inc
lea
jecxz
sbb
cmp
push
push
sbb
stos
movsb
jmp
shrb
int3
movsb
mov
adc
and
sbb
and
nop
pop
or
lea
add
mov
or
insl
test
cmovbe
int
rorb
inc
int
rorb
inc
or
rorb
and
xor
push
and
add
or
sbb
adc
rorb
and
or
adc
sub
adc
movsl
adc
aaa
add
and
cmp
adc
add
sbb
lea
in
jge
popa
or
mov
call
add
cmpsb
sbb
roll
adc
add
inc
push
fs
sbb
daa
cmpsb
and
out
pop
loope
adc
pop
jne
push
jo
mov
push
popa
sbb
dec
push
adc
arpl
mov
push
in
mov
adc
cmpsl
adc
lcall
or
dec
sub
or
sbb
sbb
push
add
inc
aad
push
iret
cmp
fs
mov
cmp
xor
or
and
mov
add
mov
aam
call
fiadds
push
je
push
sbb
pop
lods
adc
xor
adc
adc
sbb
pusha
push
mov
push
dec
sbb
and
and
add
pop
sub
aad
sbb
inc
add
scas
pop
add
int
test
movsb
clc
mov
xor
je
lret
loope
mov
mov
mov
lea
sub
stos
mov
rcrl
pop
mov
test
or
adc
xor
cmp
cmp
inc
push
cmp
dec
pop
dec
fwait
test
push
mov
mov
cmp
push
ljmp
jbe
das
or
pop
lods
fsubp
test
ret
jne
ret
insb
and
loopne
fs
or
and
sub
xchg
push
hlt
jne
push
jae
mov
jmp
cmp
sbb
xchg
cld
add
inc
ficoms
mov
push
hlt
aam
jns
or
xchg
sbb
cld
xor
je
push
sbb
and
push
push
addb
mov
mov
adc
mov
cmp
add
iret
push
jmp
mov
loope
sahf
mov
cwtl
jle
jmp
push
stos
adc
sub
inc
and
push
sub
add
inc
cmc
mov
mov
or
push
inc
pop
test
cmp
clc
int3
and
bound
sub
push
aaa
jnp
xor
pop
fnstsw
xchg
mov
lods
adc
hlt
andl
adc
and
sbb
push
mov
std
inc
cwtl
dec
push
clc
add
or
adc
inc
aas
and
cmp
aam
mov
daa
or
mov
add
jo
cs
or
push
pop
mov
xchg
mov
inc
mov
cmp
pushf
pusha
push
ljmp
adc
add
push
pop
push
nop
sub
outsl
and
push
cmp
inc
sub
cmpl
xchg
stos
cmpsb
and
add
and
fidivrl
add
xchg
mov
push
push
test
testb
dec
in
fstl
push
aam
lock
test
mov
fisttps
cmp
mov
cmp
out
dec
fcoml
lock
inc
loopne
dec
push
pop
std
nop
clc
push
hlt
push
loopne
incl
inc
cmp
jmp
in
push
xchg
ret
xor
sub
push
pop
in
push
pop
cmpsl
jns
mov
or
arpl
jne
mov
out
inc
or
mov
and
or
push
andl
int
test
mov
call
inc
add
addr16
stos
pop
xor
push
cs
add
adc
lret
rclb
sub
mov
movsl
filds
push
jmp
pop
push
pop
lea
mov
insl
and
sub
or
adc
fadd
xchg
fmull
mov
insb
mov
jo
mov
ljmp
add
adc
cmp
push
sarb
xchg
cmp
dec
jl
jb
orl
pop
xlat
add
mov
adc
mov
push
pushl
add
jmp
cmp
jge
jae
ljmp
sti
jmp
mov
add
dec
lea
orb
sbb
in
loop
adc
xor
es
add
xchg
sbb
pop
ds
jecxz
lea
push
sub
xchg
shll
or
add
rcrl
adc
xchg
jo
and
add
aaa
add
add
das
push
aad
fwait
call
or
push
test
or
push
cmp
jo
xchg
daa
adcl
add
or
or
cmp
xor
or
rolb
and
cmp
adc
or
sub
shlb
xor
pushw
icebp
sub
push
and
and
testb
mov
add
pop
and
sbbb
jo
and
mov
dec
xor
mov
add
cmp
or
data16
int3
add
std
imul
jl
lcall
sub
sbb
sbb
cmp
sub
cmp
lock
test
jg
mov
movb
shll
or
adc
pusha
fldl
dec
adc
add
cmp
pusha
cmp
push
pop
push
jl
jl
pop
xor
into
pop
daa
ret
loopne
jbe
ret
sub
pop
adc
xchg
mov
sub
mov
mov
nop
sbb
adc
mov
inc
loop
dec
das
aaa
ret
xor
jo
lret
mov
repz
adcl
les
gs
or
sarb
sub
lcall
movl
je
ds
mov
fldl
inc
adc
ja
or
dec
mov
adc
pop
adc
stos
mov
push
fstps
or
adc
es
dec
push
cs
sub
dec
add
inc
test
adc
sub
arpl
adc
icebp
push
and
push
sbb
nop
sub
sti
pop
xorb
cmp
jl
mov
and
mov
mov
sbb
inc
dec
insl
xchg
hlt
outsl
aam
xchg
incb
call
add
xchg
stc
pop
repnz
nop
push
sbb
mov
je
jo
add
pop
push
outsb
push
test
cld
stos
aad
push
inc
push
lea
mov
jecxz
dec
push
pop
jg
mov
sub
or
lea
sahf
dec
push
push
mov
and
xor
bound
mov
jmp
xchg
lds
or
push
add
push
xor
mov
push
jl
paddd
pop
ret
add
xchg
or
cmp
mov
shr
dec
loope
hlt
adc
mov
sub
sub
sbb
sub
sub
push
movsl
add
mov
and
add
popa
xor
add
jge
add
rcrb
outsb
push
gs
push
xchg
fcoms
dec
push
jnp
cld
sti
adcb
push
mov
push
and
pushf
jl
mov
mov
add
xchg
sub
cmp
dec
cmp
jne
push
push
adc
jmp
lea
sbb
seto
xor
or
pop
cmpsl
or
pusha
inc
mov
mov
push
and
mov
sub
inc
sub
xchg
dec
dec
les
orl
xor
leave
inc
cmp
xor
js
sbb
push
xchg
adc
add
mov
sub
sbb
stos
xor
or
cwtl
add
call
stc
mov
pop
in
mov
xchg
xor
adc
sub
mov
dec
or
fs
movsb
inc
sbb
jne
pushf
jno
adc
pop
clc
mov
mov
push
pop
push
add
xor
sub
inc
jb
adcb
test
ret
xchg
cmpsl
rcr
cmp
xor
lock
ret
cli
sbb
mov
es
mov
rorl
xor
mov
mov
loope
cli
and
mov
xor
das
test
out
dec
fwait
test
stc
cld
sbb
sbb
push
push
test
fcompl
or
shr
outsl
aam
and
cmp
mov
je
or
mov
xchg
cli
movsb
nop
mov
clc
push
movsb
pop
in
mov
or
andl
push
inc
pop
mov
dec
or
lret
jne
pop
das
loope
xchg
and
scas
add
mov
push
push
jmp
sti
decl
adc
orl
mov
ret
js
push
sub
pop
mov
and
mov
sub
bound
sub
sbb
mov
getsec
sbb
adc
ss
pop
and
jns
add
mov
add
xchg
mov
and
adc
aaa
adc
in
adc
push
xchg
add
and
xchg
lret
addl
mov
push
dec
push
jle
cmp
fidivrs
movsb
sub
mov
jl
int3
insl
pop
dec
or
cltd
inc
pusha
or
fs
or
mov
js
fs
jb
inc
cmp
pop
push
xchg
fs
sbb
add
pop
push
adc
sbb
mov
bound
lret
cmpsl
int
sbb
cmpl
iret
lds
fstl
cmc
adc
mov
movsl
mov
repnz
dec
cmp
cmc
pop
test
aad
push
push
ror
inc
xchg
inc
nop
inc
cmp
and
push
outsl
inc
es
and
js
dec
xchg
es
jo
daa
xchg
push
sub
lahf
mov
enter
push
add
test
sar
sbb
rcrb
test
pop
fs
jl
sarl
add
add
clc
dec
inc
call
stos
cmpsl
test
xchg
inc
test
lcall
sbb
push
push
jno
pop
fldcw
xor
das
add
rcrb
ret
jno
add
adc
or
xchg
or
mov
inc
popf
les
mov
insl
mov
idivl
cld
icebp
insb
inc
test
sbb
add
xor
jne
mov
cs
ret
gs
mov
mov
lret
and
jecxz
push
ret
inc
dec
loope
xor
or
stc
fs
std
arpl
add
mov
add
sub
or
in
in
or
incb
mov
inc
lock
cmp
cmpsl
inc
inc
add
repnz
adc
aaa
rolb
movsb
fs
mov
push
in
pop
or
and
cmc
or
inc
mov
data16
sbb
mov
repz
push
or
arpl
in
jle
insl
xor
insb
dec
or
sub
daa
pop
add
sub
and
test
scas
dec
mov
dec
push
sbb
xchg
mov
int3
push
aam
cmp
and
aaa
adc
mov
xor
or
mov
fldcw
adc
xchg
test
loop
pushf
cmpsb
cmp
or
scas
cli
add
add
push
push
xchg
test
movsl
mov
push
dec
fidivrl
mov
or
mov
push
push
push
dec
sbb
sub
xchg
xchg
lock
pushf
jmp
and
test
pop
jo
call
inc
push
push
xor
int
or
stos
xchg
sbb
movzbl
fistpl
aaa
movsb
and
or
jecxz
xchg
pusha
inc
dec
pop
sub
js
mov
push
aad
push
or
pop
nop
and
or
or
cmp
dec
dec
inc
or
push
inc
add
inc
push
scas
and
and
push
testb
mov
and
fisttpll
mov
ss
dec
mov
sbb
inc
hlt
push
adc
xchg
mov
mov
movsb
addb
dec
cltd
imul
jns
mov
arpl
add
or
jmp
imulb
cmp
add
xchg
and
sbb
ds
scas
mov
push
lock
loope
mov
push
fidivs
sbb
dec
mov
mov
popf
loop
and
mov
sbb
adcb
mov
push
sub
adc
test
mov
xchg
and
or
inc
ljmp
push
pusha
int
add
rolb
mov
jmp
inc
lahf
inc
xchg
sub
pop
pop
jb
xor
or
sub
sub
xchg
sub
adc
shrb
ret
push
cld
push
lea
aad
adc
je
mov
ja
or
jb
scas
fsubrs
push
std
sub
cmp
jae
pop
push
shrb
xor
sbb
and
lock
cmp
push
lods
and
xor
cmp
aas
xchg
mov
and
cmp
leave
dec
add
subl
pop
mov
ret
out
cmp
sbb
and
sahf
or
sub
adc
or
sub
mov
pop
and
add
loope
add
pop
popf
xor
test
add
inc
xor
dec
add
cmpsb
jb
adc
sbb
add
cmp
scas
adc
and
push
sub
add
mov
ja
lea
pop
and
ljmp
xchg
pop
sahf
and
inc
push
into
icebp
add
cltd
out
fcomps
xchg
dec
add
add
inc
gs
jge
pop
xlat
inc
add
popf
dec
xor
cmp
nop
push
or
cmp
add
xor
andnps
jne
mov
pop
cmp
push
push
sbb
test
mov
sbb
ret
add
add
mov
mov
loop
js
decb
rorb
out
mov
or
mov
punpckldq
add
inc
and
lret
xchg
sbb
jge
inc
add
sbb
add
cmp
push
push
lret
sbb
push
sub
push
dec
nop
inc
or
icebp
inc
xor
adc
in
xor
add
scas
or
pop
cs
test
mov
sub
dec
cmp
jae
inc
push
push
sub
cmp
ds
lock
xchg
xor
add
call
jns
mov
fld
or
jne
pop
push
or
pop
lea
xchg
imul
xchg
jg
repnz
stos
movsb
cmpsl
inc
pop
adc
in
adc
cmp
jmp
mov
cltd
shrb
pop
pop
mov
mov
pop
mov
inc
or
and
xchg
jmp
sbb
movl
xor
in
xchg
sub
jle
je
add
xor
mov
rclb
test
sbb
outsb
nop
lods
bound
popa
test
aas
add
pop
mov
sub
iret
mov
mov
or
sbb
es
rclb
jo
or
es
shrb
das
push
enter
push
push
shrl
and
or
imul
lods
cmpsb
movsb
sub
test
sbb
jbe
push
and
push
js
lock
lahf
or
jo
jg
push
sub
or
sbbb
sbbb
mov
inc
mov
mov
adc
lahf
aam
and
pop
xor
incl
and
inc
cmp
pop
or
imul
add
xchg
dec
lret
sbb
loop
pop
jp
jae
mov
adc
mov
int
pusha
mov
js
push
cmp
jae
jge
loopne
mov
sbb
push
xchg
xchg
mov
jb
scas
das
sbb
push
mov
bt
mov
movl
or
popa
repnz
jg
jnp
in
sbb
and
je
and
mov
or
add
or
adc
in
rolb
cmp
jg
rcrl
xor
je
shll
dec
push
push
arpl
pop
xor
pop
xchg
push
push
ja
adc
or
sub
cmp
jl
and
mov
test
xchg
shll
divl
outsb
xchg
fsubl
add
and
adc
movsb
and
sub
clc
mov
mov
jns
cli
mov
inc
inc
pop
repz
and
insb
rcr
int
sti
push
pop
inc
dec
movsb
clc
adc
pop
dec
lea
rolb
test
sbbl
sbb
mov
ficoml
push
or
jl
sbb
js
xor
leave
xchg
mov
or
dec
xor
sarb
pusha
ret
push
dec
ficoml
inc
pop
add
mov
push
sbb
int
sub
nop
mov
inc
and
les
bound
dec
push
add
sub
and
mov
or
xor
adc
xlat
addb
xor
dec
or
pop
inc
cwtl
dec
pop
pop
addb
cltd
add
dec
shlb
add
adc
add
and
dec
cmp
push
mov
sub
movsb
fstpt
pop
inc
xor
mov
mov
cmpb
adc
add
mov
cmp
cmp
push
push
daa
dec
cmpsb
ss
adc
jle
pop
adc
jne
mov
mov
xor
out
adc
or
test
xchg
inc
xor
cmp
ja
bound
mov
jmp
and
mov
lea
mov
insb
jno,pt
fistpll
repnz
sti
jle
or
pop
hlt
jl
jle
adc
jmp
pop
orl
enter
xor
shlb
movsb
ret
repz
ret
xor
sahf
dec
lret
dec
outsl
clc
daa
in
cltd
mov
decl
das
leave
mov
inc
xor
dec
sbbl
or
mov
daa
sahf
dec
add
movsb
dec
adc
mov
aad
adc
loopne
push
cmp
or
or
add
vmread
call
pcmpeqb
jb
adc
sub
pop
pop
adc
mov
and
and
cmp
shl
mov
inc
jne
xlat
test
fs
test
js
xchg
mov
inc
incl
repnz
cmp
mov
xchg
test
pop
sub
mov
jne
and
add
in
push
mov
and
arpl
adc
pop
call
push
lea
pop
or
ja
add
cmpb
jo
popa
mov
add
fisubs
xchg
push
cmp
fisttps
inc
mov
xor
sub
je
push
jne
lea
decl
mov
xor
scas
dec
inc
mov
icebp
icebp
xor
push
xchg
push
add
arpl
jo
lsl
insb
int
xor
push
sbb
pop
pop
sbbl
pop
adc
dec
outsb
pop
adc
lock
xorl
push
sbb
hlt
push
mov
xor
mov
rorb
jmp
mov
arpl
sbb
cld
mov
lea
add
cld
outsb
inc
inc
jle
lods
sbb
mov
inc
pop
add
mov
adc
lahf
xchg
mov
push
mov
sbb
xchg
push
ja
dec
mov
push
pushf
and
and
aaa
jl
loope
push
cmpsl
push
sbb
sub
pop
jge
mov
cmp
xchg
xor
cmp
int3
sti
sbb
pop
cmp
pop
inc
test
addb
mov
add
cs
fs
fs
dec
jge
lcall
jp
jnp
xchg
lret
sbb
push
sbb
pushf
mov
and
push
or
sub
mov
adc
inc
das
jo
je
and
insl
ljmp
jno
push
sbb
jmp
cltd
adc
int3
xor
push
adc
popf
xchg
les
jl
sbb
inc
call
and
lea
sbb
cltd
adc
xchg
popf
aam
add
lock
pop
inc
mov
mov
inc
or
in
shll
mov
jmp
cmp
or
push
dec
sti
dec
and
jl
stos
mov
fdivl
dec
adc
sub
incl
sbb
repz
pop
test
packsswb
lcall
pop
or
push
add
gs
into
outsl
stos
push
push
pusha
int3
and
and
pop
dec
add
repz
mov
inc
or
mov
inc
dec
push
gs
cmc
lea
jg
std
push
outsb
push
cmp
jbe
dec
lret
and
sbb
rcrb
nop
ja
cmp
push
push
and
cmc
add
cli
sbb
adc
jmp
pop
or
pusha
and
pop
sub
xchg
sbb
lcall
dec
cmp
dec
pop
hlt
jns
sbb
and
or
pshufw
mov
sub
push
cmp
jle
sub
xor
push
sahf
mov
repz
xchg
and
mov
fisttps
pop
push
xor
mov
pop
test
dec
cmp
add
sti
rcll
mov
mov
xlat
jno
xchg
push
mov
push
xchg
dec
bnd
push
sbb
adc
and
and
xor
inc
sbb
sbb
or
mov
imul
sbb
pushf
nop
ret
dec
push
std
inc
sbb
es
cmc
cld
mov
das
dec
or
inc
inc
add
adc
push
push
je
adc
and
jg
scas
imul
fadds
add
lcall
push
jmp
cmp
dec
or
push
jno
xor
xor
hlt
push
enter
icebp
enter
scas
aad
pop
dec
rolb
loope
loopne
and
testl
jne
xchg
shll
cmp
addr16
sbb
add
sub
cs
or
aad
fcmovbe
aad
in
push
dec
lods
xchg
or
push
xor
sbb
loope
outsb
das
cwtl
pop
sub
add
jnp
sub
jne
push
sbb
in
add
cmpl
or
inc
adc
and
mov
sub
mov
and
push
mov
lcall
and
push
fwait
push
push
sahf
movsb
sub
jb
and
mov
subl
stos
sbb
sub
or
mov
add
nop
addl
mov
jo
xchg
sbb
xor
adc
into
xor
and
xchg
add
sbb
fwait
push
inc
lret
pop
dec
adc
inc
cmp
fwait
adc
dec
dec
repnz
ljmp
add
fldl
inc
ret
in
xchg
sbb
and
cwtl
or
lods
mov
sub
push
sub
push
lods
xor
iret
les
push
push
push
loop
popa
sub
mov
xchg
push
sbb
push
xchg
dec
add
lret
int
xchg
mov
cli
and
push
cmp
sbb
xor
fmuls
add
jnp
cmp
js
arpl
mov
xchg
fidivrs
hlt
inc
mov
jge
scas
or
test
adc
and
add
cwtl
or
inc
sub
and
mov
add
imul
lcall
shrl
in
sub
cmp
sbb
mov
jo
and
pop
pusha
test
cmp
adc
scas
mov
or
mov
int
mov
adc
outsl
sbb
mov
sub
xor
and
sub
jno
mov
push
add
adc
dec
aam
mov
pusha
test
xchg
or
or
inc
inc
fnstenv
mov
or
push
outsb
fisttps
or
or
push
push
mov
pop
cwtl
adc
add
xor
dec
inc
add
push
jecxz
and
mov
push
sub
inc
or
jns
inc
mov
inc
and
nop
inc
arpl
andl
test
push
xor
cmp
jle
stc
push
fwait
cmp
popf
in
mov
adc
not
aam
jp
cli
mov
inc
pop
cwtl
sbb
jns
aaa
sbb
fistl
add
add
push
jge
dec
push
adc
xchg
stos
in
jp
or
dec
and
push
xor
add
push
adc
imul
adc
push
or
rorl
sbb
fmuls
add
cltd
in
or
adc
push
dec
xor
push
or
jle
enter
push
and
sub
push
movsb
outsb
inc
lret
sbb
mov
jns
or
jae
push
or
inc
mov
in
dec
xor
adc
lock
scas
insl
sbb
mov
jno
rolb
lcall
repnz
xchg
xor
movsb
sbb
test
pop
pop
shrb
loopne
lret
push
xrelease
mov
out
xor
js
push
imul
cmp
or
pop
push
in
in
mov
and
inc
xor
imul
js
dec
and
and
inc
cs
pusha
sbb
loopne
cld
mov
and
sbb
fcoml
push
mov
cmp
inc
insb
add
sbb
out
pop
or
mov
in
scas
xchg
or
out
test
mov
popf
shll
repnz
xchg
push
and
shlb
pusha
inc
cs
out
popa
add
insb
out
pusha
or
ret
shl
cltd
dec
out
xor
cmp
or
push
leave
dec
sbb
cmp
xchg
add
inc
and
nop
cmp
nop
enter
push
loopne
inc
push
sub
test
mov
sbb
mov
sbb
int
cmp
cmp
aam
push
cmpb
push
hlt
cmp
imul
int3
mov
or
repz
cmp
sbb
push
ret
and
movsl
sub
test
call
das
add
push
mov
add
push
add
push
inc
pop
push
pop
sub
xchg
add
xchg
adc
rcrb
call
hlt
push
add
push
adc
leave
push
fimull
adc
jns
jae
dec
pop
mov
add
mov
cs
aam
adc
dec
pop
mov
or
nop
sahf
add
mov
pop
test
inc
int3
dec
inc
fcoml
imul
inc
sub
sbb
lret
sahf
aam
xchg
inc
les
mov
mov
mov
loop
flds
pop
pop
sbb
cmpsb
jl
lcall
movsb
movsb
cs
adc
sub
das
popf
cmp
and
pushf
fmull
pop
inc
sub
add
aad
mov
inc
or
out
sbb
es
adc
cmp
dec
pop
inc
or
out
mov
mov
lods
shlb
inc
mov
mov
and
pop
cmp
dec
fdivs
push
iret
fstpl
outsb
push
or
mov
clc
xorb
cmp
insl
sbb
pop
sbb
dec
jnp
rorb
add
push
cmp
or
enter
jae
sahf
sbb
pop
and
pushf
cmpsl
scas
call
dec
xor
or
test
pop
and
xor
push
or
pop
push
inc
sub
xchg
or
add
adc
outsb
aas
adc
xor
mov
or
and
aaa
cltd
bound
adc
xor
enter
aam
push
jmp
mov
mov
adc
outsb
lods
pop
enter
es
inc
das
xchg
push
nop
loopne
pop
outsl
jns
cwtl
movsb
mov
push
xor
sbb
jns
push
mov
sbb
fcomp
sbb
xchg
sbb
push
xor
shlb
lret
stos
mov
push
in
xchg
sbb
in
push
add
add
mov
lcall
and
and
xchg
and
cltd
add
and
add
aam
es
sahf
daa
shrb
add
cltd
add
fcompl
test
enter
dec
mov
subl
add
cmc
jo
push
js
sbb
mov
fisttpll
jae
jmp
pop
mov
cs
pop
aaa
add
nop
std
inc
stos
test
jge
dec
pop
js
dec
in
pop
jne
mov
mov
test
sub
sub
or
mov
and
pop
mov
xor
xchg
mov
add
sub
cs
lea
adcb
loop
lods
jmp
cmp
sub
wrmsr
shrl
add
xor
push
js
sbb
or
xchg
pusha
xchg
test
cmpb
outsl
push
inc
loop
jle
jbe
les
xor
inc
rclb
xchg
push
push
push
mov
mov
mov
xlat
push
push
sub
dec
and
fidivs
or
loopne
lea
push
push
test
js
add
outsb
out
call
adc
adc
and
xor
jne
push
add
inc
xor
adc
sbb
push
push
fcoms
mov
mov
pop
lods
xorb
test
inc
jmp
push
aaa
or
cmp
pusha
jmp
es
cmp
sbb
inc
pop
aad
popa
lret
sahf
inc
shrb
adc
inc
inc
mov
lea
inc
cmp
dec
or
xchg
xchg
jns
inc
mov
in
ds
jmp
arpl
aas
data16
cmp
fcoms
cld
cld
movb
repz
add
inc
arpl
pusha
inc
push
adc
or
inc
roll
shlb
imul
cmpsb
dec
pop
xchg
push
sbb
or
out
adc
push
push
xor
fists
call
mov
ror
inc
pop
push
out
and
fadds
jns
and
mov
inc
rolb
sahf
or
add
movsb
cmp
cli
dec
cmp
test
test
or
jne
push
mov
js
pop
xchg
jecxz
push
aas
inc
cwtl
lea
sbb
addr16
push
inc
rolb
sbb
adc
inc
lods
dec
xchg
cmpl
scas
add
pusha
jp
xchg
out
adc
mov
addb
mov
push
push
scas
xor
or
inc
test
nop
ljmp
pop
xchg
sbb
sub
or
pop
sbbb
leave
in
and
test
xor
lods
pop
push
adc
adc
rorl
and
aam
mov
dec
push
cmp
cwtl
sub
orl
mov
sub
cmp
ljmp
test
out
loopne
or
dec
punpcklwd
xor
xor
sbb
dec
test
push
pop
and
dec
dec
aas
jo
xor
pop
pop
push
inc
xchg
fstpl
sbb
jno
outsb
or
sbb
mov
lock
pop
mov
jb
and
sub
sbb
inc
dec
int3
sbb
shll
xchg
mov
xchg
into
or
jl
clc
pop
push
and
or
lds
or
xchg
sub
and
pcmpgtw
adc
std
adc
adc
adc
or
fs
push
jl
rorl
push
cs
adc
or
push
push
and
or
dec
dec
rclb
xor
sub
ds
fldt
stos
push
in
loop
xchg
inc
lock
aaa
adc
xor
bound
punpckhbw
mov
enter
sbb
jmp
mov
jbe
cltd
push
mov
xchg
movsl
cmpsb
out
loopne
dec
addb
mov
xor
xchg
dec
push
and
push
cmp
mov
mov
add
push
xor
dec
add
push
push
cmpsb
cmp
pop
push
mov
sbb
pusha
adc
pop
dec
nop
mov
aas
or
xchg
jp
and
test
sbb
in
xor
pushf
js
mov
pop
pop
xor
push
fisubrl
mov
xchg
stos
and
pushf
jl
lcall
sbb
mov
and
test
push
aam
cmp
data16
stos
pop
and
iret
pop
pop
mov
lahf
pop
sub
fs
cmp
popf
xchg
fistpl
jo
or
and
cmpsb
push
out
sbb
incl
push
jmp
and
mov
int3
shrb
jecxz
xchg
aad
inc
inc
js
mov
push
mov
mov
xor
dec
pop
dec
int3
adc
dec
pusha
cmpsl
and
es
je
jns
in
jo
adc
insb
subb
cmpsb
xchg
xchg
sub
inc
mov
adc
rorb
sub
roll
or
scas
mov
inc
dec
adc
jae
dec
add
jb
mov
in
add
inc
addl
adc
int3
push
mov
test
inc
cwtl
dec
mov
dec
add
int3
adcb
insb
push
xor
pop
mov
mov
jo
push
push
imul
cld
xchg
and
js
dec
icebp
cmp
out
ds
jl
movsl
int
push
cmp
jae
fidivl
cmp
lret
flds
leave
xchg
sbb
pop
shl
xor
push
pop
cmp
jae
movsb
bound
mov
push
pop
dec
cmp
loope
mov
dec
jle
fnsave
mov
test
cmc
and
or
testl
lea
xchg
rcrb
iret
test
mov
mov
fsubrs
push
test
lea
xchg
cmp
and
xlat
sbb
cs
xchg
js
jo
je
jg
aaa
pop
or
gs
jmp
cwtl
or
sarl
jg
and
sub
jne
jo
push
inc
mov
inc
and
xchg
push
mov
inc
jmp
mov
bnd
mov
or
loope
sub
popf
jb
mov
push
mov
add
cmp
push
sahf
add
enter
push
shlb
mov
sbb
sub
mov
add
lock
pop
adc
pop
sbb
into
mov
orb
leave
add
inc
dec
enter
xchg
sbb
push
inc
shll
inc
addl
test
les
popa
jecxz
out
add
js
push
mov
sub
or
mov
bound
in
xor
shrl
sub
sti
mov
push
pop
enter
inc
lret
pushf
pop
xchg
mov
mov
push
mov
sbb
dec
push
inc
inc
lea
cld
xchg
mov
add
mov
bound
adc
and
mov
lret
sub
inc
sub
jl
inc
pushf
or
jg
dec
pusha
push
and
xor
sti
fildl
mov
or
in
cmp
mov
leave
fistps
sub
push
mov
les
xor
or
and
sbb
adc
cs
sbb
and
rolb
dec
test
jge
adc
sbb
pushf
nop
xchg
adc
add
add
rolb
or
dec
mov
movsl
cmp
fsubl
adc
das
lods
dec
pop
jno
sub
dec
leave
and
jo
push
insl
push
xorl
adc
cmpsb
mov
adc
and
aas
or
mov
dec
mov
movsl
xor
xlat
call
pop
imul
cli
inc
in
out
push
inc
cmp
inc
inc
cld
jnp
jae
mov
xchg
je
add
add
test
cmp
jl
add
enter
push
loope
dec
inc
imul
adc
xor
std
mov
and
add
push
ret
xor
or
mov
sarb
adc
adc
inc
add
lret
pop
sarl
push
sub
lret
imul
hlt
dec
mov
xchg
sub
mov
mov
sti
mov
out
add
sub
ja
adc
addps
enter
jb
mov
repnz
aam
mov
movsb
jg
adc
xorb
test
dec
and
pop
dec
push
aam
shl
fildll
ljmp
jne
mov
in
sbb
adc
or
add
arpl
pop
lods
imul
sbb
cmp
inc
lahf
sbb
mov
mov
adc
pop
xor
cmp
popa
and
imul
inc
xor
sub
and
add
push
pop
pop
pop
pusha
flds
adc
int3
dec
fs
jge
fwait
push
sub
mov
adc
pop
add
rclb
adc
xchg
xor
xor
add
pop
and
or
sub
test
push
sub
cld
cli
sbb
pop
add
add
dec
push
adc
inc
popf
ljmp
push
in
lods
mov
push
add
jb
shrb
jecxz
iret
mov
rcr
xchg
cld
xchg
sbb
adc
rol
test
in
mov
lds
adc
sarb
sub
push
insb
xor
nopl
xlat
hlt
fiadds
jbe
aad
pusha
cwtl
lock
pop
pop
pop
in
addl
push
mov
cmp
xchg
sbb
or
inc
push
cwtl
sub
adc
es
shlb
push
pop
push
push
inc
lock
mov
sub
mov
test
push
fistpl
fistpl
nop
ss
add
mov
mov
cmp
mov
sbb
xor
iret
inc
divb
sbb
xchg
mov
pop
add
test
dec
insb
add
mov
and
fdivl
outsb
loope
cld
pop
xchg
sbb
xchg
test
movsb
pop
testl
aaa
pop
dec
fwait
push
int3
push
outsb
jb
mov
inc
mov
or
mov
nop
loopne
sbb
lock
pushf
xchg
xor
add
stos
add
dec
push
dec
daa
mov
xchg
lods
addr16
sbb
sub
jb
scas
pop
push
mov
mov
jno
insb
movsb
mov
sbb
mov
inc
lods
push
js
daa
mov
or
pushf
out
dec
or
movsb
sub
out
inc
lea
fwait
add
push
sub
mov
adc
or
test
inc
add
in
jae
lock
inc
or
enter
call
push
das
xchg
and
add
push
inc
add
push
push
jp
dec
sub
pause
loop
sbb
pusha
push
sbb
mov
and
jl
addr16
jo
aas
add
mov
std
lcall
push
jne
cmp
je
cmp
je
cmp
je
cmp
je
imul
leave
cmp
sbb
jl
data16
jl
xchg
mov
dec
hlt
jne
in
inc
cmp
add
xchg
add
dec
shl
ret
pop
daa
mov
cmpb
sbb
stos
mov
test
dec
fisttps
movsb
arpl
data16
jo
push
dec
lcall
sub
and
sub
mov
orb
pop
insb
mov
repz
aam
push
call
aaa
cmpsb
jecxz
inc
js
push
adc
bound
jo
and
dec
cltd
add
jo
scas
jno
and
rcll
lock
xor
test
and
mov
pop
and
push
cmp
popf
jge
sbb
xchg
mov
movb
xor
jb
nop
push
lock
repz
pop
adc
les
imul
push
leave
gs
inc
cs
cltd
nop
or
aam
rcll
in
aam
in
sub
mov
jle
push
lock
mov
loopne
dec
dec
sbbl
pop
sbb
xor
xchg
dec
sbb
pusha
and
adc
pop
inc
sbb
sub
mov
aam
mov
push
cs
imul
mov
sbb
jns
mov
adc
sub
add
push
and
and
sub
adc
lock
or
mov
pop
pop
cmp
loope
clc
push
test
cs
gs
and
inc
xchg
push
sub
or
push
clc
lock
pop
imul
mov
stc
inc
sub
push
and
rcll
sbbl
mov
and
aaa
lcall
jne
xor
mov
jmp
imul
xchg
and
sbb
out
int3
mov
jmp
push
push
push
daa
dec
lea
lahf
xor
loope
mov
fcomps
mov
imul
stos
movsb
add
push
or
mov
add
jo
inc
fildll
pop
sbb
or
add
sbb
addl
aas
out
mov
bound
adc
imul
adc
adc
mov
xchg
push
rorb
adc
cmpsb
xchg
out
mov
or
inc
rorb
mov
adc
mov
dec
or
aam
js
pop
sbb
inc
aam
sub
adc
adc
inc
sub
aas
cmp
aaa
or
xor
mov
addb
rcl
and
jns
fucomi
sub
or
dec
cmp
inc
ret
ds
jge
and
jecxz
fiaddl
movb
jb
setge
xchg
inc
mov
mov
push
inc
add
repz
pop
jne
movsl
mov
and
pop
jae
mov
int
mov
je
mov
test
jne
dec
fcomp
push
dec
dec
imul
test
xchg
xchg
mov
push
push
ficompl
cmp
in
mov
cmp
repnz
cmc
inc
inc
cmp
jne
rorb
rclb
push
sbb
push
inc
add
cmp
cmpsl
std
mov
rorb
adc
push
mov
cli
cwtl
mov
and
dec
pop
ficoml
unpcklps
addl
cmp
ret
dec
call
fildll
test
fsubs
cmc
mov
pop
xor
dec
pop
psubusw
scas
sub
xor
and
jne
xchg
stc
jns
adc
cmp
push
adc
inc
and
adc
mov
add
jmp
call
pop
movl
pop
movsb
sub
mov
mov
lea
imul
cmp
push
addb
loopne
add
mov
xchg
rorl
test
push
cld
mov
adc
pop
rcrl
lds
test
sbb
pop
mov
mov
add
push
xor
add
cmc
movl
push
jo
movsb
cmp
decl
dec
ss
cmp
mov
xor
jg
lahf
adc
shrb
mov
movsb
ds
push
pop
and
mov
xlat
mov
rorb
fcomip
xorb
pop
sub
pop
or
fadd
xchg
mov
into
inc
cld
push
dec
nop
insl
inc
lea
icebp
sti
push
cmpsl
xchg
sub
inc
sbb
pop
cmpl
lock
add
add
xchg
in
dec
orl
and
push
push
inc
dec
add
rcrl
pop
ret
jl
or
mov
sub
push
shr
push
subl
stc
pop
dec
xor
push
add
push
outsb
insb
pushf
and
je
and
or
inc
ljmp
enter
mov
mov
add
mov
xchg
in
jge
jne
cmp
fildl
jne
jne
int3
jns
push
sbb
pop
xor
jp
pop
mov
nop
ret
and
scas
xor
iret
inc
mov
test
add
and
sbb
insb
sub
cmp
loope
pop
pop
out
lods
or
push
push
gs
xchg
xor
scas
lcall
inc
jb
inc
pop
lahf
and
xor
fs
js
je
popa
sbb
inc
mov
loopne
mov
dec
addr16
outsb
imul
pop
jo
js
inc
scas
mov
xchg
mov
roll
and
xlat
and
jg
test
loope
mov
enter
xchg
addb
and
push
mov
cmp
lods
cld
adc
push
pop
cmp
mov
push
rclb
adc
inc
inc
mov
mov
jae
push
stc
data16
pop
inc
jnp
faddl
jle
adc
test
ss
pop
xor
bound
lea
dec
adc
mov
sarl
daa
ss
icebp
push
push
in
sbb
add
mov
push
push
shrb
int3
dec
sbb
inc
adc
imul
cmp
push
or
add
fs
lea
and
or
lcall
por
mov
push
inc
add
mov
dec
aaa
pop
je
mov
inc
cmp
inc
add
pop
pop
insl
jns
shrb
xchg
sahf
jl
xor
je
out
jae
imul
icebp
icebp
movb
inc
sbb
btc
push
cwtl
push
cltd
adc
mov
cmc
sub
lods
inc
inc
addr16
add
dec
cmp
lcall
addr16
mov
lock
in
push
push
xchg
or
pop
and
arpl
add
add
or
sub
jb
cmp
orb
imul
add
push
iret
mov
out
testl
pop
jp
jo
and
jnp
sbb
pop
test
movsl
das
or
int3
shrl
push
pop
fnstsw
rcrb
rolb
push
xlat
pop
cmp
jns
test
mov
adc
test
je
mov
cmp
push
inc
stos
push
outsl
movsb
add
inc
add
mov
sbb
jbe
popf
or
aad
jne
pusha
je,pt
jle
sub
hlt
jg
fdivs
push
pop
or
mov
maxps
in
add
test
das
mov
push
xchg
push
enter
sarl
adc
inc
inc
dec
or
aam
das
push
inc
ljmp
push
and
mov
add
mov
je
gs
push
push
repz
inc
insb
adcb
or
add
add
mov
mov
inc
test
push
xor
adc
sbb
pop
outsb
adc
lock
mov
fildl
xchg
bound
arpl
dec
jo
or
divl
sbb
nop
or
andb
cmp
into
xor
or
lock
loopne
mov
cmpsl
in
mov
mov
inc
xor
and
pop
sub
imul
pop
jmp
push
add
cmp
add
mov
rclb
push
push
xchg
aam
sbb
cmp
mov
sub
xchg
cmpsl
add
xor
xor
pop
testl
daa
adc
imul
sub
adc
push
adc
cmp
push
cmp
in
add
mov
xor
cmpsl
add
xchg
inc
out
xchg
popa
mov
pop
sbb
dec
push
push
pop
cmp
jo
mov
dec
hlt
out
into
or
aas
fucomp
lcall
sub
push
pushf
xchg
scas
ds
aam
dec
or
mov
cmpsl
or
add
jge
xchg
adc
pop
in
or
adc
sbb
or
imul
push
add
pusha
push
or
add
cld
cmp
loopne
stos
push
push
sub
dec
sbb
push
add
pusha
ja
and
pop
ror
cmp
jl
add
and
xor
pop
xchg
jno
orb
and
mov
inc
cmp
test
ret
and
ret
stos
arpl
fldcw
pop
lods
icebp
fiadds
loopne
les
push
xorb
jecxz
aas
xchg
pushf
shll
icebp
dec
std
or
and
xor
ss
gs
mov
mov
stos
cmpsl
sub
add
sub
mov
and
shrl
or
and
sub
or
sbb
sbb
inc
ljmp
dec
push
jne
int
ljmp
cmp
jb
sub
jmp
push
dec
movzwl
dec
pop
cmpl
into
pop
jp
setl
movzbl
dec
mov
inc
in
jmp
push
push
push
mov
dec
add
ret
sub
sbbl
xor
movsb
push
pop
lods
mov
and
adc
push
cmp
mov
cmp
push
addl
in
dec
push
push
push
rorl
ret
push
ret
and
push
xor
lea
sahf
xor
or
sbb
nop
pop
inc
push
imul
imul
fisttpll
xor
sub
adc
xlat
pushf
sub
and
dec
push
mov
cmp
fs
and
inc
in
mov
mov
jp
mov
dec
add
jo
aas
aas
or
mov
mov
sbb
or
cmp
mov
inc
xchg
sub
adc
scas
add
add
or
sbbl
and
xchg
inc
scas
arpl
adc
push
pop
adc
rol
push
dec
push
push
mov
pusha
js
test
push
push
sarl
je
cmp
inc
add
sbb
rorl
shlb
jle
and
ret
jge
inc
test
mov
push
clc
inc
push
add
adc
inc
sbb
es
pop
enter
push
sbb
roll
mov
and
xor
mov
push
leave
xor
adc
pop
imul
add
and
adc
inc
pop
cwtl
fsubrs
mov
es
dec
add
cwtl
or
push
popf
push
sbb
mov
in
mov
adcb
inc
inc
mov
or
cmp
push
enter
arpl
subl
xchg
push
aas
and
pop
aaa
add
mov
dec
loop
rorl
or
sbb
jg
test
sti
sbb
xor
sti
xor
jl
faddp
out
aam
sbb
mov
adc
movsb
dec
lcall
adc
inc
pushf
pop
dec
je
sbb
out
fwait
pusha
fisttpl
inc
push
sbbb
or
ljmp
add
push
pop
add
dec
jbe
cld
cld
dec
cld
pop
sbb
add
push
push
push
lsl
mov
mov
add
adc
fsub
rorb
dec
jg
adc
xchg
dec
sbb
xlat
jmp
and
push
sub
adc
mov
and
cmp
mov
or
cli
add
fadd
mov
xorb
test
idiv
cmp
jle
lea
cmp
jl
and
fisttps
adc
mov
or
push
pop
inc
movsl
pusha
and
mov
xchg
inc
mov
mov
cmp
sbb
loop
push
or
and
aam
jne
and
cmpsb
jae
add
jmp
pop
xchg
sub
nop
negl
push
and
popf
es
sbb
sbb
arpl
andl
mov
add
dec
rol
aam
dec
inc
or
mov
and
push
ljmp
pusha
sub
push
jne
and
or
lock
decl
push
aad
xchg
and
or
movsb
push
nop
pop
adc
in
xchg
jae
cmp
push
or
andl
cmc
dec
adc
dec
popa
pushf
addl
mov
add
mov
incl
sub
inc
mov
cmp
dec
ss
cwtl
xchg
jge
sbb
lods
or
ds
xchg
pop
lret
scas
mov
push
mov
and
mov
pusha
xchg
jns
or
lea
mov
or
inc
or
mov
adc
das
jle
adc
shll
xchg
mov
fmul
mov
sbb
push
adc
push
push
inc
jg
adc
dec
sub
jne
sti
test
inc
int
xlat
jg
inc
aam
add
add
mov
xchg
pop
repz
push
enter
pop
pop
mov
jns
repnz
fsubs
push
aas
push
or
jp
lds
or
push
jp
adcl
sbb
xor
xchg
shrb
call
pop
das
adc
add
push
add
adc
cmc
mov
add
les
sub
inc
adc
pop
cmp
in
jns
mov
add
pushf
push
daa
pop
xchg
adc
inc
sbb
outsl
sub
or
pusha
and
sbb
push
inc
into
std
jo
sub
test
movsl
sub
dec
and
add
cmp
arpl
mov
dec
pop
je
push
xor
inc
or
fisttps
dec
jl
addb
xlat
cmp
mov
fsubs
add
xor
or
sub
add
dec
cmp
mov
and
dec
adc
add
sub
push
add
test
movsb
add
pop
dec
pop
mov
mov
dec
lods
dec
pop
je
or
sbb
mov
les
adc
test
jg
loopne,pn
daa
jg
push
jne
out
push
movsb
rol
cmpsl
jb
push
iret
xor
lea
cmpl
and
cmpl
test
cwtl
pop
xchg
adc
rol
xor
sbb
sbbb
inc
insl
push
rorb
in
xchg
sub
add
mov
add
or
pop
lahf
push
inc
sahf
cmp
xor
xchg
cmp
dec
mov
data16
xor
jl
sub
addr16
enter
xchg
push
inc
cmp
adc
aas
pushf
add
pop
cwtl
enter
movsb
add
jnp
dec
sub
mov
sarl
dec
roll
daa
enter
adcl
and
jb
cwtl
dec
push
add
xor
iret
inc
cmp
inc
aad
push
adc
nop
mov
adc
mov
dec
int
leave
pop
ds
pop
push
push
pop
call
enter
ds
cmpsl
pop
popa
mov
sub
dec
mov
aaa
inc
dec
sbb
and
or
push
mov
imul
mov
insb
push
lods
aad
or
js
push
cmp
jns
dec
jmp
add
mov
pop
sahf
push
xorl
xchg
jne
das
fnclex
test
jmp
sbb
in
dec
lea
xchg
mov
sub
sbb
add
and
inc
inc
leave
xor
cs
sub
insb
sbb
cmp
mov
sub
mov
push
fwait
and
fstpt
push
in
inc
out
pusha
push
add
and
sub
add
lcall
mov
lret
scas
hlt
and
je
push
pusha
icebp
insb
inc
gs
sahf
sub
movsb
shl
pop
and
mov
lods
stos
lahf
inc
cs
jo
pop
cltd
cmp
bound
adc
das
add
add
or
ffreep
add
nop
into
sbb
call
pop
jmp
xchg
jp
sub
sub
test
dec
add
push
sub
inc
mov
stos
sub
icebp
pop
inc
jecxz
cmp
push
push
out
mov
jle
mov
add
jne
inc
jp
pop
ret
jne
mov
dec
fstl
not
or
popa
add
push
lcall
push
add
cmp
mull
jl
je
test
jl
sbb
pop
hlt
push
push
repz
mov
xor
scas
sub
fnstsw
outsl
fisttps
clc
jle
dec
cmpb
dec
push
mov
mov
push
mov
sarb
mov
movzbl
push
push
out
add
dec
inc
div
test
or
pop
add
nop
sub
daa
lods
fistpll
dec
lret
fs
rclb
sub
add
inc
or
mov
lock
sub
icebp
mov
out
cwtl
inc
rcrl
or
sti
std
and
in
push
cmpsb
fldcw
scas
fcmovu
and
pop
ret
test
sbb
or
loopne
mov
in
sub
inc
rorl
sub
add
jo
ret
div
sub
mov
adc
pop
mov
insb
mov
out
xorb
sub
push
js
int3
or
or
pop
or
push
jmpw
mov
pusha
sub
fstl
sub
pusha
xor
test
mov
inc
andl
lock
jl
add
int
les
add
sub
push
aas
call
mov
nop
mov
and
xor
repnz
cmp
jb
pushf
push
shl
int
push
sbb
jle
icebp
ret
call
push
xor
mov
rclb
sub
mov
sub
stos
out
subb
mov
push
rclb
push
jge
pop
mov
sbb
adc
clc
or
and
shll
enter
mov
push
jl
adc
out
sahf
cwtl
jne
lods
inc
push
jp
jbe
mov
and
xor
pop
add
gs
mov
pusha
test
aas
cmp
inc
add
xor
add
mov
jae
mov
js
push
inc
push
xchg
push
movsl
mov
loop
pop
hlt
nop
mov
and
lret
daa
leave
sub
shlb
xor
rcll
inc
aas
loopne
lock
cmp
xor
mov
in
or
out
and
fiaddl
mov
mov
pop
xor
xor
jp
lea
bound
inc
mov
insb
jb
push
add
xor
dec
cmp
jnp
pop
pop
in
push
mov
push
fadds
or
popf
imul
mov
add
inc
fnstenv
push
fistpll
add
int
rolb
mov
adc
decb
inc
cmp
or
xchg
dec
pusha
loope
stc
push
aad
jle
jne
inc
and
adc
push
pop
loope
pop
inc
sub
cli
add
push
push
xchg
rclb
sub
test
inc
shll
push
and
rol
loop
sarl
hlt
int3
cs
sub
pushf
imul
mov
stos
mov
out
push
mov
jbe
data16
std
dec
sub
push
clc
adc
dec
sbb
mov
push
movsb
mov
dec
or
cmpsb
push
jge
hlt
mov
lcall
clc
cmp
jbe
shrb
dec
pop
or
out
xlat
mov
inc
mov
jnp
and
push
movsb
sub
or
mov
sub
sbb
jge
xchg
inc
mov
and
mov
pop
mov
pop
out
fildl
std
cmpsl
lret
sbb
flds
flds
cmp
loop
pop
dec
les
fmulp
lret
leave
std
lahf
dec
iret
add
sbb
sub
fmuls
jno
aad
push
sbb
sbb
test
adc
fdecstp
xor
cli
push
adc
push
jns
pop
hlt
add
pop
jae
inc
movl
mov
or
cmp
fstpl
xchg
cmp
jne
pop
cmp
stos
mov
or
dec
or
ljmp
jb
cmp
jg
jl
cmp
adc
sarb
fldl
aaa
sub
inc
jecxz
dec
add
fwait
fs
add
inc
cmp
call
pusha
call
jge
mov
jmp
mov
popf
push
cltd
jp
shrb
lret
sarb
xor
add
sbb
cwtl
add
lcall
lea
iret
jo
enter
inc
or
clc
add
adc
push
push
adc
xchg
cwtl
js
cli
push
push
and
sbb
adc
mov
add
jo
push
es
xor
xor
xchg
cmp
mov
push
call
mov
cmp
xchg
mov
in
dec
mov
and
add
and
inc
lea
fs
fmull
adc
inc
or
mov
lret
leave
lock
shrl
cmp
pop
ret
push
punpckhdq
pop
dec
xchg
icebp
insb
js
lock
adc
push
test
aaa
xchg
cmp
lret
pop
je
push
push
mov
stos
push
sub
loop
mov
or
loop
push
lret
xchg
cld
lds
adc
mov
jae
test
xor
push
add
xor
jg
mov
loopne
adc
mov
and
pop
pop
jmp
fistps
je
cmpl
add
inc
cwtl
pop
cmpsb
cwtl
fistps
mov
or
add
push
adc
in
sbb
adc
xor
jae
shll
and
cmc
dec
adc
mov
das
adc
add
push
dec
dec
test
push
push
sbb
or
dec
or
jl
cmpl
push
and
xchg
mov
cmpw
jne
lods
xor
fwait
mov
je
test
rorl
cmpl
lret
ret
mov
push
mov
and
shll
call
jmp
cmpl
and
cmp
cmpl
data16
or
jnp
js
inc
push
lock
aas
bound
mov
push
xor
repnz
clc
mov
mov
cmpsb
sahf
ret
dec
mov
mov
add
jmp
xchg
add
loopne
lea
and
push
rcr
int3
jle
jl
mov
ds
push
adc
xchg
mov
adc
adc
int3
imul
adc
sub
push
xlat
fisubl
leave
push
leave
inc
jb
jmp
sbb
or
xchg
sub
xor
lock
je
mov
mov
cld
pop
jmp
mov
jg
add
jle
push
mov
add
add
mov
and
push
sbb
mov
in
pusha
aaa
push
push
in
sbb
inc
incl
je
jmp
mov
xlat
sub
popa
outsb
jge
test
pop
jle
mov
jo
fcom
pop
sub
insl
call
in
add
add
push
call
xchg
dec
pusha
mov
xor
testb
icebp
adc
loope
dec
adc
call
in
insb
ja
or
nop
sbb
loope
test
icebp
inc
adc
daa
add
cli
in
push
adc
dec
sub
and
pop
jo
cmp
test
pop
sbb
sub
hlt
and
mov
loopne
sbb
repz
push
fcoml
popf
jae
push
mov
sbbl
add
in
iret
in
or
jbe
push
loopne
sbb
push
out
xchg
rorl
push
dec
xchg
lret
push
mov
inc
dec
sbb
lock
jne
repz
int3
andl
in
inc
add
push
push
outsl
popf
stc
adc
mov
out
mov
add
push
push
sarl
gs
test
cmp
cmpb
aam
cmp
aaa
cmp
cmp
adc
shl
inc
mov
lock
pop
adc
subl
mov
insb
movsb
lock
jb
sub
andb
xor
sbb
mov
sub
jne
xor
mov
inc
add
jp
leave
stc
cmp
jmp
rolb
sbb
xor
hlt
inc
inc
iret
or
fists
dec
adc
and
add
js
rorb
cmp
cmp
jne
jecxz
push
insb
das
inc
dec
mov
or
sub
pusha
cmp
push
lret
repz
sti
cmp
inc
or
mov
cwtl
nop
cmpsb
pushf
mov
popa
andb
jl
jl
dec
add
push
mov
test
add
xchg
mov
xor
shll
ss
pop
test
cmp
and
cwtl
inc
mov
mov
rol
scas
push
push
je
rcll
pop
shrl
push
adc
into
pop
pop
ret
inc
andb
out
mov
int3
fst
or
rclb
mov
ror
and
lret
inc
or
inc
out
in
roll
cmp
push
and
out
mov
lret
out
das
push
into
xor
add
bound
cwtl
imul
xor
mull
sbb
orb
lods
cmp
insb
aam
or
add
pop
cmp
sti
das
call
dec
sub
idivb
add
mov
push
cli
cwtl
sub
inc
test
pop
jge
push
in
xor
dec
jmp
cmp
test
xor
test
xor
mov
hlt
lea
movzwl
mov
mov
into
loopne
cmp
into
pop
mul
inc
add
aam
cld
add
ljmp
setb
jb
rcll
jge
cmp
push
mov
hlt
in
lea
je
popf
xchg
dec
pop
inc
pop
jbe
jns
pusha
cmpb
mov
dec
inc
ret
sbb
in
adc
sub
xchg
adc
insb
out
mov
adc
call
adc
add
scas
mov
mov
into
pop
push
push
dec
rolb
pop
sub
stos
test
add
lea
loopne
push
xor
cmpsb
popa
ror
mov
in
push
rorl
mov
fsubp
sahf
ret
ss
cmp
push
dec
sbb
push
js
mov
sbb
ss
daa
bound
je
jo
js
outsb
mov
or
orb
adc
mov
inc
jmp
jbe
push
push
lea
aaa
dec
xor
jmp
push
lods
lret
and
pusha
add
add
je
push
cmp
cmp
sarb
xor
and
push
mov
imul
pop
out
mov
pusha
adc
xchg
xor
mov
jnp
inc
roll
cmp
test
adc
jnp
mov
mov
lds
or
out
sbbb
sti
push
dec
mov
cli
cmp
jb
push
push
or
cmpsb
adc
loop
or
xor
dec
jecxz
dec
inc
mov
scas
cltd
fwait
mov
inc
lahf
mov
push
roll
jl
push
lock
pushf
adc
xchg
movbe
jl
aaa
push
fwait
push
cmp
das
scas
loopne
add
mov
lahf
mov
jmp
cmp
cwtl
insb
roll
mov
jbe
orl
push
add
push
lock
les
int
pop
xor
ret
jb
jl
and
shr
lret
push
arpl
fs
xlat
push
sub
sbb
xor
rcll
mov
in
inc
fs
push
pop
stos
int3
ret
jne
add
movsb
sbb
jae
fs
fiaddl
sbb
in
and
adc
sti
cmp
inc
add
sub
adc
clc
mov
mov
pushf
divl
out
push
icebp
pusha
in
pop
sbb
stos
mov
js
and
inc
in
sub
shlb
jne
scas
pop
jmp
mov
rcr
movb
not
cvtps2pd
jg
in
daa
clc
cmp
xor
insl
jne
cs
add
push
repz
mov
dec
push
das
iret
push
push
je
inc
or
loop
in
push
or
and
jle
cmp
mov
into
push
push
pushf
sbb
mov
cmp
ret
xlat
in
call
mov
repz
sub
push
or
push
ret
jle
xor
icebp
sbb
push
push
fidivl
pop
jp
adc
and
push
in
mov
xchg
je
push
cmova
cmc
sahf
sbb
sbb
and
mov
movb
hlt
adcl
mov
mov
xlat
adc
or
add
in
push
rcrb
sbb
jb
push
push
pop
sahf
xchg
pushf
fimuls
xchg
mov
fucom
nop
and
pop
push
sbb
out
jecxz
push
sub
xor
or
mov
cmp
sbb
jnp
jae
je
rcr
add
adc
out
fwait
incb
cmp
jne
clc
les
or
lea
cmp
pop
je
imull
add
push
cmp
cmp
cltd
or
inc
aam
in
or
dec
sbb
pshufw
mov
scas
sub
sbb
enter
and
and
xor
xor
mov
mov
in
or
pop
sbb
test
jle
sub
adc
cmpsb
imul
cmp
pusha
imul
sbb
fmuls
popf
lahf
lahf
dec
fsubr
mov
or
pop
sti
or
push
mov
inc
int3
ss
mov
mov
addr16
scas
sub
push
stc
add
mov
sahf
out
add
xchg
int
adc
and
ds
add
pop
ret
ror
pop
ret
pop
cmpsl
xchg
dec
dec
dec
add
fadds
orb
sbb
enter
jo
push
fs
push
rcrl
cmp
jbe
stos
bound
push
add
mov
adc
fbld
cmp
in
leave
cmp
push
jg
roll
jne
xor
stos
loop
stos
in
cmp
jne
mov
xor
sbb
sub
ds
icebp
testb
add
pcmpeqw
in
mov
and
out
mov
and
adc
bound
pop
mov
sub
popa
add
imul
cmc
inc
lret
sbb
mov
iret
repz
xor
sbb
shlb
cmpsb
lret
shrb
pusha
add
addps
push
ja
and
pop
movsl
add
jp
pop
mov
shll
mov
cmp
leave
jecxz
cmp
popf
lret
stos
or
xor
adc
outsb
and
mov
jae
insb
mov
in
sbb
add
mov
pop
cmc
iret
mov
pop
fsubl
push
rol
ljmp
and
push
pop
add
ds
jmp
out
add
loope
outsl
pop
jne
lea
add
or
fnsave
jo
push
push
ja
sub
or
adc
ret
push
fs
pop
inc
sbb
cmp
or
mov
add
add
pop
jp
das
mov
in
or
incb
repnz
xchg
out
nop
out
add
jo
out
addr16
cmp
int3
decb
pop
in
clc
out
sbb
inc
outsb
dec
testl
jge
xchg
rolb
mov
stc
push
adc
ret
pop
scas
mov
stc
xor
addr16
push
stc
stos
and
icebp
jne
es
imulb
xorl
push
fildl
sub
mov
pop
das
je
aad
sub
and
mov
iret
js
jno
sbb
pop
or
in
jbe
adc
shrb
add
nop
push
mov
inc
dec
mov
add
push
lret
clc
mov
sub
loopne
cmp
jg
add
dec
scas
lcall
or
rclb
fcomps
loopne
lea
into
lahf
push
push
shlb
adc
fs
sbb
cli
or
sub
sub
inc
or
addl
add
cmp
adc
sbb
cmp
pop
push
push
or
ror
mov
mov
nop
add
cltd
test
enter
inc
mov
or
decl
pop
inc
test
fcoms
cmp
mov
pop
dec
xor
mov
sbb
xchg
je
pusha
push
lea
cmp
fildll
out
rcr
jo
pushl
mov
mov
adc
push
pusha
aam
push
lock
sahf
xor
xorl
sbb
inc
rcrl
lods
add
mov
je
mov
or
fs
pusha
enter
insb
insb
push
push
sahf
sbb
aaa
clc
je
cmp
ds
xchg
ret
ja
repnz
and
out
xchg
fwait
loopne
adc
je
cmp
je
mulb
add
mov
in
lock
mov
iret
je
xor
cmp
push
push
mov
push
sub
inc
pop
xchg
mov
pop
lea
es
repnz
dec
leave
add
andl
loopne
jns
jne
lock
adc
sbb
lock
cmpsl
addb
cmp
adc
scas
inc
lock
fs
ss
testl
int
mov
mov
sbb
add
add
push
mov
mov
mov
mov
sub
cs
rorb
jg
jecxz
mov
lods
push
xchg
push
je
or
cmp
mov
sbbl
inc
sub
add
mov
data16
pop
add
test
movntps
test
ljmp
sbb
adc
add
scas
mov
loopne
fcoms
adc
xor
sbb
js
push
sbb
shrb
adc
push
push
jge
jne
enter
rorl
mov
inc
mov
sub
data16
dec
call
mov
push
adc
outsb
and
xor
jo
popf
jl
add
negl
in
fimull
or
and
cwtl
fidivrs
pusha
inc
lods
sub
push
test
sub
lock
lock
fwait
sbb
and
push
add
js
push
sbb
cwtl
dec
push
lea
mov
jo
and
sbb
push
mov
sbb
lret
push
or
imul
ret
sbb
lods
add
adc
movsb
popf
cmpsb
pushfw
xchg
fcoms
cli
imulb
add
out
xchg
pop
xor
pop
and
popa
lock
add
fs
adc
jb
nop
push
fsubrs
mov
dec
jnp
mov
jns
and
sbb
push
pusha
imul
inc
rclb
out
orl
inc
loopne
dec
call
or
adc
pop
adc
inc
dec
ja
or
or
inc
pushl
dec
jb
aas
xchg
jb
pop
loopne
or
adc
ja
outsl
loopne
rolb
ss
test
std
rorb
or
jge
sbb
jg
and
cmp
sbb
ret
add
pop
lea
lcall
pusha
pop
lret
inc
rcrl
arpl
or
mov
adc
and
pop
and
sbbl
inc
dec
push
jbe
cmp
ss
pop
push
pop
into
jecxz
or
inc
data16
adc
loopne
cmp
test
lretw
cld
inc
inc
jo
cltd
aam
lret
mov
push
aad
pop
int
or
push
rcr
cmp
lcall
fs
adc
pop
data16
loope
inc
push
cmp
loop
push
push
and
jmp
push
mov
xchg
cmpb
lahf
test
push
jmp
pop
movsb
cmpsb
mov
mov
xchg
push
shlb
sub
mov
add
and
pop
jmp
sbb
pop
aam
in
mov
mov
xchg
push
push
dec
pop
mov
movsl
add
idivb
je
mov
imul
add
sbb
dec
adc
loopne
adc
fcmovbe
lods
mov
mov
cmp
push
xchg
dec
arpl
mov
cwtl
push
xor
test
stos
in
and
mov
ret
popa
add
mov
ss
insl
aaa
dec
mov
and
pop
aas
test
inc
pop
fsubrs
mov
jmp
jle
inc
cmp
dec
mull
dec
xchg
movsb
mov
je
orl
stos
mov
xchg
std
pmaddwd
lea
push
push
inc
insb
add
or
mov
or
sbb
cmp
dec
pushf
ja
das
xchg
pushf
pop
sub
insl
mov
imul
js
insb
xchg
clc
rcl
push
sahf
mov
mov
stos
lahf
sub
lods
sbb
cmp
jl
imul
sub
add
mov
sbbb
cmp
or
sahf
clc
and
xchg
ret
push
mov
aaa
xchg
cli
rol
pushf
aas
push
xchg
or
sbb
xor
js
fs
cmp
js
hlt
mov
sbb
push
nop
inc
insb
stos
imul
or
xor
cmpsl
inc
loope
push
adc
pushl
and
ficoms
add
xor
inc
adc
daa
mov
addb
in
out
fistpl
pop
addl
clc
add
mov
lods
pop
inc
shlb
push
jo
pop
adc
push
mov
out
xchg
jns
pop
cmp
or
xor
push
xor
xor
test
adc
push
xor
fdivrs
pop
sub
jbe
test
fmull
dec
or
inc
andl
add
mov
stc
std
push
and
fbld
ficoml
ret
or
sub
sub
test
clc
push
xchg
fbstp
rclb
xor
or
or
ret
adc
adc
inc
imul
or
or
les
loopne
add
je
xor
outsl
dec
loopne
lea
add
or
and
movsl
test
inc
cwtl
test
orl
or
pop
inc
xchg
dec
incl
loop
ljmp
or
lret
inc
outsb
jl
outsl
dec
adc
outsb
inc
jmp
pushl
xchg
stos
push
pop
mov
mov
scas
in
cmc
add
sub
cmc
ss
fcomps
rcll
push
jmp
or
mov
inc
shl
ret
in
mov
xor
testb
andl
pop
lock
push
mov
jl
andl
inc
inc
mov
adc
je
xchg
and
jl
cld
and
push
in
cltd
adc
lcall
pop
loopne
gs
adc
dec
xor
pop
sahf
push
sub
pop
xchg
dec
outsb
mov
mov
test
adc
xor
add
push
xor
lods
push
adc
rol
pusha
ljmp
cmpsb
inc
jno
push
test
or
xchg
inc
mov
lods
jl
xor
fdivrl
or
pushf
push
mov
loopne
test
inc
mov
cmp
inc
repz
jl
or
test
sub
adc
jle
xchg
sbb
not
shr
pop
or
js
add
cmp
jbe
dec
adc
pop
jg
inc
adc
inc
loopne
xor
and
fdivs
xor
cmp
cmp
into
popl
aad
in
fnsave
notb
or
push
jns
test
mov
or
sub
call
add
add
xor
orb
sarb
sbb
jle
testb
je
and
outsb
mov
jp
dec
add
xor
andl
in
loope
xor
xchg
push
sbb
movzbl
pop
in
dec
push
mov
dec
pop
mov
ss
push
test
fidivs
inc
jae
mov
mov
lahf
lret
sbb
in
or
xor
add
out
and
mov
and
cmp
push
add
inc
add
mov
add
add
or
mov
cmpb
mov
mov
mov
test
pop
pop
stc
je
andb
cmpsl
ljmp
lret
filds
mov
xor
cmp
lea
inc
xor
mov
call
movhps
inc
xor
mov
movl
dec
push
mov
aam
pushf
and
in
and
pop
mov
nop
and
cmp
dec
rolb
neg
xchg
pushfw
inc
xlat
adc
out
sahf
mov
dec
rcrb
mov
mov
call
sahf
subl
pop
in
mov
ret
push
jo
sbb
mov
mov
pop
inc
sub
inc
bound
push
push
add
xchg
iret
pop
cmp
andb
idiv
sub
sbb
insb
mov
pop
testl
inc
add
rcrb
fcoms
xchg
js
xor
ret
sbbb
xchg
jp
out
jb
sbb
or
leave
pushf
mov
push
icebp
enter
mov
xchg
mov
cmp
add
push
or
inc
pop
pop
enter
add
add
xchg
cmp
xchg
xchg
je
out
gs
dec
lock
adc
inc
clc
andl
add
xchg
adc
int
fildl
pushl
rcl
xor
or
sarb
jle
mov
add
add
xchg
movsb
sbb
pop
mov
rorb
jo,pt
mov
xchg
sub
movsl
aam
pusha
adcb
scas
sub
add
ljmp
mov
dec
pop
or
jge
ljmp
sbb
pop
and
pop
and
xor
cmp
mov
ret
sbb
mov
mov
jmp
pop
jae
lahf
mov
push
aas
pop
xor
add
rorl
insb
mov
add
andl
adc
mov
push
pop
jmp
lea
add
int3
adc
sbb
ret
add
insb
test
mov
pop
fisubl
cmp
adc
add
lock
aam
or
cmp
add
sti
add
mov
xor
pop
flds
cmp
lea
xchg
out
das
loop
mov
shlb
sub
addr16
mov
test
push
add
and
je
cwtl
hlt
aas
xchg
int
sarl
adc
mov
sub
jne
xchg
inc
cli
push
sub
sahf
test
mov
xchg
clc
jle
sar
push
aam
jge
movl
xorl
inc
add
mov
xor
arpl
repnz
adc
adc
push
or
mov
sub
jge
fcomi
pusha
insb
std
mov
decb
add
mov
adc
fucom
mov
jb
jb
mov
lock
rorl
mov
lock
cmpsl
lea
rclb
bound
clc
inc
cmp
dec
and
push
sbb
push
popf
cmp
pop
adc
sub
shrb
xchg
jne
add
jns
pop
cmp
pop
sbb
loope
jnp
jge
cmp
mov
or
jle
push
push
xor
cmp
inc
rorb
inc
sbb
inc
ret
xchg
or
mov
jnp
sub
adc
mov
mov
xor
xlat
or
sbb
adc
adcl
jmp
arpl
add
outsb
fucomi
movsl
addl
insb
jno
jo
sbb
and
fistpl
xor
ud0
mov
cmp
add
movb
and
orb
je
adc
mov
sub
mov
or
mov
pusha
hlt
sbb
sub
push
lret
push
fisttpl
mov
pop
mov
lea
and
push
mov
ss
inc
xor
add
es
out
push
dec
sub
hlt
out
add
or
dec
add
xchg
pop
loopne
jg
mov
out
add
jo
push
in
add
es
insb
or
xlat
push
inc
jo
in
and
push
out
fmuls
cmpsb
mov
movsb
xchg
scas
xchg
or
pop
or
inc
lods
shll
xchg
push
es
mov
mov
mov
push
lods
insb
jmp
out
cmp
xor
jp
inc
mov
mov
or
add
hlt
mov
andl
shr
popl
sub
in
lea
mov
push
push
and
push
dec
dec
adc
push
jl
push
push
adc
enter
and
dec
es
popf
in
mov
popw
fs
xor
shll
push
out
mov
jg
dec
or
adcb
lea
incl
out
xor
xor
imull
popa
cmp
out
cli
fs
cmpsl
stos
pop
dec
sbb
pop
test
xchg
xchg
stos
push
cld
mov
stos
sub
push
mov
adc
mov
setle
or
xchg
aam
or
or
fadds
mov
imul
cmpsb
mov
or
jo
sbb
or
cmp
ds
sub
or
xchg
lock
sub
mov
ret
lret
mov
sbb
adc
mov
popf
mov
sti
les
xchg
rolb
inc
mov
testl
pop
lock
nop
jle
xor
mov
push
stc
int3
add
vpmovzxbd
rorl
lret
in
adc
xor
jae
mov
cmpsb
add
insb
dec
add
loope
xchg
jl
dec
xor
mov
or
dec
add
or
push
data16
and
insb
jl
movl
pop
pop
push
push
jl
into
insb
inc
or
add
add
push
xor
jb
rclb
add
fwait
cs
mov
ljmp
bound
mov
and
adc
cmp
push
testl
mov
iret
jae
pop
ret
cmpl
push
imul
or
in
jge
fdivrl
pop
jp
fstp
dec
pop
lods
push
xor
push
in
jge
adc
mov
bound
sub
bound
xchg
test
testb
int3
ret
in
sahf
sti
sub
xor
rorl
jo
xchg
cmp
xchg
xor
jne
orps
add
cmp
mov
lret
add
inc
ds
fstps
pop
xchg
mov
or
scas
jo
inc
push
push
sub
xchg
in
loop
pop
dec
xchg
loop
add
pushl
push
push
add
dec
and
dec
pop
push
icebp
outsl
das
test
add
ret
mulb
pop
xchg
pop
test
push
push
daa
loop
sbb
push
and
out
jle
cmp
andl
out
ret
outsl
or
and
lret
ja
je
or
je
testb
sub
xchg
mov
adc
add
cmpsl
or
push
or
ds
xchg
lock
mov
js
jne
mov
jnp
pop
insl
mov
outsb
cmp
adc
adc
adc
movsl
xor
inc
adc
jmp
mov
push
rol
scas
addl
or
jbe
push
negl
shr
cmp
ret
mov
mov
ret
jge
jg
and
test
xchg
neg
add
add
je
mov
or
loope
push
push
or
adc
inc
dec
cmp
das
ret
rolb
inc
es
and
mov
sbb
push
ja
add
push
and
mov
inc
clc
test
and
out
filds
sub
sub
in
movsb
data16
add
lcall
inc
push
adc
in
mov
or
mov
xor
daa
or
push
adc
fisubrs
adc
xchg
push
pop
jo
push
fs
imull
rclb
idivl
inc
or
add
imul
sub
in
and
mov
or
push
add
loop
push
mov
dec
paddsb
pop
out
test
mov
mov
into
hlt
rorl
pop
test
adc
pop
fcoml
pop
add
pusha
xor
stc
sti
je
inc
bound
mov
inc
push
inc
mov
shlb
pop
loopne
sbb
fs
fs
aam
stos
fsub
nop
sbb
enter
ss
inc
inc
or
push
push
jecxz
inc
data16
ficoms
call
mov
loope
mov
pop
stos
mov
loope
clc
ds
jbe
mov
inc
dec
add
pop
das
xchg
les
je
test
and
inc
push
and
test
jns
sbb
sbb
dec
add
jo
nop
data16
sbb
xchg
push
lock
out
push
xor
push
push
call
fdivr
outsl
inc
push
mov
add
jge
scas
mov
sbb
sbb
enter
faddl
in
mov
pop
subl
mov
add
push
mov
imul
movsl
aam
int3
inc
mov
nop
sub
addl
sbb
mov
mov
adc
cmp
add
and
xchg
xchg
or
cmp
add
test
fsts
stos
out
dec
fisubl
mov
inc
fisttpl
sub
jbe
xchg
enter
fisubs
pop
mov
adc
or
add
imul
jmp
and
dec
cmp
sbb
sahf
test
hlt
adc
shll
add
mov
shll
movsb
dec
mov
les
dec
loop
popa
fsubs
xor
mov
sbb
inc
and
push
mov
shlb
add
aas
test
jbe
imul
movl
and
sub
popa
mov
xor
subl
pop
call
lock
add
nop
in
jo
pop
icebp
les
mov
or
push
jo
mov
dec
or
push
test
outsl
mov
adc
pushf
je
and
enter
es
je
sbb
lds
xor
pop
xchg
dec
jmp
scas
adc
test
or
or
push
add
add
adc
lea
frstor
cmp
hlt
sbb
push
cmp
mov
pop
push
or
push
lret
add
push
xchg
mov
add
in
fdivr
cmp
push
xor
push
call
push
cmp
sub
push
xchg
jnp
aam
xor
xor
add
sbb
mov
loope
call
pop
incl
mov
sbb
sti
xchg
decl
and
rcll
inc
pop
mov
push
sub
add
jg
scas
inc
je
out
pop
jp
inc
insb
sub
insb
mov
lret
andb
nop
dec
les
lea
rorb
sub
xor
or
aam
cli
mov
daa
outsb
jecxz
mov
test
push
add
sbb
jo
and
inc
inc
push
loopne
push
ret
pop
aam
fmul
adc
pushf
xor
aaa
add
jl
push
xchg
jae
sub
push
xchg
pop
fs
lods
add
add
dec
mov
or
pushf
loopne
jg
dec
adc
mov
in
adc
push
movb
add
push
sub
push
mov
cmp
cmp
inc
adc
clc
dec
or
or
jg
rorb
add
push
dec
mov
sti
jle
repnz
jno
jne
es
push
add
aam
or
add
and
adc
mov
mov
rolb
sbb
cli
rcrl
shl
imul
pusha
lock
or
mov
js
je
push
push
jl
movq
dec
xchg
xchg
cmpsb
imul
sub
sbb
mov
inc
add
xchg
xchg
add
and
insl
mov
add
pop
pop
xor
jecxz
dec
adc
rol
aad
and
pop
add
sub
cmp
adc
or
pop
push
sbb
push
mov
fistpll
jnp
add
or
addl
add
pop
movb
scas
lret
sbb
inc
mov
adc
mov
sub
sbbb
jle
push
push
adc
fs
jne
add
mov
mov
sbb
in
adc
push
adc
pop
sbb
fs
in
movsb
popf
scas
push
push
inc
xor
jmp
add
les
pop
add
out
mov
xchg
adc
cmp
inc
lock
sbb
push
out
cmpsl
ror
sbb
pop
test
js
push
test
or
xor
dec
aaa
in
aaa
stos
inc
xchg
push
xchg
mov
add
jge
mov
sbb
xchg
mov
es
mov
hlt
je
adc
scas
je
xlat
mov
push
cli
call
cmp
fsts
adc
xchg
cmpsb
sbb
jnp
add
push
jo
xorb
sub
clc
xchg
mov
mov
mov
aam
add
inc
gs
sti
and
add
adc
movsb
and
push
push
dec
dec
push
add
pop
lock
push
cmp
mov
insb
push
push
fisubrl
mov
adc
add
test
mov
imull
bound
adc
rorb
and
cmp
xor
fcoml
inc
mov
xchg
sbb
fs
aam
in
adc
in
add
and
cmpsl
rolb
test
add
mov
cmc
movb
pop
popf
jp
and
dec
jp
add
adc
rol
jmp
add
test
lea
push
dec
or
cmp
in
sbb
in
sub
repz
stos
cltd
push
and
rcrl
cld
push
addl
lcall
cmp
insl
mov
adcb
xor
out
dec
or
je
dec
push
nop
xchg
mull
add
push
cmp
cmp
sbb
nop
xchg
mull
add
pop
cmp
and
sbb
push
test
daa
in
in
add
xchg
or
and
inc
and
and
iret
inc
pop
push
inc
cli
jb
jb
sub
mov
or
xchg
add
adc
clc
fs
mov
xchg
and
push
push
sub
xchg
enter
add
repz
enter
push
dec
orb
xor
push
sahf
adc
add
in
cmp
movsb
repnz
mov
cmp
or
and
pop
inc
xor
inc
fwait
inc
subl
inc
faddl
sub
or
inc
xor
dec
dec
in
cmp
add
dec
imul
push
sbb
dec
addb
and
mov
shufps
mov
out
jmp
insl
pop
adc
fnstenv
xchg
and
push
imul
and
mov
cmp
aaa
inc
cmp
frstor
cmp
or
jnp
pop
or
ret
dec
push
adc
test
pcmpeqw
fsts
jb
xchg
mov
inc
daa
sbb
push
call
test
mov
in
or
cmp
dec
sbb
pop
insb
add
pop
jmp
pushl
dec
ficompl
adc
inc
sbb
jo
cmp
pop
pop
lret
dec
loopne
shl
or
test
fdiv
cld
jg
and
push
sbb
push
ret
cwtl
push
movsl
dec
sbb
push
xor
sbb
rcrl
dec
push
cmp
push
daa
notl
arpl
dec
mov
mov
jecxz
cs
mov
loop
inc
cmpsl
dec
loopne
sub
repz
inc
cmpsl
jbe
lds
cmpsl
je
setg
xor
out
and
mov
in
push
in
sub
cmpsb
call
xchg
call
cmp
xchg
xchg
out
pushf
inc
mov
mov
orl
mov
xor
push
ret
in
clc
xor
lock
mov
sbb
mov
xor
pushf
pop
dec
pop
inc
out
repnz
lock
pop
pop
sub
pop
add
push
push
cwtl
pop
mov
adc
push
and
mov
jns
xchg
add
xor
cwtl
sub
xchg
mov
xor
aam
fmull
xchg
das
sub
or
int3
or
aam
jo
dec
or
shlb
es
sub
pop
adc
mov
call
out
and
movsl
cmp
pushl
aad
jmp
pop
or
mov
lret
xchg
push
mov
ret
lea
adc
test
xchg
lcall
sar
xchg
sub
jns
ljmp
or
adc
aam
add
add
ficoms
add
out
aam
xor
dec
cmp
cmp
sbb
inc
adc
jne
push
push
mov
cwtl
inc
ficoms
push
jp
jb
xchg
ja
push
sub
inc
inc
push
adcl
push
inc
outsb
scas
push
jl
cmp
mov
decl
out
shl
pop
cmp
add
dec
ret
jne
sub
sbb
pop
cmp
adc
je
mov
dec
dec
dec
popf
or
mov
stos
sub
cmp
rol
sbb
cmp
in
test
xchg
ja
mov
loopne
jl
bound
or
pop
mov
jp
jb
outsl
rorb
xor
add
call
jns
or
jns
push
mov
shlb
pop
pop
hlt
aam
adc
mov
je
lock
add
int3
mov
call
adc
je
data16
rcrb
adc
xchg
mov
in
jle
cmp
sti
push
push
pop
or
dec
pop
and
add
jo
mov
xchg
popl
lcall
pop
sbb
outsl
sbb
jbe
mov
jnp
mov
jbe
push
or
sbb
xchg
adc
inc
fimuls
sub
push
decl
mov
aas
push
cmc
dec
sbb
and
add
sub
pop
jp
sbb
push
popa
outsl
pushf
push
and
cmp
jmp
pop
loope
fs
mov
test
decb
add
leave
mov
mov
add
call
push
fmul
xlat
and
sbb
adc
mov
aad
into
cmp
or
lods
ja
flds
in
push
xor
sbb
adc
push
sub
test
sub
int
mov
je
sbb
rcrb
add
dec
mov
jge
in
xor
add
mov
jle
xchg
inc
and
adc
adc
adc
cmp
sbb
cmp
jbe
and
inc
push
lds
xor
inc
push
in
test
cmp
imul
jg
mov
sbb
inc
add
in
lock
push
sub
inc
dec
mov
push
inc
cmp
inc
push
pushf
or
adc
cmp
enter
mov
xchg
mov
add
cmp
mov
leave
jb
idiv
add
add
cwtl
push
scas
mov
lock
loope
rorl
mov
outsl
out
add
test
and
push
sub
cmp
adc
ss
dec
add
vpaddsb
loop
scas
push
xor
pop
enter
jns
and
sbb
xor
jg
add
es
xor
sbb
or
and
mov
xchg
push
push
in
cmpsl
pop
cmc
dec
cmpb
push
cli
pop
add
adc
fiaddl
std
mov
rdmsr
or
cld
out
and
aaa
cmp
cmpsl
sbb
add
pop
pop
mov
dec
adcb
pop
aas
sub
or
jmp
or
ficompl
or
je
sahf
sub
jle
or
inc
or
mov
aaa
adc
jo
inc
std
push
mov
andl
push
push
rcrl
out
repnz
xchg
movsb
xor
iret
or
mov
leave
aaa
adc
mov
movsl
fmuls
jb
test
xchg
adcb
fcmove
push
jns
jo
mov
lea
mov
mov
inc
add
or
and
imul
sbb
pop
sbb
out
xchg
mov
or
add
inc
jecxz,pn
mov
sub
lods
add
enter
sub
faddl
or
or
imul
pop
jae
sbb
mov
pop
gs
imul
sub
sbb
inc
pop
ljmp
fsts
or
mov
dec
add
adc
arpl
xor
stos
cmpb
pop
xchg
fucomip
xchg
pop
push
mov
xchg
mov
or
lret
jg
nop
pop
mov
mov
addr16
movsb
mov
cmovne
add
jecxz
mov
push
add
cmp
sbb
and
or
push
push
push
adc
xchg
imul
sbb
sti
add
mov
rep
std
mov
xchg
add
mov
test
jle
push
pop
lahf
cld
or
inc
push
inc
push
sbb
xor
xchg
or
add
test
mov
addb
jl
adc
pop
imul
add
sub
add
fs
and
enter
xorb
inc
loope
gs
fs
inc
xchg
in
mov
scas
movl
popa
cmp
addr16
call
stos
mov
imul
push
pusha
mov
pop
sidtl
lcall
pop
inc
cltd
andl
loope
xchg
sub
ds
cmp
fs
inc
fdivl
pop
aam
and
je
pop
aad
xchg
mov
ret
std
pop
and
outsb
push
clc
rcrl
xchg
testb
mov
cld
adc
jge
mov
jge
cmp
lods
mov
cs
mov
xor
mov
jp
and
sbb
data16
add
push
push
aam
ret
in
inc
inc
cmp
jb
loopne
jb
leave
xchg
dec
aaa
les
lods
in
cmp
movl
call
cmp
pop
fadds
lret
push
mov
inc
mov
push
pop
adc
adcb
xor
push
cld
xchg
pop
sbb
push
xor
cmp
mov
neg
sbb
inc
je
xchg
mov
add
jp
inc
jno
mov
enter
sbb
ret
cltd
push
int
push
das
movsb
inc
std
inc
jecxz
inc
cs
je
xor
cs
lods
adc
adcb
inc
push
pop
sub
jl
test
adc
mov
test
inc
inc
or
mov
sub
mov
inc
test
ds
decl
lods
jle
dec
add
jmp
add
rcrl
push
aas
push
sbb
in
cmp
rorl
in
xor
push
xor
dec
ficoms
lods
addr16
push
push
call
in
aaa
pop
jle
add
or
das
sub
xor
xor
sbb
cmp
cmp
das
das
inc
push
or
and
lds
jb
or
add
jl
add
sbb
add
movsl
add
aam
fwait
mov
sti
pop
movsl
sub
cld
sahf
pushf
pop
xor
inc
add
decl
sbb
and
jno
scas
in
adc
pop
or
lods
fsubp
mov
cmpl
and
add
insb
shlb
push
mov
xchg
sbb
cmpsl
jno
mov
icebp
pop
or
es
mov
inc
push
stos
fnsave
mov
inc
js
or
sub
inc
addr16
or
xchg
and
in
sbb
inc
sbb
add
add
mov
inc
add
enter
loopne
mov
mov
bound
and
mov
lods
cltd
gs
movswl
lret
outsl
aaa
cmp
int3
je
cmp
jae
push
pusha
or
cmp
mov
push
mov
cmp
push
pop
mov
loopne
pop
loope
or
adc
ret
stos
fidivs
fwait
aam
test
inc
cmp
sub
mov
add
test
pop
mov
outsb
insb
cmp
movsl
bound
cmpsl
or
or
sbb
cmp
jae
loopne
test
nop
not
and
jno
adc
leave
andl
mov
adc
pop
push
push
addl
rolb
rcrl
mov
jl
cmpb
int
lock
xlat
cwtl
mov
inc
inc
sub
daa
mov
fxam
inc
mov
lock
cmp
fsts
or
push
cwtl
cmp
inc
orb
and
cmp
cmpsb
dec
ja
popa
sub
mov
xor
mov
pop
push
add
and
and
gs
inc
sub
or
push
pushf
jo
push
mov
or
or
cmp
inc
loopne
ret
inc
pushl
mov
jmp
mov
push
adc
test
adc
pop
and
sub
add
xor
lods
psubsb
mov
repnz
push
jp
mov
call
clc
pop
icebp
add
adc
into
add
cmpsl
rcl
lret
add
jnp
xor
mov
push
push
aas
mov
rcrl
out
stos
lcall
scas
adc
nop
mov
adc
add
clc
jnp
sbb
dec
orb
mov
cli
push
mov
fdivrp
ss
add
and
mov
jnp
testl
mov
push
out
jns
cmp
dec
rclb
sub
clc
fcmovbe
mov
adc
and
arpl
dec
jmp
add
push
push
xor
mov
inc
cmp
cltd
or
inc
stos
cltd
push
sbb
and
sarb
sub
or
fadds
lods
sbb
or
js
addb
jmp
roll
pop
mov
or
or
jno
push
ret
andl
call
push
mov
je
jecxz
mov
js
testl
mov
cltd
cmp
jl
pop
sbb
aad
loop
cli
jo
test
icebp
and
jb
sbb
sbb
xor
mov
adc
push
pusha
sub
xor
call
aad
mov
sti
adc
jae
inc
sub
mov
mov
jge
adc
jo
iret
mov
dec
lock
add
int3
adc
or
jge
shrb
mov
cmpl
add
push
pop
std
add
bound
inc
adc
dec
aad
dec
add
loop
or
add
pushf
sub
popa
insb
loope
rcrb
insl
push
adc
shll
test
push
pop
cmp
imul
pusha
push
cmp
sbb
adc
xchg
loopne
or
je
rclb
cmp
je
push
or
inc
and
outsl
mov
adc
push
pop
jg
sar
cmp
jbe
or
add
addl
lret
dec
inc
loopne
roll
pusha
in
adc
sub
jecxz
xchg
insl
clc
faddl
aad
xchg
push
repz
js
dec
mov
or
push
dec
xchg
lahf
pop
add
dec
pop
inc
jge
stos
test
sarb
fadds
fiadds
add
lock
lea
dec
sbb
mov
es
pop
push
sbb
mov
in
cmpsb
or
movsl
adc
cmp
arpl
enter
or
loope
in
mov
and
iret
stos
or
mov
sbb
xchg
in
notb
adc
xlat
jns
dec
xchg
or
xchg
and
or
inc
push
aas
ret
dec
shll
inc
or
pop
pop
adc
lods
mov
mov
dec
pop
pop
mov
addb
movb
rolb
shrb
pop
shlb
or
mov
pop
mov
pushf
testb
inc
push
shrl
dec
ss
arpl
aad
mov
dec
add
jne
sub
add
mov
pop
cmp
sarl
add
cmp
jb
pushl
xchg
popf
sub
inc
loop
loopne
jmp
xor
jae
inc
or
adc
add
and
rolb
mov
push
add
movsl
adc
ja
add
inc
test
aad
push
and
or
mov
cmpsb
pop
xchg
push
pusha
cmpb
add
call
stc
pop
inc
adc
jb
pop
sub
loopne
test
shrb
into
neg
add
mov
inc
jmp
pop
imul
lock
movsl
push
jmp
test
sub
test
inc
xor
dec
push
sub
mov
push
imul
xchg
movsb
mov
dec
add
pop
mov
fst
add
and
inc
push
cld
outsb
cmp
push
push
pop
sbb
scas
in
sbb
push
sbb
decb
test
sub
stos
pop
jecxz
mov
pushl
push
jmp
frstor
jmp
mov
aam
outsb
roll
cmp
or
imul
and
mov
inc
mov
adc
mov
xchg
add
stos
je
rolb
adc
daa
or
xchg
sub
and
into
xchg
daa
dec
iret
mov
jb
mov
add
mov
pop
fsubl
fcmovnu
arpl
push
cmp
or
adc
fcoml
in
sub
sub
mov
fsubl
fucomip
cmp
fdivl
ljmp
xchg
dec
and
fildll
sbb
push
add
or
xchg
hlt
or
sbb
and
xor
mov
sti
shlb
cmp
loopne
fiadds
sub
add
nop
sub
add
mov
push
aad
cmp
js
stos
and
add
xor
sbb
cmpsb
mov
cs
mov
and
jo
lods
push
or
inc
aas
pop
enter
fsubl
and
enter
in
add
or
and
add
nop
add
nop
es
sub
nop
add
test
mov
in
add
loopne
add
nop
sub
sbb
jg
pop
jb
or
jmp
push
pusha
cmp
pop
push
jb
inc
push
pop
jb
push
jne
cmp
and
cmp
jb
stc
adc
aam
jmp
in
loope
lods
in
sarb
cld
mov
pusha
push
movl
cmpsb
daa
nop
call
or
sbb
adc
andb
xor
sarb
inc
cld
lcall
or
mov
inc
adc
aaa
ret
js
inc
shr
adc
cmp
jecxz
and
sub
notl
dec
pushf
sub
sub
unpcklps
pop
push
loop
mov
sub
lcall
add
jae
add
jl
inc
lea
jmp
jb
dec
adc
rcpps
jne
mov
pop
inc
xor
cli
test
add
out
bound
xor
inc
nop
sub
lods
sub
filds
jmp
sti
inc
and
or
or
xchg
cmp
push
mov
push
xchg
loopne
test
dec
out
dec
push
out
roll
loope
pop
lea
sbb
cmpsb
xor
or
rorb
inc
incb
sub
bnd
jo
ds
pop
test
mov
add
add
sti
jbe
stos
lea
or
and
mov
in
pop
leave
ret
push
adc
push
add
adc
loop
std
popa
add
out
inc
mov
hlt
xor
jne
push
icebp
mov
add
mov
repnz
fistps
ficoml
xchg
mov
add
mov
nop
repz
dec
mov
mov
int3
or
shrb
lock
dec
xor
sbb
adc
mov
mov
mov
add
sbb
add
or
xchg
sub
dec
in
inc
call
ret
cmp
je
cld
dec
dec
lock
mov
cld
mov
or
into
mov
push
cmpb
int3
loope
and
jae
outsb
js
fiadds
loopne
cmp
sbb
or
idivb
cmp
jno
push
leave
xor
add
ret
cmp
fsubl
insb
lock
push
inc
jmp
add
push
es
loop
add
adcl
das
lods
or
in
jle
mov
std
aam
xor
int3
in
cmp
jg
iret
outsb
inc
fimuls
xchg
dec
pop
or
addb
enter
pop
sbb
cltd
jbe
adc
loopne
rcl
adc
and
popa
mov
mov
loopne
add
es
out
cmpxchg8b
jle
mov
mov
sub
inc
xchg
or
and
sahf
dec
or
pop
and
addb
ss
arpl
jne
xor
rcrl
cmp
in
pusha
adc
jg
jmp
add
or
push
sbb
and
sbb
or
push
sbb
adcl
jbe
sub
inc
xchg
xchg
fidivs
push
sbb
je
fs
mull
nop
aaa
adc
or
leave
add
or
lahf
loopne
jo
push
movsl
lock
pusha
loopne
push
orl
jbe
pop
mov
add
push
xor
mov
sub
push
fwait
push
dec
mov
test
xchg
inc
jbe
xchg
aas
mov
pushf
movsb
repnz
and
ret
push
push
pusha
and
mov
pop
push
xlat
jmp
dec
sub
add
xchg
jbe
mov
ds
ret
popa
dec
movsb
pushf
lods
xor
mov
and
cmp
inc
loop
repz
icebp
inc
xchg
adc
fs
or
or
pop
notl
cmp
mov
lretw
orl
sbb
ds
xorb
gs
shll
or
and
mov
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
ret
aas
andb
rcrb
leave
in
scas
xchg
into
cmp
jge
mov
pop
and
repnz
negl
xor
je
cmp
je
add
cld
js
pop
push
cmp
lcall
and
fwait
cs
pop
push
sbb
jl
inc
sbb
je
sub
add
push
leave
or
sbb
jecxz
dec
jl
inc
pushf
and
incl
mov
cmp
jl
pop
mov
inc
mov
dec
push
incl
mov
out
pusha
data16
jge
mov
imul
adc
pop
sbb
mov
jecxz
and
les
lret
dec
inc
add
int3
jmp
sub
lock
and
mov
or
flds
inc
push
add
pop
ljmp
bound
xor
xchg
adc
xor
lock
cwtl
js
prefetcht1
pop
push
lods
pop
outsl
xchg
pop
movsb
shl
fildl
sbb
call
xchg
or
mov
or
add
cmpsb
mov
adcb
mov
sub
jg
sub
push
push
in
add
rcll
loope
jle
cmp
mov
lret
lock
pop
mov
roll
jne
mov
mov
push
mov
inc
clc
xchg
sbb
out
dec
sub
rolb
fmuls
mov
and
in
push
es
add
inc
sbb
inc
icebp
inc
dec
mov
ss
push
push
pushl
shrl
dec
jg
cmp
jg
inc
mov
push
inc
add
popa
jp
outsb
loope
movsb
xor
xor
jne
xor
mov
or
add
xor
inc
xchg
mov
gs
int
add
adc
push
push
sahf
out
push
pop
pop
pusha
fs
push
xor
inc
ljmp
test
jge
sbb
jle
adc
repnz
and
or
lods
fldt
mov
ja
repnz
in
and
movb
stos
add
adcl
test
add
sbb
jnp
or
mov
lahf
xor
mov
mov
movnti
mov
adc
adc
cmovle
sbb
push
adc
xor
xor
add
orl
or
jo
jne
inc
mov
cs
sbb
cmp
lock
add
xchg
xchg
jl
outsl
stos
xchg
add
repnz
test
call
outsb
add
in
int3
mov
sub
jle
and
mov
jb
loopne
int3
push
aas
test
sbb
pop
mov
and
and
shrb
mov
js
repnz
add
add
imul
adc
pop
mov
movq
add
cmp
cmp
and
inc
or
adcb
xchg
cld
xor
lret
lcall
pop
lds
add
push
inc
shrb
xor
jmp
insl
lds
inc
adc
mov
sbbb
or
aam
cmp
lds
adc
push
arpl
sahf
push
xchg
in
sbb
push
add
xchg
fs
cmp
or
jg
andl
roll
push
push
pop
je
fwait
lods
adcb
push
dec
dec
sub
jo
add
push
fstpl
imul
mov
dec
arpl
imul
cmp
sub
sub
shlb
push
inc
pop
stos
dec
xor
cmpsl
test
xchg
pop
fmull
lea
or
test
mov
mov
mov
cmp
je
or
je
in
ret
adc
adc
sub
clc
mov
cmp
push
pop
mov
push
push
inc
hlt
movl
nop
mov
arpl
addl
scas
fcomi
jne
xor
in
roll
push
jle
inc
and
sub
je
pusha
jne
adc
jecxz
in
mov
push
pusha
movsb
or
push
pop
mov
jle
mov
sub
test
xchg
mov
mov
pusha
shlb
push
in
adc
sub
push
clc
cmp
fs
inc
rcrb
jno
add
clc
or
push
icebp
ficompl
xor
dec
ret
and
pop
push
adc
int
pusha
aam
icebp
xchg
or
dec
sub
mov
pop
enter
sbb
loope
pop
inc
lods
scas
mov
adc
pop
or
jo
dec
repnz
dec
fmull
and
pop
fwait
inc
mov
add
adc
ret
icebp
pushf
pop
xchg
and
fadds
ret
jp
mov
pop
lret
cmp
ss
mov
adc
mov
iret
push
fildll
loopne
jg
and
sub
sub
inc
jo
add
rcll
daa
mov
sub
test
dec
xor
popf
xor
int
lcall
sub
dec
xorb
adc
pop
inc
add
xchg
inc
pop
sub
inc
pop
lret
or
jmp
mov
pop
popa
xorps
cmp
clc
mov
cwtl
push
fldcw
mov
test
hlt
sahf
fisttps
push
pushf
cmp
adcb
pop
mov
xorb
ret
jg
inc
imul
mov
mov
pop
adc
mov
jo
mov
add
pop
pop
test
in
aaa
xchg
xchg
cltd
dec
adc
shrl
ds
add
fidivs
in
movsb
or
jns
mov
mov
jb
mov
rolb
dec
inc
add
inc
cmpsb
mov
insb
add
or
add
popf
sbbl
aaa
sub
das
adc
outsb
or
xor
jne
jle
add
fstl
inc
dec
dec
jecxz
mov
xchg
int3
push
jb
jecxz
ss
fwait
stc
cwtl
mov
in
leavew
int3
call
jmp
out
jae
out
push
pop
negb
rcr
adc
aaa
xchg
add
clc
sar
jb
jmp
andl
lret
dec
xchg
mov
xchg
mov
fadds
movsb
add
test
jmp
xorb
inc
push
or
cmp
or
push
sbb
ret
cmp
sub
and
add
jnp
lods
js
cmpb
push
lea
cmp
out
cltd
leave
xchg
dec
sbb
add
sbb
or
sbb
je
mov
inc
push
js
sub
mov
es
inc
push
inc
mov
jns
add
inc
test
test
inc
mov
jle
push
cmp
xchg
test
pop
xor
adc
sub
dec
add
aad
inc
fsubrs
fsubrp
fwait
sar
dec
pop
je
fldl
pop
push
push
fstpl
add
movsb
addb
add
jne
adc
adc
jne
cmp
iret
iret
push
divb
or
jne
or
shl
cli
jne
or
vfrczpd
lods
push
fldz
hlt
fstpl
addl
andl
mov
pop
nop
enter
sarb
sbb
xchg
les
in
or
mov
sbb
in
aam
arpl
test
or
pop
jecxz
inc
add
in
jbe
addr16
loope
cmp
dec
sbb
cmp
mov
sub
rolb
sti
sub
sbb
fdivs
sti
dec
pop
mov
push
xchg
cmpsb
adc
fwait
std
popa
sub
sub
aam
dec
pop
sub
sahf
pusha
mov
pop
cmpsb
pop
movq
add
aam
pushl
inc
scas
mov
loop
or
fimuls
jmp
fmul
movsl
pminub
jle
ljmp
fiaddl
mov
std
push
and
xor
xor
daa
hlt
pusha
pop
adcl
xor
jg
fcmovu
or
add
push
push
jmp
ss
jbe
roll
dec
fsubl
jbe
mov
cmp
push
pop
fcmovbe
sbb
and
in
jl
push
jge
and
aad
dec
mov
fldt
pop
push
push
add
sub
add
pop
xchg
shlb
ss
sub
in
inc
enter
and
scas
in
push
add
aaa
pop
subl
and
pusha
push
iret
fucomi
es
adc
adc
push
and
mov
scas
fiaddl
jb
pop
mov
push
add
ret
adc
ss
fidivrl
mov
repz
push
add
pop
or
prefetchnta
push
repnz
movsb
leave
outsl
pop
mov
cltd
lock
arpl
xor
pop
ds
cwtl
and
out
nop
xorb
dec
add
imul
dec
testb
lods
push
adc
or
push
imul
mov
and
shrb
shlb
xchg
or
in
pop
enter
xchg
or
mov
mov
cs
rclb
sbb
or
lods
xchg
imul
push
inc
shlb
das
movsb
and
push
nop
xchg
or
push
orl
add
bound
adc
sub
add
dec
mov
shl
in
in
enter
in
in
mov
jecxz
lods
test
push
adc
clc
inc
and
lods
or
cmpsl
xor
sbb
punpckhbw
or
test
push
xchg
shrd
fildll
sbb
inc
loopne
sbbl
xor
pop
cld
cwtl
mov
ret
cs
es
dec
ret
mov
push
sarb
push
sarl
inc
lods
out
push
jp
fisubl
mov
pusha
xor
cwtl
or
add
add
sbb
sti
jle
mov
or
int
into
jae
cmp
cltd
lods
pop
out
fs
add
add
mov
fidivs
jo
insb
jge
pushf
testl
push
test
into
inc
jb
push
pop
nop
shl
adc
xor
adc
dec
popf
lods
sbb
daa
mov
call
cmp
or
add
pop
add
add
or
or
pop
not
mov
loop
aad
loope
test
add
sub
mov
xchg
sbb
sub
jmp
xor
popf
push
aad
inc
adc
mov
xchg
bound
stc
push
enter
stos
and
lods
or
jmp
dec
jl
cmp
loop
fadds
loop
pop
divb
mov
frndint
xorb
gs
aam
sbb
cld
mov
clc
lret
jae
shlb
mov
or
push
xor
inc
fsubs
lods
fcoms
xchg
push
jl
xchg
push
dec
aad
sub
mov
out
pop
fdivs
int3
dec
and
test
lea
call
fs
shll
mov
cmpsb
xchg
mov
call
inc
clc
mov
xor
dec
adc
sbb
push
sub
clc
xor
cltd
cmpl
xor
jmp
rorb
cmc
pop
add
pop
jle
rclb
loope
insb
cmp
ret
pop
cmp
pop
push
mov
add
push
jmp
popa
xchg
and
jns
pop
xchg
cmp
xchg
mov
lock
shlb
loope
inc
sbb
ret
push
jge
mov
mov
insb
dec
add
in
arpl
push
cltd
push
in
jge
mov
xorl
pop
mov
adc
cmp
or
je
fisubl
fdivrs
ret
add
push
mov
ror
jecxz
sub
mov
hlt
mov
movsl
pop
or
pusha
mov
or
jo
pop
mov
test
sbb
icebp
cmpl
into
sbb
cmc
arpl
lea
sub
dec
je
cld
xor
mov
dec
cmpsb
mov
xor
cmpsb
dec
cld
orb
bound
jb
int
jmp
data16
aad
xchg
loope
clc
add
ret
dec
xchg
imul
or
in
jo
dec
jne
inc
mov
loopne
lods
xchg
sbbb
test
js
sub
dec
in
jge
sarl
or
loopne
adc
ror
adc
and
jb
or
cmpsb
icebp
adc
jle
hlt
dec
mov
and
sbb
adc
pop
sub
push
andb
jge
sub
in
mov
jmp
jl
pop
push
xchg
loope
adc
jne
scas
add
xchg
pop
lds
imul
add
rcll
adc
xchg
cmp
adc
lods
xchg
xchg
push
fistps
and
test
adc
mov
mov
arpl
stos
add
stos
cwtl
add
popa
add
imul
mov
lods
repz
mov
loope
hlt
stos
push
movsb
leave
in
xchg
xchg
mov
fwait
in
cmp
cmpsb
add
lahf
in
lock
adc
sub
int
push
mov
daa
in
jmp
add
loope
inc
pop
or
xor
and
adc
or
rcll
inc
stos
rcl
icebp
mov
mov
es
pop
push
mov
fsubrl
ficoml
lods
adc
mov
push
jnp
ret
inc
sbb
add
pop
js
fwait
jp
orl
or
ljmp
mov
fsts
ss
mov
jo
pop
mov
or
push
ret
cmp
push
nop
cmp
and
test
test
or
outsb
arpl
dec
or
jl
sbb
das
rorb
pusha
or
add
test
das
insl
or
pop
mov
pop
leave
cltd
and
pop
adc
stc
ret
ljmp
push
add
push
mov
mov
inc
lods
stc
jnp
mov
or
cmp
rorb
xor
push
mov
ljmp
lds
ss
jl
cs
inc
adcb
mov
xchg
push
sub
sub
lea
dec
push
dec
add
cmc
add
cmpl
pop
ds
scas
push
cmp
fs
mov
mov
or
jmp
and
push
mov
push
pop
mov
cmpsb
sbb
cwtl
or
xor
mov
sub
or
xor
mov
sbb
fdivs
sbb
xorl
jbe
lea
addl
adc
cs
in
mov
loop
sub
stos
xchg
mov
mov
sar
dec
push
cmc
lea
lea
in
xchg
shrl
popf
pusha
aaa
mov
jnp
ret
out
call
lds
jno
sbb
jg
push
or
lret
stos
cmp
adc
test
xchg
outsl
out
sub
pop
sahf
sbb
jne
cmpsl
clc
jno
gs
adc
mov
rorb
mov
adc
mov
inc
leave
stos
push
pop
inc
nop
nop
shll
sub
data16
cld
push
pop
push
test
mov
and
dec
mov
cmp
movsb
jp
sarl
movsl
or
in
daa
xchg
inc
add
sub
jne
test
push
test
xchg
test
push
pop
enter
loope
fnsave
mov
push
es
xchg
and
push
hlt
ret
inc
or
lcall
in
push
or
cmp
es
cmp
cli
adc
js
inc
sbb
sbb
and
out
jns
shlb
add
out
adc
and
dec
outsb
add
xor
mov
mov
add
xchg
sbb
hlt
xchg
fstpt
bound
mov
xacquire
or
js
fisubl
or
ret
scas
add
popa
iret
nop
es
mov
sub
pop
sbb
addb
sbb
xor
pushf
push
pop
pop
jns
sub
jns
stos
xor
cmpb
jo
pop
enter
cmp
out
in
aaa
je
xchg
xchg
xor
xor
xor
and
adc
mov
or
push
adc
pushf
and
jns
sub
and
or
inc
in
push
and
daa
push
aas
push
jnp
pop
hlt
mov
and
ljmp
mov
mov
lahf
dec
lret
mov
lcall
cmp
cmp
aaa
xor
notl
pop
cmp
mov
dec
xchg
add
push
add
xchg
pop
test
jb
mov
and
xchg
add
pop
in
shld
xor
and
inc
lods
into
cltd
sbb
xchg
push
pop
repnz
popa
jne
jae
sbbb
pop
out
in
mov
cltd
xchg
push
loopne
mov
int3
addb
out
bswap
adc
in
and
xor
or
sub
das
mov
and
scas
adc
mov
mov
movsb
xor
push
cwtl
and
cmp
fildll
sub
or
sbb
insb
test
cmp
and
dec
andl
rclb
hlt
es
push
ret
test
pop
or
push
mov
test
stc
pop
das
ja
and
jle
and
mov
shlb
insb
pop
sub
nop
je
sbb
dec
or
or
pop
cwtl
in
adc
aas
sbb
int
dec
out
test
add
js
sti
sbb
shl
jns
pop
cmp
dec
mov
in
cmpsl
ss
mov
test
fucomi
jl
cmp
leave
sbb
mov
mov
pop
adc
sbb
shlb
aad
test
test
movsl
inc
call
ja
and
cmp
xorl
push
push
and
aas
xor
add
mov
bound
xorl
or
data16
fprem
add
xchg
mov
push
xor
and
stos
hlt
imul
and
lret
inc
cmc
fsubl
jno
es
add
mov
fadds
or
xor
int3
les
mov
aam
dec
sti
sub
push
popf
outsb
in
xchg
js
lret
mov
jae
or
ja
fwait
jne
loopne
ljmp
add
test
clc
add
data16
sub
stc
lea
xor
mov
sbb
fstps
sbb
adc
xchg
nop
pusha
push
and
push
nop
std
sbb
ret
pop
mov
and
sub
push
fs
jecxz
fstpl
jle
icebp
les
push
hlt
mov
insb
popl
push
adc
aas
clc
push
dec
pop
shlb
daa
lock
fstps
movsb
inc
fs
fists
rcr
push
xor
pop
jne
inc
jmp
or
mov
insl
cmp
call
and
dec
lock
clc
sub
add
pop
fstl
adc
mov
sbb
or
mov
clc
sub
clc
and
je
clc
jle
jbe
push
loopne
mov
movsb
sbb
enter
mov
inc
and
test
cmp
jb
pop
pop
pushl
int
adc
mov
data16
rorb
mov
mov
dec
add
movsb
jle
cmp
xor
pop
inc
adc
rcrl
push
push
or
clc
shll
cmp
sbb
jp
cmp
jno
cwtl
push
push
cld
das
sbb
xchg
sbbb
sbb
and
adc
pop
outsl
cld
testl
lea
add
or
inc
dec
test
push
cwtl
push
mov
cmp
jne,pt
sub
dec
std
pusha
cmp
lock
dec
ret
add
add
cmp
call
adc
test
rclb
nopl
outsl
popa
adc
mov
rclb
add
fildl
test
cmp
fdivs
xor
push
xor
lds
add
or
sbb
push
out
mov
add
adc
rcrb
rolb
ret
or
jb
jp
ds
mov
xorb
push
cmp
je
push
lcall
cmpl
mov
xor
add
and
cmc
daa
cmc
mov
sbb
incb
ffree
jne
jmp
mov
fidivrs
add
into
nop
enter
mov
jno
add
add
pop
cltd
xchg
dec
aad
push
popl
jb
les
push
pop
lea
adc
pusha
mov
xchg
inc
xor
xor
mov
pop
jge
push
je
adc
incl
lret
fwait
shrl
push
push
or
xor
loopne
or
inc
sbb
cmp
dec
mov
rorb
pushf
insl
lea
icebp
iret
sub
hlt
in
fs
or
imul
jne
dec
popa
out
cmpsb
cmp
sbb
add
loopne
les
adc
dec
pop
shlb
nop
add
jmp
inc
add
orl
add
sub
fstpl
cmp
xor
fstpl
and
insl
clc
push
mov
push
adc
push
sbb
add
fsubl
pop
fsub
sub
fsubrp
ja
clc
or
push
dec
scas
jge
mov
adc
pop
push
ds
inc
jg
je
int
add
xor
dec
add
or
and
and
push
adc
shll
je
dec
je
add
es
jo
add
or
lahf
scas
pop
inc
jbe
and
cs
pop
jle
stc
cmp
lcall
lret
xor
enter
push
sub
mov
mov
and
xchg
fsubrs
or
fimuls
jns
xchg
repz
sbb
shlb
mov
dec
jne
cmp
ja
lret
test
cmpsb
adc
sbb
cwtl
ss
and
bndldx
xchg
clc
mov
repz
or
js
cmp
pop
jns
sbb
sbb
out
lods
mov
ja
sub
xor
outsb
fsubrl
aad
and
pop
stc
cld
adc
adc
and
push
in
and
adc
and
xchg
vmwrite
push
jnp
repz
and
lret
xchg
cmp
outsb
xor
in
inc
aaa
leave
mov
xor
push
sahf
add
or
add
and
and
sbb
pop
push
pop
jo
ss
push
cmpsb
pop
push
pop
dec
nop
mull
enter
sbb
inc
jo
pop
fildl
and
mov
jns
jo
movsb
das
inc
mov
push
pop
mov
push
lods
leave
jnp
jnp
sub
int3
jns
enter
xchg
or
mov
pop
das
leave
sbb
inc
xchg
cmp
leave
sbb
push
add
out
mov
push
pop
repnz
or
sub
push
inc
fimuls
or
test
push
pop
jb
cwtl
or
add
fwait
in
mov
sbb
xor
jb
xchg
imul
or
in
adc
and
pop
xchg
sbb
sbb
in
and
push
adc
cmp
pop
and
sbb
dec
out
or
mov
int3
mov
repz
call
mov
cmp
repz
jbe
cwtl
test
loope
add
out
inc
pop
imul
pushf
lods
mov
repz
add
cmp
repz
push
push
and
rorb
add
fnstsw
dec
jmp
test
or
push
pop
jg
xcrypt-cfb
cmpsl
in
int3
xlat
lods
push
je
add
push
lock
adc
sahf
adc
sbb
nop
lea
dec
add
pusha
test
jae
addr16
lea
roll
orb
stos
call
sub
lods
cmp
jb
jne
push
lahf
out
push
dec
mov
and
sub
test
lret
adc
adc
out
push
mov
xor
cmpb
or
push
xchg
push
push
shl
jns
push
sub
in
mov
push
pop
inc
loopne
lret
and
test
xchg
adc
sbb
jp
push
scas
mov
push
sub
adc
add
jb
jl
adc
in
adc
push
push
out
call
add
sbb
stc
mov
inc
sub
aad
sub
sub
push
adc
aam
xchg
and
ret
add
lods
push
in
fwait
push
xor
jp
push
mov
jne
add
fisttps
enter
and
jno
adcl
xlat
mulb
jno
add
loop
push
push
push
inc
pop
sub
jle
add
mov
flds
mov
adc
in
sub
loopne
loopne
icebp
add
dec
in
scas
call
mov
add
pop
or
adc
xchg
or
jle
negb
add
push
adc
xchg
push
je
xchg
loope
lock
cmp
je
or
nop
inc
or
push
repnz
nop
add
mov
mov
adc
dec
push
pop
stos
adc
loopne
sbb
call
and
sub
scas
and
roll
fisubrs
imul
dec
mov
mov
popa
and
shrb
mov
test
pusha
xchg
in
in
bnd
xor
mov
or
out
add
aad
nop
push
cmovge
jp
pusha
xor
imul
sarl
out
jns
cmpsl
adc
enter
add
mov
ret
pop
inc
cmpsl
mov
lods
and
rclb
bound
sbb
adc
jl
add
popw
fsub
push
mov
in
add
divl
leave
xchg
adc
push
push
push
lret
push
push
sbb
dec
adc
sbb
inc
out
sbb
mov
pop
dec
mov
xor
stos
dec
jbe
fisubrl
cmpl
mov
test
sbb
inc
sbb
cwtl
inc
adc
push
insb
mov
add
pusha
dec
push
daa
xchg
sbb
adcl
xchg
arpl
mov
adc
outsl
jo
nop
iret
cwtl
dec
icebp
out
test
add
dec
xrelease
inc
add
sbb
pop
adc
stc
add
paddsb
dec
add
add
inc
pusha
push
loop
jne
pop
or
jecxz
rorl
jns
orl
frstor
sub
orb
fwait
aad
push
xor
add
bound
fwait
xchg
adc
or
xor
test
xor
pop
adc
add
xor
jns
fnsave
mov
clc
add
outsl
jno
sbb
test
add
add
push
cmp
add
sbb
test
mov
sub
test
cmc
fildl
or
test
xchg
sbb
cltd
mov
or
add
jne
add
lahf
xor
shrl
or
cmpsl
or
push
push
lea
stc
lea
lods
mov
lea
sub
adc
cmp
and
mov
mov
add
sbb
sbb
pop
in
add
sub
or
add
push
sub
mov
adc
add
and
sub
xor
mov
or
je
lods
sbb
xor
sub
int
push
icebp
add
mov
add
push
stos
inc
inc
pop
movsb
cmp
cmp
inc
xor
addr16
mov
ret
loopne
pop
cmp
daa
push
rcll
adc
add
popa
add
scas
adc
xor
mov
or
and
mov
andl
inc
gs
sub
mov
les
add
in
arpl
out
mov
cmpsl
aaa
push
mov
add
cltd
dec
gs
xchg
mov
sbb
movsl
aad
shl
mov
cmp
adc
push
lock
dec
inc
andb
cmp
or
adc
or
add
nop
or
or
stos
lods
bound
or
adc
push
inc
push
push
and
jnp
pop
movl
stos
push
push
xchg
ret
jae
pop
mov
call
fisubl
sbb
or
lock
dec
out
inc
inc
test
mov
add
mov
mov
xchg
inc
outsl
test
fisubs
dec
push
and
hlt
mov
dec
pop
adc
mov
mov
add
mov
add
in
adc
lea
or
push
inc
or
fdiv
insb
lret
pop
aas
cmp
xchg
or
leave
fs
ss
lods
adc
ret
dec
sub
insb
aad
sbb
inc
andl
jmp
ss
stc
xchg
inc
inc
xor
test
add
loopne
fcoml
dec
aad
fmull
dec
adc
push
sbb
mov
xchg
loope
push
cwtl
or
pop
pop
jl
add
mov
addl
push
push
sti
popa
push
inc
dec
push
rol
add
movl
push
imul
mov
and
sub
mov
or
inc
mov
cmpl
les
cmpl
cmp
mov
loope
mov
push
dec
sbb
lods
popl
push
loopne
add
adc
lods
inc
mov
push
xchg
adc
push
mov
or
push
pushf
push
mov
push
bound
mov
inc
fisttpll
inc
jmp
jnp
jo
jmp
rolb
je
test
or
sbb
jmp
jecxz
fldt
xchg
sub
or
xchg
sbb
push
or
xchg
mov
dec
push
mov
add
daa
addb
cmp
push
loop
dec
test
dec
cmp
out
sbb
bound
pop
insl
lods
dec
pop
mov
xchg
pop
call
pop
lahf
xchg
mov
push
add
adc
push
cld
sbb
in
rol
mov
cmp
adc
mov
mov
lcall
jle
fwait
shll
imulb
ret
or
adc
jl
xor
jmp
dec
mov
inc
jl
or
sbb
popa
jp
adc
sub
je
mov
mov
push
add
inc
jmp
call
add
mov
push
cltd
pop
idiv
mov
mov
insl
fsubrl
cmpsl
pusha
dec
es
add
pop
push
xchg
loope
icebp
fdivs
sub
sahf
movsb
mov
fs
jmp
lods
lret
and
adc
inc
nop
lahf
pop
testl
test
xor
jmp
jnp
lds
adc
dec
add
dec
inc
xchg
dec
in
push
lock
nop
cmpsl
sarb
in
adc
xorb
mov
cmp
mov
dec
jnp
mov
aam
cmp
add
enter
lock
add
jge
inc
mov
add
cmp
or
outsl
loopne
xchg
mov
popf
dec
jnp
mov
add
adcl
and
sub
or
and
dec
rorb
sbb
mov
or
imul
repnz
mov
sub
shll
fidivrl
imul
aas
pop
imul
xchg
test
and
pop
orl
adc
xchg
mov
xor
andb
sar
adc
push
add
push
dec
movsb
pop
in
stos
adc
pop
push
dec
push
stc
loopne
sbb
cld
and
sbb
push
pop
push
inc
loope
cld
adc
mov
mov
aas
cmpsb
pop
out
or
jl
enter
call
jns
popa
out
sbb
xor
shlb
xchg
inc
sbb
dec
movsb
add
dec
inc
sbb
dec
stc
xchg
inc
lcall
roll
fs
in
sbb
cmp
divb
mov
jbe
adc
sbb
sarb
sahf
popa
cmovne
and
inc
push
pop
es
aam
nop
and
dec
aam
adc
and
fs
pop
shr
cwtl
xchg
or
and
das
fdivrl
and
cmp
pop
push
imul
adc
aad
mov
sbb
xor
adc
in
mov
js
insl
in
xchg
es
sub
test
jns
test
enter
jle
mov
and
or
dec
cs
or
mov
pusha
dec
mov
and
pusha
mov
cmp
inc
arpl
addb
leave
int
adc
leave
and
xor
jb
fwait
mov
xchg
cltd
in
jb
test
dec
es
jmp
push
in
sbb
sub
in
int3
sub
mov
add
jnp
sub
sub
shrb
mov
lods
cmpb
je
out
mov
lahf
pop
iret
in
mov
cmp
add
jo
das
push
int
aaa
mov
push
push
loop
xor
dec
mov
push
adc
pushf
ficoml
dec
sub
fists
fcompl
jno
sbbb
pop
fmull
test
mov
add
les
nop
clc
clc
mov
ret
pop
lret
adc
push
sbb
sub
mov
or
lods
add
clc
cmp
xor
in
call
jbe
mov
xor
rolb
sub
jl
aad
push
out
cmp
jp
sub
mov
sub
es
repz
adc
push
lret
enter
out
add
or
fisubrs
dec
cmp
jp
xor
adc
loopne
inc
mov
jg
or
in
jmp
in
fdivs
add
jecxz
pop
rorl
cmp
xchg
dec
mov
jb
jno
inc
inc
xadd
push
shl
adc
lods
lock
sbb
ret
rcll
and
and
ss
ljmp
cmp
movsl
push
dec
dec
xchg
sub
rcl
jne
orl
inc
jp
mov
ss
aaa
dec
nop
out
mov
fdivrs
bound
cwtl
adc
movsl
push
xchg
or
push
cmp
daa
or
mov
inc
mov
neg
sub
addr16
iret
idivb
sub
ss
movsl
push
or
push
jp
push
mov
int3
and
movsb
and
add
pusha
add
inc
and
mov
fs
cmp
xor
je
mov
mov
test
inc
sahf
push
push
xchg
add
push
or
push
add
mov
mull
outsl
adc
inc
ss
cmp
es
loope
bnd
xchg
pop
fsubrs
add
or
fldt
loop
add
mov
or
add
je
cwtl
cli
mov
and
in
push
inc
aas
popa
popf
add
rorl
inc
ja
lcall
shrb
mov
ja
pop
enter
dec
add
shlb
jl
js
outsl
or
call
add
and
add
bnd
in
mov
and
ja
adc
inc
fsubs
jle
xchg
hlt
add
in
mov
mov
mov
sbb
pushf
push
fistl
lock
fisubrl
cmp
sub
sbb
ljmp
cwtl
test
dec
rcr
ret
pushf
mov
aaa
clc
shll
pushf
add
aas
ss
and
jo
pop
adc
mov
and
in
add
or
pop
sbb
movsb
pop
mov
aad
cmp
add
or
jp
jecxz
xchg
cmp
inc
push
shll
pop
and
mov
popa
test
add
or
das
jae
adc
and
adc
dec
movsb
pusha
adc
scas
cmp
or
iret
cli
test
lock
jne
cmp
mov
and
cmpsb
sarb
int3
jl
cli
or
imul
cmp
out
es
add
pop
cli
test
sbb
sbb
xor
sbb
cltd
cmp
adc
jnp
add
fidivl
iret
add
rcrl
shlb
fdivrl
cmp
loop
jb
imul
and
mov
sti
enter
jns
xlat
adc
fcomp
add
add
mov
icebp
lea
adc
adc
pop
test
push
insb
fldpi
adc
or
sbb
loopne
inc
nop
mov
mov
push
cmc
cmp
lidtl
in
xchg
shlb
push
push
pushl
sbb
fistl
ret
xchg
js
lods
popa
lea
xchg
lcall
adc
push
xor
jns
mov
add
ret
mov
addb
xor
sbb
pop
mov
push
jmp
xorl
aaa
inc
mov
fs
sbb
rorl
test
push
cmp
or
mov
and
shr
or
shlb
adc
mov
and
es
add
pop
dec
stos
loopne
or
shll
push
es
loope
and
xor
add
sub
test
push
xchg
dec
or
push
inc
jl
or
xor
mov
fcoml
jge
mov
adc
pop
arpl
lock
push
or
sbb
mov
cmp
cmp
test
rclb
cmp
jb
lret
insb
cmp
pop
cmp
pop
push
cmp
dec
cmp
in
xchg
in
cmp
sub
pop
mov
cmp
adc
lahf
adc
cmp
hlt
xor
sti
jl
loopne
int
inc
push
lds
adc
adc
add
fisttpl
jge
jno
sbb
repnz
mov
adcl
jnp
mov
es
xor
add
inc
test
xlat
call
mov
cmp
into
jle
int
add
iret
in
sub
clc
in
aas
je
es
cmp
jne
cmp
jb
push
mov
add
ret
sub
icebp
or
mov
jno
push
fldlg2
add
add
pop
push
sbb
sub
add
loopne
test
in
inc
cmc
push
pop
pop
sbbb
or
sbb
push
rorb
jno
stos
add
add
cmp
andb
mov
pop
add
pop
pop
or
dec
sbb
or
mov
dec
push
cmp
or
or
pop
fcmove
test
cmp
lock
xlat
mov
xchg
test
mov
pop
movsb
push
cmp
fldenv
push
inc
xchg
sub
and
repnz
lea
rorb
daa
ficoms
mov
mov
les
cld
outsb
lock
ja
push
daa
inc
lock
pop
in
stc
in
fsub
lods
and
xchg
shlb
or
xchg
aaa
repnz
or
sbb
or
xor
inc
and
and
popa
nop
mov
or
cmp
inc
flds
aam
mov
and
mov
or
sub
dec
mov
arpl
cmpsl
or
lock
leave
and
and
push
mov
imul
subb
stc
movsb
inc
mov
rolb
enter
pmulhw
mov
sbb
jne
jae
ficoml
push
imul
cmp
push
mov
xor
subps
lods
or
fcom
pop
adc
push
push
fwait
testl
ficoml
xor
add
inc
dec
or
sub
scas
addl
push
adc
addl
leave
rolb
pop
ret
push
repnz
out
push
sbb
sub
push
fadds
and
jg
jo
int3
add
sub
or
adc
es
and
sub
call
push
push
and
imul
xor
adc
es
sub
scas
test
in
mov
gs
push
or
mov
ror
ret
mov
mov
push
or
xchg
sti
pop
adc
fstpl
xor
mov
jecxz
enter
cld
fs
in
adc
dec
jo
rol
mov
in
sub
daa
add
pop
add
jg
mov
lock
adc
add
push
xor
decl
inc
xor
jne
add
loope
call
xor
ret
insb
jbe
push
xchg
inc
adc
lods
mov
movsl
mov
orb
inc
cmp
adc
add
faddl
mov
add
push
cltd
jb
imul
cmpsl
hlt
gs
add
inc
pop
mov
gs
add
xor
ud2
mov
insl
mov
xchg
loop
xor
cmp
sub
call
cmpl
jne
inc
cmp
jb
dec
adc
mov
stos
push
dec
rolb
xchg
or
mov
xor
jae
mov
pop
adc
cmp
pop
mov
add
jmp
inc
xchg
stc
fldenv
and
or
sub
je
push
decb
jne
jnp
inc
lret
add
push
faddl
fwait
inc
in
nop
roll
pop
xchg
add
inc
jl
pop
inc
push
pop
pop
pop
push
js
ds
cmp
or
cmpsb
ds
pop
ror
mov
popf
stc
je
fstps
dec
push
lds
mov
add
leave
jg
sbbl
out
ljmp
dec
push
fwait
mov
das
add
mov
addb
mov
push
push
mov
push
lods
xchg
xor
out
inc
mov
hlt
adc
outsb
fldenv
test
mov
insb
add
ja,pt
pop
jg
dec
push
or
call
aad
insl
rcrl
jo
push
cmpsl
xchg
movsl
test
movsb
pop
add
xchg
or
sub
aam
add
loopne
into
ficompl
mov
rolb
inc
mov
int
xchg
sbb
or
add
and
xor
sbb
mov
add
test
loopne
pop
pop
pop
fildll
pop
mov
inc
xor
or
insl
jne
cmp
shrb
aad
and
dec
gs
subb
add
add
ds
shrb
jne
ret
and
nop
jns
fimull
adc
idiv
loope
rorl
out
std
into
mov
pusha
or
add
inc
and
xor
insb
loopne
dec
jne
dec
adc
mov
aas
xor
enter
and
std
jns
enter
cmp
aam
loopne
pop
pop
add
hlt
and
mov
enter
fs
sub
mov
cmp
std
inc
cmp
sbb
pop
mov
call
jne
das
ja
pusha
sbb
stos
and
cmp
pop
popa
add
jno
mov
add
and
pop
hlt
adc
mov
jg
dec
stos
test
fisttpl
lds
fistpl
mov
and
inc
add
pop
add
mov
movsb
addl
or
pop
mov
xchg
adc
and
mov
or
clc
add
push
sub
add
pop
pop
in
mov
add
xchg
add
sbb
push
and
orl
aas
adc
push
fiadds
pop
stos
adc
push
mov
dec
into
lahf
aad
dec
cmpsl
push
stos
je
mov
mov
jmp
nop
lcall
sarl
dec
jge
inc
out
ret
dec
and
sub
pop
ja
add
adc
fs
pop
js
cmp
jmp
push
mov
movsbl
push
es
push
mov
add
dec
vpacksswb
in
adcl
into
filds
push
cmp
repnz
inc
and
add
or
sub
in
or
ret
push
pop
mov
push
push
adc
sub
daa
add
sub
add
insl
mov
and
pop
in
jl
or
and
pop
incl
addb
inc
and
cmp
add
pop
mov
rorl
inc
inc
and
movsb
cltd
dec
dec
insb
pop
icebp
test
shl
jecxz
stc
adc
xor
insb
jge
xchg
in
and
dec
jne
dec
mov
cmp
inc
loopne
iret
cmp
xchg
sbb
cmpsb
and
sbb
mov
mov
sub
adc
push
icebp
nop
mov
aaa
xlat
dec
fcompl
add
sbb
sub
sbb
jg
cwtl
subb
out
or
shll
jo
popa
add
sub
adc
shr
push
call
cmp
pop
inc
push
leave
adc
or
ss
pop
mov
js
mov
lods
mov
fs
and
sbb
dec
push
lret
roll
sub
add
or
add
add
add
shlb
xchg
add
data16
push
add
pop
cld
loope
test
fs
and
adc
or
add
cmp
sub
xchg
mov
sbb
bound
dec
add
pop
and
sbb
std
push
mov
mov
or
mov
mov
jle
sbb
and
mov
push
mov
notb
inc
xor
push
xor
jae
sub
ret
mov
adc
fs
mov
and
pop
popa
pop
mov
test
push
or
push
loope
enter
test
out
cwtl
nop
xor
and
and
subl
mov
xchg
sbb
aas
sbb
faddl
sbb
adc
push
fsubrl
mov
pushf
addb
push
fwait
xor
stc
adc
push
popa
push
es
lock
pop
dec
jmp
sub
push
loopne
xor
daa
mov
mov
sbb
pop
cld
pop
les
cwtl
lods
inc
xchg
cmpsl
dec
mov
subb
daa
dec
sbb
sub
pop
push
jns
jl
test
hlt
push
pop
dec
add
cmpsl
pop
xchg
push
sub
xchg
fsubrs
mov
stos
aaa
adc
push
je
or
pusha
loopne
je
push
cmpsl
adc
adc
jmp
inc
loopne
push
and
stc
sub
dec
pop
mov
mov
call
repnz
sbb
add
scas
push
dec
pop
inc
and
jns
rolb
push
rolb
pusha
and
pop
inc
mov
js
mov
lea
in
cmp
jne
iret
jp
adc
mov
sbb
mov
sub
mov
sbb
fstpl
int3
push
push
aam
inc
xchg
in
orb
inc
dec
pop
in
rorb
fistl
jmp
lock
mov
cmpsb
push
add
ret
pushf
je
andl
adc
inc
xchg
xchg
push
add
add
sub
adc
imul
addb
cmp
pop
gs
sub
ja
dec
loopne
fsubs
jns
das
sub
sbb
out
xor
jo
add
or
cld
adc
or
jne
jge
test
cwtl
xor
add
test
sbb
push
inc
fnstenv
inc
and
adc
sarl
nop
clc
mov
inc
cld
xor
enter
mov
sti
lods
cld
cltd
inc
les
das
mov
sbb
aam
xor
sub
push
and
scas
into
mov
loope
outsb
push
mov
lods
and
cmp
fidivs
fiadds
xor
xchg
mov
and
outsb
mov
jbe
test
sbb
gs
cmp
pop
push
jnp
rorl
lock
mov
lock
or
testl
or
movsl
les
mov
lock
sub
adc
lret
and
test
jmp
cmp
call
call
sbb
clc
mov
push
add
fisubs
ja
or
pop
cmp
je
stos
out
adc
inc
fidivl
adc
jmp
mov
or
data16
jl
xchg
mov
repnz
mov
imul
adc
ret
pop
psubw
ja
cmp
mov
sub
adc
mov
ja
cld
jmp
adc
cltd
ret
jno
in
stos
test
mov
shl
aas
test
cmp
mov
test
xchg
cs
es
lea
cmp
or
in
cmp
jb
jmp
xchg
cmp
ret
fdivs
jo
or
or
push
jne
mov
mov
or
decl
or
add
add
pop
mov
add
or
xor
xchg
dec
rorb
and
pop
pusha
push
aam
rorl
xor
and
push
sar
cmp
je
adc
dec
call
movsl
lret
rcll
xor
push
das
cmp
pop
in
test
xchg
dec
jae
das
insl
andb
add
sbb
and
cmp
push
inc
mov
sbb
push
inc
stos
dec
jo
inc
fmuls
inc
or
and
xor
repz
adc
ret
fcmovnb
sub
decb
mov
adc
cmp
push
inc
dec
sbb
ret
shl
subb
cwtl
add
xor
cld
mov
push
xorb
dec
pop
call
pop
or
add
mov
xchg
or
xor
dec
mov
sub
pop
in
and
inc
xor
sahf
push
push
hlt
dec
pop
and
es
push
add
inc
or
mov
jo
adc
mov
push
js
jl
or
loopne
inc
ds
ss
xor
insl
test
call
addb
adc
xor
mov
stc
sbb
imul
test
pop
adc
sbb
inc
sbb
lods
flds
ss
push
or
cmp
lret
sub
rcrb
lea
mov
adc
ret
in
inc
or
outsb
push
push
mov
sti
cmp
mov
rorb
int3
rcll
or
or
fnstsw
xchg
mov
lock
lock
or
adc
nop
mov
add
pop
rclb
dec
add
mov
and
lock
cmp
lea
dec
cmp
rcrl
xor
lods
mov
xchg
cmpl
and
cmc
and
dec
rcr
incb
loopne
lods
inc
mov
es
dec
mov
sahf
fnstsw
push
scas
pushl
or
xchg
popa
lea
jne
push
bswap
adc
and
ret
aam
ret
mov
pusha
sbb
inc
clc
or
and
push
mov
mov
jno
adc
adc
mov
sub
loopne
mov
pop
push
xor
je
mov
pop
and
in
push
cmp
lods
clc
das
dec
pusha
add
cmc
incl
out
imul
iret
orl
cmpsl
dec
jnp
mov
add
push
mov
dec
insb
xor
fwait
dec
mov
loop
scas
or
or
push
jg
pop
pop
adc
sarl
jb
into
mov
xor
mov
lea
add
xor
jb
aas
xchg
daa
ljmp
and
test
loop
loopne
xor
rclb
out
xor
sub
test
mov
jb
xchg
pop
hlt
je
enter
cmp
lret
cmp
jmp
mov
or
sbb
and
jp
push
shl
imul
cmp
sub
or
rolb
movsl
cmp
jo
loopne
aaa
push
or
sbb
subb
mov
or
and
mov
and
in
imul
sbb
dec
sbb
imul
cwtl
xor
vcvttsd2si
les
fisttpll
icebp
imul
or
addb
pop
pop
jl
jo
test
xor
shl
lods
repz
fmul
and
push
adc
adc
mov
mov
fcomps
cmp
jecxz
dec
pop
addr16
dec
push
and
jae
rorb
mov
test
in
repnz
lcall
inc
jo
out
das
pushf
adc
iret
gs
fsubs
shrb
xchg
dec
enter
inc
push
sub
test
cmp
ret
in
push
push
outsl
addr16
sbb
or
sarl
mov
scas
pop
setge
sbb
sbbl
sub
pop
xor
xor
push
divl
icebp
xchg
loopne
cmpl
xchg
add
mov
ds
sub
add
adc
arpl
clc
xchg
or
andb
add
xchg
add
cmp
inc
inc
test
inc
es
dec
inc
push
dec
push
xor
mov
or
nop
out
outsb
mov
push
movsl
inc
dec
std
and
ljmp
push
movzbl
push
sub
in
in
jmp
dec
mov
mov
out
mov
and
faddl
sbb
jmp
out
or
cmc
add
icebp
dec
mov
mov
loope
add
push
push
fldcw
sub
xor
add
lock
sub
cmp
pop
or
cmpsl
sub
mov
andl
into
std
push
mov
add
movl
rolb
xchg
xor
outsb
push
lea
out
movsl
sub
mov
imul
mov
andl
cwtl
add
and
cmpl
mov
adc
dec
out
pop
lods
cmp
cmp
jbe
cmp
jbe
mov
sbb
dec
xor
lea
mov
popf
mov
pusha
sarb
mov
cmp
rclb
jge
cmovb
mov
push
add
movsl
inc
xor
fldl
jnp
add
xor
test
lret
sub
fstpl
xchg
es
in
push
les
jbe
cmpsb
pop
jmp
push
sub
sbb
and
inc
xor
test
ret
cmp
jb
insb
mov
push
fimull
push
mov
cmpsb
cmp
mov
dec
xor
and
enter
jmp
imul
lea
movl
or
and
inc
nop
dec
outsb
adc
les
in
pop
rcrb
rcll
out
pop
jge
mov
subl
imul
add
or
int
cwtl
adc
mov
dec
int3
shrb
or
push
push
mov
sub
mov
dec
pushf
int3
inc
sbb
and
daa
repz
dec
and
jl
adc
int3
mov
mov
arpl
pop
adc
or
addr16
cmpsb
sbb
jg
mov
lods
sbb
push
push
mov
notb
xchg
or
push
cld
xchg
test
adc
aam
or
into
or
xchg
add
dec
push
stc
loope
lcall
dec
dec
and
sarb
testb
int3
xor
mov
jmp
lcall
sahf
aam
ss
hlt
jne
test
add
mov
loopne
jb
push
sbb
test
call
into
push
push
loope
jmp
lret
or
fildll
inc
pop
mov
ret
lea
cmp
xchg
fiadds
sbb
movsb
sbb
adc
rorl
xlat
xchg
mov
je
in
pusha
or
jle
loopne
or
or
repz
push
push
loopne
add
cmp
pop
call
push
xchg
lret
dec
push
or
pop
xor
add
inc
cmp
cmp
rep
adc
vfmaddsubps
xor
pop
mov
pusha
xor
das
in
orb
enter
pop
enter
pop
enter
int3
sbbl
mov
or
inc
adc
xchg
js
rcrb
mov
test
pop
xor
mov
xor
pusha
mov
sub
adc
mov
movb
xchg
mov
sub
or
push
hlt
movsb
ret
scas
jmp
mov
adc
xor
mov
mov
imul
or
push
cmp
adcl
lret
adc
out
daa
lock
push
jns
inc
sbb
add
cmpb
out
pop
test
mov
dec
rorb
cmpsb
or
mov
inc
adc
cmpsb
xchg
test
xorl
fbstp
ss
je
rorl
rcrl
test
dec
adc
or
sub
mov
popa
jle
cmc
pop
mov
mov
pushf
sbb
mov
jns
jmp
jne
jmp
dec
push
idivb
push
mov
decl
xchg
enter
scas
xor
dec
push
add
scas
jge
into
cmp
sbbl
pop
sar
sbb
ds
lcall
lods
popa
mov
inc
jp
add
adc
push
push
inc
jl
sbb
xchg
sub
and
or
xor
dec
dec
popa
movsl
int
or
test
fsubl
hlt
lods
sbbl
pop
or
mov
mov
push
pop
cltd
rorb
fcom
fadd
std
pop
sbb
pop
inc
inc
inc
into
mov
adc
bound
push
incl
pop
cmp
dec
ret
sub
std
call
dec
mov
push
push
mov
dec
dec
xchg
push
lods
loope
popa
xchg
out
mov
stos
mov
dec
insb
cmp
test
daa
ss
xlat
push
add
arpl
mov
and
adc
push
js
xor
gs
cmpsb
movl
xchg
pop
sub
or
test
into
sbb
add
jmp
push
insl
mov
in
fdivrl
xlat
mov
inc
sti
push
jo
jle
add
push
hlt
xor
xor
es
sbb
mov
dec
sub
mov
or
and
aam
xchg
fnstsw
jmp
pop
clc
jne
loopne
and
subb
cld
jmp
cmpl
jge
repz
sub
das
xor
sub
mov
mov
clc
clc
push
sub
and
inc
add
inc
sbb
or
sbb
aas
outsl
bound
mov
xor
xorb
xlat
xchg
cmp
push
push
push
enter
fistpll
enter
out
loopne
inc
adc
xchg
xor
add
mov
jge
push
divb
mov
push
imul
shr
or
inc
test
aam
cmp
imul
cwtl
xchg
pop
or
cmp
jae
add
add
mov
xchg
push
sbbb
ss
flds
cmp
lcall
lock
scas
mov
fisttpl
popf
and
les
jecxz
loopne
add
stos
mov
ljmp
xchg
and
mov
bndstx
push
adc
jo
adc
and
inc
add
sbb
sbb
aad
shlb
lock
outsl
cli
push
xchg
cmp
pop
xchg
mov
push
push
xor
subl
clc
lods
test
xchg
int3
mov
mov
push
and
mov
in
mov
push
jl
int3
mov
sub
js
dec
sti
rcrb
mov
dec
fsub
mov
cmpsb
movsb
jl
push
or
insl
sarb
push
aad
fmul
pop
pop
cs
jnp
dec
add
or
xor
mov
mov
adc
adc
fdecstp
mov
jl
cmp
shll
in
push
lahf
pop
jp
adc
xor
cmp
xlat
shlb
mov
dec
pop
mov
aas
cmp
jp
xchg
lret
jne
arpl
sub
sbbb
fcomip
add
sbb
jl
lahf
fcoml
daa
in
add
pop
mov
push
fcomps
add
cmp
ret
frstor
or
enter
push
loop
std
sbb
hlt
or
cmp
and
imulb
ficomps
fwait
mov
mov
jmp
repnz
sti
add
cmp
xchg
data16
mov
add
add
mov
pop
pop
mov
sti
sbb
rep
movsw
push
cld
movsb
insb
cwtl
je
mov
jg
decl
mov
adc
ljmp
or
mov
inc
inc
jmp
in
cmp
jle
movb
xor
pushf
jbe
fnstsw
shr
push
mov
adc
es
inc
test
jge
cmp
movsbl
xor
cmpsb
das
int
push
ss
push
sti
add
stc
push
in
adc
and
push
cld
je
cmp
mov
lret
and
fiaddl
xchg
xor
pop
add
loopne
mov
not
dec
adc
add
push
cmp
dec
daa
dec
xchg
arpl
add
fwait
or
insl
in
xor
push
inc
add
insl
ss
cmpb
mov
pop
or
or
pusha
or
fcomps
jl
add
sbb
pop
arpl
mov
mov
mov
add
sbb
inc
push
lret
inc
sbb
aam
add
push
cmc
ss
mov
imul
lods
sbb
mov
jmp
pop
inc
nop
or
mov
hlt
lods
dec
clc
ds
clc
das
inc
mov
jns
inc
push
in
cs
adc
xor
insl
adc
adc
daa
daa
daa
add
push
pop
daa
daa
or
or
jnp
or
fwait
fwait
fwait
fwait
jbe
jmp
or
por
fwait
bound
jmp
adc
pop
adc
push
adc
fwait
fwait
fwait
fwait
dec
adc
dec
adc
aas
pop
jmp
fwait
fwait
fwait
cmp
jmp
sbb
xor
jmp
sbb
fwait
fwait
fwait
fwait
es
and
pop
pop
jmp
fwait
fwait
fwait
adc
jmp
and
or
jmp
and
ret
rol
hlt
out
fucomp
add
aam
test
mov
xchg
nop
mov
and
idiv
pop
and
pop
cmp
repz
daa
das
aaa
cmp
cmp
repz
inc
dec
push
push
iret
repz
pop
pop
imul
js
addb
xchg
xchg
fwait
mov
iret
stos
scas
mov
and
pushl
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
or
push
pop
and
and
aas
mov
adc
stos
adc
cmp
mov
or
sbb
mov
orl
mov
xchg
dec
add
or
push
popa
mov
idivl
mov
imul
inc
jmp
repnz
js
jo
inc
xor
in
jae
sub
cli
push
mov
sbb
pop
movsb
xchg
sarl
or
jl
imul
mov
adc
aaa
mov
inc
cmp
jbe
pushf
addl
and
xchg
in
sbb
orps
loop
push
or
adc
fsubrs
sbb
cmp
mov
loop
pop
ret
mov
pop
pop
adc
icebp
xchg
xchg
ljmp
pop
sbb
cld
and
sbb
and
test
sub
dec
pop
test
out
enter
push
xor
js
push
lods
lods
nop
mov
ljmp
mov
in
adcl
xor
dec
and
enter
pop
cltd
inc
das
adc
sub
nop
out
or
ss
inc
sahf
aas
cmpsl
fildl
adc
or
sub
lods
pushf
lods
add
dec
clc
outsl
loop
test
or
pop
xor
pop
mov
sbb
adc
inc
or
push
push
pop
js
je
mov
push
mov
jb
idivl
add
mov
pop
add
int
adc
inc
sti
xor
jecxz
sbb
inc
push
scas
push
pushf
add
xor
add
rcr
rcrl
pop
arpl
rcr
ljmp
in
inc
inc
adc
mov
pop
cli
mov
mov
jecxz
inc
outsl
add
test
dec
mov
sbb
call
ret
push
andb
jno
xchg
cmp
mov
inc
push
push
arpl
jbe
sbb
and
fimull
cmp
andl
xchg
adc
fidivrl
or
sbb
das
jne
mov
push
push
push
imul
xor
mov
jnp
pop
je
out
jle
or
cmp
jo
adc
pop
movsb
pop
orl
add
sbb
mov
cmp
sbb
push
add
add
mov
xchg
mov
mov
leave
mov
xchg
push
jae
popa
xchg
adc
out
mov
sbbl
outsb
or
inc
pop
adc
mov
cld
push
paddb
push
jl
test
or
sub
aaa
js
push
lock
pop
or
adc
into
adc
cmp
cmp
fimull
lods
jecxz
andl
adc
and
sbb
push
add
push
ljmp
and
adc
cmp
fwait
cmp
fiaddl
xchg
mov
cltd
into
aad
nop
add
and
ret
ret
inc
xor
xchg
mov
jle
xor
js
dec
push
lea
adc
push
xchg
push
mov
pop
stc
push
add
jns
repz
mov
sub
aaa
and
cli
or
sarb
in
dec
icebp
mov
cmp
mov
adc
inc
adc
pop
jbe
movsb
enter
lret
xchg
xchg
in
pop
cmp
xor
ja
iret
mov
sbb
cli
loopne
les
enter
daa
les
mov
add
aad
test
test
cmp
mov
insl
push
mov
pushf
cmc
rorb
fcompl
stc
faddl
rcl
lcall
xchg
xor
rcrl
scas
nop
subb
dec
xchg
adc
and
icebp
andl
divb
popa
jb
inc
stos
jbe
jl
sbb
mov
ljmp
aas
sbb
inc
lods
test
popf
int3
xchg
shll
pusha
xchg
test
flds
xchg
shr
jle
dec
fildl
dec
enter
xchg
sub
pop
pop
pop
repnz
pop
or
std
sbb
repnz
push
xor
cmp
call
cmp
jmp
out
cmp
add
or
xchg
mov
add
sbb
cmp
iret
sbbl
enter
xor
and
lret
xor
repz
add
enter
xor
pusha
repnz
idiv
add
inc
cmpsb
pusha
stc
das
sti
std
sbb
in
pop
imul
mov
xchg
push
les
add
inc
mov
stos
cmpsb
outsb
jne
loopne
push
test
pop
es
add
pop
push
xor
adc
cs
andl
pop
adc
ret
ret
and
fs
sbb
cmpl
lock
sub
mov
mov
lahf
outsb
add
inc
pop
sbb
cwtl
mov
or
adc
enter
in
in
push
pop
add
mov
jno
ret
mov
ret
xchg
insb
push
mov
mov
imull
adc
or
jb
mov
sub
pop
or
and
sbb
ret
enter
scas
pop
sbb
pop
jb
mov
dec
xor
inc
push
fsubl
xchg
mov
jecxz
mov
jnp
jg
push
push
testb
dec
loopne
popa
dec
add
jne
xor
aas
fdiv
inc
cmp
push
dec
pop
xchg
dec
shrb
sbb
mov
adc
loopne
mov
sub
popf
andb
daa
sub
aas
jbe
jge
aaa
mov
inc
pop
mov
add
inc
dec
push
mov
sub
sub
lods
cmp
or
or
and
add
push
adc
call
fsts
or
addr16
test
jo,pt
outsl
pop
xor
jmp
data16
in
adc
or
mov
push
invd
or
mov
cmp
roll
inc
cmp
and
daa
or
xchg
add
jle
push
lock
mov
jne
lret
add
jmp
cmp
je
daa
mov
mov
mov
fiaddl
pminsw
add
rcrl
fcoms
mull
and
pop
aas
sbb
aam
mov
cld
jnp
xor
sarb
sub
jnp
in
or
jo
sbb
push
mov
adc
rol
xor
lea
lahf
inc
mov
push
mov
and
test
cmp
xor
dec
xorl
push
cmp
shlb
push
add
inc
negb
xchg
js
push
push
shll
in
out
jbe
cmpl
mov
mov
mov
and
jo
dec
addl
mov
nop
or
fildll
mov
adc
cmp
orl
test
mov
ds
cmp
arpl
js
lock
jno
push
shlb
adc
loope
fwait
jecxz
or
add
pop
sbb
pop
pusha
or
jns
push
enter
cmp
adc
cmp
xor
pusha
add
ret
push
or
dec
sub
and
push
sbb
and
jb
adc
or
sbb
add
cltd
pop
or
push
cmc
pop
add
mov
mov
mov
mov
and
sub
adc
fidivrs
aam
xor
shl
inc
add
enter
sub
sahf
inc
xor
enter
xor
push
xchg
es
sbb
pop
and
pop
sub
mov
xchg
es
xor
inc
lar
pop
jo
fbstp
dec
ja
js
jl
jg
dec
aaa
dec
les
mov
dec
mov
dec
gs
pushf
mov
outsb
arpl
arpl
mov
mov
inc
or
mov
inc
incl
or
out
adcb
lea
and
mov
negb
out
je
sub
or
jg
or
jg
outsb
or
incl
cmp
jl
sub
in
aad
sarb
outsl
addr16
jl
push
jne
inc
cmp
xor
das
xor
inc
sti
je
out
xor
xor
pop
mov
xor
das
bound
cld
sbb
mov
jl
jmp
imul
or
lods
pop
jbe
adc
pop
add
call
sbb
into
or
push
push
push
iret
or
mov
cmp
jne
divb
mov
cmp
cmpsl
xor
sbb
xchg
mov
mov
insl
jns
into
jmp
inc
sbb
hlt
push
jl
fisttpl
push
in
sti
and
jmp
xchg
clc
addl
shr
xor
mov
mov
sbbb
loopne
fwait
test
xor
lds
jge
mov
pushf
incb
das
sbb
or
or
push
pushf
movsb
xchg
cmpsb
popa
jo
xlat
shlb
add
xchg
aam
xchg
push
pop
cmp
jge
je
fcmovb
popa
lret
jl
jle
lock
rcr
or
pushf
inc
shl
xchg
fidivrs
fdiv
fistpl
sbb
xor
scas
pop
push
hlt
sub
xor
jle
mov
decb
push
sbb
push
pop
add
inc
sub
sub
ds
push
pop
jg
rcrl
xor
mov
js
add
pop
jne
andb
push
inc
pop
inc
insb
push
out
push
dec
xor
xor
fnstcw
stos
shlb
push
push
cld
mov
cmpl
mov
gs
inc
mov
mov
aaa
xor
stos
push
lcall
sbb
cwtl
js
jne
mov
movsb
or
and
or
add
or
lret
sbbb
in
fistps
daa
push
sbb
push
jo
dec
scas
jne,pn
insb
mov
xchg
out
cli
add
push
cmp
add
jle
cmp
mov
lea
and
das
call
jne
hlt
je
popa
mov
push
daa
mov
xchg
nop
loop
rorl
mov
push
add
stc
xorb
addb
dec
shlb
sub
mov
movsb
es
add
xor
jp
jne
aaa
adcb
mov
and
or
mov
rorl
ljmp
hlt
jmp
dec
mov
add
stc
jmp
add
xchg
and
add
xchg
pop
inc
aad
pop
neg
inc
mov
mov
gs
std
jne
or
cmp
or
roll
or
xchg
flds
push
jmp
adc
mov
add
xchg
jnp
daa
or
jne
lret
jmp
inc
ja
test
lds
mov
jne
jge
sbb
adcb
fsts
lock
in
xchg
xchg
cmp
or
loop
fimull
or
add
shrl
mov
xor
add
adcl
jbe
lea
xor
popa
xchg
mov
mov
fsts
shlb
lret
lcall
out
sbb
mov
push
sub
push
scas
push
enter
pop
or
sbb
ds
pop
xchg
mov
shrb
inc
inc
xor
mov
fwait
sub
fsubr
pop
mov
and
xchg
mov
in
imul
pop
fadds
pop
or
add
rclb
xchg
jle
int
mov
mov
movzbl
mov
cs
sti
add
dec
add
pop
mov
enter
mov
add
das
mov
pop
insb
add
cmp
rcr
fistpll
cmp
and
imul
cmp
mov
data16
add
shlb
cmp
pushf
outsl
adc
rorb
or
sti
je
ss
mov
test
push
xorb
lods
add
add
aam
rorb
aaa
xchg
mov
sub
insl
test
aam
or
sbb
inc
adc
add
or
or
nop
jo
and
mov
cmpl
cmp
or
sahf
lea
push
rolb
push
leave
fdivrs
loope
or
data16
lock
pusha
add
pmulhuw
xor
pusha
or
pop
push
push
mov
pop
push
lock
push
or
jle
out
pop
aad
test
ret
adc
mov
and
add
push
sub
inc
or
repz
dec
test
mov
shll
inc
push
cltd
cld
cld
lcall
cmp
xor
pop
adc
sbb
adcl
mov
xlat
or
mov
add
orl
push
xor
sub
mov
xor
xchg
add
in
add
push
pop
inc
xchg
cmp
mov
push
enter
jb
imul
jns
push
jle
outsb
xor
push
mov
xor
xor
inc
push
das
cmp
clc
in
insl
cwtl
rolb
sti
into
sbb
or
xchg
jl
stc
lock
push
xor
push
inc
mov
adc
cld
sub
push
popa
les
mov
push
sahf
xor
and
jge
add
div
out
aaa
jbe
sub
cmpsb
mov
mov
cmp
mov
jl
inc
out
out
pop
les
mov
movb
add
das
mov
in
xor
xor
sub
movzbl
adc
mov
pop
cwtl
xor
adc
pop
xor
xchg
or
lcall
sbb
mov
or
mov
mov
mov
jo
pop
inc
add
add
mov
mov
adc
sbbl
add
bound
lea
in
jmp
shlb
into
jmp
fwait
arpl
sbb
adc
sub
sub
lock
sarb
test
mov
sub
roll
push
add
je,pn
shll
sbb
cmp
inc
cmp
jl
push
xchg
push
push
push
or
push
inc
loope
xor
popa
adc
rcrb
jle
jp
mov
jle
test
movsb
in
and
mov
or
jle
add
mov
jmp
xor
idivl
dec
in
imul
icebp
mov
push
inc
and
imul
jl
frstor
lods
dec
shlb
pop
lahf
cmp
pop
push
mov
enter
cli
dec
sbb
or
movsl
shlb
or
divl
ljmp
insb
ret
push
cs
cmp
inc
cmp
and
push
sbb
xor
mov
mov
rcrb
out
insl
xrelease
sbb
xchg
and
shll
push
mov
pop
add
adc
testb
hlt
xchg
mov
outsl
movb
or
in
dec
arpl
xor
or
fidivrl
inc
add
or
js
push
cmp
icebp
pop
mov
inc
roll
jb
inc
sub
xor
les
or
shll
enter
sub
push
inc
push
push
adcl
pop
adc
cmc
jmp
add
push
negl
loopne
xchg
xchg
adc
movb
xchg
jl
es
stos
cmp
push
not
fdivrs
jne
push
jnp
aam
roll
ljmp
repz
outsb
loop
sbbb
aam
mov
dec
cmp
sub
das
jne
push
mov
test
shr
inc
sbb
mov
lea
pop
or
pushl
or
inc
jmp
push
jmp
ljmp
add
sarl
jmp
add
and
shl
sbb
add
sub
mov
or
data16
out
movsl
movsb
mov
sti
and
aad
arpl
js
lret
frstor
sub
push
fbld
add
inc
cmp
or
add
sbb
push
sub
rorb
sub
xor
pop
cmpsl
push
push
jo
jge
and
adc
inc
cmpb
popf
shlb
inc
std
ret
adc
and
in
lods
fildl
or
cld
ljmp
mov
add
fstl
fldz
fcomp
fnstsw
push
mov
or
jmp
add
push
push
rolb
daa
mov
icebp
ss
push
inc
popf
or
mov
aas
and
mov
lock
lock
cmp
and
hlt
adc
test
inc
pop
je
aad
pop
sbb
xor
in
sbb
outsl
pop
outsl
iret
jge
cmp
add
xor
sub
cmpl
ret
jmp
inc
cmp
aad
in
pusha
ss
pop
pop
and
andb
adc
sub
insb
ret
ret
jne
cmp
sarb
dec
jecxz
sbb
and
shll
add
cmp
jnp
movsl
les
loop
clc
jmp
fldl
push
je
lcall
pop
add
xor
or
mov
jle
cmpsl
fimuls
enter
out
sahf
data16
int3
loopne
in
test
xchg
jne
mov
xchg
sbb
mov
xchg
mov
mov
cmp
xchg
pushl
jnp
fs
pop
ja
push
test
lea
adc
aas
outsb
and
call
dec
data16
loopne
sub
scas
mov
adc
loope
loope
mov
test
cltd
and
xchg
aam
jecxz
sbb
or
or
adc
sbb
or
inc
aam
push
sbb
xor
cwtl
add
pop
outsl
or
test
push
imul
or
sar
dec
or
cmpl
add
ret
jo
add
arpl
mov
xchg
pusha
shlb
mov
test
xchg
adc
push
pop
in
inc
or
add
movsb
mov
add
clc
int
jbe
add
pop
mov
outsb
mov
xor
mov
pop
cmp
mov
add
mov
sub
and
jne
xor
dec
push
adc
mov
mov
jno
xchg
push
sahf
rcll
mov
push
imul
add
fldt
dec
and
pop
nop
xor
mov
jne
sub
test
or
sub
or
lock
add
cmp
popf
jbe
mov
adc
test
adc
xor
and
fwait
cmp
add
adc
sub
fwait
or
xchg
mov
mov
push
lock
shlb
sub
test
mov
and
adc
add
and
insb
add
jbe
mov
xchg
jne
out
rorb
bound
inc
jmp
mov
pop
jno
mov
pop
pop
and
mov
divl
cmp
jne
xchg
sbb
add
cmp
pop
fcoms
adc
or
mov
add
gs
add
xchg
sbb
push
dec
push
add
nop
rorb
test
pop
pop
aaa
add
inc
imul
push
push
xor
loop,pt
fs
jmp
cmp
les
jo
pop
add
cmp
pop
or
cwtl
pop
dec
xchg
mov
or
adc
sbb
fisttpl
xchg
rcr
add
xchg
or
mov
jne
add
jb
mov
cmp
test
xchg
lock
mov
fbstp
cmp
pop
push
add
add
push
jbe
pop
push
subb
add
sahf
popa
push
push
lea
movsb
jg
repnz
inc
movsl
xor
inc
insl
add
lods
adc
pop
push
and
push
outsb
lods
and
push
push
dec
mov
or
push
dec
dec
les
add
arpl
or
call
mov
in
push
shlb
sub
int3
mov
mulb
sub
cld
pop
hlt
jp
sbb
jbe,pn
mov
gs
xchg
in
push
push
push
inc
rolb
pop
fsub
mov
mov
cmp
testl
or
mov
ret
hlt
pop
pop
mov
sahf
push
dec
aas
push
jb
push
sub
cmp
mov
pop
inc
dec
leave
lea
les
pushf
enter
lea
insb
rdtsc
cmp
shlb
jl
xchg
imul
and
pop
sbb
mov
in
mov
movsl
mov
shr
mov
cwtl
cmpsl
mov
rorl
mov
loop
inc
das
loope
push
sub
dec
in
cmp
jbe
fs
mov
xchg
rorb
andb
push
es
inc
xchg
lock
jbe
aad
clc
cmp
dec
add
xchg
inc
dec
leave
ret
stos
cs
daa
in
das
mov
adc
sub
int
pop
das
int
and
movsb
enter
pop
nop
xchg
pop
jb
pop
pop
mov
sbb
xor
dec
jle
pop
aam
stos
cmpsl
aad
mov
mov
and
mov
mov
inc
jbe
call
cmp
mov
sbb
sub
xchg
leave
xor
or
ror
jb
subb
nop
add
aas
or
das
call
and
loopne
adc
movsb
sub
imul
or
adc
and
scas
aam
inc
in
mov
dec
sub
dec
or
and
mov
sbb
mov
stos
sub
jb
sbb
xor
mov
jo
mov
test
or
xchg
sbb
or
inc
stc
dec
popl
scas
ljmp
sbb
pop
xchg
or
ja,pn
test
int3
sub
mov
sbb
xchg
add
pop
int3
lods
es
nop
addb
jnp
and
ss
add
aaa
mov
sbb
dec
cmp
and
rolb
push
jl
push
iret
fwait
cli
cmc
jmp
push
in
fcoms
sub
mov
mov
in
push
add
jle
ds
addb
mov
mov
jecxz
cmp
mov
adc
sub
push
xchg
movb
loop
inc
dec
ljmp
loopne
rol
xor
and
clc
sub
push
int
ljmp
lcall
sbb
cld
ffree
inc
adc
aad
inc
mov
add
fs
inc
adc
das
pushf
iret
mov
sbb
dec
fbstp
outsl
sbb
pop
loop
ljmp
sub
pop
sbb
icebp
cmp
add
add
xor
cltd
inc
icebp
xor
xor
mov
sub
inc
fcomps
adc
sbb
push
or
and
jbe
aam
loopne
add
pop
jnp
imul
jle
pop
push
cmp
or
lock
pop
imul
pop
mov
cmp
in
pop
mov
addl
imul
arpl
xor
push
or
push
sbb
lock
rcrl
jp
push
jnp
pop
xlat
ficomps
xchg
add
ljmp
in
lds
call
mov
push
inc
cs
mov
repnz
test
out
inc
lock
push
pop
in
xchg
xor
ljmp
aaa
in
call
pushf
push
add
in
dec
in
inc
ret
cld
das
sub
push
pop
out
and
sub
or
xor
inc
ret
lret
incb
or
out
push
mov
loopnew
inc
xchg
fwait
pop
sbb
in
adc
xchg
clc
aas
cmp
and
testb
sub
cmp
and
mov
imul
push
loopne
fmull
les
adcb
push
jecxz
rorl
adc
fdivrl
mov
outsb
jae
push
bound
inc
mov
sbb
pop
push
mov
loopne
dec
loop
pop
or
scas
jb
out
dec
xchg
ljmp
push
add
inc
mov
add
or
xlat
ficomps
xchg
enter
or
lret
inc
cmp
idivb
out
fisttpll
aam
sub
leave
inc
imul
pop
or
mov
mov
cmp
jne
clc
pop
mov
mov
adc
sub
ljmp
pop
sub
std
ss
sarb
sbbl
inc
sti
out
sub
call
push
addr16
test
mov
shlb
mov
push
xchg
cmp
insb
dec
sub
jmp
mov
lods
adc
movb
lods
sub
enter
es
icebp
les
dec
xchg
cld
adc
mov
and
or
mov
or
jo
js
mov
mov
add
jmp
push
xchg
jl
aaa
ret
or
enter
fs
pusha
shlb
icebp
adc
jmp
addb
mov
add
fldt
loopne
sbb
push
push
sbbb
add
pop
add
inc
sub
jmp
sbb
test
fdiv
movsb
push
fisttpl
inc
and
or
out
and
sbb
xchg
xchg
dec
add
mov
push
pop
jle
rcrb
fistl
adc
sti
sub
sbb
pop
cli
shl
add
xor
add
push
jae
xor
sub
fs
out
cld
ret
fcomps
fadds
jo
ucomiss
sbb
inc
and
jns
mov
filds
push
push
outsl
mov
shrb
sbb
loopne
and
je
test
pop
scas
cmpsl
push
jns
bound
xor
mov
push
or
or
jo
lds
mov
sbb
test
fmuls
mov
or
mov
mov
xor
cmc
add
or
fcmovb
and
xchg
loopne
ja
cmp
push
push
push
push
inc
mov
rorl
sbb
push
push
sub
je
enter
sub
push
push
clc
adc
inc
or
enter
push
sbb
enter
mov
sbb
addr16
sar
xlat
sbb
jmp
jg
adc
rcrb
pop
loopne
or
or
or
sub
pop
mov
in
xor
sub
lea
mov
movsb
mov
dec
ss
lcall
ja
inc
aas
shrb
test
adc
in
test
add
jnp
subb
or
jb
outsl
add
outsb
clc
cmp
mov
xor
jo
xchg
dec
js
cmc
pusha
bound
adc
scas
clc
inc
daa
sbb
add
sbb
lea
loop
ljmp
inc
or
roll
add
bound
dec
jo
jg
jae
adcl
mov
icebp
cmp
add
cmp
sub
sti
ja
inc
pushf
add
aam
lods
sub
add
les
xor
faddl
jle
test
and
or
xchg
cmp
fimuls
filds
push
xchg
add
sub
fwait
mov
pop
lahf
das
mov
fldenv
dec
push
push
pop
sti
outsl
cwtl
sub
push
and
dec
mov
dec
xchg
cmp
in
adc
pop
icebp
adc
mov
js
mov
inc
cmp
enter
push
je
les
add
push
pop
cmp
xchg
int
push
mov
pushf
jne
mov
and
ret
push
or
aam
mov
mov
add
xchg
adc
pusha
sbb
xchg
mov
pop
movsb
sub
jp
icebp
push
scas
xchg
mov
xor
push
cld
dec
pop
popf
out
std
aad
imul
test
add
push
add
pop
movsb
outsb
std
push
cmp
sub
pop
inc
push
xor
or
cmp
push
sub
out
roll
cmp
mov
or
aas
aas
xchg
push
arpl
pop
lahf
cmpsl
rclb
jnp
mov
sbb
jge
lea
cmpsb
jo
or
cs
pop
and
mov
rcrb
mov
test
gs
jo
imul
xor
jb
mov
cmp
out
dec
jae
dec
jl
test
fisubrs
adc
add
pop
and
fdivrl
mov
es
cwtl
rorl
insb
jge
add
bound
lea
mov
shlb
sub
adc
daa
sub
into
jb
popf
mov
sub
or
or
and
jl
push
pop
sbb
cmp
je
aaa
iret
inc
xor
mov
and
addr16
mov
pushf
movsb
jg
sti
inc
mull
mov
rolb
xchg
mov
pusha
ret
or
sbb
mov
call
cld
cld
or
rep
mov
imul
adc
adcl
sub
mov
or
lret
inc
mov
inc
cmp
jl
push
stos
xchg
push
add
mov
in
xchg
mov
ds
ja
popf
xlat
cwtl
lea
call
dec
jno
jle
push
aad
in
mov
jae
aas
push
ror
lods
cmp
lds
jmp
iret
sahf
nop
ljmp
mov
jb
mov
inc
pusha
ja
cs
sub
insb
push
imul
pop
adc
xor
jne
pushf
jmp
push
mov
sbb
cld
sbb
push
xchg
push
pop
pusha
lods
or
es
inc
sbb
js
iret
mov
dec
movsl
cltd
lahf
and
xchg
scas
int3
jp
mov
daa
dec
popa
nop
mov
add
xchg
fs
mov
mov
outsb
xchg
jnp
jecxz
pushf
adc
cwtl
jl
lret
cmc
mov
mov
add
inc
mov
lds
or
lret
test
arpl
lcall
hlt
fmull
jp
mov
in
sbb
or
outsl
pop
and
mov
mov
and
inc
xor
nop
imul
jne
lret
cmp
loope
dec
imul
addb
pusha
sub
outsb
or
push
adc
inc
or
mov
pop
jne
adc
sub
adc
push
lahf
cmp
sbb
mov
fcoms
mov
addl
sub
movsb
cmp
das
push
and
sbb
mov
add
insl
mov
rorb
mov
fsubp
push
mov
loopne
add
in
push
push
sbb
add
cmp
loopne
add
adc
nop
xorl
add
lods
and
cmp
subb
mov
mov
pushf
sbb
mov
inc
xor
daa
loope
and
cmp
daa
xor
xor
sbb
xchg
jmp
push
test
les
rcl
arpl
sub
mov
jb
pop
inc
push
xchg
inc
adc
dec
stos
jne
mov
xchg
cmp
movl
push
push
and
clc
push
xor
cmp
movsb
notl
movsb
dec
pop
data16
scas
add
jmp
sub
stc
sub
sbb
push
xor
or
sti
int3
addl
or
jle
mov
add
addr16
mov
mov
add
mov
and
pusha
push
jl
add
sbb
xor
pop
mov
outsl
stos
sbb
mov
insb
push
and
sub
stos
xor
test
insl
ja
pop
scas
into
in
adc
push
push
sbb
push
or
mov
jle
mov
push
cmp
inc
arpl
xor
popf
std
dec
xchg
push
adc
sub
fildl
sbb
fisttps
sbb
jg
mov
mov
cmp
fidivl
imul
pop
add
out
scas
ret
mov
pop
movsb
out
dec
popf
mov
pop
pop
and
push
rcrb
cmp
mov
jl
imul
mov
hlt
mov
data16
rcrb
imul
leave
std
jns
outsl
xchg
fs
or
je
cmp
jne
inc
inc
jmp
inc
fs
xchg
jb,pn
and
xor
push
cmp
add
sub
pop
xchg
in
push
adc
loopne
inc
adc
adc
pop
sbb
xchg
jne
xchg
addr16
loop
mov
loopne
inc
adc
je
add
xor
nop
or
in
aaa
add
and
add
pusha
xchg
and
sarl
in
inc
mov
es
xchg
add
pop
ret
aam
sub
jmp
mov
dec
pop
and
in
nop
cwtl
xchg
cs
xchg
notb
and
xor
ja
into
rol
add
mov
xchg
fisttps
cmp
sub
mov
sbbb
add
mov
les
addb
adc
repnz
inc
or
or
pusha
lea
fsub
jmp
and
and
popf
cmp
enter
out
inc
pop
les
in
test
sub
aam
sub
push
adc
mov
mov
pusha
shll
lcall
sbb
ss
push
or
aam
fisubrs
in
xchg
jbe
add
in
js
add
pop
lret
jae
pushf
outsb
or
xor
scas
add
push
fldt
mov
jo
shl
jle
jg
pop
push
sbb
push
lods
add
sub
mov
xlat
xchg
jae
test
mov
addb
add
mov
test
bound
mov
mov
sub
and
enter
or
adc
stos
jnp
test
add
mov
imul
mov
pop
movsl
call
mov
add
jo
mov
add
push
inc
push
dec
add
es
rolb
inc
add
ljmp
adc
cltd
test
push
out
imul
pop
in
or
xchg
inc
dec
rolb
mov
imull
in
stc
cmc
call
and
mov
push
inc
clc
jne
rclb
cmp
sub
mov
xorl
inc
inc
in
lcall
cmp
and
mov
cmp
mov
repz
jae
lods
sub
sub
pop
or
loope
or
or
or
and
jnp
add
and
sbb
add
dec
sbb
sub
push
jbe
bound
mov
mov
cltd
xor
push
sub
jge
fnstcw
fcomps
jo
out
inc
adc
test
test
xlat
push
popf
and
sti
lea
add
lcall
mov
mov
cltd
pop
pop
mov
cmpsl
inc
cmp
mov
add
or
pop
or
enter
mov
flds
jnp
push
shlb
fcmovb
jmp
clc
adc
adc
fcompl
into
not
cld
lea
test
xchg
movsl
fs
decl
inc
lock
xor
or
add
jmp
dec
arpl
clc
add
mov
fdivrs
rolb
mov
dec
or
inc
push
add
lods
imul
inc
pop
or
inc
pop
int
push
sbb
or
inc
mov
sbb
jg
or
jecxz
rolb
push
fsubrs
or
aad
pop
xorl
and
std
rolb
push
add
adc
or
cmpl
add
add
loopne
push
sub
dec
stc
jecxz
sub
xchg
adc
call
jb
ljmp
lods
nop
movb
dec
xchg
inc
push
lcall
mov
orb
jb
add
cmp
sub
xchg
in
outsl
sub
jmp
fisubs
jp
sbb
add
inc
dec
mov
cmpsl
add
or
or
jge
inc
mov
dec
hlt
insb
mov
lods
and
pop
mov
stos
es
movsb
jle
sub
adc
dec
int
jle
rorb
ficomps
pop
sbb
pop
jae
add
addl
push
dec
lcall
arpl
pushf
pop
inc
mov
sub
daa
push
jge
insl
adc
xor
and
pop
fbld
jge
cmp
repnz
dec
and
xor
imul
xor
jp
movsb
xor
pop
sbb
sbb
fimuls
and
adc
mov
sub
mov
repz
mov
mov
test
or
sub
inc
xchg
push
adc
pop
sub
pop
cmp
lret
pop
dec
push
icebp
dec
enter
and
sub
mov
mov
push
dec
jle
rolb
xchg
adc
mov
push
add
iret
aas
fcoms
push
push
stc
rcrb
xchg
mov
xchg
subb
mov
mov
in
jns
or
and
fs
push
mov
add
push
cmp
jb
inc
push
loope
xor
push
outsb
inc
mov
popf
sahf
ljmp
ficoml
xchg
sbb
movl
sub
ret
sub
rorb
xlat
dec
xlat
push
xor
imul
jns
icebp
ds
or
daa
orb
cld
or
pushf
cmp
adc
adc
into
hlt
sbb
aaa
sub
fs
jge
adc
pop
add
pop
xor
inc
mov
test
rcr
imul
xlat
push
xchg
add
mov
dec
mov
and
mov
jae
popf
cmc
and
loopne
add
test
enter
in
cmp
inc
push
cmp
cmp
adc
or
adc
jl
xchg
lret
cwtl
das
sbb
cmp
add
inc
lahf
cmp
or
je
sahf
jne
sbb
xor
pop
xchg
sub
cmp
pop
jo
xchg
xchg
pop
push
loop
jecxz
add
adc
push
dec
sbb
fistpl
test
testl
sbb
sbb
pop
fildl
add
icebp
test
and
shlb
cmp
sub
int
mov
and
test
movb
mov
push
xor
push
add
inc
mov
jbe
pop
adc
mov
xchg
sbb
loop
mov
push
dec
sub
mov
xor
add
dec
adc
or
aam
js
js
and
inc
push
stos
add
adc
bound
push
outsb
sub
mov
xchg
imul
in
test
into
add
mov
mov
clc
shll
and
call
and
push
and
push
add
pop
popa
popf
jne
inc
addb
popf
jmp
adc
call
fs
adc
js
sbbb
in
add
push
fisubs
mov
xor
inc
xchg
sarb
sub
inc
xor
fs
pop
mov
push
adc
inc
xchg
pop
in
in
jnp
cmp
sahf
ret
ficoml
xor
lahf
dec
or
mov
insl
pusha
or
mov
push
fisubs
mov
test
mov
dec
nop
mov
in
push
mov
stc
cmp
insl
mov
mov
mov
ja
mov
pop
lds
cltd
or
mov
ss
xor
enter
add
jne
pusha
insb
fs
je
adc
imul
push
dec
dec
sahf
test
push
jno
mov
mov
loopne
rclb
ja
push
push
enter
cmp
dec
or
or
mov
rcrb
xor
arpl
mov
push
push
sub
jno
aam
sbb
dec
add
and
shll
cmp
pop
and
out
cmp
mov
push
push
add
jne
mov
push
lods
sbb
dec
or
test
jne
or
add
scas
mov
mov
xchg
call
ret
ljmp
sub
sbb
rolb
sbb
lahf
leave
add
mov
hlt
clc
mov
push
sahf
pop
or
daa
lret
jmp
arpl
lret
or
mov
loop
xchg
test
mov
xchg
sbb
xorl
and
pop
sub
pop
fs
push
ds
test
push
dec
fwait
cs
aad
add
inc
jp
stc
inc
or
movd
push
or
inc
in
pop
dec
sub
sbb
lock
xchg
xor
inc
xor
fisttps
je
cs
xchg
cltd
shlb
rolb
pop
mov
lock
cltd
pop
add
jecxz
in
inc
jp
cmc
add
insl
fs
dec
and
cmp
icebp
lea
sti
jge
push
jp
jnp
vmwrite
cmp
mov
dec
movsb
inc
jge
jo
inc
push
rol
pop
sahf
sbb
cs
sub
pop
int
in
mov
loopne
xchg
inc
seta
out
or
test
push
imul
jge
loopne
xchg
cli
dec
pop
rol
js
pushf
pop
arpl
inc
lret
repnz
jns
mov
lcall
outsb
cmp
fucom
arpl
dec
hlt
cwtl
mov
jb
mov
adc
rorb
jb
and
sub
mov
sahf
mov
movb
loope
std
sub
xor
cwtl
xlat
jbe
add
sbb
or
push
sbb
sbb
or
sbb
jge
stos
fisttpll
xor
pusha
adc
popf
shll
ficoms
popa
imul
push
inc
dec
inc
bswap
andps
fmull
push
enter
ja
cmp
add
xor
inc
into
cmpsb
push
or
cmp
loope
jns
xchg
push
push
loopne
les
pop
mov
rorl
stos
and
ficoml
inc
add
mov
mov
ss
jle
inc
mov
in
ret
sbb
dec
jecxz
mov
inc
adc
xor
lsl
or
push
cli
jp
add
jns
pusha
jl
push
add
aaa
xor
stc
jmp
jle
add
call
sbb
sub
sub
inc
lea
push
pop
or
ret
adc
std
sbb
mov
hlt
mov
daa
push
aad
dec
mov
adc
sbb
lods
enter
pop
imul
mov
cld
jl
mov
nop
scas
mov
cld
mov
daa
add
cmpsb
jmp
push
add
lock
xchg
lock
add
dec
jl
adc
pop
cmp
jl
rcl
adc
push
cmp
lret
shr
xchg
xor
pop
or
jb
fs
dec
push
test
icebp
add
mov
mov
xor
clc
cmpsb
lock
add
cld
fwait
addl
ss
lahf
cmp
das
js
adc
sbbb
pop
pop
je
sub
das
in
mov
ret
pop
notl
mov
inc
mov
rol
dec
cld
pop
popa
cmpb
les
push
mov
push
data16
add
ds
dec
jo
je
and
mov
insb
push
cli
nop
cmp
cs
push
jne
jecxz
pop
push
adcb
xor
dec
hlt
jge
inc
lcall
dec
cli
push
mov
jmp
loope
sbb
add
cmpsl
sbb
mov
aas
inc
sub
nop
or
test
cld
mov
and
jg
dec
sbbl
nop
addr16
mov
jne
mov
das
or
push
cwtl
lea
jo
xchg
cld
push
inc
sub
adc
add
call
push
inc
or
adc
add
add
ss
pop
inc
mov
inc
cmp
mov
and
hlt
inc
pusha
sub
push
jmp
xlat
pop
cmp
add
add
adcb
xchg
ret
mov
clc
mov
pop
push
inc
aas
inc
or
es
mov
or
or
xchg
lock
sub
icebp
and
sub
or
push
adc
jle
icebp
loop
cmp
mov
cmp
inc
test
test
jo
fmulp
nop
jmp
push
xchg
mull
add
pusha
adc
dec
ficoms
mov
je
dec
add
dec
lock
sbbl
adc
and
pushl
addr16
dec
xchg
in
ja
cmp
push
pushl
xchg
xchg
and
dec
mov
loopne
enter
aaa
xchg
mov
mov
in
ja
jl
fdivl
xchg
or
shlb
xchg
or
fs
icebp
adc
lret
je
push
mov
rcrb
dec
or
push
or
adc
in
inc
jo
adc
push
push
testb
xchg
xor
in
or
sbb
add
jecxz
jmp
xchg
cmp
jecxz,pt
pop
dec
dec
xchg
test
lcall
jnp
cmp
pop
cmp
pop
xlat
fmull
dec
roll
imul
push
jmp
or
or
xchg
dec
int
cld
push
repz
adc
lea
jb
data16
sbb
or
xor
push
or
xchg
lcall
scas
cli
mov
in
mov
pop
lea
or
push
push
fdivr
adc
xor
dec
xchg
mov
and
push
dec
inc
pop
push
dec
adc
or
sub
bound
jmp
inc
adc
sub
das
push
jb
mov
sbb
mov
sub
lods
in
inc
and
rorb
popa
in
lret
dec
mov
inc
add
push
roll
sarl
dec
and
pop
bound
mov
or
lahf
or
push
jo
xlat
adc
pop
mov
stc
xor
ror
add
adc
sbb
cmp
jp
pop
mov
mul
mov
sbb
and
aas
loopne
jno
add
aas
add
hlt
or
dec
xor
sub
mov
mov
push
sbb
stos
inc
fs
fwait
cwtl
lock
icebp
ret
data16
scas
rolb
dec
cmc
ret
testl
adc
aad
mov
mov
fcmovnb
lock
push
cmpsb
adc
outsb
cmp
rcl
arpl
test
cmp
mov
add
cmp
in
and
push
cmp
imul
xor
jno
pop
inc
dec
filds
leave
arpl
loope
pop
sub
push
rclb
push
in
incl
xor
pusha
mov
rol
mov
ror
xor
shr
xor
call
mov
rol
xor
shr
xor
add
add
add
mov
adc
aam
call
out
or
jae
or
and
mov
push
adc
fiaddl
sti
add
outsb
sub
jge
jl
sub
iret
xlat
lods
loop
ror
cli
fisubrs
jge
xor
aam
cli
and
and
xchg
push
aam
cmpsb
in
pop
out
cmp
mov
repnz
rorb
aaa
push
test
or
push
or
and
not
ret
rcl
add
add
jo
add
add
xor
push
cmp
fsubr
rcl
sub
or
call
sub
xchg
xorl
ljmp
int
xchg
shr
add
push
xor
fsub
in
dec
rcrl
xor
in
movsb
jb
xor
in
shrb
cmpsl
sbb
lahf
push
cmp
inc
push
push
punpckldq
push
dec
pusha
inc
push
bound
pop
mov
pop
or
mov
xor
jo
les
lcall
in
xor
call
adc
pushf
cmp
pop
cmp
pop
dec
rcl
aam
sti
mov
enter
int3
pushw
adc
out
add
or
jne
and
and
loopne
or
xor
pusha
pop
lods
hlt
xor
add
inc
adc
or
mov
cmp
pop
inc
inc
jo
ret
push
jo
adc
mov
add
mov
popf
rcrb
cltd
dec
push
adc
push
loop
fimull
call
add
pop
xor
scas
leave
jbe
call
mov
lret
push
clc
jp
push
and
add
add
push
jle
push
fdivrs
inc
test
in
popa
jle
jb
ror
inc
push
adc
clc
mov
xchg
cmp
and
stos
sbbb
push
and
cmp
cltd
add
sub
inc
lcall
pop
inc
shr
rolb
inc
pusha
and
sub
mov
jge
shlb
rorb
add
inc
sub
dec
mov
loopne
call
add
inc
add
push
xor
dec
fmull
xor
push
dec
xor
jb
rclb
push
and
mov
pop
dec
or
mov
push
push
nop
data16
nop
and
pop
out
stos
inc
mov
push
xor
aaa
xchg
add
or
rorb
test
pop
adc
add
mov
jl
ret
mov
or
add
sbb
add
add
hlt
xor
push
mov
icebp
icebp
sbb
test
fnstcw
xor
adc
inc
es
adcb
orl
adc
sub
xor
sbb
jo
adc
fmuls
outsl
in
add
and
jbe
mov
push
or
das
lods
dec
into
and
pop
add
sub
mov
js
movsb
and
xchg
cmp
jb
mov
lea
pop
add
mov
pop
cmp
inc
push
xor
decl
sub
lock
or
loop
shl
jnp
lcall
or
mov
notb
adc
aaa
xchg
and
shrl
mov
sub
pop
xor
loopne
rcll
orb
add
lcall
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
inc
loopne
mov
lock
out
std
cltd
lds
or
cmp
jbe
or
jae
fs
and
inc
adc
lea
adc
sub
jae
push
pop
fadds
rep
or
cli
popf
adcl
ljmp
aaa
and
push
pop
stos
call
ror
mov
notl
push
mov
and
into
cmp
jg
imul
cmp
ja
daa
dec
mov
xor
inc
aaa
mov
repnz
push
or
push
enter
imul
push
add
push
sbb
fsts
icebp
mov
add
pop
push
xchg
mov
dec
inc
adc
ret
mov
or
mov
push
clc
test
imul
lods
jg
je
mov
mov
inc
or
je
or
push
jae
adc
ficoml
cmp
jne
jle
or
dec
xor
push
dec
inc
lea
inc
xor
jns
mov
pop
dec
xor
push
movsb
jbe
addl
jge
pop
add
push
sbb
sbb
loop
fimuls
and
cmp
fs
dec
inc
lock
inc
and
mov
or
jp
push
adc
pop
sbb
xchg
add
inc
call
clc
lahf
jno
cmp
mov
mov
lea
in
addl
call
add
xor
or
jbe
fisubrl
fstps
cmp
notb
sbb
fwait
and
cmp
mov
fstl
clc
je
cld
mov
and
inc
in
xchg
in
ja
ss
shlb
push
inc
push
cmp
int
push
inc
push
add
push
pop
inc
mov
push
pop
sub
jbe
cmp
adc
dec
mov
nop
popf
dec
int3
out
pop
cwtl
clc
out
addb
inc
movzwl
cbtw
jb
or
jb
cmp
cmpsb
rcrb
add
fsubr
adc
aas
les
aaa
mov
inc
orl
orl
jns
test
jne
xor
and
dec
unpcklps
or
add
pop
jae
mov
das
jmp
dec
shlb
dec
push
inc
pusha
sub
cmovo
and
sbb
push
inc
call
push
mov
add
cwtl
dec
or
imul
stc
inc
jg
aaa
aaa
mov
or
jge
and
jle
es
insl
aaa
aaa
sub
sub
and
pop
cmp
jl
pop
jle
roll
adc
inc
test
add
jle
push
pop
pop
popa
test
fwait
and
or
jl
jle
je,pn
test
jne
je
outsb
and
test
imul
mov
sub
sbb
sti
adc
fadds
jbe
rol
nop
dec
and
loop
add
or
cwtl
aam
jb
push
push
add
popa
sahf
add
pushl
outsb
xchg
sbb
xor
lret
jp
jecxz
push
jae
add
inc
es
adc
adc
sbb
push
mov
push
push
aam
xchg
lcall
or
xor
push
xchg
imul
icebp
adc
xchg
push
add
add
insb
or
hlt
aam
out
mov
bound
test
adc
loop
out
push
xlat
popa
inc
mov
xchg
pushf
test
pop
jnp
jp
outsl
inc
mov
xor
js
or
movsb
sahf
sub
dec
jno
cld
xor
push
push
push
pop
add
pop
jb
cld
xorl
mov
insb
test
push
out
out
lret
inc
das
mov
or
xchg
sbb
imul
pop
cwtl
xor
fstpl
inc
mov
dec
pop
jle
incl
pusha
cmp
insl
xchg
iret
outsb
push
push
inc
and
dec
rol
jae
mov
jl
fcompl
cmp
je
test
adc
fsubrs
adc
sti
mov
mov
or
add
xor
add
xchg
in
and
mov
add
cwtl
jge
and
inc
xchg
ret
ficomps
add
lods
dec
and
pop
mov
xchg
ret
sbb
lds
scas
fsubs
in
jl
add
cmp
add
sarb
adc
cmp
add
mov
scas
push
or
add
sahf
push
cmp
fbld
inc
xor
and
popa
push
loop
pop
add
outsb
add
xchg
pop
inc
and
add
or
push
and
notl
mov
clc
sbb
sub
je
pusha
sti
pusha
jb
cs
lock
or
jbe
clc
fcomps
add
inc
fisttpl
sbb
lea
mov
push
sub
lods
pushl
or
cwtl
sbb
push
mov
push
outsb
cmc
adc
push
add
jo
sub
sti
shll
jle
mov
sbb
xchg
xchg
jne
lahf
xchg
pushf
lods
sbb
cwtl
addl
xchg
xchg
xchg
xor
fs
or
xchg
jbe
mov
iret
push
leave
or
or
cmp
in
scas
or
xchg
and
inc
xchg
xor
test
or
test
inc
pop
inc
pop
movb
call
pushf
idivb
faddp
add
xchg
arpl
les
xor
cmpsb
fidivs
mov
pop
sbb
pushf
add
mov
data16
inc
pusha
testl
xor
sub
and
adc
cmp
and
cmp
adc
push
push
mov
pop
adc
inc
rcrb
imulb
sbb
lea
push
das
test
dec
adc
ljmp
insl
pop
scas
or
xor
mov
orl
push
cld
cmc
add
cmp
je
mov
cmp
jecxz
lds
add
inc
xchg
ss
sub
loope
jge
pop
and
aaa
add
cmp
sbb
adc
rclb
xchg
out
xchg
das
movsl
dec
insl
movsb
or
add
fsubr
cmp
cmpsl
fnstcw
jo
rorb
push
xchg
into
push
and
test
insl
mov
fs
insb
jne
jl
sub
jo
or
insb
push
idiv
jne
inc
pushl
rolb
ss
inc
dec
rorl
inc
inc
add
cmp
jne
les
aam
adc
jmp
cmp
cmpsb
or
push
inc
xor
call
sbb
dec
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
sub
mov
jl
out
mov
jo
and
jae
xor
add
inc
andb
add
jae
mov
cmpb
je
ja
ja
into
das
ret
or
mov
sbb
cmp
je
pop
sub
xor
imul
insl
add
or
clc
adc
or
jne
arpl
add
mov
dec
cs
sub
and
imul
sub
xor
aas
xchg
lret
cmp
inc
mov
mov
mov
in
or
fsts
incb
and
sbb
push
xor
xchg
ficoml
xchg
adc
das
mov
lock
mov
dec
lcall
outsb
imul
cmpsb
sbb
and
ret
fwait
pop
pop
and
mov
or
rcr
stos
push
sub
in
mov
mov
xor
cmp
xor
jb
filds
mov
pop
sbb
add
lock
popa
mov
adc
data16
imul
add
fs
clc
mov
push
std
lds
or
testb
lahf
in
mov
mov
lock
mov
xchg
mov
sub
jge
cmp
shrb
adc
push
int3
sbb
or
jmp
jmp
movsb
mov
addb
push
jbe
or
lods
inc
nop
inc
push
je
add
mov
shll
dec
sub
cmp
in
or
or
or
jnp
or
add
js
jbe
push
or
cmpl
stos
pop
sbbl
inc
dec
xor
or
and
ss
cli
xor
pop
fimull
jne
sbb
dec
inc
sbb
pushf
shrb
movsb
in
xor
add
jnp
push
je
pop
add
lock
movzwl
addl
cmp
mov
cmp
sbb
adc
mov
shlb
out
femms
mov
jbe
mov
sub
subl
notl
outsl
cmp
shll
sub
cmp
cmp
sarl
mov
ret
add
pusha
and
push
xor
rolb
movb
push
movb
loopne
push
push
jbe
data16
mov
mov
mov
imull
sbb
pop
lods
sbb
xor
xlat
pushf
mov
test
orb
out
dec
inc
and
rcl
ss
xor
or
sbb
es
sbb
pop
data16
mulb
cmovb
push
jg
clc
xchg
out
adc
or
insl
inc
loopne
xchg
shl
and
ja
pop
or
xor
sub
or
sahf
lds
or
inc
dec
add
cmp
add
int3
cmp
fisttps
add
or
hlt
inc
inc
pop
xchg
loopne
dec
mov
push
mov
or
mov
loopne
jns
adc
movsb
cs
pop
sub
and
fcoml
jge
cld
or
nop
cmp
xchg
sbb
mov
pop
popa
push
dec
in
adc
pop
or
scas
fnstsw
test
dec
cld
aam
inc
notb
aaa
ljmp
and
movsb
stc
fcomp
sub
push
pop
sbb
imul
aad
pop
mov
mov
pop
mov
mov
das
inc
adc
mov
adc
or
shlb
xor
push
lods
mov
mov
dec
sbb
push
xor
lcall
and
adc
dec
rclb
dec
jle
cmc
add
push
lods
push
push
xchg
aad
ja
adc
inc
loop
jo
add
dec
lea
mov
lea
sub
add
insb
loopne
bound
repnz
int3
dec
sahf
jno
test
pop
dec
lcall
inc
and
xchg
stos
test
aas
movsb
sub
pop
adc
pusha
adc
mov
pop
or
sbb
adc
mov
inc
mov
mov
xor
cmp
xchg
cmp
or
adc
insl
fcompl
rcr
sti
in
andl
sbb
jo
aas
mov
mov
in
jge
sbb
addr16
add
dec
add
xchg
jo
dec
insb
jo
xchg
out
sbb
add
jo
push
sbb
mov
fcoms
daa
add
imul
lods
sub
and
ljmp
cs
sub
and
jb
sbb
adc
sbb
add
sub
adc
dec
iret
roll
and
sub
das
push
fstpl
mov
rol
push
and
inc
pop
and
push
stos
rolb
cltd
and
pop
loopne
mov
mov
mov
pop
pop
pop
sbb
dec
dec
leave
mov
xchg
or
xchg
sbb
cmp
int
aam
or
addr16
pop
sub
and
mov
adc
push
sub
ja
or
and
incl
and
dec
push
push
xchg
rol
mov
push
dec
mov
or
inc
and
cmp
ret
adc
cmp
inc
mov
mov
inc
inc
test
dec
bound
arpl
mov
push
push
adc
xor
arpl
pop
imul
sbb
xor
outsl
roll
testb
decb
fisttpl
repnz
and
mov
in
sbb
icebp
int3
lds
in
jnp
and
leave
jmp
cmpsl
jmp
xchg
pusha
sbb
dec
inc
pop
xchg
dec
sub
jp
mov
cmpl
xor
nop
push
mov
mov
inc
cmp
mov
jmp
into
or
mov
push
fwait
inc
movsb
movsl
jg
add
pop
movsl
jb
jnp
push
mov
xor
pop
mov
mov
clc
mov
jge
cmp
outsl
pop
sub
pop
inc
rolb
repnz
mov
mov
or
testb
in
add
push
mov
add
loop
xlat
loopne
rolb
add
and
mov
pushl
inc
cmp
mov
fnsave
lock
adc
mov
inc
rolb
push
sub
mov
push
inc
mov
lods
fimull
mov
sub
out
and
and
mov
decl
je
cmp
push
push
add
movb
sbb
mov
sbb
inc
xor
into
dec
in
mov
pop
out
dec
inc
imulb
adc
inc
mov
add
fs
dec
leave
fcoms
imull
mov
sbb
jne
jae
jbe
lds
inc
insb
jmp
jbe
clc
fucom
mov
xorl
xchg
enter
push
push
ret
dec
aaa
jno
mov
ret
data16
xor
pushf
and
roll
in
inc
push
not
xlat
mov
arpl
clc
repz
pop
lcall
jl
movsb
jmp
push
pop
stc
sbb
orl
jg
mov
push
push
lea
les
inc
lret
ret
push
dec
or
scas
ljmp
sbb
cmp
out
in
add
adc
push
push
lcall
adc
sbb
push
cmp
data16
icebp
pusha
cmp
lcall
insl
mov
pop
pusha
sub
sbb
add
in
push
movsb
ljmp
inc
jg
pop
mov
fcos
rorb
sub
add
dec
clc
sub
into
jle
add
jbe
shrb
call
push
cmp
jae
push
add
mov
add
sub
or
js
lret
ficompl
inc
movsl
inc
fcoml
mov
xchg
cltd
inc
test
pop
cmp
fwait
pushl
jb
xchg
cwtl
std
push
cltd
cltd
mov
add
cmp
or
add
outsb
ret
mov
dec
pop
imulb
mov
mov
push
jg
aas
lock
mov
mov
cmp
jo
adc
jne
cmp
fistl
and
fisubl
repz
ja
adc
es
inc
or
mov
orb
and
lods
jle
adc
or
sbb
adc
cs
orl
add
sub
cmp
cmc
pop
cwtl
mov
sub
add
ss
mov
inc
das
sahf
push
pop
lds
pop
fisubrl
add
push
mov
add
fldl2e
adc
insb
xor
mov
rcl
ficompl
das
mov
mov
inc
push
rcl
sahf
ret
jge
icebp
pusha
dec
xchg
dec
loop
sbb
mov
or
inc
add
mov
cmp
daa
push
scas
and
data16
dec
jp
ja
jmp
out
sub
test
cmp
xchg
mov
je
sub
bnd
xchg
add
in
sub
sub
push
add
adc
js
repnz
nop
sbb
ret
mov
cli
shrb
add
cmpsb
cmp
je
or
and
lock
cmp
mov
cmp
cli
mov
mov
les
pop
ret
sub
sarb
pop
fs
jno
mov
loope
sbb
push
sub
push
mov
in
adc
call
jmp
int3
loope
push
addr16
ret
loopne
aad
data16
jne
ds
and
add
mov
or
mov
pushl
cmc
ret
sbb
aad
jg
pop
mov
and
push
mov
xor
push
stos
inc
add
xchg
aam
and
imul
adc
ss
insl
loop
cmc
in
mov
sti
repz
fcmovnb
mov
dec
sbb
push
xchg
mov
mov
out
lea
push
stos
cmp
jl
pop
scas
sub
in
ss
lcall
insb
adc
pop
movsb
fcmovnb
mov
lds
jnp
arpl
stc
ja
and
mov
ss
jb
sbb
cmp
pop
test
gs
les
hlt
ror
mov
inc
push
dec
sub
add
ret
push
loope
loope
mov
jmp
pop
aam
das
or
push
movsb
mov
sbb
mov
in
les
test
testl
xchg
insb
daa
mov
out
test
lea
sbb
or
push
push
mov
push
jle
enter
xchg
aas
and
jo
push
dec
and
adc
sub
jg
jge
cmp
insb
bound
pop
adc
inc
or
sbb
ds
jmp
add
xor
aaa
xchg
aam
bound
rcrb
pcmpgtb
pop
jno
test
add
cwtl
push
dec
adc
in
cmpb
rorb
data16
das
inc
push
dec
add
inc
add
add
fcoms
test
outsl
pop
mov
fstpl
xchg
push
ret
add
jo
adc
jl
add
push
inc
enter
call
cmp
jne
jbe
dec
cmp
lret
push
shll
pop
cmp
xchg
imul
pop
ret
pop
xchg
pop
add
lods
das
push
mov
adc
mov
mov
imul
inc
mov
loope
dec
popf
jo
aas
hlt
sub
mov
add
push
notl
sahf
push
xor
or
jle
jno
xchg
rclb
xor
loope
inc
das
xchg
inc
loopne
nop
and
add
movsl
add
pop
push
ret
pusha
rol
adc
loop
mov
add
test
and
adc
mov
rclb
scas
or
adc
xchg
xor
or
icebp
nop
inc
imul
add
stc
pop
rclb
in
es
mov
xor
xchg
pushf
inc
adcl
cmp
cmp
loop
das
cmp
add
push
clc
fistpl
adc
push
jmp
fadds
sub
push
sub
mov
and
push
andl
sbb
scas
icebp
lcall
or
ret
sbb
dec
inc
sbb
add
scas
mov
push
mov
cmc
xchg
loope
or
add
cld
adc
cmp
or
pop
mov
pop
jo
dec
push
cmp
or
adc
sbb
inc
xor
cld
pop
les
sbb
sbb
mov
jne
sub
jl
loopne
add
pop
lcall
movl
xchg
pop
and
pop
inc
add
lods
shlb
push
ficoms
mov
sub
loope
lret
push
jl
push
add
dec
lea
xor
fmuls
mov
xchg
adc
or
sub
and
cli
dec
mov
and
mov
cltd
lock
fadd
pop
lea
sub
push
test
inc
or
and
sbb
mov
push
xor
pop
icebp
and
adc
dec
das
inc
adc
dec
or
dec
and
pop
rolb
mov
jnp
mov
adc
out
mov
rorb
mov
aad
pushl
inc
push
test
xlat
push
hlt
shrb
add
mov
mov
mov
cmp
lock
add
push
test
cmp
push
jmp
and
push
jne
and
adc
out
jno
mov
ss
and
sub
std
cs
sub
and
and
fstl
test
xchg
rol
mov
in
movb
mov
sub
mov
andl
sbb
stos
xchg
mov
mov
or
lret
xor
push
mov
sbb
inc
push
jmp
push
cmpsl
add
xor
add
aaa
leave
ret
pop
mov
cmp
adc
out
mov
adc
jmp
or
call
and
adc
add
mov
or
sti
xor
inc
push
pop
ss
xchg
adc
dec
adc
inc
pushf
out
mov
adc
stc
adc
add
dec
or
jno
and
clc
in
loope
shr
ret
push
dec
mov
ret
push
jns
rcl
data16
jecxz
ret
push
sbb
pusha
icebp
xchg
add
mov
mov
inc
push
aam
call
xchg
lret
dec
movsl
mov
test
fldcw
pusha
xor
int3
push
lds
lret
shlb
inc
out
or
insl
data16
cmp
sub
sub
ljmp
xor
fsts
aaa
xor
mov
cmp
jne
xchg
xor
aam
lock
cmp
jo
mov
rorl
pop
pop
mov
cmpb
lock
inc
or
ret
cli
negl
add
adc
jmp
push
add
inc
mov
mov
dec
sbb
test
jmp
movsb
xchg
pop
adc
fcoms
imul
daa
lret
test
ret
arpl
mov
add
ljmp
pop
addr16
pop
cmc
inc
add
add
inc
xor
sbb
jb
lock
push
and
adc
jmp
dec
cmp
add
sub
inc
sahf
adc
add
adc
jbe
push
les
je
mov
push
mov
dec
ret
mov
and
insb
dec
cmp
push
or
jne
andl
jae
aas
fmuls
push
jp
jmp
mov
add
xchg
pushf
leave
fs
sub
mov
dec
pop
cld
stos
mov
mov
mov
je
dec
je
dec
mov
cmpsl
xor
or
insb
sbb
test
orl
in
dec
cmp
lods
mov
ds
add
mov
das
xor
loop
dec
adcb
jmp
sub
or
inc
sahf
repz
or
jne
cmp
and
sbb
push
dec
out
sub
icebp
or
mov
xor
and
insl
adc
subl
insb
loop
cs
and
adc
adc
xchg
rclb
fs
xchg
mov
pop
arpl
push
push
fisubrl
add
fnstcw
add
push
ret
test
add
iret
lcall
push
cmp
xor
pop
xchg
sbbl
or
sub
jge
stc
std
add
int3
jo
lock
ret
add
pusha
nop
pop
sub
test
repz
mov
mov
inc
nop
dec
xchg
add
data16
loop
sbb
inc
cmp
adc
xchg
cmp
cmp
mov
mov
rcrb
mov
mov
leave
mov
push
inc
dec
imul
sbb
shll
lea
sub
fwait
jno
or
nop
loopne
add
mov
and
dec
cld
mulb
in
cmp
je
sub
add
mov
sbb
cwtl
xor
adc
lods
filds
mov
xor
sub
xchg
mov
add
jo
lret
mov
sub
or
push
fstl
inc
pop
ljmp
and
in
inc
mov
fcompl
xor
mov
ret
orb
ficoml
add
xchg
std
loop
and
lea
and
inc
adc
out
cmp
cltd
test
shrl
or
add
sbb
inc
add
sub
adc
inc
test
add
mov
jo
loopne
adc
fcoml
or
rcll
mov
sbb
push
jne,pn
mov
data16
pop
lea
lahf
test
lock
push
cmp
and
sub
mov
orl
add
mov
xor
cmp
cmp
jo
push
fs
pusha
pop
insb
in
cmp
pop
jbe
sbb
jnp
mov
dec
clc
jne
mov
push
test
cmp
mov
jnp
into
sub
sbb
xor
mov
pusha
sub
sbb
xchg
mov
hlt
mov
hlt
jns
test
ljmp
addr16
mov
xor
test
lods
shrb
call
pusha
sub
sbb
flds
lds
push
js
fildl
cld
loopne
fnstenv
mov
cld
loope
mov
or
repz
xor
mov
add
lock
sub
xchg
cld
clc
pushl
shlb
les
cmpl
andb
or
dec
push
sbb
iret
dec
cmp
or
jge
cs
xor
inc
movl
cmp
inc
mov
fisttps
lods
and
mov
mov
or
xorb
sub
sbb
sub
lret
mov
ss
adc
cmp
out
adc
inc
inc
fsubl
push
sub
or
mov
inc
cmp
add
aad
inc
lea
push
push
lods
xchg
jo
push
or
adc
or
push
adc
int3
cmpl
jne
cmp
paddb
cmp
adc
jmp
fwait
ja
pop
dec
jo
xor
loop
or
daa
cmp
add
test
adc
cmpsl
sub
pop
sahf
cmpsb
sarl
nop
imul
xor
inc
bound
mov
sub
das
mov
inc
sub
mov
push
hlt
ret
push
pop
outsl
add
cmp
sub
jnp
or
pandn
mov
rorb
fcmovb
insb
cmc
test
add
loopne
pop
or
loope
movsl
and
xor
or
loopne
lcall
in
or
adc
into
fcomps
addb
inc
adc
or
in
mov
mov
sti
jne
adc
sbb
fdivrs
rorb
fwait
sub
adc
push
push
mov
fbstp
and
mov
mov
add
fnstenv
cmp
ss
inc
inc
data16
or
cli
or
add
or
and
dec
add
push
jbe
cmp
nop
lret
hlt
jecxz
sbb
jg
loop
cmp
jb
lods
xchg
xchg
lds
xlat
sbb
clc
mov
inc
adc
dec
mov
and
adc
cmpsl
mov
leave
rolb
cmpsb
test
adcl
cmp
fimuls
or
mov
lret
mov
hlt
mov
imulb
imul
sbb
pop
cs
add
out
test
sarl
cmpb
test
dec
das
fdivrs
adc
push
das
xchg
inc
outsl
es
jmp
mov
aaa
pop
jnp
mov
mov
or
inc
iret
jmp
mov
sti
jns
jo
sub
hlt
cs
adc
nop
sbb
adc
arpl
arpl
shlb
es
push
add
xchg
add
dec
dec
xchg
lods
inc
xchg
push
cld
add
mov
push
in
stos
cmp
orb
mov
push
push
in
xchg
push
addr16
jb
addr16
je
mov
sahf
cmp
xor
test
or
pop
fsubrs
aam
cs
mov
insl
inc
cmpb
add
push
jae
repz
loope
ds
jp
push
mov
insb
jmp
les
jge
outsl
mov
push
popf
lret
sub
sahf
outsb
add
mov
clc
int3
je
not
cli
add
sub
popf
mov
xchg
mov
adc
mov
and
sbb
cmp
test
mov
pop
mov
add
sub
mov
ljmp
insl
dec
pop
fwait
inc
mov
mov
into
stos
into
fs
dec
push
adc
insb
sub
jmp
aam
xor
or
pop
or
push
dec
jmp
push
push
pop
add
frstor
loopne
push
lret
into
mov
mov
pop
je
test
push
add
movsb
xor
lret
into
or
jbe
popa
push
pusha
sub
inc
add
in
inc
scas
hlt
or
sbb
cmp
pop
pop
enter
out
in
out
xor
cmp
test
dec
pop
movsb
sti
out
push
mov
decb
enter
and
cmp
insl
test
mov
jmp
add
push
inc
gs
mov
in
clc
add
push
cmpl
lods
loopne
or
incb
or
repz
and
sbb
or
jns
push
lret
sbbl
and
mov
repnz
dec
inc
adc
data16
stc
fprem1
cmpsb
ja
or
fnsave
ror
fcoms
and
sub
xchg
test
jne
dec
xor
and
push
pop
push
hlt
add
mov
imul
gs
add
mov
loope
adc
push
cmpsb
xor
xchg
inc
daa
std
pusha
not
mov
cmpsl
jl
sub
outsb
jo
cmp
insb
loope
out
xchg
divb
pushl
jmp
mov
movsl
inc
ret
add
xor
cltd
push
in
push
pop
mov
or
ficomps
lea
test
int
ret
jnp
lea
pusha
pop
rcrb
mov
push
fdivrs
roll
ret
jge
into
push
dec
add
sbb
shlb
mov
inc
jmp
cmp
jo
adc
in
dec
andl
inc
mov
mov
addr16
or
mov
add
push
dec
adc
adc
lea
insb
mov
adc
jg
inc
and
push
mov
and
mov
fwait
mov
xlat
scas
xchg
cmp
jnp
sbb
icebp
sub
loope
dec
add
mov
xchg
mov
test
dec
lret
mov
xor
rorl
cmp
ja
jae
sub
pop
mov
int
or
enter
ljmp
dec
mov
push
insb
repz
push
pop
rcll
fs
add
nop
dec
adc
addb
adc
sbb
inc
inc
mov
xor
sub
leave
push
shll
sub
or
mov
iret
int3
sub
add
data16
pop
outsl
push
gs
jle
sub
inc
jecxz
or
lea
enter
add
rclb
adc
xchg
fstpt
push
adc
cld
sub
pop
test
lds
loope
inc
addl
dec
lock
fildl
push
pop
add
adcb
add
xor
cmp
lods
xchg
imul
iret
imul
mov
rcrb
leave
scas
stos
shlb
test
enter
lods
xlat
push
jp
mov
mov
add
mov
inc
xorl
ret
mov
cwtl
repz
adc
jmp
or
hlt
aam
jmp
adc
or
fimuls
insl
rolb
ret
add
pop
xor
loope
flds
pop
and
inc
sub
mov
aam
jmp
rolb
push
out
xor
cmp
fwait
inc
repz
out
cmp
xor
clc
add
rcll
add
inc
xchg
or
push
pusha
dec
or
jle
adc
add
outsl
aaa
repz
push
jae
lea
push
sub
fdivrs
incb
push
mov
movsb
mov
dec
pop
jmp
sub
or
nop
xchg
or
popa
jo
add
insl
ja
call
dec
mov
icebp
xor
out
shl
pop
insb
ss
cmp
push
cmp
jae
inc
jmp
push
bndldx
jp
sub
xchg
or
lea
adc
ret
fdivrs
cmp
add
sbb
ret
fmuls
imul
sub
clc
andl
mov
mov
dec
iret
fcompl
lret
imul
add
inc
js
cmpb
adc
jae
hlt
sub
daa
sub
adc
push
add
adc
mov
cld
cmp
jb
lods
mov
lret
push
inc
test
sbb
clc
pop
call
push
jl
daa
jo
bnd
mov
push
cmp
push
dec
pop
push
sub
push
dec
mov
cmp
imul
pop
mov
lods
or
add
mov
and
pushf
in
repnz
out
or
inc
add
cmp
lcall
mov
inc
movsl
stos
mov
sub
cld
pop
pusha
call
add
push
cmpb
push
or
andl
js
loopne
pop
icebp
lret
push
jnp
addl
aaa
mov
or
inc
or
mov
sub
push
inc
or
push
mov
adc
bnd
or
pop
and
push
adc
or
clc
and
mov
jmp
mov
adc
shlb
lea
sbbl
cli
ja
cmpb
in
ret
jp
in
push
mov
xchg
xorb
xchg
stos
daa
mov
bound
iret
mov
sub
and
cmp
mov
xchg
push
andb
cmpsb
imul
imul
outsl
add
xchg
in
in
inc
jmp
xchg
mov
push
jns
out
dec
sbb
push
add
cld
aaa
lods
mov
sbb
in
hlt
pop
pop
xor
mov
or
mov
xchg
sahf
icebp
push
cmp
lods
es
lods
push
mov
cmp
testb
or
and
testb
test
jl
push
sub
mov
dec
pop
cli
inc
inc
sub
push
pop
adc
into
cmp
pop
inc
lret
inc
shr
add
cmc
or
push
jecxz,pt
movl
dec
roll
adc
dec
lods
xor
filds
fsubs
inc
test
push
inc
jbe
dec
es
adc
jmp
mov
sbb
adcl
jnp
xchg
adc
sbb
loopne
cmp
push
push
mov
mov
icebp
cmpl
pushl
xor
leave
cmp
mov
cmp
mov
adc
ljmp
shl
adc
dec
cmc
orl
or
push
jbe
mov
mov
out
xlat
out
enter
fs
jmp
xchg
mov
adc
xor
popa
fcoml
jmp
inc
adc
rorb
rcl
ds
pushf
or
popf
mov
cmc
mov
push
mov
outsl
mov
shrb
loope
push
fdivl
fstps
imul
fisubl
adc
xchg
pslld
pop
pop
sub
fcomps
mov
mov
adc
loop
or
cmpsb
sbb
add
or
loop
out
sub
mov
adc
xchg
outsl
fidivl
stc
mov
mov
mov
js,pt
jge
jo
mov
cmpsb
pop
add
lea
orb
xchg
pop
mov
xor
cmpsb
in
push
dec
dec
pop
adc
fnstsw
movsb
jle
jne
mov
fldt
test
stos
cmp
add
xchg
pop
test
push
pop
jg
fstl
pop
ret
test
lock
fwait
test
pop
inc
mov
enter
mov
mov
fistl
nop
fisubs
adc
mov
in
outsb
test
hlt
outsl
popf
jo
cmp
push
mov
testb
jbe
shlb
jl
or
dec
mov
xchg
iret
shlb
add
stos
push
or
mov
mov
jns
mov
and
mov
out
loopne
mov
je
mov
dec
cmp
stc
xor
int3
cmp
shrb
cmp
inc
or
sahf
sub
andl
mov
pop
lods
fsubrl
add
xor
xor
scas
push
ret
aaa
inc
adc
scas
ret
xchg
dec
dec
sub
lahf
dec
mov
fidivl
jle
and
inc
cmp
jg
rcrb
push
cmp
fisubrs
out
jbe
ss
jmp
push
js
jbe
mov
jmp
jnp
insl
das
jle
int
push
mov
int3
adc
pushf
insl
cltd
dec
add
cmp
cmpb
adc
lretw
mov
dec
pop
addb
dec
add
lret
cmpb
push
stos
adc
pushf
testb
ret
xchg
sub
add
sub
mov
pop
mov
cmp
jne
test
jmp
sbb
sub
call
sub
lcall
vsubsd
inc
or
add
inc
mov
dec
fimuls
xchg
xchg
fs
dec
adc
sar
ds
mov
mov
popa
lcall
adc
sbbb
pop
pop
ret
mov
xor
js
or
pop
jmp
sub
or
inc
adc
mov
push
or
sarl
xor
sub
sahf
add
and
and
ds
rclb
push
xor
jl
push
cmp
aam
aam
ds
mov
js
adc
dec
ret
dec
loopne
cmp
or
jo
pop
sbb
cmp
or
or
out
inc
push
add
dec
sub
jns
and
sub
int
or
call
or
mov
push
cmp
add
jno
aaa
or
sub
inc
or
or
xchg
jmp
and
les
test
sbb
adc
ficomps
ret
adc
mov
sbb
inc
mov
in
imul
fisttps
pusha
mov
enter
in
xor
push
sbb
sti
or
sbb
mov
mov
pop
in
jo
sub
cmp
sbb
repz
call
mov
pusha
add
sbb
or
cld
mov
test
dec
mov
lods
nop
lods
push
imul
loope
pop
icebp
cmpl
or
inc
add
pop
push
pushl
pushf
pop
mov
mov
in
fs
pop
push
jmp
out
ret
imul
rorb
enter
pop
aad
pushf
popw
xor
fcompl
dec
je
or
incb
and
fcoms
repnz
jb
add
nop
loop
cld
sub
fistl
cmpl
jne
inc
pop
daa
jne
sbb
cmpsl
mov
xchg
stos
add
inc
add
shll
prefetcht1
insb
sbb
out
mov
aas
xor
out
cmp
jle
sbb
movsb
flds
cmp
icebp
jecxz
movzwl
movsl
add
jl
pop
mov
lea
inc
dec
stos
sbb
jne
push
add
pop
push
push
loopne
inc
xor
push
das
jne
inc
add
pop
push
inc
sar
test
jmp
stc
loope
scas
jne
repz
add
sub
mov
in
push
arpl
add
dec
insb
mov
or
cld
sbb
push
push
insb
mov
nop
mov
or
dec
jo
dec
dec
sbb
lcall
push
cmp
int3
aas
cmpsl
shlb
push
push
sub
inc
jo
jne
addl
pushf
pop
xlat
and
add
or
and
clc
jnp
subl
pop
push
inc
jg
orl
jne
dec
popf
jns
ds
add
add
add
lds
inc
mov
in
fisttps
pusha
jo
sub
jl
sarl
sbb
pop
ret
mov
std
das
lcall
je
cmp
mov
xchg
add
cmp
adc
scas
ss
jmp
sub
xor
jne
jb
push
adc
add
add
mov
or
in
pop
cmp
rcr
dec
popa
mov
push
xor
lret
or
imul
repz
xrstor
cmp
inc
sbb
sti
push
pop
mov
push
add
sub
insb
pop
outsb
adc
jae
dec
and
sbb
data16
jmp
sbb
push
out
jecxz
cli
dec
mov
add
movsb
sbb
ja
int3
jne
jg
add
ret
lret
xor
loope
inc
sbb
mov
cmp
insl
sub
subb
movsb
and
int
cltd
adc
pop
add
dec
ret
mov
xor
mov
push
push
mov
sbb
xor
pop
leave
or
inc
mov
sbb
xchg
inc
lds
jo
lds
dec
push
push
aad
notl
mov
and
sbb
mov
push
or
and
loop
fistl
scas
rcrl
add
ror
outsl
scas
inc
lock
rorl
sbb
mov
cmp
sbb
icebp
jb
or
sbb
roll
add
inc
outsb
lock
cmpb
leave
jmp
pop
adc
push
sbb
pop
xchg
and
jne
adc
bswap
pop
xor
scas
lret
into
jne
data16
sbb
jl
out
adc
stc
loope
add
xor
mov
jmp
push
dec
pop
pop
xor
dec
and
mov
or
cmp
inc
loopne
fstp
xor
cwtl
dec
adc
mov
add
xor
adc
movsl
decb
insb
inc
mov
cmc
adc
jo
jno
pop
sbb
jne
cmp
ret
add
push
imul
push
or
sbb
push
loope
enter
dec
iret
jne
and
jae
nop
xchg
shrb
dec
rorl
sub
push
test
xchg
aad
sbb
and
add
andl
push
sub
and
jno
jb
sti
arpl
popl
sub
mov
popa
sub
push
pusha
and
sub
jbe
push
or
js
shlb
mov
lea
hlt
jo
mov
mov
cmp
and
push
pop
sbb
inc
or
xchg
pop
add
add
add
and
mov
and
mov
pop
cmp
dec
stc
xor
jbe
jp
and
fwait
imul
loope
int3
cmc
js
outsb
dec
rorl
das
mov
mov
insl
and
lods
cmp
add
fdivs
dec
inc
ja
push
int3
mov
push
cltd
cmp
push
adc
or
xchg
loopne
or
fwait
imul
imul
shlb
loopne
lock
bound
pop
adc
inc
sbb
add
pusha
fnstenv
mov
sar
pusha
dec
adc
cmp
sub
mov
jbe
adc
in
push
out
sub
or
pop
add
cmp
insl
loopne
sbb
or
icebp
fadd
call
inc
adc
and
dec
adc
or
and
inc
cmpsb
fisttpl
sub
lock
loopne
fcoms
adc
insl
add
dec
imul
inc
test
cmpsl
scas
jl
dec
add
adc
push
inc
in
and
repz
idivl
cmp
fwait
inc
jg
or
push
mov
ss
aam
sbb
subl
adc
rcrl
push
js
insb
mov
xor
push
pop
pop
xchg
into
mov
aas
pop
cmp
mov
sbb
push
outsb
pop
in
jle
popa
ret
and
dec
pop
dec
or
adc
jne
adcb
xchg
cmp
in
std
stos
fs
xor
push
pop
jle
in
out
sbb
jecxz
push
scas
add
push
in
dec
push
lods
mov
insb
imull
aaa
in
cld
inc
cmp
call
cmpsb
je
mov
jo
sar
sarb
xorb
testl
filds
cs
out
add
ja
mov
mov
jae
mov
je
lock
add
push
cmp
jmp
add
sub
pusha
inc
aas
je
sar
xor
repz
loopne
ss
mov
out
xor
or
jo
sbb
dec
test
inc
loope
es
inc
xorl
loopne
pop
cltd
daa
ficoms
sbb
ret
fisttpl
add
adc
movsl
lds
movsb
out
out
lds
call
out
loop
push
add
dec
jnp
xor
jp
adcb
lea
pop
or
and
push
out
jb
mov
sub
adc
jmp
in
pushf
cs
sub
pop
lds
shll
lods
scas
pop
inc
mov
mov
es
popa
test
pop
jbe
rolb
or
das
aam
sbb
push
or
mov
lret
mov
mov
inc
adc
lcall
mov
mov
mov
inc
lock
xchg
les
movsb
cmp
in
pop
clc
pop
addr16
test
pop
testl
cmp
and
inc
push
outsb
push
push
and
adc
cmp
sbb
jge
arpl
xor
cltd
bound
add
push
bound
add
movsl
push
push
mov
add
push
adc
jbe
jne
repnz
cmp
push
decl
loopne
in
push
mov
ret
ffreep
push
push
int
xor
roll
dec
adc
add
or
xlat
and
mov
or
pop
je
jmp
or
push
push
movl
andb
jns
and
and
cs
inc
sbb
sbb
rcrb
mov
cmp
push
daa
sub
sub
cwtl
mov
and
shr
ljmp
mov
icebp
jnp
mov
bound
dec
mov
and
sub
aaa
mov
out
pushf
cmp
mov
cmc
push
mov
pop
sbb
outsb
dec
inc
pop
pop
and
outsb
mov
gs
and
orb
xor
and
and
inc
adc
pop
or
fdivrp
mov
or
adc
sub
mov
sbb
sbb
push
adc
movsl
xor
sbb
cltd
outsb
pop
and
mov
xor
sub
inc
mov
stos
pop
in
pop
loop
lahf
pushf
push
jge
cmp
push
push
push
lea
sbb
push
jmp
or
mov
push
dec
add
adc
repz
sbb
pop
je
xor
test
daa
sbb
cmp
add
mov
jne
and
cs
fimull
shl
les
pop
cmp
je
orl
xchg
push
rol
jno
add
fcoms
rorl
stos
les
sbb
adc
shll
repz
mov
xchg
jmp
mov
je
movl
test
adc
in
shl
push
sbbl
pop
or
loopne
jle
rcrb
js
xor
sub
nop
sbb
or
jne
sub
mull
add
sub
dec
inc
clc
push
xchg
jle
xchg
mov
pop
jmp
adcb
jbe
call
inc
popa
jae
cmp
add
and
clc
jg
jg
mov
xchg
je
movq
movaps
and
shlb
jle
adc
outsb
xor
cli
rcl
lret
mov
xchg
ljmp
and
lret
sub
xor
jg
mov
lock
adc
jnp
mov
fidivrs
xchg
or
add
adc
push
add
adc
mov
popf
mov
pop
add
fadd
roll
add
shl
mov
adc
addps
int
add
ja
fcmovb
sbb
sbb
and
je
imul
add
jns
ja
sub
inc
or
les
pop
and
adc
notrack
xchg
adc
pop
dec
dec
and
pop
xor
addr16
push
push
ret
jge
mov
test
ret
mov
pop
enter
and
cmc
pop
sub
and
popa
add
pop
add
adc
pop
loope
dec
daa
mov
and
je
es
movsl
pop
clc
popa
pop
not
fidivl
shlb
fimuls
inc
jb
into
mov
orl
mov
xchg
mov
call
cmp
mov
inc
inc
add
ja
jle
mov
cmp
mov
subb
mov
mov
cmp
jne
jb
sbb
subb
lds
aaa
mov
shl
testl
mov
js
mov
cmpsl
and
jnp
repnz
scas
or
fmuls
pop
or
add
dec
push
stc
aam
sbb
cli
add
ljmp
sub
hlt
fcomi
add
jp
pusha
sub
js
stc
addr16
adc
dec
jmp
push
mov
push
xchg
clc
push
pop
add
rclb
xchg
inc
push
popa
frstor
mov
mov
aad
mov
adc
inc
cmp
jne
inc
cmp
pop
inc
movsl
mov
bound
and
xchg
mov
and
inc
xor
imul
mov
push
push
sbbl
sbb
nop
or
inc
inc
cmp
jb
add
cmp
add
sahf
lret
adc
dec
adc
push
add
push
push
lret
pop
mov
adc
or
push
shrb
or
add
pushf
sub
add
push
mov
pusha
mov
cs
and
inc
or
jg
les
inc
hlt
cmp
jecxz
pushf
shll
dec
inc
outsl
push
loop
fcmovne
mov
rcrb
nop
mov
shl
shlb
dec
leave
shll
daa
hlt
sbb
scas
or
inc
pop
cmp
dec
shl
mov
mov
mov
inc
inc
cmp
aam
pop
pop
mov
lret
jne
sbb
js
loope
jg
jmp
jnp
ret
sti
xor
pop
js
dec
xchg
and
jle
and
add
adc
sub
in
ret
cmp
fs
loop
seta
dec
adc
outsb
sbb
les
mov
in
sub
ret
outsb
loopne
sbb
push
ficoms
cld
jae
sti
lea
xlat
imul
test
or
and
jns
xor
inc
push
cmp
xor
xchg
fiaddl
stc
fs
inc
push
movsb
icebp
jg
sbb
mov
push
ljmp
bound
push
cmp
dec
or
adc
jmp
dec
js
add
or
cmp
or
xchg
push
imulb
shll
and
data16
jne
idivb
pop
or
movl
stos
jle
mov
test
inc
or
cmpsb
adc
sub
in
addb
je
icebp
push
sub
inc
scas
mov
dec
movsl
add
lods
adc
inc
or
inc
sbb
cmpsl
inc
testb
rolb
adc
xor
sahf
ljmp
add
outsb
add
clc
aaa
shrb
in
cmp
cli
pop
jl
jg
ret
mov
inc
xchg
jbe
push
lods
or
jo
ret
hlt
out
cmpsb
test
xor
pop
div
or
or
aam
inc
or
les
inc
imul
in
andb
jo
mov
add
pushf
es
cmp
jae
sub
sub
add
inc
sbb
xchg
push
xor
adc
add
add
ficomps
sbb
adc
xor
pop
nop
inc
mov
test
gs
je
fwait
jle
push
and
push
and
add
incl
lock
ss
push
and
out
pop
push
fcmovnu
add
jb
xchg
shll
shll
xchg
xor
movb
jb
mov
push
dec
sbb
sbb
mov
stos
lods
lds
repz
fsubrl
push
or
pop
pop
fsts
aam
push
mov
fstl
jl
daa
xchg
mov
scas
out
and
js
clc
sub
xchg
add
sbbb
mov
rolb
sbb
mov
dec
lea
fisubs
pop
outsb
mov
sub
sbb
pop
adc
les
jo
shll
sub
xchg
mov
divl
xor
leave
ret
dec
pushl
push
jp
pop
lods
mov
cltd
xchg
dec
mov
cmp
je
cmpsb
fsubl
ret
mov
lahf
push
inc
nop
ffree
pop
pop
push
cmp
xchg
std
sub
lds
bound
idivb
je
aad
mov
cwtl
mov
mov
pop
rolb
lret
loopne
and
or
fstl
and
leave
mov
push
ja
push
and
loopne
mov
adc
jo
pop
dec
clc
rcl
pop
hlt
pop
cmp
mov
cs
scas
insb
lods
mov
testb
mov
mov
mov
mov
rolb
loopne
mov
dec
jmp
mov
sub
and
adc
ds
push
aas
push
sbb
nop
fmul
pop
push
jmp
sahf
add
inc
adc
scas
out
pusha
mov
lock
popa
ds
sbb
sub
push
or
or
push
lcall
clc
mov
ret
and
or
mov
inc
pusha
lret
dec
and
or
and
pop
aas
add
rol
pop
xchg
add
imul
bound
fldl
inc
out
jp
mov
xor
mov
add
lds
jl
push
inc
or
inc
sub
fs
pop
test
mov
push
scas
mov
cmp
push
cs
fnstsw
jne
mov
sbb
jno
or
mov
in
mov
adc
inc
mov
das
jo
add
pop
addr16
ds
pop
cmc
xor
enter
and
test
sbb
pop
cmp
push
jge
pop
mov
mov
fistpll
and
in
out
clc
movsl
mov
inc
mov
test
and
or
enter
push
lret
inc
cmpsl
bound
scas
inc
inc
fsubl
and
in
test
add
ds
xor
push
cwtl
adc
push
adc
fstps
sub
cs
leave
or
adc
pushf
or
and
icebp
mov
mov
pusha
add
inc
jb
inc
pop
loope
popa
imull
add
dec
fcoms
sub
in
jns
or
and
adc
cmp
pop
in
test
je
dec
xor
pop
xor
sub
bound
adc
lea
repz
imul
ss
push
pop
add
in
jns
add
daa
movb
add
adc
dec
add
inc
sahf
push
mov
jno
jle
add
pop
enter
add
cmpb
push
xchg
in
jb
pop
push
pop
jb
add
dec
or
or
push
nop
addr16
or
sub
add
or
pop
sub
loop
or
nop
ja
or
lcall
cs
sbb
iret
push
push
ja
out
test
rsqrtps
in
mov
pusha
adc
adc
inc
or
jae
cmpb
out
adc
add
and
enter
adc
adc
inc
adc
add
push
push
push
pop
pop
dec
jae
inc
xor
sbb
jb
mov
sbb
seto
call
pusha
in
sbb
sbb
sbb
je
pop
sbb
mov
repnz
jge
sbb
sbb
cmp
inc
inc
push
pop
pop
pop
sar
or
add
add
sub
cmp
sti
add
ja
repnz
xchg
pop
and
add
and
sti
sub
inc
push
setp
jns
decl
in
jno
repnz
sub
shl
sahf
cmpsl
jns
lea
aad
cmp
cmpb
mov
iret
xor
add
test
jge
nop
adc
dec
dec
cwtl
jmp
addr16
ljmp
jmp
jmp
incb
sbb
cmp
in
in
inc
in
sahf
xchg
add
sbb
out
jge
mov
pop
lock
or
lock
pop
enter
pslld
cmpb
std
repz
leave
std
hlt
hlt
jb
sahf
cmp
or
fwait
mov
cmc
cmc
inc
jg
popa
in
jns
pop
negl
idivl
std
clc
clc
lea
inc
clc
cltd
adc
sahf
lret
add
inc
stc
lock
cli
cli
cmp
cmp
sti
sbb
in
repnz
outsl
xor
inc
cmp
repnz
ss
xor
sbb
sbbl
xchg
je
mov
ret
inc
or
movsl
arpl
add
adc
pop
mov
or
pop
cmpsb
sbb
es
xchg
pop
add
jecxz
std
sti
in
in
jns
in
icebp
mov
mov
bound
xchg
sti
out
out
jb
push
out
outsb
call
add
sub
jae
and
pop
jmp
add
dec
jmp
cltd
pop
leave
and
popf
in
rcll
fsubs
dec
out
out
out
cltd
push
and
mov
cli
inc
add
pop
push
cli
sbb
xchg
stc
repz
add
stc
push
scas
and
fstpl
lret
stc
div
imull
cmpb
xor
in
repnz
adc
out
clc
push
cmp
mov
lret
xchg
add
dec
sti
sti
cltd
mov
cld
inc
cld
cmpl
sbb
cmc
sbb
dec
and
pop
das
xor
rcll
pusha
loop
lret
add
loop
icebp
mul
pop
xchg
pop
leave
and
imull
ret
jg
mul
sbb
add
dec
out
cltd
bound
leave
and
and
adc
xchg
negl
sub
ljmp
shl
pop
mov
and
sbb
insb
out
out
jno
jno
xchg
and
or
sbb
repnz
push
jno
mov
pop
sub
cmc
jae
rclb
pop
dec
cmc
div
cmp
int3
jmp
jns
and
pop
add
clc
clc
or
xchg
pop
jecxz
stc
popa
cmp
mov
sub
hlt
pop
xchg
mov
push
hlt
sub
xchg
sbb
data16
out
adc
push
push
jo
cs
in
push
sti
lahf
loope
pop
add
push
cmp
loope
loope
cmp
mov
scas
repz
xchg
mov
test
imul
sbb
repz
repz
push
lcall
jmp
pop
cmc
mov
xchg
pop
pop
daa
xchg
repnz
lret
adc
sbb
inc
fcompl
and
xchg
pop
pop
daa
add
and
inc
in
rcrl
movsb
sbb
divb
scas
adc
xchg
icebp
jb
test
popa
leave
push
icebp
cmp
xchg
cmpsb
cmc
cmc
cmc
popa
leave
mov
add
jecxz
adc
jne
ret
rclb
lock
stc
cmp
lock
lock
lock
push
lock
test
ss
mov
and
jne
inc
or
pop
adc
sub
out
ret
sbb
inc
ds
add
nop
addr16
add
stos
mov
dec
add
push
or
test
adc
or
cmp
add
dec
add
jmp
lsl
enter
jmp
adc
lcall
pop
scas
fldcw
pop
inc
add
mov
dec
repz
and
sub
push
outsl
jnp
stc
xor
es
sub
loopne
in
and
or
jle
xor
int
loop
ret
and
sub
ds
repz
pusha
rcrb
movsb
out
sarl
iret
mov
aas
mov
test
add
iret
push
insl
scas
dec
and
add
xchg
xor
jle
rolb
add
ret
add
andl
cld
jb
test
mov
push
lcall
shrb
pushf
adc
sub
adc
add
xchg
cmpsb
in
gs
dec
xchg
mov
mov
push
fistl
adc
hlt
rcll
jle
fwait
mov
cltd
lock
clc
and
decl
mov
push
rol
test
imulb
add
lods
adc
pop
pop
add
add
mov
cs
adc
adc
lea
lea
mov
jo
fbstp
cmp
dec
fmuls
and
aad
add
sub
lock
inc
mov
sbb
and
inc
inc
inc
mov
or
nop
mov
xor
or
sub
dec
movsb
mov
and
inc
inc
das
jb
cmpl
mov
push
fsubp
or
dec
mov
add
dec
dec
je
sub
mov
add
mov
mov
shrl
adc
and
xor
in
je
rep
mov
dec
ljmp
subl
mov
jge
sbb
xchg
fwait
dec
xor
sbb
pop
ret
jecxz
cmp
adc
jle
inc
sub
push
xor
xchg
rcrb
fdivrp
add
clc
loop
out
and
dec
push
insl
out
out
movsb
jo
jne
inc
inc
jb
and
or
pop
ja
add
push
sub
pop
in
jle
inc
inc
inc
aam
rcr
loopne
data16
jmp
jb
out
mov
test
inc
push
inc
lret
icebp
and
sbb
push
mov
hlt
mov
add
clc
push
arpl
jecxz
jo
or
dec
shll
or
inc
imul
pop
sub
pop
roll
sub
pusha
rcrl
inc
pop
cmp
enter
adc
test
push
xor
sub
fldt
lock
nop
mov
jns
add
pop
inc
mov
dec
sub
and
or
xor
das
cli
add
stos
cs
or
mov
leave
or
lods
push
mov
out
push
mov
lea
mov
inc
inc
push
xor
ret
mov
pop
mov
mov
cli
decl
xchg
inc
lea
cmp
jne
orl
adc
cmpsb
add
sub
lret
xor
pusha
sbb
xchg
mov
and
cmp
sbb
sub
mov
xor
xor
pop
push
pop
in
jo
cmp
and
or
adc
pop
jne
dec
add
add
lds
sbb
dec
add
adc
lret
or
div
sbb
push
jbe
lret
cld
xor
sbb
pop
idiv
fidivs
lret
sub
cmp
cs
pop
sbb
inc
leave
cmp
jae
push
fwait
insb
jb
movsb
mulb
sbb
lea
add
and
dec
jp
or
add
hlt
jmp
addl
pop
neg
nop
cmc
mov
or
test
cmp
lret
movsb
je
sbb
ja
lret
rcrl
push
jbe
inc
mulb
add
clc
das
mov
adc
add
ja
add
cmp
add
test
sub
sbb
mov
mov
dec
dec
adcl
pop
cmp
xchg
pop
push
fwait
cmp
add
and
push
jo
sarl
mov
sub
ret
lcall
dec
or
and
push
cmp
jne
jnp
pop
js
lcall
jbe
rolb
int
scas
int3
push
cmp
jne
mov
push
cmp
jne
dec
rcr
cmp
jne
call
or
sbb
push
mov
aas
repz
adc
into
repz
jmp
std
std
jmp
cld
jp
enter
fildl
mov
inc
mov
or
lock
aad
test
inc
sbb
pusha
lds
fstpl
sbb
pop
pop
jle
pop
adc
add
leave
sbb
jne
xchg
or
pop
inc
pusha
jns
lds
or
nop
orl
jb
inc
push
push
pop
add
and
add
adc
jb
outsl
pop
or
sahf
call
cmp
xchg
inc
lcall
daa
push
clc
fwait
or
sbb
fimull
rorb
das
inc
jbe
sub
jne
jo
daa
xor
inc
rcl
sbb
test
cmp
outsb
jb
adc
insb
push
stc
aad
hlt
push
jmp
sbb
lods
mov
cmp
adc
sbb
ss
or
mov
push
pop
adc
fsubr
sbb
outsb
out
or
push
out
jns
mov
dec
mov
cmp
push
lcall
add
outsb
es
cwtl
ja
and
test
add
inc
or
in
mov
add
retw
sbb
das
call
popa
push
mov
jl
hlt
sbb
inc
add
inc
pop
hlt
jae
ret
jmp
and
pop
lret
clc
pushf
adc
or
xchg
sbb
push
cli
fistl
imul
stos
add
testb
test
mov
xchg
out
js
es
rolb
test
push
mov
arpl
jmp
fdivrl
inc
adc
add
ds
xchg
cmp
push
iret
sbb
mov
jecxz
cmp
or
cmp
dec
int3
add
push
and
lret
roll
jbe
cmp
andb
sbb
out
or
pop
pop
scas
push
mov
shl
movl
std
mov
jb
rep
jmp
or
insb
dec
cmp
mov
shlb
dec
add
xor
cmpsl
insb
lea
cmp
xchg
push
pop
mov
mov
xlat
xor
jbe
inc
add
add
mov
int3
lea
dec
add
movl
movsb
rclb
iret
repz
and
sbb
or
iret
rep
ds
cmp
inc
in
call
in
in
lock
call
clc
clc
cld
fdivrs
data16
add
fnstenv
mov
push
xor
pop
popa
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
into
mov
out
loopne
neg
adc
nop
xchg
pop
push
inc
xchg
stc
sub
cmp
mov
movups
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
roll
pop
add
ljmp
mov
or
push
movsb
clc
cmp
rep
mov
xlat
cmp
iret
repz
sbb
cmp
repz
adc
adc
cmp
or
add
pop
icebp
mov
clc
push
or
rclb
add
pop
mov
adc
ja
sbb
or
repnz
jg
jbe,pt
push
xor
mov
mov
incl
inc
decl
jne,pn
jmp
inc
fucomip
mov
cmpl
aaa
jbe
push
outsb
adc
sti
add
mov
pusha
or
addb
jle
aaa
dec
mov
mov
xor
insl
jecxz
or
bnd
cmp
jae
dec
mov
mov
jae
pop
jbe
sub
adc
dec
jb
rclb
pop
sub
mov
hlt
aam
clc
pop
add
js
in
jg
sbb
test
dec
sbb
add
outsb
adc
pop
lcall
or
pop
dec
outsl
or
dec
dec
and
mov
in
mov
dec
out
jne
out
mov
insb
adc
adc
mov
decb
push
and
testl
cmp
cs
das
sbb
pop
movb
add
arpl
add
cmpsb
cltd
push
fsubrl
cmp
mov
push
push
pop
add
push
push
add
and
test
xor
adc
fiaddl
ja
cmc
pop
pusha
mov
stos
nop
cltd
cltd
and
mov
lret
jmp
cmp
enter
jge
sbb
ja
insl
or
aas
jge
jg
xor
push
cltd
pop
idiv
cmp
inc
xor
xor
xchg
inc
sti
out
cmp
xor
jmp
or
mov
test
jle
push
pop
imul
mov
inc
sti
push
fwait
sbb
imul
add
jmp
jl
mov
sbb
pop
adc
rorl
je
insb
sub
movsb
loope
jecxz
repnz
sbb
jae
jb
or
out
sbb
imul
jns
adc
cmp
jbe
inc
jo
incl
pop
aaa
jno
sar
sub
pop
jp
mov
push
rolb
aaa
sbb
xor
cwtl
jae
cmp
scas
and
push
mov
sahf
xchg
push
push
cmp
cmp
test
mov
movl
insl
cmp
jle
adc
jle
sti
pushl
scas
inc
gs
jno
mov
mov
movsl
call
mov
je
mov
inc
jp
rorl
mov
inc
cmpsl
adc
sbb
push
loop
lds
adc
push
lahf
pop
sub
or
shrb
fldenv
lods
fabs
cmp
aaa
subl
xchg
sbbb
or
xor
pop
push
adc
mov
or
jg
xchg
inc
jmp
push
pushf
or
xor
push
and
adc
loop
sub
push
je
nop
mov
es
push
movsb
xchg
rcrb
ja
jae
mov
shl
and
jge
loop
in
xchg
push
push
lock
mov
push
data16
mov
inc
adc
or
out
ret
or
add
xor
push
or
pop
andl
in
inc
xchg
mov
aas
dec
ljmp
xchg
rolb
jg
sub
pop
loopne
lock
movsb
add
pop
hlt
dec
js
loop
push
adc
ficoml
stos
jecxz
and
adc
mov
mov
add
fbld
decl
inc
jg
jbe
jno
xchg
in
je
gs
and
and
and
adcb
pop
mov
push
cld
pop
loopne
fisubl
mov
inc
inc
cmp
je
xchg
mov
fs
sbbb
daa
adc
add
lcall
dec
je
and
mov
mov
lds
add
xchg
rolb
or
sbb
mov
incl
pushl
push
push
rol
mov
push
inc
sbb
push
or
xor
lret
mov
or
divl
das
mov
sbb
add
dec
push
lock
lret
push
mov
add
es
sub
or
cli
mov
push
mov
addr16
test
sbb
pop
test
cmp
lock
and
cmp
je
mov
mov
mov
or
xor
inc
or
add
push
add
shlb
push
adcb
or
shlb
insl
ja
pop
and
sbb
dec
dec
lret
dec
in
jb
jns
shll
js
lret
mov
mov
lock
xchg
dec
and
push
inc
ret
stc
shlb
push
lea
bound
jne
jmp
push
in
rorl
or
xor
je,pn
jl
das
dec
jmp
dec
cmc
rcl
jmp
mov
inc
out
sub
adc
ljmp
cmpsl
dec
sbb
ret
push
sbb
cmp
es
jbe
movsl
gs
xor
mov
cmpsb
mov
in
or
sbb
pop
hlt
movsl
push
fwait
and
jp
lahf
jge
inc
sbb
cmp
je
push
stos
and
xlat
ret
push
mov
call
inc
sbb
mov
pop
cmpsb
mov
clc
xlat
sbb
push
xor
add
jmp
cmp
incb
or
inc
inc
xor
lcall
cmp
inc
jo
sbbl
jbe
out
sub
cltd
pop
bound
aam
call
rcll
mov
jne
mov
es
inc
arpl
lock
aas
pop
cli
sub
pop
bound
add
adc
nop
adc
mov
adc
fnstenv
xchg
sbb
xchg
add
jmp
pop
rcr
mov
fldz
divl
add
push
xor
adc
mov
scas
sbb
cmp
fimull
ja
push
mov
push
pushf
push
mov
call
push
xor
jmp
pushf
cmp
dec
ret
ss
lods
lock
shufps
lea
neg
mov
outsl
cld
mov
enter
jbe
add
jmp
push
cli
add
jbe
mov
push
cld
jb
ret
mov
lahf
mov
dec
js
add
pop
xchg
sub
and
mov
xchg
adc
xor
outsb
adcb
cmp
or
add
arpl
cmp
std
push
out
lods
jne
cmp
push
and
mov
sub
pop
and
mov
adc
lea
adc
out
push
sub
xchg
push
addb
add
or
jne
in
std
cmp
and
pop
lret
and
fsubs
test
cmpsl
shrb
or
add
repz
sbb
mov
jle
xchg
or
mov
inc
sub
cmpsb
xchg
add
popl
iret
fstl
int
addb
push
les
adc
jo
test
pop
mov
test
outsl
aas
sub
adc
add
call
push
lret
adc
dec
adc
mov
pop
stos
sarl
mov
popa
ret
dec
loope
movsb
orb
jbe
aam
testb
dec
xor
outsl
orb
int
add
inc
testb
dec
in
push
adc
push
pop
dec
ss
sbb
jbe
add
popa
add
or
js
jbe
mov
aam
cwtl
mov
es
pushf
or
movsb
or
call
xor
fsubrs
mov
adc
pop
jne
or
rcr
adc
xor
aam
insb
adc
push
add
push
jmp
add
mov
pop
and
div
jae
mov
adc
punpckhwd
push
pop
call
enter
aas
jbe
roll
ds
adc
inc
daa
adc
cmpsb
jo
in
dec
mov
cwtl
or
mov
add
aad
mov
add
or
movb
pop
jmp
leave
cmp
out
cmpsb
sub
std
add
notl
push
add
add
cmc
add
inc
or
fadds
add
sbb
add
pop
or
xlat
push
cwtl
stos
xor
rcrb
sbb
dec
loopne
cmp
mov
pushl
clc
fwait
insb
push
lea
push
hlt
sub
mov
lds
incb
inc
adcb
pushf
push
ret
test
xor
cmp
bound
xlat
push
cmpsb
jae
lahf
incb
or
mov
inc
jnp
sub
dec
add
iret
xor
cmp
or
pop
aam
rolb
push
mov
mov
mov
mov
adcb
sti
sbbb
mov
push
add
dec
xchg
xchg
add
push
div
unpcklps
movsb
outsb
adc
add
decb
lds
jl
jg
and
mov
xor
call
push
enter
cmp
popa
cmc
sub
jo
jmp
mov
sub
jne
fdivr
loop
mov
push
aas
or
out
cmpb
and
or
ficompl
je
mov
mov
sub
in
inc
clc
xor
inc
and
sbb
sub
push
or
push
lods
hlt
lds
aas
inc
pop
sub
sub
push
push
push
jbe
adc
sub
jg
mov
sbb
jg
pop
and
popl
es
lods
cmp
add
inc
je
mov
mov
adc
add
xor
push
sbb
xor
xchg
jno
sarb
ret
inc
and
cmp
jmp
lahf
mov
fdivrl
pop
and
mov
xchg
idivb
mov
in
push
and
inc
cmpsl
adc
fiadds
test
push
js
leave
xor
das
dec
mov
or
add
repnz
xor
adc
or
xchg
mov
nop
sbb
fs
push
mov
add
fildl
adc
rcrl
aad
adc
and
cli
mov
sub
mov
and
mov
inc
dec
jne
lea
out
and
or
movsb
and
add
pop
test
clc
stos
xchg
imul
mov
pusha
jne
popf
mov
ljmp
mov
and
and
lea
pop
popf
out
lds
ja
sub
cmp
or
outsl
sub
push
mov
mov
fdivr
ficoml
push
push
xchg
hlt
xchg
loopne
imul
std
push
cmp
inc
outsb
pop
xor
dec
pop
cmp
pop
cmpsb
loopne
push
push
orb
mov
mov
movsb
lods
jmp
and
je
and
xchg
jge
mov
or
adc
aad
jmp
mov
add
mov
lods
leave
sub
mov
cmp
and
rorl
loopne
loop
lret
add
jmp
adcl
mov
and
and
and
jmp
fs
add
aam
add
adc
xchg
or
std
mov
mov
sub
idivb
add
loopne
cli
js
push
lods
jecxz
fiadds
and
test
cmp
mov
repz
mov
jno
sarl
mov
dec
mov
mov
insb
push
cld
add
jecxz
pop
inc
out
jmp
and
pop
cmp
sbbl
scas
mov
dec
add
push
cmpsb
push
sub
xchg
je
cmp
xchg
inc
negb
nop
fstpt
std
jne
fsubr
fldt
imul
cmp
les
xchg
pusha
pop
out
sarb
adc
adc
and
enter
insb
sub
inc
pop
shrl
sub
mov
mov
mov
mov
xor
or
add
push
jmp
adc
push
adc
push
cmp
insl
push
push
and
xor
enter
push
inc
rclb
sbb
dec
and
pop
lret
push
call
decl
cltd
in
lea
mov
dec
lods
jo
mov
leave
std
jl
pop
inc
inc
cmc
lea
xor
lea
dec
stos
cmp
push
testl
inc
cmp
mov
inc
inc
adc
shrl
inc
xchg
push
jg
or
add
jb
mov
xor
jo
dec
sti
inc
cs
faddp
insb
out
adc
mov
inc
mov
inc
inc
inc
dec
jne
pop
adc
repz
inc
or
add
add
divb
cltd
mov
mov
and
or
jne
into
test
jecxz
push
or
hlt
lds
adc
push
jnp
test
xor
nop
mov
or
adc
dec
fldcw
sub
loopne
adc
add
inc
sub
mov
mov
dec
push
and
mov
push
int
mov
mov
xchg
test
insl
cmp
inc
je
and
mov
dec
cmp
jbe
inc
adc
cmp
sub
jbe
ret
dec
xchg
loopne
lock
xchg
mov
push
aas
xor
frstor
pusha
xor
and
fs
xchg
fstpt
or
insb
or
dec
adc
outsb
xor
inc
pop
sub
jmp
sar
out
icebp
xor
dec
sbb
mov
add
jmp
add
ret
ss
push
rolb
adc
jno
es
inc
mov
ja
popa
cs
push
adc
inc
mov
dec
or
leave
cmpl
rclb
push
lcall
icebp
arpl
shrl
mov
sbb
cmp
mov
push
or
sbb
xor
fdivr
mov
mov
xchg
mov
mov
lcall
adc
jno
inc
inc
sbb
sub
inc
xchg
int3
cwtl
fcmovu
mov
subb
and
dec
inc
inc
lock
cmpb
cwtl
sub
fimuls
hlt
inc
lds
jle
mov
push
push
cmpl
mov
fs
pop
cmp
add
add
test
push
or
dec
or
sbb
push
xor
dec
add
mov
scas
notb
mov
sbb
lea
jnp
or
aaa
cmpl
push
idivl
adc
movsl
adc
sub
sub
dec
lock
clc
adc
mov
add
dec
stos
dec
xor
aam
sub
mov
pop
lods
dec
pop
pop
jbe
adc
jmp
pop
mov
pusha
pop
add
adc
pusha
stos
in
sahf
dec
lock
mov
sbb
jo
nop
add
loope
and
xor
mov
scas
sbb
test
add
and
rcll
addl
ljmp
mov
pop
sbb
push
cmp
shr
les
jmp
mov
adc
cltd
adc
sbb
pop
sbb
jp
push
sub
out
push
cmc
test
push
cld
add
aaa
daa
jmp
cs
ljmp
or
sub
mov
rcll
sub
outsb
ja
aam
or
aas
push
idiv
shrb
jmp
mov
enter
in
xchg
push
dec
mov
call
xchg
and
and
mov
sbb
push
cld
popa
lods
inc
insb
push
jo
dec
inc
or
add
xor
les
xchg
lahf
sub
insl
mov
mov
mov
adc
jnp
or
outsl
or
sbb
mov
lock
dec
cld
andl
inc
ret
dec
push
and
test
sub
xor
push
movsb
pushf
xchg
xor
les
jns
dec
mov
std
orl
jmp
outsb
add
mov
les
push
cltd
iret
adc
mov
nop
arpl
shll
pop
cmp
and
sbb
push
in
xor
in
push
in
inc
dec
or
subps
rolb
push
mov
ret
jmp
push
dec
dec
xor
jbe
and
pop
cmp
je
sbb
cli
gs
or
mov
mov
mov
cmp
jmp
subl
shl
divps
mov
pushf
mov
mov
mov
adc
cmpl
jbe
mov
imul
pushf
add
and
dec
cmp
daa
test
xchg
out
jno
pop
inc
xor
dec
adc
mov
push
xchg
dec
cmp
xchg
ss
mov
pop
pushf
cwtl
mov
inc
loopne
aaa
add
mov
push
xchg
mov
sub
and
xor
mov
pop
leave
fwait
hlt
push
mov
sub
inc
xchg
pop
jp
movsl
dec
xchg
dec
insl
mov
movsl
lea
rorl
rcrb
sub
xor
dec
or
loopne
lret
fcoml
ror
lret
out
iret
mov
clc
or
jmp
les
popl
or
add
rcr
pop
ficoml
enter
dec
cld
adc
pop
dec
in
sub
aam
sub
jecxz
xchg
mov
loopne
mov
lea
cmp
cmc
jno
mov
mov
or
mov
pop
dec
mov
movsb
js
jmp
inc
cld
and
jge
push
loop
inc
mov
push
sbb
mov
test
dec
xchg
add
insb
or
xchg
mov
or
mov
or
sub
lcall
orl
dec
adcb
push
push
xchg
pushf
hlt
arpl
arpl
jmp
fadds
ror
rolb
arpl
adc
add
push
jmp
jns
sbb
pop
inc
enter
gs
gs
mov
in
xchg
fs
nop
movsb
push
enter
pop
and
or
gs
imull
nop
gs
or
push
lahf
out
sahf
push
pop
fs
je
xchg
and
jns
mov
int3
gs
cltd
sbb
test
popl
icebp
cmp
lahf
je
push
push
roll
loope
cmp
arpl
adc
sar
cmp
shr
fstpt
or
add
inc
mov
jle
cld
test
adc
dec
mov
rcl
insb
lret
jne
push
xor
rorl
jge
inc
mov
pop
cmp
lods
mov
sbb
rcrl
mov
cmpb
pop
add
aam
adc
and
pusha
or
mov
repnz
das
and
rcl
xchg
and
aam
mov
jb
lea
or
or
mov
cmpsb
hlt
fdiv
mov
loop
imul
daa
es
xor
or
inc
jb
call
movsl
test
xor
or
inc
or
and
jbe
je
xchg
sbb
dec
adc
popa
or
cmpsl
sbb
mov
pop
sub
and
cmp
push
lods
xchg
roll
movl
data16
adc
jecxz
adc
push
movl
add
jmp
add
mov
mov
add
stc
iret
sbbb
adc
pop
mov
lock
sbb
and
mov
sub
enter
imul
cmp
out
loope
add
outsl
and
sbb
das
dec
ret
mov
lds
or
or
loope
mulb
fsubrl
loopne
cmp
sub
loope
ret
ffree
pop
sub
ficoms
adc
jle
mov
cwtl
sub
shlb
mov
and
inc
mov
push
inc
and
inc
add
sbb
adc
and
aad
pusha
ljmp
mov
sub
mov
cld
or
inc
sbb
nop
loopne
adc
and
dec
or
or
stc
or
push
loope
les
bound
push
orb
push
lea
inc
insb
sub
xchg
mov
mov
into
test
fs
push
ficompl
pop
test
adc
popf
pop
sbb
imul
dec
add
add
or
daa
jmp
push
scas
test
jbe
out
lret
mov
or
and
and
in
add
call
sub
mov
or
dec
fistpl
xchg
fmuls
cld
or
and
test
jno
cmp
daa
jnp
movb
cmp
jecxz
push
push
sahf
test
pusha
test
lcall
inc
cltd
adc
inc
movsl
jo
jbe
push
inc
test
ret
xchg
rclb
mov
push
in
xor
inc
ret
sbb
aad
pop
cmp
test
divl
popa
data16
sub
and
dec
add
dec
cmp
rcll
jo
or
aam
add
jnp
dec
ljmp
adc
adc
push
inc
loopne
lock
add
add
inc
push
pop
and
sub
mov
and
xchg
lcall
ja
ret
and
addb
ljmp
xchg
push
push
movsb
adcb
lock
and
inc
mov
pop
movsb
push
sbb
mov
add
mov
lea
sti
jl
or
cs
lret
clc
aam
fadd
not
mov
jne
xor
cmp
cmp
xchg
mov
mov
jo
dec
loope
cmpsl
addr16
movzwl
test
in
or
cld
cmp
add
js
sbb
jnp
xor
mov
cld
jbe
icebp
lea
cs
ja
mov
movsbl
es
je
sub
std
sbb
pop
sar
mov
sbb
mov
sbb
mov
mov
mov
jmp
clc
stos
clc
sbb
call
xor
jae
je
les
pop
xchg
pusha
adc
cltd
mov
push
pop
add
ret
out
pop
andl
nop
cli
sub
cmp
mov
adc
cmp
aas
mov
sub
arpl
mov
fisttps
lea
ja
movsl
mov
dec
enter
es
out
pop
enter
movsl
hlt
hlt
out
sub
stc
in
je
or
inc
rcrl
out
je
lock
test
ret
insb
nop
sbb
sub
adc
addr16
loop
in
adc
and
pop
or
enter
add
orb
enter
movsl
pop
cltd
sbb
fs
or
lret
out
imul
data16
sbb
js
pop
jl
xor
xlat
je
mov
sub
push
mov
ja
pop
dec
fs
shll
sbb
push
sbb
jle
inc
add
adc
or
add
ds
mov
lcall
dec
pop
inc
sub
lock
test
je
push
daa
adc
out
arpl
testl
pusha
hlt
aaa
aad
adc
cwtl
das
mov
adcl
ret
loope
mov
and
add
or
in
push
outsb
and
mov
fstps
sub
es
sub
cmp
mov
ljmp
or
add
push
insl
shl
stos
cmp
mov
loopne
negl
xchg
dec
sbb
push
add
lock
mov
xor
mov
movsl
sti
add
push
mov
jmp
xchg
mov
mov
aas
push
cmp
daa
jge
mov
mov
lcall
roll
lret
mov
adc
sbb
lahf
cmp
jecxz
mov
xchg
lea
cmp
cmp
jns
push
sbb
mov
test
je
jo
add
add
mov
adc
jmp
scas
push
outsb
je
test
sbb
rcr
inc
je
aas
add
bound
test
add
or
pop
add
fimuls
adc
mov
and
xor
lds
outsl
inc
stos
add
add
xchg
mov
into
ret
test
std
imul
hlt
jmp
cmp
jle
jae
mov
xor
test
pop
mov
push
loopne
xor
int
or
mov
out
push
mov
mov
inc
cld
adc
movsb
xchg
cmc
mov
xlat
mov
lea
gs
inc
mov
or
outsb
xchg
and
and
and
movsl
push
pop
add
dec
add
inc
call
jg
xlat
dec
add
and
add
push
push
popa
int
push
movsb
push
outsb
mov
adc
cld
decb
mov
std
psubsb
in
aaa
dec
ret
xchg
inc
push
xor
sbb
mov
sub
lret
jl
jl
bound
inc
add
cmpsw
fbstp
inc
push
and
cmpsb
jmp
sbb
insb
aaa
or
je
cltd
dec
mov
sub
add
jae
movsl
add
fisubrl
mov
pop
fimull
into
je
outsl
mov
or
sbb
dec
inc
jno
test
ret
jne
and
fisttpll
testl
cmp
fs
inc
or
pop
adc
mov
sarl
nop
xchg
cmpsl
clc
bswap
clc
sahf
add
mov
dec
jmp
pop
xchg
icebp
sbbb
movb
stos
mov
loope
cmp
jmp
jl
shlb
xor
xorl
bswap
mov
popa
imul
dec
sbb
insl
xor
xchg
out
sub
fwait
sbb
adcl
gs
mov
xor
icebp
push
jmp
orb
jmp
test
cli
mov
outsl
inc
and
mov
jmp
popf
fcoml
or
pop
or
pop
mov
shl
push
jp
addr16
jmp
fdivl
jmp
imul
jle
or
adc
jbe
dec
sbbl
adcb
nop
jns
scas
jnp
cmp
out
or
pushf
push
or
nop
popa
jle
sbb
mov
sub
mov
lods
add
cmpsb
orb
loopne
push
and
jle
icebp
jl
testl
push
xchg
testl
ret
movsl
daa
dec
cmp
loop
mov
mov
mov
and
movsb
cmp
test
add
pop
or
enter
jnp
mov
mov
mov
subb
bound
xor
cmpsl
push
xchg
icebp
outsb
dec
xchg
jecxz
sub
mov
test
mov
xchg
rcrb
or
jb
gs
rorb
pop
adc
sbb
clc
movsl
fidivrs
idivb
fmull
loop
rcrb
push
lea
mov
popa
mov
sbb
scas
stc
adc
or
and
rolb
and
lcall
mov
mov
add
ljmp
jno
pop
and
rcll
add
or
jl
push
pop
cwtl
data16
scas
xchg
push
jne
push
aas
out
test
sbb
xor
das
sub
sbb
in
rcll
les
fs
xor
cmp
ss
cmc
sub
push
jecxz
jne
rolb
or
jmp
push
xchg
addb
shlb
push
adc
jb
repz
add
or
or
push
and
sub
or
dec
mov
push
add
mov
test
fisttps
dec
jbe
push
or
adc
enter
aam
dec
notb
jl
mov
fcoml
push
lods
jmp
es
lret
movsb
adc
sub
mov
out
add
leave
xchg
mov
inc
and
mov
or
lret
jg
pusha
xor
sbb
mov
inc
fmuls
mov
ds
filds
or
je
cli
add
cmp
jbe
push
add
test
dec
or
cld
mov
and
mov
shr
lea
not
and
decb
jne
push
pop
dec
out
and
adc
mov
mov
push
pop
jecxz
shll
pop
add
add
pop
and
push
or
inc
sbb
push
sub
jmp
das
sub
add
sub
inc
mov
jne
and
sti
add
in
dec
pop
cmp
adc
clc
imul
jge
cmp
and
bound
dec
shll
mov
aaa
pop
mov
shr
not
and
add
stos
inc
and
xor
loopne
iret
xchg
out
loopne
pop
xor
dec
movsl
add
mov
and
inc
jmp
xchg
or
fidivs
movsb
ret
mov
int3
inc
sub
out
mov
or
dec
fisttpll
mov
mov
scas
inc
mov
inc
test
sarb
negl
push
or
lods
push
or
pop
loope
roll
jmp
dec
adc
in
fisubrl
lea
or
mov
mov
inc
xor
dec
inc
pop
lahf
mov
push
adc
lods
stos
pusha
push
scas
jle
xor
shl
add
mov
std
shrb
aas
gs
iret
xchg
ficoms
sbb
mov
mov
jne
add
decb
adc
inc
sbb
adc
pusha
add
and
pushl
push
push
mov
shll
rclb
adc
es
add
mov
popf
es
or
std
inc
cmp
sbb
jl
push
cmp
push
cmpsb
insl
or
mov
loopne
sbb
mov
movsb
xchg
mov
jg
jo
push
lock
popf
adc
cwtl
outsl
push
or
cmp
dec
and
sbb
imul
stc
sub
std
cltd
negb
les
aad
cmp
jge
adc
stos
xor
xor
pop
push
xor
or
adc
int
jmp
orl
or
add
idivb
push
int3
popa
xorb
shlb
add
ljmp
rorb
movsb
incb
pop
sub
xchg
or
hlt
or
push
mov
pop
or
push
popa
outsb
lods
lea
test
inc
sub
out
xchg
lock
shr
es
orl
orl
adc
adc
pop
ja
std
addb
sbb
call
dec
mov
pmullw
je
clc
add
adc
adc
adc
cmp
sahf
inc
arpl
pop
hlt
inc
inc
mov
lock
nop
dec
inc
jne
or
icebp
stos
popl
and
stc
jo
xchg
sti
or
adc
int
mov
xlat
sub
or
mov
push
scas
xchg
dec
cmp
adc
ljmp
jmp
jl
push
cmpb
mov
lock
aaa
insl
idiv
add
je
sbb
mov
int3
push
pop
movsb
sub
adc
inc
sub
data16
sbb
clc
rolb
jge
jb
es
add
cmp
mov
dec
or
push
jns
or
xor
sub
add
clc
sub
lret
or
pop
adc
repz
fstpl
lea
int3
fcompl
mov
dec
rcl
jle
mov
pop
pop
imul
adc
ljmp
and
shl
cmpl
js
inc
jne
pop
test
iret
adc
roll
inc
insb
xor
add
insb
and
clc
subb
clc
dec
jno
mov
lea
mov
divb
pop
xor
push
sar
dec
or
movsb
pop
mulb
bound
cmp
pop
ret
xor
cmp
mov
xchg
fisttps
xor
mov
inc
pop
sbb
fbstp
ja
cmp
mov
add
mov
loope
sbb
or
mov
loope
mov
mov
mov
push
cmp
lret
shrb
insl
jo
xchg
cmp
rdmsr
cmp
and
dec
inc
push
dec
jg
sbb
mov
jp
insb
and
cmp
and
adc
jp
inc
cmp
push
push
push
jge
push
and
cs
adc
sub
xchg
cs
adc
cs
fildl
and
decb
xlat
aaa
or
in
test
fcompl
push
jne
mov
outsb
push
hlt
fnstenv
lret
add
shrl
aaa
arpl
or
push
mov
popa
popf
mov
inc
adc
pop
lcall
cmp
je
mov
dec
sbb
and
lock
inc
mov
dec
xor
aaa
pop
iret
jne
divl
add
add
mov
pop
mov
jmp
pop
push
scas
out
repz
mov
outsl
shrb
into
jne
mov
push
pop
outsb
leave
inc
test
or
xor
mov
sub
icebp
adc
push
cmp
push
xchg
dec
add
ljmp
ror
adc
cmp
sub
movsb
or
and
mov
das
pop
cltd
clc
decb
jne
outsb
repnz
jmp
xor
int3
dec
jp
mov
mov
bound
dec
push
and
push
clc
into
xor
adc
jp
cmp
shll
inc
mov
enter
or
pop
xor
xor
mov
sub
jge
xor
jl
aas
jge
push
or
dec
cld
or
pop
adc
inc
or
or
mov
das
dec
or
out
or
nop
outsb
mov
xchg
cmpl
scas
sbb
push
shrl
push
lea
faddl
push
cmp
push
push
hlt
xlat
sarb
and
add
cmp
pop
leave
repz
nop
fdivp
or
sbb
jle
pushf
pop
loopne
push
sbb
pop
jb
or
xorl
adc
pop
shll
bound
push
insl
mov
add
cmp
aas
inc
push
mov
mov
push
adc
rorb
push
loop
push
mov
mov
das
adc
lret
gs
shlb
int3
mov
pop
sub
push
orl
adc
ret
inc
inc
fs
cld
in
cmp
cmp
sub
add
push
mov
and
add
and
repnz
cwtl
push
enter
add
stos
mov
push
mov
fiaddl
or
push
cmp
test
dec
pop
cmp
lcall
pop
fsubr
mov
pop
lods
xor
lahf
pushl
adcl
dec
stos
push
div
leave
xor
pop
jne
push
in
adc
in
push
sbb
std
pop
rcll
sbb
mov
pop
xor
pop
neg
movsl
mov
mov
push
or
pop
sbb
xor
inc
test
pop
jl
dec
pop
nop
imul
jbe
xchg
clc
hlt
and
clc
mov
lahf
insb
int3
push
or
inc
or
je
mov
movsl
push
test
push
xchg
xor
fs
or
cmp
ret
push
pop
aas
adc
jp
jmp
sub
or
testl
adc
mov
push
fdivrl
xor
and
pcmpgtd
push
jmp
dec
idivl
fdivs
insb
adc
jns
test
jne
roll
mov
or
int
inc
stos
push
and
inc
sub
cmp
ds
adc
mov
mov
dec
push
pop
popf
call
imul
test
sbb
xor
sarb
mov
loop
call
jns
jns
in
int3
test
dec
jp
lea
es
outsl
or
cmp
mov
dec
dec
inc
rorl
subb
mov
xchg
imul
test
dec
addb
sub
lcall
pusha
and
fstl
imul
movsb
mov
cmpl
dec
cwtl
aam
je
shlb
add
adc
xchg
or
mov
pusha
cltd
add
test
fmuls
xchg
arpl
faddl
gs
and
in
insl
rorb
ss
inc
push
enter
scas
and
hlt
fisubrs
pop
enter
hlt
icebp
push
jns
subl
fldl
aas
insb
jne
jp
scas
popa
aam
or
pop
and
pop
pop
sbb
jg
xchg
in
pop
adc
sbb
cmp
inc
adc
or
orl
cmc
jmp
xor
lret
les
push
push
xor
dec
xor
xor
push
mov
test
add
movsb
jns
movsb
in
xchg
pop
jb
jle
leave
and
and
jl
call
add
add
scas
test
aaa
sbb
dec
dec
dec
gs
cmpsb
call
and
mov
inc
push
and
in
cmpsl
sbbl
lret
neg
lret
test
scas
sbbb
adc
inc
rcrb
fs
pop
aad
mov
ror
jg
sbb
add
mov
mov
addb
sahf
es
sbb
and
pusha
jmp
movsb
jb
mov
or
mov
call
xchg
in
jge
push
sbb
iret
scas
hlt
xchg
inc
push
lods
adcl
shrb
xchg
jle
call
call
in
inc
and
add
mov
pop
and
les
loop
pusha
xor
xchg
in
inc
xchg
add
add
in
push
nop
and
test
test
xchg
inc
test
mov
mov
jle,pn
cld
enter
cmp
pop
mov
pop
mov
sysret
dec
lds
mov
aaa
cli
and
cmp
jmp
mov
dec
test
stc
add
mov
orb
out
testl
add
push
inc
ror
testl
mov
addr16
lret
mov
xor
sbb
rcll
and
jb
imul
fwait
rcll
outsb
shll
mov
xchg
and
lret
or
cmpsl
pusha
movsb
inc
sbb
test
pop
je
test
lods
clc
aaa
and
xchg
das
mov
cmp
and
test
pop
dec
dec
xor
add
dec
and
cltd
push
adc
add
lds
mov
jecxz
push
aaa
cmp
add
add
push
icebp
in
pushw
cmp
and
daa
add
jo
dec
bound
lcall
dec
add
jne
and
nop
sbb
shrl
mov
pop
cmp
neg
xor
mov
out
add
cs
xchg
add
mov
mov
aad
add
add
ja
or
or
xor
push
call
pop
inc
add
std
imul
mov
mov
mov
aaa
inc
cld
push
add
adc
inc
push
add
rolb
enter
shr
add
jne
movsl
push
das
test
mov
sub
outsb
inc
jg
push
or
shll
enter
pop
mov
sbb
jg
adc
or
sub
out
loopne
add
cli
aam
dec
sar
cld
std
jmp
mov
inc
mov
inc
pop
push
dec
in
mov
adc
cmpsb
inc
lret
je
insb
xchg
fidivs
add
fisubrl
pop
in
shrl
rcrl
int
fnstsw
mov
ljmp
xor
inc
push
or
mov
fmul
or
push
xorl
fstpl
test
mov
add
call
pop
pusha
pushf
out
push
mov
xchg
icebp
cwtl
push
repz
in
xchg
imul
cltd
jo
push
dec
jge
push
jns
data16
mov
mov
sub
je
dec
je
add
test
lcall
or
sti
sub
test
insl
ljmp
test
cmp
dec
add
push
xchg
fdivs
int
cmpsl
inc
cmp
xchg
jmp
rcrl
add
lahf
int
fwait
add
outsl
or
test
xchg
adc
test
xchg
mov
push
adc
repnz
pop
push
xor
inc
sbb
lock
mov
aaa
jne
das
and
or
inc
lock
iret
repz
push
and
sub
idivl
push
push
pusha
push
sti
pop
pop
lahf
imul
mov
mov
pop
jg
mov
or
mov
mov
mov
xor
push
test
jne
xchg
in
xchg
mov
jle
push
jle
adc
xor
fisubs
pop
push
inc
or
in
ja
pop
mov
jmp
inc
fcoms
jo
add
out
fbstp
push
jmp
test
aad
clc
push
fmull
movb
and
fs
push
push
push
adcl
jle
testb
xchg
push
lcall
or
adc
popa
mov
inc
mov
sbb
lods
push
xor
push
inc
aas
adc
out
sbb
aas
mov
xchg
sub
sub
negl
sub
inc
and
jp
jne
xor
fnstenv
js
xor
lret
test
push
lock
jb
lods
in
or
int3
add
rcl
push
inc
lods
xor
sub
and
into
jne
loope
cld
pop
pop
mov
cmp
clc
sub
pop
inc
adc
add
incb
aam
in
mov
jg
fstpl
repnz
jne
dec
sbb
pop
sar
fistpll
std
lea
testb
mov
rorb
mov
mov
mov
shll
out
test
inc
pop
lock
push
and
add
xor
or
ret
sub
stos
pop
fmuls
sbb
ror
in
pop
xchg
std
lods
out
and
mov
mov
mov
jo
xchg
lret
int3
shl
enter
jmp
xchg
into
sbb
int3
pop
cmpsl
mov
or
add
pop
cs
add
xlat
xor
lock
mov
mov
cmp
mov
stc
or
jno
popa
mov
je
cmp
test
ds
and
mov
mov
fsubl
push
or
out
je
movsb
cmp
imull
push
lahf
movsl
dec
cmp
inc
sub
loop
rcrb
adc
and
xchg
jbe
jne
inc
jne
xchg
lret
testl
push
sub
aad
push
fisubl
mov
push
int
lds
mov
mov
cmpsl
lods
cmp
sub
sub
mov
adc
pop
bnd
mov
mov
pop
cltd
sarb
jae
movsb
fs
push
jo
cld
or
add
pop
fidivs
lods
popf
adcb
pop
xor
xchg
mov
shrl
les
addr16
sti
push
inc
cmp
mov
in
mov
lods
push
inc
setb
inc
mulb
add
jno
sub
or
dec
rcrl
stc
mov
cmp
jg
testl
mov
add
enter
dec
gs
rcr
jns
pop
cmpl
mov
sahf
add
pop
or
loop
jo
xlat
hlt
std
loopne
sti
movsb
pop
ss
call
jmp
mov
rcrb
push
sub
jno
jb
ret
xchg
in
mov
cmp
and
divl
adc
mov
inc
pusha
insl
mov
leave
cltd
or
in
xchg
or
in
push
sti
jecxz
xor
adc
mov
outsl
xor
lock
aaa
addr16
lret
subl
fsubp
fdivr
adc
jbe
ret
js
lds
jle
test
push
xor
imul
rclb
out
xchg
imul
call
mov
jecxz
repnz
add
mov
inc
xchg
daa
std
push
mov
xchg
xor
daa
push
dec
mov
xchg
lock
popf
mov
nop
std
lds
sub
gs
pop
mov
and
push
imul
push
test
push
push
orb
cmpl
ds
hlt
mov
xchg
xor
xor
xchg
std
jb
icebp
shll
mov
pop
out
and
inc
add
movb
push
test
test
jg
jecxz
cmpsb
mov
push
mov
xchg
adc
push
inc
inc
adc
lods
popa
dec
pushf
cmp
cmp
and
cmp
mov
fs
call
sbb
xor
popf
imul
test
in
std
mov
pop
jmp
repz
daa
in
jbe
jp
mov
popa
dec
push
fsubrp
jp
decl
dec
ds
cs
xor
sub
add
or
frstor
dec
test
push
cmc
sub
sar
cmpsl
mov
xor
push
sub
lods
sbb
sub
or
out
mov
int3
sbb
jge
int3
cmp
loopne
sub
pop
addl
inc
dec
dec
test
mov
out
inc
adc
mov
dec
repnz
dec
cmpl
or
enter
pop
bound
cmp
push
movsb
adc
jl
xor
cmpsl
js
inc
push
inc
lret
jne
cmp
cmp
cwtl
cmovge
lahf
aad
cmp
mov
fdivr
jl
add
das
push
dec
pop
push
xchg
jno
push
je
dec
lcall
adc
sbbb
adc
sahf
push
enter
das
sbb
mov
xchg
nop
icebp
int3
repnz
jnp
cmpsl
flds
and
cs
lahf
das
mov
nop
dec
push
mov
jb
mov
add
and
cmp
sbb
cmp
push
clc
jg
cmp
and
adc
adc
inc
or
in
loopne
add
sub
add
mov
pushf
push
mov
add
ljmp
test
xor
lock
inc
ljmp
dec
push
lock
lret
mov
or
add
lods
sbb
add
push
test
cmp
mov
xor
xchg
es
mov
pop
inc
scas
in
mov
adc
mov
xchg
mov
and
inc
aam
ret
sbb
mov
dec
imulb
and
imul
dec
aad
mov
movsb
mov
daa
xchg
push
dec
repz
xchg
outsl
inc
sub
popa
pushf
inc
stos
in
repnz
sbb
leave
out
test
mov
enter
nop
in
enter
inc
lea
fdivrs
dec
mov
dec
sub
loope
push
jns
dec
xor
fwait
mov
pop
sbb
cmp
mov
dec
cmpsl
add
mov
mov
lahf
adcl
inc
stos
or
sbb
and
enter
pushf
jb
dec
inc
and
mov
js
inc
xchg
into
dec
lock
pushf
loop
aaa
movsb
jb
jb
push
mov
and
dec
dec
popf
xchg
dec
mov
push
and
and
lahf
std
pushf
jb
add
movsb
bound
mov
leave
push
enter
pop
test
test
test
scas
add
xchg
dec
dec
pushf
nop
nop
or
add
in
lods
lods
lods
adc
jecxz
dec
cwtl
jg
push
ror
je
mov
je
mov
adc
dec
xchg
jg
inc
aam
popf
lcall
add
test
jns
lret
sti
ss
or
js
iret
adc
pop
shrb
lret
mov
mov
push
mov
push
mov
and
testb
xor
and
sbb
ja
stos
sbb
xchg
mov
adc
cmp
mov
or
mov
mov
cli
adc
add
sbb
sub
jno
fmuls
xor
sub
or
nop
inc
shlb
shll
adc
dec
into
in
xor
mov
movb
sub
lea
test
mov
sbb
call
jno
test
je
mov
xor
lds
lods
mov
ret
cmpsl
mov
sbb
push
or
push
cld
in
xchg
in
ret
and
jle
popa
add
ja
adc
sub
mov
js
push
icebp
sbb
je
jmp
bound
adc
sbb
jb
shll
loope
add
cmp
cs
sahf
xchg
dec
cld
lods
or
rol
jb
dec
and
dec
pop
sub
test
aam
sbb
sub
inc
push
gs
adc
xchg
es
insb
adc
or
scas
pop
inc
cmp
push
add
mov
sbb
xchg
and
and
fistps
inc
or
push
add
je
hlt
daa
lcall
inc
sbb
jae
testl
cmpsb
jmp
repz
addl
test
cmc
lods
add
or
inc
jp
dec
movsb
rol
cs
or
sbb
add
insl
dec
dec
rep
insl
pop
in
or
testb
jbe
movsb
inc
add
inc
cltd
xor
mov
loopne
sub
or
adc
jae
daa
jns
pop
adc
mov
gs
stos
and
jmp
imul
xchg
push
pop
jmp
adc
inc
stc
adc
and
inc
arpl
daa
push
push
dec
bound
mov
push
and
rorb
dec
push
push
mov
mov
out
inc
jecxz
adc
sub
pop
inc
inc
mov
jl
push
jo
xor
xor
sub
lods
pop
iret
add
add
int
call
daa
xchg
adc
stos
jge
rcrb
cmpsb
xor
sbb
push
sbb
pop
or
out
int
into
cmpb
shll
push
xorb
and
test
xchg
add
adc
xchg
mov
fwait
lods
movhps
pop
adc
lret
or
and
push
hlt
fdivr
adc
push
add
dec
push
cmpsb
repz
fcmovb
lea
shlb
aad
and
aas
cmpsl
cmp
push
mov
xorl
ficomps
or
shr
loopne
mov
or
jg
daa
shr
rcr
shr
rcr
or
jne
div
mov
fs
sti
fwait
addr16
inc
mul
add
jb
cmp
or
cmp
pusha
das
sti
push
jbe
dec
cwtl
or
adc
jne
clc
out
mov
push
movl
insl
and
mov
sub
ds
push
sbb
fisttps
xchg
cmp
jb
push
or
movsl
and
nop
clc
mov
add
cmpl
test
inc
mov
sbb
dec
sbb
pop
jg
mov
test
and
or
pushw
push
test
jp
inc
sbb
xor
sbb
or
or
push
inc
add
jb
inc
fsubrs
cmp
inc
fwait
pop
adcb
lahf
pop
mov
xchg
bound
or
or
or
mov
push
xor
push
and
test
xor
inc
ret
jnp
sub
jmp
imul
add
nop
pop
loope
add
add
adc
rorl
push
movsb
mov
imul
or
ficoml
push
imul
ret
mov
or
xor
nop
or
in
aas
dec
pop
rorl
and
mov
add
add
pushf
and
and
pusha
xchg
dec
sub
sbb
test
jmp
mov
pop
or
or
xlat
jge
mov
leave
and
cmp
xor
push
inc
add
and
sarl
ficompl
fmull
out
inc
fs
out
cli
inc
sbbl
pop
andl
cmp
xchg
pop
sbb
lret
cmp
cmp
cmp
imul
jbe
inc
rcrl
pusha
adc
pop
leave
push
sbb
pusha
dec
fistpl
mov
bound
rcrl
rclb
adc
test
pusha
inc
lret
imul
sub
sub
mov
hlt
add
pop
and
cmp
push
enter
add
fprem
and
sti
or
das
mov
mov
pop
shll
mov
jne
loopne
dec
xor
imul
aad
inc
mov
ja
push
add
mov
dec
lods
out
push
dec
test
jmp
xchg
sbb
cmp
loopne
nop
xor
dec
je
imul
scas
mov
mov
lret
or
push
scas
jmp
repz
pusha
xchg
xor
cmp
les
mov
lret
sbbb
int3
pop
dec
rcr
or
mov
cmpsb
jge
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
adc
and
mov
mov
pop
mov
popa
loope
adc
cwtl
fstpt
xor
inc
or
sbb
push
push
dec
jmp
loope
popa
cmp
insb
xor
pop
stc
es
aaa
xor
sbb
ret
push
fs
in
jecxz
and
pusha
mov
in
lcall
test
insb
insb
in
das
mov
fwait
jg
sbb
imul
pop
pop
es
pop
mov
je
adc
rorl
sub
sbb
push
sbb
es
xchg
cmpsb
adc
iret
pop
iret
dec
push
xor
pop
jmp
fsubs
arpl
test
adc
mov
mov
pop
add
xor
stc
xor
in
and
mov
iret
xor
push
and
or
and
inc
sbb
jne
mov
in
inc
clc
push
leave
ss
cmp
je
dec
jnp
aad
out
and
fdivrl
cmp
xchg
pop
addr16
outsb
sub
mov
adc
mov
mov
sub
sbb
mov
sbb
enter
sub
cld
pop
pop
aas
mov
jne
cmpl
movsb
js
and
cmp
cmp
jb
hlt
cmp
and
cmp
dec
fstl
or
dec
and
sbb
cwtl
jno
ja
inc
repz
sbb
mov
push
and
test
and
adc
mov
fisttps
mov
pop
inc
and
cmc
fsubrs
sub
and
outsl
insl
lahf
ljmp
cmp
xchg
or
push
or
mov
xchg
mov
mov
dec
adcl
popa
cmp
icebp
mov
cmp
pop
and
push
cmp
dec
mov
cmpsl
add
aaa
xor
dec
add
cmc
and
add
pop
and
dec
add
iret
in
cmp
mov
aam
dec
push
out
mov
xor
push
pusha
add
rcll
add
adc
fdivs
add
cld
mov
inc
and
cmp
push
shlb
inc
mov
push
mov
adc
jp
mov
enter
into
push
dec
enter
shlb
and
sub
test
sub
aaa
add
jne
xchg
add
lret
cwtl
cmpl
push
sub
push
repz
jmp
adc
jecxz
sarb
ret
xchg
inc
adc
add
shrl
enter
pop
je
pop
es
pop
int
or
dec
cwtl
xorl
aam
fimull
shr
call
dec
stc
add
cwtl
icebp
cmp
popa
xor
or
fcomps
dec
je
sarb
bound
leave
add
mov
mov
add
xor
inc
pop
xlat
cmp
mov
pop
add
adc
or
inc
inc
jle
pop
and
fwait
lods
push
sbb
and
push
inc
ja
les
mov
loop
xor
add
add
mov
popa
ret
bound
mov
inc
and
loop
jae
pop
hlt
or
dec
shl
test
cmp
push
cbtw
addr16
jo
mov
jge
push
push
orl
xchg
push
ljmp
mov
jle
dec
lret
pop
shrl
dec
movsb
clc
inc
cs
and
sbbl
jo
push
hlt
xchg
xor
mov
add
mov
enter
sahf
cmp
dec
inc
inc
or
jne
and
fidivl
sar
rclb
cwtl
pushf
pusha
hlt
sbb
pushf
sbb
dec
js
add
and
pop
pusha
mov
aam
mov
test
sbb
jg
mov
pusha
jb
jmp
and
add
and
shll
lret
cmp
aam
or
out
int
pop
bswap
xor
pushf
pop
or
aas
dec
subb
popf
push
push
mov
decl
sub
push
push
pop
push
dec
testb
aam
mov
or
or
jl
jmp
add
or
or
or
js
and
push
and
xor
mov
inc
outsb
inc
mov
in
xor
xchg
js
into
mov
adc
cmp
adc
cmp
mov
adcl
mov
jb
cld
shlb
add
and
lea
sbbb
pusha
and
and
insl
sub
push
cmp
jg
popf
or
mov
mov
inc
add
add
push
mov
mov
dec
subb
loopne
call
cmp
clc
add
out
add
xor
push
push
inc
add
lods
pop
push
push
and
pop
jge
sub
dec
incl
hlt
inc
or
fadds
xchg
dec
ret
pusha
repz
test
jmp
xchg
xorl
push
pop
jo
mov
invd
pop
cmc
push
cltd
push
loopne
aam
adc
aas
push
insb
xchg
or
xor
xor
xchg
stos
inc
mov
add
adcl
sub
mov
and
push
add
add
mov
jmp
scas
pop
notb
adc
arpl
add
pop
and
fbstp
out
mov
jecxz
pop
movsl
test
add
push
mov
xor
xchg
add
lock
shlb
rorl
push
sarl
xor
and
mov
shrl
in
or
adc
lock
not
xchg
mov
inc
add
sub
popa
lds
les
jb
rcrl
and
sbb
add
ret
sub
adc
jge
sbb
out
jmp
push
out
stos
jnp
push
sub
scas
sbb
jg
adc
and
inc
xor
jo
test
add
cmp
mov
mov
cli
sub
adc
push
cmp
mov
jg
cmp
je
sub
inc
cmp
jo
movsb
sub
addb
jle
inc
adc
mov
rep
rcrl
neg
pop
sub
dec
lock
push
lcall
xchg
fimuls
dec
mov
ror
push
dec
sbb
lcall
in
mov
shrl
add
push
in
mov
popa
nop
data16
popa
push
mov
fadds
add
sub
sbb
mov
mov
mov
fsubs
jl
mov
cmpsl
push
add
inc
push
dec
repz
inc
and
imul
pop
xchg
inc
mov
fsubrp
das
je
add
inc
adc
outsb
jns
lret
jae
cmpsl
lock
hlt
pop
sahf
lret
inc
dec
adc
negl
mov
dec
jecxz
dec
mov
push
mov
mov
push
add
mov
push
xchg
aam
pop
adc
fsubrs
push
xchg
cmp
fisttps
or
pop
xor
push
repz
jle
pop
outsl
inc
or
jbe
xchg
dec
in
jle
sahf
outsl
ja
mov
stos
mov
sub
sbb
hlt
test
ret
ror
and
ja
lret
loope
or
jb
fs
test
into
and
cld
fwait
loope
call
sub
mov
mov
sub
ja
mulb
push
jg
add
sub
adc
fsubrs
fld
xchg
rcl
mov
clc
in
lock
rep
add
mov
les
add
adc
adc
ss
and
push
aaa
movsb
xchg
or
push
adc
mov
stc
shrb
add
dec
out
pop
add
ret
pop
xor
xor
cmp
push
fstpl
add
or
xchg
bound
jo
movsl
mov
js
xchg
test
inc
xchg
mov
roll
sub
fsubrs
mov
mov
add
push
sbb
insl
xlat
inc
loope
add
les
mov
push
add
jb
stos
jge
fcompl
int
xchg
lret
fcoms
enter
sbb
or
mov
decl
or
or
cmp
mov
les
js
xor
inc
js
fcoms
faddl
ret
xor
popf
adc
test
add
mov
cmp
add
xor
mov
inc
jo
jmp
test
ret
and
xor
enter
mov
or
sarb
add
sbb
in
out
fstl
add
sub
sub
adc
fcomp
arpl
sub
test
or
push
add
and
or
insl
testb
jmp
adc
outsl
insl
inc
push
jp
add
jae
outsb
movsl
repnz
inc
add
or
dec
gs
lcall
fsubr
inc
jnp
cmp
mov
jecxz
mov
stos
cltd
test
aaa
repz
adc
ficoml
inc
or
cmp
jl
incl
or
jl
cmp
jg
inc
ljmp
hlt
pop
cmc
adc
sub
cmp
imul
jle
push
ret
cmc
aas
push
adc
sbb
dec
enter
adc
push
xchg
cmp
rcr
fsubs
popa
push
jb
push
pop
adc
fs
jle
inc
push
mov
inc
cmp
lds
mov
rcll
xor
dec
dec
sbb
ja
cld
and
fdivrs
ja
pop
jo
rcrb
cld
test
add
sbb
or
sbbb
test
pop
sub
xchg
sbb
mov
pop
test
or
int3
add
xor
pop
cld
adc
adc
rorl
aaa
mov
movsb
packuswb
adc
shr
inc
sbb
push
inc
push
cltd
or
sbb
fisttpl
push
jbe
dec
sub
sbb
clc
jns
xor
or
fisubl
fisubl
dec
adc
cmp
fxch
into
test
xor
sbb
movsb
mov
mov
add
push
push
decb
leave
out
jne
mov
mov
repz
icebp
sub
clc
adc
repnz
mov
int
mov
or
dec
sbb
rorb
rolb
sarl
jo
add
inc
and
stos
push
fiaddl
pop
mov
fnstenv
sub
adc
into
jae
sbb
cltd
and
cmc
jne
imul
cmp
adc
mov
adc
adc
daa
or
pusha
and
cmp
sbb
xchg
add
inc
mov
or
xor
imul
ss
pop
pop
sub
bound
cmp
push
mov
inc
jl
cmpsb
cld
sbb
subb
mov
frstor
dec
scas
ret
xor
adcb
xor
cwtl
jp
adc
push
lcall
adc
mov
jl
and
xchg
mov
sbb
push
sti
sub
xor
cli
adc
pop
mov
subb
xor
lea
or
adc
shr
es
test
or
mov
ret
sbb
mov
popl
sahf
subb
inc
add
mov
push
pushf
adc
and
js
sbb
add
dec
je
cmp
inc
mov
mov
cld
dec
and
pushl
add
dec
arpl
sub
dec
cmc
aam
loop
mov
clc
sbb
inc
jmp
pop
mov
add
leave
xor
ss
loope
dec
lahf
mov
pop
repz
aad
inc
xor
int
add
lret
sub
add
inc
or
xchg
int3
daa
xor
sub
adc
insl
in
adc
ss
xchg
xchg
and
sub
test
cmp
xchg
ss
and
inc
cmovs
daa
daa
daa
dec
push
push
pop
leave
leave
leave
add
leave
leave
leave
leave
push
arpl
leave
js
gs
and
sbb
mov
xchg
cwtl
and
dec
xor
leave
test
sub
sub
and
je
cmp
outsb
mov
add
fdivl
pop
in
mov
or
dec
xor
insl
inc
adc
dec
adc
rorb
sbb
xor
add
mov
rorb
pop
or
inc
insb
pop
pop
adc
adc
cmp
inc
ret
cwtl
inc
jae
cmp
shlb
mov
js
inc
dec
jne
out
adc
movsb
push
inc
or
lret
sbb
xchg
add
pop
pop
push
jmp
sahf
orb
in
add
push
loope
mov
pusha
and
xchg
pop
sbb
adcb
and
jne
and
fdivr
and
stos
dec
int3
es
imul
add
or
cmp
jge
sub
js
add
pop
les
pop
in
add
xor
add
popa
les
cltd
js
xorl
inc
sub
sub
dec
daa
and
push
lea
je
add
popf
imulb
sti
in
test
push
xor
ret
lret
xchg
mov
mov
lock
add
fmuls
and
popf
mov
int3
cmp
in
mov
rcrl
inc
cwtl
xor
jge
outsl
cmp
sbb
int
xchg
pop
sbb
pop
mov
je
push
pushf
out
xchg
mov
inc
push
clc
add
and
fsubl
or
sbb
mov
jo
das
enter
mov
sbb
dec
popa
adc
sub
inc
cmp
jnp
jns
in
add
lret
mov
lret
lret
push
mov
outsl
enter
pop
jne
in
and
and
mov
mov
adc
clc
cmp
add
sbb
add
mov
cld
mov
inc
pop
xchg
jmp
mov
dec
or
orb
pop
mov
push
adc
scas
fs
add
iret
cmp
inc
pop
orb
add
and
fcoms
das
push
dec
testb
into
decl
loopne
mov
cmc
js
pop
mov
add
adc
mov
jl
cmp
jb
push
push
dec
in
mov
push
scas
jmp
add
cld
lea
adc
mov
into
push
shrl
push
and
scas
insb
pop
mov
or
adc
notb
fwait
lret
sti
lods
test
or
fwait
jo
test
push
sti
or
fxch
mov
fiadds
sarb
jne
js
in
push
push
and
xor
inc
out
xor
cmp
xor
aas
add
gs
push
shr
popa
mov
pop
mov
xchg
cs
lea
in
das
and
out
mov
add
sar
mov
aas
mov
add
xor
fsubs
lret
aad
xor
add
and
fstps
xchg
push
adc
jo
pop
popf
add
cld
mov
inc
sbb
mov
push
lods
dec
ljmp
sub
pop
mov
test
cmpsl
xor
dec
sub
xor
xchg
pop
addl
cmp
mov
xchg
test
mov
cmp
adc
cmp
in
movsl
inc
ja
lods
mov
in
and
mov
mov
mov
lods
test
mov
dec
add
ret
pop
dec
jmp
pop
pop
out
lret
add
and
xor
rcl
cmp
push
lret
jo
leave
or
mov
decl
jmp
push
dec
inc
adc
lahf
ret
add
fildl
inc
pop
pusha
xor
lods
jnp
xchg
cmp
call
cmp
jnp
or
ss
aas
add
mov
xor
sarl
ja
mov
mov
cmpl
add
cmpsl
push
test
push
or
push
js
loopne
add
ljmp
sub
add
cmp
jne
movzwl
adc
ret
and
aam
adc
jecxz
into
sbb
out
inc
int
cmp
daa
inc
stc
adcl
adc
clc
pushf
jo
test
push
jae
add
js
cmp
dec
mov
lcall
push
inc
jg
mov
adc
mov
push
mov
inc
mov
sbb
xchg
xchg
xor
xchg
sbbb
push
dec
mov
popa
pusha
dec
aas
mov
mull
jmp
xchg
mov
andl
add
aaa
xor
scas
jnp
push
cmp
mov
adc
divps
or
inc
rcrl
mov
adc
cmpl
fmuls
pop
lds
push
and
inc
and
rcrb
loop
jnp
mov
daa
jmp
shrl
dec
decl
in
jb
nop
shld
inc
cmp
icebp
int3
add
xchg
imul
rclb
inc
lods
push
sbb
mov
push
or
inc
inc
sbb
or
push
pusha
mov
dec
leave
sub
pop
add
enter
jl
push
dec
dec
stc
pop
fdivrs
mov
mov
add
cltd
mov
cmp
push
xchg
sub
add
xchg
pop
addb
test
mov
les
push
pop
lock
cmp
or
push
gs
and
or
pop
jno
movsb
xor
outsl
cmp
mov
push
xor
push
xorl
lret
jmp
or
sub
repz
icebp
popa
aad
pop
or
and
lea
mov
pushl
xchg
xchg
sub
lcall
jne
xchg
or
lcall
lock
cmp
adc
xor
jbe
ret
cmp
mov
xor
inc
cmpb
cwtl
fcompl
sti
and
sbb
into
cmpsb
pop
or
mov
xor
pop
or
gs
sbb
pop
and
je
scas
or
aaa
push
xor
cltd
pop
mov
push
sub
cs
in
aad
add
jne
mov
add
loope
push
or
push
jp
add
adc
add
mov
and
push
mov
popa
add
jmp
pop
rorl
mov
fdiv
and
stos
lahf
or
pop
ret
sbb
jo
mov
inc
add
inc
rcr
out
push
orb
xor
adc
inc
not
fsts
pusha
testl
add
jbe
mov
mov
inc
push
and
push
out
push
mov
adc
add
fidivrl
shlw
ret
add
ljmp
and
push
mov
out
pushf
cli
inc
rorl
pop
mov
sahf
in
fisttpll
jl
js
or
call
rcl
out
cmp
enter
pushl
nop
cmp
jmp
mov
or
push
repnz
mov
cmp
adc
or
rorb
clc
into
shlb
ret
adc
push
adc
stos
xchg
mov
sbb
dec
loope
sub
push
fistps
cmp
lods
jg
rcrb
mov
push
dec
pop
fcmovnbe
sub
dec
push
xor
bound
xchg
lcall
adc
aad
aaa
dec
xchg
xor
mov
and
pop
pop
adcb
push
pop
lods
pop
mov
pop
pop
or
inc
and
mov
jg
sbb
add
push
add
clc
je
xor
and
xchg
or
into
lcall
inc
sub
hlt
lock
pushf
js
push
dec
mov
mov
inc
notb
mov
push
push
and
je
push
ret
inc
cmp
shlb
test
add
mov
in
js
pop
sbb
push
add
insb
mov
lock
jmp
imul
add
rol
cmp
pop
adc
sub
rcr
add
mov
add
cmp
push
test
test
push
clc
loopne
je
jns
jmp
test
push
xor
xor
jecxz
loope
xchg
push
add
and
mov
adc
icebp
xchg
ret
push
dec
movsb
mov
cmp
cmp
les
jb
cmp
sahf
xorb
push
sbb
loope
fiaddl
lea
inc
lcall
loopne
sub
rclb
les
in
add
mov
add
fcomps
cmpl
subb
inc
dec
sbb
jmp
push
push
repnz
addb
inc
mov
das
push
jns
pop
mov
ljmp
dec
pop
mov
adc
mov
cmp
jge
push
ret
or
sbb
dec
je
push
xor
adc
jecxz
inc
sbb
push
inc
cmp
sub
sub
sbb
fdivrs
push
outsb
orb
aam
jne
orl
cs
cmp
mov
xor
jge
sbb
adc
dec
cmp
jnp
add
aas
repnz
or
dec
inc
das
adc
inc
jb
push
inc
sub
dec
and
adc
into
jl
or
or
adc
in
sub
mov
mov
popf
inc
inc
dec
sbb
push
mov
popf
jbe
inc
and
jne
or
popa
jle
inc
data16
jmp
sbb
movsb
mov
in
das
add
pusha
popa
out
rorb
adc
pcmpgtb
and
and
clc
jbe
push
pop
push
dec
or
ror
mov
pop
adc
mov
std
dec
and
pop
scas
jmp
add
sbb
popa
movsb
and
lods
roll
add
cmp
mov
xor
adc
sub
je
push
popf
repnz
mov
scas
outsb
insb
cld
sahf
and
data16
pop
idiv
add
push
xor
clc
mov
dec
sub
adc
sbb
dec
imul
lret
push
or
or
test
push
or
lea
push
push
adc
adc
dec
add
and
je
lahf
xchg
test
and
add
sbb
repnz
mov
adc
sub
shll
enter
dec
xor
adc
or
mov
cmp
shr
add
jmp
fmul
and
and
and
push
clc
fsubs
sahf
lock
cmpl
test
adc
test
mov
xor
xlat
mov
or
xchg
mov
add
mov
sbb
or
sub
popf
jp
incb
jmp
sbb
lock
popf
mov
mov
cld
mov
and
mov
jecxz
jge
add
or
jmp
sub
cli
mov
loope
jp
jg
pop
xor
sub
mov
mov
pusha
and
push
sbb
add
fstps
or
jge
pusha
mov
pusha
loope
pop
sub
movsl
pusha
xchg
les
inc
jecxz
pop
inc
ficoml
pusha
cmp
frstor
imul
jae
push
inc
sahf
rolb
adc
insb
dec
pop
or
xchg
adc
push
sahf
lret
add
add
clc
mov
fisttps
pop
cltd
xor
pusha
imul
dec
jne
orl
mov
sti
xor
dec
push
adc
testl
fsubs
push
adcb
mov
jb
sbb
jmp
push
and
inc
add
fsubr
or
pusha
imul
fisttpll
cs
addb
ficomps
out
xchg
xchg
ret
inc
push
cmp
insl
sub
pop
pop
lods
pop
sub
xor
add
loop
adcb
inc
dec
push
sbb
xor
lret
or
xchg
or
sbb
push
aaa
mov
clc
sbb
fldz
repnz
int
test
fstp
outsl
jl
add
sub
sub
jmp
pop
jb
pusha
sub
push
or
psubusw
xor
test
int3
adc
div
add
and
test
dec
lock
daa
pusha
xor
push
push
loope
and
in
fstpl
lods
add
cli
or
stc
into
jbe
or
or
or
push
mov
inc
sbb
pop
daa
mov
enter
sub
repnz
jge
jg
add
mov
xor
add
dec
into
adc
shrl
sbb
jp
dec
in
xchg
push
rol
jbe
lock
out
push
jno
mov
sahf
jmp
jo
inc
test
pop
inc
dec
xor
in
aam
test
mov
xchg
xchg
and
mov
jmp
adc
xchg
sbbb
fcomi
call
add
mov
sbb
pop
add
and
jp
addb
jmp
or
dec
movsl
add
out
pop
add
mov
push
pop
mov
add
daa
jno
adc
and
pop
popa
andb
hlt
dec
sbb
adc
adc
jnp
add
or
call
cmpsb
imul
sub
and
test
dec
push
hlt
push
ret
add
dec
out
jl
test
loop
enter
lds
fwait
jno
mov
dec
inc
and
add
cmp
cmpsl
loopne
cmp
or
fidivs
aas
add
or
mov
jecxz
div
xor
ss
pop
andl
jnp
inc
in
mov
dec
outsb
add
xor
enter
and
or
loope
and
sub
xchg
les
mov
mov
loopne
xor
ja
popa
jecxz
mov
mov
jnp
inc
lock
inc
adc
fidivrs
add
mov
jae
mov
int3
mov
mov
test
mov
int3
pop
cld
mov
lods
pop
clc
mov
jo
cs
shl
push
xor
in
cmpps
sahf
scas
xchg
jg
xchg
or
jne
repnz
gs
and
xchg
js
faddp
mov
xor
out
mov
sbb
in
inc
shlb
push
push
inc
clc
jecxz
fadds
into
mov
mov
cmpsl
mov
addl
push
push
shrb
push
sbb
ret
repnz
jnp
imul
pop
or
xchg
rorl
mov
in
ds
mov
or
shll
push
or
push
inc
pop
sbb
push
mov
push
cmp
or
cld
push
xlat
sahf
and
sbb
sub
shr
loop
enter
sub
dec
aad
enter
push
fldl
mov
adc
roll
cmpsb
inc
fxch
and
cmpl
bound
mov
push
or
insl
or
push
mov
cmpb
or
sub
fwait
mov
adc
sbb
stos
mov
adc
or
stos
jo
aaa
jle
call
mov
popf
jb
jo
push
es
je
cmp
je
sbb
adc
ldmxcsr
xchg
push
sbb
xchg
and
pop
or
popf
test
dec
or
repz
call
add
xchg
pop
add
jg
sbb
inc
mov
sbb
sub
mov
shrb
addr16
or
xor
pop
pusha
xchg
sahf
xor
push
mov
adc
test
push
test
pop
jbe
lret
mov
jnp
add
addr16
and
lea
in
test
mov
adc
push
ljmp
pop
nop
sti
in
test
divb
inc
stos
xor
stc
mov
inc
inc
psubq
mov
pop
lods
xorl
in
out
add
mov
pop
in
adc
enter
or
add
loope
or
inc
add
push
xchg
add
dec
add
xchg
xchg
cli
inc
xor
push
jle
mov
dec
cmpw
add
or
inc
es
shlb
xchg
and
dec
leave
mov
nop
adcb
or
pusha
xchg
sti
in
cltd
sub
jp
push
dec
or
sub
leave
jb
jmp
inc
adc
dec
push
or
cmpsb
add
mov
sub
ret
fsubs
adc
mov
aas
jb
add
scas
cwtl
pop
test
jne
jg
test
mov
mov
mov
stos
stos
repnz
pop
pop
sbb
aam
hlt
rolb
xor
jmp
cmpb
pop
add
insb
pop
testb
add
lea
hlt
pop
shrb
lock
inc
shl
les
dec
add
test
pop
inc
aam
mov
not
test
add
mov
pop
or
jmp
dec
cltd
insb
pop
and
mov
out
psubd
scas
mov
inc
push
into
mov
jbe
dec
mov
add
dec
pop
sbb
and
clc
sbb
iret
xor
cmp
adc
in
adc
incb
jae
add
mov
adc
shll
push
rcrb
push
and
jge
push
or
add
rolb
roll
mov
cli
jo
insl
sti
cmp
dec
dec
stos
inc
in
xor
mov
cmp
lods
shll
cmp
push
movsl
xor
pop
adc
std
jae
and
sub
not
mov
pop
popf
je
mov
and
sub
pop
dec
push
ds
push
or
loope
sahf
and
lock
rclb
mov
jl
inc
rol
test
out
mov
sub
sarb
int
lock
fs
aam
mov
jb
out
pop
xor
mov
loop
add
hlt
test
leave
add
in
push
mov
test
lcall
push
push
ja
add
cli
mov
mov
pop
cld
pop
add
pop
stos
adc
iret
dec
jns
inc
lock
dec
and
add
ret
jecxz
or
mov
lock
daa
jae
cmp
mov
out
addl
mov
lahf
push
lea
push
jge
pop
or
gs
stos
mov
into
out
aaa
ret
or
mov
out
and
cltd
lea
sub
pop
dec
xor
cld
sbb
jge
sbb
addb
xchg
adc
scas
shl
nop
add
add
or
push
adc
enter
fiadds
adc
loop
stc
and
adc
ds
rcrb
pop
pop
xchg
repnz
pop
repz
fsubl
xor
pop
pusha
cmp
nop
inc
bnd
or
and
sbb
movsb
xor
repz
push
fs
jl
adc
add
pop
inc
pop
sti
push
in
xor
push
adc
mov
or
imul
jne
lds
pop
inc
nop
cli
xlat
mov
push
lods
mov
or
fidivrl
or
jmp
xor
pusha
dec
loopne
or
xchg
add
ljmp
dec
fcmove
sub
cmp
ja
mov
dec
jmp
fs
jecxz
fisubrl
mov
into
add
sar
push
call
or
fisttpll
cmp
scas
pop
lahf
std
add
mov
adc
jmp
or
sub
mov
add
lods
or
sti
or
je
cmp
jle
sar
cmp
jle
cmp
push
xor
sbb
push
jmp
dec
push
hlt
fcoml
push
xor
jbe
adc
loopne
mov
imulb
addb
inc
lock
jae
movb
mov
ret
mov
jmp
adc
fdivp
sbb
pop
cmp
test
lods
inc
in
nop
add
jne
clc
dec
jae
nop
lret
sti
je
jmp
mov
or
imul
jge
jmp
and
outsb
mov
call
inc
sti
sbb
sub
jae
adc
gs
andl
rorb
pop
cmpsb
push
and
scas
mov
xor
shll
mov
stos
sub
mov
inc
and
fstpl
mov
jge
mov
add
orb
fsubrs
adc
add
inc
testl
pusha
and
rcr
repnz
cmp
jle
mov
add
jmp
cld
popa
sti
pusha
add
leave
sub
inc
mov
cmp
or
jecxz
ret
jmp
mov
jmp
push
cwtl
inc
mov
nop
fdivs
sbb
mov
mov
dec
in
lock
in
mov
add
push
xor
cwtl
jge
neg
add
mov
aaa
dec
sbb
test
stos
out
mov
cmp
adc
lock
jmp
fstp
in
xchg
push
enter
mov
xor
sub
push
and
inc
in
dec
test
lods
sarl
dec
addr16
inc
push
inc
mov
sbbl
and
push
jmp
push
mov
dec
mov
cmp
dec
sbb
push
orb
mov
js
jecxz
mov
mov
mov
jmp
lock
and
and
adc
nop
mov
rolb
lahf
ja
dec
iret
sbb
ja
push
fstl
mov
pop
mov
daa
pop
pop
movb
testl
jne
enter
fisubs
jne
jne
test
into
jne
aaa
add
mov
or
cmp
cmp
jne
xor
jne
push
add
jbe
mov
mov
test
rcrb
pusha
push
jnp
insb
sub
lea
dec
mov
jp
adc
jl
scas
sbb
cld
cmpsl
repz
out
icebp
dec
lock
and
data16
add
sub
divl
int
sub
stc
jg
xorl
mov
pop
add
test
js
mov
aaa
sbb
adc
aam
flds
out
lods
add
or
shr
dec
or
push
sti
sbb
outsl
in
mov
jg
or
mov
jge
mov
les
add
notb
je
fisttps
or
movsb
dec
fcom
insl
fcoml
loopne
shr
or
mov
sahf
dec
add
aam
shrl
pop
cwtl
leave
mov
push
and
and
mov
dec
jge
cmp
add
ficompl
fdivs
fcmovbe
sti
pop
dec
lock
andl
inc
jmp
call
xor
mov
das
jle
jb
jo
ret
dec
fmull
loopne
dec
ja
orb
sbb
jmp
test
or
xchg
sub
pop
mov
jmp
scas
aam
mul
out
ljmp
jno
xchg
je
int3
roll
xchg
add
test
mov
push
lret
das
sub
add
loopne
mov
jns
sub
enter
movups
les
or
or
call
mov
xchg
add
mov
inc
add
add
cmp
out
pop
push
sub
iret
lock
lods
inc
and
mov
jae
push
lret
iret
je
or
mov
cmp
push
test
pop
jne
cmp
xchg
mov
scas
or
mov
mov
mov
mov
rorl
in
pop
cmp
in
sub
mov
push
pop
sbb
xchg
js
pop
sti
adc
inc
cs
or
pushl
stc
gs
or
out
mov
dec
cmpb
out
decl
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
push
lock
fldz
call
sbbb
jp
cmp
add
cmc
pop
pop
sub
jae
sbb
clc
adc
xor
and
mov
add
jmp
xor
adc
lock
sti
add
sub
insl
and
push
add
mov
push
jl
pop
jno
shlb
pop
and
inc
fildl
or
test
sub
xor
gs
xchg
mov
xlat
add
inc
imul
ljmp
or
add
adc
adc
mov
clc
cmpsb
test
dec
setg
cmpl
in
clc
add
mov
mov
mov
cmpl
mov
jne
movb
jge
pop
xor
xchg
cmp
push
mov
xchg
cs
xor
mov
es
cmp
add
add
call
test
pop
lret
mov
loop
add
repnz
xor
hlt
pop
js
jge
dec
add
inc
dec
jb
inc
out
cs
mov
add
mov
xchg
xchg
fs
jbe
notl
xor
push
or
bound
ljmp
mov
pop
in
push
aaa
xor
lea
inc
imul
es
scas
mov
std
into
xor
pop
xchg
inc
push
xor
popa
and
insb
cmp
or
xchg
out
rclb
outsl
sbb
pop
ret
jbe
push
clc
dec
pusha
cmp
mov
aam
sub
adc
lret
into
lahf
adc
das
xor
shlb
enter
je
mov
push
sbb
pushf
and
dec
shlb
jno
popf
mov
leave
inc
ret
jl
pusha
flds
cmp
cmp
in
pushl
sbb
sbbl
ret
jge
das
push
imul
arpl
fyl2xp1
int
bnd
add
sbb
dec
cmp
fcoml
add
mov
roll
mov
push
adc
enter
cwtl
dec
test
test
or
aam
dec
not
or
rorl
loopne
dec
sar
lea
fsubrl
test
jno
add
enter
add
int
push
inc
xchg
xchg
add
push
xor
jg
gs
add
repnz
push
add
scas
mov
cmc
jg
out
dec
je
xor
leave
and
add
mov
and
rol
or
je
ret
sub
or
imull
jle
fistpl
sub
loopne
lock
ret
daa
inc
adc
std
xor
or
jne
pop
cmp
sahf
punpcklwd
add
int
loop
scas
test
icebp
nop
mov
xor
inc
push
sub
sub
xlat
adc
jg
xor
bound
sub
xchg
fstps
push
sub
adc
push
or
add
lcall
mov
loop
add
popa
cld
xchg
shlb
mov
ret
mov
mov
dec
shrd
push
jle
dec
xchg
ss
ss
add
test
push
cmpsl
clc
mov
sbb
pop
or
cmp
nop
stc
inc
dec
cs
dec
jmp
xchg
clc
lcall
cmp
push
add
aaa
ret
clc
incb
push
and
mov
aad
push
pop
cmp
sbb
adc
add
rolb
pop
jnp
dec
and
jl
mov
push
pop
sbb
js
jg
jb
push
sub
or
pop
cmp
fidivrl
rorl
rcrb
shll
sub
sbb
js
add
jg
insb
xor
mov
test
jl
cmp
add
mov
dec
inc
dec
pop
or
into
add
sbb
add
add
rorb
test
add
stc
mov
or
mov
or
scas
jnp
add
lds
dec
dec
dec
adc
or
loop
jmp
mov
or
mov
test
mov
and
cmp
pop
sub
sub
enter
or
or
push
lock
inc
sub
xor
jge
shlb
int3
jl
fcompl
xchg
or
push
mov
add
xorb
xor
adc
ficompl
pusha
bound
and
adc
xor
add
push
pushf
fwait
mov
daa
mov
leave
enter
repz
xchg
js
enter
add
clc
inc
lret
jbe
adc
or
lods
xor
rorb
imul
mov
adc
push
insl
push
jmp
insl
cmp
adc
pusha
js
cld
jl
rclb
mov
add
inc
add
mov
aam
shr
loop
mov
mov
sbb
jns
das
nop
call
clc
xchg
or
pop
data16
dec
aaa
jo
in
add
mov
inc
popa
je
inc
je
dec
add
cwtl
push
add
xor
inc
and
movsb
enter
add
stos
xchg
pop
or
xchg
test
cmp
xchg
and
es
and
add
jbe
call
call
dec
add
push
pop
clc
fstps
mov
mov
or
mov
push
shl
inc
inc
mov
add
mov
ret
das
add
bound
insb
pop
arpl
js
std
sarb
or
je
dec
pop
aas
push
mov
inc
add
adc
cmp
loopne
rcrl
jecxz
mov
push
cmpb
jne
jp
pop
and
dec
sub
pop
jmp
xchg
mov
jmp
int3
adc
sub
adc
add
jmp
lods
fnsave
imul
push
xor
ficoml
jno
jne
push
jne
pop
addl
sub
jmp
add
mov
andb
lret
int
or
cmp
add
lea
jmpw
push
pop
inc
mov
rol
or
inc
jmp
insl
lds
cmp
lret
mov
cmpl
pop
or
or
push
jge,pt
pop
sbb
dec
push
mov
mov
fcmovnbe
mov
imul
dec
pop
add
adc
ret
repz
mov
mov
xchg
add
lret
mov
and
enter
pusha
jnp
imul
popa
loop
cmpb
mov
sarb
sbb
int
lock
or
das
out
pop
cmp
push
pop
push
mov
sbb
pop
out
mov
xor
ja
add
xor
add
sbb
lcall
push
push
jmp
or
jmp
mulb
outsb
jecxz
ja
or
incl
adc
test
addb
sbb
jb
xor
mov
cmp
jne
xchg
aam
pop
or
xorl
mov
mov
mov
xchg
rorb
or
sbb
mov
ss
mov
push
sbb
or
rcl
incl
pusha
mov
and
stos
lea
cmp
jg
fnstcw
cmp
add
adcl
sub
aad
add
jno
xchg
jns
js
sbb
dec
dec
mov
xchg
lods
or
cmp
lea
jp
jo
push
inc
sbb
jo
xchg
xor
jns
jne
int
fisubs
int
mov
cmp
cltd
fwait
or
fs
jecxz
mov
aam
push
mov
je
mov
rcl
js
lea
test
loope
movl
mov
mov
outsb
jge
or
sarb
cmp
mov
add
in
jno
cmp
mov
gs
and
sysenter
sbb
pop
xor
add
add
or
adc
sub
push
std
lods
inc
jl
cwtl
and
xor
incb
hlt
add
lcall
inc
jmp
xchg
and
insl
xchg
test
and
test
mov
in
sub
mov
inc
xchg
jle
push
push
adc
and
movd
add
testb
std
mov
daa
push
jmp
or
shlb
push
mov
test
inc
sbb
xor
jg
or
adc
cmp
add
adc
repz
repnz
jl
leave
int3
inc
and
push
xchg
push
ret
fsubl
pusha
push
sbb
xchg
sub
mov
xchg
push
xlat
insl
lods
icebp
or
mov
dec
lock
xor
jl
das
add
pop
sbb
push
mov
inc
or
sysexit
cltd
jne
popa
push
sahf
or
jmp
shl
push
leave
fcmovnb
add
mov
fidivs
or
or
ss
inc
xlat
sbb
popa
xchg
bound
loope
pop
lcall
leave
mov
sub
xor
mov
cmp
add
popa
outsb
inc
pop
or
aaa
les
sub
mov
xchg
insb
cmp
push
sub
dec
jo
sbb
inc
int3
cmp
xor
pop
sub
adc
pushf
pushl
sti
and
or
or
and
adc
fists
adc
inc
pop
loop
adc
jo
adc
das
adc
inc
mov
test
adc
fisubl
imul
add
call
lock
rorl
lea
or
sbb
sub
fdivp
shr
add
or
xchg
push
jo
testl
jns
shr
or
mov
cltd
xlat
lock
add
or
bound
scas
push
clc
add
in
stos
mov
cmp
push
ret
pushf
inc
shl
cltd
fildl
mov
add
int3
cld
push
push
inc
fucomp
inc
adc
fnstcw
inc
icebp
movsl
adc
int3
sub
lret
add
lea
mov
shr
and
cmpb
mov
adc
adc
scas
test
fimuls
xchg
sbb
jp
adc
popa
add
jae
adc
adc
dec
cmp
pop
sub
cmp
adc
out
sub
test
rolb
daa
dec
sub
mov
orl
in
jmp
cmp
shr
adc
ret
pop
and
shl
andl
adc
aad
and
mov
sub
cmp
add
notrack
jo
rorb
imulb
or
test
data16
jo
test
adc
in
sub
inc
and
inc
call
xchg
mov
ret
movsb
ficoml
insb
cs
lock
push
lock
add
cwtl
je
push
sti
cmp
xorl
cld
sub
jne
in
fidivrl
add
call
ss
adc
adc
test
adc
aam
mov
pushf
aam
mov
inc
mov
fstpl
mov
jle
test
or
test
pop
mov
les
in
xchg
push
add
xor
lret
lret
ficompl
mov
mov
mov
jg
lock
jl
cmpb
jl
xor
rorb
cmpb
idiv
push
push
and
xchg
adc
in
push
mov
push
dec
test
lods
adcl
addb
inc
or
ljmp
and
icebp
push
ds
inc
lods
push
and
fldenv
and
movsl
jne
aam
ss
rclb
cmp
sub
ror
shr
and
adc
daa
in
jns
add
dec
dec
add
cld
mov
and
enter
add
mov
test
jne
shrl
xlat
add
flds
and
shll
add
je
mov
dec
jo
or
fld
sbb
ret
in
dec
pusha
and
loop
pop
add
sbb
inc
je
aaa
push
adc
jne
lds
xor
pop
outsb
rorb
arpl
mov
daa
cmp
les
adcb
adc
ss
stos
ficoml
xor
in
incb
adc
fdiv
fiaddl
or
adc
sbb
pop
iret
and
sbb
jb
xchg
adc
jp
xchg
sbb
fcoms
pushf
push
inc
and
fsts
dec
icebp
sbb
adc
add
pop
xor
iret
insb
test
dec
inc
dec
jne
pop
pop
pop
insl
mov
jae
or
jae
addb
ljmp
shr
adcb
adc
adc
mov
idiv
and
mov
cld
lock
je
mov
scas
hlt
bnd
mov
sub
andl
in
cwtl
rorb
call
sub
mov
mov
jno
adcl
or
push
loop
and
cs
add
push
addb
add
into
jbe
jns
aas
sub
fcoms
test
sub
jne
aam
push
out
mov
es
dec
cwtl
cmp
aam
pop
adc
or
int3
sarb
mov
push
pop
and
pusha
xor
and
call
ss
clc
cs
fstpl
push
lret
sahf
and
and
sbb
int
xchg
dec
pushl
dec
ss
cmp
sub
dec
ret
fdivl
mov
adc
in
sbb
mov
sbb
lock
push
sub
jg
cli
or
je
jg
inc
mov
mov
imul
or
mov
je
fdivrp
aaa
push
and
mov
push
cmp
ja
add
cmp
adc
mulb
movsb
jg
cmp
jne
shll
leave
adc
pop
sbb
add
cmp
or
mov
add
mov
add
push
mov
mov
cmpsb
add
call
ja
sbb
mov
jnp
mov
push
mov
movb
icebp
pop
arpl
decb
ret
jmp
not
je
mov
scas
push
push
xor
mov
sbb
lea
mov
and
rorl
xchg
and
leave
fwait
fwait
add
jmp
jne
push
sbb
shll
cltd
inc
imul
das
sub
and
xor
mov
aam
out
fdivl
mov
cmp
adc
loopne
dec
add
dec
test
cmpsl
mov
lret
add
rorl
cmp
push
pop
inc
push
sub
shlb
mov
mov
cmpb
push
sub
adc
scas
or
daa
in
or
enter
imul
and
rol
pop
mov
add
or
sti
and
push
jg
mov
push
iret
repz
rcl
rcl
aad
fwait
iret
repz
fcomp
fstpt
or
negl
inc
jecxz
data16
inc
add
mov
mov
xor
data16
mov
push
xlat
push
jne
jbe
mov
aaa
insb
add
or
mov
add
fadds
add
adc
js
ret
and
xor
jo
pop
add
call
in
mov
call
cmp
jmp
into
cmp
das
or
push
adc
push
and
jecxz
add
fcomp
push
inc
movb
sbb
leave
adc
jmp
in
lcall
stos
sbb
dec
lea
sar
inc
shll
outsb
adc
mov
ret
neg
loope
scas
and
out
shlb
test
xchg
jl
mov
adc
sub
or
lret
or
es
fisubs
addr16
fcomps
pushf
push
jp
mov
aad
jb
test
add
jbe
or
dec
cltd
push
push
cwtl
add
hlt
dec
xchg
sbb
push
jl
leave
add
adc
lea
pop
sbb
ret
fcmovnbe
jae
push
repnz
xchg
mov
and
test
loopne
inc
mull
iret
outsl
popa
pop
loope
loopne
mov
lods
loopne
inc
or
cmp
loopne
adc
pop
mov
jne
jnp
lea
fwait
rol
test
ret
dec
rolb
push
mov
mov
pop
mov
sub
in
dec
xchg
mov
out
test
dec
cwtl
dec
push
insb
enter
cmp
mov
ret
movsb
repz
mov
mov
push
addl
push
cmpl
mov
inc
inc
test
rol
add
lret
jle
jle
adc
fsubr
jne
lcall
rolb
shl
fbstp
in
rorb
mov
lahf
movsl
dec
push
push
lret
push
jo
dec
inc
xchg
test
or
inc
lods
mov
test
inc
shrl
mov
out
mov
lret
sub
rolb
pop
repnz
push
lock
imul
xchg
out
lods
cli
inc
cli
div
and
push
shlb
push
pop
jae
fstpt
hlt
fneni(8087
call
stos
push
jnp
sbb
adc
pop
xchg
aaa
pop
test
test
sbb
lret
dec
xor
leave
mov
xor
mov
js
js
rolb
jae
cmp
iret
dec
rol
xor
lock
nop
mov
loop
pop
jnp
and
repnz
pushw
movsl
mov
loop
out
jge
mov
shll
add
out
inc
or
jo
ficoms
inc
andb
ret
xor
call
dec
add
or
hlt
xchg
out
jne
fdivrs
aam
inc
or
mov
inc
test
dec
ss
and
je
mov
lods
dec
adc
sbb
pushf
adc
add
or
call
mov
xchg
cmpsl
test
mov
mov
mov
push
xchg
dec
test
lods
lods
inc
jl
aaa
rolb
cltd
add
in
idiv
sbb
mov
sbb
mulb
call
testb
xchg
lock
xor
cmpb
jge
jno
or
inc
lock
adc
jmp
inc
pushf
xchg
aas
add
jne
pop
pop
push
jns
fnsetpm(287
loopne
cmovns
inc
into
mov
pusha
mov
jge
in
pop
jbe
stos
cwtl
sub
insb
sbb
out
inc
add
inc
mov
data16
push
add
push
nop
cmp
push
call
ss
add
jge
adc
sub
add
mov
xchg
push
pop
shr
rcr
shr
and
inc
push
shrl
test
cmpsb
mov
sbb
idivl
out
jle
inc
imul
inc
testl
add
loopne
fsubrs
xchg
push
and
sbb
sbb
fnsave
sti
les
add
dec
xor
add
push
ss
rorb
mov
add
sub
push
lock
mov
enter
loope
mov
dec
push
test
clc
push
outsl
sub
lcall
xor
fistpll
push
shlb
add
out
adc
adc
mov
cmp
shll
into
or
mov
inc
inc
ret
ljmp
jmp
dec
nop
dec
mov
clc
push
jg
dec
cmp
jge
sub
cmpb
or
add
dec
cmp
into
dec
sub
jae
jb
add
dec
mov
incb
sub
orb
pop
mov
mov
mov
out
sahf
ficoms
jp
jne
dec
mov
jb
int
and
add
pushf
adc
icebp
scas
ret
and
add
push
add
inc
jbe
lahf
and
or
add
add
lcall
and
ret
hlt
out
or
mov
mov
xchg
lret
xchg
and
push
jle
push
je
rorb
into
push
xlat
cmp
test
scas
or
pushf
movsl
popf
mov
ss
fists
add
or
pop
xchg
mov
xor
mov
jmp
mov
mov
mov
or
or
push
rclb
jae
test
inc
pop
mov
mov
iret
xor
push
xor
into
pusha
inc
jecxz
push
sub
and
pop
pop
pusha
iret
insb
or
mov
ret
ret
or
prefetchw
inc
inc
pop
and
ret
adc
cmpsb
ror
lock
pop
jae
or
or
test
xchg
adc
and
mov
test
push
inc
add
sbb
or
mov
ficompl
pop
pop
xchg
addr16
jmp
or
dec
pop
outsl
push
mov
sbb
adc
xor
xor
pop
sbb
clc
js
inc
jge
icebp
add
xchg
mov
data16
nop
roll
jae
inc
dec
pusha
add
cld
roll
sub
fdivl
xor
or
inc
stos
and
sub
into
xchg
cmpsl
add
and
int3
jge
scas
and
mov
stmxcsr
mov
bound
cltd
xor
in
xorl
add
cmp
rorb
mov
jle
pusha
push
mov
je
and
sbb
inc
jg
push
cmp
jns
into
into
mov
pop
and
pop
sub
fsubp
fisttpll
cwtl
xchg
push
shl
pop
mov
out
mov
not
and
or
pop
std
xor
push
movsb
nop
psubb
push
aas
movsb
or
pop
lcall
add
leave
lahf
pop
test
out
or
add
add
push
xor
adc
flds
sub
sbb
je
and
pop
lret
inc
and
imul
sbb
cmp
cmpsl
inc
mov
lret
aad
cmp
ret
out
add
jae
out
push
push
or
adc
push
dec
xchg
add
inc
movsl
add
ret
pushf
jae
orl
mov
adc
push
mov
addl
jo
add
cmp
loop
or
inc
out
sub
inc
or
fisubs
mov
dec
cmp
jle
and
daa
or
xchg
add
jge
push
rcr
sub
jl
outsb
lret
or
lea
cmp
sbb
lods
xchg
add
loopne
pop
inc
push
mull
js
dec
sbb
xor
inc
add
jmp
mov
orb
add
xchg
xchg
jmp
rcrl
mov
lods
add
jb
mov
lret
mov
out
xchg
mov
or
xchg
cmp
jbe
inc
inc
movsb
fdivrl
sahf
call
jle
fdivrs
push
lock
lds
ret
clc
ss
call
or
adc
jns
jmp
ss
mov
or
daa
sbb
cmp
and
push
popa
fiadds
das
insl
mov
repz
sbb
sbb
push
and
mov
movsl
imulb
push
inc
js
fs
jmp
rcrb
stos
cmp
js
jle
pushl
repnz
movl
rclb
push
mov
out
je
and
jecxz
pop
popf
rcr
push
xchg
inc
cmp
push
mov
and
nop
xlat
imul
adcb
adc
sahf
push
or
push
or
test
fcoml
in
adc
dec
cmp
lret
xchg
xor
xor
inc
sbb
clc
rcll
stos
ljmp
adc
jge
lea
shrb
pusha
push
pop
inc
dec
sbb
push
imul
scas
dec
mov
loop
and
imul
adc
xchg
out
add
test
test
sub
sbb
push
mov
xor
mov
inc
aas
add
loop
sub
fdivrl
rolb
jae
xor
pushf
cmp
and
gs
push
add
or
mov
sbb
hlt
jg
xchg
sub
mov
clc
fsubrl
and
jmp
xor
adc
push
mov
in
add
jne
push
inc
ljmp
rcrb
pushf
mov
jmp
xchg
xor
out
mov
and
mov
push
jecxz
pop
adc
sub
fmull
outsb
sub
mov
and
push
or
into
outsb
pop
add
xchg
xor
add
lret
orl
push
clc
mov
jno
add
sub
mov
mov
pusha
jns
cmp
xchg
je
shr
add
test
stos
push
test
out
jle
fimuls
or
call
shl
cwtl
ret
mov
add
push
pop
jl
pusha
dec
sub
push
lea
ss
int3
xchg
js
fimull
loopne
rol
sbb
fsts
fnsave
fcoms
jae
mov
adc
cld
loopne
jmp
dec
loop
andl
add
jmp
int
cmp
push
js
xor
mov
adc
sbb
shll
leave
add
ret
inc
js
scas
mov
inc
sar
ret
pusha
fcompl
xor
lea
movsl
xchg
ds
dec
pushf
mov
je
pop
cmpb
es
adc
ljmp
pop
arpl
sbb
lods
adc
inc
hlt
fsts
pop
xor
or
test
jnp
adc
lahf
subb
mov
push
sub
addb
outsb
adc
inc
inc
ds
push
and
addr16
add
or
cmp
pop
xor
in
dec
sbb
mov
enter
inc
data16
adc
push
daa
das
or
cmpb
mov
fidivrs
or
test
sub
dec
andl
jnp
shlb
cli
cmpsl
or
sub
sbb
icebp
out
sbb
test
lock
xchg
mov
icebp
jmp
rorb
sbb
shlb
insl
clc
mov
in
adc
push
fbstp
and
aaa
and
push
add
pop
pop
pop
sub
shl
sub
or
fld
sub
xchg
std
cmpsl
adc
cmp
jmp
fstps
xchg
xor
add
jno
xchg
fdecstp
rolb
jmp
cmp
fcomp
adc
jbe
in
adc
ret
fstps
xor
mov
cmp
mov
test
addl
push
adc
insl
jbe
xchg
add
mov
xchg
xor
fs
xor
lahf
inc
or
adc
cltd
clc
in
push
or
pop
add
movsl
fld
inc
add
pop
fidivrs
fs
loopne
jo
cmpsb
mov
movsb
cld
xor
ret
dec
imul
fmuls
daa
mov
pusha
mov
mov
xchg
into
xchg
mov
fidivl
jbe
adc
adc
adc
jmp
push
dec
aas
and
mov
icebp
daa
push
add
add
or
inc
out
gs
nop
movsl
xchg
xor
sti
sbb
push
test
and
mov
arpl
stos
or
rorl
mov
sub
or
mov
shlb
subb
mov
iret
xor
push
cmp
enter
pop
mov
sub
int3
xor
pop
imul
sti
ss
jb
dec
or
imul
data16
aas
lods
repz
and
insb
jmp
test
add
or
or
xor
push
sbb
inc
js
shlb
cmove
push
add
push
xchg
cmp
sub
jo
arpl
imul
cmp
icebp
inc
add
pop
sub
loope
and
loopne
fbstp
adc
push
cmp
push
or
pop
inc
add
jge
cmp
pop
call
addb
push
aad
sbb
loop
push
inc
mov
sbb
ja
ficoms
xorb
fmull
push
in
cmp
fistpl
pop
imul
sub
lcall
jle
sbb
push
dec
daa
idivl
cmp
adc
or
in
fmull
adc
ss
jmp
adc
pop
pop
pop
rorl
rcl
xor
sub
call
rcl
lock
fadds
popa
gs
mov
or
mov
jecxz
ss
in
inc
cmp
pusha
popa
cs
sub
sub
sub
jle
push
push
mov
mov
lahf
imul
cwtl
hlt
push
ret
aad
dec
push
inc
in
fldl
mov
mov
cmc
test
int3
iret
inc
dec
stos
add
aad
test
xor
popa
fstl
push
add
add
pop
mov
sbb
dec
mov
xchg
ljmp
addb
aas
int
inc
mov
pop
push
or
inc
gs
dec
sub
push
mov
in
insl
outsb
das
inc
test
sbb
in
sub
and
aaa
in
icebp
mov
add
inc
loopne
push
adc
nop
mov
popa
lock
fdiv
xor
sbb
test
bound
movsb
loope
adc
jg
and
push
fistpll
jae
pusha
dec
shl
pop
stos
out
xorb
je
test
push
push
push
mov
jo
insl
shl
lods
push
je
or
jbe
loopne
dec
add
or
mov
sbb
pushl
leave
xchg
fwait
cli
scas
add
in
sbb
xor
or
ds
jmp
popf
cmp
das
pop
sahf
mov
in
xor
push
pop
and
xor
cmp
out
adc
and
and
addr16
push
sbb
inc
lret
jmp
fs
dec
pop
xchg
fcoms
or
mov
pop
inc
inc
and
cmpsb
psubusb
mov
scas
mov
pop
orl
pusha
test
sbb
lea
sbb
add
add
xor
or
add
add
sbb
adc
orl
jg
aas
pop
inc
sbb
sarl
testb
fsubrs
add
add
subl
and
push
add
mov
and
or
pop
jg
sub
shll
cmp
add
sbb
adc
ss
leave
xchg
add
xor
fstl
int3
js
icebp
lret
loopne
test
mov
sbb
loop
add
mov
xchg
gs
les
pop
dec
push
or
mov
int3
test
xor
mov
mov
icebp
rcl
fxch
aaa
loope
fdivs
aaa
inc
push
xor
clc
iret
lret
mov
dec
test
mov
fsubrl
pop
sub
push
sbb
cmpsb
sbb
add
cmpl
insl
call
cmp
jae
popa
and
nop
jle
add
jg
cmp
rolb
iret
in
push
mov
fnstcw
ja
in
jo
cmp
aam
or
jnp
aam
int
cmp
xchg
and
outsb
fsubrs
xor
insb
pop
imul
rcr
lcall
inc
cmpl
mov
cmp
inc
push
pop
cmp
leave
xor
rol
jns
ret
ret
fwait
push
or
inc
ds
mov
and
call
dec
mov
test
int3
jbe
cmp
mov
adc
aas
push
dec
imul
js
cltd
mov
inc
cld
or
sbb
pusha
mov
push
pushl
inc
mov
xor
and
flds
sbb
adc
xchg
lods
shlb
fiaddl
stos
mov
pop
je
jbe
cltd
aam
and
or
jg
cs
add
imul
push
sbb
mov
je
xchg
je
mov
cs
mov
adc
sub
call
testb
int
mov
dec
popf
mov
mov
inc
add
pop
fwait
sub
mov
xchg
mov
test
jle
mov
pop
adc
adc
sbb
leave
cmp
inc
jne
shrb
pop
mov
fcoms
inc
in
add
jmp
xor
inc
xor
adc
adcl
cli
mov
add
pop
arpl
lcall
inc
mov
ss
call
mov
or
and
fimuls
test
inc
xchg
jns
and
push
xor
test
mov
jl
pop
push
xchg
filds
jg
mov
pop
je
pop
or
cmc
and
fsubs
mov
shrb
inc
mov
adc
cmp
dec
fsub
mov
push
ljmp
jg
inc
das
push
or
jae
push
cmp
jl
pop
add
dec
and
ret
adcb
movsb
dec
hlt
lcall
xor
pop
lock
jne
dec
ja
and
push
mov
push
out
adc
mov
push
ljmp
jb
movsl
sub
pusha
jmp
add
xlat
mov
in
test
xor
dec
or
call
enter
pop
mov
mov
mov
pop
std
mov
push
mov
push
test
sub
js
cmp
adc
lods
mov
bound
xchg
dec
mov
or
imul
and
jns
jne
out
scas
imul
and
in
rcll
insb
loopne
arpl
js
ret
dec
pop
mov
movsl
imul
sbb
dec
add
sub
pop
jle
ret
or
in
out
xchg
nop
jp
jecxz
jl
dec
adc
subl
adc
jg
pop
push
dec
stos
sub
pop
mov
jno
imul
sub
xor
xchg
sbb
lret
clc
dec
inc
push
and
cmp
xchg
add
sbb
cmp
jl
or
cmp
dec
ret
push
push
pop
rcl
mov
adc
in
pusha
jbe
add
loopne
sbb
cltd
xor
jecxz
mov
xor
dec
jg
adc
orl
mov
lret
pop
hlt
mov
mov
add
mov
or
rorb
adc
fadds
mov
mov
mov
add
inc
pop
dec
std
pop
inc
je
mov
sbbb
mov
pop
cmp
test
cwtl
mov
xor
cmp
testl
repnz
orb
movsb
push
aaa
fsubs
mov
jbe
inc
lret
stos
push
sbb
mov
push
mov
xchg
mov
sbb
dec
dec
movsb
imul
and
mov
adc
xlat
je
cmp
repnz
shll
testb
scas
aaa
pop
pop
xchg
testb
int3
and
or
or
call
jmp
inc
addr16
fidivrl
sbbl
je
data16
cmp
sub
push
push
or
lret
sub
push
call
call
and
jecxz
and
adc
adc
subb
scas
or
aam
push
or
dec
sub
test
pushw
mov
pop
es
jmp
test
push
jbe
push
outsb
les
mov
movsb
cli
ret
mov
add
inc
lea
dec
in
sarl
loop
enter
addr16
and
aam
add
add
lods
fs
mov
std
dec
adc
mov
ficomps
pop
add
rorb
xchg
mov
shlb
sub
fs
mov
nop
inc
cs
inc
lock
inc
xor
and
cmp
js
imul
or
add
adc
inc
cmpsb
popw
cmp
in
mov
lods
xor
test
cmp
and
ret
pop
dec
sub
cmp
push
sub
inc
imul
ss
mov
and
add
mov
test
int3
imul
insb
es
xchg
add
adc
fxch
sub
cmp
xchg
sbb
in
mov
repnz
std
or
dec
cld
cld
push
jmp
add
lds
or
inc
lock
insl
add
jo
or
cltd
bound
jl
dec
test
cvtdq2ps
addr16
and
xor
adc
pushf
mov
mov
or
and
adc
or
or
cmp
xchg
xor
mov
call
adc
xchg
and
les
in
stc
test
in
push
xlat
test
pop
call
in
pop
in
movups
cmpsl
cmpsb
in
cmove
lock
pop
fdivs
nop
fmuls
sahf
sbb
mov
in
imul
mov
call
lock
or
adc
sbb
jmp
shr
inc
add
jmp
rorb
xor
loopne
add
loope
inc
rcr
clc
lods
or
cmpsb
in
cmp
jno
dec
pop
pop
push
adc
mov
dec
ljmp
fwait
mov
sbb
lea
xor
fcoms
push
sbb
dec
es
jo
daa
inc
jb
call
jg
dec
fcom
mov
int
and
sbb
loopne
int3
stos
pop
dec
cmpsb
dec
lock
aam
mov
test
xor
or
sbb
mov
cltd
jbe
imul
or
xchg
dec
adc
xchg
dec
es
and
dec
es
xor
es
fs
cmp
inc
dec
fs
dec
fs
int
insb
add
int3
lock
in
sbb
inc
add
mov
or
cmpl
enter
aam
mov
clc
hlt
and
mov
loop
sbb
nop
clc
mov
lock
roll
loopne
inc
jae
mov
jg
xchg
sbb
pop
or
mov
ss
and
sbb
ljmp
fmull
xchg
mov
or
mov
and
jbe
rcrb
ja
and
inc
jbe
mov
nop
dec
inc
jo
dec
inc
lret
pop
stc
in
frstor
aam
in
xorl
and
fs
xchg
ja
ret
aas
or
mov
rclb
push
ja
jnp
jbe
jl
inc
ja
xor
lock
aas
jg
push
xchg
push
and
call
sbb
js
pop
sbb
push
lock
das
pop
call
lods
mov
push
fs
fadds
testb
sbb
ret
add
jae
popf
pop
jns
dec
push
sub
adc
outsl
in
in
call
push
fadds
jmp
xor
pushf
jp
roll
adc
or
cs
jns
hlt
jp
in
add
mov
call
call
cmp
xor
fadds
jns
cmpb
test
and
dec
and
adc
jl
cmpsb
cmp
mov
sub
inc
sti
movq
in
sbb
push
insb
jl
lods
stos
pop
sub
push
xor
jl
mov
add
inc
pop
cwtl
inc
dec
jb
adc
inc
dec
pop
inc
sarb
pop
sub
cltd
sti
int
pusha
mov
add
or
out
leave
jmp
adc
cld
cld
fadds
in
cmp
dec
out
test
rolb
sarl
xor
xor
and
aam
push
mov
popf
mov
jle
or
xchg
push
xor
nop
ss
std
mov
call
pop
test
lods
daa
daa
daa
daa
mov
mov
daa
rol
int3
sbb
rcl
inc
or
inc
test
mov
mov
xchg
aaa
push
cmp
cmpl
popa
sub
adc
sbb
xchg
ja
add
lods
test
test
orl
pop
orl
test
int3
or
xchg
xor
dec
dec
push
pop
aas
mov
push
mov
mov
or
mov
pop
addb
dec
add
sub
sbb
jno
mov
xor
ucomiss
adc
inc
adc
nop
imul
mov
mov
sub
das
in
push
cmpsb
push
cltd
call
stos
cmpsb
fsubs
or
cmp
or
xchg
sti
imul
fadds
scas
nop
push
call
in
cltd
in
inc
jmp
in
or
or
shr
push
fdivr
fisttps
pop
test
add
xor
test
push
ss
rolb
add
push
xor
add
mov
fisttps
adc
mov
stc
xchg
out
inc
xchg
adc
outsb
shll
pop
cltd
pusha
inc
add
ja
push
adc
enter
xchg
add
aad
xchg
and
mov
or
push
int3
test
xchg
or
das
cld
ret
mov
insb
jne
test
inc
mov
mov
lahf
in
lock
mov
dec
cmp
daa
dec
xchg
push
dec
jg
je
xorb
inc
ljmp
cmp
inc
inc
cld
pop
movsb
nop
add
sbb
movsl
jbe
dec
test
pop
jo
mov
pop
sbb
and
and
mov
movsb
and
fisttps
loopne
test
mov
aad
fistps
mov
sub
pusha
adc
sub
int
mov
dec
cmp
arpl
lret
sbb
notl
mov
pusha
push
loope
pop
mov
jle
add
mov
test
and
nop
or
mov
xchg
or
enter
or
or
sbb
or
or
or
xor
andb
daa
in
aaa
mov
sbb
lods
adc
mov
movsb
sbb
rorl
mov
mov
insl
stos
xor
mov
push
lcall
push
and
cmpsl
dec
jmp
dec
adc
mov
out
movsl
sbb
leave
popa
rol
sti
and
mov
mov
popa
xchg
push
xor
add
test
rorb
es
cld
mov
pop
mov
fdivrl
cmp
push
and
enter
sub
pop
lea
mov
rolb
jns
mov
sbb
mov
jle
nop
addb
push
fwait
movsb
mov
loopne
xchg
insb
lds
push
sbb
in
movzbl
pop
adc
nop
lock
cwtl
push
pusha
cmp
or
push
mov
mov
xor
call
cmpl
inc
fldl
or
jo
daa
pushf
push
movsl
xchg
imul
fcomp
gs
adc
cmp
loope
nop
jbe
subb
or
dec
jno
mov
nop
test
push
lret
mov
xchg
lock
xchg
pop
mov
sbb
sti
adc
pop
sbb
inc
inc
cmpsb
int3
xlat
dec
xor
push
enter
cmpsb
sbb
adc
pushf
fsubl
lods
nop
bswap
enter
pushf
sarb
mov
cwtl
shll
mov
mov
fsubs
outsl
movsb
pop
lds
dec
shrb
pop
cwtl
lcall
nop
cmpsb
push
jb
xchg
cwtl
or
or
insb
xchg
lcall
or
pusha
mov
fdivrs
jne
addr16
shl
imul
lods
xchg
movsb
jns
lcall
add
push
imul
and
pop
jno
xor
and
pushf
cwtl
rclb
mov
push
fcmovnbe
sub
inc
ds
inc
incl
xchg
mov
or
fcoml
sbb
pop
jo
dec
rcl
xchg
xchg
pop
xchg
mov
xchg
test
stos
rolb
jge
mov
xchg
das
rolb
or
insb
nop
out
inc
cmpsb
push
mov
nop
nop
orl
lock
lock
xchg
xchg
adc
testl
or
movsb
or
add
mov
leave
les
adc
je
push
pop
nop
or
pop
imul
cmc
les
mov
push
dec
lret
push
movsl
push
movd
nop
xchg
fwait
add
loopne
sub
cmpsb
mov
push
cltd
std
fiaddl
lods
test
or
or
or
adc
roll
icebp
mov
in
lcall
or
xor
pop
adc
ret
jne
fldt
adc
nop
inc
cmc
fdivrs
pusha
std
test
mov
std
int3
jae
and
nop
arpl
movsl
or
std
in
mov
sub
fwait
testb
dec
sti
repnz
mov
and
leave
add
adc
pushf
mov
or
inc
lcall
dec
pop
push
adc
mov
mov
jge
aam
mov
pop
jb
mov
cld
xchg
push
daa
jecxz
lods
mov
es
dec
sahf
pop
pushf
or
bound
or
mov
je
aaa
fmull
sub
mov
inc
mov
popf
roll
in
push
or
jg
je
rolb
push
push
mov
fwait
pop
xor
leave
orl
adc
sbb
es
nop
sahf
add
pop
popa
pop
sbb
mov
sub
adc
aam
sub
xor
ljmp
push
call
lahf
test
inc
ffreep
xchg
mov
lcall
aam
sar
int3
sti
and
mov
pop
pusha
icebp
pop
mov
call
insl
pop
std
clc
push
sbb
dec
push
aas
pop
pop
stos
dec
pop
into
enter
pop
test
in
and
vbroadcastf32x4
pushf
loope
aaa
test
ret
nop
fsub
jmp
pop
aad
pop
call
scas
mov
mov
inc
stos
pop
add
rcrb
mov
mov
lcall
fcmovb
inc
dec
loopne
lcall
push
add
push
xchg
nop
mov
movsb
cmp
mov
sub
nop
pushf
mov
pop
enter
adc
jl
mov
pop
test
sub
pop
jecxz
mov
or
das
mov
and
outsl
das
mov
xor
rol
jns
scas
and
xor
sub
mov
mov
adc
sti
arpl
test
jnp
int
sub
jns
xchg
inc
int
std
jbe
mov
mov
sahf
cmp
adc
mov
nop
cmp
and
mov
jb
and
mov
adc
pop
cmpsb
or
inc
inc
sub
push
fwait
sub
push
pop
pop
and
xchg
popa
test
and
and
leave
sbb
lock
cmpsl
inc
push
lods
pop
lea
mov
xor
test
in
loopne
pusha
and
dec
lock
icebp
es
dec
es
in
pusha
rclb
repnz
mov
popa
push
rorl
adc
xchg
pop
cmp
icebp
lods
das
fsubs
add
sbb
out
adc
dec
adc
mov
je
pop
jb
lods
scas
ret
jecxz
imul
or
lea
or
add
or
dec
and
shlb
pusha
int
int
jg
adc
add
mov
xor
adc
call
adc
or
enter
stos
add
aam
add
scas
dec
outsl
or
and
addr16
call
out
or
mov
fwait
cmp
adc
mov
lods
psrld
popa
clc
insb
out
sub
pusha
inc
push
and
out
fs
popa
insl
mov
adc
bound
lods
lahf
add
sbb
sub
mov
push
adc
imul
jnp
xchg
loopne
push
sbb
push
push
les
das
fstp
mov
jns
int
fildl
xor
aad
and
nop
fmull
aad
bt
xor
call
mov
adc
in
std
shrb
adc
aas
sub
lock
add
orb
adc
leave
add
or
jg
sbb
out
je
and
int3
jg
ljmp
rclb
mov
push
inc
jle
mov
int3
mov
les
mov
sub
shlb
and
or
rcll
shll
xchg
mov
or
sub
mov
fs
add
add
pop
jne
or
rorb
push
sbb
pusha
mov
jmp
mov
jae
xor
lcall
sbb
push
inc
stos
iret
insb
mov
test
adc
push
dec
mov
call
fsubr
les
mov
mov
xor
mov
rorb
imul
aad
in
enter
jnp
xor
leave
adc
push
fnsetpm(287
sub
sbb
imul
mov
add
add
pushf
imul
sti
shlb
movsb
nop
inc
es
nop
pop
mov
cltd
and
dec
ret
or
mov
fwait
dec
inc
mov
xchg
andl
jg
pop
pushf
nop
xlat
inc
add
mov
add
enter
adc
xchg
stos
stos
push
adc
xlat
push
mov
negl
adc
xorb
jl
and
and
add
cmp
int3
mov
inc
mov
nop
mov
cld
mov
in
dec
push
pop
ret
jno
daa
jmp
pop
cs
out
loope
nop
sbbl
fsubr
mov
xchg
je
repz
xchg
stc
add
or
orb
dec
cmp
subb
pop
xchg
inc
xor
mov
xchg
mov
and
push
test
sbb
stos
test
xchg
imul
nop
mov
mov
sbbb
xchg
dec
push
dec
je
imul
enter
test
xor
dec
xor
repnz
add
leave
js
or
xchg
fsubl
mov
nop
and
dec
cwtl
cmp
dec
ret
xchg
or
inc
pop
pop
ret
xchg
int3
cltd
loopne
dec
push
pop
leave
sar
mov
enter
cmp
lock
lret
mov
jno
int3
add
mov
jg
mov
lahf
add
mov
ja
int3
inc
push
stc
xchg
add
add
nop
or
fs
or
adc
and
push
cltd
and
arpl
xchg
inc
inc
mov
jae
sysenter
add
jge
int3
mov
shl
dec
jbe
add
sbb
mov
ja
add
sub
xchg
add
incl
test
cmp
push
in
gs
out
xor
fildll
popa
and
and
sbb
inc
stos
add
gs
in
and
add
mov
xchg
fsubrs
dec
invd
pop
das
sahf
add
or
push
xor
dec
adc
pusha
in
movsb
mov
icebp
cmp
add
xchg
ret
pop
pop
inc
mov
push
adc
mov
inc
inc
or
jb
xchg
lahf
inc
xor
mov
mov
add
call
enter
add
in
sarb
adcl
fstl
xorl
cld
cltd
mov
sbb
lock
sbb
sub
rolb
cmp
xor
loopne
xchg
pop
and
mov
mov
sbb
enter
push
push
mov
lods
dec
dec
aam
adc
and
les
jecxz
popa
and
inc
inc
in
rclb
pop
insl
push
iret
mov
mov
inc
or
pop
adc
and
pusha
push
mov
jo
movsb
or
dec
pop
push
xor
cmp
ret
push
mov
insb
gs
mov
sbb
adc
push
ret
insl
pop
and
push
nop
mov
dec
or
rcrb
cmpsl
cmp
sub
pop
adcb
or
adc
push
dec
leave
lock
push
enter
test
or
call
sbb
adc
push
cwtl
gs
push
movsb
or
pushf
or
jno
sbb
jle
push
xor
fs
add
mov
lea
in
mov
mov
sbb
xchg
lahf
mov
or
in
fcmovb
inc
add
mov
mov
mov
jo
xchg
imul
nop
dec
es
pop
dec
inc
mov
sbbb
xchg
xchg
mov
lea
inc
push
jb
clc
fmuls
loop
mov
shlb
cld
leave
adc
push
rol
jne
es
dec
xor
pushf
mov
movsb
lods
mov
jecxz
cmp
dec
adc
je
aam
push
fs
enter
shlb
in
test
inc
pop
adc
xlat
push
push
nop
xchg
cmp
jb
inc
int
test
scas
sbb
xor
aam
orl
cltd
nop
lret
inc
cmp
and
adc
pushf
add
mov
pop
outsl
rolb
lods
pop
mov
lods
adc
pushl
outsl
out
xor
imul
jo
fwait
sub
add
push
jecxz
cltd
mov
insl
mov
shlb
leave
or
das
movsb
js
adc
stos
dec
lahf
scas
xchg
mov
pop
in
push
loopne
shll
adcb
or
shrl
or
mov
rol
adc
or
faddl
cmp
jg
clc
add
or
xchg
jb
inc
and
cltd
enter
push
inc
lock
imul
push
pop
or
in
xor
lods
test
xor
pusha
sbb
add
cmp
test
inc
gs
shl
xchg
jo
les
dec
push
jae
cmp
inc
xchg
xor
mov
das
cmp
push
mov
mov
leave
call
cltd
mov
aam
add
loopne
fadd
inc
sahf
in
sbbb
add
int3
cmp
lock
jo
aam
fildl
daa
filds
enter
mov
mov
cmp
jmp
adc
xchg
jno
inc
add
lahf
adc
add
inc
xor
lods
xchg
mov
hlt
lock
shlb
pop
lds
sbb
incl
jecxz
or
aad
jae
xor
cmp
rclb
fadd
and
adc
jae
lods
jne
dec
jl
add
pushf
sub
clc
stc
test
xor
pop
or
adc
nop
dec
sbb
div
cli
cltd
pusha
cmp
cltd
fs
dec
dec
push
dec
enter
add
js
mov
in
and
mov
pop
fiaddl
clc
cli
insb
inc
or
push
xor
pop
xor
cli
in
push
mov
sti
es
lods
add
stos
pushf
arpl
inc
loope
cli
call
mov
nop
aad
adc
cwtl
imul
mov
mov
test
int3
add
or
sub
lods
pop
cwtl
push
xor
pop
cmp
cltd
test
nop
pop
mov
mov
rcrb
sub
sub
mov
and
add
lret
iret
call
rorb
dec
sub
xlat
or
inc
add
inc
lods
xor
punpckhbw
rcr
nop
mov
mov
pop
push
or
pop
dec
and
iret
stos
pop
add
or
repnz
aas
pusha
rcr
push
push
sub
mov
inc
mov
sub
shll
push
push
repnz
xorl
and
std
jno
xor
sarb
rolb
push
movsb
sub
push
sub
add
jle
adc
add
filds
and
sbb
cs
in
subb
jb
out
in
sbb
adc
push
int
mov
movsl
xor
push
pop
dec
sub
cs
and
ja
mov
inc
es
push
sub
lret
outsb
mov
imul
push
mov
inc
in
out
push
mov
aaa
adc
fidivs
clc
xor
push
lods
fdivl
jmp
xlat
mov
adc
add
subb
pop
lahf
out
jle
rolb
push
fwait
adc
and
add
mov
roll
out
fisubl
sti
push
sarb
jbe
fnstcw
fistps
out
lahf
rolb
lock
inc
mov
jo
or
in
cmp
dec
mov
fistpl
or
jnp
mov
add
pushl
daa
or
mov
rcll
jle
fistl
or
cmp
rclb
cmpl
out
lcall
scas
jmp
sahf
out
jbe
sbb
test
decl
je
jb
outsl
arpl
fs
outsl
jo
sbb
push
dec
imul
shll
jae
cmp
jb
gs
xor
ret
mov
insb
insb
daa
popa
and
pop
popa
je
outsl
outsb
push
andl
pop
aad
jbe
lock
rdpmc
add
insl
mov
sub
or
mov
fucomi
mov
inc
js
je
jb
gs
cmp
or
outsl
add
mov
out
jb
add
add
add
je
push
pop
pop
cmp
popa
nop
inc
jne
jb
stos
inc
imul
fimull
outsb
dec
xor
xor
out
jle
pop
cmp
cmp
dec
xlat
mov
cmp
add
das
das
adc
cmpsl
jge
push
dec
push
inc
inc
gs
insl
sub
dec
outsl
jbe
dec
arpl
push
ficomps
sub
addr16
dec
jne
xchg
test
push
xchg
roll
jb
insb
dec
popa
jb
or
bound
inc
insb
into
cmp
out
adc
xchg
cmp
fdivl
outsb
jns
jg
addr16
ja
inc
push
jne
xor
pop
xor
and
daa
push
mov
sbb
jne
dec
andb
jne
out
jae
xchg
pop
dec
inc
bound
outsb
push
popa
das
jo
or
nop
push
pushf
sbb
mov
inc
inc
pop
ud0
es
nop
and
test
jmp
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
ljmp
inc
inc
dec
dec
dec
dec
dec
dec
dec
mov
mov
push
stos
mov
pop
pop
pop
adc
popa
bound
gs
pusha
push
insl
outsb
sbb
js
ja
dec
mov
aaa
movsb
jnp
jge
jg
add
inc
dec
imul
into
dec
add
jge
mov
inc
adc
mov
inc
insb
jae
out
push
mov
push
push
jne
inc
inc
ficoms
jo
out
jo
insl
gs
jle
enter
and
dec
dec
push
push
sbb
lea
fimuls
inc
and
stos
int
pop
add
xor
sbb
xor
jo
imul
popa
lods
test
hlt
je,pn
xor
inc
and
xchg
push
fs
sub
imul
xor
push
insb
xorb
inc
popa
and
mov
sbb
xor
pop
cmp
js
push
xchg
subb
xor
jo
outsl
jne
dec
mov
xchg
lret
lcall
mov
or
and
or
jnp
lret
imul
push
out
pop
or
fs
adc
cltd
inc
push
jbe
je
mov
and
push
ds
pop
adcl
mov
mov
and
mov
jns
push
daa
sub
cld
dec
add
sub
arpl
cmp
arpl
dec
popa
sub
gs
lret
fiadds
inc
xchg
inc
jns
push
sub
imul
xor
int3
or
push
xor
mov
insb
popa
mov
andl
inc
mull
push
push
fistps
sub
lcall
sbb
rorl
pop
fs
xor
hlt
adc
sbbl
cwtl
cmp
aaa
ja
inc
cmpsb
sub
pop
mov
fs
adc
add
inc
sbb
push
mov
jne
push
gs
das
mov
mov
lds
je
int3
inc
jle
outsl
push
or
arpl
hlt
xchg
imul
jo
in
xchg
ret
bound
cmp
xor
ljmp
imul
loop
fsubrl
outsb
popa
pop
or
mov
rorb
xor
push
push
leave
nop
inc
insl
imul
call
pop
xchg
cmp
xorl
lods
xchg
cmp
fstpl
and
pop
push
cmp
addr16
jae
sbb
scas
xor
fsubl
inc
jo
jo
sub
sbb
lock
push
imul
xchg
add
pop
dec
jmp
jo
mov
and
cmp
cwtl
ja
pop
imul
out
inc
inc
and
dec
data16
ret
mov
loopne
mov
cmpb
dec
sbb
push
rol
das
lret
jno
lock
cld
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
pushaw
cmp
shrl
push
push
loope
mov
dec
add
xor
pop
jle
push
aas
popa
js
jae
je
xchg
pop
addr16
dec
pop
add
add
sbb
inc
xor
jne
sub
xor
sub
cltd
xchg
adc
adc
add
add
add
add
and
xchg
pop
push
cld
push
pop
pop
or
aaa
ds
push
pop
hlt
and
or
jge
out
pusha
push
js
or
sub
imull
add
add
addb
int
mov
add
xchg
test
add
outsb
shr
push
orb
jle
push
push
and
ficomps
jb
int3
push
cmp
insl
into
jo
add
sub
cld
inc
mov
mov
push
stos
loope
sbb
int3
js
jo
add
test
popa
movsb
add
or
addl
rorb
add
jb
leave
jae
or
pop
nop
inc
xchg
xchg
fmuls
push
in
lret
pop
inc
or
or
dec
adc
bound
add
cmp
test
and
cmp
loope
adc
data16
test
dec
je
nop
test
adc
out
cmp
fs
out
and
sub
in
stc
sub
adc
addl
adc
add
add
movsb
stos
add
movsl
or
fs
adc
add
add
fildl
ja
in
je
or
add
mov
pop
sub
push
test
out
jg
pop
push
addb
decl
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
ljmp
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
dec
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
dec
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
addl
dec
ljmp
push
sarl
add
push
pushl
or
lahf
push
pop
outsl
ja
out
mov
sbb
push
jae
jb
bound
mov
stos
inc
lods
xchg
jbe
ss
popa
mov
bnd
xorb
pop
lea
dec
mov
inc
in
fldt
bound
inc
push
push
dec
dec
outsb
insb
shlb
inc
sahf
insb
gs
mov
dec
sub
pop
jl
daa
add
insb
in
divb
out
sbb
inc
mov
imul
ds
and
inc
jb
jns
push
test
les
pop
enter
fsubrs
mov
mov
outsb
rolb
xchg
or
int3
cmp
outsb
data16
sbbl
jns
push
or
pop
fisubs
jbe
push
push
or
fs
and
xor
or
mov
clc
popl
cmp
sbbb
gs
xor
or
fisubl
dec
dec
lahf
pop
dec
and
lock
xchg
pop
pop
push
push
jae
sbb
push
cmp
cmp
arpl
or
movsl
jae
addr16
sub
out
push
das
outsb
gs
mov
data16
insb
adc
or
sti
dec
push
push
push
push
dec
testl
pushf
inc
or
mov
cmp
or
jge
lods
cmp
aas
jg
inc
or
jae
call
mov
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
jg
jo
pop
shlb
cmp
sub
push
jne
adc
or
push
outsl
xchg
lods
jo
aaa
daa
xchg
mov
popw
repz
cmpsl
cmp
es
cmp
iret
repz
and
sub
inc
jl
hlt
push
repz
out
divl
sub
sub
xchg
loopne
push
cmp
call
cmp
ficompl
pop
pop
cwtl
dec
adc
jb
sbb
push
jb
imul
jo
ss
lret
cmp
sbb
xor
es
sub
jo
sub
sahf
neg
push
lahf
sub
mov
inc
add
out
pusha
push
dec
inc
xor
cmp
out
aad
dec
xchg
jmp
fs
adc
lock
mov
push
adc
or
imulb
iret
add
hlt
out
lock
loop
in
call
cmp
xlat
insb
push
sbbb
pop
iret
jnp
repz
push
push
aam
iret
jnp
cmp
int3
push
enter
cmp
repz
mov
out
imull
mov
je
push
cmp
repz
repz
out
fdivrl
iret
pop
cmp
lock
aam
out
sahf
sarb
out
jo
inc
and
in
sahf
out
ficomps
lods
andb
or
jge
jmp
push
test
cmpsl
pop
aam
push
movsb
aam
lcallw
push
outsb
push
xor
add
dec
sub
stos
ret
cmpsl
pop
push
scas
xchg
fistpl
insb
fs
sbb
je
into
xor
xor
es
jg
mov
sub
add
push
and
sarb
inc
incl
dec
jae
lret
mov
pop
stc
mov
dec
inc
push
dec
inc
dec
xor
inc
dec
dec
dec
push
lret
enter
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
mov
sub
adc
pop
sbb
inc
call
rclb
mov
jnp
std
das
scas
xor
jnp
inc
loop
mov
ds
pop
adc
in
stc
pop
clc
lret
sbb
jb
xchg
jge
arpl
enter
cmp
adc
dec
scas
jp
adc
fisubrs
mov
mov
and
cmp
dec
imul
jmp
iret
lret
add
inc
mov
mov
sub
pusha
pop
imul
ds
dec
sub
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
pushl
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jmp
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
test
mov
ds
dec
and
lods
sti
xchg
fcoms
mov
iret
adc
or
icebp
pop
test
hlt
arpl
sub
lret
es
mov
jle
add
jg
test
sub
push
mov
xchg
insb
mov
jns
mov
dec
test
push
mov
jo
push
inc
inc
or
outsb
jbe
and
add
push
shrb
cs
sub
jg
jmp
dec
cs
sbb
inc
adc
fiadds
or
incl
adc
push
sbb
push
inc
sub
push
or
xor
sti
mov
xor
daa
push
push
adc
push
jno
jb
fbstp
push
sbb
sbb
xchg
add
mov
dec
add
inc
add
cmp
or
push
push
sbb
cmp
outsl
sti
ja
push
dec
push
or
aas
push
xor
push
and
push
add
and
ss
cmpsl
push
pop
or
push
adc
ljmp
cmp
cld
pop
das
xor
or
dec
cmp
sub
push
add
sti
sahf
pop
dec
adc
out
or
push
inc
add
add
mov
out
js
add
add
add
dec
pop
dec
dec
inc
push
dec
pop
cmp
pop
push
push
sub
stos
cld
dec
and
jge
inc
inc
add
mov
pop
dec
adc
or
in
das
sti
mov
pop
aad
sbb
ret
lahf
or
pop
push
and
es
push
je
lea
push
aaa
adc
sub
nopl
cs
jns
fistpll
daa
push
push
sbb
push
ds
and
pop
inc
xchg
imul
sub
push
push
cs
fisubrl
sbb
ror
mov
xor
inc
cmp
mov
dec
add
ss
sbb
sbb
or
outsl
add
mov
push
cmp
lock
push
and
js
sub
sub
push
push
cmp
push
push
push
cwtl
xorb
stos
les
cmp
es
ja
icebp
or
gs
out
add
or
out
clc
call
or
or
push
and
mov
cmp
pop
or
add
inc
jnp
in
sub
dec
push
sub
xor
negb
and
aas
cld
pop
cmp
push
mov
dec
xor
dec
movsl
dec
cmp
jnp
inc
pop
adc
nop
dec
cwtl
in
push
cmp
xchg
pop
adc
lock
xor
adc
cmpsl
stc
mov
mov
xor
sahf
out
jo
shl
xor
rorb
inc
outsl
jle
xor
iret
repz
xorb
push
mov
es
and
sub
dec
add
or
mov
adc
sbb
adc
push
popa
push
clc
or
pop
and
test
mov
mov
or
push
popa
ret
popf
fildl
out
imul
bound
xor
mov
cvttps2pi
inc
dec
lock
scas
and
in
fwait
loopne
push
mov
push
adc
inc
cmp
repz
mov
jnp
and
push
jo
rclb
jl
jl
inc
cs
lock
push
shlb
and
push
pop
pushf
movb
aaa
sub
sub
add
test
call
sbb
push
sbb
sbb
or
jne
fisubrl
jl
mov
dec
es
inc
and
cmp
nop
sbb
mov
sahf
cmp
push
xor
and
push
dec
cmpsb
or
push
sbb
sbb
jmp
cmp
mov
push
dec
add
jb
pop
and
sub
rcll
push
pop
inc
push
rol
and
cmp
push
fildll
sbb
sub
add
shll
dec
cmp
xor
or
dec
or
sub
daa
inc
inc
pop
cmp
adc
sbb
xor
mov
lock
cmp
inc
out
push
ja
sti
rclb
ss
xor
inc
cld
xor
out
sysret
sbb
pop
sbb
add
dec
scas
jge
fs
rorl
hlt
outsb
scas
ret
rorl
pop
push
sbb
or
jne
dec
daa
sub
xor
out
jl
adc
inc
data16
jae
sbb
out
insb
imul
adc
inc
xor
lret
cmpsb
xor
mov
daa
adc
pop
and
adc
mov
cltd
inc
xor
in
lods
mov
push
adc
cmp
pusha
mov
in
push
xchg
and
dec
push
and
adc
gs
and
jle
mov
sub
mov
scas
sub
adc
push
jl
outsl
adc
leave
and
lcall
sbb
add
ds
inc
adc
jnp
add
or
pop
aad
or
mov
clc
inc
pusha
dec
and
pop
in
fstpl
adc
add
pusha
addr16
push
adc
xor
adc
inc
out
pop
inc
aam
xor
cltd
into
scas
or
and
int
xor
push
xchg
in
pop
mov
mov
push
and
sbbb
cs
popa
push
sbb
mov
fs
xor
dec
fwait
jo
mov
lcall
es
sbb
pop
pop
pop
inc
mov
sbb
lahf
pslld
in
dec
add
xor
dec
xor
dec
push
add
loope
adc
add
cmp
push
xor
sbb
push
cmp
sbbl
sbb
push
dec
out
dec
xor
xchg
add
inc
jl
cs
fdivr
mov
sbb
stos
sub
pop
add
into
subb
mov
adc
xchg
lock
mov
daa
pop
add
adc
stos
sub
pop
inc
mov
add
or
or
push
or
jge
imul
add
rcll
adc
into
or
mov
dec
ja
inc
or
lods
dec
daa
add
push
or
sbb
adc
addr16
inc
adcl
mov
sti
aas
pop
or
pop
and
sbb
fwait
pop
jg
aaa
and
pop
das
adc
dec
or
sbb
adc
out
cmp
jns
xor
es
cmp
mov
inc
ret
inc
mov
mov
dec
dec
js
sub
jle
cwtl
xor
add
dec
loopne
sti
das
or
divl
pop
scas
pop
pop
sbb
and
dec
aam
cmp
pop
dec
push
push
push
orb
and
inc
add
cmpsb
daa
shll
out
sub
adc
call
loope
add
stos
xlat
imul
pop
mov
pop
data16
ret
xor
dec
push
sbb
push
ret
add
push
add
cmpsb
shlb
dec
les
sub
mov
aaa
dec
test
out
and
or
push
mov
cs
jno
fisubrs
jae
imul
in
adc
adc
stos
mov
pop
ss
xchg
das
sbb
cmpsl
into
inc
push
daa
push
mov
rorl
mov
and
decl
jecxz
insb
outsl
jb
bound
pusha
out
pop
pushw
pop
push
push
je
and
imul
daa
jae
popa
dec
bound
pop
je
aas
mov
es
outsb
das
sub
push
sub
cmp
pop
dec
ret
push
or
dec
add
dec
jae
adc
adc
into
sub
insb
test
lock
xor
jge
mov
shlb
cmp
lahf
xor
add
and
jg
mov
pop
stos
sub
add
dec
adc
stos
mov
decb
or
add
and
es
cmovs
sbb
xor
sbb
xor
or
popa
div
sbb
mov
add
push
cwtl
cmp
push
ljmp
push
jle
push
push
scas
fisubs
ds
pop
adc
xor
jp
outsb
pop
fidivl
daa
mov
and
push
adc
dec
sub
add
bound
ret
sub
mov
shll
jle
push
jae
xor
inc
ret
inc
jo
sbb
subl
imul
push
rdpmc
add
lods
sbb
jae
and
push
inc
fmul
jecxz
pushl
ret
push
mov
sbb
xorb
sbb
xchg
inc
sbb
adc
sub
shll
pop
push
je
int3
addb
push
add
dec
jo
adc
aaa
cs
das
sbb
sbb
sub
push
and
sub
rorb
inc
xchg
adc
or
js
inc
cmp
sub
int
stc
cmpsb
lock
and
repz
into
testb
clc
cs
mov
ret
jmp
std
daa
add
in
mov
jo
stos
pop
add
lock
pop
xchg
ljmp
ja
dec
pshufw
push
das
and
nop
cmp
mov
cmp
xor
divb
cmovb
cmp
das
or
in
rcrb
push
push
out
push
rolb
xor
icebp
cltd
adc
hlt
mov
cmp
mov
xor
js
lcall
adc
lock
das
adc
jne
or
dec
scas
and
jl
mov
inc
inc
ja
test
sub
xor
les
push
adc
and
pop
int3
dec
mov
insb
cmpsl
dec
das
pop
es
dec
xor
cwtl
sbb
enter
inc
pop
leave
and
inc
pop
loop
dec
mov
pop
jne
fdivl
lret
mov
sbb
cmp
pop
mov
pop
jmp
daa
xchg
pop
adc
adc
and
push
jnp
adc
cltd
mov
mov
sbb
xchg
mov
push
rcll
fwait
pop
and
adc
int
aaa
popf
or
and
sub
rcll
sub
adc
cmp
out
sbb
orps
sub
push
cs
push
pop
dec
scas
pushf
sbb
mov
mov
testb
pshufw
pop
or
sbb
aaa
cltd
push
repnz
add
insb
mov
or
js
xor
push
jns
xchg
jns
lahf
call
dec
adc
jg
mov
push
inc
add
push
add
push
sbb
and
sbb
sbb
adc
sbb
pop
adc
cs
dec
jmp
sbb
pop
inc
pop
cs
inc
sbb
lods
loopne
adc
add
test
test
arpl
pop
jo
push
pusha
inc
push
out
loop
sbb
stos
and
out
add
and
pop
jg
hlt
lds
cmp
ret
pop
inc
cmp
and
inc
sbb
xor
mov
sti
and
sbb
adc
or
and
into
inc
daa
addl
dec
cmp
out
pop
push
lods
cs
jae
sbb
negl
mov
lea
xor
ret
subl
jnp
adc
aaa
add
sub
jle
nopl
and
test
sbb
rcr
sbb
mov
sub
pop
mov
movsl
or
cmpl
or
and
sbb
mov
and
and
sbb
inc
mov
cmp
push
arpl
push
cmp
and
sbb
push
mov
xor
add
inc
jns
in
or
and
push
adc
stos
dec
pop
sub
adc
cwtl
or
aaa
orl
push
xor
xchg
cwtl
sbb
dec
mov
jle
adc
scas
xchg
push
mov
inc
sub
xchg
push
dec
lods
or
add
pop
loop
lods
jmp
test
push
or
add
pop
or
add
push
add
cs
pop
add
sbb
jge
dec
jg
or
scas
push
xor
das
ja
adc
sub
stos
xor
lret
nop
xchg
popf
inc
cmp
mov
daa
dec
aas
or
adc
pop
adc
mov
inc
test
filds
enter
cmpsl
add
push
sub
dec
das
and
dec
test
adc
repz
daa
cmp
and
pop
sub
jge
daa
pop
mov
sub
xor
add
pop
ret
int3
mov
inc
cmp
cld
mov
adc
jno
add
jge
fwait
mov
add
cmp
sub
add
lods
imul
mov
insb
xor
fadds
icebp
aaa
test
adc
ret
xor
mov
lock
sub
fiadds
xchg
data16
ja
fs
push
pcmpgtw
jle
add
push
stos
pop
bound
xor
xor
push
loopne
andl
push
add
lods
add
dec
xor
pop
inc
jb
sbb
cmpsb
outsb
push
inc
stos
jmp
mov
loopne
inc
add
mov
repz
rolb
shl
rol
ds
into
ss
rcrl
rcl
push
nop
mov
jnp
sti
cmp
loopne
dec
fbld
xchg
pop
popa
mov
jmp
testb
pop
add
jmp
dec
dec
sub
call
shlb
mov
mov
lahf
sbb
dec
call
ljmp
mov
ja
mov
lods
pop
dec
movsl
enter
push
mov
idiv
push
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
bound
jae
sbb
mov
mov
pushf
ds
pop
sbb
fwait
adc
fsubs
mov
test
xor
dec
xchg
pop
sbb
jecxz
dec
push
add
pop
adc
jb
mov
pop
push
and
loope
hlt
xor
aaa
aaa
enter
cmp
dec
ss
dec
sub
dec
scas
pop
sbb
inc
pop
push
xchg
jb
out
fsubrs
fsubrs
dec
imul
xchg
daa
clc
adc
pop
fsubs
enter
dec
repnz
xor
dec
sahf
xchg
out
xor
cmp
in
jns
pop
dec
dec
and
mov
mov
jbe
add
js
cmp
ret
dec
test
outsb
pop
add
push
dec
pop
int3
notb
sub
je
mov
push
push
dec
test
jnp
cmp
xor
sub
sub
xor
inc
aad
pop
icebp
xor
inc
push
xor
push
test
jne
cmp
jbe
inc
mov
imul
mov
mov
jmp
js
push
mov
jne
fidivl
add
iret
push
xor
pop
push
jb
into
push
popf
jb
imul
and
gs
je
bound
mov
add
add
sub
mov
and
pop
adc
repz
and
or
das
lock
add
mov
jecxz
push
das
mov
jge
ret
xlat
das
lea
fistpl
add
mov
es
adc
mov
add
out
sbb
sarb
inc
sub
rolb
add
adc
dec
xor
es
outsl
and
dec
dec
xchg
xor
ret
decb
sub
and
dec
sbb
add
fsubl
add
fmull
mov
dec
or
mov
and
inc
andb
jge
or
jns
sub
sub
bound
push
dec
pusha
rolb
mov
sub
and
imul
sbb
sbb
xchg
ds
lcall
dec
mov
out
add
testb
arpl
add
pop
jecxz
or
cmp
and
loope
pop
in
out
div
mov
xor
clc
push
inc
jns
pop
int
inc
imul
sahf
pop
js
insl
bound
push
aas
in
repz
push
push
push
pop
cmp
inc
ja
fisubs
in
stos
sub
nop
mov
pop
in
push
ds
push
push
idivb
sbb
push
fsubs
idivb
inc
cmpsl
push
aad
cs
imul
inc
xchg
pop
test
push
in
pop
jnp
cld
mov
adc
pop
nop
xchg
push
mov
jnp
or
dec
dec
inc
push
shrl
aad
lahf
pop
push
sbb
sbb
insb
cmpsb
dec
inc
mov
rclb
cmp
adc
fiadds
out
test
jns
pop
ret
or
cmp
xor
pop
and
inc
pop
out
lea
pop
out
sbb
sahf
push
adc
out
mov
daa
adc
pop
in
pop
negb
sbb
dec
push
pop
lcall
scas
sbb
cmpsb
sbb
fmulp
negb
pop
rcrb
push
lock
add
jl
cmpsl
xor
sub
loope
mov
nop
push
cld
inc
test
mov
pop
xchg
clc
pop
fdivp
scas
mull
xlat
call
push
jge
sarl
dec
repz
or
cmpsl
cs
push
push
sbb
fnstsw
sarl
or
and
stc
sahf
cmpsl
lods
inc
add
add
push
cmp
aad
cwtl
inc
xorl
jns
out
fsts
or
jl
in
sbb
cmp
mov
push
jns
clts
cld
dec
adc
out
test
dec
xor
iret
roll
sahf
in
into
adc
push
stc
cmp
repz
iret
lock
out
sahf
cmpsl
xor
mov
lahf
lock
push
cmp
lahf
out
sahf
jo
cmpsl
push
out
fidivrs
pop
push
push
jle
call
and
aad
pop
dec
sbb
scas
sub
or
adc
and
and
rcrb
push
push
mov
xor
adc
or
add
mov
sti
push
or
scas
int
mov
leave
loop
and
push
sarb
lahf
add
idivb
cs
mov
and
pop
sbb
test
imul
adc
or
bound
repnz
mov
daa
or
stc
adc
add
push
mov
sbb
ret
pop
movb
fisubrl
fwait
movsl
xchg
shrb
lahf
adc
jge
inc
push
stos
std
lahf
pop
mov
or
mov
addr16
push
mov
ja
inc
sbb
jae
fcmove
mov
push
and
sbb
mov
dec
cmp
dec
imul
insl
push
ljmp
cmpsb
dec
add
add
xorps
insb
sub
push
dec
pop
je
cmp
aaa
push
fisttps
jp
nop
aaa
shrl
push
repnz
gs
ret
cmp
inc
imul
pop
test
out
pop
retw
js
frstor
or
dec
mov
ja
cmp
sub
add
pop
push
xor
pop
in
pop
or
leave
and
pop
cmp
add
ds
mov
test
popa
insl
jo
aas
jns
imul
insb
je
push
addr16
jo
jae
imull
jg
es
outsl
and
aas
cmpb
sub
ss
or
cmpsb
mov
stos
jnp
or
cmp
xor
xor
xor
aaa
sti
jbe
cmp
cmp
push
xor
xor
cmp
push
add
cmp
pop
sbb
and
push
psubq
and
push
sbb
loopne
inc
pushf
push
and
ja
add
bound
add
bound
lock
or
les
je
pop
aaa
add
push
or
mov
aad
or
or
orps
push
push
adcb
xchg
mov
xchg
jp
add
sbb
popl
daa
jbe
cmp
pop
or
aas
sub
inc
pop
mov
mov
inc
pop
xor
repnz
icebp
inc
aas
inc
dec
mov
xor
lock
push
or
or
aaa
push
adc
js
mov
cli
stos
push
pushf
cmpsb
xor
mov
daa
adc
or
pop
mov
ret
xor
test
out
sbbl
adc
aas
push
or
jbe
mov
or
push
adc
xchg
push
sbb
addb
or
mov
das
adc
and
lods
test
or
pop
push
or
mov
lods
daa
add
pop
sbb
or
mov
daa
test
in
clc
dec
aaa
and
add
lods
mov
jmp
adc
adc
or
xor
daa
adc
outsb
popa
adc
mov
push
pop
aad
lahf
mov
lea
mov
lods
daa
shll
mov
or
add
mov
lea
lods
daa
sub
sub
testb
divl
iret
sub
unpckhps
test
pop
ret
daa
sbb
imul
popa
daa
pop
loop
pop
insb
xchg
inc
ret
dec
outsl
or
in
mov
cs
pop
cmp
mov
push
ja
or
sub
or
das
mov
mov
imul
pop
cltd
push
lock
lock
lahf
pop
xchg
dec
shrl
outsb
popl
add
pusha
in
lods
pop
int
divl
addr16
jg
testl
push
lock
sbb
fwait
imul
push
fildl
and
mov
sbb
insb
or
dec
xor
aaa
outsl
add
dec
xor
add
lea
loop
xor
jl
pop
xchg
mov
cmp
add
push
js
jl
or
add
ljmp
and
sbb
and
lods
cmpl
js
sub
xchg
daa
popa
mov
fsts
xchg
sbb
push
mov
jg
cmpsl
insb
test
push
cs
in
mov
push
inc
xchg
dec
js
pop
push
push
or
adc
sbb
lock
ss
das
das
lahf
imul
sbb
inc
sub
data16
dec
mov
sahf
pushf
bswap
adc
daa
or
mov
fdivl
xor
sbb
das
adc
push
daa
fs
lea
es
or
adc
add
arpl
sbb
divb
inc
dec
jns
adc
mov
push
bound
in
fnstcw
in
inc
inc
lds
inc
test
pop
das
daa
dec
aaa
icebp
and
dec
repz
inc
dec
push
cs
mov
clc
adc
xchg
cmp
rcrb
mov
sbb
dec
pop
add
mov
add
sub
ret
push
pop
add
dec
sub
add
pop
loopne
gs
sbb
and
mov
push
mov
xor
xor
sbb
int3
aas
hlt
jle
sub
add
gs
movsl
jno
pusha
mov
mov
push
adc
push
fs
cmp
inc
adc
adc
inc
data16
and
bswap
inc
mov
inc
inc
inc
adc
cmp
pop
testb
lret
call
aaa
sahf
shrb
aaa
inc
inc
pop
inc
sbb
mov
dec
jnp
xor
jo
mov
lock
mov
or
inc
mov
push
xchg
adc
inc
pushf
push
push
adc
pushf
inc
ja
cld
int3
adc
shr
adc
add
popa
adc
fisubl
adc
pop
add
adc
add
mov
pushf
xchg
mov
inc
adc
xor
inc
mov
aas
es
das
dec
mov
sbb
aas
jmp
mov
or
and
push
pop
mov
push
cmp
or
and
cmp
inc
and
adcl
mov
addr16
cs
imull
push
sbb
popa
pusha
pop
and
dec
xor
xchg
adc
sbb
xchg
outsl
bound
xor
sub
lods
push
inc
in
dec
scas
xchg
jo
push
push
pop
adc
cmp
repz
pop
sbb
repz
inc
push
andl
imul
or
xchg
cmp
xor
aad
jne
pop
mov
mov
dec
mov
fstpt
in
xchg
das
adc
sbb
and
sub
xor
fldcw
inc
mov
mov
mov
mov
add
sbb
sub
das
or
insb
adc
pop
add
sub
adc
push
push
dec
fwait
int
mov
add
add
inc
or
imul
das
incl
push
add
mov
addb
rcpps
imul
jae
xorl
pushf
sbb
xlat
call
or
test
dec
push
xchg
cmc
push
shrb
jo
inc
push
xor
pop
dec
pop
inc
jbe
fs
lock
bound
jl
and
mov
sub
or
movsb
pop
adc
subps
imul
es
add
add
add
push
fnstcw
cmp
out
fmuls
aam
ss
xor
pop
xor
dec
adc
lcall
pop
sbb
add
or
inc
push
cmp
sub
pop
cmp
inc
inc
sbb
cmp
adc
call
pop
and
ss
push
xor
dec
add
mov
push
adc
in
lcall
push
sub
pop
daa
sbb
and
push
push
sbb
and
dec
lcall
xchg
mov
aaa
push
and
add
sbb
push
aaa
pop
sbb
pushl
xor
push
inc
cs
adc
xor
push
xor
push
sbb
sbb
sub
sbb
adc
sub
xor
or
les
js
add
cmp
rorb
sbbl
scas
add
pop
push
test
jge
das
cwtl
pop
mov
and
adc
sub
inc
mov
ret
push
movntq
loope
orb
add
and
mov
and
cs
cmp
cmp
xor
jecxz
push
cmp
movsl
nop
dec
xchg
push
push
dec
xchg
and
or
inc
add
sub
out
mov
leave
popa
mov
cmp
les
add
shlb
inc
pop
sub
jbe
push
xor
mov
jb
data16
pop
or
jns
sub
and
clc
ja
clc
add
inc
push
dec
inc
push
dec
add
in
xor
add
inc
sub
fistps
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
or
cwtl
stos
pop
fadds
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
sbb
sub
sub
fsubrl
stc
jbe
call
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
out
clc
incl
and
cs
insl
sub
adc
jae
gs
leave
ret
incl
mov
data16
mov
call
cltd
test
push
jo
push
push
shll
dec
daa
mov
mov
out
cli
ljmp
les
dec
stos
fmuls
lret
rep
cs
arpl
js
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
push
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
adc
xor
icebp
test
inc
sub
aas
add
xor
add
jo
jno
cmp
sub
shlb
stos
jmp
dec
insb
and
fs
ss
ja
ds
cmp
daa
js
sub
pop
jb
jmp
jp
or
imul
inc
sub
das
dec
jns
jl
dec
pop
inc
inc
pop
sti
ljmp
shrb
dec
imul
aas
pop
push
inc
and
cld
adc
cmp
or
or
adc
inc
shl
adc
aaa
cmp
testl
mov
leave
cmp
subb
or
aas
packuswb
jne
aaa
pop
add
pop
daa
dec
sbb
pop
mov
push
aam
xchg
popa
int
sub
inc
add
dec
pop
adc
inc
and
aaa
push
mov
add
xor
inc
push
xor
and
aaa
inc
push
inc
cs
pop
mov
testb
cmovb
pop
push
push
jmp
ss
lahf
ss
push
and
loop
iret
mov
xchg
xchg
dec
mov
es
pop
cmp
faddl
enter
xor
mov
xchg
push
enter
in
test
cmp
ret
push
sub
loop
fstpl
mov
dec
mov
arpl
mov
mov
orl
mov
push
pop
popf
inc
arpl
adc
or
sbb
adcb
daa
push
jnp
sub
sbb
bswap
or
sbb
mov
subb
inc
adcl
aam
xor
and
sbb
pop
push
cmpsl
inc
push
frstor
pop
mov
pop
dec
push
inc
push
jnp
xor
sahf
push
mov
into
push
inc
push
jl
sbb
add
pop
inc
sub
inc
add
jle
inc
or
pop
dec
and
gs
and
cmp
sub
les
xor
inc
pop
cmp
cmpsl
push
scas
not
sbbb
xchg
ds
pop
xchg
mov
jmp
and
inc
stos
push
and
mov
sarb
xchg
mov
outsb
pop
inc
popf
add
inc
or
dec
xor
adc
push
outsl
push
fidivrl
jno
push
adc
adc
pop
mov
inc
mov
sbb
adc
je
sbb
icebp
sbb
pop
add
fstpl
push
outsl
add
js
das
sahf
and
push
mov
cmp
and
add
lds
or
sbb
mov
or
xorb
mov
pusha
add
sbbl
rdmsr
imul
jo
jae
mov
push
or
in
insl
gs
cmp
bound
shrb
adc
adc
aad
arpl
push
mov
pushl
insl
loop
push
aad
les
cmpsb
dec
mov
inc
outsl
insb
repnz
popa
je
pop
add
popf
insl
ja
call
push
add
dec
push
sub
notb
add
and
out
push
rolb
dec
sarb
out
pusha
dec
add
sub
xor
dec
lea
jno
or
aas
sub
les
jne
mov
sub
sub
adc
aam
dec
cli
or
and
dec
mov
xor
pop
and
cs
mov
cmp
push
out
in
insl
and
push
cmp
imul
mov
stos
push
ds
sbbl
push
sti
lret
addr16
pop
outsl
sbb
nop
lds
sbb
stos
add
pop
lret
pop
insl
fmull
daa
js,pn
push
inc
dec
jle
movl
adc
cs
sub
add
inc
and
mov
popa
jge
push
mov
jle
popa
jb
pop
decb
jge
pop
inc
jne
leave
inc
or
cmp
sub
xor
jno
pop
push
xchg
sub
in
or
jl
push
and
test
add
jnp
aad
push
and
pop
adc
loope
xor
and
adc
dec
cmp
ljmp
mov
lahf
fs
jo
popl
stos
lds
push
outsl
imul
fimuls
movl
sub
xlat
xchg
fisubl
cmp
idivl
test
mov
xchg
fisubrl
scas
adc
lcall
xchg
sbb
sub
jp
popa
mov
mov
lcall
ljmp
and
aaa
shrb
add
daa
inc
dec
in
jnp
bound
ja
xchg
call
sahf
jbe
or
fidivl
inc
pop
xchg
cmp
xor
sbb
inc
ja
dec
movsb
cltd
add
iret
scas
pop
xchg
add
aas
lds
mov
cli
add
push
pop
imul
push
fstl
pop
or
call
push
ja,pn
inc
ljmp
popa
push
sbb
pop
bound
rcrl
pop
dec
xlat
shrb
push
xor
jbe
cs
pop
pop
arpl
mov
lret
rolb
sbb
dec
ss
fistl
movsl
jnp
cli
notb
push
adc
pop
imul
dec
push
xor
dec
in
pop
stos
or
sti
xchg
adc
lds
inc
and
push
mov
call
adc
push
mov
inc
push
aas
sub
sub
inc
dec
jo
neg
testb
add
or
add
lret
sub
dec
cmp
push
cmp
add
dec
aaa
pop
jbe
test
push
jne
or
push
or
subl
aam
notl
push
popa
cli
dec
insl
insl
lds
outsl
and
xchg
popa
mov
cs
inc
sub
punpckhwd
dec
mov
je
scas
pop
add
jl
out
lods
rcll
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
shlb
xlat
jb
gs
imul
xchg
gs
pusha
rorl
daa
dec
lock
loopne
dec
jb
bound
sbb
aas
dec
mov
inc
mov
pushf
orb
push
shl
sbb
mov
inc
test
rclb
lods
and
add
test
add
dec
ja,pn
inc
and
inc
push
daa
add
mov
ret
jb
push
adc
push
std
xchg
add
push
dec
loopne
mov
push
pop
add
insb
sbb
jae
mov
addr16
cmpl
cmp
js
inc
icebp
pop
or
outsl
adc
sahf
out
add
outsl
cs
pusha
mov
jns
mov
mov
ja
test
mov
mov
push
jl
push
lea
iret
dec
or
dec
sbb
insl
and
or
or
and
sbb
sub
add
out
adc
fwait
jmp
daa
ds
mov
xor
dec
add
test
daa
dec
orb
cli
movsb
and
cmpsb
mov
addr16
sbb
and
imul
sbb
mov
mov
fsubs
fmuls
rdpmc
pushf
popa
cmc
push
mov
ss
push
add
mov
arpl
jecxz
cmpsl
sbbb
pop
lcall
push
xchg
push
rcll
fmull
mov
insb
push
adc
add
sub
outsl
mov
xlat
sbb
adc
rcrb
xor
pop
dec
sbb
sub
bound
mov
outsl
or
jb
cmp
jo
ret
es
fcoms
xor
sub
je
mov
add
sbb
xor
sub
mov
sub
mov
outsw
insl
pop
xor
dec
and
imul
add
xor
push
mov
dec
dec
dec
inc
mov
popa
outsb
jae
outsb
mov
arpl
gs
insb
mov
subb
in
fisubrl
pop
shll
mov
mov
push
sub
mov
insb
repz
sub
orb
dec
inc
btr
sbb
inc
mov
cmp
dec
lock
idivb
cmp
mov
mov
fisttpl
pop
pop
inc
mov
add
inc
scas
jnp
add
cmpsl
dec
add
mull
sub
nop
mov
xchg
mov
outsb
jnp
fadds
cmp
aas
ficompl
lds
addr16
cmp
daa
add
push
sub
xchg
hlt
and
inc
lock
iret
adc
imul
and
add
cmp
nop
sbb
pusha
push
daa
aas
out
dec
aaa
mov
sbb
dec
inc
sub
xchg
sub
mov
and
mov
scas
daa
push
nop
jns
pop
gs
inc
and
or
repz
push
mov
iret
sarl
sbb
cld
dec
test
mov
out
lcall
dec
mov
inc
and
dec
ds
iret
cmp
repz
dec
dec
push
jl
sahf
out
cmp
sub
adc
pushf
loop
clc
inc
out
dec
inc
sbb
push
sub
sahf
es
jecxz
inc
nop
pop
xchg
in
push
jnp
cltd
out
fisttpl
pop
repnz
mov
repnz
movsb
add
dec
fadds
sub
push
lods
add
add
out
xchg
push
or
arpl
jnp
nop
rcrb
out
pop
inc
mov
add
and
jg
jg
or
xchg
mov
xor
mov
insb
pop
nop
xchg
push
xor
inc
clc
add
mov
mov
popa
sub
add
nop
xchg
sub
inc
in
leave
out
mov
and
cltd
in
xor
or
mov
sbb
sarb
add
aad
xchg
mov
sbb
push
xor
loopne
leave
push
lock
out
xchg
and
push
jb
fs
in
jns
dec
test
dec
or
mov
jl
pop
push
lods
fs
scas
add
xchg
or
insb
outsl
out
xchg
sub
orb
mov
decl
dec
mov
popa
imul
fldcw
sbb
and
cmpsl
jbe
mov
aaa
push
dec
scas
push
repnz
add
dec
movb
dec
add
push
jo
hlt
push
xor
push
lahf
scas
add
sub
add
sbb
ja
aam
adc
out
dec
ja
scas
xchg
lea
out
mov
aam
loopne
sbb
fbld
and
mov
add
es
push
lock
jo
pop
andl
push
xor
outsl
out
nop
cmp
or
loopne
add
data16
lock
xlat
cmpsl
and
scas
sbb
push
aaa
push
lock
pop
leave
add
mov
jo
pop
dec
pop
insb
push
je
cmp
add
fimull
sbb
dec
rol
mov
cmpsb
rorb
es
data16
mov
jg
push
cmp
fisubrl
imul
push
xchg
sbb
int
push
dec
pop
push
repnz
sbb
add
faddp
sbb
repnz
ja
sbb
enter
icebp
mov
xchg
outsl
jg
cmp
sub
daa
testb
push
or
push
jne
lcall
enter
ja
cmp
push
push
adc
push
out
or
jbe
js
dec
xor
pop
in
add
jbe
hlt
push
lahf
xlat
orl
and
jae
out
add
xlat
or
lahf
push
sarb
push
adcb
dec
push
lahf
insb
and
mov
lds
mov
pop
les
ret
adc
inc
repnz
and
mov
add
cmp
test
add
fadd
adcl
push
xchg
popa
addl
mov
dec
in
shlb
xchg
and
aaa
and
outsl
add
js
and
and
push
out
outsl
xchg
xchg
pop
leave
add
jg
and
mov
mov
add
clc
jg
and
fs
and
push
dec
es
cmp
push
add
sub
mov
push
push
mov
leave
mov
push
js
das
outsl
add
ss
xor
jno
push
push
ss
in
ret
push
and
aaa
add
nop
xchg
sub
and
push
lods
cmpsb
js
mov
andl
xor
add
pusha
daa
and
xor
pop
leave
xchg
int3
daa
or
ja
adcl
sti
mov
push
insb
fcompl
shlb
loopne
les
and
mov
cmp
or
push
cmpsl
cmpsb
cmp
and
or
adc
inc
cld
push
or
xchg
or
rclb
pop
outsl
add
test
movsb
pop
or
and
jl
xor
add
dec
cmpsb
or
jns
jo
clc
pop
add
sbb
mov
scas
add
inc
outsl
mov
clc
add
cwtl
lahf
test
andb
or
xor
out
daa
jb
push
jb
add
adc
out
push
and
adc
fstpt
mov
pop
das
sub
xchg
sub
jmp
pop
leave
jae
add
mov
int
sbb
rcrb
loopne
mov
daa
nop
push
jl
pop
inc
fsubl
dec
sbb
and
inc
bound
mov
pop
outsl
dec
ficoms
and
mov
xchg
pushfw
xlat
pop
lea
data16
pop
ja
out
das
sub
xbegin
insl
pop
inc
aas
addr16
adc
mov
pop
in
pop
pop
pop
push
shlb
xchg
mov
mov
mov
push
xor
add
jns
int
inc
mov
push
iret
repz
inc
jl
mov
imul
outsl
pushf
out
iret
repz
mov
mov
repz
rolb
pop
es
push
lahf
out
lcall
pop
ds
repz
mov
jns
out
inc
ja
mov
mov
mov
iret
shll
pop
repz
cmpsl
inc
je
jecxz
pusha
iret
repz
push
outsb
mov
lcall
bound
iret
repz
lcall
out
ja
mov
ss
cmp
shrl
shl
gs
cmpsl
cmp
enter
mov
popl
ds
mov
icebp
and
pusha
mov
stc
cmp
repz
imul
ds
mov
insb
shr
int
imulb
cs
call
sbb
mov
cmpsl
stc
xor
add
sub
lcall
push
jae
cmp
repz
add
les
cmpsl
stc
push
jne
roll
inc
stc
cmp
repz
ret
cld
cmp
cmpsl
push
push
jbe
mov
ds
ds
jp
push
lock
stc
cmp
repz
mov
sahf
cmpsl
jg
enter
repz
data16
jnp
xor
dec
pop
lret
insb
xorl
cmp
out
leave
cld
inc
subl
popf
in
repz
test
push
test
js
repz
loopne
xchg
repz
ret
xor
jns
iret
mov
jbe
scas
jmp
sub
pop
push
mov
lahf
out
roll
lea
mov
orb
push
xor
sub
jb
out
cmp
shlb
xchg
pop
nop
ds
sarl
jge
in
setne
add
iret
repz
xchg
xchg
aas
lcall
out
fwait
rolb
fsts
test
mov
shl
mov
cmpsl
stc
mov
clc
sbb
cmp
out
mov
adc
outsl
mov
fstpl
test
ds
repz
ja
dec
stos
nop
repz
out
push
lods
push
jl
fnstcw
adc
cmp
mov
push
adc
mov
mov
mov
jbe
int
ret
movsb
mov
in
pop
addb
nopl
in
cmp
rcl
and
sti
int3
xchg
add
fisubrs
xchg
ds
sti
das
dec
and
leave
jge
inc
xchg
or
ja
subps
testl
pusha
adc
out
pop
in
data16
inc
aaa
inc
mov
fistpll
mov
nop
enter
mov
imul
push
ss
shl
adc
outsl
das
inc
das
in
es
aas
int3
jg
push
mov
fimull
pop
inc
pop
and
jbe
jg
dec
xor
jb
fnstsw
push
fistpll
cmp
pop
pop
mov
inc
mov
pop
xchg
mov
xchg
xchg
aas
jecxz
push
in
int
mov
inc
mov
popf
mov
cmp
mov
or
mov
aas
mov
mov
mov
xchg
mov
fldt
mov
mov
cmp
divl
push
idivl
mulb
int3
mov
pop
scas
iret
adc
inc
jb
sub
aas
loop
adc
xchg
inc
mov
adcl
subps
js
insb
in
xor
inc
nop
dec
out
cmp
push
push
add
out
add
int
neg
mov
sti
pop
aam
clc
add
in
push
shl
push
pop
in
scas
dec
push
leave
pop
xchg
incl
addr16
movsb
in
sbb
cmp
aas
in
add
repnz
in
push
push
movsb
sbb
cmp
fnsave
pop
push
push
inc
xchg
xchg
push
jns
adc
sub
add
xchg
addr16
lret
pop
push
xchg
dec
dec
dec
cs
fs
je
cs
dec
jl
push
add
xchg
shrb
in
inc
cld
push
adc
imul
cmp
push
imul
pop
fldcw
mov
imul
mov
frstor
push
daa
inc
scas
xchg
sbb
add
adc
addr16
push
test
mov
inc
mov
inc
outsl
push
cmc
inc
leave
xor
addb
sbb
add
test
sub
mov
ljmp
imul
lahf
test
imul
push
and
lock
adc
in
add
push
jns
aaa
jb
push
dec
push
add
out
sahf
out
add
hlt
jns
pop
orl
push
aaa
or
and
dec
insb
xchg
inc
and
repnz
insb
mov
pushf
xchg
adc
leave
add
in
insl
xor
in
lds
into
cmc
insb
push
mov
insl
xchg
inc
sbb
push
inc
sbb
jb
pop
pop
dec
pop
push
pop
pop
xchg
pop
leave
jae
int3
test
xchg
popf
cmpsb
add
add
push
adc
jb
xor
fsubp
out
xchg
pop
jb
idiv
fs
mov
and
pop
xor
pop
xor
xchg
and
dec
pop
mov
insb
pcmpeqb
fucomi
test
mov
pop
out
xchg
jl
outsl
mov
cs
push
or
adc
and
sbb
pop
xchg
add
mov
pushl
leave
and
sbb
inc
dec
jo
test
cmp
jo
add
pop
push
push
mov
jae
sub
test
add
mov
pushf
ljmp
sbb
imul
mov
daa
adc
daa
outsl
ja
and
add
jl
imul
enter
fdivrs
jg
adc
leave
mov
rcll
repnz
sub
inc
aaa
jb
inc
xorb
nop
iret
xchg
and
es
xchg
sbb
shrl
pop
pop
ds
enter
xchg
jb
xchg
jae
mov
xchg
xor
lea
inc
push
inc
pop
jae
jae
xchg
xchg
xchg
xchg
pop
fcomps
out
pop
stc
xchg
xchg
xchg
xchg
pop
add
minps
pop
and
pop
xor
or
or
sahf
out
or
pop
or
addr16
jb
jge
out
sahf
adc
jns
out
adc
sahf
out
push
aad
jecxz
xor
sahf
sbb
sbb
pushf
dec
ds
xor
and
dec
mov
push
push
fsubs
xchg
xchg
pop
nop
add
repnz
jbe
inc
pop
faddl
mov
iret
pop
out
jae
fiadds
add
push
sbb
push
add
jne
je
enter
pop
add
cmpsl
sahf
pusha
jp
pop
out
movb
mov
hlt
push
push
les
shr
pop
pushl
jb
shll
jmp
popl
xchg
add
daa
pop
ret
fistl
add
jb
inc
repnz
cmp
pusha
leave
or
cld
pop
je
fmuls
xchg
scas
fs
test
std
push
int3
cs
xchg
dec
mov
xchg
or
lods
adc
xchg
es
pusha
dec
push
add
jb
add
or
popa
sbb
imul
cmp
and
add
jmp
fsubrl
xchg
addr16
je
push
add
inc
repnz
add
cmp
repnz
jns
jns
jns
mov
ret
ficoms
out
enter
jns
add
mov
in
mov
out
jbe
cmp
bound
pop
cs
jmp
iret
enter
add
mov
pushl
es
push
jb
das
js
aam
fs
jp
mov
test
leave
dec
cs
in
in
jnp
fs
adc
arpl
cmp
arpl
jo
popa
xchg
pop
jb
movsb
xchg
push
jb
iret
push
push
loopne
cmpsb
xorb
sarb
mov
leave
dec
sub
inc
xchg
cmp
daa
cs
push
and
xlat
jl
jns
xchg
mov
mov
mov
mov
in
iret
and
and
orb
sbb
pop
fs
jge
mov
pushf
xor
mov
popa
gs
stc
adc
gs
andb
out
lea
dec
mov
out
sub
jecxz
inc
push
rorb
repnz
cmp
mov
jle
adc
adc
jle
popf
bnd
and
jle
scas
add
cmpsl
loopne
pop
data16
cmp
ss
xchg
adc
xchg
addr16
mov
iret
mov
pop
ret
data16
pop
pop
pop
pop
loop
ljmp
pop
pop
pop
add
adc
addr16
pop
pop
pop
and
xor
leave
leave
dec
mov
pi2fd
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
add
add
add
and
xchg
add
mov
xchg
jmp
leave
and
mov
adc
xchg
adcl
push
or
inc
adc
pop
insl
inc
aaa
sbb
mov
aas
and
daa
pop
add
jne
jnp
andl
js
mov
push
mov
and
pop
iret
leave
repz
push
fsubp
or
out
mov
mov
push
sub
sbb
addr16
imul
insb
push
cltd
sub
or
inc
imul
mov
pop
cmp
jmp
dec
or
loope
leave
or
mov
icebp
das
rorl
cmovle
lock
dec
add
xor
fcomps
sbbl
outsb
loop
movsl
add
pop
test
pushf
push
out
pop
or
es
adc
cmp
adc
out
xlat
test
adc
repz
mov
sub
add
cmp
leave
xor
add
jecxz
push
pusha
push
push
and
or
cmp
mov
daa
daa
pop
leave
loopne
add
fsts
adc
sahf
out
cs
adc
addr16
imul
test
leave
enter
imul
mov
xchg
lahf
mov
movsb
push
and
dec
imul
imul
fs
insb
insb
insb
fs
insb
insb
insb
sbbl
aaa
iret
insl
in
mov
je
dec
es
xchg
jmp
pushf
sub
test
outsl
xor
dec
mov
enter
insl
pop
pop
popa
punpckhwd
in
outsb
pop
jno
jns
sahf
fmull
or
insl
mov
or
push
and
xchg
adc
outsb
and
outsb
pop
mov
mov
outsb
pushf
pop
and
out
in
test
popf
pushf
pushf
mov
sarb
outsb
cmp
xchg
jae
shrb
outsb
jmp
outsb
and
or
mov
adc
dec
fidivrl
test
in
das
subb
outsl
nop
outsl
cs
out
cwtl
xchg
sar
dec
dec
lret
ja
sbb
adc
jo
or
inc
sahf
add
jnp
outsl
push
outsl
push
add
pop
fstpl
vmwrite
call
mov
xchg
stos
mov
shlb
jo
ret
jo
jo
in
jo
aad
pop
cli
jo
mov
cmp
in
sbb
xor
jno
inc
mov
jno
jno
jno
outsl
in
xchg
jno
jno
jno
push
or
xchg
jno
aaa
setl
ficompl
lock
push
jb
stc
or
jb
sbb
or
inc
data16
mov
jo
shll
fcoml
mov
leave
inc
mov
shufps
cltd
dec
or
ss
inc
xchg
xchg
xor
pop
jae
repz
cs
add
daa
xchg
jae
dec
mov
mov
popa
cmp
addr16
inc
arpl
push
rcll
or
inc
pop
sub
cltd
movsb
dec
decb
xor
add
ja
lea
bnd
cmp
jg
add
or
add
mov
adc
xchg
out
and
sub
or
daa
iret
repz
or
or
dec
push
xchg
movl
fdiv
insl
pop
mov
mov
mov
addr16
in
jns
jmp
js
stc
sub
dec
inc
dec
repnz
pop
and
inc
js
xlat
jbe
inc
repnz
ja
rorb
leave
mov
filds
cld
das
cmp
mov
nop
enter
pop
ja
pop
ja
addr16
sub
ja
add
lods
fisttpl
pop
pusha
addr16
out
daa
daa
daa
pop
orl
cmp
stos
ja
in
jns
mov
in
in
in
fimuls
pushl
mov
je
aas
vmread
js
js
xchg
jl
xlat
or
dec
js
out
jbe
inc
cmpsl
arpl
imul
pushf
add
jecxz
sahf
cmpsb
js
scas
js
js
das
das
das
mov
js
js
das
das
das
fidivrs
js
js
js
jnp
das
js
jns
ud2
pop
leave
leave
leave
leave
or
or
leave
leave
leave
leave
push
add
iret
leave
add
push
sbb
iret
repz
sbb
sbb
sbb
cmp
ss
ds
in
mov
dec
push
xchg
jns
and
and
and
enter
clc
xchg
and
xchg
out
add
xchg
out
dec
int
aad
iret
xchg
popa
mov
xchg
in
xor
lar
pop
mov
aaa
cmp
xchg
pop
in
jp
push
dec
cmpsl
push
jb
xchg
cmp
orb
cwtl
das
mov
iret
jle
test
mov
jns
cmp
jp
sarb
enter
sahf
or
fcomps
or
loopne
call
fs
push
xchg
jnp
pop
and
in
and
add
push
enter
pop
arpl
outsb
jnp
cmp
in
jnp
movb
leave
lcall
inc
ror
fxch
loope
out
in
loope
jmp
stos
or
jae
adc
or
xchg
or
inc
fs
xchg
aaa
and
xchg
jl
jl
jl
xchg
dec
outsb
mov
ja
jo
iret
leave
xrelease
js
fs
mov
cmp
mov
in
or
jge
adc
jge
mov
pop
leave
leave
enter
mov
jge
outsl
leave
add
loope
jge
inc
int
les
js
inc
xchg
mov
fildl
enter
jmp
ljmp
xchg
out
shl
dec
pop
inc
inc
mov
cltd
cwtl
cwtl
jecxz
test
cwtl
das
and
dec
inc
pop
jle
cmp
repz
and
sub
xor
leave
leave
repz
repz
push
or
out
sahf
fldt
or
sahf
xchg
test
aad
xchg
pushf
jle
adc
cwtl
inc
dec
enter
fdivrs
into
add
scas
lock
clc
seta
aas
sbb
incb
and
or
enter
nop
cltd
sub
outsb
mov
push
repz
pop
pop
arpl
dec
jle
leave
imul
jae
leave
adc
xchg
js
mov
xchg
iret
shrl
sti
push
add
and
xor
sbb
mov
sbbb
jae
cmp
push
das
add
mov
mov
in
in
xchg
lahf
aas
rsm
pop
mov
pop
out
push
or
das
and
fmulp
or
nop
fwait
or
inc
adc
mov
xor
mov
pop
or
add
adc
xchg
out
add
sbb
in
sahf
out
or
or
pushf
jmp
inc
cmpl
xor
fadds
sbb
cmpsl
aaa
jns
add
mov
fildl
pop
iret
pop
cmp
repz
or
or
out
idivl
adcb
push
adc
daa
xor
push
add
int
dec
push
pop
andb
andb
dec
dec
cmpb
dec
sahf
pop
sahf
ja
cwtl
leave
jae
dec
ror
aam
cmpsb
sub
xchg
repnz
hlt
sbb
addl
jns
push
sub
add
popf
cmp
cmp
xchg
xchg
addl
inc
mov
sahf
push
add
nop
addl
repnz
xorl
sahf
cmp
mov
scas
add
adc
ror
or
out
out
ja
adcb
and
sub
sbb
daa
mov
xchg
xchg
adc
test
loop
test
mov
xchg
test
cmp
sbb
int3
shl
cmp
or
out
daa
cmp
in
test
test
test
lahf
in
xchg
adc
push
push
enter
loopne
bnd
sbb
das
mov
inc
mov
test
jns
mov
fadds
mov
add
add
pusha
dec
ja
andl
and
xchg
das
push
xchg
xor
cmp
push
enter
pop
push
xchg
bound
push
jb
ss
inc
es
int
test
xchg
mov
aaa
inc
mov
xchg
mov
adc
movups
out
add
cmp
outsl
adc
inc
xor
or
fildl
pusha
scas
imul
cmp
int
pushl
orl
lods
xchg
cld
add
xlat
xchg
and
pop
mov
mov
movaps
jbe
jb
pop
pusha
pop
bswap
leave
repz
scas
cmpsb
add
push
lock
pushf
pop
and
cwtl
mov
mov
dec
and
xchg
mov
inc
movsb
rcll
jecxz
out
and
fisubl
mov
in
mov
pop
lsl
aas
mov
mov
cmpsl
bound
push
insb
daa
daa
jb
xchg
movsl
mov
mov
mov
xchg
pop
jo
mov
or
das
push
add
mov
xor
aas
mov
dec
mov
mov
imul
or
leave
inc
repnz
leave
adc
out
rcrl
movq
mov
xchg
cmp
fndisi(8087
pop
loope
push
andb
jns
mov
daa
adc
cmpsl
sbb
xchg
cmp
and
xchg
add
jb
dec
push
pop
psllq
in
addr16
outsl
add
mov
or
mov
and
mov
in
in
fucom
paddd
lds
daa
sub
ja
test
outsb
sbb
pop
jno
inc
repnz
mov
add
clc
enter
rcll
call
stc
jecxz
addr16
pop
lea
cmpsl
pusha
lea
pshufw
movsb
fwait
mov
add
mov
pushf
lea
lea
mov
das
movaps
loopne
outsb
lea
clc
add
sahf
out
add
mov
add
mov
mov
mov
jns
fnsave
dec
adc
push
out
sahf
out
pop
adc
adc
push
das
sbb
jns
mov
test
ja
les
and
sub
rorb
inc
mov
clc
mov
xchg
and
or
sahf
out
mov
pop
sub
pop
xor
cmp
in
or
push
or
iret
leave
repz
pop
push
pusha
sahf
out
popf
push
adc
orl
push
pushl
lock
loopnew
out
repz
inc
sahf
pushf
decb
nop
adc
es
or
nop
lods
divb
dec
jo
jp
lcall
mov
mov
xchg
out
fidivrs
lret
fwait
je
push
add
xchg
xchg
xchg
nop
xchg
nop
rclb
in
outsb
pop
ljmp
lahf
adc
xchg
or
js
sbb
and
mov
xchg
push
pop
dec
and
pop
dec
ja
mov
sahf
js
pop
adcb
jb
xchg
lcall
repz
stos
push
or
iret
repz
or
or
pop
ret
adc
notl
mov
xchg
scas
pop
pop
push
xor
xor
outsb
in
repnz
dec
xchg
push
das
movntq
mov
pop
or
bound
inc
subps
notl
cmp
inc
xchg
imul
and
out
aas
orb
call
popf
xchg
mov
enter
pop
leave
jae
test
clc
cmp
xchg
out
add
je
roll
push
xchg
or
pushl
mov
pop
mov
push
add
enter
enter
xchg
mov
push
lahf
xchg
lahf
jb
cmp
or
add
leave
leave
jae
sbb
sub
cwtl
inc
cmpsb
add
push
pop
push
addr16
and
fistl
xchg
out
popf
cwtl
xchg
dec
sahf
add
in
add
leave
int3
pop
xchg
clc
xor
and
xlat
mov
xchg
push
fwait
cmp
lret
out
push
add
mov
xchg
xchg
xchg
fwait
xchg
int3
cmc
jbe
mov
xchg
out
mov
pop
or
out
clc
addr16
and
sub
mov
pusha
leave
jae
je
xchg
xchg
add
pop
mov
repnz
rclb
out
xor
test
push
add
leave
repz
add
inc
iret
cmp
pop
pop
push
adc
iret
jae
cmp
and
jp
lahf
loopne
fxsave
push
cmp
lock
mov
leave
leave
add
in
leave
leave
leave
shl
jmp
pop
mov
sbb
dec
outsb
ucomiss
push
je
dec
dec
dec
xchg
mov
fldenv
and
clc
sbb
inc
fs
outsb
daa
mov
nop
sbb
sbb
push
sbb
mov
and
lcall
push
push
push
push
add
push
xchg
mov
and
fcoml
push
add
mov
inc
mov
lahf
sbb
xor
lcall
fcoml
rorl
fwait
pop
fwait
sahf
out
mov
add
push
push
pop
fwait
or
orb
mov
xchg
pop
leave
jae
cld
or
xchg
in
cmc
std
add
repz
push
ss
repz
repz
dec
fdivp
cmp
or
pop
or
dec
iret
repz
outsb
push
push
jbe
fidivrs
and
pop
mov
pushf
xchg
out
inc
mov
mov
popf
sbb
pop
mov
das
mov
repz
pushf
das
das
das
das
push
popf
push
popf
push
popf
and
sub
aaa
popf
aas
popf
inc
popf
das
das
das
das
dec
popf
push
popf
pop
popf
addr16
adc
das
das
outsl
popf
jp
test
pop
nop
popf
fwait
popf
cmpsb
popf
mov
iret
repz
mov
leave
and
repz
and
and
repz
repz
and
and
add
adc
cmp
or
sub
sahf
xchg
cmpsl
fwait
cvttps2pi
inc
cs
and
dec
dec
sahf
xor
mov
jno
vmwrite
fcompl
mov
xchg
push
jecxz
inc
jle
cltd
sahf
mov
cmp
pop
les
xchg
outsb
mov
pop
invlpg
mov
std
or
sbb
and
mov
lahf
jb
cmp
push
add
lahf
jns
mov
cmp
jns
mov
out
cmp
minps
daa
iret
cmp
insl
dec
adc
dec
dec
dec
outsb
jne
in
dec
std
mov
push
add
sub
add
leave
repz
cmp
in
mov
ja
sahf
out
es
sub
lahf
out
fninit
sub
mov
jnp
sub
daa
das
getsec
push
das
daa
iret
jae
aas
inc
xor
in
js
maxps
mov
mov
je
enter
mov
mov
pusha
mov
cmc
and
sbb
repnz
in
lea
outsb
mov
jo
sete
inc
mov
rcr
cltd
call
movsb
dec
dec
sahf
pop
push
add
xor
sahf
out
add
add
pushf
fcompl
push
out
mov
xchg
repnz
mov
pop
stos
mov
iret
jae
adc
in
xchg
iret
jae
out
cli
push
add
mov
sbb
sbb
sahf
out
jns
xor
dec
push
pop
pop
push
and
movsl
fbld
pop
xchg
movsl
lahf
movsl
stos
movsl
andl
sub
enter
mov
inc
push
dec
mov
lea
push
cs
iret
repz
pop
push
pusha
pop
push
jo
or
fwait
cmp
jb
cmpsb
push
or
psraw
cmpsl
push
cwtl
push
adc
jns
and
cmpsl
fwait
cmp
rcrb
enter
sarl
pop
fmuls
out
loopne
filds
jl
cmp
sbb
push
rolb
and
fnstsw
daa
pusha
mov
add
leave
leave
repz
inc
inc
fldt
aas
xor
js
leave
cwtl
rcrb
cmpsl
jbe
frstor
xchg
jbe
jle
xchg
push
add
test
outsb
ud1
xchg
leave
add
pop
in
hlt
pminub
rclb
xchg
outsb
mov
movsb
das
addr16
xchg
fcmovne
repz
add
xorps
dec
test
test
or
pop
jo
xchg
mov
stc
pushf
add
iret
in
in
vpmullw
pop
and
mov
cmp
test
jb
xor
inc
frstor
mov
daa
iret
mov
jle
add
sahf
ja
mov
fisttpll
jns
or
leave
daa
daa
daa
daa
rcr
loope
and
daa
icebp
cmpsl
push
hlt
and
mov
xchg
mov
in
xor
xchg
xchg
pop
jns
sahf
out
add
pop
sahf
out
and
fmull
stos
mov
mov
leave
ret
pop
shrb
mov
jg
add
stos
prefetch
add
and
repnz
pusha
ja
inc
stos
xlat
or
in
push
pop
and
mov
testl
mov
ret
in
mov
movsb
sbb
in
testb
xchg
push
lods
iret
sub
mov
cmp
jb
xchg
ja
je
dec
cs
out
mov
fmull
pop
scas
ja
pop
mov
adc
mov
and
or
xor
int3
test
fildll
xchg
push
dec
push
lods
mov
pop
mov
enter
ja
jb
xchg
cmp
rcr
mov
pop
jo
psllw
pop
seta
pop
scas
adc
repnz
scas
ds
in
repnz
scas
push
scas
pop
scas
push
das
das
jg
jne
jo
scas
das
das
das
das
mov
scas
ret
das
das
das
int
fsubrs
das
das
das
das
stc
scas
add
imul
scas
in
fldt
and
in
in
sbb
sbb
in
in
pop
push
adc
loopne
pop
ucomiss
jns
iret
sub
pop
dec
outsb
push
aam
rdmsr
cmp
jbe
aas
addr16
jge
mov
out
xchg
push
cmp
sahf
out
mov
mov
sahf
lret
loopne,pt
jl
out
jmp
testb
out
iret
roll
inc
push
pop
inc
xchg
out
sahf
and
sub
jns
inc
dec
dec
cmovp
pop
iret
in
in
dec
outsl
dec
cmp
repz
dec
nop
push
fwait
xchg
fcmovne
repz
cmpsb
mov
mov
rcr
push
call
mulps
decb
adc
pop
push
test
mov
adc
xchg
xchg
sbb
sahf
out
add
mov
fmull
pop
mov
addr16
jo
cmp
in
push
add
shrb
mov
rcr
pavgb
adc
iret
repz
and
setle
mov
push
sub
fidivs
mov
add
lret
xchg
mov
pop
js
iret
repz
addb
jns
pop
cwtl
or
add
leave
sub
or
pop
xchg
test
mov
xchg
inc
inc
inc
inc
mov
mov
xchg
out
push
add
adc
imul
dec
mov
lcall
inc
pop
mov
dec
mov
addl
das
mov
nop
into
add
xchg
sbb
inc
mov
ja
lods
cmp
repz
je
leave
sti
add
leave
out
add
cs
cmp
ja
pop
inc
add
repz
mov
pshufw
repz
jnp
xchg
xchg
or
mov
pop
mov
out
cmp
enter
cmp
pmuludq
adc
dec
or
cmp
repz
sbb
sbb
sbb
dec
nopl
xchg
out
push
bound
insl
outsb
daa
iret
cmp
and
out
dec
movsb
outsl
scas
push
daa
mov
lds
shlb
repnz
dec
adc
mov
cmovns
add
push
pop
mov
loopne
iret
daa
daa
daa
push
nop
orb
mov
fucom
jns
push
fiadds
jmp
insb
daa
or
sbb
sar
mov
or
cmp
mov
movups
adc
iret
repz
adc
dec
adc
cmp
bound
js
in
sahf
sbb
aaa
jns
and
emms
repnz
and
stc
pop
dec
sahf
and
mov
iret
add
iret
repz
pop
mov
add
data16
pop
aas
mov
inc
mov
mov
cs
ror
rcr
inc
dec
xor
pop
cmpl
push
outsl
daa
iret
repz
mov
out
fiadds
fsubrl
call
push
idivl
outsl
mov
enter
out
push
mov
cmp
mov
add
iret
jae
cmp
mov
repz
lods
or
sysret
ret
sahf
or
repz
pmaxub
mov
out
icebp
mov
adc
cmpsb
ret
sbb
and
out
rcl
mov
mov
cs
sahf
add
add
jae
dec
jg
btc
or
test
sbb
ret
add
push
add
fcomi
pushf
cmp
pop
sub
es
aas
cmp
inc
mov
fs
xchg
outsb
mov
pop
adc
jns
dec
test
dec
sahf
pop
cmpsb
mov
sbb
aas
aad
loopne
push
cmp
testb
bswap
repz
and
jns
ds
sahf
out
adc
insl
sub
cmp
in
subl
push
lret
and
das
inc
jle
jo
mov
mov
mov
mov
push
outsl
push
mov
leave
in
jbe
es
pop
ds
leave
inc
dec
orps
mov
adc
out
in
ss
outsb
mov
xchg
repnz
push
sbb
iret
sbb
repz
sahf
push
mov
push
and
and
leave
repz
and
fisubs
repz
cmp
out
es
lea
mov
cmp
push
sub
es
sub
cmp
ss
fsubrl
dec
orps
pop
xor
mov
leave
data16
pcmpeqd
fucomi
in
mov
xchg
pop
sahf
js
jns
cmpsb
cmp
mov
pop
inc
mov
imul
mov
das
sahf
push
ja
cs
push
inc
dec
lret
dec
inc
mov
shr
nop
fdivrs
daa
dec
aas
inc
pop
enter
dec
jae
pop
les
ss
pop
ljmp
out
dec
pop
jg
lahf
or
dec
xchg
mov
test
aas
or
in
jne
cli
dec
cmp
out
stos
and
add
mov
cmp
xlat
inc
cs
inc
push
mov
sbb
cli
nop
mov
fs
in
push
xchg
cmp
xchg
inc
aaa
mov
ret
or
push
loope
xor
adc
call
loopne
fcomps
ror
sarb
mov
test
repz
cmpb
insb
cmp
repz
fs
pop
push
jns
iret
repz
inc
cmp
push
sub
jns
out
adc
add
xlat
iret
repz
lock
loopne
rorb
loop
mov
jo
dec
fidivs
pop
push
push
add
repz
repz
pushf
cmp
pop
or
or
in
sub
or
fwait
mov
push
adc
and
leave
leave
in
xor
addr16
das
push
xorps
cmp
jae
insl
push
and
jb
cs
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
arpl
shlb
jp
fadds
mov
call
adc
and
adc
or
pusha
les
daa
adc
fwait
inc
or
cmp
adc
test
testb
pushf
cmp
pusha
cmpb
cmpsb
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
sti
sub
neg
pop
fidivrl
xor
fcomp
loopne
jb
xchg
jno
xor
in
inc
mov
mov
scas
add
rcll
lret
test
pop
add
mov
xlat
or
jmp
add
ja
pmovmskb
add
mov
test
insl
add
pop
add
add
movsb
push
outsl
cmp
jnp
inc
push
or
or
cmpsl
adc
adc
sarl
adc
fstpl
pushf
sbb
repz
sbb
add
mov
fdivrl
pop
fcompl
fsubrl
fildl
repz
mov
fimull
jp
lcall
incl
ss
push
add
call
aas
adc
inc
pop
clts
imul
sub
mov
add
les
push
cwtl
xchg
xorb
jae
iret
icebp
addr16
push
push
mov
dec
pop
mov
or
dec
mov
or
pop
xlat
push
dec
push
aas
pop
pop
mov
push
ror
aad
dec
cmp
xor
add
cmp
and
sgdtl
imul
add
sub
pop
or
inc
loopne
push
lahf
out
sahf
sbb
repnz
andb
push
iret
repz
push
test
mov
out
inc
ss
into
jo
push
push
pop
iret
jae
jnp
adc
insb
and
push
or
jnp
repz
jl
pop
pusha
sbb
sahf
idivl
je
pop
adc
push
sbb
out
dec
push
inc
pop
cmp
jns
out
xor
xor
and
cmp
dec
ret
es
jg
movups
sub
adc
dec
inc
cld
xorb
adc
dec
and
leave
xlat
and
pop
jns
out
js
mov
repz
dec
repz
xor
add
imul
pusha
movsb
mov
jae
das
push
dec
xlat
sub
cmc
insb
add
das
dec
repnz
add
enter
inc
ds
inc
pushf
or
ret
psubw
pop
in
hlt
adc
mov
lret
mov
mov
ret
inc
and
sahf
mov
sub
lods
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
incl
adc
mov
decl
js
inc
outsl
loopne
jmp
mov
inc
mov
cmp
mov
popf
sti
jmp
stos
push
inc
jmp
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
call
mov
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
call
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
xchg
cmc
pusha
les
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
mov
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
xorl
mov
xchg
jge
pop
ficomps
frstor
scas
pop
outsb
pop
out
inc
and
inc
notl
ja
jnp
sub
add
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
mov
pushl
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
ljmp
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
dec
pushl
inc
leave
mov
insb
fdivs
jne
filds
or
sar
out
cli
stos
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
popa
sarl
fdivl
jno
add
aad
mov
mov
movsl
in
dec
loope
mov
call
xor
mov
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
jmp
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
fistpll
je
mov
aam
movsl
fisttps
fadd
shll
call
shrl
imul
mov
sarb
add
in
add
pop
dec
or
decl
push
stos
inc
add
adc
or
and
test
or
mov
jmp
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
incl
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
ljmp
jbe
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
lcall
pushl
jle
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
fcomip
decl
imul
andl
shrb
rclb
or
or
incl
inc
or
das
es
lds
or
decl
lock
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
pop
add
push
push
scas
fcompl
fldenv
filds
stos
add
aaa
pusha
mov
fdivrp
inc
jg
mov
jmp
mov
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
incl
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
dec
ds
test
add
adc
inc
mov
mov
mov
lock
mov
loopne
rorb
test
test
add
cmp
jns
out
push
xlat
fcomp
fcmovu
out
sahf
out
fstp
loop
jns
out
in
call
sahf
out
in
in
repz
sahf
out
sahf
cmc
div
clc
stc
cli
ret
jns
cld
pop
adc
aas
iret
adc
adc
dec
xlat
or
xor
jae
inc
adc
bound
add
mov
bound
cltd
into
popa
je
push
dec
or
and
cmp
aas
lds
xor
pop
inc
cmp
pop
bound
insl
sti
mov
xor
popa
arpl
cmp
arpl
or
push
outsl
sub
xor
xor
xor
sti
imul
push
inc
jbe
pop
insb
imul
ss
mov
je
imul
dec
inc
jbe
xor
testb
or
xor
xchg
or
addb
push
je
lods
test
jbe
push
xchg
cli
push
inc
aas
inc
pop
adcb
insb
xor
je
inc
inc
inc
push
js
push
add
addl
sbb
xor
insb
inc
lds
popa
jns
push
dec
or
mov
cmp
inc
xorb
insb
aaa
jbe
cmc
lock
inc
push
sarb
lods
fadds
add
adcb
cltd
and
jae
mov
jp
jne
daa
mov
inc
aas
fs
inc
es
inc
inc
mov
sbb
sbb
inc
pop
out
xchg
cmpb
jae
inc
inc
inc
add
pop
jbe
adc
ds
mov
scas
add
mov
iret
int
push
dec
cmp
stos
or
xorl
popl
inc
outsb
jne
mov
popa
mov
push
jge
xor
fidivs
adc
arpl
add
mov
push
clc
xchg
into
pop
inc
cmp
fidivl
in
or
push
mov
jg
test
adc
lret
dec
jl
rorl
push
add
outsl
adc
mov
push
lcall
cmp
mov
pop
mov
xlat
mov
and
xchg
loopne
scas
or
inc
jb
js
pop
mov
dec
popa
jo
push
nop
and
cmpsl
lahf
push
outsl
outsl
test
bound
push
jno
and
push
sti
mov
in
pop
or
dec
pop
in
nop
push
pop
or
test
or
out
arpl
cmp
adc
mov
pop
jo
push
mov
push
outsl
insb
jns
push
add
inc
das
inc
jb
push
notl
ss
inc
outsl
arpl
adc
mov
in
daa
sub
inc
push
bound
ja
cli
xchg
mov
inc
jbe
xor
imul
jg
push
dec
and
cmp
xor
pop
cmpsb
sbb
xor
xor
sbb
inc
push
sub
and
fcoms
pop
mov
jp
or
dec
lods
jecxz
hlt
push
mov
push
cmp
adc
jo
outsb
rclb
call
push
inc
dec
pop
mov
je
jns
arpl
je
push
lcall
push
pusha
mov
aaa
dec
adc
inc
test
stos
adc
push
dec
xlat
out
inc
and
push
daa
add
and
dec
sbb
push
add
add
fs
inc
adc
dec
or
jb
rclb
pop
or
fdivr
loopne
and
ljmp
in
mov
fcomi
mov
add
add
or
pop
pop
push
or
mov
decl
or
or
or
or
adc
adc
adc
or
pop
sbb
adc
ficompl
adc
adc
add
data16
or
pop
adc
inc
add
fsubr
aaa
mov
add
add
add
adc
jp
add
add
js
addl
add
jge
call
call
xor
adc
pop
and
xor
inc
mov
adc
xchg
sti
and
bound
js
inc
add
fwait
lds
adc
push
push
inc
inc
add
add
inc
shlb
test
arpl
outsb
or
inc
and
fcoml
cmp
inc
mov
xchg
or
into
add
adc
cld
pop
pop
idivl
ja
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
xor
and
loope
icebp
mov
mov
add
xorb
scas
fiaddl
or
js
mov
cli
sub
rcr
push
ret
incl
jne
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
inc
je
pushl
les
fsts
dec
push
loopne
inc
mov
cmp
push
lcall
push
in
and
hlt
pushl
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
and
pusha
add
std
or
jg
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
mov
sahf
aad
std
movsl
jecxz
pop
mov
aas
cwtl
jmp
clc
cmpl
incl
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
push
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
fdivp
pushl
int3
lcall
fs
scas
mov
pop
pop
mov
popl
incl
mov
sbb
scas
adc
mov
xor
lods
scas
xchg
test
decl
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jge
ljmp
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
decl
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
ljmp
lods
leave
mov
jp
push
out
or
push
sahf
pop
jg
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
xor
pusha
jmp
sbb
clc
lea
out
pop
jb
mov
mov
mov
xor
dec
sub
pop
mov
jl
rorl
adc
in
call
stos
hlt
push
add
stc
loope
mov
sar
andl
mov
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
ud0
mov
mov
dec
adc
push
lock
lods
jp
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmp
mov
loopne
cli
adc
aaa
xchg
in
add
inc
adc
out
dec
jbe
dec
fisttpll
out
aas
std
cli
push
push
pushl
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
decl
pop
imul
mov
mov
inc
es
gs
jns
enter
or
push
pusha
lcall
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
mov
js,pn
jmp
xor
pop
clc
pop
hlt
sub
movsb
add
mov
pop
jg
gs
std
xorb
jg
aad
cmp
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
mov
or
sarb
std
pop
les
cli
mov
mov
incl
add
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
in
call
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
clc
push
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
pushl
mov
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
call
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
jmp
in
sub
loop
pop
xchg
ftst
jbe
xchg
and
lcall
and
jae
shrb
shlb
out
aas
stc
add
out
incl
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
mov
jecxz
and
lahf
fmull
enter
jecxz
leave
cli
out
scas
sub
in
pop
mov
incl
add
or
incb
fisubrl
aas
mov
negb
push
inc
or
pop
jg
add
pop
jg
mov
aad
test
mov
idivb
movsb
mov
iret
push
jbe
push
inc
mov
icebp
pop
incb
jno
adc
push
inc
jecxz
cld
sti
fcomip
sbb
sarl
adc
loopne
sar
addl
mov
mov
imul
push
in
push
cmp
dec
push
in
aas
mov
inc
fildl
push
and
fwait
imul
add
push
sbb
in
or
mov
adc
jnp
add
loope
aas
push
rcrl
rcr
addr16
incl
pop
inc
jb
fistpl
adc
call
jno
pop
pushl
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
aas
cld
jmp
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jg
jg
stos
pop
sahf
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
jmp
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
or
cmp
mov
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
or
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
cwtl
dec
call
xchg
aad
loop
lahf
mov
or
out
lcall
pushl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
mov
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
mov
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
push
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
pushl
es
xchg
fidivrs
clc
ljmp
push
aas
repz
outsl
lock
in
jmp
stc
sbb
mov
clc
push
std
mov
rcll
or
mov
xchg
decl
jl
push
mov
fsubrp
dec
sahf
enter
call
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
or
jne
pop
cld
or
dec
ss
clc
aas
fcmovu
lods
movsb
or
repnz
mov
das
or
xchg
imul
aad
or
pop
in
cmp
jmp
mov
adc
aaa
insl
pop
lock
jmp
hlt
dec
mov
cmp
psadbw
xlat
inc
aas
mov
jg
mov
sub
mov
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
nop
cmp
das
incb
lock
pop
inc
orb
div
cld
idivl
mov
sbb
stc
lahf
loope
jae
jmp
shrl
je
jge
call
push
fbstp
out
xchg
add
out
icebp
mov
loope
lock
js
cmpsl
popf
sti
mov
fbstp
adc
push
adc
jge
aaa
loope
cmpsb
out
cmp
call
xor
incb
mov
adc
mov
and
imul
iret
cmp
or
mov
cmp
int
add
push
pop
aaa
cmp
std
fisttps
inc
pop
cmp
ret
sbb
xchg
fimull
xchg
popa
mov
ret
ror
sbb
aaa
sub
icebp
mov
adc
mov
sub
or
cmp
clc
loope
loope
mov
lahf
jp
mov
sbb
mov
jb
jmp
xor
mov
iret
fdivrl
xchg
lcall
decb
xchg
mov
xchg
adc
into
sarl
pop
out
jg
jno
ret
nop
mov
testb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
in
xchg
pop
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
lcall
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
cli
and
sti
push
sti
pop
inc
xchg
cltd
pop
adc
push
inc
sub
scas
cmp
int3
pop
iret
and
incl
cmp
add
ret
cs
and
cmp
push
pop
xor
jl
inc
data16
test
jmp
push
xchg
adc
jns
xchg
pop
out
jge
jmp
jmp
jae
test
out
negb
jmp
mov
pop
fst
dec
popf
arpl
jmp
nop
sarb
or
push
insb
imul
cmp
xchg
mov
push
fmul
sti
outsb
icebp
mov
cli
out
fsubl
test
or
insl
scas
cmc
es
loopne
xchg
pop
roll
pop
xchg
add
jae
add
lret
mov
adc
pushf
test
leave
mov
jnp
cld
pop
lahf
ds
jmp
pop
repz
mov
loop
push
arpl
ja
mov
xorb
ret
ret
mov
mov
fs
jns
sub
ret
mov
jae
in
pop
scas
lahf
sub
stc
push
mov
decl
dec
imul
movsb
mov
push
cmpl
fptan
push
mov
cld
mov
jo
insb
mov
push
pop
xchg
jle
insl
jbe
test
sbb
mov
xor
fwait
mov
daa
jg
inc
push
je
mov
fsubrs
ds
into
jbe
mov
sbb
lods
and
clts
roll
clc
jl
push
pop
je
pop
xchg
push
mov
mov
or
mov
cmpsl
xchg
dec
mov
shlb
mov
lea
dec
std
add
insl
mov
lcall
jl
cld
pushf
imul
jp
movsw
arpl
jle
xor
xor
ja
clc
mov
dec
outsl
int3
mov
xor
sub
daa
lahf
mov
mov
addb
cld
addr16
cmpsl
and
mov
fnstsw
je
decl
sub
das
scas
les
mov
sub
xchg
jne
icebp
ljmp
jl
inc
test
fdivr
mov
mov
call
inc
mov
jo
xor
enter
aam
xchg
dec
mov
mov
xor
xor
sub
adcb
add
push
shlb
cmp
mov
mov
scas
lcall
cmp
push
mov
rorl
out
ficomps
fbld
in
jg
es
iret
and
daa
clc
sub
dec
sub
cmp
lcall
dec
test
leave
out
pop
rcr
jb
inc
add
push
and
fsubl
mov
clc
jg
sbb
xor
lret
sub
ljmp
sar
cmp
leave
cmc
cmc
pop
fcomps
stos
cwtl
dec
jne
or
shll
ljmp
pop
and
xchg
sub
adc
mov
push
add
push
xchg
lcall
sub
data16
aad
sub
add
ljmp
xor
xchg
or
inc
pop
mov
imul
cltd
cmp
push
cmp
sti
repnz
and
enter
adc
scas
bound
loop
loopne
sbb
mov
dec
rsqrtps
dec
adc
push
orl
inc
sbb
aam
loopne
mov
adc
fwait
add
test
ja
or
mov
enter
cltd
lcall
js
and
jl
sbb
sbb
lret
dec
mov
push
mov
jmp
incl
or
outsb
stos
in
xor
rcr
sbb
sub
loop
insl
and
incl
xlat
ret
mov
pop
cmp
adc
out
mov
mov
stos
scas
sbb
jmp
pusha
mov
push
xchg
outsl
out
scas
inc
stos
lods
adc
pushl
or
in
add
mov
jo
test
xor
xchg
lcall
mov
insb
cld
mov
shlb
xlat
xchg
js
xor
leave
dec
sbb
lcall
or
mov
pushf
mov
cmp
in
add
mov
insb
das
mov
or
in
fbstp
out
jmp
inc
test
pop
pop
mov
xor
int3
add
cmp
mov
jmp
stos
fs
pop
out
je
and
xor
lret
mov
dec
xchg
cwtl
loope
fwait
add
dec
cmp
nop
mov
rolb
pop
jnp
cmp
iret
sahf
outsl
push
xor
sub
in
decl
fiadds
outsl
xor
lea
les
dec
fsub
addr16
cmpsl
popa
jns
add
decl
popa
mov
mov
pop
pop
sub
mov
std
std
inc
adc
fimuls
stos
xchg
inc
dec
rclb
loope
rep
dec
mov
mov
fcmovbe
and
and
scas
cwtl
es
icebp
mov
ret
cld
cmp
xchg
pushfw
sub
int
sahf
push
es
adc
leave
icebp
inc
stos
jb
movsl
cltd
mov
inc
pop
push
push
cli
pop
cmpsb
inc
dec
int
incl
nop
outsb
sar
pop
push
test
pop
push
aam
lret
fsubl
xor
jl
adc
pextrw
ljmp
or
jmp
cltd
add
and
stos
daa
xchg
sub
xlat
call
push
test
or
fstl
adc
out
adcl
jg
outsl
nop
divl
fcmovne
and
arpl
lds
daa
jb
lcall
scas
ficoml
sbb
es
iret
push
call
or
or
xchg
adc
das
pushf
jl
add
jmp
cmpsb
dec
leave
lea
pushf
daa
insb
adcb
enter
mov
mov
pop
or
mov
inc
mov
jl
add
mov
mov
test
in
sbb
mov
xor
incl
inc
add
jle
in
iret
adc
push
loope
adcb
mov
mov
or
out
in
pop
cmpsl
lea
decl
stos
xor
and
cli
rcrb
or
inc
sub
pop
adc
es
lcall
add
fmul
out
push
std
lret
cmp
mov
sub
lock
mov
jns
decl
mov
aad
cmp
out
aaa
mov
xchg
add
mov
or
mov
lcall
jmp
push
sbb
add
fisttpl
repz
jmp
scas
add
jg
pushl
out
stos
pusha
push
dec
cltd
cwtl
mov
mov
loope
xchg
insl
das
clc
mov
scas
insl
mov
data16
xor
xchg
and
cmp
push
pushl
and
mov
cmp
aas
mov
repnz
and
mov
mov
inc
rolb
adc
fcmovnb
push
in
call
leave
xchg
xor
and
fs
lea
lock
dec
mov
clc
scas
in
sub
ljmp
ja
push
xor
mov
jmp
lcall
lds
dec
lahf
mov
xor
fwait
shll
decl
scas
icebp
imul
fs
bound
add
paddusw
dec
pinsrw
popf
xchg
aas
xchg
or
jmp
test
call
nop
lds
iret
and
data16
incl
push
lret
stos
outsl
loop
das
lds
mov
adc
mov
cli
out
enter
jbe
lcall
sbbb
xchg
xlat
sbb
lcall
call
fldt
and
cs
rcl
fxrstor
xor
adc
jp
cwtl
xchg
loop
mov
jle
jno
sti
in
sar
decl
sbb
and
in
mov
roll
cmp
xchg
sar
call
clc
test
fs
js
pop
hlt
js
sub
jmp
jns
int3
lcall
mov
mov
shl
cs
incl
cld
bound
inc
mov
mov
adc
call
adc
inc
scas
enter
clc
inc
add
ret
sbb
jecxz
pcmpeqw
insl
mov
cmp
push
call
das
sbb
arpl
dec
or
push
shl
out
imul
pushl
jl
repz
aad
mov
push
pop
sbb
and
add
scas
je
and
bsr
mov
pop
and
repnz
or
xor
cmp
jmp
ret
hlt
and
lcall
mov
mov
pushl
fistpl
lcall
rcrb
pop
hlt
int3
inc
xchg
aas
dec
push
xchg
ror
dec
call
or
test
mov
mov
cmp
push
inc
rolb
cmpsb
call
fs
inc
xchg
jge
shlb
push
test
into
leave
loopne
adc
pushl
jns
mov
notb
mov
mov
dec
subb
ljmp
in
insb
pusha
mov
in
and
mov
push
sub
lea
sub
pop
push
lods
mov
js
xor
out
dec
and
mov
cs
lret
lcall
out
inc
adc
mulb
push
adc
fidivl
dec
ret
add
xlat
dec
dec
dec
push
rorb
xchg
cmpsl
ss
leave
jo
jnp
xor
mov
cld
in
mov
pop
push
cmp
cld
test
pop
sbb
and
and
mov
sub
push
ret
addr16
push
pop
or
pop
inc
lcall
inc
sbb
fidivl
cmp
sar
mov
mov
ljmp
and
stos
add
insl
aam
add
xchg
dec
sar
call
ficompl
mov
sbb
add
movsl
pop
pop
adc
ret
push
push
dec
dec
sti
pop
mov
je
adc
inc
mov
arpl
jge
jno
rcl
fwait
call
sub
cmpsl
mov
gs
adc
aam
pop
stos
shrb
stos
and
push
mov
add
cmp
fcmovb
mov
cltd
in
lcall
sar
jg
push
xchg
pusha
push
fildll
ror
jno
mov
and
lock
add
push
imul
mov
aad
cmp
adc
pop
jo
mov
shrd
xor
mov
shll
mov
or
test
incl
fndisi(8087
ljmp
sbb
sbb
xor
das
push
jnp
rorl
sahf
and
mov
ret
mov
push
sub
lods
xchg
fistps
jmp
shrb
loopne
fcmovnbe
aam
lods
sbb
push
push
add
incl
xchg
inc
sbb
mov
lock
call
mov
test
fistpll
pop
or
nop
fsubrs
aam
jmp
testb
mov
mov
inc
cmpb
out
xor
mov
les
in
inc
pop
xor
pop
jmp
ss
movsb
faddp
outsb
sar
xor
adc
scas
inc
pushl
or
push
dec
imul
push
lock
pop
in
imul
add
fxtract
pop
test
hlt
mulb
cmpsl
or
aaa
adc
xlat
into
inc
push
push
jnp
dec
outsb
int
pop
pop
ds
dec
jecxz
in
push
hlt
push
mov
lods
out
addr16
decl
pop
push
xchg
mov
jne
sub
and
mov
mull
call
dec
out
inc
pop
xchg
or
xchg
repnz
mov
sbb
flds
in
rclb
and
ds
sub
ficompl
mov
push
inc
scas
ljmp
push
jmp
mov
cmp
sub
in
pop
adc
scas
and
adc
jmp
add
ljmp
je
lods
mov
shl
scas
insl
and
xor
pop
mov
jmp
out
repnz
dec
jmp
push
iret
in
dec
xor
imul
les
jmp
daa
aad
int
lock
scas
dec
pop
mov
stos
mov
iret
int3
mov
adc
lcall
ret
rcll
sbb
jb
daa
fistps
sbb
shll
decl
sahf
cmp
adc
into
loope
ret
add
outsb
lock
sub
dec
lods
mov
xchg
stc
int3
push
xchg
jp
clc
inc
stos
sub
out
lock
test
push
sub
add
jmp
xchg
stos
push
icebp
sbb
scas
pop
push
test
adc
pop
sbb
cmp
sub
mov
icebp
jecxz
pushl
std
int3
ja
dec
xor
sbb
cld
sub
jb
pusha
jl
push
jmp
scas
das
in
mov
nop
jo
es
jne
pop
decl
addr16
inc
mov
aaa
clc
stc
mov
jmp
xchg
cmp
fsts
leave
ret
jmp
shl
push
push
stos
incl
cmp
inc
outsl
dec
mov
dec
stos
decl
enter
jle
repnz
xchg
adc
das
mov
mov
xchg
mov
dec
dec
jne
ljmp
mov
inc
sbb
push
lcall
fcomip
fildll
cmp
test
dec
pop
push
out
mov
dec
enter
fdivl
fidivs
cld
stos
push
adc
pop
adc
cmp
and
call
push
pop
sub
mov
dec
iret
pop
cltd
pop
add
dec
pop
adc
sar
outsl
ljmp
jns
jb
mov
mov
imul
inc
leave
test
ret
jmp
filds
inc
ss
in
imul
cmpsl
mov
shrl
cmp
jmp
xchg
cmp
rcrl
adc
fmuls
or
shrl
decl
mov
sub
insb
pop
jge
outsl
cmp
rcl
push
push
lahf
adc
cwtl
ret
imull
inc
sbb
dec
cmp
pop
aas
mov
jg
test
stos
mov
lret
xchg
cld
cwtl
lahf
or
mov
lods
cmp
inc
mov
mov
cmp
cmpsb
dec
rorl
lds
lcall
std
cld
dec
pop
mov
das
decb
xor
xor
xchg
or
jns
jo
mov
decl
dec
fcomps
adc
mov
popa
addr16
cmp
mov
pushl
sbb
imul
or
stos
add
cmpsb
gs
lods
pushl
dec
adc
shrb
sahf
jl
cmc
xchg
je
loop
call
rcll
cmpl
into
popf
pop
push
xchg
jecxz
shrb
or
outsb
es
arpl
shlb
lcall
jns
lahf
push
push
iret
pop
push
pop
sti
jbe
jns
pop
inc
bound
xor
lock
mov
in
flds
mov
jmp
push
sbbl
mov
loope
dec
gs
mov
cmp
test
out
fnstcw
xor
dec
push
mov
adc
pushl
push
iret
xor
jo
xchg
pushf
cmpl
hlt
fisttpl
pop
idivb
das
mov
rol
cmp
aas
pop
test
cli
push
bsr
xchg
imul
dec
sub
dec
dec
mov
popa
push
pushl
sub
lcall
lcall
stos
es
pop
sbb
mov
mov
dec
ss
jbe
insl
idiv
call
clc
cmp
sub
mov
das
pop
xor
sub
mov
fsubl
ljmp
clc
push
ret
add
ja
xchg
lret
pop
mov
adcb
call
loop
sbb
mov
movb
ret
xor
faddl
sub
jo
jo
and
decl
mov
or
push
adc
daa
lock
repz
add
call
push
push
dec
xor
das
test
push
sbb
fs
push
mov
pop
xor
add
std
cli
rcll
mov
add
adc
ret
push
fisubrl
fbld
mov
incl
in
jmp
lea
aas
xor
xor
in
xor
outsl
mov
cmc
sbbb
jg
xchg
movsl
sub
dec
fimuls
jl
inc
mov
ret
push
cmp
cmp
and
scas
push
cmp
out
setno
pop
testb
enter
fldt
xor
jb
mov
cmp
jb
in
dec
sbb
xchg
ret
inc
mov
xchg
mov
rcll
pushl
jno
repnz
pop
push
pop
nop
mov
mov
stos
out
mov
xchg
call
inc
push
mov
cmp
iret
sahf
cmp
pop
or
xchg
push
add
lds
call
popf
popf
or
aad
rolb
adc
shr
jo
imul
gs
test
mov
imul
mov
dec
mov
push
or
sub
decl
lock
insl
push
jb
pop
mov
int3
xlat
push
jae
push
cmp
push
in
stos
out
clc
rorb
scas
cmpl
leave
jo
adc
jp
mov
fwait
add
jmp
mov
xchg
es
jmp
cmp
sub
adc
dec
cmp
cmp
data16
fwait
and
mov
leave
inc
cmp
das
popa
stos
pop
xchg
sub
filds
cli
mov
pop
xchg
daa
hlt
lret
cmp
jb
out
das
cmp
movsb
inc
jno
addr16
outsl
push
sub
jecxz
and
sbb
cmp
xchg
aas
das
sar
enter
push
and
push
xor
sahf
pop
inc
and
ss
sbb
das
clc
lcall
arpl
add
add
int
cmpsb
add
call
add
and
sub
add
stos
aam
xor
xchg
inc
inc
and
fldcw
js
push
sub
sub
pop
addr16
xchg
test
or
dec
pop
cmpb
std
pop
sbb
ja
cs
mov
push
cmp
pushf
popa
xchg
mov
push
rcrl
lea
jns
das
pop
mov
push
ja
pop
sub
ss
or
mov
cmp
scas
fnstenv
sbb
decl
shl
jmp
ss
mov
cmp
inc
das
xchg
test
test
test
mov
push
orb
jmp
pop
xorb
fdivrl
dec
inc
mov
and
xor
push
std
fsubs
or
mov
cmp
js
ret
notb
cmpsl
or
adc
cmpsl
enter
jmp
outsl
xchg
xor
sbb
ja
repz
lcall
xchg
push
add
or
lods
inc
sbb
sbb
mov
add
mov
jmp
sub
out
rcll
pop
outsb
mov
out
subl
je
jge
sub
decl
jbe
mov
icebp
mov
loop
loope
or
push
sbbl
cmp
lods
inc
das
mov
mov
call
enter
jne
dec
push
xor
or
stos
inc
sub
jmp
decl
mov
ds
aam
push
jp
pop
cmp
repnz
push
lds
aad
int3
xor
lcall
dec
ljmp
pop
loope
and
pop
jmp
jne
ss
adc
hlt
cmp
sti
stc
loopne
inc
movsl
add
push
lahf
add
push
mov
adc
jg
push
int
or
push
mov
push
pxor
enter
jge
pop
xor
jmp
add
inc
dec
lahf
dec
cmp
ja
adc
mov
icebp
movsb
mov
lret
push
jnp
sbb
stc
sbb
call
adc
xor
outsb
or
mov
out
dec
sbb
fmulp
dec
inc
sub
xor
inc
cld
lcall
sbb
push
adc
jp
jns
jmp
xchg
sub
lock
jmp
cmp
testb
sub
test
ja
ss
mov
sbb
daa
stos
mov
stc
sub
mov
test
sbbb
mov
lret
imul
jmp
repnz
mov
les
mov
sbb
sbb
addr16
sbb
rol
mov
js
iret
sbb
call
lahf
loopne
addr16
es
sbb
xor
in
popf
lds
lahf
push
jl
stos
loope
sub
mov
adc
adc
lcall
subl
fisttpl
incl
cmp
xlat
lock
cld
loop
ss
out
vunpcklpd
sub
enter
fists
cmp
pop
or
cmp
aam
loopne
enter
fidivs
into
clc
jle
cmp
xor
pop
dec
jne
mov
lock
fucom
jg
adc
subl
ljmp
push
lcall
mov
lds
fldt
and
ljmp
les
sub
call
inc
enter
push
push
mov
aaa
jecxz
mov
mov
xor
fstps
movsb
inc
cld
idiv
decl
jle
sbb
ficompl
aam
out
and
mov
dec
jle
sub
mov
and
push
push
cmpsb
js
push
jmp
sub
mov
xchg
shrl
movsl
out
fstpt
stc
xchg
push
daa
leave
in
push
in
sub
mov
loopne
stc
js
aaa
movsb
dec
xchg
movsl
stos
add
push
pushl
or
sbb
or
lds
jo
and
test
ljmp
fidivrl
push
adc
jmp
and
popf
push
fiadds
call
jle
mov
jecxz
jnp
sub
fildll
lock
inc
adc
sub
out
xor
push
cli
pushl
fadd
pop
lock
ret
mov
or
aas
movsl
cwtl
inc
pop
sbb
ljmp
cmp
push
leave
hlt
or
or
lods
test
xor
call
call
mov
inc
push
sbb
xchg
rorb
jg
movsb
cld
mov
xorb
dec
fwait
xchg
or
ss
lock
fsubr
adc
pop
and
mov
sub
scas
sahf
jo
pop
cmp
sbb
jge
je
and
fwait
xchg
inc
mov
push
sarb
mov
mov
clc
inc
stc
jb
dec
and
mov
xor
ljmp
fildl
push
xchg
fldcw
adc
lret
out
pop
sub
je
iret
xchg
out
cmp
xor
aas
and
dec
fidivrs
jge
and
mov
xchg
dec
loope
jmp
add
sbb
mov
into
test
shr
adc
fiaddl
jae
fldenv
mov
cmp
jl
sbb
adc
jmp
inc
andl
jmp
icebp
lret
in
insb
insl
xchg
mov
lods
or
or
adc
mov
dec
pushl
sbb
and
mov
mov
pop
adc
fbstp
test
clc
cld
call
and
mov
push
clc
fidivrs
data16
ret
push
into
inc
stos
inc
incl
xchg
sbb
add
sub
lock
pop
cmpsl
mov
std
cmp
incl
or
scas
mov
mov
pop
jl
pushl
xor
pop
cmp
mov
push
dec
xrelease
and
pop
cmc
call
je
jecxz,pt
les
fcomip
mov
cmp
cmp
adc
jnp
and
push
call
rol
jg
das
popa
push
inc
or
add
inc
xor
hlt
pop
push
aam
cmpsb
add
sub
mov
decl
jb
jns
jae,pt
les
test
pop
fwait
inc
ret
xchg
dec
mov
aam
outsb
xor
sahf
repz
fcomip
orb
dec
addr16
pop
adc
stos
cmp
jp
cwtl
sbb
decl
dec
mov
mov
in
cmp
push
movsb
xor
push
popf
inc
sti
sbb
jmp
push
enter
sub
stos
xor
cmpsb
je
jnp
call
dec
add
jmp
jmp
in
test
ss
push
push
inc
xchg
ja
cli
adc
xchg
cmp
xchg
jmp
jg
test
roll
push
mov
std
inc
sbb
mov
inc
sub
mov
sbb
mov
mov
jecxz
lret
das
shrb
hlt
das
rcl
mov
push
add
out
rcrb
call
jae
clc
orb
jno
inc
je
clc
jnp
and
les
sarb
mov
add
mov
xor
inc
testl
mov
cmpsb
ljmp
clc
add
inc
sbb
adc
adc
ret
cltd
fnclex
push
outsb
loop
ds
dec
jle
mov
fwait
jecxz
inc
ljmp
mov
call
or
call
cmp
cld
or
inc
pop
xor
jge
cmpsb
xchg
repz
pop
mov
aad
ljmp
iret
loop
adc
lret
pushf
pop
jo
inc
pop
adc
jns
mov
xorb
mov
push
clc
pop
pop
dec
mov
inc
insb
xchg
shll
mov
lcall
testl
mov
lds
inc
stos
dec
and
adc
mov
int3
xchg
or
inc
popa
rol
out
in
loop
dec
dec
in
push
xor
mov
lcall
jl
pop
cmp
arpl
imul
stos
mov
adc
lods
addr16
fwait
sub
jp
call
xor
sub
into
pop
pushl
ljmp
shrl
adc
push
or
pushl
jae
mov
aam
sub
cmp
das
mov
sbb
incl
stos
dec
push
xor
gs
test
xor
filds
pop
loopne
bswap
push
out
lods
notb
addr16
std
call
mov
and
jle
dec
jge
testl
mov
scas
ljmp
add
leave
cwtl
cmp
ret
orl
push
test
into
repz
mov
out
adc
push
popa
adcb
pop
cmpsl
cli
pop
mov
sbb
sarb
xlat
clc
call
push
adc
pop
dec
jmp
mov
adc
imul
ljmp
scas
dec
xchg
jmp
mov
in
or
mov
pop
push
ja
mov
cltd
pop
mov
jmp
test
inc
out
dec
sub
iret
sahf
mov
push
push
sbb
aas
cli
insb
or
jg
add
cli
sub
ficoml
adc
pop
cmpsl
fidivl
fldcw
fildll
inc
and
or
push
sbb
pop
sub
lea
or
mov
cmp
push
add
inc
les
loope
add
call
mov
pop
jo
inc
test
push
push
add
outsl
das
imul
std
ljmp
inc
sub
jb
je
xor
sar
mov
xchg
inc
inc
mov
je
lcall
inc
add
icebp
jmp
mov
stos
lds
jg
lcall
lret
and
push
sub
mov
iret
in
jns
push
jmp
pop
mov
jbe
xchg
or
cli
mov
clc
bound
mov
je
push
call
mov
and
lahf
mov
xor
testb
loope
in
adcl
lods
gs
les
ljmp
cmc
es
push
test
ljmp
mov
fidivl
loopne
mov
mov
adc
mov
jl
add
loop
fsubp
jno
xor
ret
or
sbb
mov
jp
cmp
inc
inc
fidivrl
ret
cmp
dec
sub
adc
pusha
inc
add
arpl
xchg
sbb
pushl
mov
imul
aam
push
insb
mov
jecxz
sbb
pop
out
repnz
push
gs
incl
xchg
in
mov
sbb
das
stos
jge
jo
jle
xor
xlat
icebp
xchg
add
and
inc
mov
insb
out
cmp
jg
jmp
addr16
cmpsl
sub
mov
nop
mov
jmp
inc
lret
mov
xchg
cmp
out
dec
out
bound
jle
lods
sbb
mov
ljmp
xchg
or
adc
lea
cmpsl
cld
out
cltd
mov
cmp
and
pushl
movsl
sub
pop
call
out
dec
addr16
sarl
mov
mov
aas
cld
sbb
cmp
ljmp
ds
ja
dec
pushf
xlat
mov
call
ljmp
xchg
mov
or
push
xchg
jmp
test
jp
dec
call
adc
hlt
mov
mov
in
cmp
sarl
mov
scas
or
mov
ljmp
pop
pop
dec
pop
pop
notb
mov
adc
sub
ret
aaa
inc
inc
jns
pushf
xchg
decl
push
hlt
fwait
adc
scas
cmp
sbb
shr
mov
adc
mov
pushl
je
fidivl
or
pushf
in
sbb
andb
push
add
xchg
in
addr16
jg
pushf
push
insb
mov
in
xor
and
es
or
inc
push
inc
jb
movsb
jo
int3
xchg
test
sub
sti
negl
sub
lock
clc
cmp
mov
pop
add
ljmp
push
mov
daa
push
mov
inc
xchg
fsubrl
into
pop
jae
or
test
mov
incl
and
mov
and
cmpsl
lods
push
rcrb
sub
mov
push
and
lret
stc
pop
xchg
sbb
cmpsl
jo
fdiv
xchg
pusha
lcall
lock
daa
push
inc
xor
bound
insl
sbb
cmpsl
sarl
in
clc
test
mov
mov
je
mov
and
popa
ss
push
out
xorb
add
shl
data16
sbb
dec
cltd
jmp
ss
ljmp
aad
cmpsw
addr16
push
and
icebp
dec
mov
mov
ljmp
mov
mov
stos
aam
pop
fucomip
jge
xor
or
sub
lock
decl
ret
sub
mov
sbb
jb
jnp
imul
loopne
or
ljmp
xchg
jne
ljmp
pop
jecxz
cmp
mov
push
lahf
jp
and
pushl
xorb
adc
add
xchg
inc
add
push
xchg
xchg
jbe
call
pop
mov
push
repz
bound
sbb
daa
das
cmp
shrb
arpl
adc
decl
out
ja
imul
xchg
mov
jne
f2xm1
insb
mov
aaa
bndstx
shl
ljmp
or
shlb
jmp
fsubr
add
fisubl
aam
xor
cli
movsl
ljmp
test
inc
in
ret
cmpsb
pushf
xchg
xchg
push
pop
mov
push
bound
mov
cmp
mov
dec
jecxz
jle
xchg
push
mov
lcall
leave
adc
cmp
ljmp
adc
repnz
push
cmc
push
add
jo
inc
movsb
aad
sarl
jmp
popa
mov
push
adc
cwtl
std
mull
pushl
sbb
push
push
inc
jg
js
std
xor
incl
inc
ss
sbb
andl
sti
ret
mov
fwait
test
inc
cwtl
lods
clc
clc
iret
out
dec
dec
aam
lock
js
cli
jg
into
fstps
jo
mov
pushf
and
add
incl
sbb
pop
nop
pop
mov
cmp
mov
mov
aad
insl
popf
fxam
rep
adc
add
or
pop
inc
nop
sbbl
in
jle
jno
cli
jmp
jle
popa
inc
xor
push
shll
out
fisttpl
sar
dec
outsb
std
jns
dec
xchg
inc
cs
out
js
outsl
mov
movb
push
add
inc
adc
inc
stc
adc
sbb
jp
add
mov
pop
pop
sbb
jg
sbb
mov
dec
mov
mov
pop
cltd
cwtl
pop
or
adc
inc
dec
and
les
jne
jl
mov
fwait
and
arpl
pop
rolb
xor
push
adc
mov
ljmp
popa
notl
sub
das
mov
mul
xchg
mov
call
dec
std
hlt
jle
pop
pop
adc
rorb
xchg
mov
cmp
jl
lea
incl
sbb
imul
lret
and
ljmp
push
call
jge
xchg
pop
xchg
dec
or
mov
rclb
scas
jbe
lods
lret
out
mov
mov
or
mov
out
mov
mov
pusha
or
lods
int3
lahf
lock
inc
sub
cli
jmp
pop
outsb
test
sahf
insl
popa
clc
xor
push
out
xor
clc
pop
icebp
lock
push
rorb
dec
push
sub
repz
ljmp
mov
pusha
ffreep
mov
sahf
movsl
subl
test
pop
add
cmp
jmp
pushf
fisubrs
sub
popf
sbb
mov
pop
fidivl
js
movsl
lock
jmp
lret
inc
sbb
aas
cli
and
xorb
inc
sbb
cwtl
or
pop
insb
out
test
xor
daa
stos
push
fs
stos
aas
xchg
decl
pushf
xchg
cli
nop
pop
jb
inc
imul
mov
in
shrb
out
adc
add
ror
sub
loop
pop
jb
icebp
sbb
fadds
push
pop
mov
bsf
cli
pushl
or
jnp
or
fisubrs
sbb
jnp
lret
incl
repnz
movq
and
out
xchg
rcl
push
out
mov
mov
cmpsb
mov
or
scas
sub
mov
dec
add
dec
add
scas
jmp
pop
hlt
aaa
std
sub
mov
pop
rcrb
fcoml
inc
ret
or
les
xchg
pop
movsl
mov
jle
orb
dec
adc
mov
and
scas
add
shr
mov
or
add
lock
decl
push
iret
call
pop
int
pop
jmp
rclb
push
insb
mov
mov
sbb
push
lea
add
mov
add
ss
call
gs
loopne
add
sub
adc
jp
xchg
dec
repz
mov
pop
data16
dec
inc
in
arpl
mov
fxch
cmp
mov
mov
mov
dec
divl
dec
mull
lcall
frstor
ret
push
jge
push
add
cmp
rcrl
inc
test
pop
fmuls
decl
cmp
ret
sub
mov
call
push
sub
jg
test
shrl
xor
push
std
ljmp
jns
loop
and
ret
ds
test
or
jb
mov
mov
dec
and
push
and
or
xor
mov
mov
xorl
clc
test
sbb
clc
mov
pop
jp
dec
dec
mov
fcomip
pop
sbb
cmp
or
and
sbb
inc
into
shrl
pushl
push
lret
iret
xor
movsb
int
xchg
in
sub
bound
fdivl
xchg
sbb
mov
cltd
sbb
push
sbb
call
or
cmp
out
shll
cmp
aas
pop
mov
and
int3
mov
das
jg
jno
call
xor
xchg
fnstsw
adc
adc
inc
pushf
xor
mov
mov
jg
mov
mov
fcompl
pop
aam
adcl
loop
icebp
mov
mov
fisubs
mov
repz
arpl
in
lock
fbld
sbb
jmp
scas
out
outsl
inc
mov
ficompl
cmp
roll
call
scas
outsl
jl
aam
cmp
xchg
test
pop
test
scas
lock
jecxz
jg
int
enter
pop
dec
mov
ja
push
and
lret
xchg
jecxz
xchg
xchg
cmp
pushl
mov
jle
jbe
push
inc
out
push
xchg
jmp
pop
pop
iret
enter
push
jmp
dec
add
mov
dec
dec
xor
test
aas
insb
adc
jbe
pushl
hlt
into
lods
sbb
cs
pop
out
xchg
es
dec
dec
fbstp
sbb
pop
lock
out
add
and
les
mov
fdivrl
xor
jmp
pop
clc
jmp
test
inc
and
call
push
pop
xchg
fstpl
mov
movsb
nop
xchg
call
add
ror
sub
fdivs
aad
ret
add
ss
push
gs
out
xacquire
mov
rcrl
mov
rcl
lcall
mov
lds
jo
aam
call
push
or
mov
loop
add
lret
pop
aas
mov
sub
sub
scas
push
test
cmp
ljmp
mov
es
push
outsl
fs
or
lods
pushf
mov
mov
cmpsl
cmp
sub
xchg
mov
int3
push
in
add
lcall
lret
add
pop
pop
jmp
fadds
xlat
lods
scas
push
fmuls
and
jge
aaa
rorb
or
movsl
rcl
xchg
jmp
fwait
shrl
mov
shl
xchg
sub
insb
leave
sub
fnsave
or
test
pop
fcmovnbe
ret
jno
test
push
dec
push
push
xor
es
pushl
fisubrs
mov
lcall
ficoml
jecxz
lods
repz
in
sahf
mov
call
mov
addr16
mov
jge
inc
add
sbb
jnp
js
stos
jmp
into
xchg
mov
data16
lcall
dec
add
cli
and
incl
rclb
mov
jl
shrl
or
popf
xchg
jp
gs
pushl
ds
cltd
jp
xchg
out
es
cmp
pushl
push
add
jle
aad
arpl
adc
das
mov
or
or
in
ljmp
pop
adc
je
sbb
inc
sbb
xor
addr16
fwait
adc
and
addb
dec
bound
out
cmp
mov
push
out
mov
sub
ret
push
pop
mov
movsb
decl
inc
pop
lahf
sbb
insl
outsl
sbb
fidivl
nop
fdivrl
and
subl
sbb
or
lcall
pop
daa
mov
decb
sub
inc
mov
xchg
push
insb
mov
pop
shrl
ljmp
mov
pop
into
push
adc
cmc
or
loop
jmp
add
lcall
rclb
out
and
lea
orb
mov
in
js
repnz
std
sub
xor
adc
mov
stos
mov
inc
mov
lds
call
fiadds
lods
inc
cltd
cmc
dec
mov
ret
push
xchg
ljmp
fnstsw
out
pushl
cld
ljmp
adc
dec
mov
cmp
mov
mov
fdivp
ljmp
jno
pop
mov
rolb
fucomi
cmpsb
shl
jns
xor
in
or
cli
and
scas
pop
pop
stc
in
in
pop
jno
xchg
mov
cwtl
ds
mov
in
clc
pusha
ja
ss
sub
pop
cmp
lret
decl
mov
cmp
pop
lea
mov
mov
out
mov
jmp
xchg
dec
loopne
jp
mov
add
xchg
jp
repnz
movl
shl
pushl
icebp
or
pusha
movsb
push
stos
mov
xor
inc
dec
scas
sar
lcall
arpl
or
sbb
rorl
mov
lea
jo
cli
jbe
ds
stos
hlt
mov
decl
fwait
inc
iret
cmp
xchg
test
cltd
lret
cmc
add
in
fstl
jle
jo
stc
sub
jmp
sbb
add
add
add
shrb
int3
int3
xor
xchg
pushl
imul
out
mov
mov
and
xorl
stc
mov
xchg
xor
jg
ficoml
jecxz
js
ja
ss
loop
add
call
call
sub
mov
fildll
cli
mov
sub
lea
lahf
mov
ljmp
fcoms
sarl
lock
sub
sbb
shll
loopw
mov
call
adc
xchg
insl
sbb
inc
dec
loope
out
jnp
push
test
xchg
int
pop
lahf
aad
pushl
outsl
mov
scas
push
mov
push
outsb
daa
mov
sbb
movsl
aas
add
inc
in
call
mov
add
insb
sub
pushf
mov
into
sbb
icebp
adc
incl
divl
add
in
cmp
in
and
mov
test
xchg
dec
sbb
push
jno
scas
ljmp
fadds
sti
repnz
or
add
fnstenv
xor
push
stos
mov
dec
and
xchg
adc
push
push
push
sub
arpl
stc
push
adc
ljmp
xor
xchg
shr
mov
mov
and
int3
add
push
and
push
popa
mov
push
jmp
rorl
sub
clc
call
mov
dec
test
popa
cmpsb
lcall
push
pushf
shlb
lret
add
push
jmp
adc
and
inc
cmpsb
or
fxch
loopne
sub
sub
addr16
push
or
lock
jo
sub
push
or
sarb
adc
sti
repz
dec
inc
gs
ljmp
push
dec
fs
mov
xlat
test
adc
pop
loop
in
ja
aam
push
aad
jmp
int3
aam
ret
les
add
push
push
lcall
xchg
sbb
fnstcw
xor
in
addr16
sbb
mov
aas
movsb
in
lcall
mov
lret
and
mov
mov
test
decl
idivb
mov
push
xchg
incl
fdivrs
int3
rorb
fbstp
sahf
pushf
dec
xlat
pop
and
lcall
repz
out
mov
idivb
test
mov
stos
lcall
cli
adc
hlt
jne
jle
pop
inc
imul
or
mov
sbb
jmp
xor
or
jb
cmc
es
fidivrs
adc
popa
test
mov
call
outsb
add
xor
mov
sbb
pop
test
xchg
int
cmp
fwait
sbb
mov
std
lcall
jecxz
call
fldl2e
sbb
movsl
in
adc
loop
dec
add
cmpl
sbb
lods
mov
clc
sub
filds
fcomi
pop
popf
jmp
insb
cmp
cmp
pushl
cmp
mov
out
lret
idivb
fwait
mov
pop
adc
mov
scas
rolb
push
sbb
lcall
pop
push
sti
jmp
popa
xor
fidivs
mov
sarb
daa
es
ficoml
rcr
test
inc
push
xor
addr16
jmp
sub
mov
mov
dec
cltd
lcall
lret
cli
and
mov
popa
and
dec
add
ljmp
lahf
decl
movsl
push
outsl
into
add
mov
repnz
popa
arpl
insl
ror
lret
scas
movsb
mov
ljmp
push
es
stos
rolb
lcall
jnp
add
jg
jmp
mov
xchg
push
and
out
jle
dec
pop
or
sbb
push
arpl
mov
sub
decl
sbb
fmuls
inc
fimull
es
stc
mov
push
int
xchg
imul
clc
aas
cmpsl
popa
out
mov
js
mov
aam
mov
lds
push
scas
testl
sub
jae
xor
jg
jb
push
scas
and
mov
mov
out
mov
mov
dec
mov
lahf
dec
roll
insb
push
sub
stos
repz
jb
jg
test
loope
jmp
imul
jae
jmp
add
out
mov
outsl
adc
pop
sub
lcall
lods
xchg
inc
arpl
inc
lret
xchg
adc
call
movsb
bound
lret
je
dec
test
mov
scas
sub
lret
ret
push
dec
mov
pushf
mov
or
and
in
xor
xchg
dec
cmp
xchg
sbb
addr16
mov
test
jle
mov
mov
xchg
cmpsl
js
sahf
scas
adc
jb
cltd
gs
or
cld
jb
xor
pushl
mov
mov
lock
sahf
cmc
sbb
cld
in
arpl
jge
mov
sti
mov
add
inc
xor
stc
pop
mov
xchg
out
and
push
out
dec
gs
adc
decl
adc
outsl
pop
ss
mov
add
cmpsl
mov
dec
pushf
push
jp
mov
jbe
in
push
adc
pushl
outsb
cmc
lahf
dec
mov
fldl
movsl
rclb
jmp
xchg
dec
filds
out
sahf
jge
and
mov
ret
stc
push
sub
lahf
aaa
adc
pop
push
mov
xchg
xor
jge
xor
out
mov
out
outsl
movsb
enter
aas
dec
dec
lahf
xchg
xor
popf
das
add
jnp
bound
lret
sar
loope
lret
sub
mov
xor
jbe
inc
cli
jg
pusha
sahf
out
xchg
xchg
mov
dec
xchg
pushl
les
mov
out
xchg
aas
jp
subb
add
inc
push
dec
sub
mov
sub
pusha
lahf
insb
mov
xchg
lcall
jo
jmp
mov
fadds
push
stc
adc
dec
sub
pushl
mov
add
mov
xchg
inc
ja
dec
lods
pop
andl
xor
lret
incl
ljmp
or
jl
xor
or
cmc
mov
jne
out
pop
scas
incl
sub
jnp
xchg
data16
inc
aaa
inc
movsb
mov
push
scas
fdiv
les
mov
ror
iret
and
lds
test
fiaddl
iret
jb
mov
push
sbb
add
js
mov
fsubs
jb
out
lcall
call
xchg
inc
enter
xchg
clc
adc
repnz
cmp
cmc
clc
mov
lcall
loop
and
lcall
xchg
lret
mov
out
cs
inc
cmpb
dec
mov
or
mov
jns
xchg
push
aad
adc
jg
sub
xchg
pop
pop
and
cs
mov
lret
pop
mov
aad
dec
test
and
pop
inc
mov
push
out
mov
push
std
mov
stos
jno
mov
les
js
fld
outsl
movsl
xor
call
mov
inc
sti
aam
inc
popf
sub
xchg
lret
mov
in
jns
gs
jg
cmp
pushf
imul
adc
fisubrs
sub
add
sbb
cwtl
nop
sbb
jmp
pop
cltd
dec
sbb
lds
int3
pop
mov
pushf
inc
jne
leave
xchg
jae
incl
les
in
rcrb
dec
push
imul
jecxz
int
lcall
jb
scas
and
sub
inc
xchg
adc
mov
cmpl
adc
cmp
pushl
in
and
mov
inc
jge
mov
xchg
pop
je
mov
in
iret
arpl
adc
and
sub
arpl
mov
inc
add
incl
in
add
cli
lcall
and
xor
test
aaa
adc
dec
clc
bound
mov
movsb
lcall
mov
add
cmp
scas
mov
add
dec
pusha
xor
jo
jg
add
jle
jbe
mov
jb
fs
mov
or
or
jg
pop
aaa
jbe
jg
out
fwait
test
push
push
inc
std
lds
out
sarb
xchg
cmpsb
pop
pop
dec
dec
jp
pushf
xor
sub
ds
test
movsl
lret
push
add
std
mov
jb
xchg
mov
sarb
mov
movl
push
mov
dec
mov
movsb
pop
pop
pop
mov
insb
add
clc
popa
idivb
rolb
push
int
faddl
add
mov
cmp
pop
jl
sub
into
leave
adc
mov
xor
rol
add
jg
sub
div
fldcw
sbb
push
jle
pop
test
jg
movsb
mov
lods
insl
mov
sbb
mov
imul
fxam
push
stos
push
or
daa
out
inc
add
mov
out
jb
jmp
out
in
imul
in
les
out
decb
inc
mov
int
mov
mov
test
mov
movsb
sahf
cwtl
jae
aaa
orb
fxrstor
aas
dec
push
push
decl
loope
jbe
lods
shlb
jae
add
clc
xlat
add
in
push
in
pop
xor
clc
cmc
adc
cli
jmp
dec
jge
pop
xor
mov
out
shr
or
test
call
sbb
sbb
mov
jns
fs
mov
sub
mov
stos
dec
push
orb
xchg
out
insl
les
xchg
lods
pop
or
mov
ljmp
cli
fbstp
addb
imul
loop
push
in
fsts
popa
push
sub
sbb
sbb
push
out
xchg
fimuls
into
fistps
or
add
jmp
inc
xchg
movb
aas
and
sub
mov
sbb
jg
jg
cmp
jbe
fwait
cmpsb
mov
int3
cli
cwtl
enter
fisttpl
jmp
es
mov
sbb
cs
iret
or
loopne
push
nop
imul
lods
cli
pop
inc
jae
xchg
pop
fimull
icebp
or
lahf
jae
sbb
xchg
ror
pop
stc
ret
ret
ljmp
sbb
sub
lahf
cmc
sarl
jnp
jno
pop
sub
cmp
adc
insb
in
fmull
lahf
mov
adc
sbb
ljmp
mov
mov
stos
daa
test
mov
xchg
xor
lods
fistpl
lods
mov
push
clc
lahf
sub
push
subb
ss
sub
or
xor
aam
icebp
jmp
pop
movsb
loope
sahf
jmp
mov
mov
ret
mov
out
or
cmc
aaa
ljmp
cmpsl
fiadds
or
or
sbb
sbb
jmp
int3
adc
decl
and
cmpb
bound
xchg
out
mov
and
xchg
and
add
or
lcall
cli
sbb
outsl
or
sbb
pop
xchg
jno
nop
adc
mov
imul
call
jecxz
dec
packuswb
pop
es
pop
pop
mov
push
arpl
push
out
mov
and
xor
jmp
in
mov
lret
dec
and
sbb
mov
sub
cltd
in
call
mov
and
and
xor
mov
push
sub
jle
adc
pushl
std
test
call
into
mov
andl
xchg
subb
shll
cltd
stc
cli
and
ret
mov
inc
shll
or
and
testl
and
stos
ljmp
jb
and
mov
stos
pushf
pop
mov
mov
stos
imul
pop
xor
and
sbb
mov
inc
cltd
ja
fs
cmp
dec
int
jns
inc
incl
cld
pop
and
jbe
xchg
mov
inc
jo
mov
fcomip
sbb
add
outsl
mov
xchg
mov
jmp
dec
push
jae
push
pop
and
call
dec
mov
js
movsl
in
sub
outsb
rcrb
jb
jns
push
fisttpll
incl
addr16
mov
out
fwait
sbb
roll
mov
aaa
add
jno
mov
jb
ljmp
ss
cmp
rcl
les
dec
rorb
movsl
mov
and
jae
lcall
mov
movsl
push
mov
test
ret
dec
aaa
fs
jmp
clc
movsb
jbe
push
gs
add
cmp
mov
clc
xchg
pop
jmp
jmp
stos
cmp
inc
push
loopne
sti
jg
dec
fsts
sub
sbb
jge
out
mov
out
fisubrs
std
sbb
call
pop
inc
mov
xchg
jl
sbb
and
lea
ljmp
xor
xchg
inc
dec
fbld
pop
push
cmp
mov
scas
dec
inc
dec
jle
test
incl
ficoms
dec
xor
mov
cmp
jmpw
mov
sbb
cmp
adc
dec
jbe
hlt
loopne
leave
push
and
cld
decl
shrb
inc
add
cmpsb
cmpsl
xor
icebp
fwait
loopne
ljmp
repnz
push
or
and
test
sbbl
and
or
ljmp
pop
cmc
dec
ret
dec
inc
push
mov
mov
insb
scas
lock
popa
xchg
fistl
sub
ret
ljmp
jmp
xchg
add
repz
ss
fdivs
cltd
mov
inc
mov
pop
mov
into
mov
xlat
subb
sbb
divb
leave
cmpsl
stos
dec
lret
lcall
mov
xchg
xor
or
cld
ljmp
jmp
jb
jmp
int3
adcl
push
test
dec
dec
sub
scas
mov
mov
xlat
pop
xchg
sar
in
sbb
imul
int
test
test
cs
fiadds
jge
insl
cwtl
and
mov
mov
pop
fisttps
inc
inc
rolb
out
clc
mov
es
xor
cmp
pop
out
inc
lret
or
add
call
outsl
cmp
pop
pop
jb
mov
cli
sbb
incl
mov
inc
shrb
xor
xor
lcall
jns
testl
cld
pushl
test
fnsave
sbb
xchg
dec
cwtl
pop
xor
gs
and
imul
jl
insb
popa
sub
and
fsts
adc
dec
add
mov
mov
mov
sub
out
pop
push
sub
lret
fsubl
pop
and
adc
ljmp
cmp
js
mov
mov
into
push
cmpsb
sahf
inc
xchg
xor
lret
movsb
es
ret
add
mov
cmp
pop
mov
call
mov
pop
pop
repz
fcomp
fs
iret
jecxz
pushf
jno
push
push
nop
loopne
clc
mov
jnp
decl
incl
pusha
mov
xor
outsl
dec
mov
aam
xchg
es
ret
adc
call
mov
push
je
pushf
aam
jecxz
mov
mov
dec
std
ja
incl
cltd
lods
jp
push
fiadds
xchg
out
sub
out
gs
jg
add
aad
adc
loop
pop
cmp
aaa
js
incl
mov
fwait
pop
cmp
push
cld
lret
jmp
push
or
out
adc
pop
std
out
test
nop
ret
sbb
ficompl
mov
outsb
fildll
mov
mov
xor
pushl
push
adc
addr16
xor
clc
fimuls
sarb
cmp
mov
sub
mov
xchg
out
lret
decl
ret
xor
pop
mov
cmpsb
inc
mov
adc
aaa
mov
push
sub
dec
inc
loop
pushf
xchg
sbb
into
test
bound
cmpb
and
mov
addr16
jecxz
or
cltd
add
jns
or
stc
mov
adcl
mov
incl
clc
jns
inc
sahf
add
les
jb
xchg
push
in
addb
jmp
push
push
repz
mov
ljmp
ljmp
inc
je
xchg
add
sti
cmp
ss
pop
decl
movsl
or
subb
test
mov
fisubrs
adc
aaa
std
decl
xor
push
popf
lock
idivl
or
test
sub
sub
lret
sbb
mov
mov
jl
mov
mov
mov
xchg
leave
imul
mov
xor
incl
test
xor
cmp
scas
adc
sub
sub
ljmp
push
outsl
pusha
out
lret
xchg
loopne
data16
add
pop
jg
and
dec
jae
sahf
pop
adc
incl
cltd
mov
shrl
mov
mov
in
xor
in
adc
fcmovne
cld
fdiv
jo
pop
xchg
dec
lcall
pushf
ss
push
fs
jge
dec
repz
ljmp
int
fistpll
test
xchg
cmpsb
mov
jbe
stos
cltd
push
adc
pop
add
fcomip
inc
add
clc
and
mov
xchg
mov
push
stos
pop
pop
xchg
not
ja
call
icebp
add
fcoml
or
sbbb
inc
sub
mov
loop
mov
in
jecxz
dec
or
adc
daa
jle
hlt
mov
sub
clc
fwait
loopne
sub
mov
in
lret
push
out
ficomps
sar
pop
repnz
jmp
xchg
xor
insl
jbe
and
xor
pushl
mov
movsl
mov
and
std
scas
xchg
icebp
cmp
jecxz
das
outsl
clc
lcall
mov
in
sbb
fs
adc
mov
push
decl
out
pop
push
test
push
popa
cwtl
mov
cmp
xchg
out
cli
inc
pop
icebp
sti
adcl
xor
inc
xor
xchg
arpl
mov
cmp
push
push
jecxz
insb
loopne
lea
jmp
xchg
imul
loope
mov
and
daa
addr16
xchg
mov
jmp
stos
sub
cmp
and
sti
sbb
and
push
or
xor
mov
out
sbb
decl
xor
test
adc
jns
test
into
mov
dec
outsb
push
sahf
push
jne
push
roll
push
or
ljmp
mov
or
push
sub
lcall
icebp
push
xchg
mov
hlt
pavgb
out
sbb
pop
mov
xchg
popa
inc
or
pushl
lea
out
xor
cs
add
xchg
pop
divl
in
or
pushl
cwtl
xlat
mov
aas
lcall
lods
mov
sub
add
call
dec
in
xchg
mov
jnp
sub
daa
test
xlat
arpl
mov
imul
pop
lcall
loope
pop
push
add
jmp
jnp
fdivrp
ljmp
or
fmuls
int3
fs
sarl
sub
mov
pushl
fsts
popf
stc
lret
fcomps
and
nop
mov
adc
or
push
push
inc
lret
lds
mov
aas
xchg
sbb
dec
or
decl
decb
jge
mov
pop
lret
lds
loopne
adc
xor
shlb
inc
xchg
bound
hlt
int
inc
nop
imul
mov
jmp
pop
sub
mov
scas
lcall
out
push
cwtl
mov
or
dec
pop
scas
cwtl
ja
jl
decl
dec
in
jo
mov
outsb
mov
mov
dec
sbb
mov
mov
jmp
push
pop
mov
and
mov
hlt
pop
arpl
jl
cmpl
fcompl
out
mov
xchg
popa
and
pop
loop
add
mov
sub
repz
mov
int
lock
jnp
dec
add
mov
std
out
mov
xor
popa
add
jbe
jge
int
add
or
jp
mov
lea
jb
ret
and
call
lahf
test
sbb
mov
sbb
les
test
mov
mov
adc
cmp
out
push
sbb
cmove
shlb
fs
sti
inc
and
iret
hlt
ret
or
mov
out
cli
push
cld
and
cltd
clc
insl
stos
bound
leave
out
fisubs
add
inc
fcos
push
adc
movsl
jecxz
cmc
sub
add
ret
add
stc
and
sbb
or
sti
cmp
outsl
cli
incl
xchg
test
or
xorl
movlhps
push
test
xor
insl
scas
repz
icebp
inc
mov
aam
jle
xor
cmp
lret
pop
jb
ja
pop
inc
in
mov
mov
aas
pop
xchg
adcb
cs
data16
pop
in
add
push
icebp
or
mov
xchg
adcb
inc
repnz
incl
loopne
ljmp
sbbb
scas
pop
es
push
pop
xor
aam
decl
rorb
loop
sub
xchg
push
in
mov
push
or
push
incl
lcall
jmp
flds
mov
adc
xchg
push
xor
mov
icebp
jo
push
rcrl
scas
lock
jp
xchg
std
stos
xchg
incl
ret
mov
mov
sbb
scas
in
jmp
cmp
enter
inc
call
or
add
pop
fcmovnbe
gs
jle
arpl
lret
mov
pop
pop
sbb
adc
sbb
and
mov
fstpl
or
push
inc
sub
pushl
jmp
lret
sbb
jl
dec
jp
lcall
mov
fidivs
ljmp
inc
sbb
divb
inc
dec
and
add
faddl
ljmp
jp
loop
popf
add
jb
stc
sbb
xor
test
inc
insl
cmp
mov
lcall
rorl
std
aas
inc
pop
pop
add
call
or
xchg
push
mov
imul
cmp
in
scas
call
mov
mov
add
js
cs
pop
mov
xor
sub
xlat
movsb
rorl
mov
or
subb
mov
ljmp
mov
scas
jl
arpl
mov
out
addr16
or
dec
aam
outsb
lret
jne
mov
pop
push
jg
inc
cmpb
jns
rcll
lret
insb
rol
scas
scas
push
push
or
mov
dec
mov
pushl
mov
jge
in
and
test
nop
jp
jnp
mov
pop
or
inc
xor
in
fcmovnu
jl
mov
xor
movsb
and
incl
sub
cs
fldenv
jne
mov
addb
add
mov
incb
movsb
mov
add
jge
pushf
cwtl
or
cmp
pop
push
mov
and
test
cmp
jle
out
dec
stos
lds
ss
lret
out
dec
dec
push
test
sbb
inc
xrelease
inc
xchg
imul
push
test
inc
subl
fsts
nop
mov
push
ret
mov
jmp
imul
roll
mov
xlat
sub
push
sahf
pop
mov
iret
cmp
call
repnz
frstpm(287
orb
xor
stos
imul
imul
arpl
pop
lcall
test
outsb
add
ret
hlt
pop
xchg
mov
fcmove
movsl
subb
sbb
fcomip
push
mov
mov
pop
add
mov
pushl
pusha
int
mov
flds
xchg
lahf
jecxz
mov
mov
add
jg
nop
rorl
fs
loopne
pop
cmp
xchg
xor
enter
and
mov
push
cmp
leave
outsb
pop
test
decl
rolb
mov
vmread
inc
mov
push
shrl
push
data16
jl
fld1
iret
inc
mov
das
rorl
mov
mov
out
shll
mov
xchg
and
add
inc
or
push
ljmp
ja
ljmp
fcomip
call
cmpsb
rcl
mov
mov
test
mov
add
decl
mov
cwtl
adc
cli
movsw
mov
pop
rorb
mov
jb
xor
incl
sti
mov
mov
enter
jp
data16
or
jmp
fidivs
lea
mov
and
cwtl
test
xchg
mov
mov
inc
xchg
lea
inc
ljmp
das
xor
shl
out
sbb
incl
test
jo
rcr
mov
cmpsl
rcrb
inc
or
aad
cmp
pusha
jl
jmp
jb
stos
pop
stos
dec
jbe
out
mov
in
decb
mov
mov
add
sbb
arpl
arpl
aad
js
jp
out
int3
mov
inc
jae
add
inc
std
xchg
mov
sub
adc
mov
es
push
loope
aad
dec
call
pop
jbe
outsl
ret
jmp
ljmp
test
cld
push
out
mov
pop
mov
mov
cmpsl
inc
adc
inc
xchg
fdivr
lcall
or
cmp
mov
push
into
ret
sbb
or
std
ljmp
outsl
insb
push
and
xchg
pop
mov
or
aaa
mov
sahf
mov
daa
and
lock
scas
xchg
cmp
aaa
xchg
shl
fsubs
pop
std
mov
loope
std
cmp
subl
push
push
inc
andb
pop
stc
into
pop
or
decl
shrl
adc
push
add
mov
incl
jg
pop
xchg
sub
cmp
lea
adcb
mov
inc
mov
sub
dec
dec
shlb
out
repz
mov
and
inc
xchg
imul
and
cmpsl
lods
adc
aad
mov
xor
dec
lret
sub
fxtract
jnp
mov
popa
inc
imul
mov
cmp
cmp
arpl
ljmp
arpl
into
rcrl
rcll
and
sub
xchg
dec
pop
ljmp
shll
bnd
jmp
das
aas
sbb
jne
push
mov
inc
pop
lea
fcomip
sbb
pushf
int3
cmp
xor
mov
mov
dec
ss
aam
test
into
daa
aam
sbb
xchg
jmp
jmp
outsl
stos
mov
sbb
das
out
jo
pop
loopne
lret
push
fcomip
sub
ret
ljmp
adc
bound
fld
out
lcall
je
mov
jae
cmpl
scas
iret
cmc
cli
add
mov
jmp
mov
and
jmp
sbb
inc
jo
in
xchg
pop
xchg
test
je
pop
sub
packssdw
rorl
jmp
and
lret
loope
inc
cwtl
sbb
stos
aad
jne
call
ss
xlat
jmp
bound
imul
dec
mov
int3
pop
adcb
movsl
clc
ja
icebp
mov
pop
jnp
std
cmp
push
jecxz
mov
roll
push
xchg
fdivl
enter
jns
jb
mov
push
push
fcmovbe
pushl
pop
fcomip
pop
or
inc
fsubl
mov
aad
pushl
jns
pop
xchg
pop
shrl
jb
rcll
xchg
out
adc
aas
push
push
add
test
incl
sub
fucom
dec
cmp
add
call
mov
sbb
push
test
jp
xor
stos
dec
or
int
add
pusha
jg
jmp
jne
jno
adc
pop
xorb
js
inc
inc
mov
into
pop
loopne
cld
push
jo
fs
scas
mov
push
repnz
ret
cmp
jecxz
xchg
test
loop
roll
ss
call
mov
sahf
xor
stos
insl
inc
pop
ficoms
out
inc
fisubs
xchg
cmpsl
cld
mov
add
mov
pop
sbb
ljmp
inc
test
ljmp
scas
call
sub
out
adc
lret
mov
pop
cmp
cs
call
pop
fistl
out
stos
mov
or
jmp
clc
mov
pop
int
pop
mov
fistpll
lcall
xor
push
sbb
test
add
jmp
std
add
xor
lods
pusha
add
adc
jl
mov
and
xor
call
push
pop
loop
mov
xchg
or
ss
jae
mov
test
incl
sub
add
cmp
pushf
shrb
cmp
shll
iret
decl
mov
outsb
pop
mov
lds
fadd
and
sbb
mov
mov
jmp
and
ror
aas
xchg
mov
push
dec
lds
pop
jno
push
lret
push
pop
call
mov
and
xchg
aaa
mov
loopne
adc
xor
ret
mov
loope
cltd
jmp
pop
push
sub
jl
xor
and
pop
lods
sbb
cmp
inc
imul
ljmp
cmp
push
ret
in
and
add
mov
mov
imul
pushl
jp
lock
push
mov
ljmp
addr16
aad
mov
inc
mov
xchg
lcall
shrl
je
test
lcall
stc
jp
mov
mov
in
jmp
dec
jno
inc
out
sahf
xchg
int3
sbb
shlb
xor
decb
push
mov
call
and
dec
or
mov
clc
jae
mov
add
ljmp
rcr
or
int3
pop
mov
cmp
aaa
inc
sub
outsb
xchg
lahf
jmp
lcall
arpl
jg
js
movl
mov
add
fisttps
push
aaa
and
leave
popa
fs
xor
xor
mov
ljmp
decl
jno
cmpsb
sahf
push
aam
pop
andb
adc
popl
clc
in
test
ljmp
lret
ror
xchg
pop
push
cwtl
int
fwait
les
jb
rorl
dec
mov
dec
mov
ljmp
inc
xor
pop
xor
fdivr
arpl
xor
lcall
test
sub
adc
shll
movsl
jmp
clc
pop
jg
cld
cmpsl
pop
icebp
jmp
jo
shlb
xor
aad
loopne
dec
fsubs
ljmp
and
mov
push
inc
and
push
mov
xor
repz
pop
cmp
ljmp
push
fldcw
dec
scas
add
les
or
jmp
aad
std
pushl
addr16
sbb
fnsave
inc
push
and
popf
pop
fimull
or
ret
adc
cli
mov
mov
pop
inc
pusha
jmp
mov
sbb
cmpsb
movsl
sbb
inc
xchg
push
sbb
adc
adc
scas
lods
mov
inc
inc
xchg
stos
xor
dec
push
sti
add
stos
mov
hlt
pushl
mov
lock
mov
sbbl
jae
xchg
lret
and
in
mov
mov
xchg
enter
inc
arpl
sub
cmp
jns
repz
jmp
cmpsb
popf
scas
adc
out
mov
jecxz
xchg
in
iret
pop
xchg
jle
lcall
out
roll
mov
mov
scas
fst
cmp
les
out
cmp
sbb
incl
imul
and
cmp
sbb
mov
imul
lret
cmp
xor
movsl
cmp
stc
je
std
idivl
push
or
jne
xchg
jmp
mov
push
or
mov
repz
imul
sub
push
push
popf
cmp
jmp
add
mov
dec
je
ret
cmp
jecxz
ja
sub
test
jge
daa
ret
dec
jae
jge
mov
test
inc
out
insw
out
leave
jmp
push
std
incl
xor
scas
jns
adc
sub
mov
mov
nop
sbb
jmp
cli
inc
out
stos
shll
xchg
stos
pop
and
pop
xor
sub
call
subl
mov
mov
push
ret
add
adc
ljmp
iret
in
inc
pop
movsb
mov
jae
lods
das
add
jb
pop
mov
xchg
test
or
dec
aas
push
rclb
dec
xchg
daa
ret
or
sub
add
or
cmpsb
out
ljmp
add
jmp
xchg
xchg
pushf
loop
fsubrp
js
xor
jp
mov
imul
mov
sahf
xor
fs
and
mov
shrl
jnp
leave
outsl
pushf
jmp
jbe
push
mov
mov
data16
or
fsubrs
fdivrl
dec
lods
push
mov
lret
or
adc
dec
in
pop
mov
ljmp
adc
leave
inc
mov
jp
jg
mov
ljmp
mov
sub
fcmovbe
xchg
aas
mov
loop
jmp
cmp
test
pop
insl
jnp
pop
and
push
aaa
arpl
mov
das
lcall
push
inc
inc
sbb
sar
xchg
les
arpl
push
pop
lret
dec
hlt
call
mov
out
scas
add
jmp
mov
fucomi
dec
sub
test
pop
mov
incl
cmp
int3
pop
cli
xchg
js
movsb
cmp
cmp
call
mov
cwtl
pushw
sbb
outsl
imul
push
ljmp
inc
xchg
jg
fistps
pop
fnstcw
cmp
mov
mov
xchg
rclb
cmp
cs
incl
cld
mov
inc
out
fadd
nop
jmp
dec
pop
mov
xor
ljmp
nop
cmpsb
xor
push
jno
lret
data16
pop
cltd
and
and
jns
hlt
notl
lcall
sub
shlb
icebp
cmp
sub
xchg
sbb
jg
cli
decl
xor
mov
jmp
jmp
roll
call
stos
jbe
pop
or
push
sar
jmp
pop
mov
sbb
and
roll
popa
push
call
inc
out
or
push
mov
lcall
idiv
pop
js
push
lahf
pop
push
xor
out
pop
hlt
pop
popa
adc
push
repnz
cmc
ljmp
jge
inc
add
stos
sub
xchg
mov
fcomip
fildll
push
xchg
out
fisubs
das
sti
rorl
and
stos
sbb
dec
and
ljmp
cltd
inc
lods
rorb
sbb
addr16
lret
notb
push
lcall
jg
incl
mov
pusha
inc
mov
mov
stc
mov
pop
jmp
loopne
std
out
cltd
push
pushf
pop
insl
mov
cmpsl
sub
and
xchg
ja
jle
mov
in
mov
sbb
fs
es
pushl
filds
pop
adc
lret
sub
push
xor
in
xor
adcb
sbb
and
decl
test
gs
mov
sub
mov
in
mov
mov
call
adc
pop
pavgw
test
add
mov
bound
sbb
decl
scas
cmp
test
sbb
outsb
adc
jmp
in
ljmp
ja
push
sub
outsl
imul
dec
adc
cmp
jg
or
lods
es
orb
dec
cmp
das
cli
lcall
in
aad
lea
pop
sub
pop
clc
jle
int
xlat
dec
push
ret
mov
outsb
mov
pop
add
lcall
je
cli
add
scas
push
jno
cltd
xor
mov
out
test
and
lret
jno
mov
pop
ret
cltd
dec
insb
ljmp
mov
test
stc
xchg
mov
iret
jae
movsl
enter
in
aam
mov
aaa
test
call
pop
fs
cli
xchg
into
ret
je
aad
enter
adc
incl
imul
push
and
cltd
fnsave
jae
out
sbb
and
test
decl
pop
mov
lcall
xchg
stos
fisttpll
sub
out
and
pop
loopne
jmp
mov
stc
out
int3
mov
fs
jno
xchg
cmp
aaa
inc
pop
sub
popf
jne
pushl
fnstsw
lahf
in
out
and
ljmp
jbe
addr16
or
add
cmp
decl
xchg
popf
sti
pop
cmp
data16
pop
test
jge
mov
and
decl
enter
scas
or
adc
add
sub
out
mov
xor
xchg
pop
xchg
jb
ss
ficompl
rcrb
mov
je
and
push
mov
pop
cmpsl
sub
je
pop
sahf
jmp
sbb
push
or
out
jb
out
mov
mov
mov
mov
js
ret
and
pop
movsb
mov
adc
jle
scas
adc
push
sbb
pushl
jne
rcrb
or
das
xchg
add
jnp
pusha
stc
arpl
lahf
out
movsb
xor
out
lods
push
jg
mov
inc
ja
call
in
scas
out
jmp
cmpsb
push
bound
push
fisubl
call
cmc
sbbl
dec
in
rcll
jg,pn
pop
mov
jle
enter
pop
imul
xchg
sbb
scas
call
jmp
push
jmp
sub
mov
push
mov
out
pop
jmp
lret
repz
call
ret
dec
mov
sti
mov
cmp
std
or
les
adc
lret
lret
lock
inc
lods
pop
out
adc
mov
lret
cbtw
ljmp
sbb
push
dec
and
lcall
inc
xlat
dec
adc
pop
jo
sub
sar
mov
out
test
cwtl
out
mov
push
lods
xchg
xorb
cli
jp
sub
lahf
mov
pop
adc
jmp
in
fisttps
mov
ret
data16
sbb
jg
call
mov
jo
adc
xor
cli
mov
pop
mov
inc
out
xchg
icebp
daa
jne
cmc
cmp
roll
lods
dec
sbb
cld
ljmp
outsl
or
pop
mov
fucom
ds
push
adc
jg
les
xor
call
push
inc
rolb
add
call
push
lret
sti
cmp
xchg
cmpsl
fcmovu
fsubr
cmp
iret
inc
dec
aas
js
and
outsl
cli
cmpsb
mov
dec
push
adc
cmp
pushl
fidivs
push
jbe,pt
aad
jno
add
push
lret
fistpl
daa
pushl
inc
xchg
lret
push
xor
rcll
sar
fldl
jg
push
sub
and
mov
ret
cmp
push
cmp
lcall
ljmp
ret
push
mov
stos
std
mov
and
insb
ret
cmpsb
addr16
out
repz
fcoms
mov
lret
movsb
movsl
or
push
adc
shrl
pushf
inc
icebp
cli
add
incl
adc
dec
adc
push
insl
popf
cmp
imul
mov
sbb
sub
ljmp
jg
adc
jbe
cmp
subb
or
aaa
cltd
sbb
out
call
xchg
stos
popf
cmpsb
out
test
call
dec
mov
sti
inc
leave
dec
mov
jno
adc
pop
loop
mov
inc
mov
dec
dec
pushf
cmpl
sar
lcall
jae
ret
cld
adc
rcll
out
icebp
mov
fidivs
add
cmp
adc
adc
sub
into
shrb
int3
sub
lahf
out
call
mov
rorl
sub
mov
out
arpl
ljmp
cmc
decl
sbb
sti
sbb
push
mov
lret
test
jg
cmp
ret
loopne
jo
mov
and
jl
in
maskmovq
and
lds
jecxz
into
xchg
mov
pop
pop
mov
dec
push
popf
out
stc
xchg
pop
nop
test
je
les
call
jecxz
testb
clc
lods
je
mulb
shlb
loopne
call
pop
in
loop
and
or
mov
push
push
dec
dec
jns
xchg
push
inc
out
fstpl
mov
mov
out
push
imul
out
into
fdivs
jge
fsubrs
mov
mov
push
out
jno
nop
int
mov
inc
jle
lret
pop
xchg
pop
or
mov
jg
mov
aam
inc
cwtl
adc
movb
xor
pop
push
and
je
xchg
pop
jmp
movsl
push
outsb
jecxz
mov
imul
xchg
jle
sub
repnz
or
pushl
mov
ljmp
adc
fidivl
das
push
lods
add
movsl
pop
sar
incl
mov
loop
stos
mov
mov
lahf
insl
add
in
lock
jg
push
xchg
or
inc
flds
dec
xchg
pop
inc
jb
pop
lds
test
inc
cmp
push
test
cmc
sub
sub
cld
and
das
jmp
out
fdivl
cmp
pop
sub
mov
popa
lods
rcl
pop
loopne
pop
jl
pop
adc
mov
mov
or
or
insl
inc
sbbl
pop
testb
jmp
lret
push
enter
sub
and
imul
xor
sub
lahf
adc
mov
jbe
xor
cld
sbb
push
out
xor
es
inc
sbb
or
cmp
incl
cmp
ljmp
and
push
test
test
fcoms
test
nop
enter
cmp
leave
mov
mov
in
ja
sbb
sbb
push
dec
fistpl
shr
jmp
xor
push
aad
cmp
out
das
xchg
cwtl
push
cmp
xor
sbb
sahf
push
fwait
jg
cmp
out
sub
xchg
clc
je
pop
cmc
mov
cli
jmp
inc
xor
jne
imul
sub
dec
pop
fmuls
jmp
rcll
ljmp
loop
dec
rcl
cmp
std
add
shr
subl
xlat
out
call
sbb
ljmp
mov
or
cwtl
decb
pop
outsl
enter
pushl
mov
leave
sub
pop
loopne
push
mov
sbb
ja
jl
xchg
js
daa
js
lea
jl
loop
mov
aam
pop
out
pop
imul
stc
fcomip
inc
dec
pop
lret
jbe
fisubrl
aam
adc
jnp
movsl
add
lcall
movsl
xor
adc
scas
negb
jmp
pop
iret
es
mov
test
call
adc
xchg
fdivrs
in
xchg
xor
dec
mov
ljmp
mov
cmpsl
fstl
and
test
test
lea
push
pop
and
xchg
stos
ftst
pop
jg
or
xchg
inc
test
fisttps
pop
fisubl
ljmp
dec
cmc
mov
imul
mov
sahf
out
sub
call
nop
push
dec
sbb
jno
adcb
fsubrp
adc
sar
pushl
in
jno
loopne
mov
daa
pop
adc
xchg
jle
pop
sbb
jg
cs
jmp
aaa
mov
scas
sub
adc
mov
fldl
pop
cwtl
sbb
loop
cmp
or
shrl
sub
call
out
xchg
out
adc
or
cmp
imul
in
add
dec
pusha
divb
pop
lock
pushl
outsb
rcrl
int
ja
xor
dec
pop
test
sub
lret
pop
icebp
lcall
push
test
mov
outsb
and
mov
inc
inc
mov
xlat
call
pop
inc
out
jns
cmc
roll
pop
inc
xchg
mov
push
lock
xchg
xchg
int3
xchg
fidivl
das
iret
lcall
insb
iret
fimull
push
insl
fbld
js
dec
out
repnz
outsb
ret
test
add
mov
lret
es
jo
jmp
lcall
fcmovnb
push
pop
lods
mov
lcall
cltd
or
mov
and
mov
sub
mov
push
cmc
popf
xchg
xor
add
pushf
mov
repz
fistps
incl
fmull
adc
push
or
mov
andb
fildll
mov
das
xor
inc
jne
push
sbb
add
jmp
adc
xchg
mov
jne
adc
mov
repnz
cmp
xchg
fldt
jg
gs
xor
orb
dec
ljmp
mov
sub
fwait
sub
jl
inc
loopne
jg
sub
mov
mov
push
inc
jns
jmp
fbstp
mov
or
push
clc
sub
xor
ljmp
pop
jbe
jg
pop
cmp
loop
push
arpl
mov
mov
mov
hlt
popa
mov
ret
mov
outsl
inc
fcmovb
mov
movsb
inc
aam
incl
mov
dec
jmp
clc
loope
adc
cmpsb
lods
loope
inc
ljmp
sbb
in
jb
addr16
imul
cmpsl
in
cmp
push
adc
mov
pop
enter
mov
ds
enter
push
jl
add
sbb
shll
insb
add
lds
int3
cmp
fists
rclb
add
pop
mov
lds
movsl
stos
out
pop
pop
inc
mov
out
lcall
dec
add
ljmp
or
es
push
xor
xchg
jae
inc
mov
scas
jbe
xchg
sahf
xchg
pop
fdivs
fprem
pop
leave
test
jg
xchg
in
inc
iret
inc
test
call
movsl
push
test
in
cmp
mov
ret
mov
pop
pop
jb
clc
lahf
subl
inc
hlt
jae
lcall
push
xor
xor
sbb
jbe
mov
xor
loopne
mov
jge
pushl
mov
lds
cwtl
test
add
outsl
inc
lock
shll
dec
sar
fsub
test
jge
imul
fistpl
js
mov
scas
add
loop
jg
mov
aam
xchg
lods
movsb
popa
stos
rcrb
and
add
sarl
int3
into
mov
je
decl
adc
fsubr
push
mov
test
cmc
push
add
movsb
lcall
pushl
clc
insl
das
dec
pop
ds
mov
xchg
mov
or
jmp
cmp
scas
jecxz
mov
fmull
inc
loopne
das
xor
mov
xchg
cli
loopne
cli
outsb
lcall
mov
inc
outsw
aad
cli
popa
adc
mov
xor
out
dec
fisttps
lcall
sub
jne
push
cmp
xlat
or
jle
loope
lret
inc
mov
ret
push
imul
ficomps
dec
adc
jmp
push
jae
ds
scas
iret
pop
mov
push
xor
incl
cld
out
cld
lds
mov
shlb
mov
mov
incl
pop
add
xchg
mov
jge
movsl
test
sbb
sub
int3
adc
pop
pushl
movsl
aam
jbe
test
mov
mov
push
add
ret
test
mov
call
xlat
sub
and
repz
mov
dec
lahf
fstps
lahf
arpl
call
xchg
filds
insb
fisubl
in
or
mov
mov
call
jg
decl
shlb
dec
mov
jne
jge
mov
stos
in
or
mov
mov
ss
cli
cltd
xchg
mov
pushf
jl
cli
pop
dec
cmp
or
mov
mov
add
in
or
push
and
or
push
jp
sti
push
mov
push
loope
dec
adc
icebp
sbb
xor
out
ret
call
and
pop
repnz
xchg
mov
stc
into
std
pop
repnz
dec
xchg
jl
fcoml
int
add
sti
popf
lret
sbb
pop
jl
mov
into
enter
mov
jg
and
mov
mov
mov
jns
sub
ss
fldl
outsl
fisttps
sti
sahf
fs
enter
in
cmp
sbb
dec
jmp
xchg
or
xchg
dec
insb
jb
gs
idiv
lcall
nop
xor
mov
jbe
inc
dec
cwtl
pop
es
stos
lock
inc
inc
adc
ljmp
daa
jbe
adcl
inc
mov
js
ficomps
inc
mov
xlat
or
xchg
lcall
mov
stos
cmp
add
mov
mov
scas
pop
nop
sar
ljmp
mov
movsl
adc
loop
push
fcomps
lahf
xor
jns
aaa
ljmp
xchg
imul
aam
jne
cmpb
ljmp
cmp
out
cli
mov
or
sub
mov
mov
ljmp
cli
push
loop
adc
lds
lods
std
aaa
and
add
loopne
pushl
bswap
mov
shl
xchg
int3
cmp
push
iret
fnstenv
incl
lret
enter
loopne
cmp
mov
mov
iret
pop
js
or
ljmp
lds
std
repz
dec
repz
cltd
pop
sub
push
stc
scas
xorb
mov
call
scas
cwtl
mov
rclb
jne
jo
out
cmp
ret
repz
pop
mov
push
les
inc
ror
scas
repnz
clc
data16
jbe
push
stos
int
mov
mov
cmc
mov
jle
pop
loop
cli
mov
fs
out
scas
sub
lock
popa
sti
jns
sub
mov
xor
and
in
xlat
xchg
push
jge
cmp
filds
out
cli
and
xchg
add
pusha
add
icebp
push
sbb
mov
and
ljmp
test
sbb
pop
lcall
jnp
shll
xchg
jg
loop
sarl
lods
dec
cltd
test
shll
cmpsb
jge
clc
jl
mov
adc
jmp
inc
add
mov
pop
std
dec
outsb
push
sub
or
in
push
mov
dec
int
in
in
sub
mov
clc
pop
loopne
imul
or
in
lea
loope
pop
hlt
inc
sbb
outsb
dec
xchg
test
inc
cld
jns
stos
and
and
mov
mov
dec
cmp
inc
push
out
negl
ficoml
adc
push
jmp
push
jl
cld
pushl
nop
cltd
jmp
jmp
xchg
adc
add
lock
fstl
sub
fisttpll
ss
cmp
xchg
je
ja
add
fisttps
ret
pop
cmpl
sbb
mov
insb
push
pop
xchg
stos
xlat
insl
adc
inc
xor
repz
mov
test
out
sub
mov
sar
mov
decl
stos
sbb
xchg
add
jnp
stc
pop
cmp
push
test
jmp
scas
lret
rcr
cmp
sub
inc
adc
fbstp
adc
push
ljmp
pop
leave
xchg
inc
loop
push
cld
fucomp
in
xchg
loopne
xchg
out
insb
shlb
fcomps
jl
outsl
cli
inc
cmp
ljmp
test
mov
add
hlt
sbb
gs
xchg
js
dec
std
fadd
mov
out
cmpsl
cmp
jbe
inc
mov
or
jnp
sub
dec
push
sbb
mov
mov
or
in
sbb
in
mov
sub
pop
or
mov
lods
xor
decl
push
test
sar
loop
call
int3
xor
test
rclb
inc
in
decl
mov
jmp
data16
popf
cmp
add
repz
adc
inc
fcomip
lcall
inc
pop
scas
push
and
inc
sbb
sbb
test
lahf
das
xor
lret
incl
insl
dec
fisttpll
mov
aaa
mov
lret
sub
fwait
in
test
jmp
mov
pushl
imul
pop
into
fistpl
lods
movsl
scas
rorl
push
sti
sub
ljmp
cli
mov
adc
adc
fldenv
out
jae
adc
push
inc
cs
mov
decl
pop
pop
xor
jle
cmp
mov
mov
aam
fisttps
out
jbe
push
push
arpl
hlt
sub
andl
ja
mov
out
add
das
rcrb
mov
mov
cmp
cmp
in
or
icebp
aam
cmp
jge
adc
inc
cmc
and
mov
sbb
add
stos
fdiv
decl
cmpsb
and
aas
loopne
fdivr
push
insl
jno
je
pop
call
ret
in
int3
push
test
mov
xchg
pushf
jae
aad
lret
dec
ljmp
ret
lret
incb
cs
daa
inc
mov
das
jae
test
ret
and
push
or
mov
add
mov
fwait
je
sub
loopne
mov
pcmpeqd
ltr
sub
addr16
xchg
ret
xor
xchg
xchg
mov
movsb
lods
mov
xchg
pop
out
mov
decl
mov
dec
push
stc
mov
pop
fwait
mull
jo
jecxz
xlat
inc
mov
jg
mov
faddl
jno
inc
dec
and
dec
lcall
icebp
dec
lcall
xor
sbbb
fdivs
or
push
mov
int
ljmp
incl
adc
mov
out
fs
xchg
inc
push
xlat
outsb
cmp
in
and
imul
je
js
add
cmp
cltd
xchg
popa
xchg
mov
cli
xchg
xchg
test
mov
enter
or
hlt
divb
cmpsb
test
push
jp
jle
jge
call
mov
fiadds
dec
into
add
inc
mov
dec
push
and
je
xlat
lcall
aas
test
pushf
lret
fcmovne
movsb
sahf
jbe
imul
mov
push
add
push
inc
repnz
xchg
cmp
data16
xor
outsb
ror
or
inc
dec
inc
xor
mov
jg
bound
std
push
xchg
daa
inc
aam
loope
jb
fmulp
dec
sub
popa
push
xchg
cmp
loope
or
xor
rorl
cmpsl
shll
gs
loopne
mov
mov
aam
push
les
insl
xchg
or
cwtl
cmp
test
xorl
or
lahf
movsl
inc
and
decl
call
subl
cltd
fndisi(8087
fxch
push
adc
gs
mov
dec
lret
cwtl
cmpb
push
and
adc
outsl
je
push
xchg
neg
xor
stos
lock
add
mov
incl
jne
cs
ss
adc
xchg
inc
call
xchg
iret
jge
out
or
pop
js
push
lods
sub
js
inc
push
arpl
inc
clc
pusha
inc
jl
mov
lcall
push
pop
mov
or
stos
test
pop
fstp
dec
jb
jne
aas
fisubrl
pushl
loop
jbe
pop
movsl
lahf
in
add
push
fdivrl
sbb
jl
inc
sbb
hlt
arpl
cli
inc
dec
xchg
inc
and
cli
add
lcall
mov
daa
mov
pop
mov
call
or
sbb
ljmp
cmpsb
sbb
das
add
push
mov
fbstp
sbb
cli
in
add
jmp
insl
test
or
imul
call
ret
decl
ljmp
xchg
pushl
sub
rorl
cld
fcompl
pop
sub
jae
inc
lods
mov
fisttpl
jecxz
pushl
ljmp
in
and
mov
sub
data16
sub
mov
push
dec
jecxz
jl
enter
ss
call
jmp
das
cld
sbb
xor
dec
sti
xchg
out
mov
lock
pop
stc
mov
ljmp
subl
sbb
jns
lahf
cmp
push
cmp
push
ficoml
or
sbb
push
test
mov
ret
fdivl
pop
pop
and
push
jbe
add
aam
notl
pop
mov
push
test
fst
pusha
xchg
popa
cltd
mov
jge
cmpsl
stc
rorb
aas
cmc
wrmsr
lret
repz
push
mov
cli
jp
or
jmp
int
or
inc
pusha
lret
dec
mov
test
inc
pop
hlt
xchg
lods
adc
xchg
lahf
mov
incl
xchg
mov
lret
pop
xchg
sub
cmpsb
imul
jg
ljmp
push
cmpsl
sar
pop
sbb
pop
pop
xor
mov
pushl
shll
in
inc
cltd
and
pop
repz
popf
js
pop
pop
dec
clc
ljmp
add
sbb
push
scas
or
or
push
sbb
jmp
mov
outsl
sub
sti
ljmp
ljmp
rcrb
int
mov
jecxz
daa
nop
and
push
ja
cmp
out
test
aam
sbb
inc
adc
adc
mov
cltd
mov
daa
xor
aaa
int
mov
out
jp
rcl
test
std
lcall
rdtsc
jne
push
nop
loope
stos
mov
call
aas
pushf
in
daa
jl
sbb
das
push
push
rsqrtps
jae
inc
out
sbb
cmp
cmp
jmp
sub
sbb
fimull
test
test
data16
mov
ja
shl
dec
jecxz
imulb
out
jne
pusha
push
cs
pushl
add
popa
jle
pop
scas
xchg
sub
movsl
icebp
paddusw
push
ljmp
nop
dec
cmp
mov
frndint
dec
lods
inc
out
adcl
mov
lcall
adc
shrb
cmp
rclb
pop
jmp
inc
jg
decl
cmp
leave
xor
popf
call
xorl
std
and
in
shl
lcall
mov
fwait
daa
mov
stos
addb
lock
popa
add
pop
dec
cmpsl
ds
push
ds
cli
repz
xor
call
add
mov
lods
pop
push
lahf
test
adc
jno
aad
hlt
mov
dec
call
push
jbe
inc
push
ss
or
jmp
in
and
hlt
insl
cmp
xchg
test
or
popa
test
ljmp
scas
inc
js
inc
out
bound
sbb
xchg
or
out
lods
jbe
aad
sbb
scas
repnz
daa
inc
mov
and
mov
lods
sahf
data16
dec
cltd
adc
loop
pop
das
je
daa
sub
loopne
jmp
mov
sbb
aad
and
xchg
std
pop
xlat
out
lock
ss
cwtl
lds
sub
mov
mov
or
pushl
call
loop
cmp
insb
mov
iret
pop
mov
xor
pop
ret
mov
data16
incl
test
pop
pop
ficomps
test
sbb
fwait
sub
mov
mov
dec
clc
push
repz
push
mov
in
dec
cmp
out
popf
test
loop
imul
sar
dec
inc
push
mov
jne
repz
into
stos
jno
pop
pop
mov
fwait
cmpsb
and
in
push
adc
cmp
dec
nop
stos
insb
jl
into
out
iret
je
sbbb
out
mov
mov
fnstcw
mov
ds
mov
inc
pusha
dec
into
aad
scas
mov
jg
in
insb
inc
inc
imul
cli
dec
mov
lcall
arpl
mov
push
sub
fistpll
or
decl
or
lods
les
loope
push
push
jmp
daa
inc
fstl
testl
xor
sub
mov
mov
stos
jne
and
and
jb
inc
ret
js
xor
lcall
pop
call
stos
mov
xchg
xchg
outsb
mov
lahf
loope
inc
jno
nop
decl
sub
scas
jo
outsb
shlb
jbe
nop
pop
std
mov
mov
cmp
out
repnz
mov
add
call
mov
and
std
dec
mov
addr16
stos
jmp
lods
mov
jmp
incl
inc
pop
fwait
adc
out
xchg
aaa
add
clc
mov
mov
inc
push
sub
cwtl
xchg
aas
inc
sti
and
dec
push
sub
std
xchg
jnp
test
mov
mov
add
mov
or
xchg
xchg
in
sbb
call
jecxz
lea
jg
ja
push
roll
or
decl
movsl
pop
dec
imul
xor
xchg
xchg
pop
inc
jmp
out
adc
xchg
dec
or
call
in
or
cmp
sub
scas
sti
imul
xchg
pop
sbb
cmp
mov
xchg
jb
adc
xchg
sbbl
jmp
fdivrl
out
stos
arpl
addr16
or
adcb
addr16
push
daa
dec
out
adc
mov
fadds
mov
loopne
call
ljmp
dec
cmp
fcoms
lcall
mov
es
sub
loop
xchg
push
jmp
pop
cli
icebp
mov
pop
push
dec
cmp
adc
push
sbbl
and
xchg
and
mov
inc
push
out
clc
mov
cwtl
xchg
nop
repnz
cmp
and
sbb
inc
or
inc
dec
repz
enter
cmp
push
jbe
jle
adc
sbb
cmp
arpl
movsb
xor
movsl
in
rcrb
ljmp
sti
call
cmpsb
xchg
jns
nop
lret
adc
std
outsl
cmp
jbe
mov
call
hlt
pop
cmp
pop
imul
fptan
lock
cmc
popl
roll
cmp
mov
jmp
inc
push
repnz
dec
jno
call
pop
cmp
ljmp
mov
scas
insl
mov
jbe
sub
jp
icebp
das
push
xor
in
mov
mov
mov
sahf
jae
inc
and
mov
jmp
xor
dec
push
icebp
ds
jmp
inc
jle
jns
or
mov
xchg
ret
fwait
sub
adc
sbb
pop
shlb
int3
lcall
dec
sbb
call
stos
gs
mov
loope
aam
add
ficoms
push
mov
jmp
lock
ja
add
cmp
dec
xchg
dec
jmp
xchg
test
lock
xchg
add
addr16
leave
test
into
mov
mov
sahf
pop
pop
mov
loopw
ljmp
mov
inc
mov
xchg
mov
in
dec
sub
aad
mov
gs
pop
mov
call
js
jb
adc
lcall
mov
mov
inc
lahf
pop
jmp
push
mov
jecxz
call
sub
mov
hlt
jbe
popa
mov
test
xor
mov
mov
loop
jge
out
popf
jns
pop
addr16
lods
loopne
pushl
lcall
xor
scas
push
jg
call
into
dec
mov
xor
std
push
aad
sahf
enter
jl
nop
mov
fists
jno
stc
scas
or
inc
hlt
mov
mov
lcall
not
adc
ljmp
hlt
js
push
lahf
icebp
ss
pop
jo
and
jne
jo
ss
in
push
inc
fistps
jl
jg
cmp
cld
add
movl
jge
jl
decl
inc
nop
lock
dec
test
ret
pop
test
subb
out
jns
lock
out
insb
nop
pop
icebp
jmp
mov
mov
pop
jle
test
clc
je
mov
add
mov
aam
aad
adc
cmp
je
inc
mov
pushf
or
push
push
in
mov
sub
call
lahf
arpl
mov
loopne
lcall
bound
xchg
mov
dec
push
scas
push
adc
adcb
cmp
test
pop
inc
call
dec
fdiv
sti
gs
xchg
mov
push
sbb
jmp
push
lret
mov
dec
xchg
mov
cmp
jmp
push
scas
push
aas
iret
sbb
jmp
out
bound
cmpsl
mov
dec
jp
xor
mov
and
or
xchg
cmpsl
pop
push
rcl
dec
call
imul
mov
stos
cli
or
push
pop
stc
jnp
dec
out
scas
pop
jge
out
jns
pop
ljmp
pushl
std
mov
fsubrl
mov
fstps
psrld
and
fwait
add
adc
call
sbb
arpl
mov
xchg
ret
cwtl
out
jecxz
mov
fstps
mov
jae
test
xor
faddl
aad
insb
outsb
adc
pop
jecxz
xor
xchg
ljmp
jns
dec
inc
loope
cmp
xchg
sti
push
das
cwtl
mov
outsl
roll
jbe
ret
cli
stos
pop
adc
sbb
inc
or
push
shll
or
mov
loope
std
pop
div
out
out
out
lret
scas
hlt
fcos
call
shl
xlat
xor
lea
push
jns
fisttpll
xchg
cld
mov
incl
jb
adc
cld
dec
jae
jmpw
stos
jecxz
jno
lcall
adc
scas
mov
call
xchg
in
es
mov
or
xchg
cmp
jp
scas
add
call
lds
and
pop
push
dec
les
sbb
fs
call
push
lock
sub
lret
jp
out
and
loop
sbb
scas
adc
jb
jns
xchg
jbe
lds
push
sub
pushf
xchg
lcall
mov
cmp
cmp
ret
jb
dec
adc
imul
dec
push
jmp
addl
into
mov
gs
ljmp
sbb
sbb
ljmp
jb
mov
bound
inc
sub
loop
sbb
ficoml
int
jb
fimuls
xor
in
sub
test
dec
xchg
clc
movsl
js
adc
jns
rclb
add
call
hlt
hlt
ss
ljmp
notl
or
inc
fdivrp
aaa
cld
outsl
clc
shrl
jno
push
jge
es
in
add
push
ljmp
in
idivb
inc
cmp
pusha
push
sbb
and
sti
adc
mov
inc
outsb
inc
icebp
lret
or
inc
push
stc
ror
in
lods
sub
push
sub
mov
mov
call
cld
test
aam
popf
pop
mov
lds
sbb
jbe
insb
sar
mov
cmp
ret
pop
mov
icebp
sbb
jo
xlat
enter
cmp
push
adc
decl
aam
xchg
xor
or
cs
pusha
fiadds
and
xor
or
stc
mov
pop
cmp
out
daa
ffree
jns
inc
add
insb
and
popf
nop
add
mov
andl
ficoml
add
jmp
inc
mov
mov
loope
mov
xchg
mov
outsl
jmp
xchg
sub
andb
mov
xor
or
dec
and
and
mov
lahf
inc
jg
mov
hlt
sub
fwait
push
or
je
jle
inc
aas
fnsave
test
hlt
adc
lods
mov
cmpsl
iret
sub
in
repz
decl
pop
xor
push
mov
aad
add
cmp
in
hlt
movsb
in
inc
fnstsw
jle
cmp
aaa
cmc
nop
sbb
mov
scas
adc
imul
xor
in
cmpsl
loopne
mov
mov
popf
sbb
mov
or
hlt
pop
and
sub
mov
mov
or
pop
mov
ds
andb
int3
aaa
pop
lock
ljmpw
inc
jecxz
add
ficoms
add
xor
jge
icebp
jmp
test
dec
dec
fs
jbe
fsubl
mov
adc
sbb
clc
mov
jg
icebp
in
pop
mov
pop
sub
dec
xor
imul
fildl
mov
push
repnz
ret
inc
dec
adc
adc
lahf
mov
adc
jne
or
cmp
and
ret
stos
xor
andb
and
cli
inc
push
enter
incl
xor
cltd
imul
cmp
in
lahf
iret
xor
jbe
dec
jae
sub
jb
ljmp
xchg
dec
fstpl
mov
jecxz
outsb
inc
or
dec
inc
mov
mov
xor
pop
push
dec
cltd
jmp
sub
pop
in
xor
mov
sub
jmp
popf
mov
push
lcall
push
cld
mov
mov
js
xchg
inc
add
rcrl
cmp
mov
leave
shl
xchg
movsb
jbe
inc
incl
lcall
in
fs
jne
xchg
adc
sub
pop
mov
pop
sub
push
mov
inc
push
sbb
rclb
adc
cmp
xor
pop
mov
insl
jmp
popa
fs
adc
inc
mov
mov
sar
pop
adc
arpl
jno
jb
xor
test
jnp
rol
enter
ljmp
mov
mov
cli
mov
daa
aas
adc
push
sbb
xor
insl
sbb
lcall
jl
mov
sbb
dec
add
cmc
call
rolb
pop
cld
idiv
fnstsw
data16
aaa
data16
adc
sub
adc
aas
mov
jae
mov
scas
pop
bound
xor
xor
iret
lods
xor
pusha
outsb
fwait
sub
cli
out
int
je
flds
mov
sbb
cmp
mov
dec
mov
stc
xchg
incl
cmpsl
inc
enter
xlat
arpl
push
cmp
sti
lcall
sbbb
add
adc
pop
decl
xbegin
lahf
arpl
aam
fsub
or
pop
inc
pop
adc
xchg
cmp
loop
mov
fcmovnb
out
adc
stc
scas
ss
push
cmc
push
stos
xchg
adc
pop
mov
mov
cmpsb
pop
cwtl
sub
jmp
adcl
leave
in
adc
cltd
das
aam
push
lcall
fidivs
jge
jmp
dec
test
push
fimull
scas
ret
jg
push
jns
jnp
mov
sahf
push
xchg
mov
aaa
insb
clc
loop
lahf
or
inc
les
scas
hlt
ljmp
jg
inc
movsb
repz
xchg
les
pop
ffree
cld
inc
outsl
in
sar
add
push
lock
mov
mov
jns
ljmp
push
insb
or
push
int
fistpll
lret
test
inc
in
loop
mov
jno
scas
sbb
call
mov
stos
dec
lret
adc
dec
push
push
clc
shlb
mov
add
cli
mov
cmp
incl
adc
pop
xor
mov
int3
loope
nop
inc
lahf
es
cs
mov
in
incl
movsb
out
movsl
setb
inc
or
addr16
mov
xchg
jl
movsl
fisttps
mov
iret
jg
cmpsb
hlt
lcall
insl
in
dec
ret
mov
jp
cld
fistpll
sbb
pusha
int3
jmp
and
call
je
mov
imul
bound
in
mov
cltd
out
jnp
mov
cmp
test
lret
mov
adc
cmc
loop
js
pop
jp
mov
jmp
lcall
faddp
adc
push
inc
in
rolb
cwtl
pop
js
mov
and
decl
and
lcall
sbb
hlt
jmp
mov
jl
imul
jmp
scas
xchg
in
adc
call
test
xchg
aam
pop
int3
cmp
jo
out
push
dec
imul
loopne
mov
xchg
and
mov
and
adc
jg
inc
pop
jge
aaa
cwtl
aam
and
shrl
jno
mov
sarl
scas
aam
mov
jo
inc
jle
or
imul
jae
mov
adc
in
sbb
mov
and
in
ja
pop
cmpsl
leave
and
aaa
pop
ljmp
adc
inc
jle
adc
adc
inc
adc
sbb
sti
xor
nop
je
scas
subl
pop
lods
call
stc
movsb
cwtl
popf
add
and
lods
test
hlt
call
dec
xchg
popf
outsl
xor
mov
pop
adc
push
xor
std
idivb
imul
pop
repnz
hlt
pushl
dec
sub
sub
jnp
cld
fs
mov
sbb
pop
inc
sub
push
fs
loopne
fs
xchg
incl
inc
pusha
dec
lret
movsb
test
inc
popf
inc
push
mov
or
pop
int3
cmp
pop
stos
popa
call
fisubl
pop
or
xchg
movsl
pop
fbstp
xchg
inc
dec
xor
mov
inc
pusha
sbb
adc
xchg
add
incl
insb
dec
cmove
sub
fs
jb
jg
jne
rorb
cmpsb
dec
popf
icebp
mov
ffreep
push
ds
fisubrl
mov
adc
pop
stc
dec
out
lcall
dec
sbb
aaa
popa
loopne
nop
shlb
std
pop
or
sub
jle
lods
mov
xchg
mov
adc
jp
mov
lret
loop
inc
aam
sbb
xor
mov
add
jmp
shll
or
adc
inc
mov
icebp
xchg
xchg
aam
movsb
imul
ljmp
and
andb
fs
xchg
add
sbb
mov
jl
pop
inc
sbb
or
pop
imul
sub
cli
push
xor
fidivrl
je
sbb
stc
cli
add
leave
in
ds
xor
and
call
lods
clc
adc
inc
mov
icebp
lret
sub
call
ret
orb
ljmp
shll
xchg
adc
icebp
push
mov
mov
xchg
lcall
xchg
popf
adc
imull
ja
cmp
mov
push
or
jmp
lods
fwait
test
push
mov
mov
jbe
outsl
xchg
mov
lcall
lret
inc
adc
mov
shl
and
popa
hlt
adc
aaa
orl
mov
data16
inc
jecxz
ja
stos
dec
in
xlat
lods
fnstsw
adc
mov
pop
sbb
scas
jle
paddq
in
addb
out
jbe
shlb
daa
decl
mov
xchg
ret
sti
loop
fwait
mov
out
shlb
das
test
fldt
push
lods
xor
rolb
push
cmp
mov
jmp
xchg
lcall
dec
mov
push
fdivl
fstps
xchg
inc
xchg
cltd
fistpll
lcall
sbb
pusha
aaa
leave
test
push
cmpb
jle
fisubs
push
jecxz
jmp
jecxz
pop
xchg
subb
jmp
bound
sarb
push
cs
pop
xlat
test
fmuls
jb
in
mov
sub
pushf
inc
mov
pop
mov
flds
xchg
sub
xor
adc
cltd
mov
jmp
cmpsb
and
xchg
shr
adc
sub
mov
stos
ret
jae
js
dec
jno
inc
mov
ss
scas
int
rolb
fcompl
ljmp
ret
fwait
add
js
mov
popa
fdivrs
jecxz
ljmp
inc
data16
and
fists
mov
pusha
out
arpl
or
inc
shrb
adcb
push
aam
test
pop
push
sub
int
cmp
xor
sub
mov
es
xor
jo
cmp
pop
in
push
das
jns
jne
mov
pop
mov
xchg
test
call
cs
cli
cmp
movsl
pop
mov
enter
shrb
push
adc
pushl
aam
daa
mov
rcrb
outsl
push
adc
sub
and
push
cltd
clc
pop
xor
fsub
xchg
test
add
addr16
add
cltd
out
jo
ret
or
and
push
pop
xchg
movsl
dec
push
and
push
lahf
insb
push
inc
or
xchg
push
test
add
push
jno
jo
jnp
lret
addb
inc
mov
jbe
loop
or
mov
out
xor
push
mov
jo
imul
or
mov
add
lods
adc
imul
inc
sub
mov
add
dec
fisubl
nop
add
dec
inc
adc
outsb
adc
inc
pop
adc
add
pop
cmp
in
nop
mov
sbb
gs
adc
pusha
loope
popa
sbb
pop
push
outsl
outsl
insb
push
push
xchg
jo
push
mov
xor
dec
gs
push
mov
xchg
inc
lahf
sbb
mov
adc
mov
jb
je
mov
mov
into
adc
imul
ret
mov
dec
jne
js
stos
pop
inc
fbld
popa
inc
fmuls
insl
stc
outsb
jnp
jns
hlt
outsb
aaa
jae
imul
push
xor
inc
loope
push
push
pusha
mov
push
dec
mov
insl
push
bound
xor
inc
fwait
inc
dec
jb
mov
enter
outsb
inc
and
mov
pop
push
outsb
dec
popa
out
pop
xor
inc
insb
sbb
xchg
ret
jnp
mov
imul
mov
outsl
push
jl,pt
jp
xorl
mov
push
rcrb
pop
js
sbb
push
fwait
xlat
push
pop
ds
insb
jne
mov
mov
data16
xor
insl
clc
sub
aam
lock
jo
inc
push
fildl
xchg
xchg
inc
mov
inc
jo
pop
push
pop
push
addl
arpl
sbb
mov
push
js
enter
add
adc
sahf
jne
lods
push
push
and
sbb
jne
popa
gs
loopne
inc
jle
adc
cmp
lcall
loop
bound
pop
inc
and
sub
packuswb
push
pop
mov
jo
sub
xchg
mov
dec
inc
dec
sbb
sti
loope
vpcmpeqb
jae
pop
stos
mov
subb
das
shll
pop
mov
xchg
movsb
xchg
inc
in
ds
mov
xor
popa
jp
fs
xchg
cmp
or
fiaddl
popw
push
shll
fdivp
out
push
xor
push
cmp
dec
or
add
jne
sub
adc
notl
sub
dec
jae
jle
clc
push
mov
fdiv
cmp
adc
or
jae
or
inc
fimull
jbe
inc
jb
lret
arpl
ljmp
fadd
xchg
lods
xor
cmp
jne
pop
sbb
rol
sub
push
sarl
or
cmp
and
xor
sub
aas
jp
outsb
insl
test
imul
ss
roll
repz
fcomps
cltd
mov
push
sbb
lock
daa
icebp
ret
mov
mov
jp
outsl
jns
shll
sbb
pusha
pushf
fucom
aad
push
and
or
sbb
pop
pop
pop
xlat
outsl
dec
pusha
js
mov
push
inc
inc
xchg
inc
iret
sub
sbbl
push
sub
and
call
adc
pop
push
ja
or
adc
and
add
outsl
shrl
dec
inc
loope
adc
sahf
push
nop
and
jmp
mov
testl
jne
push
mov
dec
outsb
pop
sub
bound
jbe
daa
dec
sbb
push
push
aaa
inc
in
inc
out
mov
ret
and
cmc
push
pop
in
arpl
dec
rorl
in
cmp
arpl
cmp
pop
jae
adc
test
daa
jecxz
xchg
adc
add
lea
popa
fildll
pop
sbb
outsl
movsl
mov
pusha
rcrl
inc
lods
repz
leave
ljmp
push
push
and
out
outsl
cmc
dec
xor
icebp
sbb
cmpsl
adc
dec
test
dec
push
add
loope
or
mov
fwait
popa
cmpsb
repnz
cmp
gs
push
or
scas
sbb
jp
mov
aad
xchg
sarl
add
sbb
ret
test
fmul
loopne
xchg
shlb
or
cli
pop
lods
loopne
mov
fs
cmpsl
lock
jg
ss
cmp
out
and
inc
lahf
addr16
inc
sbb
mov
inc
xor
aaa
dec
sarl
and
movsl
out
push
fdivrl
and
ret
pop
fdivs
ret
sub
insb
cmp
sub
sbb
dec
and
jp
mov
lcall
sbb
push
fisttps
nop
popa
adc
ffreep
jmp
in
fsubs
fs
fs
loopne
inc
imul
outsl
push
inc
jb
xchg
inc
fcoms
lods
inc
aam
inc
push
into
jo
inc
inc
sub
push
arpl
mov
std
inc
imul
lea
fs
sbb
pusha
pop
push
mov
fs
ja
add
lock
insb
jle
push
movb
inc
dec
push
mov
ds
test
cmp
nop
pop
mov
jne
cmp
es
jl
js
es
popa
enter
and
call
push
jle
jmp
push
loopne
ds
pusha
adc
jmp
negb
xor
shlb
inc
dec
push
push
outsl
sub
shlb
sub
andb
cmc
mov
loopne
push
push
adc
ja
jbe
adc
pop
loopne
jg
jnp
or
dec
outsb
dec
in
adc
movsb
xchg
sub
ss
fwait
dec
jnp
ret
add
add
mov
dec
imul
movsb
dec
cmpsb
imul
dec
rcrl
mov
imul
or
xor
ret
pop
mov
loopne
shrb
mov
inc
xor
inc
jo
cli
fcomps
bound
inc
pusha
inc
jl
fs
pop
push
lods
jmp
std
push
jb
inc
jae
jo
mov
push
mov
jb
and
daa
shll
add
das
ficoml
pop
shll
xlat
cwtl
lock
rolb
or
dec
xchg
pushf
push
js
inc
cmc
add
xlat
adc
in
xchg
and
sub
fidivl
and
cltd
adc
cmpb
mov
add
in
inc
notl
push
adc
in
loope
pop
insl
addr16
push
and
lret
insb
or
nop
scas
arpl
jno
jbe
aas
imul
lcall
icebp
icebp
push
cld
pop
lret
test
pop
jmp
dec
inc
pop
fistl
ljmp
dec
jno
jecxz
insb
std
jmp
jb
mov
dec
sub
jns
insb
mov
scas
xchg
cld
popa
imul
add
lock
mov
daa
cmp
cmp
hlt
lods
and
leave
mov
xor
cmpsb
insb
adc
or
jg
outsb
ja
mov
mov
sbb
sbb
adcb
mov
fwait
loopne
insl
pop
push
dec
mov
popa
inc
sub
imul
adcl
cmp
mov
es
inc
mov
sub
rolb
inc
xor
in
enter
jno
inc
sbb
outsb
pusha
adc
data16
adc
lock
sub
mov
leave
xchg
icebp
pop
bound
arpl
sub
mov
push
lock
mov
dec
xchg
and
dec
popw
imul
push
mov
rol
ret
fdivs
jo
pop
adcl
jmp
mov
xchg
dec
scas
inc
sbb
mov
fs
inc
mov
jmp
pop
sbb
adc
lret
push
sub
lods
sub
mov
mov
lahf
adc
xchg
clc
loopne
add
and
xor
sbb
mov
push
addr16
fs
ficoms
out
adc
ficoml
mov
repz
ja
xchg
cltd
pop
fdivrl
sbb
adc
sub
pop
loope
jne
data16
mov
jo
add
pop
icebp
rorb
nop
sbb
es
xchg
mov
dec
imul
dec
add
cmp
cmp
xor
shlb
sub
inc
adc
fldenv
mov
sarb
jnp
repz
rolb
cmp
dec
jnp
verr
or
pop
lret
pop
fidivrl
or
jae
flds
add
pusha
pop
add
push
sbb
pop
dec
addb
cs
es
loopne
mov
and
add
and
outsb
push
cvtpi2ps
jb
popa
adc
jge
mov
out
inc
cs
out
data16
push
imul
fiadds
dec
loopne
outsb
inc
rcrb
mov
fsub
xchg
lock
lahf
add
insl
adc
mov
dec
adc
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
